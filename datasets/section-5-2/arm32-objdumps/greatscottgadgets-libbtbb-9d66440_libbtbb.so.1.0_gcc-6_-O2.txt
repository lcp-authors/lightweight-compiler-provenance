
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

000020e4 <.init>:
    20e4:	push	{r3, lr}
    20e8:	bl	2560 <__assert_fail@plt+0xc>
    20ec:	pop	{r3, pc}

Disassembly of section .plt:

000020f0 <calloc@plt-0x14>:
    20f0:	push	{lr}		; (str lr, [sp, #-4]!)
    20f4:	ldr	lr, [pc, #4]	; 2100 <calloc@plt-0x4>
    20f8:	add	lr, pc, lr
    20fc:	ldr	pc, [lr, #8]!
    2100:	andeq	r6, r2, r0, lsl #30

00002104 <calloc@plt>:
    2104:	add	ip, pc, #0, 12
    2108:	add	ip, ip, #155648	; 0x26000
    210c:	ldr	pc, [ip, #3840]!	; 0xf00

00002110 <raise@plt>:
    2110:	add	ip, pc, #0, 12
    2114:	add	ip, ip, #155648	; 0x26000
    2118:	ldr	pc, [ip, #3832]!	; 0xef8

0000211c <btbb_piconet_new@plt>:
    211c:	add	ip, pc, #0, 12
    2120:	add	ip, ip, #155648	; 0x26000
    2124:	ldr	pc, [ip, #3824]!	; 0xef0

00002128 <gen_hop_pattern@plt>:
    2128:	add	ip, pc, #0, 12
    212c:	add	ip, ip, #155648	; 0x26000
    2130:	ldr	pc, [ip, #3816]!	; 0xee8

00002134 <count_bits@plt>:
    2134:	add	ip, pc, #0, 12
    2138:	add	ip, ip, #155648	; 0x26000
    213c:	ldr	pc, [ip, #3808]!	; 0xee0

00002140 <__cxa_finalize@plt>:
    2140:	add	ip, pc, #0, 12
    2144:	add	ip, ip, #155648	; 0x26000
    2148:	ldr	pc, [ip, #3800]!	; 0xed8

0000214c <btbb_get_payload_packed@plt>:
    214c:	add	ip, pc, #0, 12
    2150:	add	ip, ip, #155648	; 0x26000
    2154:	ldr	pc, [ip, #3792]!	; 0xed0

00002158 <printf@plt>:
    2158:	add	ip, pc, #0, 12
    215c:	add	ip, ip, #155648	; 0x26000
    2160:	ldr	pc, [ip, #3784]!	; 0xec8

00002164 <fopen@plt>:
    2164:	add	ip, pc, #0, 12
    2168:	add	ip, ip, #155648	; 0x26000
    216c:	ldr	pc, [ip, #3776]!	; 0xec0

00002170 <lell_packet_is_data@plt>:
    2170:	add	ip, pc, #0, 12
    2174:	add	ip, ip, #155648	; 0x26000
    2178:	ldr	pc, [ip, #3768]!	; 0xeb8

0000217c <fflush@plt>:
    217c:	add	ip, pc, #0, 12
    2180:	add	ip, ip, #155648	; 0x26000
    2184:	ldr	pc, [ip, #3760]!	; 0xeb0

00002188 <btbb_packet_set_flag@plt>:
    2188:	add	ip, pc, #0, 12
    218c:	add	ip, ip, #155648	; 0x26000
    2190:	ldr	pc, [ip, #3752]!	; 0xea8

00002194 <pcapng_append_interface_option@plt>:
    2194:	add	ip, pc, #0, 12
    2198:	add	ip, ip, #155648	; 0x26000
    219c:	ldr	pc, [ip, #3744]!	; 0xea0

000021a0 <free@plt>:
    21a0:	add	ip, pc, #0, 12
    21a4:	add	ip, ip, #155648	; 0x26000
    21a8:	ldr	pc, [ip, #3736]!	; 0xe98

000021ac <btbb_packet_get_modulation@plt>:
    21ac:	add	ip, pc, #0, 12
    21b0:	add	ip, ip, #155648	; 0x26000
    21b4:	ldr	pc, [ip, #3728]!	; 0xe90

000021b8 <btbb_packet_get_ac_errors@plt>:
    21b8:	add	ip, pc, #0, 12
    21bc:	add	ip, ip, #155648	; 0x26000
    21c0:	ldr	pc, [ip, #3720]!	; 0xe88

000021c4 <memcpy@plt>:
    21c4:	add	ip, pc, #0, 12
    21c8:	add	ip, ip, #155648	; 0x26000
    21cc:	ldr	pc, [ip, #3712]!	; 0xe80

000021d0 <btbb_uap_from_header@plt>:
    21d0:	add	ip, pc, #0, 12
    21d4:	add	ip, ip, #155648	; 0x26000
    21d8:	ldr	pc, [ip, #3704]!	; 0xe78

000021dc <btbb_packet_get_flag@plt>:
    21dc:	add	ip, pc, #0, 12
    21e0:	add	ip, ip, #155648	; 0x26000
    21e4:	ldr	pc, [ip, #3696]!	; 0xe70

000021e8 <fhs@plt>:
    21e8:	add	ip, pc, #0, 12
    21ec:	add	ip, ip, #155648	; 0x26000
    21f0:	ldr	pc, [ip, #3688]!	; 0xe68

000021f4 <EV4@plt>:
    21f4:	add	ip, pc, #0, 12
    21f8:	add	ip, ip, #155648	; 0x26000
    21fc:	ldr	pc, [ip, #3680]!	; 0xe60

00002200 <btbb_piconet_get_uap@plt>:
    2200:	add	ip, pc, #0, 12
    2204:	add	ip, ip, #155648	; 0x26000
    2208:	ldr	pc, [ip, #3672]!	; 0xe58

0000220c <memcmp@plt>:
    220c:	add	ip, pc, #0, 12
    2210:	add	ip, ip, #155648	; 0x26000
    2214:	ldr	pc, [ip, #3664]!	; 0xe50

00002218 <lell_pcap_close@plt>:
    2218:	add	ip, pc, #0, 12
    221c:	add	ip, ip, #155648	; 0x26000
    2220:	ldr	pc, [ip, #3656]!	; 0xe48

00002224 <btbb_piconet_get_channel_seen@plt>:
    2224:	add	ip, pc, #0, 12
    2228:	add	ip, ip, #155648	; 0x26000
    222c:	ldr	pc, [ip, #3648]!	; 0xe40

00002230 <btbb_pcap_open@plt>:
    2230:	add	ip, pc, #0, 12
    2234:	add	ip, ip, #155648	; 0x26000
    2238:	ldr	pc, [ip, #3640]!	; 0xe38

0000223c <btbb_header_present@plt>:
    223c:	add	ip, pc, #0, 12
    2240:	add	ip, ip, #155648	; 0x26000
    2244:	ldr	pc, [ip, #3632]!	; 0xe30

00002248 <btbb_piconet_get_flag@plt>:
    2248:	add	ip, pc, #0, 12
    224c:	add	ip, ip, #155648	; 0x26000
    2250:	ldr	pc, [ip, #3624]!	; 0xe28

00002254 <pcapng_create@plt>:
    2254:	add	ip, pc, #0, 12
    2258:	add	ip, ip, #155648	; 0x26000
    225c:	ldr	pc, [ip, #3616]!	; 0xe20

00002260 <DM@plt>:
    2260:	add	ip, pc, #0, 12
    2264:	add	ip, ip, #155648	; 0x26000
    2268:	ldr	pc, [ip, #3608]!	; 0xe18

0000226c <btbb_piconet_set_flag@plt>:
    226c:	add	ip, pc, #0, 12
    2270:	add	ip, ip, #155648	; 0x26000
    2274:	ldr	pc, [ip, #3600]!	; 0xe10

00002278 <HV@plt>:
    2278:	add	ip, pc, #0, 12
    227c:	add	ip, ip, #155648	; 0x26000
    2280:	ldr	pc, [ip, #3592]!	; 0xe08

00002284 <perror@plt>:
    2284:	add	ip, pc, #0, 12
    2288:	add	ip, ip, #155648	; 0x26000
    228c:	ldr	pc, [ip, #3584]!	; 0xe00

00002290 <btbb_piconet_set_channel_seen@plt>:
    2290:	add	ip, pc, #0, 12
    2294:	add	ip, ip, #155648	; 0x26000
    2298:	ldr	pc, [ip, #3576]!	; 0xdf8

0000229c <perm_table_init@plt>:
    229c:	add	ip, pc, #0, 12
    22a0:	add	ip, ip, #155648	; 0x26000
    22a4:	ldr	pc, [ip, #3568]!	; 0xdf0

000022a8 <btbb_packet_set_uap@plt>:
    22a8:	add	ip, pc, #0, 12
    22ac:	add	ip, ip, #155648	; 0x26000
    22b0:	ldr	pc, [ip, #3560]!	; 0xde8

000022b4 <fwrite@plt>:
    22b4:	add	ip, pc, #0, 12
    22b8:	add	ip, ip, #155648	; 0x26000
    22bc:	ldr	pc, [ip, #3552]!	; 0xde0

000022c0 <btbb_gen_syncword@plt>:
    22c0:	add	ip, pc, #0, 12
    22c4:	add	ip, ip, #155648	; 0x26000
    22c8:	ldr	pc, [ip, #3544]!	; 0xdd8

000022cc <btbb_pcap_close@plt>:
    22cc:	add	ip, pc, #0, 12
    22d0:	add	ip, ip, #155648	; 0x26000
    22d4:	ldr	pc, [ip, #3536]!	; 0xdd0

000022d8 <crc_check@plt>:
    22d8:	add	ip, pc, #0, 12
    22dc:	add	ip, ip, #155648	; 0x26000
    22e0:	ldr	pc, [ip, #3528]!	; 0xdc8

000022e4 <btbb_decode@plt>:
    22e4:	add	ip, pc, #0, 12
    22e8:	add	ip, ip, #155648	; 0x26000
    22ec:	ldr	pc, [ip, #3520]!	; 0xdc0

000022f0 <btbb_winnow@plt>:
    22f0:	add	ip, pc, #0, 12
    22f4:	add	ip, ip, #155648	; 0x26000
    22f8:	ldr	pc, [ip, #3512]!	; 0xdb8

000022fc <lell_get_adv_type_str@plt>:
    22fc:	add	ip, pc, #0, 12
    2300:	add	ip, ip, #155648	; 0x26000
    2304:	ldr	pc, [ip, #3504]!	; 0xdb0

00002308 <get_hop_pattern@plt>:
    2308:	add	ip, pc, #0, 12
    230c:	add	ip, ip, #155648	; 0x26000
    2310:	ldr	pc, [ip, #3496]!	; 0xda8

00002314 <puts@plt>:
    2314:	add	ip, pc, #0, 12
    2318:	add	ip, ip, #155648	; 0x26000
    231c:	ldr	pc, [ip, #3488]!	; 0xda0

00002320 <malloc@plt>:
    2320:	add	ip, pc, #0, 12
    2324:	add	ip, ip, #155648	; 0x26000
    2328:	ldr	pc, [ip, #3480]!	; 0xd98

0000232c <try_hop@plt>:
    232c:	add	ip, pc, #0, 12
    2330:	add	ip, ip, #155648	; 0x26000
    2334:	ldr	pc, [ip, #3472]!	; 0xd90

00002338 <btbb_packet_new@plt>:
    2338:	add	ip, pc, #0, 12
    233c:	add	ip, ip, #155648	; 0x26000
    2340:	ldr	pc, [ip, #3464]!	; 0xd88

00002344 <btbb_pcap_dump@plt>:
    2344:	add	ip, pc, #0, 12
    2348:	add	ip, ip, #155648	; 0x26000
    234c:	ldr	pc, [ip, #3456]!	; 0xd80

00002350 <__gmon_start__@plt>:
    2350:	add	ip, pc, #0, 12
    2354:	add	ip, ip, #155648	; 0x26000
    2358:	ldr	pc, [ip, #3448]!	; 0xd78

0000235c <open@plt>:
    235c:	add	ip, pc, #0, 12
    2360:	add	ip, ip, #155648	; 0x26000
    2364:	ldr	pc, [ip, #3440]!	; 0xd70

00002368 <__ctype_b_loc@plt>:
    2368:	add	ip, pc, #0, 12
    236c:	add	ip, ip, #155648	; 0x26000
    2370:	ldr	pc, [ip, #3432]!	; 0xd68

00002374 <exit@plt>:
    2374:	add	ip, pc, #0, 12
    2378:	add	ip, ip, #155648	; 0x26000
    237c:	ldr	pc, [ip, #3424]!	; 0xd60

00002380 <btbb_packet_get_payload_length@plt>:
    2380:	add	ip, pc, #0, 12
    2384:	add	ip, ip, #155648	; 0x26000
    2388:	ldr	pc, [ip, #3416]!	; 0xd58

0000238c <strlen@plt>:
    238c:	add	ip, pc, #0, 12
    2390:	add	ip, ip, #155648	; 0x26000
    2394:	ldr	pc, [ip, #3408]!	; 0xd50

00002398 <btbb_decode_header@plt>:
    2398:	add	ip, pc, #0, 12
    239c:	add	ip, ip, #155648	; 0x26000
    23a0:	ldr	pc, [ip, #3400]!	; 0xd48

000023a4 <mmap@plt>:
    23a4:	add	ip, pc, #0, 12
    23a8:	add	ip, ip, #155648	; 0x26000
    23ac:	ldr	pc, [ip, #3392]!	; 0xd40

000023b0 <btbb_packet_get_header_packed@plt>:
    23b0:	add	ip, pc, #0, 12
    23b4:	add	ip, ip, #155648	; 0x26000
    23b8:	ldr	pc, [ip, #3384]!	; 0xd38

000023bc <lell_pcapng_record_connect_req@plt>:
    23bc:	add	ip, pc, #0, 12
    23c0:	add	ip, ip, #155648	; 0x26000
    23c4:	ldr	pc, [ip, #3376]!	; 0xd30

000023c8 <lell_get_channel_k@plt>:
    23c8:	add	ip, pc, #0, 12
    23cc:	add	ip, ip, #155648	; 0x26000
    23d0:	ldr	pc, [ip, #3368]!	; 0xd28

000023d4 <fprintf@plt>:
    23d4:	add	ip, pc, #0, 12
    23d8:	add	ip, ip, #155648	; 0x26000
    23dc:	ldr	pc, [ip, #3360]!	; 0xd20

000023e0 <getpagesize@plt>:
    23e0:	add	ip, pc, #0, 12
    23e4:	add	ip, ip, #155648	; 0x26000
    23e8:	ldr	pc, [ip, #3352]!	; 0xd18

000023ec <pcapng_append_packet@plt>:
    23ec:	add	ip, pc, #0, 12
    23f0:	add	ip, ip, #155648	; 0x26000
    23f4:	ldr	pc, [ip, #3344]!	; 0xd10

000023f8 <btbb_packet_get_transport@plt>:
    23f8:	add	ip, pc, #0, 12
    23fc:	add	ip, ip, #155648	; 0x26000
    2400:	ldr	pc, [ip, #3336]!	; 0xd08

00002404 <__errno_location@plt>:
    2404:	add	ip, pc, #0, 12
    2408:	add	ip, ip, #155648	; 0x26000
    240c:	ldr	pc, [ip, #3328]!	; 0xd00

00002410 <find_known_lap@plt>:
    2410:	add	ip, pc, #0, 12
    2414:	add	ip, ip, #155648	; 0x26000
    2418:	ldr	pc, [ip, #3320]!	; 0xcf8

0000241c <address_precalc@plt>:
    241c:	add	ip, pc, #0, 12
    2420:	add	ip, ip, #155648	; 0x26000
    2424:	ldr	pc, [ip, #3312]!	; 0xcf0

00002428 <memset@plt>:
    2428:	add	ip, pc, #0, 12
    242c:	add	ip, ip, #155648	; 0x26000
    2430:	ldr	pc, [ip, #3304]!	; 0xce8

00002434 <putchar@plt>:
    2434:	add	ip, pc, #0, 12
    2438:	add	ip, ip, #155648	; 0x26000
    243c:	ldr	pc, [ip, #3296]!	; 0xce0

00002440 <strncpy@plt>:
    2440:	add	ip, pc, #0, 12
    2444:	add	ip, ip, #155648	; 0x26000
    2448:	ldr	pc, [ip, #3288]!	; 0xcd8

0000244c <EV3@plt>:
    244c:	add	ip, pc, #0, 12
    2450:	add	ip, ip, #155648	; 0x26000
    2454:	ldr	pc, [ip, #3280]!	; 0xcd0

00002458 <btbb_packet_get_lap@plt>:
    2458:	add	ip, pc, #0, 12
    245c:	add	ip, ip, #155648	; 0x26000
    2460:	ldr	pc, [ip, #3272]!	; 0xcc8

00002464 <lell_packet_new@plt>:
    2464:	add	ip, pc, #0, 12
    2468:	add	ip, ip, #155648	; 0x26000
    246c:	ldr	pc, [ip, #3264]!	; 0xcc0

00002470 <bt_compidtostr@plt>:
    2470:	add	ip, pc, #0, 12
    2474:	add	ip, ip, #155648	; 0x26000
    2478:	ldr	pc, [ip, #3256]!	; 0xcb8

0000247c <write@plt>:
    247c:	add	ip, pc, #0, 12
    2480:	add	ip, ip, #155648	; 0x26000
    2484:	ldr	pc, [ip, #3248]!	; 0xcb0

00002488 <get_piconet@plt>:
    2488:	add	ip, pc, #0, 12
    248c:	add	ip, ip, #155648	; 0x26000
    2490:	ldr	pc, [ip, #3240]!	; 0xca8

00002494 <perm5@plt>:
    2494:	add	ip, pc, #0, 12
    2498:	add	ip, ip, #155648	; 0x26000
    249c:	ldr	pc, [ip, #3232]!	; 0xca0

000024a0 <fclose@plt>:
    24a0:	add	ip, pc, #0, 12
    24a4:	add	ip, ip, #155648	; 0x26000
    24a8:	ldr	pc, [ip, #3224]!	; 0xc98

000024ac <EV5@plt>:
    24ac:	add	ip, pc, #0, 12
    24b0:	add	ip, ip, #155648	; 0x26000
    24b4:	ldr	pc, [ip, #3216]!	; 0xc90

000024b8 <munmap@plt>:
    24b8:	add	ip, pc, #0, 12
    24bc:	add	ip, ip, #155648	; 0x26000
    24c0:	ldr	pc, [ip, #3208]!	; 0xc88

000024c4 <DH@plt>:
    24c4:	add	ip, pc, #0, 12
    24c8:	add	ip, ip, #155648	; 0x26000
    24cc:	ldr	pc, [ip, #3200]!	; 0xc80

000024d0 <btbb_packet_get_channel@plt>:
    24d0:	add	ip, pc, #0, 12
    24d4:	add	ip, ip, #155648	; 0x26000
    24d8:	ldr	pc, [ip, #3192]!	; 0xc78

000024dc <precalc@plt>:
    24dc:	add	ip, pc, #0, 12
    24e0:	add	ip, ip, #155648	; 0x26000
    24e4:	ldr	pc, [ip, #3184]!	; 0xc70

000024e8 <btbb_decode_payload@plt>:
    24e8:	add	ip, pc, #0, 12
    24ec:	add	ip, ip, #155648	; 0x26000
    24f0:	ldr	pc, [ip, #3176]!	; 0xc68

000024f4 <promiscuous_packet_search@plt>:
    24f4:	add	ip, pc, #0, 12
    24f8:	add	ip, ip, #155648	; 0x26000
    24fc:	ldr	pc, [ip, #3168]!	; 0xc60

00002500 <pcapng_close@plt>:
    2500:	add	ip, pc, #0, 12
    2504:	add	ip, ip, #155648	; 0x26000
    2508:	ldr	pc, [ip, #3160]!	; 0xc58

0000250c <btbb_print_packet@plt>:
    250c:	add	ip, pc, #0, 12
    2510:	add	ip, ip, #155648	; 0x26000
    2514:	ldr	pc, [ip, #3152]!	; 0xc50

00002518 <fast_perm@plt>:
    2518:	add	ip, pc, #0, 12
    251c:	add	ip, ip, #155648	; 0x26000
    2520:	ldr	pc, [ip, #3144]!	; 0xc48

00002524 <try_clock@plt>:
    2524:	add	ip, pc, #0, 12
    2528:	add	ip, ip, #155648	; 0x26000
    252c:	ldr	pc, [ip, #3136]!	; 0xc40

00002530 <btbb_init_hop_reversal@plt>:
    2530:	add	ip, pc, #0, 12
    2534:	add	ip, ip, #155648	; 0x26000
    2538:	ldr	pc, [ip, #3128]!	; 0xc38

0000253c <btbb_init_piconet@plt>:
    253c:	add	ip, pc, #0, 12
    2540:	add	ip, ip, #155648	; 0x26000
    2544:	ldr	pc, [ip, #3120]!	; 0xc30

00002548 <close@plt>:
    2548:	add	ip, pc, #0, 12
    254c:	add	ip, ip, #155648	; 0x26000
    2550:	ldr	pc, [ip, #3112]!	; 0xc28

00002554 <__assert_fail@plt>:
    2554:	add	ip, pc, #0, 12
    2558:	add	ip, ip, #155648	; 0x26000
    255c:	ldr	pc, [ip, #3104]!	; 0xc20

Disassembly of section .text:

00002560 <btbb_gen_syncword@@Base-0xa88>:
    2560:	ldr	r3, [pc, #20]	; 257c <__assert_fail@plt+0x28>
    2564:	ldr	r2, [pc, #20]	; 2580 <__assert_fail@plt+0x2c>
    2568:	add	r3, pc, r3
    256c:	ldr	r2, [r3, r2]
    2570:	cmp	r2, #0
    2574:	bxeq	lr
    2578:	b	2350 <__gmon_start__@plt>
    257c:	muleq	r2, r0, sl
    2580:	muleq	r0, r4, r1
    2584:	ldr	r3, [pc, #52]	; 25c0 <__assert_fail@plt+0x6c>
    2588:	ldr	r0, [pc, #52]	; 25c4 <__assert_fail@plt+0x70>
    258c:	add	r3, pc, r3
    2590:	add	r0, pc, r0
    2594:	add	r3, r3, #3
    2598:	sub	r3, r3, r0
    259c:	cmp	r3, #6
    25a0:	ldr	r3, [pc, #32]	; 25c8 <__assert_fail@plt+0x74>
    25a4:	add	r3, pc, r3
    25a8:	bxls	lr
    25ac:	ldr	r2, [pc, #24]	; 25cc <__assert_fail@plt+0x78>
    25b0:	ldr	r3, [r3, r2]
    25b4:	cmp	r3, #0
    25b8:	bxeq	lr
    25bc:	bx	r3
    25c0:	andeq	r6, r2, r8, lsl ip
    25c4:	andeq	r6, r2, r4, lsl ip
    25c8:	andeq	r6, r2, r4, asr sl
    25cc:	andeq	r0, r0, r4, lsl #3
    25d0:	ldr	r1, [pc, #56]	; 2610 <__assert_fail@plt+0xbc>
    25d4:	ldr	r0, [pc, #56]	; 2614 <__assert_fail@plt+0xc0>
    25d8:	add	r1, pc, r1
    25dc:	add	r0, pc, r0
    25e0:	sub	r1, r1, r0
    25e4:	ldr	r3, [pc, #44]	; 2618 <__assert_fail@plt+0xc4>
    25e8:	asr	r1, r1, #2
    25ec:	add	r3, pc, r3
    25f0:	add	r1, r1, r1, lsr #31
    25f4:	asrs	r1, r1, #1
    25f8:	bxeq	lr
    25fc:	ldr	r2, [pc, #24]	; 261c <__assert_fail@plt+0xc8>
    2600:	ldr	r3, [r3, r2]
    2604:	cmp	r3, #0
    2608:	bxeq	lr
    260c:	bx	r3
    2610:	andeq	r6, r2, ip, asr #23
    2614:	andeq	r6, r2, r8, asr #23
    2618:	andeq	r6, r2, ip, lsl #20
    261c:	andeq	r0, r0, r0, lsr #3
    2620:	ldr	r3, [pc, #76]	; 2674 <__assert_fail@plt+0x120>
    2624:	ldr	r2, [pc, #76]	; 2678 <__assert_fail@plt+0x124>
    2628:	add	r3, pc, r3
    262c:	add	r2, pc, r2
    2630:	ldrb	r3, [r3]
    2634:	cmp	r3, #0
    2638:	bxne	lr
    263c:	ldr	r3, [pc, #56]	; 267c <__assert_fail@plt+0x128>
    2640:	push	{r4, lr}
    2644:	ldr	r3, [r2, r3]
    2648:	cmp	r3, #0
    264c:	beq	265c <__assert_fail@plt+0x108>
    2650:	ldr	r3, [pc, #40]	; 2680 <__assert_fail@plt+0x12c>
    2654:	ldr	r0, [pc, r3]
    2658:	bl	2140 <__cxa_finalize@plt>
    265c:	bl	2584 <__assert_fail@plt+0x30>
    2660:	ldr	r3, [pc, #28]	; 2684 <__assert_fail@plt+0x130>
    2664:	mov	r2, #1
    2668:	add	r3, pc, r3
    266c:	strb	r2, [r3]
    2670:	pop	{r4, pc}
    2674:	andeq	r6, r2, ip, ror fp
    2678:	andeq	r6, r2, ip, asr #19
    267c:	andeq	r0, r0, r0, lsl #3
    2680:	andeq	r6, r2, r8, asr #22
    2684:	andeq	r6, r2, ip, lsr fp
    2688:	ldr	r0, [pc, #56]	; 26c8 <__assert_fail@plt+0x174>
    268c:	ldr	r3, [pc, #56]	; 26cc <__assert_fail@plt+0x178>
    2690:	add	r0, pc, r0
    2694:	ldr	r2, [r0]
    2698:	add	r3, pc, r3
    269c:	cmp	r2, #0
    26a0:	bne	26a8 <__assert_fail@plt+0x154>
    26a4:	b	25d0 <__assert_fail@plt+0x7c>
    26a8:	ldr	r2, [pc, #32]	; 26d0 <__assert_fail@plt+0x17c>
    26ac:	ldr	r3, [r3, r2]
    26b0:	cmp	r3, #0
    26b4:	beq	26a4 <__assert_fail@plt+0x150>
    26b8:	push	{r4, lr}
    26bc:	blx	r3
    26c0:	pop	{r4, lr}
    26c4:	b	25d0 <__assert_fail@plt+0x7c>
    26c8:	andeq	r6, r2, ip, ror r7
    26cc:	andeq	r6, r2, r0, ror #18
    26d0:	muleq	r0, r8, r1
    26d4:	andeq	r0, r0, r0
    26d8:	lsr	ip, r1, #24
    26dc:	ldr	r2, [pc, #112]	; 2754 <__assert_fail@plt+0x200>
    26e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    26e4:	and	r4, r1, #255	; 0xff
    26e8:	ldr	r3, [pc, #104]	; 2758 <__assert_fail@plt+0x204>
    26ec:	lsr	r6, r1, #8
    26f0:	add	r2, pc, r2
    26f4:	lsl	ip, ip, #3
    26f8:	lsl	lr, r4, #3
    26fc:	add	r3, pc, r3
    2700:	lsr	r4, r1, #16
    2704:	and	r6, r6, #255	; 0xff
    2708:	and	r8, r4, #255	; 0xff
    270c:	sub	r1, r3, #4080	; 0xff0
    2710:	ldrd	r4, [r2, ip]
    2714:	add	r2, r2, #2048	; 0x800
    2718:	add	r6, r1, r6, lsl #3
    271c:	sub	r3, r3, #2032	; 0x7f0
    2720:	ldrd	sl, [r2, lr]
    2724:	add	r3, r3, r8, lsl #3
    2728:	ldrd	r6, [r6, #-8]
    272c:	eor	r4, r4, r0
    2730:	ldrd	r0, [r3, #-8]
    2734:	eor	r4, r4, sl
    2738:	eor	r5, r5, fp
    273c:	eor	r4, r4, r6
    2740:	eor	r5, r5, r7
    2744:	mov	r9, #0
    2748:	eor	r0, r0, r4
    274c:	eor	r1, r1, r5
    2750:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2754:	andeq	sp, r0, r8, lsr #1
    2758:	muleq	r0, r4, r0
    275c:	lsl	r3, r0, #7
    2760:	asr	r1, r0, #5
    2764:	orr	r3, r3, r0, lsr #7
    2768:	and	r1, r1, #2
    276c:	asr	r2, r0, #3
    2770:	orr	r3, r3, r1
    2774:	and	r2, r2, #4
    2778:	asr	r1, r0, #1
    277c:	orr	r3, r3, r2
    2780:	and	r1, r1, #8
    2784:	lsl	r2, r0, #1
    2788:	orr	r3, r3, r1
    278c:	and	r2, r2, #16
    2790:	lsl	r1, r0, #3
    2794:	orr	r3, r3, r2
    2798:	and	r1, r1, #32
    279c:	lsl	r2, r0, #5
    27a0:	orr	r0, r3, r1
    27a4:	and	r3, r2, #64	; 0x40
    27a8:	orr	r0, r0, r3
    27ac:	uxtb	r0, r0
    27b0:	bx	lr
    27b4:	cmp	r2, #0
    27b8:	push	{r4, r5, r6, lr}
    27bc:	ble	2834 <__assert_fail@plt+0x2e0>
    27c0:	add	r5, r1, r2
    27c4:	mov	r4, #0
    27c8:	ldrb	lr, [r0, #2]
    27cc:	ldrb	ip, [r0]
    27d0:	ldrb	r3, [r0, #1]
    27d4:	add	r0, r0, #3
    27d8:	orr	r6, ip, lr
    27dc:	and	r3, r3, r6
    27e0:	and	ip, ip, lr
    27e4:	orr	r3, r3, ip
    27e8:	strb	r3, [r1], #1
    27ec:	ldrb	ip, [r0, #-3]
    27f0:	ldrb	lr, [r0, #-2]
    27f4:	ldrb	r6, [r0, #-1]
    27f8:	cmp	r5, r1
    27fc:	eor	r3, ip, lr
    2800:	eor	lr, lr, r6
    2804:	orr	r3, r3, lr
    2808:	eor	ip, ip, r6
    280c:	orr	r3, r3, ip
    2810:	add	r4, r4, r3
    2814:	bne	27c8 <__assert_fail@plt+0x274>
    2818:	cmp	r2, #0
    281c:	add	r3, r2, #3
    2820:	movlt	r2, r3
    2824:	cmp	r4, r2, asr #2
    2828:	movlt	r0, #1
    282c:	movge	r0, #0
    2830:	pop	{r4, r5, r6, pc}
    2834:	mov	r4, #0
    2838:	b	2818 <__assert_fail@plt+0x2c4>
    283c:	mov	r2, #9
    2840:	tst	r1, #128	; 0x80
    2844:	eorne	r1, r1, #101	; 0x65
    2848:	asr	r3, r0, r2
    284c:	eor	r3, r3, r1, lsr #7
    2850:	and	r3, r3, #1
    2854:	sub	r2, r2, #1
    2858:	orr	r1, r3, r1, lsl #1
    285c:	cmn	r2, #1
    2860:	uxtb	r1, r1
    2864:	bne	2840 <__assert_fail@plt+0x2ec>
    2868:	mov	r0, r1
    286c:	b	275c <__assert_fail@plt+0x208>
    2870:	push	{r4, r5, r6, lr}
    2874:	mov	r4, r0
    2878:	ldr	r5, [r0, #64]	; 0x40
    287c:	add	r6, r0, #68	; 0x44
    2880:	ldrb	r0, [r0, #9]
    2884:	bl	275c <__assert_fail@plt+0x208>
    2888:	sub	r5, r5, #2
    288c:	lsl	r5, r5, #3
    2890:	cmp	r5, #0
    2894:	lsl	r0, r0, #8
    2898:	uxth	r1, r0
    289c:	ble	28e4 <__assert_fail@plt+0x390>
    28a0:	mov	r3, #0
    28a4:	ldrb	r2, [r6, r3]
    28a8:	lsr	r0, r1, #1
    28ac:	add	r3, r3, #1
    28b0:	eor	r2, r2, r1
    28b4:	uxth	r3, r3
    28b8:	orr	r0, r0, r2, lsl #15
    28bc:	cmp	r5, r3
    28c0:	sxth	r0, r0
    28c4:	lsr	r2, r0, #5
    28c8:	and	r2, r2, #1024	; 0x400
    28cc:	eor	r0, r0, r2
    28d0:	lsr	r2, r0, #12
    28d4:	and	r2, r2, #8
    28d8:	eor	r0, r0, r2
    28dc:	uxth	r1, r0
    28e0:	bgt	28a4 <__assert_fail@plt+0x350>
    28e4:	add	r5, r5, #67	; 0x43
    28e8:	mov	r3, #0
    28ec:	add	r4, r4, r5
    28f0:	mov	r2, r3
    28f4:	ldrb	r0, [r4, #1]!
    28f8:	orr	r3, r3, r0, lsl r2
    28fc:	add	r2, r2, #1
    2900:	cmp	r2, #16
    2904:	uxth	r3, r3
    2908:	bne	28f4 <__assert_fail@plt+0x3a0>
    290c:	sub	r0, r3, r1
    2910:	clz	r0, r0
    2914:	lsr	r0, r0, #5
    2918:	pop	{r4, r5, r6, pc}
    291c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2920:	mov	r8, r1
    2924:	ldr	r3, [pc, #540]	; 2b48 <__assert_fail@plt+0x5f4>
    2928:	mov	r5, r0
    292c:	smull	r3, r2, r3, r1
    2930:	asr	r3, r1, #31
    2934:	rsb	r3, r3, r2, asr #2
    2938:	add	r3, r3, r3, lsl #2
    293c:	sub	r3, r1, r3, lsl #1
    2940:	ands	r3, r3, #255	; 0xff
    2944:	rsbne	r3, r3, #10
    2948:	addne	r8, r1, r3
    294c:	mov	r0, r8
    2950:	bl	2320 <malloc@plt>
    2954:	cmp	r8, #0
    2958:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    295c:	ldr	r9, [pc, #488]	; 2b4c <__assert_fail@plt+0x5f8>
    2960:	mov	r1, #0
    2964:	add	r4, r5, #9
    2968:	add	r9, pc, r9
    296c:	mov	r7, r1
    2970:	sub	r5, r5, #1
    2974:	sub	r6, r0, #1
    2978:	mov	r3, r6
    297c:	mov	r2, r5
    2980:	ldrb	ip, [r2, #1]!
    2984:	cmp	r4, r2
    2988:	strb	ip, [r3, #1]!
    298c:	bne	2980 <__assert_fail@plt+0x42c>
    2990:	mov	sl, r5
    2994:	mov	ip, r7
    2998:	mov	r3, #0
    299c:	ldrb	lr, [sl, #1]!
    29a0:	orr	ip, ip, lr, lsl r3
    29a4:	add	r3, r3, #1
    29a8:	cmp	r3, #10
    29ac:	uxth	ip, ip
    29b0:	bne	299c <__assert_fail@plt+0x448>
    29b4:	mov	sl, r7
    29b8:	mov	r3, #0
    29bc:	ldrb	lr, [r2, #1]!
    29c0:	orr	sl, sl, lr, lsl r3
    29c4:	add	r3, r3, #1
    29c8:	cmp	r3, #5
    29cc:	uxtb	sl, sl
    29d0:	bne	29bc <__assert_fail@plt+0x468>
    29d4:	add	lr, r9, #8
    29d8:	mov	fp, r7
    29dc:	mov	r3, #0
    29e0:	asr	r2, ip, r3
    29e4:	tst	r2, #1
    29e8:	add	r3, r3, #1
    29ec:	ldrhne	r2, [lr]
    29f0:	add	lr, lr, #2
    29f4:	eorne	fp, fp, r2
    29f8:	cmp	r3, #10
    29fc:	bne	29e0 <__assert_fail@plt+0x48c>
    2a00:	eor	sl, sl, fp, lsr #10
    2a04:	sub	r3, sl, #1
    2a08:	tst	r3, sl
    2a0c:	beq	2a90 <__assert_fail@plt+0x53c>
    2a10:	sub	sl, sl, #7
    2a14:	cmp	sl, #24
    2a18:	addls	pc, pc, sl, lsl #2
    2a1c:	b	2b3c <__assert_fail@plt+0x5e8>
    2a20:	b	2b2c <__assert_fail@plt+0x5d8>
    2a24:	b	2b3c <__assert_fail@plt+0x5e8>
    2a28:	b	2b3c <__assert_fail@plt+0x5e8>
    2a2c:	b	2b3c <__assert_fail@plt+0x5e8>
    2a30:	b	2b1c <__assert_fail@plt+0x5c8>
    2a34:	b	2b3c <__assert_fail@plt+0x5e8>
    2a38:	b	2b0c <__assert_fail@plt+0x5b8>
    2a3c:	b	2afc <__assert_fail@plt+0x5a8>
    2a40:	b	2b3c <__assert_fail@plt+0x5e8>
    2a44:	b	2b3c <__assert_fail@plt+0x5e8>
    2a48:	b	2b3c <__assert_fail@plt+0x5e8>
    2a4c:	b	2b3c <__assert_fail@plt+0x5e8>
    2a50:	b	2aec <__assert_fail@plt+0x598>
    2a54:	b	2b3c <__assert_fail@plt+0x5e8>
    2a58:	b	2adc <__assert_fail@plt+0x588>
    2a5c:	b	2acc <__assert_fail@plt+0x578>
    2a60:	b	2b3c <__assert_fail@plt+0x5e8>
    2a64:	b	2b3c <__assert_fail@plt+0x5e8>
    2a68:	b	2b3c <__assert_fail@plt+0x5e8>
    2a6c:	b	2a84 <__assert_fail@plt+0x530>
    2a70:	b	2b3c <__assert_fail@plt+0x5e8>
    2a74:	b	2abc <__assert_fail@plt+0x568>
    2a78:	b	2b3c <__assert_fail@plt+0x5e8>
    2a7c:	b	2b3c <__assert_fail@plt+0x5e8>
    2a80:	b	2aac <__assert_fail@plt+0x558>
    2a84:	ldrb	r3, [r6, #8]
    2a88:	eor	r3, r3, #1
    2a8c:	strb	r3, [r6, #8]
    2a90:	add	r1, r1, #10
    2a94:	cmp	r8, r1
    2a98:	add	r4, r4, #15
    2a9c:	add	r5, r5, #15
    2aa0:	add	r6, r6, #10
    2aa4:	bgt	2978 <__assert_fail@plt+0x424>
    2aa8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2aac:	ldrb	r3, [r6, #9]
    2ab0:	eor	r3, r3, #1
    2ab4:	strb	r3, [r6, #9]
    2ab8:	b	2a90 <__assert_fail@plt+0x53c>
    2abc:	ldrb	r3, [r6, #5]
    2ac0:	eor	r3, r3, #1
    2ac4:	strb	r3, [r6, #5]
    2ac8:	b	2a90 <__assert_fail@plt+0x53c>
    2acc:	ldrb	r3, [r6, #2]
    2ad0:	eor	r3, r3, #1
    2ad4:	strb	r3, [r6, #2]
    2ad8:	b	2a90 <__assert_fail@plt+0x53c>
    2adc:	ldrb	r3, [r6, #10]
    2ae0:	eor	r3, r3, #1
    2ae4:	strb	r3, [r6, #10]
    2ae8:	b	2a90 <__assert_fail@plt+0x53c>
    2aec:	ldrb	r3, [r6, #6]
    2af0:	eor	r3, r3, #1
    2af4:	strb	r3, [r6, #6]
    2af8:	b	2a90 <__assert_fail@plt+0x53c>
    2afc:	ldrb	r3, [r6, #4]
    2b00:	eor	r3, r3, #1
    2b04:	strb	r3, [r6, #4]
    2b08:	b	2a90 <__assert_fail@plt+0x53c>
    2b0c:	ldrb	r3, [r6, #7]
    2b10:	eor	r3, r3, #1
    2b14:	strb	r3, [r6, #7]
    2b18:	b	2a90 <__assert_fail@plt+0x53c>
    2b1c:	ldrb	r3, [r6, #1]
    2b20:	eor	r3, r3, #1
    2b24:	strb	r3, [r6, #1]
    2b28:	b	2a90 <__assert_fail@plt+0x53c>
    2b2c:	ldrb	r3, [r6, #3]
    2b30:	eor	r3, r3, #1
    2b34:	strb	r3, [r6, #3]
    2b38:	b	2a90 <__assert_fail@plt+0x53c>
    2b3c:	bl	21a0 <free@plt>
    2b40:	mov	r0, #0
    2b44:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2b48:	strbtvs	r6, [r6], -r7, ror #12
    2b4c:	andeq	lr, r0, r8, lsr #28
    2b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2b54:	sub	sp, sp, #52	; 0x34
    2b58:	sub	r3, r3, #1
    2b5c:	cmp	r2, #57	; 0x39
    2b60:	str	r3, [sp, #40]	; 0x28
    2b64:	bgt	2f24 <__assert_fail@plt+0x9d0>
    2b68:	ldr	r3, [pc, #1128]	; 2fd8 <__assert_fail@plt+0xa84>
    2b6c:	strd	r0, [sp, #32]
    2b70:	add	r3, pc, r3
    2b74:	str	r3, [sp, #44]	; 0x2c
    2b78:	add	r3, r2, #1
    2b7c:	str	r3, [sp, #16]
    2b80:	b	2bb0 <__assert_fail@plt+0x65c>
    2b84:	mov	r0, r4
    2b88:	mov	r1, r5
    2b8c:	mov	r3, lr
    2b90:	mov	r2, ip
    2b94:	mov	r4, ip
    2b98:	bl	2b50 <__assert_fail@plt+0x5fc>
    2b9c:	ldr	r3, [sp, #16]
    2ba0:	cmp	r4, #57	; 0x39
    2ba4:	add	r3, r3, #1
    2ba8:	str	r3, [sp, #16]
    2bac:	bgt	2f24 <__assert_fail@plt+0x9d0>
    2bb0:	ldr	ip, [sp, #16]
    2bb4:	mov	r8, #1
    2bb8:	sub	r2, ip, #33	; 0x21
    2bbc:	sub	r3, ip, #1
    2bc0:	lsl	r2, r8, r2
    2bc4:	str	r2, [sp, #4]
    2bc8:	ldr	r1, [sp, #4]
    2bcc:	rsb	r2, r3, #32
    2bd0:	lsl	r3, r8, r3
    2bd4:	orr	r2, r1, r8, lsr r2
    2bd8:	str	r3, [sp]
    2bdc:	str	r2, [sp, #4]
    2be0:	ldrd	r4, [sp]
    2be4:	ldrd	r2, [sp, #32]
    2be8:	ldr	lr, [sp, #40]	; 0x28
    2bec:	cmp	lr, #0
    2bf0:	orr	r4, r4, r2
    2bf4:	orr	r5, r5, r3
    2bf8:	bne	2b84 <__assert_fail@plt+0x630>
    2bfc:	add	r1, pc, #972	; 0x3cc
    2c00:	ldrd	r0, [r1]
    2c04:	eor	r0, r0, r4
    2c08:	eor	r1, r1, r5
    2c0c:	bl	26d8 <__assert_fail@plt+0x184>
    2c10:	mov	r6, r0
    2c14:	mov	r0, #48	; 0x30
    2c18:	mov	r7, r1
    2c1c:	bl	2320 <malloc@plt>
    2c20:	ldr	r3, [sp, #44]	; 0x2c
    2c24:	ldr	r1, [r3]
    2c28:	mov	r3, #8
    2c2c:	cmp	r1, #0
    2c30:	mov	r2, r0
    2c34:	strd	r6, [r0]
    2c38:	strd	r4, [r0, #8]
    2c3c:	str	r0, [sp, #28]
    2c40:	ldr	r0, [sp, #40]	; 0x28
    2c44:	str	r2, [r2, #36]	; 0x24
    2c48:	str	r0, [r2, #24]
    2c4c:	str	r3, [r2, #40]	; 0x28
    2c50:	beq	2f4c <__assert_fail@plt+0x9f8>
    2c54:	ldr	sl, [r1, #16]
    2c58:	ldr	r0, [sp, #28]
    2c5c:	ldr	r2, [sl, #16]
    2c60:	ldr	r3, [sl, #20]
    2c64:	add	r4, r0, #16
    2c68:	sub	r3, r2, r3
    2c6c:	str	r0, [r2, #8]
    2c70:	str	r3, [r0, #20]
    2c74:	str	r4, [sl, #16]
    2c78:	ldr	r7, [sp, #28]
    2c7c:	ldr	r3, [sl, #12]
    2c80:	ldr	r0, [pc, #852]	; 2fdc <__assert_fail@plt+0xa88>
    2c84:	add	r3, r3, #1
    2c88:	str	r3, [sl, #12]
    2c8c:	ldrb	r3, [r7, #4]
    2c90:	ldrb	r2, [r7]
    2c94:	ldrb	r6, [r7, #7]
    2c98:	ldrb	r5, [r7, #3]
    2c9c:	add	r3, r3, #-1644167168	; 0x9e000000
    2ca0:	add	r2, r2, #-1627389952	; 0x9f000000
    2ca4:	add	r3, r3, #3620864	; 0x374000
    2ca8:	add	r2, r2, #4784128	; 0x490000
    2cac:	add	r3, r3, #14720	; 0x3980
    2cb0:	add	r2, r2, #47616	; 0xba00
    2cb4:	ldrb	lr, [r7, #6]
    2cb8:	ldrb	ip, [r7, #2]
    2cbc:	add	r3, r3, #57	; 0x39
    2cc0:	add	r2, r2, #194	; 0xc2
    2cc4:	add	r3, r3, r6, lsl #24
    2cc8:	add	r2, r2, r5, lsl #24
    2ccc:	ldrb	r6, [r7, #5]
    2cd0:	ldrb	r5, [r7, #1]
    2cd4:	add	r3, r3, lr, lsl #16
    2cd8:	add	r2, r2, ip, lsl #16
    2cdc:	add	r3, r3, r6, lsl #8
    2ce0:	add	r2, r2, r5, lsl #8
    2ce4:	sub	r2, r2, r3
    2ce8:	add	r3, r3, #17825792	; 0x1100000
    2cec:	add	r3, r3, #147456	; 0x24000
    2cf0:	add	r3, r3, #264	; 0x108
    2cf4:	eor	r0, r0, r2
    2cf8:	add	r3, r3, #1
    2cfc:	ldr	ip, [pc, #732]	; 2fe0 <__assert_fail@plt+0xa8c>
    2d00:	sub	r3, r3, r0
    2d04:	eor	r3, r3, r0, lsl #8
    2d08:	sub	ip, ip, r0
    2d0c:	sub	ip, ip, r3
    2d10:	eor	ip, ip, r3, lsr #13
    2d14:	sub	r2, r0, r3
    2d18:	sub	r2, r2, ip
    2d1c:	eor	r2, r2, ip, lsr #12
    2d20:	sub	r3, r3, ip
    2d24:	sub	r3, r3, r2
    2d28:	eor	r3, r3, r2, lsl #16
    2d2c:	sub	r0, ip, r2
    2d30:	sub	r0, r0, r3
    2d34:	eor	r0, r0, r3, lsr #5
    2d38:	sub	r2, r2, r3
    2d3c:	str	sl, [r7, #16]
    2d40:	sub	r2, r2, r0
    2d44:	ldr	r1, [r1, #16]
    2d48:	eor	r2, r2, r0, lsr #3
    2d4c:	sub	r3, r3, r0
    2d50:	sub	r3, r3, r2
    2d54:	ldr	lr, [r1, #4]
    2d58:	eor	ip, r3, r2, lsl #10
    2d5c:	sub	r2, r0, r2
    2d60:	sub	r3, r2, ip
    2d64:	eor	r3, r3, ip, lsr #15
    2d68:	sub	r2, lr, #1
    2d6c:	and	r2, r2, r3
    2d70:	ldr	r0, [r1]
    2d74:	add	r2, r2, r2, lsl #1
    2d78:	mov	r5, #0
    2d7c:	add	ip, r0, r2, lsl #2
    2d80:	ldr	lr, [r0, r2, lsl #2]
    2d84:	ldr	r1, [ip, #4]
    2d88:	str	r3, [r7, #44]	; 0x2c
    2d8c:	ldr	r3, [ip, #8]
    2d90:	cmp	lr, r5
    2d94:	add	r3, r3, #1
    2d98:	add	r1, r1, #1
    2d9c:	add	r3, r3, r3, lsl #2
    2da0:	str	r1, [ip, #4]
    2da4:	str	lr, [r7, #32]
    2da8:	str	r5, [r7, #28]
    2dac:	strne	r4, [lr, #12]
    2db0:	cmp	r1, r3, lsl #1
    2db4:	str	r4, [r0, r2, lsl #2]
    2db8:	bcc	2f1c <__assert_fail@plt+0x9c8>
    2dbc:	ldr	r3, [sl, #36]	; 0x24
    2dc0:	cmp	r3, #1
    2dc4:	beq	2f1c <__assert_fail@plt+0x9c8>
    2dc8:	ldr	r0, [sl, #4]
    2dcc:	mov	r1, #1
    2dd0:	add	r0, r0, r0, lsl r1
    2dd4:	lsl	r0, r0, #3
    2dd8:	bl	2104 <calloc@plt>
    2ddc:	subs	r7, r0, #0
    2de0:	beq	2fc8 <__assert_fail@plt+0xa74>
    2de4:	ldr	r1, [sl, #4]
    2de8:	ldr	ip, [sl, #12]
    2dec:	ldr	r0, [sl, #8]
    2df0:	lsl	r2, r1, #1
    2df4:	sub	r3, r2, #1
    2df8:	tst	ip, r3
    2dfc:	add	r0, r0, #1
    2e00:	movne	r9, #1
    2e04:	moveq	r9, #0
    2e08:	cmp	r1, #0
    2e0c:	add	r9, r9, ip, lsr r0
    2e10:	ldreq	r3, [sl]
    2e14:	mov	r0, #0
    2e18:	str	r9, [sl, #24]
    2e1c:	str	r0, [sl, #28]
    2e20:	streq	r3, [sp, #20]
    2e24:	beq	2ed8 <__assert_fail@plt+0x984>
    2e28:	add	r2, r2, r1
    2e2c:	mov	fp, r0
    2e30:	ldr	r1, [sl]
    2e34:	lsl	r2, r2, #2
    2e38:	str	r0, [sp, #12]
    2e3c:	str	r1, [sp, #20]
    2e40:	str	r2, [sp, #24]
    2e44:	ldr	r2, [sp, #20]
    2e48:	ldr	r1, [sp, #12]
    2e4c:	ldr	r5, [r2, r1]
    2e50:	cmp	r5, #0
    2e54:	beq	2ec0 <__assert_fail@plt+0x96c>
    2e58:	ldr	r4, [r5, #28]
    2e5c:	ldr	r8, [r5, #16]
    2e60:	and	r4, r4, r3
    2e64:	add	r4, r4, r4, lsl #1
    2e68:	add	r6, r7, r4, lsl #2
    2e6c:	ldr	r0, [r6, #4]
    2e70:	add	r0, r0, #1
    2e74:	cmp	r9, r0
    2e78:	str	r0, [r6, #4]
    2e7c:	bcs	2ea0 <__assert_fail@plt+0x94c>
    2e80:	ldr	r2, [sl, #28]
    2e84:	mov	r1, r9
    2e88:	add	r2, r2, #1
    2e8c:	str	r2, [sl, #28]
    2e90:	str	r3, [sp, #8]
    2e94:	bl	f3b0 <lell_pcapng_close@@Base+0x24>
    2e98:	ldr	r3, [sp, #8]
    2e9c:	str	r0, [r6, #8]
    2ea0:	ldr	r2, [r7, r4, lsl #2]
    2ea4:	str	fp, [r5, #12]
    2ea8:	cmp	r2, #0
    2eac:	str	r2, [r5, #16]
    2eb0:	strne	r5, [r2, #12]
    2eb4:	str	r5, [r7, r4, lsl #2]
    2eb8:	subs	r5, r8, #0
    2ebc:	bne	2e58 <__assert_fail@plt+0x904>
    2ec0:	ldr	r2, [sp, #12]
    2ec4:	ldr	r1, [sp, #24]
    2ec8:	add	r2, r2, #12
    2ecc:	cmp	r2, r1
    2ed0:	str	r2, [sp, #12]
    2ed4:	bne	2e44 <__assert_fail@plt+0x8f0>
    2ed8:	ldr	r0, [sp, #20]
    2edc:	bl	21a0 <free@plt>
    2ee0:	ldr	r3, [sp, #28]
    2ee4:	ldr	r3, [r3, #16]
    2ee8:	ldr	r1, [r3, #4]
    2eec:	ldr	r0, [r3, #12]
    2ef0:	ldr	r2, [r3, #8]
    2ef4:	ldr	ip, [r3, #28]
    2ef8:	lsl	r1, r1, #1
    2efc:	add	r2, r2, #1
    2f00:	cmp	ip, r0, lsr #1
    2f04:	str	r7, [r3]
    2f08:	str	r1, [r3, #4]
    2f0c:	str	r2, [r3, #8]
    2f10:	bhi	2f2c <__assert_fail@plt+0x9d8>
    2f14:	mov	r2, #0
    2f18:	str	r2, [r3, #32]
    2f1c:	ldr	r4, [sp, #16]
    2f20:	b	2b9c <__assert_fail@plt+0x648>
    2f24:	add	sp, sp, #52	; 0x34
    2f28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2f2c:	ldr	r2, [r3, #32]
    2f30:	ldr	r4, [sp, #16]
    2f34:	add	r2, r2, #1
    2f38:	cmp	r2, #1
    2f3c:	str	r2, [r3, #32]
    2f40:	movhi	r2, #1
    2f44:	strhi	r2, [r3, #36]	; 0x24
    2f48:	b	2b9c <__assert_fail@plt+0x648>
    2f4c:	ldr	r2, [sp, #44]	; 0x2c
    2f50:	ldr	r4, [sp, #28]
    2f54:	mov	r1, r8
    2f58:	str	r4, [r2]
    2f5c:	ldr	r2, [sp, #40]	; 0x28
    2f60:	mov	r0, #44	; 0x2c
    2f64:	str	r2, [r4, #20]
    2f68:	bl	2104 <calloc@plt>
    2f6c:	mov	r3, r4
    2f70:	cmp	r0, #0
    2f74:	mov	sl, r0
    2f78:	str	r0, [r3, #16]
    2f7c:	beq	2fc8 <__assert_fail@plt+0xa74>
    2f80:	ldr	r5, [sp, #28]
    2f84:	mov	r3, #32
    2f88:	str	r3, [r0, #4]
    2f8c:	mov	r2, #5
    2f90:	mov	r3, #16
    2f94:	add	r4, r5, #16
    2f98:	str	r4, [r0, #16]
    2f9c:	str	r2, [r0, #8]
    2fa0:	mov	r1, r8
    2fa4:	mov	r0, #384	; 0x180
    2fa8:	str	r3, [sl, #20]
    2fac:	bl	2104 <calloc@plt>
    2fb0:	cmp	r0, #0
    2fb4:	str	r0, [sl]
    2fb8:	ldrne	r3, [pc, #36]	; 2fe4 <__assert_fail@plt+0xa90>
    2fbc:	movne	r1, r5
    2fc0:	strne	r3, [sl, #40]	; 0x28
    2fc4:	bne	2c78 <__assert_fail@plt+0x724>
    2fc8:	mvn	r0, #0
    2fcc:	bl	2374 <exit@plt>
    2fd0:			; <UNDEFINED> instruction: 0xff614e1b
    2fd4:	lfmgt	f7, 2, [fp], #-416	; 0xfffffe60
    2fd8:	andeq	r6, r2, r8, lsr r6
    2fdc:	andeq	pc, r7, sp, ror #14
    2fe0:	mcr2	14, 7, fp, cr13, cr7, {7}
    2fe4:	andsge	r1, r1, r1, ror #31

00002fe8 <btbb_gen_syncword@@Base>:
    2fe8:	ldr	r2, [pc, #80]	; 3040 <btbb_gen_syncword@@Base+0x58>
    2fec:	push	{r4, r5, r6, r7}
    2ff0:	add	r2, pc, r2
    2ff4:	add	r7, pc, #60	; 0x3c
    2ff8:	ldrd	r6, [r7]
    2ffc:	add	r2, r2, #32
    3000:	mov	r3, #0
    3004:	mov	r1, #8388608	; 0x800000
    3008:	ands	ip, r0, r1, asr r3
    300c:	add	r3, r3, #1
    3010:	ldrdne	r4, [r2]
    3014:	eorne	r6, r6, r4
    3018:	eorne	r7, r7, r5
    301c:	cmp	r3, #24
    3020:	add	r2, r2, #8
    3024:	bne	3008 <btbb_gen_syncword@@Base+0x20>
    3028:	mov	r0, r6
    302c:	mov	r1, r7
    3030:	pop	{r4, r5, r6, r7}
    3034:	bx	lr
    3038:			; <UNDEFINED> instruction: 0xc7820e7e
    303c:	andlt	r0, r0, r2
    3040:	andeq	lr, r0, r0, lsr #15

00003044 <btbb_get_release@@Base>:
    3044:	ldr	r0, [pc, #4]	; 3050 <btbb_get_release@@Base+0xc>
    3048:	add	r0, pc, r0
    304c:	bx	lr
    3050:	andeq	lr, r0, ip, lsr #27

00003054 <btbb_get_version@@Base>:
    3054:	ldr	r0, [pc, #4]	; 3060 <btbb_get_version@@Base+0xc>
    3058:	add	r0, pc, r0
    305c:	bx	lr
    3060:	andeq	lr, r0, r8, lsr #27

00003064 <btbb_init@@Base>:
    3064:	ldr	r3, [pc, #156]	; 3108 <btbb_init@@Base+0xa4>
    3068:	cmp	r0, #5
    306c:	push	{r4, r5, r6, r7, r8, lr}
    3070:	add	r3, pc, r3
    3074:	bhi	30dc <btbb_init@@Base+0x78>
    3078:	ldr	r3, [pc, #140]	; 310c <btbb_init@@Base+0xa8>
    307c:	cmp	r0, #0
    3080:	add	r3, pc, r3
    3084:	mov	r4, r0
    3088:	ldr	r3, [r3]
    308c:	clz	r3, r3
    3090:	lsr	r3, r3, #5
    3094:	moveq	r3, #0
    3098:	cmp	r3, #0
    309c:	bne	30a8 <btbb_init@@Base+0x44>
    30a0:	mov	r0, #0
    30a4:	pop	{r4, r5, r6, r7, r8, pc}
    30a8:	mov	r5, #1
    30ac:	mov	r8, #0
    30b0:	mov	r6, #0
    30b4:	mov	r7, #0
    30b8:	mov	r3, r5
    30bc:	mov	r2, r8
    30c0:	add	r5, r5, #1
    30c4:	mov	r0, r6
    30c8:	mov	r1, r7
    30cc:	bl	2b50 <__assert_fail@plt+0x5fc>
    30d0:	cmp	r4, r5
    30d4:	bge	30b8 <btbb_init@@Base+0x54>
    30d8:	b	30a0 <btbb_init@@Base+0x3c>
    30dc:	ldr	r0, [pc, #44]	; 3110 <btbb_init@@Base+0xac>
    30e0:	ldr	r2, [pc, #44]	; 3114 <btbb_init@@Base+0xb0>
    30e4:	ldr	r1, [pc, #44]	; 3118 <btbb_init@@Base+0xb4>
    30e8:	ldr	r3, [r3, r0]
    30ec:	add	r2, pc, r2
    30f0:	add	r1, pc, r1
    30f4:	add	r2, r2, #224	; 0xe0
    30f8:	ldr	r0, [r3]
    30fc:	bl	23d4 <fprintf@plt>
    3100:	mvn	r0, #0
    3104:	pop	{r4, r5, r6, r7, r8, pc}
    3108:	andeq	r5, r2, r8, lsl #31
    310c:	andeq	r6, r2, r8, lsr #2
    3110:	andeq	r0, r0, r8, lsl #3
    3114:	andeq	lr, r0, r4, lsr #13
    3118:	andeq	lr, r0, r4, lsl sp

0000311c <btbb_packet_new@@Base>:
    311c:	push	{r4, lr}
    3120:	mov	r1, #5952	; 0x1740
    3124:	mov	r0, #1
    3128:	bl	2104 <calloc@plt>
    312c:	ldr	r3, [pc, #64]	; 3174 <btbb_packet_new@@Base+0x58>
    3130:	add	r3, pc, r3
    3134:	subs	r4, r0, #0
    3138:	beq	314c <btbb_packet_new@@Base+0x30>
    313c:	mov	r3, #1
    3140:	str	r3, [r4]
    3144:	mov	r0, r4
    3148:	pop	{r4, pc}
    314c:	ldr	r0, [pc, #36]	; 3178 <btbb_packet_new@@Base+0x5c>
    3150:	mov	r2, #25
    3154:	mov	r1, #1
    3158:	ldr	r3, [r3, r0]
    315c:	ldr	r0, [pc, #24]	; 317c <btbb_packet_new@@Base+0x60>
    3160:	ldr	r3, [r3]
    3164:	add	r0, pc, r0
    3168:	bl	22b4 <fwrite@plt>
    316c:	mov	r0, r4
    3170:	pop	{r4, pc}
    3174:	andeq	r5, r2, r8, asr #29
    3178:	andeq	r0, r0, r8, lsl #3
    317c:	andeq	lr, r0, r0, asr #25

00003180 <btbb_packet_ref@@Base>:
    3180:	ldr	r3, [r0]
    3184:	add	r3, r3, #1
    3188:	str	r3, [r0]
    318c:	bx	lr

00003190 <btbb_packet_unref@@Base>:
    3190:	ldr	r3, [r0]
    3194:	subs	r3, r3, #1
    3198:	beq	31a4 <btbb_packet_unref@@Base+0x14>
    319c:	str	r3, [r0]
    31a0:	bx	lr
    31a4:	b	21a0 <free@plt>

000031a8 <btbb_packet_get_lap@@Base>:
    31a8:	ldr	r0, [r0, #12]
    31ac:	bx	lr

000031b0 <btbb_packet_get_uap@@Base>:
    31b0:	ldrb	r0, [r0, #9]
    31b4:	bx	lr

000031b8 <btbb_packet_get_nap@@Base>:
    31b8:	ldrh	r0, [r0, #10]
    31bc:	bx	lr

000031c0 <btbb_packet_get_clkn@@Base>:
    31c0:	ldr	r0, [r0, #2816]	; 0xb00
    31c4:	bx	lr

000031c8 <btbb_packet_get_channel@@Base>:
    31c8:	ldrb	r0, [r0, #8]
    31cc:	bx	lr

000031d0 <btbb_packet_set_modulation@@Base>:
    31d0:	strb	r1, [r0, #16]
    31d4:	bx	lr

000031d8 <btbb_packet_get_modulation@@Base>:
    31d8:	ldrb	r0, [r0, #16]
    31dc:	bx	lr

000031e0 <btbb_packet_set_transport@@Base>:
    31e0:	strb	r1, [r0, #17]
    31e4:	bx	lr

000031e8 <btbb_packet_get_transport@@Base>:
    31e8:	ldrb	r0, [r0, #17]
    31ec:	bx	lr

000031f0 <btbb_packet_get_ac_errors@@Base>:
    31f0:	ldrb	r0, [r0, #2820]	; 0xb04
    31f4:	bx	lr

000031f8 <promiscuous_packet_search@@Base>:
    31f8:	mov	ip, #0
    31fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3200:	add	r7, r0, #56	; 0x38
    3204:	sub	sp, sp, #52	; 0x34
    3208:	mov	r6, ip
    320c:	ldrb	lr, [r7, #1]!
    3210:	orr	ip, ip, lr, lsl r6
    3214:	add	r6, r6, #1
    3218:	cmp	r6, #6
    321c:	uxtb	ip, ip
    3220:	bne	320c <promiscuous_packet_search@@Base+0x14>
    3224:	lsl	ip, ip, #1
    3228:	cmp	r1, #0
    322c:	uxtb	r8, ip
    3230:	ble	3500 <promiscuous_packet_search@@Base+0x308>
    3234:	str	r2, [sp, #36]	; 0x24
    3238:	ldr	r2, [pc, #728]	; 3518 <promiscuous_packet_search@@Base+0x320>
    323c:	str	r3, [sp, #28]
    3240:	add	r2, pc, r2
    3244:	ldr	r3, [pc, #720]	; 351c <promiscuous_packet_search@@Base+0x324>
    3248:	ldr	r2, [r2]
    324c:	add	r3, pc, r3
    3250:	ldr	sl, [pc, #712]	; 3520 <promiscuous_packet_search@@Base+0x328>
    3254:	add	r3, r3, #368	; 0x170
    3258:	str	r1, [sp, #4]
    325c:	mov	r6, #0
    3260:	str	r2, [sp, #32]
    3264:	add	sl, pc, sl
    3268:	add	lr, r0, #62	; 0x3e
    326c:	str	r3, [sp, #24]
    3270:	strd	r4, [sp, #8]
    3274:	b	328c <promiscuous_packet_search@@Base+0x94>
    3278:	ldr	r3, [sp, #4]
    327c:	add	r6, r6, #1
    3280:	cmp	r3, r6
    3284:	mov	lr, r7
    3288:	beq	3500 <promiscuous_packet_search@@Base+0x308>
    328c:	ldrb	r3, [lr, #1]
    3290:	lsr	r8, r8, #1
    3294:	add	r7, lr, #1
    3298:	orr	r8, r8, r3, lsl #6
    329c:	uxtb	r8, r8
    32a0:	add	r3, sl, r8
    32a4:	ldrb	r3, [r3, #236]	; 0xec
    32a8:	cmp	r3, #1
    32ac:	bhi	3278 <promiscuous_packet_search@@Base+0x80>
    32b0:	sub	lr, lr, #63	; 0x3f
    32b4:	mov	r0, #0
    32b8:	mov	r1, #0
    32bc:	mov	ip, #0
    32c0:	ldrb	r2, [lr, #1]!
    32c4:	sub	r3, ip, #32
    32c8:	lsl	r5, r2, r3
    32cc:	rsb	r3, ip, #32
    32d0:	lsl	r4, r2, ip
    32d4:	orr	r5, r5, r2, lsr r3
    32d8:	add	ip, ip, #1
    32dc:	cmp	ip, #64	; 0x40
    32e0:	orr	r0, r0, r4
    32e4:	orr	r1, r1, r5
    32e8:	bne	32c0 <promiscuous_packet_search@@Base+0xc8>
    32ec:	lsr	r3, r1, #25
    32f0:	ldr	r2, [sp, #24]
    32f4:	lsl	r3, r3, #3
    32f8:	add	r2, r2, r3
    32fc:	strd	r4, [sp, #8]
    3300:	ldrd	r2, [r2]
    3304:	bic	r1, r1, #-33554432	; 0xfe000000
    3308:	orr	r5, r1, r3
    330c:	orr	r4, r0, r2
    3310:	add	r1, pc, #504	; 0x1f8
    3314:	ldrd	r0, [r1]
    3318:	strd	r4, [sp, #16]
    331c:	eor	r0, r0, r4
    3320:	eor	r1, r1, r5
    3324:	bl	26d8 <__assert_fail@plt+0x184>
    3328:	mov	r2, #0
    332c:	orrs	r3, r0, r1
    3330:	ldr	r3, [sp, #88]	; 0x58
    3334:	moveq	r0, #0
    3338:	strb	r2, [r3]
    333c:	bne	336c <promiscuous_packet_search@@Base+0x174>
    3340:	ldr	r3, [sp, #28]
    3344:	cmp	r3, r0
    3348:	blt	3278 <promiscuous_packet_search@@Base+0x80>
    334c:	ldr	r3, [sp, #20]
    3350:	ldr	r2, [sp, #36]	; 0x24
    3354:	mov	r0, r6
    3358:	lsr	r3, r3, #2
    335c:	bic	r3, r3, #-16777216	; 0xff000000
    3360:	str	r3, [r2]
    3364:	add	sp, sp, #52	; 0x34
    3368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    336c:	ldr	lr, [sp, #32]
    3370:	strd	r0, [sp, #40]	; 0x28
    3374:	cmp	lr, #0
    3378:	beq	34ec <promiscuous_packet_search@@Base+0x2f4>
    337c:	ldrb	r2, [sp, #44]	; 0x2c
    3380:	ldrb	r3, [sp, #40]	; 0x28
    3384:	ldrb	r0, [sp, #47]	; 0x2f
    3388:	add	r2, r2, #-1644167168	; 0x9e000000
    338c:	ldrb	r1, [sp, #43]	; 0x2b
    3390:	ldrb	ip, [sp, #46]	; 0x2e
    3394:	add	r2, r2, #3620864	; 0x374000
    3398:	add	r3, r3, #-1627389952	; 0x9f000000
    339c:	add	r2, r2, #14720	; 0x3980
    33a0:	add	r3, r3, #4784128	; 0x490000
    33a4:	add	r2, r2, #57	; 0x39
    33a8:	add	r3, r3, #47616	; 0xba00
    33ac:	add	r2, r2, r0, lsl #24
    33b0:	add	r3, r3, #194	; 0xc2
    33b4:	ldrb	r0, [sp, #42]	; 0x2a
    33b8:	add	r3, r3, r1, lsl #24
    33bc:	add	r2, r2, ip, lsl #16
    33c0:	ldrb	r1, [sp, #45]	; 0x2d
    33c4:	ldrb	ip, [sp, #41]	; 0x29
    33c8:	add	r3, r3, r0, lsl #16
    33cc:	ldr	r0, [lr, #16]
    33d0:	add	r2, r2, r1, lsl #8
    33d4:	add	r3, r3, ip, lsl #8
    33d8:	sub	r3, r3, r2
    33dc:	ldr	r1, [pc, #320]	; 3524 <promiscuous_packet_search@@Base+0x32c>
    33e0:	eor	r3, r3, #520192	; 0x7f000
    33e4:	eor	r3, r3, #1888	; 0x760
    33e8:	eor	r3, r3, #13
    33ec:	add	r1, r2, r1
    33f0:	ldr	r2, [pc, #304]	; 3528 <promiscuous_packet_search@@Base+0x330>
    33f4:	sub	r1, r1, r3
    33f8:	eor	r1, r1, r3, lsl #8
    33fc:	sub	r2, r2, r3
    3400:	sub	r2, r2, r1
    3404:	eor	r2, r2, r1, lsr #13
    3408:	sub	r3, r3, r1
    340c:	sub	r3, r3, r2
    3410:	eor	r3, r3, r2, lsr #12
    3414:	sub	r1, r1, r2
    3418:	sub	r1, r1, r3
    341c:	eor	r1, r1, r3, lsl #16
    3420:	sub	r2, r2, r3
    3424:	sub	r2, r2, r1
    3428:	eor	r2, r2, r1, lsr #5
    342c:	sub	r3, r3, r1
    3430:	sub	r3, r3, r2
    3434:	eor	r3, r3, r2, lsr #3
    3438:	sub	r1, r1, r2
    343c:	sub	r1, r1, r3
    3440:	eor	r1, r1, r3, lsl #10
    3444:	sub	r3, r2, r3
    3448:	ldr	r2, [r0, #4]
    344c:	sub	r3, r3, r1
    3450:	sub	r2, r2, #1
    3454:	eor	r3, r3, r1, lsr #15
    3458:	and	r3, r3, r2
    345c:	ldr	r2, [r0]
    3460:	add	r3, r3, r3, lsl #1
    3464:	ldr	r9, [r2, r3, lsl #2]
    3468:	cmp	r9, #0
    346c:	beq	34ec <promiscuous_packet_search@@Base+0x2f4>
    3470:	ldr	r3, [r0, #20]
    3474:	rsb	fp, r3, #0
    3478:	adds	r9, r9, fp
    347c:	beq	34ec <promiscuous_packet_search@@Base+0x2f4>
    3480:	add	r3, sp, #40	; 0x28
    3484:	mov	r5, fp
    3488:	mov	fp, r3
    348c:	b	34a4 <promiscuous_packet_search@@Base+0x2ac>
    3490:	ldr	r3, [r9, #32]
    3494:	cmp	r3, #0
    3498:	beq	34ec <promiscuous_packet_search@@Base+0x2f4>
    349c:	adds	r9, r3, r5
    34a0:	beq	34ec <promiscuous_packet_search@@Base+0x2f4>
    34a4:	ldr	r3, [r9, #40]	; 0x28
    34a8:	cmp	r3, #8
    34ac:	bne	3490 <promiscuous_packet_search@@Base+0x298>
    34b0:	mov	r2, #8
    34b4:	mov	r1, fp
    34b8:	ldr	r0, [r9, #36]	; 0x24
    34bc:	bl	220c <memcmp@plt>
    34c0:	cmp	r0, #0
    34c4:	bne	3490 <promiscuous_packet_search@@Base+0x298>
    34c8:	ldrd	r0, [r9, #8]
    34cc:	ldrd	r2, [sp, #16]
    34d0:	eor	r3, r3, r1
    34d4:	eor	r2, r2, r0
    34d8:	strd	r2, [sp, #16]
    34dc:	bl	f608 <lell_pcapng_close@@Base+0x27c>
    34e0:	ldr	r3, [sp, #88]	; 0x58
    34e4:	strb	r0, [r3]
    34e8:	b	3340 <promiscuous_packet_search@@Base+0x148>
    34ec:	ldr	r3, [sp, #88]	; 0x58
    34f0:	mvn	r2, #0
    34f4:	mov	r0, #255	; 0xff
    34f8:	strb	r2, [r3]
    34fc:	b	3340 <promiscuous_packet_search@@Base+0x148>
    3500:	mvn	r6, #0
    3504:	mov	r0, r6
    3508:	add	sp, sp, #52	; 0x34
    350c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3510:	bllt	ff318908 <perm_table@@Base+0xff2ef744>
    3514:	orrhi	r8, r4, #9600	; 0x2580
    3518:	andeq	r5, r2, r8, ror #30
    351c:	andeq	lr, r0, r4, asr #10
    3520:	andeq	lr, r0, ip, lsr #10
    3524:	tsteq	r2, r9, lsl #2
    3528:	mcr2	14, 7, fp, cr13, cr7, {7}

0000352c <find_known_lap@@Base>:
    352c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3530:	mov	r6, r0
    3534:	mov	r0, r2
    3538:	mov	r7, r1
    353c:	mov	r8, r3
    3540:	bl	22c0 <btbb_gen_syncword@plt>
    3544:	cmp	r7, #0
    3548:	movgt	r9, #0
    354c:	movgt	sl, r0
    3550:	movgt	fp, r1
    3554:	ble	35c0 <find_known_lap@@Base+0x94>
    3558:	sub	lr, r9, #1
    355c:	add	lr, r6, lr
    3560:	mov	r0, #0
    3564:	mov	r1, #0
    3568:	mov	ip, #0
    356c:	ldrb	r2, [lr, #1]!
    3570:	sub	r3, ip, #32
    3574:	lsl	r5, r2, r3
    3578:	rsb	r3, ip, #32
    357c:	lsl	r4, r2, ip
    3580:	orr	r5, r5, r2, lsr r3
    3584:	add	ip, ip, #1
    3588:	cmp	ip, #64	; 0x40
    358c:	orr	r0, r0, r4
    3590:	orr	r1, r1, r5
    3594:	bne	356c <find_known_lap@@Base+0x40>
    3598:	eor	r0, r0, sl
    359c:	eor	r1, r1, fp
    35a0:	bl	f608 <lell_pcapng_close@@Base+0x27c>
    35a4:	ldr	r3, [sp, #40]	; 0x28
    35a8:	cmp	r0, r8
    35ac:	strb	r0, [r3]
    35b0:	ble	35c4 <find_known_lap@@Base+0x98>
    35b4:	add	r9, r9, #1
    35b8:	cmp	r7, r9
    35bc:	bne	3558 <find_known_lap@@Base+0x2c>
    35c0:	mvn	r9, #0
    35c4:	mov	r0, r9
    35c8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

000035cc <btbb_packet_set_data@@Base>:
    35cc:	ldr	ip, [pc, #76]	; 3620 <btbb_packet_set_data@@Base+0x54>
    35d0:	push	{r4, r5, r6, lr}
    35d4:	cmp	r2, ip
    35d8:	movge	r2, ip
    35dc:	cmp	r2, #0
    35e0:	add	r6, r0, #2816	; 0xb00
    35e4:	subgt	r4, r2, #1
    35e8:	addgt	r4, r1, r4
    35ec:	ldr	r5, [sp, #16]
    35f0:	addgt	ip, r6, #7
    35f4:	subgt	r1, r1, #1
    35f8:	ble	360c <btbb_packet_set_data@@Base+0x40>
    35fc:	ldrb	lr, [r1, #1]!
    3600:	cmp	r1, r4
    3604:	strb	lr, [ip, #1]!
    3608:	bne	35fc <btbb_packet_set_data@@Base+0x30>
    360c:	lsr	r5, r5, #1
    3610:	strh	r2, [r6, #6]
    3614:	str	r5, [r0, #2816]	; 0xb00
    3618:	strb	r3, [r0, #8]
    361c:	pop	{r4, r5, r6, pc}
    3620:	andeq	r0, r0, r5, lsr ip

00003624 <btbb_packet_set_flag@@Base>:
    3624:	mov	r3, #1
    3628:	cmp	r2, #0
    362c:	lsl	r1, r3, r1
    3630:	ldr	r2, [r0, #4]
    3634:	biceq	r1, r2, r1
    3638:	orrne	r1, r1, r2
    363c:	str	r1, [r0, #4]
    3640:	bx	lr

00003644 <btbb_packet_set_uap@@Base>:
    3644:	strb	r1, [r0, #9]
    3648:	mov	r2, #1
    364c:	mov	r1, #2
    3650:	b	2188 <btbb_packet_set_flag@plt>

00003654 <btbb_find_ac@@Base>:
    3654:	push	{r4, lr}
    3658:	sub	sp, sp, #24
    365c:	cmn	r2, #1
    3660:	str	r2, [sp, #12]
    3664:	beq	36bc <btbb_find_ac@@Base+0x68>
    3668:	add	ip, sp, #23
    366c:	str	ip, [sp]
    3670:	bl	2410 <find_known_lap@plt>
    3674:	mov	r4, r0
    3678:	cmp	r4, #0
    367c:	blt	36b0 <btbb_find_ac@@Base+0x5c>
    3680:	ldr	r3, [sp, #32]
    3684:	ldr	r0, [r3]
    3688:	cmp	r0, #0
    368c:	beq	36d4 <btbb_find_ac@@Base+0x80>
    3690:	ldrb	r2, [sp, #23]
    3694:	ldr	r3, [sp, #12]
    3698:	mov	r1, #0
    369c:	strb	r2, [r0, #2820]	; 0xb04
    36a0:	str	r3, [r0, #12]
    36a4:	str	r1, [r0, #4]
    36a8:	mov	r2, #1
    36ac:	bl	2188 <btbb_packet_set_flag@plt>
    36b0:	mov	r0, r4
    36b4:	add	sp, sp, #24
    36b8:	pop	{r4, pc}
    36bc:	add	r2, sp, #23
    36c0:	str	r2, [sp]
    36c4:	add	r2, sp, #12
    36c8:	bl	24f4 <promiscuous_packet_search@plt>
    36cc:	mov	r4, r0
    36d0:	b	3678 <btbb_find_ac@@Base+0x24>
    36d4:	bl	2338 <btbb_packet_new@plt>
    36d8:	ldr	r3, [sp, #32]
    36dc:	str	r0, [r3]
    36e0:	b	3690 <btbb_find_ac@@Base+0x3c>

000036e4 <btbb_packet_get_flag@@Base>:
    36e4:	ldr	r3, [r0, #4]
    36e8:	mov	r2, #1
    36ec:	ands	r3, r3, r2, lsl r1
    36f0:	movne	r0, r2
    36f4:	moveq	r0, #0
    36f8:	bx	lr
    36fc:	ldr	ip, [pc, #172]	; 37b0 <btbb_packet_get_flag@@Base+0xcc>
    3700:	and	r2, r2, #63	; 0x3f
    3704:	add	ip, pc, ip
    3708:	add	ip, ip, r2
    370c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3710:	subs	r6, r3, #0
    3714:	ldrb	r2, [ip, #1392]	; 0x570
    3718:	ldr	lr, [sp, #40]	; 0x28
    371c:	ldr	r7, [pc, #144]	; 37b4 <btbb_packet_get_flag@@Base+0xd0>
    3720:	add	r2, r2, lr
    3724:	ldr	r8, [sp, #44]	; 0x2c
    3728:	smull	r3, r4, r7, r2
    372c:	add	ip, r4, r2
    3730:	asr	r4, r2, #31
    3734:	rsb	r4, r4, ip, asr #6
    3738:	rsb	r4, r4, r4, lsl #7
    373c:	sub	r4, r2, r4
    3740:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3744:	ldr	sl, [pc, #108]	; 37b8 <btbb_packet_get_flag@@Base+0xd4>
    3748:	mov	r5, r0
    374c:	add	sl, pc, sl
    3750:	add	r6, r0, r6
    3754:	sub	fp, r1, #1
    3758:	mov	r9, #0
    375c:	mov	r1, r9
    3760:	mov	r0, r8
    3764:	bl	21dc <btbb_packet_get_flag@plt>
    3768:	add	r3, sl, r4
    376c:	add	r5, r5, #1
    3770:	cmp	r0, #0
    3774:	ldrbne	r2, [r5, #-1]
    3778:	ldrbne	r3, [r3, #1456]	; 0x5b0
    377c:	ldrbeq	r2, [r5, #-1]
    3780:	eorne	r2, r2, r3
    3784:	add	r3, r4, #1
    3788:	strb	r2, [fp, #1]!
    378c:	smull	r1, r4, r7, r3
    3790:	add	r2, r4, r3
    3794:	asr	r4, r3, #31
    3798:	rsb	r4, r4, r2, asr #6
    379c:	cmp	r5, r6
    37a0:	rsb	r4, r4, r4, lsl #7
    37a4:	sub	r4, r3, r4
    37a8:	bne	375c <btbb_packet_get_flag@@Base+0x78>
    37ac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    37b0:	andeq	lr, r0, ip, lsl #1
    37b4:	tsthi	r2, r9, lsl #8
    37b8:	andeq	lr, r0, r4, asr #32
    37bc:	push	{r4, r5, r6, r7, lr}
    37c0:	sub	sp, sp, #12
    37c4:	cmp	r2, #2
    37c8:	mov	r5, r2
    37cc:	mov	r6, r1
    37d0:	ldr	r4, [sp, #36]	; 0x24
    37d4:	beq	3800 <btbb_packet_get_flag@@Base+0x11c>
    37d8:	cmp	r3, #7
    37dc:	ble	37f4 <btbb_packet_get_flag@@Base+0x110>
    37e0:	ldr	r2, [sp, #32]
    37e4:	cmp	r2, #0
    37e8:	beq	3930 <btbb_packet_get_flag@@Base+0x24c>
    37ec:	cmp	r3, #14
    37f0:	bgt	387c <btbb_packet_get_flag@@Base+0x198>
    37f4:	mov	r0, #0
    37f8:	add	sp, sp, #12
    37fc:	pop	{r4, r5, r6, r7, pc}
    3800:	cmp	r3, #15
    3804:	ble	37f4 <btbb_packet_get_flag@@Base+0x110>
    3808:	ldr	r2, [sp, #32]
    380c:	cmp	r2, #0
    3810:	beq	3950 <btbb_packet_get_flag@@Base+0x26c>
    3814:	cmp	r3, #29
    3818:	ble	37f4 <btbb_packet_get_flag@@Base+0x110>
    381c:	mov	r1, #16
    3820:	bl	291c <__assert_fail@plt+0x3c8>
    3824:	subs	r7, r0, #0
    3828:	beq	37f4 <btbb_packet_get_flag@@Base+0x110>
    382c:	mov	r3, #18
    3830:	str	r3, [sp]
    3834:	str	r4, [sp, #4]
    3838:	mov	r2, r6
    383c:	mov	r3, #16
    3840:	add	r1, r4, #44	; 0x2c
    3844:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    3848:	mov	r0, r7
    384c:	bl	21a0 <free@plt>
    3850:	mov	r3, #0
    3854:	mov	r2, r3
    3858:	add	r1, r4, #46	; 0x2e
    385c:	ldrb	r0, [r1, #1]!
    3860:	orr	r3, r3, r0, lsl r2
    3864:	add	r2, r2, #1
    3868:	cmp	r2, #10
    386c:	uxth	r3, r3
    3870:	bne	385c <btbb_packet_get_flag@@Base+0x178>
    3874:	add	r3, r3, #4
    3878:	b	38d8 <btbb_packet_get_flag@@Base+0x1f4>
    387c:	mov	r1, #8
    3880:	bl	291c <__assert_fail@plt+0x3c8>
    3884:	subs	r7, r0, #0
    3888:	beq	37f4 <btbb_packet_get_flag@@Base+0x110>
    388c:	mov	r3, #18
    3890:	str	r3, [sp]
    3894:	str	r4, [sp, #4]
    3898:	mov	r2, r6
    389c:	mov	r3, #8
    38a0:	add	r1, r4, #44	; 0x2c
    38a4:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    38a8:	mov	r0, r7
    38ac:	bl	21a0 <free@plt>
    38b0:	mov	r3, #0
    38b4:	mov	r2, r3
    38b8:	add	r1, r4, #46	; 0x2e
    38bc:	ldrb	r0, [r1, #1]!
    38c0:	orr	r3, r3, r0, lsl r2
    38c4:	add	r2, r2, #1
    38c8:	cmp	r2, #5
    38cc:	uxtb	r3, r3
    38d0:	bne	38bc <btbb_packet_get_flag@@Base+0x1d8>
    38d4:	add	r3, r3, #3
    38d8:	ldrb	r2, [r4, #18]
    38dc:	sub	r2, r2, #3
    38e0:	uxtb	r2, r2
    38e4:	cmp	r2, #12
    38e8:	movhi	r2, #0
    38ec:	ldrls	r1, [pc, #124]	; 3970 <btbb_packet_get_flag@@Base+0x28c>
    38f0:	addls	r1, pc, r1
    38f4:	addls	r2, r1, r2, lsl #2
    38f8:	ldrls	r2, [r2, #1584]	; 0x630
    38fc:	ldrb	lr, [r4, #45]	; 0x2d
    3900:	ldrb	r1, [r4, #44]	; 0x2c
    3904:	mov	r0, #1
    3908:	cmp	r2, r3
    390c:	ldrb	ip, [r4, #46]	; 0x2e
    3910:	movlt	r3, r2
    3914:	orr	r2, r1, lr, lsl r0
    3918:	str	r3, [r4, #64]	; 0x40
    391c:	str	r5, [r4, #40]	; 0x28
    3920:	strb	r2, [r4, #60]	; 0x3c
    3924:	strb	ip, [r4, #61]	; 0x3d
    3928:	add	sp, sp, #12
    392c:	pop	{r4, r5, r6, r7, pc}
    3930:	mov	r3, #18
    3934:	mov	r2, r1
    3938:	str	r3, [sp]
    393c:	str	r4, [sp, #4]
    3940:	mov	r3, #8
    3944:	add	r1, r4, #44	; 0x2c
    3948:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    394c:	b	38b0 <btbb_packet_get_flag@@Base+0x1cc>
    3950:	mov	r3, #18
    3954:	mov	r2, r1
    3958:	str	r3, [sp]
    395c:	str	r4, [sp, #4]
    3960:	mov	r3, #16
    3964:	add	r1, r4, #44	; 0x2c
    3968:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    396c:	b	3850 <btbb_packet_get_flag@@Base+0x16c>
    3970:	andeq	sp, r0, r0, lsr #29

00003974 <btbb_get_symbols@@Base>:
    3974:	add	r0, r0, #2816	; 0xb00
    3978:	add	r0, r0, #8
    397c:	bx	lr

00003980 <btbb_packet_get_payload_length@@Base>:
    3980:	ldr	r0, [r0, #64]	; 0x40
    3984:	bx	lr

00003988 <btbb_get_payload@@Base>:
    3988:	add	r0, r0, #68	; 0x44
    398c:	bx	lr

00003990 <btbb_get_payload_packed@@Base>:
    3990:	ldr	r3, [r0, #64]	; 0x40
    3994:	cmp	r3, #0
    3998:	ble	39f4 <btbb_get_payload_packed@@Base+0x64>
    399c:	push	{r4, r5, r6, lr}
    39a0:	mov	lr, #0
    39a4:	sub	r5, r1, #1
    39a8:	mov	r6, lr
    39ac:	add	r4, r0, #67	; 0x43
    39b0:	mov	r1, r4
    39b4:	mov	r3, r6
    39b8:	mov	r2, #0
    39bc:	ldrb	ip, [r1, #1]!
    39c0:	orr	r3, r3, ip, lsl r2
    39c4:	add	r2, r2, #1
    39c8:	cmp	r2, #8
    39cc:	uxtb	r3, r3
    39d0:	bne	39bc <btbb_get_payload_packed@@Base+0x2c>
    39d4:	strb	r3, [r5, #1]!
    39d8:	ldr	r3, [r0, #64]	; 0x40
    39dc:	add	lr, lr, #1
    39e0:	cmp	r3, lr
    39e4:	add	r4, r4, #8
    39e8:	bgt	39b0 <btbb_get_payload_packed@@Base+0x20>
    39ec:	mov	r0, r3
    39f0:	pop	{r4, r5, r6, pc}
    39f4:	mov	r0, r3
    39f8:	bx	lr

000039fc <btbb_packet_get_type@@Base>:
    39fc:	ldrb	r0, [r0, #18]
    3a00:	bx	lr

00003a04 <btbb_packet_get_lt_addr@@Base>:
    3a04:	ldrb	r0, [r0, #19]
    3a08:	bx	lr

00003a0c <btbb_packet_get_header_flags@@Base>:
    3a0c:	ldrb	r0, [r0, #20]
    3a10:	bx	lr

00003a14 <btbb_packet_get_hec@@Base>:
    3a14:	ldrb	r0, [r0, #21]
    3a18:	bx	lr

00003a1c <btbb_packet_get_header_packed@@Base>:
    3a1c:	mov	r2, #0
    3a20:	add	r0, r0, #21
    3a24:	mov	r3, r2
    3a28:	ldrb	r1, [r0, #1]!
    3a2c:	orr	r2, r2, r1, lsl r3
    3a30:	add	r3, r3, #1
    3a34:	cmp	r3, #18
    3a38:	bne	3a28 <btbb_packet_get_header_packed@@Base+0xc>
    3a3c:	mov	r0, r2
    3a40:	bx	lr

00003a44 <fhs@@Base>:
    3a44:	add	r3, r1, #2816	; 0xb00
    3a48:	ldr	r2, [pc, #232]	; 3b38 <fhs@@Base+0xf4>
    3a4c:	ldrh	ip, [r3, #6]
    3a50:	mov	r3, #20
    3a54:	push	{r4, r5, r6, r7, r8, r9, lr}
    3a58:	cmp	ip, r2
    3a5c:	sub	sp, sp, #12
    3a60:	str	r3, [r1, #64]	; 0x40
    3a64:	movle	r6, #1
    3a68:	bgt	3a78 <fhs@@Base+0x34>
    3a6c:	mov	r0, r6
    3a70:	add	sp, sp, #12
    3a74:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3a78:	mov	r5, r0
    3a7c:	add	r0, r1, #2944	; 0xb80
    3a80:	mov	r4, r1
    3a84:	add	r0, r0, #2
    3a88:	mov	r1, #160	; 0xa0
    3a8c:	bl	291c <__assert_fail@plt+0x3c8>
    3a90:	subs	r8, r0, #0
    3a94:	moveq	r6, r8
    3a98:	beq	3a6c <fhs@@Base+0x28>
    3a9c:	ldr	r3, [r4, #64]	; 0x40
    3aa0:	add	r9, r4, #68	; 0x44
    3aa4:	mov	r7, #18
    3aa8:	mov	r2, r5
    3aac:	lsl	r3, r3, #3
    3ab0:	mov	r1, r9
    3ab4:	str	r4, [sp, #4]
    3ab8:	str	r7, [sp]
    3abc:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    3ac0:	mov	r0, r4
    3ac4:	bl	2870 <__assert_fail@plt+0x31c>
    3ac8:	cmp	r0, #0
    3acc:	bne	3b14 <fhs@@Base+0xd0>
    3ad0:	mov	r5, #32
    3ad4:	b	3ae0 <fhs@@Base+0x9c>
    3ad8:	cmp	r5, #64	; 0x40
    3adc:	beq	3b2c <fhs@@Base+0xe8>
    3ae0:	ldr	r3, [r4, #64]	; 0x40
    3ae4:	mov	r2, r5
    3ae8:	mov	r1, r9
    3aec:	lsl	r3, r3, #3
    3af0:	mov	r0, r8
    3af4:	str	r4, [sp, #4]
    3af8:	str	r7, [sp]
    3afc:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    3b00:	mov	r0, r4
    3b04:	bl	2870 <__assert_fail@plt+0x31c>
    3b08:	add	r5, r5, #1
    3b0c:	subs	r6, r0, #0
    3b10:	beq	3ad8 <fhs@@Base+0x94>
    3b14:	mov	r0, r8
    3b18:	bl	21a0 <free@plt>
    3b1c:	mov	r6, #1000	; 0x3e8
    3b20:	mov	r0, r6
    3b24:	add	sp, sp, #12
    3b28:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3b2c:	mov	r0, r8
    3b30:	bl	21a0 <free@plt>
    3b34:	b	3a6c <fhs@@Base+0x28>
    3b38:	andeq	r0, r0, r9, ror #2

00003b3c <DM@@Base>:
    3b3c:	add	r2, r1, #2816	; 0xb00
    3b40:	push	{r4, r5, r6, r7, r8, r9, lr}
    3b44:	add	r5, r1, #2944	; 0xb80
    3b48:	ldrb	r3, [r1, #18]
    3b4c:	ldrh	r2, [r2, #6]
    3b50:	sub	sp, sp, #12
    3b54:	sub	r3, r3, #3
    3b58:	sub	r8, r2, #122	; 0x7a
    3b5c:	add	r5, r5, #2
    3b60:	cmp	r3, #11
    3b64:	addls	pc, pc, r3, lsl #2
    3b68:	b	3c24 <DM@@Base+0xe8>
    3b6c:	b	3b9c <DM@@Base+0x60>
    3b70:	b	3c24 <DM@@Base+0xe8>
    3b74:	b	3c24 <DM@@Base+0xe8>
    3b78:	b	3c24 <DM@@Base+0xe8>
    3b7c:	b	3c24 <DM@@Base+0xe8>
    3b80:	b	3c0c <DM@@Base+0xd0>
    3b84:	b	3c24 <DM@@Base+0xe8>
    3b88:	b	3c00 <DM@@Base+0xc4>
    3b8c:	b	3c24 <DM@@Base+0xe8>
    3b90:	b	3c24 <DM@@Base+0xe8>
    3b94:	b	3c24 <DM@@Base+0xe8>
    3b98:	b	3bf4 <DM@@Base+0xb8>
    3b9c:	mov	r9, #20
    3ba0:	mov	r2, #1
    3ba4:	mov	r6, #1
    3ba8:	str	r1, [sp, #4]
    3bac:	mov	r7, r0
    3bb0:	mov	r4, r1
    3bb4:	str	r6, [sp]
    3bb8:	mov	r1, r0
    3bbc:	mov	r3, r8
    3bc0:	mov	r0, r5
    3bc4:	bl	37bc <btbb_packet_get_flag@@Base+0xd8>
    3bc8:	cmp	r0, #0
    3bcc:	beq	3c24 <DM@@Base+0xe8>
    3bd0:	ldr	r3, [r4, #64]	; 0x40
    3bd4:	cmp	r9, r3
    3bd8:	blt	3be8 <DM@@Base+0xac>
    3bdc:	lsl	r9, r3, #3
    3be0:	cmp	r8, r9
    3be4:	bge	3c30 <DM@@Base+0xf4>
    3be8:	mov	r0, r6
    3bec:	add	sp, sp, #12
    3bf0:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3bf4:	mov	r9, #228	; 0xe4
    3bf8:	mov	r2, #2
    3bfc:	b	3ba4 <DM@@Base+0x68>
    3c00:	mov	r9, #125	; 0x7d
    3c04:	mov	r2, #2
    3c08:	b	3ba4 <DM@@Base+0x68>
    3c0c:	add	r5, r1, #3024	; 0xbd0
    3c10:	sub	r8, r2, #202	; 0xca
    3c14:	add	r5, r5, #2
    3c18:	mov	r9, #12
    3c1c:	mov	r2, #1
    3c20:	b	3ba4 <DM@@Base+0x68>
    3c24:	mov	r0, #0
    3c28:	add	sp, sp, #12
    3c2c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3c30:	mov	r0, r5
    3c34:	mov	r1, r9
    3c38:	bl	291c <__assert_fail@plt+0x3c8>
    3c3c:	subs	r5, r0, #0
    3c40:	beq	3c24 <DM@@Base+0xe8>
    3c44:	mov	r1, #18
    3c48:	mov	r3, r9
    3c4c:	mov	r2, r7
    3c50:	str	r1, [sp]
    3c54:	str	r4, [sp, #4]
    3c58:	add	r1, r4, #68	; 0x44
    3c5c:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    3c60:	mov	r0, r5
    3c64:	bl	21a0 <free@plt>
    3c68:	mov	r0, r4
    3c6c:	bl	2870 <__assert_fail@plt+0x31c>
    3c70:	cmp	r0, #0
    3c74:	movne	r0, #10
    3c78:	moveq	r0, #2
    3c7c:	b	3bec <DM@@Base+0xb0>

00003c80 <DH@@Base>:
    3c80:	add	r3, r1, #2816	; 0xb00
    3c84:	push	{r4, r5, r6, r7, r8, lr}
    3c88:	sub	sp, sp, #8
    3c8c:	ldrb	ip, [r1, #18]
    3c90:	ldrh	r5, [r3, #6]
    3c94:	add	r3, r1, #2944	; 0xb80
    3c98:	sub	ip, ip, #4
    3c9c:	sub	r5, r5, #122	; 0x7a
    3ca0:	add	r7, r3, #2
    3ca4:	cmp	ip, #11
    3ca8:	addls	pc, pc, ip, lsl #2
    3cac:	b	3d4c <DH@@Base+0xcc>
    3cb0:	b	3ce0 <DH@@Base+0x60>
    3cb4:	b	3d4c <DH@@Base+0xcc>
    3cb8:	b	3d4c <DH@@Base+0xcc>
    3cbc:	b	3d4c <DH@@Base+0xcc>
    3cc0:	b	3d4c <DH@@Base+0xcc>
    3cc4:	b	3ce0 <DH@@Base+0x60>
    3cc8:	b	3d4c <DH@@Base+0xcc>
    3ccc:	b	3d40 <DH@@Base+0xc0>
    3cd0:	b	3d4c <DH@@Base+0xcc>
    3cd4:	b	3d4c <DH@@Base+0xcc>
    3cd8:	b	3d4c <DH@@Base+0xcc>
    3cdc:	b	3d34 <DH@@Base+0xb4>
    3ce0:	mov	r8, #30
    3ce4:	mov	r2, #1
    3ce8:	mov	r4, r1
    3cec:	mov	r3, #0
    3cf0:	mov	r1, r0
    3cf4:	stm	sp, {r3, r4}
    3cf8:	mov	r6, r0
    3cfc:	mov	r3, r5
    3d00:	mov	r0, r7
    3d04:	bl	37bc <btbb_packet_get_flag@@Base+0xd8>
    3d08:	cmp	r0, #0
    3d0c:	beq	3d2c <DH@@Base+0xac>
    3d10:	ldr	r3, [r4, #64]	; 0x40
    3d14:	cmp	r8, r3
    3d18:	blt	3d28 <DH@@Base+0xa8>
    3d1c:	lsl	r3, r3, #3
    3d20:	cmp	r5, r3
    3d24:	bge	3d58 <DH@@Base+0xd8>
    3d28:	mov	r0, #1
    3d2c:	add	sp, sp, #8
    3d30:	pop	{r4, r5, r6, r7, r8, pc}
    3d34:	ldr	r8, [pc, #96]	; 3d9c <DH@@Base+0x11c>
    3d38:	mov	r2, #2
    3d3c:	b	3ce8 <DH@@Base+0x68>
    3d40:	mov	r8, #187	; 0xbb
    3d44:	mov	r2, #2
    3d48:	b	3ce8 <DH@@Base+0x68>
    3d4c:	mov	r0, #0
    3d50:	add	sp, sp, #8
    3d54:	pop	{r4, r5, r6, r7, r8, pc}
    3d58:	mov	r1, #18
    3d5c:	mov	r0, r7
    3d60:	str	r1, [sp]
    3d64:	str	r4, [sp, #4]
    3d68:	mov	r2, r6
    3d6c:	add	r1, r4, #68	; 0x44
    3d70:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    3d74:	ldrb	r3, [r4, #18]
    3d78:	cmp	r3, #9
    3d7c:	moveq	r0, #2
    3d80:	beq	3d2c <DH@@Base+0xac>
    3d84:	mov	r0, r4
    3d88:	bl	2870 <__assert_fail@plt+0x31c>
    3d8c:	cmp	r0, #0
    3d90:	moveq	r0, #2
    3d94:	movne	r0, #10
    3d98:	b	3d2c <DH@@Base+0xac>
    3d9c:	andeq	r0, r0, r7, asr r1

00003da0 <EV3@@Base>:
    3da0:	add	r3, r1, #2816	; 0xb00
    3da4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3da8:	sub	sp, sp, #8
    3dac:	ldrh	r6, [r3, #6]
    3db0:	mov	r3, #0
    3db4:	str	r3, [r1, #64]	; 0x40
    3db8:	sub	r6, r6, #122	; 0x7a
    3dbc:	cmp	r6, #7
    3dc0:	ble	3e48 <EV3@@Base+0xa8>
    3dc4:	add	r7, r1, #2944	; 0xb80
    3dc8:	mov	r5, r1
    3dcc:	add	r7, r7, #2
    3dd0:	mov	r8, r0
    3dd4:	mov	r1, r3
    3dd8:	add	sl, r5, #68	; 0x44
    3ddc:	mov	r9, #8
    3de0:	b	3e04 <EV3@@Base+0x64>
    3de4:	add	r3, r4, #1
    3de8:	cmp	r3, #31
    3dec:	lsl	r1, r3, #3
    3df0:	add	r2, r1, #7
    3df4:	str	r3, [r5, #64]	; 0x40
    3df8:	bgt	3e54 <EV3@@Base+0xb4>
    3dfc:	cmp	r6, r2
    3e00:	ble	3e48 <EV3@@Base+0xa8>
    3e04:	add	r3, r1, #18
    3e08:	mov	r2, r8
    3e0c:	stm	sp, {r3, r5}
    3e10:	add	r1, sl, r1
    3e14:	mov	r3, r9
    3e18:	mov	r0, r7
    3e1c:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    3e20:	ldr	r4, [r5, #64]	; 0x40
    3e24:	cmp	r4, #2
    3e28:	ble	3de4 <EV3@@Base+0x44>
    3e2c:	mov	r0, r5
    3e30:	bl	2870 <__assert_fail@plt+0x31c>
    3e34:	cmp	r0, #0
    3e38:	beq	3de4 <EV3@@Base+0x44>
    3e3c:	mov	r0, #10
    3e40:	add	sp, sp, #8
    3e44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3e48:	mov	r0, #1
    3e4c:	add	sp, sp, #8
    3e50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3e54:	mov	r0, #2
    3e58:	add	sp, sp, #8
    3e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00003e60 <EV4@@Base>:
    3e60:	add	r3, r1, #2816	; 0xb00
    3e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3e68:	add	r8, r1, #2944	; 0xb80
    3e6c:	ldrh	r7, [r3, #6]
    3e70:	mov	r5, #0
    3e74:	sub	sp, sp, #20
    3e78:	mov	r4, r1
    3e7c:	sub	r7, r7, #122	; 0x7a
    3e80:	add	r8, r8, #2
    3e84:	mov	r6, r5
    3e88:	mov	r9, #10
    3e8c:	mov	r3, #1
    3e90:	str	r0, [sp, #12]
    3e94:	str	r3, [r1, #64]	; 0x40
    3e98:	add	r3, r6, #14
    3e9c:	cmp	r7, r3
    3ea0:	ble	3f40 <EV4@@Base+0xe0>
    3ea4:	mov	r1, r9
    3ea8:	add	r0, r8, r6
    3eac:	bl	291c <__assert_fail@plt+0x3c8>
    3eb0:	subs	sl, r0, #0
    3eb4:	beq	3f48 <EV4@@Base+0xe8>
    3eb8:	add	r3, r5, #18
    3ebc:	add	r1, r5, #68	; 0x44
    3ec0:	add	r1, r4, r1
    3ec4:	str	r3, [sp]
    3ec8:	ldr	r2, [sp, #12]
    3ecc:	mov	r3, r9
    3ed0:	str	r4, [sp, #4]
    3ed4:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    3ed8:	mov	r0, sl
    3edc:	bl	21a0 <free@plt>
    3ee0:	ldr	fp, [r4, #64]	; 0x40
    3ee4:	lsl	sl, fp, #3
    3ee8:	cmp	sl, r5
    3eec:	ble	3f00 <EV4@@Base+0xa0>
    3ef0:	b	3f24 <EV4@@Base+0xc4>
    3ef4:	cmp	sl, r5
    3ef8:	str	fp, [r4, #64]	; 0x40
    3efc:	bgt	3f24 <EV4@@Base+0xc4>
    3f00:	mov	r0, r4
    3f04:	bl	2870 <__assert_fail@plt+0x31c>
    3f08:	add	sl, sl, #8
    3f0c:	add	fp, fp, #1
    3f10:	cmp	r0, #0
    3f14:	beq	3ef4 <EV4@@Base+0x94>
    3f18:	mov	r0, #10
    3f1c:	add	sp, sp, #20
    3f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3f24:	ldr	r3, [pc, #44]	; 3f58 <EV4@@Base+0xf8>
    3f28:	add	r6, r6, #15
    3f2c:	cmp	r6, r3
    3f30:	add	r5, r5, #10
    3f34:	bne	3e98 <EV4@@Base+0x38>
    3f38:	mov	r0, #2
    3f3c:	b	3f1c <EV4@@Base+0xbc>
    3f40:	mov	r0, #1
    3f44:	b	3f1c <EV4@@Base+0xbc>
    3f48:	cmp	r6, #44	; 0x2c
    3f4c:	movle	r0, #0
    3f50:	movgt	r0, #1
    3f54:	b	3f1c <EV4@@Base+0xbc>
    3f58:			; <UNDEFINED> instruction: 0x000005be

00003f5c <EV5@@Base>:
    3f5c:	add	r3, r1, #2816	; 0xb00
    3f60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3f64:	sub	sp, sp, #8
    3f68:	ldrh	r6, [r3, #6]
    3f6c:	mov	r3, #0
    3f70:	str	r3, [r1, #64]	; 0x40
    3f74:	sub	r6, r6, #122	; 0x7a
    3f78:	cmp	r6, #7
    3f7c:	ble	4004 <EV5@@Base+0xa8>
    3f80:	add	r7, r1, #2944	; 0xb80
    3f84:	mov	r5, r1
    3f88:	add	r7, r7, #2
    3f8c:	mov	r8, r0
    3f90:	mov	r1, r3
    3f94:	add	sl, r5, #68	; 0x44
    3f98:	mov	r9, #8
    3f9c:	b	3fc0 <EV5@@Base+0x64>
    3fa0:	add	r3, r4, #1
    3fa4:	cmp	r3, #181	; 0xb5
    3fa8:	lsl	r1, r3, #3
    3fac:	add	r2, r1, #7
    3fb0:	str	r3, [r5, #64]	; 0x40
    3fb4:	bgt	4010 <EV5@@Base+0xb4>
    3fb8:	cmp	r6, r2
    3fbc:	ble	4004 <EV5@@Base+0xa8>
    3fc0:	add	r3, r1, #18
    3fc4:	mov	r2, r8
    3fc8:	stm	sp, {r3, r5}
    3fcc:	add	r1, sl, r1
    3fd0:	mov	r3, r9
    3fd4:	mov	r0, r7
    3fd8:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    3fdc:	ldr	r4, [r5, #64]	; 0x40
    3fe0:	cmp	r4, #2
    3fe4:	ble	3fa0 <EV5@@Base+0x44>
    3fe8:	mov	r0, r5
    3fec:	bl	2870 <__assert_fail@plt+0x31c>
    3ff0:	cmp	r0, #0
    3ff4:	beq	3fa0 <EV5@@Base+0x44>
    3ff8:	mov	r0, #10
    3ffc:	add	sp, sp, #8
    4000:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4004:	mov	r0, #1
    4008:	add	sp, sp, #8
    400c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4010:	mov	r0, #2
    4014:	add	sp, sp, #8
    4018:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0000401c <HV@@Base>:
    401c:	add	r3, r1, #2816	; 0xb00
    4020:	push	{r4, r5, r6, r7, lr}
    4024:	sub	sp, sp, #92	; 0x5c
    4028:	ldrh	lr, [r3, #6]
    402c:	ldr	ip, [pc, #316]	; 4170 <HV@@Base+0x154>
    4030:	mov	r3, #0
    4034:	cmp	lr, ip
    4038:	str	r3, [r1, #40]	; 0x28
    403c:	strle	r3, [r1, #64]	; 0x40
    4040:	movle	r0, #1
    4044:	ble	4078 <HV@@Base+0x5c>
    4048:	mov	r4, r1
    404c:	ldrb	r1, [r1, #18]
    4050:	add	r3, r4, #2944	; 0xb80
    4054:	mov	r6, r0
    4058:	cmp	r1, #6
    405c:	add	r5, r3, #2
    4060:	beq	4080 <HV@@Base+0x64>
    4064:	cmp	r1, #7
    4068:	beq	4144 <HV@@Base+0x128>
    406c:	cmp	r1, #5
    4070:	beq	40e8 <HV@@Base+0xcc>
    4074:	mov	r0, #2
    4078:	add	sp, sp, #92	; 0x5c
    407c:	pop	{r4, r5, r6, r7, pc}
    4080:	mov	r0, r5
    4084:	mov	r1, #160	; 0xa0
    4088:	bl	291c <__assert_fail@plt+0x3c8>
    408c:	subs	r5, r0, #0
    4090:	moveq	r0, r5
    4094:	beq	4078 <HV@@Base+0x5c>
    4098:	mov	r3, #20
    409c:	str	r3, [r4, #64]	; 0x40
    40a0:	mov	r0, r4
    40a4:	mov	r2, #1
    40a8:	mov	r1, #7
    40ac:	bl	2188 <btbb_packet_set_flag@plt>
    40b0:	ldr	r3, [r4, #64]	; 0x40
    40b4:	mov	r0, #18
    40b8:	mov	r2, r6
    40bc:	lsl	r3, r3, #3
    40c0:	add	r1, r4, #68	; 0x44
    40c4:	str	r0, [sp]
    40c8:	str	r4, [sp, #4]
    40cc:	mov	r0, r5
    40d0:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    40d4:	mov	r0, r5
    40d8:	bl	21a0 <free@plt>
    40dc:	mov	r0, #2
    40e0:	add	sp, sp, #92	; 0x5c
    40e4:	pop	{r4, r5, r6, r7, pc}
    40e8:	add	r7, sp, #8
    40ec:	mov	r0, r5
    40f0:	mov	r1, r7
    40f4:	mov	r2, #80	; 0x50
    40f8:	bl	27b4 <__assert_fail@plt+0x260>
    40fc:	cmp	r0, #0
    4100:	beq	4078 <HV@@Base+0x5c>
    4104:	mov	r3, #10
    4108:	str	r3, [r4, #64]	; 0x40
    410c:	mov	r2, #1
    4110:	mov	r0, r4
    4114:	mov	r1, #7
    4118:	bl	2188 <btbb_packet_set_flag@plt>
    411c:	mov	ip, #18
    4120:	mov	r2, r6
    4124:	mov	r0, r7
    4128:	ldr	r3, [r4, #64]	; 0x40
    412c:	str	r4, [sp, #4]
    4130:	lsl	r3, r3, #3
    4134:	add	r1, r4, #68	; 0x44
    4138:	str	ip, [sp]
    413c:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    4140:	b	4074 <HV@@Base+0x58>
    4144:	mov	r3, #30
    4148:	str	r3, [r4, #64]	; 0x40
    414c:	mov	r2, #1
    4150:	mov	r0, r4
    4154:	bl	2188 <btbb_packet_set_flag@plt>
    4158:	ldr	r3, [r4, #64]	; 0x40
    415c:	mov	ip, #18
    4160:	str	r4, [sp, #4]
    4164:	mov	r2, r6
    4168:	mov	r0, r5
    416c:	b	4130 <HV@@Base+0x114>
    4170:	andeq	r0, r0, r9, ror #2

00004174 <crc_check@@Base>:
    4174:	ldrb	r3, [r1, #18]
    4178:	push	{r4, lr}
    417c:	mov	r4, r1
    4180:	sub	r3, r3, #2
    4184:	cmp	r3, #13
    4188:	addls	pc, pc, r3, lsl #2
    418c:	b	4240 <crc_check@@Base+0xcc>
    4190:	b	41f0 <crc_check@@Base+0x7c>
    4194:	b	4218 <crc_check@@Base+0xa4>
    4198:	b	4220 <crc_check@@Base+0xac>
    419c:	b	4228 <crc_check@@Base+0xb4>
    41a0:	b	4240 <crc_check@@Base+0xcc>
    41a4:	b	4230 <crc_check@@Base+0xbc>
    41a8:	b	4218 <crc_check@@Base+0xa4>
    41ac:	b	4240 <crc_check@@Base+0xcc>
    41b0:	b	4218 <crc_check@@Base+0xa4>
    41b4:	b	4220 <crc_check@@Base+0xac>
    41b8:	b	4238 <crc_check@@Base+0xc4>
    41bc:	b	41c8 <crc_check@@Base+0x54>
    41c0:	b	4218 <crc_check@@Base+0xa4>
    41c4:	b	4220 <crc_check@@Base+0xac>
    41c8:	bl	24ac <EV5@plt>
    41cc:	cmp	r0, #0
    41d0:	bne	41fc <crc_check@@Base+0x88>
    41d4:	ldrb	r3, [r4, #18]
    41d8:	sub	r0, r3, #2
    41dc:	cmp	r3, #5
    41e0:	cmpne	r0, #1
    41e4:	movhi	r0, #1
    41e8:	movls	r0, #0
    41ec:	pop	{r4, pc}
    41f0:	bl	21e8 <fhs@plt>
    41f4:	cmp	r0, #0
    41f8:	beq	41d4 <crc_check@@Base+0x60>
    41fc:	cmp	r0, #1
    4200:	pople	{r4, pc}
    4204:	ldrb	r3, [r4, #18]
    4208:	cmp	r3, #13
    420c:	cmpne	r3, #7
    4210:	moveq	r0, #1
    4214:	pop	{r4, pc}
    4218:	bl	2260 <DM@plt>
    421c:	b	41cc <crc_check@@Base+0x58>
    4220:	bl	24c4 <DH@plt>
    4224:	b	41cc <crc_check@@Base+0x58>
    4228:	bl	2278 <HV@plt>
    422c:	b	41cc <crc_check@@Base+0x58>
    4230:	bl	244c <EV3@plt>
    4234:	b	41cc <crc_check@@Base+0x58>
    4238:	bl	21f4 <EV4@plt>
    423c:	b	41cc <crc_check@@Base+0x58>
    4240:	mov	r0, #1
    4244:	pop	{r4, pc}

00004248 <try_clock@@Base>:
    4248:	push	{r4, r5, r6, r7, lr}
    424c:	sub	sp, sp, #52	; 0x34
    4250:	add	r3, r1, #2880	; 0xb40
    4254:	add	r6, sp, #8
    4258:	mov	r5, r1
    425c:	mov	r7, r0
    4260:	mov	r1, r6
    4264:	add	r0, r3, #12
    4268:	mov	r2, #18
    426c:	bl	27b4 <__assert_fail@plt+0x260>
    4270:	cmp	r0, #0
    4274:	bne	4280 <try_clock@@Base+0x38>
    4278:	add	sp, sp, #52	; 0x34
    427c:	pop	{r4, r5, r6, r7, pc}
    4280:	mov	r4, #0
    4284:	mov	r2, r7
    4288:	mov	r0, r6
    428c:	mov	r3, #18
    4290:	str	r5, [sp, #4]
    4294:	str	r4, [sp]
    4298:	add	r1, sp, #28
    429c:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    42a0:	mov	r0, r4
    42a4:	mov	r3, r4
    42a8:	add	r2, sp, #27
    42ac:	ldrb	r1, [r2, #1]!
    42b0:	orr	r0, r0, r1, lsl r3
    42b4:	add	r3, r3, #1
    42b8:	cmp	r3, #10
    42bc:	uxth	r0, r0
    42c0:	bne	42ac <try_clock@@Base+0x64>
    42c4:	mov	r1, #0
    42c8:	mov	r3, r1
    42cc:	add	r2, sp, #37	; 0x25
    42d0:	ldrb	ip, [r2, #1]!
    42d4:	orr	r1, r1, ip, lsl r3
    42d8:	add	r3, r3, #1
    42dc:	cmp	r3, #8
    42e0:	uxtb	r1, r1
    42e4:	bne	42d0 <try_clock@@Base+0x88>
    42e8:	bl	283c <__assert_fail@plt+0x2e8>
    42ec:	mov	r3, #0
    42f0:	mov	r2, r3
    42f4:	add	r1, sp, #31
    42f8:	strb	r0, [r5, #9]
    42fc:	ldrb	ip, [r1], #1
    4300:	orr	r3, r3, ip, lsl r2
    4304:	add	r2, r2, #1
    4308:	cmp	r2, #4
    430c:	uxtb	r3, r3
    4310:	bne	42fc <try_clock@@Base+0xb4>
    4314:	strb	r3, [r5, #18]
    4318:	add	sp, sp, #52	; 0x34
    431c:	pop	{r4, r5, r6, r7, pc}

00004320 <btbb_decode_header@@Base>:
    4320:	push	{r4, r5, r6, lr}
    4324:	mov	r1, #4
    4328:	sub	sp, sp, #32
    432c:	mov	r5, r0
    4330:	bl	21dc <btbb_packet_get_flag@plt>
    4334:	cmp	r0, #0
    4338:	bne	4348 <btbb_decode_header@@Base+0x28>
    433c:	mov	r0, #0
    4340:	add	sp, sp, #32
    4344:	pop	{r4, r5, r6, pc}
    4348:	add	r6, sp, #12
    434c:	add	r0, r5, #2880	; 0xb40
    4350:	mov	r1, r6
    4354:	add	r0, r0, #12
    4358:	mov	r2, #18
    435c:	bl	27b4 <__assert_fail@plt+0x260>
    4360:	cmp	r0, #0
    4364:	beq	433c <btbb_decode_header@@Base+0x1c>
    4368:	mov	r4, #0
    436c:	ldr	r2, [r5, #2816]	; 0xb00
    4370:	mov	r0, r6
    4374:	mov	r3, #18
    4378:	str	r5, [sp, #4]
    437c:	str	r4, [sp]
    4380:	add	r1, r5, #22
    4384:	add	r6, r5, #21
    4388:	bl	36fc <btbb_packet_get_flag@@Base+0x18>
    438c:	mov	r0, r4
    4390:	mov	r3, r4
    4394:	mov	r2, r6
    4398:	ldrb	r1, [r2, #1]!
    439c:	orr	r0, r0, r1, lsl r3
    43a0:	add	r3, r3, #1
    43a4:	cmp	r3, #10
    43a8:	uxth	r0, r0
    43ac:	bne	4398 <btbb_decode_header@@Base+0x78>
    43b0:	mov	r4, #0
    43b4:	mov	r3, r4
    43b8:	add	r2, r5, #31
    43bc:	ldrb	r1, [r2, #1]!
    43c0:	orr	r1, r4, r1, lsl r3
    43c4:	add	r3, r3, #1
    43c8:	cmp	r3, #8
    43cc:	uxtb	r4, r1
    43d0:	bne	43bc <btbb_decode_header@@Base+0x9c>
    43d4:	mov	r1, r4
    43d8:	bl	283c <__assert_fail@plt+0x2e8>
    43dc:	ldrb	r3, [r5, #9]
    43e0:	cmp	r3, r0
    43e4:	bne	433c <btbb_decode_header@@Base+0x1c>
    43e8:	mov	r1, #0
    43ec:	mov	r3, r1
    43f0:	ldrb	r2, [r6, #1]!
    43f4:	orr	r1, r1, r2, lsl r3
    43f8:	add	r3, r3, #1
    43fc:	cmp	r3, #3
    4400:	uxtb	r1, r1
    4404:	bne	43f0 <btbb_decode_header@@Base+0xd0>
    4408:	mov	r3, #0
    440c:	mov	r2, r3
    4410:	add	r0, r5, #24
    4414:	strb	r1, [r5, #19]
    4418:	ldrb	r1, [r0, #1]!
    441c:	orr	r3, r3, r1, lsl r2
    4420:	add	r2, r2, #1
    4424:	cmp	r2, #4
    4428:	uxtb	r3, r3
    442c:	bne	4418 <btbb_decode_header@@Base+0xf8>
    4430:	mov	r2, #0
    4434:	mov	r1, r2
    4438:	add	r0, r5, #28
    443c:	strb	r3, [r5, #18]
    4440:	ldrb	r3, [r0, #1]!
    4444:	orr	r2, r2, r3, lsl r1
    4448:	add	r1, r1, #1
    444c:	cmp	r1, #3
    4450:	uxtb	r2, r2
    4454:	bne	4440 <btbb_decode_header@@Base+0x120>
    4458:	mov	r0, #1
    445c:	strb	r2, [r5, #20]
    4460:	strb	r4, [r5, #21]
    4464:	b	4340 <btbb_decode_header@@Base+0x20>

00004468 <btbb_decode_payload@@Base>:
    4468:	push	{r4, r5, r6, lr}
    446c:	mov	r2, #0
    4470:	ldrb	r3, [r0, #18]
    4474:	mov	r4, r0
    4478:	str	r2, [r0, #40]	; 0x28
    447c:	cmp	r3, #15
    4480:	addls	pc, pc, r3, lsl #2
    4484:	b	457c <btbb_decode_payload@@Base+0x114>
    4488:	b	4530 <btbb_decode_payload@@Base+0xc8>
    448c:	b	4530 <btbb_decode_payload@@Base+0xc8>
    4490:	b	4540 <btbb_decode_payload@@Base+0xd8>
    4494:	b	44c8 <btbb_decode_payload@@Base+0x60>
    4498:	b	44f0 <btbb_decode_payload@@Base+0x88>
    449c:	b	451c <btbb_decode_payload@@Base+0xb4>
    44a0:	b	451c <btbb_decode_payload@@Base+0xb4>
    44a4:	b	4504 <btbb_decode_payload@@Base+0x9c>
    44a8:	b	44c8 <btbb_decode_payload@@Base+0x60>
    44ac:	b	44f0 <btbb_decode_payload@@Base+0x88>
    44b0:	b	44c8 <btbb_decode_payload@@Base+0x60>
    44b4:	b	44f0 <btbb_decode_payload@@Base+0x88>
    44b8:	b	4554 <btbb_decode_payload@@Base+0xec>
    44bc:	b	4568 <btbb_decode_payload@@Base+0x100>
    44c0:	b	44c8 <btbb_decode_payload@@Base+0x60>
    44c4:	b	44f0 <btbb_decode_payload@@Base+0x88>
    44c8:	mov	r1, r0
    44cc:	ldr	r0, [r0, #2816]	; 0xb00
    44d0:	bl	2260 <DM@plt>
    44d4:	mov	r5, r0
    44d8:	mov	r0, r4
    44dc:	mov	r2, #1
    44e0:	mov	r1, #7
    44e4:	bl	2188 <btbb_packet_set_flag@plt>
    44e8:	mov	r0, r5
    44ec:	pop	{r4, r5, r6, pc}
    44f0:	mov	r1, r0
    44f4:	ldr	r0, [r0, #2816]	; 0xb00
    44f8:	bl	24c4 <DH@plt>
    44fc:	mov	r5, r0
    4500:	b	44d8 <btbb_decode_payload@@Base+0x70>
    4504:	mov	r1, r0
    4508:	ldr	r0, [r0, #2816]	; 0xb00
    450c:	bl	244c <EV3@plt>
    4510:	cmp	r0, #1
    4514:	mov	r5, r0
    4518:	bgt	44d8 <btbb_decode_payload@@Base+0x70>
    451c:	mov	r1, r4
    4520:	ldr	r0, [r4, #2816]	; 0xb00
    4524:	bl	2278 <HV@plt>
    4528:	mov	r5, r0
    452c:	b	44d8 <btbb_decode_payload@@Base+0x70>
    4530:	mov	r3, #0
    4534:	str	r3, [r0, #64]	; 0x40
    4538:	mov	r5, #1
    453c:	b	44d8 <btbb_decode_payload@@Base+0x70>
    4540:	mov	r1, r0
    4544:	ldr	r0, [r0, #2816]	; 0xb00
    4548:	bl	21e8 <fhs@plt>
    454c:	mov	r5, r0
    4550:	b	44d8 <btbb_decode_payload@@Base+0x70>
    4554:	mov	r1, r0
    4558:	ldr	r0, [r0, #2816]	; 0xb00
    455c:	bl	21f4 <EV4@plt>
    4560:	mov	r5, r0
    4564:	b	44d8 <btbb_decode_payload@@Base+0x70>
    4568:	mov	r1, r0
    456c:	ldr	r0, [r0, #2816]	; 0xb00
    4570:	bl	24ac <EV5@plt>
    4574:	mov	r5, r0
    4578:	b	44d8 <btbb_decode_payload@@Base+0x70>
    457c:	mov	r5, #0
    4580:	b	44d8 <btbb_decode_payload@@Base+0x70>

00004584 <btbb_print_packet@@Base>:
    4584:	push	{r4, r5, r6, r7, r8, lr}
    4588:	mov	r1, #7
    458c:	mov	r4, r0
    4590:	bl	21dc <btbb_packet_get_flag@plt>
    4594:	cmp	r0, #0
    4598:	popeq	{r4, r5, r6, r7, r8, pc}
    459c:	ldrb	r2, [r4, #18]
    45a0:	ldr	r3, [pc, #224]	; 4688 <btbb_print_packet@@Base+0x104>
    45a4:	ldr	r0, [pc, #224]	; 468c <btbb_print_packet@@Base+0x108>
    45a8:	add	r3, pc, r3
    45ac:	add	r0, pc, r0
    45b0:	ldr	r1, [r3, r2, lsl #2]
    45b4:	bl	2158 <printf@plt>
    45b8:	ldr	r3, [r4, #40]	; 0x28
    45bc:	cmp	r3, #0
    45c0:	ble	4604 <btbb_print_packet@@Base+0x80>
    45c4:	ldr	r0, [pc, #196]	; 4690 <btbb_print_packet@@Base+0x10c>
    45c8:	ldrb	r1, [r4, #19]
    45cc:	add	r0, pc, r0
    45d0:	bl	2158 <printf@plt>
    45d4:	ldr	r0, [pc, #184]	; 4694 <btbb_print_packet@@Base+0x110>
    45d8:	ldrb	r1, [r4, #60]	; 0x3c
    45dc:	add	r0, pc, r0
    45e0:	bl	2158 <printf@plt>
    45e4:	ldr	r0, [pc, #172]	; 4698 <btbb_print_packet@@Base+0x114>
    45e8:	ldrb	r1, [r4, #61]	; 0x3d
    45ec:	add	r0, pc, r0
    45f0:	bl	2158 <printf@plt>
    45f4:	ldr	r0, [pc, #160]	; 469c <btbb_print_packet@@Base+0x118>
    45f8:	ldr	r1, [r4, #64]	; 0x40
    45fc:	add	r0, pc, r0
    4600:	bl	2158 <printf@plt>
    4604:	ldr	r3, [r4, #64]	; 0x40
    4608:	cmp	r3, #0
    460c:	popeq	{r4, r5, r6, r7, r8, pc}
    4610:	ldr	r0, [pc, #136]	; 46a0 <btbb_print_packet@@Base+0x11c>
    4614:	add	r0, pc, r0
    4618:	bl	2158 <printf@plt>
    461c:	ldr	r3, [r4, #64]	; 0x40
    4620:	cmp	r3, #0
    4624:	ble	467c <btbb_print_packet@@Base+0xf8>
    4628:	ldr	r6, [pc, #116]	; 46a4 <btbb_print_packet@@Base+0x120>
    462c:	mov	r7, #0
    4630:	add	r6, pc, r6
    4634:	mov	r5, r7
    4638:	add	r8, r4, #68	; 0x44
    463c:	mov	r2, r8
    4640:	mov	r1, r5
    4644:	mov	r3, #0
    4648:	ldrb	r0, [r2], #1
    464c:	orr	r1, r1, r0, lsl r3
    4650:	add	r3, r3, #1
    4654:	cmp	r3, #8
    4658:	uxtb	r1, r1
    465c:	bne	4648 <btbb_print_packet@@Base+0xc4>
    4660:	mov	r0, r6
    4664:	bl	2158 <printf@plt>
    4668:	ldr	r3, [r4, #64]	; 0x40
    466c:	add	r7, r7, #1
    4670:	cmp	r7, r3
    4674:	add	r8, r8, #8
    4678:	blt	463c <btbb_print_packet@@Base+0xb8>
    467c:	mov	r0, #10
    4680:	pop	{r4, r5, r6, r7, r8, lr}
    4684:	b	2434 <putchar@plt>
    4688:	andeq	r4, r2, r8, ror #16
    468c:	muleq	r0, r4, r8
    4690:	andeq	sp, r0, r0, lsl #17
    4694:	andeq	sp, r0, r0, lsl #17
    4698:	andeq	sp, r0, ip, ror r8
    469c:	andeq	sp, r0, r8, ror r8
    46a0:	andeq	sp, r0, r8, ror r8
    46a4:			; <UNDEFINED> instruction: 0x0000debc

000046a8 <btbb_decode@@Base>:
    46a8:	push	{r4, r5, r6, lr}
    46ac:	mov	r2, #0
    46b0:	mov	r4, r0
    46b4:	mov	r1, #7
    46b8:	bl	2188 <btbb_packet_set_flag@plt>
    46bc:	mov	r0, r4
    46c0:	bl	2398 <btbb_decode_header@plt>
    46c4:	subs	r5, r0, #0
    46c8:	bne	46d4 <btbb_decode@@Base+0x2c>
    46cc:	mov	r0, r5
    46d0:	pop	{r4, r5, r6, pc}
    46d4:	mov	r0, r4
    46d8:	bl	24e8 <btbb_decode_payload@plt>
    46dc:	subs	r5, r0, #0
    46e0:	ble	46cc <btbb_decode@@Base+0x24>
    46e4:	ldr	r1, [r4, #2816]	; 0xb00
    46e8:	ldr	r0, [pc, #28]	; 470c <btbb_decode@@Base+0x64>
    46ec:	mov	r2, r5
    46f0:	and	r1, r1, #63	; 0x3f
    46f4:	add	r0, pc, r0
    46f8:	bl	2158 <printf@plt>
    46fc:	mov	r0, r4
    4700:	bl	250c <btbb_print_packet@plt>
    4704:	mov	r0, r5
    4708:	pop	{r4, r5, r6, pc}
    470c:	andeq	sp, r0, r4, lsr #15

00004710 <tun_format@@Base>:
    4710:	push	{r4, r5, r6, lr}
    4714:	mov	r4, r0
    4718:	ldr	r0, [r0, #64]	; 0x40
    471c:	add	r0, r0, #9
    4720:	bl	2320 <malloc@plt>
    4724:	ldr	r3, [r4, #2816]	; 0xb00
    4728:	ldrb	r2, [r4, #8]
    472c:	mov	r1, #5
    4730:	lsr	r6, r3, #8
    4734:	lsr	lr, r3, #16
    4738:	lsr	ip, r3, #24
    473c:	mov	r5, r0
    4740:	mov	r0, r4
    4744:	strb	r3, [r5]
    4748:	strb	r2, [r5, #4]
    474c:	strb	r6, [r5, #1]
    4750:	strb	lr, [r5, #2]
    4754:	strb	ip, [r5, #3]
    4758:	bl	21dc <btbb_packet_get_flag@plt>
    475c:	mov	r1, #1
    4760:	mov	r6, r0
    4764:	mov	r0, r4
    4768:	bl	21dc <btbb_packet_get_flag@plt>
    476c:	mov	r3, #0
    4770:	add	r1, r4, #21
    4774:	mov	r2, r3
    4778:	orr	r0, r6, r0, lsl #1
    477c:	strb	r0, [r5, #5]
    4780:	ldrb	r0, [r1, #1]!
    4784:	orr	r3, r3, r0, lsl r2
    4788:	add	r2, r2, #1
    478c:	cmp	r2, #7
    4790:	uxtb	r3, r3
    4794:	bne	4780 <tun_format@@Base+0x70>
    4798:	mov	r0, #0
    479c:	mov	r2, r0
    47a0:	add	r1, r4, #28
    47a4:	strb	r3, [r5, #6]
    47a8:	ldrb	r3, [r1, #1]!
    47ac:	orr	r0, r0, r3, lsl r2
    47b0:	add	r2, r2, #1
    47b4:	cmp	r2, #3
    47b8:	uxtb	r0, r0
    47bc:	bne	47a8 <tun_format@@Base+0x98>
    47c0:	mov	r3, #0
    47c4:	mov	r2, r3
    47c8:	add	r1, r4, #31
    47cc:	strb	r0, [r5, #7]
    47d0:	ldrb	r0, [r1, #1]!
    47d4:	orr	r3, r3, r0, lsl r2
    47d8:	add	r2, r2, #1
    47dc:	cmp	r2, #8
    47e0:	uxtb	r3, r3
    47e4:	bne	47d0 <tun_format@@Base+0xc0>
    47e8:	ldr	r2, [r4, #64]	; 0x40
    47ec:	strb	r3, [r5, #8]
    47f0:	cmp	r2, #0
    47f4:	ble	4840 <tun_format@@Base+0x130>
    47f8:	add	r2, r2, #8
    47fc:	add	ip, r4, #67	; 0x43
    4800:	add	r6, r5, r2
    4804:	add	lr, r5, #8
    4808:	mov	r4, #0
    480c:	mov	r1, ip
    4810:	mov	r3, r4
    4814:	mov	r2, #0
    4818:	ldrb	r0, [r1, #1]!
    481c:	orr	r3, r3, r0, lsl r2
    4820:	add	r2, r2, #1
    4824:	cmp	r2, #8
    4828:	uxtb	r3, r3
    482c:	bne	4818 <tun_format@@Base+0x108>
    4830:	strb	r3, [lr, #1]!
    4834:	cmp	r6, lr
    4838:	add	ip, ip, #8
    483c:	bne	480c <tun_format@@Base+0xfc>
    4840:	mov	r0, r5
    4844:	pop	{r4, r5, r6, pc}

00004848 <btbb_header_present@@Base>:
    4848:	add	r3, r0, #2816	; 0xb00
    484c:	ldrh	r3, [r3, #6]
    4850:	cmp	r3, #121	; 0x79
    4854:	bls	48e4 <btbb_header_present@@Base+0x9c>
    4858:	push	{r4, lr}
    485c:	ldrb	r3, [r0, #2887]	; 0xb47
    4860:	ldrb	ip, [r0, #2888]	; 0xb48
    4864:	ldrb	r4, [r0, #2889]	; 0xb49
    4868:	ldrb	r1, [r0, #2890]	; 0xb4a
    486c:	clz	lr, r3
    4870:	ldrb	r2, [r0, #2891]	; 0xb4b
    4874:	lsr	lr, lr, #5
    4878:	eor	r4, r4, r3
    487c:	eor	ip, ip, lr
    4880:	add	ip, ip, r4
    4884:	eor	r1, r1, lr
    4888:	eor	r2, r2, r3
    488c:	add	r4, r0, #2944	; 0xb80
    4890:	add	r3, r0, #2880	; 0xb40
    4894:	add	r1, r1, ip
    4898:	add	r0, r2, r1
    489c:	add	r3, r3, #12
    48a0:	add	r4, r4, #2
    48a4:	ldrb	r1, [r3]
    48a8:	ldrb	ip, [r3, #1]
    48ac:	ldrb	lr, [r3, #2]
    48b0:	add	r3, r3, #3
    48b4:	eor	r2, r1, ip
    48b8:	eor	ip, ip, lr
    48bc:	orr	r2, r2, ip
    48c0:	eor	r1, r1, lr
    48c4:	orr	r2, r2, r1
    48c8:	cmp	r4, r3
    48cc:	add	r0, r0, r2
    48d0:	bne	48a4 <btbb_header_present@@Base+0x5c>
    48d4:	cmp	r0, #4
    48d8:	movgt	r0, #0
    48dc:	movle	r0, #1
    48e0:	pop	{r4, pc}
    48e4:	mov	r0, #0
    48e8:	bx	lr

000048ec <lap_from_fhs@@Base>:
    48ec:	mov	r2, #0
    48f0:	add	r0, r0, #101	; 0x65
    48f4:	mov	r3, r2
    48f8:	ldrb	r1, [r0, #1]!
    48fc:	orr	r2, r2, r1, lsl r3
    4900:	add	r3, r3, #1
    4904:	cmp	r3, #24
    4908:	bne	48f8 <lap_from_fhs@@Base+0xc>
    490c:	mov	r0, r2
    4910:	bx	lr

00004914 <uap_from_fhs@@Base>:
    4914:	mov	r3, #0
    4918:	add	r0, r0, #131	; 0x83
    491c:	mov	r2, r3
    4920:	ldrb	r1, [r0, #1]!
    4924:	orr	r3, r3, r1, lsl r2
    4928:	add	r2, r2, #1
    492c:	cmp	r2, #8
    4930:	uxtb	r3, r3
    4934:	bne	4920 <uap_from_fhs@@Base+0xc>
    4938:	mov	r0, r3
    493c:	bx	lr

00004940 <nap_from_fhs@@Base>:
    4940:	mov	r3, #0
    4944:	add	r0, r0, #139	; 0x8b
    4948:	mov	r2, r3
    494c:	ldrb	r1, [r0, #1]!
    4950:	orr	r3, r3, r1, lsl r2
    4954:	add	r2, r2, #1
    4958:	cmp	r2, #16
    495c:	uxth	r3, r3
    4960:	bne	494c <nap_from_fhs@@Base+0xc>
    4964:	mov	r0, r3
    4968:	bx	lr

0000496c <clock_from_fhs@@Base>:
    496c:	mov	r2, #0
    4970:	add	r0, r0, #182	; 0xb6
    4974:	mov	r3, r2
    4978:	ldrb	r1, [r0, #1]!
    497c:	orr	r2, r2, r1, lsl r3
    4980:	add	r3, r3, #1
    4984:	cmp	r3, #26
    4988:	bne	4978 <clock_from_fhs@@Base+0xc>
    498c:	mov	r0, r2
    4990:	bx	lr

00004994 <count_bits@@Base>:
    4994:	subs	r3, r0, #0
    4998:	beq	49b4 <count_bits@@Base+0x20>
    499c:	mov	r0, #0
    49a0:	sub	r2, r3, #1
    49a4:	ands	r3, r2, r3
    49a8:	add	r0, r0, #1
    49ac:	bne	49a0 <count_bits@@Base+0xc>
    49b0:	bx	lr
    49b4:	mov	r0, r3
    49b8:	bx	lr

000049bc <btbb_piconet_new@@Base>:
    49bc:	push	{r4, lr}
    49c0:	mov	r0, #1
    49c4:	ldr	r1, [pc, #12]	; 49d8 <btbb_piconet_new@@Base+0x1c>
    49c8:	bl	2104 <calloc@plt>
    49cc:	mov	r3, #1
    49d0:	str	r3, [r0]
    49d4:	pop	{r4, pc}
    49d8:	andeq	r1, r0, ip, lsl r6

000049dc <btbb_piconet_ref@@Base>:
    49dc:	ldr	r3, [r0]
    49e0:	add	r3, r3, #1
    49e4:	str	r3, [r0]
    49e8:	bx	lr

000049ec <btbb_piconet_unref@@Base>:
    49ec:	ldr	r3, [r0]
    49f0:	subs	r3, r3, #1
    49f4:	beq	4a00 <btbb_piconet_unref@@Base+0x14>
    49f8:	str	r3, [r0]
    49fc:	bx	lr
    4a00:	b	21a0 <free@plt>

00004a04 <btbb_init_survey@@Base>:
    4a04:	ldr	r3, [pc, #16]	; 4a1c <btbb_init_survey@@Base+0x18>
    4a08:	mov	r2, #1
    4a0c:	add	r3, pc, r3
    4a10:	mov	r0, #0
    4a14:	str	r2, [r3]
    4a18:	bx	lr
    4a1c:	andeq	r4, r2, r0, lsr #15

00004a20 <btbb_piconet_set_flag@@Base>:
    4a20:	mov	r3, #1
    4a24:	cmp	r2, #0
    4a28:	lsl	r1, r3, r1
    4a2c:	ldr	r2, [r0, #4]
    4a30:	biceq	r1, r2, r1
    4a34:	orrne	r1, r1, r2
    4a38:	str	r1, [r0, #4]
    4a3c:	bx	lr

00004a40 <btbb_init_piconet@@Base>:
    4a40:	str	r1, [r0, #24]
    4a44:	mov	r2, #1
    4a48:	mov	r1, #3
    4a4c:	b	226c <btbb_piconet_set_flag@plt>

00004a50 <btbb_piconet_get_flag@@Base>:
    4a50:	ldr	r3, [r0, #4]
    4a54:	mov	r2, #1
    4a58:	ands	r3, r3, r2, lsl r1
    4a5c:	movne	r0, r2
    4a60:	moveq	r0, #0
    4a64:	bx	lr
    4a68:	push	{r4, lr}
    4a6c:	mov	r1, #9
    4a70:	mov	r4, r0
    4a74:	bl	2248 <btbb_piconet_get_flag@plt>
    4a78:	cmp	r0, #0
    4a7c:	beq	4a90 <btbb_piconet_get_flag@@Base+0x40>
    4a80:	ldr	r0, [r4, #32]
    4a84:	bl	21a0 <free@plt>
    4a88:	mov	r3, #0
    4a8c:	str	r3, [r4, #372]	; 0x174
    4a90:	mov	r0, r4
    4a94:	mov	r2, #0
    4a98:	mov	r1, #10
    4a9c:	bl	226c <btbb_piconet_set_flag@plt>
    4aa0:	mov	r0, r4
    4aa4:	mov	r2, #0
    4aa8:	mov	r1, #9
    4aac:	bl	226c <btbb_piconet_set_flag@plt>
    4ab0:	mov	r0, r4
    4ab4:	mov	r2, #0
    4ab8:	mov	r1, #2
    4abc:	bl	226c <btbb_piconet_set_flag@plt>
    4ac0:	mov	r0, r4
    4ac4:	mov	r2, #0
    4ac8:	mov	r1, #4
    4acc:	bl	226c <btbb_piconet_set_flag@plt>
    4ad0:	mov	r2, #0
    4ad4:	mov	r0, r4
    4ad8:	mov	r1, #5
    4adc:	bl	226c <btbb_piconet_set_flag@plt>
    4ae0:	mov	r3, #0
    4ae4:	str	r3, [r4, #380]	; 0x17c
    4ae8:	mov	r1, #12
    4aec:	mov	r0, r4
    4af0:	bl	2248 <btbb_piconet_get_flag@plt>
    4af4:	mov	r1, #11
    4af8:	mov	r2, r0
    4afc:	mov	r0, r4
    4b00:	pop	{r4, lr}
    4b04:	b	226c <btbb_piconet_set_flag@plt>

00004b08 <btbb_piconet_set_uap@@Base>:
    4b08:	strb	r1, [r0, #28]
    4b0c:	mov	r2, #1
    4b10:	mov	r1, #2
    4b14:	b	226c <btbb_piconet_set_flag@plt>

00004b18 <btbb_piconet_get_uap@@Base>:
    4b18:	ldrb	r0, [r0, #28]
    4b1c:	bx	lr

00004b20 <btbb_piconet_get_lap@@Base>:
    4b20:	ldr	r0, [r0, #24]
    4b24:	bx	lr

00004b28 <btbb_piconet_get_nap@@Base>:
    4b28:	ldrh	r0, [r0, #30]
    4b2c:	bx	lr

00004b30 <btbb_piconet_get_bdaddr@@Base>:
    4b30:	ldrb	r1, [r0, #28]
    4b34:	ldrh	r3, [r0, #30]
    4b38:	ldr	r0, [r0, #24]
    4b3c:	mov	r2, #0
    4b40:	orr	r2, r2, r0
    4b44:	lsl	r0, r1, #24
    4b48:	orr	r2, r2, r0
    4b4c:	mov	r0, r2
    4b50:	mov	r1, r3
    4b54:	bx	lr

00004b58 <btbb_piconet_get_clk_offset@@Base>:
    4b58:	add	r0, r0, #4096	; 0x1000
    4b5c:	ldr	r0, [r0, #1552]	; 0x610
    4b60:	bx	lr

00004b64 <btbb_piconet_set_clk_offset@@Base>:
    4b64:	add	r0, r0, #4096	; 0x1000
    4b68:	str	r1, [r0, #1552]	; 0x610
    4b6c:	bx	lr

00004b70 <btbb_piconet_get_afh_map@@Base>:
    4b70:	add	r0, r0, #12
    4b74:	bx	lr

00004b78 <btbb_piconet_set_channel_seen@@Base>:
    4b78:	add	ip, r0, r1, lsr #3
    4b7c:	and	r1, r1, #7
    4b80:	ldrb	r3, [ip, #12]
    4b84:	mov	r2, r0
    4b88:	asr	r0, r3, r1
    4b8c:	tst	r0, #1
    4b90:	bne	4bb8 <btbb_piconet_set_channel_seen@@Base+0x40>
    4b94:	push	{lr}		; (str lr, [sp, #-4]!)
    4b98:	mov	lr, #1
    4b9c:	mov	r0, lr
    4ba0:	orr	r1, r3, lr, lsl r1
    4ba4:	strb	r1, [ip, #12]
    4ba8:	ldrb	r3, [r2, #22]
    4bac:	add	r3, r3, lr
    4bb0:	strb	r3, [r2, #22]
    4bb4:	pop	{pc}		; (ldr pc, [sp], #4)
    4bb8:	mov	r0, #0
    4bbc:	bx	lr

00004bc0 <btbb_piconet_clear_channel_seen@@Base>:
    4bc0:	add	ip, r0, r1, lsr #3
    4bc4:	and	r1, r1, #7
    4bc8:	ldrb	r2, [ip, #12]
    4bcc:	asr	r3, r2, r1
    4bd0:	ands	r3, r3, #1
    4bd4:	beq	4bfc <btbb_piconet_clear_channel_seen@@Base+0x3c>
    4bd8:	push	{lr}		; (str lr, [sp, #-4]!)
    4bdc:	mov	lr, #1
    4be0:	bic	r1, r2, lr, lsl r1
    4be4:	strb	r1, [ip, #12]
    4be8:	ldrb	r2, [r0, #22]
    4bec:	sub	r2, r2, #1
    4bf0:	strb	r2, [r0, #22]
    4bf4:	mov	r0, lr
    4bf8:	pop	{pc}		; (ldr pc, [sp], #4)
    4bfc:	mov	r0, r3
    4c00:	bx	lr

00004c04 <btbb_piconet_get_channel_seen@@Base>:
    4c04:	cmp	r1, #78	; 0x4e
    4c08:	addls	r0, r0, r1, lsr #3
    4c0c:	andls	r1, r1, #7
    4c10:	ldrbls	r0, [r0, #12]
    4c14:	asrls	r0, r0, r1
    4c18:	andls	r0, r0, #1
    4c1c:	movhi	r0, #1
    4c20:	bx	lr

00004c24 <precalc@@Base>:
    4c24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4c28:	mov	r8, #0
    4c2c:	mov	r4, r0
    4c30:	ldr	r5, [pc, #144]	; 4cc8 <precalc@@Base+0xa4>
    4c34:	add	r9, r0, #56	; 0x38
    4c38:	mov	r7, r8
    4c3c:	mov	r6, #11
    4c40:	b	4c54 <precalc@@Base+0x30>
    4c44:	add	r8, r8, #2
    4c48:	cmp	r8, #158	; 0x9e
    4c4c:	add	r9, r9, #4
    4c50:	beq	4cc4 <precalc@@Base+0xa0>
    4c54:	mov	r1, r6
    4c58:	mov	r0, r4
    4c5c:	bl	2248 <btbb_piconet_get_flag@plt>
    4c60:	smull	r2, r3, r5, r8
    4c64:	asr	r2, r8, #31
    4c68:	rsb	r3, r2, r3, asr #5
    4c6c:	add	r2, r3, r3, lsl #2
    4c70:	rsb	r3, r3, r2, lsl #4
    4c74:	sub	r3, r8, r3
    4c78:	cmp	r0, #0
    4c7c:	streq	r3, [r9]
    4c80:	beq	4c44 <precalc@@Base+0x20>
    4c84:	smull	r3, sl, r5, r8
    4c88:	asr	r3, r8, #31
    4c8c:	rsb	sl, r3, sl, asr #5
    4c90:	rsb	sl, sl, r2, lsl #4
    4c94:	sub	sl, r8, sl
    4c98:	mov	r0, r4
    4c9c:	uxtb	r1, sl
    4ca0:	bl	2224 <btbb_piconet_get_channel_seen@plt>
    4ca4:	add	r3, r7, #14
    4ca8:	add	r8, r8, #2
    4cac:	add	r9, r9, #4
    4cb0:	cmp	r0, #0
    4cb4:	strne	sl, [r4, r3, lsl #2]
    4cb8:	addne	r7, r7, #1
    4cbc:	cmp	r8, #158	; 0x9e
    4cc0:	bne	4c54 <precalc@@Base+0x30>
    4cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4cc8:	sbfxvs	r3, r5, #20, #19

00004ccc <address_precalc@@Base>:
    4ccc:	asr	r2, r0, #7
    4cd0:	asr	r3, r0, #6
    4cd4:	and	r3, r3, #32
    4cd8:	and	r2, r2, #64	; 0x40
    4cdc:	orr	r2, r2, r3
    4ce0:	asr	r3, r0, #5
    4ce4:	push	{r4, r5, r6, lr}
    4ce8:	and	r3, r3, #16
    4cec:	asr	lr, r0, #4
    4cf0:	asr	r4, r0, #3
    4cf4:	and	ip, lr, #16
    4cf8:	and	r5, lr, #8
    4cfc:	and	r6, r4, #8
    4d00:	asr	lr, r0, #2
    4d04:	add	r3, r2, r3
    4d08:	and	r4, r4, #4
    4d0c:	orr	r2, ip, r6
    4d10:	add	r3, r3, r5
    4d14:	and	r6, lr, #4
    4d18:	asr	ip, r0, #1
    4d1c:	add	r2, r2, r6
    4d20:	and	lr, lr, #2
    4d24:	and	r6, ip, #2
    4d28:	add	r3, r3, r4
    4d2c:	ldr	r4, [pc, #64]	; 4d74 <address_precalc@@Base+0xa8>
    4d30:	asr	r5, r0, #23
    4d34:	add	r2, r2, r6
    4d38:	add	r3, r3, lr
    4d3c:	and	r6, r0, #1
    4d40:	asr	lr, r0, #19
    4d44:	and	ip, ip, #1
    4d48:	and	r5, r5, #31
    4d4c:	and	lr, lr, #15
    4d50:	add	r2, r2, r6
    4d54:	add	r3, r3, ip
    4d58:	and	r0, r4, r0, asr #10
    4d5c:	str	r5, [r1, #44]	; 0x2c
    4d60:	str	lr, [r1, #36]	; 0x24
    4d64:	str	r2, [r1, #48]	; 0x30
    4d68:	str	r3, [r1, #40]	; 0x28
    4d6c:	str	r0, [r1, #52]	; 0x34
    4d70:	pop	{r4, r5, r6, pc}
    4d74:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00004d78 <perm5@@Base>:
    4d78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4d7c:	mov	r7, r0
    4d80:	ldr	r5, [pc, #304]	; 4eb8 <perm5@@Base+0x140>
    4d84:	sub	sp, sp, #196	; 0xc4
    4d88:	add	r5, pc, r5
    4d8c:	mov	ip, r5
    4d90:	mov	r8, r1
    4d94:	mov	r9, r2
    4d98:	ldm	ip!, {r0, r1, r2, r3}
    4d9c:	add	lr, sp, #80	; 0x50
    4da0:	mov	fp, lr
    4da4:	add	r5, r5, #56	; 0x38
    4da8:	stmia	fp!, {r0, r1, r2, r3}
    4dac:	add	r4, sp, #136	; 0x88
    4db0:	ldm	ip!, {r0, r1, r2, r3}
    4db4:	mov	sl, r4
    4db8:	add	r6, sp, #20
    4dbc:	stmia	fp!, {r0, r1, r2, r3}
    4dc0:	ldm	ip!, {r0, r1, r2, r3}
    4dc4:	stmia	fp!, {r0, r1, r2, r3}
    4dc8:	ldm	ip, {r0, r1}
    4dcc:	mov	ip, #0
    4dd0:	stm	fp, {r0, r1}
    4dd4:	ldm	r5!, {r0, r1, r2, r3}
    4dd8:	stmia	sl!, {r0, r1, r2, r3}
    4ddc:	ldm	r5!, {r0, r1, r2, r3}
    4de0:	stmia	sl!, {r0, r1, r2, r3}
    4de4:	ldm	r5!, {r0, r1, r2, r3}
    4de8:	stmia	sl!, {r0, r1, r2, r3}
    4dec:	ldm	r5, {r0, r1}
    4df0:	stm	sl, {r0, r1}
    4df4:	asr	r3, r9, ip
    4df8:	add	ip, ip, #1
    4dfc:	and	r3, r3, #1
    4e00:	cmp	ip, #9
    4e04:	str	r3, [r6, #4]!
    4e08:	bne	4df4 <perm5@@Base+0x7c>
    4e0c:	add	r1, sp, #60	; 0x3c
    4e10:	mov	r3, #0
    4e14:	asr	r2, r8, r3
    4e18:	add	r3, r3, #1
    4e1c:	and	r2, r2, #1
    4e20:	cmp	r3, #5
    4e24:	str	r2, [r1], #4
    4e28:	bne	4e14 <perm5@@Base+0x9c>
    4e2c:	mov	r3, #0
    4e30:	add	ip, sp, #4
    4e34:	asr	r2, r7, r3
    4e38:	and	r2, r2, #1
    4e3c:	str	r2, [ip, r3, lsl #2]
    4e40:	add	r3, r3, #1
    4e44:	cmp	r3, #5
    4e48:	bne	4e34 <perm5@@Base+0xbc>
    4e4c:	add	r5, sp, #24
    4e50:	mov	r3, lr
    4e54:	mov	r2, #13
    4e58:	ldr	r1, [r3, #-4]!
    4e5c:	cmp	r1, #0
    4e60:	beq	4e88 <perm5@@Base+0x110>
    4e64:	ldr	r0, [lr, r2, lsl #2]
    4e68:	ldr	r1, [r4, r2, lsl #2]
    4e6c:	add	r6, sp, #192	; 0xc0
    4e70:	add	r0, r6, r0, lsl #2
    4e74:	add	r1, r6, r1, lsl #2
    4e78:	ldr	r6, [r0, #-188]	; 0xffffff44
    4e7c:	ldr	r7, [r1, #-188]	; 0xffffff44
    4e80:	str	r7, [r0, #-188]	; 0xffffff44
    4e84:	str	r6, [r1, #-188]	; 0xffffff44
    4e88:	cmp	r3, r5
    4e8c:	sub	r2, r2, #1
    4e90:	bne	4e58 <perm5@@Base+0xe0>
    4e94:	mov	r0, #0
    4e98:	mov	r3, r0
    4e9c:	ldr	r2, [ip, r3, lsl #2]
    4ea0:	add	r0, r0, r2, lsl r3
    4ea4:	add	r3, r3, #1
    4ea8:	cmp	r3, #5
    4eac:	bne	4e9c <perm5@@Base+0x124>
    4eb0:	add	sp, sp, #196	; 0xc4
    4eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4eb8:	ldrdeq	sp, [r0], -ip

00004ebc <perm_table_init@@Base>:
    4ebc:	ldr	r3, [pc, #104]	; 4f2c <perm_table_init@@Base+0x70>
    4ec0:	ldr	r2, [pc, #104]	; 4f30 <perm_table_init@@Base+0x74>
    4ec4:	add	r3, pc, r3
    4ec8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4ecc:	mov	r7, #0
    4ed0:	ldr	r9, [r3, r2]
    4ed4:	sub	r9, r9, #1
    4ed8:	mov	r8, r9
    4edc:	mov	r6, #0
    4ee0:	mov	r5, r8
    4ee4:	mov	r4, #0
    4ee8:	mov	r2, r4
    4eec:	mov	r1, r6
    4ef0:	mov	r0, r7
    4ef4:	bl	2494 <perm5@plt>
    4ef8:	add	r4, r4, #1
    4efc:	cmp	r4, #512	; 0x200
    4f00:	strb	r0, [r5, #1]!
    4f04:	bne	4ee8 <perm_table_init@@Base+0x2c>
    4f08:	add	r6, r6, #1
    4f0c:	cmp	r6, #32
    4f10:	add	r8, r8, #512	; 0x200
    4f14:	bne	4ee0 <perm_table_init@@Base+0x24>
    4f18:	add	r7, r7, #1
    4f1c:	cmp	r7, #32
    4f20:	add	r9, r9, #16384	; 0x4000
    4f24:	bne	4ed8 <perm_table_init@@Base+0x1c>
    4f28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4f2c:	andeq	r4, r2, r4, lsr r1
    4f30:	andeq	r0, r0, ip, lsl #3

00004f34 <fast_perm@@Base>:
    4f34:	push	{r4, r5, r6, r7, r8, lr}
    4f38:	mov	r8, r0
    4f3c:	ldr	r5, [pc, #64]	; 4f84 <fast_perm@@Base+0x50>
    4f40:	ldr	r3, [pc, #64]	; 4f88 <fast_perm@@Base+0x54>
    4f44:	add	r5, pc, r5
    4f48:	mov	r4, r1
    4f4c:	ldr	r6, [r5, r3]
    4f50:	mov	r7, r2
    4f54:	ldr	r3, [r6]
    4f58:	cmp	r3, #0
    4f5c:	bne	4f6c <fast_perm@@Base+0x38>
    4f60:	bl	229c <perm_table_init@plt>
    4f64:	mov	r3, #1
    4f68:	str	r3, [r6]
    4f6c:	ldr	r3, [pc, #24]	; 4f8c <fast_perm@@Base+0x58>
    4f70:	add	r4, r4, r8, lsl #5
    4f74:	ldr	r1, [r5, r3]
    4f78:	add	r1, r1, r4, lsl #9
    4f7c:	ldrb	r0, [r1, r7]
    4f80:	pop	{r4, r5, r6, r7, r8, pc}
    4f84:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
    4f88:	muleq	r0, r0, r1
    4f8c:	andeq	r0, r0, ip, lsl #3

00004f90 <gen_hop_pattern@@Base>:
    4f90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4f94:	mov	fp, r0
    4f98:	ldr	r0, [pc, #768]	; 52a0 <gen_hop_pattern@@Base+0x310>
    4f9c:	sub	sp, sp, #76	; 0x4c
    4fa0:	add	r0, pc, r0
    4fa4:	bl	2314 <puts@plt>
    4fa8:	mov	r0, #134217728	; 0x8000000
    4fac:	bl	2320 <malloc@plt>
    4fb0:	mov	r3, #0
    4fb4:	str	r3, [sp, #20]
    4fb8:	str	r3, [sp, #16]
    4fbc:	str	r3, [sp, #52]	; 0x34
    4fc0:	mov	r9, #11
    4fc4:	ldr	sl, [pc, #728]	; 52a4 <gen_hop_pattern@@Base+0x314>
    4fc8:	str	r0, [fp, #372]	; 0x174
    4fcc:	mov	r0, fp
    4fd0:	bl	24dc <precalc@plt>
    4fd4:	ldrb	r3, [fp, #28]
    4fd8:	ldr	r0, [fp, #24]
    4fdc:	mov	r1, fp
    4fe0:	orr	r0, r0, r3, lsl #24
    4fe4:	bic	r0, r0, #-268435456	; 0xf0000000
    4fe8:	bl	241c <address_precalc@plt>
    4fec:	ldr	r3, [sp, #52]	; 0x34
    4ff0:	str	r3, [sp, #56]	; 0x38
    4ff4:	lsl	r2, r3, #2
    4ff8:	mov	r3, #0
    4ffc:	str	r2, [sp, #64]	; 0x40
    5000:	str	r3, [sp, #48]	; 0x30
    5004:	ldr	r2, [sp, #64]	; 0x40
    5008:	ldr	r3, [fp, #44]	; 0x2c
    500c:	str	r2, [sp, #68]	; 0x44
    5010:	ldr	r2, [sp, #48]	; 0x30
    5014:	eor	r3, r2, r3
    5018:	str	r3, [sp, #40]	; 0x28
    501c:	ldr	r3, [sp, #56]	; 0x38
    5020:	str	r3, [sp, #60]	; 0x3c
    5024:	mov	r3, #0
    5028:	str	r3, [sp, #44]	; 0x2c
    502c:	ldr	r3, [fp, #48]	; 0x30
    5030:	ldr	r2, [sp, #44]	; 0x2c
    5034:	ldr	r5, [sp, #68]	; 0x44
    5038:	eor	r3, r2, r3
    503c:	str	r3, [sp, #8]
    5040:	eor	r3, r3, #31
    5044:	str	r3, [sp, #12]
    5048:	ldr	r3, [sp, #60]	; 0x3c
    504c:	mov	r6, r5
    5050:	str	r3, [sp, #36]	; 0x24
    5054:	mov	r3, #0
    5058:	str	r3, [sp, #32]
    505c:	ldr	r3, [sp, #32]
    5060:	ldr	r8, [fp, #52]	; 0x34
    5064:	ldr	r7, [sp, #40]	; 0x28
    5068:	eor	r8, r8, r3
    506c:	add	r3, r6, #64	; 0x40
    5070:	str	r3, [sp, #4]
    5074:	ldr	r3, [sp, #16]
    5078:	add	r3, r3, #32
    507c:	str	r3, [sp, #24]
    5080:	ldr	r3, [sp, #20]
    5084:	add	r3, r3, #32
    5088:	str	r3, [sp, #28]
    508c:	b	511c <gen_hop_pattern@@Base+0x18c>
    5090:	ldr	r3, [sp, #20]
    5094:	add	r0, r4, r0
    5098:	ldrb	r1, [fp, #22]
    509c:	add	r0, r0, r3
    50a0:	bl	f59c <lell_pcapng_close@@Base+0x210>
    50a4:	ldr	r2, [fp, #372]	; 0x174
    50a8:	add	r1, r1, #14
    50ac:	ldr	r1, [fp, r1, lsl #2]
    50b0:	strb	r1, [r2, r6]
    50b4:	mov	r2, r8
    50b8:	ldr	r1, [sp, #12]
    50bc:	mov	r0, r5
    50c0:	bl	2518 <fast_perm@plt>
    50c4:	mov	r1, r9
    50c8:	mov	r4, r0
    50cc:	mov	r0, fp
    50d0:	bl	2248 <btbb_piconet_get_flag@plt>
    50d4:	cmp	r0, #0
    50d8:	ldr	r0, [fp, #40]	; 0x28
    50dc:	beq	5198 <gen_hop_pattern@@Base+0x208>
    50e0:	ldr	r2, [sp, #28]
    50e4:	ldr	r3, [fp, #372]	; 0x174
    50e8:	add	r0, r4, r0
    50ec:	ldrb	r1, [fp, #22]
    50f0:	add	r0, r0, r2
    50f4:	add	r4, r3, r6
    50f8:	bl	f59c <lell_pcapng_close@@Base+0x210>
    50fc:	add	r1, r1, #14
    5100:	ldr	r3, [fp, r1, lsl #2]
    5104:	strb	r3, [r4, #1]
    5108:	ldr	r3, [sp, #4]
    510c:	add	r6, r6, #2
    5110:	cmp	r6, r3
    5114:	add	r7, r7, #1
    5118:	beq	51d0 <gen_hop_pattern@@Base+0x240>
    511c:	asr	r2, r7, #31
    5120:	ldr	r1, [fp, #36]	; 0x24
    5124:	lsr	r2, r2, #27
    5128:	add	r3, r7, r2
    512c:	and	r3, r3, #31
    5130:	sub	r3, r3, r2
    5134:	eor	r5, r3, r1
    5138:	mov	r2, r8
    513c:	ldr	r1, [sp, #8]
    5140:	mov	r0, r5
    5144:	bl	2518 <fast_perm@plt>
    5148:	mov	r1, r9
    514c:	mov	r4, r0
    5150:	mov	r0, fp
    5154:	bl	2248 <btbb_piconet_get_flag@plt>
    5158:	cmp	r0, #0
    515c:	ldr	r0, [fp, #40]	; 0x28
    5160:	bne	5090 <gen_hop_pattern@@Base+0x100>
    5164:	ldr	r3, [sp, #16]
    5168:	add	r4, r4, r0
    516c:	add	r4, r4, r3
    5170:	ldr	r1, [fp, #372]	; 0x174
    5174:	umull	r3, r2, sl, r4
    5178:	lsr	r2, r2, #6
    517c:	add	r0, r2, r2, lsl #2
    5180:	rsb	r2, r2, r0, lsl #4
    5184:	sub	r2, r4, r2
    5188:	add	r2, r2, #14
    518c:	ldr	r2, [fp, r2, lsl #2]
    5190:	strb	r2, [r1, r6]
    5194:	b	50b4 <gen_hop_pattern@@Base+0x124>
    5198:	ldr	r3, [sp, #24]
    519c:	add	r4, r4, r0
    51a0:	add	r4, r4, r3
    51a4:	ldr	r2, [fp, #372]	; 0x174
    51a8:	umull	r1, r3, sl, r4
    51ac:	add	r2, r2, r6
    51b0:	lsr	r3, r3, #6
    51b4:	add	r1, r3, r3, lsl #2
    51b8:	rsb	r3, r3, r1, lsl #4
    51bc:	sub	r3, r4, r3
    51c0:	add	r3, r3, #14
    51c4:	ldr	r3, [fp, r3, lsl #2]
    51c8:	strb	r3, [r2, #1]
    51cc:	b	5108 <gen_hop_pattern@@Base+0x178>
    51d0:	ldr	r3, [sp, #36]	; 0x24
    51d4:	ldr	r2, [sp, #32]
    51d8:	add	r3, r3, #16
    51dc:	add	r2, r2, #1
    51e0:	mov	r4, r2
    51e4:	str	r2, [sp, #32]
    51e8:	umull	r1, r2, sl, r3
    51ec:	str	r3, [sp, #36]	; 0x24
    51f0:	ldrb	r1, [fp, #22]
    51f4:	lsr	r2, r2, #6
    51f8:	mov	r0, r2
    51fc:	add	r2, r2, r2, lsl #2
    5200:	rsb	r2, r0, r2, lsl #4
    5204:	sub	r3, r3, r2
    5208:	mov	r0, r3
    520c:	str	r3, [sp, #16]
    5210:	bl	f59c <lell_pcapng_close@@Base+0x210>
    5214:	cmp	r4, #512	; 0x200
    5218:	str	r1, [sp, #20]
    521c:	bne	505c <gen_hop_pattern@@Base+0xcc>
    5220:	ldr	r3, [sp, #44]	; 0x2c
    5224:	add	r3, r3, #1
    5228:	str	r3, [sp, #44]	; 0x2c
    522c:	cmp	r3, #32
    5230:	ldr	r3, [sp, #68]	; 0x44
    5234:	add	r3, r3, #32768	; 0x8000
    5238:	str	r3, [sp, #68]	; 0x44
    523c:	ldr	r3, [sp, #60]	; 0x3c
    5240:	add	r3, r3, #8192	; 0x2000
    5244:	str	r3, [sp, #60]	; 0x3c
    5248:	bne	502c <gen_hop_pattern@@Base+0x9c>
    524c:	ldr	r3, [sp, #48]	; 0x30
    5250:	add	r3, r3, #1
    5254:	str	r3, [sp, #48]	; 0x30
    5258:	cmp	r3, #32
    525c:	ldr	r3, [sp, #64]	; 0x40
    5260:	add	r3, r3, #1048576	; 0x100000
    5264:	str	r3, [sp, #64]	; 0x40
    5268:	ldr	r3, [sp, #56]	; 0x38
    526c:	add	r3, r3, #262144	; 0x40000
    5270:	str	r3, [sp, #56]	; 0x38
    5274:	bne	5004 <gen_hop_pattern@@Base+0x74>
    5278:	ldr	r3, [sp, #52]	; 0x34
    527c:	add	r3, r3, #8388608	; 0x800000
    5280:	cmp	r3, #33554432	; 0x2000000
    5284:	str	r3, [sp, #52]	; 0x34
    5288:	bne	4fec <gen_hop_pattern@@Base+0x5c>
    528c:	ldr	r0, [pc, #20]	; 52a8 <gen_hop_pattern@@Base+0x318>
    5290:	add	r0, pc, r0
    5294:	add	sp, sp, #76	; 0x4c
    5298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    529c:	b	2314 <puts@plt>
    52a0:	andeq	sp, r0, r4, lsr r0
    52a4:	svcgt	0x006474a9
    52a8:	andeq	ip, r0, ip, ror #26

000052ac <get_hop_pattern@@Base>:
    52ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    52b0:	mov	r1, #11
    52b4:	sub	sp, sp, #36	; 0x24
    52b8:	mov	r8, r0
    52bc:	bl	2248 <btbb_piconet_get_flag@plt>
    52c0:	ldrb	ip, [r8, #28]
    52c4:	ldr	r1, [pc, #1204]	; 5780 <get_hop_pattern@@Base+0x4d4>
    52c8:	ldr	lr, [r8, #24]
    52cc:	mov	r2, #0
    52d0:	ldrb	r3, [r8, #22]
    52d4:	add	r1, pc, r1
    52d8:	lsl	ip, ip, #24
    52dc:	orr	r6, r2, lr
    52e0:	orr	r6, r6, ip
    52e4:	ldr	r1, [r1, #4]
    52e8:	orr	r6, r6, r2
    52ec:	cmp	r1, r2
    52f0:	lsl	r5, r0, #7
    52f4:	orr	r7, r3, r5
    52f8:	strd	r6, [sp, #24]
    52fc:	beq	5428 <get_hop_pattern@@Base+0x17c>
    5300:	mov	r4, r2
    5304:	ldrb	r2, [sp, #24]
    5308:	ldrb	ip, [sp, #27]
    530c:	ldr	r3, [pc, #1136]	; 5784 <get_hop_pattern@@Base+0x4d8>
    5310:	ldrb	r0, [sp, #26]
    5314:	add	r3, r2, r3
    5318:	ldrb	r2, [sp, #25]
    531c:	add	r3, r3, ip, lsl #24
    5320:	add	r3, r3, r0, lsl #16
    5324:	ldr	r0, [pc, #1116]	; 5788 <get_hop_pattern@@Base+0x4dc>
    5328:	add	r3, r3, r2, lsl #8
    532c:	ldr	r2, [pc, #1112]	; 578c <get_hop_pattern@@Base+0x4e0>
    5330:	eor	r0, r0, r3
    5334:	ldr	r3, [pc, #1108]	; 5790 <get_hop_pattern@@Base+0x4e4>
    5338:	sub	r2, r2, r0
    533c:	eor	r2, r2, r0, lsl #8
    5340:	sub	r3, r3, r0
    5344:	sub	r3, r3, r2
    5348:	eor	r3, r3, r2, lsr #13
    534c:	sub	r0, r0, r2
    5350:	sub	r0, r0, r3
    5354:	eor	r0, r0, r3, lsr #12
    5358:	sub	r2, r2, r3
    535c:	sub	r2, r2, r0
    5360:	eor	r2, r2, r0, lsl #16
    5364:	sub	r3, r3, r0
    5368:	sub	r3, r3, r2
    536c:	eor	r3, r3, r2, lsr #5
    5370:	sub	r0, r0, r2
    5374:	ldr	r1, [r1, #12]
    5378:	sub	r0, r0, r3
    537c:	eor	r0, r0, r3, lsr #3
    5380:	sub	r2, r2, r3
    5384:	sub	r2, r2, r0
    5388:	eor	r2, r2, r0, lsl #10
    538c:	sub	r3, r3, r0
    5390:	ldr	r0, [r1, #4]
    5394:	sub	r3, r3, r2
    5398:	eor	r3, r3, r2, lsr #15
    539c:	sub	r2, r0, #1
    53a0:	and	r3, r3, r2
    53a4:	ldr	r2, [r1]
    53a8:	add	r3, r3, r3, lsl #1
    53ac:	ldr	r3, [r2, r3, lsl #2]
    53b0:	cmp	r3, r4
    53b4:	beq	5428 <get_hop_pattern@@Base+0x17c>
    53b8:	ldr	r5, [r1, #20]
    53bc:	rsb	r5, r5, #0
    53c0:	adds	r4, r3, r5
    53c4:	beq	5428 <get_hop_pattern@@Base+0x17c>
    53c8:	add	sl, sp, #24
    53cc:	mov	r9, #4
    53d0:	b	53e8 <get_hop_pattern@@Base+0x13c>
    53d4:	ldr	r3, [r4, #28]
    53d8:	cmp	r3, #0
    53dc:	beq	5428 <get_hop_pattern@@Base+0x17c>
    53e0:	adds	r4, r3, r5
    53e4:	beq	5428 <get_hop_pattern@@Base+0x17c>
    53e8:	ldr	r3, [r4, #36]	; 0x24
    53ec:	cmp	r3, #4
    53f0:	bne	53d4 <get_hop_pattern@@Base+0x128>
    53f4:	mov	r2, r9
    53f8:	mov	r1, sl
    53fc:	ldr	r0, [r4, #32]
    5400:	bl	220c <memcmp@plt>
    5404:	cmp	r0, #0
    5408:	bne	53d4 <get_hop_pattern@@Base+0x128>
    540c:	ldr	r0, [pc, #896]	; 5794 <get_hop_pattern@@Base+0x4e8>
    5410:	add	r0, pc, r0
    5414:	bl	2314 <puts@plt>
    5418:	ldr	r3, [r4, #8]
    541c:	str	r3, [r8, #372]	; 0x174
    5420:	add	sp, sp, #36	; 0x24
    5424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5428:	mov	r0, r8
    542c:	bl	2128 <gen_hop_pattern@plt>
    5430:	mov	r0, #48	; 0x30
    5434:	bl	2320 <malloc@plt>
    5438:	ldr	r3, [pc, #856]	; 5798 <get_hop_pattern@@Base+0x4ec>
    543c:	mov	r1, #0
    5440:	add	r3, pc, r3
    5444:	mov	r2, #4
    5448:	ldr	ip, [r3, #4]
    544c:	cmp	ip, r1
    5450:	mov	sl, r0
    5454:	ldr	r0, [r8, #372]	; 0x174
    5458:	strd	r6, [sl]
    545c:	str	sl, [sl, #32]
    5460:	str	r0, [sl, #8]
    5464:	str	r1, [sl, #20]
    5468:	str	r2, [sl, #36]	; 0x24
    546c:	beq	5708 <get_hop_pattern@@Base+0x45c>
    5470:	ldr	fp, [ip, #12]
    5474:	add	r4, sl, #12
    5478:	ldr	r2, [fp, #16]
    547c:	ldr	r3, [fp, #20]
    5480:	sub	r3, r2, r3
    5484:	str	sl, [r2, #8]
    5488:	str	r3, [sl, #16]
    548c:	str	r4, [fp, #16]
    5490:	ldr	r2, [fp, #12]
    5494:	ldr	r3, [pc, #744]	; 5784 <get_hop_pattern@@Base+0x4d8>
    5498:	add	r2, r2, #1
    549c:	str	r2, [fp, #12]
    54a0:	ldrb	lr, [sl]
    54a4:	ldrb	r2, [sl, #3]
    54a8:	ldrb	r1, [sl, #2]
    54ac:	ldrb	r0, [sl, #1]
    54b0:	add	r3, lr, r3
    54b4:	add	r2, r3, r2, lsl #24
    54b8:	add	r2, r2, r1, lsl #16
    54bc:	ldr	r1, [pc, #708]	; 5788 <get_hop_pattern@@Base+0x4dc>
    54c0:	add	r2, r2, r0, lsl #8
    54c4:	ldr	r3, [pc, #704]	; 578c <get_hop_pattern@@Base+0x4e0>
    54c8:	eor	r1, r1, r2
    54cc:	ldr	r2, [pc, #700]	; 5790 <get_hop_pattern@@Base+0x4e4>
    54d0:	sub	r3, r3, r1
    54d4:	eor	r3, r3, r1, lsl #8
    54d8:	sub	r2, r2, r1
    54dc:	sub	r2, r2, r3
    54e0:	eor	r2, r2, r3, lsr #13
    54e4:	sub	r1, r1, r3
    54e8:	sub	r1, r1, r2
    54ec:	eor	r1, r1, r2, lsr #12
    54f0:	sub	r3, r3, r2
    54f4:	sub	r3, r3, r1
    54f8:	eor	r3, r3, r1, lsl #16
    54fc:	sub	r2, r2, r1
    5500:	sub	r2, r2, r3
    5504:	eor	r2, r2, r3, lsr #5
    5508:	sub	r1, r1, r3
    550c:	str	fp, [sl, #12]
    5510:	sub	r1, r1, r2
    5514:	ldr	r0, [ip, #12]
    5518:	eor	r1, r1, r2, lsr #3
    551c:	sub	r3, r3, r2
    5520:	sub	r3, r3, r1
    5524:	eor	r3, r3, r1, lsl #10
    5528:	sub	r2, r2, r1
    552c:	ldr	r1, [r0, #4]
    5530:	sub	r2, r2, r3
    5534:	eor	r3, r2, r3, lsr #15
    5538:	sub	r2, r1, #1
    553c:	and	r2, r2, r3
    5540:	ldr	r0, [r0]
    5544:	add	r2, r2, r2, lsl #1
    5548:	mov	r5, #0
    554c:	lsl	r2, r2, #2
    5550:	add	ip, r0, r2
    5554:	ldr	lr, [r0, r2]
    5558:	ldr	r1, [ip, #4]
    555c:	str	r3, [sl, #40]	; 0x28
    5560:	ldr	r3, [ip, #8]
    5564:	cmp	lr, r5
    5568:	add	r3, r3, #1
    556c:	add	r1, r1, #1
    5570:	add	r3, r3, r3, lsl #2
    5574:	str	r1, [ip, #4]
    5578:	str	lr, [sl, #28]
    557c:	str	r5, [sl, #24]
    5580:	strne	r4, [lr, #12]
    5584:	cmp	r1, r3, lsl #1
    5588:	str	r4, [r0, r2]
    558c:	bcc	5420 <get_hop_pattern@@Base+0x174>
    5590:	ldr	r3, [fp, #36]	; 0x24
    5594:	cmp	r3, #1
    5598:	beq	5420 <get_hop_pattern@@Base+0x174>
    559c:	ldr	r0, [fp, #4]
    55a0:	mov	r1, #1
    55a4:	add	r0, r0, r0, lsl r1
    55a8:	lsl	r0, r0, #3
    55ac:	bl	2104 <calloc@plt>
    55b0:	subs	r7, r0, #0
    55b4:	beq	5778 <get_hop_pattern@@Base+0x4cc>
    55b8:	ldr	r1, [fp, #4]
    55bc:	ldr	ip, [fp, #12]
    55c0:	ldr	r0, [fp, #8]
    55c4:	lsl	r2, r1, #1
    55c8:	sub	r3, r2, #1
    55cc:	tst	ip, r3
    55d0:	add	r0, r0, #1
    55d4:	movne	r9, #1
    55d8:	moveq	r9, #0
    55dc:	cmp	r1, #0
    55e0:	add	r9, r9, ip, lsr r0
    55e4:	ldreq	r3, [fp]
    55e8:	mov	r0, #0
    55ec:	str	r9, [fp, #24]
    55f0:	str	r0, [fp, #28]
    55f4:	streq	r3, [sp, #12]
    55f8:	beq	56b8 <get_hop_pattern@@Base+0x40c>
    55fc:	add	r2, r2, r1
    5600:	str	sl, [sp, #20]
    5604:	lsl	r2, r2, #2
    5608:	ldr	r1, [fp]
    560c:	str	r2, [sp, #16]
    5610:	mov	sl, r3
    5614:	mov	r2, r0
    5618:	str	r0, [sp, #8]
    561c:	str	r1, [sp, #12]
    5620:	ldr	r3, [sp, #12]
    5624:	ldr	r1, [sp, #8]
    5628:	ldr	r5, [r3, r1]
    562c:	cmp	r5, #0
    5630:	beq	569c <get_hop_pattern@@Base+0x3f0>
    5634:	ldr	r4, [r5, #28]
    5638:	ldr	r8, [r5, #16]
    563c:	and	r4, r4, sl
    5640:	add	r4, r4, r4, lsl #1
    5644:	add	r6, r7, r4, lsl #2
    5648:	ldr	r0, [r6, #4]
    564c:	add	r0, r0, #1
    5650:	cmp	r9, r0
    5654:	str	r0, [r6, #4]
    5658:	bcs	567c <get_hop_pattern@@Base+0x3d0>
    565c:	ldr	r3, [fp, #28]
    5660:	mov	r1, r9
    5664:	add	r3, r3, #1
    5668:	str	r3, [fp, #28]
    566c:	str	r2, [sp, #4]
    5670:	bl	f3b0 <lell_pcapng_close@@Base+0x24>
    5674:	ldr	r2, [sp, #4]
    5678:	str	r0, [r6, #8]
    567c:	ldr	r3, [r7, r4, lsl #2]
    5680:	str	r2, [r5, #12]
    5684:	cmp	r3, #0
    5688:	str	r3, [r5, #16]
    568c:	strne	r5, [r3, #12]
    5690:	str	r5, [r7, r4, lsl #2]
    5694:	subs	r5, r8, #0
    5698:	bne	5634 <get_hop_pattern@@Base+0x388>
    569c:	ldr	r3, [sp, #8]
    56a0:	ldr	r1, [sp, #16]
    56a4:	add	r3, r3, #12
    56a8:	cmp	r3, r1
    56ac:	str	r3, [sp, #8]
    56b0:	bne	5620 <get_hop_pattern@@Base+0x374>
    56b4:	ldr	sl, [sp, #20]
    56b8:	ldr	r0, [sp, #12]
    56bc:	bl	21a0 <free@plt>
    56c0:	ldr	r3, [sl, #12]
    56c4:	ldmib	r3, {r1, r2, ip}
    56c8:	ldr	r0, [r3, #28]
    56cc:	str	r7, [r3]
    56d0:	add	r2, r2, #1
    56d4:	lsl	r1, r1, #1
    56d8:	cmp	r0, ip, lsr #1
    56dc:	stmib	r3, {r1, r2}
    56e0:	movls	r2, #0
    56e4:	strls	r2, [r3, #32]
    56e8:	bls	5420 <get_hop_pattern@@Base+0x174>
    56ec:	ldr	r2, [r3, #32]
    56f0:	add	r2, r2, #1
    56f4:	cmp	r2, #1
    56f8:	str	r2, [r3, #32]
    56fc:	movhi	r2, #1
    5700:	strhi	r2, [r3, #36]	; 0x24
    5704:	b	5420 <get_hop_pattern@@Base+0x174>
    5708:	mov	r1, #1
    570c:	mov	r0, #44	; 0x2c
    5710:	str	ip, [sl, #16]
    5714:	str	sl, [r3, #4]
    5718:	bl	2104 <calloc@plt>
    571c:	cmp	r0, #0
    5720:	mov	r5, r0
    5724:	str	r0, [sl, #12]
    5728:	beq	5778 <get_hop_pattern@@Base+0x4cc>
    572c:	mov	ip, #32
    5730:	mov	r2, #5
    5734:	mov	r3, #12
    5738:	add	r4, sl, #12
    573c:	mov	r1, #1
    5740:	mov	r0, #384	; 0x180
    5744:	str	r4, [r5, #16]
    5748:	str	ip, [r5, #4]
    574c:	str	r2, [r5, #8]
    5750:	str	r3, [r5, #20]
    5754:	bl	2104 <calloc@plt>
    5758:	cmp	r0, #0
    575c:	str	r0, [r5]
    5760:	beq	5778 <get_hop_pattern@@Base+0x4cc>
    5764:	ldr	r3, [pc, #48]	; 579c <get_hop_pattern@@Base+0x4f0>
    5768:	mov	fp, r5
    576c:	str	r3, [r5, #40]	; 0x28
    5770:	mov	ip, sl
    5774:	b	5490 <get_hop_pattern@@Base+0x1e4>
    5778:	mvn	r0, #0
    577c:	bl	2374 <exit@plt>
    5780:	ldrdeq	r3, [r2], -r8
    5784:	tsteq	r2, sp, lsl #2
    5788:	andeq	pc, r7, sp, ror #14
    578c:	svcls	0x0049bac6
    5790:	mcr2	14, 7, fp, cr13, cr3, {7}
    5794:	andeq	ip, r0, ip, lsl #24
    5798:	andeq	r3, r2, ip, ror #26
    579c:	andsge	r1, r1, r1, ror #31

000057a0 <btbb_piconet_set_afh_map@@Base>:
    57a0:	push	{r4, r5, r6, r7, r8, lr}
    57a4:	mov	r5, r0
    57a8:	sub	r6, r1, #1
    57ac:	add	r4, r0, #11
    57b0:	add	r7, r0, #21
    57b4:	mov	r3, #0
    57b8:	strb	r3, [r0, #22]
    57bc:	ldrb	r0, [r6, #1]!
    57c0:	strb	r0, [r4, #1]!
    57c4:	bl	2134 <count_bits@plt>
    57c8:	ldrb	r3, [r5, #22]
    57cc:	cmp	r4, r7
    57d0:	add	r0, r3, r0
    57d4:	strb	r0, [r5, #22]
    57d8:	bne	57bc <btbb_piconet_set_afh_map@@Base+0x1c>
    57dc:	mov	r1, #2
    57e0:	mov	r0, r5
    57e4:	bl	2248 <btbb_piconet_get_flag@plt>
    57e8:	cmp	r0, #0
    57ec:	popeq	{r4, r5, r6, r7, r8, pc}
    57f0:	mov	r0, r5
    57f4:	pop	{r4, r5, r6, r7, r8, lr}
    57f8:	b	2308 <get_hop_pattern@plt>

000057fc <single_hop@@Base>:
    57fc:	push	{r4, r5, r6, r7, r8, lr}
    5800:	mov	r4, r1
    5804:	ldr	r2, [r1, #52]	; 0x34
    5808:	ldr	r3, [r4, #44]	; 0x2c
    580c:	asr	r1, r0, #1
    5810:	and	r1, r1, #1
    5814:	ldr	lr, [r4, #48]	; 0x30
    5818:	eor	r2, r2, r0, asr #7
    581c:	eor	r3, r3, r0, asr #21
    5820:	mov	ip, r0
    5824:	eor	lr, lr, r0, asr #16
    5828:	add	r3, r3, r0, lsr #2
    582c:	lsl	r7, r1, #5
    5830:	ldr	r0, [r4, #36]	; 0x24
    5834:	lsl	r2, r2, #23
    5838:	and	lr, lr, #31
    583c:	and	r3, r3, #31
    5840:	sub	r1, r7, r1
    5844:	ldr	r6, [pc, #172]	; 58f8 <single_hop@@Base+0xfc>
    5848:	eor	r1, r1, lr
    584c:	eor	r0, r0, r3
    5850:	lsr	r2, r2, #23
    5854:	and	r6, r6, ip, asr #3
    5858:	bl	2518 <fast_perm@plt>
    585c:	mov	r1, #11
    5860:	mov	r5, r0
    5864:	mov	r0, r4
    5868:	bl	2248 <btbb_piconet_get_flag@plt>
    586c:	cmp	r0, #0
    5870:	bne	58c0 <single_hop@@Base+0xc4>
    5874:	ldr	r3, [pc, #128]	; 58fc <single_hop@@Base+0x100>
    5878:	ldr	r1, [r4, #40]	; 0x28
    587c:	umull	r0, r2, r3, r6
    5880:	add	r5, r5, r1
    5884:	lsr	r2, r2, #6
    5888:	add	r1, r2, r2, lsl #2
    588c:	rsb	r2, r2, r1, lsl #4
    5890:	sub	r6, r6, r2
    5894:	add	r7, r6, r7
    5898:	add	r5, r5, r7
    589c:	umull	r2, r3, r3, r5
    58a0:	lsr	r3, r3, #6
    58a4:	add	r2, r3, r3, lsl #2
    58a8:	rsb	r3, r3, r2, lsl #4
    58ac:	sub	r5, r5, r3
    58b0:	add	r5, r5, #14
    58b4:	ldr	r0, [r4, r5, lsl #2]
    58b8:	uxtb	r0, r0
    58bc:	pop	{r4, r5, r6, r7, r8, pc}
    58c0:	ldrb	r8, [r4, #22]
    58c4:	ldr	r3, [r4, #40]	; 0x28
    58c8:	mov	r0, r6
    58cc:	mov	r1, r8
    58d0:	add	r5, r5, r3
    58d4:	bl	f59c <lell_pcapng_close@@Base+0x210>
    58d8:	add	r1, r1, r7
    58dc:	add	r0, r5, r1
    58e0:	mov	r1, r8
    58e4:	bl	f59c <lell_pcapng_close@@Base+0x210>
    58e8:	add	r1, r1, #14
    58ec:	ldr	r0, [r4, r1, lsl #2]
    58f0:	uxtb	r0, r0
    58f4:	pop	{r4, r5, r6, r7, r8, pc}
    58f8:	ldrsheq	pc, [pc, #240]	; 59f0 <btbb_init_hop_reversal@@Base+0xe4>	; <UNPREDICTABLE>
    58fc:	svcgt	0x006474a9

00005900 <hop@@Base>:
    5900:	ldr	r3, [r1, #372]	; 0x174
    5904:	ldrb	r0, [r3, r0]
    5908:	bx	lr

0000590c <btbb_init_hop_reversal@@Base>:
    590c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    5910:	mov	r5, r0
    5914:	mov	r0, r1
    5918:	mov	r4, r1
    591c:	bl	2308 <get_hop_pattern@plt>
    5920:	ldr	r3, [pc, #212]	; 59fc <btbb_init_hop_reversal@@Base+0xf0>
    5924:	cmp	r5, #0
    5928:	ldr	r0, [pc, #208]	; 5a00 <btbb_init_hop_reversal@@Base+0xf4>
    592c:	movne	r0, r3
    5930:	bl	2320 <malloc@plt>
    5934:	add	r3, r4, #4096	; 0x1000
    5938:	ldr	lr, [r4, #8]
    593c:	ldr	r1, [r3, #1552]	; 0x610
    5940:	ldr	r2, [r3, #1556]	; 0x614
    5944:	ldr	ip, [r4, #372]	; 0x174
    5948:	add	r1, r1, r2
    594c:	ldr	r8, [pc, #176]	; 5a04 <btbb_init_hop_reversal@@Base+0xf8>
    5950:	and	r1, r1, #63	; 0x3f
    5954:	mov	r7, #0
    5958:	str	r0, [r4, #32]
    595c:	ldrb	r6, [r3, #552]	; 0x228
    5960:	cmp	lr, #0
    5964:	ldrb	r3, [ip, r1]
    5968:	beq	5990 <btbb_init_hop_reversal@@Base+0x84>
    596c:	add	r3, r3, #24
    5970:	smull	r2, r9, r8, r3
    5974:	asr	r2, r3, #31
    5978:	rsb	r2, r2, r9, asr #3
    597c:	add	r2, r2, r2, lsl #2
    5980:	add	r2, r2, r2, lsl #2
    5984:	sub	r3, r3, r2
    5988:	add	r3, r3, #26
    598c:	uxtb	r3, r3
    5990:	cmp	r6, r3
    5994:	streq	r1, [r0, r7, lsl #2]
    5998:	add	r1, r1, #64	; 0x40
    599c:	addeq	r7, r7, #1
    59a0:	cmn	r1, #-134217727	; 0xf8000001
    59a4:	ble	5960 <btbb_init_hop_reversal@@Base+0x54>
    59a8:	mov	r6, #0
    59ac:	mov	r0, r4
    59b0:	str	r7, [r4, #376]	; 0x178
    59b4:	str	r6, [r4, #388]	; 0x184
    59b8:	mov	r2, #1
    59bc:	mov	r1, #9
    59c0:	bl	226c <btbb_piconet_set_flag@plt>
    59c4:	mov	r2, r6
    59c8:	mov	r0, r4
    59cc:	mov	r1, #5
    59d0:	bl	226c <btbb_piconet_set_flag@plt>
    59d4:	mov	r2, r5
    59d8:	mov	r0, r4
    59dc:	mov	r1, #13
    59e0:	bl	226c <btbb_piconet_set_flag@plt>
    59e4:	ldr	r0, [pc, #28]	; 5a08 <btbb_init_hop_reversal@@Base+0xfc>
    59e8:	ldr	r1, [r4, #376]	; 0x178
    59ec:	add	r0, pc, r0
    59f0:	bl	2158 <printf@plt>
    59f4:	ldr	r0, [r4, #376]	; 0x178
    59f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    59fc:	andeq	r3, sl, r0, ror sp
    5a00:	muleq	r3, r0, sp
    5a04:	mvnpl	r8, pc, lsl r5
    5a08:	andeq	ip, r0, r4, asr r6

00005a0c <btbb_winnow@@Base>:
    5a0c:	ldr	r3, [r0, #388]	; 0x184
    5a10:	ldr	r2, [r0, #380]	; 0x17c
    5a14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5a18:	cmp	r3, r2
    5a1c:	ldr	sl, [r0, #376]	; 0x178
    5a20:	sub	sp, sp, #12
    5a24:	mov	r5, sl
    5a28:	bge	5b74 <btbb_winnow@@Base+0x168>
    5a2c:	ldr	r2, [pc, #428]	; 5be0 <btbb_winnow@@Base+0x1d4>
    5a30:	ldr	r8, [pc, #428]	; 5be4 <btbb_winnow@@Base+0x1d8>
    5a34:	mov	r4, r0
    5a38:	mov	r7, #0
    5a3c:	add	r2, pc, r2
    5a40:	str	r2, [sp, #4]
    5a44:	add	r2, r4, r3
    5a48:	add	r2, r2, #4608	; 0x1200
    5a4c:	add	r3, r3, #162	; 0xa2
    5a50:	cmp	sl, #0
    5a54:	ldrb	r6, [r2, #40]	; 0x28
    5a58:	ldr	r9, [r4, r3, lsl #2]
    5a5c:	ble	5b60 <btbb_winnow@@Base+0x154>
    5a60:	mov	r1, #0
    5a64:	ldr	lr, [r4, #32]
    5a68:	ldr	ip, [r4, #372]	; 0x174
    5a6c:	mov	r0, r1
    5a70:	mov	r5, r7
    5a74:	ldr	r3, [r4, #8]
    5a78:	cmp	r3, #0
    5a7c:	ldr	r3, [lr, r1]
    5a80:	add	r3, r9, r3
    5a84:	bic	r3, r3, #-134217728	; 0xf8000000
    5a88:	ldrb	r3, [ip, r3]
    5a8c:	beq	5ab4 <btbb_winnow@@Base+0xa8>
    5a90:	add	r3, r3, #24
    5a94:	smull	r2, fp, r8, r3
    5a98:	asr	r2, r3, #31
    5a9c:	rsb	r2, r2, fp, asr #3
    5aa0:	add	r2, r2, r2, lsl #2
    5aa4:	add	r2, r2, r2, lsl #2
    5aa8:	sub	r3, r3, r2
    5aac:	add	r3, r3, #26
    5ab0:	uxtb	r3, r3
    5ab4:	cmp	r6, r3
    5ab8:	add	r0, r0, #1
    5abc:	ldreq	r3, [lr, r1]
    5ac0:	add	r1, r1, #4
    5ac4:	streq	r3, [lr, r5, lsl #2]
    5ac8:	ldreq	sl, [r4, #376]	; 0x178
    5acc:	addeq	r5, r5, #1
    5ad0:	cmp	r0, sl
    5ad4:	blt	5a74 <btbb_winnow@@Base+0x68>
    5ad8:	cmp	r5, #1
    5adc:	str	r5, [r4, #376]	; 0x178
    5ae0:	beq	5b80 <btbb_winnow@@Base+0x174>
    5ae4:	cmp	r5, #0
    5ae8:	beq	5b68 <btbb_winnow@@Base+0x15c>
    5aec:	cmp	r5, #1
    5af0:	beq	5b74 <btbb_winnow@@Base+0x168>
    5af4:	ldr	r2, [r4, #380]	; 0x17c
    5af8:	cmp	r2, #0
    5afc:	ble	5b44 <btbb_winnow@@Base+0x138>
    5b00:	ldr	r2, [r4, #388]	; 0x184
    5b04:	mov	r1, #12
    5b08:	sub	r3, r2, #1
    5b0c:	add	r3, r4, r3
    5b10:	add	r3, r3, #4608	; 0x1200
    5b14:	add	r2, r2, #161	; 0xa1
    5b18:	mov	r0, r4
    5b1c:	ldrb	sl, [r3, #40]	; 0x28
    5b20:	ldr	fp, [r4, r2, lsl #2]
    5b24:	bl	2248 <btbb_piconet_get_flag@plt>
    5b28:	cmp	r0, #0
    5b2c:	bne	5b40 <btbb_winnow@@Base+0x134>
    5b30:	add	fp, fp, #1
    5b34:	cmp	fp, r9
    5b38:	cmpeq	r6, sl
    5b3c:	beq	5bc4 <btbb_winnow@@Base+0x1b8>
    5b40:	ldr	r2, [r4, #380]	; 0x17c
    5b44:	ldr	r3, [r4, #388]	; 0x184
    5b48:	add	r3, r3, #1
    5b4c:	cmp	r3, r2
    5b50:	str	r3, [r4, #388]	; 0x184
    5b54:	bge	5b74 <btbb_winnow@@Base+0x168>
    5b58:	ldr	sl, [r4, #376]	; 0x178
    5b5c:	b	5a44 <btbb_winnow@@Base+0x38>
    5b60:	mov	r3, #0
    5b64:	str	r3, [r4, #376]	; 0x178
    5b68:	mov	r0, r4
    5b6c:	bl	4a68 <btbb_piconet_get_flag@@Base+0x18>
    5b70:	mov	r5, #0
    5b74:	mov	r0, r5
    5b78:	add	sp, sp, #12
    5b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5b80:	add	r2, r4, #4096	; 0x1000
    5b84:	ldr	r1, [lr]
    5b88:	ldr	r3, [r2, #1556]	; 0x614
    5b8c:	ldr	r0, [pc, #84]	; 5be8 <btbb_winnow@@Base+0x1dc>
    5b90:	lsl	r3, r3, #1
    5b94:	rsb	r3, r3, r1, lsl #1
    5b98:	str	r3, [r2, #1552]	; 0x610
    5b9c:	add	r0, pc, r0
    5ba0:	ldr	r1, [lr]
    5ba4:	bl	2158 <printf@plt>
    5ba8:	mov	r0, r4
    5bac:	mov	r2, r5
    5bb0:	mov	r1, #5
    5bb4:	bl	226c <btbb_piconet_set_flag@plt>
    5bb8:	mov	r0, r5
    5bbc:	add	sp, sp, #12
    5bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5bc4:	mov	r0, r4
    5bc8:	mov	r2, #1
    5bcc:	mov	r1, #12
    5bd0:	bl	226c <btbb_piconet_set_flag@plt>
    5bd4:	ldr	r0, [sp, #4]
    5bd8:	bl	2314 <puts@plt>
    5bdc:	b	5b40 <btbb_winnow@@Base+0x134>
    5be0:	andeq	ip, r0, r0, asr #12
    5be4:	mvnpl	r8, pc, lsl r5
    5be8:	andeq	ip, r0, r4, asr #9

00005bec <btbb_uap_from_header@@Base>:
    5bec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5bf0:	mov	r6, r0
    5bf4:	sub	sp, sp, #12
    5bf8:	ldr	r3, [r6, #2816]	; 0xb00
    5bfc:	mov	r4, r1
    5c00:	mov	r0, r1
    5c04:	mov	r1, #10
    5c08:	mov	r5, r3
    5c0c:	str	r3, [sp]
    5c10:	bl	2248 <btbb_piconet_get_flag@plt>
    5c14:	cmp	r0, #0
    5c18:	addeq	r3, r4, #4096	; 0x1000
    5c1c:	moveq	r2, r5
    5c20:	streq	r2, [r3, #1556]	; 0x614
    5c24:	mov	r0, r4
    5c28:	ldrb	r1, [r6, #8]
    5c2c:	bl	2290 <btbb_piconet_set_channel_seen@plt>
    5c30:	ldr	r3, [r4, #380]	; 0x17c
    5c34:	cmp	r3, #1000	; 0x3e8
    5c38:	bge	5e34 <btbb_uap_from_header@@Base+0x248>
    5c3c:	add	r9, r4, #4096	; 0x1000
    5c40:	ldr	ip, [sp]
    5c44:	ldr	r1, [r9, #1556]	; 0x614
    5c48:	add	r0, r3, #162	; 0xa2
    5c4c:	sub	r1, ip, r1
    5c50:	str	r1, [r4, r0, lsl #2]
    5c54:	add	r2, r4, r3
    5c58:	ldrb	r1, [r6, #8]
    5c5c:	add	r2, r2, #4608	; 0x1200
    5c60:	mov	r8, #0
    5c64:	strb	r1, [r2, #40]	; 0x28
    5c68:	ldr	r2, [r4, #384]	; 0x180
    5c6c:	mov	r5, r8
    5c70:	add	sl, r4, #392	; 0x188
    5c74:	add	r3, r3, #1
    5c78:	add	r2, r2, #1
    5c7c:	str	r3, [r4, #380]	; 0x17c
    5c80:	str	r2, [r4, #384]	; 0x180
    5c84:	str	r8, [sp, #4]
    5c88:	ldr	r2, [sl]
    5c8c:	cmp	r2, #0
    5c90:	blt	5df4 <btbb_uap_from_header@@Base+0x208>
    5c94:	ldr	r3, [sp]
    5c98:	ldr	fp, [r9, #1556]	; 0x614
    5c9c:	mov	r1, r6
    5ca0:	sub	fp, r3, fp
    5ca4:	add	fp, fp, r5
    5ca8:	and	fp, fp, #63	; 0x3f
    5cac:	mov	r0, fp
    5cb0:	bl	2524 <try_clock@plt>
    5cb4:	mov	r1, #10
    5cb8:	mov	r7, r0
    5cbc:	mov	r0, r4
    5cc0:	bl	2248 <btbb_piconet_get_flag@plt>
    5cc4:	cmp	r0, #0
    5cc8:	beq	5d2c <btbb_uap_from_header@@Base+0x140>
    5ccc:	ldr	r2, [sl]
    5cd0:	cmp	r7, r2
    5cd4:	beq	5d2c <btbb_uap_from_header@@Base+0x140>
    5cd8:	mov	r1, #2
    5cdc:	mov	r0, r4
    5ce0:	bl	2248 <btbb_piconet_get_flag@plt>
    5ce4:	mvn	r3, #0
    5ce8:	str	r3, [sl]
    5cec:	add	r5, r5, #1
    5cf0:	cmp	r5, #64	; 0x40
    5cf4:	add	sl, sl, #4
    5cf8:	bne	5c88 <btbb_uap_from_header@@Base+0x9c>
    5cfc:	mov	r2, #1
    5d00:	mov	r1, #10
    5d04:	mov	r0, r4
    5d08:	bl	226c <btbb_piconet_set_flag@plt>
    5d0c:	cmp	r8, #1
    5d10:	beq	5e58 <btbb_uap_from_header@@Base+0x26c>
    5d14:	cmp	r8, #0
    5d18:	movne	r8, #0
    5d1c:	bne	5de8 <btbb_uap_from_header@@Base+0x1fc>
    5d20:	mov	r0, r4
    5d24:	bl	4a68 <btbb_piconet_get_flag@@Base+0x18>
    5d28:	b	5de8 <btbb_uap_from_header@@Base+0x1fc>
    5d2c:	mov	r0, fp
    5d30:	mov	r1, r6
    5d34:	bl	22d8 <crc_check@plt>
    5d38:	mov	r1, #2
    5d3c:	mov	fp, r0
    5d40:	mov	r0, r4
    5d44:	bl	2248 <btbb_piconet_get_flag@plt>
    5d48:	cmp	r0, #0
    5d4c:	bne	5e0c <btbb_uap_from_header@@Base+0x220>
    5d50:	add	fp, fp, #1
    5d54:	cmp	fp, #3
    5d58:	addls	pc, pc, fp, lsl #2
    5d5c:	b	5d80 <btbb_uap_from_header@@Base+0x194>
    5d60:	b	5ce4 <btbb_uap_from_header@@Base+0xf8>
    5d64:	b	5ce4 <btbb_uap_from_header@@Base+0xf8>
    5d68:	b	5d70 <btbb_uap_from_header@@Base+0x184>
    5d6c:	b	5d70 <btbb_uap_from_header@@Base+0x184>
    5d70:	str	r7, [sl]
    5d74:	add	r8, r8, #1
    5d78:	str	r5, [sp, #4]
    5d7c:	b	5cec <btbb_uap_from_header@@Base+0x100>
    5d80:	ldr	r3, [r9, #1556]	; 0x614
    5d84:	mov	r1, #2
    5d88:	sub	r5, r5, r3
    5d8c:	and	r5, r5, #63	; 0x3f
    5d90:	str	r5, [r9, #1552]	; 0x610
    5d94:	mov	r0, r4
    5d98:	bl	2248 <btbb_piconet_get_flag@plt>
    5d9c:	cmp	r0, #0
    5da0:	beq	5e1c <btbb_uap_from_header@@Base+0x230>
    5da4:	ldr	r0, [pc, #320]	; 5eec <btbb_uap_from_header@@Base+0x300>
    5da8:	ldr	r1, [r9, #1552]	; 0x610
    5dac:	ldr	r2, [r4, #384]	; 0x180
    5db0:	add	r0, pc, r0
    5db4:	bl	2158 <printf@plt>
    5db8:	mov	r2, #1
    5dbc:	mov	r1, #4
    5dc0:	mov	r0, r4
    5dc4:	strb	r7, [r4, #28]
    5dc8:	bl	226c <btbb_piconet_set_flag@plt>
    5dcc:	mov	r8, #1
    5dd0:	mov	r2, #1
    5dd4:	mov	r1, #2
    5dd8:	mov	r0, r4
    5ddc:	bl	226c <btbb_piconet_set_flag@plt>
    5de0:	mov	r3, #0
    5de4:	str	r3, [r4, #384]	; 0x180
    5de8:	mov	r0, r8
    5dec:	add	sp, sp, #12
    5df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5df4:	mov	r1, #10
    5df8:	mov	r0, r4
    5dfc:	bl	2248 <btbb_piconet_get_flag@plt>
    5e00:	cmp	r0, #0
    5e04:	beq	5c94 <btbb_uap_from_header@@Base+0xa8>
    5e08:	b	5cec <btbb_uap_from_header@@Base+0x100>
    5e0c:	ldrb	r2, [r4, #28]
    5e10:	cmp	r2, r7
    5e14:	bne	5ce4 <btbb_uap_from_header@@Base+0xf8>
    5e18:	b	5d50 <btbb_uap_from_header@@Base+0x164>
    5e1c:	ldr	r0, [pc, #204]	; 5ef0 <btbb_uap_from_header@@Base+0x304>
    5e20:	ldr	r2, [r4, #384]	; 0x180
    5e24:	mov	r1, r7
    5e28:	add	r0, pc, r0
    5e2c:	bl	2158 <printf@plt>
    5e30:	b	5db8 <btbb_uap_from_header@@Base+0x1cc>
    5e34:	ldr	r0, [pc, #184]	; 5ef4 <btbb_uap_from_header@@Base+0x308>
    5e38:	mov	r8, #0
    5e3c:	add	r0, pc, r0
    5e40:	bl	2314 <puts@plt>
    5e44:	mov	r0, r4
    5e48:	bl	4a68 <btbb_piconet_get_flag@@Base+0x18>
    5e4c:	mov	r0, r8
    5e50:	add	sp, sp, #12
    5e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5e58:	ldr	r3, [r9, #1556]	; 0x614
    5e5c:	ldr	r5, [sp, #4]
    5e60:	mov	r1, #2
    5e64:	sub	r3, r5, r3
    5e68:	and	r3, r3, #63	; 0x3f
    5e6c:	str	r3, [r9, #1552]	; 0x610
    5e70:	mov	r0, r4
    5e74:	bl	2248 <btbb_piconet_get_flag@plt>
    5e78:	cmp	r0, #0
    5e7c:	bne	5ecc <btbb_uap_from_header@@Base+0x2e0>
    5e80:	add	r5, r5, #98	; 0x62
    5e84:	ldr	r0, [pc, #108]	; 5ef8 <btbb_uap_from_header@@Base+0x30c>
    5e88:	ldr	r2, [r4, #384]	; 0x180
    5e8c:	ldr	r1, [r4, r5, lsl #2]
    5e90:	add	r0, pc, r0
    5e94:	bl	2158 <printf@plt>
    5e98:	ldr	r3, [r4, r5, lsl #2]
    5e9c:	mov	r2, #1
    5ea0:	strb	r3, [r4, #28]
    5ea4:	mov	r1, #4
    5ea8:	mov	r0, r4
    5eac:	bl	226c <btbb_piconet_set_flag@plt>
    5eb0:	mov	r2, #1
    5eb4:	mov	r1, #2
    5eb8:	mov	r0, r4
    5ebc:	bl	226c <btbb_piconet_set_flag@plt>
    5ec0:	mov	r3, #0
    5ec4:	str	r3, [r4, #384]	; 0x180
    5ec8:	b	5de8 <btbb_uap_from_header@@Base+0x1fc>
    5ecc:	ldr	r0, [pc, #40]	; 5efc <btbb_uap_from_header@@Base+0x310>
    5ed0:	ldr	r1, [r9, #1552]	; 0x610
    5ed4:	ldr	r2, [r4, #384]	; 0x180
    5ed8:	add	r0, pc, r0
    5edc:	bl	2158 <printf@plt>
    5ee0:	ldr	r3, [sp, #4]
    5ee4:	add	r5, r3, #98	; 0x62
    5ee8:	b	5e98 <btbb_uap_from_header@@Base+0x2ac>
    5eec:	andeq	ip, r0, r0, asr r3
    5ef0:	andeq	ip, r0, r0, lsr #5
    5ef4:	andeq	ip, r0, r4, ror #4
    5ef8:	andeq	ip, r0, r8, lsr #5
    5efc:	andeq	ip, r0, ip, lsl #5

00005f00 <try_hop@@Base>:
    5f00:	push	{r4, r5, r6, r7, r8, lr}
    5f04:	mov	r4, r1
    5f08:	ldrb	r6, [r1, #28]
    5f0c:	mov	r5, r0
    5f10:	bl	22e4 <btbb_decode@plt>
    5f14:	mov	r0, r4
    5f18:	mov	r1, #9
    5f1c:	bl	2248 <btbb_piconet_get_flag@plt>
    5f20:	cmp	r0, #0
    5f24:	beq	5fb0 <try_hop@@Base+0xb0>
    5f28:	add	r7, r4, #4096	; 0x1000
    5f2c:	ldr	r3, [r4, #380]	; 0x17c
    5f30:	ldr	r0, [r7, #1556]	; 0x614
    5f34:	ldr	r2, [r5, #2816]	; 0xb00
    5f38:	add	r1, r3, #162	; 0xa2
    5f3c:	sub	r2, r2, r0
    5f40:	str	r2, [r4, r1, lsl #2]
    5f44:	add	r2, r4, r3
    5f48:	ldrb	r1, [r5, #8]
    5f4c:	add	r2, r2, #4608	; 0x1200
    5f50:	add	r3, r3, #1
    5f54:	strb	r1, [r2, #40]	; 0x28
    5f58:	ldr	r2, [r4, #384]	; 0x180
    5f5c:	str	r3, [r4, #380]	; 0x17c
    5f60:	add	r3, r2, #1
    5f64:	str	r3, [r4, #384]	; 0x180
    5f68:	mov	r0, r4
    5f6c:	bl	22f0 <btbb_winnow@plt>
    5f70:	mov	r1, #5
    5f74:	mov	r0, r4
    5f78:	bl	2248 <btbb_piconet_get_flag@plt>
    5f7c:	cmp	r0, #0
    5f80:	bne	6030 <try_hop@@Base+0x130>
    5f84:	mov	r1, #2
    5f88:	mov	r0, r4
    5f8c:	bl	2248 <btbb_piconet_get_flag@plt>
    5f90:	cmp	r0, #0
    5f94:	popne	{r4, r5, r6, r7, r8, pc}
    5f98:	mov	r2, #1
    5f9c:	mov	r1, #2
    5fa0:	mov	r0, r4
    5fa4:	bl	226c <btbb_piconet_set_flag@plt>
    5fa8:	strb	r6, [r4, #28]
    5fac:	pop	{r4, r5, r6, r7, r8, pc}
    5fb0:	mov	r1, #4
    5fb4:	mov	r0, r4
    5fb8:	bl	2248 <btbb_piconet_get_flag@plt>
    5fbc:	mov	r1, r4
    5fc0:	subs	r7, r0, #0
    5fc4:	mov	r0, r5
    5fc8:	beq	6008 <try_hop@@Base+0x108>
    5fcc:	bl	21d0 <btbb_uap_from_header@plt>
    5fd0:	mov	r1, #5
    5fd4:	mov	r0, r4
    5fd8:	bl	2248 <btbb_piconet_get_flag@plt>
    5fdc:	cmp	r0, #0
    5fe0:	beq	5f84 <try_hop@@Base+0x84>
    5fe4:	ldr	r0, [pc, #124]	; 6068 <try_hop@@Base+0x168>
    5fe8:	add	r0, pc, r0
    5fec:	bl	2314 <puts@plt>
    5ff0:	add	r3, r4, #4096	; 0x1000
    5ff4:	ldr	r0, [pc, #112]	; 606c <try_hop@@Base+0x16c>
    5ff8:	ldr	r1, [r3, #1552]	; 0x610
    5ffc:	add	r0, pc, r0
    6000:	bl	2158 <printf@plt>
    6004:	b	5f84 <try_hop@@Base+0x84>
    6008:	bl	21d0 <btbb_uap_from_header@plt>
    600c:	cmp	r0, #0
    6010:	beq	5f84 <try_hop@@Base+0x84>
    6014:	ldrb	r3, [r4, #28]
    6018:	cmp	r3, r6
    601c:	beq	6050 <try_hop@@Base+0x150>
    6020:	ldr	r0, [pc, #72]	; 6070 <try_hop@@Base+0x170>
    6024:	add	r0, pc, r0
    6028:	bl	2314 <puts@plt>
    602c:	b	5f84 <try_hop@@Base+0x84>
    6030:	ldr	r0, [pc, #60]	; 6074 <try_hop@@Base+0x174>
    6034:	add	r0, pc, r0
    6038:	bl	2314 <puts@plt>
    603c:	ldr	r0, [pc, #52]	; 6078 <try_hop@@Base+0x178>
    6040:	ldr	r1, [r7, #1552]	; 0x610
    6044:	add	r0, pc, r0
    6048:	bl	2158 <printf@plt>
    604c:	b	5f84 <try_hop@@Base+0x84>
    6050:	mov	r0, r7
    6054:	mov	r1, r4
    6058:	bl	2530 <btbb_init_hop_reversal@plt>
    605c:	mov	r0, r4
    6060:	bl	22f0 <btbb_winnow@plt>
    6064:	b	5f84 <try_hop@@Base+0x84>
    6068:	andeq	ip, r0, r8, lsr #3
    606c:	andeq	ip, r0, r0, lsr #3
    6070:	andeq	ip, r0, ip, lsl #3
    6074:	andeq	ip, r0, ip, asr r1
    6078:	andeq	ip, r0, r8, asr r1

0000607c <btbb_print_afh_map@@Base>:
    607c:	mov	ip, r0
    6080:	push	{r4, r5, r6, lr}
    6084:	sub	sp, sp, #32
    6088:	ldrb	r4, [ip, #21]
    608c:	ldrb	lr, [ip, #20]
    6090:	ldrb	r3, [ip, #14]
    6094:	ldrb	r2, [ip, #13]
    6098:	ldrb	r1, [ip, #12]
    609c:	ldrb	r6, [ip, #19]
    60a0:	ldrb	r5, [ip, #18]
    60a4:	str	r4, [sp, #24]
    60a8:	ldrb	r4, [ip, #17]
    60ac:	str	lr, [sp, #20]
    60b0:	ldrb	lr, [ip, #16]
    60b4:	ldrb	ip, [ip, #15]
    60b8:	ldr	r0, [pc, #28]	; 60dc <btbb_print_afh_map@@Base+0x60>
    60bc:	str	r6, [sp, #16]
    60c0:	str	r5, [sp, #12]
    60c4:	str	r4, [sp, #8]
    60c8:	stm	sp, {ip, lr}
    60cc:	add	r0, pc, r0
    60d0:	bl	2158 <printf@plt>
    60d4:	add	sp, sp, #32
    60d8:	pop	{r4, r5, r6, pc}
    60dc:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>

000060e0 <get_piconet@@Base>:
    60e0:	ldr	r3, [pc, #1168]	; 6578 <get_piconet@@Base+0x498>
    60e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    60e8:	add	r3, pc, r3
    60ec:	sub	sp, sp, #28
    60f0:	str	r0, [sp, #20]
    60f4:	ldr	r0, [r3, #8]
    60f8:	cmp	r0, #0
    60fc:	beq	6218 <get_piconet@@Base+0x138>
    6100:	ldrb	lr, [sp, #20]
    6104:	ldrb	ip, [sp, #23]
    6108:	ldrb	r1, [sp, #22]
    610c:	ldr	r3, [pc, #1128]	; 657c <get_piconet@@Base+0x49c>
    6110:	ldrb	r2, [sp, #21]
    6114:	add	r3, lr, r3
    6118:	add	r3, r3, ip, lsl #24
    611c:	add	r3, r3, r1, lsl #16
    6120:	ldr	r1, [pc, #1112]	; 6580 <get_piconet@@Base+0x4a0>
    6124:	add	r3, r3, r2, lsl #8
    6128:	ldr	r2, [pc, #1108]	; 6584 <get_piconet@@Base+0x4a4>
    612c:	eor	r1, r1, r3
    6130:	ldr	r3, [pc, #1104]	; 6588 <get_piconet@@Base+0x4a8>
    6134:	sub	r2, r2, r1
    6138:	eor	r2, r2, r1, lsl #8
    613c:	sub	r3, r3, r1
    6140:	sub	r3, r3, r2
    6144:	eor	r3, r3, r2, lsr #13
    6148:	sub	r1, r1, r2
    614c:	sub	r1, r1, r3
    6150:	eor	r1, r1, r3, lsr #12
    6154:	sub	r2, r2, r3
    6158:	sub	r2, r2, r1
    615c:	eor	r2, r2, r1, lsl #16
    6160:	sub	r3, r3, r1
    6164:	sub	r3, r3, r2
    6168:	eor	r3, r3, r2, lsr #5
    616c:	sub	r1, r1, r2
    6170:	ldr	r0, [r0, #8]
    6174:	sub	r1, r1, r3
    6178:	eor	r1, r1, r3, lsr #3
    617c:	sub	r2, r2, r3
    6180:	sub	r2, r2, r1
    6184:	eor	r2, r2, r1, lsl #10
    6188:	sub	r3, r3, r1
    618c:	ldr	r1, [r0, #4]
    6190:	sub	r3, r3, r2
    6194:	eor	r3, r3, r2, lsr #15
    6198:	sub	r2, r1, #1
    619c:	and	r3, r3, r2
    61a0:	ldr	r2, [r0]
    61a4:	add	r3, r3, r3, lsl #1
    61a8:	ldr	r3, [r2, r3, lsl #2]
    61ac:	cmp	r3, #0
    61b0:	beq	6218 <get_piconet@@Base+0x138>
    61b4:	ldr	r5, [r0, #20]
    61b8:	rsb	r5, r5, #0
    61bc:	adds	r4, r3, r5
    61c0:	beq	6218 <get_piconet@@Base+0x138>
    61c4:	add	r7, sp, #20
    61c8:	mov	r6, #4
    61cc:	b	61e4 <get_piconet@@Base+0x104>
    61d0:	ldr	r3, [r4, #24]
    61d4:	cmp	r3, #0
    61d8:	beq	6218 <get_piconet@@Base+0x138>
    61dc:	adds	r4, r3, r5
    61e0:	beq	6218 <get_piconet@@Base+0x138>
    61e4:	ldr	r3, [r4, #32]
    61e8:	cmp	r3, #4
    61ec:	bne	61d0 <get_piconet@@Base+0xf0>
    61f0:	mov	r2, r6
    61f4:	mov	r1, r7
    61f8:	ldr	r0, [r4, #28]
    61fc:	bl	220c <memcmp@plt>
    6200:	cmp	r0, #0
    6204:	bne	61d0 <get_piconet@@Base+0xf0>
    6208:	ldr	fp, [r4, #4]
    620c:	mov	r0, fp
    6210:	add	sp, sp, #28
    6214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6218:	bl	211c <btbb_piconet_new@plt>
    621c:	ldr	r4, [sp, #20]
    6220:	mov	r1, r4
    6224:	mov	fp, r0
    6228:	bl	253c <btbb_init_piconet@plt>
    622c:	mov	r0, #40	; 0x28
    6230:	bl	2320 <malloc@plt>
    6234:	ldr	r3, [pc, #848]	; 658c <get_piconet@@Base+0x4ac>
    6238:	mov	r1, #0
    623c:	add	r3, pc, r3
    6240:	mov	r2, #4
    6244:	ldr	ip, [r3, #8]
    6248:	cmp	ip, r1
    624c:	mov	r9, r0
    6250:	str	r4, [r0]
    6254:	str	fp, [r0, #4]
    6258:	str	r0, [r9, #28]
    625c:	str	r1, [r0, #16]
    6260:	str	r2, [r0, #32]
    6264:	beq	6500 <get_piconet@@Base+0x420>
    6268:	ldr	r3, [ip, #8]
    626c:	add	r4, r9, #8
    6270:	ldr	r1, [r3, #16]
    6274:	ldr	r2, [r3, #20]
    6278:	sub	r2, r1, r2
    627c:	str	r9, [r1, #8]
    6280:	str	r2, [r9, #12]
    6284:	str	r4, [r3, #16]
    6288:	ldr	r1, [r3, #12]
    628c:	ldr	r2, [pc, #744]	; 657c <get_piconet@@Base+0x49c>
    6290:	add	r1, r1, #1
    6294:	str	r1, [r3, #12]
    6298:	ldrb	r5, [r9]
    629c:	ldrb	r1, [r9, #3]
    62a0:	ldrb	lr, [r9, #2]
    62a4:	ldrb	r0, [r9, #1]
    62a8:	add	r2, r5, r2
    62ac:	add	r1, r2, r1, lsl #24
    62b0:	add	r1, r1, lr, lsl #16
    62b4:	ldr	r2, [pc, #708]	; 6580 <get_piconet@@Base+0x4a0>
    62b8:	add	r1, r1, r0, lsl #8
    62bc:	ldr	lr, [pc, #704]	; 6584 <get_piconet@@Base+0x4a4>
    62c0:	eor	r2, r2, r1
    62c4:	ldr	r1, [pc, #700]	; 6588 <get_piconet@@Base+0x4a8>
    62c8:	sub	lr, lr, r2
    62cc:	eor	lr, lr, r2, lsl #8
    62d0:	sub	r1, r1, r2
    62d4:	sub	r1, r1, lr
    62d8:	eor	r0, r1, lr, lsr #13
    62dc:	sub	r1, r2, lr
    62e0:	sub	r1, r1, r0
    62e4:	eor	r1, r1, r0, lsr #12
    62e8:	sub	r2, lr, r0
    62ec:	sub	r2, r2, r1
    62f0:	eor	lr, r2, r1, lsl #16
    62f4:	sub	r2, r0, r1
    62f8:	sub	r2, r2, lr
    62fc:	eor	r2, r2, lr, lsr #5
    6300:	sub	r1, r1, lr
    6304:	str	r3, [r9, #8]
    6308:	sub	r1, r1, r2
    630c:	ldr	ip, [ip, #8]
    6310:	eor	r1, r1, r2, lsr #3
    6314:	sub	r0, lr, r2
    6318:	sub	r0, r0, r1
    631c:	eor	r0, r0, r1, lsl #10
    6320:	sub	r1, r2, r1
    6324:	ldr	r2, [ip, #4]
    6328:	sub	r1, r1, r0
    632c:	eor	r1, r1, r0, lsr #15
    6330:	sub	r2, r2, #1
    6334:	and	r2, r2, r1
    6338:	ldr	ip, [ip]
    633c:	add	r2, r2, r2, lsl #1
    6340:	mov	r6, #0
    6344:	lsl	r2, r2, #2
    6348:	add	lr, ip, r2
    634c:	ldr	r5, [ip, r2]
    6350:	ldr	r0, [lr, #4]
    6354:	str	r1, [r9, #36]	; 0x24
    6358:	ldr	r1, [lr, #8]
    635c:	cmp	r5, r6
    6360:	add	r0, r0, #1
    6364:	str	r0, [lr, #4]
    6368:	str	r5, [r9, #24]
    636c:	str	r6, [r9, #20]
    6370:	strne	r4, [r5, #12]
    6374:	str	r4, [ip, r2]
    6378:	add	r2, r1, #1
    637c:	add	r2, r2, r2, lsl #2
    6380:	cmp	r0, r2, lsl #1
    6384:	bcc	620c <get_piconet@@Base+0x12c>
    6388:	ldr	r2, [r3, #36]	; 0x24
    638c:	cmp	r2, #1
    6390:	beq	620c <get_piconet@@Base+0x12c>
    6394:	ldr	r0, [r3, #4]
    6398:	mov	r1, #1
    639c:	str	r3, [sp]
    63a0:	add	r0, r0, r0, lsl r1
    63a4:	lsl	r0, r0, #3
    63a8:	bl	2104 <calloc@plt>
    63ac:	subs	r7, r0, #0
    63b0:	beq	6570 <get_piconet@@Base+0x490>
    63b4:	ldr	r3, [sp]
    63b8:	ldmib	r3, {r0, ip, lr}
    63bc:	lsl	r1, r0, #1
    63c0:	sub	r2, r1, #1
    63c4:	tst	lr, r2
    63c8:	add	ip, ip, #1
    63cc:	movne	sl, #1
    63d0:	moveq	sl, #0
    63d4:	add	sl, sl, lr, lsr ip
    63d8:	cmp	r0, #0
    63dc:	mov	ip, #0
    63e0:	str	sl, [r3, #24]
    63e4:	str	ip, [r3, #28]
    63e8:	ldreq	r3, [r3]
    63ec:	streq	r3, [sp, #4]
    63f0:	beq	64b0 <get_piconet@@Base+0x3d0>
    63f4:	add	r1, r1, r0
    63f8:	str	r9, [sp, #12]
    63fc:	ldr	r0, [r3]
    6400:	str	fp, [sp, #16]
    6404:	mov	r9, r2
    6408:	mov	fp, r3
    640c:	lsl	r1, r1, #2
    6410:	str	ip, [sp]
    6414:	str	r0, [sp, #4]
    6418:	str	r1, [sp, #8]
    641c:	ldm	sp, {r2, r3}
    6420:	ldr	r5, [r3, r2]
    6424:	cmp	r5, #0
    6428:	beq	6490 <get_piconet@@Base+0x3b0>
    642c:	ldr	r4, [r5, #28]
    6430:	ldr	r6, [r5, #16]
    6434:	and	r4, r4, r9
    6438:	add	r4, r4, r4, lsl #1
    643c:	add	r8, r7, r4, lsl #2
    6440:	ldr	r0, [r8, #4]
    6444:	add	r0, r0, #1
    6448:	cmp	sl, r0
    644c:	str	r0, [r8, #4]
    6450:	bcs	646c <get_piconet@@Base+0x38c>
    6454:	ldr	r3, [fp, #28]
    6458:	mov	r1, sl
    645c:	add	r3, r3, #1
    6460:	str	r3, [fp, #28]
    6464:	bl	f3b0 <lell_pcapng_close@@Base+0x24>
    6468:	str	r0, [r8, #8]
    646c:	ldr	r3, [r7, r4, lsl #2]
    6470:	mov	r2, #0
    6474:	cmp	r3, r2
    6478:	str	r2, [r5, #12]
    647c:	str	r3, [r5, #16]
    6480:	strne	r5, [r3, #12]
    6484:	str	r5, [r7, r4, lsl #2]
    6488:	subs	r5, r6, #0
    648c:	bne	642c <get_piconet@@Base+0x34c>
    6490:	ldr	r3, [sp]
    6494:	ldr	r2, [sp, #8]
    6498:	add	r3, r3, #12
    649c:	cmp	r3, r2
    64a0:	str	r3, [sp]
    64a4:	bne	641c <get_piconet@@Base+0x33c>
    64a8:	ldr	r9, [sp, #12]
    64ac:	ldr	fp, [sp, #16]
    64b0:	ldr	r0, [sp, #4]
    64b4:	bl	21a0 <free@plt>
    64b8:	ldr	r3, [r9, #8]
    64bc:	ldmib	r3, {r1, r2, ip}
    64c0:	ldr	r0, [r3, #28]
    64c4:	str	r7, [r3]
    64c8:	add	r2, r2, #1
    64cc:	lsl	r1, r1, #1
    64d0:	cmp	r0, ip, lsr #1
    64d4:	stmib	r3, {r1, r2}
    64d8:	movls	r2, #0
    64dc:	strls	r2, [r3, #32]
    64e0:	bls	620c <get_piconet@@Base+0x12c>
    64e4:	ldr	r2, [r3, #32]
    64e8:	add	r2, r2, #1
    64ec:	cmp	r2, #1
    64f0:	str	r2, [r3, #32]
    64f4:	movhi	r2, #1
    64f8:	strhi	r2, [r3, #36]	; 0x24
    64fc:	b	620c <get_piconet@@Base+0x12c>
    6500:	mov	r1, #1
    6504:	mov	r0, #44	; 0x2c
    6508:	str	ip, [r9, #12]
    650c:	str	r9, [r3, #8]
    6510:	bl	2104 <calloc@plt>
    6514:	cmp	r0, #0
    6518:	mov	r5, r0
    651c:	str	r0, [r9, #8]
    6520:	beq	6570 <get_piconet@@Base+0x490>
    6524:	mov	r0, #32
    6528:	mov	r2, #5
    652c:	mov	r3, #8
    6530:	add	r4, r9, #8
    6534:	str	r0, [r5, #4]
    6538:	mov	r1, #1
    653c:	str	r4, [r5, #16]
    6540:	mov	r0, #384	; 0x180
    6544:	str	r2, [r5, #8]
    6548:	str	r3, [r5, #20]
    654c:	bl	2104 <calloc@plt>
    6550:	cmp	r0, #0
    6554:	str	r0, [r5]
    6558:	beq	6570 <get_piconet@@Base+0x490>
    655c:	ldr	r2, [pc, #44]	; 6590 <get_piconet@@Base+0x4b0>
    6560:	mov	r3, r5
    6564:	str	r2, [r5, #40]	; 0x28
    6568:	mov	ip, r9
    656c:	b	6288 <get_piconet@@Base+0x1a8>
    6570:	mvn	r0, #0
    6574:	bl	2374 <exit@plt>
    6578:	andeq	r3, r2, r4, asr #1
    657c:	tsteq	r2, sp, lsl #2
    6580:	andeq	pc, r7, sp, ror #14
    6584:	svcls	0x0049bac6
    6588:	mcr2	14, 7, fp, cr13, cr3, {7}
    658c:	andeq	r2, r2, r0, ror pc
    6590:	andsge	r1, r1, r1, ror #31

00006594 <btbb_next_survey_result@@Base>:
    6594:	ldr	r2, [pc, #44]	; 65c8 <btbb_next_survey_result@@Base+0x34>
    6598:	push	{r4, lr}
    659c:	add	r2, pc, r2
    65a0:	ldr	r4, [r2, #8]
    65a4:	cmp	r4, #0
    65a8:	beq	65c0 <btbb_next_survey_result@@Base+0x2c>
    65ac:	ldr	r1, [r4, #16]
    65b0:	mov	r0, r4
    65b4:	str	r1, [r2, #8]
    65b8:	ldr	r4, [r4, #4]
    65bc:	bl	21a0 <free@plt>
    65c0:	mov	r0, r4
    65c4:	pop	{r4, pc}
    65c8:	andeq	r2, r2, r0, lsl ip

000065cc <btbb_process_packet@@Base>:
    65cc:	ldr	r3, [pc, #372]	; 6748 <btbb_process_packet@@Base+0x17c>
    65d0:	push	{r4, r5, r6, r7, r8, lr}
    65d4:	add	r3, pc, r3
    65d8:	mov	r5, r0
    65dc:	ldr	r7, [r3]
    65e0:	cmp	r7, #0
    65e4:	bne	66a0 <btbb_process_packet@@Base+0xd4>
    65e8:	cmp	r1, #0
    65ec:	mov	r4, r1
    65f0:	beq	6614 <btbb_process_packet@@Base+0x48>
    65f4:	ldrb	r1, [r0, #8]
    65f8:	mov	r0, r4
    65fc:	bl	2290 <btbb_piconet_set_channel_seen@plt>
    6600:	mov	r1, #3
    6604:	mov	r0, r4
    6608:	bl	2248 <btbb_piconet_get_flag@plt>
    660c:	cmp	r0, #0
    6610:	bne	6620 <btbb_process_packet@@Base+0x54>
    6614:	mov	r6, #0
    6618:	mov	r0, r6
    661c:	pop	{r4, r5, r6, r7, r8, pc}
    6620:	mov	r0, r5
    6624:	bl	223c <btbb_header_present@plt>
    6628:	cmp	r0, #0
    662c:	beq	6614 <btbb_process_packet@@Base+0x48>
    6630:	mov	r1, #14
    6634:	mov	r0, r4
    6638:	bl	2248 <btbb_piconet_get_flag@plt>
    663c:	subs	r6, r0, #0
    6640:	mov	r0, r4
    6644:	bne	66e8 <btbb_process_packet@@Base+0x11c>
    6648:	bl	2200 <btbb_piconet_get_uap@plt>
    664c:	cmp	r0, #0
    6650:	beq	66d8 <btbb_process_packet@@Base+0x10c>
    6654:	mov	r0, r5
    6658:	mov	r1, r4
    665c:	bl	232c <try_hop@plt>
    6660:	mov	r1, #4
    6664:	mov	r0, r4
    6668:	bl	2248 <btbb_piconet_get_flag@plt>
    666c:	cmp	r0, #0
    6670:	beq	6614 <btbb_process_packet@@Base+0x48>
    6674:	mov	r1, #5
    6678:	mov	r0, r4
    667c:	bl	2248 <btbb_piconet_get_flag@plt>
    6680:	cmp	r0, #0
    6684:	beq	6614 <btbb_process_packet@@Base+0x48>
    6688:	mov	r0, r4
    668c:	mov	r2, #1
    6690:	mov	r1, #14
    6694:	bl	226c <btbb_piconet_set_flag@plt>
    6698:	mvn	r6, #0
    669c:	b	6618 <btbb_process_packet@@Base+0x4c>
    66a0:	bl	2458 <btbb_packet_get_lap@plt>
    66a4:	bl	2488 <get_piconet@plt>
    66a8:	ldrb	r1, [r5, #8]
    66ac:	mov	r4, r0
    66b0:	bl	2290 <btbb_piconet_set_channel_seen@plt>
    66b4:	mov	r0, r5
    66b8:	bl	223c <btbb_header_present@plt>
    66bc:	cmp	r0, #0
    66c0:	beq	6614 <btbb_process_packet@@Base+0x48>
    66c4:	mov	r1, #2
    66c8:	mov	r0, r4
    66cc:	bl	2248 <btbb_piconet_get_flag@plt>
    66d0:	subs	r6, r0, #0
    66d4:	bne	6614 <btbb_process_packet@@Base+0x48>
    66d8:	mov	r1, r4
    66dc:	mov	r0, r5
    66e0:	bl	21d0 <btbb_uap_from_header@plt>
    66e4:	b	6618 <btbb_process_packet@@Base+0x4c>
    66e8:	bl	2200 <btbb_piconet_get_uap@plt>
    66ec:	mov	r1, r0
    66f0:	mov	r0, r5
    66f4:	bl	22a8 <btbb_packet_set_uap@plt>
    66f8:	mov	r2, #1
    66fc:	mov	r1, #4
    6700:	mov	r0, r5
    6704:	bl	2188 <btbb_packet_set_flag@plt>
    6708:	mov	r2, #1
    670c:	mov	r1, #5
    6710:	mov	r0, r5
    6714:	bl	2188 <btbb_packet_set_flag@plt>
    6718:	mov	r0, r5
    671c:	bl	22e4 <btbb_decode@plt>
    6720:	subs	r6, r0, #0
    6724:	beq	6738 <btbb_process_packet@@Base+0x16c>
    6728:	mov	r0, r5
    672c:	bl	250c <btbb_print_packet@plt>
    6730:	mov	r6, r7
    6734:	b	6618 <btbb_process_packet@@Base+0x4c>
    6738:	ldr	r0, [pc, #12]	; 674c <btbb_process_packet@@Base+0x180>
    673c:	add	r0, pc, r0
    6740:	bl	2314 <puts@plt>
    6744:	b	6618 <btbb_process_packet@@Base+0x4c>
    6748:	ldrdeq	r2, [r2], -r8
    674c:	andeq	fp, r0, r4, asr #21
    6750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6754:	sub	sp, sp, #580	; 0x244
    6758:	ldr	r5, [pc, #1000]	; 6b48 <btbb_process_packet@@Base+0x57c>
    675c:	mov	r4, r0
    6760:	add	r5, pc, r5
    6764:	mov	r1, r5
    6768:	mov	r2, #256	; 0x100
    676c:	add	r0, sp, #64	; 0x40
    6770:	bl	21c4 <memcpy@plt>
    6774:	add	r1, r5, #256	; 0x100
    6778:	mov	r2, #256	; 0x100
    677c:	add	r0, sp, #320	; 0x140
    6780:	bl	21c4 <memcpy@plt>
    6784:	uxtb	r6, r4
    6788:	add	r3, sp, #576	; 0x240
    678c:	add	r3, r3, r6
    6790:	tst	r4, #1
    6794:	add	r2, sp, #576	; 0x240
    6798:	ldrbne	r0, [r3, #-256]	; 0xffffff00
    679c:	ldrbeq	r0, [r3, #-512]	; 0xfffffe00
    67a0:	lsr	r3, r4, #8
    67a4:	tst	r4, #128	; 0x80
    67a8:	uxtb	ip, r3
    67ac:	add	r2, r2, ip
    67b0:	ldr	lr, [pc, #916]	; 6b4c <btbb_process_packet@@Base+0x580>
    67b4:	ldrbne	r7, [r2, #-256]	; 0xffffff00
    67b8:	ldrbeq	r7, [r2, #-512]	; 0xfffffe00
    67bc:	lsr	r2, r4, #16
    67c0:	tst	r3, #128	; 0x80
    67c4:	uxtb	sl, r2
    67c8:	add	r3, sp, #576	; 0x240
    67cc:	add	r3, r3, sl
    67d0:	add	lr, pc, lr
    67d4:	add	lr, lr, #512	; 0x200
    67d8:	mov	r5, sp
    67dc:	add	r0, r0, r7
    67e0:	ldrbne	r7, [r3, #-256]	; 0xffffff00
    67e4:	ldrbeq	r7, [r3, #-512]	; 0xfffffe00
    67e8:	lsr	r3, r4, #24
    67ec:	tst	r2, #128	; 0x80
    67f0:	add	r2, sp, #576	; 0x240
    67f4:	uxtb	r8, r3
    67f8:	add	r3, r2, r3
    67fc:	add	r7, r7, r0
    6800:	ldrbne	r0, [r3, #-256]	; 0xffffff00
    6804:	ldrbeq	r0, [r3, #-512]	; 0xfffffe00
    6808:	add	r3, sp, #576	; 0x240
    680c:	add	r9, r3, r8, lsr #2
    6810:	add	r0, r0, r7
    6814:	cmp	r0, #24
    6818:	subgt	r7, r0, #24
    681c:	ldm	lr!, {r0, r1, r2, r3}
    6820:	movle	r7, #0
    6824:	cmp	r6, ip
    6828:	cmpeq	r6, sl
    682c:	moveq	ip, #1
    6830:	stmia	r5!, {r0, r1, r2, r3}
    6834:	movne	ip, #0
    6838:	ldm	lr!, {r0, r1, r2, r3}
    683c:	cmp	r6, r8
    6840:	movne	r6, #0
    6844:	andeq	r6, ip, #1
    6848:	ldr	ip, [pc, #768]	; 6b50 <btbb_process_packet@@Base+0x584>
    684c:	stmia	r5!, {r0, r1, r2, r3}
    6850:	cmp	r4, ip
    6854:	ldm	lr!, {r0, r1, r2, r3}
    6858:	moveq	r8, #1
    685c:	movne	r8, #0
    6860:	eor	ip, ip, r4
    6864:	stmia	r5!, {r0, r1, r2, r3}
    6868:	ldm	lr, {r0, r1, r2, r3}
    686c:	stm	r5, {r0, r1, r2, r3}
    6870:	ldrb	r0, [r9, #-576]	; 0xfffffdc0
    6874:	rsb	r0, r0, #1
    6878:	add	r0, r0, r7
    687c:	add	r0, r6, r0
    6880:	add	r3, r8, r0
    6884:	mov	r0, #0
    6888:	beq	68ac <btbb_process_packet@@Base+0x2e0>
    688c:	add	r0, r0, #1
    6890:	sub	r2, ip, #1
    6894:	ands	ip, ip, r2
    6898:	uxtb	r0, r0
    689c:	bne	688c <btbb_process_packet@@Base+0x2c0>
    68a0:	sub	r0, r0, #1
    68a4:	clz	r0, r0
    68a8:	lsr	r0, r0, #5
    68ac:	ldr	ip, [pc, #672]	; 6b54 <btbb_process_packet@@Base+0x588>
    68b0:	ldr	r1, [pc, #672]	; 6b58 <btbb_process_packet@@Base+0x58c>
    68b4:	ldr	r7, [pc, #672]	; 6b5c <btbb_process_packet@@Base+0x590>
    68b8:	ldr	r8, [pc, #672]	; 6b60 <btbb_process_packet@@Base+0x594>
    68bc:	ldr	fp, [pc, #672]	; 6b64 <btbb_process_packet@@Base+0x598>
    68c0:	ldr	sl, [pc, #672]	; 6b68 <btbb_process_packet@@Base+0x59c>
    68c4:	ldr	r9, [pc, #672]	; 6b6c <btbb_process_packet@@Base+0x5a0>
    68c8:	ldr	lr, [pc, #672]	; 6b70 <btbb_process_packet@@Base+0x5a4>
    68cc:	ldr	r5, [pc, #672]	; 6b74 <btbb_process_packet@@Base+0x5a8>
    68d0:	add	r0, r3, r0
    68d4:	mov	r2, #0
    68d8:	and	r3, ip, r4, lsr r2
    68dc:	cmp	r3, r1
    68e0:	bhi	693c <btbb_process_packet@@Base+0x370>
    68e4:	cmp	r3, lr
    68e8:	bcs	6924 <btbb_process_packet@@Base+0x358>
    68ec:	cmp	r3, r5
    68f0:	bhi	69b0 <btbb_process_packet@@Base+0x3e4>
    68f4:	ldr	r6, [pc, #636]	; 6b78 <btbb_process_packet@@Base+0x5ac>
    68f8:	cmp	r3, r6
    68fc:	bcs	6924 <btbb_process_packet@@Base+0x358>
    6900:	ldr	r6, [pc, #628]	; 6b7c <btbb_process_packet@@Base+0x5b0>
    6904:	cmp	r3, r6
    6908:	bls	6a58 <btbb_process_packet@@Base+0x48c>
    690c:	cmp	r3, #512	; 0x200
    6910:	bcs	6a9c <btbb_process_packet@@Base+0x4d0>
    6914:	cmp	r3, #508	; 0x1fc
    6918:	bcs	6924 <btbb_process_packet@@Base+0x358>
    691c:	cmp	r3, #384	; 0x180
    6920:	bne	6928 <btbb_process_packet@@Base+0x35c>
    6924:	add	r0, r0, #1
    6928:	add	r2, r2, #4
    692c:	cmp	r2, #24
    6930:	bne	68d8 <btbb_process_packet@@Base+0x30c>
    6934:	add	sp, sp, #580	; 0x244
    6938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    693c:	cmp	r3, #2944	; 0xb80
    6940:	beq	6924 <btbb_process_packet@@Base+0x358>
    6944:	bhi	6974 <btbb_process_packet@@Base+0x3a8>
    6948:	cmp	r3, #2432	; 0x980
    694c:	beq	6924 <btbb_process_packet@@Base+0x358>
    6950:	bhi	6a30 <btbb_process_packet@@Base+0x464>
    6954:	cmp	r3, r9
    6958:	bhi	6b14 <btbb_process_packet@@Base+0x548>
    695c:	ldr	r6, [pc, #540]	; 6b80 <btbb_process_packet@@Base+0x5b4>
    6960:	cmp	r3, r6
    6964:	bcs	6924 <btbb_process_packet@@Base+0x358>
    6968:	cmp	r3, #1920	; 0x780
    696c:	bne	6928 <btbb_process_packet@@Base+0x35c>
    6970:	b	6924 <btbb_process_packet@@Base+0x358>
    6974:	cmp	r3, r7
    6978:	bhi	69e4 <btbb_process_packet@@Base+0x418>
    697c:	cmp	r3, r8
    6980:	bcs	6924 <btbb_process_packet@@Base+0x358>
    6984:	cmp	r3, #3200	; 0xc80
    6988:	beq	6924 <btbb_process_packet@@Base+0x358>
    698c:	bls	6b34 <btbb_process_packet@@Base+0x568>
    6990:	cmp	r3, fp
    6994:	bcc	6928 <btbb_process_packet@@Base+0x35c>
    6998:	ldr	r6, [pc, #484]	; 6b84 <btbb_process_packet@@Base+0x5b8>
    699c:	cmp	r3, r6
    69a0:	bls	6924 <btbb_process_packet@@Base+0x358>
    69a4:	cmp	r3, #3456	; 0xd80
    69a8:	bne	6928 <btbb_process_packet@@Base+0x35c>
    69ac:	b	6924 <btbb_process_packet@@Base+0x358>
    69b0:	ldr	r6, [pc, #464]	; 6b88 <btbb_process_packet@@Base+0x5bc>
    69b4:	cmp	r3, r6
    69b8:	bhi	6a10 <btbb_process_packet@@Base+0x444>
    69bc:	sub	r6, r6, #3
    69c0:	cmp	r3, r6
    69c4:	bcs	6924 <btbb_process_packet@@Base+0x358>
    69c8:	cmp	r3, #1024	; 0x400
    69cc:	bhi	6a78 <btbb_process_packet@@Base+0x4ac>
    69d0:	cmp	r3, #1016	; 0x3f8
    69d4:	bcs	6924 <btbb_process_packet@@Base+0x358>
    69d8:	cmp	r3, #896	; 0x380
    69dc:	bne	6928 <btbb_process_packet@@Base+0x35c>
    69e0:	b	6924 <btbb_process_packet@@Base+0x358>
    69e4:	cmp	r3, #3968	; 0xf80
    69e8:	beq	6924 <btbb_process_packet@@Base+0x358>
    69ec:	bhi	6ad8 <btbb_process_packet@@Base+0x50c>
    69f0:	cmp	r3, #3712	; 0xe80
    69f4:	beq	6924 <btbb_process_packet@@Base+0x358>
    69f8:	bcc	6928 <btbb_process_packet@@Base+0x35c>
    69fc:	sub	r3, r3, #3824	; 0xef0
    6a00:	sub	r3, r3, #14
    6a04:	cmp	r3, #3
    6a08:	bhi	6928 <btbb_process_packet@@Base+0x35c>
    6a0c:	b	6924 <btbb_process_packet@@Base+0x358>
    6a10:	cmp	r3, #1536	; 0x600
    6a14:	bcs	6ab8 <btbb_process_packet@@Base+0x4ec>
    6a18:	ldr	r6, [pc, #364]	; 6b8c <btbb_process_packet@@Base+0x5c0>
    6a1c:	cmp	r3, r6
    6a20:	bcs	6924 <btbb_process_packet@@Base+0x358>
    6a24:	cmp	r3, #1408	; 0x580
    6a28:	bne	6928 <btbb_process_packet@@Base+0x35c>
    6a2c:	b	6924 <btbb_process_packet@@Base+0x358>
    6a30:	cmp	r3, sl
    6a34:	bhi	6af4 <btbb_process_packet@@Base+0x528>
    6a38:	ldr	r6, [pc, #336]	; 6b90 <btbb_process_packet@@Base+0x5c4>
    6a3c:	cmp	r3, r6
    6a40:	bcs	6924 <btbb_process_packet@@Base+0x358>
    6a44:	sub	r3, r3, #2544	; 0x9f0
    6a48:	sub	r3, r3, #12
    6a4c:	cmp	r3, #3
    6a50:	bhi	6928 <btbb_process_packet@@Base+0x35c>
    6a54:	b	6924 <btbb_process_packet@@Base+0x358>
    6a58:	cmp	r3, #254	; 0xfe
    6a5c:	bcs	6924 <btbb_process_packet@@Base+0x358>
    6a60:	cmp	r3, #31
    6a64:	bls	6924 <btbb_process_packet@@Base+0x358>
    6a68:	sub	r3, r3, #127	; 0x7f
    6a6c:	cmp	r3, #1
    6a70:	bhi	6928 <btbb_process_packet@@Base+0x35c>
    6a74:	b	6924 <btbb_process_packet@@Base+0x358>
    6a78:	ldr	r6, [pc, #276]	; 6b94 <btbb_process_packet@@Base+0x5c8>
    6a7c:	cmp	r3, r6
    6a80:	bcc	6928 <btbb_process_packet@@Base+0x35c>
    6a84:	add	r6, r6, #5
    6a88:	cmp	r3, r6
    6a8c:	bls	6924 <btbb_process_packet@@Base+0x358>
    6a90:	cmp	r3, #1152	; 0x480
    6a94:	bne	6928 <btbb_process_packet@@Base+0x35c>
    6a98:	b	6924 <btbb_process_packet@@Base+0x358>
    6a9c:	cmp	r3, #512	; 0x200
    6aa0:	bls	6928 <btbb_process_packet@@Base+0x35c>
    6aa4:	cmp	r3, #516	; 0x204
    6aa8:	bcc	6924 <btbb_process_packet@@Base+0x358>
    6aac:	cmp	r3, #640	; 0x280
    6ab0:	bne	6928 <btbb_process_packet@@Base+0x35c>
    6ab4:	b	6924 <btbb_process_packet@@Base+0x358>
    6ab8:	cmp	r3, #1536	; 0x600
    6abc:	bls	6928 <btbb_process_packet@@Base+0x35c>
    6ac0:	ldr	r6, [pc, #208]	; 6b98 <btbb_process_packet@@Base+0x5cc>
    6ac4:	cmp	r3, r6
    6ac8:	bls	6924 <btbb_process_packet@@Base+0x358>
    6acc:	cmp	r3, #1664	; 0x680
    6ad0:	bne	6928 <btbb_process_packet@@Base+0x35c>
    6ad4:	b	6924 <btbb_process_packet@@Base+0x358>
    6ad8:	cmp	r3, #4064	; 0xfe0
    6adc:	beq	6924 <btbb_process_packet@@Base+0x358>
    6ae0:	bcc	6928 <btbb_process_packet@@Base+0x35c>
    6ae4:	sub	r3, r3, #4080	; 0xff0
    6ae8:	cmp	r3, #15
    6aec:	bhi	6928 <btbb_process_packet@@Base+0x35c>
    6af0:	b	6924 <btbb_process_packet@@Base+0x358>
    6af4:	cmp	r3, #2688	; 0xa80
    6af8:	beq	6924 <btbb_process_packet@@Base+0x358>
    6afc:	bcc	6928 <btbb_process_packet@@Base+0x35c>
    6b00:	sub	r3, r3, #2800	; 0xaf0
    6b04:	sub	r3, r3, #14
    6b08:	cmp	r3, #3
    6b0c:	bhi	6928 <btbb_process_packet@@Base+0x35c>
    6b10:	b	6924 <btbb_process_packet@@Base+0x358>
    6b14:	cmp	r3, #2176	; 0x880
    6b18:	beq	6924 <btbb_process_packet@@Base+0x358>
    6b1c:	bcc	6928 <btbb_process_packet@@Base+0x35c>
    6b20:	sub	r3, r3, #2288	; 0x8f0
    6b24:	sub	r3, r3, #14
    6b28:	cmp	r3, #3
    6b2c:	bhi	6928 <btbb_process_packet@@Base+0x35c>
    6b30:	b	6924 <btbb_process_packet@@Base+0x358>
    6b34:	sub	r3, r3, #3056	; 0xbf0
    6b38:	sub	r3, r3, #8
    6b3c:	cmp	r3, #15
    6b40:	bhi	6928 <btbb_process_packet@@Base+0x35c>
    6b44:	b	6924 <btbb_process_packet@@Base+0x358>
    6b48:			; <UNDEFINED> instruction: 0x0000bab8
    6b4c:	andeq	fp, r0, r8, asr #20
    6b50:	mcrhi	14, 4, fp, cr9, cr6, {6}
    6b54:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    6b58:	andeq	r0, r0, r1, lsl #14
    6b5c:	andeq	r0, r0, r3, lsl #28
    6b60:	strdeq	r0, [r0], -ip
    6b64:	strdeq	r0, [r0], -lr
    6b68:	andeq	r0, r0, r3, lsl #20
    6b6c:	andeq	r0, r0, pc, lsl #16
    6b70:	strdeq	r0, [r0], -lr
    6b74:	andeq	r0, r0, r1, lsl #6
    6b78:	strdeq	r0, [r0], -lr
    6b7c:	andeq	r0, r0, r1, lsl #2
    6b80:	strdeq	r0, [r0], -r4
    6b84:	andeq	r0, r0, r1, lsl #26
    6b88:	andeq	r0, r0, r1, lsl #10
    6b8c:	strdeq	r0, [r0], -ip
    6b90:	andeq	r0, r0, r1, lsl #20
    6b94:	andeq	r0, r0, r2, lsl #8
    6b98:	andeq	r0, r0, r3, lsl #12
    6b9c:	push	{r4, r5, r6, r7, r8, lr}
    6ba0:	mov	r5, r1
    6ba4:	add	r4, r2, #5
    6ba8:	mov	r1, r0
    6bac:	ldr	r0, [pc, #88]	; 6c0c <btbb_process_packet@@Base+0x640>
    6bb0:	mov	r7, r2
    6bb4:	add	r0, pc, r0
    6bb8:	ldrb	r2, [r5, r4]
    6bbc:	mov	r8, r3
    6bc0:	bl	2158 <printf@plt>
    6bc4:	ldr	r6, [pc, #68]	; 6c10 <btbb_process_packet@@Base+0x644>
    6bc8:	add	r4, r5, r4
    6bcc:	add	r6, pc, r6
    6bd0:	add	r5, r5, r7
    6bd4:	ldrb	r1, [r4, #-1]!
    6bd8:	mov	r0, r6
    6bdc:	bl	2158 <printf@plt>
    6be0:	cmp	r4, r5
    6be4:	bne	6bd4 <btbb_process_packet@@Base+0x608>
    6be8:	ldr	r1, [pc, #36]	; 6c14 <btbb_process_packet@@Base+0x648>
    6bec:	cmp	r8, #0
    6bf0:	add	r1, pc, r1
    6bf4:	ldrne	r1, [pc, #28]	; 6c18 <btbb_process_packet@@Base+0x64c>
    6bf8:	addne	r1, pc, r1
    6bfc:	ldr	r0, [pc, #24]	; 6c1c <btbb_process_packet@@Base+0x650>
    6c00:	pop	{r4, r5, r6, r7, r8, lr}
    6c04:	add	r0, pc, r0
    6c08:	b	2158 <printf@plt>
    6c0c:			; <UNDEFINED> instruction: 0x0000b8b4
    6c10:	andeq	fp, r0, r8, lsr #17
    6c14:	andeq	fp, r0, r0, ror r8
    6c18:	andeq	fp, r0, r0, ror #16
    6c1c:	andeq	fp, r0, r8, ror r8
    6c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6c24:	vpush	{d8}
    6c28:	subs	r8, r1, #0
    6c2c:	sub	sp, sp, #52	; 0x34
    6c30:	ble	6f50 <btbb_process_packet@@Base+0x984>
    6c34:	ldrb	r4, [r0]
    6c38:	mov	r7, r0
    6c3c:	add	r6, r4, #1
    6c40:	cmp	r8, r6
    6c44:	blt	72dc <btbb_process_packet@@Base+0xd10>
    6c48:	cmp	r4, #0
    6c4c:	beq	7304 <btbb_process_packet@@Base+0xd38>
    6c50:	ldr	r3, [pc, #1000]	; 7040 <btbb_process_packet@@Base+0xa74>
    6c54:	ldr	r2, [pc, #1000]	; 7044 <btbb_process_packet@@Base+0xa78>
    6c58:	add	r3, pc, r3
    6c5c:	str	r3, [sp, #4]
    6c60:	ldr	r3, [pc, #992]	; 7048 <btbb_process_packet@@Base+0xa7c>
    6c64:	add	r2, pc, r2
    6c68:	add	r3, pc, r3
    6c6c:	str	r3, [sp, #28]
    6c70:	ldr	r3, [pc, #980]	; 704c <btbb_process_packet@@Base+0xa80>
    6c74:	mov	r5, #0
    6c78:	add	r3, pc, r3
    6c7c:	str	r3, [sp, #20]
    6c80:	ldr	r3, [pc, #968]	; 7050 <btbb_process_packet@@Base+0xa84>
    6c84:	vldr	d8, [pc, #940]	; 7038 <btbb_process_packet@@Base+0xa6c>
    6c88:	add	r3, pc, r3
    6c8c:	str	r2, [sp, #24]
    6c90:	mov	sl, #1
    6c94:	str	r5, [sp]
    6c98:	mov	r9, r3
    6c9c:	b	6d18 <btbb_process_packet@@Base+0x74c>
    6ca0:	cmp	r5, #18
    6ca4:	beq	7000 <btbb_process_packet@@Base+0xa34>
    6ca8:	bhi	6ea4 <btbb_process_packet@@Base+0x8d8>
    6cac:	cmp	r5, #9
    6cb0:	beq	7138 <btbb_process_packet@@Base+0xb6c>
    6cb4:	cmp	r5, #10
    6cb8:	bne	70e8 <btbb_process_packet@@Base+0xb1c>
    6cbc:	ldr	r0, [pc, #912]	; 7054 <btbb_process_packet@@Base+0xa88>
    6cc0:	add	r0, pc, r0
    6cc4:	bl	2314 <puts@plt>
    6cc8:	ldr	r0, [pc, #904]	; 7058 <btbb_process_packet@@Base+0xa8c>
    6ccc:	add	r0, pc, r0
    6cd0:	bl	2158 <printf@plt>
    6cd4:	cmp	r4, #2
    6cd8:	beq	731c <btbb_process_packet@@Base+0xd50>
    6cdc:	ldr	r0, [pc, #888]	; 705c <btbb_process_packet@@Base+0xa90>
    6ce0:	sub	r1, r4, #1
    6ce4:	add	r0, pc, r0
    6ce8:	bl	2158 <printf@plt>
    6cec:	cmp	r8, r6
    6cf0:	ble	6f50 <btbb_process_packet@@Base+0x984>
    6cf4:	ldrb	r4, [r7, r6]
    6cf8:	add	sl, r6, #1
    6cfc:	add	r3, r4, sl
    6d00:	cmp	r8, r3
    6d04:	blt	72e0 <btbb_process_packet@@Base+0xd14>
    6d08:	cmp	r4, #0
    6d0c:	str	r6, [sp]
    6d10:	beq	7304 <btbb_process_packet@@Base+0xd38>
    6d14:	mov	r6, r3
    6d18:	ldrb	r5, [r7, sl]
    6d1c:	ldr	r0, [sp, #4]
    6d20:	add	fp, r7, sl
    6d24:	mov	r1, r5
    6d28:	bl	2158 <printf@plt>
    6d2c:	cmp	r5, #7
    6d30:	beq	71f8 <btbb_process_packet@@Base+0xc2c>
    6d34:	bhi	6ca0 <btbb_process_packet@@Base+0x6d4>
    6d38:	cmp	r5, #2
    6d3c:	beq	719c <btbb_process_packet@@Base+0xbd0>
    6d40:	bls	6f5c <btbb_process_packet@@Base+0x990>
    6d44:	cmp	r5, #3
    6d48:	beq	7220 <btbb_process_packet@@Base+0xc54>
    6d4c:	cmp	r5, #6
    6d50:	bne	70e8 <btbb_process_packet@@Base+0xb1c>
    6d54:	ldr	r0, [pc, #772]	; 7060 <btbb_process_packet@@Base+0xa94>
    6d58:	sub	r4, r4, #1
    6d5c:	add	r0, pc, r0
    6d60:	bl	2314 <puts@plt>
    6d64:	ands	r2, r4, #15
    6d68:	bne	7210 <btbb_process_packet@@Base+0xc44>
    6d6c:	cmp	r4, #0
    6d70:	beq	6cec <btbb_process_packet@@Base+0x720>
    6d74:	ldr	r1, [sp]
    6d78:	mov	fp, r2
    6d7c:	add	r3, r7, r1
    6d80:	add	r5, r1, #2
    6d84:	ldrb	r3, [r3, #2]
    6d88:	add	r5, r7, r5
    6d8c:	strb	r3, [sp, #47]	; 0x2f
    6d90:	add	r3, sp, #36	; 0x24
    6d94:	str	r3, [sp, #12]
    6d98:	add	r3, sp, #47	; 0x2f
    6d9c:	str	r3, [sp, #16]
    6da0:	add	fp, fp, #1
    6da4:	cmp	r4, fp
    6da8:	beq	6cec <btbb_process_packet@@Base+0x720>
    6dac:	and	r3, fp, #15
    6db0:	mvn	r2, r3
    6db4:	ldrb	r1, [r5, #1]!
    6db8:	cmp	r3, #15
    6dbc:	add	r2, r2, #16
    6dc0:	add	r3, sp, #32
    6dc4:	strb	r1, [r3, r2]
    6dc8:	bne	6da0 <btbb_process_packet@@Base+0x7d4>
    6dcc:	add	sl, sp, #32
    6dd0:	ldr	r0, [sp, #20]
    6dd4:	bl	2158 <printf@plt>
    6dd8:	str	r4, [sp]
    6ddc:	mov	r4, sl
    6de0:	ldr	sl, [sp, #12]
    6de4:	ldrb	r1, [r4], #1
    6de8:	mov	r0, r9
    6dec:	bl	2158 <printf@plt>
    6df0:	cmp	sl, r4
    6df4:	bne	6de4 <btbb_process_packet@@Base+0x818>
    6df8:	mov	r0, #45	; 0x2d
    6dfc:	ldr	r4, [sp]
    6e00:	bl	2434 <putchar@plt>
    6e04:	ldrb	r1, [sp, #36]	; 0x24
    6e08:	mov	r0, r9
    6e0c:	bl	2158 <printf@plt>
    6e10:	ldrb	r1, [sp, #37]	; 0x25
    6e14:	mov	r0, r9
    6e18:	bl	2158 <printf@plt>
    6e1c:	mov	r0, #45	; 0x2d
    6e20:	bl	2434 <putchar@plt>
    6e24:	ldrb	r1, [sp, #38]	; 0x26
    6e28:	mov	r0, r9
    6e2c:	bl	2158 <printf@plt>
    6e30:	ldrb	r1, [sp, #39]	; 0x27
    6e34:	mov	r0, r9
    6e38:	bl	2158 <printf@plt>
    6e3c:	add	sl, sp, #48	; 0x30
    6e40:	mov	r0, #45	; 0x2d
    6e44:	bl	2434 <putchar@plt>
    6e48:	ldrb	r1, [sp, #40]	; 0x28
    6e4c:	mov	r0, r9
    6e50:	bl	2158 <printf@plt>
    6e54:	ldrb	r1, [sl, #-7]!
    6e58:	mov	r0, r9
    6e5c:	bl	2158 <printf@plt>
    6e60:	mov	r0, #45	; 0x2d
    6e64:	bl	2434 <putchar@plt>
    6e68:	str	r5, [sp]
    6e6c:	str	r4, [sp, #8]
    6e70:	ldr	r5, [sp, #24]
    6e74:	mov	r4, sl
    6e78:	ldr	sl, [sp, #16]
    6e7c:	ldrb	r1, [r4, #1]!
    6e80:	mov	r0, r5
    6e84:	bl	2158 <printf@plt>
    6e88:	cmp	sl, r4
    6e8c:	bne	6e7c <btbb_process_packet@@Base+0x8b0>
    6e90:	mov	r0, #10
    6e94:	ldr	r5, [sp]
    6e98:	ldr	r4, [sp, #8]
    6e9c:	bl	2434 <putchar@plt>
    6ea0:	b	6da0 <btbb_process_packet@@Base+0x7d4>
    6ea4:	cmp	r5, #22
    6ea8:	beq	7230 <btbb_process_packet@@Base+0xc64>
    6eac:	cmp	r5, #255	; 0xff
    6eb0:	bne	70e8 <btbb_process_packet@@Base+0xb1c>
    6eb4:	ldr	r5, [pc, #424]	; 7064 <btbb_process_packet@@Base+0xa98>
    6eb8:	ldr	r0, [pc, #424]	; 7068 <btbb_process_packet@@Base+0xa9c>
    6ebc:	add	r5, pc, r5
    6ec0:	add	r0, pc, r0
    6ec4:	bl	2314 <puts@plt>
    6ec8:	mov	r0, r5
    6ecc:	bl	2158 <printf@plt>
    6ed0:	cmp	r4, #2
    6ed4:	ble	72c8 <btbb_process_packet@@Base+0xcfc>
    6ed8:	ldrb	r0, [fp, #2]
    6edc:	ldrb	r3, [fp, #1]
    6ee0:	orr	r0, r3, r0, lsl #8
    6ee4:	bl	2470 <bt_compidtostr@plt>
    6ee8:	mov	r1, r0
    6eec:	ldr	r0, [pc, #376]	; 706c <btbb_process_packet@@Base+0xaa0>
    6ef0:	add	r0, pc, r0
    6ef4:	bl	2158 <printf@plt>
    6ef8:	mov	r0, r5
    6efc:	bl	2158 <printf@plt>
    6f00:	ldr	r0, [pc, #360]	; 7070 <btbb_process_packet@@Base+0xaa4>
    6f04:	add	r0, pc, r0
    6f08:	bl	2158 <printf@plt>
    6f0c:	cmp	r4, #3
    6f10:	beq	6f40 <btbb_process_packet@@Base+0x974>
    6f14:	ldr	r5, [pc, #344]	; 7074 <btbb_process_packet@@Base+0xaa8>
    6f18:	add	r4, r4, sl
    6f1c:	add	sl, sl, #3
    6f20:	add	r5, pc, r5
    6f24:	add	r4, r7, r4
    6f28:	add	sl, r7, sl
    6f2c:	ldrb	r1, [sl], #1
    6f30:	mov	r0, r5
    6f34:	bl	2158 <printf@plt>
    6f38:	cmp	r4, sl
    6f3c:	bne	6f2c <btbb_process_packet@@Base+0x960>
    6f40:	mov	r0, #10
    6f44:	bl	2434 <putchar@plt>
    6f48:	cmp	r8, r6
    6f4c:	bgt	6cf4 <btbb_process_packet@@Base+0x728>
    6f50:	add	sp, sp, #52	; 0x34
    6f54:	vpop	{d8}
    6f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6f5c:	cmp	r5, #1
    6f60:	bne	70e8 <btbb_process_packet@@Base+0xb1c>
    6f64:	ldr	r0, [pc, #268]	; 7078 <btbb_process_packet@@Base+0xaac>
    6f68:	ldr	r4, [pc, #268]	; 707c <btbb_process_packet@@Base+0xab0>
    6f6c:	add	r0, pc, r0
    6f70:	bl	2314 <puts@plt>
    6f74:	ldr	r0, [pc, #260]	; 7080 <btbb_process_packet@@Base+0xab4>
    6f78:	add	sl, sl, #1
    6f7c:	add	r0, pc, r0
    6f80:	bl	2158 <printf@plt>
    6f84:	add	r4, pc, r4
    6f88:	add	sl, r7, sl
    6f8c:	mov	r5, #7
    6f90:	ldrb	r1, [sl]
    6f94:	mov	r0, r4
    6f98:	asr	r1, r1, r5
    6f9c:	sub	r5, r5, #1
    6fa0:	and	r1, r1, #1
    6fa4:	bl	2158 <printf@plt>
    6fa8:	cmn	r5, #1
    6fac:	bne	6f90 <btbb_process_packet@@Base+0x9c4>
    6fb0:	ldr	r5, [pc, #204]	; 7084 <btbb_process_packet@@Base+0xab8>
    6fb4:	ldr	r4, [pc, #204]	; 7088 <btbb_process_packet@@Base+0xabc>
    6fb8:	mov	r0, #10
    6fbc:	bl	2434 <putchar@plt>
    6fc0:	add	r5, pc, r5
    6fc4:	add	r4, pc, r4
    6fc8:	mov	fp, #0
    6fcc:	b	6fdc <btbb_process_packet@@Base+0xa10>
    6fd0:	add	fp, fp, #1
    6fd4:	cmp	fp, #8
    6fd8:	beq	6f40 <btbb_process_packet@@Base+0x974>
    6fdc:	ldrb	r3, [sl]
    6fe0:	asr	r3, r3, fp
    6fe4:	tst	r3, #1
    6fe8:	beq	6fd0 <btbb_process_packet@@Base+0xa04>
    6fec:	mov	r0, r5
    6ff0:	bl	2158 <printf@plt>
    6ff4:	ldr	r0, [r4, fp, lsl #2]
    6ff8:	bl	2314 <puts@plt>
    6ffc:	b	6fd0 <btbb_process_packet@@Base+0xa04>
    7000:	ldr	r0, [pc, #132]	; 708c <btbb_process_packet@@Base+0xac0>
    7004:	add	r0, pc, r0
    7008:	bl	2314 <puts@plt>
    700c:	ldr	r0, [pc, #124]	; 7090 <btbb_process_packet@@Base+0xac4>
    7010:	add	r0, pc, r0
    7014:	bl	2158 <printf@plt>
    7018:	cmp	r4, #5
    701c:	beq	7330 <btbb_process_packet@@Base+0xd64>
    7020:	ldr	r0, [pc, #108]	; 7094 <btbb_process_packet@@Base+0xac8>
    7024:	sub	r1, r4, #1
    7028:	add	r0, pc, r0
    702c:	bl	2158 <printf@plt>
    7030:	b	6cec <btbb_process_packet@@Base+0x720>
    7034:	nop			; (mov r0, r0)
    7038:	andeq	r0, r0, r0
    703c:	svccc	0x00f40000
    7040:	andeq	fp, r0, r8, lsl #17
    7044:	andeq	fp, r0, r0, asr r9
    7048:	andeq	fp, r0, r4, asr r9
    704c:	muleq	r0, r0, r8
    7050:	andeq	fp, r0, ip, lsr #18
    7054:	andeq	fp, r0, r0, asr #18
    7058:	andeq	fp, r0, ip, lsr r8
    705c:	andeq	fp, r0, r8, lsr r9
    7060:	andeq	fp, r0, r0, lsl r8
    7064:	andeq	fp, r0, ip, asr #12
    7068:	andeq	fp, r0, r8, lsr #16
    706c:	andeq	fp, r0, r8, lsl r8
    7070:	andeq	fp, r0, r4, lsl r8
    7074:	andeq	fp, r0, ip, asr #11
    7078:	andeq	fp, r0, r8, lsl #11
    707c:	andeq	fp, r0, ip, ror r5
    7080:	andeq	fp, r0, ip, lsl #11
    7084:	andeq	fp, r0, r4, asr #10
    7088:	andeq	r1, r2, ip, lsl #29
    708c:	andeq	fp, r0, r8, lsr r6
    7090:	strdeq	fp, [r0], -r8
    7094:	andeq	fp, r0, r0, asr r6
    7098:	andeq	fp, r0, r4, lsl r4
    709c:	ldrdeq	fp, [r0], -ip
    70a0:	andeq	fp, r0, ip, lsr #9
    70a4:	andeq	fp, r0, r0, asr #7
    70a8:	andeq	fp, r0, r4, ror r3
    70ac:	andeq	fp, r0, r4, lsl #7
    70b0:	muleq	r0, r8, r3
    70b4:	andeq	fp, r0, r8, lsl r3
    70b8:	andeq	fp, r0, r4, ror #8
    70bc:	andeq	fp, r0, r8, asr #5
    70c0:	andeq	fp, r0, r4, asr #8
    70c4:	andeq	fp, r0, r4, lsr r4
    70c8:	andeq	fp, r0, r4, ror #4
    70cc:	andeq	fp, r0, r8, lsl #8
    70d0:	strdeq	fp, [r0], -r4
    70d4:			; <UNDEFINED> instruction: 0x0000b1b4
    70d8:	andeq	fp, r0, ip, ror r1
    70dc:	strdeq	fp, [r0], -r0
    70e0:	andeq	fp, r0, r0, lsr #6
    70e4:	andeq	fp, r0, r4, lsl #6
    70e8:	mov	r0, #10
    70ec:	bl	2434 <putchar@plt>
    70f0:	ldr	r0, [pc, #-96]	; 7098 <btbb_process_packet@@Base+0xacc>
    70f4:	add	r0, pc, r0
    70f8:	bl	2158 <printf@plt>
    70fc:	cmp	r4, #1
    7100:	beq	6f40 <btbb_process_packet@@Base+0x974>
    7104:	add	r4, r4, sl
    7108:	ldr	r5, [pc, #-116]	; 709c <btbb_process_packet@@Base+0xad0>
    710c:	sub	r4, r4, #1
    7110:	add	r5, pc, r5
    7114:	add	r4, r7, r4
    7118:	ldrb	r1, [fp, #1]!
    711c:	mov	r0, r5
    7120:	bl	2158 <printf@plt>
    7124:	cmp	r4, fp
    7128:	bne	7118 <btbb_process_packet@@Base+0xb4c>
    712c:	mov	r0, #10
    7130:	bl	2434 <putchar@plt>
    7134:	b	6f48 <btbb_process_packet@@Base+0x97c>
    7138:	ldr	r0, [pc, #-160]	; 70a0 <btbb_process_packet@@Base+0xad4>
    713c:	add	r0, pc, r0
    7140:	bl	2314 <puts@plt>
    7144:	ldr	r0, [pc, #-168]	; 70a4 <btbb_process_packet@@Base+0xad8>
    7148:	add	r0, pc, r0
    714c:	bl	2158 <printf@plt>
    7150:	cmp	r4, #1
    7154:	beq	6f40 <btbb_process_packet@@Base+0x974>
    7158:	bl	2368 <__ctype_b_loc@plt>
    715c:	add	r4, r4, sl
    7160:	sub	r4, r4, #1
    7164:	add	r4, r7, r4
    7168:	mov	r5, r0
    716c:	ldrb	r0, [fp, #1]!
    7170:	ldr	r2, [r5]
    7174:	lsl	r3, r0, #1
    7178:	ldrh	r3, [r2, r3]
    717c:	tst	r3, #16384	; 0x4000
    7180:	moveq	r0, #46	; 0x2e
    7184:	bl	2434 <putchar@plt>
    7188:	cmp	fp, r4
    718c:	bne	716c <btbb_process_packet@@Base+0xba0>
    7190:	mov	r0, #10
    7194:	bl	2434 <putchar@plt>
    7198:	b	6f48 <btbb_process_packet@@Base+0x97c>
    719c:	ldr	r0, [pc, #-252]	; 70a8 <btbb_process_packet@@Base+0xadc>
    71a0:	add	r0, pc, r0
    71a4:	bl	2314 <puts@plt>
    71a8:	sub	r3, r4, #1
    71ac:	tst	r3, #1
    71b0:	bne	6cec <btbb_process_packet@@Base+0x720>
    71b4:	cmp	r3, #0
    71b8:	beq	6cec <btbb_process_packet@@Base+0x720>
    71bc:	ldr	r2, [sp]
    71c0:	sub	r4, r4, #2
    71c4:	bic	r4, r4, #1
    71c8:	add	r3, r2, #2
    71cc:	ldr	sl, [pc, #-296]	; 70ac <btbb_process_packet@@Base+0xae0>
    71d0:	add	r4, r4, r3
    71d4:	add	sl, pc, sl
    71d8:	add	r4, r7, r4
    71dc:	add	r5, r7, r2
    71e0:	ldrh	r1, [r5, #2]!
    71e4:	mov	r0, sl
    71e8:	bl	2158 <printf@plt>
    71ec:	cmp	r4, r5
    71f0:	bne	71e0 <btbb_process_packet@@Base+0xc14>
    71f4:	b	6cec <btbb_process_packet@@Base+0x720>
    71f8:	ldr	r0, [pc, #-336]	; 70b0 <btbb_process_packet@@Base+0xae4>
    71fc:	sub	r4, r4, #1
    7200:	add	r0, pc, r0
    7204:	bl	2314 <puts@plt>
    7208:	ands	r2, r4, #15
    720c:	beq	6d6c <btbb_process_packet@@Base+0x7a0>
    7210:	mov	r1, r4
    7214:	ldr	r0, [sp, #28]
    7218:	bl	2158 <printf@plt>
    721c:	b	6cec <btbb_process_packet@@Base+0x720>
    7220:	ldr	r0, [pc, #-372]	; 70b4 <btbb_process_packet@@Base+0xae8>
    7224:	add	r0, pc, r0
    7228:	bl	2314 <puts@plt>
    722c:	b	71a8 <btbb_process_packet@@Base+0xbdc>
    7230:	ldr	r0, [pc, #-384]	; 70b8 <btbb_process_packet@@Base+0xaec>
    7234:	add	r0, pc, r0
    7238:	bl	2314 <puts@plt>
    723c:	ldr	r0, [pc, #-392]	; 70bc <btbb_process_packet@@Base+0xaf0>
    7240:	add	r0, pc, r0
    7244:	bl	2158 <printf@plt>
    7248:	cmp	r4, #2
    724c:	ble	72b4 <btbb_process_packet@@Base+0xce8>
    7250:	add	sl, sl, #2
    7254:	ldrb	r3, [fp, #1]
    7258:	ldrb	r1, [r7, sl]
    725c:	ldr	r0, [pc, #-420]	; 70c0 <btbb_process_packet@@Base+0xaf4>
    7260:	add	sl, r7, sl
    7264:	add	r0, pc, r0
    7268:	orr	r1, r3, r1, lsl #8
    726c:	bl	2158 <printf@plt>
    7270:	cmp	r4, #3
    7274:	beq	6f40 <btbb_process_packet@@Base+0x974>
    7278:	ldr	r0, [pc, #-444]	; 70c4 <btbb_process_packet@@Base+0xaf8>
    727c:	ldr	r5, [pc, #-444]	; 70c8 <btbb_process_packet@@Base+0xafc>
    7280:	add	r0, pc, r0
    7284:	bl	2158 <printf@plt>
    7288:	add	r5, pc, r5
    728c:	mov	fp, #3
    7290:	add	fp, fp, #1
    7294:	ldrb	r1, [sl, #1]!
    7298:	mov	r0, r5
    729c:	bl	2158 <printf@plt>
    72a0:	cmp	fp, r4
    72a4:	blt	7290 <btbb_process_packet@@Base+0xcc4>
    72a8:	mov	r0, #10
    72ac:	bl	2434 <putchar@plt>
    72b0:	b	6f48 <btbb_process_packet@@Base+0x97c>
    72b4:	ldr	r0, [pc, #-496]	; 70cc <btbb_process_packet@@Base+0xb00>
    72b8:	sub	r1, r4, #1
    72bc:	add	r0, pc, r0
    72c0:	bl	2158 <printf@plt>
    72c4:	b	6cec <btbb_process_packet@@Base+0x720>
    72c8:	ldr	r0, [pc, #-512]	; 70d0 <btbb_process_packet@@Base+0xb04>
    72cc:	sub	r1, r4, #1
    72d0:	add	r0, pc, r0
    72d4:	bl	2158 <printf@plt>
    72d8:	b	6cec <btbb_process_packet@@Base+0x720>
    72dc:	mov	sl, #1
    72e0:	ldr	r0, [pc, #-532]	; 70d4 <btbb_process_packet@@Base+0xb08>
    72e4:	mov	r3, r8
    72e8:	mov	r2, r4
    72ec:	mov	r1, sl
    72f0:	add	r0, pc, r0
    72f4:	add	sp, sp, #52	; 0x34
    72f8:	vpop	{d8}
    72fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7300:	b	2158 <printf@plt>
    7304:	ldr	r0, [pc, #-564]	; 70d8 <btbb_process_packet@@Base+0xb0c>
    7308:	add	r0, pc, r0
    730c:	add	sp, sp, #52	; 0x34
    7310:	vpop	{d8}
    7314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7318:	b	2314 <puts@plt>
    731c:	ldr	r0, [pc, #-584]	; 70dc <btbb_process_packet@@Base+0xb10>
    7320:	ldrb	r1, [fp, #1]
    7324:	add	r0, pc, r0
    7328:	bl	2158 <printf@plt>
    732c:	b	6cec <btbb_process_packet@@Base+0x720>
    7330:	ldrb	r2, [fp, #2]
    7334:	ldrb	r3, [fp, #1]
    7338:	ldr	r0, [pc, #-608]	; 70e0 <btbb_process_packet@@Base+0xb14>
    733c:	orr	r3, r3, r2, lsl #8
    7340:	add	r0, pc, r0
    7344:	vmov	s15, r3
    7348:	vcvt.f64.s32	d7, s15
    734c:	vmul.f64	d7, d7, d8
    7350:	vmov	r2, r3, d7
    7354:	bl	2158 <printf@plt>
    7358:	ldrb	r2, [fp, #4]
    735c:	ldrb	r3, [fp, #3]
    7360:	ldr	r0, [pc, #-644]	; 70e4 <btbb_process_packet@@Base+0xb18>
    7364:	orr	r3, r3, r2, lsl #8
    7368:	add	r0, pc, r0
    736c:	vmov	s15, r3
    7370:	vcvt.f64.s32	d7, s15
    7374:	vmul.f64	d7, d7, d8
    7378:	vmov	r2, r3, d7
    737c:	bl	2158 <printf@plt>
    7380:	b	6cec <btbb_process_packet@@Base+0x720>

00007384 <lell_packet_new@@Base>:
    7384:	push	{r4, lr}
    7388:	mov	r1, #104	; 0x68
    738c:	mov	r0, #1
    7390:	bl	2104 <calloc@plt>
    7394:	mov	r3, #1
    7398:	str	r3, [r0, #96]	; 0x60
    739c:	pop	{r4, pc}

000073a0 <lell_packet_ref@@Base>:
    73a0:	ldr	r3, [r0, #96]	; 0x60
    73a4:	add	r3, r3, #1
    73a8:	str	r3, [r0, #96]	; 0x60
    73ac:	bx	lr

000073b0 <lell_packet_unref@@Base>:
    73b0:	ldr	r3, [r0, #96]	; 0x60
    73b4:	subs	r3, r3, #1
    73b8:	beq	73c4 <lell_packet_unref@@Base+0x14>
    73bc:	str	r3, [r0, #96]	; 0x60
    73c0:	bx	lr
    73c4:	b	21a0 <free@plt>

000073c8 <lell_packet_is_data@@Base>:
    73c8:	ldrb	r0, [r0, #68]	; 0x44
    73cc:	cmp	r0, #36	; 0x24
    73d0:	movhi	r0, #0
    73d4:	movls	r0, #1
    73d8:	bx	lr

000073dc <lell_allocate_and_decode@@Base>:
    73dc:	push	{r4, r5, r6, r7, r8, lr}
    73e0:	mov	r5, r0
    73e4:	mov	r6, r3
    73e8:	mov	r4, r1
    73ec:	mov	r7, r2
    73f0:	bl	2464 <lell_packet_new@plt>
    73f4:	mov	r3, r5
    73f8:	add	r2, r5, #64	; 0x40
    73fc:	mov	r1, r0
    7400:	str	r0, [r6]
    7404:	ldr	r5, [r3]
    7408:	ldr	lr, [r3, #4]
    740c:	ldr	ip, [r3, #8]
    7410:	ldr	r0, [r3, #12]
    7414:	add	r3, r3, #16
    7418:	cmp	r3, r2
    741c:	str	r5, [r1]
    7420:	str	lr, [r1, #4]
    7424:	str	ip, [r1, #8]
    7428:	str	r0, [r1, #12]
    742c:	add	r1, r1, #16
    7430:	bne	7404 <lell_allocate_and_decode@@Base+0x28>
    7434:	ldr	r3, [pc, #364]	; 75a8 <lell_allocate_and_decode@@Base+0x1cc>
    7438:	ldr	r0, [r6]
    743c:	cmp	r4, r3
    7440:	beq	7550 <lell_allocate_and_decode@@Base+0x174>
    7444:	add	r3, r3, #23
    7448:	cmp	r4, r3
    744c:	bhi	7518 <lell_allocate_and_decode@@Base+0x13c>
    7450:	sub	r4, r4, #2400	; 0x960
    7454:	sub	r3, r4, #4
    7458:	add	r3, r3, r3, lsr #31
    745c:	asr	r3, r3, #1
    7460:	uxtb	r3, r3
    7464:	sub	r4, r4, #2
    7468:	ldr	r2, [r0]
    746c:	add	r4, r4, r4, lsr #31
    7470:	strb	r3, [r0, #68]	; 0x44
    7474:	asr	r4, r4, #1
    7478:	strb	r4, [r0, #69]	; 0x45
    747c:	str	r7, [r0, #76]	; 0x4c
    7480:	str	r2, [r0, #64]	; 0x40
    7484:	bl	2170 <lell_packet_is_data@plt>
    7488:	subs	r5, r0, #0
    748c:	bne	755c <lell_allocate_and_decode@@Base+0x180>
    7490:	ldr	r1, [r6]
    7494:	ldr	r6, [pc, #272]	; 75ac <lell_allocate_and_decode@@Base+0x1d0>
    7498:	ldrb	ip, [r1, #4]
    749c:	ldrb	r2, [r1, #100]	; 0x64
    74a0:	ldrb	r4, [r1, #5]
    74a4:	ldr	r3, [r1, #64]	; 0x40
    74a8:	bic	r2, r2, #1
    74ac:	and	r0, ip, #15
    74b0:	cmp	r3, r6
    74b4:	orreq	r2, r2, #1
    74b8:	lsr	lr, ip, #6
    74bc:	and	r4, r4, #63	; 0x3f
    74c0:	and	lr, lr, #1
    74c4:	lsr	ip, ip, #7
    74c8:	strb	r0, [r1, #80]	; 0x50
    74cc:	ands	r0, r2, #1
    74d0:	str	r4, [r1, #72]	; 0x48
    74d4:	str	lr, [r1, #84]	; 0x54
    74d8:	str	ip, [r1, #88]	; 0x58
    74dc:	strb	r2, [r1, #100]	; 0x64
    74e0:	bne	7510 <lell_allocate_and_decode@@Base+0x134>
    74e4:	cmp	r3, r6
    74e8:	eor	r3, r3, r6
    74ec:	beq	75a0 <lell_allocate_and_decode@@Base+0x1c4>
    74f0:	add	r0, r0, #1
    74f4:	sub	r2, r3, #1
    74f8:	ands	r3, r3, r2
    74fc:	uxtb	r0, r0
    7500:	bne	74f0 <lell_allocate_and_decode@@Base+0x114>
    7504:	cmp	r0, #1
    7508:	movne	r5, #32
    750c:	moveq	r5, #1
    7510:	str	r5, [r1, #92]	; 0x5c
    7514:	pop	{r4, r5, r6, r7, r8, pc}
    7518:	ldr	r3, [pc, #144]	; 75b0 <lell_allocate_and_decode@@Base+0x1d4>
    751c:	cmp	r4, r3
    7520:	beq	7594 <lell_allocate_and_decode@@Base+0x1b8>
    7524:	cmp	r4, #2480	; 0x9b0
    7528:	subcc	r3, r4, #2416	; 0x970
    752c:	subcc	r3, r3, #12
    7530:	subcs	r4, r4, #2400	; 0x960
    7534:	addcc	r3, r3, r3, lsr #31
    7538:	movcs	r3, #39	; 0x27
    753c:	asrcc	r3, r3, #1
    7540:	addcc	r3, r3, #11
    7544:	subcc	r4, r4, #2400	; 0x960
    7548:	uxtbcc	r3, r3
    754c:	b	7464 <lell_allocate_and_decode@@Base+0x88>
    7550:	mov	r3, #37	; 0x25
    7554:	mov	r4, #2
    7558:	b	7464 <lell_allocate_and_decode@@Base+0x88>
    755c:	ldr	r4, [r6]
    7560:	ldrb	r3, [r4, #5]
    7564:	ldr	r0, [r4, #64]	; 0x40
    7568:	and	r3, r3, #31
    756c:	str	r3, [r4, #72]	; 0x48
    7570:	bl	6750 <btbb_process_packet@@Base+0x184>
    7574:	ldrb	r3, [r4, #100]	; 0x64
    7578:	bic	r3, r3, #1
    757c:	str	r0, [r4, #92]	; 0x5c
    7580:	cmp	r0, #0
    7584:	movne	r0, r3
    7588:	orreq	r0, r3, #1
    758c:	strb	r0, [r4, #100]	; 0x64
    7590:	pop	{r4, r5, r6, r7, r8, pc}
    7594:	mov	r3, #38	; 0x26
    7598:	mov	r4, #26
    759c:	b	7464 <lell_allocate_and_decode@@Base+0x88>
    75a0:	mov	r5, #32
    75a4:	b	7510 <lell_allocate_and_decode@@Base+0x134>
    75a8:	andeq	r0, r0, r2, ror #18
    75ac:	mcrhi	14, 4, fp, cr9, cr6, {6}
    75b0:	andeq	r0, r0, sl, ror r9

000075b4 <lell_get_access_address@@Base>:
    75b4:	ldr	r0, [r0, #64]	; 0x40
    75b8:	bx	lr

000075bc <lell_get_access_address_offenses@@Base>:
    75bc:	ldr	r0, [r0, #92]	; 0x5c
    75c0:	bx	lr

000075c4 <lell_get_channel_index@@Base>:
    75c4:	ldrb	r0, [r0, #68]	; 0x44
    75c8:	bx	lr

000075cc <lell_get_channel_k@@Base>:
    75cc:	ldrb	r0, [r0, #69]	; 0x45
    75d0:	bx	lr

000075d4 <lell_get_adv_type_str@@Base>:
    75d4:	push	{r4, lr}
    75d8:	mov	r4, r0
    75dc:	bl	2170 <lell_packet_is_data@plt>
    75e0:	cmp	r0, #0
    75e4:	bne	7614 <lell_get_adv_type_str@@Base+0x40>
    75e8:	ldrb	r3, [r4, #80]	; 0x50
    75ec:	cmp	r3, #6
    75f0:	bhi	7608 <lell_get_adv_type_str@@Base+0x34>
    75f4:	ldr	r2, [pc, #32]	; 761c <lell_get_adv_type_str@@Base+0x48>
    75f8:	add	r2, pc, r2
    75fc:	add	r3, r2, r3, lsl #2
    7600:	ldr	r0, [r3, #32]
    7604:	pop	{r4, pc}
    7608:	ldr	r0, [pc, #16]	; 7620 <lell_get_adv_type_str@@Base+0x4c>
    760c:	add	r0, pc, r0
    7610:	pop	{r4, pc}
    7614:	mov	r0, #0
    7618:	pop	{r4, pc}
    761c:	andeq	r1, r2, r8, asr r8
    7620:	andeq	fp, r0, r4, lsl r1

00007624 <lell_print@@Base>:
    7624:	push	{r4, r5, r6, r7, r8, lr}
    7628:	mov	r6, r0
    762c:	bl	2170 <lell_packet_is_data@plt>
    7630:	ldrb	r3, [r6, #100]	; 0x64
    7634:	cmp	r0, #0
    7638:	beq	776c <lell_print@@Base+0x148>
    763c:	ldrb	r4, [r6, #4]
    7640:	ldr	r2, [pc, #1196]	; 7af4 <lell_print@@Base+0x4d0>
    7644:	tst	r3, #1
    7648:	ldr	r1, [r6, #64]	; 0x40
    764c:	add	r2, pc, r2
    7650:	and	r4, r4, #3
    7654:	ldreq	r2, [pc, #1180]	; 7af8 <lell_print@@Base+0x4d4>
    7658:	addeq	r2, pc, r2
    765c:	ldr	r0, [pc, #1176]	; 7afc <lell_print@@Base+0x4d8>
    7660:	ldr	r3, [r6, #72]	; 0x48
    7664:	add	r0, pc, r0
    7668:	bl	2158 <printf@plt>
    766c:	ldr	r5, [pc, #1164]	; 7b00 <lell_print@@Base+0x4dc>
    7670:	ldr	r0, [pc, #1164]	; 7b04 <lell_print@@Base+0x4e0>
    7674:	ldrb	r1, [r6, #68]	; 0x44
    7678:	add	r5, pc, r5
    767c:	add	r0, pc, r0
    7680:	bl	2158 <printf@plt>
    7684:	add	r3, r5, r4, lsl #2
    7688:	ldr	r0, [pc, #1144]	; 7b08 <lell_print@@Base+0x4e4>
    768c:	ldr	r2, [r3, #60]	; 0x3c
    7690:	mov	r1, r4
    7694:	add	r0, pc, r0
    7698:	bl	2158 <printf@plt>
    769c:	ldrb	r1, [r6, #4]
    76a0:	ldr	r0, [pc, #1124]	; 7b0c <lell_print@@Base+0x4e8>
    76a4:	add	r0, pc, r0
    76a8:	lsr	r3, r1, #4
    76ac:	lsr	r2, r1, #3
    76b0:	lsr	r1, r1, #2
    76b4:	and	r3, r3, #1
    76b8:	and	r2, r2, #1
    76bc:	and	r1, r1, #1
    76c0:	bl	2158 <printf@plt>
    76c4:	cmp	r4, #3
    76c8:	beq	77e8 <lell_print@@Base+0x1c4>
    76cc:	mov	r0, #10
    76d0:	bl	2434 <putchar@plt>
    76d4:	ldr	r0, [pc, #1076]	; 7b10 <lell_print@@Base+0x4ec>
    76d8:	ldr	r7, [pc, #1076]	; 7b14 <lell_print@@Base+0x4f0>
    76dc:	add	r0, pc, r0
    76e0:	bl	2158 <printf@plt>
    76e4:	ldr	r3, [r6, #72]	; 0x48
    76e8:	add	r7, pc, r7
    76ec:	cmp	r3, #0
    76f0:	add	r5, r6, #5
    76f4:	mov	r4, #6
    76f8:	ble	771c <lell_print@@Base+0xf8>
    76fc:	ldrb	r1, [r5, #1]!
    7700:	mov	r0, r7
    7704:	bl	2158 <printf@plt>
    7708:	ldr	r3, [r6, #72]	; 0x48
    770c:	add	r4, r4, #1
    7710:	add	r3, r3, #5
    7714:	cmp	r3, r4
    7718:	bge	76fc <lell_print@@Base+0xd8>
    771c:	mov	r0, #10
    7720:	bl	2434 <putchar@plt>
    7724:	ldr	r0, [pc, #1004]	; 7b18 <lell_print@@Base+0x4f4>
    7728:	ldr	r5, [pc, #1004]	; 7b1c <lell_print@@Base+0x4f8>
    772c:	add	r0, pc, r0
    7730:	bl	2158 <printf@plt>
    7734:	mov	r4, #0
    7738:	add	r5, pc, r5
    773c:	ldr	r2, [r6, #72]	; 0x48
    7740:	add	r3, r6, r4
    7744:	add	r3, r3, r2
    7748:	add	r4, r4, #1
    774c:	ldrb	r1, [r3, #6]
    7750:	mov	r0, r5
    7754:	bl	2158 <printf@plt>
    7758:	cmp	r4, #3
    775c:	bne	773c <lell_print@@Base+0x118>
    7760:	mov	r0, #10
    7764:	pop	{r4, r5, r6, r7, r8, lr}
    7768:	b	2434 <putchar@plt>
    776c:	ldr	r2, [pc, #940]	; 7b20 <lell_print@@Base+0x4fc>
    7770:	tst	r3, #1
    7774:	ldr	r1, [r6, #64]	; 0x40
    7778:	add	r2, pc, r2
    777c:	ldreq	r2, [pc, #928]	; 7b24 <lell_print@@Base+0x500>
    7780:	addeq	r2, pc, r2
    7784:	ldr	r0, [pc, #924]	; 7b28 <lell_print@@Base+0x504>
    7788:	ldr	r3, [r6, #72]	; 0x48
    778c:	add	r0, pc, r0
    7790:	bl	2158 <printf@plt>
    7794:	ldr	r0, [pc, #912]	; 7b2c <lell_print@@Base+0x508>
    7798:	ldrb	r1, [r6, #68]	; 0x44
    779c:	add	r0, pc, r0
    77a0:	bl	2158 <printf@plt>
    77a4:	mov	r0, r6
    77a8:	bl	22fc <lell_get_adv_type_str@plt>
    77ac:	mov	r1, r0
    77b0:	ldr	r0, [pc, #888]	; 7b30 <lell_print@@Base+0x50c>
    77b4:	add	r0, pc, r0
    77b8:	bl	2158 <printf@plt>
    77bc:	ldrb	r3, [r6, #80]	; 0x50
    77c0:	cmp	r3, #6
    77c4:	addls	pc, pc, r3, lsl #2
    77c8:	b	76cc <lell_print@@Base+0xa8>
    77cc:	b	7810 <lell_print@@Base+0x1ec>
    77d0:	b	7898 <lell_print@@Base+0x274>
    77d4:	b	7810 <lell_print@@Base+0x1ec>
    77d8:	b	78cc <lell_print@@Base+0x2a8>
    77dc:	b	7900 <lell_print@@Base+0x2dc>
    77e0:	b	7964 <lell_print@@Base+0x340>
    77e4:	b	7810 <lell_print@@Base+0x1ec>
    77e8:	ldrb	r1, [r6, #6]
    77ec:	ldr	r0, [pc, #832]	; 7b34 <lell_print@@Base+0x510>
    77f0:	cmp	r1, #20
    77f4:	movlt	r3, r1
    77f8:	movge	r3, #20
    77fc:	add	r0, pc, r0
    7800:	add	r5, r5, r3, lsl #2
    7804:	ldr	r2, [r5, #76]	; 0x4c
    7808:	bl	2158 <printf@plt>
    780c:	b	76cc <lell_print@@Base+0xa8>
    7810:	ldr	r0, [pc, #800]	; 7b38 <lell_print@@Base+0x514>
    7814:	ldr	r3, [r6, #84]	; 0x54
    7818:	mov	r2, #6
    781c:	mov	r1, r6
    7820:	add	r0, pc, r0
    7824:	bl	6b9c <btbb_process_packet@@Base+0x5d0>
    7828:	ldr	r3, [r6, #72]	; 0x48
    782c:	cmp	r3, #6
    7830:	ble	76cc <lell_print@@Base+0xa8>
    7834:	ldr	r0, [pc, #768]	; 7b3c <lell_print@@Base+0x518>
    7838:	add	r0, pc, r0
    783c:	bl	2158 <printf@plt>
    7840:	ldr	r3, [r6, #72]	; 0x48
    7844:	cmp	r3, #6
    7848:	ble	787c <lell_print@@Base+0x258>
    784c:	ldr	r7, [pc, #748]	; 7b40 <lell_print@@Base+0x51c>
    7850:	add	r5, r6, #11
    7854:	add	r7, pc, r7
    7858:	mov	r4, #0
    785c:	ldrb	r1, [r5, #1]!
    7860:	mov	r0, r7
    7864:	bl	2158 <printf@plt>
    7868:	ldr	r3, [r6, #72]	; 0x48
    786c:	add	r4, r4, #1
    7870:	sub	r3, r3, #6
    7874:	cmp	r3, r4
    7878:	bgt	785c <lell_print@@Base+0x238>
    787c:	mov	r0, #10
    7880:	bl	2434 <putchar@plt>
    7884:	ldr	r1, [r6, #72]	; 0x48
    7888:	add	r0, r6, #12
    788c:	sub	r1, r1, #6
    7890:	bl	6c20 <btbb_process_packet@@Base+0x654>
    7894:	b	76cc <lell_print@@Base+0xa8>
    7898:	ldr	r0, [pc, #676]	; 7b44 <lell_print@@Base+0x520>
    789c:	ldr	r3, [r6, #84]	; 0x54
    78a0:	mov	r1, r6
    78a4:	mov	r2, #6
    78a8:	add	r0, pc, r0
    78ac:	bl	6b9c <btbb_process_packet@@Base+0x5d0>
    78b0:	ldr	r0, [pc, #656]	; 7b48 <lell_print@@Base+0x524>
    78b4:	ldr	r3, [r6, #88]	; 0x58
    78b8:	mov	r2, #12
    78bc:	mov	r1, r6
    78c0:	add	r0, pc, r0
    78c4:	bl	6b9c <btbb_process_packet@@Base+0x5d0>
    78c8:	b	76cc <lell_print@@Base+0xa8>
    78cc:	ldr	r0, [pc, #632]	; 7b4c <lell_print@@Base+0x528>
    78d0:	ldr	r3, [r6, #84]	; 0x54
    78d4:	mov	r1, r6
    78d8:	mov	r2, #6
    78dc:	add	r0, pc, r0
    78e0:	bl	6b9c <btbb_process_packet@@Base+0x5d0>
    78e4:	ldr	r0, [pc, #612]	; 7b50 <lell_print@@Base+0x52c>
    78e8:	ldr	r3, [r6, #88]	; 0x58
    78ec:	mov	r2, #12
    78f0:	mov	r1, r6
    78f4:	add	r0, pc, r0
    78f8:	bl	6b9c <btbb_process_packet@@Base+0x5d0>
    78fc:	b	76cc <lell_print@@Base+0xa8>
    7900:	ldr	r0, [pc, #588]	; 7b54 <lell_print@@Base+0x530>
    7904:	ldr	r3, [r6, #84]	; 0x54
    7908:	mov	r2, #6
    790c:	mov	r1, r6
    7910:	add	r0, pc, r0
    7914:	bl	6b9c <btbb_process_packet@@Base+0x5d0>
    7918:	ldr	r0, [pc, #568]	; 7b58 <lell_print@@Base+0x534>
    791c:	ldr	r7, [pc, #568]	; 7b5c <lell_print@@Base+0x538>
    7920:	add	r0, pc, r0
    7924:	bl	2158 <printf@plt>
    7928:	ldr	r3, [r6, #72]	; 0x48
    792c:	add	r7, pc, r7
    7930:	cmp	r3, #6
    7934:	add	r5, r6, #11
    7938:	mov	r4, #0
    793c:	ble	787c <lell_print@@Base+0x258>
    7940:	ldrb	r1, [r5, #1]!
    7944:	mov	r0, r7
    7948:	bl	2158 <printf@plt>
    794c:	ldr	r3, [r6, #72]	; 0x48
    7950:	add	r4, r4, #1
    7954:	sub	r3, r3, #6
    7958:	cmp	r3, r4
    795c:	bgt	7940 <lell_print@@Base+0x31c>
    7960:	b	787c <lell_print@@Base+0x258>
    7964:	ldr	r0, [pc, #500]	; 7b60 <lell_print@@Base+0x53c>
    7968:	ldr	r3, [r6, #84]	; 0x54
    796c:	mov	r2, #6
    7970:	mov	r1, r6
    7974:	add	r0, pc, r0
    7978:	bl	6b9c <btbb_process_packet@@Base+0x5d0>
    797c:	ldr	r0, [pc, #480]	; 7b64 <lell_print@@Base+0x540>
    7980:	ldr	r3, [r6, #88]	; 0x58
    7984:	mov	r2, #12
    7988:	mov	r1, r6
    798c:	add	r0, pc, r0
    7990:	bl	6b9c <btbb_process_packet@@Base+0x5d0>
    7994:	ldr	r1, [pc, #460]	; 7b68 <lell_print@@Base+0x544>
    7998:	ldr	r0, [pc, #460]	; 7b6c <lell_print@@Base+0x548>
    799c:	ldr	r2, [r6, #18]
    79a0:	add	r1, pc, r1
    79a4:	add	r0, pc, r0
    79a8:	bl	2158 <printf@plt>
    79ac:	ldrb	r3, [r6, #23]
    79b0:	ldrb	r0, [r6, #24]
    79b4:	ldrb	r2, [r6, #22]
    79b8:	ldr	r1, [pc, #432]	; 7b70 <lell_print@@Base+0x54c>
    79bc:	lsl	r3, r3, #8
    79c0:	orr	r3, r3, r0, lsl #16
    79c4:	ldr	r0, [pc, #424]	; 7b74 <lell_print@@Base+0x550>
    79c8:	orr	r2, r3, r2
    79cc:	add	r1, pc, r1
    79d0:	add	r0, pc, r0
    79d4:	bl	2158 <printf@plt>
    79d8:	ldrb	r3, [r6, #25]
    79dc:	ldr	r1, [pc, #404]	; 7b78 <lell_print@@Base+0x554>
    79e0:	ldr	r0, [pc, #404]	; 7b7c <lell_print@@Base+0x558>
    79e4:	mov	r2, r3
    79e8:	add	r1, pc, r1
    79ec:	add	r0, pc, r0
    79f0:	bl	2158 <printf@plt>
    79f4:	ldrb	r2, [r6, #27]
    79f8:	ldrb	r3, [r6, #26]
    79fc:	ldr	r4, [pc, #380]	; 7b80 <lell_print@@Base+0x55c>
    7a00:	ldr	r1, [pc, #380]	; 7b84 <lell_print@@Base+0x560>
    7a04:	add	r4, pc, r4
    7a08:	orr	r3, r3, r2, lsl #8
    7a0c:	mov	r2, r3
    7a10:	add	r1, pc, r1
    7a14:	mov	r0, r4
    7a18:	bl	2158 <printf@plt>
    7a1c:	ldrb	r2, [r6, #29]
    7a20:	ldrb	r3, [r6, #28]
    7a24:	ldr	r1, [pc, #348]	; 7b88 <lell_print@@Base+0x564>
    7a28:	mov	r0, r4
    7a2c:	orr	r3, r3, r2, lsl #8
    7a30:	mov	r2, r3
    7a34:	add	r1, pc, r1
    7a38:	bl	2158 <printf@plt>
    7a3c:	ldrb	r2, [r6, #31]
    7a40:	ldrb	r3, [r6, #30]
    7a44:	ldr	r1, [pc, #320]	; 7b8c <lell_print@@Base+0x568>
    7a48:	mov	r0, r4
    7a4c:	orr	r3, r3, r2, lsl #8
    7a50:	mov	r2, r3
    7a54:	add	r1, pc, r1
    7a58:	bl	2158 <printf@plt>
    7a5c:	ldrb	r2, [r6, #33]	; 0x21
    7a60:	ldrb	r3, [r6, #32]
    7a64:	ldr	r1, [pc, #292]	; 7b90 <lell_print@@Base+0x56c>
    7a68:	mov	r0, r4
    7a6c:	orr	r3, r3, r2, lsl #8
    7a70:	add	r1, pc, r1
    7a74:	mov	r2, r3
    7a78:	bl	2158 <printf@plt>
    7a7c:	ldr	r0, [pc, #272]	; 7b94 <lell_print@@Base+0x570>
    7a80:	ldr	r7, [pc, #272]	; 7b98 <lell_print@@Base+0x574>
    7a84:	add	r0, pc, r0
    7a88:	bl	2158 <printf@plt>
    7a8c:	add	r7, pc, r7
    7a90:	add	r4, r6, #34	; 0x22
    7a94:	add	r5, r6, #39	; 0x27
    7a98:	ldrb	r1, [r4], #1
    7a9c:	mov	r0, r7
    7aa0:	bl	2158 <printf@plt>
    7aa4:	cmp	r5, r4
    7aa8:	bne	7a98 <lell_print@@Base+0x474>
    7aac:	mov	r0, #10
    7ab0:	bl	2434 <putchar@plt>
    7ab4:	ldrb	r1, [r6, #39]	; 0x27
    7ab8:	ldr	r0, [pc, #220]	; 7b9c <lell_print@@Base+0x578>
    7abc:	and	r1, r1, #31
    7ac0:	add	r0, pc, r0
    7ac4:	bl	2158 <printf@plt>
    7ac8:	ldrb	r2, [r6, #39]	; 0x27
    7acc:	ldr	r3, [pc, #204]	; 7ba0 <lell_print@@Base+0x57c>
    7ad0:	ldr	r0, [pc, #204]	; 7ba4 <lell_print@@Base+0x580>
    7ad4:	add	r3, pc, r3
    7ad8:	lsr	r2, r2, #5
    7adc:	mov	r1, r2
    7ae0:	add	r3, r3, r2, lsl #2
    7ae4:	add	r0, pc, r0
    7ae8:	ldr	r2, [r3, #160]	; 0xa0
    7aec:	bl	2158 <printf@plt>
    7af0:	b	76cc <lell_print@@Base+0xa8>
    7af4:	ldrdeq	fp, [r0], -ip
    7af8:	ldrdeq	fp, [r0], -r8
    7afc:	ldrdeq	fp, [r0], -r4
    7b00:	ldrdeq	r1, [r2], -r8
    7b04:	andeq	fp, r0, r0, ror #1
    7b08:	andeq	fp, r0, r0, ror #1
    7b0c:	andeq	fp, r0, r4, ror #1
    7b10:	andeq	fp, r0, r8, lsl r2
    7b14:	andeq	sl, r0, r4, lsl #28
    7b18:	ldrdeq	fp, [r0], -r4
    7b1c:			; <UNDEFINED> instruction: 0x0000adb4
    7b20:			; <UNDEFINED> instruction: 0x0000afb0
    7b24:			; <UNDEFINED> instruction: 0x0000afb0
    7b28:	andeq	fp, r0, r4, lsr r0
    7b2c:	andeq	sl, r0, r0, asr #31
    7b30:	andeq	fp, r0, r4, lsr r0
    7b34:	andeq	sl, r0, ip, lsr #31
    7b38:	ldrdeq	sl, [r0], -r8
    7b3c:	andeq	sl, r0, r8, asr #31
    7b40:	muleq	r0, r8, ip
    7b44:	andeq	sl, r0, r0, asr pc
    7b48:	andeq	sl, r0, r0, asr pc
    7b4c:	andeq	sl, r0, ip, lsr pc
    7b50:	andeq	sl, r0, r4, lsl #30
    7b54:	andeq	sl, r0, r8, ror #29
    7b58:	andeq	sl, r0, r0, lsl #30
    7b5c:	andeq	sl, r0, r0, asr #23
    7b60:	muleq	r0, ip, lr
    7b64:	andeq	sl, r0, ip, ror #28
    7b68:	muleq	r0, r4, lr
    7b6c:	muleq	r0, r8, lr
    7b70:	andeq	sl, r0, ip, ror lr
    7b74:	andeq	sl, r0, r4, lsl #29
    7b78:	andeq	sl, r0, r8, ror lr
    7b7c:	andeq	sl, r0, r0, lsl #29
    7b80:	andeq	sl, r0, r8, lsl #29
    7b84:	andeq	sl, r0, r0, ror lr
    7b88:	andeq	sl, r0, ip, ror #28
    7b8c:	andeq	sl, r0, r8, asr lr
    7b90:	andeq	sl, r0, r8, asr #28
    7b94:	andeq	sl, r0, r0, asr #28
    7b98:	andeq	sl, r0, r0, ror #20
    7b9c:	andeq	sl, r0, r0, lsl lr
    7ba0:	andeq	r1, r2, ip, ror r3
    7ba4:	strdeq	sl, [r0], -ip

00007ba8 <bt_compidtostr@@Base>:
    7ba8:	ldr	r3, [pc, #3704]	; 8a28 <bt_compidtostr@@Base+0xe80>
    7bac:	cmp	r0, r3
    7bb0:	beq	cc1c <bt_compidtostr@@Base+0x5074>
    7bb4:	bls	7c44 <bt_compidtostr@@Base+0x9c>
    7bb8:	ldr	r3, [pc, #3692]	; 8a2c <bt_compidtostr@@Base+0xe84>
    7bbc:	cmp	r0, r3
    7bc0:	beq	cff4 <bt_compidtostr@@Base+0x544c>
    7bc4:	bhi	7d30 <bt_compidtostr@@Base+0x188>
    7bc8:	sub	r3, r3, #130	; 0x82
    7bcc:	cmp	r0, r3
    7bd0:	beq	d42c <bt_compidtostr@@Base+0x5884>
    7bd4:	bls	7e7c <bt_compidtostr@@Base+0x2d4>
    7bd8:	ldr	r3, [pc, #3664]	; 8a30 <bt_compidtostr@@Base+0xe88>
    7bdc:	cmp	r0, r3
    7be0:	beq	ce80 <bt_compidtostr@@Base+0x52d8>
    7be4:	bhi	80bc <bt_compidtostr@@Base+0x514>
    7be8:	sub	r3, r3, #33	; 0x21
    7bec:	cmp	r0, r3
    7bf0:	beq	ce74 <bt_compidtostr@@Base+0x52cc>
    7bf4:	bls	85b8 <bt_compidtostr@@Base+0xa10>
    7bf8:	ldr	r3, [pc, #3636]	; 8a34 <bt_compidtostr@@Base+0xe8c>
    7bfc:	cmp	r0, r3
    7c00:	beq	c108 <bt_compidtostr@@Base+0x4560>
    7c04:	bhi	878c <bt_compidtostr@@Base+0xbe4>
    7c08:	sub	r3, r3, #8
    7c0c:	cmp	r0, r3
    7c10:	beq	cef8 <bt_compidtostr@@Base+0x5350>
    7c14:	bhi	92dc <bt_compidtostr@@Base+0x1734>
    7c18:	sub	r3, r3, #4
    7c1c:	cmp	r0, r3
    7c20:	beq	b9d0 <bt_compidtostr@@Base+0x3e28>
    7c24:	bhi	a358 <bt_compidtostr@@Base+0x27b0>
    7c28:	sub	r3, r3, #2
    7c2c:	cmp	r0, r3
    7c30:	beq	d6d8 <bt_compidtostr@@Base+0x5b30>
    7c34:	bls	d6cc <bt_compidtostr@@Base+0x5b24>
    7c38:	ldr	r0, [pc, #3576]	; 8a38 <bt_compidtostr@@Base+0xe90>
    7c3c:	add	r0, pc, r0
    7c40:	bx	lr
    7c44:	sub	r3, r3, #260	; 0x104
    7c48:	cmp	r0, r3
    7c4c:	beq	cc28 <bt_compidtostr@@Base+0x5080>
    7c50:	bhi	7cb4 <bt_compidtostr@@Base+0x10c>
    7c54:	cmp	r0, #129	; 0x81
    7c58:	beq	d438 <bt_compidtostr@@Base+0x5890>
    7c5c:	bls	7ee4 <bt_compidtostr@@Base+0x33c>
    7c60:	cmp	r0, #194	; 0xc2
    7c64:	beq	d5d0 <bt_compidtostr@@Base+0x5a28>
    7c68:	bhi	816c <bt_compidtostr@@Base+0x5c4>
    7c6c:	cmp	r0, #161	; 0xa1
    7c70:	beq	d5c4 <bt_compidtostr@@Base+0x5a1c>
    7c74:	bls	857c <bt_compidtostr@@Base+0x9d4>
    7c78:	cmp	r0, #177	; 0xb1
    7c7c:	beq	bc88 <bt_compidtostr@@Base+0x40e0>
    7c80:	bhi	87dc <bt_compidtostr@@Base+0xc34>
    7c84:	cmp	r0, #169	; 0xa9
    7c88:	beq	cfd0 <bt_compidtostr@@Base+0x5428>
    7c8c:	bhi	91f4 <bt_compidtostr@@Base+0x164c>
    7c90:	cmp	r0, #165	; 0xa5
    7c94:	beq	bb50 <bt_compidtostr@@Base+0x3fa8>
    7c98:	bhi	a6a0 <bt_compidtostr@@Base+0x2af8>
    7c9c:	cmp	r0, #163	; 0xa3
    7ca0:	beq	d6a8 <bt_compidtostr@@Base+0x5b00>
    7ca4:	bls	d69c <bt_compidtostr@@Base+0x5af4>
    7ca8:	ldr	r0, [pc, #3468]	; 8a3c <bt_compidtostr@@Base+0xe94>
    7cac:	add	r0, pc, r0
    7cb0:	bx	lr
    7cb4:	ldr	r3, [pc, #3460]	; 8a40 <bt_compidtostr@@Base+0xe98>
    7cb8:	cmp	r0, r3
    7cbc:	beq	cc34 <bt_compidtostr@@Base+0x508c>
    7cc0:	bls	7e14 <bt_compidtostr@@Base+0x26c>
    7cc4:	ldr	r3, [pc, #3448]	; 8a44 <bt_compidtostr@@Base+0xe9c>
    7cc8:	cmp	r0, r3
    7ccc:	beq	d468 <bt_compidtostr@@Base+0x58c0>
    7cd0:	bhi	8114 <bt_compidtostr@@Base+0x56c>
    7cd4:	sub	r3, r3, #33	; 0x21
    7cd8:	cmp	r0, r3
    7cdc:	beq	d45c <bt_compidtostr@@Base+0x58b4>
    7ce0:	bls	84e4 <bt_compidtostr@@Base+0x93c>
    7ce4:	ldr	r3, [pc, #3420]	; 8a48 <bt_compidtostr@@Base+0xea0>
    7ce8:	cmp	r0, r3
    7cec:	beq	bbc8 <bt_compidtostr@@Base+0x4020>
    7cf0:	bhi	873c <bt_compidtostr@@Base+0xb94>
    7cf4:	sub	r3, r3, #8
    7cf8:	cmp	r0, r3
    7cfc:	beq	ceec <bt_compidtostr@@Base+0x5344>
    7d00:	bhi	92b0 <bt_compidtostr@@Base+0x1708>
    7d04:	sub	r3, r3, #4
    7d08:	cmp	r0, r3
    7d0c:	beq	b850 <bt_compidtostr@@Base+0x3ca8>
    7d10:	bhi	a000 <bt_compidtostr@@Base+0x2458>
    7d14:	sub	r3, r3, #2
    7d18:	cmp	r0, r3
    7d1c:	beq	d678 <bt_compidtostr@@Base+0x5ad0>
    7d20:	bls	d66c <bt_compidtostr@@Base+0x5ac4>
    7d24:	ldr	r0, [pc, #3360]	; 8a4c <bt_compidtostr@@Base+0xea4>
    7d28:	add	r0, pc, r0
    7d2c:	bx	lr
    7d30:	ldr	r3, [pc, #3352]	; 8a50 <bt_compidtostr@@Base+0xea8>
    7d34:	cmp	r0, r3
    7d38:	beq	cc40 <bt_compidtostr@@Base+0x5098>
    7d3c:	bls	7dac <bt_compidtostr@@Base+0x204>
    7d40:	ldr	r3, [pc, #3340]	; 8a54 <bt_compidtostr@@Base+0xeac>
    7d44:	cmp	r0, r3
    7d48:	beq	cb68 <bt_compidtostr@@Base+0x4fc0>
    7d4c:	bhi	8018 <bt_compidtostr@@Base+0x470>
    7d50:	sub	r3, r3, #33	; 0x21
    7d54:	cmp	r0, r3
    7d58:	beq	cb5c <bt_compidtostr@@Base+0x4fb4>
    7d5c:	bls	8380 <bt_compidtostr@@Base+0x7d8>
    7d60:	ldr	r3, [pc, #3312]	; 8a58 <bt_compidtostr@@Base+0xeb0>
    7d64:	cmp	r0, r3
    7d68:	beq	cea4 <bt_compidtostr@@Base+0x52fc>
    7d6c:	bhi	8644 <bt_compidtostr@@Base+0xa9c>
    7d70:	sub	r3, r3, #8
    7d74:	cmp	r0, r3
    7d78:	beq	ce8c <bt_compidtostr@@Base+0x52e4>
    7d7c:	bhi	93fc <bt_compidtostr@@Base+0x1854>
    7d80:	sub	r3, r3, #4
    7d84:	cmp	r0, r3
    7d88:	beq	b970 <bt_compidtostr@@Base+0x3dc8>
    7d8c:	bhi	a288 <bt_compidtostr@@Base+0x26e0>
    7d90:	sub	r3, r3, #2
    7d94:	cmp	r0, r3
    7d98:	beq	d558 <bt_compidtostr@@Base+0x59b0>
    7d9c:	bls	d54c <bt_compidtostr@@Base+0x59a4>
    7da0:	ldr	r0, [pc, #3252]	; 8a5c <bt_compidtostr@@Base+0xeb4>
    7da4:	add	r0, pc, r0
    7da8:	bx	lr
    7dac:	cmp	r0, #844	; 0x34c
    7db0:	beq	cb50 <bt_compidtostr@@Base+0x4fa8>
    7db4:	bhi	7f38 <bt_compidtostr@@Base+0x390>
    7db8:	sub	r3, r3, #98	; 0x62
    7dbc:	cmp	r0, r3
    7dc0:	beq	cb44 <bt_compidtostr@@Base+0x4f9c>
    7dc4:	bls	845c <bt_compidtostr@@Base+0x8b4>
    7dc8:	ldr	r3, [pc, #3216]	; 8a60 <bt_compidtostr@@Base+0xeb8>
    7dcc:	cmp	r0, r3
    7dd0:	beq	be08 <bt_compidtostr@@Base+0x4260>
    7dd4:	bhi	8694 <bt_compidtostr@@Base+0xaec>
    7dd8:	sub	r3, r3, #8
    7ddc:	cmp	r0, r3
    7de0:	beq	cfc4 <bt_compidtostr@@Base+0x541c>
    7de4:	bhi	91c8 <bt_compidtostr@@Base+0x1620>
    7de8:	sub	r3, r3, #4
    7dec:	cmp	r0, r3
    7df0:	beq	b910 <bt_compidtostr@@Base+0x3d68>
    7df4:	bhi	a1a8 <bt_compidtostr@@Base+0x2600>
    7df8:	sub	r3, r3, #2
    7dfc:	cmp	r0, r3
    7e00:	beq	d5e8 <bt_compidtostr@@Base+0x5a40>
    7e04:	bls	d5dc <bt_compidtostr@@Base+0x5a34>
    7e08:	ldr	r0, [pc, #3156]	; 8a64 <bt_compidtostr@@Base+0xebc>
    7e0c:	add	r0, pc, r0
    7e10:	bx	lr
    7e14:	cmp	r0, #324	; 0x144
    7e18:	beq	d480 <bt_compidtostr@@Base+0x58d8>
    7e1c:	bhi	7fcc <bt_compidtostr@@Base+0x424>
    7e20:	sub	r3, r3, #98	; 0x62
    7e24:	cmp	r0, r3
    7e28:	beq	d474 <bt_compidtostr@@Base+0x58cc>
    7e2c:	bls	8334 <bt_compidtostr@@Base+0x78c>
    7e30:	ldr	r3, [pc, #3120]	; 8a68 <bt_compidtostr@@Base+0xec0>
    7e34:	cmp	r0, r3
    7e38:	beq	bc28 <bt_compidtostr@@Base+0x4080>
    7e3c:	bhi	881c <bt_compidtostr@@Base+0xc74>
    7e40:	sub	r3, r3, #8
    7e44:	cmp	r0, r3
    7e48:	beq	cfdc <bt_compidtostr@@Base+0x5434>
    7e4c:	bhi	9218 <bt_compidtostr@@Base+0x1670>
    7e50:	sub	r3, r3, #4
    7e54:	cmp	r0, r3
    7e58:	beq	b880 <bt_compidtostr@@Base+0x3cd8>
    7e5c:	bhi	a06c <bt_compidtostr@@Base+0x24c4>
    7e60:	sub	r3, r3, #2
    7e64:	cmp	r0, r3
    7e68:	beq	d8b8 <bt_compidtostr@@Base+0x5d10>
    7e6c:	bls	d8ac <bt_compidtostr@@Base+0x5d04>
    7e70:	ldr	r0, [pc, #3060]	; 8a6c <bt_compidtostr@@Base+0xec4>
    7e74:	add	r0, pc, r0
    7e78:	bx	lr
    7e7c:	cmp	r0, #584	; 0x248
    7e80:	beq	d450 <bt_compidtostr@@Base+0x58a8>
    7e84:	bhi	8070 <bt_compidtostr@@Base+0x4c8>
    7e88:	sub	r3, r3, #98	; 0x62
    7e8c:	cmp	r0, r3
    7e90:	beq	d444 <bt_compidtostr@@Base+0x589c>
    7e94:	bls	8530 <bt_compidtostr@@Base+0x988>
    7e98:	ldr	r3, [pc, #3024]	; 8a70 <bt_compidtostr@@Base+0xec8>
    7e9c:	cmp	r0, r3
    7ea0:	beq	c048 <bt_compidtostr@@Base+0x44a0>
    7ea4:	bhi	86e8 <bt_compidtostr@@Base+0xb40>
    7ea8:	sub	r3, r3, #8
    7eac:	cmp	r0, r3
    7eb0:	beq	ce2c <bt_compidtostr@@Base+0x5284>
    7eb4:	bhi	93a8 <bt_compidtostr@@Base+0x1800>
    7eb8:	sub	r3, r3, #4
    7ebc:	cmp	r0, r3
    7ec0:	beq	b9b8 <bt_compidtostr@@Base+0x3e10>
    7ec4:	bhi	a324 <bt_compidtostr@@Base+0x277c>
    7ec8:	sub	r3, r3, #2
    7ecc:	cmp	r0, r3
    7ed0:	beq	d0d8 <bt_compidtostr@@Base+0x5530>
    7ed4:	bls	d0cc <bt_compidtostr@@Base+0x5524>
    7ed8:	ldr	r0, [pc, #2964]	; 8a74 <bt_compidtostr@@Base+0xecc>
    7edc:	add	r0, pc, r0
    7ee0:	bx	lr
    7ee4:	cmp	r0, #64	; 0x40
    7ee8:	beq	d5b8 <bt_compidtostr@@Base+0x5a10>
    7eec:	bhi	7f84 <bt_compidtostr@@Base+0x3dc>
    7ef0:	cmp	r0, #31
    7ef4:	beq	d5ac <bt_compidtostr@@Base+0x5a04>
    7ef8:	bls	81f4 <bt_compidtostr@@Base+0x64c>
    7efc:	cmp	r0, #47	; 0x2f
    7f00:	beq	d000 <bt_compidtostr@@Base+0x5458>
    7f04:	bhi	8604 <bt_compidtostr@@Base+0xa5c>
    7f08:	cmp	r0, #39	; 0x27
    7f0c:	beq	cfe8 <bt_compidtostr@@Base+0x5440>
    7f10:	bhi	9244 <bt_compidtostr@@Base+0x169c>
    7f14:	cmp	r0, #35	; 0x23
    7f18:	beq	b8b0 <bt_compidtostr@@Base+0x3d08>
    7f1c:	bhi	a0dc <bt_compidtostr@@Base+0x2534>
    7f20:	cmp	r0, #33	; 0x21
    7f24:	beq	d4f8 <bt_compidtostr@@Base+0x5950>
    7f28:	bls	d4ec <bt_compidtostr@@Base+0x5944>
    7f2c:	ldr	r0, [pc, #2884]	; 8a78 <bt_compidtostr@@Base+0xed0>
    7f30:	add	r0, pc, r0
    7f34:	bx	lr
    7f38:	cmp	r0, #876	; 0x36c
    7f3c:	beq	cbec <bt_compidtostr@@Base+0x5044>
    7f40:	bls	81b4 <bt_compidtostr@@Base+0x60c>
    7f44:	cmp	r0, #892	; 0x37c
    7f48:	beq	c9ac <bt_compidtostr@@Base+0x4e04>
    7f4c:	bhi	8870 <bt_compidtostr@@Base+0xcc8>
    7f50:	cmp	r0, #884	; 0x374
    7f54:	beq	cf1c <bt_compidtostr@@Base+0x5374>
    7f58:	bhi	9308 <bt_compidtostr@@Base+0x1760>
    7f5c:	cmp	r0, #880	; 0x370
    7f60:	beq	b898 <bt_compidtostr@@Base+0x3cf0>
    7f64:	bhi	a0a4 <bt_compidtostr@@Base+0x24fc>
    7f68:	ldr	r3, [pc, #2828]	; 8a7c <bt_compidtostr@@Base+0xed4>
    7f6c:	cmp	r0, r3
    7f70:	beq	ce50 <bt_compidtostr@@Base+0x52a8>
    7f74:	bls	ce44 <bt_compidtostr@@Base+0x529c>
    7f78:	ldr	r0, [pc, #2816]	; 8a80 <bt_compidtostr@@Base+0xed8>
    7f7c:	add	r0, pc, r0
    7f80:	bx	lr
    7f84:	cmp	r0, #96	; 0x60
    7f88:	beq	cbf8 <bt_compidtostr@@Base+0x5050>
    7f8c:	bls	8270 <bt_compidtostr@@Base+0x6c8>
    7f90:	cmp	r0, #112	; 0x70
    7f94:	beq	c8ec <bt_compidtostr@@Base+0x4d44>
    7f98:	bhi	89a0 <bt_compidtostr@@Base+0xdf8>
    7f9c:	cmp	r0, #104	; 0x68
    7fa0:	beq	cf04 <bt_compidtostr@@Base+0x535c>
    7fa4:	bhi	9268 <bt_compidtostr@@Base+0x16c0>
    7fa8:	cmp	r0, #100	; 0x64
    7fac:	beq	b820 <bt_compidtostr@@Base+0x3c78>
    7fb0:	bhi	9f9c <bt_compidtostr@@Base+0x23f4>
    7fb4:	cmp	r0, #98	; 0x62
    7fb8:	beq	d738 <bt_compidtostr@@Base+0x5b90>
    7fbc:	bls	d72c <bt_compidtostr@@Base+0x5b84>
    7fc0:	ldr	r0, [pc, #2748]	; 8a84 <bt_compidtostr@@Base+0xedc>
    7fc4:	add	r0, pc, r0
    7fc8:	bx	lr
    7fcc:	cmp	r0, #356	; 0x164
    7fd0:	beq	cc04 <bt_compidtostr@@Base+0x505c>
    7fd4:	bls	8230 <bt_compidtostr@@Base+0x688>
    7fd8:	cmp	r0, #372	; 0x174
    7fdc:	beq	bda8 <bt_compidtostr@@Base+0x4200>
    7fe0:	bhi	8e14 <bt_compidtostr@@Base+0x126c>
    7fe4:	cmp	r0, #364	; 0x16c
    7fe8:	beq	cf58 <bt_compidtostr@@Base+0x53b0>
    7fec:	bhi	9380 <bt_compidtostr@@Base+0x17d8>
    7ff0:	cmp	r0, #360	; 0x168
    7ff4:	beq	b8e0 <bt_compidtostr@@Base+0x3d38>
    7ff8:	bhi	a140 <bt_compidtostr@@Base+0x2598>
    7ffc:	ldr	r3, [pc, #2692]	; 8a88 <bt_compidtostr@@Base+0xee0>
    8000:	cmp	r0, r3
    8004:	beq	d7f8 <bt_compidtostr@@Base+0x5c50>
    8008:	bls	d7ec <bt_compidtostr@@Base+0x5c44>
    800c:	ldr	r0, [pc, #2680]	; 8a8c <bt_compidtostr@@Base+0xee4>
    8010:	add	r0, pc, r0
    8014:	bx	lr
    8018:	ldr	r3, [pc, #2672]	; 8a90 <bt_compidtostr@@Base+0xee8>
    801c:	cmp	r0, r3
    8020:	beq	cb74 <bt_compidtostr@@Base+0x4fcc>
    8024:	bls	82ac <bt_compidtostr@@Base+0x704>
    8028:	ldr	r3, [pc, #2660]	; 8a94 <bt_compidtostr@@Base+0xeec>
    802c:	cmp	r0, r3
    8030:	beq	c88c <bt_compidtostr@@Base+0x4ce4>
    8034:	bhi	8dc0 <bt_compidtostr@@Base+0x1218>
    8038:	sub	r3, r3, #8
    803c:	cmp	r0, r3
    8040:	beq	cf4c <bt_compidtostr@@Base+0x53a4>
    8044:	bhi	9358 <bt_compidtostr@@Base+0x17b0>
    8048:	sub	r3, r3, #4
    804c:	cmp	r0, r3
    8050:	beq	bb20 <bt_compidtostr@@Base+0x3f78>
    8054:	bhi	a63c <bt_compidtostr@@Base+0x2a94>
    8058:	cmp	r0, #1008	; 0x3f0
    805c:	beq	d768 <bt_compidtostr@@Base+0x5bc0>
    8060:	bls	d75c <bt_compidtostr@@Base+0x5bb4>
    8064:	ldr	r0, [pc, #2604]	; 8a98 <bt_compidtostr@@Base+0xef0>
    8068:	add	r0, pc, r0
    806c:	bx	lr
    8070:	cmp	r0, #616	; 0x268
    8074:	beq	cc10 <bt_compidtostr@@Base+0x5068>
    8078:	bls	82f4 <bt_compidtostr@@Base+0x74c>
    807c:	cmp	r0, #632	; 0x278
    8080:	beq	c82c <bt_compidtostr@@Base+0x4c84>
    8084:	bhi	8908 <bt_compidtostr@@Base+0xd60>
    8088:	cmp	r0, #624	; 0x270
    808c:	beq	b2d4 <bt_compidtostr@@Base+0x372c>
    8090:	bhi	9474 <bt_compidtostr@@Base+0x18cc>
    8094:	cmp	r0, #620	; 0x26c
    8098:	beq	b940 <bt_compidtostr@@Base+0x3d98>
    809c:	bhi	a218 <bt_compidtostr@@Base+0x2670>
    80a0:	ldr	r3, [pc, #2548]	; 8a9c <bt_compidtostr@@Base+0xef4>
    80a4:	cmp	r0, r3
    80a8:	beq	d978 <bt_compidtostr@@Base+0x5dd0>
    80ac:	bls	d96c <bt_compidtostr@@Base+0x5dc4>
    80b0:	ldr	r0, [pc, #2536]	; 8aa0 <bt_compidtostr@@Base+0xef8>
    80b4:	add	r0, pc, r0
    80b8:	bx	lr
    80bc:	ldr	r3, [pc, #2528]	; 8aa4 <bt_compidtostr@@Base+0xefc>
    80c0:	cmp	r0, r3
    80c4:	beq	cb80 <bt_compidtostr@@Base+0x4fd8>
    80c8:	bls	8414 <bt_compidtostr@@Base+0x86c>
    80cc:	ldr	r3, [pc, #2516]	; 8aa8 <bt_compidtostr@@Base+0xf00>
    80d0:	cmp	r0, r3
    80d4:	beq	bd48 <bt_compidtostr@@Base+0x41a0>
    80d8:	bhi	8950 <bt_compidtostr@@Base+0xda8>
    80dc:	sub	r3, r3, #8
    80e0:	cmp	r0, r3
    80e4:	beq	b2f8 <bt_compidtostr@@Base+0x3750>
    80e8:	bhi	949c <bt_compidtostr@@Base+0x18f4>
    80ec:	sub	r3, r3, #4
    80f0:	cmp	r0, r3
    80f4:	beq	bac0 <bt_compidtostr@@Base+0x3f18>
    80f8:	bhi	a574 <bt_compidtostr@@Base+0x29cc>
    80fc:	cmp	r0, #748	; 0x2ec
    8100:	beq	d9d8 <bt_compidtostr@@Base+0x5e30>
    8104:	bls	d9cc <bt_compidtostr@@Base+0x5e24>
    8108:	ldr	r0, [pc, #2460]	; 8aac <bt_compidtostr@@Base+0xf04>
    810c:	add	r0, pc, r0
    8110:	bx	lr
    8114:	ldr	r3, [pc, #2452]	; 8ab0 <bt_compidtostr@@Base+0xf08>
    8118:	cmp	r0, r3
    811c:	beq	cb2c <bt_compidtostr@@Base+0x4f84>
    8120:	bls	83cc <bt_compidtostr@@Base+0x824>
    8124:	ldr	r3, [pc, #2440]	; 8ab4 <bt_compidtostr@@Base+0xf0c>
    8128:	cmp	r0, r3
    812c:	beq	bf88 <bt_compidtostr@@Base+0x43e0>
    8130:	bhi	88b8 <bt_compidtostr@@Base+0xd10>
    8134:	sub	r3, r3, #8
    8138:	cmp	r0, r3
    813c:	beq	ce38 <bt_compidtostr@@Base+0x5290>
    8140:	bhi	93d4 <bt_compidtostr@@Base+0x182c>
    8144:	sub	r3, r3, #4
    8148:	cmp	r0, r3
    814c:	beq	ba00 <bt_compidtostr@@Base+0x3e58>
    8150:	bhi	a3c8 <bt_compidtostr@@Base+0x2820>
    8154:	cmp	r0, #488	; 0x1e8
    8158:	beq	d918 <bt_compidtostr@@Base+0x5d70>
    815c:	bls	d90c <bt_compidtostr@@Base+0x5d64>
    8160:	ldr	r0, [pc, #2384]	; 8ab8 <bt_compidtostr@@Base+0xf10>
    8164:	add	r0, pc, r0
    8168:	bx	lr
    816c:	cmp	r0, #226	; 0xe2
    8170:	beq	cb38 <bt_compidtostr@@Base+0x4f90>
    8174:	bls	84a8 <bt_compidtostr@@Base+0x900>
    8178:	cmp	r0, #242	; 0xf2
    817c:	beq	bf28 <bt_compidtostr@@Base+0x4380>
    8180:	bhi	89e0 <bt_compidtostr@@Base+0xe38>
    8184:	cmp	r0, #234	; 0xea
    8188:	beq	cf10 <bt_compidtostr@@Base+0x5368>
    818c:	bhi	928c <bt_compidtostr@@Base+0x16e4>
    8190:	cmp	r0, #230	; 0xe6
    8194:	beq	b9a0 <bt_compidtostr@@Base+0x3df8>
    8198:	bhi	a2f4 <bt_compidtostr@@Base+0x274c>
    819c:	cmp	r0, #228	; 0xe4
    81a0:	beq	d798 <bt_compidtostr@@Base+0x5bf0>
    81a4:	bls	d78c <bt_compidtostr@@Base+0x5be4>
    81a8:	ldr	r0, [pc, #2316]	; 8abc <bt_compidtostr@@Base+0xf14>
    81ac:	add	r0, pc, r0
    81b0:	bx	lr
    81b4:	cmp	r0, #860	; 0x35c
    81b8:	beq	d2b8 <bt_compidtostr@@Base+0x5710>
    81bc:	bhi	8ef4 <bt_compidtostr@@Base+0x134c>
    81c0:	cmp	r0, #852	; 0x354
    81c4:	beq	b4d8 <bt_compidtostr@@Base+0x3930>
    81c8:	bhi	96e0 <bt_compidtostr@@Base+0x1b38>
    81cc:	cmp	r0, #848	; 0x350
    81d0:	beq	b988 <bt_compidtostr@@Base+0x3de0>
    81d4:	bhi	a2c0 <bt_compidtostr@@Base+0x2718>
    81d8:	ldr	r3, [pc, #2272]	; 8ac0 <bt_compidtostr@@Base+0xf18>
    81dc:	cmp	r0, r3
    81e0:	beq	d3d8 <bt_compidtostr@@Base+0x5830>
    81e4:	bls	d3cc <bt_compidtostr@@Base+0x5824>
    81e8:	ldr	r0, [pc, #2260]	; 8ac4 <bt_compidtostr@@Base+0xf1c>
    81ec:	add	r0, pc, r0
    81f0:	bx	lr
    81f4:	cmp	r0, #15
    81f8:	beq	d210 <bt_compidtostr@@Base+0x5668>
    81fc:	bhi	912c <bt_compidtostr@@Base+0x1584>
    8200:	cmp	r0, #7
    8204:	beq	b0b8 <bt_compidtostr@@Base+0x3510>
    8208:	bhi	9964 <bt_compidtostr@@Base+0x1dbc>
    820c:	cmp	r0, #3
    8210:	beq	baa8 <bt_compidtostr@@Base+0x3f00>
    8214:	bhi	a540 <bt_compidtostr@@Base+0x2998>
    8218:	cmp	r0, #1
    821c:	beq	d228 <bt_compidtostr@@Base+0x5680>
    8220:	bls	d21c <bt_compidtostr@@Base+0x5674>
    8224:	ldr	r0, [pc, #2204]	; 8ac8 <bt_compidtostr@@Base+0xf20>
    8228:	add	r0, pc, r0
    822c:	bx	lr
    8230:	cmp	r0, #340	; 0x154
    8234:	beq	d1f8 <bt_compidtostr@@Base+0x5650>
    8238:	bhi	90bc <bt_compidtostr@@Base+0x1514>
    823c:	cmp	r0, #332	; 0x14c
    8240:	beq	b028 <bt_compidtostr@@Base+0x3480>
    8244:	bhi	9820 <bt_compidtostr@@Base+0x1c78>
    8248:	cmp	r0, #328	; 0x148
    824c:	beq	b928 <bt_compidtostr@@Base+0x3d80>
    8250:	bhi	a1e0 <bt_compidtostr@@Base+0x2638>
    8254:	ldr	r3, [pc, #2160]	; 8acc <bt_compidtostr@@Base+0xf24>
    8258:	cmp	r0, r3
    825c:	beq	d258 <bt_compidtostr@@Base+0x56b0>
    8260:	bls	d24c <bt_compidtostr@@Base+0x56a4>
    8264:	ldr	r0, [pc, #2148]	; 8ad0 <bt_compidtostr@@Base+0xf28>
    8268:	add	r0, pc, r0
    826c:	bx	lr
    8270:	cmp	r0, #80	; 0x50
    8274:	beq	d138 <bt_compidtostr@@Base+0x5590>
    8278:	bhi	8fd8 <bt_compidtostr@@Base+0x1430>
    827c:	cmp	r0, #72	; 0x48
    8280:	beq	b0e8 <bt_compidtostr@@Base+0x3540>
    8284:	bhi	98c0 <bt_compidtostr@@Base+0x1d18>
    8288:	cmp	r0, #68	; 0x44
    828c:	beq	af68 <bt_compidtostr@@Base+0x33c0>
    8290:	bhi	ad98 <bt_compidtostr@@Base+0x31f0>
    8294:	cmp	r0, #66	; 0x42
    8298:	beq	d348 <bt_compidtostr@@Base+0x57a0>
    829c:	bls	d33c <bt_compidtostr@@Base+0x5794>
    82a0:	ldr	r0, [pc, #2092]	; 8ad4 <bt_compidtostr@@Base+0xf2c>
    82a4:	add	r0, pc, r0
    82a8:	bx	lr
    82ac:	sub	r3, r3, #16
    82b0:	cmp	r0, r3
    82b4:	beq	ceb0 <bt_compidtostr@@Base+0x5308>
    82b8:	bhi	8e8c <bt_compidtostr@@Base+0x12e4>
    82bc:	sub	r3, r3, #8
    82c0:	cmp	r0, r3
    82c4:	beq	b418 <bt_compidtostr@@Base+0x3870>
    82c8:	bhi	95e4 <bt_compidtostr@@Base+0x1a3c>
    82cc:	sub	r3, r3, #4
    82d0:	cmp	r0, r3
    82d4:	beq	ba60 <bt_compidtostr@@Base+0x3eb8>
    82d8:	bhi	a4a0 <bt_compidtostr@@Base+0x28f8>
    82dc:	cmp	r0, #976	; 0x3d0
    82e0:	beq	d858 <bt_compidtostr@@Base+0x5cb0>
    82e4:	bls	d84c <bt_compidtostr@@Base+0x5ca4>
    82e8:	ldr	r0, [pc, #2024]	; 8ad8 <bt_compidtostr@@Base+0xf30>
    82ec:	add	r0, pc, r0
    82f0:	bx	lr
    82f4:	cmp	r0, #600	; 0x258
    82f8:	beq	cfac <bt_compidtostr@@Base+0x5404>
    82fc:	bhi	915c <bt_compidtostr@@Base+0x15b4>
    8300:	cmp	r0, #592	; 0x250
    8304:	beq	aff8 <bt_compidtostr@@Base+0x3450>
    8308:	bhi	986c <bt_compidtostr@@Base+0x1cc4>
    830c:	cmp	r0, #588	; 0x24c
    8310:	beq	b838 <bt_compidtostr@@Base+0x3c90>
    8314:	bhi	9fcc <bt_compidtostr@@Base+0x2424>
    8318:	ldr	r3, [pc, #1980]	; 8adc <bt_compidtostr@@Base+0xf34>
    831c:	cmp	r0, r3
    8320:	beq	d078 <bt_compidtostr@@Base+0x54d0>
    8324:	bls	d06c <bt_compidtostr@@Base+0x54c4>
    8328:	ldr	r0, [pc, #1968]	; 8ae0 <bt_compidtostr@@Base+0xf38>
    832c:	add	r0, pc, r0
    8330:	bx	lr
    8334:	sub	r3, r3, #16
    8338:	cmp	r0, r3
    833c:	beq	d150 <bt_compidtostr@@Base+0x55a8>
    8340:	bhi	9044 <bt_compidtostr@@Base+0x149c>
    8344:	sub	r3, r3, #8
    8348:	cmp	r0, r3
    834c:	beq	b538 <bt_compidtostr@@Base+0x3990>
    8350:	bhi	9734 <bt_compidtostr@@Base+0x1b8c>
    8354:	sub	r3, r3, #4
    8358:	cmp	r0, r3
    835c:	beq	b868 <bt_compidtostr@@Base+0x3cc0>
    8360:	bhi	a034 <bt_compidtostr@@Base+0x248c>
    8364:	sub	r3, r3, #2
    8368:	cmp	r0, r3
    836c:	beq	d168 <bt_compidtostr@@Base+0x55c0>
    8370:	bls	d15c <bt_compidtostr@@Base+0x55b4>
    8374:	ldr	r0, [pc, #1896]	; 8ae4 <bt_compidtostr@@Base+0xf3c>
    8378:	add	r0, pc, r0
    837c:	bx	lr
    8380:	sub	r3, r3, #16
    8384:	cmp	r0, r3
    8388:	beq	d12c <bt_compidtostr@@Base+0x5584>
    838c:	bhi	8f9c <bt_compidtostr@@Base+0x13f4>
    8390:	sub	r3, r3, #8
    8394:	cmp	r0, r3
    8398:	beq	b0f4 <bt_compidtostr@@Base+0x354c>
    839c:	bhi	98e4 <bt_compidtostr@@Base+0x1d3c>
    83a0:	sub	r3, r3, #4
    83a4:	cmp	r0, r3
    83a8:	beq	ba48 <bt_compidtostr@@Base+0x3ea0>
    83ac:	bhi	a468 <bt_compidtostr@@Base+0x28c0>
    83b0:	sub	r3, r3, #2
    83b4:	cmp	r0, r3
    83b8:	beq	d318 <bt_compidtostr@@Base+0x5770>
    83bc:	bls	d30c <bt_compidtostr@@Base+0x5764>
    83c0:	ldr	r0, [pc, #1824]	; 8ae8 <bt_compidtostr@@Base+0xf40>
    83c4:	add	r0, pc, r0
    83c8:	bx	lr
    83cc:	sub	r3, r3, #16
    83d0:	cmp	r0, r3
    83d4:	beq	cfb8 <bt_compidtostr@@Base+0x5410>
    83d8:	bhi	9190 <bt_compidtostr@@Base+0x15e8>
    83dc:	sub	r3, r3, #8
    83e0:	cmp	r0, r3
    83e4:	beq	b178 <bt_compidtostr@@Base+0x35d0>
    83e8:	bhi	99b4 <bt_compidtostr@@Base+0x1e0c>
    83ec:	sub	r3, r3, #4
    83f0:	cmp	r0, r3
    83f4:	beq	bb38 <bt_compidtostr@@Base+0x3f90>
    83f8:	bhi	a670 <bt_compidtostr@@Base+0x2ac8>
    83fc:	cmp	r0, #456	; 0x1c8
    8400:	beq	d0a8 <bt_compidtostr@@Base+0x5500>
    8404:	bls	d09c <bt_compidtostr@@Base+0x54f4>
    8408:	ldr	r0, [pc, #1756]	; 8aec <bt_compidtostr@@Base+0xf44>
    840c:	add	r0, pc, r0
    8410:	bx	lr
    8414:	sub	r3, r3, #16
    8418:	cmp	r0, r3
    841c:	beq	d2d0 <bt_compidtostr@@Base+0x5728>
    8420:	bhi	8f64 <bt_compidtostr@@Base+0x13bc>
    8424:	sub	r3, r3, #8
    8428:	cmp	r0, r3
    842c:	beq	b388 <bt_compidtostr@@Base+0x37e0>
    8430:	bhi	953c <bt_compidtostr@@Base+0x1994>
    8434:	sub	r3, r3, #4
    8438:	cmp	r0, r3
    843c:	beq	b8c8 <bt_compidtostr@@Base+0x3d20>
    8440:	bhi	a10c <bt_compidtostr@@Base+0x2564>
    8444:	cmp	r0, #716	; 0x2cc
    8448:	beq	d2e8 <bt_compidtostr@@Base+0x5740>
    844c:	bls	d2dc <bt_compidtostr@@Base+0x5734>
    8450:	ldr	r0, [pc, #1688]	; 8af0 <bt_compidtostr@@Base+0xf48>
    8454:	add	r0, pc, r0
    8458:	bx	lr
    845c:	sub	r3, r3, #16
    8460:	cmp	r0, r3
    8464:	beq	d144 <bt_compidtostr@@Base+0x559c>
    8468:	bhi	9008 <bt_compidtostr@@Base+0x1460>
    846c:	sub	r3, r3, #8
    8470:	cmp	r0, r3
    8474:	beq	b094 <bt_compidtostr@@Base+0x34ec>
    8478:	bhi	9938 <bt_compidtostr@@Base+0x1d90>
    847c:	sub	r3, r3, #4
    8480:	cmp	r0, r3
    8484:	beq	b9e8 <bt_compidtostr@@Base+0x3e40>
    8488:	bhi	a390 <bt_compidtostr@@Base+0x27e8>
    848c:	sub	r3, r3, #2
    8490:	cmp	r0, r3
    8494:	beq	d198 <bt_compidtostr@@Base+0x55f0>
    8498:	bls	d18c <bt_compidtostr@@Base+0x55e4>
    849c:	ldr	r0, [pc, #1616]	; 8af4 <bt_compidtostr@@Base+0xf4c>
    84a0:	add	r0, pc, r0
    84a4:	bx	lr
    84a8:	cmp	r0, #210	; 0xd2
    84ac:	beq	d2ac <bt_compidtostr@@Base+0x5704>
    84b0:	bhi	8ec4 <bt_compidtostr@@Base+0x131c>
    84b4:	cmp	r0, #202	; 0xca
    84b8:	beq	b034 <bt_compidtostr@@Base+0x348c>
    84bc:	bhi	9848 <bt_compidtostr@@Base+0x1ca0>
    84c0:	cmp	r0, #198	; 0xc6
    84c4:	beq	bb08 <bt_compidtostr@@Base+0x3f60>
    84c8:	bhi	a608 <bt_compidtostr@@Base+0x2a60>
    84cc:	cmp	r0, #196	; 0xc4
    84d0:	beq	d3a8 <bt_compidtostr@@Base+0x5800>
    84d4:	bls	d39c <bt_compidtostr@@Base+0x57f4>
    84d8:	ldr	r0, [pc, #1560]	; 8af8 <bt_compidtostr@@Base+0xf50>
    84dc:	add	r0, pc, r0
    84e0:	bx	lr
    84e4:	sub	r3, r3, #16
    84e8:	cmp	r0, r3
    84ec:	beq	d204 <bt_compidtostr@@Base+0x565c>
    84f0:	bhi	90f0 <bt_compidtostr@@Base+0x1548>
    84f4:	sub	r3, r3, #8
    84f8:	cmp	r0, r3
    84fc:	beq	b4a8 <bt_compidtostr@@Base+0x3900>
    8500:	bhi	9688 <bt_compidtostr@@Base+0x1ae0>
    8504:	sub	r3, r3, #4
    8508:	cmp	r0, r3
    850c:	beq	af98 <bt_compidtostr@@Base+0x33f0>
    8510:	bhi	ae00 <bt_compidtostr@@Base+0x3258>
    8514:	sub	r3, r3, #2
    8518:	cmp	r0, r3
    851c:	beq	d288 <bt_compidtostr@@Base+0x56e0>
    8520:	bls	d27c <bt_compidtostr@@Base+0x56d4>
    8524:	ldr	r0, [pc, #1488]	; 8afc <bt_compidtostr@@Base+0xf54>
    8528:	add	r0, pc, r0
    852c:	bx	lr
    8530:	sub	r3, r3, #16
    8534:	cmp	r0, r3
    8538:	beq	d1ec <bt_compidtostr@@Base+0x5644>
    853c:	bhi	9080 <bt_compidtostr@@Base+0x14d8>
    8540:	sub	r3, r3, #8
    8544:	cmp	r0, r3
    8548:	beq	b0c4 <bt_compidtostr@@Base+0x351c>
    854c:	bhi	9988 <bt_compidtostr@@Base+0x1de0>
    8550:	sub	r3, r3, #4
    8554:	cmp	r0, r3
    8558:	beq	bb68 <bt_compidtostr@@Base+0x3fc0>
    855c:	bhi	a6d0 <bt_compidtostr@@Base+0x2b28>
    8560:	sub	r3, r3, #2
    8564:	cmp	r0, r3
    8568:	beq	d1c8 <bt_compidtostr@@Base+0x5620>
    856c:	bls	d1bc <bt_compidtostr@@Base+0x5614>
    8570:	ldr	r0, [pc, #1416]	; 8b00 <bt_compidtostr@@Base+0xf58>
    8574:	add	r0, pc, r0
    8578:	bx	lr
    857c:	cmp	r0, #145	; 0x91
    8580:	beq	d48c <bt_compidtostr@@Base+0x58e4>
    8584:	bhi	8e5c <bt_compidtostr@@Base+0x12b4>
    8588:	cmp	r0, #137	; 0x89
    858c:	beq	ce98 <bt_compidtostr@@Base+0x52f0>
    8590:	bhi	9428 <bt_compidtostr@@Base+0x1880>
    8594:	cmp	r0, #133	; 0x85
    8598:	beq	b808 <bt_compidtostr@@Base+0x3c60>
    859c:	bhi	9f68 <bt_compidtostr@@Base+0x23c0>
    85a0:	cmp	r0, #131	; 0x83
    85a4:	beq	d378 <bt_compidtostr@@Base+0x57d0>
    85a8:	bls	d36c <bt_compidtostr@@Base+0x57c4>
    85ac:	ldr	r0, [pc, #1360]	; 8b04 <bt_compidtostr@@Base+0xf5c>
    85b0:	add	r0, pc, r0
    85b4:	bx	lr
    85b8:	sub	r3, r3, #16
    85bc:	cmp	r0, r3
    85c0:	beq	d2c4 <bt_compidtostr@@Base+0x571c>
    85c4:	bhi	8f28 <bt_compidtostr@@Base+0x1380>
    85c8:	sub	r3, r3, #8
    85cc:	cmp	r0, r3
    85d0:	beq	b004 <bt_compidtostr@@Base+0x345c>
    85d4:	bhi	9894 <bt_compidtostr@@Base+0x1cec>
    85d8:	sub	r3, r3, #4
    85dc:	cmp	r0, r3
    85e0:	beq	af38 <bt_compidtostr@@Base+0x3390>
    85e4:	bhi	ae68 <bt_compidtostr@@Base+0x32c0>
    85e8:	sub	r3, r3, #2
    85ec:	cmp	r0, r3
    85f0:	beq	d408 <bt_compidtostr@@Base+0x5860>
    85f4:	bls	d3fc <bt_compidtostr@@Base+0x5854>
    85f8:	ldr	r0, [pc, #1288]	; 8b08 <bt_compidtostr@@Base+0xf60>
    85fc:	add	r0, pc, r0
    8600:	bx	lr
    8604:	cmp	r0, #55	; 0x37
    8608:	beq	b334 <bt_compidtostr@@Base+0x378c>
    860c:	bls	9518 <bt_compidtostr@@Base+0x1970>
    8610:	cmp	r0, #59	; 0x3b
    8614:	beq	b70c <bt_compidtostr@@Base+0x3b64>
    8618:	bls	9d40 <bt_compidtostr@@Base+0x2198>
    861c:	cmp	r0, #61	; 0x3d
    8620:	beq	beec <bt_compidtostr@@Base+0x4344>
    8624:	bcc	bee0 <bt_compidtostr@@Base+0x4338>
    8628:	cmp	r0, #62	; 0x3e
    862c:	beq	bed4 <bt_compidtostr@@Base+0x432c>
    8630:	cmp	r0, #63	; 0x3f
    8634:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    8638:	ldr	r0, [pc, #1228]	; 8b0c <bt_compidtostr@@Base+0xf64>
    863c:	add	r0, pc, r0
    8640:	bx	lr
    8644:	ldr	r3, [pc, #1220]	; 8b10 <bt_compidtostr@@Base+0xf68>
    8648:	cmp	r0, r3
    864c:	beq	b4b4 <bt_compidtostr@@Base+0x390c>
    8650:	bls	96b4 <bt_compidtostr@@Base+0x1b0c>
    8654:	ldr	r3, [pc, #1208]	; 8b14 <bt_compidtostr@@Base+0xf6c>
    8658:	cmp	r0, r3
    865c:	beq	b724 <bt_compidtostr@@Base+0x3b7c>
    8660:	bls	9d70 <bt_compidtostr@@Base+0x21c8>
    8664:	ldr	r3, [pc, #1196]	; 8b18 <bt_compidtostr@@Base+0xf70>
    8668:	cmp	r0, r3
    866c:	beq	be2c <bt_compidtostr@@Base+0x4284>
    8670:	bcc	be20 <bt_compidtostr@@Base+0x4278>
    8674:	cmp	r0, #972	; 0x3cc
    8678:	beq	be14 <bt_compidtostr@@Base+0x426c>
    867c:	add	r3, r3, #2
    8680:	cmp	r0, r3
    8684:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    8688:	ldr	r0, [pc, #1164]	; 8b1c <bt_compidtostr@@Base+0xf74>
    868c:	add	r0, pc, r0
    8690:	bx	lr
    8694:	ldr	r3, [pc, #1156]	; 8b20 <bt_compidtostr@@Base+0xf78>
    8698:	cmp	r0, r3
    869c:	beq	b3c4 <bt_compidtostr@@Base+0x381c>
    86a0:	bls	95b8 <bt_compidtostr@@Base+0x1a10>
    86a4:	ldr	r3, [pc, #1144]	; 8b24 <bt_compidtostr@@Base+0xf7c>
    86a8:	cmp	r0, r3
    86ac:	beq	b79c <bt_compidtostr@@Base+0x3bf4>
    86b0:	bls	9e78 <bt_compidtostr@@Base+0x22d0>
    86b4:	ldr	r3, [pc, #1132]	; 8b28 <bt_compidtostr@@Base+0xf80>
    86b8:	cmp	r0, r3
    86bc:	beq	c06c <bt_compidtostr@@Base+0x44c4>
    86c0:	bcc	c060 <bt_compidtostr@@Base+0x44b8>
    86c4:	add	r3, r3, #1
    86c8:	cmp	r0, r3
    86cc:	beq	c054 <bt_compidtostr@@Base+0x44ac>
    86d0:	add	r3, r3, #1
    86d4:	cmp	r0, r3
    86d8:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    86dc:	ldr	r0, [pc, #1096]	; 8b2c <bt_compidtostr@@Base+0xf84>
    86e0:	add	r0, pc, r0
    86e4:	bx	lr
    86e8:	ldr	r3, [pc, #1088]	; 8b30 <bt_compidtostr@@Base+0xf88>
    86ec:	cmp	r0, r3
    86f0:	beq	b304 <bt_compidtostr@@Base+0x375c>
    86f4:	bls	94c4 <bt_compidtostr@@Base+0x191c>
    86f8:	ldr	r3, [pc, #1076]	; 8b34 <bt_compidtostr@@Base+0xf8c>
    86fc:	cmp	r0, r3
    8700:	beq	b76c <bt_compidtostr@@Base+0x3bc4>
    8704:	bls	9e10 <bt_compidtostr@@Base+0x2268>
    8708:	ldr	r3, [pc, #1064]	; 8b38 <bt_compidtostr@@Base+0xf90>
    870c:	cmp	r0, r3
    8710:	beq	bbec <bt_compidtostr@@Base+0x4044>
    8714:	bcc	bbe0 <bt_compidtostr@@Base+0x4038>
    8718:	add	r3, r3, #1
    871c:	cmp	r0, r3
    8720:	beq	bbd4 <bt_compidtostr@@Base+0x402c>
    8724:	add	r3, r3, #1
    8728:	cmp	r0, r3
    872c:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    8730:	ldr	r0, [pc, #1028]	; 8b3c <bt_compidtostr@@Base+0xf94>
    8734:	add	r0, pc, r0
    8738:	bx	lr
    873c:	ldr	r3, [pc, #1020]	; 8b40 <bt_compidtostr@@Base+0xf98>
    8740:	cmp	r0, r3
    8744:	beq	b4e4 <bt_compidtostr@@Base+0x393c>
    8748:	bls	9708 <bt_compidtostr@@Base+0x1b60>
    874c:	ldr	r3, [pc, #1008]	; 8b44 <bt_compidtostr@@Base+0xf9c>
    8750:	cmp	r0, r3
    8754:	beq	b7cc <bt_compidtostr@@Base+0x3c24>
    8758:	bls	9ee0 <bt_compidtostr@@Base+0x2338>
    875c:	ldr	r3, [pc, #996]	; 8b48 <bt_compidtostr@@Base+0xfa0>
    8760:	cmp	r0, r3
    8764:	beq	c790 <bt_compidtostr@@Base+0x4be8>
    8768:	bcc	c784 <bt_compidtostr@@Base+0x4bdc>
    876c:	cmp	r0, #452	; 0x1c4
    8770:	beq	c778 <bt_compidtostr@@Base+0x4bd0>
    8774:	add	r3, r3, #2
    8778:	cmp	r0, r3
    877c:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    8780:	ldr	r0, [pc, #964]	; 8b4c <bt_compidtostr@@Base+0xfa4>
    8784:	add	r0, pc, r0
    8788:	bx	lr
    878c:	ldr	r3, [pc, #956]	; 8b50 <bt_compidtostr@@Base+0xfa8>
    8790:	cmp	r0, r3
    8794:	beq	b424 <bt_compidtostr@@Base+0x387c>
    8798:	bls	960c <bt_compidtostr@@Base+0x1a64>
    879c:	ldr	r3, [pc, #944]	; 8b54 <bt_compidtostr@@Base+0xfac>
    87a0:	cmp	r0, r3
    87a4:	beq	b7d8 <bt_compidtostr@@Base+0x3c30>
    87a8:	bls	9efc <bt_compidtostr@@Base+0x2354>
    87ac:	ldr	r3, [pc, #932]	; 8b58 <bt_compidtostr@@Base+0xfb0>
    87b0:	cmp	r0, r3
    87b4:	beq	bcac <bt_compidtostr@@Base+0x4104>
    87b8:	bcc	bca0 <bt_compidtostr@@Base+0x40f8>
    87bc:	cmp	r0, #712	; 0x2c8
    87c0:	beq	bc94 <bt_compidtostr@@Base+0x40ec>
    87c4:	add	r3, r3, #2
    87c8:	cmp	r0, r3
    87cc:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    87d0:	ldr	r0, [pc, #900]	; 8b5c <bt_compidtostr@@Base+0xfb4>
    87d4:	add	r0, pc, r0
    87d8:	bx	lr
    87dc:	cmp	r0, #185	; 0xb9
    87e0:	beq	b544 <bt_compidtostr@@Base+0x399c>
    87e4:	bls	9760 <bt_compidtostr@@Base+0x1bb8>
    87e8:	cmp	r0, #189	; 0xbd
    87ec:	beq	b6f4 <bt_compidtostr@@Base+0x3b4c>
    87f0:	bls	9d10 <bt_compidtostr@@Base+0x2168>
    87f4:	cmp	r0, #191	; 0xbf
    87f8:	beq	bc4c <bt_compidtostr@@Base+0x40a4>
    87fc:	bcc	bc40 <bt_compidtostr@@Base+0x4098>
    8800:	cmp	r0, #192	; 0xc0
    8804:	beq	bc34 <bt_compidtostr@@Base+0x408c>
    8808:	cmp	r0, #193	; 0xc1
    880c:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    8810:	ldr	r0, [pc, #840]	; 8b60 <bt_compidtostr@@Base+0xfb8>
    8814:	add	r0, pc, r0
    8818:	bx	lr
    881c:	ldr	r3, [pc, #832]	; 8b64 <bt_compidtostr@@Base+0xfbc>
    8820:	cmp	r0, r3
    8824:	beq	b3b8 <bt_compidtostr@@Base+0x3810>
    8828:	bls	958c <bt_compidtostr@@Base+0x19e4>
    882c:	ldr	r3, [pc, #820]	; 8b68 <bt_compidtostr@@Base+0xfc0>
    8830:	cmp	r0, r3
    8834:	beq	b73c <bt_compidtostr@@Base+0x3b94>
    8838:	bls	9da8 <bt_compidtostr@@Base+0x2200>
    883c:	ldr	r3, [pc, #808]	; 8b6c <bt_compidtostr@@Base+0xfc4>
    8840:	cmp	r0, r3
    8844:	beq	c9d0 <bt_compidtostr@@Base+0x4e28>
    8848:	bcc	c9c4 <bt_compidtostr@@Base+0x4e1c>
    884c:	add	r3, r3, #1
    8850:	cmp	r0, r3
    8854:	beq	c9b8 <bt_compidtostr@@Base+0x4e10>
    8858:	add	r3, r3, #1
    885c:	cmp	r0, r3
    8860:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    8864:	ldr	r0, [pc, #772]	; 8b70 <bt_compidtostr@@Base+0xfc8>
    8868:	add	r0, pc, r0
    886c:	bx	lr
    8870:	cmp	r0, #900	; 0x384
    8874:	beq	b454 <bt_compidtostr@@Base+0x38ac>
    8878:	bls	9660 <bt_compidtostr@@Base+0x1ab8>
    887c:	cmp	r0, #904	; 0x388
    8880:	beq	b6c4 <bt_compidtostr@@Base+0x3b1c>
    8884:	bls	9ca0 <bt_compidtostr@@Base+0x20f8>
    8888:	ldr	r3, [pc, #740]	; 8b74 <bt_compidtostr@@Base+0xfcc>
    888c:	cmp	r0, r3
    8890:	beq	bfac <bt_compidtostr@@Base+0x4404>
    8894:	bcc	bfa0 <bt_compidtostr@@Base+0x43f8>
    8898:	add	r3, r3, #1
    889c:	cmp	r0, r3
    88a0:	beq	bf94 <bt_compidtostr@@Base+0x43ec>
    88a4:	cmp	r0, #908	; 0x38c
    88a8:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    88ac:	ldr	r0, [pc, #708]	; 8b78 <bt_compidtostr@@Base+0xfd0>
    88b0:	add	r0, pc, r0
    88b4:	bx	lr
    88b8:	ldr	r3, [pc, #700]	; 8b7c <bt_compidtostr@@Base+0xfd4>
    88bc:	cmp	r0, r3
    88c0:	beq	b328 <bt_compidtostr@@Base+0x3780>
    88c4:	bls	94f0 <bt_compidtostr@@Base+0x1948>
    88c8:	ldr	r3, [pc, #688]	; 8b80 <bt_compidtostr@@Base+0xfd8>
    88cc:	cmp	r0, r3
    88d0:	beq	b7c0 <bt_compidtostr@@Base+0x3c18>
    88d4:	bls	9ec8 <bt_compidtostr@@Base+0x2320>
    88d8:	cmp	r0, #516	; 0x204
    88dc:	beq	c850 <bt_compidtostr@@Base+0x4ca8>
    88e0:	bcc	c844 <bt_compidtostr@@Base+0x4c9c>
    88e4:	ldr	r3, [pc, #664]	; 8b84 <bt_compidtostr@@Base+0xfdc>
    88e8:	cmp	r0, r3
    88ec:	beq	c838 <bt_compidtostr@@Base+0x4c90>
    88f0:	add	r3, r3, #1
    88f4:	cmp	r0, r3
    88f8:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    88fc:	ldr	r0, [pc, #644]	; 8b88 <bt_compidtostr@@Base+0xfe0>
    8900:	add	r0, pc, r0
    8904:	bx	lr
    8908:	cmp	r0, #640	; 0x280
    890c:	beq	b394 <bt_compidtostr@@Base+0x37ec>
    8910:	bls	9564 <bt_compidtostr@@Base+0x19bc>
    8914:	cmp	r0, #644	; 0x284
    8918:	beq	b6dc <bt_compidtostr@@Base+0x3b34>
    891c:	bls	9cd8 <bt_compidtostr@@Base+0x2130>
    8920:	ldr	r3, [pc, #612]	; 8b8c <bt_compidtostr@@Base+0xfe4>
    8924:	cmp	r0, r3
    8928:	beq	bd6c <bt_compidtostr@@Base+0x41c4>
    892c:	bcc	bd60 <bt_compidtostr@@Base+0x41b8>
    8930:	add	r3, r3, #1
    8934:	cmp	r0, r3
    8938:	beq	bd54 <bt_compidtostr@@Base+0x41ac>
    893c:	cmp	r0, #648	; 0x288
    8940:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    8944:	ldr	r0, [pc, #580]	; 8b90 <bt_compidtostr@@Base+0xfe8>
    8948:	add	r0, pc, r0
    894c:	bx	lr
    8950:	ldr	r3, [pc, #572]	; 8b94 <bt_compidtostr@@Base+0xfec>
    8954:	cmp	r0, r3
    8958:	beq	b448 <bt_compidtostr@@Base+0x38a0>
    895c:	bls	9638 <bt_compidtostr@@Base+0x1a90>
    8960:	ldr	r3, [pc, #560]	; 8b98 <bt_compidtostr@@Base+0xff0>
    8964:	cmp	r0, r3
    8968:	beq	b784 <bt_compidtostr@@Base+0x3bdc>
    896c:	bls	9e44 <bt_compidtostr@@Base+0x229c>
    8970:	cmp	r0, #776	; 0x308
    8974:	beq	c910 <bt_compidtostr@@Base+0x4d68>
    8978:	bcc	c904 <bt_compidtostr@@Base+0x4d5c>
    897c:	ldr	r3, [pc, #536]	; 8b9c <bt_compidtostr@@Base+0xff4>
    8980:	cmp	r0, r3
    8984:	beq	c8f8 <bt_compidtostr@@Base+0x4d50>
    8988:	add	r3, r3, #1
    898c:	cmp	r0, r3
    8990:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    8994:	ldr	r0, [pc, #516]	; 8ba0 <bt_compidtostr@@Base+0xff8>
    8998:	add	r0, pc, r0
    899c:	bx	lr
    89a0:	cmp	r0, #120	; 0x78
    89a4:	beq	b574 <bt_compidtostr@@Base+0x39cc>
    89a8:	bls	97a8 <bt_compidtostr@@Base+0x1c00>
    89ac:	cmp	r0, #124	; 0x7c
    89b0:	beq	b754 <bt_compidtostr@@Base+0x3bac>
    89b4:	bls	9de0 <bt_compidtostr@@Base+0x2238>
    89b8:	cmp	r0, #126	; 0x7e
    89bc:	beq	bf4c <bt_compidtostr@@Base+0x43a4>
    89c0:	bcc	bf40 <bt_compidtostr@@Base+0x4398>
    89c4:	cmp	r0, #127	; 0x7f
    89c8:	beq	bf34 <bt_compidtostr@@Base+0x438c>
    89cc:	cmp	r0, #128	; 0x80
    89d0:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    89d4:	ldr	r0, [pc, #456]	; 8ba4 <bt_compidtostr@@Base+0xffc>
    89d8:	add	r0, pc, r0
    89dc:	bx	lr
    89e0:	cmp	r0, #250	; 0xfa
    89e4:	beq	b568 <bt_compidtostr@@Base+0x39c0>
    89e8:	bls	9784 <bt_compidtostr@@Base+0x1bdc>
    89ec:	cmp	r0, #254	; 0xfe
    89f0:	beq	b7b4 <bt_compidtostr@@Base+0x3c0c>
    89f4:	bls	9eb0 <bt_compidtostr@@Base+0x2308>
    89f8:	cmp	r0, #256	; 0x100
    89fc:	beq	c8b0 <bt_compidtostr@@Base+0x4d08>
    8a00:	bcc	c8a4 <bt_compidtostr@@Base+0x4cfc>
    8a04:	ldr	r3, [pc, #412]	; 8ba8 <bt_compidtostr@@Base+0x1000>
    8a08:	cmp	r0, r3
    8a0c:	beq	c898 <bt_compidtostr@@Base+0x4cf0>
    8a10:	add	r3, r3, #1
    8a14:	cmp	r0, r3
    8a18:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    8a1c:	ldr	r0, [pc, #392]	; 8bac <bt_compidtostr@@Base+0x1004>
    8a20:	add	r0, pc, r0
    8a24:	bx	lr
    8a28:	andeq	r0, r0, r7, lsl #4
    8a2c:	andeq	r0, r0, fp, lsl #6
    8a30:	andeq	r0, r0, sl, asr #5
    8a34:			; <UNDEFINED> instruction: 0x000002b9
    8a38:	andeq	lr, r0, ip, ror r8
    8a3c:	ldrdeq	fp, [r0], -r8
    8a40:	andeq	r0, r0, r5, lsl #3
    8a44:	andeq	r0, r0, r6, asr #3
    8a48:			; <UNDEFINED> instruction: 0x000001b5
    8a4c:	andeq	sp, r0, r4, lsl r3
    8a50:	andeq	r0, r0, sp, lsl #7
    8a54:	andeq	r0, r0, lr, asr #7
    8a58:			; <UNDEFINED> instruction: 0x000003bd
    8a5c:	andeq	pc, r0, r8, asr #23
    8a60:	andeq	r0, r0, fp, lsr r3
    8a64:	andeq	pc, r0, ip, lsr #3
    8a68:	andeq	r0, r0, r3, lsr r1
    8a6c:	andeq	ip, r0, ip, ror r7
    8a70:	andeq	r0, r0, r7, lsr r2
    8a74:	muleq	r0, r8, fp
    8a78:	andeq	fp, r0, r0, lsr #32
    8a7c:	andeq	r0, r0, lr, ror #6
    8a80:	andeq	pc, r0, r8, lsl #10
    8a84:			; <UNDEFINED> instruction: 0x0000b5b4
    8a88:	andeq	r0, r0, r6, ror #2
    8a8c:	andeq	ip, r0, r0, asr #22
    8a90:	andeq	r0, r0, lr, ror #7
    8a94:	strdeq	r0, [r0], -lr
    8a98:	andeq	pc, r0, r8, asr #28
    8a9c:	andeq	r0, r0, sl, ror #4
    8aa0:	andeq	sp, r0, ip, lsl #30
    8aa4:	andeq	r0, r0, sl, ror #5
    8aa8:	strdeq	r0, [r0], -sl
    8aac:	andeq	lr, r0, r4, lsl #19
    8ab0:	andeq	r0, r0, r6, ror #3
    8ab4:	strdeq	r0, [r0], -r6
    8ab8:	andeq	sp, r0, r0, asr #7
    8abc:	andeq	fp, r0, r8, lsr #30
    8ac0:	andeq	r0, r0, lr, asr #6
    8ac4:	andeq	pc, r0, r8, lsl r0	; <UNPREDICTABLE>
    8ac8:	ldrdeq	sl, [r0], -r0
    8acc:	andeq	r0, r0, r6, asr #2
    8ad0:	andeq	ip, r0, r0, asr r6
    8ad4:	strdeq	sl, [r0], -r0
    8ad8:	andeq	pc, r0, r4, lsr r9	; <UNPREDICTABLE>
    8adc:	andeq	r0, r0, sl, asr #4
    8ae0:	andeq	sp, r0, r4, ror #19
    8ae4:	andeq	ip, r0, r4, lsr #32
    8ae8:	andeq	pc, r0, r4, asr #6
    8aec:			; <UNDEFINED> instruction: 0x0000ceb4
    8af0:	andeq	lr, r0, r0, ror r3
    8af4:	andeq	lr, r0, r4, lsr #17
    8af8:	andeq	fp, r0, r8, lsl #19
    8afc:	andeq	ip, r0, r4, lsl #17
    8b00:	andeq	sp, r0, r4, lsl #5
    8b04:			; <UNDEFINED> instruction: 0x0000b2b0
    8b08:	andeq	sp, r0, ip, asr ip
    8b0c:	ldrdeq	sl, [r0], -ip
    8b10:	andeq	r0, r0, r5, asr #7
    8b14:	andeq	r0, r0, r9, asr #7
    8b18:	andeq	r0, r0, fp, asr #7
    8b1c:	andeq	pc, r0, r4, asr r5	; <UNPREDICTABLE>
    8b20:	andeq	r0, r0, r3, asr #6
    8b24:	andeq	r0, r0, r7, asr #6
    8b28:	andeq	r0, r0, r9, asr #6
    8b2c:	ldrdeq	lr, [r0], -r0
    8b30:	andeq	r0, r0, pc, lsr r2
    8b34:	andeq	r0, r0, r3, asr #4
    8b38:	andeq	r0, r0, r5, asr #4
    8b3c:	muleq	r0, r4, r5
    8b40:			; <UNDEFINED> instruction: 0x000001bd
    8b44:	andeq	r0, r0, r1, asr #3
    8b48:	andeq	r0, r0, r3, asr #3
    8b4c:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    8b50:	andeq	r0, r0, r1, asr #5
    8b54:	andeq	r0, r0, r5, asr #5
    8b58:	andeq	r0, r0, r7, asr #5
    8b5c:	andeq	sp, r0, r0, lsr #31
    8b60:	strdeq	fp, [r0], -ip
    8b64:	andeq	r0, r0, fp, lsr r1
    8b68:	andeq	r0, r0, pc, lsr r1
    8b6c:	andeq	r0, r0, r1, asr #2
    8b70:	andeq	ip, r0, r4, lsl r0
    8b74:	andeq	r0, r0, sl, lsl #7
    8b78:	andeq	lr, r0, r4, lsr #28
    8b7c:	strdeq	r0, [r0], -lr
    8b80:	andeq	r0, r0, r2, lsl #4
    8b84:	andeq	r0, r0, r5, lsl #4
    8b88:			; <UNDEFINED> instruction: 0x0000ceb4
    8b8c:	andeq	r0, r0, r6, lsl #5
    8b90:	andeq	sp, r0, ip, asr #17
    8b94:	andeq	r0, r0, r2, lsl #6
    8b98:	andeq	r0, r0, r6, lsl #6
    8b9c:	andeq	r0, r0, r9, lsl #6
    8ba0:	andeq	lr, r0, r8, ror #6
    8ba4:	andeq	sl, r0, r8, lsl lr
    8ba8:	andeq	r0, r0, r1, lsl #2
    8bac:	andeq	fp, r0, r8, lsl #18
    8bb0:	andeq	r0, r0, r6, lsl #8
    8bb4:	andeq	r0, r0, sl, lsl #8
    8bb8:	andeq	r0, r0, ip, lsl #8
    8bbc:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    8bc0:	andeq	pc, r0, r4, ror #5
    8bc4:	andeq	r0, r0, r2, lsl #3
    8bc8:	andeq	fp, r0, r8, lsl pc
    8bcc:	andeq	sl, r0, ip, lsl #23
    8bd0:	andeq	r0, r0, r6, ror #7
    8bd4:			; <UNDEFINED> instruction: 0x0000eeb8
    8bd8:	andeq	fp, r0, r0, lsr #1
    8bdc:	andeq	r0, r0, lr, asr r3
    8be0:	andeq	lr, r0, ip, lsr r4
    8be4:	andeq	r0, r0, r1, lsr #5
    8be8:	strdeq	sp, [r0], -ip
    8bec:	andeq	r0, r0, r2, ror #5
    8bf0:	andeq	sp, r0, r8, ror #18
    8bf4:	andeq	r0, r0, r5, lsr #7
    8bf8:	andeq	lr, r0, r4, ror #16
    8bfc:	andeq	sl, r0, ip, ror #7
    8c00:	andeq	r0, r0, r3, lsr #6
    8c04:	andeq	sp, r0, r8, asr #28
    8c08:	andeq	r0, r0, fp, lsl r1
    8c0c:	andeq	fp, r0, r8, ror #8
    8c10:	andeq	r0, r0, pc, lsl r2
    8c14:	andeq	ip, r0, r8, lsl #17
    8c18:	andeq	r0, r0, r6, asr r1
    8c1c:	strdeq	fp, [r0], -r4
    8c20:	muleq	r0, sp, r1
    8c24:	andeq	fp, r0, ip, asr #27
    8c28:	ldrdeq	r9, [r0], -r0
    8c2c:	andeq	r0, r0, sl, asr r2
    8c30:	andeq	ip, r0, r0, lsl #26
    8c34:	ldrdeq	r0, [r0], -lr
    8c38:	andeq	ip, r0, ip, lsl r2
    8c3c:	andeq	r0, r0, r7, lsr r3
    8c40:	andeq	sp, r0, ip, asr lr
    8c44:	andeq	sl, r0, ip, lsl sl
    8c48:	andeq	r0, r0, pc, lsr #2
    8c4c:	andeq	fp, r0, r0, ror #8
    8c50:	andeq	r9, r0, r0, lsr #27
    8c54:	muleq	r0, r0, r3
    8c58:	ldrdeq	sl, [r0], -r8
    8c5c:			; <UNDEFINED> instruction: 0x000001b1
    8c60:	andeq	fp, r0, ip, lsl #28
    8c64:			; <UNDEFINED> instruction: 0x000002b5
    8c68:	andeq	sp, r0, ip, asr r2
    8c6c:	andeq	r0, r0, r6, ror r3
    8c70:	strdeq	lr, [r0], -r0
    8c74:	andeq	r0, r0, r6, ror r1
    8c78:	andeq	fp, r0, r8, lsr #18
    8c7c:	strdeq	r0, [r0], -sl
    8c80:	ldrdeq	lr, [r0], -r4
    8c84:	andeq	r0, r0, lr, ror #2
    8c88:	andeq	fp, r0, ip, lsr #16
    8c8c:	andeq	r0, r0, r3, lsr r2
    8c90:	andeq	ip, r0, r8, asr r7
    8c94:	strdeq	r0, [r0], -r2
    8c98:	andeq	ip, r0, r0, ror #3
    8c9c:			; <UNDEFINED> instruction: 0x000003b9
    8ca0:	strdeq	lr, [r0], -r0
    8ca4:	andeq	sl, r0, ip, lsr #9
    8ca8:	andeq	r0, r0, r2, ror #3
    8cac:	andeq	ip, r0, ip, lsr #32
    8cb0:	andeq	r0, r0, r2, ror r2
    8cb4:	ldrdeq	ip, [r0], -r8
    8cb8:	strdeq	r0, [r0], -r6
    8cbc:	andeq	sp, r0, r8, ror #12
    8cc0:	andeq	ip, r0, r4, ror #13
    8cc4:	muleq	r0, r0, r1
    8cc8:	andeq	r9, r0, r0, ror fp
    8ccc:	ldrdeq	r0, [r0], -r6
    8cd0:	strdeq	sp, [r0], -r8
    8cd4:	andeq	r0, r0, sl, ror r2
    8cd8:	andeq	ip, r0, r4, lsl #23
    8cdc:	muleq	r0, r8, r1
    8ce0:	andeq	sp, r0, r4, ror #21
    8ce4:	ldrdeq	r0, [r0], -sl
    8ce8:			; <UNDEFINED> instruction: 0x0000e6bc
    8cec:	andeq	ip, r0, r0, ror #31
    8cf0:	muleq	r0, r8, r5
    8cf4:	andeq	r0, r0, lr, ror r3
    8cf8:	andeq	sp, r0, r8, lsr pc
    8cfc:	muleq	r0, r1, r1
    8d00:	andeq	fp, r0, r4, lsr #15
    8d04:	andeq	lr, r0, ip, ror #7
    8d08:	andeq	r0, r0, r6, asr r3
    8d0c:	andeq	sp, r0, r8, asr #23
    8d10:	andeq	fp, r0, r0, asr sl
    8d14:	andeq	r0, r0, pc, lsl #2
    8d18:	strdeq	sl, [r0], -r0
    8d1c:	andeq	sl, r0, r0, ror #10
    8d20:	andeq	sl, r0, ip, lsr #21
    8d24:	andeq	r9, r0, r0, lsl pc
    8d28:	andeq	r0, r0, r5, lsr #5
    8d2c:	andeq	ip, r0, r8, lsl #24
    8d30:	ldrdeq	lr, [r0], -r4
    8d34:	andeq	r0, r0, lr, asr #2
    8d38:	andeq	fp, r0, r8, lsl r1
    8d3c:	andeq	sl, r0, r0, ror r6
    8d40:	andeq	r0, r0, r2, asr r2
    8d44:	andeq	ip, r0, ip, lsr r5
    8d48:	muleq	r0, r5, r2
    8d4c:	andeq	ip, r0, ip, lsl sl
    8d50:	andeq	r9, r0, r0, ror #20
    8d54:	muleq	r0, r9, r3
    8d58:	andeq	sp, r0, r8, ror lr
    8d5c:	andeq	r0, r0, lr, asr r1
    8d60:	andeq	fp, r0, r0, ror #2
    8d64:	andeq	r0, r0, r7, lsl r3
    8d68:	andeq	sp, r0, r0, lsl #9
    8d6c:	andeq	r9, r0, r4, ror #7
    8d70:	andeq	r0, r0, r3, lsl r2
    8d74:	andeq	fp, r0, r4, lsl #30
    8d78:	ldrdeq	r0, [r0], -r2
    8d7c:	andeq	fp, r0, r0, lsl #19
    8d80:	andeq	r0, r0, r6, ror #6
    8d84:	andeq	sp, r0, r4, lsl #20
    8d88:	andeq	r0, r0, r9, lsr #7
    8d8c:			; <UNDEFINED> instruction: 0x0000deb8
    8d90:	andeq	r0, r0, r6, ror #5
    8d94:	andeq	ip, r0, r8, ror #30
    8d98:	andeq	sl, r0, r8, rrx
    8d9c:	andeq	r9, r0, ip, lsl sl
    8da0:	andeq	r0, r0, r3, lsr #4
    8da4:	andeq	fp, r0, r0, lsl pc
    8da8:	andeq	r0, r0, sl, ror #7
    8dac:	andeq	lr, r0, r8, lsr #6
    8db0:	andeq	r0, r0, r7, lsr #6
    8db4:	andeq	sp, r0, r0, lsl #8
    8db8:	andeq	r0, r0, pc, lsl r1
    8dbc:	andeq	sl, r0, r4, lsr sl
    8dc0:	ldr	r3, [pc, #-536]	; 8bb0 <bt_compidtostr@@Base+0x1008>
    8dc4:	cmp	r0, r3
    8dc8:	beq	b064 <bt_compidtostr@@Base+0x34bc>
    8dcc:	bls	97f8 <bt_compidtostr@@Base+0x1c50>
    8dd0:	ldr	r3, [pc, #-548]	; 8bb4 <bt_compidtostr@@Base+0x100c>
    8dd4:	cmp	r0, r3
    8dd8:	beq	b6b8 <bt_compidtostr@@Base+0x3b10>
    8ddc:	bls	9c84 <bt_compidtostr@@Base+0x20dc>
    8de0:	ldr	r3, [pc, #-560]	; 8bb8 <bt_compidtostr@@Base+0x1010>
    8de4:	cmp	r0, r3
    8de8:	beq	bdcc <bt_compidtostr@@Base+0x4224>
    8dec:	bcc	bdc0 <bt_compidtostr@@Base+0x4218>
    8df0:	add	r3, r3, #1
    8df4:	cmp	r0, r3
    8df8:	beq	bdb4 <bt_compidtostr@@Base+0x420c>
    8dfc:	ldr	r3, [pc, #-584]	; 8bbc <bt_compidtostr@@Base+0x1014>
    8e00:	cmp	r0, r3
    8e04:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    8e08:	ldr	r0, [pc, #-592]	; 8bc0 <bt_compidtostr@@Base+0x1018>
    8e0c:	add	r0, pc, r0
    8e10:	bx	lr
    8e14:	cmp	r0, #380	; 0x17c
    8e18:	beq	cf28 <bt_compidtostr@@Base+0x5380>
    8e1c:	bls	9330 <bt_compidtostr@@Base+0x1788>
    8e20:	cmp	r0, #384	; 0x180
    8e24:	beq	ba18 <bt_compidtostr@@Base+0x3e70>
    8e28:	bls	a3fc <bt_compidtostr@@Base+0x2854>
    8e2c:	ldr	r3, [pc, #-624]	; 8bc4 <bt_compidtostr@@Base+0x101c>
    8e30:	cmp	r0, r3
    8e34:	beq	d4b0 <bt_compidtostr@@Base+0x5908>
    8e38:	bcc	d4a4 <bt_compidtostr@@Base+0x58fc>
    8e3c:	add	r3, r3, #1
    8e40:	cmp	r0, r3
    8e44:	beq	d498 <bt_compidtostr@@Base+0x58f0>
    8e48:	cmp	r0, #388	; 0x184
    8e4c:	bne	bec8 <bt_compidtostr@@Base+0x4320>
    8e50:	ldr	r0, [pc, #-656]	; 8bc8 <bt_compidtostr@@Base+0x1020>
    8e54:	add	r0, pc, r0
    8e58:	bx	lr
    8e5c:	cmp	r0, #153	; 0x99
    8e60:	beq	b208 <bt_compidtostr@@Base+0x3660>
    8e64:	bhi	9a58 <bt_compidtostr@@Base+0x1eb0>
    8e68:	cmp	r0, #149	; 0x95
    8e6c:	beq	b778 <bt_compidtostr@@Base+0x3bd0>
    8e70:	bhi	9e2c <bt_compidtostr@@Base+0x2284>
    8e74:	cmp	r0, #147	; 0x93
    8e78:	beq	b3f4 <bt_compidtostr@@Base+0x384c>
    8e7c:	bls	b3e8 <bt_compidtostr@@Base+0x3840>
    8e80:	ldr	r0, [pc, #-700]	; 8bcc <bt_compidtostr@@Base+0x1024>
    8e84:	add	r0, pc, r0
    8e88:	bx	lr
    8e8c:	ldr	r3, [pc, #-708]	; 8bd0 <bt_compidtostr@@Base+0x1028>
    8e90:	cmp	r0, r3
    8e94:	beq	b244 <bt_compidtostr@@Base+0x369c>
    8e98:	bhi	9acc <bt_compidtostr@@Base+0x1f24>
    8e9c:	sub	r3, r3, #4
    8ea0:	cmp	r0, r3
    8ea4:	beq	b760 <bt_compidtostr@@Base+0x3bb8>
    8ea8:	bhi	9df8 <bt_compidtostr@@Base+0x2250>
    8eac:	cmp	r0, #992	; 0x3e0
    8eb0:	beq	b04c <bt_compidtostr@@Base+0x34a4>
    8eb4:	bls	b040 <bt_compidtostr@@Base+0x3498>
    8eb8:	ldr	r0, [pc, #-748]	; 8bd4 <bt_compidtostr@@Base+0x102c>
    8ebc:	add	r0, pc, r0
    8ec0:	bx	lr
    8ec4:	cmp	r0, #218	; 0xda
    8ec8:	beq	b628 <bt_compidtostr@@Base+0x3a80>
    8ecc:	bhi	9b4c <bt_compidtostr@@Base+0x1fa4>
    8ed0:	cmp	r0, #214	; 0xd6
    8ed4:	beq	b694 <bt_compidtostr@@Base+0x3aec>
    8ed8:	bhi	9c38 <bt_compidtostr@@Base+0x2090>
    8edc:	cmp	r0, #212	; 0xd4
    8ee0:	beq	b514 <bt_compidtostr@@Base+0x396c>
    8ee4:	bls	b508 <bt_compidtostr@@Base+0x3960>
    8ee8:	ldr	r0, [pc, #-792]	; 8bd8 <bt_compidtostr@@Base+0x1030>
    8eec:	add	r0, pc, r0
    8ef0:	bx	lr
    8ef4:	cmp	r0, #868	; 0x364
    8ef8:	beq	b184 <bt_compidtostr@@Base+0x35dc>
    8efc:	bhi	99dc <bt_compidtostr@@Base+0x1e34>
    8f00:	cmp	r0, #864	; 0x360
    8f04:	beq	b6d0 <bt_compidtostr@@Base+0x3b28>
    8f08:	bhi	9cbc <bt_compidtostr@@Base+0x2114>
    8f0c:	ldr	r3, [pc, #-824]	; 8bdc <bt_compidtostr@@Base+0x1034>
    8f10:	cmp	r0, r3
    8f14:	beq	b01c <bt_compidtostr@@Base+0x3474>
    8f18:	bls	b010 <bt_compidtostr@@Base+0x3468>
    8f1c:	ldr	r0, [pc, #-836]	; 8be0 <bt_compidtostr@@Base+0x1038>
    8f20:	add	r0, pc, r0
    8f24:	bx	lr
    8f28:	ldr	r3, [pc, #-844]	; 8be4 <bt_compidtostr@@Base+0x103c>
    8f2c:	cmp	r0, r3
    8f30:	beq	b058 <bt_compidtostr@@Base+0x34b0>
    8f34:	bhi	97cc <bt_compidtostr@@Base+0x1c24>
    8f38:	sub	r3, r3, #4
    8f3c:	cmp	r0, r3
    8f40:	beq	b7e4 <bt_compidtostr@@Base+0x3c3c>
    8f44:	bhi	9f18 <bt_compidtostr@@Base+0x2370>
    8f48:	sub	r3, r3, #2
    8f4c:	cmp	r0, r3
    8f50:	beq	b364 <bt_compidtostr@@Base+0x37bc>
    8f54:	bls	b358 <bt_compidtostr@@Base+0x37b0>
    8f58:	ldr	r0, [pc, #-888]	; 8be8 <bt_compidtostr@@Base+0x1040>
    8f5c:	add	r0, pc, r0
    8f60:	bx	lr
    8f64:	ldr	r3, [pc, #-896]	; 8bec <bt_compidtostr@@Base+0x1044>
    8f68:	cmp	r0, r3
    8f6c:	beq	b1b4 <bt_compidtostr@@Base+0x360c>
    8f70:	bhi	9a30 <bt_compidtostr@@Base+0x1e88>
    8f74:	sub	r3, r3, #4
    8f78:	cmp	r0, r3
    8f7c:	beq	b718 <bt_compidtostr@@Base+0x3b70>
    8f80:	bhi	9d58 <bt_compidtostr@@Base+0x21b0>
    8f84:	cmp	r0, #732	; 0x2dc
    8f88:	beq	b10c <bt_compidtostr@@Base+0x3564>
    8f8c:	bls	b100 <bt_compidtostr@@Base+0x3558>
    8f90:	ldr	r0, [pc, #-936]	; 8bf0 <bt_compidtostr@@Base+0x1048>
    8f94:	add	r0, pc, r0
    8f98:	bx	lr
    8f9c:	ldr	r3, [pc, #-944]	; 8bf4 <bt_compidtostr@@Base+0x104c>
    8fa0:	cmp	r0, r3
    8fa4:	beq	b1a8 <bt_compidtostr@@Base+0x3600>
    8fa8:	bhi	9a04 <bt_compidtostr@@Base+0x1e5c>
    8fac:	sub	r3, r3, #4
    8fb0:	cmp	r0, r3
    8fb4:	beq	b748 <bt_compidtostr@@Base+0x3ba0>
    8fb8:	bhi	9dc4 <bt_compidtostr@@Base+0x221c>
    8fbc:	sub	r3, r3, #2
    8fc0:	cmp	r0, r3
    8fc4:	beq	b124 <bt_compidtostr@@Base+0x357c>
    8fc8:	bls	b118 <bt_compidtostr@@Base+0x3570>
    8fcc:	ldr	r0, [pc, #-988]	; 8bf8 <bt_compidtostr@@Base+0x1050>
    8fd0:	add	r0, pc, r0
    8fd4:	bx	lr
    8fd8:	cmp	r0, #88	; 0x58
    8fdc:	beq	b214 <bt_compidtostr@@Base+0x366c>
    8fe0:	bhi	9a7c <bt_compidtostr@@Base+0x1ed4>
    8fe4:	cmp	r0, #84	; 0x54
    8fe8:	beq	b700 <bt_compidtostr@@Base+0x3b58>
    8fec:	bhi	9d28 <bt_compidtostr@@Base+0x2180>
    8ff0:	cmp	r0, #82	; 0x52
    8ff4:	beq	b0ac <bt_compidtostr@@Base+0x3504>
    8ff8:	bls	b0a0 <bt_compidtostr@@Base+0x34f8>
    8ffc:	ldr	r0, [pc, #-1032]	; 8bfc <bt_compidtostr@@Base+0x1054>
    9000:	add	r0, pc, r0
    9004:	bx	lr
    9008:	ldr	r3, [pc, #-1040]	; 8c00 <bt_compidtostr@@Base+0x1058>
    900c:	cmp	r0, r3
    9010:	beq	b268 <bt_compidtostr@@Base+0x36c0>
    9014:	bhi	9af4 <bt_compidtostr@@Base+0x1f4c>
    9018:	sub	r3, r3, #4
    901c:	cmp	r0, r3
    9020:	beq	b7a8 <bt_compidtostr@@Base+0x3c00>
    9024:	bhi	9e94 <bt_compidtostr@@Base+0x22ec>
    9028:	sub	r3, r3, #2
    902c:	cmp	r0, r3
    9030:	beq	b52c <bt_compidtostr@@Base+0x3984>
    9034:	bls	b520 <bt_compidtostr@@Base+0x3978>
    9038:	ldr	r0, [pc, #-1084]	; 8c04 <bt_compidtostr@@Base+0x105c>
    903c:	add	r0, pc, r0
    9040:	bx	lr
    9044:	ldr	r3, [pc, #-1092]	; 8c08 <bt_compidtostr@@Base+0x1060>
    9048:	cmp	r0, r3
    904c:	beq	b274 <bt_compidtostr@@Base+0x36cc>
    9050:	bhi	9b20 <bt_compidtostr@@Base+0x1f78>
    9054:	sub	r3, r3, #4
    9058:	cmp	r0, r3
    905c:	beq	b790 <bt_compidtostr@@Base+0x3be8>
    9060:	bhi	9e5c <bt_compidtostr@@Base+0x22b4>
    9064:	sub	r3, r3, #2
    9068:	cmp	r0, r3
    906c:	beq	b0dc <bt_compidtostr@@Base+0x3534>
    9070:	bls	b0d0 <bt_compidtostr@@Base+0x3528>
    9074:	ldr	r0, [pc, #-1136]	; 8c0c <bt_compidtostr@@Base+0x1064>
    9078:	add	r0, pc, r0
    907c:	bx	lr
    9080:	ldr	r3, [pc, #-1144]	; 8c10 <bt_compidtostr@@Base+0x1068>
    9084:	cmp	r0, r3
    9088:	beq	b238 <bt_compidtostr@@Base+0x3690>
    908c:	bhi	9aa0 <bt_compidtostr@@Base+0x1ef8>
    9090:	sub	r3, r3, #4
    9094:	cmp	r0, r3
    9098:	beq	b730 <bt_compidtostr@@Base+0x3b88>
    909c:	bhi	9d8c <bt_compidtostr@@Base+0x21e4>
    90a0:	sub	r3, r3, #2
    90a4:	cmp	r0, r3
    90a8:	beq	afd4 <bt_compidtostr@@Base+0x342c>
    90ac:	bls	afc8 <bt_compidtostr@@Base+0x3420>
    90b0:	ldr	r0, [pc, #-1188]	; 8c14 <bt_compidtostr@@Base+0x106c>
    90b4:	add	r0, pc, r0
    90b8:	bx	lr
    90bc:	cmp	r0, #348	; 0x15c
    90c0:	beq	b088 <bt_compidtostr@@Base+0x34e0>
    90c4:	bhi	9910 <bt_compidtostr@@Base+0x1d68>
    90c8:	cmp	r0, #344	; 0x158
    90cc:	beq	b6e8 <bt_compidtostr@@Base+0x3b40>
    90d0:	bhi	9cf4 <bt_compidtostr@@Base+0x214c>
    90d4:	ldr	r3, [pc, #-1220]	; 8c18 <bt_compidtostr@@Base+0x1070>
    90d8:	cmp	r0, r3
    90dc:	beq	b484 <bt_compidtostr@@Base+0x38dc>
    90e0:	bls	b478 <bt_compidtostr@@Base+0x38d0>
    90e4:	ldr	r0, [pc, #-1232]	; 8c1c <bt_compidtostr@@Base+0x1074>
    90e8:	add	r0, pc, r0
    90ec:	bx	lr
    90f0:	ldr	r3, [pc, #-1240]	; 8c20 <bt_compidtostr@@Base+0x1078>
    90f4:	cmp	r0, r3
    90f8:	beq	b5c8 <bt_compidtostr@@Base+0x3a20>
    90fc:	bhi	9b94 <bt_compidtostr@@Base+0x1fec>
    9100:	sub	r3, r3, #4
    9104:	cmp	r0, r3
    9108:	beq	b6a0 <bt_compidtostr@@Base+0x3af8>
    910c:	bhi	9c50 <bt_compidtostr@@Base+0x20a8>
    9110:	sub	r3, r3, #2
    9114:	cmp	r0, r3
    9118:	beq	b154 <bt_compidtostr@@Base+0x35ac>
    911c:	bls	b148 <bt_compidtostr@@Base+0x35a0>
    9120:	ldr	r0, [pc, #-1284]	; 8c24 <bt_compidtostr@@Base+0x107c>
    9124:	add	r0, pc, r0
    9128:	bx	lr
    912c:	cmp	r0, #23
    9130:	beq	b634 <bt_compidtostr@@Base+0x3a8c>
    9134:	bhi	9b70 <bt_compidtostr@@Base+0x1fc8>
    9138:	cmp	r0, #19
    913c:	beq	b688 <bt_compidtostr@@Base+0x3ae0>
    9140:	bhi	9c20 <bt_compidtostr@@Base+0x2078>
    9144:	cmp	r0, #17
    9148:	beq	afec <bt_compidtostr@@Base+0x3444>
    914c:	bls	afe0 <bt_compidtostr@@Base+0x3438>
    9150:	ldr	r0, [pc, #-1328]	; 8c28 <bt_compidtostr@@Base+0x1080>
    9154:	add	r0, pc, r0
    9158:	bx	lr
    915c:	cmp	r0, #608	; 0x260
    9160:	beq	b5d4 <bt_compidtostr@@Base+0x3a2c>
    9164:	bhi	9bc0 <bt_compidtostr@@Base+0x2018>
    9168:	cmp	r0, #604	; 0x25c
    916c:	beq	b5e0 <bt_compidtostr@@Base+0x3a38>
    9170:	bhi	9be8 <bt_compidtostr@@Base+0x2040>
    9174:	ldr	r3, [pc, #-1360]	; 8c2c <bt_compidtostr@@Base+0x1084>
    9178:	cmp	r0, r3
    917c:	beq	b16c <bt_compidtostr@@Base+0x35c4>
    9180:	bls	b160 <bt_compidtostr@@Base+0x35b8>
    9184:	ldr	r0, [pc, #-1372]	; 8c30 <bt_compidtostr@@Base+0x1088>
    9188:	add	r0, pc, r0
    918c:	bx	lr
    9190:	ldr	r3, [pc, #-1380]	; 8c34 <bt_compidtostr@@Base+0x108c>
    9194:	cmp	r0, r3
    9198:	beq	b2c8 <bt_compidtostr@@Base+0x3720>
    919c:	bhi	944c <bt_compidtostr@@Base+0x18a4>
    91a0:	sub	r3, r3, #4
    91a4:	cmp	r0, r3
    91a8:	beq	b6ac <bt_compidtostr@@Base+0x3b04>
    91ac:	bhi	9c6c <bt_compidtostr@@Base+0x20c4>
    91b0:	cmp	r0, #472	; 0x1d8
    91b4:	beq	ce68 <bt_compidtostr@@Base+0x52c0>
    91b8:	bls	ce5c <bt_compidtostr@@Base+0x52b4>
    91bc:	ldr	r0, [pc, #-1420]	; 8c38 <bt_compidtostr@@Base+0x1090>
    91c0:	add	r0, pc, r0
    91c4:	bx	lr
    91c8:	ldr	r3, [pc, #-1428]	; 8c3c <bt_compidtostr@@Base+0x1094>
    91cc:	cmp	r0, r3
    91d0:	beq	bb80 <bt_compidtostr@@Base+0x3fd8>
    91d4:	bhi	a704 <bt_compidtostr@@Base+0x2b5c>
    91d8:	sub	r3, r3, #2
    91dc:	cmp	r0, r3
    91e0:	beq	d8e8 <bt_compidtostr@@Base+0x5d40>
    91e4:	bls	d8dc <bt_compidtostr@@Base+0x5d34>
    91e8:	ldr	r0, [pc, #-1456]	; 8c40 <bt_compidtostr@@Base+0x1098>
    91ec:	add	r0, pc, r0
    91f0:	bx	lr
    91f4:	cmp	r0, #173	; 0xad
    91f8:	beq	bb98 <bt_compidtostr@@Base+0x3ff0>
    91fc:	bhi	a73c <bt_compidtostr@@Base+0x2b94>
    9200:	cmp	r0, #171	; 0xab
    9204:	beq	d108 <bt_compidtostr@@Base+0x5560>
    9208:	bls	d0fc <bt_compidtostr@@Base+0x5554>
    920c:	ldr	r0, [pc, #-1488]	; 8c44 <bt_compidtostr@@Base+0x109c>
    9210:	add	r0, pc, r0
    9214:	bx	lr
    9218:	ldr	r3, [pc, #-1496]	; 8c48 <bt_compidtostr@@Base+0x10a0>
    921c:	cmp	r0, r3
    9220:	beq	ba30 <bt_compidtostr@@Base+0x3e88>
    9224:	bhi	a430 <bt_compidtostr@@Base+0x2888>
    9228:	sub	r3, r3, #2
    922c:	cmp	r0, r3
    9230:	beq	d528 <bt_compidtostr@@Base+0x5980>
    9234:	bls	d51c <bt_compidtostr@@Base+0x5974>
    9238:	ldr	r0, [pc, #-1524]	; 8c4c <bt_compidtostr@@Base+0x10a4>
    923c:	add	r0, pc, r0
    9240:	bx	lr
    9244:	cmp	r0, #43	; 0x2b
    9248:	beq	af50 <bt_compidtostr@@Base+0x33a8>
    924c:	bhi	aea0 <bt_compidtostr@@Base+0x32f8>
    9250:	cmp	r0, #41	; 0x29
    9254:	beq	d7c8 <bt_compidtostr@@Base+0x5c20>
    9258:	bls	d7bc <bt_compidtostr@@Base+0x5c14>
    925c:	ldr	r0, [pc, #-1556]	; 8c50 <bt_compidtostr@@Base+0x10a8>
    9260:	add	r0, pc, r0
    9264:	bx	lr
    9268:	cmp	r0, #108	; 0x6c
    926c:	beq	b8f8 <bt_compidtostr@@Base+0x3d50>
    9270:	bhi	a174 <bt_compidtostr@@Base+0x25cc>
    9274:	cmp	r0, #106	; 0x6a
    9278:	beq	d018 <bt_compidtostr@@Base+0x5470>
    927c:	bls	d00c <bt_compidtostr@@Base+0x5464>
    9280:	ldr	r0, [pc, #-1588]	; 8c54 <bt_compidtostr@@Base+0x10ac>
    9284:	add	r0, pc, r0
    9288:	bx	lr
    928c:	cmp	r0, #238	; 0xee
    9290:	beq	afb0 <bt_compidtostr@@Base+0x3408>
    9294:	bhi	ae34 <bt_compidtostr@@Base+0x328c>
    9298:	cmp	r0, #236	; 0xec
    929c:	beq	d708 <bt_compidtostr@@Base+0x5b60>
    92a0:	bls	d6fc <bt_compidtostr@@Base+0x5b54>
    92a4:	ldr	r0, [pc, #-1620]	; 8c58 <bt_compidtostr@@Base+0x10b0>
    92a8:	add	r0, pc, r0
    92ac:	bx	lr
    92b0:	ldr	r3, [pc, #-1628]	; 8c5c <bt_compidtostr@@Base+0x10b4>
    92b4:	cmp	r0, r3
    92b8:	beq	ba78 <bt_compidtostr@@Base+0x3ed0>
    92bc:	bhi	a4d0 <bt_compidtostr@@Base+0x2928>
    92c0:	sub	r3, r3, #2
    92c4:	cmp	r0, r3
    92c8:	beq	d048 <bt_compidtostr@@Base+0x54a0>
    92cc:	bls	d03c <bt_compidtostr@@Base+0x5494>
    92d0:	ldr	r0, [pc, #-1656]	; 8c60 <bt_compidtostr@@Base+0x10b8>
    92d4:	add	r0, pc, r0
    92d8:	bx	lr
    92dc:	ldr	r3, [pc, #-1664]	; 8c64 <bt_compidtostr@@Base+0x10bc>
    92e0:	cmp	r0, r3
    92e4:	beq	af44 <bt_compidtostr@@Base+0x339c>
    92e8:	bhi	ae84 <bt_compidtostr@@Base+0x32dc>
    92ec:	sub	r3, r3, #2
    92f0:	cmp	r0, r3
    92f4:	beq	d9a8 <bt_compidtostr@@Base+0x5e00>
    92f8:	bls	d99c <bt_compidtostr@@Base+0x5df4>
    92fc:	ldr	r0, [pc, #-1692]	; 8c68 <bt_compidtostr@@Base+0x10c0>
    9300:	add	r0, pc, r0
    9304:	bx	lr
    9308:	cmp	r0, #888	; 0x378
    930c:	beq	b7f0 <bt_compidtostr@@Base+0x3c48>
    9310:	bhi	9f34 <bt_compidtostr@@Base+0x238c>
    9314:	ldr	r3, [pc, #-1712]	; 8c6c <bt_compidtostr@@Base+0x10c4>
    9318:	cmp	r0, r3
    931c:	beq	d4c8 <bt_compidtostr@@Base+0x5920>
    9320:	bls	d4bc <bt_compidtostr@@Base+0x5914>
    9324:	ldr	r0, [pc, #-1724]	; 8c70 <bt_compidtostr@@Base+0x10c8>
    9328:	add	r0, pc, r0
    932c:	bx	lr
    9330:	cmp	r0, #376	; 0x178
    9334:	beq	af80 <bt_compidtostr@@Base+0x33d8>
    9338:	bhi	adcc <bt_compidtostr@@Base+0x3224>
    933c:	ldr	r3, [pc, #-1744]	; 8c74 <bt_compidtostr@@Base+0x10cc>
    9340:	cmp	r0, r3
    9344:	beq	d828 <bt_compidtostr@@Base+0x5c80>
    9348:	bls	d81c <bt_compidtostr@@Base+0x5c74>
    934c:	ldr	r0, [pc, #-1756]	; 8c78 <bt_compidtostr@@Base+0x10d0>
    9350:	add	r0, pc, r0
    9354:	bx	lr
    9358:	ldr	r3, [pc, #-1764]	; 8c7c <bt_compidtostr@@Base+0x10d4>
    935c:	cmp	r0, r3
    9360:	beq	bad8 <bt_compidtostr@@Base+0x3f30>
    9364:	bhi	a5a4 <bt_compidtostr@@Base+0x29fc>
    9368:	cmp	r0, #1016	; 0x3f8
    936c:	beq	cf88 <bt_compidtostr@@Base+0x53e0>
    9370:	bls	cf7c <bt_compidtostr@@Base+0x53d4>
    9374:	ldr	r0, [pc, #-1788]	; 8c80 <bt_compidtostr@@Base+0x10d8>
    9378:	add	r0, pc, r0
    937c:	bx	lr
    9380:	cmp	r0, #368	; 0x170
    9384:	beq	ba90 <bt_compidtostr@@Base+0x3ee8>
    9388:	bhi	a508 <bt_compidtostr@@Base+0x2960>
    938c:	ldr	r3, [pc, #-1808]	; 8c84 <bt_compidtostr@@Base+0x10dc>
    9390:	cmp	r0, r3
    9394:	beq	d618 <bt_compidtostr@@Base+0x5a70>
    9398:	bls	d60c <bt_compidtostr@@Base+0x5a64>
    939c:	ldr	r0, [pc, #-1820]	; 8c88 <bt_compidtostr@@Base+0x10e0>
    93a0:	add	r0, pc, r0
    93a4:	bx	lr
    93a8:	ldr	r3, [pc, #-1828]	; 8c8c <bt_compidtostr@@Base+0x10e4>
    93ac:	cmp	r0, r3
    93b0:	beq	af5c <bt_compidtostr@@Base+0x33b4>
    93b4:	bhi	aeb8 <bt_compidtostr@@Base+0x3310>
    93b8:	sub	r3, r3, #2
    93bc:	cmp	r0, r3
    93c0:	beq	d948 <bt_compidtostr@@Base+0x5da0>
    93c4:	bls	d93c <bt_compidtostr@@Base+0x5d94>
    93c8:	ldr	r0, [pc, #-1856]	; 8c90 <bt_compidtostr@@Base+0x10e8>
    93cc:	add	r0, pc, r0
    93d0:	bx	lr
    93d4:	ldr	r3, [pc, #-1864]	; 8c94 <bt_compidtostr@@Base+0x10ec>
    93d8:	cmp	r0, r3
    93dc:	beq	baf0 <bt_compidtostr@@Base+0x3f48>
    93e0:	bhi	a5d8 <bt_compidtostr@@Base+0x2a30>
    93e4:	cmp	r0, #496	; 0x1f0
    93e8:	beq	d588 <bt_compidtostr@@Base+0x59e0>
    93ec:	bls	d57c <bt_compidtostr@@Base+0x59d4>
    93f0:	ldr	r0, [pc, #-1888]	; 8c98 <bt_compidtostr@@Base+0x10f0>
    93f4:	add	r0, pc, r0
    93f8:	bx	lr
    93fc:	ldr	r3, [pc, #-1896]	; 8c9c <bt_compidtostr@@Base+0x10f4>
    9400:	cmp	r0, r3
    9404:	beq	af08 <bt_compidtostr@@Base+0x3360>
    9408:	bhi	aed4 <bt_compidtostr@@Base+0x332c>
    940c:	sub	r3, r3, #2
    9410:	cmp	r0, r3
    9414:	beq	d888 <bt_compidtostr@@Base+0x5ce0>
    9418:	bls	d87c <bt_compidtostr@@Base+0x5cd4>
    941c:	ldr	r0, [pc, #-1924]	; 8ca0 <bt_compidtostr@@Base+0x10f8>
    9420:	add	r0, pc, r0
    9424:	bx	lr
    9428:	cmp	r0, #141	; 0x8d
    942c:	beq	bbb0 <bt_compidtostr@@Base+0x4008>
    9430:	bhi	a76c <bt_compidtostr@@Base+0x2bc4>
    9434:	cmp	r0, #139	; 0x8b
    9438:	beq	d648 <bt_compidtostr@@Base+0x5aa0>
    943c:	bls	d63c <bt_compidtostr@@Base+0x5a94>
    9440:	ldr	r0, [pc, #-1956]	; 8ca4 <bt_compidtostr@@Base+0x10fc>
    9444:	add	r0, pc, r0
    9448:	bx	lr
    944c:	ldr	r3, [pc, #-1964]	; 8ca8 <bt_compidtostr@@Base+0x1100>
    9450:	cmp	r0, r3
    9454:	beq	af14 <bt_compidtostr@@Base+0x336c>
    9458:	bhi	aef0 <bt_compidtostr@@Base+0x3348>
    945c:	cmp	r0, #480	; 0x1e0
    9460:	beq	da08 <bt_compidtostr@@Base+0x5e60>
    9464:	bls	d9fc <bt_compidtostr@@Base+0x5e54>
    9468:	ldr	r0, [pc, #-1988]	; 8cac <bt_compidtostr@@Base+0x1104>
    946c:	add	r0, pc, r0
    9470:	bx	lr
    9474:	cmp	r0, #628	; 0x274
    9478:	beq	b958 <bt_compidtostr@@Base+0x3db0>
    947c:	bhi	a250 <bt_compidtostr@@Base+0x26a8>
    9480:	ldr	r3, [pc, #-2008]	; 8cb0 <bt_compidtostr@@Base+0x1108>
    9484:	cmp	r0, r3
    9488:	beq	cec8 <bt_compidtostr@@Base+0x5320>
    948c:	bls	cebc <bt_compidtostr@@Base+0x5314>
    9490:	ldr	r0, [pc, #-2020]	; 8cb4 <bt_compidtostr@@Base+0x110c>
    9494:	add	r0, pc, r0
    9498:	bx	lr
    949c:	ldr	r3, [pc, #-2028]	; 8cb8 <bt_compidtostr@@Base+0x1110>
    94a0:	cmp	r0, r3
    94a4:	beq	b7fc <bt_compidtostr@@Base+0x3c54>
    94a8:	bhi	9f50 <bt_compidtostr@@Base+0x23a8>
    94ac:	cmp	r0, #756	; 0x2f4
    94b0:	beq	bc04 <bt_compidtostr@@Base+0x405c>
    94b4:	bls	bbf8 <bt_compidtostr@@Base+0x4050>
    94b8:	ldr	r0, [pc, #-2052]	; 8cbc <bt_compidtostr@@Base+0x1114>
    94bc:	add	r0, pc, r0
    94c0:	bx	lr
    94c4:	sub	r3, r3, #4
    94c8:	cmp	r0, r3
    94cc:	beq	b814 <bt_compidtostr@@Base+0x3c6c>
    94d0:	bhi	9f80 <bt_compidtostr@@Base+0x23d8>
    94d4:	sub	r3, r3, #2
    94d8:	cmp	r0, r3
    94dc:	beq	c868 <bt_compidtostr@@Base+0x4cc0>
    94e0:	bls	c85c <bt_compidtostr@@Base+0x4cb4>
    94e4:	ldr	r0, [pc, #-2092]	; 8cc0 <bt_compidtostr@@Base+0x1118>
    94e8:	add	r0, pc, r0
    94ec:	bx	lr
    94f0:	sub	r3, r3, #4
    94f4:	cmp	r0, r3
    94f8:	beq	b82c <bt_compidtostr@@Base+0x3c84>
    94fc:	bhi	9fb4 <bt_compidtostr@@Base+0x240c>
    9500:	cmp	r0, #504	; 0x1f8
    9504:	beq	bf04 <bt_compidtostr@@Base+0x435c>
    9508:	bls	bef8 <bt_compidtostr@@Base+0x4350>
    950c:	ldr	r0, [pc, #-2128]	; 8cc4 <bt_compidtostr@@Base+0x111c>
    9510:	add	r0, pc, r0
    9514:	bx	lr
    9518:	cmp	r0, #51	; 0x33
    951c:	beq	b844 <bt_compidtostr@@Base+0x3c9c>
    9520:	bhi	9fe8 <bt_compidtostr@@Base+0x2440>
    9524:	cmp	r0, #49	; 0x31
    9528:	beq	cb98 <bt_compidtostr@@Base+0x4ff0>
    952c:	bls	cb8c <bt_compidtostr@@Base+0x4fe4>
    9530:	ldr	r0, [pc, #-2160]	; 8cc8 <bt_compidtostr@@Base+0x1120>
    9534:	add	r0, pc, r0
    9538:	bx	lr
    953c:	ldr	r3, [pc, #-2168]	; 8ccc <bt_compidtostr@@Base+0x1124>
    9540:	cmp	r0, r3
    9544:	beq	b85c <bt_compidtostr@@Base+0x3cb4>
    9548:	bhi	a01c <bt_compidtostr@@Base+0x2474>
    954c:	cmp	r0, #724	; 0x2d4
    9550:	beq	bd84 <bt_compidtostr@@Base+0x41dc>
    9554:	bls	bd78 <bt_compidtostr@@Base+0x41d0>
    9558:	ldr	r0, [pc, #-2192]	; 8cd0 <bt_compidtostr@@Base+0x1128>
    955c:	add	r0, pc, r0
    9560:	bx	lr
    9564:	cmp	r0, #636	; 0x27c
    9568:	beq	b874 <bt_compidtostr@@Base+0x3ccc>
    956c:	bhi	a050 <bt_compidtostr@@Base+0x24a8>
    9570:	ldr	r3, [pc, #-2212]	; 8cd4 <bt_compidtostr@@Base+0x112c>
    9574:	cmp	r0, r3
    9578:	beq	c9e8 <bt_compidtostr@@Base+0x4e40>
    957c:	bls	c9dc <bt_compidtostr@@Base+0x4e34>
    9580:	ldr	r0, [pc, #-2224]	; 8cd8 <bt_compidtostr@@Base+0x1130>
    9584:	add	r0, pc, r0
    9588:	bx	lr
    958c:	sub	r3, r3, #4
    9590:	cmp	r0, r3
    9594:	beq	b88c <bt_compidtostr@@Base+0x3ce4>
    9598:	bhi	a088 <bt_compidtostr@@Base+0x24e0>
    959c:	sub	r3, r3, #2
    95a0:	cmp	r0, r3
    95a4:	beq	c084 <bt_compidtostr@@Base+0x44dc>
    95a8:	bls	c078 <bt_compidtostr@@Base+0x44d0>
    95ac:	ldr	r0, [pc, #-2264]	; 8cdc <bt_compidtostr@@Base+0x1134>
    95b0:	add	r0, pc, r0
    95b4:	bx	lr
    95b8:	sub	r3, r3, #4
    95bc:	cmp	r0, r3
    95c0:	beq	b8a4 <bt_compidtostr@@Base+0x3cfc>
    95c4:	bhi	a0c0 <bt_compidtostr@@Base+0x2518>
    95c8:	sub	r3, r3, #2
    95cc:	cmp	r0, r3
    95d0:	beq	ccb8 <bt_compidtostr@@Base+0x5110>
    95d4:	bls	ccac <bt_compidtostr@@Base+0x5104>
    95d8:	ldr	r0, [pc, #-2304]	; 8ce0 <bt_compidtostr@@Base+0x1138>
    95dc:	add	r0, pc, r0
    95e0:	bx	lr
    95e4:	ldr	r3, [pc, #-2312]	; 8ce4 <bt_compidtostr@@Base+0x113c>
    95e8:	cmp	r0, r3
    95ec:	beq	b8bc <bt_compidtostr@@Base+0x3d14>
    95f0:	bhi	a0f4 <bt_compidtostr@@Base+0x254c>
    95f4:	cmp	r0, #984	; 0x3d8
    95f8:	beq	bcc4 <bt_compidtostr@@Base+0x411c>
    95fc:	bls	bcb8 <bt_compidtostr@@Base+0x4110>
    9600:	ldr	r0, [pc, #-2336]	; 8ce8 <bt_compidtostr@@Base+0x1140>
    9604:	add	r0, pc, r0
    9608:	bx	lr
    960c:	sub	r3, r3, #4
    9610:	cmp	r0, r3
    9614:	beq	b8d4 <bt_compidtostr@@Base+0x3d2c>
    9618:	bhi	a124 <bt_compidtostr@@Base+0x257c>
    961c:	sub	r3, r3, #2
    9620:	cmp	r0, r3
    9624:	beq	c928 <bt_compidtostr@@Base+0x4d80>
    9628:	bls	c91c <bt_compidtostr@@Base+0x4d74>
    962c:	ldr	r0, [pc, #-2376]	; 8cec <bt_compidtostr@@Base+0x1144>
    9630:	add	r0, pc, r0
    9634:	bx	lr
    9638:	sub	r3, r3, #4
    963c:	cmp	r0, r3
    9640:	beq	b8ec <bt_compidtostr@@Base+0x3d44>
    9644:	bhi	a15c <bt_compidtostr@@Base+0x25b4>
    9648:	cmp	r0, #764	; 0x2fc
    964c:	beq	bfc4 <bt_compidtostr@@Base+0x441c>
    9650:	bls	bfb8 <bt_compidtostr@@Base+0x4410>
    9654:	ldr	r0, [pc, #-2412]	; 8cf0 <bt_compidtostr@@Base+0x1148>
    9658:	add	r0, pc, r0
    965c:	bx	lr
    9660:	cmp	r0, #896	; 0x380
    9664:	beq	b904 <bt_compidtostr@@Base+0x3d5c>
    9668:	bhi	a18c <bt_compidtostr@@Base+0x25e4>
    966c:	ldr	r3, [pc, #-2432]	; 8cf4 <bt_compidtostr@@Base+0x114c>
    9670:	cmp	r0, r3
    9674:	beq	cc58 <bt_compidtostr@@Base+0x50b0>
    9678:	bls	cc4c <bt_compidtostr@@Base+0x50a4>
    967c:	ldr	r0, [pc, #-2444]	; 8cf8 <bt_compidtostr@@Base+0x1150>
    9680:	add	r0, pc, r0
    9684:	bx	lr
    9688:	ldr	r3, [pc, #-2452]	; 8cfc <bt_compidtostr@@Base+0x1154>
    968c:	cmp	r0, r3
    9690:	beq	b91c <bt_compidtostr@@Base+0x3d74>
    9694:	bhi	a1c4 <bt_compidtostr@@Base+0x261c>
    9698:	sub	r3, r3, #2
    969c:	cmp	r0, r3
    96a0:	beq	be44 <bt_compidtostr@@Base+0x429c>
    96a4:	bls	be38 <bt_compidtostr@@Base+0x4290>
    96a8:	ldr	r0, [pc, #-2480]	; 8d00 <bt_compidtostr@@Base+0x1158>
    96ac:	add	r0, pc, r0
    96b0:	bx	lr
    96b4:	sub	r3, r3, #4
    96b8:	cmp	r0, r3
    96bc:	beq	b934 <bt_compidtostr@@Base+0x3d8c>
    96c0:	bhi	a1fc <bt_compidtostr@@Base+0x2654>
    96c4:	sub	r3, r3, #2
    96c8:	cmp	r0, r3
    96cc:	beq	ca78 <bt_compidtostr@@Base+0x4ed0>
    96d0:	bls	ca6c <bt_compidtostr@@Base+0x4ec4>
    96d4:	ldr	r0, [pc, #-2520]	; 8d04 <bt_compidtostr@@Base+0x115c>
    96d8:	add	r0, pc, r0
    96dc:	bx	lr
    96e0:	cmp	r0, #856	; 0x358
    96e4:	beq	b94c <bt_compidtostr@@Base+0x3da4>
    96e8:	bhi	a234 <bt_compidtostr@@Base+0x268c>
    96ec:	ldr	r3, [pc, #-2540]	; 8d08 <bt_compidtostr@@Base+0x1160>
    96f0:	cmp	r0, r3
    96f4:	beq	c7a8 <bt_compidtostr@@Base+0x4c00>
    96f8:	bls	c79c <bt_compidtostr@@Base+0x4bf4>
    96fc:	ldr	r0, [pc, #-2552]	; 8d0c <bt_compidtostr@@Base+0x1164>
    9700:	add	r0, pc, r0
    9704:	bx	lr
    9708:	sub	r3, r3, #4
    970c:	cmp	r0, r3
    9710:	beq	b964 <bt_compidtostr@@Base+0x3dbc>
    9714:	bhi	a26c <bt_compidtostr@@Base+0x26c4>
    9718:	sub	r3, r3, #2
    971c:	cmp	r0, r3
    9720:	beq	cd78 <bt_compidtostr@@Base+0x51d0>
    9724:	bls	cd6c <bt_compidtostr@@Base+0x51c4>
    9728:	ldr	r0, [pc, #-2592]	; 8d10 <bt_compidtostr@@Base+0x1168>
    972c:	add	r0, pc, r0
    9730:	bx	lr
    9734:	ldr	r3, [pc, #-2600]	; 8d14 <bt_compidtostr@@Base+0x116c>
    9738:	cmp	r0, r3
    973c:	beq	b97c <bt_compidtostr@@Base+0x3dd4>
    9740:	bhi	a2a4 <bt_compidtostr@@Base+0x26fc>
    9744:	sub	r3, r3, #2
    9748:	cmp	r0, r3
    974c:	beq	bc64 <bt_compidtostr@@Base+0x40bc>
    9750:	bls	bc58 <bt_compidtostr@@Base+0x40b0>
    9754:	ldr	r0, [pc, #-2628]	; 8d18 <bt_compidtostr@@Base+0x1170>
    9758:	add	r0, pc, r0
    975c:	bx	lr
    9760:	cmp	r0, #181	; 0xb5
    9764:	beq	b994 <bt_compidtostr@@Base+0x3dec>
    9768:	bhi	a2dc <bt_compidtostr@@Base+0x2734>
    976c:	cmp	r0, #179	; 0xb3
    9770:	beq	c8c8 <bt_compidtostr@@Base+0x4d20>
    9774:	bls	c8bc <bt_compidtostr@@Base+0x4d14>
    9778:	ldr	r0, [pc, #-2660]	; 8d1c <bt_compidtostr@@Base+0x1174>
    977c:	add	r0, pc, r0
    9780:	bx	lr
    9784:	cmp	r0, #246	; 0xf6
    9788:	beq	b9ac <bt_compidtostr@@Base+0x3e04>
    978c:	bhi	a30c <bt_compidtostr@@Base+0x2764>
    9790:	cmp	r0, #244	; 0xf4
    9794:	beq	bf64 <bt_compidtostr@@Base+0x43bc>
    9798:	bls	bf58 <bt_compidtostr@@Base+0x43b0>
    979c:	ldr	r0, [pc, #-2692]	; 8d20 <bt_compidtostr@@Base+0x1178>
    97a0:	add	r0, pc, r0
    97a4:	bx	lr
    97a8:	cmp	r0, #116	; 0x74
    97ac:	beq	b9c4 <bt_compidtostr@@Base+0x3e1c>
    97b0:	bhi	a340 <bt_compidtostr@@Base+0x2798>
    97b4:	cmp	r0, #114	; 0x72
    97b8:	beq	cbc8 <bt_compidtostr@@Base+0x5020>
    97bc:	bls	cbbc <bt_compidtostr@@Base+0x5014>
    97c0:	ldr	r0, [pc, #-2724]	; 8d24 <bt_compidtostr@@Base+0x117c>
    97c4:	add	r0, pc, r0
    97c8:	bx	lr
    97cc:	ldr	r3, [pc, #-2732]	; 8d28 <bt_compidtostr@@Base+0x1180>
    97d0:	cmp	r0, r3
    97d4:	beq	b9dc <bt_compidtostr@@Base+0x3e34>
    97d8:	bhi	a374 <bt_compidtostr@@Base+0x27cc>
    97dc:	sub	r3, r3, #2
    97e0:	cmp	r0, r3
    97e4:	beq	bde4 <bt_compidtostr@@Base+0x423c>
    97e8:	bls	bdd8 <bt_compidtostr@@Base+0x4230>
    97ec:	ldr	r0, [pc, #-2760]	; 8d2c <bt_compidtostr@@Base+0x1184>
    97f0:	add	r0, pc, r0
    97f4:	bx	lr
    97f8:	sub	r3, r3, #4
    97fc:	cmp	r0, r3
    9800:	beq	b9f4 <bt_compidtostr@@Base+0x3e4c>
    9804:	bhi	a3ac <bt_compidtostr@@Base+0x2804>
    9808:	cmp	r0, #1024	; 0x400
    980c:	beq	ca18 <bt_compidtostr@@Base+0x4e70>
    9810:	bls	ca0c <bt_compidtostr@@Base+0x4e64>
    9814:	ldr	r0, [pc, #-2796]	; 8d30 <bt_compidtostr@@Base+0x1188>
    9818:	add	r0, pc, r0
    981c:	bx	lr
    9820:	cmp	r0, #336	; 0x150
    9824:	beq	ba0c <bt_compidtostr@@Base+0x3e64>
    9828:	bhi	a3e0 <bt_compidtostr@@Base+0x2838>
    982c:	ldr	r3, [pc, #-2816]	; 8d34 <bt_compidtostr@@Base+0x118c>
    9830:	cmp	r0, r3
    9834:	beq	c0b4 <bt_compidtostr@@Base+0x450c>
    9838:	bls	c0a8 <bt_compidtostr@@Base+0x4500>
    983c:	ldr	r0, [pc, #-2828]	; 8d38 <bt_compidtostr@@Base+0x1190>
    9840:	add	r0, pc, r0
    9844:	bx	lr
    9848:	cmp	r0, #206	; 0xce
    984c:	beq	ba24 <bt_compidtostr@@Base+0x3e7c>
    9850:	bhi	a418 <bt_compidtostr@@Base+0x2870>
    9854:	cmp	r0, #204	; 0xcc
    9858:	beq	cd18 <bt_compidtostr@@Base+0x5170>
    985c:	bls	cd0c <bt_compidtostr@@Base+0x5164>
    9860:	ldr	r0, [pc, #-2860]	; 8d3c <bt_compidtostr@@Base+0x1194>
    9864:	add	r0, pc, r0
    9868:	bx	lr
    986c:	cmp	r0, #596	; 0x254
    9870:	beq	ba3c <bt_compidtostr@@Base+0x3e94>
    9874:	bhi	a44c <bt_compidtostr@@Base+0x28a4>
    9878:	ldr	r3, [pc, #-2880]	; 8d40 <bt_compidtostr@@Base+0x1198>
    987c:	cmp	r0, r3
    9880:	beq	bcf4 <bt_compidtostr@@Base+0x414c>
    9884:	bls	bce8 <bt_compidtostr@@Base+0x4140>
    9888:	ldr	r0, [pc, #-2892]	; 8d44 <bt_compidtostr@@Base+0x119c>
    988c:	add	r0, pc, r0
    9890:	bx	lr
    9894:	ldr	r3, [pc, #-2900]	; 8d48 <bt_compidtostr@@Base+0x11a0>
    9898:	cmp	r0, r3
    989c:	beq	ba54 <bt_compidtostr@@Base+0x3eac>
    98a0:	bhi	a484 <bt_compidtostr@@Base+0x28dc>
    98a4:	sub	r3, r3, #2
    98a8:	cmp	r0, r3
    98ac:	beq	c958 <bt_compidtostr@@Base+0x4db0>
    98b0:	bls	c94c <bt_compidtostr@@Base+0x4da4>
    98b4:	ldr	r0, [pc, #-2928]	; 8d4c <bt_compidtostr@@Base+0x11a4>
    98b8:	add	r0, pc, r0
    98bc:	bx	lr
    98c0:	cmp	r0, #76	; 0x4c
    98c4:	beq	ba6c <bt_compidtostr@@Base+0x3ec4>
    98c8:	bhi	a4b8 <bt_compidtostr@@Base+0x2910>
    98cc:	cmp	r0, #74	; 0x4a
    98d0:	beq	bff4 <bt_compidtostr@@Base+0x444c>
    98d4:	bls	bfe8 <bt_compidtostr@@Base+0x4440>
    98d8:	ldr	r0, [pc, #-2960]	; 8d50 <bt_compidtostr@@Base+0x11a8>
    98dc:	add	r0, pc, r0
    98e0:	bx	lr
    98e4:	ldr	r3, [pc, #-2968]	; 8d54 <bt_compidtostr@@Base+0x11ac>
    98e8:	cmp	r0, r3
    98ec:	beq	ba84 <bt_compidtostr@@Base+0x3edc>
    98f0:	bhi	a4ec <bt_compidtostr@@Base+0x2944>
    98f4:	sub	r3, r3, #2
    98f8:	cmp	r0, r3
    98fc:	beq	cc88 <bt_compidtostr@@Base+0x50e0>
    9900:	bls	cc7c <bt_compidtostr@@Base+0x50d4>
    9904:	ldr	r0, [pc, #-2996]	; 8d58 <bt_compidtostr@@Base+0x11b0>
    9908:	add	r0, pc, r0
    990c:	bx	lr
    9910:	cmp	r0, #352	; 0x160
    9914:	beq	ba9c <bt_compidtostr@@Base+0x3ef4>
    9918:	bhi	a524 <bt_compidtostr@@Base+0x297c>
    991c:	ldr	r3, [pc, #-3016]	; 8d5c <bt_compidtostr@@Base+0x11b4>
    9920:	cmp	r0, r3
    9924:	beq	be74 <bt_compidtostr@@Base+0x42cc>
    9928:	bls	be68 <bt_compidtostr@@Base+0x42c0>
    992c:	ldr	r0, [pc, #-3028]	; 8d60 <bt_compidtostr@@Base+0x11b8>
    9930:	add	r0, pc, r0
    9934:	bx	lr
    9938:	ldr	r3, [pc, #-3036]	; 8d64 <bt_compidtostr@@Base+0x11bc>
    993c:	cmp	r0, r3
    9940:	beq	bab4 <bt_compidtostr@@Base+0x3f0c>
    9944:	bhi	a558 <bt_compidtostr@@Base+0x29b0>
    9948:	sub	r3, r3, #2
    994c:	cmp	r0, r3
    9950:	beq	cad8 <bt_compidtostr@@Base+0x4f30>
    9954:	bls	cacc <bt_compidtostr@@Base+0x4f24>
    9958:	ldr	r0, [pc, #-3064]	; 8d68 <bt_compidtostr@@Base+0x11c0>
    995c:	add	r0, pc, r0
    9960:	bx	lr
    9964:	cmp	r0, #11
    9968:	beq	bacc <bt_compidtostr@@Base+0x3f24>
    996c:	bhi	a58c <bt_compidtostr@@Base+0x29e4>
    9970:	cmp	r0, #9
    9974:	beq	c7d8 <bt_compidtostr@@Base+0x4c30>
    9978:	bls	c7cc <bt_compidtostr@@Base+0x4c24>
    997c:	ldr	r0, [pc, #-3096]	; 8d6c <bt_compidtostr@@Base+0x11c4>
    9980:	add	r0, pc, r0
    9984:	bx	lr
    9988:	ldr	r3, [pc, #-3104]	; 8d70 <bt_compidtostr@@Base+0x11c8>
    998c:	cmp	r0, r3
    9990:	beq	bae4 <bt_compidtostr@@Base+0x3f3c>
    9994:	bhi	a5bc <bt_compidtostr@@Base+0x2a14>
    9998:	sub	r3, r3, #2
    999c:	cmp	r0, r3
    99a0:	beq	cdd8 <bt_compidtostr@@Base+0x5230>
    99a4:	bls	cdcc <bt_compidtostr@@Base+0x5224>
    99a8:	ldr	r0, [pc, #-3132]	; 8d74 <bt_compidtostr@@Base+0x11cc>
    99ac:	add	r0, pc, r0
    99b0:	bx	lr
    99b4:	ldr	r3, [pc, #-3140]	; 8d78 <bt_compidtostr@@Base+0x11d0>
    99b8:	cmp	r0, r3
    99bc:	beq	bafc <bt_compidtostr@@Base+0x3f54>
    99c0:	bhi	a5f0 <bt_compidtostr@@Base+0x2a48>
    99c4:	cmp	r0, #464	; 0x1d0
    99c8:	beq	bd24 <bt_compidtostr@@Base+0x417c>
    99cc:	bls	bd18 <bt_compidtostr@@Base+0x4170>
    99d0:	ldr	r0, [pc, #-3164]	; 8d7c <bt_compidtostr@@Base+0x11d4>
    99d4:	add	r0, pc, r0
    99d8:	bx	lr
    99dc:	cmp	r0, #872	; 0x368
    99e0:	beq	bb14 <bt_compidtostr@@Base+0x3f6c>
    99e4:	bhi	a620 <bt_compidtostr@@Base+0x2a78>
    99e8:	ldr	r3, [pc, #-3184]	; 8d80 <bt_compidtostr@@Base+0x11d8>
    99ec:	cmp	r0, r3
    99f0:	beq	c988 <bt_compidtostr@@Base+0x4de0>
    99f4:	bls	c97c <bt_compidtostr@@Base+0x4dd4>
    99f8:	ldr	r0, [pc, #-3196]	; 8d84 <bt_compidtostr@@Base+0x11dc>
    99fc:	add	r0, pc, r0
    9a00:	bx	lr
    9a04:	ldr	r3, [pc, #-3204]	; 8d88 <bt_compidtostr@@Base+0x11e0>
    9a08:	cmp	r0, r3
    9a0c:	beq	bb2c <bt_compidtostr@@Base+0x3f84>
    9a10:	bhi	a654 <bt_compidtostr@@Base+0x2aac>
    9a14:	sub	r3, r3, #2
    9a18:	cmp	r0, r3
    9a1c:	beq	c024 <bt_compidtostr@@Base+0x447c>
    9a20:	bls	c018 <bt_compidtostr@@Base+0x4470>
    9a24:	ldr	r0, [pc, #-3232]	; 8d8c <bt_compidtostr@@Base+0x11e4>
    9a28:	add	r0, pc, r0
    9a2c:	bx	lr
    9a30:	ldr	r3, [pc, #-3240]	; 8d90 <bt_compidtostr@@Base+0x11e8>
    9a34:	cmp	r0, r3
    9a38:	beq	bb44 <bt_compidtostr@@Base+0x3f9c>
    9a3c:	bhi	a688 <bt_compidtostr@@Base+0x2ae0>
    9a40:	cmp	r0, #740	; 0x2e4
    9a44:	beq	cce8 <bt_compidtostr@@Base+0x5140>
    9a48:	bls	ccdc <bt_compidtostr@@Base+0x5134>
    9a4c:	ldr	r0, [pc, #-3264]	; 8d94 <bt_compidtostr@@Base+0x11ec>
    9a50:	add	r0, pc, r0
    9a54:	bx	lr
    9a58:	cmp	r0, #157	; 0x9d
    9a5c:	beq	bb5c <bt_compidtostr@@Base+0x3fb4>
    9a60:	bhi	a6b8 <bt_compidtostr@@Base+0x2b10>
    9a64:	cmp	r0, #155	; 0x9b
    9a68:	beq	bea4 <bt_compidtostr@@Base+0x42fc>
    9a6c:	bls	be98 <bt_compidtostr@@Base+0x42f0>
    9a70:	ldr	r0, [pc, #-3296]	; 8d98 <bt_compidtostr@@Base+0x11f0>
    9a74:	add	r0, pc, r0
    9a78:	bx	lr
    9a7c:	cmp	r0, #92	; 0x5c
    9a80:	beq	bb74 <bt_compidtostr@@Base+0x3fcc>
    9a84:	bhi	a6ec <bt_compidtostr@@Base+0x2b44>
    9a88:	cmp	r0, #90	; 0x5a
    9a8c:	beq	ca48 <bt_compidtostr@@Base+0x4ea0>
    9a90:	bls	ca3c <bt_compidtostr@@Base+0x4e94>
    9a94:	ldr	r0, [pc, #-3328]	; 8d9c <bt_compidtostr@@Base+0x11f4>
    9a98:	add	r0, pc, r0
    9a9c:	bx	lr
    9aa0:	ldr	r3, [pc, #-3336]	; 8da0 <bt_compidtostr@@Base+0x11f8>
    9aa4:	cmp	r0, r3
    9aa8:	beq	bb8c <bt_compidtostr@@Base+0x3fe4>
    9aac:	bhi	a720 <bt_compidtostr@@Base+0x2b78>
    9ab0:	sub	r3, r3, #2
    9ab4:	cmp	r0, r3
    9ab8:	beq	c0e4 <bt_compidtostr@@Base+0x453c>
    9abc:	bls	c0d8 <bt_compidtostr@@Base+0x4530>
    9ac0:	ldr	r0, [pc, #-3364]	; 8da4 <bt_compidtostr@@Base+0x11fc>
    9ac4:	add	r0, pc, r0
    9ac8:	bx	lr
    9acc:	ldr	r3, [pc, #-3372]	; 8da8 <bt_compidtostr@@Base+0x1200>
    9ad0:	cmp	r0, r3
    9ad4:	beq	bba4 <bt_compidtostr@@Base+0x3ffc>
    9ad8:	bhi	a754 <bt_compidtostr@@Base+0x2bac>
    9adc:	cmp	r0, #1000	; 0x3e8
    9ae0:	beq	cda8 <bt_compidtostr@@Base+0x5200>
    9ae4:	bls	cd9c <bt_compidtostr@@Base+0x51f4>
    9ae8:	ldr	r0, [pc, #-3396]	; 8dac <bt_compidtostr@@Base+0x1204>
    9aec:	add	r0, pc, r0
    9af0:	bx	lr
    9af4:	ldr	r3, [pc, #-3404]	; 8db0 <bt_compidtostr@@Base+0x1208>
    9af8:	cmp	r0, r3
    9afc:	beq	bbbc <bt_compidtostr@@Base+0x4014>
    9b00:	bhi	a784 <bt_compidtostr@@Base+0x2bdc>
    9b04:	sub	r3, r3, #2
    9b08:	cmp	r0, r3
    9b0c:	beq	c808 <bt_compidtostr@@Base+0x4c60>
    9b10:	bls	c7fc <bt_compidtostr@@Base+0x4c54>
    9b14:	ldr	r0, [pc, #-3432]	; 8db4 <bt_compidtostr@@Base+0x120c>
    9b18:	add	r0, pc, r0
    9b1c:	bx	lr
    9b20:	ldr	r3, [pc, #-3440]	; 8db8 <bt_compidtostr@@Base+0x1210>
    9b24:	cmp	r0, r3
    9b28:	beq	af74 <bt_compidtostr@@Base+0x33cc>
    9b2c:	bhi	adb0 <bt_compidtostr@@Base+0x3208>
    9b30:	sub	r3, r3, #2
    9b34:	cmp	r0, r3
    9b38:	beq	caa8 <bt_compidtostr@@Base+0x4f00>
    9b3c:	bls	ca9c <bt_compidtostr@@Base+0x4ef4>
    9b40:	ldr	r0, [pc, #-3468]	; 8dbc <bt_compidtostr@@Base+0x1214>
    9b44:	add	r0, pc, r0
    9b48:	bx	lr
    9b4c:	cmp	r0, #222	; 0xde
    9b50:	beq	af8c <bt_compidtostr@@Base+0x33e4>
    9b54:	bhi	ade8 <bt_compidtostr@@Base+0x3240>
    9b58:	cmp	r0, #220	; 0xdc
    9b5c:	beq	cd48 <bt_compidtostr@@Base+0x51a0>
    9b60:	bls	cd3c <bt_compidtostr@@Base+0x5194>
    9b64:	ldr	r0, [pc, #3124]	; a7a0 <bt_compidtostr@@Base+0x2bf8>
    9b68:	add	r0, pc, r0
    9b6c:	bx	lr
    9b70:	cmp	r0, #27
    9b74:	beq	afa4 <bt_compidtostr@@Base+0x33fc>
    9b78:	bhi	ae1c <bt_compidtostr@@Base+0x3274>
    9b7c:	cmp	r0, #25
    9b80:	beq	cb08 <bt_compidtostr@@Base+0x4f60>
    9b84:	bls	cafc <bt_compidtostr@@Base+0x4f54>
    9b88:	ldr	r0, [pc, #3092]	; a7a4 <bt_compidtostr@@Base+0x2bfc>
    9b8c:	add	r0, pc, r0
    9b90:	bx	lr
    9b94:	ldr	r3, [pc, #3084]	; a7a8 <bt_compidtostr@@Base+0x2c00>
    9b98:	cmp	r0, r3
    9b9c:	beq	afbc <bt_compidtostr@@Base+0x3414>
    9ba0:	bhi	ae4c <bt_compidtostr@@Base+0x32a4>
    9ba4:	sub	r3, r3, #2
    9ba8:	cmp	r0, r3
    9bac:	beq	ce08 <bt_compidtostr@@Base+0x5260>
    9bb0:	bls	cdfc <bt_compidtostr@@Base+0x5254>
    9bb4:	ldr	r0, [pc, #3056]	; a7ac <bt_compidtostr@@Base+0x2c04>
    9bb8:	add	r0, pc, r0
    9bbc:	bx	lr
    9bc0:	cmp	r0, #612	; 0x264
    9bc4:	beq	b5ec <bt_compidtostr@@Base+0x3a44>
    9bc8:	bhi	9c04 <bt_compidtostr@@Base+0x205c>
    9bcc:	ldr	r3, [pc, #3036]	; a7b0 <bt_compidtostr@@Base+0x2c08>
    9bd0:	cmp	r0, r3
    9bd4:	beq	b604 <bt_compidtostr@@Base+0x3a5c>
    9bd8:	bls	b5f8 <bt_compidtostr@@Base+0x3a50>
    9bdc:	ldr	r0, [pc, #3024]	; a7b4 <bt_compidtostr@@Base+0x2c0c>
    9be0:	add	r0, pc, r0
    9be4:	bx	lr
    9be8:	ldr	r3, [pc, #3016]	; a7b8 <bt_compidtostr@@Base+0x2c10>
    9bec:	cmp	r0, r3
    9bf0:	beq	b61c <bt_compidtostr@@Base+0x3a74>
    9bf4:	bls	b610 <bt_compidtostr@@Base+0x3a68>
    9bf8:	ldr	r0, [pc, #3004]	; a7bc <bt_compidtostr@@Base+0x2c14>
    9bfc:	add	r0, pc, r0
    9c00:	bx	lr
    9c04:	ldr	r3, [pc, #2996]	; a7c0 <bt_compidtostr@@Base+0x2c18>
    9c08:	cmp	r0, r3
    9c0c:	beq	b64c <bt_compidtostr@@Base+0x3aa4>
    9c10:	bls	b640 <bt_compidtostr@@Base+0x3a98>
    9c14:	ldr	r0, [pc, #2984]	; a7c4 <bt_compidtostr@@Base+0x2c1c>
    9c18:	add	r0, pc, r0
    9c1c:	bx	lr
    9c20:	cmp	r0, #21
    9c24:	beq	b664 <bt_compidtostr@@Base+0x3abc>
    9c28:	bls	b658 <bt_compidtostr@@Base+0x3ab0>
    9c2c:	ldr	r0, [pc, #2964]	; a7c8 <bt_compidtostr@@Base+0x2c20>
    9c30:	add	r0, pc, r0
    9c34:	bx	lr
    9c38:	cmp	r0, #216	; 0xd8
    9c3c:	beq	b67c <bt_compidtostr@@Base+0x3ad4>
    9c40:	bls	b670 <bt_compidtostr@@Base+0x3ac8>
    9c44:	ldr	r0, [pc, #2944]	; a7cc <bt_compidtostr@@Base+0x2c24>
    9c48:	add	r0, pc, r0
    9c4c:	bx	lr
    9c50:	ldr	r3, [pc, #2936]	; a7d0 <bt_compidtostr@@Base+0x2c28>
    9c54:	cmp	r0, r3
    9c58:	beq	b2ec <bt_compidtostr@@Base+0x3744>
    9c5c:	bls	b2e0 <bt_compidtostr@@Base+0x3738>
    9c60:	ldr	r0, [pc, #2924]	; a7d4 <bt_compidtostr@@Base+0x2c2c>
    9c64:	add	r0, pc, r0
    9c68:	bx	lr
    9c6c:	cmp	r0, #476	; 0x1dc
    9c70:	beq	b07c <bt_compidtostr@@Base+0x34d4>
    9c74:	bls	b070 <bt_compidtostr@@Base+0x34c8>
    9c78:	ldr	r0, [pc, #2904]	; a7d8 <bt_compidtostr@@Base+0x2c30>
    9c7c:	add	r0, pc, r0
    9c80:	bx	lr
    9c84:	sub	r3, r3, #2
    9c88:	cmp	r0, r3
    9c8c:	beq	b46c <bt_compidtostr@@Base+0x38c4>
    9c90:	bls	b460 <bt_compidtostr@@Base+0x38b8>
    9c94:	ldr	r0, [pc, #2880]	; a7dc <bt_compidtostr@@Base+0x2c34>
    9c98:	add	r0, pc, r0
    9c9c:	bx	lr
    9ca0:	ldr	r3, [pc, #2872]	; a7e0 <bt_compidtostr@@Base+0x2c38>
    9ca4:	cmp	r0, r3
    9ca8:	beq	b19c <bt_compidtostr@@Base+0x35f4>
    9cac:	bls	b190 <bt_compidtostr@@Base+0x35e8>
    9cb0:	ldr	r0, [pc, #2860]	; a7e4 <bt_compidtostr@@Base+0x2c3c>
    9cb4:	add	r0, pc, r0
    9cb8:	bx	lr
    9cbc:	ldr	r3, [pc, #2852]	; a7e8 <bt_compidtostr@@Base+0x2c40>
    9cc0:	cmp	r0, r3
    9cc4:	beq	b3ac <bt_compidtostr@@Base+0x3804>
    9cc8:	bls	b3a0 <bt_compidtostr@@Base+0x37f8>
    9ccc:	ldr	r0, [pc, #2840]	; a7ec <bt_compidtostr@@Base+0x2c44>
    9cd0:	add	r0, pc, r0
    9cd4:	bx	lr
    9cd8:	ldr	r3, [pc, #2832]	; a7f0 <bt_compidtostr@@Base+0x2c48>
    9cdc:	cmp	r0, r3
    9ce0:	beq	b13c <bt_compidtostr@@Base+0x3594>
    9ce4:	bls	b130 <bt_compidtostr@@Base+0x3588>
    9ce8:	ldr	r0, [pc, #2820]	; a7f4 <bt_compidtostr@@Base+0x2c4c>
    9cec:	add	r0, pc, r0
    9cf0:	bx	lr
    9cf4:	ldr	r3, [pc, #2812]	; a7f8 <bt_compidtostr@@Base+0x2c50>
    9cf8:	cmp	r0, r3
    9cfc:	beq	b55c <bt_compidtostr@@Base+0x39b4>
    9d00:	bls	b550 <bt_compidtostr@@Base+0x39a8>
    9d04:	ldr	r0, [pc, #2800]	; a7fc <bt_compidtostr@@Base+0x2c54>
    9d08:	add	r0, pc, r0
    9d0c:	bx	lr
    9d10:	cmp	r0, #187	; 0xbb
    9d14:	beq	b22c <bt_compidtostr@@Base+0x3684>
    9d18:	bls	b220 <bt_compidtostr@@Base+0x3678>
    9d1c:	ldr	r0, [pc, #2780]	; a800 <bt_compidtostr@@Base+0x2c58>
    9d20:	add	r0, pc, r0
    9d24:	bx	lr
    9d28:	cmp	r0, #86	; 0x56
    9d2c:	beq	b34c <bt_compidtostr@@Base+0x37a4>
    9d30:	bls	b340 <bt_compidtostr@@Base+0x3798>
    9d34:	ldr	r0, [pc, #2760]	; a804 <bt_compidtostr@@Base+0x2c5c>
    9d38:	add	r0, pc, r0
    9d3c:	bx	lr
    9d40:	cmp	r0, #57	; 0x39
    9d44:	beq	b1cc <bt_compidtostr@@Base+0x3624>
    9d48:	bls	b1c0 <bt_compidtostr@@Base+0x3618>
    9d4c:	ldr	r0, [pc, #2740]	; a808 <bt_compidtostr@@Base+0x2c60>
    9d50:	add	r0, pc, r0
    9d54:	bx	lr
    9d58:	cmp	r0, #736	; 0x2e0
    9d5c:	beq	b4cc <bt_compidtostr@@Base+0x3924>
    9d60:	bls	b4c0 <bt_compidtostr@@Base+0x3918>
    9d64:	ldr	r0, [pc, #2720]	; a80c <bt_compidtostr@@Base+0x2c64>
    9d68:	add	r0, pc, r0
    9d6c:	bx	lr
    9d70:	sub	r3, r3, #2
    9d74:	cmp	r0, r3
    9d78:	beq	b2a4 <bt_compidtostr@@Base+0x36fc>
    9d7c:	bls	b298 <bt_compidtostr@@Base+0x36f0>
    9d80:	ldr	r0, [pc, #2696]	; a810 <bt_compidtostr@@Base+0x2c68>
    9d84:	add	r0, pc, r0
    9d88:	bx	lr
    9d8c:	ldr	r3, [pc, #2688]	; a814 <bt_compidtostr@@Base+0x2c6c>
    9d90:	cmp	r0, r3
    9d94:	beq	b40c <bt_compidtostr@@Base+0x3864>
    9d98:	bls	b400 <bt_compidtostr@@Base+0x3858>
    9d9c:	ldr	r0, [pc, #2676]	; a818 <bt_compidtostr@@Base+0x2c70>
    9da0:	add	r0, pc, r0
    9da4:	bx	lr
    9da8:	sub	r3, r3, #2
    9dac:	cmp	r0, r3
    9db0:	beq	b1e4 <bt_compidtostr@@Base+0x363c>
    9db4:	bls	b1d8 <bt_compidtostr@@Base+0x3630>
    9db8:	ldr	r0, [pc, #2652]	; a81c <bt_compidtostr@@Base+0x2c74>
    9dbc:	add	r0, pc, r0
    9dc0:	bx	lr
    9dc4:	ldr	r3, [pc, #2644]	; a820 <bt_compidtostr@@Base+0x2c78>
    9dc8:	cmp	r0, r3
    9dcc:	beq	b58c <bt_compidtostr@@Base+0x39e4>
    9dd0:	bls	b580 <bt_compidtostr@@Base+0x39d8>
    9dd4:	ldr	r0, [pc, #2632]	; a824 <bt_compidtostr@@Base+0x2c7c>
    9dd8:	add	r0, pc, r0
    9ddc:	bx	lr
    9de0:	cmp	r0, #122	; 0x7a
    9de4:	beq	b25c <bt_compidtostr@@Base+0x36b4>
    9de8:	bls	b250 <bt_compidtostr@@Base+0x36a8>
    9dec:	ldr	r0, [pc, #2612]	; a828 <bt_compidtostr@@Base+0x2c80>
    9df0:	add	r0, pc, r0
    9df4:	bx	lr
    9df8:	cmp	r0, #996	; 0x3e4
    9dfc:	beq	b31c <bt_compidtostr@@Base+0x3774>
    9e00:	bls	b310 <bt_compidtostr@@Base+0x3768>
    9e04:	ldr	r0, [pc, #2592]	; a82c <bt_compidtostr@@Base+0x2c84>
    9e08:	add	r0, pc, r0
    9e0c:	bx	lr
    9e10:	sub	r3, r3, #2
    9e14:	cmp	r0, r3
    9e18:	beq	b1fc <bt_compidtostr@@Base+0x3654>
    9e1c:	bls	b1f0 <bt_compidtostr@@Base+0x3648>
    9e20:	ldr	r0, [pc, #2568]	; a830 <bt_compidtostr@@Base+0x2c88>
    9e24:	add	r0, pc, r0
    9e28:	bx	lr
    9e2c:	cmp	r0, #151	; 0x97
    9e30:	beq	b49c <bt_compidtostr@@Base+0x38f4>
    9e34:	bls	b490 <bt_compidtostr@@Base+0x38e8>
    9e38:	ldr	r0, [pc, #2548]	; a834 <bt_compidtostr@@Base+0x2c8c>
    9e3c:	add	r0, pc, r0
    9e40:	bx	lr
    9e44:	cmp	r0, #772	; 0x304
    9e48:	beq	b28c <bt_compidtostr@@Base+0x36e4>
    9e4c:	bls	b280 <bt_compidtostr@@Base+0x36d8>
    9e50:	ldr	r0, [pc, #2528]	; a838 <bt_compidtostr@@Base+0x2c90>
    9e54:	add	r0, pc, r0
    9e58:	bx	lr
    9e5c:	ldr	r3, [pc, #2520]	; a83c <bt_compidtostr@@Base+0x2c94>
    9e60:	cmp	r0, r3
    9e64:	beq	b3dc <bt_compidtostr@@Base+0x3834>
    9e68:	bls	b3d0 <bt_compidtostr@@Base+0x3828>
    9e6c:	ldr	r0, [pc, #2508]	; a840 <bt_compidtostr@@Base+0x2c98>
    9e70:	add	r0, pc, r0
    9e74:	bx	lr
    9e78:	sub	r3, r3, #2
    9e7c:	cmp	r0, r3
    9e80:	beq	b2bc <bt_compidtostr@@Base+0x3714>
    9e84:	bls	b2b0 <bt_compidtostr@@Base+0x3708>
    9e88:	ldr	r0, [pc, #2484]	; a844 <bt_compidtostr@@Base+0x2c9c>
    9e8c:	add	r0, pc, r0
    9e90:	bx	lr
    9e94:	ldr	r3, [pc, #2476]	; a848 <bt_compidtostr@@Base+0x2ca0>
    9e98:	cmp	r0, r3
    9e9c:	beq	b5a4 <bt_compidtostr@@Base+0x39fc>
    9ea0:	bls	b598 <bt_compidtostr@@Base+0x39f0>
    9ea4:	ldr	r0, [pc, #2464]	; a84c <bt_compidtostr@@Base+0x2ca4>
    9ea8:	add	r0, pc, r0
    9eac:	bx	lr
    9eb0:	cmp	r0, #252	; 0xfc
    9eb4:	beq	b37c <bt_compidtostr@@Base+0x37d4>
    9eb8:	bls	b370 <bt_compidtostr@@Base+0x37c8>
    9ebc:	ldr	r0, [pc, #2444]	; a850 <bt_compidtostr@@Base+0x2ca8>
    9ec0:	add	r0, pc, r0
    9ec4:	bx	lr
    9ec8:	cmp	r0, #512	; 0x200
    9ecc:	beq	b4fc <bt_compidtostr@@Base+0x3954>
    9ed0:	bls	b4f0 <bt_compidtostr@@Base+0x3948>
    9ed4:	ldr	r0, [pc, #2424]	; a854 <bt_compidtostr@@Base+0x2cac>
    9ed8:	add	r0, pc, r0
    9edc:	bx	lr
    9ee0:	sub	r3, r3, #2
    9ee4:	cmp	r0, r3
    9ee8:	beq	b43c <bt_compidtostr@@Base+0x3894>
    9eec:	bls	b430 <bt_compidtostr@@Base+0x3888>
    9ef0:	ldr	r0, [pc, #2400]	; a858 <bt_compidtostr@@Base+0x2cb0>
    9ef4:	add	r0, pc, r0
    9ef8:	bx	lr
    9efc:	sub	r3, r3, #2
    9f00:	cmp	r0, r3
    9f04:	beq	b5bc <bt_compidtostr@@Base+0x3a14>
    9f08:	bls	b5b0 <bt_compidtostr@@Base+0x3a08>
    9f0c:	ldr	r0, [pc, #2376]	; a85c <bt_compidtostr@@Base+0x2cb4>
    9f10:	add	r0, pc, r0
    9f14:	bx	lr
    9f18:	ldr	r3, [pc, #2368]	; a860 <bt_compidtostr@@Base+0x2cb8>
    9f1c:	cmp	r0, r3
    9f20:	beq	d4e0 <bt_compidtostr@@Base+0x5938>
    9f24:	bls	d4d4 <bt_compidtostr@@Base+0x592c>
    9f28:	ldr	r0, [pc, #2356]	; a864 <bt_compidtostr@@Base+0x2cbc>
    9f2c:	add	r0, pc, r0
    9f30:	bx	lr
    9f34:	ldr	r3, [pc, #2348]	; a868 <bt_compidtostr@@Base+0x2cc0>
    9f38:	cmp	r0, r3
    9f3c:	beq	bc1c <bt_compidtostr@@Base+0x4074>
    9f40:	bls	bc10 <bt_compidtostr@@Base+0x4068>
    9f44:	ldr	r0, [pc, #2336]	; a86c <bt_compidtostr@@Base+0x2cc4>
    9f48:	add	r0, pc, r0
    9f4c:	bx	lr
    9f50:	cmp	r0, #760	; 0x2f8
    9f54:	beq	d390 <bt_compidtostr@@Base+0x57e8>
    9f58:	bls	d384 <bt_compidtostr@@Base+0x57dc>
    9f5c:	ldr	r0, [pc, #2316]	; a870 <bt_compidtostr@@Base+0x2cc8>
    9f60:	add	r0, pc, r0
    9f64:	bx	lr
    9f68:	cmp	r0, #135	; 0x87
    9f6c:	beq	c880 <bt_compidtostr@@Base+0x4cd8>
    9f70:	bls	c874 <bt_compidtostr@@Base+0x4ccc>
    9f74:	ldr	r0, [pc, #2296]	; a874 <bt_compidtostr@@Base+0x2ccc>
    9f78:	add	r0, pc, r0
    9f7c:	bx	lr
    9f80:	ldr	r3, [pc, #2288]	; a878 <bt_compidtostr@@Base+0x2cd0>
    9f84:	cmp	r0, r3
    9f88:	beq	d750 <bt_compidtostr@@Base+0x5ba8>
    9f8c:	bls	d744 <bt_compidtostr@@Base+0x5b9c>
    9f90:	ldr	r0, [pc, #2276]	; a87c <bt_compidtostr@@Base+0x2cd4>
    9f94:	add	r0, pc, r0
    9f98:	bx	lr
    9f9c:	cmp	r0, #102	; 0x66
    9fa0:	beq	bf1c <bt_compidtostr@@Base+0x4374>
    9fa4:	bls	bf10 <bt_compidtostr@@Base+0x4368>
    9fa8:	ldr	r0, [pc, #2256]	; a880 <bt_compidtostr@@Base+0x2cd8>
    9fac:	add	r0, pc, r0
    9fb0:	bx	lr
    9fb4:	cmp	r0, #508	; 0x1fc
    9fb8:	beq	d090 <bt_compidtostr@@Base+0x54e8>
    9fbc:	bls	d084 <bt_compidtostr@@Base+0x54dc>
    9fc0:	ldr	r0, [pc, #2236]	; a884 <bt_compidtostr@@Base+0x2cdc>
    9fc4:	add	r0, pc, r0
    9fc8:	bx	lr
    9fcc:	ldr	r3, [pc, #2228]	; a888 <bt_compidtostr@@Base+0x2ce0>
    9fd0:	cmp	r0, r3
    9fd4:	beq	cbb0 <bt_compidtostr@@Base+0x5008>
    9fd8:	bls	cba4 <bt_compidtostr@@Base+0x4ffc>
    9fdc:	ldr	r0, [pc, #2216]	; a88c <bt_compidtostr@@Base+0x2ce4>
    9fe0:	add	r0, pc, r0
    9fe4:	bx	lr
    9fe8:	cmp	r0, #53	; 0x35
    9fec:	beq	d690 <bt_compidtostr@@Base+0x5ae8>
    9ff0:	bls	d684 <bt_compidtostr@@Base+0x5adc>
    9ff4:	ldr	r0, [pc, #2196]	; a890 <bt_compidtostr@@Base+0x2ce8>
    9ff8:	add	r0, pc, r0
    9ffc:	bx	lr
    a000:	ldr	r3, [pc, #2188]	; a894 <bt_compidtostr@@Base+0x2cec>
    a004:	cmp	r0, r3
    a008:	beq	bd9c <bt_compidtostr@@Base+0x41f4>
    a00c:	bls	bd90 <bt_compidtostr@@Base+0x41e8>
    a010:	ldr	r0, [pc, #2176]	; a898 <bt_compidtostr@@Base+0x2cf0>
    a014:	add	r0, pc, r0
    a018:	bx	lr
    a01c:	cmp	r0, #728	; 0x2d8
    a020:	beq	d180 <bt_compidtostr@@Base+0x55d8>
    a024:	bls	d174 <bt_compidtostr@@Base+0x55cc>
    a028:	ldr	r0, [pc, #2156]	; a89c <bt_compidtostr@@Base+0x2cf4>
    a02c:	add	r0, pc, r0
    a030:	bx	lr
    a034:	ldr	r3, [pc, #2148]	; a8a0 <bt_compidtostr@@Base+0x2cf8>
    a038:	cmp	r0, r3
    a03c:	beq	ca00 <bt_compidtostr@@Base+0x4e58>
    a040:	bls	c9f4 <bt_compidtostr@@Base+0x4e4c>
    a044:	ldr	r0, [pc, #2136]	; a8a4 <bt_compidtostr@@Base+0x2cfc>
    a048:	add	r0, pc, r0
    a04c:	bx	lr
    a050:	ldr	r3, [pc, #2128]	; a8a8 <bt_compidtostr@@Base+0x2d00>
    a054:	cmp	r0, r3
    a058:	beq	d8d0 <bt_compidtostr@@Base+0x5d28>
    a05c:	bls	d8c4 <bt_compidtostr@@Base+0x5d1c>
    a060:	ldr	r0, [pc, #2116]	; a8ac <bt_compidtostr@@Base+0x2d04>
    a064:	add	r0, pc, r0
    a068:	bx	lr
    a06c:	ldr	r3, [pc, #2108]	; a8b0 <bt_compidtostr@@Base+0x2d08>
    a070:	cmp	r0, r3
    a074:	beq	c09c <bt_compidtostr@@Base+0x44f4>
    a078:	bls	c090 <bt_compidtostr@@Base+0x44e8>
    a07c:	ldr	r0, [pc, #2096]	; a8b4 <bt_compidtostr@@Base+0x2d0c>
    a080:	add	r0, pc, r0
    a084:	bx	lr
    a088:	ldr	r3, [pc, #2088]	; a8b8 <bt_compidtostr@@Base+0x2d10>
    a08c:	cmp	r0, r3
    a090:	beq	cf70 <bt_compidtostr@@Base+0x53c8>
    a094:	bls	cf64 <bt_compidtostr@@Base+0x53bc>
    a098:	ldr	r0, [pc, #2076]	; a8bc <bt_compidtostr@@Base+0x2d14>
    a09c:	add	r0, pc, r0
    a0a0:	bx	lr
    a0a4:	ldr	r3, [pc, #2068]	; a8c0 <bt_compidtostr@@Base+0x2d18>
    a0a8:	cmp	r0, r3
    a0ac:	beq	ccd0 <bt_compidtostr@@Base+0x5128>
    a0b0:	bls	ccc4 <bt_compidtostr@@Base+0x511c>
    a0b4:	ldr	r0, [pc, #2056]	; a8c4 <bt_compidtostr@@Base+0x2d1c>
    a0b8:	add	r0, pc, r0
    a0bc:	bx	lr
    a0c0:	ldr	r3, [pc, #2048]	; a8c8 <bt_compidtostr@@Base+0x2d20>
    a0c4:	cmp	r0, r3
    a0c8:	beq	d510 <bt_compidtostr@@Base+0x5968>
    a0cc:	bls	d504 <bt_compidtostr@@Base+0x595c>
    a0d0:	ldr	r0, [pc, #2036]	; a8cc <bt_compidtostr@@Base+0x2d24>
    a0d4:	add	r0, pc, r0
    a0d8:	bx	lr
    a0dc:	cmp	r0, #37	; 0x25
    a0e0:	beq	bcdc <bt_compidtostr@@Base+0x4134>
    a0e4:	bls	bcd0 <bt_compidtostr@@Base+0x4128>
    a0e8:	ldr	r0, [pc, #2016]	; a8d0 <bt_compidtostr@@Base+0x2d28>
    a0ec:	add	r0, pc, r0
    a0f0:	bx	lr
    a0f4:	cmp	r0, #988	; 0x3dc
    a0f8:	beq	d300 <bt_compidtostr@@Base+0x5758>
    a0fc:	bls	d2f4 <bt_compidtostr@@Base+0x574c>
    a100:	ldr	r0, [pc, #1996]	; a8d4 <bt_compidtostr@@Base+0x2d2c>
    a104:	add	r0, pc, r0
    a108:	bx	lr
    a10c:	cmp	r0, #720	; 0x2d0
    a110:	beq	c940 <bt_compidtostr@@Base+0x4d98>
    a114:	bls	c934 <bt_compidtostr@@Base+0x4d8c>
    a118:	ldr	r0, [pc, #1976]	; a8d8 <bt_compidtostr@@Base+0x2d30>
    a11c:	add	r0, pc, r0
    a120:	bx	lr
    a124:	ldr	r3, [pc, #1968]	; a8dc <bt_compidtostr@@Base+0x2d34>
    a128:	cmp	r0, r3
    a12c:	beq	d810 <bt_compidtostr@@Base+0x5c68>
    a130:	bls	d804 <bt_compidtostr@@Base+0x5c5c>
    a134:	ldr	r0, [pc, #1956]	; a8e0 <bt_compidtostr@@Base+0x2d38>
    a138:	add	r0, pc, r0
    a13c:	bx	lr
    a140:	ldr	r3, [pc, #1948]	; a8e4 <bt_compidtostr@@Base+0x2d3c>
    a144:	cmp	r0, r3
    a148:	beq	bfdc <bt_compidtostr@@Base+0x4434>
    a14c:	bls	bfd0 <bt_compidtostr@@Base+0x4428>
    a150:	ldr	r0, [pc, #1936]	; a8e8 <bt_compidtostr@@Base+0x2d40>
    a154:	add	r0, pc, r0
    a158:	bx	lr
    a15c:	cmp	r0, #768	; 0x300
    a160:	beq	d030 <bt_compidtostr@@Base+0x5488>
    a164:	bls	d024 <bt_compidtostr@@Base+0x547c>
    a168:	ldr	r0, [pc, #1916]	; a8ec <bt_compidtostr@@Base+0x2d44>
    a16c:	add	r0, pc, r0
    a170:	bx	lr
    a174:	cmp	r0, #110	; 0x6e
    a178:	beq	cc70 <bt_compidtostr@@Base+0x50c8>
    a17c:	bls	cc64 <bt_compidtostr@@Base+0x50bc>
    a180:	ldr	r0, [pc, #1896]	; a8f0 <bt_compidtostr@@Base+0x2d48>
    a184:	add	r0, pc, r0
    a188:	bx	lr
    a18c:	ldr	r3, [pc, #1888]	; a8f4 <bt_compidtostr@@Base+0x2d4c>
    a190:	cmp	r0, r3
    a194:	beq	d600 <bt_compidtostr@@Base+0x5a58>
    a198:	bls	d5f4 <bt_compidtostr@@Base+0x5a4c>
    a19c:	ldr	r0, [pc, #1876]	; a8f8 <bt_compidtostr@@Base+0x2d50>
    a1a0:	add	r0, pc, r0
    a1a4:	bx	lr
    a1a8:	ldr	r3, [pc, #1868]	; a8fc <bt_compidtostr@@Base+0x2d54>
    a1ac:	cmp	r0, r3
    a1b0:	beq	be5c <bt_compidtostr@@Base+0x42b4>
    a1b4:	bls	be50 <bt_compidtostr@@Base+0x42a8>
    a1b8:	ldr	r0, [pc, #1856]	; a900 <bt_compidtostr@@Base+0x2d58>
    a1bc:	add	r0, pc, r0
    a1c0:	bx	lr
    a1c4:	ldr	r3, [pc, #1848]	; a904 <bt_compidtostr@@Base+0x2d5c>
    a1c8:	cmp	r0, r3
    a1cc:	beq	d270 <bt_compidtostr@@Base+0x56c8>
    a1d0:	bls	d264 <bt_compidtostr@@Base+0x56bc>
    a1d4:	ldr	r0, [pc, #1836]	; a908 <bt_compidtostr@@Base+0x2d60>
    a1d8:	add	r0, pc, r0
    a1dc:	bx	lr
    a1e0:	ldr	r3, [pc, #1828]	; a90c <bt_compidtostr@@Base+0x2d64>
    a1e4:	cmp	r0, r3
    a1e8:	beq	ca90 <bt_compidtostr@@Base+0x4ee8>
    a1ec:	bls	ca84 <bt_compidtostr@@Base+0x4edc>
    a1f0:	ldr	r0, [pc, #1816]	; a910 <bt_compidtostr@@Base+0x2d68>
    a1f4:	add	r0, pc, r0
    a1f8:	bx	lr
    a1fc:	ldr	r3, [pc, #1808]	; a914 <bt_compidtostr@@Base+0x2d6c>
    a200:	cmp	r0, r3
    a204:	beq	d990 <bt_compidtostr@@Base+0x5de8>
    a208:	bls	d984 <bt_compidtostr@@Base+0x5ddc>
    a20c:	ldr	r0, [pc, #1796]	; a918 <bt_compidtostr@@Base+0x2d70>
    a210:	add	r0, pc, r0
    a214:	bx	lr
    a218:	ldr	r3, [pc, #1788]	; a91c <bt_compidtostr@@Base+0x2d74>
    a21c:	cmp	r0, r3
    a220:	beq	c7c0 <bt_compidtostr@@Base+0x4c18>
    a224:	bls	c7b4 <bt_compidtostr@@Base+0x4c0c>
    a228:	ldr	r0, [pc, #1776]	; a920 <bt_compidtostr@@Base+0x2d78>
    a22c:	add	r0, pc, r0
    a230:	bx	lr
    a234:	ldr	r3, [pc, #1768]	; a924 <bt_compidtostr@@Base+0x2d7c>
    a238:	cmp	r0, r3
    a23c:	beq	cee0 <bt_compidtostr@@Base+0x5338>
    a240:	bls	ced4 <bt_compidtostr@@Base+0x532c>
    a244:	ldr	r0, [pc, #1756]	; a928 <bt_compidtostr@@Base+0x2d80>
    a248:	add	r0, pc, r0
    a24c:	bx	lr
    a250:	ldr	r3, [pc, #1748]	; a92c <bt_compidtostr@@Base+0x2d84>
    a254:	cmp	r0, r3
    a258:	beq	cd90 <bt_compidtostr@@Base+0x51e8>
    a25c:	bls	cd84 <bt_compidtostr@@Base+0x51dc>
    a260:	ldr	r0, [pc, #1736]	; a930 <bt_compidtostr@@Base+0x2d88>
    a264:	add	r0, pc, r0
    a268:	bx	lr
    a26c:	ldr	r3, [pc, #1728]	; a934 <bt_compidtostr@@Base+0x2d8c>
    a270:	cmp	r0, r3
    a274:	beq	d570 <bt_compidtostr@@Base+0x59c8>
    a278:	bls	d564 <bt_compidtostr@@Base+0x59bc>
    a27c:	ldr	r0, [pc, #1716]	; a938 <bt_compidtostr@@Base+0x2d90>
    a280:	add	r0, pc, r0
    a284:	bx	lr
    a288:	ldr	r3, [pc, #1708]	; a93c <bt_compidtostr@@Base+0x2d94>
    a28c:	cmp	r0, r3
    a290:	beq	bc7c <bt_compidtostr@@Base+0x40d4>
    a294:	bls	bc70 <bt_compidtostr@@Base+0x40c8>
    a298:	ldr	r0, [pc, #1696]	; a940 <bt_compidtostr@@Base+0x2d98>
    a29c:	add	r0, pc, r0
    a2a0:	bx	lr
    a2a4:	ldr	r3, [pc, #1688]	; a944 <bt_compidtostr@@Base+0x2d9c>
    a2a8:	cmp	r0, r3
    a2ac:	beq	d3f0 <bt_compidtostr@@Base+0x5848>
    a2b0:	bls	d3e4 <bt_compidtostr@@Base+0x583c>
    a2b4:	ldr	r0, [pc, #1676]	; a948 <bt_compidtostr@@Base+0x2da0>
    a2b8:	add	r0, pc, r0
    a2bc:	bx	lr
    a2c0:	ldr	r3, [pc, #1668]	; a94c <bt_compidtostr@@Base+0x2da4>
    a2c4:	cmp	r0, r3
    a2c8:	beq	c8e0 <bt_compidtostr@@Base+0x4d38>
    a2cc:	bls	c8d4 <bt_compidtostr@@Base+0x4d2c>
    a2d0:	ldr	r0, [pc, #1656]	; a950 <bt_compidtostr@@Base+0x2da8>
    a2d4:	add	r0, pc, r0
    a2d8:	bx	lr
    a2dc:	cmp	r0, #183	; 0xb7
    a2e0:	beq	d7b0 <bt_compidtostr@@Base+0x5c08>
    a2e4:	bls	d7a4 <bt_compidtostr@@Base+0x5bfc>
    a2e8:	ldr	r0, [pc, #1636]	; a954 <bt_compidtostr@@Base+0x2dac>
    a2ec:	add	r0, pc, r0
    a2f0:	bx	lr
    a2f4:	cmp	r0, #232	; 0xe8
    a2f8:	beq	bf7c <bt_compidtostr@@Base+0x43d4>
    a2fc:	bls	bf70 <bt_compidtostr@@Base+0x43c8>
    a300:	ldr	r0, [pc, #1616]	; a958 <bt_compidtostr@@Base+0x2db0>
    a304:	add	r0, pc, r0
    a308:	bx	lr
    a30c:	cmp	r0, #248	; 0xf8
    a310:	beq	d0f0 <bt_compidtostr@@Base+0x5548>
    a314:	bls	d0e4 <bt_compidtostr@@Base+0x553c>
    a318:	ldr	r0, [pc, #1596]	; a95c <bt_compidtostr@@Base+0x2db4>
    a31c:	add	r0, pc, r0
    a320:	bx	lr
    a324:	ldr	r3, [pc, #1588]	; a960 <bt_compidtostr@@Base+0x2db8>
    a328:	cmp	r0, r3
    a32c:	beq	cbe0 <bt_compidtostr@@Base+0x5038>
    a330:	bls	cbd4 <bt_compidtostr@@Base+0x502c>
    a334:	ldr	r0, [pc, #1576]	; a964 <bt_compidtostr@@Base+0x2dbc>
    a338:	add	r0, pc, r0
    a33c:	bx	lr
    a340:	cmp	r0, #118	; 0x76
    a344:	beq	d6f0 <bt_compidtostr@@Base+0x5b48>
    a348:	bls	d6e4 <bt_compidtostr@@Base+0x5b3c>
    a34c:	ldr	r0, [pc, #1556]	; a968 <bt_compidtostr@@Base+0x2dc0>
    a350:	add	r0, pc, r0
    a354:	bx	lr
    a358:	ldr	r3, [pc, #1548]	; a96c <bt_compidtostr@@Base+0x2dc4>
    a35c:	cmp	r0, r3
    a360:	beq	bdfc <bt_compidtostr@@Base+0x4254>
    a364:	bls	bdf0 <bt_compidtostr@@Base+0x4248>
    a368:	ldr	r0, [pc, #1536]	; a970 <bt_compidtostr@@Base+0x2dc8>
    a36c:	add	r0, pc, r0
    a370:	bx	lr
    a374:	ldr	r3, [pc, #1528]	; a974 <bt_compidtostr@@Base+0x2dcc>
    a378:	cmp	r0, r3
    a37c:	beq	d1b0 <bt_compidtostr@@Base+0x5608>
    a380:	bls	d1a4 <bt_compidtostr@@Base+0x55fc>
    a384:	ldr	r0, [pc, #1516]	; a978 <bt_compidtostr@@Base+0x2dd0>
    a388:	add	r0, pc, r0
    a38c:	bx	lr
    a390:	ldr	r3, [pc, #1508]	; a97c <bt_compidtostr@@Base+0x2dd4>
    a394:	cmp	r0, r3
    a398:	beq	ca30 <bt_compidtostr@@Base+0x4e88>
    a39c:	bls	ca24 <bt_compidtostr@@Base+0x4e7c>
    a3a0:	ldr	r0, [pc, #1496]	; a980 <bt_compidtostr@@Base+0x2dd8>
    a3a4:	add	r0, pc, r0
    a3a8:	bx	lr
    a3ac:	ldr	r3, [pc, #1488]	; a984 <bt_compidtostr@@Base+0x2ddc>
    a3b0:	cmp	r0, r3
    a3b4:	beq	d930 <bt_compidtostr@@Base+0x5d88>
    a3b8:	bls	d924 <bt_compidtostr@@Base+0x5d7c>
    a3bc:	ldr	r0, [pc, #1476]	; a988 <bt_compidtostr@@Base+0x2de0>
    a3c0:	add	r0, pc, r0
    a3c4:	bx	lr
    a3c8:	cmp	r0, #492	; 0x1ec
    a3cc:	beq	c0cc <bt_compidtostr@@Base+0x4524>
    a3d0:	bls	c0c0 <bt_compidtostr@@Base+0x4518>
    a3d4:	ldr	r0, [pc, #1456]	; a98c <bt_compidtostr@@Base+0x2de4>
    a3d8:	add	r0, pc, r0
    a3dc:	bx	lr
    a3e0:	ldr	r3, [pc, #1448]	; a990 <bt_compidtostr@@Base+0x2de8>
    a3e4:	cmp	r0, r3
    a3e8:	beq	cf40 <bt_compidtostr@@Base+0x5398>
    a3ec:	bls	cf34 <bt_compidtostr@@Base+0x538c>
    a3f0:	ldr	r0, [pc, #1436]	; a994 <bt_compidtostr@@Base+0x2dec>
    a3f4:	add	r0, pc, r0
    a3f8:	bx	lr
    a3fc:	ldr	r3, [pc, #1428]	; a998 <bt_compidtostr@@Base+0x2df0>
    a400:	cmp	r0, r3
    a404:	beq	cd30 <bt_compidtostr@@Base+0x5188>
    a408:	bls	cd24 <bt_compidtostr@@Base+0x517c>
    a40c:	ldr	r0, [pc, #1416]	; a99c <bt_compidtostr@@Base+0x2df4>
    a410:	add	r0, pc, r0
    a414:	bx	lr
    a418:	cmp	r0, #208	; 0xd0
    a41c:	beq	d540 <bt_compidtostr@@Base+0x5998>
    a420:	bls	d534 <bt_compidtostr@@Base+0x598c>
    a424:	ldr	r0, [pc, #1396]	; a9a0 <bt_compidtostr@@Base+0x2df8>
    a428:	add	r0, pc, r0
    a42c:	bx	lr
    a430:	ldr	r3, [pc, #1388]	; a9a4 <bt_compidtostr@@Base+0x2dfc>
    a434:	cmp	r0, r3
    a438:	beq	bd0c <bt_compidtostr@@Base+0x4164>
    a43c:	bls	bd00 <bt_compidtostr@@Base+0x4158>
    a440:	ldr	r0, [pc, #1376]	; a9a8 <bt_compidtostr@@Base+0x2e00>
    a444:	add	r0, pc, r0
    a448:	bx	lr
    a44c:	ldr	r3, [pc, #1368]	; a9ac <bt_compidtostr@@Base+0x2e04>
    a450:	cmp	r0, r3
    a454:	beq	d330 <bt_compidtostr@@Base+0x5788>
    a458:	bls	d324 <bt_compidtostr@@Base+0x577c>
    a45c:	ldr	r0, [pc, #1356]	; a9b0 <bt_compidtostr@@Base+0x2e08>
    a460:	add	r0, pc, r0
    a464:	bx	lr
    a468:	ldr	r3, [pc, #1348]	; a9b4 <bt_compidtostr@@Base+0x2e0c>
    a46c:	cmp	r0, r3
    a470:	beq	c970 <bt_compidtostr@@Base+0x4dc8>
    a474:	bls	c964 <bt_compidtostr@@Base+0x4dbc>
    a478:	ldr	r0, [pc, #1336]	; a9b8 <bt_compidtostr@@Base+0x2e10>
    a47c:	add	r0, pc, r0
    a480:	bx	lr
    a484:	ldr	r3, [pc, #1328]	; a9bc <bt_compidtostr@@Base+0x2e14>
    a488:	cmp	r0, r3
    a48c:	beq	d870 <bt_compidtostr@@Base+0x5cc8>
    a490:	bls	d864 <bt_compidtostr@@Base+0x5cbc>
    a494:	ldr	r0, [pc, #1316]	; a9c0 <bt_compidtostr@@Base+0x2e18>
    a498:	add	r0, pc, r0
    a49c:	bx	lr
    a4a0:	cmp	r0, #980	; 0x3d4
    a4a4:	beq	c00c <bt_compidtostr@@Base+0x4464>
    a4a8:	bls	c000 <bt_compidtostr@@Base+0x4458>
    a4ac:	ldr	r0, [pc, #1296]	; a9c4 <bt_compidtostr@@Base+0x2e1c>
    a4b0:	add	r0, pc, r0
    a4b4:	bx	lr
    a4b8:	cmp	r0, #78	; 0x4e
    a4bc:	beq	d060 <bt_compidtostr@@Base+0x54b8>
    a4c0:	bls	d054 <bt_compidtostr@@Base+0x54ac>
    a4c4:	ldr	r0, [pc, #1276]	; a9c8 <bt_compidtostr@@Base+0x2e20>
    a4c8:	add	r0, pc, r0
    a4cc:	bx	lr
    a4d0:	ldr	r3, [pc, #1268]	; a9cc <bt_compidtostr@@Base+0x2e24>
    a4d4:	cmp	r0, r3
    a4d8:	beq	cca0 <bt_compidtostr@@Base+0x50f8>
    a4dc:	bls	cc94 <bt_compidtostr@@Base+0x50ec>
    a4e0:	ldr	r0, [pc, #1256]	; a9d0 <bt_compidtostr@@Base+0x2e28>
    a4e4:	add	r0, pc, r0
    a4e8:	bx	lr
    a4ec:	ldr	r3, [pc, #1248]	; a9d4 <bt_compidtostr@@Base+0x2e2c>
    a4f0:	cmp	r0, r3
    a4f4:	beq	d630 <bt_compidtostr@@Base+0x5a88>
    a4f8:	bls	d624 <bt_compidtostr@@Base+0x5a7c>
    a4fc:	ldr	r0, [pc, #1236]	; a9d8 <bt_compidtostr@@Base+0x2e30>
    a500:	add	r0, pc, r0
    a504:	bx	lr
    a508:	ldr	r3, [pc, #1228]	; a9dc <bt_compidtostr@@Base+0x2e34>
    a50c:	cmp	r0, r3
    a510:	beq	be8c <bt_compidtostr@@Base+0x42e4>
    a514:	bls	be80 <bt_compidtostr@@Base+0x42d8>
    a518:	ldr	r0, [pc, #1216]	; a9e0 <bt_compidtostr@@Base+0x2e38>
    a51c:	add	r0, pc, r0
    a520:	bx	lr
    a524:	ldr	r3, [pc, #1208]	; a9e4 <bt_compidtostr@@Base+0x2e3c>
    a528:	cmp	r0, r3
    a52c:	beq	d240 <bt_compidtostr@@Base+0x5698>
    a530:	bls	d234 <bt_compidtostr@@Base+0x568c>
    a534:	ldr	r0, [pc, #1196]	; a9e8 <bt_compidtostr@@Base+0x2e40>
    a538:	add	r0, pc, r0
    a53c:	bx	lr
    a540:	cmp	r0, #5
    a544:	beq	caf0 <bt_compidtostr@@Base+0x4f48>
    a548:	bls	cae4 <bt_compidtostr@@Base+0x4f3c>
    a54c:	ldr	r0, [pc, #1176]	; a9ec <bt_compidtostr@@Base+0x2e44>
    a550:	add	r0, pc, r0
    a554:	bx	lr
    a558:	ldr	r3, [pc, #1168]	; a9f0 <bt_compidtostr@@Base+0x2e48>
    a55c:	cmp	r0, r3
    a560:	beq	d9f0 <bt_compidtostr@@Base+0x5e48>
    a564:	bls	d9e4 <bt_compidtostr@@Base+0x5e3c>
    a568:	ldr	r0, [pc, #1156]	; a9f4 <bt_compidtostr@@Base+0x2e4c>
    a56c:	add	r0, pc, r0
    a570:	bx	lr
    a574:	cmp	r0, #752	; 0x2f0
    a578:	beq	c7f0 <bt_compidtostr@@Base+0x4c48>
    a57c:	bls	c7e4 <bt_compidtostr@@Base+0x4c3c>
    a580:	ldr	r0, [pc, #1136]	; a9f8 <bt_compidtostr@@Base+0x2e50>
    a584:	add	r0, pc, r0
    a588:	bx	lr
    a58c:	cmp	r0, #13
    a590:	beq	cfa0 <bt_compidtostr@@Base+0x53f8>
    a594:	bls	cf94 <bt_compidtostr@@Base+0x53ec>
    a598:	ldr	r0, [pc, #1116]	; a9fc <bt_compidtostr@@Base+0x2e54>
    a59c:	add	r0, pc, r0
    a5a0:	bx	lr
    a5a4:	cmp	r0, #1020	; 0x3fc
    a5a8:	beq	cdf0 <bt_compidtostr@@Base+0x5248>
    a5ac:	bls	cde4 <bt_compidtostr@@Base+0x523c>
    a5b0:	ldr	r0, [pc, #1096]	; aa00 <bt_compidtostr@@Base+0x2e58>
    a5b4:	add	r0, pc, r0
    a5b8:	bx	lr
    a5bc:	ldr	r3, [pc, #1088]	; aa04 <bt_compidtostr@@Base+0x2e5c>
    a5c0:	cmp	r0, r3
    a5c4:	beq	d5a0 <bt_compidtostr@@Base+0x59f8>
    a5c8:	bls	d594 <bt_compidtostr@@Base+0x59ec>
    a5cc:	ldr	r0, [pc, #1076]	; aa08 <bt_compidtostr@@Base+0x2e60>
    a5d0:	add	r0, pc, r0
    a5d4:	bx	lr
    a5d8:	cmp	r0, #500	; 0x1f4
    a5dc:	beq	bd3c <bt_compidtostr@@Base+0x4194>
    a5e0:	bls	bd30 <bt_compidtostr@@Base+0x4188>
    a5e4:	ldr	r0, [pc, #1056]	; aa0c <bt_compidtostr@@Base+0x2e64>
    a5e8:	add	r0, pc, r0
    a5ec:	bx	lr
    a5f0:	cmp	r0, #468	; 0x1d4
    a5f4:	beq	d3c0 <bt_compidtostr@@Base+0x5818>
    a5f8:	bls	d3b4 <bt_compidtostr@@Base+0x580c>
    a5fc:	ldr	r0, [pc, #1036]	; aa10 <bt_compidtostr@@Base+0x2e68>
    a600:	add	r0, pc, r0
    a604:	bx	lr
    a608:	cmp	r0, #200	; 0xc8
    a60c:	beq	c9a0 <bt_compidtostr@@Base+0x4df8>
    a610:	bls	c994 <bt_compidtostr@@Base+0x4dec>
    a614:	ldr	r0, [pc, #1016]	; aa14 <bt_compidtostr@@Base+0x2e6c>
    a618:	add	r0, pc, r0
    a61c:	bx	lr
    a620:	ldr	r3, [pc, #1008]	; aa18 <bt_compidtostr@@Base+0x2e70>
    a624:	cmp	r0, r3
    a628:	beq	d780 <bt_compidtostr@@Base+0x5bd8>
    a62c:	bls	d774 <bt_compidtostr@@Base+0x5bcc>
    a630:	ldr	r0, [pc, #996]	; aa1c <bt_compidtostr@@Base+0x2e74>
    a634:	add	r0, pc, r0
    a638:	bx	lr
    a63c:	cmp	r0, #1012	; 0x3f4
    a640:	beq	c03c <bt_compidtostr@@Base+0x4494>
    a644:	bls	c030 <bt_compidtostr@@Base+0x4488>
    a648:	ldr	r0, [pc, #976]	; aa20 <bt_compidtostr@@Base+0x2e78>
    a64c:	add	r0, pc, r0
    a650:	bx	lr
    a654:	ldr	r3, [pc, #968]	; aa24 <bt_compidtostr@@Base+0x2e7c>
    a658:	cmp	r0, r3
    a65c:	beq	d0c0 <bt_compidtostr@@Base+0x5518>
    a660:	bls	d0b4 <bt_compidtostr@@Base+0x550c>
    a664:	ldr	r0, [pc, #956]	; aa28 <bt_compidtostr@@Base+0x2e80>
    a668:	add	r0, pc, r0
    a66c:	bx	lr
    a670:	cmp	r0, #460	; 0x1cc
    a674:	beq	cd00 <bt_compidtostr@@Base+0x5158>
    a678:	bls	ccf4 <bt_compidtostr@@Base+0x514c>
    a67c:	ldr	r0, [pc, #936]	; aa2c <bt_compidtostr@@Base+0x2e84>
    a680:	add	r0, pc, r0
    a684:	bx	lr
    a688:	cmp	r0, #744	; 0x2e8
    a68c:	beq	d6c0 <bt_compidtostr@@Base+0x5b18>
    a690:	bls	d6b4 <bt_compidtostr@@Base+0x5b0c>
    a694:	ldr	r0, [pc, #916]	; aa30 <bt_compidtostr@@Base+0x2e88>
    a698:	add	r0, pc, r0
    a69c:	bx	lr
    a6a0:	cmp	r0, #167	; 0xa7
    a6a4:	beq	bebc <bt_compidtostr@@Base+0x4314>
    a6a8:	bls	beb0 <bt_compidtostr@@Base+0x4308>
    a6ac:	ldr	r0, [pc, #896]	; aa34 <bt_compidtostr@@Base+0x2e8c>
    a6b0:	add	r0, pc, r0
    a6b4:	bx	lr
    a6b8:	cmp	r0, #159	; 0x9f
    a6bc:	beq	d1e0 <bt_compidtostr@@Base+0x5638>
    a6c0:	bls	d1d4 <bt_compidtostr@@Base+0x562c>
    a6c4:	ldr	r0, [pc, #876]	; aa38 <bt_compidtostr@@Base+0x2e90>
    a6c8:	add	r0, pc, r0
    a6cc:	bx	lr
    a6d0:	ldr	r3, [pc, #868]	; aa3c <bt_compidtostr@@Base+0x2e94>
    a6d4:	cmp	r0, r3
    a6d8:	beq	ca60 <bt_compidtostr@@Base+0x4eb8>
    a6dc:	bls	ca54 <bt_compidtostr@@Base+0x4eac>
    a6e0:	ldr	r0, [pc, #856]	; aa40 <bt_compidtostr@@Base+0x2e98>
    a6e4:	add	r0, pc, r0
    a6e8:	bx	lr
    a6ec:	cmp	r0, #94	; 0x5e
    a6f0:	beq	d900 <bt_compidtostr@@Base+0x5d58>
    a6f4:	bls	d8f4 <bt_compidtostr@@Base+0x5d4c>
    a6f8:	ldr	r0, [pc, #836]	; aa44 <bt_compidtostr@@Base+0x2e9c>
    a6fc:	add	r0, pc, r0
    a700:	bx	lr
    a704:	ldr	r3, [pc, #828]	; aa48 <bt_compidtostr@@Base+0x2ea0>
    a708:	cmp	r0, r3
    a70c:	beq	c0fc <bt_compidtostr@@Base+0x4554>
    a710:	bls	c0f0 <bt_compidtostr@@Base+0x4548>
    a714:	ldr	r0, [pc, #816]	; aa4c <bt_compidtostr@@Base+0x2ea4>
    a718:	add	r0, pc, r0
    a71c:	bx	lr
    a720:	ldr	r3, [pc, #808]	; aa50 <bt_compidtostr@@Base+0x2ea8>
    a724:	cmp	r0, r3
    a728:	beq	d120 <bt_compidtostr@@Base+0x5578>
    a72c:	bls	d114 <bt_compidtostr@@Base+0x556c>
    a730:	ldr	r0, [pc, #796]	; aa54 <bt_compidtostr@@Base+0x2eac>
    a734:	add	r0, pc, r0
    a738:	bx	lr
    a73c:	cmp	r0, #175	; 0xaf
    a740:	beq	cdc0 <bt_compidtostr@@Base+0x5218>
    a744:	bls	cdb4 <bt_compidtostr@@Base+0x520c>
    a748:	ldr	r0, [pc, #776]	; aa58 <bt_compidtostr@@Base+0x2eb0>
    a74c:	add	r0, pc, r0
    a750:	bx	lr
    a754:	cmp	r0, #1004	; 0x3ec
    a758:	beq	d660 <bt_compidtostr@@Base+0x5ab8>
    a75c:	bls	d654 <bt_compidtostr@@Base+0x5aac>
    a760:	ldr	r0, [pc, #756]	; aa5c <bt_compidtostr@@Base+0x2eb4>
    a764:	add	r0, pc, r0
    a768:	bx	lr
    a76c:	cmp	r0, #143	; 0x8f
    a770:	beq	c820 <bt_compidtostr@@Base+0x4c78>
    a774:	bls	c814 <bt_compidtostr@@Base+0x4c6c>
    a778:	ldr	r0, [pc, #736]	; aa60 <bt_compidtostr@@Base+0x2eb8>
    a77c:	add	r0, pc, r0
    a780:	bx	lr
    a784:	ldr	r3, [pc, #728]	; aa64 <bt_compidtostr@@Base+0x2ebc>
    a788:	cmp	r0, r3
    a78c:	beq	d360 <bt_compidtostr@@Base+0x57b8>
    a790:	bls	d354 <bt_compidtostr@@Base+0x57ac>
    a794:	ldr	r0, [pc, #716]	; aa68 <bt_compidtostr@@Base+0x2ec0>
    a798:	add	r0, pc, r0
    a79c:	bx	lr
    a7a0:	andeq	sl, r0, r8, ror #9
    a7a4:	andeq	r9, r0, ip, lsr r3
    a7a8:	andeq	r0, r0, r1, lsr #3
    a7ac:	andeq	fp, r0, r8, ror #7
    a7b0:	andeq	r0, r0, r2, ror #4
    a7b4:	andeq	ip, r0, r4, ror #6
    a7b8:	andeq	r0, r0, lr, asr r2
    a7bc:	andeq	ip, r0, r0, lsl #6
    a7c0:	andeq	r0, r0, r6, ror #4
    a7c4:	andeq	ip, r0, r4, ror r3
    a7c8:	andeq	r9, r0, r4, asr #4
    a7cc:	andeq	sl, r0, r0, asr #7
    a7d0:	muleq	r0, fp, r1
    a7d4:	andeq	fp, r0, r4, lsl #6
    a7d8:			; <UNDEFINED> instruction: 0x0000b7b4
    a7dc:	andeq	lr, r0, r0, lsl #8
    a7e0:	andeq	r0, r0, r6, lsl #7
    a7e4:	andeq	sp, r0, r0, asr #19
    a7e8:	andeq	r0, r0, r2, ror #6
    a7ec:	andeq	sp, r0, ip, asr #13
    a7f0:	andeq	r0, r0, r2, lsl #5
    a7f4:			; <UNDEFINED> instruction: 0x0000c4bc
    a7f8:	andeq	r0, r0, sl, asr r1
    a7fc:	andeq	sl, r0, r0, lsr sp
    a800:	andeq	sl, r0, r0, lsl #1
    a804:	andeq	r9, r0, r0, lsl r7
    a808:	andeq	r9, r0, ip, lsr #8
    a80c:	andeq	ip, r0, r4, lsl #24
    a810:	strdeq	sp, [r0], -r4
    a814:	andeq	r0, r0, sp, lsl r2
    a818:	andeq	fp, r0, r0, ror #23
    a81c:	andeq	sl, r0, r0, asr sl
    a820:	andeq	r0, r0, r3, lsr #7
    a824:			; <UNDEFINED> instruction: 0x0000dab8
    a828:	andeq	r9, r0, r8, lsl #19
    a82c:			; <UNDEFINED> instruction: 0x0000dfb4
    a830:	andeq	fp, r0, r8, asr lr
    a834:	andeq	r9, r0, ip, lsr #24
    a838:	andeq	ip, r0, r0, asr lr
    a83c:	andeq	r0, r0, r9, lsl r1
    a840:	ldrdeq	sl, [r0], -r0
    a844:	ldrdeq	sp, [r0], -ip
    a848:	andeq	r0, r0, r1, lsr #6
    a84c:	andeq	sp, r0, r4, lsr #32
    a850:	andeq	sl, r0, ip, lsl r4
    a854:	muleq	r0, r4, r8
    a858:	andeq	fp, r0, r8, lsr r3
    a85c:			; <UNDEFINED> instruction: 0x0000c7bc
    a860:	muleq	r0, pc, r2	; <UNPREDICTABLE>
    a864:	andeq	ip, r0, r8, lsl #9
    a868:	andeq	r0, r0, sl, ror r3
    a86c:	andeq	sp, r0, r4, lsr #12
    a870:	andeq	ip, r0, r4, lsl ip
    a874:	andeq	r9, r0, r8, lsr r9
    a878:	andeq	r0, r0, sp, lsr r2
    a87c:	muleq	r0, r8, ip
    a880:	andeq	r9, r0, r0, lsr #12
    a884:	andeq	fp, r0, r0, lsr #14
    a888:	andeq	r0, r0, lr, asr #4
    a88c:	andeq	fp, r0, r8, lsl #27
    a890:	andeq	r9, r0, r0, lsr #2
    a894:	andeq	r0, r0, fp, lsr #3
    a898:	andeq	fp, r0, r8, rrx
    a89c:	andeq	ip, r0, r0, ror r8
    a8a0:	andeq	r0, r0, r9, lsl #2
    a8a4:			; <UNDEFINED> instruction: 0x0000a3b8
    a8a8:	andeq	r0, r0, lr, ror r2
    a8ac:	andeq	ip, r0, r8, lsl #2
    a8b0:	andeq	r0, r0, r9, lsr #2
    a8b4:	andeq	sl, r0, r4, asr #11
    a8b8:	andeq	r0, r0, r9, lsr r1
    a8bc:	andeq	sl, r0, r8, lsl r7
    a8c0:	andeq	r0, r0, r2, ror r3
    a8c4:	andeq	sp, r0, r8, lsl #8
    a8c8:	andeq	r0, r0, r1, asr #6
    a8cc:	andeq	sp, r0, r0, asr #32
    a8d0:	ldrdeq	r8, [r0], -r4
    a8d4:	strdeq	sp, [r0], -ip
    a8d8:	strdeq	ip, [r0], -r8
    a8dc:			; <UNDEFINED> instruction: 0x000002bf
    a8e0:	andeq	ip, r0, ip, lsr #10
    a8e4:	andeq	r0, r0, sl, ror #2
    a8e8:	andeq	sl, r0, r8, asr #20
    a8ec:	andeq	ip, r0, r8, ror #21
    a8f0:	strdeq	r9, [r0], -r8
    a8f4:	andeq	r0, r0, r2, lsl #7
    a8f8:	andeq	sp, r0, r8, ror #8
    a8fc:	andeq	r0, r0, r1, lsr r3
    a900:	andeq	ip, r0, r8, asr #28
    a904:	muleq	r0, r3, r1
    a908:	ldrdeq	sl, [r0], -r0
    a90c:	andeq	r0, r0, sl, asr #2
    a910:	andeq	sl, r0, r0, lsl r7
    a914:	andeq	r0, r0, r3, asr #7
    a918:	andeq	sp, r0, ip, lsl #18
    a91c:	andeq	r0, r0, lr, ror #4
    a920:	strdeq	fp, [r0], -r4
    a924:	andeq	r0, r0, sl, asr r3
    a928:	ldrdeq	sp, [r0], -ip
    a92c:	andeq	r0, r0, r6, ror r2
    a930:	andeq	fp, r0, ip, asr #28
    a934:			; <UNDEFINED> instruction: 0x000001bb
    a938:	andeq	sl, r0, ip, asr #30
    a93c:			; <UNDEFINED> instruction: 0x000003b3
    a940:	andeq	sp, r0, ip, lsr r7
    a944:	andeq	r0, r0, r1, lsl r1
    a948:	andeq	sl, r0, r4, ror #3
    a94c:	andeq	r0, r0, r2, asr r3
    a950:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    a954:	andeq	r9, r0, ip, lsr sl
    a958:	andeq	r9, r0, r0, lsr #28
    a95c:	andeq	r9, r0, r0, lsl #31
    a960:	andeq	r0, r0, sp, lsr #4
    a964:	andeq	fp, r0, r8, lsl #15
    a968:	andeq	r9, r0, r0, ror #7
    a96c:	andeq	r0, r0, pc, lsr #5
    a970:	andeq	ip, r0, ip, lsr #3
    a974:	andeq	r0, r0, r7, lsr #5
    a978:	strdeq	ip, [r0], -r8
    a97c:	andeq	r0, r0, r1, lsl r3
    a980:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    a984:	andeq	r0, r0, r4, lsl #8
    a988:	muleq	r0, r4, ip
    a98c:			; <UNDEFINED> instruction: 0x0000b1b0
    a990:	andeq	r0, r0, r2, asr r1
    a994:			; <UNDEFINED> instruction: 0x0000a5b0
    a998:	andeq	r0, r0, lr, ror r1
    a99c:	strdeq	sl, [r0], -r4
    a9a0:	strdeq	r9, [r0], -r8
    a9a4:	andeq	r0, r0, r1, lsr r1
    a9a8:			; <UNDEFINED> instruction: 0x0000a2b4
    a9ac:	andeq	r0, r0, r6, asr r2
    a9b0:			; <UNDEFINED> instruction: 0x0000b9b4
    a9b4:	muleq	r0, r3, r3
    a9b8:	andeq	sp, r0, r0, asr #5
    a9bc:	muleq	r0, r7, r2
    a9c0:	andeq	fp, r0, r0, ror lr
    a9c4:	andeq	sp, r0, r8, asr #15
    a9c8:	ldrdeq	r8, [r0], -r4
    a9cc:			; <UNDEFINED> instruction: 0x000001b3
    a9d0:	andeq	sl, r0, r4, asr #24
    a9d4:	muleq	r0, fp, r3
    a9d8:	ldrdeq	sp, [r0], -r8
    a9dc:	andeq	r0, r0, r2, ror r1
    a9e0:	andeq	sl, r0, ip, lsl r7
    a9e4:	andeq	r0, r0, r2, ror #2
    a9e8:	andeq	sl, r0, ip, lsl #11
    a9ec:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    a9f0:	andeq	r0, r0, r9, lsl r3
    a9f4:	ldrdeq	ip, [r0], -r4
    a9f8:	andeq	ip, r0, r4, ror #10
    a9fc:	andeq	r8, r0, r8, lsl r8
    aa00:	andeq	sp, r0, ip, ror #19
    aa04:	andeq	r0, r0, r5, lsl r2
    aa08:	andeq	fp, r0, r8, lsr r3
    aa0c:	andeq	fp, r0, r8, asr #32
    aa10:	muleq	r0, r0, sp
    aa14:	andeq	r9, r0, ip, lsl #17
    aa18:	andeq	r0, r0, sl, ror #6
    aa1c:	andeq	ip, r0, r0, lsl lr
    aa20:			; <UNDEFINED> instruction: 0x0000d8bc
    aa24:	andeq	r0, r0, fp, lsr #7
    aa28:	andeq	sp, r0, r4, asr #5
    aa2c:	andeq	sl, r0, ip, ror ip
    aa30:	andeq	ip, r0, r0, lsr #7
    aa34:	andeq	r9, r0, ip, lsl r5
    aa38:	andeq	r9, r0, r4, asr r4
    aa3c:	andeq	r0, r0, sp, lsl #4
    aa40:	andeq	fp, r0, r8, ror r1
    aa44:	andeq	r8, r0, r0, lsr lr
    aa48:	andeq	r0, r0, r9, lsr r3
    aa4c:	andeq	ip, r0, r8, asr r9
    aa50:	andeq	r0, r0, r5, lsr #4
    aa54:	strdeq	fp, [r0], -r0
    aa58:	andeq	r9, r0, ip, lsr #10
    aa5c:	andeq	sp, r0, r4, lsl #14
    aa60:	andeq	r9, r0, r0, lsr #4
    aa64:	andeq	r0, r0, r9, lsr #6
    aa68:	ldrdeq	ip, [r0], -r8
    aa6c:	andeq	r8, r0, r8, lsr r5
    aa70:	andeq	r0, r0, r1, lsr #2
    aa74:	strdeq	r9, [r0], -ip
    aa78:	andeq	r0, r0, sl, ror r1
    aa7c:	strdeq	r9, [r0], -r4
    aa80:	muleq	r0, r8, r2
    aa84:	andeq	r0, r0, fp, lsl #3
    aa88:	strdeq	r9, [r0], -r8
    aa8c:	andeq	r8, r0, ip, ror #1
    aa90:	muleq	r0, r4, r3
    aa94:	andeq	r0, r0, r3, lsr #3
    aa98:	andeq	sl, r0, r4, lsl #3
    aa9c:	andeq	r0, r0, pc, lsl #5
    aaa0:	andeq	fp, r0, r0, lsr #8
    aaa4:			; <UNDEFINED> instruction: 0x000002b7
    aaa8:	andeq	fp, r0, r4, lsr #14
    aaac:	andeq	r8, r0, r8, lsr #3
    aab0:	andeq	r0, r0, r5, lsr r2
    aab4:	andeq	sl, r0, r8, asr #25
    aab8:			; <UNDEFINED> instruction: 0x000003bb
    aabc:	muleq	r0, r4, fp
    aac0:	ldrdeq	sl, [r0], -r8
    aac4:	andeq	ip, r0, r4, lsl fp
    aac8:	andeq	sl, r0, ip, lsl #11
    aacc:	muleq	r0, r0, r5
    aad0:	muleq	r0, r4, r5
    aad4:	andeq	fp, r0, ip, lsr #6
    aad8:	andeq	fp, r0, r4, lsr #12
    aadc:	andeq	r8, r0, r8, asr #1
    aae0:	ldrdeq	sl, [r0], -ip
    aae4:	andeq	r8, r0, r4, lsr r3
    aae8:	andeq	r9, r0, r0, lsl r6
    aaec:	andeq	r9, r0, r0, lsl #26
    aaf0:	ldrdeq	r9, [r0], -r4
    aaf4:	andeq	r9, r0, ip, lsl lr
    aaf8:	andeq	r7, r0, r0, lsr pc
    aafc:	andeq	r9, r0, r0, ror #3
    ab00:	andeq	sl, r0, r0
    ab04:	andeq	sl, r0, r4, asr r9
    ab08:	andeq	sl, r0, r4, asr r9
    ab0c:	andeq	r7, r0, ip, lsl lr
    ab10:	andeq	r7, r0, r4, lsr #28
    ab14:	andeq	sl, r0, ip, lsl #27
    ab18:	andeq	fp, r0, r0, lsr #5
    ab1c:	andeq	ip, r0, r0, lsr r3
    ab20:	andeq	ip, r0, r8, lsr #6
    ab24:	andeq	r9, r0, r4, ror #17
    ab28:	andeq	r8, r0, r4, ror lr
    ab2c:	andeq	ip, r0, ip, ror #25
    ab30:	strdeq	ip, [r0], -r8
    ab34:	andeq	fp, r0, r0, ror r3
    ab38:	andeq	sp, r0, r8
    ab3c:	muleq	r0, r8, r3
    ab40:	andeq	sl, r0, r0, lsr #7
    ab44:	andeq	r9, r0, r8, asr #19
    ab48:	andeq	fp, r0, r4, lsl #26
    ab4c:	andeq	r8, r0, ip, lsl r3
    ab50:	andeq	r8, r0, ip, lsr #6
    ab54:	andeq	r7, r0, r8, ror ip
    ab58:			; <UNDEFINED> instruction: 0x0000a7b0
    ab5c:	strdeq	r9, [r0], -r8
    ab60:	strdeq	r9, [r0], -r4
    ab64:	andeq	r8, r0, r0, lsl #4
    ab68:	andeq	ip, r0, r0, ror #12
    ab6c:	andeq	fp, r0, r0, asr #15
    ab70:	ldrdeq	fp, [r0], -r0
    ab74:	strdeq	ip, [r0], -r0
    ab78:	strdeq	ip, [r0], -r8
    ab7c:	andeq	fp, r0, r0, rrx
    ab80:	andeq	fp, r0, ip, asr r0
    ab84:	andeq	r9, r0, r0, lsl #27
    ab88:	andeq	r9, r0, r8, lsl #27
    ab8c:	ldrdeq	sl, [r0], -ip
    ab90:	ldrdeq	sl, [r0], -r8
    ab94:	andeq	sl, r0, r0, lsr #3
    ab98:	andeq	ip, r0, r0, lsr #4
    ab9c:	muleq	r0, ip, r4
    aba0:	andeq	ip, r0, r4, asr #9
    aba4:	strdeq	ip, [r0], -r4
    aba8:	andeq	fp, r0, r8, asr #15
    abac:	andeq	r7, r0, ip, lsl #31
    abb0:	andeq	r7, r0, r8, lsl #31
    abb4:	andeq	r9, r0, r0, lsl #12
    abb8:	andeq	r9, r0, r4, lsl r6
    abbc:	andeq	sl, r0, r4, ror #20
    abc0:	andeq	sl, r0, r0, ror sl
    abc4:	andeq	r8, r0, ip, ror #16
    abc8:	andeq	r8, r0, r8, asr r2
    abcc:	andeq	r8, r0, r4, asr #22
    abd0:	andeq	r8, r0, r4, asr fp
    abd4:	andeq	sl, r0, r0, asr r7
    abd8:	andeq	ip, r0, ip, ror fp
    abdc:	strdeq	r8, [r0], -ip
    abe0:	strdeq	r8, [r0], -ip
    abe4:	andeq	fp, r0, r4, ror ip
    abe8:	ldrdeq	r9, [r0], -ip
    abec:	strdeq	fp, [r0], -ip
    abf0:	andeq	fp, r0, r4, lsl #20
    abf4:			; <UNDEFINED> instruction: 0x0000c8b0
    abf8:			; <UNDEFINED> instruction: 0x0000c8b0
    abfc:	muleq	r0, r4, lr
    ac00:	muleq	r0, r4, lr
    ac04:	andeq	sl, r0, ip, lsl #3
    ac08:	andeq	sl, r0, ip, asr sp
    ac0c:	andeq	r9, r0, ip, asr #24
    ac10:	andeq	r9, r0, r8, ror #24
    ac14:	andeq	fp, r0, r0, lsl #16
    ac18:	andeq	sl, r0, r8, lsr r9
    ac1c:	andeq	ip, r0, r8, lsl #21
    ac20:	muleq	r0, r0, sl
    ac24:	ldrdeq	sl, [r0], -ip
    ac28:	andeq	r7, r0, r0, lsl #28
    ac2c:	andeq	r8, r0, ip, asr #1
    ac30:	ldrdeq	r8, [r0], -r4
    ac34:	ldrdeq	sl, [r0], -r4
    ac38:	ldrdeq	sl, [r0], -r8
    ac3c:	andeq	r8, r0, r4, asr #30
    ac40:	andeq	r8, r0, r8, asr #30
    ac44:	muleq	r0, r8, r4
    ac48:	andeq	sl, r0, r8, ror #27
    ac4c:	ldrdeq	fp, [r0], -r4
    ac50:	ldrdeq	fp, [r0], -r8
    ac54:	andeq	r9, r0, r4, lsl r4
    ac58:	andeq	fp, r0, r0, ror #26
    ac5c:	andeq	r9, r0, r8, lsr r1
    ac60:	andeq	r9, r0, r4, asr #2
    ac64:	strdeq	r8, [r0], -r4
    ac68:	strdeq	r8, [r0], -ip
    ac6c:	andeq	sl, r0, r4, ror #10
    ac70:	andeq	sl, r0, r8, ror #10
    ac74:	andeq	ip, r0, r4, ror r8
    ac78:	andeq	fp, r0, ip, asr #4
    ac7c:			; <UNDEFINED> instruction: 0x00009dbc
    ac80:	andeq	r9, r0, r4, asr #27
    ac84:	andeq	fp, r0, r0, lsr #16
    ac88:	andeq	ip, r0, r4, asr #3
    ac8c:	andeq	ip, r0, r4, lsl ip
    ac90:	andeq	ip, r0, r8, lsl ip
    ac94:	andeq	r9, r0, r8, asr #10
    ac98:	andeq	r9, r0, r4, asr #10
    ac9c:	andeq	r8, r0, r8, lsr #11
    aca0:			; <UNDEFINED> instruction: 0x000085b4
    aca4:	andeq	r9, r0, r8, ror #18
    aca8:	andeq	ip, r0, ip, ror r6
    acac:	andeq	fp, r0, r4, ror r4
    acb0:	andeq	fp, r0, r4, lsl #9
    acb4:	andeq	fp, r0, r8, lsr #27
    acb8:	strdeq	r9, [r0], -r4
    acbc:	andeq	sl, r0, r0, lsr r2
    acc0:	andeq	sl, r0, r4, asr #4
    acc4:	andeq	r8, r0, ip, asr #20
    acc8:	andeq	r8, r0, r8, ror #20
    accc:	andeq	fp, r0, r8, lsr r9
    acd0:	andeq	fp, r0, r4, asr #18
    acd4:	ldrdeq	r8, [r0], -r4
    acd8:	andeq	r8, r0, r8, lsl #16
    acdc:	andeq	r9, r0, r8, asr #9
    ace0:	andeq	r9, r0, ip, asr #9
    ace4:	andeq	r8, r0, ip, lsr sp
    ace8:	andeq	r8, r0, ip, asr #3
    acec:	ldrdeq	ip, [r0], -r8
    acf0:	andeq	ip, r0, r0, ror #5
    acf4:	andeq	fp, r0, r8, lsl #18
    acf8:	andeq	fp, r0, r8, lsl r9
    acfc:	ldrdeq	fp, [r0], -r4
    ad00:	andeq	fp, r0, r0, ror #1
    ad04:			; <UNDEFINED> instruction: 0x000099b0
    ad08:	andeq	sl, r0, ip, lsr r9
    ad0c:	andeq	sl, r0, r4, asr #17
    ad10:	andeq	sl, r0, r4, ror #18
    ad14:	andeq	sl, r0, r0, lsr #18
    ad18:	andeq	sl, r0, r0, lsr #18
    ad1c:			; <UNDEFINED> instruction: 0x0000a8b8
    ad20:	andeq	sl, r0, r8, asr #17
    ad24:	strdeq	r8, [r0], -r4
    ad28:	andeq	r7, r0, r0, asr r8
    ad2c:	andeq	sl, r0, ip, lsl r9
    ad30:	andeq	sl, r0, r0, lsr #18
    ad34:	andeq	r7, r0, r8, ror #15
    ad38:	strdeq	r7, [r0], -ip
    ad3c:	andeq	r8, r0, r0, asr r9
    ad40:	andeq	r8, r0, r0, ror #18
    ad44:	andeq	r7, r0, r4, lsr #15
    ad48:	andeq	r8, r0, r4, lsl r9
    ad4c:	andeq	r9, r0, r8, ror r8
    ad50:	andeq	r9, r0, r0, asr #26
    ad54:	andeq	ip, r0, r4, ror #19
    ad58:	andeq	fp, r0, r0, asr #31
    ad5c:	muleq	r0, r0, ip
    ad60:	andeq	sl, r0, r0, ror #21
    ad64:	andeq	r9, r0, r0, lsr #6
    ad68:			; <UNDEFINED> instruction: 0x000086b8
    ad6c:	strdeq	r7, [r0], -r8
    ad70:	muleq	r0, r8, sl
    ad74:	andeq	fp, r0, r4, lsl #4
    ad78:	andeq	ip, r0, r4, ror #8
    ad7c:	andeq	sl, r0, r0, lsr #4
    ad80:	ldrdeq	r9, [r0], -r8
    ad84:	andeq	ip, r0, r0, lsl #2
    ad88:	andeq	r8, r0, r8, lsr r0
    ad8c:	andeq	ip, r0, ip, lsr #12
    ad90:	andeq	sl, r0, r8, lsl r5
    ad94:	andeq	r8, r0, ip, lsr #5
    ad98:	cmp	r0, #70	; 0x46
    ad9c:	beq	cac0 <bt_compidtostr@@Base+0x4f18>
    ada0:	bls	cab4 <bt_compidtostr@@Base+0x4f0c>
    ada4:	ldr	r0, [pc, #-832]	; aa6c <bt_compidtostr@@Base+0x2ec4>
    ada8:	add	r0, pc, r0
    adac:	bx	lr
    adb0:	ldr	r3, [pc, #-840]	; aa70 <bt_compidtostr@@Base+0x2ec8>
    adb4:	cmp	r0, r3
    adb8:	beq	d840 <bt_compidtostr@@Base+0x5c98>
    adbc:	bls	d834 <bt_compidtostr@@Base+0x5c8c>
    adc0:	ldr	r0, [pc, #-852]	; aa74 <bt_compidtostr@@Base+0x2ecc>
    adc4:	add	r0, pc, r0
    adc8:	bx	lr
    adcc:	ldr	r3, [pc, #-860]	; aa78 <bt_compidtostr@@Base+0x2ed0>
    add0:	cmp	r0, r3
    add4:	beq	cd60 <bt_compidtostr@@Base+0x51b8>
    add8:	bls	cd54 <bt_compidtostr@@Base+0x51ac>
    addc:	ldr	r0, [pc, #-872]	; aa7c <bt_compidtostr@@Base+0x2ed4>
    ade0:	add	r0, pc, r0
    ade4:	bx	lr
    ade8:	cmp	r0, #224	; 0xe0
    adec:	beq	d2a0 <bt_compidtostr@@Base+0x56f8>
    adf0:	bls	d294 <bt_compidtostr@@Base+0x56ec>
    adf4:	ldr	r0, [pc, #-892]	; aa80 <bt_compidtostr@@Base+0x2ed8>
    adf8:	add	r0, pc, r0
    adfc:	bx	lr
    ae00:	ldr	r3, [pc, #-900]	; aa84 <bt_compidtostr@@Base+0x2edc>
    ae04:	cmp	r0, r3
    ae08:	beq	cb20 <bt_compidtostr@@Base+0x4f78>
    ae0c:	bls	cb14 <bt_compidtostr@@Base+0x4f6c>
    ae10:	ldr	r0, [pc, #-912]	; aa88 <bt_compidtostr@@Base+0x2ee0>
    ae14:	add	r0, pc, r0
    ae18:	bx	lr
    ae1c:	cmp	r0, #29
    ae20:	beq	d720 <bt_compidtostr@@Base+0x5b78>
    ae24:	bls	d714 <bt_compidtostr@@Base+0x5b6c>
    ae28:	ldr	r0, [pc, #-932]	; aa8c <bt_compidtostr@@Base+0x2ee4>
    ae2c:	add	r0, pc, r0
    ae30:	bx	lr
    ae34:	cmp	r0, #240	; 0xf0
    ae38:	beq	ce20 <bt_compidtostr@@Base+0x5278>
    ae3c:	bls	ce14 <bt_compidtostr@@Base+0x526c>
    ae40:	ldr	r0, [pc, #-952]	; aa90 <bt_compidtostr@@Base+0x2ee8>
    ae44:	add	r0, pc, r0
    ae48:	bx	lr
    ae4c:	ldr	r3, [pc, #-960]	; aa94 <bt_compidtostr@@Base+0x2eec>
    ae50:	cmp	r0, r3
    ae54:	beq	d420 <bt_compidtostr@@Base+0x5878>
    ae58:	bls	d414 <bt_compidtostr@@Base+0x586c>
    ae5c:	ldr	r0, [pc, #-972]	; aa98 <bt_compidtostr@@Base+0x2ef0>
    ae60:	add	r0, pc, r0
    ae64:	bx	lr
    ae68:	ldr	r3, [pc, #-980]	; aa9c <bt_compidtostr@@Base+0x2ef4>
    ae6c:	cmp	r0, r3
    ae70:	beq	d9c0 <bt_compidtostr@@Base+0x5e18>
    ae74:	bls	d9b4 <bt_compidtostr@@Base+0x5e0c>
    ae78:	ldr	r0, [pc, #-992]	; aaa0 <bt_compidtostr@@Base+0x2ef8>
    ae7c:	add	r0, pc, r0
    ae80:	bx	lr
    ae84:	ldr	r3, [pc, #-1000]	; aaa4 <bt_compidtostr@@Base+0x2efc>
    ae88:	cmp	r0, r3
    ae8c:	beq	d7e0 <bt_compidtostr@@Base+0x5c38>
    ae90:	bls	d7d4 <bt_compidtostr@@Base+0x5c2c>
    ae94:	ldr	r0, [pc, #-1012]	; aaa8 <bt_compidtostr@@Base+0x2f00>
    ae98:	add	r0, pc, r0
    ae9c:	bx	lr
    aea0:	cmp	r0, #45	; 0x2d
    aea4:	beq	d960 <bt_compidtostr@@Base+0x5db8>
    aea8:	bls	d954 <bt_compidtostr@@Base+0x5dac>
    aeac:	ldr	r0, [pc, #-1032]	; aaac <bt_compidtostr@@Base+0x2f04>
    aeb0:	add	r0, pc, r0
    aeb4:	bx	lr
    aeb8:	ldr	r3, [pc, #-1040]	; aab0 <bt_compidtostr@@Base+0x2f08>
    aebc:	cmp	r0, r3
    aec0:	beq	d8a0 <bt_compidtostr@@Base+0x5cf8>
    aec4:	bls	d894 <bt_compidtostr@@Base+0x5cec>
    aec8:	ldr	r0, [pc, #-1052]	; aab4 <bt_compidtostr@@Base+0x2f0c>
    aecc:	add	r0, pc, r0
    aed0:	bx	lr
    aed4:	ldr	r3, [pc, #-1060]	; aab8 <bt_compidtostr@@Base+0x2f10>
    aed8:	cmp	r0, r3
    aedc:	beq	da20 <bt_compidtostr@@Base+0x5e78>
    aee0:	bls	da14 <bt_compidtostr@@Base+0x5e6c>
    aee4:	ldr	r0, [pc, #-1072]	; aabc <bt_compidtostr@@Base+0x2f14>
    aee8:	add	r0, pc, r0
    aeec:	bx	lr
    aef0:	cmp	r0, #484	; 0x1e4
    aef4:	beq	af2c <bt_compidtostr@@Base+0x3384>
    aef8:	bls	af20 <bt_compidtostr@@Base+0x3378>
    aefc:	ldr	r0, [pc, #-1092]	; aac0 <bt_compidtostr@@Base+0x2f18>
    af00:	add	r0, pc, r0
    af04:	bx	lr
    af08:	ldr	r0, [pc, #-1100]	; aac4 <bt_compidtostr@@Base+0x2f1c>
    af0c:	add	r0, pc, r0
    af10:	bx	lr
    af14:	ldr	r0, [pc, #-1108]	; aac8 <bt_compidtostr@@Base+0x2f20>
    af18:	add	r0, pc, r0
    af1c:	bx	lr
    af20:	ldr	r0, [pc, #-1116]	; aacc <bt_compidtostr@@Base+0x2f24>
    af24:	add	r0, pc, r0
    af28:	bx	lr
    af2c:	ldr	r0, [pc, #-1124]	; aad0 <bt_compidtostr@@Base+0x2f28>
    af30:	add	r0, pc, r0
    af34:	bx	lr
    af38:	ldr	r0, [pc, #-1132]	; aad4 <bt_compidtostr@@Base+0x2f2c>
    af3c:	add	r0, pc, r0
    af40:	bx	lr
    af44:	ldr	r0, [pc, #-1140]	; aad8 <bt_compidtostr@@Base+0x2f30>
    af48:	add	r0, pc, r0
    af4c:	bx	lr
    af50:	ldr	r0, [pc, #-1148]	; aadc <bt_compidtostr@@Base+0x2f34>
    af54:	add	r0, pc, r0
    af58:	bx	lr
    af5c:	ldr	r0, [pc, #-1156]	; aae0 <bt_compidtostr@@Base+0x2f38>
    af60:	add	r0, pc, r0
    af64:	bx	lr
    af68:	ldr	r0, [pc, #-1164]	; aae4 <bt_compidtostr@@Base+0x2f3c>
    af6c:	add	r0, pc, r0
    af70:	bx	lr
    af74:	ldr	r0, [pc, #-1172]	; aae8 <bt_compidtostr@@Base+0x2f40>
    af78:	add	r0, pc, r0
    af7c:	bx	lr
    af80:	ldr	r0, [pc, #-1180]	; aaec <bt_compidtostr@@Base+0x2f44>
    af84:	add	r0, pc, r0
    af88:	bx	lr
    af8c:	ldr	r0, [pc, #-1188]	; aaf0 <bt_compidtostr@@Base+0x2f48>
    af90:	add	r0, pc, r0
    af94:	bx	lr
    af98:	ldr	r0, [pc, #-1196]	; aaf4 <bt_compidtostr@@Base+0x2f4c>
    af9c:	add	r0, pc, r0
    afa0:	bx	lr
    afa4:	ldr	r0, [pc, #-1204]	; aaf8 <bt_compidtostr@@Base+0x2f50>
    afa8:	add	r0, pc, r0
    afac:	bx	lr
    afb0:	ldr	r0, [pc, #-1212]	; aafc <bt_compidtostr@@Base+0x2f54>
    afb4:	add	r0, pc, r0
    afb8:	bx	lr
    afbc:	ldr	r0, [pc, #-1220]	; ab00 <bt_compidtostr@@Base+0x2f58>
    afc0:	add	r0, pc, r0
    afc4:	bx	lr
    afc8:	ldr	r0, [pc, #-1228]	; ab04 <bt_compidtostr@@Base+0x2f5c>
    afcc:	add	r0, pc, r0
    afd0:	bx	lr
    afd4:	ldr	r0, [pc, #-1236]	; ab08 <bt_compidtostr@@Base+0x2f60>
    afd8:	add	r0, pc, r0
    afdc:	bx	lr
    afe0:	ldr	r0, [pc, #-1244]	; ab0c <bt_compidtostr@@Base+0x2f64>
    afe4:	add	r0, pc, r0
    afe8:	bx	lr
    afec:	ldr	r0, [pc, #-1252]	; ab10 <bt_compidtostr@@Base+0x2f68>
    aff0:	add	r0, pc, r0
    aff4:	bx	lr
    aff8:	ldr	r0, [pc, #-1260]	; ab14 <bt_compidtostr@@Base+0x2f6c>
    affc:	add	r0, pc, r0
    b000:	bx	lr
    b004:	ldr	r0, [pc, #-1268]	; ab18 <bt_compidtostr@@Base+0x2f70>
    b008:	add	r0, pc, r0
    b00c:	bx	lr
    b010:	ldr	r0, [pc, #-1276]	; ab1c <bt_compidtostr@@Base+0x2f74>
    b014:	add	r0, pc, r0
    b018:	bx	lr
    b01c:	ldr	r0, [pc, #-1284]	; ab20 <bt_compidtostr@@Base+0x2f78>
    b020:	add	r0, pc, r0
    b024:	bx	lr
    b028:	ldr	r0, [pc, #-1292]	; ab24 <bt_compidtostr@@Base+0x2f7c>
    b02c:	add	r0, pc, r0
    b030:	bx	lr
    b034:	ldr	r0, [pc, #-1300]	; ab28 <bt_compidtostr@@Base+0x2f80>
    b038:	add	r0, pc, r0
    b03c:	bx	lr
    b040:	ldr	r0, [pc, #-1308]	; ab2c <bt_compidtostr@@Base+0x2f84>
    b044:	add	r0, pc, r0
    b048:	bx	lr
    b04c:	ldr	r0, [pc, #-1316]	; ab30 <bt_compidtostr@@Base+0x2f88>
    b050:	add	r0, pc, r0
    b054:	bx	lr
    b058:	ldr	r0, [pc, #-1324]	; ab34 <bt_compidtostr@@Base+0x2f8c>
    b05c:	add	r0, pc, r0
    b060:	bx	lr
    b064:	ldr	r0, [pc, #-1332]	; ab38 <bt_compidtostr@@Base+0x2f90>
    b068:	add	r0, pc, r0
    b06c:	bx	lr
    b070:	ldr	r0, [pc, #-1340]	; ab3c <bt_compidtostr@@Base+0x2f94>
    b074:	add	r0, pc, r0
    b078:	bx	lr
    b07c:	ldr	r0, [pc, #-1348]	; ab40 <bt_compidtostr@@Base+0x2f98>
    b080:	add	r0, pc, r0
    b084:	bx	lr
    b088:	ldr	r0, [pc, #-1356]	; ab44 <bt_compidtostr@@Base+0x2f9c>
    b08c:	add	r0, pc, r0
    b090:	bx	lr
    b094:	ldr	r0, [pc, #-1364]	; ab48 <bt_compidtostr@@Base+0x2fa0>
    b098:	add	r0, pc, r0
    b09c:	bx	lr
    b0a0:	ldr	r0, [pc, #-1372]	; ab4c <bt_compidtostr@@Base+0x2fa4>
    b0a4:	add	r0, pc, r0
    b0a8:	bx	lr
    b0ac:	ldr	r0, [pc, #-1380]	; ab50 <bt_compidtostr@@Base+0x2fa8>
    b0b0:	add	r0, pc, r0
    b0b4:	bx	lr
    b0b8:	ldr	r0, [pc, #-1388]	; ab54 <bt_compidtostr@@Base+0x2fac>
    b0bc:	add	r0, pc, r0
    b0c0:	bx	lr
    b0c4:	ldr	r0, [pc, #-1396]	; ab58 <bt_compidtostr@@Base+0x2fb0>
    b0c8:	add	r0, pc, r0
    b0cc:	bx	lr
    b0d0:	ldr	r0, [pc, #-1404]	; ab5c <bt_compidtostr@@Base+0x2fb4>
    b0d4:	add	r0, pc, r0
    b0d8:	bx	lr
    b0dc:	ldr	r0, [pc, #-1412]	; ab60 <bt_compidtostr@@Base+0x2fb8>
    b0e0:	add	r0, pc, r0
    b0e4:	bx	lr
    b0e8:	ldr	r0, [pc, #-1420]	; ab64 <bt_compidtostr@@Base+0x2fbc>
    b0ec:	add	r0, pc, r0
    b0f0:	bx	lr
    b0f4:	ldr	r0, [pc, #-1428]	; ab68 <bt_compidtostr@@Base+0x2fc0>
    b0f8:	add	r0, pc, r0
    b0fc:	bx	lr
    b100:	ldr	r0, [pc, #-1436]	; ab6c <bt_compidtostr@@Base+0x2fc4>
    b104:	add	r0, pc, r0
    b108:	bx	lr
    b10c:	ldr	r0, [pc, #-1444]	; ab70 <bt_compidtostr@@Base+0x2fc8>
    b110:	add	r0, pc, r0
    b114:	bx	lr
    b118:	ldr	r0, [pc, #-1452]	; ab74 <bt_compidtostr@@Base+0x2fcc>
    b11c:	add	r0, pc, r0
    b120:	bx	lr
    b124:	ldr	r0, [pc, #-1460]	; ab78 <bt_compidtostr@@Base+0x2fd0>
    b128:	add	r0, pc, r0
    b12c:	bx	lr
    b130:	ldr	r0, [pc, #-1468]	; ab7c <bt_compidtostr@@Base+0x2fd4>
    b134:	add	r0, pc, r0
    b138:	bx	lr
    b13c:	ldr	r0, [pc, #-1476]	; ab80 <bt_compidtostr@@Base+0x2fd8>
    b140:	add	r0, pc, r0
    b144:	bx	lr
    b148:	ldr	r0, [pc, #-1484]	; ab84 <bt_compidtostr@@Base+0x2fdc>
    b14c:	add	r0, pc, r0
    b150:	bx	lr
    b154:	ldr	r0, [pc, #-1492]	; ab88 <bt_compidtostr@@Base+0x2fe0>
    b158:	add	r0, pc, r0
    b15c:	bx	lr
    b160:	ldr	r0, [pc, #-1500]	; ab8c <bt_compidtostr@@Base+0x2fe4>
    b164:	add	r0, pc, r0
    b168:	bx	lr
    b16c:	ldr	r0, [pc, #-1508]	; ab90 <bt_compidtostr@@Base+0x2fe8>
    b170:	add	r0, pc, r0
    b174:	bx	lr
    b178:	ldr	r0, [pc, #-1516]	; ab94 <bt_compidtostr@@Base+0x2fec>
    b17c:	add	r0, pc, r0
    b180:	bx	lr
    b184:	ldr	r0, [pc, #-1524]	; ab98 <bt_compidtostr@@Base+0x2ff0>
    b188:	add	r0, pc, r0
    b18c:	bx	lr
    b190:	ldr	r0, [pc, #-1532]	; ab9c <bt_compidtostr@@Base+0x2ff4>
    b194:	add	r0, pc, r0
    b198:	bx	lr
    b19c:	ldr	r0, [pc, #-1540]	; aba0 <bt_compidtostr@@Base+0x2ff8>
    b1a0:	add	r0, pc, r0
    b1a4:	bx	lr
    b1a8:	ldr	r0, [pc, #-1548]	; aba4 <bt_compidtostr@@Base+0x2ffc>
    b1ac:	add	r0, pc, r0
    b1b0:	bx	lr
    b1b4:	ldr	r0, [pc, #-1556]	; aba8 <bt_compidtostr@@Base+0x3000>
    b1b8:	add	r0, pc, r0
    b1bc:	bx	lr
    b1c0:	ldr	r0, [pc, #-1564]	; abac <bt_compidtostr@@Base+0x3004>
    b1c4:	add	r0, pc, r0
    b1c8:	bx	lr
    b1cc:	ldr	r0, [pc, #-1572]	; abb0 <bt_compidtostr@@Base+0x3008>
    b1d0:	add	r0, pc, r0
    b1d4:	bx	lr
    b1d8:	ldr	r0, [pc, #-1580]	; abb4 <bt_compidtostr@@Base+0x300c>
    b1dc:	add	r0, pc, r0
    b1e0:	bx	lr
    b1e4:	ldr	r0, [pc, #-1588]	; abb8 <bt_compidtostr@@Base+0x3010>
    b1e8:	add	r0, pc, r0
    b1ec:	bx	lr
    b1f0:	ldr	r0, [pc, #-1596]	; abbc <bt_compidtostr@@Base+0x3014>
    b1f4:	add	r0, pc, r0
    b1f8:	bx	lr
    b1fc:	ldr	r0, [pc, #-1604]	; abc0 <bt_compidtostr@@Base+0x3018>
    b200:	add	r0, pc, r0
    b204:	bx	lr
    b208:	ldr	r0, [pc, #-1612]	; abc4 <bt_compidtostr@@Base+0x301c>
    b20c:	add	r0, pc, r0
    b210:	bx	lr
    b214:	ldr	r0, [pc, #-1620]	; abc8 <bt_compidtostr@@Base+0x3020>
    b218:	add	r0, pc, r0
    b21c:	bx	lr
    b220:	ldr	r0, [pc, #-1628]	; abcc <bt_compidtostr@@Base+0x3024>
    b224:	add	r0, pc, r0
    b228:	bx	lr
    b22c:	ldr	r0, [pc, #-1636]	; abd0 <bt_compidtostr@@Base+0x3028>
    b230:	add	r0, pc, r0
    b234:	bx	lr
    b238:	ldr	r0, [pc, #-1644]	; abd4 <bt_compidtostr@@Base+0x302c>
    b23c:	add	r0, pc, r0
    b240:	bx	lr
    b244:	ldr	r0, [pc, #-1652]	; abd8 <bt_compidtostr@@Base+0x3030>
    b248:	add	r0, pc, r0
    b24c:	bx	lr
    b250:	ldr	r0, [pc, #-1660]	; abdc <bt_compidtostr@@Base+0x3034>
    b254:	add	r0, pc, r0
    b258:	bx	lr
    b25c:	ldr	r0, [pc, #-1668]	; abe0 <bt_compidtostr@@Base+0x3038>
    b260:	add	r0, pc, r0
    b264:	bx	lr
    b268:	ldr	r0, [pc, #-1676]	; abe4 <bt_compidtostr@@Base+0x303c>
    b26c:	add	r0, pc, r0
    b270:	bx	lr
    b274:	ldr	r0, [pc, #-1684]	; abe8 <bt_compidtostr@@Base+0x3040>
    b278:	add	r0, pc, r0
    b27c:	bx	lr
    b280:	ldr	r0, [pc, #-1692]	; abec <bt_compidtostr@@Base+0x3044>
    b284:	add	r0, pc, r0
    b288:	bx	lr
    b28c:	ldr	r0, [pc, #-1700]	; abf0 <bt_compidtostr@@Base+0x3048>
    b290:	add	r0, pc, r0
    b294:	bx	lr
    b298:	ldr	r0, [pc, #-1708]	; abf4 <bt_compidtostr@@Base+0x304c>
    b29c:	add	r0, pc, r0
    b2a0:	bx	lr
    b2a4:	ldr	r0, [pc, #-1716]	; abf8 <bt_compidtostr@@Base+0x3050>
    b2a8:	add	r0, pc, r0
    b2ac:	bx	lr
    b2b0:	ldr	r0, [pc, #-1724]	; abfc <bt_compidtostr@@Base+0x3054>
    b2b4:	add	r0, pc, r0
    b2b8:	bx	lr
    b2bc:	ldr	r0, [pc, #-1732]	; ac00 <bt_compidtostr@@Base+0x3058>
    b2c0:	add	r0, pc, r0
    b2c4:	bx	lr
    b2c8:	ldr	r0, [pc, #-1740]	; ac04 <bt_compidtostr@@Base+0x305c>
    b2cc:	add	r0, pc, r0
    b2d0:	bx	lr
    b2d4:	ldr	r0, [pc, #-1748]	; ac08 <bt_compidtostr@@Base+0x3060>
    b2d8:	add	r0, pc, r0
    b2dc:	bx	lr
    b2e0:	ldr	r0, [pc, #-1756]	; ac0c <bt_compidtostr@@Base+0x3064>
    b2e4:	add	r0, pc, r0
    b2e8:	bx	lr
    b2ec:	ldr	r0, [pc, #-1764]	; ac10 <bt_compidtostr@@Base+0x3068>
    b2f0:	add	r0, pc, r0
    b2f4:	bx	lr
    b2f8:	ldr	r0, [pc, #-1772]	; ac14 <bt_compidtostr@@Base+0x306c>
    b2fc:	add	r0, pc, r0
    b300:	bx	lr
    b304:	ldr	r0, [pc, #-1780]	; ac18 <bt_compidtostr@@Base+0x3070>
    b308:	add	r0, pc, r0
    b30c:	bx	lr
    b310:	ldr	r0, [pc, #-1788]	; ac1c <bt_compidtostr@@Base+0x3074>
    b314:	add	r0, pc, r0
    b318:	bx	lr
    b31c:	ldr	r0, [pc, #-1796]	; ac20 <bt_compidtostr@@Base+0x3078>
    b320:	add	r0, pc, r0
    b324:	bx	lr
    b328:	ldr	r0, [pc, #-1804]	; ac24 <bt_compidtostr@@Base+0x307c>
    b32c:	add	r0, pc, r0
    b330:	bx	lr
    b334:	ldr	r0, [pc, #-1812]	; ac28 <bt_compidtostr@@Base+0x3080>
    b338:	add	r0, pc, r0
    b33c:	bx	lr
    b340:	ldr	r0, [pc, #-1820]	; ac2c <bt_compidtostr@@Base+0x3084>
    b344:	add	r0, pc, r0
    b348:	bx	lr
    b34c:	ldr	r0, [pc, #-1828]	; ac30 <bt_compidtostr@@Base+0x3088>
    b350:	add	r0, pc, r0
    b354:	bx	lr
    b358:	ldr	r0, [pc, #-1836]	; ac34 <bt_compidtostr@@Base+0x308c>
    b35c:	add	r0, pc, r0
    b360:	bx	lr
    b364:	ldr	r0, [pc, #-1844]	; ac38 <bt_compidtostr@@Base+0x3090>
    b368:	add	r0, pc, r0
    b36c:	bx	lr
    b370:	ldr	r0, [pc, #-1852]	; ac3c <bt_compidtostr@@Base+0x3094>
    b374:	add	r0, pc, r0
    b378:	bx	lr
    b37c:	ldr	r0, [pc, #-1860]	; ac40 <bt_compidtostr@@Base+0x3098>
    b380:	add	r0, pc, r0
    b384:	bx	lr
    b388:	ldr	r0, [pc, #-1868]	; ac44 <bt_compidtostr@@Base+0x309c>
    b38c:	add	r0, pc, r0
    b390:	bx	lr
    b394:	ldr	r0, [pc, #-1876]	; ac48 <bt_compidtostr@@Base+0x30a0>
    b398:	add	r0, pc, r0
    b39c:	bx	lr
    b3a0:	ldr	r0, [pc, #-1884]	; ac4c <bt_compidtostr@@Base+0x30a4>
    b3a4:	add	r0, pc, r0
    b3a8:	bx	lr
    b3ac:	ldr	r0, [pc, #-1892]	; ac50 <bt_compidtostr@@Base+0x30a8>
    b3b0:	add	r0, pc, r0
    b3b4:	bx	lr
    b3b8:	ldr	r0, [pc, #-1900]	; ac54 <bt_compidtostr@@Base+0x30ac>
    b3bc:	add	r0, pc, r0
    b3c0:	bx	lr
    b3c4:	ldr	r0, [pc, #-1908]	; ac58 <bt_compidtostr@@Base+0x30b0>
    b3c8:	add	r0, pc, r0
    b3cc:	bx	lr
    b3d0:	ldr	r0, [pc, #-1916]	; ac5c <bt_compidtostr@@Base+0x30b4>
    b3d4:	add	r0, pc, r0
    b3d8:	bx	lr
    b3dc:	ldr	r0, [pc, #-1924]	; ac60 <bt_compidtostr@@Base+0x30b8>
    b3e0:	add	r0, pc, r0
    b3e4:	bx	lr
    b3e8:	ldr	r0, [pc, #-1932]	; ac64 <bt_compidtostr@@Base+0x30bc>
    b3ec:	add	r0, pc, r0
    b3f0:	bx	lr
    b3f4:	ldr	r0, [pc, #-1940]	; ac68 <bt_compidtostr@@Base+0x30c0>
    b3f8:	add	r0, pc, r0
    b3fc:	bx	lr
    b400:	ldr	r0, [pc, #-1948]	; ac6c <bt_compidtostr@@Base+0x30c4>
    b404:	add	r0, pc, r0
    b408:	bx	lr
    b40c:	ldr	r0, [pc, #-1956]	; ac70 <bt_compidtostr@@Base+0x30c8>
    b410:	add	r0, pc, r0
    b414:	bx	lr
    b418:	ldr	r0, [pc, #-1964]	; ac74 <bt_compidtostr@@Base+0x30cc>
    b41c:	add	r0, pc, r0
    b420:	bx	lr
    b424:	ldr	r0, [pc, #-1972]	; ac78 <bt_compidtostr@@Base+0x30d0>
    b428:	add	r0, pc, r0
    b42c:	bx	lr
    b430:	ldr	r0, [pc, #-1980]	; ac7c <bt_compidtostr@@Base+0x30d4>
    b434:	add	r0, pc, r0
    b438:	bx	lr
    b43c:	ldr	r0, [pc, #-1988]	; ac80 <bt_compidtostr@@Base+0x30d8>
    b440:	add	r0, pc, r0
    b444:	bx	lr
    b448:	ldr	r0, [pc, #-1996]	; ac84 <bt_compidtostr@@Base+0x30dc>
    b44c:	add	r0, pc, r0
    b450:	bx	lr
    b454:	ldr	r0, [pc, #-2004]	; ac88 <bt_compidtostr@@Base+0x30e0>
    b458:	add	r0, pc, r0
    b45c:	bx	lr
    b460:	ldr	r0, [pc, #-2012]	; ac8c <bt_compidtostr@@Base+0x30e4>
    b464:	add	r0, pc, r0
    b468:	bx	lr
    b46c:	ldr	r0, [pc, #-2020]	; ac90 <bt_compidtostr@@Base+0x30e8>
    b470:	add	r0, pc, r0
    b474:	bx	lr
    b478:	ldr	r0, [pc, #-2028]	; ac94 <bt_compidtostr@@Base+0x30ec>
    b47c:	add	r0, pc, r0
    b480:	bx	lr
    b484:	ldr	r0, [pc, #-2036]	; ac98 <bt_compidtostr@@Base+0x30f0>
    b488:	add	r0, pc, r0
    b48c:	bx	lr
    b490:	ldr	r0, [pc, #-2044]	; ac9c <bt_compidtostr@@Base+0x30f4>
    b494:	add	r0, pc, r0
    b498:	bx	lr
    b49c:	ldr	r0, [pc, #-2052]	; aca0 <bt_compidtostr@@Base+0x30f8>
    b4a0:	add	r0, pc, r0
    b4a4:	bx	lr
    b4a8:	ldr	r0, [pc, #-2060]	; aca4 <bt_compidtostr@@Base+0x30fc>
    b4ac:	add	r0, pc, r0
    b4b0:	bx	lr
    b4b4:	ldr	r0, [pc, #-2068]	; aca8 <bt_compidtostr@@Base+0x3100>
    b4b8:	add	r0, pc, r0
    b4bc:	bx	lr
    b4c0:	ldr	r0, [pc, #-2076]	; acac <bt_compidtostr@@Base+0x3104>
    b4c4:	add	r0, pc, r0
    b4c8:	bx	lr
    b4cc:	ldr	r0, [pc, #-2084]	; acb0 <bt_compidtostr@@Base+0x3108>
    b4d0:	add	r0, pc, r0
    b4d4:	bx	lr
    b4d8:	ldr	r0, [pc, #-2092]	; acb4 <bt_compidtostr@@Base+0x310c>
    b4dc:	add	r0, pc, r0
    b4e0:	bx	lr
    b4e4:	ldr	r0, [pc, #-2100]	; acb8 <bt_compidtostr@@Base+0x3110>
    b4e8:	add	r0, pc, r0
    b4ec:	bx	lr
    b4f0:	ldr	r0, [pc, #-2108]	; acbc <bt_compidtostr@@Base+0x3114>
    b4f4:	add	r0, pc, r0
    b4f8:	bx	lr
    b4fc:	ldr	r0, [pc, #-2116]	; acc0 <bt_compidtostr@@Base+0x3118>
    b500:	add	r0, pc, r0
    b504:	bx	lr
    b508:	ldr	r0, [pc, #-2124]	; acc4 <bt_compidtostr@@Base+0x311c>
    b50c:	add	r0, pc, r0
    b510:	bx	lr
    b514:	ldr	r0, [pc, #-2132]	; acc8 <bt_compidtostr@@Base+0x3120>
    b518:	add	r0, pc, r0
    b51c:	bx	lr
    b520:	ldr	r0, [pc, #-2140]	; accc <bt_compidtostr@@Base+0x3124>
    b524:	add	r0, pc, r0
    b528:	bx	lr
    b52c:	ldr	r0, [pc, #-2148]	; acd0 <bt_compidtostr@@Base+0x3128>
    b530:	add	r0, pc, r0
    b534:	bx	lr
    b538:	ldr	r0, [pc, #-2156]	; acd4 <bt_compidtostr@@Base+0x312c>
    b53c:	add	r0, pc, r0
    b540:	bx	lr
    b544:	ldr	r0, [pc, #-2164]	; acd8 <bt_compidtostr@@Base+0x3130>
    b548:	add	r0, pc, r0
    b54c:	bx	lr
    b550:	ldr	r0, [pc, #-2172]	; acdc <bt_compidtostr@@Base+0x3134>
    b554:	add	r0, pc, r0
    b558:	bx	lr
    b55c:	ldr	r0, [pc, #-2180]	; ace0 <bt_compidtostr@@Base+0x3138>
    b560:	add	r0, pc, r0
    b564:	bx	lr
    b568:	ldr	r0, [pc, #-2188]	; ace4 <bt_compidtostr@@Base+0x313c>
    b56c:	add	r0, pc, r0
    b570:	bx	lr
    b574:	ldr	r0, [pc, #-2196]	; ace8 <bt_compidtostr@@Base+0x3140>
    b578:	add	r0, pc, r0
    b57c:	bx	lr
    b580:	ldr	r0, [pc, #-2204]	; acec <bt_compidtostr@@Base+0x3144>
    b584:	add	r0, pc, r0
    b588:	bx	lr
    b58c:	ldr	r0, [pc, #-2212]	; acf0 <bt_compidtostr@@Base+0x3148>
    b590:	add	r0, pc, r0
    b594:	bx	lr
    b598:	ldr	r0, [pc, #-2220]	; acf4 <bt_compidtostr@@Base+0x314c>
    b59c:	add	r0, pc, r0
    b5a0:	bx	lr
    b5a4:	ldr	r0, [pc, #-2228]	; acf8 <bt_compidtostr@@Base+0x3150>
    b5a8:	add	r0, pc, r0
    b5ac:	bx	lr
    b5b0:	ldr	r0, [pc, #-2236]	; acfc <bt_compidtostr@@Base+0x3154>
    b5b4:	add	r0, pc, r0
    b5b8:	bx	lr
    b5bc:	ldr	r0, [pc, #-2244]	; ad00 <bt_compidtostr@@Base+0x3158>
    b5c0:	add	r0, pc, r0
    b5c4:	bx	lr
    b5c8:	ldr	r0, [pc, #-2252]	; ad04 <bt_compidtostr@@Base+0x315c>
    b5cc:	add	r0, pc, r0
    b5d0:	bx	lr
    b5d4:	ldr	r0, [pc, #-2260]	; ad08 <bt_compidtostr@@Base+0x3160>
    b5d8:	add	r0, pc, r0
    b5dc:	bx	lr
    b5e0:	ldr	r0, [pc, #-2268]	; ad0c <bt_compidtostr@@Base+0x3164>
    b5e4:	add	r0, pc, r0
    b5e8:	bx	lr
    b5ec:	ldr	r0, [pc, #-2276]	; ad10 <bt_compidtostr@@Base+0x3168>
    b5f0:	add	r0, pc, r0
    b5f4:	bx	lr
    b5f8:	ldr	r0, [pc, #-2284]	; ad14 <bt_compidtostr@@Base+0x316c>
    b5fc:	add	r0, pc, r0
    b600:	bx	lr
    b604:	ldr	r0, [pc, #-2292]	; ad18 <bt_compidtostr@@Base+0x3170>
    b608:	add	r0, pc, r0
    b60c:	bx	lr
    b610:	ldr	r0, [pc, #-2300]	; ad1c <bt_compidtostr@@Base+0x3174>
    b614:	add	r0, pc, r0
    b618:	bx	lr
    b61c:	ldr	r0, [pc, #-2308]	; ad20 <bt_compidtostr@@Base+0x3178>
    b620:	add	r0, pc, r0
    b624:	bx	lr
    b628:	ldr	r0, [pc, #-2316]	; ad24 <bt_compidtostr@@Base+0x317c>
    b62c:	add	r0, pc, r0
    b630:	bx	lr
    b634:	ldr	r0, [pc, #-2324]	; ad28 <bt_compidtostr@@Base+0x3180>
    b638:	add	r0, pc, r0
    b63c:	bx	lr
    b640:	ldr	r0, [pc, #-2332]	; ad2c <bt_compidtostr@@Base+0x3184>
    b644:	add	r0, pc, r0
    b648:	bx	lr
    b64c:	ldr	r0, [pc, #-2340]	; ad30 <bt_compidtostr@@Base+0x3188>
    b650:	add	r0, pc, r0
    b654:	bx	lr
    b658:	ldr	r0, [pc, #-2348]	; ad34 <bt_compidtostr@@Base+0x318c>
    b65c:	add	r0, pc, r0
    b660:	bx	lr
    b664:	ldr	r0, [pc, #-2356]	; ad38 <bt_compidtostr@@Base+0x3190>
    b668:	add	r0, pc, r0
    b66c:	bx	lr
    b670:	ldr	r0, [pc, #-2364]	; ad3c <bt_compidtostr@@Base+0x3194>
    b674:	add	r0, pc, r0
    b678:	bx	lr
    b67c:	ldr	r0, [pc, #-2372]	; ad40 <bt_compidtostr@@Base+0x3198>
    b680:	add	r0, pc, r0
    b684:	bx	lr
    b688:	ldr	r0, [pc, #-2380]	; ad44 <bt_compidtostr@@Base+0x319c>
    b68c:	add	r0, pc, r0
    b690:	bx	lr
    b694:	ldr	r0, [pc, #-2388]	; ad48 <bt_compidtostr@@Base+0x31a0>
    b698:	add	r0, pc, r0
    b69c:	bx	lr
    b6a0:	ldr	r0, [pc, #-2396]	; ad4c <bt_compidtostr@@Base+0x31a4>
    b6a4:	add	r0, pc, r0
    b6a8:	bx	lr
    b6ac:	ldr	r0, [pc, #-2404]	; ad50 <bt_compidtostr@@Base+0x31a8>
    b6b0:	add	r0, pc, r0
    b6b4:	bx	lr
    b6b8:	ldr	r0, [pc, #-2412]	; ad54 <bt_compidtostr@@Base+0x31ac>
    b6bc:	add	r0, pc, r0
    b6c0:	bx	lr
    b6c4:	ldr	r0, [pc, #-2420]	; ad58 <bt_compidtostr@@Base+0x31b0>
    b6c8:	add	r0, pc, r0
    b6cc:	bx	lr
    b6d0:	ldr	r0, [pc, #-2428]	; ad5c <bt_compidtostr@@Base+0x31b4>
    b6d4:	add	r0, pc, r0
    b6d8:	bx	lr
    b6dc:	ldr	r0, [pc, #-2436]	; ad60 <bt_compidtostr@@Base+0x31b8>
    b6e0:	add	r0, pc, r0
    b6e4:	bx	lr
    b6e8:	ldr	r0, [pc, #-2444]	; ad64 <bt_compidtostr@@Base+0x31bc>
    b6ec:	add	r0, pc, r0
    b6f0:	bx	lr
    b6f4:	ldr	r0, [pc, #-2452]	; ad68 <bt_compidtostr@@Base+0x31c0>
    b6f8:	add	r0, pc, r0
    b6fc:	bx	lr
    b700:	ldr	r0, [pc, #-2460]	; ad6c <bt_compidtostr@@Base+0x31c4>
    b704:	add	r0, pc, r0
    b708:	bx	lr
    b70c:	ldr	r0, [pc, #-2468]	; ad70 <bt_compidtostr@@Base+0x31c8>
    b710:	add	r0, pc, r0
    b714:	bx	lr
    b718:	ldr	r0, [pc, #-2476]	; ad74 <bt_compidtostr@@Base+0x31cc>
    b71c:	add	r0, pc, r0
    b720:	bx	lr
    b724:	ldr	r0, [pc, #-2484]	; ad78 <bt_compidtostr@@Base+0x31d0>
    b728:	add	r0, pc, r0
    b72c:	bx	lr
    b730:	ldr	r0, [pc, #-2492]	; ad7c <bt_compidtostr@@Base+0x31d4>
    b734:	add	r0, pc, r0
    b738:	bx	lr
    b73c:	ldr	r0, [pc, #-2500]	; ad80 <bt_compidtostr@@Base+0x31d8>
    b740:	add	r0, pc, r0
    b744:	bx	lr
    b748:	ldr	r0, [pc, #-2508]	; ad84 <bt_compidtostr@@Base+0x31dc>
    b74c:	add	r0, pc, r0
    b750:	bx	lr
    b754:	ldr	r0, [pc, #-2516]	; ad88 <bt_compidtostr@@Base+0x31e0>
    b758:	add	r0, pc, r0
    b75c:	bx	lr
    b760:	ldr	r0, [pc, #-2524]	; ad8c <bt_compidtostr@@Base+0x31e4>
    b764:	add	r0, pc, r0
    b768:	bx	lr
    b76c:	ldr	r0, [pc, #-2532]	; ad90 <bt_compidtostr@@Base+0x31e8>
    b770:	add	r0, pc, r0
    b774:	bx	lr
    b778:	ldr	r0, [pc, #-2540]	; ad94 <bt_compidtostr@@Base+0x31ec>
    b77c:	add	r0, pc, r0
    b780:	bx	lr
    b784:	ldr	r0, [pc, #2440]	; c114 <bt_compidtostr@@Base+0x456c>
    b788:	add	r0, pc, r0
    b78c:	bx	lr
    b790:	ldr	r0, [pc, #2432]	; c118 <bt_compidtostr@@Base+0x4570>
    b794:	add	r0, pc, r0
    b798:	bx	lr
    b79c:	ldr	r0, [pc, #2424]	; c11c <bt_compidtostr@@Base+0x4574>
    b7a0:	add	r0, pc, r0
    b7a4:	bx	lr
    b7a8:	ldr	r0, [pc, #2416]	; c120 <bt_compidtostr@@Base+0x4578>
    b7ac:	add	r0, pc, r0
    b7b0:	bx	lr
    b7b4:	ldr	r0, [pc, #2408]	; c124 <bt_compidtostr@@Base+0x457c>
    b7b8:	add	r0, pc, r0
    b7bc:	bx	lr
    b7c0:	ldr	r0, [pc, #2400]	; c128 <bt_compidtostr@@Base+0x4580>
    b7c4:	add	r0, pc, r0
    b7c8:	bx	lr
    b7cc:	ldr	r0, [pc, #2392]	; c12c <bt_compidtostr@@Base+0x4584>
    b7d0:	add	r0, pc, r0
    b7d4:	bx	lr
    b7d8:	ldr	r0, [pc, #2384]	; c130 <bt_compidtostr@@Base+0x4588>
    b7dc:	add	r0, pc, r0
    b7e0:	bx	lr
    b7e4:	ldr	r0, [pc, #2376]	; c134 <bt_compidtostr@@Base+0x458c>
    b7e8:	add	r0, pc, r0
    b7ec:	bx	lr
    b7f0:	ldr	r0, [pc, #2368]	; c138 <bt_compidtostr@@Base+0x4590>
    b7f4:	add	r0, pc, r0
    b7f8:	bx	lr
    b7fc:	ldr	r0, [pc, #2360]	; c13c <bt_compidtostr@@Base+0x4594>
    b800:	add	r0, pc, r0
    b804:	bx	lr
    b808:	ldr	r0, [pc, #2352]	; c140 <bt_compidtostr@@Base+0x4598>
    b80c:	add	r0, pc, r0
    b810:	bx	lr
    b814:	ldr	r0, [pc, #2344]	; c144 <bt_compidtostr@@Base+0x459c>
    b818:	add	r0, pc, r0
    b81c:	bx	lr
    b820:	ldr	r0, [pc, #2336]	; c148 <bt_compidtostr@@Base+0x45a0>
    b824:	add	r0, pc, r0
    b828:	bx	lr
    b82c:	ldr	r0, [pc, #2328]	; c14c <bt_compidtostr@@Base+0x45a4>
    b830:	add	r0, pc, r0
    b834:	bx	lr
    b838:	ldr	r0, [pc, #2320]	; c150 <bt_compidtostr@@Base+0x45a8>
    b83c:	add	r0, pc, r0
    b840:	bx	lr
    b844:	ldr	r0, [pc, #2312]	; c154 <bt_compidtostr@@Base+0x45ac>
    b848:	add	r0, pc, r0
    b84c:	bx	lr
    b850:	ldr	r0, [pc, #2304]	; c158 <bt_compidtostr@@Base+0x45b0>
    b854:	add	r0, pc, r0
    b858:	bx	lr
    b85c:	ldr	r0, [pc, #2296]	; c15c <bt_compidtostr@@Base+0x45b4>
    b860:	add	r0, pc, r0
    b864:	bx	lr
    b868:	ldr	r0, [pc, #2288]	; c160 <bt_compidtostr@@Base+0x45b8>
    b86c:	add	r0, pc, r0
    b870:	bx	lr
    b874:	ldr	r0, [pc, #2280]	; c164 <bt_compidtostr@@Base+0x45bc>
    b878:	add	r0, pc, r0
    b87c:	bx	lr
    b880:	ldr	r0, [pc, #2272]	; c168 <bt_compidtostr@@Base+0x45c0>
    b884:	add	r0, pc, r0
    b888:	bx	lr
    b88c:	ldr	r0, [pc, #2264]	; c16c <bt_compidtostr@@Base+0x45c4>
    b890:	add	r0, pc, r0
    b894:	bx	lr
    b898:	ldr	r0, [pc, #2256]	; c170 <bt_compidtostr@@Base+0x45c8>
    b89c:	add	r0, pc, r0
    b8a0:	bx	lr
    b8a4:	ldr	r0, [pc, #2248]	; c174 <bt_compidtostr@@Base+0x45cc>
    b8a8:	add	r0, pc, r0
    b8ac:	bx	lr
    b8b0:	ldr	r0, [pc, #2240]	; c178 <bt_compidtostr@@Base+0x45d0>
    b8b4:	add	r0, pc, r0
    b8b8:	bx	lr
    b8bc:	ldr	r0, [pc, #2232]	; c17c <bt_compidtostr@@Base+0x45d4>
    b8c0:	add	r0, pc, r0
    b8c4:	bx	lr
    b8c8:	ldr	r0, [pc, #2224]	; c180 <bt_compidtostr@@Base+0x45d8>
    b8cc:	add	r0, pc, r0
    b8d0:	bx	lr
    b8d4:	ldr	r0, [pc, #2216]	; c184 <bt_compidtostr@@Base+0x45dc>
    b8d8:	add	r0, pc, r0
    b8dc:	bx	lr
    b8e0:	ldr	r0, [pc, #2208]	; c188 <bt_compidtostr@@Base+0x45e0>
    b8e4:	add	r0, pc, r0
    b8e8:	bx	lr
    b8ec:	ldr	r0, [pc, #2200]	; c18c <bt_compidtostr@@Base+0x45e4>
    b8f0:	add	r0, pc, r0
    b8f4:	bx	lr
    b8f8:	ldr	r0, [pc, #2192]	; c190 <bt_compidtostr@@Base+0x45e8>
    b8fc:	add	r0, pc, r0
    b900:	bx	lr
    b904:	ldr	r0, [pc, #2184]	; c194 <bt_compidtostr@@Base+0x45ec>
    b908:	add	r0, pc, r0
    b90c:	bx	lr
    b910:	ldr	r0, [pc, #2176]	; c198 <bt_compidtostr@@Base+0x45f0>
    b914:	add	r0, pc, r0
    b918:	bx	lr
    b91c:	ldr	r0, [pc, #2168]	; c19c <bt_compidtostr@@Base+0x45f4>
    b920:	add	r0, pc, r0
    b924:	bx	lr
    b928:	ldr	r0, [pc, #2160]	; c1a0 <bt_compidtostr@@Base+0x45f8>
    b92c:	add	r0, pc, r0
    b930:	bx	lr
    b934:	ldr	r0, [pc, #2152]	; c1a4 <bt_compidtostr@@Base+0x45fc>
    b938:	add	r0, pc, r0
    b93c:	bx	lr
    b940:	ldr	r0, [pc, #2144]	; c1a8 <bt_compidtostr@@Base+0x4600>
    b944:	add	r0, pc, r0
    b948:	bx	lr
    b94c:	ldr	r0, [pc, #2136]	; c1ac <bt_compidtostr@@Base+0x4604>
    b950:	add	r0, pc, r0
    b954:	bx	lr
    b958:	ldr	r0, [pc, #2128]	; c1b0 <bt_compidtostr@@Base+0x4608>
    b95c:	add	r0, pc, r0
    b960:	bx	lr
    b964:	ldr	r0, [pc, #2120]	; c1b4 <bt_compidtostr@@Base+0x460c>
    b968:	add	r0, pc, r0
    b96c:	bx	lr
    b970:	ldr	r0, [pc, #2112]	; c1b8 <bt_compidtostr@@Base+0x4610>
    b974:	add	r0, pc, r0
    b978:	bx	lr
    b97c:	ldr	r0, [pc, #2104]	; c1bc <bt_compidtostr@@Base+0x4614>
    b980:	add	r0, pc, r0
    b984:	bx	lr
    b988:	ldr	r0, [pc, #2096]	; c1c0 <bt_compidtostr@@Base+0x4618>
    b98c:	add	r0, pc, r0
    b990:	bx	lr
    b994:	ldr	r0, [pc, #2088]	; c1c4 <bt_compidtostr@@Base+0x461c>
    b998:	add	r0, pc, r0
    b99c:	bx	lr
    b9a0:	ldr	r0, [pc, #2080]	; c1c8 <bt_compidtostr@@Base+0x4620>
    b9a4:	add	r0, pc, r0
    b9a8:	bx	lr
    b9ac:	ldr	r0, [pc, #2072]	; c1cc <bt_compidtostr@@Base+0x4624>
    b9b0:	add	r0, pc, r0
    b9b4:	bx	lr
    b9b8:	ldr	r0, [pc, #2064]	; c1d0 <bt_compidtostr@@Base+0x4628>
    b9bc:	add	r0, pc, r0
    b9c0:	bx	lr
    b9c4:	ldr	r0, [pc, #2056]	; c1d4 <bt_compidtostr@@Base+0x462c>
    b9c8:	add	r0, pc, r0
    b9cc:	bx	lr
    b9d0:	ldr	r0, [pc, #2048]	; c1d8 <bt_compidtostr@@Base+0x4630>
    b9d4:	add	r0, pc, r0
    b9d8:	bx	lr
    b9dc:	ldr	r0, [pc, #2040]	; c1dc <bt_compidtostr@@Base+0x4634>
    b9e0:	add	r0, pc, r0
    b9e4:	bx	lr
    b9e8:	ldr	r0, [pc, #2032]	; c1e0 <bt_compidtostr@@Base+0x4638>
    b9ec:	add	r0, pc, r0
    b9f0:	bx	lr
    b9f4:	ldr	r0, [pc, #2024]	; c1e4 <bt_compidtostr@@Base+0x463c>
    b9f8:	add	r0, pc, r0
    b9fc:	bx	lr
    ba00:	ldr	r0, [pc, #2016]	; c1e8 <bt_compidtostr@@Base+0x4640>
    ba04:	add	r0, pc, r0
    ba08:	bx	lr
    ba0c:	ldr	r0, [pc, #2008]	; c1ec <bt_compidtostr@@Base+0x4644>
    ba10:	add	r0, pc, r0
    ba14:	bx	lr
    ba18:	ldr	r0, [pc, #2000]	; c1f0 <bt_compidtostr@@Base+0x4648>
    ba1c:	add	r0, pc, r0
    ba20:	bx	lr
    ba24:	ldr	r0, [pc, #1992]	; c1f4 <bt_compidtostr@@Base+0x464c>
    ba28:	add	r0, pc, r0
    ba2c:	bx	lr
    ba30:	ldr	r0, [pc, #1984]	; c1f8 <bt_compidtostr@@Base+0x4650>
    ba34:	add	r0, pc, r0
    ba38:	bx	lr
    ba3c:	ldr	r0, [pc, #1976]	; c1fc <bt_compidtostr@@Base+0x4654>
    ba40:	add	r0, pc, r0
    ba44:	bx	lr
    ba48:	ldr	r0, [pc, #1968]	; c200 <bt_compidtostr@@Base+0x4658>
    ba4c:	add	r0, pc, r0
    ba50:	bx	lr
    ba54:	ldr	r0, [pc, #1960]	; c204 <bt_compidtostr@@Base+0x465c>
    ba58:	add	r0, pc, r0
    ba5c:	bx	lr
    ba60:	ldr	r0, [pc, #1952]	; c208 <bt_compidtostr@@Base+0x4660>
    ba64:	add	r0, pc, r0
    ba68:	bx	lr
    ba6c:	ldr	r0, [pc, #1944]	; c20c <bt_compidtostr@@Base+0x4664>
    ba70:	add	r0, pc, r0
    ba74:	bx	lr
    ba78:	ldr	r0, [pc, #1936]	; c210 <bt_compidtostr@@Base+0x4668>
    ba7c:	add	r0, pc, r0
    ba80:	bx	lr
    ba84:	ldr	r0, [pc, #1928]	; c214 <bt_compidtostr@@Base+0x466c>
    ba88:	add	r0, pc, r0
    ba8c:	bx	lr
    ba90:	ldr	r0, [pc, #1920]	; c218 <bt_compidtostr@@Base+0x4670>
    ba94:	add	r0, pc, r0
    ba98:	bx	lr
    ba9c:	ldr	r0, [pc, #1912]	; c21c <bt_compidtostr@@Base+0x4674>
    baa0:	add	r0, pc, r0
    baa4:	bx	lr
    baa8:	ldr	r0, [pc, #1904]	; c220 <bt_compidtostr@@Base+0x4678>
    baac:	add	r0, pc, r0
    bab0:	bx	lr
    bab4:	ldr	r0, [pc, #1896]	; c224 <bt_compidtostr@@Base+0x467c>
    bab8:	add	r0, pc, r0
    babc:	bx	lr
    bac0:	ldr	r0, [pc, #1888]	; c228 <bt_compidtostr@@Base+0x4680>
    bac4:	add	r0, pc, r0
    bac8:	bx	lr
    bacc:	ldr	r0, [pc, #1880]	; c22c <bt_compidtostr@@Base+0x4684>
    bad0:	add	r0, pc, r0
    bad4:	bx	lr
    bad8:	ldr	r0, [pc, #1872]	; c230 <bt_compidtostr@@Base+0x4688>
    badc:	add	r0, pc, r0
    bae0:	bx	lr
    bae4:	ldr	r0, [pc, #1864]	; c234 <bt_compidtostr@@Base+0x468c>
    bae8:	add	r0, pc, r0
    baec:	bx	lr
    baf0:	ldr	r0, [pc, #1856]	; c238 <bt_compidtostr@@Base+0x4690>
    baf4:	add	r0, pc, r0
    baf8:	bx	lr
    bafc:	ldr	r0, [pc, #1848]	; c23c <bt_compidtostr@@Base+0x4694>
    bb00:	add	r0, pc, r0
    bb04:	bx	lr
    bb08:	ldr	r0, [pc, #1840]	; c240 <bt_compidtostr@@Base+0x4698>
    bb0c:	add	r0, pc, r0
    bb10:	bx	lr
    bb14:	ldr	r0, [pc, #1832]	; c244 <bt_compidtostr@@Base+0x469c>
    bb18:	add	r0, pc, r0
    bb1c:	bx	lr
    bb20:	ldr	r0, [pc, #1824]	; c248 <bt_compidtostr@@Base+0x46a0>
    bb24:	add	r0, pc, r0
    bb28:	bx	lr
    bb2c:	ldr	r0, [pc, #1816]	; c24c <bt_compidtostr@@Base+0x46a4>
    bb30:	add	r0, pc, r0
    bb34:	bx	lr
    bb38:	ldr	r0, [pc, #1808]	; c250 <bt_compidtostr@@Base+0x46a8>
    bb3c:	add	r0, pc, r0
    bb40:	bx	lr
    bb44:	ldr	r0, [pc, #1800]	; c254 <bt_compidtostr@@Base+0x46ac>
    bb48:	add	r0, pc, r0
    bb4c:	bx	lr
    bb50:	ldr	r0, [pc, #1792]	; c258 <bt_compidtostr@@Base+0x46b0>
    bb54:	add	r0, pc, r0
    bb58:	bx	lr
    bb5c:	ldr	r0, [pc, #1784]	; c25c <bt_compidtostr@@Base+0x46b4>
    bb60:	add	r0, pc, r0
    bb64:	bx	lr
    bb68:	ldr	r0, [pc, #1776]	; c260 <bt_compidtostr@@Base+0x46b8>
    bb6c:	add	r0, pc, r0
    bb70:	bx	lr
    bb74:	ldr	r0, [pc, #1768]	; c264 <bt_compidtostr@@Base+0x46bc>
    bb78:	add	r0, pc, r0
    bb7c:	bx	lr
    bb80:	ldr	r0, [pc, #1760]	; c268 <bt_compidtostr@@Base+0x46c0>
    bb84:	add	r0, pc, r0
    bb88:	bx	lr
    bb8c:	ldr	r0, [pc, #1752]	; c26c <bt_compidtostr@@Base+0x46c4>
    bb90:	add	r0, pc, r0
    bb94:	bx	lr
    bb98:	ldr	r0, [pc, #1744]	; c270 <bt_compidtostr@@Base+0x46c8>
    bb9c:	add	r0, pc, r0
    bba0:	bx	lr
    bba4:	ldr	r0, [pc, #1736]	; c274 <bt_compidtostr@@Base+0x46cc>
    bba8:	add	r0, pc, r0
    bbac:	bx	lr
    bbb0:	ldr	r0, [pc, #1728]	; c278 <bt_compidtostr@@Base+0x46d0>
    bbb4:	add	r0, pc, r0
    bbb8:	bx	lr
    bbbc:	ldr	r0, [pc, #1720]	; c27c <bt_compidtostr@@Base+0x46d4>
    bbc0:	add	r0, pc, r0
    bbc4:	bx	lr
    bbc8:	ldr	r0, [pc, #1712]	; c280 <bt_compidtostr@@Base+0x46d8>
    bbcc:	add	r0, pc, r0
    bbd0:	bx	lr
    bbd4:	ldr	r0, [pc, #1704]	; c284 <bt_compidtostr@@Base+0x46dc>
    bbd8:	add	r0, pc, r0
    bbdc:	bx	lr
    bbe0:	ldr	r0, [pc, #1696]	; c288 <bt_compidtostr@@Base+0x46e0>
    bbe4:	add	r0, pc, r0
    bbe8:	bx	lr
    bbec:	ldr	r0, [pc, #1688]	; c28c <bt_compidtostr@@Base+0x46e4>
    bbf0:	add	r0, pc, r0
    bbf4:	bx	lr
    bbf8:	ldr	r0, [pc, #1680]	; c290 <bt_compidtostr@@Base+0x46e8>
    bbfc:	add	r0, pc, r0
    bc00:	bx	lr
    bc04:	ldr	r0, [pc, #1672]	; c294 <bt_compidtostr@@Base+0x46ec>
    bc08:	add	r0, pc, r0
    bc0c:	bx	lr
    bc10:	ldr	r0, [pc, #1664]	; c298 <bt_compidtostr@@Base+0x46f0>
    bc14:	add	r0, pc, r0
    bc18:	bx	lr
    bc1c:	ldr	r0, [pc, #1656]	; c29c <bt_compidtostr@@Base+0x46f4>
    bc20:	add	r0, pc, r0
    bc24:	bx	lr
    bc28:	ldr	r0, [pc, #1648]	; c2a0 <bt_compidtostr@@Base+0x46f8>
    bc2c:	add	r0, pc, r0
    bc30:	bx	lr
    bc34:	ldr	r0, [pc, #1640]	; c2a4 <bt_compidtostr@@Base+0x46fc>
    bc38:	add	r0, pc, r0
    bc3c:	bx	lr
    bc40:	ldr	r0, [pc, #1632]	; c2a8 <bt_compidtostr@@Base+0x4700>
    bc44:	add	r0, pc, r0
    bc48:	bx	lr
    bc4c:	ldr	r0, [pc, #1624]	; c2ac <bt_compidtostr@@Base+0x4704>
    bc50:	add	r0, pc, r0
    bc54:	bx	lr
    bc58:	ldr	r0, [pc, #1616]	; c2b0 <bt_compidtostr@@Base+0x4708>
    bc5c:	add	r0, pc, r0
    bc60:	bx	lr
    bc64:	ldr	r0, [pc, #1608]	; c2b4 <bt_compidtostr@@Base+0x470c>
    bc68:	add	r0, pc, r0
    bc6c:	bx	lr
    bc70:	ldr	r0, [pc, #1600]	; c2b8 <bt_compidtostr@@Base+0x4710>
    bc74:	add	r0, pc, r0
    bc78:	bx	lr
    bc7c:	ldr	r0, [pc, #1592]	; c2bc <bt_compidtostr@@Base+0x4714>
    bc80:	add	r0, pc, r0
    bc84:	bx	lr
    bc88:	ldr	r0, [pc, #1584]	; c2c0 <bt_compidtostr@@Base+0x4718>
    bc8c:	add	r0, pc, r0
    bc90:	bx	lr
    bc94:	ldr	r0, [pc, #1576]	; c2c4 <bt_compidtostr@@Base+0x471c>
    bc98:	add	r0, pc, r0
    bc9c:	bx	lr
    bca0:	ldr	r0, [pc, #1568]	; c2c8 <bt_compidtostr@@Base+0x4720>
    bca4:	add	r0, pc, r0
    bca8:	bx	lr
    bcac:	ldr	r0, [pc, #1560]	; c2cc <bt_compidtostr@@Base+0x4724>
    bcb0:	add	r0, pc, r0
    bcb4:	bx	lr
    bcb8:	ldr	r0, [pc, #1552]	; c2d0 <bt_compidtostr@@Base+0x4728>
    bcbc:	add	r0, pc, r0
    bcc0:	bx	lr
    bcc4:	ldr	r0, [pc, #1544]	; c2d4 <bt_compidtostr@@Base+0x472c>
    bcc8:	add	r0, pc, r0
    bccc:	bx	lr
    bcd0:	ldr	r0, [pc, #1536]	; c2d8 <bt_compidtostr@@Base+0x4730>
    bcd4:	add	r0, pc, r0
    bcd8:	bx	lr
    bcdc:	ldr	r0, [pc, #1528]	; c2dc <bt_compidtostr@@Base+0x4734>
    bce0:	add	r0, pc, r0
    bce4:	bx	lr
    bce8:	ldr	r0, [pc, #1520]	; c2e0 <bt_compidtostr@@Base+0x4738>
    bcec:	add	r0, pc, r0
    bcf0:	bx	lr
    bcf4:	ldr	r0, [pc, #1512]	; c2e4 <bt_compidtostr@@Base+0x473c>
    bcf8:	add	r0, pc, r0
    bcfc:	bx	lr
    bd00:	ldr	r0, [pc, #1504]	; c2e8 <bt_compidtostr@@Base+0x4740>
    bd04:	add	r0, pc, r0
    bd08:	bx	lr
    bd0c:	ldr	r0, [pc, #1496]	; c2ec <bt_compidtostr@@Base+0x4744>
    bd10:	add	r0, pc, r0
    bd14:	bx	lr
    bd18:	ldr	r0, [pc, #1488]	; c2f0 <bt_compidtostr@@Base+0x4748>
    bd1c:	add	r0, pc, r0
    bd20:	bx	lr
    bd24:	ldr	r0, [pc, #1480]	; c2f4 <bt_compidtostr@@Base+0x474c>
    bd28:	add	r0, pc, r0
    bd2c:	bx	lr
    bd30:	ldr	r0, [pc, #1472]	; c2f8 <bt_compidtostr@@Base+0x4750>
    bd34:	add	r0, pc, r0
    bd38:	bx	lr
    bd3c:	ldr	r0, [pc, #1464]	; c2fc <bt_compidtostr@@Base+0x4754>
    bd40:	add	r0, pc, r0
    bd44:	bx	lr
    bd48:	ldr	r0, [pc, #1456]	; c300 <bt_compidtostr@@Base+0x4758>
    bd4c:	add	r0, pc, r0
    bd50:	bx	lr
    bd54:	ldr	r0, [pc, #1448]	; c304 <bt_compidtostr@@Base+0x475c>
    bd58:	add	r0, pc, r0
    bd5c:	bx	lr
    bd60:	ldr	r0, [pc, #1440]	; c308 <bt_compidtostr@@Base+0x4760>
    bd64:	add	r0, pc, r0
    bd68:	bx	lr
    bd6c:	ldr	r0, [pc, #1432]	; c30c <bt_compidtostr@@Base+0x4764>
    bd70:	add	r0, pc, r0
    bd74:	bx	lr
    bd78:	ldr	r0, [pc, #1424]	; c310 <bt_compidtostr@@Base+0x4768>
    bd7c:	add	r0, pc, r0
    bd80:	bx	lr
    bd84:	ldr	r0, [pc, #1416]	; c314 <bt_compidtostr@@Base+0x476c>
    bd88:	add	r0, pc, r0
    bd8c:	bx	lr
    bd90:	ldr	r0, [pc, #1408]	; c318 <bt_compidtostr@@Base+0x4770>
    bd94:	add	r0, pc, r0
    bd98:	bx	lr
    bd9c:	ldr	r0, [pc, #1400]	; c31c <bt_compidtostr@@Base+0x4774>
    bda0:	add	r0, pc, r0
    bda4:	bx	lr
    bda8:	ldr	r0, [pc, #1392]	; c320 <bt_compidtostr@@Base+0x4778>
    bdac:	add	r0, pc, r0
    bdb0:	bx	lr
    bdb4:	ldr	r0, [pc, #1384]	; c324 <bt_compidtostr@@Base+0x477c>
    bdb8:	add	r0, pc, r0
    bdbc:	bx	lr
    bdc0:	ldr	r0, [pc, #1376]	; c328 <bt_compidtostr@@Base+0x4780>
    bdc4:	add	r0, pc, r0
    bdc8:	bx	lr
    bdcc:	ldr	r0, [pc, #1368]	; c32c <bt_compidtostr@@Base+0x4784>
    bdd0:	add	r0, pc, r0
    bdd4:	bx	lr
    bdd8:	ldr	r0, [pc, #1360]	; c330 <bt_compidtostr@@Base+0x4788>
    bddc:	add	r0, pc, r0
    bde0:	bx	lr
    bde4:	ldr	r0, [pc, #1352]	; c334 <bt_compidtostr@@Base+0x478c>
    bde8:	add	r0, pc, r0
    bdec:	bx	lr
    bdf0:	ldr	r0, [pc, #1344]	; c338 <bt_compidtostr@@Base+0x4790>
    bdf4:	add	r0, pc, r0
    bdf8:	bx	lr
    bdfc:	ldr	r0, [pc, #1336]	; c33c <bt_compidtostr@@Base+0x4794>
    be00:	add	r0, pc, r0
    be04:	bx	lr
    be08:	ldr	r0, [pc, #1328]	; c340 <bt_compidtostr@@Base+0x4798>
    be0c:	add	r0, pc, r0
    be10:	bx	lr
    be14:	ldr	r0, [pc, #1320]	; c344 <bt_compidtostr@@Base+0x479c>
    be18:	add	r0, pc, r0
    be1c:	bx	lr
    be20:	ldr	r0, [pc, #1312]	; c348 <bt_compidtostr@@Base+0x47a0>
    be24:	add	r0, pc, r0
    be28:	bx	lr
    be2c:	ldr	r0, [pc, #1304]	; c34c <bt_compidtostr@@Base+0x47a4>
    be30:	add	r0, pc, r0
    be34:	bx	lr
    be38:	ldr	r0, [pc, #1296]	; c350 <bt_compidtostr@@Base+0x47a8>
    be3c:	add	r0, pc, r0
    be40:	bx	lr
    be44:	ldr	r0, [pc, #1288]	; c354 <bt_compidtostr@@Base+0x47ac>
    be48:	add	r0, pc, r0
    be4c:	bx	lr
    be50:	ldr	r0, [pc, #1280]	; c358 <bt_compidtostr@@Base+0x47b0>
    be54:	add	r0, pc, r0
    be58:	bx	lr
    be5c:	ldr	r0, [pc, #1272]	; c35c <bt_compidtostr@@Base+0x47b4>
    be60:	add	r0, pc, r0
    be64:	bx	lr
    be68:	ldr	r0, [pc, #1264]	; c360 <bt_compidtostr@@Base+0x47b8>
    be6c:	add	r0, pc, r0
    be70:	bx	lr
    be74:	ldr	r0, [pc, #1256]	; c364 <bt_compidtostr@@Base+0x47bc>
    be78:	add	r0, pc, r0
    be7c:	bx	lr
    be80:	ldr	r0, [pc, #1248]	; c368 <bt_compidtostr@@Base+0x47c0>
    be84:	add	r0, pc, r0
    be88:	bx	lr
    be8c:	ldr	r0, [pc, #1240]	; c36c <bt_compidtostr@@Base+0x47c4>
    be90:	add	r0, pc, r0
    be94:	bx	lr
    be98:	ldr	r0, [pc, #1232]	; c370 <bt_compidtostr@@Base+0x47c8>
    be9c:	add	r0, pc, r0
    bea0:	bx	lr
    bea4:	ldr	r0, [pc, #1224]	; c374 <bt_compidtostr@@Base+0x47cc>
    bea8:	add	r0, pc, r0
    beac:	bx	lr
    beb0:	ldr	r0, [pc, #1216]	; c378 <bt_compidtostr@@Base+0x47d0>
    beb4:	add	r0, pc, r0
    beb8:	bx	lr
    bebc:	ldr	r0, [pc, #1208]	; c37c <bt_compidtostr@@Base+0x47d4>
    bec0:	add	r0, pc, r0
    bec4:	bx	lr
    bec8:	ldr	r0, [pc, #1200]	; c380 <bt_compidtostr@@Base+0x47d8>
    becc:	add	r0, pc, r0
    bed0:	bx	lr
    bed4:	ldr	r0, [pc, #1192]	; c384 <bt_compidtostr@@Base+0x47dc>
    bed8:	add	r0, pc, r0
    bedc:	bx	lr
    bee0:	ldr	r0, [pc, #1184]	; c388 <bt_compidtostr@@Base+0x47e0>
    bee4:	add	r0, pc, r0
    bee8:	bx	lr
    beec:	ldr	r0, [pc, #1176]	; c38c <bt_compidtostr@@Base+0x47e4>
    bef0:	add	r0, pc, r0
    bef4:	bx	lr
    bef8:	ldr	r0, [pc, #1168]	; c390 <bt_compidtostr@@Base+0x47e8>
    befc:	add	r0, pc, r0
    bf00:	bx	lr
    bf04:	ldr	r0, [pc, #1160]	; c394 <bt_compidtostr@@Base+0x47ec>
    bf08:	add	r0, pc, r0
    bf0c:	bx	lr
    bf10:	ldr	r0, [pc, #1152]	; c398 <bt_compidtostr@@Base+0x47f0>
    bf14:	add	r0, pc, r0
    bf18:	bx	lr
    bf1c:	ldr	r0, [pc, #1144]	; c39c <bt_compidtostr@@Base+0x47f4>
    bf20:	add	r0, pc, r0
    bf24:	bx	lr
    bf28:	ldr	r0, [pc, #1136]	; c3a0 <bt_compidtostr@@Base+0x47f8>
    bf2c:	add	r0, pc, r0
    bf30:	bx	lr
    bf34:	ldr	r0, [pc, #1128]	; c3a4 <bt_compidtostr@@Base+0x47fc>
    bf38:	add	r0, pc, r0
    bf3c:	bx	lr
    bf40:	ldr	r0, [pc, #1120]	; c3a8 <bt_compidtostr@@Base+0x4800>
    bf44:	add	r0, pc, r0
    bf48:	bx	lr
    bf4c:	ldr	r0, [pc, #1112]	; c3ac <bt_compidtostr@@Base+0x4804>
    bf50:	add	r0, pc, r0
    bf54:	bx	lr
    bf58:	ldr	r0, [pc, #1104]	; c3b0 <bt_compidtostr@@Base+0x4808>
    bf5c:	add	r0, pc, r0
    bf60:	bx	lr
    bf64:	ldr	r0, [pc, #1096]	; c3b4 <bt_compidtostr@@Base+0x480c>
    bf68:	add	r0, pc, r0
    bf6c:	bx	lr
    bf70:	ldr	r0, [pc, #1088]	; c3b8 <bt_compidtostr@@Base+0x4810>
    bf74:	add	r0, pc, r0
    bf78:	bx	lr
    bf7c:	ldr	r0, [pc, #1080]	; c3bc <bt_compidtostr@@Base+0x4814>
    bf80:	add	r0, pc, r0
    bf84:	bx	lr
    bf88:	ldr	r0, [pc, #1072]	; c3c0 <bt_compidtostr@@Base+0x4818>
    bf8c:	add	r0, pc, r0
    bf90:	bx	lr
    bf94:	ldr	r0, [pc, #1064]	; c3c4 <bt_compidtostr@@Base+0x481c>
    bf98:	add	r0, pc, r0
    bf9c:	bx	lr
    bfa0:	ldr	r0, [pc, #1056]	; c3c8 <bt_compidtostr@@Base+0x4820>
    bfa4:	add	r0, pc, r0
    bfa8:	bx	lr
    bfac:	ldr	r0, [pc, #1048]	; c3cc <bt_compidtostr@@Base+0x4824>
    bfb0:	add	r0, pc, r0
    bfb4:	bx	lr
    bfb8:	ldr	r0, [pc, #1040]	; c3d0 <bt_compidtostr@@Base+0x4828>
    bfbc:	add	r0, pc, r0
    bfc0:	bx	lr
    bfc4:	ldr	r0, [pc, #1032]	; c3d4 <bt_compidtostr@@Base+0x482c>
    bfc8:	add	r0, pc, r0
    bfcc:	bx	lr
    bfd0:	ldr	r0, [pc, #1024]	; c3d8 <bt_compidtostr@@Base+0x4830>
    bfd4:	add	r0, pc, r0
    bfd8:	bx	lr
    bfdc:	ldr	r0, [pc, #1016]	; c3dc <bt_compidtostr@@Base+0x4834>
    bfe0:	add	r0, pc, r0
    bfe4:	bx	lr
    bfe8:	ldr	r0, [pc, #1008]	; c3e0 <bt_compidtostr@@Base+0x4838>
    bfec:	add	r0, pc, r0
    bff0:	bx	lr
    bff4:	ldr	r0, [pc, #1000]	; c3e4 <bt_compidtostr@@Base+0x483c>
    bff8:	add	r0, pc, r0
    bffc:	bx	lr
    c000:	ldr	r0, [pc, #992]	; c3e8 <bt_compidtostr@@Base+0x4840>
    c004:	add	r0, pc, r0
    c008:	bx	lr
    c00c:	ldr	r0, [pc, #984]	; c3ec <bt_compidtostr@@Base+0x4844>
    c010:	add	r0, pc, r0
    c014:	bx	lr
    c018:	ldr	r0, [pc, #976]	; c3f0 <bt_compidtostr@@Base+0x4848>
    c01c:	add	r0, pc, r0
    c020:	bx	lr
    c024:	ldr	r0, [pc, #968]	; c3f4 <bt_compidtostr@@Base+0x484c>
    c028:	add	r0, pc, r0
    c02c:	bx	lr
    c030:	ldr	r0, [pc, #960]	; c3f8 <bt_compidtostr@@Base+0x4850>
    c034:	add	r0, pc, r0
    c038:	bx	lr
    c03c:	ldr	r0, [pc, #952]	; c3fc <bt_compidtostr@@Base+0x4854>
    c040:	add	r0, pc, r0
    c044:	bx	lr
    c048:	ldr	r0, [pc, #944]	; c400 <bt_compidtostr@@Base+0x4858>
    c04c:	add	r0, pc, r0
    c050:	bx	lr
    c054:	ldr	r0, [pc, #936]	; c404 <bt_compidtostr@@Base+0x485c>
    c058:	add	r0, pc, r0
    c05c:	bx	lr
    c060:	ldr	r0, [pc, #928]	; c408 <bt_compidtostr@@Base+0x4860>
    c064:	add	r0, pc, r0
    c068:	bx	lr
    c06c:	ldr	r0, [pc, #920]	; c40c <bt_compidtostr@@Base+0x4864>
    c070:	add	r0, pc, r0
    c074:	bx	lr
    c078:	ldr	r0, [pc, #912]	; c410 <bt_compidtostr@@Base+0x4868>
    c07c:	add	r0, pc, r0
    c080:	bx	lr
    c084:	ldr	r0, [pc, #904]	; c414 <bt_compidtostr@@Base+0x486c>
    c088:	add	r0, pc, r0
    c08c:	bx	lr
    c090:	ldr	r0, [pc, #896]	; c418 <bt_compidtostr@@Base+0x4870>
    c094:	add	r0, pc, r0
    c098:	bx	lr
    c09c:	ldr	r0, [pc, #888]	; c41c <bt_compidtostr@@Base+0x4874>
    c0a0:	add	r0, pc, r0
    c0a4:	bx	lr
    c0a8:	ldr	r0, [pc, #880]	; c420 <bt_compidtostr@@Base+0x4878>
    c0ac:	add	r0, pc, r0
    c0b0:	bx	lr
    c0b4:	ldr	r0, [pc, #872]	; c424 <bt_compidtostr@@Base+0x487c>
    c0b8:	add	r0, pc, r0
    c0bc:	bx	lr
    c0c0:	ldr	r0, [pc, #864]	; c428 <bt_compidtostr@@Base+0x4880>
    c0c4:	add	r0, pc, r0
    c0c8:	bx	lr
    c0cc:	ldr	r0, [pc, #856]	; c42c <bt_compidtostr@@Base+0x4884>
    c0d0:	add	r0, pc, r0
    c0d4:	bx	lr
    c0d8:	ldr	r0, [pc, #848]	; c430 <bt_compidtostr@@Base+0x4888>
    c0dc:	add	r0, pc, r0
    c0e0:	bx	lr
    c0e4:	ldr	r0, [pc, #840]	; c434 <bt_compidtostr@@Base+0x488c>
    c0e8:	add	r0, pc, r0
    c0ec:	bx	lr
    c0f0:	ldr	r0, [pc, #832]	; c438 <bt_compidtostr@@Base+0x4890>
    c0f4:	add	r0, pc, r0
    c0f8:	bx	lr
    c0fc:	ldr	r0, [pc, #824]	; c43c <bt_compidtostr@@Base+0x4894>
    c100:	add	r0, pc, r0
    c104:	bx	lr
    c108:	ldr	r0, [pc, #816]	; c440 <bt_compidtostr@@Base+0x4898>
    c10c:	add	r0, pc, r0
    c110:	bx	lr
    c114:	andeq	fp, r0, r8, lsr #10
    c118:	andeq	r8, r0, r0, ror #26
    c11c:	andeq	fp, r0, r4, ror #19
    c120:	andeq	fp, r0, r4, ror #13
    c124:	ldrdeq	r7, [r0], -ip
    c128:			; <UNDEFINED> instruction: 0x00009fb4
    c12c:	andeq	r9, r0, ip, ror #20
    c130:	andeq	sl, r0, r8, lsl #30
    c134:	andeq	sl, r0, ip, lsl #23
    c138:	andeq	fp, r0, r0, lsr sp
    c13c:	andeq	fp, r0, r8, lsr r3
    c140:	andeq	r8, r0, r8, rrx
    c144:	andeq	sl, r0, r8, asr #7
    c148:	andeq	r7, r0, r4, ror #26
    c14c:	andeq	r9, r0, r0, lsl #29
    c150:	andeq	sl, r0, r0, ror #9
    c154:	andeq	r7, r0, r8, ror r8
    c158:	strdeq	r9, [r0], -r0
    c15c:	andeq	fp, r0, r8
    c160:	andeq	r8, r0, r0, asr fp
    c164:	muleq	r0, r8, r8
    c168:	andeq	r8, r0, ip, ror sp
    c16c:	andeq	r8, r0, r4, ror #29
    c170:	strdeq	fp, [r0], -r4
    c174:	andeq	fp, r0, r4, lsr #16
    c178:	andeq	r7, r0, ip, lsr #13
    c17c:	andeq	ip, r0, r4, lsl r4
    c180:	andeq	sl, r0, ip, lsl #30
    c184:	andeq	sl, r0, r4, asr #26
    c188:	andeq	r9, r0, r0, lsl #5
    c18c:	andeq	fp, r0, r0, lsl r3
    c190:	andeq	r7, r0, ip, lsr #26
    c194:			; <UNDEFINED> instruction: 0x0000bcbc
    c198:			; <UNDEFINED> instruction: 0x0000b6b0
    c19c:	andeq	r9, r0, r0, asr r5
    c1a0:	andeq	r8, r0, r0, lsr #31
    c1a4:	andeq	ip, r0, r0, lsr #3
    c1a8:	andeq	sl, r0, r0, lsr #13
    c1ac:	andeq	fp, r0, ip, lsl #19
    c1b0:	andeq	sl, r0, ip, lsl r7
    c1b4:	andeq	r9, r0, r0, lsr #16
    c1b8:	andeq	ip, r0, r8
    c1bc:	ldrdeq	r8, [r0], -r0
    c1c0:	muleq	r0, r4, r8
    c1c4:	andeq	r8, r0, r0, ror #6
    c1c8:	andeq	r8, r0, r0, asr r7
    c1cc:	andeq	r8, r0, ip, lsr #17
    c1d0:	ldrdeq	sl, [r0], -r4
    c1d4:	andeq	r7, r0, r0, lsr #26
    c1d8:	andeq	sl, r0, r4, lsl #22
    c1dc:	andeq	sl, r0, r0, lsr sl
    c1e0:	andeq	fp, r0, r4, ror #6
    c1e4:	andeq	ip, r0, r8, lsl r6
    c1e8:	andeq	r9, r0, ip, lsr #22
    c1ec:	andeq	r8, r0, r8, asr pc
    c1f0:	strdeq	r9, [r0], -r4
    c1f4:	andeq	r8, r0, r8, asr #9
    c1f8:	andeq	r8, r0, r4, ror ip
    c1fc:	muleq	r0, r4, r3
    c200:	andeq	fp, r0, ip, asr #25
    c204:	andeq	sl, r0, r8, lsl #17
    c208:	andeq	ip, r0, ip, asr #3
    c20c:	andeq	r7, r0, ip, ror #17
    c210:	andeq	r9, r0, r0, lsl #13
    c214:	andeq	fp, r0, ip, lsl #26
    c218:	andeq	r9, r0, r8, asr #2
    c21c:	andeq	r9, r0, r0
    c220:	andeq	r7, r0, r8, asr r2
    c224:	andeq	fp, r0, r0, asr #6
    c228:	ldrdeq	sl, [r0], -ip
    c22c:	andeq	r7, r0, ip, lsr #5
    c230:	andeq	ip, r0, ip, lsl #9
    c234:	ldrdeq	r9, [r0], -ip
    c238:	andeq	r9, r0, r0, lsl #22
    c23c:	andeq	r9, r0, ip, asr r8
    c240:	andeq	r8, r0, r4, ror r3
    c244:	strdeq	fp, [r0], -ip
    c248:	andeq	ip, r0, r8, lsr #7
    c24c:	andeq	fp, r0, r0, asr #27
    c250:	andeq	r9, r0, ip, lsl #15
    c254:			; <UNDEFINED> instruction: 0x0000aeb4
    c258:	andeq	r8, r0, ip, lsr r0
    c25c:	andeq	r7, r0, ip, lsl #31
    c260:	muleq	r0, ip, ip
    c264:	andeq	r7, r0, ip, asr r9
    c268:	andeq	fp, r0, ip, asr #9
    c26c:	andeq	r9, r0, r4, asr lr
    c270:	andeq	r8, r0, r8, lsr #1
    c274:	muleq	r0, r4, r2
    c278:	andeq	r7, r0, ip, lsl #27
    c27c:	andeq	fp, r0, r0, lsl #7
    c280:	andeq	r9, r0, r0, ror r5
    c284:	ldrdeq	sl, [r0], -r8
    c288:	strheq	sl, [r0], -r0
    c28c:	strheq	sl, [r0], -r0
    c290:	andeq	sl, r0, ip, lsl #30
    c294:	andeq	sl, r0, r0, lsl pc
    c298:	andeq	fp, r0, r4, lsr #18
    c29c:	andeq	fp, r0, r4, asr #18
    c2a0:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c2a4:			; <UNDEFINED> instruction: 0x000081b8
    c2a8:	andeq	r8, r0, r0, lsl #3
    c2ac:	andeq	r8, r0, r4, lsl #3
    c2b0:	andeq	r8, r0, r0, asr #15
    c2b4:	andeq	r8, r0, ip, asr #15
    c2b8:	andeq	fp, r0, r8, lsr #26
    c2bc:	andeq	fp, r0, r8, lsr sp
    c2c0:	andeq	r8, r0, r8
    c2c4:			; <UNDEFINED> instruction: 0x0000aab4
    c2c8:	andeq	sl, r0, r8, ror sl
    c2cc:	andeq	sl, r0, ip, ror sl
    c2d0:	andeq	fp, r0, r8, ror #31
    c2d4:	andeq	fp, r0, r8, ror #31
    c2d8:	andeq	r7, r0, ip, lsr #5
    c2dc:	andeq	r7, r0, r8, lsr #5
    c2e0:	strheq	sl, [r0], -r4
    c2e4:	strheq	sl, [r0], -ip
    c2e8:			; <UNDEFINED> instruction: 0x000089b8
    c2ec:	andeq	r8, r0, r4, asr #19
    c2f0:	andeq	r9, r0, ip, lsl r6
    c2f4:	andeq	r9, r0, r4, lsl r6
    c2f8:	andeq	r9, r0, ip, asr #17
    c2fc:	ldrdeq	r9, [r0], -r8
    c300:	andeq	sl, r0, r8, asr #28
    c304:	andeq	sl, r0, r8, lsr #9
    c308:	andeq	sl, r0, r0, ror r4
    c30c:	andeq	sl, r0, r0, lsl #9
    c310:			; <UNDEFINED> instruction: 0x0000aab4
    c314:	andeq	sl, r0, r0, asr #21
    c318:			; <UNDEFINED> instruction: 0x000092bc
    c31c:	andeq	r9, r0, ip, asr #5
    c320:	muleq	r0, ip, lr
    c324:	andeq	ip, r0, r8, lsl r3
    c328:	andeq	ip, r0, r8, ror #5
    c32c:	andeq	ip, r0, ip, ror #5
    c330:	andeq	sl, r0, r8, lsl #12
    c334:	andeq	sl, r0, r8, lsl #12
    c338:	strdeq	sl, [r0], -r8
    c33c:	andeq	sl, r0, r0, lsl #14
    c340:	andeq	fp, r0, r8, ror r2
    c344:			; <UNDEFINED> instruction: 0x0000bdb0
    c348:	andeq	fp, r0, r8, ror sp
    c34c:	andeq	fp, r0, ip, lsl #27
    c350:	strdeq	r8, [r0], -r0
    c354:	strdeq	r8, [r0], -r4
    c358:	andeq	fp, r0, ip, ror r1
    c35c:	andeq	fp, r0, r8, lsl #3
    c360:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c364:	strdeq	r8, [r0], -ip
    c368:	andeq	r8, r0, r0, ror sp
    c36c:	andeq	r8, r0, r0, lsl #27
    c370:	andeq	r7, r0, r4, lsl #24
    c374:	andeq	r7, r0, r0, lsl #24
    c378:	strdeq	r7, [r0], -r0
    c37c:	strdeq	r7, [r0], -r8
    c380:	andeq	ip, r0, r4, lsr r2
    c384:	andeq	r7, r0, r8, lsr #6
    c388:	ldrdeq	r7, [r0], -r8
    c38c:	andeq	r7, r0, r0, lsl #6
    c390:	andeq	r9, r0, r8, asr r7
    c394:	andeq	r9, r0, r0, ror #14
    c398:	muleq	r0, r0, r6
    c39c:	muleq	r0, ip, r6
    c3a0:	andeq	r8, r0, r8, asr #5
    c3a4:	andeq	r7, r0, r8, lsr #17
    c3a8:	andeq	r7, r0, ip, asr r8
    c3ac:	andeq	r7, r0, ip, ror #16
    c3b0:	andeq	r8, r0, ip, asr #5
    c3b4:	ldrdeq	r8, [r0], -r4
    c3b8:	andeq	r8, r0, ip, lsl #3
    c3bc:	muleq	r0, r0, r1
    c3c0:			; <UNDEFINED> instruction: 0x000096bc
    c3c4:	andeq	fp, r0, r4, lsr r7
    c3c8:	strdeq	fp, [r0], -ip
    c3cc:	andeq	fp, r0, r8, lsl #14
    c3d0:	andeq	sl, r0, ip, ror #23
    c3d4:	strdeq	sl, [r0], -ip
    c3d8:	andeq	r8, r0, r0, lsr #23
    c3dc:	andeq	r8, r0, r0, lsr #23
    c3e0:	andeq	r7, r0, r0, lsr #6
    c3e4:	andeq	r7, r0, r8, lsr #6
    c3e8:	andeq	fp, r0, ip, asr #24
    c3ec:	andeq	fp, r0, r8, asr ip
    c3f0:	andeq	fp, r0, ip, lsr #17
    c3f4:	andeq	fp, r0, ip, lsr #17
    c3f8:	andeq	fp, r0, ip, lsr #29
    c3fc:			; <UNDEFINED> instruction: 0x0000beb0
    c400:	andeq	r9, r0, r8, asr fp
    c404:	andeq	fp, r0, r0, asr r1
    c408:	andeq	fp, r0, r4, lsr r1
    c40c:	andeq	fp, r0, r0, lsr r1
    c410:	andeq	r8, r0, r0, lsr #13
    c414:			; <UNDEFINED> instruction: 0x000086b0
    c418:	andeq	r8, r0, r8, lsl #11
    c41c:	muleq	r0, r0, r5
    c420:	andeq	r8, r0, r4, ror r8
    c424:	muleq	r0, r0, r8
    c428:	muleq	r0, r0, r4
    c42c:	muleq	r0, r0, r4
    c430:	andeq	r9, r0, ip, asr #17
    c434:	ldrdeq	r9, [r0], -r4
    c438:	andeq	sl, r0, r0, ror pc
    c43c:	andeq	sl, r0, r8, asr r2
    c440:	andeq	sl, r0, r4, asr #9
    c444:	andeq	r8, r0, ip, ror #21
    c448:	andeq	r8, r0, r4, asr #21
    c44c:	andeq	r8, r0, ip, asr #21
    c450:	strdeq	sl, [r0], -ip
    c454:	andeq	sl, r0, r4, lsl #22
    c458:	andeq	r9, r0, r8, asr #16
    c45c:	andeq	r9, r0, ip, asr #16
    c460:	andeq	r6, r0, ip, ror #10
    c464:	andeq	r6, r0, ip, ror #10
    c468:	ldrdeq	sl, [r0], -r4
    c46c:	andeq	sl, r0, r0, ror #5
    c470:	strdeq	sl, [r0], -r8
    c474:	strdeq	sl, [r0], -r8
    c478:	andeq	r7, r0, r8, lsr r1
    c47c:	andeq	r7, r0, ip, lsr r1
    c480:	andeq	r9, r0, ip, lsl #17
    c484:	andeq	r8, r0, r4, ror #30
    c488:	andeq	r8, r0, ip, lsr pc
    c48c:	andeq	r8, r0, ip, lsr pc
    c490:	andeq	r9, r0, r4, asr r3
    c494:	andeq	r9, r0, r4, asr r3
    c498:	andeq	r7, r0, r0, lsl r0
    c49c:	andeq	r7, r0, r0, lsl r0
    c4a0:	andeq	fp, r0, r8, lsr #14
    c4a4:	andeq	r7, r0, r0, lsl #21
    c4a8:	andeq	r7, r0, r8, asr #20
    c4ac:	andeq	r7, r0, r0, asr sl
    c4b0:	strdeq	r7, [r0], -r0
    c4b4:	strdeq	r7, [r0], -r0
    c4b8:	andeq	sl, r0, r0, ror #18
    c4bc:	andeq	sl, r0, r0, ror #18
    c4c0:	muleq	r0, r8, sp
    c4c4:	strdeq	sl, [r0], -r8
    c4c8:	andeq	sl, r0, r0, asr #7
    c4cc:	ldrdeq	sl, [r0], -r0
    c4d0:	andeq	r9, r0, r4, asr #25
    c4d4:	ldrdeq	r9, [r0], -r4
    c4d8:	ldrdeq	r9, [r0], -r0
    c4dc:	andeq	r9, r0, ip, asr #29
    c4e0:	andeq	r9, r0, r8, ror #18
    c4e4:	andeq	r9, r0, ip, ror #18
    c4e8:	andeq	sl, r0, r0, asr #27
    c4ec:			; <UNDEFINED> instruction: 0x0000adb8
    c4f0:	andeq	sl, r0, r0, asr #20
    c4f4:	andeq	sl, r0, r8, asr #20
    c4f8:	strdeq	r7, [r0], -r4
    c4fc:	strdeq	r7, [r0], -r4
    c500:	ldrdeq	sl, [r0], -r0
    c504:	andeq	r7, r0, ip, lsr #29
    c508:	andeq	r7, r0, ip, ror #28
    c50c:	andeq	r7, r0, r4, lsl #29
    c510:	strdeq	r9, [r0], -r4
    c514:	andeq	r9, r0, ip, lsl #14
    c518:	andeq	r7, r0, r0, ror #19
    c51c:	strdeq	r7, [r0], -r4
    c520:			; <UNDEFINED> instruction: 0x0000b5b4
    c524:			; <UNDEFINED> instruction: 0x0000b5b4
    c528:	andeq	sl, r0, r8, lsr r3
    c52c:	andeq	sl, r0, r0, asr #6
    c530:	andeq	r6, r0, ip, lsr sl
    c534:	andeq	r6, r0, ip, asr #20
    c538:	andeq	r8, r0, ip, asr #27
    c53c:	ldrdeq	r8, [r0], -ip
    c540:	andeq	fp, r0, r4, lsr #32
    c544:	andeq	fp, r0, r0, lsr r0
    c548:	andeq	r7, r0, r8, asr lr
    c54c:	andeq	r7, r0, ip, asr lr
    c550:	andeq	r7, r0, r4, asr #21
    c554:	andeq	r7, r0, r0, asr #21
    c558:	strdeq	r6, [r0], -r8
    c55c:	andeq	r6, r0, ip, lsl #16
    c560:	ldrdeq	sl, [r0], -ip
    c564:	andeq	sl, r0, r4, ror #5
    c568:	andeq	r6, r0, r8, lsr #4
    c56c:	andeq	r6, r0, ip, lsr #4
    c570:	muleq	r0, r4, r3
    c574:	muleq	r0, ip, r3
    c578:			; <UNDEFINED> instruction: 0x000082bc
    c57c:	ldrdeq	r8, [r0], -r0
    c580:			; <UNDEFINED> instruction: 0x000089bc
    c584:	andeq	r7, r0, r0, ror #10
    c588:	andeq	sl, r0, r0, asr #8
    c58c:	andeq	sl, r0, ip, ror #12
    c590:	ldrdeq	sl, [r0], -r8
    c594:	andeq	fp, r0, ip, lsl #1
    c598:	andeq	fp, r0, r8, lsl #6
    c59c:	ldrdeq	r9, [r0], -r4
    c5a0:	strdeq	r6, [r0], -r0
    c5a4:	strdeq	r6, [r0], -r8
    c5a8:	andeq	r9, r0, r8, lsl #3
    c5ac:	muleq	r0, r4, r1
    c5b0:	ldrdeq	r6, [r0], -r8
    c5b4:	ldrdeq	r6, [r0], -ip
    c5b8:	andeq	r8, r0, r8, asr #29
    c5bc:	ldrdeq	r8, [r0], -r4
    c5c0:	andeq	sl, r0, ip, ror #16
    c5c4:	andeq	r6, r0, r0, asr #18
    c5c8:	ldrdeq	r7, [r0], -r0
    c5cc:	andeq	r9, r0, r8, lsl #7
    c5d0:	andeq	r8, r0, r8, lsr #23
    c5d4:	andeq	r7, r0, r0, lsl r7
    c5d8:	andeq	r8, r0, ip, lsr r1
    c5dc:	muleq	r0, ip, sl
    c5e0:	andeq	sl, r0, r8, asr #18
    c5e4:	andeq	sl, r0, ip, asr #18
    c5e8:	andeq	r6, r0, r0, ror #19
    c5ec:	andeq	r6, r0, r4, ror #19
    c5f0:	andeq	sl, r0, r4, ror #21
    c5f4:	andeq	sl, r0, r4, ror #21
    c5f8:	andeq	r8, r0, r8, ror r4
    c5fc:	andeq	r8, r0, r8, ror r4
    c600:	andeq	sl, r0, ip, ror #7
    c604:	andeq	sl, r0, ip, ror #7
    c608:	ldrdeq	sl, [r0], -ip
    c60c:	ldrdeq	sl, [r0], -r8
    c610:	andeq	r9, r0, ip, lsr #25
    c614:			; <UNDEFINED> instruction: 0x00009cbc
    c618:	andeq	r8, r0, r4, ror #11
    c61c:	andeq	r8, r0, r8, ror #11
    c620:	andeq	r7, r0, r4, lsr #3
    c624:	andeq	r7, r0, r4, lsr #3
    c628:	andeq	r7, r0, r4, asr #31
    c62c:	andeq	r7, r0, r4, asr #31
    c630:	andeq	r7, r0, ip, ror #5
    c634:	strdeq	r7, [r0], -r0
    c638:	andeq	r7, r0, r8, asr #30
    c63c:	andeq	r7, r0, ip, asr pc
    c640:	ldrdeq	r8, [r0], -ip
    c644:	andeq	r8, r0, r4, ror #7
    c648:	andeq	r9, r0, r0, lsl #6
    c64c:	strdeq	r9, [r0], -ip
    c650:	andeq	fp, r0, r8, lsr r0
    c654:	andeq	fp, r0, r4, asr #32
    c658:	andeq	r6, r0, r8, lsr #29
    c65c:	andeq	r6, r0, ip, lsr #29
    c660:			; <UNDEFINED> instruction: 0x00008ab8
    c664:			; <UNDEFINED> instruction: 0x00008ab4
    c668:	muleq	r0, ip, r1
    c66c:	muleq	r0, ip, r1
    c670:	andeq	r8, r0, r8, lsl #3
    c674:	andeq	r8, r0, r4, lsl #3
    c678:	muleq	r0, ip, r3
    c67c:	andeq	r7, r0, r4, lsr #7
    c680:	muleq	r0, ip, ip
    c684:	andeq	r8, r0, ip, asr r7
    c688:	andeq	sl, r0, ip, lsl r6
    c68c:	andeq	sl, r0, r0, lsr #12
    c690:	andeq	r8, r0, r0, asr r5
    c694:	andeq	r8, r0, ip, asr r5
    c698:	andeq	r9, r0, r8, lsl r6
    c69c:	andeq	r9, r0, r0, lsl #18
    c6a0:	andeq	sl, r0, ip, asr fp
    c6a4:	andeq	r6, r0, ip, lsl sl
    c6a8:	andeq	sl, r0, r4, ror #23
    c6ac:	andeq	sl, r0, r8, ror #28
    c6b0:	andeq	r9, r0, r8, lsl #3
    c6b4:	andeq	r9, r0, r8, lsl #3
    c6b8:	andeq	sl, r0, r4, lsl r4
    c6bc:	andeq	sl, r0, r0, lsr #8
    c6c0:	andeq	r8, r0, r4, lsr #3
    c6c4:	andeq	r9, r0, r8, lsr r6
    c6c8:	ldrdeq	r6, [r0], -r4
    c6cc:	andeq	r7, r0, r0, lsr #4
    c6d0:			; <UNDEFINED> instruction: 0x0000a5b0
    c6d4:			; <UNDEFINED> instruction: 0x00007db4
    c6d8:	andeq	r7, r0, r4, asr #20
    c6dc:	andeq	r7, r0, r0, asr #20
    c6e0:	andeq	sl, r0, r4, asr #31
    c6e4:	andeq	r7, r0, r8, asr #24
    c6e8:	andeq	r7, r0, r4, lsr #16
    c6ec:	andeq	r7, r0, r4, lsr #16
    c6f0:	andeq	sl, r0, ip, lsr #31
    c6f4:			; <UNDEFINED> instruction: 0x0000afb0
    c6f8:	strdeq	r5, [r0], -r4
    c6fc:	strdeq	r5, [r0], -r8
    c700:	andeq	r8, r0, r4, lsl #29
    c704:	andeq	r8, r0, r0, ror #7
    c708:	andeq	sl, r0, r4, asr r0
    c70c:	andeq	r6, r0, ip, lsl #24
    c710:	andeq	r7, r0, r8, lsl #13
    c714:	andeq	r5, r0, r4, ror #31
    c718:	andeq	r9, r0, r0, lsl sp
    c71c:	andeq	r6, r0, r4, rrx
    c720:	ldrdeq	r6, [r0], -ip
    c724:	andeq	r6, r0, r8, ror #11
    c728:	andeq	r9, r0, r4, lsl #24
    c72c:	andeq	r9, r0, r0, lsl ip
    c730:	andeq	r8, r0, r0, ror r0
    c734:	andeq	r8, r0, r8, ror r0
    c738:	andeq	r6, r0, r0, lsl r3
    c73c:	andeq	r6, r0, r4, lsr #6
    c740:	andeq	r8, r0, r0, lsl #25
    c744:	andeq	r8, r0, r8, lsl #25
    c748:	andeq	r8, r0, r4, lsr r6
    c74c:	andeq	r8, r0, ip, lsr r6
    c750:	strdeq	r8, [r0], -ip
    c754:	andeq	r8, r0, r0, lsl #4
    c758:	andeq	sl, r0, r8, asr #16
    c75c:	andeq	sl, r0, ip, asr #16
    c760:	andeq	r8, r0, ip, ror r9
    c764:	andeq	r8, r0, r4, lsl #19
    c768:	andeq	r7, r0, r8, lsl #3
    c76c:	muleq	r0, r4, r1
    c770:	strdeq	r6, [r0], -r8
    c774:	strdeq	r6, [r0], -ip
    c778:	ldr	r0, [pc, #-828]	; c444 <bt_compidtostr@@Base+0x489c>
    c77c:	add	r0, pc, r0
    c780:	bx	lr
    c784:	ldr	r0, [pc, #-836]	; c448 <bt_compidtostr@@Base+0x48a0>
    c788:	add	r0, pc, r0
    c78c:	bx	lr
    c790:	ldr	r0, [pc, #-844]	; c44c <bt_compidtostr@@Base+0x48a4>
    c794:	add	r0, pc, r0
    c798:	bx	lr
    c79c:	ldr	r0, [pc, #-852]	; c450 <bt_compidtostr@@Base+0x48a8>
    c7a0:	add	r0, pc, r0
    c7a4:	bx	lr
    c7a8:	ldr	r0, [pc, #-860]	; c454 <bt_compidtostr@@Base+0x48ac>
    c7ac:	add	r0, pc, r0
    c7b0:	bx	lr
    c7b4:	ldr	r0, [pc, #-868]	; c458 <bt_compidtostr@@Base+0x48b0>
    c7b8:	add	r0, pc, r0
    c7bc:	bx	lr
    c7c0:	ldr	r0, [pc, #-876]	; c45c <bt_compidtostr@@Base+0x48b4>
    c7c4:	add	r0, pc, r0
    c7c8:	bx	lr
    c7cc:	ldr	r0, [pc, #-884]	; c460 <bt_compidtostr@@Base+0x48b8>
    c7d0:	add	r0, pc, r0
    c7d4:	bx	lr
    c7d8:	ldr	r0, [pc, #-892]	; c464 <bt_compidtostr@@Base+0x48bc>
    c7dc:	add	r0, pc, r0
    c7e0:	bx	lr
    c7e4:	ldr	r0, [pc, #-900]	; c468 <bt_compidtostr@@Base+0x48c0>
    c7e8:	add	r0, pc, r0
    c7ec:	bx	lr
    c7f0:	ldr	r0, [pc, #-908]	; c46c <bt_compidtostr@@Base+0x48c4>
    c7f4:	add	r0, pc, r0
    c7f8:	bx	lr
    c7fc:	ldr	r0, [pc, #-916]	; c470 <bt_compidtostr@@Base+0x48c8>
    c800:	add	r0, pc, r0
    c804:	bx	lr
    c808:	ldr	r0, [pc, #-924]	; c474 <bt_compidtostr@@Base+0x48cc>
    c80c:	add	r0, pc, r0
    c810:	bx	lr
    c814:	ldr	r0, [pc, #-932]	; c478 <bt_compidtostr@@Base+0x48d0>
    c818:	add	r0, pc, r0
    c81c:	bx	lr
    c820:	ldr	r0, [pc, #-940]	; c47c <bt_compidtostr@@Base+0x48d4>
    c824:	add	r0, pc, r0
    c828:	bx	lr
    c82c:	ldr	r0, [pc, #-948]	; c480 <bt_compidtostr@@Base+0x48d8>
    c830:	add	r0, pc, r0
    c834:	bx	lr
    c838:	ldr	r0, [pc, #-956]	; c484 <bt_compidtostr@@Base+0x48dc>
    c83c:	add	r0, pc, r0
    c840:	bx	lr
    c844:	ldr	r0, [pc, #-964]	; c488 <bt_compidtostr@@Base+0x48e0>
    c848:	add	r0, pc, r0
    c84c:	bx	lr
    c850:	ldr	r0, [pc, #-972]	; c48c <bt_compidtostr@@Base+0x48e4>
    c854:	add	r0, pc, r0
    c858:	bx	lr
    c85c:	ldr	r0, [pc, #-980]	; c490 <bt_compidtostr@@Base+0x48e8>
    c860:	add	r0, pc, r0
    c864:	bx	lr
    c868:	ldr	r0, [pc, #-988]	; c494 <bt_compidtostr@@Base+0x48ec>
    c86c:	add	r0, pc, r0
    c870:	bx	lr
    c874:	ldr	r0, [pc, #-996]	; c498 <bt_compidtostr@@Base+0x48f0>
    c878:	add	r0, pc, r0
    c87c:	bx	lr
    c880:	ldr	r0, [pc, #-1004]	; c49c <bt_compidtostr@@Base+0x48f4>
    c884:	add	r0, pc, r0
    c888:	bx	lr
    c88c:	ldr	r0, [pc, #-1012]	; c4a0 <bt_compidtostr@@Base+0x48f8>
    c890:	add	r0, pc, r0
    c894:	bx	lr
    c898:	ldr	r0, [pc, #-1020]	; c4a4 <bt_compidtostr@@Base+0x48fc>
    c89c:	add	r0, pc, r0
    c8a0:	bx	lr
    c8a4:	ldr	r0, [pc, #-1028]	; c4a8 <bt_compidtostr@@Base+0x4900>
    c8a8:	add	r0, pc, r0
    c8ac:	bx	lr
    c8b0:	ldr	r0, [pc, #-1036]	; c4ac <bt_compidtostr@@Base+0x4904>
    c8b4:	add	r0, pc, r0
    c8b8:	bx	lr
    c8bc:	ldr	r0, [pc, #-1044]	; c4b0 <bt_compidtostr@@Base+0x4908>
    c8c0:	add	r0, pc, r0
    c8c4:	bx	lr
    c8c8:	ldr	r0, [pc, #-1052]	; c4b4 <bt_compidtostr@@Base+0x490c>
    c8cc:	add	r0, pc, r0
    c8d0:	bx	lr
    c8d4:	ldr	r0, [pc, #-1060]	; c4b8 <bt_compidtostr@@Base+0x4910>
    c8d8:	add	r0, pc, r0
    c8dc:	bx	lr
    c8e0:	ldr	r0, [pc, #-1068]	; c4bc <bt_compidtostr@@Base+0x4914>
    c8e4:	add	r0, pc, r0
    c8e8:	bx	lr
    c8ec:	ldr	r0, [pc, #-1076]	; c4c0 <bt_compidtostr@@Base+0x4918>
    c8f0:	add	r0, pc, r0
    c8f4:	bx	lr
    c8f8:	ldr	r0, [pc, #-1084]	; c4c4 <bt_compidtostr@@Base+0x491c>
    c8fc:	add	r0, pc, r0
    c900:	bx	lr
    c904:	ldr	r0, [pc, #-1092]	; c4c8 <bt_compidtostr@@Base+0x4920>
    c908:	add	r0, pc, r0
    c90c:	bx	lr
    c910:	ldr	r0, [pc, #-1100]	; c4cc <bt_compidtostr@@Base+0x4924>
    c914:	add	r0, pc, r0
    c918:	bx	lr
    c91c:	ldr	r0, [pc, #-1108]	; c4d0 <bt_compidtostr@@Base+0x4928>
    c920:	add	r0, pc, r0
    c924:	bx	lr
    c928:	ldr	r0, [pc, #-1116]	; c4d4 <bt_compidtostr@@Base+0x492c>
    c92c:	add	r0, pc, r0
    c930:	bx	lr
    c934:	ldr	r0, [pc, #-1124]	; c4d8 <bt_compidtostr@@Base+0x4930>
    c938:	add	r0, pc, r0
    c93c:	bx	lr
    c940:	ldr	r0, [pc, #-1132]	; c4dc <bt_compidtostr@@Base+0x4934>
    c944:	add	r0, pc, r0
    c948:	bx	lr
    c94c:	ldr	r0, [pc, #-1140]	; c4e0 <bt_compidtostr@@Base+0x4938>
    c950:	add	r0, pc, r0
    c954:	bx	lr
    c958:	ldr	r0, [pc, #-1148]	; c4e4 <bt_compidtostr@@Base+0x493c>
    c95c:	add	r0, pc, r0
    c960:	bx	lr
    c964:	ldr	r0, [pc, #-1156]	; c4e8 <bt_compidtostr@@Base+0x4940>
    c968:	add	r0, pc, r0
    c96c:	bx	lr
    c970:	ldr	r0, [pc, #-1164]	; c4ec <bt_compidtostr@@Base+0x4944>
    c974:	add	r0, pc, r0
    c978:	bx	lr
    c97c:	ldr	r0, [pc, #-1172]	; c4f0 <bt_compidtostr@@Base+0x4948>
    c980:	add	r0, pc, r0
    c984:	bx	lr
    c988:	ldr	r0, [pc, #-1180]	; c4f4 <bt_compidtostr@@Base+0x494c>
    c98c:	add	r0, pc, r0
    c990:	bx	lr
    c994:	ldr	r0, [pc, #-1188]	; c4f8 <bt_compidtostr@@Base+0x4950>
    c998:	add	r0, pc, r0
    c99c:	bx	lr
    c9a0:	ldr	r0, [pc, #-1196]	; c4fc <bt_compidtostr@@Base+0x4954>
    c9a4:	add	r0, pc, r0
    c9a8:	bx	lr
    c9ac:	ldr	r0, [pc, #-1204]	; c500 <bt_compidtostr@@Base+0x4958>
    c9b0:	add	r0, pc, r0
    c9b4:	bx	lr
    c9b8:	ldr	r0, [pc, #-1212]	; c504 <bt_compidtostr@@Base+0x495c>
    c9bc:	add	r0, pc, r0
    c9c0:	bx	lr
    c9c4:	ldr	r0, [pc, #-1220]	; c508 <bt_compidtostr@@Base+0x4960>
    c9c8:	add	r0, pc, r0
    c9cc:	bx	lr
    c9d0:	ldr	r0, [pc, #-1228]	; c50c <bt_compidtostr@@Base+0x4964>
    c9d4:	add	r0, pc, r0
    c9d8:	bx	lr
    c9dc:	ldr	r0, [pc, #-1236]	; c510 <bt_compidtostr@@Base+0x4968>
    c9e0:	add	r0, pc, r0
    c9e4:	bx	lr
    c9e8:	ldr	r0, [pc, #-1244]	; c514 <bt_compidtostr@@Base+0x496c>
    c9ec:	add	r0, pc, r0
    c9f0:	bx	lr
    c9f4:	ldr	r0, [pc, #-1252]	; c518 <bt_compidtostr@@Base+0x4970>
    c9f8:	add	r0, pc, r0
    c9fc:	bx	lr
    ca00:	ldr	r0, [pc, #-1260]	; c51c <bt_compidtostr@@Base+0x4974>
    ca04:	add	r0, pc, r0
    ca08:	bx	lr
    ca0c:	ldr	r0, [pc, #-1268]	; c520 <bt_compidtostr@@Base+0x4978>
    ca10:	add	r0, pc, r0
    ca14:	bx	lr
    ca18:	ldr	r0, [pc, #-1276]	; c524 <bt_compidtostr@@Base+0x497c>
    ca1c:	add	r0, pc, r0
    ca20:	bx	lr
    ca24:	ldr	r0, [pc, #-1284]	; c528 <bt_compidtostr@@Base+0x4980>
    ca28:	add	r0, pc, r0
    ca2c:	bx	lr
    ca30:	ldr	r0, [pc, #-1292]	; c52c <bt_compidtostr@@Base+0x4984>
    ca34:	add	r0, pc, r0
    ca38:	bx	lr
    ca3c:	ldr	r0, [pc, #-1300]	; c530 <bt_compidtostr@@Base+0x4988>
    ca40:	add	r0, pc, r0
    ca44:	bx	lr
    ca48:	ldr	r0, [pc, #-1308]	; c534 <bt_compidtostr@@Base+0x498c>
    ca4c:	add	r0, pc, r0
    ca50:	bx	lr
    ca54:	ldr	r0, [pc, #-1316]	; c538 <bt_compidtostr@@Base+0x4990>
    ca58:	add	r0, pc, r0
    ca5c:	bx	lr
    ca60:	ldr	r0, [pc, #-1324]	; c53c <bt_compidtostr@@Base+0x4994>
    ca64:	add	r0, pc, r0
    ca68:	bx	lr
    ca6c:	ldr	r0, [pc, #-1332]	; c540 <bt_compidtostr@@Base+0x4998>
    ca70:	add	r0, pc, r0
    ca74:	bx	lr
    ca78:	ldr	r0, [pc, #-1340]	; c544 <bt_compidtostr@@Base+0x499c>
    ca7c:	add	r0, pc, r0
    ca80:	bx	lr
    ca84:	ldr	r0, [pc, #-1348]	; c548 <bt_compidtostr@@Base+0x49a0>
    ca88:	add	r0, pc, r0
    ca8c:	bx	lr
    ca90:	ldr	r0, [pc, #-1356]	; c54c <bt_compidtostr@@Base+0x49a4>
    ca94:	add	r0, pc, r0
    ca98:	bx	lr
    ca9c:	ldr	r0, [pc, #-1364]	; c550 <bt_compidtostr@@Base+0x49a8>
    caa0:	add	r0, pc, r0
    caa4:	bx	lr
    caa8:	ldr	r0, [pc, #-1372]	; c554 <bt_compidtostr@@Base+0x49ac>
    caac:	add	r0, pc, r0
    cab0:	bx	lr
    cab4:	ldr	r0, [pc, #-1380]	; c558 <bt_compidtostr@@Base+0x49b0>
    cab8:	add	r0, pc, r0
    cabc:	bx	lr
    cac0:	ldr	r0, [pc, #-1388]	; c55c <bt_compidtostr@@Base+0x49b4>
    cac4:	add	r0, pc, r0
    cac8:	bx	lr
    cacc:	ldr	r0, [pc, #-1396]	; c560 <bt_compidtostr@@Base+0x49b8>
    cad0:	add	r0, pc, r0
    cad4:	bx	lr
    cad8:	ldr	r0, [pc, #-1404]	; c564 <bt_compidtostr@@Base+0x49bc>
    cadc:	add	r0, pc, r0
    cae0:	bx	lr
    cae4:	ldr	r0, [pc, #-1412]	; c568 <bt_compidtostr@@Base+0x49c0>
    cae8:	add	r0, pc, r0
    caec:	bx	lr
    caf0:	ldr	r0, [pc, #-1420]	; c56c <bt_compidtostr@@Base+0x49c4>
    caf4:	add	r0, pc, r0
    caf8:	bx	lr
    cafc:	ldr	r0, [pc, #-1428]	; c570 <bt_compidtostr@@Base+0x49c8>
    cb00:	add	r0, pc, r0
    cb04:	bx	lr
    cb08:	ldr	r0, [pc, #-1436]	; c574 <bt_compidtostr@@Base+0x49cc>
    cb0c:	add	r0, pc, r0
    cb10:	bx	lr
    cb14:	ldr	r0, [pc, #-1444]	; c578 <bt_compidtostr@@Base+0x49d0>
    cb18:	add	r0, pc, r0
    cb1c:	bx	lr
    cb20:	ldr	r0, [pc, #-1452]	; c57c <bt_compidtostr@@Base+0x49d4>
    cb24:	add	r0, pc, r0
    cb28:	bx	lr
    cb2c:	ldr	r0, [pc, #-1460]	; c580 <bt_compidtostr@@Base+0x49d8>
    cb30:	add	r0, pc, r0
    cb34:	bx	lr
    cb38:	ldr	r0, [pc, #-1468]	; c584 <bt_compidtostr@@Base+0x49dc>
    cb3c:	add	r0, pc, r0
    cb40:	bx	lr
    cb44:	ldr	r0, [pc, #-1476]	; c588 <bt_compidtostr@@Base+0x49e0>
    cb48:	add	r0, pc, r0
    cb4c:	bx	lr
    cb50:	ldr	r0, [pc, #-1484]	; c58c <bt_compidtostr@@Base+0x49e4>
    cb54:	add	r0, pc, r0
    cb58:	bx	lr
    cb5c:	ldr	r0, [pc, #-1492]	; c590 <bt_compidtostr@@Base+0x49e8>
    cb60:	add	r0, pc, r0
    cb64:	bx	lr
    cb68:	ldr	r0, [pc, #-1500]	; c594 <bt_compidtostr@@Base+0x49ec>
    cb6c:	add	r0, pc, r0
    cb70:	bx	lr
    cb74:	ldr	r0, [pc, #-1508]	; c598 <bt_compidtostr@@Base+0x49f0>
    cb78:	add	r0, pc, r0
    cb7c:	bx	lr
    cb80:	ldr	r0, [pc, #-1516]	; c59c <bt_compidtostr@@Base+0x49f4>
    cb84:	add	r0, pc, r0
    cb88:	bx	lr
    cb8c:	ldr	r0, [pc, #-1524]	; c5a0 <bt_compidtostr@@Base+0x49f8>
    cb90:	add	r0, pc, r0
    cb94:	bx	lr
    cb98:	ldr	r0, [pc, #-1532]	; c5a4 <bt_compidtostr@@Base+0x49fc>
    cb9c:	add	r0, pc, r0
    cba0:	bx	lr
    cba4:	ldr	r0, [pc, #-1540]	; c5a8 <bt_compidtostr@@Base+0x4a00>
    cba8:	add	r0, pc, r0
    cbac:	bx	lr
    cbb0:	ldr	r0, [pc, #-1548]	; c5ac <bt_compidtostr@@Base+0x4a04>
    cbb4:	add	r0, pc, r0
    cbb8:	bx	lr
    cbbc:	ldr	r0, [pc, #-1556]	; c5b0 <bt_compidtostr@@Base+0x4a08>
    cbc0:	add	r0, pc, r0
    cbc4:	bx	lr
    cbc8:	ldr	r0, [pc, #-1564]	; c5b4 <bt_compidtostr@@Base+0x4a0c>
    cbcc:	add	r0, pc, r0
    cbd0:	bx	lr
    cbd4:	ldr	r0, [pc, #-1572]	; c5b8 <bt_compidtostr@@Base+0x4a10>
    cbd8:	add	r0, pc, r0
    cbdc:	bx	lr
    cbe0:	ldr	r0, [pc, #-1580]	; c5bc <bt_compidtostr@@Base+0x4a14>
    cbe4:	add	r0, pc, r0
    cbe8:	bx	lr
    cbec:	ldr	r0, [pc, #-1588]	; c5c0 <bt_compidtostr@@Base+0x4a18>
    cbf0:	add	r0, pc, r0
    cbf4:	bx	lr
    cbf8:	ldr	r0, [pc, #-1596]	; c5c4 <bt_compidtostr@@Base+0x4a1c>
    cbfc:	add	r0, pc, r0
    cc00:	bx	lr
    cc04:	ldr	r0, [pc, #-1604]	; c5c8 <bt_compidtostr@@Base+0x4a20>
    cc08:	add	r0, pc, r0
    cc0c:	bx	lr
    cc10:	ldr	r0, [pc, #-1612]	; c5cc <bt_compidtostr@@Base+0x4a24>
    cc14:	add	r0, pc, r0
    cc18:	bx	lr
    cc1c:	ldr	r0, [pc, #-1620]	; c5d0 <bt_compidtostr@@Base+0x4a28>
    cc20:	add	r0, pc, r0
    cc24:	bx	lr
    cc28:	ldr	r0, [pc, #-1628]	; c5d4 <bt_compidtostr@@Base+0x4a2c>
    cc2c:	add	r0, pc, r0
    cc30:	bx	lr
    cc34:	ldr	r0, [pc, #-1636]	; c5d8 <bt_compidtostr@@Base+0x4a30>
    cc38:	add	r0, pc, r0
    cc3c:	bx	lr
    cc40:	ldr	r0, [pc, #-1644]	; c5dc <bt_compidtostr@@Base+0x4a34>
    cc44:	add	r0, pc, r0
    cc48:	bx	lr
    cc4c:	ldr	r0, [pc, #-1652]	; c5e0 <bt_compidtostr@@Base+0x4a38>
    cc50:	add	r0, pc, r0
    cc54:	bx	lr
    cc58:	ldr	r0, [pc, #-1660]	; c5e4 <bt_compidtostr@@Base+0x4a3c>
    cc5c:	add	r0, pc, r0
    cc60:	bx	lr
    cc64:	ldr	r0, [pc, #-1668]	; c5e8 <bt_compidtostr@@Base+0x4a40>
    cc68:	add	r0, pc, r0
    cc6c:	bx	lr
    cc70:	ldr	r0, [pc, #-1676]	; c5ec <bt_compidtostr@@Base+0x4a44>
    cc74:	add	r0, pc, r0
    cc78:	bx	lr
    cc7c:	ldr	r0, [pc, #-1684]	; c5f0 <bt_compidtostr@@Base+0x4a48>
    cc80:	add	r0, pc, r0
    cc84:	bx	lr
    cc88:	ldr	r0, [pc, #-1692]	; c5f4 <bt_compidtostr@@Base+0x4a4c>
    cc8c:	add	r0, pc, r0
    cc90:	bx	lr
    cc94:	ldr	r0, [pc, #-1700]	; c5f8 <bt_compidtostr@@Base+0x4a50>
    cc98:	add	r0, pc, r0
    cc9c:	bx	lr
    cca0:	ldr	r0, [pc, #-1708]	; c5fc <bt_compidtostr@@Base+0x4a54>
    cca4:	add	r0, pc, r0
    cca8:	bx	lr
    ccac:	ldr	r0, [pc, #-1716]	; c600 <bt_compidtostr@@Base+0x4a58>
    ccb0:	add	r0, pc, r0
    ccb4:	bx	lr
    ccb8:	ldr	r0, [pc, #-1724]	; c604 <bt_compidtostr@@Base+0x4a5c>
    ccbc:	add	r0, pc, r0
    ccc0:	bx	lr
    ccc4:	ldr	r0, [pc, #-1732]	; c608 <bt_compidtostr@@Base+0x4a60>
    ccc8:	add	r0, pc, r0
    cccc:	bx	lr
    ccd0:	ldr	r0, [pc, #-1740]	; c60c <bt_compidtostr@@Base+0x4a64>
    ccd4:	add	r0, pc, r0
    ccd8:	bx	lr
    ccdc:	ldr	r0, [pc, #-1748]	; c610 <bt_compidtostr@@Base+0x4a68>
    cce0:	add	r0, pc, r0
    cce4:	bx	lr
    cce8:	ldr	r0, [pc, #-1756]	; c614 <bt_compidtostr@@Base+0x4a6c>
    ccec:	add	r0, pc, r0
    ccf0:	bx	lr
    ccf4:	ldr	r0, [pc, #-1764]	; c618 <bt_compidtostr@@Base+0x4a70>
    ccf8:	add	r0, pc, r0
    ccfc:	bx	lr
    cd00:	ldr	r0, [pc, #-1772]	; c61c <bt_compidtostr@@Base+0x4a74>
    cd04:	add	r0, pc, r0
    cd08:	bx	lr
    cd0c:	ldr	r0, [pc, #-1780]	; c620 <bt_compidtostr@@Base+0x4a78>
    cd10:	add	r0, pc, r0
    cd14:	bx	lr
    cd18:	ldr	r0, [pc, #-1788]	; c624 <bt_compidtostr@@Base+0x4a7c>
    cd1c:	add	r0, pc, r0
    cd20:	bx	lr
    cd24:	ldr	r0, [pc, #-1796]	; c628 <bt_compidtostr@@Base+0x4a80>
    cd28:	add	r0, pc, r0
    cd2c:	bx	lr
    cd30:	ldr	r0, [pc, #-1804]	; c62c <bt_compidtostr@@Base+0x4a84>
    cd34:	add	r0, pc, r0
    cd38:	bx	lr
    cd3c:	ldr	r0, [pc, #-1812]	; c630 <bt_compidtostr@@Base+0x4a88>
    cd40:	add	r0, pc, r0
    cd44:	bx	lr
    cd48:	ldr	r0, [pc, #-1820]	; c634 <bt_compidtostr@@Base+0x4a8c>
    cd4c:	add	r0, pc, r0
    cd50:	bx	lr
    cd54:	ldr	r0, [pc, #-1828]	; c638 <bt_compidtostr@@Base+0x4a90>
    cd58:	add	r0, pc, r0
    cd5c:	bx	lr
    cd60:	ldr	r0, [pc, #-1836]	; c63c <bt_compidtostr@@Base+0x4a94>
    cd64:	add	r0, pc, r0
    cd68:	bx	lr
    cd6c:	ldr	r0, [pc, #-1844]	; c640 <bt_compidtostr@@Base+0x4a98>
    cd70:	add	r0, pc, r0
    cd74:	bx	lr
    cd78:	ldr	r0, [pc, #-1852]	; c644 <bt_compidtostr@@Base+0x4a9c>
    cd7c:	add	r0, pc, r0
    cd80:	bx	lr
    cd84:	ldr	r0, [pc, #-1860]	; c648 <bt_compidtostr@@Base+0x4aa0>
    cd88:	add	r0, pc, r0
    cd8c:	bx	lr
    cd90:	ldr	r0, [pc, #-1868]	; c64c <bt_compidtostr@@Base+0x4aa4>
    cd94:	add	r0, pc, r0
    cd98:	bx	lr
    cd9c:	ldr	r0, [pc, #-1876]	; c650 <bt_compidtostr@@Base+0x4aa8>
    cda0:	add	r0, pc, r0
    cda4:	bx	lr
    cda8:	ldr	r0, [pc, #-1884]	; c654 <bt_compidtostr@@Base+0x4aac>
    cdac:	add	r0, pc, r0
    cdb0:	bx	lr
    cdb4:	ldr	r0, [pc, #-1892]	; c658 <bt_compidtostr@@Base+0x4ab0>
    cdb8:	add	r0, pc, r0
    cdbc:	bx	lr
    cdc0:	ldr	r0, [pc, #-1900]	; c65c <bt_compidtostr@@Base+0x4ab4>
    cdc4:	add	r0, pc, r0
    cdc8:	bx	lr
    cdcc:	ldr	r0, [pc, #-1908]	; c660 <bt_compidtostr@@Base+0x4ab8>
    cdd0:	add	r0, pc, r0
    cdd4:	bx	lr
    cdd8:	ldr	r0, [pc, #-1916]	; c664 <bt_compidtostr@@Base+0x4abc>
    cddc:	add	r0, pc, r0
    cde0:	bx	lr
    cde4:	ldr	r0, [pc, #-1924]	; c668 <bt_compidtostr@@Base+0x4ac0>
    cde8:	add	r0, pc, r0
    cdec:	bx	lr
    cdf0:	ldr	r0, [pc, #-1932]	; c66c <bt_compidtostr@@Base+0x4ac4>
    cdf4:	add	r0, pc, r0
    cdf8:	bx	lr
    cdfc:	ldr	r0, [pc, #-1940]	; c670 <bt_compidtostr@@Base+0x4ac8>
    ce00:	add	r0, pc, r0
    ce04:	bx	lr
    ce08:	ldr	r0, [pc, #-1948]	; c674 <bt_compidtostr@@Base+0x4acc>
    ce0c:	add	r0, pc, r0
    ce10:	bx	lr
    ce14:	ldr	r0, [pc, #-1956]	; c678 <bt_compidtostr@@Base+0x4ad0>
    ce18:	add	r0, pc, r0
    ce1c:	bx	lr
    ce20:	ldr	r0, [pc, #-1964]	; c67c <bt_compidtostr@@Base+0x4ad4>
    ce24:	add	r0, pc, r0
    ce28:	bx	lr
    ce2c:	ldr	r0, [pc, #-1972]	; c680 <bt_compidtostr@@Base+0x4ad8>
    ce30:	add	r0, pc, r0
    ce34:	bx	lr
    ce38:	ldr	r0, [pc, #-1980]	; c684 <bt_compidtostr@@Base+0x4adc>
    ce3c:	add	r0, pc, r0
    ce40:	bx	lr
    ce44:	ldr	r0, [pc, #-1988]	; c688 <bt_compidtostr@@Base+0x4ae0>
    ce48:	add	r0, pc, r0
    ce4c:	bx	lr
    ce50:	ldr	r0, [pc, #-1996]	; c68c <bt_compidtostr@@Base+0x4ae4>
    ce54:	add	r0, pc, r0
    ce58:	bx	lr
    ce5c:	ldr	r0, [pc, #-2004]	; c690 <bt_compidtostr@@Base+0x4ae8>
    ce60:	add	r0, pc, r0
    ce64:	bx	lr
    ce68:	ldr	r0, [pc, #-2012]	; c694 <bt_compidtostr@@Base+0x4aec>
    ce6c:	add	r0, pc, r0
    ce70:	bx	lr
    ce74:	ldr	r0, [pc, #-2020]	; c698 <bt_compidtostr@@Base+0x4af0>
    ce78:	add	r0, pc, r0
    ce7c:	bx	lr
    ce80:	ldr	r0, [pc, #-2028]	; c69c <bt_compidtostr@@Base+0x4af4>
    ce84:	add	r0, pc, r0
    ce88:	bx	lr
    ce8c:	ldr	r0, [pc, #-2036]	; c6a0 <bt_compidtostr@@Base+0x4af8>
    ce90:	add	r0, pc, r0
    ce94:	bx	lr
    ce98:	ldr	r0, [pc, #-2044]	; c6a4 <bt_compidtostr@@Base+0x4afc>
    ce9c:	add	r0, pc, r0
    cea0:	bx	lr
    cea4:	ldr	r0, [pc, #-2052]	; c6a8 <bt_compidtostr@@Base+0x4b00>
    cea8:	add	r0, pc, r0
    ceac:	bx	lr
    ceb0:	ldr	r0, [pc, #-2060]	; c6ac <bt_compidtostr@@Base+0x4b04>
    ceb4:	add	r0, pc, r0
    ceb8:	bx	lr
    cebc:	ldr	r0, [pc, #-2068]	; c6b0 <bt_compidtostr@@Base+0x4b08>
    cec0:	add	r0, pc, r0
    cec4:	bx	lr
    cec8:	ldr	r0, [pc, #-2076]	; c6b4 <bt_compidtostr@@Base+0x4b0c>
    cecc:	add	r0, pc, r0
    ced0:	bx	lr
    ced4:	ldr	r0, [pc, #-2084]	; c6b8 <bt_compidtostr@@Base+0x4b10>
    ced8:	add	r0, pc, r0
    cedc:	bx	lr
    cee0:	ldr	r0, [pc, #-2092]	; c6bc <bt_compidtostr@@Base+0x4b14>
    cee4:	add	r0, pc, r0
    cee8:	bx	lr
    ceec:	ldr	r0, [pc, #-2100]	; c6c0 <bt_compidtostr@@Base+0x4b18>
    cef0:	add	r0, pc, r0
    cef4:	bx	lr
    cef8:	ldr	r0, [pc, #-2108]	; c6c4 <bt_compidtostr@@Base+0x4b1c>
    cefc:	add	r0, pc, r0
    cf00:	bx	lr
    cf04:	ldr	r0, [pc, #-2116]	; c6c8 <bt_compidtostr@@Base+0x4b20>
    cf08:	add	r0, pc, r0
    cf0c:	bx	lr
    cf10:	ldr	r0, [pc, #-2124]	; c6cc <bt_compidtostr@@Base+0x4b24>
    cf14:	add	r0, pc, r0
    cf18:	bx	lr
    cf1c:	ldr	r0, [pc, #-2132]	; c6d0 <bt_compidtostr@@Base+0x4b28>
    cf20:	add	r0, pc, r0
    cf24:	bx	lr
    cf28:	ldr	r0, [pc, #-2140]	; c6d4 <bt_compidtostr@@Base+0x4b2c>
    cf2c:	add	r0, pc, r0
    cf30:	bx	lr
    cf34:	ldr	r0, [pc, #-2148]	; c6d8 <bt_compidtostr@@Base+0x4b30>
    cf38:	add	r0, pc, r0
    cf3c:	bx	lr
    cf40:	ldr	r0, [pc, #-2156]	; c6dc <bt_compidtostr@@Base+0x4b34>
    cf44:	add	r0, pc, r0
    cf48:	bx	lr
    cf4c:	ldr	r0, [pc, #-2164]	; c6e0 <bt_compidtostr@@Base+0x4b38>
    cf50:	add	r0, pc, r0
    cf54:	bx	lr
    cf58:	ldr	r0, [pc, #-2172]	; c6e4 <bt_compidtostr@@Base+0x4b3c>
    cf5c:	add	r0, pc, r0
    cf60:	bx	lr
    cf64:	ldr	r0, [pc, #-2180]	; c6e8 <bt_compidtostr@@Base+0x4b40>
    cf68:	add	r0, pc, r0
    cf6c:	bx	lr
    cf70:	ldr	r0, [pc, #-2188]	; c6ec <bt_compidtostr@@Base+0x4b44>
    cf74:	add	r0, pc, r0
    cf78:	bx	lr
    cf7c:	ldr	r0, [pc, #-2196]	; c6f0 <bt_compidtostr@@Base+0x4b48>
    cf80:	add	r0, pc, r0
    cf84:	bx	lr
    cf88:	ldr	r0, [pc, #-2204]	; c6f4 <bt_compidtostr@@Base+0x4b4c>
    cf8c:	add	r0, pc, r0
    cf90:	bx	lr
    cf94:	ldr	r0, [pc, #-2212]	; c6f8 <bt_compidtostr@@Base+0x4b50>
    cf98:	add	r0, pc, r0
    cf9c:	bx	lr
    cfa0:	ldr	r0, [pc, #-2220]	; c6fc <bt_compidtostr@@Base+0x4b54>
    cfa4:	add	r0, pc, r0
    cfa8:	bx	lr
    cfac:	ldr	r0, [pc, #-2228]	; c700 <bt_compidtostr@@Base+0x4b58>
    cfb0:	add	r0, pc, r0
    cfb4:	bx	lr
    cfb8:	ldr	r0, [pc, #-2236]	; c704 <bt_compidtostr@@Base+0x4b5c>
    cfbc:	add	r0, pc, r0
    cfc0:	bx	lr
    cfc4:	ldr	r0, [pc, #-2244]	; c708 <bt_compidtostr@@Base+0x4b60>
    cfc8:	add	r0, pc, r0
    cfcc:	bx	lr
    cfd0:	ldr	r0, [pc, #-2252]	; c70c <bt_compidtostr@@Base+0x4b64>
    cfd4:	add	r0, pc, r0
    cfd8:	bx	lr
    cfdc:	ldr	r0, [pc, #-2260]	; c710 <bt_compidtostr@@Base+0x4b68>
    cfe0:	add	r0, pc, r0
    cfe4:	bx	lr
    cfe8:	ldr	r0, [pc, #-2268]	; c714 <bt_compidtostr@@Base+0x4b6c>
    cfec:	add	r0, pc, r0
    cff0:	bx	lr
    cff4:	ldr	r0, [pc, #-2276]	; c718 <bt_compidtostr@@Base+0x4b70>
    cff8:	add	r0, pc, r0
    cffc:	bx	lr
    d000:	ldr	r0, [pc, #-2284]	; c71c <bt_compidtostr@@Base+0x4b74>
    d004:	add	r0, pc, r0
    d008:	bx	lr
    d00c:	ldr	r0, [pc, #-2292]	; c720 <bt_compidtostr@@Base+0x4b78>
    d010:	add	r0, pc, r0
    d014:	bx	lr
    d018:	ldr	r0, [pc, #-2300]	; c724 <bt_compidtostr@@Base+0x4b7c>
    d01c:	add	r0, pc, r0
    d020:	bx	lr
    d024:	ldr	r0, [pc, #-2308]	; c728 <bt_compidtostr@@Base+0x4b80>
    d028:	add	r0, pc, r0
    d02c:	bx	lr
    d030:	ldr	r0, [pc, #-2316]	; c72c <bt_compidtostr@@Base+0x4b84>
    d034:	add	r0, pc, r0
    d038:	bx	lr
    d03c:	ldr	r0, [pc, #-2324]	; c730 <bt_compidtostr@@Base+0x4b88>
    d040:	add	r0, pc, r0
    d044:	bx	lr
    d048:	ldr	r0, [pc, #-2332]	; c734 <bt_compidtostr@@Base+0x4b8c>
    d04c:	add	r0, pc, r0
    d050:	bx	lr
    d054:	ldr	r0, [pc, #-2340]	; c738 <bt_compidtostr@@Base+0x4b90>
    d058:	add	r0, pc, r0
    d05c:	bx	lr
    d060:	ldr	r0, [pc, #-2348]	; c73c <bt_compidtostr@@Base+0x4b94>
    d064:	add	r0, pc, r0
    d068:	bx	lr
    d06c:	ldr	r0, [pc, #-2356]	; c740 <bt_compidtostr@@Base+0x4b98>
    d070:	add	r0, pc, r0
    d074:	bx	lr
    d078:	ldr	r0, [pc, #-2364]	; c744 <bt_compidtostr@@Base+0x4b9c>
    d07c:	add	r0, pc, r0
    d080:	bx	lr
    d084:	ldr	r0, [pc, #-2372]	; c748 <bt_compidtostr@@Base+0x4ba0>
    d088:	add	r0, pc, r0
    d08c:	bx	lr
    d090:	ldr	r0, [pc, #-2380]	; c74c <bt_compidtostr@@Base+0x4ba4>
    d094:	add	r0, pc, r0
    d098:	bx	lr
    d09c:	ldr	r0, [pc, #-2388]	; c750 <bt_compidtostr@@Base+0x4ba8>
    d0a0:	add	r0, pc, r0
    d0a4:	bx	lr
    d0a8:	ldr	r0, [pc, #-2396]	; c754 <bt_compidtostr@@Base+0x4bac>
    d0ac:	add	r0, pc, r0
    d0b0:	bx	lr
    d0b4:	ldr	r0, [pc, #-2404]	; c758 <bt_compidtostr@@Base+0x4bb0>
    d0b8:	add	r0, pc, r0
    d0bc:	bx	lr
    d0c0:	ldr	r0, [pc, #-2412]	; c75c <bt_compidtostr@@Base+0x4bb4>
    d0c4:	add	r0, pc, r0
    d0c8:	bx	lr
    d0cc:	ldr	r0, [pc, #-2420]	; c760 <bt_compidtostr@@Base+0x4bb8>
    d0d0:	add	r0, pc, r0
    d0d4:	bx	lr
    d0d8:	ldr	r0, [pc, #-2428]	; c764 <bt_compidtostr@@Base+0x4bbc>
    d0dc:	add	r0, pc, r0
    d0e0:	bx	lr
    d0e4:	ldr	r0, [pc, #-2436]	; c768 <bt_compidtostr@@Base+0x4bc0>
    d0e8:	add	r0, pc, r0
    d0ec:	bx	lr
    d0f0:	ldr	r0, [pc, #-2444]	; c76c <bt_compidtostr@@Base+0x4bc4>
    d0f4:	add	r0, pc, r0
    d0f8:	bx	lr
    d0fc:	ldr	r0, [pc, #-2452]	; c770 <bt_compidtostr@@Base+0x4bc8>
    d100:	add	r0, pc, r0
    d104:	bx	lr
    d108:	ldr	r0, [pc, #-2460]	; c774 <bt_compidtostr@@Base+0x4bcc>
    d10c:	add	r0, pc, r0
    d110:	bx	lr
    d114:	ldr	r0, [pc, #2320]	; da2c <bt_compidtostr@@Base+0x5e84>
    d118:	add	r0, pc, r0
    d11c:	bx	lr
    d120:	ldr	r0, [pc, #2312]	; da30 <bt_compidtostr@@Base+0x5e88>
    d124:	add	r0, pc, r0
    d128:	bx	lr
    d12c:	ldr	r0, [pc, #2304]	; da34 <bt_compidtostr@@Base+0x5e8c>
    d130:	add	r0, pc, r0
    d134:	bx	lr
    d138:	ldr	r0, [pc, #2296]	; da38 <bt_compidtostr@@Base+0x5e90>
    d13c:	add	r0, pc, r0
    d140:	bx	lr
    d144:	ldr	r0, [pc, #2288]	; da3c <bt_compidtostr@@Base+0x5e94>
    d148:	add	r0, pc, r0
    d14c:	bx	lr
    d150:	ldr	r0, [pc, #2280]	; da40 <bt_compidtostr@@Base+0x5e98>
    d154:	add	r0, pc, r0
    d158:	bx	lr
    d15c:	ldr	r0, [pc, #2272]	; da44 <bt_compidtostr@@Base+0x5e9c>
    d160:	add	r0, pc, r0
    d164:	bx	lr
    d168:	ldr	r0, [pc, #2264]	; da48 <bt_compidtostr@@Base+0x5ea0>
    d16c:	add	r0, pc, r0
    d170:	bx	lr
    d174:	ldr	r0, [pc, #2256]	; da4c <bt_compidtostr@@Base+0x5ea4>
    d178:	add	r0, pc, r0
    d17c:	bx	lr
    d180:	ldr	r0, [pc, #2248]	; da50 <bt_compidtostr@@Base+0x5ea8>
    d184:	add	r0, pc, r0
    d188:	bx	lr
    d18c:	ldr	r0, [pc, #2240]	; da54 <bt_compidtostr@@Base+0x5eac>
    d190:	add	r0, pc, r0
    d194:	bx	lr
    d198:	ldr	r0, [pc, #2232]	; da58 <bt_compidtostr@@Base+0x5eb0>
    d19c:	add	r0, pc, r0
    d1a0:	bx	lr
    d1a4:	ldr	r0, [pc, #2224]	; da5c <bt_compidtostr@@Base+0x5eb4>
    d1a8:	add	r0, pc, r0
    d1ac:	bx	lr
    d1b0:	ldr	r0, [pc, #2216]	; da60 <bt_compidtostr@@Base+0x5eb8>
    d1b4:	add	r0, pc, r0
    d1b8:	bx	lr
    d1bc:	ldr	r0, [pc, #2208]	; da64 <bt_compidtostr@@Base+0x5ebc>
    d1c0:	add	r0, pc, r0
    d1c4:	bx	lr
    d1c8:	ldr	r0, [pc, #2200]	; da68 <bt_compidtostr@@Base+0x5ec0>
    d1cc:	add	r0, pc, r0
    d1d0:	bx	lr
    d1d4:	ldr	r0, [pc, #2192]	; da6c <bt_compidtostr@@Base+0x5ec4>
    d1d8:	add	r0, pc, r0
    d1dc:	bx	lr
    d1e0:	ldr	r0, [pc, #2184]	; da70 <bt_compidtostr@@Base+0x5ec8>
    d1e4:	add	r0, pc, r0
    d1e8:	bx	lr
    d1ec:	ldr	r0, [pc, #2176]	; da74 <bt_compidtostr@@Base+0x5ecc>
    d1f0:	add	r0, pc, r0
    d1f4:	bx	lr
    d1f8:	ldr	r0, [pc, #2168]	; da78 <bt_compidtostr@@Base+0x5ed0>
    d1fc:	add	r0, pc, r0
    d200:	bx	lr
    d204:	ldr	r0, [pc, #2160]	; da7c <bt_compidtostr@@Base+0x5ed4>
    d208:	add	r0, pc, r0
    d20c:	bx	lr
    d210:	ldr	r0, [pc, #2152]	; da80 <bt_compidtostr@@Base+0x5ed8>
    d214:	add	r0, pc, r0
    d218:	bx	lr
    d21c:	ldr	r0, [pc, #2144]	; da84 <bt_compidtostr@@Base+0x5edc>
    d220:	add	r0, pc, r0
    d224:	bx	lr
    d228:	ldr	r0, [pc, #2136]	; da88 <bt_compidtostr@@Base+0x5ee0>
    d22c:	add	r0, pc, r0
    d230:	bx	lr
    d234:	ldr	r0, [pc, #2128]	; da8c <bt_compidtostr@@Base+0x5ee4>
    d238:	add	r0, pc, r0
    d23c:	bx	lr
    d240:	ldr	r0, [pc, #2120]	; da90 <bt_compidtostr@@Base+0x5ee8>
    d244:	add	r0, pc, r0
    d248:	bx	lr
    d24c:	ldr	r0, [pc, #2112]	; da94 <bt_compidtostr@@Base+0x5eec>
    d250:	add	r0, pc, r0
    d254:	bx	lr
    d258:	ldr	r0, [pc, #2104]	; da98 <bt_compidtostr@@Base+0x5ef0>
    d25c:	add	r0, pc, r0
    d260:	bx	lr
    d264:	ldr	r0, [pc, #2096]	; da9c <bt_compidtostr@@Base+0x5ef4>
    d268:	add	r0, pc, r0
    d26c:	bx	lr
    d270:	ldr	r0, [pc, #2088]	; daa0 <bt_compidtostr@@Base+0x5ef8>
    d274:	add	r0, pc, r0
    d278:	bx	lr
    d27c:	ldr	r0, [pc, #2080]	; daa4 <bt_compidtostr@@Base+0x5efc>
    d280:	add	r0, pc, r0
    d284:	bx	lr
    d288:	ldr	r0, [pc, #2072]	; daa8 <bt_compidtostr@@Base+0x5f00>
    d28c:	add	r0, pc, r0
    d290:	bx	lr
    d294:	ldr	r0, [pc, #2064]	; daac <bt_compidtostr@@Base+0x5f04>
    d298:	add	r0, pc, r0
    d29c:	bx	lr
    d2a0:	ldr	r0, [pc, #2056]	; dab0 <bt_compidtostr@@Base+0x5f08>
    d2a4:	add	r0, pc, r0
    d2a8:	bx	lr
    d2ac:	ldr	r0, [pc, #2048]	; dab4 <bt_compidtostr@@Base+0x5f0c>
    d2b0:	add	r0, pc, r0
    d2b4:	bx	lr
    d2b8:	ldr	r0, [pc, #2040]	; dab8 <bt_compidtostr@@Base+0x5f10>
    d2bc:	add	r0, pc, r0
    d2c0:	bx	lr
    d2c4:	ldr	r0, [pc, #2032]	; dabc <bt_compidtostr@@Base+0x5f14>
    d2c8:	add	r0, pc, r0
    d2cc:	bx	lr
    d2d0:	ldr	r0, [pc, #2024]	; dac0 <bt_compidtostr@@Base+0x5f18>
    d2d4:	add	r0, pc, r0
    d2d8:	bx	lr
    d2dc:	ldr	r0, [pc, #2016]	; dac4 <bt_compidtostr@@Base+0x5f1c>
    d2e0:	add	r0, pc, r0
    d2e4:	bx	lr
    d2e8:	ldr	r0, [pc, #2008]	; dac8 <bt_compidtostr@@Base+0x5f20>
    d2ec:	add	r0, pc, r0
    d2f0:	bx	lr
    d2f4:	ldr	r0, [pc, #2000]	; dacc <bt_compidtostr@@Base+0x5f24>
    d2f8:	add	r0, pc, r0
    d2fc:	bx	lr
    d300:	ldr	r0, [pc, #1992]	; dad0 <bt_compidtostr@@Base+0x5f28>
    d304:	add	r0, pc, r0
    d308:	bx	lr
    d30c:	ldr	r0, [pc, #1984]	; dad4 <bt_compidtostr@@Base+0x5f2c>
    d310:	add	r0, pc, r0
    d314:	bx	lr
    d318:	ldr	r0, [pc, #1976]	; dad8 <bt_compidtostr@@Base+0x5f30>
    d31c:	add	r0, pc, r0
    d320:	bx	lr
    d324:	ldr	r0, [pc, #1968]	; dadc <bt_compidtostr@@Base+0x5f34>
    d328:	add	r0, pc, r0
    d32c:	bx	lr
    d330:	ldr	r0, [pc, #1960]	; dae0 <bt_compidtostr@@Base+0x5f38>
    d334:	add	r0, pc, r0
    d338:	bx	lr
    d33c:	ldr	r0, [pc, #1952]	; dae4 <bt_compidtostr@@Base+0x5f3c>
    d340:	add	r0, pc, r0
    d344:	bx	lr
    d348:	ldr	r0, [pc, #1944]	; dae8 <bt_compidtostr@@Base+0x5f40>
    d34c:	add	r0, pc, r0
    d350:	bx	lr
    d354:	ldr	r0, [pc, #1936]	; daec <bt_compidtostr@@Base+0x5f44>
    d358:	add	r0, pc, r0
    d35c:	bx	lr
    d360:	ldr	r0, [pc, #1928]	; daf0 <bt_compidtostr@@Base+0x5f48>
    d364:	add	r0, pc, r0
    d368:	bx	lr
    d36c:	ldr	r0, [pc, #1920]	; daf4 <bt_compidtostr@@Base+0x5f4c>
    d370:	add	r0, pc, r0
    d374:	bx	lr
    d378:	ldr	r0, [pc, #1912]	; daf8 <bt_compidtostr@@Base+0x5f50>
    d37c:	add	r0, pc, r0
    d380:	bx	lr
    d384:	ldr	r0, [pc, #1904]	; dafc <bt_compidtostr@@Base+0x5f54>
    d388:	add	r0, pc, r0
    d38c:	bx	lr
    d390:	ldr	r0, [pc, #1896]	; db00 <bt_compidtostr@@Base+0x5f58>
    d394:	add	r0, pc, r0
    d398:	bx	lr
    d39c:	ldr	r0, [pc, #1888]	; db04 <bt_compidtostr@@Base+0x5f5c>
    d3a0:	add	r0, pc, r0
    d3a4:	bx	lr
    d3a8:	ldr	r0, [pc, #1880]	; db08 <bt_compidtostr@@Base+0x5f60>
    d3ac:	add	r0, pc, r0
    d3b0:	bx	lr
    d3b4:	ldr	r0, [pc, #1872]	; db0c <bt_compidtostr@@Base+0x5f64>
    d3b8:	add	r0, pc, r0
    d3bc:	bx	lr
    d3c0:	ldr	r0, [pc, #1864]	; db10 <bt_compidtostr@@Base+0x5f68>
    d3c4:	add	r0, pc, r0
    d3c8:	bx	lr
    d3cc:	ldr	r0, [pc, #1856]	; db14 <bt_compidtostr@@Base+0x5f6c>
    d3d0:	add	r0, pc, r0
    d3d4:	bx	lr
    d3d8:	ldr	r0, [pc, #1848]	; db18 <bt_compidtostr@@Base+0x5f70>
    d3dc:	add	r0, pc, r0
    d3e0:	bx	lr
    d3e4:	ldr	r0, [pc, #1840]	; db1c <bt_compidtostr@@Base+0x5f74>
    d3e8:	add	r0, pc, r0
    d3ec:	bx	lr
    d3f0:	ldr	r0, [pc, #1832]	; db20 <bt_compidtostr@@Base+0x5f78>
    d3f4:	add	r0, pc, r0
    d3f8:	bx	lr
    d3fc:	ldr	r0, [pc, #1824]	; db24 <bt_compidtostr@@Base+0x5f7c>
    d400:	add	r0, pc, r0
    d404:	bx	lr
    d408:	ldr	r0, [pc, #1816]	; db28 <bt_compidtostr@@Base+0x5f80>
    d40c:	add	r0, pc, r0
    d410:	bx	lr
    d414:	ldr	r0, [pc, #1808]	; db2c <bt_compidtostr@@Base+0x5f84>
    d418:	add	r0, pc, r0
    d41c:	bx	lr
    d420:	ldr	r0, [pc, #1800]	; db30 <bt_compidtostr@@Base+0x5f88>
    d424:	add	r0, pc, r0
    d428:	bx	lr
    d42c:	ldr	r0, [pc, #1792]	; db34 <bt_compidtostr@@Base+0x5f8c>
    d430:	add	r0, pc, r0
    d434:	bx	lr
    d438:	ldr	r0, [pc, #1784]	; db38 <bt_compidtostr@@Base+0x5f90>
    d43c:	add	r0, pc, r0
    d440:	bx	lr
    d444:	ldr	r0, [pc, #1776]	; db3c <bt_compidtostr@@Base+0x5f94>
    d448:	add	r0, pc, r0
    d44c:	bx	lr
    d450:	ldr	r0, [pc, #1768]	; db40 <bt_compidtostr@@Base+0x5f98>
    d454:	add	r0, pc, r0
    d458:	bx	lr
    d45c:	ldr	r0, [pc, #1760]	; db44 <bt_compidtostr@@Base+0x5f9c>
    d460:	add	r0, pc, r0
    d464:	bx	lr
    d468:	ldr	r0, [pc, #1752]	; db48 <bt_compidtostr@@Base+0x5fa0>
    d46c:	add	r0, pc, r0
    d470:	bx	lr
    d474:	ldr	r0, [pc, #1744]	; db4c <bt_compidtostr@@Base+0x5fa4>
    d478:	add	r0, pc, r0
    d47c:	bx	lr
    d480:	ldr	r0, [pc, #1736]	; db50 <bt_compidtostr@@Base+0x5fa8>
    d484:	add	r0, pc, r0
    d488:	bx	lr
    d48c:	ldr	r0, [pc, #1728]	; db54 <bt_compidtostr@@Base+0x5fac>
    d490:	add	r0, pc, r0
    d494:	bx	lr
    d498:	ldr	r0, [pc, #1720]	; db58 <bt_compidtostr@@Base+0x5fb0>
    d49c:	add	r0, pc, r0
    d4a0:	bx	lr
    d4a4:	ldr	r0, [pc, #1712]	; db5c <bt_compidtostr@@Base+0x5fb4>
    d4a8:	add	r0, pc, r0
    d4ac:	bx	lr
    d4b0:	ldr	r0, [pc, #1704]	; db60 <bt_compidtostr@@Base+0x5fb8>
    d4b4:	add	r0, pc, r0
    d4b8:	bx	lr
    d4bc:	ldr	r0, [pc, #1696]	; db64 <bt_compidtostr@@Base+0x5fbc>
    d4c0:	add	r0, pc, r0
    d4c4:	bx	lr
    d4c8:	ldr	r0, [pc, #1688]	; db68 <bt_compidtostr@@Base+0x5fc0>
    d4cc:	add	r0, pc, r0
    d4d0:	bx	lr
    d4d4:	ldr	r0, [pc, #1680]	; db6c <bt_compidtostr@@Base+0x5fc4>
    d4d8:	add	r0, pc, r0
    d4dc:	bx	lr
    d4e0:	ldr	r0, [pc, #1672]	; db70 <bt_compidtostr@@Base+0x5fc8>
    d4e4:	add	r0, pc, r0
    d4e8:	bx	lr
    d4ec:	ldr	r0, [pc, #1664]	; db74 <bt_compidtostr@@Base+0x5fcc>
    d4f0:	add	r0, pc, r0
    d4f4:	bx	lr
    d4f8:	ldr	r0, [pc, #1656]	; db78 <bt_compidtostr@@Base+0x5fd0>
    d4fc:	add	r0, pc, r0
    d500:	bx	lr
    d504:	ldr	r0, [pc, #1648]	; db7c <bt_compidtostr@@Base+0x5fd4>
    d508:	add	r0, pc, r0
    d50c:	bx	lr
    d510:	ldr	r0, [pc, #1640]	; db80 <bt_compidtostr@@Base+0x5fd8>
    d514:	add	r0, pc, r0
    d518:	bx	lr
    d51c:	ldr	r0, [pc, #1632]	; db84 <bt_compidtostr@@Base+0x5fdc>
    d520:	add	r0, pc, r0
    d524:	bx	lr
    d528:	ldr	r0, [pc, #1624]	; db88 <bt_compidtostr@@Base+0x5fe0>
    d52c:	add	r0, pc, r0
    d530:	bx	lr
    d534:	ldr	r0, [pc, #1616]	; db8c <bt_compidtostr@@Base+0x5fe4>
    d538:	add	r0, pc, r0
    d53c:	bx	lr
    d540:	ldr	r0, [pc, #1608]	; db90 <bt_compidtostr@@Base+0x5fe8>
    d544:	add	r0, pc, r0
    d548:	bx	lr
    d54c:	ldr	r0, [pc, #1600]	; db94 <bt_compidtostr@@Base+0x5fec>
    d550:	add	r0, pc, r0
    d554:	bx	lr
    d558:	ldr	r0, [pc, #1592]	; db98 <bt_compidtostr@@Base+0x5ff0>
    d55c:	add	r0, pc, r0
    d560:	bx	lr
    d564:	ldr	r0, [pc, #1584]	; db9c <bt_compidtostr@@Base+0x5ff4>
    d568:	add	r0, pc, r0
    d56c:	bx	lr
    d570:	ldr	r0, [pc, #1576]	; dba0 <bt_compidtostr@@Base+0x5ff8>
    d574:	add	r0, pc, r0
    d578:	bx	lr
    d57c:	ldr	r0, [pc, #1568]	; dba4 <bt_compidtostr@@Base+0x5ffc>
    d580:	add	r0, pc, r0
    d584:	bx	lr
    d588:	ldr	r0, [pc, #1560]	; dba8 <bt_compidtostr@@Base+0x6000>
    d58c:	add	r0, pc, r0
    d590:	bx	lr
    d594:	ldr	r0, [pc, #1552]	; dbac <bt_compidtostr@@Base+0x6004>
    d598:	add	r0, pc, r0
    d59c:	bx	lr
    d5a0:	ldr	r0, [pc, #1544]	; dbb0 <bt_compidtostr@@Base+0x6008>
    d5a4:	add	r0, pc, r0
    d5a8:	bx	lr
    d5ac:	ldr	r0, [pc, #1536]	; dbb4 <bt_compidtostr@@Base+0x600c>
    d5b0:	add	r0, pc, r0
    d5b4:	bx	lr
    d5b8:	ldr	r0, [pc, #1528]	; dbb8 <bt_compidtostr@@Base+0x6010>
    d5bc:	add	r0, pc, r0
    d5c0:	bx	lr
    d5c4:	ldr	r0, [pc, #1520]	; dbbc <bt_compidtostr@@Base+0x6014>
    d5c8:	add	r0, pc, r0
    d5cc:	bx	lr
    d5d0:	ldr	r0, [pc, #1512]	; dbc0 <bt_compidtostr@@Base+0x6018>
    d5d4:	add	r0, pc, r0
    d5d8:	bx	lr
    d5dc:	ldr	r0, [pc, #1504]	; dbc4 <bt_compidtostr@@Base+0x601c>
    d5e0:	add	r0, pc, r0
    d5e4:	bx	lr
    d5e8:	ldr	r0, [pc, #1496]	; dbc8 <bt_compidtostr@@Base+0x6020>
    d5ec:	add	r0, pc, r0
    d5f0:	bx	lr
    d5f4:	ldr	r0, [pc, #1488]	; dbcc <bt_compidtostr@@Base+0x6024>
    d5f8:	add	r0, pc, r0
    d5fc:	bx	lr
    d600:	ldr	r0, [pc, #1480]	; dbd0 <bt_compidtostr@@Base+0x6028>
    d604:	add	r0, pc, r0
    d608:	bx	lr
    d60c:	ldr	r0, [pc, #1472]	; dbd4 <bt_compidtostr@@Base+0x602c>
    d610:	add	r0, pc, r0
    d614:	bx	lr
    d618:	ldr	r0, [pc, #1464]	; dbd8 <bt_compidtostr@@Base+0x6030>
    d61c:	add	r0, pc, r0
    d620:	bx	lr
    d624:	ldr	r0, [pc, #1456]	; dbdc <bt_compidtostr@@Base+0x6034>
    d628:	add	r0, pc, r0
    d62c:	bx	lr
    d630:	ldr	r0, [pc, #1448]	; dbe0 <bt_compidtostr@@Base+0x6038>
    d634:	add	r0, pc, r0
    d638:	bx	lr
    d63c:	ldr	r0, [pc, #1440]	; dbe4 <bt_compidtostr@@Base+0x603c>
    d640:	add	r0, pc, r0
    d644:	bx	lr
    d648:	ldr	r0, [pc, #1432]	; dbe8 <bt_compidtostr@@Base+0x6040>
    d64c:	add	r0, pc, r0
    d650:	bx	lr
    d654:	ldr	r0, [pc, #1424]	; dbec <bt_compidtostr@@Base+0x6044>
    d658:	add	r0, pc, r0
    d65c:	bx	lr
    d660:	ldr	r0, [pc, #1416]	; dbf0 <bt_compidtostr@@Base+0x6048>
    d664:	add	r0, pc, r0
    d668:	bx	lr
    d66c:	ldr	r0, [pc, #1408]	; dbf4 <bt_compidtostr@@Base+0x604c>
    d670:	add	r0, pc, r0
    d674:	bx	lr
    d678:	ldr	r0, [pc, #1400]	; dbf8 <bt_compidtostr@@Base+0x6050>
    d67c:	add	r0, pc, r0
    d680:	bx	lr
    d684:	ldr	r0, [pc, #1392]	; dbfc <bt_compidtostr@@Base+0x6054>
    d688:	add	r0, pc, r0
    d68c:	bx	lr
    d690:	ldr	r0, [pc, #1384]	; dc00 <bt_compidtostr@@Base+0x6058>
    d694:	add	r0, pc, r0
    d698:	bx	lr
    d69c:	ldr	r0, [pc, #1376]	; dc04 <bt_compidtostr@@Base+0x605c>
    d6a0:	add	r0, pc, r0
    d6a4:	bx	lr
    d6a8:	ldr	r0, [pc, #1368]	; dc08 <bt_compidtostr@@Base+0x6060>
    d6ac:	add	r0, pc, r0
    d6b0:	bx	lr
    d6b4:	ldr	r0, [pc, #1360]	; dc0c <bt_compidtostr@@Base+0x6064>
    d6b8:	add	r0, pc, r0
    d6bc:	bx	lr
    d6c0:	ldr	r0, [pc, #1352]	; dc10 <bt_compidtostr@@Base+0x6068>
    d6c4:	add	r0, pc, r0
    d6c8:	bx	lr
    d6cc:	ldr	r0, [pc, #1344]	; dc14 <bt_compidtostr@@Base+0x606c>
    d6d0:	add	r0, pc, r0
    d6d4:	bx	lr
    d6d8:	ldr	r0, [pc, #1336]	; dc18 <bt_compidtostr@@Base+0x6070>
    d6dc:	add	r0, pc, r0
    d6e0:	bx	lr
    d6e4:	ldr	r0, [pc, #1328]	; dc1c <bt_compidtostr@@Base+0x6074>
    d6e8:	add	r0, pc, r0
    d6ec:	bx	lr
    d6f0:	ldr	r0, [pc, #1320]	; dc20 <bt_compidtostr@@Base+0x6078>
    d6f4:	add	r0, pc, r0
    d6f8:	bx	lr
    d6fc:	ldr	r0, [pc, #1312]	; dc24 <bt_compidtostr@@Base+0x607c>
    d700:	add	r0, pc, r0
    d704:	bx	lr
    d708:	ldr	r0, [pc, #1304]	; dc28 <bt_compidtostr@@Base+0x6080>
    d70c:	add	r0, pc, r0
    d710:	bx	lr
    d714:	ldr	r0, [pc, #1296]	; dc2c <bt_compidtostr@@Base+0x6084>
    d718:	add	r0, pc, r0
    d71c:	bx	lr
    d720:	ldr	r0, [pc, #1288]	; dc30 <bt_compidtostr@@Base+0x6088>
    d724:	add	r0, pc, r0
    d728:	bx	lr
    d72c:	ldr	r0, [pc, #1280]	; dc34 <bt_compidtostr@@Base+0x608c>
    d730:	add	r0, pc, r0
    d734:	bx	lr
    d738:	ldr	r0, [pc, #1272]	; dc38 <bt_compidtostr@@Base+0x6090>
    d73c:	add	r0, pc, r0
    d740:	bx	lr
    d744:	ldr	r0, [pc, #1264]	; dc3c <bt_compidtostr@@Base+0x6094>
    d748:	add	r0, pc, r0
    d74c:	bx	lr
    d750:	ldr	r0, [pc, #1256]	; dc40 <bt_compidtostr@@Base+0x6098>
    d754:	add	r0, pc, r0
    d758:	bx	lr
    d75c:	ldr	r0, [pc, #1248]	; dc44 <bt_compidtostr@@Base+0x609c>
    d760:	add	r0, pc, r0
    d764:	bx	lr
    d768:	ldr	r0, [pc, #1240]	; dc48 <bt_compidtostr@@Base+0x60a0>
    d76c:	add	r0, pc, r0
    d770:	bx	lr
    d774:	ldr	r0, [pc, #1232]	; dc4c <bt_compidtostr@@Base+0x60a4>
    d778:	add	r0, pc, r0
    d77c:	bx	lr
    d780:	ldr	r0, [pc, #1224]	; dc50 <bt_compidtostr@@Base+0x60a8>
    d784:	add	r0, pc, r0
    d788:	bx	lr
    d78c:	ldr	r0, [pc, #1216]	; dc54 <bt_compidtostr@@Base+0x60ac>
    d790:	add	r0, pc, r0
    d794:	bx	lr
    d798:	ldr	r0, [pc, #1208]	; dc58 <bt_compidtostr@@Base+0x60b0>
    d79c:	add	r0, pc, r0
    d7a0:	bx	lr
    d7a4:	ldr	r0, [pc, #1200]	; dc5c <bt_compidtostr@@Base+0x60b4>
    d7a8:	add	r0, pc, r0
    d7ac:	bx	lr
    d7b0:	ldr	r0, [pc, #1192]	; dc60 <bt_compidtostr@@Base+0x60b8>
    d7b4:	add	r0, pc, r0
    d7b8:	bx	lr
    d7bc:	ldr	r0, [pc, #1184]	; dc64 <bt_compidtostr@@Base+0x60bc>
    d7c0:	add	r0, pc, r0
    d7c4:	bx	lr
    d7c8:	ldr	r0, [pc, #1176]	; dc68 <bt_compidtostr@@Base+0x60c0>
    d7cc:	add	r0, pc, r0
    d7d0:	bx	lr
    d7d4:	ldr	r0, [pc, #1168]	; dc6c <bt_compidtostr@@Base+0x60c4>
    d7d8:	add	r0, pc, r0
    d7dc:	bx	lr
    d7e0:	ldr	r0, [pc, #1160]	; dc70 <bt_compidtostr@@Base+0x60c8>
    d7e4:	add	r0, pc, r0
    d7e8:	bx	lr
    d7ec:	ldr	r0, [pc, #1152]	; dc74 <bt_compidtostr@@Base+0x60cc>
    d7f0:	add	r0, pc, r0
    d7f4:	bx	lr
    d7f8:	ldr	r0, [pc, #1144]	; dc78 <bt_compidtostr@@Base+0x60d0>
    d7fc:	add	r0, pc, r0
    d800:	bx	lr
    d804:	ldr	r0, [pc, #1136]	; dc7c <bt_compidtostr@@Base+0x60d4>
    d808:	add	r0, pc, r0
    d80c:	bx	lr
    d810:	ldr	r0, [pc, #1128]	; dc80 <bt_compidtostr@@Base+0x60d8>
    d814:	add	r0, pc, r0
    d818:	bx	lr
    d81c:	ldr	r0, [pc, #1120]	; dc84 <bt_compidtostr@@Base+0x60dc>
    d820:	add	r0, pc, r0
    d824:	bx	lr
    d828:	ldr	r0, [pc, #1112]	; dc88 <bt_compidtostr@@Base+0x60e0>
    d82c:	add	r0, pc, r0
    d830:	bx	lr
    d834:	ldr	r0, [pc, #1104]	; dc8c <bt_compidtostr@@Base+0x60e4>
    d838:	add	r0, pc, r0
    d83c:	bx	lr
    d840:	ldr	r0, [pc, #1096]	; dc90 <bt_compidtostr@@Base+0x60e8>
    d844:	add	r0, pc, r0
    d848:	bx	lr
    d84c:	ldr	r0, [pc, #1088]	; dc94 <bt_compidtostr@@Base+0x60ec>
    d850:	add	r0, pc, r0
    d854:	bx	lr
    d858:	ldr	r0, [pc, #1080]	; dc98 <bt_compidtostr@@Base+0x60f0>
    d85c:	add	r0, pc, r0
    d860:	bx	lr
    d864:	ldr	r0, [pc, #1072]	; dc9c <bt_compidtostr@@Base+0x60f4>
    d868:	add	r0, pc, r0
    d86c:	bx	lr
    d870:	ldr	r0, [pc, #1064]	; dca0 <bt_compidtostr@@Base+0x60f8>
    d874:	add	r0, pc, r0
    d878:	bx	lr
    d87c:	ldr	r0, [pc, #1056]	; dca4 <bt_compidtostr@@Base+0x60fc>
    d880:	add	r0, pc, r0
    d884:	bx	lr
    d888:	ldr	r0, [pc, #1048]	; dca8 <bt_compidtostr@@Base+0x6100>
    d88c:	add	r0, pc, r0
    d890:	bx	lr
    d894:	ldr	r0, [pc, #1040]	; dcac <bt_compidtostr@@Base+0x6104>
    d898:	add	r0, pc, r0
    d89c:	bx	lr
    d8a0:	ldr	r0, [pc, #1032]	; dcb0 <bt_compidtostr@@Base+0x6108>
    d8a4:	add	r0, pc, r0
    d8a8:	bx	lr
    d8ac:	ldr	r0, [pc, #1024]	; dcb4 <bt_compidtostr@@Base+0x610c>
    d8b0:	add	r0, pc, r0
    d8b4:	bx	lr
    d8b8:	ldr	r0, [pc, #1016]	; dcb8 <bt_compidtostr@@Base+0x6110>
    d8bc:	add	r0, pc, r0
    d8c0:	bx	lr
    d8c4:	ldr	r0, [pc, #1008]	; dcbc <bt_compidtostr@@Base+0x6114>
    d8c8:	add	r0, pc, r0
    d8cc:	bx	lr
    d8d0:	ldr	r0, [pc, #1000]	; dcc0 <bt_compidtostr@@Base+0x6118>
    d8d4:	add	r0, pc, r0
    d8d8:	bx	lr
    d8dc:	ldr	r0, [pc, #992]	; dcc4 <bt_compidtostr@@Base+0x611c>
    d8e0:	add	r0, pc, r0
    d8e4:	bx	lr
    d8e8:	ldr	r0, [pc, #984]	; dcc8 <bt_compidtostr@@Base+0x6120>
    d8ec:	add	r0, pc, r0
    d8f0:	bx	lr
    d8f4:	ldr	r0, [pc, #976]	; dccc <bt_compidtostr@@Base+0x6124>
    d8f8:	add	r0, pc, r0
    d8fc:	bx	lr
    d900:	ldr	r0, [pc, #968]	; dcd0 <bt_compidtostr@@Base+0x6128>
    d904:	add	r0, pc, r0
    d908:	bx	lr
    d90c:	ldr	r0, [pc, #960]	; dcd4 <bt_compidtostr@@Base+0x612c>
    d910:	add	r0, pc, r0
    d914:	bx	lr
    d918:	ldr	r0, [pc, #952]	; dcd8 <bt_compidtostr@@Base+0x6130>
    d91c:	add	r0, pc, r0
    d920:	bx	lr
    d924:	ldr	r0, [pc, #944]	; dcdc <bt_compidtostr@@Base+0x6134>
    d928:	add	r0, pc, r0
    d92c:	bx	lr
    d930:	ldr	r0, [pc, #936]	; dce0 <bt_compidtostr@@Base+0x6138>
    d934:	add	r0, pc, r0
    d938:	bx	lr
    d93c:	ldr	r0, [pc, #928]	; dce4 <bt_compidtostr@@Base+0x613c>
    d940:	add	r0, pc, r0
    d944:	bx	lr
    d948:	ldr	r0, [pc, #920]	; dce8 <bt_compidtostr@@Base+0x6140>
    d94c:	add	r0, pc, r0
    d950:	bx	lr
    d954:	ldr	r0, [pc, #912]	; dcec <bt_compidtostr@@Base+0x6144>
    d958:	add	r0, pc, r0
    d95c:	bx	lr
    d960:	ldr	r0, [pc, #904]	; dcf0 <bt_compidtostr@@Base+0x6148>
    d964:	add	r0, pc, r0
    d968:	bx	lr
    d96c:	ldr	r0, [pc, #896]	; dcf4 <bt_compidtostr@@Base+0x614c>
    d970:	add	r0, pc, r0
    d974:	bx	lr
    d978:	ldr	r0, [pc, #888]	; dcf8 <bt_compidtostr@@Base+0x6150>
    d97c:	add	r0, pc, r0
    d980:	bx	lr
    d984:	ldr	r0, [pc, #880]	; dcfc <bt_compidtostr@@Base+0x6154>
    d988:	add	r0, pc, r0
    d98c:	bx	lr
    d990:	ldr	r0, [pc, #872]	; dd00 <bt_compidtostr@@Base+0x6158>
    d994:	add	r0, pc, r0
    d998:	bx	lr
    d99c:	ldr	r0, [pc, #864]	; dd04 <bt_compidtostr@@Base+0x615c>
    d9a0:	add	r0, pc, r0
    d9a4:	bx	lr
    d9a8:	ldr	r0, [pc, #856]	; dd08 <bt_compidtostr@@Base+0x6160>
    d9ac:	add	r0, pc, r0
    d9b0:	bx	lr
    d9b4:	ldr	r0, [pc, #848]	; dd0c <bt_compidtostr@@Base+0x6164>
    d9b8:	add	r0, pc, r0
    d9bc:	bx	lr
    d9c0:	ldr	r0, [pc, #840]	; dd10 <bt_compidtostr@@Base+0x6168>
    d9c4:	add	r0, pc, r0
    d9c8:	bx	lr
    d9cc:	ldr	r0, [pc, #832]	; dd14 <bt_compidtostr@@Base+0x616c>
    d9d0:	add	r0, pc, r0
    d9d4:	bx	lr
    d9d8:	ldr	r0, [pc, #824]	; dd18 <bt_compidtostr@@Base+0x6170>
    d9dc:	add	r0, pc, r0
    d9e0:	bx	lr
    d9e4:	ldr	r0, [pc, #816]	; dd1c <bt_compidtostr@@Base+0x6174>
    d9e8:	add	r0, pc, r0
    d9ec:	bx	lr
    d9f0:	ldr	r0, [pc, #808]	; dd20 <bt_compidtostr@@Base+0x6178>
    d9f4:	add	r0, pc, r0
    d9f8:	bx	lr
    d9fc:	ldr	r0, [pc, #800]	; dd24 <bt_compidtostr@@Base+0x617c>
    da00:	add	r0, pc, r0
    da04:	bx	lr
    da08:	ldr	r0, [pc, #792]	; dd28 <bt_compidtostr@@Base+0x6180>
    da0c:	add	r0, pc, r0
    da10:	bx	lr
    da14:	ldr	r0, [pc, #784]	; dd2c <bt_compidtostr@@Base+0x6184>
    da18:	add	r0, pc, r0
    da1c:	bx	lr
    da20:	ldr	r0, [pc, #776]	; dd30 <bt_compidtostr@@Base+0x6188>
    da24:	add	r0, pc, r0
    da28:	bx	lr
    da2c:	andeq	r8, r0, r8, ror #17
    da30:	andeq	r8, r0, r8, ror #17
    da34:			; <UNDEFINED> instruction: 0x0000a6bc
    da38:	andeq	r6, r0, r4, ror r2
    da3c:	andeq	r9, r0, ip, lsl #26
    da40:	andeq	r7, r0, r4, asr r3
    da44:	strdeq	r7, [r0], -r0
    da48:	andeq	r7, r0, r4, lsl #4
    da4c:	andeq	r9, r0, r0, lsl #14
    da50:	andeq	r9, r0, r0, lsl r7
    da54:	muleq	r0, r8, fp
    da58:	muleq	r0, r8, fp
    da5c:	andeq	r9, r0, r4, lsr #5
    da60:	andeq	r9, r0, ip, lsr #5
    da64:	andeq	r8, r0, r4, lsl r6
    da68:	andeq	r8, r0, r8, lsl r6
    da6c:	andeq	r6, r0, r4, lsr #18
    da70:	andeq	r6, r0, ip, lsr #18
    da74:	andeq	r8, r0, r0, lsr #14
    da78:			; <UNDEFINED> instruction: 0x000077b4
    da7c:			; <UNDEFINED> instruction: 0x00007cbc
    da80:	ldrdeq	r5, [r0], -r4
    da84:	andeq	r5, r0, r4, lsr #21
    da88:			; <UNDEFINED> instruction: 0x00005ab8
    da8c:	andeq	r7, r0, r0, ror r8
    da90:	andeq	r7, r0, ip, ror #16
    da94:	andeq	r7, r0, ip, asr #12
    da98:	andeq	r7, r0, r4, asr r6
    da9c:	andeq	r7, r0, r8, lsl ip
    daa0:	andeq	r7, r0, ip, lsl ip
    daa4:	andeq	r7, r0, r4, lsl #22
    daa8:	andeq	r7, r0, ip, lsl #22
    daac:	ldrdeq	r6, [r0], -r8
    dab0:	andeq	r6, r0, r4, ror #27
    dab4:	andeq	r6, r0, ip, lsl #25
    dab8:	andeq	sl, r0, r4, ror r0
    dabc:	andeq	r9, r0, ip, asr #32
    dac0:	andeq	r9, r0, r4, ror #11
    dac4:			; <UNDEFINED> instruction: 0x000094b8
    dac8:	andeq	r9, r0, r0, asr #9
    dacc:	andeq	sl, r0, ip, ror #19
    dad0:	strdeq	sl, [r0], -r0
    dad4:	ldrdeq	sl, [r0], -ip
    dad8:	andeq	sl, r0, r0, ror #7
    dadc:			; <UNDEFINED> instruction: 0x00008ab8
    dae0:	andeq	r8, r0, ip, asr #21
    dae4:	andeq	r5, r0, r4, lsl #30
    dae8:	andeq	r5, r0, r4, lsr #30
    daec:	strdeq	r9, [r0], -ip
    daf0:	andeq	r9, r0, r0, lsl #24
    daf4:			; <UNDEFINED> instruction: 0x000064b4
    daf8:	andeq	r6, r0, r8, asr #9
    dafc:	andeq	r9, r0, r4, asr #15
    db00:	ldrdeq	r9, [r0], -r0
    db04:	andeq	r6, r0, r8, lsr #21
    db08:	andeq	r6, r0, r8, lsr #21
    db0c:			; <UNDEFINED> instruction: 0x00007fb8
    db10:			; <UNDEFINED> instruction: 0x00007fbc
    db14:	andeq	r9, r0, r8, lsl #28
    db18:	andeq	r9, r0, r8, lsl lr
    db1c:	andeq	r7, r0, ip, lsl #1
    db20:	muleq	r0, r8, r0
    db24:	andeq	r8, r0, ip, lsr lr
    db28:	andeq	r8, r0, ip, lsr lr
    db2c:			; <UNDEFINED> instruction: 0x00007bb0
    db30:			; <UNDEFINED> instruction: 0x00007bb8
    db34:	andeq	r8, r0, r0, lsl #28
    db38:	ldrdeq	r6, [r0], -r8
    db3c:	andeq	r8, r0, ip, ror #11
    db40:	andeq	r8, r0, r4, lsl #17
    db44:	muleq	r0, ip, fp
    db48:	andeq	r7, r0, r0, lsr #28
    db4c:	andeq	r7, r0, r8, asr r1
    db50:	andeq	r7, r0, r8, lsl #8
    db54:	andeq	r6, r0, r8, lsr #10
    db58:	andeq	r7, r0, r0, asr #17
    db5c:	andeq	r7, r0, r4, lsl #17
    db60:	muleq	r0, r8, r8
    db64:	andeq	sl, r0, r4, lsr #32
    db68:	andeq	sl, r0, r4, lsr #32
    db6c:			; <UNDEFINED> instruction: 0x00008eb0
    db70:			; <UNDEFINED> instruction: 0x00008eb8
    db74:	andeq	r5, r0, r0, asr #20
    db78:	andeq	r5, r0, r4, asr #20
    db7c:	andeq	r9, r0, r0, ror #23
    db80:	andeq	r9, r0, r4, ror #23
    db84:	andeq	r7, r0, r0, asr r1
    db88:	andeq	r7, r0, ip, asr r1
    db8c:	andeq	r6, r0, ip, asr #19
    db90:	andeq	r6, r0, ip, asr #19
    db94:	andeq	sl, r0, ip, ror #7
    db98:	strdeq	sl, [r0], -r0
    db9c:	andeq	r7, r0, ip, lsr #24
    dba0:	andeq	r7, r0, r4, lsr ip
    dba4:	andeq	r8, r0, r8, lsr #32
    dba8:	andeq	r8, r0, ip, lsr r0
    dbac:	andeq	r8, r0, r8, lsr r3
    dbb0:	andeq	r8, r0, ip, asr #6
    dbb4:	andeq	r5, r0, r4, ror r9
    dbb8:	andeq	r5, r0, r0, ror ip
    dbbc:	andeq	r6, r0, r8, ror r5
    dbc0:	andeq	r6, r0, r8, ror #16
    dbc4:			; <UNDEFINED> instruction: 0x000099b0
    dbc8:			; <UNDEFINED> instruction: 0x000099b8
    dbcc:	andeq	r9, r0, r4, ror #31
    dbd0:	andeq	r9, r0, ip, ror #31
    dbd4:	andeq	r7, r0, r0, lsr #11
    dbd8:	andeq	r7, r0, r4, lsr #11
    dbdc:	andeq	sl, r0, r0, lsl #3
    dbe0:	andeq	sl, r0, ip, ror r1
    dbe4:	andeq	r6, r0, r8, lsl #5
    dbe8:	andeq	r6, r0, r4, lsl #5
    dbec:	strdeq	sl, [r0], -r0
    dbf0:	strdeq	sl, [r0], -r4
    dbf4:	andeq	r7, r0, r4, lsr #19
    dbf8:	andeq	r7, r0, r8, lsr #19
    dbfc:	andeq	r5, r0, r4, asr #20
    dc00:	andeq	r5, r0, r8, ror #20
    dc04:			; <UNDEFINED> instruction: 0x000064b8
    dc08:	andeq	r6, r0, r8, asr #9
    dc0c:	andeq	r9, r0, ip, asr #6
    dc10:	andeq	r9, r0, r8, asr r3
    dc14:	andeq	r8, r0, ip, asr #27
    dc18:	andeq	r8, r0, ip, asr #27
    dc1c:	andeq	r6, r0, ip
    dc20:	andeq	r6, r0, r0, lsr #32
    dc24:	andeq	r6, r0, r0, asr sl
    dc28:	andeq	r6, r0, ip, asr sl
    dc2c:	ldrdeq	r5, [r0], -ip
    dc30:	andeq	r5, r0, r8, ror #15
    dc34:	andeq	r5, r0, r0, lsr #28
    dc38:	andeq	r5, r0, ip, lsr #28
    dc3c:	andeq	r8, r0, r8, asr #9
    dc40:	andeq	r8, r0, r8, asr #9
    dc44:	andeq	sl, r0, r4, lsr r7
    dc48:	andeq	sl, r0, ip, lsr r7
    dc4c:	andeq	r9, r0, ip, lsr #25
    dc50:	andeq	r9, r0, ip, lsr #25
    dc54:	andeq	r6, r0, ip, lsl r9
    dc58:	andeq	r6, r0, r4, lsr #18
    dc5c:	andeq	r6, r0, r0, ror #10
    dc60:	andeq	r6, r0, r8, ror #10
    dc64:	andeq	r5, r0, r0, lsr #16
    dc68:	andeq	r5, r0, r8, lsr #16
    dc6c:			; <UNDEFINED> instruction: 0x00008db8
    dc70:	andeq	r8, r0, r0, asr #27
    dc74:	andeq	r7, r0, ip, lsl r3
    dc78:	andeq	r7, r0, r4, asr #6
    dc7c:	andeq	r8, r0, r0, lsr #28
    dc80:	andeq	r8, r0, r4, lsr lr
    dc84:	andeq	r7, r0, r8, lsr r4
    dc88:	andeq	r7, r0, r0, asr #8
    dc8c:	andeq	r6, r0, r0, ror #26
    dc90:	andeq	r6, r0, r0, ror #26
    dc94:			; <UNDEFINED> instruction: 0x0000a3b8
    dc98:			; <UNDEFINED> instruction: 0x0000a3b8
    dc9c:	andeq	r8, r0, r8, lsl #21
    dca0:	andeq	r8, r0, r4, lsl #21
    dca4:	andeq	sl, r0, ip, ror r1
    dca8:	andeq	sl, r0, r8, ror r1
    dcac:	andeq	r8, r0, r8, asr #5
    dcb0:	andeq	r8, r0, r4, ror #5
    dcb4:	andeq	r6, r0, ip, lsr #26
    dcb8:	andeq	r6, r0, ip, lsr #26
    dcbc:	andeq	r8, r0, r8, asr r8
    dcc0:	andeq	r8, r0, r8, lsl #17
    dcc4:	andeq	r9, r0, r8, asr #14
    dcc8:	andeq	r9, r0, ip, asr #14
    dccc:	strdeq	r5, [r0], -r8
    dcd0:	andeq	r5, r0, r0, lsl ip
    dcd4:	strdeq	r7, [r0], -ip
    dcd8:	andeq	r7, r0, r0, lsl #24
    dcdc:	andeq	sl, r0, r4, lsl #14
    dce0:	andeq	sl, r0, r0, lsl r7
    dce4:			; <UNDEFINED> instruction: 0x000081bc
    dce8:	ldrdeq	r8, [r0], -r0
    dcec:	andeq	r5, r0, ip, asr #13
    dcf0:	andeq	r5, r0, r0, ror #13
    dcf4:	andeq	r8, r0, r4, lsr r6
    dcf8:	andeq	r8, r0, ip, lsr r6
    dcfc:	andeq	sl, r0, ip, ror #2
    dd00:	andeq	sl, r0, r0, ror r1
    dd04:	andeq	r8, r0, r0, lsr #23
    dd08:	andeq	r8, r0, r0, lsr #23
    dd0c:			; <UNDEFINED> instruction: 0x000088b8
    dd10:			; <UNDEFINED> instruction: 0x000088bc
    dd14:	muleq	r0, r8, r0
    dd18:	andeq	r9, r0, r0, lsr #1
    dd1c:	andeq	r9, r0, ip, lsr #8
    dd20:	andeq	r9, r0, r8, lsr r4
    dd24:	andeq	r7, r0, r8, ror sl
    dd28:	andeq	r7, r0, r0, lsl #21
    dd2c:	andeq	sl, r0, r0, lsr #32
    dd30:	andeq	sl, r0, r0, asr #32
    dd34:	andeq	r0, r0, r0

0000dd38 <btbb_pcap_open@@Base>:
    dd38:	push	{r4, lr}
    dd3c:	sub	sp, sp, #24
    dd40:	ldr	r4, [pc, #88]	; dda0 <btbb_pcap_open@@Base+0x68>
    dd44:	str	r1, [sp, #20]
    dd48:	ldr	r1, [pc, #84]	; dda4 <btbb_pcap_open@@Base+0x6c>
    dd4c:	mov	r3, #0
    dd50:	mov	lr, #2
    dd54:	mov	ip, #4
    dd58:	add	r1, pc, r1
    dd5c:	str	r4, [sp]
    dd60:	str	r2, [sp, #16]
    dd64:	strh	lr, [sp, #4]
    dd68:	strh	ip, [sp, #6]
    dd6c:	str	r3, [sp, #8]
    dd70:	str	r3, [sp, #12]
    dd74:	bl	2164 <fopen@plt>
    dd78:	subs	r4, r0, #0
    dd7c:	beq	dd94 <btbb_pcap_open@@Base+0x5c>
    dd80:	mov	r3, r4
    dd84:	mov	r2, #1
    dd88:	mov	r1, #24
    dd8c:	mov	r0, sp
    dd90:	bl	22b4 <fwrite@plt>
    dd94:	mov	r0, r4
    dd98:	add	sp, sp, #24
    dd9c:	pop	{r4, pc}
    dda0:			; <UNDEFINED> instruction: 0xa1b23c4d
    dda4:			; <UNDEFINED> instruction: 0x0000a3b8

0000dda8 <btbb_pcap_dump@@Base>:
    dda8:	push	{r4, r5, r6, lr}
    ddac:	mov	r4, r1
    ddb0:	mov	r5, r0
    ddb4:	mov	r6, r2
    ddb8:	mov	r3, r0
    ddbc:	mov	r2, #1
    ddc0:	mov	r0, r1
    ddc4:	mov	r1, #16
    ddc8:	bl	22b4 <fwrite@plt>
    ddcc:	ldrb	r0, [r4, #9]
    ddd0:	ldrb	r2, [r4, #10]
    ddd4:	ldrb	r3, [r4, #8]
    ddd8:	ldrb	r1, [r4, #11]
    dddc:	orr	r3, r3, r0, lsl #8
    dde0:	orr	r3, r3, r2, lsl #16
    dde4:	mov	r0, r6
    dde8:	orr	r1, r3, r1, lsl #24
    ddec:	mov	r2, #1
    ddf0:	mov	r3, r5
    ddf4:	bl	22b4 <fwrite@plt>
    ddf8:	mov	r0, r5
    ddfc:	pop	{r4, r5, r6, lr}
    de00:	b	217c <fflush@plt>

0000de04 <btbb_pcap_append_packet@@Base>:
    de04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    de08:	add	fp, sp, #32
    de0c:	cmp	r0, #0
    de10:	sub	sp, sp, #484	; 0x1e4
    de14:	ldrsb	r9, [fp, #4]
    de18:	ldrsb	sl, [fp, #8]
    de1c:	ldrb	r7, [fp, #16]
    de20:	beq	dfd4 <btbb_pcap_append_packet@@Base+0x1d0>
    de24:	ldr	r1, [r0]
    de28:	cmp	r1, #0
    de2c:	beq	dfd4 <btbb_pcap_append_packet@@Base+0x1d0>
    de30:	sub	r1, fp, #484	; 0x1e4
    de34:	cmp	sl, r9
    de38:	strd	r2, [r1]
    de3c:	ldr	r1, [fp, #12]
    de40:	movlt	r3, #7
    de44:	movge	r3, #3
    de48:	cmn	r1, #1
    de4c:	movne	r2, #16
    de50:	moveq	r2, #0
    de54:	cmp	r7, #255	; 0xff
    de58:	orr	r3, r3, r2
    de5c:	movne	r2, #128	; 0x80
    de60:	moveq	r2, #0
    de64:	orr	r3, r2, r3
    de68:	str	r0, [fp, #-516]	; 0xfffffdfc
    de6c:	ldr	r0, [fp, #20]
    de70:	str	r3, [fp, #-488]	; 0xfffffe18
    de74:	bl	2380 <btbb_packet_get_payload_length@plt>
    de78:	str	sp, [fp, #-512]	; 0xfffffe00
    de7c:	sub	r5, fp, #476	; 0x1dc
    de80:	add	r3, r0, #7
    de84:	bic	r3, r3, #7
    de88:	sub	sp, sp, r3
    de8c:	mov	r1, sp
    de90:	mov	r4, r0
    de94:	ldr	r0, [fp, #20]
    de98:	bl	214c <btbb_get_payload_packed@plt>
    de9c:	cmp	r4, #400	; 0x190
    dea0:	ldr	r0, [fp, #20]
    dea4:	movcs	r4, #400	; 0x190
    dea8:	bl	24d0 <btbb_packet_get_channel@plt>
    deac:	add	r8, r4, #22
    deb0:	str	r0, [fp, #-500]	; 0xfffffe0c
    deb4:	ldr	r0, [fp, #20]
    deb8:	bl	21b8 <btbb_packet_get_ac_errors@plt>
    debc:	str	r0, [fp, #-504]	; 0xfffffe08
    dec0:	ldr	r0, [fp, #20]
    dec4:	bl	23f8 <btbb_packet_get_transport@plt>
    dec8:	str	r0, [fp, #-508]	; 0xfffffe04
    decc:	ldr	r0, [fp, #20]
    ded0:	bl	21ac <btbb_packet_get_modulation@plt>
    ded4:	mov	r6, r0
    ded8:	ldr	r0, [fp, #20]
    dedc:	bl	2458 <btbb_packet_get_lap@plt>
    dee0:	str	r0, [fp, #-492]	; 0xfffffe14
    dee4:	ldr	r0, [fp, #20]
    dee8:	bl	23b0 <btbb_packet_get_header_packed@plt>
    deec:	sub	r1, fp, #484	; 0x1e4
    def0:	add	r3, pc, #232	; 0xe8
    def4:	ldrd	r2, [r3]
    def8:	str	r0, [fp, #-496]	; 0xfffffe10
    defc:	ldrd	r0, [r1]
    df00:	bl	f5bc <lell_pcapng_close@@Base+0x230>
    df04:	sub	r1, fp, #484	; 0x1e4
    df08:	add	r3, pc, #208	; 0xd0
    df0c:	ldrd	r2, [r3]
    df10:	str	r0, [fp, #-476]	; 0xfffffe24
    df14:	ldrd	r0, [r1]
    df18:	bl	f5bc <lell_pcapng_close@@Base+0x230>
    df1c:	ldr	r1, [fp, #12]
    df20:	cmp	r4, #0
    df24:	bic	r3, r1, #-16777216	; 0xff000000
    df28:	ldr	r1, [fp, #-508]	; 0xfffffe04
    df2c:	orr	r7, r3, r7, lsl #24
    df30:	mov	r3, #0
    df34:	orr	r6, r6, r1, lsl #4
    df38:	ldrb	r1, [fp, #-500]	; 0xfffffe0c
    df3c:	strb	r6, [fp, #-456]	; 0xfffffe38
    df40:	ldr	r6, [fp, #-488]	; 0xfffffe18
    df44:	strb	r1, [fp, #-460]	; 0xfffffe34
    df48:	ldrb	r1, [fp, #-504]	; 0xfffffe08
    df4c:	str	r7, [fp, #-448]	; 0xfffffe40
    df50:	strb	r9, [fp, #-459]	; 0xfffffe35
    df54:	strb	r1, [fp, #-457]	; 0xfffffe37
    df58:	ldr	r1, [fp, #-492]	; 0xfffffe14
    df5c:	strb	sl, [fp, #-458]	; 0xfffffe36
    df60:	str	r1, [fp, #-452]	; 0xfffffe3c
    df64:	ldr	r1, [fp, #-496]	; 0xfffffe10
    df68:	str	r8, [fp, #-468]	; 0xfffffe2c
    df6c:	str	r1, [fp, #-444]	; 0xfffffe44
    df70:	str	r8, [fp, #-464]	; 0xfffffe30
    df74:	strh	r6, [r5, #36]	; 0x24
    df78:	strh	r3, [r5, #22]
    df7c:	strb	r3, [fp, #-455]	; 0xfffffe39
    df80:	str	r2, [fp, #-472]	; 0xfffffe28
    df84:	bne	dfb8 <btbb_pcap_append_packet@@Base+0x1b4>
    df88:	sub	r3, fp, #488	; 0x1e8
    df8c:	ldrh	r3, [r3]
    df90:	strh	r3, [r5, #36]	; 0x24
    df94:	ldr	r3, [fp, #-516]	; 0xfffffdfc
    df98:	mov	r1, r5
    df9c:	sub	r2, fp, #460	; 0x1cc
    dfa0:	ldr	r0, [r3]
    dfa4:	bl	2344 <btbb_pcap_dump@plt>
    dfa8:	ldr	sp, [fp, #-512]	; 0xfffffe00
    dfac:	mov	r0, #0
    dfb0:	sub	sp, fp, #32
    dfb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dfb8:	mov	r2, r4
    dfbc:	mov	r1, sp
    dfc0:	add	r0, r5, #38	; 0x26
    dfc4:	bl	21c4 <memcpy@plt>
    dfc8:	orr	r3, r6, #32
    dfcc:	strh	r3, [r5, #36]	; 0x24
    dfd0:	b	df94 <btbb_pcap_append_packet@@Base+0x190>
    dfd4:	mvn	r0, #0
    dfd8:	b	dfb0 <btbb_pcap_append_packet@@Base+0x1ac>
    dfdc:	nop			; (mov r0, r0)
    dfe0:	blcc	fe6c07e8 <perm_table@@Base+0xfe697624>
    dfe4:	andeq	r0, r0, r0

0000dfe8 <btbb_pcap_close@@Base>:
    dfe8:	push	{r4, lr}
    dfec:	subs	r4, r0, #0
    dff0:	beq	e014 <btbb_pcap_close@@Base+0x2c>
    dff4:	ldr	r0, [r4]
    dff8:	cmp	r0, #0
    dffc:	beq	e004 <btbb_pcap_close@@Base+0x1c>
    e000:	bl	24a0 <fclose@plt>
    e004:	mov	r0, r4
    e008:	bl	21a0 <free@plt>
    e00c:	mov	r0, #0
    e010:	pop	{r4, pc}
    e014:	mvn	r0, #0
    e018:	pop	{r4, pc}

0000e01c <btbb_pcap_create_file@@Base>:
    e01c:	push	{r4, r5, r6, lr}
    e020:	mov	r5, r0
    e024:	mov	r6, r1
    e028:	mov	r0, #4
    e02c:	mov	r1, #1
    e030:	bl	2104 <calloc@plt>
    e034:	subs	r4, r0, #0
    e038:	beq	e068 <btbb_pcap_create_file@@Base+0x4c>
    e03c:	mov	r0, r5
    e040:	mov	r2, #400	; 0x190
    e044:	mov	r1, #255	; 0xff
    e048:	bl	2230 <btbb_pcap_open@plt>
    e04c:	cmp	r0, #0
    e050:	str	r0, [r4]
    e054:	beq	e07c <btbb_pcap_create_file@@Base+0x60>
    e058:	mov	r5, #0
    e05c:	str	r4, [r6]
    e060:	mov	r0, r5
    e064:	pop	{r4, r5, r6, pc}
    e068:	mvn	r5, #2
    e06c:	mov	r0, r4
    e070:	bl	22cc <btbb_pcap_close@plt>
    e074:	mov	r0, r5
    e078:	pop	{r4, r5, r6, pc}
    e07c:	ldr	r0, [pc, #12]	; e090 <btbb_pcap_create_file@@Base+0x74>
    e080:	mvn	r5, #1
    e084:	add	r0, pc, r0
    e088:	bl	2284 <perror@plt>
    e08c:	b	e06c <btbb_pcap_create_file@@Base+0x50>
    e090:	muleq	r0, r0, r0

0000e094 <lell_pcap_append_packet@@Base>:
    e094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e098:	sub	sp, sp, #308	; 0x134
    e09c:	add	r1, sp, #344	; 0x158
    e0a0:	cmp	r0, #0
    e0a4:	ldrsb	r9, [r1]
    e0a8:	add	r1, sp, #348	; 0x15c
    e0ac:	ldr	r4, [sp, #356]	; 0x164
    e0b0:	ldrsb	r8, [r1]
    e0b4:	beq	e1a4 <lell_pcap_append_packet@@Base+0x110>
    e0b8:	ldr	r1, [r0]
    e0bc:	cmp	r1, #0
    e0c0:	beq	e1a4 <lell_pcap_append_packet@@Base+0x110>
    e0c4:	ldr	r1, [r0, #4]
    e0c8:	cmp	r1, #256	; 0x100
    e0cc:	bne	e1a4 <lell_pcap_append_packet@@Base+0x110>
    e0d0:	str	r0, [sp, #12]
    e0d4:	mov	r0, r4
    e0d8:	strd	r2, [sp]
    e0dc:	bl	2170 <lell_packet_is_data@plt>
    e0e0:	ldr	r6, [r4, #72]	; 0x48
    e0e4:	ldrb	r1, [r4, #92]	; 0x5c
    e0e8:	cmp	r8, r9
    e0ec:	add	r5, r6, #9
    e0f0:	movlt	fp, #39	; 0x27
    e0f4:	movge	fp, #35	; 0x23
    e0f8:	str	r1, [sp, #8]
    e0fc:	add	r3, pc, #172	; 0xac
    e100:	ldrd	r2, [r3]
    e104:	ldrb	sl, [r4, #69]	; 0x45
    e108:	add	r6, r6, #19
    e10c:	cmp	r0, #0
    e110:	moveq	r7, #16
    e114:	ldrd	r0, [sp]
    e118:	movne	r7, #0
    e11c:	cmp	r5, #255	; 0xff
    e120:	movcs	r5, #255	; 0xff
    e124:	bl	f5bc <lell_pcapng_close@@Base+0x230>
    e128:	add	r3, pc, #128	; 0x80
    e12c:	ldrd	r2, [r3]
    e130:	orr	r7, fp, r7
    e134:	str	r0, [sp, #20]
    e138:	ldrd	r0, [sp]
    e13c:	bl	f5bc <lell_pcapng_close@@Base+0x230>
    e140:	add	r3, r5, #10
    e144:	str	r3, [sp, #32]
    e148:	ldrb	r3, [sp, #8]
    e14c:	ldr	ip, [sp, #352]	; 0x160
    e150:	mov	r1, r4
    e154:	add	r0, sp, #46	; 0x2e
    e158:	str	ip, [sp, #40]	; 0x28
    e15c:	strb	r3, [sp, #39]	; 0x27
    e160:	str	r6, [sp, #28]
    e164:	strb	r9, [sp, #37]	; 0x25
    e168:	strb	r8, [sp, #38]	; 0x26
    e16c:	strh	r7, [sp, #44]	; 0x2c
    e170:	strb	sl, [sp, #36]	; 0x24
    e174:	add	r4, sp, #20
    e178:	str	r2, [sp, #24]
    e17c:	mov	r2, r5
    e180:	bl	21c4 <memcpy@plt>
    e184:	ldr	r3, [sp, #12]
    e188:	mov	r1, r4
    e18c:	add	r2, sp, #36	; 0x24
    e190:	ldr	r0, [r3]
    e194:	bl	2344 <btbb_pcap_dump@plt>
    e198:	mov	r0, #0
    e19c:	add	sp, sp, #308	; 0x134
    e1a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e1a4:	mvn	r0, #0
    e1a8:	add	sp, sp, #308	; 0x134
    e1ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e1b0:	blcc	fe6c09b8 <perm_table@@Base+0xfe6977f4>
    e1b4:	andeq	r0, r0, r0

0000e1b8 <lell_pcap_append_ppi_packet@@Base>:
    e1b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e1bc:	sub	sp, sp, #324	; 0x144
    e1c0:	add	r1, sp, #364	; 0x16c
    e1c4:	subs	r5, r0, #0
    e1c8:	ldrsb	r1, [r1]
    e1cc:	ldrb	ip, [sp, #376]	; 0x178
    e1d0:	ldrb	fp, [sp, #360]	; 0x168
    e1d4:	str	r1, [sp, #12]
    e1d8:	add	r1, sp, #368	; 0x170
    e1dc:	str	ip, [sp, #20]
    e1e0:	ldrsb	sl, [r1]
    e1e4:	add	r1, sp, #372	; 0x174
    e1e8:	ldr	r8, [sp, #380]	; 0x17c
    e1ec:	ldrsb	r0, [r1]
    e1f0:	str	r0, [sp, #16]
    e1f4:	beq	e310 <lell_pcap_append_ppi_packet@@Base+0x158>
    e1f8:	ldr	r1, [r5]
    e1fc:	cmp	r1, #0
    e200:	beq	e310 <lell_pcap_append_ppi_packet@@Base+0x158>
    e204:	ldr	r1, [r5, #4]
    e208:	cmp	r1, #192	; 0xc0
    e20c:	bne	e310 <lell_pcap_append_ppi_packet@@Base+0x158>
    e210:	mov	r0, r8
    e214:	strd	r2, [sp]
    e218:	bl	23c8 <lell_get_channel_k@plt>
    e21c:	ldr	r9, [r8, #72]	; 0x48
    e220:	add	r3, pc, #248	; 0xf8
    e224:	ldrd	r2, [r3]
    e228:	add	r7, r9, #9
    e22c:	cmp	r7, #255	; 0xff
    e230:	movcs	r7, #255	; 0xff
    e234:	add	r9, r9, #33	; 0x21
    e238:	mov	r6, #0
    e23c:	mov	r4, r0
    e240:	ldrd	r0, [sp]
    e244:	bl	f5bc <lell_pcapng_close@@Base+0x230>
    e248:	add	r3, pc, #208	; 0xd0
    e24c:	ldrd	r2, [r3]
    e250:	add	r4, r4, #1200	; 0x4b0
    e254:	add	r4, r4, #1
    e258:	lsl	r4, r4, #1
    e25c:	uxth	r4, r4
    e260:	str	r0, [sp, #24]
    e264:	ldrd	r0, [sp]
    e268:	bl	f5bc <lell_pcapng_close@@Base+0x230>
    e26c:	ldrb	r0, [sp, #16]
    e270:	strb	r4, [sp, #53]	; 0x35
    e274:	str	r9, [sp, #36]	; 0x24
    e278:	strb	r0, [sp, #62]	; 0x3e
    e27c:	ldrb	r9, [sp, #12]
    e280:	ldrb	r0, [sp, #20]
    e284:	lsr	r4, r4, #8
    e288:	ldr	lr, [r8, #76]	; 0x4c
    e28c:	ldrb	r3, [r5, #8]
    e290:	strb	r4, [sp, #54]	; 0x36
    e294:	mov	r1, r8
    e298:	add	r4, r7, #24
    e29c:	mov	r8, #24
    e2a0:	ldr	ip, [pc, #128]	; e328 <lell_pcap_append_ppi_packet@@Base+0x170>
    e2a4:	str	r4, [sp, #32]
    e2a8:	add	r4, sp, r8
    e2ac:	strb	sl, [sp, #60]	; 0x3c
    e2b0:	strb	r9, [sp, #61]	; 0x3d
    e2b4:	strb	r0, [sp, #63]	; 0x3f
    e2b8:	mov	r9, #12
    e2bc:	mov	sl, #147	; 0x93
    e2c0:	add	r0, sp, #64	; 0x40
    e2c4:	strb	r3, [sp, #52]	; 0x34
    e2c8:	strh	ip, [r4, #24]
    e2cc:	str	lr, [sp, #56]	; 0x38
    e2d0:	strb	fp, [sp, #55]	; 0x37
    e2d4:	strh	r8, [r4, #18]
    e2d8:	strh	r9, [r4, #26]
    e2dc:	strb	r6, [sp, #40]	; 0x28
    e2e0:	strb	r6, [sp, #41]	; 0x29
    e2e4:	str	sl, [sp, #44]	; 0x2c
    e2e8:	str	r2, [sp, #28]
    e2ec:	mov	r2, r7
    e2f0:	bl	21c4 <memcpy@plt>
    e2f4:	ldr	r0, [r5]
    e2f8:	mov	r1, r4
    e2fc:	add	r2, sp, #40	; 0x28
    e300:	bl	2344 <btbb_pcap_dump@plt>
    e304:	mov	r0, r6
    e308:	add	sp, sp, #324	; 0x144
    e30c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e310:	mvn	r0, #0
    e314:	add	sp, sp, #324	; 0x144
    e318:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e31c:	nop			; (mov r0, r0)
    e320:	blcc	fe6c0b28 <perm_table@@Base+0xfe697964>
    e324:	andeq	r0, r0, r0
    e328:	andeq	r7, r0, r6, lsr r5

0000e32c <lell_pcap_close@@Base>:
    e32c:	push	{r4, lr}
    e330:	subs	r4, r0, #0
    e334:	beq	e358 <lell_pcap_close@@Base+0x2c>
    e338:	ldr	r0, [r4]
    e33c:	cmp	r0, #0
    e340:	beq	e348 <lell_pcap_close@@Base+0x1c>
    e344:	bl	24a0 <fclose@plt>
    e348:	mov	r0, r4
    e34c:	bl	21a0 <free@plt>
    e350:	mov	r0, #0
    e354:	pop	{r4, pc}
    e358:	mvn	r0, #0
    e35c:	pop	{r4, pc}
    e360:	push	{r4, r5, r6, r7, r8, lr}
    e364:	mov	r6, r0
    e368:	mov	r5, r1
    e36c:	mov	r0, #12
    e370:	mov	r1, #1
    e374:	mov	r7, r2
    e378:	bl	2104 <calloc@plt>
    e37c:	subs	r4, r0, #0
    e380:	beq	e3c8 <lell_pcap_close@@Base+0x9c>
    e384:	mov	r0, r6
    e388:	mov	r2, #400	; 0x190
    e38c:	mov	r1, r5
    e390:	bl	2230 <btbb_pcap_open@plt>
    e394:	cmp	r0, #0
    e398:	str	r0, [r4]
    e39c:	beq	e3b4 <lell_pcap_close@@Base+0x88>
    e3a0:	str	r5, [r4, #4]
    e3a4:	mov	r5, #0
    e3a8:	str	r4, [r7]
    e3ac:	mov	r0, r5
    e3b0:	pop	{r4, r5, r6, r7, r8, pc}
    e3b4:	mvn	r5, #1
    e3b8:	mov	r0, r4
    e3bc:	bl	2218 <lell_pcap_close@plt>
    e3c0:	mov	r0, r5
    e3c4:	pop	{r4, r5, r6, r7, r8, pc}
    e3c8:	mvn	r5, #2
    e3cc:	b	e3b8 <lell_pcap_close@@Base+0x8c>

0000e3d0 <lell_pcap_create_file@@Base>:
    e3d0:	mov	r2, r1
    e3d4:	mov	r1, #256	; 0x100
    e3d8:	b	e360 <lell_pcap_close@@Base+0x34>

0000e3dc <lell_pcap_ppi_create_file@@Base>:
    e3dc:	push	{r4, r5, r6, lr}
    e3e0:	mov	r4, r1
    e3e4:	mov	r1, #192	; 0xc0
    e3e8:	mov	r5, r2
    e3ec:	bl	e360 <lell_pcap_close@@Base+0x34>
    e3f0:	cmp	r0, #0
    e3f4:	ldreq	r3, [r5]
    e3f8:	strbeq	r4, [r3, #8]
    e3fc:	pop	{r4, r5, r6, pc}

0000e400 <pcapng_append_section_option@@Base>:
    e400:	cmp	r0, #0
    e404:	beq	e49c <pcapng_append_section_option@@Base+0x9c>
    e408:	ldr	r3, [r0]
    e40c:	cmn	r3, #1
    e410:	beq	e49c <pcapng_append_section_option@@Base+0x9c>
    e414:	ldr	r3, [r0, #4]
    e418:	sub	r2, r3, #1
    e41c:	cmn	r2, #3
    e420:	bls	e42c <pcapng_append_section_option@@Base+0x2c>
    e424:	mov	r0, #5
    e428:	bx	lr
    e42c:	ldr	r2, [r0, #12]
    e430:	cmp	r2, #0
    e434:	cmpne	r1, #0
    e438:	beq	e424 <pcapng_append_section_option@@Base+0x24>
    e43c:	push	{r4, r5, r6, lr}
    e440:	mov	r4, r0
    e444:	ldrb	lr, [r1, #3]
    e448:	ldrb	r5, [r1, #2]
    e44c:	add	r0, r3, r2
    e450:	orr	r5, r5, lr, lsl #8
    e454:	add	r2, r5, #4
    e458:	bl	21c4 <memcpy@plt>
    e45c:	ldr	r0, [r4, #12]
    e460:	ldr	r2, [r4, #8]
    e464:	add	r3, r5, #7
    e468:	ldr	r1, [pc, #52]	; e4a4 <pcapng_append_section_option@@Base+0xa4>
    e46c:	bic	r3, r3, #3
    e470:	add	r3, r3, r0
    e474:	add	r1, pc, r1
    e478:	sub	r2, r2, #12
    e47c:	sub	r2, r2, r3
    e480:	ldr	ip, [r4, #4]
    e484:	strh	r2, [r1, #2]
    e488:	ldr	r2, [r1]
    e48c:	str	r3, [r4, #12]
    e490:	mov	r0, #0
    e494:	str	r2, [ip, r3]
    e498:	pop	{r4, r5, r6, pc}
    e49c:	mov	r0, #1
    e4a0:	bx	lr
    e4a4:	andeq	sl, r1, ip, lsr #26

0000e4a8 <pcapng_append_interface_option@@Base>:
    e4a8:	cmp	r0, #0
    e4ac:	beq	e544 <pcapng_append_interface_option@@Base+0x9c>
    e4b0:	ldr	r3, [r0]
    e4b4:	cmn	r3, #1
    e4b8:	beq	e544 <pcapng_append_interface_option@@Base+0x9c>
    e4bc:	ldr	r3, [r0, #16]
    e4c0:	sub	r2, r3, #1
    e4c4:	cmn	r2, #3
    e4c8:	bls	e4d4 <pcapng_append_interface_option@@Base+0x2c>
    e4cc:	mov	r0, #5
    e4d0:	bx	lr
    e4d4:	ldr	r2, [r0, #24]
    e4d8:	cmp	r2, #0
    e4dc:	cmpne	r1, #0
    e4e0:	beq	e4cc <pcapng_append_interface_option@@Base+0x24>
    e4e4:	push	{r4, r5, r6, lr}
    e4e8:	mov	r4, r0
    e4ec:	ldrb	lr, [r1, #3]
    e4f0:	ldrb	r5, [r1, #2]
    e4f4:	add	r0, r3, r2
    e4f8:	orr	r5, r5, lr, lsl #8
    e4fc:	add	r2, r5, #4
    e500:	bl	21c4 <memcpy@plt>
    e504:	ldr	r0, [r4, #24]
    e508:	ldr	r2, [r4, #20]
    e50c:	add	r3, r5, #7
    e510:	ldr	r1, [pc, #52]	; e54c <pcapng_append_interface_option@@Base+0xa4>
    e514:	bic	r3, r3, #3
    e518:	add	r3, r3, r0
    e51c:	add	r1, pc, r1
    e520:	sub	r2, r2, #12
    e524:	sub	r2, r2, r3
    e528:	ldr	ip, [r4, #16]
    e52c:	strh	r2, [r1, #2]
    e530:	ldr	r2, [r1]
    e534:	str	r3, [r4, #24]
    e538:	mov	r0, #0
    e53c:	str	r2, [ip, r3]
    e540:	pop	{r4, r5, r6, pc}
    e544:	mov	r0, #1
    e548:	bx	lr
    e54c:	andeq	sl, r1, r4, lsl #25

0000e550 <pcapng_append_packet@@Base>:
    e550:	push	{r4, r5, r6, r7, r8, lr}
    e554:	subs	r5, r0, #0
    e558:	beq	e618 <pcapng_append_packet@@Base+0xc8>
    e55c:	ldr	r0, [r5]
    e560:	cmn	r0, #1
    e564:	beq	e618 <pcapng_append_packet@@Base+0xc8>
    e568:	ldrb	ip, [r1, #5]
    e56c:	ldrb	r2, [r1, #6]
    e570:	ldrb	r4, [r1, #4]
    e574:	ldrb	r3, [r1, #7]
    e578:	orr	r4, r4, ip, lsl #8
    e57c:	orr	r4, r4, r2, lsl #16
    e580:	orr	r4, r4, r3, lsl #24
    e584:	mov	r2, r4
    e588:	bl	247c <write@plt>
    e58c:	cmn	r0, #1
    e590:	beq	e620 <pcapng_append_packet@@Base+0xd0>
    e594:	ldr	r3, [r5, #4]
    e598:	mov	r0, #0
    e59c:	ldrb	r2, [r3, #17]
    e5a0:	ldrb	r1, [r3, #16]
    e5a4:	ldrb	ip, [r3, #21]
    e5a8:	ldrb	r8, [r3, #18]
    e5ac:	orr	r1, r1, r2, lsl #8
    e5b0:	ldrb	r2, [r3, #20]
    e5b4:	ldrb	lr, [r3, #22]
    e5b8:	ldrb	r5, [r3, #19]
    e5bc:	orr	r2, r2, ip, lsl #8
    e5c0:	ldrb	ip, [r3, #23]
    e5c4:	orr	r1, r1, r8, lsl #16
    e5c8:	orr	r6, r1, r5, lsl #24
    e5cc:	orr	r2, r2, lr, lsl #16
    e5d0:	adds	r6, r6, r4
    e5d4:	orr	r7, r2, ip, lsl #24
    e5d8:	adc	r7, r7, #0
    e5dc:	lsr	r2, r6, #8
    e5e0:	lsr	r4, r6, #16
    e5e4:	lsr	lr, r6, #24
    e5e8:	lsr	ip, r7, #8
    e5ec:	strb	r2, [r3, #17]
    e5f0:	lsr	r1, r7, #16
    e5f4:	lsr	r2, r7, #24
    e5f8:	strb	r6, [r3, #16]
    e5fc:	strb	r7, [r3, #20]
    e600:	strb	r4, [r3, #18]
    e604:	strb	lr, [r3, #19]
    e608:	strb	ip, [r3, #21]
    e60c:	strb	r1, [r3, #22]
    e610:	strb	r2, [r3, #23]
    e614:	pop	{r4, r5, r6, r7, r8, pc}
    e618:	mov	r0, #1
    e61c:	pop	{r4, r5, r6, r7, r8, pc}
    e620:	mov	r0, #0
    e624:	pop	{r4, r5, r6, r7, r8, pc}

0000e628 <pcapng_close@@Base>:
    e628:	push	{r4, lr}
    e62c:	mov	r4, r0
    e630:	ldr	r0, [r0, #16]
    e634:	sub	r3, r0, #1
    e638:	cmn	r3, #3
    e63c:	bls	e668 <pcapng_close@@Base+0x40>
    e640:	ldr	r0, [r4, #4]
    e644:	sub	r3, r0, #1
    e648:	cmn	r3, #3
    e64c:	bls	e680 <pcapng_close@@Base+0x58>
    e650:	ldr	r0, [r4]
    e654:	cmn	r0, #1
    e658:	beq	e660 <pcapng_close@@Base+0x38>
    e65c:	bl	2548 <close@plt>
    e660:	mov	r0, #0
    e664:	pop	{r4, pc}
    e668:	ldr	r1, [r4, #20]
    e66c:	bl	24b8 <munmap@plt>
    e670:	ldr	r0, [r4, #4]
    e674:	sub	r3, r0, #1
    e678:	cmn	r3, #3
    e67c:	bhi	e650 <pcapng_close@@Base+0x28>
    e680:	ldr	r1, [r4, #8]
    e684:	bl	24b8 <munmap@plt>
    e688:	b	e650 <pcapng_close@@Base+0x28>

0000e68c <pcapng_create@@Base>:
    e68c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e690:	sub	sp, sp, #52	; 0x34
    e694:	mov	r4, r0
    e698:	mov	r5, r1
    e69c:	mov	r8, r2
    e6a0:	str	r3, [sp, #12]
    e6a4:	bl	23e0 <getpagesize@plt>
    e6a8:	mov	r3, #0
    e6ac:	str	r3, [r4, #4]
    e6b0:	str	r3, [r4, #16]
    e6b4:	str	r3, [r4, #24]
    e6b8:	str	r3, [r4, #20]
    e6bc:	str	r3, [r4, #12]
    e6c0:	str	r3, [r4, #8]
    e6c4:	ldrh	r3, [sp, #88]	; 0x58
    e6c8:	mov	r2, #432	; 0x1b0
    e6cc:	mov	r1, #194	; 0xc2
    e6d0:	str	r3, [sp, #16]
    e6d4:	ldr	r9, [sp, #96]	; 0x60
    e6d8:	mov	sl, r0
    e6dc:	mov	r0, r5
    e6e0:	bl	235c <open@plt>
    e6e4:	cmn	r0, #1
    e6e8:	mov	r5, r0
    e6ec:	str	r0, [r4]
    e6f0:	beq	eb78 <pcapng_create@@Base+0x4ec>
    e6f4:	ldr	ip, [pc, #1320]	; ec24 <pcapng_create@@Base+0x598>
    e6f8:	add	lr, sp, #24
    e6fc:	add	ip, pc, ip
    e700:	add	ip, ip, #68	; 0x44
    e704:	mov	r6, #24
    e708:	ldm	ip!, {r0, r1, r2, r3}
    e70c:	str	r6, [r4, #8]
    e710:	stmia	lr!, {r0, r1, r2, r3}
    e714:	add	r3, sp, r6
    e718:	ldm	ip, {r0, r1}
    e71c:	mov	r2, r6
    e720:	str	r3, [sp, #20]
    e724:	stm	lr, {r0, r1}
    e728:	mov	r0, r5
    e72c:	mov	r1, r3
    e730:	bl	247c <write@plt>
    e734:	cmp	r8, #0
    e738:	cmnne	r0, #1
    e73c:	ldreq	r5, [r4, #8]
    e740:	beq	e81c <pcapng_create@@Base+0x190>
    e744:	ldrb	r2, [r8, #1]
    e748:	ldrb	r3, [r8]
    e74c:	orrs	r3, r3, r2, lsl #8
    e750:	beq	ec18 <pcapng_create@@Base+0x58c>
    e754:	ldrb	r2, [r8, #3]
    e758:	ldrb	r3, [r8, #2]
    e75c:	orrs	r3, r3, r2, lsl #8
    e760:	beq	ec18 <pcapng_create@@Base+0x58c>
    e764:	ldr	r6, [pc, #1212]	; ec28 <pcapng_create@@Base+0x59c>
    e768:	mov	r7, #1
    e76c:	add	r6, pc, r6
    e770:	add	r6, r6, #92	; 0x5c
    e774:	add	fp, r3, #3
    e778:	add	r2, r3, #4
    e77c:	bic	fp, fp, #3
    e780:	mov	r1, r8
    e784:	ldr	r0, [r4]
    e788:	sub	r5, fp, r3
    e78c:	bl	247c <write@plt>
    e790:	adds	r3, r0, #1
    e794:	movne	r3, #1
    e798:	cmp	r5, #0
    e79c:	cmnne	r0, #1
    e7a0:	beq	e7d0 <pcapng_create@@Base+0x144>
    e7a4:	mov	r2, r7
    e7a8:	mov	r1, r6
    e7ac:	ldr	r0, [r4]
    e7b0:	bl	247c <write@plt>
    e7b4:	adds	r3, r0, #1
    e7b8:	movne	r3, #1
    e7bc:	subs	r5, r5, #1
    e7c0:	moveq	r2, #0
    e7c4:	andne	r2, r3, #1
    e7c8:	cmp	r2, #0
    e7cc:	bne	e7a4 <pcapng_create@@Base+0x118>
    e7d0:	add	r1, fp, #4
    e7d4:	ldr	r2, [r4, #8]
    e7d8:	adds	r8, r8, r1
    e7dc:	moveq	r3, #0
    e7e0:	andne	r3, r3, #1
    e7e4:	add	r2, r2, #4
    e7e8:	add	fp, r2, fp
    e7ec:	cmp	r3, #0
    e7f0:	str	fp, [r4, #8]
    e7f4:	beq	e818 <pcapng_create@@Base+0x18c>
    e7f8:	ldrb	r2, [r8, #1]
    e7fc:	ldrb	r3, [r8]
    e800:	orrs	r3, r3, r2, lsl #8
    e804:	beq	e818 <pcapng_create@@Base+0x18c>
    e808:	ldrb	r5, [r8, #3]
    e80c:	ldrb	r3, [r8, #2]
    e810:	orrs	r3, r3, r5, lsl #8
    e814:	bne	e774 <pcapng_create@@Base+0xe8>
    e818:	mov	r5, fp
    e81c:	cmn	r0, #1
    e820:	str	r5, [r4, #12]
    e824:	beq	eba0 <pcapng_create@@Base+0x514>
    e828:	ldr	r3, [sp, #12]
    e82c:	mov	r1, sl
    e830:	add	r0, r3, #3
    e834:	add	r0, r0, sl
    e838:	add	r0, r0, r5
    e83c:	bl	f3b0 <lell_pcapng_close@@Base+0x24>
    e840:	mul	r1, sl, r0
    e844:	subs	r5, r1, r5
    e848:	str	r1, [r4, #8]
    e84c:	beq	ebc0 <pcapng_create@@Base+0x534>
    e850:	ldr	r7, [pc, #980]	; ec2c <pcapng_create@@Base+0x5a0>
    e854:	mov	r8, #1
    e858:	add	r7, pc, r7
    e85c:	add	r7, r7, #92	; 0x5c
    e860:	mov	r2, r8
    e864:	mov	r1, r7
    e868:	ldr	r0, [r4]
    e86c:	bl	247c <write@plt>
    e870:	subs	r5, r5, #1
    e874:	movne	r3, #1
    e878:	moveq	r3, #0
    e87c:	adds	r2, r0, #1
    e880:	movne	r2, #1
    e884:	ands	r3, r3, r2
    e888:	bne	e860 <pcapng_create@@Base+0x1d4>
    e88c:	mov	r6, r0
    e890:	mov	r0, r3
    e894:	ldr	r3, [r4]
    e898:	ldr	r1, [r4, #8]
    e89c:	mov	r2, #3
    e8a0:	str	r3, [sp]
    e8a4:	str	r0, [sp, #4]
    e8a8:	mov	r3, #1
    e8ac:	bl	23a4 <mmap@plt>
    e8b0:	cmn	r6, #1
    e8b4:	str	r0, [r4, #4]
    e8b8:	beq	eba0 <pcapng_create@@Base+0x514>
    e8bc:	cmn	r0, #1
    e8c0:	beq	ebb8 <pcapng_create@@Base+0x52c>
    e8c4:	ldr	r0, [sp, #20]
    e8c8:	mov	r3, #0
    e8cc:	mov	r2, #16
    e8d0:	str	r3, [r0, #8]
    e8d4:	str	r3, [r0, #4]
    e8d8:	ldrh	r3, [sp, #16]
    e8dc:	ldr	ip, [sp, #92]	; 0x5c
    e8e0:	mov	r1, r0
    e8e4:	str	r2, [r4, #20]
    e8e8:	mov	r8, #1
    e8ec:	ldr	r0, [r4]
    e8f0:	str	ip, [sp, #36]	; 0x24
    e8f4:	strh	r3, [sp, #32]
    e8f8:	str	r8, [sp, #24]
    e8fc:	bl	247c <write@plt>
    e900:	cmp	r9, #0
    e904:	cmnne	r0, #1
    e908:	ldreq	r6, [r4, #20]
    e90c:	beq	e9e0 <pcapng_create@@Base+0x354>
    e910:	ldrb	r2, [r9, #1]
    e914:	ldrb	r3, [r9]
    e918:	orrs	r3, r3, r2, lsl #8
    e91c:	beq	ec0c <pcapng_create@@Base+0x580>
    e920:	ldrb	r3, [r9, #3]
    e924:	ldrb	r5, [r9, #2]
    e928:	orrs	r5, r5, r3, lsl #8
    e92c:	beq	ec0c <pcapng_create@@Base+0x580>
    e930:	ldr	r7, [pc, #760]	; ec30 <pcapng_create@@Base+0x5a4>
    e934:	add	r7, pc, r7
    e938:	add	r7, r7, #92	; 0x5c
    e93c:	add	r2, r5, #4
    e940:	mov	r1, r9
    e944:	ldr	r0, [r4]
    e948:	bl	247c <write@plt>
    e94c:	add	r6, r5, #3
    e950:	bic	r6, r6, #3
    e954:	sub	r5, r6, r5
    e958:	adds	r3, r0, #1
    e95c:	movne	r3, #1
    e960:	cmp	r5, #0
    e964:	cmnne	r0, #1
    e968:	beq	e998 <pcapng_create@@Base+0x30c>
    e96c:	mov	r2, r8
    e970:	mov	r1, r7
    e974:	ldr	r0, [r4]
    e978:	bl	247c <write@plt>
    e97c:	adds	r3, r0, #1
    e980:	movne	r3, #1
    e984:	subs	r5, r5, #1
    e988:	moveq	r2, #0
    e98c:	andne	r2, r3, #1
    e990:	cmp	r2, #0
    e994:	bne	e96c <pcapng_create@@Base+0x2e0>
    e998:	add	r1, r6, #4
    e99c:	ldr	r2, [r4, #20]
    e9a0:	adds	r9, r9, r1
    e9a4:	moveq	r3, #0
    e9a8:	andne	r3, r3, #1
    e9ac:	add	r2, r2, #4
    e9b0:	add	r6, r2, r6
    e9b4:	cmp	r3, #0
    e9b8:	str	r6, [r4, #20]
    e9bc:	beq	e9e0 <pcapng_create@@Base+0x354>
    e9c0:	ldrb	r2, [r9, #1]
    e9c4:	ldrb	r3, [r9]
    e9c8:	orrs	r3, r3, r2, lsl #8
    e9cc:	beq	e9e0 <pcapng_create@@Base+0x354>
    e9d0:	ldrb	r3, [r9, #3]
    e9d4:	ldrb	r5, [r9, #2]
    e9d8:	orrs	r5, r5, r3, lsl #8
    e9dc:	bne	e93c <pcapng_create@@Base+0x2b0>
    e9e0:	cmn	r0, #1
    e9e4:	str	r6, [r4, #24]
    e9e8:	beq	eba0 <pcapng_create@@Base+0x514>
    e9ec:	ldr	r3, [sp, #100]	; 0x64
    e9f0:	mov	r1, sl
    e9f4:	add	r0, r3, #3
    e9f8:	add	r0, r0, sl
    e9fc:	add	r0, r0, r6
    ea00:	bl	f3b0 <lell_pcapng_close@@Base+0x24>
    ea04:	mul	r1, sl, r0
    ea08:	subs	r5, r1, r6
    ea0c:	str	r1, [r4, #20]
    ea10:	beq	ebe4 <pcapng_create@@Base+0x558>
    ea14:	ldr	r7, [pc, #536]	; ec34 <pcapng_create@@Base+0x5a8>
    ea18:	mov	r8, #1
    ea1c:	add	r7, pc, r7
    ea20:	add	r7, r7, #92	; 0x5c
    ea24:	mov	r2, r8
    ea28:	mov	r1, r7
    ea2c:	ldr	r0, [r4]
    ea30:	bl	247c <write@plt>
    ea34:	subs	r5, r5, #1
    ea38:	movne	r3, #1
    ea3c:	moveq	r3, #0
    ea40:	adds	r2, r0, #1
    ea44:	movne	r2, #1
    ea48:	ands	r3, r3, r2
    ea4c:	bne	ea24 <pcapng_create@@Base+0x398>
    ea50:	ldr	r2, [r4, #8]
    ea54:	mov	r6, r0
    ea58:	mov	r0, r3
    ea5c:	ldr	r3, [r4]
    ea60:	ldr	r1, [r4, #20]
    ea64:	str	r2, [sp, #4]
    ea68:	str	r3, [sp]
    ea6c:	mov	r2, #3
    ea70:	mov	r3, #1
    ea74:	bl	23a4 <mmap@plt>
    ea78:	cmn	r6, #1
    ea7c:	str	r0, [r4, #16]
    ea80:	beq	eba0 <pcapng_create@@Base+0x514>
    ea84:	cmn	r0, #1
    ea88:	beq	ebb8 <pcapng_create@@Base+0x52c>
    ea8c:	ldr	r3, [r4, #8]
    ea90:	ldr	r0, [pc, #416]	; ec38 <pcapng_create@@Base+0x5ac>
    ea94:	ldr	r1, [r4, #12]
    ea98:	add	r0, pc, r0
    ea9c:	sub	r3, r3, #12
    eaa0:	ldr	ip, [r4, #4]
    eaa4:	sub	r3, r3, r1
    eaa8:	strh	r3, [r0, #2]
    eaac:	ldr	r3, [r0]
    eab0:	mov	r2, #0
    eab4:	str	r3, [ip, r1]
    eab8:	ldmib	r4, {r1, r3}
    eabc:	bic	ip, r3, #3
    eac0:	add	ip, r1, ip
    eac4:	lsr	lr, r3, #8
    eac8:	strb	lr, [r1, #5]
    eacc:	lsr	r5, r3, #16
    ead0:	lsr	lr, r3, #24
    ead4:	strb	r3, [r1, #4]
    ead8:	strb	r5, [r1, #6]
    eadc:	strb	lr, [r1, #7]
    eae0:	str	r3, [ip, #-4]
    eae4:	ldr	r3, [r4, #20]
    eae8:	ldr	r1, [r4, #24]
    eaec:	sub	r3, r3, #12
    eaf0:	ldr	ip, [r4, #16]
    eaf4:	sub	r3, r3, r1
    eaf8:	strh	r3, [r0, #2]
    eafc:	ldr	r3, [r0]
    eb00:	mov	r5, r2
    eb04:	str	r3, [ip, r1]
    eb08:	ldr	r3, [r4, #20]
    eb0c:	ldr	r1, [r4, #16]
    eb10:	bic	r0, r3, #3
    eb14:	add	r0, r1, r0
    eb18:	lsr	ip, r3, #8
    eb1c:	strb	ip, [r1, #5]
    eb20:	lsr	lr, r3, #16
    eb24:	lsr	ip, r3, #24
    eb28:	strb	r3, [r1, #4]
    eb2c:	strb	lr, [r1, #6]
    eb30:	strb	ip, [r1, #7]
    eb34:	str	r3, [r0, #-4]
    eb38:	ldr	r1, [r4, #20]
    eb3c:	ldr	r3, [r4, #4]
    eb40:	lsr	r0, r1, #24
    eb44:	lsr	lr, r1, #8
    eb48:	lsr	ip, r1, #16
    eb4c:	strb	r0, [r3, #19]
    eb50:	strb	r1, [r3, #16]
    eb54:	strb	lr, [r3, #17]
    eb58:	strb	ip, [r3, #18]
    eb5c:	mov	r0, r5
    eb60:	strb	r2, [r3, #20]
    eb64:	strb	r2, [r3, #21]
    eb68:	strb	r2, [r3, #22]
    eb6c:	strb	r2, [r3, #23]
    eb70:	add	sp, sp, #52	; 0x34
    eb74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eb78:	bl	2404 <__errno_location@plt>
    eb7c:	ldr	r3, [r0]
    eb80:	sub	r3, r3, #12
    eb84:	cmp	r3, #16
    eb88:	bhi	eba0 <pcapng_create@@Base+0x514>
    eb8c:	ldr	r2, [pc, #168]	; ec3c <pcapng_create@@Base+0x5b0>
    eb90:	add	r2, pc, r2
    eb94:	ldr	r3, [r2, r3, lsl #2]
    eb98:	cmp	r3, #0
    eb9c:	beq	e6f4 <pcapng_create@@Base+0x68>
    eba0:	mov	r5, #6
    eba4:	mov	r0, r4
    eba8:	bl	2500 <pcapng_close@plt>
    ebac:	mov	r0, r5
    ebb0:	add	sp, sp, #52	; 0x34
    ebb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ebb8:	mov	r5, #7
    ebbc:	b	eba4 <pcapng_create@@Base+0x518>
    ebc0:	ldr	r3, [r4]
    ebc4:	mov	r0, r5
    ebc8:	str	r3, [sp]
    ebcc:	str	r5, [sp, #4]
    ebd0:	mov	r3, #1
    ebd4:	mov	r2, #3
    ebd8:	bl	23a4 <mmap@plt>
    ebdc:	str	r0, [r4, #4]
    ebe0:	b	e8bc <pcapng_create@@Base+0x230>
    ebe4:	ldr	r2, [r4, #8]
    ebe8:	ldr	r3, [r4]
    ebec:	mov	r0, r5
    ebf0:	str	r2, [sp, #4]
    ebf4:	str	r3, [sp]
    ebf8:	mov	r2, #3
    ebfc:	mov	r3, #1
    ec00:	bl	23a4 <mmap@plt>
    ec04:	str	r0, [r4, #16]
    ec08:	b	ea84 <pcapng_create@@Base+0x3f8>
    ec0c:	ldr	r6, [r4, #20]
    ec10:	str	r6, [r4, #24]
    ec14:	b	e9ec <pcapng_create@@Base+0x360>
    ec18:	ldr	r5, [r4, #8]
    ec1c:	str	r5, [r4, #12]
    ec20:	b	e828 <pcapng_create@@Base+0x19c>
    ec24:	andeq	r9, r0, r4, lsr #20
    ec28:			; <UNDEFINED> instruction: 0x000099b4
    ec2c:	andeq	r9, r0, r8, asr #17
    ec30:	andeq	r9, r0, ip, ror #15
    ec34:	andeq	r9, r0, r4, lsl #14
    ec38:	andeq	sl, r1, r8, lsl #14
    ec3c:	muleq	r0, r0, r5
    ec40:	push	{r4, r5, lr}
    ec44:	mov	r4, r0
    ec48:	sub	sp, sp, #12
    ec4c:	mov	r5, #0
    ec50:	mov	lr, #1
    ec54:	adds	r2, r1, #0
    ec58:	movne	r2, #1
    ec5c:	mov	ip, r5
    ec60:	b	ec88 <pcapng_create@@Base+0x5fc>
    ec64:	ldrh	r3, [r1]
    ec68:	mov	ip, lr
    ec6c:	cmp	r3, #0
    ec70:	beq	eca4 <pcapng_create@@Base+0x618>
    ec74:	ldrh	r0, [r1, #2]
    ec78:	cmp	r0, #0
    ec7c:	beq	eca4 <pcapng_create@@Base+0x618>
    ec80:	cmp	r3, #9
    ec84:	bne	eccc <pcapng_create@@Base+0x640>
    ec88:	eor	r0, ip, #1
    ec8c:	ands	r0, r2, r0
    ec90:	bne	ec64 <pcapng_create@@Base+0x5d8>
    ec94:	cmp	ip, #0
    ec98:	beq	eca4 <pcapng_create@@Base+0x618>
    ec9c:	add	sp, sp, #12
    eca0:	pop	{r4, r5, pc}
    eca4:	ldr	r3, [pc, #52]	; ece0 <pcapng_create@@Base+0x654>
    eca8:	add	r3, pc, r3
    ecac:	ldm	r3, {r0, r1}
    ecb0:	str	r0, [sp]
    ecb4:	strb	r1, [sp, #4]
    ecb8:	mov	r0, r4
    ecbc:	mov	r1, sp
    ecc0:	bl	2194 <pcapng_append_interface_option@plt>
    ecc4:	add	sp, sp, #12
    ecc8:	pop	{r4, r5, pc}
    eccc:	add	r3, r0, #3
    ecd0:	bic	r3, r3, #3
    ecd4:	add	r3, r3, #4
    ecd8:	add	r1, r1, r3
    ecdc:	b	ec54 <pcapng_create@@Base+0x5c8>
    ece0:	ldrdeq	r9, [r0], -r8

0000ece4 <btbb_pcapng_create_file@@Base>:
    ece4:	push	{r4, r5, r6, r7, r8, r9, lr}
    ece8:	mov	r9, r0
    ecec:	sub	sp, sp, #284	; 0x11c
    ecf0:	mov	r0, #28
    ecf4:	mov	r4, r1
    ecf8:	mov	r7, r2
    ecfc:	bl	2320 <malloc@plt>
    ed00:	ldr	r8, [pc, #212]	; eddc <btbb_pcapng_create_file@@Base+0xf8>
    ed04:	add	r8, pc, r8
    ed08:	subs	r6, r0, #0
    ed0c:	beq	edd4 <btbb_pcapng_create_file@@Base+0xf0>
    ed10:	add	r5, sp, #20
    ed14:	mov	r0, r5
    ed18:	mov	r2, #260	; 0x104
    ed1c:	mov	r1, #0
    ed20:	bl	2428 <memset@plt>
    ed24:	mov	r3, #3
    ed28:	cmp	r4, #0
    ed2c:	strh	r3, [r5]
    ed30:	beq	ed60 <btbb_pcapng_create_file@@Base+0x7c>
    ed34:	mov	r1, r4
    ed38:	add	r4, sp, #24
    ed3c:	mov	r0, r4
    ed40:	mov	r2, #256	; 0x100
    ed44:	bl	2440 <strncpy@plt>
    ed48:	mov	r0, r4
    ed4c:	mov	r3, #0
    ed50:	strb	r3, [sp, #279]	; 0x117
    ed54:	bl	238c <strlen@plt>
    ed58:	mov	r4, r5
    ed5c:	strh	r0, [r5, #2]
    ed60:	bl	23e0 <getpagesize@plt>
    ed64:	ldr	r2, [pc, #116]	; ede0 <btbb_pcapng_create_file@@Base+0xfc>
    ed68:	mov	ip, #400	; 0x190
    ed6c:	mov	r1, r9
    ed70:	ldr	r2, [r8, r2]
    ed74:	str	r4, [sp, #8]
    ed78:	mov	r3, r0
    ed7c:	mov	r0, #255	; 0xff
    ed80:	str	r3, [sp, #12]
    ed84:	stm	sp, {r0, ip}
    ed88:	mov	r0, r6
    ed8c:	bl	2254 <pcapng_create@plt>
    ed90:	subs	r5, r0, #0
    ed94:	beq	edb0 <btbb_pcapng_create_file@@Base+0xcc>
    ed98:	mov	r0, r6
    ed9c:	rsb	r5, r5, #0
    eda0:	bl	21a0 <free@plt>
    eda4:	mov	r0, r5
    eda8:	add	sp, sp, #284	; 0x11c
    edac:	pop	{r4, r5, r6, r7, r8, r9, pc}
    edb0:	mov	r1, r4
    edb4:	mov	r0, r6
    edb8:	bl	ec40 <pcapng_create@@Base+0x5b4>
    edbc:	subs	r5, r0, #0
    edc0:	streq	r6, [r7]
    edc4:	beq	eda4 <btbb_pcapng_create_file@@Base+0xc0>
    edc8:	mov	r0, r6
    edcc:	bl	2500 <pcapng_close@plt>
    edd0:	b	ed98 <btbb_pcapng_create_file@@Base+0xb4>
    edd4:	mvn	r5, #4
    edd8:	b	eda4 <btbb_pcapng_create_file@@Base+0xc0>
    eddc:	strdeq	sl, [r1], -r4
    ede0:	muleq	r0, ip, r1

0000ede4 <btbb_pcapng_append_packet@@Base>:
    ede4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ede8:	add	fp, sp, #32
    edec:	sub	sp, sp, #492	; 0x1ec
    edf0:	ldrsb	sl, [fp, #4]
    edf4:	ldrsb	r9, [fp, #8]
    edf8:	ldrb	r7, [fp, #16]
    edfc:	ldr	r5, [fp, #12]
    ee00:	cmp	r9, sl
    ee04:	movlt	r6, #7
    ee08:	movge	r6, #3
    ee0c:	cmn	r5, #1
    ee10:	movne	r1, #16
    ee14:	moveq	r1, #0
    ee18:	cmp	r7, #255	; 0xff
    ee1c:	orr	r1, r6, r1
    ee20:	str	r0, [fp, #-520]	; 0xfffffdf8
    ee24:	movne	r6, #128	; 0x80
    ee28:	moveq	r6, #0
    ee2c:	ldr	r0, [fp, #20]
    ee30:	str	r3, [fp, #-516]	; 0xfffffdfc
    ee34:	orr	r6, r6, r1
    ee38:	str	r2, [fp, #-504]	; 0xfffffe08
    ee3c:	bl	2380 <btbb_packet_get_payload_length@plt>
    ee40:	bic	r5, r5, #-16777216	; 0xff000000
    ee44:	add	r2, r0, #7
    ee48:	bic	r2, r2, #7
    ee4c:	sub	sp, sp, r2
    ee50:	mov	r1, sp
    ee54:	mov	r4, r0
    ee58:	ldr	r0, [fp, #20]
    ee5c:	bl	214c <btbb_get_payload_packed@plt>
    ee60:	cmp	r4, #400	; 0x190
    ee64:	ldr	r0, [fp, #20]
    ee68:	movge	r4, #400	; 0x190
    ee6c:	bl	24d0 <btbb_packet_get_channel@plt>
    ee70:	str	r0, [fp, #-496]	; 0xfffffe10
    ee74:	ldr	r0, [fp, #20]
    ee78:	bl	21b8 <btbb_packet_get_ac_errors@plt>
    ee7c:	str	r0, [fp, #-500]	; 0xfffffe0c
    ee80:	ldr	r0, [fp, #20]
    ee84:	bl	23f8 <btbb_packet_get_transport@plt>
    ee88:	str	r0, [fp, #-512]	; 0xfffffe00
    ee8c:	ldr	r0, [fp, #20]
    ee90:	bl	21ac <btbb_packet_get_modulation@plt>
    ee94:	mov	r8, r0
    ee98:	ldr	r0, [fp, #20]
    ee9c:	bl	2458 <btbb_packet_get_lap@plt>
    eea0:	str	r0, [fp, #-508]	; 0xfffffe04
    eea4:	ldr	r0, [fp, #20]
    eea8:	bl	23b0 <btbb_packet_get_header_packed@plt>
    eeac:	ldr	r1, [fp, #-504]	; 0xfffffe08
    eeb0:	ldr	r2, [fp, #-512]	; 0xfffffe00
    eeb4:	str	r1, [fp, #-472]	; 0xfffffe28
    eeb8:	ldrb	r1, [fp, #-496]	; 0xfffffe10
    eebc:	ldr	r3, [fp, #-516]	; 0xfffffdfc
    eec0:	orr	ip, r5, r7, lsl #24
    eec4:	strb	r1, [fp, #-460]	; 0xfffffe34
    eec8:	ldrb	r1, [fp, #-500]	; 0xfffffe0c
    eecc:	sub	r7, fp, #488	; 0x1e8
    eed0:	add	lr, r4, #61	; 0x3d
    eed4:	strb	r1, [fp, #-457]	; 0xfffffe37
    eed8:	ldr	r1, [fp, #-508]	; 0xfffffe04
    eedc:	orr	r8, r8, r2, lsl #4
    eee0:	bic	r5, lr, #3
    eee4:	add	r2, r4, #22
    eee8:	str	r3, [fp, #-476]	; 0xfffffe24
    eeec:	str	ip, [fp, #-448]	; 0xfffffe40
    eef0:	mov	r3, #0
    eef4:	mov	ip, #6
    eef8:	cmp	r4, #0
    eefc:	strb	r8, [fp, #-456]	; 0xfffffe38
    ef00:	strb	sl, [fp, #-459]	; 0xfffffe35
    ef04:	strb	r9, [fp, #-458]	; 0xfffffe36
    ef08:	str	r1, [fp, #-452]	; 0xfffffe3c
    ef0c:	str	r5, [fp, #-484]	; 0xfffffe1c
    ef10:	strh	r6, [r7, #48]	; 0x30
    ef14:	str	r2, [fp, #-468]	; 0xfffffe2c
    ef18:	str	r2, [fp, #-464]	; 0xfffffe30
    ef1c:	strh	r3, [r7, #34]	; 0x22
    ef20:	str	r3, [fp, #-480]	; 0xfffffe20
    ef24:	strb	r3, [fp, #-455]	; 0xfffffe39
    ef28:	str	ip, [fp, #-488]	; 0xfffffe18
    ef2c:	str	r0, [fp, #-444]	; 0xfffffe44
    ef30:	beq	ef58 <btbb_pcapng_append_packet@@Base+0x174>
    ef34:	cmp	r4, #400	; 0x190
    ef38:	bhi	ef88 <btbb_pcapng_append_packet@@Base+0x1a4>
    ef3c:	mov	r2, r4
    ef40:	mov	r1, sp
    ef44:	add	r0, r7, #50	; 0x32
    ef48:	orr	r6, r6, #32
    ef4c:	bl	21c4 <memcpy@plt>
    ef50:	strh	r6, [r7, #48]	; 0x30
    ef54:	b	ef5c <btbb_pcapng_append_packet@@Base+0x178>
    ef58:	strh	r6, [r7, #48]	; 0x30
    ef5c:	sub	r3, fp, #36	; 0x24
    ef60:	add	r3, r3, r5
    ef64:	mov	r2, #0
    ef68:	mov	r1, r7
    ef6c:	ldr	r0, [fp, #-520]	; 0xfffffdf8
    ef70:	str	r5, [r3, #-456]	; 0xfffffe38
    ef74:	str	r2, [r3, #-460]	; 0xfffffe34
    ef78:	bl	23ec <pcapng_append_packet@plt>
    ef7c:	rsb	r0, r0, #0
    ef80:	sub	sp, fp, #32
    ef84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ef88:	ldr	r3, [pc, #28]	; efac <btbb_pcapng_append_packet@@Base+0x1c8>
    ef8c:	ldr	r1, [pc, #28]	; efb0 <btbb_pcapng_append_packet@@Base+0x1cc>
    ef90:	ldr	r0, [pc, #28]	; efb4 <btbb_pcapng_append_packet@@Base+0x1d0>
    ef94:	add	r3, pc, r3
    ef98:	mov	r2, #221	; 0xdd
    ef9c:	add	r3, r3, #8
    efa0:	add	r1, pc, r1
    efa4:	add	r0, pc, r0
    efa8:	bl	2554 <__assert_fail@plt>
    efac:	andeq	r9, r0, ip, ror #3
    efb0:	andeq	r9, r0, r4, lsr r2
    efb4:	andeq	r9, r0, r0, lsl #5

0000efb8 <btbb_pcapng_record_bdaddr@@Base>:
    efb8:	push	{r4, r5, r6, lr}
    efbc:	sub	sp, sp, #16
    efc0:	ldr	ip, [pc, #84]	; f01c <btbb_pcapng_record_bdaddr@@Base+0x64>
    efc4:	ldrb	r4, [sp, #32]
    efc8:	ldrb	lr, [sp, #36]	; 0x24
    efcc:	lsr	r1, r2, #8
    efd0:	lsr	r6, r3, #8
    efd4:	strb	r2, [sp, #8]
    efd8:	strb	r3, [sp, #12]
    efdc:	lsr	r5, r2, #16
    efe0:	mov	r3, #12
    efe4:	lsr	r2, r2, #24
    efe8:	strb	r1, [sp, #9]
    efec:	add	r1, sp, #4
    eff0:	strb	r6, [sp, #13]
    eff4:	strb	r5, [sp, #10]
    eff8:	strb	r2, [sp, #11]
    effc:	strb	r4, [sp, #14]
    f000:	strb	lr, [sp, #15]
    f004:	strh	ip, [sp, #4]
    f008:	strh	r3, [sp, #6]
    f00c:	bl	2194 <pcapng_append_interface_option@plt>
    f010:	rsb	r0, r0, #0
    f014:	add	sp, sp, #16
    f018:	pop	{r4, r5, r6, pc}
    f01c:			; <UNDEFINED> instruction: 0xffffd340

0000f020 <btbb_pcapng_record_btclock@@Base>:
    f020:	push	{r4, r5, r6, lr}
    f024:	sub	sp, sp, #24
    f028:	ldr	ip, [pc, #64]	; f070 <btbb_pcapng_record_btclock@@Base+0x50>
    f02c:	ldr	r6, [sp, #40]	; 0x28
    f030:	ldr	r5, [sp, #44]	; 0x2c
    f034:	ldr	r4, [sp, #48]	; 0x30
    f038:	ldr	lr, [sp, #52]	; 0x34
    f03c:	mov	r3, #24
    f040:	mov	r1, sp
    f044:	str	r2, [sp, #12]
    f048:	str	r6, [sp, #4]
    f04c:	str	r5, [sp, #8]
    f050:	str	r4, [sp, #16]
    f054:	str	lr, [sp, #20]
    f058:	strh	ip, [sp]
    f05c:	strh	r3, [sp, #2]
    f060:	bl	2194 <pcapng_append_interface_option@plt>
    f064:	rsb	r0, r0, #0
    f068:	add	sp, sp, #24
    f06c:	pop	{r4, r5, r6, pc}
    f070:			; <UNDEFINED> instruction: 0xffffd341

0000f074 <btbb_pcapng_close@@Base>:
    f074:	push	{r4, lr}
    f078:	mov	r4, r0
    f07c:	bl	2500 <pcapng_close@plt>
    f080:	cmp	r4, #0
    f084:	beq	f090 <btbb_pcapng_close@@Base+0x1c>
    f088:	mov	r0, r4
    f08c:	bl	21a0 <free@plt>
    f090:	mvn	r0, #0
    f094:	pop	{r4, pc}

0000f098 <lell_pcapng_create_file@@Base>:
    f098:	push	{r4, r5, r6, r7, r8, r9, lr}
    f09c:	mov	r9, r0
    f0a0:	sub	sp, sp, #284	; 0x11c
    f0a4:	mov	r0, #28
    f0a8:	mov	r4, r1
    f0ac:	mov	r7, r2
    f0b0:	bl	2320 <malloc@plt>
    f0b4:	ldr	r8, [pc, #212]	; f190 <lell_pcapng_create_file@@Base+0xf8>
    f0b8:	add	r8, pc, r8
    f0bc:	subs	r6, r0, #0
    f0c0:	beq	f188 <lell_pcapng_create_file@@Base+0xf0>
    f0c4:	add	r5, sp, #20
    f0c8:	mov	r0, r5
    f0cc:	mov	r2, #260	; 0x104
    f0d0:	mov	r1, #0
    f0d4:	bl	2428 <memset@plt>
    f0d8:	mov	r3, #3
    f0dc:	cmp	r4, #0
    f0e0:	strh	r3, [r5]
    f0e4:	beq	f114 <lell_pcapng_create_file@@Base+0x7c>
    f0e8:	mov	r1, r4
    f0ec:	add	r4, sp, #24
    f0f0:	mov	r0, r4
    f0f4:	mov	r2, #256	; 0x100
    f0f8:	bl	2440 <strncpy@plt>
    f0fc:	mov	r0, r4
    f100:	mov	r3, #0
    f104:	strb	r3, [sp, #279]	; 0x117
    f108:	bl	238c <strlen@plt>
    f10c:	mov	r4, r5
    f110:	strh	r0, [r5, #2]
    f114:	bl	23e0 <getpagesize@plt>
    f118:	ldr	r2, [pc, #116]	; f194 <lell_pcapng_create_file@@Base+0xfc>
    f11c:	mov	ip, #64	; 0x40
    f120:	mov	r1, r9
    f124:	ldr	r2, [r8, r2]
    f128:	str	r4, [sp, #8]
    f12c:	mov	r3, r0
    f130:	mov	r0, #256	; 0x100
    f134:	str	r3, [sp, #12]
    f138:	stm	sp, {r0, ip}
    f13c:	mov	r0, r6
    f140:	bl	2254 <pcapng_create@plt>
    f144:	subs	r5, r0, #0
    f148:	beq	f164 <lell_pcapng_create_file@@Base+0xcc>
    f14c:	mov	r0, r6
    f150:	rsb	r5, r5, #0
    f154:	bl	21a0 <free@plt>
    f158:	mov	r0, r5
    f15c:	add	sp, sp, #284	; 0x11c
    f160:	pop	{r4, r5, r6, r7, r8, r9, pc}
    f164:	mov	r1, r4
    f168:	mov	r0, r6
    f16c:	bl	ec40 <pcapng_create@@Base+0x5b4>
    f170:	subs	r5, r0, #0
    f174:	streq	r6, [r7]
    f178:	beq	f158 <lell_pcapng_create_file@@Base+0xc0>
    f17c:	mov	r0, r6
    f180:	bl	2500 <pcapng_close@plt>
    f184:	b	f14c <lell_pcapng_create_file@@Base+0xb4>
    f188:	mvn	r5, #4
    f18c:	b	f158 <lell_pcapng_create_file@@Base+0xc0>
    f190:	andeq	r9, r1, r0, asr #30
    f194:	muleq	r0, ip, r1

0000f198 <lell_pcapng_record_connect_req@@Base>:
    f198:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    f19c:	mov	r5, #46	; 0x2e
    f1a0:	sub	sp, sp, #48	; 0x30
    f1a4:	mov	r9, r2
    f1a8:	mov	r8, r0
    f1ac:	mov	r2, r5
    f1b0:	mov	r0, sp
    f1b4:	mov	r1, #0
    f1b8:	mov	r7, r3
    f1bc:	bl	2428 <memset@plt>
    f1c0:	ldr	ip, [sp, #80]	; 0x50
    f1c4:	ldr	r2, [pc, #96]	; f22c <lell_pcapng_record_connect_req@@Base+0x94>
    f1c8:	mov	r6, sp
    f1cc:	add	sl, ip, #32
    f1d0:	add	r4, sp, #12
    f1d4:	str	r9, [sp, #4]
    f1d8:	strh	r5, [sp, #2]
    f1dc:	str	r7, [sp, #8]
    f1e0:	strh	r2, [sp]
    f1e4:	ldr	r0, [ip]
    f1e8:	ldr	r1, [ip, #4]
    f1ec:	ldr	r2, [ip, #8]
    f1f0:	ldr	r3, [ip, #12]
    f1f4:	mov	lr, r4
    f1f8:	add	ip, ip, #16
    f1fc:	cmp	ip, sl
    f200:	stmia	lr!, {r0, r1, r2, r3}
    f204:	mov	r4, lr
    f208:	bne	f1e4 <lell_pcapng_record_connect_req@@Base+0x4c>
    f20c:	ldrh	r3, [ip]
    f210:	mov	r1, r6
    f214:	mov	r0, r8
    f218:	strh	r3, [lr]
    f21c:	bl	2194 <pcapng_append_interface_option@plt>
    f220:	rsb	r0, r0, #0
    f224:	add	sp, sp, #48	; 0x30
    f228:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f22c:			; <UNDEFINED> instruction: 0xffffd380

0000f230 <lell_pcapng_append_packet@@Base>:
    f230:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f234:	sub	sp, sp, #316	; 0x13c
    f238:	mov	r9, r3
    f23c:	add	r3, sp, #352	; 0x160
    f240:	ldr	r4, [sp, #364]	; 0x16c
    f244:	ldrsb	fp, [r3]
    f248:	add	r3, sp, #356	; 0x164
    f24c:	mov	r8, r0
    f250:	mov	r0, r4
    f254:	ldrsb	r7, [r3]
    f258:	mov	sl, r2
    f25c:	bl	2170 <lell_packet_is_data@plt>
    f260:	ldr	r1, [r4, #72]	; 0x48
    f264:	cmp	r7, fp
    f268:	movlt	r3, #39	; 0x27
    f26c:	movge	r3, #35	; 0x23
    f270:	add	r2, r1, #9
    f274:	ldrb	lr, [r4, #69]	; 0x45
    f278:	ldrb	ip, [r4, #92]	; 0x5c
    f27c:	cmp	r0, #0
    f280:	moveq	r0, #16
    f284:	movne	r0, #0
    f288:	cmp	r2, #255	; 0xff
    f28c:	orr	r3, r3, r0
    f290:	bhi	f358 <lell_pcapng_append_packet@@Base+0x128>
    f294:	add	r5, r1, #58	; 0x3a
    f298:	strb	ip, [sp, #39]	; 0x27
    f29c:	add	r1, r1, #19
    f2a0:	ldr	ip, [sp, #360]	; 0x168
    f2a4:	bic	r5, r5, #3
    f2a8:	str	r1, [sp, #28]
    f2ac:	str	r1, [sp, #32]
    f2b0:	strb	lr, [sp, #36]	; 0x24
    f2b4:	strb	fp, [sp, #37]	; 0x25
    f2b8:	mov	lr, #6
    f2bc:	mov	fp, #0
    f2c0:	mov	r1, r4
    f2c4:	add	r0, sp, #46	; 0x2e
    f2c8:	str	r5, [sp, #12]
    f2cc:	str	ip, [sp, #40]	; 0x28
    f2d0:	strh	r3, [sp, #44]	; 0x2c
    f2d4:	str	lr, [sp, #8]
    f2d8:	str	r9, [sp, #20]
    f2dc:	str	sl, [sp, #24]
    f2e0:	strb	r7, [sp, #38]	; 0x26
    f2e4:	str	fp, [sp, #16]
    f2e8:	bl	21c4 <memcpy@plt>
    f2ec:	add	r3, sp, #312	; 0x138
    f2f0:	add	r3, r3, r5
    f2f4:	add	r6, sp, #8
    f2f8:	str	r5, [r3, #-308]	; 0xfffffecc
    f2fc:	mov	r1, r6
    f300:	mov	r0, r8
    f304:	str	fp, [r3, #-312]	; 0xfffffec8
    f308:	bl	23ec <pcapng_append_packet@plt>
    f30c:	rsb	r5, r0, #0
    f310:	cmp	r5, fp
    f314:	beq	f324 <lell_pcapng_append_packet@@Base+0xf4>
    f318:	mov	r0, r5
    f31c:	add	sp, sp, #316	; 0x13c
    f320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f324:	mov	r0, r4
    f328:	bl	2170 <lell_packet_is_data@plt>
    f32c:	cmp	r0, fp
    f330:	bne	f318 <lell_pcapng_append_packet@@Base+0xe8>
    f334:	ldrb	r3, [r4, #80]	; 0x50
    f338:	cmp	r3, #5
    f33c:	bne	f318 <lell_pcapng_append_packet@@Base+0xe8>
    f340:	str	r4, [sp]
    f344:	mov	r2, sl
    f348:	mov	r3, r9
    f34c:	mov	r0, r8
    f350:	bl	23bc <lell_pcapng_record_connect_req@plt>
    f354:	b	f318 <lell_pcapng_append_packet@@Base+0xe8>
    f358:	ldr	r3, [pc, #28]	; f37c <lell_pcapng_append_packet@@Base+0x14c>
    f35c:	ldr	r1, [pc, #28]	; f380 <lell_pcapng_append_packet@@Base+0x150>
    f360:	ldr	r0, [pc, #28]	; f384 <lell_pcapng_append_packet@@Base+0x154>
    f364:	add	r3, pc, r3
    f368:	ldr	r2, [pc, #24]	; f388 <lell_pcapng_append_packet@@Base+0x158>
    f36c:	add	r3, r3, #40	; 0x28
    f370:	add	r1, pc, r1
    f374:	add	r0, pc, r0
    f378:	bl	2554 <__assert_fail@plt>
    f37c:	andeq	r8, r0, ip, lsl lr
    f380:	andeq	r8, r0, r4, ror #28
    f384:	andeq	r8, r0, r8, ror #29
    f388:			; <UNDEFINED> instruction: 0x000001b9

0000f38c <lell_pcapng_close@@Base>:
    f38c:	push	{r4, lr}
    f390:	mov	r4, r0
    f394:	bl	2500 <pcapng_close@plt>
    f398:	cmp	r4, #0
    f39c:	beq	f3a8 <lell_pcapng_close@@Base+0x1c>
    f3a0:	mov	r0, r4
    f3a4:	bl	21a0 <free@plt>
    f3a8:	mvn	r0, #0
    f3ac:	pop	{r4, pc}
    f3b0:	subs	r2, r1, #1
    f3b4:	bxeq	lr
    f3b8:	bcc	f590 <lell_pcapng_close@@Base+0x204>
    f3bc:	cmp	r0, r1
    f3c0:	bls	f574 <lell_pcapng_close@@Base+0x1e8>
    f3c4:	tst	r1, r2
    f3c8:	beq	f580 <lell_pcapng_close@@Base+0x1f4>
    f3cc:	clz	r3, r0
    f3d0:	clz	r2, r1
    f3d4:	sub	r3, r2, r3
    f3d8:	rsbs	r3, r3, #31
    f3dc:	addne	r3, r3, r3, lsl #1
    f3e0:	mov	r2, #0
    f3e4:	addne	pc, pc, r3, lsl #2
    f3e8:	nop			; (mov r0, r0)
    f3ec:	cmp	r0, r1, lsl #31
    f3f0:	adc	r2, r2, r2
    f3f4:	subcs	r0, r0, r1, lsl #31
    f3f8:	cmp	r0, r1, lsl #30
    f3fc:	adc	r2, r2, r2
    f400:	subcs	r0, r0, r1, lsl #30
    f404:	cmp	r0, r1, lsl #29
    f408:	adc	r2, r2, r2
    f40c:	subcs	r0, r0, r1, lsl #29
    f410:	cmp	r0, r1, lsl #28
    f414:	adc	r2, r2, r2
    f418:	subcs	r0, r0, r1, lsl #28
    f41c:	cmp	r0, r1, lsl #27
    f420:	adc	r2, r2, r2
    f424:	subcs	r0, r0, r1, lsl #27
    f428:	cmp	r0, r1, lsl #26
    f42c:	adc	r2, r2, r2
    f430:	subcs	r0, r0, r1, lsl #26
    f434:	cmp	r0, r1, lsl #25
    f438:	adc	r2, r2, r2
    f43c:	subcs	r0, r0, r1, lsl #25
    f440:	cmp	r0, r1, lsl #24
    f444:	adc	r2, r2, r2
    f448:	subcs	r0, r0, r1, lsl #24
    f44c:	cmp	r0, r1, lsl #23
    f450:	adc	r2, r2, r2
    f454:	subcs	r0, r0, r1, lsl #23
    f458:	cmp	r0, r1, lsl #22
    f45c:	adc	r2, r2, r2
    f460:	subcs	r0, r0, r1, lsl #22
    f464:	cmp	r0, r1, lsl #21
    f468:	adc	r2, r2, r2
    f46c:	subcs	r0, r0, r1, lsl #21
    f470:	cmp	r0, r1, lsl #20
    f474:	adc	r2, r2, r2
    f478:	subcs	r0, r0, r1, lsl #20
    f47c:	cmp	r0, r1, lsl #19
    f480:	adc	r2, r2, r2
    f484:	subcs	r0, r0, r1, lsl #19
    f488:	cmp	r0, r1, lsl #18
    f48c:	adc	r2, r2, r2
    f490:	subcs	r0, r0, r1, lsl #18
    f494:	cmp	r0, r1, lsl #17
    f498:	adc	r2, r2, r2
    f49c:	subcs	r0, r0, r1, lsl #17
    f4a0:	cmp	r0, r1, lsl #16
    f4a4:	adc	r2, r2, r2
    f4a8:	subcs	r0, r0, r1, lsl #16
    f4ac:	cmp	r0, r1, lsl #15
    f4b0:	adc	r2, r2, r2
    f4b4:	subcs	r0, r0, r1, lsl #15
    f4b8:	cmp	r0, r1, lsl #14
    f4bc:	adc	r2, r2, r2
    f4c0:	subcs	r0, r0, r1, lsl #14
    f4c4:	cmp	r0, r1, lsl #13
    f4c8:	adc	r2, r2, r2
    f4cc:	subcs	r0, r0, r1, lsl #13
    f4d0:	cmp	r0, r1, lsl #12
    f4d4:	adc	r2, r2, r2
    f4d8:	subcs	r0, r0, r1, lsl #12
    f4dc:	cmp	r0, r1, lsl #11
    f4e0:	adc	r2, r2, r2
    f4e4:	subcs	r0, r0, r1, lsl #11
    f4e8:	cmp	r0, r1, lsl #10
    f4ec:	adc	r2, r2, r2
    f4f0:	subcs	r0, r0, r1, lsl #10
    f4f4:	cmp	r0, r1, lsl #9
    f4f8:	adc	r2, r2, r2
    f4fc:	subcs	r0, r0, r1, lsl #9
    f500:	cmp	r0, r1, lsl #8
    f504:	adc	r2, r2, r2
    f508:	subcs	r0, r0, r1, lsl #8
    f50c:	cmp	r0, r1, lsl #7
    f510:	adc	r2, r2, r2
    f514:	subcs	r0, r0, r1, lsl #7
    f518:	cmp	r0, r1, lsl #6
    f51c:	adc	r2, r2, r2
    f520:	subcs	r0, r0, r1, lsl #6
    f524:	cmp	r0, r1, lsl #5
    f528:	adc	r2, r2, r2
    f52c:	subcs	r0, r0, r1, lsl #5
    f530:	cmp	r0, r1, lsl #4
    f534:	adc	r2, r2, r2
    f538:	subcs	r0, r0, r1, lsl #4
    f53c:	cmp	r0, r1, lsl #3
    f540:	adc	r2, r2, r2
    f544:	subcs	r0, r0, r1, lsl #3
    f548:	cmp	r0, r1, lsl #2
    f54c:	adc	r2, r2, r2
    f550:	subcs	r0, r0, r1, lsl #2
    f554:	cmp	r0, r1, lsl #1
    f558:	adc	r2, r2, r2
    f55c:	subcs	r0, r0, r1, lsl #1
    f560:	cmp	r0, r1
    f564:	adc	r2, r2, r2
    f568:	subcs	r0, r0, r1
    f56c:	mov	r0, r2
    f570:	bx	lr
    f574:	moveq	r0, #1
    f578:	movne	r0, #0
    f57c:	bx	lr
    f580:	clz	r2, r1
    f584:	rsb	r2, r2, #31
    f588:	lsr	r0, r0, r2
    f58c:	bx	lr
    f590:	cmp	r0, #0
    f594:	mvnne	r0, #0
    f598:	b	f5f8 <lell_pcapng_close@@Base+0x26c>
    f59c:	cmp	r1, #0
    f5a0:	beq	f590 <lell_pcapng_close@@Base+0x204>
    f5a4:	push	{r0, r1, lr}
    f5a8:	bl	f3b0 <lell_pcapng_close@@Base+0x24>
    f5ac:	pop	{r1, r2, lr}
    f5b0:	mul	r3, r2, r0
    f5b4:	sub	r1, r1, r3
    f5b8:	bx	lr
    f5bc:	cmp	r3, #0
    f5c0:	cmpeq	r2, #0
    f5c4:	bne	f5dc <lell_pcapng_close@@Base+0x250>
    f5c8:	cmp	r1, #0
    f5cc:	cmpeq	r0, #0
    f5d0:	mvnne	r1, #0
    f5d4:	mvnne	r0, #0
    f5d8:	b	f5f8 <lell_pcapng_close@@Base+0x26c>
    f5dc:	sub	sp, sp, #8
    f5e0:	push	{sp, lr}
    f5e4:	bl	f66c <lell_pcapng_close@@Base+0x2e0>
    f5e8:	ldr	lr, [sp, #4]
    f5ec:	add	sp, sp, #8
    f5f0:	pop	{r2, r3}
    f5f4:	bx	lr
    f5f8:	push	{r1, lr}
    f5fc:	mov	r0, #8
    f600:	bl	2110 <raise@plt>
    f604:	pop	{r1, pc}
    f608:	ldr	ip, [pc, #80]	; f660 <lell_pcapng_close@@Base+0x2d4>
    f60c:	ldr	r2, [pc, #80]	; f664 <lell_pcapng_close@@Base+0x2d8>
    f610:	and	r3, ip, r0, lsr #1
    f614:	and	ip, ip, r1, lsr #1
    f618:	sub	ip, r1, ip
    f61c:	sub	r0, r0, r3
    f620:	and	r3, r0, r2
    f624:	and	r1, ip, r2
    f628:	and	r0, r2, r0, lsr #2
    f62c:	and	r2, r2, ip, lsr #2
    f630:	add	r3, r3, r0
    f634:	add	r1, r1, r2
    f638:	ldr	r0, [pc, #40]	; f668 <lell_pcapng_close@@Base+0x2dc>
    f63c:	add	r1, r1, r1, lsr #4
    f640:	add	r3, r3, r3, lsr #4
    f644:	and	r3, r3, r0
    f648:	and	r0, r0, r1
    f64c:	add	r0, r0, r3
    f650:	add	r0, r0, r0, lsl #8
    f654:	add	r0, r0, r0, lsl #16
    f658:	lsr	r0, r0, #24
    f65c:	bx	lr
    f660:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
    f664:	teqcc	r3, #-872415232	; 0xcc000000
    f668:	svceq	0x000f0f0f
    f66c:	cmp	r1, r3
    f670:	push	{r4, r5, r6, r7, r8, r9, lr}
    f674:	cmpeq	r0, r2
    f678:	mov	r4, r0
    f67c:	mov	r5, r1
    f680:	ldr	r9, [sp, #28]
    f684:	movcc	r0, #0
    f688:	movcc	r1, #0
    f68c:	bcc	f784 <lell_pcapng_close@@Base+0x3f8>
    f690:	cmp	r3, #0
    f694:	clzeq	ip, r2
    f698:	clzne	ip, r3
    f69c:	addeq	ip, ip, #32
    f6a0:	cmp	r5, #0
    f6a4:	clzeq	r1, r4
    f6a8:	addeq	r1, r1, #32
    f6ac:	clzne	r1, r5
    f6b0:	sub	ip, ip, r1
    f6b4:	sub	lr, ip, #32
    f6b8:	lsl	r7, r3, ip
    f6bc:	rsb	r8, ip, #32
    f6c0:	orr	r7, r7, r2, lsl lr
    f6c4:	orr	r7, r7, r2, lsr r8
    f6c8:	lsl	r6, r2, ip
    f6cc:	cmp	r5, r7
    f6d0:	cmpeq	r4, r6
    f6d4:	movcc	r0, #0
    f6d8:	movcc	r1, #0
    f6dc:	bcc	f6f8 <lell_pcapng_close@@Base+0x36c>
    f6e0:	mov	r3, #1
    f6e4:	subs	r4, r4, r6
    f6e8:	lsl	r1, r3, lr
    f6ec:	lsl	r0, r3, ip
    f6f0:	orr	r1, r1, r3, lsr r8
    f6f4:	sbc	r5, r5, r7
    f6f8:	cmp	ip, #0
    f6fc:	beq	f784 <lell_pcapng_close@@Base+0x3f8>
    f700:	lsrs	r3, r7, #1
    f704:	rrx	r2, r6
    f708:	mov	r6, ip
    f70c:	b	f730 <lell_pcapng_close@@Base+0x3a4>
    f710:	subs	r4, r4, r2
    f714:	sbc	r5, r5, r3
    f718:	adds	r4, r4, r4
    f71c:	adc	r5, r5, r5
    f720:	adds	r4, r4, #1
    f724:	adc	r5, r5, #0
    f728:	subs	r6, r6, #1
    f72c:	beq	f74c <lell_pcapng_close@@Base+0x3c0>
    f730:	cmp	r5, r3
    f734:	cmpeq	r4, r2
    f738:	bcs	f710 <lell_pcapng_close@@Base+0x384>
    f73c:	adds	r4, r4, r4
    f740:	adc	r5, r5, r5
    f744:	subs	r6, r6, #1
    f748:	bne	f730 <lell_pcapng_close@@Base+0x3a4>
    f74c:	lsr	r6, r4, ip
    f750:	lsr	r7, r5, ip
    f754:	orr	r6, r6, r5, lsl r8
    f758:	adds	r2, r0, r4
    f75c:	orr	r6, r6, r5, lsr lr
    f760:	adc	r3, r1, r5
    f764:	lsl	r1, r7, ip
    f768:	orr	r1, r1, r6, lsl lr
    f76c:	lsl	r0, r6, ip
    f770:	orr	r1, r1, r6, lsr r8
    f774:	subs	r0, r2, r0
    f778:	mov	r4, r6
    f77c:	mov	r5, r7
    f780:	sbc	r1, r3, r1
    f784:	cmp	r9, #0
    f788:	popeq	{r4, r5, r6, r7, r8, r9, pc}
    f78c:	strd	r4, [r9]
    f790:	pop	{r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .fini:

0000f794 <.fini>:
    f794:	push	{r3, lr}
    f798:	pop	{r3, pc}
