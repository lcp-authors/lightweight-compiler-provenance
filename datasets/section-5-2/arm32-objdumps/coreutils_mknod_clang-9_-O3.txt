
../repos/coreutils/src/mknod:     file format elf32-littlearm


Disassembly of section .init:

00011768 <.init>:
   11768:	push	{r3, lr}
   1176c:	bl	11c0c <__assert_fail@plt+0x4c>
   11770:	pop	{r3, pc}

Disassembly of section .plt:

00011774 <fstatfs64@plt-0x14>:
   11774:	push	{lr}		; (str lr, [sp, #-4]!)
   11778:	ldr	lr, [pc, #4]	; 11784 <fstatfs64@plt-0x4>
   1177c:	add	lr, pc, lr
   11780:	ldr	pc, [lr, #8]!
   11784:	andeq	ip, r1, ip, ror r8

00011788 <fstatfs64@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #28, 20	; 0x1c000
   11790:	ldr	pc, [ip, #2172]!	; 0x87c

00011794 <selabel_lookup@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #28, 20	; 0x1c000
   1179c:	ldr	pc, [ip, #2164]!	; 0x874

000117a0 <calloc@plt>:
   117a0:	add	ip, pc, #0, 12
   117a4:	add	ip, ip, #28, 20	; 0x1c000
   117a8:	ldr	pc, [ip, #2156]!	; 0x86c

000117ac <fputs_unlocked@plt>:
   117ac:	add	ip, pc, #0, 12
   117b0:	add	ip, ip, #28, 20	; 0x1c000
   117b4:	ldr	pc, [ip, #2148]!	; 0x864

000117b8 <raise@plt>:
   117b8:	add	ip, pc, #0, 12
   117bc:	add	ip, ip, #28, 20	; 0x1c000
   117c0:	ldr	pc, [ip, #2140]!	; 0x85c

000117c4 <is_selinux_enabled@plt>:
   117c4:	add	ip, pc, #0, 12
   117c8:	add	ip, ip, #28, 20	; 0x1c000
   117cc:	ldr	pc, [ip, #2132]!	; 0x854

000117d0 <strcmp@plt>:
   117d0:	add	ip, pc, #0, 12
   117d4:	add	ip, ip, #28, 20	; 0x1c000
   117d8:	ldr	pc, [ip, #2124]!	; 0x84c

000117dc <context_type_get@plt>:
   117dc:	add	ip, pc, #0, 12
   117e0:	add	ip, ip, #28, 20	; 0x1c000
   117e4:	ldr	pc, [ip, #2116]!	; 0x844

000117e8 <fflush@plt>:
   117e8:	add	ip, pc, #0, 12
   117ec:	add	ip, ip, #28, 20	; 0x1c000
   117f0:	ldr	pc, [ip, #2108]!	; 0x83c

000117f4 <lsetfilecon@plt>:
   117f4:	add	ip, pc, #0, 12
   117f8:	add	ip, ip, #28, 20	; 0x1c000
   117fc:	ldr	pc, [ip, #2100]!	; 0x834

00011800 <memmove@plt>:
   11800:	add	ip, pc, #0, 12
   11804:	add	ip, ip, #28, 20	; 0x1c000
   11808:	ldr	pc, [ip, #2092]!	; 0x82c

0001180c <free@plt>:
   1180c:	add	ip, pc, #0, 12
   11810:	add	ip, ip, #28, 20	; 0x1c000
   11814:	ldr	pc, [ip, #2084]!	; 0x824

00011818 <faccessat@plt>:
   11818:	add	ip, pc, #0, 12
   1181c:	add	ip, ip, #28, 20	; 0x1c000
   11820:	ldr	pc, [ip, #2076]!	; 0x81c

00011824 <_exit@plt>:
   11824:	add	ip, pc, #0, 12
   11828:	add	ip, ip, #28, 20	; 0x1c000
   1182c:	ldr	pc, [ip, #2068]!	; 0x814

00011830 <memcpy@plt>:
   11830:	add	ip, pc, #0, 12
   11834:	add	ip, ip, #28, 20	; 0x1c000
   11838:	ldr	pc, [ip, #2060]!	; 0x80c

0001183c <__strtoull_internal@plt>:
   1183c:	add	ip, pc, #0, 12
   11840:	add	ip, ip, #28, 20	; 0x1c000
   11844:	ldr	pc, [ip, #2052]!	; 0x804

00011848 <mbsinit@plt>:
   11848:	add	ip, pc, #0, 12
   1184c:	add	ip, ip, #28, 20	; 0x1c000
   11850:	ldr	pc, [ip, #2044]!	; 0x7fc

00011854 <context_new@plt>:
   11854:	add	ip, pc, #0, 12
   11858:	add	ip, ip, #28, 20	; 0x1c000
   1185c:	ldr	pc, [ip, #2036]!	; 0x7f4

00011860 <dcgettext@plt>:
   11860:	add	ip, pc, #0, 12
   11864:	add	ip, ip, #28, 20	; 0x1c000
   11868:	ldr	pc, [ip, #2028]!	; 0x7ec

0001186c <context_type_set@plt>:
   1186c:	add	ip, pc, #0, 12
   11870:	add	ip, ip, #28, 20	; 0x1c000
   11874:	ldr	pc, [ip, #2020]!	; 0x7e4

00011878 <realloc@plt>:
   11878:	add	ip, pc, #0, 12
   1187c:	add	ip, ip, #28, 20	; 0x1c000
   11880:	ldr	pc, [ip, #2012]!	; 0x7dc

00011884 <fgetfilecon@plt>:
   11884:	add	ip, pc, #0, 12
   11888:	add	ip, ip, #28, 20	; 0x1c000
   1188c:	ldr	pc, [ip, #2004]!	; 0x7d4

00011890 <textdomain@plt>:
   11890:	add	ip, pc, #0, 12
   11894:	add	ip, ip, #28, 20	; 0x1c000
   11898:	ldr	pc, [ip, #1996]!	; 0x7cc

0001189c <rawmemchr@plt>:
   1189c:	add	ip, pc, #0, 12
   118a0:	add	ip, ip, #28, 20	; 0x1c000
   118a4:	ldr	pc, [ip, #1988]!	; 0x7c4

000118a8 <__fxstatat64@plt>:
   118a8:	add	ip, pc, #0, 12
   118ac:	add	ip, ip, #28, 20	; 0x1c000
   118b0:	ldr	pc, [ip, #1980]!	; 0x7bc

000118b4 <iswprint@plt>:
   118b4:	add	ip, pc, #0, 12
   118b8:	add	ip, ip, #28, 20	; 0x1c000
   118bc:	ldr	pc, [ip, #1972]!	; 0x7b4

000118c0 <__fxstat64@plt>:
   118c0:	add	ip, pc, #0, 12
   118c4:	add	ip, ip, #28, 20	; 0x1c000
   118c8:	ldr	pc, [ip, #1964]!	; 0x7ac

000118cc <readlink@plt>:
   118cc:	add	ip, pc, #0, 12
   118d0:	add	ip, ip, #28, 20	; 0x1c000
   118d4:	ldr	pc, [ip, #1956]!	; 0x7a4

000118d8 <fwrite@plt>:
   118d8:	add	ip, pc, #0, 12
   118dc:	add	ip, ip, #28, 20	; 0x1c000
   118e0:	ldr	pc, [ip, #1948]!	; 0x79c

000118e4 <lseek64@plt>:
   118e4:	add	ip, pc, #0, 12
   118e8:	add	ip, ip, #28, 20	; 0x1c000
   118ec:	ldr	pc, [ip, #1940]!	; 0x794

000118f0 <__ctype_get_mb_cur_max@plt>:
   118f0:	add	ip, pc, #0, 12
   118f4:	add	ip, ip, #28, 20	; 0x1c000
   118f8:	ldr	pc, [ip, #1932]!	; 0x78c

000118fc <getcon@plt>:
   118fc:	add	ip, pc, #0, 12
   11900:	add	ip, ip, #28, 20	; 0x1c000
   11904:	ldr	pc, [ip, #1924]!	; 0x784

00011908 <__fpending@plt>:
   11908:	add	ip, pc, #0, 12
   1190c:	add	ip, ip, #28, 20	; 0x1c000
   11910:	ldr	pc, [ip, #1916]!	; 0x77c

00011914 <mbrtowc@plt>:
   11914:	add	ip, pc, #0, 12
   11918:	add	ip, ip, #28, 20	; 0x1c000
   1191c:	ldr	pc, [ip, #1908]!	; 0x774

00011920 <error@plt>:
   11920:	add	ip, pc, #0, 12
   11924:	add	ip, ip, #28, 20	; 0x1c000
   11928:	ldr	pc, [ip, #1900]!	; 0x76c

0001192c <open64@plt>:
   1192c:	add	ip, pc, #0, 12
   11930:	add	ip, ip, #28, 20	; 0x1c000
   11934:	ldr	pc, [ip, #1892]!	; 0x764

00011938 <lgetfilecon@plt>:
   11938:	add	ip, pc, #0, 12
   1193c:	add	ip, ip, #28, 20	; 0x1c000
   11940:	ldr	pc, [ip, #1884]!	; 0x75c

00011944 <malloc@plt>:
   11944:	add	ip, pc, #0, 12
   11948:	add	ip, ip, #28, 20	; 0x1c000
   1194c:	ldr	pc, [ip, #1876]!	; 0x754

00011950 <__libc_start_main@plt>:
   11950:	add	ip, pc, #0, 12
   11954:	add	ip, ip, #28, 20	; 0x1c000
   11958:	ldr	pc, [ip, #1868]!	; 0x74c

0001195c <__freading@plt>:
   1195c:	add	ip, pc, #0, 12
   11960:	add	ip, ip, #28, 20	; 0x1c000
   11964:	ldr	pc, [ip, #1860]!	; 0x744

00011968 <__gmon_start__@plt>:
   11968:	add	ip, pc, #0, 12
   1196c:	add	ip, ip, #28, 20	; 0x1c000
   11970:	ldr	pc, [ip, #1852]!	; 0x73c

00011974 <context_free@plt>:
   11974:	add	ip, pc, #0, 12
   11978:	add	ip, ip, #28, 20	; 0x1c000
   1197c:	ldr	pc, [ip, #1844]!	; 0x734

00011980 <getopt_long@plt>:
   11980:	add	ip, pc, #0, 12
   11984:	add	ip, ip, #28, 20	; 0x1c000
   11988:	ldr	pc, [ip, #1836]!	; 0x72c

0001198c <__ctype_b_loc@plt>:
   1198c:	add	ip, pc, #0, 12
   11990:	add	ip, ip, #28, 20	; 0x1c000
   11994:	ldr	pc, [ip, #1828]!	; 0x724

00011998 <getcwd@plt>:
   11998:	add	ip, pc, #0, 12
   1199c:	add	ip, ip, #28, 20	; 0x1c000
   119a0:	ldr	pc, [ip, #1820]!	; 0x71c

000119a4 <exit@plt>:
   119a4:	add	ip, pc, #0, 12
   119a8:	add	ip, ip, #28, 20	; 0x1c000
   119ac:	ldr	pc, [ip, #1812]!	; 0x714

000119b0 <getfilecon@plt>:
   119b0:	add	ip, pc, #0, 12
   119b4:	add	ip, ip, #28, 20	; 0x1c000
   119b8:	ldr	pc, [ip, #1804]!	; 0x70c

000119bc <bcmp@plt>:
   119bc:	add	ip, pc, #0, 12
   119c0:	add	ip, ip, #28, 20	; 0x1c000
   119c4:	ldr	pc, [ip, #1796]!	; 0x704

000119c8 <strlen@plt>:
   119c8:	add	ip, pc, #0, 12
   119cc:	add	ip, ip, #28, 20	; 0x1c000
   119d0:	ldr	pc, [ip, #1788]!	; 0x6fc

000119d4 <selabel_open@plt>:
   119d4:	add	ip, pc, #0, 12
   119d8:	add	ip, ip, #28, 20	; 0x1c000
   119dc:	ldr	pc, [ip, #1780]!	; 0x6f4

000119e0 <strchr@plt>:
   119e0:	add	ip, pc, #0, 12
   119e4:	add	ip, ip, #28, 20	; 0x1c000
   119e8:	ldr	pc, [ip, #1772]!	; 0x6ec

000119ec <openat64@plt>:
   119ec:	add	ip, pc, #0, 12
   119f0:	add	ip, ip, #28, 20	; 0x1c000
   119f4:	ldr	pc, [ip, #1764]!	; 0x6e4

000119f8 <setfscreatecon@plt>:
   119f8:	add	ip, pc, #0, 12
   119fc:	add	ip, ip, #28, 20	; 0x1c000
   11a00:	ldr	pc, [ip, #1756]!	; 0x6dc

00011a04 <__errno_location@plt>:
   11a04:	add	ip, pc, #0, 12
   11a08:	add	ip, ip, #28, 20	; 0x1c000
   11a0c:	ldr	pc, [ip, #1748]!	; 0x6d4

00011a10 <__sprintf_chk@plt>:
   11a10:	add	ip, pc, #0, 12
   11a14:	add	ip, ip, #28, 20	; 0x1c000
   11a18:	ldr	pc, [ip, #1740]!	; 0x6cc

00011a1c <__cxa_atexit@plt>:
   11a1c:	add	ip, pc, #0, 12
   11a20:	add	ip, ip, #28, 20	; 0x1c000
   11a24:	ldr	pc, [ip, #1732]!	; 0x6c4

00011a28 <memset@plt>:
   11a28:	add	ip, pc, #0, 12
   11a2c:	add	ip, ip, #28, 20	; 0x1c000
   11a30:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a34 <__printf_chk@plt>:
   11a34:	add	ip, pc, #0, 12
   11a38:	add	ip, ip, #28, 20	; 0x1c000
   11a3c:	ldr	pc, [ip, #1716]!	; 0x6b4

00011a40 <fileno@plt>:
   11a40:	add	ip, pc, #0, 12
   11a44:	add	ip, ip, #28, 20	; 0x1c000
   11a48:	ldr	pc, [ip, #1708]!	; 0x6ac

00011a4c <__fprintf_chk@plt>:
   11a4c:	add	ip, pc, #0, 12
   11a50:	add	ip, ip, #28, 20	; 0x1c000
   11a54:	ldr	pc, [ip, #1700]!	; 0x6a4

00011a58 <fclose@plt>:
   11a58:	add	ip, pc, #0, 12
   11a5c:	add	ip, ip, #28, 20	; 0x1c000
   11a60:	ldr	pc, [ip, #1692]!	; 0x69c

00011a64 <fseeko64@plt>:
   11a64:	add	ip, pc, #0, 12
   11a68:	add	ip, ip, #28, 20	; 0x1c000
   11a6c:	ldr	pc, [ip, #1684]!	; 0x694

00011a70 <fcntl64@plt>:
   11a70:	add	ip, pc, #0, 12
   11a74:	add	ip, ip, #28, 20	; 0x1c000
   11a78:	ldr	pc, [ip, #1676]!	; 0x68c

00011a7c <setlocale@plt>:
   11a7c:	add	ip, pc, #0, 12
   11a80:	add	ip, ip, #28, 20	; 0x1c000
   11a84:	ldr	pc, [ip, #1668]!	; 0x684

00011a88 <fsetfilecon@plt>:
   11a88:	add	ip, pc, #0, 12
   11a8c:	add	ip, ip, #28, 20	; 0x1c000
   11a90:	ldr	pc, [ip, #1660]!	; 0x67c

00011a94 <strrchr@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #28, 20	; 0x1c000
   11a9c:	ldr	pc, [ip, #1652]!	; 0x674

00011aa0 <nl_langinfo@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #28, 20	; 0x1c000
   11aa8:	ldr	pc, [ip, #1644]!	; 0x66c

00011aac <readdir64@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #28, 20	; 0x1c000
   11ab4:	ldr	pc, [ip, #1636]!	; 0x664

00011ab8 <fdopendir@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #28, 20	; 0x1c000
   11ac0:	ldr	pc, [ip, #1628]!	; 0x65c

00011ac4 <security_compute_create@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #28, 20	; 0x1c000
   11acc:	ldr	pc, [ip, #1620]!	; 0x654

00011ad0 <dirfd@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #28, 20	; 0x1c000
   11ad8:	ldr	pc, [ip, #1612]!	; 0x64c

00011adc <fchdir@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #28, 20	; 0x1c000
   11ae4:	ldr	pc, [ip, #1604]!	; 0x644

00011ae8 <qsort@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #28, 20	; 0x1c000
   11af0:	ldr	pc, [ip, #1596]!	; 0x63c

00011af4 <freecon@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #28, 20	; 0x1c000
   11afc:	ldr	pc, [ip, #1588]!	; 0x634

00011b00 <bindtextdomain@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #28, 20	; 0x1c000
   11b08:	ldr	pc, [ip, #1580]!	; 0x62c

00011b0c <getfscreatecon@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #28, 20	; 0x1c000
   11b14:	ldr	pc, [ip, #1572]!	; 0x624

00011b18 <umask@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #28, 20	; 0x1c000
   11b20:	ldr	pc, [ip, #1564]!	; 0x61c

00011b24 <context_str@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #28, 20	; 0x1c000
   11b2c:	ldr	pc, [ip, #1556]!	; 0x614

00011b30 <chmod@plt>:
   11b30:	add	ip, pc, #0, 12
   11b34:	add	ip, ip, #28, 20	; 0x1c000
   11b38:	ldr	pc, [ip, #1548]!	; 0x60c

00011b3c <__xstat64@plt>:
   11b3c:	add	ip, pc, #0, 12
   11b40:	add	ip, ip, #28, 20	; 0x1c000
   11b44:	ldr	pc, [ip, #1540]!	; 0x604

00011b48 <__xmknod@plt>:
   11b48:	add	ip, pc, #0, 12
   11b4c:	add	ip, ip, #28, 20	; 0x1c000
   11b50:	ldr	pc, [ip, #1532]!	; 0x5fc

00011b54 <strncmp@plt>:
   11b54:	add	ip, pc, #0, 12
   11b58:	add	ip, ip, #28, 20	; 0x1c000
   11b5c:	ldr	pc, [ip, #1524]!	; 0x5f4

00011b60 <abort@plt>:
   11b60:	add	ip, pc, #0, 12
   11b64:	add	ip, ip, #28, 20	; 0x1c000
   11b68:	ldr	pc, [ip, #1516]!	; 0x5ec

00011b6c <close@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #28, 20	; 0x1c000
   11b74:	ldr	pc, [ip, #1508]!	; 0x5e4

00011b78 <__lxstat64@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #28, 20	; 0x1c000
   11b80:	ldr	pc, [ip, #1500]!	; 0x5dc

00011b84 <mkfifo@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #28, 20	; 0x1c000
   11b8c:	ldr	pc, [ip, #1492]!	; 0x5d4

00011b90 <mode_to_security_class@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #28, 20	; 0x1c000
   11b98:	ldr	pc, [ip, #1484]!	; 0x5cc

00011b9c <closedir@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #28, 20	; 0x1c000
   11ba4:	ldr	pc, [ip, #1476]!	; 0x5c4

00011ba8 <strspn@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #28, 20	; 0x1c000
   11bb0:	ldr	pc, [ip, #1468]!	; 0x5bc

00011bb4 <__mempcpy_chk@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #28, 20	; 0x1c000
   11bbc:	ldr	pc, [ip, #1460]!	; 0x5b4

00011bc0 <__assert_fail@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #28, 20	; 0x1c000
   11bc8:	ldr	pc, [ip, #1452]!	; 0x5ac

Disassembly of section .text:

00011bd0 <lchmod@@Base-0x59e8>:
   11bd0:	mov	fp, #0
   11bd4:	mov	lr, #0
   11bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   11bdc:	mov	r2, sp
   11be0:	push	{r2}		; (str r2, [sp, #-4]!)
   11be4:	push	{r0}		; (str r0, [sp, #-4]!)
   11be8:	ldr	ip, [pc, #16]	; 11c00 <__assert_fail@plt+0x40>
   11bec:	push	{ip}		; (str ip, [sp, #-4]!)
   11bf0:	ldr	r0, [pc, #12]	; 11c04 <__assert_fail@plt+0x44>
   11bf4:	ldr	r3, [pc, #12]	; 11c08 <__assert_fail@plt+0x48>
   11bf8:	bl	11950 <__libc_start_main@plt>
   11bfc:	bl	11b60 <abort@plt>
   11c00:	muleq	r1, r0, r4
   11c04:			; <UNDEFINED> instruction: 0x00011fb4
   11c08:	andeq	ip, r1, r0, lsr r4
   11c0c:	ldr	r3, [pc, #20]	; 11c28 <__assert_fail@plt+0x68>
   11c10:	ldr	r2, [pc, #20]	; 11c2c <__assert_fail@plt+0x6c>
   11c14:	add	r3, pc, r3
   11c18:	ldr	r2, [r3, r2]
   11c1c:	cmp	r2, #0
   11c20:	bxeq	lr
   11c24:	b	11968 <__gmon_start__@plt>
   11c28:	andeq	ip, r1, r4, ror #7
   11c2c:	andeq	r0, r0, r8, ror r1
   11c30:	ldr	r0, [pc, #24]	; 11c50 <__assert_fail@plt+0x90>
   11c34:	ldr	r3, [pc, #24]	; 11c54 <__assert_fail@plt+0x94>
   11c38:	cmp	r3, r0
   11c3c:	bxeq	lr
   11c40:	ldr	r3, [pc, #16]	; 11c58 <__assert_fail@plt+0x98>
   11c44:	cmp	r3, #0
   11c48:	bxeq	lr
   11c4c:	bx	r3
   11c50:	ldrdeq	lr, [r2], -r0
   11c54:	ldrdeq	lr, [r2], -r0
   11c58:	andeq	r0, r0, r0
   11c5c:	ldr	r0, [pc, #36]	; 11c88 <__assert_fail@plt+0xc8>
   11c60:	ldr	r1, [pc, #36]	; 11c8c <__assert_fail@plt+0xcc>
   11c64:	sub	r1, r1, r0
   11c68:	asr	r1, r1, #2
   11c6c:	add	r1, r1, r1, lsr #31
   11c70:	asrs	r1, r1, #1
   11c74:	bxeq	lr
   11c78:	ldr	r3, [pc, #16]	; 11c90 <__assert_fail@plt+0xd0>
   11c7c:	cmp	r3, #0
   11c80:	bxeq	lr
   11c84:	bx	r3
   11c88:	ldrdeq	lr, [r2], -r0
   11c8c:	ldrdeq	lr, [r2], -r0
   11c90:	andeq	r0, r0, r0
   11c94:	push	{r4, lr}
   11c98:	ldr	r4, [pc, #24]	; 11cb8 <__assert_fail@plt+0xf8>
   11c9c:	ldrb	r3, [r4]
   11ca0:	cmp	r3, #0
   11ca4:	popne	{r4, pc}
   11ca8:	bl	11c30 <__assert_fail@plt+0x70>
   11cac:	mov	r3, #1
   11cb0:	strb	r3, [r4]
   11cb4:	pop	{r4, pc}
   11cb8:	andeq	lr, r2, ip, ror #3
   11cbc:	b	11c5c <__assert_fail@plt+0x9c>
   11cc0:	push	{fp, lr}
   11cc4:	mov	fp, sp
   11cc8:	sub	sp, sp, #56	; 0x38
   11ccc:	mov	r4, r0
   11cd0:	cmp	r0, #0
   11cd4:	bne	11f70 <__assert_fail@plt+0x3b0>
   11cd8:	movw	r1, #50403	; 0xc4e3
   11cdc:	mov	r0, #0
   11ce0:	mov	r2, #5
   11ce4:	movt	r1, #1
   11ce8:	bl	11860 <dcgettext@plt>
   11cec:	mov	r1, r0
   11cf0:	movw	r0, #57848	; 0xe1f8
   11cf4:	movt	r0, #2
   11cf8:	ldr	r2, [r0]
   11cfc:	mov	r0, #1
   11d00:	bl	11a34 <__printf_chk@plt>
   11d04:	movw	r1, #50450	; 0xc512
   11d08:	mov	r0, #0
   11d0c:	mov	r2, #5
   11d10:	movt	r1, #1
   11d14:	bl	11860 <dcgettext@plt>
   11d18:	movw	r7, #57828	; 0xe1e4
   11d1c:	movt	r7, #2
   11d20:	ldr	r1, [r7]
   11d24:	bl	117ac <fputs_unlocked@plt>
   11d28:	movw	r1, #52026	; 0xcb3a
   11d2c:	mov	r0, #0
   11d30:	mov	r2, #5
   11d34:	movt	r1, #1
   11d38:	bl	11860 <dcgettext@plt>
   11d3c:	ldr	r1, [r7]
   11d40:	bl	117ac <fputs_unlocked@plt>
   11d44:	movw	r1, #50499	; 0xc543
   11d48:	mov	r0, #0
   11d4c:	mov	r2, #5
   11d50:	movt	r1, #1
   11d54:	bl	11860 <dcgettext@plt>
   11d58:	ldr	r1, [r7]
   11d5c:	bl	117ac <fputs_unlocked@plt>
   11d60:	movw	r1, #50572	; 0xc58c
   11d64:	mov	r0, #0
   11d68:	mov	r2, #5
   11d6c:	movt	r1, #1
   11d70:	bl	11860 <dcgettext@plt>
   11d74:	ldr	r1, [r7]
   11d78:	bl	117ac <fputs_unlocked@plt>
   11d7c:	movw	r1, #50779	; 0xc65b
   11d80:	mov	r0, #0
   11d84:	mov	r2, #5
   11d88:	movt	r1, #1
   11d8c:	bl	11860 <dcgettext@plt>
   11d90:	ldr	r1, [r7]
   11d94:	bl	117ac <fputs_unlocked@plt>
   11d98:	movw	r1, #50824	; 0xc688
   11d9c:	mov	r0, #0
   11da0:	mov	r2, #5
   11da4:	movt	r1, #1
   11da8:	bl	11860 <dcgettext@plt>
   11dac:	ldr	r1, [r7]
   11db0:	bl	117ac <fputs_unlocked@plt>
   11db4:	movw	r1, #50878	; 0xc6be
   11db8:	mov	r0, #0
   11dbc:	mov	r2, #5
   11dc0:	movt	r1, #1
   11dc4:	bl	11860 <dcgettext@plt>
   11dc8:	ldr	r1, [r7]
   11dcc:	bl	117ac <fputs_unlocked@plt>
   11dd0:	movw	r1, #51139	; 0xc7c3
   11dd4:	mov	r0, #0
   11dd8:	mov	r2, #5
   11ddc:	movt	r1, #1
   11de0:	bl	11860 <dcgettext@plt>
   11de4:	ldr	r1, [r7]
   11de8:	bl	117ac <fputs_unlocked@plt>
   11dec:	movw	r1, #51266	; 0xc842
   11df0:	mov	r0, #0
   11df4:	mov	r2, #5
   11df8:	movt	r1, #1
   11dfc:	bl	11860 <dcgettext@plt>
   11e00:	movw	r5, #51457	; 0xc901
   11e04:	mov	r1, r0
   11e08:	mov	r0, #1
   11e0c:	movt	r5, #1
   11e10:	mov	r2, r5
   11e14:	bl	11a34 <__printf_chk@plt>
   11e18:	movw	r0, #52512	; 0xcd20
   11e1c:	mov	r2, #48	; 0x30
   11e20:	mov	r6, sp
   11e24:	movt	r0, #1
   11e28:	add	r1, r0, #32
   11e2c:	add	r3, r0, #16
   11e30:	vld1.64	{d18-d19}, [r0], r2
   11e34:	vld1.64	{d16-d17}, [r1]
   11e38:	vld1.64	{d20-d21}, [r3]
   11e3c:	vldr	d22, [r0]
   11e40:	add	r1, r6, #32
   11e44:	add	r0, r6, #16
   11e48:	vst1.64	{d16-d17}, [r1]
   11e4c:	movw	r1, #52101	; 0xcb85
   11e50:	vst1.64	{d20-d21}, [r0]
   11e54:	mov	r0, r6
   11e58:	movt	r1, #1
   11e5c:	vst1.64	{d18-d19}, [r0], r2
   11e60:	vstr	d22, [r0]
   11e64:	mov	r0, r5
   11e68:	bl	117d0 <strcmp@plt>
   11e6c:	cmp	r0, #0
   11e70:	ldrne	r1, [r6, #8]!
   11e74:	cmpne	r1, #0
   11e78:	bne	11e64 <__assert_fail@plt+0x2a4>
   11e7c:	movw	r1, #52196	; 0xcbe4
   11e80:	ldr	r6, [r6, #4]
   11e84:	mov	r0, #0
   11e88:	mov	r2, #5
   11e8c:	movt	r1, #1
   11e90:	bl	11860 <dcgettext@plt>
   11e94:	movw	r2, #51592	; 0xc988
   11e98:	movw	r3, #52219	; 0xcbfb
   11e9c:	mov	r1, r0
   11ea0:	mov	r0, #1
   11ea4:	movt	r2, #1
   11ea8:	movt	r3, #1
   11eac:	bl	11a34 <__printf_chk@plt>
   11eb0:	cmp	r6, #0
   11eb4:	mov	r0, #5
   11eb8:	mov	r1, #0
   11ebc:	moveq	r6, r5
   11ec0:	bl	11a7c <setlocale@plt>
   11ec4:	cmp	r0, #0
   11ec8:	beq	11f00 <__assert_fail@plt+0x340>
   11ecc:	movw	r1, #52259	; 0xcc23
   11ed0:	mov	r2, #3
   11ed4:	movt	r1, #1
   11ed8:	bl	11b54 <strncmp@plt>
   11edc:	cmp	r0, #0
   11ee0:	beq	11f00 <__assert_fail@plt+0x340>
   11ee4:	movw	r1, #52263	; 0xcc27
   11ee8:	mov	r0, #0
   11eec:	mov	r2, #5
   11ef0:	movt	r1, #1
   11ef4:	bl	11860 <dcgettext@plt>
   11ef8:	ldr	r1, [r7]
   11efc:	bl	117ac <fputs_unlocked@plt>
   11f00:	movw	r1, #52334	; 0xcc6e
   11f04:	mov	r0, #0
   11f08:	mov	r2, #5
   11f0c:	movt	r1, #1
   11f10:	bl	11860 <dcgettext@plt>
   11f14:	movw	r2, #52219	; 0xcbfb
   11f18:	mov	r1, r0
   11f1c:	mov	r0, #1
   11f20:	mov	r3, r5
   11f24:	movt	r2, #1
   11f28:	bl	11a34 <__printf_chk@plt>
   11f2c:	movw	r1, #52361	; 0xcc89
   11f30:	mov	r0, #0
   11f34:	mov	r2, #5
   11f38:	movt	r1, #1
   11f3c:	bl	11860 <dcgettext@plt>
   11f40:	mov	r1, r0
   11f44:	movw	r0, #52129	; 0xcba1
   11f48:	movw	r3, #52411	; 0xccbb
   11f4c:	cmp	r6, r5
   11f50:	mov	r2, r6
   11f54:	movt	r0, #1
   11f58:	movt	r3, #1
   11f5c:	moveq	r3, r0
   11f60:	mov	r0, #1
   11f64:	bl	11a34 <__printf_chk@plt>
   11f68:	mov	r0, r4
   11f6c:	bl	119a4 <exit@plt>
   11f70:	movw	r0, #57824	; 0xe1e0
   11f74:	movw	r1, #50364	; 0xc4bc
   11f78:	mov	r2, #5
   11f7c:	movt	r0, #2
   11f80:	movt	r1, #1
   11f84:	ldr	r5, [r0]
   11f88:	mov	r0, #0
   11f8c:	bl	11860 <dcgettext@plt>
   11f90:	mov	r2, r0
   11f94:	movw	r0, #57848	; 0xe1f8
   11f98:	mov	r1, #1
   11f9c:	movt	r0, #2
   11fa0:	ldr	r3, [r0]
   11fa4:	mov	r0, r5
   11fa8:	bl	11a4c <__fprintf_chk@plt>
   11fac:	mov	r0, r4
   11fb0:	bl	119a4 <exit@plt>
   11fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fb8:	add	fp, sp, #28
   11fbc:	sub	sp, sp, #52	; 0x34
   11fc0:	mov	r6, r0
   11fc4:	ldr	r0, [r1]
   11fc8:	mov	r4, r1
   11fcc:	bl	17d64 <lchmod@@Base+0x7ac>
   11fd0:	movw	r1, #52411	; 0xccbb
   11fd4:	mov	r0, #6
   11fd8:	movt	r1, #1
   11fdc:	bl	11a7c <setlocale@plt>
   11fe0:	movw	r5, #51596	; 0xc98c
   11fe4:	movw	r1, #51463	; 0xc907
   11fe8:	movt	r5, #1
   11fec:	movt	r1, #1
   11ff0:	mov	r0, r5
   11ff4:	bl	11b00 <bindtextdomain@plt>
   11ff8:	mov	r0, r5
   11ffc:	bl	11890 <textdomain@plt>
   12000:	movw	r0, #13556	; 0x34f4
   12004:	movt	r0, #1
   12008:	bl	1c494 <lchmod@@Base+0x4edc>
   1200c:	movw	r5, #51487	; 0xc91f
   12010:	movw	r8, #52432	; 0xccd0
   12014:	mov	r0, #0
   12018:	mov	r9, #0
   1201c:	mov	r1, #0
   12020:	mov	sl, #0
   12024:	movt	r5, #1
   12028:	movt	r8, #1
   1202c:	str	r0, [sp, #16]
   12030:	mov	r7, r1
   12034:	mov	r0, r6
   12038:	mov	r1, r4
   1203c:	mov	r2, r5
   12040:	mov	r3, r8
   12044:	str	r9, [sp]
   12048:	bl	11980 <getopt_long@plt>
   1204c:	cmp	r0, #89	; 0x59
   12050:	ble	12124 <__assert_fail@plt+0x564>
   12054:	cmp	r0, #90	; 0x5a
   12058:	bne	120a4 <__assert_fail@plt+0x4e4>
   1205c:	bl	117c4 <is_selinux_enabled@plt>
   12060:	movw	r1, #57832	; 0xe1e8
   12064:	cmp	r0, #1
   12068:	movt	r1, #2
   1206c:	ldr	r1, [r1]
   12070:	bge	120bc <__assert_fail@plt+0x4fc>
   12074:	cmp	r1, #0
   12078:	beq	12034 <__assert_fail@plt+0x474>
   1207c:	movw	r1, #51519	; 0xc93f
   12080:	mov	r0, #0
   12084:	mov	r2, #5
   12088:	movt	r1, #1
   1208c:	bl	11860 <dcgettext@plt>
   12090:	mov	r2, r0
   12094:	mov	r0, #0
   12098:	mov	r1, #0
   1209c:	bl	11920 <error@plt>
   120a0:	b	12034 <__assert_fail@plt+0x474>
   120a4:	cmp	r0, #109	; 0x6d
   120a8:	bne	126b0 <__assert_fail@plt+0xaf0>
   120ac:	movw	r0, #57832	; 0xe1e8
   120b0:	movt	r0, #2
   120b4:	ldr	sl, [r0]
   120b8:	b	12034 <__assert_fail@plt+0x474>
   120bc:	cmp	r1, #0
   120c0:	bne	12030 <__assert_fail@plt+0x470>
   120c4:	mov	r0, #0
   120c8:	mov	r1, #0
   120cc:	mov	r2, #0
   120d0:	bl	119d4 <selabel_open@plt>
   120d4:	cmp	r0, #0
   120d8:	mov	r1, r7
   120dc:	str	r0, [sp, #16]
   120e0:	bne	12030 <__assert_fail@plt+0x470>
   120e4:	bl	11a04 <__errno_location@plt>
   120e8:	ldr	r0, [r0]
   120ec:	movw	r1, #51491	; 0xc923
   120f0:	mov	r2, #5
   120f4:	movt	r1, #1
   120f8:	str	r0, [sp, #20]
   120fc:	mov	r0, #0
   12100:	str	r0, [sp, #16]
   12104:	mov	r0, #0
   12108:	bl	11860 <dcgettext@plt>
   1210c:	ldr	r1, [sp, #20]
   12110:	mov	r2, r0
   12114:	mov	r0, #0
   12118:	bl	11920 <error@plt>
   1211c:	mov	r1, r7
   12120:	b	12030 <__assert_fail@plt+0x470>
   12124:	cmn	r0, #1
   12128:	bne	12460 <__assert_fail@plt+0x8a0>
   1212c:	cmp	sl, #0
   12130:	beq	12198 <__assert_fail@plt+0x5d8>
   12134:	mov	r0, sl
   12138:	bl	17704 <lchmod@@Base+0x14c>
   1213c:	cmp	r0, #0
   12140:	beq	125d4 <__assert_fail@plt+0xa14>
   12144:	mov	r5, r0
   12148:	mov	r0, #0
   1214c:	mov	r9, r7
   12150:	mov	r8, #0
   12154:	bl	11b18 <umask@plt>
   12158:	mov	r7, r0
   1215c:	bl	11b18 <umask@plt>
   12160:	movw	r0, #438	; 0x1b6
   12164:	mov	r1, #0
   12168:	mov	r2, r7
   1216c:	mov	r3, r5
   12170:	str	r8, [sp]
   12174:	bl	17bc4 <lchmod@@Base+0x60c>
   12178:	mov	r8, r0
   1217c:	mov	r0, r5
   12180:	bl	137a0 <__assert_fail@plt+0x1be0>
   12184:	cmp	r8, #512	; 0x200
   12188:	bcc	121a0 <__assert_fail@plt+0x5e0>
   1218c:	movw	r1, #51635	; 0xc9b3
   12190:	movt	r1, #1
   12194:	b	125dc <__assert_fail@plt+0xa1c>
   12198:	mov	r9, r7
   1219c:	movw	r8, #438	; 0x1b6
   121a0:	movw	r0, #57816	; 0xe1d8
   121a4:	movt	r0, #2
   121a8:	ldr	r7, [r0]
   121ac:	cmp	r7, r6
   121b0:	bge	121d8 <__assert_fail@plt+0x618>
   121b4:	add	r1, r7, #1
   121b8:	mov	r5, #4
   121bc:	mov	r0, #0
   121c0:	cmp	r1, r6
   121c4:	bge	121e0 <__assert_fail@plt+0x620>
   121c8:	ldr	r1, [r4, r1, lsl #2]
   121cc:	ldrb	r1, [r1]
   121d0:	cmp	r1, #112	; 0x70
   121d4:	bne	121e0 <__assert_fail@plt+0x620>
   121d8:	mov	r5, #2
   121dc:	mov	r0, #1
   121e0:	sub	r1, r6, r7
   121e4:	cmp	r1, r5
   121e8:	bcc	12504 <__assert_fail@plt+0x944>
   121ec:	cmp	r5, r1
   121f0:	bcc	12554 <__assert_fail@plt+0x994>
   121f4:	movw	r6, #57816	; 0xe1d8
   121f8:	cmp	r9, #0
   121fc:	movt	r6, #2
   12200:	beq	12218 <__assert_fail@plt+0x658>
   12204:	mov	r0, r9
   12208:	bl	119f8 <setfscreatecon@plt>
   1220c:	cmp	r0, #0
   12210:	bmi	125f8 <__assert_fail@plt+0xa38>
   12214:	ldr	r7, [r6]
   12218:	add	r1, r4, r7, lsl #2
   1221c:	ldr	r2, [r1, #4]
   12220:	ldrb	r2, [r2]
   12224:	sub	r2, r2, #98	; 0x62
   12228:	cmp	r2, #19
   1222c:	bhi	124c0 <__assert_fail@plt+0x900>
   12230:	add	r3, pc, #4
   12234:	mov	r5, #24576	; 0x6000
   12238:	ldr	pc, [r3, r2, lsl #2]
   1223c:	muleq	r1, r0, r2
   12240:	andeq	r2, r1, ip, lsl #5
   12244:	andeq	r2, r1, r0, asr #9
   12248:	andeq	r2, r1, r0, asr #9
   1224c:	andeq	r2, r1, r0, asr #9
   12250:	andeq	r2, r1, r0, asr #9
   12254:	andeq	r2, r1, r0, asr #9
   12258:	andeq	r2, r1, r0, asr #9
   1225c:	andeq	r2, r1, r0, asr #9
   12260:	andeq	r2, r1, r0, asr #9
   12264:	andeq	r2, r1, r0, asr #9
   12268:	andeq	r2, r1, r0, asr #9
   1226c:	andeq	r2, r1, r0, asr #9
   12270:	andeq	r2, r1, r0, asr #9
   12274:	andeq	r2, r1, r4, ror #6
   12278:	andeq	r2, r1, r0, asr #9
   1227c:	andeq	r2, r1, r0, asr #9
   12280:	andeq	r2, r1, r0, asr #9
   12284:	andeq	r2, r1, r0, asr #9
   12288:	andeq	r2, r1, ip, lsl #5
   1228c:	mov	r5, #8192	; 0x2000
   12290:	str	r4, [sp, #20]
   12294:	ldr	r4, [r1, #8]
   12298:	movw	r7, #52411	; 0xccbb
   1229c:	ldr	r6, [r1, #12]
   122a0:	add	r3, sp, #32
   122a4:	mov	r1, #0
   122a8:	mov	r2, #0
   122ac:	movt	r7, #1
   122b0:	str	r7, [sp]
   122b4:	mov	r0, r4
   122b8:	bl	1ad34 <lchmod@@Base+0x377c>
   122bc:	cmp	r0, #0
   122c0:	ldreq	r0, [sp, #36]	; 0x24
   122c4:	cmpeq	r0, #0
   122c8:	beq	12300 <__assert_fail@plt+0x740>
   122cc:	movw	r1, #51891	; 0xcab3
   122d0:	mov	r0, #0
   122d4:	mov	r2, #5
   122d8:	movt	r1, #1
   122dc:	bl	11860 <dcgettext@plt>
   122e0:	mov	r5, r0
   122e4:	mov	r0, r4
   122e8:	bl	19d28 <lchmod@@Base+0x2770>
   122ec:	mov	r3, r0
   122f0:	mov	r0, #1
   122f4:	mov	r1, #0
   122f8:	mov	r2, r5
   122fc:	bl	11920 <error@plt>
   12300:	add	r3, sp, #24
   12304:	mov	r0, r6
   12308:	mov	r1, #0
   1230c:	mov	r2, #0
   12310:	str	r4, [sp, #12]
   12314:	str	r7, [sp]
   12318:	str	r6, [sp, #8]
   1231c:	bl	1ad34 <lchmod@@Base+0x377c>
   12320:	cmp	r0, #0
   12324:	ldreq	r0, [sp, #28]
   12328:	cmpeq	r0, #0
   1232c:	beq	123a0 <__assert_fail@plt+0x7e0>
   12330:	movw	r1, #51922	; 0xcad2
   12334:	mov	r0, #0
   12338:	mov	r2, #5
   1233c:	movt	r1, #1
   12340:	bl	11860 <dcgettext@plt>
   12344:	mov	r4, r0
   12348:	ldr	r0, [sp, #8]
   1234c:	bl	19d28 <lchmod@@Base+0x2770>
   12350:	mov	r3, r0
   12354:	mov	r0, #1
   12358:	mov	r1, #0
   1235c:	mov	r2, r4
   12360:	bl	11920 <error@plt>
   12364:	ldr	r0, [sp, #16]
   12368:	cmp	r0, #0
   1236c:	beq	12380 <__assert_fail@plt+0x7c0>
   12370:	ldr	r1, [r4, r7, lsl #2]
   12374:	mov	r2, #4096	; 0x1000
   12378:	bl	12778 <__assert_fail@plt+0xbb8>
   1237c:	ldr	r7, [r6]
   12380:	ldr	r0, [r4, r7, lsl #2]
   12384:	mov	r1, r8
   12388:	bl	11b84 <mkfifo@plt>
   1238c:	cmp	r0, #0
   12390:	bne	12700 <__assert_fail@plt+0xb40>
   12394:	cmp	sl, #0
   12398:	bne	1243c <__assert_fail@plt+0x87c>
   1239c:	b	12454 <__assert_fail@plt+0x894>
   123a0:	ldr	r0, [sp, #24]
   123a4:	movw	r1, #0
   123a8:	movw	r3, #65280	; 0xff00
   123ac:	movt	r1, #65520	; 0xfff0
   123b0:	movt	r3, #15
   123b4:	and	r1, r1, r0, lsl #12
   123b8:	uxtb	r2, r0
   123bc:	orr	r1, r1, r2
   123c0:	ldr	r2, [sp, #32]
   123c4:	and	r3, r3, r2, lsl #8
   123c8:	bfc	r2, #0, #12
   123cc:	orr	r9, r2, r0, lsr #20
   123d0:	orr	r7, r1, r3
   123d4:	and	r0, r7, r9
   123d8:	cmn	r0, #1
   123dc:	beq	12710 <__assert_fail@plt+0xb50>
   123e0:	ldr	r0, [sp, #16]
   123e4:	ldr	r4, [sp, #20]
   123e8:	movw	r6, #57816	; 0xe1d8
   123ec:	movt	r6, #2
   123f0:	cmp	r0, #0
   123f4:	beq	12408 <__assert_fail@plt+0x848>
   123f8:	ldr	r1, [r6]
   123fc:	mov	r2, r5
   12400:	ldr	r1, [r4, r1, lsl #2]
   12404:	bl	12778 <__assert_fail@plt+0xbb8>
   12408:	ldr	r0, [r6]
   1240c:	orr	r2, r5, r8
   12410:	add	r3, sp, #40	; 0x28
   12414:	ldr	r1, [r4, r0, lsl #2]
   12418:	mov	r0, #1
   1241c:	str	r9, [sp, #44]	; 0x2c
   12420:	str	r7, [sp, #40]	; 0x28
   12424:	bl	11b48 <__xmknod@plt>
   12428:	cmp	r0, #0
   1242c:	bne	12740 <__assert_fail@plt+0xb80>
   12430:	ldr	r4, [sp, #20]
   12434:	cmp	sl, #0
   12438:	beq	12454 <__assert_fail@plt+0x894>
   1243c:	ldr	r0, [r6]
   12440:	mov	r1, r8
   12444:	ldr	r0, [r4, r0, lsl #2]
   12448:	bl	175b8 <lchmod@@Base>
   1244c:	cmp	r0, #0
   12450:	bne	126b8 <__assert_fail@plt+0xaf8>
   12454:	mov	r0, #0
   12458:	sub	sp, fp, #28
   1245c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12460:	cmn	r0, #3
   12464:	bne	124b0 <__assert_fail@plt+0x8f0>
   12468:	movw	r0, #57736	; 0xe188
   1246c:	movw	r2, #51606	; 0xc996
   12470:	mov	r1, #0
   12474:	movt	r0, #2
   12478:	movt	r2, #1
   1247c:	str	r1, [sp, #4]
   12480:	movw	r1, #51457	; 0xc901
   12484:	movt	r1, #1
   12488:	ldr	r3, [r0]
   1248c:	movw	r0, #57828	; 0xe1e4
   12490:	str	r2, [sp]
   12494:	movw	r2, #51592	; 0xc988
   12498:	movt	r0, #2
   1249c:	movt	r2, #1
   124a0:	ldr	r0, [r0]
   124a4:	bl	1a504 <lchmod@@Base+0x2f4c>
   124a8:	mov	r0, #0
   124ac:	bl	119a4 <exit@plt>
   124b0:	cmn	r0, #2
   124b4:	bne	126b0 <__assert_fail@plt+0xaf0>
   124b8:	mov	r0, #0
   124bc:	bl	11cc0 <__assert_fail@plt+0x100>
   124c0:	movw	r1, #51974	; 0xcb06
   124c4:	mov	r0, #0
   124c8:	mov	r2, #5
   124cc:	movt	r1, #1
   124d0:	bl	11860 <dcgettext@plt>
   124d4:	mov	r5, r0
   124d8:	ldr	r0, [r6]
   124dc:	add	r0, r4, r0, lsl #2
   124e0:	ldr	r0, [r0, #4]
   124e4:	bl	19d28 <lchmod@@Base+0x2770>
   124e8:	mov	r3, r0
   124ec:	mov	r0, #0
   124f0:	mov	r1, #0
   124f4:	mov	r2, r5
   124f8:	bl	11920 <error@plt>
   124fc:	mov	r0, #1
   12500:	bl	11cc0 <__assert_fail@plt+0x100>
   12504:	mov	r5, r0
   12508:	cmp	r7, r6
   1250c:	bge	12634 <__assert_fail@plt+0xa74>
   12510:	movw	r1, #51695	; 0xc9ef
   12514:	mov	r0, #0
   12518:	mov	r2, #5
   1251c:	movt	r1, #1
   12520:	bl	11860 <dcgettext@plt>
   12524:	mov	r7, r0
   12528:	add	r0, r4, r6, lsl #2
   1252c:	ldr	r0, [r0, #-4]
   12530:	bl	19d28 <lchmod@@Base+0x2770>
   12534:	mov	r3, r0
   12538:	mov	r0, #0
   1253c:	mov	r1, #0
   12540:	mov	r2, r7
   12544:	bl	11920 <error@plt>
   12548:	cmp	r5, #0
   1254c:	beq	12660 <__assert_fail@plt+0xaa0>
   12550:	b	126b0 <__assert_fail@plt+0xaf0>
   12554:	movw	r1, #51774	; 0xca3e
   12558:	mov	r7, r0
   1255c:	mov	r0, #0
   12560:	mov	r2, #5
   12564:	movt	r1, #1
   12568:	bl	11860 <dcgettext@plt>
   1256c:	mov	r1, r4
   12570:	mov	r4, r0
   12574:	movw	r0, #57816	; 0xe1d8
   12578:	movt	r0, #2
   1257c:	ldr	r0, [r0]
   12580:	add	r0, r0, r5
   12584:	ldr	r0, [r1, r0, lsl #2]
   12588:	bl	19d28 <lchmod@@Base+0x2770>
   1258c:	mov	r3, r0
   12590:	mov	r0, #0
   12594:	mov	r1, #0
   12598:	mov	r2, r4
   1259c:	bl	11920 <error@plt>
   125a0:	cmp	r7, #0
   125a4:	beq	126b0 <__assert_fail@plt+0xaf0>
   125a8:	movw	r0, #57816	; 0xe1d8
   125ac:	movt	r0, #2
   125b0:	ldr	r0, [r0]
   125b4:	sub	r0, r6, r0
   125b8:	cmp	r0, #4
   125bc:	bne	126b0 <__assert_fail@plt+0xaf0>
   125c0:	movw	r0, #57824	; 0xe1e0
   125c4:	movw	r1, #51791	; 0xca4f
   125c8:	movt	r0, #2
   125cc:	movt	r1, #1
   125d0:	b	12688 <__assert_fail@plt+0xac8>
   125d4:	movw	r1, #51622	; 0xc9a6
   125d8:	movt	r1, #1
   125dc:	mov	r0, #0
   125e0:	mov	r2, #5
   125e4:	bl	11860 <dcgettext@plt>
   125e8:	mov	r2, r0
   125ec:	mov	r0, #1
   125f0:	mov	r1, #0
   125f4:	bl	11920 <error@plt>
   125f8:	bl	11a04 <__errno_location@plt>
   125fc:	movw	r1, #51841	; 0xca81
   12600:	ldr	r4, [r0]
   12604:	mov	r0, #0
   12608:	mov	r2, #5
   1260c:	movt	r1, #1
   12610:	bl	11860 <dcgettext@plt>
   12614:	mov	r6, r0
   12618:	mov	r0, r9
   1261c:	bl	19d28 <lchmod@@Base+0x2770>
   12620:	mov	r3, r0
   12624:	mov	r0, #1
   12628:	mov	r1, r4
   1262c:	mov	r2, r6
   12630:	bl	11920 <error@plt>
   12634:	movw	r1, #51679	; 0xc9df
   12638:	mov	r0, #0
   1263c:	mov	r2, #5
   12640:	movt	r1, #1
   12644:	bl	11860 <dcgettext@plt>
   12648:	mov	r2, r0
   1264c:	mov	r0, #0
   12650:	mov	r1, #0
   12654:	bl	11920 <error@plt>
   12658:	cmp	r5, #0
   1265c:	bne	126b0 <__assert_fail@plt+0xaf0>
   12660:	movw	r0, #57816	; 0xe1d8
   12664:	movt	r0, #2
   12668:	ldr	r0, [r0]
   1266c:	sub	r0, r6, r0
   12670:	cmp	r0, #2
   12674:	bne	126b0 <__assert_fail@plt+0xaf0>
   12678:	movw	r0, #57824	; 0xe1e0
   1267c:	movw	r1, #51720	; 0xca08
   12680:	movt	r0, #2
   12684:	movt	r1, #1
   12688:	ldr	r4, [r0]
   1268c:	mov	r0, #0
   12690:	mov	r2, #5
   12694:	bl	11860 <dcgettext@plt>
   12698:	movw	r2, #53074	; 0xcf52
   1269c:	mov	r3, r0
   126a0:	mov	r0, r4
   126a4:	mov	r1, #1
   126a8:	movt	r2, #1
   126ac:	bl	11a4c <__fprintf_chk@plt>
   126b0:	mov	r0, #1
   126b4:	bl	11cc0 <__assert_fail@plt+0x100>
   126b8:	bl	11a04 <__errno_location@plt>
   126bc:	movw	r1, #51997	; 0xcb1d
   126c0:	ldr	r5, [r0]
   126c4:	mov	r0, #0
   126c8:	mov	r2, #5
   126cc:	movt	r1, #1
   126d0:	bl	11860 <dcgettext@plt>
   126d4:	mov	r1, r6
   126d8:	mov	r6, r0
   126dc:	ldr	r0, [r1]
   126e0:	ldr	r1, [r4, r0, lsl #2]
   126e4:	mov	r0, #4
   126e8:	bl	19800 <lchmod@@Base+0x2248>
   126ec:	mov	r3, r0
   126f0:	mov	r0, #1
   126f4:	mov	r1, r5
   126f8:	mov	r2, r6
   126fc:	bl	11920 <error@plt>
   12700:	bl	11a04 <__errno_location@plt>
   12704:	ldr	r1, [r6]
   12708:	ldr	r2, [r4, r1, lsl #2]
   1270c:	b	12750 <__assert_fail@plt+0xb90>
   12710:	movw	r1, #51953	; 0xcaf1
   12714:	mov	r0, #0
   12718:	mov	r2, #5
   1271c:	movt	r1, #1
   12720:	bl	11860 <dcgettext@plt>
   12724:	mov	r2, r0
   12728:	ldr	r0, [sp, #8]
   1272c:	ldr	r3, [sp, #12]
   12730:	mov	r1, #0
   12734:	str	r0, [sp]
   12738:	mov	r0, #1
   1273c:	bl	11920 <error@plt>
   12740:	bl	11a04 <__errno_location@plt>
   12744:	ldr	r1, [r6]
   12748:	ldr	r2, [sp, #20]
   1274c:	ldr	r2, [r2, r1, lsl #2]
   12750:	ldr	r4, [r0]
   12754:	mov	r0, #0
   12758:	mov	r1, #3
   1275c:	bl	19a7c <lchmod@@Base+0x24c4>
   12760:	movw	r2, #52599	; 0xcd77
   12764:	mov	r3, r0
   12768:	mov	r0, #1
   1276c:	mov	r1, r4
   12770:	movt	r2, #1
   12774:	bl	11920 <error@plt>
   12778:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1277c:	add	fp, sp, #24
   12780:	sub	sp, sp, #16
   12784:	mov	r4, #0
   12788:	mov	r7, r0
   1278c:	mov	r5, r2
   12790:	mov	r6, r1
   12794:	str	r4, [sp, #4]
   12798:	str	r4, [sp]
   1279c:	ldrb	r0, [r1]
   127a0:	cmp	r0, #47	; 0x2f
   127a4:	beq	127c4 <__assert_fail@plt+0xc04>
   127a8:	mov	r0, r6
   127ac:	mov	r1, #2
   127b0:	bl	12d08 <__assert_fail@plt+0x1148>
   127b4:	mov	r4, r0
   127b8:	cmp	r0, #0
   127bc:	mov	r6, r0
   127c0:	beq	12918 <__assert_fail@plt+0xd58>
   127c4:	add	r1, sp, #4
   127c8:	mov	r0, r7
   127cc:	mov	r2, r6
   127d0:	mov	r3, r5
   127d4:	bl	11794 <selabel_lookup@plt>
   127d8:	cmn	r0, #1
   127dc:	ble	128f0 <__assert_fail@plt+0xd30>
   127e0:	mov	r0, #0
   127e4:	str	r0, [sp, #12]
   127e8:	str	r0, [sp, #8]
   127ec:	mov	r0, r6
   127f0:	bl	135e0 <__assert_fail@plt+0x1a20>
   127f4:	mov	r6, r0
   127f8:	add	r0, sp, #12
   127fc:	bl	118fc <getcon@plt>
   12800:	mov	r9, #1
   12804:	cmp	r0, #0
   12808:	bmi	12848 <__assert_fail@plt+0xc88>
   1280c:	add	r1, sp, #8
   12810:	mov	r0, r6
   12814:	bl	19ed4 <lchmod@@Base+0x291c>
   12818:	cmp	r0, #0
   1281c:	bmi	12848 <__assert_fail@plt+0xc88>
   12820:	mov	r0, r5
   12824:	bl	11b90 <mode_to_security_class@plt>
   12828:	cmp	r0, #0
   1282c:	beq	12848 <__assert_fail@plt+0xc88>
   12830:	mov	r2, r0
   12834:	ldr	r1, [sp, #8]
   12838:	ldr	r0, [sp, #12]
   1283c:	mov	r3, sp
   12840:	bl	11ac4 <security_compute_create@plt>
   12844:	lsr	r9, r0, #31
   12848:	bl	11a04 <__errno_location@plt>
   1284c:	ldr	r7, [r0]
   12850:	mov	r5, r0
   12854:	mov	r0, r6
   12858:	bl	137a0 <__assert_fail@plt+0x1be0>
   1285c:	ldr	r0, [sp, #12]
   12860:	bl	11af4 <freecon@plt>
   12864:	ldr	r0, [sp, #8]
   12868:	bl	11af4 <freecon@plt>
   1286c:	mvn	r8, #0
   12870:	cmp	r9, #0
   12874:	str	r7, [r5]
   12878:	bne	128e4 <__assert_fail@plt+0xd24>
   1287c:	ldr	r0, [sp, #4]
   12880:	bl	11854 <context_new@plt>
   12884:	cmp	r0, #0
   12888:	beq	128e4 <__assert_fail@plt+0xd24>
   1288c:	mov	r6, r0
   12890:	ldr	r0, [sp]
   12894:	bl	11854 <context_new@plt>
   12898:	cmp	r0, #0
   1289c:	beq	12934 <__assert_fail@plt+0xd74>
   128a0:	mov	r9, r0
   128a4:	mov	r0, r6
   128a8:	bl	117dc <context_type_get@plt>
   128ac:	cmp	r0, #0
   128b0:	beq	12938 <__assert_fail@plt+0xd78>
   128b4:	mov	r1, r0
   128b8:	mov	r0, r9
   128bc:	bl	1186c <context_type_set@plt>
   128c0:	cmp	r0, #0
   128c4:	bne	12938 <__assert_fail@plt+0xd78>
   128c8:	mov	r0, r9
   128cc:	bl	11b24 <context_str@plt>
   128d0:	cmp	r0, #0
   128d4:	beq	12938 <__assert_fail@plt+0xd78>
   128d8:	bl	119f8 <setfscreatecon@plt>
   128dc:	mov	r8, r0
   128e0:	b	12938 <__assert_fail@plt+0xd78>
   128e4:	mov	r9, #0
   128e8:	mov	r6, #0
   128ec:	b	12938 <__assert_fail@plt+0xd78>
   128f0:	bl	11a04 <__errno_location@plt>
   128f4:	mov	r5, r0
   128f8:	ldr	r0, [r0]
   128fc:	mvn	r8, #0
   12900:	mov	r9, #0
   12904:	mov	r6, #0
   12908:	cmp	r0, #2
   1290c:	moveq	r0, #61	; 0x3d
   12910:	streq	r0, [r5]
   12914:	b	12938 <__assert_fail@plt+0xd78>
   12918:	mov	r9, #0
   1291c:	mvn	r8, #0
   12920:	bl	11a04 <__errno_location@plt>
   12924:	mov	r5, r0
   12928:	mov	r6, #0
   1292c:	mov	r4, #0
   12930:	b	12938 <__assert_fail@plt+0xd78>
   12934:	mov	r9, #0
   12938:	ldr	r7, [r5]
   1293c:	mov	r0, r6
   12940:	bl	11974 <context_free@plt>
   12944:	mov	r0, r9
   12948:	bl	11974 <context_free@plt>
   1294c:	ldr	r0, [sp, #4]
   12950:	bl	11af4 <freecon@plt>
   12954:	ldr	r0, [sp]
   12958:	bl	11af4 <freecon@plt>
   1295c:	mov	r0, r4
   12960:	bl	137a0 <__assert_fail@plt+0x1be0>
   12964:	str	r7, [r5]
   12968:	mov	r0, r8
   1296c:	sub	sp, fp, #24
   12970:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12974:	push	{r4, r5, r6, r7, fp, lr}
   12978:	add	fp, sp, #16
   1297c:	sub	sp, sp, #8
   12980:	mov	r5, r0
   12984:	ldrb	r0, [r1]
   12988:	mov	r6, r2
   1298c:	mov	r4, #0
   12990:	cmp	r0, #47	; 0x2f
   12994:	beq	129b4 <__assert_fail@plt+0xdf4>
   12998:	mov	r0, r1
   1299c:	mov	r1, #2
   129a0:	bl	12d08 <__assert_fail@plt+0x1148>
   129a4:	mov	r4, r0
   129a8:	cmp	r0, #0
   129ac:	mov	r1, r0
   129b0:	beq	12a90 <__assert_fail@plt+0xed0>
   129b4:	cmp	r6, #0
   129b8:	beq	12a1c <__assert_fail@plt+0xe5c>
   129bc:	mov	r7, #0
   129c0:	stm	sp, {r1, r7}
   129c4:	mov	r0, sp
   129c8:	mov	r1, #16
   129cc:	mov	r2, #0
   129d0:	bl	1acb8 <lchmod@@Base+0x3700>
   129d4:	mov	r6, r0
   129d8:	bl	14308 <__assert_fail@plt+0x2748>
   129dc:	cmp	r0, #0
   129e0:	beq	12a54 <__assert_fail@plt+0xe94>
   129e4:	mov	r7, #0
   129e8:	b	129fc <__assert_fail@plt+0xe3c>
   129ec:	mov	r0, r6
   129f0:	bl	14308 <__assert_fail@plt+0x2748>
   129f4:	cmp	r0, #0
   129f8:	beq	12a54 <__assert_fail@plt+0xe94>
   129fc:	ldr	r1, [r6, #24]
   12a00:	mov	r0, r5
   12a04:	bl	12a9c <__assert_fail@plt+0xedc>
   12a08:	cmn	r0, #1
   12a0c:	bgt	129ec <__assert_fail@plt+0xe2c>
   12a10:	bl	11a04 <__errno_location@plt>
   12a14:	ldr	r7, [r0]
   12a18:	b	129ec <__assert_fail@plt+0xe2c>
   12a1c:	mov	r0, r5
   12a20:	bl	12a9c <__assert_fail@plt+0xedc>
   12a24:	mov	r5, r0
   12a28:	bl	11a04 <__errno_location@plt>
   12a2c:	ldr	r7, [r0]
   12a30:	mov	r6, r0
   12a34:	mov	r0, r4
   12a38:	bl	137a0 <__assert_fail@plt+0x1be0>
   12a3c:	mvn	r0, #0
   12a40:	str	r7, [r6]
   12a44:	subs	r0, r5, r0
   12a48:	movwne	r0, #1
   12a4c:	sub	sp, fp, #16
   12a50:	pop	{r4, r5, r6, r7, fp, pc}
   12a54:	bl	11a04 <__errno_location@plt>
   12a58:	mov	r5, r0
   12a5c:	ldr	r0, [r0]
   12a60:	cmp	r0, #0
   12a64:	movne	r7, r0
   12a68:	mov	r0, r6
   12a6c:	bl	14140 <__assert_fail@plt+0x2580>
   12a70:	cmp	r0, #0
   12a74:	mov	r0, r4
   12a78:	ldrne	r7, [r5]
   12a7c:	bl	137a0 <__assert_fail@plt+0x1be0>
   12a80:	clz	r0, r7
   12a84:	lsr	r0, r0, #5
   12a88:	sub	sp, fp, #16
   12a8c:	pop	{r4, r5, r6, r7, fp, pc}
   12a90:	mov	r0, #0
   12a94:	sub	sp, fp, #16
   12a98:	pop	{r4, r5, r6, r7, fp, pc}
   12a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12aa0:	add	fp, sp, #28
   12aa4:	sub	sp, sp, #116	; 0x74
   12aa8:	mov	r6, r0
   12aac:	mov	r0, #0
   12ab0:	mov	r7, r1
   12ab4:	cmp	r6, #0
   12ab8:	str	r0, [sp, #4]
   12abc:	str	r0, [sp]
   12ac0:	beq	12b14 <__assert_fail@plt+0xf54>
   12ac4:	mov	r0, r7
   12ac8:	mov	r1, #32768	; 0x8000
   12acc:	bl	1192c <open64@plt>
   12ad0:	mov	sl, r0
   12ad4:	cmn	r0, #1
   12ad8:	beq	12b50 <__assert_fail@plt+0xf90>
   12adc:	add	r2, sp, #8
   12ae0:	mov	r0, #3
   12ae4:	mov	r1, sl
   12ae8:	bl	118c0 <__fxstat64@plt>
   12aec:	mov	r5, #1
   12af0:	cmn	r0, #1
   12af4:	bgt	12b88 <__assert_fail@plt+0xfc8>
   12af8:	bl	11a04 <__errno_location@plt>
   12afc:	ldr	r5, [r0]
   12b00:	mov	r4, r0
   12b04:	mov	r8, #0
   12b08:	mvn	r9, #0
   12b0c:	mov	r6, #0
   12b10:	b	12cb0 <__assert_fail@plt+0x10f0>
   12b14:	mov	r0, sp
   12b18:	bl	11b0c <getfscreatecon@plt>
   12b1c:	mvn	r9, #0
   12b20:	cmp	r0, #0
   12b24:	bmi	12c70 <__assert_fail@plt+0x10b0>
   12b28:	ldr	r1, [sp]
   12b2c:	cmp	r1, #0
   12b30:	beq	12c64 <__assert_fail@plt+0x10a4>
   12b34:	mov	r0, r7
   12b38:	bl	117f4 <lsetfilecon@plt>
   12b3c:	mov	r9, r0
   12b40:	bl	11a04 <__errno_location@plt>
   12b44:	ldr	r5, [r0]
   12b48:	mov	r4, r0
   12b4c:	b	12cd0 <__assert_fail@plt+0x1110>
   12b50:	bl	11a04 <__errno_location@plt>
   12b54:	ldr	r5, [r0]
   12b58:	mov	r4, r0
   12b5c:	mov	r8, #0
   12b60:	mvn	r9, #0
   12b64:	cmp	r5, #40	; 0x28
   12b68:	bne	12c5c <__assert_fail@plt+0x109c>
   12b6c:	add	r2, sp, #8
   12b70:	mov	r0, #3
   12b74:	mov	r1, r7
   12b78:	bl	11b78 <__lxstat64@plt>
   12b7c:	mov	r5, #0
   12b80:	cmn	r0, #1
   12b84:	ble	12ce8 <__assert_fail@plt+0x1128>
   12b88:	ldr	r3, [sp, #24]
   12b8c:	add	r1, sp, #4
   12b90:	mov	r0, r6
   12b94:	mov	r2, r7
   12b98:	bl	11794 <selabel_lookup@plt>
   12b9c:	cmn	r0, #1
   12ba0:	ble	12c38 <__assert_fail@plt+0x1078>
   12ba4:	ldr	r0, [sp, #4]
   12ba8:	bl	11854 <context_new@plt>
   12bac:	mvn	r9, #0
   12bb0:	cmp	r0, #0
   12bb4:	beq	12c7c <__assert_fail@plt+0x10bc>
   12bb8:	mov	r8, r0
   12bbc:	mov	r1, sp
   12bc0:	cmp	r5, #0
   12bc4:	beq	12c88 <__assert_fail@plt+0x10c8>
   12bc8:	mov	r0, sl
   12bcc:	bl	19fbc <lchmod@@Base+0x2a04>
   12bd0:	cmp	r0, #0
   12bd4:	bmi	12c98 <__assert_fail@plt+0x10d8>
   12bd8:	ldr	r0, [sp]
   12bdc:	bl	11854 <context_new@plt>
   12be0:	cmp	r0, #0
   12be4:	beq	12c98 <__assert_fail@plt+0x10d8>
   12be8:	mov	r6, r0
   12bec:	mov	r0, r8
   12bf0:	bl	117dc <context_type_get@plt>
   12bf4:	cmp	r0, #0
   12bf8:	beq	12c9c <__assert_fail@plt+0x10dc>
   12bfc:	mov	r1, r0
   12c00:	mov	r0, r6
   12c04:	bl	1186c <context_type_set@plt>
   12c08:	cmp	r0, #0
   12c0c:	bne	12c9c <__assert_fail@plt+0x10dc>
   12c10:	mov	r0, r6
   12c14:	bl	11b24 <context_str@plt>
   12c18:	cmp	r0, #0
   12c1c:	beq	12c9c <__assert_fail@plt+0x10dc>
   12c20:	mov	r1, r0
   12c24:	cmp	r5, #0
   12c28:	beq	12cf8 <__assert_fail@plt+0x1138>
   12c2c:	mov	r0, sl
   12c30:	bl	11a88 <fsetfilecon@plt>
   12c34:	b	12d00 <__assert_fail@plt+0x1140>
   12c38:	bl	11a04 <__errno_location@plt>
   12c3c:	ldr	r1, [r0]
   12c40:	mvn	r9, #0
   12c44:	mov	r6, #0
   12c48:	mov	r8, #0
   12c4c:	cmp	r1, #2
   12c50:	moveq	r1, #61	; 0x3d
   12c54:	streq	r1, [r0]
   12c58:	b	12c9c <__assert_fail@plt+0x10dc>
   12c5c:	mov	r6, #0
   12c60:	b	12cb8 <__assert_fail@plt+0x10f8>
   12c64:	bl	11a04 <__errno_location@plt>
   12c68:	mov	r1, #61	; 0x3d
   12c6c:	str	r1, [r0]
   12c70:	mov	r0, r9
   12c74:	sub	sp, fp, #28
   12c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c7c:	mov	r6, #0
   12c80:	mov	r8, #0
   12c84:	b	12c9c <__assert_fail@plt+0x10dc>
   12c88:	mov	r0, r7
   12c8c:	bl	19f48 <lchmod@@Base+0x2990>
   12c90:	cmp	r0, #0
   12c94:	bpl	12bd8 <__assert_fail@plt+0x1018>
   12c98:	mov	r6, #0
   12c9c:	bl	11a04 <__errno_location@plt>
   12ca0:	ldr	r5, [r0]
   12ca4:	mov	r4, r0
   12ca8:	cmn	sl, #1
   12cac:	beq	12cb8 <__assert_fail@plt+0x10f8>
   12cb0:	mov	r0, sl
   12cb4:	bl	11b6c <close@plt>
   12cb8:	mov	r0, r8
   12cbc:	bl	11974 <context_free@plt>
   12cc0:	mov	r0, r6
   12cc4:	bl	11974 <context_free@plt>
   12cc8:	ldr	r0, [sp, #4]
   12ccc:	bl	11af4 <freecon@plt>
   12cd0:	ldr	r0, [sp]
   12cd4:	bl	11af4 <freecon@plt>
   12cd8:	str	r5, [r4]
   12cdc:	mov	r0, r9
   12ce0:	sub	sp, fp, #28
   12ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ce8:	ldr	r5, [r4]
   12cec:	mov	r8, #0
   12cf0:	mov	r6, #0
   12cf4:	b	12cb8 <__assert_fail@plt+0x10f8>
   12cf8:	mov	r0, r7
   12cfc:	bl	117f4 <lsetfilecon@plt>
   12d00:	mov	r9, r0
   12d04:	b	12c9c <__assert_fail@plt+0x10dc>
   12d08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d0c:	add	fp, sp, #28
   12d10:	sub	sp, sp, #180	; 0xb4
   12d14:	sub	sp, sp, #3072	; 0xc00
   12d18:	and	r7, r1, #3
   12d1c:	mov	r8, r0
   12d20:	sub	r0, r7, #1
   12d24:	tst	r7, r0
   12d28:	bne	12df4 <__assert_fail@plt+0x1234>
   12d2c:	cmp	r8, #0
   12d30:	beq	12df4 <__assert_fail@plt+0x1234>
   12d34:	ldrb	r0, [r8]
   12d38:	cmp	r0, #0
   12d3c:	beq	13370 <__assert_fail@plt+0x17b0>
   12d40:	mov	r4, r1
   12d44:	mov	r1, #1024	; 0x400
   12d48:	sub	lr, fp, #1024	; 0x400
   12d4c:	cmp	r0, #47	; 0x2f
   12d50:	str	r1, [fp, #-1060]	; 0xfffffbdc
   12d54:	str	r1, [sp, #52]	; 0x34
   12d58:	str	r1, [sp, #1188]	; 0x4a4
   12d5c:	add	r1, sp, #1184	; 0x4a0
   12d60:	sub	r2, lr, #40	; 0x28
   12d64:	add	r1, r1, #8
   12d68:	add	r2, r2, #8
   12d6c:	str	r1, [sp, #16]
   12d70:	str	r1, [sp, #1184]	; 0x4a0
   12d74:	add	r1, sp, #48	; 0x30
   12d78:	str	r2, [sp, #12]
   12d7c:	str	r2, [fp, #-1064]	; 0xfffffbd8
   12d80:	add	r5, r1, #8
   12d84:	mov	r0, r5
   12d88:	str	r5, [sp, #48]	; 0x30
   12d8c:	str	r5, [sp, #8]
   12d90:	bne	1337c <__assert_fail@plt+0x17bc>
   12d94:	mov	r1, r8
   12d98:	mov	r2, #0
   12d9c:	mov	r3, #1024	; 0x400
   12da0:	bl	11bb4 <__mempcpy_chk@plt>
   12da4:	mov	r6, r0
   12da8:	mov	r0, #47	; 0x2f
   12dac:	strb	r0, [r6], #1
   12db0:	ldrb	r0, [r8]
   12db4:	cmp	r0, #0
   12db8:	beq	133a8 <__assert_fail@plt+0x17e8>
   12dbc:	and	r1, r4, #4
   12dc0:	add	r9, sp, #48	; 0x30
   12dc4:	str	r7, [sp, #32]
   12dc8:	str	r1, [sp, #40]	; 0x28
   12dcc:	mov	r1, #0
   12dd0:	str	r1, [sp, #24]
   12dd4:	mov	r1, #0
   12dd8:	str	r1, [sp, #36]	; 0x24
   12ddc:	mov	r1, #0
   12de0:	str	r1, [sp, #20]
   12de4:	uxtb	r1, r0
   12de8:	cmp	r1, #47	; 0x2f
   12dec:	beq	12e2c <__assert_fail@plt+0x126c>
   12df0:	b	12e38 <__assert_fail@plt+0x1278>
   12df4:	bl	11a04 <__errno_location@plt>
   12df8:	mov	r1, #22
   12dfc:	mov	r4, #0
   12e00:	str	r1, [r0]
   12e04:	mov	r0, r4
   12e08:	sub	sp, fp, #28
   12e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e10:	mov	r8, sl
   12e14:	ldrb	r0, [r8]
   12e18:	cmp	r0, #0
   12e1c:	beq	133b0 <__assert_fail@plt+0x17f0>
   12e20:	uxtb	r1, r0
   12e24:	cmp	r1, #47	; 0x2f
   12e28:	bne	12e38 <__assert_fail@plt+0x1278>
   12e2c:	ldrb	r0, [r8, #1]!
   12e30:	cmp	r0, #47	; 0x2f
   12e34:	beq	12e2c <__assert_fail@plt+0x126c>
   12e38:	mov	r1, r0
   12e3c:	mov	sl, r8
   12e40:	b	12e48 <__assert_fail@plt+0x1288>
   12e44:	ldrb	r1, [sl, #1]!
   12e48:	uxtb	r1, r1
   12e4c:	cmp	r1, #0
   12e50:	cmpne	r1, #47	; 0x2f
   12e54:	bne	12e44 <__assert_fail@plt+0x1284>
   12e58:	sub	r2, sl, r8
   12e5c:	cmp	r2, #1
   12e60:	beq	12e78 <__assert_fail@plt+0x12b8>
   12e64:	cmp	r2, #2
   12e68:	beq	12e98 <__assert_fail@plt+0x12d8>
   12e6c:	cmp	r2, #0
   12e70:	bne	12ef0 <__assert_fail@plt+0x1330>
   12e74:	b	133b0 <__assert_fail@plt+0x17f0>
   12e78:	uxtb	r0, r0
   12e7c:	cmp	r0, #46	; 0x2e
   12e80:	bne	12ef0 <__assert_fail@plt+0x1330>
   12e84:	mov	r8, sl
   12e88:	ldrb	r0, [r8]
   12e8c:	cmp	r0, #0
   12e90:	bne	12e20 <__assert_fail@plt+0x1260>
   12e94:	b	133b0 <__assert_fail@plt+0x17f0>
   12e98:	uxtb	r0, r0
   12e9c:	cmp	r0, #46	; 0x2e
   12ea0:	bne	12ef0 <__assert_fail@plt+0x1330>
   12ea4:	ldrb	r0, [r8, #1]
   12ea8:	cmp	r0, #46	; 0x2e
   12eac:	bne	12ef0 <__assert_fail@plt+0x1330>
   12eb0:	add	r0, r5, #1
   12eb4:	cmp	r6, r0
   12eb8:	bls	131a0 <__assert_fail@plt+0x15e0>
   12ebc:	sub	r0, r6, #1
   12ec0:	mov	r6, r0
   12ec4:	cmp	r0, r5
   12ec8:	bls	13348 <__assert_fail@plt+0x1788>
   12ecc:	mov	r0, r6
   12ed0:	ldrb	r1, [r0, #-1]!
   12ed4:	cmp	r1, #47	; 0x2f
   12ed8:	bne	12ec0 <__assert_fail@plt+0x1300>
   12edc:	mov	r8, sl
   12ee0:	ldrb	r0, [r8]
   12ee4:	cmp	r0, #0
   12ee8:	bne	12e20 <__assert_fail@plt+0x1260>
   12eec:	b	133b0 <__assert_fail@plt+0x17f0>
   12ef0:	ldrb	r0, [r6, #-1]
   12ef4:	add	r4, r2, #2
   12ef8:	str	r2, [sp, #44]	; 0x2c
   12efc:	cmp	r0, #47	; 0x2f
   12f00:	movne	r0, #47	; 0x2f
   12f04:	strbne	r0, [r6], #1
   12f08:	ldr	r0, [sp, #52]	; 0x34
   12f0c:	add	r0, r5, r0
   12f10:	sub	r0, r0, r6
   12f14:	cmp	r0, r4
   12f18:	bcs	12f50 <__assert_fail@plt+0x1390>
   12f1c:	mov	r0, r9
   12f20:	bl	19e1c <lchmod@@Base+0x2864>
   12f24:	cmp	r0, #0
   12f28:	beq	134b0 <__assert_fail@plt+0x18f0>
   12f2c:	sub	r0, r6, r5
   12f30:	ldr	r5, [sp, #48]	; 0x30
   12f34:	ldr	r1, [sp, #52]	; 0x34
   12f38:	add	r6, r5, r0
   12f3c:	add	r0, r5, r1
   12f40:	sub	r0, r0, r6
   12f44:	cmp	r0, r4
   12f48:	bcc	12f1c <__assert_fail@plt+0x135c>
   12f4c:	ldr	r2, [sp, #44]	; 0x2c
   12f50:	mov	r0, r6
   12f54:	mov	r1, r8
   12f58:	mvn	r3, #0
   12f5c:	bl	11bb4 <__mempcpy_chk@plt>
   12f60:	mov	r6, r0
   12f64:	mov	r0, #0
   12f68:	strb	r0, [r6]
   12f6c:	ldr	r0, [sp, #40]	; 0x28
   12f70:	cmp	r0, #0
   12f74:	bne	12fd8 <__assert_fail@plt+0x1418>
   12f78:	ldr	r0, [sp, #1188]	; 0x4a4
   12f7c:	ldr	r7, [sp, #1184]	; 0x4a0
   12f80:	sub	r9, r0, #1
   12f84:	mov	r0, r5
   12f88:	mov	r1, r7
   12f8c:	mov	r2, r9
   12f90:	bl	118cc <readlink@plt>
   12f94:	cmp	r0, r9
   12f98:	blt	12fb0 <__assert_fail@plt+0x13f0>
   12f9c:	add	r0, sp, #1184	; 0x4a0
   12fa0:	bl	19dac <lchmod@@Base+0x27f4>
   12fa4:	cmp	r0, #0
   12fa8:	bne	12f78 <__assert_fail@plt+0x13b8>
   12fac:	b	134b0 <__assert_fail@plt+0x18f0>
   12fb0:	mov	r4, r0
   12fb4:	cmp	r0, #0
   12fb8:	add	r9, sp, #48	; 0x30
   12fbc:	bmi	12fd8 <__assert_fail@plt+0x1418>
   12fc0:	ldr	r0, [sp, #24]
   12fc4:	cmp	r0, #19
   12fc8:	bgt	13074 <__assert_fail@plt+0x14b4>
   12fcc:	add	r0, r0, #1
   12fd0:	str	r0, [sp, #24]
   12fd4:	b	13224 <__assert_fail@plt+0x1664>
   12fd8:	ldr	r7, [sp, #32]
   12fdc:	cmp	r7, #2
   12fe0:	beq	12e10 <__assert_fail@plt+0x1250>
   12fe4:	ldrb	r0, [sl]
   12fe8:	cmp	r0, #47	; 0x2f
   12fec:	bne	13154 <__assert_fail@plt+0x1594>
   12ff0:	mov	r2, sl
   12ff4:	mov	r1, r2
   12ff8:	ldrb	r3, [r2, #1]!
   12ffc:	cmp	r3, #47	; 0x2f
   13000:	beq	12ff4 <__assert_fail@plt+0x1434>
   13004:	cmp	r3, #46	; 0x2e
   13008:	bne	1314c <__assert_fail@plt+0x158c>
   1300c:	add	r2, r1, #2
   13010:	ldrb	r3, [r2]
   13014:	cmp	r3, #47	; 0x2f
   13018:	beq	12ff4 <__assert_fail@plt+0x1434>
   1301c:	cmp	r3, #0
   13020:	beq	1303c <__assert_fail@plt+0x147c>
   13024:	cmp	r3, #46	; 0x2e
   13028:	bne	13154 <__assert_fail@plt+0x1594>
   1302c:	ldrb	r1, [r1, #3]
   13030:	cmp	r1, #47	; 0x2f
   13034:	cmpne	r1, #0
   13038:	bne	13154 <__assert_fail@plt+0x1594>
   1303c:	mov	r0, #47	; 0x2f
   13040:	mov	r1, r5
   13044:	mov	r2, #0
   13048:	mov	r3, #512	; 0x200
   1304c:	strh	r0, [r6]
   13050:	mvn	r0, #99	; 0x63
   13054:	bl	11818 <faccessat@plt>
   13058:	cmp	r0, #0
   1305c:	bne	131d0 <__assert_fail@plt+0x1610>
   13060:	mov	r8, sl
   13064:	ldrb	r0, [r8]
   13068:	cmp	r0, #0
   1306c:	bne	12e20 <__assert_fail@plt+0x1260>
   13070:	b	133b0 <__assert_fail@plt+0x17f0>
   13074:	ldrb	r0, [r8]
   13078:	add	lr, sp, #1024	; 0x400
   1307c:	add	r2, lr, #56	; 0x38
   13080:	cmp	r0, #0
   13084:	beq	13224 <__assert_fail@plt+0x1664>
   13088:	ldr	r9, [sp, #44]	; 0x2c
   1308c:	mov	r0, #0
   13090:	mov	r1, r5
   13094:	strb	r0, [r6, -r9]
   13098:	ldrb	r0, [r5]
   1309c:	cmp	r0, #0
   130a0:	movw	r0, #52603	; 0xcd7b
   130a4:	movt	r0, #1
   130a8:	moveq	r1, r0
   130ac:	mov	r0, #3
   130b0:	bl	11b3c <__xstat64@plt>
   130b4:	cmp	r0, #0
   130b8:	bne	134c0 <__assert_fail@plt+0x1900>
   130bc:	rsb	r0, r9, #0
   130c0:	ldr	r9, [sp, #20]
   130c4:	ldrb	r1, [r8]
   130c8:	cmp	r9, #0
   130cc:	strb	r1, [r6, r0]
   130d0:	bne	13108 <__assert_fail@plt+0x1548>
   130d4:	movw	r0, #29904	; 0x74d0
   130d8:	movw	r2, #29744	; 0x7430
   130dc:	movw	r3, #29800	; 0x7468
   130e0:	mov	r1, #0
   130e4:	movt	r0, #1
   130e8:	movt	r2, #1
   130ec:	movt	r3, #1
   130f0:	str	r0, [sp]
   130f4:	mov	r0, #7
   130f8:	bl	164d4 <__assert_fail@plt+0x4914>
   130fc:	mov	r9, r0
   13100:	cmp	r0, #0
   13104:	beq	134b0 <__assert_fail@plt+0x18f0>
   13108:	add	lr, sp, #1024	; 0x400
   1310c:	mov	r0, r9
   13110:	mov	r1, r8
   13114:	add	r2, lr, #56	; 0x38
   13118:	bl	13750 <__assert_fail@plt+0x1b90>
   1311c:	cmp	r0, #0
   13120:	str	r9, [sp, #20]
   13124:	beq	13210 <__assert_fail@plt+0x1650>
   13128:	ldr	r7, [sp, #32]
   1312c:	cmp	r7, #2
   13130:	bne	134b4 <__assert_fail@plt+0x18f4>
   13134:	mov	r8, sl
   13138:	add	r9, sp, #48	; 0x30
   1313c:	ldrb	r0, [r8]
   13140:	cmp	r0, #0
   13144:	bne	12e20 <__assert_fail@plt+0x1260>
   13148:	b	133b0 <__assert_fail@plt+0x17f0>
   1314c:	cmp	r3, #0
   13150:	beq	1303c <__assert_fail@plt+0x147c>
   13154:	ldr	r1, [sp, #40]	; 0x28
   13158:	cmp	r1, #0
   1315c:	beq	1317c <__assert_fail@plt+0x15bc>
   13160:	cmp	r0, #0
   13164:	beq	131b4 <__assert_fail@plt+0x15f4>
   13168:	mov	r8, sl
   1316c:	ldrb	r0, [r8]
   13170:	cmp	r0, #0
   13174:	bne	12e20 <__assert_fail@plt+0x1260>
   13178:	b	133b0 <__assert_fail@plt+0x17f0>
   1317c:	bl	11a04 <__errno_location@plt>
   13180:	ldr	r0, [r0]
   13184:	cmp	r0, #22
   13188:	bne	131d0 <__assert_fail@plt+0x1610>
   1318c:	mov	r8, sl
   13190:	ldrb	r0, [r8]
   13194:	cmp	r0, #0
   13198:	bne	12e20 <__assert_fail@plt+0x1260>
   1319c:	b	133b0 <__assert_fail@plt+0x17f0>
   131a0:	mov	r8, sl
   131a4:	ldrb	r0, [r8]
   131a8:	cmp	r0, #0
   131ac:	bne	12e20 <__assert_fail@plt+0x1260>
   131b0:	b	133b0 <__assert_fail@plt+0x17f0>
   131b4:	mvn	r0, #99	; 0x63
   131b8:	mov	r1, r5
   131bc:	mov	r2, #0
   131c0:	mov	r3, #512	; 0x200
   131c4:	bl	11818 <faccessat@plt>
   131c8:	cmp	r0, #0
   131cc:	beq	1335c <__assert_fail@plt+0x179c>
   131d0:	mov	r4, #1
   131d4:	cmp	r7, #1
   131d8:	bne	133d0 <__assert_fail@plt+0x1810>
   131dc:	bl	11a04 <__errno_location@plt>
   131e0:	ldr	r0, [r0]
   131e4:	cmp	r0, #2
   131e8:	bne	133d0 <__assert_fail@plt+0x1810>
   131ec:	movw	r1, #53801	; 0xd229
   131f0:	mov	r0, sl
   131f4:	movt	r1, #1
   131f8:	bl	11ba8 <strspn@plt>
   131fc:	ldrb	r0, [sl, r0]
   13200:	mov	r8, sl
   13204:	cmp	r0, #0
   13208:	beq	12e14 <__assert_fail@plt+0x1254>
   1320c:	b	133d0 <__assert_fail@plt+0x1810>
   13210:	add	lr, sp, #1024	; 0x400
   13214:	mov	r0, r9
   13218:	mov	r1, r8
   1321c:	add	r2, lr, #56	; 0x38
   13220:	bl	136d4 <__assert_fail@plt+0x1b14>
   13224:	mov	r0, #0
   13228:	strb	r0, [r7, r4]
   1322c:	ldr	r0, [sp, #36]	; 0x24
   13230:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   13234:	tst	r0, #1
   13238:	ldr	r0, [sp, #28]
   1323c:	subne	r0, sl, r8
   13240:	str	r0, [sp, #28]
   13244:	mov	r0, sl
   13248:	bl	119c8 <strlen@plt>
   1324c:	mvn	r1, r4
   13250:	cmp	r0, r1
   13254:	bhi	134b0 <__assert_fail@plt+0x18f0>
   13258:	str	r0, [sp, #44]	; 0x2c
   1325c:	add	r9, r0, r4
   13260:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   13264:	cmp	r0, r9
   13268:	bhi	13290 <__assert_fail@plt+0x16d0>
   1326c:	sub	lr, fp, #1024	; 0x400
   13270:	sub	r0, lr, #40	; 0x28
   13274:	bl	19e1c <lchmod@@Base+0x2864>
   13278:	cmp	r0, #0
   1327c:	beq	134b0 <__assert_fail@plt+0x18f0>
   13280:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   13284:	cmp	r0, r9
   13288:	bls	1326c <__assert_fail@plt+0x16ac>
   1328c:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   13290:	ldr	r0, [sp, #36]	; 0x24
   13294:	ldr	r1, [sp, #44]	; 0x2c
   13298:	tst	r0, #1
   1329c:	ldr	r0, [sp, #28]
   132a0:	add	r2, r1, #1
   132a4:	addne	sl, r8, r0
   132a8:	add	r0, r8, r4
   132ac:	mov	r1, sl
   132b0:	bl	11800 <memmove@plt>
   132b4:	mov	r0, r8
   132b8:	mov	r1, r7
   132bc:	mov	r2, r4
   132c0:	bl	11830 <memcpy@plt>
   132c4:	ldrb	r0, [r7]
   132c8:	cmp	r0, #47	; 0x2f
   132cc:	bne	1330c <__assert_fail@plt+0x174c>
   132d0:	mov	r0, r5
   132d4:	mov	r1, r7
   132d8:	mov	r2, #0
   132dc:	mvn	r3, #0
   132e0:	bl	11bb4 <__mempcpy_chk@plt>
   132e4:	mov	r6, r0
   132e8:	mov	r0, #47	; 0x2f
   132ec:	strb	r0, [r6], #1
   132f0:	mov	r0, #1
   132f4:	str	r0, [sp, #36]	; 0x24
   132f8:	add	r9, sp, #48	; 0x30
   132fc:	ldrb	r0, [r8]
   13300:	cmp	r0, #0
   13304:	bne	12e20 <__assert_fail@plt+0x1260>
   13308:	b	133b0 <__assert_fail@plt+0x17f0>
   1330c:	add	r0, r5, #1
   13310:	mov	r1, #1
   13314:	add	r9, sp, #48	; 0x30
   13318:	cmp	r6, r0
   1331c:	str	r1, [sp, #36]	; 0x24
   13320:	bls	12e14 <__assert_fail@plt+0x1254>
   13324:	sub	r0, r6, #1
   13328:	mov	r6, r0
   1332c:	cmp	r0, r5
   13330:	bls	12e14 <__assert_fail@plt+0x1254>
   13334:	mov	r0, r6
   13338:	ldrb	r1, [r0, #-1]!
   1333c:	cmp	r1, #47	; 0x2f
   13340:	bne	13328 <__assert_fail@plt+0x1768>
   13344:	b	12e14 <__assert_fail@plt+0x1254>
   13348:	mov	r8, sl
   1334c:	ldrb	r0, [r8]
   13350:	cmp	r0, #0
   13354:	bne	12e20 <__assert_fail@plt+0x1260>
   13358:	b	133b0 <__assert_fail@plt+0x17f0>
   1335c:	mov	r8, sl
   13360:	ldrb	r0, [r8]
   13364:	cmp	r0, #0
   13368:	bne	12e20 <__assert_fail@plt+0x1260>
   1336c:	b	133b0 <__assert_fail@plt+0x17f0>
   13370:	bl	11a04 <__errno_location@plt>
   13374:	mov	r1, #2
   13378:	b	12dfc <__assert_fail@plt+0x123c>
   1337c:	mov	r1, #1024	; 0x400
   13380:	bl	11998 <getcwd@plt>
   13384:	cmp	r0, #0
   13388:	beq	133e4 <__assert_fail@plt+0x1824>
   1338c:	mov	r0, r5
   13390:	mov	r1, #0
   13394:	bl	1189c <rawmemchr@plt>
   13398:	mov	r6, r0
   1339c:	ldrb	r0, [r8]
   133a0:	cmp	r0, #0
   133a4:	bne	12dbc <__assert_fail@plt+0x11fc>
   133a8:	mov	r0, #0
   133ac:	str	r0, [sp, #20]
   133b0:	add	r0, r5, #1
   133b4:	cmp	r6, r0
   133b8:	bls	133cc <__assert_fail@plt+0x180c>
   133bc:	mov	r0, r6
   133c0:	ldrb	r1, [r0, #-1]!
   133c4:	cmp	r1, #47	; 0x2f
   133c8:	moveq	r6, r0
   133cc:	mov	r4, #0
   133d0:	ldr	r0, [sp, #20]
   133d4:	cmp	r0, #0
   133d8:	beq	1343c <__assert_fail@plt+0x187c>
   133dc:	bl	167f0 <__assert_fail@plt+0x4c30>
   133e0:	b	1343c <__assert_fail@plt+0x187c>
   133e4:	bl	11a04 <__errno_location@plt>
   133e8:	ldr	r5, [sp, #8]
   133ec:	mov	r6, r0
   133f0:	add	r9, sp, #48	; 0x30
   133f4:	ldr	r0, [r6]
   133f8:	cmp	r0, #34	; 0x22
   133fc:	bne	1342c <__assert_fail@plt+0x186c>
   13400:	mov	r0, r9
   13404:	bl	19dac <lchmod@@Base+0x27f4>
   13408:	cmp	r0, #0
   1340c:	beq	134b0 <__assert_fail@plt+0x18f0>
   13410:	ldr	r5, [sp, #48]	; 0x30
   13414:	ldr	r1, [sp, #52]	; 0x34
   13418:	mov	r0, r5
   1341c:	bl	11998 <getcwd@plt>
   13420:	cmp	r0, #0
   13424:	beq	133f4 <__assert_fail@plt+0x1834>
   13428:	b	1338c <__assert_fail@plt+0x17cc>
   1342c:	cmp	r0, #12
   13430:	beq	134b0 <__assert_fail@plt+0x18f0>
   13434:	mov	r4, #1
   13438:	mov	r6, r5
   1343c:	ldr	r1, [sp, #12]
   13440:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   13444:	ldr	r7, [sp, #16]
   13448:	cmp	r0, r1
   1344c:	beq	13454 <__assert_fail@plt+0x1894>
   13450:	bl	137a0 <__assert_fail@plt+0x1be0>
   13454:	ldr	r0, [sp, #1184]	; 0x4a0
   13458:	cmp	r0, r7
   1345c:	beq	13464 <__assert_fail@plt+0x18a4>
   13460:	bl	137a0 <__assert_fail@plt+0x1be0>
   13464:	cmp	r4, #0
   13468:	beq	13490 <__assert_fail@plt+0x18d0>
   1346c:	ldr	r0, [sp, #48]	; 0x30
   13470:	ldr	r1, [sp, #8]
   13474:	mov	r4, #0
   13478:	cmp	r0, r1
   1347c:	beq	12e04 <__assert_fail@plt+0x1244>
   13480:	bl	137a0 <__assert_fail@plt+0x1be0>
   13484:	mov	r0, r4
   13488:	sub	sp, fp, #28
   1348c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13490:	mov	r0, #0
   13494:	strb	r0, [r6], -r5
   13498:	add	r0, sp, #48	; 0x30
   1349c:	add	r1, r6, #1
   134a0:	bl	19d40 <lchmod@@Base+0x2788>
   134a4:	mov	r4, r0
   134a8:	cmp	r0, #0
   134ac:	bne	12e04 <__assert_fail@plt+0x1244>
   134b0:	bl	1ac74 <lchmod@@Base+0x36bc>
   134b4:	bl	11a04 <__errno_location@plt>
   134b8:	mov	r1, #40	; 0x28
   134bc:	str	r1, [r0]
   134c0:	mov	r4, #1
   134c4:	ldr	r0, [sp, #20]
   134c8:	cmp	r0, #0
   134cc:	bne	133dc <__assert_fail@plt+0x181c>
   134d0:	b	1343c <__assert_fail@plt+0x187c>
   134d4:	movw	r1, #57840	; 0xe1f0
   134d8:	movt	r1, #2
   134dc:	str	r0, [r1, #4]
   134e0:	bx	lr
   134e4:	movw	r1, #57840	; 0xe1f0
   134e8:	movt	r1, #2
   134ec:	strb	r0, [r1]
   134f0:	bx	lr
   134f4:	push	{r4, r5, r6, sl, fp, lr}
   134f8:	add	fp, sp, #16
   134fc:	sub	sp, sp, #8
   13500:	movw	r0, #57828	; 0xe1e4
   13504:	movt	r0, #2
   13508:	ldr	r0, [r0]
   1350c:	bl	1bb58 <lchmod@@Base+0x45a0>
   13510:	cmp	r0, #0
   13514:	beq	1353c <__assert_fail@plt+0x197c>
   13518:	movw	r5, #57840	; 0xe1f0
   1351c:	movt	r5, #2
   13520:	ldrb	r0, [r5]
   13524:	cmp	r0, #0
   13528:	beq	13568 <__assert_fail@plt+0x19a8>
   1352c:	bl	11a04 <__errno_location@plt>
   13530:	ldr	r0, [r0]
   13534:	cmp	r0, #32
   13538:	bne	13568 <__assert_fail@plt+0x19a8>
   1353c:	movw	r0, #57824	; 0xe1e0
   13540:	movt	r0, #2
   13544:	ldr	r0, [r0]
   13548:	bl	1bb58 <lchmod@@Base+0x45a0>
   1354c:	cmp	r0, #0
   13550:	subeq	sp, fp, #16
   13554:	popeq	{r4, r5, r6, sl, fp, pc}
   13558:	movw	r0, #57740	; 0xe18c
   1355c:	movt	r0, #2
   13560:	ldr	r0, [r0]
   13564:	bl	11824 <_exit@plt>
   13568:	movw	r1, #52583	; 0xcd67
   1356c:	mov	r0, #0
   13570:	mov	r2, #5
   13574:	movt	r1, #1
   13578:	bl	11860 <dcgettext@plt>
   1357c:	ldr	r6, [r5, #4]
   13580:	mov	r4, r0
   13584:	bl	11a04 <__errno_location@plt>
   13588:	ldr	r5, [r0]
   1358c:	cmp	r6, #0
   13590:	bne	135ac <__assert_fail@plt+0x19ec>
   13594:	movw	r2, #52599	; 0xcd77
   13598:	mov	r0, #0
   1359c:	mov	r1, r5
   135a0:	mov	r3, r4
   135a4:	movt	r2, #1
   135a8:	b	135cc <__assert_fail@plt+0x1a0c>
   135ac:	mov	r0, r6
   135b0:	bl	199a0 <lchmod@@Base+0x23e8>
   135b4:	movw	r2, #52595	; 0xcd73
   135b8:	mov	r3, r0
   135bc:	str	r4, [sp]
   135c0:	mov	r0, #0
   135c4:	mov	r1, r5
   135c8:	movt	r2, #1
   135cc:	bl	11920 <error@plt>
   135d0:	movw	r0, #57740	; 0xe18c
   135d4:	movt	r0, #2
   135d8:	ldr	r0, [r0]
   135dc:	bl	11824 <_exit@plt>
   135e0:	push	{fp, lr}
   135e4:	mov	fp, sp
   135e8:	bl	13640 <__assert_fail@plt+0x1a80>
   135ec:	cmp	r0, #0
   135f0:	popne	{fp, pc}
   135f4:	bl	1ac74 <lchmod@@Base+0x36bc>
   135f8:	push	{r4, r5, r6, sl, fp, lr}
   135fc:	add	fp, sp, #16
   13600:	mov	r5, r0
   13604:	mov	r4, r0
   13608:	ldrb	r6, [r5], #-1
   1360c:	bl	1bac0 <lchmod@@Base+0x4508>
   13610:	sub	r2, r0, r4
   13614:	sub	r0, r6, #47	; 0x2f
   13618:	clz	r0, r0
   1361c:	lsr	r1, r0, #5
   13620:	mov	r0, r2
   13624:	cmp	r2, r1
   13628:	bls	1363c <__assert_fail@plt+0x1a7c>
   1362c:	ldrb	r3, [r5, r0]
   13630:	sub	r2, r0, #1
   13634:	cmp	r3, #47	; 0x2f
   13638:	beq	13620 <__assert_fail@plt+0x1a60>
   1363c:	pop	{r4, r5, r6, sl, fp, pc}
   13640:	push	{r4, r5, r6, sl, fp, lr}
   13644:	add	fp, sp, #16
   13648:	mov	r6, r0
   1364c:	mov	r4, r0
   13650:	ldrb	r5, [r6], #-1
   13654:	bl	1bac0 <lchmod@@Base+0x4508>
   13658:	sub	r1, r0, r4
   1365c:	sub	r0, r5, #47	; 0x2f
   13660:	clz	r0, r0
   13664:	lsr	r0, r0, #5
   13668:	mov	r5, r1
   1366c:	cmp	r1, r0
   13670:	bls	13684 <__assert_fail@plt+0x1ac4>
   13674:	ldrb	r2, [r6, r5]
   13678:	sub	r1, r5, #1
   1367c:	cmp	r2, #47	; 0x2f
   13680:	beq	13668 <__assert_fail@plt+0x1aa8>
   13684:	cmp	r5, #0
   13688:	mov	r0, r5
   1368c:	addeq	r0, r0, #1
   13690:	add	r0, r0, #1
   13694:	bl	1ba3c <lchmod@@Base+0x4484>
   13698:	mov	r6, r0
   1369c:	cmp	r0, #0
   136a0:	beq	136cc <__assert_fail@plt+0x1b0c>
   136a4:	mov	r0, r6
   136a8:	mov	r1, r4
   136ac:	mov	r2, r5
   136b0:	bl	11830 <memcpy@plt>
   136b4:	cmp	r5, #0
   136b8:	moveq	r0, #46	; 0x2e
   136bc:	moveq	r5, #1
   136c0:	strbeq	r0, [r6]
   136c4:	mov	r0, #0
   136c8:	strb	r0, [r6, r5]
   136cc:	mov	r0, r6
   136d0:	pop	{r4, r5, r6, sl, fp, pc}
   136d4:	push	{r4, r5, r6, r7, fp, lr}
   136d8:	add	fp, sp, #16
   136dc:	cmp	r0, #0
   136e0:	beq	13748 <__assert_fail@plt+0x1b88>
   136e4:	mov	r5, r0
   136e8:	mov	r0, #24
   136ec:	mov	r6, r2
   136f0:	mov	r7, r1
   136f4:	bl	1a738 <lchmod@@Base+0x3180>
   136f8:	mov	r4, r0
   136fc:	mov	r0, r7
   13700:	bl	1ac3c <lchmod@@Base+0x3684>
   13704:	str	r0, [r4]
   13708:	ldrd	r0, [r6, #96]	; 0x60
   1370c:	str	r0, [r4, #8]
   13710:	str	r1, [r4, #12]
   13714:	ldrd	r0, [r6]
   13718:	str	r1, [r4, #20]
   1371c:	str	r0, [r4, #16]
   13720:	mov	r0, r5
   13724:	mov	r1, r4
   13728:	bl	17130 <__assert_fail@plt+0x5570>
   1372c:	cmp	r0, #0
   13730:	beq	1374c <__assert_fail@plt+0x1b8c>
   13734:	cmp	r0, r4
   13738:	beq	13748 <__assert_fail@plt+0x1b88>
   1373c:	mov	r0, r4
   13740:	pop	{r4, r5, r6, r7, fp, lr}
   13744:	b	174d0 <__assert_fail@plt+0x5910>
   13748:	pop	{r4, r5, r6, r7, fp, pc}
   1374c:	bl	1ac74 <lchmod@@Base+0x36bc>
   13750:	cmp	r0, #0
   13754:	moveq	r0, #0
   13758:	bxeq	lr
   1375c:	push	{r4, r5, fp, lr}
   13760:	add	fp, sp, #8
   13764:	sub	sp, sp, #24
   13768:	str	r1, [sp]
   1376c:	mov	ip, sp
   13770:	mov	r1, sp
   13774:	ldrd	r4, [r2, #96]	; 0x60
   13778:	add	r3, ip, #8
   1377c:	add	ip, ip, #16
   13780:	strd	r4, [r3]
   13784:	ldrd	r2, [r2]
   13788:	strd	r2, [ip]
   1378c:	bl	16200 <__assert_fail@plt+0x4640>
   13790:	cmp	r0, #0
   13794:	movwne	r0, #1
   13798:	sub	sp, fp, #8
   1379c:	pop	{r4, r5, fp, pc}
   137a0:	push	{r4, r5, r6, sl, fp, lr}
   137a4:	add	fp, sp, #16
   137a8:	mov	r4, r0
   137ac:	bl	11a04 <__errno_location@plt>
   137b0:	ldr	r6, [r0]
   137b4:	mov	r5, r0
   137b8:	mov	r0, r4
   137bc:	bl	1180c <free@plt>
   137c0:	str	r6, [r5]
   137c4:	pop	{r4, r5, r6, sl, fp, pc}
   137c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137cc:	add	fp, sp, #28
   137d0:	sub	sp, sp, #28
   137d4:	cmp	r1, #4096	; 0x1000
   137d8:	bcs	137f4 <__assert_fail@plt+0x1c34>
   137dc:	mov	sl, r0
   137e0:	and	r0, r1, #516	; 0x204
   137e4:	mov	r6, r1
   137e8:	cmp	r0, #516	; 0x204
   137ec:	tstne	r6, #18
   137f0:	bne	13810 <__assert_fail@plt+0x1c50>
   137f4:	bl	11a04 <__errno_location@plt>
   137f8:	mov	r1, #22
   137fc:	mov	r4, #0
   13800:	str	r1, [r0]
   13804:	mov	r0, r4
   13808:	sub	sp, fp, #28
   1380c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13810:	mov	r0, #1
   13814:	mov	r1, #96	; 0x60
   13818:	mov	r5, r2
   1381c:	bl	1b9e8 <lchmod@@Base+0x4430>
   13820:	cmp	r0, #0
   13824:	beq	13e04 <__assert_fail@plt+0x2244>
   13828:	mov	r4, r0
   1382c:	mvn	r0, #99	; 0x63
   13830:	tst	r6, #2
   13834:	mov	r1, r6
   13838:	str	r0, [r4, #32]
   1383c:	bic	r0, r6, #516	; 0x204
   13840:	str	r5, [r4, #44]	; 0x2c
   13844:	str	r4, [sp, #24]
   13848:	orrne	r1, r0, #4
   1384c:	str	r1, [r4, #48]	; 0x30
   13850:	ldr	r0, [sl]
   13854:	cmp	r0, #0
   13858:	beq	138bc <__assert_fail@plt+0x1cfc>
   1385c:	add	r7, sl, #4
   13860:	mov	r4, #0
   13864:	bl	119c8 <strlen@plt>
   13868:	cmp	r0, r4
   1386c:	movhi	r4, r0
   13870:	ldr	r0, [r7], #4
   13874:	cmp	r0, #0
   13878:	bne	13864 <__assert_fail@plt+0x1ca4>
   1387c:	add	r0, r4, #1
   13880:	ldr	r4, [sp, #24]
   13884:	cmp	r0, #4096	; 0x1000
   13888:	movls	r0, #4096	; 0x1000
   1388c:	ldr	r1, [r4, #36]	; 0x24
   13890:	add	r0, r0, #256	; 0x100
   13894:	adds	r1, r0, r1
   13898:	bcc	138d0 <__assert_fail@plt+0x1d10>
   1389c:	ldr	r0, [r4, #24]
   138a0:	bl	137a0 <__assert_fail@plt+0x1be0>
   138a4:	mov	r0, #0
   138a8:	str	r0, [r4, #24]
   138ac:	bl	11a04 <__errno_location@plt>
   138b0:	mov	r1, #36	; 0x24
   138b4:	str	r1, [r0]
   138b8:	b	13dfc <__assert_fail@plt+0x223c>
   138bc:	mov	r0, #4096	; 0x1000
   138c0:	ldr	r1, [r4, #36]	; 0x24
   138c4:	add	r0, r0, #256	; 0x100
   138c8:	adds	r1, r0, r1
   138cc:	bcs	1389c <__assert_fail@plt+0x1cdc>
   138d0:	str	r1, [r4, #36]	; 0x24
   138d4:	ldr	r0, [r4, #24]
   138d8:	bl	1ba6c <lchmod@@Base+0x44b4>
   138dc:	cmp	r0, #0
   138e0:	beq	13adc <__assert_fail@plt+0x1f1c>
   138e4:	str	r0, [r4, #24]
   138e8:	ldr	r0, [sl]
   138ec:	cmp	r0, #0
   138f0:	beq	13af0 <__assert_fail@plt+0x1f30>
   138f4:	mov	r0, #176	; 0xb0
   138f8:	bl	1ba3c <lchmod@@Base+0x4484>
   138fc:	cmp	r0, #0
   13900:	beq	13df4 <__assert_fail@plt+0x2234>
   13904:	ldr	r1, [r4, #24]
   13908:	mov	r7, r0
   1390c:	mov	r0, #0
   13910:	mov	r2, #196608	; 0x30000
   13914:	strb	r0, [r7, #168]	; 0xa8
   13918:	str	r2, [r7, #58]	; 0x3a
   1391c:	mvn	r2, #0
   13920:	str	r4, [r7, #44]	; 0x2c
   13924:	str	r2, [r7, #48]	; 0x30
   13928:	str	r0, [r7, #52]	; 0x34
   1392c:	str	r0, [r7, #12]
   13930:	str	r0, [r7, #16]
   13934:	str	r0, [r7, #20]
   13938:	str	r1, [r7, #28]
   1393c:	str	r0, [r7, #32]
   13940:	cmp	r5, #0
   13944:	beq	13afc <__assert_fail@plt+0x1f3c>
   13948:	ldrb	r0, [r4, #49]	; 0x31
   1394c:	ubfx	r0, r0, #2, #1
   13950:	ldr	r4, [sl]
   13954:	str	r0, [sp, #12]
   13958:	cmp	r4, #0
   1395c:	beq	13b10 <__assert_fail@plt+0x1f50>
   13960:	tst	r6, #2048	; 0x800
   13964:	str	r5, [sp, #16]
   13968:	str	r7, [sp, #20]
   1396c:	bne	13b34 <__assert_fail@plt+0x1f74>
   13970:	mov	r0, #0
   13974:	mov	r8, #0
   13978:	mov	r5, #0
   1397c:	str	r0, [sp, #8]
   13980:	b	139d4 <__assert_fail@plt+0x1e14>
   13984:	cmp	r8, #0
   13988:	str	r4, [r7, #8]
   1398c:	beq	139b0 <__assert_fail@plt+0x1df0>
   13990:	ldr	r0, [sp, #8]
   13994:	str	r7, [sp, #8]
   13998:	str	r7, [r0, #8]
   1399c:	ldr	r4, [sl, #4]!
   139a0:	add	r5, r5, #1
   139a4:	cmp	r4, #0
   139a8:	bne	139d4 <__assert_fail@plt+0x1e14>
   139ac:	b	13c88 <__assert_fail@plt+0x20c8>
   139b0:	mov	r0, r7
   139b4:	str	r7, [sp, #8]
   139b8:	b	139c0 <__assert_fail@plt+0x1e00>
   139bc:	str	r8, [r7, #8]
   139c0:	mov	r8, r7
   139c4:	ldr	r4, [sl, #4]!
   139c8:	add	r5, r5, #1
   139cc:	cmp	r4, #0
   139d0:	beq	13c88 <__assert_fail@plt+0x20c8>
   139d4:	mov	r0, r4
   139d8:	bl	119c8 <strlen@plt>
   139dc:	mov	r9, r0
   139e0:	cmp	r0, #3
   139e4:	bcc	13a14 <__assert_fail@plt+0x1e54>
   139e8:	add	r0, r9, r4
   139ec:	ldrb	r0, [r0, #-1]
   139f0:	cmp	r0, #47	; 0x2f
   139f4:	bne	13a14 <__assert_fail@plt+0x1e54>
   139f8:	sub	r0, r4, #2
   139fc:	ldrb	r1, [r0, r9]
   13a00:	cmp	r1, #47	; 0x2f
   13a04:	bne	13a14 <__assert_fail@plt+0x1e54>
   13a08:	sub	r9, r9, #1
   13a0c:	cmp	r9, #1
   13a10:	bhi	139fc <__assert_fail@plt+0x1e3c>
   13a14:	add	r0, r9, #176	; 0xb0
   13a18:	bic	r0, r0, #7
   13a1c:	bl	1ba3c <lchmod@@Base+0x4484>
   13a20:	cmp	r0, #0
   13a24:	beq	13c78 <__assert_fail@plt+0x20b8>
   13a28:	add	r6, r0, #168	; 0xa8
   13a2c:	mov	r7, r0
   13a30:	mov	r1, r4
   13a34:	mov	r2, r9
   13a38:	mov	r0, r6
   13a3c:	bl	11830 <memcpy@plt>
   13a40:	ldr	r0, [sp, #24]
   13a44:	ldr	r1, [sp, #20]
   13a48:	mov	r4, #0
   13a4c:	cmp	r8, #0
   13a50:	strb	r4, [r6, r9]
   13a54:	ldr	r2, [r0, #24]
   13a58:	str	r1, [r7, #4]
   13a5c:	add	r1, r7, #44	; 0x2c
   13a60:	stm	r1, {r0, r4, r9}
   13a64:	mov	r1, #196608	; 0x30000
   13a68:	str	r1, [r7, #58]	; 0x3a
   13a6c:	str	r4, [r7, #12]
   13a70:	str	r4, [r7, #16]
   13a74:	str	r4, [r7, #20]
   13a78:	str	r6, [r7, #24]
   13a7c:	mov	r1, r8
   13a80:	movwne	r1, #1
   13a84:	str	r2, [r7, #28]
   13a88:	ldr	r2, [sp, #12]
   13a8c:	str	r4, [r7, #32]
   13a90:	tst	r2, r1
   13a94:	beq	13abc <__assert_fail@plt+0x1efc>
   13a98:	mov	r0, #2
   13a9c:	str	r0, [r7, #112]	; 0x70
   13aa0:	mov	r0, #11
   13aa4:	str	r4, [r7, #116]	; 0x74
   13aa8:	strh	r0, [r7, #56]	; 0x38
   13aac:	ldr	r0, [sp, #16]
   13ab0:	cmp	r0, #0
   13ab4:	bne	139bc <__assert_fail@plt+0x1dfc>
   13ab8:	b	13984 <__assert_fail@plt+0x1dc4>
   13abc:	mov	r1, r7
   13ac0:	mov	r2, #0
   13ac4:	bl	13e78 <__assert_fail@plt+0x22b8>
   13ac8:	strh	r0, [r7, #56]	; 0x38
   13acc:	ldr	r0, [sp, #16]
   13ad0:	cmp	r0, #0
   13ad4:	bne	139bc <__assert_fail@plt+0x1dfc>
   13ad8:	b	13984 <__assert_fail@plt+0x1dc4>
   13adc:	ldr	r0, [r4, #24]
   13ae0:	bl	137a0 <__assert_fail@plt+0x1be0>
   13ae4:	mov	r0, #0
   13ae8:	str	r0, [r4, #24]
   13aec:	b	13dfc <__assert_fail@plt+0x223c>
   13af0:	mov	r7, #0
   13af4:	cmp	r5, #0
   13af8:	bne	13948 <__assert_fail@plt+0x1d88>
   13afc:	mov	r0, #1
   13b00:	ldr	r4, [sl]
   13b04:	str	r0, [sp, #12]
   13b08:	cmp	r4, #0
   13b0c:	bne	13960 <__assert_fail@plt+0x1da0>
   13b10:	ldr	r4, [sp, #24]
   13b14:	mov	r8, #0
   13b18:	mov	r0, #176	; 0xb0
   13b1c:	bl	1ba3c <lchmod@@Base+0x4484>
   13b20:	cmp	r0, #0
   13b24:	bne	13ce0 <__assert_fail@plt+0x2120>
   13b28:	mov	r0, #0
   13b2c:	str	r0, [r4]
   13b30:	b	13db0 <__assert_fail@plt+0x21f0>
   13b34:	add	r0, sl, #4
   13b38:	mov	r9, #0
   13b3c:	mov	r8, #0
   13b40:	mov	r5, #0
   13b44:	str	r0, [sp, #8]
   13b48:	ldr	r0, [sp, #12]
   13b4c:	eor	r0, r0, #1
   13b50:	str	r0, [sp, #12]
   13b54:	mov	r0, #0
   13b58:	str	r0, [sp, #4]
   13b5c:	b	13b90 <__assert_fail@plt+0x1fd0>
   13b60:	cmp	r8, #0
   13b64:	str	r9, [r5, #8]
   13b68:	beq	13c6c <__assert_fail@plt+0x20ac>
   13b6c:	ldr	r0, [sp, #4]
   13b70:	str	r5, [sp, #4]
   13b74:	str	r5, [r0, #8]
   13b78:	ldr	r0, [sp, #8]
   13b7c:	mov	r5, sl
   13b80:	add	r5, sl, #1
   13b84:	ldr	r4, [r0, sl, lsl #2]
   13b88:	cmp	r4, #0
   13b8c:	beq	13c88 <__assert_fail@plt+0x20c8>
   13b90:	mov	r0, r4
   13b94:	mov	sl, r5
   13b98:	bl	119c8 <strlen@plt>
   13b9c:	mov	r7, r0
   13ba0:	add	r0, r0, #176	; 0xb0
   13ba4:	bic	r0, r0, #7
   13ba8:	bl	1ba3c <lchmod@@Base+0x4484>
   13bac:	cmp	r0, #0
   13bb0:	beq	13c78 <__assert_fail@plt+0x20b8>
   13bb4:	add	r6, r0, #168	; 0xa8
   13bb8:	mov	r5, r0
   13bbc:	mov	r1, r4
   13bc0:	mov	r2, r7
   13bc4:	mov	r0, r6
   13bc8:	bl	11830 <memcpy@plt>
   13bcc:	ldr	r0, [sp, #24]
   13bd0:	ldr	r1, [sp, #20]
   13bd4:	strb	r9, [r6, r7]
   13bd8:	ldr	r2, [r0, #24]
   13bdc:	str	r1, [r5, #4]
   13be0:	mov	r1, #196608	; 0x30000
   13be4:	str	r0, [r5, #44]	; 0x2c
   13be8:	str	r9, [r5, #48]	; 0x30
   13bec:	str	r7, [r5, #52]	; 0x34
   13bf0:	str	r1, [r5, #58]	; 0x3a
   13bf4:	str	r9, [r5, #12]
   13bf8:	str	r9, [r5, #16]
   13bfc:	str	r9, [r5, #20]
   13c00:	str	r6, [r5, #24]
   13c04:	clz	r1, r8
   13c08:	lsr	r1, r1, #5
   13c0c:	str	r2, [r5, #28]
   13c10:	ldr	r2, [sp, #12]
   13c14:	str	r9, [r5, #32]
   13c18:	orrs	r1, r2, r1
   13c1c:	bne	13c44 <__assert_fail@plt+0x2084>
   13c20:	mov	r0, #2
   13c24:	str	r0, [r5, #112]	; 0x70
   13c28:	str	r9, [r5, #116]	; 0x74
   13c2c:	mov	r0, #11
   13c30:	strh	r0, [r5, #56]	; 0x38
   13c34:	ldr	r0, [sp, #16]
   13c38:	cmp	r0, #0
   13c3c:	bne	13c60 <__assert_fail@plt+0x20a0>
   13c40:	b	13b60 <__assert_fail@plt+0x1fa0>
   13c44:	mov	r1, r5
   13c48:	mov	r2, #0
   13c4c:	bl	13e78 <__assert_fail@plt+0x22b8>
   13c50:	strh	r0, [r5, #56]	; 0x38
   13c54:	ldr	r0, [sp, #16]
   13c58:	cmp	r0, #0
   13c5c:	beq	13b60 <__assert_fail@plt+0x1fa0>
   13c60:	str	r8, [r5, #8]
   13c64:	mov	r8, r5
   13c68:	b	13b78 <__assert_fail@plt+0x1fb8>
   13c6c:	mov	r0, r5
   13c70:	str	r5, [sp, #4]
   13c74:	b	13c64 <__assert_fail@plt+0x20a4>
   13c78:	ldr	r7, [sp, #20]
   13c7c:	cmp	r8, #0
   13c80:	bne	13dd0 <__assert_fail@plt+0x2210>
   13c84:	b	13de8 <__assert_fail@plt+0x2228>
   13c88:	ldr	r0, [sp, #16]
   13c8c:	ldr	r7, [sp, #20]
   13c90:	cmp	r0, #0
   13c94:	beq	13ccc <__assert_fail@plt+0x210c>
   13c98:	ldr	r4, [sp, #24]
   13c9c:	cmp	r5, #2
   13ca0:	bcc	13cd0 <__assert_fail@plt+0x2110>
   13ca4:	mov	r0, r4
   13ca8:	mov	r1, r8
   13cac:	mov	r2, r5
   13cb0:	bl	14010 <__assert_fail@plt+0x2450>
   13cb4:	mov	r8, r0
   13cb8:	mov	r0, #176	; 0xb0
   13cbc:	bl	1ba3c <lchmod@@Base+0x4484>
   13cc0:	cmp	r0, #0
   13cc4:	bne	13ce0 <__assert_fail@plt+0x2120>
   13cc8:	b	13b28 <__assert_fail@plt+0x1f68>
   13ccc:	ldr	r4, [sp, #24]
   13cd0:	mov	r0, #176	; 0xb0
   13cd4:	bl	1ba3c <lchmod@@Base+0x4484>
   13cd8:	cmp	r0, #0
   13cdc:	beq	13b28 <__assert_fail@plt+0x1f68>
   13ce0:	ldr	r2, [r4, #24]
   13ce4:	mov	r1, #0
   13ce8:	mov	r3, #196608	; 0x30000
   13cec:	str	r0, [r4]
   13cf0:	str	r1, [r0, #52]	; 0x34
   13cf4:	strb	r1, [r0, #168]	; 0xa8
   13cf8:	str	r4, [r0, #44]	; 0x2c
   13cfc:	str	r3, [r0, #58]	; 0x3a
   13d00:	str	r2, [r0, #28]
   13d04:	mov	r2, #9
   13d08:	str	r1, [r0, #32]
   13d0c:	strh	r2, [r0, #56]	; 0x38
   13d10:	str	r8, [r0, #8]
   13d14:	str	r1, [r0, #12]
   13d18:	str	r1, [r0, #16]
   13d1c:	str	r1, [r0, #20]
   13d20:	mov	r1, #1
   13d24:	str	r1, [r0, #48]	; 0x30
   13d28:	ldrh	r0, [r4, #48]	; 0x30
   13d2c:	movw	r1, #258	; 0x102
   13d30:	tst	r0, r1
   13d34:	beq	13d70 <__assert_fail@plt+0x21b0>
   13d38:	movw	r0, #14240	; 0x37a0
   13d3c:	movw	r2, #24000	; 0x5dc0
   13d40:	movw	r3, #24032	; 0x5de0
   13d44:	mov	r1, #0
   13d48:	movt	r0, #1
   13d4c:	movt	r2, #1
   13d50:	movt	r3, #1
   13d54:	str	r0, [sp]
   13d58:	mov	r0, #31
   13d5c:	bl	164d4 <__assert_fail@plt+0x4914>
   13d60:	cmp	r0, #0
   13d64:	str	r0, [r4, #56]	; 0x38
   13d68:	bne	13d88 <__assert_fail@plt+0x21c8>
   13d6c:	b	13db0 <__assert_fail@plt+0x21f0>
   13d70:	mov	r0, #32
   13d74:	bl	1ba3c <lchmod@@Base+0x4484>
   13d78:	cmp	r0, #0
   13d7c:	str	r0, [r4, #56]	; 0x38
   13d80:	beq	13db0 <__assert_fail@plt+0x21f0>
   13d84:	bl	1bbdc <lchmod@@Base+0x4624>
   13d88:	ldr	r4, [sp, #24]
   13d8c:	ldr	r0, [r4, #48]	; 0x30
   13d90:	tst	r0, #516	; 0x204
   13d94:	beq	13e14 <__assert_fail@plt+0x2254>
   13d98:	add	r0, r4, #60	; 0x3c
   13d9c:	mvn	r1, #0
   13da0:	bl	174f0 <__assert_fail@plt+0x5930>
   13da4:	mov	r0, r4
   13da8:	sub	sp, fp, #28
   13dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13db0:	cmp	r8, #0
   13db4:	bne	13dd0 <__assert_fail@plt+0x2210>
   13db8:	b	13de8 <__assert_fail@plt+0x2228>
   13dbc:	mov	r0, r8
   13dc0:	bl	137a0 <__assert_fail@plt+0x1be0>
   13dc4:	cmp	r4, #0
   13dc8:	mov	r8, r4
   13dcc:	beq	13de8 <__assert_fail@plt+0x2228>
   13dd0:	ldrd	r4, [r8, #8]
   13dd4:	cmp	r5, #0
   13dd8:	beq	13dbc <__assert_fail@plt+0x21fc>
   13ddc:	mov	r0, r5
   13de0:	bl	11b9c <closedir@plt>
   13de4:	b	13dbc <__assert_fail@plt+0x21fc>
   13de8:	mov	r0, r7
   13dec:	bl	137a0 <__assert_fail@plt+0x1be0>
   13df0:	ldr	r4, [sp, #24]
   13df4:	ldr	r0, [r4, #24]
   13df8:	bl	137a0 <__assert_fail@plt+0x1be0>
   13dfc:	mov	r0, r4
   13e00:	bl	137a0 <__assert_fail@plt+0x1be0>
   13e04:	mov	r4, #0
   13e08:	mov	r0, r4
   13e0c:	sub	sp, fp, #28
   13e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e14:	mov	r1, #32768	; 0x8000
   13e18:	tst	r0, #512	; 0x200
   13e1c:	and	r1, r1, r0, lsl #11
   13e20:	orr	r1, r1, #18688	; 0x4900
   13e24:	orr	r2, r1, #524288	; 0x80000
   13e28:	bne	13e4c <__assert_fail@plt+0x228c>
   13e2c:	movw	r0, #52603	; 0xcd7b
   13e30:	mov	r1, r2
   13e34:	movt	r0, #1
   13e38:	bl	1bf48 <lchmod@@Base+0x4990>
   13e3c:	cmn	r0, #1
   13e40:	str	r0, [r4, #28]
   13e44:	bgt	13d98 <__assert_fail@plt+0x21d8>
   13e48:	b	13e68 <__assert_fail@plt+0x22a8>
   13e4c:	ldr	r0, [r4, #32]
   13e50:	movw	r1, #52603	; 0xcd7b
   13e54:	movt	r1, #1
   13e58:	bl	17ccc <lchmod@@Base+0x714>
   13e5c:	cmn	r0, #1
   13e60:	str	r0, [r4, #28]
   13e64:	bgt	13d98 <__assert_fail@plt+0x21d8>
   13e68:	ldr	r0, [r4, #48]	; 0x30
   13e6c:	orr	r0, r0, #4
   13e70:	str	r0, [r4, #48]	; 0x30
   13e74:	b	13d98 <__assert_fail@plt+0x21d8>
   13e78:	push	{r4, r5, r6, sl, fp, lr}
   13e7c:	add	fp, sp, #16
   13e80:	sub	sp, sp, #8
   13e84:	mov	r4, r1
   13e88:	ldr	r1, [r0, #48]	; 0x30
   13e8c:	ldr	r3, [r4, #48]	; 0x30
   13e90:	add	r5, r4, #64	; 0x40
   13e94:	cmp	r3, #0
   13e98:	andeq	r3, r1, #1
   13e9c:	orreq	r2, r3, r2
   13ea0:	cmp	r2, #0
   13ea4:	andseq	r1, r1, #2
   13ea8:	beq	13f04 <__assert_fail@plt+0x2344>
   13eac:	ldr	r1, [r4, #24]
   13eb0:	mov	r0, #3
   13eb4:	mov	r2, r5
   13eb8:	bl	11b3c <__xstat64@plt>
   13ebc:	cmp	r0, #0
   13ec0:	beq	13f84 <__assert_fail@plt+0x23c4>
   13ec4:	bl	11a04 <__errno_location@plt>
   13ec8:	mov	r6, r0
   13ecc:	ldr	r0, [r0]
   13ed0:	cmp	r0, #2
   13ed4:	bne	13f34 <__assert_fail@plt+0x2374>
   13ed8:	ldr	r1, [r4, #24]
   13edc:	mov	r0, #3
   13ee0:	mov	r2, r5
   13ee4:	bl	11b78 <__lxstat64@plt>
   13ee8:	cmp	r0, #0
   13eec:	bne	13f30 <__assert_fail@plt+0x2370>
   13ef0:	mov	r0, #0
   13ef4:	str	r0, [r6]
   13ef8:	mov	r0, #13
   13efc:	sub	sp, fp, #16
   13f00:	pop	{r4, r5, r6, sl, fp, pc}
   13f04:	ldr	r1, [r0, #32]
   13f08:	ldr	r2, [r4, #24]
   13f0c:	mov	r0, #256	; 0x100
   13f10:	mov	r3, r5
   13f14:	str	r0, [sp]
   13f18:	mov	r0, #3
   13f1c:	bl	118a8 <__fxstatat64@plt>
   13f20:	cmp	r0, #0
   13f24:	beq	13f84 <__assert_fail@plt+0x23c4>
   13f28:	bl	11a04 <__errno_location@plt>
   13f2c:	mov	r6, r0
   13f30:	ldr	r0, [r6]
   13f34:	vmov.i32	q8, #0	; 0x00000000
   13f38:	add	r1, r5, #80	; 0x50
   13f3c:	str	r0, [r4, #32]
   13f40:	mov	r0, #0
   13f44:	str	r0, [r5, #96]	; 0x60
   13f48:	vst1.64	{d16-d17}, [r1]
   13f4c:	add	r1, r5, #64	; 0x40
   13f50:	vst1.64	{d16-d17}, [r1]
   13f54:	add	r1, r5, #48	; 0x30
   13f58:	vst1.64	{d16-d17}, [r1]
   13f5c:	add	r1, r5, #32
   13f60:	vst1.64	{d16-d17}, [r1]
   13f64:	add	r1, r5, #16
   13f68:	vst1.64	{d16-d17}, [r1]
   13f6c:	mov	r1, #100	; 0x64
   13f70:	vst1.64	{d16-d17}, [r5], r1
   13f74:	str	r0, [r5]
   13f78:	mov	r0, #10
   13f7c:	sub	sp, fp, #16
   13f80:	pop	{r4, r5, r6, sl, fp, pc}
   13f84:	ldr	r0, [r4, #80]	; 0x50
   13f88:	and	r0, r0, #61440	; 0xf000
   13f8c:	cmp	r0, #40960	; 0xa000
   13f90:	beq	13ff8 <__assert_fail@plt+0x2438>
   13f94:	cmp	r0, #32768	; 0x8000
   13f98:	beq	13fec <__assert_fail@plt+0x242c>
   13f9c:	cmp	r0, #16384	; 0x4000
   13fa0:	bne	14004 <__assert_fail@plt+0x2444>
   13fa4:	ldrb	r1, [r4, #168]	; 0xa8
   13fa8:	mov	r0, #1
   13fac:	cmp	r1, #46	; 0x2e
   13fb0:	bne	14008 <__assert_fail@plt+0x2448>
   13fb4:	ldrb	r1, [r4, #169]	; 0xa9
   13fb8:	cmp	r1, #0
   13fbc:	beq	13fd4 <__assert_fail@plt+0x2414>
   13fc0:	cmp	r1, #46	; 0x2e
   13fc4:	bne	14008 <__assert_fail@plt+0x2448>
   13fc8:	ldrb	r1, [r4, #170]	; 0xaa
   13fcc:	cmp	r1, #0
   13fd0:	bne	14008 <__assert_fail@plt+0x2448>
   13fd4:	ldr	r1, [r4, #48]	; 0x30
   13fd8:	mov	r0, #5
   13fdc:	cmp	r1, #0
   13fe0:	movweq	r0, #1
   13fe4:	sub	sp, fp, #16
   13fe8:	pop	{r4, r5, r6, sl, fp, pc}
   13fec:	mov	r0, #8
   13ff0:	sub	sp, fp, #16
   13ff4:	pop	{r4, r5, r6, sl, fp, pc}
   13ff8:	mov	r0, #12
   13ffc:	sub	sp, fp, #16
   14000:	pop	{r4, r5, r6, sl, fp, pc}
   14004:	mov	r0, #3
   14008:	sub	sp, fp, #16
   1400c:	pop	{r4, r5, r6, sl, fp, pc}
   14010:	push	{r4, r5, r6, r7, fp, lr}
   14014:	add	fp, sp, #16
   14018:	mov	r6, r0
   1401c:	ldr	r7, [r0, #44]	; 0x2c
   14020:	ldr	r0, [r0, #40]	; 0x28
   14024:	mov	r5, r2
   14028:	mov	r4, r1
   1402c:	cmp	r0, r2
   14030:	bcs	14068 <__assert_fail@plt+0x24a8>
   14034:	add	r1, r5, #40	; 0x28
   14038:	cmn	r1, #-1073741823	; 0xc0000001
   1403c:	str	r1, [r6, #40]	; 0x28
   14040:	bhi	1410c <__assert_fail@plt+0x254c>
   14044:	ldr	r0, [r6, #8]
   14048:	lsl	r1, r1, #2
   1404c:	bl	1ba6c <lchmod@@Base+0x44b4>
   14050:	cmp	r0, #0
   14054:	beq	1410c <__assert_fail@plt+0x254c>
   14058:	str	r0, [r6, #8]
   1405c:	cmp	r4, #0
   14060:	bne	14074 <__assert_fail@plt+0x24b4>
   14064:	b	14088 <__assert_fail@plt+0x24c8>
   14068:	ldr	r0, [r6, #8]
   1406c:	cmp	r4, #0
   14070:	beq	14088 <__assert_fail@plt+0x24c8>
   14074:	str	r4, [r0], #4
   14078:	ldr	r4, [r4, #8]
   1407c:	cmp	r4, #0
   14080:	bne	14074 <__assert_fail@plt+0x24b4>
   14084:	ldr	r0, [r6, #8]
   14088:	mov	r1, r5
   1408c:	mov	r2, #4
   14090:	mov	r3, r7
   14094:	bl	11ae8 <qsort@plt>
   14098:	ldr	r0, [r6, #8]
   1409c:	cmp	r5, #1
   140a0:	ldr	r4, [r0]
   140a4:	mov	r1, r4
   140a8:	beq	14130 <__assert_fail@plt+0x2570>
   140ac:	mov	r2, r0
   140b0:	ldr	r1, [r2, #4]!
   140b4:	str	r1, [r4, #8]
   140b8:	subs	r1, r5, #2
   140bc:	beq	14128 <__assert_fail@plt+0x2568>
   140c0:	tst	r1, #1
   140c4:	beq	140dc <__assert_fail@plt+0x251c>
   140c8:	ldr	r1, [r0, #8]!
   140cc:	ldr	r2, [r0, #-4]
   140d0:	str	r1, [r2, #8]
   140d4:	sub	r1, r5, #3
   140d8:	mov	r2, r0
   140dc:	cmp	r5, #3
   140e0:	beq	1412c <__assert_fail@plt+0x256c>
   140e4:	mov	r0, r2
   140e8:	ldm	r2, {r3, r7}
   140ec:	subs	r1, r1, #2
   140f0:	str	r7, [r3, #8]
   140f4:	ldr	r3, [r0, #8]!
   140f8:	ldr	r2, [r2, #4]
   140fc:	str	r3, [r2, #8]
   14100:	mov	r2, r0
   14104:	bne	140e8 <__assert_fail@plt+0x2528>
   14108:	b	1412c <__assert_fail@plt+0x256c>
   1410c:	ldr	r0, [r6, #8]
   14110:	bl	137a0 <__assert_fail@plt+0x1be0>
   14114:	mov	r0, #0
   14118:	str	r0, [r6, #40]	; 0x28
   1411c:	str	r0, [r6, #8]
   14120:	mov	r0, r4
   14124:	pop	{r4, r5, r6, r7, fp, pc}
   14128:	mov	r0, r2
   1412c:	ldr	r1, [r0]
   14130:	mov	r0, #0
   14134:	str	r0, [r1, #8]
   14138:	mov	r0, r4
   1413c:	pop	{r4, r5, r6, r7, fp, pc}
   14140:	push	{r4, r5, r6, r7, fp, lr}
   14144:	add	fp, sp, #16
   14148:	mov	r4, r0
   1414c:	ldr	r0, [r0]
   14150:	cmp	r0, #0
   14154:	beq	14194 <__assert_fail@plt+0x25d4>
   14158:	ldr	r1, [r0, #48]	; 0x30
   1415c:	cmp	r1, #0
   14160:	bmi	14188 <__assert_fail@plt+0x25c8>
   14164:	ldr	r5, [r0, #8]
   14168:	cmp	r5, #0
   1416c:	ldreq	r5, [r0, #4]
   14170:	bl	137a0 <__assert_fail@plt+0x1be0>
   14174:	ldr	r0, [r5, #48]	; 0x30
   14178:	cmn	r0, #1
   1417c:	mov	r0, r5
   14180:	bgt	14164 <__assert_fail@plt+0x25a4>
   14184:	b	1418c <__assert_fail@plt+0x25cc>
   14188:	mov	r5, r0
   1418c:	mov	r0, r5
   14190:	bl	137a0 <__assert_fail@plt+0x1be0>
   14194:	ldr	r5, [r4, #4]
   14198:	cmp	r5, #0
   1419c:	bne	141b8 <__assert_fail@plt+0x25f8>
   141a0:	b	141d0 <__assert_fail@plt+0x2610>
   141a4:	mov	r0, r5
   141a8:	bl	137a0 <__assert_fail@plt+0x1be0>
   141ac:	cmp	r6, #0
   141b0:	mov	r5, r6
   141b4:	beq	141d0 <__assert_fail@plt+0x2610>
   141b8:	ldrd	r6, [r5, #8]
   141bc:	cmp	r7, #0
   141c0:	beq	141a4 <__assert_fail@plt+0x25e4>
   141c4:	mov	r0, r7
   141c8:	bl	11b9c <closedir@plt>
   141cc:	b	141a4 <__assert_fail@plt+0x25e4>
   141d0:	ldr	r0, [r4, #8]
   141d4:	bl	137a0 <__assert_fail@plt+0x1be0>
   141d8:	ldr	r0, [r4, #24]
   141dc:	bl	137a0 <__assert_fail@plt+0x1be0>
   141e0:	ldr	r0, [r4, #48]	; 0x30
   141e4:	tst	r0, #512	; 0x200
   141e8:	bne	14224 <__assert_fail@plt+0x2664>
   141ec:	mov	r6, #0
   141f0:	tst	r0, #4
   141f4:	bne	14248 <__assert_fail@plt+0x2688>
   141f8:	ldr	r0, [r4, #28]
   141fc:	bl	11adc <fchdir@plt>
   14200:	cmp	r0, #0
   14204:	beq	142f0 <__assert_fail@plt+0x2730>
   14208:	bl	11a04 <__errno_location@plt>
   1420c:	ldr	r6, [r0]
   14210:	ldr	r0, [r4, #28]
   14214:	bl	11b6c <close@plt>
   14218:	cmp	r6, #0
   1421c:	beq	14238 <__assert_fail@plt+0x2678>
   14220:	b	14248 <__assert_fail@plt+0x2688>
   14224:	ldr	r0, [r4, #32]
   14228:	mov	r6, #0
   1422c:	cmp	r0, #0
   14230:	bmi	14248 <__assert_fail@plt+0x2688>
   14234:	bl	11b6c <close@plt>
   14238:	cmp	r0, #0
   1423c:	beq	14248 <__assert_fail@plt+0x2688>
   14240:	bl	11a04 <__errno_location@plt>
   14244:	ldr	r6, [r0]
   14248:	add	r5, r4, #60	; 0x3c
   1424c:	mov	r0, r5
   14250:	bl	17514 <__assert_fail@plt+0x5954>
   14254:	cmp	r0, #0
   14258:	bne	14280 <__assert_fail@plt+0x26c0>
   1425c:	mov	r0, r5
   14260:	bl	17568 <__assert_fail@plt+0x59a8>
   14264:	cmp	r0, #0
   14268:	bmi	1424c <__assert_fail@plt+0x268c>
   1426c:	bl	11b6c <close@plt>
   14270:	mov	r0, r5
   14274:	bl	17514 <__assert_fail@plt+0x5954>
   14278:	cmp	r0, #0
   1427c:	beq	1425c <__assert_fail@plt+0x269c>
   14280:	ldr	r0, [r4, #52]	; 0x34
   14284:	cmp	r0, #0
   14288:	beq	14290 <__assert_fail@plt+0x26d0>
   1428c:	bl	167f0 <__assert_fail@plt+0x4c30>
   14290:	ldrh	r0, [r4, #48]	; 0x30
   14294:	movw	r1, #258	; 0x102
   14298:	tst	r0, r1
   1429c:	beq	142d0 <__assert_fail@plt+0x2710>
   142a0:	ldr	r0, [r4, #56]	; 0x38
   142a4:	cmp	r0, #0
   142a8:	beq	142b0 <__assert_fail@plt+0x26f0>
   142ac:	bl	167f0 <__assert_fail@plt+0x4c30>
   142b0:	mov	r0, r4
   142b4:	bl	137a0 <__assert_fail@plt+0x1be0>
   142b8:	cmp	r6, #0
   142bc:	beq	142e8 <__assert_fail@plt+0x2728>
   142c0:	bl	11a04 <__errno_location@plt>
   142c4:	str	r6, [r0]
   142c8:	mvn	r0, #0
   142cc:	pop	{r4, r5, r6, r7, fp, pc}
   142d0:	ldr	r0, [r4, #56]	; 0x38
   142d4:	bl	137a0 <__assert_fail@plt+0x1be0>
   142d8:	mov	r0, r4
   142dc:	bl	137a0 <__assert_fail@plt+0x1be0>
   142e0:	cmp	r6, #0
   142e4:	bne	142c0 <__assert_fail@plt+0x2700>
   142e8:	mov	r0, #0
   142ec:	pop	{r4, r5, r6, r7, fp, pc}
   142f0:	mov	r6, #0
   142f4:	ldr	r0, [r4, #28]
   142f8:	bl	11b6c <close@plt>
   142fc:	cmp	r6, #0
   14300:	beq	14238 <__assert_fail@plt+0x2678>
   14304:	b	14248 <__assert_fail@plt+0x2688>
   14308:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1430c:	add	fp, sp, #24
   14310:	sub	sp, sp, #8
   14314:	ldr	r6, [r0]
   14318:	mov	r5, #0
   1431c:	cmp	r6, #0
   14320:	beq	14ac8 <__assert_fail@plt+0x2f08>
   14324:	mov	r4, r0
   14328:	ldr	r0, [r0, #48]	; 0x30
   1432c:	tst	r0, #8192	; 0x2000
   14330:	bne	14ac8 <__assert_fail@plt+0x2f08>
   14334:	ldrh	r1, [r6, #60]	; 0x3c
   14338:	mov	r2, #3
   1433c:	strh	r2, [r6, #60]	; 0x3c
   14340:	cmp	r1, #1
   14344:	beq	143e4 <__assert_fail@plt+0x2824>
   14348:	cmp	r1, #2
   1434c:	bne	14408 <__assert_fail@plt+0x2848>
   14350:	ldrh	r2, [r6, #56]	; 0x38
   14354:	bic	r3, r2, #1
   14358:	cmp	r3, #12
   1435c:	bne	1440c <__assert_fail@plt+0x284c>
   14360:	mov	r0, r4
   14364:	mov	r1, r6
   14368:	mov	r2, #1
   1436c:	bl	13e78 <__assert_fail@plt+0x22b8>
   14370:	cmp	r0, #1
   14374:	strh	r0, [r6, #56]	; 0x38
   14378:	bne	149dc <__assert_fail@plt+0x2e1c>
   1437c:	ldr	r0, [r4, #48]	; 0x30
   14380:	tst	r0, #4
   14384:	bne	149dc <__assert_fail@plt+0x2e1c>
   14388:	mov	r1, #32768	; 0x8000
   1438c:	tst	r0, #512	; 0x200
   14390:	and	r1, r1, r0, lsl #11
   14394:	orr	r1, r1, #18688	; 0x4900
   14398:	orr	r2, r1, #524288	; 0x80000
   1439c:	bne	14710 <__assert_fail@plt+0x2b50>
   143a0:	movw	r0, #52603	; 0xcd7b
   143a4:	mov	r1, r2
   143a8:	movt	r0, #1
   143ac:	bl	1bf48 <lchmod@@Base+0x4990>
   143b0:	cmn	r0, #1
   143b4:	str	r0, [r6, #36]	; 0x24
   143b8:	bgt	1472c <__assert_fail@plt+0x2b6c>
   143bc:	bl	11a04 <__errno_location@plt>
   143c0:	ldr	r0, [r0]
   143c4:	mov	r1, #7
   143c8:	strh	r1, [r6, #56]	; 0x38
   143cc:	str	r0, [r6, #32]
   143d0:	str	r6, [r4]
   143d4:	ldrh	r0, [r6, #56]	; 0x38
   143d8:	cmp	r0, #11
   143dc:	beq	149ec <__assert_fail@plt+0x2e2c>
   143e0:	b	14a20 <__assert_fail@plt+0x2e60>
   143e4:	mov	r0, r4
   143e8:	mov	r1, r6
   143ec:	mov	r2, #0
   143f0:	bl	13e78 <__assert_fail@plt+0x22b8>
   143f4:	strh	r0, [r6, #56]	; 0x38
   143f8:	mov	r5, r6
   143fc:	mov	r0, r5
   14400:	sub	sp, fp, #24
   14404:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14408:	ldrh	r2, [r6, #56]	; 0x38
   1440c:	cmp	r2, #1
   14410:	bne	1446c <__assert_fail@plt+0x28ac>
   14414:	cmp	r1, #4
   14418:	bne	14520 <__assert_fail@plt+0x2960>
   1441c:	ldrb	r0, [r6, #58]	; 0x3a
   14420:	tst	r0, #2
   14424:	beq	14430 <__assert_fail@plt+0x2870>
   14428:	ldr	r0, [r6, #36]	; 0x24
   1442c:	bl	11b6c <close@plt>
   14430:	ldr	r5, [r4, #4]
   14434:	cmp	r5, #0
   14438:	bne	14454 <__assert_fail@plt+0x2894>
   1443c:	b	145b8 <__assert_fail@plt+0x29f8>
   14440:	mov	r0, r5
   14444:	bl	137a0 <__assert_fail@plt+0x1be0>
   14448:	cmp	r8, #0
   1444c:	mov	r5, r8
   14450:	beq	145b0 <__assert_fail@plt+0x29f0>
   14454:	ldrd	r8, [r5, #8]
   14458:	cmp	r9, #0
   1445c:	beq	14440 <__assert_fail@plt+0x2880>
   14460:	mov	r0, r9
   14464:	bl	11b9c <closedir@plt>
   14468:	b	14440 <__assert_fail@plt+0x2880>
   1446c:	mov	r7, r6
   14470:	ldr	r6, [r7, #8]
   14474:	cmp	r6, #0
   14478:	beq	145dc <__assert_fail@plt+0x2a1c>
   1447c:	mov	r0, r7
   14480:	str	r6, [r4]
   14484:	bl	137a0 <__assert_fail@plt+0x1be0>
   14488:	ldr	r0, [r6, #48]	; 0x30
   1448c:	cmp	r0, #0
   14490:	beq	14624 <__assert_fail@plt+0x2a64>
   14494:	ldrh	r0, [r6, #60]	; 0x3c
   14498:	mov	r7, r6
   1449c:	cmp	r0, #4
   144a0:	beq	14470 <__assert_fail@plt+0x28b0>
   144a4:	cmp	r0, #2
   144a8:	bne	149a0 <__assert_fail@plt+0x2de0>
   144ac:	mov	r0, r4
   144b0:	mov	r1, r6
   144b4:	mov	r2, #1
   144b8:	bl	13e78 <__assert_fail@plt+0x22b8>
   144bc:	cmp	r0, #1
   144c0:	strh	r0, [r6, #56]	; 0x38
   144c4:	bne	14998 <__assert_fail@plt+0x2dd8>
   144c8:	ldr	r0, [r4, #48]	; 0x30
   144cc:	tst	r0, #4
   144d0:	bne	14998 <__assert_fail@plt+0x2dd8>
   144d4:	mov	r1, #32768	; 0x8000
   144d8:	tst	r0, #512	; 0x200
   144dc:	and	r1, r1, r0, lsl #11
   144e0:	orr	r1, r1, #18688	; 0x4900
   144e4:	orr	r2, r1, #524288	; 0x80000
   144e8:	bne	14970 <__assert_fail@plt+0x2db0>
   144ec:	movw	r0, #52603	; 0xcd7b
   144f0:	mov	r1, r2
   144f4:	movt	r0, #1
   144f8:	bl	1bf48 <lchmod@@Base+0x4990>
   144fc:	cmn	r0, #1
   14500:	str	r0, [r6, #36]	; 0x24
   14504:	bgt	1498c <__assert_fail@plt+0x2dcc>
   14508:	bl	11a04 <__errno_location@plt>
   1450c:	ldr	r0, [r0]
   14510:	mov	r1, #7
   14514:	strh	r1, [r6, #56]	; 0x38
   14518:	str	r0, [r6, #32]
   1451c:	b	14998 <__assert_fail@plt+0x2dd8>
   14520:	tst	r0, #64	; 0x40
   14524:	beq	14540 <__assert_fail@plt+0x2980>
   14528:	ldrd	r2, [r4, #16]
   1452c:	ldrd	r8, [r6, #64]	; 0x40
   14530:	eor	r1, r9, r3
   14534:	eor	r2, r8, r2
   14538:	orrs	r1, r2, r1
   1453c:	bne	1441c <__assert_fail@plt+0x285c>
   14540:	ldr	r7, [r4, #4]
   14544:	cmp	r7, #0
   14548:	beq	146bc <__assert_fail@plt+0x2afc>
   1454c:	tst	r0, #4096	; 0x1000
   14550:	bne	14674 <__assert_fail@plt+0x2ab4>
   14554:	ldr	r3, [r6, #24]
   14558:	mov	r0, r4
   1455c:	mov	r1, r6
   14560:	mvn	r2, #0
   14564:	bl	14c84 <__assert_fail@plt+0x30c4>
   14568:	cmp	r0, #0
   1456c:	beq	146d4 <__assert_fail@plt+0x2b14>
   14570:	bl	11a04 <__errno_location@plt>
   14574:	ldr	r0, [r0]
   14578:	str	r0, [r6, #32]
   1457c:	ldrh	r0, [r6, #58]	; 0x3a
   14580:	orr	r0, r0, #1
   14584:	strh	r0, [r6, #58]	; 0x3a
   14588:	ldr	r0, [r4, #4]
   1458c:	cmp	r0, #0
   14590:	beq	146d4 <__assert_fail@plt+0x2b14>
   14594:	ldmib	r0, {r1, r2}
   14598:	cmp	r2, #0
   1459c:	ldr	r1, [r1, #24]
   145a0:	str	r1, [r0, #24]
   145a4:	mov	r0, r2
   145a8:	bne	14594 <__assert_fail@plt+0x29d4>
   145ac:	b	146d4 <__assert_fail@plt+0x2b14>
   145b0:	mov	r0, #0
   145b4:	str	r0, [r4, #4]
   145b8:	mov	r0, #6
   145bc:	strh	r0, [r6, #56]	; 0x38
   145c0:	mov	r0, r4
   145c4:	mov	r1, r6
   145c8:	bl	14ba8 <__assert_fail@plt+0x2fe8>
   145cc:	mov	r5, r6
   145d0:	mov	r0, r5
   145d4:	sub	sp, fp, #24
   145d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   145dc:	ldr	r0, [r7, #4]
   145e0:	ldr	r1, [r0, #12]
   145e4:	cmp	r1, #0
   145e8:	beq	1464c <__assert_fail@plt+0x2a8c>
   145ec:	str	r0, [r4]
   145f0:	mov	r2, #0
   145f4:	ldr	r1, [r4, #24]
   145f8:	ldr	r0, [r0, #40]	; 0x28
   145fc:	strb	r2, [r1, r0]
   14600:	mov	r0, r4
   14604:	mov	r1, #3
   14608:	bl	14f34 <__assert_fail@plt+0x3374>
   1460c:	cmp	r0, #0
   14610:	beq	1474c <__assert_fail@plt+0x2b8c>
   14614:	mov	r6, r0
   14618:	mov	r0, r7
   1461c:	bl	137a0 <__assert_fail@plt+0x1be0>
   14620:	b	149a0 <__assert_fail@plt+0x2de0>
   14624:	mov	r0, r4
   14628:	bl	15acc <__assert_fail@plt+0x3f0c>
   1462c:	ldr	r1, [r4, #48]	; 0x30
   14630:	cmp	r0, #0
   14634:	beq	14654 <__assert_fail@plt+0x2a94>
   14638:	orr	r0, r1, #8192	; 0x2000
   1463c:	str	r0, [r4, #48]	; 0x30
   14640:	mov	r0, r5
   14644:	sub	sp, fp, #24
   14648:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1464c:	mov	r5, r0
   14650:	b	14760 <__assert_fail@plt+0x2ba0>
   14654:	movw	r0, #258	; 0x102
   14658:	tst	r1, r0
   1465c:	beq	147fc <__assert_fail@plt+0x2c3c>
   14660:	ldr	r0, [r4, #56]	; 0x38
   14664:	cmp	r0, #0
   14668:	beq	14804 <__assert_fail@plt+0x2c44>
   1466c:	bl	167f0 <__assert_fail@plt+0x4c30>
   14670:	b	14804 <__assert_fail@plt+0x2c44>
   14674:	bic	r0, r0, #4096	; 0x1000
   14678:	str	r0, [r4, #48]	; 0x30
   1467c:	ldrd	r8, [r7, #8]
   14680:	cmp	r9, #0
   14684:	bne	146a8 <__assert_fail@plt+0x2ae8>
   14688:	mov	r0, r7
   1468c:	bl	137a0 <__assert_fail@plt+0x1be0>
   14690:	cmp	r8, #0
   14694:	mov	r7, r8
   14698:	beq	146b4 <__assert_fail@plt+0x2af4>
   1469c:	ldrd	r8, [r7, #8]
   146a0:	cmp	r9, #0
   146a4:	beq	14688 <__assert_fail@plt+0x2ac8>
   146a8:	mov	r0, r9
   146ac:	bl	11b9c <closedir@plt>
   146b0:	b	14688 <__assert_fail@plt+0x2ac8>
   146b4:	mov	r0, #0
   146b8:	str	r0, [r4, #4]
   146bc:	mov	r0, r4
   146c0:	mov	r1, #3
   146c4:	bl	14f34 <__assert_fail@plt+0x3374>
   146c8:	cmp	r0, #0
   146cc:	str	r0, [r4, #4]
   146d0:	beq	146e4 <__assert_fail@plt+0x2b24>
   146d4:	ldr	r6, [r4, #4]
   146d8:	mov	r0, #0
   146dc:	str	r0, [r4, #4]
   146e0:	b	149a0 <__assert_fail@plt+0x2de0>
   146e4:	ldrb	r0, [r4, #49]	; 0x31
   146e8:	tst	r0, #32
   146ec:	bne	14ac8 <__assert_fail@plt+0x2f08>
   146f0:	ldr	r0, [r6, #32]
   146f4:	cmp	r0, #0
   146f8:	beq	145c0 <__assert_fail@plt+0x2a00>
   146fc:	ldrh	r0, [r6, #56]	; 0x38
   14700:	cmp	r0, #4
   14704:	beq	145c0 <__assert_fail@plt+0x2a00>
   14708:	mov	r0, #7
   1470c:	b	145bc <__assert_fail@plt+0x29fc>
   14710:	ldr	r0, [r4, #32]
   14714:	movw	r1, #52603	; 0xcd7b
   14718:	movt	r1, #1
   1471c:	bl	17ccc <lchmod@@Base+0x714>
   14720:	cmn	r0, #1
   14724:	str	r0, [r6, #36]	; 0x24
   14728:	ble	143bc <__assert_fail@plt+0x27fc>
   1472c:	ldrh	r0, [r6, #58]	; 0x3a
   14730:	orr	r0, r0, #2
   14734:	strh	r0, [r6, #58]	; 0x3a
   14738:	str	r6, [r4]
   1473c:	ldrh	r0, [r6, #56]	; 0x38
   14740:	cmp	r0, #11
   14744:	beq	149ec <__assert_fail@plt+0x2e2c>
   14748:	b	14a20 <__assert_fail@plt+0x2e60>
   1474c:	ldrb	r0, [r4, #49]	; 0x31
   14750:	mov	r5, #0
   14754:	tst	r0, #32
   14758:	bne	14ac8 <__assert_fail@plt+0x2f08>
   1475c:	ldr	r5, [r7, #4]
   14760:	mov	r0, r7
   14764:	str	r5, [r4]
   14768:	bl	137a0 <__assert_fail@plt+0x1be0>
   1476c:	ldr	r0, [r5, #48]	; 0x30
   14770:	cmn	r0, #1
   14774:	beq	147d8 <__assert_fail@plt+0x2c18>
   14778:	ldrh	r0, [r5, #56]	; 0x38
   1477c:	cmp	r0, #11
   14780:	beq	14ba4 <__assert_fail@plt+0x2fe4>
   14784:	ldr	r0, [r5, #40]	; 0x28
   14788:	ldr	r1, [r4, #24]
   1478c:	mov	r2, #0
   14790:	strb	r2, [r1, r0]
   14794:	ldr	r0, [r5, #48]	; 0x30
   14798:	cmp	r0, #0
   1479c:	beq	148f4 <__assert_fail@plt+0x2d34>
   147a0:	ldrh	r0, [r5, #58]	; 0x3a
   147a4:	tst	r0, #2
   147a8:	bne	1492c <__assert_fail@plt+0x2d6c>
   147ac:	tst	r0, #1
   147b0:	bne	14b5c <__assert_fail@plt+0x2f9c>
   147b4:	ldr	r1, [r5, #4]
   147b8:	movw	r3, #52602	; 0xcd7a
   147bc:	mov	r0, r4
   147c0:	mvn	r2, #0
   147c4:	movt	r3, #1
   147c8:	bl	14c84 <__assert_fail@plt+0x30c4>
   147cc:	cmp	r0, #0
   147d0:	bne	14904 <__assert_fail@plt+0x2d44>
   147d4:	b	14b5c <__assert_fail@plt+0x2f9c>
   147d8:	mov	r0, r5
   147dc:	bl	137a0 <__assert_fail@plt+0x1be0>
   147e0:	bl	11a04 <__errno_location@plt>
   147e4:	mov	r5, #0
   147e8:	str	r5, [r0]
   147ec:	str	r5, [r4]
   147f0:	mov	r0, r5
   147f4:	sub	sp, fp, #24
   147f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   147fc:	ldr	r0, [r4, #56]	; 0x38
   14800:	bl	137a0 <__assert_fail@plt+0x1be0>
   14804:	ldr	r1, [r6, #52]	; 0x34
   14808:	add	r7, r6, #168	; 0xa8
   1480c:	str	r1, [r6, #40]	; 0x28
   14810:	add	r2, r1, #1
   14814:	mov	r1, r7
   14818:	ldr	r0, [r4, #24]
   1481c:	bl	11800 <memmove@plt>
   14820:	mov	r0, r7
   14824:	mov	r1, #47	; 0x2f
   14828:	bl	11a94 <strrchr@plt>
   1482c:	cmp	r0, #0
   14830:	beq	1486c <__assert_fail@plt+0x2cac>
   14834:	cmp	r0, r7
   14838:	bne	14848 <__assert_fail@plt+0x2c88>
   1483c:	ldrb	r1, [r6, #169]	; 0xa9
   14840:	cmp	r1, #0
   14844:	beq	1486c <__assert_fail@plt+0x2cac>
   14848:	add	r8, r0, #1
   1484c:	mov	r0, r8
   14850:	bl	119c8 <strlen@plt>
   14854:	mov	r9, r0
   14858:	add	r2, r0, #1
   1485c:	mov	r0, r7
   14860:	mov	r1, r8
   14864:	bl	11800 <memmove@plt>
   14868:	str	r9, [r6, #52]	; 0x34
   1486c:	ldr	r0, [r4, #24]
   14870:	movw	r1, #258	; 0x102
   14874:	str	r0, [r6, #24]
   14878:	str	r0, [r6, #28]
   1487c:	ldrh	r0, [r4, #48]	; 0x30
   14880:	tst	r0, r1
   14884:	beq	148c8 <__assert_fail@plt+0x2d08>
   14888:	movw	r0, #14240	; 0x37a0
   1488c:	movw	r2, #24000	; 0x5dc0
   14890:	movw	r3, #24032	; 0x5de0
   14894:	mov	r1, #0
   14898:	movt	r0, #1
   1489c:	movt	r2, #1
   148a0:	movt	r3, #1
   148a4:	str	r0, [sp]
   148a8:	mov	r0, #31
   148ac:	bl	164d4 <__assert_fail@plt+0x4914>
   148b0:	str	r0, [r4, #56]	; 0x38
   148b4:	str	r6, [r4]
   148b8:	ldrh	r0, [r6, #56]	; 0x38
   148bc:	cmp	r0, #11
   148c0:	beq	149ec <__assert_fail@plt+0x2e2c>
   148c4:	b	14a20 <__assert_fail@plt+0x2e60>
   148c8:	mov	r0, #32
   148cc:	bl	1ba3c <lchmod@@Base+0x4484>
   148d0:	cmp	r0, #0
   148d4:	str	r0, [r4, #56]	; 0x38
   148d8:	beq	149dc <__assert_fail@plt+0x2e1c>
   148dc:	bl	1bbdc <lchmod@@Base+0x4624>
   148e0:	str	r6, [r4]
   148e4:	ldrh	r0, [r6, #56]	; 0x38
   148e8:	cmp	r0, #11
   148ec:	beq	149ec <__assert_fail@plt+0x2e2c>
   148f0:	b	14a20 <__assert_fail@plt+0x2e60>
   148f4:	mov	r0, r4
   148f8:	bl	15acc <__assert_fail@plt+0x3f0c>
   148fc:	cmp	r0, #0
   14900:	beq	14b5c <__assert_fail@plt+0x2f9c>
   14904:	bl	11a04 <__errno_location@plt>
   14908:	ldr	r0, [r0]
   1490c:	str	r0, [r5, #32]
   14910:	ldr	r0, [r4, #48]	; 0x30
   14914:	orr	r0, r0, #8192	; 0x2000
   14918:	str	r0, [r4, #48]	; 0x30
   1491c:	ldrh	r0, [r5, #56]	; 0x38
   14920:	cmp	r0, #2
   14924:	bne	14b68 <__assert_fail@plt+0x2fa8>
   14928:	b	14b8c <__assert_fail@plt+0x2fcc>
   1492c:	ldr	r0, [r4, #48]	; 0x30
   14930:	tst	r0, #4
   14934:	bne	14b54 <__assert_fail@plt+0x2f94>
   14938:	ldr	r6, [r5, #36]	; 0x24
   1493c:	tst	r0, #512	; 0x200
   14940:	bne	14b28 <__assert_fail@plt+0x2f68>
   14944:	mov	r0, r6
   14948:	bl	11adc <fchdir@plt>
   1494c:	cmp	r0, #0
   14950:	beq	14b54 <__assert_fail@plt+0x2f94>
   14954:	bl	11a04 <__errno_location@plt>
   14958:	ldr	r0, [r0]
   1495c:	str	r0, [r5, #32]
   14960:	ldr	r0, [r4, #48]	; 0x30
   14964:	orr	r0, r0, #8192	; 0x2000
   14968:	str	r0, [r4, #48]	; 0x30
   1496c:	b	14b54 <__assert_fail@plt+0x2f94>
   14970:	ldr	r0, [r4, #32]
   14974:	movw	r1, #52603	; 0xcd7b
   14978:	movt	r1, #1
   1497c:	bl	17ccc <lchmod@@Base+0x714>
   14980:	cmn	r0, #1
   14984:	str	r0, [r6, #36]	; 0x24
   14988:	ble	14508 <__assert_fail@plt+0x2948>
   1498c:	ldrh	r0, [r6, #58]	; 0x3a
   14990:	orr	r0, r0, #2
   14994:	strh	r0, [r6, #58]	; 0x3a
   14998:	mov	r0, #3
   1499c:	strh	r0, [r6, #60]	; 0x3c
   149a0:	ldr	r0, [r6, #4]
   149a4:	ldr	r1, [r0, #28]
   149a8:	ldr	r0, [r0, #40]	; 0x28
   149ac:	sub	r2, r0, #1
   149b0:	ldrb	r1, [r1, r2]
   149b4:	cmp	r1, #47	; 0x2f
   149b8:	ldr	r1, [r4, #24]
   149bc:	moveq	r0, r2
   149c0:	mov	r2, #47	; 0x2f
   149c4:	strb	r2, [r1, r0]!
   149c8:	ldr	r2, [r6, #52]	; 0x34
   149cc:	add	r0, r1, #1
   149d0:	add	r1, r6, #168	; 0xa8
   149d4:	add	r2, r2, #1
   149d8:	bl	11800 <memmove@plt>
   149dc:	str	r6, [r4]
   149e0:	ldrh	r0, [r6, #56]	; 0x38
   149e4:	cmp	r0, #11
   149e8:	bne	14a20 <__assert_fail@plt+0x2e60>
   149ec:	add	r0, r6, #112	; 0x70
   149f0:	ldrd	r0, [r0]
   149f4:	eor	r2, r0, #1
   149f8:	orrs	r2, r2, r1
   149fc:	beq	14ad4 <__assert_fail@plt+0x2f14>
   14a00:	eor	r0, r0, #2
   14a04:	orrs	r0, r0, r1
   14a08:	bne	14ba4 <__assert_fail@plt+0x2fe4>
   14a0c:	mov	r0, r4
   14a10:	mov	r1, r6
   14a14:	mov	r2, #0
   14a18:	bl	13e78 <__assert_fail@plt+0x22b8>
   14a1c:	strh	r0, [r6, #56]	; 0x38
   14a20:	cmp	r0, #1
   14a24:	bne	14ac4 <__assert_fail@plt+0x2f04>
   14a28:	ldr	r0, [r6, #48]	; 0x30
   14a2c:	add	r8, r6, #64	; 0x40
   14a30:	cmp	r0, #0
   14a34:	bne	14a40 <__assert_fail@plt+0x2e80>
   14a38:	ldrd	r0, [r8]
   14a3c:	strd	r0, [r4, #16]
   14a40:	ldrh	r0, [r4, #48]	; 0x30
   14a44:	movw	r1, #258	; 0x102
   14a48:	tst	r0, r1
   14a4c:	beq	14ae4 <__assert_fail@plt+0x2f24>
   14a50:	mov	r0, #24
   14a54:	bl	1ba3c <lchmod@@Base+0x4484>
   14a58:	cmp	r0, #0
   14a5c:	beq	14b10 <__assert_fail@plt+0x2f50>
   14a60:	ldrd	r2, [r8]
   14a64:	mov	r7, r0
   14a68:	add	r0, r6, #160	; 0xa0
   14a6c:	stm	r7, {r2, r3}
   14a70:	add	r2, r7, #8
   14a74:	ldrd	r0, [r0]
   14a78:	stm	r2, {r0, r1, r6}
   14a7c:	mov	r1, r7
   14a80:	ldr	r0, [r4, #56]	; 0x38
   14a84:	bl	17130 <__assert_fail@plt+0x5570>
   14a88:	cmp	r0, r7
   14a8c:	beq	14ad4 <__assert_fail@plt+0x2f14>
   14a90:	mov	r4, r0
   14a94:	mov	r0, r7
   14a98:	bl	137a0 <__assert_fail@plt+0x1be0>
   14a9c:	cmp	r4, #0
   14aa0:	beq	14b10 <__assert_fail@plt+0x2f50>
   14aa4:	ldr	r0, [r4, #16]
   14aa8:	mov	r1, #2
   14aac:	mov	r5, r6
   14ab0:	strh	r1, [r6, #56]	; 0x38
   14ab4:	str	r0, [r6]
   14ab8:	mov	r0, r5
   14abc:	sub	sp, fp, #24
   14ac0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ac4:	mov	r5, r6
   14ac8:	mov	r0, r5
   14acc:	sub	sp, fp, #24
   14ad0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ad4:	mov	r5, r6
   14ad8:	mov	r0, r5
   14adc:	sub	sp, fp, #24
   14ae0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ae4:	ldr	r0, [r4, #56]	; 0x38
   14ae8:	mov	r1, r8
   14aec:	bl	1bbf8 <lchmod@@Base+0x4640>
   14af0:	cmp	r0, #0
   14af4:	mov	r5, r6
   14af8:	movne	r0, #2
   14afc:	strhne	r0, [r6, #56]	; 0x38
   14b00:	strne	r6, [r6]
   14b04:	mov	r0, r5
   14b08:	sub	sp, fp, #24
   14b0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14b10:	bl	11a04 <__errno_location@plt>
   14b14:	mov	r1, #12
   14b18:	str	r1, [r0]
   14b1c:	mov	r0, r5
   14b20:	sub	sp, fp, #24
   14b24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14b28:	ldr	r1, [r4, #32]
   14b2c:	cmp	r1, r6
   14b30:	bne	14b3c <__assert_fail@plt+0x2f7c>
   14b34:	cmn	r1, #100	; 0x64
   14b38:	bne	14ba4 <__assert_fail@plt+0x2fe4>
   14b3c:	add	r0, r4, #60	; 0x3c
   14b40:	bl	1751c <__assert_fail@plt+0x595c>
   14b44:	cmp	r0, #0
   14b48:	bmi	14b50 <__assert_fail@plt+0x2f90>
   14b4c:	bl	11b6c <close@plt>
   14b50:	str	r6, [r4, #32]
   14b54:	ldr	r0, [r5, #36]	; 0x24
   14b58:	bl	11b6c <close@plt>
   14b5c:	ldrh	r0, [r5, #56]	; 0x38
   14b60:	cmp	r0, #2
   14b64:	beq	14b8c <__assert_fail@plt+0x2fcc>
   14b68:	ldr	r0, [r5, #32]
   14b6c:	mov	r1, #7
   14b70:	cmp	r0, #0
   14b74:	movweq	r1, #6
   14b78:	strh	r1, [r5, #56]	; 0x38
   14b7c:	bne	14b8c <__assert_fail@plt+0x2fcc>
   14b80:	mov	r0, r4
   14b84:	mov	r1, r5
   14b88:	bl	14ba8 <__assert_fail@plt+0x2fe8>
   14b8c:	ldrb	r0, [r4, #49]	; 0x31
   14b90:	tst	r0, #32
   14b94:	movne	r5, #0
   14b98:	mov	r0, r5
   14b9c:	sub	sp, fp, #24
   14ba0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ba4:	bl	11b60 <abort@plt>
   14ba8:	push	{r4, r5, r7, sl, fp, lr}
   14bac:	add	fp, sp, #16
   14bb0:	sub	sp, sp, #24
   14bb4:	ldrh	r2, [r0, #48]	; 0x30
   14bb8:	movw	r3, #258	; 0x102
   14bbc:	add	lr, r1, #64	; 0x40
   14bc0:	add	r4, r1, #160	; 0xa0
   14bc4:	tst	r2, r3
   14bc8:	beq	14c00 <__assert_fail@plt+0x3040>
   14bcc:	ldrd	r2, [lr]
   14bd0:	mov	r1, sp
   14bd4:	stm	sp, {r2, r3}
   14bd8:	ldrd	r2, [r4]
   14bdc:	str	r3, [sp, #12]
   14be0:	str	r2, [sp, #8]
   14be4:	ldr	r0, [r0, #56]	; 0x38
   14be8:	bl	17178 <__assert_fail@plt+0x55b8>
   14bec:	cmp	r0, #0
   14bf0:	beq	14c80 <__assert_fail@plt+0x30c0>
   14bf4:	bl	137a0 <__assert_fail@plt+0x1be0>
   14bf8:	sub	sp, fp, #16
   14bfc:	pop	{r4, r5, r7, sl, fp, pc}
   14c00:	ldr	r1, [r1, #4]
   14c04:	cmp	r1, #0
   14c08:	beq	14c78 <__assert_fail@plt+0x30b8>
   14c0c:	ldr	r2, [r1, #48]	; 0x30
   14c10:	cmp	r2, #0
   14c14:	bmi	14c78 <__assert_fail@plt+0x30b8>
   14c18:	ldr	ip, [r0, #56]	; 0x38
   14c1c:	ldrd	r2, [ip, #16]
   14c20:	orrs	r2, r2, r3
   14c24:	beq	14c80 <__assert_fail@plt+0x30c0>
   14c28:	ldrd	r2, [r4]
   14c2c:	ldrd	r4, [ip]
   14c30:	eor	r3, r5, r3
   14c34:	eor	r2, r4, r2
   14c38:	orrs	r2, r2, r3
   14c3c:	bne	14c78 <__assert_fail@plt+0x30b8>
   14c40:	add	r3, ip, #8
   14c44:	ldm	lr, {r2, r5}
   14c48:	ldm	r3, {r4, r7}
   14c4c:	eor	r7, r7, r5
   14c50:	eor	r2, r4, r2
   14c54:	orrs	r2, r2, r7
   14c58:	bne	14c78 <__assert_fail@plt+0x30b8>
   14c5c:	add	r2, r1, #64	; 0x40
   14c60:	add	r1, r1, #160	; 0xa0
   14c64:	ldm	r2, {r2, r5}
   14c68:	stm	r3, {r2, r5}
   14c6c:	ldr	r0, [r0, #56]	; 0x38
   14c70:	ldrd	r2, [r1]
   14c74:	strd	r2, [r0]
   14c78:	sub	sp, fp, #16
   14c7c:	pop	{r4, r5, r7, sl, fp, pc}
   14c80:	bl	11b60 <abort@plt>
   14c84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c88:	add	fp, sp, #28
   14c8c:	sub	sp, sp, #108	; 0x6c
   14c90:	mov	r7, r3
   14c94:	mov	r4, r2
   14c98:	mov	r8, r1
   14c9c:	mov	sl, r0
   14ca0:	cmp	r3, #0
   14ca4:	beq	14d30 <__assert_fail@plt+0x3170>
   14ca8:	movw	r1, #52602	; 0xcd7a
   14cac:	mov	r0, r7
   14cb0:	movt	r1, #1
   14cb4:	bl	117d0 <strcmp@plt>
   14cb8:	cmp	r0, #0
   14cbc:	mov	r6, r0
   14cc0:	movwne	r6, #1
   14cc4:	ldr	r0, [sl, #48]	; 0x30
   14cc8:	tst	r0, #4
   14ccc:	bne	14d40 <__assert_fail@plt+0x3180>
   14cd0:	cmn	r4, #1
   14cd4:	mov	r1, #0
   14cd8:	mov	r9, #0
   14cdc:	movwgt	r1, #1
   14ce0:	orrs	r1, r1, r6
   14ce4:	bne	14d68 <__assert_fail@plt+0x31a8>
   14ce8:	ands	r0, r0, #512	; 0x200
   14cec:	beq	14d68 <__assert_fail@plt+0x31a8>
   14cf0:	add	r4, sl, #60	; 0x3c
   14cf4:	mov	r0, r4
   14cf8:	bl	17514 <__assert_fail@plt+0x5954>
   14cfc:	cmp	r0, #0
   14d00:	bne	14d70 <__assert_fail@plt+0x31b0>
   14d04:	mov	r0, r4
   14d08:	bl	17568 <__assert_fail@plt+0x59a8>
   14d0c:	cmn	r0, #1
   14d10:	ble	14d70 <__assert_fail@plt+0x31b0>
   14d14:	mov	r4, r0
   14d18:	mov	r9, #0
   14d1c:	mov	r7, #0
   14d20:	ldr	r5, [sl, #48]	; 0x30
   14d24:	tst	r5, #2
   14d28:	beq	14db4 <__assert_fail@plt+0x31f4>
   14d2c:	b	14dfc <__assert_fail@plt+0x323c>
   14d30:	mov	r6, #1
   14d34:	ldr	r0, [sl, #48]	; 0x30
   14d38:	tst	r0, #4
   14d3c:	beq	14cd0 <__assert_fail@plt+0x3110>
   14d40:	mov	r5, #0
   14d44:	cmp	r4, #0
   14d48:	bmi	14df0 <__assert_fail@plt+0x3230>
   14d4c:	ands	r0, r0, #512	; 0x200
   14d50:	beq	14df0 <__assert_fail@plt+0x3230>
   14d54:	mov	r0, r4
   14d58:	bl	11b6c <close@plt>
   14d5c:	mov	r0, r5
   14d60:	sub	sp, fp, #28
   14d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d68:	cmn	r4, #1
   14d6c:	bgt	14da8 <__assert_fail@plt+0x31e8>
   14d70:	ldr	r0, [sl, #48]	; 0x30
   14d74:	mov	r1, #32768	; 0x8000
   14d78:	and	r1, r1, r0, lsl #11
   14d7c:	tst	r0, #512	; 0x200
   14d80:	orr	r1, r1, #18688	; 0x4900
   14d84:	orr	r2, r1, #524288	; 0x80000
   14d88:	bne	14e24 <__assert_fail@plt+0x3264>
   14d8c:	mov	r0, r7
   14d90:	mov	r1, r2
   14d94:	bl	1bf48 <lchmod@@Base+0x4990>
   14d98:	mov	r4, r0
   14d9c:	mov	r9, #1
   14da0:	cmp	r0, #0
   14da4:	bmi	14e40 <__assert_fail@plt+0x3280>
   14da8:	ldr	r5, [sl, #48]	; 0x30
   14dac:	tst	r5, #2
   14db0:	bne	14dfc <__assert_fail@plt+0x323c>
   14db4:	cmp	r7, #0
   14db8:	beq	14dd4 <__assert_fail@plt+0x3214>
   14dbc:	movw	r1, #52602	; 0xcd7a
   14dc0:	mov	r0, r7
   14dc4:	movt	r1, #1
   14dc8:	bl	117d0 <strcmp@plt>
   14dcc:	cmp	r0, #0
   14dd0:	beq	14dfc <__assert_fail@plt+0x323c>
   14dd4:	tst	r5, #512	; 0x200
   14dd8:	bne	14e98 <__assert_fail@plt+0x32d8>
   14ddc:	mov	r0, r4
   14de0:	bl	11adc <fchdir@plt>
   14de4:	mov	r5, r0
   14de8:	cmp	r9, #0
   14dec:	bne	14ee0 <__assert_fail@plt+0x3320>
   14df0:	mov	r0, r5
   14df4:	sub	sp, fp, #28
   14df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dfc:	mov	r2, sp
   14e00:	mov	r0, #3
   14e04:	mov	r1, r4
   14e08:	bl	118c0 <__fxstat64@plt>
   14e0c:	cmp	r0, #0
   14e10:	beq	14e50 <__assert_fail@plt+0x3290>
   14e14:	mvn	r5, #0
   14e18:	cmp	r9, #0
   14e1c:	beq	14df0 <__assert_fail@plt+0x3230>
   14e20:	b	14ee0 <__assert_fail@plt+0x3320>
   14e24:	ldr	r0, [sl, #32]
   14e28:	mov	r1, r7
   14e2c:	bl	17ccc <lchmod@@Base+0x714>
   14e30:	mov	r4, r0
   14e34:	mov	r9, #1
   14e38:	cmp	r0, #0
   14e3c:	bpl	14da8 <__assert_fail@plt+0x31e8>
   14e40:	mvn	r5, #0
   14e44:	mov	r0, r5
   14e48:	sub	sp, fp, #28
   14e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e50:	add	r0, r8, #64	; 0x40
   14e54:	ldm	sp, {r2, r3}
   14e58:	ldrd	r0, [r0]
   14e5c:	eor	r1, r1, r3
   14e60:	eor	r0, r0, r2
   14e64:	orrs	r0, r0, r1
   14e68:	bne	14ec8 <__assert_fail@plt+0x3308>
   14e6c:	add	r0, r8, #160	; 0xa0
   14e70:	ldr	r2, [sp, #96]	; 0x60
   14e74:	ldr	r3, [sp, #100]	; 0x64
   14e78:	ldrd	r0, [r0]
   14e7c:	eor	r1, r1, r3
   14e80:	eor	r0, r0, r2
   14e84:	orrs	r0, r0, r1
   14e88:	bne	14ec8 <__assert_fail@plt+0x3308>
   14e8c:	ldr	r5, [sl, #48]	; 0x30
   14e90:	tst	r5, #512	; 0x200
   14e94:	beq	14ddc <__assert_fail@plt+0x321c>
   14e98:	ldr	r1, [sl, #32]
   14e9c:	cmp	r1, r4
   14ea0:	bne	14eac <__assert_fail@plt+0x32ec>
   14ea4:	cmn	r1, #100	; 0x64
   14ea8:	bne	14f30 <__assert_fail@plt+0x3370>
   14eac:	cmp	r6, #0
   14eb0:	beq	14f04 <__assert_fail@plt+0x3344>
   14eb4:	add	r0, sl, #60	; 0x3c
   14eb8:	bl	1751c <__assert_fail@plt+0x595c>
   14ebc:	cmp	r0, #0
   14ec0:	bpl	14f18 <__assert_fail@plt+0x3358>
   14ec4:	b	14f1c <__assert_fail@plt+0x335c>
   14ec8:	bl	11a04 <__errno_location@plt>
   14ecc:	mov	r1, #2
   14ed0:	str	r1, [r0]
   14ed4:	mvn	r5, #0
   14ed8:	cmp	r9, #0
   14edc:	beq	14df0 <__assert_fail@plt+0x3230>
   14ee0:	bl	11a04 <__errno_location@plt>
   14ee4:	ldr	r7, [r0]
   14ee8:	mov	r6, r0
   14eec:	mov	r0, r4
   14ef0:	bl	11b6c <close@plt>
   14ef4:	str	r7, [r6]
   14ef8:	mov	r0, r5
   14efc:	sub	sp, fp, #28
   14f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f04:	tst	r5, #4
   14f08:	bne	14f1c <__assert_fail@plt+0x335c>
   14f0c:	cmp	r1, #0
   14f10:	bmi	14f1c <__assert_fail@plt+0x335c>
   14f14:	mov	r0, r1
   14f18:	bl	11b6c <close@plt>
   14f1c:	str	r4, [sl, #32]
   14f20:	mov	r5, #0
   14f24:	mov	r0, r5
   14f28:	sub	sp, fp, #28
   14f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f30:	bl	11b60 <abort@plt>
   14f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f38:	add	fp, sp, #28
   14f3c:	sub	sp, sp, #68	; 0x44
   14f40:	ldr	sl, [r0]
   14f44:	mov	r4, r1
   14f48:	mov	r5, r0
   14f4c:	str	r0, [fp, #-44]	; 0xffffffd4
   14f50:	ldr	r6, [sl, #12]
   14f54:	cmp	r6, #0
   14f58:	beq	14fa0 <__assert_fail@plt+0x33e0>
   14f5c:	mov	r0, r6
   14f60:	bl	11ad0 <dirfd@plt>
   14f64:	cmn	r0, #1
   14f68:	str	r0, [fp, #-32]	; 0xffffffe0
   14f6c:	ble	14fd4 <__assert_fail@plt+0x3414>
   14f70:	mov	r1, r5
   14f74:	str	r6, [sp, #12]
   14f78:	str	r4, [sp, #4]
   14f7c:	mov	r7, #0
   14f80:	ldr	r0, [r1, #44]!	; 0x2c
   14f84:	str	r1, [sp, #20]
   14f88:	mvn	r1, #0
   14f8c:	cmp	r0, #0
   14f90:	movweq	r1, #34464	; 0x86a0
   14f94:	movteq	r1, #1
   14f98:	str	r1, [sp, #32]
   14f9c:	b	152cc <__assert_fail@plt+0x370c>
   14fa0:	ldr	r3, [r5, #48]	; 0x30
   14fa4:	mvn	r0, #99	; 0x63
   14fa8:	mov	r2, #0
   14fac:	and	r1, r3, #516	; 0x204
   14fb0:	cmp	r1, #512	; 0x200
   14fb4:	ldr	r1, [sl, #24]
   14fb8:	ldreq	r0, [r5, #32]
   14fbc:	tst	r3, #16
   14fc0:	beq	14ffc <__assert_fail@plt+0x343c>
   14fc4:	tst	r3, #1
   14fc8:	bne	14ff0 <__assert_fail@plt+0x3430>
   14fcc:	mov	r2, #32768	; 0x8000
   14fd0:	b	14ffc <__assert_fail@plt+0x343c>
   14fd4:	ldr	r0, [sl, #12]
   14fd8:	bl	11b9c <closedir@plt>
   14fdc:	mov	r6, #0
   14fe0:	str	r6, [sl, #12]
   14fe4:	cmp	r4, #3
   14fe8:	beq	15044 <__assert_fail@plt+0x3484>
   14fec:	b	159dc <__assert_fail@plt+0x3e1c>
   14ff0:	ldr	r3, [sl, #48]	; 0x30
   14ff4:	cmp	r3, #0
   14ff8:	movne	r2, #32768	; 0x8000
   14ffc:	sub	r3, fp, #32
   15000:	bl	17d04 <lchmod@@Base+0x74c>
   15004:	cmp	r0, #0
   15008:	str	r0, [sl, #12]
   1500c:	beq	15038 <__assert_fail@plt+0x3478>
   15010:	ldrh	r0, [sl, #56]	; 0x38
   15014:	cmp	r0, #11
   15018:	bne	15064 <__assert_fail@plt+0x34a4>
   1501c:	mov	r0, r5
   15020:	mov	r1, sl
   15024:	mov	r2, #0
   15028:	bl	13e78 <__assert_fail@plt+0x22b8>
   1502c:	strh	r0, [sl, #56]	; 0x38
   15030:	mov	r7, r5
   15034:	b	15130 <__assert_fail@plt+0x3570>
   15038:	mov	r6, #0
   1503c:	cmp	r4, #3
   15040:	bne	159dc <__assert_fail@plt+0x3e1c>
   15044:	mov	r0, #4
   15048:	strh	r0, [sl, #56]	; 0x38
   1504c:	bl	11a04 <__errno_location@plt>
   15050:	ldr	r0, [r0]
   15054:	str	r0, [sl, #32]
   15058:	mov	r0, r6
   1505c:	sub	sp, fp, #28
   15060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15064:	ldrb	r0, [r5, #49]	; 0x31
   15068:	mov	r7, r5
   1506c:	tst	r0, #1
   15070:	beq	15130 <__assert_fail@plt+0x3570>
   15074:	mov	r0, r7
   15078:	mov	r1, sl
   1507c:	add	r8, sl, #64	; 0x40
   15080:	bl	14ba8 <__assert_fail@plt+0x2fe8>
   15084:	mov	r0, r7
   15088:	mov	r1, sl
   1508c:	mov	r2, #0
   15090:	bl	13e78 <__assert_fail@plt+0x22b8>
   15094:	ldrh	r0, [r7, #48]	; 0x30
   15098:	movw	r1, #258	; 0x102
   1509c:	tst	r0, r1
   150a0:	beq	15114 <__assert_fail@plt+0x3554>
   150a4:	mov	r0, #24
   150a8:	bl	1ba3c <lchmod@@Base+0x4484>
   150ac:	cmp	r0, #0
   150b0:	beq	151d8 <__assert_fail@plt+0x3618>
   150b4:	ldrd	r2, [r8]
   150b8:	mov	r5, r0
   150bc:	add	r0, sl, #160	; 0xa0
   150c0:	ldr	r7, [fp, #-44]	; 0xffffffd4
   150c4:	stm	r5, {r2, r3}
   150c8:	add	r2, r5, #8
   150cc:	ldrd	r0, [r0]
   150d0:	stm	r2, {r0, r1, sl}
   150d4:	mov	r1, r5
   150d8:	ldr	r0, [r7, #56]	; 0x38
   150dc:	bl	17130 <__assert_fail@plt+0x5570>
   150e0:	cmp	r0, r5
   150e4:	beq	15130 <__assert_fail@plt+0x3570>
   150e8:	mov	r8, r0
   150ec:	mov	r0, r5
   150f0:	bl	137a0 <__assert_fail@plt+0x1be0>
   150f4:	cmp	r8, #0
   150f8:	beq	151d8 <__assert_fail@plt+0x3618>
   150fc:	ldr	r7, [fp, #-44]	; 0xffffffd4
   15100:	ldr	r0, [r8, #16]
   15104:	mov	r1, #2
   15108:	strh	r1, [sl, #56]	; 0x38
   1510c:	str	r0, [sl]
   15110:	b	15130 <__assert_fail@plt+0x3570>
   15114:	ldr	r0, [r7, #56]	; 0x38
   15118:	mov	r1, r8
   1511c:	bl	1bbf8 <lchmod@@Base+0x4640>
   15120:	cmp	r0, #0
   15124:	movne	r0, #2
   15128:	strhne	r0, [sl, #56]	; 0x38
   1512c:	strne	sl, [sl]
   15130:	mov	r1, r7
   15134:	mov	r5, r7
   15138:	str	r4, [sp, #4]
   1513c:	str	r6, [sp, #12]
   15140:	ldr	r0, [r1, #44]!	; 0x2c
   15144:	str	r1, [sp, #20]
   15148:	mvn	r1, #0
   1514c:	cmp	r0, #0
   15150:	movweq	r1, #34464	; 0x86a0
   15154:	movteq	r1, #1
   15158:	cmp	r4, #2
   1515c:	str	r1, [sp, #32]
   15160:	bne	1517c <__assert_fail@plt+0x35bc>
   15164:	mov	r7, #1
   15168:	cmp	r4, #3
   1516c:	bne	152cc <__assert_fail@plt+0x370c>
   15170:	sub	r0, r4, #3
   15174:	mov	r5, #0
   15178:	b	15210 <__assert_fail@plt+0x3650>
   1517c:	ldr	r0, [r5, #48]	; 0x30
   15180:	and	r0, r0, #56	; 0x38
   15184:	cmp	r0, #24
   15188:	bne	15208 <__assert_fail@plt+0x3648>
   1518c:	ldr	r0, [sl, #84]	; 0x54
   15190:	cmp	r0, #2
   15194:	bne	15208 <__assert_fail@plt+0x3648>
   15198:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1519c:	mov	r0, sl
   151a0:	bl	15e60 <__assert_fail@plt+0x42a0>
   151a4:	movw	r1, #26984	; 0x6968
   151a8:	cmp	r0, r1
   151ac:	ble	151f4 <__assert_fail@plt+0x3634>
   151b0:	movw	r1, #26985	; 0x6969
   151b4:	cmp	r0, r1
   151b8:	movwne	r1, #16719	; 0x414f
   151bc:	movtne	r1, #21318	; 0x5346
   151c0:	cmpne	r0, r1
   151c4:	beq	15208 <__assert_fail@plt+0x3648>
   151c8:	movw	r1, #40864	; 0x9fa0
   151cc:	cmp	r0, r1
   151d0:	beq	15208 <__assert_fail@plt+0x3648>
   151d4:	b	15164 <__assert_fail@plt+0x35a4>
   151d8:	bl	11a04 <__errno_location@plt>
   151dc:	mov	r1, #12
   151e0:	mov	r6, #0
   151e4:	str	r1, [r0]
   151e8:	mov	r0, r6
   151ec:	sub	sp, fp, #28
   151f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151f4:	movw	r1, #19778	; 0x4d42
   151f8:	movt	r1, #65363	; 0xff53
   151fc:	cmp	r0, r1
   15200:	cmpne	r0, #0
   15204:	bne	15164 <__assert_fail@plt+0x35a4>
   15208:	sub	r0, r4, #3
   1520c:	mov	r5, #1
   15210:	clz	r0, r0
   15214:	lsr	r7, r0, #5
   15218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1521c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15220:	ldrb	r0, [r0, #49]	; 0x31
   15224:	tst	r0, #2
   15228:	beq	15244 <__assert_fail@plt+0x3684>
   1522c:	mov	r0, r2
   15230:	movw	r1, #1030	; 0x406
   15234:	mov	r2, #3
   15238:	bl	1bd68 <lchmod@@Base+0x47b0>
   1523c:	mov	r2, r0
   15240:	str	r0, [fp, #-32]	; 0xffffffe0
   15244:	cmp	r2, #0
   15248:	bmi	15264 <__assert_fail@plt+0x36a4>
   1524c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15250:	mov	r1, sl
   15254:	mov	r3, #0
   15258:	bl	14c84 <__assert_fail@plt+0x30c4>
   1525c:	cmp	r0, #0
   15260:	beq	152c4 <__assert_fail@plt+0x3704>
   15264:	and	r0, r7, r5
   15268:	cmp	r0, #1
   1526c:	bne	1527c <__assert_fail@plt+0x36bc>
   15270:	bl	11a04 <__errno_location@plt>
   15274:	ldr	r0, [r0]
   15278:	str	r0, [sl, #32]
   1527c:	ldrh	r0, [sl, #58]	; 0x3a
   15280:	orr	r0, r0, #1
   15284:	strh	r0, [sl, #58]	; 0x3a
   15288:	ldr	r0, [sl, #12]
   1528c:	bl	11b9c <closedir@plt>
   15290:	ldr	r5, [fp, #-44]	; 0xffffffd4
   15294:	mov	r4, #0
   15298:	str	r4, [sl, #12]
   1529c:	ldrb	r0, [r5, #49]	; 0x31
   152a0:	tst	r0, #2
   152a4:	beq	152b8 <__assert_fail@plt+0x36f8>
   152a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   152ac:	cmp	r0, #0
   152b0:	bmi	152b8 <__assert_fail@plt+0x36f8>
   152b4:	bl	11b6c <close@plt>
   152b8:	mov	r7, #1
   152bc:	str	r4, [sl, #12]
   152c0:	b	152cc <__assert_fail@plt+0x370c>
   152c4:	ldr	r5, [fp, #-44]	; 0xffffffd4
   152c8:	mov	r7, #0
   152cc:	ldr	r0, [sl, #40]	; 0x28
   152d0:	ldr	r1, [sl, #28]
   152d4:	mov	r9, #0
   152d8:	sub	r2, r0, #1
   152dc:	ldrb	r1, [r1, r2]
   152e0:	cmp	r1, #47	; 0x2f
   152e4:	ldrb	r1, [r5, #48]	; 0x30
   152e8:	moveq	r0, r2
   152ec:	tst	r1, #4
   152f0:	mov	r1, #0
   152f4:	str	r1, [sp, #40]	; 0x28
   152f8:	beq	15310 <__assert_fail@plt+0x3750>
   152fc:	ldr	r1, [r5, #24]
   15300:	mov	r2, #47	; 0x2f
   15304:	strb	r2, [r1, r0]!
   15308:	add	r1, r1, #1
   1530c:	str	r1, [sp, #40]	; 0x28
   15310:	ldr	r6, [sl, #12]
   15314:	add	r1, r0, #1
   15318:	str	r1, [fp, #-40]	; 0xffffffd8
   1531c:	cmp	r6, #0
   15320:	beq	156e8 <__assert_fail@plt+0x3b28>
   15324:	ldr	r0, [sl, #48]	; 0x30
   15328:	str	r7, [sp]
   1532c:	mov	r7, #0
   15330:	add	r0, r0, #1
   15334:	str	r0, [sp, #24]
   15338:	ldr	r0, [r5, #36]	; 0x24
   1533c:	sub	r0, r0, r1
   15340:	str	r0, [sp, #44]	; 0x2c
   15344:	bl	11a04 <__errno_location@plt>
   15348:	str	r0, [sp, #36]	; 0x24
   1534c:	mov	r0, #0
   15350:	mov	r9, #0
   15354:	mov	r4, #0
   15358:	str	sl, [sp, #28]
   1535c:	str	r0, [sp, #48]	; 0x30
   15360:	mov	r0, #0
   15364:	str	r0, [sp, #8]
   15368:	mov	r0, #0
   1536c:	str	r0, [sp, #16]
   15370:	ldr	r0, [sp, #36]	; 0x24
   15374:	str	r7, [r0]
   15378:	mov	r0, r6
   1537c:	bl	11aac <readdir64@plt>
   15380:	cmp	r0, #0
   15384:	beq	15764 <__assert_fail@plt+0x3ba4>
   15388:	mov	r8, r0
   1538c:	ldrb	r0, [r5, #48]	; 0x30
   15390:	tst	r0, #32
   15394:	bne	153c4 <__assert_fail@plt+0x3804>
   15398:	ldrb	r0, [r8, #19]
   1539c:	cmp	r0, #46	; 0x2e
   153a0:	bne	153c4 <__assert_fail@plt+0x3804>
   153a4:	ldrb	r0, [r8, #20]
   153a8:	cmp	r0, #0
   153ac:	beq	15680 <__assert_fail@plt+0x3ac0>
   153b0:	cmp	r0, #46	; 0x2e
   153b4:	bne	153c4 <__assert_fail@plt+0x3804>
   153b8:	ldrb	r0, [r8, #21]
   153bc:	cmp	r0, #0
   153c0:	beq	15680 <__assert_fail@plt+0x3ac0>
   153c4:	str	r4, [fp, #-36]	; 0xffffffdc
   153c8:	add	r4, r8, #19
   153cc:	mov	r0, r4
   153d0:	bl	119c8 <strlen@plt>
   153d4:	mov	r5, r0
   153d8:	add	r0, r0, #176	; 0xb0
   153dc:	bic	r0, r0, #7
   153e0:	bl	1ba3c <lchmod@@Base+0x4484>
   153e4:	mov	r6, r0
   153e8:	cmp	r0, #0
   153ec:	beq	15a48 <__assert_fail@plt+0x3e88>
   153f0:	add	sl, r6, #168	; 0xa8
   153f4:	mov	r1, r4
   153f8:	mov	r2, r5
   153fc:	mov	r0, sl
   15400:	bl	11830 <memcpy@plt>
   15404:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15408:	strb	r7, [sl, r5]
   1540c:	str	r5, [r6, #52]	; 0x34
   15410:	mov	r0, #196608	; 0x30000
   15414:	ldr	r1, [sp, #44]	; 0x2c
   15418:	str	r2, [r6, #44]	; 0x2c
   1541c:	cmp	r5, r1
   15420:	ldr	r4, [r2, #24]
   15424:	str	r7, [r6, #12]
   15428:	str	r7, [r6, #16]
   1542c:	str	r7, [r6, #20]
   15430:	str	r0, [r6, #58]	; 0x3a
   15434:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15438:	str	r4, [r6, #28]
   1543c:	str	r7, [r6, #32]
   15440:	add	r7, r5, r0
   15444:	bcs	15458 <__assert_fail@plt+0x3898>
   15448:	mov	r5, r2
   1544c:	cmp	r7, r0
   15450:	bcs	154d0 <__assert_fail@plt+0x3910>
   15454:	b	15928 <__assert_fail@plt+0x3d68>
   15458:	ldr	r1, [r2, #36]	; 0x24
   1545c:	movw	r0, #257	; 0x101
   15460:	mov	r5, r2
   15464:	add	r0, r7, r0
   15468:	adds	r1, r0, r1
   1546c:	bcs	15a14 <__assert_fail@plt+0x3e54>
   15470:	mov	r0, r4
   15474:	str	r1, [r5, #36]	; 0x24
   15478:	bl	1ba6c <lchmod@@Base+0x44b4>
   1547c:	cmp	r0, #0
   15480:	beq	15a34 <__assert_fail@plt+0x3e74>
   15484:	cmp	r0, r4
   15488:	str	r0, [r5, #24]
   1548c:	beq	154b4 <__assert_fail@plt+0x38f4>
   15490:	ldrb	r1, [r5, #48]	; 0x30
   15494:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15498:	tst	r1, #4
   1549c:	ldr	r1, [sp, #40]	; 0x28
   154a0:	addne	r1, r0, r2
   154a4:	mov	r0, #1
   154a8:	str	r1, [sp, #40]	; 0x28
   154ac:	str	r0, [sp, #16]
   154b0:	b	154b8 <__assert_fail@plt+0x38f8>
   154b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   154b8:	ldr	r0, [r5, #36]	; 0x24
   154bc:	sub	r0, r0, r2
   154c0:	str	r0, [sp, #44]	; 0x2c
   154c4:	mov	r0, r2
   154c8:	cmp	r7, r0
   154cc:	bcc	15928 <__assert_fail@plt+0x3d68>
   154d0:	ldr	r0, [sp, #24]
   154d4:	add	r4, r6, #112	; 0x70
   154d8:	str	r0, [r6, #48]	; 0x30
   154dc:	ldr	r0, [r5]
   154e0:	str	r7, [r6, #40]	; 0x28
   154e4:	str	r0, [r6, #4]
   154e8:	ldrd	r0, [r8]
   154ec:	strd	r0, [r4, #48]	; 0x30
   154f0:	ldrb	r0, [r5, #48]	; 0x30
   154f4:	tst	r0, #4
   154f8:	bne	15504 <__assert_fail@plt+0x3944>
   154fc:	str	sl, [r6, #24]
   15500:	b	15520 <__assert_fail@plt+0x3960>
   15504:	ldr	r0, [r6, #28]
   15508:	ldr	r1, [r6, #52]	; 0x34
   1550c:	str	r0, [r6, #24]
   15510:	ldr	r0, [sp, #40]	; 0x28
   15514:	add	r2, r1, #1
   15518:	mov	r1, sl
   1551c:	bl	11800 <memmove@plt>
   15520:	ldr	r0, [r5, #44]	; 0x2c
   15524:	ldr	r2, [r5, #48]	; 0x30
   15528:	ldr	sl, [sp, #28]
   1552c:	mov	r7, #0
   15530:	cmp	r0, #0
   15534:	beq	155dc <__assert_fail@plt+0x3a1c>
   15538:	ands	r0, r2, #1024	; 0x400
   1553c:	bne	155dc <__assert_fail@plt+0x3a1c>
   15540:	mov	r0, r5
   15544:	mov	r1, r6
   15548:	mov	r2, #0
   1554c:	bl	13e78 <__assert_fail@plt+0x22b8>
   15550:	strh	r0, [r6, #56]	; 0x38
   15554:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15558:	cmp	r9, #0
   1555c:	str	r7, [r6, #8]
   15560:	beq	1565c <__assert_fail@plt+0x3a9c>
   15564:	ldr	r0, [sp, #48]	; 0x30
   15568:	str	r6, [r0, #8]
   1556c:	movw	r0, #10000	; 0x2710
   15570:	cmp	r4, r0
   15574:	bne	1566c <__assert_fail@plt+0x3aac>
   15578:	ldr	r0, [sp, #20]
   1557c:	ldr	r0, [r0]
   15580:	cmp	r0, #0
   15584:	bne	1566c <__assert_fail@plt+0x3aac>
   15588:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1558c:	mov	r0, sl
   15590:	bl	15e60 <__assert_fail@plt+0x42a0>
   15594:	mov	r1, #0
   15598:	str	r1, [sp, #8]
   1559c:	movw	r1, #19778	; 0x4d42
   155a0:	movt	r1, #65363	; 0xff53
   155a4:	cmp	r0, r1
   155a8:	movwne	r1, #26985	; 0x6969
   155ac:	cmpne	r0, r1
   155b0:	beq	1566c <__assert_fail@plt+0x3aac>
   155b4:	movw	r1, #6548	; 0x1994
   155b8:	movt	r1, #258	; 0x102
   155bc:	cmp	r0, r1
   155c0:	movne	r0, #1
   155c4:	strne	r0, [sp, #8]
   155c8:	ldr	r0, [sp, #32]
   155cc:	add	r4, r4, #1
   155d0:	cmp	r0, r4
   155d4:	bhi	1567c <__assert_fail@plt+0x3abc>
   155d8:	b	1568c <__assert_fail@plt+0x3acc>
   155dc:	ldrb	r3, [r8, #18]
   155e0:	mov	r0, #0
   155e4:	tst	r2, #8
   155e8:	mov	r1, #0
   155ec:	beq	15610 <__assert_fail@plt+0x3a50>
   155f0:	orr	r1, r3, #4
   155f4:	cmp	r1, #4
   155f8:	mov	r1, #0
   155fc:	beq	15610 <__assert_fail@plt+0x3a50>
   15600:	eor	r1, r3, #10
   15604:	and	r2, r2, #16
   15608:	orrs	r1, r2, r1
   1560c:	movwne	r1, #1
   15610:	mov	r2, #11
   15614:	strh	r2, [r6, #56]	; 0x38
   15618:	sub	r2, r3, #1
   1561c:	uxtb	r3, r2
   15620:	cmp	r3, #11
   15624:	bhi	15638 <__assert_fail@plt+0x3a78>
   15628:	sxtb	r0, r2
   1562c:	movw	r2, #52608	; 0xcd80
   15630:	movt	r2, #1
   15634:	ldr	r0, [r2, r0, lsl #2]
   15638:	cmp	r1, #0
   1563c:	str	r0, [r6, #80]	; 0x50
   15640:	mov	r0, #2
   15644:	movwne	r0, #1
   15648:	stm	r4, {r0, r7}
   1564c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15650:	cmp	r9, #0
   15654:	str	r7, [r6, #8]
   15658:	bne	15564 <__assert_fail@plt+0x39a4>
   1565c:	mov	r9, r6
   15660:	movw	r0, #10000	; 0x2710
   15664:	cmp	r4, r0
   15668:	beq	15578 <__assert_fail@plt+0x39b8>
   1566c:	ldr	r0, [sp, #32]
   15670:	add	r4, r4, #1
   15674:	cmp	r0, r4
   15678:	bls	1568c <__assert_fail@plt+0x3acc>
   1567c:	str	r6, [sp, #48]	; 0x30
   15680:	ldr	r6, [sl, #12]
   15684:	cmp	r6, #0
   15688:	bne	15370 <__assert_fail@plt+0x37b0>
   1568c:	ldr	r0, [sp, #16]
   15690:	ldr	r7, [sp]
   15694:	ldr	r6, [sp, #8]
   15698:	tst	r0, #1
   1569c:	beq	157b8 <__assert_fail@plt+0x3bf8>
   156a0:	ldr	r1, [r5, #4]
   156a4:	ldr	r0, [r5, #24]
   156a8:	cmp	r1, #0
   156ac:	bne	156c4 <__assert_fail@plt+0x3b04>
   156b0:	b	15700 <__assert_fail@plt+0x3b40>
   156b4:	str	r0, [r1, #28]
   156b8:	ldr	r1, [r1, #8]
   156bc:	cmp	r1, #0
   156c0:	beq	15700 <__assert_fail@plt+0x3b40>
   156c4:	ldr	r2, [r1, #24]
   156c8:	add	r3, r1, #168	; 0xa8
   156cc:	cmp	r2, r3
   156d0:	beq	156b4 <__assert_fail@plt+0x3af4>
   156d4:	ldr	r3, [r1, #28]
   156d8:	sub	r2, r2, r3
   156dc:	add	r2, r0, r2
   156e0:	str	r2, [r1, #24]
   156e4:	b	156b4 <__assert_fail@plt+0x3af4>
   156e8:	mov	r4, #0
   156ec:	mov	r6, #0
   156f0:	ldrb	r0, [r5, #48]	; 0x30
   156f4:	tst	r0, #4
   156f8:	bne	157c4 <__assert_fail@plt+0x3c04>
   156fc:	b	157ec <__assert_fail@plt+0x3c2c>
   15700:	ldr	r1, [r9, #48]	; 0x30
   15704:	cmp	r1, #0
   15708:	bmi	157b8 <__assert_fail@plt+0x3bf8>
   1570c:	mov	r1, r9
   15710:	ldr	r2, [r1, #24]
   15714:	add	r3, r1, #168	; 0xa8
   15718:	cmp	r2, r3
   1571c:	bne	15750 <__assert_fail@plt+0x3b90>
   15720:	str	r0, [r1, #28]
   15724:	ldr	r2, [r1, #8]
   15728:	cmp	r2, #0
   1572c:	ldreq	r2, [r1, #4]
   15730:	ldr	r1, [r2, #48]	; 0x30
   15734:	cmn	r1, #1
   15738:	mov	r1, r2
   1573c:	ble	157b8 <__assert_fail@plt+0x3bf8>
   15740:	ldr	r2, [r1, #24]
   15744:	add	r3, r1, #168	; 0xa8
   15748:	cmp	r2, r3
   1574c:	beq	15720 <__assert_fail@plt+0x3b60>
   15750:	ldr	r3, [r1, #28]
   15754:	sub	r2, r2, r3
   15758:	add	r2, r0, r2
   1575c:	str	r2, [r1, #24]
   15760:	b	15720 <__assert_fail@plt+0x3b60>
   15764:	ldr	r0, [sp, #36]	; 0x24
   15768:	ldr	r0, [r0]
   1576c:	cmp	r0, #0
   15770:	beq	1578c <__assert_fail@plt+0x3bcc>
   15774:	str	r0, [sl, #32]
   15778:	ldr	r0, [sp, #12]
   1577c:	orrs	r0, r0, r4
   15780:	mov	r0, #4
   15784:	movwne	r0, #7
   15788:	strh	r0, [sl, #56]	; 0x38
   1578c:	ldr	r0, [sl, #12]
   15790:	ldr	r6, [sp, #8]
   15794:	cmp	r0, #0
   15798:	beq	157a8 <__assert_fail@plt+0x3be8>
   1579c:	bl	11b9c <closedir@plt>
   157a0:	mov	r0, #0
   157a4:	str	r0, [sl, #12]
   157a8:	ldr	r0, [sp, #16]
   157ac:	ldr	r7, [sp]
   157b0:	tst	r0, #1
   157b4:	bne	156a0 <__assert_fail@plt+0x3ae0>
   157b8:	ldrb	r0, [r5, #48]	; 0x30
   157bc:	tst	r0, #4
   157c0:	beq	157ec <__assert_fail@plt+0x3c2c>
   157c4:	ldr	r2, [sp, #40]	; 0x28
   157c8:	ldr	r0, [r5, #36]	; 0x24
   157cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   157d0:	cmp	r3, r0
   157d4:	sub	r1, r2, #1
   157d8:	mov	r0, #0
   157dc:	moveq	r2, r1
   157e0:	cmp	r4, #0
   157e4:	moveq	r2, r1
   157e8:	strb	r0, [r2]
   157ec:	ldr	r0, [sp, #12]
   157f0:	cmp	r0, #0
   157f4:	movwne	r0, #1
   157f8:	orrs	r0, r0, r7
   157fc:	beq	15864 <__assert_fail@plt+0x3ca4>
   15800:	cmp	r4, #0
   15804:	bne	158a4 <__assert_fail@plt+0x3ce4>
   15808:	ldr	r0, [sp, #4]
   1580c:	cmp	r0, #3
   15810:	bne	15828 <__assert_fail@plt+0x3c68>
   15814:	ldrh	r0, [sl, #56]	; 0x38
   15818:	cmp	r0, #4
   1581c:	cmpne	r0, #7
   15820:	movne	r0, #6
   15824:	strhne	r0, [sl, #56]	; 0x38
   15828:	mov	r6, #0
   1582c:	cmp	r9, #0
   15830:	bne	1584c <__assert_fail@plt+0x3c8c>
   15834:	b	159dc <__assert_fail@plt+0x3e1c>
   15838:	mov	r0, r9
   1583c:	bl	137a0 <__assert_fail@plt+0x1be0>
   15840:	cmp	r4, #0
   15844:	mov	r9, r4
   15848:	beq	159dc <__assert_fail@plt+0x3e1c>
   1584c:	ldrd	r4, [r9, #8]
   15850:	cmp	r5, #0
   15854:	beq	15838 <__assert_fail@plt+0x3c78>
   15858:	mov	r0, r5
   1585c:	bl	11b9c <closedir@plt>
   15860:	b	15838 <__assert_fail@plt+0x3c78>
   15864:	ldr	r0, [sp, #4]
   15868:	cmp	r0, #1
   1586c:	cmpne	r4, #0
   15870:	bne	158a4 <__assert_fail@plt+0x3ce4>
   15874:	ldr	r0, [sl, #48]	; 0x30
   15878:	cmp	r0, #0
   1587c:	beq	159ac <__assert_fail@plt+0x3dec>
   15880:	ldr	r1, [sl, #4]
   15884:	movw	r3, #52602	; 0xcd7a
   15888:	mov	r0, r5
   1588c:	mvn	r2, #0
   15890:	movt	r3, #1
   15894:	bl	14c84 <__assert_fail@plt+0x30c4>
   15898:	cmp	r0, #0
   1589c:	bne	159bc <__assert_fail@plt+0x3dfc>
   158a0:	b	15800 <__assert_fail@plt+0x3c40>
   158a4:	tst	r6, #1
   158a8:	beq	158e0 <__assert_fail@plt+0x3d20>
   158ac:	movw	r0, #24104	; 0x5e28
   158b0:	mov	r1, r9
   158b4:	mov	r2, r4
   158b8:	movt	r0, #1
   158bc:	str	r0, [r5, #44]	; 0x2c
   158c0:	mov	r0, r5
   158c4:	bl	14010 <__assert_fail@plt+0x2450>
   158c8:	mov	r6, r0
   158cc:	mov	r0, #0
   158d0:	str	r0, [r5, #44]	; 0x2c
   158d4:	mov	r0, r6
   158d8:	sub	sp, fp, #28
   158dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158e0:	cmp	r4, #2
   158e4:	bcc	15918 <__assert_fail@plt+0x3d58>
   158e8:	ldr	r0, [sp, #20]
   158ec:	ldr	r0, [r0]
   158f0:	cmp	r0, #0
   158f4:	beq	15918 <__assert_fail@plt+0x3d58>
   158f8:	mov	r0, r5
   158fc:	mov	r1, r9
   15900:	mov	r2, r4
   15904:	bl	14010 <__assert_fail@plt+0x2450>
   15908:	mov	r6, r0
   1590c:	mov	r0, r6
   15910:	sub	sp, fp, #28
   15914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15918:	mov	r6, r9
   1591c:	mov	r0, r6
   15920:	sub	sp, fp, #28
   15924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15928:	mov	r0, r6
   1592c:	bl	137a0 <__assert_fail@plt+0x1be0>
   15930:	ldr	r7, [sp, #28]
   15934:	cmp	r9, #0
   15938:	bne	15954 <__assert_fail@plt+0x3d94>
   1593c:	b	1596c <__assert_fail@plt+0x3dac>
   15940:	mov	r0, r9
   15944:	bl	137a0 <__assert_fail@plt+0x1be0>
   15948:	cmp	r4, #0
   1594c:	mov	r9, r4
   15950:	beq	1596c <__assert_fail@plt+0x3dac>
   15954:	ldrd	r4, [r9, #8]
   15958:	cmp	r5, #0
   1595c:	beq	15940 <__assert_fail@plt+0x3d80>
   15960:	mov	r0, r5
   15964:	bl	11b9c <closedir@plt>
   15968:	b	15940 <__assert_fail@plt+0x3d80>
   1596c:	ldr	r0, [r7, #12]
   15970:	bl	11b9c <closedir@plt>
   15974:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15978:	mov	r0, #7
   1597c:	mov	r6, #0
   15980:	strh	r0, [r7, #56]	; 0x38
   15984:	str	r6, [r7, #12]
   15988:	ldr	r0, [r1, #48]	; 0x30
   1598c:	orr	r0, r0, #8192	; 0x2000
   15990:	str	r0, [r1, #48]	; 0x30
   15994:	ldr	r1, [sp, #36]	; 0x24
   15998:	mov	r0, #36	; 0x24
   1599c:	str	r0, [r1]
   159a0:	mov	r0, r6
   159a4:	sub	sp, fp, #28
   159a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159ac:	mov	r0, r5
   159b0:	bl	15acc <__assert_fail@plt+0x3f0c>
   159b4:	cmp	r0, #0
   159b8:	beq	15800 <__assert_fail@plt+0x3c40>
   159bc:	mov	r0, #7
   159c0:	mov	r6, #0
   159c4:	cmp	r9, #0
   159c8:	strh	r0, [sl, #56]	; 0x38
   159cc:	ldr	r0, [r5, #48]	; 0x30
   159d0:	orr	r0, r0, #8192	; 0x2000
   159d4:	str	r0, [r5, #48]	; 0x30
   159d8:	bne	159fc <__assert_fail@plt+0x3e3c>
   159dc:	mov	r0, r6
   159e0:	sub	sp, fp, #28
   159e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159e8:	mov	r0, r9
   159ec:	bl	137a0 <__assert_fail@plt+0x1be0>
   159f0:	cmp	r4, #0
   159f4:	mov	r9, r4
   159f8:	beq	159dc <__assert_fail@plt+0x3e1c>
   159fc:	ldrd	r4, [r9, #8]
   15a00:	cmp	r5, #0
   15a04:	beq	159e8 <__assert_fail@plt+0x3e28>
   15a08:	mov	r0, r5
   15a0c:	bl	11b9c <closedir@plt>
   15a10:	b	159e8 <__assert_fail@plt+0x3e28>
   15a14:	mov	r0, r4
   15a18:	bl	137a0 <__assert_fail@plt+0x1be0>
   15a1c:	ldr	r1, [sp, #36]	; 0x24
   15a20:	mov	r0, #0
   15a24:	str	r0, [r5, #24]
   15a28:	mov	r0, #36	; 0x24
   15a2c:	str	r0, [r1]
   15a30:	b	15a44 <__assert_fail@plt+0x3e84>
   15a34:	ldr	r0, [r5, #24]
   15a38:	bl	137a0 <__assert_fail@plt+0x1be0>
   15a3c:	mov	r0, #0
   15a40:	str	r0, [r5, #24]
   15a44:	ldr	sl, [sp, #28]
   15a48:	ldr	r0, [sp, #36]	; 0x24
   15a4c:	ldr	r4, [r0]
   15a50:	mov	r0, r6
   15a54:	bl	137a0 <__assert_fail@plt+0x1be0>
   15a58:	ldr	r5, [fp, #-44]	; 0xffffffd4
   15a5c:	cmp	r9, #0
   15a60:	bne	15a7c <__assert_fail@plt+0x3ebc>
   15a64:	b	15a94 <__assert_fail@plt+0x3ed4>
   15a68:	mov	r0, r9
   15a6c:	bl	137a0 <__assert_fail@plt+0x1be0>
   15a70:	cmp	r6, #0
   15a74:	mov	r9, r6
   15a78:	beq	15a94 <__assert_fail@plt+0x3ed4>
   15a7c:	ldrd	r6, [r9, #8]
   15a80:	cmp	r7, #0
   15a84:	beq	15a68 <__assert_fail@plt+0x3ea8>
   15a88:	mov	r0, r7
   15a8c:	bl	11b9c <closedir@plt>
   15a90:	b	15a68 <__assert_fail@plt+0x3ea8>
   15a94:	ldr	r0, [sl, #12]
   15a98:	bl	11b9c <closedir@plt>
   15a9c:	mov	r0, #7
   15aa0:	mov	r6, #0
   15aa4:	strh	r0, [sl, #56]	; 0x38
   15aa8:	str	r6, [sl, #12]
   15aac:	ldr	r0, [r5, #48]	; 0x30
   15ab0:	orr	r0, r0, #8192	; 0x2000
   15ab4:	str	r0, [r5, #48]	; 0x30
   15ab8:	ldr	r0, [sp, #36]	; 0x24
   15abc:	str	r4, [r0]
   15ac0:	mov	r0, r6
   15ac4:	sub	sp, fp, #28
   15ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15acc:	push	{r4, r5, fp, lr}
   15ad0:	add	fp, sp, #8
   15ad4:	mov	r5, r0
   15ad8:	ldr	r0, [r0, #48]	; 0x30
   15adc:	mov	r4, #0
   15ae0:	tst	r0, #4
   15ae4:	bne	15b28 <__assert_fail@plt+0x3f68>
   15ae8:	tst	r0, #512	; 0x200
   15aec:	bne	15b08 <__assert_fail@plt+0x3f48>
   15af0:	ldr	r0, [r5, #28]
   15af4:	bl	11adc <fchdir@plt>
   15af8:	cmp	r0, #0
   15afc:	mov	r4, r0
   15b00:	movwne	r4, #1
   15b04:	b	15b28 <__assert_fail@plt+0x3f68>
   15b08:	ldr	r1, [r5, #32]
   15b0c:	add	r0, r5, #60	; 0x3c
   15b10:	bl	1751c <__assert_fail@plt+0x595c>
   15b14:	cmp	r0, #0
   15b18:	bmi	15b20 <__assert_fail@plt+0x3f60>
   15b1c:	bl	11b6c <close@plt>
   15b20:	mvn	r0, #99	; 0x63
   15b24:	str	r0, [r5, #32]
   15b28:	add	r5, r5, #60	; 0x3c
   15b2c:	mov	r0, r5
   15b30:	bl	17514 <__assert_fail@plt+0x5954>
   15b34:	cmp	r0, #0
   15b38:	bne	15b60 <__assert_fail@plt+0x3fa0>
   15b3c:	mov	r0, r5
   15b40:	bl	17568 <__assert_fail@plt+0x59a8>
   15b44:	cmp	r0, #0
   15b48:	bmi	15b2c <__assert_fail@plt+0x3f6c>
   15b4c:	bl	11b6c <close@plt>
   15b50:	mov	r0, r5
   15b54:	bl	17514 <__assert_fail@plt+0x5954>
   15b58:	cmp	r0, #0
   15b5c:	beq	15b3c <__assert_fail@plt+0x3f7c>
   15b60:	mov	r0, r4
   15b64:	pop	{r4, r5, fp, pc}
   15b68:	push	{fp, lr}
   15b6c:	mov	fp, sp
   15b70:	cmp	r2, #5
   15b74:	bcc	15b8c <__assert_fail@plt+0x3fcc>
   15b78:	bl	11a04 <__errno_location@plt>
   15b7c:	mov	r1, #22
   15b80:	str	r1, [r0]
   15b84:	mov	r0, #1
   15b88:	pop	{fp, pc}
   15b8c:	mov	r0, #0
   15b90:	strh	r2, [r1, #60]	; 0x3c
   15b94:	pop	{fp, pc}
   15b98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b9c:	add	fp, sp, #28
   15ba0:	sub	sp, sp, #4
   15ba4:	mov	r9, r0
   15ba8:	mvn	r0, #4096	; 0x1000
   15bac:	tst	r1, r0
   15bb0:	beq	15bd0 <__assert_fail@plt+0x4010>
   15bb4:	bl	11a04 <__errno_location@plt>
   15bb8:	mov	r1, #22
   15bbc:	mov	r5, #0
   15bc0:	str	r1, [r0]
   15bc4:	mov	r0, r5
   15bc8:	sub	sp, fp, #28
   15bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bd0:	ldr	r8, [r9]
   15bd4:	mov	r7, r1
   15bd8:	bl	11a04 <__errno_location@plt>
   15bdc:	mov	r5, #0
   15be0:	mov	sl, r0
   15be4:	str	r5, [r0]
   15be8:	ldrb	r0, [r9, #49]	; 0x31
   15bec:	tst	r0, #32
   15bf0:	bne	15c08 <__assert_fail@plt+0x4048>
   15bf4:	ldrh	r0, [r8, #56]	; 0x38
   15bf8:	cmp	r0, #1
   15bfc:	beq	15c14 <__assert_fail@plt+0x4054>
   15c00:	cmp	r0, #9
   15c04:	ldreq	r5, [r8, #8]
   15c08:	mov	r0, r5
   15c0c:	sub	sp, fp, #28
   15c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c14:	ldr	r6, [r9, #4]
   15c18:	cmp	r6, #0
   15c1c:	bne	15c38 <__assert_fail@plt+0x4078>
   15c20:	b	15c54 <__assert_fail@plt+0x4094>
   15c24:	mov	r0, r6
   15c28:	bl	137a0 <__assert_fail@plt+0x1be0>
   15c2c:	cmp	r4, #0
   15c30:	mov	r6, r4
   15c34:	beq	15c54 <__assert_fail@plt+0x4094>
   15c38:	ldr	r1, [r6, #12]
   15c3c:	ldr	r4, [r6, #8]
   15c40:	cmp	r1, #0
   15c44:	beq	15c24 <__assert_fail@plt+0x4064>
   15c48:	mov	r0, r1
   15c4c:	bl	11b9c <closedir@plt>
   15c50:	b	15c24 <__assert_fail@plt+0x4064>
   15c54:	mov	r4, #1
   15c58:	cmp	r7, #4096	; 0x1000
   15c5c:	bne	15c70 <__assert_fail@plt+0x40b0>
   15c60:	ldr	r0, [r9, #48]	; 0x30
   15c64:	mov	r4, #2
   15c68:	orr	r0, r0, #4096	; 0x1000
   15c6c:	str	r0, [r9, #48]	; 0x30
   15c70:	ldr	r0, [r8, #48]	; 0x30
   15c74:	cmp	r0, #0
   15c78:	bne	15cd0 <__assert_fail@plt+0x4110>
   15c7c:	ldr	r0, [r8, #24]
   15c80:	ldrb	r0, [r0]
   15c84:	cmp	r0, #47	; 0x2f
   15c88:	beq	15cd0 <__assert_fail@plt+0x4110>
   15c8c:	ldr	r0, [r9, #48]	; 0x30
   15c90:	tst	r0, #4
   15c94:	bne	15cd0 <__assert_fail@plt+0x4110>
   15c98:	mov	r1, #32768	; 0x8000
   15c9c:	tst	r0, #512	; 0x200
   15ca0:	and	r1, r1, r0, lsl #11
   15ca4:	orr	r1, r1, #18688	; 0x4900
   15ca8:	orr	r2, r1, #524288	; 0x80000
   15cac:	bne	15cf0 <__assert_fail@plt+0x4130>
   15cb0:	movw	r0, #52603	; 0xcd7b
   15cb4:	mov	r1, r2
   15cb8:	movt	r0, #1
   15cbc:	bl	1bf48 <lchmod@@Base+0x4990>
   15cc0:	mov	r8, r0
   15cc4:	cmn	r0, #1
   15cc8:	bgt	15d0c <__assert_fail@plt+0x414c>
   15ccc:	b	15d54 <__assert_fail@plt+0x4194>
   15cd0:	mov	r0, r9
   15cd4:	mov	r1, r4
   15cd8:	bl	14f34 <__assert_fail@plt+0x3374>
   15cdc:	mov	r5, r0
   15ce0:	str	r0, [r9, #4]
   15ce4:	mov	r0, r5
   15ce8:	sub	sp, fp, #28
   15cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cf0:	ldr	r0, [r9, #32]
   15cf4:	movw	r1, #52603	; 0xcd7b
   15cf8:	movt	r1, #1
   15cfc:	bl	17ccc <lchmod@@Base+0x714>
   15d00:	mov	r8, r0
   15d04:	cmn	r0, #1
   15d08:	ble	15d54 <__assert_fail@plt+0x4194>
   15d0c:	mov	r0, r9
   15d10:	mov	r1, r4
   15d14:	bl	14f34 <__assert_fail@plt+0x3374>
   15d18:	str	r0, [r9, #4]
   15d1c:	ldrb	r0, [r9, #49]	; 0x31
   15d20:	tst	r0, #2
   15d24:	bne	15d68 <__assert_fail@plt+0x41a8>
   15d28:	mov	r0, r8
   15d2c:	bl	11adc <fchdir@plt>
   15d30:	cmp	r0, #0
   15d34:	beq	15da4 <__assert_fail@plt+0x41e4>
   15d38:	ldr	r4, [sl]
   15d3c:	mov	r0, r8
   15d40:	bl	11b6c <close@plt>
   15d44:	str	r4, [sl]
   15d48:	mov	r0, r5
   15d4c:	sub	sp, fp, #28
   15d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d54:	mov	r5, #0
   15d58:	str	r5, [r9, #4]
   15d5c:	mov	r0, r5
   15d60:	sub	sp, fp, #28
   15d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d68:	ldr	r1, [r9, #32]
   15d6c:	cmp	r1, r8
   15d70:	bne	15d7c <__assert_fail@plt+0x41bc>
   15d74:	cmn	r1, #100	; 0x64
   15d78:	bne	15dbc <__assert_fail@plt+0x41fc>
   15d7c:	add	r0, r9, #60	; 0x3c
   15d80:	bl	1751c <__assert_fail@plt+0x595c>
   15d84:	cmp	r0, #0
   15d88:	bmi	15d90 <__assert_fail@plt+0x41d0>
   15d8c:	bl	11b6c <close@plt>
   15d90:	str	r8, [r9, #32]
   15d94:	ldr	r5, [r9, #4]
   15d98:	mov	r0, r5
   15d9c:	sub	sp, fp, #28
   15da0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15da4:	mov	r0, r8
   15da8:	bl	11b6c <close@plt>
   15dac:	ldr	r5, [r9, #4]
   15db0:	mov	r0, r5
   15db4:	sub	sp, fp, #28
   15db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15dbc:	bl	11b60 <abort@plt>
   15dc0:	push	{fp, lr}
   15dc4:	mov	fp, sp
   15dc8:	mov	r2, r1
   15dcc:	ldrd	r0, [r0, #8]
   15dd0:	mov	r3, #0
   15dd4:	bl	1c2bc <lchmod@@Base+0x4d04>
   15dd8:	mov	r0, r2
   15ddc:	pop	{fp, pc}
   15de0:	push	{r4, r5, fp, lr}
   15de4:	add	fp, sp, #8
   15de8:	ldrd	r2, [r1, #8]
   15dec:	ldrd	r4, [r0, #8]
   15df0:	eor	r3, r5, r3
   15df4:	eor	r2, r4, r2
   15df8:	orrs	r2, r2, r3
   15dfc:	mov	r2, #0
   15e00:	bne	15e20 <__assert_fail@plt+0x4260>
   15e04:	ldrd	r2, [r1]
   15e08:	ldrd	r0, [r0]
   15e0c:	eor	r1, r1, r3
   15e10:	eor	r0, r0, r2
   15e14:	orr	r0, r0, r1
   15e18:	clz	r0, r0
   15e1c:	lsr	r2, r0, #5
   15e20:	mov	r0, r2
   15e24:	pop	{r4, r5, fp, pc}
   15e28:	push	{r4, r5, fp, lr}
   15e2c:	add	fp, sp, #8
   15e30:	ldr	r0, [r0]
   15e34:	ldrd	r2, [r0, #160]	; 0xa0
   15e38:	ldr	r0, [r1]
   15e3c:	ldrd	r4, [r0, #160]	; 0xa0
   15e40:	mov	r0, #0
   15e44:	subs	r1, r4, r2
   15e48:	sbcs	r1, r5, r3
   15e4c:	movwcc	r0, #1
   15e50:	subs	r1, r2, r4
   15e54:	sbcs	r1, r3, r5
   15e58:	subcc	r0, r0, #1
   15e5c:	pop	{r4, r5, fp, pc}
   15e60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15e64:	add	fp, sp, #24
   15e68:	sub	sp, sp, #96	; 0x60
   15e6c:	ldr	r7, [r0, #44]	; 0x2c
   15e70:	mov	r4, r0
   15e74:	mov	r5, #0
   15e78:	ldrb	r0, [r7, #49]	; 0x31
   15e7c:	tst	r0, #2
   15e80:	beq	15f30 <__assert_fail@plt+0x4370>
   15e84:	ldr	r6, [r7, #52]	; 0x34
   15e88:	mov	r9, r1
   15e8c:	cmp	r6, #0
   15e90:	bne	15ed0 <__assert_fail@plt+0x4310>
   15e94:	movw	r0, #14240	; 0x37a0
   15e98:	movw	r2, #24476	; 0x5f9c
   15e9c:	movw	r3, #24508	; 0x5fbc
   15ea0:	mov	r1, #0
   15ea4:	mov	r8, #0
   15ea8:	movt	r0, #1
   15eac:	movt	r2, #1
   15eb0:	movt	r3, #1
   15eb4:	str	r0, [sp]
   15eb8:	mov	r0, #13
   15ebc:	bl	164d4 <__assert_fail@plt+0x4914>
   15ec0:	mov	r6, r0
   15ec4:	cmp	r0, #0
   15ec8:	str	r0, [r7, #52]	; 0x34
   15ecc:	beq	15f10 <__assert_fail@plt+0x4350>
   15ed0:	ldrd	r0, [r4, #64]	; 0x40
   15ed4:	str	r1, [sp, #12]
   15ed8:	str	r0, [sp, #8]
   15edc:	add	r1, sp, #8
   15ee0:	mov	r0, r6
   15ee4:	bl	16200 <__assert_fail@plt+0x4640>
   15ee8:	cmp	r0, #0
   15eec:	beq	15f00 <__assert_fail@plt+0x4340>
   15ef0:	ldr	r5, [r0, #8]
   15ef4:	mov	r0, r5
   15ef8:	sub	sp, fp, #24
   15efc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15f00:	mov	r8, #1
   15f04:	cmp	r9, #0
   15f08:	bpl	15f1c <__assert_fail@plt+0x435c>
   15f0c:	b	15f30 <__assert_fail@plt+0x4370>
   15f10:	mov	r6, #0
   15f14:	cmp	r9, #0
   15f18:	bmi	15f30 <__assert_fail@plt+0x4370>
   15f1c:	add	r1, sp, #8
   15f20:	mov	r0, r9
   15f24:	bl	11788 <fstatfs64@plt>
   15f28:	cmp	r0, #0
   15f2c:	beq	15f3c <__assert_fail@plt+0x437c>
   15f30:	mov	r0, r5
   15f34:	sub	sp, fp, #24
   15f38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15f3c:	cmp	r8, #0
   15f40:	beq	15f8c <__assert_fail@plt+0x43cc>
   15f44:	mov	r0, #16
   15f48:	bl	1ba3c <lchmod@@Base+0x4484>
   15f4c:	cmp	r0, #0
   15f50:	beq	15f8c <__assert_fail@plt+0x43cc>
   15f54:	mov	r5, r0
   15f58:	ldrd	r0, [r4, #64]	; 0x40
   15f5c:	ldr	r2, [sp, #8]
   15f60:	stm	r5, {r0, r1, r2}
   15f64:	mov	r0, r6
   15f68:	mov	r1, r5
   15f6c:	bl	17130 <__assert_fail@plt+0x5570>
   15f70:	cmp	r0, #0
   15f74:	beq	15f84 <__assert_fail@plt+0x43c4>
   15f78:	cmp	r0, r5
   15f7c:	beq	15f8c <__assert_fail@plt+0x43cc>
   15f80:	bl	11b60 <abort@plt>
   15f84:	mov	r0, r5
   15f88:	bl	137a0 <__assert_fail@plt+0x1be0>
   15f8c:	ldr	r5, [sp, #8]
   15f90:	mov	r0, r5
   15f94:	sub	sp, fp, #24
   15f98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15f9c:	push	{fp, lr}
   15fa0:	mov	fp, sp
   15fa4:	mov	r2, r1
   15fa8:	ldrd	r0, [r0]
   15fac:	mov	r3, #0
   15fb0:	bl	1c2bc <lchmod@@Base+0x4d04>
   15fb4:	mov	r0, r2
   15fb8:	pop	{fp, pc}
   15fbc:	ldrd	r2, [r1]
   15fc0:	ldrd	r0, [r0]
   15fc4:	eor	r1, r1, r3
   15fc8:	eor	r0, r0, r2
   15fcc:	orr	r0, r0, r1
   15fd0:	clz	r0, r0
   15fd4:	lsr	r0, r0, #5
   15fd8:	bx	lr
   15fdc:	andeq	r0, r0, r0
   15fe0:	ldr	r0, [r0, #8]
   15fe4:	bx	lr
   15fe8:	ldr	r0, [r0, #12]
   15fec:	bx	lr
   15ff0:	ldr	r0, [r0, #16]
   15ff4:	bx	lr
   15ff8:	ldm	r0, {r2, ip}
   15ffc:	mov	r0, #0
   16000:	cmp	r2, ip
   16004:	bxcs	lr
   16008:	mov	r0, #0
   1600c:	ldr	r1, [r2]
   16010:	cmp	r1, #0
   16014:	bne	16030 <__assert_fail@plt+0x4470>
   16018:	add	r2, r2, #8
   1601c:	cmp	r2, ip
   16020:	bcs	1605c <__assert_fail@plt+0x449c>
   16024:	ldr	r1, [r2]
   16028:	cmp	r1, #0
   1602c:	beq	16018 <__assert_fail@plt+0x4458>
   16030:	mov	r3, #0
   16034:	mov	r1, r2
   16038:	ldr	r1, [r1, #4]
   1603c:	add	r3, r3, #1
   16040:	cmp	r1, #0
   16044:	bne	16038 <__assert_fail@plt+0x4478>
   16048:	cmp	r3, r0
   1604c:	movhi	r0, r3
   16050:	add	r2, r2, #8
   16054:	cmp	r2, ip
   16058:	bcc	16024 <__assert_fail@plt+0x4464>
   1605c:	bx	lr
   16060:	push	{fp, lr}
   16064:	mov	fp, sp
   16068:	ldm	r0, {r3, ip}
   1606c:	mov	lr, #0
   16070:	mov	r1, #0
   16074:	cmp	r3, ip
   16078:	bcs	160cc <__assert_fail@plt+0x450c>
   1607c:	mov	r1, #0
   16080:	mov	lr, #0
   16084:	ldr	r2, [r3]
   16088:	cmp	r2, #0
   1608c:	bne	160a8 <__assert_fail@plt+0x44e8>
   16090:	add	r3, r3, #8
   16094:	cmp	r3, ip
   16098:	bcs	160cc <__assert_fail@plt+0x450c>
   1609c:	ldr	r2, [r3]
   160a0:	cmp	r2, #0
   160a4:	beq	16090 <__assert_fail@plt+0x44d0>
   160a8:	mov	r2, r3
   160ac:	ldr	r2, [r2, #4]
   160b0:	add	r1, r1, #1
   160b4:	cmp	r2, #0
   160b8:	bne	160ac <__assert_fail@plt+0x44ec>
   160bc:	add	lr, lr, #1
   160c0:	add	r3, r3, #8
   160c4:	cmp	r3, ip
   160c8:	bcc	1609c <__assert_fail@plt+0x44dc>
   160cc:	ldr	r2, [r0, #12]
   160d0:	cmp	lr, r2
   160d4:	bne	160ec <__assert_fail@plt+0x452c>
   160d8:	ldr	r2, [r0, #16]
   160dc:	mov	r0, #1
   160e0:	cmp	r1, r2
   160e4:	movne	r0, #0
   160e8:	pop	{fp, pc}
   160ec:	mov	r0, #0
   160f0:	pop	{fp, pc}
   160f4:	nop	{0}
   160f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   160fc:	add	fp, sp, #24
   16100:	sub	sp, sp, #8
   16104:	ldr	r6, [r0]
   16108:	ldmib	r0, {r2, r7, r8}
   1610c:	ldr	r3, [r0, #16]
   16110:	mov	r4, r1
   16114:	mov	r5, #0
   16118:	cmp	r6, r2
   1611c:	bcs	16174 <__assert_fail@plt+0x45b4>
   16120:	mov	r5, #0
   16124:	ldr	r0, [r6]
   16128:	cmp	r0, #0
   1612c:	bne	16148 <__assert_fail@plt+0x4588>
   16130:	add	r6, r6, #8
   16134:	cmp	r6, r2
   16138:	bcs	16174 <__assert_fail@plt+0x45b4>
   1613c:	ldr	r0, [r6]
   16140:	cmp	r0, #0
   16144:	beq	16130 <__assert_fail@plt+0x4570>
   16148:	mov	r0, #0
   1614c:	mov	r1, r6
   16150:	ldr	r1, [r1, #4]
   16154:	add	r0, r0, #1
   16158:	cmp	r1, #0
   1615c:	bne	16150 <__assert_fail@plt+0x4590>
   16160:	cmp	r0, r5
   16164:	movhi	r5, r0
   16168:	add	r6, r6, #8
   1616c:	cmp	r6, r2
   16170:	bcc	1613c <__assert_fail@plt+0x457c>
   16174:	movw	r2, #52656	; 0xcdb0
   16178:	mov	r0, r4
   1617c:	mov	r1, #1
   16180:	movt	r2, #1
   16184:	bl	11a4c <__fprintf_chk@plt>
   16188:	movw	r2, #52680	; 0xcdc8
   1618c:	mov	r0, r4
   16190:	mov	r1, #1
   16194:	mov	r3, r7
   16198:	movt	r2, #1
   1619c:	bl	11a4c <__fprintf_chk@plt>
   161a0:	vmov	s0, r8
   161a4:	vldr	d16, [pc, #76]	; 161f8 <__assert_fail@plt+0x4638>
   161a8:	movw	r2, #52704	; 0xcde0
   161ac:	mov	r0, r4
   161b0:	mov	r1, #1
   161b4:	mov	r3, r8
   161b8:	movt	r2, #1
   161bc:	vcvt.f64.u32	d17, s0
   161c0:	vmov	s0, r7
   161c4:	vcvt.f64.u32	d18, s0
   161c8:	vmul.f64	d16, d17, d16
   161cc:	vdiv.f64	d16, d16, d18
   161d0:	vstr	d16, [sp]
   161d4:	bl	11a4c <__fprintf_chk@plt>
   161d8:	movw	r2, #52737	; 0xce01
   161dc:	mov	r0, r4
   161e0:	mov	r1, #1
   161e4:	mov	r3, r5
   161e8:	movt	r2, #1
   161ec:	sub	sp, fp, #24
   161f0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   161f4:	b	11a4c <__fprintf_chk@plt>
   161f8:	andeq	r0, r0, r0
   161fc:	subsmi	r0, r9, r0
   16200:	push	{r4, r5, r6, r7, fp, lr}
   16204:	add	fp, sp, #16
   16208:	mov	r4, r1
   1620c:	ldr	r1, [r0, #8]
   16210:	ldr	r2, [r0, #24]
   16214:	mov	r5, r0
   16218:	mov	r0, r4
   1621c:	blx	r2
   16220:	ldr	r1, [r5, #8]
   16224:	cmp	r0, r1
   16228:	bcs	16290 <__assert_fail@plt+0x46d0>
   1622c:	ldr	r7, [r5]
   16230:	mov	r6, #0
   16234:	ldr	r1, [r7, r0, lsl #3]!
   16238:	cmp	r1, #0
   1623c:	cmpne	r7, #0
   16240:	bne	16270 <__assert_fail@plt+0x46b0>
   16244:	mov	r0, r6
   16248:	pop	{r4, r5, r6, r7, fp, pc}
   1624c:	ldr	r2, [r5, #28]
   16250:	mov	r0, r4
   16254:	blx	r2
   16258:	cmp	r0, #0
   1625c:	bne	16284 <__assert_fail@plt+0x46c4>
   16260:	ldr	r7, [r7, #4]
   16264:	cmp	r7, #0
   16268:	beq	16244 <__assert_fail@plt+0x4684>
   1626c:	ldr	r1, [r7]
   16270:	cmp	r1, r4
   16274:	bne	1624c <__assert_fail@plt+0x468c>
   16278:	mov	r6, r4
   1627c:	mov	r0, r6
   16280:	pop	{r4, r5, r6, r7, fp, pc}
   16284:	ldr	r6, [r7]
   16288:	mov	r0, r6
   1628c:	pop	{r4, r5, r6, r7, fp, pc}
   16290:	bl	11b60 <abort@plt>
   16294:	push	{fp, lr}
   16298:	mov	fp, sp
   1629c:	ldr	r1, [r0, #16]
   162a0:	cmp	r1, #0
   162a4:	beq	162c4 <__assert_fail@plt+0x4704>
   162a8:	ldm	r0, {r1, r2}
   162ac:	cmp	r1, r2
   162b0:	bcs	162cc <__assert_fail@plt+0x470c>
   162b4:	ldr	r0, [r1], #8
   162b8:	cmp	r0, #0
   162bc:	beq	162ac <__assert_fail@plt+0x46ec>
   162c0:	pop	{fp, pc}
   162c4:	mov	r0, #0
   162c8:	pop	{fp, pc}
   162cc:	bl	11b60 <abort@plt>
   162d0:	push	{r4, r5, fp, lr}
   162d4:	add	fp, sp, #8
   162d8:	mov	r5, r1
   162dc:	ldr	r1, [r0, #8]
   162e0:	ldr	r2, [r0, #24]
   162e4:	mov	r4, r0
   162e8:	mov	r0, r5
   162ec:	blx	r2
   162f0:	ldr	r1, [r4, #8]
   162f4:	cmp	r0, r1
   162f8:	bcs	1635c <__assert_fail@plt+0x479c>
   162fc:	ldr	r1, [r4]
   16300:	add	r2, r1, r0, lsl #3
   16304:	ldr	r3, [r2]
   16308:	ldr	r2, [r2, #4]
   1630c:	cmp	r3, r5
   16310:	beq	16320 <__assert_fail@plt+0x4760>
   16314:	cmp	r2, #0
   16318:	bne	16304 <__assert_fail@plt+0x4744>
   1631c:	b	16330 <__assert_fail@plt+0x4770>
   16320:	cmp	r2, #0
   16324:	beq	16330 <__assert_fail@plt+0x4770>
   16328:	ldr	r0, [r2]
   1632c:	pop	{r4, r5, fp, pc}
   16330:	ldr	r2, [r4, #4]
   16334:	add	r0, r1, r0, lsl #3
   16338:	add	r1, r0, #8
   1633c:	cmp	r1, r2
   16340:	bcs	16354 <__assert_fail@plt+0x4794>
   16344:	ldr	r0, [r1], #8
   16348:	cmp	r0, #0
   1634c:	beq	1633c <__assert_fail@plt+0x477c>
   16350:	pop	{r4, r5, fp, pc}
   16354:	mov	r0, #0
   16358:	pop	{r4, r5, fp, pc}
   1635c:	bl	11b60 <abort@plt>
   16360:	push	{r4, r5, fp, lr}
   16364:	add	fp, sp, #8
   16368:	ldm	r0, {r5, lr}
   1636c:	mov	ip, r0
   16370:	mov	r0, #0
   16374:	cmp	r5, lr
   16378:	popcs	{r4, r5, fp, pc}
   1637c:	mov	r0, #0
   16380:	ldr	r3, [r5]
   16384:	cmp	r3, #0
   16388:	cmpne	r5, #0
   1638c:	beq	16398 <__assert_fail@plt+0x47d8>
   16390:	b	163b4 <__assert_fail@plt+0x47f4>
   16394:	ldr	lr, [ip, #4]
   16398:	add	r5, r5, #8
   1639c:	cmp	r5, lr
   163a0:	bcs	163dc <__assert_fail@plt+0x481c>
   163a4:	ldr	r3, [r5]
   163a8:	cmp	r3, #0
   163ac:	cmpne	r5, #0
   163b0:	beq	16398 <__assert_fail@plt+0x47d8>
   163b4:	mov	r3, r5
   163b8:	cmp	r0, r2
   163bc:	bcs	163dc <__assert_fail@plt+0x481c>
   163c0:	ldr	r4, [r3]
   163c4:	str	r4, [r1, r0, lsl #2]
   163c8:	add	r0, r0, #1
   163cc:	ldr	r3, [r3, #4]
   163d0:	cmp	r3, #0
   163d4:	bne	163b8 <__assert_fail@plt+0x47f8>
   163d8:	b	16394 <__assert_fail@plt+0x47d4>
   163dc:	pop	{r4, r5, fp, pc}
   163e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   163e4:	add	fp, sp, #24
   163e8:	mov	r5, r1
   163ec:	ldr	r4, [r0]
   163f0:	ldr	r1, [r0, #4]
   163f4:	mov	r6, #0
   163f8:	cmp	r4, r1
   163fc:	bcs	16478 <__assert_fail@plt+0x48b8>
   16400:	mov	r9, r2
   16404:	mov	r8, r0
   16408:	mov	r6, #0
   1640c:	ldr	r0, [r4]
   16410:	cmp	r0, #0
   16414:	cmpne	r4, #0
   16418:	beq	16424 <__assert_fail@plt+0x4864>
   1641c:	b	16440 <__assert_fail@plt+0x4880>
   16420:	ldr	r1, [r8, #4]
   16424:	add	r4, r4, #8
   16428:	cmp	r4, r1
   1642c:	bcs	16478 <__assert_fail@plt+0x48b8>
   16430:	ldr	r0, [r4]
   16434:	cmp	r0, #0
   16438:	cmpne	r4, #0
   1643c:	beq	16424 <__assert_fail@plt+0x4864>
   16440:	mov	r1, r9
   16444:	blx	r5
   16448:	cmp	r0, #0
   1644c:	beq	16478 <__assert_fail@plt+0x48b8>
   16450:	mov	r7, r4
   16454:	ldr	r7, [r7, #4]
   16458:	add	r6, r6, #1
   1645c:	cmp	r7, #0
   16460:	beq	16420 <__assert_fail@plt+0x4860>
   16464:	ldr	r0, [r7]
   16468:	mov	r1, r9
   1646c:	blx	r5
   16470:	cmp	r0, #0
   16474:	bne	16454 <__assert_fail@plt+0x4894>
   16478:	mov	r0, r6
   1647c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16480:	ldrb	r2, [r0]
   16484:	cmp	r2, #0
   16488:	moveq	r0, #0
   1648c:	bxeq	lr
   16490:	add	r3, r0, #1
   16494:	mov	r0, #0
   16498:	rsb	r0, r0, r0, lsl #5
   1649c:	uxtab	r0, r0, r2
   164a0:	udiv	r2, r0, r1
   164a4:	mls	r0, r2, r1, r0
   164a8:	ldrb	r2, [r3], #1
   164ac:	cmp	r2, #0
   164b0:	bne	16498 <__assert_fail@plt+0x48d8>
   164b4:	bx	lr
   164b8:	movw	r1, #52768	; 0xce20
   164bc:	movt	r1, #1
   164c0:	vld1.32	{d16-d17}, [r1]!
   164c4:	ldr	r1, [r1]
   164c8:	vst1.32	{d16-d17}, [r0]!
   164cc:	str	r1, [r0]
   164d0:	bx	lr
   164d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   164d8:	add	fp, sp, #24
   164dc:	movw	r9, #26376	; 0x6708
   164e0:	cmp	r3, #0
   164e4:	movw	r5, #26356	; 0x66f4
   164e8:	mov	r6, r0
   164ec:	mov	r0, #40	; 0x28
   164f0:	mov	r7, r1
   164f4:	movt	r9, #1
   164f8:	movne	r9, r3
   164fc:	cmp	r2, #0
   16500:	movt	r5, #1
   16504:	movne	r5, r2
   16508:	bl	1ba3c <lchmod@@Base+0x4484>
   1650c:	mov	r8, #0
   16510:	cmp	r0, #0
   16514:	beq	166dc <__assert_fail@plt+0x4b1c>
   16518:	mov	r4, r0
   1651c:	movw	r0, #52768	; 0xce20
   16520:	cmp	r7, #0
   16524:	movt	r0, #1
   16528:	moveq	r7, r0
   1652c:	cmp	r7, r0
   16530:	str	r7, [r4, #20]
   16534:	beq	165b0 <__assert_fail@plt+0x49f0>
   16538:	vldr	s2, [pc, #420]	; 166e4 <__assert_fail@plt+0x4b24>
   1653c:	vldr	s0, [r7, #8]
   16540:	vcmpe.f32	s0, s2
   16544:	vmrs	APSR_nzcv, fpscr
   16548:	ble	1665c <__assert_fail@plt+0x4a9c>
   1654c:	vldr	s4, [pc, #404]	; 166e8 <__assert_fail@plt+0x4b28>
   16550:	vcmpe.f32	s0, s4
   16554:	vmrs	APSR_nzcv, fpscr
   16558:	bpl	1665c <__assert_fail@plt+0x4a9c>
   1655c:	vldr	s4, [pc, #392]	; 166ec <__assert_fail@plt+0x4b2c>
   16560:	vldr	s6, [r7, #12]
   16564:	vcmpe.f32	s6, s4
   16568:	vmrs	APSR_nzcv, fpscr
   1656c:	ble	1665c <__assert_fail@plt+0x4a9c>
   16570:	vldr	s4, [r7]
   16574:	vcmpe.f32	s4, #0.0
   16578:	vmrs	APSR_nzcv, fpscr
   1657c:	blt	1665c <__assert_fail@plt+0x4a9c>
   16580:	vadd.f32	s2, s4, s2
   16584:	vcmpe.f32	s2, s0
   16588:	vmrs	APSR_nzcv, fpscr
   1658c:	bpl	1665c <__assert_fail@plt+0x4a9c>
   16590:	vldr	s0, [r7, #4]
   16594:	vmov.f32	s4, #112	; 0x3f800000  1.0
   16598:	vcmpe.f32	s0, s4
   1659c:	vmrs	APSR_nzcv, fpscr
   165a0:	bhi	1665c <__assert_fail@plt+0x4a9c>
   165a4:	vcmpe.f32	s2, s0
   165a8:	vmrs	APSR_nzcv, fpscr
   165ac:	bpl	1665c <__assert_fail@plt+0x4a9c>
   165b0:	ldrb	r0, [r7, #16]
   165b4:	cmp	r0, #0
   165b8:	bne	165e4 <__assert_fail@plt+0x4a24>
   165bc:	vmov	s2, r6
   165c0:	vldr	s0, [r7, #8]
   165c4:	vldr	s4, [pc, #292]	; 166f0 <__assert_fail@plt+0x4b30>
   165c8:	vcvt.f32.u32	s2, s2
   165cc:	vdiv.f32	s2, s2, s0
   165d0:	vcvt.u32.f32	s0, s2
   165d4:	vcmpe.f32	s2, s4
   165d8:	vmrs	APSR_nzcv, fpscr
   165dc:	bge	16678 <__assert_fail@plt+0x4ab8>
   165e0:	vmov	r6, s0
   165e4:	cmp	r6, #10
   165e8:	movls	r6, #10
   165ec:	orr	r0, r6, #1
   165f0:	cmn	r0, #1
   165f4:	beq	16678 <__assert_fail@plt+0x4ab8>
   165f8:	ldr	r6, [fp, #8]
   165fc:	mov	r1, #3
   16600:	cmp	r0, #10
   16604:	bcc	1663c <__assert_fail@plt+0x4a7c>
   16608:	mov	r1, #3
   1660c:	mov	r3, #9
   16610:	mov	r2, #12
   16614:	udiv	r7, r0, r1
   16618:	mls	r7, r7, r1, r0
   1661c:	cmp	r7, #0
   16620:	beq	1663c <__assert_fail@plt+0x4a7c>
   16624:	add	r3, r3, r2
   16628:	add	r2, r2, #8
   1662c:	add	r1, r1, #2
   16630:	add	r3, r3, #4
   16634:	cmp	r3, r0
   16638:	bcc	16614 <__assert_fail@plt+0x4a54>
   1663c:	udiv	r2, r0, r1
   16640:	mls	r1, r2, r1, r0
   16644:	cmp	r1, #0
   16648:	bne	16670 <__assert_fail@plt+0x4ab0>
   1664c:	add	r0, r0, #2
   16650:	cmn	r0, #1
   16654:	bne	165fc <__assert_fail@plt+0x4a3c>
   16658:	b	16678 <__assert_fail@plt+0x4ab8>
   1665c:	str	r0, [r4, #20]
   16660:	mov	r0, r4
   16664:	bl	137a0 <__assert_fail@plt+0x1be0>
   16668:	mov	r0, r8
   1666c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16670:	cmp	r0, #536870912	; 0x20000000
   16674:	bcc	16690 <__assert_fail@plt+0x4ad0>
   16678:	mov	r0, #0
   1667c:	str	r0, [r4, #8]
   16680:	mov	r0, r4
   16684:	bl	137a0 <__assert_fail@plt+0x1be0>
   16688:	mov	r0, r8
   1668c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16690:	cmp	r0, #0
   16694:	str	r0, [r4, #8]
   16698:	beq	16680 <__assert_fail@plt+0x4ac0>
   1669c:	mov	r1, #8
   166a0:	bl	1b9e8 <lchmod@@Base+0x4430>
   166a4:	cmp	r0, #0
   166a8:	str	r0, [r4]
   166ac:	beq	16680 <__assert_fail@plt+0x4ac0>
   166b0:	mov	r1, #0
   166b4:	str	r5, [r4, #24]
   166b8:	str	r9, [r4, #28]
   166bc:	str	r6, [r4, #32]
   166c0:	mov	r8, r4
   166c4:	str	r1, [r4, #36]	; 0x24
   166c8:	str	r1, [r4, #12]
   166cc:	str	r1, [r4, #16]
   166d0:	ldr	r1, [r4, #8]
   166d4:	add	r0, r0, r1, lsl #3
   166d8:	str	r0, [r4, #4]
   166dc:	mov	r0, r8
   166e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   166e4:	stclcc	12, cr12, [ip, #820]	; 0x334
   166e8:	svccc	0x00666666
   166ec:	svccc	0x008ccccd
   166f0:	svcmi	0x00800000
   166f4:	ror	r2, r0, #3
   166f8:	udiv	r2, r2, r1
   166fc:	mul	r1, r2, r1
   16700:	rsb	r0, r1, r0, ror #3
   16704:	bx	lr
   16708:	sub	r0, r0, r1
   1670c:	clz	r0, r0
   16710:	lsr	r0, r0, #5
   16714:	bx	lr
   16718:	push	{r4, r5, r6, r7, fp, lr}
   1671c:	add	fp, sp, #16
   16720:	mov	r4, r0
   16724:	ldr	r5, [r0]
   16728:	ldr	r0, [r0, #4]
   1672c:	cmp	r5, r0
   16730:	bcs	167e0 <__assert_fail@plt+0x4c20>
   16734:	mov	r6, #0
   16738:	ldr	r1, [r5]
   1673c:	cmp	r1, #0
   16740:	bne	1676c <__assert_fail@plt+0x4bac>
   16744:	b	16754 <__assert_fail@plt+0x4b94>
   16748:	str	r6, [r5]
   1674c:	str	r6, [r5, #4]
   16750:	ldr	r0, [r4, #4]
   16754:	add	r5, r5, #8
   16758:	cmp	r5, r0
   1675c:	bcs	167e0 <__assert_fail@plt+0x4c20>
   16760:	ldr	r1, [r5]
   16764:	cmp	r1, #0
   16768:	beq	16754 <__assert_fail@plt+0x4b94>
   1676c:	ldr	r1, [r4, #32]
   16770:	ldr	r7, [r5, #4]
   16774:	cmp	r1, #0
   16778:	mov	r0, r1
   1677c:	movwne	r0, #1
   16780:	cmp	r7, #0
   16784:	bne	167c8 <__assert_fail@plt+0x4c08>
   16788:	cmp	r0, #0
   1678c:	beq	16748 <__assert_fail@plt+0x4b88>
   16790:	ldr	r0, [r5]
   16794:	blx	r1
   16798:	b	16748 <__assert_fail@plt+0x4b88>
   1679c:	str	r6, [r7]
   167a0:	cmp	r1, #0
   167a4:	ldr	r2, [r7, #4]
   167a8:	ldr	r0, [r4, #36]	; 0x24
   167ac:	str	r0, [r7, #4]
   167b0:	mov	r0, r1
   167b4:	str	r7, [r4, #36]	; 0x24
   167b8:	movwne	r0, #1
   167bc:	cmp	r2, #0
   167c0:	mov	r7, r2
   167c4:	beq	16788 <__assert_fail@plt+0x4bc8>
   167c8:	tst	r0, #1
   167cc:	beq	1679c <__assert_fail@plt+0x4bdc>
   167d0:	ldr	r0, [r7]
   167d4:	blx	r1
   167d8:	ldr	r1, [r4, #32]
   167dc:	b	1679c <__assert_fail@plt+0x4bdc>
   167e0:	mov	r0, #0
   167e4:	str	r0, [r4, #12]
   167e8:	str	r0, [r4, #16]
   167ec:	pop	{r4, r5, r6, r7, fp, pc}
   167f0:	push	{r4, r5, r6, sl, fp, lr}
   167f4:	add	fp, sp, #16
   167f8:	mov	r4, r0
   167fc:	ldr	r0, [r0, #32]
   16800:	cmp	r0, #0
   16804:	beq	16878 <__assert_fail@plt+0x4cb8>
   16808:	ldr	r0, [r4, #16]
   1680c:	cmp	r0, #0
   16810:	beq	16878 <__assert_fail@plt+0x4cb8>
   16814:	ldr	r5, [r4]
   16818:	ldr	r1, [r4, #4]
   1681c:	cmp	r5, r1
   16820:	bcc	16838 <__assert_fail@plt+0x4c78>
   16824:	b	16878 <__assert_fail@plt+0x4cb8>
   16828:	ldr	r1, [r4, #4]
   1682c:	add	r5, r5, #8
   16830:	cmp	r5, r1
   16834:	bcs	16878 <__assert_fail@plt+0x4cb8>
   16838:	ldr	r0, [r5]
   1683c:	cmp	r0, #0
   16840:	cmpne	r5, #0
   16844:	beq	1682c <__assert_fail@plt+0x4c6c>
   16848:	ldr	r1, [r4, #32]
   1684c:	blx	r1
   16850:	ldr	r6, [r5, #4]
   16854:	cmp	r6, #0
   16858:	beq	16828 <__assert_fail@plt+0x4c68>
   1685c:	ldr	r1, [r4, #32]
   16860:	ldr	r0, [r6]
   16864:	blx	r1
   16868:	ldr	r6, [r6, #4]
   1686c:	cmp	r6, #0
   16870:	bne	1685c <__assert_fail@plt+0x4c9c>
   16874:	b	16828 <__assert_fail@plt+0x4c68>
   16878:	ldr	r5, [r4]
   1687c:	ldr	r1, [r4, #4]
   16880:	cmp	r5, r1
   16884:	bcc	16898 <__assert_fail@plt+0x4cd8>
   16888:	b	168c0 <__assert_fail@plt+0x4d00>
   1688c:	add	r5, r5, #8
   16890:	cmp	r5, r1
   16894:	bcs	168c0 <__assert_fail@plt+0x4d00>
   16898:	ldr	r0, [r5, #4]
   1689c:	cmp	r0, #0
   168a0:	beq	1688c <__assert_fail@plt+0x4ccc>
   168a4:	ldr	r6, [r0, #4]
   168a8:	bl	137a0 <__assert_fail@plt+0x1be0>
   168ac:	cmp	r6, #0
   168b0:	mov	r0, r6
   168b4:	bne	168a4 <__assert_fail@plt+0x4ce4>
   168b8:	ldr	r1, [r4, #4]
   168bc:	b	1688c <__assert_fail@plt+0x4ccc>
   168c0:	ldr	r0, [r4, #36]	; 0x24
   168c4:	cmp	r0, #0
   168c8:	beq	168e0 <__assert_fail@plt+0x4d20>
   168cc:	ldr	r5, [r0, #4]
   168d0:	bl	137a0 <__assert_fail@plt+0x1be0>
   168d4:	cmp	r5, #0
   168d8:	mov	r0, r5
   168dc:	bne	168cc <__assert_fail@plt+0x4d0c>
   168e0:	ldr	r0, [r4]
   168e4:	bl	137a0 <__assert_fail@plt+0x1be0>
   168e8:	mov	r0, r4
   168ec:	pop	{r4, r5, r6, sl, fp, lr}
   168f0:	b	137a0 <__assert_fail@plt+0x1be0>
   168f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168f8:	add	fp, sp, #28
   168fc:	sub	sp, sp, #44	; 0x2c
   16900:	mov	r7, r0
   16904:	mov	r4, r0
   16908:	ldr	r0, [r7, #20]!
   1690c:	ldrb	r2, [r0, #16]
   16910:	cmp	r2, #0
   16914:	bne	16944 <__assert_fail@plt+0x4d84>
   16918:	vmov	s2, r1
   1691c:	vldr	s0, [r0, #8]
   16920:	vldr	s4, [pc, #592]	; 16b78 <__assert_fail@plt+0x4fb8>
   16924:	mov	r5, #0
   16928:	vcvt.f32.u32	s2, s2
   1692c:	vdiv.f32	s2, s2, s0
   16930:	vcvt.u32.f32	s0, s2
   16934:	vcmpe.f32	s2, s4
   16938:	vmrs	APSR_nzcv, fpscr
   1693c:	bge	16a68 <__assert_fail@plt+0x4ea8>
   16940:	vmov	r1, s0
   16944:	cmp	r1, #10
   16948:	mov	r5, #0
   1694c:	movls	r1, #10
   16950:	orr	r6, r1, #1
   16954:	cmn	r6, #1
   16958:	beq	16a68 <__assert_fail@plt+0x4ea8>
   1695c:	mov	r0, #3
   16960:	cmp	r6, #10
   16964:	bcc	1699c <__assert_fail@plt+0x4ddc>
   16968:	mov	r0, #3
   1696c:	mov	r2, #9
   16970:	mov	r1, #12
   16974:	udiv	r3, r6, r0
   16978:	mls	r3, r3, r0, r6
   1697c:	cmp	r3, #0
   16980:	beq	1699c <__assert_fail@plt+0x4ddc>
   16984:	add	r2, r2, r1
   16988:	add	r1, r1, #8
   1698c:	add	r0, r0, #2
   16990:	add	r2, r2, #4
   16994:	cmp	r2, r6
   16998:	bcc	16974 <__assert_fail@plt+0x4db4>
   1699c:	udiv	r1, r6, r0
   169a0:	mls	r0, r1, r0, r6
   169a4:	cmp	r0, #0
   169a8:	bne	169bc <__assert_fail@plt+0x4dfc>
   169ac:	add	r6, r6, #2
   169b0:	cmn	r6, #1
   169b4:	bne	1695c <__assert_fail@plt+0x4d9c>
   169b8:	b	16a68 <__assert_fail@plt+0x4ea8>
   169bc:	sub	r0, r6, #1
   169c0:	cmn	r0, #-536870910	; 0xe0000002
   169c4:	bhi	16a68 <__assert_fail@plt+0x4ea8>
   169c8:	ldr	r0, [r4, #8]
   169cc:	cmp	r6, r0
   169d0:	bne	169e4 <__assert_fail@plt+0x4e24>
   169d4:	mov	r5, #1
   169d8:	mov	r0, r5
   169dc:	sub	sp, fp, #28
   169e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169e4:	mov	r0, r6
   169e8:	mov	r1, #8
   169ec:	bl	1b9e8 <lchmod@@Base+0x4430>
   169f0:	cmp	r0, #0
   169f4:	str	r0, [sp, #4]
   169f8:	beq	16a68 <__assert_fail@plt+0x4ea8>
   169fc:	add	r0, r0, r6, lsl #3
   16a00:	mov	r1, #0
   16a04:	add	r5, sp, #4
   16a08:	mov	sl, r4
   16a0c:	mov	r2, #0
   16a10:	str	r1, [sp, #20]
   16a14:	str	r1, [sp, #16]
   16a18:	str	r6, [sp, #12]
   16a1c:	mov	r1, r4
   16a20:	str	r0, [sp, #8]
   16a24:	add	r0, r5, #20
   16a28:	vld1.32	{d16-d17}, [r7]
   16a2c:	vst1.32	{d16-d17}, [r0]
   16a30:	ldr	r0, [sl, #36]!	; 0x24
   16a34:	str	r0, [sp, #40]	; 0x28
   16a38:	mov	r0, r5
   16a3c:	bl	16b7c <__assert_fail@plt+0x4fbc>
   16a40:	cmp	r0, #0
   16a44:	beq	16a74 <__assert_fail@plt+0x4eb4>
   16a48:	ldr	r0, [r4]
   16a4c:	bl	137a0 <__assert_fail@plt+0x1be0>
   16a50:	mov	r0, #36	; 0x24
   16a54:	vld1.32	{d16-d17}, [r5], r0
   16a58:	vst1.32	{d16-d17}, [r4], r0
   16a5c:	ldr	r0, [r5]
   16a60:	mov	r5, #1
   16a64:	str	r0, [r4]
   16a68:	mov	r0, r5
   16a6c:	sub	sp, fp, #28
   16a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a74:	ldr	r0, [sp, #40]	; 0x28
   16a78:	str	r0, [sl]
   16a7c:	ldr	r0, [sp, #8]
   16a80:	ldr	r8, [sp, #4]
   16a84:	cmp	r8, r0
   16a88:	str	r0, [sp]
   16a8c:	bcs	16b44 <__assert_fail@plt+0x4f84>
   16a90:	mov	r9, #0
   16a94:	ldr	r0, [r8]
   16a98:	cmp	r0, #0
   16a9c:	bne	16ac4 <__assert_fail@plt+0x4f04>
   16aa0:	b	16aa8 <__assert_fail@plt+0x4ee8>
   16aa4:	str	r9, [r8, #4]
   16aa8:	ldr	r0, [sp]
   16aac:	add	r8, r8, #8
   16ab0:	cmp	r8, r0
   16ab4:	bcs	16b44 <__assert_fail@plt+0x4f84>
   16ab8:	ldr	r0, [r8]
   16abc:	cmp	r0, #0
   16ac0:	beq	16aa8 <__assert_fail@plt+0x4ee8>
   16ac4:	ldr	r6, [r8, #4]
   16ac8:	cmp	r6, #0
   16acc:	beq	16aa4 <__assert_fail@plt+0x4ee4>
   16ad0:	ldr	r1, [r4, #8]
   16ad4:	b	16af8 <__assert_fail@plt+0x4f38>
   16ad8:	add	r0, r3, r0, lsl #3
   16adc:	add	r0, r0, #4
   16ae0:	ldr	r3, [r0]
   16ae4:	cmp	r2, #0
   16ae8:	str	r3, [r6, #4]
   16aec:	str	r6, [r0]
   16af0:	mov	r6, r2
   16af4:	beq	16aa4 <__assert_fail@plt+0x4ee4>
   16af8:	ldr	r5, [r6]
   16afc:	ldr	r2, [r4, #24]
   16b00:	mov	r0, r5
   16b04:	blx	r2
   16b08:	ldr	r1, [r4, #8]
   16b0c:	cmp	r0, r1
   16b10:	bcs	16b74 <__assert_fail@plt+0x4fb4>
   16b14:	ldr	r3, [r4]
   16b18:	ldr	r2, [r6, #4]
   16b1c:	ldr	r7, [r3, r0, lsl #3]
   16b20:	cmp	r7, #0
   16b24:	bne	16ad8 <__assert_fail@plt+0x4f18>
   16b28:	str	r5, [r3, r0, lsl #3]
   16b2c:	ldr	r0, [r4, #12]
   16b30:	add	r0, r0, #1
   16b34:	str	r0, [r4, #12]
   16b38:	mov	r0, sl
   16b3c:	str	r9, [r6]
   16b40:	b	16ae0 <__assert_fail@plt+0x4f20>
   16b44:	add	r1, sp, #4
   16b48:	mov	r0, r4
   16b4c:	mov	r2, #0
   16b50:	mov	r5, #0
   16b54:	bl	16b7c <__assert_fail@plt+0x4fbc>
   16b58:	cmp	r0, #0
   16b5c:	beq	16b74 <__assert_fail@plt+0x4fb4>
   16b60:	ldr	r0, [sp, #4]
   16b64:	bl	137a0 <__assert_fail@plt+0x1be0>
   16b68:	mov	r0, r5
   16b6c:	sub	sp, fp, #28
   16b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b74:	bl	11b60 <abort@plt>
   16b78:	svcmi	0x00800000
   16b7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b80:	add	fp, sp, #28
   16b84:	sub	sp, sp, #4
   16b88:	ldr	r8, [r1]
   16b8c:	ldr	r3, [r1, #4]
   16b90:	mov	r6, r0
   16b94:	mov	r0, #1
   16b98:	str	r1, [sp]
   16b9c:	cmp	r8, r3
   16ba0:	bcs	16db4 <__assert_fail@plt+0x51f4>
   16ba4:	add	sl, r6, #36	; 0x24
   16ba8:	cmp	r2, #0
   16bac:	beq	16c68 <__assert_fail@plt+0x50a8>
   16bb0:	mov	r9, #0
   16bb4:	ldr	r1, [r8]
   16bb8:	cmp	r1, #0
   16bbc:	bne	16be8 <__assert_fail@plt+0x5028>
   16bc0:	b	16bd0 <__assert_fail@plt+0x5010>
   16bc4:	ldr	r0, [sp]
   16bc8:	ldr	r3, [r0, #4]
   16bcc:	str	r9, [r8, #4]
   16bd0:	add	r8, r8, #8
   16bd4:	cmp	r8, r3
   16bd8:	bcs	16db0 <__assert_fail@plt+0x51f0>
   16bdc:	ldr	r1, [r8]
   16be0:	cmp	r1, #0
   16be4:	beq	16bd0 <__assert_fail@plt+0x5010>
   16be8:	ldr	r7, [r8, #4]
   16bec:	cmp	r7, #0
   16bf0:	beq	16bcc <__assert_fail@plt+0x500c>
   16bf4:	ldr	r1, [r6, #8]
   16bf8:	b	16c2c <__assert_fail@plt+0x506c>
   16bfc:	str	r4, [r3, r0, lsl #3]
   16c00:	ldr	r0, [r6, #12]
   16c04:	add	r0, r0, #1
   16c08:	str	r0, [r6, #12]
   16c0c:	mov	r0, sl
   16c10:	str	r9, [r7]
   16c14:	ldr	r3, [r0]
   16c18:	cmp	r2, #0
   16c1c:	str	r3, [r7, #4]
   16c20:	str	r7, [r0]
   16c24:	mov	r7, r2
   16c28:	beq	16bc4 <__assert_fail@plt+0x5004>
   16c2c:	ldr	r4, [r7]
   16c30:	ldr	r2, [r6, #24]
   16c34:	mov	r0, r4
   16c38:	blx	r2
   16c3c:	ldr	r1, [r6, #8]
   16c40:	cmp	r0, r1
   16c44:	bcs	16dc8 <__assert_fail@plt+0x5208>
   16c48:	ldr	r3, [r6]
   16c4c:	ldr	r2, [r7, #4]
   16c50:	ldr	r5, [r3, r0, lsl #3]
   16c54:	cmp	r5, #0
   16c58:	beq	16bfc <__assert_fail@plt+0x503c>
   16c5c:	add	r0, r3, r0, lsl #3
   16c60:	add	r0, r0, #4
   16c64:	b	16c14 <__assert_fail@plt+0x5054>
   16c68:	mov	r5, #0
   16c6c:	ldr	r7, [r8]
   16c70:	cmp	r7, #0
   16c74:	bne	16cbc <__assert_fail@plt+0x50fc>
   16c78:	b	16ca4 <__assert_fail@plt+0x50e4>
   16c7c:	str	r7, [r9, r4, lsl #3]
   16c80:	ldr	r0, [r6, #12]
   16c84:	add	r0, r0, #1
   16c88:	str	r0, [r6, #12]
   16c8c:	ldr	r0, [sp]
   16c90:	str	r5, [r8]
   16c94:	ldr	r1, [r0, #12]
   16c98:	ldr	r3, [r0, #4]
   16c9c:	sub	r1, r1, #1
   16ca0:	str	r1, [r0, #12]
   16ca4:	add	r8, r8, #8
   16ca8:	cmp	r8, r3
   16cac:	bcs	16db0 <__assert_fail@plt+0x51f0>
   16cb0:	ldr	r7, [r8]
   16cb4:	cmp	r7, #0
   16cb8:	beq	16ca4 <__assert_fail@plt+0x50e4>
   16cbc:	ldr	r9, [r8, #4]
   16cc0:	ldr	r1, [r6, #8]
   16cc4:	cmp	r9, #0
   16cc8:	bne	16cf0 <__assert_fail@plt+0x5130>
   16ccc:	b	16d40 <__assert_fail@plt+0x5180>
   16cd0:	add	r0, r3, r0, lsl #3
   16cd4:	add	r0, r0, #4
   16cd8:	ldr	r3, [r0]
   16cdc:	cmp	r2, #0
   16ce0:	str	r3, [r9, #4]
   16ce4:	str	r9, [r0]
   16ce8:	mov	r9, r2
   16cec:	beq	16d3c <__assert_fail@plt+0x517c>
   16cf0:	ldr	r4, [r9]
   16cf4:	ldr	r2, [r6, #24]
   16cf8:	mov	r0, r4
   16cfc:	blx	r2
   16d00:	ldr	r1, [r6, #8]
   16d04:	cmp	r0, r1
   16d08:	bcs	16dc8 <__assert_fail@plt+0x5208>
   16d0c:	ldr	r3, [r6]
   16d10:	ldr	r2, [r9, #4]
   16d14:	ldr	r7, [r3, r0, lsl #3]
   16d18:	cmp	r7, #0
   16d1c:	bne	16cd0 <__assert_fail@plt+0x5110>
   16d20:	str	r4, [r3, r0, lsl #3]
   16d24:	ldr	r0, [r6, #12]
   16d28:	add	r0, r0, #1
   16d2c:	str	r0, [r6, #12]
   16d30:	mov	r0, sl
   16d34:	str	r5, [r9]
   16d38:	b	16cd8 <__assert_fail@plt+0x5118>
   16d3c:	ldr	r7, [r8]
   16d40:	str	r5, [r8, #4]
   16d44:	mov	r0, r7
   16d48:	ldr	r2, [r6, #24]
   16d4c:	blx	r2
   16d50:	mov	r4, r0
   16d54:	ldr	r0, [r6, #8]
   16d58:	cmp	r4, r0
   16d5c:	bcs	16dc8 <__assert_fail@plt+0x5208>
   16d60:	ldr	r9, [r6]
   16d64:	ldr	r0, [r9, r4, lsl #3]
   16d68:	cmp	r0, #0
   16d6c:	beq	16c7c <__assert_fail@plt+0x50bc>
   16d70:	ldr	r0, [sl]
   16d74:	cmp	r0, #0
   16d78:	beq	16d88 <__assert_fail@plt+0x51c8>
   16d7c:	ldr	r1, [r0, #4]
   16d80:	str	r1, [sl]
   16d84:	b	16d98 <__assert_fail@plt+0x51d8>
   16d88:	mov	r0, #8
   16d8c:	bl	1ba3c <lchmod@@Base+0x4484>
   16d90:	cmp	r0, #0
   16d94:	beq	16dbc <__assert_fail@plt+0x51fc>
   16d98:	add	r1, r9, r4, lsl #3
   16d9c:	str	r7, [r0]
   16da0:	ldr	r2, [r1, #4]
   16da4:	str	r2, [r0, #4]
   16da8:	str	r0, [r1, #4]
   16dac:	b	16c8c <__assert_fail@plt+0x50cc>
   16db0:	mov	r0, #1
   16db4:	sub	sp, fp, #28
   16db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16dbc:	mov	r0, #0
   16dc0:	sub	sp, fp, #28
   16dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16dc8:	bl	11b60 <abort@plt>
   16dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16dd0:	add	fp, sp, #28
   16dd4:	sub	sp, sp, #4
   16dd8:	cmp	r1, #0
   16ddc:	beq	17118 <__assert_fail@plt+0x5558>
   16de0:	mov	r8, r2
   16de4:	mov	sl, r1
   16de8:	ldr	r1, [r0, #8]
   16dec:	ldr	r2, [r0, #24]
   16df0:	mov	r4, r0
   16df4:	mov	r0, sl
   16df8:	blx	r2
   16dfc:	mov	r7, r0
   16e00:	ldr	r0, [r4, #8]
   16e04:	cmp	r7, r0
   16e08:	bcs	17118 <__assert_fail@plt+0x5558>
   16e0c:	ldr	r5, [r4]
   16e10:	mov	r9, r5
   16e14:	ldr	r1, [r9, r7, lsl #3]!
   16e18:	cmp	r1, #0
   16e1c:	beq	16eb0 <__assert_fail@plt+0x52f0>
   16e20:	cmp	r1, sl
   16e24:	beq	16e50 <__assert_fail@plt+0x5290>
   16e28:	ldr	r2, [r4, #28]
   16e2c:	mov	r0, sl
   16e30:	blx	r2
   16e34:	cmp	r0, #0
   16e38:	mov	r6, r9
   16e3c:	beq	16e6c <__assert_fail@plt+0x52ac>
   16e40:	ldr	r0, [r6]
   16e44:	cmp	r0, #0
   16e48:	bne	16e54 <__assert_fail@plt+0x5294>
   16e4c:	b	16eb0 <__assert_fail@plt+0x52f0>
   16e50:	mov	r0, sl
   16e54:	cmp	r8, #0
   16e58:	mov	r7, #0
   16e5c:	strne	r0, [r8]
   16e60:	mov	r0, r7
   16e64:	sub	sp, fp, #28
   16e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e6c:	add	r6, r5, r7, lsl #3
   16e70:	ldr	r0, [r6, #4]!
   16e74:	cmp	r0, #0
   16e78:	beq	16eb0 <__assert_fail@plt+0x52f0>
   16e7c:	ldr	r1, [r0]
   16e80:	cmp	r1, sl
   16e84:	beq	16ea4 <__assert_fail@plt+0x52e4>
   16e88:	ldr	r2, [r4, #28]
   16e8c:	mov	r0, sl
   16e90:	blx	r2
   16e94:	ldr	r6, [r6]
   16e98:	cmp	r0, #0
   16e9c:	beq	16e70 <__assert_fail@plt+0x52b0>
   16ea0:	b	16e40 <__assert_fail@plt+0x5280>
   16ea4:	mov	r0, sl
   16ea8:	cmp	r0, #0
   16eac:	bne	16e54 <__assert_fail@plt+0x5294>
   16eb0:	vldr	s0, [r4, #8]
   16eb4:	vldr	s2, [r4, #12]
   16eb8:	ldr	r0, [r4, #20]
   16ebc:	vcvt.f32.u32	s0, s0
   16ec0:	vcvt.f32.u32	s4, s2
   16ec4:	vldr	s2, [r0, #8]
   16ec8:	vmul.f32	s6, s2, s0
   16ecc:	vcmpe.f32	s6, s4
   16ed0:	vmrs	APSR_nzcv, fpscr
   16ed4:	bpl	17038 <__assert_fail@plt+0x5478>
   16ed8:	movw	r1, #52768	; 0xce20
   16edc:	movt	r1, #1
   16ee0:	cmp	r0, r1
   16ee4:	beq	16f80 <__assert_fail@plt+0x53c0>
   16ee8:	vldr	s6, [pc, #556]	; 1711c <__assert_fail@plt+0x555c>
   16eec:	vcmpe.f32	s2, s6
   16ef0:	vmrs	APSR_nzcv, fpscr
   16ef4:	ble	16f5c <__assert_fail@plt+0x539c>
   16ef8:	vldr	s8, [pc, #544]	; 17120 <__assert_fail@plt+0x5560>
   16efc:	vcmpe.f32	s2, s8
   16f00:	vmrs	APSR_nzcv, fpscr
   16f04:	bpl	16f5c <__assert_fail@plt+0x539c>
   16f08:	vldr	s8, [pc, #532]	; 17124 <__assert_fail@plt+0x5564>
   16f0c:	vldr	s10, [r0, #12]
   16f10:	vcmpe.f32	s10, s8
   16f14:	vmrs	APSR_nzcv, fpscr
   16f18:	ble	16f5c <__assert_fail@plt+0x539c>
   16f1c:	vldr	s8, [r0]
   16f20:	vcmpe.f32	s8, #0.0
   16f24:	vmrs	APSR_nzcv, fpscr
   16f28:	blt	16f5c <__assert_fail@plt+0x539c>
   16f2c:	vadd.f32	s6, s8, s6
   16f30:	vcmpe.f32	s6, s2
   16f34:	vmrs	APSR_nzcv, fpscr
   16f38:	bpl	16f5c <__assert_fail@plt+0x539c>
   16f3c:	vldr	s8, [r0, #4]
   16f40:	vmov.f32	s10, #112	; 0x3f800000  1.0
   16f44:	vcmpe.f32	s8, s10
   16f48:	vmrs	APSR_nzcv, fpscr
   16f4c:	bhi	16f5c <__assert_fail@plt+0x539c>
   16f50:	vcmpe.f32	s6, s8
   16f54:	vmrs	APSR_nzcv, fpscr
   16f58:	bmi	16f6c <__assert_fail@plt+0x53ac>
   16f5c:	vldr	s2, [pc, #452]	; 17128 <__assert_fail@plt+0x5568>
   16f60:	movw	r0, #52768	; 0xce20
   16f64:	movt	r0, #1
   16f68:	str	r0, [r4, #20]
   16f6c:	vmul.f32	s6, s2, s0
   16f70:	vcmpe.f32	s6, s4
   16f74:	vmrs	APSR_nzcv, fpscr
   16f78:	bmi	16f94 <__assert_fail@plt+0x53d4>
   16f7c:	b	17038 <__assert_fail@plt+0x5478>
   16f80:	mov	r0, r1
   16f84:	vmul.f32	s6, s2, s0
   16f88:	vcmpe.f32	s6, s4
   16f8c:	vmrs	APSR_nzcv, fpscr
   16f90:	bpl	17038 <__assert_fail@plt+0x5478>
   16f94:	vldr	s4, [r0, #12]
   16f98:	ldrb	r0, [r0, #16]
   16f9c:	mvn	r7, #0
   16fa0:	cmp	r0, #0
   16fa4:	vmul.f32	s0, s4, s0
   16fa8:	vldr	s4, [pc, #380]	; 1712c <__assert_fail@plt+0x556c>
   16fac:	vmul.f32	s2, s2, s0
   16fb0:	vseleq.f32	s0, s2, s0
   16fb4:	vcmpe.f32	s0, s4
   16fb8:	vmrs	APSR_nzcv, fpscr
   16fbc:	bge	170ac <__assert_fail@plt+0x54ec>
   16fc0:	vcvt.u32.f32	s0, s0
   16fc4:	mov	r0, r4
   16fc8:	vmov	r1, s0
   16fcc:	bl	168f4 <__assert_fail@plt+0x4d34>
   16fd0:	cmp	r0, #0
   16fd4:	beq	170ac <__assert_fail@plt+0x54ec>
   16fd8:	ldr	r1, [r4, #8]
   16fdc:	ldr	r2, [r4, #24]
   16fe0:	mov	r0, sl
   16fe4:	blx	r2
   16fe8:	mov	r7, r0
   16fec:	ldr	r0, [r4, #8]
   16ff0:	cmp	r7, r0
   16ff4:	bcs	17118 <__assert_fail@plt+0x5558>
   16ff8:	ldr	r5, [r4]
   16ffc:	mov	r9, r5
   17000:	ldr	r1, [r9, r7, lsl #3]!
   17004:	cmp	r1, #0
   17008:	beq	17038 <__assert_fail@plt+0x5478>
   1700c:	cmp	r1, sl
   17010:	mov	r0, sl
   17014:	beq	17030 <__assert_fail@plt+0x5470>
   17018:	ldr	r2, [r4, #28]
   1701c:	mov	r0, sl
   17020:	blx	r2
   17024:	cmp	r0, #0
   17028:	beq	170c8 <__assert_fail@plt+0x5508>
   1702c:	ldr	r0, [r9]
   17030:	cmp	r0, #0
   17034:	bne	17118 <__assert_fail@plt+0x5558>
   17038:	ldr	r0, [r9]
   1703c:	cmp	r0, #0
   17040:	beq	1705c <__assert_fail@plt+0x549c>
   17044:	ldr	r0, [r4, #36]	; 0x24
   17048:	cmp	r0, #0
   1704c:	beq	1707c <__assert_fail@plt+0x54bc>
   17050:	ldr	r1, [r0, #4]
   17054:	str	r1, [r4, #36]	; 0x24
   17058:	b	1708c <__assert_fail@plt+0x54cc>
   1705c:	str	sl, [r9]
   17060:	ldr	r0, [r4, #12]
   17064:	ldr	r1, [r4, #16]
   17068:	add	r0, r0, #1
   1706c:	add	r1, r1, #1
   17070:	str	r0, [r4, #12]
   17074:	str	r1, [r4, #16]
   17078:	b	170a8 <__assert_fail@plt+0x54e8>
   1707c:	mov	r0, #8
   17080:	bl	1ba3c <lchmod@@Base+0x4484>
   17084:	cmp	r0, #0
   17088:	beq	170b8 <__assert_fail@plt+0x54f8>
   1708c:	str	sl, [r0]
   17090:	ldr	r1, [r9, #4]
   17094:	str	r1, [r0, #4]
   17098:	str	r0, [r9, #4]
   1709c:	ldr	r0, [r4, #16]
   170a0:	add	r0, r0, #1
   170a4:	str	r0, [r4, #16]
   170a8:	mov	r7, #1
   170ac:	mov	r0, r7
   170b0:	sub	sp, fp, #28
   170b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170b8:	mvn	r7, #0
   170bc:	mov	r0, r7
   170c0:	sub	sp, fp, #28
   170c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170c8:	add	r6, r5, r7, lsl #3
   170cc:	ldr	r0, [r6, #4]!
   170d0:	cmp	r0, #0
   170d4:	beq	17038 <__assert_fail@plt+0x5478>
   170d8:	ldr	r1, [r0]
   170dc:	cmp	r1, sl
   170e0:	beq	1710c <__assert_fail@plt+0x554c>
   170e4:	ldr	r2, [r4, #28]
   170e8:	mov	r0, sl
   170ec:	blx	r2
   170f0:	ldr	r6, [r6]
   170f4:	cmp	r0, #0
   170f8:	beq	170cc <__assert_fail@plt+0x550c>
   170fc:	ldr	r0, [r6]
   17100:	cmp	r0, #0
   17104:	beq	17038 <__assert_fail@plt+0x5478>
   17108:	b	17118 <__assert_fail@plt+0x5558>
   1710c:	mov	r0, sl
   17110:	cmp	r0, #0
   17114:	beq	17038 <__assert_fail@plt+0x5478>
   17118:	bl	11b60 <abort@plt>
   1711c:	stclcc	12, cr12, [ip, #820]	; 0x334
   17120:	svccc	0x00666666
   17124:	svccc	0x008ccccd
   17128:	svccc	0x004ccccd
   1712c:	svcmi	0x00800000
   17130:	push	{r4, sl, fp, lr}
   17134:	add	fp, sp, #8
   17138:	sub	sp, sp, #8
   1713c:	add	r2, sp, #4
   17140:	mov	r4, r1
   17144:	bl	16dcc <__assert_fail@plt+0x520c>
   17148:	cmn	r0, #1
   1714c:	beq	17168 <__assert_fail@plt+0x55a8>
   17150:	ldr	r1, [sp, #4]
   17154:	cmp	r0, #0
   17158:	moveq	r4, r1
   1715c:	mov	r0, r4
   17160:	sub	sp, fp, #8
   17164:	pop	{r4, sl, fp, pc}
   17168:	mov	r4, #0
   1716c:	mov	r0, r4
   17170:	sub	sp, fp, #8
   17174:	pop	{r4, sl, fp, pc}
   17178:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1717c:	add	fp, sp, #24
   17180:	mov	r9, r1
   17184:	ldr	r1, [r0, #8]
   17188:	ldr	r2, [r0, #24]
   1718c:	mov	r5, r0
   17190:	mov	r0, r9
   17194:	blx	r2
   17198:	mov	r7, r0
   1719c:	ldr	r0, [r5, #8]
   171a0:	cmp	r7, r0
   171a4:	bcs	17418 <__assert_fail@plt+0x5858>
   171a8:	ldr	r6, [r5]
   171ac:	mov	r8, #0
   171b0:	mov	r4, r6
   171b4:	ldr	r1, [r4, r7, lsl #3]!
   171b8:	cmp	r1, #0
   171bc:	beq	17270 <__assert_fail@plt+0x56b0>
   171c0:	cmp	r1, r9
   171c4:	beq	171e0 <__assert_fail@plt+0x5620>
   171c8:	ldr	r2, [r5, #28]
   171cc:	mov	r0, r9
   171d0:	blx	r2
   171d4:	cmp	r0, #0
   171d8:	beq	17218 <__assert_fail@plt+0x5658>
   171dc:	ldr	r9, [r4]
   171e0:	add	r0, r6, r7, lsl #3
   171e4:	ldr	r0, [r0, #4]
   171e8:	cmp	r0, #0
   171ec:	beq	17260 <__assert_fail@plt+0x56a0>
   171f0:	ldm	r0, {r1, r2}
   171f4:	stm	r4, {r1, r2}
   171f8:	mov	r1, #0
   171fc:	str	r1, [r0]
   17200:	ldr	r1, [r5, #36]	; 0x24
   17204:	str	r1, [r0, #4]
   17208:	str	r0, [r5, #36]	; 0x24
   1720c:	cmp	r9, #0
   17210:	bne	172a8 <__assert_fail@plt+0x56e8>
   17214:	b	17270 <__assert_fail@plt+0x56b0>
   17218:	add	r7, r6, r7, lsl #3
   1721c:	ldr	r0, [r7, #4]!
   17220:	cmp	r0, #0
   17224:	beq	17270 <__assert_fail@plt+0x56b0>
   17228:	ldr	r1, [r0]
   1722c:	cmp	r1, r9
   17230:	beq	17278 <__assert_fail@plt+0x56b8>
   17234:	ldr	r2, [r5, #28]
   17238:	mov	r0, r9
   1723c:	blx	r2
   17240:	ldr	r1, [r7]
   17244:	cmp	r0, #0
   17248:	bne	17280 <__assert_fail@plt+0x56c0>
   1724c:	ldr	r0, [r1, #4]!
   17250:	mov	r7, r1
   17254:	cmp	r0, #0
   17258:	bne	17228 <__assert_fail@plt+0x5668>
   1725c:	b	17270 <__assert_fail@plt+0x56b0>
   17260:	mov	r0, #0
   17264:	str	r0, [r4]
   17268:	cmp	r9, #0
   1726c:	bne	172a8 <__assert_fail@plt+0x56e8>
   17270:	mov	r0, r8
   17274:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17278:	mov	r1, r0
   1727c:	b	17284 <__assert_fail@plt+0x56c4>
   17280:	ldr	r9, [r1]
   17284:	ldr	r0, [r1, #4]
   17288:	str	r0, [r7]
   1728c:	mov	r0, #0
   17290:	str	r0, [r1]
   17294:	ldr	r0, [r5, #36]	; 0x24
   17298:	str	r0, [r1, #4]
   1729c:	str	r1, [r5, #36]	; 0x24
   172a0:	cmp	r9, #0
   172a4:	beq	17270 <__assert_fail@plt+0x56b0>
   172a8:	ldr	r0, [r5, #16]
   172ac:	sub	r0, r0, #1
   172b0:	str	r0, [r5, #16]
   172b4:	ldr	r0, [r4]
   172b8:	cmp	r0, #0
   172bc:	bne	1740c <__assert_fail@plt+0x584c>
   172c0:	ldr	r0, [r5, #12]
   172c4:	vldr	s0, [r5, #8]
   172c8:	sub	r1, r0, #1
   172cc:	str	r1, [r5, #12]
   172d0:	vmov	s2, r1
   172d4:	ldr	r0, [r5, #20]
   172d8:	vcvt.f32.u32	s0, s0
   172dc:	vcvt.f32.u32	s2, s2
   172e0:	vldr	s4, [r0]
   172e4:	vmul.f32	s6, s4, s0
   172e8:	vcmpe.f32	s6, s2
   172ec:	vmrs	APSR_nzcv, fpscr
   172f0:	ble	1740c <__assert_fail@plt+0x584c>
   172f4:	movw	r1, #52768	; 0xce20
   172f8:	movt	r1, #1
   172fc:	cmp	r0, r1
   17300:	beq	1739c <__assert_fail@plt+0x57dc>
   17304:	vldr	s8, [pc, #272]	; 1741c <__assert_fail@plt+0x585c>
   17308:	vldr	s6, [r0, #8]
   1730c:	vcmpe.f32	s6, s8
   17310:	vmrs	APSR_nzcv, fpscr
   17314:	ble	17378 <__assert_fail@plt+0x57b8>
   17318:	vldr	s10, [pc, #256]	; 17420 <__assert_fail@plt+0x5860>
   1731c:	vcmpe.f32	s6, s10
   17320:	vmrs	APSR_nzcv, fpscr
   17324:	bpl	17378 <__assert_fail@plt+0x57b8>
   17328:	vcmpe.f32	s4, #0.0
   1732c:	vmrs	APSR_nzcv, fpscr
   17330:	blt	17378 <__assert_fail@plt+0x57b8>
   17334:	vldr	s10, [r0, #12]
   17338:	vldr	s12, [pc, #228]	; 17424 <__assert_fail@plt+0x5864>
   1733c:	vcmpe.f32	s10, s12
   17340:	vmrs	APSR_nzcv, fpscr
   17344:	ble	17378 <__assert_fail@plt+0x57b8>
   17348:	vadd.f32	s8, s4, s8
   1734c:	vcmpe.f32	s8, s6
   17350:	vmrs	APSR_nzcv, fpscr
   17354:	bpl	17378 <__assert_fail@plt+0x57b8>
   17358:	vldr	s6, [r0, #4]
   1735c:	vmov.f32	s10, #112	; 0x3f800000  1.0
   17360:	vcmpe.f32	s6, s10
   17364:	vmrs	APSR_nzcv, fpscr
   17368:	bhi	17378 <__assert_fail@plt+0x57b8>
   1736c:	vcmpe.f32	s8, s6
   17370:	vmrs	APSR_nzcv, fpscr
   17374:	bmi	17388 <__assert_fail@plt+0x57c8>
   17378:	vldr	s4, [pc, #168]	; 17428 <__assert_fail@plt+0x5868>
   1737c:	movw	r0, #52768	; 0xce20
   17380:	movt	r0, #1
   17384:	str	r0, [r5, #20]
   17388:	vmul.f32	s4, s4, s0
   1738c:	vcmpe.f32	s4, s2
   17390:	vmrs	APSR_nzcv, fpscr
   17394:	bgt	173b0 <__assert_fail@plt+0x57f0>
   17398:	b	1740c <__assert_fail@plt+0x584c>
   1739c:	mov	r0, r1
   173a0:	vmul.f32	s4, s4, s0
   173a4:	vcmpe.f32	s4, s2
   173a8:	vmrs	APSR_nzcv, fpscr
   173ac:	ble	1740c <__assert_fail@plt+0x584c>
   173b0:	vldr	s2, [r0, #4]
   173b4:	ldrb	r1, [r0, #16]
   173b8:	cmp	r1, #0
   173bc:	vmul.f32	s0, s2, s0
   173c0:	bne	173cc <__assert_fail@plt+0x580c>
   173c4:	vldr	s2, [r0, #8]
   173c8:	vmul.f32	s0, s0, s2
   173cc:	vcvt.u32.f32	s0, s0
   173d0:	mov	r0, r5
   173d4:	vmov	r1, s0
   173d8:	bl	168f4 <__assert_fail@plt+0x4d34>
   173dc:	cmp	r0, #0
   173e0:	bne	1740c <__assert_fail@plt+0x584c>
   173e4:	ldr	r0, [r5, #36]	; 0x24
   173e8:	cmp	r0, #0
   173ec:	beq	17404 <__assert_fail@plt+0x5844>
   173f0:	ldr	r4, [r0, #4]
   173f4:	bl	137a0 <__assert_fail@plt+0x1be0>
   173f8:	cmp	r4, #0
   173fc:	mov	r0, r4
   17400:	bne	173f0 <__assert_fail@plt+0x5830>
   17404:	mov	r0, #0
   17408:	str	r0, [r5, #36]	; 0x24
   1740c:	mov	r8, r9
   17410:	mov	r0, r8
   17414:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17418:	bl	11b60 <abort@plt>
   1741c:	stclcc	12, cr12, [ip, #820]	; 0x334
   17420:	svccc	0x00666666
   17424:	svccc	0x008ccccd
   17428:	andeq	r0, r0, r0
   1742c:	b	17178 <__assert_fail@plt+0x55b8>
   17430:	push	{r4, r5, fp, lr}
   17434:	add	fp, sp, #8
   17438:	mov	r5, r0
   1743c:	ldr	r0, [r0]
   17440:	mov	r4, r1
   17444:	bl	1c088 <lchmod@@Base+0x4ad0>
   17448:	ldrd	r2, [r5, #8]
   1744c:	eor	r0, r2, r0
   17450:	mov	r1, r3
   17454:	mov	r2, r4
   17458:	mov	r3, #0
   1745c:	bl	1c2bc <lchmod@@Base+0x4d04>
   17460:	mov	r0, r2
   17464:	pop	{r4, r5, fp, pc}
   17468:	push	{r4, r5, fp, lr}
   1746c:	add	fp, sp, #8
   17470:	mov	lr, r1
   17474:	mov	r2, r0
   17478:	ldr	r3, [r2, #8]!
   1747c:	ldr	ip, [lr, #8]!
   17480:	ldr	r4, [r2, #4]
   17484:	eor	ip, r3, ip
   17488:	ldr	r3, [lr, #4]
   1748c:	eor	r3, r4, r3
   17490:	orrs	r3, ip, r3
   17494:	mov	ip, #0
   17498:	bne	174c8 <__assert_fail@plt+0x5908>
   1749c:	ldrd	r4, [lr, #8]
   174a0:	ldrd	r2, [r2, #8]
   174a4:	eor	r3, r3, r5
   174a8:	eor	r2, r2, r4
   174ac:	orrs	r2, r2, r3
   174b0:	bne	174c8 <__assert_fail@plt+0x5908>
   174b4:	ldr	r1, [r1]
   174b8:	ldr	r0, [r0]
   174bc:	bl	117d0 <strcmp@plt>
   174c0:	clz	r0, r0
   174c4:	lsr	ip, r0, #5
   174c8:	mov	r0, ip
   174cc:	pop	{r4, r5, fp, pc}
   174d0:	push	{r4, sl, fp, lr}
   174d4:	add	fp, sp, #8
   174d8:	mov	r4, r0
   174dc:	ldr	r0, [r0]
   174e0:	bl	137a0 <__assert_fail@plt+0x1be0>
   174e4:	mov	r0, r4
   174e8:	pop	{r4, sl, fp, lr}
   174ec:	b	137a0 <__assert_fail@plt+0x1be0>
   174f0:	vdup.32	q8, r1
   174f4:	mov	r2, #0
   174f8:	str	r2, [r0, #20]
   174fc:	str	r2, [r0, #24]
   17500:	mov	r2, #1
   17504:	strb	r2, [r0, #28]
   17508:	vst1.32	{d16-d17}, [r0]!
   1750c:	str	r1, [r0]
   17510:	bx	lr
   17514:	ldrb	r0, [r0, #28]
   17518:	bx	lr
   1751c:	push	{fp, lr}
   17520:	mov	fp, sp
   17524:	ldrb	r3, [r0, #28]
   17528:	ldr	r2, [r0, #20]
   1752c:	eor	lr, r3, #1
   17530:	add	r2, r2, lr
   17534:	and	r3, r2, #3
   17538:	ldr	ip, [r0, r3, lsl #2]
   1753c:	str	r1, [r0, r3, lsl #2]
   17540:	str	r3, [r0, #20]
   17544:	ldr	r1, [r0, #24]
   17548:	cmp	r3, r1
   1754c:	addeq	r1, r2, lr
   17550:	andeq	r1, r1, #3
   17554:	streq	r1, [r0, #24]
   17558:	mov	r1, #0
   1755c:	strb	r1, [r0, #28]
   17560:	mov	r0, ip
   17564:	pop	{fp, pc}
   17568:	push	{fp, lr}
   1756c:	mov	fp, sp
   17570:	ldrb	r1, [r0, #28]
   17574:	cmp	r1, #0
   17578:	bne	175b4 <__assert_fail@plt+0x59f4>
   1757c:	ldr	r3, [r0, #20]
   17580:	ldr	r2, [r0, #16]
   17584:	ldr	r1, [r0, r3, lsl #2]
   17588:	str	r2, [r0, r3, lsl #2]
   1758c:	ldr	r2, [r0, #20]
   17590:	ldr	r3, [r0, #24]
   17594:	cmp	r2, r3
   17598:	moveq	r2, #1
   1759c:	strbeq	r2, [r0, #28]
   175a0:	subne	r2, r2, #1
   175a4:	andne	r2, r2, #3
   175a8:	strne	r2, [r0, #20]
   175ac:	mov	r0, r1
   175b0:	pop	{fp, pc}
   175b4:	bl	11b60 <abort@plt>

000175b8 <lchmod@@Base>:
   175b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   175bc:	add	fp, sp, #24
   175c0:	sub	sp, sp, #136	; 0x88
   175c4:	mov	r4, r1
   175c8:	mov	r1, #2654208	; 0x288000
   175cc:	mov	r5, r0
   175d0:	bl	1192c <open64@plt>
   175d4:	mov	r6, r0
   175d8:	cmp	r0, #0
   175dc:	bmi	17630 <lchmod@@Base+0x78>
   175e0:	movw	r2, #52411	; 0xccbb
   175e4:	mov	r0, #4096	; 0x1000
   175e8:	add	r3, sp, #32
   175ec:	mov	r1, r6
   175f0:	movt	r2, #1
   175f4:	str	r0, [sp]
   175f8:	mov	r0, #3
   175fc:	bl	118a8 <__fxstatat64@plt>
   17600:	cmp	r0, #0
   17604:	beq	17640 <lchmod@@Base+0x88>
   17608:	bl	11a04 <__errno_location@plt>
   1760c:	ldr	r5, [r0]
   17610:	mov	r4, r0
   17614:	mov	r0, r6
   17618:	bl	11b6c <close@plt>
   1761c:	str	r5, [r4]
   17620:	mvn	r7, #0
   17624:	mov	r0, r7
   17628:	sub	sp, fp, #24
   1762c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17630:	mov	r7, r6
   17634:	mov	r0, r7
   17638:	sub	sp, fp, #24
   1763c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17640:	ldr	r0, [sp, #48]	; 0x30
   17644:	and	r0, r0, #61440	; 0xf000
   17648:	cmp	r0, #40960	; 0xa000
   1764c:	bne	17674 <lchmod@@Base+0xbc>
   17650:	mov	r0, r6
   17654:	bl	11b6c <close@plt>
   17658:	bl	11a04 <__errno_location@plt>
   1765c:	mov	r1, #95	; 0x5f
   17660:	mvn	r7, #0
   17664:	str	r1, [r0]
   17668:	mov	r0, r7
   1766c:	sub	sp, fp, #24
   17670:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17674:	movw	r3, #52788	; 0xce34
   17678:	add	r7, sp, #6
   1767c:	mov	r1, #1
   17680:	mov	r2, #26
   17684:	str	r6, [sp]
   17688:	movt	r3, #1
   1768c:	mov	r0, r7
   17690:	bl	11a10 <__sprintf_chk@plt>
   17694:	mov	r0, r7
   17698:	mov	r1, r4
   1769c:	bl	11b30 <chmod@plt>
   176a0:	mov	r7, r0
   176a4:	bl	11a04 <__errno_location@plt>
   176a8:	ldr	r9, [r0]
   176ac:	mov	r8, r0
   176b0:	mov	r0, r6
   176b4:	bl	11b6c <close@plt>
   176b8:	cmp	r7, #0
   176bc:	beq	176e4 <lchmod@@Base+0x12c>
   176c0:	cmp	r9, #2
   176c4:	bne	176f4 <lchmod@@Base+0x13c>
   176c8:	mov	r0, r5
   176cc:	mov	r1, r4
   176d0:	bl	11b30 <chmod@plt>
   176d4:	mov	r7, r0
   176d8:	mov	r0, r7
   176dc:	sub	sp, fp, #24
   176e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   176e4:	mov	r7, #0
   176e8:	mov	r0, r7
   176ec:	sub	sp, fp, #24
   176f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   176f4:	str	r9, [r8]
   176f8:	mov	r0, r7
   176fc:	sub	sp, fp, #24
   17700:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17708:	add	fp, sp, #28
   1770c:	sub	sp, sp, #4
   17710:	ldrb	r1, [r0]
   17714:	mov	r4, r0
   17718:	and	r0, r1, #248	; 0xf8
   1771c:	cmp	r0, #48	; 0x30
   17720:	bne	1776c <lchmod@@Base+0x1b4>
   17724:	mov	r0, #0
   17728:	mov	r5, #0
   1772c:	mov	r2, r4
   17730:	lsl	r3, r5, #3
   17734:	uxtab	r1, r3, r1
   17738:	sub	r5, r1, #48	; 0x30
   1773c:	cmp	r0, r5, lsr #12
   17740:	bne	17764 <lchmod@@Base+0x1ac>
   17744:	ldrb	r1, [r2, #1]
   17748:	add	r6, r2, #1
   1774c:	and	r2, r1, #248	; 0xf8
   17750:	cmp	r2, #48	; 0x30
   17754:	mov	r2, r6
   17758:	beq	17730 <lchmod@@Base+0x178>
   1775c:	cmp	r1, #0
   17760:	beq	17af0 <lchmod@@Base+0x538>
   17764:	sub	sp, fp, #28
   17768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1776c:	movw	sl, #5
   17770:	mov	r2, #1
   17774:	mvn	r3, #42	; 0x2a
   17778:	mov	r7, #1
   1777c:	mov	r0, #1
   17780:	movt	sl, #4
   17784:	uxtab	r6, r3, r1
   17788:	uxtb	r1, r1
   1778c:	cmp	r6, #18
   17790:	bls	177bc <lchmod@@Base+0x204>
   17794:	cmp	r1, #0
   17798:	beq	177cc <lchmod@@Base+0x214>
   1779c:	mov	r6, #0
   177a0:	ldrb	r1, [r4, r7]
   177a4:	add	r0, r6, r0
   177a8:	add	r7, r7, #1
   177ac:	uxtab	r6, r3, r1
   177b0:	uxtb	r1, r1
   177b4:	cmp	r6, #18
   177b8:	bhi	17794 <lchmod@@Base+0x1dc>
   177bc:	tst	sl, r2, lsl r6
   177c0:	mov	r6, #1
   177c4:	bne	177a0 <lchmod@@Base+0x1e8>
   177c8:	b	17794 <lchmod@@Base+0x1dc>
   177cc:	mov	r1, #16
   177d0:	bl	1a808 <lchmod@@Base+0x3250>
   177d4:	mov	r9, #0
   177d8:	mov	ip, #1
   177dc:	mvn	lr, #87	; 0x57
   177e0:	mov	r8, #0
   177e4:	mov	r2, #0
   177e8:	ldrb	r6, [r4]
   177ec:	sub	r3, r6, #97	; 0x61
   177f0:	cmp	r3, #20
   177f4:	bls	17818 <lchmod@@Base+0x260>
   177f8:	b	17888 <lchmod@@Base+0x2d0>
   177fc:	movw	r1, #4095	; 0xfff
   17800:	orr	r2, r2, r1
   17804:	add	r4, r4, #1
   17808:	ldrb	r6, [r4]
   1780c:	sub	r3, r6, #97	; 0x61
   17810:	cmp	r3, #20
   17814:	bhi	17888 <lchmod@@Base+0x2d0>
   17818:	add	r5, pc, #4
   1781c:	mov	r1, #2496	; 0x9c0
   17820:	ldr	pc, [r5, r3, lsl #2]
   17824:	strdeq	r7, [r1], -ip
   17828:	andeq	r7, r1, r0, asr fp
   1782c:	andeq	r7, r1, r0, asr fp
   17830:	andeq	r7, r1, r0, asr fp
   17834:	andeq	r7, r1, r0, asr fp
   17838:	andeq	r7, r1, r0, asr fp
   1783c:	andeq	r7, r1, r8, ror r8
   17840:	andeq	r7, r1, r0, asr fp
   17844:	andeq	r7, r1, r0, asr fp
   17848:	andeq	r7, r1, r0, asr fp
   1784c:	andeq	r7, r1, r0, asr fp
   17850:	andeq	r7, r1, r0, asr fp
   17854:	andeq	r7, r1, r0, asr fp
   17858:	andeq	r7, r1, r0, asr fp
   1785c:	andeq	r7, r1, r0, lsl #17
   17860:	andeq	r7, r1, r0, asr fp
   17864:	andeq	r7, r1, r0, asr fp
   17868:	andeq	r7, r1, r0, asr fp
   1786c:	andeq	r7, r1, r0, asr fp
   17870:	andeq	r7, r1, r0, asr fp
   17874:	andeq	r7, r1, r0, lsl #16
   17878:	movw	r1, #1080	; 0x438
   1787c:	b	17800 <lchmod@@Base+0x248>
   17880:	movw	r1, #519	; 0x207
   17884:	b	17800 <lchmod@@Base+0x248>
   17888:	sub	r1, r6, #43	; 0x2b
   1788c:	cmp	r1, #18
   17890:	bhi	17b50 <lchmod@@Base+0x598>
   17894:	tst	sl, ip, lsl r1
   17898:	beq	17b50 <lchmod@@Base+0x598>
   1789c:	ldrb	r1, [r4, #1]
   178a0:	sub	r3, r1, #48	; 0x30
   178a4:	cmp	r3, #8
   178a8:	bcs	17904 <lchmod@@Base+0x34c>
   178ac:	add	r3, r4, #2
   178b0:	mov	r7, #0
   178b4:	lsl	r4, r7, #3
   178b8:	uxtab	r1, r4, r1
   178bc:	sub	r7, r1, #48	; 0x30
   178c0:	cmp	r9, r7, lsr #12
   178c4:	bne	17b50 <lchmod@@Base+0x598>
   178c8:	ldrb	r1, [r3], #1
   178cc:	and	r4, r1, #248	; 0xf8
   178d0:	cmp	r4, #48	; 0x30
   178d4:	beq	178b4 <lchmod@@Base+0x2fc>
   178d8:	cmp	r2, #0
   178dc:	bne	17b50 <lchmod@@Base+0x598>
   178e0:	sub	r4, r3, #1
   178e4:	mov	r5, #1
   178e8:	movw	r2, #4095	; 0xfff
   178ec:	cmp	r1, #0
   178f0:	beq	17930 <lchmod@@Base+0x378>
   178f4:	cmp	r1, #44	; 0x2c
   178f8:	movw	r1, #4095	; 0xfff
   178fc:	beq	17a4c <lchmod@@Base+0x494>
   17900:	b	17b50 <lchmod@@Base+0x598>
   17904:	add	r4, r4, #2
   17908:	cmp	r1, #103	; 0x67
   1790c:	beq	17938 <lchmod@@Base+0x380>
   17910:	cmp	r1, #111	; 0x6f
   17914:	beq	17948 <lchmod@@Base+0x390>
   17918:	cmp	r1, #117	; 0x75
   1791c:	bne	17958 <lchmod@@Base+0x3a0>
   17920:	mov	r5, #3
   17924:	mov	r1, #0
   17928:	mov	r7, #448	; 0x1c0
   1792c:	b	17a4c <lchmod@@Base+0x494>
   17930:	movw	r1, #4095	; 0xfff
   17934:	b	17a4c <lchmod@@Base+0x494>
   17938:	mov	r5, #3
   1793c:	mov	r1, #0
   17940:	mov	r7, #56	; 0x38
   17944:	b	17a4c <lchmod@@Base+0x494>
   17948:	mov	r5, #3
   1794c:	mov	r1, #0
   17950:	mov	r7, #7
   17954:	b	17a4c <lchmod@@Base+0x494>
   17958:	mov	r3, #1
   1795c:	mov	r7, #0
   17960:	uxtab	r1, lr, r1
   17964:	mov	r5, r3
   17968:	cmp	r1, #32
   1796c:	bls	17990 <lchmod@@Base+0x3d8>
   17970:	b	17a40 <lchmod@@Base+0x488>
   17974:	orr	r7, r7, #512	; 0x200
   17978:	mov	r3, r5
   1797c:	ldrb	r1, [r4], #1
   17980:	uxtab	r1, lr, r1
   17984:	mov	r5, r3
   17988:	cmp	r1, #32
   1798c:	bhi	17a40 <lchmod@@Base+0x488>
   17990:	add	ip, pc, #4
   17994:	mov	r3, #2
   17998:	ldr	pc, [ip, r1, lsl #2]
   1799c:	andeq	r7, r1, ip, ror r9
   179a0:	andeq	r7, r1, r0, asr #20
   179a4:	andeq	r7, r1, r0, asr #20
   179a8:	andeq	r7, r1, r0, asr #20
   179ac:	andeq	r7, r1, r0, asr #20
   179b0:	andeq	r7, r1, r0, asr #20
   179b4:	andeq	r7, r1, r0, asr #20
   179b8:	andeq	r7, r1, r0, asr #20
   179bc:	andeq	r7, r1, r0, asr #20
   179c0:	andeq	r7, r1, r0, asr #20
   179c4:	andeq	r7, r1, r0, asr #20
   179c8:	andeq	r7, r1, r0, asr #20
   179cc:	andeq	r7, r1, r0, asr #20
   179d0:	andeq	r7, r1, r0, asr #20
   179d4:	andeq	r7, r1, r0, asr #20
   179d8:	andeq	r7, r1, r0, asr #20
   179dc:	andeq	r7, r1, r0, asr #20
   179e0:	andeq	r7, r1, r0, asr #20
   179e4:	andeq	r7, r1, r0, asr #20
   179e8:	andeq	r7, r1, r0, asr #20
   179ec:	andeq	r7, r1, r0, asr #20
   179f0:	andeq	r7, r1, r0, asr #20
   179f4:	andeq	r7, r1, r0, asr #20
   179f8:	andeq	r7, r1, r0, asr #20
   179fc:	andeq	r7, r1, r0, asr #20
   17a00:	andeq	r7, r1, r0, asr #20
   17a04:	andeq	r7, r1, r0, lsr #20
   17a08:	andeq	r7, r1, r8, lsr #20
   17a0c:	andeq	r7, r1, r4, ror r9
   17a10:	andeq	r7, r1, r0, asr #20
   17a14:	andeq	r7, r1, r0, asr #20
   17a18:	andeq	r7, r1, r0, lsr sl
   17a1c:	andeq	r7, r1, r8, lsr sl
   17a20:	orr	r7, r7, #292	; 0x124
   17a24:	b	17978 <lchmod@@Base+0x3c0>
   17a28:	orr	r7, r7, #3072	; 0xc00
   17a2c:	b	17978 <lchmod@@Base+0x3c0>
   17a30:	orr	r7, r7, #146	; 0x92
   17a34:	b	17978 <lchmod@@Base+0x3c0>
   17a38:	orr	r7, r7, #73	; 0x49
   17a3c:	b	17978 <lchmod@@Base+0x3c0>
   17a40:	sub	r4, r4, #1
   17a44:	mov	r1, #0
   17a48:	mov	ip, #1
   17a4c:	mov	r3, r0
   17a50:	cmp	r1, #0
   17a54:	strb	r6, [r3, r8, lsl #4]!
   17a58:	stmib	r3, {r2, r7}
   17a5c:	strb	r5, [r3, #1]
   17a60:	bne	17a70 <lchmod@@Base+0x4b8>
   17a64:	cmp	r2, #0
   17a68:	andne	r7, r7, r2
   17a6c:	mov	r1, r7
   17a70:	add	r7, r0, r8, lsl #4
   17a74:	add	r3, r8, #1
   17a78:	str	r1, [r7, #12]
   17a7c:	ldrb	r6, [r4]
   17a80:	sub	r1, r6, #43	; 0x2b
   17a84:	cmp	r1, #18
   17a88:	bhi	17b34 <lchmod@@Base+0x57c>
   17a8c:	add	r7, pc, #4
   17a90:	mov	r8, r3
   17a94:	ldr	pc, [r7, r1, lsl #2]
   17a98:	muleq	r1, ip, r8
   17a9c:	andeq	r7, r1, r4, ror #21
   17aa0:	muleq	r1, ip, r8
   17aa4:	andeq	r7, r1, r0, asr fp
   17aa8:	andeq	r7, r1, r0, asr fp
   17aac:	andeq	r7, r1, r0, asr fp
   17ab0:	andeq	r7, r1, r0, asr fp
   17ab4:	andeq	r7, r1, r0, asr fp
   17ab8:	andeq	r7, r1, r0, asr fp
   17abc:	andeq	r7, r1, r0, asr fp
   17ac0:	andeq	r7, r1, r0, asr fp
   17ac4:	andeq	r7, r1, r0, asr fp
   17ac8:	andeq	r7, r1, r0, asr fp
   17acc:	andeq	r7, r1, r0, asr fp
   17ad0:	andeq	r7, r1, r0, asr fp
   17ad4:	andeq	r7, r1, r0, asr fp
   17ad8:	andeq	r7, r1, r0, asr fp
   17adc:	andeq	r7, r1, r0, asr fp
   17ae0:	muleq	r1, ip, r8
   17ae4:	add	r4, r4, #1
   17ae8:	mov	r8, r3
   17aec:	b	177e4 <lchmod@@Base+0x22c>
   17af0:	mov	r0, #32
   17af4:	bl	1a738 <lchmod@@Base+0x3180>
   17af8:	mov	r1, #0
   17afc:	movw	r2, #317	; 0x13d
   17b00:	and	r3, r5, #3072	; 0xc00
   17b04:	movw	r7, #1023	; 0x3ff
   17b08:	strb	r1, [r0, #17]
   17b0c:	strh	r2, [r0]
   17b10:	sub	r2, r6, r4
   17b14:	movw	r1, #4095	; 0xfff
   17b18:	cmp	r2, #5
   17b1c:	str	r1, [r0, #4]
   17b20:	str	r5, [r0, #8]
   17b24:	orrlt	r1, r3, r7
   17b28:	str	r1, [r0, #12]
   17b2c:	sub	sp, fp, #28
   17b30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b34:	cmp	r6, #0
   17b38:	bne	17b50 <lchmod@@Base+0x598>
   17b3c:	add	r1, r0, r3, lsl #4
   17b40:	mov	r2, #0
   17b44:	strb	r2, [r1, #1]
   17b48:	sub	sp, fp, #28
   17b4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b50:	bl	137a0 <__assert_fail@plt+0x1be0>
   17b54:	mov	r0, #0
   17b58:	sub	sp, fp, #28
   17b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b60:	push	{r4, sl, fp, lr}
   17b64:	add	fp, sp, #8
   17b68:	sub	sp, sp, #104	; 0x68
   17b6c:	mov	r1, r0
   17b70:	mov	r2, sp
   17b74:	mov	r0, #3
   17b78:	bl	11b3c <__xstat64@plt>
   17b7c:	mov	r1, r0
   17b80:	mov	r0, #0
   17b84:	cmp	r1, #0
   17b88:	beq	17b94 <lchmod@@Base+0x5dc>
   17b8c:	sub	sp, fp, #8
   17b90:	pop	{r4, sl, fp, pc}
   17b94:	ldr	r4, [sp, #16]
   17b98:	mov	r0, #32
   17b9c:	bl	1a738 <lchmod@@Base+0x3180>
   17ba0:	mov	r1, #0
   17ba4:	strb	r1, [r0, #17]
   17ba8:	movw	r1, #4095	; 0xfff
   17bac:	stmib	r0, {r1, r4}
   17bb0:	str	r1, [r0, #12]
   17bb4:	movw	r1, #317	; 0x13d
   17bb8:	strh	r1, [r0]
   17bbc:	sub	sp, fp, #8
   17bc0:	pop	{r4, sl, fp, pc}
   17bc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17bc8:	add	fp, sp, #24
   17bcc:	ldrb	r4, [r3, #1]
   17bd0:	ldr	ip, [fp, #8]
   17bd4:	bfc	r0, #12, #20
   17bd8:	cmp	r4, #0
   17bdc:	beq	17cbc <lchmod@@Base+0x704>
   17be0:	cmp	r1, #0
   17be4:	mov	lr, r1
   17be8:	add	r3, r3, #8
   17bec:	mov	r9, #0
   17bf0:	movw	r8, #4095	; 0xfff
   17bf4:	movwne	lr, #3072	; 0xc00
   17bf8:	b	17c14 <lchmod@@Base+0x65c>
   17bfc:	bic	r0, r0, r3
   17c00:	orr	r9, r3, r9
   17c04:	ldrb	r4, [r5, #9]
   17c08:	add	r3, r5, #16
   17c0c:	cmp	r4, #0
   17c10:	beq	17cc0 <lchmod@@Base+0x708>
   17c14:	mov	r5, r3
   17c18:	ldr	r7, [r3, #-4]
   17c1c:	ldr	r3, [r3]
   17c20:	uxtb	r4, r4
   17c24:	ldr	r6, [r5, #4]
   17c28:	cmp	r4, #2
   17c2c:	bic	r6, lr, r6
   17c30:	beq	17c5c <lchmod@@Base+0x6a4>
   17c34:	cmp	r4, #3
   17c38:	bne	17c68 <lchmod@@Base+0x6b0>
   17c3c:	and	r4, r3, r0
   17c40:	tst	r4, #146	; 0x92
   17c44:	mov	r3, r4
   17c48:	orrne	r3, r3, #146	; 0x92
   17c4c:	tst	r4, #292	; 0x124
   17c50:	orrne	r3, r3, #292	; 0x124
   17c54:	tst	r4, #73	; 0x49
   17c58:	b	17c64 <lchmod@@Base+0x6ac>
   17c5c:	and	r4, r0, #73	; 0x49
   17c60:	orrs	r4, r4, r1
   17c64:	orrne	r3, r3, #73	; 0x49
   17c68:	cmp	r7, #0
   17c6c:	mov	r4, r7
   17c70:	mvneq	r4, r2
   17c74:	bic	r4, r4, r6
   17c78:	and	r3, r4, r3
   17c7c:	ldrb	r4, [r5, #-8]
   17c80:	cmp	r4, #43	; 0x2b
   17c84:	beq	17cb4 <lchmod@@Base+0x6fc>
   17c88:	cmp	r4, #45	; 0x2d
   17c8c:	beq	17bfc <lchmod@@Base+0x644>
   17c90:	cmp	r4, #61	; 0x3d
   17c94:	bne	17c04 <lchmod@@Base+0x64c>
   17c98:	mvn	r4, r7
   17c9c:	cmp	r7, #0
   17ca0:	orrne	r6, r6, r4
   17ca4:	and	r0, r6, r0
   17ca8:	orr	r0, r3, r0
   17cac:	bic	r3, r8, r6
   17cb0:	b	17c00 <lchmod@@Base+0x648>
   17cb4:	orr	r0, r3, r0
   17cb8:	b	17c00 <lchmod@@Base+0x648>
   17cbc:	mov	r9, #0
   17cc0:	cmp	ip, #0
   17cc4:	strne	r9, [ip]
   17cc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17ccc:	sub	sp, sp, #4
   17cd0:	push	{fp, lr}
   17cd4:	mov	fp, sp
   17cd8:	sub	sp, sp, #4
   17cdc:	str	r3, [fp, #8]
   17ce0:	tst	r2, #64	; 0x40
   17ce4:	mov	r3, #0
   17ce8:	ldrne	r3, [fp, #8]
   17cec:	bl	119ec <openat64@plt>
   17cf0:	bl	1a030 <lchmod@@Base+0x2a78>
   17cf4:	mov	sp, fp
   17cf8:	pop	{fp, lr}
   17cfc:	add	sp, sp, #4
   17d00:	bx	lr
   17d04:	push	{r4, r5, r6, sl, fp, lr}
   17d08:	add	fp, sp, #16
   17d0c:	orr	r2, r2, #18688	; 0x4900
   17d10:	mov	r4, r3
   17d14:	orr	r2, r2, #524288	; 0x80000
   17d18:	bl	17ccc <lchmod@@Base+0x714>
   17d1c:	mov	r5, r0
   17d20:	mov	r0, #0
   17d24:	cmp	r5, #0
   17d28:	bmi	17d60 <lchmod@@Base+0x7a8>
   17d2c:	mov	r0, r5
   17d30:	bl	11ab8 <fdopendir@plt>
   17d34:	cmp	r0, #0
   17d38:	beq	17d44 <lchmod@@Base+0x78c>
   17d3c:	str	r5, [r4]
   17d40:	pop	{r4, r5, r6, sl, fp, pc}
   17d44:	bl	11a04 <__errno_location@plt>
   17d48:	ldr	r6, [r0]
   17d4c:	mov	r4, r0
   17d50:	mov	r0, r5
   17d54:	bl	11b6c <close@plt>
   17d58:	mov	r0, #0
   17d5c:	str	r6, [r4]
   17d60:	pop	{r4, r5, r6, sl, fp, pc}
   17d64:	push	{r4, r5, fp, lr}
   17d68:	add	fp, sp, #8
   17d6c:	cmp	r0, #0
   17d70:	beq	17e04 <lchmod@@Base+0x84c>
   17d74:	mov	r1, #47	; 0x2f
   17d78:	mov	r4, r0
   17d7c:	bl	11a94 <strrchr@plt>
   17d80:	cmp	r0, #0
   17d84:	mov	r5, r4
   17d88:	addne	r5, r0, #1
   17d8c:	sub	r0, r5, r4
   17d90:	cmp	r0, #7
   17d94:	blt	17de8 <lchmod@@Base+0x830>
   17d98:	movw	r1, #52861	; 0xce7d
   17d9c:	sub	r0, r5, #7
   17da0:	mov	r2, #7
   17da4:	movt	r1, #1
   17da8:	bl	11b54 <strncmp@plt>
   17dac:	cmp	r0, #0
   17db0:	bne	17de8 <lchmod@@Base+0x830>
   17db4:	movw	r1, #52869	; 0xce85
   17db8:	mov	r0, r5
   17dbc:	mov	r2, #3
   17dc0:	movt	r1, #1
   17dc4:	bl	11b54 <strncmp@plt>
   17dc8:	cmp	r0, #0
   17dcc:	beq	17dd8 <lchmod@@Base+0x820>
   17dd0:	mov	r4, r5
   17dd4:	b	17de8 <lchmod@@Base+0x830>
   17dd8:	movw	r0, #57808	; 0xe1d0
   17ddc:	add	r4, r5, #3
   17de0:	movt	r0, #2
   17de4:	str	r4, [r0]
   17de8:	movw	r0, #57812	; 0xe1d4
   17dec:	movt	r0, #2
   17df0:	str	r4, [r0]
   17df4:	movw	r0, #57848	; 0xe1f8
   17df8:	movt	r0, #2
   17dfc:	str	r4, [r0]
   17e00:	pop	{r4, r5, fp, pc}
   17e04:	movw	r0, #57824	; 0xe1e0
   17e08:	mov	r1, #55	; 0x37
   17e0c:	mov	r2, #1
   17e10:	movt	r0, #2
   17e14:	ldr	r3, [r0]
   17e18:	movw	r0, #52805	; 0xce45
   17e1c:	movt	r0, #1
   17e20:	bl	118d8 <fwrite@plt>
   17e24:	bl	11b60 <abort@plt>
   17e28:	push	{r4, r5, r6, sl, fp, lr}
   17e2c:	add	fp, sp, #16
   17e30:	mov	r4, r0
   17e34:	movw	r0, #57856	; 0xe200
   17e38:	movt	r0, #2
   17e3c:	cmp	r4, #0
   17e40:	moveq	r4, r0
   17e44:	bl	11a04 <__errno_location@plt>
   17e48:	ldr	r6, [r0]
   17e4c:	mov	r5, r0
   17e50:	mov	r0, r4
   17e54:	mov	r1, #48	; 0x30
   17e58:	bl	1ab98 <lchmod@@Base+0x35e0>
   17e5c:	str	r6, [r5]
   17e60:	pop	{r4, r5, r6, sl, fp, pc}
   17e64:	movw	r1, #57856	; 0xe200
   17e68:	cmp	r0, #0
   17e6c:	movt	r1, #2
   17e70:	movne	r1, r0
   17e74:	ldr	r0, [r1]
   17e78:	bx	lr
   17e7c:	movw	r2, #57856	; 0xe200
   17e80:	cmp	r0, #0
   17e84:	movt	r2, #2
   17e88:	movne	r2, r0
   17e8c:	str	r1, [r2]
   17e90:	bx	lr
   17e94:	movw	r3, #57856	; 0xe200
   17e98:	cmp	r0, #0
   17e9c:	and	r2, r2, #1
   17ea0:	movt	r3, #2
   17ea4:	movne	r3, r0
   17ea8:	ubfx	r0, r1, #5, #3
   17eac:	and	r1, r1, #31
   17eb0:	add	ip, r3, r0, lsl #2
   17eb4:	mov	r0, #1
   17eb8:	ldr	r3, [ip, #8]
   17ebc:	and	r0, r0, r3, lsr r1
   17ec0:	eor	r2, r0, r2
   17ec4:	eor	r1, r3, r2, lsl r1
   17ec8:	str	r1, [ip, #8]
   17ecc:	bx	lr
   17ed0:	movw	r2, #57856	; 0xe200
   17ed4:	cmp	r0, #0
   17ed8:	movt	r2, #2
   17edc:	movne	r2, r0
   17ee0:	ldr	r0, [r2, #4]
   17ee4:	str	r1, [r2, #4]
   17ee8:	bx	lr
   17eec:	push	{fp, lr}
   17ef0:	mov	fp, sp
   17ef4:	movw	r3, #57856	; 0xe200
   17ef8:	cmp	r0, #0
   17efc:	movt	r3, #2
   17f00:	movne	r3, r0
   17f04:	cmp	r1, #0
   17f08:	mov	r0, #10
   17f0c:	cmpne	r2, #0
   17f10:	str	r0, [r3]
   17f14:	bne	17f1c <lchmod@@Base+0x964>
   17f18:	bl	11b60 <abort@plt>
   17f1c:	str	r1, [r3, #40]	; 0x28
   17f20:	str	r2, [r3, #44]	; 0x2c
   17f24:	pop	{fp, pc}
   17f28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f2c:	add	fp, sp, #28
   17f30:	sub	sp, sp, #20
   17f34:	mov	r7, r0
   17f38:	ldr	r0, [fp, #8]
   17f3c:	movw	r5, #57856	; 0xe200
   17f40:	mov	r8, r3
   17f44:	mov	r9, r2
   17f48:	mov	sl, r1
   17f4c:	movt	r5, #2
   17f50:	cmp	r0, #0
   17f54:	movne	r5, r0
   17f58:	bl	11a04 <__errno_location@plt>
   17f5c:	ldr	r2, [r5, #40]	; 0x28
   17f60:	ldr	r3, [r5, #44]	; 0x2c
   17f64:	mov	r4, r0
   17f68:	ldm	r5, {r0, r1}
   17f6c:	add	r5, r5, #8
   17f70:	ldr	r6, [r4]
   17f74:	stm	sp, {r0, r1, r5}
   17f78:	mov	r0, r7
   17f7c:	mov	r1, sl
   17f80:	str	r2, [sp, #12]
   17f84:	str	r3, [sp, #16]
   17f88:	mov	r2, r9
   17f8c:	mov	r3, r8
   17f90:	bl	17fa0 <lchmod@@Base+0x9e8>
   17f94:	str	r6, [r4]
   17f98:	sub	sp, fp, #28
   17f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17fa4:	add	fp, sp, #28
   17fa8:	sub	sp, sp, #156	; 0x9c
   17fac:	str	r0, [fp, #-84]	; 0xffffffac
   17fb0:	add	r0, r2, #1
   17fb4:	mov	r6, r1
   17fb8:	mov	r7, r3
   17fbc:	str	r2, [fp, #-80]	; 0xffffffb0
   17fc0:	str	r0, [sp, #80]	; 0x50
   17fc4:	ldr	r0, [fp, #12]
   17fc8:	and	r1, r0, #1
   17fcc:	str	r1, [sp, #36]	; 0x24
   17fd0:	and	r1, r0, #4
   17fd4:	str	r1, [sp, #32]
   17fd8:	ubfx	r8, r0, #1, #1
   17fdc:	bl	118f0 <__ctype_get_mb_cur_max@plt>
   17fe0:	str	r0, [sp, #40]	; 0x28
   17fe4:	ldr	r0, [fp, #24]
   17fe8:	ldr	r4, [fp, #8]
   17fec:	mov	r1, #0
   17ff0:	str	r1, [fp, #-52]	; 0xffffffcc
   17ff4:	mov	r1, #0
   17ff8:	str	r1, [sp, #60]	; 0x3c
   17ffc:	mov	r1, #1
   18000:	str	r1, [sp, #84]	; 0x54
   18004:	str	r0, [sp, #76]	; 0x4c
   18008:	ldr	r0, [fp, #20]
   1800c:	str	r0, [sp, #72]	; 0x48
   18010:	mov	r0, #0
   18014:	str	r0, [sp, #56]	; 0x38
   18018:	mov	r0, #0
   1801c:	str	r0, [fp, #-88]	; 0xffffffa8
   18020:	mov	r0, #0
   18024:	str	r0, [fp, #-72]	; 0xffffffb8
   18028:	mov	r0, #0
   1802c:	cmp	r4, #10
   18030:	bhi	1934c <lchmod@@Base+0x1d94>
   18034:	add	r1, pc, #24
   18038:	ldr	ip, [fp, #-84]	; 0xffffffac
   1803c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   18040:	mov	r5, r6
   18044:	mov	r9, #0
   18048:	mov	r2, #1
   1804c:	mov	r3, #0
   18050:	ldr	pc, [r1, r4, lsl #2]
   18054:	andeq	r8, r1, ip, lsl r1
   18058:	andeq	r8, r1, r8, asr r1
   1805c:	andeq	r8, r1, ip, lsr #2
   18060:	andeq	r8, r1, r4, lsl r1
   18064:	andeq	r8, r1, ip, asr #2
   18068:			; <UNDEFINED> instruction: 0x000181b0
   1806c:	andeq	r8, r1, ip, lsr r1
   18070:	andeq	r8, r1, r8, lsr #8
   18074:	andeq	r8, r1, r0, lsl #1
   18078:	andeq	r8, r1, r0, lsl #1
   1807c:			; <UNDEFINED> instruction: 0x000182b8
   18080:	movw	r6, #52951	; 0xced7
   18084:	mov	r0, #0
   18088:	mov	r2, #5
   1808c:	movt	r6, #1
   18090:	mov	r1, r6
   18094:	bl	11860 <dcgettext@plt>
   18098:	cmp	r0, r6
   1809c:	str	r0, [sp, #72]	; 0x48
   180a0:	bne	18290 <lchmod@@Base+0xcd8>
   180a4:	bl	1c0cc <lchmod@@Base+0x4b14>
   180a8:	ldrb	r1, [r0]
   180ac:	and	r1, r1, #223	; 0xdf
   180b0:	cmp	r1, #71	; 0x47
   180b4:	beq	18210 <lchmod@@Base+0xc58>
   180b8:	cmp	r1, #85	; 0x55
   180bc:	bne	18274 <lchmod@@Base+0xcbc>
   180c0:	ldrb	r1, [r0, #1]
   180c4:	and	r1, r1, #223	; 0xdf
   180c8:	cmp	r1, #84	; 0x54
   180cc:	bne	18274 <lchmod@@Base+0xcbc>
   180d0:	ldrb	r1, [r0, #2]
   180d4:	and	r1, r1, #223	; 0xdf
   180d8:	cmp	r1, #70	; 0x46
   180dc:	bne	18274 <lchmod@@Base+0xcbc>
   180e0:	ldrb	r1, [r0, #3]
   180e4:	cmp	r1, #45	; 0x2d
   180e8:	bne	18274 <lchmod@@Base+0xcbc>
   180ec:	ldrb	r1, [r0, #4]
   180f0:	cmp	r1, #56	; 0x38
   180f4:	bne	18274 <lchmod@@Base+0xcbc>
   180f8:	ldrb	r0, [r0, #5]
   180fc:	cmp	r0, #0
   18100:	movw	r0, #52955	; 0xcedb
   18104:	movt	r0, #1
   18108:	str	r0, [sp, #72]	; 0x48
   1810c:	bne	18274 <lchmod@@Base+0xcbc>
   18110:	b	18290 <lchmod@@Base+0xcd8>
   18114:	mov	r0, #1
   18118:	b	18158 <lchmod@@Base+0xba0>
   1811c:	mov	r4, #0
   18120:	mov	r9, #0
   18124:	mov	r2, r0
   18128:	b	181a8 <lchmod@@Base+0xbf0>
   1812c:	tst	r8, #1
   18130:	bne	18158 <lchmod@@Base+0xba0>
   18134:	mov	r2, r0
   18138:	b	18180 <lchmod@@Base+0xbc8>
   1813c:	mov	r0, #1
   18140:	mov	r9, #0
   18144:	mov	r4, #5
   18148:	b	181c4 <lchmod@@Base+0xc0c>
   1814c:	mov	r2, #1
   18150:	tst	r8, #1
   18154:	beq	18180 <lchmod@@Base+0xbc8>
   18158:	mov	r1, #1
   1815c:	mov	r9, #0
   18160:	mov	r4, #2
   18164:	mov	r2, r0
   18168:	mov	r3, #1
   1816c:	str	r1, [fp, #-72]	; 0xffffffb8
   18170:	movw	r1, #52953	; 0xced9
   18174:	movt	r1, #1
   18178:	str	r1, [fp, #-88]	; 0xffffffa8
   1817c:	b	18428 <lchmod@@Base+0xe70>
   18180:	cmp	r5, #0
   18184:	mov	r9, #1
   18188:	mov	r4, #2
   1818c:	movne	r0, #39	; 0x27
   18190:	strbne	r0, [ip]
   18194:	movw	r0, #52953	; 0xced9
   18198:	movt	r0, #1
   1819c:	str	r0, [fp, #-88]	; 0xffffffa8
   181a0:	mov	r0, #1
   181a4:	str	r0, [fp, #-72]	; 0xffffffb8
   181a8:	mov	r3, #0
   181ac:	b	18428 <lchmod@@Base+0xe70>
   181b0:	mov	r4, #5
   181b4:	tst	r8, #1
   181b8:	beq	181e0 <lchmod@@Base+0xc28>
   181bc:	mov	r0, #1
   181c0:	mov	r9, #0
   181c4:	str	r0, [fp, #-72]	; 0xffffffb8
   181c8:	movw	r0, #52949	; 0xced5
   181cc:	mov	r2, #1
   181d0:	mov	r3, #1
   181d4:	movt	r0, #1
   181d8:	str	r0, [fp, #-88]	; 0xffffffa8
   181dc:	b	18428 <lchmod@@Base+0xe70>
   181e0:	cmp	r5, #0
   181e4:	mov	r3, #0
   181e8:	mov	r9, #1
   181ec:	mov	r2, #1
   181f0:	movne	r0, #34	; 0x22
   181f4:	strbne	r0, [ip]
   181f8:	movw	r0, #52949	; 0xced5
   181fc:	movt	r0, #1
   18200:	str	r0, [fp, #-88]	; 0xffffffa8
   18204:	mov	r0, #1
   18208:	str	r0, [fp, #-72]	; 0xffffffb8
   1820c:	b	18428 <lchmod@@Base+0xe70>
   18210:	ldrb	r1, [r0, #1]
   18214:	and	r1, r1, #223	; 0xdf
   18218:	cmp	r1, #66	; 0x42
   1821c:	bne	18274 <lchmod@@Base+0xcbc>
   18220:	ldrb	r1, [r0, #2]
   18224:	cmp	r1, #49	; 0x31
   18228:	bne	18274 <lchmod@@Base+0xcbc>
   1822c:	ldrb	r1, [r0, #3]
   18230:	cmp	r1, #56	; 0x38
   18234:	bne	18274 <lchmod@@Base+0xcbc>
   18238:	ldrb	r1, [r0, #4]
   1823c:	cmp	r1, #48	; 0x30
   18240:	bne	18274 <lchmod@@Base+0xcbc>
   18244:	ldrb	r1, [r0, #5]
   18248:	cmp	r1, #51	; 0x33
   1824c:	bne	18274 <lchmod@@Base+0xcbc>
   18250:	ldrb	r1, [r0, #6]
   18254:	cmp	r1, #48	; 0x30
   18258:	bne	18274 <lchmod@@Base+0xcbc>
   1825c:	ldrb	r0, [r0, #7]
   18260:	cmp	r0, #0
   18264:	movw	r0, #52963	; 0xcee3
   18268:	movt	r0, #1
   1826c:	str	r0, [sp, #72]	; 0x48
   18270:	beq	18290 <lchmod@@Base+0xcd8>
   18274:	movw	r1, #52949	; 0xced5
   18278:	movw	r0, #52953	; 0xced9
   1827c:	cmp	r4, #9
   18280:	movt	r1, #1
   18284:	movt	r0, #1
   18288:	moveq	r0, r1
   1828c:	str	r0, [sp, #72]	; 0x48
   18290:	movw	r6, #52953	; 0xced9
   18294:	mov	r0, #0
   18298:	mov	r2, #5
   1829c:	movt	r6, #1
   182a0:	mov	r1, r6
   182a4:	bl	11860 <dcgettext@plt>
   182a8:	cmp	r0, r6
   182ac:	str	r0, [sp, #76]	; 0x4c
   182b0:	beq	182fc <lchmod@@Base+0xd44>
   182b4:	ldr	ip, [fp, #-84]	; 0xffffffac
   182b8:	mov	r9, #0
   182bc:	tst	r8, #1
   182c0:	bne	18404 <lchmod@@Base+0xe4c>
   182c4:	ldr	r0, [sp, #72]	; 0x48
   182c8:	ldrb	r0, [r0]
   182cc:	cmp	r0, #0
   182d0:	beq	18404 <lchmod@@Base+0xe4c>
   182d4:	ldr	r1, [sp, #72]	; 0x48
   182d8:	mov	r9, #0
   182dc:	add	r1, r1, #1
   182e0:	cmp	r9, r5
   182e4:	strbcc	r0, [ip, r9]
   182e8:	ldrb	r0, [r1, r9]
   182ec:	add	r9, r9, #1
   182f0:	cmp	r0, #0
   182f4:	bne	182e0 <lchmod@@Base+0xd28>
   182f8:	b	18404 <lchmod@@Base+0xe4c>
   182fc:	bl	1c0cc <lchmod@@Base+0x4b14>
   18300:	ldrb	r1, [r0]
   18304:	and	r1, r1, #223	; 0xdf
   18308:	cmp	r1, #71	; 0x47
   1830c:	beq	1837c <lchmod@@Base+0xdc4>
   18310:	ldr	ip, [fp, #-84]	; 0xffffffac
   18314:	cmp	r1, #85	; 0x55
   18318:	bne	183d8 <lchmod@@Base+0xe20>
   1831c:	ldrb	r1, [r0, #1]
   18320:	and	r1, r1, #223	; 0xdf
   18324:	cmp	r1, #84	; 0x54
   18328:	bne	183d8 <lchmod@@Base+0xe20>
   1832c:	ldrb	r1, [r0, #2]
   18330:	and	r1, r1, #223	; 0xdf
   18334:	cmp	r1, #70	; 0x46
   18338:	bne	183d8 <lchmod@@Base+0xe20>
   1833c:	ldrb	r1, [r0, #3]
   18340:	cmp	r1, #45	; 0x2d
   18344:	bne	183d8 <lchmod@@Base+0xe20>
   18348:	ldrb	r1, [r0, #4]
   1834c:	cmp	r1, #56	; 0x38
   18350:	bne	183d8 <lchmod@@Base+0xe20>
   18354:	ldrb	r0, [r0, #5]
   18358:	cmp	r0, #0
   1835c:	bne	183d8 <lchmod@@Base+0xe20>
   18360:	movw	r0, #52959	; 0xcedf
   18364:	movt	r0, #1
   18368:	str	r0, [sp, #76]	; 0x4c
   1836c:	mov	r9, #0
   18370:	tst	r8, #1
   18374:	beq	182c4 <lchmod@@Base+0xd0c>
   18378:	b	18404 <lchmod@@Base+0xe4c>
   1837c:	ldrb	r1, [r0, #1]
   18380:	ldr	ip, [fp, #-84]	; 0xffffffac
   18384:	and	r1, r1, #223	; 0xdf
   18388:	cmp	r1, #66	; 0x42
   1838c:	bne	183d8 <lchmod@@Base+0xe20>
   18390:	ldrb	r1, [r0, #2]
   18394:	cmp	r1, #49	; 0x31
   18398:	bne	183d8 <lchmod@@Base+0xe20>
   1839c:	ldrb	r1, [r0, #3]
   183a0:	cmp	r1, #56	; 0x38
   183a4:	bne	183d8 <lchmod@@Base+0xe20>
   183a8:	ldrb	r1, [r0, #4]
   183ac:	cmp	r1, #48	; 0x30
   183b0:	bne	183d8 <lchmod@@Base+0xe20>
   183b4:	ldrb	r1, [r0, #5]
   183b8:	cmp	r1, #51	; 0x33
   183bc:	bne	183d8 <lchmod@@Base+0xe20>
   183c0:	ldrb	r1, [r0, #6]
   183c4:	cmp	r1, #48	; 0x30
   183c8:	bne	183d8 <lchmod@@Base+0xe20>
   183cc:	ldrb	r0, [r0, #7]
   183d0:	cmp	r0, #0
   183d4:	beq	191ec <lchmod@@Base+0x1c34>
   183d8:	movw	r0, #52953	; 0xced9
   183dc:	cmp	r4, #9
   183e0:	movt	r0, #1
   183e4:	mov	r1, r0
   183e8:	movw	r0, #52949	; 0xced5
   183ec:	movt	r0, #1
   183f0:	moveq	r1, r0
   183f4:	str	r1, [sp, #76]	; 0x4c
   183f8:	mov	r9, #0
   183fc:	tst	r8, #1
   18400:	beq	182c4 <lchmod@@Base+0xd0c>
   18404:	ldr	r6, [sp, #76]	; 0x4c
   18408:	mov	r0, r6
   1840c:	bl	119c8 <strlen@plt>
   18410:	ldr	ip, [fp, #-84]	; 0xffffffac
   18414:	ldr	lr, [fp, #-80]	; 0xffffffb0
   18418:	str	r0, [fp, #-72]	; 0xffffffb8
   1841c:	str	r6, [fp, #-88]	; 0xffffffa8
   18420:	mov	r2, #1
   18424:	mov	r3, r8
   18428:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1842c:	str	r4, [fp, #-64]	; 0xffffffc0
   18430:	mov	sl, #0
   18434:	str	r3, [fp, #-76]	; 0xffffffb4
   18438:	str	r2, [sp, #88]	; 0x58
   1843c:	cmp	r0, #0
   18440:	movwne	r0, #1
   18444:	and	r1, r0, r3
   18448:	and	r1, r2, r1
   1844c:	str	r1, [sp, #48]	; 0x30
   18450:	sub	r1, r4, #2
   18454:	clz	r1, r1
   18458:	lsr	r1, r1, #5
   1845c:	and	r1, r1, r3
   18460:	str	r1, [sp, #44]	; 0x2c
   18464:	subs	r1, r4, #2
   18468:	eor	r4, r3, #1
   1846c:	movwne	r1, #1
   18470:	str	r4, [sp, #92]	; 0x5c
   18474:	orr	r4, r1, r4
   18478:	and	r1, r1, r2
   1847c:	and	r0, r0, r1
   18480:	str	r4, [sp, #64]	; 0x40
   18484:	ldr	r4, [sp, #84]	; 0x54
   18488:	str	r0, [fp, #-60]	; 0xffffffc4
   1848c:	orr	r0, r1, r3
   18490:	ldr	r1, [fp, #16]
   18494:	eor	r0, r0, #1
   18498:	clz	r1, r1
   1849c:	lsr	r1, r1, #5
   184a0:	orr	r0, r1, r0
   184a4:	str	r0, [fp, #-68]	; 0xffffffbc
   184a8:	eor	r0, r2, #1
   184ac:	str	r0, [sp, #52]	; 0x34
   184b0:	cmn	r7, #1
   184b4:	beq	184c4 <lchmod@@Base+0xf0c>
   184b8:	cmp	sl, r7
   184bc:	bne	184d0 <lchmod@@Base+0xf18>
   184c0:	b	19164 <lchmod@@Base+0x1bac>
   184c4:	ldrb	r0, [lr, sl]
   184c8:	cmp	r0, #0
   184cc:	beq	1916c <lchmod@@Base+0x1bb4>
   184d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   184d4:	cmp	r0, #0
   184d8:	beq	18538 <lchmod@@Base+0xf80>
   184dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   184e0:	mov	r6, r5
   184e4:	add	r5, sl, r0
   184e8:	cmp	r0, #2
   184ec:	bcc	18558 <lchmod@@Base+0xfa0>
   184f0:	mov	r0, #0
   184f4:	cmn	r7, #1
   184f8:	str	r0, [fp, #-56]	; 0xffffffc8
   184fc:	bne	18514 <lchmod@@Base+0xf5c>
   18500:	mov	r0, lr
   18504:	bl	119c8 <strlen@plt>
   18508:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1850c:	ldr	ip, [fp, #-84]	; 0xffffffac
   18510:	mov	r7, r0
   18514:	cmp	r5, r7
   18518:	bls	18568 <lchmod@@Base+0xfb0>
   1851c:	mov	r0, #0
   18520:	mov	r5, r6
   18524:	str	r0, [fp, #-48]	; 0xffffffd0
   18528:	ldrb	r6, [lr, sl]
   1852c:	cmp	r6, #126	; 0x7e
   18530:	bls	185b8 <lchmod@@Base+0x1000>
   18534:	b	18b14 <lchmod@@Base+0x155c>
   18538:	mov	r0, #0
   1853c:	str	r0, [fp, #-56]	; 0xffffffc8
   18540:	mov	r0, #0
   18544:	str	r0, [fp, #-48]	; 0xffffffd0
   18548:	ldrb	r6, [lr, sl]
   1854c:	cmp	r6, #126	; 0x7e
   18550:	bls	185b8 <lchmod@@Base+0x1000>
   18554:	b	18b14 <lchmod@@Base+0x155c>
   18558:	mov	r0, #0
   1855c:	str	r0, [fp, #-56]	; 0xffffffc8
   18560:	cmp	r5, r7
   18564:	bhi	1851c <lchmod@@Base+0xf64>
   18568:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1856c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18570:	add	r0, lr, sl
   18574:	bl	119bc <bcmp@plt>
   18578:	ldr	r2, [sp, #92]	; 0x5c
   1857c:	cmp	r0, #0
   18580:	mov	r1, r0
   18584:	mov	r5, r6
   18588:	movwne	r1, #1
   1858c:	orr	r1, r1, r2
   18590:	tst	r1, #1
   18594:	beq	1922c <lchmod@@Base+0x1c74>
   18598:	ldr	ip, [fp, #-84]	; 0xffffffac
   1859c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   185a0:	clz	r0, r0
   185a4:	lsr	r0, r0, #5
   185a8:	str	r0, [fp, #-48]	; 0xffffffd0
   185ac:	ldrb	r6, [lr, sl]
   185b0:	cmp	r6, #126	; 0x7e
   185b4:	bhi	18b14 <lchmod@@Base+0x155c>
   185b8:	add	r3, pc, #16
   185bc:	mov	r8, #1
   185c0:	mov	r2, #110	; 0x6e
   185c4:	mov	r0, #97	; 0x61
   185c8:	mov	r1, #0
   185cc:	ldr	pc, [r3, r6, lsl #2]
   185d0:	andeq	r8, r1, ip, asr #17
   185d4:	andeq	r8, r1, r4, lsl fp
   185d8:	andeq	r8, r1, r4, lsl fp
   185dc:	andeq	r8, r1, r4, lsl fp
   185e0:	andeq	r8, r1, r4, lsl fp
   185e4:	andeq	r8, r1, r4, lsl fp
   185e8:	andeq	r8, r1, r4, lsl fp
   185ec:	andeq	r8, r1, r8, asr #23
   185f0:	andeq	r8, r1, ip, lsr #17
   185f4:	andeq	r8, r1, r4, lsr #17
   185f8:			; <UNDEFINED> instruction: 0x000188b8
   185fc:	andeq	r8, r1, r8, ror #19
   18600:	muleq	r1, ip, r8
   18604:			; <UNDEFINED> instruction: 0x000188b4
   18608:	andeq	r8, r1, r4, lsl fp
   1860c:	andeq	r8, r1, r4, lsl fp
   18610:	andeq	r8, r1, r4, lsl fp
   18614:	andeq	r8, r1, r4, lsl fp
   18618:	andeq	r8, r1, r4, lsl fp
   1861c:	andeq	r8, r1, r4, lsl fp
   18620:	andeq	r8, r1, r4, lsl fp
   18624:	andeq	r8, r1, r4, lsl fp
   18628:	andeq	r8, r1, r4, lsl fp
   1862c:	andeq	r8, r1, r4, lsl fp
   18630:	andeq	r8, r1, r4, lsl fp
   18634:	andeq	r8, r1, r4, lsl fp
   18638:	andeq	r8, r1, r4, lsl fp
   1863c:	andeq	r8, r1, r4, lsl fp
   18640:	andeq	r8, r1, r4, lsl fp
   18644:	andeq	r8, r1, r4, lsl fp
   18648:	andeq	r8, r1, r4, lsl fp
   1864c:	andeq	r8, r1, r4, lsl fp
   18650:	andeq	r8, r1, r0, asr #16
   18654:	andeq	r8, r1, r4, asr #16
   18658:	andeq	r8, r1, r4, asr #16
   1865c:	andeq	r8, r1, r4, lsr r8
   18660:	andeq	r8, r1, r4, asr #16
   18664:	andeq	r8, r1, ip, asr #15
   18668:	andeq	r8, r1, r4, asr #16
   1866c:	strdeq	r8, [r1], -r0
   18670:	andeq	r8, r1, r4, asr #16
   18674:	andeq	r8, r1, r4, asr #16
   18678:	andeq	r8, r1, r4, asr #16
   1867c:	andeq	r8, r1, ip, asr #15
   18680:	andeq	r8, r1, ip, asr #15
   18684:	andeq	r8, r1, ip, asr #15
   18688:	andeq	r8, r1, ip, asr #15
   1868c:	andeq	r8, r1, ip, asr #15
   18690:	andeq	r8, r1, ip, asr #15
   18694:	andeq	r8, r1, ip, asr #15
   18698:	andeq	r8, r1, ip, asr #15
   1869c:	andeq	r8, r1, ip, asr #15
   186a0:	andeq	r8, r1, ip, asr #15
   186a4:	andeq	r8, r1, ip, asr #15
   186a8:	andeq	r8, r1, ip, asr #15
   186ac:	andeq	r8, r1, ip, asr #15
   186b0:	andeq	r8, r1, ip, asr #15
   186b4:	andeq	r8, r1, ip, asr #15
   186b8:	andeq	r8, r1, ip, asr #15
   186bc:	andeq	r8, r1, r4, asr #16
   186c0:	andeq	r8, r1, r4, asr #16
   186c4:	andeq	r8, r1, r4, asr #16
   186c8:	andeq	r8, r1, r4, asr #16
   186cc:			; <UNDEFINED> instruction: 0x000189b4
   186d0:	andeq	r8, r1, r4, lsl fp
   186d4:	andeq	r8, r1, ip, asr #15
   186d8:	andeq	r8, r1, ip, asr #15
   186dc:	andeq	r8, r1, ip, asr #15
   186e0:	andeq	r8, r1, ip, asr #15
   186e4:	andeq	r8, r1, ip, asr #15
   186e8:	andeq	r8, r1, ip, asr #15
   186ec:	andeq	r8, r1, ip, asr #15
   186f0:	andeq	r8, r1, ip, asr #15
   186f4:	andeq	r8, r1, ip, asr #15
   186f8:	andeq	r8, r1, ip, asr #15
   186fc:	andeq	r8, r1, ip, asr #15
   18700:	andeq	r8, r1, ip, asr #15
   18704:	andeq	r8, r1, ip, asr #15
   18708:	andeq	r8, r1, ip, asr #15
   1870c:	andeq	r8, r1, ip, asr #15
   18710:	andeq	r8, r1, ip, asr #15
   18714:	andeq	r8, r1, ip, asr #15
   18718:	andeq	r8, r1, ip, asr #15
   1871c:	andeq	r8, r1, ip, asr #15
   18720:	andeq	r8, r1, ip, asr #15
   18724:	andeq	r8, r1, ip, asr #15
   18728:	andeq	r8, r1, ip, asr #15
   1872c:	andeq	r8, r1, ip, asr #15
   18730:	andeq	r8, r1, ip, asr #15
   18734:	andeq	r8, r1, ip, asr #15
   18738:	andeq	r8, r1, ip, asr #15
   1873c:	andeq	r8, r1, r4, asr #16
   18740:	andeq	r8, r1, r8, ror r8
   18744:	andeq	r8, r1, ip, asr #15
   18748:	andeq	r8, r1, r4, asr #16
   1874c:	andeq	r8, r1, ip, asr #15
   18750:	andeq	r8, r1, r4, asr #16
   18754:	andeq	r8, r1, ip, asr #15
   18758:	andeq	r8, r1, ip, asr #15
   1875c:	andeq	r8, r1, ip, asr #15
   18760:	andeq	r8, r1, ip, asr #15
   18764:	andeq	r8, r1, ip, asr #15
   18768:	andeq	r8, r1, ip, asr #15
   1876c:	andeq	r8, r1, ip, asr #15
   18770:	andeq	r8, r1, ip, asr #15
   18774:	andeq	r8, r1, ip, asr #15
   18778:	andeq	r8, r1, ip, asr #15
   1877c:	andeq	r8, r1, ip, asr #15
   18780:	andeq	r8, r1, ip, asr #15
   18784:	andeq	r8, r1, ip, asr #15
   18788:	andeq	r8, r1, ip, asr #15
   1878c:	andeq	r8, r1, ip, asr #15
   18790:	andeq	r8, r1, ip, asr #15
   18794:	andeq	r8, r1, ip, asr #15
   18798:	andeq	r8, r1, ip, asr #15
   1879c:	andeq	r8, r1, ip, asr #15
   187a0:	andeq	r8, r1, ip, asr #15
   187a4:	andeq	r8, r1, ip, asr #15
   187a8:	andeq	r8, r1, ip, asr #15
   187ac:	andeq	r8, r1, ip, asr #15
   187b0:	andeq	r8, r1, ip, asr #15
   187b4:	andeq	r8, r1, ip, asr #15
   187b8:	andeq	r8, r1, ip, asr #15
   187bc:	andeq	r8, r1, ip, lsl #16
   187c0:	andeq	r8, r1, r4, asr #16
   187c4:	andeq	r8, r1, ip, lsl #16
   187c8:	andeq	r8, r1, r4, lsr r8
   187cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   187d0:	tst	r0, #1
   187d4:	bne	18a8c <lchmod@@Base+0x14d4>
   187d8:	ldr	r1, [fp, #16]
   187dc:	ubfx	r0, r6, #5, #3
   187e0:	mov	r2, #1
   187e4:	ldr	r0, [r1, r0, lsl #2]
   187e8:	and	r1, r6, #31
   187ec:	tst	r0, r2, lsl r1
   187f0:	beq	18a8c <lchmod@@Base+0x14d4>
   187f4:	mov	r0, r6
   187f8:	mov	r1, r8
   187fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   18800:	tst	r2, #1
   18804:	beq	18aac <lchmod@@Base+0x14f4>
   18808:	b	19208 <lchmod@@Base+0x1c50>
   1880c:	cmp	r7, #1
   18810:	beq	18834 <lchmod@@Base+0x127c>
   18814:	mov	r8, #0
   18818:	cmn	r7, #1
   1881c:	bne	18a78 <lchmod@@Base+0x14c0>
   18820:	ldrb	r0, [lr, #1]
   18824:	cmp	r0, #0
   18828:	beq	18834 <lchmod@@Base+0x127c>
   1882c:	mvn	r7, #0
   18830:	b	18a78 <lchmod@@Base+0x14c0>
   18834:	mov	r8, #0
   18838:	cmp	sl, #0
   1883c:	bne	18a78 <lchmod@@Base+0x14c0>
   18840:	mov	r1, #1
   18844:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18848:	cmp	r0, #2
   1884c:	bne	18864 <lchmod@@Base+0x12ac>
   18850:	ldr	r0, [fp, #-76]	; 0xffffffb4
   18854:	mov	r8, r1
   18858:	tst	r0, #1
   1885c:	beq	187cc <lchmod@@Base+0x1214>
   18860:	b	19208 <lchmod@@Base+0x1c50>
   18864:	mov	r8, r1
   18868:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1886c:	tst	r0, #1
   18870:	beq	187d8 <lchmod@@Base+0x1220>
   18874:	b	18a8c <lchmod@@Base+0x14d4>
   18878:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1887c:	cmp	r0, #2
   18880:	bne	18b40 <lchmod@@Base+0x1588>
   18884:	ldr	r0, [fp, #-76]	; 0xffffffb4
   18888:	tst	r0, #1
   1888c:	bne	19208 <lchmod@@Base+0x1c50>
   18890:	mov	r0, #0
   18894:	str	r0, [fp, #-56]	; 0xffffffc8
   18898:	b	18b58 <lchmod@@Base+0x15a0>
   1889c:	mov	r0, #102	; 0x66
   188a0:	b	18bc8 <lchmod@@Base+0x1610>
   188a4:	mov	r2, #116	; 0x74
   188a8:	b	188b8 <lchmod@@Base+0x1300>
   188ac:	mov	r0, #98	; 0x62
   188b0:	b	18bc8 <lchmod@@Base+0x1610>
   188b4:	mov	r2, #114	; 0x72
   188b8:	ldr	r0, [sp, #64]	; 0x40
   188bc:	tst	r0, #1
   188c0:	mov	r0, r2
   188c4:	bne	18bc8 <lchmod@@Base+0x1610>
   188c8:	b	19208 <lchmod@@Base+0x1c50>
   188cc:	ldr	r0, [sp, #88]	; 0x58
   188d0:	tst	r0, #1
   188d4:	beq	18be8 <lchmod@@Base+0x1630>
   188d8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   188dc:	tst	r0, #1
   188e0:	bne	19344 <lchmod@@Base+0x1d8c>
   188e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   188e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   188ec:	subs	r0, r0, #2
   188f0:	movwne	r0, #1
   188f4:	orr	r0, r0, r1
   188f8:	tst	r0, #1
   188fc:	bne	18938 <lchmod@@Base+0x1380>
   18900:	cmp	r9, r5
   18904:	movcc	r0, #39	; 0x27
   18908:	strbcc	r0, [ip, r9]
   1890c:	add	r0, r9, #1
   18910:	cmp	r0, r5
   18914:	movcc	r1, #36	; 0x24
   18918:	strbcc	r1, [ip, r0]
   1891c:	add	r0, r9, #2
   18920:	add	r9, r9, #3
   18924:	cmp	r0, r5
   18928:	movcc	r1, #39	; 0x27
   1892c:	strbcc	r1, [ip, r0]
   18930:	mov	r0, #1
   18934:	str	r0, [fp, #-52]	; 0xffffffcc
   18938:	mov	r1, #1
   1893c:	cmp	r9, r5
   18940:	mov	r8, #0
   18944:	mov	r6, #48	; 0x30
   18948:	str	r1, [fp, #-56]	; 0xffffffc8
   1894c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   18950:	movcc	r0, #92	; 0x5c
   18954:	strbcc	r0, [ip, r9]
   18958:	add	r0, r9, #1
   1895c:	cmp	r1, #2
   18960:	beq	18db4 <lchmod@@Base+0x17fc>
   18964:	add	r1, sl, #1
   18968:	cmp	r1, r7
   1896c:	bcs	18db4 <lchmod@@Base+0x17fc>
   18970:	ldrb	r1, [lr, r1]
   18974:	sub	r1, r1, #48	; 0x30
   18978:	uxtb	r1, r1
   1897c:	cmp	r1, #9
   18980:	bhi	18db4 <lchmod@@Base+0x17fc>
   18984:	cmp	r0, r5
   18988:	movcc	r1, #48	; 0x30
   1898c:	strbcc	r1, [ip, r0]
   18990:	add	r0, r9, #2
   18994:	add	r9, r9, #3
   18998:	cmp	r0, r5
   1899c:	movcc	r1, #48	; 0x30
   189a0:	strbcc	r1, [ip, r0]
   189a4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   189a8:	tst	r0, #1
   189ac:	beq	187d8 <lchmod@@Base+0x1220>
   189b0:	b	18a8c <lchmod@@Base+0x14d4>
   189b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   189b8:	mov	r6, #63	; 0x3f
   189bc:	cmp	r0, #5
   189c0:	beq	18dc8 <lchmod@@Base+0x1810>
   189c4:	mov	r1, #0
   189c8:	cmp	r0, #2
   189cc:	str	r1, [fp, #-56]	; 0xffffffc8
   189d0:	bne	18e90 <lchmod@@Base+0x18d8>
   189d4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   189d8:	mov	r8, #0
   189dc:	tst	r0, #1
   189e0:	beq	187cc <lchmod@@Base+0x1214>
   189e4:	b	19208 <lchmod@@Base+0x1c50>
   189e8:	mov	r0, #118	; 0x76
   189ec:	b	18bc8 <lchmod@@Base+0x1610>
   189f0:	mov	r0, #1
   189f4:	mov	r6, #39	; 0x27
   189f8:	str	r0, [sp, #60]	; 0x3c
   189fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18a00:	cmp	r0, #2
   18a04:	bne	18c08 <lchmod@@Base+0x1650>
   18a08:	ldr	r0, [fp, #-76]	; 0xffffffb4
   18a0c:	tst	r0, #1
   18a10:	bne	19208 <lchmod@@Base+0x1c50>
   18a14:	ldr	r2, [sp, #56]	; 0x38
   18a18:	clz	r1, r5
   18a1c:	mov	r8, #1
   18a20:	lsr	r1, r1, #5
   18a24:	cmp	r2, #0
   18a28:	mov	r0, r2
   18a2c:	movwne	r0, #1
   18a30:	orrs	r0, r0, r1
   18a34:	moveq	r2, r5
   18a38:	moveq	r5, r0
   18a3c:	cmp	r9, r5
   18a40:	str	r2, [sp, #56]	; 0x38
   18a44:	movcc	r0, #39	; 0x27
   18a48:	strbcc	r0, [ip, r9]
   18a4c:	add	r0, r9, #1
   18a50:	cmp	r0, r5
   18a54:	movcc	r1, #92	; 0x5c
   18a58:	strbcc	r1, [ip, r0]
   18a5c:	add	r0, r9, #2
   18a60:	add	r9, r9, #3
   18a64:	cmp	r0, r5
   18a68:	movcc	r1, #39	; 0x27
   18a6c:	strbcc	r1, [ip, r0]
   18a70:	mov	r0, #0
   18a74:	str	r0, [fp, #-52]	; 0xffffffcc
   18a78:	mov	r0, #0
   18a7c:	str	r0, [fp, #-56]	; 0xffffffc8
   18a80:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18a84:	tst	r0, #1
   18a88:	beq	187d8 <lchmod@@Base+0x1220>
   18a8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18a90:	mov	r1, r8
   18a94:	cmp	r0, #0
   18a98:	mov	r0, r6
   18a9c:	beq	18b60 <lchmod@@Base+0x15a8>
   18aa0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   18aa4:	tst	r2, #1
   18aa8:	bne	19208 <lchmod@@Base+0x1c50>
   18aac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18ab0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18ab4:	subs	r2, r2, #2
   18ab8:	movwne	r2, #1
   18abc:	orr	r2, r2, r3
   18ac0:	tst	r2, #1
   18ac4:	bne	18b00 <lchmod@@Base+0x1548>
   18ac8:	cmp	r9, r5
   18acc:	movcc	r2, #39	; 0x27
   18ad0:	strbcc	r2, [ip, r9]
   18ad4:	add	r2, r9, #1
   18ad8:	cmp	r2, r5
   18adc:	movcc	r3, #36	; 0x24
   18ae0:	strbcc	r3, [ip, r2]
   18ae4:	add	r2, r9, #2
   18ae8:	add	r9, r9, #3
   18aec:	cmp	r2, r5
   18af0:	movcc	r3, #39	; 0x27
   18af4:	strbcc	r3, [ip, r2]
   18af8:	mov	r2, #1
   18afc:	str	r2, [fp, #-52]	; 0xffffffcc
   18b00:	cmp	r9, r5
   18b04:	movcc	r2, #92	; 0x5c
   18b08:	strbcc	r2, [ip, r9]
   18b0c:	add	r9, r9, #1
   18b10:	b	18ba8 <lchmod@@Base+0x15f0>
   18b14:	ldr	r0, [sp, #40]	; 0x28
   18b18:	cmp	r0, #1
   18b1c:	bne	18c1c <lchmod@@Base+0x1664>
   18b20:	bl	1198c <__ctype_b_loc@plt>
   18b24:	ldr	r0, [r0]
   18b28:	ldr	lr, [fp, #-80]	; 0xffffffb0
   18b2c:	mov	r1, #1
   18b30:	add	r0, r0, r6, lsl #1
   18b34:	ldrb	r0, [r0, #1]
   18b38:	ubfx	r8, r0, #6, #1
   18b3c:	b	18f74 <lchmod@@Base+0x19bc>
   18b40:	ldr	r1, [sp, #48]	; 0x30
   18b44:	mov	r0, #0
   18b48:	str	r0, [fp, #-56]	; 0xffffffc8
   18b4c:	mov	r0, #92	; 0x5c
   18b50:	cmp	r1, #0
   18b54:	beq	18bc8 <lchmod@@Base+0x1610>
   18b58:	mov	r6, #92	; 0x5c
   18b5c:	mov	r8, #0
   18b60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18b64:	cmp	r0, #0
   18b68:	bne	18ba0 <lchmod@@Base+0x15e8>
   18b6c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18b70:	tst	r0, #1
   18b74:	beq	18ba0 <lchmod@@Base+0x15e8>
   18b78:	cmp	r9, r5
   18b7c:	movcc	r0, #39	; 0x27
   18b80:	strbcc	r0, [ip, r9]
   18b84:	add	r0, r9, #1
   18b88:	add	r9, r9, #2
   18b8c:	cmp	r0, r5
   18b90:	movcc	r1, #39	; 0x27
   18b94:	strbcc	r1, [ip, r0]
   18b98:	mov	r0, #0
   18b9c:	str	r0, [fp, #-52]	; 0xffffffcc
   18ba0:	mov	r1, r8
   18ba4:	mov	r0, r6
   18ba8:	cmp	r9, r5
   18bac:	and	r4, r4, r1
   18bb0:	strbcc	r0, [ip, r9]
   18bb4:	add	r9, r9, #1
   18bb8:	add	sl, sl, #1
   18bbc:	cmn	r7, #1
   18bc0:	bne	184b8 <lchmod@@Base+0xf00>
   18bc4:	b	184c4 <lchmod@@Base+0xf0c>
   18bc8:	mov	r1, #0
   18bcc:	mov	r8, #0
   18bd0:	str	r1, [fp, #-56]	; 0xffffffc8
   18bd4:	ldr	r1, [sp, #88]	; 0x58
   18bd8:	tst	r1, #1
   18bdc:	mov	r1, #0
   18be0:	beq	187cc <lchmod@@Base+0x1214>
   18be4:	b	18aa0 <lchmod@@Base+0x14e8>
   18be8:	ldr	r0, [sp, #36]	; 0x24
   18bec:	mov	r6, #0
   18bf0:	mov	r8, #0
   18bf4:	cmp	r0, #0
   18bf8:	mov	r0, #0
   18bfc:	str	r0, [fp, #-56]	; 0xffffffc8
   18c00:	bne	18bb8 <lchmod@@Base+0x1600>
   18c04:	b	187cc <lchmod@@Base+0x1214>
   18c08:	mov	r8, #1
   18c0c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18c10:	tst	r0, #1
   18c14:	beq	187d8 <lchmod@@Base+0x1220>
   18c18:	b	18a8c <lchmod@@Base+0x14d4>
   18c1c:	mov	r0, #0
   18c20:	cmn	r7, #1
   18c24:	str	r0, [fp, #-36]	; 0xffffffdc
   18c28:	str	r0, [fp, #-40]	; 0xffffffd8
   18c2c:	bne	18c40 <lchmod@@Base+0x1688>
   18c30:	mov	r0, lr
   18c34:	bl	119c8 <strlen@plt>
   18c38:	ldr	lr, [fp, #-80]	; 0xffffffb0
   18c3c:	mov	r7, r0
   18c40:	ldr	r0, [sp, #44]	; 0x2c
   18c44:	str	r4, [sp, #84]	; 0x54
   18c48:	str	r5, [sp, #28]
   18c4c:	cmp	r0, #0
   18c50:	beq	18ea4 <lchmod@@Base+0x18ec>
   18c54:	ldr	r0, [sp, #80]	; 0x50
   18c58:	mov	r8, #1
   18c5c:	mov	r5, #0
   18c60:	add	r0, r0, sl
   18c64:	str	r0, [sp, #24]
   18c68:	sub	r0, fp, #40	; 0x28
   18c6c:	mov	r3, r0
   18c70:	b	18cac <lchmod@@Base+0x16f4>
   18c74:	ldr	r5, [sp, #68]	; 0x44
   18c78:	add	r5, r0, r5
   18c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18c80:	bl	118b4 <iswprint@plt>
   18c84:	cmp	r0, #0
   18c88:	sub	r4, fp, #40	; 0x28
   18c8c:	movwne	r0, #1
   18c90:	and	r8, r8, r0
   18c94:	mov	r0, r4
   18c98:	bl	11848 <mbsinit@plt>
   18c9c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   18ca0:	mov	r3, r4
   18ca4:	cmp	r0, #0
   18ca8:	bne	18f68 <lchmod@@Base+0x19b0>
   18cac:	str	r5, [sp, #68]	; 0x44
   18cb0:	add	r5, r5, sl
   18cb4:	sub	r0, fp, #44	; 0x2c
   18cb8:	add	r1, lr, r5
   18cbc:	sub	r2, r7, r5
   18cc0:	bl	1c104 <lchmod@@Base+0x4b4c>
   18cc4:	cmn	r0, #2
   18cc8:	beq	18f28 <lchmod@@Base+0x1970>
   18ccc:	ldr	ip, [fp, #-84]	; 0xffffffac
   18cd0:	cmn	r0, #1
   18cd4:	beq	18f1c <lchmod@@Base+0x1964>
   18cd8:	cmp	r0, #0
   18cdc:	beq	18f20 <lchmod@@Base+0x1968>
   18ce0:	cmp	r0, #2
   18ce4:	bcc	18c74 <lchmod@@Base+0x16bc>
   18ce8:	ldr	r1, [sp, #68]	; 0x44
   18cec:	ldr	r2, [sp, #24]
   18cf0:	add	r1, r2, r1
   18cf4:	sub	r2, r0, #1
   18cf8:	ldrb	r3, [r1]
   18cfc:	sub	r3, r3, #91	; 0x5b
   18d00:	cmp	r3, #33	; 0x21
   18d04:	bls	18d24 <lchmod@@Base+0x176c>
   18d08:	add	r1, r1, #1
   18d0c:	subs	r2, r2, #1
   18d10:	beq	18c74 <lchmod@@Base+0x16bc>
   18d14:	ldrb	r3, [r1]
   18d18:	sub	r3, r3, #91	; 0x5b
   18d1c:	cmp	r3, #33	; 0x21
   18d20:	bhi	18d08 <lchmod@@Base+0x1750>
   18d24:	add	r5, pc, #0
   18d28:	ldr	pc, [r5, r3, lsl #2]
   18d2c:	andeq	r9, r1, r0, asr #4
   18d30:	andeq	r9, r1, r0, asr #4
   18d34:	andeq	r8, r1, r8, lsl #26
   18d38:	andeq	r9, r1, r0, asr #4
   18d3c:	andeq	r8, r1, r8, lsl #26
   18d40:	andeq	r9, r1, r0, asr #4
   18d44:	andeq	r8, r1, r8, lsl #26
   18d48:	andeq	r8, r1, r8, lsl #26
   18d4c:	andeq	r8, r1, r8, lsl #26
   18d50:	andeq	r8, r1, r8, lsl #26
   18d54:	andeq	r8, r1, r8, lsl #26
   18d58:	andeq	r8, r1, r8, lsl #26
   18d5c:	andeq	r8, r1, r8, lsl #26
   18d60:	andeq	r8, r1, r8, lsl #26
   18d64:	andeq	r8, r1, r8, lsl #26
   18d68:	andeq	r8, r1, r8, lsl #26
   18d6c:	andeq	r8, r1, r8, lsl #26
   18d70:	andeq	r8, r1, r8, lsl #26
   18d74:	andeq	r8, r1, r8, lsl #26
   18d78:	andeq	r8, r1, r8, lsl #26
   18d7c:	andeq	r8, r1, r8, lsl #26
   18d80:	andeq	r8, r1, r8, lsl #26
   18d84:	andeq	r8, r1, r8, lsl #26
   18d88:	andeq	r8, r1, r8, lsl #26
   18d8c:	andeq	r8, r1, r8, lsl #26
   18d90:	andeq	r8, r1, r8, lsl #26
   18d94:	andeq	r8, r1, r8, lsl #26
   18d98:	andeq	r8, r1, r8, lsl #26
   18d9c:	andeq	r8, r1, r8, lsl #26
   18da0:	andeq	r8, r1, r8, lsl #26
   18da4:	andeq	r8, r1, r8, lsl #26
   18da8:	andeq	r8, r1, r8, lsl #26
   18dac:	andeq	r8, r1, r8, lsl #26
   18db0:	andeq	r9, r1, r0, asr #4
   18db4:	mov	r9, r0
   18db8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18dbc:	tst	r0, #1
   18dc0:	beq	187d8 <lchmod@@Base+0x1220>
   18dc4:	b	18a8c <lchmod@@Base+0x14d4>
   18dc8:	mov	r0, #0
   18dcc:	str	r0, [fp, #-56]	; 0xffffffc8
   18dd0:	ldr	r0, [sp, #32]
   18dd4:	cmp	r0, #0
   18dd8:	beq	18e90 <lchmod@@Base+0x18d8>
   18ddc:	add	r0, sl, #2
   18de0:	mov	r1, r7
   18de4:	cmp	r0, r7
   18de8:	bcs	18e90 <lchmod@@Base+0x18d8>
   18dec:	add	r1, sl, lr
   18df0:	ldrb	r1, [r1, #1]
   18df4:	cmp	r1, #63	; 0x3f
   18df8:	bne	18e90 <lchmod@@Base+0x18d8>
   18dfc:	ldrb	r8, [lr, r0]
   18e00:	sub	r2, r8, #33	; 0x21
   18e04:	cmp	r2, #29
   18e08:	bhi	18e90 <lchmod@@Base+0x18d8>
   18e0c:	mov	r1, r4
   18e10:	movw	r4, #20929	; 0x51c1
   18e14:	mov	r3, #1
   18e18:	movt	r4, #14336	; 0x3800
   18e1c:	tst	r4, r3, lsl r2
   18e20:	beq	1914c <lchmod@@Base+0x1b94>
   18e24:	ldr	r2, [fp, #-76]	; 0xffffffb4
   18e28:	tst	r2, #1
   18e2c:	bne	19208 <lchmod@@Base+0x1c50>
   18e30:	cmp	r9, r5
   18e34:	mov	r6, r8
   18e38:	mov	r4, r1
   18e3c:	mov	sl, r0
   18e40:	mov	r8, #0
   18e44:	movcc	r2, #63	; 0x3f
   18e48:	strbcc	r2, [ip, r9]
   18e4c:	add	r2, r9, #1
   18e50:	cmp	r2, r5
   18e54:	movcc	r3, #34	; 0x22
   18e58:	strbcc	r3, [ip, r2]
   18e5c:	add	r2, r9, #2
   18e60:	cmp	r2, r5
   18e64:	movcc	r3, #34	; 0x22
   18e68:	strbcc	r3, [ip, r2]
   18e6c:	add	r2, r9, #3
   18e70:	add	r9, r9, #4
   18e74:	cmp	r2, r5
   18e78:	movcc	r3, #63	; 0x3f
   18e7c:	strbcc	r3, [ip, r2]
   18e80:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18e84:	tst	r0, #1
   18e88:	beq	187d8 <lchmod@@Base+0x1220>
   18e8c:	b	18a8c <lchmod@@Base+0x14d4>
   18e90:	mov	r8, #0
   18e94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18e98:	tst	r0, #1
   18e9c:	beq	187d8 <lchmod@@Base+0x1220>
   18ea0:	b	18a8c <lchmod@@Base+0x14d4>
   18ea4:	mov	r8, #1
   18ea8:	mov	r5, #0
   18eac:	sub	r4, fp, #40	; 0x28
   18eb0:	str	r5, [sp, #68]	; 0x44
   18eb4:	add	r5, r5, sl
   18eb8:	sub	r0, fp, #44	; 0x2c
   18ebc:	mov	r3, r4
   18ec0:	add	r1, lr, r5
   18ec4:	sub	r2, r7, r5
   18ec8:	bl	1c104 <lchmod@@Base+0x4b4c>
   18ecc:	cmn	r0, #2
   18ed0:	beq	18f28 <lchmod@@Base+0x1970>
   18ed4:	cmn	r0, #1
   18ed8:	beq	18f1c <lchmod@@Base+0x1964>
   18edc:	ldr	r5, [sp, #68]	; 0x44
   18ee0:	cmp	r0, #0
   18ee4:	beq	18f64 <lchmod@@Base+0x19ac>
   18ee8:	add	r5, r0, r5
   18eec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ef0:	bl	118b4 <iswprint@plt>
   18ef4:	cmp	r0, #0
   18ef8:	sub	r4, fp, #40	; 0x28
   18efc:	movwne	r0, #1
   18f00:	and	r8, r8, r0
   18f04:	mov	r0, r4
   18f08:	bl	11848 <mbsinit@plt>
   18f0c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   18f10:	cmp	r0, #0
   18f14:	beq	18eb0 <lchmod@@Base+0x18f8>
   18f18:	b	18f68 <lchmod@@Base+0x19b0>
   18f1c:	mov	r8, #0
   18f20:	ldr	lr, [fp, #-80]	; 0xffffffb0
   18f24:	b	18f5c <lchmod@@Base+0x19a4>
   18f28:	ldr	lr, [fp, #-80]	; 0xffffffb0
   18f2c:	mov	r8, #0
   18f30:	cmp	r5, r7
   18f34:	bcs	18f5c <lchmod@@Base+0x19a4>
   18f38:	ldrb	r0, [lr, r5]
   18f3c:	cmp	r0, #0
   18f40:	beq	18f5c <lchmod@@Base+0x19a4>
   18f44:	ldr	r0, [sp, #68]	; 0x44
   18f48:	add	r0, r0, #1
   18f4c:	add	r5, r0, sl
   18f50:	str	r0, [sp, #68]	; 0x44
   18f54:	cmp	r5, r7
   18f58:	bcc	18f38 <lchmod@@Base+0x1980>
   18f5c:	ldr	r5, [sp, #68]	; 0x44
   18f60:	b	18f68 <lchmod@@Base+0x19b0>
   18f64:	ldr	lr, [fp, #-80]	; 0xffffffb0
   18f68:	mov	r1, r5
   18f6c:	ldr	r5, [sp, #28]
   18f70:	ldr	r4, [sp, #84]	; 0x54
   18f74:	ldr	r0, [sp, #52]	; 0x34
   18f78:	ldr	ip, [fp, #-84]	; 0xffffffac
   18f7c:	cmp	r1, #1
   18f80:	orr	r2, r8, r0
   18f84:	mov	r0, r1
   18f88:	bhi	18f94 <lchmod@@Base+0x19dc>
   18f8c:	tst	r2, #1
   18f90:	bne	187cc <lchmod@@Base+0x1214>
   18f94:	add	r0, r0, sl
   18f98:	str	r2, [sp, #84]	; 0x54
   18f9c:	str	r0, [fp, #-56]	; 0xffffffc8
   18fa0:	mov	r0, #0
   18fa4:	tst	r2, #1
   18fa8:	bne	19088 <lchmod@@Base+0x1ad0>
   18fac:	ldr	r1, [fp, #-76]	; 0xffffffb4
   18fb0:	tst	r1, #1
   18fb4:	bne	19208 <lchmod@@Base+0x1c50>
   18fb8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   18fbc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18fc0:	subs	r2, r1, #2
   18fc4:	movwne	r2, #1
   18fc8:	orr	r2, r2, r0
   18fcc:	tst	r2, #1
   18fd0:	bne	1900c <lchmod@@Base+0x1a54>
   18fd4:	cmp	r9, r5
   18fd8:	add	r2, r9, #1
   18fdc:	mov	r0, #1
   18fe0:	movcc	r1, #39	; 0x27
   18fe4:	str	r0, [fp, #-52]	; 0xffffffcc
   18fe8:	strbcc	r1, [ip, r9]
   18fec:	cmp	r2, r5
   18ff0:	movcc	r1, #36	; 0x24
   18ff4:	strbcc	r1, [ip, r2]
   18ff8:	add	r2, r9, #2
   18ffc:	add	r9, r9, #3
   19000:	cmp	r2, r5
   19004:	movcc	r1, #39	; 0x27
   19008:	strbcc	r1, [ip, r2]
   1900c:	cmp	r9, r5
   19010:	add	r2, r9, #1
   19014:	movcc	r1, #92	; 0x5c
   19018:	strbcc	r1, [ip, r9]
   1901c:	cmp	r2, r5
   19020:	bcs	19034 <lchmod@@Base+0x1a7c>
   19024:	uxtb	r3, r6
   19028:	mov	r1, #48	; 0x30
   1902c:	orr	r3, r1, r3, lsr #6
   19030:	strb	r3, [ip, r2]
   19034:	add	r2, r9, #2
   19038:	add	r9, r9, #3
   1903c:	cmp	r2, r5
   19040:	lsrcc	r3, r6, #3
   19044:	movcc	r1, #6
   19048:	bficc	r3, r1, #3, #29
   1904c:	mov	r1, #6
   19050:	bfi	r6, r1, #3, #29
   19054:	strbcc	r3, [ip, r2]
   19058:	mov	r2, #1
   1905c:	b	190bc <lchmod@@Base+0x1b04>
   19060:	ldr	r1, [sp, #80]	; 0x50
   19064:	cmp	r9, r2
   19068:	mov	r5, r2
   1906c:	ldr	r2, [sp, #84]	; 0x54
   19070:	strbcc	r6, [ip, r9]
   19074:	add	r9, r9, #1
   19078:	ldrb	r6, [r1, sl]
   1907c:	mov	sl, r3
   19080:	tst	r2, #1
   19084:	beq	18fac <lchmod@@Base+0x19f4>
   19088:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1908c:	tst	r1, #1
   19090:	beq	190b0 <lchmod@@Base+0x1af8>
   19094:	cmp	r9, r5
   19098:	mov	r2, r0
   1909c:	movcc	r1, #92	; 0x5c
   190a0:	strbcc	r1, [ip, r9]
   190a4:	add	r9, r9, #1
   190a8:	mov	r1, #0
   190ac:	b	190b8 <lchmod@@Base+0x1b00>
   190b0:	mov	r1, #0
   190b4:	mov	r2, r0
   190b8:	str	r1, [fp, #-48]	; 0xffffffd0
   190bc:	mov	r0, r2
   190c0:	and	r1, r2, #1
   190c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   190c8:	add	r3, sl, #1
   190cc:	cmp	r2, r3
   190d0:	bls	19130 <lchmod@@Base+0x1b78>
   190d4:	mov	r2, r5
   190d8:	ldr	r5, [fp, #-52]	; 0xffffffcc
   190dc:	cmp	r1, #0
   190e0:	movwne	r1, #1
   190e4:	mvn	r5, r5
   190e8:	orr	r5, r5, r1
   190ec:	tst	r5, #1
   190f0:	bne	19060 <lchmod@@Base+0x1aa8>
   190f4:	cmp	r9, r2
   190f8:	movcc	r5, r4
   190fc:	movcc	r4, #39	; 0x27
   19100:	strbcc	r4, [ip, r9]
   19104:	movcc	r4, r5
   19108:	add	r5, r9, #1
   1910c:	add	r9, r9, #2
   19110:	cmp	r5, r2
   19114:	movcc	r1, r4
   19118:	movcc	r4, #39	; 0x27
   1911c:	strbcc	r4, [ip, r5]
   19120:	movcc	r4, r1
   19124:	mov	r1, #0
   19128:	str	r1, [fp, #-52]	; 0xffffffcc
   1912c:	b	19060 <lchmod@@Base+0x1aa8>
   19130:	cmp	r1, #0
   19134:	movwne	r1, #1
   19138:	str	r1, [fp, #-56]	; 0xffffffc8
   1913c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19140:	cmp	r0, #0
   19144:	beq	18b6c <lchmod@@Base+0x15b4>
   19148:	b	18ba0 <lchmod@@Base+0x15e8>
   1914c:	mov	r8, #0
   19150:	mov	r4, r1
   19154:	ldr	r0, [fp, #-68]	; 0xffffffbc
   19158:	tst	r0, #1
   1915c:	beq	187d8 <lchmod@@Base+0x1220>
   19160:	b	18a8c <lchmod@@Base+0x14d4>
   19164:	mov	r7, sl
   19168:	b	19170 <lchmod@@Base+0x1bb8>
   1916c:	mvn	r7, #0
   19170:	ldr	r1, [fp, #-64]	; 0xffffffc0
   19174:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19178:	ldr	r2, [sp, #88]	; 0x58
   1917c:	eor	r0, r1, #2
   19180:	orr	r0, r0, r9
   19184:	clz	r0, r0
   19188:	lsr	r0, r0, #5
   1918c:	tst	r3, r0
   19190:	bne	19208 <lchmod@@Base+0x1c50>
   19194:	subs	r0, r1, #2
   19198:	movwne	r0, #1
   1919c:	orr	r0, r3, r0
   191a0:	tst	r0, #1
   191a4:	ldreq	r0, [sp, #60]	; 0x3c
   191a8:	eoreq	r0, r0, #1
   191ac:	tsteq	r0, #1
   191b0:	bne	192e4 <lchmod@@Base+0x1d2c>
   191b4:	tst	r4, #1
   191b8:	bne	192a8 <lchmod@@Base+0x1cf0>
   191bc:	ldr	r6, [sp, #56]	; 0x38
   191c0:	mov	r8, #0
   191c4:	cmp	r6, #0
   191c8:	beq	192e0 <lchmod@@Base+0x1d28>
   191cc:	mov	r1, #0
   191d0:	mov	r4, #2
   191d4:	cmp	r5, #0
   191d8:	mov	r0, r2
   191dc:	mov	r3, #0
   191e0:	str	r1, [sp, #84]	; 0x54
   191e4:	beq	1802c <lchmod@@Base+0xa74>
   191e8:	b	192e4 <lchmod@@Base+0x1d2c>
   191ec:	movw	r0, #52967	; 0xcee7
   191f0:	movt	r0, #1
   191f4:	str	r0, [sp, #76]	; 0x4c
   191f8:	mov	r9, #0
   191fc:	tst	r8, #1
   19200:	beq	182c4 <lchmod@@Base+0xd0c>
   19204:	b	18404 <lchmod@@Base+0xe4c>
   19208:	ldr	r1, [sp, #88]	; 0x58
   1920c:	mov	r0, #2
   19210:	tst	r1, #1
   19214:	movwne	r0, #4
   19218:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1921c:	ldr	r1, [fp, #12]
   19220:	cmp	r2, #2
   19224:	moveq	r2, r0
   19228:	b	19260 <lchmod@@Base+0x1ca8>
   1922c:	ldr	ip, [fp, #-84]	; 0xffffffac
   19230:	ldr	lr, [fp, #-80]	; 0xffffffb0
   19234:	ldr	r1, [fp, #12]
   19238:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1923c:	b	19260 <lchmod@@Base+0x1ca8>
   19240:	ldr	r1, [sp, #88]	; 0x58
   19244:	ldr	lr, [fp, #-80]	; 0xffffffb0
   19248:	ldr	r5, [sp, #28]
   1924c:	mov	r0, #2
   19250:	tst	r1, #1
   19254:	ldr	r1, [fp, #12]
   19258:	movwne	r0, #4
   1925c:	mov	r2, r0
   19260:	mov	r0, #0
   19264:	bic	r1, r1, #2
   19268:	str	r2, [sp]
   1926c:	mov	r2, lr
   19270:	str	r0, [sp, #8]
   19274:	ldr	r0, [sp, #72]	; 0x48
   19278:	str	r1, [sp, #4]
   1927c:	mov	r1, r5
   19280:	str	r0, [sp, #12]
   19284:	ldr	r0, [sp, #76]	; 0x4c
   19288:	str	r0, [sp, #16]
   1928c:	mov	r0, ip
   19290:	mov	r3, r7
   19294:	bl	17fa0 <lchmod@@Base+0x9e8>
   19298:	mov	r9, r0
   1929c:	mov	r0, r9
   192a0:	sub	sp, fp, #28
   192a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192a8:	mov	r0, #5
   192ac:	ldr	r1, [sp, #56]	; 0x38
   192b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   192b4:	str	r0, [sp]
   192b8:	ldr	r0, [fp, #12]
   192bc:	str	r0, [sp, #4]
   192c0:	ldr	r0, [fp, #16]
   192c4:	str	r0, [sp, #8]
   192c8:	ldr	r0, [sp, #72]	; 0x48
   192cc:	str	r0, [sp, #12]
   192d0:	ldr	r0, [sp, #76]	; 0x4c
   192d4:	str	r0, [sp, #16]
   192d8:	ldr	r0, [fp, #-84]	; 0xffffffac
   192dc:	b	19290 <lchmod@@Base+0x1cd8>
   192e0:	mov	r3, #0
   192e4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   192e8:	cmp	r1, #0
   192ec:	beq	19328 <lchmod@@Base+0x1d70>
   192f0:	ldr	r2, [fp, #-84]	; 0xffffffac
   192f4:	tst	r3, #1
   192f8:	bne	1932c <lchmod@@Base+0x1d74>
   192fc:	ldrb	r0, [r1]
   19300:	cmp	r0, #0
   19304:	beq	1932c <lchmod@@Base+0x1d74>
   19308:	add	r1, r1, #1
   1930c:	cmp	r9, r5
   19310:	strbcc	r0, [r2, r9]
   19314:	add	r9, r9, #1
   19318:	ldrb	r0, [r1], #1
   1931c:	cmp	r0, #0
   19320:	bne	1930c <lchmod@@Base+0x1d54>
   19324:	b	1932c <lchmod@@Base+0x1d74>
   19328:	ldr	r2, [fp, #-84]	; 0xffffffac
   1932c:	cmp	r9, r5
   19330:	movcc	r0, #0
   19334:	strbcc	r0, [r2, r9]
   19338:	mov	r0, r9
   1933c:	sub	sp, fp, #28
   19340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19344:	mov	r0, #4
   19348:	b	19218 <lchmod@@Base+0x1c60>
   1934c:	bl	11b60 <abort@plt>
   19350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19354:	add	fp, sp, #28
   19358:	sub	sp, sp, #28
   1935c:	movw	r5, #57856	; 0xe200
   19360:	cmp	r2, #0
   19364:	mov	r4, r1
   19368:	mov	r7, r0
   1936c:	str	r0, [sp, #20]
   19370:	movt	r5, #2
   19374:	movne	r5, r2
   19378:	bl	11a04 <__errno_location@plt>
   1937c:	mov	sl, r0
   19380:	ldr	r2, [r5, #40]	; 0x28
   19384:	ldr	r3, [r5, #44]	; 0x2c
   19388:	ldm	r5, {r0, r1}
   1938c:	orr	r8, r1, #1
   19390:	add	r9, r5, #8
   19394:	mov	r1, #0
   19398:	ldr	r6, [sl]
   1939c:	stm	sp, {r0, r8, r9}
   193a0:	mov	r0, #0
   193a4:	str	r2, [sp, #12]
   193a8:	str	r3, [sp, #16]
   193ac:	mov	r2, r7
   193b0:	mov	r3, r4
   193b4:	str	r6, [sp, #24]
   193b8:	mov	r6, r4
   193bc:	bl	17fa0 <lchmod@@Base+0x9e8>
   193c0:	add	r7, r0, #1
   193c4:	mov	r0, r7
   193c8:	bl	1a768 <lchmod@@Base+0x31b0>
   193cc:	mov	r4, r0
   193d0:	ldr	r0, [r5]
   193d4:	ldr	r2, [r5, #44]	; 0x2c
   193d8:	ldr	r1, [r5, #40]	; 0x28
   193dc:	mov	r3, r6
   193e0:	stm	sp, {r0, r8, r9}
   193e4:	str	r2, [sp, #16]
   193e8:	ldr	r2, [sp, #20]
   193ec:	str	r1, [sp, #12]
   193f0:	mov	r0, r4
   193f4:	mov	r1, r7
   193f8:	bl	17fa0 <lchmod@@Base+0x9e8>
   193fc:	ldr	r0, [sp, #24]
   19400:	str	r0, [sl]
   19404:	mov	r0, r4
   19408:	sub	sp, fp, #28
   1940c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19410:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19414:	add	fp, sp, #28
   19418:	sub	sp, sp, #36	; 0x24
   1941c:	movw	r8, #57856	; 0xe200
   19420:	cmp	r3, #0
   19424:	mov	r4, r2
   19428:	str	r2, [sp, #24]
   1942c:	mov	r5, r1
   19430:	mov	r6, r0
   19434:	str	r0, [sp, #20]
   19438:	movt	r8, #2
   1943c:	movne	r8, r3
   19440:	bl	11a04 <__errno_location@plt>
   19444:	str	r0, [sp, #28]
   19448:	ldr	r1, [r8, #40]	; 0x28
   1944c:	ldr	r2, [r8, #44]	; 0x2c
   19450:	ldr	r7, [r0]
   19454:	cmp	r4, #0
   19458:	add	sl, r8, #8
   1945c:	mov	r0, #0
   19460:	ldm	r8, {r3, r9}
   19464:	orreq	r9, r9, #1
   19468:	stm	sp, {r3, r9, sl}
   1946c:	str	r1, [sp, #12]
   19470:	str	r2, [sp, #16]
   19474:	mov	r1, #0
   19478:	mov	r2, r6
   1947c:	mov	r3, r5
   19480:	str	r7, [sp, #32]
   19484:	mov	r7, r5
   19488:	bl	17fa0 <lchmod@@Base+0x9e8>
   1948c:	add	r4, r0, #1
   19490:	mov	r5, r0
   19494:	mov	r0, r4
   19498:	bl	1a768 <lchmod@@Base+0x31b0>
   1949c:	mov	r6, r0
   194a0:	ldr	r0, [r8]
   194a4:	ldr	r2, [r8, #44]	; 0x2c
   194a8:	ldr	r1, [r8, #40]	; 0x28
   194ac:	mov	r3, r7
   194b0:	stm	sp, {r0, r9, sl}
   194b4:	str	r2, [sp, #16]
   194b8:	ldr	r2, [sp, #20]
   194bc:	str	r1, [sp, #12]
   194c0:	mov	r0, r6
   194c4:	mov	r1, r4
   194c8:	bl	17fa0 <lchmod@@Base+0x9e8>
   194cc:	ldr	r0, [sp, #24]
   194d0:	ldr	r1, [sp, #32]
   194d4:	ldr	r2, [sp, #28]
   194d8:	cmp	r0, #0
   194dc:	str	r1, [r2]
   194e0:	strne	r5, [r0]
   194e4:	mov	r0, r6
   194e8:	sub	sp, fp, #28
   194ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   194f0:	push	{r4, r5, r6, r7, fp, lr}
   194f4:	add	fp, sp, #16
   194f8:	movw	r4, #57792	; 0xe1c0
   194fc:	movt	r4, #2
   19500:	ldrd	r6, [r4]
   19504:	cmp	r7, #2
   19508:	blt	19534 <lchmod@@Base+0x1f7c>
   1950c:	add	r5, r6, #12
   19510:	mov	r7, #0
   19514:	ldr	r0, [r5, r7, lsl #3]
   19518:	bl	137a0 <__assert_fail@plt+0x1be0>
   1951c:	ldr	r1, [r4, #4]
   19520:	add	r2, r7, #2
   19524:	add	r0, r7, #1
   19528:	mov	r7, r0
   1952c:	cmp	r2, r1
   19530:	blt	19514 <lchmod@@Base+0x1f5c>
   19534:	ldr	r0, [r6, #4]
   19538:	movw	r5, #57904	; 0xe230
   1953c:	movt	r5, #2
   19540:	cmp	r0, r5
   19544:	beq	19558 <lchmod@@Base+0x1fa0>
   19548:	bl	137a0 <__assert_fail@plt+0x1be0>
   1954c:	mov	r0, #256	; 0x100
   19550:	str	r0, [r4, #8]
   19554:	str	r5, [r4, #12]
   19558:	add	r5, r4, #8
   1955c:	cmp	r6, r5
   19560:	beq	19570 <lchmod@@Base+0x1fb8>
   19564:	mov	r0, r6
   19568:	bl	137a0 <__assert_fail@plt+0x1be0>
   1956c:	str	r5, [r4]
   19570:	mov	r0, #1
   19574:	str	r0, [r4, #4]
   19578:	pop	{r4, r5, r6, r7, fp, pc}
   1957c:	movw	r3, #57856	; 0xe200
   19580:	mvn	r2, #0
   19584:	movt	r3, #2
   19588:	b	1958c <lchmod@@Base+0x1fd4>
   1958c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19590:	add	fp, sp, #28
   19594:	sub	sp, sp, #44	; 0x2c
   19598:	mov	r7, r3
   1959c:	str	r2, [sp, #36]	; 0x24
   195a0:	str	r1, [sp, #32]
   195a4:	mov	r5, r0
   195a8:	bl	11a04 <__errno_location@plt>
   195ac:	cmp	r5, #0
   195b0:	bmi	19718 <lchmod@@Base+0x2160>
   195b4:	cmn	r5, #-2147483647	; 0x80000001
   195b8:	beq	19718 <lchmod@@Base+0x2160>
   195bc:	movw	r8, #57792	; 0xe1c0
   195c0:	mov	r4, r0
   195c4:	ldr	r0, [r0]
   195c8:	movt	r8, #2
   195cc:	str	r4, [sp, #28]
   195d0:	ldr	r1, [r8, #4]
   195d4:	ldr	r6, [r8]
   195d8:	str	r0, [sp, #24]
   195dc:	cmp	r1, r5
   195e0:	ble	195ec <lchmod@@Base+0x2034>
   195e4:	mov	sl, r6
   195e8:	b	19654 <lchmod@@Base+0x209c>
   195ec:	mov	r0, #8
   195f0:	add	r9, r8, #8
   195f4:	str	r1, [fp, #-32]	; 0xffffffe0
   195f8:	sub	r1, r5, r1
   195fc:	mvn	r3, #-2147483648	; 0x80000000
   19600:	str	r0, [sp]
   19604:	subs	r0, r6, r9
   19608:	add	r2, r1, #1
   1960c:	sub	r1, fp, #32
   19610:	movne	r0, r6
   19614:	bl	1a968 <lchmod@@Base+0x33b0>
   19618:	mov	sl, r0
   1961c:	cmp	r6, r9
   19620:	str	r0, [r8]
   19624:	bne	19630 <lchmod@@Base+0x2078>
   19628:	ldrd	r0, [r8, #8]
   1962c:	stm	sl, {r0, r1}
   19630:	ldr	r1, [r8, #4]
   19634:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19638:	add	r0, sl, r1, lsl #3
   1963c:	sub	r1, r2, r1
   19640:	lsl	r2, r1, #3
   19644:	mov	r1, #0
   19648:	bl	11a28 <memset@plt>
   1964c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19650:	str	r0, [r8, #4]
   19654:	mov	r9, sl
   19658:	ldm	r7, {r0, r1}
   1965c:	orr	r8, r1, #1
   19660:	add	r1, r7, #8
   19664:	ldr	r2, [r7, #40]	; 0x28
   19668:	ldr	r3, [r7, #44]	; 0x2c
   1966c:	ldr	r6, [r9, r5, lsl #3]!
   19670:	str	r1, [sp, #20]
   19674:	ldr	r4, [r9, #4]!
   19678:	stm	sp, {r0, r8}
   1967c:	add	r0, sp, #8
   19680:	stm	r0, {r1, r2, r3}
   19684:	ldr	r2, [sp, #32]
   19688:	ldr	r3, [sp, #36]	; 0x24
   1968c:	mov	r1, r6
   19690:	mov	r0, r4
   19694:	bl	17fa0 <lchmod@@Base+0x9e8>
   19698:	cmp	r6, r0
   1969c:	bhi	19700 <lchmod@@Base+0x2148>
   196a0:	add	r6, r0, #1
   196a4:	movw	r0, #57904	; 0xe230
   196a8:	movt	r0, #2
   196ac:	str	r6, [sl, r5, lsl #3]
   196b0:	cmp	r4, r0
   196b4:	beq	196c0 <lchmod@@Base+0x2108>
   196b8:	mov	r0, r4
   196bc:	bl	137a0 <__assert_fail@plt+0x1be0>
   196c0:	mov	r0, r6
   196c4:	bl	1a768 <lchmod@@Base+0x31b0>
   196c8:	str	r0, [r9]
   196cc:	mov	r4, r0
   196d0:	add	r3, sp, #8
   196d4:	ldr	r0, [r7]
   196d8:	ldr	r1, [r7, #40]	; 0x28
   196dc:	ldr	r2, [r7, #44]	; 0x2c
   196e0:	stm	sp, {r0, r8}
   196e4:	ldr	r0, [sp, #20]
   196e8:	stm	r3, {r0, r1, r2}
   196ec:	ldr	r2, [sp, #32]
   196f0:	ldr	r3, [sp, #36]	; 0x24
   196f4:	mov	r0, r4
   196f8:	mov	r1, r6
   196fc:	bl	17fa0 <lchmod@@Base+0x9e8>
   19700:	ldr	r1, [sp, #24]
   19704:	ldr	r0, [sp, #28]
   19708:	str	r1, [r0]
   1970c:	mov	r0, r4
   19710:	sub	sp, fp, #28
   19714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19718:	bl	11b60 <abort@plt>
   1971c:	movw	r3, #57856	; 0xe200
   19720:	movt	r3, #2
   19724:	b	1958c <lchmod@@Base+0x1fd4>
   19728:	movw	r3, #57856	; 0xe200
   1972c:	mov	r1, r0
   19730:	mov	r0, #0
   19734:	mvn	r2, #0
   19738:	movt	r3, #2
   1973c:	b	1958c <lchmod@@Base+0x1fd4>
   19740:	movw	r3, #57856	; 0xe200
   19744:	mov	r2, r1
   19748:	mov	r1, r0
   1974c:	mov	r0, #0
   19750:	movt	r3, #2
   19754:	b	1958c <lchmod@@Base+0x1fd4>
   19758:	push	{fp, lr}
   1975c:	mov	fp, sp
   19760:	sub	sp, sp, #48	; 0x30
   19764:	vmov.i32	q8, #0	; 0x00000000
   19768:	mov	ip, #32
   1976c:	mov	r3, sp
   19770:	mov	lr, r2
   19774:	cmp	r1, #10
   19778:	add	r2, r3, #16
   1977c:	vst1.64	{d16-d17}, [r3], ip
   19780:	vst1.64	{d16-d17}, [r2]
   19784:	vst1.64	{d16-d17}, [r3]
   19788:	beq	197a8 <lchmod@@Base+0x21f0>
   1978c:	str	r1, [sp]
   19790:	mov	r3, sp
   19794:	mov	r1, lr
   19798:	mvn	r2, #0
   1979c:	bl	1958c <lchmod@@Base+0x1fd4>
   197a0:	mov	sp, fp
   197a4:	pop	{fp, pc}
   197a8:	bl	11b60 <abort@plt>
   197ac:	push	{r4, sl, fp, lr}
   197b0:	add	fp, sp, #8
   197b4:	sub	sp, sp, #48	; 0x30
   197b8:	vmov.i32	q8, #0	; 0x00000000
   197bc:	mov	ip, r3
   197c0:	mov	r3, sp
   197c4:	mov	lr, #32
   197c8:	cmp	r1, #10
   197cc:	add	r4, r3, #16
   197d0:	vst1.64	{d16-d17}, [r3], lr
   197d4:	vst1.64	{d16-d17}, [r4]
   197d8:	vst1.64	{d16-d17}, [r3]
   197dc:	beq	197fc <lchmod@@Base+0x2244>
   197e0:	str	r1, [sp]
   197e4:	mov	r1, r2
   197e8:	mov	r3, sp
   197ec:	mov	r2, ip
   197f0:	bl	1958c <lchmod@@Base+0x1fd4>
   197f4:	sub	sp, fp, #8
   197f8:	pop	{r4, sl, fp, pc}
   197fc:	bl	11b60 <abort@plt>
   19800:	push	{fp, lr}
   19804:	mov	fp, sp
   19808:	sub	sp, sp, #48	; 0x30
   1980c:	vmov.i32	q8, #0	; 0x00000000
   19810:	mov	r3, sp
   19814:	mov	ip, #32
   19818:	cmp	r0, #10
   1981c:	add	r2, r3, #16
   19820:	vst1.64	{d16-d17}, [r3], ip
   19824:	vst1.64	{d16-d17}, [r2]
   19828:	vst1.64	{d16-d17}, [r3]
   1982c:	beq	1984c <lchmod@@Base+0x2294>
   19830:	str	r0, [sp]
   19834:	mov	r3, sp
   19838:	mov	r0, #0
   1983c:	mvn	r2, #0
   19840:	bl	1958c <lchmod@@Base+0x1fd4>
   19844:	mov	sp, fp
   19848:	pop	{fp, pc}
   1984c:	bl	11b60 <abort@plt>
   19850:	push	{fp, lr}
   19854:	mov	fp, sp
   19858:	sub	sp, sp, #48	; 0x30
   1985c:	vmov.i32	q8, #0	; 0x00000000
   19860:	mov	r3, sp
   19864:	mov	ip, #32
   19868:	cmp	r0, #10
   1986c:	add	lr, r3, #16
   19870:	vst1.64	{d16-d17}, [r3], ip
   19874:	vst1.64	{d16-d17}, [lr]
   19878:	vst1.64	{d16-d17}, [r3]
   1987c:	beq	19898 <lchmod@@Base+0x22e0>
   19880:	str	r0, [sp]
   19884:	mov	r3, sp
   19888:	mov	r0, #0
   1988c:	bl	1958c <lchmod@@Base+0x1fd4>
   19890:	mov	sp, fp
   19894:	pop	{fp, pc}
   19898:	bl	11b60 <abort@plt>
   1989c:	push	{r4, sl, fp, lr}
   198a0:	add	fp, sp, #8
   198a4:	sub	sp, sp, #48	; 0x30
   198a8:	mov	lr, r0
   198ac:	movw	r0, #57856	; 0xe200
   198b0:	mov	ip, r1
   198b4:	mov	r1, #32
   198b8:	mov	r4, #1
   198bc:	movt	r0, #2
   198c0:	add	r3, r0, #16
   198c4:	vld1.64	{d16-d17}, [r0], r1
   198c8:	vld1.64	{d20-d21}, [r0]
   198cc:	vld1.64	{d18-d19}, [r3]
   198d0:	mov	r3, sp
   198d4:	add	r0, r3, #32
   198d8:	add	r1, r3, #16
   198dc:	vst1.64	{d20-d21}, [r0]
   198e0:	mov	r0, #28
   198e4:	vst1.64	{d18-d19}, [r1]
   198e8:	mov	r1, r3
   198ec:	and	r0, r0, r2, lsr #3
   198f0:	and	r2, r2, #31
   198f4:	vst1.64	{d16-d17}, [r1], r0
   198f8:	ldr	r0, [r1, #8]
   198fc:	bic	r4, r4, r0, lsr r2
   19900:	eor	r0, r0, r4, lsl r2
   19904:	mov	r2, ip
   19908:	str	r0, [r1, #8]
   1990c:	mov	r0, #0
   19910:	mov	r1, lr
   19914:	bl	1958c <lchmod@@Base+0x1fd4>
   19918:	sub	sp, fp, #8
   1991c:	pop	{r4, sl, fp, pc}
   19920:	push	{fp, lr}
   19924:	mov	fp, sp
   19928:	sub	sp, sp, #48	; 0x30
   1992c:	mov	ip, r0
   19930:	movw	r0, #57856	; 0xe200
   19934:	mov	r2, #32
   19938:	movt	r0, #2
   1993c:	add	r3, r0, #16
   19940:	vld1.64	{d16-d17}, [r0], r2
   19944:	vld1.64	{d20-d21}, [r0]
   19948:	vld1.64	{d18-d19}, [r3]
   1994c:	mov	r3, sp
   19950:	add	r0, r3, #32
   19954:	add	r2, r3, #16
   19958:	vst1.64	{d20-d21}, [r0]
   1995c:	mov	r0, #28
   19960:	vst1.64	{d18-d19}, [r2]
   19964:	mov	r2, r3
   19968:	and	r0, r0, r1, lsr #3
   1996c:	and	r1, r1, #31
   19970:	vst1.64	{d16-d17}, [r2], r0
   19974:	mov	r0, #1
   19978:	ldr	lr, [r2, #8]
   1997c:	bic	r0, r0, lr, lsr r1
   19980:	eor	r0, lr, r0, lsl r1
   19984:	mov	r1, ip
   19988:	str	r0, [r2, #8]
   1998c:	mov	r0, #0
   19990:	mvn	r2, #0
   19994:	bl	1958c <lchmod@@Base+0x1fd4>
   19998:	mov	sp, fp
   1999c:	pop	{fp, pc}
   199a0:	push	{fp, lr}
   199a4:	mov	fp, sp
   199a8:	sub	sp, sp, #48	; 0x30
   199ac:	mov	r1, r0
   199b0:	movw	r0, #57856	; 0xe200
   199b4:	mov	r3, #32
   199b8:	movt	r0, #2
   199bc:	add	r2, r0, #16
   199c0:	vld1.64	{d16-d17}, [r0], r3
   199c4:	mov	r3, sp
   199c8:	vld1.64	{d18-d19}, [r2]
   199cc:	vld1.64	{d20-d21}, [r0]
   199d0:	add	r2, r3, #16
   199d4:	add	r0, r3, #32
   199d8:	vst1.64	{d18-d19}, [r2]
   199dc:	vst1.64	{d20-d21}, [r0]
   199e0:	mov	r0, #12
   199e4:	mov	r2, r3
   199e8:	vst1.64	{d16-d17}, [r2], r0
   199ec:	ldr	r0, [r2]
   199f0:	orr	r0, r0, #67108864	; 0x4000000
   199f4:	str	r0, [r2]
   199f8:	mov	r0, #0
   199fc:	mvn	r2, #0
   19a00:	bl	1958c <lchmod@@Base+0x1fd4>
   19a04:	mov	sp, fp
   19a08:	pop	{fp, pc}
   19a0c:	push	{fp, lr}
   19a10:	mov	fp, sp
   19a14:	sub	sp, sp, #48	; 0x30
   19a18:	mov	ip, r1
   19a1c:	mov	r1, r0
   19a20:	movw	r0, #57856	; 0xe200
   19a24:	mov	r2, #32
   19a28:	movt	r0, #2
   19a2c:	add	r3, r0, #16
   19a30:	vld1.64	{d16-d17}, [r0], r2
   19a34:	vld1.64	{d18-d19}, [r3]
   19a38:	vld1.64	{d20-d21}, [r0]
   19a3c:	mov	r3, sp
   19a40:	add	r2, r3, #16
   19a44:	add	r0, r3, #32
   19a48:	vst1.64	{d18-d19}, [r2]
   19a4c:	vst1.64	{d20-d21}, [r0]
   19a50:	mov	r0, #12
   19a54:	mov	r2, r3
   19a58:	vst1.64	{d16-d17}, [r2], r0
   19a5c:	ldr	r0, [r2]
   19a60:	orr	r0, r0, #67108864	; 0x4000000
   19a64:	str	r0, [r2]
   19a68:	mov	r0, #0
   19a6c:	mov	r2, ip
   19a70:	bl	1958c <lchmod@@Base+0x1fd4>
   19a74:	mov	sp, fp
   19a78:	pop	{fp, pc}
   19a7c:	push	{r4, sl, fp, lr}
   19a80:	add	fp, sp, #8
   19a84:	sub	sp, sp, #96	; 0x60
   19a88:	vmov.i32	q8, #0	; 0x00000000
   19a8c:	mov	ip, r2
   19a90:	mov	r2, sp
   19a94:	mov	r4, #28
   19a98:	cmp	r1, #10
   19a9c:	mov	r3, r2
   19aa0:	add	lr, r2, #16
   19aa4:	vst1.64	{d16-d17}, [r3], r4
   19aa8:	vst1.64	{d16-d17}, [lr]
   19aac:	vst1.32	{d16-d17}, [r3]
   19ab0:	beq	19b00 <lchmod@@Base+0x2548>
   19ab4:	vld1.64	{d16-d17}, [r2], r4
   19ab8:	vld1.64	{d18-d19}, [lr]
   19abc:	add	r3, sp, #48	; 0x30
   19ac0:	vld1.32	{d20-d21}, [r2]
   19ac4:	add	r2, r3, #20
   19ac8:	add	r4, r3, #4
   19acc:	vst1.32	{d18-d19}, [r2]
   19ad0:	add	r2, r3, #32
   19ad4:	vst1.32	{d16-d17}, [r4]
   19ad8:	vst1.32	{d20-d21}, [r2]
   19adc:	str	r1, [sp, #48]	; 0x30
   19ae0:	mvn	r2, #0
   19ae4:	ldr	r1, [sp, #60]	; 0x3c
   19ae8:	orr	r1, r1, #67108864	; 0x4000000
   19aec:	str	r1, [sp, #60]	; 0x3c
   19af0:	mov	r1, ip
   19af4:	bl	1958c <lchmod@@Base+0x1fd4>
   19af8:	sub	sp, fp, #8
   19afc:	pop	{r4, sl, fp, pc}
   19b00:	bl	11b60 <abort@plt>
   19b04:	push	{r4, r5, r6, sl, fp, lr}
   19b08:	add	fp, sp, #16
   19b0c:	sub	sp, sp, #48	; 0x30
   19b10:	mov	ip, r3
   19b14:	movw	r3, #57856	; 0xe200
   19b18:	mov	r6, #32
   19b1c:	cmp	r1, #0
   19b20:	mov	r4, sp
   19b24:	movt	r3, #2
   19b28:	cmpne	r2, #0
   19b2c:	add	r5, r4, #16
   19b30:	add	lr, r3, #16
   19b34:	vld1.64	{d16-d17}, [r3], r6
   19b38:	vld1.64	{d18-d19}, [lr]
   19b3c:	vld1.64	{d20-d21}, [r3]
   19b40:	mov	r3, #10
   19b44:	vst1.64	{d16-d17}, [r4], r6
   19b48:	vst1.64	{d18-d19}, [r5]
   19b4c:	vst1.64	{d20-d21}, [r4]
   19b50:	str	r3, [sp]
   19b54:	bne	19b5c <lchmod@@Base+0x25a4>
   19b58:	bl	11b60 <abort@plt>
   19b5c:	str	r2, [sp, #44]	; 0x2c
   19b60:	str	r1, [sp, #40]	; 0x28
   19b64:	mov	r3, sp
   19b68:	mov	r1, ip
   19b6c:	mvn	r2, #0
   19b70:	bl	1958c <lchmod@@Base+0x1fd4>
   19b74:	sub	sp, fp, #16
   19b78:	pop	{r4, r5, r6, sl, fp, pc}
   19b7c:	push	{r4, r5, r6, sl, fp, lr}
   19b80:	add	fp, sp, #16
   19b84:	sub	sp, sp, #48	; 0x30
   19b88:	mov	lr, r3
   19b8c:	movw	r3, #57856	; 0xe200
   19b90:	mov	r6, #32
   19b94:	cmp	r1, #0
   19b98:	mov	r4, sp
   19b9c:	movt	r3, #2
   19ba0:	cmpne	r2, #0
   19ba4:	add	r5, r4, #16
   19ba8:	add	ip, r3, #16
   19bac:	vld1.64	{d16-d17}, [r3], r6
   19bb0:	vld1.64	{d18-d19}, [ip]
   19bb4:	vld1.64	{d20-d21}, [r3]
   19bb8:	mov	r3, #10
   19bbc:	vst1.64	{d16-d17}, [r4], r6
   19bc0:	vst1.64	{d18-d19}, [r5]
   19bc4:	vst1.64	{d20-d21}, [r4]
   19bc8:	str	r3, [sp]
   19bcc:	bne	19bd4 <lchmod@@Base+0x261c>
   19bd0:	bl	11b60 <abort@plt>
   19bd4:	ldr	ip, [fp, #8]
   19bd8:	str	r2, [sp, #44]	; 0x2c
   19bdc:	str	r1, [sp, #40]	; 0x28
   19be0:	mov	r3, sp
   19be4:	mov	r1, lr
   19be8:	mov	r2, ip
   19bec:	bl	1958c <lchmod@@Base+0x1fd4>
   19bf0:	sub	sp, fp, #16
   19bf4:	pop	{r4, r5, r6, sl, fp, pc}
   19bf8:	push	{r4, sl, fp, lr}
   19bfc:	add	fp, sp, #8
   19c00:	sub	sp, sp, #48	; 0x30
   19c04:	movw	r3, #57856	; 0xe200
   19c08:	mov	lr, #32
   19c0c:	mov	ip, r2
   19c10:	cmp	r0, #0
   19c14:	movt	r3, #2
   19c18:	cmpne	r1, #0
   19c1c:	add	r2, r3, #16
   19c20:	vld1.64	{d16-d17}, [r3], lr
   19c24:	vld1.64	{d20-d21}, [r3]
   19c28:	vld1.64	{d18-d19}, [r2]
   19c2c:	mov	r2, sp
   19c30:	add	r4, r2, #16
   19c34:	vst1.64	{d16-d17}, [r2], lr
   19c38:	vst1.64	{d20-d21}, [r2]
   19c3c:	mov	r2, #10
   19c40:	vst1.64	{d18-d19}, [r4]
   19c44:	str	r2, [sp]
   19c48:	bne	19c50 <lchmod@@Base+0x2698>
   19c4c:	bl	11b60 <abort@plt>
   19c50:	str	r1, [sp, #44]	; 0x2c
   19c54:	str	r0, [sp, #40]	; 0x28
   19c58:	mov	r3, sp
   19c5c:	mov	r0, #0
   19c60:	mov	r1, ip
   19c64:	mvn	r2, #0
   19c68:	bl	1958c <lchmod@@Base+0x1fd4>
   19c6c:	sub	sp, fp, #8
   19c70:	pop	{r4, sl, fp, pc}
   19c74:	push	{r4, r5, fp, lr}
   19c78:	add	fp, sp, #8
   19c7c:	sub	sp, sp, #48	; 0x30
   19c80:	mov	ip, r3
   19c84:	movw	r3, #57856	; 0xe200
   19c88:	mov	r4, #32
   19c8c:	mov	lr, r2
   19c90:	cmp	r0, #0
   19c94:	movt	r3, #2
   19c98:	cmpne	r1, #0
   19c9c:	add	r2, r3, #16
   19ca0:	vld1.64	{d16-d17}, [r3], r4
   19ca4:	vld1.64	{d20-d21}, [r3]
   19ca8:	vld1.64	{d18-d19}, [r2]
   19cac:	mov	r2, sp
   19cb0:	add	r5, r2, #16
   19cb4:	vst1.64	{d16-d17}, [r2], r4
   19cb8:	vst1.64	{d20-d21}, [r2]
   19cbc:	mov	r2, #10
   19cc0:	vst1.64	{d18-d19}, [r5]
   19cc4:	str	r2, [sp]
   19cc8:	bne	19cd0 <lchmod@@Base+0x2718>
   19ccc:	bl	11b60 <abort@plt>
   19cd0:	str	r1, [sp, #44]	; 0x2c
   19cd4:	str	r0, [sp, #40]	; 0x28
   19cd8:	mov	r3, sp
   19cdc:	mov	r0, #0
   19ce0:	mov	r1, lr
   19ce4:	mov	r2, ip
   19ce8:	bl	1958c <lchmod@@Base+0x1fd4>
   19cec:	sub	sp, fp, #8
   19cf0:	pop	{r4, r5, fp, pc}
   19cf4:	movw	r3, #57744	; 0xe190
   19cf8:	movt	r3, #2
   19cfc:	b	1958c <lchmod@@Base+0x1fd4>
   19d00:	movw	r3, #57744	; 0xe190
   19d04:	mov	r2, r1
   19d08:	mov	r1, r0
   19d0c:	mov	r0, #0
   19d10:	movt	r3, #2
   19d14:	b	1958c <lchmod@@Base+0x1fd4>
   19d18:	movw	r3, #57744	; 0xe190
   19d1c:	mvn	r2, #0
   19d20:	movt	r3, #2
   19d24:	b	1958c <lchmod@@Base+0x1fd4>
   19d28:	movw	r3, #57744	; 0xe190
   19d2c:	mov	r1, r0
   19d30:	mov	r0, #0
   19d34:	mvn	r2, #0
   19d38:	movt	r3, #2
   19d3c:	b	1958c <lchmod@@Base+0x1fd4>
   19d40:	push	{r4, r5, r6, sl, fp, lr}
   19d44:	add	fp, sp, #16
   19d48:	ldr	r4, [r0], #8
   19d4c:	mov	r5, r1
   19d50:	cmp	r4, r0
   19d54:	beq	19d78 <lchmod@@Base+0x27c0>
   19d58:	mov	r0, r4
   19d5c:	mov	r1, r5
   19d60:	bl	1ba6c <lchmod@@Base+0x44b4>
   19d64:	cmp	r0, #0
   19d68:	mov	r6, r0
   19d6c:	moveq	r6, r4
   19d70:	mov	r0, r6
   19d74:	pop	{r4, r5, r6, sl, fp, pc}
   19d78:	mov	r0, r5
   19d7c:	bl	1ba3c <lchmod@@Base+0x4484>
   19d80:	cmp	r0, #0
   19d84:	beq	19da0 <lchmod@@Base+0x27e8>
   19d88:	mov	r1, r4
   19d8c:	mov	r2, r5
   19d90:	mov	r6, r0
   19d94:	bl	11830 <memcpy@plt>
   19d98:	mov	r0, r6
   19d9c:	pop	{r4, r5, r6, sl, fp, pc}
   19da0:	mov	r6, #0
   19da4:	mov	r0, r6
   19da8:	pop	{r4, r5, r6, sl, fp, pc}
   19dac:	push	{r4, r5, r6, sl, fp, lr}
   19db0:	add	fp, sp, #16
   19db4:	mov	r4, r0
   19db8:	add	r6, r0, #8
   19dbc:	ldrd	r0, [r0]
   19dc0:	lsl	r5, r1, #1
   19dc4:	cmp	r0, r6
   19dc8:	beq	19dd4 <lchmod@@Base+0x281c>
   19dcc:	bl	137a0 <__assert_fail@plt+0x1be0>
   19dd0:	ldr	r1, [r4, #4]
   19dd4:	cmp	r5, r1
   19dd8:	bcc	19dfc <lchmod@@Base+0x2844>
   19ddc:	mov	r0, r5
   19de0:	bl	1ba3c <lchmod@@Base+0x4484>
   19de4:	cmp	r0, #0
   19de8:	strne	r0, [r4]
   19dec:	movne	r0, #1
   19df0:	strne	r5, [r4, #4]
   19df4:	popne	{r4, r5, r6, sl, fp, pc}
   19df8:	b	19e08 <lchmod@@Base+0x2850>
   19dfc:	bl	11a04 <__errno_location@plt>
   19e00:	mov	r1, #12
   19e04:	str	r1, [r0]
   19e08:	mov	r0, #0
   19e0c:	mov	r5, #1024	; 0x400
   19e10:	str	r6, [r4]
   19e14:	str	r5, [r4, #4]
   19e18:	pop	{r4, r5, r6, sl, fp, pc}
   19e1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19e20:	add	fp, sp, #24
   19e24:	ldrd	r8, [r0]
   19e28:	add	r7, r0, #8
   19e2c:	mov	r4, r0
   19e30:	lsl	r5, r9, #1
   19e34:	cmp	r8, r7
   19e38:	beq	19e6c <lchmod@@Base+0x28b4>
   19e3c:	cmp	r5, r9
   19e40:	bcc	19ea4 <lchmod@@Base+0x28ec>
   19e44:	mov	r0, r8
   19e48:	mov	r1, r5
   19e4c:	bl	1ba6c <lchmod@@Base+0x44b4>
   19e50:	mov	r6, r0
   19e54:	cmp	r0, #0
   19e58:	beq	19eb4 <lchmod@@Base+0x28fc>
   19e5c:	mov	r0, #1
   19e60:	str	r6, [r4]
   19e64:	str	r5, [r4, #4]
   19e68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19e6c:	mov	r0, r5
   19e70:	bl	1ba3c <lchmod@@Base+0x4484>
   19e74:	cmp	r0, #0
   19e78:	beq	19e9c <lchmod@@Base+0x28e4>
   19e7c:	ldr	r2, [r4, #4]
   19e80:	mov	r1, r8
   19e84:	mov	r6, r0
   19e88:	bl	11830 <memcpy@plt>
   19e8c:	mov	r0, #1
   19e90:	str	r6, [r4]
   19e94:	str	r5, [r4, #4]
   19e98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19e9c:	mov	r0, #0
   19ea0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19ea4:	bl	11a04 <__errno_location@plt>
   19ea8:	mov	r1, #12
   19eac:	str	r1, [r0]
   19eb0:	b	19eb8 <lchmod@@Base+0x2900>
   19eb4:	ldr	r8, [r4]
   19eb8:	mov	r0, r8
   19ebc:	bl	137a0 <__assert_fail@plt+0x1be0>
   19ec0:	mov	r0, #0
   19ec4:	mov	r5, #1024	; 0x400
   19ec8:	str	r7, [r4]
   19ecc:	str	r5, [r4, #4]
   19ed0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19ed4:	push	{r4, r5, fp, lr}
   19ed8:	add	fp, sp, #8
   19edc:	mov	r4, r1
   19ee0:	bl	119b0 <getfilecon@plt>
   19ee4:	cmp	r0, #10
   19ee8:	beq	19f00 <lchmod@@Base+0x2948>
   19eec:	cmp	r0, #0
   19ef0:	bne	19f44 <lchmod@@Base+0x298c>
   19ef4:	bl	11a04 <__errno_location@plt>
   19ef8:	mov	r1, #95	; 0x5f
   19efc:	b	19f3c <lchmod@@Base+0x2984>
   19f00:	ldr	r5, [r4]
   19f04:	movw	r1, #53056	; 0xcf40
   19f08:	movt	r1, #1
   19f0c:	mov	r0, r5
   19f10:	bl	117d0 <strcmp@plt>
   19f14:	mov	r1, r0
   19f18:	mov	r0, #10
   19f1c:	cmp	r1, #0
   19f20:	popne	{r4, r5, fp, pc}
   19f24:	mov	r0, r5
   19f28:	bl	11af4 <freecon@plt>
   19f2c:	mov	r0, #0
   19f30:	str	r0, [r4]
   19f34:	bl	11a04 <__errno_location@plt>
   19f38:	mov	r1, #61	; 0x3d
   19f3c:	str	r1, [r0]
   19f40:	mvn	r0, #0
   19f44:	pop	{r4, r5, fp, pc}
   19f48:	push	{r4, r5, fp, lr}
   19f4c:	add	fp, sp, #8
   19f50:	mov	r4, r1
   19f54:	bl	11938 <lgetfilecon@plt>
   19f58:	cmp	r0, #10
   19f5c:	beq	19f74 <lchmod@@Base+0x29bc>
   19f60:	cmp	r0, #0
   19f64:	bne	19fb8 <lchmod@@Base+0x2a00>
   19f68:	bl	11a04 <__errno_location@plt>
   19f6c:	mov	r1, #95	; 0x5f
   19f70:	b	19fb0 <lchmod@@Base+0x29f8>
   19f74:	ldr	r5, [r4]
   19f78:	movw	r1, #53056	; 0xcf40
   19f7c:	movt	r1, #1
   19f80:	mov	r0, r5
   19f84:	bl	117d0 <strcmp@plt>
   19f88:	mov	r1, r0
   19f8c:	mov	r0, #10
   19f90:	cmp	r1, #0
   19f94:	popne	{r4, r5, fp, pc}
   19f98:	mov	r0, r5
   19f9c:	bl	11af4 <freecon@plt>
   19fa0:	mov	r0, #0
   19fa4:	str	r0, [r4]
   19fa8:	bl	11a04 <__errno_location@plt>
   19fac:	mov	r1, #61	; 0x3d
   19fb0:	str	r1, [r0]
   19fb4:	mvn	r0, #0
   19fb8:	pop	{r4, r5, fp, pc}
   19fbc:	push	{r4, r5, fp, lr}
   19fc0:	add	fp, sp, #8
   19fc4:	mov	r4, r1
   19fc8:	bl	11884 <fgetfilecon@plt>
   19fcc:	cmp	r0, #10
   19fd0:	beq	19fe8 <lchmod@@Base+0x2a30>
   19fd4:	cmp	r0, #0
   19fd8:	bne	1a02c <lchmod@@Base+0x2a74>
   19fdc:	bl	11a04 <__errno_location@plt>
   19fe0:	mov	r1, #95	; 0x5f
   19fe4:	b	1a024 <lchmod@@Base+0x2a6c>
   19fe8:	ldr	r5, [r4]
   19fec:	movw	r1, #53056	; 0xcf40
   19ff0:	movt	r1, #1
   19ff4:	mov	r0, r5
   19ff8:	bl	117d0 <strcmp@plt>
   19ffc:	mov	r1, r0
   1a000:	mov	r0, #10
   1a004:	cmp	r1, #0
   1a008:	popne	{r4, r5, fp, pc}
   1a00c:	mov	r0, r5
   1a010:	bl	11af4 <freecon@plt>
   1a014:	mov	r0, #0
   1a018:	str	r0, [r4]
   1a01c:	bl	11a04 <__errno_location@plt>
   1a020:	mov	r1, #61	; 0x3d
   1a024:	str	r1, [r0]
   1a028:	mvn	r0, #0
   1a02c:	pop	{r4, r5, fp, pc}
   1a030:	push	{r4, r5, r6, r7, fp, lr}
   1a034:	add	fp, sp, #16
   1a038:	mov	r4, r0
   1a03c:	cmp	r0, #2
   1a040:	bhi	1a070 <lchmod@@Base+0x2ab8>
   1a044:	mov	r0, r4
   1a048:	bl	1c1a4 <lchmod@@Base+0x4bec>
   1a04c:	mov	r5, r0
   1a050:	bl	11a04 <__errno_location@plt>
   1a054:	ldr	r7, [r0]
   1a058:	mov	r6, r0
   1a05c:	mov	r0, r4
   1a060:	bl	11b6c <close@plt>
   1a064:	mov	r0, r5
   1a068:	str	r7, [r6]
   1a06c:	pop	{r4, r5, r6, r7, fp, pc}
   1a070:	mov	r0, r4
   1a074:	pop	{r4, r5, r6, r7, fp, pc}
   1a078:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a07c:	add	fp, sp, #24
   1a080:	sub	sp, sp, #32
   1a084:	ldr	r6, [fp, #12]
   1a088:	ldr	r7, [fp, #8]
   1a08c:	mov	r4, r2
   1a090:	mov	r8, r0
   1a094:	cmp	r1, #0
   1a098:	beq	1a0c0 <lchmod@@Base+0x2b08>
   1a09c:	movw	r2, #53066	; 0xcf4a
   1a0a0:	mov	r5, r1
   1a0a4:	str	r3, [sp, #4]
   1a0a8:	str	r4, [sp]
   1a0ac:	mov	r0, r8
   1a0b0:	mov	r1, #1
   1a0b4:	movt	r2, #1
   1a0b8:	mov	r3, r5
   1a0bc:	b	1a0d8 <lchmod@@Base+0x2b20>
   1a0c0:	movw	r2, #53078	; 0xcf56
   1a0c4:	str	r3, [sp]
   1a0c8:	mov	r0, r8
   1a0cc:	mov	r1, #1
   1a0d0:	mov	r3, r4
   1a0d4:	movt	r2, #1
   1a0d8:	bl	11a4c <__fprintf_chk@plt>
   1a0dc:	movw	r1, #53085	; 0xcf5d
   1a0e0:	mov	r0, #0
   1a0e4:	mov	r2, #5
   1a0e8:	movt	r1, #1
   1a0ec:	bl	11860 <dcgettext@plt>
   1a0f0:	movw	r2, #53803	; 0xd22b
   1a0f4:	mov	r3, r0
   1a0f8:	movw	r0, #2022	; 0x7e6
   1a0fc:	mov	r1, #1
   1a100:	movt	r2, #1
   1a104:	str	r0, [sp]
   1a108:	mov	r0, r8
   1a10c:	bl	11a4c <__fprintf_chk@plt>
   1a110:	movw	r4, #52410	; 0xccba
   1a114:	mov	r1, r8
   1a118:	movt	r4, #1
   1a11c:	mov	r0, r4
   1a120:	bl	117ac <fputs_unlocked@plt>
   1a124:	movw	r1, #53089	; 0xcf61
   1a128:	mov	r0, #0
   1a12c:	mov	r2, #5
   1a130:	movt	r1, #1
   1a134:	bl	11860 <dcgettext@plt>
   1a138:	movw	r3, #53260	; 0xd00c
   1a13c:	mov	r2, r0
   1a140:	mov	r0, r8
   1a144:	mov	r1, #1
   1a148:	movt	r3, #1
   1a14c:	bl	11a4c <__fprintf_chk@plt>
   1a150:	mov	r0, r4
   1a154:	mov	r1, r8
   1a158:	bl	117ac <fputs_unlocked@plt>
   1a15c:	cmp	r6, #9
   1a160:	bhi	1a19c <lchmod@@Base+0x2be4>
   1a164:	add	r0, pc, #0
   1a168:	ldr	pc, [r0, r6, lsl #2]
   1a16c:	muleq	r1, r4, r1
   1a170:	andeq	sl, r1, r8, lsr #3
   1a174:	ldrdeq	sl, [r1], -r8
   1a178:	andeq	sl, r1, r0, lsl #4
   1a17c:	andeq	sl, r1, r8, lsr #4
   1a180:	andeq	sl, r1, r0, asr r2
   1a184:	andeq	sl, r1, r8, ror r2
   1a188:			; <UNDEFINED> instruction: 0x0001a2b0
   1a18c:	andeq	sl, r1, r8, asr r3
   1a190:	andeq	sl, r1, r0, lsl #6
   1a194:	sub	sp, fp, #24
   1a198:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a19c:	movw	r1, #53613	; 0xd16d
   1a1a0:	movt	r1, #1
   1a1a4:	b	1a308 <lchmod@@Base+0x2d50>
   1a1a8:	movw	r1, #53294	; 0xd02e
   1a1ac:	mov	r0, #0
   1a1b0:	mov	r2, #5
   1a1b4:	movt	r1, #1
   1a1b8:	bl	11860 <dcgettext@plt>
   1a1bc:	ldr	r3, [r7]
   1a1c0:	mov	r2, r0
   1a1c4:	mov	r0, r8
   1a1c8:	mov	r1, #1
   1a1cc:	sub	sp, fp, #24
   1a1d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a1d4:	b	11a4c <__fprintf_chk@plt>
   1a1d8:	movw	r1, #53310	; 0xd03e
   1a1dc:	mov	r0, #0
   1a1e0:	mov	r2, #5
   1a1e4:	movt	r1, #1
   1a1e8:	bl	11860 <dcgettext@plt>
   1a1ec:	mov	r2, r0
   1a1f0:	ldr	r3, [r7]
   1a1f4:	ldr	r0, [r7, #4]
   1a1f8:	str	r0, [sp]
   1a1fc:	b	1a2ec <lchmod@@Base+0x2d34>
   1a200:	movw	r1, #53333	; 0xd055
   1a204:	mov	r0, #0
   1a208:	mov	r2, #5
   1a20c:	movt	r1, #1
   1a210:	bl	11860 <dcgettext@plt>
   1a214:	mov	r2, r0
   1a218:	ldr	r3, [r7]
   1a21c:	ldmib	r7, {r0, r1}
   1a220:	stm	sp, {r0, r1}
   1a224:	b	1a2ec <lchmod@@Base+0x2d34>
   1a228:	movw	r1, #53361	; 0xd071
   1a22c:	mov	r0, #0
   1a230:	mov	r2, #5
   1a234:	movt	r1, #1
   1a238:	bl	11860 <dcgettext@plt>
   1a23c:	ldr	r3, [r7]
   1a240:	mov	r2, r0
   1a244:	ldmib	r7, {r0, r1, r7}
   1a248:	stm	sp, {r0, r1, r7}
   1a24c:	b	1a2ec <lchmod@@Base+0x2d34>
   1a250:	movw	r1, #53393	; 0xd091
   1a254:	mov	r0, #0
   1a258:	mov	r2, #5
   1a25c:	movt	r1, #1
   1a260:	bl	11860 <dcgettext@plt>
   1a264:	ldr	r3, [r7]
   1a268:	mov	r2, r0
   1a26c:	ldmib	r7, {r0, r1, r6, r7}
   1a270:	stm	sp, {r0, r1, r6, r7}
   1a274:	b	1a2ec <lchmod@@Base+0x2d34>
   1a278:	movw	r1, #53429	; 0xd0b5
   1a27c:	mov	r0, #0
   1a280:	mov	r2, #5
   1a284:	movt	r1, #1
   1a288:	bl	11860 <dcgettext@plt>
   1a28c:	mov	r2, r0
   1a290:	ldr	r3, [r7]
   1a294:	ldmib	r7, {r0, r1, r6}
   1a298:	ldr	r5, [r7, #16]
   1a29c:	ldr	r7, [r7, #20]
   1a2a0:	stm	sp, {r0, r1, r6}
   1a2a4:	str	r5, [sp, #12]
   1a2a8:	str	r7, [sp, #16]
   1a2ac:	b	1a2ec <lchmod@@Base+0x2d34>
   1a2b0:	movw	r1, #53469	; 0xd0dd
   1a2b4:	mov	r0, #0
   1a2b8:	mov	r2, #5
   1a2bc:	movt	r1, #1
   1a2c0:	bl	11860 <dcgettext@plt>
   1a2c4:	mov	r2, r0
   1a2c8:	ldr	r3, [r7]
   1a2cc:	ldmib	r7, {r0, r1, r6}
   1a2d0:	ldr	r5, [r7, #16]
   1a2d4:	ldr	r4, [r7, #20]
   1a2d8:	ldr	r7, [r7, #24]
   1a2dc:	stm	sp, {r0, r1, r6}
   1a2e0:	str	r5, [sp, #12]
   1a2e4:	str	r4, [sp, #16]
   1a2e8:	str	r7, [sp, #20]
   1a2ec:	mov	r0, r8
   1a2f0:	mov	r1, #1
   1a2f4:	bl	11a4c <__fprintf_chk@plt>
   1a2f8:	sub	sp, fp, #24
   1a2fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a300:	movw	r1, #53561	; 0xd139
   1a304:	movt	r1, #1
   1a308:	mov	r0, #0
   1a30c:	mov	r2, #5
   1a310:	bl	11860 <dcgettext@plt>
   1a314:	mov	ip, r0
   1a318:	ldr	r3, [r7]
   1a31c:	ldr	r0, [r7, #4]
   1a320:	ldr	r1, [r7, #8]
   1a324:	ldr	r6, [r7, #12]
   1a328:	ldr	r5, [r7, #16]
   1a32c:	ldr	r4, [r7, #20]
   1a330:	ldr	r2, [r7, #24]
   1a334:	ldr	lr, [r7, #28]
   1a338:	ldr	r7, [r7, #32]
   1a33c:	stm	sp, {r0, r1, r6}
   1a340:	str	r5, [sp, #12]
   1a344:	str	r4, [sp, #16]
   1a348:	str	r2, [sp, #20]
   1a34c:	str	lr, [sp, #24]
   1a350:	str	r7, [sp, #28]
   1a354:	b	1a39c <lchmod@@Base+0x2de4>
   1a358:	movw	r1, #53513	; 0xd109
   1a35c:	mov	r0, #0
   1a360:	mov	r2, #5
   1a364:	movt	r1, #1
   1a368:	bl	11860 <dcgettext@plt>
   1a36c:	mov	ip, r0
   1a370:	ldr	r3, [r7]
   1a374:	ldmib	r7, {r0, r1, r6}
   1a378:	ldr	r5, [r7, #16]
   1a37c:	ldr	r4, [r7, #20]
   1a380:	ldr	r2, [r7, #24]
   1a384:	ldr	r7, [r7, #28]
   1a388:	stm	sp, {r0, r1, r6}
   1a38c:	str	r5, [sp, #12]
   1a390:	str	r4, [sp, #16]
   1a394:	str	r2, [sp, #20]
   1a398:	str	r7, [sp, #24]
   1a39c:	mov	r0, r8
   1a3a0:	mov	r1, #1
   1a3a4:	mov	r2, ip
   1a3a8:	bl	11a4c <__fprintf_chk@plt>
   1a3ac:	sub	sp, fp, #24
   1a3b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a3b4:	push	{r4, sl, fp, lr}
   1a3b8:	add	fp, sp, #8
   1a3bc:	sub	sp, sp, #8
   1a3c0:	ldr	ip, [fp, #8]
   1a3c4:	mov	lr, #0
   1a3c8:	ldr	r4, [ip, lr, lsl #2]
   1a3cc:	add	lr, lr, #1
   1a3d0:	cmp	r4, #0
   1a3d4:	bne	1a3c8 <lchmod@@Base+0x2e10>
   1a3d8:	sub	r4, lr, #1
   1a3dc:	str	ip, [sp]
   1a3e0:	str	r4, [sp, #4]
   1a3e4:	bl	1a078 <lchmod@@Base+0x2ac0>
   1a3e8:	sub	sp, fp, #8
   1a3ec:	pop	{r4, sl, fp, pc}
   1a3f0:	push	{fp, lr}
   1a3f4:	mov	fp, sp
   1a3f8:	sub	sp, sp, #48	; 0x30
   1a3fc:	ldr	ip, [fp, #8]
   1a400:	ldr	lr, [ip]
   1a404:	cmp	lr, #0
   1a408:	str	lr, [sp, #8]
   1a40c:	beq	1a4a8 <lchmod@@Base+0x2ef0>
   1a410:	ldr	lr, [ip, #4]
   1a414:	cmp	lr, #0
   1a418:	str	lr, [sp, #12]
   1a41c:	beq	1a4b0 <lchmod@@Base+0x2ef8>
   1a420:	ldr	lr, [ip, #8]
   1a424:	cmp	lr, #0
   1a428:	str	lr, [sp, #16]
   1a42c:	beq	1a4b8 <lchmod@@Base+0x2f00>
   1a430:	ldr	lr, [ip, #12]
   1a434:	cmp	lr, #0
   1a438:	str	lr, [sp, #20]
   1a43c:	beq	1a4c0 <lchmod@@Base+0x2f08>
   1a440:	ldr	lr, [ip, #16]
   1a444:	cmp	lr, #0
   1a448:	str	lr, [sp, #24]
   1a44c:	beq	1a4c8 <lchmod@@Base+0x2f10>
   1a450:	ldr	lr, [ip, #20]
   1a454:	cmp	lr, #0
   1a458:	str	lr, [sp, #28]
   1a45c:	beq	1a4d0 <lchmod@@Base+0x2f18>
   1a460:	ldr	lr, [ip, #24]
   1a464:	cmp	lr, #0
   1a468:	str	lr, [sp, #32]
   1a46c:	beq	1a4d8 <lchmod@@Base+0x2f20>
   1a470:	ldr	lr, [ip, #28]
   1a474:	cmp	lr, #0
   1a478:	str	lr, [sp, #36]	; 0x24
   1a47c:	beq	1a4e0 <lchmod@@Base+0x2f28>
   1a480:	ldr	lr, [ip, #32]
   1a484:	cmp	lr, #0
   1a488:	str	lr, [sp, #40]	; 0x28
   1a48c:	beq	1a4e8 <lchmod@@Base+0x2f30>
   1a490:	ldr	lr, [ip, #36]	; 0x24
   1a494:	mov	ip, #10
   1a498:	cmp	lr, #0
   1a49c:	str	lr, [sp, #44]	; 0x2c
   1a4a0:	movweq	ip, #9
   1a4a4:	b	1a4ec <lchmod@@Base+0x2f34>
   1a4a8:	mov	ip, #0
   1a4ac:	b	1a4ec <lchmod@@Base+0x2f34>
   1a4b0:	mov	ip, #1
   1a4b4:	b	1a4ec <lchmod@@Base+0x2f34>
   1a4b8:	mov	ip, #2
   1a4bc:	b	1a4ec <lchmod@@Base+0x2f34>
   1a4c0:	mov	ip, #3
   1a4c4:	b	1a4ec <lchmod@@Base+0x2f34>
   1a4c8:	mov	ip, #4
   1a4cc:	b	1a4ec <lchmod@@Base+0x2f34>
   1a4d0:	mov	ip, #5
   1a4d4:	b	1a4ec <lchmod@@Base+0x2f34>
   1a4d8:	mov	ip, #6
   1a4dc:	b	1a4ec <lchmod@@Base+0x2f34>
   1a4e0:	mov	ip, #7
   1a4e4:	b	1a4ec <lchmod@@Base+0x2f34>
   1a4e8:	mov	ip, #8
   1a4ec:	add	lr, sp, #8
   1a4f0:	str	ip, [sp, #4]
   1a4f4:	str	lr, [sp]
   1a4f8:	bl	1a078 <lchmod@@Base+0x2ac0>
   1a4fc:	mov	sp, fp
   1a500:	pop	{fp, pc}
   1a504:	push	{fp, lr}
   1a508:	mov	fp, sp
   1a50c:	sub	sp, sp, #56	; 0x38
   1a510:	add	ip, fp, #8
   1a514:	str	ip, [sp, #12]
   1a518:	ldr	lr, [fp, #8]
   1a51c:	cmp	lr, #0
   1a520:	str	lr, [sp, #16]
   1a524:	beq	1a5c0 <lchmod@@Base+0x3008>
   1a528:	ldr	lr, [ip, #4]
   1a52c:	cmp	lr, #0
   1a530:	str	lr, [sp, #20]
   1a534:	beq	1a5c8 <lchmod@@Base+0x3010>
   1a538:	ldr	lr, [ip, #8]
   1a53c:	cmp	lr, #0
   1a540:	str	lr, [sp, #24]
   1a544:	beq	1a5d0 <lchmod@@Base+0x3018>
   1a548:	ldr	lr, [ip, #12]
   1a54c:	cmp	lr, #0
   1a550:	str	lr, [sp, #28]
   1a554:	beq	1a5d8 <lchmod@@Base+0x3020>
   1a558:	ldr	lr, [ip, #16]
   1a55c:	cmp	lr, #0
   1a560:	str	lr, [sp, #32]
   1a564:	beq	1a5e0 <lchmod@@Base+0x3028>
   1a568:	ldr	lr, [ip, #20]
   1a56c:	cmp	lr, #0
   1a570:	str	lr, [sp, #36]	; 0x24
   1a574:	beq	1a5e8 <lchmod@@Base+0x3030>
   1a578:	ldr	lr, [ip, #24]
   1a57c:	cmp	lr, #0
   1a580:	str	lr, [sp, #40]	; 0x28
   1a584:	beq	1a5f0 <lchmod@@Base+0x3038>
   1a588:	ldr	lr, [ip, #28]
   1a58c:	cmp	lr, #0
   1a590:	str	lr, [sp, #44]	; 0x2c
   1a594:	beq	1a5f8 <lchmod@@Base+0x3040>
   1a598:	ldr	lr, [ip, #32]
   1a59c:	cmp	lr, #0
   1a5a0:	str	lr, [sp, #48]	; 0x30
   1a5a4:	beq	1a600 <lchmod@@Base+0x3048>
   1a5a8:	ldr	lr, [ip, #36]	; 0x24
   1a5ac:	mov	ip, #10
   1a5b0:	cmp	lr, #0
   1a5b4:	str	lr, [sp, #52]	; 0x34
   1a5b8:	movweq	ip, #9
   1a5bc:	b	1a604 <lchmod@@Base+0x304c>
   1a5c0:	mov	ip, #0
   1a5c4:	b	1a604 <lchmod@@Base+0x304c>
   1a5c8:	mov	ip, #1
   1a5cc:	b	1a604 <lchmod@@Base+0x304c>
   1a5d0:	mov	ip, #2
   1a5d4:	b	1a604 <lchmod@@Base+0x304c>
   1a5d8:	mov	ip, #3
   1a5dc:	b	1a604 <lchmod@@Base+0x304c>
   1a5e0:	mov	ip, #4
   1a5e4:	b	1a604 <lchmod@@Base+0x304c>
   1a5e8:	mov	ip, #5
   1a5ec:	b	1a604 <lchmod@@Base+0x304c>
   1a5f0:	mov	ip, #6
   1a5f4:	b	1a604 <lchmod@@Base+0x304c>
   1a5f8:	mov	ip, #7
   1a5fc:	b	1a604 <lchmod@@Base+0x304c>
   1a600:	mov	ip, #8
   1a604:	add	lr, sp, #16
   1a608:	str	ip, [sp, #4]
   1a60c:	str	lr, [sp]
   1a610:	bl	1a078 <lchmod@@Base+0x2ac0>
   1a614:	mov	sp, fp
   1a618:	pop	{fp, pc}
   1a61c:	push	{fp, lr}
   1a620:	mov	fp, sp
   1a624:	movw	r0, #57828	; 0xe1e4
   1a628:	movt	r0, #2
   1a62c:	ldr	r1, [r0]
   1a630:	movw	r0, #52410	; 0xccba
   1a634:	movt	r0, #1
   1a638:	bl	117ac <fputs_unlocked@plt>
   1a63c:	movw	r1, #53673	; 0xd1a9
   1a640:	mov	r0, #0
   1a644:	mov	r2, #5
   1a648:	movt	r1, #1
   1a64c:	bl	11860 <dcgettext@plt>
   1a650:	movw	r2, #53693	; 0xd1bd
   1a654:	mov	r1, r0
   1a658:	mov	r0, #1
   1a65c:	movt	r2, #1
   1a660:	bl	11a34 <__printf_chk@plt>
   1a664:	movw	r1, #53715	; 0xd1d3
   1a668:	mov	r0, #0
   1a66c:	mov	r2, #5
   1a670:	movt	r1, #1
   1a674:	bl	11860 <dcgettext@plt>
   1a678:	movw	r2, #51592	; 0xc988
   1a67c:	movw	r3, #52219	; 0xcbfb
   1a680:	mov	r1, r0
   1a684:	mov	r0, #1
   1a688:	movt	r2, #1
   1a68c:	movt	r3, #1
   1a690:	bl	11a34 <__printf_chk@plt>
   1a694:	movw	r1, #53735	; 0xd1e7
   1a698:	mov	r0, #0
   1a69c:	mov	r2, #5
   1a6a0:	movt	r1, #1
   1a6a4:	bl	11860 <dcgettext@plt>
   1a6a8:	movw	r2, #53774	; 0xd20e
   1a6ac:	mov	r1, r0
   1a6b0:	mov	r0, #1
   1a6b4:	movt	r2, #1
   1a6b8:	pop	{fp, lr}
   1a6bc:	b	11a34 <__printf_chk@plt>
   1a6c0:	push	{r4, r5, r6, sl, fp, lr}
   1a6c4:	add	fp, sp, #16
   1a6c8:	mov	r4, r2
   1a6cc:	mov	r5, r1
   1a6d0:	mov	r6, r0
   1a6d4:	bl	1c168 <lchmod@@Base+0x4bb0>
   1a6d8:	cmp	r0, #0
   1a6dc:	popne	{r4, r5, r6, sl, fp, pc}
   1a6e0:	cmp	r6, #0
   1a6e4:	beq	1a6f8 <lchmod@@Base+0x3140>
   1a6e8:	cmp	r5, #0
   1a6ec:	cmpne	r4, #0
   1a6f0:	bne	1a6f8 <lchmod@@Base+0x3140>
   1a6f4:	pop	{r4, r5, r6, sl, fp, pc}
   1a6f8:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a6fc:	push	{r4, r5, r6, sl, fp, lr}
   1a700:	add	fp, sp, #16
   1a704:	mov	r4, r2
   1a708:	mov	r5, r1
   1a70c:	mov	r6, r0
   1a710:	bl	1c168 <lchmod@@Base+0x4bb0>
   1a714:	cmp	r0, #0
   1a718:	popne	{r4, r5, r6, sl, fp, pc}
   1a71c:	cmp	r6, #0
   1a720:	beq	1a734 <lchmod@@Base+0x317c>
   1a724:	cmp	r5, #0
   1a728:	cmpne	r4, #0
   1a72c:	bne	1a734 <lchmod@@Base+0x317c>
   1a730:	pop	{r4, r5, r6, sl, fp, pc}
   1a734:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a738:	push	{fp, lr}
   1a73c:	mov	fp, sp
   1a740:	bl	1ba3c <lchmod@@Base+0x4484>
   1a744:	cmp	r0, #0
   1a748:	popne	{fp, pc}
   1a74c:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a750:	push	{fp, lr}
   1a754:	mov	fp, sp
   1a758:	bl	1ba3c <lchmod@@Base+0x4484>
   1a75c:	cmp	r0, #0
   1a760:	popne	{fp, pc}
   1a764:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a768:	push	{fp, lr}
   1a76c:	mov	fp, sp
   1a770:	bl	1ba3c <lchmod@@Base+0x4484>
   1a774:	cmp	r0, #0
   1a778:	popne	{fp, pc}
   1a77c:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a780:	push	{r4, r5, fp, lr}
   1a784:	add	fp, sp, #8
   1a788:	mov	r4, r1
   1a78c:	mov	r5, r0
   1a790:	bl	1ba6c <lchmod@@Base+0x44b4>
   1a794:	cmp	r0, #0
   1a798:	popne	{r4, r5, fp, pc}
   1a79c:	cmp	r5, #0
   1a7a0:	beq	1a7b0 <lchmod@@Base+0x31f8>
   1a7a4:	cmp	r4, #0
   1a7a8:	bne	1a7b0 <lchmod@@Base+0x31f8>
   1a7ac:	pop	{r4, r5, fp, pc}
   1a7b0:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a7b4:	push	{fp, lr}
   1a7b8:	mov	fp, sp
   1a7bc:	cmp	r1, #0
   1a7c0:	orreq	r1, r1, #1
   1a7c4:	bl	1ba6c <lchmod@@Base+0x44b4>
   1a7c8:	cmp	r0, #0
   1a7cc:	popne	{fp, pc}
   1a7d0:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a7d4:	push	{fp, lr}
   1a7d8:	mov	fp, sp
   1a7dc:	clz	r3, r2
   1a7e0:	lsr	ip, r3, #5
   1a7e4:	clz	r3, r1
   1a7e8:	lsr	r3, r3, #5
   1a7ec:	orrs	r3, r3, ip
   1a7f0:	movwne	r1, #1
   1a7f4:	movwne	r2, #1
   1a7f8:	bl	1c168 <lchmod@@Base+0x4bb0>
   1a7fc:	cmp	r0, #0
   1a800:	popne	{fp, pc}
   1a804:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a808:	push	{fp, lr}
   1a80c:	mov	fp, sp
   1a810:	mov	r2, r1
   1a814:	mov	r1, r0
   1a818:	mov	r0, #0
   1a81c:	bl	1c168 <lchmod@@Base+0x4bb0>
   1a820:	cmp	r0, #0
   1a824:	popne	{fp, pc}
   1a828:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a82c:	push	{fp, lr}
   1a830:	mov	fp, sp
   1a834:	mov	r2, r1
   1a838:	mov	r1, r0
   1a83c:	clz	r0, r2
   1a840:	clz	r3, r1
   1a844:	lsr	r0, r0, #5
   1a848:	lsr	r3, r3, #5
   1a84c:	orrs	r0, r3, r0
   1a850:	mov	r0, #0
   1a854:	movwne	r1, #1
   1a858:	movwne	r2, #1
   1a85c:	bl	1c168 <lchmod@@Base+0x4bb0>
   1a860:	cmp	r0, #0
   1a864:	popne	{fp, pc}
   1a868:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a86c:	push	{r4, r5, r6, sl, fp, lr}
   1a870:	add	fp, sp, #16
   1a874:	ldr	r5, [r1]
   1a878:	mov	r4, r1
   1a87c:	mov	r6, r0
   1a880:	cmp	r0, #0
   1a884:	beq	1a89c <lchmod@@Base+0x32e4>
   1a888:	mov	r0, #1
   1a88c:	add	r0, r0, r5, lsr #1
   1a890:	adds	r5, r5, r0
   1a894:	bcc	1a8a4 <lchmod@@Base+0x32ec>
   1a898:	b	1a8e0 <lchmod@@Base+0x3328>
   1a89c:	cmp	r5, #0
   1a8a0:	movweq	r5, #64	; 0x40
   1a8a4:	mov	r0, r6
   1a8a8:	mov	r1, r5
   1a8ac:	mov	r2, #1
   1a8b0:	bl	1c168 <lchmod@@Base+0x4bb0>
   1a8b4:	cmp	r5, #0
   1a8b8:	mov	r1, r5
   1a8bc:	movwne	r1, #1
   1a8c0:	cmp	r0, #0
   1a8c4:	bne	1a8d8 <lchmod@@Base+0x3320>
   1a8c8:	clz	r2, r6
   1a8cc:	lsr	r2, r2, #5
   1a8d0:	orrs	r1, r2, r1
   1a8d4:	bne	1a8e0 <lchmod@@Base+0x3328>
   1a8d8:	str	r5, [r4]
   1a8dc:	pop	{r4, r5, r6, sl, fp, pc}
   1a8e0:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a8e4:	push	{r4, r5, r6, r7, fp, lr}
   1a8e8:	add	fp, sp, #16
   1a8ec:	ldr	r5, [r1]
   1a8f0:	mov	r6, r2
   1a8f4:	mov	r4, r1
   1a8f8:	mov	r7, r0
   1a8fc:	cmp	r0, #0
   1a900:	beq	1a918 <lchmod@@Base+0x3360>
   1a904:	mov	r0, #1
   1a908:	add	r0, r0, r5, lsr #1
   1a90c:	adds	r5, r5, r0
   1a910:	bcc	1a930 <lchmod@@Base+0x3378>
   1a914:	b	1a964 <lchmod@@Base+0x33ac>
   1a918:	cmp	r5, #0
   1a91c:	bne	1a930 <lchmod@@Base+0x3378>
   1a920:	mov	r0, #64	; 0x40
   1a924:	cmp	r6, #64	; 0x40
   1a928:	udiv	r5, r0, r6
   1a92c:	addhi	r5, r5, #1
   1a930:	mov	r0, r7
   1a934:	mov	r1, r5
   1a938:	mov	r2, r6
   1a93c:	bl	1c168 <lchmod@@Base+0x4bb0>
   1a940:	cmp	r0, #0
   1a944:	bne	1a95c <lchmod@@Base+0x33a4>
   1a948:	cmp	r7, #0
   1a94c:	beq	1a964 <lchmod@@Base+0x33ac>
   1a950:	cmp	r6, #0
   1a954:	cmpne	r5, #0
   1a958:	bne	1a964 <lchmod@@Base+0x33ac>
   1a95c:	str	r5, [r4]
   1a960:	pop	{r4, r5, r6, r7, fp, pc}
   1a964:	bl	1ac74 <lchmod@@Base+0x36bc>
   1a968:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a96c:	add	fp, sp, #24
   1a970:	mov	r8, r1
   1a974:	ldr	r1, [r1]
   1a978:	mov	r5, r0
   1a97c:	add	r0, r1, r1, asr #1
   1a980:	cmp	r0, r1
   1a984:	mvnvs	r0, #-2147483648	; 0x80000000
   1a988:	cmp	r0, r3
   1a98c:	mov	r7, r0
   1a990:	movgt	r7, r3
   1a994:	cmn	r3, #1
   1a998:	movle	r7, r0
   1a99c:	ldr	r0, [fp, #8]
   1a9a0:	cmn	r0, #1
   1a9a4:	ble	1a9cc <lchmod@@Base+0x3414>
   1a9a8:	cmp	r0, #0
   1a9ac:	beq	1aa20 <lchmod@@Base+0x3468>
   1a9b0:	cmn	r7, #1
   1a9b4:	ble	1a9f4 <lchmod@@Base+0x343c>
   1a9b8:	mvn	r4, #-2147483648	; 0x80000000
   1a9bc:	udiv	r6, r4, r0
   1a9c0:	cmp	r6, r7
   1a9c4:	bge	1aa20 <lchmod@@Base+0x3468>
   1a9c8:	b	1aa30 <lchmod@@Base+0x3478>
   1a9cc:	cmn	r7, #1
   1a9d0:	ble	1aa10 <lchmod@@Base+0x3458>
   1a9d4:	cmn	r0, #1
   1a9d8:	beq	1aa20 <lchmod@@Base+0x3468>
   1a9dc:	mov	r6, #-2147483648	; 0x80000000
   1a9e0:	mvn	r4, #-2147483648	; 0x80000000
   1a9e4:	sdiv	r6, r6, r0
   1a9e8:	cmp	r6, r7
   1a9ec:	bge	1aa20 <lchmod@@Base+0x3468>
   1a9f0:	b	1aa30 <lchmod@@Base+0x3478>
   1a9f4:	beq	1aa20 <lchmod@@Base+0x3468>
   1a9f8:	mov	r6, #-2147483648	; 0x80000000
   1a9fc:	mvn	r4, #-2147483648	; 0x80000000
   1aa00:	sdiv	r6, r6, r7
   1aa04:	cmp	r6, r0
   1aa08:	bge	1aa20 <lchmod@@Base+0x3468>
   1aa0c:	b	1aa30 <lchmod@@Base+0x3478>
   1aa10:	mvn	r4, #-2147483648	; 0x80000000
   1aa14:	sdiv	r6, r4, r0
   1aa18:	cmp	r7, r6
   1aa1c:	blt	1aa30 <lchmod@@Base+0x3478>
   1aa20:	mul	r6, r7, r0
   1aa24:	mov	r4, #64	; 0x40
   1aa28:	cmp	r6, #63	; 0x3f
   1aa2c:	bgt	1aa38 <lchmod@@Base+0x3480>
   1aa30:	sdiv	r7, r4, r0
   1aa34:	mul	r6, r7, r0
   1aa38:	cmp	r5, #0
   1aa3c:	moveq	r4, #0
   1aa40:	streq	r4, [r8]
   1aa44:	sub	r4, r7, r1
   1aa48:	cmp	r4, r2
   1aa4c:	bge	1aaf8 <lchmod@@Base+0x3540>
   1aa50:	add	r7, r1, r2
   1aa54:	mov	r6, #0
   1aa58:	mov	r2, #0
   1aa5c:	cmp	r7, r3
   1aa60:	movwgt	r6, #1
   1aa64:	cmn	r3, #1
   1aa68:	movwgt	r2, #1
   1aa6c:	cmp	r7, r1
   1aa70:	bvs	1ab2c <lchmod@@Base+0x3574>
   1aa74:	ands	r1, r2, r6
   1aa78:	bne	1ab2c <lchmod@@Base+0x3574>
   1aa7c:	cmn	r0, #1
   1aa80:	ble	1aaa8 <lchmod@@Base+0x34f0>
   1aa84:	cmp	r0, #0
   1aa88:	beq	1aaf4 <lchmod@@Base+0x353c>
   1aa8c:	cmn	r7, #1
   1aa90:	ble	1aacc <lchmod@@Base+0x3514>
   1aa94:	mvn	r1, #-2147483648	; 0x80000000
   1aa98:	udiv	r1, r1, r0
   1aa9c:	cmp	r1, r7
   1aaa0:	bge	1aaf4 <lchmod@@Base+0x353c>
   1aaa4:	b	1ab2c <lchmod@@Base+0x3574>
   1aaa8:	cmn	r7, #1
   1aaac:	ble	1aae4 <lchmod@@Base+0x352c>
   1aab0:	cmn	r0, #1
   1aab4:	beq	1aaf4 <lchmod@@Base+0x353c>
   1aab8:	mov	r1, #-2147483648	; 0x80000000
   1aabc:	sdiv	r1, r1, r0
   1aac0:	cmp	r1, r7
   1aac4:	bge	1aaf4 <lchmod@@Base+0x353c>
   1aac8:	b	1ab2c <lchmod@@Base+0x3574>
   1aacc:	beq	1aaf4 <lchmod@@Base+0x353c>
   1aad0:	mov	r1, #-2147483648	; 0x80000000
   1aad4:	sdiv	r1, r1, r7
   1aad8:	cmp	r1, r0
   1aadc:	bge	1aaf4 <lchmod@@Base+0x353c>
   1aae0:	b	1ab2c <lchmod@@Base+0x3574>
   1aae4:	mvn	r1, #-2147483648	; 0x80000000
   1aae8:	sdiv	r1, r1, r0
   1aaec:	cmp	r7, r1
   1aaf0:	blt	1ab2c <lchmod@@Base+0x3574>
   1aaf4:	mul	r6, r7, r0
   1aaf8:	mov	r0, r5
   1aafc:	mov	r1, r6
   1ab00:	bl	1ba6c <lchmod@@Base+0x44b4>
   1ab04:	cmp	r6, #0
   1ab08:	movwne	r6, #1
   1ab0c:	cmp	r0, #0
   1ab10:	bne	1ab24 <lchmod@@Base+0x356c>
   1ab14:	clz	r1, r5
   1ab18:	lsr	r1, r1, #5
   1ab1c:	orrs	r1, r1, r6
   1ab20:	bne	1ab2c <lchmod@@Base+0x3574>
   1ab24:	str	r7, [r8]
   1ab28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ab2c:	bl	1ac74 <lchmod@@Base+0x36bc>
   1ab30:	push	{fp, lr}
   1ab34:	mov	fp, sp
   1ab38:	mov	r1, #1
   1ab3c:	bl	1b9e8 <lchmod@@Base+0x4430>
   1ab40:	cmp	r0, #0
   1ab44:	popne	{fp, pc}
   1ab48:	bl	1ac74 <lchmod@@Base+0x36bc>
   1ab4c:	push	{fp, lr}
   1ab50:	mov	fp, sp
   1ab54:	bl	1b9e8 <lchmod@@Base+0x4430>
   1ab58:	cmp	r0, #0
   1ab5c:	popne	{fp, pc}
   1ab60:	bl	1ac74 <lchmod@@Base+0x36bc>
   1ab64:	push	{fp, lr}
   1ab68:	mov	fp, sp
   1ab6c:	mov	r1, #1
   1ab70:	bl	1b9e8 <lchmod@@Base+0x4430>
   1ab74:	cmp	r0, #0
   1ab78:	popne	{fp, pc}
   1ab7c:	bl	1ac74 <lchmod@@Base+0x36bc>
   1ab80:	push	{fp, lr}
   1ab84:	mov	fp, sp
   1ab88:	bl	1b9e8 <lchmod@@Base+0x4430>
   1ab8c:	cmp	r0, #0
   1ab90:	popne	{fp, pc}
   1ab94:	bl	1ac74 <lchmod@@Base+0x36bc>
   1ab98:	push	{r4, r5, fp, lr}
   1ab9c:	add	fp, sp, #8
   1aba0:	mov	r5, r0
   1aba4:	mov	r0, r1
   1aba8:	mov	r4, r1
   1abac:	bl	1ba3c <lchmod@@Base+0x4484>
   1abb0:	cmp	r0, #0
   1abb4:	beq	1abc8 <lchmod@@Base+0x3610>
   1abb8:	mov	r1, r5
   1abbc:	mov	r2, r4
   1abc0:	pop	{r4, r5, fp, lr}
   1abc4:	b	11830 <memcpy@plt>
   1abc8:	bl	1ac74 <lchmod@@Base+0x36bc>
   1abcc:	push	{r4, r5, fp, lr}
   1abd0:	add	fp, sp, #8
   1abd4:	mov	r5, r0
   1abd8:	mov	r0, r1
   1abdc:	mov	r4, r1
   1abe0:	bl	1ba3c <lchmod@@Base+0x4484>
   1abe4:	cmp	r0, #0
   1abe8:	beq	1abfc <lchmod@@Base+0x3644>
   1abec:	mov	r1, r5
   1abf0:	mov	r2, r4
   1abf4:	pop	{r4, r5, fp, lr}
   1abf8:	b	11830 <memcpy@plt>
   1abfc:	bl	1ac74 <lchmod@@Base+0x36bc>
   1ac00:	push	{r4, r5, fp, lr}
   1ac04:	add	fp, sp, #8
   1ac08:	mov	r5, r0
   1ac0c:	add	r0, r1, #1
   1ac10:	mov	r4, r1
   1ac14:	bl	1ba3c <lchmod@@Base+0x4484>
   1ac18:	cmp	r0, #0
   1ac1c:	beq	1ac38 <lchmod@@Base+0x3680>
   1ac20:	mov	r1, #0
   1ac24:	mov	r2, r4
   1ac28:	strb	r1, [r0, r4]
   1ac2c:	mov	r1, r5
   1ac30:	pop	{r4, r5, fp, lr}
   1ac34:	b	11830 <memcpy@plt>
   1ac38:	bl	1ac74 <lchmod@@Base+0x36bc>
   1ac3c:	push	{r4, r5, fp, lr}
   1ac40:	add	fp, sp, #8
   1ac44:	mov	r4, r0
   1ac48:	bl	119c8 <strlen@plt>
   1ac4c:	add	r5, r0, #1
   1ac50:	mov	r0, r5
   1ac54:	bl	1ba3c <lchmod@@Base+0x4484>
   1ac58:	cmp	r0, #0
   1ac5c:	beq	1ac70 <lchmod@@Base+0x36b8>
   1ac60:	mov	r1, r4
   1ac64:	mov	r2, r5
   1ac68:	pop	{r4, r5, fp, lr}
   1ac6c:	b	11830 <memcpy@plt>
   1ac70:	bl	1ac74 <lchmod@@Base+0x36bc>
   1ac74:	push	{fp, lr}
   1ac78:	mov	fp, sp
   1ac7c:	movw	r0, #57740	; 0xe18c
   1ac80:	movw	r1, #53850	; 0xd25a
   1ac84:	mov	r2, #5
   1ac88:	movt	r0, #2
   1ac8c:	movt	r1, #1
   1ac90:	ldr	r4, [r0]
   1ac94:	mov	r0, #0
   1ac98:	bl	11860 <dcgettext@plt>
   1ac9c:	movw	r2, #52599	; 0xcd77
   1aca0:	mov	r3, r0
   1aca4:	mov	r0, r4
   1aca8:	mov	r1, #0
   1acac:	movt	r2, #1
   1acb0:	bl	11920 <error@plt>
   1acb4:	bl	11b60 <abort@plt>
   1acb8:	push	{fp, lr}
   1acbc:	mov	fp, sp
   1acc0:	orr	r1, r1, #512	; 0x200
   1acc4:	bl	137c8 <__assert_fail@plt+0x1c08>
   1acc8:	cmp	r0, #0
   1accc:	popne	{fp, pc}
   1acd0:	bl	11a04 <__errno_location@plt>
   1acd4:	ldr	r0, [r0]
   1acd8:	cmp	r0, #22
   1acdc:	bne	1ad00 <lchmod@@Base+0x3748>
   1ace0:	movw	r0, #53867	; 0xd26b
   1ace4:	movw	r1, #53883	; 0xd27b
   1ace8:	movw	r3, #53894	; 0xd286
   1acec:	mov	r2, #41	; 0x29
   1acf0:	movt	r0, #1
   1acf4:	movt	r1, #1
   1acf8:	movt	r3, #1
   1acfc:	bl	11bc0 <__assert_fail@plt>
   1ad00:	bl	1ac74 <lchmod@@Base+0x36bc>
   1ad04:	ldr	r0, [r0, #48]	; 0x30
   1ad08:	and	r0, r0, #17
   1ad0c:	cmp	r0, #16
   1ad10:	moveq	r0, #1
   1ad14:	bxeq	lr
   1ad18:	cmp	r0, #17
   1ad1c:	movne	r0, #0
   1ad20:	bxne	lr
   1ad24:	ldr	r0, [r1, #48]	; 0x30
   1ad28:	cmp	r0, #0
   1ad2c:	movwne	r0, #1
   1ad30:	bx	lr
   1ad34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad38:	add	fp, sp, #28
   1ad3c:	sub	sp, sp, #44	; 0x2c
   1ad40:	cmp	r2, #37	; 0x25
   1ad44:	bcs	1b9c8 <lchmod@@Base+0x4410>
   1ad48:	ldr	sl, [fp, #8]
   1ad4c:	mov	r6, r2
   1ad50:	mov	r7, r1
   1ad54:	mov	r4, r0
   1ad58:	str	r3, [sp, #36]	; 0x24
   1ad5c:	bl	11a04 <__errno_location@plt>
   1ad60:	mov	r5, r0
   1ad64:	mov	r0, #0
   1ad68:	str	r0, [r5]
   1ad6c:	bl	1198c <__ctype_b_loc@plt>
   1ad70:	ldr	r1, [r0]
   1ad74:	mov	r2, r4
   1ad78:	ldrb	r0, [r2], #1
   1ad7c:	add	r3, r1, r0, lsl #1
   1ad80:	ldrb	r3, [r3, #1]
   1ad84:	tst	r3, #32
   1ad88:	bne	1ad78 <lchmod@@Base+0x37c0>
   1ad8c:	cmp	r7, #0
   1ad90:	sub	r9, fp, #32
   1ad94:	mov	r8, #4
   1ad98:	movne	r9, r7
   1ad9c:	cmp	r0, #45	; 0x2d
   1ada0:	beq	1b160 <lchmod@@Base+0x3ba8>
   1ada4:	mov	r0, r4
   1ada8:	mov	r1, r9
   1adac:	mov	r2, r6
   1adb0:	mov	r3, #0
   1adb4:	bl	1183c <__strtoull_internal@plt>
   1adb8:	mov	r7, r1
   1adbc:	ldr	r1, [r9]
   1adc0:	cmp	r1, r4
   1adc4:	beq	1adfc <lchmod@@Base+0x3844>
   1adc8:	mov	r6, r0
   1adcc:	ldr	r0, [r5]
   1add0:	cmp	r0, #0
   1add4:	beq	1b118 <lchmod@@Base+0x3b60>
   1add8:	cmp	r0, #34	; 0x22
   1addc:	bne	1b160 <lchmod@@Base+0x3ba8>
   1ade0:	mov	r8, #1
   1ade4:	cmp	sl, #0
   1ade8:	beq	1b9b4 <lchmod@@Base+0x43fc>
   1adec:	ldrb	r4, [r1]
   1adf0:	cmp	r4, #0
   1adf4:	bne	1ae40 <lchmod@@Base+0x3888>
   1adf8:	b	1b9b4 <lchmod@@Base+0x43fc>
   1adfc:	cmp	sl, #0
   1ae00:	beq	1b160 <lchmod@@Base+0x3ba8>
   1ae04:	mov	r5, r1
   1ae08:	ldrb	r1, [r4]
   1ae0c:	cmp	r1, #0
   1ae10:	beq	1b160 <lchmod@@Base+0x3ba8>
   1ae14:	mov	r0, sl
   1ae18:	bl	119e0 <strchr@plt>
   1ae1c:	cmp	r0, #0
   1ae20:	beq	1b160 <lchmod@@Base+0x3ba8>
   1ae24:	mov	r1, r5
   1ae28:	mov	r8, #0
   1ae2c:	mov	r6, #1
   1ae30:	mov	r7, #0
   1ae34:	ldrb	r4, [r1]
   1ae38:	cmp	r4, #0
   1ae3c:	beq	1b9b4 <lchmod@@Base+0x43fc>
   1ae40:	str	r1, [sp, #32]
   1ae44:	mov	r0, sl
   1ae48:	mov	r1, r4
   1ae4c:	bl	119e0 <strchr@plt>
   1ae50:	cmp	r0, #0
   1ae54:	beq	1b154 <lchmod@@Base+0x3b9c>
   1ae58:	sub	r0, r4, #69	; 0x45
   1ae5c:	mov	r1, #1
   1ae60:	mov	r3, #0
   1ae64:	mov	r5, #1024	; 0x400
   1ae68:	cmp	r0, #47	; 0x2f
   1ae6c:	str	r1, [sp, #28]
   1ae70:	bhi	1af74 <lchmod@@Base+0x39bc>
   1ae74:	add	r1, pc, #0
   1ae78:	ldr	pc, [r1, r0, lsl #2]
   1ae7c:	andeq	sl, r1, ip, lsr pc
   1ae80:	andeq	sl, r1, r4, ror pc
   1ae84:	andeq	sl, r1, ip, lsr pc
   1ae88:	andeq	sl, r1, r4, ror pc
   1ae8c:	andeq	sl, r1, r4, ror pc
   1ae90:	andeq	sl, r1, r4, ror pc
   1ae94:	andeq	sl, r1, ip, lsr pc
   1ae98:	andeq	sl, r1, r4, ror pc
   1ae9c:	andeq	sl, r1, ip, lsr pc
   1aea0:	andeq	sl, r1, r4, ror pc
   1aea4:	andeq	sl, r1, r4, ror pc
   1aea8:	andeq	sl, r1, ip, lsr pc
   1aeac:	andeq	sl, r1, r4, ror pc
   1aeb0:	andeq	sl, r1, r4, ror pc
   1aeb4:	andeq	sl, r1, r4, ror pc
   1aeb8:	andeq	sl, r1, ip, lsr pc
   1aebc:	andeq	sl, r1, r4, ror pc
   1aec0:	andeq	sl, r1, r4, ror pc
   1aec4:	andeq	sl, r1, r4, ror pc
   1aec8:	andeq	sl, r1, r4, ror pc
   1aecc:	andeq	sl, r1, ip, lsr pc
   1aed0:	andeq	sl, r1, ip, lsr pc
   1aed4:	andeq	sl, r1, r4, ror pc
   1aed8:	andeq	sl, r1, r4, ror pc
   1aedc:	andeq	sl, r1, r4, ror pc
   1aee0:	andeq	sl, r1, r4, ror pc
   1aee4:	andeq	sl, r1, r4, ror pc
   1aee8:	andeq	sl, r1, r4, ror pc
   1aeec:	andeq	sl, r1, r4, ror pc
   1aef0:	andeq	sl, r1, r4, ror pc
   1aef4:	andeq	sl, r1, r4, ror pc
   1aef8:	andeq	sl, r1, r4, ror pc
   1aefc:	andeq	sl, r1, r4, ror pc
   1af00:	andeq	sl, r1, r4, ror pc
   1af04:	andeq	sl, r1, ip, lsr pc
   1af08:	andeq	sl, r1, r4, ror pc
   1af0c:	andeq	sl, r1, r4, ror pc
   1af10:	andeq	sl, r1, r4, ror pc
   1af14:	andeq	sl, r1, ip, lsr pc
   1af18:	andeq	sl, r1, r4, ror pc
   1af1c:	andeq	sl, r1, ip, lsr pc
   1af20:	andeq	sl, r1, r4, ror pc
   1af24:	andeq	sl, r1, r4, ror pc
   1af28:	andeq	sl, r1, r4, ror pc
   1af2c:	andeq	sl, r1, r4, ror pc
   1af30:	andeq	sl, r1, r4, ror pc
   1af34:	andeq	sl, r1, r4, ror pc
   1af38:	andeq	sl, r1, ip, lsr pc
   1af3c:	mov	r0, sl
   1af40:	mov	r1, #48	; 0x30
   1af44:	bl	119e0 <strchr@plt>
   1af48:	cmp	r0, #0
   1af4c:	beq	1af70 <lchmod@@Base+0x39b8>
   1af50:	ldr	r1, [sp, #32]
   1af54:	ldrb	r0, [r1, #1]
   1af58:	cmp	r0, #66	; 0x42
   1af5c:	cmpne	r0, #68	; 0x44
   1af60:	bne	1b128 <lchmod@@Base+0x3b70>
   1af64:	mov	r5, #1000	; 0x3e8
   1af68:	mov	r0, #2
   1af6c:	str	r0, [sp, #28]
   1af70:	mov	r3, #0
   1af74:	sub	r0, r4, #66	; 0x42
   1af78:	cmp	r0, #53	; 0x35
   1af7c:	bhi	1b154 <lchmod@@Base+0x3b9c>
   1af80:	add	r1, pc, #0
   1af84:	ldr	pc, [r1, r0, lsl #2]
   1af88:	andeq	fp, r1, r4, asr #9
   1af8c:	andeq	fp, r1, r4, asr r1
   1af90:	andeq	fp, r1, r4, asr r1
   1af94:	andeq	fp, r1, ip, ror #9
   1af98:	andeq	fp, r1, r4, asr r1
   1af9c:	andeq	fp, r1, r0, rrx
   1afa0:	andeq	fp, r1, r4, asr r1
   1afa4:	andeq	fp, r1, r4, asr r1
   1afa8:	andeq	fp, r1, r4, asr r1
   1afac:	andeq	fp, r1, ip, ror #2
   1afb0:	andeq	fp, r1, r4, asr r1
   1afb4:			; <UNDEFINED> instruction: 0x0001b1b4
   1afb8:	andeq	fp, r1, r4, asr r1
   1afbc:	andeq	fp, r1, r4, asr r1
   1afc0:	andeq	fp, r1, r0, asr #12
   1afc4:	andeq	fp, r1, r4, asr r1
   1afc8:	andeq	fp, r1, r4, asr r1
   1afcc:	andeq	fp, r1, r4, asr r1
   1afd0:	andeq	fp, r1, r0, asr #4
   1afd4:	andeq	fp, r1, r4, asr r1
   1afd8:	andeq	fp, r1, r4, asr r1
   1afdc:	andeq	fp, r1, r4, asr r1
   1afe0:	andeq	fp, r1, r4, asr r1
   1afe4:	andeq	fp, r1, r8, ror #14
   1afe8:	andeq	fp, r1, r8, lsr #6
   1afec:	andeq	fp, r1, r4, asr r1
   1aff0:	andeq	fp, r1, r4, asr r1
   1aff4:	andeq	fp, r1, r4, asr r1
   1aff8:	andeq	fp, r1, r4, asr r1
   1affc:	andeq	fp, r1, r4, asr r1
   1b000:	andeq	fp, r1, r4, asr r1
   1b004:	andeq	fp, r1, r4, asr r1
   1b008:	andeq	fp, r1, ip, lsr r9
   1b00c:	muleq	r1, r4, r9
   1b010:	andeq	fp, r1, r4, asr r1
   1b014:	andeq	fp, r1, r4, asr r1
   1b018:	andeq	fp, r1, r4, asr r1
   1b01c:	andeq	fp, r1, r0, rrx
   1b020:	andeq	fp, r1, r4, asr r1
   1b024:	andeq	fp, r1, r4, asr r1
   1b028:	andeq	fp, r1, r4, asr r1
   1b02c:	andeq	fp, r1, ip, ror #2
   1b030:	andeq	fp, r1, r4, asr r1
   1b034:			; <UNDEFINED> instruction: 0x0001b1b4
   1b038:	andeq	fp, r1, r4, asr r1
   1b03c:	andeq	fp, r1, r4, asr r1
   1b040:	andeq	fp, r1, r4, asr r1
   1b044:	andeq	fp, r1, r4, asr r1
   1b048:	andeq	fp, r1, r4, asr r1
   1b04c:	andeq	fp, r1, r4, asr r1
   1b050:	andeq	fp, r1, r0, asr #4
   1b054:	andeq	fp, r1, r4, asr r1
   1b058:	andeq	fp, r1, r4, asr r1
   1b05c:	andeq	fp, r1, r0, ror r9
   1b060:	mvn	r0, #0
   1b064:	mvn	r1, #0
   1b068:	mov	r2, r5
   1b06c:	mov	sl, r3
   1b070:	bl	1c2bc <lchmod@@Base+0x4d04>
   1b074:	subs	r3, r0, r6
   1b078:	umull	r4, r2, r6, r5
   1b07c:	mov	lr, #0
   1b080:	str	r1, [sp, #20]
   1b084:	sbcs	r3, r1, r7
   1b088:	movwcc	lr, #1
   1b08c:	mla	ip, r6, sl, r2
   1b090:	mov	r2, r1
   1b094:	mov	r2, #0
   1b098:	cmp	lr, #0
   1b09c:	mla	r7, r7, r5, ip
   1b0a0:	mvnne	r4, #0
   1b0a4:	mvnne	r7, #0
   1b0a8:	subs	r6, r0, r4
   1b0ac:	sbcs	r6, r1, r7
   1b0b0:	umull	r3, r6, r4, r5
   1b0b4:	movwcc	r2, #1
   1b0b8:	cmp	r2, #0
   1b0bc:	mvnne	r3, #0
   1b0c0:	cmp	r2, #0
   1b0c4:	str	r6, [sp, #16]
   1b0c8:	umull	r6, ip, r3, r5
   1b0cc:	mla	r1, r3, sl, ip
   1b0d0:	ldr	ip, [sp, #16]
   1b0d4:	str	r1, [sp, #12]
   1b0d8:	mla	r4, r4, sl, ip
   1b0dc:	mla	r4, r7, r5, r4
   1b0e0:	mvnne	r4, #0
   1b0e4:	subs	r0, r0, r3
   1b0e8:	ldr	r0, [sp, #20]
   1b0ec:	ldr	r7, [sp, #12]
   1b0f0:	sbcs	r0, r0, r4
   1b0f4:	mov	r0, #0
   1b0f8:	mla	r7, r4, r5, r7
   1b0fc:	movwcc	r0, #1
   1b100:	cmp	r0, #0
   1b104:	mov	r1, r0
   1b108:	orr	r0, lr, r2
   1b10c:	mvnne	r7, #0
   1b110:	mvnne	r6, #0
   1b114:	b	1b760 <lchmod@@Base+0x41a8>
   1b118:	mov	r8, r0
   1b11c:	cmp	sl, #0
   1b120:	bne	1adec <lchmod@@Base+0x3834>
   1b124:	b	1b9b4 <lchmod@@Base+0x43fc>
   1b128:	cmp	r0, #105	; 0x69
   1b12c:	mov	r3, #0
   1b130:	bne	1af74 <lchmod@@Base+0x39bc>
   1b134:	ldrb	r0, [r1, #2]
   1b138:	mov	r1, #1
   1b13c:	cmp	r0, #66	; 0x42
   1b140:	movweq	r1, #3
   1b144:	str	r1, [sp, #28]
   1b148:	sub	r0, r4, #66	; 0x42
   1b14c:	cmp	r0, #53	; 0x35
   1b150:	bls	1af80 <lchmod@@Base+0x39c8>
   1b154:	ldr	r0, [sp, #36]	; 0x24
   1b158:	orr	r8, r8, #2
   1b15c:	strd	r6, [r0]
   1b160:	mov	r0, r8
   1b164:	sub	sp, fp, #28
   1b168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b16c:	mvn	r0, #0
   1b170:	mvn	r1, #0
   1b174:	mov	r2, r5
   1b178:	mov	r4, r3
   1b17c:	bl	1c2bc <lchmod@@Base+0x4d04>
   1b180:	subs	r0, r0, r6
   1b184:	mov	r2, #0
   1b188:	sbcs	r0, r1, r7
   1b18c:	umull	r0, r1, r6, r5
   1b190:	movwcc	r2, #1
   1b194:	cmp	r2, #0
   1b198:	mla	r1, r6, r4, r1
   1b19c:	mov	r3, r2
   1b1a0:	mvnne	r0, #0
   1b1a4:	mla	r7, r7, r5, r1
   1b1a8:	mvnne	r7, #0
   1b1ac:	mov	r6, r0
   1b1b0:	b	1b994 <lchmod@@Base+0x43dc>
   1b1b4:	mvn	r0, #0
   1b1b8:	mvn	r1, #0
   1b1bc:	mov	r2, r5
   1b1c0:	str	r3, [sp, #24]
   1b1c4:	bl	1c2bc <lchmod@@Base+0x4d04>
   1b1c8:	subs	r3, r0, r6
   1b1cc:	mov	ip, r0
   1b1d0:	umull	r4, r0, r6, r5
   1b1d4:	mov	sl, #0
   1b1d8:	sbcs	r3, r1, r7
   1b1dc:	mov	r3, #0
   1b1e0:	movwcc	r3, #1
   1b1e4:	cmp	r3, #0
   1b1e8:	str	r0, [sp, #20]
   1b1ec:	ldr	r0, [sp, #24]
   1b1f0:	mvnne	r4, #0
   1b1f4:	cmp	r3, #0
   1b1f8:	umull	lr, r2, r4, r5
   1b1fc:	mla	r2, r4, r0, r2
   1b200:	str	r2, [sp, #16]
   1b204:	ldr	r2, [sp, #20]
   1b208:	mla	r6, r6, r0, r2
   1b20c:	ldr	r0, [sp, #16]
   1b210:	mla	r6, r7, r5, r6
   1b214:	mvnne	r6, #0
   1b218:	mla	r7, r6, r5, r0
   1b21c:	subs	r0, ip, r4
   1b220:	sbcs	r0, r1, r6
   1b224:	movwcc	sl, #1
   1b228:	cmp	sl, #0
   1b22c:	orr	r3, r3, sl
   1b230:	mvnne	lr, #0
   1b234:	mvnne	r7, #0
   1b238:	mov	r6, lr
   1b23c:	b	1b994 <lchmod@@Base+0x43dc>
   1b240:	mvn	r0, #0
   1b244:	mvn	r1, #0
   1b248:	mov	r2, r5
   1b24c:	mov	sl, r3
   1b250:	bl	1c2bc <lchmod@@Base+0x4d04>
   1b254:	subs	r3, r0, r6
   1b258:	mov	ip, r1
   1b25c:	umull	r2, lr, r6, r5
   1b260:	str	r0, [sp, #20]
   1b264:	sbcs	r3, r1, r7
   1b268:	mov	r1, #0
   1b26c:	str	ip, [sp, #16]
   1b270:	movwcc	r1, #1
   1b274:	mla	r6, r6, sl, lr
   1b278:	mov	lr, #0
   1b27c:	cmp	r1, #0
   1b280:	mla	r7, r7, r5, r6
   1b284:	mvnne	r2, #0
   1b288:	cmp	r1, #0
   1b28c:	umull	r3, r4, r2, r5
   1b290:	mvnne	r7, #0
   1b294:	mla	r4, r2, sl, r4
   1b298:	subs	r2, r0, r2
   1b29c:	sbcs	r2, ip, r7
   1b2a0:	mla	r4, r7, r5, r4
   1b2a4:	mov	r2, #0
   1b2a8:	movwcc	lr, #1
   1b2ac:	cmp	lr, #0
   1b2b0:	mvnne	r3, #0
   1b2b4:	mvnne	r4, #0
   1b2b8:	subs	r7, r0, r3
   1b2bc:	mov	r0, r5
   1b2c0:	sbcs	r7, ip, r4
   1b2c4:	umull	r5, r7, r3, r5
   1b2c8:	movwcc	r2, #1
   1b2cc:	cmp	r2, #0
   1b2d0:	mla	r3, r3, sl, r7
   1b2d4:	mvnne	r5, #0
   1b2d8:	cmp	r2, #0
   1b2dc:	mla	r3, r4, r0, r3
   1b2e0:	umull	r6, ip, r5, r0
   1b2e4:	mvnne	r3, #0
   1b2e8:	mla	ip, r5, sl, ip
   1b2ec:	mla	r7, r3, r0, ip
   1b2f0:	ldr	r0, [sp, #20]
   1b2f4:	subs	r0, r0, r5
   1b2f8:	ldr	r0, [sp, #16]
   1b2fc:	sbcs	r0, r0, r3
   1b300:	mov	r0, #0
   1b304:	movwcc	r0, #1
   1b308:	cmp	r0, #0
   1b30c:	mov	r3, r0
   1b310:	orr	r0, r1, lr
   1b314:	orr	r0, r0, r2
   1b318:	mvnne	r7, #0
   1b31c:	mvnne	r6, #0
   1b320:	orr	r3, r0, r3
   1b324:	b	1b994 <lchmod@@Base+0x43dc>
   1b328:	mvn	r0, #0
   1b32c:	mvn	r1, #0
   1b330:	mov	r2, r5
   1b334:	mov	r4, r3
   1b338:	str	r3, [sp, #24]
   1b33c:	bl	1c2bc <lchmod@@Base+0x4d04>
   1b340:	umull	r3, r2, r6, r5
   1b344:	mla	r2, r6, r4, r2
   1b348:	subs	r6, r0, r6
   1b34c:	sbcs	r6, r1, r7
   1b350:	mov	r6, #0
   1b354:	mla	r2, r7, r5, r2
   1b358:	mov	r7, #0
   1b35c:	movwcc	r6, #1
   1b360:	cmp	r6, #0
   1b364:	str	r6, [sp, #20]
   1b368:	mvnne	r3, #0
   1b36c:	mvnne	r2, #0
   1b370:	subs	r4, r0, r3
   1b374:	umull	r6, ip, r3, r5
   1b378:	sbcs	r4, r1, r2
   1b37c:	ldr	r4, [sp, #24]
   1b380:	movwcc	r7, #1
   1b384:	cmp	r7, #0
   1b388:	mov	lr, r7
   1b38c:	str	r7, [sp, #16]
   1b390:	mvnne	r6, #0
   1b394:	cmp	lr, #0
   1b398:	mov	lr, #0
   1b39c:	umull	sl, r7, r6, r5
   1b3a0:	mla	r3, r3, r4, ip
   1b3a4:	mla	r2, r2, r5, r3
   1b3a8:	mvnne	r2, #0
   1b3ac:	subs	r3, r0, r6
   1b3b0:	mla	r7, r6, r4, r7
   1b3b4:	mov	r4, r0
   1b3b8:	mov	r0, #0
   1b3bc:	mla	r7, r2, r5, r7
   1b3c0:	sbcs	r2, r1, r2
   1b3c4:	mov	r3, r4
   1b3c8:	movwcc	r0, #1
   1b3cc:	str	r3, [sp, #4]
   1b3d0:	cmp	r0, #0
   1b3d4:	str	r0, [sp, #12]
   1b3d8:	mov	r0, r1
   1b3dc:	mvnne	sl, #0
   1b3e0:	mvnne	r7, #0
   1b3e4:	str	r0, [sp, #8]
   1b3e8:	subs	r2, r4, sl
   1b3ec:	ldr	r4, [sp, #24]
   1b3f0:	sbcs	r2, r1, r7
   1b3f4:	umull	r6, r2, sl, r5
   1b3f8:	movwcc	lr, #1
   1b3fc:	cmp	lr, #0
   1b400:	mvnne	r6, #0
   1b404:	mla	r2, sl, r4, r2
   1b408:	cmp	lr, #0
   1b40c:	umull	r1, ip, r6, r5
   1b410:	mla	r2, r7, r5, r2
   1b414:	mvnne	r2, #0
   1b418:	mla	ip, r6, r4, ip
   1b41c:	subs	r6, r3, r6
   1b420:	mla	r7, r2, r5, ip
   1b424:	sbcs	r2, r0, r2
   1b428:	mov	ip, #0
   1b42c:	mov	r2, #0
   1b430:	movwcc	ip, #1
   1b434:	cmp	ip, #0
   1b438:	mvnne	r1, #0
   1b43c:	mvnne	r7, #0
   1b440:	subs	r6, r3, r1
   1b444:	ldr	r3, [sp, #24]
   1b448:	sbcs	r6, r0, r7
   1b44c:	umull	r0, sl, r1, r5
   1b450:	movwcc	r2, #1
   1b454:	cmp	r2, #0
   1b458:	mvnne	r0, #0
   1b45c:	mla	r1, r1, r3, sl
   1b460:	cmp	r2, #0
   1b464:	umull	r6, r4, r0, r5
   1b468:	mla	r1, r7, r5, r1
   1b46c:	mvnne	r1, #0
   1b470:	mla	r4, r0, r3, r4
   1b474:	ldr	r3, [sp, #4]
   1b478:	mla	r7, r1, r5, r4
   1b47c:	ldr	r5, [sp, #16]
   1b480:	subs	r0, r3, r0
   1b484:	ldr	r0, [sp, #8]
   1b488:	sbcs	r0, r0, r1
   1b48c:	mov	r0, #0
   1b490:	movwcc	r0, #1
   1b494:	cmp	r0, #0
   1b498:	mov	r1, r0
   1b49c:	ldr	r0, [sp, #20]
   1b4a0:	mvnne	r7, #0
   1b4a4:	mvnne	r6, #0
   1b4a8:	orr	r0, r0, r5
   1b4ac:	ldr	r5, [sp, #12]
   1b4b0:	orr	r0, r0, r5
   1b4b4:	orr	r0, r0, lr
   1b4b8:	orr	r0, r0, ip
   1b4bc:	orr	r0, r0, r2
   1b4c0:	b	1b930 <lchmod@@Base+0x4378>
   1b4c4:	mov	r1, #0
   1b4c8:	lsl	r2, r7, #10
   1b4cc:	lsl	r0, r6, #10
   1b4d0:	lsr	r3, r7, #22
   1b4d4:	cmp	r1, r7, lsr #22
   1b4d8:	orr	r2, r2, r6, lsr #22
   1b4dc:	mvnne	r0, #0
   1b4e0:	movwne	r3, #1
   1b4e4:	cmp	r1, r7, lsr #22
   1b4e8:	b	1b960 <lchmod@@Base+0x43a8>
   1b4ec:	mvn	r0, #0
   1b4f0:	mvn	r1, #0
   1b4f4:	mov	r2, r5
   1b4f8:	mov	sl, r3
   1b4fc:	bl	1c2bc <lchmod@@Base+0x4d04>
   1b500:	subs	r2, r0, r6
   1b504:	mov	ip, r0
   1b508:	mov	r0, #0
   1b50c:	sbcs	r2, r1, r7
   1b510:	umull	r4, r2, r6, r5
   1b514:	movwcc	r0, #1
   1b518:	cmp	r0, #0
   1b51c:	mla	r2, r6, sl, r2
   1b520:	str	r0, [sp, #20]
   1b524:	mvnne	r4, #0
   1b528:	cmp	r0, #0
   1b52c:	mla	r2, r7, r5, r2
   1b530:	mov	r0, #0
   1b534:	umull	lr, r3, r4, r5
   1b538:	mvnne	r2, #0
   1b53c:	mla	r3, r4, sl, r3
   1b540:	mla	r6, r2, r5, r3
   1b544:	subs	r3, ip, r4
   1b548:	mov	r3, r1
   1b54c:	sbcs	r2, r1, r2
   1b550:	str	r3, [sp, #8]
   1b554:	movwcc	r0, #1
   1b558:	cmp	r0, #0
   1b55c:	str	r0, [sp, #16]
   1b560:	mov	r0, ip
   1b564:	mvnne	lr, #0
   1b568:	mvnne	r6, #0
   1b56c:	str	r0, [sp, #12]
   1b570:	subs	r2, ip, lr
   1b574:	umull	r7, r4, lr, r5
   1b578:	sbcs	r2, r1, r6
   1b57c:	mov	r2, #0
   1b580:	movwcc	r2, #1
   1b584:	mla	r4, lr, sl, r4
   1b588:	cmp	r2, #0
   1b58c:	mla	r6, r6, r5, r4
   1b590:	mov	r4, #0
   1b594:	mvnne	r7, #0
   1b598:	cmp	r2, #0
   1b59c:	umull	r1, ip, r7, r5
   1b5a0:	mvnne	r6, #0
   1b5a4:	mla	ip, r7, sl, ip
   1b5a8:	subs	r7, r0, r7
   1b5ac:	sbcs	r7, r3, r6
   1b5b0:	mla	lr, r6, r5, ip
   1b5b4:	mov	ip, #0
   1b5b8:	movwcc	ip, #1
   1b5bc:	cmp	ip, #0
   1b5c0:	mvnne	r1, #0
   1b5c4:	mvnne	lr, #0
   1b5c8:	subs	r7, r0, r1
   1b5cc:	sbcs	r7, r3, lr
   1b5d0:	umull	r0, r7, r1, r5
   1b5d4:	movwcc	r4, #1
   1b5d8:	cmp	r4, #0
   1b5dc:	mla	r1, r1, sl, r7
   1b5e0:	mvnne	r0, #0
   1b5e4:	cmp	r4, #0
   1b5e8:	mla	r1, lr, r5, r1
   1b5ec:	umull	r6, r3, r0, r5
   1b5f0:	mvnne	r1, #0
   1b5f4:	mla	r3, r0, sl, r3
   1b5f8:	mla	r7, r1, r5, r3
   1b5fc:	ldr	r3, [sp, #12]
   1b600:	subs	r0, r3, r0
   1b604:	ldr	r0, [sp, #8]
   1b608:	ldr	r3, [sp, #16]
   1b60c:	sbcs	r0, r0, r1
   1b610:	mov	r0, #0
   1b614:	movwcc	r0, #1
   1b618:	cmp	r0, #0
   1b61c:	mov	r1, r0
   1b620:	ldr	r0, [sp, #20]
   1b624:	mvnne	r7, #0
   1b628:	mvnne	r6, #0
   1b62c:	orr	r0, r0, r3
   1b630:	orr	r0, r0, r2
   1b634:	orr	r0, r0, ip
   1b638:	orr	r0, r0, r4
   1b63c:	b	1b760 <lchmod@@Base+0x41a8>
   1b640:	mvn	r0, #0
   1b644:	mvn	r1, #0
   1b648:	mov	r2, r5
   1b64c:	mov	sl, r3
   1b650:	bl	1c2bc <lchmod@@Base+0x4d04>
   1b654:	umull	r3, r2, r6, r5
   1b658:	mov	lr, r1
   1b65c:	mov	r1, r0
   1b660:	mla	r2, r6, sl, r2
   1b664:	subs	r6, r0, r6
   1b668:	mov	r0, #0
   1b66c:	sbcs	r6, lr, r7
   1b670:	mla	r2, r7, r5, r2
   1b674:	movwcc	r0, #1
   1b678:	cmp	r0, #0
   1b67c:	str	r0, [sp, #20]
   1b680:	mov	r0, r1
   1b684:	mvnne	r3, #0
   1b688:	mvnne	r2, #0
   1b68c:	str	r0, [sp, #16]
   1b690:	subs	r4, r1, r3
   1b694:	umull	r7, ip, r3, r5
   1b698:	sbcs	r4, lr, r2
   1b69c:	mov	r4, #0
   1b6a0:	movwcc	r4, #1
   1b6a4:	mla	r3, r3, sl, ip
   1b6a8:	mov	ip, #0
   1b6ac:	cmp	r4, #0
   1b6b0:	mla	r2, r2, r5, r3
   1b6b4:	mvnne	r7, #0
   1b6b8:	cmp	r4, #0
   1b6bc:	umull	r1, r6, r7, r5
   1b6c0:	mvnne	r2, #0
   1b6c4:	mla	r6, r7, sl, r6
   1b6c8:	mla	r3, r2, r5, r6
   1b6cc:	subs	r6, r0, r7
   1b6d0:	sbcs	r2, lr, r2
   1b6d4:	mov	r2, #0
   1b6d8:	movwcc	ip, #1
   1b6dc:	cmp	ip, #0
   1b6e0:	mvnne	r1, #0
   1b6e4:	mvnne	r3, #0
   1b6e8:	subs	r6, r0, r1
   1b6ec:	sbcs	r6, lr, r3
   1b6f0:	umull	r0, r6, r1, r5
   1b6f4:	movwcc	r2, #1
   1b6f8:	cmp	r2, #0
   1b6fc:	mvnne	r0, #0
   1b700:	cmp	r2, #0
   1b704:	str	r6, [sp, #12]
   1b708:	umull	r6, r7, r0, r5
   1b70c:	mla	r7, r0, sl, r7
   1b710:	str	r7, [sp, #8]
   1b714:	ldr	r7, [sp, #12]
   1b718:	mla	r1, r1, sl, r7
   1b71c:	mla	r1, r3, r5, r1
   1b720:	ldr	r3, [sp, #8]
   1b724:	mvnne	r1, #0
   1b728:	mla	r7, r1, r5, r3
   1b72c:	ldr	r3, [sp, #16]
   1b730:	subs	r0, r3, r0
   1b734:	sbcs	r0, lr, r1
   1b738:	mov	r0, #0
   1b73c:	movwcc	r0, #1
   1b740:	cmp	r0, #0
   1b744:	mov	r1, r0
   1b748:	ldr	r0, [sp, #20]
   1b74c:	mvnne	r7, #0
   1b750:	mvnne	r6, #0
   1b754:	orr	r0, r0, r4
   1b758:	orr	r0, r0, ip
   1b75c:	orr	r0, r0, r2
   1b760:	orr	r3, r0, r1
   1b764:	b	1b994 <lchmod@@Base+0x43dc>
   1b768:	mvn	r0, #0
   1b76c:	mvn	r1, #0
   1b770:	mov	r2, r5
   1b774:	mov	sl, r3
   1b778:	bl	1c2bc <lchmod@@Base+0x4d04>
   1b77c:	mov	ip, r1
   1b780:	subs	r1, r0, r6
   1b784:	umull	r3, lr, r6, r5
   1b788:	mov	r2, r5
   1b78c:	sbcs	r1, ip, r7
   1b790:	mov	r1, #0
   1b794:	str	ip, [sp, #4]
   1b798:	movwcc	r1, #1
   1b79c:	mla	r6, r6, sl, lr
   1b7a0:	cmp	r1, #0
   1b7a4:	mla	r7, r7, r2, r6
   1b7a8:	str	r1, [sp, #20]
   1b7ac:	mvnne	r3, #0
   1b7b0:	cmp	r1, #0
   1b7b4:	mov	r1, r0
   1b7b8:	umull	r4, r5, r3, r5
   1b7bc:	mvnne	r7, #0
   1b7c0:	mov	lr, r1
   1b7c4:	mla	r5, r3, sl, r5
   1b7c8:	subs	r3, r0, r3
   1b7cc:	sbcs	r0, ip, r7
   1b7d0:	mov	r0, #0
   1b7d4:	mla	r5, r7, r2, r5
   1b7d8:	movwcc	r0, #1
   1b7dc:	cmp	r0, #0
   1b7e0:	str	r0, [sp, #16]
   1b7e4:	mvnne	r4, #0
   1b7e8:	mvnne	r5, #0
   1b7ec:	subs	r0, r1, r4
   1b7f0:	mov	r1, #0
   1b7f4:	sbcs	r0, ip, r5
   1b7f8:	umull	r3, r0, r4, r2
   1b7fc:	movwcc	r1, #1
   1b800:	cmp	r1, #0
   1b804:	mla	r0, r4, sl, r0
   1b808:	mov	r4, lr
   1b80c:	str	r1, [sp, #12]
   1b810:	mvnne	r3, #0
   1b814:	cmp	r1, #0
   1b818:	mla	r0, r5, r2, r0
   1b81c:	str	r4, [sp]
   1b820:	umull	r7, r6, r3, r2
   1b824:	mvnne	r0, #0
   1b828:	mla	r6, r3, sl, r6
   1b82c:	subs	r3, lr, r3
   1b830:	mov	r3, #0
   1b834:	mla	r5, r0, r2, r6
   1b838:	sbcs	r0, ip, r0
   1b83c:	mov	r0, #0
   1b840:	movwcc	r0, #1
   1b844:	cmp	r0, #0
   1b848:	str	r0, [sp, #8]
   1b84c:	mvnne	r7, #0
   1b850:	mvnne	r5, #0
   1b854:	subs	r0, lr, r7
   1b858:	sbcs	r0, ip, r5
   1b85c:	umull	r6, r0, r7, r2
   1b860:	movwcc	r3, #1
   1b864:	cmp	r3, #0
   1b868:	mla	r7, r7, sl, r0
   1b86c:	mov	r0, ip
   1b870:	mvnne	r6, #0
   1b874:	cmp	r3, #0
   1b878:	mla	r7, r5, r2, r7
   1b87c:	mov	r5, #0
   1b880:	umull	r1, lr, r6, r2
   1b884:	mvnne	r7, #0
   1b888:	mla	lr, r6, sl, lr
   1b88c:	subs	r6, r4, r6
   1b890:	mla	lr, r7, r2, lr
   1b894:	sbcs	r7, ip, r7
   1b898:	mov	ip, #0
   1b89c:	movwcc	ip, #1
   1b8a0:	cmp	ip, #0
   1b8a4:	mvnne	r1, #0
   1b8a8:	mvnne	lr, #0
   1b8ac:	subs	r7, r4, r1
   1b8b0:	sbcs	r7, r0, lr
   1b8b4:	umull	r0, r7, r1, r2
   1b8b8:	movwcc	r5, #1
   1b8bc:	cmp	r5, #0
   1b8c0:	mla	r1, r1, sl, r7
   1b8c4:	mvnne	r0, #0
   1b8c8:	cmp	r5, #0
   1b8cc:	mla	r1, lr, r2, r1
   1b8d0:	umull	r6, r4, r0, r2
   1b8d4:	mvnne	r1, #0
   1b8d8:	mla	r4, r0, sl, r4
   1b8dc:	mla	r7, r1, r2, r4
   1b8e0:	ldr	r2, [sp]
   1b8e4:	subs	r0, r2, r0
   1b8e8:	ldr	r0, [sp, #4]
   1b8ec:	ldr	r2, [sp, #16]
   1b8f0:	sbcs	r0, r0, r1
   1b8f4:	mov	r0, #0
   1b8f8:	movwcc	r0, #1
   1b8fc:	cmp	r0, #0
   1b900:	mov	r1, r0
   1b904:	ldr	r0, [sp, #20]
   1b908:	mvnne	r7, #0
   1b90c:	mvnne	r6, #0
   1b910:	orr	r0, r0, r2
   1b914:	ldr	r2, [sp, #12]
   1b918:	orr	r0, r0, r2
   1b91c:	ldr	r2, [sp, #8]
   1b920:	orr	r0, r0, r2
   1b924:	orr	r0, r0, r3
   1b928:	orr	r0, r0, ip
   1b92c:	orr	r0, r0, r5
   1b930:	orr	r0, r0, r1
   1b934:	and	r3, r0, #1
   1b938:	b	1b994 <lchmod@@Base+0x43dc>
   1b93c:	mov	r1, #0
   1b940:	lsl	r2, r7, #9
   1b944:	lsl	r0, r6, #9
   1b948:	lsr	r3, r7, #23
   1b94c:	cmp	r1, r7, lsr #23
   1b950:	orr	r2, r2, r6, lsr #23
   1b954:	mvnne	r0, #0
   1b958:	movwne	r3, #1
   1b95c:	cmp	r1, r7, lsr #23
   1b960:	mvnne	r2, #0
   1b964:	mov	r6, r0
   1b968:	mov	r7, r2
   1b96c:	b	1b994 <lchmod@@Base+0x43dc>
   1b970:	lsl	r1, r7, #1
   1b974:	cmp	r7, #0
   1b978:	lsl	r0, r6, #1
   1b97c:	lsr	r3, r7, #31
   1b980:	orr	r1, r1, r6, lsr #31
   1b984:	mvnmi	r0, #0
   1b988:	mvnmi	r1, #0
   1b98c:	mov	r6, r0
   1b990:	mov	r7, r1
   1b994:	ldr	r1, [sp, #32]
   1b998:	ldr	r2, [sp, #28]
   1b99c:	orr	r8, r3, r8
   1b9a0:	add	r0, r1, r2
   1b9a4:	str	r0, [r9]
   1b9a8:	ldrb	r0, [r1, r2]
   1b9ac:	cmp	r0, #0
   1b9b0:	orrne	r8, r8, #2
   1b9b4:	ldr	r0, [sp, #36]	; 0x24
   1b9b8:	strd	r6, [r0]
   1b9bc:	mov	r0, r8
   1b9c0:	sub	sp, fp, #28
   1b9c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9c8:	movw	r0, #53972	; 0xd2d4
   1b9cc:	movw	r1, #54010	; 0xd2fa
   1b9d0:	movw	r3, #54026	; 0xd30a
   1b9d4:	mov	r2, #85	; 0x55
   1b9d8:	movt	r0, #1
   1b9dc:	movt	r1, #1
   1b9e0:	movt	r3, #1
   1b9e4:	bl	11bc0 <__assert_fail@plt>
   1b9e8:	clz	r2, r1
   1b9ec:	clz	r3, r0
   1b9f0:	lsr	r2, r2, #5
   1b9f4:	lsr	r3, r3, #5
   1b9f8:	orrs	r2, r3, r2
   1b9fc:	movwne	r1, #1
   1ba00:	movwne	r0, #1
   1ba04:	cmp	r1, #0
   1ba08:	beq	1ba38 <lchmod@@Base+0x4480>
   1ba0c:	mvn	r2, #-2147483648	; 0x80000000
   1ba10:	udiv	r2, r2, r1
   1ba14:	cmp	r2, r0
   1ba18:	bcs	1ba38 <lchmod@@Base+0x4480>
   1ba1c:	push	{fp, lr}
   1ba20:	mov	fp, sp
   1ba24:	bl	11a04 <__errno_location@plt>
   1ba28:	mov	r1, #12
   1ba2c:	str	r1, [r0]
   1ba30:	mov	r0, #0
   1ba34:	pop	{fp, pc}
   1ba38:	b	117a0 <calloc@plt>
   1ba3c:	cmp	r0, #0
   1ba40:	movweq	r0, #1
   1ba44:	cmn	r0, #1
   1ba48:	ble	1ba50 <lchmod@@Base+0x4498>
   1ba4c:	b	11944 <malloc@plt>
   1ba50:	push	{fp, lr}
   1ba54:	mov	fp, sp
   1ba58:	bl	11a04 <__errno_location@plt>
   1ba5c:	mov	r1, #12
   1ba60:	str	r1, [r0]
   1ba64:	mov	r0, #0
   1ba68:	pop	{fp, pc}
   1ba6c:	push	{fp, lr}
   1ba70:	mov	fp, sp
   1ba74:	cmp	r0, #0
   1ba78:	beq	1ba94 <lchmod@@Base+0x44dc>
   1ba7c:	cmp	r1, #0
   1ba80:	beq	1baa0 <lchmod@@Base+0x44e8>
   1ba84:	cmn	r1, #1
   1ba88:	ble	1baac <lchmod@@Base+0x44f4>
   1ba8c:	pop	{fp, lr}
   1ba90:	b	11878 <realloc@plt>
   1ba94:	mov	r0, r1
   1ba98:	pop	{fp, lr}
   1ba9c:	b	1ba3c <lchmod@@Base+0x4484>
   1baa0:	bl	137a0 <__assert_fail@plt+0x1be0>
   1baa4:	mov	r0, #0
   1baa8:	pop	{fp, pc}
   1baac:	bl	11a04 <__errno_location@plt>
   1bab0:	mov	r1, #12
   1bab4:	str	r1, [r0]
   1bab8:	mov	r0, #0
   1babc:	pop	{fp, pc}
   1bac0:	sub	r0, r0, #1
   1bac4:	ldrb	r3, [r0, #1]!
   1bac8:	cmp	r3, #47	; 0x2f
   1bacc:	beq	1bac4 <lchmod@@Base+0x450c>
   1bad0:	mov	r2, #0
   1bad4:	mov	r1, r0
   1bad8:	uxtb	r3, r3
   1badc:	cmp	r3, #47	; 0x2f
   1bae0:	bne	1baf8 <lchmod@@Base+0x4540>
   1bae4:	ldrb	r3, [r1, #1]!
   1bae8:	mov	r2, #1
   1baec:	uxtb	r3, r3
   1baf0:	cmp	r3, #47	; 0x2f
   1baf4:	beq	1bae4 <lchmod@@Base+0x452c>
   1baf8:	cmp	r3, #0
   1bafc:	bxeq	lr
   1bb00:	tst	r2, #1
   1bb04:	mov	r2, #0
   1bb08:	movne	r0, r1
   1bb0c:	ldrb	r3, [r1, #1]!
   1bb10:	uxtb	r3, r3
   1bb14:	cmp	r3, #47	; 0x2f
   1bb18:	bne	1baf8 <lchmod@@Base+0x4540>
   1bb1c:	b	1bae4 <lchmod@@Base+0x452c>
   1bb20:	push	{r4, sl, fp, lr}
   1bb24:	add	fp, sp, #8
   1bb28:	mov	r4, r0
   1bb2c:	bl	119c8 <strlen@plt>
   1bb30:	mov	r1, r0
   1bb34:	sub	r2, r4, #1
   1bb38:	mov	r0, r1
   1bb3c:	cmp	r1, #2
   1bb40:	bcc	1bb54 <lchmod@@Base+0x459c>
   1bb44:	ldrb	r3, [r2, r0]
   1bb48:	sub	r1, r0, #1
   1bb4c:	cmp	r3, #47	; 0x2f
   1bb50:	beq	1bb38 <lchmod@@Base+0x4580>
   1bb54:	pop	{r4, sl, fp, pc}
   1bb58:	push	{r4, r5, r6, sl, fp, lr}
   1bb5c:	add	fp, sp, #16
   1bb60:	mov	r4, r0
   1bb64:	bl	11908 <__fpending@plt>
   1bb68:	ldr	r6, [r4]
   1bb6c:	mov	r5, r0
   1bb70:	mov	r0, r4
   1bb74:	bl	1bccc <lchmod@@Base+0x4714>
   1bb78:	tst	r6, #32
   1bb7c:	bne	1bbb4 <lchmod@@Base+0x45fc>
   1bb80:	cmp	r0, #0
   1bb84:	mov	r4, r0
   1bb88:	mvnne	r4, #0
   1bb8c:	cmp	r5, #0
   1bb90:	bne	1bbc0 <lchmod@@Base+0x4608>
   1bb94:	cmp	r0, #0
   1bb98:	beq	1bbc0 <lchmod@@Base+0x4608>
   1bb9c:	bl	11a04 <__errno_location@plt>
   1bba0:	ldr	r0, [r0]
   1bba4:	subs	r4, r0, #9
   1bba8:	mvnne	r4, #0
   1bbac:	mov	r0, r4
   1bbb0:	pop	{r4, r5, r6, sl, fp, pc}
   1bbb4:	mvn	r4, #0
   1bbb8:	cmp	r0, #0
   1bbbc:	beq	1bbc8 <lchmod@@Base+0x4610>
   1bbc0:	mov	r0, r4
   1bbc4:	pop	{r4, r5, r6, sl, fp, pc}
   1bbc8:	bl	11a04 <__errno_location@plt>
   1bbcc:	mov	r1, #0
   1bbd0:	str	r1, [r0]
   1bbd4:	mov	r0, r4
   1bbd8:	pop	{r4, r5, r6, sl, fp, pc}
   1bbdc:	movw	r2, #62998	; 0xf616
   1bbe0:	mov	r1, #0
   1bbe4:	movt	r2, #149	; 0x95
   1bbe8:	str	r1, [r0, #16]
   1bbec:	str	r1, [r0, #20]
   1bbf0:	str	r2, [r0, #24]
   1bbf4:	bx	lr
   1bbf8:	push	{r4, r5, r6, r7, r9, sl, fp, lr}
   1bbfc:	add	fp, sp, #24
   1bc00:	ldr	r2, [r0, #24]
   1bc04:	movw	r3, #62998	; 0xf616
   1bc08:	movt	r3, #149	; 0x95
   1bc0c:	cmp	r2, r3
   1bc10:	bne	1bcac <lchmod@@Base+0x46f4>
   1bc14:	add	r3, r0, #16
   1bc18:	add	ip, r0, #8
   1bc1c:	ldrd	r4, [r3]
   1bc20:	orrs	r2, r4, r5
   1bc24:	beq	1bc60 <lchmod@@Base+0x46a8>
   1bc28:	ldr	r6, [r1, #96]	; 0x60
   1bc2c:	ldr	r9, [r1, #100]	; 0x64
   1bc30:	ldm	r0, {r2, r7}
   1bc34:	eor	r7, r9, r7
   1bc38:	eor	r2, r6, r2
   1bc3c:	orrs	r2, r2, r7
   1bc40:	bne	1bc60 <lchmod@@Base+0x46a8>
   1bc44:	ldm	ip, {r2, r7}
   1bc48:	ldm	r1, {r6, r9}
   1bc4c:	eor	r7, r9, r7
   1bc50:	eor	r2, r6, r2
   1bc54:	orrs	r2, r2, r7
   1bc58:	mov	r2, #1
   1bc5c:	beq	1bc98 <lchmod@@Base+0x46e0>
   1bc60:	adds	r6, r4, #1
   1bc64:	adc	r7, r5, #0
   1bc68:	and	r2, r6, r4
   1bc6c:	strd	r6, [r3]
   1bc70:	and	r3, r7, r5
   1bc74:	orrs	r2, r2, r3
   1bc78:	mov	r2, #0
   1bc7c:	bne	1bc98 <lchmod@@Base+0x46e0>
   1bc80:	orrs	r3, r6, r7
   1bc84:	beq	1bca0 <lchmod@@Base+0x46e8>
   1bc88:	ldrd	r4, [r1]
   1bc8c:	strd	r4, [ip]
   1bc90:	ldrd	r4, [r1, #96]	; 0x60
   1bc94:	strd	r4, [r0]
   1bc98:	mov	r0, r2
   1bc9c:	pop	{r4, r5, r6, r7, r9, sl, fp, pc}
   1bca0:	mov	r2, #1
   1bca4:	mov	r0, r2
   1bca8:	pop	{r4, r5, r6, r7, r9, sl, fp, pc}
   1bcac:	movw	r0, #54105	; 0xd359
   1bcb0:	movw	r1, #54129	; 0xd371
   1bcb4:	movw	r3, #54147	; 0xd383
   1bcb8:	mov	r2, #60	; 0x3c
   1bcbc:	movt	r0, #1
   1bcc0:	movt	r1, #1
   1bcc4:	movt	r3, #1
   1bcc8:	bl	11bc0 <__assert_fail@plt>
   1bccc:	push	{r4, r5, r6, sl, fp, lr}
   1bcd0:	add	fp, sp, #16
   1bcd4:	sub	sp, sp, #8
   1bcd8:	mov	r4, r0
   1bcdc:	bl	11a40 <fileno@plt>
   1bce0:	cmn	r0, #1
   1bce4:	ble	1bd58 <lchmod@@Base+0x47a0>
   1bce8:	mov	r0, r4
   1bcec:	bl	1195c <__freading@plt>
   1bcf0:	cmp	r0, #0
   1bcf4:	beq	1bd20 <lchmod@@Base+0x4768>
   1bcf8:	mov	r0, r4
   1bcfc:	bl	11a40 <fileno@plt>
   1bd00:	mov	r1, #1
   1bd04:	mov	r2, #0
   1bd08:	mov	r3, #0
   1bd0c:	str	r1, [sp]
   1bd10:	bl	118e4 <lseek64@plt>
   1bd14:	and	r0, r0, r1
   1bd18:	cmn	r0, #1
   1bd1c:	beq	1bd58 <lchmod@@Base+0x47a0>
   1bd20:	mov	r0, r4
   1bd24:	bl	1bf84 <lchmod@@Base+0x49cc>
   1bd28:	cmp	r0, #0
   1bd2c:	beq	1bd58 <lchmod@@Base+0x47a0>
   1bd30:	bl	11a04 <__errno_location@plt>
   1bd34:	ldr	r6, [r0]
   1bd38:	mov	r5, r0
   1bd3c:	mov	r0, r4
   1bd40:	bl	11a58 <fclose@plt>
   1bd44:	cmp	r6, #0
   1bd48:	strne	r6, [r5]
   1bd4c:	mvnne	r0, #0
   1bd50:	sub	sp, fp, #16
   1bd54:	pop	{r4, r5, r6, sl, fp, pc}
   1bd58:	mov	r0, r4
   1bd5c:	sub	sp, fp, #16
   1bd60:	pop	{r4, r5, r6, sl, fp, lr}
   1bd64:	b	11a58 <fclose@plt>
   1bd68:	sub	sp, sp, #8
   1bd6c:	push	{r4, r5, r6, r7, fp, lr}
   1bd70:	add	fp, sp, #16
   1bd74:	sub	sp, sp, #8
   1bd78:	mov	r5, r0
   1bd7c:	add	r0, fp, #8
   1bd80:	cmp	r1, #11
   1bd84:	str	r2, [fp, #8]
   1bd88:	str	r3, [fp, #12]
   1bd8c:	str	r0, [sp, #4]
   1bd90:	bhi	1bdcc <lchmod@@Base+0x4814>
   1bd94:	mov	r0, #1
   1bd98:	movw	r2, #1300	; 0x514
   1bd9c:	tst	r2, r0, lsl r1
   1bda0:	bne	1be8c <lchmod@@Base+0x48d4>
   1bda4:	movw	r2, #2570	; 0xa0a
   1bda8:	tst	r2, r0, lsl r1
   1bdac:	bne	1bdf4 <lchmod@@Base+0x483c>
   1bdb0:	cmp	r1, #0
   1bdb4:	bne	1bdcc <lchmod@@Base+0x4814>
   1bdb8:	ldr	r0, [sp, #4]
   1bdbc:	add	r1, r0, #4
   1bdc0:	str	r1, [sp, #4]
   1bdc4:	mov	r1, #0
   1bdc8:	b	1be98 <lchmod@@Base+0x48e0>
   1bdcc:	sub	r0, r1, #1024	; 0x400
   1bdd0:	cmp	r0, #10
   1bdd4:	bhi	1be8c <lchmod@@Base+0x48d4>
   1bdd8:	mov	r2, #1
   1bddc:	movw	r3, #645	; 0x285
   1bde0:	tst	r3, r2, lsl r0
   1bde4:	bne	1be8c <lchmod@@Base+0x48d4>
   1bde8:	movw	r3, #1282	; 0x502
   1bdec:	tst	r3, r2, lsl r0
   1bdf0:	beq	1be00 <lchmod@@Base+0x4848>
   1bdf4:	mov	r0, r5
   1bdf8:	bl	11a70 <fcntl64@plt>
   1bdfc:	b	1bea4 <lchmod@@Base+0x48ec>
   1be00:	cmp	r0, #6
   1be04:	bne	1be8c <lchmod@@Base+0x48d4>
   1be08:	ldr	r0, [sp, #4]
   1be0c:	movw	r7, #58160	; 0xe330
   1be10:	movt	r7, #2
   1be14:	add	r1, r0, #4
   1be18:	str	r1, [sp, #4]
   1be1c:	ldr	r6, [r0]
   1be20:	ldr	r0, [r7]
   1be24:	cmp	r0, #0
   1be28:	bmi	1bec8 <lchmod@@Base+0x4910>
   1be2c:	mov	r0, r5
   1be30:	movw	r1, #1030	; 0x406
   1be34:	mov	r2, r6
   1be38:	bl	11a70 <fcntl64@plt>
   1be3c:	mov	r4, r0
   1be40:	cmn	r0, #1
   1be44:	bgt	1bebc <lchmod@@Base+0x4904>
   1be48:	bl	11a04 <__errno_location@plt>
   1be4c:	ldr	r0, [r0]
   1be50:	cmp	r0, #22
   1be54:	bne	1bebc <lchmod@@Base+0x4904>
   1be58:	mov	r0, r5
   1be5c:	mov	r1, #0
   1be60:	mov	r2, r6
   1be64:	bl	11a70 <fcntl64@plt>
   1be68:	mov	r4, r0
   1be6c:	cmp	r0, #0
   1be70:	bmi	1bea8 <lchmod@@Base+0x48f0>
   1be74:	mvn	r0, #0
   1be78:	str	r0, [r7]
   1be7c:	mov	r0, #1
   1be80:	cmp	r0, #0
   1be84:	bne	1bef4 <lchmod@@Base+0x493c>
   1be88:	b	1bea8 <lchmod@@Base+0x48f0>
   1be8c:	ldr	r0, [sp, #4]
   1be90:	add	r2, r0, #4
   1be94:	str	r2, [sp, #4]
   1be98:	ldr	r2, [r0]
   1be9c:	mov	r0, r5
   1bea0:	bl	11a70 <fcntl64@plt>
   1bea4:	mov	r4, r0
   1bea8:	mov	r0, r4
   1beac:	sub	sp, fp, #16
   1beb0:	pop	{r4, r5, r6, r7, fp, lr}
   1beb4:	add	sp, sp, #8
   1beb8:	bx	lr
   1bebc:	mov	r0, #1
   1bec0:	str	r0, [r7]
   1bec4:	b	1bea8 <lchmod@@Base+0x48f0>
   1bec8:	mov	r0, r5
   1becc:	mov	r1, #0
   1bed0:	mov	r2, r6
   1bed4:	bl	11a70 <fcntl64@plt>
   1bed8:	mov	r4, r0
   1bedc:	ldr	r0, [r7]
   1bee0:	add	r0, r0, #1
   1bee4:	clz	r0, r0
   1bee8:	lsr	r0, r0, #5
   1beec:	cmp	r0, #0
   1bef0:	beq	1bea8 <lchmod@@Base+0x48f0>
   1bef4:	cmp	r4, #0
   1bef8:	bmi	1bea8 <lchmod@@Base+0x48f0>
   1befc:	mov	r0, r4
   1bf00:	mov	r1, #1
   1bf04:	bl	11a70 <fcntl64@plt>
   1bf08:	cmp	r0, #0
   1bf0c:	bmi	1bf28 <lchmod@@Base+0x4970>
   1bf10:	orr	r2, r0, #1
   1bf14:	mov	r0, r4
   1bf18:	mov	r1, #2
   1bf1c:	bl	11a70 <fcntl64@plt>
   1bf20:	cmn	r0, #1
   1bf24:	bne	1bea8 <lchmod@@Base+0x48f0>
   1bf28:	bl	11a04 <__errno_location@plt>
   1bf2c:	ldr	r6, [r0]
   1bf30:	mov	r5, r0
   1bf34:	mov	r0, r4
   1bf38:	bl	11b6c <close@plt>
   1bf3c:	str	r6, [r5]
   1bf40:	mvn	r4, #0
   1bf44:	b	1bea8 <lchmod@@Base+0x48f0>
   1bf48:	sub	sp, sp, #8
   1bf4c:	push	{fp, lr}
   1bf50:	mov	fp, sp
   1bf54:	sub	sp, sp, #8
   1bf58:	str	r2, [fp, #8]
   1bf5c:	str	r3, [fp, #12]
   1bf60:	tst	r1, #64	; 0x40
   1bf64:	mov	r2, #0
   1bf68:	ldrne	r2, [fp, #8]
   1bf6c:	bl	1192c <open64@plt>
   1bf70:	bl	1a030 <lchmod@@Base+0x2a78>
   1bf74:	mov	sp, fp
   1bf78:	pop	{fp, lr}
   1bf7c:	add	sp, sp, #8
   1bf80:	bx	lr
   1bf84:	push	{r4, sl, fp, lr}
   1bf88:	add	fp, sp, #8
   1bf8c:	sub	sp, sp, #8
   1bf90:	mov	r4, r0
   1bf94:	cmp	r0, #0
   1bf98:	beq	1bfd0 <lchmod@@Base+0x4a18>
   1bf9c:	mov	r0, r4
   1bfa0:	bl	1195c <__freading@plt>
   1bfa4:	cmp	r0, #0
   1bfa8:	beq	1bfd0 <lchmod@@Base+0x4a18>
   1bfac:	ldrb	r0, [r4, #1]
   1bfb0:	tst	r0, #1
   1bfb4:	beq	1bfd0 <lchmod@@Base+0x4a18>
   1bfb8:	mov	r0, #1
   1bfbc:	mov	r2, #0
   1bfc0:	mov	r3, #0
   1bfc4:	str	r0, [sp]
   1bfc8:	mov	r0, r4
   1bfcc:	bl	1bfe0 <lchmod@@Base+0x4a28>
   1bfd0:	mov	r0, r4
   1bfd4:	sub	sp, fp, #8
   1bfd8:	pop	{r4, sl, fp, lr}
   1bfdc:	b	117e8 <fflush@plt>
   1bfe0:	push	{r4, r5, r6, r7, fp, lr}
   1bfe4:	add	fp, sp, #16
   1bfe8:	sub	sp, sp, #8
   1bfec:	mov	r4, r0
   1bff0:	ldr	r0, [r0, #4]
   1bff4:	mov	r5, r3
   1bff8:	mov	r6, r2
   1bffc:	ldr	r1, [r4, #8]
   1c000:	cmp	r1, r0
   1c004:	bne	1c020 <lchmod@@Base+0x4a68>
   1c008:	ldrd	r0, [r4, #16]
   1c00c:	cmp	r1, r0
   1c010:	bne	1c020 <lchmod@@Base+0x4a68>
   1c014:	ldr	r0, [r4, #36]	; 0x24
   1c018:	cmp	r0, #0
   1c01c:	beq	1c038 <lchmod@@Base+0x4a80>
   1c020:	mov	r0, r4
   1c024:	mov	r2, r6
   1c028:	mov	r3, r5
   1c02c:	sub	sp, fp, #16
   1c030:	pop	{r4, r5, r6, r7, fp, lr}
   1c034:	b	11a64 <fseeko64@plt>
   1c038:	ldr	r7, [fp, #8]
   1c03c:	mov	r0, r4
   1c040:	bl	11a40 <fileno@plt>
   1c044:	mov	r2, r6
   1c048:	mov	r3, r5
   1c04c:	str	r7, [sp]
   1c050:	bl	118e4 <lseek64@plt>
   1c054:	and	r2, r0, r1
   1c058:	cmn	r2, #1
   1c05c:	beq	1c07c <lchmod@@Base+0x4ac4>
   1c060:	strd	r0, [r4, #80]	; 0x50
   1c064:	ldr	r0, [r4]
   1c068:	bic	r0, r0, #16
   1c06c:	str	r0, [r4]
   1c070:	mov	r0, #0
   1c074:	sub	sp, fp, #16
   1c078:	pop	{r4, r5, r6, r7, fp, pc}
   1c07c:	mvn	r0, #0
   1c080:	sub	sp, fp, #16
   1c084:	pop	{r4, r5, r6, r7, fp, pc}
   1c088:	ldrb	r2, [r0]
   1c08c:	cmp	r2, #0
   1c090:	beq	1c0bc <lchmod@@Base+0x4b04>
   1c094:	add	r3, r0, #1
   1c098:	mov	r0, #0
   1c09c:	ror	r0, r0, #23
   1c0a0:	uxtab	r0, r0, r2
   1c0a4:	ldrb	r2, [r3], #1
   1c0a8:	cmp	r2, #0
   1c0ac:	bne	1c09c <lchmod@@Base+0x4ae4>
   1c0b0:	udiv	r2, r0, r1
   1c0b4:	mls	r0, r2, r1, r0
   1c0b8:	bx	lr
   1c0bc:	mov	r0, #0
   1c0c0:	udiv	r2, r0, r1
   1c0c4:	mls	r0, r2, r1, r0
   1c0c8:	bx	lr
   1c0cc:	push	{fp, lr}
   1c0d0:	mov	fp, sp
   1c0d4:	mov	r0, #14
   1c0d8:	bl	11aa0 <nl_langinfo@plt>
   1c0dc:	movw	r1, #52411	; 0xccbb
   1c0e0:	cmp	r0, #0
   1c0e4:	movt	r1, #1
   1c0e8:	movne	r1, r0
   1c0ec:	movw	r0, #54214	; 0xd3c6
   1c0f0:	ldrb	r2, [r1]
   1c0f4:	movt	r0, #1
   1c0f8:	cmp	r2, #0
   1c0fc:	movne	r0, r1
   1c100:	pop	{fp, pc}
   1c104:	push	{r4, r5, r6, r7, fp, lr}
   1c108:	add	fp, sp, #16
   1c10c:	sub	sp, sp, #8
   1c110:	cmp	r0, #0
   1c114:	add	r5, sp, #4
   1c118:	mov	r7, r2
   1c11c:	mov	r4, r1
   1c120:	movne	r5, r0
   1c124:	mov	r0, r5
   1c128:	bl	11914 <mbrtowc@plt>
   1c12c:	mov	r6, r0
   1c130:	cmp	r7, #0
   1c134:	beq	1c15c <lchmod@@Base+0x4ba4>
   1c138:	cmn	r6, #2
   1c13c:	bcc	1c15c <lchmod@@Base+0x4ba4>
   1c140:	mov	r0, #0
   1c144:	bl	1c1b0 <lchmod@@Base+0x4bf8>
   1c148:	cmp	r0, #0
   1c14c:	bne	1c15c <lchmod@@Base+0x4ba4>
   1c150:	ldrb	r0, [r4]
   1c154:	mov	r6, #1
   1c158:	str	r0, [r5]
   1c15c:	mov	r0, r6
   1c160:	sub	sp, fp, #16
   1c164:	pop	{r4, r5, r6, r7, fp, pc}
   1c168:	cmp	r2, #0
   1c16c:	beq	1c19c <lchmod@@Base+0x4be4>
   1c170:	mvn	r3, #0
   1c174:	udiv	r3, r3, r2
   1c178:	cmp	r3, r1
   1c17c:	bcs	1c19c <lchmod@@Base+0x4be4>
   1c180:	push	{fp, lr}
   1c184:	mov	fp, sp
   1c188:	bl	11a04 <__errno_location@plt>
   1c18c:	mov	r1, #12
   1c190:	str	r1, [r0]
   1c194:	mov	r0, #0
   1c198:	pop	{fp, pc}
   1c19c:	mul	r1, r2, r1
   1c1a0:	b	1ba6c <lchmod@@Base+0x44b4>
   1c1a4:	mov	r1, #0
   1c1a8:	mov	r2, #3
   1c1ac:	b	1bd68 <lchmod@@Base+0x47b0>
   1c1b0:	push	{r4, sl, fp, lr}
   1c1b4:	add	fp, sp, #8
   1c1b8:	sub	sp, sp, #264	; 0x108
   1c1bc:	add	r1, sp, #7
   1c1c0:	movw	r2, #257	; 0x101
   1c1c4:	bl	1c21c <lchmod@@Base+0x4c64>
   1c1c8:	mov	r4, #0
   1c1cc:	cmp	r0, #0
   1c1d0:	bne	1c210 <lchmod@@Base+0x4c58>
   1c1d4:	movw	r1, #54220	; 0xd3cc
   1c1d8:	add	r0, sp, #7
   1c1dc:	mov	r2, #2
   1c1e0:	movt	r1, #1
   1c1e4:	bl	119bc <bcmp@plt>
   1c1e8:	cmp	r0, #0
   1c1ec:	beq	1c210 <lchmod@@Base+0x4c58>
   1c1f0:	movw	r1, #54222	; 0xd3ce
   1c1f4:	add	r0, sp, #7
   1c1f8:	mov	r2, #6
   1c1fc:	movt	r1, #1
   1c200:	bl	119bc <bcmp@plt>
   1c204:	cmp	r0, #0
   1c208:	mov	r4, r0
   1c20c:	movwne	r4, #1
   1c210:	mov	r0, r4
   1c214:	sub	sp, fp, #8
   1c218:	pop	{r4, sl, fp, pc}
   1c21c:	push	{r4, r5, r6, r7, fp, lr}
   1c220:	add	fp, sp, #16
   1c224:	mov	r4, r1
   1c228:	mov	r1, #0
   1c22c:	mov	r6, r2
   1c230:	bl	11a7c <setlocale@plt>
   1c234:	cmp	r0, #0
   1c238:	beq	1c268 <lchmod@@Base+0x4cb0>
   1c23c:	mov	r7, r0
   1c240:	bl	119c8 <strlen@plt>
   1c244:	cmp	r0, r6
   1c248:	bcs	1c284 <lchmod@@Base+0x4ccc>
   1c24c:	add	r2, r0, #1
   1c250:	mov	r0, r4
   1c254:	mov	r1, r7
   1c258:	bl	11830 <memcpy@plt>
   1c25c:	mov	r5, #0
   1c260:	mov	r0, r5
   1c264:	pop	{r4, r5, r6, r7, fp, pc}
   1c268:	mov	r5, #22
   1c26c:	cmp	r6, #0
   1c270:	beq	1c2ac <lchmod@@Base+0x4cf4>
   1c274:	mov	r0, #0
   1c278:	strb	r0, [r4]
   1c27c:	mov	r0, r5
   1c280:	pop	{r4, r5, r6, r7, fp, pc}
   1c284:	mov	r5, #34	; 0x22
   1c288:	cmp	r6, #0
   1c28c:	beq	1c2ac <lchmod@@Base+0x4cf4>
   1c290:	sub	r6, r6, #1
   1c294:	mov	r0, r4
   1c298:	mov	r1, r7
   1c29c:	mov	r2, r6
   1c2a0:	bl	11830 <memcpy@plt>
   1c2a4:	mov	r0, #0
   1c2a8:	strb	r0, [r4, r6]
   1c2ac:	mov	r0, r5
   1c2b0:	pop	{r4, r5, r6, r7, fp, pc}
   1c2b4:	mov	r1, #0
   1c2b8:	b	11a7c <setlocale@plt>
   1c2bc:	cmp	r3, #0
   1c2c0:	cmpeq	r2, #0
   1c2c4:	bne	1c2dc <lchmod@@Base+0x4d24>
   1c2c8:	cmp	r1, #0
   1c2cc:	cmpeq	r0, #0
   1c2d0:	mvnne	r1, #0
   1c2d4:	mvnne	r0, #0
   1c2d8:	b	1c2f8 <lchmod@@Base+0x4d40>
   1c2dc:	sub	sp, sp, #8
   1c2e0:	push	{sp, lr}
   1c2e4:	bl	1c308 <lchmod@@Base+0x4d50>
   1c2e8:	ldr	lr, [sp, #4]
   1c2ec:	add	sp, sp, #8
   1c2f0:	pop	{r2, r3}
   1c2f4:	bx	lr
   1c2f8:	push	{r1, lr}
   1c2fc:	mov	r0, #8
   1c300:	bl	117b8 <raise@plt>
   1c304:	pop	{r1, pc}
   1c308:	cmp	r1, r3
   1c30c:	cmpeq	r0, r2
   1c310:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c314:	mov	r4, r0
   1c318:	movcc	r0, #0
   1c31c:	mov	r5, r1
   1c320:	ldr	lr, [sp, #36]	; 0x24
   1c324:	movcc	r1, r0
   1c328:	bcc	1c424 <lchmod@@Base+0x4e6c>
   1c32c:	cmp	r3, #0
   1c330:	clzeq	ip, r2
   1c334:	clzne	ip, r3
   1c338:	addeq	ip, ip, #32
   1c33c:	cmp	r5, #0
   1c340:	clzeq	r1, r4
   1c344:	addeq	r1, r1, #32
   1c348:	clzne	r1, r5
   1c34c:	sub	ip, ip, r1
   1c350:	sub	sl, ip, #32
   1c354:	lsl	r9, r3, ip
   1c358:	rsb	fp, ip, #32
   1c35c:	orr	r9, r9, r2, lsl sl
   1c360:	orr	r9, r9, r2, lsr fp
   1c364:	lsl	r8, r2, ip
   1c368:	cmp	r5, r9
   1c36c:	cmpeq	r4, r8
   1c370:	movcc	r0, #0
   1c374:	movcc	r1, r0
   1c378:	bcc	1c394 <lchmod@@Base+0x4ddc>
   1c37c:	mov	r0, #1
   1c380:	subs	r4, r4, r8
   1c384:	lsl	r1, r0, sl
   1c388:	orr	r1, r1, r0, lsr fp
   1c38c:	lsl	r0, r0, ip
   1c390:	sbc	r5, r5, r9
   1c394:	cmp	ip, #0
   1c398:	beq	1c424 <lchmod@@Base+0x4e6c>
   1c39c:	lsr	r6, r8, #1
   1c3a0:	orr	r6, r6, r9, lsl #31
   1c3a4:	lsr	r7, r9, #1
   1c3a8:	mov	r2, ip
   1c3ac:	b	1c3d0 <lchmod@@Base+0x4e18>
   1c3b0:	subs	r3, r4, r6
   1c3b4:	sbc	r8, r5, r7
   1c3b8:	adds	r3, r3, r3
   1c3bc:	adc	r8, r8, r8
   1c3c0:	adds	r4, r3, #1
   1c3c4:	adc	r5, r8, #0
   1c3c8:	subs	r2, r2, #1
   1c3cc:	beq	1c3ec <lchmod@@Base+0x4e34>
   1c3d0:	cmp	r5, r7
   1c3d4:	cmpeq	r4, r6
   1c3d8:	bcs	1c3b0 <lchmod@@Base+0x4df8>
   1c3dc:	adds	r4, r4, r4
   1c3e0:	adc	r5, r5, r5
   1c3e4:	subs	r2, r2, #1
   1c3e8:	bne	1c3d0 <lchmod@@Base+0x4e18>
   1c3ec:	lsr	r3, r4, ip
   1c3f0:	orr	r3, r3, r5, lsl fp
   1c3f4:	lsr	r2, r5, ip
   1c3f8:	orr	r3, r3, r5, lsr sl
   1c3fc:	adds	r0, r0, r4
   1c400:	mov	r4, r3
   1c404:	lsl	r3, r2, ip
   1c408:	orr	r3, r3, r4, lsl sl
   1c40c:	lsl	ip, r4, ip
   1c410:	orr	r3, r3, r4, lsr fp
   1c414:	adc	r1, r1, r5
   1c418:	subs	r0, r0, ip
   1c41c:	mov	r5, r2
   1c420:	sbc	r1, r1, r3
   1c424:	cmp	lr, #0
   1c428:	strdne	r4, [lr]
   1c42c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c430:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c434:	mov	r7, r0
   1c438:	ldr	r6, [pc, #72]	; 1c488 <lchmod@@Base+0x4ed0>
   1c43c:	ldr	r5, [pc, #72]	; 1c48c <lchmod@@Base+0x4ed4>
   1c440:	add	r6, pc, r6
   1c444:	add	r5, pc, r5
   1c448:	sub	r6, r6, r5
   1c44c:	mov	r8, r1
   1c450:	mov	r9, r2
   1c454:	bl	11768 <fstatfs64@plt-0x20>
   1c458:	asrs	r6, r6, #2
   1c45c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c460:	mov	r4, #0
   1c464:	add	r4, r4, #1
   1c468:	ldr	r3, [r5], #4
   1c46c:	mov	r2, r9
   1c470:	mov	r1, r8
   1c474:	mov	r0, r7
   1c478:	blx	r3
   1c47c:	cmp	r6, r4
   1c480:	bne	1c464 <lchmod@@Base+0x4eac>
   1c484:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c488:			; <UNDEFINED> instruction: 0x00011abc
   1c48c:			; <UNDEFINED> instruction: 0x00011ab4
   1c490:	bx	lr
   1c494:	ldr	r3, [pc, #12]	; 1c4a8 <lchmod@@Base+0x4ef0>
   1c498:	mov	r1, #0
   1c49c:	add	r3, pc, r3
   1c4a0:	ldr	r2, [r3]
   1c4a4:	b	11a1c <__cxa_atexit@plt>
   1c4a8:	andeq	r1, r1, r0, ror #25

Disassembly of section .fini:

0001c4ac <.fini>:
   1c4ac:	push	{r3, lr}
   1c4b0:	pop	{r3, pc}
