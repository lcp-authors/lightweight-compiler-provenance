
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

00010f70 <.init>:
   10f70:	push	{r3, lr}
   10f74:	bl	11454 <dcngettext@plt+0x188>
   10f78:	pop	{r3, pc}

Disassembly of section .plt:

00010f7c <calloc@plt-0x14>:
   10f7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f80:	ldr	lr, [pc, #4]	; 10f8c <calloc@plt-0x4>
   10f84:	add	lr, pc, lr
   10f88:	ldr	pc, [lr, #8]!
   10f8c:	andeq	r8, r1, r4, ror r0

00010f90 <calloc@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #24, 20	; 0x18000
   10f98:	ldr	pc, [ip, #116]!	; 0x74

00010f9c <fputs_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #24, 20	; 0x18000
   10fa4:	ldr	pc, [ip, #108]!	; 0x6c

00010fa8 <raise@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #24, 20	; 0x18000
   10fb0:	ldr	pc, [ip, #100]!	; 0x64

00010fb4 <gmtime_r@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #24, 20	; 0x18000
   10fbc:	ldr	pc, [ip, #92]!	; 0x5c

00010fc0 <strcmp@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #24, 20	; 0x18000
   10fc8:	ldr	pc, [ip, #84]!	; 0x54

00010fcc <mktime@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #24, 20	; 0x18000
   10fd4:	ldr	pc, [ip, #76]!	; 0x4c

00010fd8 <fflush@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #24, 20	; 0x18000
   10fe0:	ldr	pc, [ip, #68]!	; 0x44

00010fe4 <utmpxname@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #24, 20	; 0x18000
   10fec:	ldr	pc, [ip, #60]!	; 0x3c

00010ff0 <free@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #24, 20	; 0x18000
   10ff8:	ldr	pc, [ip, #52]!	; 0x34

00010ffc <_exit@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #24, 20	; 0x18000
   11004:	ldr	pc, [ip, #44]!	; 0x2c

00011008 <memcpy@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #24, 20	; 0x18000
   11010:	ldr	pc, [ip, #36]!	; 0x24

00011014 <mbsinit@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #24, 20	; 0x18000
   1101c:	ldr	pc, [ip, #28]!

00011020 <time@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #24, 20	; 0x18000
   11028:	ldr	pc, [ip, #20]!

0001102c <memcmp@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #24, 20	; 0x18000
   11034:	ldr	pc, [ip, #12]!

00011038 <fputc_unlocked@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #24, 20	; 0x18000
   11040:	ldr	pc, [ip, #4]!

00011044 <dcgettext@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #94208	; 0x17000
   1104c:	ldr	pc, [ip, #4092]!	; 0xffc

00011050 <setutxent@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #94208	; 0x17000
   11058:	ldr	pc, [ip, #4084]!	; 0xff4

0001105c <realloc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #94208	; 0x17000
   11064:	ldr	pc, [ip, #4076]!	; 0xfec

00011068 <localtime_r@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #94208	; 0x17000
   11070:	ldr	pc, [ip, #4068]!	; 0xfe4

00011074 <textdomain@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #94208	; 0x17000
   1107c:	ldr	pc, [ip, #4060]!	; 0xfdc

00011080 <iswprint@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #94208	; 0x17000
   11088:	ldr	pc, [ip, #4052]!	; 0xfd4

0001108c <tzset@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #94208	; 0x17000
   11094:	ldr	pc, [ip, #4044]!	; 0xfcc

00011098 <fwrite@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #94208	; 0x17000
   110a0:	ldr	pc, [ip, #4036]!	; 0xfc4

000110a4 <lseek64@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #94208	; 0x17000
   110ac:	ldr	pc, [ip, #4028]!	; 0xfbc

000110b0 <__ctype_get_mb_cur_max@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #94208	; 0x17000
   110b8:	ldr	pc, [ip, #4020]!	; 0xfb4

000110bc <__fpending@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #94208	; 0x17000
   110c4:	ldr	pc, [ip, #4012]!	; 0xfac

000110c8 <mbrtowc@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #94208	; 0x17000
   110d0:	ldr	pc, [ip, #4004]!	; 0xfa4

000110d4 <error@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #94208	; 0x17000
   110dc:	ldr	pc, [ip, #3996]!	; 0xf9c

000110e0 <getenv@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #94208	; 0x17000
   110e8:	ldr	pc, [ip, #3988]!	; 0xf94

000110ec <malloc@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #94208	; 0x17000
   110f4:	ldr	pc, [ip, #3980]!	; 0xf8c

000110f8 <__libc_start_main@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #94208	; 0x17000
   11100:	ldr	pc, [ip, #3972]!	; 0xf84

00011104 <strftime@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #94208	; 0x17000
   1110c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011110 <__freading@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #94208	; 0x17000
   11118:	ldr	pc, [ip, #3956]!	; 0xf74

0001111c <localtime@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #94208	; 0x17000
   11124:	ldr	pc, [ip, #3948]!	; 0xf6c

00011128 <__ctype_tolower_loc@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #94208	; 0x17000
   11130:	ldr	pc, [ip, #3940]!	; 0xf64

00011134 <__ctype_toupper_loc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #94208	; 0x17000
   1113c:	ldr	pc, [ip, #3932]!	; 0xf5c

00011140 <__gmon_start__@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #94208	; 0x17000
   11148:	ldr	pc, [ip, #3924]!	; 0xf54

0001114c <getopt_long@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #94208	; 0x17000
   11154:	ldr	pc, [ip, #3916]!	; 0xf4c

00011158 <kill@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #94208	; 0x17000
   11160:	ldr	pc, [ip, #3908]!	; 0xf44

00011164 <__ctype_b_loc@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #94208	; 0x17000
   1116c:	ldr	pc, [ip, #3900]!	; 0xf3c

00011170 <exit@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #94208	; 0x17000
   11178:	ldr	pc, [ip, #3892]!	; 0xf34

0001117c <strlen@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #94208	; 0x17000
   11184:	ldr	pc, [ip, #3884]!	; 0xf2c

00011188 <setenv@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #94208	; 0x17000
   11190:	ldr	pc, [ip, #3876]!	; 0xf24

00011194 <__errno_location@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #94208	; 0x17000
   1119c:	ldr	pc, [ip, #3868]!	; 0xf1c

000111a0 <__cxa_atexit@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #94208	; 0x17000
   111a8:	ldr	pc, [ip, #3860]!	; 0xf14

000111ac <memset@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #94208	; 0x17000
   111b4:	ldr	pc, [ip, #3852]!	; 0xf0c

000111b8 <strncpy@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #94208	; 0x17000
   111c0:	ldr	pc, [ip, #3844]!	; 0xf04

000111c4 <__printf_chk@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #94208	; 0x17000
   111cc:	ldr	pc, [ip, #3836]!	; 0xefc

000111d0 <fileno@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #94208	; 0x17000
   111d8:	ldr	pc, [ip, #3828]!	; 0xef4

000111dc <__fprintf_chk@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #94208	; 0x17000
   111e4:	ldr	pc, [ip, #3820]!	; 0xeec

000111e8 <fclose@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #94208	; 0x17000
   111f0:	ldr	pc, [ip, #3812]!	; 0xee4

000111f4 <fseeko64@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #94208	; 0x17000
   111fc:	ldr	pc, [ip, #3804]!	; 0xedc

00011200 <getloadavg@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #94208	; 0x17000
   11208:	ldr	pc, [ip, #3796]!	; 0xed4

0001120c <strtod_l@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #94208	; 0x17000
   11214:	ldr	pc, [ip, #3788]!	; 0xecc

00011218 <endutxent@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #94208	; 0x17000
   11220:	ldr	pc, [ip, #3780]!	; 0xec4

00011224 <__overflow@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #94208	; 0x17000
   1122c:	ldr	pc, [ip, #3772]!	; 0xebc

00011230 <setlocale@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #94208	; 0x17000
   11238:	ldr	pc, [ip, #3764]!	; 0xeb4

0001123c <strrchr@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #94208	; 0x17000
   11244:	ldr	pc, [ip, #3756]!	; 0xeac

00011248 <nl_langinfo@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #94208	; 0x17000
   11250:	ldr	pc, [ip, #3748]!	; 0xea4

00011254 <fputc@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #94208	; 0x17000
   1125c:	ldr	pc, [ip, #3740]!	; 0xe9c

00011260 <newlocale@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #94208	; 0x17000
   11268:	ldr	pc, [ip, #3732]!	; 0xe94

0001126c <timegm@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #94208	; 0x17000
   11274:	ldr	pc, [ip, #3724]!	; 0xe8c

00011278 <fopen64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #94208	; 0x17000
   11280:	ldr	pc, [ip, #3716]!	; 0xe84

00011284 <fgets_unlocked@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #94208	; 0x17000
   1128c:	ldr	pc, [ip, #3708]!	; 0xe7c

00011290 <bindtextdomain@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #94208	; 0x17000
   11298:	ldr	pc, [ip, #3700]!	; 0xe74

0001129c <unsetenv@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #94208	; 0x17000
   112a4:	ldr	pc, [ip, #3692]!	; 0xe6c

000112a8 <strncmp@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #94208	; 0x17000
   112b0:	ldr	pc, [ip, #3684]!	; 0xe64

000112b4 <abort@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #94208	; 0x17000
   112bc:	ldr	pc, [ip, #3676]!	; 0xe5c

000112c0 <getutxent@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #94208	; 0x17000
   112c8:	ldr	pc, [ip, #3668]!	; 0xe54

000112cc <dcngettext@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #94208	; 0x17000
   112d4:	ldr	pc, [ip, #3660]!	; 0xe4c

Disassembly of section .text:

000112d8 <.text>:
   112d8:	mov	r4, r0
   112dc:	str	r7, [sp, #-8]!
   112e0:	mov	r6, r1
   112e4:	ldr	r0, [r1]
   112e8:	mov	r8, #1
   112ec:	mov	r7, #0
   112f0:	str	lr, [sp, #4]
   112f4:	sub	sp, sp, #32
   112f8:	movw	r5, #37248	; 0x9180
   112fc:	movt	r5, #2
   11300:	bl	14318 <dcngettext@plt+0x304c>
   11304:	movw	r1, #32832	; 0x8040
   11308:	movt	r1, #1
   1130c:	mov	r0, #6
   11310:	bl	11230 <setlocale@plt>
   11314:	movw	r1, #33128	; 0x8168
   11318:	movt	r1, #1
   1131c:	movw	r0, #32960	; 0x80c0
   11320:	movt	r0, #1
   11324:	bl	11290 <bindtextdomain@plt>
   11328:	movw	r0, #32960	; 0x80c0
   1132c:	movt	r0, #1
   11330:	bl	11074 <textdomain@plt>
   11334:	movw	r0, #7704	; 0x1e18
   11338:	movt	r0, #1
   1133c:	bl	17d28 <dcngettext@plt+0x6a5c>
   11340:	movw	r3, #37168	; 0x9130
   11344:	movt	r3, #2
   11348:	str	r8, [sp, #4]
   1134c:	ldr	ip, [r3]
   11350:	movw	r2, #33152	; 0x8180
   11354:	movt	r2, #1
   11358:	movw	r1, #33164	; 0x818c
   1135c:	movt	r1, #1
   11360:	movw	r3, #33180	; 0x819c
   11364:	movt	r3, #1
   11368:	mov	r0, r4
   1136c:	str	r2, [sp, #20]
   11370:	movw	r2, #6652	; 0x19fc
   11374:	movt	r2, #1
   11378:	str	ip, [sp]
   1137c:	str	r2, [sp, #8]
   11380:	movw	r2, #32344	; 0x7e58
   11384:	movt	r2, #1
   11388:	str	r3, [sp, #12]
   1138c:	movw	r3, #32956	; 0x80bc
   11390:	movt	r3, #1
   11394:	str	r1, [sp, #16]
   11398:	mov	r1, r6
   1139c:	str	r7, [sp, #24]
   113a0:	bl	14230 <dcngettext@plt+0x2f64>
   113a4:	ldr	r3, [r5]
   113a8:	subs	r4, r4, r3
   113ac:	beq	113fc <dcngettext@plt+0x130>
   113b0:	cmp	r4, r8
   113b4:	beq	1140c <dcngettext@plt+0x140>
   113b8:	mov	r2, #5
   113bc:	movw	r1, #33200	; 0x81b0
   113c0:	movt	r1, #1
   113c4:	mov	r0, r7
   113c8:	bl	11044 <dcgettext@plt>
   113cc:	ldr	r3, [r5]
   113d0:	mov	r4, r0
   113d4:	add	r3, r3, #1
   113d8:	ldr	r0, [r6, r3, lsl #2]
   113dc:	bl	16608 <dcngettext@plt+0x533c>
   113e0:	mov	r3, r0
   113e4:	mov	r2, r4
   113e8:	mov	r0, r7
   113ec:	mov	r1, r7
   113f0:	bl	110d4 <error@plt>
   113f4:	mov	r0, r8
   113f8:	bl	119fc <dcngettext@plt+0x730>
   113fc:	movw	r0, #32772	; 0x8004
   11400:	movt	r0, #1
   11404:	mov	r1, r8
   11408:	bl	11990 <dcngettext@plt+0x6c4>
   1140c:	mov	r1, r7
   11410:	ldr	r0, [r6, r3, lsl #2]
   11414:	bl	11990 <dcngettext@plt+0x6c4>
   11418:	mov	fp, #0
   1141c:	mov	lr, #0
   11420:	pop	{r1}		; (ldr r1, [sp], #4)
   11424:	mov	r2, sp
   11428:	push	{r2}		; (str r2, [sp, #-4]!)
   1142c:	push	{r0}		; (str r0, [sp, #-4]!)
   11430:	ldr	ip, [pc, #16]	; 11448 <dcngettext@plt+0x17c>
   11434:	push	{ip}		; (str ip, [sp, #-4]!)
   11438:	ldr	r0, [pc, #12]	; 1144c <dcngettext@plt+0x180>
   1143c:	ldr	r3, [pc, #12]	; 11450 <dcngettext@plt+0x184>
   11440:	bl	110f8 <__libc_start_main@plt>
   11444:	bl	112b4 <abort@plt>
   11448:	andeq	r7, r1, r4, lsr #26
   1144c:	ldrdeq	r1, [r1], -r8
   11450:	andeq	r7, r1, r4, asr #25
   11454:	ldr	r3, [pc, #20]	; 11470 <dcngettext@plt+0x1a4>
   11458:	ldr	r2, [pc, #20]	; 11474 <dcngettext@plt+0x1a8>
   1145c:	add	r3, pc, r3
   11460:	ldr	r2, [r3, r2]
   11464:	cmp	r2, #0
   11468:	bxeq	lr
   1146c:	b	11140 <__gmon_start__@plt>
   11470:	muleq	r1, ip, fp
   11474:	andeq	r0, r0, r4, lsr #2
   11478:	ldr	r0, [pc, #24]	; 11498 <dcngettext@plt+0x1cc>
   1147c:	ldr	r3, [pc, #24]	; 1149c <dcngettext@plt+0x1d0>
   11480:	cmp	r3, r0
   11484:	bxeq	lr
   11488:	ldr	r3, [pc, #16]	; 114a0 <dcngettext@plt+0x1d4>
   1148c:	cmp	r3, #0
   11490:	bxeq	lr
   11494:	bx	r3
   11498:	andeq	r9, r2, r8, ror r1
   1149c:	andeq	r9, r2, r8, ror r1
   114a0:	andeq	r0, r0, r0
   114a4:	ldr	r0, [pc, #36]	; 114d0 <dcngettext@plt+0x204>
   114a8:	ldr	r1, [pc, #36]	; 114d4 <dcngettext@plt+0x208>
   114ac:	sub	r1, r1, r0
   114b0:	asr	r1, r1, #2
   114b4:	add	r1, r1, r1, lsr #31
   114b8:	asrs	r1, r1, #1
   114bc:	bxeq	lr
   114c0:	ldr	r3, [pc, #16]	; 114d8 <dcngettext@plt+0x20c>
   114c4:	cmp	r3, #0
   114c8:	bxeq	lr
   114cc:	bx	r3
   114d0:	andeq	r9, r2, r8, ror r1
   114d4:	andeq	r9, r2, r8, ror r1
   114d8:	andeq	r0, r0, r0
   114dc:	push	{r4, lr}
   114e0:	ldr	r4, [pc, #24]	; 11500 <dcngettext@plt+0x234>
   114e4:	ldrb	r3, [r4]
   114e8:	cmp	r3, #0
   114ec:	popne	{r4, pc}
   114f0:	bl	11478 <dcngettext@plt+0x1ac>
   114f4:	mov	r3, #1
   114f8:	strb	r3, [r4]
   114fc:	pop	{r4, pc}
   11500:	muleq	r2, r4, r1
   11504:	b	114a4 <dcngettext@plt+0x1d8>
   11508:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1150c:	mov	r4, r1
   11510:	movw	r1, #32132	; 0x7d84
   11514:	movt	r1, #1
   11518:	strd	r6, [sp, #8]
   1151c:	strd	r8, [sp, #16]
   11520:	mov	r8, r0
   11524:	movw	r0, #32136	; 0x7d88
   11528:	movt	r0, #1
   1152c:	strd	sl, [sp, #24]
   11530:	sub	r5, r8, #1
   11534:	str	lr, [sp, #32]
   11538:	sub	sp, sp, #8192	; 0x2000
   1153c:	sub	sp, sp, #20
   11540:	bl	11278 <fopen64@plt>
   11544:	subs	r6, r0, #0
   11548:	beq	1181c <dcngettext@plt+0x550>
   1154c:	add	r7, sp, #16
   11550:	mov	r2, r6
   11554:	mov	r0, r7
   11558:	mov	r1, #8192	; 0x2000
   1155c:	bl	11284 <fgets_unlocked@plt>
   11560:	cmp	r7, r0
   11564:	beq	118cc <dcngettext@plt+0x600>
   11568:	mov	r0, r6
   1156c:	bl	11f04 <dcngettext@plt+0xc38>
   11570:	cmp	r8, #0
   11574:	beq	11978 <dcngettext@plt+0x6ac>
   11578:	mov	r6, #0
   1157c:	mov	r9, #0
   11580:	mov	r8, r9
   11584:	ldrb	r1, [r4, #44]	; 0x2c
   11588:	ldrsh	r3, [r4]
   1158c:	cmp	r1, #0
   11590:	beq	115a0 <dcngettext@plt+0x2d4>
   11594:	cmp	r3, #7
   11598:	addeq	r8, r8, #1
   1159c:	beq	115a8 <dcngettext@plt+0x2dc>
   115a0:	cmp	r3, #2
   115a4:	ldreq	r9, [r4, #340]	; 0x154
   115a8:	sub	r5, r5, #1
   115ac:	add	r4, r4, #384	; 0x180
   115b0:	cmn	r5, #1
   115b4:	bne	11584 <dcngettext@plt+0x2b8>
   115b8:	mov	r0, #0
   115bc:	bl	11020 <time@plt>
   115c0:	cmp	r6, #0
   115c4:	str	r0, [r7, #-4]
   115c8:	bne	115d8 <dcngettext@plt+0x30c>
   115cc:	cmp	r9, #0
   115d0:	subne	r6, r0, r9
   115d4:	beq	11830 <dcngettext@plt+0x564>
   115d8:	add	r9, sp, #12
   115dc:	movw	r3, #17671	; 0x4507
   115e0:	movt	r3, #49710	; 0xc22e
   115e4:	asr	r4, r6, #31
   115e8:	movw	r1, #44672	; 0xae80
   115ec:	movt	r1, #65534	; 0xfffe
   115f0:	smull	r3, r2, r3, r6
   115f4:	movw	r5, #46021	; 0xb3c5
   115f8:	movt	r5, #37282	; 0x91a2
   115fc:	movw	r3, #61936	; 0xf1f0
   11600:	movt	r3, #65535	; 0xffff
   11604:	movw	ip, #34953	; 0x8889
   11608:	movt	ip, #34952	; 0x8888
   1160c:	add	r2, r2, r6
   11610:	mov	r0, r9
   11614:	rsb	r4, r4, r2, asr #16
   11618:	mla	r1, r1, r4, r6
   1161c:	smull	r2, r5, r5, r1
   11620:	asr	r2, r1, #31
   11624:	add	r5, r5, r1
   11628:	rsb	r5, r2, r5, asr #11
   1162c:	mla	r1, r3, r5, r1
   11630:	smull	r3, ip, ip, r1
   11634:	asr	r9, r1, #31
   11638:	add	r1, ip, r1
   1163c:	rsb	r9, r9, r1, asr #5
   11640:	bl	1111c <localtime@plt>
   11644:	subs	sl, r0, #0
   11648:	beq	1185c <dcngettext@plt+0x590>
   1164c:	movw	r3, #37260	; 0x918c
   11650:	movt	r3, #2
   11654:	ldr	fp, [r3]
   11658:	mov	r2, #5
   1165c:	movw	r1, #32176	; 0x7db0
   11660:	movt	r1, #1
   11664:	mov	r0, #0
   11668:	bl	11044 <dcgettext@plt>
   1166c:	mov	ip, #0
   11670:	mov	r1, r0
   11674:	mov	r2, sl
   11678:	mov	r3, ip
   1167c:	mov	r0, fp
   11680:	str	ip, [sp]
   11684:	bl	14040 <dcngettext@plt+0x2d74>
   11688:	cmn	r6, #1
   1168c:	beq	118a8 <dcngettext@plt+0x5dc>
   11690:	movw	r3, #20863	; 0x517f
   11694:	movt	r3, #1
   11698:	cmp	r6, r3
   1169c:	ble	1187c <dcngettext@plt+0x5b0>
   116a0:	asr	r1, r4, #31
   116a4:	mov	r3, #0
   116a8:	mvn	r2, #0
   116ac:	mov	r0, r4
   116b0:	cmp	r1, r3
   116b4:	cmpeq	r4, r2
   116b8:	movls	r3, r4
   116bc:	bls	116d8 <dcngettext@plt+0x40c>
   116c0:	movw	r2, #16960	; 0x4240
   116c4:	movt	r2, #15
   116c8:	mov	r3, #0
   116cc:	bl	17b50 <dcngettext@plt+0x6884>
   116d0:	add	r3, r2, #999424	; 0xf4000
   116d4:	add	r3, r3, #576	; 0x240
   116d8:	mov	r0, #5
   116dc:	movw	r2, #32224	; 0x7de0
   116e0:	movt	r2, #1
   116e4:	movw	r1, #32248	; 0x7df8
   116e8:	movt	r1, #1
   116ec:	str	r0, [sp]
   116f0:	mov	r0, #0
   116f4:	bl	112cc <dcngettext@plt>
   116f8:	mov	r1, r0
   116fc:	mov	r3, r5
   11700:	str	r9, [sp]
   11704:	mov	r2, r4
   11708:	mov	r0, #1
   1170c:	bl	111c4 <__printf_chk@plt>
   11710:	mov	r5, #5
   11714:	mov	r3, r8
   11718:	movw	r2, #32288	; 0x7e20
   1171c:	movt	r2, #1
   11720:	movw	r1, #32300	; 0x7e2c
   11724:	movt	r1, #1
   11728:	str	r5, [sp]
   1172c:	mov	r0, #0
   11730:	bl	112cc <dcngettext@plt>
   11734:	mov	r1, r0
   11738:	mov	r2, r8
   1173c:	mov	r0, #1
   11740:	bl	111c4 <__printf_chk@plt>
   11744:	mov	r1, #3
   11748:	mov	r0, r7
   1174c:	bl	11200 <getloadavg@plt>
   11750:	cmn	r0, #1
   11754:	mov	r4, r0
   11758:	beq	117e4 <dcngettext@plt+0x518>
   1175c:	cmp	r0, #0
   11760:	ble	11788 <dcngettext@plt+0x4bc>
   11764:	mov	r2, r5
   11768:	movw	r1, #32312	; 0x7e38
   1176c:	movt	r1, #1
   11770:	mov	r0, #0
   11774:	bl	11044 <dcgettext@plt>
   11778:	mov	r1, r0
   1177c:	mov	r0, #1
   11780:	ldrd	r2, [r7]
   11784:	bl	111c4 <__printf_chk@plt>
   11788:	cmp	r4, #1
   1178c:	bgt	117b4 <dcngettext@plt+0x4e8>
   11790:	beq	117e4 <dcngettext@plt+0x518>
   11794:	add	sp, sp, #8192	; 0x2000
   11798:	add	sp, sp, #20
   1179c:	ldrd	r4, [sp]
   117a0:	ldrd	r6, [sp, #8]
   117a4:	ldrd	r8, [sp, #16]
   117a8:	ldrd	sl, [sp, #24]
   117ac:	add	sp, sp, #32
   117b0:	pop	{pc}		; (ldr pc, [sp], #4)
   117b4:	movw	r1, #32336	; 0x7e50
   117b8:	movt	r1, #1
   117bc:	ldrd	r2, [r7, #8]
   117c0:	mov	r0, #1
   117c4:	bl	111c4 <__printf_chk@plt>
   117c8:	cmp	r4, #2
   117cc:	beq	117e4 <dcngettext@plt+0x518>
   117d0:	movw	r1, #32336	; 0x7e50
   117d4:	movt	r1, #1
   117d8:	ldrd	r2, [r7, #16]
   117dc:	mov	r0, #1
   117e0:	bl	111c4 <__printf_chk@plt>
   117e4:	movw	r3, #37260	; 0x918c
   117e8:	movt	r3, #2
   117ec:	ldr	r0, [r3]
   117f0:	ldr	r3, [r0, #20]
   117f4:	ldr	r2, [r0, #24]
   117f8:	cmp	r3, r2
   117fc:	addcc	r1, r3, #1
   11800:	movcc	r2, #10
   11804:	strcc	r1, [r0, #20]
   11808:	strbcc	r2, [r3]
   1180c:	bcc	11794 <dcngettext@plt+0x4c8>
   11810:	mov	r1, #10
   11814:	bl	11224 <__overflow@plt>
   11818:	b	11794 <dcngettext@plt+0x4c8>
   1181c:	cmp	r8, #0
   11820:	addne	r7, sp, #16
   11824:	bne	1157c <dcngettext@plt+0x2b0>
   11828:	bl	11020 <time@plt>
   1182c:	str	r0, [sp, #12]
   11830:	bl	11194 <__errno_location@plt>
   11834:	ldr	r4, [r0]
   11838:	mov	r2, #5
   1183c:	movw	r1, #32152	; 0x7d98
   11840:	movt	r1, #1
   11844:	mov	r0, #0
   11848:	bl	11044 <dcgettext@plt>
   1184c:	mov	r2, r0
   11850:	mov	r0, #1
   11854:	mov	r1, r4
   11858:	bl	110d4 <error@plt>
   1185c:	mov	r2, #5
   11860:	movw	r1, #32188	; 0x7dbc
   11864:	movt	r1, #1
   11868:	bl	11044 <dcgettext@plt>
   1186c:	mov	r1, r0
   11870:	mov	r0, #1
   11874:	bl	111c4 <__printf_chk@plt>
   11878:	b	11688 <dcngettext@plt+0x3bc>
   1187c:	mov	r2, #5
   11880:	movw	r1, #32272	; 0x7e10
   11884:	movt	r1, #1
   11888:	mov	r0, #0
   1188c:	bl	11044 <dcgettext@plt>
   11890:	mov	r1, r0
   11894:	mov	r3, r9
   11898:	mov	r2, r5
   1189c:	mov	r0, #1
   118a0:	bl	111c4 <__printf_chk@plt>
   118a4:	b	11710 <dcngettext@plt+0x444>
   118a8:	mov	r2, #5
   118ac:	movw	r1, #32200	; 0x7dc8
   118b0:	movt	r1, #1
   118b4:	mov	r0, #0
   118b8:	bl	11044 <dcgettext@plt>
   118bc:	mov	r1, r0
   118c0:	mov	r0, #1
   118c4:	bl	111c4 <__printf_chk@plt>
   118c8:	b	11710 <dcngettext@plt+0x444>
   118cc:	sub	r9, r7, #4
   118d0:	mov	r1, r9
   118d4:	bl	11d68 <dcngettext@plt+0xa9c>
   118d8:	ldr	sl, [r7, #-4]
   118dc:	cmp	sl, r7
   118e0:	beq	11958 <dcngettext@plt+0x68c>
   118e4:	vcmpe.f64	d0, #0.0
   118e8:	mov	r0, r6
   118ec:	vmrs	APSR_nzcv, fpscr
   118f0:	blt	11934 <dcngettext@plt+0x668>
   118f4:	vldr	d7, [pc, #140]	; 11988 <dcngettext@plt+0x6bc>
   118f8:	vcmpe.f64	d0, d7
   118fc:	vmrs	APSR_nzcv, fpscr
   11900:	bpl	11934 <dcngettext@plt+0x668>
   11904:	vcvt.s32.f64	s15, d0
   11908:	vmov	r6, s15
   1190c:	bl	11f04 <dcngettext@plt+0xc38>
   11910:	cmp	r8, #0
   11914:	bne	1157c <dcngettext@plt+0x2b0>
   11918:	mov	r0, r8
   1191c:	bl	11020 <time@plt>
   11920:	cmp	r6, #0
   11924:	str	r0, [r7, #-4]
   11928:	beq	11830 <dcngettext@plt+0x564>
   1192c:	mov	r8, #0
   11930:	b	115dc <dcngettext@plt+0x310>
   11934:	bl	11f04 <dcngettext@plt+0xc38>
   11938:	cmp	r8, #0
   1193c:	mvnne	r6, #0
   11940:	bne	1157c <dcngettext@plt+0x2b0>
   11944:	mov	r0, r8
   11948:	mvn	r6, #0
   1194c:	bl	11020 <time@plt>
   11950:	str	r0, [r7, #-4]
   11954:	b	1192c <dcngettext@plt+0x660>
   11958:	mov	r0, r6
   1195c:	bl	11f04 <dcngettext@plt+0xc38>
   11960:	cmp	r8, #0
   11964:	bne	11578 <dcngettext@plt+0x2ac>
   11968:	mov	r0, r8
   1196c:	bl	11020 <time@plt>
   11970:	str	r0, [sl, #-4]
   11974:	b	11830 <dcngettext@plt+0x564>
   11978:	mov	r0, r8
   1197c:	bl	11020 <time@plt>
   11980:	str	r0, [r7, #-4]
   11984:	b	11830 <dcngettext@plt+0x564>
   11988:			; <UNDEFINED> instruction: 0xffc00000
   1198c:	ldrshmi	pc, [pc, #255]	; 11a93 <dcngettext@plt+0x7c7>	; <UNPREDICTABLE>
   11990:	mov	r4, #0
   11994:	push	{lr}		; (str lr, [sp, #-4]!)
   11998:	sub	sp, sp, #12
   1199c:	mov	r3, r1
   119a0:	add	r2, sp, #4
   119a4:	mov	r1, sp
   119a8:	mov	r6, r0
   119ac:	str	r4, [sp, #4]
   119b0:	bl	166a4 <dcngettext@plt+0x53d8>
   119b4:	subs	r5, r0, #0
   119b8:	bne	119cc <dcngettext@plt+0x700>
   119bc:	ldrd	r0, [sp]
   119c0:	bl	11508 <dcngettext@plt+0x23c>
   119c4:	mov	r0, r5
   119c8:	bl	11170 <exit@plt>
   119cc:	bl	11194 <__errno_location@plt>
   119d0:	ldr	r5, [r0]
   119d4:	mov	r2, r6
   119d8:	mov	r1, #3
   119dc:	mov	r0, r4
   119e0:	bl	16430 <dcngettext@plt+0x5164>
   119e4:	mov	r3, r0
   119e8:	movw	r2, #33364	; 0x8254
   119ec:	movt	r2, #1
   119f0:	mov	r0, #1
   119f4:	mov	r1, r5
   119f8:	bl	110d4 <error@plt>
   119fc:	subs	r6, r0, #0
   11a00:	str	r7, [sp, #-8]!
   11a04:	str	lr, [sp, #4]
   11a08:	sub	sp, sp, #56	; 0x38
   11a0c:	beq	11a54 <dcngettext@plt+0x788>
   11a10:	movw	r3, #37256	; 0x9188
   11a14:	movt	r3, #2
   11a18:	ldr	r4, [r3]
   11a1c:	mov	r2, #5
   11a20:	movw	r1, #32352	; 0x7e60
   11a24:	movt	r1, #1
   11a28:	mov	r0, #0
   11a2c:	bl	11044 <dcgettext@plt>
   11a30:	movw	r3, #37284	; 0x91a4
   11a34:	movt	r3, #2
   11a38:	mov	r2, r0
   11a3c:	mov	r1, #1
   11a40:	ldr	r3, [r3]
   11a44:	mov	r0, r4
   11a48:	bl	111dc <__fprintf_chk@plt>
   11a4c:	mov	r0, r6
   11a50:	bl	11170 <exit@plt>
   11a54:	mov	r2, #5
   11a58:	movw	r1, #32392	; 0x7e88
   11a5c:	movt	r1, #1
   11a60:	movw	r7, #37260	; 0x918c
   11a64:	movt	r7, #2
   11a68:	bl	11044 <dcgettext@plt>
   11a6c:	movw	r3, #37284	; 0x91a4
   11a70:	movt	r3, #2
   11a74:	mov	r1, r0
   11a78:	mov	r0, #1
   11a7c:	ldr	r2, [r3]
   11a80:	bl	111c4 <__printf_chk@plt>
   11a84:	mov	r2, #5
   11a88:	movw	r1, #32424	; 0x7ea8
   11a8c:	movt	r1, #1
   11a90:	mov	r0, r6
   11a94:	bl	11044 <dcgettext@plt>
   11a98:	mov	r1, r0
   11a9c:	mov	r0, #1
   11aa0:	bl	111c4 <__printf_chk@plt>
   11aa4:	mov	r2, #5
   11aa8:	movw	r1, #32612	; 0x7f64
   11aac:	movt	r1, #1
   11ab0:	mov	r0, r6
   11ab4:	bl	11044 <dcgettext@plt>
   11ab8:	mov	r1, r0
   11abc:	mov	r0, #1
   11ac0:	bl	111c4 <__printf_chk@plt>
   11ac4:	mov	r2, #5
   11ac8:	movw	r1, #32696	; 0x7fb8
   11acc:	movt	r1, #1
   11ad0:	mov	r0, r6
   11ad4:	bl	11044 <dcgettext@plt>
   11ad8:	mov	r1, r0
   11adc:	movw	r3, #32756	; 0x7ff4
   11ae0:	movt	r3, #1
   11ae4:	movw	r2, #32772	; 0x8004
   11ae8:	movt	r2, #1
   11aec:	mov	r0, #1
   11af0:	bl	111c4 <__printf_chk@plt>
   11af4:	mov	r2, #5
   11af8:	movw	r1, #32788	; 0x8014
   11afc:	movt	r1, #1
   11b00:	mov	r0, r6
   11b04:	bl	11044 <dcgettext@plt>
   11b08:	ldr	r1, [r7]
   11b0c:	bl	10f9c <fputs_unlocked@plt>
   11b10:	mov	r2, #5
   11b14:	movw	r1, #32836	; 0x8044
   11b18:	movt	r1, #1
   11b1c:	mov	r0, r6
   11b20:	bl	11044 <dcgettext@plt>
   11b24:	ldr	r1, [r7]
   11b28:	bl	10f9c <fputs_unlocked@plt>
   11b2c:	movw	lr, #32076	; 0x7d4c
   11b30:	movt	lr, #1
   11b34:	ldr	ip, [lr]
   11b38:	ldr	r4, [lr, #4]
   11b3c:	ldrd	r8, [lr, #8]
   11b40:	subs	r1, ip, #0
   11b44:	str	ip, [sp]
   11b48:	ldrd	r2, [lr, #16]
   11b4c:	str	r4, [sp, #4]
   11b50:	ldrd	r4, [lr, #24]
   11b54:	strd	r8, [sp, #8]
   11b58:	ldrd	r8, [lr, #32]
   11b5c:	strd	r2, [sp, #16]
   11b60:	ldrd	r2, [lr, #40]	; 0x28
   11b64:	strd	r4, [sp, #24]
   11b68:	ldrd	r4, [lr, #48]	; 0x30
   11b6c:	strd	r8, [sp, #32]
   11b70:	strd	r2, [sp, #40]	; 0x28
   11b74:	strd	r4, [sp, #48]	; 0x30
   11b78:	movwne	r5, #32344	; 0x7e58
   11b7c:	mov	r4, sp
   11b80:	movtne	r5, #1
   11b84:	bne	11c7c <dcngettext@plt+0x9b0>
   11b88:	ldr	r4, [r4, #4]
   11b8c:	movw	r1, #32892	; 0x807c
   11b90:	movt	r1, #1
   11b94:	mov	r2, #5
   11b98:	cmp	r4, #0
   11b9c:	beq	11c90 <dcngettext@plt+0x9c4>
   11ba0:	mov	r0, #0
   11ba4:	bl	11044 <dcgettext@plt>
   11ba8:	mov	r1, r0
   11bac:	movw	r3, #32916	; 0x8094
   11bb0:	movt	r3, #1
   11bb4:	movw	r2, #32956	; 0x80bc
   11bb8:	movt	r2, #1
   11bbc:	mov	r0, #1
   11bc0:	bl	111c4 <__printf_chk@plt>
   11bc4:	mov	r1, #0
   11bc8:	mov	r0, #5
   11bcc:	bl	11230 <setlocale@plt>
   11bd0:	cmp	r0, #0
   11bd4:	movweq	r5, #32344	; 0x7e58
   11bd8:	movteq	r5, #1
   11bdc:	beq	11c00 <dcngettext@plt+0x934>
   11be0:	movw	r1, #32972	; 0x80cc
   11be4:	movt	r1, #1
   11be8:	mov	r2, #3
   11bec:	movw	r5, #32344	; 0x7e58
   11bf0:	movt	r5, #1
   11bf4:	bl	112a8 <strncmp@plt>
   11bf8:	cmp	r0, #0
   11bfc:	bne	11d48 <dcngettext@plt+0xa7c>
   11c00:	mov	r2, #5
   11c04:	movw	r1, #33048	; 0x8118
   11c08:	movt	r1, #1
   11c0c:	mov	r0, #0
   11c10:	bl	11044 <dcgettext@plt>
   11c14:	mov	r1, r0
   11c18:	movw	r3, #32344	; 0x7e58
   11c1c:	movt	r3, #1
   11c20:	movw	r2, #32916	; 0x8094
   11c24:	movt	r2, #1
   11c28:	mov	r0, #1
   11c2c:	bl	111c4 <__printf_chk@plt>
   11c30:	mov	r2, #5
   11c34:	movw	r1, #33076	; 0x8134
   11c38:	movt	r1, #1
   11c3c:	mov	r0, #0
   11c40:	bl	11044 <dcgettext@plt>
   11c44:	movw	r2, #33228	; 0x81cc
   11c48:	movt	r2, #1
   11c4c:	cmp	r4, r5
   11c50:	movw	r3, #32832	; 0x8040
   11c54:	movt	r3, #1
   11c58:	mov	r1, r0
   11c5c:	moveq	r3, r2
   11c60:	mov	r2, r4
   11c64:	mov	r0, #1
   11c68:	bl	111c4 <__printf_chk@plt>
   11c6c:	b	11a4c <dcngettext@plt+0x780>
   11c70:	ldr	r1, [r4, #8]!
   11c74:	cmp	r1, #0
   11c78:	beq	11b88 <dcngettext@plt+0x8bc>
   11c7c:	mov	r0, r5
   11c80:	bl	10fc0 <strcmp@plt>
   11c84:	cmp	r0, #0
   11c88:	bne	11c70 <dcngettext@plt+0x9a4>
   11c8c:	b	11b88 <dcngettext@plt+0x8bc>
   11c90:	mov	r0, r4
   11c94:	bl	11044 <dcgettext@plt>
   11c98:	mov	r1, r0
   11c9c:	movw	r3, #32916	; 0x8094
   11ca0:	movt	r3, #1
   11ca4:	movw	r2, #32956	; 0x80bc
   11ca8:	movt	r2, #1
   11cac:	mov	r0, #1
   11cb0:	bl	111c4 <__printf_chk@plt>
   11cb4:	mov	r1, r4
   11cb8:	mov	r0, #5
   11cbc:	bl	11230 <setlocale@plt>
   11cc0:	cmp	r0, #0
   11cc4:	beq	11ce0 <dcngettext@plt+0xa14>
   11cc8:	movw	r1, #32972	; 0x80cc
   11ccc:	movt	r1, #1
   11cd0:	mov	r2, #3
   11cd4:	bl	112a8 <strncmp@plt>
   11cd8:	cmp	r0, #0
   11cdc:	bne	11d3c <dcngettext@plt+0xa70>
   11ce0:	mov	r2, #5
   11ce4:	movw	r1, #33048	; 0x8118
   11ce8:	movt	r1, #1
   11cec:	mov	r0, #0
   11cf0:	bl	11044 <dcgettext@plt>
   11cf4:	mov	r1, r0
   11cf8:	movw	r3, #32344	; 0x7e58
   11cfc:	movt	r3, #1
   11d00:	movw	r2, #32916	; 0x8094
   11d04:	movt	r2, #1
   11d08:	mov	r0, #1
   11d0c:	bl	111c4 <__printf_chk@plt>
   11d10:	movw	r1, #33076	; 0x8134
   11d14:	movt	r1, #1
   11d18:	mov	r2, #5
   11d1c:	mov	r0, #0
   11d20:	bl	11044 <dcgettext@plt>
   11d24:	movw	r4, #32344	; 0x7e58
   11d28:	movt	r4, #1
   11d2c:	movw	r3, #33228	; 0x81cc
   11d30:	movt	r3, #1
   11d34:	mov	r1, r0
   11d38:	b	11c60 <dcngettext@plt+0x994>
   11d3c:	movw	r5, #32344	; 0x7e58
   11d40:	movt	r5, #1
   11d44:	mov	r4, r5
   11d48:	mov	r2, #5
   11d4c:	movw	r1, #32976	; 0x80d0
   11d50:	movt	r1, #1
   11d54:	mov	r0, #0
   11d58:	bl	11044 <dcgettext@plt>
   11d5c:	ldr	r1, [r7]
   11d60:	bl	10f9c <fputs_unlocked@plt>
   11d64:	b	11c00 <dcngettext@plt+0x934>
   11d68:	strd	r4, [sp, #-16]!
   11d6c:	movw	r4, #37272	; 0x9198
   11d70:	movt	r4, #2
   11d74:	ldr	r2, [r4]
   11d78:	mov	r5, r1
   11d7c:	str	r6, [sp, #8]
   11d80:	mov	r6, r0
   11d84:	str	lr, [sp, #12]
   11d88:	cmp	r2, #0
   11d8c:	beq	11dd4 <dcngettext@plt+0xb08>
   11d90:	ldr	r2, [r4]
   11d94:	cmp	r2, #0
   11d98:	beq	11db8 <dcngettext@plt+0xaec>
   11d9c:	mov	r1, r5
   11da0:	mov	r0, r6
   11da4:	ldrd	r4, [sp]
   11da8:	ldr	r6, [sp, #8]
   11dac:	ldr	lr, [sp, #12]
   11db0:	add	sp, sp, #16
   11db4:	b	1120c <strtod_l@plt>
   11db8:	cmp	r5, #0
   11dbc:	vldr	d0, [pc, #44]	; 11df0 <dcngettext@plt+0xb24>
   11dc0:	strne	r6, [r5]
   11dc4:	ldrd	r4, [sp]
   11dc8:	ldr	r6, [sp, #8]
   11dcc:	add	sp, sp, #12
   11dd0:	pop	{pc}		; (ldr pc, [sp], #4)
   11dd4:	movw	r1, #33344	; 0x8240
   11dd8:	movt	r1, #1
   11ddc:	movw	r0, #8127	; 0x1fbf
   11de0:	bl	11260 <newlocale@plt>
   11de4:	str	r0, [r4]
   11de8:	b	11d90 <dcngettext@plt+0xac4>
   11dec:	nop	{0}
	...
   11df8:	movw	r3, #37276	; 0x919c
   11dfc:	movt	r3, #2
   11e00:	str	r0, [r3]
   11e04:	bx	lr
   11e08:	movw	r3, #37276	; 0x919c
   11e0c:	movt	r3, #2
   11e10:	strb	r0, [r3, #4]
   11e14:	bx	lr
   11e18:	movw	r3, #37260	; 0x918c
   11e1c:	movt	r3, #2
   11e20:	strd	r4, [sp, #-16]!
   11e24:	ldr	r0, [r3]
   11e28:	str	r6, [sp, #8]
   11e2c:	str	lr, [sp, #12]
   11e30:	sub	sp, sp, #8
   11e34:	bl	17858 <dcngettext@plt+0x658c>
   11e38:	cmp	r0, #0
   11e3c:	beq	11e68 <dcngettext@plt+0xb9c>
   11e40:	movw	r4, #37276	; 0x919c
   11e44:	movt	r4, #2
   11e48:	ldrb	r6, [r4, #4]
   11e4c:	bl	11194 <__errno_location@plt>
   11e50:	mov	r5, r0
   11e54:	cmp	r6, #0
   11e58:	beq	11e94 <dcngettext@plt+0xbc8>
   11e5c:	ldr	r3, [r0]
   11e60:	cmp	r3, #32
   11e64:	bne	11e94 <dcngettext@plt+0xbc8>
   11e68:	movw	r3, #37256	; 0x9188
   11e6c:	movt	r3, #2
   11e70:	ldr	r0, [r3]
   11e74:	bl	17858 <dcngettext@plt+0x658c>
   11e78:	cmp	r0, #0
   11e7c:	bne	11edc <dcngettext@plt+0xc10>
   11e80:	add	sp, sp, #8
   11e84:	ldrd	r4, [sp]
   11e88:	ldr	r6, [sp, #8]
   11e8c:	add	sp, sp, #12
   11e90:	pop	{pc}		; (ldr pc, [sp], #4)
   11e94:	movw	r1, #33348	; 0x8244
   11e98:	movt	r1, #1
   11e9c:	mov	r2, #5
   11ea0:	mov	r0, #0
   11ea4:	bl	11044 <dcgettext@plt>
   11ea8:	mov	r6, r0
   11eac:	ldr	r0, [r4]
   11eb0:	cmp	r0, #0
   11eb4:	beq	11eec <dcngettext@plt+0xc20>
   11eb8:	ldr	r4, [r5]
   11ebc:	bl	1641c <dcngettext@plt+0x5150>
   11ec0:	mov	r3, r0
   11ec4:	movw	r2, #33360	; 0x8250
   11ec8:	movt	r2, #1
   11ecc:	mov	r0, #0
   11ed0:	str	r6, [sp]
   11ed4:	mov	r1, r4
   11ed8:	bl	110d4 <error@plt>
   11edc:	movw	r3, #37172	; 0x9134
   11ee0:	movt	r3, #2
   11ee4:	ldr	r0, [r3]
   11ee8:	bl	10ffc <_exit@plt>
   11eec:	mov	r3, r6
   11ef0:	movw	r2, #33364	; 0x8254
   11ef4:	movt	r2, #1
   11ef8:	ldr	r1, [r5]
   11efc:	bl	110d4 <error@plt>
   11f00:	b	11edc <dcngettext@plt+0xc10>
   11f04:	strd	r4, [sp, #-12]!
   11f08:	mov	r4, r0
   11f0c:	str	lr, [sp, #8]
   11f10:	sub	sp, sp, #12
   11f14:	bl	111d0 <fileno@plt>
   11f18:	cmp	r0, #0
   11f1c:	mov	r0, r4
   11f20:	blt	11fa4 <dcngettext@plt+0xcd8>
   11f24:	bl	11110 <__freading@plt>
   11f28:	cmp	r0, #0
   11f2c:	bne	11f70 <dcngettext@plt+0xca4>
   11f30:	mov	r0, r4
   11f34:	bl	11fb8 <dcngettext@plt+0xcec>
   11f38:	cmp	r0, #0
   11f3c:	beq	11fa0 <dcngettext@plt+0xcd4>
   11f40:	bl	11194 <__errno_location@plt>
   11f44:	mov	r5, r0
   11f48:	mov	r0, r4
   11f4c:	ldr	r4, [r5]
   11f50:	bl	111e8 <fclose@plt>
   11f54:	cmp	r4, #0
   11f58:	mvnne	r0, #0
   11f5c:	strne	r4, [r5]
   11f60:	add	sp, sp, #12
   11f64:	ldrd	r4, [sp]
   11f68:	add	sp, sp, #8
   11f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f70:	mov	r0, r4
   11f74:	bl	111d0 <fileno@plt>
   11f78:	mov	r1, #1
   11f7c:	mov	r2, #0
   11f80:	mov	r3, #0
   11f84:	str	r1, [sp]
   11f88:	bl	110a4 <lseek64@plt>
   11f8c:	mvn	r3, #0
   11f90:	mvn	r2, #0
   11f94:	cmp	r1, r3
   11f98:	cmpeq	r0, r2
   11f9c:	bne	11f30 <dcngettext@plt+0xc64>
   11fa0:	mov	r0, r4
   11fa4:	add	sp, sp, #12
   11fa8:	ldrd	r4, [sp]
   11fac:	ldr	lr, [sp, #8]
   11fb0:	add	sp, sp, #12
   11fb4:	b	111e8 <fclose@plt>
   11fb8:	str	r4, [sp, #-8]!
   11fbc:	subs	r4, r0, #0
   11fc0:	str	lr, [sp, #4]
   11fc4:	sub	sp, sp, #8
   11fc8:	beq	11fe4 <dcngettext@plt+0xd18>
   11fcc:	bl	11110 <__freading@plt>
   11fd0:	cmp	r0, #0
   11fd4:	beq	11fe4 <dcngettext@plt+0xd18>
   11fd8:	ldr	r3, [r4]
   11fdc:	tst	r3, #256	; 0x100
   11fe0:	bne	11ffc <dcngettext@plt+0xd30>
   11fe4:	mov	r0, r4
   11fe8:	add	sp, sp, #8
   11fec:	ldr	r4, [sp]
   11ff0:	ldr	lr, [sp, #4]
   11ff4:	add	sp, sp, #8
   11ff8:	b	10fd8 <fflush@plt>
   11ffc:	mov	r1, #1
   12000:	mov	r2, #0
   12004:	mov	r3, #0
   12008:	mov	r0, r4
   1200c:	str	r1, [sp]
   12010:	bl	1408c <dcngettext@plt+0x2dc0>
   12014:	b	11fe4 <dcngettext@plt+0xd18>
   12018:	cmp	r2, #0
   1201c:	bxeq	lr
   12020:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12024:	mov	r4, r1
   12028:	add	r5, r1, r2
   1202c:	strd	r6, [sp, #8]
   12030:	mov	r6, r0
   12034:	str	r8, [sp, #16]
   12038:	str	lr, [sp, #20]
   1203c:	bl	11128 <__ctype_tolower_loc@plt>
   12040:	mov	r7, r0
   12044:	ldrb	r2, [r4], #1
   12048:	mov	r1, r6
   1204c:	ldr	r3, [r7]
   12050:	ldr	r0, [r3, r2, lsl #2]
   12054:	bl	11254 <fputc@plt>
   12058:	cmp	r4, r5
   1205c:	bne	12044 <dcngettext@plt+0xd78>
   12060:	ldrd	r4, [sp]
   12064:	ldrd	r6, [sp, #8]
   12068:	ldr	r8, [sp, #16]
   1206c:	add	sp, sp, #20
   12070:	pop	{pc}		; (ldr pc, [sp], #4)
   12074:	cmp	r2, #0
   12078:	bxeq	lr
   1207c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12080:	mov	r4, r1
   12084:	add	r5, r1, r2
   12088:	strd	r6, [sp, #8]
   1208c:	mov	r6, r0
   12090:	str	r8, [sp, #16]
   12094:	str	lr, [sp, #20]
   12098:	bl	11134 <__ctype_toupper_loc@plt>
   1209c:	mov	r7, r0
   120a0:	ldrb	r2, [r4], #1
   120a4:	mov	r1, r6
   120a8:	ldr	r3, [r7]
   120ac:	ldr	r0, [r3, r2, lsl #2]
   120b0:	bl	11254 <fputc@plt>
   120b4:	cmp	r4, r5
   120b8:	bne	120a0 <dcngettext@plt+0xdd4>
   120bc:	ldrd	r4, [sp]
   120c0:	ldrd	r6, [sp, #8]
   120c4:	ldr	r8, [sp, #16]
   120c8:	add	sp, sp, #20
   120cc:	pop	{pc}		; (ldr pc, [sp], #4)
   120d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   120d4:	mov	r4, r2
   120d8:	strd	r6, [sp, #8]
   120dc:	mov	r7, r0
   120e0:	strd	r8, [sp, #16]
   120e4:	mov	r8, r1
   120e8:	strd	sl, [sp, #24]
   120ec:	str	lr, [sp, #32]
   120f0:	sub	sp, sp, #1120	; 0x460
   120f4:	sub	sp, sp, #12
   120f8:	str	r3, [sp, #32]
   120fc:	str	r2, [sp, #40]	; 0x28
   12100:	bl	11194 <__errno_location@plt>
   12104:	ldr	r1, [r0]
   12108:	movw	r3, #32832	; 0x8040
   1210c:	movt	r3, #1
   12110:	str	r0, [sp, #28]
   12114:	ldr	r2, [r4, #40]	; 0x28
   12118:	ldr	ip, [r4, #8]
   1211c:	ldr	r5, [sp, #1172]	; 0x494
   12120:	cmp	r2, #0
   12124:	str	r1, [sp, #44]	; 0x2c
   12128:	mov	r1, r2
   1212c:	moveq	r1, r3
   12130:	cmp	ip, #12
   12134:	str	ip, [sp, #24]
   12138:	subgt	r3, ip, #12
   1213c:	str	r1, [sp, #48]	; 0x30
   12140:	strgt	r3, [sp, #24]
   12144:	bgt	12158 <dcngettext@plt+0xe8c>
   12148:	ldr	r3, [sp, #24]
   1214c:	cmp	r3, #0
   12150:	moveq	r3, #12
   12154:	str	r3, [sp, #24]
   12158:	ldrb	r3, [r8]
   1215c:	cmp	r3, #0
   12160:	beq	13c10 <dcngettext@plt+0x2944>
   12164:	movw	r2, #46021	; 0xb3c5
   12168:	movt	r2, #37282	; 0x91a2
   1216c:	movw	r9, #26215	; 0x6667
   12170:	movt	r9, #26214	; 0x6666
   12174:	mov	fp, #0
   12178:	str	r2, [sp, #68]	; 0x44
   1217c:	movw	r2, #34953	; 0x8889
   12180:	movt	r2, #34952	; 0x8888
   12184:	str	r9, [sp, #64]	; 0x40
   12188:	str	r2, [sp, #72]	; 0x48
   1218c:	movw	r2, #34079	; 0x851f
   12190:	movt	r2, #20971	; 0x51eb
   12194:	str	r2, [sp, #60]	; 0x3c
   12198:	movw	r2, #9363	; 0x2493
   1219c:	movt	r2, #37449	; 0x9249
   121a0:	str	r2, [sp, #56]	; 0x38
   121a4:	cmp	r3, #37	; 0x25
   121a8:	beq	1228c <dcngettext@plt+0xfc0>
   121ac:	cmp	r5, #0
   121b0:	blt	12234 <dcngettext@plt+0xf68>
   121b4:	cmp	r5, #1
   121b8:	mvn	r3, fp
   121bc:	movcs	r6, r5
   121c0:	movcc	r6, #1
   121c4:	cmp	r6, r3
   121c8:	bcs	1223c <dcngettext@plt+0xf70>
   121cc:	cmp	r7, #0
   121d0:	beq	12208 <dcngettext@plt+0xf3c>
   121d4:	cmp	r5, #1
   121d8:	ble	1227c <dcngettext@plt+0xfb0>
   121dc:	sub	r5, r5, #1
   121e0:	mov	r4, #0
   121e4:	add	r4, r4, #1
   121e8:	mov	r1, r7
   121ec:	mov	r0, #32
   121f0:	bl	11254 <fputc@plt>
   121f4:	cmp	r5, r4
   121f8:	bne	121e4 <dcngettext@plt+0xf18>
   121fc:	mov	r1, r7
   12200:	ldrb	r0, [r8]
   12204:	bl	11254 <fputc@plt>
   12208:	add	fp, fp, r6
   1220c:	mov	r4, r8
   12210:	ldrb	r3, [r4, #1]
   12214:	add	r8, r4, #1
   12218:	mvn	r5, #0
   1221c:	cmp	r3, #0
   12220:	bne	121a4 <dcngettext@plt+0xed8>
   12224:	ldr	r3, [sp, #28]
   12228:	ldr	r2, [sp, #44]	; 0x2c
   1222c:	str	r2, [r3]
   12230:	b	1224c <dcngettext@plt+0xf80>
   12234:	cmn	fp, #3
   12238:	bls	12270 <dcngettext@plt+0xfa4>
   1223c:	ldr	r2, [sp, #28]
   12240:	mov	r3, #34	; 0x22
   12244:	str	r3, [r2]
   12248:	mov	fp, #0
   1224c:	mov	r0, fp
   12250:	add	sp, sp, #1120	; 0x460
   12254:	add	sp, sp, #12
   12258:	ldrd	r4, [sp]
   1225c:	ldrd	r6, [sp, #8]
   12260:	ldrd	r8, [sp, #16]
   12264:	ldrd	sl, [sp, #24]
   12268:	add	sp, sp, #32
   1226c:	pop	{pc}		; (ldr pc, [sp], #4)
   12270:	cmp	r7, #0
   12274:	mov	r6, #1
   12278:	beq	12208 <dcngettext@plt+0xf3c>
   1227c:	mov	r1, r7
   12280:	ldrb	r0, [r8]
   12284:	bl	11254 <fputc@plt>
   12288:	b	12208 <dcngettext@plt+0xf3c>
   1228c:	ldr	r3, [sp, #32]
   12290:	mov	r9, #0
   12294:	mov	sl, r8
   12298:	str	r9, [sp, #36]	; 0x24
   1229c:	str	r3, [sp, #52]	; 0x34
   122a0:	ldrb	r3, [sl, #1]!
   122a4:	sub	r2, r3, #35	; 0x23
   122a8:	mov	r6, r3
   122ac:	cmp	r2, #60	; 0x3c
   122b0:	ldrls	pc, [pc, r2, lsl #2]
   122b4:	b	123c8 <dcngettext@plt+0x10fc>
   122b8:	andeq	r2, r1, r0, asr #7
   122bc:	andeq	r2, r1, r8, asr #7
   122c0:	andeq	r2, r1, r8, asr #7
   122c4:	andeq	r2, r1, r8, asr #7
   122c8:	andeq	r2, r1, r8, asr #7
   122cc:	andeq	r2, r1, r8, asr #7
   122d0:	andeq	r2, r1, r8, asr #7
   122d4:	andeq	r2, r1, r8, asr #7
   122d8:			; <UNDEFINED> instruction: 0x000123b8
   122dc:	andeq	r2, r1, r8, asr #7
   122e0:			; <UNDEFINED> instruction: 0x000123b8
   122e4:	andeq	r2, r1, r8, asr #7
   122e8:	andeq	r2, r1, r8, asr #7
   122ec:			; <UNDEFINED> instruction: 0x000123b8
   122f0:	andeq	r2, r1, r8, asr #7
   122f4:	andeq	r2, r1, r8, asr #7
   122f8:	andeq	r2, r1, r8, asr #7
   122fc:	andeq	r2, r1, r8, asr #7
   12300:	andeq	r2, r1, r8, asr #7
   12304:	andeq	r2, r1, r8, asr #7
   12308:	andeq	r2, r1, r8, asr #7
   1230c:	andeq	r2, r1, r8, asr #7
   12310:	andeq	r2, r1, r8, asr #7
   12314:	andeq	r2, r1, r8, asr #7
   12318:	andeq	r2, r1, r8, asr #7
   1231c:	andeq	r2, r1, r8, asr #7
   12320:	andeq	r2, r1, r8, asr #7
   12324:	andeq	r2, r1, r8, asr #7
   12328:	andeq	r2, r1, r8, asr #7
   1232c:	andeq	r2, r1, r8, asr #7
   12330:	andeq	r2, r1, r8, asr #7
   12334:	andeq	r2, r1, r8, asr #7
   12338:	andeq	r2, r1, r8, asr #7
   1233c:	andeq	r2, r1, r8, asr #7
   12340:	andeq	r2, r1, r8, asr #7
   12344:	andeq	r2, r1, r8, asr #7
   12348:	andeq	r2, r1, r8, asr #7
   1234c:	andeq	r2, r1, r8, asr #7
   12350:	andeq	r2, r1, r8, asr #7
   12354:	andeq	r2, r1, r8, asr #7
   12358:	andeq	r2, r1, r8, asr #7
   1235c:	andeq	r2, r1, r8, asr #7
   12360:	andeq	r2, r1, r8, asr #7
   12364:	andeq	r2, r1, r8, asr #7
   12368:	andeq	r2, r1, r8, asr #7
   1236c:	andeq	r2, r1, r8, asr #7
   12370:	andeq	r2, r1, r8, asr #7
   12374:	andeq	r2, r1, r8, asr #7
   12378:	andeq	r2, r1, r8, asr #7
   1237c:	andeq	r2, r1, r8, asr #7
   12380:	andeq	r2, r1, r8, asr #7
   12384:	andeq	r2, r1, r8, asr #7
   12388:	andeq	r2, r1, r8, asr #7
   1238c:	andeq	r2, r1, r8, asr #7
   12390:	andeq	r2, r1, r8, asr #7
   12394:	andeq	r2, r1, r8, asr #7
   12398:	andeq	r2, r1, r8, asr #7
   1239c:	andeq	r2, r1, r8, asr #7
   123a0:	andeq	r2, r1, r8, asr #7
   123a4:	andeq	r2, r1, ip, lsr #7
   123a8:			; <UNDEFINED> instruction: 0x000123b8
   123ac:	mov	r3, #1
   123b0:	str	r3, [sp, #52]	; 0x34
   123b4:	b	122a0 <dcngettext@plt+0xfd4>
   123b8:	str	r3, [sp, #36]	; 0x24
   123bc:	b	122a0 <dcngettext@plt+0xfd4>
   123c0:	mov	r9, #1
   123c4:	b	122a0 <dcngettext@plt+0xfd4>
   123c8:	sub	r2, r3, #48	; 0x30
   123cc:	cmp	r2, #9
   123d0:	bls	1289c <dcngettext@plt+0x15d0>
   123d4:	cmp	r3, #69	; 0x45
   123d8:	beq	125dc <dcngettext@plt+0x1310>
   123dc:	cmp	r3, #79	; 0x4f
   123e0:	beq	125dc <dcngettext@plt+0x1310>
   123e4:	cmp	r3, #122	; 0x7a
   123e8:	ldrls	pc, [pc, r3, lsl #2]
   123ec:	b	13ad8 <dcngettext@plt+0x280c>
   123f0:	ldrdeq	r2, [r1], -ip
   123f4:	ldrdeq	r3, [r1], -r8
   123f8:	ldrdeq	r3, [r1], -r8
   123fc:	ldrdeq	r3, [r1], -r8
   12400:	ldrdeq	r3, [r1], -r8
   12404:	ldrdeq	r3, [r1], -r8
   12408:	ldrdeq	r3, [r1], -r8
   1240c:	ldrdeq	r3, [r1], -r8
   12410:	ldrdeq	r3, [r1], -r8
   12414:	ldrdeq	r3, [r1], -r8
   12418:	ldrdeq	r3, [r1], -r8
   1241c:	ldrdeq	r3, [r1], -r8
   12420:	ldrdeq	r3, [r1], -r8
   12424:	ldrdeq	r3, [r1], -r8
   12428:	ldrdeq	r3, [r1], -r8
   1242c:	ldrdeq	r3, [r1], -r8
   12430:	ldrdeq	r3, [r1], -r8
   12434:	ldrdeq	r3, [r1], -r8
   12438:	ldrdeq	r3, [r1], -r8
   1243c:	ldrdeq	r3, [r1], -r8
   12440:	ldrdeq	r3, [r1], -r8
   12444:	ldrdeq	r3, [r1], -r8
   12448:	ldrdeq	r3, [r1], -r8
   1244c:	ldrdeq	r3, [r1], -r8
   12450:	ldrdeq	r3, [r1], -r8
   12454:	ldrdeq	r3, [r1], -r8
   12458:	ldrdeq	r3, [r1], -r8
   1245c:	ldrdeq	r3, [r1], -r8
   12460:	ldrdeq	r3, [r1], -r8
   12464:	ldrdeq	r3, [r1], -r8
   12468:	ldrdeq	r3, [r1], -r8
   1246c:	ldrdeq	r3, [r1], -r8
   12470:	ldrdeq	r3, [r1], -r8
   12474:	ldrdeq	r3, [r1], -r8
   12478:	ldrdeq	r3, [r1], -r8
   1247c:	ldrdeq	r3, [r1], -r8
   12480:	ldrdeq	r3, [r1], -r8
   12484:	andeq	r3, r1, r8, ror #2
   12488:	ldrdeq	r3, [r1], -r8
   1248c:	ldrdeq	r3, [r1], -r8
   12490:	ldrdeq	r3, [r1], -r8
   12494:	ldrdeq	r3, [r1], -r8
   12498:	ldrdeq	r3, [r1], -r8
   1249c:	ldrdeq	r3, [r1], -r8
   124a0:	ldrdeq	r3, [r1], -r8
   124a4:	ldrdeq	r3, [r1], -r8
   124a8:	ldrdeq	r3, [r1], -r8
   124ac:	ldrdeq	r3, [r1], -r8
   124b0:	ldrdeq	r3, [r1], -r8
   124b4:	ldrdeq	r3, [r1], -r8
   124b8:	ldrdeq	r3, [r1], -r8
   124bc:	ldrdeq	r3, [r1], -r8
   124c0:	ldrdeq	r3, [r1], -r8
   124c4:	ldrdeq	r3, [r1], -r8
   124c8:	ldrdeq	r3, [r1], -r8
   124cc:	ldrdeq	r3, [r1], -r8
   124d0:	ldrdeq	r3, [r1], -r8
   124d4:	ldrdeq	r3, [r1], -r8
   124d8:	andeq	r3, r1, r0, lsl #19
   124dc:	ldrdeq	r3, [r1], -r8
   124e0:	ldrdeq	r3, [r1], -r8
   124e4:	ldrdeq	r3, [r1], -r8
   124e8:	ldrdeq	r3, [r1], -r8
   124ec:	ldrdeq	r3, [r1], -r8
   124f0:	ldrdeq	r3, [r1], -r8
   124f4:			; <UNDEFINED> instruction: 0x000139b8
   124f8:	ldrdeq	r3, [r1], -r4
   124fc:	andeq	r3, r1, r8, asr sl
   12500:	andeq	r3, r1, r0, lsl r8
   12504:	ldrdeq	r3, [r1], -r8
   12508:	andeq	r3, r1, r8, lsr r7
   1250c:	andeq	r3, r1, r4, ror #20
   12510:	andeq	r3, r1, r0, ror sl
   12514:	andeq	r3, r1, ip, ror sl
   12518:	ldrdeq	r3, [r1], -r8
   1251c:	ldrdeq	r3, [r1], -r8
   12520:	ldrdeq	r3, [r1], -r8
   12524:	andeq	r3, r1, r8, lsl #21
   12528:	andeq	r3, r1, ip, ror #7
   1252c:	ldrdeq	r3, [r1], -r8
   12530:			; <UNDEFINED> instruction: 0x000138b4
   12534:	ldrdeq	r3, [r1], -r8
   12538:	muleq	r1, r8, r8
   1253c:	andeq	r3, r1, ip, asr #21
   12540:	andeq	r3, r1, r8, asr #5
   12544:	muleq	r1, r4, sl
   12548:	andeq	r3, r1, r4, ror #20
   1254c:	andeq	r3, r1, r0, lsr #21
   12550:	andeq	r3, r1, ip, lsr #21
   12554:			; <UNDEFINED> instruction: 0x00013ab8
   12558:	andeq	r2, r1, r4, lsr pc
   1255c:	ldrdeq	r3, [r1], -r8
   12560:	ldrdeq	r3, [r1], -r8
   12564:	ldrdeq	r3, [r1], -r8
   12568:	ldrdeq	r3, [r1], -r8
   1256c:	ldrdeq	r3, [r1], -r8
   12570:	ldrdeq	r3, [r1], -r8
   12574:	andeq	r3, r1, r4, asr #21
   12578:	ldrdeq	r2, [r1], -r8
   1257c:	andeq	r3, r1, ip, lsl sl
   12580:	andeq	r3, r1, r8, lsr #20
   12584:	andeq	r3, r1, r4, lsr sl
   12588:	ldrdeq	r3, [r1], -r8
   1258c:	andeq	r3, r1, r4, ror #20
   12590:	ldrdeq	r2, [r1], -r8
   12594:	ldrdeq	r3, [r1], -r8
   12598:	andeq	r3, r1, r0, asr #20
   1259c:	andeq	r3, r1, ip, asr #20
   125a0:	andeq	r3, r1, r4, lsl #20
   125a4:	andeq	r3, r1, r0, lsl sl
   125a8:	andeq	r3, r1, r0, lsl #1
   125ac:	ldrdeq	r3, [r1], -r8
   125b0:	andeq	r3, r1, r0, ror r8
   125b4:	andeq	r2, r1, ip, lsl #27
   125b8:	andeq	r3, r1, ip, asr r8
   125bc:	andeq	r2, r1, r4, ror #23
   125c0:	andeq	r2, r1, ip, lsr fp
   125c4:	strdeq	r2, [r1], -ip
   125c8:	ldrdeq	r3, [r1], -r8
   125cc:	andeq	r3, r1, ip, ror #19
   125d0:	strdeq	r3, [r1], -r8
   125d4:	andeq	r3, r1, r0, ror #19
   125d8:	andeq	r3, r1, r4, asr #17
   125dc:	ldrb	r3, [sl, #1]
   125e0:	add	r4, sl, #1
   125e4:	cmp	r3, #122	; 0x7a
   125e8:	ldrls	pc, [pc, r3, lsl #2]
   125ec:	b	127e4 <dcngettext@plt+0x1518>
   125f0:	andeq	r2, r1, r0, ror #15
   125f4:	andeq	r2, r1, r4, ror #15
   125f8:	andeq	r2, r1, r4, ror #15
   125fc:	andeq	r2, r1, r4, ror #15
   12600:	andeq	r2, r1, r4, ror #15
   12604:	andeq	r2, r1, r4, ror #15
   12608:	andeq	r2, r1, r4, ror #15
   1260c:	andeq	r2, r1, r4, ror #15
   12610:	andeq	r2, r1, r4, ror #15
   12614:	andeq	r2, r1, r4, ror #15
   12618:	andeq	r2, r1, r4, ror #15
   1261c:	andeq	r2, r1, r4, ror #15
   12620:	andeq	r2, r1, r4, ror #15
   12624:	andeq	r2, r1, r4, ror #15
   12628:	andeq	r2, r1, r4, ror #15
   1262c:	andeq	r2, r1, r4, ror #15
   12630:	andeq	r2, r1, r4, ror #15
   12634:	andeq	r2, r1, r4, ror #15
   12638:	andeq	r2, r1, r4, ror #15
   1263c:	andeq	r2, r1, r4, ror #15
   12640:	andeq	r2, r1, r4, ror #15
   12644:	andeq	r2, r1, r4, ror #15
   12648:	andeq	r2, r1, r4, ror #15
   1264c:	andeq	r2, r1, r4, ror #15
   12650:	andeq	r2, r1, r4, ror #15
   12654:	andeq	r2, r1, r4, ror #15
   12658:	andeq	r2, r1, r4, ror #15
   1265c:	andeq	r2, r1, r4, ror #15
   12660:	andeq	r2, r1, r4, ror #15
   12664:	andeq	r2, r1, r4, ror #15
   12668:	andeq	r2, r1, r4, ror #15
   1266c:	andeq	r2, r1, r4, ror #15
   12670:	andeq	r2, r1, r4, ror #15
   12674:	andeq	r2, r1, r4, ror #15
   12678:	andeq	r2, r1, r4, ror #15
   1267c:	andeq	r2, r1, r4, ror #15
   12680:	andeq	r2, r1, r4, ror #15
   12684:	andeq	r3, r1, r4, ror #2
   12688:	andeq	r2, r1, r4, ror #15
   1268c:	andeq	r2, r1, r4, ror #15
   12690:	andeq	r2, r1, r4, ror #15
   12694:	andeq	r2, r1, r4, ror #15
   12698:	andeq	r2, r1, r4, ror #15
   1269c:	andeq	r2, r1, r4, ror #15
   126a0:	andeq	r2, r1, r4, ror #15
   126a4:	andeq	r2, r1, r4, ror #15
   126a8:	andeq	r2, r1, r4, ror #15
   126ac:	andeq	r2, r1, r4, ror #15
   126b0:	andeq	r2, r1, r4, ror #15
   126b4:	andeq	r2, r1, r4, ror #15
   126b8:	andeq	r2, r1, r4, ror #15
   126bc:	andeq	r2, r1, r4, ror #15
   126c0:	andeq	r2, r1, r4, ror #15
   126c4:	andeq	r2, r1, r4, ror #15
   126c8:	andeq	r2, r1, r4, ror #15
   126cc:	andeq	r2, r1, r4, ror #15
   126d0:	andeq	r2, r1, r4, ror #15
   126d4:	andeq	r2, r1, r4, ror #15
   126d8:	andeq	r3, r1, r8, lsl #19
   126dc:	andeq	r2, r1, r4, ror #15
   126e0:	andeq	r2, r1, r4, ror #15
   126e4:	andeq	r2, r1, r4, ror #15
   126e8:	andeq	r2, r1, r4, ror #15
   126ec:	andeq	r2, r1, r4, ror #15
   126f0:	andeq	r2, r1, r4, ror #15
   126f4:	andeq	r3, r1, ip, lsr #19
   126f8:	andeq	r3, r1, r8, lsr r8
   126fc:	andeq	r3, r1, ip, ror r7
   12700:	andeq	r3, r1, r8, lsl r8
   12704:	andeq	r2, r1, r4, ror #15
   12708:	andeq	r3, r1, r0, asr #14
   1270c:	andeq	r3, r1, ip, lsr #11
   12710:	muleq	r1, r0, r5
   12714:	andeq	r3, r1, r8, ror r5
   12718:	andeq	r2, r1, r4, ror #15
   1271c:	andeq	r2, r1, r4, ror #15
   12720:	andeq	r2, r1, r4, ror #15
   12724:	andeq	r3, r1, ip, asr r5
   12728:	strdeq	r3, [r1], -r4
   1272c:	andeq	r2, r1, r4, ror #15
   12730:			; <UNDEFINED> instruction: 0x000138bc
   12734:	andeq	r2, r1, r4, ror #15
   12738:	muleq	r1, ip, r8
   1273c:	ldrdeq	r3, [r1], -r0
   12740:	andeq	r3, r1, ip, asr #5
   12744:	andeq	r3, r1, ip, lsl #5
   12748:	andeq	r3, r1, ip, lsr #11
   1274c:	andeq	r3, r1, r4, lsr r2
   12750:	andeq	r3, r1, r4, lsr #4
   12754:	andeq	r3, r1, r4
   12758:	andeq	r2, r1, r8, lsr pc
   1275c:	andeq	r2, r1, r4, ror #15
   12760:	andeq	r2, r1, r4, ror #15
   12764:	andeq	r2, r1, r4, ror #15
   12768:	andeq	r2, r1, r4, ror #15
   1276c:	andeq	r2, r1, r4, ror #15
   12770:	andeq	r2, r1, r4, ror #15
   12774:	andeq	r2, r1, r0, lsl #30
   12778:	andeq	r2, r1, r0, ror #29
   1277c:	andeq	r2, r1, r4, asr #29
   12780:	andeq	r2, r1, r8, lsr #29
   12784:	andeq	r2, r1, ip, ror lr
   12788:	andeq	r2, r1, r4, ror #15
   1278c:	andeq	r3, r1, ip, lsr #11
   12790:	andeq	r2, r1, r0, ror #29
   12794:	andeq	r2, r1, r4, ror #15
   12798:	andeq	r2, r1, ip, lsr lr
   1279c:	andeq	r3, r1, r0, asr r1
   127a0:	andeq	r3, r1, r0, asr #2
   127a4:	andeq	r3, r1, r4, lsr #2
   127a8:	andeq	r3, r1, r4, lsl #1
   127ac:	andeq	r2, r1, r4, ror #15
   127b0:	andeq	r3, r1, r8, ror r8
   127b4:	muleq	r1, r4, sp
   127b8:	andeq	r3, r1, r4, ror #16
   127bc:	andeq	r2, r1, r8, ror #23
   127c0:	andeq	r2, r1, r0, asr #22
   127c4:	andeq	r2, r1, r4, lsl #22
   127c8:	andeq	r2, r1, r4, ror #15
   127cc:	andeq	r2, r1, r0, asr #21
   127d0:	muleq	r1, r4, sl
   127d4:	andeq	r2, r1, r0, lsl r9
   127d8:	andeq	r3, r1, ip, asr #17
   127dc:	mov	r4, sl
   127e0:	sub	r4, r4, #1
   127e4:	mvn	r3, fp
   127e8:	str	r3, [sp, #76]	; 0x4c
   127ec:	ldr	r3, [sp, #36]	; 0x24
   127f0:	sub	r6, r4, r8
   127f4:	add	r6, r6, #1
   127f8:	subs	r3, r3, #45	; 0x2d
   127fc:	movne	r3, #1
   12800:	cmp	r5, #0
   12804:	movlt	r3, #0
   12808:	cmp	r3, #0
   1280c:	moveq	r5, r3
   12810:	moveq	r9, r6
   12814:	beq	12824 <dcngettext@plt+0x1558>
   12818:	cmp	r5, r6
   1281c:	movcs	r9, r5
   12820:	movcc	r9, r6
   12824:	ldr	r3, [sp, #76]	; 0x4c
   12828:	cmp	r9, r3
   1282c:	bcs	1223c <dcngettext@plt+0xf70>
   12830:	cmp	r7, #0
   12834:	beq	12894 <dcngettext@plt+0x15c8>
   12838:	cmp	r5, r6
   1283c:	bls	12878 <dcngettext@plt+0x15ac>
   12840:	ldr	r3, [sp, #36]	; 0x24
   12844:	sub	r5, r5, r6
   12848:	cmp	r3, #43	; 0x2b
   1284c:	cmpne	r3, #48	; 0x30
   12850:	moveq	sl, #1
   12854:	movne	sl, #0
   12858:	bne	128f4 <dcngettext@plt+0x1628>
   1285c:	mov	sl, #0
   12860:	add	sl, sl, #1
   12864:	mov	r1, r7
   12868:	mov	r0, #48	; 0x30
   1286c:	bl	11254 <fputc@plt>
   12870:	cmp	r5, sl
   12874:	bne	12860 <dcngettext@plt+0x1594>
   12878:	ldr	r3, [sp, #52]	; 0x34
   1287c:	cmp	r3, #0
   12880:	beq	128dc <dcngettext@plt+0x1610>
   12884:	mov	r2, r6
   12888:	mov	r1, r8
   1288c:	mov	r0, r7
   12890:	bl	12074 <dcngettext@plt+0xda8>
   12894:	add	fp, fp, r9
   12898:	b	12210 <dcngettext@plt+0xf44>
   1289c:	mov	r5, #0
   128a0:	mov	r1, #10
   128a4:	smull	r2, r3, r5, r1
   128a8:	mvn	r5, #-2147483648	; 0x80000000
   128ac:	cmp	r3, r2, asr #31
   128b0:	bne	128c4 <dcngettext@plt+0x15f8>
   128b4:	ldrb	r3, [sl]
   128b8:	sub	r5, r3, #48	; 0x30
   128bc:	adds	r5, r2, r5
   128c0:	mvnvs	r5, #-2147483648	; 0x80000000
   128c4:	ldrb	r3, [sl, #1]!
   128c8:	sub	r2, r3, #48	; 0x30
   128cc:	cmp	r2, #9
   128d0:	bls	128a4 <dcngettext@plt+0x15d8>
   128d4:	mov	r6, r3
   128d8:	b	123d4 <dcngettext@plt+0x1108>
   128dc:	mov	r1, r6
   128e0:	mov	r0, r8
   128e4:	mov	r3, r7
   128e8:	mov	r2, #1
   128ec:	bl	11098 <fwrite@plt>
   128f0:	b	12894 <dcngettext@plt+0x15c8>
   128f4:	add	sl, sl, #1
   128f8:	mov	r1, r7
   128fc:	mov	r0, #32
   12900:	bl	11254 <fputc@plt>
   12904:	cmp	r5, sl
   12908:	bne	128f4 <dcngettext@plt+0x1628>
   1290c:	b	12878 <dcngettext@plt+0x15ac>
   12910:	cmp	r6, #69	; 0x45
   12914:	beq	13e64 <dcngettext@plt+0x2b98>
   12918:	ldr	r2, [sp, #40]	; 0x28
   1291c:	mov	r1, #100	; 0x64
   12920:	ldr	r0, [sp, #60]	; 0x3c
   12924:	ldr	r2, [r2, #20]
   12928:	smull	ip, r0, r0, r2
   1292c:	asr	ip, r2, #31
   12930:	rsb	ip, ip, r0, asr #5
   12934:	mls	ip, r1, ip, r2
   12938:	cmp	ip, #0
   1293c:	bge	12954 <dcngettext@plt+0x1688>
   12940:	movw	r1, #63636	; 0xf894
   12944:	movt	r1, #65535	; 0xffff
   12948:	cmp	r2, r1
   1294c:	rsblt	ip, ip, #0
   12950:	addge	ip, ip, #100	; 0x64
   12954:	ldr	r2, [sp, #36]	; 0x24
   12958:	cmp	r2, #0
   1295c:	bne	1370c <dcngettext@plt+0x2440>
   12960:	ldr	r2, [sp, #1168]	; 0x490
   12964:	cmp	r2, #43	; 0x2b
   12968:	beq	13f7c <dcngettext@plt+0x2cb0>
   1296c:	ldr	r1, [sp, #1168]	; 0x490
   12970:	mov	r2, #0
   12974:	str	r1, [sp, #36]	; 0x24
   12978:	mov	r1, #2
   1297c:	str	r2, [sp, #76]	; 0x4c
   12980:	str	r2, [sp, #84]	; 0x54
   12984:	mov	r2, #1
   12988:	str	r1, [sp, #80]	; 0x50
   1298c:	mov	lr, #0
   12990:	cmp	r6, #79	; 0x4f
   12994:	movne	r2, #0
   12998:	andeq	r2, r2, #1
   1299c:	cmp	r2, #0
   129a0:	beq	13070 <dcngettext@plt+0x1da4>
   129a4:	add	r2, sp, #88	; 0x58
   129a8:	movw	r1, #9504	; 0x2520
   129ac:	mov	r8, #0
   129b0:	strh	r1, [r2]
   129b4:	add	r1, r2, #3
   129b8:	strb	r6, [sp, #90]	; 0x5a
   129bc:	mov	ip, #0
   129c0:	add	r0, sp, #104	; 0x68
   129c4:	strb	r3, [r1]
   129c8:	ldr	r3, [sp, #40]	; 0x28
   129cc:	strb	ip, [r1, #1]
   129d0:	mov	r1, #1024	; 0x400
   129d4:	bl	11104 <strftime@plt>
   129d8:	cmp	r0, #0
   129dc:	beq	12210 <dcngettext@plt+0xf44>
   129e0:	ldr	r3, [sp, #36]	; 0x24
   129e4:	sub	r6, r0, #1
   129e8:	subs	r3, r3, #45	; 0x2d
   129ec:	movne	r3, #1
   129f0:	cmp	r5, #0
   129f4:	movlt	r3, #0
   129f8:	cmp	r3, #0
   129fc:	moveq	r5, r3
   12a00:	moveq	r9, r6
   12a04:	beq	12a14 <dcngettext@plt+0x1748>
   12a08:	cmp	r6, r5
   12a0c:	movcs	r9, r6
   12a10:	movcc	r9, r5
   12a14:	mvn	r3, fp
   12a18:	cmp	r3, r9
   12a1c:	bls	1223c <dcngettext@plt+0xf70>
   12a20:	cmp	r7, #0
   12a24:	beq	12894 <dcngettext@plt+0x15c8>
   12a28:	cmp	r6, r5
   12a2c:	bcs	12a6c <dcngettext@plt+0x17a0>
   12a30:	ldr	r3, [sp, #36]	; 0x24
   12a34:	sub	r5, r5, r6
   12a38:	cmp	r3, #43	; 0x2b
   12a3c:	cmpne	r3, #48	; 0x30
   12a40:	moveq	sl, #1
   12a44:	movne	sl, #0
   12a48:	beq	13c74 <dcngettext@plt+0x29a8>
   12a4c:	cmp	r5, #0
   12a50:	beq	12a6c <dcngettext@plt+0x17a0>
   12a54:	add	sl, sl, #1
   12a58:	mov	r1, r7
   12a5c:	mov	r0, #32
   12a60:	bl	11254 <fputc@plt>
   12a64:	cmp	r5, sl
   12a68:	bne	12a54 <dcngettext@plt+0x1788>
   12a6c:	cmp	r8, #0
   12a70:	bne	13c48 <dcngettext@plt+0x297c>
   12a74:	ldr	r3, [sp, #52]	; 0x34
   12a78:	cmp	r3, #0
   12a7c:	beq	13c30 <dcngettext@plt+0x2964>
   12a80:	mov	r2, r6
   12a84:	add	r1, sp, #105	; 0x69
   12a88:	mov	r0, r7
   12a8c:	bl	12074 <dcngettext@plt+0xda8>
   12a90:	b	12894 <dcngettext@plt+0x15c8>
   12a94:	cmp	r6, #79	; 0x4f
   12a98:	beq	127e4 <dcngettext@plt+0x1518>
   12a9c:	mov	r3, #120	; 0x78
   12aa0:	mov	r8, #0
   12aa4:	add	r2, sp, #88	; 0x58
   12aa8:	movw	r1, #9504	; 0x2520
   12aac:	cmp	r6, #0
   12ab0:	strh	r1, [r2]
   12ab4:	addeq	r1, r2, #2
   12ab8:	beq	129bc <dcngettext@plt+0x16f0>
   12abc:	b	129b4 <dcngettext@plt+0x16e8>
   12ac0:	cmp	r6, #69	; 0x45
   12ac4:	beq	127e4 <dcngettext@plt+0x1518>
   12ac8:	mov	r2, #1
   12acc:	str	r2, [sp, #80]	; 0x50
   12ad0:	ldr	r2, [sp, #40]	; 0x28
   12ad4:	ldr	r2, [r2, #24]
   12ad8:	mov	ip, r2
   12adc:	lsr	r2, r2, #31
   12ae0:	mov	lr, #0
   12ae4:	cmp	ip, lr
   12ae8:	str	r2, [sp, #76]	; 0x4c
   12aec:	movlt	r2, #0
   12af0:	movge	r2, #1
   12af4:	str	lr, [sp, #84]	; 0x54
   12af8:	b	12990 <dcngettext@plt+0x16c4>
   12afc:	mov	r4, sl
   12b00:	mov	r6, #0
   12b04:	ldr	r2, [sp, #40]	; 0x28
   12b08:	mov	r1, #1
   12b0c:	ldr	r0, [sp, #56]	; 0x38
   12b10:	str	r1, [sp, #80]	; 0x50
   12b14:	ldr	r2, [r2, #24]
   12b18:	add	r2, r2, #6
   12b1c:	asr	r1, r2, #31
   12b20:	smull	ip, r0, r0, r2
   12b24:	add	r0, r0, r2
   12b28:	rsb	r1, r1, r0, asr #2
   12b2c:	rsb	r1, r1, r1, lsl #3
   12b30:	sub	r2, r2, r1
   12b34:	add	r2, r2, #1
   12b38:	b	12ad8 <dcngettext@plt+0x180c>
   12b3c:	mov	r4, sl
   12b40:	ldr	r3, [sp, #36]	; 0x24
   12b44:	cmp	r3, #45	; 0x2d
   12b48:	beq	13cf0 <dcngettext@plt+0x2a24>
   12b4c:	cmp	r5, #0
   12b50:	blt	13cf0 <dcngettext@plt+0x2a24>
   12b54:	cmp	r5, #1
   12b58:	mvn	r3, fp
   12b5c:	movcs	r8, r5
   12b60:	movcc	r8, #1
   12b64:	cmp	r3, r8
   12b68:	bls	1223c <dcngettext@plt+0xf70>
   12b6c:	cmp	r7, #0
   12b70:	beq	12bc0 <dcngettext@plt+0x18f4>
   12b74:	cmp	r5, #1
   12b78:	ble	12bb4 <dcngettext@plt+0x18e8>
   12b7c:	ldr	r3, [sp, #36]	; 0x24
   12b80:	sub	r5, r5, #1
   12b84:	cmp	r3, #43	; 0x2b
   12b88:	cmpne	r3, #48	; 0x30
   12b8c:	moveq	r6, #1
   12b90:	movne	r6, #0
   12b94:	bne	12bc8 <dcngettext@plt+0x18fc>
   12b98:	mov	r6, #0
   12b9c:	add	r6, r6, #1
   12ba0:	mov	r1, r7
   12ba4:	mov	r0, #48	; 0x30
   12ba8:	bl	11254 <fputc@plt>
   12bac:	cmp	r5, r6
   12bb0:	bne	12b9c <dcngettext@plt+0x18d0>
   12bb4:	mov	r1, r7
   12bb8:	mov	r0, #9
   12bbc:	bl	11254 <fputc@plt>
   12bc0:	add	fp, fp, r8
   12bc4:	b	12210 <dcngettext@plt+0xf44>
   12bc8:	add	r6, r6, #1
   12bcc:	mov	r1, r7
   12bd0:	mov	r0, #32
   12bd4:	bl	11254 <fputc@plt>
   12bd8:	cmp	r5, r6
   12bdc:	bne	12bc8 <dcngettext@plt+0x18fc>
   12be0:	b	12bb4 <dcngettext@plt+0x18e8>
   12be4:	mov	r4, sl
   12be8:	ldr	lr, [sp, #40]	; 0x28
   12bec:	mvn	ip, #0
   12bf0:	add	r1, sp, #104	; 0x68
   12bf4:	ldr	r0, [sp, #1180]	; 0x49c
   12bf8:	ldrd	r8, [lr]
   12bfc:	ldrd	r2, [lr, #24]
   12c00:	strd	r8, [sp, #104]	; 0x68
   12c04:	ldrd	r8, [lr, #8]
   12c08:	strd	r2, [sp, #128]	; 0x80
   12c0c:	ldr	r3, [lr, #40]	; 0x28
   12c10:	strd	r8, [sp, #112]	; 0x70
   12c14:	ldrd	r8, [lr, #32]
   12c18:	str	ip, [sp, #132]	; 0x84
   12c1c:	str	r3, [sp, #144]	; 0x90
   12c20:	ldrd	r2, [lr, #16]
   12c24:	strd	r2, [sp, #120]	; 0x78
   12c28:	strd	r8, [sp, #136]	; 0x88
   12c2c:	bl	16be8 <dcngettext@plt+0x591c>
   12c30:	ldr	r3, [sp, #132]	; 0x84
   12c34:	cmp	r3, #0
   12c38:	blt	14030 <dcngettext@plt+0x2d64>
   12c3c:	ldr	ip, [sp, #64]	; 0x40
   12c40:	add	r2, sp, #88	; 0x58
   12c44:	lsr	r3, r0, #31
   12c48:	mov	r1, r0
   12c4c:	add	r6, r2, #14
   12c50:	str	r3, [sp, #76]	; 0x4c
   12c54:	smull	r3, lr, ip, r1
   12c58:	cmp	r0, #0
   12c5c:	asr	r8, r1, #31
   12c60:	asr	lr, lr, #2
   12c64:	sub	r3, lr, r8
   12c68:	add	r3, r3, r3, lsl #2
   12c6c:	sub	r3, r1, r3, lsl #1
   12c70:	sub	r1, lr, r8
   12c74:	uxtb	r3, r3
   12c78:	rsblt	r3, r3, #48	; 0x30
   12c7c:	addge	r3, r3, #48	; 0x30
   12c80:	uxtb	r3, r3
   12c84:	cmp	r1, #0
   12c88:	strb	r3, [r6, #-1]!
   12c8c:	bne	12c54 <dcngettext@plt+0x1988>
   12c90:	mov	r3, #1
   12c94:	str	r3, [sp, #80]	; 0x50
   12c98:	str	r1, [sp, #84]	; 0x54
   12c9c:	ldr	r3, [sp, #36]	; 0x24
   12ca0:	cmp	r3, #0
   12ca4:	beq	13c00 <dcngettext@plt+0x2934>
   12ca8:	subs	r3, r3, #45	; 0x2d
   12cac:	movne	r3, #1
   12cb0:	ldr	r1, [sp, #80]	; 0x50
   12cb4:	cmp	r5, #0
   12cb8:	add	r2, r2, #14
   12cbc:	sub	r8, r2, r6
   12cc0:	movlt	r5, r1
   12cc4:	ldr	r1, [sp, #76]	; 0x4c
   12cc8:	cmp	r1, #0
   12ccc:	bne	13b90 <dcngettext@plt+0x28c4>
   12cd0:	ldr	r1, [sp, #84]	; 0x54
   12cd4:	cmp	r1, #0
   12cd8:	bne	13c68 <dcngettext@plt+0x299c>
   12cdc:	sub	r2, r5, r8
   12ce0:	cmp	r2, #0
   12ce4:	movle	r3, #0
   12ce8:	andgt	r3, r3, #1
   12cec:	cmp	r3, #0
   12cf0:	bne	12d08 <dcngettext@plt+0x1a3c>
   12cf4:	ldr	r3, [sp, #36]	; 0x24
   12cf8:	cmp	r3, #45	; 0x2d
   12cfc:	moveq	r5, r1
   12d00:	moveq	r9, r8
   12d04:	beq	12d14 <dcngettext@plt+0x1a48>
   12d08:	cmp	r5, r8
   12d0c:	movcs	r9, r5
   12d10:	movcc	r9, r8
   12d14:	mvn	r3, fp
   12d18:	cmp	r3, r9
   12d1c:	bls	1223c <dcngettext@plt+0xf70>
   12d20:	cmp	r7, #0
   12d24:	beq	12894 <dcngettext@plt+0x15c8>
   12d28:	cmp	r5, r8
   12d2c:	bls	12d6c <dcngettext@plt+0x1aa0>
   12d30:	ldr	r3, [sp, #36]	; 0x24
   12d34:	sub	r5, r5, r8
   12d38:	cmp	r3, #43	; 0x2b
   12d3c:	cmpne	r3, #48	; 0x30
   12d40:	moveq	sl, #1
   12d44:	movne	sl, #0
   12d48:	beq	13c9c <dcngettext@plt+0x29d0>
   12d4c:	cmp	r5, #0
   12d50:	beq	12d6c <dcngettext@plt+0x1aa0>
   12d54:	add	sl, sl, #1
   12d58:	mov	r1, r7
   12d5c:	mov	r0, #32
   12d60:	bl	11254 <fputc@plt>
   12d64:	cmp	r5, sl
   12d68:	bne	12d54 <dcngettext@plt+0x1a88>
   12d6c:	ldr	r3, [sp, #52]	; 0x34
   12d70:	cmp	r3, #0
   12d74:	beq	13c18 <dcngettext@plt+0x294c>
   12d78:	mov	r2, r8
   12d7c:	mov	r1, r6
   12d80:	mov	r0, r7
   12d84:	bl	12074 <dcngettext@plt+0xda8>
   12d88:	b	12894 <dcngettext@plt+0x15c8>
   12d8c:	mov	r4, sl
   12d90:	mov	r6, #0
   12d94:	ldr	r3, [sp, #40]	; 0x28
   12d98:	cmp	r6, #79	; 0x4f
   12d9c:	ldr	r3, [r3, #16]
   12da0:	moveq	r3, #113	; 0x71
   12da4:	beq	129a4 <dcngettext@plt+0x16d8>
   12da8:	mov	ip, #11
   12dac:	mov	lr, #0
   12db0:	mul	ip, ip, r3
   12db4:	mov	r3, #1
   12db8:	str	lr, [sp, #76]	; 0x4c
   12dbc:	str	r3, [sp, #80]	; 0x50
   12dc0:	asr	ip, ip, #5
   12dc4:	str	lr, [sp, #84]	; 0x54
   12dc8:	add	ip, ip, r3
   12dcc:	add	r2, sp, #88	; 0x58
   12dd0:	movw	r9, #52429	; 0xcccd
   12dd4:	movt	r9, #52428	; 0xcccc
   12dd8:	add	r0, r2, #14
   12ddc:	mov	sl, #58	; 0x3a
   12de0:	tst	lr, #1
   12de4:	umull	r3, r1, r9, ip
   12de8:	sub	r6, r0, #1
   12dec:	sub	r3, r0, #2
   12df0:	beq	12e00 <dcngettext@plt+0x1b34>
   12df4:	strb	sl, [r0, #-1]
   12df8:	mov	r0, r6
   12dfc:	mov	r6, r3
   12e00:	lsr	r1, r1, #3
   12e04:	asrs	lr, lr, #1
   12e08:	add	r3, r1, r1, lsl #2
   12e0c:	movne	r8, #1
   12e10:	moveq	r8, #0
   12e14:	sub	r3, ip, r3, lsl #1
   12e18:	cmp	ip, #9
   12e1c:	orrhi	r8, r8, #1
   12e20:	mov	ip, r1
   12e24:	cmp	r8, #0
   12e28:	add	r3, r3, #48	; 0x30
   12e2c:	strb	r3, [r0, #-1]
   12e30:	mov	r0, r6
   12e34:	bne	12de0 <dcngettext@plt+0x1b14>
   12e38:	b	12c9c <dcngettext@plt+0x19d0>
   12e3c:	cmp	r6, #69	; 0x45
   12e40:	beq	127e4 <dcngettext@plt+0x1518>
   12e44:	ldr	r2, [sp, #40]	; 0x28
   12e48:	mov	lr, #0
   12e4c:	ldr	ip, [r2, #28]
   12e50:	mov	r2, #3
   12e54:	cmn	ip, #1
   12e58:	str	r2, [sp, #80]	; 0x50
   12e5c:	add	ip, ip, #1
   12e60:	movlt	r2, #1
   12e64:	movge	r2, lr
   12e68:	str	r2, [sp, #76]	; 0x4c
   12e6c:	movge	r2, #1
   12e70:	movlt	r2, lr
   12e74:	str	lr, [sp, #84]	; 0x54
   12e78:	b	12990 <dcngettext@plt+0x16c4>
   12e7c:	cmp	r6, #69	; 0x45
   12e80:	beq	127e4 <dcngettext@plt+0x1518>
   12e84:	ldr	r2, [sp, #40]	; 0x28
   12e88:	ldr	r2, [r2, #12]
   12e8c:	ldr	r1, [sp, #36]	; 0x24
   12e90:	cmp	r1, #0
   12e94:	mov	r1, #2
   12e98:	str	r1, [sp, #80]	; 0x50
   12e9c:	moveq	r1, #95	; 0x5f
   12ea0:	streq	r1, [sp, #36]	; 0x24
   12ea4:	b	12ad8 <dcngettext@plt+0x180c>
   12ea8:	cmp	r6, #69	; 0x45
   12eac:	beq	127e4 <dcngettext@plt+0x1518>
   12eb0:	mov	r2, #2
   12eb4:	str	r2, [sp, #80]	; 0x50
   12eb8:	ldr	r2, [sp, #40]	; 0x28
   12ebc:	ldr	r2, [r2, #12]
   12ec0:	b	12ad8 <dcngettext@plt+0x180c>
   12ec4:	cmp	r6, #79	; 0x4f
   12ec8:	beq	127e4 <dcngettext@plt+0x1518>
   12ecc:	mov	r3, #99	; 0x63
   12ed0:	mov	r8, #0
   12ed4:	b	12aa4 <dcngettext@plt+0x17d8>
   12ed8:	mov	r4, sl
   12edc:	mov	r6, #0
   12ee0:	ldr	r2, [sp, #52]	; 0x34
   12ee4:	cmp	r9, #0
   12ee8:	movne	r2, r9
   12eec:	cmp	r6, #69	; 0x45
   12ef0:	str	r2, [sp, #52]	; 0x34
   12ef4:	beq	127e4 <dcngettext@plt+0x1518>
   12ef8:	mov	r8, #0
   12efc:	b	12aa4 <dcngettext@plt+0x17d8>
   12f00:	cmp	r6, #0
   12f04:	bne	127e4 <dcngettext@plt+0x1518>
   12f08:	ldr	r2, [sp, #52]	; 0x34
   12f0c:	cmp	r9, #0
   12f10:	mov	r3, #97	; 0x61
   12f14:	movne	r2, r9
   12f18:	str	r2, [sp, #52]	; 0x34
   12f1c:	add	r2, sp, #88	; 0x58
   12f20:	movw	r0, #9504	; 0x2520
   12f24:	mov	r1, r2
   12f28:	mov	r8, #0
   12f2c:	strh	r0, [r1], #2
   12f30:	b	129bc <dcngettext@plt+0x16f0>
   12f34:	mov	r4, sl
   12f38:	cmp	r9, #0
   12f3c:	ldr	r0, [sp, #48]	; 0x30
   12f40:	ldr	r3, [sp, #52]	; 0x34
   12f44:	movne	r3, #0
   12f48:	str	r3, [sp, #52]	; 0x34
   12f4c:	bl	1117c <strlen@plt>
   12f50:	ldr	r3, [sp, #36]	; 0x24
   12f54:	mov	r6, r0
   12f58:	subs	r3, r3, #45	; 0x2d
   12f5c:	movne	r3, #1
   12f60:	cmp	r5, #0
   12f64:	movlt	r3, #0
   12f68:	cmp	r3, #0
   12f6c:	moveq	r5, r3
   12f70:	moveq	r8, r0
   12f74:	beq	12f84 <dcngettext@plt+0x1cb8>
   12f78:	cmp	r0, r5
   12f7c:	movcs	r8, r0
   12f80:	movcc	r8, r5
   12f84:	mvn	r3, fp
   12f88:	cmp	r3, r8
   12f8c:	bls	1223c <dcngettext@plt+0xf70>
   12f90:	cmp	r7, #0
   12f94:	beq	12bc0 <dcngettext@plt+0x18f4>
   12f98:	cmp	r6, r5
   12f9c:	bcs	12fdc <dcngettext@plt+0x1d10>
   12fa0:	ldr	r3, [sp, #36]	; 0x24
   12fa4:	sub	r5, r5, r6
   12fa8:	cmp	r3, #43	; 0x2b
   12fac:	cmpne	r3, #48	; 0x30
   12fb0:	moveq	sl, #1
   12fb4:	movne	sl, #0
   12fb8:	beq	13f94 <dcngettext@plt+0x2cc8>
   12fbc:	cmp	r5, #0
   12fc0:	beq	12fdc <dcngettext@plt+0x1d10>
   12fc4:	add	sl, sl, #1
   12fc8:	mov	r1, r7
   12fcc:	mov	r0, #32
   12fd0:	bl	11254 <fputc@plt>
   12fd4:	cmp	r5, sl
   12fd8:	bne	12fc4 <dcngettext@plt+0x1cf8>
   12fdc:	cmp	r9, #0
   12fe0:	bne	13f1c <dcngettext@plt+0x2c50>
   12fe4:	ldr	r3, [sp, #52]	; 0x34
   12fe8:	cmp	r3, #0
   12fec:	beq	13f04 <dcngettext@plt+0x2c38>
   12ff0:	mov	r2, r6
   12ff4:	mov	r0, r7
   12ff8:	ldr	r1, [sp, #48]	; 0x30
   12ffc:	bl	12074 <dcngettext@plt+0xda8>
   13000:	b	12bc0 <dcngettext@plt+0x18f4>
   13004:	cmp	r6, #69	; 0x45
   13008:	beq	13f30 <dcngettext@plt+0x2c64>
   1300c:	cmp	r6, #79	; 0x4f
   13010:	beq	127e4 <dcngettext@plt+0x1518>
   13014:	ldr	r1, [sp, #36]	; 0x24
   13018:	ldr	r2, [sp, #40]	; 0x28
   1301c:	ldr	ip, [r2, #20]
   13020:	movw	r2, #63636	; 0xf894
   13024:	movt	r2, #65535	; 0xffff
   13028:	cmp	ip, r2
   1302c:	add	ip, ip, #1888	; 0x760
   13030:	movlt	r2, #1
   13034:	movge	r2, #0
   13038:	add	ip, ip, #12
   1303c:	str	r2, [sp, #76]	; 0x4c
   13040:	movge	r2, #1
   13044:	movlt	r2, #0
   13048:	cmp	r1, #0
   1304c:	bne	13d08 <dcngettext@plt+0x2a3c>
   13050:	ldr	r1, [sp, #1168]	; 0x490
   13054:	cmp	r1, #43	; 0x2b
   13058:	beq	13d20 <dcngettext@plt+0x2a54>
   1305c:	ldr	lr, [sp, #36]	; 0x24
   13060:	mov	r3, #4
   13064:	str	r1, [sp, #36]	; 0x24
   13068:	str	r3, [sp, #80]	; 0x50
   1306c:	str	lr, [sp, #84]	; 0x54
   13070:	ldr	r3, [sp, #76]	; 0x4c
   13074:	cmp	r3, #0
   13078:	rsbne	ip, ip, #0
   1307c:	b	12dcc <dcngettext@plt+0x1b00>
   13080:	mov	r4, sl
   13084:	ldr	r3, [sp, #36]	; 0x24
   13088:	cmp	r3, #45	; 0x2d
   1308c:	beq	13cd8 <dcngettext@plt+0x2a0c>
   13090:	cmp	r5, #0
   13094:	blt	13cd8 <dcngettext@plt+0x2a0c>
   13098:	cmp	r5, #1
   1309c:	mvn	r3, fp
   130a0:	movcs	r8, r5
   130a4:	movcc	r8, #1
   130a8:	cmp	r8, r3
   130ac:	bcs	1223c <dcngettext@plt+0xf70>
   130b0:	cmp	r7, #0
   130b4:	beq	12bc0 <dcngettext@plt+0x18f4>
   130b8:	cmp	r5, #1
   130bc:	ble	130f8 <dcngettext@plt+0x1e2c>
   130c0:	ldr	r3, [sp, #36]	; 0x24
   130c4:	sub	r5, r5, #1
   130c8:	cmp	r3, #43	; 0x2b
   130cc:	cmpne	r3, #48	; 0x30
   130d0:	moveq	r6, #1
   130d4:	movne	r6, #0
   130d8:	bne	13108 <dcngettext@plt+0x1e3c>
   130dc:	mov	r6, #0
   130e0:	add	r6, r6, #1
   130e4:	mov	r1, r7
   130e8:	mov	r0, #48	; 0x30
   130ec:	bl	11254 <fputc@plt>
   130f0:	cmp	r5, r6
   130f4:	bne	130e0 <dcngettext@plt+0x1e14>
   130f8:	mov	r1, r7
   130fc:	mov	r0, #10
   13100:	bl	11254 <fputc@plt>
   13104:	b	12bc0 <dcngettext@plt+0x18f4>
   13108:	add	r6, r6, #1
   1310c:	mov	r1, r7
   13110:	mov	r0, #32
   13114:	bl	11254 <fputc@plt>
   13118:	cmp	r5, r6
   1311c:	bne	13108 <dcngettext@plt+0x1e3c>
   13120:	b	130f8 <dcngettext@plt+0x1e2c>
   13124:	cmp	r6, #69	; 0x45
   13128:	beq	127e4 <dcngettext@plt+0x1518>
   1312c:	ldr	r2, [sp, #40]	; 0x28
   13130:	mov	lr, #0
   13134:	ldr	ip, [r2, #16]
   13138:	mov	r2, #2
   1313c:	b	12e54 <dcngettext@plt+0x1b88>
   13140:	cmp	r6, #69	; 0x45
   13144:	beq	127e4 <dcngettext@plt+0x1518>
   13148:	ldr	r2, [sp, #24]
   1314c:	b	12e8c <dcngettext@plt+0x1bc0>
   13150:	cmp	r6, #69	; 0x45
   13154:	beq	127e4 <dcngettext@plt+0x1518>
   13158:	ldr	r2, [sp, #40]	; 0x28
   1315c:	ldr	r2, [r2, #8]
   13160:	b	12e8c <dcngettext@plt+0x1bc0>
   13164:	mov	sl, r4
   13168:	sub	r4, sl, #1
   1316c:	mvn	r3, fp
   13170:	cmp	r4, r8
   13174:	str	r3, [sp, #76]	; 0x4c
   13178:	bne	127ec <dcngettext@plt+0x1520>
   1317c:	ldr	r3, [sp, #36]	; 0x24
   13180:	cmp	r3, #45	; 0x2d
   13184:	beq	13e6c <dcngettext@plt+0x2ba0>
   13188:	cmp	r5, #0
   1318c:	blt	13e6c <dcngettext@plt+0x2ba0>
   13190:	ldr	r3, [sp, #76]	; 0x4c
   13194:	cmp	r5, #1
   13198:	movcs	r4, r5
   1319c:	movcc	r4, #1
   131a0:	cmp	r4, r3
   131a4:	bcs	1223c <dcngettext@plt+0xf70>
   131a8:	cmp	r7, #0
   131ac:	beq	131fc <dcngettext@plt+0x1f30>
   131b0:	cmp	r5, #1
   131b4:	ble	131f0 <dcngettext@plt+0x1f24>
   131b8:	ldr	r3, [sp, #36]	; 0x24
   131bc:	sub	r5, r5, #1
   131c0:	cmp	r3, #43	; 0x2b
   131c4:	cmpne	r3, #48	; 0x30
   131c8:	moveq	r6, #1
   131cc:	movne	r6, #0
   131d0:	bne	13208 <dcngettext@plt+0x1f3c>
   131d4:	mov	r6, #0
   131d8:	add	r6, r6, #1
   131dc:	mov	r1, r7
   131e0:	mov	r0, #48	; 0x30
   131e4:	bl	11254 <fputc@plt>
   131e8:	cmp	r5, r6
   131ec:	bne	131d8 <dcngettext@plt+0x1f0c>
   131f0:	mov	r1, r7
   131f4:	ldrb	r0, [sl]
   131f8:	bl	11254 <fputc@plt>
   131fc:	add	fp, fp, r4
   13200:	mov	r4, sl
   13204:	b	12210 <dcngettext@plt+0xf44>
   13208:	add	r6, r6, #1
   1320c:	mov	r1, r7
   13210:	mov	r0, #32
   13214:	bl	11254 <fputc@plt>
   13218:	cmp	r5, r6
   1321c:	bne	13208 <dcngettext@plt+0x1f3c>
   13220:	b	131f0 <dcngettext@plt+0x1f24>
   13224:	cmp	r6, #79	; 0x4f
   13228:	beq	127e4 <dcngettext@plt+0x1518>
   1322c:	mov	r3, #88	; 0x58
   13230:	b	12ef8 <dcngettext@plt+0x1c2c>
   13234:	cmp	r6, #69	; 0x45
   13238:	beq	127e4 <dcngettext@plt+0x1518>
   1323c:	ldr	r1, [sp, #40]	; 0x28
   13240:	mov	r0, #2
   13244:	ldr	lr, [sp, #56]	; 0x38
   13248:	str	r0, [sp, #80]	; 0x50
   1324c:	ldr	r2, [r1, #24]
   13250:	ldr	r1, [r1, #28]
   13254:	add	r2, r2, #6
   13258:	asr	r0, r2, #31
   1325c:	smull	r8, ip, lr, r2
   13260:	add	ip, ip, r2
   13264:	rsb	r0, r0, ip, asr #2
   13268:	rsb	r0, r0, r0, lsl #3
   1326c:	sub	r2, r2, r0
   13270:	sub	r1, r1, r2
   13274:	add	r1, r1, #7
   13278:	asr	r2, r1, #31
   1327c:	smull	ip, r0, lr, r1
   13280:	add	r1, r0, r1
   13284:	rsb	r2, r2, r1, asr #2
   13288:	b	12ad8 <dcngettext@plt+0x180c>
   1328c:	cmp	r6, #69	; 0x45
   13290:	beq	127e4 <dcngettext@plt+0x1518>
   13294:	ldr	r1, [sp, #40]	; 0x28
   13298:	mov	r0, #2
   1329c:	str	r0, [sp, #80]	; 0x50
   132a0:	ldr	r2, [r1, #24]
   132a4:	ldr	r1, [r1, #28]
   132a8:	sub	r1, r1, r2
   132ac:	ldr	r2, [sp, #56]	; 0x38
   132b0:	add	r1, r1, #7
   132b4:	smull	r2, r0, r2, r1
   132b8:	asr	r2, r1, #31
   132bc:	add	r1, r0, r1
   132c0:	rsb	r2, r2, r1, asr #2
   132c4:	b	12ad8 <dcngettext@plt+0x180c>
   132c8:	mov	r4, sl
   132cc:	movw	r8, #33368	; 0x8258
   132d0:	movt	r8, #1
   132d4:	mvn	r3, fp
   132d8:	mvn	sl, #0
   132dc:	str	r3, [sp, #76]	; 0x4c
   132e0:	ldr	r6, [sp, #36]	; 0x24
   132e4:	mov	r1, r8
   132e8:	mov	r0, #0
   132ec:	ldr	r2, [sp, #40]	; 0x28
   132f0:	ldr	ip, [sp, #1176]	; 0x498
   132f4:	ldr	r3, [sp, #52]	; 0x34
   132f8:	stm	sp, {r6, sl, ip}
   132fc:	ldr	ip, [sp, #1180]	; 0x49c
   13300:	str	ip, [sp, #12]
   13304:	ldr	ip, [sp, #1184]	; 0x4a0
   13308:	str	ip, [sp, #16]
   1330c:	bl	120d0 <dcngettext@plt+0xe04>
   13310:	cmp	r6, #45	; 0x2d
   13314:	beq	13c5c <dcngettext@plt+0x2990>
   13318:	cmp	r5, #0
   1331c:	blt	13c5c <dcngettext@plt+0x2990>
   13320:	cmp	r0, r5
   13324:	movcs	r9, r0
   13328:	movcc	r9, r5
   1332c:	ldr	r3, [sp, #76]	; 0x4c
   13330:	cmp	r9, r3
   13334:	bcs	1223c <dcngettext@plt+0xf70>
   13338:	cmp	r7, #0
   1333c:	beq	12894 <dcngettext@plt+0x15c8>
   13340:	cmp	r5, r0
   13344:	bls	13380 <dcngettext@plt+0x20b4>
   13348:	ldr	r3, [sp, #36]	; 0x24
   1334c:	sub	r5, r5, r0
   13350:	cmp	r3, #43	; 0x2b
   13354:	cmpne	r3, #48	; 0x30
   13358:	moveq	r6, #1
   1335c:	movne	r6, #0
   13360:	bne	133b4 <dcngettext@plt+0x20e8>
   13364:	mov	r6, #0
   13368:	add	r6, r6, #1
   1336c:	mov	r1, r7
   13370:	mov	r0, #48	; 0x30
   13374:	bl	11254 <fputc@plt>
   13378:	cmp	r5, r6
   1337c:	bne	13368 <dcngettext@plt+0x209c>
   13380:	ldr	r2, [sp, #36]	; 0x24
   13384:	mov	r1, r8
   13388:	mov	r0, r7
   1338c:	ldr	r3, [sp, #52]	; 0x34
   13390:	ldr	ip, [sp, #1176]	; 0x498
   13394:	stm	sp, {r2, sl, ip}
   13398:	ldr	r2, [sp, #40]	; 0x28
   1339c:	ldr	ip, [sp, #1180]	; 0x49c
   133a0:	str	ip, [sp, #12]
   133a4:	ldr	ip, [sp, #1184]	; 0x4a0
   133a8:	str	ip, [sp, #16]
   133ac:	bl	120d0 <dcngettext@plt+0xe04>
   133b0:	b	12894 <dcngettext@plt+0x15c8>
   133b4:	add	r6, r6, #1
   133b8:	mov	r1, r7
   133bc:	mov	r0, #32
   133c0:	bl	11254 <fputc@plt>
   133c4:	cmp	r5, r6
   133c8:	bne	133b4 <dcngettext@plt+0x20e8>
   133cc:	b	13380 <dcngettext@plt+0x20b4>
   133d0:	cmp	r6, #69	; 0x45
   133d4:	beq	127e4 <dcngettext@plt+0x1518>
   133d8:	mov	r2, #2
   133dc:	str	r2, [sp, #80]	; 0x50
   133e0:	ldr	r2, [sp, #40]	; 0x28
   133e4:	ldr	r2, [r2]
   133e8:	b	12ad8 <dcngettext@plt+0x180c>
   133ec:	mov	r4, sl
   133f0:	mov	r6, #0
   133f4:	mvn	r3, fp
   133f8:	cmp	r6, #69	; 0x45
   133fc:	str	r3, [sp, #76]	; 0x4c
   13400:	beq	127ec <dcngettext@plt+0x1520>
   13404:	cmp	r5, #0
   13408:	mov	r6, #9
   1340c:	ldr	r0, [sp, #64]	; 0x40
   13410:	movle	r5, #9
   13414:	ldr	r3, [sp, #1184]	; 0x4a0
   13418:	b	13428 <dcngettext@plt+0x215c>
   1341c:	smull	r2, r3, r0, r3
   13420:	sub	r6, r6, #1
   13424:	rsb	r3, r1, r3, asr #2
   13428:	cmp	r6, r5
   1342c:	asr	r1, r3, #31
   13430:	bgt	1341c <dcngettext@plt+0x2150>
   13434:	cmp	r6, #1
   13438:	smull	r1, r2, r0, r3
   1343c:	asr	r1, r3, #31
   13440:	ble	13d70 <dcngettext@plt+0x2aa4>
   13444:	rsb	r2, r1, r2, asr #2
   13448:	add	r2, r2, r2, lsl #2
   1344c:	cmp	r3, r2, lsl #1
   13450:	beq	1341c <dcngettext@plt+0x2150>
   13454:	ldr	lr, [sp, #64]	; 0x40
   13458:	add	r2, sp, #88	; 0x58
   1345c:	sub	ip, r6, #1
   13460:	add	ip, r2, ip
   13464:	rsb	r2, r2, #1
   13468:	smull	r8, r0, lr, r3
   1346c:	rsb	r1, r1, r0, asr #2
   13470:	add	r0, r1, r1, lsl #2
   13474:	sub	r0, r3, r0, lsl #1
   13478:	mov	r3, r1
   1347c:	asr	r1, r1, #31
   13480:	add	r0, r0, #48	; 0x30
   13484:	strb	r0, [ip], #-1
   13488:	add	r0, r2, ip
   1348c:	cmp	r0, #0
   13490:	bgt	13468 <dcngettext@plt+0x219c>
   13494:	ldr	r3, [sp, #36]	; 0x24
   13498:	cmp	r3, #0
   1349c:	moveq	r3, #48	; 0x30
   134a0:	str	r3, [sp, #36]	; 0x24
   134a4:	ldr	r3, [sp, #76]	; 0x4c
   134a8:	cmp	r6, r3
   134ac:	bcs	1223c <dcngettext@plt+0xf70>
   134b0:	cmp	r7, #0
   134b4:	beq	134d4 <dcngettext@plt+0x2208>
   134b8:	ldr	r3, [sp, #52]	; 0x34
   134bc:	cmp	r3, #0
   134c0:	beq	13f44 <dcngettext@plt+0x2c78>
   134c4:	mov	r2, r6
   134c8:	add	r1, sp, #88	; 0x58
   134cc:	mov	r0, r7
   134d0:	bl	12074 <dcngettext@plt+0xda8>
   134d4:	ldr	r3, [sp, #36]	; 0x24
   134d8:	add	fp, fp, r6
   134dc:	cmp	r3, #45	; 0x2d
   134e0:	beq	13f38 <dcngettext@plt+0x2c6c>
   134e4:	sub	r5, r5, r6
   134e8:	mvn	r3, fp
   134ec:	cmp	r5, r3
   134f0:	bcs	1223c <dcngettext@plt+0xf70>
   134f4:	cmp	r7, #0
   134f8:	beq	13538 <dcngettext@plt+0x226c>
   134fc:	cmp	r5, #0
   13500:	beq	12210 <dcngettext@plt+0xf44>
   13504:	ldr	r3, [sp, #36]	; 0x24
   13508:	cmp	r3, #43	; 0x2b
   1350c:	cmpne	r3, #48	; 0x30
   13510:	moveq	r6, #1
   13514:	movne	r6, #0
   13518:	bne	13540 <dcngettext@plt+0x2274>
   1351c:	mov	r6, #0
   13520:	add	r6, r6, #1
   13524:	mov	r1, r7
   13528:	mov	r0, #48	; 0x30
   1352c:	bl	11254 <fputc@plt>
   13530:	cmp	r5, r6
   13534:	bne	13520 <dcngettext@plt+0x2254>
   13538:	add	fp, fp, r5
   1353c:	b	12210 <dcngettext@plt+0xf44>
   13540:	add	r6, r6, #1
   13544:	mov	r1, r7
   13548:	mov	r0, #32
   1354c:	bl	11254 <fputc@plt>
   13550:	cmp	r5, r6
   13554:	bne	13540 <dcngettext@plt+0x2274>
   13558:	b	13538 <dcngettext@plt+0x226c>
   1355c:	cmp	r6, #69	; 0x45
   13560:	beq	127e4 <dcngettext@plt+0x1518>
   13564:	mov	r2, #2
   13568:	str	r2, [sp, #80]	; 0x50
   1356c:	ldr	r2, [sp, #40]	; 0x28
   13570:	ldr	r2, [r2, #4]
   13574:	b	12ad8 <dcngettext@plt+0x180c>
   13578:	cmp	r6, #69	; 0x45
   1357c:	beq	127e4 <dcngettext@plt+0x1518>
   13580:	mov	r1, #2
   13584:	ldr	r2, [sp, #24]
   13588:	str	r1, [sp, #80]	; 0x50
   1358c:	b	12ad8 <dcngettext@plt+0x180c>
   13590:	cmp	r6, #69	; 0x45
   13594:	beq	127e4 <dcngettext@plt+0x1518>
   13598:	mov	r2, #2
   1359c:	str	r2, [sp, #80]	; 0x50
   135a0:	ldr	r2, [sp, #40]	; 0x28
   135a4:	ldr	r2, [r2, #8]
   135a8:	b	12ad8 <dcngettext@plt+0x180c>
   135ac:	cmp	r6, #69	; 0x45
   135b0:	beq	127e4 <dcngettext@plt+0x1518>
   135b4:	ldr	r2, [sp, #40]	; 0x28
   135b8:	ldr	r8, [r2, #20]
   135bc:	ldr	r1, [r2, #24]
   135c0:	ldr	r9, [r2, #28]
   135c4:	cmp	r8, #0
   135c8:	ldr	r2, [sp, #56]	; 0x38
   135cc:	str	r1, [sp, #76]	; 0x4c
   135d0:	sub	r1, r9, r1
   135d4:	add	r1, r1, #380	; 0x17c
   135d8:	add	r1, r1, #2
   135dc:	asr	r0, r1, #31
   135e0:	smull	r2, ip, r2, r1
   135e4:	movlt	r2, #300	; 0x12c
   135e8:	mvnge	r2, #99	; 0x63
   135ec:	add	ip, ip, r1
   135f0:	add	r2, r8, r2
   135f4:	rsb	r0, r0, ip, asr #2
   135f8:	rsb	r0, r0, r0, lsl #3
   135fc:	sub	r0, r1, r0
   13600:	sub	sl, r9, r0
   13604:	adds	sl, sl, #3
   13608:	bmi	13dd0 <dcngettext@plt+0x2b04>
   1360c:	tst	r2, #3
   13610:	movwne	r2, #365	; 0x16d
   13614:	bne	1365c <dcngettext@plt+0x2390>
   13618:	ldr	r1, [sp, #60]	; 0x3c
   1361c:	mov	ip, #100	; 0x64
   13620:	smull	r1, r0, r1, r2
   13624:	asr	r1, r2, #31
   13628:	rsb	r1, r1, r0, asr #5
   1362c:	mls	r1, ip, r1, r2
   13630:	cmp	r1, #0
   13634:	movwne	r2, #366	; 0x16e
   13638:	bne	1365c <dcngettext@plt+0x2390>
   1363c:	mov	ip, #400	; 0x190
   13640:	movw	r1, #365	; 0x16d
   13644:	movw	lr, #366	; 0x16e
   13648:	sdiv	r0, r2, ip
   1364c:	mls	r2, ip, r0, r2
   13650:	cmp	r2, #0
   13654:	movne	r2, r1
   13658:	moveq	r2, lr
   1365c:	sub	r9, r9, r2
   13660:	ldr	r0, [sp, #56]	; 0x38
   13664:	ldr	r2, [sp, #76]	; 0x4c
   13668:	sub	r2, r9, r2
   1366c:	add	r2, r2, #380	; 0x17c
   13670:	add	r2, r2, #2
   13674:	asr	r1, r2, #31
   13678:	smull	ip, r0, r0, r2
   1367c:	add	r0, r0, r2
   13680:	rsb	r1, r1, r0, asr #2
   13684:	rsb	r1, r1, r1, lsl #3
   13688:	sub	r2, r2, r1
   1368c:	sub	r2, r9, r2
   13690:	add	r2, r2, #3
   13694:	cmp	r2, #0
   13698:	movge	sl, r2
   1369c:	movge	lr, #1
   136a0:	movlt	lr, #0
   136a4:	cmp	r3, #71	; 0x47
   136a8:	beq	13ea8 <dcngettext@plt+0x2bdc>
   136ac:	cmp	r3, #103	; 0x67
   136b0:	bne	13e84 <dcngettext@plt+0x2bb8>
   136b4:	ldr	ip, [sp, #60]	; 0x3c
   136b8:	mov	r0, #100	; 0x64
   136bc:	smull	r2, r1, ip, r8
   136c0:	asr	r2, r8, #31
   136c4:	rsb	r2, r2, r1, asr #5
   136c8:	mls	r2, r0, r2, r8
   136cc:	add	r2, r2, lr
   136d0:	asr	r1, r2, #31
   136d4:	smull	r9, ip, ip, r2
   136d8:	rsb	ip, r1, ip, asr #5
   136dc:	mls	ip, r0, ip, r2
   136e0:	cmp	ip, #0
   136e4:	bge	12954 <dcngettext@plt+0x1688>
   136e8:	movw	r2, #63636	; 0xf894
   136ec:	movt	r2, #65535	; 0xffff
   136f0:	sub	r2, r2, lr
   136f4:	cmp	r2, r8
   136f8:	ldr	r2, [sp, #36]	; 0x24
   136fc:	ble	14020 <dcngettext@plt+0x2d54>
   13700:	cmp	r2, #0
   13704:	rsb	ip, ip, #0
   13708:	beq	12960 <dcngettext@plt+0x1694>
   1370c:	ldr	r2, [sp, #36]	; 0x24
   13710:	cmp	r2, #43	; 0x2b
   13714:	beq	13d7c <dcngettext@plt+0x2ab0>
   13718:	mov	r2, #0
   1371c:	mov	r1, r2
   13720:	mov	r2, #1
   13724:	str	r1, [sp, #76]	; 0x4c
   13728:	str	r1, [sp, #84]	; 0x54
   1372c:	mov	r1, #2
   13730:	str	r1, [sp, #80]	; 0x50
   13734:	b	1298c <dcngettext@plt+0x16c0>
   13738:	mov	r4, sl
   1373c:	mov	r6, #0
   13740:	mvn	r3, fp
   13744:	cmp	r6, #0
   13748:	str	r3, [sp, #76]	; 0x4c
   1374c:	bne	127ec <dcngettext@plt+0x1520>
   13750:	ldr	r3, [sp, #36]	; 0x24
   13754:	cmp	r3, #0
   13758:	lsreq	r3, r5, #31
   1375c:	movne	r3, #0
   13760:	cmp	r3, #0
   13764:	bne	13fcc <dcngettext@plt+0x2d00>
   13768:	sub	sl, r5, #6
   1376c:	movw	r8, #33380	; 0x8264
   13770:	movt	r8, #1
   13774:	bic	sl, sl, sl, asr #31
   13778:	b	132e0 <dcngettext@plt+0x2014>
   1377c:	cmp	r6, #69	; 0x45
   13780:	beq	13dc8 <dcngettext@plt+0x2afc>
   13784:	ldr	r2, [sp, #40]	; 0x28
   13788:	movw	ip, #1899	; 0x76b
   1378c:	ldr	r0, [r2, #20]
   13790:	movw	r2, #63636	; 0xf894
   13794:	movt	r2, #65535	; 0xffff
   13798:	add	r1, r0, #1888	; 0x760
   1379c:	cmp	r0, r2
   137a0:	add	r1, r1, #12
   137a4:	movge	lr, #0
   137a8:	movlt	lr, #1
   137ac:	cmp	r1, ip
   137b0:	mvnls	r1, #98	; 0x62
   137b4:	movhi	r1, #0
   137b8:	add	r1, r1, r0
   137bc:	cmp	r0, r2
   137c0:	ldr	r0, [sp, #36]	; 0x24
   137c4:	movlt	r2, #0
   137c8:	movge	r2, #1
   137cc:	asr	ip, r1, #31
   137d0:	str	lr, [sp, #76]	; 0x4c
   137d4:	cmp	r0, #0
   137d8:	ldr	r0, [sp, #60]	; 0x3c
   137dc:	smull	r0, r1, r0, r1
   137e0:	rsb	r1, ip, r1, asr #5
   137e4:	add	ip, r1, #19
   137e8:	bne	13dac <dcngettext@plt+0x2ae0>
   137ec:	ldr	r1, [sp, #1168]	; 0x490
   137f0:	cmp	r1, #43	; 0x2b
   137f4:	beq	13fbc <dcngettext@plt+0x2cf0>
   137f8:	ldr	r1, [sp, #1168]	; 0x490
   137fc:	mov	r0, #2
   13800:	str	r1, [sp, #36]	; 0x24
   13804:	mov	r1, #0
   13808:	strd	r0, [sp, #80]	; 0x50
   1380c:	b	1298c <dcngettext@plt+0x16c0>
   13810:	mov	r4, sl
   13814:	mov	r6, #0
   13818:	mvn	r3, fp
   1381c:	cmp	r6, #0
   13820:	str	r3, [sp, #76]	; 0x4c
   13824:	bne	127ec <dcngettext@plt+0x1520>
   13828:	movw	r8, #33400	; 0x8278
   1382c:	movt	r8, #1
   13830:	mvn	sl, #0
   13834:	b	132e0 <dcngettext@plt+0x2014>
   13838:	cmp	r6, #69	; 0x45
   1383c:	beq	127e4 <dcngettext@plt+0x1518>
   13840:	ldr	r2, [sp, #52]	; 0x34
   13844:	cmp	r9, #0
   13848:	mov	r3, #66	; 0x42
   1384c:	movne	r2, r9
   13850:	mov	r8, #0
   13854:	str	r2, [sp, #52]	; 0x34
   13858:	b	12aa4 <dcngettext@plt+0x17d8>
   1385c:	mov	r4, sl
   13860:	mov	r6, #0
   13864:	mov	r3, #114	; 0x72
   13868:	mov	r8, #0
   1386c:	b	12aa4 <dcngettext@plt+0x17d8>
   13870:	mov	r4, sl
   13874:	mov	r6, #0
   13878:	mov	r8, #0
   1387c:	ldr	r2, [sp, #52]	; 0x34
   13880:	cmp	r9, #0
   13884:	mov	r3, #112	; 0x70
   13888:	movne	r2, #0
   1388c:	movne	r8, r9
   13890:	str	r2, [sp, #52]	; 0x34
   13894:	b	12aa4 <dcngettext@plt+0x17d8>
   13898:	mov	r4, sl
   1389c:	mvn	r3, fp
   138a0:	movw	r8, #33392	; 0x8270
   138a4:	movt	r8, #1
   138a8:	mvn	sl, #0
   138ac:	str	r3, [sp, #76]	; 0x4c
   138b0:	b	132e0 <dcngettext@plt+0x2014>
   138b4:	mov	r4, sl
   138b8:	mov	r6, #0
   138bc:	mov	r8, #1
   138c0:	b	1387c <dcngettext@plt+0x25b0>
   138c4:	mov	r4, sl
   138c8:	mov	r6, #0
   138cc:	mov	sl, #0
   138d0:	ldr	r1, [sp, #40]	; 0x28
   138d4:	ldr	r2, [r1, #32]
   138d8:	cmp	r2, #0
   138dc:	blt	12210 <dcngettext@plt+0xf44>
   138e0:	ldr	r1, [r1, #36]	; 0x24
   138e4:	cmp	r1, #0
   138e8:	movlt	r2, #1
   138ec:	strlt	r2, [sp, #76]	; 0x4c
   138f0:	blt	13918 <dcngettext@plt+0x264c>
   138f4:	movne	r2, #0
   138f8:	strne	r2, [sp, #76]	; 0x4c
   138fc:	bne	13918 <dcngettext@plt+0x264c>
   13900:	ldr	r2, [sp, #48]	; 0x30
   13904:	ldrb	r2, [r2]
   13908:	sub	r2, r2, #45	; 0x2d
   1390c:	clz	r2, r2
   13910:	lsr	r2, r2, #5
   13914:	str	r2, [sp, #76]	; 0x4c
   13918:	ldr	r0, [sp, #72]	; 0x48
   1391c:	asr	r9, r1, #31
   13920:	smull	ip, r2, r0, r1
   13924:	ldr	ip, [sp, #68]	; 0x44
   13928:	add	r2, r2, r1
   1392c:	rsb	r2, r9, r2, asr #5
   13930:	smull	lr, ip, ip, r1
   13934:	asr	lr, r2, #31
   13938:	add	ip, ip, r1
   1393c:	str	ip, [sp, #80]	; 0x50
   13940:	smull	ip, r0, r0, r2
   13944:	ldr	ip, [sp, #80]	; 0x50
   13948:	add	r0, r0, r2
   1394c:	rsb	lr, lr, r0, asr #5
   13950:	rsb	r9, r9, ip, asr #11
   13954:	rsb	lr, lr, lr, lsl #4
   13958:	rsb	ip, r2, r2, lsl #4
   1395c:	sub	lr, r2, lr, lsl #2
   13960:	sub	r1, r1, ip, lsl #2
   13964:	cmp	sl, #3
   13968:	ldrls	pc, [pc, sl, lsl #2]
   1396c:	b	127e4 <dcngettext@plt+0x1518>
   13970:	andeq	r3, r1, ip, lsr fp
   13974:	andeq	r3, r1, r4, lsl fp
   13978:	andeq	r3, r1, r0, ror #21
   1397c:	andeq	r3, r1, r0, ror #22
   13980:	mov	r4, sl
   13984:	mov	r6, #0
   13988:	ldrb	r2, [r4, #1]
   1398c:	add	r1, r4, #1
   13990:	cmp	r2, #58	; 0x3a
   13994:	movne	sl, #1
   13998:	beq	13f5c <dcngettext@plt+0x2c90>
   1399c:	cmp	r2, #122	; 0x7a
   139a0:	bne	127e4 <dcngettext@plt+0x1518>
   139a4:	mov	r4, r1
   139a8:	b	138d0 <dcngettext@plt+0x2604>
   139ac:	cmp	r6, #0
   139b0:	bne	127e4 <dcngettext@plt+0x1518>
   139b4:	mov	sl, r4
   139b8:	ldr	r3, [sp, #52]	; 0x34
   139bc:	cmp	r9, #0
   139c0:	mov	r4, sl
   139c4:	movne	r3, r9
   139c8:	str	r3, [sp, #52]	; 0x34
   139cc:	mov	r3, #65	; 0x41
   139d0:	b	12f1c <dcngettext@plt+0x1c50>
   139d4:	mov	r4, sl
   139d8:	mov	r6, #0
   139dc:	b	13840 <dcngettext@plt+0x2574>
   139e0:	mov	r4, sl
   139e4:	mov	r6, #0
   139e8:	b	12918 <dcngettext@plt+0x164c>
   139ec:	mov	r4, sl
   139f0:	mov	r6, #0
   139f4:	b	12ac8 <dcngettext@plt+0x17fc>
   139f8:	mov	r4, sl
   139fc:	mov	r6, #0
   13a00:	b	12a9c <dcngettext@plt+0x17d0>
   13a04:	mov	r4, sl
   13a08:	mov	r6, #0
   13a0c:	b	13148 <dcngettext@plt+0x1e7c>
   13a10:	mov	r4, sl
   13a14:	mov	r6, #0
   13a18:	b	1312c <dcngettext@plt+0x1e60>
   13a1c:	mov	r4, sl
   13a20:	mov	r6, #0
   13a24:	b	12ecc <dcngettext@plt+0x1c00>
   13a28:	mov	r4, sl
   13a2c:	mov	r6, #0
   13a30:	b	12eb0 <dcngettext@plt+0x1be4>
   13a34:	mov	r4, sl
   13a38:	mov	r6, #0
   13a3c:	b	12e84 <dcngettext@plt+0x1bb8>
   13a40:	mov	r4, sl
   13a44:	mov	r6, #0
   13a48:	b	12e44 <dcngettext@plt+0x1b78>
   13a4c:	mov	r4, sl
   13a50:	mov	r6, #0
   13a54:	b	13158 <dcngettext@plt+0x1e8c>
   13a58:	mov	r4, sl
   13a5c:	mov	r6, #0
   13a60:	b	13784 <dcngettext@plt+0x24b8>
   13a64:	mov	r4, sl
   13a68:	mov	r6, #0
   13a6c:	b	135b4 <dcngettext@plt+0x22e8>
   13a70:	mov	r4, sl
   13a74:	mov	r6, #0
   13a78:	b	13598 <dcngettext@plt+0x22cc>
   13a7c:	mov	r4, sl
   13a80:	mov	r6, #0
   13a84:	b	13580 <dcngettext@plt+0x22b4>
   13a88:	mov	r4, sl
   13a8c:	mov	r6, #0
   13a90:	b	13564 <dcngettext@plt+0x2298>
   13a94:	mov	r4, sl
   13a98:	mov	r6, #0
   13a9c:	b	13294 <dcngettext@plt+0x1fc8>
   13aa0:	mov	r4, sl
   13aa4:	mov	r6, #0
   13aa8:	b	1323c <dcngettext@plt+0x1f70>
   13aac:	mov	r4, sl
   13ab0:	mov	r6, #0
   13ab4:	b	1322c <dcngettext@plt+0x1f60>
   13ab8:	mov	r4, sl
   13abc:	mov	r6, #0
   13ac0:	b	13014 <dcngettext@plt+0x1d48>
   13ac4:	mov	r4, sl
   13ac8:	b	12f08 <dcngettext@plt+0x1c3c>
   13acc:	mov	r4, sl
   13ad0:	mov	r6, #0
   13ad4:	b	133d8 <dcngettext@plt+0x210c>
   13ad8:	mov	r4, sl
   13adc:	b	127e4 <dcngettext@plt+0x1518>
   13ae0:	mov	ip, #100	; 0x64
   13ae4:	movw	r0, #10000	; 0x2710
   13ae8:	ldr	r2, [sp, #76]	; 0x4c
   13aec:	mul	ip, ip, lr
   13af0:	mov	lr, #1
   13af4:	str	lr, [sp, #84]	; 0x54
   13af8:	mov	lr, #20
   13afc:	mla	ip, r0, r9, ip
   13b00:	mov	r0, #9
   13b04:	eor	r2, r2, #1
   13b08:	str	r0, [sp, #80]	; 0x50
   13b0c:	add	ip, ip, r1
   13b10:	b	12990 <dcngettext@plt+0x16c4>
   13b14:	ldr	r2, [sp, #76]	; 0x4c
   13b18:	mov	r1, #1
   13b1c:	mov	ip, #100	; 0x64
   13b20:	str	r1, [sp, #84]	; 0x54
   13b24:	mov	r1, #6
   13b28:	mla	ip, ip, r9, lr
   13b2c:	mov	lr, #4
   13b30:	str	r1, [sp, #80]	; 0x50
   13b34:	eor	r2, r2, #1
   13b38:	b	12990 <dcngettext@plt+0x16c4>
   13b3c:	ldr	r2, [sp, #76]	; 0x4c
   13b40:	mov	r1, #1
   13b44:	mov	ip, #100	; 0x64
   13b48:	str	r1, [sp, #84]	; 0x54
   13b4c:	mov	r1, #5
   13b50:	mla	ip, ip, r9, lr
   13b54:	str	r1, [sp, #80]	; 0x50
   13b58:	eor	r2, r2, #1
   13b5c:	b	1298c <dcngettext@plt+0x16c0>
   13b60:	cmp	r1, #0
   13b64:	bne	13ae0 <dcngettext@plt+0x2814>
   13b68:	cmp	lr, #0
   13b6c:	bne	13b14 <dcngettext@plt+0x2848>
   13b70:	ldr	r2, [sp, #76]	; 0x4c
   13b74:	mov	r1, #1
   13b78:	mov	ip, r9
   13b7c:	str	r1, [sp, #84]	; 0x54
   13b80:	mov	r1, #3
   13b84:	str	r1, [sp, #80]	; 0x50
   13b88:	eor	r2, r2, #1
   13b8c:	b	12990 <dcngettext@plt+0x16c4>
   13b90:	mov	r2, #45	; 0x2d
   13b94:	str	r2, [sp, #76]	; 0x4c
   13b98:	sub	sl, r5, #1
   13b9c:	sub	sl, sl, r8
   13ba0:	cmp	sl, #0
   13ba4:	movle	r3, #0
   13ba8:	andgt	r3, r3, #1
   13bac:	cmp	r3, #0
   13bb0:	ldr	r3, [sp, #36]	; 0x24
   13bb4:	moveq	sl, #0
   13bb8:	cmp	r3, #95	; 0x5f
   13bbc:	beq	13cc4 <dcngettext@plt+0x29f8>
   13bc0:	cmn	fp, #3
   13bc4:	bhi	1223c <dcngettext@plt+0xf70>
   13bc8:	cmp	r7, #0
   13bcc:	beq	13bdc <dcngettext@plt+0x2910>
   13bd0:	mov	r1, r7
   13bd4:	ldr	r0, [sp, #76]	; 0x4c
   13bd8:	bl	11254 <fputc@plt>
   13bdc:	ldr	r3, [sp, #36]	; 0x24
   13be0:	add	fp, fp, #1
   13be4:	cmp	r3, #45	; 0x2d
   13be8:	beq	13bf4 <dcngettext@plt+0x2928>
   13bec:	subs	r5, r5, #1
   13bf0:	bpl	12d08 <dcngettext@plt+0x1a3c>
   13bf4:	mov	r9, r8
   13bf8:	mov	r5, #0
   13bfc:	b	12d14 <dcngettext@plt+0x1a48>
   13c00:	mov	r1, #48	; 0x30
   13c04:	mov	r3, #1
   13c08:	str	r1, [sp, #36]	; 0x24
   13c0c:	b	12cb0 <dcngettext@plt+0x19e4>
   13c10:	mov	fp, r3
   13c14:	b	12224 <dcngettext@plt+0xf58>
   13c18:	mov	r1, r8
   13c1c:	mov	r0, r6
   13c20:	mov	r3, r7
   13c24:	mov	r2, #1
   13c28:	bl	11098 <fwrite@plt>
   13c2c:	b	12894 <dcngettext@plt+0x15c8>
   13c30:	mov	r1, r6
   13c34:	add	r0, sp, #105	; 0x69
   13c38:	mov	r3, r7
   13c3c:	mov	r2, #1
   13c40:	bl	11098 <fwrite@plt>
   13c44:	b	12894 <dcngettext@plt+0x15c8>
   13c48:	mov	r2, r6
   13c4c:	add	r1, sp, #105	; 0x69
   13c50:	mov	r0, r7
   13c54:	bl	12018 <dcngettext@plt+0xd4c>
   13c58:	b	12894 <dcngettext@plt+0x15c8>
   13c5c:	mov	r9, r0
   13c60:	mov	r5, #0
   13c64:	b	1332c <dcngettext@plt+0x2060>
   13c68:	mov	r2, #43	; 0x2b
   13c6c:	str	r2, [sp, #76]	; 0x4c
   13c70:	b	13b98 <dcngettext@plt+0x28cc>
   13c74:	cmp	r5, #0
   13c78:	beq	12a6c <dcngettext@plt+0x17a0>
   13c7c:	mov	sl, #0
   13c80:	add	sl, sl, #1
   13c84:	mov	r1, r7
   13c88:	mov	r0, #48	; 0x30
   13c8c:	bl	11254 <fputc@plt>
   13c90:	cmp	r5, sl
   13c94:	bne	13c80 <dcngettext@plt+0x29b4>
   13c98:	b	12a6c <dcngettext@plt+0x17a0>
   13c9c:	cmp	r5, #0
   13ca0:	beq	12d6c <dcngettext@plt+0x1aa0>
   13ca4:	mov	sl, #0
   13ca8:	add	sl, sl, #1
   13cac:	mov	r1, r7
   13cb0:	mov	r0, #48	; 0x30
   13cb4:	bl	11254 <fputc@plt>
   13cb8:	cmp	r5, sl
   13cbc:	bne	13ca8 <dcngettext@plt+0x29dc>
   13cc0:	b	12d6c <dcngettext@plt+0x1aa0>
   13cc4:	cmp	r7, #0
   13cc8:	bne	13d48 <dcngettext@plt+0x2a7c>
   13ccc:	add	fp, fp, sl
   13cd0:	sub	r5, r5, sl
   13cd4:	b	13bc0 <dcngettext@plt+0x28f4>
   13cd8:	cmn	fp, #3
   13cdc:	bhi	1223c <dcngettext@plt+0xf70>
   13ce0:	cmp	r7, #0
   13ce4:	mov	r8, #1
   13ce8:	bne	130f8 <dcngettext@plt+0x1e2c>
   13cec:	b	12bc0 <dcngettext@plt+0x18f4>
   13cf0:	cmn	fp, #3
   13cf4:	bhi	1223c <dcngettext@plt+0xf70>
   13cf8:	cmp	r7, #0
   13cfc:	mov	r8, #1
   13d00:	bne	12bb4 <dcngettext@plt+0x18e8>
   13d04:	b	12bc0 <dcngettext@plt+0x18f4>
   13d08:	ldr	r1, [sp, #36]	; 0x24
   13d0c:	cmp	r1, #43	; 0x2b
   13d10:	movne	r0, #4
   13d14:	movne	r1, #0
   13d18:	strdne	r0, [sp, #80]	; 0x50
   13d1c:	bne	1298c <dcngettext@plt+0x16c0>
   13d20:	mov	r1, #4
   13d24:	str	r1, [sp, #80]	; 0x50
   13d28:	movw	r1, #9999	; 0x270f
   13d2c:	cmp	r1, ip
   13d30:	bcs	13d8c <dcngettext@plt+0x2ac0>
   13d34:	mov	r1, #1
   13d38:	str	r1, [sp, #84]	; 0x54
   13d3c:	mov	r1, #43	; 0x2b
   13d40:	str	r1, [sp, #36]	; 0x24
   13d44:	b	1298c <dcngettext@plt+0x16c0>
   13d48:	cmp	sl, #0
   13d4c:	beq	13ccc <dcngettext@plt+0x2a00>
   13d50:	mov	r9, #0
   13d54:	add	r9, r9, #1
   13d58:	mov	r1, r7
   13d5c:	mov	r0, #32
   13d60:	bl	11254 <fputc@plt>
   13d64:	cmp	r9, sl
   13d68:	bne	13d54 <dcngettext@plt+0x2a88>
   13d6c:	b	13ccc <dcngettext@plt+0x2a00>
   13d70:	asreq	r1, r3, #31
   13d74:	beq	13454 <dcngettext@plt+0x2188>
   13d78:	b	13494 <dcngettext@plt+0x21c8>
   13d7c:	mov	r0, #0
   13d80:	mov	r1, #2
   13d84:	mov	r2, #1
   13d88:	strd	r0, [sp, #76]	; 0x4c
   13d8c:	ldr	r1, [sp, #80]	; 0x50
   13d90:	cmp	r5, r1
   13d94:	movle	r1, #0
   13d98:	movgt	r1, #1
   13d9c:	str	r1, [sp, #84]	; 0x54
   13da0:	mov	r1, #43	; 0x2b
   13da4:	str	r1, [sp, #36]	; 0x24
   13da8:	b	1298c <dcngettext@plt+0x16c0>
   13dac:	ldr	r1, [sp, #36]	; 0x24
   13db0:	cmp	r1, #43	; 0x2b
   13db4:	beq	13fbc <dcngettext@plt+0x2cf0>
   13db8:	mov	r0, #2
   13dbc:	mov	r1, #0
   13dc0:	strd	r0, [sp, #80]	; 0x50
   13dc4:	b	1298c <dcngettext@plt+0x16c0>
   13dc8:	mov	r3, #67	; 0x43
   13dcc:	b	129a4 <dcngettext@plt+0x16d8>
   13dd0:	sub	r2, r2, #1
   13dd4:	tst	r2, #3
   13dd8:	movwne	r2, #365	; 0x16d
   13ddc:	bne	13e24 <dcngettext@plt+0x2b58>
   13de0:	ldr	r1, [sp, #60]	; 0x3c
   13de4:	mov	ip, #100	; 0x64
   13de8:	smull	r1, r0, r1, r2
   13dec:	asr	r1, r2, #31
   13df0:	rsb	r1, r1, r0, asr #5
   13df4:	mls	r1, ip, r1, r2
   13df8:	cmp	r1, #0
   13dfc:	movwne	r2, #366	; 0x16e
   13e00:	bne	13e24 <dcngettext@plt+0x2b58>
   13e04:	mov	ip, #400	; 0x190
   13e08:	movw	r1, #365	; 0x16d
   13e0c:	movw	lr, #366	; 0x16e
   13e10:	sdiv	r0, r2, ip
   13e14:	mls	r2, ip, r0, r2
   13e18:	cmp	r2, #0
   13e1c:	movne	r2, r1
   13e20:	moveq	r2, lr
   13e24:	add	r9, r9, r2
   13e28:	ldr	r0, [sp, #56]	; 0x38
   13e2c:	mvn	lr, #0
   13e30:	ldr	r2, [sp, #76]	; 0x4c
   13e34:	sub	r2, r9, r2
   13e38:	add	r2, r2, #380	; 0x17c
   13e3c:	add	r2, r2, #2
   13e40:	asr	r1, r2, #31
   13e44:	smull	ip, r0, r0, r2
   13e48:	add	r0, r0, r2
   13e4c:	rsb	r1, r1, r0, asr #2
   13e50:	rsb	r1, r1, r1, lsl #3
   13e54:	sub	r2, r2, r1
   13e58:	sub	r2, r9, r2
   13e5c:	add	sl, r2, #3
   13e60:	b	136a4 <dcngettext@plt+0x23d8>
   13e64:	mov	r3, #121	; 0x79
   13e68:	b	129a4 <dcngettext@plt+0x16d8>
   13e6c:	cmn	fp, #3
   13e70:	bhi	1223c <dcngettext@plt+0xf70>
   13e74:	cmp	r7, #0
   13e78:	mov	r4, #1
   13e7c:	bne	131f0 <dcngettext@plt+0x1f24>
   13e80:	b	131fc <dcngettext@plt+0x1f30>
   13e84:	ldr	r2, [sp, #56]	; 0x38
   13e88:	smull	r2, r1, r2, sl
   13e8c:	mov	r2, #2
   13e90:	str	r2, [sp, #80]	; 0x50
   13e94:	asr	r2, sl, #31
   13e98:	add	sl, r1, sl
   13e9c:	rsb	r2, r2, sl, asr #2
   13ea0:	add	r2, r2, #1
   13ea4:	b	12ad8 <dcngettext@plt+0x180c>
   13ea8:	movw	r2, #63636	; 0xf894
   13eac:	movt	r2, #65535	; 0xffff
   13eb0:	ldr	r1, [sp, #36]	; 0x24
   13eb4:	sub	r2, r2, lr
   13eb8:	add	ip, r8, #1888	; 0x760
   13ebc:	cmp	r8, r2
   13ec0:	add	ip, ip, #12
   13ec4:	movlt	r2, #1
   13ec8:	movge	r2, #0
   13ecc:	add	ip, ip, lr
   13ed0:	str	r2, [sp, #76]	; 0x4c
   13ed4:	movge	r2, #1
   13ed8:	movlt	r2, #0
   13edc:	cmp	r1, #0
   13ee0:	bne	13d08 <dcngettext@plt+0x2a3c>
   13ee4:	ldr	r1, [sp, #1168]	; 0x490
   13ee8:	cmp	r1, #43	; 0x2b
   13eec:	beq	13d20 <dcngettext@plt+0x2a54>
   13ef0:	mov	r0, #4
   13ef4:	str	r1, [sp, #36]	; 0x24
   13ef8:	mov	r1, #0
   13efc:	strd	r0, [sp, #80]	; 0x50
   13f00:	b	1298c <dcngettext@plt+0x16c0>
   13f04:	mov	r1, r6
   13f08:	mov	r3, r7
   13f0c:	ldr	r0, [sp, #48]	; 0x30
   13f10:	mov	r2, #1
   13f14:	bl	11098 <fwrite@plt>
   13f18:	b	12bc0 <dcngettext@plt+0x18f4>
   13f1c:	mov	r2, r6
   13f20:	mov	r0, r7
   13f24:	ldr	r1, [sp, #48]	; 0x30
   13f28:	bl	12018 <dcngettext@plt+0xd4c>
   13f2c:	b	12bc0 <dcngettext@plt+0x18f4>
   13f30:	mov	r3, #89	; 0x59
   13f34:	b	129a4 <dcngettext@plt+0x16d8>
   13f38:	cmn	fp, #1
   13f3c:	bne	12210 <dcngettext@plt+0xf44>
   13f40:	b	1223c <dcngettext@plt+0xf70>
   13f44:	mov	r3, r7
   13f48:	mov	r2, #1
   13f4c:	mov	r1, r6
   13f50:	add	r0, sp, #88	; 0x58
   13f54:	bl	11098 <fwrite@plt>
   13f58:	b	134d4 <dcngettext@plt+0x2208>
   13f5c:	add	r0, r4, #2
   13f60:	mov	sl, #1
   13f64:	mov	r1, r0
   13f68:	ldrb	r2, [r0], #1
   13f6c:	add	sl, sl, #1
   13f70:	cmp	r2, #58	; 0x3a
   13f74:	bne	1399c <dcngettext@plt+0x26d0>
   13f78:	b	13f64 <dcngettext@plt+0x2c98>
   13f7c:	ldr	r2, [sp, #36]	; 0x24
   13f80:	mov	r1, #2
   13f84:	str	r2, [sp, #76]	; 0x4c
   13f88:	mov	r2, #1
   13f8c:	str	r1, [sp, #80]	; 0x50
   13f90:	b	13d8c <dcngettext@plt+0x2ac0>
   13f94:	cmp	r5, #0
   13f98:	beq	12fdc <dcngettext@plt+0x1d10>
   13f9c:	mov	sl, #0
   13fa0:	add	sl, sl, #1
   13fa4:	mov	r1, r7
   13fa8:	mov	r0, #48	; 0x30
   13fac:	bl	11254 <fputc@plt>
   13fb0:	cmp	r5, sl
   13fb4:	bne	13fa0 <dcngettext@plt+0x2cd4>
   13fb8:	b	12fdc <dcngettext@plt+0x1d10>
   13fbc:	mov	r1, #2
   13fc0:	str	r1, [sp, #80]	; 0x50
   13fc4:	mov	r1, #99	; 0x63
   13fc8:	b	13d2c <dcngettext@plt+0x2a60>
   13fcc:	mov	ip, #43	; 0x2b
   13fd0:	mov	sl, #4
   13fd4:	ldr	r2, [sp, #40]	; 0x28
   13fd8:	movw	r1, #33380	; 0x8264
   13fdc:	movt	r1, #1
   13fe0:	ldr	r3, [sp, #1176]	; 0x498
   13fe4:	mov	r0, r6
   13fe8:	mov	r8, r1
   13fec:	str	ip, [sp]
   13ff0:	mov	r5, r6
   13ff4:	ldr	lr, [sp, #1184]	; 0x4a0
   13ff8:	str	sl, [sp, #4]
   13ffc:	str	r3, [sp, #8]
   14000:	ldr	r3, [sp, #1180]	; 0x49c
   14004:	str	ip, [sp, #36]	; 0x24
   14008:	str	r3, [sp, #12]
   1400c:	str	lr, [sp, #16]
   14010:	ldr	r3, [sp, #52]	; 0x34
   14014:	bl	120d0 <dcngettext@plt+0xe04>
   14018:	mov	r9, r0
   1401c:	b	1332c <dcngettext@plt+0x2060>
   14020:	cmp	r2, #0
   14024:	add	ip, ip, #100	; 0x64
   14028:	beq	12960 <dcngettext@plt+0x1694>
   1402c:	b	1370c <dcngettext@plt+0x2440>
   14030:	ldr	r2, [sp, #28]
   14034:	mov	r3, #75	; 0x4b
   14038:	str	r3, [r2]
   1403c:	b	12248 <dcngettext@plt+0xf7c>
   14040:	str	r4, [sp, #-8]!
   14044:	mov	ip, #0
   14048:	str	lr, [sp, #4]
   1404c:	sub	sp, sp, #32
   14050:	ldr	lr, [sp, #40]	; 0x28
   14054:	add	r4, sp, #31
   14058:	str	ip, [sp]
   1405c:	str	r3, [sp, #12]
   14060:	mvn	r3, #0
   14064:	str	r3, [sp, #4]
   14068:	mov	r3, ip
   1406c:	str	r4, [sp, #8]
   14070:	str	lr, [sp, #16]
   14074:	strb	ip, [sp, #31]
   14078:	bl	120d0 <dcngettext@plt+0xe04>
   1407c:	add	sp, sp, #32
   14080:	ldr	r4, [sp]
   14084:	add	sp, sp, #4
   14088:	pop	{pc}		; (ldr pc, [sp], #4)
   1408c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14090:	mov	r4, r0
   14094:	ldr	ip, [r0, #4]
   14098:	strd	r6, [sp, #8]
   1409c:	str	lr, [sp, #20]
   140a0:	ldr	lr, [r0, #8]
   140a4:	str	r8, [sp, #16]
   140a8:	sub	sp, sp, #8
   140ac:	ldr	r5, [sp, #32]
   140b0:	cmp	lr, ip
   140b4:	beq	140dc <dcngettext@plt+0x2e10>
   140b8:	mov	r0, r4
   140bc:	str	r5, [sp, #32]
   140c0:	add	sp, sp, #8
   140c4:	ldrd	r4, [sp]
   140c8:	ldrd	r6, [sp, #8]
   140cc:	ldr	r8, [sp, #16]
   140d0:	ldr	lr, [sp, #20]
   140d4:	add	sp, sp, #24
   140d8:	b	111f4 <fseeko64@plt>
   140dc:	ldr	ip, [r0, #16]
   140e0:	ldr	lr, [r0, #20]
   140e4:	cmp	lr, ip
   140e8:	bne	140b8 <dcngettext@plt+0x2dec>
   140ec:	ldr	r8, [r0, #36]	; 0x24
   140f0:	cmp	r8, #0
   140f4:	bne	140b8 <dcngettext@plt+0x2dec>
   140f8:	mov	r6, r2
   140fc:	mov	r7, r3
   14100:	bl	111d0 <fileno@plt>
   14104:	mov	r2, r6
   14108:	mov	r3, r7
   1410c:	str	r5, [sp]
   14110:	bl	110a4 <lseek64@plt>
   14114:	mvn	r3, #0
   14118:	mvn	r2, #0
   1411c:	cmp	r1, r3
   14120:	cmpeq	r0, r2
   14124:	beq	14154 <dcngettext@plt+0x2e88>
   14128:	ldr	r3, [r4]
   1412c:	strd	r0, [r4, #80]	; 0x50
   14130:	bic	r3, r3, #16
   14134:	str	r3, [r4]
   14138:	mov	r0, r8
   1413c:	add	sp, sp, #8
   14140:	ldrd	r4, [sp]
   14144:	ldrd	r6, [sp, #8]
   14148:	ldr	r8, [sp, #16]
   1414c:	add	sp, sp, #20
   14150:	pop	{pc}		; (ldr pc, [sp], #4)
   14154:	mvn	r8, #0
   14158:	b	14138 <dcngettext@plt+0x2e6c>
   1415c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14160:	movw	r4, #37264	; 0x9190
   14164:	movt	r4, #2
   14168:	mov	r5, #0
   1416c:	cmp	r0, #2
   14170:	strd	r6, [sp, #8]
   14174:	str	r8, [sp, #16]
   14178:	str	lr, [sp, #20]
   1417c:	sub	sp, sp, #16
   14180:	ldr	r6, [r4]
   14184:	str	r5, [r4]
   14188:	beq	141b8 <dcngettext@plt+0x2eec>
   1418c:	mov	r2, #0
   14190:	movw	r3, #37248	; 0x9180
   14194:	movt	r3, #2
   14198:	str	r6, [r4]
   1419c:	str	r2, [r3]
   141a0:	add	sp, sp, #16
   141a4:	ldrd	r4, [sp]
   141a8:	ldrd	r6, [sp, #8]
   141ac:	ldr	r8, [sp, #16]
   141b0:	add	sp, sp, #20
   141b4:	pop	{pc}		; (ldr pc, [sp], #4)
   141b8:	mov	r8, r3
   141bc:	mov	r7, r2
   141c0:	str	r5, [sp]
   141c4:	movw	r3, #33412	; 0x8284
   141c8:	movt	r3, #1
   141cc:	movw	r2, #33460	; 0x82b4
   141d0:	movt	r2, #1
   141d4:	bl	1114c <getopt_long@plt>
   141d8:	cmn	r0, #1
   141dc:	beq	1418c <dcngettext@plt+0x2ec0>
   141e0:	cmp	r0, #104	; 0x68
   141e4:	beq	14220 <dcngettext@plt+0x2f54>
   141e8:	cmp	r0, #118	; 0x76
   141ec:	bne	1418c <dcngettext@plt+0x2ec0>
   141f0:	add	ip, sp, #48	; 0x30
   141f4:	movw	r0, #37260	; 0x918c
   141f8:	movt	r0, #2
   141fc:	mov	r2, r8
   14200:	ldr	r3, [sp, #40]	; 0x28
   14204:	mov	r1, r7
   14208:	str	ip, [sp]
   1420c:	ldr	r0, [r0]
   14210:	str	ip, [sp, #12]
   14214:	bl	1712c <dcngettext@plt+0x5e60>
   14218:	mov	r0, r5
   1421c:	bl	11170 <exit@plt>
   14220:	mov	r0, r5
   14224:	ldr	r3, [sp, #44]	; 0x2c
   14228:	blx	r3
   1422c:	b	1418c <dcngettext@plt+0x2ec0>
   14230:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14234:	mov	r5, #0
   14238:	movw	r4, #37264	; 0x9190
   1423c:	movt	r4, #2
   14240:	strd	r6, [sp, #8]
   14244:	movw	ip, #32832	; 0x8040
   14248:	movt	ip, #1
   1424c:	strd	r8, [sp, #16]
   14250:	mov	r9, #1
   14254:	str	lr, [sp, #24]
   14258:	sub	sp, sp, #20
   1425c:	mov	r8, r3
   14260:	ldrb	lr, [sp, #52]	; 0x34
   14264:	mov	r7, r2
   14268:	movw	r3, #33412	; 0x8284
   1426c:	movt	r3, #1
   14270:	movw	r2, #33460	; 0x82b4
   14274:	movt	r2, #1
   14278:	str	r5, [sp]
   1427c:	ldr	r6, [r4]
   14280:	str	r9, [r4]
   14284:	cmp	lr, r5
   14288:	movne	r2, ip
   1428c:	bl	1114c <getopt_long@plt>
   14290:	cmn	r0, #1
   14294:	beq	142bc <dcngettext@plt+0x2ff0>
   14298:	cmp	r0, #104	; 0x68
   1429c:	beq	14308 <dcngettext@plt+0x303c>
   142a0:	cmp	r0, #118	; 0x76
   142a4:	beq	142d8 <dcngettext@plt+0x300c>
   142a8:	movw	r3, #37172	; 0x9134
   142ac:	movt	r3, #2
   142b0:	ldr	r0, [r3]
   142b4:	ldr	r3, [sp, #56]	; 0x38
   142b8:	blx	r3
   142bc:	str	r6, [r4]
   142c0:	add	sp, sp, #20
   142c4:	ldrd	r4, [sp]
   142c8:	ldrd	r6, [sp, #8]
   142cc:	ldrd	r8, [sp, #16]
   142d0:	add	sp, sp, #24
   142d4:	pop	{pc}		; (ldr pc, [sp], #4)
   142d8:	add	ip, sp, #60	; 0x3c
   142dc:	movw	r0, #37260	; 0x918c
   142e0:	movt	r0, #2
   142e4:	mov	r2, r8
   142e8:	ldr	r3, [sp, #48]	; 0x30
   142ec:	mov	r1, r7
   142f0:	str	ip, [sp]
   142f4:	ldr	r0, [r0]
   142f8:	str	ip, [sp, #12]
   142fc:	bl	1712c <dcngettext@plt+0x5e60>
   14300:	mov	r0, r5
   14304:	bl	11170 <exit@plt>
   14308:	mov	r0, r5
   1430c:	ldr	r3, [sp, #56]	; 0x38
   14310:	blx	r3
   14314:	b	142bc <dcngettext@plt+0x2ff0>
   14318:	strd	r4, [sp, #-16]!
   1431c:	subs	r4, r0, #0
   14320:	str	r6, [sp, #8]
   14324:	str	lr, [sp, #12]
   14328:	beq	143c0 <dcngettext@plt+0x30f4>
   1432c:	mov	r1, #47	; 0x2f
   14330:	bl	1123c <strrchr@plt>
   14334:	subs	r5, r0, #0
   14338:	beq	14398 <dcngettext@plt+0x30cc>
   1433c:	add	r6, r5, #1
   14340:	sub	r3, r6, r4
   14344:	cmp	r3, #6
   14348:	ble	14398 <dcngettext@plt+0x30cc>
   1434c:	movw	r1, #33536	; 0x8300
   14350:	movt	r1, #1
   14354:	mov	r2, #7
   14358:	sub	r0, r5, #6
   1435c:	bl	112a8 <strncmp@plt>
   14360:	cmp	r0, #0
   14364:	bne	14398 <dcngettext@plt+0x30cc>
   14368:	movw	r1, #33544	; 0x8308
   1436c:	movt	r1, #1
   14370:	mov	r2, #3
   14374:	mov	r0, r6
   14378:	bl	112a8 <strncmp@plt>
   1437c:	cmp	r0, #0
   14380:	movne	r4, r6
   14384:	bne	14398 <dcngettext@plt+0x30cc>
   14388:	add	r4, r5, #4
   1438c:	movw	r3, #37240	; 0x9178
   14390:	movt	r3, #2
   14394:	str	r4, [r3]
   14398:	movw	r2, #37284	; 0x91a4
   1439c:	movt	r2, #2
   143a0:	ldr	r6, [sp, #8]
   143a4:	movw	r3, #37244	; 0x917c
   143a8:	movt	r3, #2
   143ac:	str	r4, [r2]
   143b0:	str	r4, [r3]
   143b4:	ldrd	r4, [sp]
   143b8:	add	sp, sp, #12
   143bc:	pop	{pc}		; (ldr pc, [sp], #4)
   143c0:	movw	r3, #37256	; 0x9188
   143c4:	movt	r3, #2
   143c8:	movw	r0, #33480	; 0x82c8
   143cc:	movt	r0, #1
   143d0:	ldr	r3, [r3]
   143d4:	mov	r2, #55	; 0x37
   143d8:	mov	r1, #1
   143dc:	bl	11098 <fwrite@plt>
   143e0:	bl	112b4 <abort@plt>
   143e4:	strd	r4, [sp, #-16]!
   143e8:	mov	r4, #0
   143ec:	mov	r5, #0
   143f0:	cmp	r1, #10
   143f4:	str	r6, [sp, #8]
   143f8:	strd	r4, [r0]
   143fc:	strd	r4, [r0, #8]
   14400:	str	lr, [sp, #12]
   14404:	strd	r4, [r0, #16]
   14408:	strd	r4, [r0, #24]
   1440c:	strd	r4, [r0, #32]
   14410:	strd	r4, [r0, #40]	; 0x28
   14414:	beq	1442c <dcngettext@plt+0x3160>
   14418:	ldrd	r4, [sp]
   1441c:	str	r1, [r0]
   14420:	ldr	r6, [sp, #8]
   14424:	add	sp, sp, #12
   14428:	pop	{pc}		; (ldr pc, [sp], #4)
   1442c:	bl	112b4 <abort@plt>
   14430:	mov	r2, #5
   14434:	strd	r4, [sp, #-16]!
   14438:	mov	r5, r0
   1443c:	str	r6, [sp, #8]
   14440:	mov	r6, r1
   14444:	mov	r1, r0
   14448:	mov	r0, #0
   1444c:	str	lr, [sp, #12]
   14450:	bl	11044 <dcgettext@plt>
   14454:	cmp	r5, r0
   14458:	mov	r4, r0
   1445c:	beq	14474 <dcngettext@plt+0x31a8>
   14460:	mov	r0, r4
   14464:	ldrd	r4, [sp]
   14468:	ldr	r6, [sp, #8]
   1446c:	add	sp, sp, #12
   14470:	pop	{pc}		; (ldr pc, [sp], #4)
   14474:	bl	17940 <dcngettext@plt+0x6674>
   14478:	ldrb	r3, [r0]
   1447c:	bic	r3, r3, #32
   14480:	cmp	r3, #85	; 0x55
   14484:	bne	144ec <dcngettext@plt+0x3220>
   14488:	ldrb	r3, [r0, #1]
   1448c:	bic	r3, r3, #32
   14490:	cmp	r3, #84	; 0x54
   14494:	bne	1456c <dcngettext@plt+0x32a0>
   14498:	ldrb	r3, [r0, #2]
   1449c:	bic	r3, r3, #32
   144a0:	cmp	r3, #70	; 0x46
   144a4:	bne	1456c <dcngettext@plt+0x32a0>
   144a8:	ldrb	r3, [r0, #3]
   144ac:	cmp	r3, #45	; 0x2d
   144b0:	bne	1456c <dcngettext@plt+0x32a0>
   144b4:	ldrb	r3, [r0, #4]
   144b8:	cmp	r3, #56	; 0x38
   144bc:	bne	1456c <dcngettext@plt+0x32a0>
   144c0:	ldrb	r3, [r0, #5]
   144c4:	cmp	r3, #0
   144c8:	bne	1456c <dcngettext@plt+0x32a0>
   144cc:	ldrb	r2, [r4]
   144d0:	movw	r3, #33636	; 0x8364
   144d4:	movt	r3, #1
   144d8:	movw	r4, #33648	; 0x8370
   144dc:	movt	r4, #1
   144e0:	cmp	r2, #96	; 0x60
   144e4:	movne	r4, r3
   144e8:	b	14460 <dcngettext@plt+0x3194>
   144ec:	cmp	r3, #71	; 0x47
   144f0:	bne	1456c <dcngettext@plt+0x32a0>
   144f4:	ldrb	r3, [r0, #1]
   144f8:	bic	r3, r3, #32
   144fc:	cmp	r3, #66	; 0x42
   14500:	bne	1456c <dcngettext@plt+0x32a0>
   14504:	ldrb	r3, [r0, #2]
   14508:	cmp	r3, #49	; 0x31
   1450c:	bne	1456c <dcngettext@plt+0x32a0>
   14510:	ldrb	r3, [r0, #3]
   14514:	cmp	r3, #56	; 0x38
   14518:	bne	1456c <dcngettext@plt+0x32a0>
   1451c:	ldrb	r3, [r0, #4]
   14520:	cmp	r3, #48	; 0x30
   14524:	bne	1456c <dcngettext@plt+0x32a0>
   14528:	ldrb	r3, [r0, #5]
   1452c:	cmp	r3, #51	; 0x33
   14530:	bne	1456c <dcngettext@plt+0x32a0>
   14534:	ldrb	r3, [r0, #6]
   14538:	cmp	r3, #48	; 0x30
   1453c:	bne	1456c <dcngettext@plt+0x32a0>
   14540:	ldrb	r3, [r0, #7]
   14544:	cmp	r3, #0
   14548:	bne	1456c <dcngettext@plt+0x32a0>
   1454c:	ldrb	r2, [r4]
   14550:	movw	r3, #33640	; 0x8368
   14554:	movt	r3, #1
   14558:	movw	r4, #33644	; 0x836c
   1455c:	movt	r4, #1
   14560:	cmp	r2, #96	; 0x60
   14564:	movne	r4, r3
   14568:	b	14460 <dcngettext@plt+0x3194>
   1456c:	movw	r3, #33652	; 0x8374
   14570:	movt	r3, #1
   14574:	cmp	r6, #9
   14578:	movw	r4, #33632	; 0x8360
   1457c:	movt	r4, #1
   14580:	movne	r4, r3
   14584:	b	14460 <dcngettext@plt+0x3194>
   14588:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1458c:	strd	r6, [sp, #8]
   14590:	strd	r8, [sp, #16]
   14594:	strd	sl, [sp, #24]
   14598:	mov	fp, r0
   1459c:	mov	sl, r1
   145a0:	str	lr, [sp, #32]
   145a4:	sub	sp, sp, #116	; 0x74
   145a8:	ldr	r8, [sp, #152]	; 0x98
   145ac:	str	r3, [sp, #28]
   145b0:	ldr	r3, [sp, #156]	; 0x9c
   145b4:	str	r2, [sp, #32]
   145b8:	and	r4, r3, #2
   145bc:	ubfx	r3, r3, #1, #1
   145c0:	str	r3, [sp, #44]	; 0x2c
   145c4:	bl	110b0 <__ctype_get_mb_cur_max@plt>
   145c8:	str	r0, [sp, #64]	; 0x40
   145cc:	cmp	r8, #10
   145d0:	ldrls	pc, [pc, r8, lsl #2]
   145d4:	b	15d44 <dcngettext@plt+0x4a78>
   145d8:	ldrdeq	r4, [r1], -ip
   145dc:	andeq	r4, r1, r8, ror sl
   145e0:	andeq	r5, r1, r4, asr r0
   145e4:	muleq	r1, r8, sl
   145e8:	andeq	r4, r1, r0, asr #18
   145ec:	andeq	r4, r1, ip, lsl #19
   145f0:	andeq	r4, r1, ip, lsl #20
   145f4:	andeq	r4, r1, r8, asr #20
   145f8:	andeq	r4, r1, r4, lsl #12
   145fc:	andeq	r4, r1, r4, lsl #12
   14600:	andeq	r4, r1, r4, lsl #12
   14604:	cmp	r8, #10
   14608:	beq	14634 <dcngettext@plt+0x3368>
   1460c:	mov	r1, r8
   14610:	movw	r0, #33656	; 0x8378
   14614:	movt	r0, #1
   14618:	bl	14430 <dcngettext@plt+0x3164>
   1461c:	mov	r1, r8
   14620:	str	r0, [sp, #164]	; 0xa4
   14624:	movw	r0, #33652	; 0x8374
   14628:	movt	r0, #1
   1462c:	bl	14430 <dcngettext@plt+0x3164>
   14630:	str	r0, [sp, #168]	; 0xa8
   14634:	cmp	r4, #0
   14638:	movne	r4, #0
   1463c:	beq	15a20 <dcngettext@plt+0x4754>
   14640:	mov	r3, #1
   14644:	mov	r5, #0
   14648:	ldr	r0, [sp, #168]	; 0xa8
   1464c:	str	r3, [sp, #36]	; 0x24
   14650:	str	r3, [sp, #40]	; 0x28
   14654:	str	r5, [sp, #68]	; 0x44
   14658:	bl	1117c <strlen@plt>
   1465c:	ldr	r3, [sp, #168]	; 0xa8
   14660:	str	r5, [sp, #48]	; 0x30
   14664:	str	r0, [sp, #56]	; 0x38
   14668:	str	r3, [sp, #60]	; 0x3c
   1466c:	str	r5, [sp, #72]	; 0x48
   14670:	str	r8, [sp, #152]	; 0x98
   14674:	mov	r8, fp
   14678:	mov	r9, #0
   1467c:	ldr	fp, [sp, #152]	; 0x98
   14680:	ldr	r3, [sp, #28]
   14684:	cmn	r3, #1
   14688:	beq	14be8 <dcngettext@plt+0x391c>
   1468c:	ldr	r3, [sp, #28]
   14690:	subs	r6, r3, r9
   14694:	movne	r6, #1
   14698:	cmp	r6, #0
   1469c:	beq	14c00 <dcngettext@plt+0x3934>
   146a0:	ldr	r0, [sp, #32]
   146a4:	ldr	r7, [sp, #40]	; 0x28
   146a8:	add	r3, r0, r9
   146ac:	cmp	fp, #2
   146b0:	moveq	r7, #0
   146b4:	andne	r7, r7, #1
   146b8:	str	r3, [sp, #52]	; 0x34
   146bc:	cmp	r7, #0
   146c0:	beq	1509c <dcngettext@plt+0x3dd0>
   146c4:	ldr	r2, [sp, #56]	; 0x38
   146c8:	cmp	r2, #0
   146cc:	beq	15338 <dcngettext@plt+0x406c>
   146d0:	ldr	r1, [sp, #28]
   146d4:	cmp	r2, #1
   146d8:	mov	r3, r2
   146dc:	movls	r3, #0
   146e0:	movhi	r3, #1
   146e4:	add	r5, r9, r2
   146e8:	cmn	r1, #1
   146ec:	movne	r3, #0
   146f0:	cmp	r3, #0
   146f4:	beq	14700 <dcngettext@plt+0x3434>
   146f8:	bl	1117c <strlen@plt>
   146fc:	str	r0, [sp, #28]
   14700:	ldr	r3, [sp, #28]
   14704:	cmp	r5, r3
   14708:	bhi	15338 <dcngettext@plt+0x406c>
   1470c:	ldr	r0, [sp, #52]	; 0x34
   14710:	ldr	r2, [sp, #56]	; 0x38
   14714:	ldr	r1, [sp, #60]	; 0x3c
   14718:	bl	1102c <memcmp@plt>
   1471c:	cmp	r0, #0
   14720:	bne	15338 <dcngettext@plt+0x406c>
   14724:	ldr	r3, [sp, #44]	; 0x2c
   14728:	cmp	r3, #0
   1472c:	bne	15c68 <dcngettext@plt+0x499c>
   14730:	ldr	r3, [sp, #52]	; 0x34
   14734:	ldrb	r5, [r3]
   14738:	cmp	r5, #126	; 0x7e
   1473c:	ldrls	pc, [pc, r5, lsl #2]
   14740:	b	14ff8 <dcngettext@plt+0x3d2c>
   14744:	strdeq	r4, [r1], -ip
   14748:	strdeq	r4, [r1], -r8
   1474c:	strdeq	r4, [r1], -r8
   14750:	strdeq	r4, [r1], -r8
   14754:	strdeq	r4, [r1], -r8
   14758:	strdeq	r4, [r1], -r8
   1475c:	strdeq	r4, [r1], -r8
   14760:	ldrdeq	r4, [r1], -r0
   14764:	andeq	r4, r1, r8, asr #29
   14768:	andeq	r4, r1, r0, lsl lr
   1476c:			; <UNDEFINED> instruction: 0x00014ebc
   14770:	andeq	r4, r1, r8, lsl #28
   14774:	muleq	r1, r8, lr
   14778:	andeq	r4, r1, r4, ror #29
   1477c:	strdeq	r4, [r1], -r8
   14780:	strdeq	r4, [r1], -r8
   14784:	strdeq	r4, [r1], -r8
   14788:	strdeq	r4, [r1], -r8
   1478c:	strdeq	r4, [r1], -r8
   14790:	strdeq	r4, [r1], -r8
   14794:	strdeq	r4, [r1], -r8
   14798:	strdeq	r4, [r1], -r8
   1479c:	strdeq	r4, [r1], -r8
   147a0:	strdeq	r4, [r1], -r8
   147a4:	strdeq	r4, [r1], -r8
   147a8:	strdeq	r4, [r1], -r8
   147ac:	strdeq	r4, [r1], -r8
   147b0:	strdeq	r4, [r1], -r8
   147b4:	strdeq	r4, [r1], -r8
   147b8:	strdeq	r4, [r1], -r8
   147bc:	strdeq	r4, [r1], -r8
   147c0:	strdeq	r4, [r1], -r8
   147c4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   147c8:	ldrdeq	r4, [r1], -ip
   147cc:	ldrdeq	r4, [r1], -ip
   147d0:			; <UNDEFINED> instruction: 0x00014fb8
   147d4:	ldrdeq	r4, [r1], -ip
   147d8:	andeq	r4, r1, ip, ror #31
   147dc:	ldrdeq	r4, [r1], -ip
   147e0:	andeq	r4, r1, r8, lsr sp
   147e4:	ldrdeq	r4, [r1], -ip
   147e8:	ldrdeq	r4, [r1], -ip
   147ec:	ldrdeq	r4, [r1], -ip
   147f0:	andeq	r4, r1, ip, ror #31
   147f4:	andeq	r4, r1, ip, ror #31
   147f8:	andeq	r4, r1, ip, ror #31
   147fc:	andeq	r4, r1, ip, ror #31
   14800:	andeq	r4, r1, ip, ror #31
   14804:	andeq	r4, r1, ip, ror #31
   14808:	andeq	r4, r1, ip, ror #31
   1480c:	andeq	r4, r1, ip, ror #31
   14810:	andeq	r4, r1, ip, ror #31
   14814:	andeq	r4, r1, ip, ror #31
   14818:	andeq	r4, r1, ip, ror #31
   1481c:	andeq	r4, r1, ip, ror #31
   14820:	andeq	r4, r1, ip, ror #31
   14824:	andeq	r4, r1, ip, ror #31
   14828:	andeq	r4, r1, ip, ror #31
   1482c:	andeq	r4, r1, ip, ror #31
   14830:	ldrdeq	r4, [r1], -ip
   14834:	ldrdeq	r4, [r1], -ip
   14838:	ldrdeq	r4, [r1], -ip
   1483c:	ldrdeq	r4, [r1], -ip
   14840:	andeq	r4, r1, ip, lsl #26
   14844:	strdeq	r4, [r1], -r8
   14848:	andeq	r4, r1, ip, ror #31
   1484c:	andeq	r4, r1, ip, ror #31
   14850:	andeq	r4, r1, ip, ror #31
   14854:	andeq	r4, r1, ip, ror #31
   14858:	andeq	r4, r1, ip, ror #31
   1485c:	andeq	r4, r1, ip, ror #31
   14860:	andeq	r4, r1, ip, ror #31
   14864:	andeq	r4, r1, ip, ror #31
   14868:	andeq	r4, r1, ip, ror #31
   1486c:	andeq	r4, r1, ip, ror #31
   14870:	andeq	r4, r1, ip, ror #31
   14874:	andeq	r4, r1, ip, ror #31
   14878:	andeq	r4, r1, ip, ror #31
   1487c:	andeq	r4, r1, ip, ror #31
   14880:	andeq	r4, r1, ip, ror #31
   14884:	andeq	r4, r1, ip, ror #31
   14888:	andeq	r4, r1, ip, ror #31
   1488c:	andeq	r4, r1, ip, ror #31
   14890:	andeq	r4, r1, ip, ror #31
   14894:	andeq	r4, r1, ip, ror #31
   14898:	andeq	r4, r1, ip, ror #31
   1489c:	andeq	r4, r1, ip, ror #31
   148a0:	andeq	r4, r1, ip, ror #31
   148a4:	andeq	r4, r1, ip, ror #31
   148a8:	andeq	r4, r1, ip, ror #31
   148ac:	andeq	r4, r1, ip, ror #31
   148b0:	ldrdeq	r4, [r1], -ip
   148b4:			; <UNDEFINED> instruction: 0x00014cb4
   148b8:	andeq	r4, r1, ip, ror #31
   148bc:	ldrdeq	r4, [r1], -ip
   148c0:	andeq	r4, r1, ip, ror #31
   148c4:	ldrdeq	r4, [r1], -ip
   148c8:	andeq	r4, r1, ip, ror #31
   148cc:	andeq	r4, r1, ip, ror #31
   148d0:	andeq	r4, r1, ip, ror #31
   148d4:	andeq	r4, r1, ip, ror #31
   148d8:	andeq	r4, r1, ip, ror #31
   148dc:	andeq	r4, r1, ip, ror #31
   148e0:	andeq	r4, r1, ip, ror #31
   148e4:	andeq	r4, r1, ip, ror #31
   148e8:	andeq	r4, r1, ip, ror #31
   148ec:	andeq	r4, r1, ip, ror #31
   148f0:	andeq	r4, r1, ip, ror #31
   148f4:	andeq	r4, r1, ip, ror #31
   148f8:	andeq	r4, r1, ip, ror #31
   148fc:	andeq	r4, r1, ip, ror #31
   14900:	andeq	r4, r1, ip, ror #31
   14904:	andeq	r4, r1, ip, ror #31
   14908:	andeq	r4, r1, ip, ror #31
   1490c:	andeq	r4, r1, ip, ror #31
   14910:	andeq	r4, r1, ip, ror #31
   14914:	andeq	r4, r1, ip, ror #31
   14918:	andeq	r4, r1, ip, ror #31
   1491c:	andeq	r4, r1, ip, ror #31
   14920:	andeq	r4, r1, ip, ror #31
   14924:	andeq	r4, r1, ip, ror #31
   14928:	andeq	r4, r1, ip, ror #31
   1492c:	andeq	r4, r1, ip, ror #31
   14930:	ldrdeq	r4, [r1], -r8
   14934:	ldrdeq	r4, [r1], -ip
   14938:	ldrdeq	r4, [r1], -r8
   1493c:			; <UNDEFINED> instruction: 0x00014fb8
   14940:	cmp	r4, #0
   14944:	moveq	r3, #1
   14948:	streq	r3, [sp, #40]	; 0x28
   1494c:	beq	15060 <dcngettext@plt+0x3d94>
   14950:	mov	r3, #0
   14954:	mov	r2, #1
   14958:	mov	r4, r3
   1495c:	str	r2, [sp, #36]	; 0x24
   14960:	str	r2, [sp, #44]	; 0x2c
   14964:	str	r2, [sp, #56]	; 0x38
   14968:	str	r3, [sp, #68]	; 0x44
   1496c:	movw	r3, #33652	; 0x8374
   14970:	movt	r3, #1
   14974:	str	r4, [sp, #40]	; 0x28
   14978:	mov	r8, #2
   1497c:	str	r4, [sp, #48]	; 0x30
   14980:	str	r3, [sp, #60]	; 0x3c
   14984:	str	r4, [sp, #72]	; 0x48
   14988:	b	14670 <dcngettext@plt+0x33a4>
   1498c:	cmp	r4, #0
   14990:	bne	15bdc <dcngettext@plt+0x4910>
   14994:	cmp	sl, #0
   14998:	beq	1599c <dcngettext@plt+0x46d0>
   1499c:	mov	r3, #34	; 0x22
   149a0:	mov	r1, r4
   149a4:	mov	r2, #1
   149a8:	strb	r3, [fp]
   149ac:	movw	r3, #33632	; 0x8360
   149b0:	movt	r3, #1
   149b4:	mov	r4, r2
   149b8:	str	r2, [sp, #36]	; 0x24
   149bc:	str	r2, [sp, #40]	; 0x28
   149c0:	str	r1, [sp, #44]	; 0x2c
   149c4:	str	r1, [sp, #48]	; 0x30
   149c8:	str	r2, [sp, #56]	; 0x38
   149cc:	str	r3, [sp, #60]	; 0x3c
   149d0:	str	r1, [sp, #68]	; 0x44
   149d4:	str	r1, [sp, #72]	; 0x48
   149d8:	b	14670 <dcngettext@plt+0x33a4>
   149dc:	mov	r3, #0
   149e0:	mov	r4, r8
   149e4:	str	r3, [sp, #40]	; 0x28
   149e8:	str	r3, [sp, #44]	; 0x2c
   149ec:	str	r3, [sp, #48]	; 0x30
   149f0:	str	r8, [sp, #56]	; 0x38
   149f4:	str	r3, [sp, #60]	; 0x3c
   149f8:	str	r3, [sp, #68]	; 0x44
   149fc:	mov	r3, #1
   14a00:	str	r3, [sp, #36]	; 0x24
   14a04:	str	r8, [sp, #72]	; 0x48
   14a08:	b	14670 <dcngettext@plt+0x33a4>
   14a0c:	mov	r3, #1
   14a10:	mov	r2, #0
   14a14:	mov	r4, r2
   14a18:	mov	r8, #5
   14a1c:	str	r3, [sp, #36]	; 0x24
   14a20:	str	r3, [sp, #40]	; 0x28
   14a24:	str	r3, [sp, #44]	; 0x2c
   14a28:	str	r2, [sp, #48]	; 0x30
   14a2c:	str	r3, [sp, #56]	; 0x38
   14a30:	movw	r3, #33632	; 0x8360
   14a34:	movt	r3, #1
   14a38:	str	r3, [sp, #60]	; 0x3c
   14a3c:	str	r2, [sp, #68]	; 0x44
   14a40:	str	r2, [sp, #72]	; 0x48
   14a44:	b	14670 <dcngettext@plt+0x33a4>
   14a48:	mov	r3, #0
   14a4c:	mov	r2, #1
   14a50:	mov	r4, r3
   14a54:	str	r2, [sp, #36]	; 0x24
   14a58:	str	r2, [sp, #40]	; 0x28
   14a5c:	str	r3, [sp, #44]	; 0x2c
   14a60:	str	r3, [sp, #48]	; 0x30
   14a64:	str	r3, [sp, #56]	; 0x38
   14a68:	str	r3, [sp, #60]	; 0x3c
   14a6c:	str	r3, [sp, #68]	; 0x44
   14a70:	str	r3, [sp, #72]	; 0x48
   14a74:	b	14670 <dcngettext@plt+0x33a4>
   14a78:	mov	r2, #1
   14a7c:	mov	r3, #0
   14a80:	mov	r4, r3
   14a84:	str	r2, [sp, #36]	; 0x24
   14a88:	str	r2, [sp, #44]	; 0x2c
   14a8c:	str	r8, [sp, #56]	; 0x38
   14a90:	str	r3, [sp, #68]	; 0x44
   14a94:	b	1496c <dcngettext@plt+0x36a0>
   14a98:	mov	r3, #1
   14a9c:	mov	r2, #0
   14aa0:	mov	r4, r2
   14aa4:	mov	r8, #2
   14aa8:	str	r3, [sp, #36]	; 0x24
   14aac:	str	r3, [sp, #40]	; 0x28
   14ab0:	str	r3, [sp, #44]	; 0x2c
   14ab4:	str	r2, [sp, #48]	; 0x30
   14ab8:	str	r3, [sp, #56]	; 0x38
   14abc:	movw	r3, #33652	; 0x8374
   14ac0:	movt	r3, #1
   14ac4:	str	r3, [sp, #60]	; 0x3c
   14ac8:	str	r2, [sp, #68]	; 0x44
   14acc:	str	r2, [sp, #72]	; 0x48
   14ad0:	b	14670 <dcngettext@plt+0x33a4>
   14ad4:	mov	r7, #0
   14ad8:	ldr	r3, [sp, #28]
   14adc:	cmn	r3, #1
   14ae0:	beq	155b8 <dcngettext@plt+0x42ec>
   14ae4:	ldr	r3, [sp, #28]
   14ae8:	subs	r2, r3, #1
   14aec:	movne	r2, #1
   14af0:	sub	r3, fp, #2
   14af4:	cmp	r2, #0
   14af8:	clz	r3, r3
   14afc:	lsr	r3, r3, #5
   14b00:	bne	14b0c <dcngettext@plt+0x3840>
   14b04:	cmp	r9, #0
   14b08:	beq	15318 <dcngettext@plt+0x404c>
   14b0c:	mov	r6, #0
   14b10:	ldr	r2, [sp, #40]	; 0x28
   14b14:	eor	r2, r2, #1
   14b18:	orrs	r3, r3, r2
   14b1c:	bne	14cf4 <dcngettext@plt+0x3a28>
   14b20:	ldr	r2, [sp, #160]	; 0xa0
   14b24:	cmp	r2, #0
   14b28:	beq	14b48 <dcngettext@plt+0x387c>
   14b2c:	ldr	r0, [sp, #160]	; 0xa0
   14b30:	ubfx	r1, r5, #5, #8
   14b34:	and	r2, r5, #31
   14b38:	ldr	r1, [r0, r1, lsl #2]
   14b3c:	lsr	r2, r1, r2
   14b40:	tst	r2, #1
   14b44:	bne	14b50 <dcngettext@plt+0x3884>
   14b48:	cmp	r7, #0
   14b4c:	beq	14dc0 <dcngettext@plt+0x3af4>
   14b50:	ldr	r2, [sp, #44]	; 0x2c
   14b54:	sub	r3, fp, #2
   14b58:	clz	r3, r3
   14b5c:	lsr	r3, r3, #5
   14b60:	cmp	r2, #0
   14b64:	bne	1590c <dcngettext@plt+0x4640>
   14b68:	ldr	r2, [sp, #48]	; 0x30
   14b6c:	eor	r2, r2, #1
   14b70:	ands	r3, r3, r2
   14b74:	beq	14bac <dcngettext@plt+0x38e0>
   14b78:	cmp	sl, r4
   14b7c:	str	r3, [sp, #48]	; 0x30
   14b80:	movhi	r2, #39	; 0x27
   14b84:	strbhi	r2, [r8, r4]
   14b88:	add	r2, r4, #1
   14b8c:	cmp	sl, r2
   14b90:	movhi	r1, #36	; 0x24
   14b94:	strbhi	r1, [r8, r2]
   14b98:	add	r2, r4, #2
   14b9c:	add	r4, r4, #3
   14ba0:	cmp	sl, r2
   14ba4:	movhi	r1, #39	; 0x27
   14ba8:	strbhi	r1, [r8, r2]
   14bac:	cmp	r4, sl
   14bb0:	add	r9, r9, #1
   14bb4:	movcc	r3, #92	; 0x5c
   14bb8:	strbcc	r3, [r8, r4]
   14bbc:	add	r4, r4, #1
   14bc0:	cmp	r4, sl
   14bc4:	ldr	r3, [sp, #36]	; 0x24
   14bc8:	strbcc	r5, [r8, r4]
   14bcc:	cmp	r6, #0
   14bd0:	add	r4, r4, #1
   14bd4:	moveq	r3, #0
   14bd8:	str	r3, [sp, #36]	; 0x24
   14bdc:	ldr	r3, [sp, #28]
   14be0:	cmn	r3, #1
   14be4:	bne	1468c <dcngettext@plt+0x33c0>
   14be8:	ldr	r3, [sp, #32]
   14bec:	ldrb	r6, [r3, r9]
   14bf0:	adds	r6, r6, #0
   14bf4:	movne	r6, #1
   14bf8:	cmp	r6, #0
   14bfc:	bne	146a0 <dcngettext@plt+0x33d4>
   14c00:	str	fp, [sp, #152]	; 0x98
   14c04:	mov	fp, r8
   14c08:	cmp	r4, #0
   14c0c:	ldr	r1, [sp, #44]	; 0x2c
   14c10:	movne	r3, #0
   14c14:	ldr	r8, [sp, #152]	; 0x98
   14c18:	sub	r2, r8, #2
   14c1c:	clz	r2, r2
   14c20:	lsr	r2, r2, #5
   14c24:	andeq	r3, r2, r1
   14c28:	cmp	r3, #0
   14c2c:	bne	15ce8 <dcngettext@plt+0x4a1c>
   14c30:	eor	r3, r1, #1
   14c34:	ands	r2, r2, r3
   14c38:	beq	15c14 <dcngettext@plt+0x4948>
   14c3c:	ldr	r3, [sp, #68]	; 0x44
   14c40:	cmp	r3, #0
   14c44:	beq	15c18 <dcngettext@plt+0x494c>
   14c48:	ldr	r3, [sp, #36]	; 0x24
   14c4c:	cmp	r3, #0
   14c50:	bne	15ca4 <dcngettext@plt+0x49d8>
   14c54:	ldr	r3, [sp, #72]	; 0x48
   14c58:	adds	r3, r3, #0
   14c5c:	movne	r3, #1
   14c60:	cmp	sl, #0
   14c64:	movne	r3, #0
   14c68:	cmp	r3, #0
   14c6c:	ldreq	r2, [sp, #68]	; 0x44
   14c70:	beq	15c18 <dcngettext@plt+0x494c>
   14c74:	ldr	r2, [sp, #72]	; 0x48
   14c78:	str	r3, [sp, #68]	; 0x44
   14c7c:	movw	r3, #33652	; 0x8374
   14c80:	movt	r3, #1
   14c84:	mov	r1, #39	; 0x27
   14c88:	mov	r4, #1
   14c8c:	ldr	sl, [sp, #72]	; 0x48
   14c90:	mov	r8, #2
   14c94:	str	r3, [sp, #60]	; 0x3c
   14c98:	mov	r3, #0
   14c9c:	strb	r1, [fp]
   14ca0:	str	r3, [sp, #44]	; 0x2c
   14ca4:	str	r4, [sp, #56]	; 0x38
   14ca8:	str	r2, [sp, #72]	; 0x48
   14cac:	b	14670 <dcngettext@plt+0x33a4>
   14cb0:	mov	r7, #0
   14cb4:	cmp	fp, #2
   14cb8:	beq	15598 <dcngettext@plt+0x42cc>
   14cbc:	ldr	r2, [sp, #40]	; 0x28
   14cc0:	ldr	r3, [sp, #56]	; 0x38
   14cc4:	ldr	r1, [sp, #44]	; 0x2c
   14cc8:	cmp	r3, #0
   14ccc:	moveq	r3, #0
   14cd0:	andne	r3, r2, r1
   14cd4:	cmp	r3, #0
   14cd8:	moveq	r5, #92	; 0x5c
   14cdc:	moveq	r3, r5
   14ce0:	bne	155a4 <dcngettext@plt+0x42d8>
   14ce4:	ldr	r2, [sp, #40]	; 0x28
   14ce8:	cmp	r2, #0
   14cec:	bne	159e0 <dcngettext@plt+0x4714>
   14cf0:	mov	r6, #0
   14cf4:	ldr	r3, [sp, #44]	; 0x2c
   14cf8:	cmp	r3, #0
   14cfc:	beq	15590 <dcngettext@plt+0x42c4>
   14d00:	mov	r3, #0
   14d04:	b	14b20 <dcngettext@plt+0x3854>
   14d08:	mov	r7, #0
   14d0c:	cmp	fp, #2
   14d10:	beq	15608 <dcngettext@plt+0x433c>
   14d14:	cmp	fp, #5
   14d18:	beq	155cc <dcngettext@plt+0x4300>
   14d1c:	sub	r3, fp, #2
   14d20:	mov	r6, #0
   14d24:	clz	r3, r3
   14d28:	mov	r5, #63	; 0x3f
   14d2c:	lsr	r3, r3, #5
   14d30:	b	14b10 <dcngettext@plt+0x3844>
   14d34:	mov	r7, #0
   14d38:	cmp	fp, #2
   14d3c:	movne	r3, #0
   14d40:	movne	r5, #39	; 0x27
   14d44:	strne	r6, [sp, #68]	; 0x44
   14d48:	bne	14b10 <dcngettext@plt+0x3844>
   14d4c:	ldr	r3, [sp, #44]	; 0x2c
   14d50:	cmp	r3, #0
   14d54:	bne	15a10 <dcngettext@plt+0x4744>
   14d58:	ldr	r3, [sp, #72]	; 0x48
   14d5c:	cmp	sl, #0
   14d60:	clz	r3, r3
   14d64:	lsr	r3, r3, #5
   14d68:	moveq	r3, #0
   14d6c:	cmp	r3, #0
   14d70:	bne	1593c <dcngettext@plt+0x4670>
   14d74:	cmp	sl, r4
   14d78:	movhi	r3, #39	; 0x27
   14d7c:	strbhi	r3, [r8, r4]
   14d80:	add	r3, r4, #1
   14d84:	cmp	sl, r3
   14d88:	movhi	r2, #92	; 0x5c
   14d8c:	strbhi	r2, [r8, r3]
   14d90:	add	r3, r4, #2
   14d94:	cmp	sl, r3
   14d98:	bls	14da4 <dcngettext@plt+0x3ad8>
   14d9c:	mov	r2, #39	; 0x27
   14da0:	strb	r2, [r8, r3]
   14da4:	mov	r3, #0
   14da8:	cmp	r7, #0
   14dac:	add	r4, r4, #3
   14db0:	mov	r5, #39	; 0x27
   14db4:	str	r3, [sp, #48]	; 0x30
   14db8:	str	r6, [sp, #68]	; 0x44
   14dbc:	bne	14b50 <dcngettext@plt+0x3884>
   14dc0:	ldr	r2, [sp, #48]	; 0x30
   14dc4:	eor	r3, r3, #1
   14dc8:	add	r9, r9, #1
   14dcc:	and	r3, r3, r2
   14dd0:	uxtb	r3, r3
   14dd4:	cmp	r3, #0
   14dd8:	beq	14bc0 <dcngettext@plt+0x38f4>
   14ddc:	cmp	sl, r4
   14de0:	movhi	r3, #39	; 0x27
   14de4:	strbhi	r3, [r8, r4]
   14de8:	add	r3, r4, #1
   14dec:	add	r4, r4, #2
   14df0:	cmp	sl, r3
   14df4:	movhi	r2, #39	; 0x27
   14df8:	strbhi	r2, [r8, r3]
   14dfc:	mov	r3, #0
   14e00:	str	r3, [sp, #48]	; 0x30
   14e04:	b	14bc0 <dcngettext@plt+0x38f4>
   14e08:	mov	r3, #118	; 0x76
   14e0c:	b	14ce4 <dcngettext@plt+0x3a18>
   14e10:	mov	r3, #116	; 0x74
   14e14:	ldr	r2, [sp, #44]	; 0x2c
   14e18:	cmp	fp, #2
   14e1c:	movne	r2, #0
   14e20:	andeq	r2, r2, #1
   14e24:	cmp	r2, #0
   14e28:	beq	14ce4 <dcngettext@plt+0x3a18>
   14e2c:	mov	fp, r8
   14e30:	mov	r8, #2
   14e34:	ldr	r3, [sp, #40]	; 0x28
   14e38:	cmp	r3, #0
   14e3c:	movne	r8, #4
   14e40:	mov	lr, #0
   14e44:	mov	r0, fp
   14e48:	ldr	r2, [sp, #32]
   14e4c:	ldr	r3, [sp, #156]	; 0x9c
   14e50:	ldr	r1, [sp, #164]	; 0xa4
   14e54:	bic	ip, r3, #2
   14e58:	ldr	r3, [sp, #28]
   14e5c:	stm	sp, {r8, ip, lr}
   14e60:	ldr	ip, [sp, #168]	; 0xa8
   14e64:	str	r1, [sp, #12]
   14e68:	mov	r1, sl
   14e6c:	str	ip, [sp, #16]
   14e70:	bl	14588 <dcngettext@plt+0x32bc>
   14e74:	mov	r4, r0
   14e78:	mov	r0, r4
   14e7c:	add	sp, sp, #116	; 0x74
   14e80:	ldrd	r4, [sp]
   14e84:	ldrd	r6, [sp, #8]
   14e88:	ldrd	r8, [sp, #16]
   14e8c:	ldrd	sl, [sp, #24]
   14e90:	add	sp, sp, #32
   14e94:	pop	{pc}		; (ldr pc, [sp], #4)
   14e98:	mov	r5, #102	; 0x66
   14e9c:	ldr	r2, [sp, #44]	; 0x2c
   14ea0:	sub	r3, fp, #2
   14ea4:	clz	r3, r3
   14ea8:	lsr	r3, r3, #5
   14eac:	cmp	r2, #0
   14eb0:	bne	1590c <dcngettext@plt+0x4640>
   14eb4:	mov	r6, r2
   14eb8:	b	14bac <dcngettext@plt+0x38e0>
   14ebc:	mov	r5, #110	; 0x6e
   14ec0:	mov	r6, #0
   14ec4:	b	14b50 <dcngettext@plt+0x3884>
   14ec8:	mov	r5, #98	; 0x62
   14ecc:	b	14e9c <dcngettext@plt+0x3bd0>
   14ed0:	mov	r5, #97	; 0x61
   14ed4:	b	14e9c <dcngettext@plt+0x3bd0>
   14ed8:	mov	r7, #0
   14edc:	mov	r6, #0
   14ee0:	b	14d00 <dcngettext@plt+0x3a34>
   14ee4:	mov	r5, #114	; 0x72
   14ee8:	b	14ec0 <dcngettext@plt+0x3bf4>
   14eec:	ldr	r3, [sp, #44]	; 0x2c
   14ef0:	cmp	r3, #0
   14ef4:	bne	15c84 <dcngettext@plt+0x49b8>
   14ef8:	mov	r7, r3
   14efc:	ldr	r3, [sp, #48]	; 0x30
   14f00:	sub	r2, fp, #2
   14f04:	clz	r2, r2
   14f08:	lsr	r2, r2, #5
   14f0c:	eor	r3, r3, #1
   14f10:	ands	r3, r2, r3
   14f14:	beq	15928 <dcngettext@plt+0x465c>
   14f18:	cmp	sl, r4
   14f1c:	movhi	r1, #39	; 0x27
   14f20:	strbhi	r1, [r8, r4]
   14f24:	add	r1, r4, #1
   14f28:	cmp	sl, r1
   14f2c:	movhi	r0, #36	; 0x24
   14f30:	strbhi	r0, [r8, r1]
   14f34:	add	r1, r4, #2
   14f38:	cmp	sl, r1
   14f3c:	movhi	r0, #39	; 0x27
   14f40:	strbhi	r0, [r8, r1]
   14f44:	add	r1, r4, #3
   14f48:	cmp	sl, r1
   14f4c:	bls	15980 <dcngettext@plt+0x46b4>
   14f50:	mov	r4, r1
   14f54:	mov	r1, #92	; 0x5c
   14f58:	mov	r0, r4
   14f5c:	str	r3, [sp, #48]	; 0x30
   14f60:	strb	r1, [r8, r4]
   14f64:	cmp	fp, #2
   14f68:	add	r4, r4, #1
   14f6c:	beq	159d0 <dcngettext@plt+0x4704>
   14f70:	ldr	r1, [sp, #28]
   14f74:	add	r3, r9, #1
   14f78:	cmp	r3, r1
   14f7c:	bcs	14f94 <dcngettext@plt+0x3cc8>
   14f80:	ldr	r1, [sp, #32]
   14f84:	ldrb	r3, [r1, r3]
   14f88:	sub	r3, r3, #48	; 0x30
   14f8c:	cmp	r3, #9
   14f90:	bls	159e8 <dcngettext@plt+0x471c>
   14f94:	mov	r5, #48	; 0x30
   14f98:	ldr	r3, [sp, #40]	; 0x28
   14f9c:	eor	r3, r3, #1
   14fa0:	orrs	r2, r2, r3
   14fa4:	mov	r3, r6
   14fa8:	moveq	r6, r2
   14fac:	beq	14b20 <dcngettext@plt+0x3854>
   14fb0:	mov	r6, #0
   14fb4:	b	14b48 <dcngettext@plt+0x387c>
   14fb8:	cmp	r9, #0
   14fbc:	mov	r2, r7
   14fc0:	bne	15560 <dcngettext@plt+0x4294>
   14fc4:	mov	r6, r7
   14fc8:	mov	r3, r9
   14fcc:	mov	r7, r2
   14fd0:	b	14b10 <dcngettext@plt+0x3844>
   14fd4:	mov	r2, r7
   14fd8:	mov	r6, r7
   14fdc:	mov	r3, #0
   14fe0:	mov	r7, r2
   14fe4:	mov	r5, #32
   14fe8:	b	14b10 <dcngettext@plt+0x3844>
   14fec:	mov	r6, r7
   14ff0:	b	14d00 <dcngettext@plt+0x3a34>
   14ff4:	mov	r7, #0
   14ff8:	ldr	r3, [sp, #64]	; 0x40
   14ffc:	cmp	r3, #1
   15000:	bne	15620 <dcngettext@plt+0x4354>
   15004:	bl	11164 <__ctype_b_loc@plt>
   15008:	ldr	r2, [r0]
   1500c:	sxth	r3, r5
   15010:	lsl	r3, r3, #1
   15014:	ldr	r1, [sp, #64]	; 0x40
   15018:	ldrh	r3, [r2, r3]
   1501c:	mov	ip, r1
   15020:	and	r3, r3, #16384	; 0x4000
   15024:	cmp	r3, #0
   15028:	ldr	r3, [sp, #40]	; 0x28
   1502c:	movne	r6, #1
   15030:	moveq	r6, #0
   15034:	movne	r2, #0
   15038:	andeq	r2, r3, #1
   1503c:	cmp	r2, #0
   15040:	bne	15968 <dcngettext@plt+0x469c>
   15044:	sub	r3, fp, #2
   15048:	clz	r3, r3
   1504c:	lsr	r3, r3, #5
   15050:	b	14b10 <dcngettext@plt+0x3844>
   15054:	cmp	r4, #0
   15058:	bne	15cf8 <dcngettext@plt+0x4a2c>
   1505c:	str	r4, [sp, #40]	; 0x28
   15060:	cmp	sl, #0
   15064:	bne	15d28 <dcngettext@plt+0x4a5c>
   15068:	mov	r3, #1
   1506c:	movw	r2, #33652	; 0x8374
   15070:	movt	r2, #1
   15074:	mov	r4, r3
   15078:	mov	r8, #2
   1507c:	str	r3, [sp, #36]	; 0x24
   15080:	str	sl, [sp, #44]	; 0x2c
   15084:	str	sl, [sp, #48]	; 0x30
   15088:	str	r3, [sp, #56]	; 0x38
   1508c:	str	r2, [sp, #60]	; 0x3c
   15090:	str	sl, [sp, #68]	; 0x44
   15094:	str	sl, [sp, #72]	; 0x48
   15098:	b	14670 <dcngettext@plt+0x33a4>
   1509c:	ldr	r3, [sp, #32]
   150a0:	ldrb	r5, [r3, r9]
   150a4:	cmp	r5, #126	; 0x7e
   150a8:	ldrls	pc, [pc, r5, lsl #2]
   150ac:	b	14ff8 <dcngettext@plt+0x3d2c>
   150b0:	ldrdeq	r5, [r1], -r4
   150b4:	strdeq	r4, [r1], -r8
   150b8:	strdeq	r4, [r1], -r8
   150bc:	strdeq	r4, [r1], -r8
   150c0:	strdeq	r4, [r1], -r8
   150c4:	strdeq	r4, [r1], -r8
   150c8:	strdeq	r4, [r1], -r8
   150cc:	andeq	r5, r1, ip, asr #5
   150d0:	andeq	r5, r1, r4, asr #5
   150d4:	andeq	r4, r1, r0, lsl lr
   150d8:			; <UNDEFINED> instruction: 0x000152bc
   150dc:	andeq	r4, r1, r8, lsl #28
   150e0:			; <UNDEFINED> instruction: 0x000152b4
   150e4:	andeq	r5, r1, ip, lsr #5
   150e8:	strdeq	r4, [r1], -r8
   150ec:	strdeq	r4, [r1], -r8
   150f0:	strdeq	r4, [r1], -r8
   150f4:	strdeq	r4, [r1], -r8
   150f8:	strdeq	r4, [r1], -r8
   150fc:	strdeq	r4, [r1], -r8
   15100:	strdeq	r4, [r1], -r8
   15104:	strdeq	r4, [r1], -r8
   15108:	strdeq	r4, [r1], -r8
   1510c:	strdeq	r4, [r1], -r8
   15110:	strdeq	r4, [r1], -r8
   15114:	strdeq	r4, [r1], -r8
   15118:	strdeq	r4, [r1], -r8
   1511c:	strdeq	r4, [r1], -r8
   15120:	strdeq	r4, [r1], -r8
   15124:	strdeq	r4, [r1], -r8
   15128:	strdeq	r4, [r1], -r8
   1512c:	strdeq	r4, [r1], -r8
   15130:	andeq	r5, r1, r8, lsr #6
   15134:	andeq	r5, r1, r8, lsl #6
   15138:	andeq	r5, r1, r8, lsl #6
   1513c:	strdeq	r5, [r1], -r8
   15140:	andeq	r5, r1, r8, lsl #6
   15144:	andeq	r5, r1, r4, asr #32
   15148:	andeq	r5, r1, r8, lsl #6
   1514c:	andeq	r4, r1, r8, lsr sp
   15150:	andeq	r5, r1, r8, lsl #6
   15154:	andeq	r5, r1, r8, lsl #6
   15158:	andeq	r5, r1, r8, lsl #6
   1515c:	andeq	r5, r1, r4, asr #32
   15160:	andeq	r5, r1, r4, asr #32
   15164:	andeq	r5, r1, r4, asr #32
   15168:	andeq	r5, r1, r4, asr #32
   1516c:	andeq	r5, r1, r4, asr #32
   15170:	andeq	r5, r1, r4, asr #32
   15174:	andeq	r5, r1, r4, asr #32
   15178:	andeq	r5, r1, r4, asr #32
   1517c:	andeq	r5, r1, r4, asr #32
   15180:	andeq	r5, r1, r4, asr #32
   15184:	andeq	r5, r1, r4, asr #32
   15188:	andeq	r5, r1, r4, asr #32
   1518c:	andeq	r5, r1, r4, asr #32
   15190:	andeq	r5, r1, r4, asr #32
   15194:	andeq	r5, r1, r4, asr #32
   15198:	andeq	r5, r1, r4, asr #32
   1519c:	andeq	r5, r1, r8, lsl #6
   151a0:	andeq	r5, r1, r8, lsl #6
   151a4:	andeq	r5, r1, r8, lsl #6
   151a8:	andeq	r5, r1, r8, lsl #6
   151ac:	andeq	r4, r1, ip, lsl #26
   151b0:	strdeq	r4, [r1], -r8
   151b4:	andeq	r5, r1, r4, asr #32
   151b8:	andeq	r5, r1, r4, asr #32
   151bc:	andeq	r5, r1, r4, asr #32
   151c0:	andeq	r5, r1, r4, asr #32
   151c4:	andeq	r5, r1, r4, asr #32
   151c8:	andeq	r5, r1, r4, asr #32
   151cc:	andeq	r5, r1, r4, asr #32
   151d0:	andeq	r5, r1, r4, asr #32
   151d4:	andeq	r5, r1, r4, asr #32
   151d8:	andeq	r5, r1, r4, asr #32
   151dc:	andeq	r5, r1, r4, asr #32
   151e0:	andeq	r5, r1, r4, asr #32
   151e4:	andeq	r5, r1, r4, asr #32
   151e8:	andeq	r5, r1, r4, asr #32
   151ec:	andeq	r5, r1, r4, asr #32
   151f0:	andeq	r5, r1, r4, asr #32
   151f4:	andeq	r5, r1, r4, asr #32
   151f8:	andeq	r5, r1, r4, asr #32
   151fc:	andeq	r5, r1, r4, asr #32
   15200:	andeq	r5, r1, r4, asr #32
   15204:	andeq	r5, r1, r4, asr #32
   15208:	andeq	r5, r1, r4, asr #32
   1520c:	andeq	r5, r1, r4, asr #32
   15210:	andeq	r5, r1, r4, asr #32
   15214:	andeq	r5, r1, r4, asr #32
   15218:	andeq	r5, r1, r4, asr #32
   1521c:	andeq	r5, r1, r8, lsl #6
   15220:			; <UNDEFINED> instruction: 0x00014cb4
   15224:	andeq	r5, r1, r4, asr #32
   15228:	andeq	r5, r1, r8, lsl #6
   1522c:	andeq	r5, r1, r4, asr #32
   15230:	andeq	r5, r1, r8, lsl #6
   15234:	andeq	r5, r1, r4, asr #32
   15238:	andeq	r5, r1, r4, asr #32
   1523c:	andeq	r5, r1, r4, asr #32
   15240:	andeq	r5, r1, r4, asr #32
   15244:	andeq	r5, r1, r4, asr #32
   15248:	andeq	r5, r1, r4, asr #32
   1524c:	andeq	r5, r1, r4, asr #32
   15250:	andeq	r5, r1, r4, asr #32
   15254:	andeq	r5, r1, r4, asr #32
   15258:	andeq	r5, r1, r4, asr #32
   1525c:	andeq	r5, r1, r4, asr #32
   15260:	andeq	r5, r1, r4, asr #32
   15264:	andeq	r5, r1, r4, asr #32
   15268:	andeq	r5, r1, r4, asr #32
   1526c:	andeq	r5, r1, r4, asr #32
   15270:	andeq	r5, r1, r4, asr #32
   15274:	andeq	r5, r1, r4, asr #32
   15278:	andeq	r5, r1, r4, asr #32
   1527c:	andeq	r5, r1, r4, asr #32
   15280:	andeq	r5, r1, r4, asr #32
   15284:	andeq	r5, r1, r4, asr #32
   15288:	andeq	r5, r1, r4, asr #32
   1528c:	andeq	r5, r1, r4, asr #32
   15290:	andeq	r5, r1, r4, asr #32
   15294:	andeq	r5, r1, r4, asr #32
   15298:	andeq	r5, r1, r4, asr #32
   1529c:	ldrdeq	r4, [r1], -r8
   152a0:	andeq	r5, r1, r8, lsl #6
   152a4:	ldrdeq	r4, [r1], -r8
   152a8:	strdeq	r5, [r1], -r8
   152ac:	mov	r3, #114	; 0x72
   152b0:	b	14e14 <dcngettext@plt+0x3b48>
   152b4:	mov	r3, #102	; 0x66
   152b8:	b	14ce4 <dcngettext@plt+0x3a18>
   152bc:	mov	r3, #110	; 0x6e
   152c0:	b	14e14 <dcngettext@plt+0x3b48>
   152c4:	mov	r3, #98	; 0x62
   152c8:	b	14ce4 <dcngettext@plt+0x3a18>
   152cc:	mov	r3, #97	; 0x61
   152d0:	b	14ce4 <dcngettext@plt+0x3a18>
   152d4:	ldr	r3, [sp, #40]	; 0x28
   152d8:	cmp	r3, #0
   152dc:	bne	14eec <dcngettext@plt+0x3c20>
   152e0:	ldr	r3, [sp, #156]	; 0x9c
   152e4:	tst	r3, #1
   152e8:	addne	r9, r9, #1
   152ec:	bne	14680 <dcngettext@plt+0x33b4>
   152f0:	ldr	r7, [sp, #40]	; 0x28
   152f4:	b	14cf0 <dcngettext@plt+0x3a24>
   152f8:	sub	r3, fp, #2
   152fc:	clz	r3, r3
   15300:	lsr	r3, r3, #5
   15304:	b	14b04 <dcngettext@plt+0x3838>
   15308:	sub	r3, fp, #2
   1530c:	mov	r6, #0
   15310:	clz	r3, r3
   15314:	lsr	r3, r3, #5
   15318:	ldr	r2, [sp, #44]	; 0x2c
   1531c:	tst	r2, r3
   15320:	beq	14b10 <dcngettext@plt+0x3844>
   15324:	b	14e2c <dcngettext@plt+0x3b60>
   15328:	sub	r3, fp, #2
   1532c:	clz	r3, r3
   15330:	lsr	r3, r3, #5
   15334:	b	15318 <dcngettext@plt+0x404c>
   15338:	ldr	r3, [sp, #52]	; 0x34
   1533c:	ldrb	r5, [r3]
   15340:	cmp	r5, #126	; 0x7e
   15344:	ldrls	pc, [pc, r5, lsl #2]
   15348:	b	14ff4 <dcngettext@plt+0x3d28>
   1534c:	andeq	r4, r1, ip, ror #29
   15350:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15354:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15358:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1535c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15360:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15364:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15368:	ldrdeq	r4, [r1], -r0
   1536c:	andeq	r4, r1, r8, asr #29
   15370:	andeq	r5, r1, r4, lsl #11
   15374:			; <UNDEFINED> instruction: 0x00014ebc
   15378:	andeq	r5, r1, r8, ror r5
   1537c:	muleq	r1, r8, lr
   15380:	andeq	r4, r1, r4, ror #29
   15384:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15388:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1538c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15390:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15394:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15398:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1539c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153a0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153a4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153a8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153ac:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153b0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153b4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153b8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153bc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153c0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153c4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153c8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   153cc:	andeq	r5, r1, r0, ror r5
   153d0:	ldrdeq	r4, [r1], -r8
   153d4:	ldrdeq	r4, [r1], -r8
   153d8:	andeq	r5, r1, r4, asr r5
   153dc:	ldrdeq	r4, [r1], -r8
   153e0:	andeq	r5, r1, r8, asr #10
   153e4:	ldrdeq	r4, [r1], -r8
   153e8:	andeq	r4, r1, r4, lsr sp
   153ec:	ldrdeq	r4, [r1], -r8
   153f0:	ldrdeq	r4, [r1], -r8
   153f4:	ldrdeq	r4, [r1], -r8
   153f8:	andeq	r5, r1, r8, asr #10
   153fc:	andeq	r5, r1, r8, asr #10
   15400:	andeq	r5, r1, r8, asr #10
   15404:	andeq	r5, r1, r8, asr #10
   15408:	andeq	r5, r1, r8, asr #10
   1540c:	andeq	r5, r1, r8, asr #10
   15410:	andeq	r5, r1, r8, asr #10
   15414:	andeq	r5, r1, r8, asr #10
   15418:	andeq	r5, r1, r8, asr #10
   1541c:	andeq	r5, r1, r8, asr #10
   15420:	andeq	r5, r1, r8, asr #10
   15424:	andeq	r5, r1, r8, asr #10
   15428:	andeq	r5, r1, r8, asr #10
   1542c:	andeq	r5, r1, r8, asr #10
   15430:	andeq	r5, r1, r8, asr #10
   15434:	andeq	r5, r1, r8, asr #10
   15438:	ldrdeq	r4, [r1], -r8
   1543c:	ldrdeq	r4, [r1], -r8
   15440:	ldrdeq	r4, [r1], -r8
   15444:	ldrdeq	r4, [r1], -r8
   15448:	andeq	r4, r1, r8, lsl #26
   1544c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15450:	andeq	r5, r1, r8, asr #10
   15454:	andeq	r5, r1, r8, asr #10
   15458:	andeq	r5, r1, r8, asr #10
   1545c:	andeq	r5, r1, r8, asr #10
   15460:	andeq	r5, r1, r8, asr #10
   15464:	andeq	r5, r1, r8, asr #10
   15468:	andeq	r5, r1, r8, asr #10
   1546c:	andeq	r5, r1, r8, asr #10
   15470:	andeq	r5, r1, r8, asr #10
   15474:	andeq	r5, r1, r8, asr #10
   15478:	andeq	r5, r1, r8, asr #10
   1547c:	andeq	r5, r1, r8, asr #10
   15480:	andeq	r5, r1, r8, asr #10
   15484:	andeq	r5, r1, r8, asr #10
   15488:	andeq	r5, r1, r8, asr #10
   1548c:	andeq	r5, r1, r8, asr #10
   15490:	andeq	r5, r1, r8, asr #10
   15494:	andeq	r5, r1, r8, asr #10
   15498:	andeq	r5, r1, r8, asr #10
   1549c:	andeq	r5, r1, r8, asr #10
   154a0:	andeq	r5, r1, r8, asr #10
   154a4:	andeq	r5, r1, r8, asr #10
   154a8:	andeq	r5, r1, r8, asr #10
   154ac:	andeq	r5, r1, r8, asr #10
   154b0:	andeq	r5, r1, r8, asr #10
   154b4:	andeq	r5, r1, r8, asr #10
   154b8:	ldrdeq	r4, [r1], -r8
   154bc:			; <UNDEFINED> instruction: 0x00014cb0
   154c0:	andeq	r5, r1, r8, asr #10
   154c4:	ldrdeq	r4, [r1], -r8
   154c8:	andeq	r5, r1, r8, asr #10
   154cc:	ldrdeq	r4, [r1], -r8
   154d0:	andeq	r5, r1, r8, asr #10
   154d4:	andeq	r5, r1, r8, asr #10
   154d8:	andeq	r5, r1, r8, asr #10
   154dc:	andeq	r5, r1, r8, asr #10
   154e0:	andeq	r5, r1, r8, asr #10
   154e4:	andeq	r5, r1, r8, asr #10
   154e8:	andeq	r5, r1, r8, asr #10
   154ec:	andeq	r5, r1, r8, asr #10
   154f0:	andeq	r5, r1, r8, asr #10
   154f4:	andeq	r5, r1, r8, asr #10
   154f8:	andeq	r5, r1, r8, asr #10
   154fc:	andeq	r5, r1, r8, asr #10
   15500:	andeq	r5, r1, r8, asr #10
   15504:	andeq	r5, r1, r8, asr #10
   15508:	andeq	r5, r1, r8, asr #10
   1550c:	andeq	r5, r1, r8, asr #10
   15510:	andeq	r5, r1, r8, asr #10
   15514:	andeq	r5, r1, r8, asr #10
   15518:	andeq	r5, r1, r8, asr #10
   1551c:	andeq	r5, r1, r8, asr #10
   15520:	andeq	r5, r1, r8, asr #10
   15524:	andeq	r5, r1, r8, asr #10
   15528:	andeq	r5, r1, r8, asr #10
   1552c:	andeq	r5, r1, r8, asr #10
   15530:	andeq	r5, r1, r8, asr #10
   15534:	andeq	r5, r1, r8, asr #10
   15538:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1553c:	ldrdeq	r4, [r1], -r8
   15540:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15544:	andeq	r5, r1, r4, asr r5
   15548:	mov	r6, r7
   1554c:	mov	r7, #0
   15550:	b	14d00 <dcngettext@plt+0x3a34>
   15554:	cmp	r9, #0
   15558:	mov	r2, #0
   1555c:	beq	14fc4 <dcngettext@plt+0x3cf8>
   15560:	mov	r6, #0
   15564:	mov	r7, r2
   15568:	mov	r3, r6
   1556c:	b	14b20 <dcngettext@plt+0x3854>
   15570:	mov	r2, #0
   15574:	b	14fd8 <dcngettext@plt+0x3d0c>
   15578:	mov	r7, #0
   1557c:	mov	r3, #118	; 0x76
   15580:	b	14ce4 <dcngettext@plt+0x3a18>
   15584:	mov	r7, #0
   15588:	mov	r3, #116	; 0x74
   1558c:	b	14e14 <dcngettext@plt+0x3b48>
   15590:	ldr	r3, [sp, #44]	; 0x2c
   15594:	b	14b48 <dcngettext@plt+0x387c>
   15598:	ldr	r3, [sp, #44]	; 0x2c
   1559c:	cmp	r3, #0
   155a0:	bne	15a10 <dcngettext@plt+0x4744>
   155a4:	add	r9, r9, #1
   155a8:	mov	r6, #0
   155ac:	ldr	r3, [sp, #48]	; 0x30
   155b0:	mov	r5, #92	; 0x5c
   155b4:	b	14dd4 <dcngettext@plt+0x3b08>
   155b8:	ldr	r3, [sp, #32]
   155bc:	ldrb	r2, [r3, #1]
   155c0:	adds	r2, r2, #0
   155c4:	movne	r2, #1
   155c8:	b	14af0 <dcngettext@plt+0x3824>
   155cc:	ldr	r3, [sp, #156]	; 0x9c
   155d0:	ands	r3, r3, #4
   155d4:	beq	155fc <dcngettext@plt+0x4330>
   155d8:	ldr	r2, [sp, #28]
   155dc:	add	r3, r9, #2
   155e0:	cmp	r3, r2
   155e4:	bcs	155f8 <dcngettext@plt+0x432c>
   155e8:	ldr	r2, [sp, #52]	; 0x34
   155ec:	ldrb	r5, [r2, #1]
   155f0:	cmp	r5, #63	; 0x3f
   155f4:	beq	15a74 <dcngettext@plt+0x47a8>
   155f8:	mov	r3, #0
   155fc:	mov	r5, #63	; 0x3f
   15600:	mov	r6, r3
   15604:	b	14b10 <dcngettext@plt+0x3844>
   15608:	ldr	r3, [sp, #44]	; 0x2c
   1560c:	cmp	r3, #0
   15610:	bne	15a10 <dcngettext@plt+0x4744>
   15614:	mov	r6, r3
   15618:	mov	r5, #63	; 0x3f
   1561c:	b	14b48 <dcngettext@plt+0x387c>
   15620:	ldr	r1, [sp, #28]
   15624:	mov	r2, #0
   15628:	mov	r3, #0
   1562c:	strd	r2, [sp, #104]	; 0x68
   15630:	cmn	r1, #1
   15634:	bne	15644 <dcngettext@plt+0x4378>
   15638:	ldr	r0, [sp, #32]
   1563c:	bl	1117c <strlen@plt>
   15640:	str	r0, [sp, #28]
   15644:	str	r8, [sp, #76]	; 0x4c
   15648:	mov	r3, #0
   1564c:	str	sl, [sp, #80]	; 0x50
   15650:	ldr	sl, [sp, #32]
   15654:	str	r5, [sp, #84]	; 0x54
   15658:	mov	r5, r3
   1565c:	ldr	r8, [sp, #44]	; 0x2c
   15660:	str	r7, [sp, #88]	; 0x58
   15664:	str	r4, [sp, #92]	; 0x5c
   15668:	ldr	r2, [sp, #28]
   1566c:	add	r4, r9, r5
   15670:	add	r3, sp, #104	; 0x68
   15674:	add	r7, sl, r4
   15678:	add	r0, sp, #100	; 0x64
   1567c:	mov	r1, r7
   15680:	sub	r2, r2, r4
   15684:	bl	1798c <dcngettext@plt+0x66c0>
   15688:	subs	r1, r0, #0
   1568c:	beq	156d8 <dcngettext@plt+0x440c>
   15690:	cmn	r1, #1
   15694:	beq	15a50 <dcngettext@plt+0x4784>
   15698:	cmn	r1, #2
   1569c:	beq	15b70 <dcngettext@plt+0x48a4>
   156a0:	cmp	fp, #2
   156a4:	movne	r3, #0
   156a8:	andeq	r3, r8, #1
   156ac:	cmp	r3, #0
   156b0:	bne	1583c <dcngettext@plt+0x4570>
   156b4:	ldr	r0, [sp, #100]	; 0x64
   156b8:	add	r5, r5, r1
   156bc:	bl	11080 <iswprint@plt>
   156c0:	cmp	r0, #0
   156c4:	add	r0, sp, #104	; 0x68
   156c8:	moveq	r6, #0
   156cc:	bl	11014 <mbsinit@plt>
   156d0:	cmp	r0, #0
   156d4:	beq	15668 <dcngettext@plt+0x439c>
   156d8:	ldr	r3, [sp, #40]	; 0x28
   156dc:	mov	ip, r5
   156e0:	eor	r2, r6, #1
   156e4:	ldr	r8, [sp, #76]	; 0x4c
   156e8:	ldr	sl, [sp, #80]	; 0x50
   156ec:	and	r2, r2, r3
   156f0:	ldr	r5, [sp, #84]	; 0x54
   156f4:	ldr	r7, [sp, #88]	; 0x58
   156f8:	ldr	r4, [sp, #92]	; 0x5c
   156fc:	cmp	ip, #1
   15700:	bls	1503c <dcngettext@plt+0x3d70>
   15704:	add	r1, ip, r9
   15708:	mov	r0, #39	; 0x27
   1570c:	ldr	lr, [sp, #52]	; 0x34
   15710:	mov	ip, #0
   15714:	str	r6, [sp, #52]	; 0x34
   15718:	ldr	r6, [sp, #48]	; 0x30
   1571c:	b	157d8 <dcngettext@plt+0x450c>
   15720:	ldr	ip, [sp, #44]	; 0x2c
   15724:	sub	r3, fp, #2
   15728:	clz	r3, r3
   1572c:	lsr	r3, r3, #5
   15730:	cmp	ip, #0
   15734:	bne	15948 <dcngettext@plt+0x467c>
   15738:	eor	ip, r6, #1
   1573c:	ands	r3, r3, ip
   15740:	beq	15770 <dcngettext@plt+0x44a4>
   15744:	cmp	sl, r4
   15748:	add	ip, r4, #1
   1574c:	strbhi	r0, [r8, r4]
   15750:	cmp	sl, ip
   15754:	movhi	r6, #36	; 0x24
   15758:	strbhi	r6, [r8, ip]
   1575c:	add	ip, r4, #2
   15760:	mov	r6, r3
   15764:	cmp	sl, ip
   15768:	add	r4, r4, #3
   1576c:	strbhi	r0, [r8, ip]
   15770:	cmp	sl, r4
   15774:	movhi	r3, #92	; 0x5c
   15778:	strbhi	r3, [r8, r4]
   1577c:	add	r3, r4, #1
   15780:	cmp	sl, r3
   15784:	bls	15794 <dcngettext@plt+0x44c8>
   15788:	lsr	ip, r5, #6
   1578c:	add	ip, ip, #48	; 0x30
   15790:	strb	ip, [r8, r3]
   15794:	add	r3, r4, #2
   15798:	cmp	sl, r3
   1579c:	bls	157ac <dcngettext@plt+0x44e0>
   157a0:	ubfx	ip, r5, #3, #3
   157a4:	add	ip, ip, #48	; 0x30
   157a8:	strb	ip, [r8, r3]
   157ac:	add	r9, r9, #1
   157b0:	and	r5, r5, #7
   157b4:	cmp	r9, r1
   157b8:	add	r5, r5, #48	; 0x30
   157bc:	add	r4, r4, #3
   157c0:	bcs	15974 <dcngettext@plt+0x46a8>
   157c4:	mov	ip, r2
   157c8:	cmp	sl, r4
   157cc:	strbhi	r5, [r8, r4]
   157d0:	add	r4, r4, #1
   157d4:	ldrb	r5, [lr, #1]!
   157d8:	cmp	r2, #0
   157dc:	bne	15720 <dcngettext@plt+0x4454>
   157e0:	eor	r3, ip, #1
   157e4:	cmp	r7, #0
   157e8:	and	r3, r3, r6
   157ec:	uxtb	r3, r3
   157f0:	beq	15804 <dcngettext@plt+0x4538>
   157f4:	cmp	sl, r4
   157f8:	movhi	r7, #92	; 0x5c
   157fc:	strbhi	r7, [r8, r4]
   15800:	add	r4, r4, #1
   15804:	add	r9, r9, #1
   15808:	cmp	r9, r1
   1580c:	bcs	1595c <dcngettext@plt+0x4690>
   15810:	cmp	r3, #0
   15814:	beq	15994 <dcngettext@plt+0x46c8>
   15818:	cmp	sl, r4
   1581c:	add	r3, r4, #1
   15820:	mov	r7, #0
   15824:	strbhi	r0, [r8, r4]
   15828:	cmp	sl, r3
   1582c:	add	r4, r4, #2
   15830:	mov	r6, r7
   15834:	strbhi	r0, [r8, r3]
   15838:	b	157c8 <dcngettext@plt+0x44fc>
   1583c:	cmp	r1, #1
   15840:	beq	156b4 <dcngettext@plt+0x43e8>
   15844:	add	r2, r4, #1
   15848:	add	r3, sl, r1
   1584c:	add	r2, sl, r2
   15850:	add	r4, r3, r4
   15854:	ldrb	r3, [r2], #1
   15858:	sub	r3, r3, #91	; 0x5b
   1585c:	cmp	r3, #33	; 0x21
   15860:	ldrls	pc, [pc, r3, lsl #2]
   15864:	b	158f0 <dcngettext@plt+0x4624>
   15868:	strdeq	r5, [r1], -ip
   1586c:	strdeq	r5, [r1], -ip
   15870:	strdeq	r5, [r1], -r0
   15874:	strdeq	r5, [r1], -ip
   15878:	strdeq	r5, [r1], -r0
   1587c:	strdeq	r5, [r1], -ip
   15880:	strdeq	r5, [r1], -r0
   15884:	strdeq	r5, [r1], -r0
   15888:	strdeq	r5, [r1], -r0
   1588c:	strdeq	r5, [r1], -r0
   15890:	strdeq	r5, [r1], -r0
   15894:	strdeq	r5, [r1], -r0
   15898:	strdeq	r5, [r1], -r0
   1589c:	strdeq	r5, [r1], -r0
   158a0:	strdeq	r5, [r1], -r0
   158a4:	strdeq	r5, [r1], -r0
   158a8:	strdeq	r5, [r1], -r0
   158ac:	strdeq	r5, [r1], -r0
   158b0:	strdeq	r5, [r1], -r0
   158b4:	strdeq	r5, [r1], -r0
   158b8:	strdeq	r5, [r1], -r0
   158bc:	strdeq	r5, [r1], -r0
   158c0:	strdeq	r5, [r1], -r0
   158c4:	strdeq	r5, [r1], -r0
   158c8:	strdeq	r5, [r1], -r0
   158cc:	strdeq	r5, [r1], -r0
   158d0:	strdeq	r5, [r1], -r0
   158d4:	strdeq	r5, [r1], -r0
   158d8:	strdeq	r5, [r1], -r0
   158dc:	strdeq	r5, [r1], -r0
   158e0:	strdeq	r5, [r1], -r0
   158e4:	strdeq	r5, [r1], -r0
   158e8:	strdeq	r5, [r1], -r0
   158ec:	strdeq	r5, [r1], -ip
   158f0:	cmp	r4, r2
   158f4:	bne	15854 <dcngettext@plt+0x4588>
   158f8:	b	156b4 <dcngettext@plt+0x43e8>
   158fc:	mov	r8, #2
   15900:	ldr	fp, [sp, #76]	; 0x4c
   15904:	ldr	sl, [sp, #80]	; 0x50
   15908:	b	14e34 <dcngettext@plt+0x3b68>
   1590c:	ldr	r2, [sp, #40]	; 0x28
   15910:	str	fp, [sp, #152]	; 0x98
   15914:	mov	fp, r8
   15918:	ldr	r8, [sp, #152]	; 0x98
   1591c:	and	r2, r2, r3
   15920:	str	r2, [sp, #40]	; 0x28
   15924:	b	14e34 <dcngettext@plt+0x3b68>
   15928:	cmp	sl, r4
   1592c:	movls	r0, r4
   15930:	bls	14f64 <dcngettext@plt+0x3c98>
   15934:	ldr	r3, [sp, #48]	; 0x30
   15938:	b	14f54 <dcngettext@plt+0x3c88>
   1593c:	str	sl, [sp, #72]	; 0x48
   15940:	ldr	sl, [sp, #44]	; 0x2c
   15944:	b	14da4 <dcngettext@plt+0x3ad8>
   15948:	str	r3, [sp, #40]	; 0x28
   1594c:	str	fp, [sp, #152]	; 0x98
   15950:	mov	fp, r8
   15954:	ldr	r8, [sp, #152]	; 0x98
   15958:	b	14e34 <dcngettext@plt+0x3b68>
   1595c:	str	r6, [sp, #48]	; 0x30
   15960:	ldr	r6, [sp, #52]	; 0x34
   15964:	b	14dd4 <dcngettext@plt+0x3b08>
   15968:	mov	r6, #0
   1596c:	ldr	r2, [sp, #40]	; 0x28
   15970:	b	15704 <dcngettext@plt+0x4438>
   15974:	str	r6, [sp, #48]	; 0x30
   15978:	ldr	r6, [sp, #52]	; 0x34
   1597c:	b	14bc0 <dcngettext@plt+0x38f4>
   15980:	add	r4, r4, #4
   15984:	mov	r6, #0
   15988:	str	r3, [sp, #48]	; 0x30
   1598c:	mov	r5, #48	; 0x30
   15990:	b	14b48 <dcngettext@plt+0x387c>
   15994:	mov	r7, r3
   15998:	b	157c8 <dcngettext@plt+0x44fc>
   1599c:	mov	r3, #1
   159a0:	movw	r2, #33632	; 0x8360
   159a4:	movt	r2, #1
   159a8:	mov	r4, r3
   159ac:	str	r3, [sp, #36]	; 0x24
   159b0:	str	r3, [sp, #40]	; 0x28
   159b4:	str	sl, [sp, #44]	; 0x2c
   159b8:	str	sl, [sp, #48]	; 0x30
   159bc:	str	r3, [sp, #56]	; 0x38
   159c0:	str	r2, [sp, #60]	; 0x3c
   159c4:	str	sl, [sp, #68]	; 0x44
   159c8:	str	sl, [sp, #72]	; 0x48
   159cc:	b	14670 <dcngettext@plt+0x33a4>
   159d0:	mov	r3, r6
   159d4:	mov	r5, #48	; 0x30
   159d8:	mov	r6, #0
   159dc:	b	14b48 <dcngettext@plt+0x387c>
   159e0:	mov	r5, r3
   159e4:	b	14ec0 <dcngettext@plt+0x3bf4>
   159e8:	cmp	sl, r4
   159ec:	mov	r5, #48	; 0x30
   159f0:	movhi	r3, #48	; 0x30
   159f4:	strbhi	r3, [r8, r4]
   159f8:	add	r3, r0, #2
   159fc:	add	r4, r0, #3
   15a00:	cmp	sl, r3
   15a04:	movhi	r1, #48	; 0x30
   15a08:	strbhi	r1, [r8, r3]
   15a0c:	b	14f98 <dcngettext@plt+0x3ccc>
   15a10:	str	fp, [sp, #152]	; 0x98
   15a14:	mov	fp, r8
   15a18:	ldr	r8, [sp, #152]	; 0x98
   15a1c:	b	14e34 <dcngettext@plt+0x3b68>
   15a20:	ldr	r3, [sp, #164]	; 0xa4
   15a24:	ldrb	r3, [r3]
   15a28:	cmp	r3, #0
   15a2c:	beq	14640 <dcngettext@plt+0x3374>
   15a30:	ldr	r2, [sp, #164]	; 0xa4
   15a34:	cmp	sl, r4
   15a38:	strbhi	r3, [fp, r4]
   15a3c:	add	r4, r4, #1
   15a40:	ldrb	r3, [r2, #1]!
   15a44:	cmp	r3, #0
   15a48:	bne	15a34 <dcngettext@plt+0x4768>
   15a4c:	b	14640 <dcngettext@plt+0x3374>
   15a50:	mov	ip, r5
   15a54:	mov	r6, #0
   15a58:	ldr	r2, [sp, #40]	; 0x28
   15a5c:	ldr	r8, [sp, #76]	; 0x4c
   15a60:	ldr	sl, [sp, #80]	; 0x50
   15a64:	ldr	r5, [sp, #84]	; 0x54
   15a68:	ldr	r7, [sp, #88]	; 0x58
   15a6c:	ldr	r4, [sp, #92]	; 0x5c
   15a70:	b	156fc <dcngettext@plt+0x4430>
   15a74:	ldr	r2, [sp, #32]
   15a78:	ldrb	r1, [r2, r3]
   15a7c:	sub	r2, r1, #33	; 0x21
   15a80:	cmp	r2, #29
   15a84:	ldrls	pc, [pc, r2, lsl #2]
   15a88:	b	15b64 <dcngettext@plt+0x4898>
   15a8c:	andeq	r5, r1, r4, lsl #22
   15a90:	andeq	r5, r1, r4, ror #22
   15a94:	andeq	r5, r1, r4, ror #22
   15a98:	andeq	r5, r1, r4, ror #22
   15a9c:	andeq	r5, r1, r4, ror #22
   15aa0:	andeq	r5, r1, r4, ror #22
   15aa4:	andeq	r5, r1, r4, lsl #22
   15aa8:	andeq	r5, r1, r4, lsl #22
   15aac:	andeq	r5, r1, r4, lsl #22
   15ab0:	andeq	r5, r1, r4, ror #22
   15ab4:	andeq	r5, r1, r4, ror #22
   15ab8:	andeq	r5, r1, r4, ror #22
   15abc:	andeq	r5, r1, r4, lsl #22
   15ac0:	andeq	r5, r1, r4, ror #22
   15ac4:	andeq	r5, r1, r4, lsl #22
   15ac8:	andeq	r5, r1, r4, ror #22
   15acc:	andeq	r5, r1, r4, ror #22
   15ad0:	andeq	r5, r1, r4, ror #22
   15ad4:	andeq	r5, r1, r4, ror #22
   15ad8:	andeq	r5, r1, r4, ror #22
   15adc:	andeq	r5, r1, r4, ror #22
   15ae0:	andeq	r5, r1, r4, ror #22
   15ae4:	andeq	r5, r1, r4, ror #22
   15ae8:	andeq	r5, r1, r4, ror #22
   15aec:	andeq	r5, r1, r4, ror #22
   15af0:	andeq	r5, r1, r4, ror #22
   15af4:	andeq	r5, r1, r4, ror #22
   15af8:	andeq	r5, r1, r4, lsl #22
   15afc:	andeq	r5, r1, r4, lsl #22
   15b00:	andeq	r5, r1, r4, lsl #22
   15b04:	ldr	r2, [sp, #44]	; 0x2c
   15b08:	cmp	r2, #0
   15b0c:	bne	15c68 <dcngettext@plt+0x499c>
   15b10:	cmp	sl, r4
   15b14:	mov	r5, r1
   15b18:	movhi	r2, #63	; 0x3f
   15b1c:	mov	r9, r3
   15b20:	strbhi	r2, [r8, r4]
   15b24:	add	r2, r4, #1
   15b28:	cmp	sl, r2
   15b2c:	movhi	r0, #34	; 0x22
   15b30:	strbhi	r0, [r8, r2]
   15b34:	add	r2, r4, #2
   15b38:	cmp	sl, r2
   15b3c:	movhi	r0, #34	; 0x22
   15b40:	strbhi	r0, [r8, r2]
   15b44:	add	r2, r4, #3
   15b48:	add	r4, r4, #4
   15b4c:	cmp	sl, r2
   15b50:	movhi	r0, #63	; 0x3f
   15b54:	strbhi	r0, [r8, r2]
   15b58:	mov	r2, #0
   15b5c:	mov	r6, r2
   15b60:	b	14f98 <dcngettext@plt+0x3ccc>
   15b64:	mov	r3, #0
   15b68:	mov	r6, r3
   15b6c:	b	14b10 <dcngettext@plt+0x3844>
   15b70:	ldr	r0, [sp, #28]
   15b74:	mov	r1, r4
   15b78:	mov	r2, r7
   15b7c:	mov	r3, r5
   15b80:	mov	ip, r5
   15b84:	ldr	r8, [sp, #76]	; 0x4c
   15b88:	ldr	sl, [sp, #80]	; 0x50
   15b8c:	cmp	r1, r0
   15b90:	ldr	r5, [sp, #84]	; 0x54
   15b94:	ldr	r7, [sp, #88]	; 0x58
   15b98:	ldr	r4, [sp, #92]	; 0x5c
   15b9c:	bcs	15bd0 <dcngettext@plt+0x4904>
   15ba0:	ldrb	r6, [r2]
   15ba4:	cmp	r6, #0
   15ba8:	bne	15bbc <dcngettext@plt+0x48f0>
   15bac:	b	15cf0 <dcngettext@plt+0x4a24>
   15bb0:	ldrb	r6, [r2, #1]!
   15bb4:	cmp	r6, #0
   15bb8:	beq	15c78 <dcngettext@plt+0x49ac>
   15bbc:	add	r3, r3, #1
   15bc0:	add	r1, r9, r3
   15bc4:	cmp	r1, r0
   15bc8:	bcc	15bb0 <dcngettext@plt+0x48e4>
   15bcc:	mov	ip, r3
   15bd0:	mov	r6, #0
   15bd4:	ldr	r2, [sp, #40]	; 0x28
   15bd8:	b	156fc <dcngettext@plt+0x4430>
   15bdc:	mov	r3, #1
   15be0:	mov	r2, #0
   15be4:	mov	r4, r2
   15be8:	str	r3, [sp, #36]	; 0x24
   15bec:	str	r3, [sp, #40]	; 0x28
   15bf0:	str	r3, [sp, #44]	; 0x2c
   15bf4:	str	r2, [sp, #48]	; 0x30
   15bf8:	str	r3, [sp, #56]	; 0x38
   15bfc:	movw	r3, #33632	; 0x8360
   15c00:	movt	r3, #1
   15c04:	str	r3, [sp, #60]	; 0x3c
   15c08:	str	r2, [sp, #68]	; 0x44
   15c0c:	str	r2, [sp, #72]	; 0x48
   15c10:	b	14670 <dcngettext@plt+0x33a4>
   15c14:	mov	r2, r3
   15c18:	ldr	r3, [sp, #60]	; 0x3c
   15c1c:	cmp	r3, #0
   15c20:	moveq	r2, #0
   15c24:	andne	r2, r2, #1
   15c28:	cmp	r2, #0
   15c2c:	beq	15c58 <dcngettext@plt+0x498c>
   15c30:	mov	r2, r3
   15c34:	ldrb	r3, [r3]
   15c38:	cmp	r3, #0
   15c3c:	beq	15c58 <dcngettext@plt+0x498c>
   15c40:	cmp	sl, r4
   15c44:	strbhi	r3, [fp, r4]
   15c48:	add	r4, r4, #1
   15c4c:	ldrb	r3, [r2, #1]!
   15c50:	cmp	r3, #0
   15c54:	bne	15c40 <dcngettext@plt+0x4974>
   15c58:	cmp	sl, r4
   15c5c:	movhi	r3, #0
   15c60:	strbhi	r3, [fp, r4]
   15c64:	b	14e78 <dcngettext@plt+0x3bac>
   15c68:	str	fp, [sp, #152]	; 0x98
   15c6c:	mov	fp, r8
   15c70:	ldr	r8, [sp, #152]	; 0x98
   15c74:	b	14e40 <dcngettext@plt+0x3b74>
   15c78:	mov	ip, r3
   15c7c:	ldr	r2, [sp, #40]	; 0x28
   15c80:	b	156fc <dcngettext@plt+0x4430>
   15c84:	str	fp, [sp, #152]	; 0x98
   15c88:	mov	fp, r8
   15c8c:	ldr	r8, [sp, #152]	; 0x98
   15c90:	sub	r3, r8, #2
   15c94:	clz	r3, r3
   15c98:	lsr	r3, r3, #5
   15c9c:	str	r3, [sp, #40]	; 0x28
   15ca0:	b	14e34 <dcngettext@plt+0x3b68>
   15ca4:	mov	ip, #5
   15ca8:	ldr	r3, [sp, #28]
   15cac:	str	ip, [sp]
   15cb0:	ldr	r2, [sp, #156]	; 0x9c
   15cb4:	ldr	ip, [sp, #164]	; 0xa4
   15cb8:	ldr	r0, [sp, #160]	; 0xa0
   15cbc:	str	r2, [sp, #4]
   15cc0:	ldr	r2, [sp, #32]
   15cc4:	ldr	r1, [sp, #72]	; 0x48
   15cc8:	str	ip, [sp, #12]
   15ccc:	ldr	ip, [sp, #168]	; 0xa8
   15cd0:	str	r0, [sp, #8]
   15cd4:	mov	r0, fp
   15cd8:	str	ip, [sp, #16]
   15cdc:	bl	14588 <dcngettext@plt+0x32bc>
   15ce0:	mov	r4, r0
   15ce4:	b	14e78 <dcngettext@plt+0x3bac>
   15ce8:	mov	r8, #2
   15cec:	b	14e34 <dcngettext@plt+0x3b68>
   15cf0:	ldr	r2, [sp, #40]	; 0x28
   15cf4:	b	156fc <dcngettext@plt+0x4430>
   15cf8:	mov	r3, #0
   15cfc:	mov	r2, #1
   15d00:	mov	r4, r3
   15d04:	strd	r2, [sp, #36]	; 0x24
   15d08:	strd	r2, [sp, #44]	; 0x2c
   15d0c:	str	r2, [sp, #56]	; 0x38
   15d10:	str	r3, [sp, #68]	; 0x44
   15d14:	str	r3, [sp, #72]	; 0x48
   15d18:	movw	r3, #33652	; 0x8374
   15d1c:	movt	r3, #1
   15d20:	str	r3, [sp, #60]	; 0x3c
   15d24:	b	14670 <dcngettext@plt+0x33a4>
   15d28:	mov	r3, #0
   15d2c:	mov	r1, #1
   15d30:	mov	r2, r3
   15d34:	str	r1, [sp, #36]	; 0x24
   15d38:	str	r3, [sp, #48]	; 0x30
   15d3c:	str	sl, [sp, #72]	; 0x48
   15d40:	b	14c78 <dcngettext@plt+0x39ac>
   15d44:	bl	112b4 <abort@plt>
   15d48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15d4c:	mov	r4, r0
   15d50:	mov	r5, r3
   15d54:	strd	r6, [sp, #8]
   15d58:	movw	r7, #37176	; 0x9138
   15d5c:	movt	r7, #2
   15d60:	strd	r8, [sp, #16]
   15d64:	strd	sl, [sp, #24]
   15d68:	mov	sl, r1
   15d6c:	mov	fp, r2
   15d70:	str	lr, [sp, #32]
   15d74:	sub	sp, sp, #60	; 0x3c
   15d78:	bl	11194 <__errno_location@plt>
   15d7c:	mov	r8, r0
   15d80:	cmn	r4, #-2147483647	; 0x80000001
   15d84:	ldr	r6, [r7]
   15d88:	movne	r0, #0
   15d8c:	moveq	r0, #1
   15d90:	ldr	r3, [r8]
   15d94:	orrs	r0, r0, r4, lsr #31
   15d98:	str	r3, [sp, #28]
   15d9c:	bne	15f2c <dcngettext@plt+0x4c60>
   15da0:	ldr	r3, [r7, #4]
   15da4:	cmp	r3, r4
   15da8:	bgt	15e08 <dcngettext@plt+0x4b3c>
   15dac:	add	r1, r7, #8
   15db0:	sub	r2, r4, r3
   15db4:	str	r3, [sp, #52]	; 0x34
   15db8:	cmp	r6, r1
   15dbc:	add	r2, r2, #1
   15dc0:	beq	15f04 <dcngettext@plt+0x4c38>
   15dc4:	mov	r1, #8
   15dc8:	mov	r0, r6
   15dcc:	mvn	r3, #-2147483648	; 0x80000000
   15dd0:	str	r1, [sp]
   15dd4:	add	r1, sp, #52	; 0x34
   15dd8:	bl	1748c <dcngettext@plt+0x61c0>
   15ddc:	mov	r6, r0
   15de0:	str	r0, [r7]
   15de4:	ldr	r0, [r7, #4]
   15de8:	mov	r1, #0
   15dec:	ldr	r2, [sp, #52]	; 0x34
   15df0:	sub	r2, r2, r0
   15df4:	add	r0, r6, r0, lsl #3
   15df8:	lsl	r2, r2, #3
   15dfc:	bl	111ac <memset@plt>
   15e00:	ldr	r3, [sp, #52]	; 0x34
   15e04:	str	r3, [r7, #4]
   15e08:	ldr	r1, [r5, #4]
   15e0c:	add	r0, r6, r4, lsl #3
   15e10:	add	ip, r5, #8
   15e14:	mov	r3, fp
   15e18:	mov	r2, sl
   15e1c:	ldr	r7, [r0, #4]
   15e20:	str	r0, [sp, #36]	; 0x24
   15e24:	str	ip, [sp, #40]	; 0x28
   15e28:	orr	r0, r1, #1
   15e2c:	ldr	r9, [r6, r4, lsl #3]
   15e30:	str	ip, [sp, #8]
   15e34:	ldr	lr, [r5, #44]	; 0x2c
   15e38:	str	r0, [sp, #4]
   15e3c:	ldr	ip, [r5]
   15e40:	mov	r1, r9
   15e44:	str	ip, [sp, #32]
   15e48:	ldr	ip, [r5, #40]	; 0x28
   15e4c:	str	ip, [sp, #12]
   15e50:	ldr	ip, [sp, #32]
   15e54:	str	lr, [sp, #16]
   15e58:	str	r0, [sp, #44]	; 0x2c
   15e5c:	mov	r0, r7
   15e60:	str	ip, [sp]
   15e64:	bl	14588 <dcngettext@plt+0x32bc>
   15e68:	cmp	r9, r0
   15e6c:	bhi	15edc <dcngettext@plt+0x4c10>
   15e70:	add	r9, r0, #1
   15e74:	movw	r3, #37288	; 0x91a8
   15e78:	movt	r3, #2
   15e7c:	cmp	r7, r3
   15e80:	str	r9, [r6, r4, lsl #3]
   15e84:	beq	15e90 <dcngettext@plt+0x4bc4>
   15e88:	mov	r0, r7
   15e8c:	bl	178e0 <dcngettext@plt+0x6614>
   15e90:	mov	r0, r9
   15e94:	bl	172dc <dcngettext@plt+0x6010>
   15e98:	ldr	ip, [r5]
   15e9c:	mov	r3, fp
   15ea0:	mov	r2, sl
   15ea4:	mov	r1, r9
   15ea8:	mov	r7, r0
   15eac:	ldr	lr, [sp, #36]	; 0x24
   15eb0:	ldr	r4, [r5, #40]	; 0x28
   15eb4:	str	r0, [lr, #4]
   15eb8:	ldr	lr, [r5, #44]	; 0x2c
   15ebc:	str	ip, [sp]
   15ec0:	ldr	ip, [sp, #44]	; 0x2c
   15ec4:	str	ip, [sp, #4]
   15ec8:	ldr	ip, [sp, #40]	; 0x28
   15ecc:	str	r4, [sp, #12]
   15ed0:	str	lr, [sp, #16]
   15ed4:	str	ip, [sp, #8]
   15ed8:	bl	14588 <dcngettext@plt+0x32bc>
   15edc:	ldr	r3, [sp, #28]
   15ee0:	mov	r0, r7
   15ee4:	str	r3, [r8]
   15ee8:	add	sp, sp, #60	; 0x3c
   15eec:	ldrd	r4, [sp]
   15ef0:	ldrd	r6, [sp, #8]
   15ef4:	ldrd	r8, [sp, #16]
   15ef8:	ldrd	sl, [sp, #24]
   15efc:	add	sp, sp, #32
   15f00:	pop	{pc}		; (ldr pc, [sp], #4)
   15f04:	mov	r1, #8
   15f08:	mvn	r3, #-2147483648	; 0x80000000
   15f0c:	str	r1, [sp]
   15f10:	add	r1, sp, #52	; 0x34
   15f14:	bl	1748c <dcngettext@plt+0x61c0>
   15f18:	ldrd	r2, [r7, #8]
   15f1c:	mov	r6, r0
   15f20:	str	r0, [r7]
   15f24:	strd	r2, [r0]
   15f28:	b	15de4 <dcngettext@plt+0x4b18>
   15f2c:	bl	112b4 <abort@plt>
   15f30:	strd	r4, [sp, #-16]!
   15f34:	mov	r5, r0
   15f38:	str	r6, [sp, #8]
   15f3c:	str	lr, [sp, #12]
   15f40:	bl	11194 <__errno_location@plt>
   15f44:	mov	r4, r0
   15f48:	cmp	r5, #0
   15f4c:	ldr	r0, [pc, #32]	; 15f74 <dcngettext@plt+0x4ca8>
   15f50:	mov	r1, #48	; 0x30
   15f54:	movne	r0, r5
   15f58:	ldr	r6, [r4]
   15f5c:	bl	17604 <dcngettext@plt+0x6338>
   15f60:	str	r6, [r4]
   15f64:	ldrd	r4, [sp]
   15f68:	ldr	r6, [sp, #8]
   15f6c:	add	sp, sp, #12
   15f70:	pop	{pc}		; (ldr pc, [sp], #4)
   15f74:	andeq	r9, r2, r8, lsr #5
   15f78:	ldr	r3, [pc, #12]	; 15f8c <dcngettext@plt+0x4cc0>
   15f7c:	cmp	r0, #0
   15f80:	moveq	r0, r3
   15f84:	ldr	r0, [r0]
   15f88:	bx	lr
   15f8c:	andeq	r9, r2, r8, lsr #5
   15f90:	ldr	r3, [pc, #12]	; 15fa4 <dcngettext@plt+0x4cd8>
   15f94:	cmp	r0, #0
   15f98:	moveq	r0, r3
   15f9c:	str	r1, [r0]
   15fa0:	bx	lr
   15fa4:	andeq	r9, r2, r8, lsr #5
   15fa8:	ldr	r3, [pc, #52]	; 15fe4 <dcngettext@plt+0x4d18>
   15fac:	cmp	r0, #0
   15fb0:	push	{lr}		; (str lr, [sp, #-4]!)
   15fb4:	lsr	lr, r1, #5
   15fb8:	and	r1, r1, #31
   15fbc:	moveq	r0, r3
   15fc0:	add	r3, r0, #8
   15fc4:	ldr	ip, [r3, lr, lsl #2]
   15fc8:	lsr	r0, ip, r1
   15fcc:	eor	r2, r2, r0
   15fd0:	and	r0, r0, #1
   15fd4:	and	r2, r2, #1
   15fd8:	eor	r1, ip, r2, lsl r1
   15fdc:	str	r1, [r3, lr, lsl #2]
   15fe0:	pop	{pc}		; (ldr pc, [sp], #4)
   15fe4:	andeq	r9, r2, r8, lsr #5
   15fe8:	ldr	r3, [pc, #16]	; 16000 <dcngettext@plt+0x4d34>
   15fec:	cmp	r0, #0
   15ff0:	movne	r3, r0
   15ff4:	ldr	r0, [r3, #4]
   15ff8:	str	r1, [r3, #4]
   15ffc:	bx	lr
   16000:	andeq	r9, r2, r8, lsr #5
   16004:	ldr	r3, [pc, #48]	; 1603c <dcngettext@plt+0x4d70>
   16008:	cmp	r0, #0
   1600c:	mov	ip, #10
   16010:	moveq	r0, r3
   16014:	cmp	r2, #0
   16018:	cmpne	r1, #0
   1601c:	str	ip, [r0]
   16020:	beq	16030 <dcngettext@plt+0x4d64>
   16024:	str	r1, [r0, #40]	; 0x28
   16028:	str	r2, [r0, #44]	; 0x2c
   1602c:	bx	lr
   16030:	str	r4, [sp, #-8]!
   16034:	str	lr, [sp, #4]
   16038:	bl	112b4 <abort@plt>
   1603c:	andeq	r9, r2, r8, lsr #5
   16040:	strd	r4, [sp, #-28]!	; 0xffffffe4
   16044:	strd	r6, [sp, #8]
   16048:	mov	r7, r0
   1604c:	mov	r6, r1
   16050:	strd	r8, [sp, #16]
   16054:	mov	r8, r2
   16058:	mov	r9, r3
   1605c:	str	lr, [sp, #24]
   16060:	sub	sp, sp, #28
   16064:	ldr	r4, [sp, #56]	; 0x38
   16068:	ldr	ip, [pc, #104]	; 160d8 <dcngettext@plt+0x4e0c>
   1606c:	cmp	r4, #0
   16070:	moveq	r4, ip
   16074:	bl	11194 <__errno_location@plt>
   16078:	ldr	ip, [r4, #44]	; 0x2c
   1607c:	mov	r5, r0
   16080:	mov	r1, r6
   16084:	add	lr, r4, #8
   16088:	mov	r3, r9
   1608c:	ldr	r6, [r5]
   16090:	mov	r2, r8
   16094:	mov	r0, r7
   16098:	str	ip, [sp, #16]
   1609c:	ldr	ip, [r4, #40]	; 0x28
   160a0:	str	lr, [sp, #8]
   160a4:	str	ip, [sp, #12]
   160a8:	ldr	ip, [r4, #4]
   160ac:	str	ip, [sp, #4]
   160b0:	ldr	ip, [r4]
   160b4:	str	ip, [sp]
   160b8:	bl	14588 <dcngettext@plt+0x32bc>
   160bc:	str	r6, [r5]
   160c0:	add	sp, sp, #28
   160c4:	ldrd	r4, [sp]
   160c8:	ldrd	r6, [sp, #8]
   160cc:	ldrd	r8, [sp, #16]
   160d0:	add	sp, sp, #24
   160d4:	pop	{pc}		; (ldr pc, [sp], #4)
   160d8:	andeq	r9, r2, r8, lsr #5
   160dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   160e0:	cmp	r3, #0
   160e4:	ldr	r4, [pc, #220]	; 161c8 <dcngettext@plt+0x4efc>
   160e8:	movne	r4, r3
   160ec:	strd	r6, [sp, #8]
   160f0:	mov	r6, r2
   160f4:	strd	r8, [sp, #16]
   160f8:	mov	r9, r0
   160fc:	strd	sl, [sp, #24]
   16100:	mov	sl, r1
   16104:	str	lr, [sp, #32]
   16108:	sub	sp, sp, #44	; 0x2c
   1610c:	bl	11194 <__errno_location@plt>
   16110:	ldr	r5, [r4, #4]
   16114:	mov	r7, r0
   16118:	mov	r1, #0
   1611c:	add	r8, r4, #8
   16120:	mov	r3, sl
   16124:	ldr	ip, [r4, #44]	; 0x2c
   16128:	mov	r2, r9
   1612c:	mov	r0, r1
   16130:	ldr	lr, [r7]
   16134:	cmp	r6, r1
   16138:	orreq	r5, r5, #1
   1613c:	str	ip, [sp, #16]
   16140:	ldr	ip, [r4, #40]	; 0x28
   16144:	stmib	sp, {r5, r8, ip}
   16148:	ldr	ip, [r4]
   1614c:	str	lr, [sp, #28]
   16150:	str	ip, [sp]
   16154:	bl	14588 <dcngettext@plt+0x32bc>
   16158:	add	r1, r0, #1
   1615c:	mov	fp, r0
   16160:	mov	r0, r1
   16164:	str	r1, [sp, #36]	; 0x24
   16168:	bl	172dc <dcngettext@plt+0x6010>
   1616c:	ldr	ip, [r4, #44]	; 0x2c
   16170:	mov	r3, sl
   16174:	mov	r2, r9
   16178:	ldr	r1, [sp, #36]	; 0x24
   1617c:	str	ip, [sp, #16]
   16180:	ldr	ip, [r4, #40]	; 0x28
   16184:	str	r0, [sp, #32]
   16188:	stmib	sp, {r5, r8, ip}
   1618c:	ldr	ip, [r4]
   16190:	str	ip, [sp]
   16194:	bl	14588 <dcngettext@plt+0x32bc>
   16198:	ldr	lr, [sp, #28]
   1619c:	cmp	r6, #0
   161a0:	ldr	r0, [sp, #32]
   161a4:	str	lr, [r7]
   161a8:	strne	fp, [r6]
   161ac:	add	sp, sp, #44	; 0x2c
   161b0:	ldrd	r4, [sp]
   161b4:	ldrd	r6, [sp, #8]
   161b8:	ldrd	r8, [sp, #16]
   161bc:	ldrd	sl, [sp, #24]
   161c0:	add	sp, sp, #32
   161c4:	pop	{pc}		; (ldr pc, [sp], #4)
   161c8:	andeq	r9, r2, r8, lsr #5
   161cc:	mov	r3, r2
   161d0:	mov	r2, #0
   161d4:	b	160dc <dcngettext@plt+0x4e10>
   161d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   161dc:	movw	r5, #37176	; 0x9138
   161e0:	movt	r5, #2
   161e4:	ldr	r3, [r5, #4]
   161e8:	strd	r6, [sp, #8]
   161ec:	str	r8, [sp, #16]
   161f0:	str	lr, [sp, #20]
   161f4:	ldr	r7, [r5]
   161f8:	cmp	r3, #1
   161fc:	ble	16220 <dcngettext@plt+0x4f54>
   16200:	mov	r4, #1
   16204:	add	r6, r7, #4
   16208:	ldr	r0, [r6, r4, lsl #3]
   1620c:	add	r4, r4, #1
   16210:	bl	178e0 <dcngettext@plt+0x6614>
   16214:	ldr	r3, [r5, #4]
   16218:	cmp	r3, r4
   1621c:	bgt	16208 <dcngettext@plt+0x4f3c>
   16220:	ldr	r0, [r7, #4]
   16224:	movw	r4, #37288	; 0x91a8
   16228:	movt	r4, #2
   1622c:	cmp	r0, r4
   16230:	beq	16244 <dcngettext@plt+0x4f78>
   16234:	bl	178e0 <dcngettext@plt+0x6614>
   16238:	mov	r3, #256	; 0x100
   1623c:	str	r3, [r5, #8]
   16240:	str	r4, [r5, #12]
   16244:	ldr	r4, [pc, #44]	; 16278 <dcngettext@plt+0x4fac>
   16248:	cmp	r7, r4
   1624c:	beq	1625c <dcngettext@plt+0x4f90>
   16250:	mov	r0, r7
   16254:	bl	178e0 <dcngettext@plt+0x6614>
   16258:	str	r4, [r5]
   1625c:	mov	r3, #1
   16260:	ldrd	r6, [sp, #8]
   16264:	str	r3, [r5, #4]
   16268:	ldrd	r4, [sp]
   1626c:	ldr	r8, [sp, #16]
   16270:	add	sp, sp, #20
   16274:	pop	{pc}		; (ldr pc, [sp], #4)
   16278:	andeq	r9, r2, r0, asr #2
   1627c:	ldr	r3, [pc, #4]	; 16288 <dcngettext@plt+0x4fbc>
   16280:	mvn	r2, #0
   16284:	b	15d48 <dcngettext@plt+0x4a7c>
   16288:	andeq	r9, r2, r8, lsr #5
   1628c:	ldr	r3, [pc]	; 16294 <dcngettext@plt+0x4fc8>
   16290:	b	15d48 <dcngettext@plt+0x4a7c>
   16294:	andeq	r9, r2, r8, lsr #5
   16298:	mov	r1, r0
   1629c:	ldr	r3, [pc, #8]	; 162ac <dcngettext@plt+0x4fe0>
   162a0:	mvn	r2, #0
   162a4:	mov	r0, #0
   162a8:	b	15d48 <dcngettext@plt+0x4a7c>
   162ac:	andeq	r9, r2, r8, lsr #5
   162b0:	mov	r2, r1
   162b4:	ldr	r3, [pc, #8]	; 162c4 <dcngettext@plt+0x4ff8>
   162b8:	mov	r1, r0
   162bc:	mov	r0, #0
   162c0:	b	15d48 <dcngettext@plt+0x4a7c>
   162c4:	andeq	r9, r2, r8, lsr #5
   162c8:	strd	r4, [sp, #-12]!
   162cc:	mov	r5, r2
   162d0:	mov	r4, r0
   162d4:	str	lr, [sp, #8]
   162d8:	sub	sp, sp, #52	; 0x34
   162dc:	mov	r0, sp
   162e0:	bl	143e4 <dcngettext@plt+0x3118>
   162e4:	mov	r3, sp
   162e8:	mov	r1, r5
   162ec:	mov	r0, r4
   162f0:	mvn	r2, #0
   162f4:	bl	15d48 <dcngettext@plt+0x4a7c>
   162f8:	add	sp, sp, #52	; 0x34
   162fc:	ldrd	r4, [sp]
   16300:	add	sp, sp, #8
   16304:	pop	{pc}		; (ldr pc, [sp], #4)
   16308:	strd	r4, [sp, #-16]!
   1630c:	mov	r5, r2
   16310:	mov	r4, r0
   16314:	str	r6, [sp, #8]
   16318:	mov	r6, r3
   1631c:	str	lr, [sp, #12]
   16320:	sub	sp, sp, #48	; 0x30
   16324:	mov	r0, sp
   16328:	bl	143e4 <dcngettext@plt+0x3118>
   1632c:	mov	r3, sp
   16330:	mov	r2, r6
   16334:	mov	r1, r5
   16338:	mov	r0, r4
   1633c:	bl	15d48 <dcngettext@plt+0x4a7c>
   16340:	add	sp, sp, #48	; 0x30
   16344:	ldrd	r4, [sp]
   16348:	ldr	r6, [sp, #8]
   1634c:	add	sp, sp, #12
   16350:	pop	{pc}		; (ldr pc, [sp], #4)
   16354:	mov	r2, r1
   16358:	mov	r1, r0
   1635c:	mov	r0, #0
   16360:	b	162c8 <dcngettext@plt+0x4ffc>
   16364:	mov	r3, r2
   16368:	mov	r2, r1
   1636c:	mov	r1, r0
   16370:	mov	r0, #0
   16374:	b	16308 <dcngettext@plt+0x503c>
   16378:	ldr	ip, [pc, #140]	; 1640c <dcngettext@plt+0x5140>
   1637c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   16380:	ldrd	r4, [ip]
   16384:	strd	r6, [sp, #8]
   16388:	ldrd	r6, [ip, #8]
   1638c:	strd	r8, [sp, #16]
   16390:	lsr	r9, r2, #5
   16394:	str	lr, [sp, #24]
   16398:	sub	sp, sp, #52	; 0x34
   1639c:	and	lr, r2, #31
   163a0:	add	r8, sp, #8
   163a4:	mov	r2, r1
   163a8:	strd	r4, [sp]
   163ac:	mov	r1, r0
   163b0:	mov	r3, sp
   163b4:	strd	r6, [sp, #8]
   163b8:	mov	r0, #0
   163bc:	ldrd	r4, [ip, #16]
   163c0:	ldrd	r6, [ip, #24]
   163c4:	strd	r4, [sp, #16]
   163c8:	ldrd	r4, [ip, #32]
   163cc:	strd	r6, [sp, #24]
   163d0:	ldrd	r6, [ip, #40]	; 0x28
   163d4:	strd	r4, [sp, #32]
   163d8:	strd	r6, [sp, #40]	; 0x28
   163dc:	ldr	ip, [r8, r9, lsl #2]
   163e0:	mvn	r4, ip, lsr lr
   163e4:	and	r4, r4, #1
   163e8:	eor	lr, ip, r4, lsl lr
   163ec:	str	lr, [r8, r9, lsl #2]
   163f0:	bl	15d48 <dcngettext@plt+0x4a7c>
   163f4:	add	sp, sp, #52	; 0x34
   163f8:	ldrd	r4, [sp]
   163fc:	ldrd	r6, [sp, #8]
   16400:	ldrd	r8, [sp, #16]
   16404:	add	sp, sp, #24
   16408:	pop	{pc}		; (ldr pc, [sp], #4)
   1640c:	andeq	r9, r2, r8, lsr #5
   16410:	mov	r2, r1
   16414:	mvn	r1, #0
   16418:	b	16378 <dcngettext@plt+0x50ac>
   1641c:	mov	r2, #58	; 0x3a
   16420:	mvn	r1, #0
   16424:	b	16378 <dcngettext@plt+0x50ac>
   16428:	mov	r2, #58	; 0x3a
   1642c:	b	16378 <dcngettext@plt+0x50ac>
   16430:	strd	r4, [sp, #-20]!	; 0xffffffec
   16434:	strd	r6, [sp, #8]
   16438:	mov	r6, r0
   1643c:	mov	r7, r2
   16440:	str	lr, [sp, #16]
   16444:	sub	sp, sp, #100	; 0x64
   16448:	mov	r0, sp
   1644c:	bl	143e4 <dcngettext@plt+0x3118>
   16450:	ldrd	r4, [sp, #8]
   16454:	mov	r1, r7
   16458:	mov	r0, r6
   1645c:	add	r3, sp, #48	; 0x30
   16460:	mvn	r2, #0
   16464:	ldrd	r6, [sp]
   16468:	strd	r4, [sp, #56]	; 0x38
   1646c:	ldrd	r4, [sp, #16]
   16470:	strd	r6, [sp, #48]	; 0x30
   16474:	ldrd	r6, [sp, #32]
   16478:	ldr	lr, [sp, #60]	; 0x3c
   1647c:	strd	r4, [sp, #64]	; 0x40
   16480:	ldrd	r4, [sp, #24]
   16484:	mvn	ip, lr
   16488:	and	ip, ip, #67108864	; 0x4000000
   1648c:	strd	r4, [sp, #72]	; 0x48
   16490:	eor	ip, ip, lr
   16494:	ldrd	r4, [sp, #40]	; 0x28
   16498:	str	ip, [sp, #60]	; 0x3c
   1649c:	strd	r6, [sp, #80]	; 0x50
   164a0:	strd	r4, [sp, #88]	; 0x58
   164a4:	bl	15d48 <dcngettext@plt+0x4a7c>
   164a8:	add	sp, sp, #100	; 0x64
   164ac:	ldrd	r4, [sp]
   164b0:	ldrd	r6, [sp, #8]
   164b4:	add	sp, sp, #16
   164b8:	pop	{pc}		; (ldr pc, [sp], #4)
   164bc:	ldr	ip, [pc, #156]	; 16560 <dcngettext@plt+0x5294>
   164c0:	cmp	r2, #0
   164c4:	cmpne	r1, #0
   164c8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   164cc:	strd	r6, [sp, #8]
   164d0:	mov	r6, r2
   164d4:	str	r8, [sp, #16]
   164d8:	mov	r8, r3
   164dc:	strd	sl, [sp, #20]
   164e0:	ldrd	r4, [ip]
   164e4:	str	lr, [sp, #28]
   164e8:	sub	sp, sp, #48	; 0x30
   164ec:	mov	lr, #10
   164f0:	ldrd	r2, [ip, #8]
   164f4:	ldrd	sl, [ip, #16]
   164f8:	strd	r4, [sp]
   164fc:	ldrd	r4, [ip, #32]
   16500:	str	lr, [sp]
   16504:	strd	r2, [sp, #8]
   16508:	strd	sl, [sp, #16]
   1650c:	ldrd	r2, [ip, #24]
   16510:	ldrd	sl, [ip, #40]	; 0x28
   16514:	strd	r2, [sp, #24]
   16518:	strd	r4, [sp, #32]
   1651c:	strd	sl, [sp, #40]	; 0x28
   16520:	beq	1655c <dcngettext@plt+0x5290>
   16524:	ldr	r2, [sp, #80]	; 0x50
   16528:	mov	r7, r1
   1652c:	mov	r3, sp
   16530:	mov	r1, r8
   16534:	str	r7, [sp, #40]	; 0x28
   16538:	str	r6, [sp, #44]	; 0x2c
   1653c:	bl	15d48 <dcngettext@plt+0x4a7c>
   16540:	add	sp, sp, #48	; 0x30
   16544:	ldrd	r4, [sp]
   16548:	ldrd	r6, [sp, #8]
   1654c:	ldr	r8, [sp, #16]
   16550:	ldrd	sl, [sp, #20]
   16554:	add	sp, sp, #28
   16558:	pop	{pc}		; (ldr pc, [sp], #4)
   1655c:	bl	112b4 <abort@plt>
   16560:	andeq	r9, r2, r8, lsr #5
   16564:	mvn	ip, #0
   16568:	push	{lr}		; (str lr, [sp, #-4]!)
   1656c:	sub	sp, sp, #12
   16570:	str	ip, [sp]
   16574:	bl	164bc <dcngettext@plt+0x51f0>
   16578:	add	sp, sp, #12
   1657c:	pop	{pc}		; (ldr pc, [sp], #4)
   16580:	mvn	ip, #0
   16584:	push	{lr}		; (str lr, [sp, #-4]!)
   16588:	sub	sp, sp, #12
   1658c:	mov	r3, r2
   16590:	mov	r2, r1
   16594:	mov	r1, r0
   16598:	mov	r0, #0
   1659c:	str	ip, [sp]
   165a0:	bl	164bc <dcngettext@plt+0x51f0>
   165a4:	add	sp, sp, #12
   165a8:	pop	{pc}		; (ldr pc, [sp], #4)
   165ac:	push	{lr}		; (str lr, [sp, #-4]!)
   165b0:	sub	sp, sp, #12
   165b4:	str	r3, [sp]
   165b8:	mov	r3, r2
   165bc:	mov	r2, r1
   165c0:	mov	r1, r0
   165c4:	mov	r0, #0
   165c8:	bl	164bc <dcngettext@plt+0x51f0>
   165cc:	add	sp, sp, #12
   165d0:	pop	{pc}		; (ldr pc, [sp], #4)
   165d4:	ldr	r3, [pc]	; 165dc <dcngettext@plt+0x5310>
   165d8:	b	15d48 <dcngettext@plt+0x4a7c>
   165dc:	andeq	r9, r2, r8, asr #2
   165e0:	mov	r2, r1
   165e4:	ldr	r3, [pc, #8]	; 165f4 <dcngettext@plt+0x5328>
   165e8:	mov	r1, r0
   165ec:	mov	r0, #0
   165f0:	b	15d48 <dcngettext@plt+0x4a7c>
   165f4:	andeq	r9, r2, r8, asr #2
   165f8:	ldr	r3, [pc, #4]	; 16604 <dcngettext@plt+0x5338>
   165fc:	mvn	r2, #0
   16600:	b	15d48 <dcngettext@plt+0x4a7c>
   16604:	andeq	r9, r2, r8, asr #2
   16608:	mov	r1, r0
   1660c:	ldr	r3, [pc, #8]	; 1661c <dcngettext@plt+0x5350>
   16610:	mvn	r2, #0
   16614:	mov	r0, #0
   16618:	b	15d48 <dcngettext@plt+0x4a7c>
   1661c:	andeq	r9, r2, r8, asr #2
   16620:	strd	r4, [sp, #-16]!
   16624:	mov	r5, r0
   16628:	mov	r0, #33	; 0x21
   1662c:	str	r6, [sp, #8]
   16630:	str	lr, [sp, #12]
   16634:	bl	17294 <dcngettext@plt+0x5fc8>
   16638:	mov	r4, r0
   1663c:	add	r1, r5, #44	; 0x2c
   16640:	mov	r2, #32
   16644:	mov	r5, #0
   16648:	bl	111b8 <strncpy@plt>
   1664c:	mov	r0, r4
   16650:	strb	r5, [r4, #32]
   16654:	bl	1117c <strlen@plt>
   16658:	add	r0, r4, r0
   1665c:	cmp	r4, r0
   16660:	bcs	16670 <dcngettext@plt+0x53a4>
   16664:	ldrb	r3, [r0, #-1]
   16668:	cmp	r3, #32
   1666c:	beq	16684 <dcngettext@plt+0x53b8>
   16670:	mov	r0, r4
   16674:	ldrd	r4, [sp]
   16678:	ldr	r6, [sp, #8]
   1667c:	add	sp, sp, #12
   16680:	pop	{pc}		; (ldr pc, [sp], #4)
   16684:	sub	r0, r0, #1
   16688:	cmp	r0, r4
   1668c:	strb	r5, [r0]
   16690:	beq	16670 <dcngettext@plt+0x53a4>
   16694:	ldrb	r3, [r0, #-1]!
   16698:	cmp	r3, #32
   1669c:	bne	16670 <dcngettext@plt+0x53a4>
   166a0:	b	16688 <dcngettext@plt+0x53bc>
   166a4:	mov	ip, #0
   166a8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   166ac:	strd	r6, [sp, #8]
   166b0:	mov	r5, ip
   166b4:	and	r6, r3, #2
   166b8:	strd	r8, [sp, #16]
   166bc:	and	r7, r3, #1
   166c0:	mov	r9, r2
   166c4:	str	sl, [sp, #24]
   166c8:	mov	r8, ip
   166cc:	mov	sl, r1
   166d0:	str	lr, [sp, #28]
   166d4:	sub	sp, sp, #16
   166d8:	str	ip, [sp, #12]
   166dc:	bl	10fe4 <utmpxname@plt>
   166e0:	bl	11050 <setutxent@plt>
   166e4:	bl	112c0 <getutxent@plt>
   166e8:	subs	r4, r0, #0
   166ec:	beq	16740 <dcngettext@plt+0x5474>
   166f0:	ldrb	r3, [r4, #44]	; 0x2c
   166f4:	cmp	r3, #0
   166f8:	beq	16708 <dcngettext@plt+0x543c>
   166fc:	ldrsh	r3, [r4]
   16700:	cmp	r3, #7
   16704:	beq	1676c <dcngettext@plt+0x54a0>
   16708:	cmp	r6, #0
   1670c:	bne	166e4 <dcngettext@plt+0x5418>
   16710:	ldr	r2, [sp, #12]
   16714:	cmp	r2, r5
   16718:	beq	167ac <dcngettext@plt+0x54e0>
   1671c:	add	r0, r5, r5, lsl #1
   16720:	mov	r1, r4
   16724:	mov	r2, #384	; 0x180
   16728:	add	r5, r5, #1
   1672c:	add	r0, r8, r0, lsl #7
   16730:	bl	11008 <memcpy@plt>
   16734:	bl	112c0 <getutxent@plt>
   16738:	subs	r4, r0, #0
   1673c:	bne	166f0 <dcngettext@plt+0x5424>
   16740:	bl	11218 <endutxent@plt>
   16744:	mov	r0, r4
   16748:	str	r5, [sl]
   1674c:	str	r8, [r9]
   16750:	add	sp, sp, #16
   16754:	ldrd	r4, [sp]
   16758:	ldrd	r6, [sp, #8]
   1675c:	ldrd	r8, [sp, #16]
   16760:	ldr	sl, [sp, #24]
   16764:	add	sp, sp, #28
   16768:	pop	{pc}		; (ldr pc, [sp], #4)
   1676c:	cmp	r7, #0
   16770:	beq	16710 <dcngettext@plt+0x5444>
   16774:	ldr	r0, [r4, #4]
   16778:	cmp	r0, #0
   1677c:	ble	16710 <dcngettext@plt+0x5444>
   16780:	mov	r1, #0
   16784:	bl	11158 <kill@plt>
   16788:	cmp	r0, #0
   1678c:	bge	16710 <dcngettext@plt+0x5444>
   16790:	bl	11194 <__errno_location@plt>
   16794:	ldr	r3, [r0]
   16798:	cmp	r3, #3
   1679c:	beq	166e4 <dcngettext@plt+0x5418>
   167a0:	ldr	r2, [sp, #12]
   167a4:	cmp	r2, r5
   167a8:	bne	1671c <dcngettext@plt+0x5450>
   167ac:	mov	r1, #384	; 0x180
   167b0:	mov	r0, r8
   167b4:	mvn	r3, #0
   167b8:	mov	r2, #1
   167bc:	str	r1, [sp]
   167c0:	add	r1, sp, #12
   167c4:	bl	1748c <dcngettext@plt+0x61c0>
   167c8:	mov	r8, r0
   167cc:	b	1671c <dcngettext@plt+0x5450>
   167d0:	subs	r1, r0, #0
   167d4:	movw	r0, #33764	; 0x83e4
   167d8:	movt	r0, #1
   167dc:	beq	167e8 <dcngettext@plt+0x551c>
   167e0:	mov	r2, #1
   167e4:	b	11188 <setenv@plt>
   167e8:	b	1129c <unsetenv@plt>
   167ec:	cmp	r0, #0
   167f0:	bxeq	lr
   167f4:	str	r4, [sp, #-8]!
   167f8:	str	lr, [sp, #4]
   167fc:	ldr	r4, [r0]
   16800:	bl	178e0 <dcngettext@plt+0x6614>
   16804:	subs	r0, r4, #0
   16808:	bne	167fc <dcngettext@plt+0x5530>
   1680c:	ldr	r4, [sp]
   16810:	add	sp, sp, #4
   16814:	pop	{pc}		; (ldr pc, [sp], #4)
   16818:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1681c:	mov	r5, r0
   16820:	strd	r6, [sp, #8]
   16824:	str	r8, [sp, #16]
   16828:	str	lr, [sp, #20]
   1682c:	bl	11194 <__errno_location@plt>
   16830:	mov	r4, r0
   16834:	ldrb	r0, [r5, #4]
   16838:	ldr	r6, [r4]
   1683c:	cmp	r0, #0
   16840:	addne	r0, r5, #5
   16844:	bl	167d0 <dcngettext@plt+0x5504>
   16848:	cmp	r0, #0
   1684c:	beq	1687c <dcngettext@plt+0x55b0>
   16850:	ldr	r6, [r4]
   16854:	mov	r7, #0
   16858:	mov	r0, r5
   1685c:	bl	167ec <dcngettext@plt+0x5520>
   16860:	mov	r0, r7
   16864:	ldr	r8, [sp, #16]
   16868:	str	r6, [r4]
   1686c:	ldrd	r4, [sp]
   16870:	ldrd	r6, [sp, #8]
   16874:	add	sp, sp, #20
   16878:	pop	{pc}		; (ldr pc, [sp], #4)
   1687c:	mov	r7, #1
   16880:	bl	1108c <tzset@plt>
   16884:	b	16858 <dcngettext@plt+0x558c>
   16888:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1688c:	strd	r6, [sp, #8]
   16890:	subs	r6, r0, #0
   16894:	str	r8, [sp, #16]
   16898:	str	lr, [sp, #20]
   1689c:	beq	16908 <dcngettext@plt+0x563c>
   168a0:	bl	1117c <strlen@plt>
   168a4:	add	r5, r0, #1
   168a8:	cmp	r5, #58	; 0x3a
   168ac:	movcs	r0, r5
   168b0:	movcc	r0, #58	; 0x3a
   168b4:	add	r0, r0, #9
   168b8:	bic	r0, r0, #3
   168bc:	bl	177c4 <dcngettext@plt+0x64f8>
   168c0:	subs	r4, r0, #0
   168c4:	beq	168f0 <dcngettext@plt+0x5624>
   168c8:	mov	r7, #0
   168cc:	mov	ip, #1
   168d0:	add	r3, r4, #5
   168d4:	mov	r1, r6
   168d8:	mov	r0, r3
   168dc:	mov	r2, r5
   168e0:	str	r7, [r4]
   168e4:	strh	ip, [r4, #4]
   168e8:	bl	11008 <memcpy@plt>
   168ec:	strb	r7, [r0, r5]
   168f0:	mov	r0, r4
   168f4:	ldrd	r4, [sp]
   168f8:	ldrd	r6, [sp, #8]
   168fc:	ldr	r8, [sp, #16]
   16900:	add	sp, sp, #20
   16904:	pop	{pc}		; (ldr pc, [sp], #4)
   16908:	mov	r0, #64	; 0x40
   1690c:	bl	177c4 <dcngettext@plt+0x64f8>
   16910:	subs	r4, r0, #0
   16914:	strne	r6, [r4]
   16918:	strhne	r6, [r4, #4]
   1691c:	b	168f0 <dcngettext@plt+0x5624>
   16920:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16924:	strd	r6, [sp, #8]
   16928:	ldr	r6, [r1, #40]	; 0x28
   1692c:	str	r8, [sp, #16]
   16930:	str	lr, [sp, #20]
   16934:	cmp	r6, #0
   16938:	beq	16a14 <dcngettext@plt+0x5748>
   1693c:	cmp	r1, r6
   16940:	mov	r7, r1
   16944:	mov	r5, r0
   16948:	bhi	16958 <dcngettext@plt+0x568c>
   1694c:	add	r3, r1, #44	; 0x2c
   16950:	cmp	r6, r3
   16954:	bcc	16a14 <dcngettext@plt+0x5748>
   16958:	ldrb	r3, [r6]
   1695c:	cmp	r3, #0
   16960:	addne	r4, r5, #5
   16964:	beq	16a08 <dcngettext@plt+0x573c>
   16968:	mov	r1, r6
   1696c:	mov	r0, r4
   16970:	bl	10fc0 <strcmp@plt>
   16974:	cmp	r0, #0
   16978:	add	r2, r5, #5
   1697c:	mov	r0, r4
   16980:	beq	169ec <dcngettext@plt+0x5720>
   16984:	ldrb	r3, [r4]
   16988:	cmp	r3, #0
   1698c:	bne	169a4 <dcngettext@plt+0x56d8>
   16990:	cmp	r4, r2
   16994:	bne	16a1c <dcngettext@plt+0x5750>
   16998:	ldrb	r3, [r5, #4]
   1699c:	cmp	r3, #0
   169a0:	beq	16a1c <dcngettext@plt+0x5750>
   169a4:	bl	1117c <strlen@plt>
   169a8:	add	r0, r0, #1
   169ac:	ldrb	r3, [r4, r0]!
   169b0:	cmp	r3, #0
   169b4:	bne	16968 <dcngettext@plt+0x569c>
   169b8:	ldr	r3, [r5]
   169bc:	cmp	r3, #0
   169c0:	addne	r4, r3, #5
   169c4:	movne	r5, r3
   169c8:	b	16968 <dcngettext@plt+0x569c>
   169cc:	mov	r0, r6
   169d0:	bl	16888 <dcngettext@plt+0x55bc>
   169d4:	cmp	r0, #0
   169d8:	str	r0, [r5]
   169dc:	beq	169f4 <dcngettext@plt+0x5728>
   169e0:	mov	r3, #0
   169e4:	add	r4, r0, #5
   169e8:	strb	r3, [r0, #4]
   169ec:	mov	r0, #1
   169f0:	str	r4, [r7, #40]	; 0x28
   169f4:	ldrd	r4, [sp]
   169f8:	ldrd	r6, [sp, #8]
   169fc:	ldr	r8, [sp, #16]
   16a00:	add	sp, sp, #20
   16a04:	pop	{pc}		; (ldr pc, [sp], #4)
   16a08:	movw	r4, #32832	; 0x8040
   16a0c:	movt	r4, #1
   16a10:	b	169ec <dcngettext@plt+0x5720>
   16a14:	mov	r0, #1
   16a18:	b	169f4 <dcngettext@plt+0x5728>
   16a1c:	mov	r0, r6
   16a20:	bl	1117c <strlen@plt>
   16a24:	add	r3, r5, #64	; 0x40
   16a28:	add	r8, r0, #1
   16a2c:	sub	r3, r3, r4
   16a30:	cmp	r3, r8
   16a34:	ble	169cc <dcngettext@plt+0x5700>
   16a38:	mov	r1, r6
   16a3c:	mov	r2, r8
   16a40:	mov	r0, r4
   16a44:	bl	11008 <memcpy@plt>
   16a48:	mov	r3, #0
   16a4c:	strb	r3, [r4, r8]
   16a50:	b	169ec <dcngettext@plt+0x5720>
   16a54:	strd	r4, [sp, #-16]!
   16a58:	mov	r4, r0
   16a5c:	movw	r0, #33764	; 0x83e4
   16a60:	movt	r0, #1
   16a64:	str	r6, [sp, #8]
   16a68:	str	lr, [sp, #12]
   16a6c:	bl	110e0 <getenv@plt>
   16a70:	subs	r5, r0, #0
   16a74:	ldrb	r3, [r4, #4]
   16a78:	beq	16b00 <dcngettext@plt+0x5834>
   16a7c:	cmp	r3, #0
   16a80:	bne	16ad4 <dcngettext@plt+0x5808>
   16a84:	mov	r0, r5
   16a88:	bl	16888 <dcngettext@plt+0x55bc>
   16a8c:	subs	r5, r0, #0
   16a90:	beq	16aec <dcngettext@plt+0x5820>
   16a94:	ldrb	r0, [r4, #4]
   16a98:	cmp	r0, #0
   16a9c:	addne	r0, r4, #5
   16aa0:	bl	167d0 <dcngettext@plt+0x5504>
   16aa4:	cmp	r0, #0
   16aa8:	beq	16b0c <dcngettext@plt+0x5840>
   16aac:	bl	11194 <__errno_location@plt>
   16ab0:	cmp	r5, #1
   16ab4:	mov	r4, r0
   16ab8:	ldr	r6, [r0]
   16abc:	beq	16ac8 <dcngettext@plt+0x57fc>
   16ac0:	mov	r0, r5
   16ac4:	bl	167ec <dcngettext@plt+0x5520>
   16ac8:	mov	r5, #0
   16acc:	str	r6, [r4]
   16ad0:	b	16aec <dcngettext@plt+0x5820>
   16ad4:	mov	r1, r5
   16ad8:	add	r0, r4, #5
   16adc:	bl	10fc0 <strcmp@plt>
   16ae0:	cmp	r0, #0
   16ae4:	bne	16a84 <dcngettext@plt+0x57b8>
   16ae8:	mov	r5, #1
   16aec:	mov	r0, r5
   16af0:	ldrd	r4, [sp]
   16af4:	ldr	r6, [sp, #8]
   16af8:	add	sp, sp, #12
   16afc:	pop	{pc}		; (ldr pc, [sp], #4)
   16b00:	cmp	r3, #0
   16b04:	beq	16ae8 <dcngettext@plt+0x581c>
   16b08:	b	16a84 <dcngettext@plt+0x57b8>
   16b0c:	bl	1108c <tzset@plt>
   16b10:	b	16aec <dcngettext@plt+0x5820>
   16b14:	cmp	r0, #1
   16b18:	beq	16b20 <dcngettext@plt+0x5854>
   16b1c:	b	167ec <dcngettext@plt+0x5520>
   16b20:	bx	lr
   16b24:	subs	ip, r0, #0
   16b28:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16b2c:	mov	r5, r1
   16b30:	strd	r6, [sp, #8]
   16b34:	str	r8, [sp, #16]
   16b38:	str	lr, [sp, #20]
   16b3c:	beq	16bc8 <dcngettext@plt+0x58fc>
   16b40:	mov	r4, r2
   16b44:	mov	r6, ip
   16b48:	bl	16a54 <dcngettext@plt+0x5788>
   16b4c:	subs	r7, r0, #0
   16b50:	beq	16b9c <dcngettext@plt+0x58d0>
   16b54:	mov	r0, r5
   16b58:	mov	r1, r4
   16b5c:	bl	11068 <localtime_r@plt>
   16b60:	cmp	r0, #0
   16b64:	beq	16b8c <dcngettext@plt+0x58c0>
   16b68:	mov	r0, r6
   16b6c:	mov	r1, r4
   16b70:	bl	16920 <dcngettext@plt+0x5654>
   16b74:	cmp	r0, #0
   16b78:	beq	16b8c <dcngettext@plt+0x58c0>
   16b7c:	cmp	r7, #1
   16b80:	bne	16bb4 <dcngettext@plt+0x58e8>
   16b84:	mov	r0, r4
   16b88:	b	16ba0 <dcngettext@plt+0x58d4>
   16b8c:	cmp	r7, #1
   16b90:	beq	16b9c <dcngettext@plt+0x58d0>
   16b94:	mov	r0, r7
   16b98:	bl	16818 <dcngettext@plt+0x554c>
   16b9c:	mov	r0, #0
   16ba0:	ldrd	r4, [sp]
   16ba4:	ldrd	r6, [sp, #8]
   16ba8:	ldr	r8, [sp, #16]
   16bac:	add	sp, sp, #20
   16bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   16bb4:	mov	r0, r7
   16bb8:	bl	16818 <dcngettext@plt+0x554c>
   16bbc:	cmp	r0, #0
   16bc0:	bne	16b84 <dcngettext@plt+0x58b8>
   16bc4:	b	16b9c <dcngettext@plt+0x58d0>
   16bc8:	mov	r0, r5
   16bcc:	mov	r1, r2
   16bd0:	ldrd	r4, [sp]
   16bd4:	ldrd	r6, [sp, #8]
   16bd8:	ldr	r8, [sp, #16]
   16bdc:	ldr	lr, [sp, #20]
   16be0:	add	sp, sp, #24
   16be4:	b	10fb4 <gmtime_r@plt>
   16be8:	strd	r4, [sp, #-20]!	; 0xffffffec
   16bec:	subs	r5, r0, #0
   16bf0:	strd	r6, [sp, #8]
   16bf4:	mov	r6, r1
   16bf8:	str	lr, [sp, #16]
   16bfc:	sub	sp, sp, #52	; 0x34
   16c00:	beq	16cf0 <dcngettext@plt+0x5a24>
   16c04:	bl	16a54 <dcngettext@plt+0x5788>
   16c08:	subs	r4, r0, #0
   16c0c:	beq	16c70 <dcngettext@plt+0x59a4>
   16c10:	ldr	r3, [r6]
   16c14:	mvn	r2, #0
   16c18:	add	r0, sp, #4
   16c1c:	ldr	r1, [r6, #4]
   16c20:	str	r3, [sp, #4]
   16c24:	str	r2, [sp, #32]
   16c28:	ldrd	r2, [r6, #8]
   16c2c:	str	r1, [sp, #8]
   16c30:	ldr	r1, [r6, #16]
   16c34:	strd	r2, [sp, #12]
   16c38:	ldr	r2, [r6, #20]
   16c3c:	str	r1, [sp, #20]
   16c40:	ldr	r3, [r6, #32]
   16c44:	str	r2, [sp, #24]
   16c48:	str	r3, [sp, #36]	; 0x24
   16c4c:	bl	10fcc <mktime@plt>
   16c50:	ldr	r3, [sp, #32]
   16c54:	mov	r7, r0
   16c58:	cmp	r3, #0
   16c5c:	bge	16c8c <dcngettext@plt+0x59c0>
   16c60:	cmp	r4, #1
   16c64:	beq	16c70 <dcngettext@plt+0x59a4>
   16c68:	mov	r0, r4
   16c6c:	bl	16818 <dcngettext@plt+0x554c>
   16c70:	mvn	r7, #0
   16c74:	mov	r0, r7
   16c78:	add	sp, sp, #52	; 0x34
   16c7c:	ldrd	r4, [sp]
   16c80:	ldrd	r6, [sp, #8]
   16c84:	add	sp, sp, #16
   16c88:	pop	{pc}		; (ldr pc, [sp], #4)
   16c8c:	mov	r0, r5
   16c90:	add	r1, sp, #4
   16c94:	bl	16920 <dcngettext@plt+0x5654>
   16c98:	cmp	r0, #0
   16c9c:	beq	16c60 <dcngettext@plt+0x5994>
   16ca0:	cmp	r4, #1
   16ca4:	bne	16cdc <dcngettext@plt+0x5a10>
   16ca8:	ldrd	r0, [sp, #4]
   16cac:	ldrd	r2, [sp, #12]
   16cb0:	ldrd	r4, [sp, #20]
   16cb4:	strd	r0, [r6]
   16cb8:	ldrd	r0, [sp, #28]
   16cbc:	strd	r2, [r6, #8]
   16cc0:	ldrd	r2, [sp, #36]	; 0x24
   16cc4:	strd	r4, [r6, #16]
   16cc8:	ldr	ip, [sp, #44]	; 0x2c
   16ccc:	strd	r0, [r6, #24]
   16cd0:	strd	r2, [r6, #32]
   16cd4:	str	ip, [r6, #40]	; 0x28
   16cd8:	b	16c74 <dcngettext@plt+0x59a8>
   16cdc:	mov	r0, r4
   16ce0:	bl	16818 <dcngettext@plt+0x554c>
   16ce4:	cmp	r0, #0
   16ce8:	bne	16ca8 <dcngettext@plt+0x59dc>
   16cec:	b	16c70 <dcngettext@plt+0x59a4>
   16cf0:	mov	r0, r1
   16cf4:	bl	1126c <timegm@plt>
   16cf8:	mov	r7, r0
   16cfc:	b	16c74 <dcngettext@plt+0x59a8>
   16d00:	cmp	r1, #0
   16d04:	strd	r4, [sp, #-16]!
   16d08:	mov	ip, r3
   16d0c:	str	r6, [sp, #8]
   16d10:	mov	r4, r0
   16d14:	str	lr, [sp, #12]
   16d18:	sub	sp, sp, #32
   16d1c:	ldr	r5, [sp, #48]	; 0x30
   16d20:	ldr	r6, [sp, #52]	; 0x34
   16d24:	beq	16e68 <dcngettext@plt+0x5b9c>
   16d28:	mov	r3, r1
   16d2c:	mov	r1, #1
   16d30:	stm	sp, {r2, ip}
   16d34:	movw	r2, #33768	; 0x83e8
   16d38:	movt	r2, #1
   16d3c:	bl	111dc <__fprintf_chk@plt>
   16d40:	mov	r2, #5
   16d44:	movw	r1, #33788	; 0x83fc
   16d48:	movt	r1, #1
   16d4c:	mov	r0, #0
   16d50:	bl	11044 <dcgettext@plt>
   16d54:	movw	ip, #2022	; 0x7e6
   16d58:	mov	r3, r0
   16d5c:	mov	r1, #1
   16d60:	movw	r2, #34516	; 0x86d4
   16d64:	movt	r2, #1
   16d68:	mov	r0, r4
   16d6c:	str	ip, [sp]
   16d70:	bl	111dc <__fprintf_chk@plt>
   16d74:	mov	r1, r4
   16d78:	mov	r0, #10
   16d7c:	bl	11038 <fputc_unlocked@plt>
   16d80:	mov	r2, #5
   16d84:	movw	r1, #33792	; 0x8400
   16d88:	movt	r1, #1
   16d8c:	mov	r0, #0
   16d90:	bl	11044 <dcgettext@plt>
   16d94:	mov	r2, r0
   16d98:	mov	r1, #1
   16d9c:	movw	r3, #33964	; 0x84ac
   16da0:	movt	r3, #1
   16da4:	mov	r0, r4
   16da8:	bl	111dc <__fprintf_chk@plt>
   16dac:	mov	r1, r4
   16db0:	mov	r0, #10
   16db4:	bl	11038 <fputc_unlocked@plt>
   16db8:	cmp	r6, #9
   16dbc:	ldrls	pc, [pc, r6, lsl #2]
   16dc0:	b	170d4 <dcngettext@plt+0x5e08>
   16dc4:	andeq	r6, r1, r4, asr lr
   16dc8:	andeq	r6, r1, r4, lsl #29
   16dcc:	andeq	r6, r1, r0, asr #29
   16dd0:	andeq	r6, r1, r0, lsl #30
   16dd4:	andeq	r6, r1, r8, asr #30
   16dd8:	andeq	r6, r1, r0, lsl #31
   16ddc:	andeq	r6, r1, r8, asr #31
   16de0:	andeq	r7, r1, ip, lsl r0
   16de4:	andeq	r7, r1, r4, ror r0
   16de8:	andeq	r6, r1, ip, ror #27
   16dec:	movw	r1, #34268	; 0x85dc
   16df0:	movt	r1, #1
   16df4:	mov	r2, #5
   16df8:	mov	r0, #0
   16dfc:	bl	11044 <dcgettext@plt>
   16e00:	ldr	lr, [r5, #4]
   16e04:	mov	r2, r0
   16e08:	mov	r1, #1
   16e0c:	mov	r0, r4
   16e10:	ldr	r3, [r5, #8]
   16e14:	ldr	ip, [r5, #32]
   16e18:	str	lr, [sp]
   16e1c:	ldr	lr, [r5, #12]
   16e20:	str	ip, [sp, #28]
   16e24:	ldr	ip, [r5, #28]
   16e28:	str	r3, [sp, #4]
   16e2c:	ldr	r3, [r5, #16]
   16e30:	str	lr, [sp, #8]
   16e34:	ldr	lr, [r5, #20]
   16e38:	str	ip, [sp, #24]
   16e3c:	ldr	ip, [r5, #24]
   16e40:	str	r3, [sp, #12]
   16e44:	ldr	r3, [r5]
   16e48:	str	lr, [sp, #16]
   16e4c:	str	ip, [sp, #20]
   16e50:	bl	111dc <__fprintf_chk@plt>
   16e54:	add	sp, sp, #32
   16e58:	ldrd	r4, [sp]
   16e5c:	ldr	r6, [sp, #8]
   16e60:	add	sp, sp, #12
   16e64:	pop	{pc}		; (ldr pc, [sp], #4)
   16e68:	mov	r3, r2
   16e6c:	mov	r1, #1
   16e70:	str	ip, [sp]
   16e74:	movw	r2, #33780	; 0x83f4
   16e78:	movt	r2, #1
   16e7c:	bl	111dc <__fprintf_chk@plt>
   16e80:	b	16d40 <dcngettext@plt+0x5a74>
   16e84:	mov	r2, #5
   16e88:	movw	r1, #34000	; 0x84d0
   16e8c:	movt	r1, #1
   16e90:	mov	r0, #0
   16e94:	bl	11044 <dcgettext@plt>
   16e98:	ldr	r3, [r5]
   16e9c:	mov	r2, r0
   16ea0:	mov	r1, #1
   16ea4:	mov	r0, r4
   16ea8:	add	sp, sp, #32
   16eac:	ldrd	r4, [sp]
   16eb0:	ldr	r6, [sp, #8]
   16eb4:	ldr	lr, [sp, #12]
   16eb8:	add	sp, sp, #16
   16ebc:	b	111dc <__fprintf_chk@plt>
   16ec0:	mov	r2, #5
   16ec4:	movw	r1, #34016	; 0x84e0
   16ec8:	movt	r1, #1
   16ecc:	mov	r0, #0
   16ed0:	bl	11044 <dcgettext@plt>
   16ed4:	ldm	r5, {r3, ip}
   16ed8:	mov	r2, r0
   16edc:	mov	r1, #1
   16ee0:	mov	r0, r4
   16ee4:	str	ip, [sp, #48]	; 0x30
   16ee8:	add	sp, sp, #32
   16eec:	ldrd	r4, [sp]
   16ef0:	ldr	r6, [sp, #8]
   16ef4:	ldr	lr, [sp, #12]
   16ef8:	add	sp, sp, #16
   16efc:	b	111dc <__fprintf_chk@plt>
   16f00:	mov	r2, #5
   16f04:	movw	r1, #34040	; 0x84f8
   16f08:	movt	r1, #1
   16f0c:	mov	r0, #0
   16f10:	bl	11044 <dcgettext@plt>
   16f14:	ldm	r5, {r3, lr}
   16f18:	mov	r2, r0
   16f1c:	mov	r1, #1
   16f20:	mov	r0, r4
   16f24:	ldr	ip, [r5, #8]
   16f28:	str	lr, [sp, #48]	; 0x30
   16f2c:	str	ip, [sp, #52]	; 0x34
   16f30:	add	sp, sp, #32
   16f34:	ldrd	r4, [sp]
   16f38:	ldr	r6, [sp, #8]
   16f3c:	ldr	lr, [sp, #12]
   16f40:	add	sp, sp, #16
   16f44:	b	111dc <__fprintf_chk@plt>
   16f48:	mov	r2, #5
   16f4c:	movw	r1, #34068	; 0x8514
   16f50:	movt	r1, #1
   16f54:	mov	r0, #0
   16f58:	bl	11044 <dcgettext@plt>
   16f5c:	ldmib	r5, {r3, ip, lr}
   16f60:	mov	r2, r0
   16f64:	mov	r1, #1
   16f68:	mov	r0, r4
   16f6c:	str	r3, [sp]
   16f70:	ldr	r3, [r5]
   16f74:	stmib	sp, {ip, lr}
   16f78:	bl	111dc <__fprintf_chk@plt>
   16f7c:	b	16e54 <dcngettext@plt+0x5b88>
   16f80:	mov	r2, #5
   16f84:	movw	r1, #34100	; 0x8534
   16f88:	movt	r1, #1
   16f8c:	mov	r0, #0
   16f90:	bl	11044 <dcgettext@plt>
   16f94:	ldmib	r5, {ip, lr}
   16f98:	mov	r2, r0
   16f9c:	mov	r1, #1
   16fa0:	mov	r0, r4
   16fa4:	ldr	r3, [r5, #16]
   16fa8:	str	ip, [sp]
   16fac:	ldr	ip, [r5, #12]
   16fb0:	str	r3, [sp, #12]
   16fb4:	ldr	r3, [r5]
   16fb8:	str	lr, [sp, #4]
   16fbc:	str	ip, [sp, #8]
   16fc0:	bl	111dc <__fprintf_chk@plt>
   16fc4:	b	16e54 <dcngettext@plt+0x5b88>
   16fc8:	mov	r2, #5
   16fcc:	movw	r1, #34136	; 0x8558
   16fd0:	movt	r1, #1
   16fd4:	mov	r0, #0
   16fd8:	bl	11044 <dcgettext@plt>
   16fdc:	ldr	lr, [r5, #4]
   16fe0:	mov	r2, r0
   16fe4:	mov	r1, #1
   16fe8:	mov	r0, r4
   16fec:	ldr	r3, [r5, #8]
   16ff0:	ldr	ip, [r5, #20]
   16ff4:	str	lr, [sp]
   16ff8:	ldr	lr, [r5, #12]
   16ffc:	str	ip, [sp, #16]
   17000:	ldr	ip, [r5, #16]
   17004:	str	r3, [sp, #4]
   17008:	ldr	r3, [r5]
   1700c:	str	lr, [sp, #8]
   17010:	str	ip, [sp, #12]
   17014:	bl	111dc <__fprintf_chk@plt>
   17018:	b	16e54 <dcngettext@plt+0x5b88>
   1701c:	mov	r2, #5
   17020:	movw	r1, #34176	; 0x8580
   17024:	movt	r1, #1
   17028:	mov	r0, #0
   1702c:	bl	11044 <dcgettext@plt>
   17030:	ldmib	r5, {r3, ip}
   17034:	mov	r2, r0
   17038:	mov	r1, #1
   1703c:	mov	r0, r4
   17040:	ldr	lr, [r5, #24]
   17044:	str	r3, [sp]
   17048:	ldr	r3, [r5, #12]
   1704c:	str	lr, [sp, #20]
   17050:	ldr	lr, [r5, #20]
   17054:	str	ip, [sp, #4]
   17058:	ldr	ip, [r5, #16]
   1705c:	str	r3, [sp, #8]
   17060:	ldr	r3, [r5]
   17064:	str	ip, [sp, #12]
   17068:	str	lr, [sp, #16]
   1706c:	bl	111dc <__fprintf_chk@plt>
   17070:	b	16e54 <dcngettext@plt+0x5b88>
   17074:	mov	r2, #5
   17078:	movw	r1, #34220	; 0x85ac
   1707c:	movt	r1, #1
   17080:	mov	r0, #0
   17084:	bl	11044 <dcgettext@plt>
   17088:	ldmib	r5, {ip, lr}
   1708c:	mov	r2, r0
   17090:	mov	r1, #1
   17094:	mov	r0, r4
   17098:	ldr	r3, [r5, #28]
   1709c:	str	ip, [sp]
   170a0:	ldr	ip, [r5, #12]
   170a4:	str	r3, [sp, #24]
   170a8:	ldr	r3, [r5, #24]
   170ac:	str	lr, [sp, #4]
   170b0:	ldr	lr, [r5, #16]
   170b4:	str	ip, [sp, #8]
   170b8:	ldr	ip, [r5, #20]
   170bc:	str	r3, [sp, #20]
   170c0:	ldr	r3, [r5]
   170c4:	str	lr, [sp, #12]
   170c8:	str	ip, [sp, #16]
   170cc:	bl	111dc <__fprintf_chk@plt>
   170d0:	b	16e54 <dcngettext@plt+0x5b88>
   170d4:	movw	r1, #34320	; 0x8610
   170d8:	movt	r1, #1
   170dc:	b	16df4 <dcngettext@plt+0x5b28>
   170e0:	strd	r4, [sp, #-12]!
   170e4:	str	lr, [sp, #8]
   170e8:	sub	sp, sp, #12
   170ec:	ldr	r5, [sp, #24]
   170f0:	ldr	ip, [r5]
   170f4:	cmp	ip, #0
   170f8:	beq	17114 <dcngettext@plt+0x5e48>
   170fc:	mov	lr, r5
   17100:	mov	ip, #0
   17104:	ldr	r4, [lr, #4]!
   17108:	add	ip, ip, #1
   1710c:	cmp	r4, #0
   17110:	bne	17104 <dcngettext@plt+0x5e38>
   17114:	stm	sp, {r5, ip}
   17118:	bl	16d00 <dcngettext@plt+0x5a34>
   1711c:	add	sp, sp, #12
   17120:	ldrd	r4, [sp]
   17124:	add	sp, sp, #8
   17128:	pop	{pc}		; (ldr pc, [sp], #4)
   1712c:	strd	r4, [sp, #-16]!
   17130:	mov	ip, #0
   17134:	str	r6, [sp, #8]
   17138:	str	lr, [sp, #12]
   1713c:	sub	sp, sp, #48	; 0x30
   17140:	ldr	r5, [sp, #64]	; 0x40
   17144:	add	r6, sp, #8
   17148:	mov	r4, r6
   1714c:	ldr	lr, [r5], #4
   17150:	cmp	lr, #0
   17154:	str	lr, [r4], #4
   17158:	beq	17168 <dcngettext@plt+0x5e9c>
   1715c:	add	ip, ip, #1
   17160:	cmp	ip, #10
   17164:	bne	1714c <dcngettext@plt+0x5e80>
   17168:	stm	sp, {r6, ip}
   1716c:	bl	16d00 <dcngettext@plt+0x5a34>
   17170:	add	sp, sp, #48	; 0x30
   17174:	ldrd	r4, [sp]
   17178:	ldr	r6, [sp, #8]
   1717c:	add	sp, sp, #12
   17180:	pop	{pc}		; (ldr pc, [sp], #4)
   17184:	push	{r3}		; (str r3, [sp, #-4]!)
   17188:	mov	ip, #0
   1718c:	strd	r4, [sp, #-12]!
   17190:	str	lr, [sp, #8]
   17194:	sub	sp, sp, #56	; 0x38
   17198:	add	r3, sp, #72	; 0x48
   1719c:	add	r5, sp, #16
   171a0:	mov	r4, r3
   171a4:	mov	lr, r5
   171a8:	str	r3, [sp, #12]
   171ac:	ldr	r3, [r4], #4
   171b0:	cmp	r3, #0
   171b4:	str	r3, [lr], #4
   171b8:	beq	171c8 <dcngettext@plt+0x5efc>
   171bc:	add	ip, ip, #1
   171c0:	cmp	ip, #10
   171c4:	bne	171ac <dcngettext@plt+0x5ee0>
   171c8:	ldr	r3, [sp, #68]	; 0x44
   171cc:	stm	sp, {r5, ip}
   171d0:	bl	16d00 <dcngettext@plt+0x5a34>
   171d4:	add	sp, sp, #56	; 0x38
   171d8:	ldrd	r4, [sp]
   171dc:	ldr	lr, [sp, #8]
   171e0:	add	sp, sp, #12
   171e4:	add	sp, sp, #4
   171e8:	bx	lr
   171ec:	movw	r3, #37260	; 0x918c
   171f0:	movt	r3, #2
   171f4:	str	r4, [sp, #-8]!
   171f8:	mov	r0, #10
   171fc:	ldr	r1, [r3]
   17200:	str	lr, [sp, #4]
   17204:	bl	11038 <fputc_unlocked@plt>
   17208:	mov	r2, #5
   1720c:	movw	r1, #34380	; 0x864c
   17210:	movt	r1, #1
   17214:	mov	r0, #0
   17218:	bl	11044 <dcgettext@plt>
   1721c:	mov	r1, r0
   17220:	movw	r2, #34400	; 0x8660
   17224:	movt	r2, #1
   17228:	mov	r0, #1
   1722c:	bl	111c4 <__printf_chk@plt>
   17230:	mov	r2, #5
   17234:	movw	r1, #34424	; 0x8678
   17238:	movt	r1, #1
   1723c:	mov	r0, #0
   17240:	bl	11044 <dcgettext@plt>
   17244:	mov	r1, r0
   17248:	movw	r3, #32916	; 0x8094
   1724c:	movt	r3, #1
   17250:	movw	r2, #32956	; 0x80bc
   17254:	movt	r2, #1
   17258:	mov	r0, #1
   1725c:	bl	111c4 <__printf_chk@plt>
   17260:	mov	r2, #5
   17264:	movw	r1, #34444	; 0x868c
   17268:	movt	r1, #1
   1726c:	mov	r0, #0
   17270:	bl	11044 <dcgettext@plt>
   17274:	mov	r1, r0
   17278:	movw	r2, #34484	; 0x86b4
   1727c:	movt	r2, #1
   17280:	mov	r0, #1
   17284:	ldr	r4, [sp]
   17288:	ldr	lr, [sp, #4]
   1728c:	add	sp, sp, #8
   17290:	b	111c4 <__printf_chk@plt>
   17294:	str	r4, [sp, #-8]!
   17298:	str	lr, [sp, #4]
   1729c:	bl	177c4 <dcngettext@plt+0x64f8>
   172a0:	cmp	r0, #0
   172a4:	beq	172b4 <dcngettext@plt+0x5fe8>
   172a8:	ldr	r4, [sp]
   172ac:	add	sp, sp, #4
   172b0:	pop	{pc}		; (ldr pc, [sp], #4)
   172b4:	bl	1770c <dcngettext@plt+0x6440>
   172b8:	str	r4, [sp, #-8]!
   172bc:	str	lr, [sp, #4]
   172c0:	bl	177c4 <dcngettext@plt+0x64f8>
   172c4:	cmp	r0, #0
   172c8:	beq	172d8 <dcngettext@plt+0x600c>
   172cc:	ldr	r4, [sp]
   172d0:	add	sp, sp, #4
   172d4:	pop	{pc}		; (ldr pc, [sp], #4)
   172d8:	bl	1770c <dcngettext@plt+0x6440>
   172dc:	str	r4, [sp, #-8]!
   172e0:	str	lr, [sp, #4]
   172e4:	bl	177c4 <dcngettext@plt+0x64f8>
   172e8:	cmp	r0, #0
   172ec:	beq	172fc <dcngettext@plt+0x6030>
   172f0:	ldr	r4, [sp]
   172f4:	add	sp, sp, #4
   172f8:	pop	{pc}		; (ldr pc, [sp], #4)
   172fc:	bl	1770c <dcngettext@plt+0x6440>
   17300:	strd	r4, [sp, #-16]!
   17304:	mov	r5, r0
   17308:	mov	r4, r1
   1730c:	str	r6, [sp, #8]
   17310:	str	lr, [sp, #12]
   17314:	bl	17800 <dcngettext@plt+0x6534>
   17318:	cmp	r0, #0
   1731c:	beq	17330 <dcngettext@plt+0x6064>
   17320:	ldrd	r4, [sp]
   17324:	ldr	r6, [sp, #8]
   17328:	add	sp, sp, #12
   1732c:	pop	{pc}		; (ldr pc, [sp], #4)
   17330:	adds	r4, r4, #0
   17334:	movne	r4, #1
   17338:	cmp	r5, #0
   1733c:	moveq	r4, #1
   17340:	cmp	r4, #0
   17344:	beq	17320 <dcngettext@plt+0x6054>
   17348:	bl	1770c <dcngettext@plt+0x6440>
   1734c:	cmp	r1, #0
   17350:	orreq	r1, r1, #1
   17354:	str	r4, [sp, #-8]!
   17358:	str	lr, [sp, #4]
   1735c:	bl	17800 <dcngettext@plt+0x6534>
   17360:	cmp	r0, #0
   17364:	beq	17374 <dcngettext@plt+0x60a8>
   17368:	ldr	r4, [sp]
   1736c:	add	sp, sp, #4
   17370:	pop	{pc}		; (ldr pc, [sp], #4)
   17374:	bl	1770c <dcngettext@plt+0x6440>
   17378:	strd	r4, [sp, #-16]!
   1737c:	mov	r4, r0
   17380:	mov	r5, r2
   17384:	str	r6, [sp, #8]
   17388:	mov	r6, r1
   1738c:	str	lr, [sp, #12]
   17390:	bl	179fc <dcngettext@plt+0x6730>
   17394:	cmp	r0, #0
   17398:	beq	173ac <dcngettext@plt+0x60e0>
   1739c:	ldrd	r4, [sp]
   173a0:	ldr	r6, [sp, #8]
   173a4:	add	sp, sp, #12
   173a8:	pop	{pc}		; (ldr pc, [sp], #4)
   173ac:	cmp	r4, #0
   173b0:	beq	173c0 <dcngettext@plt+0x60f4>
   173b4:	cmp	r6, #0
   173b8:	cmpne	r5, #0
   173bc:	beq	1739c <dcngettext@plt+0x60d0>
   173c0:	bl	1770c <dcngettext@plt+0x6440>
   173c4:	b	17378 <dcngettext@plt+0x60ac>
   173c8:	cmp	r2, #0
   173cc:	cmpne	r1, #0
   173d0:	str	r4, [sp, #-8]!
   173d4:	moveq	r2, #1
   173d8:	str	lr, [sp, #4]
   173dc:	moveq	r1, r2
   173e0:	bl	179fc <dcngettext@plt+0x6730>
   173e4:	cmp	r0, #0
   173e8:	beq	173f8 <dcngettext@plt+0x612c>
   173ec:	ldr	r4, [sp]
   173f0:	add	sp, sp, #4
   173f4:	pop	{pc}		; (ldr pc, [sp], #4)
   173f8:	bl	1770c <dcngettext@plt+0x6440>
   173fc:	mov	r2, r1
   17400:	mov	r1, r0
   17404:	mov	r0, #0
   17408:	b	17378 <dcngettext@plt+0x60ac>
   1740c:	mov	r2, r1
   17410:	mov	r1, r0
   17414:	mov	r0, #0
   17418:	b	173c8 <dcngettext@plt+0x60fc>
   1741c:	cmp	r0, #0
   17420:	strd	r4, [sp, #-16]!
   17424:	mov	r5, r1
   17428:	ldr	r4, [r1]
   1742c:	str	r6, [sp, #8]
   17430:	str	lr, [sp, #12]
   17434:	beq	17464 <dcngettext@plt+0x6198>
   17438:	lsr	r3, r4, #1
   1743c:	add	r3, r3, #1
   17440:	adds	r4, r4, r3
   17444:	bcs	17480 <dcngettext@plt+0x61b4>
   17448:	mov	r1, r4
   1744c:	bl	17378 <dcngettext@plt+0x60ac>
   17450:	ldr	r6, [sp, #8]
   17454:	str	r4, [r5]
   17458:	ldrd	r4, [sp]
   1745c:	add	sp, sp, #12
   17460:	pop	{pc}		; (ldr pc, [sp], #4)
   17464:	cmp	r4, #0
   17468:	bne	17448 <dcngettext@plt+0x617c>
   1746c:	mov	r4, #64	; 0x40
   17470:	udiv	r4, r4, r2
   17474:	cmp	r2, #64	; 0x40
   17478:	addhi	r4, r4, #1
   1747c:	b	17448 <dcngettext@plt+0x617c>
   17480:	bl	1770c <dcngettext@plt+0x6440>
   17484:	mov	r2, #1
   17488:	b	1741c <dcngettext@plt+0x6150>
   1748c:	ldr	ip, [r1]
   17490:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17494:	mov	r5, r1
   17498:	strd	r6, [sp, #8]
   1749c:	str	lr, [sp, #28]
   174a0:	strd	r8, [sp, #16]
   174a4:	asr	lr, ip, #1
   174a8:	ldr	r8, [sp, #32]
   174ac:	str	sl, [sp, #24]
   174b0:	adds	r4, ip, lr
   174b4:	mvn	lr, r3
   174b8:	lsr	lr, lr, #31
   174bc:	mvnvs	r4, #-2147483648	; 0x80000000
   174c0:	cmp	r3, r4
   174c4:	movge	r1, #0
   174c8:	andlt	r1, lr, #1
   174cc:	cmp	r1, #0
   174d0:	movne	r4, r3
   174d4:	smull	r6, r7, r4, r8
   174d8:	cmp	r7, r6, asr #31
   174dc:	bne	17564 <dcngettext@plt+0x6298>
   174e0:	cmp	r6, #63	; 0x3f
   174e4:	mov	r1, r6
   174e8:	ble	1754c <dcngettext@plt+0x6280>
   174ec:	cmp	r0, #0
   174f0:	sub	r6, r4, ip
   174f4:	streq	r0, [r5]
   174f8:	cmp	r6, r2
   174fc:	bge	1752c <dcngettext@plt+0x6260>
   17500:	adds	r4, ip, r2
   17504:	bvs	17560 <dcngettext@plt+0x6294>
   17508:	cmp	r4, r3
   1750c:	movle	r3, #0
   17510:	andgt	r3, lr, #1
   17514:	cmp	r3, #0
   17518:	bne	17560 <dcngettext@plt+0x6294>
   1751c:	smull	r8, r9, r4, r8
   17520:	cmp	r9, r8, asr #31
   17524:	mov	r1, r8
   17528:	bne	17560 <dcngettext@plt+0x6294>
   1752c:	bl	17300 <dcngettext@plt+0x6034>
   17530:	ldrd	r6, [sp, #8]
   17534:	ldrd	r8, [sp, #16]
   17538:	ldr	sl, [sp, #24]
   1753c:	str	r4, [r5]
   17540:	ldrd	r4, [sp]
   17544:	add	sp, sp, #28
   17548:	pop	{pc}		; (ldr pc, [sp], #4)
   1754c:	mov	r6, #64	; 0x40
   17550:	sdiv	r4, r6, r8
   17554:	mls	r1, r8, r4, r6
   17558:	sub	r1, r6, r1
   1755c:	b	174ec <dcngettext@plt+0x6220>
   17560:	bl	1770c <dcngettext@plt+0x6440>
   17564:	mvn	r6, #-2147483648	; 0x80000000
   17568:	b	17550 <dcngettext@plt+0x6284>
   1756c:	mov	r1, #1
   17570:	str	r4, [sp, #-8]!
   17574:	str	lr, [sp, #4]
   17578:	bl	17750 <dcngettext@plt+0x6484>
   1757c:	cmp	r0, #0
   17580:	beq	17590 <dcngettext@plt+0x62c4>
   17584:	ldr	r4, [sp]
   17588:	add	sp, sp, #4
   1758c:	pop	{pc}		; (ldr pc, [sp], #4)
   17590:	bl	1770c <dcngettext@plt+0x6440>
   17594:	mov	r1, #1
   17598:	str	r4, [sp, #-8]!
   1759c:	str	lr, [sp, #4]
   175a0:	bl	17750 <dcngettext@plt+0x6484>
   175a4:	cmp	r0, #0
   175a8:	beq	175b8 <dcngettext@plt+0x62ec>
   175ac:	ldr	r4, [sp]
   175b0:	add	sp, sp, #4
   175b4:	pop	{pc}		; (ldr pc, [sp], #4)
   175b8:	bl	1770c <dcngettext@plt+0x6440>
   175bc:	str	r4, [sp, #-8]!
   175c0:	str	lr, [sp, #4]
   175c4:	bl	17750 <dcngettext@plt+0x6484>
   175c8:	cmp	r0, #0
   175cc:	beq	175dc <dcngettext@plt+0x6310>
   175d0:	ldr	r4, [sp]
   175d4:	add	sp, sp, #4
   175d8:	pop	{pc}		; (ldr pc, [sp], #4)
   175dc:	bl	1770c <dcngettext@plt+0x6440>
   175e0:	str	r4, [sp, #-8]!
   175e4:	str	lr, [sp, #4]
   175e8:	bl	17750 <dcngettext@plt+0x6484>
   175ec:	cmp	r0, #0
   175f0:	beq	17600 <dcngettext@plt+0x6334>
   175f4:	ldr	r4, [sp]
   175f8:	add	sp, sp, #4
   175fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17600:	bl	1770c <dcngettext@plt+0x6440>
   17604:	strd	r4, [sp, #-16]!
   17608:	mov	r4, r1
   1760c:	str	r6, [sp, #8]
   17610:	mov	r6, r0
   17614:	mov	r0, r1
   17618:	str	lr, [sp, #12]
   1761c:	bl	177c4 <dcngettext@plt+0x64f8>
   17620:	subs	r5, r0, #0
   17624:	beq	17648 <dcngettext@plt+0x637c>
   17628:	mov	r2, r4
   1762c:	mov	r1, r6
   17630:	bl	11008 <memcpy@plt>
   17634:	mov	r0, r5
   17638:	ldrd	r4, [sp]
   1763c:	ldr	r6, [sp, #8]
   17640:	add	sp, sp, #12
   17644:	pop	{pc}		; (ldr pc, [sp], #4)
   17648:	bl	1770c <dcngettext@plt+0x6440>
   1764c:	strd	r4, [sp, #-16]!
   17650:	mov	r4, r1
   17654:	str	r6, [sp, #8]
   17658:	mov	r6, r0
   1765c:	mov	r0, r1
   17660:	str	lr, [sp, #12]
   17664:	bl	177c4 <dcngettext@plt+0x64f8>
   17668:	subs	r5, r0, #0
   1766c:	beq	17690 <dcngettext@plt+0x63c4>
   17670:	mov	r2, r4
   17674:	mov	r1, r6
   17678:	bl	11008 <memcpy@plt>
   1767c:	mov	r0, r5
   17680:	ldrd	r4, [sp]
   17684:	ldr	r6, [sp, #8]
   17688:	add	sp, sp, #12
   1768c:	pop	{pc}		; (ldr pc, [sp], #4)
   17690:	bl	1770c <dcngettext@plt+0x6440>
   17694:	strd	r4, [sp, #-16]!
   17698:	mov	r4, r1
   1769c:	str	r6, [sp, #8]
   176a0:	mov	r6, r0
   176a4:	add	r0, r1, #1
   176a8:	str	lr, [sp, #12]
   176ac:	bl	177c4 <dcngettext@plt+0x64f8>
   176b0:	subs	r5, r0, #0
   176b4:	beq	176e0 <dcngettext@plt+0x6414>
   176b8:	mov	r3, #0
   176bc:	mov	r1, r6
   176c0:	mov	r2, r4
   176c4:	strb	r3, [r5, r4]
   176c8:	bl	11008 <memcpy@plt>
   176cc:	mov	r0, r5
   176d0:	ldrd	r4, [sp]
   176d4:	ldr	r6, [sp, #8]
   176d8:	add	sp, sp, #12
   176dc:	pop	{pc}		; (ldr pc, [sp], #4)
   176e0:	bl	1770c <dcngettext@plt+0x6440>
   176e4:	str	r4, [sp, #-8]!
   176e8:	mov	r4, r0
   176ec:	str	lr, [sp, #4]
   176f0:	bl	1117c <strlen@plt>
   176f4:	add	r1, r0, #1
   176f8:	mov	r0, r4
   176fc:	ldr	r4, [sp]
   17700:	ldr	lr, [sp, #4]
   17704:	add	sp, sp, #8
   17708:	b	17604 <dcngettext@plt+0x6338>
   1770c:	movw	r3, #37172	; 0x9134
   17710:	movt	r3, #2
   17714:	str	r4, [sp, #-8]!
   17718:	ldr	r4, [r3]
   1771c:	mov	r2, #5
   17720:	movw	r1, #34564	; 0x8704
   17724:	movt	r1, #1
   17728:	mov	r0, #0
   1772c:	str	lr, [sp, #4]
   17730:	bl	11044 <dcgettext@plt>
   17734:	mov	r3, r0
   17738:	movw	r2, #33364	; 0x8254
   1773c:	movt	r2, #1
   17740:	mov	r1, #0
   17744:	mov	r0, r4
   17748:	bl	110d4 <error@plt>
   1774c:	bl	112b4 <abort@plt>
   17750:	cmp	r1, #0
   17754:	cmpne	r0, #0
   17758:	beq	177a4 <dcngettext@plt+0x64d8>
   1775c:	strd	r4, [sp, #-16]!
   17760:	umull	r4, r5, r0, r1
   17764:	str	r6, [sp, #8]
   17768:	str	lr, [sp, #12]
   1776c:	adds	r3, r5, #0
   17770:	movne	r3, #1
   17774:	cmp	r4, #0
   17778:	blt	17784 <dcngettext@plt+0x64b8>
   1777c:	cmp	r3, #0
   17780:	beq	177b0 <dcngettext@plt+0x64e4>
   17784:	bl	11194 <__errno_location@plt>
   17788:	mov	r3, #12
   1778c:	ldrd	r4, [sp]
   17790:	ldr	r6, [sp, #8]
   17794:	add	sp, sp, #12
   17798:	str	r3, [r0]
   1779c:	mov	r0, #0
   177a0:	pop	{pc}		; (ldr pc, [sp], #4)
   177a4:	mov	r1, #1
   177a8:	mov	r0, r1
   177ac:	b	10f90 <calloc@plt>
   177b0:	ldrd	r4, [sp]
   177b4:	ldr	r6, [sp, #8]
   177b8:	ldr	lr, [sp, #12]
   177bc:	add	sp, sp, #16
   177c0:	b	10f90 <calloc@plt>
   177c4:	cmp	r0, #0
   177c8:	beq	177d4 <dcngettext@plt+0x6508>
   177cc:	blt	177dc <dcngettext@plt+0x6510>
   177d0:	b	110ec <malloc@plt>
   177d4:	mov	r0, #1
   177d8:	b	110ec <malloc@plt>
   177dc:	str	r4, [sp, #-8]!
   177e0:	str	lr, [sp, #4]
   177e4:	bl	11194 <__errno_location@plt>
   177e8:	mov	r3, #12
   177ec:	ldr	r4, [sp]
   177f0:	add	sp, sp, #4
   177f4:	str	r3, [r0]
   177f8:	mov	r0, #0
   177fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17800:	cmp	r0, #0
   17804:	beq	1782c <dcngettext@plt+0x6560>
   17808:	cmp	r1, #0
   1780c:	str	r4, [sp, #-8]!
   17810:	str	lr, [sp, #4]
   17814:	beq	17834 <dcngettext@plt+0x6568>
   17818:	blt	17848 <dcngettext@plt+0x657c>
   1781c:	ldr	r4, [sp]
   17820:	ldr	lr, [sp, #4]
   17824:	add	sp, sp, #8
   17828:	b	1105c <realloc@plt>
   1782c:	mov	r0, r1
   17830:	b	177c4 <dcngettext@plt+0x64f8>
   17834:	bl	178e0 <dcngettext@plt+0x6614>
   17838:	ldr	r4, [sp]
   1783c:	add	sp, sp, #4
   17840:	mov	r0, #0
   17844:	pop	{pc}		; (ldr pc, [sp], #4)
   17848:	bl	11194 <__errno_location@plt>
   1784c:	mov	r3, #12
   17850:	str	r3, [r0]
   17854:	b	17838 <dcngettext@plt+0x656c>
   17858:	strd	r4, [sp, #-16]!
   1785c:	mov	r4, r0
   17860:	str	r6, [sp, #8]
   17864:	str	lr, [sp, #12]
   17868:	bl	110bc <__fpending@plt>
   1786c:	ldr	r5, [r4]
   17870:	mov	r6, r0
   17874:	mov	r0, r4
   17878:	bl	11f04 <dcngettext@plt+0xc38>
   1787c:	mov	r4, r0
   17880:	and	r5, r5, #32
   17884:	cmp	r5, #0
   17888:	bne	178c0 <dcngettext@plt+0x65f4>
   1788c:	cmp	r0, #0
   17890:	beq	178ac <dcngettext@plt+0x65e0>
   17894:	cmp	r6, #0
   17898:	bne	178d8 <dcngettext@plt+0x660c>
   1789c:	bl	11194 <__errno_location@plt>
   178a0:	ldr	r4, [r0]
   178a4:	subs	r4, r4, #9
   178a8:	mvnne	r4, #0
   178ac:	mov	r0, r4
   178b0:	ldrd	r4, [sp]
   178b4:	ldr	r6, [sp, #8]
   178b8:	add	sp, sp, #12
   178bc:	pop	{pc}		; (ldr pc, [sp], #4)
   178c0:	cmp	r0, #0
   178c4:	bne	178d8 <dcngettext@plt+0x660c>
   178c8:	bl	11194 <__errno_location@plt>
   178cc:	str	r4, [r0]
   178d0:	mvn	r4, #0
   178d4:	b	178ac <dcngettext@plt+0x65e0>
   178d8:	mvn	r4, #0
   178dc:	b	178ac <dcngettext@plt+0x65e0>
   178e0:	strd	r4, [sp, #-12]!
   178e4:	mov	r5, r0
   178e8:	str	lr, [sp, #8]
   178ec:	sub	sp, sp, #12
   178f0:	bl	11194 <__errno_location@plt>
   178f4:	mov	r4, r0
   178f8:	mov	r2, #0
   178fc:	ldr	r3, [r4]
   17900:	mov	r0, r5
   17904:	str	r2, [r4]
   17908:	str	r3, [sp]
   1790c:	str	r3, [sp, #4]
   17910:	bl	10ff0 <free@plt>
   17914:	ldr	r3, [r4]
   17918:	add	r2, sp, #8
   1791c:	clz	r3, r3
   17920:	lsr	r3, r3, #5
   17924:	add	r3, r2, r3, lsl #2
   17928:	ldr	r3, [r3, #-8]
   1792c:	str	r3, [r4]
   17930:	add	sp, sp, #12
   17934:	ldrd	r4, [sp]
   17938:	add	sp, sp, #8
   1793c:	pop	{pc}		; (ldr pc, [sp], #4)
   17940:	mov	r0, #14
   17944:	str	r4, [sp, #-8]!
   17948:	str	lr, [sp, #4]
   1794c:	bl	11248 <nl_langinfo@plt>
   17950:	cmp	r0, #0
   17954:	beq	17978 <dcngettext@plt+0x66ac>
   17958:	ldrb	r2, [r0]
   1795c:	movw	r3, #34584	; 0x8718
   17960:	movt	r3, #1
   17964:	ldr	r4, [sp]
   17968:	add	sp, sp, #4
   1796c:	cmp	r2, #0
   17970:	moveq	r0, r3
   17974:	pop	{pc}		; (ldr pc, [sp], #4)
   17978:	ldr	r4, [sp]
   1797c:	add	sp, sp, #4
   17980:	movw	r0, #34584	; 0x8718
   17984:	movt	r0, #1
   17988:	pop	{pc}		; (ldr pc, [sp], #4)
   1798c:	strd	r4, [sp, #-20]!	; 0xffffffec
   17990:	mov	r5, r2
   17994:	strd	r6, [sp, #8]
   17998:	subs	r6, r0, #0
   1799c:	mov	r7, r1
   179a0:	str	lr, [sp, #16]
   179a4:	sub	sp, sp, #12
   179a8:	addeq	r6, sp, #4
   179ac:	mov	r0, r6
   179b0:	bl	110c8 <mbrtowc@plt>
   179b4:	cmp	r5, #0
   179b8:	cmnne	r0, #3
   179bc:	mov	r4, r0
   179c0:	bhi	179dc <dcngettext@plt+0x6710>
   179c4:	mov	r0, r4
   179c8:	add	sp, sp, #12
   179cc:	ldrd	r4, [sp]
   179d0:	ldrd	r6, [sp, #8]
   179d4:	add	sp, sp, #16
   179d8:	pop	{pc}		; (ldr pc, [sp], #4)
   179dc:	mov	r0, #0
   179e0:	bl	17a34 <dcngettext@plt+0x6768>
   179e4:	cmp	r0, #0
   179e8:	bne	179c4 <dcngettext@plt+0x66f8>
   179ec:	ldrb	r3, [r7]
   179f0:	mov	r4, #1
   179f4:	str	r3, [r6]
   179f8:	b	179c4 <dcngettext@plt+0x66f8>
   179fc:	umull	r2, r3, r1, r2
   17a00:	cmp	r3, #0
   17a04:	bne	17a10 <dcngettext@plt+0x6744>
   17a08:	mov	r1, r2
   17a0c:	b	17800 <dcngettext@plt+0x6534>
   17a10:	str	r4, [sp, #-8]!
   17a14:	str	lr, [sp, #4]
   17a18:	bl	11194 <__errno_location@plt>
   17a1c:	mov	r3, #12
   17a20:	ldr	r4, [sp]
   17a24:	add	sp, sp, #4
   17a28:	str	r3, [r0]
   17a2c:	mov	r0, #0
   17a30:	pop	{pc}		; (ldr pc, [sp], #4)
   17a34:	push	{lr}		; (str lr, [sp, #-4]!)
   17a38:	sub	sp, sp, #268	; 0x10c
   17a3c:	movw	r2, #257	; 0x101
   17a40:	add	r1, sp, #4
   17a44:	bl	17a8c <dcngettext@plt+0x67c0>
   17a48:	cmp	r0, #0
   17a4c:	movne	r0, #0
   17a50:	bne	17a84 <dcngettext@plt+0x67b8>
   17a54:	movw	r1, #33344	; 0x8240
   17a58:	movt	r1, #1
   17a5c:	add	r0, sp, #4
   17a60:	bl	10fc0 <strcmp@plt>
   17a64:	cmp	r0, #0
   17a68:	beq	17a84 <dcngettext@plt+0x67b8>
   17a6c:	add	r0, sp, #4
   17a70:	movw	r1, #34592	; 0x8720
   17a74:	movt	r1, #1
   17a78:	bl	10fc0 <strcmp@plt>
   17a7c:	adds	r0, r0, #0
   17a80:	movne	r0, #1
   17a84:	add	sp, sp, #268	; 0x10c
   17a88:	pop	{pc}		; (ldr pc, [sp], #4)
   17a8c:	strd	r4, [sp, #-16]!
   17a90:	mov	r5, r1
   17a94:	mov	r1, #0
   17a98:	mov	r4, r2
   17a9c:	str	r6, [sp, #8]
   17aa0:	str	lr, [sp, #12]
   17aa4:	bl	11230 <setlocale@plt>
   17aa8:	subs	r6, r0, #0
   17aac:	beq	17b2c <dcngettext@plt+0x6860>
   17ab0:	bl	1117c <strlen@plt>
   17ab4:	cmp	r4, r0
   17ab8:	bhi	17ad8 <dcngettext@plt+0x680c>
   17abc:	cmp	r4, #0
   17ac0:	moveq	r0, #34	; 0x22
   17ac4:	bne	17afc <dcngettext@plt+0x6830>
   17ac8:	ldrd	r4, [sp]
   17acc:	ldr	r6, [sp, #8]
   17ad0:	add	sp, sp, #12
   17ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   17ad8:	add	r2, r0, #1
   17adc:	mov	r1, r6
   17ae0:	mov	r0, r5
   17ae4:	bl	11008 <memcpy@plt>
   17ae8:	ldrd	r4, [sp]
   17aec:	mov	r0, #0
   17af0:	ldr	r6, [sp, #8]
   17af4:	add	sp, sp, #12
   17af8:	pop	{pc}		; (ldr pc, [sp], #4)
   17afc:	sub	r4, r4, #1
   17b00:	mov	r1, r6
   17b04:	mov	r2, r4
   17b08:	mov	r0, r5
   17b0c:	bl	11008 <memcpy@plt>
   17b10:	mov	r3, #0
   17b14:	mov	r0, #34	; 0x22
   17b18:	strb	r3, [r5, r4]
   17b1c:	ldrd	r4, [sp]
   17b20:	ldr	r6, [sp, #8]
   17b24:	add	sp, sp, #12
   17b28:	pop	{pc}		; (ldr pc, [sp], #4)
   17b2c:	cmp	r4, #0
   17b30:	mov	r0, #22
   17b34:	strbne	r6, [r5]
   17b38:	ldrd	r4, [sp]
   17b3c:	ldr	r6, [sp, #8]
   17b40:	add	sp, sp, #12
   17b44:	pop	{pc}		; (ldr pc, [sp], #4)
   17b48:	mov	r1, #0
   17b4c:	b	11230 <setlocale@plt>
   17b50:	cmp	r3, #0
   17b54:	cmpeq	r2, #0
   17b58:	bne	17b70 <dcngettext@plt+0x68a4>
   17b5c:	cmp	r1, #0
   17b60:	cmpeq	r0, #0
   17b64:	mvnne	r1, #0
   17b68:	mvnne	r0, #0
   17b6c:	b	17b8c <dcngettext@plt+0x68c0>
   17b70:	sub	sp, sp, #8
   17b74:	push	{sp, lr}
   17b78:	bl	17b9c <dcngettext@plt+0x68d0>
   17b7c:	ldr	lr, [sp, #4]
   17b80:	add	sp, sp, #8
   17b84:	pop	{r2, r3}
   17b88:	bx	lr
   17b8c:	push	{r1, lr}
   17b90:	mov	r0, #8
   17b94:	bl	10fa8 <raise@plt>
   17b98:	pop	{r1, pc}
   17b9c:	cmp	r1, r3
   17ba0:	cmpeq	r0, r2
   17ba4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ba8:	mov	r4, r0
   17bac:	movcc	r0, #0
   17bb0:	mov	r5, r1
   17bb4:	ldr	lr, [sp, #36]	; 0x24
   17bb8:	movcc	r1, r0
   17bbc:	bcc	17cb8 <dcngettext@plt+0x69ec>
   17bc0:	cmp	r3, #0
   17bc4:	clzeq	ip, r2
   17bc8:	clzne	ip, r3
   17bcc:	addeq	ip, ip, #32
   17bd0:	cmp	r5, #0
   17bd4:	clzeq	r1, r4
   17bd8:	addeq	r1, r1, #32
   17bdc:	clzne	r1, r5
   17be0:	sub	ip, ip, r1
   17be4:	sub	sl, ip, #32
   17be8:	lsl	r9, r3, ip
   17bec:	rsb	fp, ip, #32
   17bf0:	orr	r9, r9, r2, lsl sl
   17bf4:	orr	r9, r9, r2, lsr fp
   17bf8:	lsl	r8, r2, ip
   17bfc:	cmp	r5, r9
   17c00:	cmpeq	r4, r8
   17c04:	movcc	r0, #0
   17c08:	movcc	r1, r0
   17c0c:	bcc	17c28 <dcngettext@plt+0x695c>
   17c10:	mov	r0, #1
   17c14:	subs	r4, r4, r8
   17c18:	lsl	r1, r0, sl
   17c1c:	orr	r1, r1, r0, lsr fp
   17c20:	lsl	r0, r0, ip
   17c24:	sbc	r5, r5, r9
   17c28:	cmp	ip, #0
   17c2c:	beq	17cb8 <dcngettext@plt+0x69ec>
   17c30:	lsr	r6, r8, #1
   17c34:	orr	r6, r6, r9, lsl #31
   17c38:	lsr	r7, r9, #1
   17c3c:	mov	r2, ip
   17c40:	b	17c64 <dcngettext@plt+0x6998>
   17c44:	subs	r3, r4, r6
   17c48:	sbc	r8, r5, r7
   17c4c:	adds	r3, r3, r3
   17c50:	adc	r8, r8, r8
   17c54:	adds	r4, r3, #1
   17c58:	adc	r5, r8, #0
   17c5c:	subs	r2, r2, #1
   17c60:	beq	17c80 <dcngettext@plt+0x69b4>
   17c64:	cmp	r5, r7
   17c68:	cmpeq	r4, r6
   17c6c:	bcs	17c44 <dcngettext@plt+0x6978>
   17c70:	adds	r4, r4, r4
   17c74:	adc	r5, r5, r5
   17c78:	subs	r2, r2, #1
   17c7c:	bne	17c64 <dcngettext@plt+0x6998>
   17c80:	lsr	r3, r4, ip
   17c84:	orr	r3, r3, r5, lsl fp
   17c88:	lsr	r2, r5, ip
   17c8c:	orr	r3, r3, r5, lsr sl
   17c90:	adds	r0, r0, r4
   17c94:	mov	r4, r3
   17c98:	lsl	r3, r2, ip
   17c9c:	orr	r3, r3, r4, lsl sl
   17ca0:	lsl	ip, r4, ip
   17ca4:	orr	r3, r3, r4, lsr fp
   17ca8:	adc	r1, r1, r5
   17cac:	subs	r0, r0, ip
   17cb0:	mov	r5, r2
   17cb4:	sbc	r1, r1, r3
   17cb8:	cmp	lr, #0
   17cbc:	strdne	r4, [lr]
   17cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17cc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17cc8:	mov	r7, r0
   17ccc:	ldr	r6, [pc, #72]	; 17d1c <dcngettext@plt+0x6a50>
   17cd0:	ldr	r5, [pc, #72]	; 17d20 <dcngettext@plt+0x6a54>
   17cd4:	add	r6, pc, r6
   17cd8:	add	r5, pc, r5
   17cdc:	sub	r6, r6, r5
   17ce0:	mov	r8, r1
   17ce4:	mov	r9, r2
   17ce8:	bl	10f70 <calloc@plt-0x20>
   17cec:	asrs	r6, r6, #2
   17cf0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17cf4:	mov	r4, #0
   17cf8:	add	r4, r4, #1
   17cfc:	ldr	r3, [r5], #4
   17d00:	mov	r2, r9
   17d04:	mov	r1, r8
   17d08:	mov	r0, r7
   17d0c:	blx	r3
   17d10:	cmp	r6, r4
   17d14:	bne	17cf8 <dcngettext@plt+0x6a2c>
   17d18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d1c:	andeq	r1, r1, r8, lsr r2
   17d20:	andeq	r1, r1, r0, lsr r2
   17d24:	bx	lr
   17d28:	ldr	r3, [pc, #12]	; 17d3c <dcngettext@plt+0x6a70>
   17d2c:	mov	r1, #0
   17d30:	add	r3, pc, r3
   17d34:	ldr	r2, [r3]
   17d38:	b	111a0 <__cxa_atexit@plt>
   17d3c:	strdeq	r1, [r1], -r4

Disassembly of section .fini:

00017d40 <.fini>:
   17d40:	push	{r3, lr}
   17d44:	pop	{r3, pc}
