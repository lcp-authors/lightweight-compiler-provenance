
../repos/charybdis/extensions/.libs/extb_canjoin.so:     file format elf32-littlearm


Disassembly of section .init:

000003c4 <_init>:
 3c4:	push	{r3, lr}
 3c8:	bl	414 <call_weak_fn>
 3cc:	pop	{r3, pc}

Disassembly of section .plt:

000003d0 <.plt>:
 3d0:	push	{lr}		; (str lr, [sp, #-4]!)
 3d4:	ldr	lr, [pc, #4]	; 3e0 <.plt+0x10>
 3d8:	add	lr, pc, lr
 3dc:	ldr	pc, [lr, #8]!
 3e0:	.word	0x00010c20

000003e4 <__cxa_finalize@plt>:
 3e4:	add	ip, pc, #0, 12
 3e8:	add	ip, ip, #16, 20	; 0x10000
 3ec:	ldr	pc, [ip, #3104]!	; 0xc20

000003f0 <find_channel@plt>:
 3f0:	add	ip, pc, #0, 12
 3f4:	add	ip, ip, #16, 20	; 0x10000
 3f8:	ldr	pc, [ip, #3096]!	; 0xc18

000003fc <__gmon_start__@plt>:
 3fc:	add	ip, pc, #0, 12
 400:	add	ip, ip, #16, 20	; 0x10000
 404:	ldr	pc, [ip, #3088]!	; 0xc10

00000408 <is_banned@plt>:
 408:	add	ip, pc, #0, 12
 40c:	add	ip, ip, #16, 20	; 0x10000
 410:	ldr	pc, [ip, #3080]!	; 0xc08

Disassembly of section .text:

00000414 <call_weak_fn>:
 414:	ldr	r3, [pc, #20]	; 430 <call_weak_fn+0x1c>
 418:	ldr	r2, [pc, #20]	; 434 <call_weak_fn+0x20>
 41c:	add	r3, pc, r3
 420:	ldr	r2, [r3, r2]
 424:	cmp	r2, #0
 428:	bxeq	lr
 42c:	b	3fc <__gmon_start__@plt>
 430:	.word	0x00010bdc
 434:	.word	0x00000024

00000438 <deregister_tm_clones>:
 438:	ldr	r3, [pc, #52]	; 474 <deregister_tm_clones+0x3c>
 43c:	ldr	r0, [pc, #52]	; 478 <deregister_tm_clones+0x40>
 440:	add	r3, pc, r3
 444:	add	r0, pc, r0
 448:	add	r3, r3, #3
 44c:	sub	r3, r3, r0
 450:	cmp	r3, #6
 454:	ldr	r3, [pc, #32]	; 47c <deregister_tm_clones+0x44>
 458:	add	r3, pc, r3
 45c:	bxls	lr
 460:	ldr	r2, [pc, #24]	; 480 <deregister_tm_clones+0x48>
 464:	ldr	r3, [r3, r2]
 468:	cmp	r3, #0
 46c:	bxeq	lr
 470:	bx	r3
 474:	.word	0x00010c18
 478:	.word	0x00010c14
 47c:	.word	0x00010ba0
 480:	.word	0x00000020

00000484 <register_tm_clones>:
 484:	ldr	r1, [pc, #56]	; 4c4 <register_tm_clones+0x40>
 488:	ldr	r0, [pc, #56]	; 4c8 <register_tm_clones+0x44>
 48c:	add	r1, pc, r1
 490:	add	r0, pc, r0
 494:	sub	r1, r1, r0
 498:	ldr	r3, [pc, #44]	; 4cc <register_tm_clones+0x48>
 49c:	asr	r1, r1, #2
 4a0:	add	r3, pc, r3
 4a4:	add	r1, r1, r1, lsr #31
 4a8:	asrs	r1, r1, #1
 4ac:	bxeq	lr
 4b0:	ldr	r2, [pc, #24]	; 4d0 <register_tm_clones+0x4c>
 4b4:	ldr	r3, [r3, r2]
 4b8:	cmp	r3, #0
 4bc:	bxeq	lr
 4c0:	bx	r3
 4c4:	.word	0x00010bcc
 4c8:	.word	0x00010bc8
 4cc:	.word	0x00010b58
 4d0:	.word	0x00000030

000004d4 <__do_global_dtors_aux>:
 4d4:	ldr	r3, [pc, #76]	; 528 <__do_global_dtors_aux+0x54>
 4d8:	ldr	r2, [pc, #76]	; 52c <__do_global_dtors_aux+0x58>
 4dc:	add	r3, pc, r3
 4e0:	add	r2, pc, r2
 4e4:	ldrb	r3, [r3]
 4e8:	cmp	r3, #0
 4ec:	bxne	lr
 4f0:	ldr	r3, [pc, #56]	; 530 <__do_global_dtors_aux+0x5c>
 4f4:	push	{r4, lr}
 4f8:	ldr	r3, [r2, r3]
 4fc:	cmp	r3, #0
 500:	beq	510 <__do_global_dtors_aux+0x3c>
 504:	ldr	r3, [pc, #40]	; 534 <__do_global_dtors_aux+0x60>
 508:	ldr	r0, [pc, r3]
 50c:	bl	3e4 <__cxa_finalize@plt>
 510:	bl	438 <deregister_tm_clones>
 514:	ldr	r3, [pc, #28]	; 538 <__do_global_dtors_aux+0x64>
 518:	mov	r2, #1
 51c:	add	r3, pc, r3
 520:	strb	r2, [r3]
 524:	pop	{r4, pc}
 528:	.word	0x00010b7c
 52c:	.word	0x00010b18
 530:	.word	0x0000001c
 534:	.word	0x00010b24
 538:	.word	0x00010b3c

0000053c <frame_dummy>:
 53c:	ldr	r0, [pc, #56]	; 57c <frame_dummy+0x40>
 540:	ldr	r3, [pc, #56]	; 580 <frame_dummy+0x44>
 544:	add	r0, pc, r0
 548:	ldr	r2, [r0]
 54c:	add	r3, pc, r3
 550:	cmp	r2, #0
 554:	bne	55c <frame_dummy+0x20>
 558:	b	484 <register_tm_clones>
 55c:	ldr	r2, [pc, #32]	; 584 <frame_dummy+0x48>
 560:	ldr	r3, [r3, r2]
 564:	cmp	r3, #0
 568:	beq	558 <frame_dummy+0x1c>
 56c:	push	{r4, lr}
 570:	blx	r3
 574:	pop	{r4, lr}
 578:	b	484 <register_tm_clones>
 57c:	.word	0x000109b0
 580:	.word	0x00010aac
 584:	.word	0x00000028

00000588 <_modinit>:
 588:	ldr	r3, [pc, #28]	; 5ac <_modinit+0x24>
 58c:	add	r3, pc, r3
 590:	ldr	r2, [pc, #24]	; 5b0 <_modinit+0x28>
 594:	ldr	r3, [r3, r2]
 598:	ldr	r2, [pc, #20]	; 5b4 <_modinit+0x2c>
 59c:	add	r2, pc, r2
 5a0:	str	r2, [r3, #424]	; 0x1a8
 5a4:	mov	r0, #0
 5a8:	bx	lr
 5ac:	.word	0x00010a6c
 5b0:	.word	0x0000002c
 5b4:	.word	0x00000038

000005b8 <_moddeinit>:
 5b8:	ldr	r3, [pc, #20]	; 5d4 <_moddeinit+0x1c>
 5bc:	add	r3, pc, r3
 5c0:	ldr	r2, [pc, #16]	; 5d8 <_moddeinit+0x20>
 5c4:	ldr	r3, [r3, r2]
 5c8:	mov	r2, #0
 5cc:	str	r2, [r3, #424]	; 0x1a8
 5d0:	bx	lr
 5d4:	.word	0x00010a3c
 5d8:	.word	0x0000002c

000005dc <eb_canjoin>:
 5dc:	push	{r4, r5, r6, lr}
 5e0:	sub	sp, sp, #8
 5e4:	ldr	r3, [pc, #184]	; 6a4 <eb_canjoin+0xc8>
 5e8:	add	r3, pc, r3
 5ec:	ldr	r3, [r3]
 5f0:	mov	r5, r0
 5f4:	clz	r0, r0
 5f8:	lsr	r0, r0, #5
 5fc:	cmp	r3, #0
 600:	orrne	r0, r0, #1
 604:	cmp	r0, #0
 608:	bne	694 <eb_canjoin+0xb8>
 60c:	mov	r4, r2
 610:	mov	r6, r1
 614:	mov	r0, r5
 618:	bl	3f0 <find_channel@plt>
 61c:	mov	ip, r0
 620:	cmp	r0, r4
 624:	cmpne	r0, #0
 628:	beq	69c <eb_canjoin+0xc0>
 62c:	ldr	r3, [r4, #236]	; 0xec
 630:	ldrb	r3, [r3]
 634:	cmp	r3, #35	; 0x23
 638:	beq	680 <eb_canjoin+0xa4>
 63c:	ldr	r4, [pc, #100]	; 6a8 <eb_canjoin+0xcc>
 640:	add	r4, pc, r4
 644:	mov	r3, #1
 648:	str	r3, [r4]
 64c:	mov	r5, #0
 650:	str	r5, [sp]
 654:	mov	r3, r5
 658:	mov	r2, r5
 65c:	mov	r1, r6
 660:	mov	r0, ip
 664:	bl	408 <is_banned@plt>
 668:	cmp	r0, #268435456	; 0x10000000
 66c:	movne	r0, #0
 670:	moveq	r0, #1
 674:	str	r5, [r4]
 678:	add	sp, sp, #8
 67c:	pop	{r4, r5, r6, pc}
 680:	ldrb	r3, [r5]
 684:	cmp	r3, #38	; 0x26
 688:	bne	63c <eb_canjoin+0x60>
 68c:	mvn	r0, #0
 690:	b	678 <eb_canjoin+0x9c>
 694:	mvn	r0, #0
 698:	b	678 <eb_canjoin+0x9c>
 69c:	mvn	r0, #0
 6a0:	b	678 <eb_canjoin+0x9c>
 6a4:	.word	0x00010a74
 6a8:	.word	0x00010a1c

Disassembly of section .fini:

000006ac <_fini>:
 6ac:	push	{r3, lr}
 6b0:	pop	{r3, pc}
