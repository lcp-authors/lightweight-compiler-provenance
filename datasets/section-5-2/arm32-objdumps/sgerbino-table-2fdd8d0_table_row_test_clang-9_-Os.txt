
../repos/sgerbino-table-2fdd8d0/bin/table_row_test:     file format elf32-littlearm


Disassembly of section .init:

00011ee0 <.init>:
   11ee0:	push	{r3, lr}
   11ee4:	bl	11ff0 <_start@@Base+0x3c>
   11ee8:	pop	{r3, pc}

Disassembly of section .plt:

00011eec <strcmp@plt-0x14>:
   11eec:	push	{lr}		; (str lr, [sp, #-4]!)
   11ef0:	ldr	lr, [pc, #4]	; 11efc <strcmp@plt-0x4>
   11ef4:	add	lr, pc, lr
   11ef8:	ldr	pc, [lr, #8]!
   11efc:	andeq	r3, r1, r4, lsl #2

00011f00 <strcmp@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #77824	; 0x13000
   11f08:	ldr	pc, [ip, #260]!	; 0x104

00011f0c <printf@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #77824	; 0x13000
   11f14:	ldr	pc, [ip, #252]!	; 0xfc

00011f18 <free@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #77824	; 0x13000
   11f20:	ldr	pc, [ip, #244]!	; 0xf4

00011f24 <time@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #77824	; 0x13000
   11f2c:	ldr	pc, [ip, #236]!	; 0xec

00011f30 <realloc@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #77824	; 0x13000
   11f38:	ldr	pc, [ip, #228]!	; 0xe4

00011f3c <strcpy@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #77824	; 0x13000
   11f44:	ldr	pc, [ip, #220]!	; 0xdc

00011f48 <malloc@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #77824	; 0x13000
   11f50:	ldr	pc, [ip, #212]!	; 0xd4

00011f54 <__libc_start_main@plt>:
   11f54:	add	ip, pc, #0, 12
   11f58:	add	ip, ip, #77824	; 0x13000
   11f5c:	ldr	pc, [ip, #204]!	; 0xcc

00011f60 <__gmon_start__@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #77824	; 0x13000
   11f68:	ldr	pc, [ip, #196]!	; 0xc4

00011f6c <strlen@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #77824	; 0x13000
   11f74:	ldr	pc, [ip, #188]!	; 0xbc

00011f78 <srand@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #77824	; 0x13000
   11f80:	ldr	pc, [ip, #180]!	; 0xb4

00011f84 <snprintf@plt>:
   11f84:	add	ip, pc, #0, 12
   11f88:	add	ip, ip, #77824	; 0x13000
   11f8c:	ldr	pc, [ip, #172]!	; 0xac

00011f90 <__isoc99_sscanf@plt>:
   11f90:	add	ip, pc, #0, 12
   11f94:	add	ip, ip, #77824	; 0x13000
   11f98:	ldr	pc, [ip, #164]!	; 0xa4

00011f9c <rand@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #77824	; 0x13000
   11fa4:	ldr	pc, [ip, #156]!	; 0x9c

00011fa8 <abort@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #77824	; 0x13000
   11fb0:	ldr	pc, [ip, #148]!	; 0x94

Disassembly of section .text:

00011fb4 <_start@@Base>:
   11fb4:	mov	fp, #0
   11fb8:	mov	lr, #0
   11fbc:	pop	{r1}		; (ldr r1, [sp], #4)
   11fc0:	mov	r2, sp
   11fc4:	push	{r2}		; (str r2, [sp, #-4]!)
   11fc8:	push	{r0}		; (str r0, [sp, #-4]!)
   11fcc:	ldr	ip, [pc, #16]	; 11fe4 <_start@@Base+0x30>
   11fd0:	push	{ip}		; (str ip, [sp, #-4]!)
   11fd4:	ldr	r0, [pc, #12]	; 11fe8 <_start@@Base+0x34>
   11fd8:	ldr	r3, [pc, #12]	; 11fec <_start@@Base+0x38>
   11fdc:	bl	11f54 <__libc_start_main@plt>
   11fe0:	bl	11fa8 <abort@plt>
   11fe4:	andeq	r4, r1, r0, lsr #23
   11fe8:	andeq	r2, r1, r4, lsr #1
   11fec:	andeq	r4, r1, r0, asr #22
   11ff0:	ldr	r3, [pc, #20]	; 1200c <_start@@Base+0x58>
   11ff4:	ldr	r2, [pc, #20]	; 12010 <_start@@Base+0x5c>
   11ff8:	add	r3, pc, r3
   11ffc:	ldr	r2, [r3, r2]
   12000:	cmp	r2, #0
   12004:	bxeq	lr
   12008:	b	11f60 <__gmon_start__@plt>
   1200c:	andeq	r3, r1, r0
   12010:	andeq	r0, r0, r8, asr #32
   12014:	ldr	r0, [pc, #24]	; 12034 <_start@@Base+0x80>
   12018:	ldr	r3, [pc, #24]	; 12038 <_start@@Base+0x84>
   1201c:	cmp	r3, r0
   12020:	bxeq	lr
   12024:	ldr	r3, [pc, #16]	; 1203c <_start@@Base+0x88>
   12028:	cmp	r3, #0
   1202c:	bxeq	lr
   12030:	bx	r3
   12034:	andeq	r5, r2, r4, asr r0
   12038:	andeq	r5, r2, r4, asr r0
   1203c:	andeq	r0, r0, r0
   12040:	ldr	r0, [pc, #36]	; 1206c <_start@@Base+0xb8>
   12044:	ldr	r1, [pc, #36]	; 12070 <_start@@Base+0xbc>
   12048:	sub	r1, r1, r0
   1204c:	asr	r1, r1, #2
   12050:	add	r1, r1, r1, lsr #31
   12054:	asrs	r1, r1, #1
   12058:	bxeq	lr
   1205c:	ldr	r3, [pc, #16]	; 12074 <_start@@Base+0xc0>
   12060:	cmp	r3, #0
   12064:	bxeq	lr
   12068:	bx	r3
   1206c:	andeq	r5, r2, r4, asr r0
   12070:	andeq	r5, r2, r4, asr r0
   12074:	andeq	r0, r0, r0
   12078:	push	{r4, lr}
   1207c:	ldr	r4, [pc, #24]	; 1209c <_start@@Base+0xe8>
   12080:	ldrb	r3, [r4]
   12084:	cmp	r3, #0
   12088:	popne	{r4, pc}
   1208c:	bl	12014 <_start@@Base+0x60>
   12090:	mov	r3, #1
   12094:	strb	r3, [r4]
   12098:	pop	{r4, pc}
   1209c:	andeq	r5, r2, r4, asr r0
   120a0:	b	12040 <_start@@Base+0x8c>

000120a4 <main@@Base>:
   120a4:	push	{r4, r5, r6, sl, fp, lr}
   120a8:	add	fp, sp, #16
   120ac:	sub	sp, sp, #64	; 0x40
   120b0:	add	r0, sp, #4
   120b4:	bl	11f24 <time@plt>
   120b8:	bl	11f78 <srand@plt>
   120bc:	bl	11f9c <rand@plt>
   120c0:	add	r5, sp, #8
   120c4:	mov	r4, r0
   120c8:	mov	r0, r5
   120cc:	bl	12194 <table_init@@Base>
   120d0:	movw	r0, #34079	; 0x851f
   120d4:	mov	r6, #0
   120d8:	movt	r0, #20971	; 0x51eb
   120dc:	umull	r0, r1, r4, r0
   120e0:	lsr	r0, r1, #5
   120e4:	mov	r1, #100	; 0x64
   120e8:	mls	r0, r0, r1, r4
   120ec:	add	r4, r0, #100	; 0x64
   120f0:	mov	r0, r5
   120f4:	bl	13828 <table_add_row@@Base>
   120f8:	add	r6, r6, #1
   120fc:	cmp	r6, r4
   12100:	bcc	120f0 <main@@Base+0x4c>
   12104:	add	r0, sp, #8
   12108:	bl	13820 <table_get_row_length@@Base>
   1210c:	mov	r5, #0
   12110:	cmp	r0, r4
   12114:	beq	12130 <main@@Base+0x8c>
   12118:	mov	r2, r0
   1211c:	movw	r0, #19376	; 0x4bb0
   12120:	mov	r1, r4
   12124:	movt	r0, #1
   12128:	bl	11f0c <printf@plt>
   1212c:	mvn	r5, #0
   12130:	add	r0, sp, #8
   12134:	bl	121f0 <table_destroy@@Base>
   12138:	mov	r0, r5
   1213c:	sub	sp, fp, #16
   12140:	pop	{r4, r5, r6, sl, fp, pc}

00012144 <table_new@@Base>:
   12144:	push	{fp, lr}
   12148:	mov	fp, sp
   1214c:	mov	r0, #56	; 0x38
   12150:	bl	11f48 <malloc@plt>
   12154:	vmov.i32	q8, #0	; 0x00000000
   12158:	mov	r1, #0
   1215c:	mov	r2, #10
   12160:	mov	r3, #20
   12164:	str	r1, [r0]
   12168:	stmib	r0, {r1, r2}
   1216c:	str	r1, [r0, #12]
   12170:	str	r1, [r0, #16]
   12174:	str	r1, [r0, #20]
   12178:	str	r3, [r0, #24]
   1217c:	str	r1, [r0, #28]
   12180:	str	r2, [r0, #48]	; 0x30
   12184:	str	r1, [r0, #52]	; 0x34
   12188:	add	r1, r0, #32
   1218c:	vst1.32	{d16-d17}, [r1]
   12190:	pop	{fp, pc}

00012194 <table_init@@Base>:
   12194:	vmov.i32	q8, #0	; 0x00000000
   12198:	mov	r1, #0
   1219c:	mov	r2, #10
   121a0:	mov	r3, #20
   121a4:	str	r1, [r0]
   121a8:	stmib	r0, {r1, r2}
   121ac:	str	r1, [r0, #12]
   121b0:	str	r1, [r0, #16]
   121b4:	str	r1, [r0, #20]
   121b8:	str	r3, [r0, #24]
   121bc:	str	r1, [r0, #28]
   121c0:	str	r2, [r0, #48]	; 0x30
   121c4:	str	r1, [r0, #52]	; 0x34
   121c8:	add	r0, r0, #32
   121cc:	vst1.32	{d16-d17}, [r0]
   121d0:	bx	lr

000121d4 <table_delete@@Base>:
   121d4:	push	{r4, sl, fp, lr}
   121d8:	add	fp, sp, #8
   121dc:	mov	r4, r0
   121e0:	bl	121f0 <table_destroy@@Base>
   121e4:	mov	r0, r4
   121e8:	pop	{r4, sl, fp, lr}
   121ec:	b	11f18 <free@plt>

000121f0 <table_destroy@@Base>:
   121f0:	cmp	r0, #0
   121f4:	bxeq	lr
   121f8:	push	{r4, r5, r6, sl, fp, lr}
   121fc:	add	fp, sp, #16
   12200:	mvn	r1, #0
   12204:	mvn	r2, #0
   12208:	mov	r3, #64	; 0x40
   1220c:	mov	r4, r0
   12210:	bl	12a74 <table_notify@@Base>
   12214:	mov	r0, r4
   12218:	bl	13820 <table_get_row_length@@Base>
   1221c:	cmp	r0, #1
   12220:	blt	12244 <table_destroy@@Base+0x54>
   12224:	mov	r5, r0
   12228:	mov	r6, #0
   1222c:	mov	r0, r4
   12230:	mov	r1, r6
   12234:	bl	137c4 <table_row_destroy@@Base>
   12238:	add	r6, r6, #1
   1223c:	cmp	r5, r6
   12240:	bne	1222c <table_destroy@@Base+0x3c>
   12244:	ldr	r0, [r4, #16]
   12248:	cmp	r0, #0
   1224c:	beq	12254 <table_destroy@@Base+0x64>
   12250:	bl	11f18 <free@plt>
   12254:	mov	r0, r4
   12258:	bl	12b68 <table_get_column_length@@Base>
   1225c:	cmp	r0, #1
   12260:	blt	12284 <table_destroy@@Base+0x94>
   12264:	mov	r5, r0
   12268:	mov	r6, #0
   1226c:	mov	r0, r4
   12270:	mov	r1, r6
   12274:	bl	12b50 <table_column_destroy@@Base>
   12278:	add	r6, r6, #1
   1227c:	cmp	r5, r6
   12280:	bne	1226c <table_destroy@@Base+0x7c>
   12284:	ldr	r0, [r4]
   12288:	cmp	r0, #0
   1228c:	beq	12294 <table_destroy@@Base+0xa4>
   12290:	bl	11f18 <free@plt>
   12294:	ldr	r0, [r4, #36]	; 0x24
   12298:	cmp	r0, #0
   1229c:	beq	122a4 <table_destroy@@Base+0xb4>
   122a0:	bl	11f18 <free@plt>
   122a4:	ldr	r0, [r4, #40]	; 0x28
   122a8:	cmp	r0, #0
   122ac:	beq	122b4 <table_destroy@@Base+0xc4>
   122b0:	bl	11f18 <free@plt>
   122b4:	ldr	r0, [r4, #44]	; 0x2c
   122b8:	cmp	r0, #0
   122bc:	pop	{r4, r5, r6, sl, fp, lr}
   122c0:	beq	122c8 <table_destroy@@Base+0xd8>
   122c4:	b	11f18 <free@plt>
   122c8:	bx	lr

000122cc <table_dupe@@Base>:
   122cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122d0:	add	fp, sp, #28
   122d4:	sub	sp, sp, #12
   122d8:	mov	r4, r0
   122dc:	bl	13820 <table_get_row_length@@Base>
   122e0:	mov	r8, r0
   122e4:	mov	r0, r4
   122e8:	bl	12b68 <table_get_column_length@@Base>
   122ec:	mov	r6, r0
   122f0:	mov	r0, #56	; 0x38
   122f4:	bl	11f48 <malloc@plt>
   122f8:	vmov.i32	q8, #0	; 0x00000000
   122fc:	mov	sl, r0
   12300:	mov	r5, #0
   12304:	mov	r0, #10
   12308:	mov	r1, #20
   1230c:	cmp	r6, #1
   12310:	str	r5, [sl]
   12314:	str	r5, [sl, #4]
   12318:	str	r0, [sl, #8]
   1231c:	str	r5, [sl, #12]
   12320:	str	r5, [sl, #16]
   12324:	str	r5, [sl, #20]
   12328:	str	r1, [sl, #24]
   1232c:	str	r5, [sl, #28]
   12330:	str	r0, [sl, #48]	; 0x30
   12334:	add	r0, sl, #32
   12338:	str	r5, [sl, #52]	; 0x34
   1233c:	vst1.32	{d16-d17}, [r0]
   12340:	blt	1237c <table_dupe@@Base+0xb0>
   12344:	mov	r0, r4
   12348:	mov	r1, r5
   1234c:	bl	12bd0 <table_get_column_name@@Base>
   12350:	mov	r7, r0
   12354:	mov	r0, r4
   12358:	mov	r1, r5
   1235c:	bl	12be0 <table_get_column_data_type@@Base>
   12360:	mov	r2, r0
   12364:	mov	r0, sl
   12368:	mov	r1, r7
   1236c:	bl	12bf4 <table_add_column@@Base>
   12370:	add	r5, r5, #1
   12374:	cmp	r6, r5
   12378:	bne	12344 <table_dupe@@Base+0x78>
   1237c:	cmp	r8, #1
   12380:	blt	127e8 <table_dupe@@Base+0x51c>
   12384:	mov	r5, #0
   12388:	add	r9, sp, #8
   1238c:	mov	r0, sl
   12390:	bl	13828 <table_add_row@@Base>
   12394:	cmp	r6, #1
   12398:	blt	127dc <table_dupe@@Base+0x510>
   1239c:	mov	r7, #0
   123a0:	mov	r0, r4
   123a4:	mov	r1, r7
   123a8:	bl	12be0 <table_get_column_data_type@@Base>
   123ac:	cmp	r0, #23
   123b0:	bhi	127d0 <table_dupe@@Base+0x504>
   123b4:	add	r1, pc, #0
   123b8:	ldr	pc, [r1, r0, lsl #2]
   123bc:	andeq	r2, r1, ip, lsl r4
   123c0:	andeq	r2, r1, r4, asr #8
   123c4:	andeq	r2, r1, ip, ror #8
   123c8:	muleq	r1, r4, r4
   123cc:			; <UNDEFINED> instruction: 0x000124bc
   123d0:	andeq	r2, r1, r4, ror #9
   123d4:	andeq	r2, r1, ip, lsl #10
   123d8:	andeq	r2, r1, r4, lsr r5
   123dc:	andeq	r2, r1, ip, asr r5
   123e0:	andeq	r2, r1, r4, lsl #11
   123e4:	andeq	r2, r1, ip, lsr #11
   123e8:	ldrdeq	r2, [r1], -r4
   123ec:	strdeq	r2, [r1], -ip
   123f0:	andeq	r2, r1, r4, lsr #12
   123f4:	andeq	r2, r1, ip, asr #12
   123f8:	andeq	r2, r1, r4, ror r6
   123fc:	muleq	r1, ip, r6
   12400:	andeq	r2, r1, r0, asr #13
   12404:	andeq	r2, r1, r4, ror #13
   12408:	andeq	r2, r1, r8, lsl #14
   1240c:	andeq	r2, r1, r0, lsr r7
   12410:	andeq	r2, r1, r8, asr r7
   12414:	andeq	r2, r1, r0, lsl #15
   12418:	andeq	r2, r1, r8, lsr #15
   1241c:	mov	r0, r4
   12420:	mov	r1, r5
   12424:	mov	r2, r7
   12428:	bl	13574 <table_get_int@@Base>
   1242c:	mov	r3, r0
   12430:	mov	r0, sl
   12434:	mov	r1, r5
   12438:	mov	r2, r7
   1243c:	bl	13d24 <table_set_int@@Base>
   12440:	b	127d0 <table_dupe@@Base+0x504>
   12444:	mov	r0, r4
   12448:	mov	r1, r5
   1244c:	mov	r2, r7
   12450:	bl	1358c <table_get_uint@@Base>
   12454:	mov	r3, r0
   12458:	mov	r0, sl
   1245c:	mov	r1, r5
   12460:	mov	r2, r7
   12464:	bl	13d4c <table_set_uint@@Base>
   12468:	b	127d0 <table_dupe@@Base+0x504>
   1246c:	mov	r0, r4
   12470:	mov	r1, r5
   12474:	mov	r2, r7
   12478:	bl	135a4 <table_get_int8@@Base>
   1247c:	mov	r3, r0
   12480:	mov	r0, sl
   12484:	mov	r1, r5
   12488:	mov	r2, r7
   1248c:	bl	13d74 <table_set_int8@@Base>
   12490:	b	127d0 <table_dupe@@Base+0x504>
   12494:	mov	r0, r4
   12498:	mov	r1, r5
   1249c:	mov	r2, r7
   124a0:	bl	135bc <table_get_uint8@@Base>
   124a4:	mov	r3, r0
   124a8:	mov	r0, sl
   124ac:	mov	r1, r5
   124b0:	mov	r2, r7
   124b4:	bl	13d9c <table_set_uint8@@Base>
   124b8:	b	127d0 <table_dupe@@Base+0x504>
   124bc:	mov	r0, r4
   124c0:	mov	r1, r5
   124c4:	mov	r2, r7
   124c8:	bl	135d4 <table_get_int16@@Base>
   124cc:	mov	r3, r0
   124d0:	mov	r0, sl
   124d4:	mov	r1, r5
   124d8:	mov	r2, r7
   124dc:	bl	13dc4 <table_set_int16@@Base>
   124e0:	b	127d0 <table_dupe@@Base+0x504>
   124e4:	mov	r0, r4
   124e8:	mov	r1, r5
   124ec:	mov	r2, r7
   124f0:	bl	135ec <table_get_uint16@@Base>
   124f4:	mov	r3, r0
   124f8:	mov	r0, sl
   124fc:	mov	r1, r5
   12500:	mov	r2, r7
   12504:	bl	13dec <table_set_uint16@@Base>
   12508:	b	127d0 <table_dupe@@Base+0x504>
   1250c:	mov	r0, r4
   12510:	mov	r1, r5
   12514:	mov	r2, r7
   12518:	bl	13604 <table_get_int32@@Base>
   1251c:	mov	r3, r0
   12520:	mov	r0, sl
   12524:	mov	r1, r5
   12528:	mov	r2, r7
   1252c:	bl	13e14 <table_set_int32@@Base>
   12530:	b	127d0 <table_dupe@@Base+0x504>
   12534:	mov	r0, r4
   12538:	mov	r1, r5
   1253c:	mov	r2, r7
   12540:	bl	1361c <table_get_uint32@@Base>
   12544:	mov	r3, r0
   12548:	mov	r0, sl
   1254c:	mov	r1, r5
   12550:	mov	r2, r7
   12554:	bl	13e3c <table_set_uint32@@Base>
   12558:	b	127d0 <table_dupe@@Base+0x504>
   1255c:	mov	r0, r4
   12560:	mov	r1, r5
   12564:	mov	r2, r7
   12568:	bl	13634 <table_get_int64@@Base>
   1256c:	stm	sp, {r0, r1}
   12570:	mov	r0, sl
   12574:	mov	r1, r5
   12578:	mov	r2, r7
   1257c:	bl	13e64 <table_set_int64@@Base>
   12580:	b	127d0 <table_dupe@@Base+0x504>
   12584:	mov	r0, r4
   12588:	mov	r1, r5
   1258c:	mov	r2, r7
   12590:	bl	1364c <table_get_uint64@@Base>
   12594:	stm	sp, {r0, r1}
   12598:	mov	r0, sl
   1259c:	mov	r1, r5
   125a0:	mov	r2, r7
   125a4:	bl	13e98 <table_set_uint64@@Base>
   125a8:	b	127d0 <table_dupe@@Base+0x504>
   125ac:	mov	r0, r4
   125b0:	mov	r1, r5
   125b4:	mov	r2, r7
   125b8:	bl	13664 <table_get_short@@Base>
   125bc:	mov	r3, r0
   125c0:	mov	r0, sl
   125c4:	mov	r1, r5
   125c8:	mov	r2, r7
   125cc:	bl	13ecc <table_set_short@@Base>
   125d0:	b	127d0 <table_dupe@@Base+0x504>
   125d4:	mov	r0, r4
   125d8:	mov	r1, r5
   125dc:	mov	r2, r7
   125e0:	bl	1367c <table_get_ushort@@Base>
   125e4:	mov	r3, r0
   125e8:	mov	r0, sl
   125ec:	mov	r1, r5
   125f0:	mov	r2, r7
   125f4:	bl	13ef4 <table_set_ushort@@Base>
   125f8:	b	127d0 <table_dupe@@Base+0x504>
   125fc:	mov	r0, r4
   12600:	mov	r1, r5
   12604:	mov	r2, r7
   12608:	bl	13694 <table_get_long@@Base>
   1260c:	mov	r3, r0
   12610:	mov	r0, sl
   12614:	mov	r1, r5
   12618:	mov	r2, r7
   1261c:	bl	13f1c <table_set_long@@Base>
   12620:	b	127d0 <table_dupe@@Base+0x504>
   12624:	mov	r0, r4
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	136ac <table_get_ulong@@Base>
   12634:	mov	r3, r0
   12638:	mov	r0, sl
   1263c:	mov	r1, r5
   12640:	mov	r2, r7
   12644:	bl	13f44 <table_set_ulong@@Base>
   12648:	b	127d0 <table_dupe@@Base+0x504>
   1264c:	mov	r0, r4
   12650:	mov	r1, r5
   12654:	mov	r2, r7
   12658:	bl	136c4 <table_get_llong@@Base>
   1265c:	stm	sp, {r0, r1}
   12660:	mov	r0, sl
   12664:	mov	r1, r5
   12668:	mov	r2, r7
   1266c:	bl	13f6c <table_set_llong@@Base>
   12670:	b	127d0 <table_dupe@@Base+0x504>
   12674:	mov	r0, r4
   12678:	mov	r1, r5
   1267c:	mov	r2, r7
   12680:	bl	136dc <table_get_ullong@@Base>
   12684:	stm	sp, {r0, r1}
   12688:	mov	r0, sl
   1268c:	mov	r1, r5
   12690:	mov	r2, r7
   12694:	bl	13fa0 <table_set_ullong@@Base>
   12698:	b	127d0 <table_dupe@@Base+0x504>
   1269c:	mov	r0, r4
   126a0:	mov	r1, r5
   126a4:	mov	r2, r7
   126a8:	bl	136f4 <table_get_float@@Base>
   126ac:	mov	r0, sl
   126b0:	mov	r1, r5
   126b4:	mov	r2, r7
   126b8:	bl	13fd4 <table_set_float@@Base>
   126bc:	b	127d0 <table_dupe@@Base+0x504>
   126c0:	mov	r0, r4
   126c4:	mov	r1, r5
   126c8:	mov	r2, r7
   126cc:	bl	1370c <table_get_double@@Base>
   126d0:	mov	r0, sl
   126d4:	mov	r1, r5
   126d8:	mov	r2, r7
   126dc:	bl	13ffc <table_set_double@@Base>
   126e0:	b	127d0 <table_dupe@@Base+0x504>
   126e4:	mov	r0, r4
   126e8:	mov	r1, r5
   126ec:	mov	r2, r7
   126f0:	bl	13724 <table_get_ldouble@@Base>
   126f4:	mov	r0, sl
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	14024 <table_set_ldouble@@Base>
   12704:	b	127d0 <table_dupe@@Base+0x504>
   12708:	mov	r0, r4
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	1373c <table_get_char@@Base>
   12718:	mov	r3, r0
   1271c:	mov	r0, sl
   12720:	mov	r1, r5
   12724:	mov	r2, r7
   12728:	bl	1406c <table_set_char@@Base>
   1272c:	b	127d0 <table_dupe@@Base+0x504>
   12730:	mov	r0, r4
   12734:	mov	r1, r5
   12738:	mov	r2, r7
   1273c:	bl	13754 <table_get_uchar@@Base>
   12740:	mov	r3, r0
   12744:	mov	r0, sl
   12748:	mov	r1, r5
   1274c:	mov	r2, r7
   12750:	bl	14094 <table_set_uchar@@Base>
   12754:	b	127d0 <table_dupe@@Base+0x504>
   12758:	mov	r0, r4
   1275c:	mov	r1, r5
   12760:	mov	r2, r7
   12764:	bl	1376c <table_get_string@@Base>
   12768:	mov	r3, r0
   1276c:	mov	r0, sl
   12770:	mov	r1, r5
   12774:	mov	r2, r7
   12778:	bl	1404c <table_set_string@@Base>
   1277c:	b	127d0 <table_dupe@@Base+0x504>
   12780:	mov	r0, r4
   12784:	mov	r1, r5
   12788:	mov	r2, r7
   1278c:	bl	1355c <table_get_bool@@Base>
   12790:	mov	r3, r0
   12794:	mov	r0, sl
   12798:	mov	r1, r5
   1279c:	mov	r2, r7
   127a0:	bl	13cfc <table_set_bool@@Base>
   127a4:	b	127d0 <table_dupe@@Base+0x504>
   127a8:	mov	r0, r4
   127ac:	mov	r1, r5
   127b0:	mov	r2, r7
   127b4:	bl	13780 <table_get_ptr@@Base>
   127b8:	str	r0, [sp, #8]
   127bc:	mov	r0, sl
   127c0:	mov	r1, r5
   127c4:	mov	r2, r7
   127c8:	mov	r3, r9
   127cc:	bl	140bc <table_set_ptr@@Base>
   127d0:	add	r7, r7, #1
   127d4:	cmp	r6, r7
   127d8:	bne	123a0 <table_dupe@@Base+0xd4>
   127dc:	add	r5, r5, #1
   127e0:	cmp	r5, r8
   127e4:	bne	1238c <table_dupe@@Base+0xc0>
   127e8:	mov	r0, sl
   127ec:	sub	sp, fp, #28
   127f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000127f4 <table_get_major_version@@Base>:
   127f4:	mov	r0, #0
   127f8:	bx	lr

000127fc <table_get_minor_version@@Base>:
   127fc:	mov	r0, #0
   12800:	bx	lr

00012804 <table_get_patch_version@@Base>:
   12804:	mov	r0, #0
   12808:	bx	lr

0001280c <table_get_version@@Base>:
   1280c:	movw	r0, #19577	; 0x4c79
   12810:	movt	r0, #1
   12814:	bx	lr

00012818 <table_get_callback_length@@Base>:
   12818:	ldr	r0, [r0, #32]
   1281c:	bx	lr

00012820 <table_register_callback@@Base>:
   12820:	push	{r4, r5, r6, r7, fp, lr}
   12824:	add	fp, sp, #16
   12828:	mov	r5, r0
   1282c:	ldr	r0, [r0, #32]
   12830:	mov	r4, r3
   12834:	mov	r6, r2
   12838:	mov	r7, r1
   1283c:	cmp	r0, #1
   12840:	blt	12874 <table_register_callback@@Base+0x54>
   12844:	ldr	r2, [r5, #36]	; 0x24
   12848:	mov	r1, #0
   1284c:	ldr	r3, [r2, r1, lsl #2]
   12850:	cmp	r3, r7
   12854:	bne	12868 <table_register_callback@@Base+0x48>
   12858:	ldr	r3, [r5, #40]	; 0x28
   1285c:	ldr	r3, [r3, r1, lsl #2]
   12860:	cmp	r3, r6
   12864:	beq	128f8 <table_register_callback@@Base+0xd8>
   12868:	add	r1, r1, #1
   1286c:	cmp	r0, r1
   12870:	bne	1284c <table_register_callback@@Base+0x2c>
   12874:	ldr	r1, [r5, #48]	; 0x30
   12878:	udiv	r2, r0, r1
   1287c:	mls	r2, r2, r1, r0
   12880:	cmp	r2, #0
   12884:	bne	128d0 <table_register_callback@@Base+0xb0>
   12888:	ldr	r2, [r5, #52]	; 0x34
   1288c:	ldr	r0, [r5, #36]	; 0x24
   12890:	add	r1, r2, r1
   12894:	str	r1, [r5, #52]	; 0x34
   12898:	lsl	r1, r1, #2
   1289c:	bl	11f30 <realloc@plt>
   128a0:	str	r0, [r5, #36]	; 0x24
   128a4:	ldr	r1, [r5, #52]	; 0x34
   128a8:	ldr	r0, [r5, #40]	; 0x28
   128ac:	lsl	r1, r1, #2
   128b0:	bl	11f30 <realloc@plt>
   128b4:	str	r0, [r5, #40]	; 0x28
   128b8:	ldr	r1, [r5, #52]	; 0x34
   128bc:	ldr	r0, [r5, #44]	; 0x2c
   128c0:	lsl	r1, r1, #2
   128c4:	bl	11f30 <realloc@plt>
   128c8:	str	r0, [r5, #44]	; 0x2c
   128cc:	ldr	r0, [r5, #32]
   128d0:	ldr	r1, [r5, #36]	; 0x24
   128d4:	str	r7, [r1, r0, lsl #2]
   128d8:	ldr	r1, [r5, #40]	; 0x28
   128dc:	str	r6, [r1, r0, lsl #2]
   128e0:	ldr	r1, [r5, #44]	; 0x2c
   128e4:	str	r4, [r1, r0, lsl #2]
   128e8:	ldr	r0, [r5, #32]
   128ec:	add	r0, r0, #1
   128f0:	str	r0, [r5, #32]
   128f4:	pop	{r4, r5, r6, r7, fp, pc}
   128f8:	cmp	r1, #0
   128fc:	beq	12874 <table_register_callback@@Base+0x54>
   12900:	ldr	r0, [r5, #44]	; 0x2c
   12904:	ldr	r2, [r0, r1, lsl #2]
   12908:	orr	r2, r2, r4
   1290c:	str	r2, [r0, r1, lsl #2]
   12910:	pop	{r4, r5, r6, r7, fp, pc}

00012914 <table_unregister_callback@@Base>:
   12914:	push	{r4, r5, r6, sl, fp, lr}
   12918:	add	fp, sp, #16
   1291c:	ldr	r4, [r0, #32]
   12920:	cmp	r4, #1
   12924:	blt	1295c <table_unregister_callback@@Base+0x48>
   12928:	ldr	r3, [r0, #36]	; 0x24
   1292c:	mov	r6, r0
   12930:	mov	r0, #0
   12934:	ldr	r5, [r3, r0, lsl #2]
   12938:	cmp	r5, r1
   1293c:	bne	12950 <table_unregister_callback@@Base+0x3c>
   12940:	ldr	r5, [r6, #40]	; 0x28
   12944:	ldr	r5, [r5, r0, lsl #2]
   12948:	cmp	r5, r2
   1294c:	beq	12960 <table_unregister_callback@@Base+0x4c>
   12950:	add	r0, r0, #1
   12954:	cmp	r0, r4
   12958:	bne	12934 <table_unregister_callback@@Base+0x20>
   1295c:	pop	{r4, r5, r6, sl, fp, pc}
   12960:	sub	r1, r4, #1
   12964:	cmp	r0, r1
   12968:	bge	129ec <table_unregister_callback@@Base+0xd8>
   1296c:	add	r2, r0, #1
   12970:	ldr	r1, [r3, r2, lsl #2]
   12974:	str	r1, [r3, r0, lsl #2]
   12978:	ldr	r1, [r6, #40]	; 0x28
   1297c:	ldr	r3, [r1, r2, lsl #2]
   12980:	str	r3, [r1, r0, lsl #2]
   12984:	ldr	r1, [r6, #44]	; 0x2c
   12988:	ldr	r3, [r1, r2, lsl #2]
   1298c:	str	r3, [r1, r0, lsl #2]
   12990:	ldr	r1, [r6, #32]
   12994:	sub	r1, r1, #1
   12998:	cmp	r2, r1
   1299c:	bge	129ec <table_unregister_callback@@Base+0xd8>
   129a0:	ldr	r1, [r6, #36]	; 0x24
   129a4:	add	r1, r1, r0, lsl #2
   129a8:	ldr	r2, [r1, #8]
   129ac:	str	r2, [r1, #4]
   129b0:	ldr	r1, [r6, #40]	; 0x28
   129b4:	add	r1, r1, r0, lsl #2
   129b8:	ldr	r2, [r1, #8]
   129bc:	str	r2, [r1, #4]
   129c0:	ldr	r1, [r6, #44]	; 0x2c
   129c4:	add	r1, r1, r0, lsl #2
   129c8:	ldr	r2, [r1, #8]
   129cc:	str	r2, [r1, #4]
   129d0:	add	r2, r0, #1
   129d4:	add	r0, r0, #2
   129d8:	ldr	r1, [r6, #32]
   129dc:	sub	r1, r1, #1
   129e0:	cmp	r0, r1
   129e4:	mov	r0, r2
   129e8:	blt	129a0 <table_unregister_callback@@Base+0x8c>
   129ec:	str	r1, [r6, #32]
   129f0:	ldr	r2, [r6, #48]	; 0x30
   129f4:	udiv	r0, r1, r2
   129f8:	mls	r0, r0, r2, r1
   129fc:	cmp	r0, #0
   12a00:	popne	{r4, r5, r6, sl, fp, pc}
   12a04:	ldr	r1, [r6, #52]	; 0x34
   12a08:	ldr	r0, [r6, #36]	; 0x24
   12a0c:	subs	r1, r1, r2
   12a10:	str	r1, [r6, #52]	; 0x34
   12a14:	beq	12a4c <table_unregister_callback@@Base+0x138>
   12a18:	lsl	r1, r1, #2
   12a1c:	bl	11f30 <realloc@plt>
   12a20:	str	r0, [r6, #36]	; 0x24
   12a24:	ldr	r1, [r6, #52]	; 0x34
   12a28:	ldr	r0, [r6, #40]	; 0x28
   12a2c:	lsl	r1, r1, #2
   12a30:	bl	11f30 <realloc@plt>
   12a34:	str	r0, [r6, #40]	; 0x28
   12a38:	ldr	r1, [r6, #52]	; 0x34
   12a3c:	ldr	r0, [r6, #44]	; 0x2c
   12a40:	lsl	r1, r1, #2
   12a44:	bl	11f30 <realloc@plt>
   12a48:	b	12a6c <table_unregister_callback@@Base+0x158>
   12a4c:	bl	11f18 <free@plt>
   12a50:	ldr	r0, [r6, #40]	; 0x28
   12a54:	bl	11f18 <free@plt>
   12a58:	ldr	r0, [r6, #44]	; 0x2c
   12a5c:	bl	11f18 <free@plt>
   12a60:	mov	r0, #0
   12a64:	str	r0, [r6, #36]	; 0x24
   12a68:	str	r0, [r6, #40]	; 0x28
   12a6c:	str	r0, [r6, #44]	; 0x2c
   12a70:	pop	{r4, r5, r6, sl, fp, pc}

00012a74 <table_notify@@Base>:
   12a74:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a78:	add	fp, sp, #24
   12a7c:	sub	sp, sp, #8
   12a80:	mov	r7, r0
   12a84:	ldr	r0, [r0, #32]
   12a88:	cmp	r0, #1
   12a8c:	blt	12ae8 <table_notify@@Base+0x74>
   12a90:	mov	r4, r3
   12a94:	mov	r8, r2
   12a98:	mov	r9, r1
   12a9c:	mov	r5, #0
   12aa0:	ldr	r1, [r7, #44]	; 0x2c
   12aa4:	ldr	r1, [r1, r5, lsl #2]
   12aa8:	tst	r1, r4
   12aac:	beq	12adc <table_notify@@Base+0x68>
   12ab0:	ldr	r0, [r7, #36]	; 0x24
   12ab4:	ldr	r1, [r7, #40]	; 0x28
   12ab8:	mov	r2, r8
   12abc:	mov	r3, r4
   12ac0:	ldr	r6, [r0, r5, lsl #2]
   12ac4:	ldr	r0, [r1, r5, lsl #2]
   12ac8:	mov	r1, r9
   12acc:	str	r0, [sp]
   12ad0:	mov	r0, r7
   12ad4:	blx	r6
   12ad8:	ldr	r0, [r7, #32]
   12adc:	add	r5, r5, #1
   12ae0:	cmp	r5, r0
   12ae4:	blt	12aa0 <table_notify@@Base+0x2c>
   12ae8:	sub	sp, fp, #24
   12aec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012af0 <table_column_init@@Base>:
   12af0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12af4:	add	fp, sp, #24
   12af8:	ldr	r7, [r0]
   12afc:	mov	r0, r2
   12b00:	mov	r4, r3
   12b04:	mov	r5, r2
   12b08:	mov	r6, r1
   12b0c:	bl	11f6c <strlen@plt>
   12b10:	add	r0, r0, #1
   12b14:	bl	11f48 <malloc@plt>
   12b18:	ldr	r8, [fp, #8]
   12b1c:	add	r6, r6, r6, lsl #1
   12b20:	cmp	r0, #0
   12b24:	str	r0, [r7, r6, lsl #2]
   12b28:	beq	12b34 <table_column_init@@Base+0x44>
   12b2c:	mov	r1, r5
   12b30:	bl	11f3c <strcpy@plt>
   12b34:	add	r0, r7, r6, lsl #2
   12b38:	stmib	r0, {r4, r8}
   12b3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012b40 <table_get_col_ptr@@Base>:
   12b40:	ldr	r0, [r0]
   12b44:	add	r1, r1, r1, lsl #1
   12b48:	add	r0, r0, r1, lsl #2
   12b4c:	bx	lr

00012b50 <table_column_destroy@@Base>:
   12b50:	ldr	r0, [r0]
   12b54:	add	r1, r1, r1, lsl #1
   12b58:	ldr	r0, [r0, r1, lsl #2]
   12b5c:	cmp	r0, #0
   12b60:	bxeq	lr
   12b64:	b	11f18 <free@plt>

00012b68 <table_get_column_length@@Base>:
   12b68:	ldr	r0, [r0, #4]
   12b6c:	bx	lr

00012b70 <table_get_column@@Base>:
   12b70:	push	{r4, r5, r6, r7, fp, lr}
   12b74:	add	fp, sp, #16
   12b78:	ldr	r6, [r0, #4]
   12b7c:	cmp	r6, #1
   12b80:	blt	12bbc <table_get_column@@Base+0x4c>
   12b84:	ldr	r7, [r0]
   12b88:	mov	r5, r1
   12b8c:	mov	r4, #0
   12b90:	ldr	r0, [r7]
   12b94:	mov	r1, r5
   12b98:	bl	11f00 <strcmp@plt>
   12b9c:	cmp	r0, #0
   12ba0:	beq	12bc0 <table_get_column@@Base+0x50>
   12ba4:	add	r4, r4, #1
   12ba8:	add	r7, r7, #12
   12bac:	cmp	r6, r4
   12bb0:	bne	12b90 <table_get_column@@Base+0x20>
   12bb4:	mov	r4, r6
   12bb8:	b	12bc0 <table_get_column@@Base+0x50>
   12bbc:	mov	r4, #0
   12bc0:	cmp	r4, r6
   12bc4:	mvneq	r4, #0
   12bc8:	mov	r0, r4
   12bcc:	pop	{r4, r5, r6, r7, fp, pc}

00012bd0 <table_get_column_name@@Base>:
   12bd0:	ldr	r0, [r0]
   12bd4:	add	r1, r1, r1, lsl #1
   12bd8:	ldr	r0, [r0, r1, lsl #2]
   12bdc:	bx	lr

00012be0 <table_get_column_data_type@@Base>:
   12be0:	ldr	r0, [r0]
   12be4:	add	r1, r1, r1, lsl #1
   12be8:	add	r0, r0, r1, lsl #2
   12bec:	ldr	r0, [r0, #4]
   12bf0:	bx	lr

00012bf4 <table_add_column@@Base>:
   12bf4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12bf8:	add	fp, sp, #24
   12bfc:	sub	sp, sp, #8
   12c00:	mov	r4, r0
   12c04:	mov	r8, r1
   12c08:	ldr	r0, [r0, #4]
   12c0c:	mov	r9, r2
   12c10:	ldr	r1, [r4, #8]
   12c14:	udiv	r2, r0, r1
   12c18:	mls	r0, r2, r1, r0
   12c1c:	cmp	r0, #0
   12c20:	bne	12c8c <table_add_column@@Base+0x98>
   12c24:	ldr	r2, [r4, #12]
   12c28:	ldr	r0, [r4]
   12c2c:	add	r1, r2, r1
   12c30:	str	r1, [r4, #12]
   12c34:	add	r1, r1, r1, lsl #1
   12c38:	lsl	r1, r1, #2
   12c3c:	bl	11f30 <realloc@plt>
   12c40:	str	r0, [r4]
   12c44:	mov	r0, r4
   12c48:	bl	13820 <table_get_row_length@@Base>
   12c4c:	cmp	r0, #1
   12c50:	blt	12c8c <table_add_column@@Base+0x98>
   12c54:	mov	r6, r0
   12c58:	mov	r7, #0
   12c5c:	mov	r0, r4
   12c60:	mov	r1, r7
   12c64:	bl	137b8 <table_get_row_ptr@@Base>
   12c68:	ldr	r1, [r4, #12]
   12c6c:	mov	r5, r0
   12c70:	ldr	r0, [r0]
   12c74:	lsl	r1, r1, #2
   12c78:	bl	11f30 <realloc@plt>
   12c7c:	add	r7, r7, #1
   12c80:	str	r0, [r5]
   12c84:	cmp	r6, r7
   12c88:	bne	12c5c <table_add_column@@Base+0x68>
   12c8c:	mov	r0, r4
   12c90:	bl	13820 <table_get_row_length@@Base>
   12c94:	ldr	r6, [r4, #4]
   12c98:	mov	r7, r0
   12c9c:	mov	r0, r9
   12ca0:	bl	1352c <table_get_default_compare_function_for_data_type@@Base>
   12ca4:	str	r0, [sp]
   12ca8:	mov	r0, r4
   12cac:	mov	r1, r6
   12cb0:	mov	r2, r8
   12cb4:	mov	r3, r9
   12cb8:	bl	12af0 <table_column_init@@Base>
   12cbc:	cmp	r7, #1
   12cc0:	blt	12ce4 <table_add_column@@Base+0xf0>
   12cc4:	mov	r5, #0
   12cc8:	mov	r0, r4
   12ccc:	mov	r1, r5
   12cd0:	mov	r2, r6
   12cd4:	bl	140dc <table_cell_init@@Base>
   12cd8:	add	r5, r5, #1
   12cdc:	cmp	r7, r5
   12ce0:	bne	12cc8 <table_add_column@@Base+0xd4>
   12ce4:	ldr	r2, [r4, #4]
   12ce8:	mov	r0, r4
   12cec:	mvn	r1, #0
   12cf0:	mov	r3, #8
   12cf4:	bl	12a74 <table_notify@@Base>
   12cf8:	ldr	r0, [r4, #4]
   12cfc:	add	r1, r0, #1
   12d00:	str	r1, [r4, #4]
   12d04:	sub	sp, fp, #24
   12d08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012d0c <table_remove_column@@Base>:
   12d0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d10:	add	fp, sp, #24
   12d14:	mov	r5, r0
   12d18:	ldr	r0, [r0]
   12d1c:	add	r6, r1, r1, lsl #1
   12d20:	mov	r9, r1
   12d24:	ldr	r0, [r0, r6, lsl #2]
   12d28:	cmp	r0, #0
   12d2c:	beq	12d34 <table_remove_column@@Base+0x28>
   12d30:	bl	11f18 <free@plt>
   12d34:	ldr	r0, [r5, #4]
   12d38:	sub	r4, r0, #1
   12d3c:	cmp	r4, r9
   12d40:	ble	12d74 <table_remove_column@@Base+0x68>
   12d44:	mvn	r1, r9
   12d48:	add	r0, r1, r0
   12d4c:	lsl	r1, r6, #2
   12d50:	ldr	r2, [r5]
   12d54:	subs	r0, r0, #1
   12d58:	add	r2, r2, r1
   12d5c:	add	r1, r1, #12
   12d60:	vldr	d16, [r2, #12]
   12d64:	ldr	r3, [r2, #20]
   12d68:	str	r3, [r2, #8]
   12d6c:	vstr	d16, [r2]
   12d70:	bne	12d50 <table_remove_column@@Base+0x44>
   12d74:	mov	r0, r5
   12d78:	bl	13820 <table_get_row_length@@Base>
   12d7c:	cmp	r0, #1
   12d80:	blt	12ddc <table_remove_column@@Base+0xd0>
   12d84:	mov	r6, r0
   12d88:	mov	r7, #0
   12d8c:	mov	r0, r5
   12d90:	mov	r1, r7
   12d94:	mov	r2, r9
   12d98:	bl	14118 <table_cell_destroy@@Base>
   12d9c:	mov	r0, r5
   12da0:	mov	r1, r7
   12da4:	bl	137b8 <table_get_row_ptr@@Base>
   12da8:	cmp	r4, r9
   12dac:	ble	12dd0 <table_remove_column@@Base+0xc4>
   12db0:	mov	r1, r9
   12db4:	ldr	r2, [r0]
   12db8:	add	r3, r2, r1, lsl #2
   12dbc:	ldr	r3, [r3, #4]
   12dc0:	str	r3, [r2, r1, lsl #2]
   12dc4:	add	r1, r1, #1
   12dc8:	cmp	r4, r1
   12dcc:	bne	12db4 <table_remove_column@@Base+0xa8>
   12dd0:	add	r7, r7, #1
   12dd4:	cmp	r7, r6
   12dd8:	bne	12d8c <table_remove_column@@Base+0x80>
   12ddc:	ldmib	r5, {r0, r1}
   12de0:	sub	r0, r0, #1
   12de4:	udiv	r2, r0, r1
   12de8:	str	r0, [r5, #4]
   12dec:	mls	r0, r2, r1, r0
   12df0:	cmp	r0, #0
   12df4:	bne	12e60 <table_remove_column@@Base+0x154>
   12df8:	ldr	r2, [r5, #12]
   12dfc:	ldr	r0, [r5]
   12e00:	sub	r1, r2, r1
   12e04:	str	r1, [r5, #12]
   12e08:	add	r1, r1, r1, lsl #1
   12e0c:	lsl	r1, r1, #2
   12e10:	bl	11f30 <realloc@plt>
   12e14:	str	r0, [r5]
   12e18:	mov	r0, r5
   12e1c:	bl	13820 <table_get_row_length@@Base>
   12e20:	cmp	r0, #1
   12e24:	blt	12e60 <table_remove_column@@Base+0x154>
   12e28:	mov	r8, r0
   12e2c:	mov	r7, #0
   12e30:	mov	r0, r5
   12e34:	mov	r1, r7
   12e38:	bl	137b8 <table_get_row_ptr@@Base>
   12e3c:	ldr	r1, [r5, #12]
   12e40:	mov	r6, r0
   12e44:	ldr	r0, [r0]
   12e48:	lsl	r1, r1, #2
   12e4c:	bl	11f30 <realloc@plt>
   12e50:	add	r7, r7, #1
   12e54:	str	r0, [r6]
   12e58:	cmp	r8, r7
   12e5c:	bne	12e30 <table_remove_column@@Base+0x124>
   12e60:	mov	r0, r5
   12e64:	mvn	r1, #0
   12e68:	mov	r2, r9
   12e6c:	mov	r3, #16
   12e70:	bl	12a74 <table_notify@@Base>
   12e74:	mov	r0, #0
   12e78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012e7c <table_get_column_compare_function@@Base>:
   12e7c:	ldr	r0, [r0]
   12e80:	add	r1, r1, r1, lsl #1
   12e84:	add	r0, r0, r1, lsl #2
   12e88:	ldr	r0, [r0, #8]
   12e8c:	bx	lr

00012e90 <table_set_column_compare_function@@Base>:
   12e90:	ldr	r0, [r0]
   12e94:	add	r1, r1, r1, lsl #1
   12e98:	add	r0, r0, r1, lsl #2
   12e9c:	str	r2, [r0, #8]
   12ea0:	bx	lr

00012ea4 <table_compare_bool@@Base>:
   12ea4:	cmp	r0, #0
   12ea8:	beq	12ed0 <table_compare_bool@@Base+0x2c>
   12eac:	cmp	r1, #0
   12eb0:	beq	12edc <table_compare_bool@@Base+0x38>
   12eb4:	ldrb	r2, [r1]
   12eb8:	ldrb	r0, [r0]
   12ebc:	mov	r1, #0
   12ec0:	cmp	r0, r2
   12ec4:	mvncc	r1, #0
   12ec8:	movwhi	r1, #1
   12ecc:	b	12ee0 <table_compare_bool@@Base+0x3c>
   12ed0:	cmp	r1, #0
   12ed4:	mvnne	r1, #0
   12ed8:	b	12ee0 <table_compare_bool@@Base+0x3c>
   12edc:	mov	r1, #1
   12ee0:	mov	r0, r1
   12ee4:	bx	lr

00012ee8 <table_compare_int@@Base>:
   12ee8:	cmp	r0, #0
   12eec:	beq	12f14 <table_compare_int@@Base+0x2c>
   12ef0:	cmp	r1, #0
   12ef4:	beq	12f20 <table_compare_int@@Base+0x38>
   12ef8:	ldr	r2, [r1]
   12efc:	ldr	r0, [r0]
   12f00:	mov	r1, #0
   12f04:	cmp	r0, r2
   12f08:	mvnlt	r1, #0
   12f0c:	movwgt	r1, #1
   12f10:	b	12f24 <table_compare_int@@Base+0x3c>
   12f14:	cmp	r1, #0
   12f18:	mvnne	r1, #0
   12f1c:	b	12f24 <table_compare_int@@Base+0x3c>
   12f20:	mov	r1, #1
   12f24:	mov	r0, r1
   12f28:	bx	lr

00012f2c <table_compare_uint@@Base>:
   12f2c:	cmp	r0, #0
   12f30:	beq	12f58 <table_compare_uint@@Base+0x2c>
   12f34:	cmp	r1, #0
   12f38:	beq	12f64 <table_compare_uint@@Base+0x38>
   12f3c:	ldr	r2, [r1]
   12f40:	ldr	r0, [r0]
   12f44:	mov	r1, #0
   12f48:	cmp	r0, r2
   12f4c:	mvncc	r1, #0
   12f50:	movwhi	r1, #1
   12f54:	b	12f68 <table_compare_uint@@Base+0x3c>
   12f58:	cmp	r1, #0
   12f5c:	mvnne	r1, #0
   12f60:	b	12f68 <table_compare_uint@@Base+0x3c>
   12f64:	mov	r1, #1
   12f68:	mov	r0, r1
   12f6c:	bx	lr

00012f70 <table_compare_int8@@Base>:
   12f70:	cmp	r0, #0
   12f74:	beq	12f9c <table_compare_int8@@Base+0x2c>
   12f78:	cmp	r1, #0
   12f7c:	beq	12fa8 <table_compare_int8@@Base+0x38>
   12f80:	ldrsb	r2, [r1]
   12f84:	ldrsb	r0, [r0]
   12f88:	mov	r1, #0
   12f8c:	cmp	r0, r2
   12f90:	mvnlt	r1, #0
   12f94:	movwgt	r1, #1
   12f98:	b	12fac <table_compare_int8@@Base+0x3c>
   12f9c:	cmp	r1, #0
   12fa0:	mvnne	r1, #0
   12fa4:	b	12fac <table_compare_int8@@Base+0x3c>
   12fa8:	mov	r1, #1
   12fac:	mov	r0, r1
   12fb0:	bx	lr

00012fb4 <table_compare_uint8@@Base>:
   12fb4:	cmp	r0, #0
   12fb8:	beq	12fe0 <table_compare_uint8@@Base+0x2c>
   12fbc:	cmp	r1, #0
   12fc0:	beq	12fec <table_compare_uint8@@Base+0x38>
   12fc4:	ldrb	r2, [r1]
   12fc8:	ldrb	r0, [r0]
   12fcc:	mov	r1, #0
   12fd0:	cmp	r0, r2
   12fd4:	mvncc	r1, #0
   12fd8:	movwhi	r1, #1
   12fdc:	b	12ff0 <table_compare_uint8@@Base+0x3c>
   12fe0:	cmp	r1, #0
   12fe4:	mvnne	r1, #0
   12fe8:	b	12ff0 <table_compare_uint8@@Base+0x3c>
   12fec:	mov	r1, #1
   12ff0:	mov	r0, r1
   12ff4:	bx	lr

00012ff8 <table_compare_int16@@Base>:
   12ff8:	cmp	r0, #0
   12ffc:	beq	13024 <table_compare_int16@@Base+0x2c>
   13000:	cmp	r1, #0
   13004:	beq	13030 <table_compare_int16@@Base+0x38>
   13008:	ldrsh	r2, [r1]
   1300c:	ldrsh	r0, [r0]
   13010:	mov	r1, #0
   13014:	cmp	r0, r2
   13018:	mvnlt	r1, #0
   1301c:	movwgt	r1, #1
   13020:	b	13034 <table_compare_int16@@Base+0x3c>
   13024:	cmp	r1, #0
   13028:	mvnne	r1, #0
   1302c:	b	13034 <table_compare_int16@@Base+0x3c>
   13030:	mov	r1, #1
   13034:	mov	r0, r1
   13038:	bx	lr

0001303c <table_compare_uint16@@Base>:
   1303c:	cmp	r0, #0
   13040:	beq	13068 <table_compare_uint16@@Base+0x2c>
   13044:	cmp	r1, #0
   13048:	beq	13074 <table_compare_uint16@@Base+0x38>
   1304c:	ldrh	r2, [r1]
   13050:	ldrh	r0, [r0]
   13054:	mov	r1, #0
   13058:	cmp	r0, r2
   1305c:	mvncc	r1, #0
   13060:	movwhi	r1, #1
   13064:	b	13078 <table_compare_uint16@@Base+0x3c>
   13068:	cmp	r1, #0
   1306c:	mvnne	r1, #0
   13070:	b	13078 <table_compare_uint16@@Base+0x3c>
   13074:	mov	r1, #1
   13078:	mov	r0, r1
   1307c:	bx	lr

00013080 <table_compare_int32@@Base>:
   13080:	cmp	r0, #0
   13084:	beq	130ac <table_compare_int32@@Base+0x2c>
   13088:	cmp	r1, #0
   1308c:	beq	130b8 <table_compare_int32@@Base+0x38>
   13090:	ldr	r2, [r1]
   13094:	ldr	r0, [r0]
   13098:	mov	r1, #0
   1309c:	cmp	r0, r2
   130a0:	mvnlt	r1, #0
   130a4:	movwgt	r1, #1
   130a8:	b	130bc <table_compare_int32@@Base+0x3c>
   130ac:	cmp	r1, #0
   130b0:	mvnne	r1, #0
   130b4:	b	130bc <table_compare_int32@@Base+0x3c>
   130b8:	mov	r1, #1
   130bc:	mov	r0, r1
   130c0:	bx	lr

000130c4 <table_compare_uint32@@Base>:
   130c4:	cmp	r0, #0
   130c8:	beq	130f0 <table_compare_uint32@@Base+0x2c>
   130cc:	cmp	r1, #0
   130d0:	beq	130fc <table_compare_uint32@@Base+0x38>
   130d4:	ldr	r2, [r1]
   130d8:	ldr	r0, [r0]
   130dc:	mov	r1, #0
   130e0:	cmp	r0, r2
   130e4:	mvncc	r1, #0
   130e8:	movwhi	r1, #1
   130ec:	b	13100 <table_compare_uint32@@Base+0x3c>
   130f0:	cmp	r1, #0
   130f4:	mvnne	r1, #0
   130f8:	b	13100 <table_compare_uint32@@Base+0x3c>
   130fc:	mov	r1, #1
   13100:	mov	r0, r1
   13104:	bx	lr

00013108 <table_compare_int64@@Base>:
   13108:	cmp	r0, #0
   1310c:	beq	13154 <table_compare_int64@@Base+0x4c>
   13110:	cmp	r1, #0
   13114:	beq	13160 <table_compare_int64@@Base+0x58>
   13118:	push	{r5, r7, fp, lr}
   1311c:	add	fp, sp, #8
   13120:	ldm	r0, {r0, r5}
   13124:	ldm	r1, {r2, r7}
   13128:	mov	r1, #0
   1312c:	subs	r3, r0, r2
   13130:	sbcs	r3, r5, r7
   13134:	movwlt	r1, #1
   13138:	cmp	r1, #0
   1313c:	mvnne	r1, #0
   13140:	subs	r0, r2, r0
   13144:	sbcs	r0, r7, r5
   13148:	movwlt	r1, #1
   1314c:	pop	{r5, r7, fp, lr}
   13150:	b	13164 <table_compare_int64@@Base+0x5c>
   13154:	cmp	r1, #0
   13158:	mvnne	r1, #0
   1315c:	b	13164 <table_compare_int64@@Base+0x5c>
   13160:	mov	r1, #1
   13164:	mov	r0, r1
   13168:	bx	lr

0001316c <table_compare_uint64@@Base>:
   1316c:	cmp	r0, #0
   13170:	beq	131b8 <table_compare_uint64@@Base+0x4c>
   13174:	cmp	r1, #0
   13178:	beq	131c4 <table_compare_uint64@@Base+0x58>
   1317c:	push	{r5, r7, fp, lr}
   13180:	add	fp, sp, #8
   13184:	ldm	r0, {r0, r5}
   13188:	ldm	r1, {r2, r7}
   1318c:	mov	r1, #0
   13190:	subs	r3, r0, r2
   13194:	sbcs	r3, r5, r7
   13198:	movwcc	r1, #1
   1319c:	cmp	r1, #0
   131a0:	mvnne	r1, #0
   131a4:	subs	r0, r2, r0
   131a8:	sbcs	r0, r7, r5
   131ac:	movwcc	r1, #1
   131b0:	pop	{r5, r7, fp, lr}
   131b4:	b	131c8 <table_compare_uint64@@Base+0x5c>
   131b8:	cmp	r1, #0
   131bc:	mvnne	r1, #0
   131c0:	b	131c8 <table_compare_uint64@@Base+0x5c>
   131c4:	mov	r1, #1
   131c8:	mov	r0, r1
   131cc:	bx	lr

000131d0 <table_compare_short@@Base>:
   131d0:	cmp	r0, #0
   131d4:	beq	131fc <table_compare_short@@Base+0x2c>
   131d8:	cmp	r1, #0
   131dc:	beq	13208 <table_compare_short@@Base+0x38>
   131e0:	ldrsh	r2, [r1]
   131e4:	ldrsh	r0, [r0]
   131e8:	mov	r1, #0
   131ec:	cmp	r0, r2
   131f0:	mvnlt	r1, #0
   131f4:	movwgt	r1, #1
   131f8:	b	1320c <table_compare_short@@Base+0x3c>
   131fc:	cmp	r1, #0
   13200:	mvnne	r1, #0
   13204:	b	1320c <table_compare_short@@Base+0x3c>
   13208:	mov	r1, #1
   1320c:	mov	r0, r1
   13210:	bx	lr

00013214 <table_compare_ushort@@Base>:
   13214:	cmp	r0, #0
   13218:	beq	13240 <table_compare_ushort@@Base+0x2c>
   1321c:	cmp	r1, #0
   13220:	beq	1324c <table_compare_ushort@@Base+0x38>
   13224:	ldrh	r2, [r1]
   13228:	ldrh	r0, [r0]
   1322c:	mov	r1, #0
   13230:	cmp	r0, r2
   13234:	mvncc	r1, #0
   13238:	movwhi	r1, #1
   1323c:	b	13250 <table_compare_ushort@@Base+0x3c>
   13240:	cmp	r1, #0
   13244:	mvnne	r1, #0
   13248:	b	13250 <table_compare_ushort@@Base+0x3c>
   1324c:	mov	r1, #1
   13250:	mov	r0, r1
   13254:	bx	lr

00013258 <table_compare_long@@Base>:
   13258:	cmp	r0, #0
   1325c:	beq	13284 <table_compare_long@@Base+0x2c>
   13260:	cmp	r1, #0
   13264:	beq	13290 <table_compare_long@@Base+0x38>
   13268:	ldr	r2, [r1]
   1326c:	ldr	r0, [r0]
   13270:	mov	r1, #0
   13274:	cmp	r0, r2
   13278:	mvnlt	r1, #0
   1327c:	movwgt	r1, #1
   13280:	b	13294 <table_compare_long@@Base+0x3c>
   13284:	cmp	r1, #0
   13288:	mvnne	r1, #0
   1328c:	b	13294 <table_compare_long@@Base+0x3c>
   13290:	mov	r1, #1
   13294:	mov	r0, r1
   13298:	bx	lr

0001329c <table_compare_ulong@@Base>:
   1329c:	cmp	r0, #0
   132a0:	beq	132c8 <table_compare_ulong@@Base+0x2c>
   132a4:	cmp	r1, #0
   132a8:	beq	132d4 <table_compare_ulong@@Base+0x38>
   132ac:	ldr	r2, [r1]
   132b0:	ldr	r0, [r0]
   132b4:	mov	r1, #0
   132b8:	cmp	r0, r2
   132bc:	mvncc	r1, #0
   132c0:	movwhi	r1, #1
   132c4:	b	132d8 <table_compare_ulong@@Base+0x3c>
   132c8:	cmp	r1, #0
   132cc:	mvnne	r1, #0
   132d0:	b	132d8 <table_compare_ulong@@Base+0x3c>
   132d4:	mov	r1, #1
   132d8:	mov	r0, r1
   132dc:	bx	lr

000132e0 <table_compare_llong@@Base>:
   132e0:	cmp	r0, #0
   132e4:	beq	1332c <table_compare_llong@@Base+0x4c>
   132e8:	cmp	r1, #0
   132ec:	beq	13338 <table_compare_llong@@Base+0x58>
   132f0:	push	{r5, r7, fp, lr}
   132f4:	add	fp, sp, #8
   132f8:	ldm	r0, {r0, r5}
   132fc:	ldm	r1, {r2, r7}
   13300:	mov	r1, #0
   13304:	subs	r3, r0, r2
   13308:	sbcs	r3, r5, r7
   1330c:	movwlt	r1, #1
   13310:	cmp	r1, #0
   13314:	mvnne	r1, #0
   13318:	subs	r0, r2, r0
   1331c:	sbcs	r0, r7, r5
   13320:	movwlt	r1, #1
   13324:	pop	{r5, r7, fp, lr}
   13328:	b	1333c <table_compare_llong@@Base+0x5c>
   1332c:	cmp	r1, #0
   13330:	mvnne	r1, #0
   13334:	b	1333c <table_compare_llong@@Base+0x5c>
   13338:	mov	r1, #1
   1333c:	mov	r0, r1
   13340:	bx	lr

00013344 <table_compare_ullong@@Base>:
   13344:	cmp	r0, #0
   13348:	beq	13370 <table_compare_ullong@@Base+0x2c>
   1334c:	cmp	r1, #0
   13350:	beq	1337c <table_compare_ullong@@Base+0x38>
   13354:	ldr	r2, [r1]
   13358:	ldr	r0, [r0]
   1335c:	mov	r1, #0
   13360:	cmp	r0, r2
   13364:	mvncc	r1, #0
   13368:	movwhi	r1, #1
   1336c:	b	13380 <table_compare_ullong@@Base+0x3c>
   13370:	cmp	r1, #0
   13374:	mvnne	r1, #0
   13378:	b	13380 <table_compare_ullong@@Base+0x3c>
   1337c:	mov	r1, #1
   13380:	mov	r0, r1
   13384:	bx	lr

00013388 <table_compare_float@@Base>:
   13388:	cmp	r0, #0
   1338c:	beq	133b8 <table_compare_float@@Base+0x30>
   13390:	cmp	r1, #0
   13394:	beq	133c4 <table_compare_float@@Base+0x3c>
   13398:	vldr	s0, [r1]
   1339c:	vldr	s2, [r0]
   133a0:	mov	r1, #0
   133a4:	vcmpe.f32	s2, s0
   133a8:	vmrs	APSR_nzcv, fpscr
   133ac:	mvnmi	r1, #0
   133b0:	movwgt	r1, #1
   133b4:	b	133c8 <table_compare_float@@Base+0x40>
   133b8:	cmp	r1, #0
   133bc:	mvnne	r1, #0
   133c0:	b	133c8 <table_compare_float@@Base+0x40>
   133c4:	mov	r1, #1
   133c8:	mov	r0, r1
   133cc:	bx	lr

000133d0 <table_compare_double@@Base>:
   133d0:	cmp	r0, #0
   133d4:	beq	13400 <table_compare_double@@Base+0x30>
   133d8:	cmp	r1, #0
   133dc:	beq	1340c <table_compare_double@@Base+0x3c>
   133e0:	vldr	d16, [r1]
   133e4:	vldr	d17, [r0]
   133e8:	mov	r1, #0
   133ec:	vcmpe.f64	d17, d16
   133f0:	vmrs	APSR_nzcv, fpscr
   133f4:	mvnmi	r1, #0
   133f8:	movwgt	r1, #1
   133fc:	b	13410 <table_compare_double@@Base+0x40>
   13400:	cmp	r1, #0
   13404:	mvnne	r1, #0
   13408:	b	13410 <table_compare_double@@Base+0x40>
   1340c:	mov	r1, #1
   13410:	mov	r0, r1
   13414:	bx	lr

00013418 <table_compare_ldouble@@Base>:
   13418:	cmp	r0, #0
   1341c:	beq	13448 <table_compare_ldouble@@Base+0x30>
   13420:	cmp	r1, #0
   13424:	beq	13454 <table_compare_ldouble@@Base+0x3c>
   13428:	vldr	d16, [r1]
   1342c:	vldr	d17, [r0]
   13430:	mov	r1, #0
   13434:	vcmpe.f64	d17, d16
   13438:	vmrs	APSR_nzcv, fpscr
   1343c:	mvnmi	r1, #0
   13440:	movwgt	r1, #1
   13444:	b	13458 <table_compare_ldouble@@Base+0x40>
   13448:	cmp	r1, #0
   1344c:	mvnne	r1, #0
   13450:	b	13458 <table_compare_ldouble@@Base+0x40>
   13454:	mov	r1, #1
   13458:	mov	r0, r1
   1345c:	bx	lr

00013460 <table_compare_char@@Base>:
   13460:	cmp	r0, #0
   13464:	beq	1348c <table_compare_char@@Base+0x2c>
   13468:	cmp	r1, #0
   1346c:	beq	13498 <table_compare_char@@Base+0x38>
   13470:	ldrb	r2, [r1]
   13474:	ldrb	r0, [r0]
   13478:	mov	r1, #0
   1347c:	cmp	r0, r2
   13480:	mvncc	r1, #0
   13484:	movwhi	r1, #1
   13488:	b	1349c <table_compare_char@@Base+0x3c>
   1348c:	cmp	r1, #0
   13490:	mvnne	r1, #0
   13494:	b	1349c <table_compare_char@@Base+0x3c>
   13498:	mov	r1, #1
   1349c:	mov	r0, r1
   134a0:	bx	lr

000134a4 <table_compare_uchar@@Base>:
   134a4:	cmp	r0, #0
   134a8:	beq	134d0 <table_compare_uchar@@Base+0x2c>
   134ac:	cmp	r1, #0
   134b0:	beq	134dc <table_compare_uchar@@Base+0x38>
   134b4:	ldrb	r2, [r1]
   134b8:	ldrb	r0, [r0]
   134bc:	mov	r1, #0
   134c0:	cmp	r0, r2
   134c4:	mvncc	r1, #0
   134c8:	movwhi	r1, #1
   134cc:	b	134e0 <table_compare_uchar@@Base+0x3c>
   134d0:	cmp	r1, #0
   134d4:	mvnne	r1, #0
   134d8:	b	134e0 <table_compare_uchar@@Base+0x3c>
   134dc:	mov	r1, #1
   134e0:	mov	r0, r1
   134e4:	bx	lr

000134e8 <table_compare_string@@Base>:
   134e8:	cmp	r0, #0
   134ec:	beq	134fc <table_compare_string@@Base+0x14>
   134f0:	cmp	r1, #0
   134f4:	beq	13508 <table_compare_string@@Base+0x20>
   134f8:	b	11f00 <strcmp@plt>
   134fc:	cmp	r1, #0
   13500:	mvnne	r1, #0
   13504:	b	1350c <table_compare_string@@Base+0x24>
   13508:	mov	r1, #1
   1350c:	mov	r0, r1
   13510:	bx	lr

00013514 <table_compare_ptr@@Base>:
   13514:	cmp	r0, r1
   13518:	mov	r2, #0
   1351c:	mvncc	r2, #0
   13520:	movwhi	r2, #1
   13524:	mov	r0, r2
   13528:	bx	lr

0001352c <table_get_default_compare_function_for_data_type@@Base>:
   1352c:	cmp	r0, #23
   13530:	movhi	r0, #0
   13534:	bxhi	lr
   13538:	movw	r1, #19436	; 0x4bec
   1353c:	movt	r1, #1
   13540:	ldr	r0, [r1, r0, lsl #2]
   13544:	bx	lr

00013548 <table_get@@Base>:
   13548:	push	{fp, lr}
   1354c:	mov	fp, sp
   13550:	bl	140fc <table_get_cell_ptr@@Base>
   13554:	ldr	r0, [r0]
   13558:	pop	{fp, pc}

0001355c <table_get_bool@@Base>:
   1355c:	push	{fp, lr}
   13560:	mov	fp, sp
   13564:	bl	140fc <table_get_cell_ptr@@Base>
   13568:	ldr	r0, [r0]
   1356c:	ldrb	r0, [r0]
   13570:	pop	{fp, pc}

00013574 <table_get_int@@Base>:
   13574:	push	{fp, lr}
   13578:	mov	fp, sp
   1357c:	bl	140fc <table_get_cell_ptr@@Base>
   13580:	ldr	r0, [r0]
   13584:	ldr	r0, [r0]
   13588:	pop	{fp, pc}

0001358c <table_get_uint@@Base>:
   1358c:	push	{fp, lr}
   13590:	mov	fp, sp
   13594:	bl	140fc <table_get_cell_ptr@@Base>
   13598:	ldr	r0, [r0]
   1359c:	ldr	r0, [r0]
   135a0:	pop	{fp, pc}

000135a4 <table_get_int8@@Base>:
   135a4:	push	{fp, lr}
   135a8:	mov	fp, sp
   135ac:	bl	140fc <table_get_cell_ptr@@Base>
   135b0:	ldr	r0, [r0]
   135b4:	ldrsb	r0, [r0]
   135b8:	pop	{fp, pc}

000135bc <table_get_uint8@@Base>:
   135bc:	push	{fp, lr}
   135c0:	mov	fp, sp
   135c4:	bl	140fc <table_get_cell_ptr@@Base>
   135c8:	ldr	r0, [r0]
   135cc:	ldrb	r0, [r0]
   135d0:	pop	{fp, pc}

000135d4 <table_get_int16@@Base>:
   135d4:	push	{fp, lr}
   135d8:	mov	fp, sp
   135dc:	bl	140fc <table_get_cell_ptr@@Base>
   135e0:	ldr	r0, [r0]
   135e4:	ldrsh	r0, [r0]
   135e8:	pop	{fp, pc}

000135ec <table_get_uint16@@Base>:
   135ec:	push	{fp, lr}
   135f0:	mov	fp, sp
   135f4:	bl	140fc <table_get_cell_ptr@@Base>
   135f8:	ldr	r0, [r0]
   135fc:	ldrh	r0, [r0]
   13600:	pop	{fp, pc}

00013604 <table_get_int32@@Base>:
   13604:	push	{fp, lr}
   13608:	mov	fp, sp
   1360c:	bl	140fc <table_get_cell_ptr@@Base>
   13610:	ldr	r0, [r0]
   13614:	ldr	r0, [r0]
   13618:	pop	{fp, pc}

0001361c <table_get_uint32@@Base>:
   1361c:	push	{fp, lr}
   13620:	mov	fp, sp
   13624:	bl	140fc <table_get_cell_ptr@@Base>
   13628:	ldr	r0, [r0]
   1362c:	ldr	r0, [r0]
   13630:	pop	{fp, pc}

00013634 <table_get_int64@@Base>:
   13634:	push	{fp, lr}
   13638:	mov	fp, sp
   1363c:	bl	140fc <table_get_cell_ptr@@Base>
   13640:	ldr	r0, [r0]
   13644:	ldrd	r0, [r0]
   13648:	pop	{fp, pc}

0001364c <table_get_uint64@@Base>:
   1364c:	push	{fp, lr}
   13650:	mov	fp, sp
   13654:	bl	140fc <table_get_cell_ptr@@Base>
   13658:	ldr	r0, [r0]
   1365c:	ldrd	r0, [r0]
   13660:	pop	{fp, pc}

00013664 <table_get_short@@Base>:
   13664:	push	{fp, lr}
   13668:	mov	fp, sp
   1366c:	bl	140fc <table_get_cell_ptr@@Base>
   13670:	ldr	r0, [r0]
   13674:	ldrsh	r0, [r0]
   13678:	pop	{fp, pc}

0001367c <table_get_ushort@@Base>:
   1367c:	push	{fp, lr}
   13680:	mov	fp, sp
   13684:	bl	140fc <table_get_cell_ptr@@Base>
   13688:	ldr	r0, [r0]
   1368c:	ldrh	r0, [r0]
   13690:	pop	{fp, pc}

00013694 <table_get_long@@Base>:
   13694:	push	{fp, lr}
   13698:	mov	fp, sp
   1369c:	bl	140fc <table_get_cell_ptr@@Base>
   136a0:	ldr	r0, [r0]
   136a4:	ldr	r0, [r0]
   136a8:	pop	{fp, pc}

000136ac <table_get_ulong@@Base>:
   136ac:	push	{fp, lr}
   136b0:	mov	fp, sp
   136b4:	bl	140fc <table_get_cell_ptr@@Base>
   136b8:	ldr	r0, [r0]
   136bc:	ldr	r0, [r0]
   136c0:	pop	{fp, pc}

000136c4 <table_get_llong@@Base>:
   136c4:	push	{fp, lr}
   136c8:	mov	fp, sp
   136cc:	bl	140fc <table_get_cell_ptr@@Base>
   136d0:	ldr	r0, [r0]
   136d4:	ldrd	r0, [r0]
   136d8:	pop	{fp, pc}

000136dc <table_get_ullong@@Base>:
   136dc:	push	{fp, lr}
   136e0:	mov	fp, sp
   136e4:	bl	140fc <table_get_cell_ptr@@Base>
   136e8:	ldr	r0, [r0]
   136ec:	ldrd	r0, [r0]
   136f0:	pop	{fp, pc}

000136f4 <table_get_float@@Base>:
   136f4:	push	{fp, lr}
   136f8:	mov	fp, sp
   136fc:	bl	140fc <table_get_cell_ptr@@Base>
   13700:	ldr	r0, [r0]
   13704:	vldr	s0, [r0]
   13708:	pop	{fp, pc}

0001370c <table_get_double@@Base>:
   1370c:	push	{fp, lr}
   13710:	mov	fp, sp
   13714:	bl	140fc <table_get_cell_ptr@@Base>
   13718:	ldr	r0, [r0]
   1371c:	vldr	d0, [r0]
   13720:	pop	{fp, pc}

00013724 <table_get_ldouble@@Base>:
   13724:	push	{fp, lr}
   13728:	mov	fp, sp
   1372c:	bl	140fc <table_get_cell_ptr@@Base>
   13730:	ldr	r0, [r0]
   13734:	vldr	d0, [r0]
   13738:	pop	{fp, pc}

0001373c <table_get_char@@Base>:
   1373c:	push	{fp, lr}
   13740:	mov	fp, sp
   13744:	bl	140fc <table_get_cell_ptr@@Base>
   13748:	ldr	r0, [r0]
   1374c:	ldrb	r0, [r0]
   13750:	pop	{fp, pc}

00013754 <table_get_uchar@@Base>:
   13754:	push	{fp, lr}
   13758:	mov	fp, sp
   1375c:	bl	140fc <table_get_cell_ptr@@Base>
   13760:	ldr	r0, [r0]
   13764:	ldrb	r0, [r0]
   13768:	pop	{fp, pc}

0001376c <table_get_string@@Base>:
   1376c:	push	{fp, lr}
   13770:	mov	fp, sp
   13774:	bl	140fc <table_get_cell_ptr@@Base>
   13778:	ldr	r0, [r0]
   1377c:	pop	{fp, pc}

00013780 <table_get_ptr@@Base>:
   13780:	push	{fp, lr}
   13784:	mov	fp, sp
   13788:	bl	140fc <table_get_cell_ptr@@Base>
   1378c:	ldr	r0, [r0]
   13790:	pop	{fp, pc}

00013794 <table_row_init@@Base>:
   13794:	push	{r4, r5, fp, lr}
   13798:	add	fp, sp, #8
   1379c:	mov	r4, r1
   137a0:	ldr	r1, [r0, #12]
   137a4:	ldr	r5, [r0, #16]
   137a8:	lsl	r0, r1, #2
   137ac:	bl	11f48 <malloc@plt>
   137b0:	str	r0, [r5, r4, lsl #2]
   137b4:	pop	{r4, r5, fp, pc}

000137b8 <table_get_row_ptr@@Base>:
   137b8:	ldr	r0, [r0, #16]
   137bc:	add	r0, r0, r1, lsl #2
   137c0:	bx	lr

000137c4 <table_row_destroy@@Base>:
   137c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   137c8:	add	fp, sp, #24
   137cc:	mov	r4, r1
   137d0:	mov	r5, r0
   137d4:	bl	12b68 <table_get_column_length@@Base>
   137d8:	ldr	r8, [r5, #16]
   137dc:	cmp	r0, #1
   137e0:	blt	13808 <table_row_destroy@@Base+0x44>
   137e4:	mov	r6, r0
   137e8:	mov	r7, #0
   137ec:	mov	r0, r5
   137f0:	mov	r1, r4
   137f4:	mov	r2, r7
   137f8:	bl	14118 <table_cell_destroy@@Base>
   137fc:	add	r7, r7, #1
   13800:	cmp	r6, r7
   13804:	bne	137ec <table_row_destroy@@Base+0x28>
   13808:	ldr	r0, [r8, r4, lsl #2]
   1380c:	cmp	r0, #0
   13810:	beq	1381c <table_row_destroy@@Base+0x58>
   13814:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13818:	b	11f18 <free@plt>
   1381c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013820 <table_get_row_length@@Base>:
   13820:	ldr	r0, [r0, #20]
   13824:	bx	lr

00013828 <table_add_row@@Base>:
   13828:	push	{r4, r5, r6, r7, fp, lr}
   1382c:	add	fp, sp, #16
   13830:	ldr	r5, [r0, #20]
   13834:	ldr	r1, [r0, #24]
   13838:	mov	r4, r0
   1383c:	udiv	r0, r5, r1
   13840:	mls	r0, r0, r1, r5
   13844:	cmp	r0, #0
   13848:	bne	1386c <table_add_row@@Base+0x44>
   1384c:	ldr	r2, [r4, #28]
   13850:	ldr	r0, [r4, #16]
   13854:	add	r1, r2, r1
   13858:	str	r1, [r4, #28]
   1385c:	lsl	r1, r1, #2
   13860:	bl	11f30 <realloc@plt>
   13864:	str	r0, [r4, #16]
   13868:	ldr	r5, [r4, #20]
   1386c:	mov	r0, r4
   13870:	bl	12b68 <table_get_column_length@@Base>
   13874:	mov	r6, r0
   13878:	ldr	r0, [r4, #12]
   1387c:	ldr	r7, [r4, #16]
   13880:	lsl	r0, r0, #2
   13884:	bl	11f48 <malloc@plt>
   13888:	cmp	r6, #1
   1388c:	str	r0, [r7, r5, lsl #2]
   13890:	blt	138b4 <table_add_row@@Base+0x8c>
   13894:	mov	r7, #0
   13898:	mov	r0, r4
   1389c:	mov	r1, r5
   138a0:	mov	r2, r7
   138a4:	bl	140dc <table_cell_init@@Base>
   138a8:	add	r7, r7, #1
   138ac:	cmp	r6, r7
   138b0:	bne	13898 <table_add_row@@Base+0x70>
   138b4:	ldr	r1, [r4, #20]
   138b8:	mov	r0, r4
   138bc:	mvn	r2, #0
   138c0:	mov	r3, #2
   138c4:	bl	12a74 <table_notify@@Base>
   138c8:	ldr	r0, [r4, #20]
   138cc:	add	r1, r0, #1
   138d0:	str	r1, [r4, #20]
   138d4:	pop	{r4, r5, r6, r7, fp, pc}

000138d8 <table_remove_row@@Base>:
   138d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   138dc:	add	fp, sp, #24
   138e0:	ldr	r8, [r0, #20]
   138e4:	mov	r4, r1
   138e8:	mov	r5, r0
   138ec:	bl	12b68 <table_get_column_length@@Base>
   138f0:	cmp	r0, #1
   138f4:	blt	13940 <table_remove_row@@Base+0x68>
   138f8:	mov	r6, r0
   138fc:	mov	r7, #0
   13900:	mov	r0, r5
   13904:	mov	r1, r7
   13908:	bl	12be0 <table_get_column_data_type@@Base>
   1390c:	cmp	r0, #23
   13910:	beq	13934 <table_remove_row@@Base+0x5c>
   13914:	mov	r0, r5
   13918:	mov	r1, r4
   1391c:	mov	r2, r7
   13920:	bl	140fc <table_get_cell_ptr@@Base>
   13924:	ldr	r0, [r0]
   13928:	cmp	r0, #0
   1392c:	beq	13934 <table_remove_row@@Base+0x5c>
   13930:	bl	11f18 <free@plt>
   13934:	add	r7, r7, #1
   13938:	cmp	r6, r7
   1393c:	bne	13900 <table_remove_row@@Base+0x28>
   13940:	ldr	r0, [r5, #16]
   13944:	ldr	r0, [r0, r4, lsl #2]
   13948:	cmp	r0, #0
   1394c:	beq	13954 <table_remove_row@@Base+0x7c>
   13950:	bl	11f18 <free@plt>
   13954:	sub	r0, r8, #1
   13958:	cmp	r0, r4
   1395c:	ble	13980 <table_remove_row@@Base+0xa8>
   13960:	mov	r1, r4
   13964:	ldr	r2, [r5, #16]
   13968:	add	r3, r2, r1, lsl #2
   1396c:	ldr	r3, [r3, #4]
   13970:	str	r3, [r2, r1, lsl #2]
   13974:	add	r1, r1, #1
   13978:	cmp	r0, r1
   1397c:	bne	13964 <table_remove_row@@Base+0x8c>
   13980:	ldr	r0, [r5, #20]
   13984:	ldr	r1, [r5, #24]
   13988:	sub	r0, r0, #1
   1398c:	udiv	r2, r0, r1
   13990:	str	r0, [r5, #20]
   13994:	mls	r0, r2, r1, r0
   13998:	cmp	r0, #0
   1399c:	bne	139bc <table_remove_row@@Base+0xe4>
   139a0:	ldr	r2, [r5, #28]
   139a4:	ldr	r0, [r5, #16]
   139a8:	sub	r1, r2, r1
   139ac:	str	r1, [r5, #28]
   139b0:	lsl	r1, r1, #2
   139b4:	bl	11f30 <realloc@plt>
   139b8:	str	r0, [r5, #16]
   139bc:	mov	r0, r5
   139c0:	mov	r1, r4
   139c4:	mvn	r2, #0
   139c8:	mov	r3, #4
   139cc:	bl	12a74 <table_notify@@Base>
   139d0:	mov	r0, #0
   139d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000139d8 <table_set_row_ptr@@Base>:
   139d8:	ldr	r2, [r2]
   139dc:	ldr	r0, [r0, #16]
   139e0:	str	r2, [r0, r1, lsl #2]
   139e4:	bx	lr

000139e8 <table_set@@Base>:
   139e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   139ec:	add	fp, sp, #24
   139f0:	mov	r8, r3
   139f4:	mov	r4, r2
   139f8:	mov	r9, r1
   139fc:	mov	r6, r0
   13a00:	bl	140fc <table_get_cell_ptr@@Base>
   13a04:	mov	r5, r0
   13a08:	mov	r0, r6
   13a0c:	mov	r1, r4
   13a10:	bl	12b40 <table_get_col_ptr@@Base>
   13a14:	ldr	r1, [fp, #8]
   13a18:	mvn	r7, #0
   13a1c:	cmp	r1, #23
   13a20:	bhi	13ce0 <table_set@@Base+0x2f8>
   13a24:	add	r2, pc, #0
   13a28:	ldr	pc, [r2, r1, lsl #2]
   13a2c:	andeq	r3, r1, ip, lsl #21
   13a30:	muleq	r1, ip, sl
   13a34:	andeq	r3, r1, ip, lsr #21
   13a38:			; <UNDEFINED> instruction: 0x00013abc
   13a3c:	andeq	r3, r1, ip, asr #21
   13a40:	ldrdeq	r3, [r1], -ip
   13a44:	andeq	r3, r1, ip, ror #21
   13a48:	strdeq	r3, [r1], -ip
   13a4c:	andeq	r3, r1, ip, lsl #22
   13a50:	andeq	r3, r1, ip, lsl fp
   13a54:	andeq	r3, r1, ip, lsr #22
   13a58:	andeq	r3, r1, ip, lsr fp
   13a5c:	andeq	r3, r1, r4, ror fp
   13a60:	andeq	r3, r1, r4, lsl #23
   13a64:	muleq	r1, r4, fp
   13a68:	andeq	r3, r1, r4, lsr #23
   13a6c:			; <UNDEFINED> instruction: 0x00013bb4
   13a70:	andeq	r3, r1, r8, ror #23
   13a74:	strdeq	r3, [r1], -r8
   13a78:	andeq	r3, r1, r8, lsr ip
   13a7c:	andeq	r3, r1, r8, asr #24
   13a80:	andeq	r3, r1, r8, asr ip
   13a84:	muleq	r1, r4, ip
   13a88:	andeq	r3, r1, r8, ror #25
   13a8c:	ldr	r0, [r0, #4]
   13a90:	cmp	r0, #0
   13a94:	bne	13ce0 <table_set@@Base+0x2f8>
   13a98:	b	13bc0 <table_set@@Base+0x1d8>
   13a9c:	ldr	r0, [r0, #4]
   13aa0:	cmp	r0, #1
   13aa4:	beq	13bc0 <table_set@@Base+0x1d8>
   13aa8:	b	13ce0 <table_set@@Base+0x2f8>
   13aac:	ldr	r0, [r0, #4]
   13ab0:	cmp	r0, #2
   13ab4:	beq	13ca0 <table_set@@Base+0x2b8>
   13ab8:	b	13ce0 <table_set@@Base+0x2f8>
   13abc:	ldr	r0, [r0, #4]
   13ac0:	cmp	r0, #3
   13ac4:	beq	13ca0 <table_set@@Base+0x2b8>
   13ac8:	b	13ce0 <table_set@@Base+0x2f8>
   13acc:	ldr	r0, [r0, #4]
   13ad0:	cmp	r0, #4
   13ad4:	beq	13b48 <table_set@@Base+0x160>
   13ad8:	b	13ce0 <table_set@@Base+0x2f8>
   13adc:	ldr	r0, [r0, #4]
   13ae0:	cmp	r0, #5
   13ae4:	beq	13b48 <table_set@@Base+0x160>
   13ae8:	b	13ce0 <table_set@@Base+0x2f8>
   13aec:	ldr	r0, [r0, #4]
   13af0:	cmp	r0, #6
   13af4:	beq	13bc0 <table_set@@Base+0x1d8>
   13af8:	b	13ce0 <table_set@@Base+0x2f8>
   13afc:	ldr	r0, [r0, #4]
   13b00:	cmp	r0, #7
   13b04:	beq	13bc0 <table_set@@Base+0x1d8>
   13b08:	b	13ce0 <table_set@@Base+0x2f8>
   13b0c:	ldr	r0, [r0, #4]
   13b10:	cmp	r0, #8
   13b14:	beq	13c04 <table_set@@Base+0x21c>
   13b18:	b	13ce0 <table_set@@Base+0x2f8>
   13b1c:	ldr	r0, [r0, #4]
   13b20:	cmp	r0, #9
   13b24:	beq	13c04 <table_set@@Base+0x21c>
   13b28:	b	13ce0 <table_set@@Base+0x2f8>
   13b2c:	ldr	r0, [r0, #4]
   13b30:	cmp	r0, #10
   13b34:	beq	13b48 <table_set@@Base+0x160>
   13b38:	b	13ce0 <table_set@@Base+0x2f8>
   13b3c:	ldr	r0, [r0, #4]
   13b40:	cmp	r0, #11
   13b44:	bne	13ce0 <table_set@@Base+0x2f8>
   13b48:	ldr	r0, [r5]
   13b4c:	cmp	r0, #0
   13b50:	bne	13b68 <table_set@@Base+0x180>
   13b54:	mov	r0, #2
   13b58:	bl	11f48 <malloc@plt>
   13b5c:	cmp	r0, #0
   13b60:	str	r0, [r5]
   13b64:	beq	13ce0 <table_set@@Base+0x2f8>
   13b68:	ldrh	r1, [r8]
   13b6c:	strh	r1, [r0]
   13b70:	b	13cc8 <table_set@@Base+0x2e0>
   13b74:	ldr	r0, [r0, #4]
   13b78:	cmp	r0, #12
   13b7c:	beq	13bc0 <table_set@@Base+0x1d8>
   13b80:	b	13ce0 <table_set@@Base+0x2f8>
   13b84:	ldr	r0, [r0, #4]
   13b88:	cmp	r0, #13
   13b8c:	beq	13bc0 <table_set@@Base+0x1d8>
   13b90:	b	13ce0 <table_set@@Base+0x2f8>
   13b94:	ldr	r0, [r0, #4]
   13b98:	cmp	r0, #14
   13b9c:	beq	13c04 <table_set@@Base+0x21c>
   13ba0:	b	13ce0 <table_set@@Base+0x2f8>
   13ba4:	ldr	r0, [r0, #4]
   13ba8:	cmp	r0, #15
   13bac:	beq	13c04 <table_set@@Base+0x21c>
   13bb0:	b	13ce0 <table_set@@Base+0x2f8>
   13bb4:	ldr	r0, [r0, #4]
   13bb8:	cmp	r0, #16
   13bbc:	bne	13ce0 <table_set@@Base+0x2f8>
   13bc0:	ldr	r0, [r5]
   13bc4:	cmp	r0, #0
   13bc8:	bne	13be0 <table_set@@Base+0x1f8>
   13bcc:	mov	r0, #4
   13bd0:	bl	11f48 <malloc@plt>
   13bd4:	cmp	r0, #0
   13bd8:	str	r0, [r5]
   13bdc:	beq	13ce0 <table_set@@Base+0x2f8>
   13be0:	ldr	r1, [r8]
   13be4:	b	13c30 <table_set@@Base+0x248>
   13be8:	ldr	r0, [r0, #4]
   13bec:	cmp	r0, #17
   13bf0:	beq	13c04 <table_set@@Base+0x21c>
   13bf4:	b	13ce0 <table_set@@Base+0x2f8>
   13bf8:	ldr	r0, [r0, #4]
   13bfc:	cmp	r0, #18
   13c00:	bne	13ce0 <table_set@@Base+0x2f8>
   13c04:	ldr	r0, [r5]
   13c08:	cmp	r0, #0
   13c0c:	bne	13c24 <table_set@@Base+0x23c>
   13c10:	mov	r0, #8
   13c14:	bl	11f48 <malloc@plt>
   13c18:	cmp	r0, #0
   13c1c:	str	r0, [r5]
   13c20:	beq	13ce0 <table_set@@Base+0x2f8>
   13c24:	ldr	r1, [r8]
   13c28:	ldr	r2, [r8, #4]
   13c2c:	str	r2, [r0, #4]
   13c30:	str	r1, [r0]
   13c34:	b	13cc8 <table_set@@Base+0x2e0>
   13c38:	ldr	r0, [r0, #4]
   13c3c:	cmp	r0, #19
   13c40:	beq	13ca0 <table_set@@Base+0x2b8>
   13c44:	b	13ce0 <table_set@@Base+0x2f8>
   13c48:	ldr	r0, [r0, #4]
   13c4c:	cmp	r0, #20
   13c50:	beq	13ca0 <table_set@@Base+0x2b8>
   13c54:	b	13ce0 <table_set@@Base+0x2f8>
   13c58:	ldr	r0, [r0, #4]
   13c5c:	cmp	r0, #21
   13c60:	bne	13ce0 <table_set@@Base+0x2f8>
   13c64:	mov	r0, r8
   13c68:	bl	11f6c <strlen@plt>
   13c6c:	ldr	r2, [r5]
   13c70:	add	r1, r0, #1
   13c74:	mov	r0, r2
   13c78:	bl	11f30 <realloc@plt>
   13c7c:	cmp	r0, #0
   13c80:	str	r0, [r5]
   13c84:	beq	13ce0 <table_set@@Base+0x2f8>
   13c88:	mov	r1, r8
   13c8c:	bl	11f3c <strcpy@plt>
   13c90:	b	13cc8 <table_set@@Base+0x2e0>
   13c94:	ldr	r0, [r0, #4]
   13c98:	cmp	r0, #22
   13c9c:	bne	13ce0 <table_set@@Base+0x2f8>
   13ca0:	ldr	r0, [r5]
   13ca4:	cmp	r0, #0
   13ca8:	bne	13cc0 <table_set@@Base+0x2d8>
   13cac:	mov	r0, #1
   13cb0:	bl	11f48 <malloc@plt>
   13cb4:	cmp	r0, #0
   13cb8:	str	r0, [r5]
   13cbc:	beq	13ce0 <table_set@@Base+0x2f8>
   13cc0:	ldrb	r1, [r8]
   13cc4:	strb	r1, [r0]
   13cc8:	mov	r0, r6
   13ccc:	mov	r1, r9
   13cd0:	mov	r2, r4
   13cd4:	mov	r3, #1
   13cd8:	bl	12a74 <table_notify@@Base>
   13cdc:	mov	r7, #0
   13ce0:	mov	r0, r7
   13ce4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13ce8:	ldr	r0, [r0, #4]
   13cec:	cmp	r0, #23
   13cf0:	bne	13ce0 <table_set@@Base+0x2f8>
   13cf4:	str	r8, [r5]
   13cf8:	b	13cc8 <table_set@@Base+0x2e0>

00013cfc <table_set_bool@@Base>:
   13cfc:	push	{fp, lr}
   13d00:	mov	fp, sp
   13d04:	sub	sp, sp, #8
   13d08:	strb	r3, [fp, #-1]
   13d0c:	mov	r3, #22
   13d10:	str	r3, [sp]
   13d14:	sub	r3, fp, #1
   13d18:	bl	139e8 <table_set@@Base>
   13d1c:	mov	sp, fp
   13d20:	pop	{fp, pc}

00013d24 <table_set_int@@Base>:
   13d24:	push	{fp, lr}
   13d28:	mov	fp, sp
   13d2c:	sub	sp, sp, #8
   13d30:	str	r3, [sp, #4]
   13d34:	mov	r3, #0
   13d38:	str	r3, [sp]
   13d3c:	add	r3, sp, #4
   13d40:	bl	139e8 <table_set@@Base>
   13d44:	mov	sp, fp
   13d48:	pop	{fp, pc}

00013d4c <table_set_uint@@Base>:
   13d4c:	push	{fp, lr}
   13d50:	mov	fp, sp
   13d54:	sub	sp, sp, #8
   13d58:	str	r3, [sp, #4]
   13d5c:	mov	r3, #1
   13d60:	str	r3, [sp]
   13d64:	add	r3, sp, #4
   13d68:	bl	139e8 <table_set@@Base>
   13d6c:	mov	sp, fp
   13d70:	pop	{fp, pc}

00013d74 <table_set_int8@@Base>:
   13d74:	push	{fp, lr}
   13d78:	mov	fp, sp
   13d7c:	sub	sp, sp, #8
   13d80:	strb	r3, [fp, #-1]
   13d84:	mov	r3, #2
   13d88:	str	r3, [sp]
   13d8c:	sub	r3, fp, #1
   13d90:	bl	139e8 <table_set@@Base>
   13d94:	mov	sp, fp
   13d98:	pop	{fp, pc}

00013d9c <table_set_uint8@@Base>:
   13d9c:	push	{fp, lr}
   13da0:	mov	fp, sp
   13da4:	sub	sp, sp, #8
   13da8:	strb	r3, [fp, #-1]
   13dac:	mov	r3, #3
   13db0:	str	r3, [sp]
   13db4:	sub	r3, fp, #1
   13db8:	bl	139e8 <table_set@@Base>
   13dbc:	mov	sp, fp
   13dc0:	pop	{fp, pc}

00013dc4 <table_set_int16@@Base>:
   13dc4:	push	{fp, lr}
   13dc8:	mov	fp, sp
   13dcc:	sub	sp, sp, #8
   13dd0:	strh	r3, [fp, #-2]
   13dd4:	mov	r3, #4
   13dd8:	str	r3, [sp]
   13ddc:	sub	r3, fp, #2
   13de0:	bl	139e8 <table_set@@Base>
   13de4:	mov	sp, fp
   13de8:	pop	{fp, pc}

00013dec <table_set_uint16@@Base>:
   13dec:	push	{fp, lr}
   13df0:	mov	fp, sp
   13df4:	sub	sp, sp, #8
   13df8:	strh	r3, [fp, #-2]
   13dfc:	mov	r3, #5
   13e00:	str	r3, [sp]
   13e04:	sub	r3, fp, #2
   13e08:	bl	139e8 <table_set@@Base>
   13e0c:	mov	sp, fp
   13e10:	pop	{fp, pc}

00013e14 <table_set_int32@@Base>:
   13e14:	push	{fp, lr}
   13e18:	mov	fp, sp
   13e1c:	sub	sp, sp, #8
   13e20:	str	r3, [sp, #4]
   13e24:	mov	r3, #6
   13e28:	str	r3, [sp]
   13e2c:	add	r3, sp, #4
   13e30:	bl	139e8 <table_set@@Base>
   13e34:	mov	sp, fp
   13e38:	pop	{fp, pc}

00013e3c <table_set_uint32@@Base>:
   13e3c:	push	{fp, lr}
   13e40:	mov	fp, sp
   13e44:	sub	sp, sp, #8
   13e48:	str	r3, [sp, #4]
   13e4c:	mov	r3, #7
   13e50:	str	r3, [sp]
   13e54:	add	r3, sp, #4
   13e58:	bl	139e8 <table_set@@Base>
   13e5c:	mov	sp, fp
   13e60:	pop	{fp, pc}

00013e64 <table_set_int64@@Base>:
   13e64:	push	{fp, lr}
   13e68:	mov	fp, sp
   13e6c:	sub	sp, sp, #16
   13e70:	ldr	r3, [fp, #12]
   13e74:	str	r3, [sp, #12]
   13e78:	ldr	r3, [fp, #8]
   13e7c:	str	r3, [sp, #8]
   13e80:	mov	r3, #8
   13e84:	str	r3, [sp]
   13e88:	add	r3, sp, #8
   13e8c:	bl	139e8 <table_set@@Base>
   13e90:	mov	sp, fp
   13e94:	pop	{fp, pc}

00013e98 <table_set_uint64@@Base>:
   13e98:	push	{fp, lr}
   13e9c:	mov	fp, sp
   13ea0:	sub	sp, sp, #16
   13ea4:	ldr	r3, [fp, #12]
   13ea8:	str	r3, [sp, #12]
   13eac:	ldr	r3, [fp, #8]
   13eb0:	str	r3, [sp, #8]
   13eb4:	mov	r3, #9
   13eb8:	str	r3, [sp]
   13ebc:	add	r3, sp, #8
   13ec0:	bl	139e8 <table_set@@Base>
   13ec4:	mov	sp, fp
   13ec8:	pop	{fp, pc}

00013ecc <table_set_short@@Base>:
   13ecc:	push	{fp, lr}
   13ed0:	mov	fp, sp
   13ed4:	sub	sp, sp, #8
   13ed8:	strh	r3, [fp, #-2]
   13edc:	mov	r3, #10
   13ee0:	str	r3, [sp]
   13ee4:	sub	r3, fp, #2
   13ee8:	bl	139e8 <table_set@@Base>
   13eec:	mov	sp, fp
   13ef0:	pop	{fp, pc}

00013ef4 <table_set_ushort@@Base>:
   13ef4:	push	{fp, lr}
   13ef8:	mov	fp, sp
   13efc:	sub	sp, sp, #8
   13f00:	strh	r3, [fp, #-2]
   13f04:	mov	r3, #11
   13f08:	str	r3, [sp]
   13f0c:	sub	r3, fp, #2
   13f10:	bl	139e8 <table_set@@Base>
   13f14:	mov	sp, fp
   13f18:	pop	{fp, pc}

00013f1c <table_set_long@@Base>:
   13f1c:	push	{fp, lr}
   13f20:	mov	fp, sp
   13f24:	sub	sp, sp, #8
   13f28:	str	r3, [sp, #4]
   13f2c:	mov	r3, #12
   13f30:	str	r3, [sp]
   13f34:	add	r3, sp, #4
   13f38:	bl	139e8 <table_set@@Base>
   13f3c:	mov	sp, fp
   13f40:	pop	{fp, pc}

00013f44 <table_set_ulong@@Base>:
   13f44:	push	{fp, lr}
   13f48:	mov	fp, sp
   13f4c:	sub	sp, sp, #8
   13f50:	str	r3, [sp, #4]
   13f54:	mov	r3, #13
   13f58:	str	r3, [sp]
   13f5c:	add	r3, sp, #4
   13f60:	bl	139e8 <table_set@@Base>
   13f64:	mov	sp, fp
   13f68:	pop	{fp, pc}

00013f6c <table_set_llong@@Base>:
   13f6c:	push	{fp, lr}
   13f70:	mov	fp, sp
   13f74:	sub	sp, sp, #16
   13f78:	ldr	r3, [fp, #12]
   13f7c:	str	r3, [sp, #12]
   13f80:	ldr	r3, [fp, #8]
   13f84:	str	r3, [sp, #8]
   13f88:	mov	r3, #14
   13f8c:	str	r3, [sp]
   13f90:	add	r3, sp, #8
   13f94:	bl	139e8 <table_set@@Base>
   13f98:	mov	sp, fp
   13f9c:	pop	{fp, pc}

00013fa0 <table_set_ullong@@Base>:
   13fa0:	push	{fp, lr}
   13fa4:	mov	fp, sp
   13fa8:	sub	sp, sp, #16
   13fac:	ldr	r3, [fp, #12]
   13fb0:	str	r3, [sp, #12]
   13fb4:	ldr	r3, [fp, #8]
   13fb8:	str	r3, [sp, #8]
   13fbc:	mov	r3, #15
   13fc0:	str	r3, [sp]
   13fc4:	add	r3, sp, #8
   13fc8:	bl	139e8 <table_set@@Base>
   13fcc:	mov	sp, fp
   13fd0:	pop	{fp, pc}

00013fd4 <table_set_float@@Base>:
   13fd4:	push	{fp, lr}
   13fd8:	mov	fp, sp
   13fdc:	sub	sp, sp, #8
   13fe0:	mov	r3, #16
   13fe4:	vstr	s0, [sp, #4]
   13fe8:	str	r3, [sp]
   13fec:	add	r3, sp, #4
   13ff0:	bl	139e8 <table_set@@Base>
   13ff4:	mov	sp, fp
   13ff8:	pop	{fp, pc}

00013ffc <table_set_double@@Base>:
   13ffc:	push	{fp, lr}
   14000:	mov	fp, sp
   14004:	sub	sp, sp, #16
   14008:	mov	r3, #17
   1400c:	vstr	d0, [sp, #8]
   14010:	str	r3, [sp]
   14014:	add	r3, sp, #8
   14018:	bl	139e8 <table_set@@Base>
   1401c:	mov	sp, fp
   14020:	pop	{fp, pc}

00014024 <table_set_ldouble@@Base>:
   14024:	push	{fp, lr}
   14028:	mov	fp, sp
   1402c:	sub	sp, sp, #16
   14030:	mov	r3, #18
   14034:	vstr	d0, [sp, #8]
   14038:	str	r3, [sp]
   1403c:	add	r3, sp, #8
   14040:	bl	139e8 <table_set@@Base>
   14044:	mov	sp, fp
   14048:	pop	{fp, pc}

0001404c <table_set_string@@Base>:
   1404c:	push	{fp, lr}
   14050:	mov	fp, sp
   14054:	sub	sp, sp, #8
   14058:	mov	ip, #21
   1405c:	str	ip, [sp]
   14060:	bl	139e8 <table_set@@Base>
   14064:	mov	sp, fp
   14068:	pop	{fp, pc}

0001406c <table_set_char@@Base>:
   1406c:	push	{fp, lr}
   14070:	mov	fp, sp
   14074:	sub	sp, sp, #8
   14078:	strb	r3, [fp, #-1]
   1407c:	mov	r3, #19
   14080:	str	r3, [sp]
   14084:	sub	r3, fp, #1
   14088:	bl	139e8 <table_set@@Base>
   1408c:	mov	sp, fp
   14090:	pop	{fp, pc}

00014094 <table_set_uchar@@Base>:
   14094:	push	{fp, lr}
   14098:	mov	fp, sp
   1409c:	sub	sp, sp, #8
   140a0:	strb	r3, [fp, #-1]
   140a4:	mov	r3, #20
   140a8:	str	r3, [sp]
   140ac:	sub	r3, fp, #1
   140b0:	bl	139e8 <table_set@@Base>
   140b4:	mov	sp, fp
   140b8:	pop	{fp, pc}

000140bc <table_set_ptr@@Base>:
   140bc:	push	{fp, lr}
   140c0:	mov	fp, sp
   140c4:	sub	sp, sp, #8
   140c8:	mov	ip, #23
   140cc:	str	ip, [sp]
   140d0:	bl	139e8 <table_set@@Base>
   140d4:	mov	sp, fp
   140d8:	pop	{fp, pc}

000140dc <table_cell_init@@Base>:
   140dc:	push	{r4, sl, fp, lr}
   140e0:	add	fp, sp, #8
   140e4:	mov	r4, r2
   140e8:	bl	137b8 <table_get_row_ptr@@Base>
   140ec:	ldr	r0, [r0]
   140f0:	mov	r1, #0
   140f4:	str	r1, [r0, r4, lsl #2]
   140f8:	pop	{r4, sl, fp, pc}

000140fc <table_get_cell_ptr@@Base>:
   140fc:	push	{r4, sl, fp, lr}
   14100:	add	fp, sp, #8
   14104:	mov	r4, r2
   14108:	bl	137b8 <table_get_row_ptr@@Base>
   1410c:	ldr	r0, [r0]
   14110:	add	r0, r0, r4, lsl #2
   14114:	pop	{r4, sl, fp, pc}

00014118 <table_cell_destroy@@Base>:
   14118:	push	{r4, r5, r6, sl, fp, lr}
   1411c:	add	fp, sp, #16
   14120:	mov	r5, r1
   14124:	mov	r1, r2
   14128:	mov	r4, r2
   1412c:	mov	r6, r0
   14130:	bl	12be0 <table_get_column_data_type@@Base>
   14134:	cmp	r0, #23
   14138:	popeq	{r4, r5, r6, sl, fp, pc}
   1413c:	mov	r0, r6
   14140:	mov	r1, r5
   14144:	bl	137b8 <table_get_row_ptr@@Base>
   14148:	ldr	r0, [r0]
   1414c:	ldr	r0, [r0, r4, lsl #2]
   14150:	cmp	r0, #0
   14154:	beq	14160 <table_cell_destroy@@Base+0x48>
   14158:	pop	{r4, r5, r6, sl, fp, lr}
   1415c:	b	11f18 <free@plt>
   14160:	pop	{r4, r5, r6, sl, fp, pc}

00014164 <table_cell_to_buffer@@Base>:
   14164:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14168:	add	fp, sp, #24
   1416c:	sub	sp, sp, #8
   14170:	mov	r7, r1
   14174:	mov	r1, r2
   14178:	mov	r5, r3
   1417c:	mov	r6, r2
   14180:	mov	r4, r0
   14184:	bl	12be0 <table_get_column_data_type@@Base>
   14188:	cmp	r0, #23
   1418c:	bhi	1447c <table_cell_to_buffer@@Base+0x318>
   14190:	ldr	r8, [fp, #8]
   14194:	add	r1, pc, #0
   14198:	ldr	pc, [r1, r0, lsl #2]
   1419c:	strdeq	r4, [r1], -ip
   141a0:	andeq	r4, r1, r0, lsl r2
   141a4:	andeq	r4, r1, r4, lsr #4
   141a8:	andeq	r4, r1, r8, lsr r2
   141ac:	andeq	r4, r1, ip, asr #4
   141b0:	andeq	r4, r1, r0, ror #4
   141b4:	andeq	r4, r1, r4, ror r2
   141b8:	andeq	r4, r1, r8, lsl #5
   141bc:	andeq	r4, r1, r8, lsr #5
   141c0:			; <UNDEFINED> instruction: 0x000142bc
   141c4:	ldrdeq	r4, [r1], -r0
   141c8:	strdeq	r4, [r1], -r0
   141cc:	andeq	r4, r1, r0, lsl r3
   141d0:	andeq	r4, r1, r0, lsr r3
   141d4:	andeq	r4, r1, r0, asr r3
   141d8:	andeq	r4, r1, r0, ror r3
   141dc:	muleq	r1, r0, r3
   141e0:			; <UNDEFINED> instruction: 0x000143b4
   141e4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141e8:	andeq	r4, r1, r0, lsl #8
   141ec:	andeq	r4, r1, r4, lsl r4
   141f0:	andeq	r4, r1, r4, lsr r4
   141f4:	andeq	r4, r1, r4, asr r4
   141f8:	andeq	r4, r1, r8, lsl #9
   141fc:	mov	r0, r4
   14200:	mov	r1, r7
   14204:	mov	r2, r6
   14208:	bl	13574 <table_get_int@@Base>
   1420c:	b	14464 <table_cell_to_buffer@@Base+0x300>
   14210:	mov	r0, r4
   14214:	mov	r1, r7
   14218:	mov	r2, r6
   1421c:	bl	1358c <table_get_uint@@Base>
   14220:	b	14298 <table_cell_to_buffer@@Base+0x134>
   14224:	mov	r0, r4
   14228:	mov	r1, r7
   1422c:	mov	r2, r6
   14230:	bl	135a4 <table_get_int8@@Base>
   14234:	b	14464 <table_cell_to_buffer@@Base+0x300>
   14238:	mov	r0, r4
   1423c:	mov	r1, r7
   14240:	mov	r2, r6
   14244:	bl	135bc <table_get_uint8@@Base>
   14248:	b	14298 <table_cell_to_buffer@@Base+0x134>
   1424c:	mov	r0, r4
   14250:	mov	r1, r7
   14254:	mov	r2, r6
   14258:	bl	135d4 <table_get_int16@@Base>
   1425c:	b	14464 <table_cell_to_buffer@@Base+0x300>
   14260:	mov	r0, r4
   14264:	mov	r1, r7
   14268:	mov	r2, r6
   1426c:	bl	135ec <table_get_uint16@@Base>
   14270:	b	14298 <table_cell_to_buffer@@Base+0x134>
   14274:	mov	r0, r4
   14278:	mov	r1, r7
   1427c:	mov	r2, r6
   14280:	bl	13604 <table_get_int32@@Base>
   14284:	b	14464 <table_cell_to_buffer@@Base+0x300>
   14288:	mov	r0, r4
   1428c:	mov	r1, r7
   14290:	mov	r2, r6
   14294:	bl	1361c <table_get_uint32@@Base>
   14298:	movw	r2, #19532	; 0x4c4c
   1429c:	mov	r3, r0
   142a0:	movt	r2, #1
   142a4:	b	14470 <table_cell_to_buffer@@Base+0x30c>
   142a8:	mov	r0, r4
   142ac:	mov	r1, r7
   142b0:	mov	r2, r6
   142b4:	bl	13634 <table_get_int64@@Base>
   142b8:	b	14360 <table_cell_to_buffer@@Base+0x1fc>
   142bc:	mov	r0, r4
   142c0:	mov	r1, r7
   142c4:	mov	r2, r6
   142c8:	bl	1364c <table_get_uint64@@Base>
   142cc:	b	14380 <table_cell_to_buffer@@Base+0x21c>
   142d0:	mov	r0, r4
   142d4:	mov	r1, r7
   142d8:	mov	r2, r6
   142dc:	bl	13664 <table_get_short@@Base>
   142e0:	movw	r2, #19545	; 0x4c59
   142e4:	mov	r3, r0
   142e8:	movt	r2, #1
   142ec:	b	14470 <table_cell_to_buffer@@Base+0x30c>
   142f0:	mov	r0, r4
   142f4:	mov	r1, r7
   142f8:	mov	r2, r6
   142fc:	bl	1367c <table_get_ushort@@Base>
   14300:	movw	r2, #19549	; 0x4c5d
   14304:	mov	r3, r0
   14308:	movt	r2, #1
   1430c:	b	14470 <table_cell_to_buffer@@Base+0x30c>
   14310:	mov	r0, r4
   14314:	mov	r1, r7
   14318:	mov	r2, r6
   1431c:	bl	13694 <table_get_long@@Base>
   14320:	movw	r2, #19553	; 0x4c61
   14324:	mov	r3, r0
   14328:	movt	r2, #1
   1432c:	b	14470 <table_cell_to_buffer@@Base+0x30c>
   14330:	mov	r0, r4
   14334:	mov	r1, r7
   14338:	mov	r2, r6
   1433c:	bl	136ac <table_get_ulong@@Base>
   14340:	movw	r2, #19557	; 0x4c65
   14344:	mov	r3, r0
   14348:	movt	r2, #1
   1434c:	b	14470 <table_cell_to_buffer@@Base+0x30c>
   14350:	mov	r0, r4
   14354:	mov	r1, r7
   14358:	mov	r2, r6
   1435c:	bl	136c4 <table_get_llong@@Base>
   14360:	movw	r2, #19535	; 0x4c4f
   14364:	stm	sp, {r0, r1}
   14368:	movt	r2, #1
   1436c:	b	143f0 <table_cell_to_buffer@@Base+0x28c>
   14370:	mov	r0, r4
   14374:	mov	r1, r7
   14378:	mov	r2, r6
   1437c:	bl	136dc <table_get_ullong@@Base>
   14380:	movw	r2, #19540	; 0x4c54
   14384:	stm	sp, {r0, r1}
   14388:	movt	r2, #1
   1438c:	b	143f0 <table_cell_to_buffer@@Base+0x28c>
   14390:	mov	r0, r4
   14394:	mov	r1, r7
   14398:	mov	r2, r6
   1439c:	bl	136f4 <table_get_float@@Base>
   143a0:	vcvt.f64.f32	d16, s0
   143a4:	movw	r2, #19564	; 0x4c6c
   143a8:	movt	r2, #1
   143ac:	vstr	d16, [sp]
   143b0:	b	143f0 <table_cell_to_buffer@@Base+0x28c>
   143b4:	mov	r0, r4
   143b8:	mov	r1, r7
   143bc:	mov	r2, r6
   143c0:	bl	1370c <table_get_double@@Base>
   143c4:	movw	r2, #19567	; 0x4c6f
   143c8:	vstr	d0, [sp]
   143cc:	movt	r2, #1
   143d0:	b	143f0 <table_cell_to_buffer@@Base+0x28c>
   143d4:	mov	r0, r4
   143d8:	mov	r1, r7
   143dc:	mov	r2, r6
   143e0:	bl	13724 <table_get_ldouble@@Base>
   143e4:	movw	r2, #19571	; 0x4c73
   143e8:	vstr	d0, [sp]
   143ec:	movt	r2, #1
   143f0:	mov	r0, r5
   143f4:	mov	r1, r8
   143f8:	bl	11f84 <snprintf@plt>
   143fc:	b	1447c <table_cell_to_buffer@@Base+0x318>
   14400:	mov	r0, r4
   14404:	mov	r1, r7
   14408:	mov	r2, r6
   1440c:	bl	1373c <table_get_char@@Base>
   14410:	b	14424 <table_cell_to_buffer@@Base+0x2c0>
   14414:	mov	r0, r4
   14418:	mov	r1, r7
   1441c:	mov	r2, r6
   14420:	bl	13754 <table_get_uchar@@Base>
   14424:	movw	r2, #19575	; 0x4c77
   14428:	mov	r3, r0
   1442c:	movt	r2, #1
   14430:	b	14470 <table_cell_to_buffer@@Base+0x30c>
   14434:	mov	r0, r4
   14438:	mov	r1, r7
   1443c:	mov	r2, r6
   14440:	bl	1376c <table_get_string@@Base>
   14444:	movw	r2, #19561	; 0x4c69
   14448:	mov	r3, r0
   1444c:	movt	r2, #1
   14450:	b	14470 <table_cell_to_buffer@@Base+0x30c>
   14454:	mov	r0, r4
   14458:	mov	r1, r7
   1445c:	mov	r2, r6
   14460:	bl	1355c <table_get_bool@@Base>
   14464:	movw	r2, #19432	; 0x4be8
   14468:	mov	r3, r0
   1446c:	movt	r2, #1
   14470:	mov	r0, r5
   14474:	mov	r1, r8
   14478:	bl	11f84 <snprintf@plt>
   1447c:	mov	r0, #0
   14480:	sub	sp, fp, #24
   14484:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14488:	mov	r0, r4
   1448c:	mov	r1, r7
   14490:	mov	r2, r6
   14494:	bl	13780 <table_get_ptr@@Base>
   14498:	movw	r2, #19578	; 0x4c7a
   1449c:	mov	r3, r0
   144a0:	movt	r2, #1
   144a4:	b	14470 <table_cell_to_buffer@@Base+0x30c>

000144a8 <table_cell_from_buffer@@Base>:
   144a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144ac:	add	fp, sp, #24
   144b0:	sub	sp, sp, #264	; 0x108
   144b4:	mov	r5, r1
   144b8:	mov	r1, r2
   144bc:	mov	r7, r3
   144c0:	mov	r4, r2
   144c4:	mov	r6, r0
   144c8:	bl	12be0 <table_get_column_data_type@@Base>
   144cc:	cmp	r0, #23
   144d0:	bhi	14b00 <table_cell_from_buffer@@Base+0x658>
   144d4:	add	r1, pc, #0
   144d8:	ldr	pc, [r1, r0, lsl #2]
   144dc:	andeq	r4, r1, ip, lsr r5
   144e0:	andeq	r4, r1, r8, ror r5
   144e4:			; <UNDEFINED> instruction: 0x000145b4
   144e8:	strdeq	r4, [r1], -r0
   144ec:	andeq	r4, r1, ip, lsr #12
   144f0:	andeq	r4, r1, r8, ror #12
   144f4:	andeq	r4, r1, r4, lsr #13
   144f8:	andeq	r4, r1, r0, ror #13
   144fc:	andeq	r4, r1, ip, lsl r7
   14500:	andeq	r4, r1, r0, ror #14
   14504:	andeq	r4, r1, r4, lsr #15
   14508:	andeq	r4, r1, r0, ror #15
   1450c:	andeq	r4, r1, ip, lsl r8
   14510:	andeq	r4, r1, r8, asr r8
   14514:	muleq	r1, r4, r8
   14518:	ldrdeq	r4, [r1], -r8
   1451c:	andeq	r4, r1, ip, lsl r9
   14520:	andeq	r4, r1, r8, asr r9
   14524:	muleq	r1, r4, r9
   14528:	ldrdeq	r4, [r1], -r0
   1452c:	andeq	r4, r1, ip, lsl #20
   14530:	andeq	r4, r1, r8, asr #20
   14534:	andeq	r4, r1, r4, lsl #21
   14538:	andeq	r4, r1, r8, asr #21
   1453c:	movw	r1, #19432	; 0x4be8
   14540:	add	r2, sp, #8
   14544:	mov	r0, r7
   14548:	movt	r1, #1
   1454c:	bl	11f90 <__isoc99_sscanf@plt>
   14550:	mov	r1, r0
   14554:	mvn	r0, #0
   14558:	cmp	r1, #1
   1455c:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14560:	ldr	r3, [sp, #8]
   14564:	mov	r0, r6
   14568:	mov	r1, r5
   1456c:	mov	r2, r4
   14570:	bl	13d24 <table_set_int@@Base>
   14574:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   14578:	movw	r1, #19532	; 0x4c4c
   1457c:	add	r2, sp, #8
   14580:	mov	r0, r7
   14584:	movt	r1, #1
   14588:	bl	11f90 <__isoc99_sscanf@plt>
   1458c:	mov	r1, r0
   14590:	mvn	r0, #0
   14594:	cmp	r1, #1
   14598:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   1459c:	ldr	r3, [sp, #8]
   145a0:	mov	r0, r6
   145a4:	mov	r1, r5
   145a8:	mov	r2, r4
   145ac:	bl	13d4c <table_set_uint@@Base>
   145b0:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   145b4:	movw	r1, #19581	; 0x4c7d
   145b8:	add	r2, sp, #8
   145bc:	mov	r0, r7
   145c0:	movt	r1, #1
   145c4:	bl	11f90 <__isoc99_sscanf@plt>
   145c8:	mov	r1, r0
   145cc:	mvn	r0, #0
   145d0:	cmp	r1, #1
   145d4:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   145d8:	ldrsb	r3, [sp, #8]
   145dc:	mov	r0, r6
   145e0:	mov	r1, r5
   145e4:	mov	r2, r4
   145e8:	bl	13d74 <table_set_int8@@Base>
   145ec:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   145f0:	movw	r1, #19586	; 0x4c82
   145f4:	add	r2, sp, #8
   145f8:	mov	r0, r7
   145fc:	movt	r1, #1
   14600:	bl	11f90 <__isoc99_sscanf@plt>
   14604:	mov	r1, r0
   14608:	mvn	r0, #0
   1460c:	cmp	r1, #1
   14610:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14614:	ldrb	r3, [sp, #8]
   14618:	mov	r0, r6
   1461c:	mov	r1, r5
   14620:	mov	r2, r4
   14624:	bl	13d9c <table_set_uint8@@Base>
   14628:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   1462c:	movw	r1, #19545	; 0x4c59
   14630:	add	r2, sp, #8
   14634:	mov	r0, r7
   14638:	movt	r1, #1
   1463c:	bl	11f90 <__isoc99_sscanf@plt>
   14640:	mov	r1, r0
   14644:	mvn	r0, #0
   14648:	cmp	r1, #1
   1464c:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14650:	ldrsh	r3, [sp, #8]
   14654:	mov	r0, r6
   14658:	mov	r1, r5
   1465c:	mov	r2, r4
   14660:	bl	13dc4 <table_set_int16@@Base>
   14664:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   14668:	movw	r1, #19549	; 0x4c5d
   1466c:	add	r2, sp, #8
   14670:	mov	r0, r7
   14674:	movt	r1, #1
   14678:	bl	11f90 <__isoc99_sscanf@plt>
   1467c:	mov	r1, r0
   14680:	mvn	r0, #0
   14684:	cmp	r1, #1
   14688:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   1468c:	ldrh	r3, [sp, #8]
   14690:	mov	r0, r6
   14694:	mov	r1, r5
   14698:	mov	r2, r4
   1469c:	bl	13dec <table_set_uint16@@Base>
   146a0:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   146a4:	movw	r1, #19432	; 0x4be8
   146a8:	add	r2, sp, #8
   146ac:	mov	r0, r7
   146b0:	movt	r1, #1
   146b4:	bl	11f90 <__isoc99_sscanf@plt>
   146b8:	mov	r1, r0
   146bc:	mvn	r0, #0
   146c0:	cmp	r1, #1
   146c4:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   146c8:	ldr	r3, [sp, #8]
   146cc:	mov	r0, r6
   146d0:	mov	r1, r5
   146d4:	mov	r2, r4
   146d8:	bl	13e14 <table_set_int32@@Base>
   146dc:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   146e0:	movw	r1, #19532	; 0x4c4c
   146e4:	add	r2, sp, #8
   146e8:	mov	r0, r7
   146ec:	movt	r1, #1
   146f0:	bl	11f90 <__isoc99_sscanf@plt>
   146f4:	mov	r1, r0
   146f8:	mvn	r0, #0
   146fc:	cmp	r1, #1
   14700:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14704:	ldr	r3, [sp, #8]
   14708:	mov	r0, r6
   1470c:	mov	r1, r5
   14710:	mov	r2, r4
   14714:	bl	13e3c <table_set_uint32@@Base>
   14718:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   1471c:	movw	r1, #19535	; 0x4c4f
   14720:	add	r2, sp, #8
   14724:	mov	r0, r7
   14728:	movt	r1, #1
   1472c:	bl	11f90 <__isoc99_sscanf@plt>
   14730:	mov	r1, r0
   14734:	mvn	r0, #0
   14738:	cmp	r1, #1
   1473c:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14740:	ldr	r0, [sp, #8]
   14744:	ldr	r1, [sp, #12]
   14748:	mov	r2, r4
   1474c:	stm	sp, {r0, r1}
   14750:	mov	r0, r6
   14754:	mov	r1, r5
   14758:	bl	13e64 <table_set_int64@@Base>
   1475c:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   14760:	movw	r1, #19540	; 0x4c54
   14764:	add	r2, sp, #8
   14768:	mov	r0, r7
   1476c:	movt	r1, #1
   14770:	bl	11f90 <__isoc99_sscanf@plt>
   14774:	mov	r1, r0
   14778:	mvn	r0, #0
   1477c:	cmp	r1, #1
   14780:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14784:	ldr	r0, [sp, #8]
   14788:	ldr	r1, [sp, #12]
   1478c:	mov	r2, r4
   14790:	stm	sp, {r0, r1}
   14794:	mov	r0, r6
   14798:	mov	r1, r5
   1479c:	bl	13e98 <table_set_uint64@@Base>
   147a0:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   147a4:	movw	r1, #19545	; 0x4c59
   147a8:	add	r2, sp, #8
   147ac:	mov	r0, r7
   147b0:	movt	r1, #1
   147b4:	bl	11f90 <__isoc99_sscanf@plt>
   147b8:	mov	r1, r0
   147bc:	mvn	r0, #0
   147c0:	cmp	r1, #1
   147c4:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   147c8:	ldrsh	r3, [sp, #8]
   147cc:	mov	r0, r6
   147d0:	mov	r1, r5
   147d4:	mov	r2, r4
   147d8:	bl	13ecc <table_set_short@@Base>
   147dc:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   147e0:	movw	r1, #19549	; 0x4c5d
   147e4:	add	r2, sp, #8
   147e8:	mov	r0, r7
   147ec:	movt	r1, #1
   147f0:	bl	11f90 <__isoc99_sscanf@plt>
   147f4:	mov	r1, r0
   147f8:	mvn	r0, #0
   147fc:	cmp	r1, #1
   14800:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14804:	ldrh	r3, [sp, #8]
   14808:	mov	r0, r6
   1480c:	mov	r1, r5
   14810:	mov	r2, r4
   14814:	bl	13ef4 <table_set_ushort@@Base>
   14818:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   1481c:	movw	r1, #19553	; 0x4c61
   14820:	add	r2, sp, #8
   14824:	mov	r0, r7
   14828:	movt	r1, #1
   1482c:	bl	11f90 <__isoc99_sscanf@plt>
   14830:	mov	r1, r0
   14834:	mvn	r0, #0
   14838:	cmp	r1, #1
   1483c:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14840:	ldr	r3, [sp, #8]
   14844:	mov	r0, r6
   14848:	mov	r1, r5
   1484c:	mov	r2, r4
   14850:	bl	13f1c <table_set_long@@Base>
   14854:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   14858:	movw	r1, #19557	; 0x4c65
   1485c:	add	r2, sp, #8
   14860:	mov	r0, r7
   14864:	movt	r1, #1
   14868:	bl	11f90 <__isoc99_sscanf@plt>
   1486c:	mov	r1, r0
   14870:	mvn	r0, #0
   14874:	cmp	r1, #1
   14878:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   1487c:	ldr	r3, [sp, #8]
   14880:	mov	r0, r6
   14884:	mov	r1, r5
   14888:	mov	r2, r4
   1488c:	bl	13f44 <table_set_ulong@@Base>
   14890:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   14894:	movw	r1, #19535	; 0x4c4f
   14898:	add	r2, sp, #8
   1489c:	mov	r0, r7
   148a0:	movt	r1, #1
   148a4:	bl	11f90 <__isoc99_sscanf@plt>
   148a8:	mov	r1, r0
   148ac:	mvn	r0, #0
   148b0:	cmp	r1, #1
   148b4:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   148b8:	ldr	r0, [sp, #8]
   148bc:	ldr	r1, [sp, #12]
   148c0:	mov	r2, r4
   148c4:	stm	sp, {r0, r1}
   148c8:	mov	r0, r6
   148cc:	mov	r1, r5
   148d0:	bl	13f6c <table_set_llong@@Base>
   148d4:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   148d8:	movw	r1, #19540	; 0x4c54
   148dc:	add	r2, sp, #8
   148e0:	mov	r0, r7
   148e4:	movt	r1, #1
   148e8:	bl	11f90 <__isoc99_sscanf@plt>
   148ec:	mov	r1, r0
   148f0:	mvn	r0, #0
   148f4:	cmp	r1, #1
   148f8:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   148fc:	ldr	r0, [sp, #8]
   14900:	ldr	r1, [sp, #12]
   14904:	mov	r2, r4
   14908:	stm	sp, {r0, r1}
   1490c:	mov	r0, r6
   14910:	mov	r1, r5
   14914:	bl	13fa0 <table_set_ullong@@Base>
   14918:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   1491c:	movw	r1, #19564	; 0x4c6c
   14920:	add	r2, sp, #8
   14924:	mov	r0, r7
   14928:	movt	r1, #1
   1492c:	bl	11f90 <__isoc99_sscanf@plt>
   14930:	mov	r1, r0
   14934:	mvn	r0, #0
   14938:	cmp	r1, #1
   1493c:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14940:	vldr	s0, [sp, #8]
   14944:	mov	r0, r6
   14948:	mov	r1, r5
   1494c:	mov	r2, r4
   14950:	bl	13fd4 <table_set_float@@Base>
   14954:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   14958:	movw	r1, #19567	; 0x4c6f
   1495c:	add	r2, sp, #8
   14960:	mov	r0, r7
   14964:	movt	r1, #1
   14968:	bl	11f90 <__isoc99_sscanf@plt>
   1496c:	mov	r1, r0
   14970:	mvn	r0, #0
   14974:	cmp	r1, #1
   14978:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   1497c:	vldr	d0, [sp, #8]
   14980:	mov	r0, r6
   14984:	mov	r1, r5
   14988:	mov	r2, r4
   1498c:	bl	13ffc <table_set_double@@Base>
   14990:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   14994:	movw	r1, #19571	; 0x4c73
   14998:	add	r2, sp, #8
   1499c:	mov	r0, r7
   149a0:	movt	r1, #1
   149a4:	bl	11f90 <__isoc99_sscanf@plt>
   149a8:	mov	r1, r0
   149ac:	mvn	r0, #0
   149b0:	cmp	r1, #1
   149b4:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   149b8:	vldr	d0, [sp, #8]
   149bc:	mov	r0, r6
   149c0:	mov	r1, r5
   149c4:	mov	r2, r4
   149c8:	bl	14024 <table_set_ldouble@@Base>
   149cc:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   149d0:	movw	r1, #19575	; 0x4c77
   149d4:	add	r2, sp, #8
   149d8:	mov	r0, r7
   149dc:	movt	r1, #1
   149e0:	bl	11f90 <__isoc99_sscanf@plt>
   149e4:	mov	r1, r0
   149e8:	mvn	r0, #0
   149ec:	cmp	r1, #1
   149f0:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   149f4:	ldrb	r3, [sp, #8]
   149f8:	mov	r0, r6
   149fc:	mov	r1, r5
   14a00:	mov	r2, r4
   14a04:	bl	1406c <table_set_char@@Base>
   14a08:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   14a0c:	movw	r1, #19575	; 0x4c77
   14a10:	add	r2, sp, #8
   14a14:	mov	r0, r7
   14a18:	movt	r1, #1
   14a1c:	bl	11f90 <__isoc99_sscanf@plt>
   14a20:	mov	r1, r0
   14a24:	mvn	r0, #0
   14a28:	cmp	r1, #1
   14a2c:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14a30:	ldrb	r3, [sp, #8]
   14a34:	mov	r0, r6
   14a38:	mov	r1, r5
   14a3c:	mov	r2, r4
   14a40:	bl	14094 <table_set_uchar@@Base>
   14a44:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   14a48:	movw	r1, #19561	; 0x4c69
   14a4c:	add	r2, sp, #8
   14a50:	mov	r0, r7
   14a54:	movt	r1, #1
   14a58:	bl	11f90 <__isoc99_sscanf@plt>
   14a5c:	mov	r1, r0
   14a60:	mvn	r0, #0
   14a64:	cmp	r1, #1
   14a68:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14a6c:	add	r3, sp, #8
   14a70:	mov	r0, r6
   14a74:	mov	r1, r5
   14a78:	mov	r2, r4
   14a7c:	bl	1404c <table_set_string@@Base>
   14a80:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   14a84:	movw	r1, #19432	; 0x4be8
   14a88:	add	r2, sp, #8
   14a8c:	mov	r0, r7
   14a90:	movt	r1, #1
   14a94:	bl	11f90 <__isoc99_sscanf@plt>
   14a98:	mov	r1, r0
   14a9c:	mvn	r0, #0
   14aa0:	cmp	r1, #1
   14aa4:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14aa8:	ldr	r3, [sp, #8]
   14aac:	mov	r0, r6
   14ab0:	mov	r1, r5
   14ab4:	mov	r2, r4
   14ab8:	cmp	r3, #0
   14abc:	movwne	r3, #1
   14ac0:	bl	13cfc <table_set_bool@@Base>
   14ac4:	b	14b00 <table_cell_from_buffer@@Base+0x658>
   14ac8:	movw	r1, #19578	; 0x4c7a
   14acc:	add	r2, sp, #8
   14ad0:	mov	r0, r7
   14ad4:	movt	r1, #1
   14ad8:	bl	11f90 <__isoc99_sscanf@plt>
   14adc:	mov	r1, r0
   14ae0:	mvn	r0, #0
   14ae4:	cmp	r1, #1
   14ae8:	bne	14b04 <table_cell_from_buffer@@Base+0x65c>
   14aec:	ldr	r3, [sp, #8]
   14af0:	mov	r0, r6
   14af4:	mov	r1, r5
   14af8:	mov	r2, r4
   14afc:	bl	140bc <table_set_ptr@@Base>
   14b00:	mov	r0, #0
   14b04:	sub	sp, fp, #24
   14b08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b0c <table_cell_nullify@@Base>:
   14b0c:	push	{r4, r5, fp, lr}
   14b10:	add	fp, sp, #8
   14b14:	mov	r4, r2
   14b18:	bl	137b8 <table_get_row_ptr@@Base>
   14b1c:	ldr	r5, [r0]
   14b20:	ldr	r0, [r5, r4, lsl #2]
   14b24:	cmp	r0, #0
   14b28:	beq	14b38 <table_cell_nullify@@Base+0x2c>
   14b2c:	bl	11f18 <free@plt>
   14b30:	mov	r0, #0
   14b34:	str	r0, [r5, r4, lsl #2]
   14b38:	mov	r0, #0
   14b3c:	pop	{r4, r5, fp, pc}

00014b40 <__libc_csu_init@@Base>:
   14b40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b44:	mov	r7, r0
   14b48:	ldr	r6, [pc, #72]	; 14b98 <__libc_csu_init@@Base+0x58>
   14b4c:	ldr	r5, [pc, #72]	; 14b9c <__libc_csu_init@@Base+0x5c>
   14b50:	add	r6, pc, r6
   14b54:	add	r5, pc, r5
   14b58:	sub	r6, r6, r5
   14b5c:	mov	r8, r1
   14b60:	mov	r9, r2
   14b64:	bl	11ee0 <strcmp@plt-0x20>
   14b68:	asrs	r6, r6, #2
   14b6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b70:	mov	r4, #0
   14b74:	add	r4, r4, #1
   14b78:	ldr	r3, [r5], #4
   14b7c:	mov	r2, r9
   14b80:	mov	r1, r8
   14b84:	mov	r0, r7
   14b88:	blx	r3
   14b8c:	cmp	r6, r4
   14b90:	bne	14b74 <__libc_csu_init@@Base+0x34>
   14b94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b98:			; <UNDEFINED> instruction: 0x000103b4
   14b9c:	andeq	r0, r1, ip, lsr #7

00014ba0 <__libc_csu_fini@@Base>:
   14ba0:	bx	lr

Disassembly of section .fini:

00014ba4 <.fini>:
   14ba4:	push	{r3, lr}
   14ba8:	pop	{r3, pc}
