
../repos/sgerbino-table-2fdd8d0/bin/table_row_test:     file format elf32-littlearm


Disassembly of section .init:

00011ee0 <.init>:
   11ee0:	push	{r3, lr}
   11ee4:	bl	11ff0 <_start@@Base+0x3c>
   11ee8:	pop	{r3, pc}

Disassembly of section .plt:

00011eec <strcmp@plt-0x14>:
   11eec:	push	{lr}		; (str lr, [sp, #-4]!)
   11ef0:	ldr	lr, [pc, #4]	; 11efc <strcmp@plt-0x4>
   11ef4:	add	lr, pc, lr
   11ef8:	ldr	pc, [lr, #8]!
   11efc:	andeq	r4, r1, r4, lsl #2

00011f00 <strcmp@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #20, 20	; 0x14000
   11f08:	ldr	pc, [ip, #260]!	; 0x104

00011f0c <printf@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #20, 20	; 0x14000
   11f14:	ldr	pc, [ip, #252]!	; 0xfc

00011f18 <free@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #20, 20	; 0x14000
   11f20:	ldr	pc, [ip, #244]!	; 0xf4

00011f24 <time@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #20, 20	; 0x14000
   11f2c:	ldr	pc, [ip, #236]!	; 0xec

00011f30 <realloc@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #20, 20	; 0x14000
   11f38:	ldr	pc, [ip, #228]!	; 0xe4

00011f3c <strcpy@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #20, 20	; 0x14000
   11f44:	ldr	pc, [ip, #220]!	; 0xdc

00011f48 <malloc@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #20, 20	; 0x14000
   11f50:	ldr	pc, [ip, #212]!	; 0xd4

00011f54 <__libc_start_main@plt>:
   11f54:	add	ip, pc, #0, 12
   11f58:	add	ip, ip, #20, 20	; 0x14000
   11f5c:	ldr	pc, [ip, #204]!	; 0xcc

00011f60 <__gmon_start__@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #20, 20	; 0x14000
   11f68:	ldr	pc, [ip, #196]!	; 0xc4

00011f6c <strlen@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #20, 20	; 0x14000
   11f74:	ldr	pc, [ip, #188]!	; 0xbc

00011f78 <srand@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #20, 20	; 0x14000
   11f80:	ldr	pc, [ip, #180]!	; 0xb4

00011f84 <snprintf@plt>:
   11f84:	add	ip, pc, #0, 12
   11f88:	add	ip, ip, #20, 20	; 0x14000
   11f8c:	ldr	pc, [ip, #172]!	; 0xac

00011f90 <__isoc99_sscanf@plt>:
   11f90:	add	ip, pc, #0, 12
   11f94:	add	ip, ip, #20, 20	; 0x14000
   11f98:	ldr	pc, [ip, #164]!	; 0xa4

00011f9c <rand@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #20, 20	; 0x14000
   11fa4:	ldr	pc, [ip, #156]!	; 0x9c

00011fa8 <abort@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #20, 20	; 0x14000
   11fb0:	ldr	pc, [ip, #148]!	; 0x94

Disassembly of section .text:

00011fb4 <_start@@Base>:
   11fb4:	mov	fp, #0
   11fb8:	mov	lr, #0
   11fbc:	pop	{r1}		; (ldr r1, [sp], #4)
   11fc0:	mov	r2, sp
   11fc4:	push	{r2}		; (str r2, [sp, #-4]!)
   11fc8:	push	{r0}		; (str r0, [sp, #-4]!)
   11fcc:	ldr	ip, [pc, #16]	; 11fe4 <_start@@Base+0x30>
   11fd0:	push	{ip}		; (str ip, [sp, #-4]!)
   11fd4:	ldr	r0, [pc, #12]	; 11fe8 <_start@@Base+0x34>
   11fd8:	ldr	r3, [pc, #12]	; 11fec <_start@@Base+0x38>
   11fdc:	bl	11f54 <__libc_start_main@plt>
   11fe0:	bl	11fa8 <abort@plt>
   11fe4:	andeq	r5, r1, ip, ror #8
   11fe8:	andeq	r2, r1, r4, lsr #1
   11fec:	andeq	r5, r1, ip, lsl #8
   11ff0:	ldr	r3, [pc, #20]	; 1200c <_start@@Base+0x58>
   11ff4:	ldr	r2, [pc, #20]	; 12010 <_start@@Base+0x5c>
   11ff8:	add	r3, pc, r3
   11ffc:	ldr	r2, [r3, r2]
   12000:	cmp	r2, #0
   12004:	bxeq	lr
   12008:	b	11f60 <__gmon_start__@plt>
   1200c:	andeq	r4, r1, r0
   12010:	andeq	r0, r0, r8, asr #32
   12014:	ldr	r0, [pc, #24]	; 12034 <_start@@Base+0x80>
   12018:	ldr	r3, [pc, #24]	; 12038 <_start@@Base+0x84>
   1201c:	cmp	r3, r0
   12020:	bxeq	lr
   12024:	ldr	r3, [pc, #16]	; 1203c <_start@@Base+0x88>
   12028:	cmp	r3, #0
   1202c:	bxeq	lr
   12030:	bx	r3
   12034:	andeq	r6, r2, r4, asr r0
   12038:	andeq	r6, r2, r4, asr r0
   1203c:	andeq	r0, r0, r0
   12040:	ldr	r0, [pc, #36]	; 1206c <_start@@Base+0xb8>
   12044:	ldr	r1, [pc, #36]	; 12070 <_start@@Base+0xbc>
   12048:	sub	r1, r1, r0
   1204c:	asr	r1, r1, #2
   12050:	add	r1, r1, r1, lsr #31
   12054:	asrs	r1, r1, #1
   12058:	bxeq	lr
   1205c:	ldr	r3, [pc, #16]	; 12074 <_start@@Base+0xc0>
   12060:	cmp	r3, #0
   12064:	bxeq	lr
   12068:	bx	r3
   1206c:	andeq	r6, r2, r4, asr r0
   12070:	andeq	r6, r2, r4, asr r0
   12074:	andeq	r0, r0, r0
   12078:	push	{r4, lr}
   1207c:	ldr	r4, [pc, #24]	; 1209c <_start@@Base+0xe8>
   12080:	ldrb	r3, [r4]
   12084:	cmp	r3, #0
   12088:	popne	{r4, pc}
   1208c:	bl	12014 <_start@@Base+0x60>
   12090:	mov	r3, #1
   12094:	strb	r3, [r4]
   12098:	pop	{r4, pc}
   1209c:	andeq	r6, r2, r4, asr r0
   120a0:	b	12040 <_start@@Base+0x8c>

000120a4 <main@@Base>:
   120a4:	push	{r4, r5, r6, sl, fp, lr}
   120a8:	add	fp, sp, #16
   120ac:	sub	sp, sp, #64	; 0x40
   120b0:	add	r0, sp, #4
   120b4:	bl	11f24 <time@plt>
   120b8:	bl	11f78 <srand@plt>
   120bc:	bl	11f9c <rand@plt>
   120c0:	add	r5, sp, #8
   120c4:	mov	r4, r0
   120c8:	mov	r0, r5
   120cc:	bl	12198 <table_init@@Base>
   120d0:	movw	r0, #34079	; 0x851f
   120d4:	mov	r6, #0
   120d8:	movt	r0, #20971	; 0x51eb
   120dc:	umull	r0, r1, r4, r0
   120e0:	lsr	r0, r1, #5
   120e4:	mov	r1, #100	; 0x64
   120e8:	mls	r0, r0, r1, r4
   120ec:	add	r4, r0, #100	; 0x64
   120f0:	mov	r0, r5
   120f4:	bl	138b0 <table_add_row@@Base>
   120f8:	add	r6, r6, #1
   120fc:	cmp	r6, r4
   12100:	bcc	120f0 <main@@Base+0x4c>
   12104:	add	r0, sp, #8
   12108:	bl	138a8 <table_get_row_length@@Base>
   1210c:	mov	r5, #0
   12110:	cmp	r0, r4
   12114:	beq	12130 <main@@Base+0x8c>
   12118:	mov	r2, r0
   1211c:	ldr	r0, [pc, #32]	; 12144 <main@@Base+0xa0>
   12120:	mov	r1, r4
   12124:	add	r0, pc, r0
   12128:	bl	11f0c <printf@plt>
   1212c:	mvn	r5, #0
   12130:	add	r0, sp, #8
   12134:	bl	121f4 <table_destroy@@Base>
   12138:	mov	r0, r5
   1213c:	sub	sp, fp, #16
   12140:	pop	{r4, r5, r6, sl, fp, pc}
   12144:	andeq	r3, r0, r0, asr r3

00012148 <table_new@@Base>:
   12148:	push	{fp, lr}
   1214c:	mov	fp, sp
   12150:	mov	r0, #56	; 0x38
   12154:	bl	11f48 <malloc@plt>
   12158:	mov	r1, #0
   1215c:	mov	r2, #10
   12160:	mov	r3, #20
   12164:	vmov.i32	q8, #0	; 0x00000000
   12168:	str	r1, [r0]
   1216c:	stmib	r0, {r1, r2}
   12170:	str	r1, [r0, #12]
   12174:	str	r1, [r0, #16]
   12178:	str	r1, [r0, #20]
   1217c:	str	r3, [r0, #24]
   12180:	str	r1, [r0, #28]
   12184:	str	r2, [r0, #48]	; 0x30
   12188:	str	r1, [r0, #52]	; 0x34
   1218c:	add	r1, r0, #32
   12190:	vst1.32	{d16-d17}, [r1]
   12194:	pop	{fp, pc}

00012198 <table_init@@Base>:
   12198:	mov	r1, #0
   1219c:	mov	r2, #10
   121a0:	mov	r3, #20
   121a4:	vmov.i32	q8, #0	; 0x00000000
   121a8:	str	r1, [r0]
   121ac:	stmib	r0, {r1, r2}
   121b0:	str	r1, [r0, #12]
   121b4:	str	r1, [r0, #16]
   121b8:	str	r1, [r0, #20]
   121bc:	str	r3, [r0, #24]
   121c0:	str	r1, [r0, #28]
   121c4:	str	r2, [r0, #48]	; 0x30
   121c8:	str	r1, [r0, #52]	; 0x34
   121cc:	add	r0, r0, #32
   121d0:	vst1.32	{d16-d17}, [r0]
   121d4:	bx	lr

000121d8 <table_delete@@Base>:
   121d8:	push	{r4, sl, fp, lr}
   121dc:	add	fp, sp, #8
   121e0:	mov	r4, r0
   121e4:	bl	121f4 <table_destroy@@Base>
   121e8:	mov	r0, r4
   121ec:	pop	{r4, sl, fp, lr}
   121f0:	b	11f18 <free@plt>

000121f4 <table_destroy@@Base>:
   121f4:	cmp	r0, #0
   121f8:	bxeq	lr
   121fc:	push	{r4, r5, r6, sl, fp, lr}
   12200:	add	fp, sp, #16
   12204:	mvn	r1, #0
   12208:	mvn	r2, #0
   1220c:	mov	r3, #64	; 0x40
   12210:	mov	r4, r0
   12214:	bl	12a90 <table_notify@@Base>
   12218:	mov	r0, r4
   1221c:	bl	138a8 <table_get_row_length@@Base>
   12220:	cmp	r0, #1
   12224:	blt	12248 <table_destroy@@Base+0x54>
   12228:	mov	r5, r0
   1222c:	mov	r6, #0
   12230:	mov	r0, r4
   12234:	mov	r1, r6
   12238:	bl	13850 <table_row_destroy@@Base>
   1223c:	add	r6, r6, #1
   12240:	cmp	r5, r6
   12244:	bne	12230 <table_destroy@@Base+0x3c>
   12248:	ldr	r0, [r4, #16]
   1224c:	cmp	r0, #0
   12250:	beq	12258 <table_destroy@@Base+0x64>
   12254:	bl	11f18 <free@plt>
   12258:	mov	r0, r4
   1225c:	bl	12b84 <table_get_column_length@@Base>
   12260:	cmp	r0, #1
   12264:	blt	12288 <table_destroy@@Base+0x94>
   12268:	mov	r5, r0
   1226c:	mov	r6, #0
   12270:	mov	r0, r4
   12274:	mov	r1, r6
   12278:	bl	12b6c <table_column_destroy@@Base>
   1227c:	add	r6, r6, #1
   12280:	cmp	r5, r6
   12284:	bne	12270 <table_destroy@@Base+0x7c>
   12288:	ldr	r0, [r4]
   1228c:	cmp	r0, #0
   12290:	beq	12298 <table_destroy@@Base+0xa4>
   12294:	bl	11f18 <free@plt>
   12298:	ldr	r0, [r4, #36]	; 0x24
   1229c:	cmp	r0, #0
   122a0:	beq	122a8 <table_destroy@@Base+0xb4>
   122a4:	bl	11f18 <free@plt>
   122a8:	ldr	r0, [r4, #40]	; 0x28
   122ac:	cmp	r0, #0
   122b0:	beq	122b8 <table_destroy@@Base+0xc4>
   122b4:	bl	11f18 <free@plt>
   122b8:	ldr	r0, [r4, #44]	; 0x2c
   122bc:	cmp	r0, #0
   122c0:	pop	{r4, r5, r6, sl, fp, lr}
   122c4:	beq	122cc <table_destroy@@Base+0xd8>
   122c8:	b	11f18 <free@plt>
   122cc:	bx	lr

000122d0 <table_dupe@@Base>:
   122d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122d4:	add	fp, sp, #28
   122d8:	sub	sp, sp, #12
   122dc:	mov	r4, r0
   122e0:	bl	138a8 <table_get_row_length@@Base>
   122e4:	mov	r8, r0
   122e8:	mov	r0, r4
   122ec:	bl	12b84 <table_get_column_length@@Base>
   122f0:	mov	r6, r0
   122f4:	mov	r0, #56	; 0x38
   122f8:	bl	11f48 <malloc@plt>
   122fc:	mov	sl, r0
   12300:	mov	r5, #0
   12304:	mov	r0, #10
   12308:	mov	r1, #20
   1230c:	cmp	r6, #1
   12310:	vmov.i32	q8, #0	; 0x00000000
   12314:	str	r5, [sl]
   12318:	str	r5, [sl, #4]
   1231c:	str	r0, [sl, #8]
   12320:	str	r5, [sl, #12]
   12324:	str	r5, [sl, #16]
   12328:	str	r5, [sl, #20]
   1232c:	str	r1, [sl, #24]
   12330:	str	r5, [sl, #28]
   12334:	str	r0, [sl, #48]	; 0x30
   12338:	add	r0, sl, #32
   1233c:	str	r5, [sl, #52]	; 0x34
   12340:	vst1.32	{d16-d17}, [r0]
   12344:	blt	12380 <table_dupe@@Base+0xb0>
   12348:	mov	r0, r4
   1234c:	mov	r1, r5
   12350:	bl	12be8 <table_get_column_name@@Base>
   12354:	mov	r7, r0
   12358:	mov	r0, r4
   1235c:	mov	r1, r5
   12360:	bl	12bf8 <table_get_column_data_type@@Base>
   12364:	mov	r2, r0
   12368:	mov	r0, sl
   1236c:	mov	r1, r7
   12370:	bl	12c0c <table_add_column@@Base>
   12374:	add	r5, r5, #1
   12378:	cmp	r6, r5
   1237c:	bne	12348 <table_dupe@@Base+0x78>
   12380:	cmp	r8, #1
   12384:	blt	127f0 <table_dupe@@Base+0x520>
   12388:	mov	r5, #0
   1238c:	add	r9, sp, #8
   12390:	mov	r0, sl
   12394:	bl	138b0 <table_add_row@@Base>
   12398:	cmp	r6, #1
   1239c:	blt	127e4 <table_dupe@@Base+0x514>
   123a0:	mov	r7, #0
   123a4:	mov	r0, r4
   123a8:	mov	r1, r7
   123ac:	bl	12bf8 <table_get_column_data_type@@Base>
   123b0:	cmp	r0, #23
   123b4:	bhi	127d8 <table_dupe@@Base+0x508>
   123b8:	add	r1, pc, #4
   123bc:	ldr	r0, [r1, r0, lsl #2]
   123c0:	add	pc, r1, r0
   123c4:	andeq	r0, r0, r0, rrx
   123c8:	andeq	r0, r0, r8, lsl #1
   123cc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   123d0:	ldrdeq	r0, [r0], -r8
   123d4:	andeq	r0, r0, r0, lsl #2
   123d8:	andeq	r0, r0, r8, lsr #2
   123dc:	andeq	r0, r0, r0, asr r1
   123e0:	andeq	r0, r0, r8, ror r1
   123e4:	andeq	r0, r0, r0, lsr #3
   123e8:	andeq	r0, r0, r8, asr #3
   123ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   123f0:	andeq	r0, r0, r8, lsl r2
   123f4:	andeq	r0, r0, r0, asr #4
   123f8:	andeq	r0, r0, r8, ror #4
   123fc:	muleq	r0, r0, r2
   12400:			; <UNDEFINED> instruction: 0x000002b8
   12404:	andeq	r0, r0, r0, ror #5
   12408:	andeq	r0, r0, r4, lsl #6
   1240c:	andeq	r0, r0, r8, lsr #6
   12410:	andeq	r0, r0, ip, asr #6
   12414:	andeq	r0, r0, r4, ror r3
   12418:	muleq	r0, ip, r3
   1241c:	andeq	r0, r0, r4, asr #7
   12420:	andeq	r0, r0, ip, ror #7
   12424:	mov	r0, r4
   12428:	mov	r1, r5
   1242c:	mov	r2, r7
   12430:	bl	13600 <table_get_int@@Base>
   12434:	mov	r3, r0
   12438:	mov	r0, sl
   1243c:	mov	r1, r5
   12440:	mov	r2, r7
   12444:	bl	13e0c <table_set_int@@Base>
   12448:	b	127d8 <table_dupe@@Base+0x508>
   1244c:	mov	r0, r4
   12450:	mov	r1, r5
   12454:	mov	r2, r7
   12458:	bl	13618 <table_get_uint@@Base>
   1245c:	mov	r3, r0
   12460:	mov	r0, sl
   12464:	mov	r1, r5
   12468:	mov	r2, r7
   1246c:	bl	13e8c <table_set_uint@@Base>
   12470:	b	127d8 <table_dupe@@Base+0x508>
   12474:	mov	r0, r4
   12478:	mov	r1, r5
   1247c:	mov	r2, r7
   12480:	bl	13630 <table_get_int8@@Base>
   12484:	mov	r3, r0
   12488:	mov	r0, sl
   1248c:	mov	r1, r5
   12490:	mov	r2, r7
   12494:	bl	13f0c <table_set_int8@@Base>
   12498:	b	127d8 <table_dupe@@Base+0x508>
   1249c:	mov	r0, r4
   124a0:	mov	r1, r5
   124a4:	mov	r2, r7
   124a8:	bl	13648 <table_get_uint8@@Base>
   124ac:	mov	r3, r0
   124b0:	mov	r0, sl
   124b4:	mov	r1, r5
   124b8:	mov	r2, r7
   124bc:	bl	13f8c <table_set_uint8@@Base>
   124c0:	b	127d8 <table_dupe@@Base+0x508>
   124c4:	mov	r0, r4
   124c8:	mov	r1, r5
   124cc:	mov	r2, r7
   124d0:	bl	13660 <table_get_int16@@Base>
   124d4:	mov	r3, r0
   124d8:	mov	r0, sl
   124dc:	mov	r1, r5
   124e0:	mov	r2, r7
   124e4:	bl	1400c <table_set_int16@@Base>
   124e8:	b	127d8 <table_dupe@@Base+0x508>
   124ec:	mov	r0, r4
   124f0:	mov	r1, r5
   124f4:	mov	r2, r7
   124f8:	bl	13678 <table_get_uint16@@Base>
   124fc:	mov	r3, r0
   12500:	mov	r0, sl
   12504:	mov	r1, r5
   12508:	mov	r2, r7
   1250c:	bl	1408c <table_set_uint16@@Base>
   12510:	b	127d8 <table_dupe@@Base+0x508>
   12514:	mov	r0, r4
   12518:	mov	r1, r5
   1251c:	mov	r2, r7
   12520:	bl	13690 <table_get_int32@@Base>
   12524:	mov	r3, r0
   12528:	mov	r0, sl
   1252c:	mov	r1, r5
   12530:	mov	r2, r7
   12534:	bl	1410c <table_set_int32@@Base>
   12538:	b	127d8 <table_dupe@@Base+0x508>
   1253c:	mov	r0, r4
   12540:	mov	r1, r5
   12544:	mov	r2, r7
   12548:	bl	136a8 <table_get_uint32@@Base>
   1254c:	mov	r3, r0
   12550:	mov	r0, sl
   12554:	mov	r1, r5
   12558:	mov	r2, r7
   1255c:	bl	1418c <table_set_uint32@@Base>
   12560:	b	127d8 <table_dupe@@Base+0x508>
   12564:	mov	r0, r4
   12568:	mov	r1, r5
   1256c:	mov	r2, r7
   12570:	bl	136c0 <table_get_int64@@Base>
   12574:	stm	sp, {r0, r1}
   12578:	mov	r0, sl
   1257c:	mov	r1, r5
   12580:	mov	r2, r7
   12584:	bl	1420c <table_set_int64@@Base>
   12588:	b	127d8 <table_dupe@@Base+0x508>
   1258c:	mov	r0, r4
   12590:	mov	r1, r5
   12594:	mov	r2, r7
   12598:	bl	136d8 <table_get_uint64@@Base>
   1259c:	stm	sp, {r0, r1}
   125a0:	mov	r0, sl
   125a4:	mov	r1, r5
   125a8:	mov	r2, r7
   125ac:	bl	14294 <table_set_uint64@@Base>
   125b0:	b	127d8 <table_dupe@@Base+0x508>
   125b4:	mov	r0, r4
   125b8:	mov	r1, r5
   125bc:	mov	r2, r7
   125c0:	bl	136f0 <table_get_short@@Base>
   125c4:	mov	r3, r0
   125c8:	mov	r0, sl
   125cc:	mov	r1, r5
   125d0:	mov	r2, r7
   125d4:	bl	1431c <table_set_short@@Base>
   125d8:	b	127d8 <table_dupe@@Base+0x508>
   125dc:	mov	r0, r4
   125e0:	mov	r1, r5
   125e4:	mov	r2, r7
   125e8:	bl	13708 <table_get_ushort@@Base>
   125ec:	mov	r3, r0
   125f0:	mov	r0, sl
   125f4:	mov	r1, r5
   125f8:	mov	r2, r7
   125fc:	bl	1439c <table_set_ushort@@Base>
   12600:	b	127d8 <table_dupe@@Base+0x508>
   12604:	mov	r0, r4
   12608:	mov	r1, r5
   1260c:	mov	r2, r7
   12610:	bl	13720 <table_get_long@@Base>
   12614:	mov	r3, r0
   12618:	mov	r0, sl
   1261c:	mov	r1, r5
   12620:	mov	r2, r7
   12624:	bl	1441c <table_set_long@@Base>
   12628:	b	127d8 <table_dupe@@Base+0x508>
   1262c:	mov	r0, r4
   12630:	mov	r1, r5
   12634:	mov	r2, r7
   12638:	bl	13738 <table_get_ulong@@Base>
   1263c:	mov	r3, r0
   12640:	mov	r0, sl
   12644:	mov	r1, r5
   12648:	mov	r2, r7
   1264c:	bl	1449c <table_set_ulong@@Base>
   12650:	b	127d8 <table_dupe@@Base+0x508>
   12654:	mov	r0, r4
   12658:	mov	r1, r5
   1265c:	mov	r2, r7
   12660:	bl	13750 <table_get_llong@@Base>
   12664:	stm	sp, {r0, r1}
   12668:	mov	r0, sl
   1266c:	mov	r1, r5
   12670:	mov	r2, r7
   12674:	bl	1451c <table_set_llong@@Base>
   12678:	b	127d8 <table_dupe@@Base+0x508>
   1267c:	mov	r0, r4
   12680:	mov	r1, r5
   12684:	mov	r2, r7
   12688:	bl	13768 <table_get_ullong@@Base>
   1268c:	stm	sp, {r0, r1}
   12690:	mov	r0, sl
   12694:	mov	r1, r5
   12698:	mov	r2, r7
   1269c:	bl	145a4 <table_set_ullong@@Base>
   126a0:	b	127d8 <table_dupe@@Base+0x508>
   126a4:	mov	r0, r4
   126a8:	mov	r1, r5
   126ac:	mov	r2, r7
   126b0:	bl	13780 <table_get_float@@Base>
   126b4:	mov	r0, sl
   126b8:	mov	r1, r5
   126bc:	mov	r2, r7
   126c0:	bl	1462c <table_set_float@@Base>
   126c4:	b	127d8 <table_dupe@@Base+0x508>
   126c8:	mov	r0, r4
   126cc:	mov	r1, r5
   126d0:	mov	r2, r7
   126d4:	bl	13798 <table_get_double@@Base>
   126d8:	mov	r0, sl
   126dc:	mov	r1, r5
   126e0:	mov	r2, r7
   126e4:	bl	146b8 <table_set_double@@Base>
   126e8:	b	127d8 <table_dupe@@Base+0x508>
   126ec:	mov	r0, r4
   126f0:	mov	r1, r5
   126f4:	mov	r2, r7
   126f8:	bl	137b0 <table_get_ldouble@@Base>
   126fc:	mov	r0, sl
   12700:	mov	r1, r5
   12704:	mov	r2, r7
   12708:	bl	14740 <table_set_ldouble@@Base>
   1270c:	b	127d8 <table_dupe@@Base+0x508>
   12710:	mov	r0, r4
   12714:	mov	r1, r5
   12718:	mov	r2, r7
   1271c:	bl	137c8 <table_get_char@@Base>
   12720:	mov	r3, r0
   12724:	mov	r0, sl
   12728:	mov	r1, r5
   1272c:	mov	r2, r7
   12730:	bl	147e8 <table_set_char@@Base>
   12734:	b	127d8 <table_dupe@@Base+0x508>
   12738:	mov	r0, r4
   1273c:	mov	r1, r5
   12740:	mov	r2, r7
   12744:	bl	137e0 <table_get_uchar@@Base>
   12748:	mov	r3, r0
   1274c:	mov	r0, sl
   12750:	mov	r1, r5
   12754:	mov	r2, r7
   12758:	bl	14868 <table_set_uchar@@Base>
   1275c:	b	127d8 <table_dupe@@Base+0x508>
   12760:	mov	r0, r4
   12764:	mov	r1, r5
   12768:	mov	r2, r7
   1276c:	bl	137f8 <table_get_string@@Base>
   12770:	mov	r3, r0
   12774:	mov	r0, sl
   12778:	mov	r1, r5
   1277c:	mov	r2, r7
   12780:	bl	147c8 <table_set_string@@Base>
   12784:	b	127d8 <table_dupe@@Base+0x508>
   12788:	mov	r0, r4
   1278c:	mov	r1, r5
   12790:	mov	r2, r7
   12794:	bl	135e8 <table_get_bool@@Base>
   12798:	mov	r3, r0
   1279c:	mov	r0, sl
   127a0:	mov	r1, r5
   127a4:	mov	r2, r7
   127a8:	bl	13d8c <table_set_bool@@Base>
   127ac:	b	127d8 <table_dupe@@Base+0x508>
   127b0:	mov	r0, r4
   127b4:	mov	r1, r5
   127b8:	mov	r2, r7
   127bc:	bl	1380c <table_get_ptr@@Base>
   127c0:	str	r0, [sp, #8]
   127c4:	mov	r0, sl
   127c8:	mov	r1, r5
   127cc:	mov	r2, r7
   127d0:	mov	r3, r9
   127d4:	bl	148e8 <table_set_ptr@@Base>
   127d8:	add	r7, r7, #1
   127dc:	cmp	r6, r7
   127e0:	bne	123a4 <table_dupe@@Base+0xd4>
   127e4:	add	r5, r5, #1
   127e8:	cmp	r5, r8
   127ec:	bne	12390 <table_dupe@@Base+0xc0>
   127f0:	mov	r0, sl
   127f4:	sub	sp, fp, #28
   127f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000127fc <table_get_major_version@@Base>:
   127fc:	mov	r0, #0
   12800:	bx	lr

00012804 <table_get_minor_version@@Base>:
   12804:	mov	r0, #0
   12808:	bx	lr

0001280c <table_get_patch_version@@Base>:
   1280c:	mov	r0, #0
   12810:	bx	lr

00012814 <table_get_version@@Base>:
   12814:	ldr	r0, [pc, #4]	; 12820 <table_get_version@@Base+0xc>
   12818:	add	r0, pc, r0
   1281c:	bx	lr
   12820:	andeq	r2, r0, r4, asr #25

00012824 <table_get_callback_length@@Base>:
   12824:	ldr	r0, [r0, #32]
   12828:	bx	lr

0001282c <table_register_callback@@Base>:
   1282c:	push	{r4, r5, r6, r7, fp, lr}
   12830:	add	fp, sp, #16
   12834:	mov	r5, r0
   12838:	ldr	r0, [r0, #32]
   1283c:	mov	r4, r3
   12840:	mov	r6, r2
   12844:	mov	r7, r1
   12848:	cmp	r0, #1
   1284c:	blt	12880 <table_register_callback@@Base+0x54>
   12850:	ldr	r2, [r5, #36]	; 0x24
   12854:	mov	r1, #0
   12858:	ldr	r3, [r2, r1, lsl #2]
   1285c:	cmp	r3, r7
   12860:	bne	12874 <table_register_callback@@Base+0x48>
   12864:	ldr	r3, [r5, #40]	; 0x28
   12868:	ldr	r3, [r3, r1, lsl #2]
   1286c:	cmp	r3, r6
   12870:	beq	12904 <table_register_callback@@Base+0xd8>
   12874:	add	r1, r1, #1
   12878:	cmp	r1, r0
   1287c:	blt	12858 <table_register_callback@@Base+0x2c>
   12880:	ldr	r1, [r5, #48]	; 0x30
   12884:	udiv	r2, r0, r1
   12888:	mls	r2, r2, r1, r0
   1288c:	cmp	r2, #0
   12890:	bne	128dc <table_register_callback@@Base+0xb0>
   12894:	ldr	r2, [r5, #52]	; 0x34
   12898:	ldr	r0, [r5, #36]	; 0x24
   1289c:	add	r1, r2, r1
   128a0:	str	r1, [r5, #52]	; 0x34
   128a4:	lsl	r1, r1, #2
   128a8:	bl	11f30 <realloc@plt>
   128ac:	str	r0, [r5, #36]	; 0x24
   128b0:	ldr	r1, [r5, #52]	; 0x34
   128b4:	ldr	r0, [r5, #40]	; 0x28
   128b8:	lsl	r1, r1, #2
   128bc:	bl	11f30 <realloc@plt>
   128c0:	str	r0, [r5, #40]	; 0x28
   128c4:	ldr	r1, [r5, #52]	; 0x34
   128c8:	ldr	r0, [r5, #44]	; 0x2c
   128cc:	lsl	r1, r1, #2
   128d0:	bl	11f30 <realloc@plt>
   128d4:	str	r0, [r5, #44]	; 0x2c
   128d8:	ldr	r0, [r5, #32]
   128dc:	ldr	r1, [r5, #36]	; 0x24
   128e0:	str	r7, [r1, r0, lsl #2]
   128e4:	ldr	r1, [r5, #40]	; 0x28
   128e8:	str	r6, [r1, r0, lsl #2]
   128ec:	ldr	r1, [r5, #44]	; 0x2c
   128f0:	str	r4, [r1, r0, lsl #2]
   128f4:	ldr	r0, [r5, #32]
   128f8:	add	r0, r0, #1
   128fc:	str	r0, [r5, #32]
   12900:	pop	{r4, r5, r6, r7, fp, pc}
   12904:	cmp	r1, #0
   12908:	ldrne	r0, [r5, #44]	; 0x2c
   1290c:	ldrne	r2, [r0, r1, lsl #2]
   12910:	orrne	r2, r2, r4
   12914:	strne	r2, [r0, r1, lsl #2]
   12918:	popne	{r4, r5, r6, r7, fp, pc}
   1291c:	b	12880 <table_register_callback@@Base+0x54>

00012920 <table_unregister_callback@@Base>:
   12920:	push	{r4, r5, r6, sl, fp, lr}
   12924:	add	fp, sp, #16
   12928:	ldr	r4, [r0, #32]
   1292c:	cmp	r4, #1
   12930:	blt	12968 <table_unregister_callback@@Base+0x48>
   12934:	ldr	r3, [r0, #36]	; 0x24
   12938:	mov	r6, r0
   1293c:	mov	r0, #0
   12940:	ldr	r5, [r3, r0, lsl #2]
   12944:	cmp	r5, r1
   12948:	bne	1295c <table_unregister_callback@@Base+0x3c>
   1294c:	ldr	r5, [r6, #40]	; 0x28
   12950:	ldr	r5, [r5, r0, lsl #2]
   12954:	cmp	r5, r2
   12958:	beq	1296c <table_unregister_callback@@Base+0x4c>
   1295c:	add	r0, r0, #1
   12960:	cmp	r0, r4
   12964:	blt	12940 <table_unregister_callback@@Base+0x20>
   12968:	pop	{r4, r5, r6, sl, fp, pc}
   1296c:	sub	r1, r4, #1
   12970:	cmp	r0, r1
   12974:	bge	12a04 <table_unregister_callback@@Base+0xe4>
   12978:	add	r1, r3, r0, lsl #2
   1297c:	ldr	r1, [r1, #4]
   12980:	str	r1, [r3, r0, lsl #2]
   12984:	ldr	r1, [r6, #40]	; 0x28
   12988:	add	r2, r1, r0, lsl #2
   1298c:	ldr	r2, [r2, #4]
   12990:	str	r2, [r1, r0, lsl #2]
   12994:	ldr	r1, [r6, #44]	; 0x2c
   12998:	add	r2, r1, r0, lsl #2
   1299c:	ldr	r2, [r2, #4]
   129a0:	str	r2, [r1, r0, lsl #2]
   129a4:	add	r2, r0, #1
   129a8:	ldr	r1, [r6, #32]
   129ac:	sub	r1, r1, #1
   129b0:	cmp	r2, r1
   129b4:	bge	12a04 <table_unregister_callback@@Base+0xe4>
   129b8:	ldr	r1, [r6, #36]	; 0x24
   129bc:	add	r1, r1, r0, lsl #2
   129c0:	ldr	r2, [r1, #8]
   129c4:	str	r2, [r1, #4]
   129c8:	ldr	r1, [r6, #40]	; 0x28
   129cc:	add	r1, r1, r0, lsl #2
   129d0:	ldr	r2, [r1, #8]
   129d4:	str	r2, [r1, #4]
   129d8:	ldr	r1, [r6, #44]	; 0x2c
   129dc:	add	r1, r1, r0, lsl #2
   129e0:	ldr	r2, [r1, #8]
   129e4:	str	r2, [r1, #4]
   129e8:	add	r2, r0, #1
   129ec:	add	r0, r0, #2
   129f0:	ldr	r1, [r6, #32]
   129f4:	sub	r1, r1, #1
   129f8:	cmp	r0, r1
   129fc:	mov	r0, r2
   12a00:	blt	129b8 <table_unregister_callback@@Base+0x98>
   12a04:	str	r1, [r6, #32]
   12a08:	ldr	r2, [r6, #48]	; 0x30
   12a0c:	udiv	r0, r1, r2
   12a10:	mls	r0, r0, r2, r1
   12a14:	cmp	r0, #0
   12a18:	popne	{r4, r5, r6, sl, fp, pc}
   12a1c:	ldr	r1, [r6, #52]	; 0x34
   12a20:	ldr	r0, [r6, #36]	; 0x24
   12a24:	subs	r1, r1, r2
   12a28:	str	r1, [r6, #52]	; 0x34
   12a2c:	beq	12a68 <table_unregister_callback@@Base+0x148>
   12a30:	lsl	r1, r1, #2
   12a34:	bl	11f30 <realloc@plt>
   12a38:	str	r0, [r6, #36]	; 0x24
   12a3c:	ldr	r1, [r6, #52]	; 0x34
   12a40:	ldr	r0, [r6, #40]	; 0x28
   12a44:	lsl	r1, r1, #2
   12a48:	bl	11f30 <realloc@plt>
   12a4c:	str	r0, [r6, #40]	; 0x28
   12a50:	ldr	r1, [r6, #52]	; 0x34
   12a54:	ldr	r0, [r6, #44]	; 0x2c
   12a58:	lsl	r1, r1, #2
   12a5c:	bl	11f30 <realloc@plt>
   12a60:	str	r0, [r6, #44]	; 0x2c
   12a64:	pop	{r4, r5, r6, sl, fp, pc}
   12a68:	bl	11f18 <free@plt>
   12a6c:	ldr	r0, [r6, #40]	; 0x28
   12a70:	bl	11f18 <free@plt>
   12a74:	ldr	r0, [r6, #44]	; 0x2c
   12a78:	bl	11f18 <free@plt>
   12a7c:	mov	r0, #0
   12a80:	str	r0, [r6, #36]	; 0x24
   12a84:	str	r0, [r6, #40]	; 0x28
   12a88:	str	r0, [r6, #44]	; 0x2c
   12a8c:	pop	{r4, r5, r6, sl, fp, pc}

00012a90 <table_notify@@Base>:
   12a90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a94:	add	fp, sp, #24
   12a98:	sub	sp, sp, #8
   12a9c:	mov	r7, r0
   12aa0:	ldr	r0, [r0, #32]
   12aa4:	cmp	r0, #1
   12aa8:	blt	12b04 <table_notify@@Base+0x74>
   12aac:	mov	r4, r3
   12ab0:	mov	r8, r2
   12ab4:	mov	r9, r1
   12ab8:	mov	r5, #0
   12abc:	ldr	r1, [r7, #44]	; 0x2c
   12ac0:	ldr	r1, [r1, r5, lsl #2]
   12ac4:	tst	r1, r4
   12ac8:	beq	12af8 <table_notify@@Base+0x68>
   12acc:	ldr	r0, [r7, #36]	; 0x24
   12ad0:	ldr	r1, [r7, #40]	; 0x28
   12ad4:	mov	r2, r8
   12ad8:	mov	r3, r4
   12adc:	ldr	r6, [r0, r5, lsl #2]
   12ae0:	ldr	r0, [r1, r5, lsl #2]
   12ae4:	mov	r1, r9
   12ae8:	str	r0, [sp]
   12aec:	mov	r0, r7
   12af0:	blx	r6
   12af4:	ldr	r0, [r7, #32]
   12af8:	add	r5, r5, #1
   12afc:	cmp	r5, r0
   12b00:	blt	12abc <table_notify@@Base+0x2c>
   12b04:	sub	sp, fp, #24
   12b08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012b0c <table_column_init@@Base>:
   12b0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b10:	add	fp, sp, #24
   12b14:	ldr	r7, [r0]
   12b18:	mov	r0, r2
   12b1c:	mov	r4, r3
   12b20:	mov	r5, r2
   12b24:	mov	r6, r1
   12b28:	bl	11f6c <strlen@plt>
   12b2c:	add	r0, r0, #1
   12b30:	bl	11f48 <malloc@plt>
   12b34:	ldr	r8, [fp, #8]
   12b38:	add	r6, r6, r6, lsl #1
   12b3c:	cmp	r0, #0
   12b40:	str	r0, [r7, r6, lsl #2]
   12b44:	beq	12b50 <table_column_init@@Base+0x44>
   12b48:	mov	r1, r5
   12b4c:	bl	11f3c <strcpy@plt>
   12b50:	add	r0, r7, r6, lsl #2
   12b54:	stmib	r0, {r4, r8}
   12b58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012b5c <table_get_col_ptr@@Base>:
   12b5c:	ldr	r0, [r0]
   12b60:	add	r1, r1, r1, lsl #1
   12b64:	add	r0, r0, r1, lsl #2
   12b68:	bx	lr

00012b6c <table_column_destroy@@Base>:
   12b6c:	ldr	r0, [r0]
   12b70:	add	r1, r1, r1, lsl #1
   12b74:	ldr	r0, [r0, r1, lsl #2]
   12b78:	cmp	r0, #0
   12b7c:	bxeq	lr
   12b80:	b	11f18 <free@plt>

00012b84 <table_get_column_length@@Base>:
   12b84:	ldr	r0, [r0, #4]
   12b88:	bx	lr

00012b8c <table_get_column@@Base>:
   12b8c:	push	{r4, r5, r6, r7, fp, lr}
   12b90:	add	fp, sp, #16
   12b94:	ldr	r6, [r0, #4]
   12b98:	cmp	r6, #1
   12b9c:	blt	12bd4 <table_get_column@@Base+0x48>
   12ba0:	ldr	r7, [r0]
   12ba4:	mov	r5, r1
   12ba8:	mov	r4, #0
   12bac:	ldr	r0, [r7]
   12bb0:	mov	r1, r5
   12bb4:	bl	11f00 <strcmp@plt>
   12bb8:	cmp	r0, #0
   12bbc:	beq	12bd8 <table_get_column@@Base+0x4c>
   12bc0:	add	r4, r4, #1
   12bc4:	add	r7, r7, #12
   12bc8:	cmp	r4, r6
   12bcc:	blt	12bac <table_get_column@@Base+0x20>
   12bd0:	b	12bd8 <table_get_column@@Base+0x4c>
   12bd4:	mov	r4, #0
   12bd8:	cmp	r4, r6
   12bdc:	mvneq	r4, #0
   12be0:	mov	r0, r4
   12be4:	pop	{r4, r5, r6, r7, fp, pc}

00012be8 <table_get_column_name@@Base>:
   12be8:	ldr	r0, [r0]
   12bec:	add	r1, r1, r1, lsl #1
   12bf0:	ldr	r0, [r0, r1, lsl #2]
   12bf4:	bx	lr

00012bf8 <table_get_column_data_type@@Base>:
   12bf8:	ldr	r0, [r0]
   12bfc:	add	r1, r1, r1, lsl #1
   12c00:	add	r0, r0, r1, lsl #2
   12c04:	ldr	r0, [r0, #4]
   12c08:	bx	lr

00012c0c <table_add_column@@Base>:
   12c0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c10:	add	fp, sp, #28
   12c14:	sub	sp, sp, #4
   12c18:	mov	r4, r0
   12c1c:	mov	r8, r1
   12c20:	ldr	r0, [r0, #4]
   12c24:	mov	r9, r2
   12c28:	ldr	r1, [r4, #8]
   12c2c:	udiv	r2, r0, r1
   12c30:	mls	r0, r2, r1, r0
   12c34:	cmp	r0, #0
   12c38:	bne	12ca4 <table_add_column@@Base+0x98>
   12c3c:	ldr	r2, [r4, #12]
   12c40:	ldr	r0, [r4]
   12c44:	add	r1, r2, r1
   12c48:	str	r1, [r4, #12]
   12c4c:	add	r1, r1, r1, lsl #1
   12c50:	lsl	r1, r1, #2
   12c54:	bl	11f30 <realloc@plt>
   12c58:	str	r0, [r4]
   12c5c:	mov	r0, r4
   12c60:	bl	138a8 <table_get_row_length@@Base>
   12c64:	cmp	r0, #1
   12c68:	blt	12ca4 <table_add_column@@Base+0x98>
   12c6c:	mov	r6, r0
   12c70:	mov	r5, #0
   12c74:	mov	r0, r4
   12c78:	mov	r1, r5
   12c7c:	bl	13844 <table_get_row_ptr@@Base>
   12c80:	ldr	r1, [r4, #12]
   12c84:	mov	r7, r0
   12c88:	ldr	r0, [r0]
   12c8c:	lsl	r1, r1, #2
   12c90:	bl	11f30 <realloc@plt>
   12c94:	add	r5, r5, #1
   12c98:	str	r0, [r7]
   12c9c:	cmp	r6, r5
   12ca0:	bne	12c74 <table_add_column@@Base+0x68>
   12ca4:	mov	r0, r4
   12ca8:	bl	138a8 <table_get_row_length@@Base>
   12cac:	ldr	r6, [r4, #4]
   12cb0:	mov	r7, r0
   12cb4:	mov	r0, r9
   12cb8:	bl	135b8 <table_get_default_compare_function_for_data_type@@Base>
   12cbc:	ldr	r5, [r4]
   12cc0:	mov	sl, r0
   12cc4:	mov	r0, r8
   12cc8:	bl	11f6c <strlen@plt>
   12ccc:	add	r0, r0, #1
   12cd0:	bl	11f48 <malloc@plt>
   12cd4:	mov	r1, r8
   12cd8:	add	r8, r6, r6, lsl #1
   12cdc:	cmp	r0, #0
   12ce0:	str	r0, [r5, r8, lsl #2]
   12ce4:	beq	12cec <table_add_column@@Base+0xe0>
   12ce8:	bl	11f3c <strcpy@plt>
   12cec:	add	r0, r5, r8, lsl #2
   12cf0:	cmp	r7, #1
   12cf4:	stmib	r0, {r9, sl}
   12cf8:	blt	12d1c <table_add_column@@Base+0x110>
   12cfc:	mov	r5, #0
   12d00:	mov	r0, r4
   12d04:	mov	r1, r5
   12d08:	mov	r2, r6
   12d0c:	bl	14944 <table_cell_init@@Base>
   12d10:	add	r5, r5, #1
   12d14:	cmp	r7, r5
   12d18:	bne	12d00 <table_add_column@@Base+0xf4>
   12d1c:	ldr	r2, [r4, #4]
   12d20:	mov	r0, r4
   12d24:	mvn	r1, #0
   12d28:	mov	r3, #8
   12d2c:	bl	12a90 <table_notify@@Base>
   12d30:	ldr	r0, [r4, #4]
   12d34:	add	r1, r0, #1
   12d38:	str	r1, [r4, #4]
   12d3c:	sub	sp, fp, #28
   12d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d44 <table_remove_column@@Base>:
   12d44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d48:	add	fp, sp, #24
   12d4c:	mov	r5, r0
   12d50:	ldr	r0, [r0]
   12d54:	add	r6, r1, r1, lsl #1
   12d58:	mov	r9, r1
   12d5c:	ldr	r0, [r0, r6, lsl #2]
   12d60:	cmp	r0, #0
   12d64:	beq	12d6c <table_remove_column@@Base+0x28>
   12d68:	bl	11f18 <free@plt>
   12d6c:	ldr	r0, [r5, #4]
   12d70:	sub	r4, r0, #1
   12d74:	cmp	r4, r9
   12d78:	ble	12da8 <table_remove_column@@Base+0x64>
   12d7c:	sub	r0, r4, r9
   12d80:	lsl	r1, r6, #2
   12d84:	ldr	r2, [r5]
   12d88:	subs	r0, r0, #1
   12d8c:	add	r2, r2, r1
   12d90:	add	r1, r1, #12
   12d94:	vldr	d16, [r2, #12]
   12d98:	ldr	r3, [r2, #20]
   12d9c:	str	r3, [r2, #8]
   12da0:	vstr	d16, [r2]
   12da4:	bne	12d84 <table_remove_column@@Base+0x40>
   12da8:	mov	r0, r5
   12dac:	bl	138a8 <table_get_row_length@@Base>
   12db0:	cmp	r0, #1
   12db4:	blt	12e10 <table_remove_column@@Base+0xcc>
   12db8:	mov	r6, r0
   12dbc:	mov	r7, #0
   12dc0:	mov	r0, r5
   12dc4:	mov	r1, r7
   12dc8:	mov	r2, r9
   12dcc:	bl	14980 <table_cell_destroy@@Base>
   12dd0:	mov	r0, r5
   12dd4:	mov	r1, r7
   12dd8:	bl	13844 <table_get_row_ptr@@Base>
   12ddc:	cmp	r4, r9
   12de0:	ble	12e04 <table_remove_column@@Base+0xc0>
   12de4:	mov	r1, r9
   12de8:	ldr	r2, [r0]
   12dec:	add	r3, r2, r1, lsl #2
   12df0:	ldr	r3, [r3, #4]
   12df4:	str	r3, [r2, r1, lsl #2]
   12df8:	add	r1, r1, #1
   12dfc:	cmp	r4, r1
   12e00:	bne	12de8 <table_remove_column@@Base+0xa4>
   12e04:	add	r7, r7, #1
   12e08:	cmp	r7, r6
   12e0c:	bne	12dc0 <table_remove_column@@Base+0x7c>
   12e10:	ldmib	r5, {r0, r1}
   12e14:	sub	r0, r0, #1
   12e18:	udiv	r2, r0, r1
   12e1c:	str	r0, [r5, #4]
   12e20:	mls	r0, r2, r1, r0
   12e24:	cmp	r0, #0
   12e28:	bne	12e94 <table_remove_column@@Base+0x150>
   12e2c:	ldr	r2, [r5, #12]
   12e30:	ldr	r0, [r5]
   12e34:	sub	r1, r2, r1
   12e38:	str	r1, [r5, #12]
   12e3c:	add	r1, r1, r1, lsl #1
   12e40:	lsl	r1, r1, #2
   12e44:	bl	11f30 <realloc@plt>
   12e48:	str	r0, [r5]
   12e4c:	mov	r0, r5
   12e50:	bl	138a8 <table_get_row_length@@Base>
   12e54:	cmp	r0, #1
   12e58:	blt	12e94 <table_remove_column@@Base+0x150>
   12e5c:	mov	r8, r0
   12e60:	mov	r7, #0
   12e64:	mov	r0, r5
   12e68:	mov	r1, r7
   12e6c:	bl	13844 <table_get_row_ptr@@Base>
   12e70:	ldr	r1, [r5, #12]
   12e74:	mov	r6, r0
   12e78:	ldr	r0, [r0]
   12e7c:	lsl	r1, r1, #2
   12e80:	bl	11f30 <realloc@plt>
   12e84:	add	r7, r7, #1
   12e88:	str	r0, [r6]
   12e8c:	cmp	r8, r7
   12e90:	bne	12e64 <table_remove_column@@Base+0x120>
   12e94:	mov	r0, r5
   12e98:	mvn	r1, #0
   12e9c:	mov	r2, r9
   12ea0:	mov	r3, #16
   12ea4:	bl	12a90 <table_notify@@Base>
   12ea8:	mov	r0, #0
   12eac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012eb0 <table_get_column_compare_function@@Base>:
   12eb0:	ldr	r0, [r0]
   12eb4:	add	r1, r1, r1, lsl #1
   12eb8:	add	r0, r0, r1, lsl #2
   12ebc:	ldr	r0, [r0, #8]
   12ec0:	bx	lr

00012ec4 <table_set_column_compare_function@@Base>:
   12ec4:	ldr	r0, [r0]
   12ec8:	add	r1, r1, r1, lsl #1
   12ecc:	add	r0, r0, r1, lsl #2
   12ed0:	str	r2, [r0, #8]
   12ed4:	bx	lr

00012ed8 <table_compare_bool@@Base>:
   12ed8:	cmp	r0, #0
   12edc:	beq	12f10 <table_compare_bool@@Base+0x38>
   12ee0:	cmp	r1, #0
   12ee4:	moveq	r1, #1
   12ee8:	moveq	r0, r1
   12eec:	bxeq	lr
   12ef0:	ldrb	r2, [r1]
   12ef4:	ldrb	r0, [r0]
   12ef8:	mov	r1, #0
   12efc:	cmp	r0, r2
   12f00:	mvncc	r1, #0
   12f04:	movwhi	r1, #1
   12f08:	mov	r0, r1
   12f0c:	bx	lr
   12f10:	cmp	r1, #0
   12f14:	mvnne	r1, #0
   12f18:	mov	r0, r1
   12f1c:	bx	lr

00012f20 <table_compare_int@@Base>:
   12f20:	cmp	r0, #0
   12f24:	beq	12f58 <table_compare_int@@Base+0x38>
   12f28:	cmp	r1, #0
   12f2c:	moveq	r1, #1
   12f30:	moveq	r0, r1
   12f34:	bxeq	lr
   12f38:	ldr	r2, [r1]
   12f3c:	ldr	r0, [r0]
   12f40:	mov	r1, #0
   12f44:	cmp	r0, r2
   12f48:	mvnlt	r1, #0
   12f4c:	movwgt	r1, #1
   12f50:	mov	r0, r1
   12f54:	bx	lr
   12f58:	cmp	r1, #0
   12f5c:	mvnne	r1, #0
   12f60:	mov	r0, r1
   12f64:	bx	lr

00012f68 <table_compare_uint@@Base>:
   12f68:	cmp	r0, #0
   12f6c:	beq	12fa0 <table_compare_uint@@Base+0x38>
   12f70:	cmp	r1, #0
   12f74:	moveq	r1, #1
   12f78:	moveq	r0, r1
   12f7c:	bxeq	lr
   12f80:	ldr	r2, [r1]
   12f84:	ldr	r0, [r0]
   12f88:	mov	r1, #0
   12f8c:	cmp	r0, r2
   12f90:	mvncc	r1, #0
   12f94:	movwhi	r1, #1
   12f98:	mov	r0, r1
   12f9c:	bx	lr
   12fa0:	cmp	r1, #0
   12fa4:	mvnne	r1, #0
   12fa8:	mov	r0, r1
   12fac:	bx	lr

00012fb0 <table_compare_int8@@Base>:
   12fb0:	cmp	r0, #0
   12fb4:	beq	12fe8 <table_compare_int8@@Base+0x38>
   12fb8:	cmp	r1, #0
   12fbc:	moveq	r1, #1
   12fc0:	moveq	r0, r1
   12fc4:	bxeq	lr
   12fc8:	ldrsb	r2, [r1]
   12fcc:	ldrsb	r0, [r0]
   12fd0:	mov	r1, #0
   12fd4:	cmp	r0, r2
   12fd8:	mvnlt	r1, #0
   12fdc:	movwgt	r1, #1
   12fe0:	mov	r0, r1
   12fe4:	bx	lr
   12fe8:	cmp	r1, #0
   12fec:	mvnne	r1, #0
   12ff0:	mov	r0, r1
   12ff4:	bx	lr

00012ff8 <table_compare_uint8@@Base>:
   12ff8:	cmp	r0, #0
   12ffc:	beq	13030 <table_compare_uint8@@Base+0x38>
   13000:	cmp	r1, #0
   13004:	moveq	r1, #1
   13008:	moveq	r0, r1
   1300c:	bxeq	lr
   13010:	ldrb	r2, [r1]
   13014:	ldrb	r0, [r0]
   13018:	mov	r1, #0
   1301c:	cmp	r0, r2
   13020:	mvncc	r1, #0
   13024:	movwhi	r1, #1
   13028:	mov	r0, r1
   1302c:	bx	lr
   13030:	cmp	r1, #0
   13034:	mvnne	r1, #0
   13038:	mov	r0, r1
   1303c:	bx	lr

00013040 <table_compare_int16@@Base>:
   13040:	cmp	r0, #0
   13044:	beq	13078 <table_compare_int16@@Base+0x38>
   13048:	cmp	r1, #0
   1304c:	moveq	r1, #1
   13050:	moveq	r0, r1
   13054:	bxeq	lr
   13058:	ldrsh	r2, [r1]
   1305c:	ldrsh	r0, [r0]
   13060:	mov	r1, #0
   13064:	cmp	r0, r2
   13068:	mvnlt	r1, #0
   1306c:	movwgt	r1, #1
   13070:	mov	r0, r1
   13074:	bx	lr
   13078:	cmp	r1, #0
   1307c:	mvnne	r1, #0
   13080:	mov	r0, r1
   13084:	bx	lr

00013088 <table_compare_uint16@@Base>:
   13088:	cmp	r0, #0
   1308c:	beq	130c0 <table_compare_uint16@@Base+0x38>
   13090:	cmp	r1, #0
   13094:	moveq	r1, #1
   13098:	moveq	r0, r1
   1309c:	bxeq	lr
   130a0:	ldrh	r2, [r1]
   130a4:	ldrh	r0, [r0]
   130a8:	mov	r1, #0
   130ac:	cmp	r0, r2
   130b0:	mvncc	r1, #0
   130b4:	movwhi	r1, #1
   130b8:	mov	r0, r1
   130bc:	bx	lr
   130c0:	cmp	r1, #0
   130c4:	mvnne	r1, #0
   130c8:	mov	r0, r1
   130cc:	bx	lr

000130d0 <table_compare_int32@@Base>:
   130d0:	cmp	r0, #0
   130d4:	beq	13108 <table_compare_int32@@Base+0x38>
   130d8:	cmp	r1, #0
   130dc:	moveq	r1, #1
   130e0:	moveq	r0, r1
   130e4:	bxeq	lr
   130e8:	ldr	r2, [r1]
   130ec:	ldr	r0, [r0]
   130f0:	mov	r1, #0
   130f4:	cmp	r0, r2
   130f8:	mvnlt	r1, #0
   130fc:	movwgt	r1, #1
   13100:	mov	r0, r1
   13104:	bx	lr
   13108:	cmp	r1, #0
   1310c:	mvnne	r1, #0
   13110:	mov	r0, r1
   13114:	bx	lr

00013118 <table_compare_uint32@@Base>:
   13118:	cmp	r0, #0
   1311c:	beq	13150 <table_compare_uint32@@Base+0x38>
   13120:	cmp	r1, #0
   13124:	moveq	r1, #1
   13128:	moveq	r0, r1
   1312c:	bxeq	lr
   13130:	ldr	r2, [r1]
   13134:	ldr	r0, [r0]
   13138:	mov	r1, #0
   1313c:	cmp	r0, r2
   13140:	mvncc	r1, #0
   13144:	movwhi	r1, #1
   13148:	mov	r0, r1
   1314c:	bx	lr
   13150:	cmp	r1, #0
   13154:	mvnne	r1, #0
   13158:	mov	r0, r1
   1315c:	bx	lr

00013160 <table_compare_int64@@Base>:
   13160:	cmp	r0, #0
   13164:	beq	131b8 <table_compare_int64@@Base+0x58>
   13168:	cmp	r1, #0
   1316c:	moveq	r1, #1
   13170:	moveq	r0, r1
   13174:	bxeq	lr
   13178:	push	{r5, r7, fp, lr}
   1317c:	add	fp, sp, #8
   13180:	ldm	r1, {r2, r7}
   13184:	ldm	r0, {r0, r5}
   13188:	mov	r1, #0
   1318c:	subs	r3, r0, r2
   13190:	sbcs	r3, r5, r7
   13194:	movwlt	r1, #1
   13198:	cmp	r1, #0
   1319c:	mvnne	r1, #0
   131a0:	subs	r0, r2, r0
   131a4:	sbcs	r0, r7, r5
   131a8:	movwlt	r1, #1
   131ac:	pop	{r5, r7, fp, lr}
   131b0:	mov	r0, r1
   131b4:	bx	lr
   131b8:	cmp	r1, #0
   131bc:	mvnne	r1, #0
   131c0:	mov	r0, r1
   131c4:	bx	lr

000131c8 <table_compare_uint64@@Base>:
   131c8:	cmp	r0, #0
   131cc:	beq	13220 <table_compare_uint64@@Base+0x58>
   131d0:	cmp	r1, #0
   131d4:	moveq	r1, #1
   131d8:	moveq	r0, r1
   131dc:	bxeq	lr
   131e0:	push	{r5, r7, fp, lr}
   131e4:	add	fp, sp, #8
   131e8:	ldm	r1, {r2, r7}
   131ec:	ldm	r0, {r0, r5}
   131f0:	mov	r1, #0
   131f4:	subs	r3, r0, r2
   131f8:	sbcs	r3, r5, r7
   131fc:	movwcc	r1, #1
   13200:	cmp	r1, #0
   13204:	mvnne	r1, #0
   13208:	subs	r0, r2, r0
   1320c:	sbcs	r0, r7, r5
   13210:	movwcc	r1, #1
   13214:	pop	{r5, r7, fp, lr}
   13218:	mov	r0, r1
   1321c:	bx	lr
   13220:	cmp	r1, #0
   13224:	mvnne	r1, #0
   13228:	mov	r0, r1
   1322c:	bx	lr

00013230 <table_compare_short@@Base>:
   13230:	cmp	r0, #0
   13234:	beq	13268 <table_compare_short@@Base+0x38>
   13238:	cmp	r1, #0
   1323c:	moveq	r1, #1
   13240:	moveq	r0, r1
   13244:	bxeq	lr
   13248:	ldrsh	r2, [r1]
   1324c:	ldrsh	r0, [r0]
   13250:	mov	r1, #0
   13254:	cmp	r0, r2
   13258:	mvnlt	r1, #0
   1325c:	movwgt	r1, #1
   13260:	mov	r0, r1
   13264:	bx	lr
   13268:	cmp	r1, #0
   1326c:	mvnne	r1, #0
   13270:	mov	r0, r1
   13274:	bx	lr

00013278 <table_compare_ushort@@Base>:
   13278:	cmp	r0, #0
   1327c:	beq	132b0 <table_compare_ushort@@Base+0x38>
   13280:	cmp	r1, #0
   13284:	moveq	r1, #1
   13288:	moveq	r0, r1
   1328c:	bxeq	lr
   13290:	ldrh	r2, [r1]
   13294:	ldrh	r0, [r0]
   13298:	mov	r1, #0
   1329c:	cmp	r0, r2
   132a0:	mvncc	r1, #0
   132a4:	movwhi	r1, #1
   132a8:	mov	r0, r1
   132ac:	bx	lr
   132b0:	cmp	r1, #0
   132b4:	mvnne	r1, #0
   132b8:	mov	r0, r1
   132bc:	bx	lr

000132c0 <table_compare_long@@Base>:
   132c0:	cmp	r0, #0
   132c4:	beq	132f8 <table_compare_long@@Base+0x38>
   132c8:	cmp	r1, #0
   132cc:	moveq	r1, #1
   132d0:	moveq	r0, r1
   132d4:	bxeq	lr
   132d8:	ldr	r2, [r1]
   132dc:	ldr	r0, [r0]
   132e0:	mov	r1, #0
   132e4:	cmp	r0, r2
   132e8:	mvnlt	r1, #0
   132ec:	movwgt	r1, #1
   132f0:	mov	r0, r1
   132f4:	bx	lr
   132f8:	cmp	r1, #0
   132fc:	mvnne	r1, #0
   13300:	mov	r0, r1
   13304:	bx	lr

00013308 <table_compare_ulong@@Base>:
   13308:	cmp	r0, #0
   1330c:	beq	13340 <table_compare_ulong@@Base+0x38>
   13310:	cmp	r1, #0
   13314:	moveq	r1, #1
   13318:	moveq	r0, r1
   1331c:	bxeq	lr
   13320:	ldr	r2, [r1]
   13324:	ldr	r0, [r0]
   13328:	mov	r1, #0
   1332c:	cmp	r0, r2
   13330:	mvncc	r1, #0
   13334:	movwhi	r1, #1
   13338:	mov	r0, r1
   1333c:	bx	lr
   13340:	cmp	r1, #0
   13344:	mvnne	r1, #0
   13348:	mov	r0, r1
   1334c:	bx	lr

00013350 <table_compare_llong@@Base>:
   13350:	cmp	r0, #0
   13354:	beq	133a8 <table_compare_llong@@Base+0x58>
   13358:	cmp	r1, #0
   1335c:	moveq	r1, #1
   13360:	moveq	r0, r1
   13364:	bxeq	lr
   13368:	push	{r5, r7, fp, lr}
   1336c:	add	fp, sp, #8
   13370:	ldm	r1, {r2, r7}
   13374:	ldm	r0, {r0, r5}
   13378:	mov	r1, #0
   1337c:	subs	r3, r0, r2
   13380:	sbcs	r3, r5, r7
   13384:	movwlt	r1, #1
   13388:	cmp	r1, #0
   1338c:	mvnne	r1, #0
   13390:	subs	r0, r2, r0
   13394:	sbcs	r0, r7, r5
   13398:	movwlt	r1, #1
   1339c:	pop	{r5, r7, fp, lr}
   133a0:	mov	r0, r1
   133a4:	bx	lr
   133a8:	cmp	r1, #0
   133ac:	mvnne	r1, #0
   133b0:	mov	r0, r1
   133b4:	bx	lr

000133b8 <table_compare_ullong@@Base>:
   133b8:	cmp	r0, #0
   133bc:	beq	133f0 <table_compare_ullong@@Base+0x38>
   133c0:	cmp	r1, #0
   133c4:	moveq	r1, #1
   133c8:	moveq	r0, r1
   133cc:	bxeq	lr
   133d0:	ldr	r2, [r1]
   133d4:	ldr	r0, [r0]
   133d8:	mov	r1, #0
   133dc:	cmp	r0, r2
   133e0:	mvncc	r1, #0
   133e4:	movwhi	r1, #1
   133e8:	mov	r0, r1
   133ec:	bx	lr
   133f0:	cmp	r1, #0
   133f4:	mvnne	r1, #0
   133f8:	mov	r0, r1
   133fc:	bx	lr

00013400 <table_compare_float@@Base>:
   13400:	cmp	r0, #0
   13404:	beq	1343c <table_compare_float@@Base+0x3c>
   13408:	cmp	r1, #0
   1340c:	moveq	r1, #1
   13410:	moveq	r0, r1
   13414:	bxeq	lr
   13418:	vldr	s0, [r1]
   1341c:	vldr	s2, [r0]
   13420:	mov	r1, #0
   13424:	vcmpe.f32	s2, s0
   13428:	vmrs	APSR_nzcv, fpscr
   1342c:	mvnmi	r1, #0
   13430:	movwgt	r1, #1
   13434:	mov	r0, r1
   13438:	bx	lr
   1343c:	cmp	r1, #0
   13440:	mvnne	r1, #0
   13444:	mov	r0, r1
   13448:	bx	lr

0001344c <table_compare_double@@Base>:
   1344c:	cmp	r0, #0
   13450:	beq	13488 <table_compare_double@@Base+0x3c>
   13454:	cmp	r1, #0
   13458:	moveq	r1, #1
   1345c:	moveq	r0, r1
   13460:	bxeq	lr
   13464:	vldr	d16, [r1]
   13468:	vldr	d17, [r0]
   1346c:	mov	r1, #0
   13470:	vcmpe.f64	d17, d16
   13474:	vmrs	APSR_nzcv, fpscr
   13478:	mvnmi	r1, #0
   1347c:	movwgt	r1, #1
   13480:	mov	r0, r1
   13484:	bx	lr
   13488:	cmp	r1, #0
   1348c:	mvnne	r1, #0
   13490:	mov	r0, r1
   13494:	bx	lr

00013498 <table_compare_ldouble@@Base>:
   13498:	cmp	r0, #0
   1349c:	beq	134d4 <table_compare_ldouble@@Base+0x3c>
   134a0:	cmp	r1, #0
   134a4:	moveq	r1, #1
   134a8:	moveq	r0, r1
   134ac:	bxeq	lr
   134b0:	vldr	d16, [r1]
   134b4:	vldr	d17, [r0]
   134b8:	mov	r1, #0
   134bc:	vcmpe.f64	d17, d16
   134c0:	vmrs	APSR_nzcv, fpscr
   134c4:	mvnmi	r1, #0
   134c8:	movwgt	r1, #1
   134cc:	mov	r0, r1
   134d0:	bx	lr
   134d4:	cmp	r1, #0
   134d8:	mvnne	r1, #0
   134dc:	mov	r0, r1
   134e0:	bx	lr

000134e4 <table_compare_char@@Base>:
   134e4:	cmp	r0, #0
   134e8:	beq	1351c <table_compare_char@@Base+0x38>
   134ec:	cmp	r1, #0
   134f0:	moveq	r1, #1
   134f4:	moveq	r0, r1
   134f8:	bxeq	lr
   134fc:	ldrb	r2, [r1]
   13500:	ldrb	r0, [r0]
   13504:	mov	r1, #0
   13508:	cmp	r0, r2
   1350c:	mvncc	r1, #0
   13510:	movwhi	r1, #1
   13514:	mov	r0, r1
   13518:	bx	lr
   1351c:	cmp	r1, #0
   13520:	mvnne	r1, #0
   13524:	mov	r0, r1
   13528:	bx	lr

0001352c <table_compare_uchar@@Base>:
   1352c:	cmp	r0, #0
   13530:	beq	13564 <table_compare_uchar@@Base+0x38>
   13534:	cmp	r1, #0
   13538:	moveq	r1, #1
   1353c:	moveq	r0, r1
   13540:	bxeq	lr
   13544:	ldrb	r2, [r1]
   13548:	ldrb	r0, [r0]
   1354c:	mov	r1, #0
   13550:	cmp	r0, r2
   13554:	mvncc	r1, #0
   13558:	movwhi	r1, #1
   1355c:	mov	r0, r1
   13560:	bx	lr
   13564:	cmp	r1, #0
   13568:	mvnne	r1, #0
   1356c:	mov	r0, r1
   13570:	bx	lr

00013574 <table_compare_string@@Base>:
   13574:	cmp	r0, #0
   13578:	beq	13590 <table_compare_string@@Base+0x1c>
   1357c:	cmp	r1, #0
   13580:	moveq	r1, #1
   13584:	moveq	r0, r1
   13588:	bxeq	lr
   1358c:	b	11f00 <strcmp@plt>
   13590:	cmp	r1, #0
   13594:	mvnne	r1, #0
   13598:	mov	r0, r1
   1359c:	bx	lr

000135a0 <table_compare_ptr@@Base>:
   135a0:	mov	r2, #0
   135a4:	cmp	r0, r1
   135a8:	mvncc	r2, #0
   135ac:	movwhi	r2, #1
   135b0:	mov	r0, r2
   135b4:	bx	lr

000135b8 <table_get_default_compare_function_for_data_type@@Base>:
   135b8:	cmp	r0, #23
   135bc:	ldrls	r1, [pc, #12]	; 135d0 <table_get_default_compare_function_for_data_type@@Base+0x18>
   135c0:	movhi	r0, #0
   135c4:	addls	r1, pc, r1
   135c8:	ldrls	r0, [r1, r0, lsl #2]
   135cc:	bx	lr
   135d0:	andeq	r2, r1, r4, ror #17

000135d4 <table_get@@Base>:
   135d4:	push	{fp, lr}
   135d8:	mov	fp, sp
   135dc:	bl	14964 <table_get_cell_ptr@@Base>
   135e0:	ldr	r0, [r0]
   135e4:	pop	{fp, pc}

000135e8 <table_get_bool@@Base>:
   135e8:	push	{fp, lr}
   135ec:	mov	fp, sp
   135f0:	bl	14964 <table_get_cell_ptr@@Base>
   135f4:	ldr	r0, [r0]
   135f8:	ldrb	r0, [r0]
   135fc:	pop	{fp, pc}

00013600 <table_get_int@@Base>:
   13600:	push	{fp, lr}
   13604:	mov	fp, sp
   13608:	bl	14964 <table_get_cell_ptr@@Base>
   1360c:	ldr	r0, [r0]
   13610:	ldr	r0, [r0]
   13614:	pop	{fp, pc}

00013618 <table_get_uint@@Base>:
   13618:	push	{fp, lr}
   1361c:	mov	fp, sp
   13620:	bl	14964 <table_get_cell_ptr@@Base>
   13624:	ldr	r0, [r0]
   13628:	ldr	r0, [r0]
   1362c:	pop	{fp, pc}

00013630 <table_get_int8@@Base>:
   13630:	push	{fp, lr}
   13634:	mov	fp, sp
   13638:	bl	14964 <table_get_cell_ptr@@Base>
   1363c:	ldr	r0, [r0]
   13640:	ldrsb	r0, [r0]
   13644:	pop	{fp, pc}

00013648 <table_get_uint8@@Base>:
   13648:	push	{fp, lr}
   1364c:	mov	fp, sp
   13650:	bl	14964 <table_get_cell_ptr@@Base>
   13654:	ldr	r0, [r0]
   13658:	ldrb	r0, [r0]
   1365c:	pop	{fp, pc}

00013660 <table_get_int16@@Base>:
   13660:	push	{fp, lr}
   13664:	mov	fp, sp
   13668:	bl	14964 <table_get_cell_ptr@@Base>
   1366c:	ldr	r0, [r0]
   13670:	ldrsh	r0, [r0]
   13674:	pop	{fp, pc}

00013678 <table_get_uint16@@Base>:
   13678:	push	{fp, lr}
   1367c:	mov	fp, sp
   13680:	bl	14964 <table_get_cell_ptr@@Base>
   13684:	ldr	r0, [r0]
   13688:	ldrh	r0, [r0]
   1368c:	pop	{fp, pc}

00013690 <table_get_int32@@Base>:
   13690:	push	{fp, lr}
   13694:	mov	fp, sp
   13698:	bl	14964 <table_get_cell_ptr@@Base>
   1369c:	ldr	r0, [r0]
   136a0:	ldr	r0, [r0]
   136a4:	pop	{fp, pc}

000136a8 <table_get_uint32@@Base>:
   136a8:	push	{fp, lr}
   136ac:	mov	fp, sp
   136b0:	bl	14964 <table_get_cell_ptr@@Base>
   136b4:	ldr	r0, [r0]
   136b8:	ldr	r0, [r0]
   136bc:	pop	{fp, pc}

000136c0 <table_get_int64@@Base>:
   136c0:	push	{fp, lr}
   136c4:	mov	fp, sp
   136c8:	bl	14964 <table_get_cell_ptr@@Base>
   136cc:	ldr	r0, [r0]
   136d0:	ldrd	r0, [r0]
   136d4:	pop	{fp, pc}

000136d8 <table_get_uint64@@Base>:
   136d8:	push	{fp, lr}
   136dc:	mov	fp, sp
   136e0:	bl	14964 <table_get_cell_ptr@@Base>
   136e4:	ldr	r0, [r0]
   136e8:	ldrd	r0, [r0]
   136ec:	pop	{fp, pc}

000136f0 <table_get_short@@Base>:
   136f0:	push	{fp, lr}
   136f4:	mov	fp, sp
   136f8:	bl	14964 <table_get_cell_ptr@@Base>
   136fc:	ldr	r0, [r0]
   13700:	ldrsh	r0, [r0]
   13704:	pop	{fp, pc}

00013708 <table_get_ushort@@Base>:
   13708:	push	{fp, lr}
   1370c:	mov	fp, sp
   13710:	bl	14964 <table_get_cell_ptr@@Base>
   13714:	ldr	r0, [r0]
   13718:	ldrh	r0, [r0]
   1371c:	pop	{fp, pc}

00013720 <table_get_long@@Base>:
   13720:	push	{fp, lr}
   13724:	mov	fp, sp
   13728:	bl	14964 <table_get_cell_ptr@@Base>
   1372c:	ldr	r0, [r0]
   13730:	ldr	r0, [r0]
   13734:	pop	{fp, pc}

00013738 <table_get_ulong@@Base>:
   13738:	push	{fp, lr}
   1373c:	mov	fp, sp
   13740:	bl	14964 <table_get_cell_ptr@@Base>
   13744:	ldr	r0, [r0]
   13748:	ldr	r0, [r0]
   1374c:	pop	{fp, pc}

00013750 <table_get_llong@@Base>:
   13750:	push	{fp, lr}
   13754:	mov	fp, sp
   13758:	bl	14964 <table_get_cell_ptr@@Base>
   1375c:	ldr	r0, [r0]
   13760:	ldrd	r0, [r0]
   13764:	pop	{fp, pc}

00013768 <table_get_ullong@@Base>:
   13768:	push	{fp, lr}
   1376c:	mov	fp, sp
   13770:	bl	14964 <table_get_cell_ptr@@Base>
   13774:	ldr	r0, [r0]
   13778:	ldrd	r0, [r0]
   1377c:	pop	{fp, pc}

00013780 <table_get_float@@Base>:
   13780:	push	{fp, lr}
   13784:	mov	fp, sp
   13788:	bl	14964 <table_get_cell_ptr@@Base>
   1378c:	ldr	r0, [r0]
   13790:	vldr	s0, [r0]
   13794:	pop	{fp, pc}

00013798 <table_get_double@@Base>:
   13798:	push	{fp, lr}
   1379c:	mov	fp, sp
   137a0:	bl	14964 <table_get_cell_ptr@@Base>
   137a4:	ldr	r0, [r0]
   137a8:	vldr	d0, [r0]
   137ac:	pop	{fp, pc}

000137b0 <table_get_ldouble@@Base>:
   137b0:	push	{fp, lr}
   137b4:	mov	fp, sp
   137b8:	bl	14964 <table_get_cell_ptr@@Base>
   137bc:	ldr	r0, [r0]
   137c0:	vldr	d0, [r0]
   137c4:	pop	{fp, pc}

000137c8 <table_get_char@@Base>:
   137c8:	push	{fp, lr}
   137cc:	mov	fp, sp
   137d0:	bl	14964 <table_get_cell_ptr@@Base>
   137d4:	ldr	r0, [r0]
   137d8:	ldrb	r0, [r0]
   137dc:	pop	{fp, pc}

000137e0 <table_get_uchar@@Base>:
   137e0:	push	{fp, lr}
   137e4:	mov	fp, sp
   137e8:	bl	14964 <table_get_cell_ptr@@Base>
   137ec:	ldr	r0, [r0]
   137f0:	ldrb	r0, [r0]
   137f4:	pop	{fp, pc}

000137f8 <table_get_string@@Base>:
   137f8:	push	{fp, lr}
   137fc:	mov	fp, sp
   13800:	bl	14964 <table_get_cell_ptr@@Base>
   13804:	ldr	r0, [r0]
   13808:	pop	{fp, pc}

0001380c <table_get_ptr@@Base>:
   1380c:	push	{fp, lr}
   13810:	mov	fp, sp
   13814:	bl	14964 <table_get_cell_ptr@@Base>
   13818:	ldr	r0, [r0]
   1381c:	pop	{fp, pc}

00013820 <table_row_init@@Base>:
   13820:	push	{r4, r5, fp, lr}
   13824:	add	fp, sp, #8
   13828:	mov	r4, r1
   1382c:	ldr	r1, [r0, #12]
   13830:	ldr	r5, [r0, #16]
   13834:	lsl	r0, r1, #2
   13838:	bl	11f48 <malloc@plt>
   1383c:	str	r0, [r5, r4, lsl #2]
   13840:	pop	{r4, r5, fp, pc}

00013844 <table_get_row_ptr@@Base>:
   13844:	ldr	r0, [r0, #16]
   13848:	add	r0, r0, r1, lsl #2
   1384c:	bx	lr

00013850 <table_row_destroy@@Base>:
   13850:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13854:	add	fp, sp, #24
   13858:	mov	r4, r1
   1385c:	mov	r5, r0
   13860:	bl	12b84 <table_get_column_length@@Base>
   13864:	ldr	r8, [r5, #16]
   13868:	cmp	r0, #1
   1386c:	blt	13894 <table_row_destroy@@Base+0x44>
   13870:	mov	r6, r0
   13874:	mov	r7, #0
   13878:	mov	r0, r5
   1387c:	mov	r1, r4
   13880:	mov	r2, r7
   13884:	bl	14980 <table_cell_destroy@@Base>
   13888:	add	r7, r7, #1
   1388c:	cmp	r6, r7
   13890:	bne	13878 <table_row_destroy@@Base+0x28>
   13894:	ldr	r0, [r8, r4, lsl #2]
   13898:	cmp	r0, #0
   1389c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   138a0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   138a4:	b	11f18 <free@plt>

000138a8 <table_get_row_length@@Base>:
   138a8:	ldr	r0, [r0, #20]
   138ac:	bx	lr

000138b0 <table_add_row@@Base>:
   138b0:	push	{r4, r5, r6, r7, fp, lr}
   138b4:	add	fp, sp, #16
   138b8:	ldr	r5, [r0, #20]
   138bc:	ldr	r1, [r0, #24]
   138c0:	mov	r4, r0
   138c4:	udiv	r0, r5, r1
   138c8:	mls	r0, r0, r1, r5
   138cc:	cmp	r0, #0
   138d0:	bne	138f4 <table_add_row@@Base+0x44>
   138d4:	ldr	r2, [r4, #28]
   138d8:	ldr	r0, [r4, #16]
   138dc:	add	r1, r2, r1
   138e0:	str	r1, [r4, #28]
   138e4:	lsl	r1, r1, #2
   138e8:	bl	11f30 <realloc@plt>
   138ec:	str	r0, [r4, #16]
   138f0:	ldr	r5, [r4, #20]
   138f4:	mov	r0, r4
   138f8:	bl	12b84 <table_get_column_length@@Base>
   138fc:	mov	r6, r0
   13900:	ldr	r0, [r4, #12]
   13904:	ldr	r7, [r4, #16]
   13908:	lsl	r0, r0, #2
   1390c:	bl	11f48 <malloc@plt>
   13910:	cmp	r6, #1
   13914:	str	r0, [r7, r5, lsl #2]
   13918:	blt	1393c <table_add_row@@Base+0x8c>
   1391c:	mov	r7, #0
   13920:	mov	r0, r4
   13924:	mov	r1, r5
   13928:	mov	r2, r7
   1392c:	bl	14944 <table_cell_init@@Base>
   13930:	add	r7, r7, #1
   13934:	cmp	r6, r7
   13938:	bne	13920 <table_add_row@@Base+0x70>
   1393c:	ldr	r1, [r4, #20]
   13940:	mov	r0, r4
   13944:	mvn	r2, #0
   13948:	mov	r3, #2
   1394c:	bl	12a90 <table_notify@@Base>
   13950:	ldr	r0, [r4, #20]
   13954:	add	r1, r0, #1
   13958:	str	r1, [r4, #20]
   1395c:	pop	{r4, r5, r6, r7, fp, pc}

00013960 <table_remove_row@@Base>:
   13960:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13964:	add	fp, sp, #24
   13968:	ldr	r8, [r0, #20]
   1396c:	mov	r4, r1
   13970:	mov	r5, r0
   13974:	bl	12b84 <table_get_column_length@@Base>
   13978:	cmp	r0, #1
   1397c:	blt	139c8 <table_remove_row@@Base+0x68>
   13980:	mov	r6, r0
   13984:	mov	r7, #0
   13988:	mov	r0, r5
   1398c:	mov	r1, r7
   13990:	bl	12bf8 <table_get_column_data_type@@Base>
   13994:	cmp	r0, #23
   13998:	beq	139bc <table_remove_row@@Base+0x5c>
   1399c:	mov	r0, r5
   139a0:	mov	r1, r4
   139a4:	mov	r2, r7
   139a8:	bl	14964 <table_get_cell_ptr@@Base>
   139ac:	ldr	r0, [r0]
   139b0:	cmp	r0, #0
   139b4:	beq	139bc <table_remove_row@@Base+0x5c>
   139b8:	bl	11f18 <free@plt>
   139bc:	add	r7, r7, #1
   139c0:	cmp	r6, r7
   139c4:	bne	13988 <table_remove_row@@Base+0x28>
   139c8:	ldr	r0, [r5, #16]
   139cc:	ldr	r0, [r0, r4, lsl #2]
   139d0:	cmp	r0, #0
   139d4:	beq	139dc <table_remove_row@@Base+0x7c>
   139d8:	bl	11f18 <free@plt>
   139dc:	sub	r0, r8, #1
   139e0:	cmp	r0, r4
   139e4:	ble	13a08 <table_remove_row@@Base+0xa8>
   139e8:	mov	r1, r4
   139ec:	ldr	r2, [r5, #16]
   139f0:	add	r3, r2, r1, lsl #2
   139f4:	ldr	r3, [r3, #4]
   139f8:	str	r3, [r2, r1, lsl #2]
   139fc:	add	r1, r1, #1
   13a00:	cmp	r0, r1
   13a04:	bne	139ec <table_remove_row@@Base+0x8c>
   13a08:	ldr	r0, [r5, #20]
   13a0c:	ldr	r1, [r5, #24]
   13a10:	sub	r0, r0, #1
   13a14:	udiv	r2, r0, r1
   13a18:	str	r0, [r5, #20]
   13a1c:	mls	r0, r2, r1, r0
   13a20:	cmp	r0, #0
   13a24:	bne	13a44 <table_remove_row@@Base+0xe4>
   13a28:	ldr	r2, [r5, #28]
   13a2c:	ldr	r0, [r5, #16]
   13a30:	sub	r1, r2, r1
   13a34:	str	r1, [r5, #28]
   13a38:	lsl	r1, r1, #2
   13a3c:	bl	11f30 <realloc@plt>
   13a40:	str	r0, [r5, #16]
   13a44:	mov	r0, r5
   13a48:	mov	r1, r4
   13a4c:	mvn	r2, #0
   13a50:	mov	r3, #4
   13a54:	bl	12a90 <table_notify@@Base>
   13a58:	mov	r0, #0
   13a5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013a60 <table_set_row_ptr@@Base>:
   13a60:	ldr	r2, [r2]
   13a64:	ldr	r0, [r0, #16]
   13a68:	str	r2, [r0, r1, lsl #2]
   13a6c:	bx	lr

00013a70 <table_set@@Base>:
   13a70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a74:	add	fp, sp, #24
   13a78:	mov	r8, r3
   13a7c:	mov	r4, r2
   13a80:	mov	r9, r1
   13a84:	mov	r6, r0
   13a88:	bl	14964 <table_get_cell_ptr@@Base>
   13a8c:	mov	r5, r0
   13a90:	mov	r0, r6
   13a94:	mov	r1, r4
   13a98:	bl	12b5c <table_get_col_ptr@@Base>
   13a9c:	ldr	r1, [fp, #8]
   13aa0:	mvn	r7, #0
   13aa4:	cmp	r1, #23
   13aa8:	bhi	13d70 <table_set@@Base+0x300>
   13aac:	add	r2, pc, #4
   13ab0:	ldr	r1, [r2, r1, lsl #2]
   13ab4:	add	pc, r2, r1
   13ab8:	andeq	r0, r0, r0, rrx
   13abc:	andeq	r0, r0, r0, ror r0
   13ac0:	andeq	r0, r0, r0, lsl #1
   13ac4:	muleq	r0, r0, r0
   13ac8:	andeq	r0, r0, r0, lsr #1
   13acc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   13ad0:	andeq	r0, r0, r0, asr #1
   13ad4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13ad8:	andeq	r0, r0, r0, ror #1
   13adc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13ae0:	andeq	r0, r0, r0, lsl #2
   13ae4:	andeq	r0, r0, r0, lsl r1
   13ae8:	andeq	r0, r0, r8, asr #2
   13aec:	andeq	r0, r0, r8, asr r1
   13af0:	andeq	r0, r0, r8, ror #2
   13af4:	andeq	r0, r0, r8, ror r1
   13af8:	andeq	r0, r0, r8, lsl #3
   13afc:	andeq	r0, r0, r0, asr #3
   13b00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b04:	andeq	r0, r0, r0, lsl r2
   13b08:	andeq	r0, r0, r0, lsr #4
   13b0c:	andeq	r0, r0, r0, lsr r2
   13b10:	andeq	r0, r0, ip, ror #4
   13b14:	andeq	r0, r0, r0, asr #5
   13b18:	ldr	r0, [r0, #4]
   13b1c:	cmp	r0, #0
   13b20:	bne	13d70 <table_set@@Base+0x300>
   13b24:	b	13c4c <table_set@@Base+0x1dc>
   13b28:	ldr	r0, [r0, #4]
   13b2c:	cmp	r0, #1
   13b30:	beq	13c4c <table_set@@Base+0x1dc>
   13b34:	b	13d70 <table_set@@Base+0x300>
   13b38:	ldr	r0, [r0, #4]
   13b3c:	cmp	r0, #2
   13b40:	beq	13d30 <table_set@@Base+0x2c0>
   13b44:	b	13d70 <table_set@@Base+0x300>
   13b48:	ldr	r0, [r0, #4]
   13b4c:	cmp	r0, #3
   13b50:	beq	13d30 <table_set@@Base+0x2c0>
   13b54:	b	13d70 <table_set@@Base+0x300>
   13b58:	ldr	r0, [r0, #4]
   13b5c:	cmp	r0, #4
   13b60:	beq	13bd4 <table_set@@Base+0x164>
   13b64:	b	13d70 <table_set@@Base+0x300>
   13b68:	ldr	r0, [r0, #4]
   13b6c:	cmp	r0, #5
   13b70:	beq	13bd4 <table_set@@Base+0x164>
   13b74:	b	13d70 <table_set@@Base+0x300>
   13b78:	ldr	r0, [r0, #4]
   13b7c:	cmp	r0, #6
   13b80:	beq	13c4c <table_set@@Base+0x1dc>
   13b84:	b	13d70 <table_set@@Base+0x300>
   13b88:	ldr	r0, [r0, #4]
   13b8c:	cmp	r0, #7
   13b90:	beq	13c4c <table_set@@Base+0x1dc>
   13b94:	b	13d70 <table_set@@Base+0x300>
   13b98:	ldr	r0, [r0, #4]
   13b9c:	cmp	r0, #8
   13ba0:	beq	13c94 <table_set@@Base+0x224>
   13ba4:	b	13d70 <table_set@@Base+0x300>
   13ba8:	ldr	r0, [r0, #4]
   13bac:	cmp	r0, #9
   13bb0:	beq	13c94 <table_set@@Base+0x224>
   13bb4:	b	13d70 <table_set@@Base+0x300>
   13bb8:	ldr	r0, [r0, #4]
   13bbc:	cmp	r0, #10
   13bc0:	beq	13bd4 <table_set@@Base+0x164>
   13bc4:	b	13d70 <table_set@@Base+0x300>
   13bc8:	ldr	r0, [r0, #4]
   13bcc:	cmp	r0, #11
   13bd0:	bne	13d70 <table_set@@Base+0x300>
   13bd4:	ldr	r0, [r5]
   13bd8:	cmp	r0, #0
   13bdc:	bne	13bf4 <table_set@@Base+0x184>
   13be0:	mov	r0, #2
   13be4:	bl	11f48 <malloc@plt>
   13be8:	cmp	r0, #0
   13bec:	str	r0, [r5]
   13bf0:	beq	13d70 <table_set@@Base+0x300>
   13bf4:	ldrh	r1, [r8]
   13bf8:	strh	r1, [r0]
   13bfc:	b	13d58 <table_set@@Base+0x2e8>
   13c00:	ldr	r0, [r0, #4]
   13c04:	cmp	r0, #12
   13c08:	beq	13c4c <table_set@@Base+0x1dc>
   13c0c:	b	13d70 <table_set@@Base+0x300>
   13c10:	ldr	r0, [r0, #4]
   13c14:	cmp	r0, #13
   13c18:	beq	13c4c <table_set@@Base+0x1dc>
   13c1c:	b	13d70 <table_set@@Base+0x300>
   13c20:	ldr	r0, [r0, #4]
   13c24:	cmp	r0, #14
   13c28:	beq	13c94 <table_set@@Base+0x224>
   13c2c:	b	13d70 <table_set@@Base+0x300>
   13c30:	ldr	r0, [r0, #4]
   13c34:	cmp	r0, #15
   13c38:	beq	13c94 <table_set@@Base+0x224>
   13c3c:	b	13d70 <table_set@@Base+0x300>
   13c40:	ldr	r0, [r0, #4]
   13c44:	cmp	r0, #16
   13c48:	bne	13d70 <table_set@@Base+0x300>
   13c4c:	ldr	r0, [r5]
   13c50:	cmp	r0, #0
   13c54:	bne	13c6c <table_set@@Base+0x1fc>
   13c58:	mov	r0, #4
   13c5c:	bl	11f48 <malloc@plt>
   13c60:	cmp	r0, #0
   13c64:	str	r0, [r5]
   13c68:	beq	13d70 <table_set@@Base+0x300>
   13c6c:	ldr	r1, [r8]
   13c70:	str	r1, [r0]
   13c74:	b	13d58 <table_set@@Base+0x2e8>
   13c78:	ldr	r0, [r0, #4]
   13c7c:	cmp	r0, #17
   13c80:	beq	13c94 <table_set@@Base+0x224>
   13c84:	b	13d70 <table_set@@Base+0x300>
   13c88:	ldr	r0, [r0, #4]
   13c8c:	cmp	r0, #18
   13c90:	bne	13d70 <table_set@@Base+0x300>
   13c94:	ldr	r0, [r5]
   13c98:	cmp	r0, #0
   13c9c:	bne	13cb4 <table_set@@Base+0x244>
   13ca0:	mov	r0, #8
   13ca4:	bl	11f48 <malloc@plt>
   13ca8:	cmp	r0, #0
   13cac:	str	r0, [r5]
   13cb0:	beq	13d70 <table_set@@Base+0x300>
   13cb4:	ldr	r1, [r8]
   13cb8:	ldr	r2, [r8, #4]
   13cbc:	str	r2, [r0, #4]
   13cc0:	str	r1, [r0]
   13cc4:	b	13d58 <table_set@@Base+0x2e8>
   13cc8:	ldr	r0, [r0, #4]
   13ccc:	cmp	r0, #19
   13cd0:	beq	13d30 <table_set@@Base+0x2c0>
   13cd4:	b	13d70 <table_set@@Base+0x300>
   13cd8:	ldr	r0, [r0, #4]
   13cdc:	cmp	r0, #20
   13ce0:	beq	13d30 <table_set@@Base+0x2c0>
   13ce4:	b	13d70 <table_set@@Base+0x300>
   13ce8:	ldr	r0, [r0, #4]
   13cec:	cmp	r0, #21
   13cf0:	bne	13d70 <table_set@@Base+0x300>
   13cf4:	mov	r0, r8
   13cf8:	bl	11f6c <strlen@plt>
   13cfc:	ldr	r2, [r5]
   13d00:	add	r1, r0, #1
   13d04:	mov	r0, r2
   13d08:	bl	11f30 <realloc@plt>
   13d0c:	cmp	r0, #0
   13d10:	str	r0, [r5]
   13d14:	beq	13d70 <table_set@@Base+0x300>
   13d18:	mov	r1, r8
   13d1c:	bl	11f3c <strcpy@plt>
   13d20:	b	13d58 <table_set@@Base+0x2e8>
   13d24:	ldr	r0, [r0, #4]
   13d28:	cmp	r0, #22
   13d2c:	bne	13d70 <table_set@@Base+0x300>
   13d30:	ldr	r0, [r5]
   13d34:	cmp	r0, #0
   13d38:	bne	13d50 <table_set@@Base+0x2e0>
   13d3c:	mov	r0, #1
   13d40:	bl	11f48 <malloc@plt>
   13d44:	cmp	r0, #0
   13d48:	str	r0, [r5]
   13d4c:	beq	13d70 <table_set@@Base+0x300>
   13d50:	ldrb	r1, [r8]
   13d54:	strb	r1, [r0]
   13d58:	mov	r0, r6
   13d5c:	mov	r1, r9
   13d60:	mov	r2, r4
   13d64:	mov	r3, #1
   13d68:	bl	12a90 <table_notify@@Base>
   13d6c:	mov	r7, #0
   13d70:	mov	r0, r7
   13d74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d78:	ldr	r0, [r0, #4]
   13d7c:	cmp	r0, #23
   13d80:	bne	13d70 <table_set@@Base+0x300>
   13d84:	str	r8, [r5]
   13d88:	b	13d58 <table_set@@Base+0x2e8>

00013d8c <table_set_bool@@Base>:
   13d8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d90:	add	fp, sp, #24
   13d94:	mov	r8, r3
   13d98:	mov	r4, r2
   13d9c:	mov	r9, r1
   13da0:	mov	r6, r0
   13da4:	bl	14964 <table_get_cell_ptr@@Base>
   13da8:	mov	r5, r0
   13dac:	mov	r0, r6
   13db0:	mov	r1, r4
   13db4:	bl	12b5c <table_get_col_ptr@@Base>
   13db8:	ldr	r0, [r0, #4]
   13dbc:	mvn	r7, #0
   13dc0:	cmp	r0, #22
   13dc4:	bne	13e04 <table_set_bool@@Base+0x78>
   13dc8:	ldr	r0, [r5]
   13dcc:	cmp	r0, #0
   13dd0:	bne	13de8 <table_set_bool@@Base+0x5c>
   13dd4:	mov	r0, #1
   13dd8:	bl	11f48 <malloc@plt>
   13ddc:	cmp	r0, #0
   13de0:	str	r0, [r5]
   13de4:	beq	13e04 <table_set_bool@@Base+0x78>
   13de8:	strb	r8, [r0]
   13dec:	mov	r0, r6
   13df0:	mov	r1, r9
   13df4:	mov	r2, r4
   13df8:	mov	r3, #1
   13dfc:	bl	12a90 <table_notify@@Base>
   13e00:	mov	r7, #0
   13e04:	mov	r0, r7
   13e08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013e0c <table_set_int@@Base>:
   13e0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e10:	add	fp, sp, #24
   13e14:	mov	r8, r3
   13e18:	mov	r4, r2
   13e1c:	mov	r5, r1
   13e20:	mov	r6, r0
   13e24:	bl	14964 <table_get_cell_ptr@@Base>
   13e28:	mov	r9, r0
   13e2c:	mov	r0, r6
   13e30:	mov	r1, r4
   13e34:	bl	12b5c <table_get_col_ptr@@Base>
   13e38:	ldr	r0, [r0, #4]
   13e3c:	mvn	r7, #0
   13e40:	cmp	r0, #0
   13e44:	bne	13e84 <table_set_int@@Base+0x78>
   13e48:	ldr	r0, [r9]
   13e4c:	cmp	r0, #0
   13e50:	bne	13e68 <table_set_int@@Base+0x5c>
   13e54:	mov	r0, #4
   13e58:	bl	11f48 <malloc@plt>
   13e5c:	cmp	r0, #0
   13e60:	str	r0, [r9]
   13e64:	beq	13e84 <table_set_int@@Base+0x78>
   13e68:	str	r8, [r0]
   13e6c:	mov	r0, r6
   13e70:	mov	r1, r5
   13e74:	mov	r2, r4
   13e78:	mov	r3, #1
   13e7c:	bl	12a90 <table_notify@@Base>
   13e80:	mov	r7, #0
   13e84:	mov	r0, r7
   13e88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013e8c <table_set_uint@@Base>:
   13e8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e90:	add	fp, sp, #24
   13e94:	mov	r8, r3
   13e98:	mov	r4, r2
   13e9c:	mov	r5, r1
   13ea0:	mov	r6, r0
   13ea4:	bl	14964 <table_get_cell_ptr@@Base>
   13ea8:	mov	r9, r0
   13eac:	mov	r0, r6
   13eb0:	mov	r1, r4
   13eb4:	bl	12b5c <table_get_col_ptr@@Base>
   13eb8:	ldr	r0, [r0, #4]
   13ebc:	mvn	r7, #0
   13ec0:	cmp	r0, #1
   13ec4:	bne	13f04 <table_set_uint@@Base+0x78>
   13ec8:	ldr	r0, [r9]
   13ecc:	cmp	r0, #0
   13ed0:	bne	13ee8 <table_set_uint@@Base+0x5c>
   13ed4:	mov	r0, #4
   13ed8:	bl	11f48 <malloc@plt>
   13edc:	cmp	r0, #0
   13ee0:	str	r0, [r9]
   13ee4:	beq	13f04 <table_set_uint@@Base+0x78>
   13ee8:	str	r8, [r0]
   13eec:	mov	r0, r6
   13ef0:	mov	r1, r5
   13ef4:	mov	r2, r4
   13ef8:	mov	r3, #1
   13efc:	bl	12a90 <table_notify@@Base>
   13f00:	mov	r7, #0
   13f04:	mov	r0, r7
   13f08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f0c <table_set_int8@@Base>:
   13f0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f10:	add	fp, sp, #24
   13f14:	mov	r8, r3
   13f18:	mov	r4, r2
   13f1c:	mov	r9, r1
   13f20:	mov	r6, r0
   13f24:	bl	14964 <table_get_cell_ptr@@Base>
   13f28:	mov	r5, r0
   13f2c:	mov	r0, r6
   13f30:	mov	r1, r4
   13f34:	bl	12b5c <table_get_col_ptr@@Base>
   13f38:	ldr	r0, [r0, #4]
   13f3c:	mvn	r7, #0
   13f40:	cmp	r0, #2
   13f44:	bne	13f84 <table_set_int8@@Base+0x78>
   13f48:	ldr	r0, [r5]
   13f4c:	cmp	r0, #0
   13f50:	bne	13f68 <table_set_int8@@Base+0x5c>
   13f54:	mov	r0, #1
   13f58:	bl	11f48 <malloc@plt>
   13f5c:	cmp	r0, #0
   13f60:	str	r0, [r5]
   13f64:	beq	13f84 <table_set_int8@@Base+0x78>
   13f68:	strb	r8, [r0]
   13f6c:	mov	r0, r6
   13f70:	mov	r1, r9
   13f74:	mov	r2, r4
   13f78:	mov	r3, #1
   13f7c:	bl	12a90 <table_notify@@Base>
   13f80:	mov	r7, #0
   13f84:	mov	r0, r7
   13f88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f8c <table_set_uint8@@Base>:
   13f8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f90:	add	fp, sp, #24
   13f94:	mov	r8, r3
   13f98:	mov	r4, r2
   13f9c:	mov	r9, r1
   13fa0:	mov	r6, r0
   13fa4:	bl	14964 <table_get_cell_ptr@@Base>
   13fa8:	mov	r5, r0
   13fac:	mov	r0, r6
   13fb0:	mov	r1, r4
   13fb4:	bl	12b5c <table_get_col_ptr@@Base>
   13fb8:	ldr	r0, [r0, #4]
   13fbc:	mvn	r7, #0
   13fc0:	cmp	r0, #3
   13fc4:	bne	14004 <table_set_uint8@@Base+0x78>
   13fc8:	ldr	r0, [r5]
   13fcc:	cmp	r0, #0
   13fd0:	bne	13fe8 <table_set_uint8@@Base+0x5c>
   13fd4:	mov	r0, #1
   13fd8:	bl	11f48 <malloc@plt>
   13fdc:	cmp	r0, #0
   13fe0:	str	r0, [r5]
   13fe4:	beq	14004 <table_set_uint8@@Base+0x78>
   13fe8:	strb	r8, [r0]
   13fec:	mov	r0, r6
   13ff0:	mov	r1, r9
   13ff4:	mov	r2, r4
   13ff8:	mov	r3, #1
   13ffc:	bl	12a90 <table_notify@@Base>
   14000:	mov	r7, #0
   14004:	mov	r0, r7
   14008:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001400c <table_set_int16@@Base>:
   1400c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14010:	add	fp, sp, #24
   14014:	mov	r8, r3
   14018:	mov	r4, r2
   1401c:	mov	r9, r1
   14020:	mov	r6, r0
   14024:	bl	14964 <table_get_cell_ptr@@Base>
   14028:	mov	r5, r0
   1402c:	mov	r0, r6
   14030:	mov	r1, r4
   14034:	bl	12b5c <table_get_col_ptr@@Base>
   14038:	ldr	r0, [r0, #4]
   1403c:	mvn	r7, #0
   14040:	cmp	r0, #4
   14044:	bne	14084 <table_set_int16@@Base+0x78>
   14048:	ldr	r0, [r5]
   1404c:	cmp	r0, #0
   14050:	bne	14068 <table_set_int16@@Base+0x5c>
   14054:	mov	r0, #2
   14058:	bl	11f48 <malloc@plt>
   1405c:	cmp	r0, #0
   14060:	str	r0, [r5]
   14064:	beq	14084 <table_set_int16@@Base+0x78>
   14068:	strh	r8, [r0]
   1406c:	mov	r0, r6
   14070:	mov	r1, r9
   14074:	mov	r2, r4
   14078:	mov	r3, #1
   1407c:	bl	12a90 <table_notify@@Base>
   14080:	mov	r7, #0
   14084:	mov	r0, r7
   14088:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001408c <table_set_uint16@@Base>:
   1408c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14090:	add	fp, sp, #24
   14094:	mov	r8, r3
   14098:	mov	r4, r2
   1409c:	mov	r9, r1
   140a0:	mov	r6, r0
   140a4:	bl	14964 <table_get_cell_ptr@@Base>
   140a8:	mov	r5, r0
   140ac:	mov	r0, r6
   140b0:	mov	r1, r4
   140b4:	bl	12b5c <table_get_col_ptr@@Base>
   140b8:	ldr	r0, [r0, #4]
   140bc:	mvn	r7, #0
   140c0:	cmp	r0, #5
   140c4:	bne	14104 <table_set_uint16@@Base+0x78>
   140c8:	ldr	r0, [r5]
   140cc:	cmp	r0, #0
   140d0:	bne	140e8 <table_set_uint16@@Base+0x5c>
   140d4:	mov	r0, #2
   140d8:	bl	11f48 <malloc@plt>
   140dc:	cmp	r0, #0
   140e0:	str	r0, [r5]
   140e4:	beq	14104 <table_set_uint16@@Base+0x78>
   140e8:	strh	r8, [r0]
   140ec:	mov	r0, r6
   140f0:	mov	r1, r9
   140f4:	mov	r2, r4
   140f8:	mov	r3, #1
   140fc:	bl	12a90 <table_notify@@Base>
   14100:	mov	r7, #0
   14104:	mov	r0, r7
   14108:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001410c <table_set_int32@@Base>:
   1410c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14110:	add	fp, sp, #24
   14114:	mov	r8, r3
   14118:	mov	r4, r2
   1411c:	mov	r5, r1
   14120:	mov	r6, r0
   14124:	bl	14964 <table_get_cell_ptr@@Base>
   14128:	mov	r9, r0
   1412c:	mov	r0, r6
   14130:	mov	r1, r4
   14134:	bl	12b5c <table_get_col_ptr@@Base>
   14138:	ldr	r0, [r0, #4]
   1413c:	mvn	r7, #0
   14140:	cmp	r0, #6
   14144:	bne	14184 <table_set_int32@@Base+0x78>
   14148:	ldr	r0, [r9]
   1414c:	cmp	r0, #0
   14150:	bne	14168 <table_set_int32@@Base+0x5c>
   14154:	mov	r0, #4
   14158:	bl	11f48 <malloc@plt>
   1415c:	cmp	r0, #0
   14160:	str	r0, [r9]
   14164:	beq	14184 <table_set_int32@@Base+0x78>
   14168:	str	r8, [r0]
   1416c:	mov	r0, r6
   14170:	mov	r1, r5
   14174:	mov	r2, r4
   14178:	mov	r3, #1
   1417c:	bl	12a90 <table_notify@@Base>
   14180:	mov	r7, #0
   14184:	mov	r0, r7
   14188:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001418c <table_set_uint32@@Base>:
   1418c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14190:	add	fp, sp, #24
   14194:	mov	r8, r3
   14198:	mov	r4, r2
   1419c:	mov	r5, r1
   141a0:	mov	r6, r0
   141a4:	bl	14964 <table_get_cell_ptr@@Base>
   141a8:	mov	r9, r0
   141ac:	mov	r0, r6
   141b0:	mov	r1, r4
   141b4:	bl	12b5c <table_get_col_ptr@@Base>
   141b8:	ldr	r0, [r0, #4]
   141bc:	mvn	r7, #0
   141c0:	cmp	r0, #7
   141c4:	bne	14204 <table_set_uint32@@Base+0x78>
   141c8:	ldr	r0, [r9]
   141cc:	cmp	r0, #0
   141d0:	bne	141e8 <table_set_uint32@@Base+0x5c>
   141d4:	mov	r0, #4
   141d8:	bl	11f48 <malloc@plt>
   141dc:	cmp	r0, #0
   141e0:	str	r0, [r9]
   141e4:	beq	14204 <table_set_uint32@@Base+0x78>
   141e8:	str	r8, [r0]
   141ec:	mov	r0, r6
   141f0:	mov	r1, r5
   141f4:	mov	r2, r4
   141f8:	mov	r3, #1
   141fc:	bl	12a90 <table_notify@@Base>
   14200:	mov	r7, #0
   14204:	mov	r0, r7
   14208:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001420c <table_set_int64@@Base>:
   1420c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14210:	add	fp, sp, #24
   14214:	mov	r4, r2
   14218:	mov	r8, r1
   1421c:	mov	r6, r0
   14220:	bl	14964 <table_get_cell_ptr@@Base>
   14224:	mov	r5, r0
   14228:	mov	r0, r6
   1422c:	mov	r1, r4
   14230:	bl	12b5c <table_get_col_ptr@@Base>
   14234:	ldr	r0, [r0, #4]
   14238:	mvn	r7, #0
   1423c:	cmp	r0, #8
   14240:	bne	1428c <table_set_int64@@Base+0x80>
   14244:	ldr	r0, [r5]
   14248:	cmp	r0, #0
   1424c:	bne	14264 <table_set_int64@@Base+0x58>
   14250:	mov	r0, #8
   14254:	bl	11f48 <malloc@plt>
   14258:	cmp	r0, #0
   1425c:	str	r0, [r5]
   14260:	beq	1428c <table_set_int64@@Base+0x80>
   14264:	ldr	r1, [fp, #12]
   14268:	ldr	r2, [fp, #8]
   1426c:	mov	r3, #1
   14270:	str	r2, [r0]
   14274:	str	r1, [r0, #4]
   14278:	mov	r0, r6
   1427c:	mov	r1, r8
   14280:	mov	r2, r4
   14284:	bl	12a90 <table_notify@@Base>
   14288:	mov	r7, #0
   1428c:	mov	r0, r7
   14290:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014294 <table_set_uint64@@Base>:
   14294:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14298:	add	fp, sp, #24
   1429c:	mov	r4, r2
   142a0:	mov	r8, r1
   142a4:	mov	r6, r0
   142a8:	bl	14964 <table_get_cell_ptr@@Base>
   142ac:	mov	r5, r0
   142b0:	mov	r0, r6
   142b4:	mov	r1, r4
   142b8:	bl	12b5c <table_get_col_ptr@@Base>
   142bc:	ldr	r0, [r0, #4]
   142c0:	mvn	r7, #0
   142c4:	cmp	r0, #9
   142c8:	bne	14314 <table_set_uint64@@Base+0x80>
   142cc:	ldr	r0, [r5]
   142d0:	cmp	r0, #0
   142d4:	bne	142ec <table_set_uint64@@Base+0x58>
   142d8:	mov	r0, #8
   142dc:	bl	11f48 <malloc@plt>
   142e0:	cmp	r0, #0
   142e4:	str	r0, [r5]
   142e8:	beq	14314 <table_set_uint64@@Base+0x80>
   142ec:	ldr	r1, [fp, #12]
   142f0:	ldr	r2, [fp, #8]
   142f4:	mov	r3, #1
   142f8:	str	r2, [r0]
   142fc:	str	r1, [r0, #4]
   14300:	mov	r0, r6
   14304:	mov	r1, r8
   14308:	mov	r2, r4
   1430c:	bl	12a90 <table_notify@@Base>
   14310:	mov	r7, #0
   14314:	mov	r0, r7
   14318:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001431c <table_set_short@@Base>:
   1431c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14320:	add	fp, sp, #24
   14324:	mov	r8, r3
   14328:	mov	r4, r2
   1432c:	mov	r9, r1
   14330:	mov	r6, r0
   14334:	bl	14964 <table_get_cell_ptr@@Base>
   14338:	mov	r5, r0
   1433c:	mov	r0, r6
   14340:	mov	r1, r4
   14344:	bl	12b5c <table_get_col_ptr@@Base>
   14348:	ldr	r0, [r0, #4]
   1434c:	mvn	r7, #0
   14350:	cmp	r0, #10
   14354:	bne	14394 <table_set_short@@Base+0x78>
   14358:	ldr	r0, [r5]
   1435c:	cmp	r0, #0
   14360:	bne	14378 <table_set_short@@Base+0x5c>
   14364:	mov	r0, #2
   14368:	bl	11f48 <malloc@plt>
   1436c:	cmp	r0, #0
   14370:	str	r0, [r5]
   14374:	beq	14394 <table_set_short@@Base+0x78>
   14378:	strh	r8, [r0]
   1437c:	mov	r0, r6
   14380:	mov	r1, r9
   14384:	mov	r2, r4
   14388:	mov	r3, #1
   1438c:	bl	12a90 <table_notify@@Base>
   14390:	mov	r7, #0
   14394:	mov	r0, r7
   14398:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001439c <table_set_ushort@@Base>:
   1439c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143a0:	add	fp, sp, #24
   143a4:	mov	r8, r3
   143a8:	mov	r4, r2
   143ac:	mov	r9, r1
   143b0:	mov	r6, r0
   143b4:	bl	14964 <table_get_cell_ptr@@Base>
   143b8:	mov	r5, r0
   143bc:	mov	r0, r6
   143c0:	mov	r1, r4
   143c4:	bl	12b5c <table_get_col_ptr@@Base>
   143c8:	ldr	r0, [r0, #4]
   143cc:	mvn	r7, #0
   143d0:	cmp	r0, #11
   143d4:	bne	14414 <table_set_ushort@@Base+0x78>
   143d8:	ldr	r0, [r5]
   143dc:	cmp	r0, #0
   143e0:	bne	143f8 <table_set_ushort@@Base+0x5c>
   143e4:	mov	r0, #2
   143e8:	bl	11f48 <malloc@plt>
   143ec:	cmp	r0, #0
   143f0:	str	r0, [r5]
   143f4:	beq	14414 <table_set_ushort@@Base+0x78>
   143f8:	strh	r8, [r0]
   143fc:	mov	r0, r6
   14400:	mov	r1, r9
   14404:	mov	r2, r4
   14408:	mov	r3, #1
   1440c:	bl	12a90 <table_notify@@Base>
   14410:	mov	r7, #0
   14414:	mov	r0, r7
   14418:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001441c <table_set_long@@Base>:
   1441c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14420:	add	fp, sp, #24
   14424:	mov	r8, r3
   14428:	mov	r4, r2
   1442c:	mov	r5, r1
   14430:	mov	r6, r0
   14434:	bl	14964 <table_get_cell_ptr@@Base>
   14438:	mov	r9, r0
   1443c:	mov	r0, r6
   14440:	mov	r1, r4
   14444:	bl	12b5c <table_get_col_ptr@@Base>
   14448:	ldr	r0, [r0, #4]
   1444c:	mvn	r7, #0
   14450:	cmp	r0, #12
   14454:	bne	14494 <table_set_long@@Base+0x78>
   14458:	ldr	r0, [r9]
   1445c:	cmp	r0, #0
   14460:	bne	14478 <table_set_long@@Base+0x5c>
   14464:	mov	r0, #4
   14468:	bl	11f48 <malloc@plt>
   1446c:	cmp	r0, #0
   14470:	str	r0, [r9]
   14474:	beq	14494 <table_set_long@@Base+0x78>
   14478:	str	r8, [r0]
   1447c:	mov	r0, r6
   14480:	mov	r1, r5
   14484:	mov	r2, r4
   14488:	mov	r3, #1
   1448c:	bl	12a90 <table_notify@@Base>
   14490:	mov	r7, #0
   14494:	mov	r0, r7
   14498:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001449c <table_set_ulong@@Base>:
   1449c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144a0:	add	fp, sp, #24
   144a4:	mov	r8, r3
   144a8:	mov	r4, r2
   144ac:	mov	r5, r1
   144b0:	mov	r6, r0
   144b4:	bl	14964 <table_get_cell_ptr@@Base>
   144b8:	mov	r9, r0
   144bc:	mov	r0, r6
   144c0:	mov	r1, r4
   144c4:	bl	12b5c <table_get_col_ptr@@Base>
   144c8:	ldr	r0, [r0, #4]
   144cc:	mvn	r7, #0
   144d0:	cmp	r0, #13
   144d4:	bne	14514 <table_set_ulong@@Base+0x78>
   144d8:	ldr	r0, [r9]
   144dc:	cmp	r0, #0
   144e0:	bne	144f8 <table_set_ulong@@Base+0x5c>
   144e4:	mov	r0, #4
   144e8:	bl	11f48 <malloc@plt>
   144ec:	cmp	r0, #0
   144f0:	str	r0, [r9]
   144f4:	beq	14514 <table_set_ulong@@Base+0x78>
   144f8:	str	r8, [r0]
   144fc:	mov	r0, r6
   14500:	mov	r1, r5
   14504:	mov	r2, r4
   14508:	mov	r3, #1
   1450c:	bl	12a90 <table_notify@@Base>
   14510:	mov	r7, #0
   14514:	mov	r0, r7
   14518:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001451c <table_set_llong@@Base>:
   1451c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14520:	add	fp, sp, #24
   14524:	mov	r4, r2
   14528:	mov	r8, r1
   1452c:	mov	r6, r0
   14530:	bl	14964 <table_get_cell_ptr@@Base>
   14534:	mov	r5, r0
   14538:	mov	r0, r6
   1453c:	mov	r1, r4
   14540:	bl	12b5c <table_get_col_ptr@@Base>
   14544:	ldr	r0, [r0, #4]
   14548:	mvn	r7, #0
   1454c:	cmp	r0, #14
   14550:	bne	1459c <table_set_llong@@Base+0x80>
   14554:	ldr	r0, [r5]
   14558:	cmp	r0, #0
   1455c:	bne	14574 <table_set_llong@@Base+0x58>
   14560:	mov	r0, #8
   14564:	bl	11f48 <malloc@plt>
   14568:	cmp	r0, #0
   1456c:	str	r0, [r5]
   14570:	beq	1459c <table_set_llong@@Base+0x80>
   14574:	ldr	r1, [fp, #12]
   14578:	ldr	r2, [fp, #8]
   1457c:	mov	r3, #1
   14580:	str	r2, [r0]
   14584:	str	r1, [r0, #4]
   14588:	mov	r0, r6
   1458c:	mov	r1, r8
   14590:	mov	r2, r4
   14594:	bl	12a90 <table_notify@@Base>
   14598:	mov	r7, #0
   1459c:	mov	r0, r7
   145a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000145a4 <table_set_ullong@@Base>:
   145a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   145a8:	add	fp, sp, #24
   145ac:	mov	r4, r2
   145b0:	mov	r8, r1
   145b4:	mov	r6, r0
   145b8:	bl	14964 <table_get_cell_ptr@@Base>
   145bc:	mov	r5, r0
   145c0:	mov	r0, r6
   145c4:	mov	r1, r4
   145c8:	bl	12b5c <table_get_col_ptr@@Base>
   145cc:	ldr	r0, [r0, #4]
   145d0:	mvn	r7, #0
   145d4:	cmp	r0, #15
   145d8:	bne	14624 <table_set_ullong@@Base+0x80>
   145dc:	ldr	r0, [r5]
   145e0:	cmp	r0, #0
   145e4:	bne	145fc <table_set_ullong@@Base+0x58>
   145e8:	mov	r0, #8
   145ec:	bl	11f48 <malloc@plt>
   145f0:	cmp	r0, #0
   145f4:	str	r0, [r5]
   145f8:	beq	14624 <table_set_ullong@@Base+0x80>
   145fc:	ldr	r1, [fp, #12]
   14600:	ldr	r2, [fp, #8]
   14604:	mov	r3, #1
   14608:	str	r2, [r0]
   1460c:	str	r1, [r0, #4]
   14610:	mov	r0, r6
   14614:	mov	r1, r8
   14618:	mov	r2, r4
   1461c:	bl	12a90 <table_notify@@Base>
   14620:	mov	r7, #0
   14624:	mov	r0, r7
   14628:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001462c <table_set_float@@Base>:
   1462c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14630:	add	fp, sp, #24
   14634:	vpush	{d8}
   14638:	vmov.f32	s16, s0
   1463c:	mov	r4, r2
   14640:	mov	r8, r1
   14644:	mov	r6, r0
   14648:	bl	14964 <table_get_cell_ptr@@Base>
   1464c:	mov	r5, r0
   14650:	mov	r0, r6
   14654:	mov	r1, r4
   14658:	bl	12b5c <table_get_col_ptr@@Base>
   1465c:	ldr	r0, [r0, #4]
   14660:	mvn	r7, #0
   14664:	cmp	r0, #16
   14668:	bne	146ac <table_set_float@@Base+0x80>
   1466c:	ldr	r0, [r5]
   14670:	cmp	r0, #0
   14674:	bne	1468c <table_set_float@@Base+0x60>
   14678:	mov	r0, #4
   1467c:	bl	11f48 <malloc@plt>
   14680:	cmp	r0, #0
   14684:	str	r0, [r5]
   14688:	beq	146ac <table_set_float@@Base+0x80>
   1468c:	vmov	r1, s16
   14690:	mov	r2, r4
   14694:	mov	r3, #1
   14698:	str	r1, [r0]
   1469c:	mov	r0, r6
   146a0:	mov	r1, r8
   146a4:	bl	12a90 <table_notify@@Base>
   146a8:	mov	r7, #0
   146ac:	mov	r0, r7
   146b0:	vpop	{d8}
   146b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000146b8 <table_set_double@@Base>:
   146b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   146bc:	add	fp, sp, #24
   146c0:	vpush	{d8}
   146c4:	vorr	d8, d0, d0
   146c8:	mov	r4, r2
   146cc:	mov	r5, r1
   146d0:	mov	r6, r0
   146d4:	bl	14964 <table_get_cell_ptr@@Base>
   146d8:	mov	r8, r0
   146dc:	mov	r0, r6
   146e0:	mov	r1, r4
   146e4:	bl	12b5c <table_get_col_ptr@@Base>
   146e8:	ldr	r0, [r0, #4]
   146ec:	mvn	r7, #0
   146f0:	cmp	r0, #17
   146f4:	bne	14734 <table_set_double@@Base+0x7c>
   146f8:	ldr	r0, [r8]
   146fc:	cmp	r0, #0
   14700:	bne	14718 <table_set_double@@Base+0x60>
   14704:	mov	r0, #8
   14708:	bl	11f48 <malloc@plt>
   1470c:	cmp	r0, #0
   14710:	str	r0, [r8]
   14714:	beq	14734 <table_set_double@@Base+0x7c>
   14718:	vst1.8	{d8}, [r0]
   1471c:	mov	r0, r6
   14720:	mov	r1, r5
   14724:	mov	r2, r4
   14728:	mov	r3, #1
   1472c:	bl	12a90 <table_notify@@Base>
   14730:	mov	r7, #0
   14734:	mov	r0, r7
   14738:	vpop	{d8}
   1473c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014740 <table_set_ldouble@@Base>:
   14740:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14744:	add	fp, sp, #24
   14748:	vpush	{d8}
   1474c:	vorr	d8, d0, d0
   14750:	mov	r4, r2
   14754:	mov	r5, r1
   14758:	mov	r6, r0
   1475c:	bl	14964 <table_get_cell_ptr@@Base>
   14760:	mov	r8, r0
   14764:	mov	r0, r6
   14768:	mov	r1, r4
   1476c:	bl	12b5c <table_get_col_ptr@@Base>
   14770:	ldr	r0, [r0, #4]
   14774:	mvn	r7, #0
   14778:	cmp	r0, #18
   1477c:	bne	147bc <table_set_ldouble@@Base+0x7c>
   14780:	ldr	r0, [r8]
   14784:	cmp	r0, #0
   14788:	bne	147a0 <table_set_ldouble@@Base+0x60>
   1478c:	mov	r0, #8
   14790:	bl	11f48 <malloc@plt>
   14794:	cmp	r0, #0
   14798:	str	r0, [r8]
   1479c:	beq	147bc <table_set_ldouble@@Base+0x7c>
   147a0:	vst1.8	{d8}, [r0]
   147a4:	mov	r0, r6
   147a8:	mov	r1, r5
   147ac:	mov	r2, r4
   147b0:	mov	r3, #1
   147b4:	bl	12a90 <table_notify@@Base>
   147b8:	mov	r7, #0
   147bc:	mov	r0, r7
   147c0:	vpop	{d8}
   147c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147c8 <table_set_string@@Base>:
   147c8:	push	{fp, lr}
   147cc:	mov	fp, sp
   147d0:	sub	sp, sp, #8
   147d4:	mov	ip, #21
   147d8:	str	ip, [sp]
   147dc:	bl	13a70 <table_set@@Base>
   147e0:	mov	sp, fp
   147e4:	pop	{fp, pc}

000147e8 <table_set_char@@Base>:
   147e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   147ec:	add	fp, sp, #24
   147f0:	mov	r8, r3
   147f4:	mov	r4, r2
   147f8:	mov	r9, r1
   147fc:	mov	r6, r0
   14800:	bl	14964 <table_get_cell_ptr@@Base>
   14804:	mov	r5, r0
   14808:	mov	r0, r6
   1480c:	mov	r1, r4
   14810:	bl	12b5c <table_get_col_ptr@@Base>
   14814:	ldr	r0, [r0, #4]
   14818:	mvn	r7, #0
   1481c:	cmp	r0, #19
   14820:	bne	14860 <table_set_char@@Base+0x78>
   14824:	ldr	r0, [r5]
   14828:	cmp	r0, #0
   1482c:	bne	14844 <table_set_char@@Base+0x5c>
   14830:	mov	r0, #1
   14834:	bl	11f48 <malloc@plt>
   14838:	cmp	r0, #0
   1483c:	str	r0, [r5]
   14840:	beq	14860 <table_set_char@@Base+0x78>
   14844:	strb	r8, [r0]
   14848:	mov	r0, r6
   1484c:	mov	r1, r9
   14850:	mov	r2, r4
   14854:	mov	r3, #1
   14858:	bl	12a90 <table_notify@@Base>
   1485c:	mov	r7, #0
   14860:	mov	r0, r7
   14864:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014868 <table_set_uchar@@Base>:
   14868:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1486c:	add	fp, sp, #24
   14870:	mov	r8, r3
   14874:	mov	r4, r2
   14878:	mov	r9, r1
   1487c:	mov	r6, r0
   14880:	bl	14964 <table_get_cell_ptr@@Base>
   14884:	mov	r5, r0
   14888:	mov	r0, r6
   1488c:	mov	r1, r4
   14890:	bl	12b5c <table_get_col_ptr@@Base>
   14894:	ldr	r0, [r0, #4]
   14898:	mvn	r7, #0
   1489c:	cmp	r0, #20
   148a0:	bne	148e0 <table_set_uchar@@Base+0x78>
   148a4:	ldr	r0, [r5]
   148a8:	cmp	r0, #0
   148ac:	bne	148c4 <table_set_uchar@@Base+0x5c>
   148b0:	mov	r0, #1
   148b4:	bl	11f48 <malloc@plt>
   148b8:	cmp	r0, #0
   148bc:	str	r0, [r5]
   148c0:	beq	148e0 <table_set_uchar@@Base+0x78>
   148c4:	strb	r8, [r0]
   148c8:	mov	r0, r6
   148cc:	mov	r1, r9
   148d0:	mov	r2, r4
   148d4:	mov	r3, #1
   148d8:	bl	12a90 <table_notify@@Base>
   148dc:	mov	r7, #0
   148e0:	mov	r0, r7
   148e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000148e8 <table_set_ptr@@Base>:
   148e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148ec:	add	fp, sp, #24
   148f0:	mov	r8, r3
   148f4:	mov	r4, r2
   148f8:	mov	r5, r1
   148fc:	mov	r6, r0
   14900:	bl	14964 <table_get_cell_ptr@@Base>
   14904:	mov	r7, r0
   14908:	mov	r0, r6
   1490c:	mov	r1, r4
   14910:	bl	12b5c <table_get_col_ptr@@Base>
   14914:	ldr	r1, [r0, #4]
   14918:	mvn	r0, #0
   1491c:	cmp	r1, #23
   14920:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14924:	mov	r0, r6
   14928:	mov	r1, r5
   1492c:	mov	r2, r4
   14930:	mov	r3, #1
   14934:	str	r8, [r7]
   14938:	bl	12a90 <table_notify@@Base>
   1493c:	mov	r0, #0
   14940:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014944 <table_cell_init@@Base>:
   14944:	push	{r4, sl, fp, lr}
   14948:	add	fp, sp, #8
   1494c:	mov	r4, r2
   14950:	bl	13844 <table_get_row_ptr@@Base>
   14954:	ldr	r0, [r0]
   14958:	mov	r1, #0
   1495c:	str	r1, [r0, r4, lsl #2]
   14960:	pop	{r4, sl, fp, pc}

00014964 <table_get_cell_ptr@@Base>:
   14964:	push	{r4, sl, fp, lr}
   14968:	add	fp, sp, #8
   1496c:	mov	r4, r2
   14970:	bl	13844 <table_get_row_ptr@@Base>
   14974:	ldr	r0, [r0]
   14978:	add	r0, r0, r4, lsl #2
   1497c:	pop	{r4, sl, fp, pc}

00014980 <table_cell_destroy@@Base>:
   14980:	push	{r4, r5, r6, sl, fp, lr}
   14984:	add	fp, sp, #16
   14988:	mov	r5, r1
   1498c:	mov	r1, r2
   14990:	mov	r4, r2
   14994:	mov	r6, r0
   14998:	bl	12bf8 <table_get_column_data_type@@Base>
   1499c:	cmp	r0, #23
   149a0:	popeq	{r4, r5, r6, sl, fp, pc}
   149a4:	mov	r0, r6
   149a8:	mov	r1, r5
   149ac:	bl	13844 <table_get_row_ptr@@Base>
   149b0:	ldr	r0, [r0]
   149b4:	ldr	r0, [r0, r4, lsl #2]
   149b8:	cmp	r0, #0
   149bc:	beq	149c8 <table_cell_destroy@@Base+0x48>
   149c0:	pop	{r4, r5, r6, sl, fp, lr}
   149c4:	b	11f18 <free@plt>
   149c8:	pop	{r4, r5, r6, sl, fp, pc}

000149cc <table_cell_to_buffer@@Base>:
   149cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149d0:	add	fp, sp, #24
   149d4:	sub	sp, sp, #8
   149d8:	mov	r7, r1
   149dc:	mov	r1, r2
   149e0:	mov	r5, r3
   149e4:	mov	r6, r2
   149e8:	mov	r4, r0
   149ec:	bl	12bf8 <table_get_column_data_type@@Base>
   149f0:	cmp	r0, #23
   149f4:	bhi	14ce8 <table_cell_to_buffer@@Base+0x31c>
   149f8:	add	r1, pc, #8
   149fc:	ldr	r8, [fp, #8]
   14a00:	ldr	r0, [r1, r0, lsl #2]
   14a04:	add	pc, r1, r0
   14a08:	andeq	r0, r0, r0, rrx
   14a0c:	andeq	r0, r0, r4, ror r0
   14a10:	andeq	r0, r0, r8, lsl #1
   14a14:	muleq	r0, ip, r0
   14a18:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14a1c:	andeq	r0, r0, r4, asr #1
   14a20:	ldrdeq	r0, [r0], -r8
   14a24:	andeq	r0, r0, ip, ror #1
   14a28:	andeq	r0, r0, ip, lsl #2
   14a2c:	andeq	r0, r0, r0, lsr #2
   14a30:	andeq	r0, r0, r4, lsr r1
   14a34:	andeq	r0, r0, r4, asr r1
   14a38:	andeq	r0, r0, r4, ror r1
   14a3c:	muleq	r0, r4, r1
   14a40:			; <UNDEFINED> instruction: 0x000001b4
   14a44:	ldrdeq	r0, [r0], -r4
   14a48:	strdeq	r0, [r0], -r4
   14a4c:	andeq	r0, r0, r8, lsl r2
   14a50:	andeq	r0, r0, r8, lsr r2
   14a54:	andeq	r0, r0, r4, ror #4
   14a58:	andeq	r0, r0, r8, ror r2
   14a5c:	muleq	r0, r8, r2
   14a60:			; <UNDEFINED> instruction: 0x000002b8
   14a64:	andeq	r0, r0, ip, ror #5
   14a68:	mov	r0, r4
   14a6c:	mov	r1, r7
   14a70:	mov	r2, r6
   14a74:	bl	13600 <table_get_int@@Base>
   14a78:	b	14cd0 <table_cell_to_buffer@@Base+0x304>
   14a7c:	mov	r0, r4
   14a80:	mov	r1, r7
   14a84:	mov	r2, r6
   14a88:	bl	13618 <table_get_uint@@Base>
   14a8c:	b	14b04 <table_cell_to_buffer@@Base+0x138>
   14a90:	mov	r0, r4
   14a94:	mov	r1, r7
   14a98:	mov	r2, r6
   14a9c:	bl	13630 <table_get_int8@@Base>
   14aa0:	b	14cd0 <table_cell_to_buffer@@Base+0x304>
   14aa4:	mov	r0, r4
   14aa8:	mov	r1, r7
   14aac:	mov	r2, r6
   14ab0:	bl	13648 <table_get_uint8@@Base>
   14ab4:	b	14b04 <table_cell_to_buffer@@Base+0x138>
   14ab8:	mov	r0, r4
   14abc:	mov	r1, r7
   14ac0:	mov	r2, r6
   14ac4:	bl	13660 <table_get_int16@@Base>
   14ac8:	b	14cd0 <table_cell_to_buffer@@Base+0x304>
   14acc:	mov	r0, r4
   14ad0:	mov	r1, r7
   14ad4:	mov	r2, r6
   14ad8:	bl	13678 <table_get_uint16@@Base>
   14adc:	b	14b04 <table_cell_to_buffer@@Base+0x138>
   14ae0:	mov	r0, r4
   14ae4:	mov	r1, r7
   14ae8:	mov	r2, r6
   14aec:	bl	13690 <table_get_int32@@Base>
   14af0:	b	14cd0 <table_cell_to_buffer@@Base+0x304>
   14af4:	mov	r0, r4
   14af8:	mov	r1, r7
   14afc:	mov	r2, r6
   14b00:	bl	136a8 <table_get_uint32@@Base>
   14b04:	ldr	r2, [pc, #524]	; 14d18 <table_cell_to_buffer@@Base+0x34c>
   14b08:	mov	r3, r0
   14b0c:	add	r2, pc, r2
   14b10:	b	14cdc <table_cell_to_buffer@@Base+0x310>
   14b14:	mov	r0, r4
   14b18:	mov	r1, r7
   14b1c:	mov	r2, r6
   14b20:	bl	136c0 <table_get_int64@@Base>
   14b24:	b	14bcc <table_cell_to_buffer@@Base+0x200>
   14b28:	mov	r0, r4
   14b2c:	mov	r1, r7
   14b30:	mov	r2, r6
   14b34:	bl	136d8 <table_get_uint64@@Base>
   14b38:	b	14bec <table_cell_to_buffer@@Base+0x220>
   14b3c:	mov	r0, r4
   14b40:	mov	r1, r7
   14b44:	mov	r2, r6
   14b48:	bl	136f0 <table_get_short@@Base>
   14b4c:	ldr	r2, [pc, #464]	; 14d24 <table_cell_to_buffer@@Base+0x358>
   14b50:	mov	r3, r0
   14b54:	add	r2, pc, r2
   14b58:	b	14cdc <table_cell_to_buffer@@Base+0x310>
   14b5c:	mov	r0, r4
   14b60:	mov	r1, r7
   14b64:	mov	r2, r6
   14b68:	bl	13708 <table_get_ushort@@Base>
   14b6c:	ldr	r2, [pc, #436]	; 14d28 <table_cell_to_buffer@@Base+0x35c>
   14b70:	mov	r3, r0
   14b74:	add	r2, pc, r2
   14b78:	b	14cdc <table_cell_to_buffer@@Base+0x310>
   14b7c:	mov	r0, r4
   14b80:	mov	r1, r7
   14b84:	mov	r2, r6
   14b88:	bl	13720 <table_get_long@@Base>
   14b8c:	ldr	r2, [pc, #408]	; 14d2c <table_cell_to_buffer@@Base+0x360>
   14b90:	mov	r3, r0
   14b94:	add	r2, pc, r2
   14b98:	b	14cdc <table_cell_to_buffer@@Base+0x310>
   14b9c:	mov	r0, r4
   14ba0:	mov	r1, r7
   14ba4:	mov	r2, r6
   14ba8:	bl	13738 <table_get_ulong@@Base>
   14bac:	ldr	r2, [pc, #380]	; 14d30 <table_cell_to_buffer@@Base+0x364>
   14bb0:	mov	r3, r0
   14bb4:	add	r2, pc, r2
   14bb8:	b	14cdc <table_cell_to_buffer@@Base+0x310>
   14bbc:	mov	r0, r4
   14bc0:	mov	r1, r7
   14bc4:	mov	r2, r6
   14bc8:	bl	13750 <table_get_llong@@Base>
   14bcc:	stm	sp, {r0, r1}
   14bd0:	ldr	r2, [pc, #324]	; 14d1c <table_cell_to_buffer@@Base+0x350>
   14bd4:	add	r2, pc, r2
   14bd8:	b	14c5c <table_cell_to_buffer@@Base+0x290>
   14bdc:	mov	r0, r4
   14be0:	mov	r1, r7
   14be4:	mov	r2, r6
   14be8:	bl	13768 <table_get_ullong@@Base>
   14bec:	stm	sp, {r0, r1}
   14bf0:	ldr	r2, [pc, #296]	; 14d20 <table_cell_to_buffer@@Base+0x354>
   14bf4:	add	r2, pc, r2
   14bf8:	b	14c5c <table_cell_to_buffer@@Base+0x290>
   14bfc:	mov	r0, r4
   14c00:	mov	r1, r7
   14c04:	mov	r2, r6
   14c08:	bl	13780 <table_get_float@@Base>
   14c0c:	vcvt.f64.f32	d16, s0
   14c10:	vstr	d16, [sp]
   14c14:	ldr	r2, [pc, #284]	; 14d38 <table_cell_to_buffer@@Base+0x36c>
   14c18:	add	r2, pc, r2
   14c1c:	b	14c5c <table_cell_to_buffer@@Base+0x290>
   14c20:	mov	r0, r4
   14c24:	mov	r1, r7
   14c28:	mov	r2, r6
   14c2c:	bl	13798 <table_get_double@@Base>
   14c30:	vstr	d0, [sp]
   14c34:	ldr	r2, [pc, #256]	; 14d3c <table_cell_to_buffer@@Base+0x370>
   14c38:	add	r2, pc, r2
   14c3c:	b	14c5c <table_cell_to_buffer@@Base+0x290>
   14c40:	mov	r0, r4
   14c44:	mov	r1, r7
   14c48:	mov	r2, r6
   14c4c:	bl	137b0 <table_get_ldouble@@Base>
   14c50:	vstr	d0, [sp]
   14c54:	ldr	r2, [pc, #228]	; 14d40 <table_cell_to_buffer@@Base+0x374>
   14c58:	add	r2, pc, r2
   14c5c:	mov	r0, r5
   14c60:	mov	r1, r8
   14c64:	bl	11f84 <snprintf@plt>
   14c68:	b	14ce8 <table_cell_to_buffer@@Base+0x31c>
   14c6c:	mov	r0, r4
   14c70:	mov	r1, r7
   14c74:	mov	r2, r6
   14c78:	bl	137c8 <table_get_char@@Base>
   14c7c:	b	14c90 <table_cell_to_buffer@@Base+0x2c4>
   14c80:	mov	r0, r4
   14c84:	mov	r1, r7
   14c88:	mov	r2, r6
   14c8c:	bl	137e0 <table_get_uchar@@Base>
   14c90:	ldr	r2, [pc, #172]	; 14d44 <table_cell_to_buffer@@Base+0x378>
   14c94:	mov	r3, r0
   14c98:	add	r2, pc, r2
   14c9c:	b	14cdc <table_cell_to_buffer@@Base+0x310>
   14ca0:	mov	r0, r4
   14ca4:	mov	r1, r7
   14ca8:	mov	r2, r6
   14cac:	bl	137f8 <table_get_string@@Base>
   14cb0:	ldr	r2, [pc, #124]	; 14d34 <table_cell_to_buffer@@Base+0x368>
   14cb4:	mov	r3, r0
   14cb8:	add	r2, pc, r2
   14cbc:	b	14cdc <table_cell_to_buffer@@Base+0x310>
   14cc0:	mov	r0, r4
   14cc4:	mov	r1, r7
   14cc8:	mov	r2, r6
   14ccc:	bl	135e8 <table_get_bool@@Base>
   14cd0:	ldr	r2, [pc, #60]	; 14d14 <table_cell_to_buffer@@Base+0x348>
   14cd4:	mov	r3, r0
   14cd8:	add	r2, pc, r2
   14cdc:	mov	r0, r5
   14ce0:	mov	r1, r8
   14ce4:	bl	11f84 <snprintf@plt>
   14ce8:	mov	r0, #0
   14cec:	sub	sp, fp, #24
   14cf0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14cf4:	mov	r0, r4
   14cf8:	mov	r1, r7
   14cfc:	mov	r2, r6
   14d00:	bl	1380c <table_get_ptr@@Base>
   14d04:	ldr	r2, [pc, #60]	; 14d48 <table_cell_to_buffer@@Base+0x37c>
   14d08:	mov	r3, r0
   14d0c:	add	r2, pc, r2
   14d10:	b	14cdc <table_cell_to_buffer@@Base+0x310>
   14d14:	ldrdeq	r0, [r0], -r4
   14d18:	andeq	r0, r0, r3, lsr #19
   14d1c:	ldrdeq	r0, [r0], -lr
   14d20:	andeq	r0, r0, r3, asr #17
   14d24:	andeq	r0, r0, r8, ror #18
   14d28:	andeq	r0, r0, ip, asr #18
   14d2c:	andeq	r0, r0, r0, lsr r9
   14d30:	andeq	r0, r0, r4, lsl r9
   14d34:	andeq	r0, r0, r4, lsl r8
   14d38:			; <UNDEFINED> instruction: 0x000008b7
   14d3c:	muleq	r0, sl, r8
   14d40:	andeq	r0, r0, lr, ror r8
   14d44:	andeq	r0, r0, r2, asr #16
   14d48:	ldrdeq	r0, [r0], -r1

00014d4c <table_cell_from_buffer@@Base>:
   14d4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d50:	add	fp, sp, #24
   14d54:	sub	sp, sp, #264	; 0x108
   14d58:	mov	r5, r1
   14d5c:	mov	r1, r2
   14d60:	mov	r7, r3
   14d64:	mov	r4, r2
   14d68:	mov	r6, r0
   14d6c:	bl	12bf8 <table_get_column_data_type@@Base>
   14d70:	cmp	r0, #23
   14d74:	bhi	1534c <table_cell_from_buffer@@Base+0x600>
   14d78:	add	r1, pc, #4
   14d7c:	ldr	r0, [r1, r0, lsl #2]
   14d80:	add	pc, r1, r0
   14d84:	andeq	r0, r0, r0, rrx
   14d88:	muleq	r0, r8, r0
   14d8c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14d90:	andeq	r0, r0, r8, lsl #2
   14d94:	andeq	r0, r0, r0, asr #2
   14d98:	andeq	r0, r0, r8, ror r1
   14d9c:			; <UNDEFINED> instruction: 0x000001b0
   14da0:	andeq	r0, r0, r8, ror #3
   14da4:	andeq	r0, r0, r0, lsr #4
   14da8:	andeq	r0, r0, r0, ror #4
   14dac:	andeq	r0, r0, r0, lsr #5
   14db0:	ldrdeq	r0, [r0], -r8
   14db4:	andeq	r0, r0, r0, lsl r3
   14db8:	andeq	r0, r0, r8, asr #6
   14dbc:	andeq	r0, r0, r0, lsl #7
   14dc0:	andeq	r0, r0, r0, asr #7
   14dc4:	andeq	r0, r0, r0, lsl #8
   14dc8:	andeq	r0, r0, r8, lsr r4
   14dcc:	andeq	r0, r0, r0, ror r4
   14dd0:	andeq	r0, r0, r8, lsr #9
   14dd4:	andeq	r0, r0, r0, ror #9
   14dd8:	andeq	r0, r0, r8, lsl r5
   14ddc:	andeq	r0, r0, r0, asr r5
   14de0:	muleq	r0, r4, r5
   14de4:	ldr	r1, [pc, #1420]	; 15378 <table_cell_from_buffer@@Base+0x62c>
   14de8:	add	r2, sp, #8
   14dec:	mov	r0, r7
   14df0:	add	r1, pc, r1
   14df4:	bl	11f90 <__isoc99_sscanf@plt>
   14df8:	mvn	r7, #0
   14dfc:	cmp	r0, #1
   14e00:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   14e04:	ldr	r3, [sp, #8]
   14e08:	mov	r0, r6
   14e0c:	mov	r1, r5
   14e10:	mov	r2, r4
   14e14:	bl	13e0c <table_set_int@@Base>
   14e18:	b	1534c <table_cell_from_buffer@@Base+0x600>
   14e1c:	ldr	r1, [pc, #1368]	; 1537c <table_cell_from_buffer@@Base+0x630>
   14e20:	add	r2, sp, #8
   14e24:	mov	r0, r7
   14e28:	add	r1, pc, r1
   14e2c:	bl	11f90 <__isoc99_sscanf@plt>
   14e30:	mvn	r7, #0
   14e34:	cmp	r0, #1
   14e38:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   14e3c:	ldr	r3, [sp, #8]
   14e40:	mov	r0, r6
   14e44:	mov	r1, r5
   14e48:	mov	r2, r4
   14e4c:	bl	13e8c <table_set_uint@@Base>
   14e50:	b	1534c <table_cell_from_buffer@@Base+0x600>
   14e54:	ldr	r1, [pc, #1316]	; 15380 <table_cell_from_buffer@@Base+0x634>
   14e58:	add	r2, sp, #8
   14e5c:	mov	r0, r7
   14e60:	add	r1, pc, r1
   14e64:	bl	11f90 <__isoc99_sscanf@plt>
   14e68:	mvn	r7, #0
   14e6c:	cmp	r0, #1
   14e70:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   14e74:	ldrsb	r3, [sp, #8]
   14e78:	mov	r0, r6
   14e7c:	mov	r1, r5
   14e80:	mov	r2, r4
   14e84:	bl	13f0c <table_set_int8@@Base>
   14e88:	b	1534c <table_cell_from_buffer@@Base+0x600>
   14e8c:	ldr	r1, [pc, #1264]	; 15384 <table_cell_from_buffer@@Base+0x638>
   14e90:	add	r2, sp, #8
   14e94:	mov	r0, r7
   14e98:	add	r1, pc, r1
   14e9c:	bl	11f90 <__isoc99_sscanf@plt>
   14ea0:	mvn	r7, #0
   14ea4:	cmp	r0, #1
   14ea8:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   14eac:	ldrb	r3, [sp, #8]
   14eb0:	mov	r0, r6
   14eb4:	mov	r1, r5
   14eb8:	mov	r2, r4
   14ebc:	bl	13f8c <table_set_uint8@@Base>
   14ec0:	b	1534c <table_cell_from_buffer@@Base+0x600>
   14ec4:	ldr	r1, [pc, #1212]	; 15388 <table_cell_from_buffer@@Base+0x63c>
   14ec8:	add	r2, sp, #8
   14ecc:	mov	r0, r7
   14ed0:	add	r1, pc, r1
   14ed4:	bl	11f90 <__isoc99_sscanf@plt>
   14ed8:	mvn	r7, #0
   14edc:	cmp	r0, #1
   14ee0:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   14ee4:	ldrsh	r3, [sp, #8]
   14ee8:	mov	r0, r6
   14eec:	mov	r1, r5
   14ef0:	mov	r2, r4
   14ef4:	bl	1400c <table_set_int16@@Base>
   14ef8:	b	1534c <table_cell_from_buffer@@Base+0x600>
   14efc:	ldr	r1, [pc, #1160]	; 1538c <table_cell_from_buffer@@Base+0x640>
   14f00:	add	r2, sp, #8
   14f04:	mov	r0, r7
   14f08:	add	r1, pc, r1
   14f0c:	bl	11f90 <__isoc99_sscanf@plt>
   14f10:	mvn	r7, #0
   14f14:	cmp	r0, #1
   14f18:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   14f1c:	ldrh	r3, [sp, #8]
   14f20:	mov	r0, r6
   14f24:	mov	r1, r5
   14f28:	mov	r2, r4
   14f2c:	bl	1408c <table_set_uint16@@Base>
   14f30:	b	1534c <table_cell_from_buffer@@Base+0x600>
   14f34:	ldr	r1, [pc, #1108]	; 15390 <table_cell_from_buffer@@Base+0x644>
   14f38:	add	r2, sp, #8
   14f3c:	mov	r0, r7
   14f40:	add	r1, pc, r1
   14f44:	bl	11f90 <__isoc99_sscanf@plt>
   14f48:	mvn	r7, #0
   14f4c:	cmp	r0, #1
   14f50:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   14f54:	ldr	r3, [sp, #8]
   14f58:	mov	r0, r6
   14f5c:	mov	r1, r5
   14f60:	mov	r2, r4
   14f64:	bl	1410c <table_set_int32@@Base>
   14f68:	b	1534c <table_cell_from_buffer@@Base+0x600>
   14f6c:	ldr	r1, [pc, #1056]	; 15394 <table_cell_from_buffer@@Base+0x648>
   14f70:	add	r2, sp, #8
   14f74:	mov	r0, r7
   14f78:	add	r1, pc, r1
   14f7c:	bl	11f90 <__isoc99_sscanf@plt>
   14f80:	mvn	r7, #0
   14f84:	cmp	r0, #1
   14f88:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   14f8c:	ldr	r3, [sp, #8]
   14f90:	mov	r0, r6
   14f94:	mov	r1, r5
   14f98:	mov	r2, r4
   14f9c:	bl	1418c <table_set_uint32@@Base>
   14fa0:	b	1534c <table_cell_from_buffer@@Base+0x600>
   14fa4:	ldr	r1, [pc, #1004]	; 15398 <table_cell_from_buffer@@Base+0x64c>
   14fa8:	add	r2, sp, #8
   14fac:	mov	r0, r7
   14fb0:	add	r1, pc, r1
   14fb4:	bl	11f90 <__isoc99_sscanf@plt>
   14fb8:	mvn	r7, #0
   14fbc:	cmp	r0, #1
   14fc0:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   14fc4:	ldr	r0, [sp, #8]
   14fc8:	ldr	r1, [sp, #12]
   14fcc:	mov	r2, r4
   14fd0:	stm	sp, {r0, r1}
   14fd4:	mov	r0, r6
   14fd8:	mov	r1, r5
   14fdc:	bl	1420c <table_set_int64@@Base>
   14fe0:	b	1534c <table_cell_from_buffer@@Base+0x600>
   14fe4:	ldr	r1, [pc, #944]	; 1539c <table_cell_from_buffer@@Base+0x650>
   14fe8:	add	r2, sp, #8
   14fec:	mov	r0, r7
   14ff0:	add	r1, pc, r1
   14ff4:	bl	11f90 <__isoc99_sscanf@plt>
   14ff8:	mvn	r7, #0
   14ffc:	cmp	r0, #1
   15000:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   15004:	ldr	r0, [sp, #8]
   15008:	ldr	r1, [sp, #12]
   1500c:	mov	r2, r4
   15010:	stm	sp, {r0, r1}
   15014:	mov	r0, r6
   15018:	mov	r1, r5
   1501c:	bl	14294 <table_set_uint64@@Base>
   15020:	b	1534c <table_cell_from_buffer@@Base+0x600>
   15024:	ldr	r1, [pc, #884]	; 153a0 <table_cell_from_buffer@@Base+0x654>
   15028:	add	r2, sp, #8
   1502c:	mov	r0, r7
   15030:	add	r1, pc, r1
   15034:	bl	11f90 <__isoc99_sscanf@plt>
   15038:	mvn	r7, #0
   1503c:	cmp	r0, #1
   15040:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   15044:	ldrsh	r3, [sp, #8]
   15048:	mov	r0, r6
   1504c:	mov	r1, r5
   15050:	mov	r2, r4
   15054:	bl	1431c <table_set_short@@Base>
   15058:	b	1534c <table_cell_from_buffer@@Base+0x600>
   1505c:	ldr	r1, [pc, #832]	; 153a4 <table_cell_from_buffer@@Base+0x658>
   15060:	add	r2, sp, #8
   15064:	mov	r0, r7
   15068:	add	r1, pc, r1
   1506c:	bl	11f90 <__isoc99_sscanf@plt>
   15070:	mvn	r7, #0
   15074:	cmp	r0, #1
   15078:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   1507c:	ldrh	r3, [sp, #8]
   15080:	mov	r0, r6
   15084:	mov	r1, r5
   15088:	mov	r2, r4
   1508c:	bl	1439c <table_set_ushort@@Base>
   15090:	b	1534c <table_cell_from_buffer@@Base+0x600>
   15094:	ldr	r1, [pc, #780]	; 153a8 <table_cell_from_buffer@@Base+0x65c>
   15098:	add	r2, sp, #8
   1509c:	mov	r0, r7
   150a0:	add	r1, pc, r1
   150a4:	bl	11f90 <__isoc99_sscanf@plt>
   150a8:	mvn	r7, #0
   150ac:	cmp	r0, #1
   150b0:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   150b4:	ldr	r3, [sp, #8]
   150b8:	mov	r0, r6
   150bc:	mov	r1, r5
   150c0:	mov	r2, r4
   150c4:	bl	1441c <table_set_long@@Base>
   150c8:	b	1534c <table_cell_from_buffer@@Base+0x600>
   150cc:	ldr	r1, [pc, #728]	; 153ac <table_cell_from_buffer@@Base+0x660>
   150d0:	add	r2, sp, #8
   150d4:	mov	r0, r7
   150d8:	add	r1, pc, r1
   150dc:	bl	11f90 <__isoc99_sscanf@plt>
   150e0:	mvn	r7, #0
   150e4:	cmp	r0, #1
   150e8:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   150ec:	ldr	r3, [sp, #8]
   150f0:	mov	r0, r6
   150f4:	mov	r1, r5
   150f8:	mov	r2, r4
   150fc:	bl	1449c <table_set_ulong@@Base>
   15100:	b	1534c <table_cell_from_buffer@@Base+0x600>
   15104:	ldr	r1, [pc, #676]	; 153b0 <table_cell_from_buffer@@Base+0x664>
   15108:	add	r2, sp, #8
   1510c:	mov	r0, r7
   15110:	add	r1, pc, r1
   15114:	bl	11f90 <__isoc99_sscanf@plt>
   15118:	mvn	r7, #0
   1511c:	cmp	r0, #1
   15120:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   15124:	ldr	r0, [sp, #8]
   15128:	ldr	r1, [sp, #12]
   1512c:	mov	r2, r4
   15130:	stm	sp, {r0, r1}
   15134:	mov	r0, r6
   15138:	mov	r1, r5
   1513c:	bl	1451c <table_set_llong@@Base>
   15140:	b	1534c <table_cell_from_buffer@@Base+0x600>
   15144:	ldr	r1, [pc, #616]	; 153b4 <table_cell_from_buffer@@Base+0x668>
   15148:	add	r2, sp, #8
   1514c:	mov	r0, r7
   15150:	add	r1, pc, r1
   15154:	bl	11f90 <__isoc99_sscanf@plt>
   15158:	mvn	r7, #0
   1515c:	cmp	r0, #1
   15160:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   15164:	ldr	r0, [sp, #8]
   15168:	ldr	r1, [sp, #12]
   1516c:	mov	r2, r4
   15170:	stm	sp, {r0, r1}
   15174:	mov	r0, r6
   15178:	mov	r1, r5
   1517c:	bl	145a4 <table_set_ullong@@Base>
   15180:	b	1534c <table_cell_from_buffer@@Base+0x600>
   15184:	ldr	r1, [pc, #560]	; 153bc <table_cell_from_buffer@@Base+0x670>
   15188:	add	r2, sp, #8
   1518c:	mov	r0, r7
   15190:	add	r1, pc, r1
   15194:	bl	11f90 <__isoc99_sscanf@plt>
   15198:	mvn	r7, #0
   1519c:	cmp	r0, #1
   151a0:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   151a4:	vldr	s0, [sp, #8]
   151a8:	mov	r0, r6
   151ac:	mov	r1, r5
   151b0:	mov	r2, r4
   151b4:	bl	1462c <table_set_float@@Base>
   151b8:	b	1534c <table_cell_from_buffer@@Base+0x600>
   151bc:	ldr	r1, [pc, #508]	; 153c0 <table_cell_from_buffer@@Base+0x674>
   151c0:	add	r2, sp, #8
   151c4:	mov	r0, r7
   151c8:	add	r1, pc, r1
   151cc:	bl	11f90 <__isoc99_sscanf@plt>
   151d0:	mvn	r7, #0
   151d4:	cmp	r0, #1
   151d8:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   151dc:	vldr	d0, [sp, #8]
   151e0:	mov	r0, r6
   151e4:	mov	r1, r5
   151e8:	mov	r2, r4
   151ec:	bl	146b8 <table_set_double@@Base>
   151f0:	b	1534c <table_cell_from_buffer@@Base+0x600>
   151f4:	ldr	r1, [pc, #456]	; 153c4 <table_cell_from_buffer@@Base+0x678>
   151f8:	add	r2, sp, #8
   151fc:	mov	r0, r7
   15200:	add	r1, pc, r1
   15204:	bl	11f90 <__isoc99_sscanf@plt>
   15208:	mvn	r7, #0
   1520c:	cmp	r0, #1
   15210:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   15214:	vldr	d0, [sp, #8]
   15218:	mov	r0, r6
   1521c:	mov	r1, r5
   15220:	mov	r2, r4
   15224:	bl	14740 <table_set_ldouble@@Base>
   15228:	b	1534c <table_cell_from_buffer@@Base+0x600>
   1522c:	ldr	r1, [pc, #408]	; 153cc <table_cell_from_buffer@@Base+0x680>
   15230:	add	r2, sp, #8
   15234:	mov	r0, r7
   15238:	add	r1, pc, r1
   1523c:	bl	11f90 <__isoc99_sscanf@plt>
   15240:	mvn	r7, #0
   15244:	cmp	r0, #1
   15248:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   1524c:	ldrb	r3, [sp, #8]
   15250:	mov	r0, r6
   15254:	mov	r1, r5
   15258:	mov	r2, r4
   1525c:	bl	147e8 <table_set_char@@Base>
   15260:	b	1534c <table_cell_from_buffer@@Base+0x600>
   15264:	ldr	r1, [pc, #356]	; 153d0 <table_cell_from_buffer@@Base+0x684>
   15268:	add	r2, sp, #8
   1526c:	mov	r0, r7
   15270:	add	r1, pc, r1
   15274:	bl	11f90 <__isoc99_sscanf@plt>
   15278:	mvn	r7, #0
   1527c:	cmp	r0, #1
   15280:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   15284:	ldrb	r3, [sp, #8]
   15288:	mov	r0, r6
   1528c:	mov	r1, r5
   15290:	mov	r2, r4
   15294:	bl	14868 <table_set_uchar@@Base>
   15298:	b	1534c <table_cell_from_buffer@@Base+0x600>
   1529c:	ldr	r1, [pc, #276]	; 153b8 <table_cell_from_buffer@@Base+0x66c>
   152a0:	add	r2, sp, #8
   152a4:	mov	r0, r7
   152a8:	add	r1, pc, r1
   152ac:	bl	11f90 <__isoc99_sscanf@plt>
   152b0:	mvn	r7, #0
   152b4:	cmp	r0, #1
   152b8:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   152bc:	add	r3, sp, #8
   152c0:	mov	r0, r6
   152c4:	mov	r1, r5
   152c8:	mov	r2, r4
   152cc:	bl	147c8 <table_set_string@@Base>
   152d0:	b	1534c <table_cell_from_buffer@@Base+0x600>
   152d4:	ldr	r1, [pc, #236]	; 153c8 <table_cell_from_buffer@@Base+0x67c>
   152d8:	add	r2, sp, #8
   152dc:	mov	r0, r7
   152e0:	add	r1, pc, r1
   152e4:	bl	11f90 <__isoc99_sscanf@plt>
   152e8:	mvn	r7, #0
   152ec:	cmp	r0, #1
   152f0:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   152f4:	ldr	r0, [sp, #8]
   152f8:	cmp	r0, #0
   152fc:	beq	1535c <table_cell_from_buffer@@Base+0x610>
   15300:	mov	r0, r6
   15304:	mov	r1, r5
   15308:	mov	r2, r4
   1530c:	mov	r3, #1
   15310:	bl	13d8c <table_set_bool@@Base>
   15314:	b	1534c <table_cell_from_buffer@@Base+0x600>
   15318:	ldr	r1, [pc, #180]	; 153d4 <table_cell_from_buffer@@Base+0x688>
   1531c:	add	r2, sp, #8
   15320:	mov	r0, r7
   15324:	add	r1, pc, r1
   15328:	bl	11f90 <__isoc99_sscanf@plt>
   1532c:	mvn	r7, #0
   15330:	cmp	r0, #1
   15334:	bne	15350 <table_cell_from_buffer@@Base+0x604>
   15338:	ldr	r3, [sp, #8]
   1533c:	mov	r0, r6
   15340:	mov	r1, r5
   15344:	mov	r2, r4
   15348:	bl	148e8 <table_set_ptr@@Base>
   1534c:	mov	r7, #0
   15350:	mov	r0, r7
   15354:	sub	sp, fp, #24
   15358:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1535c:	mov	r0, r6
   15360:	mov	r1, r5
   15364:	mov	r2, r4
   15368:	mov	r3, #0
   1536c:	mov	r7, #0
   15370:	bl	13d8c <table_set_bool@@Base>
   15374:	b	15350 <table_cell_from_buffer@@Base+0x604>
   15378:			; <UNDEFINED> instruction: 0x000006bc
   1537c:	andeq	r0, r0, r7, lsl #13
   15380:	andeq	r0, r0, r0, lsl #13
   15384:	andeq	r0, r0, sp, asr #12
   15388:	andeq	r0, r0, ip, ror #11
   1538c:			; <UNDEFINED> instruction: 0x000005b8
   15390:	andeq	r0, r0, ip, ror #10
   15394:	andeq	r0, r0, r7, lsr r5
   15398:	andeq	r0, r0, r2, lsl #10
   1539c:	andeq	r0, r0, r7, asr #9
   153a0:	andeq	r0, r0, ip, lsl #9
   153a4:	andeq	r0, r0, r8, asr r4
   153a8:	andeq	r0, r0, r4, lsr #8
   153ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   153b0:	andeq	r0, r0, r2, lsr #7
   153b4:	andeq	r0, r0, r7, ror #6
   153b8:	andeq	r0, r0, r4, lsr #4
   153bc:	andeq	r0, r0, pc, lsr r3
   153c0:	andeq	r0, r0, sl, lsl #6
   153c4:	ldrdeq	r0, [r0], -r6
   153c8:	andeq	r0, r0, ip, asr #3
   153cc:	andeq	r0, r0, r2, lsr #5
   153d0:	andeq	r0, r0, sl, ror #4
   153d4:			; <UNDEFINED> instruction: 0x000001b9

000153d8 <table_cell_nullify@@Base>:
   153d8:	push	{r4, r5, fp, lr}
   153dc:	add	fp, sp, #8
   153e0:	mov	r4, r2
   153e4:	bl	13844 <table_get_row_ptr@@Base>
   153e8:	ldr	r5, [r0]
   153ec:	ldr	r0, [r5, r4, lsl #2]
   153f0:	cmp	r0, #0
   153f4:	beq	15404 <table_cell_nullify@@Base+0x2c>
   153f8:	bl	11f18 <free@plt>
   153fc:	mov	r0, #0
   15400:	str	r0, [r5, r4, lsl #2]
   15404:	mov	r0, #0
   15408:	pop	{r4, r5, fp, pc}

0001540c <__libc_csu_init@@Base>:
   1540c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15410:	mov	r7, r0
   15414:	ldr	r6, [pc, #72]	; 15464 <__libc_csu_init@@Base+0x58>
   15418:	ldr	r5, [pc, #72]	; 15468 <__libc_csu_init@@Base+0x5c>
   1541c:	add	r6, pc, r6
   15420:	add	r5, pc, r5
   15424:	sub	r6, r6, r5
   15428:	mov	r8, r1
   1542c:	mov	r9, r2
   15430:	bl	11ee0 <strcmp@plt-0x20>
   15434:	asrs	r6, r6, #2
   15438:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1543c:	mov	r4, #0
   15440:	add	r4, r4, #1
   15444:	ldr	r3, [r5], #4
   15448:	mov	r2, r9
   1544c:	mov	r1, r8
   15450:	mov	r0, r7
   15454:	blx	r3
   15458:	cmp	r6, r4
   1545c:	bne	15440 <__libc_csu_init@@Base+0x34>
   15460:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15464:	andeq	r0, r1, r8, lsl #21
   15468:	andeq	r0, r1, r0, lsl #21

0001546c <__libc_csu_fini@@Base>:
   1546c:	bx	lr

Disassembly of section .fini:

00015470 <.fini>:
   15470:	push	{r3, lr}
   15474:	pop	{r3, pc}
