
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf32-littlearm


Disassembly of section .init:

00013e5c <.init>:
   13e5c:	push	{r3, lr}
   13e60:	bl	141c8 <_start@@Base+0x3c>
   13e64:	pop	{r3, pc}

Disassembly of section .plt:

00013e68 <calloc@plt-0x14>:
   13e68:	push	{lr}		; (str lr, [sp, #-4]!)
   13e6c:	ldr	lr, [pc, #4]	; 13e78 <calloc@plt-0x4>
   13e70:	add	lr, pc, lr
   13e74:	ldr	pc, [lr, #8]!
   13e78:	andeq	r6, r5, r8, lsl #3

00013e7c <calloc@plt>:
   13e7c:	add	ip, pc, #0, 12
   13e80:	add	ip, ip, #352256	; 0x56000
   13e84:	ldr	pc, [ip, #392]!	; 0x188

00013e88 <raise@plt>:
   13e88:	add	ip, pc, #0, 12
   13e8c:	add	ip, ip, #352256	; 0x56000
   13e90:	ldr	pc, [ip, #384]!	; 0x180

00013e94 <strcmp@plt>:
   13e94:	add	ip, pc, #0, 12
   13e98:	add	ip, ip, #352256	; 0x56000
   13e9c:	ldr	pc, [ip, #376]!	; 0x178

00013ea0 <fopen@plt>:
   13ea0:	add	ip, pc, #0, 12
   13ea4:	add	ip, ip, #352256	; 0x56000
   13ea8:	ldr	pc, [ip, #368]!	; 0x170

00013eac <free@plt>:
   13eac:	add	ip, pc, #0, 12
   13eb0:	add	ip, ip, #352256	; 0x56000
   13eb4:	ldr	pc, [ip, #360]!	; 0x168

00013eb8 <memcpy@plt>:
   13eb8:	add	ip, pc, #0, 12
   13ebc:	add	ip, ip, #352256	; 0x56000
   13ec0:	ldr	pc, [ip, #352]!	; 0x160

00013ec4 <ftell@plt>:
   13ec4:	add	ip, pc, #0, 12
   13ec8:	add	ip, ip, #352256	; 0x56000
   13ecc:	ldr	pc, [ip, #344]!	; 0x158

00013ed0 <memcmp@plt>:
   13ed0:	add	ip, pc, #0, 12
   13ed4:	add	ip, ip, #352256	; 0x56000
   13ed8:	ldr	pc, [ip, #336]!	; 0x150

00013edc <rewind@plt>:
   13edc:	add	ip, pc, #0, 12
   13ee0:	add	ip, ip, #352256	; 0x56000
   13ee4:	ldr	pc, [ip, #328]!	; 0x148

00013ee8 <realloc@plt>:
   13ee8:	add	ip, pc, #0, 12
   13eec:	add	ip, ip, #352256	; 0x56000
   13ef0:	ldr	pc, [ip, #320]!	; 0x140

00013ef4 <fwrite@plt>:
   13ef4:	add	ip, pc, #0, 12
   13ef8:	add	ip, ip, #352256	; 0x56000
   13efc:	ldr	pc, [ip, #312]!	; 0x138

00013f00 <fread@plt>:
   13f00:	add	ip, pc, #0, 12
   13f04:	add	ip, ip, #352256	; 0x56000
   13f08:	ldr	pc, [ip, #304]!	; 0x130

00013f0c <puts@plt>:
   13f0c:	add	ip, pc, #0, 12
   13f10:	add	ip, ip, #352256	; 0x56000
   13f14:	ldr	pc, [ip, #296]!	; 0x128

00013f18 <malloc@plt>:
   13f18:	add	ip, pc, #0, 12
   13f1c:	add	ip, ip, #352256	; 0x56000
   13f20:	ldr	pc, [ip, #288]!	; 0x120

00013f24 <__libc_start_main@plt>:
   13f24:	add	ip, pc, #0, 12
   13f28:	add	ip, ip, #352256	; 0x56000
   13f2c:	ldr	pc, [ip, #280]!	; 0x118

00013f30 <__ctype_toupper_loc@plt>:
   13f30:	add	ip, pc, #0, 12
   13f34:	add	ip, ip, #352256	; 0x56000
   13f38:	ldr	pc, [ip, #272]!	; 0x110

00013f3c <__gmon_start__@plt>:
   13f3c:	add	ip, pc, #0, 12
   13f40:	add	ip, ip, #352256	; 0x56000
   13f44:	ldr	pc, [ip, #264]!	; 0x108

00013f48 <exit@plt>:
   13f48:	add	ip, pc, #0, 12
   13f4c:	add	ip, ip, #352256	; 0x56000
   13f50:	ldr	pc, [ip, #256]!	; 0x100

00013f54 <strlen@plt>:
   13f54:	add	ip, pc, #0, 12
   13f58:	add	ip, ip, #352256	; 0x56000
   13f5c:	ldr	pc, [ip, #248]!	; 0xf8

00013f60 <fprintf@plt>:
   13f60:	add	ip, pc, #0, 12
   13f64:	add	ip, ip, #352256	; 0x56000
   13f68:	ldr	pc, [ip, #240]!	; 0xf0

00013f6c <posix_memalign@plt>:
   13f6c:	add	ip, pc, #0, 12
   13f70:	add	ip, ip, #352256	; 0x56000
   13f74:	ldr	pc, [ip, #232]!	; 0xe8

00013f78 <memset@plt>:
   13f78:	add	ip, pc, #0, 12
   13f7c:	add	ip, ip, #352256	; 0x56000
   13f80:	ldr	pc, [ip, #224]!	; 0xe0

00013f84 <strncpy@plt>:
   13f84:	add	ip, pc, #0, 12
   13f88:	add	ip, ip, #352256	; 0x56000
   13f8c:	ldr	pc, [ip, #216]!	; 0xd8

00013f90 <strtod@plt>:
   13f90:	add	ip, pc, #0, 12
   13f94:	add	ip, ip, #352256	; 0x56000
   13f98:	ldr	pc, [ip, #208]!	; 0xd0

00013f9c <memchr@plt>:
   13f9c:	add	ip, pc, #0, 12
   13fa0:	add	ip, ip, #352256	; 0x56000
   13fa4:	ldr	pc, [ip, #200]!	; 0xc8

00013fa8 <fclose@plt>:
   13fa8:	add	ip, pc, #0, 12
   13fac:	add	ip, ip, #352256	; 0x56000
   13fb0:	ldr	pc, [ip, #192]!	; 0xc0

00013fb4 <vfprintf@plt>:
   13fb4:	add	ip, pc, #0, 12
   13fb8:	add	ip, ip, #352256	; 0x56000
   13fbc:	ldr	pc, [ip, #184]!	; 0xb8

00013fc0 <fputc@plt>:
   13fc0:	add	ip, pc, #0, 12
   13fc4:	add	ip, ip, #352256	; 0x56000
   13fc8:	ldr	pc, [ip, #176]!	; 0xb0

00013fcc <sprintf@plt>:
   13fcc:	add	ip, pc, #0, 12
   13fd0:	add	ip, ip, #352256	; 0x56000
   13fd4:	ldr	pc, [ip, #168]!	; 0xa8

00013fd8 <vsnprintf@plt>:
   13fd8:	add	ip, pc, #0, 12
   13fdc:	add	ip, ip, #352256	; 0x56000
   13fe0:	ldr	pc, [ip, #160]!	; 0xa0

00013fe4 <qsort@plt>:
   13fe4:	add	ip, pc, #0, 12
   13fe8:	add	ip, ip, #352256	; 0x56000
   13fec:	ldr	pc, [ip, #152]!	; 0x98

00013ff0 <fseek@plt>:
   13ff0:	add	ip, pc, #0, 12
   13ff4:	add	ip, ip, #352256	; 0x56000
   13ff8:	ldr	pc, [ip, #144]!	; 0x90

00013ffc <strncmp@plt>:
   13ffc:	add	ip, pc, #0, 12
   14000:	add	ip, ip, #352256	; 0x56000
   14004:	ldr	pc, [ip, #136]!	; 0x88

00014008 <abort@plt>:
   14008:	add	ip, pc, #0, 12
   1400c:	add	ip, ip, #352256	; 0x56000
   14010:	ldr	pc, [ip, #128]!	; 0x80

00014014 <__assert_fail@plt>:
   14014:	add	ip, pc, #0, 12
   14018:	add	ip, ip, #352256	; 0x56000
   1401c:	ldr	pc, [ip, #120]!	; 0x78

Disassembly of section .text:

00014020 <main@@Base>:
   14020:	strd	r4, [sp, #-20]!	; 0xffffffec
   14024:	movw	r2, #3735	; 0xe97
   14028:	movw	r1, #59204	; 0xe744
   1402c:	movt	r1, #3
   14030:	strd	r6, [sp, #8]
   14034:	mov	r4, #1
   14038:	str	lr, [sp, #16]
   1403c:	sub	sp, sp, #3952	; 0xf70
   14040:	mov	r6, #1
   14044:	sub	sp, sp, #12
   14048:	mov	r7, #1
   1404c:	add	r0, sp, #224	; 0xe0
   14050:	bl	13eb8 <memcpy@plt>
   14054:	mov	r0, sp
   14058:	bl	142b8 <flatcc_init_options@@Base>
   1405c:	mov	r3, #0
   14060:	mov	r0, sp
   14064:	str	r4, [sp, #108]	; 0x6c
   14068:	mov	r2, r3
   1406c:	movw	r1, #58948	; 0xe644
   14070:	movt	r1, #3
   14074:	strd	r6, [sp, #144]	; 0x90
   14078:	strd	r6, [sp, #152]	; 0x98
   1407c:	bl	1437c <flatcc_create_context@@Base>
   14080:	subs	r6, r0, #0
   14084:	beq	14164 <main@@Base+0x144>
   14088:	movw	r2, #3735	; 0xe97
   1408c:	add	r1, sp, #224	; 0xe0
   14090:	bl	143fc <flatcc_parse_buffer@@Base>
   14094:	subs	r7, r0, #0
   14098:	bne	14140 <main@@Base+0x120>
   1409c:	movw	r5, #41128	; 0xa0a8
   140a0:	movt	r5, #6
   140a4:	mov	r2, #17
   140a8:	mov	r1, r4
   140ac:	ldr	r3, [r5]
   140b0:	movw	r0, #59032	; 0xe698
   140b4:	movt	r0, #3
   140b8:	bl	13ef4 <fwrite@plt>
   140bc:	mov	r2, #31
   140c0:	mov	r1, r4
   140c4:	ldr	r3, [r5]
   140c8:	movw	r0, #59052	; 0xe6ac
   140cc:	movt	r0, #3
   140d0:	bl	13ef4 <fwrite@plt>
   140d4:	mov	r0, r6
   140d8:	bl	14ae8 <flatcc_generate_files@@Base>
   140dc:	cmp	r0, #0
   140e0:	bne	14124 <main@@Base+0x104>
   140e4:	movw	r3, #41132	; 0xa0ac
   140e8:	movt	r3, #6
   140ec:	movw	r1, #59120	; 0xe6f0
   140f0:	movt	r1, #3
   140f4:	ldr	r0, [r3]
   140f8:	add	r2, sp, #224	; 0xe0
   140fc:	bl	13f60 <fprintf@plt>
   14100:	mov	r0, r6
   14104:	bl	14c1c <flatcc_destroy_context@@Base>
   14108:	mov	r0, r7
   1410c:	add	sp, sp, #3952	; 0xf70
   14110:	add	sp, sp, #12
   14114:	ldrd	r4, [sp]
   14118:	ldrd	r6, [sp, #8]
   1411c:	add	sp, sp, #16
   14120:	pop	{pc}		; (ldr pc, [sp], #4)
   14124:	mov	r1, r4
   14128:	movw	r0, #59084	; 0xe6cc
   1412c:	movt	r0, #3
   14130:	mov	r2, #32
   14134:	ldr	r3, [r5]
   14138:	bl	13ef4 <fwrite@plt>
   1413c:	b	14100 <main@@Base+0xe0>
   14140:	movw	r3, #41128	; 0xa0a8
   14144:	movt	r3, #6
   14148:	mov	r1, r4
   1414c:	movw	r0, #59008	; 0xe680
   14150:	movt	r0, #3
   14154:	mov	r2, #20
   14158:	ldr	r3, [r3]
   1415c:	bl	13ef4 <fwrite@plt>
   14160:	b	14100 <main@@Base+0xe0>
   14164:	movw	r3, #41128	; 0xa0a8
   14168:	movt	r3, #6
   1416c:	mov	r1, r4
   14170:	movw	r0, #58964	; 0xe654
   14174:	movt	r0, #3
   14178:	mov	r2, #41	; 0x29
   1417c:	ldr	r3, [r3]
   14180:	mvn	r7, #0
   14184:	bl	13ef4 <fwrite@plt>
   14188:	b	14108 <main@@Base+0xe8>

0001418c <_start@@Base>:
   1418c:	mov	fp, #0
   14190:	mov	lr, #0
   14194:	pop	{r1}		; (ldr r1, [sp], #4)
   14198:	mov	r2, sp
   1419c:	push	{r2}		; (str r2, [sp, #-4]!)
   141a0:	push	{r0}		; (str r0, [sp, #-4]!)
   141a4:	ldr	ip, [pc, #16]	; 141bc <_start@@Base+0x30>
   141a8:	push	{ip}		; (str ip, [sp, #-4]!)
   141ac:	ldr	r0, [pc, #12]	; 141c0 <_start@@Base+0x34>
   141b0:	ldr	r3, [pc, #12]	; 141c4 <_start@@Base+0x38>
   141b4:	bl	13f24 <__libc_start_main@plt>
   141b8:	bl	14008 <abort@plt>
   141bc:	andeq	lr, r3, r0, lsr r6
   141c0:	andeq	r4, r1, r0, lsr #32
   141c4:	ldrdeq	lr, [r3], -r0
   141c8:	ldr	r3, [pc, #20]	; 141e4 <_start@@Base+0x58>
   141cc:	ldr	r2, [pc, #20]	; 141e8 <_start@@Base+0x5c>
   141d0:	add	r3, pc, r3
   141d4:	ldr	r2, [r3, r2]
   141d8:	cmp	r2, #0
   141dc:	bxeq	lr
   141e0:	b	13f3c <__gmon_start__@plt>
   141e4:	andeq	r5, r5, r8, lsr #28
   141e8:	muleq	r0, r8, r0
   141ec:	ldr	r0, [pc, #24]	; 1420c <_start@@Base+0x80>
   141f0:	ldr	r3, [pc, #24]	; 14210 <_start@@Base+0x84>
   141f4:	cmp	r3, r0
   141f8:	bxeq	lr
   141fc:	ldr	r3, [pc, #16]	; 14214 <_start@@Base+0x88>
   14200:	cmp	r3, #0
   14204:	bxeq	lr
   14208:	bx	r3
   1420c:	andeq	sl, r6, r4, lsr #1
   14210:	andeq	sl, r6, r4, lsr #1
   14214:	andeq	r0, r0, r0
   14218:	ldr	r0, [pc, #36]	; 14244 <_start@@Base+0xb8>
   1421c:	ldr	r1, [pc, #36]	; 14248 <_start@@Base+0xbc>
   14220:	sub	r1, r1, r0
   14224:	asr	r1, r1, #2
   14228:	add	r1, r1, r1, lsr #31
   1422c:	asrs	r1, r1, #1
   14230:	bxeq	lr
   14234:	ldr	r3, [pc, #16]	; 1424c <_start@@Base+0xc0>
   14238:	cmp	r3, #0
   1423c:	bxeq	lr
   14240:	bx	r3
   14244:	andeq	sl, r6, r4, lsr #1
   14248:	andeq	sl, r6, r4, lsr #1
   1424c:	andeq	r0, r0, r0
   14250:	push	{r4, lr}
   14254:	ldr	r4, [pc, #24]	; 14274 <_start@@Base+0xe8>
   14258:	ldrb	r3, [r4]
   1425c:	cmp	r3, #0
   14260:	popne	{r4, pc}
   14264:	bl	141ec <_start@@Base+0x60>
   14268:	mov	r3, #1
   1426c:	strb	r3, [r4]
   14270:	pop	{r4, pc}
   14274:	strheq	sl, [r6], -r0
   14278:	b	14218 <_start@@Base+0x8c>
   1427c:	add	r0, r0, #172	; 0xac
   14280:	mov	r2, #1
   14284:	b	274e8 <ptr_set_insert_item@@Base>
   14288:	movw	r3, #41128	; 0xa0a8
   1428c:	movt	r3, #6
   14290:	str	r4, [sp, #-8]!
   14294:	movw	r0, #62968	; 0xf5f8
   14298:	movt	r0, #3
   1429c:	ldr	r3, [r3]
   142a0:	mov	r2, #34	; 0x22
   142a4:	mov	r1, #1
   142a8:	str	lr, [sp, #4]
   142ac:	bl	13ef4 <fwrite@plt>
   142b0:	mov	r0, #1
   142b4:	bl	13f48 <exit@plt>

000142b8 <flatcc_init_options@@Base>:
   142b8:	mov	r2, #212	; 0xd4
   142bc:	mov	r1, #0
   142c0:	str	r4, [sp, #-16]!
   142c4:	mov	r4, r0
   142c8:	add	r0, r0, #12
   142cc:	strd	r6, [sp, #4]
   142d0:	str	lr, [sp, #12]
   142d4:	movw	r6, #65534	; 0xfffe
   142d8:	mov	r7, #0
   142dc:	bl	13f78 <memset@plt>
   142e0:	mov	r2, #65536	; 0x10000
   142e4:	mov	r3, #2
   142e8:	mov	ip, #100	; 0x64
   142ec:	movw	r0, #58956	; 0xe64c
   142f0:	movt	r0, #3
   142f4:	movw	r1, #63004	; 0xf61c
   142f8:	movt	r1, #3
   142fc:	stm	r4, {r2, ip}
   14300:	movw	r2, #63012	; 0xf624
   14304:	movt	r2, #3
   14308:	str	ip, [r4, #8]
   1430c:	str	r3, [r4, #68]	; 0x44
   14310:	mov	r3, #1
   14314:	strd	r6, [r4, #88]	; 0x58
   14318:	strd	r0, [r4, #96]	; 0x60
   1431c:	mov	r0, #4
   14320:	ldrd	r6, [sp, #4]
   14324:	str	r3, [r4, #16]
   14328:	str	r3, [r4, #20]
   1432c:	str	r3, [r4, #24]
   14330:	str	r3, [r4, #28]
   14334:	str	r3, [r4, #32]
   14338:	str	r3, [r4, #36]	; 0x24
   1433c:	str	r3, [r4, #40]	; 0x28
   14340:	str	r3, [r4, #44]	; 0x2c
   14344:	str	r3, [r4, #48]	; 0x30
   14348:	str	r3, [r4, #52]	; 0x34
   1434c:	str	r0, [r4, #64]	; 0x40
   14350:	str	r3, [r4, #72]	; 0x48
   14354:	str	r3, [r4, #76]	; 0x4c
   14358:	str	r3, [r4, #84]	; 0x54
   1435c:	str	r2, [r4, #104]	; 0x68
   14360:	str	r3, [r4, #136]	; 0x88
   14364:	str	r3, [r4, #140]	; 0x8c
   14368:	str	r0, [r4, #176]	; 0xb0
   1436c:	str	r3, [r4, #184]	; 0xb8
   14370:	ldr	r4, [sp]
   14374:	add	sp, sp, #12
   14378:	pop	{pc}		; (ldr pc, [sp], #4)

0001437c <flatcc_create_context@@Base>:
   1437c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14380:	mov	r5, r0
   14384:	mov	r0, #560	; 0x230
   14388:	strd	r6, [sp, #8]
   1438c:	mov	r6, r1
   14390:	mov	r7, r3
   14394:	strd	r8, [sp, #16]
   14398:	mov	r8, r2
   1439c:	str	lr, [sp, #24]
   143a0:	sub	sp, sp, #12
   143a4:	bl	13f18 <malloc@plt>
   143a8:	subs	r4, r0, #0
   143ac:	beq	143d0 <flatcc_create_context@@Base+0x54>
   143b0:	mov	r9, #0
   143b4:	mov	r3, r8
   143b8:	mov	r2, r6
   143bc:	mov	r1, r5
   143c0:	stm	sp, {r7, r9}
   143c4:	bl	2ceec <__flatcc_fb_init_parser@@Base>
   143c8:	cmp	r0, r9
   143cc:	bne	143ec <flatcc_create_context@@Base+0x70>
   143d0:	mov	r0, r4
   143d4:	add	sp, sp, #12
   143d8:	ldrd	r4, [sp]
   143dc:	ldrd	r6, [sp, #8]
   143e0:	ldrd	r8, [sp, #16]
   143e4:	add	sp, sp, #24
   143e8:	pop	{pc}		; (ldr pc, [sp], #4)
   143ec:	mov	r0, r4
   143f0:	mov	r4, r9
   143f4:	bl	13eac <free@plt>
   143f8:	b	143d0 <flatcc_create_context@@Base+0x54>

000143fc <flatcc_parse_buffer@@Base>:
   143fc:	ldr	r3, [r0, #128]	; 0x80
   14400:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14404:	strd	r6, [sp, #8]
   14408:	mov	r6, r2
   1440c:	mov	r2, #1
   14410:	str	r8, [sp, #16]
   14414:	str	lr, [sp, #20]
   14418:	cmp	r3, #0
   1441c:	cmpne	r3, r6
   14420:	str	r2, [r0, #140]	; 0x8c
   14424:	movcc	r4, #1
   14428:	movcs	r4, #0
   1442c:	bcc	14490 <flatcc_parse_buffer@@Base+0x94>
   14430:	mov	r5, r0
   14434:	mov	r7, r1
   14438:	add	r1, r0, #352	; 0x160
   1443c:	add	r0, r0, #524	; 0x20c
   14440:	bl	274e8 <ptr_set_insert_item@@Base>
   14444:	mov	r3, r4
   14448:	mov	r2, r6
   1444c:	mov	r1, r7
   14450:	mov	r0, r5
   14454:	bl	2d1d0 <__flatcc_fb_parse@@Base>
   14458:	cmp	r0, #0
   1445c:	bne	14488 <flatcc_parse_buffer@@Base+0x8c>
   14460:	mov	r0, r5
   14464:	bl	332bc <__flatcc_fb_build_schema@@Base>
   14468:	adds	r0, r0, #0
   1446c:	movne	r0, #1
   14470:	rsb	r0, r0, #0
   14474:	ldrd	r4, [sp]
   14478:	ldrd	r6, [sp, #8]
   1447c:	ldr	r8, [sp, #16]
   14480:	add	sp, sp, #20
   14484:	pop	{pc}		; (ldr pc, [sp], #4)
   14488:	mvn	r0, #0
   1448c:	b	14474 <flatcc_parse_buffer@@Base+0x78>
   14490:	movw	r1, #63020	; 0xf62c
   14494:	movt	r1, #3
   14498:	bl	2b47c <__flatcc_fb_print_error@@Base>
   1449c:	mvn	r0, #0
   144a0:	b	14474 <flatcc_parse_buffer@@Base+0x78>

000144a4 <flatcc_parse_file@@Base>:
   144a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   144a8:	mov	r4, r0
   144ac:	mov	r0, r1
   144b0:	strd	r6, [sp, #8]
   144b4:	mov	r6, r1
   144b8:	strd	r8, [sp, #16]
   144bc:	strd	sl, [sp, #24]
   144c0:	add	fp, r4, #352	; 0x160
   144c4:	str	lr, [sp, #32]
   144c8:	sub	sp, sp, #28
   144cc:	bl	13f54 <strlen@plt>
   144d0:	mov	r9, r0
   144d4:	ldr	r0, [r4, #412]	; 0x19c
   144d8:	mov	r1, fp
   144dc:	mov	r2, #1
   144e0:	add	r0, r0, #32
   144e4:	bl	2a35c <fb_schema_table_insert_item@@Base>
   144e8:	cmp	r0, #0
   144ec:	beq	14514 <flatcc_parse_file@@Base+0x70>
   144f0:	mov	sl, #0
   144f4:	mov	r0, sl
   144f8:	add	sp, sp, #28
   144fc:	ldrd	r4, [sp]
   14500:	ldrd	r6, [sp, #8]
   14504:	ldrd	r8, [sp, #16]
   14508:	ldrd	sl, [sp, #24]
   1450c:	add	sp, sp, #32
   14510:	pop	{pc}		; (ldr pc, [sp], #4)
   14514:	ldr	r3, [r4, #552]	; 0x228
   14518:	cmp	r3, #0
   1451c:	str	r3, [sp, #8]
   14520:	str	r3, [sp, #12]
   14524:	beq	148c8 <flatcc_parse_file@@Base+0x424>
   14528:	ldr	r3, [r4, #336]	; 0x150
   1452c:	cmp	r3, #0
   14530:	ble	149c8 <flatcc_parse_file@@Base+0x524>
   14534:	movw	r8, #39472	; 0x9a30
   14538:	movt	r8, #4
   1453c:	mov	r5, #0
   14540:	mov	sl, #1
   14544:	ldr	r3, [r4, #328]	; 0x148
   14548:	ldr	r7, [r3, r5, lsl #2]
   1454c:	mov	r0, r7
   14550:	bl	13f54 <strlen@plt>
   14554:	mov	r1, r0
   14558:	mov	r3, r9
   1455c:	stm	sp, {r8, sl}
   14560:	mov	r0, r7
   14564:	mov	r2, r6
   14568:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   1456c:	subs	r7, r0, #0
   14570:	beq	149f0 <flatcc_parse_file@@Base+0x54c>
   14574:	add	r2, sp, #20
   14578:	ldr	r1, [r4, #128]	; 0x80
   1457c:	bl	2b128 <__flatcc_fb_read_file@@Base>
   14580:	cmp	r0, #0
   14584:	beq	14804 <flatcc_parse_file@@Base+0x360>
   14588:	mov	r1, r0
   1458c:	ldr	lr, [r4, #412]	; 0x19c
   14590:	mov	r3, #1
   14594:	mov	r0, r4
   14598:	ldr	r5, [sp, #20]
   1459c:	ldr	ip, [lr, #56]	; 0x38
   145a0:	mov	r2, r5
   145a4:	add	ip, ip, r5
   145a8:	str	ip, [lr, #56]	; 0x38
   145ac:	str	r7, [r4, #548]	; 0x224
   145b0:	bl	2d1d0 <__flatcc_fb_parse@@Base>
   145b4:	subs	sl, r0, #0
   145b8:	bne	144f0 <flatcc_parse_file@@Base+0x4c>
   145bc:	ldr	r7, [r4, #352]	; 0x160
   145c0:	cmp	r7, #0
   145c4:	beq	146a0 <flatcc_parse_file@@Base+0x1fc>
   145c8:	add	r3, r4, #128	; 0x80
   145cc:	movw	r9, #17020	; 0x427c
   145d0:	movt	r9, #1
   145d4:	str	sl, [sp, #8]
   145d8:	mov	sl, r3
   145dc:	ldrd	r0, [r7, #8]
   145e0:	bl	2a9a4 <__flatcc_fb_copy_path_n@@Base>
   145e4:	subs	r8, r0, #0
   145e8:	beq	149ac <flatcc_parse_file@@Base+0x508>
   145ec:	ldr	r3, [r4, #132]	; 0x84
   145f0:	ldr	r6, [r4, #412]	; 0x19c
   145f4:	ldr	r2, [r6, #52]	; 0x34
   145f8:	cmp	r2, r3
   145fc:	cmpge	r3, #0
   14600:	bgt	149d8 <flatcc_parse_file@@Base+0x534>
   14604:	ldr	r2, [r6, #48]	; 0x30
   14608:	ldr	r3, [r4, #136]	; 0x88
   1460c:	cmp	r2, r3
   14610:	cmpge	r3, #0
   14614:	bgt	149b0 <flatcc_parse_file@@Base+0x50c>
   14618:	mov	r0, #560	; 0x230
   1461c:	bl	13f18 <malloc@plt>
   14620:	subs	r5, r0, #0
   14624:	beq	14974 <flatcc_parse_file@@Base+0x4d0>
   14628:	ldr	ip, [r4, #12]
   1462c:	mov	r2, r8
   14630:	mov	r1, sl
   14634:	str	r6, [sp, #4]
   14638:	ldr	r3, [r4, #8]
   1463c:	str	ip, [sp]
   14640:	bl	2ceec <__flatcc_fb_init_parser@@Base>
   14644:	cmp	r0, #0
   14648:	bne	14984 <flatcc_parse_file@@Base+0x4e0>
   1464c:	add	r1, r5, #352	; 0x160
   14650:	add	r0, r6, #32
   14654:	bl	2a660 <fb_schema_table_find_item@@Base>
   14658:	cmp	r0, #0
   1465c:	beq	14928 <flatcc_parse_file@@Base+0x484>
   14660:	add	r0, r0, #172	; 0xac
   14664:	mov	r2, fp
   14668:	mov	r1, r9
   1466c:	bl	279c8 <ptr_set_visit@@Base>
   14670:	ldr	r6, [r5]
   14674:	mov	r0, r5
   14678:	bl	300dc <__flatcc_fb_clear_parser@@Base>
   1467c:	mov	r0, r5
   14680:	bl	13eac <free@plt>
   14684:	subs	r5, r6, #0
   14688:	bne	14670 <flatcc_parse_file@@Base+0x1cc>
   1468c:	mov	r0, r8
   14690:	bl	13eac <free@plt>
   14694:	ldr	r7, [r7]
   14698:	cmp	r7, #0
   1469c:	bne	145dc <flatcc_parse_file@@Base+0x138>
   146a0:	mov	r1, fp
   146a4:	mov	r2, #1
   146a8:	add	r0, r4, #524	; 0x20c
   146ac:	bl	274e8 <ptr_set_insert_item@@Base>
   146b0:	mov	r0, r4
   146b4:	bl	332bc <__flatcc_fb_build_schema@@Base>
   146b8:	subs	sl, r0, #0
   146bc:	bne	144f0 <flatcc_parse_file@@Base+0x4c>
   146c0:	ldr	r3, [sp, #12]
   146c4:	ldr	r2, [r4, #240]	; 0xf0
   146c8:	clz	r3, r3
   146cc:	lsr	r3, r3, #5
   146d0:	cmp	r2, #0
   146d4:	moveq	r3, #0
   146d8:	cmp	r3, #0
   146dc:	beq	144f0 <flatcc_parse_file@@Base+0x4c>
   146e0:	ldr	r3, [r4, #552]	; 0x228
   146e4:	cmp	r3, #0
   146e8:	bne	14a7c <flatcc_parse_file@@Base+0x5d8>
   146ec:	ldr	r1, [r4, #244]	; 0xf4
   146f0:	movw	r2, #39472	; 0x9a30
   146f4:	movt	r2, #4
   146f8:	ldr	r5, [r4, #344]	; 0x158
   146fc:	ldr	r6, [r4, #248]	; 0xf8
   14700:	ldr	lr, [r4, #512]	; 0x200
   14704:	cmp	r5, #0
   14708:	moveq	r5, r2
   1470c:	cmp	r1, #0
   14710:	movne	r0, r2
   14714:	beq	14a68 <flatcc_parse_file@@Base+0x5c4>
   14718:	cmp	r6, #0
   1471c:	movwne	r5, #39472	; 0x9a30
   14720:	movtne	r5, #4
   14724:	movne	r7, r5
   14728:	beq	14a40 <flatcc_parse_file@@Base+0x59c>
   1472c:	mov	r3, #1
   14730:	bl	2ac1c <__flatcc_fb_create_join_path@@Base>
   14734:	subs	r8, r0, #0
   14738:	beq	149ac <flatcc_parse_file@@Base+0x508>
   1473c:	mov	r0, r5
   14740:	mov	r2, r7
   14744:	mov	r1, r6
   14748:	mov	r3, #1
   1474c:	bl	2ac1c <__flatcc_fb_create_join_path@@Base>
   14750:	subs	r5, r0, #0
   14754:	beq	149ac <flatcc_parse_file@@Base+0x508>
   14758:	bl	2af90 <__flatcc_fb_create_make_path@@Base>
   1475c:	subs	r9, r0, #0
   14760:	beq	149ac <flatcc_parse_file@@Base+0x508>
   14764:	mov	r0, r5
   14768:	bl	13eac <free@plt>
   1476c:	movw	r1, #63264	; 0xf720
   14770:	movt	r1, #3
   14774:	mov	r0, r8
   14778:	bl	13ea0 <fopen@plt>
   1477c:	subs	r6, r0, #0
   14780:	beq	14a18 <flatcc_parse_file@@Base+0x574>
   14784:	movw	r1, #63316	; 0xf754
   14788:	movt	r1, #3
   1478c:	mov	r2, r9
   14790:	bl	13f60 <fprintf@plt>
   14794:	ldr	r4, [r4]
   14798:	cmp	r4, #0
   1479c:	beq	147dc <flatcc_parse_file@@Base+0x338>
   147a0:	movw	r7, #63320	; 0xf758
   147a4:	movt	r7, #3
   147a8:	ldr	r0, [r4, #548]	; 0x224
   147ac:	bl	2af90 <__flatcc_fb_create_make_path@@Base>
   147b0:	subs	r5, r0, #0
   147b4:	beq	149ac <flatcc_parse_file@@Base+0x508>
   147b8:	mov	r2, r5
   147bc:	mov	r1, r7
   147c0:	mov	r0, r6
   147c4:	bl	13f60 <fprintf@plt>
   147c8:	ldr	r4, [r4]
   147cc:	mov	r0, r5
   147d0:	bl	13eac <free@plt>
   147d4:	cmp	r4, #0
   147d8:	bne	147a8 <flatcc_parse_file@@Base+0x304>
   147dc:	mov	r1, r6
   147e0:	mov	r0, #10
   147e4:	bl	13fc0 <fputc@plt>
   147e8:	mov	r0, r8
   147ec:	bl	13eac <free@plt>
   147f0:	mov	r0, r9
   147f4:	bl	13eac <free@plt>
   147f8:	mov	r0, r6
   147fc:	bl	13fa8 <fclose@plt>
   14800:	b	144f4 <flatcc_parse_file@@Base+0x50>
   14804:	mov	r0, r7
   14808:	bl	13eac <free@plt>
   1480c:	ldr	r2, [sp, #20]
   14810:	ldr	r3, [r4, #128]	; 0x80
   14814:	cmp	r3, #0
   14818:	cmpne	r3, r2
   1481c:	bcc	148b0 <flatcc_parse_file@@Base+0x40c>
   14820:	ldr	r3, [r4, #336]	; 0x150
   14824:	add	r5, r5, #1
   14828:	cmp	r3, r5
   1482c:	bgt	14544 <flatcc_parse_file@@Base+0xa0>
   14830:	ldr	r3, [sp, #8]
   14834:	cmp	r3, #0
   14838:	beq	1490c <flatcc_parse_file@@Base+0x468>
   1483c:	ldr	r3, [r4, #552]	; 0x228
   14840:	mov	r5, r3
   14844:	str	r3, [sp, #8]
   14848:	mov	r0, r5
   1484c:	bl	13f54 <strlen@plt>
   14850:	mov	r1, r0
   14854:	mov	r0, r5
   14858:	bl	2afb8 <__flatcc_fb_find_basename@@Base>
   1485c:	mov	ip, #1
   14860:	mov	r1, r0
   14864:	mov	r3, r9
   14868:	mov	r0, r5
   1486c:	mov	r2, r6
   14870:	stm	sp, {r8, ip}
   14874:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   14878:	subs	r7, r0, #0
   1487c:	beq	149ac <flatcc_parse_file@@Base+0x508>
   14880:	add	r2, sp, #20
   14884:	ldr	r1, [r4, #128]	; 0x80
   14888:	bl	2b128 <__flatcc_fb_read_file@@Base>
   1488c:	subs	r1, r0, #0
   14890:	bne	1458c <flatcc_parse_file@@Base+0xe8>
   14894:	mov	r0, r7
   14898:	bl	13eac <free@plt>
   1489c:	ldr	r2, [sp, #20]
   148a0:	ldr	r3, [r4, #128]	; 0x80
   148a4:	cmp	r3, #0
   148a8:	cmpne	r3, r2
   148ac:	bcs	1490c <flatcc_parse_file@@Base+0x468>
   148b0:	mov	r0, r4
   148b4:	movw	r1, #63020	; 0xf62c
   148b8:	movt	r1, #3
   148bc:	mvn	sl, #0
   148c0:	bl	2b47c <__flatcc_fb_print_error@@Base>
   148c4:	b	144f4 <flatcc_parse_file@@Base+0x50>
   148c8:	add	r2, sp, #20
   148cc:	mov	r0, r6
   148d0:	ldr	r1, [r4, #128]	; 0x80
   148d4:	bl	2b128 <__flatcc_fb_read_file@@Base>
   148d8:	subs	r1, r0, #0
   148dc:	bne	14994 <flatcc_parse_file@@Base+0x4f0>
   148e0:	ldr	r1, [sp, #20]
   148e4:	ldr	r3, [r4, #412]	; 0x19c
   148e8:	ldr	r2, [r4, #128]	; 0x80
   148ec:	ldr	r3, [r3, #56]	; 0x38
   148f0:	add	r3, r3, r1
   148f4:	cmp	r2, #0
   148f8:	cmpne	r3, r2
   148fc:	bhi	148b0 <flatcc_parse_file@@Base+0x40c>
   14900:	ldr	r3, [r4, #336]	; 0x150
   14904:	cmp	r3, #0
   14908:	bgt	14534 <flatcc_parse_file@@Base+0x90>
   1490c:	mov	r2, r6
   14910:	mov	r0, r4
   14914:	movw	r1, #63064	; 0xf658
   14918:	movt	r1, #3
   1491c:	bl	2b47c <__flatcc_fb_print_error@@Base>
   14920:	mvn	sl, #0
   14924:	b	144f4 <flatcc_parse_file@@Base+0x50>
   14928:	ldrd	r2, [r6, #48]	; 0x30
   1492c:	mov	r1, r8
   14930:	ldr	r0, [r4]
   14934:	str	r5, [r4]
   14938:	ldr	ip, [r4, #548]	; 0x224
   1493c:	add	r3, r3, #1
   14940:	add	r2, r2, #1
   14944:	str	r0, [r5]
   14948:	mov	r0, r5
   1494c:	str	ip, [r5, #552]	; 0x228
   14950:	strd	r2, [r6, #48]	; 0x30
   14954:	bl	144a4 <flatcc_parse_file@@Base>
   14958:	cmp	r0, #0
   1495c:	bne	14974 <flatcc_parse_file@@Base+0x4d0>
   14960:	add	r0, r5, #524	; 0x20c
   14964:	mov	r2, fp
   14968:	mov	r1, r9
   1496c:	bl	279c8 <ptr_set_visit@@Base>
   14970:	b	1468c <flatcc_parse_file@@Base+0x1e8>
   14974:	ldr	sl, [sp, #8]
   14978:	mov	r0, r8
   1497c:	bl	13eac <free@plt>
   14980:	b	144f4 <flatcc_parse_file@@Base+0x50>
   14984:	mov	r0, r5
   14988:	ldr	sl, [sp, #8]
   1498c:	bl	13eac <free@plt>
   14990:	b	14978 <flatcc_parse_file@@Base+0x4d4>
   14994:	mov	r0, r6
   14998:	str	r1, [sp, #8]
   1499c:	bl	2aa04 <__flatcc_fb_copy_path@@Base>
   149a0:	subs	r7, r0, #0
   149a4:	ldr	r1, [sp, #8]
   149a8:	bne	1458c <flatcc_parse_file@@Base+0xe8>
   149ac:	bl	14288 <_start@@Base+0xfc>
   149b0:	mov	r0, r4
   149b4:	movw	r1, #63136	; 0xf6a0
   149b8:	movt	r1, #3
   149bc:	ldr	sl, [sp, #8]
   149c0:	bl	2b47c <__flatcc_fb_print_error@@Base>
   149c4:	b	14978 <flatcc_parse_file@@Base+0x4d4>
   149c8:	movw	r8, #39472	; 0x9a30
   149cc:	movt	r8, #4
   149d0:	ldr	r5, [sp, #8]
   149d4:	b	14848 <flatcc_parse_file@@Base+0x3a4>
   149d8:	mov	r0, r4
   149dc:	movw	r1, #63104	; 0xf680
   149e0:	movt	r1, #3
   149e4:	ldr	sl, [sp, #8]
   149e8:	bl	2b47c <__flatcc_fb_print_error@@Base>
   149ec:	b	14978 <flatcc_parse_file@@Base+0x4d4>
   149f0:	movw	r3, #41128	; 0xa0a8
   149f4:	movt	r3, #6
   149f8:	movw	r0, #62968	; 0xf5f8
   149fc:	movt	r0, #3
   14a00:	ldr	r3, [r3]
   14a04:	mov	r2, #34	; 0x22
   14a08:	mov	r1, #1
   14a0c:	bl	13ef4 <fwrite@plt>
   14a10:	mov	r0, #1
   14a14:	bl	13f48 <exit@plt>
   14a18:	mov	r2, r8
   14a1c:	mov	r0, r4
   14a20:	movw	r1, #63268	; 0xf724
   14a24:	movt	r1, #3
   14a28:	bl	2b47c <__flatcc_fb_print_error@@Base>
   14a2c:	mov	r0, r8
   14a30:	bl	13eac <free@plt>
   14a34:	mov	r0, r9
   14a38:	bl	13eac <free@plt>
   14a3c:	b	144f4 <flatcc_parse_file@@Base+0x50>
   14a40:	ldr	r7, [r4, #308]	; 0x134
   14a44:	movw	ip, #63004	; 0xf61c
   14a48:	movt	ip, #3
   14a4c:	movw	r3, #25444	; 0x6364
   14a50:	movt	r3, #5
   14a54:	mov	r6, lr
   14a58:	cmp	r7, #0
   14a5c:	movne	r7, ip
   14a60:	moveq	r7, r3
   14a64:	b	1472c <flatcc_parse_file@@Base+0x288>
   14a68:	movw	r2, #63056	; 0xf650
   14a6c:	movt	r2, #3
   14a70:	mov	r0, r5
   14a74:	mov	r1, lr
   14a78:	b	14718 <flatcc_parse_file@@Base+0x274>
   14a7c:	movw	r3, #62940	; 0xf5dc
   14a80:	movt	r3, #3
   14a84:	movw	r1, #63168	; 0xf6c0
   14a88:	movt	r1, #3
   14a8c:	movw	r0, #63240	; 0xf708
   14a90:	movt	r0, #3
   14a94:	mov	r2, #220	; 0xdc
   14a98:	bl	14014 <__assert_fail@plt>

00014a9c <flatcc_generate_binary_schema_to_buffer@@Base>:
   14a9c:	push	{lr}		; (str lr, [sp, #-4]!)
   14aa0:	sub	sp, sp, #12
   14aa4:	mov	ip, r0
   14aa8:	add	r3, sp, #4
   14aac:	add	r0, r0, #128	; 0x80
   14ab0:	str	r2, [sp, #4]
   14ab4:	mov	r2, r1
   14ab8:	add	r1, ip, #352	; 0x160
   14abc:	bl	2632c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   14ac0:	cmp	r0, #0
   14ac4:	ldrne	r0, [sp, #4]
   14ac8:	mvneq	r0, #0
   14acc:	add	sp, sp, #12
   14ad0:	pop	{pc}		; (ldr pc, [sp], #4)

00014ad4 <flatcc_generate_binary_schema@@Base>:
   14ad4:	mov	r3, r0
   14ad8:	mov	r2, r1
   14adc:	add	r0, r0, #128	; 0x80
   14ae0:	add	r1, r3, #352	; 0x160
   14ae4:	b	263b4 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00014ae8 <flatcc_generate_files@@Base>:
   14ae8:	strd	r4, [sp, #-16]!
   14aec:	subs	r5, r0, #0
   14af0:	str	r6, [sp, #8]
   14af4:	str	lr, [sp, #12]
   14af8:	sub	sp, sp, #232	; 0xe8
   14afc:	beq	14bec <flatcc_generate_files@@Base+0x104>
   14b00:	ldr	r2, [r5, #108]	; 0x6c
   14b04:	cmp	r2, #0
   14b08:	bne	14bec <flatcc_generate_files@@Base+0x104>
   14b0c:	mov	r4, r5
   14b10:	b	14b18 <flatcc_generate_files@@Base+0x30>
   14b14:	mov	r4, r3
   14b18:	ldr	r3, [r4]
   14b1c:	str	r2, [r4, #4]
   14b20:	mov	r2, r4
   14b24:	cmp	r3, #0
   14b28:	bne	14b14 <flatcc_generate_files@@Base+0x2c>
   14b2c:	ldr	r3, [r5, #308]	; 0x134
   14b30:	add	r6, r5, #128	; 0x80
   14b34:	cmp	r3, #0
   14b38:	bne	14bd8 <flatcc_generate_files@@Base+0xf0>
   14b3c:	mov	r1, r6
   14b40:	mov	r0, sp
   14b44:	bl	14e14 <__flatcc_fb_init_output_c@@Base>
   14b48:	cmp	r0, #0
   14b4c:	bne	14bec <flatcc_generate_files@@Base+0x104>
   14b50:	ldr	r3, [r5, #256]	; 0x100
   14b54:	cmp	r3, #0
   14b58:	beq	14bf4 <flatcc_generate_files@@Base+0x10c>
   14b5c:	ldr	r6, [r5, #120]	; 0x78
   14b60:	cmp	r6, #0
   14b64:	beq	14b84 <flatcc_generate_files@@Base+0x9c>
   14b68:	ldr	r3, [r5, #300]	; 0x12c
   14b6c:	cmp	r3, #0
   14b70:	beq	14c08 <flatcc_generate_files@@Base+0x120>
   14b74:	ldr	r3, [r4, #108]	; 0x6c
   14b78:	cmp	r3, #0
   14b7c:	beq	14ba4 <flatcc_generate_files@@Base+0xbc>
   14b80:	mov	r6, #1
   14b84:	mov	r0, sp
   14b88:	bl	14dd4 <__flatcc_fb_end_output_c@@Base>
   14b8c:	mov	r0, r6
   14b90:	add	sp, sp, #232	; 0xe8
   14b94:	ldrd	r4, [sp]
   14b98:	ldr	r6, [sp, #8]
   14b9c:	add	sp, sp, #12
   14ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ba4:	add	r1, r4, #352	; 0x160
   14ba8:	mov	r0, sp
   14bac:	bl	155f8 <__flatcc_fb_codegen_c@@Base>
   14bb0:	ldr	r4, [r4, #4]
   14bb4:	clz	r3, r0
   14bb8:	lsr	r3, r3, #5
   14bbc:	cmp	r4, #0
   14bc0:	moveq	r3, #0
   14bc4:	cmp	r3, #0
   14bc8:	bne	14b74 <flatcc_generate_files@@Base+0x8c>
   14bcc:	adds	r6, r0, #0
   14bd0:	movne	r6, #1
   14bd4:	b	14b84 <flatcc_generate_files@@Base+0x9c>
   14bd8:	add	r1, r5, #352	; 0x160
   14bdc:	mov	r0, r6
   14be0:	bl	26430 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   14be4:	cmp	r0, #0
   14be8:	beq	14b3c <flatcc_generate_files@@Base+0x54>
   14bec:	mvn	r6, #0
   14bf0:	b	14b8c <flatcc_generate_files@@Base+0xa4>
   14bf4:	mov	r0, sp
   14bf8:	bl	153c0 <__flatcc_fb_codegen_common_c@@Base>
   14bfc:	subs	r6, r0, #0
   14c00:	beq	14b5c <flatcc_generate_files@@Base+0x74>
   14c04:	b	14b84 <flatcc_generate_files@@Base+0x9c>
   14c08:	add	r1, r5, #352	; 0x160
   14c0c:	mov	r0, sp
   14c10:	bl	155f8 <__flatcc_fb_codegen_c@@Base>
   14c14:	mov	r6, r0
   14c18:	b	14b84 <flatcc_generate_files@@Base+0x9c>

00014c1c <flatcc_destroy_context@@Base>:
   14c1c:	strd	r4, [sp, #-16]!
   14c20:	subs	r4, r0, #0
   14c24:	str	r6, [sp, #8]
   14c28:	str	lr, [sp, #12]
   14c2c:	beq	14c4c <flatcc_destroy_context@@Base+0x30>
   14c30:	ldr	r5, [r4]
   14c34:	mov	r0, r4
   14c38:	bl	300dc <__flatcc_fb_clear_parser@@Base>
   14c3c:	mov	r0, r4
   14c40:	bl	13eac <free@plt>
   14c44:	subs	r4, r5, #0
   14c48:	bne	14c30 <flatcc_destroy_context@@Base+0x14>
   14c4c:	ldrd	r4, [sp]
   14c50:	ldr	r6, [sp, #8]
   14c54:	add	sp, sp, #12
   14c58:	pop	{pc}		; (ldr pc, [sp], #4)
   14c5c:	mov	r0, r1
   14c60:	b	13eac <free@plt>
   14c64:	movw	r3, #41128	; 0xa0a8
   14c68:	movt	r3, #6
   14c6c:	str	r4, [sp, #-8]!
   14c70:	movw	r0, #62968	; 0xf5f8
   14c74:	movt	r0, #3
   14c78:	ldr	r3, [r3]
   14c7c:	mov	r2, #34	; 0x22
   14c80:	mov	r1, #1
   14c84:	str	lr, [sp, #4]
   14c88:	bl	13ef4 <fwrite@plt>
   14c8c:	mov	r0, #1
   14c90:	bl	13f48 <exit@plt>

00014c94 <__flatcc_fb_open_output_file@@Base>:
   14c94:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14c98:	strd	r6, [sp, #8]
   14c9c:	mov	r6, r0
   14ca0:	mov	r7, r1
   14ca4:	ldr	r0, [r0, #212]	; 0xd4
   14ca8:	strd	r8, [sp, #16]
   14cac:	mov	r9, r2
   14cb0:	mov	r8, r3
   14cb4:	str	lr, [sp, #24]
   14cb8:	sub	sp, sp, #12
   14cbc:	ldr	r5, [r0, #216]	; 0xd8
   14cc0:	subs	r0, r5, #0
   14cc4:	beq	14cf8 <__flatcc_fb_open_output_file@@Base+0x64>
   14cc8:	bl	13f54 <strlen@plt>
   14ccc:	ldr	r4, [r6, #204]	; 0xcc
   14cd0:	cmp	r4, #0
   14cd4:	movne	r4, #0
   14cd8:	beq	14d10 <__flatcc_fb_open_output_file@@Base+0x7c>
   14cdc:	mov	r0, r4
   14ce0:	add	sp, sp, #12
   14ce4:	ldrd	r4, [sp]
   14ce8:	ldrd	r6, [sp, #8]
   14cec:	ldrd	r8, [sp, #16]
   14cf0:	add	sp, sp, #24
   14cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   14cf8:	ldr	r4, [r6, #204]	; 0xcc
   14cfc:	movw	r5, #39472	; 0x9a30
   14d00:	movt	r5, #4
   14d04:	cmp	r4, #0
   14d08:	movne	r4, #0
   14d0c:	bne	14cdc <__flatcc_fb_open_output_file@@Base+0x48>
   14d10:	mov	ip, #1
   14d14:	mov	r1, r0
   14d18:	mov	r3, r9
   14d1c:	mov	r0, r5
   14d20:	mov	r2, r7
   14d24:	stm	sp, {r8, ip}
   14d28:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   14d2c:	subs	r5, r0, #0
   14d30:	beq	14d7c <__flatcc_fb_open_output_file@@Base+0xe8>
   14d34:	movw	r1, #63264	; 0xf720
   14d38:	movt	r1, #3
   14d3c:	bl	13ea0 <fopen@plt>
   14d40:	cmp	r0, #0
   14d44:	str	r0, [r6, #204]	; 0xcc
   14d48:	beq	14d58 <__flatcc_fb_open_output_file@@Base+0xc4>
   14d4c:	mov	r0, r5
   14d50:	bl	13eac <free@plt>
   14d54:	b	14cdc <__flatcc_fb_open_output_file@@Base+0x48>
   14d58:	movw	r3, #41128	; 0xa0a8
   14d5c:	movt	r3, #6
   14d60:	movw	r1, #63324	; 0xf75c
   14d64:	movt	r1, #3
   14d68:	ldr	r0, [r3]
   14d6c:	mov	r2, r5
   14d70:	mvn	r4, #0
   14d74:	bl	13f60 <fprintf@plt>
   14d78:	b	14d4c <__flatcc_fb_open_output_file@@Base+0xb8>
   14d7c:	bl	14c64 <flatcc_destroy_context@@Base+0x48>

00014d80 <__flatcc_fb_close_output_file@@Base>:
   14d80:	ldr	r3, [r0, #212]	; 0xd4
   14d84:	ldr	r2, [r3, #124]	; 0x7c
   14d88:	cmp	r2, #0
   14d8c:	bxne	lr
   14d90:	strd	r4, [sp, #-16]!
   14d94:	ldr	r5, [r3, #108]	; 0x6c
   14d98:	str	r6, [sp, #8]
   14d9c:	str	lr, [sp, #12]
   14da0:	cmp	r5, #0
   14da4:	bne	14dc4 <__flatcc_fb_close_output_file@@Base+0x44>
   14da8:	ldr	r3, [r0, #204]	; 0xcc
   14dac:	cmp	r3, #0
   14db0:	beq	14dc4 <__flatcc_fb_close_output_file@@Base+0x44>
   14db4:	mov	r4, r0
   14db8:	mov	r0, r3
   14dbc:	bl	13fa8 <fclose@plt>
   14dc0:	str	r5, [r4, #204]	; 0xcc
   14dc4:	ldrd	r4, [sp]
   14dc8:	ldr	r6, [sp, #8]
   14dcc:	add	sp, sp, #12
   14dd0:	pop	{pc}		; (ldr pc, [sp], #4)

00014dd4 <__flatcc_fb_end_output_c@@Base>:
   14dd4:	movw	r3, #41132	; 0xa0ac
   14dd8:	movt	r3, #6
   14ddc:	str	r4, [sp, #-8]!
   14de0:	mov	r4, r0
   14de4:	ldr	r3, [r3]
   14de8:	ldr	r0, [r0, #204]	; 0xcc
   14dec:	str	lr, [sp, #4]
   14df0:	cmp	r3, r0
   14df4:	cmpne	r0, #0
   14df8:	beq	14e00 <__flatcc_fb_end_output_c@@Base+0x2c>
   14dfc:	bl	13fa8 <fclose@plt>
   14e00:	mov	r3, #0
   14e04:	str	r3, [r4, #204]	; 0xcc
   14e08:	ldr	r4, [sp]
   14e0c:	add	sp, sp, #4
   14e10:	pop	{pc}		; (ldr pc, [sp], #4)

00014e14 <__flatcc_fb_init_output_c@@Base>:
   14e14:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14e18:	mov	r5, r1
   14e1c:	movw	ip, #63264	; 0xf720
   14e20:	movt	ip, #3
   14e24:	movw	r3, #39472	; 0x9a30
   14e28:	movt	r3, #4
   14e2c:	str	lr, [sp, #28]
   14e30:	mov	r2, #232	; 0xe8
   14e34:	ldr	lr, [r1, #128]	; 0x80
   14e38:	mov	r4, r0
   14e3c:	str	sl, [sp, #24]
   14e40:	ldr	sl, [r1, #216]	; 0xd8
   14e44:	mov	r1, #0
   14e48:	strd	r6, [sp, #8]
   14e4c:	strd	r8, [sp, #16]
   14e50:	movw	r8, #63360	; 0xf780
   14e54:	movt	r8, #3
   14e58:	cmp	lr, r1
   14e5c:	moveq	r8, ip
   14e60:	cmp	sl, r1
   14e64:	moveq	sl, r3
   14e68:	bl	13f78 <memset@plt>
   14e6c:	ldr	r7, [r5, #196]	; 0xc4
   14e70:	str	r5, [r4, #212]	; 0xd4
   14e74:	cmp	r7, #0
   14e78:	beq	14f98 <__flatcc_fb_init_output_c@@Base+0x184>
   14e7c:	mov	r0, r7
   14e80:	bl	13f54 <strlen@plt>
   14e84:	cmp	r0, #100	; 0x64
   14e88:	mov	r6, r0
   14e8c:	bhi	14fe0 <__flatcc_fb_init_output_c@@Base+0x1cc>
   14e90:	mov	r1, r7
   14e94:	mov	r2, #100	; 0x64
   14e98:	mov	r0, r4
   14e9c:	bl	13f84 <strncpy@plt>
   14ea0:	mov	r3, #0
   14ea4:	cmp	r6, r3
   14ea8:	strb	r3, [r4, #100]	; 0x64
   14eac:	bne	14f80 <__flatcc_fb_init_output_c@@Base+0x16c>
   14eb0:	mov	r7, r4
   14eb4:	ldrb	r9, [r7], #102	; 0x66
   14eb8:	cmp	r9, #0
   14ebc:	beq	14ee0 <__flatcc_fb_init_output_c@@Base+0xcc>
   14ec0:	bl	13f30 <__ctype_toupper_loc@plt>
   14ec4:	mov	r3, r4
   14ec8:	ldr	r2, [r0]
   14ecc:	ldr	r2, [r2, r9, lsl #2]
   14ed0:	strb	r2, [r7], #1
   14ed4:	ldrb	r9, [r3, #1]!
   14ed8:	cmp	r9, #0
   14edc:	bne	14ec8 <__flatcc_fb_init_output_c@@Base+0xb4>
   14ee0:	mov	r3, #0
   14ee4:	add	r6, r4, r6
   14ee8:	strb	r3, [r7]
   14eec:	strb	r3, [r6, #102]	; 0x66
   14ef0:	ldr	r6, [r5, #108]	; 0x6c
   14ef4:	ldr	r2, [r5, #176]	; 0xb0
   14ef8:	cmp	r6, r3
   14efc:	str	r2, [r4, #224]	; 0xe0
   14f00:	bne	14f68 <__flatcc_fb_init_output_c@@Base+0x154>
   14f04:	ldr	r3, [r4, #212]	; 0xd4
   14f08:	ldr	r1, [r3, #124]	; 0x7c
   14f0c:	cmp	r1, #0
   14f10:	beq	14f4c <__flatcc_fb_init_output_c@@Base+0x138>
   14f14:	mov	r0, sl
   14f18:	movw	r2, #39472	; 0x9a30
   14f1c:	movt	r2, #4
   14f20:	mov	r3, #1
   14f24:	bl	2ac1c <__flatcc_fb_create_join_path@@Base>
   14f28:	subs	r5, r0, #0
   14f2c:	beq	15004 <__flatcc_fb_init_output_c@@Base+0x1f0>
   14f30:	mov	r1, r8
   14f34:	bl	13ea0 <fopen@plt>
   14f38:	cmp	r0, #0
   14f3c:	str	r0, [r4, #204]	; 0xcc
   14f40:	beq	14fbc <__flatcc_fb_init_output_c@@Base+0x1a8>
   14f44:	mov	r0, r5
   14f48:	bl	13eac <free@plt>
   14f4c:	mov	r0, r6
   14f50:	ldrd	r4, [sp]
   14f54:	ldrd	r6, [sp, #8]
   14f58:	ldrd	r8, [sp, #16]
   14f5c:	ldr	sl, [sp, #24]
   14f60:	add	sp, sp, #28
   14f64:	pop	{pc}		; (ldr pc, [sp], #4)
   14f68:	movw	r2, #41132	; 0xa0ac
   14f6c:	movt	r2, #6
   14f70:	ldr	r2, [r2]
   14f74:	mov	r6, r3
   14f78:	str	r2, [r4, #204]	; 0xcc
   14f7c:	b	14f4c <__flatcc_fb_init_output_c@@Base+0x138>
   14f80:	add	r1, r6, #1
   14f84:	mov	r2, #95	; 0x5f
   14f88:	mov	r3, #0
   14f8c:	strb	r2, [r4, r6]
   14f90:	strb	r3, [r4, r1]
   14f94:	b	14eb0 <__flatcc_fb_init_output_c@@Base+0x9c>
   14f98:	movw	r1, #63420	; 0xf7bc
   14f9c:	movt	r1, #3
   14fa0:	mov	r2, #100	; 0x64
   14fa4:	mov	r0, r4
   14fa8:	bl	13f84 <strncpy@plt>
   14fac:	mov	r6, #11
   14fb0:	mov	r1, #12
   14fb4:	strb	r7, [r4, #100]	; 0x64
   14fb8:	b	14f84 <__flatcc_fb_init_output_c@@Base+0x170>
   14fbc:	movw	r3, #41128	; 0xa0a8
   14fc0:	movt	r3, #6
   14fc4:	movw	r1, #63324	; 0xf75c
   14fc8:	movt	r1, #3
   14fcc:	ldr	r0, [r3]
   14fd0:	mov	r2, r5
   14fd4:	mvn	r6, #0
   14fd8:	bl	13f60 <fprintf@plt>
   14fdc:	b	14f44 <__flatcc_fb_init_output_c@@Base+0x130>
   14fe0:	movw	r3, #41128	; 0xa0a8
   14fe4:	movt	r3, #6
   14fe8:	movw	r1, #63364	; 0xf784
   14fec:	movt	r1, #3
   14ff0:	ldr	r0, [r3]
   14ff4:	mov	r2, #100	; 0x64
   14ff8:	mvn	r6, #0
   14ffc:	bl	13f60 <fprintf@plt>
   15000:	b	14f4c <__flatcc_fb_init_output_c@@Base+0x138>
   15004:	bl	14c64 <flatcc_destroy_context@@Base+0x48>

00015008 <__flatcc_fb_gen_c_includes@@Base>:
   15008:	ldr	r3, [r0, #208]	; 0xd0
   1500c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15010:	ldr	r5, [r3]
   15014:	strd	r6, [sp, #8]
   15018:	mov	r7, r0
   1501c:	mov	r0, #0
   15020:	strd	r8, [sp, #16]
   15024:	mov	r9, r1
   15028:	mov	r1, #0
   1502c:	strd	sl, [sp, #24]
   15030:	mov	sl, r2
   15034:	mov	r2, #0
   15038:	str	lr, [sp, #32]
   1503c:	sub	sp, sp, #28
   15040:	strd	r0, [sp, #8]
   15044:	ldr	r0, [r3, #164]	; 0xa4
   15048:	mov	r3, #0
   1504c:	strd	r2, [sp, #16]
   15050:	bl	2aa04 <__flatcc_fb_copy_path@@Base>
   15054:	mov	r1, r0
   15058:	mov	r2, #1
   1505c:	add	r0, sp, #8
   15060:	bl	26b28 <str_set_insert_item@@Base>
   15064:	cmp	r5, #0
   15068:	beq	150f8 <__flatcc_fb_gen_c_includes@@Base+0xf0>
   1506c:	movw	r8, #63432	; 0xf7c8
   15070:	movt	r8, #3
   15074:	ldr	r3, [r7, #212]	; 0xd4
   15078:	ldrd	r0, [r5, #8]
   1507c:	ldr	r2, [r3, #96]	; 0x60
   15080:	bl	2b02c <__flatcc_fb_create_basename@@Base>
   15084:	subs	r6, r0, #0
   15088:	beq	1514c <__flatcc_fb_gen_c_includes@@Base+0x144>
   1508c:	ldr	r5, [r5]
   15090:	bl	2aa04 <__flatcc_fb_copy_path@@Base>
   15094:	subs	fp, r0, #0
   15098:	beq	1514c <__flatcc_fb_gen_c_includes@@Base+0x144>
   1509c:	ldrb	r4, [fp]
   150a0:	cmp	r4, #0
   150a4:	beq	150c8 <__flatcc_fb_gen_c_includes@@Base+0xc0>
   150a8:	bl	13f30 <__ctype_toupper_loc@plt>
   150ac:	mov	r3, fp
   150b0:	ldr	r2, [r0]
   150b4:	ldr	r2, [r2, r4, lsl #2]
   150b8:	strb	r2, [r3]
   150bc:	ldrb	r4, [r3, #1]!
   150c0:	cmp	r4, #0
   150c4:	bne	150b0 <__flatcc_fb_gen_c_includes@@Base+0xa8>
   150c8:	mov	r2, #1
   150cc:	mov	r1, fp
   150d0:	add	r0, sp, #8
   150d4:	bl	26b28 <str_set_insert_item@@Base>
   150d8:	cmp	r0, #0
   150dc:	beq	15128 <__flatcc_fb_gen_c_includes@@Base+0x120>
   150e0:	mov	r0, fp
   150e4:	bl	13eac <free@plt>
   150e8:	mov	r0, r6
   150ec:	bl	13eac <free@plt>
   150f0:	cmp	r5, #0
   150f4:	bne	15074 <__flatcc_fb_gen_c_includes@@Base+0x6c>
   150f8:	add	r0, sp, #8
   150fc:	mov	r2, #0
   15100:	movw	r1, #19548	; 0x4c5c
   15104:	movt	r1, #1
   15108:	bl	269f4 <str_set_destroy@@Base>
   1510c:	add	sp, sp, #28
   15110:	ldrd	r4, [sp]
   15114:	ldrd	r6, [sp, #8]
   15118:	ldrd	r8, [sp, #16]
   1511c:	ldrd	sl, [sp, #24]
   15120:	add	sp, sp, #32
   15124:	pop	{pc}		; (ldr pc, [sp], #4)
   15128:	mov	r2, fp
   1512c:	mov	r3, sl
   15130:	stm	sp, {r6, r9}
   15134:	mov	r1, r8
   15138:	ldr	r0, [r7, #204]	; 0xcc
   1513c:	bl	13f60 <fprintf@plt>
   15140:	mov	r0, r6
   15144:	bl	13eac <free@plt>
   15148:	b	150f0 <__flatcc_fb_gen_c_includes@@Base+0xe8>
   1514c:	movw	r3, #41128	; 0xa0a8
   15150:	movt	r3, #6
   15154:	movw	r0, #62968	; 0xf5f8
   15158:	movt	r0, #3
   1515c:	ldr	r3, [r3]
   15160:	mov	r2, #34	; 0x22
   15164:	mov	r1, #1
   15168:	bl	13ef4 <fwrite@plt>
   1516c:	mov	r0, #1
   15170:	bl	13f48 <exit@plt>

00015174 <__flatcc_fb_copy_scope@@Base>:
   15174:	ldr	r3, [r0]
   15178:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1517c:	ldr	r4, [r0, #24]
   15180:	strd	r6, [sp, #8]
   15184:	str	r8, [sp, #16]
   15188:	cmp	r3, #0
   1518c:	str	lr, [sp, #20]
   15190:	mov	ip, r4
   15194:	mov	r6, r4
   15198:	beq	151b8 <__flatcc_fb_copy_scope@@Base+0x44>
   1519c:	ldr	r2, [r3, #4]
   151a0:	ldr	r3, [r3]
   151a4:	ldr	r2, [r2, #4]
   151a8:	cmp	r3, #0
   151ac:	add	r2, r2, #1
   151b0:	add	ip, ip, r2
   151b4:	bne	1519c <__flatcc_fb_copy_scope@@Base+0x28>
   151b8:	cmp	ip, #101	; 0x65
   151bc:	movhi	r3, #0
   151c0:	mvnhi	r4, #0
   151c4:	strbhi	r3, [r1]
   151c8:	bhi	1522c <__flatcc_fb_copy_scope@@Base+0xb8>
   151cc:	mov	r5, r0
   151d0:	mov	r7, r1
   151d4:	mov	r0, r1
   151d8:	mov	r2, r4
   151dc:	ldr	r1, [r5, #20]
   151e0:	bl	13eb8 <memcpy@plt>
   151e4:	ldr	r5, [r5]
   151e8:	cmp	r5, #0
   151ec:	beq	15224 <__flatcc_fb_copy_scope@@Base+0xb0>
   151f0:	mov	r8, #95	; 0x5f
   151f4:	ldr	r3, [r5, #4]
   151f8:	add	r0, r7, r6
   151fc:	ldm	r3, {r1, r4}
   15200:	mov	r2, r4
   15204:	add	r4, r4, r6
   15208:	bl	13eb8 <memcpy@plt>
   1520c:	strb	r8, [r7, r4]
   15210:	add	r6, r4, #1
   15214:	ldr	r5, [r5]
   15218:	cmp	r5, #0
   1521c:	bne	151f4 <__flatcc_fb_copy_scope@@Base+0x80>
   15220:	mov	r4, r6
   15224:	mov	r3, #0
   15228:	strb	r3, [r7, r6]
   1522c:	mov	r0, r4
   15230:	ldrd	r4, [sp]
   15234:	ldrd	r6, [sp, #8]
   15238:	ldr	r8, [sp, #16]
   1523c:	add	sp, sp, #20
   15240:	pop	{pc}		; (ldr pc, [sp], #4)

00015244 <__flatcc_fb_scoped_symbol_name@@Base>:
   15244:	ldr	r3, [r2, #204]	; 0xcc
   15248:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1524c:	mov	r4, r2
   15250:	strd	r6, [sp, #8]
   15254:	strd	r8, [sp, #16]
   15258:	str	sl, [sp, #24]
   1525c:	cmp	r3, r0
   15260:	str	lr, [sp, #28]
   15264:	ldr	r7, [r1, #4]
   15268:	beq	15384 <__flatcc_fb_scoped_symbol_name@@Base+0x140>
   1526c:	mov	r6, r0
   15270:	ldr	r3, [r0]
   15274:	ldr	r5, [r0, #24]
   15278:	cmp	r3, #0
   1527c:	mov	r1, r5
   15280:	mov	r8, r5
   15284:	beq	152a4 <__flatcc_fb_scoped_symbol_name@@Base+0x60>
   15288:	ldr	r2, [r3, #4]
   1528c:	ldr	r3, [r3]
   15290:	ldr	r2, [r2, #4]
   15294:	cmp	r3, #0
   15298:	add	r2, r2, #1
   1529c:	add	r1, r1, r2
   152a0:	bne	15288 <__flatcc_fb_scoped_symbol_name@@Base+0x44>
   152a4:	cmp	r1, #101	; 0x65
   152a8:	movhi	r3, #0
   152ac:	strbhi	r3, [r4]
   152b0:	bhi	1535c <__flatcc_fb_scoped_symbol_name@@Base+0x118>
   152b4:	mov	r2, r5
   152b8:	mov	r0, r4
   152bc:	ldr	r1, [r6, #20]
   152c0:	bl	13eb8 <memcpy@plt>
   152c4:	ldr	r6, [r6]
   152c8:	cmp	r6, #0
   152cc:	beq	15304 <__flatcc_fb_scoped_symbol_name@@Base+0xc0>
   152d0:	mov	r9, #95	; 0x5f
   152d4:	ldr	r3, [r6, #4]
   152d8:	add	r0, r4, r8
   152dc:	ldm	r3, {r1, r5}
   152e0:	mov	r2, r5
   152e4:	add	r5, r5, r8
   152e8:	bl	13eb8 <memcpy@plt>
   152ec:	strb	r9, [r4, r5]
   152f0:	add	r8, r5, #1
   152f4:	ldr	r6, [r6]
   152f8:	cmp	r6, #0
   152fc:	bne	152d4 <__flatcc_fb_scoped_symbol_name@@Base+0x90>
   15300:	mov	r5, r8
   15304:	mov	r3, #0
   15308:	cmp	r5, r3
   1530c:	strb	r3, [r4, r8]
   15310:	str	r5, [r4, #208]	; 0xd0
   15314:	blt	1535c <__flatcc_fb_scoped_symbol_name@@Base+0x118>
   15318:	ldm	r7, {r1, r2}
   1531c:	add	r0, r2, r5
   15320:	str	r2, [r4, #212]	; 0xd4
   15324:	cmp	r0, #203	; 0xcb
   15328:	str	r0, [r4, #216]	; 0xd8
   1532c:	bgt	1538c <__flatcc_fb_scoped_symbol_name@@Base+0x148>
   15330:	add	r0, r4, r5
   15334:	bl	13eb8 <memcpy@plt>
   15338:	ldr	r3, [r4, #216]	; 0xd8
   1533c:	mov	r2, #0
   15340:	strb	r2, [r4, r3]
   15344:	ldrd	r4, [sp]
   15348:	ldrd	r6, [sp, #8]
   1534c:	ldrd	r8, [sp, #16]
   15350:	ldr	sl, [sp, #24]
   15354:	add	sp, sp, #28
   15358:	pop	{pc}		; (ldr pc, [sp], #4)
   1535c:	mov	r1, #0
   15360:	movw	r3, #41128	; 0xa0a8
   15364:	movt	r3, #6
   15368:	movw	r0, #63472	; 0xf7f0
   1536c:	movt	r0, #3
   15370:	mov	r2, #28
   15374:	str	r1, [r4, #208]	; 0xd0
   15378:	mov	r1, #1
   1537c:	ldr	r3, [r3]
   15380:	bl	13ef4 <fwrite@plt>
   15384:	ldr	r5, [r4, #208]	; 0xd0
   15388:	b	15318 <__flatcc_fb_scoped_symbol_name@@Base+0xd4>
   1538c:	movw	r0, #41128	; 0xa0a8
   15390:	movt	r0, #6
   15394:	mov	r3, r1
   15398:	movw	r1, #63504	; 0xf810
   1539c:	movt	r1, #3
   153a0:	ldr	r0, [r0]
   153a4:	bl	13f60 <fprintf@plt>
   153a8:	ldr	r5, [r4, #208]	; 0xd0
   153ac:	mov	r3, #203	; 0xcb
   153b0:	ldr	r1, [r7]
   153b4:	sub	r2, r3, r5
   153b8:	strd	r2, [r4, #212]	; 0xd4
   153bc:	b	15330 <__flatcc_fb_scoped_symbol_name@@Base+0xec>

000153c0 <__flatcc_fb_codegen_common_c@@Base>:
   153c0:	strd	r4, [sp, #-20]!	; 0xffffffec
   153c4:	mov	r4, r0
   153c8:	strd	r6, [sp, #8]
   153cc:	str	lr, [sp, #16]
   153d0:	sub	sp, sp, #12
   153d4:	bl	13f54 <strlen@plt>
   153d8:	ldr	r3, [r4, #212]	; 0xd4
   153dc:	sub	r6, r0, #1
   153e0:	ldr	r2, [r3, #144]	; 0x90
   153e4:	cmp	r2, #0
   153e8:	bne	15414 <__flatcc_fb_codegen_common_c@@Base+0x54>
   153ec:	ldr	r2, [r3, #148]	; 0x94
   153f0:	cmp	r2, #0
   153f4:	bne	15464 <__flatcc_fb_codegen_common_c@@Base+0xa4>
   153f8:	mov	r5, #0
   153fc:	mov	r0, r5
   15400:	add	sp, sp, #12
   15404:	ldrd	r4, [sp]
   15408:	ldrd	r6, [sp, #8]
   1540c:	add	sp, sp, #16
   15410:	pop	{pc}		; (ldr pc, [sp], #4)
   15414:	ldr	r5, [r3, #216]	; 0xd8
   15418:	subs	r0, r5, #0
   1541c:	beq	154c8 <__flatcc_fb_codegen_common_c@@Base+0x108>
   15420:	bl	13f54 <strlen@plt>
   15424:	ldr	r3, [r4, #204]	; 0xcc
   15428:	cmp	r3, #0
   1542c:	beq	154f8 <__flatcc_fb_codegen_common_c@@Base+0x138>
   15430:	mov	r0, r4
   15434:	bl	181cc <__flatcc_fb_gen_common_c_header@@Base>
   15438:	ldr	r3, [r4, #212]	; 0xd4
   1543c:	mov	r5, r0
   15440:	ldr	r2, [r3, #124]	; 0x7c
   15444:	cmp	r2, #0
   15448:	beq	154d4 <__flatcc_fb_codegen_common_c@@Base+0x114>
   1544c:	cmp	r5, #0
   15450:	bne	153fc <__flatcc_fb_codegen_common_c@@Base+0x3c>
   15454:	ldr	r3, [r4, #212]	; 0xd4
   15458:	ldr	r2, [r3, #148]	; 0x94
   1545c:	cmp	r2, #0
   15460:	beq	153f8 <__flatcc_fb_codegen_common_c@@Base+0x38>
   15464:	ldr	r5, [r3, #216]	; 0xd8
   15468:	subs	r0, r5, #0
   1546c:	beq	154bc <__flatcc_fb_codegen_common_c@@Base+0xfc>
   15470:	bl	13f54 <strlen@plt>
   15474:	ldr	r3, [r4, #204]	; 0xcc
   15478:	cmp	r3, #0
   1547c:	beq	1554c <__flatcc_fb_codegen_common_c@@Base+0x18c>
   15480:	mov	r0, r4
   15484:	bl	1bef8 <__flatcc_fb_gen_common_c_builder_header@@Base>
   15488:	ldr	r3, [r4, #212]	; 0xd4
   1548c:	ldr	r2, [r3, #124]	; 0x7c
   15490:	cmp	r2, #0
   15494:	bne	153f8 <__flatcc_fb_codegen_common_c@@Base+0x38>
   15498:	ldr	r5, [r3, #108]	; 0x6c
   1549c:	cmp	r5, #0
   154a0:	bne	153f8 <__flatcc_fb_codegen_common_c@@Base+0x38>
   154a4:	ldr	r0, [r4, #204]	; 0xcc
   154a8:	cmp	r0, #0
   154ac:	beq	153f8 <__flatcc_fb_codegen_common_c@@Base+0x38>
   154b0:	bl	13fa8 <fclose@plt>
   154b4:	str	r5, [r4, #204]	; 0xcc
   154b8:	b	153fc <__flatcc_fb_codegen_common_c@@Base+0x3c>
   154bc:	movw	r5, #39472	; 0x9a30
   154c0:	movt	r5, #4
   154c4:	b	15474 <__flatcc_fb_codegen_common_c@@Base+0xb4>
   154c8:	movw	r5, #39472	; 0x9a30
   154cc:	movt	r5, #4
   154d0:	b	15424 <__flatcc_fb_codegen_common_c@@Base+0x64>
   154d4:	ldr	r7, [r3, #108]	; 0x6c
   154d8:	cmp	r7, #0
   154dc:	bne	1544c <__flatcc_fb_codegen_common_c@@Base+0x8c>
   154e0:	ldr	r0, [r4, #204]	; 0xcc
   154e4:	cmp	r0, #0
   154e8:	beq	1544c <__flatcc_fb_codegen_common_c@@Base+0x8c>
   154ec:	bl	13fa8 <fclose@plt>
   154f0:	str	r7, [r4, #204]	; 0xcc
   154f4:	b	1544c <__flatcc_fb_codegen_common_c@@Base+0x8c>
   154f8:	mov	r2, #1
   154fc:	movw	r3, #63544	; 0xf838
   15500:	movt	r3, #3
   15504:	mov	r1, r0
   15508:	mov	r0, r5
   1550c:	str	r3, [sp]
   15510:	mov	r3, r6
   15514:	str	r2, [sp, #4]
   15518:	mov	r2, r4
   1551c:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   15520:	subs	r7, r0, #0
   15524:	beq	155f4 <__flatcc_fb_codegen_common_c@@Base+0x234>
   15528:	movw	r1, #63264	; 0xf720
   1552c:	movt	r1, #3
   15530:	bl	13ea0 <fopen@plt>
   15534:	cmp	r0, #0
   15538:	str	r0, [r4, #204]	; 0xcc
   1553c:	beq	1559c <__flatcc_fb_codegen_common_c@@Base+0x1dc>
   15540:	mov	r0, r7
   15544:	bl	13eac <free@plt>
   15548:	b	15430 <__flatcc_fb_codegen_common_c@@Base+0x70>
   1554c:	mov	ip, #1
   15550:	movw	r2, #63564	; 0xf84c
   15554:	movt	r2, #3
   15558:	mov	r3, r6
   1555c:	mov	r1, r0
   15560:	mov	r0, r5
   15564:	stm	sp, {r2, ip}
   15568:	mov	r2, r4
   1556c:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   15570:	subs	r6, r0, #0
   15574:	beq	155f4 <__flatcc_fb_codegen_common_c@@Base+0x234>
   15578:	movw	r1, #63264	; 0xf720
   1557c:	movt	r1, #3
   15580:	bl	13ea0 <fopen@plt>
   15584:	cmp	r0, #0
   15588:	str	r0, [r4, #204]	; 0xcc
   1558c:	beq	155c8 <__flatcc_fb_codegen_common_c@@Base+0x208>
   15590:	mov	r0, r6
   15594:	bl	13eac <free@plt>
   15598:	b	15480 <__flatcc_fb_codegen_common_c@@Base+0xc0>
   1559c:	movw	r3, #41128	; 0xa0a8
   155a0:	movt	r3, #6
   155a4:	mov	r2, r7
   155a8:	movw	r1, #63324	; 0xf75c
   155ac:	movt	r1, #3
   155b0:	ldr	r0, [r3]
   155b4:	mvn	r5, #0
   155b8:	bl	13f60 <fprintf@plt>
   155bc:	mov	r0, r7
   155c0:	bl	13eac <free@plt>
   155c4:	b	153fc <__flatcc_fb_codegen_common_c@@Base+0x3c>
   155c8:	movw	r3, #41128	; 0xa0a8
   155cc:	movt	r3, #6
   155d0:	mov	r2, r6
   155d4:	movw	r1, #63324	; 0xf75c
   155d8:	movt	r1, #3
   155dc:	ldr	r0, [r3]
   155e0:	mvn	r5, #0
   155e4:	bl	13f60 <fprintf@plt>
   155e8:	mov	r0, r6
   155ec:	bl	13eac <free@plt>
   155f0:	b	153fc <__flatcc_fb_codegen_common_c@@Base+0x3c>
   155f4:	bl	14c64 <flatcc_destroy_context@@Base+0x48>

000155f8 <__flatcc_fb_codegen_c@@Base>:
   155f8:	mov	r3, r1
   155fc:	strd	r4, [sp, #-20]!	; 0xffffffec
   15600:	mov	r4, r0
   15604:	mov	r2, #0
   15608:	ldr	r0, [r1, #60]	; 0x3c
   1560c:	mov	r1, r2
   15610:	strd	r6, [sp, #8]
   15614:	str	lr, [sp, #16]
   15618:	sub	sp, sp, #12
   1561c:	str	r3, [r4, #208]	; 0xd0
   15620:	bl	291dc <fb_scope_table_find@@Base>
   15624:	ldr	r3, [r4, #208]	; 0xd0
   15628:	ldr	r5, [r3, #160]	; 0xa0
   1562c:	str	r0, [r4, #216]	; 0xd8
   15630:	mov	r0, r5
   15634:	bl	13f54 <strlen@plt>
   15638:	ldr	r3, [r4, #212]	; 0xd4
   1563c:	mov	r6, r0
   15640:	ldr	r2, [r3, #152]	; 0x98
   15644:	cmp	r2, #0
   15648:	bne	1575c <__flatcc_fb_codegen_c@@Base+0x164>
   1564c:	ldr	r2, [r3, #156]	; 0x9c
   15650:	cmp	r2, #0
   15654:	bne	157c0 <__flatcc_fb_codegen_c@@Base+0x1c8>
   15658:	ldr	r2, [r3, #160]	; 0xa0
   1565c:	cmp	r2, #0
   15660:	bne	15824 <__flatcc_fb_codegen_c@@Base+0x22c>
   15664:	ldr	r2, [r3, #164]	; 0xa4
   15668:	cmp	r2, #0
   1566c:	bne	15698 <__flatcc_fb_codegen_c@@Base+0xa0>
   15670:	ldr	r2, [r3, #168]	; 0xa8
   15674:	cmp	r2, #0
   15678:	bne	156fc <__flatcc_fb_codegen_c@@Base+0x104>
   1567c:	mov	r5, #0
   15680:	mov	r0, r5
   15684:	add	sp, sp, #12
   15688:	ldrd	r4, [sp]
   1568c:	ldrd	r6, [sp, #8]
   15690:	add	sp, sp, #16
   15694:	pop	{pc}		; (ldr pc, [sp], #4)
   15698:	ldr	r5, [r3, #216]	; 0xd8
   1569c:	subs	r0, r5, #0
   156a0:	beq	15894 <__flatcc_fb_codegen_c@@Base+0x29c>
   156a4:	bl	13f54 <strlen@plt>
   156a8:	ldr	r3, [r4, #204]	; 0xcc
   156ac:	cmp	r3, #0
   156b0:	beq	159bc <__flatcc_fb_codegen_c@@Base+0x3c4>
   156b4:	mov	r0, r4
   156b8:	bl	218fc <__flatcc_fb_gen_c_json_parser@@Base>
   156bc:	subs	r5, r0, #0
   156c0:	bne	15680 <__flatcc_fb_codegen_c@@Base+0x88>
   156c4:	ldr	r3, [r4, #212]	; 0xd4
   156c8:	ldr	r2, [r3, #124]	; 0x7c
   156cc:	cmp	r2, #0
   156d0:	bne	15670 <__flatcc_fb_codegen_c@@Base+0x78>
   156d4:	ldr	r5, [r3, #108]	; 0x6c
   156d8:	cmp	r5, #0
   156dc:	bne	15670 <__flatcc_fb_codegen_c@@Base+0x78>
   156e0:	ldr	r0, [r4, #204]	; 0xcc
   156e4:	cmp	r0, #0
   156e8:	beq	15670 <__flatcc_fb_codegen_c@@Base+0x78>
   156ec:	bl	13fa8 <fclose@plt>
   156f0:	str	r5, [r4, #204]	; 0xcc
   156f4:	ldr	r3, [r4, #212]	; 0xd4
   156f8:	b	15670 <__flatcc_fb_codegen_c@@Base+0x78>
   156fc:	ldr	r5, [r3, #216]	; 0xd8
   15700:	subs	r0, r5, #0
   15704:	beq	158a0 <__flatcc_fb_codegen_c@@Base+0x2a8>
   15708:	bl	13f54 <strlen@plt>
   1570c:	ldr	r3, [r4, #204]	; 0xcc
   15710:	cmp	r3, #0
   15714:	beq	15a10 <__flatcc_fb_codegen_c@@Base+0x418>
   15718:	mov	r0, r4
   1571c:	bl	244fc <__flatcc_fb_gen_c_json_printer@@Base>
   15720:	subs	r5, r0, #0
   15724:	bne	15680 <__flatcc_fb_codegen_c@@Base+0x88>
   15728:	ldr	r3, [r4, #212]	; 0xd4
   1572c:	ldr	r2, [r3, #124]	; 0x7c
   15730:	cmp	r2, #0
   15734:	bne	1567c <__flatcc_fb_codegen_c@@Base+0x84>
   15738:	ldr	r5, [r3, #108]	; 0x6c
   1573c:	cmp	r5, #0
   15740:	bne	1567c <__flatcc_fb_codegen_c@@Base+0x84>
   15744:	ldr	r0, [r4, #204]	; 0xcc
   15748:	cmp	r0, #0
   1574c:	beq	1567c <__flatcc_fb_codegen_c@@Base+0x84>
   15750:	bl	13fa8 <fclose@plt>
   15754:	str	r5, [r4, #204]	; 0xcc
   15758:	b	15680 <__flatcc_fb_codegen_c@@Base+0x88>
   1575c:	ldr	r7, [r3, #216]	; 0xd8
   15760:	subs	r0, r7, #0
   15764:	beq	158ac <__flatcc_fb_codegen_c@@Base+0x2b4>
   15768:	bl	13f54 <strlen@plt>
   1576c:	ldr	r3, [r4, #204]	; 0xcc
   15770:	cmp	r3, #0
   15774:	beq	158b8 <__flatcc_fb_codegen_c@@Base+0x2c0>
   15778:	mov	r0, r4
   1577c:	bl	18e3c <__flatcc_fb_gen_c_reader@@Base>
   15780:	subs	r5, r0, #0
   15784:	bne	15680 <__flatcc_fb_codegen_c@@Base+0x88>
   15788:	ldr	r3, [r4, #212]	; 0xd4
   1578c:	ldr	r2, [r3, #124]	; 0x7c
   15790:	cmp	r2, #0
   15794:	bne	1564c <__flatcc_fb_codegen_c@@Base+0x54>
   15798:	ldr	r5, [r3, #108]	; 0x6c
   1579c:	cmp	r5, #0
   157a0:	bne	1564c <__flatcc_fb_codegen_c@@Base+0x54>
   157a4:	ldr	r0, [r4, #204]	; 0xcc
   157a8:	cmp	r0, #0
   157ac:	beq	1564c <__flatcc_fb_codegen_c@@Base+0x54>
   157b0:	bl	13fa8 <fclose@plt>
   157b4:	str	r5, [r4, #204]	; 0xcc
   157b8:	ldr	r3, [r4, #212]	; 0xd4
   157bc:	b	1564c <__flatcc_fb_codegen_c@@Base+0x54>
   157c0:	ldr	r5, [r3, #216]	; 0xd8
   157c4:	subs	r0, r5, #0
   157c8:	beq	15908 <__flatcc_fb_codegen_c@@Base+0x310>
   157cc:	bl	13f54 <strlen@plt>
   157d0:	ldr	r3, [r4, #204]	; 0xcc
   157d4:	cmp	r3, #0
   157d8:	beq	15914 <__flatcc_fb_codegen_c@@Base+0x31c>
   157dc:	mov	r0, r4
   157e0:	bl	1c7c4 <__flatcc_fb_gen_c_builder@@Base>
   157e4:	subs	r5, r0, #0
   157e8:	bne	15680 <__flatcc_fb_codegen_c@@Base+0x88>
   157ec:	ldr	r3, [r4, #212]	; 0xd4
   157f0:	ldr	r2, [r3, #124]	; 0x7c
   157f4:	cmp	r2, #0
   157f8:	bne	15658 <__flatcc_fb_codegen_c@@Base+0x60>
   157fc:	ldr	r5, [r3, #108]	; 0x6c
   15800:	cmp	r5, #0
   15804:	bne	15658 <__flatcc_fb_codegen_c@@Base+0x60>
   15808:	ldr	r0, [r4, #204]	; 0xcc
   1580c:	cmp	r0, #0
   15810:	beq	15658 <__flatcc_fb_codegen_c@@Base+0x60>
   15814:	bl	13fa8 <fclose@plt>
   15818:	str	r5, [r4, #204]	; 0xcc
   1581c:	ldr	r3, [r4, #212]	; 0xd4
   15820:	b	15658 <__flatcc_fb_codegen_c@@Base+0x60>
   15824:	ldr	r5, [r3, #216]	; 0xd8
   15828:	subs	r0, r5, #0
   1582c:	beq	15888 <__flatcc_fb_codegen_c@@Base+0x290>
   15830:	bl	13f54 <strlen@plt>
   15834:	ldr	r3, [r4, #204]	; 0xcc
   15838:	cmp	r3, #0
   1583c:	beq	15968 <__flatcc_fb_codegen_c@@Base+0x370>
   15840:	mov	r0, r4
   15844:	bl	1d92c <__flatcc_fb_gen_c_verifier@@Base>
   15848:	subs	r5, r0, #0
   1584c:	bne	15680 <__flatcc_fb_codegen_c@@Base+0x88>
   15850:	ldr	r3, [r4, #212]	; 0xd4
   15854:	ldr	r2, [r3, #124]	; 0x7c
   15858:	cmp	r2, #0
   1585c:	bne	15664 <__flatcc_fb_codegen_c@@Base+0x6c>
   15860:	ldr	r5, [r3, #108]	; 0x6c
   15864:	cmp	r5, #0
   15868:	bne	15664 <__flatcc_fb_codegen_c@@Base+0x6c>
   1586c:	ldr	r0, [r4, #204]	; 0xcc
   15870:	cmp	r0, #0
   15874:	beq	15664 <__flatcc_fb_codegen_c@@Base+0x6c>
   15878:	bl	13fa8 <fclose@plt>
   1587c:	str	r5, [r4, #204]	; 0xcc
   15880:	ldr	r3, [r4, #212]	; 0xd4
   15884:	b	15664 <__flatcc_fb_codegen_c@@Base+0x6c>
   15888:	movw	r5, #39472	; 0x9a30
   1588c:	movt	r5, #4
   15890:	b	15834 <__flatcc_fb_codegen_c@@Base+0x23c>
   15894:	movw	r5, #39472	; 0x9a30
   15898:	movt	r5, #4
   1589c:	b	156a8 <__flatcc_fb_codegen_c@@Base+0xb0>
   158a0:	movw	r5, #39472	; 0x9a30
   158a4:	movt	r5, #4
   158a8:	b	1570c <__flatcc_fb_codegen_c@@Base+0x114>
   158ac:	movw	r7, #39472	; 0x9a30
   158b0:	movt	r7, #4
   158b4:	b	1576c <__flatcc_fb_codegen_c@@Base+0x174>
   158b8:	mov	ip, #1
   158bc:	movw	r3, #25444	; 0x6364
   158c0:	movt	r3, #5
   158c4:	mov	r1, r0
   158c8:	mov	r2, r5
   158cc:	mov	r0, r7
   158d0:	stm	sp, {r3, ip}
   158d4:	mov	r3, r6
   158d8:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   158dc:	subs	r7, r0, #0
   158e0:	beq	15abc <__flatcc_fb_codegen_c@@Base+0x4c4>
   158e4:	movw	r1, #63264	; 0xf720
   158e8:	movt	r1, #3
   158ec:	bl	13ea0 <fopen@plt>
   158f0:	cmp	r0, #0
   158f4:	str	r0, [r4, #204]	; 0xcc
   158f8:	beq	15a64 <__flatcc_fb_codegen_c@@Base+0x46c>
   158fc:	mov	r0, r7
   15900:	bl	13eac <free@plt>
   15904:	b	15778 <__flatcc_fb_codegen_c@@Base+0x180>
   15908:	movw	r5, #39472	; 0x9a30
   1590c:	movt	r5, #4
   15910:	b	157d0 <__flatcc_fb_codegen_c@@Base+0x1d8>
   15914:	ldr	r2, [r4, #208]	; 0xd0
   15918:	mov	lr, #1
   1591c:	movw	ip, #25204	; 0x6274
   15920:	movt	ip, #5
   15924:	mov	r1, r0
   15928:	mov	r3, r6
   1592c:	mov	r0, r5
   15930:	ldr	r2, [r2, #160]	; 0xa0
   15934:	stm	sp, {ip, lr}
   15938:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   1593c:	subs	r7, r0, #0
   15940:	beq	15abc <__flatcc_fb_codegen_c@@Base+0x4c4>
   15944:	movw	r1, #63264	; 0xf720
   15948:	movt	r1, #3
   1594c:	bl	13ea0 <fopen@plt>
   15950:	cmp	r0, #0
   15954:	str	r0, [r4, #204]	; 0xcc
   15958:	beq	15a64 <__flatcc_fb_codegen_c@@Base+0x46c>
   1595c:	mov	r0, r7
   15960:	bl	13eac <free@plt>
   15964:	b	157dc <__flatcc_fb_codegen_c@@Base+0x1e4>
   15968:	ldr	r2, [r4, #208]	; 0xd0
   1596c:	mov	lr, #1
   15970:	movw	ip, #63584	; 0xf860
   15974:	movt	ip, #3
   15978:	mov	r1, r0
   1597c:	mov	r3, r6
   15980:	mov	r0, r5
   15984:	ldr	r2, [r2, #160]	; 0xa0
   15988:	stm	sp, {ip, lr}
   1598c:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   15990:	subs	r7, r0, #0
   15994:	beq	15abc <__flatcc_fb_codegen_c@@Base+0x4c4>
   15998:	movw	r1, #63264	; 0xf720
   1599c:	movt	r1, #3
   159a0:	bl	13ea0 <fopen@plt>
   159a4:	cmp	r0, #0
   159a8:	str	r0, [r4, #204]	; 0xcc
   159ac:	beq	15a64 <__flatcc_fb_codegen_c@@Base+0x46c>
   159b0:	mov	r0, r7
   159b4:	bl	13eac <free@plt>
   159b8:	b	15840 <__flatcc_fb_codegen_c@@Base+0x248>
   159bc:	ldr	r2, [r4, #208]	; 0xd0
   159c0:	mov	lr, #1
   159c4:	movw	ip, #63596	; 0xf86c
   159c8:	movt	ip, #3
   159cc:	mov	r1, r0
   159d0:	mov	r3, r6
   159d4:	mov	r0, r5
   159d8:	ldr	r2, [r2, #160]	; 0xa0
   159dc:	stm	sp, {ip, lr}
   159e0:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   159e4:	subs	r7, r0, #0
   159e8:	beq	15abc <__flatcc_fb_codegen_c@@Base+0x4c4>
   159ec:	movw	r1, #63264	; 0xf720
   159f0:	movt	r1, #3
   159f4:	bl	13ea0 <fopen@plt>
   159f8:	cmp	r0, #0
   159fc:	str	r0, [r4, #204]	; 0xcc
   15a00:	beq	15a64 <__flatcc_fb_codegen_c@@Base+0x46c>
   15a04:	mov	r0, r7
   15a08:	bl	13eac <free@plt>
   15a0c:	b	156b4 <__flatcc_fb_codegen_c@@Base+0xbc>
   15a10:	ldr	r2, [r4, #208]	; 0xd0
   15a14:	mov	lr, #1
   15a18:	movw	ip, #63612	; 0xf87c
   15a1c:	movt	ip, #3
   15a20:	mov	r3, r6
   15a24:	mov	r1, r0
   15a28:	mov	r0, r5
   15a2c:	ldr	r2, [r2, #160]	; 0xa0
   15a30:	stm	sp, {ip, lr}
   15a34:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   15a38:	subs	r6, r0, #0
   15a3c:	beq	15abc <__flatcc_fb_codegen_c@@Base+0x4c4>
   15a40:	movw	r1, #63264	; 0xf720
   15a44:	movt	r1, #3
   15a48:	bl	13ea0 <fopen@plt>
   15a4c:	cmp	r0, #0
   15a50:	str	r0, [r4, #204]	; 0xcc
   15a54:	beq	15a90 <__flatcc_fb_codegen_c@@Base+0x498>
   15a58:	mov	r0, r6
   15a5c:	bl	13eac <free@plt>
   15a60:	b	15718 <__flatcc_fb_codegen_c@@Base+0x120>
   15a64:	movw	r3, #41128	; 0xa0a8
   15a68:	movt	r3, #6
   15a6c:	mov	r2, r7
   15a70:	movw	r1, #63324	; 0xf75c
   15a74:	movt	r1, #3
   15a78:	ldr	r0, [r3]
   15a7c:	mvn	r5, #0
   15a80:	bl	13f60 <fprintf@plt>
   15a84:	mov	r0, r7
   15a88:	bl	13eac <free@plt>
   15a8c:	b	15680 <__flatcc_fb_codegen_c@@Base+0x88>
   15a90:	movw	r3, #41128	; 0xa0a8
   15a94:	movt	r3, #6
   15a98:	mov	r2, r6
   15a9c:	movw	r1, #63324	; 0xf75c
   15aa0:	movt	r1, #3
   15aa4:	ldr	r0, [r3]
   15aa8:	mvn	r5, #0
   15aac:	bl	13f60 <fprintf@plt>
   15ab0:	mov	r0, r6
   15ab4:	bl	13eac <free@plt>
   15ab8:	b	15680 <__flatcc_fb_codegen_c@@Base+0x88>
   15abc:	bl	14c64 <flatcc_destroy_context@@Base+0x48>
   15ac0:	strd	r4, [sp, #-12]!
   15ac4:	mov	r2, #220	; 0xdc
   15ac8:	mov	r4, r1
   15acc:	str	lr, [sp, #8]
   15ad0:	sub	sp, sp, #228	; 0xe4
   15ad4:	mov	r5, r0
   15ad8:	mov	r1, #0
   15adc:	add	r0, sp, #4
   15ae0:	bl	13f78 <memset@plt>
   15ae4:	ldrh	r3, [r4, #8]
   15ae8:	cmp	r3, #1
   15aec:	bhi	15c0c <__flatcc_fb_codegen_c@@Base+0x614>
   15af0:	add	r2, sp, #4
   15af4:	mov	r1, r4
   15af8:	ldr	r0, [r4, #12]
   15afc:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   15b00:	ldrh	r3, [r4, #8]
   15b04:	cmp	r3, #1
   15b08:	bne	15bb4 <__flatcc_fb_codegen_c@@Base+0x5bc>
   15b0c:	ldrd	r2, [r4, #112]	; 0x70
   15b10:	ldr	r0, [r5, #204]	; 0xcc
   15b14:	orrs	r3, r2, r3
   15b18:	beq	15ba0 <__flatcc_fb_codegen_c@@Base+0x5a8>
   15b1c:	add	r3, sp, #4
   15b20:	movw	r1, #64176	; 0xfab0
   15b24:	movt	r1, #3
   15b28:	mov	r2, r3
   15b2c:	bl	13f60 <fprintf@plt>
   15b30:	add	r3, sp, #4
   15b34:	movw	r1, #64204	; 0xfacc
   15b38:	movt	r1, #3
   15b3c:	mov	r2, r3
   15b40:	ldr	r0, [r5, #204]	; 0xcc
   15b44:	bl	13f60 <fprintf@plt>
   15b48:	add	r3, sp, #4
   15b4c:	movw	r1, #64240	; 0xfaf0
   15b50:	movt	r1, #3
   15b54:	mov	r2, r3
   15b58:	ldr	r0, [r5, #204]	; 0xcc
   15b5c:	bl	13f60 <fprintf@plt>
   15b60:	add	r3, sp, #4
   15b64:	movw	r1, #64276	; 0xfb14
   15b68:	movt	r1, #3
   15b6c:	mov	r2, r3
   15b70:	ldr	r0, [r5, #204]	; 0xcc
   15b74:	bl	13f60 <fprintf@plt>
   15b78:	add	r3, sp, #4
   15b7c:	movw	r1, #64308	; 0xfb34
   15b80:	movt	r1, #3
   15b84:	mov	r2, r3
   15b88:	ldr	r0, [r5, #204]	; 0xcc
   15b8c:	bl	13f60 <fprintf@plt>
   15b90:	add	sp, sp, #228	; 0xe4
   15b94:	ldrd	r4, [sp]
   15b98:	add	sp, sp, #8
   15b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   15ba0:	movw	r1, #64136	; 0xfa88
   15ba4:	movt	r1, #3
   15ba8:	add	r2, sp, #4
   15bac:	bl	13f60 <fprintf@plt>
   15bb0:	b	15b30 <__flatcc_fb_codegen_c@@Base+0x538>
   15bb4:	add	r3, sp, #4
   15bb8:	movw	r1, #64344	; 0xfb58
   15bbc:	movt	r1, #3
   15bc0:	mov	r2, r3
   15bc4:	ldr	r0, [r5, #204]	; 0xcc
   15bc8:	bl	13f60 <fprintf@plt>
   15bcc:	add	r3, sp, #4
   15bd0:	mov	r2, r5
   15bd4:	ldr	r0, [r5, #204]	; 0xcc
   15bd8:	movw	r1, #64388	; 0xfb84
   15bdc:	movt	r1, #3
   15be0:	bl	13f60 <fprintf@plt>
   15be4:	add	r3, sp, #4
   15be8:	mov	r2, r5
   15bec:	ldr	r0, [r5, #204]	; 0xcc
   15bf0:	movw	r1, #64428	; 0xfbac
   15bf4:	movt	r1, #3
   15bf8:	bl	13f60 <fprintf@plt>
   15bfc:	add	sp, sp, #228	; 0xe4
   15c00:	ldrd	r4, [sp]
   15c04:	add	sp, sp, #8
   15c08:	pop	{pc}		; (ldr pc, [sp], #4)
   15c0c:	movw	r3, #63628	; 0xf88c
   15c10:	movt	r3, #3
   15c14:	movw	r1, #63988	; 0xf9f4
   15c18:	movt	r1, #3
   15c1c:	movw	r0, #64068	; 0xfa44
   15c20:	movt	r0, #3
   15c24:	movw	r2, #863	; 0x35f
   15c28:	bl	14014 <__assert_fail@plt>
   15c2c:	movw	r3, #64556	; 0xfc2c
   15c30:	movt	r3, #3
   15c34:	push	{lr}		; (str lr, [sp, #-4]!)
   15c38:	sub	sp, sp, #12
   15c3c:	movw	r4, #64468	; 0xfbd4
   15c40:	movt	r4, #3
   15c44:	movw	r0, #41128	; 0xa0a8
   15c48:	movt	r0, #6
   15c4c:	mov	r2, r4
   15c50:	str	r3, [sp]
   15c54:	movw	r1, #64544	; 0xfc20
   15c58:	movt	r1, #3
   15c5c:	ldr	r0, [r0]
   15c60:	mov	r3, #226	; 0xe2
   15c64:	bl	13f60 <fprintf@plt>
   15c68:	movw	r0, #35672	; 0x8b58
   15c6c:	movt	r0, #4
   15c70:	ldr	r3, [pc, #8]	; 15c80 <__flatcc_fb_codegen_c@@Base+0x688>
   15c74:	mov	r1, r4
   15c78:	mov	r2, #226	; 0xe2
   15c7c:	bl	14014 <__assert_fail@plt>
   15c80:	andeq	pc, r3, r0, lsr #17
   15c84:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15c88:	mov	r2, #220	; 0xdc
   15c8c:	mov	r4, r0
   15c90:	strd	r6, [sp, #8]
   15c94:	strd	r8, [sp, #16]
   15c98:	mov	r9, r1
   15c9c:	mov	r1, #0
   15ca0:	strd	sl, [sp, #24]
   15ca4:	str	lr, [sp, #32]
   15ca8:	sub	sp, sp, #372	; 0x174
   15cac:	add	r6, sp, #148	; 0x94
   15cb0:	mov	r0, r6
   15cb4:	bl	13f78 <memset@plt>
   15cb8:	ldrh	r3, [r9, #8]
   15cbc:	str	r3, [sp, #44]	; 0x2c
   15cc0:	sub	r3, r3, #3
   15cc4:	cmp	r3, #1
   15cc8:	bhi	1643c <__flatcc_fb_codegen_c@@Base+0xe44>
   15ccc:	ldrh	r3, [r9, #48]	; 0x30
   15cd0:	cmp	r3, #8
   15cd4:	bne	16420 <__flatcc_fb_codegen_c@@Base+0xe28>
   15cd8:	ldr	r3, [r9, #40]	; 0x28
   15cdc:	cmp	r3, #5
   15ce0:	sub	r3, r3, #1
   15ce4:	beq	162a8 <__flatcc_fb_codegen_c@@Base+0xcb0>
   15ce8:	cmp	r3, #10
   15cec:	bhi	163d4 <__flatcc_fb_codegen_c@@Base+0xddc>
   15cf0:	movw	fp, #39472	; 0x9a30
   15cf4:	movt	fp, #4
   15cf8:	movw	r1, #63628	; 0xf88c
   15cfc:	movt	r1, #3
   15d00:	ldr	r0, [r9, #12]
   15d04:	add	r3, r1, r3, lsl #2
   15d08:	ldr	r2, [r9, #112]	; 0x70
   15d0c:	str	r1, [sp, #40]	; 0x28
   15d10:	ldr	r3, [r3, #44]	; 0x2c
   15d14:	ldr	r1, [sp, #44]	; 0x2c
   15d18:	str	r3, [sp, #24]
   15d1c:	lsl	r3, r2, #3
   15d20:	cmp	r1, #3
   15d24:	str	r3, [sp, #20]
   15d28:	beq	16280 <__flatcc_fb_codegen_c@@Base+0xc88>
   15d2c:	mov	r2, r6
   15d30:	mov	r1, r9
   15d34:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   15d38:	ldr	r5, [r9, #32]
   15d3c:	cmp	r5, #0
   15d40:	beq	161f4 <__flatcc_fb_codegen_c@@Base+0xbfc>
   15d44:	movw	r3, #64620	; 0xfc6c
   15d48:	movt	r3, #3
   15d4c:	str	r3, [sp, #36]	; 0x24
   15d50:	movw	r7, #39472	; 0x9a30
   15d54:	movt	r7, #4
   15d58:	movw	sl, #64736	; 0xfce0
   15d5c:	movt	sl, #3
   15d60:	movw	r8, #64728	; 0xfcd8
   15d64:	movt	r8, #3
   15d68:	mov	ip, #1
   15d6c:	mov	r3, #0
   15d70:	ldr	r2, [r5, #4]
   15d74:	ldr	r0, [r4, #204]	; 0xcc
   15d78:	ldr	r1, [r2, #8]
   15d7c:	cmp	r1, r3
   15d80:	beq	15da0 <__flatcc_fb_codegen_c@@Base+0x7a8>
   15d84:	cmp	ip, #0
   15d88:	mov	r2, r7
   15d8c:	movne	r1, r8
   15d90:	moveq	r1, sl
   15d94:	bl	13f60 <fprintf@plt>
   15d98:	ldr	r2, [r5, #4]
   15d9c:	ldr	r0, [r4, #204]	; 0xcc
   15da0:	movw	r1, #35640	; 0x8b38
   15da4:	movt	r1, #4
   15da8:	ldr	r3, [r2]
   15dac:	ldr	r2, [r2, #4]
   15db0:	bl	13f60 <fprintf@plt>
   15db4:	ldr	r3, [r5, #4]
   15db8:	mov	ip, #0
   15dbc:	ldr	r5, [r5]
   15dc0:	ldr	r3, [r3, #8]
   15dc4:	cmp	r5, ip
   15dc8:	bne	15d70 <__flatcc_fb_codegen_c@@Base+0x778>
   15dcc:	mov	r2, #4
   15dd0:	mov	r1, #1
   15dd4:	ldr	r3, [r4, #204]	; 0xcc
   15dd8:	movw	r0, #1740	; 0x6cc
   15ddc:	movt	r0, #4
   15de0:	bl	13ef4 <fwrite@plt>
   15de4:	mov	r2, fp
   15de8:	movw	r1, #64744	; 0xfce8
   15dec:	movt	r1, #3
   15df0:	ldr	r5, [sp, #36]	; 0x24
   15df4:	str	r6, [sp]
   15df8:	ldr	r3, [sp, #24]
   15dfc:	str	r5, [sp, #4]
   15e00:	ldr	r0, [r4, #204]	; 0xcc
   15e04:	bl	13f60 <fprintf@plt>
   15e08:	ldr	r0, [sp, #20]
   15e0c:	mov	r3, r6
   15e10:	movw	r1, #64768	; 0xfd00
   15e14:	movt	r1, #3
   15e18:	mov	r2, r4
   15e1c:	str	r6, [sp]
   15e20:	str	r5, [sp, #4]
   15e24:	str	r0, [sp, #8]
   15e28:	ldr	r0, [r4, #204]	; 0xcc
   15e2c:	bl	13f60 <fprintf@plt>
   15e30:	ldr	r3, [sp, #44]	; 0x2c
   15e34:	cmp	r3, #3
   15e38:	bne	16248 <__flatcc_fb_codegen_c@@Base+0xc50>
   15e3c:	ldr	r5, [r9, #20]
   15e40:	cmp	r5, #0
   15e44:	beq	162b0 <__flatcc_fb_codegen_c@@Base+0xcb8>
   15e48:	movw	r3, #64736	; 0xfce0
   15e4c:	movt	r3, #3
   15e50:	movw	r8, #39472	; 0x9a30
   15e54:	movt	r8, #4
   15e58:	str	r3, [sp, #28]
   15e5c:	movw	r3, #64728	; 0xfcd8
   15e60:	movt	r3, #3
   15e64:	str	r3, [sp, #32]
   15e68:	ldr	r7, [r5, #68]	; 0x44
   15e6c:	cmp	r7, #0
   15e70:	beq	15ef0 <__flatcc_fb_codegen_c@@Base+0x8f8>
   15e74:	mov	r1, #1
   15e78:	mov	r3, #0
   15e7c:	ldr	r2, [r7, #4]
   15e80:	ldr	r0, [r4, #204]	; 0xcc
   15e84:	ldr	ip, [r2, #8]
   15e88:	cmp	ip, r3
   15e8c:	beq	15eac <__flatcc_fb_codegen_c@@Base+0x8b4>
   15e90:	cmp	r1, #0
   15e94:	mov	r2, r8
   15e98:	ldrne	r1, [sp, #32]
   15e9c:	ldreq	r1, [sp, #28]
   15ea0:	bl	13f60 <fprintf@plt>
   15ea4:	ldr	r2, [r7, #4]
   15ea8:	ldr	r0, [r4, #204]	; 0xcc
   15eac:	movw	r1, #35640	; 0x8b38
   15eb0:	movt	r1, #4
   15eb4:	ldr	r3, [r2]
   15eb8:	ldr	r2, [r2, #4]
   15ebc:	bl	13f60 <fprintf@plt>
   15ec0:	ldr	r3, [r7, #4]
   15ec4:	mov	r1, #0
   15ec8:	ldr	r7, [r7]
   15ecc:	ldr	r3, [r3, #8]
   15ed0:	cmp	r7, r1
   15ed4:	bne	15e7c <__flatcc_fb_codegen_c@@Base+0x884>
   15ed8:	movw	r0, #1740	; 0x6cc
   15edc:	movt	r0, #4
   15ee0:	ldr	r3, [r4, #204]	; 0xcc
   15ee4:	mov	r2, #4
   15ee8:	mov	r1, #1
   15eec:	bl	13ef4 <fwrite@plt>
   15ef0:	ldr	r1, [r5, #4]
   15ef4:	ldrh	r2, [r5, #56]	; 0x38
   15ef8:	ldr	r3, [r9, #40]	; 0x28
   15efc:	ldrd	r0, [r1]
   15f00:	sub	r2, r2, #3
   15f04:	strd	r0, [sp, #20]
   15f08:	cmp	r2, #3
   15f0c:	ldrls	pc, [pc, r2, lsl #2]
   15f10:	b	16458 <__flatcc_fb_codegen_c@@Base+0xe60>
   15f14:	muleq	r1, r0, r1
   15f18:	andeq	r6, r1, r8, asr r1
   15f1c:	andeq	r6, r1, r0, lsr #2
   15f20:	andeq	r5, r1, r4, lsr #30
   15f24:	sub	r3, r3, #1
   15f28:	cmp	r3, #8
   15f2c:	bhi	163d0 <__flatcc_fb_codegen_c@@Base+0xdd8>
   15f30:	ldr	r2, [sp, #40]	; 0x28
   15f34:	add	r7, sp, #48	; 0x30
   15f38:	movw	r1, #64864	; 0xfd60
   15f3c:	movt	r1, #3
   15f40:	mov	r0, r7
   15f44:	add	r2, r2, r3, lsl #2
   15f48:	ldrb	r3, [r5, #48]	; 0x30
   15f4c:	ldr	r2, [r2, #108]	; 0x6c
   15f50:	bl	13fcc <sprintf@plt>
   15f54:	ldrd	r2, [sp, #20]
   15f58:	movw	r1, #64880	; 0xfd70
   15f5c:	movt	r1, #3
   15f60:	ldr	r0, [sp, #36]	; 0x24
   15f64:	stm	sp, {r2, r6}
   15f68:	mov	r2, r6
   15f6c:	str	r7, [sp, #12]
   15f70:	str	r0, [sp, #8]
   15f74:	ldr	r0, [r4, #204]	; 0xcc
   15f78:	bl	13f60 <fprintf@plt>
   15f7c:	ldr	r5, [r5]
   15f80:	cmp	r5, #0
   15f84:	bne	15e68 <__flatcc_fb_codegen_c@@Base+0x870>
   15f88:	mov	r0, #10
   15f8c:	ldr	r1, [r4, #204]	; 0xcc
   15f90:	bl	13fc0 <fputc@plt>
   15f94:	ldr	r3, [sp, #44]	; 0x2c
   15f98:	cmp	r3, #3
   15f9c:	beq	162bc <__flatcc_fb_codegen_c@@Base+0xcc4>
   15fa0:	mov	r3, r6
   15fa4:	mov	r2, r6
   15fa8:	ldr	r0, [r4, #204]	; 0xcc
   15fac:	movw	r1, #64912	; 0xfd90
   15fb0:	movt	r1, #3
   15fb4:	bl	13f60 <fprintf@plt>
   15fb8:	movw	r0, #64976	; 0xfdd0
   15fbc:	movt	r0, #3
   15fc0:	ldr	r3, [r4, #204]	; 0xcc
   15fc4:	mov	r2, #20
   15fc8:	mov	r1, #1
   15fcc:	bl	13ef4 <fwrite@plt>
   15fd0:	ldr	r5, [r9, #20]
   15fd4:	cmp	r5, #0
   15fd8:	beq	16350 <__flatcc_fb_codegen_c@@Base+0xd58>
   15fdc:	movw	r8, #65132	; 0xfe6c
   15fe0:	movt	r8, #3
   15fe4:	movw	r7, #65080	; 0xfe38
   15fe8:	movt	r7, #3
   15fec:	ldr	r3, [r5, #4]
   15ff0:	ldrh	r2, [r5, #10]
   15ff4:	ldr	r0, [r4, #204]	; 0xcc
   15ff8:	ldr	ip, [r3]
   15ffc:	tst	r2, #4
   16000:	mov	r2, r6
   16004:	ldr	r1, [r3, #4]
   16008:	str	ip, [sp]
   1600c:	mov	r3, r1
   16010:	str	r1, [sp, #4]
   16014:	movne	r1, r7
   16018:	moveq	r1, r8
   1601c:	str	ip, [sp, #8]
   16020:	bl	13f60 <fprintf@plt>
   16024:	ldr	r5, [r5]
   16028:	cmp	r5, #0
   1602c:	bne	15fec <__flatcc_fb_codegen_c@@Base+0x9f4>
   16030:	mov	r2, #32
   16034:	mov	r1, #1
   16038:	ldr	r3, [r4, #204]	; 0xcc
   1603c:	movw	r0, #65168	; 0xfe90
   16040:	movt	r0, #3
   16044:	bl	13ef4 <fwrite@plt>
   16048:	mov	r0, #10
   1604c:	ldr	r1, [r4, #204]	; 0xcc
   16050:	bl	13fc0 <fputc@plt>
   16054:	ldr	r3, [sp, #44]	; 0x2c
   16058:	cmp	r3, #3
   1605c:	beq	1631c <__flatcc_fb_codegen_c@@Base+0xd24>
   16060:	mov	r3, r6
   16064:	mov	r2, r6
   16068:	ldr	r0, [r4, #204]	; 0xcc
   1606c:	movw	r1, #65204	; 0xfeb4
   16070:	movt	r1, #3
   16074:	bl	13f60 <fprintf@plt>
   16078:	movw	r0, #64976	; 0xfdd0
   1607c:	movt	r0, #3
   16080:	ldr	r3, [r4, #204]	; 0xcc
   16084:	mov	r2, #20
   16088:	mov	r1, #1
   1608c:	bl	13ef4 <fwrite@plt>
   16090:	ldr	r5, [r9, #20]
   16094:	cmp	r5, #0
   16098:	beq	160e0 <__flatcc_fb_codegen_c@@Base+0xae8>
   1609c:	movw	r8, #65400	; 0xff78
   160a0:	movt	r8, #3
   160a4:	movw	r7, #65352	; 0xff48
   160a8:	movt	r7, #3
   160ac:	ldrh	r2, [r5, #10]
   160b0:	ldr	r3, [r5, #4]
   160b4:	ldr	r0, [r4, #204]	; 0xcc
   160b8:	tst	r2, #4
   160bc:	ldrd	r2, [r3]
   160c0:	str	r2, [sp]
   160c4:	mov	r2, r6
   160c8:	beq	161b4 <__flatcc_fb_codegen_c@@Base+0xbbc>
   160cc:	mov	r1, r7
   160d0:	bl	13f60 <fprintf@plt>
   160d4:	ldr	r5, [r5]
   160d8:	cmp	r5, #0
   160dc:	bne	160ac <__flatcc_fb_codegen_c@@Base+0xab4>
   160e0:	mov	r2, #31
   160e4:	mov	r1, #1
   160e8:	ldr	r3, [r4, #204]	; 0xcc
   160ec:	movw	r0, #65320	; 0xff28
   160f0:	movt	r0, #3
   160f4:	bl	13ef4 <fwrite@plt>
   160f8:	ldr	r1, [r4, #204]	; 0xcc
   160fc:	mov	r0, #10
   16100:	bl	13fc0 <fputc@plt>
   16104:	add	sp, sp, #372	; 0x174
   16108:	ldrd	r4, [sp]
   1610c:	ldrd	r6, [sp, #8]
   16110:	ldrd	r8, [sp, #16]
   16114:	ldrd	sl, [sp, #24]
   16118:	add	sp, sp, #32
   1611c:	pop	{pc}		; (ldr pc, [sp], #4)
   16120:	sub	r3, r3, #1
   16124:	cmp	r3, #8
   16128:	bhi	163d0 <__flatcc_fb_codegen_c@@Base+0xdd8>
   1612c:	ldr	r2, [sp, #40]	; 0x28
   16130:	add	r7, sp, #48	; 0x30
   16134:	movw	r1, #64840	; 0xfd48
   16138:	movt	r1, #3
   1613c:	mov	r0, r7
   16140:	ldrd	sl, [r5, #48]	; 0x30
   16144:	add	r3, r2, r3, lsl #2
   16148:	strd	sl, [sp]
   1614c:	ldr	r2, [r3, #108]	; 0x6c
   16150:	bl	13fcc <sprintf@plt>
   16154:	b	15f54 <__flatcc_fb_codegen_c@@Base+0x95c>
   16158:	sub	r3, r3, #1
   1615c:	cmp	r3, #8
   16160:	bhi	163d0 <__flatcc_fb_codegen_c@@Base+0xdd8>
   16164:	ldr	r2, [sp, #40]	; 0x28
   16168:	add	r7, sp, #48	; 0x30
   1616c:	movw	r1, #64852	; 0xfd54
   16170:	movt	r1, #3
   16174:	mov	r0, r7
   16178:	ldrd	sl, [r5, #48]	; 0x30
   1617c:	add	r3, r2, r3, lsl #2
   16180:	strd	sl, [sp]
   16184:	ldr	r2, [r3, #108]	; 0x6c
   16188:	bl	13fcc <sprintf@plt>
   1618c:	b	15f54 <__flatcc_fb_codegen_c@@Base+0x95c>
   16190:	cmp	r3, #11
   16194:	beq	161cc <__flatcc_fb_codegen_c@@Base+0xbd4>
   16198:	add	r7, sp, #48	; 0x30
   1619c:	movw	r1, #64876	; 0xfd6c
   161a0:	movt	r1, #3
   161a4:	mov	r0, r7
   161a8:	ldrd	r2, [r5, #48]	; 0x30
   161ac:	bl	13fcc <sprintf@plt>
   161b0:	b	15f54 <__flatcc_fb_codegen_c@@Base+0x95c>
   161b4:	mov	r1, r8
   161b8:	bl	13f60 <fprintf@plt>
   161bc:	ldr	r5, [r5]
   161c0:	cmp	r5, #0
   161c4:	bne	160ac <__flatcc_fb_codegen_c@@Base+0xab4>
   161c8:	b	160e0 <__flatcc_fb_codegen_c@@Base+0xae8>
   161cc:	vldr	d7, [r5, #48]	; 0x30
   161d0:	add	r7, sp, #48	; 0x30
   161d4:	movw	r1, #64872	; 0xfd68
   161d8:	movt	r1, #3
   161dc:	mov	r0, r7
   161e0:	vcvt.f32.f64	s14, d7
   161e4:	vcvt.f64.f32	d7, s14
   161e8:	vmov	r2, r3, d7
   161ec:	bl	13fcc <sprintf@plt>
   161f0:	b	15f54 <__flatcc_fb_codegen_c@@Base+0x95c>
   161f4:	movw	r5, #64620	; 0xfc6c
   161f8:	movt	r5, #3
   161fc:	str	r6, [sp]
   16200:	mov	r2, fp
   16204:	movw	r1, #64744	; 0xfce8
   16208:	movt	r1, #3
   1620c:	ldr	r3, [sp, #24]
   16210:	ldr	r0, [r4, #204]	; 0xcc
   16214:	str	r5, [sp, #4]
   16218:	bl	13f60 <fprintf@plt>
   1621c:	ldr	r0, [sp, #20]
   16220:	movw	r1, #64768	; 0xfd00
   16224:	movt	r1, #3
   16228:	mov	r3, r6
   1622c:	mov	r2, r4
   16230:	str	r6, [sp]
   16234:	str	r5, [sp, #4]
   16238:	str	r0, [sp, #8]
   1623c:	ldr	r0, [r4, #204]	; 0xcc
   16240:	str	r5, [sp, #36]	; 0x24
   16244:	bl	13f60 <fprintf@plt>
   16248:	movw	r1, #64812	; 0xfd2c
   1624c:	movt	r1, #3
   16250:	str	r6, [sp]
   16254:	mov	r3, r4
   16258:	mov	r2, r4
   1625c:	ldr	r0, [r4, #204]	; 0xcc
   16260:	bl	13f60 <fprintf@plt>
   16264:	ldr	r5, [r9, #20]
   16268:	cmp	r5, #0
   1626c:	bne	15e48 <__flatcc_fb_codegen_c@@Base+0x850>
   16270:	mov	r0, #10
   16274:	ldr	r1, [r4, #204]	; 0xcc
   16278:	bl	13fc0 <fputc@plt>
   1627c:	b	15fa0 <__flatcc_fb_codegen_c@@Base+0x9a8>
   16280:	mov	r2, r6
   16284:	mov	r1, r9
   16288:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1628c:	ldr	r5, [r9, #32]
   16290:	cmp	r5, #0
   16294:	beq	16378 <__flatcc_fb_codegen_c@@Base+0xd80>
   16298:	movw	r3, #64612	; 0xfc64
   1629c:	movt	r3, #3
   162a0:	str	r3, [sp, #36]	; 0x24
   162a4:	b	15d50 <__flatcc_fb_codegen_c@@Base+0x758>
   162a8:	mov	fp, r4
   162ac:	b	15cf8 <__flatcc_fb_codegen_c@@Base+0x700>
   162b0:	mov	r0, #10
   162b4:	ldr	r1, [r4, #204]	; 0xcc
   162b8:	bl	13fc0 <fputc@plt>
   162bc:	mov	r3, r6
   162c0:	mov	r2, r6
   162c4:	ldr	r0, [r4, #204]	; 0xcc
   162c8:	movw	r1, #65000	; 0xfde8
   162cc:	movt	r1, #3
   162d0:	bl	13f60 <fprintf@plt>
   162d4:	movw	r0, #65056	; 0xfe20
   162d8:	movt	r0, #3
   162dc:	ldr	r3, [r4, #204]	; 0xcc
   162e0:	mov	r2, #21
   162e4:	mov	r1, #1
   162e8:	bl	13ef4 <fwrite@plt>
   162ec:	ldr	r5, [r9, #20]
   162f0:	cmp	r5, #0
   162f4:	bne	15fdc <__flatcc_fb_codegen_c@@Base+0x9e4>
   162f8:	mov	r1, #1
   162fc:	movw	r0, #65168	; 0xfe90
   16300:	movt	r0, #3
   16304:	mov	r2, #32
   16308:	ldr	r3, [r4, #204]	; 0xcc
   1630c:	bl	13ef4 <fwrite@plt>
   16310:	mov	r0, #10
   16314:	ldr	r1, [r4, #204]	; 0xcc
   16318:	bl	13fc0 <fputc@plt>
   1631c:	mov	r3, r6
   16320:	mov	r2, r6
   16324:	ldr	r0, [r4, #204]	; 0xcc
   16328:	movw	r1, #65264	; 0xfef0
   1632c:	movt	r1, #3
   16330:	bl	13f60 <fprintf@plt>
   16334:	movw	r0, #65056	; 0xfe20
   16338:	movt	r0, #3
   1633c:	ldr	r3, [r4, #204]	; 0xcc
   16340:	mov	r2, #21
   16344:	mov	r1, #1
   16348:	bl	13ef4 <fwrite@plt>
   1634c:	b	16090 <__flatcc_fb_codegen_c@@Base+0xa98>
   16350:	mov	r2, #32
   16354:	mov	r1, #1
   16358:	ldr	r3, [r4, #204]	; 0xcc
   1635c:	movw	r0, #65168	; 0xfe90
   16360:	movt	r0, #3
   16364:	bl	13ef4 <fwrite@plt>
   16368:	mov	r0, #10
   1636c:	ldr	r1, [r4, #204]	; 0xcc
   16370:	bl	13fc0 <fputc@plt>
   16374:	b	16060 <__flatcc_fb_codegen_c@@Base+0xa68>
   16378:	movw	r5, #64612	; 0xfc64
   1637c:	movt	r5, #3
   16380:	str	r6, [sp]
   16384:	mov	r2, fp
   16388:	movw	r1, #64744	; 0xfce8
   1638c:	movt	r1, #3
   16390:	ldr	r3, [sp, #24]
   16394:	ldr	r0, [r4, #204]	; 0xcc
   16398:	str	r5, [sp, #4]
   1639c:	bl	13f60 <fprintf@plt>
   163a0:	ldr	r0, [sp, #20]
   163a4:	movw	r1, #64768	; 0xfd00
   163a8:	movt	r1, #3
   163ac:	mov	r3, r6
   163b0:	mov	r2, r4
   163b4:	str	r6, [sp]
   163b8:	str	r5, [sp, #4]
   163bc:	str	r0, [sp, #8]
   163c0:	ldr	r0, [r4, #204]	; 0xcc
   163c4:	str	r5, [sp, #36]	; 0x24
   163c8:	bl	13f60 <fprintf@plt>
   163cc:	b	15e3c <__flatcc_fb_codegen_c@@Base+0x844>
   163d0:	bl	15c2c <__flatcc_fb_codegen_c@@Base+0x634>
   163d4:	movw	r1, #64556	; 0xfc2c
   163d8:	movt	r1, #3
   163dc:	movw	r3, #41128	; 0xa0a8
   163e0:	movt	r3, #6
   163e4:	movw	r2, #64468	; 0xfbd4
   163e8:	movt	r2, #3
   163ec:	str	r1, [sp]
   163f0:	movw	r1, #64544	; 0xfc20
   163f4:	movt	r1, #3
   163f8:	ldr	r0, [r3]
   163fc:	mov	r3, #141	; 0x8d
   16400:	bl	13f60 <fprintf@plt>
   16404:	movw	r1, #64468	; 0xfbd4
   16408:	movt	r1, #3
   1640c:	ldr	r3, [pc, #144]	; 164a4 <__flatcc_fb_codegen_c@@Base+0xeac>
   16410:	movw	r0, #35672	; 0x8b58
   16414:	movt	r0, #4
   16418:	mov	r2, #141	; 0x8d
   1641c:	bl	14014 <__assert_fail@plt>
   16420:	movw	r1, #63988	; 0xf9f4
   16424:	movt	r1, #3
   16428:	ldr	r3, [pc, #120]	; 164a8 <__flatcc_fb_codegen_c@@Base+0xeb0>
   1642c:	movw	r0, #64696	; 0xfcb8
   16430:	movt	r0, #3
   16434:	movw	r2, #1205	; 0x4b5
   16438:	bl	14014 <__assert_fail@plt>
   1643c:	movw	r1, #63988	; 0xf9f4
   16440:	movt	r1, #3
   16444:	ldr	r3, [pc, #92]	; 164a8 <__flatcc_fb_codegen_c@@Base+0xeb0>
   16448:	movw	r0, #64632	; 0xfc78
   1644c:	movt	r0, #3
   16450:	movw	r2, #1204	; 0x4b4
   16454:	bl	14014 <__assert_fail@plt>
   16458:	movw	r1, #64556	; 0xfc2c
   1645c:	movt	r1, #3
   16460:	movw	r3, #41128	; 0xa0a8
   16464:	movt	r3, #6
   16468:	movw	r2, #64468	; 0xfbd4
   1646c:	movt	r2, #3
   16470:	str	r1, [sp]
   16474:	movw	r1, #64544	; 0xfc20
   16478:	movt	r1, #3
   1647c:	ldr	r0, [r3]
   16480:	mov	r3, #260	; 0x104
   16484:	bl	13f60 <fprintf@plt>
   16488:	movw	r1, #64468	; 0xfbd4
   1648c:	movt	r1, #3
   16490:	ldr	r3, [pc, #20]	; 164ac <__flatcc_fb_codegen_c@@Base+0xeb4>
   16494:	movw	r0, #35672	; 0x8b58
   16498:	movt	r0, #4
   1649c:	mov	r2, #260	; 0x104
   164a0:	bl	14014 <__assert_fail@plt>
   164a4:	andeq	pc, r3, r4, ror #17
   164a8:	andeq	pc, r3, ip, lsr #17
   164ac:	andeq	pc, r3, ip, lsl r9	; <UNPREDICTABLE>
   164b0:	ldr	r3, [r0, #212]	; 0xd4
   164b4:	mov	r2, #220	; 0xdc
   164b8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   164bc:	mov	r5, r1
   164c0:	mov	r4, r0
   164c4:	strd	r6, [sp, #8]
   164c8:	strd	r8, [sp, #16]
   164cc:	strd	sl, [sp, #24]
   164d0:	str	lr, [sp, #32]
   164d4:	sub	sp, sp, #492	; 0x1ec
   164d8:	add	r0, sp, #48	; 0x30
   164dc:	ldr	sl, [r3, #132]	; 0x84
   164e0:	str	r1, [sp, #36]	; 0x24
   164e4:	mov	r1, #0
   164e8:	bl	13f78 <memset@plt>
   164ec:	add	r0, sp, #268	; 0x10c
   164f0:	mov	r2, #220	; 0xdc
   164f4:	mov	r1, #0
   164f8:	bl	13f78 <memset@plt>
   164fc:	ldrh	r3, [r5, #8]
   16500:	cmp	r3, #1
   16504:	bne	16f9c <__flatcc_fb_codegen_c@@Base+0x19a4>
   16508:	ldr	r2, [sp, #36]	; 0x24
   1650c:	ldrh	r3, [r2, #104]	; 0x68
   16510:	cmp	r3, #0
   16514:	beq	169fc <__flatcc_fb_codegen_c@@Base+0x1404>
   16518:	mov	r1, r2
   1651c:	ldrd	r2, [r2, #112]	; 0x70
   16520:	orrs	r3, r2, r3
   16524:	bne	16534 <__flatcc_fb_codegen_c@@Base+0xf3c>
   16528:	ldrd	r2, [r1, #96]	; 0x60
   1652c:	orrs	r3, r2, r3
   16530:	bne	16fb8 <__flatcc_fb_codegen_c@@Base+0x19c0>
   16534:	ldr	r5, [sp, #36]	; 0x24
   16538:	add	r2, sp, #48	; 0x30
   1653c:	mov	r1, r5
   16540:	ldr	r0, [r5, #12]
   16544:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   16548:	ldr	r5, [r5, #32]
   1654c:	cmp	r5, #0
   16550:	beq	165e8 <__flatcc_fb_codegen_c@@Base+0xff0>
   16554:	movw	r6, #39472	; 0x9a30
   16558:	movt	r6, #4
   1655c:	movw	r8, #64736	; 0xfce0
   16560:	movt	r8, #3
   16564:	movw	r7, #64728	; 0xfcd8
   16568:	movt	r7, #3
   1656c:	mov	ip, #1
   16570:	mov	r3, #0
   16574:	ldr	r2, [r5, #4]
   16578:	ldr	r0, [r4, #204]	; 0xcc
   1657c:	ldr	r1, [r2, #8]
   16580:	cmp	r1, r3
   16584:	beq	165a4 <__flatcc_fb_codegen_c@@Base+0xfac>
   16588:	cmp	ip, #0
   1658c:	mov	r2, r6
   16590:	movne	r1, r7
   16594:	moveq	r1, r8
   16598:	bl	13f60 <fprintf@plt>
   1659c:	ldr	r2, [r5, #4]
   165a0:	ldr	r0, [r4, #204]	; 0xcc
   165a4:	movw	r1, #35640	; 0x8b38
   165a8:	movt	r1, #4
   165ac:	ldr	r3, [r2]
   165b0:	ldr	r2, [r2, #4]
   165b4:	bl	13f60 <fprintf@plt>
   165b8:	ldr	r3, [r5, #4]
   165bc:	mov	ip, #0
   165c0:	ldr	r5, [r5]
   165c4:	ldr	r3, [r3, #8]
   165c8:	cmp	r5, ip
   165cc:	bne	16574 <__flatcc_fb_codegen_c@@Base+0xf7c>
   165d0:	movw	r0, #1740	; 0x6cc
   165d4:	movt	r0, #4
   165d8:	ldr	r3, [r4, #204]	; 0xcc
   165dc:	mov	r2, #4
   165e0:	mov	r1, #1
   165e4:	bl	13ef4 <fwrite@plt>
   165e8:	ldr	r3, [sp, #36]	; 0x24
   165ec:	ldr	r0, [r4, #204]	; 0xcc
   165f0:	ldrd	r2, [r3, #112]	; 0x70
   165f4:	orrs	r3, r2, r3
   165f8:	beq	16d44 <__flatcc_fb_codegen_c@@Base+0x174c>
   165fc:	cmp	sl, #0
   16600:	bne	16e44 <__flatcc_fb_codegen_c@@Base+0x184c>
   16604:	movw	r1, #352	; 0x160
   16608:	movt	r1, #4
   1660c:	add	r2, sp, #48	; 0x30
   16610:	bl	13f60 <fprintf@plt>
   16614:	ldr	r3, [sp, #36]	; 0x24
   16618:	ldr	r5, [r3, #20]
   1661c:	cmp	r5, #0
   16620:	beq	16d28 <__flatcc_fb_codegen_c@@Base+0x1730>
   16624:	movw	r3, #64736	; 0xfce0
   16628:	movt	r3, #3
   1662c:	mov	r6, #0
   16630:	movw	r7, #368	; 0x170
   16634:	movt	r7, #4
   16638:	str	r3, [sp, #28]
   1663c:	movw	r3, #64728	; 0xfcd8
   16640:	movt	r3, #3
   16644:	str	r3, [sp, #32]
   16648:	str	r6, [sp, #40]	; 0x28
   1664c:	str	r6, [sp, #44]	; 0x2c
   16650:	ldr	r8, [r5, #68]	; 0x44
   16654:	cmp	r8, #0
   16658:	beq	166d8 <__flatcc_fb_codegen_c@@Base+0x10e0>
   1665c:	mov	r1, #1
   16660:	mov	r3, #0
   16664:	ldr	r2, [r8, #4]
   16668:	ldr	r0, [r4, #204]	; 0xcc
   1666c:	ldr	ip, [r2, #8]
   16670:	cmp	ip, r3
   16674:	beq	16694 <__flatcc_fb_codegen_c@@Base+0x109c>
   16678:	cmp	r1, #0
   1667c:	mov	r2, r7
   16680:	ldrne	r1, [sp, #32]
   16684:	ldreq	r1, [sp, #28]
   16688:	bl	13f60 <fprintf@plt>
   1668c:	ldr	r2, [r8, #4]
   16690:	ldr	r0, [r4, #204]	; 0xcc
   16694:	movw	r1, #35640	; 0x8b38
   16698:	movt	r1, #4
   1669c:	ldr	r3, [r2]
   166a0:	ldr	r2, [r2, #4]
   166a4:	bl	13f60 <fprintf@plt>
   166a8:	ldr	r3, [r8, #4]
   166ac:	mov	r1, #0
   166b0:	ldr	r8, [r8]
   166b4:	ldr	r3, [r3, #8]
   166b8:	cmp	r8, r1
   166bc:	bne	16664 <__flatcc_fb_codegen_c@@Base+0x106c>
   166c0:	movw	r0, #1740	; 0x6cc
   166c4:	movt	r0, #4
   166c8:	ldr	r3, [r4, #204]	; 0xcc
   166cc:	mov	r2, #4
   166d0:	mov	r1, #1
   166d4:	bl	13ef4 <fwrite@plt>
   166d8:	ldr	r3, [r5, #4]
   166dc:	cmp	r6, #0
   166e0:	ldrhne	fp, [r5, #74]	; 0x4a
   166e4:	ldrd	r8, [r3]
   166e8:	ldreq	r3, [sp, #36]	; 0x24
   166ec:	ldrheq	fp, [r3, #104]	; 0x68
   166f0:	cmp	sl, #0
   166f4:	beq	16a88 <__flatcc_fb_codegen_c@@Base+0x1490>
   166f8:	ldr	r3, [r5, #80]	; 0x50
   166fc:	subs	r3, r3, r6
   16700:	bne	16bc8 <__flatcc_fb_codegen_c@@Base+0x15d0>
   16704:	ldrh	r3, [r5, #72]	; 0x48
   16708:	tst	r3, #4
   1670c:	bne	16b98 <__flatcc_fb_codegen_c@@Base+0x15a0>
   16710:	ldrh	r3, [r5, #24]
   16714:	cmp	r3, #8
   16718:	bne	16a24 <__flatcc_fb_codegen_c@@Base+0x142c>
   1671c:	ldr	r3, [r5, #16]
   16720:	cmp	r3, #5
   16724:	beq	16bec <__flatcc_fb_codegen_c@@Base+0x15f4>
   16728:	sub	r1, r3, #1
   1672c:	cmp	r1, #10
   16730:	bhi	16f34 <__flatcc_fb_codegen_c@@Base+0x193c>
   16734:	movw	r2, #39472	; 0x9a30
   16738:	movt	r2, #4
   1673c:	movw	r3, #63628	; 0xf88c
   16740:	movt	r3, #3
   16744:	ldr	r0, [r4, #204]	; 0xcc
   16748:	add	r3, r3, r1, lsl #2
   1674c:	cmp	sl, #0
   16750:	ldr	r1, [r3, #44]	; 0x2c
   16754:	beq	16b4c <__flatcc_fb_codegen_c@@Base+0x1554>
   16758:	mov	r3, r1
   1675c:	movw	r1, #408	; 0x198
   16760:	movt	r1, #4
   16764:	bl	13f60 <fprintf@plt>
   16768:	movw	r1, #612	; 0x264
   1676c:	movt	r1, #4
   16770:	ldr	r0, [r4, #204]	; 0xcc
   16774:	mov	r3, r8
   16778:	mov	r2, r9
   1677c:	bl	13f60 <fprintf@plt>
   16780:	ldr	r6, [r5, #80]	; 0x50
   16784:	ldr	r3, [r5, #88]	; 0x58
   16788:	ldr	r5, [r5]
   1678c:	add	r6, r6, r3
   16790:	cmp	r5, #0
   16794:	bne	16650 <__flatcc_fb_codegen_c@@Base+0x1058>
   16798:	cmp	sl, #0
   1679c:	beq	16d28 <__flatcc_fb_codegen_c@@Base+0x1730>
   167a0:	ldr	r3, [sp, #36]	; 0x24
   167a4:	ldr	r0, [r4, #204]	; 0xcc
   167a8:	ldr	r3, [r3, #112]	; 0x70
   167ac:	subs	r3, r3, r6
   167b0:	bne	16e8c <__flatcc_fb_codegen_c@@Base+0x1894>
   167b4:	mov	r3, r0
   167b8:	mov	r2, #3
   167bc:	mov	r1, #1
   167c0:	movw	r0, #34228	; 0x85b4
   167c4:	movt	r0, #4
   167c8:	bl	13ef4 <fwrite@plt>
   167cc:	movw	r0, #1864	; 0x748
   167d0:	movt	r0, #4
   167d4:	ldr	r3, [r4, #204]	; 0xcc
   167d8:	mov	r2, #15
   167dc:	mov	r1, #1
   167e0:	bl	13ef4 <fwrite@plt>
   167e4:	ldr	r3, [sp, #36]	; 0x24
   167e8:	add	r2, sp, #48	; 0x30
   167ec:	movw	r1, #620	; 0x26c
   167f0:	movt	r1, #4
   167f4:	ldr	r0, [r4, #204]	; 0xcc
   167f8:	ldrd	r6, [r3, #112]	; 0x70
   167fc:	strd	r6, [sp]
   16800:	bl	13f60 <fprintf@plt>
   16804:	add	r3, sp, #48	; 0x30
   16808:	movw	r1, #684	; 0x2ac
   1680c:	movt	r1, #4
   16810:	mov	r2, r3
   16814:	str	r3, [sp]
   16818:	ldr	r0, [r4, #204]	; 0xcc
   1681c:	bl	13f60 <fprintf@plt>
   16820:	add	r3, sp, #48	; 0x30
   16824:	movw	r1, #772	; 0x304
   16828:	movt	r1, #4
   1682c:	mov	r2, r3
   16830:	str	r3, [sp]
   16834:	ldr	r0, [r4, #204]	; 0xcc
   16838:	bl	13f60 <fprintf@plt>
   1683c:	add	r3, sp, #48	; 0x30
   16840:	movw	r1, #844	; 0x34c
   16844:	movt	r1, #4
   16848:	mov	r2, r3
   1684c:	stm	sp, {r3, r4}
   16850:	ldr	r0, [r4, #204]	; 0xcc
   16854:	bl	13f60 <fprintf@plt>
   16858:	ldr	r5, [sp, #36]	; 0x24
   1685c:	add	r2, sp, #48	; 0x30
   16860:	movw	r1, #932	; 0x3a4
   16864:	movt	r1, #4
   16868:	ldr	r0, [r4, #204]	; 0xcc
   1686c:	ldrd	r6, [r5, #112]	; 0x70
   16870:	strd	r6, [sp]
   16874:	bl	13f60 <fprintf@plt>
   16878:	add	r3, sp, #48	; 0x30
   1687c:	movw	r1, #984	; 0x3d8
   16880:	movt	r1, #4
   16884:	mov	r2, r3
   16888:	str	r4, [sp]
   1688c:	ldr	r0, [r4, #204]	; 0xcc
   16890:	bl	13f60 <fprintf@plt>
   16894:	add	r3, sp, #48	; 0x30
   16898:	mov	r2, r4
   1689c:	ldr	r0, [r4, #204]	; 0xcc
   168a0:	movw	r1, #1048	; 0x418
   168a4:	movt	r1, #4
   168a8:	bl	13f60 <fprintf@plt>
   168ac:	mov	r0, #10
   168b0:	ldr	r1, [r4, #204]	; 0xcc
   168b4:	bl	13fc0 <fputc@plt>
   168b8:	ldr	r5, [r5, #20]
   168bc:	cmp	r5, #0
   168c0:	beq	169d4 <__flatcc_fb_codegen_c@@Base+0x13dc>
   168c4:	movw	r3, #1660	; 0x67c
   168c8:	movt	r3, #4
   168cc:	mov	fp, #0
   168d0:	movw	sl, #63628	; 0xf88c
   168d4:	movt	sl, #3
   168d8:	movw	r9, #1072	; 0x430
   168dc:	movt	r9, #4
   168e0:	mov	r8, fp
   168e4:	str	r3, [sp, #28]
   168e8:	b	16978 <__flatcc_fb_codegen_c@@Base+0x1380>
   168ec:	ldr	r1, [r5, #16]
   168f0:	add	r2, sp, #268	; 0x10c
   168f4:	ldr	r0, [r1, #12]
   168f8:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   168fc:	ldr	r2, [r5, #16]
   16900:	ldrh	r3, [r2, #8]
   16904:	cmp	r3, #1
   16908:	beq	16b68 <__flatcc_fb_codegen_c@@Base+0x1570>
   1690c:	cmp	r3, #3
   16910:	bne	16b90 <__flatcc_fb_codegen_c@@Base+0x1598>
   16914:	ldr	r3, [r2, #40]	; 0x28
   16918:	sub	r3, r3, #1
   1691c:	cmp	r3, #10
   16920:	bhi	16fd4 <__flatcc_fb_codegen_c@@Base+0x19dc>
   16924:	add	r0, sp, #268	; 0x10c
   16928:	add	r3, sp, #48	; 0x30
   1692c:	str	r7, [sp]
   16930:	movw	r1, #1128	; 0x468
   16934:	movt	r1, #4
   16938:	str	r6, [sp, #4]
   1693c:	mov	r2, r4
   16940:	str	r0, [sp, #8]
   16944:	str	r0, [sp, #12]
   16948:	ldr	r0, [r4, #204]	; 0xcc
   1694c:	bl	13f60 <fprintf@plt>
   16950:	ldr	r3, [r4, #212]	; 0xd4
   16954:	ldr	r3, [r3, #32]
   16958:	cmp	r3, #0
   1695c:	bne	16c2c <__flatcc_fb_codegen_c@@Base+0x1634>
   16960:	ldrh	r3, [r5, #72]	; 0x48
   16964:	tst	r3, #128	; 0x80
   16968:	bne	16c04 <__flatcc_fb_codegen_c@@Base+0x160c>
   1696c:	ldr	r5, [r5]
   16970:	cmp	r5, #0
   16974:	beq	169d4 <__flatcc_fb_codegen_c@@Base+0x13dc>
   16978:	ldrh	r3, [r5, #72]	; 0x48
   1697c:	tst	r3, #4
   16980:	bne	1696c <__flatcc_fb_codegen_c@@Base+0x1374>
   16984:	ldrh	r2, [r5, #24]
   16988:	ldr	r1, [r5, #4]
   1698c:	cmp	r2, #8
   16990:	ldrd	r6, [r1]
   16994:	beq	16acc <__flatcc_fb_codegen_c@@Base+0x14d4>
   16998:	cmp	r2, #14
   1699c:	beq	168ec <__flatcc_fb_codegen_c@@Base+0x12f4>
   169a0:	tst	r3, #128	; 0x80
   169a4:	beq	1696c <__flatcc_fb_codegen_c@@Base+0x1374>
   169a8:	cmp	r8, #0
   169ac:	bne	1696c <__flatcc_fb_codegen_c@@Base+0x1374>
   169b0:	mov	r1, #1
   169b4:	mov	r2, #84	; 0x54
   169b8:	ldr	r0, [sp, #28]
   169bc:	mov	fp, r1
   169c0:	ldr	r3, [r4, #204]	; 0xcc
   169c4:	bl	13ef4 <fwrite@plt>
   169c8:	ldr	r5, [r5]
   169cc:	cmp	r5, #0
   169d0:	bne	16978 <__flatcc_fb_codegen_c@@Base+0x1380>
   169d4:	ldr	r1, [r4, #204]	; 0xcc
   169d8:	mov	r0, #10
   169dc:	bl	13fc0 <fputc@plt>
   169e0:	add	sp, sp, #492	; 0x1ec
   169e4:	ldrd	r4, [sp]
   169e8:	ldrd	r6, [sp, #8]
   169ec:	ldrd	r8, [sp, #16]
   169f0:	ldrd	sl, [sp, #24]
   169f4:	add	sp, sp, #32
   169f8:	pop	{pc}		; (ldr pc, [sp], #4)
   169fc:	ldrd	r2, [r2, #96]	; 0x60
   16a00:	orrs	r3, r2, r3
   16a04:	beq	16534 <__flatcc_fb_codegen_c@@Base+0xf3c>
   16a08:	movw	r1, #63988	; 0xf9f4
   16a0c:	movt	r1, #3
   16a10:	ldr	r3, [pc, #1544]	; 17020 <__flatcc_fb_codegen_c@@Base+0x1a28>
   16a14:	movw	r0, #65472	; 0xffc0
   16a18:	movt	r0, #3
   16a1c:	movw	r2, #937	; 0x3a9
   16a20:	bl	14014 <__assert_fail@plt>
   16a24:	cmp	r3, #14
   16a28:	bne	16ed0 <__flatcc_fb_codegen_c@@Base+0x18d8>
   16a2c:	ldr	r1, [r5, #16]
   16a30:	ldrh	r2, [r1, #8]
   16a34:	bic	r3, r2, #2
   16a38:	cmp	r3, #1
   16a3c:	bne	16f80 <__flatcc_fb_codegen_c@@Base+0x1988>
   16a40:	cmp	r2, #1
   16a44:	movw	r3, #65432	; 0xff98
   16a48:	movt	r3, #3
   16a4c:	add	r2, sp, #268	; 0x10c
   16a50:	ldr	r0, [r1, #12]
   16a54:	movw	r6, #39472	; 0x9a30
   16a58:	movt	r6, #4
   16a5c:	movne	r6, r3
   16a60:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   16a64:	cmp	sl, #0
   16a68:	beq	16b2c <__flatcc_fb_codegen_c@@Base+0x1534>
   16a6c:	mov	r3, r6
   16a70:	movw	r1, #536	; 0x218
   16a74:	movt	r1, #4
   16a78:	add	r2, sp, #268	; 0x10c
   16a7c:	ldr	r0, [r4, #204]	; 0xcc
   16a80:	bl	13f60 <fprintf@plt>
   16a84:	b	16768 <__flatcc_fb_codegen_c@@Base+0x1170>
   16a88:	ldrh	r3, [r5, #72]	; 0x48
   16a8c:	tst	r3, #4
   16a90:	beq	16710 <__flatcc_fb_codegen_c@@Base+0x1118>
   16a94:	ldr	r0, [sp, #40]	; 0x28
   16a98:	mov	r2, fp
   16a9c:	movw	r1, #1800	; 0x708
   16aa0:	movt	r1, #4
   16aa4:	str	r9, [sp, #4]
   16aa8:	str	r8, [sp, #8]
   16aac:	ldr	ip, [r5, #88]	; 0x58
   16ab0:	mov	r3, r0
   16ab4:	add	r0, r0, #1
   16ab8:	str	r0, [sp, #40]	; 0x28
   16abc:	ldr	r0, [r4, #204]	; 0xcc
   16ac0:	str	ip, [sp]
   16ac4:	bl	13f60 <fprintf@plt>
   16ac8:	b	16780 <__flatcc_fb_codegen_c@@Base+0x1188>
   16acc:	ldr	r0, [r5, #16]
   16ad0:	cmp	r0, #5
   16ad4:	beq	16bf8 <__flatcc_fb_codegen_c@@Base+0x1600>
   16ad8:	sub	r0, r0, #1
   16adc:	cmp	r0, #10
   16ae0:	bhi	16f34 <__flatcc_fb_codegen_c@@Base+0x193c>
   16ae4:	movw	ip, #39472	; 0x9a30
   16ae8:	movt	ip, #4
   16aec:	add	r0, sl, r0, lsl #2
   16af0:	add	r3, sp, #48	; 0x30
   16af4:	mov	r2, r4
   16af8:	str	r6, [sp, #4]
   16afc:	mov	r1, r9
   16b00:	ldr	r6, [r0, #44]	; 0x2c
   16b04:	str	r7, [sp]
   16b08:	ldr	lr, [r0, #172]	; 0xac
   16b0c:	str	r4, [sp, #8]
   16b10:	str	ip, [sp, #16]
   16b14:	str	r6, [sp, #20]
   16b18:	ldr	r0, [r4, #204]	; 0xcc
   16b1c:	str	lr, [sp, #12]
   16b20:	bl	13f60 <fprintf@plt>
   16b24:	ldrh	r3, [r5, #72]	; 0x48
   16b28:	b	169a0 <__flatcc_fb_codegen_c@@Base+0x13a8>
   16b2c:	mov	r2, fp
   16b30:	movw	r1, #548	; 0x224
   16b34:	movt	r1, #4
   16b38:	add	r3, sp, #268	; 0x10c
   16b3c:	str	r6, [sp]
   16b40:	ldr	r0, [r4, #204]	; 0xcc
   16b44:	bl	13f60 <fprintf@plt>
   16b48:	b	16768 <__flatcc_fb_codegen_c@@Base+0x1170>
   16b4c:	mov	r3, r2
   16b50:	mov	r2, fp
   16b54:	str	r1, [sp]
   16b58:	movw	r1, #420	; 0x1a4
   16b5c:	movt	r1, #4
   16b60:	bl	13f60 <fprintf@plt>
   16b64:	b	16768 <__flatcc_fb_codegen_c@@Base+0x1170>
   16b68:	add	r0, sp, #268	; 0x10c
   16b6c:	movw	r1, #1604	; 0x644
   16b70:	movt	r1, #4
   16b74:	add	r3, sp, #48	; 0x30
   16b78:	str	r7, [sp]
   16b7c:	mov	r2, r4
   16b80:	str	r6, [sp, #4]
   16b84:	str	r0, [sp, #8]
   16b88:	ldr	r0, [r4, #204]	; 0xcc
   16b8c:	bl	13f60 <fprintf@plt>
   16b90:	ldrh	r3, [r5, #72]	; 0x48
   16b94:	b	169a0 <__flatcc_fb_codegen_c@@Base+0x13a8>
   16b98:	ldr	r0, [sp, #40]	; 0x28
   16b9c:	movw	r1, #1748	; 0x6d4
   16ba0:	movt	r1, #4
   16ba4:	ldr	r3, [r5, #88]	; 0x58
   16ba8:	str	r9, [sp]
   16bac:	str	r8, [sp, #4]
   16bb0:	mov	r2, r0
   16bb4:	add	r0, r0, #1
   16bb8:	str	r0, [sp, #40]	; 0x28
   16bbc:	ldr	r0, [r4, #204]	; 0xcc
   16bc0:	bl	13f60 <fprintf@plt>
   16bc4:	b	16780 <__flatcc_fb_codegen_c@@Base+0x1188>
   16bc8:	ldr	ip, [sp, #44]	; 0x2c
   16bcc:	movw	r1, #376	; 0x178
   16bd0:	movt	r1, #4
   16bd4:	ldr	r0, [r4, #204]	; 0xcc
   16bd8:	mov	r2, ip
   16bdc:	add	ip, ip, #1
   16be0:	str	ip, [sp, #44]	; 0x2c
   16be4:	bl	13f60 <fprintf@plt>
   16be8:	b	16704 <__flatcc_fb_codegen_c@@Base+0x110c>
   16bec:	mov	r2, r4
   16bf0:	mov	r1, #4
   16bf4:	b	1673c <__flatcc_fb_codegen_c@@Base+0x1144>
   16bf8:	mov	ip, r4
   16bfc:	mov	r0, #4
   16c00:	b	16aec <__flatcc_fb_codegen_c@@Base+0x14f4>
   16c04:	add	r0, sp, #268	; 0x10c
   16c08:	movw	r1, #1188	; 0x4a4
   16c0c:	movt	r1, #4
   16c10:	add	r3, sp, #48	; 0x30
   16c14:	str	r7, [sp]
   16c18:	mov	r2, r4
   16c1c:	str	r6, [sp, #4]
   16c20:	str	r0, [sp, #8]
   16c24:	ldr	r0, [r4, #204]	; 0xcc
   16c28:	bl	13f60 <fprintf@plt>
   16c2c:	ldrh	r3, [r5, #72]	; 0x48
   16c30:	tst	r3, #128	; 0x80
   16c34:	beq	1696c <__flatcc_fb_codegen_c@@Base+0x1374>
   16c38:	cmp	fp, #0
   16c3c:	ldr	r3, [r4, #204]	; 0xcc
   16c40:	bne	16dac <__flatcc_fb_codegen_c@@Base+0x17b4>
   16c44:	mov	r2, #61	; 0x3d
   16c48:	mov	r1, #1
   16c4c:	movw	r0, #1312	; 0x520
   16c50:	movt	r0, #4
   16c54:	bl	13ef4 <fwrite@plt>
   16c58:	add	r0, sp, #268	; 0x10c
   16c5c:	add	r3, sp, #48	; 0x30
   16c60:	str	r7, [sp]
   16c64:	movw	r1, #1376	; 0x560
   16c68:	movt	r1, #4
   16c6c:	str	r6, [sp, #4]
   16c70:	mov	r2, r4
   16c74:	str	r0, [sp, #8]
   16c78:	ldr	r0, [r4, #204]	; 0xcc
   16c7c:	bl	13f60 <fprintf@plt>
   16c80:	ldr	r3, [r4, #212]	; 0xd4
   16c84:	ldr	r3, [r3, #136]	; 0x88
   16c88:	cmp	r3, #0
   16c8c:	beq	16cbc <__flatcc_fb_codegen_c@@Base+0x16c4>
   16c90:	add	r0, sp, #268	; 0x10c
   16c94:	add	r3, sp, #48	; 0x30
   16c98:	str	r7, [sp]
   16c9c:	movw	r1, #1880	; 0x758
   16ca0:	movt	r1, #4
   16ca4:	str	r6, [sp, #4]
   16ca8:	mov	r2, r4
   16cac:	str	r0, [sp, #8]
   16cb0:	str	r3, [sp, #12]
   16cb4:	ldr	r0, [r4, #204]	; 0xcc
   16cb8:	bl	13f60 <fprintf@plt>
   16cbc:	add	r0, sp, #268	; 0x10c
   16cc0:	add	r3, sp, #48	; 0x30
   16cc4:	str	r7, [sp]
   16cc8:	mov	r2, r4
   16ccc:	movw	r1, #1432	; 0x598
   16cd0:	movt	r1, #4
   16cd4:	str	r6, [sp, #4]
   16cd8:	str	r0, [sp, #8]
   16cdc:	ldr	r0, [r4, #204]	; 0xcc
   16ce0:	bl	13f60 <fprintf@plt>
   16ce4:	add	r0, sp, #268	; 0x10c
   16ce8:	add	r3, sp, #48	; 0x30
   16cec:	str	r7, [sp]
   16cf0:	movw	r1, #1496	; 0x5d8
   16cf4:	movt	r1, #4
   16cf8:	str	r6, [sp, #4]
   16cfc:	mov	r2, r4
   16d00:	str	r0, [sp, #8]
   16d04:	ldr	r0, [r4, #204]	; 0xcc
   16d08:	bl	13f60 <fprintf@plt>
   16d0c:	ldr	r3, [r4, #212]	; 0xd4
   16d10:	ldr	r3, [r3, #136]	; 0x88
   16d14:	cmp	r3, #0
   16d18:	bne	16ea4 <__flatcc_fb_codegen_c@@Base+0x18ac>
   16d1c:	mov	fp, #1
   16d20:	mov	r8, fp
   16d24:	b	1696c <__flatcc_fb_codegen_c@@Base+0x1374>
   16d28:	movw	r0, #34228	; 0x85b4
   16d2c:	movt	r0, #4
   16d30:	ldr	r3, [r4, #204]	; 0xcc
   16d34:	mov	r2, #3
   16d38:	mov	r1, #1
   16d3c:	bl	13ef4 <fwrite@plt>
   16d40:	b	167e4 <__flatcc_fb_codegen_c@@Base+0x11ec>
   16d44:	add	r2, sp, #48	; 0x30
   16d48:	movw	r1, #0
   16d4c:	movt	r1, #4
   16d50:	bl	13f60 <fprintf@plt>
   16d54:	add	r3, sp, #48	; 0x30
   16d58:	movw	r1, #100	; 0x64
   16d5c:	movt	r1, #4
   16d60:	mov	r2, r3
   16d64:	str	r3, [sp]
   16d68:	ldr	r0, [r4, #204]	; 0xcc
   16d6c:	bl	13f60 <fprintf@plt>
   16d70:	add	r3, sp, #48	; 0x30
   16d74:	movw	r1, #184	; 0xb8
   16d78:	movt	r1, #4
   16d7c:	mov	r2, r3
   16d80:	str	r3, [sp]
   16d84:	ldr	r0, [r4, #204]	; 0xcc
   16d88:	bl	13f60 <fprintf@plt>
   16d8c:	add	r3, sp, #48	; 0x30
   16d90:	movw	r1, #252	; 0xfc
   16d94:	movt	r1, #4
   16d98:	mov	r2, r3
   16d9c:	str	r3, [sp]
   16da0:	ldr	r0, [r4, #204]	; 0xcc
   16da4:	bl	13f60 <fprintf@plt>
   16da8:	b	16858 <__flatcc_fb_codegen_c@@Base+0x1260>
   16dac:	mov	r2, #66	; 0x42
   16db0:	mov	r1, #1
   16db4:	movw	r0, #1244	; 0x4dc
   16db8:	movt	r0, #4
   16dbc:	bl	13ef4 <fwrite@plt>
   16dc0:	mov	r2, #61	; 0x3d
   16dc4:	mov	r1, #1
   16dc8:	ldr	r3, [r4, #204]	; 0xcc
   16dcc:	movw	r0, #1312	; 0x520
   16dd0:	movt	r0, #4
   16dd4:	bl	13ef4 <fwrite@plt>
   16dd8:	add	r0, sp, #268	; 0x10c
   16ddc:	add	r3, sp, #48	; 0x30
   16de0:	str	r7, [sp]
   16de4:	movw	r1, #1376	; 0x560
   16de8:	movt	r1, #4
   16dec:	str	r6, [sp, #4]
   16df0:	mov	r2, r4
   16df4:	str	r0, [sp, #8]
   16df8:	ldr	r0, [r4, #204]	; 0xcc
   16dfc:	bl	13f60 <fprintf@plt>
   16e00:	ldr	r3, [r4, #212]	; 0xd4
   16e04:	ldr	r3, [r3, #136]	; 0x88
   16e08:	cmp	r3, #0
   16e0c:	beq	16d1c <__flatcc_fb_codegen_c@@Base+0x1724>
   16e10:	add	r0, sp, #268	; 0x10c
   16e14:	add	r3, sp, #48	; 0x30
   16e18:	str	r7, [sp]
   16e1c:	movw	r1, #1880	; 0x758
   16e20:	movt	r1, #4
   16e24:	str	r6, [sp, #4]
   16e28:	mov	r2, r4
   16e2c:	str	r0, [sp, #8]
   16e30:	mov	r8, fp
   16e34:	str	r3, [sp, #12]
   16e38:	ldr	r0, [r4, #204]	; 0xcc
   16e3c:	bl	13f60 <fprintf@plt>
   16e40:	b	1696c <__flatcc_fb_codegen_c@@Base+0x1374>
   16e44:	mov	r3, r0
   16e48:	mov	r2, #16
   16e4c:	mov	r1, #1
   16e50:	movw	r0, #332	; 0x14c
   16e54:	movt	r0, #4
   16e58:	bl	13ef4 <fwrite@plt>
   16e5c:	add	r2, sp, #48	; 0x30
   16e60:	movw	r1, #352	; 0x160
   16e64:	movt	r1, #4
   16e68:	ldr	r0, [r4, #204]	; 0xcc
   16e6c:	bl	13f60 <fprintf@plt>
   16e70:	ldr	r3, [sp, #36]	; 0x24
   16e74:	ldr	r5, [r3, #20]
   16e78:	cmp	r5, #0
   16e7c:	bne	16624 <__flatcc_fb_codegen_c@@Base+0x102c>
   16e80:	mov	r6, r5
   16e84:	str	r5, [sp, #44]	; 0x2c
   16e88:	b	167a0 <__flatcc_fb_codegen_c@@Base+0x11a8>
   16e8c:	movw	r1, #376	; 0x178
   16e90:	movt	r1, #4
   16e94:	ldr	r2, [sp, #44]	; 0x2c
   16e98:	bl	13f60 <fprintf@plt>
   16e9c:	ldr	r0, [r4, #204]	; 0xcc
   16ea0:	b	167b4 <__flatcc_fb_codegen_c@@Base+0x11bc>
   16ea4:	add	r3, sp, #48	; 0x30
   16ea8:	mov	fp, #1
   16eac:	str	r7, [sp]
   16eb0:	movw	r1, #1560	; 0x618
   16eb4:	movt	r1, #4
   16eb8:	str	r6, [sp, #4]
   16ebc:	mov	r2, r3
   16ec0:	ldr	r0, [r4, #204]	; 0xcc
   16ec4:	mov	r8, fp
   16ec8:	bl	13f60 <fprintf@plt>
   16ecc:	b	1696c <__flatcc_fb_codegen_c@@Base+0x1374>
   16ed0:	movw	r2, #572	; 0x23c
   16ed4:	movt	r2, #4
   16ed8:	ldr	r0, [r4, #204]	; 0xcc
   16edc:	movw	r1, #604	; 0x25c
   16ee0:	movt	r1, #4
   16ee4:	bl	13f60 <fprintf@plt>
   16ee8:	movw	r1, #64556	; 0xfc2c
   16eec:	movt	r1, #3
   16ef0:	movw	r3, #41128	; 0xa0a8
   16ef4:	movt	r3, #6
   16ef8:	movw	r2, #63988	; 0xf9f4
   16efc:	movt	r2, #3
   16f00:	str	r1, [sp]
   16f04:	movw	r1, #64544	; 0xfc20
   16f08:	movt	r1, #3
   16f0c:	ldr	r0, [r3]
   16f10:	movw	r3, #1029	; 0x405
   16f14:	bl	13f60 <fprintf@plt>
   16f18:	movw	r1, #63988	; 0xf9f4
   16f1c:	movt	r1, #3
   16f20:	ldr	r3, [pc, #248]	; 17020 <__flatcc_fb_codegen_c@@Base+0x1a28>
   16f24:	movw	r0, #35672	; 0x8b58
   16f28:	movt	r0, #4
   16f2c:	movw	r2, #1029	; 0x405
   16f30:	bl	14014 <__assert_fail@plt>
   16f34:	movw	r1, #64556	; 0xfc2c
   16f38:	movt	r1, #3
   16f3c:	movw	r3, #41128	; 0xa0a8
   16f40:	movt	r3, #6
   16f44:	movw	r2, #64468	; 0xfbd4
   16f48:	movt	r2, #3
   16f4c:	str	r1, [sp]
   16f50:	movw	r1, #64544	; 0xfc20
   16f54:	movt	r1, #3
   16f58:	ldr	r0, [r3]
   16f5c:	mov	r3, #141	; 0x8d
   16f60:	bl	13f60 <fprintf@plt>
   16f64:	movw	r1, #64468	; 0xfbd4
   16f68:	movt	r1, #3
   16f6c:	ldr	r3, [pc, #176]	; 17024 <__flatcc_fb_codegen_c@@Base+0x1a2c>
   16f70:	movw	r0, #35672	; 0x8b58
   16f74:	movt	r0, #4
   16f78:	mov	r2, #141	; 0x8d
   16f7c:	bl	14014 <__assert_fail@plt>
   16f80:	movw	r1, #63988	; 0xf9f4
   16f84:	movt	r1, #3
   16f88:	ldr	r3, [pc, #144]	; 17020 <__flatcc_fb_codegen_c@@Base+0x1a28>
   16f8c:	movw	r0, #444	; 0x1bc
   16f90:	movt	r0, #4
   16f94:	movw	r2, #1018	; 0x3fa
   16f98:	bl	14014 <__assert_fail@plt>
   16f9c:	movw	r1, #63988	; 0xf9f4
   16fa0:	movt	r1, #3
   16fa4:	ldr	r3, [pc, #116]	; 17020 <__flatcc_fb_codegen_c@@Base+0x1a28>
   16fa8:	movw	r0, #65440	; 0xffa0
   16fac:	movt	r0, #3
   16fb0:	mov	r2, #936	; 0x3a8
   16fb4:	bl	14014 <__assert_fail@plt>
   16fb8:	movw	r1, #63988	; 0xf9f4
   16fbc:	movt	r1, #3
   16fc0:	ldr	r3, [pc, #88]	; 17020 <__flatcc_fb_codegen_c@@Base+0x1a28>
   16fc4:	movw	r0, #65504	; 0xffe0
   16fc8:	movt	r0, #3
   16fcc:	movw	r2, #938	; 0x3aa
   16fd0:	bl	14014 <__assert_fail@plt>
   16fd4:	movw	r1, #64556	; 0xfc2c
   16fd8:	movt	r1, #3
   16fdc:	movw	r3, #41128	; 0xa0a8
   16fe0:	movt	r3, #6
   16fe4:	movw	r2, #64468	; 0xfbd4
   16fe8:	movt	r2, #3
   16fec:	str	r1, [sp]
   16ff0:	movw	r1, #64544	; 0xfc20
   16ff4:	movt	r1, #3
   16ff8:	ldr	r0, [r3]
   16ffc:	mov	r3, #96	; 0x60
   17000:	bl	13f60 <fprintf@plt>
   17004:	movw	r1, #64468	; 0xfbd4
   17008:	movt	r1, #3
   1700c:	ldr	r3, [pc, #20]	; 17028 <__flatcc_fb_codegen_c@@Base+0x1a30>
   17010:	movw	r0, #35672	; 0x8b58
   17014:	movt	r0, #4
   17018:	mov	r2, #96	; 0x60
   1701c:	bl	14014 <__assert_fail@plt>
   17020:	andeq	pc, r3, ip, lsr #18
   17024:	andeq	pc, r3, r4, ror #17
   17028:	andeq	pc, r3, r4, ror #18
   1702c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17030:	strd	r6, [sp, #8]
   17034:	ldrh	r6, [r1, #8]
   17038:	strd	r8, [sp, #16]
   1703c:	strd	sl, [sp, #24]
   17040:	str	lr, [sp, #32]
   17044:	sub	sp, sp, #1056	; 0x420
   17048:	sub	sp, sp, #4
   1704c:	cmp	r6, #0
   17050:	str	r1, [sp, #68]	; 0x44
   17054:	bne	18150 <__flatcc_fb_codegen_c@@Base+0x2b58>
   17058:	add	fp, sp, #176	; 0xb0
   1705c:	mov	r5, r0
   17060:	mov	r2, #220	; 0xdc
   17064:	mov	r1, r6
   17068:	mov	r0, fp
   1706c:	bl	13f78 <memset@plt>
   17070:	mov	r2, #220	; 0xdc
   17074:	mov	r1, r6
   17078:	add	r0, sp, #396	; 0x18c
   1707c:	bl	13f78 <memset@plt>
   17080:	mov	r0, #10
   17084:	ldr	r1, [r5, #204]	; 0xcc
   17088:	bl	13fc0 <fputc@plt>
   1708c:	ldr	r4, [sp, #68]	; 0x44
   17090:	mov	r2, fp
   17094:	mov	r1, r4
   17098:	ldr	r0, [r4, #12]
   1709c:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   170a0:	ldr	r4, [r4, #32]
   170a4:	cmp	r4, #0
   170a8:	beq	17140 <__flatcc_fb_codegen_c@@Base+0x1b48>
   170ac:	mov	r1, r6
   170b0:	movw	r8, #64736	; 0xfce0
   170b4:	movt	r8, #3
   170b8:	movw	r6, #39472	; 0x9a30
   170bc:	movt	r6, #4
   170c0:	movw	r7, #64728	; 0xfcd8
   170c4:	movt	r7, #3
   170c8:	mov	ip, #1
   170cc:	ldr	r2, [r4, #4]
   170d0:	ldr	r0, [r5, #204]	; 0xcc
   170d4:	ldr	r3, [r2, #8]
   170d8:	cmp	r3, r1
   170dc:	beq	170fc <__flatcc_fb_codegen_c@@Base+0x1b04>
   170e0:	cmp	ip, #0
   170e4:	mov	r2, r6
   170e8:	movne	r1, r7
   170ec:	moveq	r1, r8
   170f0:	bl	13f60 <fprintf@plt>
   170f4:	ldr	r2, [r4, #4]
   170f8:	ldr	r0, [r5, #204]	; 0xcc
   170fc:	movw	r1, #35640	; 0x8b38
   17100:	movt	r1, #4
   17104:	ldr	r3, [r2]
   17108:	ldr	r2, [r2, #4]
   1710c:	bl	13f60 <fprintf@plt>
   17110:	ldr	r3, [r4, #4]
   17114:	mov	ip, #0
   17118:	ldr	r4, [r4]
   1711c:	ldr	r1, [r3, #8]
   17120:	cmp	r4, ip
   17124:	bne	170cc <__flatcc_fb_codegen_c@@Base+0x1ad4>
   17128:	movw	r0, #1740	; 0x6cc
   1712c:	movt	r0, #4
   17130:	ldr	r3, [r5, #204]	; 0xcc
   17134:	mov	r2, #4
   17138:	mov	r1, #1
   1713c:	bl	13ef4 <fwrite@plt>
   17140:	mov	r2, fp
   17144:	movw	r1, #1996	; 0x7cc
   17148:	movt	r1, #4
   1714c:	ldr	r0, [r5, #204]	; 0xcc
   17150:	bl	13f60 <fprintf@plt>
   17154:	mov	r3, fp
   17158:	mov	r2, fp
   1715c:	str	r5, [sp]
   17160:	movw	r1, #984	; 0x3d8
   17164:	movt	r1, #4
   17168:	ldr	r0, [r5, #204]	; 0xcc
   1716c:	bl	13f60 <fprintf@plt>
   17170:	mov	r3, fp
   17174:	mov	r2, fp
   17178:	str	fp, [sp]
   1717c:	movw	r1, #2040	; 0x7f8
   17180:	movt	r1, #4
   17184:	stmib	sp, {r5, fp}
   17188:	ldr	r0, [r5, #204]	; 0xcc
   1718c:	bl	13f60 <fprintf@plt>
   17190:	mov	r3, fp
   17194:	mov	r2, r5
   17198:	ldr	r0, [r5, #204]	; 0xcc
   1719c:	movw	r1, #2144	; 0x860
   171a0:	movt	r1, #4
   171a4:	bl	13f60 <fprintf@plt>
   171a8:	mov	r0, #10
   171ac:	ldr	r1, [r5, #204]	; 0xcc
   171b0:	bl	13fc0 <fputc@plt>
   171b4:	ldr	r3, [sp, #68]	; 0x44
   171b8:	ldr	r4, [r3, #20]
   171bc:	cmp	r4, #0
   171c0:	beq	17394 <__flatcc_fb_codegen_c@@Base+0x1d9c>
   171c4:	movw	r3, #64736	; 0xfce0
   171c8:	movt	r3, #3
   171cc:	movw	sl, #39472	; 0x9a30
   171d0:	movt	sl, #4
   171d4:	str	r3, [sp, #44]	; 0x2c
   171d8:	movw	r3, #64728	; 0xfcd8
   171dc:	movt	r3, #3
   171e0:	str	r3, [sp, #48]	; 0x30
   171e4:	mov	r3, #0
   171e8:	str	r3, [sp, #52]	; 0x34
   171ec:	ldr	r6, [r4, #68]	; 0x44
   171f0:	cmp	r6, #0
   171f4:	beq	17274 <__flatcc_fb_codegen_c@@Base+0x1c7c>
   171f8:	mov	r1, #1
   171fc:	mov	r3, #0
   17200:	ldr	r2, [r6, #4]
   17204:	ldr	r0, [r5, #204]	; 0xcc
   17208:	ldr	ip, [r2, #8]
   1720c:	cmp	ip, r3
   17210:	beq	17230 <__flatcc_fb_codegen_c@@Base+0x1c38>
   17214:	cmp	r1, #0
   17218:	mov	r2, sl
   1721c:	ldrne	r1, [sp, #48]	; 0x30
   17220:	ldreq	r1, [sp, #44]	; 0x2c
   17224:	bl	13f60 <fprintf@plt>
   17228:	ldr	r2, [r6, #4]
   1722c:	ldr	r0, [r5, #204]	; 0xcc
   17230:	movw	r1, #35640	; 0x8b38
   17234:	movt	r1, #4
   17238:	ldr	r3, [r2]
   1723c:	ldr	r2, [r2, #4]
   17240:	bl	13f60 <fprintf@plt>
   17244:	ldr	r3, [r6, #4]
   17248:	mov	r1, #0
   1724c:	ldr	r6, [r6]
   17250:	ldr	r3, [r3, #8]
   17254:	cmp	r6, r1
   17258:	bne	17200 <__flatcc_fb_codegen_c@@Base+0x1c08>
   1725c:	movw	r0, #1740	; 0x6cc
   17260:	movt	r0, #4
   17264:	ldr	r3, [r5, #204]	; 0xcc
   17268:	mov	r2, #4
   1726c:	mov	r1, #1
   17270:	bl	13ef4 <fwrite@plt>
   17274:	ldr	r3, [r4, #4]
   17278:	ldrh	r6, [r4, #72]	; 0x48
   1727c:	ldr	r7, [r3]
   17280:	ldr	r3, [r3, #4]
   17284:	tst	r6, #4
   17288:	str	r3, [sp, #40]	; 0x28
   1728c:	bne	178fc <__flatcc_fb_codegen_c@@Base+0x2304>
   17290:	ldrh	r3, [r4, #24]
   17294:	ubfx	r6, r6, #8, #1
   17298:	sub	r3, r3, #7
   1729c:	cmp	r3, #8
   172a0:	ldrls	pc, [pc, r3, lsl #2]
   172a4:	b	17f68 <__flatcc_fb_codegen_c@@Base+0x2970>
   172a8:	andeq	r7, r1, r0, ror r4
   172ac:	andeq	r7, r1, r4, lsl r4
   172b0:			; <UNDEFINED> instruction: 0x000173b4
   172b4:	andeq	r7, r1, ip, lsr r3
   172b8:	andeq	r7, r1, r8, ror #30
   172bc:	andeq	r7, r1, r8, ror #30
   172c0:	andeq	r7, r1, r8, ror #30
   172c4:	andeq	r7, r1, r4, lsl #6
   172c8:	andeq	r7, r1, ip, asr #5
   172cc:	ldr	r1, [r4, #16]
   172d0:	add	r2, sp, #396	; 0x18c
   172d4:	ldr	r0, [r1, #12]
   172d8:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   172dc:	ldr	r3, [r4, #16]
   172e0:	ldrh	r3, [r3, #8]
   172e4:	cmp	r3, #4
   172e8:	ldrls	pc, [pc, r3, lsl #2]
   172ec:	b	18098 <__flatcc_fb_codegen_c@@Base+0x2aa0>
   172f0:	andeq	r7, r1, r4, lsl #11
   172f4:	andeq	r7, r1, r4, lsl #11
   172f8:	muleq	r1, r8, r0
   172fc:	andeq	r7, r1, r4, lsl #11
   17300:	andeq	r7, r1, r4, lsl #11
   17304:	ldr	r1, [r4, #16]
   17308:	add	r2, sp, #396	; 0x18c
   1730c:	ldr	r0, [r1, #12]
   17310:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   17314:	ldr	r2, [r4, #16]
   17318:	ldrh	r3, [r2, #8]
   1731c:	cmp	r3, #4
   17320:	ldrls	pc, [pc, r3, lsl #2]
   17324:	b	1804c <__flatcc_fb_codegen_c@@Base+0x2a54>
   17328:	andeq	r7, r1, r8, asr #12
   1732c:	andeq	r7, r1, r0, lsr #12
   17330:	andeq	r8, r1, ip, asr #32
   17334:	andeq	r7, r1, r8, asr r6
   17338:	ldrdeq	r7, [r1], -r4
   1733c:	ldr	r3, [sp, #40]	; 0x28
   17340:	movw	r1, #2684	; 0xa7c
   17344:	movt	r1, #4
   17348:	str	fp, [sp, #8]
   1734c:	mov	r2, r5
   17350:	str	r3, [sp, #12]
   17354:	str	r7, [sp, #16]
   17358:	str	r6, [sp, #20]
   1735c:	ldrd	r8, [r4, #96]	; 0x60
   17360:	ldr	r0, [r5, #204]	; 0xcc
   17364:	strd	r8, [sp]
   17368:	bl	13f60 <fprintf@plt>
   1736c:	ldr	r3, [r5, #212]	; 0xd4
   17370:	ldr	r3, [r3, #32]
   17374:	cmp	r3, #0
   17378:	bne	17938 <__flatcc_fb_codegen_c@@Base+0x2340>
   1737c:	ldrh	r3, [r4, #72]	; 0x48
   17380:	tst	r3, #128	; 0x80
   17384:	bne	17918 <__flatcc_fb_codegen_c@@Base+0x2320>
   17388:	ldr	r4, [r4]
   1738c:	cmp	r4, #0
   17390:	bne	171ec <__flatcc_fb_codegen_c@@Base+0x1bf4>
   17394:	add	sp, sp, #1056	; 0x420
   17398:	add	sp, sp, #4
   1739c:	ldrd	r4, [sp]
   173a0:	ldrd	r6, [sp, #8]
   173a4:	ldrd	r8, [sp, #16]
   173a8:	ldrd	sl, [sp, #24]
   173ac:	add	sp, sp, #32
   173b0:	pop	{pc}		; (ldr pc, [sp], #4)
   173b4:	ldr	r3, [sp, #40]	; 0x28
   173b8:	movw	r1, #2924	; 0xb6c
   173bc:	movt	r1, #4
   173c0:	mov	r2, r5
   173c4:	str	fp, [sp, #8]
   173c8:	str	r3, [sp, #12]
   173cc:	str	r7, [sp, #16]
   173d0:	str	r5, [sp, #20]
   173d4:	str	r6, [sp, #24]
   173d8:	ldrd	r6, [r4, #96]	; 0x60
   173dc:	ldr	r0, [r5, #204]	; 0xcc
   173e0:	strd	r6, [sp]
   173e4:	bl	13f60 <fprintf@plt>
   173e8:	ldrh	r3, [r4, #72]	; 0x48
   173ec:	tst	r3, #128	; 0x80
   173f0:	beq	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   173f4:	mov	r1, #1
   173f8:	movw	r0, #1660	; 0x67c
   173fc:	movt	r0, #4
   17400:	mov	r2, #84	; 0x54
   17404:	ldr	r3, [r5, #204]	; 0xcc
   17408:	str	r1, [sp, #52]	; 0x34
   1740c:	bl	13ef4 <fwrite@plt>
   17410:	b	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17414:	ldr	r1, [r4, #16]
   17418:	cmp	r1, #5
   1741c:	beq	17a44 <__flatcc_fb_codegen_c@@Base+0x244c>
   17420:	sub	r0, r1, #1
   17424:	cmp	r0, #10
   17428:	bhi	18000 <__flatcc_fb_codegen_c@@Base+0x2a08>
   1742c:	lsl	r3, r0, #2
   17430:	movw	r8, #63628	; 0xf88c
   17434:	movt	r8, #3
   17438:	ldrh	r2, [r4, #56]	; 0x38
   1743c:	add	ip, r8, r3
   17440:	ldr	lr, [ip, #44]	; 0x2c
   17444:	ldr	ip, [ip, #172]	; 0xac
   17448:	sub	r2, r2, #3
   1744c:	str	lr, [sp, #56]	; 0x38
   17450:	str	ip, [sp, #64]	; 0x40
   17454:	cmp	r2, #3
   17458:	ldrls	pc, [pc, r2, lsl #2]
   1745c:	b	1816c <__flatcc_fb_codegen_c@@Base+0x2b74>
   17460:	muleq	r1, r8, r8
   17464:	andeq	r7, r1, r4, ror #16
   17468:	andeq	r7, r1, r0, lsl #13
   1746c:	andeq	r7, r1, ip, asr #17
   17470:	ldr	r3, [r4, #16]
   17474:	sub	r3, r3, #1
   17478:	cmp	r3, #10
   1747c:	bhi	17fb4 <__flatcc_fb_codegen_c@@Base+0x29bc>
   17480:	movw	r8, #63628	; 0xf88c
   17484:	movt	r8, #3
   17488:	ldr	r2, [sp, #40]	; 0x28
   1748c:	add	r3, r8, r3, lsl #2
   17490:	str	fp, [sp, #8]
   17494:	movw	r1, #2500	; 0x9c4
   17498:	movt	r1, #4
   1749c:	ldr	r3, [r3, #248]	; 0xf8
   174a0:	str	r2, [sp, #12]
   174a4:	mov	r2, r5
   174a8:	str	r7, [sp, #16]
   174ac:	str	r5, [sp, #20]
   174b0:	str	r6, [sp, #28]
   174b4:	ldr	r0, [r5, #204]	; 0xcc
   174b8:	str	r3, [sp, #24]
   174bc:	ldrd	r6, [r4, #96]	; 0x60
   174c0:	strd	r6, [sp]
   174c4:	bl	13f60 <fprintf@plt>
   174c8:	ldr	r7, [r4, #104]	; 0x68
   174cc:	cmp	r7, #0
   174d0:	beq	17a34 <__flatcc_fb_codegen_c@@Base+0x243c>
   174d4:	mov	r2, #220	; 0xdc
   174d8:	mov	r1, #0
   174dc:	add	r0, sp, #616	; 0x268
   174e0:	bl	13f78 <memset@plt>
   174e4:	add	r0, sp, #836	; 0x344
   174e8:	mov	r2, #220	; 0xdc
   174ec:	mov	r1, #0
   174f0:	bl	13f78 <memset@plt>
   174f4:	ldrh	r3, [r7, #8]
   174f8:	cmp	r3, #0
   174fc:	bne	17a20 <__flatcc_fb_codegen_c@@Base+0x2428>
   17500:	movw	r6, #1948	; 0x79c
   17504:	movt	r6, #4
   17508:	add	r2, sp, #616	; 0x268
   1750c:	mov	r1, r7
   17510:	ldr	r0, [r7, #12]
   17514:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   17518:	ldr	r3, [sp, #68]	; 0x44
   1751c:	ldrh	r3, [r3, #8]
   17520:	cmp	r3, #0
   17524:	bne	180e4 <__flatcc_fb_codegen_c@@Base+0x2aec>
   17528:	ldr	r3, [sp, #68]	; 0x44
   1752c:	add	r2, sp, #836	; 0x344
   17530:	mov	r1, r3
   17534:	ldr	r0, [r3, #12]
   17538:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1753c:	ldr	ip, [r4, #4]
   17540:	add	r2, sp, #616	; 0x268
   17544:	add	r3, sp, #836	; 0x344
   17548:	movw	r1, #2636	; 0xa4c
   1754c:	movt	r1, #4
   17550:	str	r2, [sp, #8]
   17554:	mov	r2, r5
   17558:	str	r6, [sp, #12]
   1755c:	ldr	r0, [r5, #204]	; 0xcc
   17560:	ldr	lr, [ip]
   17564:	str	lr, [sp, #4]
   17568:	ldr	ip, [ip, #4]
   1756c:	str	ip, [sp]
   17570:	bl	13f60 <fprintf@plt>
   17574:	ldrh	r3, [r4, #72]	; 0x48
   17578:	tst	r3, #128	; 0x80
   1757c:	bne	173f4 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   17580:	b	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17584:	cmp	r3, #4
   17588:	ldrd	r2, [r4, #96]	; 0x60
   1758c:	ldr	r0, [r5, #204]	; 0xcc
   17590:	strd	r2, [sp]
   17594:	beq	17a68 <__flatcc_fb_codegen_c@@Base+0x2470>
   17598:	ldr	r3, [sp, #40]	; 0x28
   1759c:	movw	r1, #3432	; 0xd68
   175a0:	movt	r1, #4
   175a4:	mov	r2, r5
   175a8:	str	fp, [sp, #8]
   175ac:	str	r3, [sp, #12]
   175b0:	add	r3, sp, #396	; 0x18c
   175b4:	str	r7, [sp, #16]
   175b8:	str	r3, [sp, #20]
   175bc:	str	r6, [sp, #24]
   175c0:	bl	13f60 <fprintf@plt>
   175c4:	ldrh	r3, [r4, #72]	; 0x48
   175c8:	tst	r3, #128	; 0x80
   175cc:	bne	173f4 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   175d0:	b	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   175d4:	ldr	r3, [sp, #40]	; 0x28
   175d8:	add	r0, sp, #396	; 0x18c
   175dc:	movw	r1, #3164	; 0xc5c
   175e0:	movt	r1, #4
   175e4:	str	fp, [sp, #8]
   175e8:	mov	r2, r5
   175ec:	str	r3, [sp, #12]
   175f0:	mov	r3, r5
   175f4:	str	r7, [sp, #16]
   175f8:	str	r0, [sp, #20]
   175fc:	str	r6, [sp, #24]
   17600:	ldrd	r6, [r4, #96]	; 0x60
   17604:	ldr	r0, [r5, #204]	; 0xcc
   17608:	strd	r6, [sp]
   1760c:	bl	13f60 <fprintf@plt>
   17610:	ldrh	r3, [r4, #72]	; 0x48
   17614:	tst	r3, #128	; 0x80
   17618:	bne	173f4 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   1761c:	b	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17620:	movw	r1, #2988	; 0xbac
   17624:	movt	r1, #4
   17628:	str	fp, [sp, #8]
   1762c:	ldr	r3, [sp, #40]	; 0x28
   17630:	mov	r2, r5
   17634:	str	r3, [sp, #12]
   17638:	add	r3, sp, #396	; 0x18c
   1763c:	str	r7, [sp, #16]
   17640:	str	r3, [sp, #20]
   17644:	b	173d4 <__flatcc_fb_codegen_c@@Base+0x1ddc>
   17648:	movw	r1, #3048	; 0xbe8
   1764c:	movt	r1, #4
   17650:	str	fp, [sp, #8]
   17654:	b	1762c <__flatcc_fb_codegen_c@@Base+0x2034>
   17658:	ldrh	r1, [r4, #56]	; 0x38
   1765c:	ldr	r3, [r2, #40]	; 0x28
   17660:	sub	r2, r1, #3
   17664:	cmp	r2, #3
   17668:	ldrls	pc, [pc, r2, lsl #2]
   1766c:	b	1816c <__flatcc_fb_codegen_c@@Base+0x2b74>
   17670:	andeq	r7, r1, r8, lsl #29
   17674:	andeq	r7, r1, r0, ror #28
   17678:	andeq	r7, r1, r4, lsr #28
   1767c:	andeq	r7, r1, ip, ror ip
   17680:	cmp	r0, #8
   17684:	bhi	18100 <__flatcc_fb_codegen_c@@Base+0x2b08>
   17688:	str	sl, [sp, #60]	; 0x3c
   1768c:	add	r8, r8, r3
   17690:	add	r6, sp, #76	; 0x4c
   17694:	ldr	r2, [r8, #108]	; 0x6c
   17698:	movw	r1, #64840	; 0xfd48
   1769c:	movt	r1, #3
   176a0:	mov	r0, r6
   176a4:	ldrd	r8, [r4, #48]	; 0x30
   176a8:	strd	r8, [sp]
   176ac:	bl	13fcc <sprintf@plt>
   176b0:	ldr	r3, [sp, #40]	; 0x28
   176b4:	movw	r1, #2216	; 0x8a8
   176b8:	movt	r1, #4
   176bc:	str	fp, [sp, #8]
   176c0:	mov	r2, r5
   176c4:	str	r3, [sp, #12]
   176c8:	ldr	r3, [sp, #64]	; 0x40
   176cc:	str	r7, [sp, #16]
   176d0:	str	r5, [sp, #20]
   176d4:	str	r6, [sp, #36]	; 0x24
   176d8:	str	r3, [sp, #24]
   176dc:	ldr	r3, [sp, #60]	; 0x3c
   176e0:	str	r3, [sp, #28]
   176e4:	ldr	r3, [sp, #56]	; 0x38
   176e8:	str	r3, [sp, #32]
   176ec:	ldrd	r8, [r4, #96]	; 0x60
   176f0:	ldr	r0, [r5, #204]	; 0xcc
   176f4:	strd	r8, [sp]
   176f8:	bl	13f60 <fprintf@plt>
   176fc:	ldr	r3, [r5, #212]	; 0xd4
   17700:	ldr	r3, [r3, #32]
   17704:	cmp	r3, #0
   17708:	bne	17748 <__flatcc_fb_codegen_c@@Base+0x2150>
   1770c:	ldrh	r3, [r4, #72]	; 0x48
   17710:	tst	r3, #128	; 0x80
   17714:	beq	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17718:	ldr	r3, [sp, #40]	; 0x28
   1771c:	movw	r1, #2276	; 0x8e4
   17720:	movt	r1, #4
   17724:	mov	r2, r5
   17728:	ldr	r0, [sp, #60]	; 0x3c
   1772c:	stm	sp, {r3, r7}
   17730:	mov	r3, fp
   17734:	str	r0, [sp, #8]
   17738:	ldr	r0, [sp, #56]	; 0x38
   1773c:	str	r0, [sp, #12]
   17740:	ldr	r0, [r5, #204]	; 0xcc
   17744:	bl	13f60 <fprintf@plt>
   17748:	ldrh	r3, [r4, #72]	; 0x48
   1774c:	tst	r3, #128	; 0x80
   17750:	beq	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17754:	ldr	r3, [sp, #52]	; 0x34
   17758:	cmp	r3, #0
   1775c:	ldr	r3, [r5, #204]	; 0xcc
   17760:	bne	17aa8 <__flatcc_fb_codegen_c@@Base+0x24b0>
   17764:	mov	r2, #61	; 0x3d
   17768:	mov	r1, #1
   1776c:	movw	r0, #1312	; 0x520
   17770:	movt	r0, #4
   17774:	bl	13ef4 <fwrite@plt>
   17778:	ldr	r3, [sp, #40]	; 0x28
   1777c:	movw	r1, #2328	; 0x918
   17780:	movt	r1, #4
   17784:	mov	r2, r5
   17788:	ldr	r0, [sp, #60]	; 0x3c
   1778c:	stm	sp, {r3, r7}
   17790:	mov	r3, fp
   17794:	str	r0, [sp, #8]
   17798:	ldr	r0, [sp, #56]	; 0x38
   1779c:	str	r0, [sp, #12]
   177a0:	ldr	r0, [r5, #204]	; 0xcc
   177a4:	bl	13f60 <fprintf@plt>
   177a8:	ldr	r3, [r5, #212]	; 0xd4
   177ac:	ldr	r3, [r3, #136]	; 0x88
   177b0:	cmp	r3, #0
   177b4:	beq	177ec <__flatcc_fb_codegen_c@@Base+0x21f4>
   177b8:	ldr	r3, [sp, #40]	; 0x28
   177bc:	movw	r1, #3556	; 0xde4
   177c0:	movt	r1, #4
   177c4:	mov	r2, r5
   177c8:	ldr	r0, [sp, #60]	; 0x3c
   177cc:	stm	sp, {r3, r7}
   177d0:	mov	r3, fp
   177d4:	str	r0, [sp, #8]
   177d8:	ldr	r0, [sp, #56]	; 0x38
   177dc:	str	r5, [sp, #16]
   177e0:	str	r0, [sp, #12]
   177e4:	ldr	r0, [r5, #204]	; 0xcc
   177e8:	bl	13f60 <fprintf@plt>
   177ec:	ldr	r9, [sp, #40]	; 0x28
   177f0:	mov	r3, fp
   177f4:	mov	r2, r5
   177f8:	movw	r1, #2380	; 0x94c
   177fc:	movt	r1, #4
   17800:	ldr	r8, [sp, #56]	; 0x38
   17804:	ldr	r6, [sp, #60]	; 0x3c
   17808:	str	r9, [sp]
   1780c:	str	r7, [sp, #4]
   17810:	str	r6, [sp, #8]
   17814:	str	r8, [sp, #12]
   17818:	ldr	r0, [r5, #204]	; 0xcc
   1781c:	bl	13f60 <fprintf@plt>
   17820:	mov	r3, fp
   17824:	movw	r1, #2440	; 0x988
   17828:	movt	r1, #4
   1782c:	mov	r2, r5
   17830:	str	r9, [sp]
   17834:	str	r7, [sp, #4]
   17838:	str	r6, [sp, #8]
   1783c:	str	r8, [sp, #12]
   17840:	ldr	r0, [r5, #204]	; 0xcc
   17844:	bl	13f60 <fprintf@plt>
   17848:	ldr	r3, [r5, #212]	; 0xd4
   1784c:	ldr	r3, [r3, #136]	; 0x88
   17850:	cmp	r3, #0
   17854:	bne	179f4 <__flatcc_fb_codegen_c@@Base+0x23fc>
   17858:	mov	r3, #1
   1785c:	str	r3, [sp, #52]	; 0x34
   17860:	b	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17864:	cmp	r0, #8
   17868:	str	sl, [sp, #60]	; 0x3c
   1786c:	bhi	18100 <__flatcc_fb_codegen_c@@Base+0x2b08>
   17870:	add	r8, r8, r3
   17874:	add	r6, sp, #76	; 0x4c
   17878:	ldr	r2, [r8, #108]	; 0x6c
   1787c:	mov	r0, r6
   17880:	movw	r1, #64852	; 0xfd54
   17884:	movt	r1, #3
   17888:	ldrd	r8, [r4, #48]	; 0x30
   1788c:	strd	r8, [sp]
   17890:	bl	13fcc <sprintf@plt>
   17894:	b	176b0 <__flatcc_fb_codegen_c@@Base+0x20b8>
   17898:	cmp	r1, #11
   1789c:	bne	17c74 <__flatcc_fb_codegen_c@@Base+0x267c>
   178a0:	vldr	d7, [r4, #48]	; 0x30
   178a4:	add	r6, sp, #76	; 0x4c
   178a8:	movw	r1, #64872	; 0xfd68
   178ac:	movt	r1, #3
   178b0:	mov	r0, r6
   178b4:	str	sl, [sp, #60]	; 0x3c
   178b8:	vcvt.f32.f64	s14, d7
   178bc:	vcvt.f64.f32	d7, s14
   178c0:	vmov	r2, r3, d7
   178c4:	bl	13fcc <sprintf@plt>
   178c8:	b	176b0 <__flatcc_fb_codegen_c@@Base+0x20b8>
   178cc:	cmp	r0, #8
   178d0:	str	sl, [sp, #60]	; 0x3c
   178d4:	bhi	18100 <__flatcc_fb_codegen_c@@Base+0x2b08>
   178d8:	add	r8, r8, r3
   178dc:	add	r6, sp, #76	; 0x4c
   178e0:	ldrb	r3, [r4, #48]	; 0x30
   178e4:	mov	r0, r6
   178e8:	movw	r1, #64864	; 0xfd60
   178ec:	movt	r1, #3
   178f0:	ldr	r2, [r8, #108]	; 0x6c
   178f4:	bl	13fcc <sprintf@plt>
   178f8:	b	176b0 <__flatcc_fb_codegen_c@@Base+0x20b8>
   178fc:	movw	r1, #2168	; 0x878
   17900:	movt	r1, #4
   17904:	str	r7, [sp]
   17908:	mov	r2, fp
   1790c:	ldr	r0, [r5, #204]	; 0xcc
   17910:	bl	13f60 <fprintf@plt>
   17914:	b	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17918:	ldr	r3, [sp, #40]	; 0x28
   1791c:	movw	r1, #2732	; 0xaac
   17920:	movt	r1, #4
   17924:	mov	r2, r5
   17928:	stm	sp, {r3, r7}
   1792c:	mov	r3, fp
   17930:	ldr	r0, [r5, #204]	; 0xcc
   17934:	bl	13f60 <fprintf@plt>
   17938:	ldrh	r3, [r4, #72]	; 0x48
   1793c:	tst	r3, #128	; 0x80
   17940:	beq	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17944:	ldr	r3, [sp, #52]	; 0x34
   17948:	ldr	r0, [r5, #204]	; 0xcc
   1794c:	cmp	r3, #0
   17950:	bne	17b4c <__flatcc_fb_codegen_c@@Base+0x2554>
   17954:	ldr	r2, [sp, #40]	; 0x28
   17958:	mov	r3, fp
   1795c:	movw	r1, #2776	; 0xad8
   17960:	movt	r1, #4
   17964:	stm	sp, {r2, r7}
   17968:	mov	r2, r5
   1796c:	bl	13f60 <fprintf@plt>
   17970:	ldr	r3, [r5, #212]	; 0xd4
   17974:	ldr	r3, [r3, #136]	; 0x88
   17978:	cmp	r3, #0
   1797c:	beq	179a0 <__flatcc_fb_codegen_c@@Base+0x23a8>
   17980:	ldr	r3, [sp, #40]	; 0x28
   17984:	movw	r1, #3620	; 0xe24
   17988:	movt	r1, #4
   1798c:	mov	r2, r5
   17990:	stm	sp, {r3, r7}
   17994:	mov	r3, fp
   17998:	ldr	r0, [r5, #204]	; 0xcc
   1799c:	bl	13f60 <fprintf@plt>
   179a0:	ldr	r6, [sp, #40]	; 0x28
   179a4:	mov	r2, r5
   179a8:	movw	r1, #2820	; 0xb04
   179ac:	movt	r1, #4
   179b0:	mov	r3, r6
   179b4:	stm	sp, {r3, r7}
   179b8:	mov	r3, fp
   179bc:	ldr	r0, [r5, #204]	; 0xcc
   179c0:	bl	13f60 <fprintf@plt>
   179c4:	mov	r3, r6
   179c8:	movw	r1, #2872	; 0xb38
   179cc:	movt	r1, #4
   179d0:	mov	r2, r5
   179d4:	stm	sp, {r3, r7}
   179d8:	mov	r3, fp
   179dc:	ldr	r0, [r5, #204]	; 0xcc
   179e0:	bl	13f60 <fprintf@plt>
   179e4:	ldr	r3, [r5, #212]	; 0xd4
   179e8:	ldr	r3, [r3, #136]	; 0x88
   179ec:	cmp	r3, #0
   179f0:	beq	17858 <__flatcc_fb_codegen_c@@Base+0x2260>
   179f4:	ldr	r3, [sp, #40]	; 0x28
   179f8:	mov	ip, #1
   179fc:	movw	r1, #1560	; 0x618
   17a00:	movt	r1, #4
   17a04:	mov	r2, fp
   17a08:	stm	sp, {r3, r7}
   17a0c:	mov	r3, fp
   17a10:	ldr	r0, [r5, #204]	; 0xcc
   17a14:	str	ip, [sp, #52]	; 0x34
   17a18:	bl	13f60 <fprintf@plt>
   17a1c:	b	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17a20:	cmp	r3, #1
   17a24:	bne	18104 <__flatcc_fb_codegen_c@@Base+0x2b0c>
   17a28:	movw	r6, #1956	; 0x7a4
   17a2c:	movt	r6, #4
   17a30:	b	17508 <__flatcc_fb_codegen_c@@Base+0x1f10>
   17a34:	ldrh	r3, [r4, #72]	; 0x48
   17a38:	tst	r3, #128	; 0x80
   17a3c:	beq	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17a40:	b	173f4 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   17a44:	ldrh	r3, [r4, #56]	; 0x38
   17a48:	sub	r3, r3, #3
   17a4c:	cmp	r3, #3
   17a50:	ldrls	pc, [pc, r3, lsl #2]
   17a54:	b	1816c <__flatcc_fb_codegen_c@@Base+0x2b74>
   17a58:	andeq	r7, r1, ip, lsr ip
   17a5c:	andeq	r7, r1, r0, lsl ip
   17a60:	andeq	r7, r1, r4, ror #23
   17a64:			; <UNDEFINED> instruction: 0x00017bb8
   17a68:	ldr	r2, [sp, #40]	; 0x28
   17a6c:	add	ip, sp, #396	; 0x18c
   17a70:	mov	r3, r5
   17a74:	movw	r1, #3372	; 0xd2c
   17a78:	movt	r1, #4
   17a7c:	str	fp, [sp, #8]
   17a80:	str	r2, [sp, #12]
   17a84:	mov	r2, r5
   17a88:	str	r7, [sp, #16]
   17a8c:	str	ip, [sp, #20]
   17a90:	str	r6, [sp, #24]
   17a94:	bl	13f60 <fprintf@plt>
   17a98:	ldrh	r3, [r4, #72]	; 0x48
   17a9c:	tst	r3, #128	; 0x80
   17aa0:	bne	173f4 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   17aa4:	b	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17aa8:	mov	r2, #66	; 0x42
   17aac:	mov	r1, #1
   17ab0:	movw	r0, #1244	; 0x4dc
   17ab4:	movt	r0, #4
   17ab8:	bl	13ef4 <fwrite@plt>
   17abc:	mov	r2, #61	; 0x3d
   17ac0:	mov	r1, #1
   17ac4:	ldr	r3, [r5, #204]	; 0xcc
   17ac8:	movw	r0, #1312	; 0x520
   17acc:	movt	r0, #4
   17ad0:	bl	13ef4 <fwrite@plt>
   17ad4:	ldr	r3, [sp, #40]	; 0x28
   17ad8:	movw	r1, #2328	; 0x918
   17adc:	movt	r1, #4
   17ae0:	mov	r2, r5
   17ae4:	ldr	r0, [sp, #60]	; 0x3c
   17ae8:	stm	sp, {r3, r7}
   17aec:	mov	r3, fp
   17af0:	str	r0, [sp, #8]
   17af4:	ldr	r0, [sp, #56]	; 0x38
   17af8:	str	r0, [sp, #12]
   17afc:	ldr	r0, [r5, #204]	; 0xcc
   17b00:	bl	13f60 <fprintf@plt>
   17b04:	ldr	r3, [r5, #212]	; 0xd4
   17b08:	ldr	r3, [r3, #136]	; 0x88
   17b0c:	cmp	r3, #0
   17b10:	beq	17858 <__flatcc_fb_codegen_c@@Base+0x2260>
   17b14:	ldr	r3, [sp, #40]	; 0x28
   17b18:	movw	r1, #3556	; 0xde4
   17b1c:	movt	r1, #4
   17b20:	mov	r2, r5
   17b24:	ldr	r0, [sp, #60]	; 0x3c
   17b28:	stm	sp, {r3, r7}
   17b2c:	mov	r3, fp
   17b30:	str	r0, [sp, #8]
   17b34:	ldr	r0, [sp, #56]	; 0x38
   17b38:	str	r5, [sp, #16]
   17b3c:	str	r0, [sp, #12]
   17b40:	ldr	r0, [r5, #204]	; 0xcc
   17b44:	bl	13f60 <fprintf@plt>
   17b48:	b	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17b4c:	mov	r3, r0
   17b50:	mov	r2, #66	; 0x42
   17b54:	mov	r1, #1
   17b58:	movw	r0, #1244	; 0x4dc
   17b5c:	movt	r0, #4
   17b60:	bl	13ef4 <fwrite@plt>
   17b64:	ldr	r3, [sp, #40]	; 0x28
   17b68:	movw	r1, #2776	; 0xad8
   17b6c:	movt	r1, #4
   17b70:	mov	r2, r5
   17b74:	stm	sp, {r3, r7}
   17b78:	mov	r3, fp
   17b7c:	ldr	r0, [r5, #204]	; 0xcc
   17b80:	bl	13f60 <fprintf@plt>
   17b84:	ldr	r3, [r5, #212]	; 0xd4
   17b88:	ldr	r3, [r3, #136]	; 0x88
   17b8c:	cmp	r3, #0
   17b90:	beq	17858 <__flatcc_fb_codegen_c@@Base+0x2260>
   17b94:	ldr	r3, [sp, #40]	; 0x28
   17b98:	movw	r1, #3620	; 0xe24
   17b9c:	movt	r1, #4
   17ba0:	mov	r2, r5
   17ba4:	stm	sp, {r3, r7}
   17ba8:	mov	r3, fp
   17bac:	ldr	r0, [r5, #204]	; 0xcc
   17bb0:	bl	13f60 <fprintf@plt>
   17bb4:	b	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17bb8:	movw	r3, #1940	; 0x794
   17bbc:	movt	r3, #4
   17bc0:	movw	r8, #63628	; 0xf88c
   17bc4:	movt	r8, #3
   17bc8:	str	r3, [sp, #56]	; 0x38
   17bcc:	movw	r3, #31244	; 0x7a0c
   17bd0:	movt	r3, #5
   17bd4:	str	r5, [sp, #60]	; 0x3c
   17bd8:	str	r3, [sp, #64]	; 0x40
   17bdc:	mov	r3, #16
   17be0:	b	178d8 <__flatcc_fb_codegen_c@@Base+0x22e0>
   17be4:	movw	r3, #31244	; 0x7a0c
   17be8:	movt	r3, #5
   17bec:	str	r5, [sp, #60]	; 0x3c
   17bf0:	movw	r8, #63628	; 0xf88c
   17bf4:	movt	r8, #3
   17bf8:	str	r3, [sp, #64]	; 0x40
   17bfc:	movw	r3, #1940	; 0x794
   17c00:	movt	r3, #4
   17c04:	str	r3, [sp, #56]	; 0x38
   17c08:	mov	r3, #16
   17c0c:	b	1768c <__flatcc_fb_codegen_c@@Base+0x2094>
   17c10:	movw	r3, #1940	; 0x794
   17c14:	movt	r3, #4
   17c18:	movw	r8, #63628	; 0xf88c
   17c1c:	movt	r8, #3
   17c20:	str	r3, [sp, #56]	; 0x38
   17c24:	movw	r3, #31244	; 0x7a0c
   17c28:	movt	r3, #5
   17c2c:	str	r5, [sp, #60]	; 0x3c
   17c30:	str	r3, [sp, #64]	; 0x40
   17c34:	mov	r3, #16
   17c38:	b	17870 <__flatcc_fb_codegen_c@@Base+0x2278>
   17c3c:	movw	r3, #1940	; 0x794
   17c40:	movt	r3, #4
   17c44:	str	r3, [sp, #56]	; 0x38
   17c48:	movw	r3, #31244	; 0x7a0c
   17c4c:	movt	r3, #5
   17c50:	str	r5, [sp, #60]	; 0x3c
   17c54:	str	r3, [sp, #64]	; 0x40
   17c58:	add	r6, sp, #76	; 0x4c
   17c5c:	movw	r1, #64876	; 0xfd6c
   17c60:	movt	r1, #3
   17c64:	mov	r0, r6
   17c68:	ldrd	r2, [r4, #48]	; 0x30
   17c6c:	bl	13fcc <sprintf@plt>
   17c70:	b	176b0 <__flatcc_fb_codegen_c@@Base+0x20b8>
   17c74:	str	sl, [sp, #60]	; 0x3c
   17c78:	b	17c58 <__flatcc_fb_codegen_c@@Base+0x2660>
   17c7c:	sub	r2, r3, #1
   17c80:	cmp	r2, #8
   17c84:	bhi	18100 <__flatcc_fb_codegen_c@@Base+0x2b08>
   17c88:	movw	r8, #63628	; 0xf88c
   17c8c:	movt	r8, #3
   17c90:	ldrb	r3, [r4, #48]	; 0x30
   17c94:	add	r2, r8, r2, lsl #2
   17c98:	add	r6, sp, #76	; 0x4c
   17c9c:	movw	r1, #64864	; 0xfd60
   17ca0:	movt	r1, #3
   17ca4:	mov	r0, r6
   17ca8:	ldr	r2, [r2, #108]	; 0x6c
   17cac:	bl	13fcc <sprintf@plt>
   17cb0:	ldr	r3, [sp, #40]	; 0x28
   17cb4:	movw	r1, #3104	; 0xc20
   17cb8:	movt	r1, #4
   17cbc:	str	fp, [sp, #8]
   17cc0:	mov	r2, r5
   17cc4:	str	r3, [sp, #12]
   17cc8:	add	r3, sp, #396	; 0x18c
   17ccc:	str	r7, [sp, #16]
   17cd0:	str	r3, [sp, #20]
   17cd4:	str	r3, [sp, #24]
   17cd8:	str	r6, [sp, #28]
   17cdc:	ldrd	r8, [r4, #96]	; 0x60
   17ce0:	ldr	r0, [r5, #204]	; 0xcc
   17ce4:	strd	r8, [sp]
   17ce8:	bl	13f60 <fprintf@plt>
   17cec:	ldr	r3, [r5, #212]	; 0xd4
   17cf0:	ldr	r3, [r3, #32]
   17cf4:	cmp	r3, #0
   17cf8:	bne	17d30 <__flatcc_fb_codegen_c@@Base+0x2738>
   17cfc:	ldrh	r3, [r4, #72]	; 0x48
   17d00:	tst	r3, #128	; 0x80
   17d04:	beq	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17d08:	ldr	r3, [sp, #40]	; 0x28
   17d0c:	add	r0, sp, #396	; 0x18c
   17d10:	movw	r1, #1188	; 0x4a4
   17d14:	movt	r1, #4
   17d18:	mov	r2, r5
   17d1c:	stm	sp, {r3, r7}
   17d20:	mov	r3, fp
   17d24:	str	r0, [sp, #8]
   17d28:	ldr	r0, [r5, #204]	; 0xcc
   17d2c:	bl	13f60 <fprintf@plt>
   17d30:	ldrh	r3, [r4, #72]	; 0x48
   17d34:	tst	r3, #128	; 0x80
   17d38:	beq	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17d3c:	ldr	r3, [sp, #52]	; 0x34
   17d40:	cmp	r3, #0
   17d44:	ldr	r3, [r5, #204]	; 0xcc
   17d48:	bne	17eac <__flatcc_fb_codegen_c@@Base+0x28b4>
   17d4c:	mov	r2, #61	; 0x3d
   17d50:	mov	r1, #1
   17d54:	movw	r0, #1312	; 0x520
   17d58:	movt	r0, #4
   17d5c:	bl	13ef4 <fwrite@plt>
   17d60:	ldr	r3, [sp, #40]	; 0x28
   17d64:	add	r0, sp, #396	; 0x18c
   17d68:	movw	r1, #1376	; 0x560
   17d6c:	movt	r1, #4
   17d70:	mov	r2, r5
   17d74:	stm	sp, {r3, r7}
   17d78:	mov	r3, fp
   17d7c:	str	r0, [sp, #8]
   17d80:	ldr	r0, [r5, #204]	; 0xcc
   17d84:	bl	13f60 <fprintf@plt>
   17d88:	ldr	r3, [r5, #212]	; 0xd4
   17d8c:	ldr	r3, [r3, #136]	; 0x88
   17d90:	cmp	r3, #0
   17d94:	beq	17dc4 <__flatcc_fb_codegen_c@@Base+0x27cc>
   17d98:	ldr	r3, [sp, #40]	; 0x28
   17d9c:	add	r0, sp, #396	; 0x18c
   17da0:	movw	r1, #3664	; 0xe50
   17da4:	movt	r1, #4
   17da8:	mov	r2, r5
   17dac:	stm	sp, {r3, r7}
   17db0:	mov	r3, fp
   17db4:	str	r0, [sp, #8]
   17db8:	str	r5, [sp, #12]
   17dbc:	ldr	r0, [r5, #204]	; 0xcc
   17dc0:	bl	13f60 <fprintf@plt>
   17dc4:	ldr	r6, [sp, #40]	; 0x28
   17dc8:	add	r0, sp, #396	; 0x18c
   17dcc:	mov	r3, fp
   17dd0:	mov	r2, r5
   17dd4:	movw	r1, #1432	; 0x598
   17dd8:	movt	r1, #4
   17ddc:	strd	r6, [sp]
   17de0:	str	r0, [sp, #8]
   17de4:	ldr	r0, [r5, #204]	; 0xcc
   17de8:	bl	13f60 <fprintf@plt>
   17dec:	add	r0, sp, #396	; 0x18c
   17df0:	mov	r3, fp
   17df4:	strd	r6, [sp]
   17df8:	movw	r1, #1496	; 0x5d8
   17dfc:	movt	r1, #4
   17e00:	mov	r2, r5
   17e04:	str	r0, [sp, #8]
   17e08:	ldr	r0, [r5, #204]	; 0xcc
   17e0c:	bl	13f60 <fprintf@plt>
   17e10:	ldr	r3, [r5, #212]	; 0xd4
   17e14:	ldr	r3, [r3, #136]	; 0x88
   17e18:	cmp	r3, #0
   17e1c:	beq	17858 <__flatcc_fb_codegen_c@@Base+0x2260>
   17e20:	b	179f4 <__flatcc_fb_codegen_c@@Base+0x23fc>
   17e24:	sub	r3, r3, #1
   17e28:	cmp	r3, #8
   17e2c:	bhi	18100 <__flatcc_fb_codegen_c@@Base+0x2b08>
   17e30:	movw	r8, #63628	; 0xf88c
   17e34:	movt	r8, #3
   17e38:	add	r3, r8, r3, lsl #2
   17e3c:	movw	r1, #64840	; 0xfd48
   17e40:	movt	r1, #3
   17e44:	add	r6, sp, #76	; 0x4c
   17e48:	ldrd	r8, [r4, #48]	; 0x30
   17e4c:	mov	r0, r6
   17e50:	ldr	r2, [r3, #108]	; 0x6c
   17e54:	strd	r8, [sp]
   17e58:	bl	13fcc <sprintf@plt>
   17e5c:	b	17cb0 <__flatcc_fb_codegen_c@@Base+0x26b8>
   17e60:	sub	r3, r3, #1
   17e64:	cmp	r3, #8
   17e68:	bhi	18100 <__flatcc_fb_codegen_c@@Base+0x2b08>
   17e6c:	movw	r8, #63628	; 0xf88c
   17e70:	movt	r8, #3
   17e74:	movw	r1, #64852	; 0xfd54
   17e78:	movt	r1, #3
   17e7c:	add	r3, r8, r3, lsl #2
   17e80:	add	r6, sp, #76	; 0x4c
   17e84:	b	17e48 <__flatcc_fb_codegen_c@@Base+0x2850>
   17e88:	cmp	r3, #11
   17e8c:	beq	17f40 <__flatcc_fb_codegen_c@@Base+0x2948>
   17e90:	add	r6, sp, #76	; 0x4c
   17e94:	movw	r1, #64876	; 0xfd6c
   17e98:	movt	r1, #3
   17e9c:	mov	r0, r6
   17ea0:	ldrd	r2, [r4, #48]	; 0x30
   17ea4:	bl	13fcc <sprintf@plt>
   17ea8:	b	17cb0 <__flatcc_fb_codegen_c@@Base+0x26b8>
   17eac:	mov	r2, #66	; 0x42
   17eb0:	mov	r1, #1
   17eb4:	movw	r0, #1244	; 0x4dc
   17eb8:	movt	r0, #4
   17ebc:	bl	13ef4 <fwrite@plt>
   17ec0:	mov	r2, #61	; 0x3d
   17ec4:	mov	r1, #1
   17ec8:	ldr	r3, [r5, #204]	; 0xcc
   17ecc:	movw	r0, #1312	; 0x520
   17ed0:	movt	r0, #4
   17ed4:	bl	13ef4 <fwrite@plt>
   17ed8:	ldr	r3, [sp, #40]	; 0x28
   17edc:	add	r0, sp, #396	; 0x18c
   17ee0:	movw	r1, #1376	; 0x560
   17ee4:	movt	r1, #4
   17ee8:	mov	r2, r5
   17eec:	stm	sp, {r3, r7}
   17ef0:	mov	r3, fp
   17ef4:	str	r0, [sp, #8]
   17ef8:	ldr	r0, [r5, #204]	; 0xcc
   17efc:	bl	13f60 <fprintf@plt>
   17f00:	ldr	r3, [r5, #212]	; 0xd4
   17f04:	ldr	r3, [r3, #136]	; 0x88
   17f08:	cmp	r3, #0
   17f0c:	beq	17858 <__flatcc_fb_codegen_c@@Base+0x2260>
   17f10:	ldr	r3, [sp, #40]	; 0x28
   17f14:	add	r0, sp, #396	; 0x18c
   17f18:	movw	r1, #3664	; 0xe50
   17f1c:	movt	r1, #4
   17f20:	mov	r2, r5
   17f24:	stm	sp, {r3, r7}
   17f28:	mov	r3, fp
   17f2c:	str	r0, [sp, #8]
   17f30:	str	r5, [sp, #12]
   17f34:	ldr	r0, [r5, #204]	; 0xcc
   17f38:	bl	13f60 <fprintf@plt>
   17f3c:	b	17388 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17f40:	vldr	d7, [r4, #48]	; 0x30
   17f44:	add	r6, sp, #76	; 0x4c
   17f48:	movw	r1, #64872	; 0xfd68
   17f4c:	movt	r1, #3
   17f50:	mov	r0, r6
   17f54:	vcvt.f32.f64	s14, d7
   17f58:	vcvt.f64.f32	d7, s14
   17f5c:	vmov	r2, r3, d7
   17f60:	bl	13fcc <sprintf@plt>
   17f64:	b	17cb0 <__flatcc_fb_codegen_c@@Base+0x26b8>
   17f68:	movw	r1, #3488	; 0xda0
   17f6c:	movt	r1, #4
   17f70:	movw	r3, #41128	; 0xa0a8
   17f74:	movt	r3, #6
   17f78:	movw	r2, #63988	; 0xf9f4
   17f7c:	movt	r2, #3
   17f80:	str	r1, [sp]
   17f84:	movw	r1, #64544	; 0xfc20
   17f88:	movt	r1, #3
   17f8c:	ldr	r0, [r3]
   17f90:	movw	r3, #1599	; 0x63f
   17f94:	bl	13f60 <fprintf@plt>
   17f98:	movw	r1, #63988	; 0xf9f4
   17f9c:	movt	r1, #3
   17fa0:	ldr	r3, [pc, #528]	; 181b8 <__flatcc_fb_codegen_c@@Base+0x2bc0>
   17fa4:	movw	r0, #35672	; 0x8b58
   17fa8:	movt	r0, #4
   17fac:	movw	r2, #1599	; 0x63f
   17fb0:	bl	14014 <__assert_fail@plt>
   17fb4:	movw	r1, #64556	; 0xfc2c
   17fb8:	movt	r1, #3
   17fbc:	movw	r3, #41128	; 0xa0a8
   17fc0:	movt	r3, #6
   17fc4:	movw	r2, #64468	; 0xfbd4
   17fc8:	movt	r2, #3
   17fcc:	str	r1, [sp]
   17fd0:	movw	r1, #64544	; 0xfc20
   17fd4:	movt	r1, #3
   17fd8:	ldr	r0, [r3]
   17fdc:	mov	r3, #186	; 0xba
   17fe0:	bl	13f60 <fprintf@plt>
   17fe4:	movw	r1, #64468	; 0xfbd4
   17fe8:	movt	r1, #3
   17fec:	ldr	r3, [pc, #456]	; 181bc <__flatcc_fb_codegen_c@@Base+0x2bc4>
   17ff0:	movw	r0, #35672	; 0x8b58
   17ff4:	movt	r0, #4
   17ff8:	mov	r2, #186	; 0xba
   17ffc:	bl	14014 <__assert_fail@plt>
   18000:	movw	r1, #64556	; 0xfc2c
   18004:	movt	r1, #3
   18008:	movw	r3, #41128	; 0xa0a8
   1800c:	movt	r3, #6
   18010:	movw	r2, #64468	; 0xfbd4
   18014:	movt	r2, #3
   18018:	str	r1, [sp]
   1801c:	movw	r1, #64544	; 0xfc20
   18020:	movt	r1, #3
   18024:	ldr	r0, [r3]
   18028:	mov	r3, #141	; 0x8d
   1802c:	bl	13f60 <fprintf@plt>
   18030:	movw	r1, #64468	; 0xfbd4
   18034:	movt	r1, #3
   18038:	ldr	r3, [pc, #384]	; 181c0 <__flatcc_fb_codegen_c@@Base+0x2bc8>
   1803c:	movw	r0, #35672	; 0x8b58
   18040:	movt	r0, #4
   18044:	mov	r2, #141	; 0x8d
   18048:	bl	14014 <__assert_fail@plt>
   1804c:	movw	r1, #3216	; 0xc90
   18050:	movt	r1, #4
   18054:	movw	r3, #41128	; 0xa0a8
   18058:	movt	r3, #6
   1805c:	movw	r2, #63988	; 0xf9f4
   18060:	movt	r2, #3
   18064:	str	r1, [sp]
   18068:	movw	r1, #64544	; 0xfc20
   1806c:	movt	r1, #3
   18070:	ldr	r0, [r3]
   18074:	mov	r3, #1568	; 0x620
   18078:	bl	13f60 <fprintf@plt>
   1807c:	movw	r1, #63988	; 0xf9f4
   18080:	movt	r1, #3
   18084:	ldr	r3, [pc, #300]	; 181b8 <__flatcc_fb_codegen_c@@Base+0x2bc0>
   18088:	movw	r0, #35672	; 0x8b58
   1808c:	movt	r0, #4
   18090:	mov	r2, #1568	; 0x620
   18094:	bl	14014 <__assert_fail@plt>
   18098:	movw	r1, #3292	; 0xcdc
   1809c:	movt	r1, #4
   180a0:	movw	r3, #41128	; 0xa0a8
   180a4:	movt	r3, #6
   180a8:	movw	r2, #63988	; 0xf9f4
   180ac:	movt	r2, #3
   180b0:	str	r1, [sp]
   180b4:	movw	r1, #64544	; 0xfc20
   180b8:	movt	r1, #3
   180bc:	ldr	r0, [r3]
   180c0:	mov	r3, #1584	; 0x630
   180c4:	bl	13f60 <fprintf@plt>
   180c8:	movw	r1, #63988	; 0xf9f4
   180cc:	movt	r1, #3
   180d0:	ldr	r3, [pc, #224]	; 181b8 <__flatcc_fb_codegen_c@@Base+0x2bc0>
   180d4:	movw	r0, #35672	; 0x8b58
   180d8:	movt	r0, #4
   180dc:	mov	r2, #1584	; 0x630
   180e0:	bl	14014 <__assert_fail@plt>
   180e4:	movw	r1, #63988	; 0xf9f4
   180e8:	movt	r1, #3
   180ec:	ldr	r3, [pc, #208]	; 181c4 <__flatcc_fb_codegen_c@@Base+0x2bcc>
   180f0:	movw	r0, #2604	; 0xa2c
   180f4:	movt	r0, #4
   180f8:	movw	r2, #1343	; 0x53f
   180fc:	bl	14014 <__assert_fail@plt>
   18100:	bl	15c2c <__flatcc_fb_codegen_c@@Base+0x634>
   18104:	movw	r1, #2552	; 0x9f8
   18108:	movt	r1, #4
   1810c:	movw	r3, #41128	; 0xa0a8
   18110:	movt	r3, #6
   18114:	movw	r2, #63988	; 0xf9f4
   18118:	movt	r2, #3
   1811c:	str	r1, [sp]
   18120:	movw	r1, #64544	; 0xfc20
   18124:	movt	r1, #3
   18128:	ldr	r0, [r3]
   1812c:	movw	r3, #1339	; 0x53b
   18130:	bl	13f60 <fprintf@plt>
   18134:	movw	r1, #63988	; 0xf9f4
   18138:	movt	r1, #3
   1813c:	movw	r0, #35672	; 0x8b58
   18140:	movt	r0, #4
   18144:	add	r3, r8, #316	; 0x13c
   18148:	movw	r2, #1339	; 0x53b
   1814c:	bl	14014 <__assert_fail@plt>
   18150:	movw	r1, #63988	; 0xf9f4
   18154:	movt	r1, #3
   18158:	ldr	r3, [pc, #88]	; 181b8 <__flatcc_fb_codegen_c@@Base+0x2bc0>
   1815c:	movw	r0, #1964	; 0x7ac
   18160:	movt	r0, #4
   18164:	movw	r2, #1362	; 0x552
   18168:	bl	14014 <__assert_fail@plt>
   1816c:	movw	r1, #64556	; 0xfc2c
   18170:	movt	r1, #3
   18174:	movw	r3, #41128	; 0xa0a8
   18178:	movt	r3, #6
   1817c:	movw	r2, #64468	; 0xfbd4
   18180:	movt	r2, #3
   18184:	str	r1, [sp]
   18188:	movw	r1, #64544	; 0xfc20
   1818c:	movt	r1, #3
   18190:	ldr	r0, [r3]
   18194:	mov	r3, #260	; 0x104
   18198:	bl	13f60 <fprintf@plt>
   1819c:	movw	r1, #64468	; 0xfbd4
   181a0:	movt	r1, #3
   181a4:	ldr	r3, [pc, #28]	; 181c8 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   181a8:	movw	r0, #35672	; 0x8b58
   181ac:	movt	r0, #4
   181b0:	mov	r2, #260	; 0x104
   181b4:	bl	14014 <__assert_fail@plt>
   181b8:	andeq	pc, r3, r8, ror r9	; <UNPREDICTABLE>
   181bc:			; <UNDEFINED> instruction: 0x0003f9b0
   181c0:	andeq	pc, r3, r4, ror #17
   181c4:	andeq	pc, r3, r8, asr #19
   181c8:	andeq	pc, r3, ip, lsl r9	; <UNPREDICTABLE>

000181cc <__flatcc_fb_gen_common_c_header@@Base>:
   181cc:	strd	r4, [sp, #-12]!
   181d0:	add	r5, r0, #102	; 0x66
   181d4:	mov	r4, r0
   181d8:	mov	r3, r5
   181dc:	mov	r2, r5
   181e0:	ldr	r0, [r0, #204]	; 0xcc
   181e4:	movw	r1, #3732	; 0xe94
   181e8:	movt	r1, #4
   181ec:	str	lr, [sp, #8]
   181f0:	sub	sp, sp, #236	; 0xec
   181f4:	bl	13f60 <fprintf@plt>
   181f8:	mov	r2, #81	; 0x51
   181fc:	mov	r1, #1
   18200:	ldr	r3, [r4, #204]	; 0xcc
   18204:	movw	r0, #3788	; 0xecc
   18208:	movt	r0, #4
   1820c:	bl	13ef4 <fwrite@plt>
   18210:	mov	r2, #52	; 0x34
   18214:	movw	r0, #3872	; 0xf20
   18218:	movt	r0, #4
   1821c:	mov	r1, #1
   18220:	ldr	r3, [r4, #204]	; 0xcc
   18224:	bl	13ef4 <fwrite@plt>
   18228:	ldr	r3, [r4, #212]	; 0xd4
   1822c:	ldr	r2, [r3, #136]	; 0x88
   18230:	cmp	r2, #0
   18234:	beq	18e1c <__flatcc_fb_gen_common_c_header@@Base+0xc50>
   18238:	ldr	r2, [r3, #140]	; 0x8c
   1823c:	ldr	r3, [r4, #204]	; 0xcc
   18240:	cmp	r2, #0
   18244:	bne	18e00 <__flatcc_fb_gen_common_c_header@@Base+0xc34>
   18248:	mov	r2, #41	; 0x29
   1824c:	mov	r1, #1
   18250:	movw	r0, #4104	; 0x1008
   18254:	movt	r0, #4
   18258:	bl	13ef4 <fwrite@plt>
   1825c:	movw	r1, #4148	; 0x1034
   18260:	movt	r1, #4
   18264:	mov	r0, r4
   18268:	bl	13e94 <strcmp@plt>
   1826c:	cmp	r0, #0
   18270:	bne	18d78 <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   18274:	mov	r3, r4
   18278:	mov	r2, r4
   1827c:	ldr	r0, [r4, #204]	; 0xcc
   18280:	movw	r1, #5412	; 0x1524
   18284:	movt	r1, #4
   18288:	bl	13f60 <fprintf@plt>
   1828c:	mov	r3, r4
   18290:	mov	r2, r4
   18294:	str	r4, [sp]
   18298:	movw	r1, #5556	; 0x15b4
   1829c:	movt	r1, #4
   182a0:	str	r4, [sp, #4]
   182a4:	str	r4, [sp, #8]
   182a8:	str	r4, [sp, #12]
   182ac:	str	r4, [sp, #16]
   182b0:	ldr	r0, [r4, #204]	; 0xcc
   182b4:	bl	13f60 <fprintf@plt>
   182b8:	mov	r3, r4
   182bc:	mov	r2, r4
   182c0:	ldr	r0, [r4, #204]	; 0xcc
   182c4:	movw	r1, #5928	; 0x1728
   182c8:	movt	r1, #4
   182cc:	bl	13f60 <fprintf@plt>
   182d0:	mov	r3, r4
   182d4:	movw	r1, #6016	; 0x1780
   182d8:	movt	r1, #4
   182dc:	mov	r2, r4
   182e0:	str	r4, [sp]
   182e4:	str	r4, [sp, #4]
   182e8:	ldr	r0, [r4, #204]	; 0xcc
   182ec:	bl	13f60 <fprintf@plt>
   182f0:	ldr	r3, [r4, #212]	; 0xd4
   182f4:	ldr	r3, [r3, #32]
   182f8:	cmp	r3, #0
   182fc:	beq	18d30 <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   18300:	movw	r1, #6312	; 0x18a8
   18304:	movt	r1, #4
   18308:	ldr	r0, [r4, #204]	; 0xcc
   1830c:	mov	r2, r4
   18310:	bl	13f60 <fprintf@plt>
   18314:	mov	r3, r4
   18318:	mov	r2, r4
   1831c:	ldr	r0, [r4, #204]	; 0xcc
   18320:	movw	r1, #6360	; 0x18d8
   18324:	movt	r1, #4
   18328:	bl	13f60 <fprintf@plt>
   1832c:	mov	r3, r4
   18330:	mov	r2, r4
   18334:	str	r4, [sp]
   18338:	movw	r1, #6572	; 0x19ac
   1833c:	movt	r1, #4
   18340:	str	r4, [sp, #4]
   18344:	str	r4, [sp, #8]
   18348:	ldr	r0, [r4, #204]	; 0xcc
   1834c:	bl	13f60 <fprintf@plt>
   18350:	mov	r3, r4
   18354:	mov	r2, r4
   18358:	str	r4, [sp]
   1835c:	movw	r1, #7000	; 0x1b58
   18360:	movt	r1, #4
   18364:	str	r4, [sp, #4]
   18368:	str	r4, [sp, #8]
   1836c:	ldr	r0, [r4, #204]	; 0xcc
   18370:	bl	13f60 <fprintf@plt>
   18374:	mov	r3, r4
   18378:	mov	r2, r4
   1837c:	str	r4, [sp]
   18380:	movw	r1, #7160	; 0x1bf8
   18384:	movt	r1, #4
   18388:	ldr	r0, [r4, #204]	; 0xcc
   1838c:	bl	13f60 <fprintf@plt>
   18390:	mov	r3, r4
   18394:	mov	r2, r4
   18398:	str	r4, [sp]
   1839c:	movw	r1, #7380	; 0x1cd4
   183a0:	movt	r1, #4
   183a4:	ldr	r0, [r4, #204]	; 0xcc
   183a8:	bl	13f60 <fprintf@plt>
   183ac:	mov	r3, r4
   183b0:	mov	r2, r4
   183b4:	str	r4, [sp]
   183b8:	movw	r1, #7600	; 0x1db0
   183bc:	movt	r1, #4
   183c0:	ldr	r0, [r4, #204]	; 0xcc
   183c4:	bl	13f60 <fprintf@plt>
   183c8:	mov	r3, r4
   183cc:	movw	r1, #7816	; 0x1e88
   183d0:	movt	r1, #4
   183d4:	mov	r2, r4
   183d8:	str	r4, [sp]
   183dc:	str	r4, [sp, #4]
   183e0:	str	r4, [sp, #8]
   183e4:	ldr	r0, [r4, #204]	; 0xcc
   183e8:	bl	13f60 <fprintf@plt>
   183ec:	ldr	r3, [r4, #212]	; 0xd4
   183f0:	ldr	r3, [r3, #32]
   183f4:	cmp	r3, #0
   183f8:	beq	18cf4 <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   183fc:	movw	r1, #8048	; 0x1f70
   18400:	movt	r1, #4
   18404:	ldr	r0, [r4, #204]	; 0xcc
   18408:	mov	r2, r4
   1840c:	bl	13f60 <fprintf@plt>
   18410:	mov	r3, r4
   18414:	mov	r2, r4
   18418:	str	r4, [sp]
   1841c:	movw	r1, #8092	; 0x1f9c
   18420:	movt	r1, #4
   18424:	str	r4, [sp, #4]
   18428:	ldr	r0, [r4, #204]	; 0xcc
   1842c:	bl	13f60 <fprintf@plt>
   18430:	mov	r3, r4
   18434:	mov	r2, r4
   18438:	ldr	r0, [r4, #204]	; 0xcc
   1843c:	movw	r1, #8252	; 0x203c
   18440:	movt	r1, #4
   18444:	bl	13f60 <fprintf@plt>
   18448:	mov	r3, r4
   1844c:	mov	r2, r4
   18450:	str	r4, [sp]
   18454:	movw	r1, #8320	; 0x2080
   18458:	movt	r1, #4
   1845c:	ldr	r0, [r4, #204]	; 0xcc
   18460:	bl	13f60 <fprintf@plt>
   18464:	mov	r3, r4
   18468:	mov	r2, r4
   1846c:	ldr	r0, [r4, #204]	; 0xcc
   18470:	movw	r1, #8460	; 0x210c
   18474:	movt	r1, #4
   18478:	bl	13f60 <fprintf@plt>
   1847c:	mov	r3, r4
   18480:	mov	r2, r4
   18484:	str	r4, [sp]
   18488:	movw	r1, #8576	; 0x2180
   1848c:	movt	r1, #4
   18490:	str	r4, [sp, #4]
   18494:	ldr	r0, [r4, #204]	; 0xcc
   18498:	bl	13f60 <fprintf@plt>
   1849c:	mov	r3, r4
   184a0:	mov	r2, r4
   184a4:	ldr	r0, [r4, #204]	; 0xcc
   184a8:	movw	r1, #8864	; 0x22a0
   184ac:	movt	r1, #4
   184b0:	bl	13f60 <fprintf@plt>
   184b4:	mov	r3, r4
   184b8:	mov	r2, r4
   184bc:	ldr	r0, [r4, #204]	; 0xcc
   184c0:	movw	r1, #8984	; 0x2318
   184c4:	movt	r1, #4
   184c8:	bl	13f60 <fprintf@plt>
   184cc:	mov	r3, r4
   184d0:	mov	r2, r4
   184d4:	str	r4, [sp]
   184d8:	movw	r1, #9112	; 0x2398
   184dc:	movt	r1, #4
   184e0:	str	r4, [sp, #4]
   184e4:	ldr	r0, [r4, #204]	; 0xcc
   184e8:	bl	13f60 <fprintf@plt>
   184ec:	mov	r3, r4
   184f0:	mov	r2, r4
   184f4:	str	r4, [sp]
   184f8:	movw	r1, #9212	; 0x23fc
   184fc:	movt	r1, #4
   18500:	str	r4, [sp, #4]
   18504:	str	r4, [sp, #8]
   18508:	str	r4, [sp, #12]
   1850c:	str	r4, [sp, #16]
   18510:	str	r4, [sp, #20]
   18514:	str	r4, [sp, #24]
   18518:	str	r4, [sp, #28]
   1851c:	str	r4, [sp, #32]
   18520:	str	r4, [sp, #36]	; 0x24
   18524:	ldr	r0, [r4, #204]	; 0xcc
   18528:	bl	13f60 <fprintf@plt>
   1852c:	mov	r2, r4
   18530:	movw	r1, #9504	; 0x2520
   18534:	movt	r1, #4
   18538:	ldr	r0, [r4, #204]	; 0xcc
   1853c:	bl	13f60 <fprintf@plt>
   18540:	mov	r3, r4
   18544:	mov	r2, r4
   18548:	str	r4, [sp]
   1854c:	movw	r1, #9540	; 0x2544
   18550:	movt	r1, #4
   18554:	str	r4, [sp, #4]
   18558:	ldr	r0, [r4, #204]	; 0xcc
   1855c:	bl	13f60 <fprintf@plt>
   18560:	mov	r3, r4
   18564:	mov	r2, r4
   18568:	str	r4, [sp]
   1856c:	movw	r1, #9676	; 0x25cc
   18570:	movt	r1, #4
   18574:	str	r4, [sp, #4]
   18578:	str	r4, [sp, #8]
   1857c:	str	r4, [sp, #12]
   18580:	str	r4, [sp, #16]
   18584:	str	r4, [sp, #20]
   18588:	str	r4, [sp, #24]
   1858c:	str	r4, [sp, #28]
   18590:	str	r4, [sp, #32]
   18594:	str	r4, [sp, #36]	; 0x24
   18598:	str	r4, [sp, #40]	; 0x28
   1859c:	str	r4, [sp, #44]	; 0x2c
   185a0:	str	r4, [sp, #48]	; 0x30
   185a4:	str	r4, [sp, #52]	; 0x34
   185a8:	str	r4, [sp, #56]	; 0x38
   185ac:	ldr	r0, [r4, #204]	; 0xcc
   185b0:	bl	13f60 <fprintf@plt>
   185b4:	mov	r3, r4
   185b8:	mov	r2, r4
   185bc:	str	r4, [sp]
   185c0:	movw	r1, #10108	; 0x277c
   185c4:	movt	r1, #4
   185c8:	str	r4, [sp, #4]
   185cc:	str	r4, [sp, #8]
   185d0:	str	r4, [sp, #12]
   185d4:	str	r4, [sp, #16]
   185d8:	str	r4, [sp, #20]
   185dc:	ldr	r0, [r4, #204]	; 0xcc
   185e0:	bl	13f60 <fprintf@plt>
   185e4:	mov	r3, r4
   185e8:	mov	r2, r4
   185ec:	str	r4, [sp]
   185f0:	movw	r1, #10304	; 0x2840
   185f4:	movt	r1, #4
   185f8:	str	r4, [sp, #4]
   185fc:	ldr	r0, [r4, #204]	; 0xcc
   18600:	bl	13f60 <fprintf@plt>
   18604:	mov	r3, r4
   18608:	mov	r2, r4
   1860c:	str	r4, [sp]
   18610:	movw	r1, #10460	; 0x28dc
   18614:	movt	r1, #4
   18618:	str	r4, [sp, #4]
   1861c:	ldr	r0, [r4, #204]	; 0xcc
   18620:	bl	13f60 <fprintf@plt>
   18624:	mov	r2, r4
   18628:	movw	r1, #10580	; 0x2954
   1862c:	movt	r1, #4
   18630:	ldr	r0, [r4, #204]	; 0xcc
   18634:	bl	13f60 <fprintf@plt>
   18638:	mov	r2, r4
   1863c:	movw	r1, #11304	; 0x2c28
   18640:	movt	r1, #4
   18644:	ldr	r0, [r4, #204]	; 0xcc
   18648:	bl	13f60 <fprintf@plt>
   1864c:	mov	r2, r4
   18650:	movw	r1, #11964	; 0x2ebc
   18654:	movt	r1, #4
   18658:	ldr	r0, [r4, #204]	; 0xcc
   1865c:	bl	13f60 <fprintf@plt>
   18660:	mov	r2, r4
   18664:	movw	r1, #12096	; 0x2f40
   18668:	movt	r1, #4
   1866c:	ldr	r0, [r4, #204]	; 0xcc
   18670:	bl	13f60 <fprintf@plt>
   18674:	mov	r2, r4
   18678:	movw	r1, #12208	; 0x2fb0
   1867c:	movt	r1, #4
   18680:	ldr	r0, [r4, #204]	; 0xcc
   18684:	bl	13f60 <fprintf@plt>
   18688:	mov	r3, r4
   1868c:	mov	r2, r4
   18690:	str	r4, [sp]
   18694:	movw	r1, #12692	; 0x3194
   18698:	movt	r1, #4
   1869c:	str	r4, [sp, #4]
   186a0:	ldr	r0, [r4, #204]	; 0xcc
   186a4:	bl	13f60 <fprintf@plt>
   186a8:	mov	r3, r4
   186ac:	mov	r2, r4
   186b0:	str	r4, [sp]
   186b4:	movw	r1, #12864	; 0x3240
   186b8:	movt	r1, #4
   186bc:	str	r4, [sp, #4]
   186c0:	str	r4, [sp, #8]
   186c4:	str	r4, [sp, #12]
   186c8:	ldr	r0, [r4, #204]	; 0xcc
   186cc:	bl	13f60 <fprintf@plt>
   186d0:	mov	r3, r4
   186d4:	mov	r2, r4
   186d8:	str	r4, [sp]
   186dc:	movw	r1, #13340	; 0x341c
   186e0:	movt	r1, #4
   186e4:	ldr	r0, [r4, #204]	; 0xcc
   186e8:	bl	13f60 <fprintf@plt>
   186ec:	mov	r3, r4
   186f0:	mov	r2, r4
   186f4:	str	r4, [sp]
   186f8:	movw	r1, #13880	; 0x3638
   186fc:	movt	r1, #4
   18700:	str	r4, [sp, #4]
   18704:	str	r4, [sp, #8]
   18708:	str	r4, [sp, #12]
   1870c:	str	r4, [sp, #16]
   18710:	str	r4, [sp, #20]
   18714:	str	r4, [sp, #24]
   18718:	str	r4, [sp, #28]
   1871c:	str	r4, [sp, #32]
   18720:	ldr	r0, [r4, #204]	; 0xcc
   18724:	bl	13f60 <fprintf@plt>
   18728:	mov	r3, r4
   1872c:	mov	r2, r4
   18730:	ldr	r0, [r4, #204]	; 0xcc
   18734:	movw	r1, #14224	; 0x3790
   18738:	movt	r1, #4
   1873c:	bl	13f60 <fprintf@plt>
   18740:	mov	r3, r4
   18744:	mov	r2, r4
   18748:	str	r4, [sp]
   1874c:	movw	r1, #14432	; 0x3860
   18750:	movt	r1, #4
   18754:	ldr	r0, [r4, #204]	; 0xcc
   18758:	bl	13f60 <fprintf@plt>
   1875c:	mov	r3, r4
   18760:	mov	r2, r4
   18764:	str	r4, [sp]
   18768:	movw	r1, #14616	; 0x3918
   1876c:	movt	r1, #4
   18770:	ldr	r0, [r4, #204]	; 0xcc
   18774:	bl	13f60 <fprintf@plt>
   18778:	mov	r2, r4
   1877c:	movw	r1, #15056	; 0x3ad0
   18780:	movt	r1, #4
   18784:	ldr	r0, [r4, #204]	; 0xcc
   18788:	bl	13f60 <fprintf@plt>
   1878c:	mov	r2, r4
   18790:	movw	r1, #15228	; 0x3b7c
   18794:	movt	r1, #4
   18798:	ldr	r0, [r4, #204]	; 0xcc
   1879c:	bl	13f60 <fprintf@plt>
   187a0:	mov	r3, r4
   187a4:	mov	r2, r4
   187a8:	ldr	r0, [r4, #204]	; 0xcc
   187ac:	movw	r1, #15532	; 0x3cac
   187b0:	movt	r1, #4
   187b4:	bl	13f60 <fprintf@plt>
   187b8:	mov	r3, r4
   187bc:	mov	r2, r4
   187c0:	ldr	r0, [r4, #204]	; 0xcc
   187c4:	movw	r1, #15868	; 0x3dfc
   187c8:	movt	r1, #4
   187cc:	bl	13f60 <fprintf@plt>
   187d0:	mov	r3, r4
   187d4:	mov	r2, r4
   187d8:	str	r4, [sp]
   187dc:	movw	r1, #16080	; 0x3ed0
   187e0:	movt	r1, #4
   187e4:	str	r4, [sp, #4]
   187e8:	str	r4, [sp, #8]
   187ec:	str	r4, [sp, #12]
   187f0:	str	r4, [sp, #16]
   187f4:	str	r4, [sp, #20]
   187f8:	str	r4, [sp, #24]
   187fc:	str	r4, [sp, #28]
   18800:	str	r4, [sp, #32]
   18804:	ldr	r0, [r4, #204]	; 0xcc
   18808:	bl	13f60 <fprintf@plt>
   1880c:	mov	r3, r4
   18810:	mov	r2, r4
   18814:	str	r4, [sp]
   18818:	movw	r1, #16460	; 0x404c
   1881c:	movt	r1, #4
   18820:	str	r4, [sp, #4]
   18824:	str	r4, [sp, #8]
   18828:	str	r4, [sp, #12]
   1882c:	str	r4, [sp, #16]
   18830:	str	r4, [sp, #20]
   18834:	str	r4, [sp, #24]
   18838:	str	r4, [sp, #28]
   1883c:	str	r4, [sp, #32]
   18840:	ldr	r0, [r4, #204]	; 0xcc
   18844:	bl	13f60 <fprintf@plt>
   18848:	mov	r3, r4
   1884c:	mov	r2, r4
   18850:	str	r4, [sp]
   18854:	movw	r1, #16848	; 0x41d0
   18858:	movt	r1, #4
   1885c:	str	r4, [sp, #4]
   18860:	str	r4, [sp, #8]
   18864:	str	r4, [sp, #12]
   18868:	str	r4, [sp, #16]
   1886c:	ldr	r0, [r4, #204]	; 0xcc
   18870:	bl	13f60 <fprintf@plt>
   18874:	mov	r3, r4
   18878:	mov	r2, r4
   1887c:	str	r4, [sp]
   18880:	movw	r1, #17704	; 0x4528
   18884:	movt	r1, #4
   18888:	str	r4, [sp, #4]
   1888c:	str	r4, [sp, #8]
   18890:	str	r4, [sp, #12]
   18894:	str	r4, [sp, #16]
   18898:	str	r4, [sp, #20]
   1889c:	str	r4, [sp, #24]
   188a0:	str	r4, [sp, #28]
   188a4:	str	r4, [sp, #32]
   188a8:	ldr	r0, [r4, #204]	; 0xcc
   188ac:	bl	13f60 <fprintf@plt>
   188b0:	mov	r3, r4
   188b4:	mov	r2, r4
   188b8:	str	r4, [sp]
   188bc:	movw	r1, #18504	; 0x4848
   188c0:	movt	r1, #4
   188c4:	str	r4, [sp, #4]
   188c8:	str	r4, [sp, #8]
   188cc:	str	r4, [sp, #12]
   188d0:	str	r4, [sp, #16]
   188d4:	str	r4, [sp, #20]
   188d8:	str	r4, [sp, #24]
   188dc:	str	r4, [sp, #28]
   188e0:	str	r4, [sp, #32]
   188e4:	str	r4, [sp, #36]	; 0x24
   188e8:	str	r4, [sp, #40]	; 0x28
   188ec:	ldr	r0, [r4, #204]	; 0xcc
   188f0:	bl	13f60 <fprintf@plt>
   188f4:	mov	r2, r4
   188f8:	movw	r1, #20244	; 0x4f14
   188fc:	movt	r1, #4
   18900:	ldr	r0, [r4, #204]	; 0xcc
   18904:	bl	13f60 <fprintf@plt>
   18908:	mov	r2, r4
   1890c:	movw	r1, #20836	; 0x5164
   18910:	movt	r1, #4
   18914:	ldr	r0, [r4, #204]	; 0xcc
   18918:	bl	13f60 <fprintf@plt>
   1891c:	ldr	r3, [r4, #212]	; 0xd4
   18920:	ldr	r3, [r3, #136]	; 0x88
   18924:	cmp	r3, #0
   18928:	beq	18d04 <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   1892c:	mov	r0, r4
   18930:	bl	19414 <__flatcc_gen_sort@@Base>
   18934:	mov	r3, r4
   18938:	movw	r1, #22080	; 0x5640
   1893c:	movt	r1, #4
   18940:	mov	r2, r4
   18944:	str	r4, [sp]
   18948:	str	r4, [sp, #4]
   1894c:	str	r4, [sp, #8]
   18950:	ldr	r0, [r4, #204]	; 0xcc
   18954:	bl	13f60 <fprintf@plt>
   18958:	ldr	r3, [r4, #212]	; 0xd4
   1895c:	ldr	r3, [r3, #136]	; 0x88
   18960:	cmp	r3, #0
   18964:	beq	18d20 <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   18968:	movw	r1, #22308	; 0x5724
   1896c:	movt	r1, #4
   18970:	ldr	r0, [r4, #204]	; 0xcc
   18974:	mov	r2, r4
   18978:	bl	13f60 <fprintf@plt>
   1897c:	mov	r0, #10
   18980:	ldr	r1, [r4, #204]	; 0xcc
   18984:	bl	13fc0 <fputc@plt>
   18988:	mov	r3, r4
   1898c:	mov	r2, r4
   18990:	str	r4, [sp]
   18994:	movw	r1, #22340	; 0x5744
   18998:	movt	r1, #4
   1899c:	ldr	r0, [r4, #204]	; 0xcc
   189a0:	bl	13f60 <fprintf@plt>
   189a4:	mov	r3, r4
   189a8:	mov	r2, r4
   189ac:	str	r4, [sp]
   189b0:	movw	r1, #22468	; 0x57c4
   189b4:	movt	r1, #4
   189b8:	str	r4, [sp, #4]
   189bc:	str	r4, [sp, #8]
   189c0:	str	r4, [sp, #12]
   189c4:	str	r4, [sp, #16]
   189c8:	str	r4, [sp, #20]
   189cc:	str	r4, [sp, #24]
   189d0:	ldr	r0, [r4, #204]	; 0xcc
   189d4:	str	r4, [sp, #28]
   189d8:	str	r4, [sp, #32]
   189dc:	str	r4, [sp, #36]	; 0x24
   189e0:	str	r4, [sp, #40]	; 0x28
   189e4:	str	r4, [sp, #44]	; 0x2c
   189e8:	str	r4, [sp, #48]	; 0x30
   189ec:	str	r4, [sp, #52]	; 0x34
   189f0:	str	r4, [sp, #56]	; 0x38
   189f4:	str	r4, [sp, #60]	; 0x3c
   189f8:	str	r4, [sp, #64]	; 0x40
   189fc:	str	r4, [sp, #68]	; 0x44
   18a00:	str	r4, [sp, #72]	; 0x48
   18a04:	str	r4, [sp, #76]	; 0x4c
   18a08:	str	r4, [sp, #80]	; 0x50
   18a0c:	str	r4, [sp, #84]	; 0x54
   18a10:	str	r4, [sp, #88]	; 0x58
   18a14:	str	r4, [sp, #92]	; 0x5c
   18a18:	bl	13f60 <fprintf@plt>
   18a1c:	mov	r3, r4
   18a20:	mov	r2, r4
   18a24:	str	r4, [sp]
   18a28:	movw	r1, #23000	; 0x59d8
   18a2c:	movt	r1, #4
   18a30:	str	r4, [sp, #4]
   18a34:	str	r4, [sp, #8]
   18a38:	str	r4, [sp, #12]
   18a3c:	str	r4, [sp, #16]
   18a40:	str	r4, [sp, #20]
   18a44:	str	r4, [sp, #24]
   18a48:	str	r4, [sp, #28]
   18a4c:	str	r4, [sp, #32]
   18a50:	str	r4, [sp, #36]	; 0x24
   18a54:	ldr	r0, [r4, #204]	; 0xcc
   18a58:	bl	13f60 <fprintf@plt>
   18a5c:	mov	r3, r4
   18a60:	movw	r1, #23332	; 0x5b24
   18a64:	movt	r1, #4
   18a68:	mov	r2, r4
   18a6c:	str	r4, [sp, #104]	; 0x68
   18a70:	str	r4, [sp, #108]	; 0x6c
   18a74:	str	r4, [sp, #112]	; 0x70
   18a78:	str	r4, [sp, #116]	; 0x74
   18a7c:	str	r4, [sp, #120]	; 0x78
   18a80:	str	r4, [sp, #124]	; 0x7c
   18a84:	str	r4, [sp, #128]	; 0x80
   18a88:	str	r4, [sp, #132]	; 0x84
   18a8c:	str	r4, [sp, #136]	; 0x88
   18a90:	str	r4, [sp, #140]	; 0x8c
   18a94:	str	r4, [sp, #144]	; 0x90
   18a98:	str	r4, [sp, #148]	; 0x94
   18a9c:	str	r4, [sp, #152]	; 0x98
   18aa0:	str	r4, [sp, #156]	; 0x9c
   18aa4:	str	r4, [sp, #160]	; 0xa0
   18aa8:	str	r4, [sp, #164]	; 0xa4
   18aac:	str	r4, [sp, #168]	; 0xa8
   18ab0:	str	r4, [sp, #172]	; 0xac
   18ab4:	str	r4, [sp, #176]	; 0xb0
   18ab8:	str	r4, [sp, #180]	; 0xb4
   18abc:	str	r4, [sp, #184]	; 0xb8
   18ac0:	str	r4, [sp, #188]	; 0xbc
   18ac4:	str	r4, [sp, #192]	; 0xc0
   18ac8:	str	r4, [sp, #196]	; 0xc4
   18acc:	str	r4, [sp, #200]	; 0xc8
   18ad0:	str	r4, [sp, #204]	; 0xcc
   18ad4:	str	r4, [sp, #208]	; 0xd0
   18ad8:	str	r4, [sp, #212]	; 0xd4
   18adc:	str	r4, [sp, #216]	; 0xd8
   18ae0:	str	r4, [sp, #220]	; 0xdc
   18ae4:	str	r4, [sp, #224]	; 0xe0
   18ae8:	str	r4, [sp, #228]	; 0xe4
   18aec:	str	r4, [sp, #100]	; 0x64
   18af0:	str	r4, [sp]
   18af4:	str	r4, [sp, #4]
   18af8:	str	r4, [sp, #8]
   18afc:	str	r4, [sp, #12]
   18b00:	str	r4, [sp, #16]
   18b04:	str	r4, [sp, #20]
   18b08:	ldr	r0, [r4, #204]	; 0xcc
   18b0c:	str	r4, [sp, #24]
   18b10:	str	r4, [sp, #28]
   18b14:	str	r4, [sp, #32]
   18b18:	str	r4, [sp, #36]	; 0x24
   18b1c:	str	r4, [sp, #40]	; 0x28
   18b20:	str	r4, [sp, #44]	; 0x2c
   18b24:	str	r4, [sp, #48]	; 0x30
   18b28:	str	r4, [sp, #52]	; 0x34
   18b2c:	str	r4, [sp, #56]	; 0x38
   18b30:	str	r4, [sp, #60]	; 0x3c
   18b34:	str	r4, [sp, #64]	; 0x40
   18b38:	str	r4, [sp, #68]	; 0x44
   18b3c:	str	r4, [sp, #72]	; 0x48
   18b40:	str	r4, [sp, #76]	; 0x4c
   18b44:	str	r4, [sp, #80]	; 0x50
   18b48:	str	r4, [sp, #84]	; 0x54
   18b4c:	str	r4, [sp, #88]	; 0x58
   18b50:	str	r4, [sp, #92]	; 0x5c
   18b54:	str	r4, [sp, #96]	; 0x60
   18b58:	bl	13f60 <fprintf@plt>
   18b5c:	ldr	r3, [r4, #212]	; 0xd4
   18b60:	ldr	r3, [r3, #136]	; 0x88
   18b64:	cmp	r3, #0
   18b68:	bne	18d60 <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   18b6c:	mov	r3, r4
   18b70:	movw	r1, #25084	; 0x61fc
   18b74:	movt	r1, #4
   18b78:	mov	r2, r4
   18b7c:	ldr	r0, [r4, #204]	; 0xcc
   18b80:	bl	13f60 <fprintf@plt>
   18b84:	ldr	r3, [r4, #212]	; 0xd4
   18b88:	ldr	r3, [r3, #32]
   18b8c:	cmp	r3, #0
   18b90:	bne	18cdc <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   18b94:	mov	r0, #10
   18b98:	ldr	r1, [r4, #204]	; 0xcc
   18b9c:	bl	13fc0 <fputc@plt>
   18ba0:	mov	r2, r4
   18ba4:	movw	r1, #25240	; 0x6298
   18ba8:	movt	r1, #4
   18bac:	ldr	r0, [r4, #204]	; 0xcc
   18bb0:	bl	13f60 <fprintf@plt>
   18bb4:	mov	r3, r4
   18bb8:	mov	r2, r4
   18bbc:	str	r4, [sp]
   18bc0:	movw	r1, #25368	; 0x6318
   18bc4:	movt	r1, #4
   18bc8:	str	r4, [sp, #4]
   18bcc:	str	r4, [sp, #8]
   18bd0:	str	r4, [sp, #12]
   18bd4:	str	r4, [sp, #16]
   18bd8:	str	r4, [sp, #20]
   18bdc:	str	r4, [sp, #24]
   18be0:	str	r4, [sp, #28]
   18be4:	str	r4, [sp, #32]
   18be8:	str	r4, [sp, #36]	; 0x24
   18bec:	str	r4, [sp, #40]	; 0x28
   18bf0:	str	r4, [sp, #44]	; 0x2c
   18bf4:	ldr	r0, [r4, #204]	; 0xcc
   18bf8:	bl	13f60 <fprintf@plt>
   18bfc:	mov	r3, r4
   18c00:	mov	r2, r4
   18c04:	str	r4, [sp]
   18c08:	movw	r1, #26212	; 0x6664
   18c0c:	movt	r1, #4
   18c10:	ldr	r0, [r4, #204]	; 0xcc
   18c14:	bl	13f60 <fprintf@plt>
   18c18:	mov	r3, r4
   18c1c:	mov	r2, r4
   18c20:	str	r4, [sp]
   18c24:	movw	r1, #26396	; 0x671c
   18c28:	movt	r1, #4
   18c2c:	str	r4, [sp, #4]
   18c30:	str	r4, [sp, #8]
   18c34:	str	r4, [sp, #12]
   18c38:	ldr	r0, [r4, #204]	; 0xcc
   18c3c:	bl	13f60 <fprintf@plt>
   18c40:	mov	r3, r4
   18c44:	mov	r2, r4
   18c48:	str	r4, [sp]
   18c4c:	movw	r1, #26852	; 0x68e4
   18c50:	movt	r1, #4
   18c54:	str	r4, [sp, #4]
   18c58:	ldr	r0, [r4, #204]	; 0xcc
   18c5c:	bl	13f60 <fprintf@plt>
   18c60:	mov	r3, r4
   18c64:	mov	r2, r4
   18c68:	str	r4, [sp]
   18c6c:	movw	r1, #27488	; 0x6b60
   18c70:	movt	r1, #4
   18c74:	str	r4, [sp, #4]
   18c78:	str	r4, [sp, #8]
   18c7c:	str	r4, [sp, #12]
   18c80:	str	r4, [sp, #16]
   18c84:	str	r4, [sp, #20]
   18c88:	str	r4, [sp, #24]
   18c8c:	str	r4, [sp, #28]
   18c90:	ldr	r0, [r4, #204]	; 0xcc
   18c94:	bl	13f60 <fprintf@plt>
   18c98:	mov	r0, #10
   18c9c:	ldr	r1, [r4, #204]	; 0xcc
   18ca0:	bl	13fc0 <fputc@plt>
   18ca4:	ldr	r0, [r4, #204]	; 0xcc
   18ca8:	ldr	r3, [r4, #212]	; 0xd4
   18cac:	ldr	r3, [r3, #140]	; 0x8c
   18cb0:	cmp	r3, #0
   18cb4:	bne	18d40 <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   18cb8:	mov	r2, r5
   18cbc:	movw	r1, #28268	; 0x6e6c
   18cc0:	movt	r1, #4
   18cc4:	bl	13f60 <fprintf@plt>
   18cc8:	mov	r0, #0
   18ccc:	add	sp, sp, #236	; 0xec
   18cd0:	ldrd	r4, [sp]
   18cd4:	add	sp, sp, #8
   18cd8:	pop	{pc}		; (ldr pc, [sp], #4)
   18cdc:	movw	r1, #6312	; 0x18a8
   18ce0:	movt	r1, #4
   18ce4:	ldr	r0, [r4, #204]	; 0xcc
   18ce8:	mov	r2, r4
   18cec:	bl	13f60 <fprintf@plt>
   18cf0:	b	18ba0 <__flatcc_fb_gen_common_c_header@@Base+0x9d4>
   18cf4:	mov	r0, #10
   18cf8:	ldr	r1, [r4, #204]	; 0xcc
   18cfc:	bl	13fc0 <fputc@plt>
   18d00:	b	18410 <__flatcc_fb_gen_common_c_header@@Base+0x244>
   18d04:	movw	r0, #22056	; 0x5628
   18d08:	movt	r0, #4
   18d0c:	ldr	r3, [r4, #204]	; 0xcc
   18d10:	mov	r2, #20
   18d14:	mov	r1, #1
   18d18:	bl	13ef4 <fwrite@plt>
   18d1c:	b	18934 <__flatcc_fb_gen_common_c_header@@Base+0x768>
   18d20:	mov	r0, #10
   18d24:	ldr	r1, [r4, #204]	; 0xcc
   18d28:	bl	13fc0 <fputc@plt>
   18d2c:	b	1897c <__flatcc_fb_gen_common_c_header@@Base+0x7b0>
   18d30:	mov	r0, #10
   18d34:	ldr	r1, [r4, #204]	; 0xcc
   18d38:	bl	13fc0 <fputc@plt>
   18d3c:	b	18314 <__flatcc_fb_gen_common_c_header@@Base+0x148>
   18d40:	mov	r3, r0
   18d44:	mov	r2, #36	; 0x24
   18d48:	movw	r0, #28228	; 0x6e44
   18d4c:	movt	r0, #4
   18d50:	mov	r1, #1
   18d54:	bl	13ef4 <fwrite@plt>
   18d58:	ldr	r0, [r4, #204]	; 0xcc
   18d5c:	b	18cb8 <__flatcc_fb_gen_common_c_header@@Base+0xaec>
   18d60:	movw	r1, #25056	; 0x61e0
   18d64:	movt	r1, #4
   18d68:	ldr	r0, [r4, #204]	; 0xcc
   18d6c:	mov	r2, r4
   18d70:	bl	13f60 <fprintf@plt>
   18d74:	b	18b6c <__flatcc_fb_gen_common_c_header@@Base+0x9a0>
   18d78:	mov	r3, r4
   18d7c:	mov	r2, r4
   18d80:	str	r4, [sp]
   18d84:	movw	r1, #4164	; 0x1044
   18d88:	movt	r1, #4
   18d8c:	str	r4, [sp, #4]
   18d90:	str	r4, [sp, #8]
   18d94:	ldr	r0, [r4, #204]	; 0xcc
   18d98:	bl	13f60 <fprintf@plt>
   18d9c:	mov	r3, r4
   18da0:	movw	r2, #4144	; 0x1030
   18da4:	movt	r2, #4
   18da8:	movw	r1, #4372	; 0x1114
   18dac:	movt	r1, #4
   18db0:	str	r4, [sp]
   18db4:	str	r4, [sp, #4]
   18db8:	ldr	r0, [r4, #204]	; 0xcc
   18dbc:	bl	13f60 <fprintf@plt>
   18dc0:	mov	r3, r4
   18dc4:	mov	r2, r4
   18dc8:	str	r4, [sp]
   18dcc:	movw	r1, #4716	; 0x126c
   18dd0:	movt	r1, #4
   18dd4:	str	r4, [sp, #4]
   18dd8:	str	r4, [sp, #8]
   18ddc:	ldr	r0, [r4, #204]	; 0xcc
   18de0:	bl	13f60 <fprintf@plt>
   18de4:	mov	r3, r5
   18de8:	mov	r2, r5
   18dec:	ldr	r0, [r4, #204]	; 0xcc
   18df0:	movw	r1, #5332	; 0x14d4
   18df4:	movt	r1, #4
   18df8:	bl	13f60 <fprintf@plt>
   18dfc:	b	18274 <__flatcc_fb_gen_common_c_header@@Base+0xa8>
   18e00:	movw	r0, #4064	; 0xfe0
   18e04:	movt	r0, #4
   18e08:	mov	r2, #36	; 0x24
   18e0c:	mov	r1, #1
   18e10:	bl	13ef4 <fwrite@plt>
   18e14:	ldr	r3, [r4, #204]	; 0xcc
   18e18:	b	18248 <__flatcc_fb_gen_common_c_header@@Base+0x7c>
   18e1c:	movw	r0, #3928	; 0xf58
   18e20:	movt	r0, #4
   18e24:	ldr	r3, [r4, #204]	; 0xcc
   18e28:	mov	r2, #135	; 0x87
   18e2c:	mov	r1, #1
   18e30:	bl	13ef4 <fwrite@plt>
   18e34:	ldr	r3, [r4, #212]	; 0xd4
   18e38:	b	18238 <__flatcc_fb_gen_common_c_header@@Base+0x6c>

00018e3c <__flatcc_fb_gen_c_reader@@Base>:
   18e3c:	ldr	r3, [r0, #208]	; 0xd0
   18e40:	movw	r1, #28296	; 0x6e88
   18e44:	movt	r1, #4
   18e48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18e4c:	mov	r4, r0
   18e50:	ldr	r2, [r0, #212]	; 0xd4
   18e54:	ldr	r3, [r3, #164]	; 0xa4
   18e58:	ldr	r5, [r2, #132]	; 0x84
   18e5c:	strd	r6, [sp, #8]
   18e60:	add	r6, r0, #102	; 0x66
   18e64:	strd	r8, [sp, #16]
   18e68:	mov	r2, r3
   18e6c:	strd	sl, [sp, #24]
   18e70:	str	lr, [sp, #32]
   18e74:	sub	sp, sp, #268	; 0x10c
   18e78:	ldr	r0, [r0, #204]	; 0xcc
   18e7c:	bl	13f60 <fprintf@plt>
   18e80:	movw	r0, #3788	; 0xecc
   18e84:	movt	r0, #4
   18e88:	ldr	r3, [r4, #204]	; 0xcc
   18e8c:	mov	r2, #81	; 0x51
   18e90:	mov	r1, #1
   18e94:	bl	13ef4 <fwrite@plt>
   18e98:	cmp	r5, #0
   18e9c:	bne	19340 <__flatcc_fb_gen_c_reader@@Base+0x504>
   18ea0:	mov	r3, r4
   18ea4:	mov	r2, r6
   18ea8:	ldr	r0, [r4, #204]	; 0xcc
   18eac:	movw	r1, #28784	; 0x7070
   18eb0:	movt	r1, #4
   18eb4:	bl	13f60 <fprintf@plt>
   18eb8:	mov	r0, r4
   18ebc:	movw	r2, #28848	; 0x70b0
   18ec0:	movt	r2, #4
   18ec4:	movw	r1, #25444	; 0x6364
   18ec8:	movt	r1, #5
   18ecc:	bl	15008 <__flatcc_fb_gen_c_includes@@Base>
   18ed0:	mov	r2, #39	; 0x27
   18ed4:	mov	r1, #1
   18ed8:	ldr	r3, [r4, #204]	; 0xcc
   18edc:	movw	r0, #28860	; 0x70bc
   18ee0:	movt	r0, #4
   18ee4:	bl	13ef4 <fwrite@plt>
   18ee8:	movw	r0, #29328	; 0x7290
   18eec:	movt	r0, #4
   18ef0:	ldr	r3, [r4, #204]	; 0xcc
   18ef4:	mov	r2, #58	; 0x3a
   18ef8:	mov	r1, #1
   18efc:	bl	13ef4 <fwrite@plt>
   18f00:	ldr	r0, [r4, #204]	; 0xcc
   18f04:	ldr	r3, [r4, #212]	; 0xd4
   18f08:	ldr	r3, [r3, #140]	; 0x8c
   18f0c:	cmp	r3, #0
   18f10:	bne	19320 <__flatcc_fb_gen_c_reader@@Base+0x4e4>
   18f14:	ldr	ip, [r4, #208]	; 0xd0
   18f18:	ldrh	r3, [ip, #16]
   18f1c:	cmp	r3, #2
   18f20:	beq	192d0 <__flatcc_fb_gen_c_reader@@Base+0x494>
   18f24:	movw	r1, #28952	; 0x7118
   18f28:	movt	r1, #4
   18f2c:	mov	r3, r4
   18f30:	mov	r2, r4
   18f34:	bl	13f60 <fprintf@plt>
   18f38:	ldr	r0, [r4, #204]	; 0xcc
   18f3c:	ldr	ip, [r4, #208]	; 0xd0
   18f40:	ldrh	r3, [ip, #32]
   18f44:	cmp	r3, #2
   18f48:	beq	192f8 <__flatcc_fb_gen_c_reader@@Base+0x4bc>
   18f4c:	ldr	ip, [r4, #212]	; 0xd4
   18f50:	movw	r1, #29052	; 0x717c
   18f54:	movt	r1, #4
   18f58:	mov	r3, r4
   18f5c:	mov	r2, r4
   18f60:	ldr	ip, [ip, #104]	; 0x68
   18f64:	str	ip, [sp]
   18f68:	bl	13f60 <fprintf@plt>
   18f6c:	mov	r0, #10
   18f70:	ldr	r1, [r4, #204]	; 0xcc
   18f74:	bl	13fc0 <fputc@plt>
   18f78:	ldr	r3, [r4, #208]	; 0xd0
   18f7c:	ldr	r5, [r3, #44]	; 0x2c
   18f80:	cmp	r5, #0
   18f84:	beq	18fa0 <__flatcc_fb_gen_c_reader@@Base+0x164>
   18f88:	mov	r1, r5
   18f8c:	mov	r0, r4
   18f90:	bl	15ac0 <__flatcc_fb_codegen_c@@Base+0x4c8>
   18f94:	ldr	r5, [r5, #120]	; 0x78
   18f98:	cmp	r5, #0
   18f9c:	bne	18f88 <__flatcc_fb_gen_c_reader@@Base+0x14c>
   18fa0:	mov	r0, #10
   18fa4:	ldr	r1, [r4, #204]	; 0xcc
   18fa8:	bl	13fc0 <fputc@plt>
   18fac:	ldr	r3, [r4, #208]	; 0xd0
   18fb0:	ldr	r5, [r3, #40]	; 0x28
   18fb4:	cmp	r5, #0
   18fb8:	beq	19174 <__flatcc_fb_gen_c_reader@@Base+0x338>
   18fbc:	ldrh	r3, [r5, #8]
   18fc0:	cmp	r3, #0
   18fc4:	beq	19210 <__flatcc_fb_gen_c_reader@@Base+0x3d4>
   18fc8:	ldr	r5, [r5]
   18fcc:	cmp	r5, #0
   18fd0:	bne	18fbc <__flatcc_fb_gen_c_reader@@Base+0x180>
   18fd4:	ldr	r3, [r4, #208]	; 0xd0
   18fd8:	ldr	r5, [r3, #40]	; 0x28
   18fdc:	cmp	r5, #0
   18fe0:	beq	19174 <__flatcc_fb_gen_c_reader@@Base+0x338>
   18fe4:	movw	r3, #29108	; 0x71b4
   18fe8:	movt	r3, #4
   18fec:	str	r3, [sp, #12]
   18ff0:	movw	r3, #29176	; 0x71f8
   18ff4:	movt	r3, #4
   18ff8:	str	r3, [sp, #16]
   18ffc:	movw	r3, #29220	; 0x7224
   19000:	movt	r3, #4
   19004:	str	r3, [sp, #20]
   19008:	b	19018 <__flatcc_fb_gen_c_reader@@Base+0x1dc>
   1900c:	ldr	r5, [r5]
   19010:	cmp	r5, #0
   19014:	beq	19174 <__flatcc_fb_gen_c_reader@@Base+0x338>
   19018:	ldrh	r3, [r5, #8]
   1901c:	cmp	r3, #1
   19020:	bhi	1900c <__flatcc_fb_gen_c_reader@@Base+0x1d0>
   19024:	mov	r2, #220	; 0xdc
   19028:	mov	r1, #0
   1902c:	add	r0, sp, #44	; 0x2c
   19030:	bl	13f78 <memset@plt>
   19034:	mov	r1, r5
   19038:	add	r2, sp, #44	; 0x2c
   1903c:	ldr	r0, [r5, #12]
   19040:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   19044:	ldr	r6, [r5, #88]	; 0x58
   19048:	add	r3, sp, #44	; 0x2c
   1904c:	mov	r2, r3
   19050:	str	r4, [sp]
   19054:	ldr	r1, [sp, #12]
   19058:	ldr	r0, [r4, #204]	; 0xcc
   1905c:	bl	13f60 <fprintf@plt>
   19060:	and	fp, r6, #15
   19064:	mov	r3, r4
   19068:	ubfx	sl, r6, #4, #4
   1906c:	add	r2, sp, #44	; 0x2c
   19070:	ldr	r1, [sp, #16]
   19074:	ubfx	r9, r6, #8, #4
   19078:	ubfx	r8, r6, #12, #4
   1907c:	ldr	r0, [r4, #204]	; 0xcc
   19080:	ubfx	r7, r6, #16, #4
   19084:	str	r6, [sp]
   19088:	bl	13f60 <fprintf@plt>
   1908c:	cmp	fp, #9
   19090:	ubfx	lr, r6, #20, #4
   19094:	movw	r0, #30812	; 0x785c
   19098:	movhi	r1, #87	; 0x57
   1909c:	movls	r1, #48	; 0x30
   190a0:	cmp	sl, #9
   190a4:	add	r1, fp, r1
   190a8:	ubfx	fp, r6, #24, #4
   190ac:	movhi	ip, #87	; 0x57
   190b0:	movls	ip, #48	; 0x30
   190b4:	lsr	r6, r6, #28
   190b8:	cmp	r9, #9
   190bc:	add	ip, sl, ip
   190c0:	strh	r0, [sp, #24]
   190c4:	movhi	r3, #87	; 0x57
   190c8:	movls	r3, #48	; 0x30
   190cc:	cmp	r8, #9
   190d0:	add	r3, r9, r3
   190d4:	strb	ip, [sp, #26]
   190d8:	movhi	r9, #87	; 0x57
   190dc:	movls	r9, #48	; 0x30
   190e0:	strb	r1, [sp, #27]
   190e4:	cmp	r7, #9
   190e8:	add	r8, r8, r9
   190ec:	strh	r0, [sp, #28]
   190f0:	movhi	r9, #87	; 0x57
   190f4:	movls	r9, #48	; 0x30
   190f8:	cmp	lr, #9
   190fc:	add	r7, r7, r9
   19100:	strb	r8, [sp, #30]
   19104:	movhi	ip, #87	; 0x57
   19108:	movls	ip, #48	; 0x30
   1910c:	strb	r3, [sp, #31]
   19110:	cmp	fp, #9
   19114:	add	lr, lr, ip
   19118:	strh	r0, [sp, #32]
   1911c:	movhi	r1, #87	; 0x57
   19120:	movls	r1, #48	; 0x30
   19124:	cmp	r6, #9
   19128:	add	fp, fp, r1
   1912c:	strh	r0, [sp, #36]	; 0x24
   19130:	movhi	r1, #87	; 0x57
   19134:	movls	r1, #48	; 0x30
   19138:	ldr	r0, [r4, #204]	; 0xcc
   1913c:	add	r6, r6, r1
   19140:	mov	ip, #0
   19144:	strb	lr, [sp, #34]	; 0x22
   19148:	add	r2, sp, #44	; 0x2c
   1914c:	add	r3, sp, #24
   19150:	ldr	r1, [sp, #20]
   19154:	strb	r7, [sp, #35]	; 0x23
   19158:	strb	r6, [sp, #38]	; 0x26
   1915c:	strb	fp, [sp, #39]	; 0x27
   19160:	strb	ip, [sp, #40]	; 0x28
   19164:	bl	13f60 <fprintf@plt>
   19168:	ldr	r5, [r5]
   1916c:	cmp	r5, #0
   19170:	bne	19018 <__flatcc_fb_gen_c_reader@@Base+0x1dc>
   19174:	mov	r0, #10
   19178:	ldr	r1, [r4, #204]	; 0xcc
   1917c:	bl	13fc0 <fputc@plt>
   19180:	ldr	r3, [r4, #208]	; 0xd0
   19184:	ldr	r5, [r3, #40]	; 0x28
   19188:	cmp	r5, #0
   1918c:	beq	191a8 <__flatcc_fb_gen_c_reader@@Base+0x36c>
   19190:	ldrh	r3, [r5, #8]
   19194:	cmp	r3, #3
   19198:	beq	192b4 <__flatcc_fb_gen_c_reader@@Base+0x478>
   1919c:	ldr	r5, [r5]
   191a0:	cmp	r5, #0
   191a4:	bne	19190 <__flatcc_fb_gen_c_reader@@Base+0x354>
   191a8:	mov	r0, #10
   191ac:	ldr	r1, [r4, #204]	; 0xcc
   191b0:	bl	13fc0 <fputc@plt>
   191b4:	ldr	r3, [r4, #208]	; 0xd0
   191b8:	ldr	r5, [r3, #44]	; 0x2c
   191bc:	cmp	r5, #0
   191c0:	beq	191e0 <__flatcc_fb_gen_c_reader@@Base+0x3a4>
   191c4:	mov	r1, r5
   191c8:	mov	r0, r4
   191cc:	bl	164b0 <__flatcc_fb_codegen_c@@Base+0xeb8>
   191d0:	ldr	r5, [r5, #120]	; 0x78
   191d4:	cmp	r5, #0
   191d8:	bne	191c4 <__flatcc_fb_gen_c_reader@@Base+0x388>
   191dc:	ldr	r3, [r4, #208]	; 0xd0
   191e0:	ldr	r5, [r3, #40]	; 0x28
   191e4:	cmp	r5, #0
   191e8:	beq	19244 <__flatcc_fb_gen_c_reader@@Base+0x408>
   191ec:	ldrh	r3, [r5, #8]
   191f0:	cmp	r3, #4
   191f4:	ldrls	pc, [pc, r3, lsl #2]
   191f8:	b	193c4 <__flatcc_fb_gen_c_reader@@Base+0x588>
   191fc:	muleq	r1, r8, r2
   19200:	andeq	r9, r1, r8, lsr r2
   19204:	andeq	r9, r1, r8, lsr r2
   19208:	andeq	r9, r1, r8, lsr r2
   1920c:	andeq	r9, r1, ip, lsr #4
   19210:	mov	r1, r5
   19214:	mov	r0, r4
   19218:	bl	15ac0 <__flatcc_fb_codegen_c@@Base+0x4c8>
   1921c:	ldr	r5, [r5]
   19220:	cmp	r5, #0
   19224:	bne	18fbc <__flatcc_fb_gen_c_reader@@Base+0x180>
   19228:	b	18fd4 <__flatcc_fb_gen_c_reader@@Base+0x198>
   1922c:	mov	r1, r5
   19230:	mov	r0, r4
   19234:	bl	15c84 <__flatcc_fb_codegen_c@@Base+0x68c>
   19238:	ldr	r5, [r5]
   1923c:	cmp	r5, #0
   19240:	bne	191ec <__flatcc_fb_gen_c_reader@@Base+0x3b0>
   19244:	mov	r0, #10
   19248:	ldr	r1, [r4, #204]	; 0xcc
   1924c:	bl	13fc0 <fputc@plt>
   19250:	ldr	r0, [r4, #204]	; 0xcc
   19254:	ldr	r3, [r4, #212]	; 0xd4
   19258:	ldr	r3, [r3, #140]	; 0x8c
   1925c:	cmp	r3, #0
   19260:	bne	193a4 <__flatcc_fb_gen_c_reader@@Base+0x568>
   19264:	ldr	r3, [r4, #208]	; 0xd0
   19268:	movw	r1, #29300	; 0x7274
   1926c:	movt	r1, #4
   19270:	ldr	r2, [r3, #164]	; 0xa4
   19274:	bl	13f60 <fprintf@plt>
   19278:	mov	r0, #0
   1927c:	add	sp, sp, #268	; 0x10c
   19280:	ldrd	r4, [sp]
   19284:	ldrd	r6, [sp, #8]
   19288:	ldrd	r8, [sp, #16]
   1928c:	ldrd	sl, [sp, #24]
   19290:	add	sp, sp, #32
   19294:	pop	{pc}		; (ldr pc, [sp], #4)
   19298:	mov	r1, r5
   1929c:	mov	r0, r4
   192a0:	bl	1702c <__flatcc_fb_codegen_c@@Base+0x1a34>
   192a4:	ldr	r5, [r5]
   192a8:	cmp	r5, #0
   192ac:	bne	191ec <__flatcc_fb_gen_c_reader@@Base+0x3b0>
   192b0:	b	19244 <__flatcc_fb_gen_c_reader@@Base+0x408>
   192b4:	mov	r1, r5
   192b8:	mov	r0, r4
   192bc:	bl	15c84 <__flatcc_fb_codegen_c@@Base+0x68c>
   192c0:	ldr	r5, [r5]
   192c4:	cmp	r5, #0
   192c8:	bne	19190 <__flatcc_fb_gen_c_reader@@Base+0x354>
   192cc:	b	191a8 <__flatcc_fb_gen_c_reader@@Base+0x36c>
   192d0:	ldr	lr, [ip, #8]
   192d4:	movw	r1, #28900	; 0x70e4
   192d8:	movt	r1, #4
   192dc:	mov	r3, r4
   192e0:	mov	r2, r4
   192e4:	str	lr, [sp, #4]
   192e8:	ldr	ip, [ip, #12]
   192ec:	str	ip, [sp]
   192f0:	bl	13f60 <fprintf@plt>
   192f4:	b	18f38 <__flatcc_fb_gen_c_reader@@Base+0xfc>
   192f8:	ldr	lr, [ip, #24]
   192fc:	movw	r1, #29004	; 0x714c
   19300:	movt	r1, #4
   19304:	mov	r3, r4
   19308:	mov	r2, r4
   1930c:	str	lr, [sp, #4]
   19310:	ldr	ip, [ip, #28]
   19314:	str	ip, [sp]
   19318:	bl	13f60 <fprintf@plt>
   1931c:	b	18f6c <__flatcc_fb_gen_c_reader@@Base+0x130>
   19320:	mov	r3, r0
   19324:	mov	r2, #36	; 0x24
   19328:	movw	r0, #4064	; 0xfe0
   1932c:	movt	r0, #4
   19330:	mov	r1, #1
   19334:	bl	13ef4 <fwrite@plt>
   19338:	ldr	r0, [r4, #204]	; 0xcc
   1933c:	b	18f14 <__flatcc_fb_gen_c_reader@@Base+0xd8>
   19340:	movw	r2, #443	; 0x1bb
   19344:	mov	r1, #1
   19348:	ldr	r3, [r4, #204]	; 0xcc
   1934c:	movw	r0, #28340	; 0x6eb4
   19350:	movt	r0, #4
   19354:	bl	13ef4 <fwrite@plt>
   19358:	mov	r3, r4
   1935c:	mov	r2, r6
   19360:	ldr	r0, [r4, #204]	; 0xcc
   19364:	movw	r1, #28784	; 0x7070
   19368:	movt	r1, #4
   1936c:	bl	13f60 <fprintf@plt>
   19370:	mov	r0, r4
   19374:	movw	r2, #28848	; 0x70b0
   19378:	movt	r2, #4
   1937c:	movw	r1, #25444	; 0x6364
   19380:	movt	r1, #5
   19384:	bl	15008 <__flatcc_fb_gen_c_includes@@Base>
   19388:	movw	r0, #28860	; 0x70bc
   1938c:	movt	r0, #4
   19390:	ldr	r3, [r4, #204]	; 0xcc
   19394:	mov	r2, #39	; 0x27
   19398:	mov	r1, #1
   1939c:	bl	13ef4 <fwrite@plt>
   193a0:	b	18f00 <__flatcc_fb_gen_c_reader@@Base+0xc4>
   193a4:	mov	r3, r0
   193a8:	mov	r2, #36	; 0x24
   193ac:	movw	r0, #28228	; 0x6e44
   193b0:	movt	r0, #4
   193b4:	mov	r1, #1
   193b8:	bl	13ef4 <fwrite@plt>
   193bc:	ldr	r0, [r4, #204]	; 0xcc
   193c0:	b	19264 <__flatcc_fb_gen_c_reader@@Base+0x428>
   193c4:	movw	r1, #29256	; 0x7248
   193c8:	movt	r1, #4
   193cc:	movw	r3, #41128	; 0xa0a8
   193d0:	movt	r3, #6
   193d4:	movw	r2, #63988	; 0xf9f4
   193d8:	movt	r2, #3
   193dc:	str	r1, [sp]
   193e0:	movw	r1, #64544	; 0xfc20
   193e4:	movt	r1, #3
   193e8:	ldr	r0, [r3]
   193ec:	movw	r3, #1672	; 0x688
   193f0:	bl	13f60 <fprintf@plt>
   193f4:	movw	r1, #63988	; 0xf9f4
   193f8:	movt	r1, #3
   193fc:	ldr	r3, [pc, #12]	; 19410 <__flatcc_fb_gen_c_reader@@Base+0x5d4>
   19400:	movw	r0, #35672	; 0x8b58
   19404:	movt	r0, #4
   19408:	movw	r2, #1672	; 0x688
   1940c:	bl	14014 <__assert_fail@plt>
   19410:	ldrdeq	pc, [r3], -r8

00019414 <__flatcc_gen_sort@@Base>:
   19414:	mov	r2, r0
   19418:	movw	r1, #29756	; 0x743c
   1941c:	movt	r1, #4
   19420:	str	r4, [sp, #-8]!
   19424:	mov	r4, r0
   19428:	ldr	r0, [r0, #204]	; 0xcc
   1942c:	str	lr, [sp, #4]
   19430:	sub	sp, sp, #24
   19434:	bl	13f60 <fprintf@plt>
   19438:	mov	r3, r4
   1943c:	mov	r2, r4
   19440:	ldr	r0, [r4, #204]	; 0xcc
   19444:	movw	r1, #30732	; 0x780c
   19448:	movt	r1, #4
   1944c:	bl	13f60 <fprintf@plt>
   19450:	mov	r3, r4
   19454:	mov	r2, r4
   19458:	str	r4, [sp]
   1945c:	movw	r1, #31004	; 0x791c
   19460:	movt	r1, #4
   19464:	ldr	r0, [r4, #204]	; 0xcc
   19468:	bl	13f60 <fprintf@plt>
   1946c:	mov	r3, r4
   19470:	mov	r2, r4
   19474:	str	r4, [sp]
   19478:	movw	r1, #31216	; 0x79f0
   1947c:	movt	r1, #4
   19480:	str	r4, [sp, #4]
   19484:	ldr	r0, [r4, #204]	; 0xcc
   19488:	bl	13f60 <fprintf@plt>
   1948c:	mov	r3, r4
   19490:	mov	r2, r4
   19494:	ldr	r0, [r4, #204]	; 0xcc
   19498:	movw	r1, #31364	; 0x7a84
   1949c:	movt	r1, #4
   194a0:	bl	13f60 <fprintf@plt>
   194a4:	mov	r3, r4
   194a8:	mov	r2, r4
   194ac:	str	r4, [sp]
   194b0:	movw	r1, #31772	; 0x7c1c
   194b4:	movt	r1, #4
   194b8:	str	r4, [sp, #4]
   194bc:	ldr	r0, [r4, #204]	; 0xcc
   194c0:	bl	13f60 <fprintf@plt>
   194c4:	mov	r3, r4
   194c8:	mov	r2, r4
   194cc:	str	r4, [sp]
   194d0:	movw	r1, #31908	; 0x7ca4
   194d4:	movt	r1, #4
   194d8:	str	r4, [sp, #4]
   194dc:	str	r4, [sp, #8]
   194e0:	str	r4, [sp, #12]
   194e4:	ldr	r0, [r4, #204]	; 0xcc
   194e8:	bl	13f60 <fprintf@plt>
   194ec:	mov	r3, r4
   194f0:	mov	r2, r4
   194f4:	str	r4, [sp]
   194f8:	movw	r1, #32052	; 0x7d34
   194fc:	movt	r1, #4
   19500:	str	r4, [sp, #4]
   19504:	ldr	r0, [r4, #204]	; 0xcc
   19508:	bl	13f60 <fprintf@plt>
   1950c:	mov	r3, r4
   19510:	mov	r2, r4
   19514:	str	r4, [sp]
   19518:	movw	r1, #32152	; 0x7d98
   1951c:	movt	r1, #4
   19520:	str	r4, [sp, #4]
   19524:	str	r4, [sp, #8]
   19528:	str	r4, [sp, #12]
   1952c:	str	r4, [sp, #16]
   19530:	ldr	r0, [r4, #204]	; 0xcc
   19534:	bl	13f60 <fprintf@plt>
   19538:	mov	r0, #0
   1953c:	add	sp, sp, #24
   19540:	ldr	r4, [sp]
   19544:	add	sp, sp, #4
   19548:	pop	{pc}		; (ldr pc, [sp], #4)
   1954c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19550:	movw	ip, #32640	; 0x7f80
   19554:	movt	ip, #4
   19558:	strd	r6, [sp, #8]
   1955c:	mov	r5, r0
   19560:	strd	r8, [sp, #16]
   19564:	strd	sl, [sp, #24]
   19568:	mov	sl, r1
   1956c:	mov	r1, #0
   19570:	str	lr, [sp, #32]
   19574:	sub	sp, sp, #500	; 0x1f4
   19578:	movw	lr, #32624	; 0x7f70
   1957c:	movt	lr, #4
   19580:	ldr	r4, [sp, #536]	; 0x218
   19584:	add	r8, sp, #56	; 0x38
   19588:	mov	fp, r2
   1958c:	mov	r0, r8
   19590:	str	r3, [sp, #40]	; 0x28
   19594:	ldr	r6, [sp, #540]	; 0x21c
   19598:	mov	r2, #220	; 0xdc
   1959c:	add	r9, sp, #276	; 0x114
   195a0:	cmp	r6, r1
   195a4:	moveq	lr, ip
   195a8:	str	lr, [sp, #36]	; 0x24
   195ac:	bl	13f78 <memset@plt>
   195b0:	mov	r2, #220	; 0xdc
   195b4:	mov	r1, #0
   195b8:	mov	r0, r9
   195bc:	bl	13f78 <memset@plt>
   195c0:	mov	r1, r4
   195c4:	mov	r2, r8
   195c8:	ldr	r0, [r4, #12]
   195cc:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   195d0:	ldr	r4, [r4, #20]
   195d4:	cmp	r4, #0
   195d8:	beq	1970c <__flatcc_gen_sort@@Base+0x2f8>
   195dc:	movw	r3, #32908	; 0x808c
   195e0:	movt	r3, #4
   195e4:	str	r3, [sp, #44]	; 0x2c
   195e8:	movw	r3, #32648	; 0x7f88
   195ec:	movt	r3, #4
   195f0:	str	r3, [sp, #48]	; 0x30
   195f4:	movw	r3, #32708	; 0x7fc4
   195f8:	movt	r3, #4
   195fc:	str	r3, [sp, #52]	; 0x34
   19600:	b	19664 <__flatcc_gen_sort@@Base+0x250>
   19604:	ldr	r1, [r4, #16]
   19608:	mov	r2, r9
   1960c:	ldr	r0, [r1, #12]
   19610:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   19614:	ldr	r3, [r4, #16]
   19618:	ldrh	r3, [r3, #8]
   1961c:	cmp	r3, #0
   19620:	bne	1972c <__flatcc_gen_sort@@Base+0x318>
   19624:	ldr	r3, [sp, #36]	; 0x24
   19628:	mov	r2, r5
   1962c:	stm	sp, {r5, sl}
   19630:	ldr	r1, [sp, #48]	; 0x30
   19634:	str	fp, [sp, #8]
   19638:	ldr	r0, [sp, #40]	; 0x28
   1963c:	str	r0, [sp, #12]
   19640:	str	r8, [sp, #16]
   19644:	str	r7, [sp, #20]
   19648:	str	r6, [sp, #24]
   1964c:	str	r9, [sp, #28]
   19650:	ldr	r0, [r5, #204]	; 0xcc
   19654:	bl	13f60 <fprintf@plt>
   19658:	ldr	r4, [r4]
   1965c:	cmp	r4, #0
   19660:	beq	1970c <__flatcc_gen_sort@@Base+0x2f8>
   19664:	ldrh	r3, [r4, #24]
   19668:	ldr	r2, [r4, #4]
   1966c:	cmp	r3, #10
   19670:	ldrd	r6, [r2]
   19674:	beq	196d8 <__flatcc_gen_sort@@Base+0x2c4>
   19678:	cmp	r3, #14
   1967c:	beq	19604 <__flatcc_gen_sort@@Base+0x1f0>
   19680:	cmp	r3, #0
   19684:	beq	19658 <__flatcc_gen_sort@@Base+0x244>
   19688:	movw	r1, #32964	; 0x80c4
   1968c:	movt	r1, #4
   19690:	movw	r3, #41128	; 0xa0a8
   19694:	movt	r3, #6
   19698:	movw	r2, #32768	; 0x8000
   1969c:	movt	r2, #4
   196a0:	str	r1, [sp]
   196a4:	movw	r1, #64544	; 0xfc20
   196a8:	movt	r1, #3
   196ac:	ldr	r0, [r3]
   196b0:	movw	r3, #1368	; 0x558
   196b4:	bl	13f60 <fprintf@plt>
   196b8:	movw	r3, #32272	; 0x7e10
   196bc:	movt	r3, #4
   196c0:	movw	r1, #32768	; 0x8000
   196c4:	movt	r1, #4
   196c8:	movw	r0, #35672	; 0x8b58
   196cc:	movt	r0, #4
   196d0:	movw	r2, #1368	; 0x558
   196d4:	bl	14014 <__assert_fail@plt>
   196d8:	mov	r2, r5
   196dc:	stm	sp, {r5, sl, fp}
   196e0:	ldrd	r0, [sp, #40]	; 0x28
   196e4:	ldr	r3, [sp, #36]	; 0x24
   196e8:	str	r0, [sp, #12]
   196ec:	str	r8, [sp, #16]
   196f0:	str	r7, [sp, #20]
   196f4:	str	r6, [sp, #24]
   196f8:	ldr	r0, [r5, #204]	; 0xcc
   196fc:	bl	13f60 <fprintf@plt>
   19700:	ldr	r4, [r4]
   19704:	cmp	r4, #0
   19708:	bne	19664 <__flatcc_gen_sort@@Base+0x250>
   1970c:	mov	r0, #0
   19710:	add	sp, sp, #500	; 0x1f4
   19714:	ldrd	r4, [sp]
   19718:	ldrd	r6, [sp, #8]
   1971c:	ldrd	r8, [sp, #16]
   19720:	ldrd	sl, [sp, #24]
   19724:	add	sp, sp, #32
   19728:	pop	{pc}		; (ldr pc, [sp], #4)
   1972c:	cmp	r3, #1
   19730:	bne	19748 <__flatcc_gen_sort@@Base+0x334>
   19734:	mov	r2, r5
   19738:	stm	sp, {r5, sl}
   1973c:	ldr	r3, [sp, #36]	; 0x24
   19740:	ldr	r1, [sp, #52]	; 0x34
   19744:	b	19634 <__flatcc_gen_sort@@Base+0x220>
   19748:	movw	r1, #32852	; 0x8054
   1974c:	movt	r1, #4
   19750:	movw	r3, #41128	; 0xa0a8
   19754:	movt	r3, #6
   19758:	movw	r2, #32768	; 0x8000
   1975c:	movt	r2, #4
   19760:	str	r1, [sp]
   19764:	movw	r1, #64544	; 0xfc20
   19768:	movt	r1, #3
   1976c:	ldr	r0, [r3]
   19770:	movw	r3, #1358	; 0x54e
   19774:	bl	13f60 <fprintf@plt>
   19778:	movw	r3, #32272	; 0x7e10
   1977c:	movt	r3, #4
   19780:	movw	r1, #32768	; 0x8000
   19784:	movt	r1, #4
   19788:	movw	r0, #35672	; 0x8b58
   1978c:	movt	r0, #4
   19790:	movw	r2, #1358	; 0x54e
   19794:	bl	14014 <__assert_fail@plt>
   19798:	strd	r4, [sp, #-16]!
   1979c:	subs	r4, r0, #0
   197a0:	moveq	r5, r4
   197a4:	str	r6, [sp, #8]
   197a8:	str	lr, [sp, #12]
   197ac:	beq	197dc <__flatcc_gen_sort@@Base+0x3c8>
   197b0:	mov	r5, #0
   197b4:	ldrh	r3, [r4, #72]	; 0x48
   197b8:	tst	r3, #4
   197bc:	bne	197d0 <__flatcc_gen_sort@@Base+0x3bc>
   197c0:	ldrh	r3, [r4, #24]
   197c4:	cmp	r3, #14
   197c8:	beq	197f0 <__flatcc_gen_sort@@Base+0x3dc>
   197cc:	add	r5, r5, #1
   197d0:	ldr	r4, [r4]
   197d4:	cmp	r4, #0
   197d8:	bne	197b4 <__flatcc_gen_sort@@Base+0x3a0>
   197dc:	mov	r0, r5
   197e0:	ldrd	r4, [sp]
   197e4:	ldr	r6, [sp, #8]
   197e8:	add	sp, sp, #12
   197ec:	pop	{pc}		; (ldr pc, [sp], #4)
   197f0:	ldr	r3, [r4, #16]
   197f4:	ldrh	r2, [r3, #8]
   197f8:	cmp	r2, #1
   197fc:	bne	197cc <__flatcc_gen_sort@@Base+0x3b8>
   19800:	ldr	r0, [r3, #20]
   19804:	bl	19798 <__flatcc_gen_sort@@Base+0x384>
   19808:	add	r5, r5, r0
   1980c:	b	197d0 <__flatcc_gen_sort@@Base+0x3bc>
   19810:	movw	r3, #64556	; 0xfc2c
   19814:	movt	r3, #3
   19818:	push	{lr}		; (str lr, [sp, #-4]!)
   1981c:	sub	sp, sp, #12
   19820:	movw	r4, #64468	; 0xfbd4
   19824:	movt	r4, #3
   19828:	movw	r0, #41128	; 0xa0a8
   1982c:	movt	r0, #6
   19830:	mov	r2, r4
   19834:	str	r3, [sp]
   19838:	movw	r1, #64544	; 0xfc20
   1983c:	movt	r1, #3
   19840:	ldr	r0, [r0]
   19844:	mov	r3, #226	; 0xe2
   19848:	bl	13f60 <fprintf@plt>
   1984c:	movw	r0, #35672	; 0x8b58
   19850:	movt	r0, #4
   19854:	ldr	r3, [pc, #8]	; 19864 <__flatcc_gen_sort@@Base+0x450>
   19858:	mov	r1, r4
   1985c:	mov	r2, #226	; 0xe2
   19860:	bl	14014 <__assert_fail@plt>
   19864:	andeq	r7, r4, r4, lsr #28
   19868:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1986c:	mov	r4, r1
   19870:	mov	r5, r2
   19874:	strd	r6, [sp, #8]
   19878:	mov	r2, #220	; 0xdc
   1987c:	mov	r1, #0
   19880:	strd	r8, [sp, #16]
   19884:	mov	r6, r0
   19888:	mov	r7, r3
   1988c:	strd	sl, [sp, #24]
   19890:	str	lr, [sp, #32]
   19894:	sub	sp, sp, #244	; 0xf4
   19898:	add	r0, sp, #20
   1989c:	bl	13f78 <memset@plt>
   198a0:	ldr	r4, [r4]
   198a4:	cmp	r4, #0
   198a8:	beq	199fc <__flatcc_gen_sort@@Base+0x5e8>
   198ac:	ldr	r1, [sp, #280]	; 0x118
   198b0:	movw	r3, #4144	; 0x1030
   198b4:	movt	r3, #4
   198b8:	movw	r2, #10104	; 0x2778
   198bc:	movt	r2, #4
   198c0:	movw	r9, #32272	; 0x7e10
   198c4:	movt	r9, #4
   198c8:	movw	r8, #33040	; 0x8110
   198cc:	movt	r8, #4
   198d0:	movw	fp, #39472	; 0x9a30
   198d4:	movt	fp, #4
   198d8:	cmp	r1, #0
   198dc:	moveq	r2, r3
   198e0:	str	r2, [sp, #12]
   198e4:	b	19960 <__flatcc_gen_sort@@Base+0x54c>
   198e8:	cmp	r7, #0
   198ec:	beq	19918 <__flatcc_gen_sort@@Base+0x504>
   198f0:	cmp	r5, #0
   198f4:	ldr	r3, [r6, #204]	; 0xcc
   198f8:	bne	19a1c <__flatcc_gen_sort@@Base+0x608>
   198fc:	cmp	r7, #4
   19900:	ble	19a30 <__flatcc_gen_sort@@Base+0x61c>
   19904:	movw	r1, #33012	; 0x80f4
   19908:	movt	r1, #4
   1990c:	ldr	r2, [sp, #12]
   19910:	mov	r0, r3
   19914:	bl	13f60 <fprintf@plt>
   19918:	ldr	r3, [r4, #16]
   1991c:	cmp	r3, #5
   19920:	sub	r3, r3, #1
   19924:	beq	19a54 <__flatcc_gen_sort@@Base+0x640>
   19928:	cmp	r3, #10
   1992c:	bhi	19afc <__flatcc_gen_sort@@Base+0x6e8>
   19930:	mov	r2, fp
   19934:	add	r3, r9, r3, lsl #2
   19938:	add	r0, r5, #1
   1993c:	mov	r1, r8
   19940:	str	r5, [sp]
   19944:	mov	r5, r0
   19948:	ldr	r3, [r3, #32]
   1994c:	ldr	r0, [r6, #204]	; 0xcc
   19950:	bl	13f60 <fprintf@plt>
   19954:	ldr	r4, [r4]
   19958:	cmp	r4, #0
   1995c:	beq	199fc <__flatcc_gen_sort@@Base+0x5e8>
   19960:	ldrh	r3, [r4, #72]	; 0x48
   19964:	tst	r3, #4
   19968:	bne	19954 <__flatcc_gen_sort@@Base+0x540>
   1996c:	ldrh	r3, [r4, #24]
   19970:	cmp	r3, #8
   19974:	beq	198e8 <__flatcc_gen_sort@@Base+0x4d4>
   19978:	cmp	r3, #14
   1997c:	bne	19ab0 <__flatcc_gen_sort@@Base+0x69c>
   19980:	ldr	r1, [r4, #16]
   19984:	ldrh	r3, [r1, #8]
   19988:	cmp	r3, #1
   1998c:	beq	19a8c <__flatcc_gen_sort@@Base+0x678>
   19990:	cmp	r7, #0
   19994:	beq	199c4 <__flatcc_gen_sort@@Base+0x5b0>
   19998:	cmp	r5, #0
   1999c:	ldr	r3, [r6, #204]	; 0xcc
   199a0:	bne	19a5c <__flatcc_gen_sort@@Base+0x648>
   199a4:	cmp	r7, #4
   199a8:	ble	19a70 <__flatcc_gen_sort@@Base+0x65c>
   199ac:	mov	r0, r3
   199b0:	movw	r1, #33012	; 0x80f4
   199b4:	movt	r1, #4
   199b8:	ldr	r2, [sp, #12]
   199bc:	bl	13f60 <fprintf@plt>
   199c0:	ldr	r1, [r4, #16]
   199c4:	add	r2, sp, #20
   199c8:	add	sl, r5, #1
   199cc:	ldr	r0, [r1, #12]
   199d0:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   199d4:	mov	r3, r5
   199d8:	movw	r1, #33024	; 0x8100
   199dc:	movt	r1, #4
   199e0:	add	r2, sp, #20
   199e4:	ldr	r0, [r6, #204]	; 0xcc
   199e8:	bl	13f60 <fprintf@plt>
   199ec:	ldr	r4, [r4]
   199f0:	mov	r5, sl
   199f4:	cmp	r4, #0
   199f8:	bne	19960 <__flatcc_gen_sort@@Base+0x54c>
   199fc:	mov	r0, r5
   19a00:	add	sp, sp, #244	; 0xf4
   19a04:	ldrd	r4, [sp]
   19a08:	ldrd	r6, [sp, #8]
   19a0c:	ldrd	r8, [sp, #16]
   19a10:	ldrd	sl, [sp, #24]
   19a14:	add	sp, sp, #32
   19a18:	pop	{pc}		; (ldr pc, [sp], #4)
   19a1c:	tst	r5, #3
   19a20:	bne	19a30 <__flatcc_gen_sort@@Base+0x61c>
   19a24:	sub	r2, r7, r5
   19a28:	cmp	r2, #2
   19a2c:	bgt	19904 <__flatcc_gen_sort@@Base+0x4f0>
   19a30:	movw	r0, #33020	; 0x80fc
   19a34:	movt	r0, #4
   19a38:	mov	r2, #2
   19a3c:	mov	r1, #1
   19a40:	bl	13ef4 <fwrite@plt>
   19a44:	ldr	r3, [r4, #16]
   19a48:	cmp	r3, #5
   19a4c:	sub	r3, r3, #1
   19a50:	bne	19928 <__flatcc_gen_sort@@Base+0x514>
   19a54:	mov	r2, r6
   19a58:	b	19934 <__flatcc_gen_sort@@Base+0x520>
   19a5c:	tst	r5, #3
   19a60:	bne	19a70 <__flatcc_gen_sort@@Base+0x65c>
   19a64:	sub	r2, r7, r5
   19a68:	cmp	r2, #2
   19a6c:	bgt	199ac <__flatcc_gen_sort@@Base+0x598>
   19a70:	mov	r1, #1
   19a74:	movw	r0, #33020	; 0x80fc
   19a78:	movt	r0, #4
   19a7c:	mov	r2, #2
   19a80:	bl	13ef4 <fwrite@plt>
   19a84:	ldr	r1, [r4, #16]
   19a88:	b	199c4 <__flatcc_gen_sort@@Base+0x5b0>
   19a8c:	ldr	r3, [sp, #280]	; 0x118
   19a90:	mov	r2, r5
   19a94:	add	r1, r1, #20
   19a98:	mov	r0, r6
   19a9c:	str	r3, [sp]
   19aa0:	mov	r3, r7
   19aa4:	bl	19868 <__flatcc_gen_sort@@Base+0x454>
   19aa8:	mov	r5, r0
   19aac:	b	19954 <__flatcc_gen_sort@@Base+0x540>
   19ab0:	movw	r1, #33052	; 0x811c
   19ab4:	movt	r1, #4
   19ab8:	movw	r3, #41128	; 0xa0a8
   19abc:	movt	r3, #6
   19ac0:	movw	r2, #32768	; 0x8000
   19ac4:	movt	r2, #4
   19ac8:	str	r1, [sp]
   19acc:	movw	r1, #64544	; 0xfc20
   19ad0:	movt	r1, #3
   19ad4:	ldr	r0, [r3]
   19ad8:	movw	r3, #850	; 0x352
   19adc:	bl	13f60 <fprintf@plt>
   19ae0:	movw	r1, #32768	; 0x8000
   19ae4:	movt	r1, #4
   19ae8:	ldr	r3, [pc, #88]	; 19b48 <__flatcc_gen_sort@@Base+0x734>
   19aec:	movw	r0, #35672	; 0x8b58
   19af0:	movt	r0, #4
   19af4:	movw	r2, #850	; 0x352
   19af8:	bl	14014 <__assert_fail@plt>
   19afc:	movw	r1, #64556	; 0xfc2c
   19b00:	movt	r1, #3
   19b04:	movw	r3, #41128	; 0xa0a8
   19b08:	movt	r3, #6
   19b0c:	movw	r2, #64468	; 0xfbd4
   19b10:	movt	r2, #3
   19b14:	str	r1, [sp]
   19b18:	movw	r1, #64544	; 0xfc20
   19b1c:	movt	r1, #3
   19b20:	ldr	r0, [r3]
   19b24:	mov	r3, #141	; 0x8d
   19b28:	bl	13f60 <fprintf@plt>
   19b2c:	movw	r1, #64468	; 0xfbd4
   19b30:	movt	r1, #3
   19b34:	ldr	r3, [pc, #16]	; 19b4c <__flatcc_gen_sort@@Base+0x738>
   19b38:	movw	r0, #35672	; 0x8b58
   19b3c:	movt	r0, #4
   19b40:	mov	r2, #141	; 0x8d
   19b44:	bl	14014 <__assert_fail@plt>
   19b48:	andeq	r7, r4, r0, ror lr
   19b4c:	andeq	r7, r4, ip, asr lr
   19b50:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19b54:	mov	r2, #220	; 0xdc
   19b58:	mov	r4, r1
   19b5c:	strd	r6, [sp, #8]
   19b60:	mov	r1, #0
   19b64:	mov	r5, r0
   19b68:	strd	r8, [sp, #16]
   19b6c:	strd	sl, [sp, #24]
   19b70:	str	lr, [sp, #32]
   19b74:	sub	sp, sp, #636	; 0x27c
   19b78:	add	fp, sp, #192	; 0xc0
   19b7c:	add	sl, sp, #412	; 0x19c
   19b80:	mov	r0, fp
   19b84:	bl	13f78 <memset@plt>
   19b88:	mov	r2, #220	; 0xdc
   19b8c:	mov	r1, #0
   19b90:	mov	r0, sl
   19b94:	bl	13f78 <memset@plt>
   19b98:	mov	r1, r4
   19b9c:	mov	r2, fp
   19ba0:	ldr	r0, [r4, #12]
   19ba4:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   19ba8:	ldr	r4, [r4, #20]
   19bac:	cmp	r4, #0
   19bb0:	beq	19ccc <__flatcc_gen_sort@@Base+0x8b8>
   19bb4:	movw	r3, #34028	; 0x84ec
   19bb8:	movt	r3, #4
   19bbc:	str	r3, [sp, #76]	; 0x4c
   19bc0:	movw	r3, #33968	; 0x84b0
   19bc4:	movt	r3, #4
   19bc8:	str	r3, [sp, #80]	; 0x50
   19bcc:	movw	r3, #33912	; 0x8478
   19bd0:	movt	r3, #4
   19bd4:	str	r3, [sp, #84]	; 0x54
   19bd8:	ldrh	r2, [r4, #72]	; 0x48
   19bdc:	ldr	r3, [r4, #4]
   19be0:	tst	r2, #4
   19be4:	ldrd	r6, [r3]
   19be8:	bne	1a17c <__flatcc_gen_sort@@Base+0xd68>
   19bec:	ldrh	r3, [r4, #24]
   19bf0:	sub	r3, r3, #7
   19bf4:	cmp	r3, #8
   19bf8:	ldrls	pc, [pc, r3, lsl #2]
   19bfc:	b	1a488 <__flatcc_gen_sort@@Base+0x1074>
   19c00:	andeq	r9, r1, r8, ror #26
   19c04:	andeq	r9, r1, r8, lsl #26
   19c08:	strdeq	r9, [r1], -r8
   19c0c:	muleq	r1, r4, ip
   19c10:	andeq	sl, r1, r8, lsl #9
   19c14:	andeq	sl, r1, r8, lsl #9
   19c18:	andeq	sl, r1, r8, lsl #9
   19c1c:	andeq	r9, r1, ip, asr ip
   19c20:	andeq	r9, r1, r4, lsr #24
   19c24:	ldr	r1, [r4, #16]
   19c28:	mov	r2, sl
   19c2c:	ldr	r0, [r1, #12]
   19c30:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   19c34:	ldr	r2, [r4, #16]
   19c38:	ldrh	r3, [r2, #8]
   19c3c:	cmp	r3, #4
   19c40:	ldrls	pc, [pc, r3, lsl #2]
   19c44:	b	1a56c <__flatcc_gen_sort@@Base+0x1158>
   19c48:	ldrdeq	r9, [r1], -r8
   19c4c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   19c50:	andeq	sl, r1, ip, ror #10
   19c54:	andeq	r9, r1, r8, lsl #29
   19c58:	andeq	r9, r1, r4, lsr lr
   19c5c:	ldr	r1, [r4, #16]
   19c60:	mov	r2, sl
   19c64:	ldr	r0, [r1, #12]
   19c68:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   19c6c:	ldr	r2, [r4, #16]
   19c70:	ldrh	r3, [r2, #8]
   19c74:	cmp	r3, #4
   19c78:	ldrls	pc, [pc, r3, lsl #2]
   19c7c:	b	1a520 <__flatcc_gen_sort@@Base+0x110c>
   19c80:	andeq	r9, r1, r0, ror #30
   19c84:	andeq	r9, r1, ip, lsl pc
   19c88:	andeq	sl, r1, r0, lsr #10
   19c8c:	strdeq	r9, [r1], -r4
   19c90:			; <UNDEFINED> instruction: 0x00019ebc
   19c94:	movw	r1, #33496	; 0x82d8
   19c98:	movt	r1, #4
   19c9c:	str	r5, [sp, #8]
   19ca0:	str	fp, [sp, #12]
   19ca4:	mov	r2, r5
   19ca8:	str	r7, [sp, #16]
   19cac:	str	r6, [sp, #20]
   19cb0:	ldrd	r6, [r4, #96]	; 0x60
   19cb4:	ldr	r0, [r5, #204]	; 0xcc
   19cb8:	strd	r6, [sp]
   19cbc:	bl	13f60 <fprintf@plt>
   19cc0:	ldr	r4, [r4]
   19cc4:	cmp	r4, #0
   19cc8:	bne	19bd8 <__flatcc_gen_sort@@Base+0x7c4>
   19ccc:	ldr	r1, [r5, #204]	; 0xcc
   19cd0:	mov	r0, #10
   19cd4:	bl	13fc0 <fputc@plt>
   19cd8:	mov	r0, #0
   19cdc:	add	sp, sp, #636	; 0x27c
   19ce0:	ldrd	r4, [sp]
   19ce4:	ldrd	r6, [sp, #8]
   19ce8:	ldrd	r8, [sp, #16]
   19cec:	ldrd	sl, [sp, #24]
   19cf0:	add	sp, sp, #32
   19cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   19cf8:	movw	r1, #33540	; 0x8304
   19cfc:	movt	r1, #4
   19d00:	str	r5, [sp, #8]
   19d04:	b	19ca0 <__flatcc_gen_sort@@Base+0x88c>
   19d08:	ldr	r1, [r4, #16]
   19d0c:	cmp	r1, #5
   19d10:	beq	1a1fc <__flatcc_gen_sort@@Base+0xde8>
   19d14:	sub	r0, r1, #1
   19d18:	cmp	r0, #10
   19d1c:	bhi	1a4d4 <__flatcc_gen_sort@@Base+0x10c0>
   19d20:	lsl	r3, r0, #2
   19d24:	movw	ip, #32272	; 0x7e10
   19d28:	movt	ip, #4
   19d2c:	ldrh	r2, [r4, #56]	; 0x38
   19d30:	str	ip, [sp, #60]	; 0x3c
   19d34:	add	ip, ip, r3
   19d38:	ldr	lr, [ip, #32]
   19d3c:	ldr	ip, [ip, #120]	; 0x78
   19d40:	sub	r2, r2, #3
   19d44:	str	lr, [sp, #64]	; 0x40
   19d48:	str	ip, [sp, #68]	; 0x44
   19d4c:	cmp	r2, #3
   19d50:	ldrls	pc, [pc, r2, lsl #2]
   19d54:	b	1a60c <__flatcc_gen_sort@@Base+0x11f8>
   19d58:	andeq	sl, r1, ip, lsr r1
   19d5c:	strdeq	sl, [r1], -r8
   19d60:	strheq	sl, [r1], -r4
   19d64:	andeq	sl, r1, r4, lsl r0
   19d68:	ldr	r3, [r4, #16]
   19d6c:	cmp	r3, #5
   19d70:	beq	1a1f0 <__flatcc_gen_sort@@Base+0xddc>
   19d74:	sub	r3, r3, #1
   19d78:	cmp	r3, #10
   19d7c:	bhi	1a4d4 <__flatcc_gen_sort@@Base+0x10c0>
   19d80:	movw	r0, #39472	; 0x9a30
   19d84:	movt	r0, #4
   19d88:	movw	r2, #32272	; 0x7e10
   19d8c:	movt	r2, #4
   19d90:	str	r5, [sp, #8]
   19d94:	add	r3, r2, r3, lsl #2
   19d98:	str	fp, [sp, #12]
   19d9c:	movw	r1, #33228	; 0x81cc
   19da0:	movt	r1, #4
   19da4:	str	r7, [sp, #16]
   19da8:	ldr	ip, [r3, #32]
   19dac:	str	r6, [sp, #20]
   19db0:	ldr	r3, [r3, #120]	; 0x78
   19db4:	str	r5, [sp, #24]
   19db8:	str	r2, [sp, #60]	; 0x3c
   19dbc:	mov	r2, r5
   19dc0:	str	r3, [sp, #28]
   19dc4:	str	r0, [sp, #32]
   19dc8:	str	ip, [sp, #36]	; 0x24
   19dcc:	ldrd	r8, [r4, #96]	; 0x60
   19dd0:	ldr	r0, [r5, #204]	; 0xcc
   19dd4:	strd	r8, [sp]
   19dd8:	bl	13f60 <fprintf@plt>
   19ddc:	ldr	r1, [r4, #104]	; 0x68
   19de0:	cmp	r1, #0
   19de4:	beq	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   19de8:	ldrh	r3, [r1, #8]
   19dec:	cmp	r3, #0
   19df0:	bne	1a19c <__flatcc_gen_sort@@Base+0xd88>
   19df4:	mov	r2, sl
   19df8:	ldr	r0, [r1, #12]
   19dfc:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   19e00:	movw	r1, #33284	; 0x8204
   19e04:	movt	r1, #4
   19e08:	str	fp, [sp]
   19e0c:	mov	r3, r5
   19e10:	mov	r2, r5
   19e14:	str	r7, [sp, #4]
   19e18:	str	r6, [sp, #8]
   19e1c:	str	sl, [sp, #12]
   19e20:	str	sl, [sp, #16]
   19e24:	str	sl, [sp, #20]
   19e28:	ldr	r0, [r5, #204]	; 0xcc
   19e2c:	bl	13f60 <fprintf@plt>
   19e30:	b	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   19e34:	str	r5, [sp, #8]
   19e38:	mov	r2, r5
   19e3c:	str	fp, [sp, #12]
   19e40:	str	r7, [sp, #16]
   19e44:	str	r6, [sp, #20]
   19e48:	str	sl, [sp, #24]
   19e4c:	ldrd	r8, [r4, #96]	; 0x60
   19e50:	ldr	r1, [sp, #76]	; 0x4c
   19e54:	ldr	r0, [r5, #204]	; 0xcc
   19e58:	strd	r8, [sp]
   19e5c:	bl	13f60 <fprintf@plt>
   19e60:	mov	r0, #1
   19e64:	str	r0, [sp, #4]
   19e68:	mov	r3, r6
   19e6c:	mov	r2, r7
   19e70:	ldr	ip, [r4, #16]
   19e74:	mov	r1, fp
   19e78:	mov	r0, r5
   19e7c:	str	ip, [sp]
   19e80:	bl	1954c <__flatcc_gen_sort@@Base+0x138>
   19e84:	b	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   19e88:	str	r5, [sp, #8]
   19e8c:	mov	r2, r5
   19e90:	str	fp, [sp, #12]
   19e94:	str	r7, [sp, #16]
   19e98:	str	r6, [sp, #20]
   19e9c:	str	sl, [sp, #24]
   19ea0:	str	sl, [sp, #28]
   19ea4:	ldrd	r6, [r4, #96]	; 0x60
   19ea8:	ldr	r1, [sp, #80]	; 0x50
   19eac:	ldr	r0, [r5, #204]	; 0xcc
   19eb0:	strd	r6, [sp]
   19eb4:	bl	13f60 <fprintf@plt>
   19eb8:	b	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   19ebc:	str	r5, [sp, #8]
   19ec0:	movw	r1, #33772	; 0x83ec
   19ec4:	movt	r1, #4
   19ec8:	str	fp, [sp, #12]
   19ecc:	mov	r2, r5
   19ed0:	str	r7, [sp, #16]
   19ed4:	str	r6, [sp, #20]
   19ed8:	str	sl, [sp, #24]
   19edc:	ldrd	r8, [r4, #96]	; 0x60
   19ee0:	ldr	r0, [r5, #204]	; 0xcc
   19ee4:	strd	r8, [sp]
   19ee8:	bl	13f60 <fprintf@plt>
   19eec:	mov	r0, #0
   19ef0:	b	19e64 <__flatcc_gen_sort@@Base+0xa50>
   19ef4:	ldrh	r1, [r4, #56]	; 0x38
   19ef8:	ldr	r3, [r2, #40]	; 0x28
   19efc:	sub	r2, r1, #3
   19f00:	cmp	r2, #3
   19f04:	ldrls	pc, [pc, r2, lsl #2]
   19f08:	b	1a60c <__flatcc_gen_sort@@Base+0x11f8>
   19f0c:	andeq	sl, r1, r4, lsr r4
   19f10:	andeq	sl, r1, r8, lsl #8
   19f14:	andeq	sl, r1, r8, asr #7
   19f18:	andeq	sl, r1, ip, lsr r3
   19f1c:	ldrh	r3, [r4, #74]	; 0x4a
   19f20:	movw	r1, #33592	; 0x8338
   19f24:	movt	r1, #4
   19f28:	mov	r2, r5
   19f2c:	ldr	r0, [r5, #204]	; 0xcc
   19f30:	str	r3, [sp, #40]	; 0x28
   19f34:	ldrd	r8, [r4, #88]	; 0x58
   19f38:	str	r5, [sp, #8]
   19f3c:	str	fp, [sp, #12]
   19f40:	str	r7, [sp, #16]
   19f44:	str	r6, [sp, #20]
   19f48:	str	sl, [sp, #24]
   19f4c:	strd	r8, [sp, #32]
   19f50:	ldrd	r6, [r4, #96]	; 0x60
   19f54:	strd	r6, [sp]
   19f58:	bl	13f60 <fprintf@plt>
   19f5c:	b	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   19f60:	str	r5, [sp, #8]
   19f64:	movw	r1, #33652	; 0x8374
   19f68:	movt	r1, #4
   19f6c:	str	fp, [sp, #12]
   19f70:	mov	r2, r5
   19f74:	str	r7, [sp, #16]
   19f78:	str	r6, [sp, #20]
   19f7c:	str	sl, [sp, #24]
   19f80:	ldrd	r6, [r4, #96]	; 0x60
   19f84:	ldr	r0, [r5, #204]	; 0xcc
   19f88:	strd	r6, [sp]
   19f8c:	bl	13f60 <fprintf@plt>
   19f90:	b	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   19f94:	ldrh	r3, [r2, #10]
   19f98:	ldr	r0, [r5, #204]	; 0xcc
   19f9c:	tst	r3, #8
   19fa0:	bne	1a30c <__flatcc_gen_sort@@Base+0xef8>
   19fa4:	str	r5, [sp, #8]
   19fa8:	movw	r1, #33856	; 0x8440
   19fac:	movt	r1, #4
   19fb0:	str	fp, [sp, #12]
   19fb4:	mov	r2, r5
   19fb8:	str	r7, [sp, #16]
   19fbc:	str	r6, [sp, #20]
   19fc0:	str	sl, [sp, #24]
   19fc4:	str	sl, [sp, #28]
   19fc8:	ldrd	r6, [r4, #96]	; 0x60
   19fcc:	strd	r6, [sp]
   19fd0:	bl	13f60 <fprintf@plt>
   19fd4:	b	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   19fd8:	ldrh	r3, [r2, #10]
   19fdc:	ldr	r0, [r5, #204]	; 0xcc
   19fe0:	tst	r3, #8
   19fe4:	bne	1a2ec <__flatcc_gen_sort@@Base+0xed8>
   19fe8:	str	r5, [sp, #8]
   19fec:	mov	r2, r5
   19ff0:	str	fp, [sp, #12]
   19ff4:	str	r7, [sp, #16]
   19ff8:	str	r6, [sp, #20]
   19ffc:	str	sl, [sp, #24]
   1a000:	ldrd	r6, [r4, #96]	; 0x60
   1a004:	ldr	r1, [sp, #84]	; 0x54
   1a008:	strd	r6, [sp]
   1a00c:	bl	13f60 <fprintf@plt>
   1a010:	b	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   1a014:	movw	r2, #39472	; 0x9a30
   1a018:	movt	r2, #4
   1a01c:	cmp	r0, #8
   1a020:	str	r2, [sp, #72]	; 0x48
   1a024:	bhi	1a608 <__flatcc_gen_sort@@Base+0x11f4>
   1a028:	ldr	r2, [sp, #60]	; 0x3c
   1a02c:	movw	r1, #64864	; 0xfd60
   1a030:	movt	r1, #3
   1a034:	add	r2, r2, r3
   1a038:	add	r3, sp, #92	; 0x5c
   1a03c:	mov	r0, r3
   1a040:	ldrb	r3, [r4, #48]	; 0x30
   1a044:	ldr	r2, [r2, #164]	; 0xa4
   1a048:	str	r0, [sp, #60]	; 0x3c
   1a04c:	bl	13fcc <sprintf@plt>
   1a050:	ldr	r3, [sp, #60]	; 0x3c
   1a054:	movw	r1, #33156	; 0x8184
   1a058:	movt	r1, #4
   1a05c:	mov	r2, r5
   1a060:	str	r3, [sp, #52]	; 0x34
   1a064:	ldrh	r3, [r4, #74]	; 0x4a
   1a068:	ldr	r0, [r5, #204]	; 0xcc
   1a06c:	str	r3, [sp, #48]	; 0x30
   1a070:	ldr	r3, [sp, #68]	; 0x44
   1a074:	ldrd	r8, [r4, #88]	; 0x58
   1a078:	str	r5, [sp, #8]
   1a07c:	str	fp, [sp, #12]
   1a080:	str	r7, [sp, #16]
   1a084:	str	r3, [sp, #28]
   1a088:	ldr	r3, [sp, #72]	; 0x48
   1a08c:	str	r6, [sp, #20]
   1a090:	str	r5, [sp, #24]
   1a094:	str	r3, [sp, #32]
   1a098:	ldr	r3, [sp, #64]	; 0x40
   1a09c:	strd	r8, [sp, #40]	; 0x28
   1a0a0:	str	r3, [sp, #36]	; 0x24
   1a0a4:	ldrd	r6, [r4, #96]	; 0x60
   1a0a8:	strd	r6, [sp]
   1a0ac:	bl	13f60 <fprintf@plt>
   1a0b0:	b	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   1a0b4:	cmp	r0, #8
   1a0b8:	bhi	1a608 <__flatcc_gen_sort@@Base+0x11f4>
   1a0bc:	movw	r2, #39472	; 0x9a30
   1a0c0:	movt	r2, #4
   1a0c4:	str	r2, [sp, #72]	; 0x48
   1a0c8:	ldr	r2, [sp, #60]	; 0x3c
   1a0cc:	movw	r1, #64840	; 0xfd48
   1a0d0:	movt	r1, #3
   1a0d4:	ldrd	r8, [r4, #48]	; 0x30
   1a0d8:	add	r3, r2, r3
   1a0dc:	add	r2, sp, #92	; 0x5c
   1a0e0:	mov	r0, r2
   1a0e4:	strd	r8, [sp]
   1a0e8:	str	r2, [sp, #60]	; 0x3c
   1a0ec:	ldr	r2, [r3, #164]	; 0xa4
   1a0f0:	bl	13fcc <sprintf@plt>
   1a0f4:	b	1a050 <__flatcc_gen_sort@@Base+0xc3c>
   1a0f8:	movw	r2, #39472	; 0x9a30
   1a0fc:	movt	r2, #4
   1a100:	cmp	r0, #8
   1a104:	str	r2, [sp, #72]	; 0x48
   1a108:	bhi	1a608 <__flatcc_gen_sort@@Base+0x11f4>
   1a10c:	ldr	r2, [sp, #60]	; 0x3c
   1a110:	movw	r1, #64852	; 0xfd54
   1a114:	movt	r1, #3
   1a118:	ldrd	r8, [r4, #48]	; 0x30
   1a11c:	add	r3, r2, r3
   1a120:	add	r2, sp, #92	; 0x5c
   1a124:	mov	r0, r2
   1a128:	strd	r8, [sp]
   1a12c:	str	r2, [sp, #60]	; 0x3c
   1a130:	ldr	r2, [r3, #164]	; 0xa4
   1a134:	bl	13fcc <sprintf@plt>
   1a138:	b	1a050 <__flatcc_gen_sort@@Base+0xc3c>
   1a13c:	cmp	r1, #11
   1a140:	bne	1a32c <__flatcc_gen_sort@@Base+0xf18>
   1a144:	vldr	d7, [r4, #48]	; 0x30
   1a148:	add	r3, sp, #92	; 0x5c
   1a14c:	movw	r1, #64872	; 0xfd68
   1a150:	movt	r1, #3
   1a154:	mov	r0, r3
   1a158:	str	r3, [sp, #60]	; 0x3c
   1a15c:	movw	r3, #39472	; 0x9a30
   1a160:	movt	r3, #4
   1a164:	str	r3, [sp, #72]	; 0x48
   1a168:	vcvt.f32.f64	s14, d7
   1a16c:	vcvt.f64.f32	d7, s14
   1a170:	vmov	r2, r3, d7
   1a174:	bl	13fcc <sprintf@plt>
   1a178:	b	1a050 <__flatcc_gen_sort@@Base+0xc3c>
   1a17c:	mov	r3, r7
   1a180:	movw	r1, #33100	; 0x814c
   1a184:	movt	r1, #4
   1a188:	mov	r2, fp
   1a18c:	str	r6, [sp]
   1a190:	ldr	r0, [r5, #204]	; 0xcc
   1a194:	bl	13f60 <fprintf@plt>
   1a198:	b	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   1a19c:	cmp	r3, #1
   1a1a0:	bne	1a5b8 <__flatcc_gen_sort@@Base+0x11a4>
   1a1a4:	mov	r2, sl
   1a1a8:	ldr	r0, [r1, #12]
   1a1ac:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1a1b0:	str	sl, [sp, #20]
   1a1b4:	movw	r1, #33368	; 0x8258
   1a1b8:	movt	r1, #4
   1a1bc:	str	sl, [sp, #24]
   1a1c0:	mov	r3, r5
   1a1c4:	mov	r2, r5
   1a1c8:	ldr	ip, [r4, #104]	; 0x68
   1a1cc:	ldr	r0, [r5, #204]	; 0xcc
   1a1d0:	ldrh	ip, [ip, #104]	; 0x68
   1a1d4:	str	fp, [sp]
   1a1d8:	str	r7, [sp, #4]
   1a1dc:	str	r6, [sp, #8]
   1a1e0:	str	sl, [sp, #12]
   1a1e4:	str	ip, [sp, #16]
   1a1e8:	bl	13f60 <fprintf@plt>
   1a1ec:	b	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   1a1f0:	mov	r0, r5
   1a1f4:	mov	r3, #4
   1a1f8:	b	19d88 <__flatcc_gen_sort@@Base+0x974>
   1a1fc:	ldrh	r3, [r4, #56]	; 0x38
   1a200:	sub	r3, r3, #3
   1a204:	cmp	r3, #3
   1a208:	ldrls	pc, [pc, r3, lsl #2]
   1a20c:	b	1a60c <__flatcc_gen_sort@@Base+0x11f8>
   1a210:			; <UNDEFINED> instruction: 0x0001a2b0
   1a214:	andeq	sl, r1, r0, lsl #5
   1a218:	andeq	sl, r1, r0, asr r2
   1a21c:	andeq	sl, r1, r0, lsr #4
   1a220:	movw	r3, #1940	; 0x794
   1a224:	movt	r3, #4
   1a228:	str	r3, [sp, #64]	; 0x40
   1a22c:	movw	r3, #31244	; 0x7a0c
   1a230:	movt	r3, #5
   1a234:	str	r5, [sp, #72]	; 0x48
   1a238:	str	r3, [sp, #68]	; 0x44
   1a23c:	movw	r3, #32272	; 0x7e10
   1a240:	movt	r3, #4
   1a244:	str	r3, [sp, #60]	; 0x3c
   1a248:	mov	r3, #16
   1a24c:	b	1a028 <__flatcc_gen_sort@@Base+0xc14>
   1a250:	movw	r3, #31244	; 0x7a0c
   1a254:	movt	r3, #5
   1a258:	str	r3, [sp, #68]	; 0x44
   1a25c:	movw	r3, #1940	; 0x794
   1a260:	movt	r3, #4
   1a264:	str	r5, [sp, #72]	; 0x48
   1a268:	str	r3, [sp, #64]	; 0x40
   1a26c:	movw	r3, #32272	; 0x7e10
   1a270:	movt	r3, #4
   1a274:	str	r3, [sp, #60]	; 0x3c
   1a278:	mov	r3, #16
   1a27c:	b	1a0c8 <__flatcc_gen_sort@@Base+0xcb4>
   1a280:	movw	r3, #1940	; 0x794
   1a284:	movt	r3, #4
   1a288:	str	r3, [sp, #64]	; 0x40
   1a28c:	movw	r3, #31244	; 0x7a0c
   1a290:	movt	r3, #5
   1a294:	str	r5, [sp, #72]	; 0x48
   1a298:	str	r3, [sp, #68]	; 0x44
   1a29c:	movw	r3, #32272	; 0x7e10
   1a2a0:	movt	r3, #4
   1a2a4:	str	r3, [sp, #60]	; 0x3c
   1a2a8:	mov	r3, #16
   1a2ac:	b	1a10c <__flatcc_gen_sort@@Base+0xcf8>
   1a2b0:	movw	r3, #1940	; 0x794
   1a2b4:	movt	r3, #4
   1a2b8:	str	r3, [sp, #64]	; 0x40
   1a2bc:	movw	r3, #31244	; 0x7a0c
   1a2c0:	movt	r3, #5
   1a2c4:	str	r5, [sp, #72]	; 0x48
   1a2c8:	str	r3, [sp, #68]	; 0x44
   1a2cc:	add	r3, sp, #92	; 0x5c
   1a2d0:	movw	r1, #64876	; 0xfd6c
   1a2d4:	movt	r1, #3
   1a2d8:	mov	r0, r3
   1a2dc:	str	r3, [sp, #60]	; 0x3c
   1a2e0:	ldrd	r2, [r4, #48]	; 0x30
   1a2e4:	bl	13fcc <sprintf@plt>
   1a2e8:	b	1a050 <__flatcc_gen_sort@@Base+0xc3c>
   1a2ec:	mov	r3, r0
   1a2f0:	mov	r2, #32
   1a2f4:	movw	r0, #33820	; 0x841c
   1a2f8:	movt	r0, #4
   1a2fc:	mov	r1, #1
   1a300:	bl	13ef4 <fwrite@plt>
   1a304:	ldr	r0, [r5, #204]	; 0xcc
   1a308:	b	19fe8 <__flatcc_gen_sort@@Base+0xbd4>
   1a30c:	mov	r3, r0
   1a310:	mov	r2, #32
   1a314:	movw	r0, #33820	; 0x841c
   1a318:	movt	r0, #4
   1a31c:	mov	r1, #1
   1a320:	bl	13ef4 <fwrite@plt>
   1a324:	ldr	r0, [r5, #204]	; 0xcc
   1a328:	b	19fa4 <__flatcc_gen_sort@@Base+0xb90>
   1a32c:	movw	r3, #39472	; 0x9a30
   1a330:	movt	r3, #4
   1a334:	str	r3, [sp, #72]	; 0x48
   1a338:	b	1a2cc <__flatcc_gen_sort@@Base+0xeb8>
   1a33c:	sub	r2, r3, #1
   1a340:	cmp	r2, #8
   1a344:	bhi	1a608 <__flatcc_gen_sort@@Base+0x11f4>
   1a348:	movw	r3, #32272	; 0x7e10
   1a34c:	movt	r3, #4
   1a350:	mov	r1, r3
   1a354:	ldrb	r3, [r4, #48]	; 0x30
   1a358:	add	r2, r1, r2, lsl #2
   1a35c:	add	r1, sp, #92	; 0x5c
   1a360:	mov	r0, r1
   1a364:	movw	r1, #64864	; 0xfd60
   1a368:	movt	r1, #3
   1a36c:	ldr	r2, [r2, #164]	; 0xa4
   1a370:	str	r0, [sp, #60]	; 0x3c
   1a374:	bl	13fcc <sprintf@plt>
   1a378:	ldr	r3, [sp, #60]	; 0x3c
   1a37c:	movw	r1, #33700	; 0x83a4
   1a380:	movt	r1, #4
   1a384:	mov	r2, r5
   1a388:	str	r3, [sp, #44]	; 0x2c
   1a38c:	ldrh	r3, [r4, #74]	; 0x4a
   1a390:	ldr	r0, [r5, #204]	; 0xcc
   1a394:	str	r3, [sp, #40]	; 0x28
   1a398:	ldrd	r8, [r4, #88]	; 0x58
   1a39c:	str	r5, [sp, #8]
   1a3a0:	str	fp, [sp, #12]
   1a3a4:	str	r7, [sp, #16]
   1a3a8:	str	r6, [sp, #20]
   1a3ac:	str	sl, [sp, #24]
   1a3b0:	str	sl, [sp, #28]
   1a3b4:	strd	r8, [sp, #32]
   1a3b8:	ldrd	r6, [r4, #96]	; 0x60
   1a3bc:	strd	r6, [sp]
   1a3c0:	bl	13f60 <fprintf@plt>
   1a3c4:	b	19cc0 <__flatcc_gen_sort@@Base+0x8ac>
   1a3c8:	sub	r3, r3, #1
   1a3cc:	cmp	r3, #8
   1a3d0:	bhi	1a608 <__flatcc_gen_sort@@Base+0x11f4>
   1a3d4:	movw	r2, #32272	; 0x7e10
   1a3d8:	movt	r2, #4
   1a3dc:	add	r3, r2, r3, lsl #2
   1a3e0:	movw	r1, #64840	; 0xfd48
   1a3e4:	movt	r1, #3
   1a3e8:	add	r2, sp, #92	; 0x5c
   1a3ec:	str	r2, [sp, #60]	; 0x3c
   1a3f0:	ldrd	r8, [r4, #48]	; 0x30
   1a3f4:	mov	r0, r2
   1a3f8:	ldr	r2, [r3, #164]	; 0xa4
   1a3fc:	strd	r8, [sp]
   1a400:	bl	13fcc <sprintf@plt>
   1a404:	b	1a378 <__flatcc_gen_sort@@Base+0xf64>
   1a408:	sub	r3, r3, #1
   1a40c:	cmp	r3, #8
   1a410:	bhi	1a608 <__flatcc_gen_sort@@Base+0x11f4>
   1a414:	movw	r2, #32272	; 0x7e10
   1a418:	movt	r2, #4
   1a41c:	add	r3, r2, r3, lsl #2
   1a420:	add	r2, sp, #92	; 0x5c
   1a424:	movw	r1, #64852	; 0xfd54
   1a428:	movt	r1, #3
   1a42c:	str	r2, [sp, #60]	; 0x3c
   1a430:	b	1a3f0 <__flatcc_gen_sort@@Base+0xfdc>
   1a434:	cmp	r3, #11
   1a438:	beq	1a45c <__flatcc_gen_sort@@Base+0x1048>
   1a43c:	add	r3, sp, #92	; 0x5c
   1a440:	movw	r1, #64876	; 0xfd6c
   1a444:	movt	r1, #3
   1a448:	mov	r0, r3
   1a44c:	str	r3, [sp, #60]	; 0x3c
   1a450:	ldrd	r2, [r4, #48]	; 0x30
   1a454:	bl	13fcc <sprintf@plt>
   1a458:	b	1a378 <__flatcc_gen_sort@@Base+0xf64>
   1a45c:	vldr	d7, [r4, #48]	; 0x30
   1a460:	add	r3, sp, #92	; 0x5c
   1a464:	movw	r1, #64872	; 0xfd68
   1a468:	movt	r1, #3
   1a46c:	mov	r0, r3
   1a470:	str	r3, [sp, #60]	; 0x3c
   1a474:	vcvt.f32.f64	s14, d7
   1a478:	vcvt.f64.f32	d7, s14
   1a47c:	vmov	r2, r3, d7
   1a480:	bl	13fcc <sprintf@plt>
   1a484:	b	1a378 <__flatcc_gen_sort@@Base+0xf64>
   1a488:	movw	r1, #3488	; 0xda0
   1a48c:	movt	r1, #4
   1a490:	movw	r3, #41128	; 0xa0a8
   1a494:	movt	r3, #6
   1a498:	movw	r2, #32768	; 0x8000
   1a49c:	movt	r2, #4
   1a4a0:	str	r1, [sp]
   1a4a4:	movw	r1, #64544	; 0xfc20
   1a4a8:	movt	r1, #3
   1a4ac:	ldr	r0, [r3]
   1a4b0:	movw	r3, #1512	; 0x5e8
   1a4b4:	bl	13f60 <fprintf@plt>
   1a4b8:	movw	r1, #32768	; 0x8000
   1a4bc:	movt	r1, #4
   1a4c0:	ldr	r3, [pc, #400]	; 1a658 <__flatcc_gen_sort@@Base+0x1244>
   1a4c4:	movw	r0, #35672	; 0x8b58
   1a4c8:	movt	r0, #4
   1a4cc:	movw	r2, #1512	; 0x5e8
   1a4d0:	bl	14014 <__assert_fail@plt>
   1a4d4:	movw	r1, #64556	; 0xfc2c
   1a4d8:	movt	r1, #3
   1a4dc:	movw	r3, #41128	; 0xa0a8
   1a4e0:	movt	r3, #6
   1a4e4:	movw	r2, #64468	; 0xfbd4
   1a4e8:	movt	r2, #3
   1a4ec:	str	r1, [sp]
   1a4f0:	movw	r1, #64544	; 0xfc20
   1a4f4:	movt	r1, #3
   1a4f8:	ldr	r0, [r3]
   1a4fc:	mov	r3, #141	; 0x8d
   1a500:	bl	13f60 <fprintf@plt>
   1a504:	movw	r1, #64468	; 0xfbd4
   1a508:	movt	r1, #3
   1a50c:	ldr	r3, [pc, #328]	; 1a65c <__flatcc_gen_sort@@Base+0x1248>
   1a510:	movw	r0, #35672	; 0x8b58
   1a514:	movt	r0, #4
   1a518:	mov	r2, #141	; 0x8d
   1a51c:	bl	14014 <__assert_fail@plt>
   1a520:	movw	r1, #3216	; 0xc90
   1a524:	movt	r1, #4
   1a528:	movw	r3, #41128	; 0xa0a8
   1a52c:	movt	r3, #6
   1a530:	movw	r2, #32768	; 0x8000
   1a534:	movt	r2, #4
   1a538:	str	r1, [sp]
   1a53c:	movw	r1, #64544	; 0xfc20
   1a540:	movt	r1, #3
   1a544:	ldr	r0, [r3]
   1a548:	mov	r3, #1472	; 0x5c0
   1a54c:	bl	13f60 <fprintf@plt>
   1a550:	movw	r1, #32768	; 0x8000
   1a554:	movt	r1, #4
   1a558:	ldr	r3, [pc, #248]	; 1a658 <__flatcc_gen_sort@@Base+0x1244>
   1a55c:	movw	r0, #35672	; 0x8b58
   1a560:	movt	r0, #4
   1a564:	mov	r2, #1472	; 0x5c0
   1a568:	bl	14014 <__assert_fail@plt>
   1a56c:	movw	r1, #3292	; 0xcdc
   1a570:	movt	r1, #4
   1a574:	movw	r3, #41128	; 0xa0a8
   1a578:	movt	r3, #6
   1a57c:	movw	r2, #32768	; 0x8000
   1a580:	movt	r2, #4
   1a584:	str	r1, [sp]
   1a588:	movw	r1, #64544	; 0xfc20
   1a58c:	movt	r1, #3
   1a590:	ldr	r0, [r3]
   1a594:	movw	r3, #1507	; 0x5e3
   1a598:	bl	13f60 <fprintf@plt>
   1a59c:	movw	r1, #32768	; 0x8000
   1a5a0:	movt	r1, #4
   1a5a4:	ldr	r3, [pc, #172]	; 1a658 <__flatcc_gen_sort@@Base+0x1244>
   1a5a8:	movw	r0, #35672	; 0x8b58
   1a5ac:	movt	r0, #4
   1a5b0:	movw	r2, #1507	; 0x5e3
   1a5b4:	bl	14014 <__assert_fail@plt>
   1a5b8:	ldr	r8, [sp, #60]	; 0x3c
   1a5bc:	movw	r1, #33456	; 0x82b0
   1a5c0:	movt	r1, #4
   1a5c4:	movw	r3, #41128	; 0xa0a8
   1a5c8:	movt	r3, #6
   1a5cc:	movw	r2, #32768	; 0x8000
   1a5d0:	movt	r2, #4
   1a5d4:	str	r1, [sp]
   1a5d8:	movw	r1, #64544	; 0xfc20
   1a5dc:	movt	r1, #3
   1a5e0:	ldr	r0, [r3]
   1a5e4:	movw	r3, #1430	; 0x596
   1a5e8:	bl	13f60 <fprintf@plt>
   1a5ec:	movw	r1, #32768	; 0x8000
   1a5f0:	movt	r1, #4
   1a5f4:	movw	r0, #35672	; 0x8b58
   1a5f8:	movt	r0, #4
   1a5fc:	add	r3, r8, #216	; 0xd8
   1a600:	movw	r2, #1430	; 0x596
   1a604:	bl	14014 <__assert_fail@plt>
   1a608:	bl	19810 <__flatcc_gen_sort@@Base+0x3fc>
   1a60c:	movw	r1, #64556	; 0xfc2c
   1a610:	movt	r1, #3
   1a614:	movw	r3, #41128	; 0xa0a8
   1a618:	movt	r3, #6
   1a61c:	movw	r2, #64468	; 0xfbd4
   1a620:	movt	r2, #3
   1a624:	str	r1, [sp]
   1a628:	movw	r1, #64544	; 0xfc20
   1a62c:	movt	r1, #3
   1a630:	ldr	r0, [r3]
   1a634:	mov	r3, #260	; 0x104
   1a638:	bl	13f60 <fprintf@plt>
   1a63c:	movw	r1, #64468	; 0xfbd4
   1a640:	movt	r1, #3
   1a644:	ldr	r3, [pc, #20]	; 1a660 <__flatcc_gen_sort@@Base+0x124c>
   1a648:	movw	r0, #35672	; 0x8b58
   1a64c:	movt	r0, #4
   1a650:	mov	r2, #260	; 0x104
   1a654:	bl	14014 <__assert_fail@plt>
   1a658:	andeq	r7, r4, r8, ror #29
   1a65c:	andeq	r7, r4, ip, asr lr
   1a660:	ldrdeq	r7, [r4], -r8
   1a664:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a668:	mov	r2, #220	; 0xdc
   1a66c:	mov	r4, r0
   1a670:	strd	r6, [sp, #8]
   1a674:	mov	r1, #0
   1a678:	strd	r8, [sp, #16]
   1a67c:	strd	sl, [sp, #24]
   1a680:	str	lr, [sp, #32]
   1a684:	sub	sp, sp, #508	; 0x1fc
   1a688:	add	fp, sp, #284	; 0x11c
   1a68c:	mov	r0, fp
   1a690:	bl	13f78 <memset@plt>
   1a694:	ldr	r3, [r4, #208]	; 0xd0
   1a698:	ldr	r5, [r3, #40]	; 0x28
   1a69c:	cmp	r5, #0
   1a6a0:	beq	1b008 <__flatcc_gen_sort@@Base+0x1bf4>
   1a6a4:	movw	r6, #34084	; 0x8524
   1a6a8:	movt	r6, #4
   1a6ac:	mov	r2, #0
   1a6b0:	ldrh	r3, [r5, #8]
   1a6b4:	cmp	r3, #4
   1a6b8:	beq	1b06c <__flatcc_gen_sort@@Base+0x1c58>
   1a6bc:	ldr	r5, [r5]
   1a6c0:	cmp	r5, #0
   1a6c4:	bne	1a6b0 <__flatcc_gen_sort@@Base+0x129c>
   1a6c8:	cmp	r2, #0
   1a6cc:	bne	1b358 <__flatcc_gen_sort@@Base+0x1f44>
   1a6d0:	ldr	r3, [r4, #208]	; 0xd0
   1a6d4:	ldr	r7, [r3, #40]	; 0x28
   1a6d8:	cmp	r7, #0
   1a6dc:	beq	1b008 <__flatcc_gen_sort@@Base+0x1bf4>
   1a6e0:	movw	r3, #34172	; 0x857c
   1a6e4:	movt	r3, #4
   1a6e8:	str	r3, [sp, #40]	; 0x28
   1a6ec:	movw	r3, #34240	; 0x85c0
   1a6f0:	movt	r3, #4
   1a6f4:	str	r3, [sp, #36]	; 0x24
   1a6f8:	movw	r3, #34232	; 0x85b8
   1a6fc:	movt	r3, #4
   1a700:	str	r3, [sp, #48]	; 0x30
   1a704:	mov	r3, #0
   1a708:	mov	r5, r3
   1a70c:	ldrh	r8, [r7, #8]
   1a710:	cmp	r8, #0
   1a714:	bne	1a88c <__flatcc_gen_sort@@Base+0x1478>
   1a718:	mov	r2, #220	; 0xdc
   1a71c:	mov	r1, r8
   1a720:	mov	r0, fp
   1a724:	bl	13f78 <memset@plt>
   1a728:	ldr	r6, [r7, #20]
   1a72c:	cmp	r6, #0
   1a730:	beq	1b0a8 <__flatcc_gen_sort@@Base+0x1c94>
   1a734:	ldrh	r3, [r6, #72]	; 0x48
   1a738:	ldr	r6, [r6]
   1a73c:	tst	r3, #4
   1a740:	addeq	r8, r8, #1
   1a744:	cmp	r6, #0
   1a748:	bne	1a734 <__flatcc_gen_sort@@Base+0x1320>
   1a74c:	mov	r2, fp
   1a750:	mov	r1, r7
   1a754:	ldr	r0, [r7, #12]
   1a758:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1a75c:	mov	r3, fp
   1a760:	mov	r2, r4
   1a764:	ldr	r1, [sp, #40]	; 0x28
   1a768:	ldr	r0, [r4, #204]	; 0xcc
   1a76c:	bl	13f60 <fprintf@plt>
   1a770:	ldr	r5, [r7, #20]
   1a774:	cmp	r5, #0
   1a778:	beq	1b0dc <__flatcc_gen_sort@@Base+0x1cc8>
   1a77c:	cmp	r8, #0
   1a780:	ldr	r3, [r4, #204]	; 0xcc
   1a784:	beq	1b0f4 <__flatcc_gen_sort@@Base+0x1ce0>
   1a788:	movw	r2, #33012	; 0x80f4
   1a78c:	movt	r2, #4
   1a790:	movw	sl, #4144	; 0x1030
   1a794:	movt	sl, #4
   1a798:	movw	r9, #33020	; 0x80fc
   1a79c:	movt	r9, #4
   1a7a0:	str	r2, [sp, #44]	; 0x2c
   1a7a4:	mov	r1, r3
   1a7a8:	b	1a7fc <__flatcc_gen_sort@@Base+0x13e8>
   1a7ac:	tst	r6, #3
   1a7b0:	bne	1a7c0 <__flatcc_gen_sort@@Base+0x13ac>
   1a7b4:	sub	r2, r8, r6
   1a7b8:	cmp	r2, #2
   1a7bc:	bgt	1b368 <__flatcc_gen_sort@@Base+0x1f54>
   1a7c0:	mov	r3, r1
   1a7c4:	mov	r2, #2
   1a7c8:	mov	r1, #1
   1a7cc:	mov	r0, r9
   1a7d0:	bl	13ef4 <fwrite@plt>
   1a7d4:	ldr	r0, [r4, #204]	; 0xcc
   1a7d8:	movw	r1, #34220	; 0x85ac
   1a7dc:	movt	r1, #4
   1a7e0:	ldr	r2, [r5, #96]	; 0x60
   1a7e4:	add	r6, r6, #1
   1a7e8:	bl	13f60 <fprintf@plt>
   1a7ec:	ldr	r1, [r4, #204]	; 0xcc
   1a7f0:	ldr	r5, [r5]
   1a7f4:	cmp	r5, #0
   1a7f8:	beq	1a828 <__flatcc_gen_sort@@Base+0x1414>
   1a7fc:	ldrh	r2, [r5, #72]	; 0x48
   1a800:	tst	r2, #4
   1a804:	bne	1a7f0 <__flatcc_gen_sort@@Base+0x13dc>
   1a808:	tst	r2, #256	; 0x100
   1a80c:	beq	1a7f0 <__flatcc_gen_sort@@Base+0x13dc>
   1a810:	cmp	r6, #0
   1a814:	bne	1a7ac <__flatcc_gen_sort@@Base+0x1398>
   1a818:	mov	r0, #32
   1a81c:	bl	13fc0 <fputc@plt>
   1a820:	ldr	r0, [r4, #204]	; 0xcc
   1a824:	b	1a7d8 <__flatcc_gen_sort@@Base+0x13c4>
   1a828:	mov	r3, r1
   1a82c:	cmp	r6, #0
   1a830:	beq	1b0e0 <__flatcc_gen_sort@@Base+0x1ccc>
   1a834:	movw	r0, #34224	; 0x85b0
   1a838:	movt	r0, #4
   1a83c:	mov	r2, #7
   1a840:	mov	r1, #1
   1a844:	bl	13ef4 <fwrite@plt>
   1a848:	mov	r2, #220	; 0xdc
   1a84c:	mov	r1, #0
   1a850:	mov	r0, fp
   1a854:	mov	r5, #1
   1a858:	bl	13f78 <memset@plt>
   1a85c:	mov	r2, fp
   1a860:	mov	r1, r7
   1a864:	ldr	r0, [r7, #12]
   1a868:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1a86c:	ldrd	r8, [r7, #96]	; 0x60
   1a870:	mov	r3, r4
   1a874:	mov	r2, r4
   1a878:	str	fp, [sp]
   1a87c:	ldr	r1, [sp, #36]	; 0x24
   1a880:	ldr	r0, [r4, #204]	; 0xcc
   1a884:	strd	r8, [sp, #8]
   1a888:	bl	13f60 <fprintf@plt>
   1a88c:	ldr	r7, [r7]
   1a890:	cmp	r7, #0
   1a894:	bne	1a70c <__flatcc_gen_sort@@Base+0x12f8>
   1a898:	ldr	r3, [r4, #208]	; 0xd0
   1a89c:	str	r5, [sp, #60]	; 0x3c
   1a8a0:	ldr	r7, [r3, #40]	; 0x28
   1a8a4:	cmp	r7, #0
   1a8a8:	beq	1b380 <__flatcc_gen_sort@@Base+0x1f6c>
   1a8ac:	movw	r3, #34272	; 0x85e0
   1a8b0:	movt	r3, #4
   1a8b4:	str	r3, [sp, #52]	; 0x34
   1a8b8:	movw	r3, #32272	; 0x7e10
   1a8bc:	movt	r3, #4
   1a8c0:	str	r3, [sp, #56]	; 0x38
   1a8c4:	ldrh	r6, [r7, #8]
   1a8c8:	cmp	r6, #0
   1a8cc:	bne	1ab94 <__flatcc_gen_sort@@Base+0x1780>
   1a8d0:	add	r3, sp, #64	; 0x40
   1a8d4:	mov	r2, #220	; 0xdc
   1a8d8:	mov	r5, r3
   1a8dc:	mov	r0, r3
   1a8e0:	mov	r1, r6
   1a8e4:	str	r3, [sp, #40]	; 0x28
   1a8e8:	bl	13f78 <memset@plt>
   1a8ec:	mov	r2, r5
   1a8f0:	mov	r1, r7
   1a8f4:	ldr	r0, [r7, #12]
   1a8f8:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1a8fc:	ldr	r3, [r7, #20]
   1a900:	cmp	r3, #0
   1a904:	beq	1b32c <__flatcc_gen_sort@@Base+0x1f18>
   1a908:	ldrh	r2, [r3, #72]	; 0x48
   1a90c:	ldr	r3, [r3]
   1a910:	tst	r2, #4
   1a914:	addeq	r6, r6, #1
   1a918:	cmp	r3, #0
   1a91c:	bne	1a908 <__flatcc_gen_sort@@Base+0x14f4>
   1a920:	ldr	r2, [sp, #40]	; 0x28
   1a924:	ldr	r1, [sp, #52]	; 0x34
   1a928:	ldr	r0, [r4, #204]	; 0xcc
   1a92c:	bl	13f60 <fprintf@plt>
   1a930:	mov	r2, #220	; 0xdc
   1a934:	mov	r1, #0
   1a938:	mov	r0, fp
   1a93c:	bl	13f78 <memset@plt>
   1a940:	ldr	r5, [r7, #20]
   1a944:	cmp	r5, #0
   1a948:	beq	1aaa4 <__flatcc_gen_sort@@Base+0x1690>
   1a94c:	ldrh	r3, [r5, #72]	; 0x48
   1a950:	movw	r9, #34568	; 0x8708
   1a954:	movt	r9, #4
   1a958:	movw	sl, #34592	; 0x8720
   1a95c:	movt	sl, #4
   1a960:	mov	r2, #0
   1a964:	str	r9, [sp, #44]	; 0x2c
   1a968:	str	r7, [sp, #48]	; 0x30
   1a96c:	ldr	r7, [sp, #56]	; 0x38
   1a970:	tst	r3, #4
   1a974:	bne	1aa90 <__flatcc_gen_sort@@Base+0x167c>
   1a978:	add	r3, r2, #1
   1a97c:	cmp	r6, #0
   1a980:	str	r3, [sp, #36]	; 0x24
   1a984:	beq	1a9b4 <__flatcc_gen_sort@@Base+0x15a0>
   1a988:	cmp	r2, #0
   1a98c:	ldr	r3, [r4, #204]	; 0xcc
   1a990:	bne	1ade8 <__flatcc_gen_sort@@Base+0x19d4>
   1a994:	cmp	r6, #4
   1a998:	ble	1adfc <__flatcc_gen_sort@@Base+0x19e8>
   1a99c:	movw	r2, #10104	; 0x2778
   1a9a0:	movt	r2, #4
   1a9a4:	movw	r1, #33012	; 0x80f4
   1a9a8:	movt	r1, #4
   1a9ac:	mov	r0, r3
   1a9b0:	bl	13f60 <fprintf@plt>
   1a9b4:	ldrh	r3, [r5, #24]
   1a9b8:	sub	r3, r3, #7
   1a9bc:	cmp	r3, #8
   1a9c0:	ldrls	pc, [pc, r3, lsl #2]
   1a9c4:	b	1b3a0 <__flatcc_gen_sort@@Base+0x1f8c>
   1a9c8:	andeq	sl, r1, r0, lsl sp
   1a9cc:	andeq	sl, r1, r8, asr #26
   1a9d0:	strdeq	sl, [r1], -r4
   1a9d4:	andeq	sl, r1, ip, asr sl
   1a9d8:	andeq	fp, r1, r0, lsr #7
   1a9dc:	andeq	fp, r1, r0, lsr #7
   1a9e0:	andeq	fp, r1, r0, lsr #7
   1a9e4:	andeq	sl, r1, r4, lsr #20
   1a9e8:	andeq	sl, r1, ip, ror #19
   1a9ec:	ldr	r1, [r5, #16]
   1a9f0:	mov	r2, fp
   1a9f4:	ldr	r0, [r1, #12]
   1a9f8:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1a9fc:	ldr	r3, [r5, #16]
   1aa00:	ldrh	r3, [r3, #8]
   1aa04:	cmp	r3, #4
   1aa08:	ldrls	pc, [pc, r3, lsl #2]
   1aa0c:	b	1b3ec <__flatcc_gen_sort@@Base+0x1fd8>
   1aa10:	andeq	sl, r1, ip, lsr #27
   1aa14:	andeq	sl, r1, ip, lsr #27
   1aa18:	andeq	fp, r1, ip, ror #7
   1aa1c:	andeq	sl, r1, ip, lsr #27
   1aa20:	andeq	sl, r1, ip, lsl #27
   1aa24:	ldr	r1, [r5, #16]
   1aa28:	mov	r2, fp
   1aa2c:	ldr	r0, [r1, #12]
   1aa30:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1aa34:	ldr	r3, [r5, #16]
   1aa38:	ldrh	r3, [r3, #8]
   1aa3c:	cmp	r3, #4
   1aa40:	ldrls	pc, [pc, r3, lsl #2]
   1aa44:	b	1b438 <__flatcc_gen_sort@@Base+0x2024>
   1aa48:	andeq	sl, r1, r4, asr #27
   1aa4c:			; <UNDEFINED> instruction: 0x0001adb8
   1aa50:	andeq	fp, r1, r8, lsr r4
   1aa54:	ldrdeq	sl, [r1], -ip
   1aa58:	ldrdeq	sl, [r1], -r0
   1aa5c:	ldrd	r8, [r5, #96]	; 0x60
   1aa60:	mov	r2, r4
   1aa64:	ldr	r1, [sp, #44]	; 0x2c
   1aa68:	ldr	r0, [r4, #204]	; 0xcc
   1aa6c:	strd	r8, [sp]
   1aa70:	bl	13f60 <fprintf@plt>
   1aa74:	ldr	r5, [r5]
   1aa78:	cmp	r5, #0
   1aa7c:	beq	1aaa0 <__flatcc_gen_sort@@Base+0x168c>
   1aa80:	ldrh	r3, [r5, #72]	; 0x48
   1aa84:	ldr	r2, [sp, #36]	; 0x24
   1aa88:	tst	r3, #4
   1aa8c:	beq	1a978 <__flatcc_gen_sort@@Base+0x1564>
   1aa90:	ldr	r5, [r5]
   1aa94:	str	r2, [sp, #36]	; 0x24
   1aa98:	cmp	r5, #0
   1aa9c:	bne	1aa80 <__flatcc_gen_sort@@Base+0x166c>
   1aaa0:	ldr	r7, [sp, #48]	; 0x30
   1aaa4:	movw	r1, #34300	; 0x85fc
   1aaa8:	movt	r1, #4
   1aaac:	ldr	r2, [sp, #40]	; 0x28
   1aab0:	ldr	r0, [r4, #204]	; 0xcc
   1aab4:	bl	13f60 <fprintf@plt>
   1aab8:	ldr	r5, [r7, #20]
   1aabc:	cmp	r5, #0
   1aac0:	beq	1b334 <__flatcc_gen_sort@@Base+0x1f20>
   1aac4:	cmp	r6, #0
   1aac8:	ldr	r0, [r4, #204]	; 0xcc
   1aacc:	movweq	r6, #34620	; 0x873c
   1aad0:	movteq	r6, #4
   1aad4:	beq	1b040 <__flatcc_gen_sort@@Base+0x1c2c>
   1aad8:	cmp	r6, #4
   1aadc:	bgt	1b158 <__flatcc_gen_sort@@Base+0x1d44>
   1aae0:	movw	r3, #10104	; 0x2778
   1aae4:	movt	r3, #4
   1aae8:	movw	r9, #34620	; 0x873c
   1aaec:	movt	r9, #4
   1aaf0:	movw	sl, #33020	; 0x80fc
   1aaf4:	movt	sl, #4
   1aaf8:	str	r3, [sp, #36]	; 0x24
   1aafc:	mov	r8, #0
   1ab00:	mov	r3, r0
   1ab04:	ldrh	r2, [r5, #72]	; 0x48
   1ab08:	tst	r2, #4
   1ab0c:	bne	1ab54 <__flatcc_gen_sort@@Base+0x1740>
   1ab10:	cmp	r8, #0
   1ab14:	beq	1ab2c <__flatcc_gen_sort@@Base+0x1718>
   1ab18:	tst	r8, #3
   1ab1c:	bne	1ab2c <__flatcc_gen_sort@@Base+0x1718>
   1ab20:	sub	r2, r6, r8
   1ab24:	cmp	r2, #3
   1ab28:	beq	1b33c <__flatcc_gen_sort@@Base+0x1f28>
   1ab2c:	mov	r2, #2
   1ab30:	mov	r1, #1
   1ab34:	mov	r0, sl
   1ab38:	bl	13ef4 <fwrite@plt>
   1ab3c:	ldr	r0, [r4, #204]	; 0xcc
   1ab40:	mov	r1, r9
   1ab44:	add	r8, r8, #1
   1ab48:	ldrd	r2, [r5, #96]	; 0x60
   1ab4c:	bl	13f60 <fprintf@plt>
   1ab50:	ldr	r3, [r4, #204]	; 0xcc
   1ab54:	ldr	r5, [r5]
   1ab58:	cmp	r5, #0
   1ab5c:	bne	1ab04 <__flatcc_gen_sort@@Base+0x16f0>
   1ab60:	mov	r0, r3
   1ab64:	mov	r1, r0
   1ab68:	mov	r0, #10
   1ab6c:	bl	13fc0 <fputc@plt>
   1ab70:	ldr	r0, [sp, #40]	; 0x28
   1ab74:	movw	r1, #34628	; 0x8744
   1ab78:	movt	r1, #4
   1ab7c:	str	r4, [sp]
   1ab80:	mov	r3, r0
   1ab84:	mov	r2, r0
   1ab88:	str	r0, [sp, #4]
   1ab8c:	ldr	r0, [r4, #204]	; 0xcc
   1ab90:	bl	13f60 <fprintf@plt>
   1ab94:	ldr	r7, [r7]
   1ab98:	cmp	r7, #0
   1ab9c:	bne	1a8c4 <__flatcc_gen_sort@@Base+0x14b0>
   1aba0:	ldr	r3, [sp, #60]	; 0x3c
   1aba4:	cmp	r3, #0
   1aba8:	bne	1b388 <__flatcc_gen_sort@@Base+0x1f74>
   1abac:	ldr	r3, [r4, #208]	; 0xd0
   1abb0:	ldr	r7, [r3, #40]	; 0x28
   1abb4:	cmp	r7, #0
   1abb8:	beq	1b008 <__flatcc_gen_sort@@Base+0x1bf4>
   1abbc:	movw	sl, #34860	; 0x882c
   1abc0:	movt	sl, #4
   1abc4:	movw	r9, #34728	; 0x87a8
   1abc8:	movt	r9, #4
   1abcc:	movw	r8, #35000	; 0x88b8
   1abd0:	movt	r8, #4
   1abd4:	mov	r2, #0
   1abd8:	b	1abe8 <__flatcc_gen_sort@@Base+0x17d4>
   1abdc:	ldr	r7, [r7]
   1abe0:	cmp	r7, #0
   1abe4:	beq	1ae88 <__flatcc_gen_sort@@Base+0x1a74>
   1abe8:	ldrh	r3, [r7, #8]
   1abec:	cmp	r3, #4
   1abf0:	bne	1abdc <__flatcc_gen_sort@@Base+0x17c8>
   1abf4:	add	r5, sp, #64	; 0x40
   1abf8:	mov	r2, #220	; 0xdc
   1abfc:	mov	r1, #0
   1ac00:	mov	r0, r5
   1ac04:	bl	13f78 <memset@plt>
   1ac08:	mov	r2, #220	; 0xdc
   1ac0c:	mov	r1, #0
   1ac10:	mov	r0, fp
   1ac14:	bl	13f78 <memset@plt>
   1ac18:	mov	r2, r5
   1ac1c:	mov	r1, r7
   1ac20:	ldr	r0, [r7, #12]
   1ac24:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1ac28:	ldr	r6, [r7, #20]
   1ac2c:	cmp	r6, #0
   1ac30:	bne	1ac8c <__flatcc_gen_sort@@Base+0x1878>
   1ac34:	b	1ae5c <__flatcc_gen_sort@@Base+0x1a48>
   1ac38:	ldr	r1, [r6, #16]
   1ac3c:	mov	r2, fp
   1ac40:	ldr	r0, [r1, #12]
   1ac44:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1ac48:	ldr	lr, [r6, #4]
   1ac4c:	mov	r3, r5
   1ac50:	mov	r2, r5
   1ac54:	mov	r1, r9
   1ac58:	ldr	r0, [r4, #204]	; 0xcc
   1ac5c:	ldm	lr, {ip, lr}
   1ac60:	str	fp, [sp, #8]
   1ac64:	str	lr, [sp]
   1ac68:	str	ip, [sp, #4]
   1ac6c:	str	r5, [sp, #12]
   1ac70:	str	r5, [sp, #16]
   1ac74:	str	lr, [sp, #20]
   1ac78:	str	ip, [sp, #24]
   1ac7c:	bl	13f60 <fprintf@plt>
   1ac80:	ldr	r6, [r6]
   1ac84:	cmp	r6, #0
   1ac88:	beq	1ae5c <__flatcc_gen_sort@@Base+0x1a48>
   1ac8c:	ldrh	r3, [r6, #24]
   1ac90:	cmp	r3, #10
   1ac94:	beq	1ae14 <__flatcc_gen_sort@@Base+0x1a00>
   1ac98:	cmp	r3, #14
   1ac9c:	beq	1ac38 <__flatcc_gen_sort@@Base+0x1824>
   1aca0:	cmp	r3, #0
   1aca4:	beq	1ae34 <__flatcc_gen_sort@@Base+0x1a20>
   1aca8:	movw	r1, #35120	; 0x8930
   1acac:	movt	r1, #4
   1acb0:	movw	r3, #41128	; 0xa0a8
   1acb4:	movt	r3, #6
   1acb8:	movw	r2, #32768	; 0x8000
   1acbc:	movt	r2, #4
   1acc0:	str	r1, [sp]
   1acc4:	movw	r1, #64544	; 0xfc20
   1acc8:	movt	r1, #3
   1accc:	ldr	r0, [r3]
   1acd0:	movw	r3, #1608	; 0x648
   1acd4:	bl	13f60 <fprintf@plt>
   1acd8:	movw	r1, #32768	; 0x8000
   1acdc:	movt	r1, #4
   1ace0:	ldr	r3, [pc, #2100]	; 1b51c <__flatcc_gen_sort@@Base+0x2108>
   1ace4:	movw	r0, #35672	; 0x8b58
   1ace8:	movt	r0, #4
   1acec:	movw	r2, #1608	; 0x648
   1acf0:	bl	14014 <__assert_fail@plt>
   1acf4:	ldrd	r8, [r5, #96]	; 0x60
   1acf8:	mov	r2, r4
   1acfc:	mov	r1, sl
   1ad00:	ldr	r0, [r4, #204]	; 0xcc
   1ad04:	strd	r8, [sp]
   1ad08:	bl	13f60 <fprintf@plt>
   1ad0c:	b	1aa74 <__flatcc_gen_sort@@Base+0x1660>
   1ad10:	ldr	r3, [r5, #16]
   1ad14:	sub	r3, r3, #1
   1ad18:	cmp	r3, #10
   1ad1c:	bhi	1b484 <__flatcc_gen_sort@@Base+0x2070>
   1ad20:	ldrd	r8, [r5, #96]	; 0x60
   1ad24:	add	r3, r7, r3, lsl #2
   1ad28:	movw	r1, #34544	; 0x86f0
   1ad2c:	movt	r1, #4
   1ad30:	mov	r2, r4
   1ad34:	ldr	r3, [r3, #120]	; 0x78
   1ad38:	strd	r8, [sp]
   1ad3c:	ldr	r0, [r4, #204]	; 0xcc
   1ad40:	bl	13f60 <fprintf@plt>
   1ad44:	b	1aa74 <__flatcc_gen_sort@@Base+0x1660>
   1ad48:	ldr	r3, [r5, #16]
   1ad4c:	cmp	r3, #5
   1ad50:	beq	1b028 <__flatcc_gen_sort@@Base+0x1c14>
   1ad54:	sub	r3, r3, #1
   1ad58:	cmp	r3, #10
   1ad5c:	bhi	1b4d0 <__flatcc_gen_sort@@Base+0x20bc>
   1ad60:	movw	r2, #39472	; 0x9a30
   1ad64:	movt	r2, #4
   1ad68:	ldrd	r8, [r5, #96]	; 0x60
   1ad6c:	add	r3, r7, r3, lsl #2
   1ad70:	movw	r1, #34532	; 0x86e4
   1ad74:	movt	r1, #4
   1ad78:	ldr	r3, [r3, #32]
   1ad7c:	strd	r8, [sp]
   1ad80:	ldr	r0, [r4, #204]	; 0xcc
   1ad84:	bl	13f60 <fprintf@plt>
   1ad88:	b	1aa74 <__flatcc_gen_sort@@Base+0x1660>
   1ad8c:	movw	r1, #34460	; 0x869c
   1ad90:	movt	r1, #4
   1ad94:	ldrd	r8, [r5, #96]	; 0x60
   1ad98:	mov	r2, fp
   1ad9c:	ldr	r0, [r4, #204]	; 0xcc
   1ada0:	strd	r8, [sp]
   1ada4:	bl	13f60 <fprintf@plt>
   1ada8:	b	1aa74 <__flatcc_gen_sort@@Base+0x1660>
   1adac:	movw	r1, #34440	; 0x8688
   1adb0:	movt	r1, #4
   1adb4:	b	1ad94 <__flatcc_gen_sort@@Base+0x1980>
   1adb8:	movw	r1, #34328	; 0x8618
   1adbc:	movt	r1, #4
   1adc0:	b	1ad94 <__flatcc_gen_sort@@Base+0x1980>
   1adc4:	movw	r1, #34356	; 0x8634
   1adc8:	movt	r1, #4
   1adcc:	b	1ad94 <__flatcc_gen_sort@@Base+0x1980>
   1add0:	movw	r1, #34372	; 0x8644
   1add4:	movt	r1, #4
   1add8:	b	1ad94 <__flatcc_gen_sort@@Base+0x1980>
   1addc:	movw	r1, #34340	; 0x8624
   1ade0:	movt	r1, #4
   1ade4:	b	1ad94 <__flatcc_gen_sort@@Base+0x1980>
   1ade8:	tst	r2, #3
   1adec:	bne	1adfc <__flatcc_gen_sort@@Base+0x19e8>
   1adf0:	sub	r2, r6, r2
   1adf4:	cmp	r2, #2
   1adf8:	bgt	1a99c <__flatcc_gen_sort@@Base+0x1588>
   1adfc:	movw	r0, #33020	; 0x80fc
   1ae00:	movt	r0, #4
   1ae04:	mov	r2, #2
   1ae08:	mov	r1, #1
   1ae0c:	bl	13ef4 <fwrite@plt>
   1ae10:	b	1a9b4 <__flatcc_gen_sort@@Base+0x15a0>
   1ae14:	ldr	lr, [r6, #4]
   1ae18:	mov	r3, r5
   1ae1c:	mov	r2, r5
   1ae20:	mov	r1, sl
   1ae24:	ldr	r0, [r4, #204]	; 0xcc
   1ae28:	ldm	lr, {ip, lr}
   1ae2c:	str	r4, [sp, #8]
   1ae30:	b	1ac64 <__flatcc_gen_sort@@Base+0x1850>
   1ae34:	mov	r3, r5
   1ae38:	mov	r2, r5
   1ae3c:	str	r5, [sp]
   1ae40:	mov	r1, r8
   1ae44:	str	r5, [sp, #4]
   1ae48:	ldr	r0, [r4, #204]	; 0xcc
   1ae4c:	bl	13f60 <fprintf@plt>
   1ae50:	ldr	r6, [r6]
   1ae54:	cmp	r6, #0
   1ae58:	bne	1ac8c <__flatcc_gen_sort@@Base+0x1878>
   1ae5c:	mov	r2, r4
   1ae60:	movw	r1, #34696	; 0x8788
   1ae64:	movt	r1, #4
   1ae68:	mov	r3, r4
   1ae6c:	str	r5, [sp]
   1ae70:	ldr	r0, [r4, #204]	; 0xcc
   1ae74:	bl	13f60 <fprintf@plt>
   1ae78:	ldr	r7, [r7]
   1ae7c:	mov	r2, #1
   1ae80:	cmp	r7, #0
   1ae84:	bne	1abe8 <__flatcc_gen_sort@@Base+0x17d4>
   1ae88:	cmp	r2, #0
   1ae8c:	beq	1ae9c <__flatcc_gen_sort@@Base+0x1a88>
   1ae90:	mov	r0, #10
   1ae94:	ldr	r1, [r4, #204]	; 0xcc
   1ae98:	bl	13fc0 <fputc@plt>
   1ae9c:	ldr	r3, [sp, #60]	; 0x3c
   1aea0:	cmp	r3, #0
   1aea4:	beq	1b008 <__flatcc_gen_sort@@Base+0x1bf4>
   1aea8:	ldr	r3, [r4, #208]	; 0xd0
   1aeac:	ldr	r6, [r3, #40]	; 0x28
   1aeb0:	cmp	r6, #0
   1aeb4:	beq	1b008 <__flatcc_gen_sort@@Base+0x1bf4>
   1aeb8:	movw	r8, #35164	; 0x895c
   1aebc:	movt	r8, #4
   1aec0:	movw	r9, #35232	; 0x89a0
   1aec4:	movt	r9, #4
   1aec8:	movw	sl, #35376	; 0x8a30
   1aecc:	movt	sl, #4
   1aed0:	ldrh	r5, [r6, #8]
   1aed4:	cmp	r5, #0
   1aed8:	bne	1affc <__flatcc_gen_sort@@Base+0x1be8>
   1aedc:	mov	r1, r6
   1aee0:	mov	r0, r4
   1aee4:	bl	19b50 <__flatcc_gen_sort@@Base+0x73c>
   1aee8:	mov	r1, r5
   1aeec:	mov	r2, #220	; 0xdc
   1aef0:	ldrh	r7, [r6, #92]	; 0x5c
   1aef4:	mov	r0, fp
   1aef8:	bl	13f78 <memset@plt>
   1aefc:	mov	r2, fp
   1af00:	mov	r1, r6
   1af04:	ldr	r0, [r6, #12]
   1af08:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1af0c:	mov	r3, fp
   1af10:	mov	r2, fp
   1af14:	stm	sp, {r4, fp}
   1af18:	mov	r1, r8
   1af1c:	ldr	r0, [r4, #204]	; 0xcc
   1af20:	and	r7, r7, #8
   1af24:	bl	13f60 <fprintf@plt>
   1af28:	mov	r2, fp
   1af2c:	mov	r1, r9
   1af30:	ldr	r0, [r4, #204]	; 0xcc
   1af34:	bl	13f60 <fprintf@plt>
   1af38:	ldr	r5, [r6, #24]
   1af3c:	cmp	r5, #0
   1af40:	beq	1b398 <__flatcc_gen_sort@@Base+0x1f84>
   1af44:	cmp	r7, #0
   1af48:	ldr	r0, [r4, #204]	; 0xcc
   1af4c:	beq	1b1f4 <__flatcc_gen_sort@@Base+0x1de0>
   1af50:	movw	r7, #35256	; 0x89b8
   1af54:	movt	r7, #4
   1af58:	strd	r8, [sp, #36]	; 0x24
   1af5c:	ldrh	r3, [r5, #72]	; 0x48
   1af60:	tst	r3, #4
   1af64:	bne	1af90 <__flatcc_gen_sort@@Base+0x1b7c>
   1af68:	ldr	ip, [r5, #4]
   1af6c:	mov	r2, fp
   1af70:	mov	r1, r7
   1af74:	ldrd	r8, [r5, #96]	; 0x60
   1af78:	ldr	r3, [ip, #4]
   1af7c:	strd	r8, [sp, #8]
   1af80:	ldr	ip, [ip]
   1af84:	str	ip, [sp]
   1af88:	bl	13f60 <fprintf@plt>
   1af8c:	ldr	r0, [r4, #204]	; 0xcc
   1af90:	ldr	r5, [r5, #108]	; 0x6c
   1af94:	cmp	r5, #0
   1af98:	bne	1af5c <__flatcc_gen_sort@@Base+0x1b48>
   1af9c:	ldrd	r8, [sp, #36]	; 0x24
   1afa0:	mov	r2, fp
   1afa4:	mov	r1, sl
   1afa8:	bl	13f60 <fprintf@plt>
   1afac:	mov	r2, #220	; 0xdc
   1afb0:	mov	r1, #0
   1afb4:	mov	r0, fp
   1afb8:	bl	13f78 <memset@plt>
   1afbc:	mov	r2, fp
   1afc0:	mov	r1, r6
   1afc4:	ldr	r0, [r6, #12]
   1afc8:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1afcc:	movw	r1, #35432	; 0x8a68
   1afd0:	movt	r1, #4
   1afd4:	str	fp, [sp]
   1afd8:	mov	r3, r4
   1afdc:	mov	r2, r4
   1afe0:	str	fp, [sp, #4]
   1afe4:	str	fp, [sp, #8]
   1afe8:	ldr	r0, [r4, #204]	; 0xcc
   1afec:	bl	13f60 <fprintf@plt>
   1aff0:	mov	r0, #10
   1aff4:	ldr	r1, [r4, #204]	; 0xcc
   1aff8:	bl	13fc0 <fputc@plt>
   1affc:	ldr	r6, [r6]
   1b000:	cmp	r6, #0
   1b004:	bne	1aed0 <__flatcc_gen_sort@@Base+0x1abc>
   1b008:	mov	r0, #0
   1b00c:	add	sp, sp, #508	; 0x1fc
   1b010:	ldrd	r4, [sp]
   1b014:	ldrd	r6, [sp, #8]
   1b018:	ldrd	r8, [sp, #16]
   1b01c:	ldrd	sl, [sp, #24]
   1b020:	add	sp, sp, #32
   1b024:	pop	{pc}		; (ldr pc, [sp], #4)
   1b028:	mov	r2, r4
   1b02c:	mov	r3, #4
   1b030:	b	1ad68 <__flatcc_gen_sort@@Base+0x1954>
   1b034:	ldr	r5, [r5]
   1b038:	cmp	r5, #0
   1b03c:	beq	1ab64 <__flatcc_gen_sort@@Base+0x1750>
   1b040:	ldrh	r3, [r5, #72]	; 0x48
   1b044:	tst	r3, #4
   1b048:	bne	1b034 <__flatcc_gen_sort@@Base+0x1c20>
   1b04c:	mov	r1, r6
   1b050:	ldrd	r2, [r5, #96]	; 0x60
   1b054:	bl	13f60 <fprintf@plt>
   1b058:	ldr	r5, [r5]
   1b05c:	ldr	r0, [r4, #204]	; 0xcc
   1b060:	cmp	r5, #0
   1b064:	bne	1b040 <__flatcc_gen_sort@@Base+0x1c2c>
   1b068:	b	1ab64 <__flatcc_gen_sort@@Base+0x1750>
   1b06c:	mov	r1, r5
   1b070:	mov	r2, fp
   1b074:	ldr	r0, [r5, #12]
   1b078:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1b07c:	mov	r3, fp
   1b080:	mov	r2, r4
   1b084:	stm	sp, {r4, fp}
   1b088:	mov	r1, r6
   1b08c:	ldr	r0, [r4, #204]	; 0xcc
   1b090:	bl	13f60 <fprintf@plt>
   1b094:	ldr	r5, [r5]
   1b098:	cmp	r5, #0
   1b09c:	beq	1b358 <__flatcc_gen_sort@@Base+0x1f44>
   1b0a0:	mov	r2, #1
   1b0a4:	b	1a6b0 <__flatcc_gen_sort@@Base+0x129c>
   1b0a8:	mov	r2, fp
   1b0ac:	mov	r1, r7
   1b0b0:	ldr	r0, [r7, #12]
   1b0b4:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1b0b8:	mov	r3, fp
   1b0bc:	mov	r2, r4
   1b0c0:	ldr	r1, [sp, #40]	; 0x28
   1b0c4:	ldr	r0, [r4, #204]	; 0xcc
   1b0c8:	bl	13f60 <fprintf@plt>
   1b0cc:	ldr	r5, [r7, #20]
   1b0d0:	cmp	r5, #0
   1b0d4:	ldrne	r3, [r4, #204]	; 0xcc
   1b0d8:	bne	1b0f4 <__flatcc_gen_sort@@Base+0x1ce0>
   1b0dc:	ldr	r3, [r4, #204]	; 0xcc
   1b0e0:	mov	r2, #6
   1b0e4:	mov	r1, #1
   1b0e8:	ldr	r0, [sp, #48]	; 0x30
   1b0ec:	bl	13ef4 <fwrite@plt>
   1b0f0:	b	1a848 <__flatcc_gen_sort@@Base+0x1434>
   1b0f4:	movw	r8, #34220	; 0x85ac
   1b0f8:	movt	r8, #4
   1b0fc:	mov	r6, #0
   1b100:	mov	r0, r3
   1b104:	ldrh	r2, [r5, #72]	; 0x48
   1b108:	tst	r2, #4
   1b10c:	bne	1b144 <__flatcc_gen_sort@@Base+0x1d30>
   1b110:	tst	r2, #256	; 0x100
   1b114:	beq	1b144 <__flatcc_gen_sort@@Base+0x1d30>
   1b118:	cmp	r6, #0
   1b11c:	bne	1b130 <__flatcc_gen_sort@@Base+0x1d1c>
   1b120:	mov	r1, r0
   1b124:	mov	r0, #32
   1b128:	bl	13fc0 <fputc@plt>
   1b12c:	ldr	r0, [r4, #204]	; 0xcc
   1b130:	mov	r1, r8
   1b134:	add	r6, r6, #1
   1b138:	ldr	r2, [r5, #96]	; 0x60
   1b13c:	bl	13f60 <fprintf@plt>
   1b140:	ldr	r0, [r4, #204]	; 0xcc
   1b144:	ldr	r5, [r5]
   1b148:	cmp	r5, #0
   1b14c:	bne	1b104 <__flatcc_gen_sort@@Base+0x1cf0>
   1b150:	mov	r3, r0
   1b154:	b	1a82c <__flatcc_gen_sort@@Base+0x1418>
   1b158:	movw	r3, #33012	; 0x80f4
   1b15c:	movt	r3, #4
   1b160:	movw	sl, #10104	; 0x2778
   1b164:	movt	sl, #4
   1b168:	movw	r9, #33020	; 0x80fc
   1b16c:	movt	r9, #4
   1b170:	str	r3, [sp, #36]	; 0x24
   1b174:	mov	r8, #0
   1b178:	b	1b1b0 <__flatcc_gen_sort@@Base+0x1d9c>
   1b17c:	mov	r2, sl
   1b180:	ldr	r1, [sp, #36]	; 0x24
   1b184:	bl	13f60 <fprintf@plt>
   1b188:	ldr	r0, [r4, #204]	; 0xcc
   1b18c:	movw	r1, #34620	; 0x873c
   1b190:	movt	r1, #4
   1b194:	ldrd	r2, [r5, #96]	; 0x60
   1b198:	add	r8, r8, #1
   1b19c:	bl	13f60 <fprintf@plt>
   1b1a0:	ldr	r0, [r4, #204]	; 0xcc
   1b1a4:	ldr	r5, [r5]
   1b1a8:	cmp	r5, #0
   1b1ac:	beq	1ab64 <__flatcc_gen_sort@@Base+0x1750>
   1b1b0:	ldrh	r2, [r5, #72]	; 0x48
   1b1b4:	tst	r2, #4
   1b1b8:	bne	1b1a4 <__flatcc_gen_sort@@Base+0x1d90>
   1b1bc:	cmp	r8, #0
   1b1c0:	beq	1b17c <__flatcc_gen_sort@@Base+0x1d68>
   1b1c4:	tst	r8, #3
   1b1c8:	bne	1b1d8 <__flatcc_gen_sort@@Base+0x1dc4>
   1b1cc:	sub	r3, r6, r8
   1b1d0:	cmp	r3, #2
   1b1d4:	bgt	1b17c <__flatcc_gen_sort@@Base+0x1d68>
   1b1d8:	mov	r3, r0
   1b1dc:	mov	r2, #2
   1b1e0:	mov	r1, #1
   1b1e4:	mov	r0, r9
   1b1e8:	bl	13ef4 <fwrite@plt>
   1b1ec:	ldr	r0, [r4, #204]	; 0xcc
   1b1f0:	b	1b18c <__flatcc_gen_sort@@Base+0x1d78>
   1b1f4:	movw	r3, #35292	; 0x89dc
   1b1f8:	movt	r3, #4
   1b1fc:	str	r7, [sp, #36]	; 0x24
   1b200:	movw	r7, #35256	; 0x89b8
   1b204:	movt	r7, #4
   1b208:	strd	r8, [sp, #40]	; 0x28
   1b20c:	str	r3, [sp, #48]	; 0x30
   1b210:	b	1b238 <__flatcc_gen_sort@@Base+0x1e24>
   1b214:	mov	r1, r7
   1b218:	str	r2, [sp]
   1b21c:	mov	r2, fp
   1b220:	strd	r8, [sp, #8]
   1b224:	bl	13f60 <fprintf@plt>
   1b228:	ldr	r0, [r4, #204]	; 0xcc
   1b22c:	ldr	r5, [r5, #108]	; 0x6c
   1b230:	cmp	r5, #0
   1b234:	beq	1b290 <__flatcc_gen_sort@@Base+0x1e7c>
   1b238:	ldrh	r3, [r5, #72]	; 0x48
   1b23c:	tst	r3, #4
   1b240:	bne	1b22c <__flatcc_gen_sort@@Base+0x1e18>
   1b244:	ldrh	r2, [r5, #24]
   1b248:	ldr	r3, [r5, #4]
   1b24c:	ldrd	r8, [r5, #96]	; 0x60
   1b250:	cmp	r2, #14
   1b254:	ldrd	r2, [r3]
   1b258:	bne	1b214 <__flatcc_gen_sort@@Base+0x1e00>
   1b25c:	ldr	r1, [r5, #16]
   1b260:	ldrh	r1, [r1, #8]
   1b264:	cmp	r1, #4
   1b268:	bne	1b214 <__flatcc_gen_sort@@Base+0x1e00>
   1b26c:	str	r2, [sp]
   1b270:	mov	r2, fp
   1b274:	strd	r8, [sp, #8]
   1b278:	ldr	r1, [sp, #48]	; 0x30
   1b27c:	bl	13f60 <fprintf@plt>
   1b280:	ldr	r3, [sp, #60]	; 0x3c
   1b284:	ldr	r0, [r4, #204]	; 0xcc
   1b288:	str	r3, [sp, #36]	; 0x24
   1b28c:	b	1b22c <__flatcc_gen_sort@@Base+0x1e18>
   1b290:	add	r3, sp, #36	; 0x24
   1b294:	ldm	r3, {r3, r8, r9}
   1b298:	tst	r3, #1
   1b29c:	beq	1afa0 <__flatcc_gen_sort@@Base+0x1b8c>
   1b2a0:	ldr	r5, [r6, #24]
   1b2a4:	cmp	r5, #0
   1b2a8:	beq	1afa0 <__flatcc_gen_sort@@Base+0x1b8c>
   1b2ac:	movw	r7, #35332	; 0x8a04
   1b2b0:	movt	r7, #4
   1b2b4:	strd	r6, [sp, #36]	; 0x24
   1b2b8:	b	1b2c8 <__flatcc_gen_sort@@Base+0x1eb4>
   1b2bc:	ldr	r5, [r5, #108]	; 0x6c
   1b2c0:	cmp	r5, #0
   1b2c4:	beq	1b324 <__flatcc_gen_sort@@Base+0x1f10>
   1b2c8:	ldrh	r3, [r5, #72]	; 0x48
   1b2cc:	tst	r3, #4
   1b2d0:	bne	1b2bc <__flatcc_gen_sort@@Base+0x1ea8>
   1b2d4:	ldrh	r3, [r5, #24]
   1b2d8:	cmp	r3, #14
   1b2dc:	bne	1b2bc <__flatcc_gen_sort@@Base+0x1ea8>
   1b2e0:	ldr	r3, [r5, #16]
   1b2e4:	ldrh	r3, [r3, #8]
   1b2e8:	cmp	r3, #4
   1b2ec:	bne	1b2bc <__flatcc_gen_sort@@Base+0x1ea8>
   1b2f0:	ldr	ip, [r5, #4]
   1b2f4:	mov	r2, fp
   1b2f8:	ldrd	r6, [r5, #96]	; 0x60
   1b2fc:	ldr	r1, [sp, #40]	; 0x28
   1b300:	ldr	r3, [ip, #4]
   1b304:	strd	r6, [sp, #8]
   1b308:	ldr	ip, [ip]
   1b30c:	str	ip, [sp]
   1b310:	bl	13f60 <fprintf@plt>
   1b314:	ldr	r5, [r5, #108]	; 0x6c
   1b318:	ldr	r0, [r4, #204]	; 0xcc
   1b31c:	cmp	r5, #0
   1b320:	bne	1b2c8 <__flatcc_gen_sort@@Base+0x1eb4>
   1b324:	ldr	r6, [sp, #36]	; 0x24
   1b328:	b	1afa0 <__flatcc_gen_sort@@Base+0x1b8c>
   1b32c:	mov	r6, r3
   1b330:	b	1a920 <__flatcc_gen_sort@@Base+0x150c>
   1b334:	ldr	r0, [r4, #204]	; 0xcc
   1b338:	b	1ab64 <__flatcc_gen_sort@@Base+0x1750>
   1b33c:	mov	r0, r3
   1b340:	movw	r1, #33012	; 0x80f4
   1b344:	movt	r1, #4
   1b348:	ldr	r2, [sp, #36]	; 0x24
   1b34c:	bl	13f60 <fprintf@plt>
   1b350:	ldr	r0, [r4, #204]	; 0xcc
   1b354:	b	1ab40 <__flatcc_gen_sort@@Base+0x172c>
   1b358:	mov	r0, #10
   1b35c:	ldr	r1, [r4, #204]	; 0xcc
   1b360:	bl	13fc0 <fputc@plt>
   1b364:	b	1a6d0 <__flatcc_gen_sort@@Base+0x12bc>
   1b368:	mov	r0, r1
   1b36c:	mov	r2, sl
   1b370:	ldr	r1, [sp, #44]	; 0x2c
   1b374:	bl	13f60 <fprintf@plt>
   1b378:	ldr	r0, [r4, #204]	; 0xcc
   1b37c:	b	1a7d8 <__flatcc_gen_sort@@Base+0x13c4>
   1b380:	cmp	r5, #0
   1b384:	beq	1b008 <__flatcc_gen_sort@@Base+0x1bf4>
   1b388:	mov	r0, #10
   1b38c:	ldr	r1, [r4, #204]	; 0xcc
   1b390:	bl	13fc0 <fputc@plt>
   1b394:	b	1abac <__flatcc_gen_sort@@Base+0x1798>
   1b398:	ldr	r0, [r4, #204]	; 0xcc
   1b39c:	b	1afa0 <__flatcc_gen_sort@@Base+0x1b8c>
   1b3a0:	movw	r1, #33052	; 0x811c
   1b3a4:	movt	r1, #4
   1b3a8:	movw	r3, #41128	; 0xa0a8
   1b3ac:	movt	r3, #6
   1b3b0:	movw	r2, #32768	; 0x8000
   1b3b4:	movt	r2, #4
   1b3b8:	str	r1, [sp]
   1b3bc:	movw	r1, #64544	; 0xfc20
   1b3c0:	movt	r1, #3
   1b3c4:	ldr	r0, [r3]
   1b3c8:	movw	r3, #1209	; 0x4b9
   1b3cc:	bl	13f60 <fprintf@plt>
   1b3d0:	movw	r1, #32768	; 0x8000
   1b3d4:	movt	r1, #4
   1b3d8:	ldr	r3, [pc, #320]	; 1b520 <__flatcc_gen_sort@@Base+0x210c>
   1b3dc:	movw	r0, #35672	; 0x8b58
   1b3e0:	movt	r0, #4
   1b3e4:	movw	r2, #1209	; 0x4b9
   1b3e8:	bl	14014 <__assert_fail@plt>
   1b3ec:	movw	r1, #34488	; 0x86b8
   1b3f0:	movt	r1, #4
   1b3f4:	movw	r3, #41128	; 0xa0a8
   1b3f8:	movt	r3, #6
   1b3fc:	movw	r2, #32768	; 0x8000
   1b400:	movt	r2, #4
   1b404:	str	r1, [sp]
   1b408:	movw	r1, #64544	; 0xfc20
   1b40c:	movt	r1, #3
   1b410:	ldr	r0, [r3]
   1b414:	movw	r3, #1189	; 0x4a5
   1b418:	bl	13f60 <fprintf@plt>
   1b41c:	movw	r1, #32768	; 0x8000
   1b420:	movt	r1, #4
   1b424:	ldr	r3, [pc, #244]	; 1b520 <__flatcc_gen_sort@@Base+0x210c>
   1b428:	movw	r0, #35672	; 0x8b58
   1b42c:	movt	r0, #4
   1b430:	movw	r2, #1189	; 0x4a5
   1b434:	bl	14014 <__assert_fail@plt>
   1b438:	movw	r1, #34396	; 0x865c
   1b43c:	movt	r1, #4
   1b440:	movw	r3, #41128	; 0xa0a8
   1b444:	movt	r3, #6
   1b448:	movw	r2, #32768	; 0x8000
   1b44c:	movt	r2, #4
   1b450:	str	r1, [sp]
   1b454:	movw	r1, #64544	; 0xfc20
   1b458:	movt	r1, #3
   1b45c:	ldr	r0, [r3]
   1b460:	movw	r3, #1173	; 0x495
   1b464:	bl	13f60 <fprintf@plt>
   1b468:	movw	r1, #32768	; 0x8000
   1b46c:	movt	r1, #4
   1b470:	ldr	r3, [pc, #168]	; 1b520 <__flatcc_gen_sort@@Base+0x210c>
   1b474:	movw	r0, #35672	; 0x8b58
   1b478:	movt	r0, #4
   1b47c:	movw	r2, #1173	; 0x495
   1b480:	bl	14014 <__assert_fail@plt>
   1b484:	movw	r1, #64556	; 0xfc2c
   1b488:	movt	r1, #3
   1b48c:	movw	r3, #41128	; 0xa0a8
   1b490:	movt	r3, #6
   1b494:	movw	r2, #64468	; 0xfbd4
   1b498:	movt	r2, #3
   1b49c:	str	r1, [sp]
   1b4a0:	movw	r1, #64544	; 0xfc20
   1b4a4:	movt	r1, #3
   1b4a8:	ldr	r0, [r3]
   1b4ac:	mov	r3, #96	; 0x60
   1b4b0:	bl	13f60 <fprintf@plt>
   1b4b4:	movw	r1, #64468	; 0xfbd4
   1b4b8:	movt	r1, #3
   1b4bc:	ldr	r3, [pc, #96]	; 1b524 <__flatcc_gen_sort@@Base+0x2110>
   1b4c0:	movw	r0, #35672	; 0x8b58
   1b4c4:	movt	r0, #4
   1b4c8:	mov	r2, #96	; 0x60
   1b4cc:	bl	14014 <__assert_fail@plt>
   1b4d0:	movw	r1, #64556	; 0xfc2c
   1b4d4:	movt	r1, #3
   1b4d8:	movw	r3, #41128	; 0xa0a8
   1b4dc:	movt	r3, #6
   1b4e0:	movw	r2, #64468	; 0xfbd4
   1b4e4:	movt	r2, #3
   1b4e8:	str	r1, [sp]
   1b4ec:	movw	r1, #64544	; 0xfc20
   1b4f0:	movt	r1, #3
   1b4f4:	ldr	r0, [r3]
   1b4f8:	mov	r3, #141	; 0x8d
   1b4fc:	bl	13f60 <fprintf@plt>
   1b500:	movw	r1, #64468	; 0xfbd4
   1b504:	movt	r1, #3
   1b508:	ldr	r3, [pc, #24]	; 1b528 <__flatcc_gen_sort@@Base+0x2114>
   1b50c:	movw	r0, #35672	; 0x8b58
   1b510:	movt	r0, #4
   1b514:	mov	r2, #141	; 0x8d
   1b518:	bl	14014 <__assert_fail@plt>
   1b51c:	andeq	r7, r4, r0, lsr pc
   1b520:	andeq	r7, r4, r4, lsl #30
   1b524:	andeq	r7, r4, ip, lsl pc
   1b528:	andeq	r7, r4, ip, asr lr
   1b52c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b530:	mov	r4, r1
   1b534:	mov	r1, #0
   1b538:	strd	r6, [sp, #8]
   1b53c:	strd	r8, [sp, #16]
   1b540:	mov	r9, r0
   1b544:	strd	sl, [sp, #24]
   1b548:	mov	fp, r3
   1b54c:	str	lr, [sp, #32]
   1b550:	sub	sp, sp, #284	; 0x11c
   1b554:	add	r0, sp, #60	; 0x3c
   1b558:	str	r2, [sp, #32]
   1b55c:	mov	r2, #220	; 0xdc
   1b560:	bl	13f78 <memset@plt>
   1b564:	cmp	fp, #1
   1b568:	beq	1bc18 <__flatcc_gen_sort@@Base+0x2804>
   1b56c:	movw	r3, #39472	; 0x9a30
   1b570:	movt	r3, #4
   1b574:	cmp	fp, #2
   1b578:	movw	r2, #35500	; 0x8aac
   1b57c:	movt	r2, #4
   1b580:	movne	r2, r3
   1b584:	str	r2, [sp, #36]	; 0x24
   1b588:	ldr	r4, [r4]
   1b58c:	cmp	r4, #0
   1b590:	moveq	r5, r4
   1b594:	beq	1b78c <__flatcc_gen_sort@@Base+0x2378>
   1b598:	ldr	r3, [r4, #4]
   1b59c:	movw	r2, #35840	; 0x8c00
   1b5a0:	movt	r2, #4
   1b5a4:	mov	r5, #0
   1b5a8:	str	r2, [sp, #24]
   1b5ac:	movw	r2, #35820	; 0x8bec
   1b5b0:	movt	r2, #4
   1b5b4:	mov	sl, r5
   1b5b8:	str	r2, [sp, #28]
   1b5bc:	movw	r2, #32272	; 0x7e10
   1b5c0:	movt	r2, #4
   1b5c4:	ldr	r7, [r3]
   1b5c8:	str	r2, [sp, #20]
   1b5cc:	ldr	r6, [r3, #4]
   1b5d0:	ldrh	r3, [r4, #24]
   1b5d4:	cmp	r3, #8
   1b5d8:	bne	1b6a4 <__flatcc_gen_sort@@Base+0x2290>
   1b5dc:	ldr	r1, [r4, #16]
   1b5e0:	sub	r1, r1, #1
   1b5e4:	cmp	r1, #10
   1b5e8:	bhi	1be44 <__flatcc_gen_sort@@Base+0x2a30>
   1b5ec:	ldrh	r3, [r4, #72]	; 0x48
   1b5f0:	add	r8, r5, #1
   1b5f4:	ldr	r0, [r9, #204]	; 0xcc
   1b5f8:	tst	r3, #4
   1b5fc:	bne	1b768 <__flatcc_gen_sort@@Base+0x2354>
   1b600:	ldrd	r2, [r4, #88]	; 0x58
   1b604:	cmp	r3, #0
   1b608:	cmpeq	r2, #1
   1b60c:	beq	1b72c <__flatcc_gen_sort@@Base+0x2318>
   1b610:	ldr	r3, [sp, #20]
   1b614:	cmp	fp, #1
   1b618:	add	r1, r3, r1, lsl #2
   1b61c:	ldr	r3, [r1, #120]	; 0x78
   1b620:	beq	1b820 <__flatcc_gen_sort@@Base+0x240c>
   1b624:	cmp	fp, #2
   1b628:	bne	1b72c <__flatcc_gen_sort@@Base+0x2318>
   1b62c:	ldr	r2, [sp, #320]	; 0x140
   1b630:	str	r6, [sp]
   1b634:	cmp	r2, #0
   1b638:	beq	1badc <__flatcc_gen_sort@@Base+0x26c8>
   1b63c:	movw	r1, #35932	; 0x8c5c
   1b640:	movt	r1, #4
   1b644:	str	r7, [sp, #4]
   1b648:	mov	r2, r9
   1b64c:	strd	r6, [sp, #8]
   1b650:	bl	13f60 <fprintf@plt>
   1b654:	mov	r5, r8
   1b658:	ldr	r4, [r4]
   1b65c:	cmp	r4, #0
   1b660:	beq	1b78c <__flatcc_gen_sort@@Base+0x2378>
   1b664:	ldr	r3, [r4, #4]
   1b668:	cmp	r5, #0
   1b66c:	ldr	r7, [r3]
   1b670:	ldr	r6, [r3, #4]
   1b674:	ble	1b5d0 <__flatcc_gen_sort@@Base+0x21bc>
   1b678:	tst	r5, #3
   1b67c:	ldr	r3, [r9, #204]	; 0xcc
   1b680:	bne	1b750 <__flatcc_gen_sort@@Base+0x233c>
   1b684:	movw	r0, #35520	; 0x8ac0
   1b688:	movt	r0, #4
   1b68c:	mov	r2, #4
   1b690:	mov	r1, #1
   1b694:	bl	13ef4 <fwrite@plt>
   1b698:	ldrh	r3, [r4, #24]
   1b69c:	cmp	r3, #8
   1b6a0:	beq	1b5dc <__flatcc_gen_sort@@Base+0x21c8>
   1b6a4:	cmp	r3, #14
   1b6a8:	bne	1bd48 <__flatcc_gen_sort@@Base+0x2934>
   1b6ac:	ldr	r1, [r4, #16]
   1b6b0:	add	r2, sp, #60	; 0x3c
   1b6b4:	ldr	r0, [r1, #12]
   1b6b8:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1b6bc:	ldr	r3, [r4, #16]
   1b6c0:	ldrh	r3, [r3, #8]
   1b6c4:	cmp	r3, #1
   1b6c8:	ldrh	r3, [r4, #72]	; 0x48
   1b6cc:	beq	1b7e4 <__flatcc_gen_sort@@Base+0x23d0>
   1b6d0:	tst	r3, #4
   1b6d4:	add	r8, r5, #1
   1b6d8:	ldr	r0, [r9, #204]	; 0xcc
   1b6dc:	bne	1b768 <__flatcc_gen_sort@@Base+0x2354>
   1b6e0:	ldrd	r2, [r4, #88]	; 0x58
   1b6e4:	cmp	r3, #0
   1b6e8:	cmpeq	r2, #1
   1b6ec:	beq	1b72c <__flatcc_gen_sort@@Base+0x2318>
   1b6f0:	cmp	fp, #1
   1b6f4:	beq	1b9b4 <__flatcc_gen_sort@@Base+0x25a0>
   1b6f8:	cmp	fp, #2
   1b6fc:	bne	1b72c <__flatcc_gen_sort@@Base+0x2318>
   1b700:	ldr	r3, [sp, #320]	; 0x140
   1b704:	str	r7, [sp]
   1b708:	cmp	r3, #0
   1b70c:	mov	r3, r6
   1b710:	beq	1bb2c <__flatcc_gen_sort@@Base+0x2718>
   1b714:	movw	r1, #35752	; 0x8ba8
   1b718:	movt	r1, #4
   1b71c:	strd	r6, [sp, #4]
   1b720:	add	r2, sp, #60	; 0x3c
   1b724:	bl	13f60 <fprintf@plt>
   1b728:	b	1b654 <__flatcc_gen_sort@@Base+0x2240>
   1b72c:	ldr	r3, [sp, #320]	; 0x140
   1b730:	cmp	r3, #0
   1b734:	mov	r3, r7
   1b738:	beq	1b7d0 <__flatcc_gen_sort@@Base+0x23bc>
   1b73c:	mov	r2, r6
   1b740:	strd	r6, [sp]
   1b744:	ldr	r1, [sp, #28]
   1b748:	bl	13f60 <fprintf@plt>
   1b74c:	b	1b654 <__flatcc_gen_sort@@Base+0x2240>
   1b750:	movw	r0, #35528	; 0x8ac8
   1b754:	movt	r0, #4
   1b758:	mov	r2, #2
   1b75c:	mov	r1, #1
   1b760:	bl	13ef4 <fwrite@plt>
   1b764:	b	1b5d0 <__flatcc_gen_sort@@Base+0x21bc>
   1b768:	mov	r2, sl
   1b76c:	movw	r1, #35652	; 0x8b44
   1b770:	movt	r1, #4
   1b774:	add	sl, sl, #1
   1b778:	bl	13f60 <fprintf@plt>
   1b77c:	ldr	r4, [r4]
   1b780:	mov	r5, r8
   1b784:	cmp	r4, #0
   1b788:	bne	1b664 <__flatcc_gen_sort@@Base+0x2250>
   1b78c:	ldr	r3, [sp, #32]
   1b790:	cmp	r3, #0
   1b794:	ble	1b7b0 <__flatcc_gen_sort@@Base+0x239c>
   1b798:	movw	r0, #35520	; 0x8ac0
   1b79c:	movt	r0, #4
   1b7a0:	ldr	r3, [r9, #204]	; 0xcc
   1b7a4:	mov	r2, #4
   1b7a8:	mov	r1, #1
   1b7ac:	bl	13ef4 <fwrite@plt>
   1b7b0:	mov	r0, r5
   1b7b4:	add	sp, sp, #284	; 0x11c
   1b7b8:	ldrd	r4, [sp]
   1b7bc:	ldrd	r6, [sp, #8]
   1b7c0:	ldrd	r8, [sp, #16]
   1b7c4:	ldrd	sl, [sp, #24]
   1b7c8:	add	sp, sp, #32
   1b7cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b7d0:	mov	r2, r6
   1b7d4:	str	r5, [sp]
   1b7d8:	ldr	r1, [sp, #24]
   1b7dc:	bl	13f60 <fprintf@plt>
   1b7e0:	b	1b654 <__flatcc_gen_sort@@Base+0x2240>
   1b7e4:	tst	r3, #4
   1b7e8:	ldr	r0, [r9, #204]	; 0xcc
   1b7ec:	bne	1b958 <__flatcc_gen_sort@@Base+0x2544>
   1b7f0:	ldr	r3, [sp, #320]	; 0x140
   1b7f4:	cmp	r3, #0
   1b7f8:	beq	1b84c <__flatcc_gen_sort@@Base+0x2438>
   1b7fc:	movw	r1, #35592	; 0x8b08
   1b800:	movt	r1, #4
   1b804:	strd	r6, [sp]
   1b808:	add	r2, sp, #60	; 0x3c
   1b80c:	strd	r6, [sp, #8]
   1b810:	add	r5, r5, #1
   1b814:	ldr	r3, [sp, #36]	; 0x24
   1b818:	bl	13f60 <fprintf@plt>
   1b81c:	b	1b658 <__flatcc_gen_sort@@Base+0x2244>
   1b820:	ldr	r2, [sp, #320]	; 0x140
   1b824:	str	r6, [sp]
   1b828:	cmp	r2, #0
   1b82c:	beq	1baf8 <__flatcc_gen_sort@@Base+0x26e4>
   1b830:	movw	r1, #35856	; 0x8c10
   1b834:	movt	r1, #4
   1b838:	str	r7, [sp, #4]
   1b83c:	mov	r2, r9
   1b840:	strd	r6, [sp, #8]
   1b844:	bl	13f60 <fprintf@plt>
   1b848:	b	1b654 <__flatcc_gen_sort@@Base+0x2240>
   1b84c:	movw	r1, #35624	; 0x8b28
   1b850:	movt	r1, #4
   1b854:	strd	r6, [sp]
   1b858:	add	r2, sp, #60	; 0x3c
   1b85c:	ldr	r3, [sp, #36]	; 0x24
   1b860:	bl	13f60 <fprintf@plt>
   1b864:	ldr	r3, [r4, #16]
   1b868:	ldr	r1, [r3, #20]
   1b86c:	cmp	r1, #0
   1b870:	beq	1b948 <__flatcc_gen_sort@@Base+0x2534>
   1b874:	ldr	r8, [sp, #320]	; 0x140
   1b878:	ldrh	r3, [r1, #72]	; 0x48
   1b87c:	ands	r3, r3, #4
   1b880:	bne	1b894 <__flatcc_gen_sort@@Base+0x2480>
   1b884:	ldrh	r2, [r1, #24]
   1b888:	cmp	r2, #14
   1b88c:	beq	1b9e0 <__flatcc_gen_sort@@Base+0x25cc>
   1b890:	add	r8, r8, #1
   1b894:	ldr	r1, [r1]
   1b898:	cmp	r1, #0
   1b89c:	bne	1b878 <__flatcc_gen_sort@@Base+0x2464>
   1b8a0:	cmp	r8, #0
   1b8a4:	ble	1b948 <__flatcc_gen_sort@@Base+0x2534>
   1b8a8:	ldr	r3, [sp, #32]
   1b8ac:	cmp	r3, #0
   1b8b0:	beq	1bbdc <__flatcc_gen_sort@@Base+0x27c8>
   1b8b4:	cmp	r3, #4
   1b8b8:	mov	r6, r1
   1b8bc:	bgt	1bb44 <__flatcc_gen_sort@@Base+0x2730>
   1b8c0:	movw	r2, #4144	; 0x1030
   1b8c4:	movt	r2, #4
   1b8c8:	str	r4, [sp, #40]	; 0x28
   1b8cc:	movw	r3, #33020	; 0x80fc
   1b8d0:	movt	r3, #4
   1b8d4:	mov	r4, r3
   1b8d8:	str	r2, [sp, #44]	; 0x2c
   1b8dc:	movw	r2, #33012	; 0x80f4
   1b8e0:	movt	r2, #4
   1b8e4:	str	r2, [sp, #48]	; 0x30
   1b8e8:	cmp	r6, #0
   1b8ec:	add	r7, r5, r6
   1b8f0:	ldr	r3, [r9, #204]	; 0xcc
   1b8f4:	beq	1b910 <__flatcc_gen_sort@@Base+0x24fc>
   1b8f8:	tst	r6, #3
   1b8fc:	bne	1b910 <__flatcc_gen_sort@@Base+0x24fc>
   1b900:	ldr	r2, [sp, #32]
   1b904:	sub	r2, r2, r6
   1b908:	cmp	r2, #2
   1b90c:	bgt	1bc28 <__flatcc_gen_sort@@Base+0x2814>
   1b910:	mov	r2, #2
   1b914:	mov	r1, #1
   1b918:	mov	r0, r4
   1b91c:	bl	13ef4 <fwrite@plt>
   1b920:	ldr	r0, [r9, #204]	; 0xcc
   1b924:	mov	r2, r7
   1b928:	add	r6, r6, #1
   1b92c:	movw	r1, #35648	; 0x8b40
   1b930:	movt	r1, #4
   1b934:	bl	13f60 <fprintf@plt>
   1b938:	cmp	r8, r6
   1b93c:	bne	1b8e8 <__flatcc_gen_sort@@Base+0x24d4>
   1b940:	ldr	r4, [sp, #40]	; 0x28
   1b944:	add	r5, r8, r5
   1b948:	mov	r0, #41	; 0x29
   1b94c:	ldr	r1, [r9, #204]	; 0xcc
   1b950:	bl	13fc0 <fputc@plt>
   1b954:	b	1b658 <__flatcc_gen_sort@@Base+0x2244>
   1b958:	mov	r3, sl
   1b95c:	mov	r2, sl
   1b960:	movw	r1, #35532	; 0x8acc
   1b964:	movt	r1, #4
   1b968:	bl	13f60 <fprintf@plt>
   1b96c:	ldr	r3, [r4, #16]
   1b970:	add	sl, sl, #1
   1b974:	ldr	r1, [r3, #20]
   1b978:	cmp	r1, #0
   1b97c:	beq	1b658 <__flatcc_gen_sort@@Base+0x2244>
   1b980:	mov	r8, #0
   1b984:	ldrh	r3, [r1, #72]	; 0x48
   1b988:	ands	r3, r3, #4
   1b98c:	bne	1b9a0 <__flatcc_gen_sort@@Base+0x258c>
   1b990:	ldrh	r2, [r1, #24]
   1b994:	cmp	r2, #14
   1b998:	beq	1ba5c <__flatcc_gen_sort@@Base+0x2648>
   1b99c:	add	r8, r8, #1
   1b9a0:	ldr	r1, [r1]
   1b9a4:	cmp	r1, #0
   1b9a8:	bne	1b984 <__flatcc_gen_sort@@Base+0x2570>
   1b9ac:	add	r5, r5, r8
   1b9b0:	b	1b658 <__flatcc_gen_sort@@Base+0x2244>
   1b9b4:	ldr	r3, [sp, #320]	; 0x140
   1b9b8:	str	r7, [sp]
   1b9bc:	cmp	r3, #0
   1b9c0:	mov	r3, r6
   1b9c4:	beq	1bb14 <__flatcc_gen_sort@@Base+0x2700>
   1b9c8:	movw	r1, #35676	; 0x8b5c
   1b9cc:	movt	r1, #4
   1b9d0:	strd	r6, [sp, #4]
   1b9d4:	add	r2, sp, #60	; 0x3c
   1b9d8:	bl	13f60 <fprintf@plt>
   1b9dc:	b	1b654 <__flatcc_gen_sort@@Base+0x2240>
   1b9e0:	ldr	r2, [r1, #16]
   1b9e4:	ldrh	r0, [r2, #8]
   1b9e8:	cmp	r0, #1
   1b9ec:	bne	1b890 <__flatcc_gen_sort@@Base+0x247c>
   1b9f0:	ldr	r2, [r2, #20]
   1b9f4:	cmp	r2, #0
   1b9f8:	beq	1b894 <__flatcc_gen_sort@@Base+0x2480>
   1b9fc:	mov	r6, r2
   1ba00:	mov	r7, r3
   1ba04:	str	r9, [sp, #44]	; 0x2c
   1ba08:	mov	r2, fp
   1ba0c:	mov	r9, r1
   1ba10:	mov	fp, r5
   1ba14:	mov	r5, r4
   1ba18:	ldrh	r1, [r6, #72]	; 0x48
   1ba1c:	ands	r1, r1, #4
   1ba20:	bne	1ba34 <__flatcc_gen_sort@@Base+0x2620>
   1ba24:	ldrh	r0, [r6, #24]
   1ba28:	cmp	r0, #14
   1ba2c:	beq	1bc40 <__flatcc_gen_sort@@Base+0x282c>
   1ba30:	add	r7, r7, #1
   1ba34:	ldr	r6, [r6]
   1ba38:	cmp	r6, #0
   1ba3c:	bne	1ba18 <__flatcc_gen_sort@@Base+0x2604>
   1ba40:	mov	r4, r5
   1ba44:	mov	r1, r9
   1ba48:	ldr	r9, [sp, #44]	; 0x2c
   1ba4c:	mov	r5, fp
   1ba50:	add	r8, r8, r7
   1ba54:	mov	fp, r2
   1ba58:	b	1b894 <__flatcc_gen_sort@@Base+0x2480>
   1ba5c:	ldr	r2, [r1, #16]
   1ba60:	ldrh	r0, [r2, #8]
   1ba64:	cmp	r0, #1
   1ba68:	bne	1b99c <__flatcc_gen_sort@@Base+0x2588>
   1ba6c:	ldr	r2, [r2, #20]
   1ba70:	cmp	r2, #0
   1ba74:	beq	1b9a0 <__flatcc_gen_sort@@Base+0x258c>
   1ba78:	mov	r6, r2
   1ba7c:	mov	r7, r3
   1ba80:	str	r9, [sp, #44]	; 0x2c
   1ba84:	mov	r2, fp
   1ba88:	mov	r9, r8
   1ba8c:	mov	fp, r5
   1ba90:	mov	r8, r4
   1ba94:	mov	r5, r1
   1ba98:	ldrh	r1, [r6, #72]	; 0x48
   1ba9c:	ands	r1, r1, #4
   1baa0:	bne	1bab4 <__flatcc_gen_sort@@Base+0x26a0>
   1baa4:	ldrh	r0, [r6, #24]
   1baa8:	cmp	r0, #14
   1baac:	beq	1bcc4 <__flatcc_gen_sort@@Base+0x28b0>
   1bab0:	add	r7, r7, #1
   1bab4:	ldr	r6, [r6]
   1bab8:	cmp	r6, #0
   1babc:	bne	1ba98 <__flatcc_gen_sort@@Base+0x2684>
   1bac0:	mov	r1, r5
   1bac4:	mov	r4, r8
   1bac8:	mov	r5, fp
   1bacc:	add	r8, r9, r7
   1bad0:	ldr	r9, [sp, #44]	; 0x2c
   1bad4:	mov	fp, r2
   1bad8:	b	1b9a0 <__flatcc_gen_sort@@Base+0x258c>
   1badc:	movw	r1, #35972	; 0x8c84
   1bae0:	movt	r1, #4
   1bae4:	str	r7, [sp, #4]
   1bae8:	mov	r2, r9
   1baec:	str	r5, [sp, #8]
   1baf0:	bl	13f60 <fprintf@plt>
   1baf4:	b	1b654 <__flatcc_gen_sort@@Base+0x2240>
   1baf8:	movw	r1, #35896	; 0x8c38
   1bafc:	movt	r1, #4
   1bb00:	str	r7, [sp, #4]
   1bb04:	mov	r2, r9
   1bb08:	str	r5, [sp, #8]
   1bb0c:	bl	13f60 <fprintf@plt>
   1bb10:	b	1b654 <__flatcc_gen_sort@@Base+0x2240>
   1bb14:	movw	r1, #35716	; 0x8b84
   1bb18:	movt	r1, #4
   1bb1c:	str	r5, [sp, #4]
   1bb20:	add	r2, sp, #60	; 0x3c
   1bb24:	bl	13f60 <fprintf@plt>
   1bb28:	b	1b654 <__flatcc_gen_sort@@Base+0x2240>
   1bb2c:	movw	r1, #35788	; 0x8bcc
   1bb30:	movt	r1, #4
   1bb34:	str	r5, [sp, #4]
   1bb38:	add	r2, sp, #60	; 0x3c
   1bb3c:	bl	13f60 <fprintf@plt>
   1bb40:	b	1b654 <__flatcc_gen_sort@@Base+0x2240>
   1bb44:	movw	r3, #4144	; 0x1030
   1bb48:	movt	r3, #4
   1bb4c:	str	r3, [sp, #44]	; 0x2c
   1bb50:	movw	r3, #33012	; 0x80f4
   1bb54:	movt	r3, #4
   1bb58:	str	r3, [sp, #48]	; 0x30
   1bb5c:	movw	r3, #33020	; 0x80fc
   1bb60:	movt	r3, #4
   1bb64:	str	r3, [sp, #40]	; 0x28
   1bb68:	b	1bb9c <__flatcc_gen_sort@@Base+0x2788>
   1bb6c:	mov	r0, r3
   1bb70:	ldr	r2, [sp, #44]	; 0x2c
   1bb74:	ldr	r1, [sp, #48]	; 0x30
   1bb78:	bl	13f60 <fprintf@plt>
   1bb7c:	ldr	r0, [r9, #204]	; 0xcc
   1bb80:	mov	r2, r7
   1bb84:	add	r6, r6, #1
   1bb88:	movw	r1, #35648	; 0x8b40
   1bb8c:	movt	r1, #4
   1bb90:	bl	13f60 <fprintf@plt>
   1bb94:	cmp	r8, r6
   1bb98:	beq	1b944 <__flatcc_gen_sort@@Base+0x2530>
   1bb9c:	cmp	r6, #0
   1bba0:	add	r7, r6, r5
   1bba4:	ldr	r3, [r9, #204]	; 0xcc
   1bba8:	beq	1bb6c <__flatcc_gen_sort@@Base+0x2758>
   1bbac:	tst	r6, #3
   1bbb0:	bne	1bbc4 <__flatcc_gen_sort@@Base+0x27b0>
   1bbb4:	ldr	r2, [sp, #32]
   1bbb8:	sub	r2, r2, r6
   1bbbc:	cmp	r2, #2
   1bbc0:	bgt	1bb6c <__flatcc_gen_sort@@Base+0x2758>
   1bbc4:	mov	r2, #2
   1bbc8:	mov	r1, #1
   1bbcc:	ldr	r0, [sp, #40]	; 0x28
   1bbd0:	bl	13ef4 <fwrite@plt>
   1bbd4:	ldr	r0, [r9, #204]	; 0xcc
   1bbd8:	b	1bb80 <__flatcc_gen_sort@@Base+0x276c>
   1bbdc:	movw	r6, #35648	; 0x8b40
   1bbe0:	movt	r6, #4
   1bbe4:	add	r8, r5, r8
   1bbe8:	mov	r2, r5
   1bbec:	add	r5, r5, #1
   1bbf0:	mov	r1, r6
   1bbf4:	ldr	r0, [r9, #204]	; 0xcc
   1bbf8:	bl	13f60 <fprintf@plt>
   1bbfc:	cmp	r5, r8
   1bc00:	mov	r2, r5
   1bc04:	bne	1bbec <__flatcc_gen_sort@@Base+0x27d8>
   1bc08:	mov	r0, #41	; 0x29
   1bc0c:	ldr	r1, [r9, #204]	; 0xcc
   1bc10:	bl	13fc0 <fputc@plt>
   1bc14:	b	1b658 <__flatcc_gen_sort@@Base+0x2244>
   1bc18:	movw	r3, #35508	; 0x8ab4
   1bc1c:	movt	r3, #4
   1bc20:	str	r3, [sp, #36]	; 0x24
   1bc24:	b	1b588 <__flatcc_gen_sort@@Base+0x2174>
   1bc28:	mov	r0, r3
   1bc2c:	ldr	r2, [sp, #44]	; 0x2c
   1bc30:	ldr	r1, [sp, #48]	; 0x30
   1bc34:	bl	13f60 <fprintf@plt>
   1bc38:	ldr	r0, [r9, #204]	; 0xcc
   1bc3c:	b	1b924 <__flatcc_gen_sort@@Base+0x2510>
   1bc40:	ldr	r0, [r6, #16]
   1bc44:	ldrh	ip, [r0, #8]
   1bc48:	cmp	ip, #1
   1bc4c:	bne	1ba30 <__flatcc_gen_sort@@Base+0x261c>
   1bc50:	ldr	r3, [r0, #20]
   1bc54:	cmp	r3, #0
   1bc58:	beq	1ba34 <__flatcc_gen_sort@@Base+0x2620>
   1bc5c:	str	r1, [sp, #40]	; 0x28
   1bc60:	mov	r1, fp
   1bc64:	mov	fp, r7
   1bc68:	mov	r7, r6
   1bc6c:	mov	r6, r5
   1bc70:	mov	r5, r3
   1bc74:	mov	r3, r1
   1bc78:	ldrh	r1, [r5, #72]	; 0x48
   1bc7c:	ands	r1, r1, #4
   1bc80:	bne	1bc9c <__flatcc_gen_sort@@Base+0x2888>
   1bc84:	ldrh	r0, [r5, #24]
   1bc88:	cmp	r0, #14
   1bc8c:	beq	1bd94 <__flatcc_gen_sort@@Base+0x2980>
   1bc90:	ldr	r1, [sp, #40]	; 0x28
   1bc94:	add	r1, r1, #1
   1bc98:	str	r1, [sp, #40]	; 0x28
   1bc9c:	ldr	r5, [r5]
   1bca0:	cmp	r5, #0
   1bca4:	bne	1bc78 <__flatcc_gen_sort@@Base+0x2864>
   1bca8:	mov	r5, r6
   1bcac:	mov	r6, r7
   1bcb0:	mov	r7, fp
   1bcb4:	mov	fp, r3
   1bcb8:	ldr	r3, [sp, #40]	; 0x28
   1bcbc:	add	r7, r7, r3
   1bcc0:	b	1ba34 <__flatcc_gen_sort@@Base+0x2620>
   1bcc4:	ldr	r0, [r6, #16]
   1bcc8:	ldrh	ip, [r0, #8]
   1bccc:	cmp	ip, #1
   1bcd0:	bne	1bab0 <__flatcc_gen_sort@@Base+0x269c>
   1bcd4:	ldr	r3, [r0, #20]
   1bcd8:	cmp	r3, #0
   1bcdc:	beq	1bab4 <__flatcc_gen_sort@@Base+0x26a0>
   1bce0:	str	r1, [sp, #40]	; 0x28
   1bce4:	mov	r1, fp
   1bce8:	mov	fp, r7
   1bcec:	mov	r7, r6
   1bcf0:	mov	r6, r5
   1bcf4:	mov	r5, r3
   1bcf8:	mov	r3, r1
   1bcfc:	ldrh	r1, [r5, #72]	; 0x48
   1bd00:	ands	r1, r1, #4
   1bd04:	bne	1bd20 <__flatcc_gen_sort@@Base+0x290c>
   1bd08:	ldrh	r0, [r5, #24]
   1bd0c:	cmp	r0, #14
   1bd10:	beq	1bdec <__flatcc_gen_sort@@Base+0x29d8>
   1bd14:	ldr	r1, [sp, #40]	; 0x28
   1bd18:	add	r1, r1, #1
   1bd1c:	str	r1, [sp, #40]	; 0x28
   1bd20:	ldr	r5, [r5]
   1bd24:	cmp	r5, #0
   1bd28:	bne	1bcfc <__flatcc_gen_sort@@Base+0x28e8>
   1bd2c:	mov	r5, r6
   1bd30:	mov	r6, r7
   1bd34:	mov	r7, fp
   1bd38:	mov	fp, r3
   1bd3c:	ldr	r3, [sp, #40]	; 0x28
   1bd40:	add	r7, r7, r3
   1bd44:	b	1bab4 <__flatcc_gen_sort@@Base+0x26a0>
   1bd48:	movw	r1, #36008	; 0x8ca8
   1bd4c:	movt	r1, #4
   1bd50:	movw	r3, #41128	; 0xa0a8
   1bd54:	movt	r3, #6
   1bd58:	movw	r2, #32768	; 0x8000
   1bd5c:	movt	r2, #4
   1bd60:	str	r1, [sp]
   1bd64:	movw	r1, #64544	; 0xfc20
   1bd68:	movt	r1, #3
   1bd6c:	ldr	r0, [r3]
   1bd70:	movw	r3, #993	; 0x3e1
   1bd74:	bl	13f60 <fprintf@plt>
   1bd78:	movw	r1, #32768	; 0x8000
   1bd7c:	movt	r1, #4
   1bd80:	ldr	r3, [pc, #360]	; 1bef0 <__flatcc_gen_sort@@Base+0x2adc>
   1bd84:	movw	r0, #35672	; 0x8b58
   1bd88:	movt	r0, #4
   1bd8c:	movw	r2, #993	; 0x3e1
   1bd90:	bl	14014 <__assert_fail@plt>
   1bd94:	ldr	r0, [r5, #16]
   1bd98:	ldrh	ip, [r0, #8]
   1bd9c:	cmp	ip, #1
   1bda0:	bne	1bc90 <__flatcc_gen_sort@@Base+0x287c>
   1bda4:	ldr	r4, [r0, #20]
   1bda8:	cmp	r4, #0
   1bdac:	moveq	r1, r4
   1bdb0:	beq	1bddc <__flatcc_gen_sort@@Base+0x29c8>
   1bdb4:	ldrh	r0, [r4, #72]	; 0x48
   1bdb8:	tst	r0, #4
   1bdbc:	bne	1bdd0 <__flatcc_gen_sort@@Base+0x29bc>
   1bdc0:	ldrh	r0, [r4, #24]
   1bdc4:	cmp	r0, #14
   1bdc8:	beq	1bec0 <__flatcc_gen_sort@@Base+0x2aac>
   1bdcc:	add	r1, r1, #1
   1bdd0:	ldr	r4, [r4]
   1bdd4:	cmp	r4, #0
   1bdd8:	bne	1bdb4 <__flatcc_gen_sort@@Base+0x29a0>
   1bddc:	ldr	r0, [sp, #40]	; 0x28
   1bde0:	add	r1, r0, r1
   1bde4:	str	r1, [sp, #40]	; 0x28
   1bde8:	b	1bc9c <__flatcc_gen_sort@@Base+0x2888>
   1bdec:	ldr	r0, [r5, #16]
   1bdf0:	ldrh	ip, [r0, #8]
   1bdf4:	cmp	ip, #1
   1bdf8:	bne	1bd14 <__flatcc_gen_sort@@Base+0x2900>
   1bdfc:	ldr	r4, [r0, #20]
   1be00:	cmp	r4, #0
   1be04:	moveq	r1, r4
   1be08:	beq	1be34 <__flatcc_gen_sort@@Base+0x2a20>
   1be0c:	ldrh	r0, [r4, #72]	; 0x48
   1be10:	tst	r0, #4
   1be14:	bne	1be28 <__flatcc_gen_sort@@Base+0x2a14>
   1be18:	ldrh	r0, [r4, #24]
   1be1c:	cmp	r0, #14
   1be20:	beq	1be90 <__flatcc_gen_sort@@Base+0x2a7c>
   1be24:	add	r1, r1, #1
   1be28:	ldr	r4, [r4]
   1be2c:	cmp	r4, #0
   1be30:	bne	1be0c <__flatcc_gen_sort@@Base+0x29f8>
   1be34:	ldr	r0, [sp, #40]	; 0x28
   1be38:	add	r1, r0, r1
   1be3c:	str	r1, [sp, #40]	; 0x28
   1be40:	b	1bd20 <__flatcc_gen_sort@@Base+0x290c>
   1be44:	movw	r1, #64556	; 0xfc2c
   1be48:	movt	r1, #3
   1be4c:	movw	r3, #41128	; 0xa0a8
   1be50:	movt	r3, #6
   1be54:	movw	r2, #64468	; 0xfbd4
   1be58:	movt	r2, #3
   1be5c:	str	r1, [sp]
   1be60:	movw	r1, #64544	; 0xfc20
   1be64:	movt	r1, #3
   1be68:	ldr	r0, [r3]
   1be6c:	mov	r3, #96	; 0x60
   1be70:	bl	13f60 <fprintf@plt>
   1be74:	movw	r1, #64468	; 0xfbd4
   1be78:	movt	r1, #3
   1be7c:	ldr	r3, [pc, #112]	; 1bef4 <__flatcc_gen_sort@@Base+0x2ae0>
   1be80:	movw	r0, #35672	; 0x8b58
   1be84:	movt	r0, #4
   1be88:	mov	r2, #96	; 0x60
   1be8c:	bl	14014 <__assert_fail@plt>
   1be90:	ldr	r0, [r4, #16]
   1be94:	ldrh	ip, [r0, #8]
   1be98:	cmp	ip, #1
   1be9c:	bne	1be24 <__flatcc_gen_sort@@Base+0x2a10>
   1bea0:	ldr	r0, [r0, #20]
   1bea4:	str	r3, [sp, #48]	; 0x30
   1bea8:	str	r2, [sp, #52]	; 0x34
   1beac:	bl	19798 <__flatcc_gen_sort@@Base+0x384>
   1beb0:	add	r1, r1, r0
   1beb4:	ldr	r3, [sp, #48]	; 0x30
   1beb8:	ldr	r2, [sp, #52]	; 0x34
   1bebc:	b	1be28 <__flatcc_gen_sort@@Base+0x2a14>
   1bec0:	ldr	r0, [r4, #16]
   1bec4:	ldrh	ip, [r0, #8]
   1bec8:	cmp	ip, #1
   1becc:	bne	1bdcc <__flatcc_gen_sort@@Base+0x29b8>
   1bed0:	ldr	r0, [r0, #20]
   1bed4:	str	r3, [sp, #48]	; 0x30
   1bed8:	str	r2, [sp, #52]	; 0x34
   1bedc:	bl	19798 <__flatcc_gen_sort@@Base+0x384>
   1bee0:	add	r1, r1, r0
   1bee4:	ldr	r3, [sp, #48]	; 0x30
   1bee8:	ldr	r2, [sp, #52]	; 0x34
   1beec:	b	1bdd0 <__flatcc_gen_sort@@Base+0x29bc>
   1bef0:	andeq	r7, r4, ip, lsr pc
   1bef4:	andeq	r7, r4, ip, lsl pc

0001bef8 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1bef8:	strd	r4, [sp, #-12]!
   1befc:	add	r5, r0, #102	; 0x66
   1bf00:	mov	r4, r0
   1bf04:	mov	r2, r5
   1bf08:	movw	r1, #36036	; 0x8cc4
   1bf0c:	movt	r1, #4
   1bf10:	ldr	r0, [r0, #204]	; 0xcc
   1bf14:	str	lr, [sp, #8]
   1bf18:	sub	sp, sp, #12
   1bf1c:	bl	13f60 <fprintf@plt>
   1bf20:	mov	r2, r5
   1bf24:	movw	r1, #36068	; 0x8ce4
   1bf28:	movt	r1, #4
   1bf2c:	ldr	r0, [r4, #204]	; 0xcc
   1bf30:	bl	13f60 <fprintf@plt>
   1bf34:	mov	r2, #81	; 0x51
   1bf38:	mov	r1, #1
   1bf3c:	ldr	r3, [r4, #204]	; 0xcc
   1bf40:	movw	r0, #3788	; 0xecc
   1bf44:	movt	r0, #4
   1bf48:	bl	13ef4 <fwrite@plt>
   1bf4c:	mov	r2, #53	; 0x35
   1bf50:	movw	r0, #36100	; 0x8d04
   1bf54:	movt	r0, #4
   1bf58:	mov	r1, #1
   1bf5c:	ldr	r3, [r4, #204]	; 0xcc
   1bf60:	bl	13ef4 <fwrite@plt>
   1bf64:	ldr	r3, [r4, #204]	; 0xcc
   1bf68:	ldr	r2, [r4, #212]	; 0xd4
   1bf6c:	ldr	r2, [r2, #140]	; 0x8c
   1bf70:	cmp	r2, #0
   1bf74:	bne	1c6e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   1bf78:	mov	r2, #22
   1bf7c:	mov	r1, #1
   1bf80:	movw	r0, #36156	; 0x8d3c
   1bf84:	movt	r0, #4
   1bf88:	bl	13ef4 <fwrite@plt>
   1bf8c:	mov	r2, #35	; 0x23
   1bf90:	mov	r1, #1
   1bf94:	ldr	r3, [r4, #204]	; 0xcc
   1bf98:	movw	r0, #36180	; 0x8d54
   1bf9c:	movt	r0, #4
   1bfa0:	bl	13ef4 <fwrite@plt>
   1bfa4:	mov	r2, #7
   1bfa8:	mov	r1, #1
   1bfac:	ldr	r3, [r4, #204]	; 0xcc
   1bfb0:	movw	r0, #28840	; 0x70a8
   1bfb4:	movt	r0, #4
   1bfb8:	bl	13ef4 <fwrite@plt>
   1bfbc:	movw	r1, #36216	; 0x8d78
   1bfc0:	movt	r1, #4
   1bfc4:	mov	r0, r4
   1bfc8:	bl	13e94 <strcmp@plt>
   1bfcc:	cmp	r0, #0
   1bfd0:	bne	1c748 <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   1bfd4:	mov	r3, r4
   1bfd8:	mov	r2, r4
   1bfdc:	ldr	r0, [r4, #204]	; 0xcc
   1bfe0:	movw	r1, #36556	; 0x8ecc
   1bfe4:	movt	r1, #4
   1bfe8:	bl	13f60 <fprintf@plt>
   1bfec:	mov	r3, r4
   1bff0:	mov	r2, r4
   1bff4:	ldr	r0, [r4, #204]	; 0xcc
   1bff8:	movw	r1, #36584	; 0x8ee8
   1bffc:	movt	r1, #4
   1c000:	bl	13f60 <fprintf@plt>
   1c004:	movw	r1, #4148	; 0x1034
   1c008:	movt	r1, #4
   1c00c:	mov	r0, r4
   1c010:	bl	13e94 <strcmp@plt>
   1c014:	cmp	r0, #0
   1c018:	bne	1c71c <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1c01c:	mov	r0, #10
   1c020:	ldr	r1, [r4, #204]	; 0xcc
   1c024:	bl	13fc0 <fputc@plt>
   1c028:	mov	r2, r4
   1c02c:	movw	r1, #36712	; 0x8f68
   1c030:	movt	r1, #4
   1c034:	ldr	r0, [r4, #204]	; 0xcc
   1c038:	bl	13f60 <fprintf@plt>
   1c03c:	mov	r2, r4
   1c040:	movw	r1, #37596	; 0x92dc
   1c044:	movt	r1, #4
   1c048:	ldr	r0, [r4, #204]	; 0xcc
   1c04c:	bl	13f60 <fprintf@plt>
   1c050:	mov	r3, r4
   1c054:	mov	r2, r4
   1c058:	str	r4, [sp]
   1c05c:	movw	r1, #39336	; 0x99a8
   1c060:	movt	r1, #4
   1c064:	ldr	r0, [r4, #204]	; 0xcc
   1c068:	bl	13f60 <fprintf@plt>
   1c06c:	mov	r2, r4
   1c070:	movw	r1, #39476	; 0x9a34
   1c074:	movt	r1, #4
   1c078:	ldr	r0, [r4, #204]	; 0xcc
   1c07c:	bl	13f60 <fprintf@plt>
   1c080:	mov	r2, r4
   1c084:	movw	r1, #42224	; 0xa4f0
   1c088:	movt	r1, #4
   1c08c:	ldr	r0, [r4, #204]	; 0xcc
   1c090:	bl	13f60 <fprintf@plt>
   1c094:	mov	r2, r4
   1c098:	movw	r1, #43212	; 0xa8cc
   1c09c:	movt	r1, #4
   1c0a0:	ldr	r0, [r4, #204]	; 0xcc
   1c0a4:	bl	13f60 <fprintf@plt>
   1c0a8:	mov	r2, r4
   1c0ac:	movw	r1, #44804	; 0xaf04
   1c0b0:	movt	r1, #4
   1c0b4:	ldr	r0, [r4, #204]	; 0xcc
   1c0b8:	bl	13f60 <fprintf@plt>
   1c0bc:	mov	r3, r4
   1c0c0:	mov	r2, r4
   1c0c4:	ldr	r0, [r4, #204]	; 0xcc
   1c0c8:	movw	r1, #45952	; 0xb380
   1c0cc:	movt	r1, #4
   1c0d0:	bl	13f60 <fprintf@plt>
   1c0d4:	mov	r3, r4
   1c0d8:	mov	r2, r4
   1c0dc:	str	r4, [sp]
   1c0e0:	movw	r1, #47860	; 0xbaf4
   1c0e4:	movt	r1, #4
   1c0e8:	ldr	r0, [r4, #204]	; 0xcc
   1c0ec:	bl	13f60 <fprintf@plt>
   1c0f0:	mov	r2, r4
   1c0f4:	movw	r1, #49212	; 0xc03c
   1c0f8:	movt	r1, #4
   1c0fc:	ldr	r0, [r4, #204]	; 0xcc
   1c100:	bl	13f60 <fprintf@plt>
   1c104:	mov	r2, r4
   1c108:	movw	r1, #50364	; 0xc4bc
   1c10c:	movt	r1, #4
   1c110:	ldr	r0, [r4, #204]	; 0xcc
   1c114:	bl	13f60 <fprintf@plt>
   1c118:	mov	r2, r4
   1c11c:	movw	r1, #50764	; 0xc64c
   1c120:	movt	r1, #4
   1c124:	ldr	r0, [r4, #204]	; 0xcc
   1c128:	bl	13f60 <fprintf@plt>
   1c12c:	mov	r3, r4
   1c130:	mov	r2, r4
   1c134:	ldr	r0, [r4, #204]	; 0xcc
   1c138:	movw	r1, #51624	; 0xc9a8
   1c13c:	movt	r1, #4
   1c140:	bl	13f60 <fprintf@plt>
   1c144:	mov	r2, r4
   1c148:	movw	r1, #52144	; 0xcbb0
   1c14c:	movt	r1, #4
   1c150:	ldr	r0, [r4, #204]	; 0xcc
   1c154:	bl	13f60 <fprintf@plt>
   1c158:	mov	r3, r4
   1c15c:	mov	r2, r4
   1c160:	str	r4, [sp]
   1c164:	movw	r1, #53020	; 0xcf1c
   1c168:	movt	r1, #4
   1c16c:	ldr	r0, [r4, #204]	; 0xcc
   1c170:	bl	13f60 <fprintf@plt>
   1c174:	mov	r3, r4
   1c178:	mov	r2, r4
   1c17c:	str	r4, [sp]
   1c180:	movw	r1, #54296	; 0xd418
   1c184:	movt	r1, #4
   1c188:	str	r4, [sp, #4]
   1c18c:	ldr	r0, [r4, #204]	; 0xcc
   1c190:	bl	13f60 <fprintf@plt>
   1c194:	mov	r3, r4
   1c198:	mov	r2, r4
   1c19c:	ldr	r0, [r4, #204]	; 0xcc
   1c1a0:	movw	r1, #54564	; 0xd524
   1c1a4:	movt	r1, #4
   1c1a8:	bl	13f60 <fprintf@plt>
   1c1ac:	mov	r3, r4
   1c1b0:	mov	r2, r4
   1c1b4:	str	r4, [sp]
   1c1b8:	movw	r1, #55436	; 0xd88c
   1c1bc:	movt	r1, #4
   1c1c0:	str	r4, [sp, #4]
   1c1c4:	ldr	r0, [r4, #204]	; 0xcc
   1c1c8:	bl	13f60 <fprintf@plt>
   1c1cc:	mov	r3, r4
   1c1d0:	mov	r2, r4
   1c1d4:	ldr	r0, [r4, #204]	; 0xcc
   1c1d8:	movw	r1, #56972	; 0xde8c
   1c1dc:	movt	r1, #4
   1c1e0:	bl	13f60 <fprintf@plt>
   1c1e4:	mov	r2, r4
   1c1e8:	movw	r1, #57408	; 0xe040
   1c1ec:	movt	r1, #4
   1c1f0:	ldr	r0, [r4, #204]	; 0xcc
   1c1f4:	bl	13f60 <fprintf@plt>
   1c1f8:	mov	r2, r4
   1c1fc:	movw	r1, #57960	; 0xe268
   1c200:	movt	r1, #4
   1c204:	ldr	r0, [r4, #204]	; 0xcc
   1c208:	bl	13f60 <fprintf@plt>
   1c20c:	mov	r2, r4
   1c210:	movw	r1, #58920	; 0xe628
   1c214:	movt	r1, #4
   1c218:	ldr	r0, [r4, #204]	; 0xcc
   1c21c:	bl	13f60 <fprintf@plt>
   1c220:	mov	r2, r4
   1c224:	movw	r1, #59624	; 0xe8e8
   1c228:	movt	r1, #4
   1c22c:	ldr	r0, [r4, #204]	; 0xcc
   1c230:	bl	13f60 <fprintf@plt>
   1c234:	mov	r3, r4
   1c238:	mov	r2, r4
   1c23c:	ldr	r0, [r4, #204]	; 0xcc
   1c240:	movw	r1, #60668	; 0xecfc
   1c244:	movt	r1, #4
   1c248:	bl	13f60 <fprintf@plt>
   1c24c:	mov	r2, r4
   1c250:	movw	r1, #60904	; 0xede8
   1c254:	movt	r1, #4
   1c258:	ldr	r0, [r4, #204]	; 0xcc
   1c25c:	bl	13f60 <fprintf@plt>
   1c260:	mov	r2, r4
   1c264:	movw	r1, #61516	; 0xf04c
   1c268:	movt	r1, #4
   1c26c:	ldr	r0, [r4, #204]	; 0xcc
   1c270:	bl	13f60 <fprintf@plt>
   1c274:	mov	r3, r4
   1c278:	mov	r2, r4
   1c27c:	ldr	r0, [r4, #204]	; 0xcc
   1c280:	movw	r1, #62404	; 0xf3c4
   1c284:	movt	r1, #4
   1c288:	bl	13f60 <fprintf@plt>
   1c28c:	mov	r3, r4
   1c290:	mov	r2, r4
   1c294:	ldr	r0, [r4, #204]	; 0xcc
   1c298:	movw	r1, #63508	; 0xf814
   1c29c:	movt	r1, #4
   1c2a0:	bl	13f60 <fprintf@plt>
   1c2a4:	mov	r3, r4
   1c2a8:	mov	r2, r4
   1c2ac:	ldr	r0, [r4, #204]	; 0xcc
   1c2b0:	movw	r1, #64172	; 0xfaac
   1c2b4:	movt	r1, #4
   1c2b8:	bl	13f60 <fprintf@plt>
   1c2bc:	mov	r3, r4
   1c2c0:	mov	r2, r4
   1c2c4:	ldr	r0, [r4, #204]	; 0xcc
   1c2c8:	movw	r1, #65192	; 0xfea8
   1c2cc:	movt	r1, #4
   1c2d0:	bl	13f60 <fprintf@plt>
   1c2d4:	mov	r3, r4
   1c2d8:	mov	r2, r4
   1c2dc:	str	r4, [sp]
   1c2e0:	movw	r1, #65460	; 0xffb4
   1c2e4:	movt	r1, #4
   1c2e8:	ldr	r0, [r4, #204]	; 0xcc
   1c2ec:	bl	13f60 <fprintf@plt>
   1c2f0:	mov	r3, r4
   1c2f4:	mov	r2, r4
   1c2f8:	ldr	r0, [r4, #204]	; 0xcc
   1c2fc:	movw	r1, #64	; 0x40
   1c300:	movt	r1, #5
   1c304:	bl	13f60 <fprintf@plt>
   1c308:	mov	r2, r4
   1c30c:	movw	r1, #908	; 0x38c
   1c310:	movt	r1, #5
   1c314:	ldr	r0, [r4, #204]	; 0xcc
   1c318:	bl	13f60 <fprintf@plt>
   1c31c:	mov	r2, r4
   1c320:	movw	r1, #1556	; 0x614
   1c324:	movt	r1, #5
   1c328:	ldr	r0, [r4, #204]	; 0xcc
   1c32c:	bl	13f60 <fprintf@plt>
   1c330:	mov	r2, r4
   1c334:	movw	r1, #2212	; 0x8a4
   1c338:	movt	r1, #5
   1c33c:	ldr	r0, [r4, #204]	; 0xcc
   1c340:	bl	13f60 <fprintf@plt>
   1c344:	mov	r3, r4
   1c348:	mov	r2, r4
   1c34c:	str	r4, [sp]
   1c350:	movw	r1, #3676	; 0xe5c
   1c354:	movt	r1, #5
   1c358:	ldr	r0, [r4, #204]	; 0xcc
   1c35c:	bl	13f60 <fprintf@plt>
   1c360:	mov	r2, r4
   1c364:	movw	r1, #3820	; 0xeec
   1c368:	movt	r1, #5
   1c36c:	ldr	r0, [r4, #204]	; 0xcc
   1c370:	bl	13f60 <fprintf@plt>
   1c374:	mov	r2, r4
   1c378:	movw	r1, #3864	; 0xf18
   1c37c:	movt	r1, #5
   1c380:	ldr	r0, [r4, #204]	; 0xcc
   1c384:	bl	13f60 <fprintf@plt>
   1c388:	mov	r2, r4
   1c38c:	movw	r1, #3900	; 0xf3c
   1c390:	movt	r1, #5
   1c394:	ldr	r0, [r4, #204]	; 0xcc
   1c398:	bl	13f60 <fprintf@plt>
   1c39c:	mov	r2, r4
   1c3a0:	movw	r1, #3944	; 0xf68
   1c3a4:	movt	r1, #5
   1c3a8:	ldr	r0, [r4, #204]	; 0xcc
   1c3ac:	bl	13f60 <fprintf@plt>
   1c3b0:	mov	r3, r4
   1c3b4:	mov	r2, r4
   1c3b8:	ldr	r0, [r4, #204]	; 0xcc
   1c3bc:	movw	r1, #3980	; 0xf8c
   1c3c0:	movt	r1, #5
   1c3c4:	bl	13f60 <fprintf@plt>
   1c3c8:	mov	r2, r4
   1c3cc:	movw	r1, #4024	; 0xfb8
   1c3d0:	movt	r1, #5
   1c3d4:	ldr	r0, [r4, #204]	; 0xcc
   1c3d8:	bl	13f60 <fprintf@plt>
   1c3dc:	mov	r2, r4
   1c3e0:	movw	r1, #4060	; 0xfdc
   1c3e4:	movt	r1, #5
   1c3e8:	ldr	r0, [r4, #204]	; 0xcc
   1c3ec:	bl	13f60 <fprintf@plt>
   1c3f0:	mov	r2, r4
   1c3f4:	movw	r1, #4108	; 0x100c
   1c3f8:	movt	r1, #5
   1c3fc:	ldr	r0, [r4, #204]	; 0xcc
   1c400:	bl	13f60 <fprintf@plt>
   1c404:	mov	r2, r4
   1c408:	movw	r1, #4144	; 0x1030
   1c40c:	movt	r1, #5
   1c410:	ldr	r0, [r4, #204]	; 0xcc
   1c414:	bl	13f60 <fprintf@plt>
   1c418:	mov	r2, r4
   1c41c:	movw	r1, #4192	; 0x1060
   1c420:	movt	r1, #5
   1c424:	ldr	r0, [r4, #204]	; 0xcc
   1c428:	bl	13f60 <fprintf@plt>
   1c42c:	mov	r2, r4
   1c430:	movw	r1, #4228	; 0x1084
   1c434:	movt	r1, #5
   1c438:	ldr	r0, [r4, #204]	; 0xcc
   1c43c:	bl	13f60 <fprintf@plt>
   1c440:	mov	r2, r4
   1c444:	movw	r1, #4276	; 0x10b4
   1c448:	movt	r1, #5
   1c44c:	ldr	r0, [r4, #204]	; 0xcc
   1c450:	bl	13f60 <fprintf@plt>
   1c454:	mov	r2, r4
   1c458:	movw	r1, #4312	; 0x10d8
   1c45c:	movt	r1, #5
   1c460:	ldr	r0, [r4, #204]	; 0xcc
   1c464:	bl	13f60 <fprintf@plt>
   1c468:	mov	r2, r4
   1c46c:	movw	r1, #4356	; 0x1104
   1c470:	movt	r1, #5
   1c474:	ldr	r0, [r4, #204]	; 0xcc
   1c478:	bl	13f60 <fprintf@plt>
   1c47c:	mov	r2, r4
   1c480:	movw	r1, #4392	; 0x1128
   1c484:	movt	r1, #5
   1c488:	ldr	r0, [r4, #204]	; 0xcc
   1c48c:	bl	13f60 <fprintf@plt>
   1c490:	mov	r2, r4
   1c494:	movw	r1, #4436	; 0x1154
   1c498:	movt	r1, #5
   1c49c:	ldr	r0, [r4, #204]	; 0xcc
   1c4a0:	bl	13f60 <fprintf@plt>
   1c4a4:	mov	r2, r4
   1c4a8:	movw	r1, #4472	; 0x1178
   1c4ac:	movt	r1, #5
   1c4b0:	ldr	r0, [r4, #204]	; 0xcc
   1c4b4:	bl	13f60 <fprintf@plt>
   1c4b8:	mov	r2, r4
   1c4bc:	movw	r1, #4516	; 0x11a4
   1c4c0:	movt	r1, #5
   1c4c4:	ldr	r0, [r4, #204]	; 0xcc
   1c4c8:	bl	13f60 <fprintf@plt>
   1c4cc:	mov	r2, r4
   1c4d0:	movw	r1, #4552	; 0x11c8
   1c4d4:	movt	r1, #5
   1c4d8:	ldr	r0, [r4, #204]	; 0xcc
   1c4dc:	bl	13f60 <fprintf@plt>
   1c4e0:	mov	r2, r4
   1c4e4:	movw	r1, #4596	; 0x11f4
   1c4e8:	movt	r1, #5
   1c4ec:	ldr	r0, [r4, #204]	; 0xcc
   1c4f0:	bl	13f60 <fprintf@plt>
   1c4f4:	mov	r2, r4
   1c4f8:	movw	r1, #4632	; 0x1218
   1c4fc:	movt	r1, #5
   1c500:	ldr	r0, [r4, #204]	; 0xcc
   1c504:	bl	13f60 <fprintf@plt>
   1c508:	mov	r2, r4
   1c50c:	movw	r1, #4676	; 0x1244
   1c510:	movt	r1, #5
   1c514:	ldr	r0, [r4, #204]	; 0xcc
   1c518:	bl	13f60 <fprintf@plt>
   1c51c:	mov	r0, #10
   1c520:	ldr	r1, [r4, #204]	; 0xcc
   1c524:	bl	13fc0 <fputc@plt>
   1c528:	mov	r3, r4
   1c52c:	mov	r2, r4
   1c530:	str	r4, [sp]
   1c534:	movw	r1, #4712	; 0x1268
   1c538:	movt	r1, #5
   1c53c:	ldr	r0, [r4, #204]	; 0xcc
   1c540:	bl	13f60 <fprintf@plt>
   1c544:	mov	r3, r4
   1c548:	mov	r2, r4
   1c54c:	str	r4, [sp]
   1c550:	movw	r1, #4752	; 0x1290
   1c554:	movt	r1, #5
   1c558:	ldr	r0, [r4, #204]	; 0xcc
   1c55c:	bl	13f60 <fprintf@plt>
   1c560:	mov	r3, r4
   1c564:	mov	r2, r4
   1c568:	str	r4, [sp]
   1c56c:	movw	r1, #4792	; 0x12b8
   1c570:	movt	r1, #5
   1c574:	str	r4, [sp, #4]
   1c578:	ldr	r0, [r4, #204]	; 0xcc
   1c57c:	bl	13f60 <fprintf@plt>
   1c580:	mov	r3, r4
   1c584:	mov	r2, r4
   1c588:	str	r4, [sp]
   1c58c:	movw	r1, #4832	; 0x12e0
   1c590:	movt	r1, #5
   1c594:	ldr	r0, [r4, #204]	; 0xcc
   1c598:	bl	13f60 <fprintf@plt>
   1c59c:	mov	r3, r4
   1c5a0:	mov	r2, r4
   1c5a4:	str	r4, [sp]
   1c5a8:	movw	r1, #4876	; 0x130c
   1c5ac:	movt	r1, #5
   1c5b0:	ldr	r0, [r4, #204]	; 0xcc
   1c5b4:	bl	13f60 <fprintf@plt>
   1c5b8:	mov	r3, r4
   1c5bc:	mov	r2, r4
   1c5c0:	str	r4, [sp]
   1c5c4:	movw	r1, #4920	; 0x1338
   1c5c8:	movt	r1, #5
   1c5cc:	ldr	r0, [r4, #204]	; 0xcc
   1c5d0:	bl	13f60 <fprintf@plt>
   1c5d4:	mov	r3, r4
   1c5d8:	mov	r2, r4
   1c5dc:	str	r4, [sp]
   1c5e0:	movw	r1, #4964	; 0x1364
   1c5e4:	movt	r1, #5
   1c5e8:	ldr	r0, [r4, #204]	; 0xcc
   1c5ec:	bl	13f60 <fprintf@plt>
   1c5f0:	mov	r3, r4
   1c5f4:	mov	r2, r4
   1c5f8:	str	r4, [sp]
   1c5fc:	movw	r1, #5004	; 0x138c
   1c600:	movt	r1, #5
   1c604:	ldr	r0, [r4, #204]	; 0xcc
   1c608:	bl	13f60 <fprintf@plt>
   1c60c:	mov	r3, r4
   1c610:	mov	r2, r4
   1c614:	str	r4, [sp]
   1c618:	movw	r1, #5044	; 0x13b4
   1c61c:	movt	r1, #5
   1c620:	ldr	r0, [r4, #204]	; 0xcc
   1c624:	bl	13f60 <fprintf@plt>
   1c628:	mov	r3, r4
   1c62c:	mov	r2, r4
   1c630:	str	r4, [sp]
   1c634:	movw	r1, #5084	; 0x13dc
   1c638:	movt	r1, #5
   1c63c:	ldr	r0, [r4, #204]	; 0xcc
   1c640:	bl	13f60 <fprintf@plt>
   1c644:	mov	r3, r4
   1c648:	mov	r2, r4
   1c64c:	str	r4, [sp]
   1c650:	movw	r1, #5124	; 0x1404
   1c654:	movt	r1, #5
   1c658:	ldr	r0, [r4, #204]	; 0xcc
   1c65c:	bl	13f60 <fprintf@plt>
   1c660:	mov	r0, #10
   1c664:	ldr	r1, [r4, #204]	; 0xcc
   1c668:	bl	13fc0 <fputc@plt>
   1c66c:	mov	r3, r4
   1c670:	mov	r2, r4
   1c674:	ldr	r0, [r4, #204]	; 0xcc
   1c678:	movw	r1, #5164	; 0x142c
   1c67c:	movt	r1, #5
   1c680:	bl	13f60 <fprintf@plt>
   1c684:	mov	r0, #10
   1c688:	ldr	r1, [r4, #204]	; 0xcc
   1c68c:	bl	13fc0 <fputc@plt>
   1c690:	mov	r3, r4
   1c694:	mov	r2, r4
   1c698:	ldr	r0, [r4, #204]	; 0xcc
   1c69c:	movw	r1, #5188	; 0x1444
   1c6a0:	movt	r1, #5
   1c6a4:	bl	13f60 <fprintf@plt>
   1c6a8:	ldr	r0, [r4, #204]	; 0xcc
   1c6ac:	ldr	r3, [r4, #212]	; 0xd4
   1c6b0:	ldr	r3, [r3, #140]	; 0x8c
   1c6b4:	cmp	r3, #0
   1c6b8:	bne	1c6fc <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   1c6bc:	mov	r2, r5
   1c6c0:	movw	r1, #5212	; 0x145c
   1c6c4:	movt	r1, #5
   1c6c8:	bl	13f60 <fprintf@plt>
   1c6cc:	mov	r0, #0
   1c6d0:	add	sp, sp, #12
   1c6d4:	ldrd	r4, [sp]
   1c6d8:	add	sp, sp, #8
   1c6dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c6e0:	movw	r0, #4064	; 0xfe0
   1c6e4:	movt	r0, #4
   1c6e8:	mov	r2, #36	; 0x24
   1c6ec:	mov	r1, #1
   1c6f0:	bl	13ef4 <fwrite@plt>
   1c6f4:	ldr	r3, [r4, #204]	; 0xcc
   1c6f8:	b	1bf78 <__flatcc_fb_gen_common_c_builder_header@@Base+0x80>
   1c6fc:	mov	r3, r0
   1c700:	mov	r2, #36	; 0x24
   1c704:	movw	r0, #28228	; 0x6e44
   1c708:	movt	r0, #4
   1c70c:	mov	r1, #1
   1c710:	bl	13ef4 <fwrite@plt>
   1c714:	ldr	r0, [r4, #204]	; 0xcc
   1c718:	b	1c6bc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   1c71c:	mov	r2, r4
   1c720:	movw	r1, #36624	; 0x8f10
   1c724:	movt	r1, #4
   1c728:	ldr	r0, [r4, #204]	; 0xcc
   1c72c:	bl	13f60 <fprintf@plt>
   1c730:	mov	r2, r4
   1c734:	movw	r1, #36676	; 0x8f44
   1c738:	movt	r1, #4
   1c73c:	ldr	r0, [r4, #204]	; 0xcc
   1c740:	bl	13f60 <fprintf@plt>
   1c744:	b	1c01c <__flatcc_fb_gen_common_c_builder_header@@Base+0x124>
   1c748:	mov	r2, r4
   1c74c:	movw	r1, #36232	; 0x8d88
   1c750:	movt	r1, #4
   1c754:	ldr	r0, [r4, #204]	; 0xcc
   1c758:	bl	13f60 <fprintf@plt>
   1c75c:	mov	r2, r4
   1c760:	movw	r1, #36272	; 0x8db0
   1c764:	movt	r1, #4
   1c768:	ldr	r0, [r4, #204]	; 0xcc
   1c76c:	bl	13f60 <fprintf@plt>
   1c770:	mov	r2, r4
   1c774:	movw	r1, #36312	; 0x8dd8
   1c778:	movt	r1, #4
   1c77c:	ldr	r0, [r4, #204]	; 0xcc
   1c780:	bl	13f60 <fprintf@plt>
   1c784:	mov	r2, r4
   1c788:	movw	r1, #36356	; 0x8e04
   1c78c:	movt	r1, #4
   1c790:	ldr	r0, [r4, #204]	; 0xcc
   1c794:	bl	13f60 <fprintf@plt>
   1c798:	mov	r2, r4
   1c79c:	movw	r1, #36408	; 0x8e38
   1c7a0:	movt	r1, #4
   1c7a4:	ldr	r0, [r4, #204]	; 0xcc
   1c7a8:	bl	13f60 <fprintf@plt>
   1c7ac:	mov	r2, r4
   1c7b0:	movw	r1, #36468	; 0x8e74
   1c7b4:	movt	r1, #4
   1c7b8:	ldr	r0, [r4, #204]	; 0xcc
   1c7bc:	bl	13f60 <fprintf@plt>
   1c7c0:	b	1bfd4 <__flatcc_fb_gen_common_c_builder_header@@Base+0xdc>

0001c7c4 <__flatcc_fb_gen_c_builder@@Base>:
   1c7c4:	ldr	r3, [r0, #208]	; 0xd0
   1c7c8:	movw	r1, #5248	; 0x1480
   1c7cc:	movt	r1, #5
   1c7d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c7d4:	mov	r4, r0
   1c7d8:	ldr	r0, [r0, #204]	; 0xcc
   1c7dc:	ldr	r3, [r3, #164]	; 0xa4
   1c7e0:	strd	r6, [sp, #8]
   1c7e4:	strd	r8, [sp, #16]
   1c7e8:	strd	sl, [sp, #24]
   1c7ec:	str	lr, [sp, #32]
   1c7f0:	sub	sp, sp, #292	; 0x124
   1c7f4:	mov	r2, r3
   1c7f8:	bl	13f60 <fprintf@plt>
   1c7fc:	mov	r2, #81	; 0x51
   1c800:	mov	r1, #1
   1c804:	ldr	r3, [r4, #204]	; 0xcc
   1c808:	movw	r0, #3788	; 0xecc
   1c80c:	movt	r0, #4
   1c810:	bl	13ef4 <fwrite@plt>
   1c814:	movw	r1, #5292	; 0x14ac
   1c818:	movt	r1, #5
   1c81c:	ldr	r0, [r4, #204]	; 0xcc
   1c820:	ldr	r3, [r4, #208]	; 0xd0
   1c824:	ldr	r2, [r3, #164]	; 0xa4
   1c828:	bl	13f60 <fprintf@plt>
   1c82c:	movw	r1, #5316	; 0x14c4
   1c830:	movt	r1, #5
   1c834:	ldr	r0, [r4, #204]	; 0xcc
   1c838:	ldr	r3, [r4, #208]	; 0xd0
   1c83c:	ldr	r2, [r3, #160]	; 0xa0
   1c840:	bl	13f60 <fprintf@plt>
   1c844:	mov	r2, #7
   1c848:	mov	r1, #1
   1c84c:	ldr	r3, [r4, #204]	; 0xcc
   1c850:	movw	r0, #28840	; 0x70a8
   1c854:	movt	r0, #4
   1c858:	bl	13ef4 <fwrite@plt>
   1c85c:	add	r2, r4, #102	; 0x66
   1c860:	movw	r1, #36036	; 0x8cc4
   1c864:	movt	r1, #4
   1c868:	ldr	r0, [r4, #204]	; 0xcc
   1c86c:	bl	13f60 <fprintf@plt>
   1c870:	mov	r2, r4
   1c874:	movw	r1, #5340	; 0x14dc
   1c878:	movt	r1, #5
   1c87c:	ldr	r0, [r4, #204]	; 0xcc
   1c880:	bl	13f60 <fprintf@plt>
   1c884:	mov	r2, #7
   1c888:	mov	r1, #1
   1c88c:	ldr	r3, [r4, #204]	; 0xcc
   1c890:	movw	r0, #28840	; 0x70a8
   1c894:	movt	r0, #4
   1c898:	bl	13ef4 <fwrite@plt>
   1c89c:	mov	r0, r4
   1c8a0:	movw	r2, #5372	; 0x14fc
   1c8a4:	movt	r2, #5
   1c8a8:	movw	r1, #25204	; 0x6274
   1c8ac:	movt	r1, #5
   1c8b0:	bl	15008 <__flatcc_fb_gen_c_includes@@Base>
   1c8b4:	ldr	r0, [r4, #204]	; 0xcc
   1c8b8:	ldr	r3, [r4, #212]	; 0xd4
   1c8bc:	ldr	r3, [r3, #140]	; 0x8c
   1c8c0:	cmp	r3, #0
   1c8c4:	bne	1d0b8 <__flatcc_fb_gen_c_builder@@Base+0x8f4>
   1c8c8:	ldr	ip, [r4, #208]	; 0xd0
   1c8cc:	ldrh	r3, [ip, #16]
   1c8d0:	cmp	r3, #2
   1c8d4:	beq	1d080 <__flatcc_fb_gen_c_builder@@Base+0x8bc>
   1c8d8:	movw	r1, #28952	; 0x7118
   1c8dc:	movt	r1, #4
   1c8e0:	mov	r3, r4
   1c8e4:	mov	r2, r4
   1c8e8:	bl	13f60 <fprintf@plt>
   1c8ec:	ldr	r0, [r4, #204]	; 0xcc
   1c8f0:	ldr	ip, [r4, #208]	; 0xd0
   1c8f4:	ldrh	r3, [ip, #32]
   1c8f8:	cmp	r3, #2
   1c8fc:	beq	1d058 <__flatcc_fb_gen_c_builder@@Base+0x894>
   1c900:	ldr	ip, [r4, #212]	; 0xd4
   1c904:	movw	r1, #29052	; 0x717c
   1c908:	movt	r1, #4
   1c90c:	mov	r3, r4
   1c910:	mov	r2, r4
   1c914:	ldr	ip, [ip, #104]	; 0x68
   1c918:	str	ip, [sp]
   1c91c:	bl	13f60 <fprintf@plt>
   1c920:	mov	r0, #10
   1c924:	add	sl, sp, #68	; 0x44
   1c928:	ldr	r1, [r4, #204]	; 0xcc
   1c92c:	bl	13fc0 <fputc@plt>
   1c930:	mov	r0, sl
   1c934:	mov	r2, #220	; 0xdc
   1c938:	mov	r1, #0
   1c93c:	bl	13f78 <memset@plt>
   1c940:	ldr	r3, [r4, #208]	; 0xd0
   1c944:	ldr	r5, [r3, #40]	; 0x28
   1c948:	cmp	r5, #0
   1c94c:	beq	1c988 <__flatcc_fb_gen_c_builder@@Base+0x1c4>
   1c950:	movw	r7, #5384	; 0x1508
   1c954:	movt	r7, #5
   1c958:	movw	r6, #5456	; 0x1550
   1c95c:	movt	r6, #5
   1c960:	mov	r3, #0
   1c964:	ldrh	r2, [r5, #8]
   1c968:	cmp	r2, #3
   1c96c:	beq	1cec8 <__flatcc_fb_gen_c_builder@@Base+0x704>
   1c970:	ldr	r5, [r5]
   1c974:	cmp	r5, #0
   1c978:	bne	1c964 <__flatcc_fb_gen_c_builder@@Base+0x1a0>
   1c97c:	cmp	r3, #0
   1c980:	bne	1d0a8 <__flatcc_fb_gen_c_builder@@Base+0x8e4>
   1c984:	ldr	r3, [r4, #208]	; 0xd0
   1c988:	ldr	fp, [r3, #44]	; 0x2c
   1c98c:	cmp	fp, #0
   1c990:	beq	1ce78 <__flatcc_fb_gen_c_builder@@Base+0x6b4>
   1c994:	movw	r3, #34272	; 0x85e0
   1c998:	movt	r3, #4
   1c99c:	str	r3, [sp, #48]	; 0x30
   1c9a0:	movw	r3, #34300	; 0x85fc
   1c9a4:	movt	r3, #4
   1c9a8:	str	r3, [sp, #52]	; 0x34
   1c9ac:	movw	r3, #35648	; 0x8b40
   1c9b0:	movt	r3, #4
   1c9b4:	str	r3, [sp, #44]	; 0x2c
   1c9b8:	mov	r2, #220	; 0xdc
   1c9bc:	mov	r1, #0
   1c9c0:	mov	r0, sl
   1c9c4:	bl	13f78 <memset@plt>
   1c9c8:	ldrh	r3, [fp, #8]
   1c9cc:	cmp	r3, #1
   1c9d0:	bne	1d1f8 <__flatcc_fb_gen_c_builder@@Base+0xa34>
   1c9d4:	mov	r1, fp
   1c9d8:	mov	r2, sl
   1c9dc:	ldr	r0, [fp, #12]
   1c9e0:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1c9e4:	ldr	r1, [fp, #20]
   1c9e8:	cmp	r1, #0
   1c9ec:	moveq	r5, r1
   1c9f0:	beq	1ca20 <__flatcc_fb_gen_c_builder@@Base+0x25c>
   1c9f4:	mov	r5, #0
   1c9f8:	ldrh	r6, [r1, #72]	; 0x48
   1c9fc:	ands	r6, r6, #4
   1ca00:	bne	1ca14 <__flatcc_fb_gen_c_builder@@Base+0x250>
   1ca04:	ldrh	r3, [r1, #24]
   1ca08:	cmp	r3, #14
   1ca0c:	beq	1cf74 <__flatcc_fb_gen_c_builder@@Base+0x7b0>
   1ca10:	add	r5, r5, #1
   1ca14:	ldr	r1, [r1]
   1ca18:	cmp	r1, #0
   1ca1c:	bne	1c9f8 <__flatcc_fb_gen_c_builder@@Base+0x234>
   1ca20:	mov	r2, sl
   1ca24:	ldr	r1, [sp, #48]	; 0x30
   1ca28:	add	r7, fp, #20
   1ca2c:	ldr	r0, [r4, #204]	; 0xcc
   1ca30:	bl	13f60 <fprintf@plt>
   1ca34:	mov	r0, #1
   1ca38:	mov	r3, r5
   1ca3c:	mov	r1, r7
   1ca40:	mov	r2, #0
   1ca44:	str	r0, [sp]
   1ca48:	mov	r0, r4
   1ca4c:	bl	19868 <__flatcc_gen_sort@@Base+0x454>
   1ca50:	mov	r2, sl
   1ca54:	ldr	r1, [sp, #52]	; 0x34
   1ca58:	ldr	r0, [r4, #204]	; 0xcc
   1ca5c:	bl	13f60 <fprintf@plt>
   1ca60:	ldr	r6, [fp, #20]
   1ca64:	cmp	r6, #0
   1ca68:	movne	r3, #0
   1ca6c:	strne	r3, [sp, #36]	; 0x24
   1ca70:	beq	1cb6c <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   1ca74:	ldrh	r1, [r6, #72]	; 0x48
   1ca78:	ands	r1, r1, #4
   1ca7c:	bne	1ca98 <__flatcc_fb_gen_c_builder@@Base+0x2d4>
   1ca80:	ldrh	r3, [r6, #24]
   1ca84:	cmp	r3, #14
   1ca88:	beq	1cf20 <__flatcc_fb_gen_c_builder@@Base+0x75c>
   1ca8c:	ldr	r3, [sp, #36]	; 0x24
   1ca90:	add	r3, r3, #1
   1ca94:	str	r3, [sp, #36]	; 0x24
   1ca98:	ldr	r6, [r6]
   1ca9c:	cmp	r6, #0
   1caa0:	bne	1ca74 <__flatcc_fb_gen_c_builder@@Base+0x2b0>
   1caa4:	ldr	r3, [sp, #36]	; 0x24
   1caa8:	cmp	r3, #0
   1caac:	ble	1cb6c <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   1cab0:	cmp	r5, #0
   1cab4:	beq	1cb48 <__flatcc_fb_gen_c_builder@@Base+0x384>
   1cab8:	movw	r3, #10104	; 0x2778
   1cabc:	movt	r3, #4
   1cac0:	movw	r9, #33012	; 0x80f4
   1cac4:	movt	r9, #4
   1cac8:	movw	r8, #33020	; 0x80fc
   1cacc:	movt	r8, #4
   1cad0:	str	r3, [sp, #40]	; 0x28
   1cad4:	b	1cb1c <__flatcc_fb_gen_c_builder@@Base+0x358>
   1cad8:	tst	r6, #3
   1cadc:	bne	1caec <__flatcc_fb_gen_c_builder@@Base+0x328>
   1cae0:	sub	r2, r5, r6
   1cae4:	cmp	r2, #2
   1cae8:	bgt	1cb30 <__flatcc_fb_gen_c_builder@@Base+0x36c>
   1caec:	mov	r2, #2
   1caf0:	mov	r1, #1
   1caf4:	mov	r0, r8
   1caf8:	bl	13ef4 <fwrite@plt>
   1cafc:	ldr	r0, [r4, #204]	; 0xcc
   1cb00:	mov	r2, r6
   1cb04:	add	r6, r6, #1
   1cb08:	ldr	r1, [sp, #44]	; 0x2c
   1cb0c:	bl	13f60 <fprintf@plt>
   1cb10:	ldr	r3, [sp, #36]	; 0x24
   1cb14:	cmp	r3, r6
   1cb18:	beq	1cb6c <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   1cb1c:	cmp	r6, #0
   1cb20:	ldr	r3, [r4, #204]	; 0xcc
   1cb24:	bne	1cad8 <__flatcc_fb_gen_c_builder@@Base+0x314>
   1cb28:	cmp	r5, #4
   1cb2c:	ble	1caec <__flatcc_fb_gen_c_builder@@Base+0x328>
   1cb30:	mov	r0, r3
   1cb34:	mov	r1, r9
   1cb38:	ldr	r2, [sp, #40]	; 0x28
   1cb3c:	bl	13f60 <fprintf@plt>
   1cb40:	ldr	r0, [r4, #204]	; 0xcc
   1cb44:	b	1cb00 <__flatcc_fb_gen_c_builder@@Base+0x33c>
   1cb48:	mov	r2, r5
   1cb4c:	ldr	r1, [sp, #44]	; 0x2c
   1cb50:	add	r6, r2, #1
   1cb54:	ldr	r0, [r4, #204]	; 0xcc
   1cb58:	bl	13f60 <fprintf@plt>
   1cb5c:	ldr	r3, [sp, #36]	; 0x24
   1cb60:	mov	r2, r6
   1cb64:	cmp	r6, r3
   1cb68:	bne	1cb4c <__flatcc_fb_gen_c_builder@@Base+0x388>
   1cb6c:	mov	r8, #0
   1cb70:	mov	r0, #10
   1cb74:	ldr	r1, [r4, #204]	; 0xcc
   1cb78:	bl	13fc0 <fputc@plt>
   1cb7c:	mov	r3, sl
   1cb80:	mov	r2, sl
   1cb84:	str	sl, [sp]
   1cb88:	movw	r1, #5496	; 0x1578
   1cb8c:	movt	r1, #5
   1cb90:	ldr	r0, [r4, #204]	; 0xcc
   1cb94:	bl	13f60 <fprintf@plt>
   1cb98:	mov	r1, r7
   1cb9c:	mov	r2, r8
   1cba0:	str	r8, [sp]
   1cba4:	mov	r3, r5
   1cba8:	mov	r0, r4
   1cbac:	bl	19868 <__flatcc_gen_sort@@Base+0x454>
   1cbb0:	mov	r2, #4
   1cbb4:	mov	r1, #1
   1cbb8:	ldr	r3, [r4, #204]	; 0xcc
   1cbbc:	movw	r0, #5536	; 0x15a0
   1cbc0:	movt	r0, #5
   1cbc4:	bl	13ef4 <fwrite@plt>
   1cbc8:	mov	r1, r7
   1cbcc:	mov	r3, r8
   1cbd0:	str	r8, [sp]
   1cbd4:	mov	r2, r5
   1cbd8:	mov	r0, r4
   1cbdc:	bl	1b52c <__flatcc_gen_sort@@Base+0x2118>
   1cbe0:	mov	r2, #12
   1cbe4:	mov	r1, #1
   1cbe8:	ldr	r3, [r4, #204]	; 0xcc
   1cbec:	movw	r0, #5544	; 0x15a8
   1cbf0:	movt	r0, #5
   1cbf4:	mov	r6, #1
   1cbf8:	bl	13ef4 <fwrite@plt>
   1cbfc:	mov	r3, sl
   1cc00:	mov	r2, sl
   1cc04:	str	sl, [sp]
   1cc08:	movw	r1, #5560	; 0x15b8
   1cc0c:	movt	r1, #5
   1cc10:	str	sl, [sp, #4]
   1cc14:	ldr	r0, [r4, #204]	; 0xcc
   1cc18:	bl	13f60 <fprintf@plt>
   1cc1c:	mov	r1, r6
   1cc20:	mov	r2, #2
   1cc24:	ldr	r3, [r4, #204]	; 0xcc
   1cc28:	movw	r0, #5616	; 0x15f0
   1cc2c:	movt	r0, #5
   1cc30:	bl	13ef4 <fwrite@plt>
   1cc34:	mov	r1, r7
   1cc38:	mov	r3, r8
   1cc3c:	str	r6, [sp]
   1cc40:	mov	r2, r5
   1cc44:	mov	r0, r4
   1cc48:	bl	1b52c <__flatcc_gen_sort@@Base+0x2118>
   1cc4c:	mov	r1, r6
   1cc50:	mov	r2, #12
   1cc54:	ldr	r3, [r4, #204]	; 0xcc
   1cc58:	movw	r0, #5544	; 0x15a8
   1cc5c:	movt	r0, #5
   1cc60:	bl	13ef4 <fwrite@plt>
   1cc64:	mov	r3, sl
   1cc68:	mov	r2, sl
   1cc6c:	str	sl, [sp]
   1cc70:	movw	r1, #5620	; 0x15f4
   1cc74:	movt	r1, #5
   1cc78:	ldr	r0, [r4, #204]	; 0xcc
   1cc7c:	bl	13f60 <fprintf@plt>
   1cc80:	mov	r1, r7
   1cc84:	mov	r2, r8
   1cc88:	str	r8, [sp]
   1cc8c:	mov	r3, r5
   1cc90:	mov	r0, r4
   1cc94:	bl	19868 <__flatcc_gen_sort@@Base+0x454>
   1cc98:	mov	r1, r6
   1cc9c:	mov	r2, #4
   1cca0:	ldr	r3, [r4, #204]	; 0xcc
   1cca4:	movw	r0, #5536	; 0x15a0
   1cca8:	movt	r0, #5
   1ccac:	bl	13ef4 <fwrite@plt>
   1ccb0:	mov	r1, r7
   1ccb4:	mov	r3, #2
   1ccb8:	str	r8, [sp]
   1ccbc:	mov	r2, r5
   1ccc0:	mov	r0, r4
   1ccc4:	bl	1b52c <__flatcc_gen_sort@@Base+0x2118>
   1ccc8:	mov	r1, r6
   1cccc:	mov	r2, #12
   1ccd0:	ldr	r3, [r4, #204]	; 0xcc
   1ccd4:	movw	r0, #5544	; 0x15a8
   1ccd8:	movt	r0, #5
   1ccdc:	bl	13ef4 <fwrite@plt>
   1cce0:	mov	r3, sl
   1cce4:	mov	r2, sl
   1cce8:	str	sl, [sp]
   1ccec:	movw	r1, #5664	; 0x1620
   1ccf0:	movt	r1, #5
   1ccf4:	str	sl, [sp, #4]
   1ccf8:	ldr	r0, [r4, #204]	; 0xcc
   1ccfc:	bl	13f60 <fprintf@plt>
   1cd00:	mov	r1, r6
   1cd04:	mov	r2, #2
   1cd08:	ldr	r3, [r4, #204]	; 0xcc
   1cd0c:	movw	r0, #5616	; 0x15f0
   1cd10:	movt	r0, #5
   1cd14:	bl	13ef4 <fwrite@plt>
   1cd18:	mov	r1, r7
   1cd1c:	mov	r3, #2
   1cd20:	str	r6, [sp]
   1cd24:	mov	r2, r5
   1cd28:	mov	r0, r4
   1cd2c:	bl	1b52c <__flatcc_gen_sort@@Base+0x2118>
   1cd30:	mov	r1, r6
   1cd34:	mov	r2, #12
   1cd38:	ldr	r3, [r4, #204]	; 0xcc
   1cd3c:	movw	r0, #5544	; 0x15a8
   1cd40:	movt	r0, #5
   1cd44:	bl	13ef4 <fwrite@plt>
   1cd48:	mov	r3, sl
   1cd4c:	mov	r2, sl
   1cd50:	str	sl, [sp]
   1cd54:	movw	r1, #5724	; 0x165c
   1cd58:	movt	r1, #5
   1cd5c:	ldr	r0, [r4, #204]	; 0xcc
   1cd60:	bl	13f60 <fprintf@plt>
   1cd64:	mov	r1, r7
   1cd68:	mov	r2, r8
   1cd6c:	str	r8, [sp]
   1cd70:	mov	r3, r5
   1cd74:	mov	r0, r4
   1cd78:	bl	19868 <__flatcc_gen_sort@@Base+0x454>
   1cd7c:	mov	r1, r6
   1cd80:	mov	r2, #4
   1cd84:	ldr	r3, [r4, #204]	; 0xcc
   1cd88:	movw	r0, #5536	; 0x15a0
   1cd8c:	movt	r0, #5
   1cd90:	bl	13ef4 <fwrite@plt>
   1cd94:	mov	r3, r6
   1cd98:	mov	r1, r7
   1cd9c:	str	r8, [sp]
   1cda0:	mov	r2, r5
   1cda4:	mov	r0, r4
   1cda8:	bl	1b52c <__flatcc_gen_sort@@Base+0x2118>
   1cdac:	mov	r1, r6
   1cdb0:	mov	r2, #12
   1cdb4:	ldr	r3, [r4, #204]	; 0xcc
   1cdb8:	movw	r0, #5544	; 0x15a8
   1cdbc:	movt	r0, #5
   1cdc0:	bl	13ef4 <fwrite@plt>
   1cdc4:	mov	r3, sl
   1cdc8:	mov	r2, sl
   1cdcc:	str	sl, [sp]
   1cdd0:	movw	r1, #5772	; 0x168c
   1cdd4:	movt	r1, #5
   1cdd8:	str	sl, [sp, #4]
   1cddc:	ldr	r0, [r4, #204]	; 0xcc
   1cde0:	bl	13f60 <fprintf@plt>
   1cde4:	mov	r1, r6
   1cde8:	mov	r2, #2
   1cdec:	ldr	r3, [r4, #204]	; 0xcc
   1cdf0:	movw	r0, #5616	; 0x15f0
   1cdf4:	movt	r0, #5
   1cdf8:	bl	13ef4 <fwrite@plt>
   1cdfc:	mov	r1, r7
   1ce00:	mov	r3, r6
   1ce04:	str	r6, [sp]
   1ce08:	mov	r2, r5
   1ce0c:	mov	r0, r4
   1ce10:	bl	1b52c <__flatcc_gen_sort@@Base+0x2118>
   1ce14:	mov	r1, r6
   1ce18:	mov	r2, #12
   1ce1c:	ldr	r3, [r4, #204]	; 0xcc
   1ce20:	movw	r0, #5544	; 0x15a8
   1ce24:	movt	r0, #5
   1ce28:	bl	13ef4 <fwrite@plt>
   1ce2c:	str	sl, [sp, #20]
   1ce30:	mov	r3, r4
   1ce34:	mov	r2, r4
   1ce38:	str	sl, [sp, #24]
   1ce3c:	movw	r1, #5836	; 0x16cc
   1ce40:	movt	r1, #5
   1ce44:	ldrh	ip, [fp, #104]	; 0x68
   1ce48:	ldr	r0, [r4, #204]	; 0xcc
   1ce4c:	str	ip, [sp, #16]
   1ce50:	ldrd	r6, [fp, #112]	; 0x70
   1ce54:	str	sl, [sp]
   1ce58:	strd	r6, [sp, #8]
   1ce5c:	bl	13f60 <fprintf@plt>
   1ce60:	mov	r0, #10
   1ce64:	ldr	r1, [r4, #204]	; 0xcc
   1ce68:	bl	13fc0 <fputc@plt>
   1ce6c:	ldr	fp, [fp, #120]	; 0x78
   1ce70:	cmp	fp, r8
   1ce74:	bne	1c9b8 <__flatcc_fb_gen_c_builder@@Base+0x1f4>
   1ce78:	mov	r0, r4
   1ce7c:	bl	1a664 <__flatcc_gen_sort@@Base+0x1250>
   1ce80:	ldr	r0, [r4, #204]	; 0xcc
   1ce84:	ldr	r3, [r4, #212]	; 0xd4
   1ce88:	ldr	r3, [r3, #140]	; 0x8c
   1ce8c:	cmp	r3, #0
   1ce90:	bne	1d0d8 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1ce94:	ldr	r3, [r4, #208]	; 0xd0
   1ce98:	movw	r1, #5908	; 0x1714
   1ce9c:	movt	r1, #5
   1cea0:	ldr	r2, [r3, #164]	; 0xa4
   1cea4:	bl	13f60 <fprintf@plt>
   1cea8:	mov	r0, #0
   1ceac:	add	sp, sp, #292	; 0x124
   1ceb0:	ldrd	r4, [sp]
   1ceb4:	ldrd	r6, [sp, #8]
   1ceb8:	ldrd	r8, [sp, #16]
   1cebc:	ldrd	sl, [sp, #24]
   1cec0:	add	sp, sp, #32
   1cec4:	pop	{pc}		; (ldr pc, [sp], #4)
   1cec8:	mov	r1, r5
   1cecc:	mov	r2, sl
   1ced0:	ldr	r0, [r5, #12]
   1ced4:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1ced8:	mov	r3, sl
   1cedc:	mov	r2, sl
   1cee0:	str	sl, [sp]
   1cee4:	mov	r1, r7
   1cee8:	ldr	r0, [r4, #204]	; 0xcc
   1ceec:	bl	13f60 <fprintf@plt>
   1cef0:	mov	r3, r4
   1cef4:	mov	r2, r4
   1cef8:	str	sl, [sp]
   1cefc:	mov	r1, r6
   1cf00:	str	sl, [sp, #4]
   1cf04:	ldr	r0, [r4, #204]	; 0xcc
   1cf08:	bl	13f60 <fprintf@plt>
   1cf0c:	ldr	r5, [r5]
   1cf10:	cmp	r5, #0
   1cf14:	beq	1d0a8 <__flatcc_fb_gen_c_builder@@Base+0x8e4>
   1cf18:	mov	r3, #1
   1cf1c:	b	1c964 <__flatcc_fb_gen_c_builder@@Base+0x1a0>
   1cf20:	ldr	r3, [r6, #16]
   1cf24:	ldrh	r2, [r3, #8]
   1cf28:	cmp	r2, #1
   1cf2c:	bne	1ca8c <__flatcc_fb_gen_c_builder@@Base+0x2c8>
   1cf30:	ldr	r8, [r3, #20]
   1cf34:	cmp	r8, #0
   1cf38:	beq	1ca98 <__flatcc_fb_gen_c_builder@@Base+0x2d4>
   1cf3c:	ldrh	r3, [r8, #72]	; 0x48
   1cf40:	ands	r3, r3, #4
   1cf44:	bne	1cf58 <__flatcc_fb_gen_c_builder@@Base+0x794>
   1cf48:	ldrh	r2, [r8, #24]
   1cf4c:	cmp	r2, #14
   1cf50:	beq	1cfc0 <__flatcc_fb_gen_c_builder@@Base+0x7fc>
   1cf54:	add	r1, r1, #1
   1cf58:	ldr	r8, [r8]
   1cf5c:	cmp	r8, #0
   1cf60:	bne	1cf3c <__flatcc_fb_gen_c_builder@@Base+0x778>
   1cf64:	ldr	r3, [sp, #36]	; 0x24
   1cf68:	add	r3, r3, r1
   1cf6c:	str	r3, [sp, #36]	; 0x24
   1cf70:	b	1ca98 <__flatcc_fb_gen_c_builder@@Base+0x2d4>
   1cf74:	ldr	r3, [r1, #16]
   1cf78:	ldrh	r2, [r3, #8]
   1cf7c:	cmp	r2, #1
   1cf80:	bne	1ca10 <__flatcc_fb_gen_c_builder@@Base+0x24c>
   1cf84:	ldr	r7, [r3, #20]
   1cf88:	cmp	r7, #0
   1cf8c:	beq	1ca14 <__flatcc_fb_gen_c_builder@@Base+0x250>
   1cf90:	ldrh	r3, [r7, #72]	; 0x48
   1cf94:	ands	r3, r3, #4
   1cf98:	bne	1cfac <__flatcc_fb_gen_c_builder@@Base+0x7e8>
   1cf9c:	ldrh	r2, [r7, #24]
   1cfa0:	cmp	r2, #14
   1cfa4:	beq	1d00c <__flatcc_fb_gen_c_builder@@Base+0x848>
   1cfa8:	add	r6, r6, #1
   1cfac:	ldr	r7, [r7]
   1cfb0:	cmp	r7, #0
   1cfb4:	bne	1cf90 <__flatcc_fb_gen_c_builder@@Base+0x7cc>
   1cfb8:	add	r5, r5, r6
   1cfbc:	b	1ca14 <__flatcc_fb_gen_c_builder@@Base+0x250>
   1cfc0:	ldr	r2, [r8, #16]
   1cfc4:	ldrh	r0, [r2, #8]
   1cfc8:	cmp	r0, #1
   1cfcc:	bne	1cf54 <__flatcc_fb_gen_c_builder@@Base+0x790>
   1cfd0:	ldr	r9, [r2, #20]
   1cfd4:	cmp	r9, #0
   1cfd8:	beq	1cf58 <__flatcc_fb_gen_c_builder@@Base+0x794>
   1cfdc:	ldrh	r2, [r9, #72]	; 0x48
   1cfe0:	ands	r0, r2, #4
   1cfe4:	bne	1cff8 <__flatcc_fb_gen_c_builder@@Base+0x834>
   1cfe8:	ldrh	r2, [r9, #24]
   1cfec:	cmp	r2, #14
   1cff0:	beq	1d144 <__flatcc_fb_gen_c_builder@@Base+0x980>
   1cff4:	add	r3, r3, #1
   1cff8:	ldr	r9, [r9]
   1cffc:	cmp	r9, #0
   1d000:	bne	1cfdc <__flatcc_fb_gen_c_builder@@Base+0x818>
   1d004:	add	r1, r1, r3
   1d008:	b	1cf58 <__flatcc_fb_gen_c_builder@@Base+0x794>
   1d00c:	ldr	r2, [r7, #16]
   1d010:	ldrh	r0, [r2, #8]
   1d014:	cmp	r0, #1
   1d018:	bne	1cfa8 <__flatcc_fb_gen_c_builder@@Base+0x7e4>
   1d01c:	ldr	r8, [r2, #20]
   1d020:	cmp	r8, #0
   1d024:	beq	1cfac <__flatcc_fb_gen_c_builder@@Base+0x7e8>
   1d028:	ldrh	r2, [r8, #72]	; 0x48
   1d02c:	ands	r2, r2, #4
   1d030:	bne	1d044 <__flatcc_fb_gen_c_builder@@Base+0x880>
   1d034:	ldrh	r0, [r8, #24]
   1d038:	cmp	r0, #14
   1d03c:	beq	1d0f8 <__flatcc_fb_gen_c_builder@@Base+0x934>
   1d040:	add	r3, r3, #1
   1d044:	ldr	r8, [r8]
   1d048:	cmp	r8, #0
   1d04c:	bne	1d028 <__flatcc_fb_gen_c_builder@@Base+0x864>
   1d050:	add	r6, r6, r3
   1d054:	b	1cfac <__flatcc_fb_gen_c_builder@@Base+0x7e8>
   1d058:	ldr	lr, [ip, #24]
   1d05c:	movw	r1, #29004	; 0x714c
   1d060:	movt	r1, #4
   1d064:	mov	r3, r4
   1d068:	mov	r2, r4
   1d06c:	str	lr, [sp, #4]
   1d070:	ldr	ip, [ip, #28]
   1d074:	str	ip, [sp]
   1d078:	bl	13f60 <fprintf@plt>
   1d07c:	b	1c920 <__flatcc_fb_gen_c_builder@@Base+0x15c>
   1d080:	ldr	lr, [ip, #8]
   1d084:	movw	r1, #28900	; 0x70e4
   1d088:	movt	r1, #4
   1d08c:	mov	r3, r4
   1d090:	mov	r2, r4
   1d094:	str	lr, [sp, #4]
   1d098:	ldr	ip, [ip, #12]
   1d09c:	str	ip, [sp]
   1d0a0:	bl	13f60 <fprintf@plt>
   1d0a4:	b	1c8ec <__flatcc_fb_gen_c_builder@@Base+0x128>
   1d0a8:	mov	r0, #10
   1d0ac:	ldr	r1, [r4, #204]	; 0xcc
   1d0b0:	bl	13fc0 <fputc@plt>
   1d0b4:	b	1c984 <__flatcc_fb_gen_c_builder@@Base+0x1c0>
   1d0b8:	mov	r3, r0
   1d0bc:	mov	r2, #36	; 0x24
   1d0c0:	movw	r0, #4064	; 0xfe0
   1d0c4:	movt	r0, #4
   1d0c8:	mov	r1, #1
   1d0cc:	bl	13ef4 <fwrite@plt>
   1d0d0:	ldr	r0, [r4, #204]	; 0xcc
   1d0d4:	b	1c8c8 <__flatcc_fb_gen_c_builder@@Base+0x104>
   1d0d8:	mov	r3, r0
   1d0dc:	mov	r2, #36	; 0x24
   1d0e0:	movw	r0, #28228	; 0x6e44
   1d0e4:	movt	r0, #4
   1d0e8:	mov	r1, #1
   1d0ec:	bl	13ef4 <fwrite@plt>
   1d0f0:	ldr	r0, [r4, #204]	; 0xcc
   1d0f4:	b	1ce94 <__flatcc_fb_gen_c_builder@@Base+0x6d0>
   1d0f8:	ldr	r0, [r8, #16]
   1d0fc:	ldrh	ip, [r0, #8]
   1d100:	cmp	ip, #1
   1d104:	bne	1d040 <__flatcc_fb_gen_c_builder@@Base+0x87c>
   1d108:	ldr	r9, [r0, #20]
   1d10c:	cmp	r9, #0
   1d110:	beq	1d044 <__flatcc_fb_gen_c_builder@@Base+0x880>
   1d114:	ldrh	r0, [r9, #72]	; 0x48
   1d118:	tst	r0, #4
   1d11c:	bne	1d130 <__flatcc_fb_gen_c_builder@@Base+0x96c>
   1d120:	ldrh	r0, [r9, #24]
   1d124:	cmp	r0, #14
   1d128:	beq	1d1c8 <__flatcc_fb_gen_c_builder@@Base+0xa04>
   1d12c:	add	r2, r2, #1
   1d130:	ldr	r9, [r9]
   1d134:	cmp	r9, #0
   1d138:	bne	1d114 <__flatcc_fb_gen_c_builder@@Base+0x950>
   1d13c:	add	r3, r3, r2
   1d140:	b	1d044 <__flatcc_fb_gen_c_builder@@Base+0x880>
   1d144:	ldr	r2, [r9, #16]
   1d148:	ldrh	ip, [r2, #8]
   1d14c:	cmp	ip, #1
   1d150:	bne	1cff4 <__flatcc_fb_gen_c_builder@@Base+0x830>
   1d154:	ldr	r2, [r2, #20]
   1d158:	cmp	r2, #0
   1d15c:	beq	1cff8 <__flatcc_fb_gen_c_builder@@Base+0x834>
   1d160:	str	r3, [sp, #40]	; 0x28
   1d164:	mov	r3, r0
   1d168:	ldrh	r0, [r2, #72]	; 0x48
   1d16c:	tst	r0, #4
   1d170:	bne	1d184 <__flatcc_fb_gen_c_builder@@Base+0x9c0>
   1d174:	ldrh	r0, [r2, #24]
   1d178:	cmp	r0, #14
   1d17c:	beq	1d1a0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1d180:	add	r3, r3, #1
   1d184:	ldr	r2, [r2]
   1d188:	cmp	r2, #0
   1d18c:	bne	1d168 <__flatcc_fb_gen_c_builder@@Base+0x9a4>
   1d190:	mov	r2, r3
   1d194:	ldr	r3, [sp, #40]	; 0x28
   1d198:	add	r3, r3, r2
   1d19c:	b	1cff8 <__flatcc_fb_gen_c_builder@@Base+0x834>
   1d1a0:	ldr	r0, [r2, #16]
   1d1a4:	ldrh	ip, [r0, #8]
   1d1a8:	cmp	ip, #1
   1d1ac:	bne	1d180 <__flatcc_fb_gen_c_builder@@Base+0x9bc>
   1d1b0:	ldr	r0, [r0, #20]
   1d1b4:	strd	r2, [sp, #56]	; 0x38
   1d1b8:	bl	19798 <__flatcc_gen_sort@@Base+0x384>
   1d1bc:	ldrd	r2, [sp, #56]	; 0x38
   1d1c0:	add	r3, r3, r0
   1d1c4:	b	1d184 <__flatcc_fb_gen_c_builder@@Base+0x9c0>
   1d1c8:	ldr	r0, [r9, #16]
   1d1cc:	ldrh	ip, [r0, #8]
   1d1d0:	cmp	ip, #1
   1d1d4:	bne	1d12c <__flatcc_fb_gen_c_builder@@Base+0x968>
   1d1d8:	ldr	r0, [r0, #20]
   1d1dc:	str	r3, [sp, #36]	; 0x24
   1d1e0:	str	r2, [sp, #40]	; 0x28
   1d1e4:	bl	19798 <__flatcc_gen_sort@@Base+0x384>
   1d1e8:	ldr	r3, [sp, #36]	; 0x24
   1d1ec:	ldr	r2, [sp, #40]	; 0x28
   1d1f0:	add	r2, r2, r0
   1d1f4:	b	1d130 <__flatcc_fb_gen_c_builder@@Base+0x96c>
   1d1f8:	movw	r1, #32768	; 0x8000
   1d1fc:	movt	r1, #4
   1d200:	ldr	r3, [pc, #12]	; 1d214 <__flatcc_fb_gen_c_builder@@Base+0xa50>
   1d204:	movw	r0, #65440	; 0xffa0
   1d208:	movt	r0, #3
   1d20c:	movw	r2, #1010	; 0x3f2
   1d210:	bl	14014 <__assert_fail@plt>
   1d214:	andeq	r7, r4, ip, asr pc
   1d218:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d21c:	mov	r2, #220	; 0xdc
   1d220:	mov	r4, r1
   1d224:	strd	r6, [sp, #8]
   1d228:	mov	r1, #0
   1d22c:	strd	r8, [sp, #16]
   1d230:	mov	r9, r0
   1d234:	strd	sl, [sp, #24]
   1d238:	str	lr, [sp, #32]
   1d23c:	sub	sp, sp, #508	; 0x1fc
   1d240:	add	r8, sp, #64	; 0x40
   1d244:	add	sl, sp, #284	; 0x11c
   1d248:	mov	r0, r8
   1d24c:	bl	13f78 <memset@plt>
   1d250:	mov	r2, #220	; 0xdc
   1d254:	mov	r1, #0
   1d258:	mov	r0, sl
   1d25c:	bl	13f78 <memset@plt>
   1d260:	mov	r1, r4
   1d264:	mov	r2, r8
   1d268:	ldr	r0, [r4, #12]
   1d26c:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1d270:	mov	r2, r8
   1d274:	movw	r1, #5976	; 0x1758
   1d278:	movt	r1, #5
   1d27c:	ldr	r0, [r9, #204]	; 0xcc
   1d280:	bl	13f60 <fprintf@plt>
   1d284:	ldr	r4, [r4, #20]
   1d288:	ldr	r3, [r9, #204]	; 0xcc
   1d28c:	cmp	r4, #0
   1d290:	beq	1d390 <__flatcc_fb_gen_c_builder@@Base+0xbcc>
   1d294:	movw	r2, #6784	; 0x1a80
   1d298:	movt	r2, #5
   1d29c:	movw	fp, #10672	; 0x29b0
   1d2a0:	movt	fp, #5
   1d2a4:	mov	r1, #1
   1d2a8:	str	r2, [sp, #60]	; 0x3c
   1d2ac:	movw	r2, #6292	; 0x1894
   1d2b0:	movt	r2, #5
   1d2b4:	str	r2, [sp, #32]
   1d2b8:	ldrh	r2, [r4, #72]	; 0x48
   1d2bc:	tst	r2, #4
   1d2c0:	bne	1d364 <__flatcc_fb_gen_c_builder@@Base+0xba0>
   1d2c4:	cmp	r1, #0
   1d2c8:	beq	1d614 <__flatcc_fb_gen_c_builder@@Base+0xe50>
   1d2cc:	movw	r0, #6048	; 0x17a0
   1d2d0:	movt	r0, #5
   1d2d4:	mov	r2, #28
   1d2d8:	mov	r1, #1
   1d2dc:	bl	13ef4 <fwrite@plt>
   1d2e0:	ldrh	r3, [r4, #24]
   1d2e4:	ldrh	r5, [r4, #72]	; 0x48
   1d2e8:	sub	r3, r3, #7
   1d2ec:	ubfx	r5, r5, #8, #1
   1d2f0:	cmp	r3, #8
   1d2f4:	ldrls	pc, [pc, r3, lsl #2]
   1d2f8:	b	1d344 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1d2fc:	andeq	sp, r1, r0, lsl #9
   1d300:	andeq	sp, r1, r0, lsr #6
   1d304:	andeq	sp, r1, r4, lsr #10
   1d308:	ldrdeq	sp, [r1], -r0
   1d30c:	andeq	sp, r1, r4, asr #6
   1d310:	andeq	sp, r1, r4, asr #6
   1d314:	andeq	sp, r1, r4, asr #6
   1d318:	andeq	sp, r1, ip, ror #9
   1d31c:	andeq	sp, r1, r8, asr #8
   1d320:	ldrh	r0, [r4, #74]	; 0x4a
   1d324:	movw	r1, #6112	; 0x17e0
   1d328:	movt	r1, #5
   1d32c:	ldrd	r2, [r4, #96]	; 0x60
   1d330:	str	r0, [sp, #8]
   1d334:	ldrd	r6, [r4, #88]	; 0x58
   1d338:	ldr	r0, [r9, #204]	; 0xcc
   1d33c:	strd	r6, [sp]
   1d340:	bl	13f60 <fprintf@plt>
   1d344:	ldr	r2, [r4, #4]
   1d348:	mov	r1, fp
   1d34c:	ldr	r0, [r9, #204]	; 0xcc
   1d350:	ldr	r3, [r2]
   1d354:	ldr	r2, [r2, #4]
   1d358:	bl	13f60 <fprintf@plt>
   1d35c:	ldr	r3, [r9, #204]	; 0xcc
   1d360:	mov	r1, #0
   1d364:	ldr	r4, [r4]
   1d368:	cmp	r4, #0
   1d36c:	bne	1d2b8 <__flatcc_fb_gen_c_builder@@Base+0xaf4>
   1d370:	cmp	r1, #0
   1d374:	bne	1d390 <__flatcc_fb_gen_c_builder@@Base+0xbcc>
   1d378:	movw	r0, #6920	; 0x1b08
   1d37c:	movt	r0, #5
   1d380:	mov	r2, #15
   1d384:	mov	r1, #1
   1d388:	bl	13ef4 <fwrite@plt>
   1d38c:	ldr	r3, [r9, #204]	; 0xcc
   1d390:	mov	r2, #29
   1d394:	mov	r1, #1
   1d398:	movw	r0, #6936	; 0x1b18
   1d39c:	movt	r0, #5
   1d3a0:	bl	13ef4 <fwrite@plt>
   1d3a4:	mov	r2, #3
   1d3a8:	mov	r1, #1
   1d3ac:	ldr	r3, [r9, #204]	; 0xcc
   1d3b0:	movw	r0, #7124	; 0x1bd4
   1d3b4:	movt	r0, #5
   1d3b8:	bl	13ef4 <fwrite@plt>
   1d3bc:	mov	r3, r8
   1d3c0:	mov	r2, r8
   1d3c4:	str	r8, [sp]
   1d3c8:	movw	r1, #6968	; 0x1b38
   1d3cc:	movt	r1, #5
   1d3d0:	ldr	r0, [r9, #204]	; 0xcc
   1d3d4:	bl	13f60 <fprintf@plt>
   1d3d8:	mov	r3, r8
   1d3dc:	mov	r2, r8
   1d3e0:	str	r8, [sp]
   1d3e4:	movw	r1, #7128	; 0x1bd8
   1d3e8:	movt	r1, #5
   1d3ec:	ldr	r0, [r9, #204]	; 0xcc
   1d3f0:	bl	13f60 <fprintf@plt>
   1d3f4:	mov	r3, r8
   1d3f8:	mov	r2, r8
   1d3fc:	ldr	r0, [r9, #204]	; 0xcc
   1d400:	movw	r1, #7300	; 0x1c84
   1d404:	movt	r1, #5
   1d408:	bl	13f60 <fprintf@plt>
   1d40c:	mov	r2, r8
   1d410:	mov	r3, r9
   1d414:	str	r8, [sp]
   1d418:	movw	r1, #7484	; 0x1d3c
   1d41c:	movt	r1, #5
   1d420:	ldr	r0, [r9, #204]	; 0xcc
   1d424:	bl	13f60 <fprintf@plt>
   1d428:	mov	r0, #0
   1d42c:	add	sp, sp, #508	; 0x1fc
   1d430:	ldrd	r4, [sp]
   1d434:	ldrd	r6, [sp, #8]
   1d438:	ldrd	r8, [sp, #16]
   1d43c:	ldrd	sl, [sp, #24]
   1d440:	add	sp, sp, #32
   1d444:	pop	{pc}		; (ldr pc, [sp], #4)
   1d448:	ldr	r1, [r4, #16]
   1d44c:	mov	r2, sl
   1d450:	ldr	r0, [r1, #12]
   1d454:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1d458:	ldr	r3, [r4, #16]
   1d45c:	ldrh	r3, [r3, #8]
   1d460:	cmp	r3, #4
   1d464:	ldrls	pc, [pc, r3, lsl #2]
   1d468:	b	1d6b8 <__flatcc_fb_gen_c_builder@@Base+0xef4>
   1d46c:	andeq	sp, r1, r8, lsr #11
   1d470:	andeq	sp, r1, r0, asr #10
   1d474:			; <UNDEFINED> instruction: 0x0001d6b8
   1d478:	andeq	sp, r1, r0, asr #10
   1d47c:	andeq	sp, r1, r4, asr #11
   1d480:	ldr	r1, [r4, #104]	; 0x68
   1d484:	cmp	r1, #0
   1d488:	beq	1d540 <__flatcc_fb_gen_c_builder@@Base+0xd7c>
   1d48c:	mov	r2, sl
   1d490:	ldr	r0, [r1, #12]
   1d494:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1d498:	ldr	r3, [r4, #104]	; 0x68
   1d49c:	ldrh	r3, [r3, #8]
   1d4a0:	cmp	r3, #0
   1d4a4:	bne	1d63c <__flatcc_fb_gen_c_builder@@Base+0xe78>
   1d4a8:	ldrd	r2, [r4, #96]	; 0x60
   1d4ac:	movw	r1, #6152	; 0x1808
   1d4b0:	movt	r1, #5
   1d4b4:	str	sl, [sp, #8]
   1d4b8:	ldrh	ip, [r4, #74]	; 0x4a
   1d4bc:	str	r5, [sp]
   1d4c0:	ldr	r0, [r9, #204]	; 0xcc
   1d4c4:	str	ip, [sp, #4]
   1d4c8:	bl	13f60 <fprintf@plt>
   1d4cc:	b	1d344 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1d4d0:	movw	r1, #6360	; 0x18d8
   1d4d4:	movt	r1, #5
   1d4d8:	ldrd	r2, [r4, #96]	; 0x60
   1d4dc:	str	r5, [sp]
   1d4e0:	ldr	r0, [r9, #204]	; 0xcc
   1d4e4:	bl	13f60 <fprintf@plt>
   1d4e8:	b	1d344 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1d4ec:	ldr	r1, [r4, #16]
   1d4f0:	mov	r2, sl
   1d4f4:	ldr	r0, [r1, #12]
   1d4f8:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1d4fc:	ldr	r3, [r4, #16]
   1d500:	ldrh	r3, [r3, #8]
   1d504:	cmp	r3, #4
   1d508:	ldrls	pc, [pc, r3, lsl #2]
   1d50c:	b	1d668 <__flatcc_fb_gen_c_builder@@Base+0xea4>
   1d510:	strdeq	sp, [r1], -r8
   1d514:	andeq	sp, r1, r0, lsr #6
   1d518:	andeq	sp, r1, r8, ror #12
   1d51c:	andeq	sp, r1, r0, lsr #6
   1d520:	ldrdeq	sp, [r1], -ip
   1d524:	movw	r1, #6404	; 0x1904
   1d528:	movt	r1, #5
   1d52c:	ldrd	r2, [r4, #96]	; 0x60
   1d530:	str	r5, [sp]
   1d534:	ldr	r0, [r9, #204]	; 0xcc
   1d538:	bl	13f60 <fprintf@plt>
   1d53c:	b	1d344 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1d540:	ldrh	r3, [r4, #74]	; 0x4a
   1d544:	ldrd	r6, [r4, #88]	; 0x58
   1d548:	str	r3, [sp, #56]	; 0x38
   1d54c:	ldrd	r2, [r4, #96]	; 0x60
   1d550:	strd	r2, [sp, #40]	; 0x28
   1d554:	orrs	r3, r6, r7
   1d558:	ldr	r3, [r9, #204]	; 0xcc
   1d55c:	str	r3, [sp, #36]	; 0x24
   1d560:	beq	1d62c <__flatcc_fb_gen_c_builder@@Base+0xe68>
   1d564:	mov	r2, r6
   1d568:	mov	r3, r7
   1d56c:	mvn	r0, #0
   1d570:	mov	r1, #0
   1d574:	bl	3e380 <fb_value_set_visit@@Base+0x694>
   1d578:	strd	r0, [sp, #48]	; 0x30
   1d57c:	str	r5, [sp]
   1d580:	strd	r6, [sp, #8]
   1d584:	ldr	ip, [sp, #56]	; 0x38
   1d588:	ldrd	r6, [sp, #48]	; 0x30
   1d58c:	ldr	r1, [sp, #32]
   1d590:	str	ip, [sp, #16]
   1d594:	ldr	r0, [sp, #36]	; 0x24
   1d598:	strd	r6, [sp, #24]
   1d59c:	ldrd	r2, [sp, #40]	; 0x28
   1d5a0:	bl	13f60 <fprintf@plt>
   1d5a4:	b	1d344 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1d5a8:	movw	r1, #6716	; 0x1a3c
   1d5ac:	movt	r1, #5
   1d5b0:	ldrd	r2, [r4, #96]	; 0x60
   1d5b4:	stm	sp, {r5, sl}
   1d5b8:	ldr	r0, [r9, #204]	; 0xcc
   1d5bc:	bl	13f60 <fprintf@plt>
   1d5c0:	b	1d344 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1d5c4:	ldr	r1, [sp, #60]	; 0x3c
   1d5c8:	ldrd	r2, [r4, #96]	; 0x60
   1d5cc:	stm	sp, {r5, sl}
   1d5d0:	ldr	r0, [r9, #204]	; 0xcc
   1d5d4:	bl	13f60 <fprintf@plt>
   1d5d8:	b	1d344 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1d5dc:	movw	r1, #6512	; 0x1970
   1d5e0:	movt	r1, #5
   1d5e4:	ldrd	r2, [r4, #96]	; 0x60
   1d5e8:	stm	sp, {r5, sl}
   1d5ec:	ldr	r0, [r9, #204]	; 0xcc
   1d5f0:	bl	13f60 <fprintf@plt>
   1d5f4:	b	1d344 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1d5f8:	movw	r1, #6452	; 0x1934
   1d5fc:	movt	r1, #5
   1d600:	ldrd	r2, [r4, #96]	; 0x60
   1d604:	stm	sp, {r5, sl}
   1d608:	ldr	r0, [r9, #204]	; 0xcc
   1d60c:	bl	13f60 <fprintf@plt>
   1d610:	b	1d344 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1d614:	movw	r0, #6080	; 0x17c0
   1d618:	movt	r0, #5
   1d61c:	mov	r2, #30
   1d620:	mov	r1, #1
   1d624:	bl	13ef4 <fwrite@plt>
   1d628:	b	1d2e0 <__flatcc_fb_gen_c_builder@@Base+0xb1c>
   1d62c:	mvn	r2, #0
   1d630:	mov	r3, #0
   1d634:	strd	r2, [sp, #48]	; 0x30
   1d638:	b	1d57c <__flatcc_fb_gen_c_builder@@Base+0xdb8>
   1d63c:	ldrh	r0, [r4, #74]	; 0x4a
   1d640:	movw	r1, #6228	; 0x1854
   1d644:	movt	r1, #5
   1d648:	ldrd	r2, [r4, #96]	; 0x60
   1d64c:	str	r0, [sp, #16]
   1d650:	ldrd	r6, [r4, #88]	; 0x58
   1d654:	str	r5, [sp]
   1d658:	ldr	r0, [r9, #204]	; 0xcc
   1d65c:	strd	r6, [sp, #8]
   1d660:	bl	13f60 <fprintf@plt>
   1d664:	b	1d344 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1d668:	movw	r1, #6656	; 0x1a00
   1d66c:	movt	r1, #5
   1d670:	movw	r3, #41128	; 0xa0a8
   1d674:	movt	r3, #6
   1d678:	movw	r2, #6572	; 0x19ac
   1d67c:	movt	r2, #5
   1d680:	str	r1, [sp]
   1d684:	movw	r1, #64544	; 0xfc20
   1d688:	movt	r1, #3
   1d68c:	ldr	r0, [r3]
   1d690:	mov	r3, #178	; 0xb2
   1d694:	bl	13f60 <fprintf@plt>
   1d698:	movw	r3, #5936	; 0x1730
   1d69c:	movt	r3, #5
   1d6a0:	movw	r1, #6572	; 0x19ac
   1d6a4:	movt	r1, #5
   1d6a8:	movw	r0, #35672	; 0x8b58
   1d6ac:	movt	r0, #4
   1d6b0:	mov	r2, #178	; 0xb2
   1d6b4:	bl	14014 <__assert_fail@plt>
   1d6b8:	movw	r1, #6852	; 0x1ac4
   1d6bc:	movt	r1, #5
   1d6c0:	movw	r3, #41128	; 0xa0a8
   1d6c4:	movt	r3, #6
   1d6c8:	movw	r2, #6572	; 0x19ac
   1d6cc:	movt	r2, #5
   1d6d0:	str	r1, [sp]
   1d6d4:	movw	r1, #64544	; 0xfc20
   1d6d8:	movt	r1, #3
   1d6dc:	ldr	r0, [r3]
   1d6e0:	mov	r3, #202	; 0xca
   1d6e4:	bl	13f60 <fprintf@plt>
   1d6e8:	movw	r3, #5936	; 0x1730
   1d6ec:	movt	r3, #5
   1d6f0:	movw	r1, #6572	; 0x19ac
   1d6f4:	movt	r1, #5
   1d6f8:	movw	r0, #35672	; 0x8b58
   1d6fc:	movt	r0, #4
   1d700:	mov	r2, #202	; 0xca
   1d704:	bl	14014 <__assert_fail@plt>
   1d708:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d70c:	mov	r2, #220	; 0xdc
   1d710:	mov	r4, r1
   1d714:	strd	r6, [sp, #8]
   1d718:	mov	r5, r0
   1d71c:	mov	r1, #0
   1d720:	strd	r8, [sp, #16]
   1d724:	str	sl, [sp, #24]
   1d728:	str	lr, [sp, #28]
   1d72c:	sub	sp, sp, #464	; 0x1d0
   1d730:	add	r0, sp, #24
   1d734:	bl	13f78 <memset@plt>
   1d738:	mov	r2, #220	; 0xdc
   1d73c:	mov	r1, #0
   1d740:	add	r0, sp, #244	; 0xf4
   1d744:	bl	13f78 <memset@plt>
   1d748:	mov	r1, r4
   1d74c:	add	r2, sp, #24
   1d750:	ldr	r0, [r4, #12]
   1d754:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1d758:	add	r2, sp, #24
   1d75c:	movw	r1, #7676	; 0x1dfc
   1d760:	movt	r1, #5
   1d764:	ldr	r0, [r5]
   1d768:	bl	13f60 <fprintf@plt>
   1d76c:	ldr	r4, [r4, #20]
   1d770:	cmp	r4, #0
   1d774:	beq	1d870 <__flatcc_fb_gen_c_builder@@Base+0x10ac>
   1d778:	movw	r8, #7988	; 0x1f34
   1d77c:	movt	r8, #5
   1d780:	movw	sl, #7772	; 0x1e5c
   1d784:	movt	sl, #5
   1d788:	movw	r9, #7852	; 0x1eac
   1d78c:	movt	r9, #5
   1d790:	b	1d7dc <__flatcc_fb_gen_c_builder@@Base+0x1018>
   1d794:	ldr	r1, [r4, #16]
   1d798:	add	r2, sp, #244	; 0xf4
   1d79c:	ldr	r0, [r1, #12]
   1d7a0:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1d7a4:	ldr	ip, [r4, #16]
   1d7a8:	ldrh	r3, [ip, #8]
   1d7ac:	cmp	r3, #0
   1d7b0:	bne	1d8a8 <__flatcc_fb_gen_c_builder@@Base+0x10e4>
   1d7b4:	add	r3, sp, #244	; 0xf4
   1d7b8:	mov	r1, sl
   1d7bc:	ldr	r2, [r4, #48]	; 0x30
   1d7c0:	str	r7, [sp]
   1d7c4:	str	r6, [sp, #4]
   1d7c8:	ldr	r0, [r5]
   1d7cc:	bl	13f60 <fprintf@plt>
   1d7d0:	ldr	r4, [r4]
   1d7d4:	cmp	r4, #0
   1d7d8:	beq	1d870 <__flatcc_fb_gen_c_builder@@Base+0x10ac>
   1d7dc:	ldrh	r3, [r4, #24]
   1d7e0:	ldr	r2, [r4, #4]
   1d7e4:	cmp	r3, #10
   1d7e8:	ldrd	r6, [r2]
   1d7ec:	beq	1d84c <__flatcc_fb_gen_c_builder@@Base+0x1088>
   1d7f0:	cmp	r3, #14
   1d7f4:	beq	1d794 <__flatcc_fb_gen_c_builder@@Base+0xfd0>
   1d7f8:	cmp	r3, #0
   1d7fc:	beq	1d7d0 <__flatcc_fb_gen_c_builder@@Base+0x100c>
   1d800:	movw	r1, #8052	; 0x1f74
   1d804:	movt	r1, #5
   1d808:	movw	r3, #41128	; 0xa0a8
   1d80c:	movt	r3, #6
   1d810:	movw	r2, #6572	; 0x19ac
   1d814:	movt	r2, #5
   1d818:	str	r1, [sp]
   1d81c:	movw	r1, #64544	; 0xfc20
   1d820:	movt	r1, #3
   1d824:	ldr	r0, [r3]
   1d828:	mov	r3, #83	; 0x53
   1d82c:	bl	13f60 <fprintf@plt>
   1d830:	movw	r1, #6572	; 0x19ac
   1d834:	movt	r1, #5
   1d838:	ldr	r3, [pc, #232]	; 1d928 <__flatcc_fb_gen_c_builder@@Base+0x1164>
   1d83c:	movw	r0, #35672	; 0x8b58
   1d840:	movt	r0, #4
   1d844:	mov	r2, #83	; 0x53
   1d848:	bl	14014 <__assert_fail@plt>
   1d84c:	mov	r3, r7
   1d850:	mov	r1, r8
   1d854:	ldr	r2, [r4, #48]	; 0x30
   1d858:	str	r6, [sp]
   1d85c:	ldr	r0, [r5]
   1d860:	bl	13f60 <fprintf@plt>
   1d864:	ldr	r4, [r4]
   1d868:	cmp	r4, #0
   1d86c:	bne	1d7dc <__flatcc_fb_gen_c_builder@@Base+0x1018>
   1d870:	ldr	r3, [r5]
   1d874:	mov	r2, #47	; 0x2f
   1d878:	mov	r1, #1
   1d87c:	movw	r0, #8104	; 0x1fa8
   1d880:	movt	r0, #5
   1d884:	bl	13ef4 <fwrite@plt>
   1d888:	mov	r0, #0
   1d88c:	add	sp, sp, #464	; 0x1d0
   1d890:	ldrd	r4, [sp]
   1d894:	ldrd	r6, [sp, #8]
   1d898:	ldrd	r8, [sp, #16]
   1d89c:	ldr	sl, [sp, #24]
   1d8a0:	add	sp, sp, #28
   1d8a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d8a8:	cmp	r3, #1
   1d8ac:	bne	1d8dc <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1d8b0:	ldr	r2, [r4, #48]	; 0x30
   1d8b4:	mov	r1, r9
   1d8b8:	str	r7, [sp, #12]
   1d8bc:	str	r6, [sp, #16]
   1d8c0:	ldrh	r3, [ip, #104]	; 0x68
   1d8c4:	ldr	r0, [r5]
   1d8c8:	str	r3, [sp, #8]
   1d8cc:	ldrd	r6, [ip, #112]	; 0x70
   1d8d0:	strd	r6, [sp]
   1d8d4:	bl	13f60 <fprintf@plt>
   1d8d8:	b	1d7d0 <__flatcc_fb_gen_c_builder@@Base+0x100c>
   1d8dc:	movw	r1, #7928	; 0x1ef8
   1d8e0:	movt	r1, #5
   1d8e4:	movw	r3, #41128	; 0xa0a8
   1d8e8:	movt	r3, #6
   1d8ec:	movw	r2, #6572	; 0x19ac
   1d8f0:	movt	r2, #5
   1d8f4:	str	r1, [sp]
   1d8f8:	movw	r1, #64544	; 0xfc20
   1d8fc:	movt	r1, #3
   1d900:	ldr	r0, [r3]
   1d904:	mov	r3, #74	; 0x4a
   1d908:	bl	13f60 <fprintf@plt>
   1d90c:	movw	r1, #6572	; 0x19ac
   1d910:	movt	r1, #5
   1d914:	ldr	r3, [pc, #12]	; 1d928 <__flatcc_fb_gen_c_builder@@Base+0x1164>
   1d918:	movw	r0, #35672	; 0x8b58
   1d91c:	movt	r0, #4
   1d920:	mov	r2, #74	; 0x4a
   1d924:	bl	14014 <__assert_fail@plt>
   1d928:	andeq	r1, r5, r4, asr #14

0001d92c <__flatcc_fb_gen_c_verifier@@Base>:
   1d92c:	ldr	r3, [r0, #208]	; 0xd0
   1d930:	movw	r1, #8152	; 0x1fd8
   1d934:	movt	r1, #5
   1d938:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d93c:	mov	r4, r0
   1d940:	ldr	r0, [r0, #204]	; 0xcc
   1d944:	ldr	r3, [r3, #164]	; 0xa4
   1d948:	strd	r6, [sp, #8]
   1d94c:	strd	r8, [sp, #16]
   1d950:	str	sl, [sp, #24]
   1d954:	str	lr, [sp, #28]
   1d958:	sub	sp, sp, #240	; 0xf0
   1d95c:	mov	r2, r3
   1d960:	bl	13f60 <fprintf@plt>
   1d964:	mov	r2, #81	; 0x51
   1d968:	mov	r1, #1
   1d96c:	ldr	r3, [r4, #204]	; 0xcc
   1d970:	movw	r0, #3788	; 0xecc
   1d974:	movt	r0, #4
   1d978:	bl	13ef4 <fwrite@plt>
   1d97c:	movw	r1, #5292	; 0x14ac
   1d980:	movt	r1, #5
   1d984:	ldr	r0, [r4, #204]	; 0xcc
   1d988:	ldr	r3, [r4, #208]	; 0xd0
   1d98c:	ldr	r2, [r3, #164]	; 0xa4
   1d990:	bl	13f60 <fprintf@plt>
   1d994:	movw	r1, #5316	; 0x14c4
   1d998:	movt	r1, #5
   1d99c:	ldr	r0, [r4, #204]	; 0xcc
   1d9a0:	ldr	r3, [r4, #208]	; 0xd0
   1d9a4:	ldr	r2, [r3, #160]	; 0xa0
   1d9a8:	bl	13f60 <fprintf@plt>
   1d9ac:	mov	r2, #7
   1d9b0:	mov	r1, #1
   1d9b4:	ldr	r3, [r4, #204]	; 0xcc
   1d9b8:	movw	r0, #28840	; 0x70a8
   1d9bc:	movt	r0, #4
   1d9c0:	bl	13ef4 <fwrite@plt>
   1d9c4:	mov	r2, #36	; 0x24
   1d9c8:	mov	r1, #1
   1d9cc:	ldr	r3, [r4, #204]	; 0xcc
   1d9d0:	movw	r0, #8200	; 0x2008
   1d9d4:	movt	r0, #5
   1d9d8:	bl	13ef4 <fwrite@plt>
   1d9dc:	mov	r0, r4
   1d9e0:	movw	r2, #8240	; 0x2030
   1d9e4:	movt	r2, #5
   1d9e8:	movw	r1, #63584	; 0xf860
   1d9ec:	movt	r1, #3
   1d9f0:	bl	15008 <__flatcc_fb_gen_c_includes@@Base>
   1d9f4:	ldr	r1, [r4, #204]	; 0xcc
   1d9f8:	ldr	r3, [r4, #212]	; 0xd4
   1d9fc:	ldr	r3, [r3, #140]	; 0x8c
   1da00:	cmp	r3, #0
   1da04:	bne	1dc60 <__flatcc_fb_gen_c_verifier@@Base+0x334>
   1da08:	mov	r0, #10
   1da0c:	bl	13fc0 <fputc@plt>
   1da10:	add	r0, sp, #20
   1da14:	mov	r2, #220	; 0xdc
   1da18:	mov	r1, #0
   1da1c:	bl	13f78 <memset@plt>
   1da20:	ldr	r3, [r4, #208]	; 0xd0
   1da24:	ldr	r5, [r3, #40]	; 0x28
   1da28:	cmp	r5, #0
   1da2c:	beq	1da50 <__flatcc_fb_gen_c_verifier@@Base+0x124>
   1da30:	movw	r6, #8252	; 0x203c
   1da34:	movt	r6, #5
   1da38:	ldrh	r3, [r5, #8]
   1da3c:	cmp	r3, #0
   1da40:	beq	1db54 <__flatcc_fb_gen_c_verifier@@Base+0x228>
   1da44:	ldr	r5, [r5]
   1da48:	cmp	r5, #0
   1da4c:	bne	1da38 <__flatcc_fb_gen_c_verifier@@Base+0x10c>
   1da50:	mov	r0, #10
   1da54:	ldr	r1, [r4, #204]	; 0xcc
   1da58:	bl	13fc0 <fputc@plt>
   1da5c:	ldr	r3, [r4, #208]	; 0xd0
   1da60:	ldr	r5, [r3, #40]	; 0x28
   1da64:	cmp	r5, #0
   1da68:	beq	1daf0 <__flatcc_fb_gen_c_verifier@@Base+0x1c4>
   1da6c:	add	r6, r4, #204	; 0xcc
   1da70:	ldrh	r3, [r5, #8]
   1da74:	cmp	r3, #4
   1da78:	beq	1dc44 <__flatcc_fb_gen_c_verifier@@Base+0x318>
   1da7c:	ldr	r5, [r5]
   1da80:	cmp	r5, #0
   1da84:	bne	1da70 <__flatcc_fb_gen_c_verifier@@Base+0x144>
   1da88:	ldr	r3, [r4, #208]	; 0xd0
   1da8c:	ldr	r5, [r3, #40]	; 0x28
   1da90:	cmp	r5, #0
   1da94:	beq	1daf0 <__flatcc_fb_gen_c_verifier@@Base+0x1c4>
   1da98:	movw	sl, #8324	; 0x2084
   1da9c:	movt	sl, #5
   1daa0:	movw	r9, #8480	; 0x2120
   1daa4:	movt	r9, #5
   1daa8:	movw	r8, #8644	; 0x21c4
   1daac:	movt	r8, #5
   1dab0:	ldrh	r3, [r5, #8]
   1dab4:	cmp	r3, #1
   1dab8:	beq	1db84 <__flatcc_fb_gen_c_verifier@@Base+0x258>
   1dabc:	ldr	r5, [r5]
   1dac0:	cmp	r5, #0
   1dac4:	bne	1dab0 <__flatcc_fb_gen_c_verifier@@Base+0x184>
   1dac8:	ldr	r3, [r4, #208]	; 0xd0
   1dacc:	ldr	r5, [r3, #40]	; 0x28
   1dad0:	cmp	r5, #0
   1dad4:	beq	1daf0 <__flatcc_fb_gen_c_verifier@@Base+0x1c4>
   1dad8:	ldrh	r3, [r5, #8]
   1dadc:	cmp	r3, #0
   1dae0:	beq	1db38 <__flatcc_fb_gen_c_verifier@@Base+0x20c>
   1dae4:	ldr	r5, [r5]
   1dae8:	cmp	r5, #0
   1daec:	bne	1dad8 <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   1daf0:	ldr	r0, [r4, #204]	; 0xcc
   1daf4:	ldr	r3, [r4, #212]	; 0xd4
   1daf8:	ldr	r3, [r3, #140]	; 0x8c
   1dafc:	cmp	r3, #0
   1db00:	bne	1dc80 <__flatcc_fb_gen_c_verifier@@Base+0x354>
   1db04:	ldr	r3, [r4, #208]	; 0xd0
   1db08:	movw	r1, #9004	; 0x232c
   1db0c:	movt	r1, #5
   1db10:	ldr	r2, [r3, #164]	; 0xa4
   1db14:	bl	13f60 <fprintf@plt>
   1db18:	mov	r0, #0
   1db1c:	add	sp, sp, #240	; 0xf0
   1db20:	ldrd	r4, [sp]
   1db24:	ldrd	r6, [sp, #8]
   1db28:	ldrd	r8, [sp, #16]
   1db2c:	ldr	sl, [sp, #24]
   1db30:	add	sp, sp, #28
   1db34:	pop	{pc}		; (ldr pc, [sp], #4)
   1db38:	mov	r1, r5
   1db3c:	mov	r0, r4
   1db40:	bl	1d218 <__flatcc_fb_gen_c_builder@@Base+0xa54>
   1db44:	ldr	r5, [r5]
   1db48:	cmp	r5, #0
   1db4c:	bne	1dad8 <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   1db50:	b	1daf0 <__flatcc_fb_gen_c_verifier@@Base+0x1c4>
   1db54:	mov	r1, r5
   1db58:	add	r2, sp, #20
   1db5c:	ldr	r0, [r5, #12]
   1db60:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1db64:	add	r2, sp, #20
   1db68:	mov	r1, r6
   1db6c:	ldr	r0, [r4, #204]	; 0xcc
   1db70:	bl	13f60 <fprintf@plt>
   1db74:	ldr	r5, [r5]
   1db78:	cmp	r5, #0
   1db7c:	bne	1da38 <__flatcc_fb_gen_c_verifier@@Base+0x10c>
   1db80:	b	1da50 <__flatcc_fb_gen_c_verifier@@Base+0x124>
   1db84:	mov	r2, #220	; 0xdc
   1db88:	mov	r1, #0
   1db8c:	add	r0, sp, #20
   1db90:	bl	13f78 <memset@plt>
   1db94:	mov	r1, r5
   1db98:	add	r2, sp, #20
   1db9c:	ldr	r0, [r5, #12]
   1dba0:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1dba4:	ldrh	ip, [r5, #104]	; 0x68
   1dba8:	add	r3, sp, #20
   1dbac:	mov	r1, sl
   1dbb0:	mov	r2, r3
   1dbb4:	ldr	r0, [r4, #204]	; 0xcc
   1dbb8:	str	ip, [sp, #8]
   1dbbc:	ldrd	r6, [r5, #112]	; 0x70
   1dbc0:	strd	r6, [sp]
   1dbc4:	bl	13f60 <fprintf@plt>
   1dbc8:	ldrh	ip, [r5, #104]	; 0x68
   1dbcc:	add	r3, sp, #20
   1dbd0:	mov	r1, r9
   1dbd4:	mov	r2, r3
   1dbd8:	ldr	r0, [r4, #204]	; 0xcc
   1dbdc:	str	ip, [sp, #8]
   1dbe0:	ldrd	r6, [r5, #112]	; 0x70
   1dbe4:	strd	r6, [sp]
   1dbe8:	bl	13f60 <fprintf@plt>
   1dbec:	ldrh	ip, [r5, #104]	; 0x68
   1dbf0:	mov	r3, r4
   1dbf4:	add	r2, sp, #20
   1dbf8:	mov	r1, r8
   1dbfc:	ldr	r0, [r4, #204]	; 0xcc
   1dc00:	str	ip, [sp, #8]
   1dc04:	ldrd	r6, [r5, #112]	; 0x70
   1dc08:	strd	r6, [sp]
   1dc0c:	bl	13f60 <fprintf@plt>
   1dc10:	ldrh	r3, [r5, #104]	; 0x68
   1dc14:	movw	r1, #8828	; 0x227c
   1dc18:	movt	r1, #5
   1dc1c:	add	r2, sp, #20
   1dc20:	ldr	r0, [r4, #204]	; 0xcc
   1dc24:	str	r3, [sp, #8]
   1dc28:	ldrd	r6, [r5, #112]	; 0x70
   1dc2c:	strd	r6, [sp]
   1dc30:	bl	13f60 <fprintf@plt>
   1dc34:	ldr	r5, [r5]
   1dc38:	cmp	r5, #0
   1dc3c:	bne	1dab0 <__flatcc_fb_gen_c_verifier@@Base+0x184>
   1dc40:	b	1dac8 <__flatcc_fb_gen_c_verifier@@Base+0x19c>
   1dc44:	mov	r1, r5
   1dc48:	mov	r0, r6
   1dc4c:	bl	1d708 <__flatcc_fb_gen_c_builder@@Base+0xf44>
   1dc50:	ldr	r5, [r5]
   1dc54:	cmp	r5, #0
   1dc58:	bne	1da70 <__flatcc_fb_gen_c_verifier@@Base+0x144>
   1dc5c:	b	1da88 <__flatcc_fb_gen_c_verifier@@Base+0x15c>
   1dc60:	mov	r3, r1
   1dc64:	movw	r0, #4064	; 0xfe0
   1dc68:	movt	r0, #4
   1dc6c:	mov	r1, #1
   1dc70:	mov	r2, #36	; 0x24
   1dc74:	bl	13ef4 <fwrite@plt>
   1dc78:	ldr	r1, [r4, #204]	; 0xcc
   1dc7c:	b	1da08 <__flatcc_fb_gen_c_verifier@@Base+0xdc>
   1dc80:	mov	r3, r0
   1dc84:	mov	r2, #36	; 0x24
   1dc88:	movw	r0, #28228	; 0x6e44
   1dc8c:	movt	r0, #4
   1dc90:	mov	r1, #1
   1dc94:	bl	13ef4 <fwrite@plt>
   1dc98:	ldr	r0, [r4, #204]	; 0xcc
   1dc9c:	b	1db04 <__flatcc_fb_gen_c_verifier@@Base+0x1d8>
   1dca0:	push	{r1, r2, r3}
   1dca4:	movw	r3, #41140	; 0xa0b4
   1dca8:	movt	r3, #6
   1dcac:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1dcb0:	mov	r5, r0
   1dcb4:	ldr	r2, [r0, #212]	; 0xd4
   1dcb8:	ldr	r4, [r0, #220]	; 0xdc
   1dcbc:	strd	r6, [sp, #8]
   1dcc0:	strd	r8, [sp, #16]
   1dcc4:	str	lr, [sp, #24]
   1dcc8:	sub	sp, sp, #8
   1dccc:	ldrb	r1, [r3]
   1dcd0:	ldr	r9, [sp, #36]	; 0x24
   1dcd4:	ldr	r6, [r2, #176]	; 0xb0
   1dcd8:	cmp	r1, #0
   1dcdc:	beq	1dd9c <__flatcc_fb_gen_c_verifier@@Base+0x470>
   1dce0:	ldrb	r3, [r9]
   1dce4:	cmp	r3, #0
   1dce8:	beq	1dd70 <__flatcc_fb_gen_c_verifier@@Base+0x444>
   1dcec:	mul	r6, r6, r4
   1dcf0:	cmp	r6, #64	; 0x40
   1dcf4:	ble	1dd3c <__flatcc_fb_gen_c_verifier@@Base+0x410>
   1dcf8:	movw	r8, #41140	; 0xa0b4
   1dcfc:	movt	r8, #6
   1dd00:	movw	r7, #35640	; 0x8b38
   1dd04:	movt	r7, #4
   1dd08:	mov	r4, r6
   1dd0c:	sub	r4, r4, #64	; 0x40
   1dd10:	mov	r3, r8
   1dd14:	ldr	r0, [r5, #204]	; 0xcc
   1dd18:	mov	r2, #64	; 0x40
   1dd1c:	mov	r1, r7
   1dd20:	bl	13f60 <fprintf@plt>
   1dd24:	cmp	r4, #64	; 0x40
   1dd28:	bgt	1dd0c <__flatcc_fb_gen_c_verifier@@Base+0x3e0>
   1dd2c:	sub	r3, r6, #65	; 0x41
   1dd30:	sub	r6, r6, #64	; 0x40
   1dd34:	bic	r3, r3, #63	; 0x3f
   1dd38:	sub	r6, r6, r3
   1dd3c:	mov	r2, r6
   1dd40:	movw	r3, #41140	; 0xa0b4
   1dd44:	movt	r3, #6
   1dd48:	movw	r1, #35640	; 0x8b38
   1dd4c:	movt	r1, #4
   1dd50:	ldr	r0, [r5, #204]	; 0xcc
   1dd54:	bl	13f60 <fprintf@plt>
   1dd58:	add	r3, sp, #40	; 0x28
   1dd5c:	mov	r1, r9
   1dd60:	ldr	r0, [r5, #204]	; 0xcc
   1dd64:	mov	r2, r3
   1dd68:	str	r3, [sp, #4]
   1dd6c:	bl	13fb4 <vfprintf@plt>
   1dd70:	ldr	r1, [r5, #204]	; 0xcc
   1dd74:	mov	r0, #10
   1dd78:	bl	13fc0 <fputc@plt>
   1dd7c:	add	sp, sp, #8
   1dd80:	ldrd	r4, [sp]
   1dd84:	ldrd	r6, [sp, #8]
   1dd88:	ldrd	r8, [sp, #16]
   1dd8c:	ldr	lr, [sp, #24]
   1dd90:	add	sp, sp, #28
   1dd94:	add	sp, sp, #12
   1dd98:	bx	lr
   1dd9c:	mov	r0, r3
   1dda0:	mov	r2, #64	; 0x40
   1dda4:	mov	r1, #32
   1dda8:	bl	13f78 <memset@plt>
   1ddac:	b	1dce0 <__flatcc_fb_gen_c_verifier@@Base+0x3b4>
   1ddb0:	movw	r1, #9540	; 0x2544
   1ddb4:	movt	r1, #5
   1ddb8:	b	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1ddbc:	movw	r1, #9600	; 0x2580
   1ddc0:	movt	r1, #5
   1ddc4:	b	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1ddc8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ddcc:	mov	r4, r0
   1ddd0:	strd	r6, [sp, #8]
   1ddd4:	mov	r7, r1
   1ddd8:	strd	r8, [sp, #16]
   1dddc:	sub	r9, r3, r2
   1dde0:	mov	r8, r2
   1dde4:	add	r9, r9, #1
   1dde8:	strd	sl, [sp, #24]
   1ddec:	add	r9, r9, r9, lsr #31
   1ddf0:	str	lr, [sp, #32]
   1ddf4:	sub	sp, sp, #52	; 0x34
   1ddf8:	add	r9, r2, r9, asr #1
   1ddfc:	ldr	r2, [sp, #88]	; 0x58
   1de00:	str	r2, [sp, #16]
   1de04:	ldr	r2, [sp, #92]	; 0x5c
   1de08:	str	r3, [sp, #24]
   1de0c:	ldr	r3, [r1]
   1de10:	str	r2, [sp, #20]
   1de14:	lsl	r2, r9, #4
   1de18:	str	r2, [sp, #28]
   1de1c:	add	r2, r3, r2
   1de20:	ldr	ip, [r2, #4]
   1de24:	ldr	r2, [sp, #16]
   1de28:	cmp	r2, ip
   1de2c:	bgt	1e248 <__flatcc_fb_gen_c_verifier@@Base+0x91c>
   1de30:	sub	r2, ip, r2
   1de34:	ldr	r3, [r3, r9, lsl #4]
   1de38:	mov	lr, #1
   1de3c:	cmp	r2, #8
   1de40:	movlt	r5, r2
   1de44:	movge	r5, #8
   1de48:	str	r2, [sp, #40]	; 0x28
   1de4c:	rsb	r0, r5, #8
   1de50:	sub	r6, r5, #1
   1de54:	lsl	r0, r0, #3
   1de58:	mov	fp, r6
   1de5c:	mov	sl, r3
   1de60:	str	r3, [sp, #44]	; 0x2c
   1de64:	sub	r6, r0, #32
   1de68:	lsl	r2, lr, r0
   1de6c:	lsl	r3, lr, r6
   1de70:	rsb	r6, r0, #32
   1de74:	mov	r1, r6
   1de78:	mov	r6, sl
   1de7c:	ldr	sl, [sp, #16]
   1de80:	orr	r3, r3, lr, lsr r1
   1de84:	rsbs	r2, r2, #0
   1de88:	rsc	r3, r3, #0
   1de8c:	cmp	sl, ip
   1de90:	add	r6, r6, sl
   1de94:	strd	r2, [sp, #32]
   1de98:	beq	1e0e4 <__flatcc_fb_gen_c_verifier@@Base+0x7b8>
   1de9c:	ldrb	sl, [r6, fp]
   1dea0:	rsb	r1, fp, #7
   1dea4:	cmp	fp, #0
   1dea8:	lsl	r1, r1, #3
   1deac:	sub	ip, r5, #2
   1deb0:	sub	r0, r1, #32
   1deb4:	rsb	r3, r1, #32
   1deb8:	lsl	r0, sl, r0
   1debc:	lsl	r1, sl, r1
   1dec0:	orr	r0, r0, sl, lsr r3
   1dec4:	beq	1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1dec8:	ldrb	sl, [r6, ip]
   1decc:	rsb	lr, ip, #7
   1ded0:	cmp	ip, #0
   1ded4:	lsl	r3, lr, #3
   1ded8:	sub	ip, r5, #3
   1dedc:	sub	lr, r3, #32
   1dee0:	lsl	lr, sl, lr
   1dee4:	orr	r1, r1, sl, lsl r3
   1dee8:	rsb	r3, r3, #32
   1deec:	orr	lr, lr, sl, lsr r3
   1def0:	orr	r0, lr, r0
   1def4:	beq	1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1def8:	ldrb	sl, [r6, ip]
   1defc:	rsb	lr, ip, #7
   1df00:	cmp	ip, #0
   1df04:	lsl	r3, lr, #3
   1df08:	sub	ip, r5, #4
   1df0c:	sub	lr, r3, #32
   1df10:	lsl	lr, sl, lr
   1df14:	orr	r1, r1, sl, lsl r3
   1df18:	rsb	r3, r3, #32
   1df1c:	orr	lr, lr, sl, lsr r3
   1df20:	orr	r0, lr, r0
   1df24:	beq	1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1df28:	ldrb	sl, [r6, ip]
   1df2c:	rsb	lr, ip, #7
   1df30:	cmp	ip, #0
   1df34:	lsl	r3, lr, #3
   1df38:	sub	ip, r5, #5
   1df3c:	sub	lr, r3, #32
   1df40:	lsl	lr, sl, lr
   1df44:	orr	r1, r1, sl, lsl r3
   1df48:	rsb	r3, r3, #32
   1df4c:	orr	lr, lr, sl, lsr r3
   1df50:	orr	r0, lr, r0
   1df54:	beq	1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1df58:	ldrb	sl, [r6, ip]
   1df5c:	rsb	lr, ip, #7
   1df60:	cmp	ip, #0
   1df64:	lsl	r3, lr, #3
   1df68:	sub	ip, r5, #6
   1df6c:	sub	lr, r3, #32
   1df70:	lsl	lr, sl, lr
   1df74:	orr	r1, r1, sl, lsl r3
   1df78:	rsb	r3, r3, #32
   1df7c:	orr	lr, lr, sl, lsr r3
   1df80:	orr	r0, lr, r0
   1df84:	beq	1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1df88:	ldrb	sl, [r6, ip]
   1df8c:	rsb	lr, ip, #7
   1df90:	cmp	ip, #0
   1df94:	lsl	r3, lr, #3
   1df98:	sub	ip, r5, #7
   1df9c:	sub	lr, r3, #32
   1dfa0:	lsl	lr, sl, lr
   1dfa4:	orr	r1, r1, sl, lsl r3
   1dfa8:	rsb	r3, r3, #32
   1dfac:	orr	lr, lr, sl, lsr r3
   1dfb0:	orr	r0, lr, r0
   1dfb4:	beq	1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1dfb8:	ldrb	sl, [r6, ip]
   1dfbc:	rsb	lr, ip, #7
   1dfc0:	cmp	ip, #0
   1dfc4:	lsl	lr, lr, #3
   1dfc8:	sub	r3, lr, #32
   1dfcc:	lsl	r3, sl, r3
   1dfd0:	orr	r1, r1, sl, lsl lr
   1dfd4:	rsb	lr, lr, #32
   1dfd8:	orr	r3, r3, sl, lsr lr
   1dfdc:	orr	r0, r3, r0
   1dfe0:	beq	1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1dfe4:	ldr	r2, [sp, #16]
   1dfe8:	ldr	r3, [sp, #44]	; 0x2c
   1dfec:	ldrb	r2, [r3, r2]
   1dff0:	orr	r0, r0, r2, lsl #24
   1dff4:	ldr	r3, [sp, #40]	; 0x28
   1dff8:	cmp	r3, #7
   1dffc:	ble	1e0ec <__flatcc_fb_gen_c_verifier@@Base+0x7c0>
   1e000:	mov	r5, #8
   1e004:	mov	r3, r0
   1e008:	mov	r2, r1
   1e00c:	mov	r0, r4
   1e010:	movw	r1, #9620	; 0x2594
   1e014:	movt	r1, #5
   1e018:	stm	sp, {r5, r6}
   1e01c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1e020:	ldr	r3, [r4, #220]	; 0xdc
   1e024:	cmp	r8, r9
   1e028:	add	r3, r3, #1
   1e02c:	str	r3, [r4, #220]	; 0xdc
   1e030:	bne	1e11c <__flatcc_fb_gen_c_verifier@@Base+0x7f0>
   1e034:	ldm	r7, {r2, r8}
   1e038:	mov	r0, r4
   1e03c:	ldr	r3, [sp, #28]
   1e040:	ldr	r1, [r7, #12]
   1e044:	add	r2, r2, r3
   1e048:	ldrd	r2, [r2, #8]
   1e04c:	str	r5, [sp]
   1e050:	blx	r8
   1e054:	ldr	r3, [sp, #20]
   1e058:	cmp	r3, #0
   1e05c:	bgt	1e268 <__flatcc_fb_gen_c_verifier@@Base+0x93c>
   1e060:	mov	r0, r4
   1e064:	ldr	r3, [r7, #8]
   1e068:	blx	r3
   1e06c:	ldr	r3, [r4, #220]	; 0xdc
   1e070:	cmp	r3, #0
   1e074:	beq	1e30c <__flatcc_fb_gen_c_verifier@@Base+0x9e0>
   1e078:	sub	r3, r3, #1
   1e07c:	movw	r1, #9812	; 0x2654
   1e080:	movt	r1, #5
   1e084:	mov	r0, r4
   1e088:	str	r3, [r4, #220]	; 0xdc
   1e08c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1e090:	ldr	r3, [r4, #220]	; 0xdc
   1e094:	cmp	r3, #0
   1e098:	beq	1e2ec <__flatcc_fb_gen_c_verifier@@Base+0x9c0>
   1e09c:	sub	r0, r3, #1
   1e0a0:	mov	r2, r5
   1e0a4:	mov	r3, r6
   1e0a8:	movw	r1, #9816	; 0x2658
   1e0ac:	movt	r1, #5
   1e0b0:	str	r0, [r4, #220]	; 0xdc
   1e0b4:	mov	r0, r4
   1e0b8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1e0bc:	ldr	r3, [r4, #220]	; 0xdc
   1e0c0:	ldr	r2, [sp, #20]
   1e0c4:	add	r3, r3, #1
   1e0c8:	cmp	r2, #0
   1e0cc:	str	r3, [r4, #220]	; 0xdc
   1e0d0:	bgt	1e298 <__flatcc_fb_gen_c_verifier@@Base+0x96c>
   1e0d4:	mov	r0, r4
   1e0d8:	ldr	r3, [r7, #8]
   1e0dc:	blx	r3
   1e0e0:	b	1e200 <__flatcc_fb_gen_c_verifier@@Base+0x8d4>
   1e0e4:	mov	r1, #0
   1e0e8:	mov	r0, r1
   1e0ec:	str	r1, [sp]
   1e0f0:	movw	r1, #9652	; 0x25b4
   1e0f4:	movt	r1, #5
   1e0f8:	stmib	sp, {r0, r5, r6}
   1e0fc:	mov	r0, r4
   1e100:	ldrd	r2, [sp, #32]
   1e104:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1e108:	ldr	r3, [r4, #220]	; 0xdc
   1e10c:	cmp	r8, r9
   1e110:	add	r3, r3, #1
   1e114:	str	r3, [r4, #220]	; 0xdc
   1e118:	beq	1e034 <__flatcc_fb_gen_c_verifier@@Base+0x708>
   1e11c:	ldr	r3, [sp, #24]
   1e120:	cmp	r3, r9
   1e124:	bne	1e188 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1e128:	ldm	r7, {r2, ip}
   1e12c:	mov	r0, r4
   1e130:	ldr	r3, [sp, #28]
   1e134:	ldr	r1, [r7, #12]
   1e138:	add	r2, r2, r3
   1e13c:	ldrd	r2, [r2, #8]
   1e140:	str	r5, [sp]
   1e144:	blx	ip
   1e148:	ldr	r3, [sp, #20]
   1e14c:	cmp	r3, #0
   1e150:	bgt	1e280 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1e154:	mov	r0, r4
   1e158:	ldr	r3, [r7, #8]
   1e15c:	blx	r3
   1e160:	ldr	r3, [r4, #220]	; 0xdc
   1e164:	cmp	r3, #0
   1e168:	beq	1e2cc <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   1e16c:	sub	r3, r3, #1
   1e170:	movw	r1, #9812	; 0x2654
   1e174:	movt	r1, #5
   1e178:	mov	r0, r4
   1e17c:	str	r3, [r4, #220]	; 0xdc
   1e180:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1e184:	b	1e1a4 <__flatcc_fb_gen_c_verifier@@Base+0x878>
   1e188:	ldr	r1, [sp, #16]
   1e18c:	mov	r2, r9
   1e190:	mov	r0, r4
   1e194:	ldr	ip, [sp, #20]
   1e198:	stm	sp, {r1, ip}
   1e19c:	mov	r1, r7
   1e1a0:	bl	1ddc8 <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   1e1a4:	ldr	r3, [r4, #220]	; 0xdc
   1e1a8:	cmp	r3, #0
   1e1ac:	beq	1e32c <__flatcc_fb_gen_c_verifier@@Base+0xa00>
   1e1b0:	sub	r0, r3, #1
   1e1b4:	mov	r2, r5
   1e1b8:	mov	r3, r6
   1e1bc:	movw	r1, #9816	; 0x2658
   1e1c0:	movt	r1, #5
   1e1c4:	str	r0, [r4, #220]	; 0xdc
   1e1c8:	mov	r0, r4
   1e1cc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1e1d0:	ldr	lr, [sp, #16]
   1e1d4:	sub	r3, r9, #1
   1e1d8:	mov	r2, r8
   1e1dc:	mov	r1, r7
   1e1e0:	mov	r0, r4
   1e1e4:	ldr	ip, [r4, #220]	; 0xdc
   1e1e8:	str	lr, [sp]
   1e1ec:	ldr	lr, [sp, #20]
   1e1f0:	add	ip, ip, #1
   1e1f4:	str	lr, [sp, #4]
   1e1f8:	str	ip, [r4, #220]	; 0xdc
   1e1fc:	bl	1ddc8 <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   1e200:	ldr	r3, [r4, #220]	; 0xdc
   1e204:	cmp	r3, #0
   1e208:	beq	1e2ac <__flatcc_fb_gen_c_verifier@@Base+0x980>
   1e20c:	sub	r1, r3, #1
   1e210:	mov	r2, r5
   1e214:	mov	r3, r6
   1e218:	mov	r0, r4
   1e21c:	str	r1, [r4, #220]	; 0xdc
   1e220:	movw	r1, #9840	; 0x2670
   1e224:	movt	r1, #5
   1e228:	add	sp, sp, #52	; 0x34
   1e22c:	ldrd	r4, [sp]
   1e230:	ldrd	r6, [sp, #8]
   1e234:	ldrd	r8, [sp, #16]
   1e238:	ldrd	sl, [sp, #24]
   1e23c:	ldr	lr, [sp, #32]
   1e240:	add	sp, sp, #36	; 0x24
   1e244:	b	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1e248:	mov	r2, #0
   1e24c:	mov	r3, #0
   1e250:	mov	r1, #0
   1e254:	mov	r0, r1
   1e258:	mov	r5, r1
   1e25c:	strd	r2, [sp, #32]
   1e260:	mov	r6, r1
   1e264:	b	1e0ec <__flatcc_fb_gen_c_verifier@@Base+0x7c0>
   1e268:	movw	r1, #9696	; 0x25e0
   1e26c:	movt	r1, #5
   1e270:	mov	r2, r3
   1e274:	mov	r0, r4
   1e278:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1e27c:	b	1e06c <__flatcc_fb_gen_c_verifier@@Base+0x740>
   1e280:	movw	r1, #9696	; 0x25e0
   1e284:	movt	r1, #5
   1e288:	mov	r2, r3
   1e28c:	mov	r0, r4
   1e290:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1e294:	b	1e160 <__flatcc_fb_gen_c_verifier@@Base+0x834>
   1e298:	movw	r1, #9696	; 0x25e0
   1e29c:	movt	r1, #5
   1e2a0:	mov	r0, r4
   1e2a4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1e2a8:	b	1e200 <__flatcc_fb_gen_c_verifier@@Base+0x8d4>
   1e2ac:	movw	r3, #9032	; 0x2348
   1e2b0:	movt	r3, #5
   1e2b4:	movw	r1, #9712	; 0x25f0
   1e2b8:	movt	r1, #5
   1e2bc:	movw	r0, #9800	; 0x2648
   1e2c0:	movt	r0, #5
   1e2c4:	movw	r2, #910	; 0x38e
   1e2c8:	bl	14014 <__assert_fail@plt>
   1e2cc:	movw	r3, #9032	; 0x2348
   1e2d0:	movt	r3, #5
   1e2d4:	movw	r1, #9712	; 0x25f0
   1e2d8:	movt	r1, #5
   1e2dc:	movw	r0, #9800	; 0x2648
   1e2e0:	movt	r0, #5
   1e2e4:	movw	r2, #903	; 0x387
   1e2e8:	bl	14014 <__assert_fail@plt>
   1e2ec:	movw	r3, #9032	; 0x2348
   1e2f0:	movt	r3, #5
   1e2f4:	movw	r1, #9712	; 0x25f0
   1e2f8:	movt	r1, #5
   1e2fc:	movw	r0, #9800	; 0x2648
   1e300:	movt	r0, #5
   1e304:	movw	r2, #889	; 0x379
   1e308:	bl	14014 <__assert_fail@plt>
   1e30c:	movw	r3, #9032	; 0x2348
   1e310:	movt	r3, #5
   1e314:	movw	r1, #9712	; 0x25f0
   1e318:	movt	r1, #5
   1e31c:	movw	r0, #9800	; 0x2648
   1e320:	movt	r0, #5
   1e324:	mov	r2, #888	; 0x378
   1e328:	bl	14014 <__assert_fail@plt>
   1e32c:	movw	r3, #9032	; 0x2348
   1e330:	movt	r3, #5
   1e334:	movw	r1, #9712	; 0x25f0
   1e338:	movt	r1, #5
   1e33c:	movw	r0, #9800	; 0x2648
   1e340:	movt	r0, #5
   1e344:	movw	r2, #907	; 0x38b
   1e348:	bl	14014 <__assert_fail@plt>
   1e34c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e350:	strd	r6, [sp, #8]
   1e354:	strd	r8, [sp, #16]
   1e358:	strd	sl, [sp, #24]
   1e35c:	str	lr, [sp, #32]
   1e360:	sub	sp, sp, #100	; 0x64
   1e364:	ldr	r7, [sp, #136]	; 0x88
   1e368:	strd	r2, [sp, #68]	; 0x44
   1e36c:	ldr	r3, [r1]
   1e370:	strd	r0, [sp, #76]	; 0x4c
   1e374:	add	r1, r7, #7
   1e378:	str	r3, [sp, #84]	; 0x54
   1e37c:	add	r3, r3, r2, lsl #4
   1e380:	str	r1, [sp, #88]	; 0x58
   1e384:	str	r3, [sp, #92]	; 0x5c
   1e388:	ldr	r3, [r3, #4]
   1e38c:	cmp	r1, r3
   1e390:	bge	1e7e8 <__flatcc_fb_gen_c_verifier@@Base+0xebc>
   1e394:	sub	r3, r3, r7
   1e398:	cmp	r3, #8
   1e39c:	beq	1e7e8 <__flatcc_fb_gen_c_verifier@@Base+0xebc>
   1e3a0:	ldrd	r2, [sp, #68]	; 0x44
   1e3a4:	sub	r3, r3, r2
   1e3a8:	add	r3, r3, r3, lsr #31
   1e3ac:	add	r3, r2, r3, asr #1
   1e3b0:	cmp	r2, r3
   1e3b4:	str	r3, [sp, #64]	; 0x40
   1e3b8:	bge	1e830 <__flatcc_fb_gen_c_verifier@@Base+0xf04>
   1e3bc:	ldr	r2, [sp, #84]	; 0x54
   1e3c0:	mov	r4, #0
   1e3c4:	mov	r5, #0
   1e3c8:	mov	lr, #0
   1e3cc:	str	r3, [sp, #52]	; 0x34
   1e3d0:	mov	r1, lr
   1e3d4:	mov	r6, lr
   1e3d8:	strd	r4, [sp, #56]	; 0x38
   1e3dc:	add	r8, r2, r3, lsl #4
   1e3e0:	mov	r2, lr
   1e3e4:	b	1e7b8 <__flatcc_fb_gen_c_verifier@@Base+0xe8c>
   1e3e8:	ldr	ip, [r8, #-16]
   1e3ec:	rsb	r6, r4, #7
   1e3f0:	cmp	r4, #0
   1e3f4:	lsl	r6, r6, #3
   1e3f8:	sub	r9, r3, #2
   1e3fc:	sub	r2, r6, #32
   1e400:	rsb	r0, r6, #32
   1e404:	add	r4, ip, r4
   1e408:	ldrb	r4, [r4, r7]
   1e40c:	lsl	r2, r4, r2
   1e410:	lsl	r6, r4, r6
   1e414:	orr	r2, r2, r4, lsr r0
   1e418:	beq	1e580 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1e41c:	add	r0, ip, r7
   1e420:	mov	r5, #0
   1e424:	ldrb	r4, [r0, r9]
   1e428:	rsb	sl, r9, #7
   1e42c:	cmp	r9, #0
   1e430:	lsl	sl, sl, #3
   1e434:	sub	r9, r3, #3
   1e438:	strd	r4, [sp, #16]
   1e43c:	sub	r5, sl, #32
   1e440:	ldr	fp, [sp, #16]
   1e444:	lsl	r5, fp, r5
   1e448:	orr	r6, r6, fp, lsl sl
   1e44c:	rsb	sl, sl, #32
   1e450:	orr	r5, r5, fp, lsr sl
   1e454:	orr	r2, r5, r2
   1e458:	beq	1e580 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1e45c:	ldrb	r4, [r0, r9]
   1e460:	mov	r5, #0
   1e464:	rsb	sl, r9, #7
   1e468:	cmp	r9, #0
   1e46c:	sub	r9, r3, #4
   1e470:	strd	r4, [sp, #16]
   1e474:	lsl	r5, sl, #3
   1e478:	ldr	fp, [sp, #16]
   1e47c:	sub	sl, r5, #32
   1e480:	lsl	sl, fp, sl
   1e484:	orr	r6, r6, fp, lsl r5
   1e488:	rsb	r5, r5, #32
   1e48c:	orr	sl, sl, fp, lsr r5
   1e490:	orr	r2, sl, r2
   1e494:	beq	1e580 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1e498:	ldrb	r4, [r0, r9]
   1e49c:	mov	r5, #0
   1e4a0:	rsb	sl, r9, #7
   1e4a4:	cmp	r9, #0
   1e4a8:	sub	r9, r3, #5
   1e4ac:	strd	r4, [sp, #16]
   1e4b0:	lsl	r5, sl, #3
   1e4b4:	ldr	fp, [sp, #16]
   1e4b8:	sub	sl, r5, #32
   1e4bc:	lsl	sl, fp, sl
   1e4c0:	orr	r6, r6, fp, lsl r5
   1e4c4:	rsb	r5, r5, #32
   1e4c8:	orr	sl, sl, fp, lsr r5
   1e4cc:	orr	r2, sl, r2
   1e4d0:	beq	1e580 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1e4d4:	ldrb	r4, [r0, r9]
   1e4d8:	mov	r5, #0
   1e4dc:	rsb	sl, r9, #7
   1e4e0:	cmp	r9, #0
   1e4e4:	sub	r9, r3, #6
   1e4e8:	strd	r4, [sp, #16]
   1e4ec:	lsl	r5, sl, #3
   1e4f0:	ldr	fp, [sp, #16]
   1e4f4:	sub	sl, r5, #32
   1e4f8:	lsl	sl, fp, sl
   1e4fc:	orr	r6, r6, fp, lsl r5
   1e500:	rsb	r5, r5, #32
   1e504:	orr	sl, sl, fp, lsr r5
   1e508:	orr	r2, sl, r2
   1e50c:	beq	1e580 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1e510:	ldrb	r4, [r0, r9]
   1e514:	mov	r5, #0
   1e518:	rsb	sl, r9, #7
   1e51c:	cmp	r9, #0
   1e520:	sub	r9, r3, #7
   1e524:	strd	r4, [sp, #16]
   1e528:	lsl	r5, sl, #3
   1e52c:	ldr	fp, [sp, #16]
   1e530:	sub	sl, r5, #32
   1e534:	lsl	sl, fp, sl
   1e538:	orr	r6, r6, fp, lsl r5
   1e53c:	rsb	r5, r5, #32
   1e540:	orr	sl, sl, fp, lsr r5
   1e544:	orr	r2, sl, r2
   1e548:	beq	1e580 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1e54c:	ldrb	r4, [r0, r9]
   1e550:	rsb	sl, r9, #7
   1e554:	cmp	r9, #0
   1e558:	lsl	sl, sl, #3
   1e55c:	sub	r0, sl, #32
   1e560:	lsl	r0, r4, r0
   1e564:	orr	r6, r6, r4, lsl sl
   1e568:	rsb	sl, sl, #32
   1e56c:	orr	r0, r0, r4, lsr sl
   1e570:	orr	r2, r0, r2
   1e574:	beq	1e580 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1e578:	ldrb	r4, [ip, r7]
   1e57c:	orr	r2, r2, r4, lsl #24
   1e580:	rsb	r3, r3, #8
   1e584:	mov	r4, #1
   1e588:	lsl	r3, r3, #3
   1e58c:	sub	ip, r3, #32
   1e590:	rsb	r0, r3, #32
   1e594:	lsl	r3, r4, r3
   1e598:	lsl	ip, r4, ip
   1e59c:	orr	r0, ip, r4, lsr r0
   1e5a0:	str	r3, [sp, #8]
   1e5a4:	str	r0, [sp, #12]
   1e5a8:	ldrd	r4, [sp, #8]
   1e5ac:	rsbs	r4, r4, #0
   1e5b0:	rsc	r5, r5, #0
   1e5b4:	strd	r4, [sp, #56]	; 0x38
   1e5b8:	ldm	r8, {r9, ip}
   1e5bc:	cmp	r7, ip
   1e5c0:	bgt	1e774 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1e5c4:	sub	r3, ip, r7
   1e5c8:	cmp	r3, #8
   1e5cc:	movge	r3, #8
   1e5d0:	cmp	r7, ip
   1e5d4:	sub	r1, r3, #1
   1e5d8:	beq	1ec7c <__flatcc_fb_gen_c_verifier@@Base+0x1350>
   1e5dc:	add	r0, r9, r7
   1e5e0:	mov	r5, #0
   1e5e4:	ldrb	r4, [r0, r1]
   1e5e8:	rsb	lr, r1, #7
   1e5ec:	cmp	r1, #0
   1e5f0:	lsl	lr, lr, #3
   1e5f4:	sub	sl, r3, #2
   1e5f8:	sub	r1, lr, #32
   1e5fc:	strd	r4, [sp, #16]
   1e600:	rsb	r5, lr, #32
   1e604:	ldr	fp, [sp, #16]
   1e608:	lsl	r1, fp, r1
   1e60c:	lsl	lr, fp, lr
   1e610:	orr	r1, r1, fp, lsr r5
   1e614:	beq	1e774 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1e618:	ldrb	r4, [r0, sl]
   1e61c:	mov	r5, #0
   1e620:	rsb	fp, sl, #7
   1e624:	cmp	sl, #0
   1e628:	sub	sl, r3, #3
   1e62c:	strd	r4, [sp, #16]
   1e630:	lsl	r5, fp, #3
   1e634:	ldr	r4, [sp, #16]
   1e638:	sub	fp, r5, #32
   1e63c:	lsl	fp, r4, fp
   1e640:	orr	lr, lr, r4, lsl r5
   1e644:	rsb	r5, r5, #32
   1e648:	orr	fp, fp, r4, lsr r5
   1e64c:	orr	r1, fp, r1
   1e650:	beq	1e774 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1e654:	ldrb	r4, [r0, sl]
   1e658:	mov	r5, #0
   1e65c:	rsb	fp, sl, #7
   1e660:	cmp	sl, #0
   1e664:	sub	sl, r3, #4
   1e668:	strd	r4, [sp, #16]
   1e66c:	lsl	r5, fp, #3
   1e670:	ldr	r4, [sp, #16]
   1e674:	sub	fp, r5, #32
   1e678:	lsl	fp, r4, fp
   1e67c:	orr	lr, lr, r4, lsl r5
   1e680:	rsb	r5, r5, #32
   1e684:	orr	fp, fp, r4, lsr r5
   1e688:	orr	r1, fp, r1
   1e68c:	beq	1e774 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1e690:	ldrb	r4, [r0, sl]
   1e694:	mov	r5, #0
   1e698:	rsb	fp, sl, #7
   1e69c:	cmp	sl, #0
   1e6a0:	sub	sl, r3, #5
   1e6a4:	strd	r4, [sp, #16]
   1e6a8:	lsl	r5, fp, #3
   1e6ac:	ldr	r4, [sp, #16]
   1e6b0:	sub	fp, r5, #32
   1e6b4:	lsl	fp, r4, fp
   1e6b8:	orr	lr, lr, r4, lsl r5
   1e6bc:	rsb	r5, r5, #32
   1e6c0:	orr	fp, fp, r4, lsr r5
   1e6c4:	orr	r1, fp, r1
   1e6c8:	beq	1e774 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1e6cc:	ldrb	r4, [r0, sl]
   1e6d0:	mov	r5, #0
   1e6d4:	rsb	fp, sl, #7
   1e6d8:	cmp	sl, #0
   1e6dc:	sub	sl, r3, #6
   1e6e0:	strd	r4, [sp, #16]
   1e6e4:	lsl	r5, fp, #3
   1e6e8:	ldr	r4, [sp, #16]
   1e6ec:	sub	fp, r5, #32
   1e6f0:	lsl	fp, r4, fp
   1e6f4:	orr	lr, lr, r4, lsl r5
   1e6f8:	rsb	r5, r5, #32
   1e6fc:	orr	fp, fp, r4, lsr r5
   1e700:	orr	r1, fp, r1
   1e704:	beq	1e774 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1e708:	ldrb	r4, [r0, sl]
   1e70c:	mov	r5, #0
   1e710:	rsb	fp, sl, #7
   1e714:	cmp	sl, #0
   1e718:	sub	r3, r3, #7
   1e71c:	strd	r4, [sp, #16]
   1e720:	lsl	r5, fp, #3
   1e724:	ldr	fp, [sp, #16]
   1e728:	sub	sl, r5, #32
   1e72c:	lsl	sl, fp, sl
   1e730:	orr	lr, lr, fp, lsl r5
   1e734:	rsb	r5, r5, #32
   1e738:	orr	sl, sl, fp, lsr r5
   1e73c:	orr	r1, sl, r1
   1e740:	beq	1e774 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1e744:	ldrb	r4, [r0, r3]
   1e748:	rsb	sl, r3, #7
   1e74c:	cmp	r3, #0
   1e750:	lsl	sl, sl, #3
   1e754:	sub	r3, sl, #32
   1e758:	lsl	r3, r4, r3
   1e75c:	orr	lr, lr, r4, lsl sl
   1e760:	rsb	sl, sl, #32
   1e764:	orr	r3, r3, r4, lsr sl
   1e768:	ldrbne	r4, [r9, r7]
   1e76c:	orr	r1, r3, r1
   1e770:	orrne	r1, r1, r4, lsl #24
   1e774:	eor	r0, r6, lr
   1e778:	eor	r3, r2, r1
   1e77c:	ldrd	sl, [sp, #56]	; 0x38
   1e780:	and	r0, sl, r0
   1e784:	and	r3, fp, r3
   1e788:	str	r0, [sp, #32]
   1e78c:	str	r3, [sp, #36]	; 0x24
   1e790:	ldrd	sl, [sp, #32]
   1e794:	ldr	r0, [sp, #52]	; 0x34
   1e798:	orrs	r3, sl, fp
   1e79c:	sub	r4, r0, #1
   1e7a0:	bne	1ee1c <__flatcc_fb_gen_c_verifier@@Base+0x14f0>
   1e7a4:	ldr	r0, [sp, #68]	; 0x44
   1e7a8:	sub	r8, r8, #16
   1e7ac:	str	r4, [sp, #52]	; 0x34
   1e7b0:	cmp	r0, r4
   1e7b4:	beq	1e830 <__flatcc_fb_gen_c_verifier@@Base+0xf04>
   1e7b8:	ldr	r0, [r8, #-12]
   1e7bc:	cmp	r7, r0
   1e7c0:	bgt	1e5b8 <__flatcc_fb_gen_c_verifier@@Base+0xc8c>
   1e7c4:	sub	r3, r0, r7
   1e7c8:	cmp	r3, #8
   1e7cc:	movge	r3, #8
   1e7d0:	cmp	r7, r0
   1e7d4:	sub	r4, r3, #1
   1e7d8:	bne	1e3e8 <__flatcc_fb_gen_c_verifier@@Base+0xabc>
   1e7dc:	mov	r6, #0
   1e7e0:	mov	r2, r6
   1e7e4:	b	1e580 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1e7e8:	ldr	r3, [sp, #68]	; 0x44
   1e7ec:	ldr	r2, [sp, #72]	; 0x48
   1e7f0:	cmp	r3, r2
   1e7f4:	beq	1f058 <__flatcc_fb_gen_c_verifier@@Base+0x172c>
   1e7f8:	add	r3, r3, #1
   1e7fc:	cmp	r3, r2
   1e800:	bne	1e3a0 <__flatcc_fb_gen_c_verifier@@Base+0xa74>
   1e804:	ldr	r3, [sp, #84]	; 0x54
   1e808:	add	r3, r3, r2, lsl #4
   1e80c:	ldr	r2, [sp, #88]	; 0x58
   1e810:	ldr	r3, [r3, #4]
   1e814:	cmp	r2, r3
   1e818:	bge	1f058 <__flatcc_fb_gen_c_verifier@@Base+0x172c>
   1e81c:	sub	r3, r3, r7
   1e820:	cmp	r3, #8
   1e824:	beq	1f058 <__flatcc_fb_gen_c_verifier@@Base+0x172c>
   1e828:	ldr	r3, [sp, #68]	; 0x44
   1e82c:	str	r3, [sp, #64]	; 0x40
   1e830:	ldr	r2, [sp, #64]	; 0x40
   1e834:	ldr	r3, [sp, #72]	; 0x48
   1e838:	cmp	r3, r2
   1e83c:	movle	r4, r2
   1e840:	ble	1ec90 <__flatcc_fb_gen_c_verifier@@Base+0x1364>
   1e844:	ldr	r3, [sp, #84]	; 0x54
   1e848:	mov	lr, #0
   1e84c:	mov	fp, #1
   1e850:	mov	ip, lr
   1e854:	mov	r6, lr
   1e858:	add	r8, r3, r2, lsl #4
   1e85c:	mov	r2, #0
   1e860:	mov	r3, #0
   1e864:	mov	sl, r8
   1e868:	mov	r8, lr
   1e86c:	strd	r2, [sp, #8]
   1e870:	mov	r2, lr
   1e874:	b	1ec4c <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   1e878:	ldr	r4, [sl]
   1e87c:	rsb	r6, r1, #7
   1e880:	cmp	r1, #0
   1e884:	lsl	r6, r6, #3
   1e888:	sub	r5, r3, #2
   1e88c:	sub	r2, r6, #32
   1e890:	rsb	r9, r6, #32
   1e894:	add	lr, r4, r7
   1e898:	ldrb	r0, [lr, r1]
   1e89c:	lsl	r2, r0, r2
   1e8a0:	lsl	r6, r0, r6
   1e8a4:	orr	r2, r2, r0, lsr r9
   1e8a8:	beq	1ea24 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1e8ac:	ldrb	r0, [lr, r5]
   1e8b0:	mov	r1, #0
   1e8b4:	rsb	r9, r5, #7
   1e8b8:	cmp	r5, #0
   1e8bc:	strd	r0, [sp, #8]
   1e8c0:	lsl	r1, r9, #3
   1e8c4:	sub	r9, r3, #3
   1e8c8:	ldr	r0, [sp, #8]
   1e8cc:	sub	r5, r1, #32
   1e8d0:	lsl	r5, r0, r5
   1e8d4:	orr	r6, r6, r0, lsl r1
   1e8d8:	rsb	r1, r1, #32
   1e8dc:	orr	r5, r5, r0, lsr r1
   1e8e0:	orr	r2, r5, r2
   1e8e4:	beq	1ea24 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1e8e8:	add	r1, r4, r9
   1e8ec:	rsb	r5, r9, #7
   1e8f0:	ldrb	r0, [r1, r7]
   1e8f4:	mov	r1, #0
   1e8f8:	lsl	r5, r5, #3
   1e8fc:	cmp	r9, #0
   1e900:	sub	r9, r3, #4
   1e904:	strd	r0, [sp, #8]
   1e908:	sub	r1, r5, #32
   1e90c:	ldr	r0, [sp, #8]
   1e910:	lsl	r1, r0, r1
   1e914:	orr	r6, r6, r0, lsl r5
   1e918:	rsb	r5, r5, #32
   1e91c:	orr	r1, r1, r0, lsr r5
   1e920:	orr	r2, r1, r2
   1e924:	beq	1ea24 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1e928:	add	r1, r4, r9
   1e92c:	rsb	r5, r9, #7
   1e930:	ldrb	r0, [r1, r7]
   1e934:	mov	r1, #0
   1e938:	lsl	r5, r5, #3
   1e93c:	cmp	r9, #0
   1e940:	sub	r9, r3, #5
   1e944:	strd	r0, [sp, #8]
   1e948:	sub	r1, r5, #32
   1e94c:	ldr	r0, [sp, #8]
   1e950:	lsl	r1, r0, r1
   1e954:	orr	r6, r6, r0, lsl r5
   1e958:	rsb	r5, r5, #32
   1e95c:	orr	r1, r1, r0, lsr r5
   1e960:	orr	r2, r1, r2
   1e964:	beq	1ea24 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1e968:	add	r1, r4, r9
   1e96c:	rsb	r5, r9, #7
   1e970:	ldrb	r0, [r1, r7]
   1e974:	mov	r1, #0
   1e978:	lsl	r5, r5, #3
   1e97c:	cmp	r9, #0
   1e980:	sub	r9, r3, #6
   1e984:	strd	r0, [sp, #8]
   1e988:	sub	r1, r5, #32
   1e98c:	ldr	r0, [sp, #8]
   1e990:	lsl	r1, r0, r1
   1e994:	orr	r6, r6, r0, lsl r5
   1e998:	rsb	r5, r5, #32
   1e99c:	orr	r1, r1, r0, lsr r5
   1e9a0:	orr	r2, r1, r2
   1e9a4:	beq	1ea24 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1e9a8:	ldrb	r0, [lr, r9]
   1e9ac:	mov	r1, #0
   1e9b0:	rsb	r5, r9, #7
   1e9b4:	cmp	r9, #0
   1e9b8:	strd	r0, [sp, #8]
   1e9bc:	lsl	r1, r5, #3
   1e9c0:	sub	r5, r3, #7
   1e9c4:	ldr	r0, [sp, #8]
   1e9c8:	sub	r9, r1, #32
   1e9cc:	lsl	r9, r0, r9
   1e9d0:	orr	r6, r6, r0, lsl r1
   1e9d4:	rsb	r1, r1, #32
   1e9d8:	orr	r9, r9, r0, lsr r1
   1e9dc:	orr	r2, r9, r2
   1e9e0:	beq	1ea24 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1e9e4:	ldrb	r0, [lr, r5]
   1e9e8:	mov	r1, #0
   1e9ec:	rsb	r9, r5, #7
   1e9f0:	lsl	r9, r9, #3
   1e9f4:	cmp	r5, #0
   1e9f8:	strd	r0, [sp, #8]
   1e9fc:	sub	r1, r9, #32
   1ea00:	ldr	lr, [sp, #8]
   1ea04:	lsl	r1, lr, r1
   1ea08:	orr	r6, r6, lr, lsl r9
   1ea0c:	rsb	r9, r9, #32
   1ea10:	orr	r1, r1, lr, lsr r9
   1ea14:	orr	r2, r1, r2
   1ea18:	beq	1ea24 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1ea1c:	ldrb	r0, [r4, r7]
   1ea20:	orr	r2, r2, r0, lsl #24
   1ea24:	rsb	r3, r3, #8
   1ea28:	lsl	r3, r3, #3
   1ea2c:	sub	r0, r3, #32
   1ea30:	rsb	r1, r3, #32
   1ea34:	lsl	r3, fp, r3
   1ea38:	lsl	r0, fp, r0
   1ea3c:	orr	r1, r0, fp, lsr r1
   1ea40:	str	r3, [sp, #24]
   1ea44:	str	r1, [sp, #28]
   1ea48:	ldrd	r0, [sp, #24]
   1ea4c:	rsbs	r0, r0, #0
   1ea50:	rsc	r1, r1, #0
   1ea54:	strd	r0, [sp, #8]
   1ea58:	ldr	r1, [sl, #20]
   1ea5c:	cmp	r7, r1
   1ea60:	bgt	1ec04 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1ea64:	sub	r3, r1, r7
   1ea68:	cmp	r3, #8
   1ea6c:	movge	r3, #8
   1ea70:	cmp	r7, r1
   1ea74:	sub	r1, r3, #1
   1ea78:	beq	1f088 <__flatcc_fb_gen_c_verifier@@Base+0x175c>
   1ea7c:	ldr	r9, [sl, #16]
   1ea80:	rsb	r8, r1, #7
   1ea84:	cmp	r1, #0
   1ea88:	lsl	r8, r8, #3
   1ea8c:	sub	lr, r3, #2
   1ea90:	sub	ip, r8, #32
   1ea94:	rsb	r4, r8, #32
   1ea98:	add	r1, r9, r1
   1ea9c:	ldrb	r0, [r1, r7]
   1eaa0:	lsl	ip, r0, ip
   1eaa4:	lsl	r8, r0, r8
   1eaa8:	orr	ip, ip, r0, lsr r4
   1eaac:	beq	1ec04 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1eab0:	add	r1, r9, r7
   1eab4:	mov	r5, #0
   1eab8:	ldrb	r4, [r1, lr]
   1eabc:	rsb	r0, lr, #7
   1eac0:	cmp	lr, #0
   1eac4:	lsl	r0, r0, #3
   1eac8:	sub	lr, r3, #3
   1eacc:	strd	r4, [sp, #16]
   1ead0:	sub	r5, r0, #32
   1ead4:	ldr	r4, [sp, #16]
   1ead8:	lsl	r5, r4, r5
   1eadc:	orr	r8, r8, r4, lsl r0
   1eae0:	rsb	r0, r0, #32
   1eae4:	orr	r5, r5, r4, lsr r0
   1eae8:	orr	ip, r5, ip
   1eaec:	beq	1ec04 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1eaf0:	ldrb	r4, [r1, lr]
   1eaf4:	mov	r5, #0
   1eaf8:	rsb	r0, lr, #7
   1eafc:	cmp	lr, #0
   1eb00:	strd	r4, [sp, #16]
   1eb04:	lsl	r5, r0, #3
   1eb08:	sub	r0, r3, #4
   1eb0c:	ldr	r4, [sp, #16]
   1eb10:	sub	lr, r5, #32
   1eb14:	lsl	lr, r4, lr
   1eb18:	orr	r8, r8, r4, lsl r5
   1eb1c:	rsb	r5, r5, #32
   1eb20:	orr	lr, lr, r4, lsr r5
   1eb24:	orr	ip, lr, ip
   1eb28:	beq	1ec04 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1eb2c:	ldrb	r4, [r1, r0]
   1eb30:	mov	r5, #0
   1eb34:	rsb	lr, r0, #7
   1eb38:	lsl	lr, lr, #3
   1eb3c:	cmp	r0, #0
   1eb40:	sub	r0, r3, #5
   1eb44:	strd	r4, [sp, #16]
   1eb48:	sub	r5, lr, #32
   1eb4c:	ldr	r4, [sp, #16]
   1eb50:	lsl	r5, r4, r5
   1eb54:	orr	r8, r8, r4, lsl lr
   1eb58:	rsb	lr, lr, #32
   1eb5c:	orr	r5, r5, r4, lsr lr
   1eb60:	orr	ip, r5, ip
   1eb64:	beq	1ec04 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1eb68:	ldrb	r4, [r1, r0]
   1eb6c:	mov	r5, #0
   1eb70:	rsb	lr, r0, #7
   1eb74:	lsl	lr, lr, #3
   1eb78:	cmp	r0, #0
   1eb7c:	sub	r0, r3, #6
   1eb80:	strd	r4, [sp, #16]
   1eb84:	sub	r5, lr, #32
   1eb88:	ldr	r4, [sp, #16]
   1eb8c:	lsl	r5, r4, r5
   1eb90:	orr	r8, r8, r4, lsl lr
   1eb94:	rsb	lr, lr, #32
   1eb98:	orr	r5, r5, r4, lsr lr
   1eb9c:	orr	ip, r5, ip
   1eba0:	beq	1ec04 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1eba4:	ldrb	r4, [r1, r0]
   1eba8:	rsb	lr, r0, #7
   1ebac:	cmp	r0, #0
   1ebb0:	lsl	lr, lr, #3
   1ebb4:	sub	r3, r3, #7
   1ebb8:	sub	r0, lr, #32
   1ebbc:	lsl	r0, r4, r0
   1ebc0:	orr	r8, r8, r4, lsl lr
   1ebc4:	rsb	lr, lr, #32
   1ebc8:	orr	r0, r0, r4, lsr lr
   1ebcc:	orr	ip, r0, ip
   1ebd0:	beq	1ec04 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1ebd4:	ldrb	r0, [r1, r3]
   1ebd8:	rsb	lr, r3, #7
   1ebdc:	cmp	r3, #0
   1ebe0:	lsl	lr, lr, #3
   1ebe4:	sub	r3, lr, #32
   1ebe8:	lsl	r3, r0, r3
   1ebec:	orr	r8, r8, r0, lsl lr
   1ebf0:	rsb	lr, lr, #32
   1ebf4:	orr	r3, r3, r0, lsr lr
   1ebf8:	ldrbne	r0, [r9, r7]
   1ebfc:	orr	ip, r3, ip
   1ec00:	orrne	ip, ip, r0, lsl #24
   1ec04:	eor	r1, r6, r8
   1ec08:	eor	r3, r2, ip
   1ec0c:	ldr	r0, [sp, #8]
   1ec10:	and	r1, r0, r1
   1ec14:	str	r1, [sp, #40]	; 0x28
   1ec18:	ldr	r1, [sp, #64]	; 0x40
   1ec1c:	add	r4, r1, #1
   1ec20:	ldr	r1, [sp, #12]
   1ec24:	and	r3, r1, r3
   1ec28:	str	r3, [sp, #44]	; 0x2c
   1ec2c:	ldrd	r0, [sp, #40]	; 0x28
   1ec30:	orrs	r3, r0, r1
   1ec34:	bne	1ec98 <__flatcc_fb_gen_c_verifier@@Base+0x136c>
   1ec38:	ldr	r1, [sp, #72]	; 0x48
   1ec3c:	add	sl, sl, #16
   1ec40:	str	r4, [sp, #64]	; 0x40
   1ec44:	cmp	r1, r4
   1ec48:	beq	1ec90 <__flatcc_fb_gen_c_verifier@@Base+0x1364>
   1ec4c:	ldr	r1, [sl, #4]
   1ec50:	cmp	r7, r1
   1ec54:	bgt	1ea58 <__flatcc_fb_gen_c_verifier@@Base+0x112c>
   1ec58:	sub	r3, r1, r7
   1ec5c:	cmp	r3, #8
   1ec60:	movge	r3, #8
   1ec64:	cmp	r7, r1
   1ec68:	sub	r1, r3, #1
   1ec6c:	bne	1e878 <__flatcc_fb_gen_c_verifier@@Base+0xf4c>
   1ec70:	mov	r6, #0
   1ec74:	mov	r2, r6
   1ec78:	b	1ea24 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1ec7c:	mov	lr, #0
   1ec80:	mov	r0, r6
   1ec84:	mov	r1, lr
   1ec88:	mov	r3, r2
   1ec8c:	b	1e77c <__flatcc_fb_gen_c_verifier@@Base+0xe50>
   1ec90:	str	r4, [sp, #64]	; 0x40
   1ec94:	add	r4, r4, #1
   1ec98:	ldr	r5, [sp, #68]	; 0x44
   1ec9c:	cmp	r5, r4
   1eca0:	bge	1f378 <__flatcc_fb_gen_c_verifier@@Base+0x1a4c>
   1eca4:	ldr	r0, [sp, #88]	; 0x58
   1eca8:	ldr	r3, [sp, #92]	; 0x5c
   1ecac:	ldr	r2, [r3, #4]
   1ecb0:	cmp	r0, r2
   1ecb4:	bge	1ecc4 <__flatcc_fb_gen_c_verifier@@Base+0x1398>
   1ecb8:	sub	r1, r2, r7
   1ecbc:	cmp	r1, #8
   1ecc0:	bgt	1f09c <__flatcc_fb_gen_c_verifier@@Base+0x1770>
   1ecc4:	add	r5, r5, #1
   1ecc8:	add	r3, r3, #16
   1eccc:	cmp	r5, r4
   1ecd0:	bne	1ecac <__flatcc_fb_gen_c_verifier@@Base+0x1380>
   1ecd4:	ldr	r8, [sp, #68]	; 0x44
   1ecd8:	movw	r6, #39472	; 0x9a30
   1ecdc:	movt	r6, #4
   1ece0:	mov	r9, r5
   1ece4:	ldr	r3, [sp, #72]	; 0x48
   1ece8:	cmp	r8, r5
   1ecec:	movlt	r8, #1
   1ecf0:	movge	r8, #0
   1ecf4:	cmp	r3, r5
   1ecf8:	movlt	r8, #0
   1ecfc:	cmp	r8, #0
   1ed00:	movne	r8, #0
   1ed04:	beq	1f43c <__flatcc_fb_gen_c_verifier@@Base+0x1b10>
   1ed08:	sub	r3, r9, #1
   1ed0c:	ldr	r2, [sp, #68]	; 0x44
   1ed10:	mov	sl, #0
   1ed14:	ldr	lr, [sp, #80]	; 0x50
   1ed18:	ldr	fp, [sp, #76]	; 0x4c
   1ed1c:	ldr	ip, [lr, #24]
   1ed20:	mov	r1, lr
   1ed24:	mov	r0, fp
   1ed28:	add	r9, ip, #1
   1ed2c:	stm	sp, {r7, r9}
   1ed30:	str	r9, [lr, #24]
   1ed34:	bl	1ddc8 <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   1ed38:	mov	r2, r9
   1ed3c:	mov	r0, fp
   1ed40:	movw	r1, #10176	; 0x27c0
   1ed44:	movt	r1, #5
   1ed48:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1ed4c:	ldr	r3, [fp, #220]	; 0xdc
   1ed50:	mov	r2, r9
   1ed54:	mov	r0, fp
   1ed58:	movw	r1, #10196	; 0x27d4
   1ed5c:	movt	r1, #5
   1ed60:	str	sl, [fp, #220]	; 0xdc
   1ed64:	str	r3, [fp, #228]	; 0xe4
   1ed68:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1ed6c:	ldr	ip, [fp, #228]	; 0xe4
   1ed70:	mov	r0, fp
   1ed74:	mov	r2, r4
   1ed78:	str	r7, [sp]
   1ed7c:	ldr	r3, [sp, #72]	; 0x48
   1ed80:	ldr	r1, [sp, #80]	; 0x50
   1ed84:	str	ip, [fp, #220]	; 0xdc
   1ed88:	bl	1e34c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   1ed8c:	ldr	r3, [fp, #220]	; 0xdc
   1ed90:	mov	r0, fp
   1ed94:	mov	r2, r9
   1ed98:	movw	r1, #10208	; 0x27e0
   1ed9c:	movt	r1, #5
   1eda0:	str	sl, [fp, #220]	; 0xdc
   1eda4:	str	r3, [fp, #228]	; 0xe4
   1eda8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1edac:	ldr	r3, [fp, #228]	; 0xe4
   1edb0:	movw	r1, #10224	; 0x27f0
   1edb4:	movt	r1, #5
   1edb8:	mov	r0, fp
   1edbc:	str	r3, [fp, #220]	; 0xdc
   1edc0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1edc4:	cmp	r4, r5
   1edc8:	ble	1f06c <__flatcc_fb_gen_c_verifier@@Base+0x1740>
   1edcc:	ldr	r3, [sp, #76]	; 0x4c
   1edd0:	ldr	r3, [r3, #220]	; 0xdc
   1edd4:	cmp	r3, #0
   1edd8:	beq	1f398 <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1eddc:	ldr	ip, [sp, #76]	; 0x4c
   1ede0:	sub	r1, r3, #1
   1ede4:	mov	r2, r8
   1ede8:	mov	r3, r6
   1edec:	mov	r0, ip
   1edf0:	str	r1, [ip, #220]	; 0xdc
   1edf4:	movw	r1, #10236	; 0x27fc
   1edf8:	movt	r1, #5
   1edfc:	add	sp, sp, #100	; 0x64
   1ee00:	ldrd	r4, [sp]
   1ee04:	ldrd	r6, [sp, #8]
   1ee08:	ldrd	r8, [sp, #16]
   1ee0c:	ldrd	sl, [sp, #24]
   1ee10:	ldr	lr, [sp, #32]
   1ee14:	add	sp, sp, #36	; 0x24
   1ee18:	b	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1ee1c:	cmp	r7, ip
   1ee20:	bgt	1f248 <__flatcc_fb_gen_c_verifier@@Base+0x191c>
   1ee24:	sub	r5, ip, r7
   1ee28:	add	r6, r9, r7
   1ee2c:	cmp	r5, #8
   1ee30:	movge	r5, #8
   1ee34:	cmp	r7, ip
   1ee38:	sub	r3, r5, #1
   1ee3c:	beq	1f368 <__flatcc_fb_gen_c_verifier@@Base+0x1a3c>
   1ee40:	ldrb	sl, [r6, r3]
   1ee44:	rsb	r2, r3, #7
   1ee48:	cmp	r3, #0
   1ee4c:	lsl	r2, r2, #3
   1ee50:	sub	ip, r5, #2
   1ee54:	sub	r3, r2, #32
   1ee58:	rsb	r1, r2, #32
   1ee5c:	lsl	r3, sl, r3
   1ee60:	lsl	r2, sl, r2
   1ee64:	orr	r3, r3, sl, lsr r1
   1ee68:	beq	1ef98 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1ee6c:	ldrb	sl, [r6, ip]
   1ee70:	rsb	lr, ip, #7
   1ee74:	cmp	ip, #0
   1ee78:	lsl	r1, lr, #3
   1ee7c:	sub	ip, r5, #3
   1ee80:	sub	lr, r1, #32
   1ee84:	lsl	lr, sl, lr
   1ee88:	orr	r2, r2, sl, lsl r1
   1ee8c:	rsb	r1, r1, #32
   1ee90:	orr	lr, lr, sl, lsr r1
   1ee94:	orr	r3, lr, r3
   1ee98:	beq	1ef98 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1ee9c:	ldrb	sl, [r6, ip]
   1eea0:	rsb	lr, ip, #7
   1eea4:	cmp	ip, #0
   1eea8:	lsl	r1, lr, #3
   1eeac:	sub	ip, r5, #4
   1eeb0:	sub	lr, r1, #32
   1eeb4:	lsl	lr, sl, lr
   1eeb8:	orr	r2, r2, sl, lsl r1
   1eebc:	rsb	r1, r1, #32
   1eec0:	orr	lr, lr, sl, lsr r1
   1eec4:	orr	r3, lr, r3
   1eec8:	beq	1ef98 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1eecc:	ldrb	sl, [r6, ip]
   1eed0:	rsb	lr, ip, #7
   1eed4:	cmp	ip, #0
   1eed8:	lsl	r1, lr, #3
   1eedc:	sub	ip, r5, #5
   1eee0:	sub	lr, r1, #32
   1eee4:	lsl	lr, sl, lr
   1eee8:	orr	r2, r2, sl, lsl r1
   1eeec:	rsb	r1, r1, #32
   1eef0:	orr	lr, lr, sl, lsr r1
   1eef4:	orr	r3, lr, r3
   1eef8:	beq	1ef98 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1eefc:	ldrb	sl, [r6, ip]
   1ef00:	rsb	lr, ip, #7
   1ef04:	cmp	ip, #0
   1ef08:	lsl	r1, lr, #3
   1ef0c:	sub	ip, r5, #6
   1ef10:	sub	lr, r1, #32
   1ef14:	lsl	lr, sl, lr
   1ef18:	orr	r2, r2, sl, lsl r1
   1ef1c:	rsb	r1, r1, #32
   1ef20:	orr	lr, lr, sl, lsr r1
   1ef24:	orr	r3, lr, r3
   1ef28:	beq	1ef98 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1ef2c:	ldrb	sl, [r6, ip]
   1ef30:	rsb	lr, ip, #7
   1ef34:	cmp	ip, #0
   1ef38:	lsl	r1, lr, #3
   1ef3c:	sub	ip, r5, #7
   1ef40:	sub	lr, r1, #32
   1ef44:	lsl	lr, sl, lr
   1ef48:	orr	r2, r2, sl, lsl r1
   1ef4c:	rsb	r1, r1, #32
   1ef50:	orr	lr, lr, sl, lsr r1
   1ef54:	orr	r3, lr, r3
   1ef58:	beq	1ef98 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1ef5c:	ldrb	sl, [r6, ip]
   1ef60:	rsb	lr, ip, #7
   1ef64:	cmp	ip, #0
   1ef68:	lsl	lr, lr, #3
   1ef6c:	sub	r1, lr, #32
   1ef70:	lsl	r1, sl, r1
   1ef74:	orr	ip, r2, sl, lsl lr
   1ef78:	rsb	lr, lr, #32
   1ef7c:	orr	r1, r1, sl, lsr lr
   1ef80:	mov	r2, ip
   1ef84:	orr	lr, r1, r3
   1ef88:	mov	r3, lr
   1ef8c:	beq	1ef98 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1ef90:	ldrb	r0, [r9, r7]
   1ef94:	orr	r3, lr, r0, lsl #24
   1ef98:	ldr	r8, [sp, #76]	; 0x4c
   1ef9c:	movw	r1, #9856	; 0x2680
   1efa0:	movt	r1, #5
   1efa4:	stm	sp, {r5, r6}
   1efa8:	mov	r0, r8
   1efac:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1efb0:	ldr	ip, [r8, #220]	; 0xdc
   1efb4:	mov	r3, r4
   1efb8:	mov	r0, r8
   1efbc:	str	r7, [sp]
   1efc0:	ldr	r2, [sp, #68]	; 0x44
   1efc4:	ldr	r1, [sp, #80]	; 0x50
   1efc8:	add	ip, ip, #1
   1efcc:	str	ip, [r8, #220]	; 0xdc
   1efd0:	bl	1e34c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   1efd4:	ldr	r3, [r8, #220]	; 0xdc
   1efd8:	cmp	r3, #0
   1efdc:	beq	1f404 <__flatcc_fb_gen_c_verifier@@Base+0x1ad8>
   1efe0:	ldr	r4, [sp, #76]	; 0x4c
   1efe4:	sub	r0, r3, #1
   1efe8:	mov	r2, r5
   1efec:	mov	r3, r6
   1eff0:	movw	r1, #9896	; 0x26a8
   1eff4:	movt	r1, #5
   1eff8:	str	r0, [r4, #220]	; 0xdc
   1effc:	mov	r0, r4
   1f000:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f004:	ldr	ip, [r4, #220]	; 0xdc
   1f008:	mov	r0, r4
   1f00c:	str	r7, [sp]
   1f010:	ldr	r2, [sp, #52]	; 0x34
   1f014:	ldr	r3, [sp, #72]	; 0x48
   1f018:	add	ip, ip, #1
   1f01c:	ldr	r1, [sp, #80]	; 0x50
   1f020:	str	ip, [r4, #220]	; 0xdc
   1f024:	bl	1e34c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   1f028:	ldr	r3, [r4, #220]	; 0xdc
   1f02c:	cmp	r3, #0
   1f030:	beq	1f420 <__flatcc_fb_gen_c_verifier@@Base+0x1af4>
   1f034:	ldr	ip, [sp, #76]	; 0x4c
   1f038:	sub	r1, r3, #1
   1f03c:	mov	r2, r5
   1f040:	mov	r3, r6
   1f044:	mov	r0, ip
   1f048:	str	r1, [ip, #220]	; 0xdc
   1f04c:	movw	r1, #9928	; 0x26c8
   1f050:	movt	r1, #5
   1f054:	b	1edfc <__flatcc_fb_gen_c_verifier@@Base+0x14d0>
   1f058:	mov	ip, #0
   1f05c:	ldrd	r2, [sp, #68]	; 0x44
   1f060:	stm	sp, {r7, ip}
   1f064:	ldrd	r0, [sp, #76]	; 0x4c
   1f068:	bl	1ddc8 <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   1f06c:	add	sp, sp, #100	; 0x64
   1f070:	ldrd	r4, [sp]
   1f074:	ldrd	r6, [sp, #8]
   1f078:	ldrd	r8, [sp, #16]
   1f07c:	ldrd	sl, [sp, #24]
   1f080:	add	sp, sp, #32
   1f084:	pop	{pc}		; (ldr pc, [sp], #4)
   1f088:	mov	r8, #0
   1f08c:	mov	r1, r6
   1f090:	mov	ip, r8
   1f094:	mov	r3, r2
   1f098:	b	1ec0c <__flatcc_fb_gen_c_verifier@@Base+0x12e0>
   1f09c:	ldr	r1, [sp, #68]	; 0x44
   1f0a0:	cmp	r5, r1
   1f0a4:	add	r1, r7, #8
   1f0a8:	str	r1, [sp, #8]
   1f0ac:	bgt	1f204 <__flatcc_fb_gen_c_verifier@@Base+0x18d8>
   1f0b0:	cmp	r7, r2
   1f0b4:	movle	r9, #0
   1f0b8:	bgt	1f328 <__flatcc_fb_gen_c_verifier@@Base+0x19fc>
   1f0bc:	ldr	r3, [r3]
   1f0c0:	mov	r8, #8
   1f0c4:	ldrb	r2, [r3, r7]
   1f0c8:	add	r6, r3, r7
   1f0cc:	mov	r3, #0
   1f0d0:	ldrb	sl, [r6, #2]
   1f0d4:	ldrb	ip, [r6, #3]
   1f0d8:	strd	r2, [sp, #8]
   1f0dc:	ldrb	r0, [r6, #6]
   1f0e0:	ldrb	r2, [r6, #7]
   1f0e4:	orr	r3, ip, sl, lsl r8
   1f0e8:	ldrb	sl, [r6, #5]
   1f0ec:	ldr	r1, [sp, #8]
   1f0f0:	orr	r2, r2, r0, lsl r8
   1f0f4:	ldrb	r0, [r6, #1]
   1f0f8:	orr	r2, r2, sl, lsl #16
   1f0fc:	ldrb	sl, [r6, #4]
   1f100:	orr	r3, r3, r0, lsl #16
   1f104:	orr	r2, r2, sl, lsl #24
   1f108:	orr	r3, r3, r1, lsl #24
   1f10c:	ldr	sl, [sp, #76]	; 0x4c
   1f110:	movw	r1, #9952	; 0x26e0
   1f114:	movt	r1, #5
   1f118:	str	r8, [sp]
   1f11c:	str	r6, [sp, #4]
   1f120:	mov	r0, sl
   1f124:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f128:	ldr	r3, [sl, #220]	; 0xdc
   1f12c:	cmp	r9, #0
   1f130:	add	r3, r3, #1
   1f134:	str	r3, [sl, #220]	; 0xdc
   1f138:	bne	1f25c <__flatcc_fb_gen_c_verifier@@Base+0x1930>
   1f13c:	ldr	sl, [sp, #76]	; 0x4c
   1f140:	movw	r1, #10052	; 0x2744
   1f144:	movt	r1, #5
   1f148:	mov	r9, r5
   1f14c:	mov	r0, sl
   1f150:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f154:	mov	r0, sl
   1f158:	movw	r1, #10064	; 0x2750
   1f15c:	movt	r1, #5
   1f160:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f164:	add	r1, r7, #8
   1f168:	mov	r2, r5
   1f16c:	ldr	r3, [sp, #64]	; 0x40
   1f170:	mov	r0, sl
   1f174:	str	r1, [sp]
   1f178:	ldr	r1, [sp, #80]	; 0x50
   1f17c:	bl	1e34c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   1f180:	ldr	r3, [sp, #76]	; 0x4c
   1f184:	ldr	r3, [r3, #220]	; 0xdc
   1f188:	cmp	r3, #0
   1f18c:	beq	1f3e8 <__flatcc_fb_gen_c_verifier@@Base+0x1abc>
   1f190:	ldr	sl, [sp, #76]	; 0x4c
   1f194:	sub	r0, r3, #1
   1f198:	mov	r2, r8
   1f19c:	mov	r3, r6
   1f1a0:	movw	r1, #10144	; 0x27a0
   1f1a4:	movt	r1, #5
   1f1a8:	str	r0, [sl, #220]	; 0xdc
   1f1ac:	mov	r0, sl
   1f1b0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f1b4:	ldr	r3, [sl, #220]	; 0xdc
   1f1b8:	ldr	r0, [sp, #72]	; 0x48
   1f1bc:	ldr	ip, [sp, #68]	; 0x44
   1f1c0:	add	r3, r3, #1
   1f1c4:	cmp	r0, r4
   1f1c8:	str	r3, [sl, #220]	; 0xdc
   1f1cc:	movlt	r2, #0
   1f1d0:	movge	r2, #1
   1f1d4:	cmp	r0, r4
   1f1d8:	cmpge	r9, ip
   1f1dc:	bgt	1ed08 <__flatcc_fb_gen_c_verifier@@Base+0x13dc>
   1f1e0:	cmp	r9, ip
   1f1e4:	bgt	1f43c <__flatcc_fb_gen_c_verifier@@Base+0x1b10>
   1f1e8:	cmp	r2, #0
   1f1ec:	bne	1f3b4 <__flatcc_fb_gen_c_verifier@@Base+0x1a88>
   1f1f0:	ldr	r0, [sp, #76]	; 0x4c
   1f1f4:	ldr	r3, [sp, #80]	; 0x50
   1f1f8:	ldr	r3, [r3, #8]
   1f1fc:	blx	r3
   1f200:	b	1edc4 <__flatcc_fb_gen_c_verifier@@Base+0x1498>
   1f204:	ldr	r1, [sp, #84]	; 0x54
   1f208:	add	r0, r7, #8
   1f20c:	add	r1, r1, r5, lsl #4
   1f210:	ldr	r1, [r1, #-12]
   1f214:	cmp	r1, r0
   1f218:	bgt	1f0b0 <__flatcc_fb_gen_c_verifier@@Base+0x1784>
   1f21c:	sub	r1, r1, r7
   1f220:	cmp	r7, r2
   1f224:	sub	r9, r1, #8
   1f228:	clz	r9, r9
   1f22c:	lsr	r9, r9, #5
   1f230:	ble	1f0bc <__flatcc_fb_gen_c_verifier@@Base+0x1790>
   1f234:	mov	r2, #0
   1f238:	mov	r3, r2
   1f23c:	mov	r6, r2
   1f240:	mov	r8, r2
   1f244:	b	1f10c <__flatcc_fb_gen_c_verifier@@Base+0x17e0>
   1f248:	mov	r2, #0
   1f24c:	mov	r3, r2
   1f250:	mov	r6, r2
   1f254:	mov	r5, r2
   1f258:	b	1ef98 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1f25c:	mov	r3, r6
   1f260:	mov	r2, r8
   1f264:	mov	r0, sl
   1f268:	movw	r1, #9992	; 0x2708
   1f26c:	movt	r1, #5
   1f270:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f274:	ldr	fp, [sp, #80]	; 0x50
   1f278:	sub	r2, r5, #-268435455	; 0xf0000001
   1f27c:	mov	ip, #8
   1f280:	mov	r0, sl
   1f284:	ldm	fp, {r3, r9}
   1f288:	ldr	r1, [fp, #12]
   1f28c:	add	r2, r3, r2, lsl #4
   1f290:	ldrd	r2, [r2, #8]
   1f294:	str	ip, [sp]
   1f298:	blx	r9
   1f29c:	mov	r3, r6
   1f2a0:	mov	r2, r8
   1f2a4:	mov	r0, sl
   1f2a8:	movw	r1, #10024	; 0x2728
   1f2ac:	movt	r1, #5
   1f2b0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f2b4:	mov	r0, sl
   1f2b8:	movw	r1, #10052	; 0x2744
   1f2bc:	movt	r1, #5
   1f2c0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f2c4:	mov	r0, sl
   1f2c8:	movw	r1, #10064	; 0x2750
   1f2cc:	movt	r1, #5
   1f2d0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f2d4:	add	r1, r7, #8
   1f2d8:	mov	r2, r5
   1f2dc:	ldr	r3, [sp, #64]	; 0x40
   1f2e0:	mov	r0, sl
   1f2e4:	str	r1, [sp]
   1f2e8:	mov	r1, fp
   1f2ec:	bl	1e34c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   1f2f0:	ldr	r3, [sl, #220]	; 0xdc
   1f2f4:	cmp	r3, #0
   1f2f8:	beq	1f3cc <__flatcc_fb_gen_c_verifier@@Base+0x1aa0>
   1f2fc:	ldr	ip, [sp, #76]	; 0x4c
   1f300:	sub	r0, r3, #1
   1f304:	movw	r1, #10112	; 0x2780
   1f308:	movt	r1, #5
   1f30c:	mov	r3, r6
   1f310:	mov	r2, r8
   1f314:	sub	r9, r5, #1
   1f318:	str	r0, [ip, #220]	; 0xdc
   1f31c:	mov	r0, ip
   1f320:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f324:	b	1f180 <__flatcc_fb_gen_c_verifier@@Base+0x1854>
   1f328:	ldr	r9, [sp, #76]	; 0x4c
   1f32c:	mov	ip, #0
   1f330:	mov	r3, #0
   1f334:	movw	r1, #9952	; 0x26e0
   1f338:	movt	r1, #5
   1f33c:	mov	r2, #0
   1f340:	str	ip, [sp]
   1f344:	mov	r8, ip
   1f348:	str	ip, [sp, #4]
   1f34c:	mov	r6, ip
   1f350:	mov	r0, r9
   1f354:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f358:	ldr	r3, [r9, #220]	; 0xdc
   1f35c:	add	r3, r3, #1
   1f360:	str	r3, [r9, #220]	; 0xdc
   1f364:	b	1f13c <__flatcc_fb_gen_c_verifier@@Base+0x1810>
   1f368:	mov	r2, #0
   1f36c:	mov	r3, r2
   1f370:	mov	r5, r2
   1f374:	b	1ef98 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1f378:	ldr	r3, [sp, #72]	; 0x48
   1f37c:	movw	r6, #39472	; 0x9a30
   1f380:	movt	r6, #4
   1f384:	mov	r8, #0
   1f388:	cmp	r3, r4
   1f38c:	movlt	r2, #0
   1f390:	movge	r2, #1
   1f394:	b	1f1e8 <__flatcc_fb_gen_c_verifier@@Base+0x18bc>
   1f398:	movw	r1, #9712	; 0x25f0
   1f39c:	movt	r1, #5
   1f3a0:	ldr	r3, [pc, #184]	; 1f460 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   1f3a4:	movw	r0, #9800	; 0x2648
   1f3a8:	movt	r0, #5
   1f3ac:	mov	r2, #1072	; 0x430
   1f3b0:	bl	14014 <__assert_fail@plt>
   1f3b4:	mov	r2, r4
   1f3b8:	str	r7, [sp]
   1f3bc:	ldr	r3, [sp, #72]	; 0x48
   1f3c0:	ldrd	r0, [sp, #76]	; 0x4c
   1f3c4:	bl	1e34c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   1f3c8:	b	1edc4 <__flatcc_fb_gen_c_verifier@@Base+0x1498>
   1f3cc:	movw	r1, #9712	; 0x25f0
   1f3d0:	movt	r1, #5
   1f3d4:	ldr	r3, [pc, #132]	; 1f460 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   1f3d8:	movw	r0, #9800	; 0x2648
   1f3dc:	movt	r0, #5
   1f3e0:	mov	r2, #1040	; 0x410
   1f3e4:	bl	14014 <__assert_fail@plt>
   1f3e8:	movw	r1, #9712	; 0x25f0
   1f3ec:	movt	r1, #5
   1f3f0:	ldr	r3, [pc, #104]	; 1f460 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   1f3f4:	movw	r0, #9800	; 0x2648
   1f3f8:	movt	r0, #5
   1f3fc:	movw	r2, #1044	; 0x414
   1f400:	bl	14014 <__assert_fail@plt>
   1f404:	movw	r1, #9712	; 0x25f0
   1f408:	movt	r1, #5
   1f40c:	ldr	r3, [pc, #76]	; 1f460 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   1f410:	movw	r0, #9800	; 0x2648
   1f414:	movt	r0, #5
   1f418:	movw	r2, #973	; 0x3cd
   1f41c:	bl	14014 <__assert_fail@plt>
   1f420:	movw	r1, #9712	; 0x25f0
   1f424:	movt	r1, #5
   1f428:	ldr	r3, [pc, #48]	; 1f460 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   1f42c:	movw	r0, #9800	; 0x2648
   1f430:	movt	r0, #5
   1f434:	movw	r2, #975	; 0x3cf
   1f438:	bl	14014 <__assert_fail@plt>
   1f43c:	mov	r0, #0
   1f440:	sub	r3, r9, #1
   1f444:	str	r7, [sp]
   1f448:	ldr	r2, [sp, #68]	; 0x44
   1f44c:	str	r0, [sp, #4]
   1f450:	ldr	r0, [sp, #76]	; 0x4c
   1f454:	ldr	r1, [sp, #80]	; 0x50
   1f458:	bl	1ddc8 <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   1f45c:	b	1edc4 <__flatcc_fb_gen_c_verifier@@Base+0x1498>
   1f460:	andeq	r2, r5, r8, asr r3
   1f464:	str	r4, [sp, #-8]!
   1f468:	mov	r4, r0
   1f46c:	mov	r0, r1
   1f470:	str	lr, [sp, #4]
   1f474:	sub	sp, sp, #208	; 0xd0
   1f478:	add	r1, sp, #4
   1f47c:	bl	15174 <__flatcc_fb_copy_scope@@Base>
   1f480:	ldr	r2, [r4, #208]	; 0xd0
   1f484:	add	r3, sp, #4
   1f488:	mov	r0, r4
   1f48c:	movw	r1, #10260	; 0x2814
   1f490:	movt	r1, #5
   1f494:	ldr	r2, [r2, #160]	; 0xa0
   1f498:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f49c:	mov	r0, r4
   1f4a0:	movw	r1, #10368	; 0x2880
   1f4a4:	movt	r1, #5
   1f4a8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f4ac:	add	sp, sp, #208	; 0xd0
   1f4b0:	ldr	r4, [sp]
   1f4b4:	add	sp, sp, #4
   1f4b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1f4bc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1f4c0:	mov	r2, #220	; 0xdc
   1f4c4:	mov	r5, r0
   1f4c8:	strd	r6, [sp, #8]
   1f4cc:	mov	r4, r1
   1f4d0:	mov	r1, #0
   1f4d4:	strd	r8, [sp, #16]
   1f4d8:	str	sl, [sp, #24]
   1f4dc:	str	lr, [sp, #28]
   1f4e0:	sub	sp, sp, #448	; 0x1c0
   1f4e4:	add	r0, sp, #8
   1f4e8:	bl	13f78 <memset@plt>
   1f4ec:	mov	r2, #220	; 0xdc
   1f4f0:	mov	r1, #0
   1f4f4:	add	r0, sp, #228	; 0xe4
   1f4f8:	bl	13f78 <memset@plt>
   1f4fc:	add	r2, sp, #8
   1f500:	mov	r1, r4
   1f504:	ldr	r0, [r4, #12]
   1f508:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1f50c:	add	r2, sp, #8
   1f510:	mov	r0, r5
   1f514:	movw	r1, #10420	; 0x28b4
   1f518:	movt	r1, #5
   1f51c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f520:	mov	r0, r5
   1f524:	movw	r1, #21192	; 0x52c8
   1f528:	movt	r1, #5
   1f52c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f530:	ldr	r3, [r5, #220]	; 0xdc
   1f534:	mov	r0, r5
   1f538:	movw	r1, #39472	; 0x9a30
   1f53c:	movt	r1, #4
   1f540:	add	r3, r3, #1
   1f544:	str	r3, [r5, #220]	; 0xdc
   1f548:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f54c:	mov	r0, r5
   1f550:	movw	r1, #10564	; 0x2944
   1f554:	movt	r1, #5
   1f558:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f55c:	mov	r0, r5
   1f560:	movw	r1, #10580	; 0x2954
   1f564:	movt	r1, #5
   1f568:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f56c:	mov	r0, r5
   1f570:	movw	r1, #10596	; 0x2964
   1f574:	movt	r1, #5
   1f578:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f57c:	ldr	r3, [r5, #220]	; 0xdc
   1f580:	mov	r0, r5
   1f584:	movw	r1, #10616	; 0x2978
   1f588:	movt	r1, #5
   1f58c:	add	r3, r3, #1
   1f590:	str	r3, [r5, #220]	; 0xdc
   1f594:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f598:	ldr	r3, [r5, #220]	; 0xdc
   1f59c:	cmp	r3, #0
   1f5a0:	beq	1f99c <__flatcc_fb_gen_c_verifier@@Base+0x2070>
   1f5a4:	ldr	r4, [r4, #20]
   1f5a8:	sub	r3, r3, #1
   1f5ac:	str	r3, [r5, #220]	; 0xdc
   1f5b0:	cmp	r4, #0
   1f5b4:	beq	1f74c <__flatcc_fb_gen_c_verifier@@Base+0x1e20>
   1f5b8:	movw	r8, #10664	; 0x29a8
   1f5bc:	movt	r8, #5
   1f5c0:	movw	r9, #10852	; 0x2a64
   1f5c4:	movt	r9, #5
   1f5c8:	movw	r7, #10844	; 0x2a5c
   1f5cc:	movt	r7, #5
   1f5d0:	b	1f658 <__flatcc_fb_gen_c_verifier@@Base+0x1d2c>
   1f5d4:	ldr	r1, [r4, #16]
   1f5d8:	add	r2, sp, #228	; 0xe4
   1f5dc:	ldr	r0, [r1, #12]
   1f5e0:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1f5e4:	mov	r3, sl
   1f5e8:	mov	r1, r8
   1f5ec:	ldr	r2, [r4, #48]	; 0x30
   1f5f0:	mov	r0, r5
   1f5f4:	str	r6, [sp]
   1f5f8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f5fc:	ldr	r2, [r4, #16]
   1f600:	ldr	r3, [r5, #220]	; 0xdc
   1f604:	ldrh	r2, [r2, #8]
   1f608:	add	r3, r3, #1
   1f60c:	str	r3, [r5, #220]	; 0xdc
   1f610:	cmp	r2, #0
   1f614:	bne	1f72c <__flatcc_fb_gen_c_verifier@@Base+0x1e00>
   1f618:	movw	r1, #10684	; 0x29bc
   1f61c:	movt	r1, #5
   1f620:	add	r2, sp, #228	; 0xe4
   1f624:	mov	r0, r5
   1f628:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f62c:	mov	r1, r7
   1f630:	mov	r0, r5
   1f634:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f638:	ldr	r3, [r5, #220]	; 0xdc
   1f63c:	cmp	r3, #0
   1f640:	beq	1f92c <__flatcc_fb_gen_c_verifier@@Base+0x2000>
   1f644:	sub	r3, r3, #1
   1f648:	str	r3, [r5, #220]	; 0xdc
   1f64c:	ldr	r4, [r4]
   1f650:	cmp	r4, #0
   1f654:	beq	1f74c <__flatcc_fb_gen_c_verifier@@Base+0x1e20>
   1f658:	ldrh	r2, [r4, #24]
   1f65c:	ldr	r3, [r4, #4]
   1f660:	cmp	r2, #10
   1f664:	ldm	r3, {r6, sl}
   1f668:	beq	1f6c8 <__flatcc_fb_gen_c_verifier@@Base+0x1d9c>
   1f66c:	cmp	r2, #14
   1f670:	beq	1f5d4 <__flatcc_fb_gen_c_verifier@@Base+0x1ca8>
   1f674:	cmp	r2, #0
   1f678:	beq	1f64c <__flatcc_fb_gen_c_verifier@@Base+0x1d20>
   1f67c:	movw	r1, #10916	; 0x2aa4
   1f680:	movt	r1, #5
   1f684:	movw	r3, #41128	; 0xa0a8
   1f688:	movt	r3, #6
   1f68c:	movw	r2, #9712	; 0x25f0
   1f690:	movt	r2, #5
   1f694:	str	r1, [sp]
   1f698:	movw	r1, #64544	; 0xfc20
   1f69c:	movt	r1, #3
   1f6a0:	ldr	r0, [r3]
   1f6a4:	movw	r3, #1535	; 0x5ff
   1f6a8:	bl	13f60 <fprintf@plt>
   1f6ac:	movw	r1, #9712	; 0x25f0
   1f6b0:	movt	r1, #5
   1f6b4:	ldr	r3, [pc, #820]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   1f6b8:	movw	r0, #35672	; 0x8b58
   1f6bc:	movt	r0, #4
   1f6c0:	movw	r2, #1535	; 0x5ff
   1f6c4:	bl	14014 <__assert_fail@plt>
   1f6c8:	mov	r3, sl
   1f6cc:	mov	r1, r8
   1f6d0:	ldr	r2, [r4, #48]	; 0x30
   1f6d4:	mov	r0, r5
   1f6d8:	str	r6, [sp]
   1f6dc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f6e0:	ldr	r3, [r5, #220]	; 0xdc
   1f6e4:	mov	r1, r9
   1f6e8:	mov	r0, r5
   1f6ec:	add	r3, r3, #1
   1f6f0:	str	r3, [r5, #220]	; 0xdc
   1f6f4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f6f8:	mov	r1, r7
   1f6fc:	mov	r0, r5
   1f700:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f704:	ldr	r3, [r5, #220]	; 0xdc
   1f708:	cmp	r3, #0
   1f70c:	bne	1f644 <__flatcc_fb_gen_c_verifier@@Base+0x1d18>
   1f710:	movw	r1, #9712	; 0x25f0
   1f714:	movt	r1, #5
   1f718:	ldr	r3, [pc, #720]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   1f71c:	movw	r0, #9800	; 0x2648
   1f720:	movt	r0, #5
   1f724:	movw	r2, #1532	; 0x5fc
   1f728:	bl	14014 <__assert_fail@plt>
   1f72c:	cmp	r2, #1
   1f730:	bne	1f8e0 <__flatcc_fb_gen_c_verifier@@Base+0x1fb4>
   1f734:	movw	r1, #10736	; 0x29f0
   1f738:	movt	r1, #5
   1f73c:	add	r2, sp, #228	; 0xe4
   1f740:	mov	r0, r5
   1f744:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f748:	b	1f62c <__flatcc_fb_gen_c_verifier@@Base+0x1d00>
   1f74c:	mov	r0, r5
   1f750:	movw	r1, #10964	; 0x2ad4
   1f754:	movt	r1, #5
   1f758:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f75c:	ldr	r3, [r5, #220]	; 0xdc
   1f760:	mov	r0, r5
   1f764:	movw	r1, #10976	; 0x2ae0
   1f768:	movt	r1, #5
   1f76c:	add	r3, r3, #1
   1f770:	str	r3, [r5, #220]	; 0xdc
   1f774:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f778:	ldr	r3, [r5, #220]	; 0xdc
   1f77c:	movw	r1, #11036	; 0x2b1c
   1f780:	movt	r1, #5
   1f784:	mov	r0, r5
   1f788:	add	r3, r3, #1
   1f78c:	str	r3, [r5, #220]	; 0xdc
   1f790:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f794:	ldr	r3, [r5, #220]	; 0xdc
   1f798:	cmp	r3, #0
   1f79c:	beq	1f980 <__flatcc_fb_gen_c_verifier@@Base+0x2054>
   1f7a0:	sub	r3, r3, #1
   1f7a4:	mov	r0, r5
   1f7a8:	movw	r1, #11128	; 0x2b78
   1f7ac:	movt	r1, #5
   1f7b0:	str	r3, [r5, #220]	; 0xdc
   1f7b4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f7b8:	ldr	r3, [r5, #220]	; 0xdc
   1f7bc:	movw	r1, #11140	; 0x2b84
   1f7c0:	movt	r1, #5
   1f7c4:	mov	r0, r5
   1f7c8:	add	r3, r3, #1
   1f7cc:	str	r3, [r5, #220]	; 0xdc
   1f7d0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f7d4:	ldr	r3, [r5, #220]	; 0xdc
   1f7d8:	cmp	r3, #0
   1f7dc:	beq	1f964 <__flatcc_fb_gen_c_verifier@@Base+0x2038>
   1f7e0:	sub	r3, r3, #1
   1f7e4:	movw	r1, #9812	; 0x2654
   1f7e8:	movt	r1, #5
   1f7ec:	mov	r0, r5
   1f7f0:	str	r3, [r5, #220]	; 0xdc
   1f7f4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f7f8:	ldr	r3, [r5, #220]	; 0xdc
   1f7fc:	cmp	r3, #0
   1f800:	beq	1f948 <__flatcc_fb_gen_c_verifier@@Base+0x201c>
   1f804:	sub	r3, r3, #1
   1f808:	mov	r0, r5
   1f80c:	movw	r1, #9812	; 0x2654
   1f810:	movt	r1, #5
   1f814:	str	r3, [r5, #220]	; 0xdc
   1f818:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f81c:	mov	r0, r5
   1f820:	movw	r1, #11196	; 0x2bbc
   1f824:	movt	r1, #5
   1f828:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f82c:	mov	r0, r5
   1f830:	movw	r1, #11224	; 0x2bd8
   1f834:	movt	r1, #5
   1f838:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f83c:	ldr	r3, [r5, #220]	; 0xdc
   1f840:	movw	r1, #11240	; 0x2be8
   1f844:	movt	r1, #5
   1f848:	mov	r0, r5
   1f84c:	add	r3, r3, #1
   1f850:	str	r3, [r5, #220]	; 0xdc
   1f854:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f858:	ldr	r3, [r5, #220]	; 0xdc
   1f85c:	cmp	r3, #0
   1f860:	beq	1f9d4 <__flatcc_fb_gen_c_verifier@@Base+0x20a8>
   1f864:	sub	r3, r3, #1
   1f868:	mov	r0, r5
   1f86c:	movw	r1, #9812	; 0x2654
   1f870:	movt	r1, #5
   1f874:	str	r3, [r5, #220]	; 0xdc
   1f878:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f87c:	movw	r1, #11212	; 0x2bcc
   1f880:	movt	r1, #5
   1f884:	mov	r0, r5
   1f888:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f88c:	ldr	r3, [r5, #220]	; 0xdc
   1f890:	cmp	r3, #0
   1f894:	beq	1f9b8 <__flatcc_fb_gen_c_verifier@@Base+0x208c>
   1f898:	sub	r3, r3, #1
   1f89c:	mov	r0, r5
   1f8a0:	movw	r1, #9812	; 0x2654
   1f8a4:	movt	r1, #5
   1f8a8:	str	r3, [r5, #220]	; 0xdc
   1f8ac:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f8b0:	mov	r0, r5
   1f8b4:	movw	r1, #39472	; 0x9a30
   1f8b8:	movt	r1, #4
   1f8bc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f8c0:	mov	r0, #0
   1f8c4:	add	sp, sp, #448	; 0x1c0
   1f8c8:	ldrd	r4, [sp]
   1f8cc:	ldrd	r6, [sp, #8]
   1f8d0:	ldrd	r8, [sp, #16]
   1f8d4:	ldr	sl, [sp, #24]
   1f8d8:	add	sp, sp, #28
   1f8dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1f8e0:	movw	r1, #10788	; 0x2a24
   1f8e4:	movt	r1, #5
   1f8e8:	movw	r3, #41128	; 0xa0a8
   1f8ec:	movt	r3, #6
   1f8f0:	movw	r2, #9712	; 0x25f0
   1f8f4:	movt	r2, #5
   1f8f8:	str	r1, [sp]
   1f8fc:	movw	r1, #64544	; 0xfc20
   1f900:	movt	r1, #3
   1f904:	ldr	r0, [r3]
   1f908:	movw	r3, #1522	; 0x5f2
   1f90c:	bl	13f60 <fprintf@plt>
   1f910:	movw	r1, #9712	; 0x25f0
   1f914:	movt	r1, #5
   1f918:	ldr	r3, [pc, #208]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   1f91c:	movw	r0, #35672	; 0x8b58
   1f920:	movt	r0, #4
   1f924:	movw	r2, #1522	; 0x5f2
   1f928:	bl	14014 <__assert_fail@plt>
   1f92c:	movw	r1, #9712	; 0x25f0
   1f930:	movt	r1, #5
   1f934:	ldr	r3, [pc, #180]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   1f938:	movw	r0, #9800	; 0x2648
   1f93c:	movt	r0, #5
   1f940:	movw	r2, #1526	; 0x5f6
   1f944:	bl	14014 <__assert_fail@plt>
   1f948:	movw	r1, #9712	; 0x25f0
   1f94c:	movt	r1, #5
   1f950:	ldr	r3, [pc, #152]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   1f954:	movw	r0, #9800	; 0x2648
   1f958:	movt	r0, #5
   1f95c:	movw	r2, #1546	; 0x60a
   1f960:	bl	14014 <__assert_fail@plt>
   1f964:	movw	r1, #9712	; 0x25f0
   1f968:	movt	r1, #5
   1f96c:	ldr	r3, [pc, #124]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   1f970:	movw	r0, #9800	; 0x2648
   1f974:	movt	r0, #5
   1f978:	movw	r2, #1545	; 0x609
   1f97c:	bl	14014 <__assert_fail@plt>
   1f980:	movw	r1, #9712	; 0x25f0
   1f984:	movt	r1, #5
   1f988:	ldr	r3, [pc, #96]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   1f98c:	movw	r0, #9800	; 0x2648
   1f990:	movt	r0, #5
   1f994:	movw	r2, #1543	; 0x607
   1f998:	bl	14014 <__assert_fail@plt>
   1f99c:	movw	r1, #9712	; 0x25f0
   1f9a0:	movt	r1, #5
   1f9a4:	ldr	r3, [pc, #68]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   1f9a8:	movw	r0, #9800	; 0x2648
   1f9ac:	movt	r0, #5
   1f9b0:	movw	r2, #1503	; 0x5df
   1f9b4:	bl	14014 <__assert_fail@plt>
   1f9b8:	movw	r1, #9712	; 0x25f0
   1f9bc:	movt	r1, #5
   1f9c0:	ldr	r3, [pc, #40]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   1f9c4:	movw	r0, #9800	; 0x2648
   1f9c8:	movt	r0, #5
   1f9cc:	mov	r2, #1552	; 0x610
   1f9d0:	bl	14014 <__assert_fail@plt>
   1f9d4:	movw	r1, #9712	; 0x25f0
   1f9d8:	movt	r1, #5
   1f9dc:	ldr	r3, [pc, #12]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   1f9e0:	movw	r0, #9800	; 0x2648
   1f9e4:	movt	r0, #5
   1f9e8:	movw	r2, #1550	; 0x60e
   1f9ec:	bl	14014 <__assert_fail@plt>
   1f9f0:	andeq	r2, r5, r4, ror #6
   1f9f4:	strd	r4, [sp, #-20]!	; 0xffffffec
   1f9f8:	mov	r2, #220	; 0xdc
   1f9fc:	mov	r5, r0
   1fa00:	strd	r6, [sp, #8]
   1fa04:	mov	r4, r1
   1fa08:	mov	r1, #0
   1fa0c:	str	lr, [sp, #16]
   1fa10:	sub	sp, sp, #452	; 0x1c4
   1fa14:	add	r0, sp, #8
   1fa18:	bl	13f78 <memset@plt>
   1fa1c:	mov	r2, #220	; 0xdc
   1fa20:	mov	r1, #0
   1fa24:	add	r0, sp, #228	; 0xe4
   1fa28:	bl	13f78 <memset@plt>
   1fa2c:	mov	r1, r4
   1fa30:	add	r2, sp, #8
   1fa34:	ldr	r0, [r4, #12]
   1fa38:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   1fa3c:	add	r2, sp, #8
   1fa40:	mov	r0, r5
   1fa44:	movw	r1, #11328	; 0x2c40
   1fa48:	movt	r1, #5
   1fa4c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fa50:	mov	r0, r5
   1fa54:	movw	r1, #21192	; 0x52c8
   1fa58:	movt	r1, #5
   1fa5c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fa60:	ldr	r3, [r5, #220]	; 0xdc
   1fa64:	mov	r0, r5
   1fa68:	movw	r1, #10580	; 0x2954
   1fa6c:	movt	r1, #5
   1fa70:	add	r3, r3, #1
   1fa74:	str	r3, [r5, #220]	; 0xdc
   1fa78:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fa7c:	ldr	r4, [r4, #20]
   1fa80:	cmp	r4, #0
   1fa84:	beq	1fad0 <__flatcc_fb_gen_c_verifier@@Base+0x21a4>
   1fa88:	movw	r6, #11412	; 0x2c94
   1fa8c:	movt	r6, #5
   1fa90:	movw	r7, #11380	; 0x2c74
   1fa94:	movt	r7, #5
   1fa98:	ldrh	r3, [r4, #24]
   1fa9c:	cmp	r3, #0
   1faa0:	beq	1fb54 <__flatcc_fb_gen_c_verifier@@Base+0x2228>
   1faa4:	ldr	r3, [r4, #4]
   1faa8:	mov	r1, r6
   1faac:	mov	r0, r5
   1fab0:	ldr	r2, [r4, #48]	; 0x30
   1fab4:	ldr	ip, [r3]
   1fab8:	ldr	r3, [r3, #4]
   1fabc:	str	ip, [sp]
   1fac0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fac4:	ldr	r4, [r4]
   1fac8:	cmp	r4, #0
   1facc:	bne	1fa98 <__flatcc_fb_gen_c_verifier@@Base+0x216c>
   1fad0:	movw	r1, #11444	; 0x2cb4
   1fad4:	movt	r1, #5
   1fad8:	mov	r0, r5
   1fadc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fae0:	ldr	r3, [r5, #220]	; 0xdc
   1fae4:	add	r2, r3, #1
   1fae8:	cmp	r2, #0
   1faec:	str	r2, [r5, #220]	; 0xdc
   1faf0:	beq	1fb70 <__flatcc_fb_gen_c_verifier@@Base+0x2244>
   1faf4:	movw	r1, #9812	; 0x2654
   1faf8:	movt	r1, #5
   1fafc:	str	r3, [r5, #220]	; 0xdc
   1fb00:	mov	r0, r5
   1fb04:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fb08:	ldr	r3, [r5, #220]	; 0xdc
   1fb0c:	cmp	r3, #0
   1fb10:	beq	1fb8c <__flatcc_fb_gen_c_verifier@@Base+0x2260>
   1fb14:	sub	r3, r3, #1
   1fb18:	mov	r0, r5
   1fb1c:	movw	r1, #9812	; 0x2654
   1fb20:	movt	r1, #5
   1fb24:	str	r3, [r5, #220]	; 0xdc
   1fb28:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fb2c:	mov	r0, r5
   1fb30:	movw	r1, #39472	; 0x9a30
   1fb34:	movt	r1, #4
   1fb38:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fb3c:	mov	r0, #0
   1fb40:	add	sp, sp, #452	; 0x1c4
   1fb44:	ldrd	r4, [sp]
   1fb48:	ldrd	r6, [sp, #8]
   1fb4c:	add	sp, sp, #16
   1fb50:	pop	{pc}		; (ldr pc, [sp], #4)
   1fb54:	mov	r1, r7
   1fb58:	mov	r0, r5
   1fb5c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fb60:	ldr	r4, [r4]
   1fb64:	cmp	r4, #0
   1fb68:	bne	1fa98 <__flatcc_fb_gen_c_verifier@@Base+0x216c>
   1fb6c:	b	1fad0 <__flatcc_fb_gen_c_verifier@@Base+0x21a4>
   1fb70:	movw	r1, #9712	; 0x25f0
   1fb74:	movt	r1, #5
   1fb78:	ldr	r3, [pc, #40]	; 1fba8 <__flatcc_fb_gen_c_verifier@@Base+0x227c>
   1fb7c:	movw	r0, #9800	; 0x2648
   1fb80:	movt	r0, #5
   1fb84:	movw	r2, #1582	; 0x62e
   1fb88:	bl	14014 <__assert_fail@plt>
   1fb8c:	movw	r1, #9712	; 0x25f0
   1fb90:	movt	r1, #5
   1fb94:	ldr	r3, [pc, #12]	; 1fba8 <__flatcc_fb_gen_c_verifier@@Base+0x227c>
   1fb98:	movw	r0, #9800	; 0x2648
   1fb9c:	movt	r0, #5
   1fba0:	movw	r2, #1583	; 0x62f
   1fba4:	bl	14014 <__assert_fail@plt>
   1fba8:	andeq	r2, r5, r8, ror r3
   1fbac:	add	r3, r1, #4
   1fbb0:	mov	r2, r0
   1fbb4:	movw	r1, #4484	; 0x1184
   1fbb8:	movt	r1, #2
   1fbbc:	mov	r0, r3
   1fbc0:	b	2861c <fb_symbol_table_visit@@Base>
   1fbc4:	add	r3, r1, #4
   1fbc8:	mov	r2, r0
   1fbcc:	movw	r1, #6152	; 0x1808
   1fbd0:	movt	r1, #2
   1fbd4:	mov	r0, r3
   1fbd8:	b	2861c <fb_symbol_table_visit@@Base>
   1fbdc:	strd	r4, [sp, #-16]!
   1fbe0:	ldm	r0, {r0, r5}
   1fbe4:	ldm	r1, {r1, r4}
   1fbe8:	str	r6, [sp, #8]
   1fbec:	str	lr, [sp, #12]
   1fbf0:	cmp	r5, r4
   1fbf4:	movlt	r2, r5
   1fbf8:	movge	r2, r4
   1fbfc:	bl	13ed0 <memcmp@plt>
   1fc00:	cmp	r0, #0
   1fc04:	ldr	r6, [sp, #8]
   1fc08:	subeq	r0, r5, r4
   1fc0c:	ldrd	r4, [sp]
   1fc10:	add	sp, sp, #12
   1fc14:	pop	{pc}		; (ldr pc, [sp], #4)
   1fc18:	strd	r4, [sp, #-20]!	; 0xffffffec
   1fc1c:	mov	r5, #0
   1fc20:	mov	r3, r1
   1fc24:	strd	r6, [sp, #8]
   1fc28:	mov	r4, r0
   1fc2c:	mov	r0, r1
   1fc30:	str	lr, [sp, #16]
   1fc34:	sub	sp, sp, #260	; 0x104
   1fc38:	add	r7, r3, #4
   1fc3c:	add	r1, sp, #52	; 0x34
   1fc40:	str	r5, [sp, #24]
   1fc44:	str	r5, [sp, #28]
   1fc48:	str	r5, [sp, #32]
   1fc4c:	str	r5, [sp, #36]	; 0x24
   1fc50:	str	r5, [sp, #40]	; 0x28
   1fc54:	str	r5, [sp, #44]	; 0x2c
   1fc58:	str	r5, [sp, #48]	; 0x30
   1fc5c:	bl	15174 <__flatcc_fb_copy_scope@@Base>
   1fc60:	ldr	r3, [r4, #208]	; 0xd0
   1fc64:	mov	r0, r7
   1fc68:	add	r2, sp, #12
   1fc6c:	movw	r1, #5972	; 0x1754
   1fc70:	movt	r1, #2
   1fc74:	str	r5, [sp, #12]
   1fc78:	str	r3, [sp, #16]
   1fc7c:	str	r5, [sp, #20]
   1fc80:	bl	2861c <fb_symbol_table_visit@@Base>
   1fc84:	ldr	r5, [sp, #12]
   1fc88:	cmp	r5, #0
   1fc8c:	streq	r5, [sp, #24]
   1fc90:	beq	1fcd8 <__flatcc_fb_gen_c_verifier@@Base+0x23ac>
   1fc94:	lsl	r0, r5, #4
   1fc98:	bl	13f18 <malloc@plt>
   1fc9c:	subs	r6, r0, #0
   1fca0:	beq	1fe94 <__flatcc_fb_gen_c_verifier@@Base+0x2568>
   1fca4:	add	r2, sp, #12
   1fca8:	mov	r0, r7
   1fcac:	str	r6, [sp, #20]
   1fcb0:	movw	r1, #6048	; 0x17a0
   1fcb4:	movt	r1, #2
   1fcb8:	bl	2861c <fb_symbol_table_visit@@Base>
   1fcbc:	movw	r3, #64476	; 0xfbdc
   1fcc0:	movt	r3, #1
   1fcc4:	ldr	r1, [sp, #12]
   1fcc8:	mov	r2, #16
   1fccc:	mov	r0, r6
   1fcd0:	bl	13fe4 <qsort@plt>
   1fcd4:	str	r6, [sp, #24]
   1fcd8:	ldr	lr, [r4, #208]	; 0xd0
   1fcdc:	movw	r3, #164	; 0xa4
   1fce0:	movt	r3, #2
   1fce4:	movw	r2, #5960	; 0x1748
   1fce8:	movt	r2, #2
   1fcec:	mov	ip, #3
   1fcf0:	mov	r6, #0
   1fcf4:	str	r3, [sp, #28]
   1fcf8:	mov	r0, r4
   1fcfc:	add	r3, sp, #52	; 0x34
   1fd00:	str	r2, [sp, #32]
   1fd04:	movw	r1, #10260	; 0x2814
   1fd08:	movt	r1, #5
   1fd0c:	str	r6, [sp, #36]	; 0x24
   1fd10:	ldr	r2, [lr, #160]	; 0xa0
   1fd14:	str	ip, [sp, #40]	; 0x28
   1fd18:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fd1c:	ldr	r3, [r4, #220]	; 0xdc
   1fd20:	movw	r1, #11524	; 0x2d04
   1fd24:	movt	r1, #5
   1fd28:	mov	r0, r4
   1fd2c:	add	r3, r3, #2
   1fd30:	str	r3, [r4, #220]	; 0xdc
   1fd34:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fd38:	ldr	r3, [r4, #220]	; 0xdc
   1fd3c:	cmp	r3, r6
   1fd40:	beq	1feec <__flatcc_fb_gen_c_verifier@@Base+0x25c0>
   1fd44:	cmp	r3, #1
   1fd48:	streq	r6, [r4, #220]	; 0xdc
   1fd4c:	beq	1feec <__flatcc_fb_gen_c_verifier@@Base+0x25c0>
   1fd50:	sub	r3, r3, #2
   1fd54:	movw	r1, #21192	; 0x52c8
   1fd58:	movt	r1, #5
   1fd5c:	mov	r0, r4
   1fd60:	str	r3, [r4, #220]	; 0xdc
   1fd64:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fd68:	ldr	r3, [r4, #220]	; 0xdc
   1fd6c:	cmp	r5, #0
   1fd70:	add	r3, r3, #1
   1fd74:	str	r3, [r4, #220]	; 0xdc
   1fd78:	beq	1fe4c <__flatcc_fb_gen_c_verifier@@Base+0x2520>
   1fd7c:	mov	r0, r4
   1fd80:	movw	r1, #11660	; 0x2d8c
   1fd84:	movt	r1, #5
   1fd88:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fd8c:	mov	r0, r4
   1fd90:	movw	r1, #11692	; 0x2dac
   1fd94:	movt	r1, #5
   1fd98:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fd9c:	mov	r0, r4
   1fda0:	movw	r1, #11712	; 0x2dc0
   1fda4:	movt	r1, #5
   1fda8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fdac:	mov	r0, r4
   1fdb0:	movw	r1, #39472	; 0x9a30
   1fdb4:	movt	r1, #4
   1fdb8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fdbc:	mov	r0, r4
   1fdc0:	movw	r1, #10064	; 0x2750
   1fdc4:	movt	r1, #5
   1fdc8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fdcc:	sub	r3, r5, #1
   1fdd0:	mov	r2, r6
   1fdd4:	str	r6, [sp]
   1fdd8:	add	r1, sp, #24
   1fddc:	mov	r0, r4
   1fde0:	bl	1e34c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   1fde4:	movw	r1, #11212	; 0x2bcc
   1fde8:	movt	r1, #5
   1fdec:	mov	r0, r4
   1fdf0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fdf4:	ldr	r3, [r4, #220]	; 0xdc
   1fdf8:	cmp	r3, #0
   1fdfc:	beq	1ff08 <__flatcc_fb_gen_c_verifier@@Base+0x25dc>
   1fe00:	sub	r3, r3, #1
   1fe04:	mov	r0, r4
   1fe08:	movw	r1, #9812	; 0x2654
   1fe0c:	movt	r1, #5
   1fe10:	str	r3, [r4, #220]	; 0xdc
   1fe14:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fe18:	mov	r0, r4
   1fe1c:	movw	r1, #39472	; 0x9a30
   1fe20:	movt	r1, #4
   1fe24:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fe28:	ldr	r0, [sp, #24]
   1fe2c:	cmp	r0, #0
   1fe30:	beq	1fe38 <__flatcc_fb_gen_c_verifier@@Base+0x250c>
   1fe34:	bl	13eac <free@plt>
   1fe38:	add	sp, sp, #260	; 0x104
   1fe3c:	ldrd	r4, [sp]
   1fe40:	ldrd	r6, [sp, #8]
   1fe44:	add	sp, sp, #16
   1fe48:	pop	{pc}		; (ldr pc, [sp], #4)
   1fe4c:	mov	r0, r4
   1fe50:	movw	r1, #11576	; 0x2d38
   1fe54:	movt	r1, #5
   1fe58:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fe5c:	movw	r1, #11628	; 0x2d6c
   1fe60:	movt	r1, #5
   1fe64:	mov	r0, r4
   1fe68:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fe6c:	ldr	r3, [r4, #220]	; 0xdc
   1fe70:	cmp	r3, #0
   1fe74:	bne	1fe00 <__flatcc_fb_gen_c_verifier@@Base+0x24d4>
   1fe78:	movw	r1, #9712	; 0x25f0
   1fe7c:	movt	r1, #5
   1fe80:	ldr	r3, [pc, #156]	; 1ff24 <__flatcc_fb_gen_c_verifier@@Base+0x25f8>
   1fe84:	movw	r0, #9800	; 0x2648
   1fe88:	movt	r0, #5
   1fe8c:	movw	r2, #1157	; 0x485
   1fe90:	bl	14014 <__assert_fail@plt>
   1fe94:	cmp	r5, #0
   1fe98:	str	r6, [sp, #24]
   1fe9c:	ble	1fcd8 <__flatcc_fb_gen_c_verifier@@Base+0x23ac>
   1fea0:	movw	r1, #11464	; 0x2cc8
   1fea4:	movt	r1, #5
   1fea8:	movw	r3, #41128	; 0xa0a8
   1feac:	movt	r3, #6
   1feb0:	movw	r2, #9712	; 0x25f0
   1feb4:	movt	r2, #5
   1feb8:	str	r1, [sp]
   1febc:	movw	r1, #64544	; 0xfc20
   1fec0:	movt	r1, #3
   1fec4:	ldr	r0, [r3]
   1fec8:	movw	r3, #1140	; 0x474
   1fecc:	bl	13f60 <fprintf@plt>
   1fed0:	movw	r1, #9712	; 0x25f0
   1fed4:	movt	r1, #5
   1fed8:	ldr	r3, [pc, #68]	; 1ff24 <__flatcc_fb_gen_c_verifier@@Base+0x25f8>
   1fedc:	movw	r0, #35672	; 0x8b58
   1fee0:	movt	r0, #4
   1fee4:	movw	r2, #1140	; 0x474
   1fee8:	bl	14014 <__assert_fail@plt>
   1feec:	movw	r1, #9712	; 0x25f0
   1fef0:	movt	r1, #5
   1fef4:	ldr	r3, [pc, #40]	; 1ff24 <__flatcc_fb_gen_c_verifier@@Base+0x25f8>
   1fef8:	movw	r0, #9800	; 0x2648
   1fefc:	movt	r0, #5
   1ff00:	mov	r2, #1152	; 0x480
   1ff04:	bl	14014 <__assert_fail@plt>
   1ff08:	movw	r1, #9712	; 0x25f0
   1ff0c:	movt	r1, #5
   1ff10:	ldr	r3, [pc, #12]	; 1ff24 <__flatcc_fb_gen_c_verifier@@Base+0x25f8>
   1ff14:	movw	r0, #9800	; 0x2648
   1ff18:	movt	r0, #5
   1ff1c:	movw	r2, #1166	; 0x48e
   1ff20:	bl	14014 <__assert_fail@plt>
   1ff24:	muleq	r5, r0, r3
   1ff28:	ldr	r0, [r0, #4]
   1ff2c:	ldr	r1, [r1, #4]
   1ff30:	b	13e94 <strcmp@plt>
   1ff34:	strd	r4, [sp, #-16]!
   1ff38:	mov	r4, r0
   1ff3c:	mov	r5, r1
   1ff40:	str	r6, [sp, #8]
   1ff44:	movw	r1, #11724	; 0x2dcc
   1ff48:	movt	r1, #5
   1ff4c:	str	lr, [sp, #12]
   1ff50:	sub	sp, sp, #8
   1ff54:	mov	r6, r2
   1ff58:	ldr	r2, [sp, #24]
   1ff5c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1ff60:	mov	r0, r4
   1ff64:	movw	r1, #11804	; 0x2e1c
   1ff68:	movt	r1, #5
   1ff6c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1ff70:	ldr	r2, [r4, #220]	; 0xdc
   1ff74:	ldr	r3, [r5, #40]	; 0x28
   1ff78:	add	r2, r2, #1
   1ff7c:	sub	r3, r3, #1
   1ff80:	str	r2, [r4, #220]	; 0xdc
   1ff84:	cmp	r3, #8
   1ff88:	ldrls	pc, [pc, r3, lsl #2]
   1ff8c:	b	20050 <__flatcc_fb_gen_c_verifier@@Base+0x2724>
   1ff90:	andeq	r0, r2, ip, lsl r0
   1ff94:	andeq	r0, r2, ip, lsl r0
   1ff98:	andeq	r0, r2, ip, lsl r0
   1ff9c:	andeq	r0, r2, ip, lsl r0
   1ffa0:	andeq	r0, r2, ip, lsl r0
   1ffa4:			; <UNDEFINED> instruction: 0x0001ffb4
   1ffa8:			; <UNDEFINED> instruction: 0x0001ffb4
   1ffac:			; <UNDEFINED> instruction: 0x0001ffb4
   1ffb0:			; <UNDEFINED> instruction: 0x0001ffb4
   1ffb4:	ldrd	r2, [r6, #48]	; 0x30
   1ffb8:	mov	r0, r4
   1ffbc:	cmp	r2, #0
   1ffc0:	sbcs	r1, r3, #0
   1ffc4:	movwlt	r1, #11868	; 0x2e5c
   1ffc8:	movwge	r1, #11824	; 0x2e30
   1ffcc:	movtlt	r1, #5
   1ffd0:	movtge	r1, #5
   1ffd4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1ffd8:	ldr	r3, [r4, #220]	; 0xdc
   1ffdc:	cmp	r3, #0
   1ffe0:	beq	20034 <__flatcc_fb_gen_c_verifier@@Base+0x2708>
   1ffe4:	sub	r3, r3, #1
   1ffe8:	mov	r0, r4
   1ffec:	movw	r1, #11128	; 0x2b78
   1fff0:	movt	r1, #5
   1fff4:	str	r3, [r4, #220]	; 0xdc
   1fff8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fffc:	ldr	r3, [r4, #220]	; 0xdc
   20000:	add	r3, r3, #1
   20004:	str	r3, [r4, #220]	; 0xdc
   20008:	add	sp, sp, #8
   2000c:	ldrd	r4, [sp]
   20010:	ldr	r6, [sp, #8]
   20014:	add	sp, sp, #12
   20018:	pop	{pc}		; (ldr pc, [sp], #4)
   2001c:	movw	r1, #11824	; 0x2e30
   20020:	movt	r1, #5
   20024:	ldrd	r2, [r6, #48]	; 0x30
   20028:	mov	r0, r4
   2002c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20030:	b	1ffd8 <__flatcc_fb_gen_c_verifier@@Base+0x26ac>
   20034:	movw	r1, #9712	; 0x25f0
   20038:	movt	r1, #5
   2003c:	ldr	r3, [pc, #88]	; 2009c <__flatcc_fb_gen_c_verifier@@Base+0x2770>
   20040:	movw	r0, #9800	; 0x2648
   20044:	movt	r0, #5
   20048:	movw	r2, #719	; 0x2cf
   2004c:	bl	14014 <__assert_fail@plt>
   20050:	movw	r1, #11912	; 0x2e88
   20054:	movt	r1, #5
   20058:	movw	r3, #41128	; 0xa0a8
   2005c:	movt	r3, #6
   20060:	movw	r2, #9712	; 0x25f0
   20064:	movt	r2, #5
   20068:	str	r1, [sp]
   2006c:	movw	r1, #64544	; 0xfc20
   20070:	movt	r1, #3
   20074:	ldr	r0, [r3]
   20078:	movw	r3, #710	; 0x2c6
   2007c:	bl	13f60 <fprintf@plt>
   20080:	movw	r1, #9712	; 0x25f0
   20084:	movt	r1, #5
   20088:	ldr	r3, [pc, #16]	; 200a0 <__flatcc_fb_gen_c_verifier@@Base+0x2774>
   2008c:	movw	r0, #35672	; 0x8b58
   20090:	movt	r0, #4
   20094:	movw	r2, #710	; 0x2c6
   20098:	bl	14014 <__assert_fail@plt>
   2009c:	andeq	r2, r5, r0, asr #7
   200a0:	andeq	r2, r5, r8, lsr #7
   200a4:	strd	r4, [sp, #-12]!
   200a8:	movw	r1, #11948	; 0x2eac
   200ac:	movt	r1, #5
   200b0:	str	lr, [sp, #8]
   200b4:	sub	sp, sp, #228	; 0xe4
   200b8:	mov	r4, r0
   200bc:	mov	r5, r2
   200c0:	ldr	r2, [sp, #240]	; 0xf0
   200c4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   200c8:	mov	r0, r4
   200cc:	movw	r1, #11804	; 0x2e1c
   200d0:	movt	r1, #5
   200d4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   200d8:	ldrh	r2, [r5, #8]
   200dc:	ldr	r3, [r4, #220]	; 0xdc
   200e0:	sub	r2, r2, #3
   200e4:	cmp	r2, #1
   200e8:	add	r3, r3, #1
   200ec:	str	r3, [r4, #220]	; 0xdc
   200f0:	bhi	20168 <__flatcc_fb_gen_c_verifier@@Base+0x283c>
   200f4:	mov	r2, #220	; 0xdc
   200f8:	mov	r1, #0
   200fc:	add	r0, sp, #4
   20100:	bl	13f78 <memset@plt>
   20104:	add	r2, sp, #4
   20108:	mov	r1, r5
   2010c:	ldr	r0, [r5, #12]
   20110:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   20114:	add	r2, sp, #4
   20118:	movw	r1, #12016	; 0x2ef0
   2011c:	movt	r1, #5
   20120:	mov	r0, r4
   20124:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20128:	ldr	r3, [r4, #220]	; 0xdc
   2012c:	cmp	r3, #0
   20130:	beq	20184 <__flatcc_fb_gen_c_verifier@@Base+0x2858>
   20134:	sub	r3, r3, #1
   20138:	mov	r0, r4
   2013c:	movw	r1, #11128	; 0x2b78
   20140:	movt	r1, #5
   20144:	str	r3, [r4, #220]	; 0xdc
   20148:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2014c:	ldr	r3, [r4, #220]	; 0xdc
   20150:	add	r3, r3, #1
   20154:	str	r3, [r4, #220]	; 0xdc
   20158:	add	sp, sp, #228	; 0xe4
   2015c:	ldrd	r4, [sp]
   20160:	add	sp, sp, #8
   20164:	pop	{pc}		; (ldr pc, [sp], #4)
   20168:	movw	r1, #9712	; 0x25f0
   2016c:	movt	r1, #5
   20170:	ldr	r3, [pc, #40]	; 201a0 <__flatcc_fb_gen_c_verifier@@Base+0x2874>
   20174:	movw	r0, #64632	; 0xfc78
   20178:	movt	r0, #3
   2017c:	movw	r2, #729	; 0x2d9
   20180:	bl	14014 <__assert_fail@plt>
   20184:	movw	r1, #9712	; 0x25f0
   20188:	movt	r1, #5
   2018c:	ldr	r3, [pc, #16]	; 201a4 <__flatcc_fb_gen_c_verifier@@Base+0x2878>
   20190:	movw	r0, #9800	; 0x2648
   20194:	movt	r0, #5
   20198:	movw	r2, #742	; 0x2e6
   2019c:	bl	14014 <__assert_fail@plt>
   201a0:	ldrdeq	r2, [r5], -r0
   201a4:	andeq	r2, r5, r8, ror #7
   201a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   201ac:	mov	r5, r1
   201b0:	mov	r4, r0
   201b4:	strd	r6, [sp, #8]
   201b8:	mov	r1, #0
   201bc:	mov	r6, r2
   201c0:	strd	r8, [sp, #16]
   201c4:	mov	r2, #220	; 0xdc
   201c8:	mov	r7, r3
   201cc:	strd	sl, [sp, #24]
   201d0:	str	lr, [sp, #32]
   201d4:	sub	sp, sp, #508	; 0x1fc
   201d8:	add	r0, sp, #284	; 0x11c
   201dc:	bl	13f78 <memset@plt>
   201e0:	add	r1, sp, #80	; 0x50
   201e4:	ldr	r0, [r6]
   201e8:	bl	15174 <__flatcc_fb_copy_scope@@Base>
   201ec:	ldrh	r3, [r5]
   201f0:	sub	r2, r3, #1
   201f4:	str	r3, [sp, #24]
   201f8:	ldrh	r3, [r7, #24]
   201fc:	clz	r2, r2
   20200:	lsr	r2, r2, #5
   20204:	str	r2, [sp, #56]	; 0x38
   20208:	cmp	r3, #9
   2020c:	beq	20254 <__flatcc_fb_gen_c_verifier@@Base+0x2928>
   20210:	cmp	r3, #15
   20214:	beq	20254 <__flatcc_fb_gen_c_verifier@@Base+0x2928>
   20218:	cmp	r3, #7
   2021c:	beq	20254 <__flatcc_fb_gen_c_verifier@@Base+0x2928>
   20220:	sub	r3, r3, #7
   20224:	cmp	r3, #8
   20228:	ldrls	pc, [pc, r3, lsl #2]
   2022c:	b	20df8 <__flatcc_fb_gen_c_verifier@@Base+0x34cc>
   20230:	andeq	r0, r2, ip, lsl #26
   20234:	andeq	r1, r2, ip, asr #32
   20238:	strdeq	r0, [r2], -r8
   2023c:	ldrdeq	r0, [r2], -ip
   20240:	strdeq	r0, [r2], -r8
   20244:	strdeq	r0, [r2], -r8
   20248:	strdeq	r0, [r2], -r8
   2024c:	andeq	r0, r2, r0, asr #24
   20250:	andeq	r0, r2, r0, asr #24
   20254:	sub	r3, r3, #7
   20258:	cmp	r3, #8
   2025c:	ldrls	pc, [pc, r3, lsl #2]
   20260:	b	20e2c <__flatcc_fb_gen_c_verifier@@Base+0x3500>
   20264:	andeq	r0, r2, r0, lsr #27
   20268:	andeq	r0, r2, r8, lsl #5
   2026c:	andeq	r0, r2, r8, lsr #27
   20270:	andeq	r0, r2, r8, lsr #27
   20274:	andeq	r0, r2, ip, lsr #28
   20278:	andeq	r0, r2, ip, lsr #28
   2027c:	andeq	r0, r2, ip, lsr #28
   20280:	muleq	r2, r4, sp
   20284:	muleq	r2, r4, sp
   20288:	ldr	sl, [r7, #16]
   2028c:	mov	r3, #0
   20290:	mov	r5, #1
   20294:	str	r3, [sp, #16]
   20298:	mov	r9, sl
   2029c:	mov	r3, #0
   202a0:	sub	r8, sl, #1
   202a4:	mov	fp, r3
   202a8:	mov	sl, r5
   202ac:	mov	r6, #1
   202b0:	str	r3, [sp, #28]
   202b4:	str	r3, [sp, #48]	; 0x30
   202b8:	str	r3, [sp, #52]	; 0x34
   202bc:	str	r3, [sp, #60]	; 0x3c
   202c0:	str	r3, [sp, #76]	; 0x4c
   202c4:	ldr	r3, [sp, #544]	; 0x220
   202c8:	cmp	r3, #0
   202cc:	beq	20b84 <__flatcc_fb_gen_c_verifier@@Base+0x3258>
   202d0:	cmp	sl, #0
   202d4:	beq	20fd8 <__flatcc_fb_gen_c_verifier@@Base+0x36ac>
   202d8:	mov	r3, #0
   202dc:	mov	r2, #1
   202e0:	mov	r6, r3
   202e4:	mov	r5, r3
   202e8:	str	r3, [sp, #32]
   202ec:	str	r3, [sp, #64]	; 0x40
   202f0:	str	r3, [sp, #68]	; 0x44
   202f4:	str	r2, [sp, #72]	; 0x48
   202f8:	ldr	r3, [sp, #16]
   202fc:	cmp	r3, #1
   20300:	beq	20bb4 <__flatcc_fb_gen_c_verifier@@Base+0x3288>
   20304:	ldr	r3, [sp, #16]
   20308:	movw	r2, #12088	; 0x2f38
   2030c:	movt	r2, #5
   20310:	str	r2, [sp, #20]
   20314:	cmp	r3, #2
   20318:	movw	r3, #9032	; 0x2348
   2031c:	movt	r3, #5
   20320:	add	r2, r3, r8, lsl #2
   20324:	str	r3, [sp, #36]	; 0x24
   20328:	beq	20588 <__flatcc_fb_gen_c_verifier@@Base+0x2c5c>
   2032c:	ldr	r1, [sp, #544]	; 0x220
   20330:	orr	r3, r6, fp
   20334:	cmp	r6, #0
   20338:	orr	sl, r3, r1
   2033c:	beq	206e0 <__flatcc_fb_gen_c_verifier@@Base+0x2db4>
   20340:	cmp	r8, #10
   20344:	bhi	20e7c <__flatcc_fb_gen_c_verifier@@Base+0x3550>
   20348:	ldr	r3, [r2, #200]	; 0xc8
   2034c:	cmp	r9, #5
   20350:	str	r3, [sp, #20]
   20354:	bne	2090c <__flatcc_fb_gen_c_verifier@@Base+0x2fe0>
   20358:	movw	r3, #29716	; 0x7414
   2035c:	movt	r3, #4
   20360:	str	r3, [sp, #36]	; 0x24
   20364:	cmp	r5, #0
   20368:	beq	203d0 <__flatcc_fb_gen_c_verifier@@Base+0x2aa4>
   2036c:	ldrd	r2, [r7, #88]	; 0x58
   20370:	ldrsh	r9, [r7, #74]	; 0x4a
   20374:	strd	r2, [sp, #40]	; 0x28
   20378:	orrs	r3, r2, r3
   2037c:	bne	209e4 <__flatcc_fb_gen_c_verifier@@Base+0x30b8>
   20380:	ldrd	r2, [sp, #40]	; 0x28
   20384:	movw	r1, #14568	; 0x38e8
   20388:	movt	r1, #5
   2038c:	mvn	r8, #0
   20390:	str	r9, [sp]
   20394:	mov	r9, #0
   20398:	strd	r8, [sp, #8]
   2039c:	mov	r0, r4
   203a0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   203a4:	mov	r0, r4
   203a8:	movw	r1, #12360	; 0x3048
   203ac:	movt	r1, #5
   203b0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   203b4:	movw	r1, #12420	; 0x3084
   203b8:	movt	r1, #5
   203bc:	mov	r0, r4
   203c0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   203c4:	ldr	r3, [r4, #220]	; 0xdc
   203c8:	add	r3, r3, #1
   203cc:	str	r3, [r4, #220]	; 0xdc
   203d0:	mov	r0, r4
   203d4:	movw	r1, #12436	; 0x3094
   203d8:	movt	r1, #5
   203dc:	ldr	r2, [sp, #36]	; 0x24
   203e0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   203e4:	movw	r1, #12448	; 0x30a0
   203e8:	movt	r1, #5
   203ec:	mov	r0, r4
   203f0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   203f4:	ldr	r3, [r4, #220]	; 0xdc
   203f8:	ldr	r2, [sp, #52]	; 0x34
   203fc:	add	r3, r3, #2
   20400:	cmp	r2, #0
   20404:	str	r3, [r4, #220]	; 0xdc
   20408:	beq	20420 <__flatcc_fb_gen_c_verifier@@Base+0x2af4>
   2040c:	movw	r1, #12516	; 0x30e4
   20410:	movt	r1, #5
   20414:	add	r2, sp, #284	; 0x11c
   20418:	mov	r0, r4
   2041c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20420:	ldr	r2, [r4, #208]	; 0xd0
   20424:	add	r3, sp, #80	; 0x50
   20428:	mov	r0, r4
   2042c:	movw	r1, #12536	; 0x30f8
   20430:	movt	r1, #5
   20434:	ldr	r2, [r2, #160]	; 0xa0
   20438:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2043c:	ldr	r3, [r4, #208]	; 0xd0
   20440:	movw	r1, #12568	; 0x3118
   20444:	movt	r1, #5
   20448:	mov	r0, r4
   2044c:	ldr	r2, [r3, #160]	; 0xa0
   20450:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20454:	ldr	r3, [r4, #220]	; 0xdc
   20458:	cmp	r3, #0
   2045c:	beq	20e60 <__flatcc_fb_gen_c_verifier@@Base+0x3534>
   20460:	cmp	r3, #1
   20464:	beq	20e58 <__flatcc_fb_gen_c_verifier@@Base+0x352c>
   20468:	sub	r3, r3, #2
   2046c:	str	r3, [r4, #220]	; 0xdc
   20470:	cmp	sl, #0
   20474:	movne	r3, r5
   20478:	moveq	r3, #0
   2047c:	cmp	r3, #0
   20480:	beq	20494 <__flatcc_fb_gen_c_verifier@@Base+0x2b68>
   20484:	movw	r1, #12604	; 0x313c
   20488:	movt	r1, #5
   2048c:	mov	r0, r4
   20490:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20494:	ldr	r3, [sp, #24]
   20498:	cmp	r3, #1
   2049c:	beq	20610 <__flatcc_fb_gen_c_verifier@@Base+0x2ce4>
   204a0:	eor	r3, r5, #1
   204a4:	tst	r3, fp
   204a8:	bne	2083c <__flatcc_fb_gen_c_verifier@@Base+0x2f10>
   204ac:	cmp	r6, #0
   204b0:	bne	2062c <__flatcc_fb_gen_c_verifier@@Base+0x2d00>
   204b4:	cmp	fp, #0
   204b8:	bne	20868 <__flatcc_fb_gen_c_verifier@@Base+0x2f3c>
   204bc:	ldr	r3, [sp, #48]	; 0x30
   204c0:	cmp	r3, #0
   204c4:	bne	20918 <__flatcc_fb_gen_c_verifier@@Base+0x2fec>
   204c8:	ldr	r3, [sp, #32]
   204cc:	cmp	r3, #0
   204d0:	bne	2092c <__flatcc_fb_gen_c_verifier@@Base+0x3000>
   204d4:	ldr	r3, [sp, #28]
   204d8:	cmp	r3, #0
   204dc:	bne	20a6c <__flatcc_fb_gen_c_verifier@@Base+0x3140>
   204e0:	ldr	r3, [sp, #60]	; 0x3c
   204e4:	cmp	r3, #0
   204e8:	beq	20a0c <__flatcc_fb_gen_c_verifier@@Base+0x30e0>
   204ec:	ldr	r3, [sp, #64]	; 0x40
   204f0:	ldrd	r8, [r7, #96]	; 0x60
   204f4:	ldr	r2, [r7, #112]	; 0x70
   204f8:	cmp	r3, #0
   204fc:	beq	20a84 <__flatcc_fb_gen_c_verifier@@Base+0x3158>
   20500:	add	ip, sp, #284	; 0x11c
   20504:	movw	r1, #13624	; 0x3538
   20508:	movt	r1, #5
   2050c:	mov	r0, r4
   20510:	strd	r8, [sp]
   20514:	str	ip, [sp, #8]
   20518:	ldr	r3, [sp, #28]
   2051c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20520:	cmp	r5, #0
   20524:	beq	20574 <__flatcc_fb_gen_c_verifier@@Base+0x2c48>
   20528:	cmp	sl, #0
   2052c:	beq	208a4 <__flatcc_fb_gen_c_verifier@@Base+0x2f78>
   20530:	movw	r1, #14236	; 0x379c
   20534:	movt	r1, #5
   20538:	mov	r0, r4
   2053c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20540:	ldr	r3, [r4, #220]	; 0xdc
   20544:	cmp	r3, #0
   20548:	beq	209c8 <__flatcc_fb_gen_c_verifier@@Base+0x309c>
   2054c:	sub	r3, r3, #1
   20550:	mov	r0, r4
   20554:	movw	r1, #9812	; 0x2654
   20558:	movt	r1, #5
   2055c:	str	r3, [r4, #220]	; 0xdc
   20560:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20564:	movw	r1, #14524	; 0x38bc
   20568:	movt	r1, #5
   2056c:	mov	r0, r4
   20570:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20574:	ldr	r3, [sp, #16]
   20578:	cmp	r3, #1
   2057c:	bne	207c8 <__flatcc_fb_gen_c_verifier@@Base+0x2e9c>
   20580:	mov	r3, #2
   20584:	str	r3, [sp, #16]
   20588:	ldr	r3, [r4, #220]	; 0xdc
   2058c:	cmp	r3, #0
   20590:	beq	20f04 <__flatcc_fb_gen_c_verifier@@Base+0x35d8>
   20594:	sub	r3, r3, #1
   20598:	mov	r0, r4
   2059c:	movw	r1, #12204	; 0x2fac
   205a0:	movt	r1, #5
   205a4:	str	r3, [r4, #220]	; 0xdc
   205a8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   205ac:	ldr	r3, [r4, #220]	; 0xdc
   205b0:	add	r2, sp, #284	; 0x11c
   205b4:	ldr	r1, [r7, #104]	; 0x68
   205b8:	add	r3, r3, #1
   205bc:	ldr	r0, [r1, #12]
   205c0:	str	r3, [r4, #220]	; 0xdc
   205c4:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   205c8:	ldr	r3, [r7, #104]	; 0x68
   205cc:	movw	r1, #12228	; 0x2fc4
   205d0:	movt	r1, #5
   205d4:	mov	r0, r4
   205d8:	ldrh	r3, [r3, #8]
   205dc:	cmp	r3, #0
   205e0:	ldr	r3, [sp, #28]
   205e4:	moveq	r3, #1
   205e8:	movne	fp, #1
   205ec:	str	r3, [sp, #28]
   205f0:	ldr	r3, [sp, #544]	; 0x220
   205f4:	orr	sl, r3, fp
   205f8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   205fc:	ldr	r3, [sp, #24]
   20600:	mov	r5, #0
   20604:	mov	r6, r5
   20608:	cmp	r3, #1
   2060c:	bne	204a0 <__flatcc_fb_gen_c_verifier@@Base+0x2b74>
   20610:	movw	r1, #12676	; 0x3184
   20614:	movt	r1, #5
   20618:	ldrd	r2, [r7, #80]	; 0x50
   2061c:	mov	r0, r4
   20620:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20624:	cmp	r6, #0
   20628:	beq	204b4 <__flatcc_fb_gen_c_verifier@@Base+0x2b88>
   2062c:	ldr	r6, [sp, #20]
   20630:	mov	r0, r4
   20634:	movw	r1, #12860	; 0x323c
   20638:	movt	r1, #5
   2063c:	mov	r2, r6
   20640:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20644:	mov	r0, r4
   20648:	movw	r1, #12920	; 0x3278
   2064c:	movt	r1, #5
   20650:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20654:	ldr	r3, [r4, #220]	; 0xdc
   20658:	mov	r2, r6
   2065c:	mov	r0, r4
   20660:	movw	r1, #12940	; 0x328c
   20664:	movt	r1, #5
   20668:	add	r3, r3, #1
   2066c:	str	r3, [r4, #220]	; 0xdc
   20670:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20674:	movw	r1, #13028	; 0x32e4
   20678:	movt	r1, #5
   2067c:	mov	r0, r4
   20680:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20684:	ldr	r3, [r4, #220]	; 0xdc
   20688:	cmp	r3, #0
   2068c:	beq	20ecc <__flatcc_fb_gen_c_verifier@@Base+0x35a0>
   20690:	sub	r3, r3, #1
   20694:	movw	r1, #9812	; 0x2654
   20698:	movt	r1, #5
   2069c:	mov	r0, r4
   206a0:	str	r3, [r4, #220]	; 0xdc
   206a4:	ldr	r3, [sp, #56]	; 0x38
   206a8:	orr	r6, r3, r5
   206ac:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   206b0:	ldr	r3, [sp, #32]
   206b4:	orrs	r3, r6, r3
   206b8:	bne	20880 <__flatcc_fb_gen_c_verifier@@Base+0x2f54>
   206bc:	ldrh	r3, [r7, #56]	; 0x38
   206c0:	sub	r3, r3, #3
   206c4:	cmp	r3, #3
   206c8:	ldrls	pc, [pc, r3, lsl #2]
   206cc:	b	2106c <__flatcc_fb_gen_c_verifier@@Base+0x3740>
   206d0:	andeq	r0, r2, r8, lsl r8
   206d4:	andeq	r0, r2, ip, lsl #16
   206d8:	andeq	r0, r2, ip, lsr r7
   206dc:	andeq	r0, r2, ip, lsr r7
   206e0:	cmp	r5, #0
   206e4:	beq	205fc <__flatcc_fb_gen_c_verifier@@Base+0x2cd0>
   206e8:	cmp	sl, #0
   206ec:	bne	2094c <__flatcc_fb_gen_c_verifier@@Base+0x3020>
   206f0:	mov	r0, r4
   206f4:	movw	r1, #12296	; 0x3008
   206f8:	movt	r1, #5
   206fc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20700:	mov	r0, r4
   20704:	movw	r1, #12360	; 0x3048
   20708:	movt	r1, #5
   2070c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20710:	movw	r1, #12420	; 0x3084
   20714:	movt	r1, #5
   20718:	mov	r0, r4
   2071c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20720:	ldr	r3, [r4, #220]	; 0xdc
   20724:	ldr	r2, [sp, #24]
   20728:	add	r3, r3, #1
   2072c:	cmp	r2, #1
   20730:	str	r3, [r4, #220]	; 0xdc
   20734:	bne	204b4 <__flatcc_fb_gen_c_verifier@@Base+0x2b88>
   20738:	b	20610 <__flatcc_fb_gen_c_verifier@@Base+0x2ce4>
   2073c:	movw	r1, #13072	; 0x3310
   20740:	movt	r1, #5
   20744:	mov	r0, r4
   20748:	ldrd	r2, [r7, #48]	; 0x30
   2074c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20750:	ldr	r3, [r4, #220]	; 0xdc
   20754:	add	r3, r3, #1
   20758:	str	r3, [r4, #220]	; 0xdc
   2075c:	ldrsh	r3, [r7, #74]	; 0x4a
   20760:	mov	r0, r4
   20764:	movw	r1, #13324	; 0x340c
   20768:	movt	r1, #5
   2076c:	ldrd	r8, [r7, #88]	; 0x58
   20770:	str	r3, [sp, #8]
   20774:	ldrd	r2, [r7, #96]	; 0x60
   20778:	strd	r8, [sp]
   2077c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20780:	movw	r1, #13404	; 0x345c
   20784:	movt	r1, #5
   20788:	ldr	r3, [sp, #20]
   2078c:	mov	r2, r4
   20790:	mov	r0, r4
   20794:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20798:	ldr	r3, [r4, #220]	; 0xdc
   2079c:	cmp	r3, #0
   207a0:	beq	20ee8 <__flatcc_fb_gen_c_verifier@@Base+0x35bc>
   207a4:	sub	r3, r3, #1
   207a8:	movw	r1, #9812	; 0x2654
   207ac:	movt	r1, #5
   207b0:	mov	r0, r4
   207b4:	str	r3, [r4, #220]	; 0xdc
   207b8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   207bc:	ldr	r3, [sp, #16]
   207c0:	cmp	r3, #1
   207c4:	beq	20580 <__flatcc_fb_gen_c_verifier@@Base+0x2c54>
   207c8:	cmp	r3, #2
   207cc:	beq	20bd4 <__flatcc_fb_gen_c_verifier@@Base+0x32a8>
   207d0:	ldr	r3, [sp, #28]
   207d4:	ldr	r2, [sp, #76]	; 0x4c
   207d8:	orr	r3, r3, r5
   207dc:	orr	r3, r3, r2
   207e0:	ldr	r2, [sp, #16]
   207e4:	orrs	r3, r3, r2
   207e8:	bne	20c18 <__flatcc_fb_gen_c_verifier@@Base+0x32ec>
   207ec:	mov	r0, #0
   207f0:	add	sp, sp, #508	; 0x1fc
   207f4:	ldrd	r4, [sp]
   207f8:	ldrd	r6, [sp, #8]
   207fc:	ldrd	r8, [sp, #16]
   20800:	ldrd	sl, [sp, #24]
   20804:	add	sp, sp, #32
   20808:	pop	{pc}		; (ldr pc, [sp], #4)
   2080c:	movw	r1, #13140	; 0x3354
   20810:	movt	r1, #5
   20814:	b	20744 <__flatcc_fb_gen_c_verifier@@Base+0x2e18>
   20818:	movw	r1, #13208	; 0x3398
   2081c:	movt	r1, #5
   20820:	ldrd	r2, [r7, #48]	; 0x30
   20824:	mov	r0, r4
   20828:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2082c:	ldr	r3, [r4, #220]	; 0xdc
   20830:	add	r3, r3, #1
   20834:	str	r3, [r4, #220]	; 0xdc
   20838:	b	2075c <__flatcc_fb_gen_c_verifier@@Base+0x2e30>
   2083c:	ldrh	r3, [r7, #74]	; 0x4a
   20840:	movw	r1, #12724	; 0x31b4
   20844:	movt	r1, #5
   20848:	mov	r0, r4
   2084c:	ldrd	r8, [r7, #88]	; 0x58
   20850:	str	r3, [sp, #8]
   20854:	ldrd	r2, [r7, #96]	; 0x60
   20858:	strd	r8, [sp]
   2085c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20860:	cmp	r6, #0
   20864:	bne	2062c <__flatcc_fb_gen_c_verifier@@Base+0x2d00>
   20868:	movw	r1, #12804	; 0x3204
   2086c:	movt	r1, #5
   20870:	add	r2, sp, #284	; 0x11c
   20874:	mov	r0, r4
   20878:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2087c:	b	20520 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   20880:	movw	r1, #13404	; 0x345c
   20884:	movt	r1, #5
   20888:	ldr	r3, [sp, #20]
   2088c:	mov	r2, r4
   20890:	mov	r0, r4
   20894:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20898:	cmp	r6, #0
   2089c:	bne	20520 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   208a0:	b	20798 <__flatcc_fb_gen_c_verifier@@Base+0x2e6c>
   208a4:	mov	r0, r4
   208a8:	movw	r1, #14132	; 0x3734
   208ac:	movt	r1, #5
   208b0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   208b4:	mov	r0, r4
   208b8:	movw	r1, #14220	; 0x378c
   208bc:	movt	r1, #5
   208c0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   208c4:	movw	r1, #14236	; 0x379c
   208c8:	movt	r1, #5
   208cc:	mov	r0, r4
   208d0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   208d4:	ldr	r3, [r4, #220]	; 0xdc
   208d8:	cmp	r3, #0
   208dc:	beq	209c8 <__flatcc_fb_gen_c_verifier@@Base+0x309c>
   208e0:	sub	r3, r3, #1
   208e4:	mov	r0, r4
   208e8:	movw	r1, #9812	; 0x2654
   208ec:	movt	r1, #5
   208f0:	str	r3, [r4, #220]	; 0xdc
   208f4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   208f8:	movw	r1, #14472	; 0x3888
   208fc:	movt	r1, #5
   20900:	mov	r0, r4
   20904:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20908:	b	20574 <__flatcc_fb_gen_c_verifier@@Base+0x2c48>
   2090c:	ldr	r3, [r2, #264]	; 0x108
   20910:	str	r3, [sp, #36]	; 0x24
   20914:	b	20364 <__flatcc_fb_gen_c_verifier@@Base+0x2a38>
   20918:	movw	r1, #13436	; 0x347c
   2091c:	movt	r1, #5
   20920:	mov	r0, r4
   20924:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20928:	b	20520 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   2092c:	ldr	r3, [sp, #68]	; 0x44
   20930:	movw	r1, #13496	; 0x34b8
   20934:	movt	r1, #5
   20938:	mov	r0, r4
   2093c:	clz	r2, r3
   20940:	lsr	r2, r2, #5
   20944:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20948:	b	20520 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   2094c:	ldrsh	r3, [r7, #74]	; 0x4a
   20950:	ldrd	r8, [r7, #88]	; 0x58
   20954:	str	r3, [sp, #36]	; 0x24
   20958:	orrs	r3, r8, r9
   2095c:	beq	20ff0 <__flatcc_fb_gen_c_verifier@@Base+0x36c4>
   20960:	mov	r2, r8
   20964:	mov	r3, r9
   20968:	mvn	r0, #0
   2096c:	mov	r1, #0
   20970:	bl	3e380 <fb_value_set_visit@@Base+0x694>
   20974:	ldr	ip, [sp, #36]	; 0x24
   20978:	mov	r3, r9
   2097c:	mov	r2, r8
   20980:	str	ip, [sp]
   20984:	strd	r0, [sp, #8]
   20988:	mov	r0, r4
   2098c:	movw	r1, #14568	; 0x38e8
   20990:	movt	r1, #5
   20994:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20998:	mov	r0, r4
   2099c:	movw	r1, #12360	; 0x3048
   209a0:	movt	r1, #5
   209a4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   209a8:	movw	r1, #12420	; 0x3084
   209ac:	movt	r1, #5
   209b0:	mov	r0, r4
   209b4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   209b8:	ldr	r3, [r4, #220]	; 0xdc
   209bc:	add	r3, r3, #1
   209c0:	str	r3, [r4, #220]	; 0xdc
   209c4:	b	20470 <__flatcc_fb_gen_c_verifier@@Base+0x2b44>
   209c8:	movw	r1, #9712	; 0x25f0
   209cc:	movt	r1, #5
   209d0:	ldr	r3, [pc, #1760]	; 210b8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   209d4:	movw	r0, #9800	; 0x2648
   209d8:	movt	r0, #5
   209dc:	movw	r2, #647	; 0x287
   209e0:	bl	14014 <__assert_fail@plt>
   209e4:	mvn	r0, #0
   209e8:	mov	r1, #0
   209ec:	ldrd	r2, [sp, #40]	; 0x28
   209f0:	bl	3e380 <fb_value_set_visit@@Base+0x694>
   209f4:	str	r9, [sp]
   209f8:	strd	r0, [sp, #8]
   209fc:	movw	r1, #14568	; 0x38e8
   20a00:	movt	r1, #5
   20a04:	ldrd	r2, [sp, #40]	; 0x28
   20a08:	b	2039c <__flatcc_fb_gen_c_verifier@@Base+0x2a70>
   20a0c:	ldr	r3, [sp, #544]	; 0x220
   20a10:	cmp	r3, #0
   20a14:	bne	20aa4 <__flatcc_fb_gen_c_verifier@@Base+0x3178>
   20a18:	cmp	r5, #0
   20a1c:	bne	20528 <__flatcc_fb_gen_c_verifier@@Base+0x2bfc>
   20a20:	movw	r1, #14080	; 0x3700
   20a24:	movt	r1, #5
   20a28:	movw	r3, #41128	; 0xa0a8
   20a2c:	movt	r3, #6
   20a30:	movw	r2, #9712	; 0x25f0
   20a34:	movt	r2, #5
   20a38:	str	r1, [sp]
   20a3c:	movw	r1, #64544	; 0xfc20
   20a40:	movt	r1, #3
   20a44:	ldr	r0, [r3]
   20a48:	mov	r3, #636	; 0x27c
   20a4c:	bl	13f60 <fprintf@plt>
   20a50:	movw	r1, #9712	; 0x25f0
   20a54:	movt	r1, #5
   20a58:	ldr	r3, [pc, #1624]	; 210b8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   20a5c:	movw	r0, #35672	; 0x8b58
   20a60:	movt	r0, #4
   20a64:	mov	r2, #636	; 0x27c
   20a68:	bl	14014 <__assert_fail@plt>
   20a6c:	movw	r1, #13576	; 0x3508
   20a70:	movt	r1, #5
   20a74:	add	r2, sp, #284	; 0x11c
   20a78:	mov	r0, r4
   20a7c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20a80:	b	20520 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   20a84:	add	ip, sp, #284	; 0x11c
   20a88:	movw	r1, #13724	; 0x359c
   20a8c:	movt	r1, #5
   20a90:	mov	r0, r4
   20a94:	strd	r8, [sp]
   20a98:	str	ip, [sp, #8]
   20a9c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20aa0:	b	20520 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   20aa4:	mov	r0, r4
   20aa8:	movw	r1, #12448	; 0x30a0
   20aac:	movt	r1, #5
   20ab0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20ab4:	ldr	r3, [r4, #220]	; 0xdc
   20ab8:	add	r2, sp, #284	; 0x11c
   20abc:	mov	r0, r4
   20ac0:	movw	r1, #12516	; 0x30e4
   20ac4:	movt	r1, #5
   20ac8:	add	r3, r3, #2
   20acc:	str	r3, [r4, #220]	; 0xdc
   20ad0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20ad4:	ldr	r2, [r4, #208]	; 0xd0
   20ad8:	add	r3, sp, #80	; 0x50
   20adc:	mov	r0, r4
   20ae0:	movw	r1, #12536	; 0x30f8
   20ae4:	movt	r1, #5
   20ae8:	ldr	r2, [r2, #160]	; 0xa0
   20aec:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20af0:	ldr	r3, [r4, #208]	; 0xd0
   20af4:	movw	r1, #12568	; 0x3118
   20af8:	movt	r1, #5
   20afc:	mov	r0, r4
   20b00:	ldr	r2, [r3, #160]	; 0xa0
   20b04:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20b08:	ldr	r3, [r4, #220]	; 0xdc
   20b0c:	cmp	r3, #0
   20b10:	beq	20fbc <__flatcc_fb_gen_c_verifier@@Base+0x3690>
   20b14:	cmp	r3, #1
   20b18:	beq	20fb4 <__flatcc_fb_gen_c_verifier@@Base+0x3688>
   20b1c:	ldr	r2, [sp, #72]	; 0x48
   20b20:	sub	r3, r3, #2
   20b24:	ldrd	r8, [r7, #96]	; 0x60
   20b28:	cmp	r2, #0
   20b2c:	ldr	r2, [r7, #112]	; 0x70
   20b30:	str	r3, [r4, #220]	; 0xdc
   20b34:	beq	20b60 <__flatcc_fb_gen_c_verifier@@Base+0x3234>
   20b38:	add	ip, sp, #284	; 0x11c
   20b3c:	movw	r1, #13816	; 0x35f8
   20b40:	movt	r1, #5
   20b44:	mov	r0, r4
   20b48:	strd	r8, [sp]
   20b4c:	str	ip, [sp, #8]
   20b50:	str	ip, [sp, #12]
   20b54:	ldr	r3, [sp, #60]	; 0x3c
   20b58:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20b5c:	b	20520 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   20b60:	add	ip, sp, #284	; 0x11c
   20b64:	movw	r1, #13964	; 0x368c
   20b68:	movt	r1, #5
   20b6c:	mov	r0, r4
   20b70:	strd	r8, [sp]
   20b74:	str	ip, [sp, #8]
   20b78:	ldr	r3, [sp, #72]	; 0x48
   20b7c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20b80:	b	20520 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   20b84:	ldr	r3, [sp, #60]	; 0x3c
   20b88:	ands	r3, r5, r3
   20b8c:	str	r3, [sp, #64]	; 0x40
   20b90:	ldr	r3, [sp, #544]	; 0x220
   20b94:	str	r3, [sp, #32]
   20b98:	str	r3, [sp, #68]	; 0x44
   20b9c:	str	r3, [sp, #72]	; 0x48
   20ba0:	beq	202f8 <__flatcc_fb_gen_c_verifier@@Base+0x29cc>
   20ba4:	mov	r5, r3
   20ba8:	ldr	r3, [sp, #16]
   20bac:	cmp	r3, #1
   20bb0:	bne	20304 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   20bb4:	movw	r1, #12152	; 0x2f78
   20bb8:	movt	r1, #5
   20bbc:	mov	r0, r4
   20bc0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20bc4:	ldr	r3, [r4, #220]	; 0xdc
   20bc8:	add	r3, r3, #1
   20bcc:	str	r3, [r4, #220]	; 0xdc
   20bd0:	b	20304 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   20bd4:	mov	r0, r4
   20bd8:	movw	r1, #14296	; 0x37d8
   20bdc:	movt	r1, #5
   20be0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20be4:	movw	r1, #14320	; 0x37f0
   20be8:	movt	r1, #5
   20bec:	mov	r0, r4
   20bf0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20bf4:	ldr	r3, [r4, #220]	; 0xdc
   20bf8:	cmp	r3, #0
   20bfc:	beq	20f98 <__flatcc_fb_gen_c_verifier@@Base+0x366c>
   20c00:	sub	r3, r3, #1
   20c04:	movw	r1, #14368	; 0x3820
   20c08:	movt	r1, #5
   20c0c:	mov	r0, r4
   20c10:	str	r3, [r4, #220]	; 0xdc
   20c14:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20c18:	mov	r0, r4
   20c1c:	movw	r1, #14388	; 0x3834
   20c20:	movt	r1, #5
   20c24:	ldrd	r2, [r7, #96]	; 0x60
   20c28:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20c2c:	mov	r0, r4
   20c30:	movw	r1, #14220	; 0x378c
   20c34:	movt	r1, #5
   20c38:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20c3c:	b	207ec <__flatcc_fb_gen_c_verifier@@Base+0x2ec0>
   20c40:	mov	sl, #0
   20c44:	mov	r5, sl
   20c48:	ldr	r1, [r7, #16]
   20c4c:	add	r2, sp, #284	; 0x11c
   20c50:	ldr	r0, [r1, #12]
   20c54:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   20c58:	ldr	r1, [r7, #16]
   20c5c:	ldrh	r3, [r1, #8]
   20c60:	sub	r0, r3, #3
   20c64:	sub	r2, r3, #4
   20c68:	clz	r0, r0
   20c6c:	clz	r2, r2
   20c70:	lsr	r0, r0, #5
   20c74:	sub	fp, r3, #1
   20c78:	lsr	r2, r2, #5
   20c7c:	clz	fp, fp
   20c80:	lsr	fp, fp, #5
   20c84:	str	r0, [sp, #52]	; 0x34
   20c88:	ldr	r0, [sp, #544]	; 0x220
   20c8c:	cmp	r0, #0
   20c90:	clz	r0, r3
   20c94:	lsr	r0, r0, #5
   20c98:	movne	r2, #0
   20c9c:	cmp	r2, #0
   20ca0:	str	r0, [sp, #28]
   20ca4:	bne	20e38 <__flatcc_fb_gen_c_verifier@@Base+0x350c>
   20ca8:	cmp	r3, #3
   20cac:	beq	20dd8 <__flatcc_fb_gen_c_verifier@@Base+0x34ac>
   20cb0:	mov	r9, r2
   20cb4:	mvn	r8, #0
   20cb8:	str	r2, [sp, #48]	; 0x30
   20cbc:	mov	r6, r2
   20cc0:	mov	r3, r2
   20cc4:	str	r2, [sp, #52]	; 0x34
   20cc8:	str	r2, [sp, #60]	; 0x3c
   20ccc:	str	r3, [sp, #76]	; 0x4c
   20cd0:	mov	r3, #0
   20cd4:	str	r3, [sp, #16]
   20cd8:	b	202c4 <__flatcc_fb_gen_c_verifier@@Base+0x2998>
   20cdc:	mov	sl, #0
   20ce0:	mov	r3, #1
   20ce4:	mvn	r8, #0
   20ce8:	mov	r5, sl
   20cec:	mov	r9, sl
   20cf0:	mov	fp, sl
   20cf4:	str	sl, [sp, #28]
   20cf8:	mov	r6, sl
   20cfc:	str	r3, [sp, #48]	; 0x30
   20d00:	str	sl, [sp, #52]	; 0x34
   20d04:	str	sl, [sp, #60]	; 0x3c
   20d08:	b	20ccc <__flatcc_fb_gen_c_verifier@@Base+0x33a0>
   20d0c:	mov	r5, #0
   20d10:	ldrh	r8, [r7, #72]	; 0x48
   20d14:	ldr	r3, [r7, #104]	; 0x68
   20d18:	ldr	r9, [r7, #16]
   20d1c:	and	r2, r8, #1024	; 0x400
   20d20:	adds	r3, r3, #0
   20d24:	str	r2, [sp, #68]	; 0x44
   20d28:	movne	r3, #1
   20d2c:	mov	sl, r9
   20d30:	str	r3, [sp, #16]
   20d34:	ands	r3, r8, #3072	; 0xc00
   20d38:	str	r3, [sp, #32]
   20d3c:	beq	2029c <__flatcc_fb_gen_c_verifier@@Base+0x2970>
   20d40:	eor	r6, r5, #1
   20d44:	cmp	r9, #4
   20d48:	orrne	r6, r6, #1
   20d4c:	cmp	r6, #0
   20d50:	moveq	r8, #3
   20d54:	moveq	r9, #4
   20d58:	streq	r3, [sp, #76]	; 0x4c
   20d5c:	bne	20f4c <__flatcc_fb_gen_c_verifier@@Base+0x3620>
   20d60:	ldr	r3, [sp, #544]	; 0x220
   20d64:	cmp	r3, #0
   20d68:	bne	20f20 <__flatcc_fb_gen_c_verifier@@Base+0x35f4>
   20d6c:	mov	fp, r3
   20d70:	mov	r5, r3
   20d74:	str	r3, [sp, #16]
   20d78:	str	r3, [sp, #28]
   20d7c:	str	r3, [sp, #48]	; 0x30
   20d80:	str	r3, [sp, #52]	; 0x34
   20d84:	str	r3, [sp, #60]	; 0x3c
   20d88:	str	r3, [sp, #64]	; 0x40
   20d8c:	str	r3, [sp, #72]	; 0x48
   20d90:	b	20304 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   20d94:	mov	sl, #1
   20d98:	mov	r5, sl
   20d9c:	b	20c48 <__flatcc_fb_gen_c_verifier@@Base+0x331c>
   20da0:	mov	r5, #1
   20da4:	b	20d10 <__flatcc_fb_gen_c_verifier@@Base+0x33e4>
   20da8:	mov	r9, #0
   20dac:	mov	sl, #1
   20db0:	mov	r5, sl
   20db4:	mov	fp, r9
   20db8:	mov	r6, r9
   20dbc:	mvn	r8, #0
   20dc0:	str	r9, [sp, #28]
   20dc4:	mov	r3, sl
   20dc8:	str	sl, [sp, #48]	; 0x30
   20dcc:	str	r9, [sp, #52]	; 0x34
   20dd0:	str	r9, [sp, #60]	; 0x3c
   20dd4:	b	20ccc <__flatcc_fb_gen_c_verifier@@Base+0x33a0>
   20dd8:	ldr	r9, [r1, #40]	; 0x28
   20ddc:	mov	r6, #1
   20de0:	mov	r3, r2
   20de4:	str	r2, [sp, #48]	; 0x30
   20de8:	str	r6, [sp, #52]	; 0x34
   20dec:	str	r2, [sp, #60]	; 0x3c
   20df0:	sub	r8, r9, #1
   20df4:	b	20ccc <__flatcc_fb_gen_c_verifier@@Base+0x33a0>
   20df8:	mov	sl, #0
   20dfc:	mov	r5, sl
   20e00:	mov	r6, #0
   20e04:	mvn	r8, #0
   20e08:	mov	fp, r6
   20e0c:	mov	r9, r6
   20e10:	str	r6, [sp, #16]
   20e14:	str	r6, [sp, #28]
   20e18:	str	r6, [sp, #48]	; 0x30
   20e1c:	str	r6, [sp, #52]	; 0x34
   20e20:	str	r6, [sp, #60]	; 0x3c
   20e24:	str	r6, [sp, #76]	; 0x4c
   20e28:	b	202c4 <__flatcc_fb_gen_c_verifier@@Base+0x2998>
   20e2c:	mov	sl, #1
   20e30:	mov	r5, sl
   20e34:	b	20e00 <__flatcc_fb_gen_c_verifier@@Base+0x34d4>
   20e38:	mov	r9, #0
   20e3c:	mov	r3, #1
   20e40:	mvn	r8, #0
   20e44:	mov	r6, r9
   20e48:	str	r9, [sp, #48]	; 0x30
   20e4c:	str	r3, [sp, #60]	; 0x3c
   20e50:	mov	r3, r9
   20e54:	b	20ccc <__flatcc_fb_gen_c_verifier@@Base+0x33a0>
   20e58:	mov	r3, #0
   20e5c:	str	r3, [r4, #220]	; 0xdc
   20e60:	movw	r1, #9712	; 0x25f0
   20e64:	movt	r1, #5
   20e68:	ldr	r3, [pc, #584]	; 210b8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   20e6c:	movw	r0, #9800	; 0x2648
   20e70:	movt	r0, #5
   20e74:	movw	r2, #539	; 0x21b
   20e78:	bl	14014 <__assert_fail@plt>
   20e7c:	movw	r1, #64556	; 0xfc2c
   20e80:	movt	r1, #3
   20e84:	movw	r3, #41128	; 0xa0a8
   20e88:	movt	r3, #6
   20e8c:	movw	r2, #64468	; 0xfbd4
   20e90:	movt	r2, #3
   20e94:	str	r1, [sp]
   20e98:	movw	r1, #64544	; 0xfc20
   20e9c:	movt	r1, #3
   20ea0:	ldr	r0, [r3]
   20ea4:	mov	r3, #96	; 0x60
   20ea8:	bl	13f60 <fprintf@plt>
   20eac:	ldr	r3, [sp, #36]	; 0x24
   20eb0:	movw	r1, #64468	; 0xfbd4
   20eb4:	movt	r1, #3
   20eb8:	movw	r0, #35672	; 0x8b58
   20ebc:	movt	r0, #4
   20ec0:	mov	r2, #96	; 0x60
   20ec4:	add	r3, r3, #244	; 0xf4
   20ec8:	bl	14014 <__assert_fail@plt>
   20ecc:	movw	r1, #9712	; 0x25f0
   20ed0:	movt	r1, #5
   20ed4:	ldr	r3, [pc, #476]	; 210b8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   20ed8:	movw	r0, #9800	; 0x2648
   20edc:	movt	r0, #5
   20ee0:	movw	r2, #559	; 0x22f
   20ee4:	bl	14014 <__assert_fail@plt>
   20ee8:	movw	r1, #9712	; 0x25f0
   20eec:	movt	r1, #5
   20ef0:	ldr	r3, [pc, #448]	; 210b8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   20ef4:	movw	r0, #9800	; 0x2648
   20ef8:	movt	r0, #5
   20efc:	movw	r2, #602	; 0x25a
   20f00:	bl	14014 <__assert_fail@plt>
   20f04:	movw	r1, #9712	; 0x25f0
   20f08:	movt	r1, #5
   20f0c:	ldr	r3, [pc, #420]	; 210b8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   20f10:	movw	r0, #9800	; 0x2648
   20f14:	movt	r0, #5
   20f18:	movw	r2, #490	; 0x1ea
   20f1c:	bl	14014 <__assert_fail@plt>
   20f20:	mov	r6, #0
   20f24:	mov	fp, r6
   20f28:	mov	r5, r6
   20f2c:	str	r6, [sp, #16]
   20f30:	str	r6, [sp, #28]
   20f34:	str	r6, [sp, #48]	; 0x30
   20f38:	str	r6, [sp, #52]	; 0x34
   20f3c:	str	r6, [sp, #60]	; 0x3c
   20f40:	str	r6, [sp, #64]	; 0x40
   20f44:	str	r6, [sp, #72]	; 0x48
   20f48:	b	20304 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   20f4c:	movw	r1, #12092	; 0x2f3c
   20f50:	movt	r1, #5
   20f54:	movw	r3, #41128	; 0xa0a8
   20f58:	movt	r3, #6
   20f5c:	movw	r2, #9712	; 0x25f0
   20f60:	movt	r2, #5
   20f64:	str	r1, [sp]
   20f68:	movw	r1, #64544	; 0xfc20
   20f6c:	movt	r1, #3
   20f70:	ldr	r0, [r3]
   20f74:	movw	r3, #466	; 0x1d2
   20f78:	bl	13f60 <fprintf@plt>
   20f7c:	movw	r1, #9712	; 0x25f0
   20f80:	movt	r1, #5
   20f84:	ldr	r3, [pc, #300]	; 210b8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   20f88:	movw	r0, #35672	; 0x8b58
   20f8c:	movt	r0, #4
   20f90:	movw	r2, #466	; 0x1d2
   20f94:	bl	14014 <__assert_fail@plt>
   20f98:	movw	r1, #9712	; 0x25f0
   20f9c:	movt	r1, #5
   20fa0:	ldr	r3, [pc, #272]	; 210b8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   20fa4:	movw	r0, #9800	; 0x2648
   20fa8:	movt	r0, #5
   20fac:	movw	r2, #661	; 0x295
   20fb0:	bl	14014 <__assert_fail@plt>
   20fb4:	ldr	r3, [sp, #60]	; 0x3c
   20fb8:	str	r3, [r4, #220]	; 0xdc
   20fbc:	movw	r1, #9712	; 0x25f0
   20fc0:	movt	r1, #5
   20fc4:	ldr	r3, [pc, #236]	; 210b8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   20fc8:	movw	r0, #9800	; 0x2648
   20fcc:	movt	r0, #5
   20fd0:	movw	r2, #627	; 0x273
   20fd4:	bl	14014 <__assert_fail@plt>
   20fd8:	mov	r6, sl
   20fdc:	str	sl, [sp, #32]
   20fe0:	str	sl, [sp, #64]	; 0x40
   20fe4:	str	sl, [sp, #68]	; 0x44
   20fe8:	str	sl, [sp, #72]	; 0x48
   20fec:	b	202f8 <__flatcc_fb_gen_c_verifier@@Base+0x29cc>
   20ff0:	ldr	r1, [sp, #36]	; 0x24
   20ff4:	mov	r3, r9
   20ff8:	mov	r2, r8
   20ffc:	mov	r9, #0
   21000:	mvn	r8, #0
   21004:	mov	r0, r4
   21008:	str	r1, [sp]
   2100c:	movw	r1, #14568	; 0x38e8
   21010:	movt	r1, #5
   21014:	strd	r8, [sp, #8]
   21018:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2101c:	mov	r0, r4
   21020:	movw	r1, #12360	; 0x3048
   21024:	movt	r1, #5
   21028:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2102c:	movw	r1, #12420	; 0x3084
   21030:	movt	r1, #5
   21034:	mov	r0, r4
   21038:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2103c:	ldr	r3, [r4, #220]	; 0xdc
   21040:	add	r3, r3, #1
   21044:	str	r3, [r4, #220]	; 0xdc
   21048:	b	20484 <__flatcc_fb_gen_c_verifier@@Base+0x2b58>
   2104c:	ldr	r9, [r7, #16]
   21050:	mov	r3, #0
   21054:	mov	r6, #1
   21058:	str	r3, [sp, #32]
   2105c:	str	r3, [sp, #68]	; 0x44
   21060:	str	r3, [sp, #76]	; 0x4c
   21064:	sub	r8, r9, #1
   21068:	b	20d60 <__flatcc_fb_gen_c_verifier@@Base+0x3434>
   2106c:	movw	r1, #13276	; 0x33dc
   21070:	movt	r1, #5
   21074:	movw	r3, #41128	; 0xa0a8
   21078:	movt	r3, #6
   2107c:	movw	r2, #9712	; 0x25f0
   21080:	movt	r2, #5
   21084:	str	r1, [sp]
   21088:	movw	r1, #64544	; 0xfc20
   2108c:	movt	r1, #3
   21090:	ldr	r0, [r3]
   21094:	movw	r3, #590	; 0x24e
   21098:	bl	13f60 <fprintf@plt>
   2109c:	movw	r1, #9712	; 0x25f0
   210a0:	movt	r1, #5
   210a4:	ldr	r3, [pc, #12]	; 210b8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   210a8:	movw	r0, #35672	; 0x8b58
   210ac:	movt	r0, #4
   210b0:	movw	r2, #590	; 0x24e
   210b4:	bl	14014 <__assert_fail@plt>
   210b8:	strdeq	r2, [r5], -r8
   210bc:	strd	r4, [sp, #-20]!	; 0xffffffec
   210c0:	mov	r4, r0
   210c4:	mov	r5, r1
   210c8:	strd	r6, [sp, #8]
   210cc:	movw	r1, #14652	; 0x393c
   210d0:	movt	r1, #5
   210d4:	str	lr, [sp, #16]
   210d8:	sub	sp, sp, #12
   210dc:	mov	r7, r2
   210e0:	ldr	r2, [sp, #32]
   210e4:	mov	r6, r3
   210e8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   210ec:	mov	r0, r4
   210f0:	movw	r1, #14720	; 0x3980
   210f4:	movt	r1, #5
   210f8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   210fc:	ldr	ip, [r4, #220]	; 0xdc
   21100:	mov	r3, r7
   21104:	add	r2, r5, #12
   21108:	add	r1, r5, #8
   2110c:	mov	r0, r4
   21110:	str	r6, [sp]
   21114:	add	ip, ip, #1
   21118:	str	ip, [r4, #220]	; 0xdc
   2111c:	bl	201a8 <__flatcc_fb_gen_c_verifier@@Base+0x287c>
   21120:	ldr	r3, [r4, #220]	; 0xdc
   21124:	cmp	r3, #0
   21128:	beq	21164 <__flatcc_fb_gen_c_verifier@@Base+0x3838>
   2112c:	sub	r3, r3, #1
   21130:	mov	r0, r4
   21134:	movw	r1, #11128	; 0x2b78
   21138:	movt	r1, #5
   2113c:	str	r3, [r4, #220]	; 0xdc
   21140:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21144:	ldr	r3, [r4, #220]	; 0xdc
   21148:	add	r3, r3, #1
   2114c:	str	r3, [r4, #220]	; 0xdc
   21150:	add	sp, sp, #12
   21154:	ldrd	r4, [sp]
   21158:	ldrd	r6, [sp, #8]
   2115c:	add	sp, sp, #16
   21160:	pop	{pc}		; (ldr pc, [sp], #4)
   21164:	movw	r1, #9712	; 0x25f0
   21168:	movt	r1, #5
   2116c:	ldr	r3, [pc, #12]	; 21180 <__flatcc_fb_gen_c_verifier@@Base+0x3854>
   21170:	movw	r0, #9800	; 0x2648
   21174:	movt	r0, #5
   21178:	movw	r2, #675	; 0x2a3
   2117c:	bl	14014 <__assert_fail@plt>
   21180:	andeq	r2, r5, ip, ror r4
   21184:	ldrh	r3, [r1, #8]
   21188:	cmp	r3, #4
   2118c:	bxhi	lr
   21190:	strd	r4, [sp, #-32]!	; 0xffffffe0
   21194:	strd	r6, [sp, #8]
   21198:	mov	r7, r0
   2119c:	mov	r6, r1
   211a0:	ldr	r0, [r0, #40]	; 0x28
   211a4:	strd	r8, [sp, #16]
   211a8:	ldr	r1, [r1, #16]
   211ac:	str	sl, [sp, #24]
   211b0:	str	lr, [sp, #28]
   211b4:	add	r0, r0, #172	; 0xac
   211b8:	bl	27794 <ptr_set_find_item@@Base>
   211bc:	cmp	r0, #0
   211c0:	beq	21270 <__flatcc_fb_gen_c_verifier@@Base+0x3944>
   211c4:	ldr	r3, [r7]
   211c8:	ldr	r9, [r7, #36]	; 0x24
   211cc:	cmp	r3, #0
   211d0:	moveq	r4, r9
   211d4:	beq	21214 <__flatcc_fb_gen_c_verifier@@Base+0x38e8>
   211d8:	ldr	r3, [r6, #12]
   211dc:	mov	r4, r9
   211e0:	ldr	r5, [r3]
   211e4:	cmp	r5, #0
   211e8:	beq	21214 <__flatcc_fb_gen_c_verifier@@Base+0x38e8>
   211ec:	mov	r8, #46	; 0x2e
   211f0:	ldr	r3, [r5, #4]
   211f4:	mov	r0, r4
   211f8:	ldm	r3, {r1, r2}
   211fc:	add	r4, r4, r2
   21200:	bl	13eb8 <memcpy@plt>
   21204:	strb	r8, [r4], #1
   21208:	ldr	r5, [r5]
   2120c:	cmp	r5, #0
   21210:	bne	211f0 <__flatcc_fb_gen_c_verifier@@Base+0x38c4>
   21214:	ldr	r3, [r6, #4]
   21218:	mov	r0, r4
   2121c:	ldm	r3, {r1, r5}
   21220:	mov	r2, r5
   21224:	bl	13eb8 <memcpy@plt>
   21228:	mov	r2, #0
   2122c:	add	r3, r4, r5
   21230:	add	r3, r3, #1
   21234:	strb	r2, [r4, r5]
   21238:	ldrh	r2, [r6, #8]
   2123c:	str	r3, [r7, #36]	; 0x24
   21240:	cmp	r2, #4
   21244:	ldrls	pc, [pc, r2, lsl #2]
   21248:	b	21270 <__flatcc_fb_gen_c_verifier@@Base+0x3944>
   2124c:	andeq	r1, r2, r8, lsl #5
   21250:	andeq	r1, r2, r8, lsl #5
   21254:	andeq	r1, r2, r0, ror r2
   21258:	andeq	r1, r2, r0, ror #4
   2125c:	andeq	r1, r2, r0, ror #4
   21260:	ldr	r3, [r7, #32]
   21264:	add	r2, r3, #8
   21268:	stm	r3, {r6, r9}
   2126c:	str	r2, [r7, #32]
   21270:	ldrd	r4, [sp]
   21274:	ldrd	r6, [sp, #8]
   21278:	ldrd	r8, [sp, #16]
   2127c:	ldr	sl, [sp, #24]
   21280:	add	sp, sp, #28
   21284:	pop	{pc}		; (ldr pc, [sp], #4)
   21288:	ldr	r3, [r7, #28]
   2128c:	add	r2, r3, #8
   21290:	stm	r3, {r6, r9}
   21294:	str	r2, [r7, #28]
   21298:	b	21270 <__flatcc_fb_gen_c_verifier@@Base+0x3944>
   2129c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   212a0:	subs	r5, r0, #0
   212a4:	strd	r6, [sp, #8]
   212a8:	strd	r8, [sp, #16]
   212ac:	strd	sl, [sp, #24]
   212b0:	str	lr, [sp, #32]
   212b4:	sub	sp, sp, #4
   212b8:	beq	21440 <__flatcc_fb_gen_c_verifier@@Base+0x3b14>
   212bc:	mov	r0, #0
   212c0:	mov	r4, r5
   212c4:	mov	r7, r0
   212c8:	b	212dc <__flatcc_fb_gen_c_verifier@@Base+0x39b0>
   212cc:	mov	r7, r2
   212d0:	ldr	r4, [r4]
   212d4:	cmp	r4, #0
   212d8:	beq	21324 <__flatcc_fb_gen_c_verifier@@Base+0x39f8>
   212dc:	ldrh	r3, [r4, #72]	; 0x48
   212e0:	add	r2, r7, #1
   212e4:	tst	r3, #4
   212e8:	bne	212d0 <__flatcc_fb_gen_c_verifier@@Base+0x39a4>
   212ec:	ldrh	r3, [r4, #24]
   212f0:	sub	r3, r3, #14
   212f4:	cmp	r3, #1
   212f8:	bhi	212cc <__flatcc_fb_gen_c_verifier@@Base+0x39a0>
   212fc:	ldr	r3, [r4, #16]
   21300:	ldrh	r3, [r3, #8]
   21304:	cmp	r3, #4
   21308:	bne	212cc <__flatcc_fb_gen_c_verifier@@Base+0x39a0>
   2130c:	ldr	r3, [r4, #4]
   21310:	add	r2, r7, #2
   21314:	ldr	r3, [r3, #4]
   21318:	add	r3, r3, #6
   2131c:	add	r0, r0, r3
   21320:	b	212cc <__flatcc_fb_gen_c_verifier@@Base+0x39a0>
   21324:	cmp	r7, #0
   21328:	str	r7, [r1]
   2132c:	beq	21438 <__flatcc_fb_gen_c_verifier@@Base+0x3b0c>
   21330:	lsl	r8, r7, #4
   21334:	add	r0, r0, r8
   21338:	bl	13f18 <malloc@plt>
   2133c:	subs	r9, r0, #0
   21340:	beq	21438 <__flatcc_fb_gen_c_verifier@@Base+0x3b0c>
   21344:	movw	sl, #28840	; 0x70a8
   21348:	movt	sl, #5
   2134c:	add	r8, r9, r8
   21350:	mov	r6, r9
   21354:	mov	fp, #1
   21358:	b	2136c <__flatcc_fb_gen_c_verifier@@Base+0x3a40>
   2135c:	mov	r6, ip
   21360:	ldr	r5, [r5]
   21364:	cmp	r5, #0
   21368:	beq	21400 <__flatcc_fb_gen_c_verifier@@Base+0x3ad4>
   2136c:	ldrh	r3, [r5, #72]	; 0x48
   21370:	add	ip, r6, #16
   21374:	ands	r3, r3, #4
   21378:	bne	21360 <__flatcc_fb_gen_c_verifier@@Base+0x3a34>
   2137c:	ldr	r2, [r5, #4]
   21380:	ldrh	r0, [r5, #24]
   21384:	ldm	r2, {r1, r2}
   21388:	sub	r0, r0, #14
   2138c:	cmp	r0, #1
   21390:	stm	r6, {r1, r2, r5}
   21394:	str	r3, [r6, #12]
   21398:	bhi	2135c <__flatcc_fb_gen_c_verifier@@Base+0x3a30>
   2139c:	ldr	r3, [r5, #16]
   213a0:	ldrh	r3, [r3, #8]
   213a4:	cmp	r3, #4
   213a8:	bne	2135c <__flatcc_fb_gen_c_verifier@@Base+0x3a30>
   213ac:	add	r3, r2, #5
   213b0:	mov	r0, r8
   213b4:	str	r4, [r5, #112]	; 0x70
   213b8:	str	r8, [r6, #16]
   213bc:	add	r4, r4, #1
   213c0:	add	r6, r6, #32
   213c4:	str	r3, [r6, #-12]
   213c8:	bl	13eb8 <memcpy@plt>
   213cc:	ldr	r2, [r5, #4]
   213d0:	ldrh	r3, [sl, #4]
   213d4:	ldr	r0, [sl]
   213d8:	ldr	r1, [r2, #4]
   213dc:	add	r2, r8, r1
   213e0:	str	r0, [r8, r1]
   213e4:	add	r8, r2, #6
   213e8:	strh	r3, [r2, #4]
   213ec:	str	r5, [r6, #-8]
   213f0:	ldr	r5, [r5]
   213f4:	str	fp, [r6, #-4]
   213f8:	cmp	r5, #0
   213fc:	bne	2136c <__flatcc_fb_gen_c_verifier@@Base+0x3a40>
   21400:	movw	r3, #64476	; 0xfbdc
   21404:	movt	r3, #1
   21408:	mov	r1, r7
   2140c:	mov	r2, #16
   21410:	mov	r0, r9
   21414:	bl	13fe4 <qsort@plt>
   21418:	mov	r0, r9
   2141c:	add	sp, sp, #4
   21420:	ldrd	r4, [sp]
   21424:	ldrd	r6, [sp, #8]
   21428:	ldrd	r8, [sp, #16]
   2142c:	ldrd	sl, [sp, #24]
   21430:	add	sp, sp, #32
   21434:	pop	{pc}		; (ldr pc, [sp], #4)
   21438:	mov	r9, #0
   2143c:	b	21418 <__flatcc_fb_gen_c_verifier@@Base+0x3aec>
   21440:	mov	r9, r5
   21444:	str	r5, [r1]
   21448:	b	21418 <__flatcc_fb_gen_c_verifier@@Base+0x3aec>
   2144c:	ldrh	r2, [r1, #8]
   21450:	mov	r3, #0
   21454:	strd	r4, [sp, #-12]!
   21458:	str	lr, [sp, #8]
   2145c:	sub	sp, sp, #268	; 0x10c
   21460:	str	r3, [sp, #12]
   21464:	sub	r2, r2, #3
   21468:	str	r3, [sp, #16]
   2146c:	cmp	r2, #1
   21470:	str	r3, [sp, #20]
   21474:	str	r3, [sp, #24]
   21478:	str	r3, [sp, #28]
   2147c:	str	r3, [sp, #32]
   21480:	str	r3, [sp, #36]	; 0x24
   21484:	str	r3, [sp, #40]	; 0x28
   21488:	bhi	2170c <__flatcc_fb_gen_c_verifier@@Base+0x3de0>
   2148c:	mov	r5, r1
   21490:	mov	r4, r0
   21494:	add	r1, sp, #12
   21498:	ldr	r0, [r5, #20]
   2149c:	bl	2129c <__flatcc_fb_gen_c_verifier@@Base+0x3970>
   214a0:	cmp	r0, #0
   214a4:	str	r0, [sp, #16]
   214a8:	beq	21698 <__flatcc_fb_gen_c_verifier@@Base+0x3d6c>
   214ac:	movw	r2, #65332	; 0xff34
   214b0:	movt	r2, #1
   214b4:	str	r5, [sp, #28]
   214b8:	movw	r3, #56764	; 0xddbc
   214bc:	movt	r3, #1
   214c0:	mov	ip, #2
   214c4:	mov	r1, #0
   214c8:	add	r0, sp, #44	; 0x2c
   214cc:	strd	r2, [sp, #20]
   214d0:	mov	r2, #220	; 0xdc
   214d4:	str	ip, [sp, #32]
   214d8:	bl	13f78 <memset@plt>
   214dc:	add	r2, sp, #44	; 0x2c
   214e0:	mov	r1, r5
   214e4:	ldr	r0, [r5, #12]
   214e8:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   214ec:	add	r2, sp, #44	; 0x2c
   214f0:	mov	r0, r4
   214f4:	movw	r1, #14740	; 0x3994
   214f8:	movt	r1, #5
   214fc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21500:	ldr	r3, [r4, #220]	; 0xdc
   21504:	movw	r1, #14840	; 0x39f8
   21508:	movt	r1, #5
   2150c:	mov	r0, r4
   21510:	add	r3, r3, #2
   21514:	str	r3, [r4, #220]	; 0xdc
   21518:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2151c:	ldr	r3, [r4, #220]	; 0xdc
   21520:	cmp	r3, #0
   21524:	beq	216f0 <__flatcc_fb_gen_c_verifier@@Base+0x3dc4>
   21528:	cmp	r3, #1
   2152c:	moveq	r3, #0
   21530:	streq	r3, [r4, #220]	; 0xdc
   21534:	beq	216f0 <__flatcc_fb_gen_c_verifier@@Base+0x3dc4>
   21538:	sub	r3, r3, #2
   2153c:	movw	r1, #21192	; 0x52c8
   21540:	movt	r1, #5
   21544:	mov	r0, r4
   21548:	str	r3, [r4, #220]	; 0xdc
   2154c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21550:	ldr	r3, [r4, #220]	; 0xdc
   21554:	ldr	r2, [sp, #12]
   21558:	add	r3, r3, #1
   2155c:	cmp	r2, #0
   21560:	str	r3, [r4, #220]	; 0xdc
   21564:	beq	21640 <__flatcc_fb_gen_c_verifier@@Base+0x3d14>
   21568:	mov	r0, r4
   2156c:	movw	r1, #11660	; 0x2d8c
   21570:	movt	r1, #5
   21574:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21578:	mov	r0, r4
   2157c:	movw	r1, #11692	; 0x2dac
   21580:	movt	r1, #5
   21584:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21588:	mov	r0, r4
   2158c:	movw	r1, #11712	; 0x2dc0
   21590:	movt	r1, #5
   21594:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21598:	mov	r0, r4
   2159c:	movw	r1, #39472	; 0x9a30
   215a0:	movt	r1, #4
   215a4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   215a8:	mov	r0, r4
   215ac:	movw	r1, #10064	; 0x2750
   215b0:	movt	r1, #5
   215b4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   215b8:	ldr	r3, [sp, #12]
   215bc:	mov	ip, #0
   215c0:	add	r1, sp, #16
   215c4:	mov	r2, ip
   215c8:	mov	r0, r4
   215cc:	str	ip, [sp]
   215d0:	sub	r3, r3, #1
   215d4:	bl	1e34c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   215d8:	movw	r1, #11212	; 0x2bcc
   215dc:	movt	r1, #5
   215e0:	mov	r0, r4
   215e4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   215e8:	ldr	r3, [r4, #220]	; 0xdc
   215ec:	cmp	r3, #0
   215f0:	beq	21728 <__flatcc_fb_gen_c_verifier@@Base+0x3dfc>
   215f4:	sub	r3, r3, #1
   215f8:	mov	r0, r4
   215fc:	movw	r1, #9812	; 0x2654
   21600:	movt	r1, #5
   21604:	str	r3, [r4, #220]	; 0xdc
   21608:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2160c:	mov	r0, r4
   21610:	movw	r1, #39472	; 0x9a30
   21614:	movt	r1, #4
   21618:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2161c:	ldr	r0, [sp, #16]
   21620:	cmp	r0, #0
   21624:	beq	2162c <__flatcc_fb_gen_c_verifier@@Base+0x3d00>
   21628:	bl	13eac <free@plt>
   2162c:	mov	r0, #0
   21630:	add	sp, sp, #268	; 0x10c
   21634:	ldrd	r4, [sp]
   21638:	add	sp, sp, #8
   2163c:	pop	{pc}		; (ldr pc, [sp], #4)
   21640:	mov	r0, r4
   21644:	movw	r1, #14892	; 0x3a2c
   21648:	movt	r1, #5
   2164c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21650:	mov	r0, r4
   21654:	movw	r1, #14920	; 0x3a48
   21658:	movt	r1, #5
   2165c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21660:	movw	r1, #11628	; 0x2d6c
   21664:	movt	r1, #5
   21668:	mov	r0, r4
   2166c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21670:	ldr	r3, [r4, #220]	; 0xdc
   21674:	cmp	r3, #0
   21678:	bne	215f4 <__flatcc_fb_gen_c_verifier@@Base+0x3cc8>
   2167c:	movw	r1, #9712	; 0x25f0
   21680:	movt	r1, #5
   21684:	ldr	r3, [pc, #184]	; 21744 <__flatcc_fb_gen_c_verifier@@Base+0x3e18>
   21688:	movw	r0, #9800	; 0x2648
   2168c:	movt	r0, #5
   21690:	movw	r2, #1269	; 0x4f5
   21694:	bl	14014 <__assert_fail@plt>
   21698:	ldr	r3, [sp, #12]
   2169c:	cmp	r3, #0
   216a0:	ble	214ac <__flatcc_fb_gen_c_verifier@@Base+0x3b80>
   216a4:	movw	r1, #11464	; 0x2cc8
   216a8:	movt	r1, #5
   216ac:	movw	r3, #41128	; 0xa0a8
   216b0:	movt	r3, #6
   216b4:	movw	r2, #9712	; 0x25f0
   216b8:	movt	r2, #5
   216bc:	str	r1, [sp]
   216c0:	movw	r1, #64544	; 0xfc20
   216c4:	movt	r1, #3
   216c8:	ldr	r0, [r3]
   216cc:	movw	r3, #1249	; 0x4e1
   216d0:	bl	13f60 <fprintf@plt>
   216d4:	movw	r1, #9712	; 0x25f0
   216d8:	movt	r1, #5
   216dc:	ldr	r3, [pc, #96]	; 21744 <__flatcc_fb_gen_c_verifier@@Base+0x3e18>
   216e0:	movw	r0, #35672	; 0x8b58
   216e4:	movt	r0, #4
   216e8:	movw	r2, #1249	; 0x4e1
   216ec:	bl	14014 <__assert_fail@plt>
   216f0:	movw	r1, #9712	; 0x25f0
   216f4:	movt	r1, #5
   216f8:	ldr	r3, [pc, #68]	; 21744 <__flatcc_fb_gen_c_verifier@@Base+0x3e18>
   216fc:	movw	r0, #9800	; 0x2648
   21700:	movt	r0, #5
   21704:	movw	r2, #1263	; 0x4ef
   21708:	bl	14014 <__assert_fail@plt>
   2170c:	movw	r1, #9712	; 0x25f0
   21710:	movt	r1, #5
   21714:	ldr	r3, [pc, #40]	; 21744 <__flatcc_fb_gen_c_verifier@@Base+0x3e18>
   21718:	movw	r0, #64632	; 0xfc78
   2171c:	movt	r0, #3
   21720:	movw	r2, #1246	; 0x4de
   21724:	bl	14014 <__assert_fail@plt>
   21728:	movw	r1, #9712	; 0x25f0
   2172c:	movt	r1, #5
   21730:	ldr	r3, [pc, #12]	; 21744 <__flatcc_fb_gen_c_verifier@@Base+0x3e18>
   21734:	movw	r0, #9800	; 0x2648
   21738:	movt	r0, #5
   2173c:	movw	r2, #1278	; 0x4fe
   21740:	bl	14014 <__assert_fail@plt>
   21744:	andeq	r2, r5, ip, lsl #9
   21748:	movw	r1, #9600	; 0x2580
   2174c:	movt	r1, #5
   21750:	b	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21754:	ldrh	r3, [r1, #8]
   21758:	sub	r3, r3, #3
   2175c:	cmp	r3, #1
   21760:	bxhi	lr
   21764:	str	r4, [sp, #-8]!
   21768:	mov	r4, r0
   2176c:	ldr	r0, [r0, #4]
   21770:	ldr	r1, [r1, #16]
   21774:	str	lr, [sp, #4]
   21778:	add	r0, r0, #172	; 0xac
   2177c:	bl	27794 <ptr_set_find_item@@Base>
   21780:	cmp	r0, #0
   21784:	beq	21794 <__flatcc_fb_gen_c_verifier@@Base+0x3e68>
   21788:	ldr	r3, [r4]
   2178c:	add	r3, r3, #1
   21790:	str	r3, [r4]
   21794:	ldr	r4, [sp]
   21798:	add	sp, sp, #4
   2179c:	pop	{pc}		; (ldr pc, [sp], #4)
   217a0:	ldrh	r3, [r1, #8]
   217a4:	sub	r3, r3, #3
   217a8:	cmp	r3, #1
   217ac:	bxhi	lr
   217b0:	strd	r4, [sp, #-16]!
   217b4:	mov	r5, r0
   217b8:	mov	r4, r1
   217bc:	ldr	r0, [r0, #4]
   217c0:	ldr	r1, [r1, #16]
   217c4:	str	r6, [sp, #8]
   217c8:	str	lr, [sp, #12]
   217cc:	add	r0, r0, #172	; 0xac
   217d0:	bl	27794 <ptr_set_find_item@@Base>
   217d4:	cmp	r0, #0
   217d8:	beq	217f8 <__flatcc_fb_gen_c_verifier@@Base+0x3ecc>
   217dc:	ldr	r2, [r4, #4]
   217e0:	ldr	r3, [r5, #8]
   217e4:	ldrd	r0, [r2]
   217e8:	add	r2, r3, #16
   217ec:	strd	r0, [r3]
   217f0:	str	r4, [r3, #8]
   217f4:	str	r2, [r5, #8]
   217f8:	ldrd	r4, [sp]
   217fc:	ldr	r6, [sp, #8]
   21800:	add	sp, sp, #12
   21804:	pop	{pc}		; (ldr pc, [sp], #4)
   21808:	ldrh	r3, [r1, #8]
   2180c:	cmp	r3, #4
   21810:	bxhi	lr
   21814:	strd	r4, [sp, #-16]!
   21818:	mov	r4, r0
   2181c:	mov	r5, r1
   21820:	ldr	r0, [r0, #40]	; 0x28
   21824:	ldr	r1, [r1, #16]
   21828:	str	r6, [sp, #8]
   2182c:	str	lr, [sp, #12]
   21830:	add	r0, r0, #172	; 0xac
   21834:	bl	27794 <ptr_set_find_item@@Base>
   21838:	cmp	r0, #0
   2183c:	beq	218c8 <__flatcc_fb_gen_c_verifier@@Base+0x3f9c>
   21840:	ldr	ip, [r4]
   21844:	cmp	ip, #0
   21848:	beq	2187c <__flatcc_fb_gen_c_verifier@@Base+0x3f50>
   2184c:	ldr	r3, [r5, #12]
   21850:	ldr	r3, [r3]
   21854:	cmp	r3, #0
   21858:	beq	218f4 <__flatcc_fb_gen_c_verifier@@Base+0x3fc8>
   2185c:	mov	ip, #0
   21860:	ldr	r2, [r3, #4]
   21864:	ldr	r3, [r3]
   21868:	ldr	r2, [r2, #4]
   2186c:	cmp	r3, #0
   21870:	add	r2, r2, #1
   21874:	add	ip, ip, r2
   21878:	bne	21860 <__flatcc_fb_gen_c_verifier@@Base+0x3f34>
   2187c:	ldr	r3, [r5, #4]
   21880:	ldr	r1, [r4, #12]
   21884:	ldrh	r2, [r5, #8]
   21888:	ldr	r3, [r3, #4]
   2188c:	add	r3, r3, r1
   21890:	add	r3, r3, #1
   21894:	add	ip, r3, ip
   21898:	str	ip, [r4, #12]
   2189c:	cmp	r2, #4
   218a0:	ldrls	pc, [pc, r2, lsl #2]
   218a4:	b	218c8 <__flatcc_fb_gen_c_verifier@@Base+0x3f9c>
   218a8:	ldrdeq	r1, [r2], -r8
   218ac:	ldrdeq	r1, [r2], -r8
   218b0:	andeq	r1, r2, r8, asr #17
   218b4:			; <UNDEFINED> instruction: 0x000218bc
   218b8:			; <UNDEFINED> instruction: 0x000218bc
   218bc:	ldr	r3, [r4, #8]
   218c0:	add	r3, r3, #1
   218c4:	str	r3, [r4, #8]
   218c8:	ldrd	r4, [sp]
   218cc:	ldr	r6, [sp, #8]
   218d0:	add	sp, sp, #12
   218d4:	pop	{pc}		; (ldr pc, [sp], #4)
   218d8:	ldr	r3, [r4, #4]
   218dc:	ldr	r6, [sp, #8]
   218e0:	add	r3, r3, #1
   218e4:	str	r3, [r4, #4]
   218e8:	ldrd	r4, [sp]
   218ec:	add	sp, sp, #12
   218f0:	pop	{pc}		; (ldr pc, [sp], #4)
   218f4:	mov	ip, r3
   218f8:	b	2187c <__flatcc_fb_gen_c_verifier@@Base+0x3f50>

000218fc <__flatcc_fb_gen_c_json_parser@@Base>:
   218fc:	ldr	r3, [r0, #208]	; 0xd0
   21900:	movw	r1, #14936	; 0x3a58
   21904:	movt	r1, #5
   21908:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2190c:	mov	r4, r0
   21910:	ldr	r2, [r3, #164]	; 0xa4
   21914:	strd	r6, [sp, #8]
   21918:	strd	r8, [sp, #16]
   2191c:	strd	sl, [sp, #24]
   21920:	str	lr, [sp, #32]
   21924:	sub	sp, sp, #276	; 0x114
   21928:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2192c:	ldr	r3, [r4, #208]	; 0xd0
   21930:	mov	r0, r4
   21934:	movw	r1, #14964	; 0x3a74
   21938:	movt	r1, #5
   2193c:	ldr	r2, [r3, #164]	; 0xa4
   21940:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21944:	mov	r0, r4
   21948:	movw	r1, #39472	; 0x9a30
   2194c:	movt	r1, #4
   21950:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21954:	mov	r0, r4
   21958:	movw	r1, #14992	; 0x3a90
   2195c:	movt	r1, #5
   21960:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21964:	mov	r0, r4
   21968:	movw	r1, #39472	; 0x9a30
   2196c:	movt	r1, #4
   21970:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21974:	mov	r0, r4
   21978:	movw	r1, #15072	; 0x3ae0
   2197c:	movt	r1, #5
   21980:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21984:	mov	r0, r4
   21988:	movw	r2, #15112	; 0x3b08
   2198c:	movt	r2, #5
   21990:	movw	r1, #63596	; 0xf86c
   21994:	movt	r1, #3
   21998:	bl	15008 <__flatcc_fb_gen_c_includes@@Base>
   2199c:	ldr	r3, [r4, #212]	; 0xd4
   219a0:	ldr	r3, [r3, #140]	; 0x8c
   219a4:	cmp	r3, #0
   219a8:	bne	22ec0 <__flatcc_fb_gen_c_json_parser@@Base+0x15c4>
   219ac:	mov	r0, r4
   219b0:	movw	r1, #39472	; 0x9a30
   219b4:	movt	r1, #4
   219b8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   219bc:	ldr	r6, [r4, #208]	; 0xd0
   219c0:	add	r0, sp, #52	; 0x34
   219c4:	mov	r2, #220	; 0xdc
   219c8:	mov	r1, #0
   219cc:	ldr	r5, [r6, #52]	; 0x34
   219d0:	bl	13f78 <memset@plt>
   219d4:	cmp	r5, #0
   219d8:	beq	219e8 <__flatcc_fb_gen_c_json_parser@@Base+0xec>
   219dc:	ldrh	r3, [r5, #8]
   219e0:	cmp	r3, #1
   219e4:	bls	22f38 <__flatcc_fb_gen_c_json_parser@@Base+0x163c>
   219e8:	ldr	r5, [r6, #40]	; 0x28
   219ec:	cmp	r5, #0
   219f0:	beq	21abc <__flatcc_fb_gen_c_json_parser@@Base+0x1c0>
   219f4:	movw	r7, #14740	; 0x3994
   219f8:	movt	r7, #5
   219fc:	movw	r6, #10368	; 0x2880
   21a00:	movt	r6, #5
   21a04:	movw	r8, #16100	; 0x3ee4
   21a08:	movt	r8, #5
   21a0c:	ldrh	r3, [r5, #8]
   21a10:	cmp	r3, #4
   21a14:	ldrls	pc, [pc, r3, lsl #2]
   21a18:	b	21aac <__flatcc_fb_gen_c_json_parser@@Base+0x1b0>
   21a1c:	andeq	r1, r2, r4, asr #24
   21a20:	muleq	r2, r4, fp
   21a24:	andeq	r1, r2, ip, lsr #21
   21a28:	ldrdeq	r1, [r2], -r0
   21a2c:	andeq	r1, r2, r0, lsr sl
   21a30:	add	r2, sp, #52	; 0x34
   21a34:	mov	r1, r5
   21a38:	ldr	r0, [r5, #12]
   21a3c:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   21a40:	add	r2, sp, #52	; 0x34
   21a44:	mov	r0, r4
   21a48:	movw	r1, #15644	; 0x3d1c
   21a4c:	movt	r1, #5
   21a50:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21a54:	add	r2, sp, #52	; 0x34
   21a58:	mov	r0, r4
   21a5c:	movw	r1, #15788	; 0x3dac
   21a60:	movt	r1, #5
   21a64:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21a68:	add	r2, sp, #52	; 0x34
   21a6c:	mov	r1, r7
   21a70:	mov	r0, r4
   21a74:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21a78:	ldr	r3, [r4, #220]	; 0xdc
   21a7c:	mov	r1, r6
   21a80:	mov	r0, r4
   21a84:	add	r3, r3, #2
   21a88:	str	r3, [r4, #220]	; 0xdc
   21a8c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21a90:	ldr	r3, [r4, #220]	; 0xdc
   21a94:	cmp	r3, #0
   21a98:	beq	23138 <__flatcc_fb_gen_c_json_parser@@Base+0x183c>
   21a9c:	cmp	r3, #1
   21aa0:	beq	23130 <__flatcc_fb_gen_c_json_parser@@Base+0x1834>
   21aa4:	sub	r3, r3, #2
   21aa8:	str	r3, [r4, #220]	; 0xdc
   21aac:	ldr	r5, [r5]
   21ab0:	cmp	r5, #0
   21ab4:	bne	21a0c <__flatcc_fb_gen_c_json_parser@@Base+0x110>
   21ab8:	ldr	r6, [r4, #208]	; 0xd0
   21abc:	mov	r2, r4
   21ac0:	movw	r1, #62564	; 0xf464
   21ac4:	movt	r1, #1
   21ac8:	ldr	r0, [r6, #60]	; 0x3c
   21acc:	bl	29cf8 <fb_scope_table_visit@@Base>
   21ad0:	ldr	r3, [r4, #208]	; 0xd0
   21ad4:	mov	r0, r4
   21ad8:	movw	r1, #16232	; 0x3f68
   21adc:	movt	r1, #5
   21ae0:	ldr	r2, [r3, #160]	; 0xa0
   21ae4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21ae8:	ldr	r3, [r4, #220]	; 0xdc
   21aec:	movw	r1, #10368	; 0x2880
   21af0:	movt	r1, #5
   21af4:	mov	r0, r4
   21af8:	add	r3, r3, #2
   21afc:	str	r3, [r4, #220]	; 0xdc
   21b00:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21b04:	ldr	r3, [r4, #220]	; 0xdc
   21b08:	cmp	r3, #0
   21b0c:	beq	23188 <__flatcc_fb_gen_c_json_parser@@Base+0x188c>
   21b10:	cmp	r3, #1
   21b14:	moveq	r3, #0
   21b18:	streq	r3, [r4, #220]	; 0xdc
   21b1c:	beq	23188 <__flatcc_fb_gen_c_json_parser@@Base+0x188c>
   21b20:	sub	r3, r3, #2
   21b24:	movw	r1, #39472	; 0x9a30
   21b28:	movt	r1, #4
   21b2c:	mov	r0, r4
   21b30:	str	r3, [r4, #220]	; 0xdc
   21b34:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21b38:	ldr	r3, [r4, #208]	; 0xd0
   21b3c:	ldr	r5, [r3, #40]	; 0x28
   21b40:	cmp	r5, #0
   21b44:	addeq	r6, sp, #24
   21b48:	beq	21c9c <__flatcc_fb_gen_c_json_parser@@Base+0x3a0>
   21b4c:	movw	r3, #17268	; 0x4374
   21b50:	movt	r3, #5
   21b54:	movw	r7, #21192	; 0x52c8
   21b58:	movt	r7, #5
   21b5c:	movw	r9, #16468	; 0x4054
   21b60:	movt	r9, #5
   21b64:	add	r6, sp, #24
   21b68:	str	r9, [sp, #8]
   21b6c:	str	r3, [sp, #12]
   21b70:	ldrh	r3, [r5, #8]
   21b74:	cmp	r3, #4
   21b78:	ldrls	pc, [pc, r3, lsl #2]
   21b7c:	b	21c8c <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   21b80:	andeq	r2, r2, r4, ror #12
   21b84:	andeq	r2, r2, r8, asr r2
   21b88:	andeq	r1, r2, ip, lsl #25
   21b8c:	andeq	r2, r2, r4, asr r6
   21b90:	andeq	r1, r2, r8, ror #24
   21b94:	add	r2, sp, #52	; 0x34
   21b98:	mov	r1, r5
   21b9c:	ldr	r0, [r5, #12]
   21ba0:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   21ba4:	add	r2, sp, #52	; 0x34
   21ba8:	mov	r0, r4
   21bac:	movw	r1, #15840	; 0x3de0
   21bb0:	movt	r1, #5
   21bb4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21bb8:	add	r2, sp, #52	; 0x34
   21bbc:	movw	r1, #15968	; 0x3e60
   21bc0:	movt	r1, #5
   21bc4:	mov	r0, r4
   21bc8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21bcc:	b	21aac <__flatcc_fb_gen_c_json_parser@@Base+0x1b0>
   21bd0:	add	r2, sp, #52	; 0x34
   21bd4:	mov	r1, r5
   21bd8:	ldr	r0, [r5, #12]
   21bdc:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   21be0:	add	r2, sp, #52	; 0x34
   21be4:	mov	r1, r7
   21be8:	mov	r0, r4
   21bec:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21bf0:	ldr	r3, [r4, #220]	; 0xdc
   21bf4:	add	r2, sp, #52	; 0x34
   21bf8:	mov	r1, r6
   21bfc:	mov	r0, r4
   21c00:	add	r3, r3, #2
   21c04:	str	r3, [r4, #220]	; 0xdc
   21c08:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21c0c:	ldr	r3, [r4, #220]	; 0xdc
   21c10:	cmp	r3, #0
   21c14:	beq	21c28 <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   21c18:	cmp	r3, #1
   21c1c:	bne	21aa4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a8>
   21c20:	mov	r3, #0
   21c24:	str	r3, [r4, #220]	; 0xdc
   21c28:	movw	r1, #9712	; 0x25f0
   21c2c:	movt	r1, #5
   21c30:	ldr	r3, [pc, #4060]	; 22c14 <__flatcc_fb_gen_c_json_parser@@Base+0x1318>
   21c34:	movw	r0, #9800	; 0x2648
   21c38:	movt	r0, #5
   21c3c:	movw	r2, #1747	; 0x6d3
   21c40:	bl	14014 <__assert_fail@plt>
   21c44:	add	r2, sp, #52	; 0x34
   21c48:	mov	r1, r5
   21c4c:	ldr	r0, [r5, #12]
   21c50:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   21c54:	add	r2, sp, #52	; 0x34
   21c58:	mov	r1, r8
   21c5c:	mov	r0, r4
   21c60:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21c64:	b	21aac <__flatcc_fb_gen_c_json_parser@@Base+0x1b0>
   21c68:	mov	r1, r5
   21c6c:	mov	r0, r4
   21c70:	bl	1f4bc <__flatcc_fb_gen_c_verifier@@Base+0x1b90>
   21c74:	mov	r1, r5
   21c78:	mov	r0, r4
   21c7c:	bl	1f9f4 <__flatcc_fb_gen_c_verifier@@Base+0x20c8>
   21c80:	mov	r1, r5
   21c84:	mov	r0, r4
   21c88:	bl	2144c <__flatcc_fb_gen_c_verifier@@Base+0x3b20>
   21c8c:	ldr	r5, [r5]
   21c90:	cmp	r5, #0
   21c94:	bne	21b70 <__flatcc_fb_gen_c_json_parser@@Base+0x274>
   21c98:	ldr	r3, [r4, #208]	; 0xd0
   21c9c:	mov	r2, r4
   21ca0:	movw	r1, #64536	; 0xfc18
   21ca4:	movt	r1, #1
   21ca8:	ldr	r0, [r3, #60]	; 0x3c
   21cac:	bl	29cf8 <fb_scope_table_visit@@Base>
   21cb0:	ldr	r0, [r4, #208]	; 0xd0
   21cb4:	mov	r3, #0
   21cb8:	mov	ip, #1
   21cbc:	add	r2, sp, #52	; 0x34
   21cc0:	movw	r1, #64452	; 0xfbc4
   21cc4:	movt	r1, #1
   21cc8:	str	r3, [sp, #24]
   21ccc:	str	r3, [r6, #4]
   21cd0:	str	r3, [r6, #8]
   21cd4:	str	r3, [r6, #12]
   21cd8:	str	r3, [r6, #16]
   21cdc:	str	r3, [r6, #20]
   21ce0:	str	r3, [r6, #24]
   21ce4:	ldr	r9, [r0, #60]	; 0x3c
   21ce8:	str	ip, [sp, #52]	; 0x34
   21cec:	str	r0, [sp, #92]	; 0x5c
   21cf0:	str	r3, [sp, #56]	; 0x38
   21cf4:	str	r3, [sp, #60]	; 0x3c
   21cf8:	mov	r0, r9
   21cfc:	str	r3, [sp, #64]	; 0x40
   21d00:	str	r3, [sp, #68]	; 0x44
   21d04:	str	r3, [sp, #72]	; 0x48
   21d08:	str	r3, [sp, #76]	; 0x4c
   21d0c:	str	r3, [sp, #80]	; 0x50
   21d10:	str	r3, [sp, #84]	; 0x54
   21d14:	str	r3, [sp, #88]	; 0x58
   21d18:	bl	29cf8 <fb_scope_table_visit@@Base>
   21d1c:	ldr	r7, [sp, #56]	; 0x38
   21d20:	mov	r1, #8
   21d24:	mov	r0, r7
   21d28:	bl	13e7c <calloc@plt>
   21d2c:	ldr	r3, [sp, #60]	; 0x3c
   21d30:	mov	fp, r0
   21d34:	mov	r1, #8
   21d38:	mov	r0, r3
   21d3c:	str	r3, [sp, #8]
   21d40:	str	fp, [sp, #68]	; 0x44
   21d44:	bl	13e7c <calloc@plt>
   21d48:	ldr	r8, [sp, #64]	; 0x40
   21d4c:	mov	sl, r0
   21d50:	str	sl, [sp, #72]	; 0x48
   21d54:	mov	r0, r8
   21d58:	bl	13f18 <malloc@plt>
   21d5c:	cmp	r7, #0
   21d60:	mov	r3, r0
   21d64:	str	r0, [sp, #76]	; 0x4c
   21d68:	movle	r5, #0
   21d6c:	movgt	r5, #1
   21d70:	str	fp, [sp, #80]	; 0x50
   21d74:	cmp	fp, #0
   21d78:	str	sl, [sp, #84]	; 0x54
   21d7c:	movne	r5, #0
   21d80:	str	r0, [sp, #88]	; 0x58
   21d84:	cmp	r5, #0
   21d88:	bne	23108 <__flatcc_fb_gen_c_json_parser@@Base+0x180c>
   21d8c:	ldr	r7, [sp, #8]
   21d90:	cmp	r7, #0
   21d94:	movle	r7, #0
   21d98:	movgt	r7, #1
   21d9c:	cmp	sl, #0
   21da0:	movne	r7, #0
   21da4:	cmp	r7, #0
   21da8:	bne	23154 <__flatcc_fb_gen_c_json_parser@@Base+0x1858>
   21dac:	adds	r8, r8, #0
   21db0:	movne	r8, #1
   21db4:	cmp	r0, #0
   21db8:	movne	r8, #0
   21dbc:	cmp	r8, #0
   21dc0:	bne	230f0 <__flatcc_fb_gen_c_json_parser@@Base+0x17f4>
   21dc4:	mov	r0, r9
   21dc8:	add	r2, sp, #52	; 0x34
   21dcc:	movw	r1, #64428	; 0xfbac
   21dd0:	movt	r1, #1
   21dd4:	bl	29cf8 <fb_scope_table_visit@@Base>
   21dd8:	ldr	r5, [sp, #56]	; 0x38
   21ddc:	movw	r3, #65320	; 0xff28
   21de0:	movt	r3, #1
   21de4:	mov	r2, #8
   21de8:	ldr	r7, [sp, #68]	; 0x44
   21dec:	mov	r1, r5
   21df0:	mov	r0, r7
   21df4:	bl	13fe4 <qsort@plt>
   21df8:	cmp	r5, #0
   21dfc:	movgt	r0, r8
   21e00:	ble	21e18 <__flatcc_fb_gen_c_json_parser@@Base+0x51c>
   21e04:	ldr	r3, [r7, r0, lsl #3]
   21e08:	str	r0, [r3, #124]	; 0x7c
   21e0c:	add	r0, r0, #1
   21e10:	cmp	r5, r0
   21e14:	bne	21e04 <__flatcc_fb_gen_c_json_parser@@Base+0x508>
   21e18:	ldr	r5, [sp, #60]	; 0x3c
   21e1c:	movw	r3, #65320	; 0xff28
   21e20:	movt	r3, #1
   21e24:	mov	r2, #8
   21e28:	ldr	r7, [sp, #72]	; 0x48
   21e2c:	mov	r1, r5
   21e30:	mov	r0, r7
   21e34:	bl	13fe4 <qsort@plt>
   21e38:	cmp	r5, #0
   21e3c:	movgt	r3, #0
   21e40:	ble	21e58 <__flatcc_fb_gen_c_json_parser@@Base+0x55c>
   21e44:	ldr	r2, [r7, r3, lsl #3]
   21e48:	str	r3, [r2, #124]	; 0x7c
   21e4c:	add	r3, r3, #1
   21e50:	cmp	r5, r3
   21e54:	bne	21e44 <__flatcc_fb_gen_c_json_parser@@Base+0x548>
   21e58:	ldr	r8, [sp, #60]	; 0x3c
   21e5c:	cmp	r8, #0
   21e60:	beq	22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x15fc>
   21e64:	lsl	r0, r8, #4
   21e68:	bl	13f18 <malloc@plt>
   21e6c:	subs	r9, r0, #0
   21e70:	beq	23038 <__flatcc_fb_gen_c_json_parser@@Base+0x173c>
   21e74:	cmp	r8, #0
   21e78:	ble	21ecc <__flatcc_fb_gen_c_json_parser@@Base+0x5d0>
   21e7c:	ldr	sl, [sp, #72]	; 0x48
   21e80:	mov	r7, #0
   21e84:	mov	r5, r9
   21e88:	mov	fp, r7
   21e8c:	add	r3, sl, #4
   21e90:	str	r3, [sp, #8]
   21e94:	mov	r3, r8
   21e98:	mov	r8, sl
   21e9c:	mov	sl, r3
   21ea0:	ldr	r3, [sp, #8]
   21ea4:	ldr	r0, [r3, r7, lsl #3]
   21ea8:	str	r0, [r5]
   21eac:	bl	13f54 <strlen@plt>
   21eb0:	ldr	r3, [r8, r7, lsl #3]
   21eb4:	add	r7, r7, #1
   21eb8:	cmp	sl, r7
   21ebc:	stmib	r5, {r0, r3, fp}
   21ec0:	add	r5, r5, #16
   21ec4:	bne	21ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x5a4>
   21ec8:	mov	r8, sl
   21ecc:	mov	r1, r8
   21ed0:	movw	r3, #64476	; 0xfbdc
   21ed4:	movt	r3, #1
   21ed8:	mov	r2, #16
   21edc:	mov	r0, r9
   21ee0:	bl	13fe4 <qsort@plt>
   21ee4:	ldr	r8, [sp, #60]	; 0x3c
   21ee8:	str	r9, [sp, #24]
   21eec:	ldr	lr, [r4, #208]	; 0xd0
   21ef0:	movw	r2, #164	; 0xa4
   21ef4:	movt	r2, #2
   21ef8:	movw	r3, #5960	; 0x1748
   21efc:	movt	r3, #2
   21f00:	mov	ip, #4
   21f04:	mov	r5, #0
   21f08:	mov	r0, r4
   21f0c:	movw	r1, #16232	; 0x3f68
   21f10:	movt	r1, #5
   21f14:	strd	r2, [sp, #28]
   21f18:	ldr	r2, [lr, #160]	; 0xa0
   21f1c:	str	r5, [sp, #36]	; 0x24
   21f20:	str	ip, [sp, #40]	; 0x28
   21f24:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21f28:	ldr	r3, [r4, #220]	; 0xdc
   21f2c:	movw	r1, #11524	; 0x2d04
   21f30:	movt	r1, #5
   21f34:	mov	r0, r4
   21f38:	add	r3, r3, #2
   21f3c:	str	r3, [r4, #220]	; 0xdc
   21f40:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21f44:	ldr	r3, [r4, #220]	; 0xdc
   21f48:	cmp	r3, r5
   21f4c:	beq	2316c <__flatcc_fb_gen_c_json_parser@@Base+0x1870>
   21f50:	cmp	r3, #1
   21f54:	streq	r5, [r4, #220]	; 0xdc
   21f58:	beq	2316c <__flatcc_fb_gen_c_json_parser@@Base+0x1870>
   21f5c:	sub	r3, r3, #2
   21f60:	movw	r1, #21192	; 0x52c8
   21f64:	movt	r1, #5
   21f68:	mov	r0, r4
   21f6c:	str	r3, [r4, #220]	; 0xdc
   21f70:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21f74:	ldr	r3, [r4, #220]	; 0xdc
   21f78:	cmp	r8, #0
   21f7c:	add	r3, r3, #1
   21f80:	str	r3, [r4, #220]	; 0xdc
   21f84:	beq	22c34 <__flatcc_fb_gen_c_json_parser@@Base+0x1338>
   21f88:	mov	r0, r4
   21f8c:	movw	r1, #11660	; 0x2d8c
   21f90:	movt	r1, #5
   21f94:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21f98:	mov	r0, r4
   21f9c:	movw	r1, #11692	; 0x2dac
   21fa0:	movt	r1, #5
   21fa4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21fa8:	mov	r0, r4
   21fac:	movw	r1, #11712	; 0x2dc0
   21fb0:	movt	r1, #5
   21fb4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21fb8:	mov	r0, r4
   21fbc:	movw	r1, #39472	; 0x9a30
   21fc0:	movt	r1, #4
   21fc4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21fc8:	mov	r0, r4
   21fcc:	movw	r1, #10064	; 0x2750
   21fd0:	movt	r1, #5
   21fd4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21fd8:	sub	r3, r8, #1
   21fdc:	mov	r2, r5
   21fe0:	str	r5, [sp]
   21fe4:	mov	r1, r6
   21fe8:	mov	r0, r4
   21fec:	bl	1e34c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   21ff0:	movw	r1, #11212	; 0x2bcc
   21ff4:	movt	r1, #5
   21ff8:	mov	r0, r4
   21ffc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22000:	ldr	r3, [r4, #220]	; 0xdc
   22004:	cmp	r3, #0
   22008:	beq	232f4 <__flatcc_fb_gen_c_json_parser@@Base+0x19f8>
   2200c:	sub	r3, r3, #1
   22010:	mov	r0, r4
   22014:	movw	r1, #9812	; 0x2654
   22018:	movt	r1, #5
   2201c:	str	r3, [r4, #220]	; 0xdc
   22020:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22024:	mov	r0, r4
   22028:	movw	r1, #39472	; 0x9a30
   2202c:	movt	r1, #4
   22030:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22034:	ldr	r0, [sp, #24]
   22038:	cmp	r0, #0
   2203c:	beq	22044 <__flatcc_fb_gen_c_json_parser@@Base+0x748>
   22040:	bl	13eac <free@plt>
   22044:	ldr	r0, [sp, #68]	; 0x44
   22048:	cmp	r0, #0
   2204c:	beq	22054 <__flatcc_fb_gen_c_json_parser@@Base+0x758>
   22050:	bl	13eac <free@plt>
   22054:	ldr	r0, [sp, #72]	; 0x48
   22058:	cmp	r0, #0
   2205c:	beq	22064 <__flatcc_fb_gen_c_json_parser@@Base+0x768>
   22060:	bl	13eac <free@plt>
   22064:	ldr	r0, [sp, #76]	; 0x4c
   22068:	cmp	r0, #0
   2206c:	beq	22074 <__flatcc_fb_gen_c_json_parser@@Base+0x778>
   22070:	bl	13eac <free@plt>
   22074:	ldr	r3, [r4, #208]	; 0xd0
   22078:	ldr	r5, [r3, #52]	; 0x34
   2207c:	cmp	r5, #0
   22080:	beq	22e44 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   22084:	ldrh	r6, [r5, #8]
   22088:	cmp	r6, #0
   2208c:	beq	22c7c <__flatcc_fb_gen_c_json_parser@@Base+0x1380>
   22090:	cmp	r6, #1
   22094:	bne	22e44 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   22098:	mov	r2, #220	; 0xdc
   2209c:	mov	r1, #0
   220a0:	add	r0, sp, #52	; 0x34
   220a4:	bl	13f78 <memset@plt>
   220a8:	add	r2, sp, #52	; 0x34
   220ac:	mov	r1, r5
   220b0:	ldr	r0, [r5, #12]
   220b4:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   220b8:	ldr	r3, [r4, #208]	; 0xd0
   220bc:	mov	r0, r4
   220c0:	movw	r1, #15524	; 0x3ca4
   220c4:	movt	r1, #5
   220c8:	ldr	r2, [r3, #160]	; 0xa0
   220cc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   220d0:	ldr	r3, [r4, #220]	; 0xdc
   220d4:	movw	r1, #18232	; 0x4738
   220d8:	movt	r1, #5
   220dc:	mov	r0, r4
   220e0:	add	r3, r3, #2
   220e4:	str	r3, [r4, #220]	; 0xdc
   220e8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   220ec:	ldr	r3, [r4, #220]	; 0xdc
   220f0:	cmp	r3, #0
   220f4:	beq	23310 <__flatcc_fb_gen_c_json_parser@@Base+0x1a14>
   220f8:	cmp	r3, #1
   220fc:	moveq	r3, #0
   22100:	streq	r3, [r4, #220]	; 0xdc
   22104:	beq	23310 <__flatcc_fb_gen_c_json_parser@@Base+0x1a14>
   22108:	sub	r3, r3, #2
   2210c:	mov	r0, r4
   22110:	movw	r1, #21192	; 0x52c8
   22114:	movt	r1, #5
   22118:	str	r3, [r4, #220]	; 0xdc
   2211c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22120:	ldr	r3, [r4, #220]	; 0xdc
   22124:	mov	r0, r4
   22128:	movw	r1, #18720	; 0x4920
   2212c:	movt	r1, #5
   22130:	add	r3, r3, #1
   22134:	str	r3, [r4, #220]	; 0xdc
   22138:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2213c:	mov	r0, r4
   22140:	movw	r1, #18308	; 0x4784
   22144:	movt	r1, #5
   22148:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2214c:	mov	r0, r4
   22150:	movw	r1, #39472	; 0x9a30
   22154:	movt	r1, #4
   22158:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2215c:	mov	r0, r4
   22160:	movw	r1, #18748	; 0x493c
   22164:	movt	r1, #5
   22168:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2216c:	movw	r1, #18364	; 0x47bc
   22170:	movt	r1, #5
   22174:	mov	r0, r4
   22178:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2217c:	ldr	r2, [r4, #208]	; 0xd0
   22180:	ldrh	r3, [r2, #16]
   22184:	cmp	r3, #2
   22188:	beq	22f00 <__flatcc_fb_gen_c_json_parser@@Base+0x1604>
   2218c:	movw	r1, #18488	; 0x4838
   22190:	movt	r1, #5
   22194:	mov	r0, r4
   22198:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2219c:	add	r2, sp, #52	; 0x34
   221a0:	mov	r0, r4
   221a4:	movw	r1, #18776	; 0x4958
   221a8:	movt	r1, #5
   221ac:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   221b0:	mov	r0, r4
   221b4:	movw	r1, #18596	; 0x48a4
   221b8:	movt	r1, #5
   221bc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   221c0:	ldr	r3, [r4, #220]	; 0xdc
   221c4:	movw	r1, #18616	; 0x48b8
   221c8:	movt	r1, #5
   221cc:	mov	r0, r4
   221d0:	add	r3, r3, #1
   221d4:	str	r3, [r4, #220]	; 0xdc
   221d8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   221dc:	ldr	r3, [r4, #220]	; 0xdc
   221e0:	cmp	r3, #0
   221e4:	beq	23394 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   221e8:	sub	r3, r3, #1
   221ec:	mov	r0, r4
   221f0:	movw	r1, #9812	; 0x2654
   221f4:	movt	r1, #5
   221f8:	str	r3, [r4, #220]	; 0xdc
   221fc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22200:	mov	r0, r4
   22204:	movw	r1, #18636	; 0x48cc
   22208:	movt	r1, #5
   2220c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22210:	mov	r0, r4
   22214:	movw	r1, #18688	; 0x4900
   22218:	movt	r1, #5
   2221c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22220:	movw	r1, #18708	; 0x4914
   22224:	movt	r1, #5
   22228:	mov	r0, r4
   2222c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22230:	ldr	r3, [r4, #220]	; 0xdc
   22234:	cmp	r3, #0
   22238:	bne	22e1c <__flatcc_fb_gen_c_json_parser@@Base+0x1520>
   2223c:	movw	r1, #9712	; 0x25f0
   22240:	movt	r1, #5
   22244:	ldr	r3, [pc, #2524]	; 22c28 <__flatcc_fb_gen_c_json_parser@@Base+0x132c>
   22248:	movw	r0, #9800	; 0x2648
   2224c:	movt	r0, #5
   22250:	movw	r2, #1665	; 0x681
   22254:	bl	14014 <__assert_fail@plt>
   22258:	mov	r3, #0
   2225c:	str	r3, [r6]
   22260:	str	r3, [r6, #4]
   22264:	str	r3, [r6, #8]
   22268:	str	r3, [r6, #12]
   2226c:	str	r3, [r6, #16]
   22270:	str	r3, [r6, #20]
   22274:	str	r3, [r6, #24]
   22278:	ldrh	r3, [r5, #8]
   2227c:	cmp	r3, #1
   22280:	bne	232a0 <__flatcc_fb_gen_c_json_parser@@Base+0x19a4>
   22284:	add	r1, sp, #20
   22288:	ldr	r0, [r5, #20]
   2228c:	bl	2129c <__flatcc_fb_gen_c_verifier@@Base+0x3970>
   22290:	cmp	r0, #0
   22294:	str	r0, [sp, #24]
   22298:	beq	22b58 <__flatcc_fb_gen_c_json_parser@@Base+0x125c>
   2229c:	movw	r1, #4284	; 0x10bc
   222a0:	movt	r1, #2
   222a4:	mov	ip, #1
   222a8:	movw	r3, #56752	; 0xddb0
   222ac:	movt	r3, #1
   222b0:	mov	r2, #220	; 0xdc
   222b4:	str	r1, [sp, #28]
   222b8:	add	r0, sp, #52	; 0x34
   222bc:	mov	r1, #0
   222c0:	str	r3, [sp, #32]
   222c4:	str	r5, [sp, #36]	; 0x24
   222c8:	str	ip, [sp, #40]	; 0x28
   222cc:	bl	13f78 <memset@plt>
   222d0:	add	r2, sp, #52	; 0x34
   222d4:	mov	r1, r5
   222d8:	ldr	r0, [r5, #12]
   222dc:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   222e0:	add	r2, sp, #52	; 0x34
   222e4:	mov	r0, r4
   222e8:	movw	r1, #16340	; 0x3fd4
   222ec:	movt	r1, #5
   222f0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   222f4:	mov	r1, r7
   222f8:	mov	r0, r4
   222fc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22300:	ldr	r3, [r4, #220]	; 0xdc
   22304:	mov	r0, r4
   22308:	ldr	r1, [sp, #8]
   2230c:	add	r3, r3, #1
   22310:	str	r3, [r4, #220]	; 0xdc
   22314:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22318:	ldr	r3, [sp, #20]
   2231c:	cmp	r3, #0
   22320:	ble	22364 <__flatcc_fb_gen_c_json_parser@@Base+0xa68>
   22324:	mov	r0, r4
   22328:	movw	r1, #16480	; 0x4060
   2232c:	movt	r1, #5
   22330:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22334:	mov	r0, r4
   22338:	movw	r1, #16508	; 0x407c
   2233c:	movt	r1, #5
   22340:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22344:	mov	r0, r4
   22348:	movw	r1, #11692	; 0x2dac
   2234c:	movt	r1, #5
   22350:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22354:	movw	r1, #11712	; 0x2dc0
   22358:	movt	r1, #5
   2235c:	mov	r0, r4
   22360:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22364:	mov	r0, r4
   22368:	movw	r1, #39472	; 0x9a30
   2236c:	movt	r1, #4
   22370:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22374:	mov	r0, r4
   22378:	movw	r1, #16520	; 0x4088
   2237c:	movt	r1, #5
   22380:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22384:	movw	r1, #12420	; 0x3084
   22388:	movt	r1, #5
   2238c:	mov	r0, r4
   22390:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22394:	ldr	r3, [r4, #220]	; 0xdc
   22398:	ldr	r2, [sp, #20]
   2239c:	add	r3, r3, #1
   223a0:	cmp	r2, #0
   223a4:	str	r3, [r4, #220]	; 0xdc
   223a8:	bne	22b14 <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   223ac:	mov	r0, r4
   223b0:	movw	r1, #16584	; 0x40c8
   223b4:	movt	r1, #5
   223b8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   223bc:	movw	r1, #9540	; 0x2544
   223c0:	movt	r1, #5
   223c4:	mov	r0, r4
   223c8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   223cc:	movw	r1, #16660	; 0x4114
   223d0:	movt	r1, #5
   223d4:	mov	r0, r4
   223d8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   223dc:	ldr	r3, [r4, #220]	; 0xdc
   223e0:	cmp	r3, #0
   223e4:	beq	23284 <__flatcc_fb_gen_c_json_parser@@Base+0x1988>
   223e8:	sub	r3, r3, #1
   223ec:	mov	r0, r4
   223f0:	movw	r1, #9812	; 0x2654
   223f4:	movt	r1, #5
   223f8:	str	r3, [r4, #220]	; 0xdc
   223fc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22400:	movw	r1, #11212	; 0x2bcc
   22404:	movt	r1, #5
   22408:	mov	r0, r4
   2240c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22410:	ldr	r3, [sp, #20]
   22414:	cmp	r3, #0
   22418:	ble	22454 <__flatcc_fb_gen_c_json_parser@@Base+0xb58>
   2241c:	ldr	r3, [r4, #220]	; 0xdc
   22420:	mov	r2, #0
   22424:	mov	r0, r4
   22428:	movw	r1, #16720	; 0x4150
   2242c:	movt	r1, #5
   22430:	str	r2, [r4, #220]	; 0xdc
   22434:	str	r3, [r4, #228]	; 0xe4
   22438:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2243c:	ldr	r3, [r4, #228]	; 0xe4
   22440:	movw	r1, #11240	; 0x2be8
   22444:	movt	r1, #5
   22448:	mov	r0, r4
   2244c:	str	r3, [r4, #220]	; 0xdc
   22450:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22454:	ldr	r3, [r4, #220]	; 0xdc
   22458:	cmp	r3, #0
   2245c:	beq	231f8 <__flatcc_fb_gen_c_json_parser@@Base+0x18fc>
   22460:	sub	r3, r3, #1
   22464:	mov	r0, r4
   22468:	movw	r1, #9812	; 0x2654
   2246c:	movt	r1, #5
   22470:	str	r3, [r4, #220]	; 0xdc
   22474:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22478:	mov	r0, r4
   2247c:	movw	r1, #39472	; 0x9a30
   22480:	movt	r1, #4
   22484:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22488:	ldr	r0, [sp, #24]
   2248c:	cmp	r0, #0
   22490:	beq	22498 <__flatcc_fb_gen_c_json_parser@@Base+0xb9c>
   22494:	bl	13eac <free@plt>
   22498:	ldrh	r3, [r5, #8]
   2249c:	cmp	r3, #1
   224a0:	bne	231dc <__flatcc_fb_gen_c_json_parser@@Base+0x18e0>
   224a4:	mov	r2, #220	; 0xdc
   224a8:	mov	r1, #0
   224ac:	add	r0, sp, #52	; 0x34
   224b0:	bl	13f78 <memset@plt>
   224b4:	add	r2, sp, #52	; 0x34
   224b8:	mov	r1, r5
   224bc:	ldr	r0, [r5, #12]
   224c0:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   224c4:	add	r2, sp, #52	; 0x34
   224c8:	mov	r0, r4
   224cc:	movw	r1, #16728	; 0x4158
   224d0:	movt	r1, #5
   224d4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   224d8:	mov	r1, r7
   224dc:	mov	r0, r4
   224e0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   224e4:	ldr	r3, [r4, #220]	; 0xdc
   224e8:	mov	r0, r4
   224ec:	movw	r1, #16508	; 0x407c
   224f0:	movt	r1, #5
   224f4:	add	r3, r3, #1
   224f8:	str	r3, [r4, #220]	; 0xdc
   224fc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22500:	mov	r0, r4
   22504:	movw	r1, #39472	; 0x9a30
   22508:	movt	r1, #4
   2250c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22510:	mov	r0, r4
   22514:	movw	r1, #10564	; 0x2944
   22518:	movt	r1, #5
   2251c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22520:	ldrh	ip, [r5, #104]	; 0x68
   22524:	mov	r0, r4
   22528:	movw	r1, #16860	; 0x41dc
   2252c:	movt	r1, #5
   22530:	ldrd	r2, [r5, #112]	; 0x70
   22534:	str	ip, [sp]
   22538:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2253c:	add	r2, sp, #52	; 0x34
   22540:	mov	r0, r4
   22544:	movw	r1, #12804	; 0x3204
   22548:	movt	r1, #5
   2254c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22550:	mov	r0, r4
   22554:	movw	r1, #16936	; 0x4228
   22558:	movt	r1, #5
   2255c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22560:	mov	r0, r4
   22564:	movw	r1, #11212	; 0x2bcc
   22568:	movt	r1, #5
   2256c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22570:	ldr	r3, [r4, #220]	; 0xdc
   22574:	mov	r2, #0
   22578:	mov	r0, r4
   2257c:	movw	r1, #16720	; 0x4150
   22580:	movt	r1, #5
   22584:	str	r2, [r4, #220]	; 0xdc
   22588:	str	r3, [r4, #228]	; 0xe4
   2258c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22590:	ldr	r3, [r4, #228]	; 0xe4
   22594:	movw	r1, #11240	; 0x2be8
   22598:	movt	r1, #5
   2259c:	mov	r0, r4
   225a0:	str	r3, [r4, #220]	; 0xdc
   225a4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   225a8:	ldr	r3, [r4, #220]	; 0xdc
   225ac:	cmp	r3, #0
   225b0:	beq	23230 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   225b4:	sub	r3, r3, #1
   225b8:	mov	r0, r4
   225bc:	movw	r1, #9812	; 0x2654
   225c0:	movt	r1, #5
   225c4:	str	r3, [r4, #220]	; 0xdc
   225c8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   225cc:	mov	r0, r4
   225d0:	movw	r1, #39472	; 0x9a30
   225d4:	movt	r1, #4
   225d8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   225dc:	add	r2, sp, #52	; 0x34
   225e0:	mov	r0, r4
   225e4:	movw	r1, #17020	; 0x427c
   225e8:	movt	r1, #5
   225ec:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   225f0:	mov	r1, r7
   225f4:	mov	r0, r4
   225f8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   225fc:	ldr	r3, [r4, #220]	; 0xdc
   22600:	movw	r1, #17168	; 0x4310
   22604:	movt	r1, #5
   22608:	add	r2, sp, #52	; 0x34
   2260c:	mov	r0, r4
   22610:	add	r3, r3, #1
   22614:	str	r3, [r4, #220]	; 0xdc
   22618:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2261c:	ldr	r3, [r4, #220]	; 0xdc
   22620:	cmp	r3, #0
   22624:	beq	23214 <__flatcc_fb_gen_c_json_parser@@Base+0x1918>
   22628:	sub	r3, r3, #1
   2262c:	mov	r0, r4
   22630:	movw	r1, #9812	; 0x2654
   22634:	movt	r1, #5
   22638:	str	r3, [r4, #220]	; 0xdc
   2263c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22640:	movw	r1, #39472	; 0x9a30
   22644:	movt	r1, #4
   22648:	mov	r0, r4
   2264c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22650:	b	21c8c <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   22654:	mov	r1, r5
   22658:	mov	r0, r4
   2265c:	bl	2144c <__flatcc_fb_gen_c_verifier@@Base+0x3b20>
   22660:	b	21c8c <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   22664:	mov	r3, #0
   22668:	str	r3, [r6]
   2266c:	str	r3, [r6, #4]
   22670:	str	r3, [r6, #8]
   22674:	str	r3, [r6, #12]
   22678:	str	r3, [r6, #16]
   2267c:	str	r3, [r6, #20]
   22680:	str	r3, [r6, #24]
   22684:	ldrh	r8, [r5, #8]
   22688:	cmp	r8, r3
   2268c:	bne	231c0 <__flatcc_fb_gen_c_json_parser@@Base+0x18c4>
   22690:	add	r1, sp, #20
   22694:	ldr	r0, [r5, #20]
   22698:	bl	2129c <__flatcc_fb_gen_c_verifier@@Base+0x3970>
   2269c:	cmp	r0, #0
   226a0:	str	r0, [sp, #24]
   226a4:	beq	22e8c <__flatcc_fb_gen_c_json_parser@@Base+0x1590>
   226a8:	ldr	r1, [sp, #20]
   226ac:	movw	lr, #4284	; 0x10bc
   226b0:	movt	lr, #2
   226b4:	movw	ip, #56752	; 0xddb0
   226b8:	movt	ip, #1
   226bc:	mov	r2, #0
   226c0:	mov	r3, #0
   226c4:	str	lr, [sp, #28]
   226c8:	str	ip, [sp, #32]
   226cc:	str	r5, [sp, #36]	; 0x24
   226d0:	cmp	r1, #0
   226d4:	strd	r2, [sp, #40]	; 0x28
   226d8:	ble	226fc <__flatcc_fb_gen_c_json_parser@@Base+0xe00>
   226dc:	add	r1, r0, r1, lsl #4
   226e0:	ldr	r3, [r0, #12]
   226e4:	add	r0, r0, #16
   226e8:	cmp	r3, #0
   226ec:	addne	r8, r8, #1
   226f0:	cmp	r1, r0
   226f4:	bne	226e0 <__flatcc_fb_gen_c_json_parser@@Base+0xde4>
   226f8:	str	r8, [sp, #44]	; 0x2c
   226fc:	mov	r2, #220	; 0xdc
   22700:	mov	r1, #0
   22704:	add	r0, sp, #52	; 0x34
   22708:	bl	13f78 <memset@plt>
   2270c:	add	r2, sp, #52	; 0x34
   22710:	mov	r1, r5
   22714:	ldr	r0, [r5, #12]
   22718:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   2271c:	add	r2, sp, #52	; 0x34
   22720:	mov	r0, r4
   22724:	ldr	r1, [sp, #12]
   22728:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2272c:	mov	r1, r7
   22730:	mov	r0, r4
   22734:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22738:	ldr	r3, [r4, #220]	; 0xdc
   2273c:	mov	r0, r4
   22740:	ldr	r1, [sp, #8]
   22744:	add	r3, r3, #1
   22748:	str	r3, [r4, #220]	; 0xdc
   2274c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22750:	ldr	r3, [sp, #20]
   22754:	cmp	r3, #0
   22758:	ble	2279c <__flatcc_fb_gen_c_json_parser@@Base+0xea0>
   2275c:	mov	r0, r4
   22760:	movw	r1, #16508	; 0x407c
   22764:	movt	r1, #5
   22768:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2276c:	mov	r0, r4
   22770:	movw	r1, #17400	; 0x43f8
   22774:	movt	r1, #5
   22778:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2277c:	mov	r0, r4
   22780:	movw	r1, #11692	; 0x2dac
   22784:	movt	r1, #5
   22788:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2278c:	movw	r1, #11712	; 0x2dc0
   22790:	movt	r1, #5
   22794:	mov	r0, r4
   22798:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2279c:	ldr	r3, [sp, #44]	; 0x2c
   227a0:	cmp	r3, #0
   227a4:	bne	22bec <__flatcc_fb_gen_c_json_parser@@Base+0x12f0>
   227a8:	mov	r0, r4
   227ac:	movw	r1, #39472	; 0x9a30
   227b0:	movt	r1, #4
   227b4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   227b8:	mov	r0, r4
   227bc:	movw	r1, #10564	; 0x2944
   227c0:	movt	r1, #5
   227c4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   227c8:	movw	r1, #17456	; 0x4430
   227cc:	movt	r1, #5
   227d0:	ldrd	r2, [r5, #96]	; 0x60
   227d4:	mov	r0, r4
   227d8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   227dc:	ldr	r2, [sp, #44]	; 0x2c
   227e0:	cmp	r2, #0
   227e4:	bne	22bd4 <__flatcc_fb_gen_c_json_parser@@Base+0x12d8>
   227e8:	mov	r0, r4
   227ec:	movw	r1, #16520	; 0x4088
   227f0:	movt	r1, #5
   227f4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   227f8:	mov	r0, r4
   227fc:	movw	r1, #12420	; 0x3084
   22800:	movt	r1, #5
   22804:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22808:	ldr	r3, [r4, #220]	; 0xdc
   2280c:	movw	r1, #16604	; 0x40dc
   22810:	movt	r1, #5
   22814:	mov	r0, r4
   22818:	add	r3, r3, #1
   2281c:	str	r3, [r4, #220]	; 0xdc
   22820:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22824:	ldr	r3, [sp, #20]
   22828:	cmp	r3, #0
   2282c:	ble	22bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x12b4>
   22830:	mov	r0, r4
   22834:	movw	r1, #10064	; 0x2750
   22838:	movt	r1, #5
   2283c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22840:	ldr	r3, [sp, #20]
   22844:	mov	ip, #0
   22848:	mov	r1, r6
   2284c:	mov	r2, ip
   22850:	mov	r0, r4
   22854:	str	ip, [sp]
   22858:	sub	r3, r3, #1
   2285c:	bl	1e34c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   22860:	movw	r1, #17640	; 0x44e8
   22864:	movt	r1, #5
   22868:	mov	r0, r4
   2286c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22870:	ldr	r3, [r4, #220]	; 0xdc
   22874:	cmp	r3, #0
   22878:	beq	231a4 <__flatcc_fb_gen_c_json_parser@@Base+0x18a8>
   2287c:	sub	r3, r3, #1
   22880:	mov	r0, r4
   22884:	movw	r1, #9812	; 0x2654
   22888:	movt	r1, #5
   2288c:	str	r3, [r4, #220]	; 0xdc
   22890:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22894:	movw	r1, #17700	; 0x4524
   22898:	movt	r1, #5
   2289c:	mov	r0, r4
   228a0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   228a4:	ldr	ip, [sp, #20]
   228a8:	cmp	ip, #0
   228ac:	ble	229f4 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   228b0:	movw	fp, #17792	; 0x4580
   228b4:	movt	fp, #5
   228b8:	movw	sl, #17732	; 0x4544
   228bc:	movt	sl, #5
   228c0:	mov	r9, #1
   228c4:	mov	r8, #0
   228c8:	b	228f8 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   228cc:	mov	r1, sl
   228d0:	mov	r0, r4
   228d4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   228d8:	ldr	r3, [r4, #220]	; 0xdc
   228dc:	mov	r9, #0
   228e0:	ldr	ip, [sp, #20]
   228e4:	add	r3, r3, #1
   228e8:	str	r3, [r4, #220]	; 0xdc
   228ec:	add	r8, r8, #1
   228f0:	cmp	r8, ip
   228f4:	bge	22978 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   228f8:	ldr	r3, [sp, #24]
   228fc:	add	r3, r3, r8, lsl #4
   22900:	ldr	r0, [r3, #8]
   22904:	ldrh	r2, [r0, #72]	; 0x48
   22908:	ands	r3, r2, #4
   2290c:	bne	228ec <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   22910:	ldrh	r1, [r0, #24]
   22914:	sub	r1, r1, #14
   22918:	cmp	r1, #1
   2291c:	movhi	r1, #0
   22920:	movhi	lr, r1
   22924:	bhi	22940 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   22928:	ldr	r1, [r0, #16]
   2292c:	mov	lr, r3
   22930:	ldrh	r1, [r1, #8]
   22934:	sub	r1, r1, #4
   22938:	clz	r1, r1
   2293c:	lsr	r1, r1, #5
   22940:	tst	r2, #256	; 0x100
   22944:	beq	228ec <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   22948:	ldrd	r2, [r0, #96]	; 0x60
   2294c:	subs	r2, r2, r1
   22950:	sbc	r3, r3, lr
   22954:	cmp	r9, #0
   22958:	bne	228cc <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   2295c:	mov	r1, fp
   22960:	mov	r0, r4
   22964:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22968:	ldr	ip, [sp, #20]
   2296c:	add	r8, r8, #1
   22970:	cmp	r8, ip
   22974:	blt	228f8 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   22978:	cmp	r9, #0
   2297c:	bne	229f4 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   22980:	ldr	r3, [r4, #220]	; 0xdc
   22984:	cmp	r3, #0
   22988:	beq	232d8 <__flatcc_fb_gen_c_json_parser@@Base+0x19dc>
   2298c:	sub	r3, r3, #1
   22990:	mov	r0, r4
   22994:	movw	r1, #13204	; 0x3394
   22998:	movt	r1, #5
   2299c:	str	r3, [r4, #220]	; 0xdc
   229a0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   229a4:	ldr	r3, [r4, #220]	; 0xdc
   229a8:	mov	r0, r4
   229ac:	movw	r1, #17852	; 0x45bc
   229b0:	movt	r1, #5
   229b4:	add	r3, r3, #1
   229b8:	str	r3, [r4, #220]	; 0xdc
   229bc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   229c0:	movw	r1, #14204	; 0x377c
   229c4:	movt	r1, #5
   229c8:	mov	r0, r4
   229cc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   229d0:	ldr	r3, [r4, #220]	; 0xdc
   229d4:	cmp	r3, #0
   229d8:	beq	232bc <__flatcc_fb_gen_c_json_parser@@Base+0x19c0>
   229dc:	sub	r3, r3, #1
   229e0:	movw	r1, #9812	; 0x2654
   229e4:	movt	r1, #5
   229e8:	mov	r0, r4
   229ec:	str	r3, [r4, #220]	; 0xdc
   229f0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   229f4:	ldr	r3, [sp, #44]	; 0x2c
   229f8:	cmp	r3, #0
   229fc:	bne	22c00 <__flatcc_fb_gen_c_json_parser@@Base+0x1304>
   22a00:	mov	r0, r4
   22a04:	movw	r1, #18008	; 0x4658
   22a08:	movt	r1, #5
   22a0c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22a10:	mov	r0, r4
   22a14:	movw	r1, #11212	; 0x2bcc
   22a18:	movt	r1, #5
   22a1c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22a20:	ldr	r3, [r4, #220]	; 0xdc
   22a24:	mov	r2, #0
   22a28:	mov	r0, r4
   22a2c:	movw	r1, #16720	; 0x4150
   22a30:	movt	r1, #5
   22a34:	str	r2, [r4, #220]	; 0xdc
   22a38:	str	r3, [r4, #228]	; 0xe4
   22a3c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22a40:	ldr	r3, [r4, #228]	; 0xe4
   22a44:	movw	r1, #11240	; 0x2be8
   22a48:	movt	r1, #5
   22a4c:	mov	r0, r4
   22a50:	str	r3, [r4, #220]	; 0xdc
   22a54:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22a58:	ldr	r3, [r4, #220]	; 0xdc
   22a5c:	cmp	r3, #0
   22a60:	beq	23268 <__flatcc_fb_gen_c_json_parser@@Base+0x196c>
   22a64:	sub	r3, r3, #1
   22a68:	mov	r0, r4
   22a6c:	movw	r1, #9812	; 0x2654
   22a70:	movt	r1, #5
   22a74:	str	r3, [r4, #220]	; 0xdc
   22a78:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22a7c:	mov	r0, r4
   22a80:	movw	r1, #39472	; 0x9a30
   22a84:	movt	r1, #4
   22a88:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22a8c:	add	r2, sp, #52	; 0x34
   22a90:	mov	r0, r4
   22a94:	movw	r1, #17020	; 0x427c
   22a98:	movt	r1, #5
   22a9c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22aa0:	mov	r1, r7
   22aa4:	mov	r0, r4
   22aa8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22aac:	ldr	r3, [r4, #220]	; 0xdc
   22ab0:	movw	r1, #18076	; 0x469c
   22ab4:	movt	r1, #5
   22ab8:	add	r2, sp, #52	; 0x34
   22abc:	mov	r0, r4
   22ac0:	add	r3, r3, #1
   22ac4:	str	r3, [r4, #220]	; 0xdc
   22ac8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22acc:	ldr	r3, [r4, #220]	; 0xdc
   22ad0:	cmp	r3, #0
   22ad4:	beq	2324c <__flatcc_fb_gen_c_json_parser@@Base+0x1950>
   22ad8:	sub	r3, r3, #1
   22adc:	mov	r0, r4
   22ae0:	movw	r1, #9812	; 0x2654
   22ae4:	movt	r1, #5
   22ae8:	str	r3, [r4, #220]	; 0xdc
   22aec:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22af0:	mov	r0, r4
   22af4:	movw	r1, #39472	; 0x9a30
   22af8:	movt	r1, #4
   22afc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22b00:	ldr	r0, [sp, #24]
   22b04:	cmp	r0, #0
   22b08:	beq	21c8c <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   22b0c:	bl	13eac <free@plt>
   22b10:	b	21c8c <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   22b14:	mov	r0, r4
   22b18:	movw	r1, #16604	; 0x40dc
   22b1c:	movt	r1, #5
   22b20:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22b24:	mov	r0, r4
   22b28:	movw	r1, #10064	; 0x2750
   22b2c:	movt	r1, #5
   22b30:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22b34:	ldr	r3, [sp, #20]
   22b38:	mov	ip, #0
   22b3c:	mov	r1, r6
   22b40:	mov	r2, ip
   22b44:	mov	r0, r4
   22b48:	str	ip, [sp]
   22b4c:	sub	r3, r3, #1
   22b50:	bl	1e34c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   22b54:	b	223cc <__flatcc_fb_gen_c_json_parser@@Base+0xad0>
   22b58:	ldr	r3, [sp, #20]
   22b5c:	cmp	r3, #0
   22b60:	ble	2229c <__flatcc_fb_gen_c_json_parser@@Base+0x9a0>
   22b64:	movw	r1, #11464	; 0x2cc8
   22b68:	movt	r1, #5
   22b6c:	movw	r3, #41128	; 0xa0a8
   22b70:	movt	r3, #6
   22b74:	movw	r2, #9712	; 0x25f0
   22b78:	movt	r2, #5
   22b7c:	str	r1, [sp]
   22b80:	movw	r1, #64544	; 0xfc20
   22b84:	movt	r1, #3
   22b88:	ldr	r0, [r3]
   22b8c:	movw	r3, #1303	; 0x517
   22b90:	bl	13f60 <fprintf@plt>
   22b94:	movw	r1, #9712	; 0x25f0
   22b98:	movt	r1, #5
   22b9c:	ldr	r3, [pc, #120]	; 22c1c <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   22ba0:	movw	r0, #35672	; 0x8b58
   22ba4:	movt	r0, #4
   22ba8:	movw	r2, #1303	; 0x517
   22bac:	bl	14014 <__assert_fail@plt>
   22bb0:	mov	r0, r4
   22bb4:	movw	r1, #17612	; 0x44cc
   22bb8:	movt	r1, #5
   22bbc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22bc0:	movw	r1, #9540	; 0x2544
   22bc4:	movt	r1, #5
   22bc8:	mov	r0, r4
   22bcc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22bd0:	b	22860 <__flatcc_fb_gen_c_json_parser@@Base+0xf64>
   22bd4:	movw	r1, #17520	; 0x4470
   22bd8:	movt	r1, #5
   22bdc:	asr	r3, r2, #31
   22be0:	mov	r0, r4
   22be4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22be8:	b	227e8 <__flatcc_fb_gen_c_json_parser@@Base+0xeec>
   22bec:	movw	r1, #17436	; 0x441c
   22bf0:	movt	r1, #5
   22bf4:	mov	r0, r4
   22bf8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22bfc:	b	227a8 <__flatcc_fb_gen_c_json_parser@@Base+0xeac>
   22c00:	movw	r1, #17940	; 0x4614
   22c04:	movt	r1, #5
   22c08:	mov	r0, r4
   22c0c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22c10:	b	22a00 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   22c14:	muleq	r5, ip, r4
   22c18:	ldrdeq	r2, [r5], -r4
   22c1c:			; <UNDEFINED> instruction: 0x000524b8
   22c20:	strdeq	r2, [r5], -ip
   22c24:	andeq	r2, r5, r8, ror #9
   22c28:	andeq	r2, r5, ip, lsr #10
   22c2c:	muleq	r5, ip, r4
   22c30:	andeq	r2, r5, r4, lsl r5
   22c34:	mov	r0, r4
   22c38:	movw	r1, #18172	; 0x46fc
   22c3c:	movt	r1, #5
   22c40:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22c44:	movw	r1, #11628	; 0x2d6c
   22c48:	movt	r1, #5
   22c4c:	mov	r0, r4
   22c50:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22c54:	ldr	r3, [r4, #220]	; 0xdc
   22c58:	cmp	r3, #0
   22c5c:	bne	2200c <__flatcc_fb_gen_c_json_parser@@Base+0x710>
   22c60:	movw	r1, #9712	; 0x25f0
   22c64:	movt	r1, #5
   22c68:	ldr	r3, [pc, #-80]	; 22c20 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   22c6c:	movw	r0, #9800	; 0x2648
   22c70:	movt	r0, #5
   22c74:	movw	r2, #1210	; 0x4ba
   22c78:	bl	14014 <__assert_fail@plt>
   22c7c:	mov	r2, #220	; 0xdc
   22c80:	mov	r1, r6
   22c84:	add	r0, sp, #52	; 0x34
   22c88:	bl	13f78 <memset@plt>
   22c8c:	add	r2, sp, #52	; 0x34
   22c90:	mov	r1, r5
   22c94:	ldr	r0, [r5, #12]
   22c98:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   22c9c:	ldr	r3, [r4, #208]	; 0xd0
   22ca0:	mov	r0, r4
   22ca4:	movw	r1, #15524	; 0x3ca4
   22ca8:	movt	r1, #5
   22cac:	ldr	r2, [r3, #160]	; 0xa0
   22cb0:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22cb4:	ldr	r3, [r4, #220]	; 0xdc
   22cb8:	movw	r1, #18232	; 0x4738
   22cbc:	movt	r1, #5
   22cc0:	mov	r0, r4
   22cc4:	add	r3, r3, #2
   22cc8:	str	r3, [r4, #220]	; 0xdc
   22ccc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22cd0:	ldr	r3, [r4, #220]	; 0xdc
   22cd4:	cmp	r3, #0
   22cd8:	beq	2332c <__flatcc_fb_gen_c_json_parser@@Base+0x1a30>
   22cdc:	cmp	r3, #1
   22ce0:	streq	r6, [r4, #220]	; 0xdc
   22ce4:	beq	2332c <__flatcc_fb_gen_c_json_parser@@Base+0x1a30>
   22ce8:	sub	r3, r3, #2
   22cec:	mov	r0, r4
   22cf0:	movw	r1, #21192	; 0x52c8
   22cf4:	movt	r1, #5
   22cf8:	str	r3, [r4, #220]	; 0xdc
   22cfc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22d00:	ldr	r3, [r4, #220]	; 0xdc
   22d04:	mov	r0, r4
   22d08:	movw	r1, #18276	; 0x4764
   22d0c:	movt	r1, #5
   22d10:	add	r3, r3, #1
   22d14:	str	r3, [r4, #220]	; 0xdc
   22d18:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22d1c:	mov	r0, r4
   22d20:	movw	r1, #18308	; 0x4784
   22d24:	movt	r1, #5
   22d28:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22d2c:	mov	r0, r4
   22d30:	movw	r1, #39472	; 0x9a30
   22d34:	movt	r1, #4
   22d38:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22d3c:	mov	r0, r4
   22d40:	movw	r1, #18336	; 0x47a0
   22d44:	movt	r1, #5
   22d48:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22d4c:	movw	r1, #18364	; 0x47bc
   22d50:	movt	r1, #5
   22d54:	mov	r0, r4
   22d58:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22d5c:	ldr	r2, [r4, #208]	; 0xd0
   22d60:	ldrh	r3, [r2, #16]
   22d64:	cmp	r3, #2
   22d68:	beq	22f1c <__flatcc_fb_gen_c_json_parser@@Base+0x1620>
   22d6c:	movw	r1, #18488	; 0x4838
   22d70:	movt	r1, #5
   22d74:	mov	r0, r4
   22d78:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22d7c:	add	r2, sp, #52	; 0x34
   22d80:	mov	r0, r4
   22d84:	movw	r1, #18544	; 0x4870
   22d88:	movt	r1, #5
   22d8c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22d90:	mov	r0, r4
   22d94:	movw	r1, #18596	; 0x48a4
   22d98:	movt	r1, #5
   22d9c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22da0:	ldr	r3, [r4, #220]	; 0xdc
   22da4:	movw	r1, #18616	; 0x48b8
   22da8:	movt	r1, #5
   22dac:	mov	r0, r4
   22db0:	add	r3, r3, #1
   22db4:	str	r3, [r4, #220]	; 0xdc
   22db8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22dbc:	ldr	r3, [r4, #220]	; 0xdc
   22dc0:	cmp	r3, #0
   22dc4:	beq	233e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1aec>
   22dc8:	sub	r3, r3, #1
   22dcc:	mov	r0, r4
   22dd0:	movw	r1, #9812	; 0x2654
   22dd4:	movt	r1, #5
   22dd8:	str	r3, [r4, #220]	; 0xdc
   22ddc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22de0:	mov	r0, r4
   22de4:	movw	r1, #18636	; 0x48cc
   22de8:	movt	r1, #5
   22dec:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22df0:	mov	r0, r4
   22df4:	movw	r1, #18688	; 0x4900
   22df8:	movt	r1, #5
   22dfc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22e00:	movw	r1, #18708	; 0x4914
   22e04:	movt	r1, #5
   22e08:	mov	r0, r4
   22e0c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22e10:	ldr	r3, [r4, #220]	; 0xdc
   22e14:	cmp	r3, #0
   22e18:	beq	233cc <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   22e1c:	sub	r3, r3, #1
   22e20:	mov	r0, r4
   22e24:	movw	r1, #9812	; 0x2654
   22e28:	movt	r1, #5
   22e2c:	str	r3, [r4, #220]	; 0xdc
   22e30:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22e34:	movw	r1, #39472	; 0x9a30
   22e38:	movt	r1, #4
   22e3c:	mov	r0, r4
   22e40:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22e44:	ldr	r3, [r4, #212]	; 0xd4
   22e48:	ldr	r3, [r3, #140]	; 0x8c
   22e4c:	cmp	r3, #0
   22e50:	bne	22edc <__flatcc_fb_gen_c_json_parser@@Base+0x15e0>
   22e54:	ldr	r3, [r4, #208]	; 0xd0
   22e58:	mov	r0, r4
   22e5c:	movw	r1, #18836	; 0x4994
   22e60:	movt	r1, #5
   22e64:	ldr	r2, [r3, #164]	; 0xa4
   22e68:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22e6c:	mov	r0, #0
   22e70:	add	sp, sp, #276	; 0x114
   22e74:	ldrd	r4, [sp]
   22e78:	ldrd	r6, [sp, #8]
   22e7c:	ldrd	r8, [sp, #16]
   22e80:	ldrd	sl, [sp, #24]
   22e84:	add	sp, sp, #32
   22e88:	pop	{pc}		; (ldr pc, [sp], #4)
   22e8c:	ldr	r3, [sp, #20]
   22e90:	cmp	r3, #0
   22e94:	bgt	23348 <__flatcc_fb_gen_c_json_parser@@Base+0x1a4c>
   22e98:	movw	r2, #4284	; 0x10bc
   22e9c:	movt	r2, #2
   22ea0:	str	r5, [sp, #36]	; 0x24
   22ea4:	movw	r3, #56752	; 0xddb0
   22ea8:	movt	r3, #1
   22eac:	mov	r0, #0
   22eb0:	mov	r1, #0
   22eb4:	strd	r2, [sp, #28]
   22eb8:	strd	r0, [sp, #40]	; 0x28
   22ebc:	b	226fc <__flatcc_fb_gen_c_json_parser@@Base+0xe00>
   22ec0:	movw	r0, #4064	; 0xfe0
   22ec4:	movt	r0, #4
   22ec8:	ldr	r3, [r4, #204]	; 0xcc
   22ecc:	mov	r2, #36	; 0x24
   22ed0:	mov	r1, #1
   22ed4:	bl	13ef4 <fwrite@plt>
   22ed8:	b	219ac <__flatcc_fb_gen_c_json_parser@@Base+0xb0>
   22edc:	movw	r0, #28228	; 0x6e44
   22ee0:	movt	r0, #4
   22ee4:	ldr	r3, [r4, #204]	; 0xcc
   22ee8:	mov	r2, #36	; 0x24
   22eec:	mov	r1, #1
   22ef0:	bl	13ef4 <fwrite@plt>
   22ef4:	b	22e54 <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   22ef8:	str	r8, [sp, #24]
   22efc:	b	21eec <__flatcc_fb_gen_c_json_parser@@Base+0x5f0>
   22f00:	movw	r1, #18424	; 0x47f8
   22f04:	movt	r1, #5
   22f08:	ldr	r3, [r2, #8]
   22f0c:	mov	r0, r4
   22f10:	ldr	r2, [r2, #12]
   22f14:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22f18:	b	2219c <__flatcc_fb_gen_c_json_parser@@Base+0x8a0>
   22f1c:	movw	r1, #18424	; 0x47f8
   22f20:	movt	r1, #5
   22f24:	ldr	r3, [r2, #8]
   22f28:	mov	r0, r4
   22f2c:	ldr	r2, [r2, #12]
   22f30:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22f34:	b	22d7c <__flatcc_fb_gen_c_json_parser@@Base+0x1480>
   22f38:	mov	r0, r4
   22f3c:	movw	r1, #15128	; 0x3b18
   22f40:	movt	r1, #5
   22f44:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22f48:	mov	r0, r4
   22f4c:	movw	r1, #15132	; 0x3b1c
   22f50:	movt	r1, #5
   22f54:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22f58:	mov	r0, r4
   22f5c:	movw	r1, #15220	; 0x3b74
   22f60:	movt	r1, #5
   22f64:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22f68:	mov	r0, r4
   22f6c:	movw	r1, #15224	; 0x3b78
   22f70:	movt	r1, #5
   22f74:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22f78:	mov	r0, r4
   22f7c:	movw	r1, #15292	; 0x3bbc
   22f80:	movt	r1, #5
   22f84:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22f88:	mov	r0, r4
   22f8c:	movw	r1, #15348	; 0x3bf4
   22f90:	movt	r1, #5
   22f94:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22f98:	mov	r0, r4
   22f9c:	movw	r1, #15388	; 0x3c1c
   22fa0:	movt	r1, #5
   22fa4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22fa8:	mov	r0, r4
   22fac:	movw	r1, #15460	; 0x3c64
   22fb0:	movt	r1, #5
   22fb4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22fb8:	mov	r0, r4
   22fbc:	movw	r1, #9648	; 0x25b0
   22fc0:	movt	r1, #5
   22fc4:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22fc8:	ldr	r3, [r4, #208]	; 0xd0
   22fcc:	mov	r0, r4
   22fd0:	movw	r1, #15524	; 0x3ca4
   22fd4:	movt	r1, #5
   22fd8:	ldr	r2, [r3, #160]	; 0xa0
   22fdc:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22fe0:	ldr	r3, [r4, #220]	; 0xdc
   22fe4:	movw	r1, #15600	; 0x3cf0
   22fe8:	movt	r1, #5
   22fec:	mov	r0, r4
   22ff0:	add	r3, r3, #2
   22ff4:	str	r3, [r4, #220]	; 0xdc
   22ff8:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22ffc:	ldr	r3, [r4, #220]	; 0xdc
   23000:	cmp	r3, #0
   23004:	beq	233b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ab4>
   23008:	cmp	r3, #1
   2300c:	moveq	r3, #0
   23010:	streq	r3, [r4, #220]	; 0xdc
   23014:	beq	233b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ab4>
   23018:	sub	r3, r3, #2
   2301c:	movw	r1, #39472	; 0x9a30
   23020:	movt	r1, #4
   23024:	mov	r0, r4
   23028:	str	r3, [r4, #220]	; 0xdc
   2302c:	bl	1dca0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23030:	ldr	r6, [r4, #208]	; 0xd0
   23034:	b	219e8 <__flatcc_fb_gen_c_json_parser@@Base+0xec>
   23038:	cmp	r8, #0
   2303c:	str	r9, [sp, #24]
   23040:	ble	21eec <__flatcc_fb_gen_c_json_parser@@Base+0x5f0>
   23044:	ldr	r0, [sp, #68]	; 0x44
   23048:	cmp	r0, #0
   2304c:	beq	23054 <__flatcc_fb_gen_c_json_parser@@Base+0x1758>
   23050:	bl	13eac <free@plt>
   23054:	ldr	r0, [sp, #72]	; 0x48
   23058:	cmp	r0, #0
   2305c:	beq	23064 <__flatcc_fb_gen_c_json_parser@@Base+0x1768>
   23060:	bl	13eac <free@plt>
   23064:	ldr	r0, [sp, #76]	; 0x4c
   23068:	cmp	r0, #0
   2306c:	beq	23074 <__flatcc_fb_gen_c_json_parser@@Base+0x1778>
   23070:	bl	13eac <free@plt>
   23074:	movw	r1, #11464	; 0x2cc8
   23078:	movt	r1, #5
   2307c:	mov	ip, #0
   23080:	movw	r3, #41128	; 0xa0a8
   23084:	movt	r3, #6
   23088:	movw	r2, #9712	; 0x25f0
   2308c:	movt	r2, #5
   23090:	str	r1, [sp]
   23094:	movw	r1, #64544	; 0xfc20
   23098:	movt	r1, #3
   2309c:	ldr	r0, [r3]
   230a0:	movw	r3, #1194	; 0x4aa
   230a4:	str	ip, [sp, #52]	; 0x34
   230a8:	str	ip, [sp, #56]	; 0x38
   230ac:	str	ip, [sp, #60]	; 0x3c
   230b0:	str	ip, [sp, #64]	; 0x40
   230b4:	str	ip, [sp, #68]	; 0x44
   230b8:	str	ip, [sp, #72]	; 0x48
   230bc:	str	ip, [sp, #76]	; 0x4c
   230c0:	str	ip, [sp, #80]	; 0x50
   230c4:	str	ip, [sp, #84]	; 0x54
   230c8:	str	ip, [sp, #88]	; 0x58
   230cc:	str	ip, [sp, #92]	; 0x5c
   230d0:	bl	13f60 <fprintf@plt>
   230d4:	movw	r1, #9712	; 0x25f0
   230d8:	movt	r1, #5
   230dc:	ldr	r3, [pc, #-1220]	; 22c20 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   230e0:	movw	r0, #35672	; 0x8b58
   230e4:	movt	r0, #4
   230e8:	movw	r2, #1194	; 0x4aa
   230ec:	bl	14014 <__assert_fail@plt>
   230f0:	cmp	fp, #0
   230f4:	beq	23160 <__flatcc_fb_gen_c_json_parser@@Base+0x1864>
   230f8:	mov	r0, fp
   230fc:	str	r3, [sp, #8]
   23100:	bl	13eac <free@plt>
   23104:	ldr	r3, [sp, #8]
   23108:	cmp	sl, #0
   2310c:	beq	23120 <__flatcc_fb_gen_c_json_parser@@Base+0x1824>
   23110:	mov	r0, sl
   23114:	str	r3, [sp, #8]
   23118:	bl	13eac <free@plt>
   2311c:	ldr	r3, [sp, #8]
   23120:	cmp	r3, #0
   23124:	beq	22074 <__flatcc_fb_gen_c_json_parser@@Base+0x778>
   23128:	mov	r0, r3
   2312c:	b	22070 <__flatcc_fb_gen_c_json_parser@@Base+0x774>
   23130:	mov	r3, #0
   23134:	str	r3, [r4, #220]	; 0xdc
   23138:	movw	r1, #9712	; 0x25f0
   2313c:	movt	r1, #5
   23140:	ldr	r3, [pc, #-1332]	; 22c14 <__flatcc_fb_gen_c_json_parser@@Base+0x1318>
   23144:	movw	r0, #9800	; 0x2648
   23148:	movt	r0, #5
   2314c:	movw	r2, #1731	; 0x6c3
   23150:	bl	14014 <__assert_fail@plt>
   23154:	cmp	fp, #0
   23158:	bne	230f8 <__flatcc_fb_gen_c_json_parser@@Base+0x17fc>
   2315c:	b	23120 <__flatcc_fb_gen_c_json_parser@@Base+0x1824>
   23160:	cmp	sl, #0
   23164:	bne	23110 <__flatcc_fb_gen_c_json_parser@@Base+0x1814>
   23168:	b	22074 <__flatcc_fb_gen_c_json_parser@@Base+0x778>
   2316c:	movw	r1, #9712	; 0x25f0
   23170:	movt	r1, #5
   23174:	ldr	r3, [pc, #-1372]	; 22c20 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   23178:	movw	r0, #9800	; 0x2648
   2317c:	movt	r0, #5
   23180:	movw	r2, #1205	; 0x4b5
   23184:	bl	14014 <__assert_fail@plt>
   23188:	movw	r1, #9712	; 0x25f0
   2318c:	movt	r1, #5
   23190:	ldr	r3, [pc, #-1412]	; 22c14 <__flatcc_fb_gen_c_json_parser@@Base+0x1318>
   23194:	movw	r0, #9800	; 0x2648
   23198:	movt	r0, #5
   2319c:	movw	r2, #1755	; 0x6db
   231a0:	bl	14014 <__assert_fail@plt>
   231a4:	movw	r1, #9712	; 0x25f0
   231a8:	movt	r1, #5
   231ac:	ldr	r3, [pc, #-1424]	; 22c24 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   231b0:	movw	r0, #9800	; 0x2648
   231b4:	movt	r0, #5
   231b8:	movw	r2, #1438	; 0x59e
   231bc:	bl	14014 <__assert_fail@plt>
   231c0:	movw	r1, #9712	; 0x25f0
   231c4:	movt	r1, #5
   231c8:	ldr	r3, [pc, #-1452]	; 22c24 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   231cc:	movw	r0, #1964	; 0x7ac
   231d0:	movt	r0, #4
   231d4:	movw	r2, #1390	; 0x56e
   231d8:	bl	14014 <__assert_fail@plt>
   231dc:	movw	r1, #9712	; 0x25f0
   231e0:	movt	r1, #5
   231e4:	ldr	r3, [pc, #-1492]	; 22c18 <__flatcc_fb_gen_c_json_parser@@Base+0x131c>
   231e8:	movw	r0, #65440	; 0xffa0
   231ec:	movt	r0, #3
   231f0:	movw	r2, #1353	; 0x549
   231f4:	bl	14014 <__assert_fail@plt>
   231f8:	movw	r1, #9712	; 0x25f0
   231fc:	movt	r1, #5
   23200:	ldr	r3, [pc, #-1516]	; 22c1c <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   23204:	movw	r0, #9800	; 0x2648
   23208:	movt	r0, #5
   2320c:	movw	r2, #1343	; 0x53f
   23210:	bl	14014 <__assert_fail@plt>
   23214:	movw	r1, #9712	; 0x25f0
   23218:	movt	r1, #5
   2321c:	ldr	r3, [pc, #-1548]	; 22c18 <__flatcc_fb_gen_c_json_parser@@Base+0x131c>
   23220:	movw	r0, #9800	; 0x2648
   23224:	movt	r0, #5
   23228:	mov	r2, #1376	; 0x560
   2322c:	bl	14014 <__assert_fail@plt>
   23230:	movw	r1, #9712	; 0x25f0
   23234:	movt	r1, #5
   23238:	ldr	r3, [pc, #-1576]	; 22c18 <__flatcc_fb_gen_c_json_parser@@Base+0x131c>
   2323c:	movw	r0, #9800	; 0x2648
   23240:	movt	r0, #5
   23244:	movw	r2, #1370	; 0x55a
   23248:	bl	14014 <__assert_fail@plt>
   2324c:	movw	r1, #9712	; 0x25f0
   23250:	movt	r1, #5
   23254:	ldr	r3, [pc, #-1592]	; 22c24 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   23258:	movw	r0, #9800	; 0x2648
   2325c:	movt	r0, #5
   23260:	movw	r2, #1479	; 0x5c7
   23264:	bl	14014 <__assert_fail@plt>
   23268:	movw	r1, #9712	; 0x25f0
   2326c:	movt	r1, #5
   23270:	ldr	r3, [pc, #-1620]	; 22c24 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   23274:	movw	r0, #9800	; 0x2648
   23278:	movt	r0, #5
   2327c:	movw	r2, #1473	; 0x5c1
   23280:	bl	14014 <__assert_fail@plt>
   23284:	movw	r1, #9712	; 0x25f0
   23288:	movt	r1, #5
   2328c:	ldr	r3, [pc, #-1656]	; 22c1c <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   23290:	movw	r0, #9800	; 0x2648
   23294:	movt	r0, #5
   23298:	movw	r2, #1334	; 0x536
   2329c:	bl	14014 <__assert_fail@plt>
   232a0:	movw	r1, #9712	; 0x25f0
   232a4:	movt	r1, #5
   232a8:	ldr	r3, [pc, #-1684]	; 22c1c <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   232ac:	movw	r0, #65440	; 0xffa0
   232b0:	movt	r0, #3
   232b4:	movw	r2, #1301	; 0x515
   232b8:	bl	14014 <__assert_fail@plt>
   232bc:	movw	r1, #9712	; 0x25f0
   232c0:	movt	r1, #5
   232c4:	ldr	r3, [pc, #-1704]	; 22c24 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   232c8:	movw	r0, #9800	; 0x2648
   232cc:	movt	r0, #5
   232d0:	movw	r2, #1461	; 0x5b5
   232d4:	bl	14014 <__assert_fail@plt>
   232d8:	movw	r1, #9712	; 0x25f0
   232dc:	movt	r1, #5
   232e0:	ldr	r3, [pc, #-1732]	; 22c24 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   232e4:	movw	r0, #9800	; 0x2648
   232e8:	movt	r0, #5
   232ec:	movw	r2, #1458	; 0x5b2
   232f0:	bl	14014 <__assert_fail@plt>
   232f4:	movw	r1, #9712	; 0x25f0
   232f8:	movt	r1, #5
   232fc:	ldr	r3, [pc, #-1764]	; 22c20 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   23300:	movw	r0, #9800	; 0x2648
   23304:	movt	r0, #5
   23308:	movw	r2, #1219	; 0x4c3
   2330c:	bl	14014 <__assert_fail@plt>
   23310:	movw	r1, #9712	; 0x25f0
   23314:	movt	r1, #5
   23318:	ldr	r3, [pc, #-1784]	; 22c28 <__flatcc_fb_gen_c_json_parser@@Base+0x132c>
   2331c:	movw	r0, #9800	; 0x2648
   23320:	movt	r0, #5
   23324:	movw	r2, #1645	; 0x66d
   23328:	bl	14014 <__assert_fail@plt>
   2332c:	movw	r1, #9712	; 0x25f0
   23330:	movt	r1, #5
   23334:	ldr	r3, [pc, #-1804]	; 22c30 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   23338:	movw	r0, #9800	; 0x2648
   2333c:	movt	r0, #5
   23340:	movw	r2, #1610	; 0x64a
   23344:	bl	14014 <__assert_fail@plt>
   23348:	movw	r1, #11464	; 0x2cc8
   2334c:	movt	r1, #5
   23350:	movw	r3, #41128	; 0xa0a8
   23354:	movt	r3, #6
   23358:	movw	r2, #9712	; 0x25f0
   2335c:	movt	r2, #5
   23360:	str	r1, [sp]
   23364:	movw	r1, #64544	; 0xfc20
   23368:	movt	r1, #3
   2336c:	ldr	r0, [r3]
   23370:	mov	r3, #1392	; 0x570
   23374:	bl	13f60 <fprintf@plt>
   23378:	movw	r1, #9712	; 0x25f0
   2337c:	movt	r1, #5
   23380:	ldr	r3, [pc, #-1892]	; 22c24 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   23384:	movw	r0, #35672	; 0x8b58
   23388:	movt	r0, #4
   2338c:	mov	r2, #1392	; 0x570
   23390:	bl	14014 <__assert_fail@plt>
   23394:	movw	r1, #9712	; 0x25f0
   23398:	movt	r1, #5
   2339c:	ldr	r3, [pc, #-1916]	; 22c28 <__flatcc_fb_gen_c_json_parser@@Base+0x132c>
   233a0:	movw	r0, #9800	; 0x2648
   233a4:	movt	r0, #5
   233a8:	movw	r2, #1661	; 0x67d
   233ac:	bl	14014 <__assert_fail@plt>
   233b0:	movw	r1, #9712	; 0x25f0
   233b4:	movt	r1, #5
   233b8:	ldr	r3, [pc, #-1940]	; 22c2c <__flatcc_fb_gen_c_json_parser@@Base+0x1330>
   233bc:	movw	r0, #9800	; 0x2648
   233c0:	movt	r0, #5
   233c4:	movw	r2, #1716	; 0x6b4
   233c8:	bl	14014 <__assert_fail@plt>
   233cc:	movw	r1, #9712	; 0x25f0
   233d0:	movt	r1, #5
   233d4:	ldr	r3, [pc, #-1964]	; 22c30 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   233d8:	movw	r0, #9800	; 0x2648
   233dc:	movt	r0, #5
   233e0:	movw	r2, #1630	; 0x65e
   233e4:	bl	14014 <__assert_fail@plt>
   233e8:	movw	r1, #9712	; 0x25f0
   233ec:	movt	r1, #5
   233f0:	ldr	r3, [pc, #-1992]	; 22c30 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   233f4:	movw	r0, #9800	; 0x2648
   233f8:	movt	r0, #5
   233fc:	movw	r2, #1626	; 0x65a
   23400:	bl	14014 <__assert_fail@plt>
   23404:	movw	r3, #64556	; 0xfc2c
   23408:	movt	r3, #3
   2340c:	push	{lr}		; (str lr, [sp, #-4]!)
   23410:	sub	sp, sp, #12
   23414:	movw	r4, #64468	; 0xfbd4
   23418:	movt	r4, #3
   2341c:	movw	r0, #41128	; 0xa0a8
   23420:	movt	r0, #6
   23424:	mov	r2, r4
   23428:	str	r3, [sp]
   2342c:	movw	r1, #64544	; 0xfc20
   23430:	movt	r1, #3
   23434:	ldr	r0, [r0]
   23438:	mov	r3, #96	; 0x60
   2343c:	bl	13f60 <fprintf@plt>
   23440:	movw	r3, #18872	; 0x49b8
   23444:	movt	r3, #5
   23448:	movw	r0, #35672	; 0x8b58
   2344c:	movt	r0, #4
   23450:	mov	r1, r4
   23454:	mov	r2, #96	; 0x60
   23458:	bl	14014 <__assert_fail@plt>
   2345c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   23460:	mov	r2, #220	; 0xdc
   23464:	mov	r4, r1
   23468:	strd	r6, [sp, #8]
   2346c:	mov	r1, #0
   23470:	mov	r5, r0
   23474:	strd	r8, [sp, #16]
   23478:	strd	sl, [sp, #24]
   2347c:	str	lr, [sp, #32]
   23480:	sub	sp, sp, #468	; 0x1d4
   23484:	add	r0, sp, #24
   23488:	bl	13f78 <memset@plt>
   2348c:	mov	r2, #220	; 0xdc
   23490:	mov	r1, #0
   23494:	add	r0, sp, #244	; 0xf4
   23498:	bl	13f78 <memset@plt>
   2349c:	add	r2, sp, #24
   234a0:	mov	r1, r4
   234a4:	ldr	r0, [r4, #12]
   234a8:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   234ac:	ldr	r0, [r4, #40]	; 0x28
   234b0:	sub	r2, r0, #1
   234b4:	cmp	r2, #10
   234b8:	bhi	238c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   234bc:	ldrh	lr, [r4, #92]	; 0x5c
   234c0:	movw	r1, #18872	; 0x49b8
   234c4:	movt	r1, #5
   234c8:	add	r2, r1, r2, lsl #2
   234cc:	cmp	r0, #5
   234d0:	movw	r3, #39472	; 0x9a30
   234d4:	movt	r3, #4
   234d8:	moveq	r3, r5
   234dc:	ldr	ip, [r5, #204]	; 0xcc
   234e0:	ldr	r9, [r2, #20]
   234e4:	tst	lr, #32
   234e8:	ldr	r8, [r2, #64]	; 0x40
   234ec:	beq	236b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1dbc>
   234f0:	ldr	r2, [r4, #112]	; 0x70
   234f4:	ldr	r0, [r4, #116]	; 0x74
   234f8:	subs	r6, r2, #1
   234fc:	sbc	r7, r0, #0
   23500:	cmp	r7, #0
   23504:	cmpeq	r6, #3
   23508:	bhi	2388c <__flatcc_fb_gen_c_json_parser@@Base+0x1f90>
   2350c:	add	r2, r1, r6, lsl #3
   23510:	add	r1, r1, r6, lsl #2
   23514:	ldrd	r6, [r2, #112]	; 0x70
   23518:	ldr	sl, [r1, #144]	; 0x90
   2351c:	ldr	fp, [r1, #160]	; 0xa0
   23520:	ldr	r2, [r4, #20]
   23524:	cmp	r2, #0
   23528:	bne	23544 <__flatcc_fb_gen_c_json_parser@@Base+0x1c48>
   2352c:	b	2357c <__flatcc_fb_gen_c_json_parser@@Base+0x1c80>
   23530:	cmp	r1, #4
   23534:	beq	237a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23538:	ldr	r2, [r2]
   2353c:	cmp	r2, #0
   23540:	beq	2357c <__flatcc_fb_gen_c_json_parser@@Base+0x1c80>
   23544:	ldrh	r1, [r2, #56]	; 0x38
   23548:	cmp	r1, #5
   2354c:	beq	237a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   23550:	cmp	r1, #6
   23554:	bne	23530 <__flatcc_fb_gen_c_json_parser@@Base+0x1c34>
   23558:	ldrb	r0, [r2, #48]	; 0x30
   2355c:	mov	r1, #0
   23560:	ldr	r2, [r2]
   23564:	strd	r0, [sp, #16]
   23568:	ldr	r0, [sp, #16]
   2356c:	cmp	r2, #0
   23570:	bic	r0, r6, r0
   23574:	mov	r6, r0
   23578:	bne	23544 <__flatcc_fb_gen_c_json_parser@@Base+0x1c48>
   2357c:	add	r2, sp, #24
   23580:	mov	r0, ip
   23584:	str	r8, [sp]
   23588:	movw	r1, #19876	; 0x4da4
   2358c:	movt	r1, #5
   23590:	bl	13f60 <fprintf@plt>
   23594:	mov	r1, r8
   23598:	mov	r0, fp
   2359c:	bl	13e94 <strcmp@plt>
   235a0:	cmp	r0, #0
   235a4:	beq	23874 <__flatcc_fb_gen_c_json_parser@@Base+0x1f78>
   235a8:	movw	r1, #19132	; 0x4abc
   235ac:	movt	r1, #5
   235b0:	ldr	r0, [r5, #204]	; 0xcc
   235b4:	mov	r3, fp
   235b8:	mov	r2, fp
   235bc:	bl	13f60 <fprintf@plt>
   235c0:	mov	r2, #54	; 0x36
   235c4:	mov	r1, #1
   235c8:	ldr	r3, [r5, #204]	; 0xcc
   235cc:	movw	r0, #19168	; 0x4ae0
   235d0:	movt	r0, #5
   235d4:	bl	13ef4 <fwrite@plt>
   235d8:	mov	r0, #10
   235dc:	ldr	r1, [r5, #204]	; 0xcc
   235e0:	bl	13fc0 <fputc@plt>
   235e4:	orrs	r3, r6, r7
   235e8:	bne	238a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1fac>
   235ec:	movw	r0, #19324	; 0x4b7c
   235f0:	movt	r0, #5
   235f4:	ldr	r3, [r5, #204]	; 0xcc
   235f8:	mov	r2, #59	; 0x3b
   235fc:	mov	r1, #1
   23600:	bl	13ef4 <fwrite@plt>
   23604:	ldr	r4, [r4, #20]
   23608:	cmp	r4, #0
   2360c:	beq	23824 <__flatcc_fb_gen_c_json_parser@@Base+0x1f28>
   23610:	movw	r6, #19384	; 0x4bb8
   23614:	movt	r6, #5
   23618:	b	23650 <__flatcc_fb_gen_c_json_parser@@Base+0x1d54>
   2361c:	ldrb	r2, [r4, #48]	; 0x30
   23620:	mov	r3, #0
   23624:	mov	r1, r6
   23628:	ldr	lr, [r4, #4]
   2362c:	ldr	ip, [lr, #4]
   23630:	ldr	r0, [r5, #204]	; 0xcc
   23634:	str	ip, [sp, #12]
   23638:	ldr	lr, [lr]
   2363c:	stm	sp, {sl, ip, lr}
   23640:	bl	13f60 <fprintf@plt>
   23644:	ldr	r4, [r4]
   23648:	cmp	r4, #0
   2364c:	beq	23824 <__flatcc_fb_gen_c_json_parser@@Base+0x1f28>
   23650:	ldrh	r3, [r4, #56]	; 0x38
   23654:	cmp	r3, #5
   23658:	beq	23814 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   2365c:	cmp	r3, #6
   23660:	beq	2361c <__flatcc_fb_gen_c_json_parser@@Base+0x1d20>
   23664:	cmp	r3, #4
   23668:	beq	23814 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   2366c:	movw	r1, #19552	; 0x4c60
   23670:	movt	r1, #5
   23674:	movw	r3, #41128	; 0xa0a8
   23678:	movt	r3, #6
   2367c:	movw	r2, #19464	; 0x4c08
   23680:	movt	r2, #5
   23684:	str	r1, [sp]
   23688:	movw	r1, #64544	; 0xfc20
   2368c:	movt	r1, #3
   23690:	ldr	r0, [r3]
   23694:	mov	r3, #134	; 0x86
   23698:	bl	13f60 <fprintf@plt>
   2369c:	movw	r1, #19464	; 0x4c08
   236a0:	movt	r1, #5
   236a4:	ldr	r3, [pc, #544]	; 238cc <__flatcc_fb_gen_c_json_parser@@Base+0x1fd0>
   236a8:	movw	r0, #35672	; 0x8b58
   236ac:	movt	r0, #4
   236b0:	mov	r2, #134	; 0x86
   236b4:	bl	14014 <__assert_fail@plt>
   236b8:	add	r2, sp, #24
   236bc:	mov	r0, ip
   236c0:	str	r8, [sp]
   236c4:	movw	r1, #19876	; 0x4da4
   236c8:	movt	r1, #5
   236cc:	bl	13f60 <fprintf@plt>
   236d0:	movw	r0, #19948	; 0x4dec
   236d4:	movt	r0, #5
   236d8:	ldr	r3, [r5, #204]	; 0xcc
   236dc:	mov	r2, #18
   236e0:	mov	r1, #1
   236e4:	bl	13ef4 <fwrite@plt>
   236e8:	ldr	r4, [r4, #20]
   236ec:	cmp	r4, #0
   236f0:	beq	237f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef4>
   236f4:	movw	r8, #19612	; 0x4c9c
   236f8:	movt	r8, #5
   236fc:	movw	r7, #19748	; 0x4d24
   23700:	movt	r7, #5
   23704:	movw	r6, #19680	; 0x4ce0
   23708:	movt	r6, #5
   2370c:	b	23740 <__flatcc_fb_gen_c_json_parser@@Base+0x1e44>
   23710:	ldr	ip, [r4, #4]
   23714:	mov	r1, r7
   23718:	ldrb	r2, [r4, #48]	; 0x30
   2371c:	ldr	r0, [r5, #204]	; 0xcc
   23720:	ldr	r3, [ip, #4]
   23724:	str	r3, [sp, #4]
   23728:	ldr	ip, [ip]
   2372c:	str	ip, [sp]
   23730:	bl	13f60 <fprintf@plt>
   23734:	ldr	r4, [r4]
   23738:	cmp	r4, #0
   2373c:	beq	237f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef4>
   23740:	ldrh	r3, [r4, #56]	; 0x38
   23744:	cmp	r3, #5
   23748:	beq	237c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec4>
   2374c:	cmp	r3, #6
   23750:	beq	23710 <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   23754:	cmp	r3, #4
   23758:	beq	23808 <__flatcc_fb_gen_c_json_parser@@Base+0x1f0c>
   2375c:	movw	r1, #19552	; 0x4c60
   23760:	movt	r1, #5
   23764:	movw	r3, #41128	; 0xa0a8
   23768:	movt	r3, #6
   2376c:	movw	r2, #19464	; 0x4c08
   23770:	movt	r2, #5
   23774:	str	r1, [sp]
   23778:	movw	r1, #64544	; 0xfc20
   2377c:	movt	r1, #3
   23780:	ldr	r0, [r3]
   23784:	mov	r3, #157	; 0x9d
   23788:	bl	13f60 <fprintf@plt>
   2378c:	movw	r1, #19464	; 0x4c08
   23790:	movt	r1, #5
   23794:	ldr	r3, [pc, #304]	; 238cc <__flatcc_fb_gen_c_json_parser@@Base+0x1fd0>
   23798:	movw	r0, #35672	; 0x8b58
   2379c:	movt	r0, #4
   237a0:	mov	r2, #157	; 0x9d
   237a4:	bl	14014 <__assert_fail@plt>
   237a8:	ldrd	r0, [r2, #48]	; 0x30
   237ac:	bic	r0, r6, r0
   237b0:	bic	r1, r7, r1
   237b4:	mov	r6, r0
   237b8:	mov	r7, r1
   237bc:	b	23538 <__flatcc_fb_gen_c_json_parser@@Base+0x1c3c>
   237c0:	ldr	lr, [r4, #4]
   237c4:	mov	r1, r8
   237c8:	ldr	ip, [lr, #4]
   237cc:	ldrd	r2, [r4, #48]	; 0x30
   237d0:	ldr	r0, [r5, #204]	; 0xcc
   237d4:	str	ip, [sp, #8]
   237d8:	ldr	lr, [lr]
   237dc:	stm	sp, {ip, lr}
   237e0:	bl	13f60 <fprintf@plt>
   237e4:	ldr	r4, [r4]
   237e8:	cmp	r4, #0
   237ec:	bne	23740 <__flatcc_fb_gen_c_json_parser@@Base+0x1e44>
   237f0:	mov	r2, r9
   237f4:	movw	r1, #19816	; 0x4d68
   237f8:	movt	r1, #5
   237fc:	ldr	r0, [r5, #204]	; 0xcc
   23800:	bl	13f60 <fprintf@plt>
   23804:	b	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x1f40>
   23808:	mov	r1, r6
   2380c:	ldr	lr, [r4, #4]
   23810:	b	237c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ecc>
   23814:	mov	r1, r6
   23818:	ldr	lr, [r4, #4]
   2381c:	ldrd	r2, [r4, #48]	; 0x30
   23820:	b	2362c <__flatcc_fb_gen_c_json_parser@@Base+0x1d30>
   23824:	movw	r0, #19324	; 0x4b7c
   23828:	movt	r0, #5
   2382c:	ldr	r3, [r5, #204]	; 0xcc
   23830:	mov	r2, #59	; 0x3b
   23834:	mov	r1, #1
   23838:	bl	13ef4 <fwrite@plt>
   2383c:	ldr	r3, [r5, #204]	; 0xcc
   23840:	mov	r2, #3
   23844:	mov	r1, #1
   23848:	movw	r0, #7124	; 0x1bd4
   2384c:	movt	r0, #5
   23850:	bl	13ef4 <fwrite@plt>
   23854:	mov	r0, #0
   23858:	add	sp, sp, #468	; 0x1d4
   2385c:	ldrd	r4, [sp]
   23860:	ldrd	r6, [sp, #8]
   23864:	ldrd	r8, [sp, #16]
   23868:	ldrd	sl, [sp, #24]
   2386c:	add	sp, sp, #32
   23870:	pop	{pc}		; (ldr pc, [sp], #4)
   23874:	mov	r2, fp
   23878:	movw	r1, #19152	; 0x4ad0
   2387c:	movt	r1, #5
   23880:	ldr	r0, [r5, #204]	; 0xcc
   23884:	bl	13f60 <fprintf@plt>
   23888:	b	235c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc4>
   2388c:	movw	fp, #29680	; 0x73f0
   23890:	movt	fp, #4
   23894:	movw	sl, #19128	; 0x4ab8
   23898:	movt	sl, #5
   2389c:	mvn	r6, #0
   238a0:	mvn	r7, #0
   238a4:	b	23520 <__flatcc_fb_gen_c_json_parser@@Base+0x1c24>
   238a8:	mov	r2, r6
   238ac:	mov	r3, r7
   238b0:	str	r9, [sp]
   238b4:	movw	r1, #19224	; 0x4b18
   238b8:	movt	r1, #5
   238bc:	ldr	r0, [r5, #204]	; 0xcc
   238c0:	bl	13f60 <fprintf@plt>
   238c4:	b	235ec <__flatcc_fb_gen_c_json_parser@@Base+0x1cf0>
   238c8:	bl	23404 <__flatcc_fb_gen_c_json_parser@@Base+0x1b08>
   238cc:	andeq	r4, r5, r8, ror #20
   238d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   238d4:	mov	r2, #220	; 0xdc
   238d8:	mov	r4, r1
   238dc:	strd	r6, [sp, #8]
   238e0:	mov	r5, r0
   238e4:	mov	r1, #0
   238e8:	str	r8, [sp, #16]
   238ec:	str	lr, [sp, #20]
   238f0:	sub	sp, sp, #448	; 0x1c0
   238f4:	add	r0, sp, #8
   238f8:	bl	13f78 <memset@plt>
   238fc:	mov	r2, #220	; 0xdc
   23900:	mov	r1, #0
   23904:	add	r0, sp, #228	; 0xe4
   23908:	bl	13f78 <memset@plt>
   2390c:	mov	r1, r4
   23910:	add	r2, sp, #8
   23914:	ldr	r0, [r4, #12]
   23918:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   2391c:	add	r2, sp, #8
   23920:	movw	r1, #19968	; 0x4e00
   23924:	movt	r1, #5
   23928:	ldr	r0, [r5]
   2392c:	bl	13f60 <fprintf@plt>
   23930:	ldr	r4, [r4, #20]
   23934:	cmp	r4, #0
   23938:	beq	23a1c <__flatcc_fb_gen_c_json_parser@@Base+0x2120>
   2393c:	movw	r6, #20344	; 0x4f78
   23940:	movt	r6, #5
   23944:	movw	r8, #20100	; 0x4e84
   23948:	movt	r8, #5
   2394c:	movw	r7, #20200	; 0x4ee8
   23950:	movt	r7, #5
   23954:	b	23998 <__flatcc_fb_gen_c_json_parser@@Base+0x209c>
   23958:	ldr	r1, [r4, #16]
   2395c:	add	r2, sp, #228	; 0xe4
   23960:	ldr	r0, [r1, #12]
   23964:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   23968:	ldr	r3, [r4, #16]
   2396c:	ldrh	r3, [r3, #8]
   23970:	cmp	r3, #0
   23974:	bne	23a68 <__flatcc_fb_gen_c_json_parser@@Base+0x216c>
   23978:	add	r3, sp, #228	; 0xe4
   2397c:	mov	r1, r8
   23980:	ldr	r0, [r5]
   23984:	ldr	r2, [r4, #48]	; 0x30
   23988:	bl	13f60 <fprintf@plt>
   2398c:	ldr	r4, [r4]
   23990:	cmp	r4, #0
   23994:	beq	23a1c <__flatcc_fb_gen_c_json_parser@@Base+0x2120>
   23998:	ldrh	r3, [r4, #24]
   2399c:	cmp	r3, #10
   239a0:	beq	23a00 <__flatcc_fb_gen_c_json_parser@@Base+0x2104>
   239a4:	cmp	r3, #14
   239a8:	beq	23958 <__flatcc_fb_gen_c_json_parser@@Base+0x205c>
   239ac:	cmp	r3, #0
   239b0:	beq	2398c <__flatcc_fb_gen_c_json_parser@@Base+0x2090>
   239b4:	movw	r1, #20304	; 0x4f50
   239b8:	movt	r1, #5
   239bc:	movw	r3, #41128	; 0xa0a8
   239c0:	movt	r3, #6
   239c4:	movw	r2, #19464	; 0x4c08
   239c8:	movt	r2, #5
   239cc:	str	r1, [sp]
   239d0:	movw	r1, #64544	; 0xfc20
   239d4:	movt	r1, #3
   239d8:	ldr	r0, [r3]
   239dc:	mov	r3, #251	; 0xfb
   239e0:	bl	13f60 <fprintf@plt>
   239e4:	movw	r1, #19464	; 0x4c08
   239e8:	movt	r1, #5
   239ec:	ldr	r3, [pc, #224]	; 23ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   239f0:	movw	r0, #35672	; 0x8b58
   239f4:	movt	r0, #4
   239f8:	mov	r2, #251	; 0xfb
   239fc:	bl	14014 <__assert_fail@plt>
   23a00:	mov	r1, r6
   23a04:	ldr	r0, [r5]
   23a08:	ldr	r2, [r4, #48]	; 0x30
   23a0c:	bl	13f60 <fprintf@plt>
   23a10:	ldr	r4, [r4]
   23a14:	cmp	r4, #0
   23a18:	bne	23998 <__flatcc_fb_gen_c_json_parser@@Base+0x209c>
   23a1c:	mov	r2, #28
   23a20:	mov	r1, #1
   23a24:	ldr	r3, [r5]
   23a28:	movw	r0, #20424	; 0x4fc8
   23a2c:	movt	r0, #5
   23a30:	bl	13ef4 <fwrite@plt>
   23a34:	ldr	r3, [r5]
   23a38:	mov	r2, #9
   23a3c:	mov	r1, #1
   23a40:	movw	r0, #20456	; 0x4fe8
   23a44:	movt	r0, #5
   23a48:	bl	13ef4 <fwrite@plt>
   23a4c:	mov	r0, #0
   23a50:	add	sp, sp, #448	; 0x1c0
   23a54:	ldrd	r4, [sp]
   23a58:	ldrd	r6, [sp, #8]
   23a5c:	ldr	r8, [sp, #16]
   23a60:	add	sp, sp, #20
   23a64:	pop	{pc}		; (ldr pc, [sp], #4)
   23a68:	cmp	r3, #1
   23a6c:	bne	23a88 <__flatcc_fb_gen_c_json_parser@@Base+0x218c>
   23a70:	add	r3, sp, #228	; 0xe4
   23a74:	mov	r1, r7
   23a78:	ldr	r0, [r5]
   23a7c:	ldr	r2, [r4, #48]	; 0x30
   23a80:	bl	13f60 <fprintf@plt>
   23a84:	b	2398c <__flatcc_fb_gen_c_json_parser@@Base+0x2090>
   23a88:	movw	r1, #20304	; 0x4f50
   23a8c:	movt	r1, #5
   23a90:	movw	r3, #41128	; 0xa0a8
   23a94:	movt	r3, #6
   23a98:	movw	r2, #19464	; 0x4c08
   23a9c:	movt	r2, #5
   23aa0:	str	r1, [sp]
   23aa4:	movw	r1, #64544	; 0xfc20
   23aa8:	movt	r1, #3
   23aac:	ldr	r0, [r3]
   23ab0:	mov	r3, #240	; 0xf0
   23ab4:	bl	13f60 <fprintf@plt>
   23ab8:	movw	r1, #19464	; 0x4c08
   23abc:	movt	r1, #5
   23ac0:	ldr	r3, [pc, #12]	; 23ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   23ac4:	movw	r0, #35672	; 0x8b58
   23ac8:	movt	r0, #4
   23acc:	mov	r2, #240	; 0xf0
   23ad0:	bl	14014 <__assert_fail@plt>
   23ad4:	andeq	r4, r5, r0, lsl #21
   23ad8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   23adc:	mov	r2, #220	; 0xdc
   23ae0:	mov	r4, r1
   23ae4:	strd	r6, [sp, #8]
   23ae8:	mov	r1, #0
   23aec:	mov	r6, r0
   23af0:	strd	r8, [sp, #16]
   23af4:	strd	sl, [sp, #24]
   23af8:	str	lr, [sp, #32]
   23afc:	sub	sp, sp, #476	; 0x1dc
   23b00:	add	r0, sp, #32
   23b04:	add	r7, sp, #252	; 0xfc
   23b08:	bl	13f78 <memset@plt>
   23b0c:	mov	r2, #220	; 0xdc
   23b10:	mov	r1, #0
   23b14:	mov	r0, r7
   23b18:	bl	13f78 <memset@plt>
   23b1c:	mov	r1, r4
   23b20:	add	r2, sp, #32
   23b24:	ldr	r0, [r4, #12]
   23b28:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   23b2c:	add	r2, sp, #32
   23b30:	movw	r1, #20468	; 0x4ff4
   23b34:	movt	r1, #5
   23b38:	ldr	r0, [r6]
   23b3c:	bl	13f60 <fprintf@plt>
   23b40:	ldr	r4, [r4, #20]
   23b44:	cmp	r4, #0
   23b48:	beq	23c70 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   23b4c:	movw	r3, #20724	; 0x50f4
   23b50:	movt	r3, #5
   23b54:	movw	r8, #18872	; 0x49b8
   23b58:	movt	r8, #5
   23b5c:	movw	r9, #20548	; 0x5044
   23b60:	movt	r9, #5
   23b64:	str	r3, [sp, #28]
   23b68:	mov	r5, #0
   23b6c:	b	23c00 <__flatcc_fb_gen_c_json_parser@@Base+0x2304>
   23b70:	cmp	r3, #14
   23b74:	bne	23bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f4>
   23b78:	ldr	r1, [r4, #16]
   23b7c:	mov	r2, r7
   23b80:	ldr	r0, [r1, #12]
   23b84:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   23b88:	ldr	r2, [r4, #16]
   23b8c:	ldrh	r3, [r2, #8]
   23b90:	cmp	r3, #1
   23b94:	beq	23cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x23c4>
   23b98:	cmp	r3, #3
   23b9c:	bne	23bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f4>
   23ba0:	ldr	r3, [r2, #40]	; 0x28
   23ba4:	sub	r3, r3, #1
   23ba8:	cmp	r3, #10
   23bac:	bhi	23d48 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   23bb0:	ldr	ip, [r4, #4]
   23bb4:	add	r2, r8, r3, lsl #2
   23bb8:	movw	r1, #20624	; 0x5090
   23bbc:	movt	r1, #5
   23bc0:	mov	r3, r5
   23bc4:	ldr	r2, [r2, #20]
   23bc8:	ldr	lr, [ip, #4]
   23bcc:	str	r7, [sp, #20]
   23bd0:	ldr	r0, [r6]
   23bd4:	str	lr, [sp, #16]
   23bd8:	ldr	ip, [ip]
   23bdc:	str	lr, [sp, #8]
   23be0:	str	ip, [sp, #12]
   23be4:	ldrd	sl, [r4, #80]	; 0x50
   23be8:	strd	sl, [sp]
   23bec:	bl	13f60 <fprintf@plt>
   23bf0:	ldr	r4, [r4]
   23bf4:	add	r5, r5, #1
   23bf8:	cmp	r4, #0
   23bfc:	beq	23c70 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   23c00:	ldrh	r3, [r4, #72]	; 0x48
   23c04:	tst	r3, #4
   23c08:	bne	23bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f4>
   23c0c:	ldrh	r3, [r4, #24]
   23c10:	cmp	r3, #8
   23c14:	bne	23b70 <__flatcc_fb_gen_c_json_parser@@Base+0x2274>
   23c18:	ldr	r3, [r4, #16]
   23c1c:	sub	r3, r3, #1
   23c20:	cmp	r3, #10
   23c24:	bhi	23cf8 <__flatcc_fb_gen_c_json_parser@@Base+0x23fc>
   23c28:	ldr	ip, [r4, #4]
   23c2c:	add	r2, r8, r3, lsl #2
   23c30:	mov	r1, r9
   23c34:	mov	r3, r5
   23c38:	add	r5, r5, #1
   23c3c:	ldr	r0, [r6]
   23c40:	ldr	r2, [r2, #20]
   23c44:	ldr	lr, [ip, #4]
   23c48:	str	lr, [sp, #16]
   23c4c:	ldr	ip, [ip]
   23c50:	str	lr, [sp, #8]
   23c54:	str	ip, [sp, #12]
   23c58:	ldrd	sl, [r4, #80]	; 0x50
   23c5c:	strd	sl, [sp]
   23c60:	bl	13f60 <fprintf@plt>
   23c64:	ldr	r4, [r4]
   23c68:	cmp	r4, #0
   23c6c:	bne	23c00 <__flatcc_fb_gen_c_json_parser@@Base+0x2304>
   23c70:	mov	r2, #3
   23c74:	mov	r1, #1
   23c78:	ldr	r3, [r6]
   23c7c:	movw	r0, #7124	; 0x1bd4
   23c80:	movt	r0, #5
   23c84:	bl	13ef4 <fwrite@plt>
   23c88:	add	r3, sp, #32
   23c8c:	movw	r1, #20828	; 0x515c
   23c90:	movt	r1, #5
   23c94:	mov	r2, r3
   23c98:	ldr	r0, [r6]
   23c9c:	bl	13f60 <fprintf@plt>
   23ca0:	mov	r0, #0
   23ca4:	add	sp, sp, #476	; 0x1dc
   23ca8:	ldrd	r4, [sp]
   23cac:	ldrd	r6, [sp, #8]
   23cb0:	ldrd	r8, [sp, #16]
   23cb4:	ldrd	sl, [sp, #24]
   23cb8:	add	sp, sp, #32
   23cbc:	pop	{pc}		; (ldr pc, [sp], #4)
   23cc0:	ldr	ip, [r4, #4]
   23cc4:	mov	r2, r5
   23cc8:	ldr	r0, [r6]
   23ccc:	ldr	r1, [sp, #28]
   23cd0:	ldr	r3, [ip, #4]
   23cd4:	str	r3, [sp, #16]
   23cd8:	str	r7, [sp, #20]
   23cdc:	ldr	ip, [ip]
   23ce0:	str	r3, [sp, #8]
   23ce4:	str	ip, [sp, #12]
   23ce8:	ldrd	sl, [r4, #80]	; 0x50
   23cec:	strd	sl, [sp]
   23cf0:	bl	13f60 <fprintf@plt>
   23cf4:	b	23bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x22f4>
   23cf8:	movw	r1, #64556	; 0xfc2c
   23cfc:	movt	r1, #3
   23d00:	movw	r3, #41128	; 0xa0a8
   23d04:	movt	r3, #6
   23d08:	movw	r2, #64468	; 0xfbd4
   23d0c:	movt	r2, #3
   23d10:	str	r1, [sp]
   23d14:	movw	r1, #64544	; 0xfc20
   23d18:	movt	r1, #3
   23d1c:	ldr	r0, [r3]
   23d20:	mov	r3, #96	; 0x60
   23d24:	bl	13f60 <fprintf@plt>
   23d28:	movw	r3, #18872	; 0x49b8
   23d2c:	movt	r3, #5
   23d30:	movw	r1, #64468	; 0xfbd4
   23d34:	movt	r1, #3
   23d38:	movw	r0, #35672	; 0x8b58
   23d3c:	movt	r0, #4
   23d40:	mov	r2, #96	; 0x60
   23d44:	bl	14014 <__assert_fail@plt>
   23d48:	bl	23404 <__flatcc_fb_gen_c_json_parser@@Base+0x1b08>
   23d4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   23d50:	mov	r2, #220	; 0xdc
   23d54:	strd	r6, [sp, #8]
   23d58:	strd	r8, [sp, #16]
   23d5c:	mov	r9, r1
   23d60:	mov	r8, r0
   23d64:	strd	sl, [sp, #24]
   23d68:	mov	r1, #0
   23d6c:	str	lr, [sp, #32]
   23d70:	sub	sp, sp, #500	; 0x1f4
   23d74:	add	r0, sp, #56	; 0x38
   23d78:	bl	13f78 <memset@plt>
   23d7c:	mov	r2, #220	; 0xdc
   23d80:	mov	r1, #0
   23d84:	add	r0, sp, #276	; 0x114
   23d88:	bl	13f78 <memset@plt>
   23d8c:	add	r2, sp, #56	; 0x38
   23d90:	mov	r1, r9
   23d94:	ldr	r0, [r9, #12]
   23d98:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   23d9c:	ldrd	r4, [r9, #96]	; 0x60
   23da0:	mov	r1, #4
   23da4:	mov	r0, r4
   23da8:	bl	13e7c <calloc@plt>
   23dac:	orrs	r3, r4, r5
   23db0:	str	r0, [sp, #44]	; 0x2c
   23db4:	movne	r3, #1
   23db8:	moveq	r3, #0
   23dbc:	cmp	r0, #0
   23dc0:	movne	r3, #0
   23dc4:	cmp	r3, #0
   23dc8:	bne	24374 <__flatcc_fb_gen_c_json_parser@@Base+0x2a78>
   23dcc:	ldr	r3, [r9, #20]
   23dd0:	cmp	r3, #0
   23dd4:	movne	r2, r0
   23dd8:	movne	r1, r2
   23ddc:	beq	23df4 <__flatcc_fb_gen_c_json_parser@@Base+0x24f8>
   23de0:	ldr	r2, [r3, #96]	; 0x60
   23de4:	str	r3, [r1, r2, lsl #2]
   23de8:	ldr	r3, [r3]
   23dec:	cmp	r3, #0
   23df0:	bne	23de0 <__flatcc_fb_gen_c_json_parser@@Base+0x24e4>
   23df4:	movw	r1, #21088	; 0x5260
   23df8:	movt	r1, #5
   23dfc:	ldr	r0, [r8]
   23e00:	add	r2, sp, #56	; 0x38
   23e04:	bl	13f60 <fprintf@plt>
   23e08:	ldrd	r0, [r9, #96]	; 0x60
   23e0c:	orrs	r3, r0, r1
   23e10:	beq	24320 <__flatcc_fb_gen_c_json_parser@@Base+0x2a24>
   23e14:	movw	r2, #22740	; 0x58d4
   23e18:	movt	r2, #5
   23e1c:	ldr	r3, [r8]
   23e20:	movw	sl, #21196	; 0x52cc
   23e24:	movt	sl, #5
   23e28:	mov	r4, #0
   23e2c:	mov	r5, #0
   23e30:	str	r2, [sp, #48]	; 0x30
   23e34:	movw	r2, #22640	; 0x5870
   23e38:	movt	r2, #5
   23e3c:	str	sl, [sp, #40]	; 0x28
   23e40:	str	r2, [sp, #52]	; 0x34
   23e44:	ldr	r2, [sp, #44]	; 0x2c
   23e48:	sub	r7, r2, #4
   23e4c:	ldr	r6, [r7, #4]!
   23e50:	cmp	r6, #0
   23e54:	beq	23f4c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   23e58:	ldrh	r2, [r6, #72]	; 0x48
   23e5c:	tst	r2, #4
   23e60:	bne	23f4c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   23e64:	mov	r2, #5
   23e68:	mov	r1, #1
   23e6c:	ldr	r0, [sp, #40]	; 0x28
   23e70:	bl	13ef4 <fwrite@plt>
   23e74:	ldrh	r3, [r6, #24]
   23e78:	sub	r3, r3, #7
   23e7c:	cmp	r3, #8
   23e80:	ldrls	pc, [pc, r3, lsl #2]
   23e84:	b	23f44 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   23e88:	andeq	r4, r2, r4, lsl r0
   23e8c:	ldrdeq	r3, [r2], -r0
   23e90:	andeq	r3, r2, r0, asr #31
   23e94:	andeq	r3, r2, ip, lsl pc
   23e98:	andeq	r3, r2, r4, asr #30
   23e9c:	andeq	r3, r2, r4, asr #30
   23ea0:	andeq	r3, r2, r4, asr #30
   23ea4:	andeq	r3, r2, r4, ror #29
   23ea8:	andeq	r3, r2, ip, lsr #29
   23eac:	ldr	r1, [r6, #16]
   23eb0:	add	r2, sp, #276	; 0x114
   23eb4:	ldr	r0, [r1, #12]
   23eb8:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   23ebc:	ldr	r3, [r6, #16]
   23ec0:	ldrh	r3, [r3, #8]
   23ec4:	cmp	r3, #4
   23ec8:	ldrls	pc, [pc, r3, lsl #2]
   23ecc:	b	24328 <__flatcc_fb_gen_c_json_parser@@Base+0x2a2c>
   23ed0:	andeq	r4, r2, r4, ror #3
   23ed4:	andeq	r4, r2, r8, lsr #3
   23ed8:	andeq	r4, r2, r8, lsr #6
   23edc:	andeq	r4, r2, r4, asr #2
   23ee0:	andeq	r4, r2, r0, lsl r1
   23ee4:	ldr	r1, [r6, #16]
   23ee8:	add	r2, sp, #276	; 0x114
   23eec:	ldr	r0, [r1, #12]
   23ef0:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   23ef4:	ldr	r2, [r6, #16]
   23ef8:	ldrh	r3, [r2, #8]
   23efc:	cmp	r3, #4
   23f00:	ldrls	pc, [pc, r3, lsl #2]
   23f04:	b	24460 <__flatcc_fb_gen_c_json_parser@@Base+0x2b64>
   23f08:	andeq	r4, r2, r4, lsl #5
   23f0c:	andeq	r4, r2, r4, ror r2
   23f10:	andeq	r4, r2, r0, ror #8
   23f14:	andeq	r4, r2, r4, lsl #4
   23f18:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   23f1c:	ldr	lr, [r6, #4]
   23f20:	movw	r1, #21736	; 0x54e8
   23f24:	movt	r1, #5
   23f28:	ldr	ip, [lr, #4]
   23f2c:	ldr	r0, [r8]
   23f30:	ldrd	r2, [r6, #96]	; 0x60
   23f34:	str	ip, [sp, #8]
   23f38:	ldr	lr, [lr]
   23f3c:	stm	sp, {ip, lr}
   23f40:	bl	13f60 <fprintf@plt>
   23f44:	ldr	r3, [r8]
   23f48:	ldrd	r0, [r9, #96]	; 0x60
   23f4c:	adds	r4, r4, #1
   23f50:	adc	r5, r5, #0
   23f54:	cmp	r5, r1
   23f58:	cmpeq	r4, r0
   23f5c:	bcc	23e4c <__flatcc_fb_gen_c_json_parser@@Base+0x2550>
   23f60:	mov	r2, #4
   23f64:	mov	r1, #1
   23f68:	movw	r0, #23136	; 0x5a60
   23f6c:	movt	r0, #5
   23f70:	bl	13ef4 <fwrite@plt>
   23f74:	add	r3, sp, #56	; 0x38
   23f78:	movw	r1, #22928	; 0x5990
   23f7c:	movt	r1, #5
   23f80:	mov	r2, r3
   23f84:	ldr	r0, [r8]
   23f88:	bl	13f60 <fprintf@plt>
   23f8c:	ldr	r3, [sp, #44]	; 0x2c
   23f90:	cmp	r3, #0
   23f94:	beq	23fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x26a4>
   23f98:	mov	r0, r3
   23f9c:	bl	13eac <free@plt>
   23fa0:	mov	r0, #0
   23fa4:	add	sp, sp, #500	; 0x1f4
   23fa8:	ldrd	r4, [sp]
   23fac:	ldrd	r6, [sp, #8]
   23fb0:	ldrd	r8, [sp, #16]
   23fb4:	ldrd	sl, [sp, #24]
   23fb8:	add	sp, sp, #32
   23fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   23fc0:	movw	r1, #21800	; 0x5528
   23fc4:	movt	r1, #5
   23fc8:	ldr	lr, [r6, #4]
   23fcc:	b	23f28 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23fd0:	ldr	r3, [r6, #16]
   23fd4:	sub	r2, r3, #1
   23fd8:	cmp	r2, #10
   23fdc:	bhi	24410 <__flatcc_fb_gen_c_json_parser@@Base+0x2b14>
   23fe0:	ldrh	r1, [r6, #56]	; 0x38
   23fe4:	movw	r3, #18872	; 0x49b8
   23fe8:	movt	r3, #5
   23fec:	add	r3, r3, r2, lsl #2
   23ff0:	ldr	r2, [r3, #20]
   23ff4:	sub	r3, r1, #3
   23ff8:	cmp	r3, #3
   23ffc:	ldrls	pc, [pc, r3, lsl #2]
   24000:	b	244ac <__flatcc_fb_gen_c_json_parser@@Base+0x2bb0>
   24004:	andeq	r4, r2, ip, asr #1
   24008:	strheq	r4, [r2], -ip
   2400c:	andeq	r4, r2, r0, lsl #1
   24010:	andeq	r4, r2, r0, lsl #1
   24014:	ldrh	r3, [r6, #72]	; 0x48
   24018:	tst	r3, #3072	; 0xc00
   2401c:	bne	24294 <__flatcc_fb_gen_c_json_parser@@Base+0x2998>
   24020:	ldr	r1, [r6, #104]	; 0x68
   24024:	cmp	r1, #0
   24028:	beq	242b4 <__flatcc_fb_gen_c_json_parser@@Base+0x29b8>
   2402c:	add	r2, sp, #276	; 0x114
   24030:	ldr	r0, [r1, #12]
   24034:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   24038:	ldr	lr, [r6, #4]
   2403c:	ldr	r3, [r6, #104]	; 0x68
   24040:	ldrh	r3, [r3, #8]
   24044:	cmp	r3, #0
   24048:	movweq	r1, #21476	; 0x53e4
   2404c:	movwne	r1, #21572	; 0x5444
   24050:	movteq	r1, #5
   24054:	movtne	r1, #5
   24058:	ldr	ip, [lr, #4]
   2405c:	add	r0, sp, #276	; 0x114
   24060:	ldrd	r2, [r6, #96]	; 0x60
   24064:	str	r0, [sp, #12]
   24068:	ldr	r0, [r8]
   2406c:	str	ip, [sp, #8]
   24070:	ldr	lr, [lr]
   24074:	stm	sp, {ip, lr}
   24078:	bl	13f60 <fprintf@plt>
   2407c:	b	23f44 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   24080:	ldr	r3, [r6, #4]
   24084:	movw	r1, #21204	; 0x52d4
   24088:	movt	r1, #5
   2408c:	ldr	ip, [r3, #4]
   24090:	ldrd	sl, [r6, #48]	; 0x30
   24094:	strd	sl, [sp, #24]
   24098:	ldr	r0, [r8]
   2409c:	str	ip, [sp, #16]
   240a0:	ldr	r3, [r3]
   240a4:	str	ip, [sp, #8]
   240a8:	str	r3, [sp, #12]
   240ac:	ldrd	sl, [r6, #96]	; 0x60
   240b0:	strd	sl, [sp]
   240b4:	bl	13f60 <fprintf@plt>
   240b8:	b	23f44 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   240bc:	movw	r1, #21268	; 0x5314
   240c0:	movt	r1, #5
   240c4:	ldr	r3, [r6, #4]
   240c8:	b	2408c <__flatcc_fb_gen_c_json_parser@@Base+0x2790>
   240cc:	ldr	ip, [r6, #4]
   240d0:	movw	r1, #21332	; 0x5354
   240d4:	movt	r1, #5
   240d8:	vldr	d7, [r6, #48]	; 0x30
   240dc:	ldr	r3, [ip, #4]
   240e0:	vstr	d7, [sp, #24]
   240e4:	ldr	r0, [r8]
   240e8:	str	r3, [sp, #16]
   240ec:	ldr	ip, [ip]
   240f0:	str	r3, [sp, #8]
   240f4:	str	ip, [sp, #12]
   240f8:	ldrd	sl, [r6, #96]	; 0x60
   240fc:	strd	sl, [sp]
   24100:	bl	13f60 <fprintf@plt>
   24104:	ldr	r3, [r8]
   24108:	ldrd	r0, [r9, #96]	; 0x60
   2410c:	b	23f4c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24110:	ldr	lr, [r6, #4]
   24114:	ldr	r1, [sp, #48]	; 0x30
   24118:	add	r0, sp, #276	; 0x114
   2411c:	ldr	ip, [lr, #4]
   24120:	ldrd	r2, [r6, #96]	; 0x60
   24124:	str	r0, [sp, #12]
   24128:	str	r0, [sp, #16]
   2412c:	ldr	r0, [r8]
   24130:	str	ip, [sp, #8]
   24134:	ldr	lr, [lr]
   24138:	stm	sp, {ip, lr}
   2413c:	bl	13f60 <fprintf@plt>
   24140:	b	23f44 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   24144:	ldr	r3, [r6, #16]
   24148:	sub	r2, r3, #1
   2414c:	cmp	r2, #10
   24150:	bhi	2440c <__flatcc_fb_gen_c_json_parser@@Base+0x2b10>
   24154:	ldr	ip, [r6, #4]
   24158:	movw	r3, #18872	; 0x49b8
   2415c:	movt	r3, #5
   24160:	add	r3, r3, r2, lsl #2
   24164:	add	r0, sp, #276	; 0x114
   24168:	movw	r1, #22544	; 0x5810
   2416c:	movt	r1, #5
   24170:	ldrd	sl, [r9, #112]	; 0x70
   24174:	ldr	r2, [r3, #20]
   24178:	ldr	r3, [ip, #4]
   2417c:	strd	sl, [sp, #24]
   24180:	str	r0, [sp, #32]
   24184:	ldr	r0, [r8]
   24188:	str	r3, [sp, #16]
   2418c:	ldr	ip, [ip]
   24190:	str	r3, [sp, #8]
   24194:	str	ip, [sp, #12]
   24198:	ldrd	sl, [r6, #96]	; 0x60
   2419c:	strd	sl, [sp]
   241a0:	bl	13f60 <fprintf@plt>
   241a4:	b	23f44 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   241a8:	ldr	ip, [r6, #4]
   241ac:	add	lr, sp, #276	; 0x114
   241b0:	ldrd	r2, [r6, #96]	; 0x60
   241b4:	ldr	r1, [sp, #52]	; 0x34
   241b8:	ldr	r0, [ip, #4]
   241bc:	str	lr, [sp, #24]
   241c0:	ldrd	sl, [r6, #88]	; 0x58
   241c4:	str	r0, [sp, #8]
   241c8:	strd	sl, [sp, #16]
   241cc:	ldr	ip, [ip]
   241d0:	str	r0, [sp]
   241d4:	ldr	r0, [r8]
   241d8:	str	ip, [sp, #4]
   241dc:	bl	13f60 <fprintf@plt>
   241e0:	b	23f44 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   241e4:	movw	r1, #22452	; 0x57b4
   241e8:	movt	r1, #5
   241ec:	ldr	lr, [r6, #4]
   241f0:	b	24058 <__flatcc_fb_gen_c_json_parser@@Base+0x275c>
   241f4:	movw	r1, #22280	; 0x5708
   241f8:	movt	r1, #5
   241fc:	ldr	lr, [r6, #4]
   24200:	b	24118 <__flatcc_fb_gen_c_json_parser@@Base+0x281c>
   24204:	ldr	r3, [r2, #40]	; 0x28
   24208:	sub	r2, r3, #1
   2420c:	cmp	r2, #10
   24210:	bhi	2440c <__flatcc_fb_gen_c_json_parser@@Base+0x2b10>
   24214:	ldrh	r1, [r6, #56]	; 0x38
   24218:	movw	r3, #18872	; 0x49b8
   2421c:	movt	r3, #5
   24220:	add	r3, r3, r2, lsl #2
   24224:	ldr	r2, [r3, #20]
   24228:	cmp	r1, #4
   2422c:	beq	24310 <__flatcc_fb_gen_c_json_parser@@Base+0x2a14>
   24230:	bcc	243c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ac4>
   24234:	cmp	r1, #6
   24238:	bhi	243c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ac4>
   2423c:	ldr	r3, [r6, #4]
   24240:	movw	r1, #21872	; 0x5570
   24244:	movt	r1, #5
   24248:	add	lr, sp, #276	; 0x114
   2424c:	ldr	r0, [r8]
   24250:	ldr	ip, [r3, #4]
   24254:	str	lr, [sp, #32]
   24258:	ldrd	sl, [r6, #48]	; 0x30
   2425c:	str	ip, [sp, #16]
   24260:	strd	sl, [sp, #24]
   24264:	ldr	r3, [r3]
   24268:	str	ip, [sp, #8]
   2426c:	str	r3, [sp, #12]
   24270:	b	24198 <__flatcc_fb_gen_c_json_parser@@Base+0x289c>
   24274:	movw	r1, #22112	; 0x5660
   24278:	movt	r1, #5
   2427c:	ldr	lr, [r6, #4]
   24280:	b	24058 <__flatcc_fb_gen_c_json_parser@@Base+0x275c>
   24284:	movw	r1, #22196	; 0x56b4
   24288:	movt	r1, #5
   2428c:	ldr	lr, [r6, #4]
   24290:	b	24058 <__flatcc_fb_gen_c_json_parser@@Base+0x275c>
   24294:	ldr	lr, [r6, #4]
   24298:	eor	r3, r3, #1024	; 0x400
   2429c:	movw	r1, #21396	; 0x5394
   242a0:	movt	r1, #5
   242a4:	ubfx	r0, r3, #10, #1
   242a8:	ldrd	r2, [r6, #96]	; 0x60
   242ac:	ldr	ip, [lr, #4]
   242b0:	b	24064 <__flatcc_fb_gen_c_json_parser@@Base+0x2768>
   242b4:	ldr	r3, [r6, #16]
   242b8:	sub	r2, r3, #1
   242bc:	cmp	r2, #10
   242c0:	bhi	2440c <__flatcc_fb_gen_c_json_parser@@Base+0x2b10>
   242c4:	ldr	ip, [r6, #4]
   242c8:	movw	r3, #18872	; 0x49b8
   242cc:	movt	r3, #5
   242d0:	add	r3, r3, r2, lsl #2
   242d4:	movw	r1, #21668	; 0x54a4
   242d8:	movt	r1, #5
   242dc:	ldr	r0, [r8]
   242e0:	ldr	r2, [r3, #20]
   242e4:	ldr	r3, [ip, #4]
   242e8:	str	r3, [sp, #16]
   242ec:	ldr	ip, [ip]
   242f0:	str	r3, [sp, #8]
   242f4:	str	ip, [sp, #12]
   242f8:	ldrd	sl, [r6, #96]	; 0x60
   242fc:	strd	sl, [sp]
   24300:	bl	13f60 <fprintf@plt>
   24304:	ldr	r3, [r8]
   24308:	ldrd	r0, [r9, #96]	; 0x60
   2430c:	b	23f4c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24310:	movw	r1, #21964	; 0x55cc
   24314:	movt	r1, #5
   24318:	ldr	r3, [r6, #4]
   2431c:	b	24248 <__flatcc_fb_gen_c_json_parser@@Base+0x294c>
   24320:	ldr	r3, [r8]
   24324:	b	23f60 <__flatcc_fb_gen_c_json_parser@@Base+0x2664>
   24328:	movw	r1, #22856	; 0x5948
   2432c:	movt	r1, #5
   24330:	movw	r3, #41128	; 0xa0a8
   24334:	movt	r3, #6
   24338:	movw	r2, #19464	; 0x4c08
   2433c:	movt	r2, #5
   24340:	str	r1, [sp]
   24344:	movw	r1, #64544	; 0xfc20
   24348:	movt	r1, #3
   2434c:	ldr	r0, [r3]
   24350:	movw	r3, #543	; 0x21f
   24354:	bl	13f60 <fprintf@plt>
   24358:	movw	r1, #19464	; 0x4c08
   2435c:	movt	r1, #5
   24360:	ldr	r3, [pc, #400]	; 244f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2bfc>
   24364:	movw	r0, #35672	; 0x8b58
   24368:	movt	r0, #4
   2436c:	movw	r2, #543	; 0x21f
   24370:	bl	14014 <__assert_fail@plt>
   24374:	movw	r1, #21044	; 0x5234
   24378:	movt	r1, #5
   2437c:	movw	r3, #41128	; 0xa0a8
   24380:	movt	r3, #6
   24384:	movw	r2, #19464	; 0x4c08
   24388:	movt	r2, #5
   2438c:	str	r1, [sp]
   24390:	movw	r1, #64544	; 0xfc20
   24394:	movt	r1, #3
   24398:	ldr	r0, [r3]
   2439c:	movw	r3, #361	; 0x169
   243a0:	bl	13f60 <fprintf@plt>
   243a4:	movw	r1, #19464	; 0x4c08
   243a8:	movt	r1, #5
   243ac:	ldr	r3, [pc, #324]	; 244f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2bfc>
   243b0:	movw	r0, #35672	; 0x8b58
   243b4:	movt	r0, #4
   243b8:	movw	r2, #361	; 0x169
   243bc:	bl	14014 <__assert_fail@plt>
   243c0:	movw	r1, #22056	; 0x5628
   243c4:	movt	r1, #5
   243c8:	movw	r3, #41128	; 0xa0a8
   243cc:	movt	r3, #6
   243d0:	movw	r2, #19464	; 0x4c08
   243d4:	movt	r2, #5
   243d8:	str	r1, [sp]
   243dc:	movw	r1, #64544	; 0xfc20
   243e0:	movt	r1, #3
   243e4:	ldr	r0, [r3]
   243e8:	movw	r3, #483	; 0x1e3
   243ec:	bl	13f60 <fprintf@plt>
   243f0:	movw	r1, #19464	; 0x4c08
   243f4:	movt	r1, #5
   243f8:	ldr	r3, [pc, #248]	; 244f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2bfc>
   243fc:	movw	r0, #35672	; 0x8b58
   24400:	movt	r0, #4
   24404:	movw	r2, #483	; 0x1e3
   24408:	bl	14014 <__assert_fail@plt>
   2440c:	bl	23404 <__flatcc_fb_gen_c_json_parser@@Base+0x1b08>
   24410:	movw	r1, #64556	; 0xfc2c
   24414:	movt	r1, #3
   24418:	movw	r3, #41128	; 0xa0a8
   2441c:	movt	r3, #6
   24420:	movw	r2, #64468	; 0xfbd4
   24424:	movt	r2, #3
   24428:	str	r1, [sp]
   2442c:	movw	r1, #64544	; 0xfc20
   24430:	movt	r1, #3
   24434:	ldr	r0, [r3]
   24438:	mov	r3, #96	; 0x60
   2443c:	bl	13f60 <fprintf@plt>
   24440:	movw	r3, #18872	; 0x49b8
   24444:	movt	r3, #5
   24448:	movw	r1, #64468	; 0xfbd4
   2444c:	movt	r1, #3
   24450:	movw	r0, #35672	; 0x8b58
   24454:	movt	r0, #4
   24458:	mov	r2, #96	; 0x60
   2445c:	bl	14014 <__assert_fail@plt>
   24460:	movw	r1, #22388	; 0x5774
   24464:	movt	r1, #5
   24468:	movw	r3, #41128	; 0xa0a8
   2446c:	movt	r3, #6
   24470:	movw	r2, #19464	; 0x4c08
   24474:	movt	r2, #5
   24478:	str	r1, [sp]
   2447c:	movw	r1, #64544	; 0xfc20
   24480:	movt	r1, #3
   24484:	ldr	r0, [r3]
   24488:	mov	r3, #504	; 0x1f8
   2448c:	bl	13f60 <fprintf@plt>
   24490:	movw	r1, #19464	; 0x4c08
   24494:	movt	r1, #5
   24498:	ldr	r3, [pc, #88]	; 244f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2bfc>
   2449c:	movw	r0, #35672	; 0x8b58
   244a0:	movt	r0, #4
   244a4:	mov	r2, #504	; 0x1f8
   244a8:	bl	14014 <__assert_fail@plt>
   244ac:	movw	r1, #13276	; 0x33dc
   244b0:	movt	r1, #5
   244b4:	movw	r3, #41128	; 0xa0a8
   244b8:	movt	r3, #6
   244bc:	movw	r2, #19464	; 0x4c08
   244c0:	movt	r2, #5
   244c4:	str	r1, [sp]
   244c8:	movw	r1, #64544	; 0xfc20
   244cc:	movt	r1, #3
   244d0:	ldr	r0, [r3]
   244d4:	movw	r3, #406	; 0x196
   244d8:	bl	13f60 <fprintf@plt>
   244dc:	movw	r1, #19464	; 0x4c08
   244e0:	movt	r1, #5
   244e4:	ldr	r3, [pc, #12]	; 244f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2bfc>
   244e8:	movw	r0, #35672	; 0x8b58
   244ec:	movt	r0, #4
   244f0:	movw	r2, #406	; 0x196
   244f4:	bl	14014 <__assert_fail@plt>
   244f8:	andeq	r4, r5, r0, lsr #21

000244fc <__flatcc_fb_gen_c_json_printer@@Base>:
   244fc:	ldr	r3, [r0, #208]	; 0xd0
   24500:	movw	r1, #23144	; 0x5a68
   24504:	movt	r1, #5
   24508:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2450c:	mov	r4, r0
   24510:	ldr	r0, [r0, #204]	; 0xcc
   24514:	ldr	r3, [r3, #164]	; 0xa4
   24518:	strd	r6, [sp, #8]
   2451c:	strd	r8, [sp, #16]
   24520:	strd	sl, [sp, #24]
   24524:	str	lr, [sp, #32]
   24528:	sub	sp, sp, #236	; 0xec
   2452c:	mov	r2, r3
   24530:	bl	13f60 <fprintf@plt>
   24534:	mov	r2, #81	; 0x51
   24538:	mov	r1, #1
   2453c:	ldr	r3, [r4, #204]	; 0xcc
   24540:	movw	r0, #3788	; 0xecc
   24544:	movt	r0, #4
   24548:	bl	13ef4 <fwrite@plt>
   2454c:	mov	r2, #40	; 0x28
   24550:	mov	r1, #1
   24554:	ldr	r3, [r4, #204]	; 0xcc
   24558:	movw	r0, #23200	; 0x5aa0
   2455c:	movt	r0, #5
   24560:	bl	13ef4 <fwrite@plt>
   24564:	mov	r0, r4
   24568:	movw	r2, #23244	; 0x5acc
   2456c:	movt	r2, #5
   24570:	movw	r1, #63612	; 0xf87c
   24574:	movt	r1, #3
   24578:	bl	15008 <__flatcc_fb_gen_c_includes@@Base>
   2457c:	ldr	r1, [r4, #204]	; 0xcc
   24580:	ldr	r3, [r4, #212]	; 0xd4
   24584:	ldr	r3, [r3, #140]	; 0x8c
   24588:	cmp	r3, #0
   2458c:	bne	248dc <__flatcc_fb_gen_c_json_printer@@Base+0x3e0>
   24590:	mov	r0, #10
   24594:	bl	13fc0 <fputc@plt>
   24598:	ldr	r5, [r4, #208]	; 0xd0
   2459c:	mov	r2, #220	; 0xdc
   245a0:	add	r0, sp, #12
   245a4:	mov	r1, #0
   245a8:	ldr	r6, [r5, #52]	; 0x34
   245ac:	bl	13f78 <memset@plt>
   245b0:	cmp	r6, #0
   245b4:	beq	245c4 <__flatcc_fb_gen_c_json_printer@@Base+0xc8>
   245b8:	ldrh	r3, [r6, #8]
   245bc:	cmp	r3, #1
   245c0:	bls	2491c <__flatcc_fb_gen_c_json_printer@@Base+0x420>
   245c4:	ldr	r5, [r5, #40]	; 0x28
   245c8:	cmp	r5, #0
   245cc:	beq	2465c <__flatcc_fb_gen_c_json_printer@@Base+0x160>
   245d0:	movw	r8, #24140	; 0x5e4c
   245d4:	movt	r8, #5
   245d8:	movw	r7, #24032	; 0x5de0
   245dc:	movt	r7, #5
   245e0:	movw	r6, #23832	; 0x5d18
   245e4:	movt	r6, #5
   245e8:	b	2461c <__flatcc_fb_gen_c_json_printer@@Base+0x120>
   245ec:	cmp	r3, #4
   245f0:	bne	24610 <__flatcc_fb_gen_c_json_printer@@Base+0x114>
   245f4:	ldr	r0, [r5, #12]
   245f8:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   245fc:	add	r3, sp, #12
   24600:	mov	r1, r6
   24604:	ldr	r0, [r4, #204]	; 0xcc
   24608:	mov	r2, r3
   2460c:	bl	13f60 <fprintf@plt>
   24610:	ldr	r5, [r5]
   24614:	cmp	r5, #0
   24618:	beq	2465c <__flatcc_fb_gen_c_json_printer@@Base+0x160>
   2461c:	ldrh	r3, [r5, #8]
   24620:	add	r2, sp, #12
   24624:	mov	r1, r5
   24628:	cmp	r3, #1
   2462c:	beq	24858 <__flatcc_fb_gen_c_json_printer@@Base+0x35c>
   24630:	cmp	r3, #0
   24634:	bne	245ec <__flatcc_fb_gen_c_json_printer@@Base+0xf0>
   24638:	ldr	r0, [r5, #12]
   2463c:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   24640:	add	r2, sp, #12
   24644:	mov	r1, r7
   24648:	ldr	r0, [r4, #204]	; 0xcc
   2464c:	bl	13f60 <fprintf@plt>
   24650:	ldr	r5, [r5]
   24654:	cmp	r5, #0
   24658:	bne	2461c <__flatcc_fb_gen_c_json_printer@@Base+0x120>
   2465c:	mov	r0, #10
   24660:	ldr	r1, [r4, #204]	; 0xcc
   24664:	bl	13fc0 <fputc@plt>
   24668:	ldr	r3, [r4, #208]	; 0xd0
   2466c:	ldr	r5, [r3, #40]	; 0x28
   24670:	cmp	r5, #0
   24674:	beq	247f8 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   24678:	ldrh	r3, [r5, #8]
   2467c:	cmp	r3, #3
   24680:	beq	24874 <__flatcc_fb_gen_c_json_printer@@Base+0x378>
   24684:	ldr	r5, [r5]
   24688:	cmp	r5, #0
   2468c:	bne	24678 <__flatcc_fb_gen_c_json_printer@@Base+0x17c>
   24690:	ldr	r3, [r4, #208]	; 0xd0
   24694:	ldr	r6, [r3, #40]	; 0x28
   24698:	cmp	r6, #0
   2469c:	beq	247f8 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   246a0:	movw	sl, #24220	; 0x5e9c
   246a4:	movt	sl, #5
   246a8:	movw	r9, #24420	; 0x5f64
   246ac:	movt	r9, #5
   246b0:	movw	r8, #20456	; 0x4fe8
   246b4:	movt	r8, #5
   246b8:	b	246c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1cc>
   246bc:	ldr	r6, [r6]
   246c0:	cmp	r6, #0
   246c4:	beq	2479c <__flatcc_fb_gen_c_json_printer@@Base+0x2a0>
   246c8:	ldrh	r3, [r6, #8]
   246cc:	cmp	r3, #4
   246d0:	bne	246bc <__flatcc_fb_gen_c_json_printer@@Base+0x1c0>
   246d4:	mov	r2, #220	; 0xdc
   246d8:	mov	r1, #0
   246dc:	add	r0, sp, #12
   246e0:	add	fp, r4, #204	; 0xcc
   246e4:	bl	13f78 <memset@plt>
   246e8:	add	r2, sp, #12
   246ec:	mov	r1, r6
   246f0:	ldr	r0, [r6, #12]
   246f4:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   246f8:	add	r2, sp, #12
   246fc:	mov	r1, sl
   24700:	ldr	r0, [r4, #204]	; 0xcc
   24704:	bl	13f60 <fprintf@plt>
   24708:	ldr	r5, [r6, #20]
   2470c:	ldr	r3, [r4, #204]	; 0xcc
   24710:	cmp	r5, #0
   24714:	beq	24760 <__flatcc_fb_gen_c_json_printer@@Base+0x264>
   24718:	movw	r7, #24336	; 0x5f10
   2471c:	movt	r7, #5
   24720:	ldrh	r2, [r5, #24]
   24724:	mov	r0, r3
   24728:	mov	r1, r7
   2472c:	cmp	r2, #0
   24730:	beq	24890 <__flatcc_fb_gen_c_json_printer@@Base+0x394>
   24734:	ldr	ip, [r5, #4]
   24738:	ldr	r2, [r5, #48]	; 0x30
   2473c:	ldr	r3, [ip, #4]
   24740:	str	r3, [sp, #4]
   24744:	ldr	ip, [ip]
   24748:	str	ip, [sp]
   2474c:	bl	13f60 <fprintf@plt>
   24750:	ldr	r5, [r5]
   24754:	ldr	r3, [r4, #204]	; 0xcc
   24758:	cmp	r5, #0
   2475c:	bne	24720 <__flatcc_fb_gen_c_json_printer@@Base+0x224>
   24760:	mov	r2, #78	; 0x4e
   24764:	mov	r1, #1
   24768:	mov	r0, r9
   2476c:	bl	13ef4 <fwrite@plt>
   24770:	mov	r2, #9
   24774:	mov	r1, #1
   24778:	ldr	r3, [r4, #204]	; 0xcc
   2477c:	mov	r0, r8
   24780:	bl	13ef4 <fwrite@plt>
   24784:	mov	r1, r6
   24788:	mov	r0, fp
   2478c:	bl	238d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd4>
   24790:	ldr	r6, [r6]
   24794:	cmp	r6, #0
   24798:	bne	246c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1cc>
   2479c:	ldr	r3, [r4, #208]	; 0xd0
   247a0:	ldr	r5, [r3, #40]	; 0x28
   247a4:	cmp	r5, #0
   247a8:	beq	247f8 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   247ac:	add	r6, r4, #204	; 0xcc
   247b0:	ldrh	r3, [r5, #8]
   247b4:	cmp	r3, #1
   247b8:	beq	248c0 <__flatcc_fb_gen_c_json_printer@@Base+0x3c4>
   247bc:	ldr	r5, [r5]
   247c0:	cmp	r5, #0
   247c4:	bne	247b0 <__flatcc_fb_gen_c_json_printer@@Base+0x2b4>
   247c8:	ldr	r3, [r4, #208]	; 0xd0
   247cc:	ldr	r5, [r3, #40]	; 0x28
   247d0:	cmp	r5, #0
   247d4:	beq	247f8 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   247d8:	add	r6, r4, #204	; 0xcc
   247dc:	ldrh	r3, [r5, #8]
   247e0:	cmp	r3, #0
   247e4:	beq	248a0 <__flatcc_fb_gen_c_json_printer@@Base+0x3a4>
   247e8:	ldr	r5, [r5]
   247ec:	cmp	r5, #0
   247f0:	bne	247dc <__flatcc_fb_gen_c_json_printer@@Base+0x2e0>
   247f4:	ldr	r3, [r4, #208]	; 0xd0
   247f8:	ldr	r5, [r3, #52]	; 0x34
   247fc:	cmp	r5, #0
   24800:	beq	24810 <__flatcc_fb_gen_c_json_printer@@Base+0x314>
   24804:	ldrh	r3, [r5, #8]
   24808:	cmp	r3, #1
   2480c:	bls	24954 <__flatcc_fb_gen_c_json_printer@@Base+0x458>
   24810:	ldr	r0, [r4, #204]	; 0xcc
   24814:	ldr	r3, [r4, #212]	; 0xd4
   24818:	ldr	r3, [r3, #140]	; 0x8c
   2481c:	cmp	r3, #0
   24820:	bne	248fc <__flatcc_fb_gen_c_json_printer@@Base+0x400>
   24824:	ldr	r3, [r4, #208]	; 0xd0
   24828:	movw	r1, #24788	; 0x60d4
   2482c:	movt	r1, #5
   24830:	ldr	r2, [r3, #164]	; 0xa4
   24834:	bl	13f60 <fprintf@plt>
   24838:	mov	r0, #0
   2483c:	add	sp, sp, #236	; 0xec
   24840:	ldrd	r4, [sp]
   24844:	ldrd	r6, [sp, #8]
   24848:	ldrd	r8, [sp, #16]
   2484c:	ldrd	sl, [sp, #24]
   24850:	add	sp, sp, #32
   24854:	pop	{pc}		; (ldr pc, [sp], #4)
   24858:	ldr	r0, [r5, #12]
   2485c:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   24860:	add	r2, sp, #12
   24864:	mov	r1, r8
   24868:	ldr	r0, [r4, #204]	; 0xcc
   2486c:	bl	13f60 <fprintf@plt>
   24870:	b	24610 <__flatcc_fb_gen_c_json_printer@@Base+0x114>
   24874:	mov	r1, r5
   24878:	mov	r0, r4
   2487c:	bl	2345c <__flatcc_fb_gen_c_json_parser@@Base+0x1b60>
   24880:	ldr	r5, [r5]
   24884:	cmp	r5, #0
   24888:	bne	24678 <__flatcc_fb_gen_c_json_printer@@Base+0x17c>
   2488c:	b	24690 <__flatcc_fb_gen_c_json_printer@@Base+0x194>
   24890:	ldr	r5, [r5]
   24894:	cmp	r5, #0
   24898:	bne	24720 <__flatcc_fb_gen_c_json_printer@@Base+0x224>
   2489c:	b	24760 <__flatcc_fb_gen_c_json_printer@@Base+0x264>
   248a0:	mov	r1, r5
   248a4:	mov	r0, r6
   248a8:	bl	23d4c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   248ac:	ldr	r5, [r5]
   248b0:	cmp	r5, #0
   248b4:	bne	247dc <__flatcc_fb_gen_c_json_printer@@Base+0x2e0>
   248b8:	ldr	r3, [r4, #208]	; 0xd0
   248bc:	b	247f8 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   248c0:	mov	r1, r5
   248c4:	mov	r0, r6
   248c8:	bl	23ad8 <__flatcc_fb_gen_c_json_parser@@Base+0x21dc>
   248cc:	ldr	r5, [r5]
   248d0:	cmp	r5, #0
   248d4:	bne	247b0 <__flatcc_fb_gen_c_json_printer@@Base+0x2b4>
   248d8:	b	247c8 <__flatcc_fb_gen_c_json_printer@@Base+0x2cc>
   248dc:	mov	r3, r1
   248e0:	movw	r0, #4064	; 0xfe0
   248e4:	movt	r0, #4
   248e8:	mov	r1, #1
   248ec:	mov	r2, #36	; 0x24
   248f0:	bl	13ef4 <fwrite@plt>
   248f4:	ldr	r1, [r4, #204]	; 0xcc
   248f8:	b	24590 <__flatcc_fb_gen_c_json_printer@@Base+0x94>
   248fc:	mov	r3, r0
   24900:	mov	r2, #36	; 0x24
   24904:	movw	r0, #28228	; 0x6e44
   24908:	movt	r0, #4
   2490c:	mov	r1, #1
   24910:	bl	13ef4 <fwrite@plt>
   24914:	ldr	r0, [r4, #204]	; 0xcc
   24918:	b	24824 <__flatcc_fb_gen_c_json_printer@@Base+0x328>
   2491c:	movw	r2, #482	; 0x1e2
   24920:	mov	r1, #1
   24924:	ldr	r3, [r4, #204]	; 0xcc
   24928:	movw	r0, #23260	; 0x5adc
   2492c:	movt	r0, #5
   24930:	bl	13ef4 <fwrite@plt>
   24934:	movw	r1, #23744	; 0x5cc0
   24938:	movt	r1, #5
   2493c:	ldr	r0, [r4, #204]	; 0xcc
   24940:	ldr	r3, [r4, #208]	; 0xd0
   24944:	ldr	r2, [r3, #160]	; 0xa0
   24948:	bl	13f60 <fprintf@plt>
   2494c:	ldr	r5, [r4, #208]	; 0xd0
   24950:	b	245c4 <__flatcc_fb_gen_c_json_printer@@Base+0xc8>
   24954:	mov	r2, #220	; 0xdc
   24958:	mov	r1, #0
   2495c:	add	r0, sp, #12
   24960:	bl	13f78 <memset@plt>
   24964:	add	r2, sp, #12
   24968:	mov	r1, r5
   2496c:	ldr	r0, [r5, #12]
   24970:	bl	15244 <__flatcc_fb_scoped_symbol_name@@Base>
   24974:	movw	r1, #24500	; 0x5fb4
   24978:	movt	r1, #5
   2497c:	ldr	r0, [r4, #204]	; 0xcc
   24980:	ldr	r3, [r4, #208]	; 0xd0
   24984:	ldr	r2, [r3, #160]	; 0xa0
   24988:	bl	13f60 <fprintf@plt>
   2498c:	add	r2, sp, #12
   24990:	movw	r1, #24588	; 0x600c
   24994:	movt	r1, #5
   24998:	ldr	r0, [r4, #204]	; 0xcc
   2499c:	bl	13f60 <fprintf@plt>
   249a0:	ldr	r2, [r4, #208]	; 0xd0
   249a4:	ldrh	r3, [r2, #16]
   249a8:	cmp	r3, #2
   249ac:	beq	249e4 <__flatcc_fb_gen_c_json_printer@@Base+0x4e8>
   249b0:	movw	r0, #24784	; 0x60d0
   249b4:	movt	r0, #5
   249b8:	ldr	r3, [r4, #204]	; 0xcc
   249bc:	mov	r2, #3
   249c0:	mov	r1, #1
   249c4:	bl	13ef4 <fwrite@plt>
   249c8:	movw	r0, #7124	; 0x1bd4
   249cc:	movt	r0, #5
   249d0:	ldr	r3, [r4, #204]	; 0xcc
   249d4:	mov	r2, #3
   249d8:	mov	r1, #1
   249dc:	bl	13ef4 <fwrite@plt>
   249e0:	b	24810 <__flatcc_fb_gen_c_json_printer@@Base+0x314>
   249e4:	movw	r1, #24772	; 0x60c4
   249e8:	movt	r1, #5
   249ec:	ldr	r3, [r2, #8]
   249f0:	ldr	r2, [r2, #12]
   249f4:	ldr	r0, [r4, #204]	; 0xcc
   249f8:	bl	13f60 <fprintf@plt>
   249fc:	b	249c8 <__flatcc_fb_gen_c_json_printer@@Base+0x4cc>
   24a00:	add	r3, r1, #4
   24a04:	mov	r2, r0
   24a08:	movw	r1, #19004	; 0x4a3c
   24a0c:	movt	r1, #2
   24a10:	mov	r0, r3
   24a14:	b	2861c <fb_symbol_table_visit@@Base>
   24a18:	add	r3, r1, #4
   24a1c:	mov	r2, r0
   24a20:	movw	r1, #19892	; 0x4db4
   24a24:	movt	r1, #2
   24a28:	mov	r0, r3
   24a2c:	b	2861c <fb_symbol_table_visit@@Base>
   24a30:	ldr	r0, [r0, #4]
   24a34:	ldr	r1, [r1, #4]
   24a38:	b	13e94 <strcmp@plt>
   24a3c:	ldrh	r3, [r1, #8]
   24a40:	cmp	r3, #4
   24a44:	bxhi	lr
   24a48:	strd	r4, [sp, #-32]!	; 0xffffffe0
   24a4c:	strd	r6, [sp, #8]
   24a50:	mov	r7, r0
   24a54:	mov	r6, r1
   24a58:	ldr	r0, [r0, #40]	; 0x28
   24a5c:	strd	r8, [sp, #16]
   24a60:	ldr	r1, [r1, #16]
   24a64:	str	sl, [sp, #24]
   24a68:	str	lr, [sp, #28]
   24a6c:	add	r0, r0, #172	; 0xac
   24a70:	bl	27794 <ptr_set_find_item@@Base>
   24a74:	cmp	r0, #0
   24a78:	beq	24b28 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   24a7c:	ldr	r3, [r7]
   24a80:	ldr	r9, [r7, #36]	; 0x24
   24a84:	cmp	r3, #0
   24a88:	moveq	r4, r9
   24a8c:	beq	24acc <__flatcc_fb_gen_c_json_printer@@Base+0x5d0>
   24a90:	ldr	r3, [r6, #12]
   24a94:	mov	r4, r9
   24a98:	ldr	r5, [r3]
   24a9c:	cmp	r5, #0
   24aa0:	beq	24acc <__flatcc_fb_gen_c_json_printer@@Base+0x5d0>
   24aa4:	mov	r8, #46	; 0x2e
   24aa8:	ldr	r3, [r5, #4]
   24aac:	mov	r0, r4
   24ab0:	ldm	r3, {r1, r2}
   24ab4:	add	r4, r4, r2
   24ab8:	bl	13eb8 <memcpy@plt>
   24abc:	strb	r8, [r4], #1
   24ac0:	ldr	r5, [r5]
   24ac4:	cmp	r5, #0
   24ac8:	bne	24aa8 <__flatcc_fb_gen_c_json_printer@@Base+0x5ac>
   24acc:	ldr	r3, [r6, #4]
   24ad0:	mov	r0, r4
   24ad4:	ldm	r3, {r1, r5}
   24ad8:	mov	r2, r5
   24adc:	bl	13eb8 <memcpy@plt>
   24ae0:	mov	r2, #0
   24ae4:	add	r3, r4, r5
   24ae8:	add	r3, r3, #1
   24aec:	strb	r2, [r4, r5]
   24af0:	ldrh	r2, [r6, #8]
   24af4:	str	r3, [r7, #36]	; 0x24
   24af8:	cmp	r2, #4
   24afc:	ldrls	pc, [pc, r2, lsl #2]
   24b00:	b	24b28 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   24b04:	andeq	r4, r2, r0, asr #22
   24b08:	andeq	r4, r2, r0, asr #22
   24b0c:	andeq	r4, r2, r8, lsr #22
   24b10:	andeq	r4, r2, r8, lsl fp
   24b14:	andeq	r4, r2, r8, lsl fp
   24b18:	ldr	r3, [r7, #32]
   24b1c:	add	r2, r3, #8
   24b20:	stm	r3, {r6, r9}
   24b24:	str	r2, [r7, #32]
   24b28:	ldrd	r4, [sp]
   24b2c:	ldrd	r6, [sp, #8]
   24b30:	ldrd	r8, [sp, #16]
   24b34:	ldr	sl, [sp, #24]
   24b38:	add	sp, sp, #28
   24b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   24b40:	ldr	r3, [r7, #28]
   24b44:	add	r2, r3, #8
   24b48:	stm	r3, {r6, r9}
   24b4c:	str	r2, [r7, #28]
   24b50:	b	24b28 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   24b54:	sub	r2, r2, #2
   24b58:	strd	r4, [sp, #-24]!	; 0xffffffe8
   24b5c:	mov	r4, r0
   24b60:	strd	r6, [sp, #8]
   24b64:	str	r8, [sp, #16]
   24b68:	str	lr, [sp, #20]
   24b6c:	cmp	r2, #13
   24b70:	ldrls	pc, [pc, r2, lsl #2]
   24b74:	b	24d14 <__flatcc_fb_gen_c_json_printer@@Base+0x818>
   24b78:	muleq	r2, r0, ip
   24b7c:	andeq	r4, r2, r4, lsl sp
   24b80:	andeq	r4, r2, r4, lsl sp
   24b84:	andeq	r4, r2, r4, lsl sp
   24b88:	andeq	r4, r2, r4, lsl sp
   24b8c:	andeq	r4, r2, r0, lsr #25
   24b90:			; <UNDEFINED> instruction: 0x00024bb0
   24b94:	andeq	r4, r2, ip, asr #26
   24b98:	andeq	r4, r2, r4, lsl sp
   24b9c:	andeq	r4, r2, r4, lsl sp
   24ba0:	andeq	r4, r2, r4, lsl sp
   24ba4:	andeq	r4, r2, r4, lsl sp
   24ba8:	andeq	r4, r2, ip, asr #25
   24bac:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24bb0:	mvn	r6, #0
   24bb4:	sub	r1, r1, #1
   24bb8:	cmp	r1, #10
   24bbc:	bhi	24d40 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   24bc0:	movw	r3, #24828	; 0x60fc
   24bc4:	movt	r3, #5
   24bc8:	ldrsb	r7, [r3, r1]
   24bcc:	mov	r5, #0
   24bd0:	mov	r1, #3
   24bd4:	mov	r0, r4
   24bd8:	bl	38314 <flatcc_builder_start_table@@Base>
   24bdc:	cmp	r0, #0
   24be0:	bne	24d28 <__flatcc_fb_gen_c_json_printer@@Base+0x82c>
   24be4:	cmn	r6, #1
   24be8:	beq	24c0c <__flatcc_fb_gen_c_json_printer@@Base+0x710>
   24bec:	mov	r3, #4
   24bf0:	mov	r1, #2
   24bf4:	mov	r2, r3
   24bf8:	mov	r0, r4
   24bfc:	bl	3a68c <flatcc_builder_table_add@@Base>
   24c00:	cmp	r0, #0
   24c04:	beq	24d28 <__flatcc_fb_gen_c_json_printer@@Base+0x82c>
   24c08:	str	r6, [r0]
   24c0c:	cmp	r7, #0
   24c10:	beq	24c34 <__flatcc_fb_gen_c_json_printer@@Base+0x738>
   24c14:	mov	r3, #1
   24c18:	mov	r1, #0
   24c1c:	mov	r2, r3
   24c20:	mov	r0, r4
   24c24:	bl	3a68c <flatcc_builder_table_add@@Base>
   24c28:	cmp	r0, #0
   24c2c:	beq	24d28 <__flatcc_fb_gen_c_json_printer@@Base+0x82c>
   24c30:	strb	r7, [r0]
   24c34:	cmp	r5, #0
   24c38:	beq	24c5c <__flatcc_fb_gen_c_json_printer@@Base+0x760>
   24c3c:	mov	r3, #1
   24c40:	mov	r0, r4
   24c44:	mov	r2, r3
   24c48:	mov	r1, r3
   24c4c:	bl	3a68c <flatcc_builder_table_add@@Base>
   24c50:	cmp	r0, #0
   24c54:	beq	24d28 <__flatcc_fb_gen_c_json_printer@@Base+0x82c>
   24c58:	strb	r5, [r0]
   24c5c:	mov	r2, #0
   24c60:	ldr	r1, [pc, #324]	; 24dac <__flatcc_fb_gen_c_json_printer@@Base+0x8b0>
   24c64:	mov	r0, r4
   24c68:	bl	38bf8 <flatcc_builder_check_required@@Base>
   24c6c:	cmp	r0, #0
   24c70:	beq	24d90 <__flatcc_fb_gen_c_json_printer@@Base+0x894>
   24c74:	mov	r0, r4
   24c78:	ldrd	r4, [sp]
   24c7c:	ldrd	r6, [sp, #8]
   24c80:	ldr	r8, [sp, #16]
   24c84:	ldr	lr, [sp, #20]
   24c88:	add	sp, sp, #24
   24c8c:	b	38c94 <flatcc_builder_end_table@@Base>
   24c90:	mvn	r6, #0
   24c94:	mov	r7, #13
   24c98:	mov	r5, #0
   24c9c:	b	24bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   24ca0:	mvn	r6, #0
   24ca4:	sub	r1, r1, #1
   24ca8:	cmp	r1, #10
   24cac:	movhi	r5, #0
   24cb0:	movhi	r7, #14
   24cb4:	bhi	24bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   24cb8:	movw	r3, #24828	; 0x60fc
   24cbc:	movt	r3, #5
   24cc0:	ldrsb	r5, [r3, r1]
   24cc4:	mov	r7, #14
   24cc8:	b	24bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   24ccc:	ldrh	r3, [r1, #8]
   24cd0:	ldr	r6, [r1, #124]	; 0x7c
   24cd4:	cmp	r3, #4
   24cd8:	ldrls	pc, [pc, r3, lsl #2]
   24cdc:	b	24d14 <__flatcc_fb_gen_c_json_printer@@Base+0x818>
   24ce0:	andeq	r4, r2, r0, ror sp
   24ce4:	andeq	r4, r2, r0, ror sp
   24ce8:	andeq	r4, r2, r4, lsl sp
   24cec:	andeq	r4, r2, ip, ror sp
   24cf0:	andeq	r4, r2, r8, ror #26
   24cf4:	ldrh	r3, [r1, #8]
   24cf8:	ldr	r6, [r1, #124]	; 0x7c
   24cfc:	cmp	r3, #1
   24d00:	bls	24d84 <__flatcc_fb_gen_c_json_printer@@Base+0x888>
   24d04:	cmp	r3, #3
   24d08:	bne	24d40 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   24d0c:	ldr	r1, [r1, #40]	; 0x28
   24d10:	b	24ca4 <__flatcc_fb_gen_c_json_printer@@Base+0x7a8>
   24d14:	mov	r1, #3
   24d18:	mov	r0, r4
   24d1c:	bl	38314 <flatcc_builder_start_table@@Base>
   24d20:	cmp	r0, #0
   24d24:	beq	24c5c <__flatcc_fb_gen_c_json_printer@@Base+0x760>
   24d28:	ldrd	r4, [sp]
   24d2c:	mov	r0, #0
   24d30:	ldrd	r6, [sp, #8]
   24d34:	ldr	r8, [sp, #16]
   24d38:	add	sp, sp, #20
   24d3c:	pop	{pc}		; (ldr pc, [sp], #4)
   24d40:	mov	r5, #0
   24d44:	mov	r7, r5
   24d48:	b	24bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   24d4c:	mov	r1, #3
   24d50:	bl	38314 <flatcc_builder_start_table@@Base>
   24d54:	cmp	r0, #0
   24d58:	bne	24d28 <__flatcc_fb_gen_c_json_printer@@Base+0x82c>
   24d5c:	mov	r5, #13
   24d60:	mov	r7, #14
   24d64:	b	24c14 <__flatcc_fb_gen_c_json_printer@@Base+0x718>
   24d68:	mov	r7, #16
   24d6c:	b	24c98 <__flatcc_fb_gen_c_json_printer@@Base+0x79c>
   24d70:	mov	r5, #0
   24d74:	mov	r7, #15
   24d78:	b	24bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   24d7c:	ldr	r1, [r1, #40]	; 0x28
   24d80:	b	24bb4 <__flatcc_fb_gen_c_json_printer@@Base+0x6b8>
   24d84:	mov	r5, #15
   24d88:	mov	r7, #14
   24d8c:	b	24bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   24d90:	movw	r1, #25120	; 0x6220
   24d94:	movt	r1, #5
   24d98:	ldr	r3, [pc, #16]	; 24db0 <__flatcc_fb_gen_c_json_printer@@Base+0x8b4>
   24d9c:	movw	r0, #25216	; 0x6280
   24da0:	movt	r0, #5
   24da4:	mov	r2, #23
   24da8:	bl	14014 <__assert_fail@plt>
   24dac:	andeq	r6, r5, r8, lsl #2
   24db0:	andeq	r6, r5, ip, lsl #2
   24db4:	ldrh	r3, [r1, #8]
   24db8:	cmp	r3, #4
   24dbc:	bxhi	lr
   24dc0:	strd	r4, [sp, #-16]!
   24dc4:	mov	r4, r0
   24dc8:	mov	r5, r1
   24dcc:	ldr	r0, [r0, #40]	; 0x28
   24dd0:	ldr	r1, [r1, #16]
   24dd4:	str	r6, [sp, #8]
   24dd8:	str	lr, [sp, #12]
   24ddc:	add	r0, r0, #172	; 0xac
   24de0:	bl	27794 <ptr_set_find_item@@Base>
   24de4:	cmp	r0, #0
   24de8:	beq	24e74 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   24dec:	ldr	ip, [r4]
   24df0:	cmp	ip, #0
   24df4:	beq	24e28 <__flatcc_fb_gen_c_json_printer@@Base+0x92c>
   24df8:	ldr	r3, [r5, #12]
   24dfc:	ldr	r3, [r3]
   24e00:	cmp	r3, #0
   24e04:	beq	24ea0 <__flatcc_fb_gen_c_json_printer@@Base+0x9a4>
   24e08:	mov	ip, #0
   24e0c:	ldr	r2, [r3, #4]
   24e10:	ldr	r3, [r3]
   24e14:	ldr	r2, [r2, #4]
   24e18:	cmp	r3, #0
   24e1c:	add	r2, r2, #1
   24e20:	add	ip, ip, r2
   24e24:	bne	24e0c <__flatcc_fb_gen_c_json_printer@@Base+0x910>
   24e28:	ldr	r3, [r5, #4]
   24e2c:	ldr	r1, [r4, #12]
   24e30:	ldrh	r2, [r5, #8]
   24e34:	ldr	r3, [r3, #4]
   24e38:	add	r3, r3, r1
   24e3c:	add	r3, r3, #1
   24e40:	add	ip, r3, ip
   24e44:	str	ip, [r4, #12]
   24e48:	cmp	r2, #4
   24e4c:	ldrls	pc, [pc, r2, lsl #2]
   24e50:	b	24e74 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   24e54:	andeq	r4, r2, r4, lsl #29
   24e58:	andeq	r4, r2, r4, lsl #29
   24e5c:	andeq	r4, r2, r4, ror lr
   24e60:	andeq	r4, r2, r8, ror #28
   24e64:	andeq	r4, r2, r8, ror #28
   24e68:	ldr	r3, [r4, #8]
   24e6c:	add	r3, r3, #1
   24e70:	str	r3, [r4, #8]
   24e74:	ldrd	r4, [sp]
   24e78:	ldr	r6, [sp, #8]
   24e7c:	add	sp, sp, #12
   24e80:	pop	{pc}		; (ldr pc, [sp], #4)
   24e84:	ldr	r3, [r4, #4]
   24e88:	ldr	r6, [sp, #8]
   24e8c:	add	r3, r3, #1
   24e90:	str	r3, [r4, #4]
   24e94:	ldrd	r4, [sp]
   24e98:	add	sp, sp, #12
   24e9c:	pop	{pc}		; (ldr pc, [sp], #4)
   24ea0:	mov	ip, r3
   24ea4:	b	24e28 <__flatcc_fb_gen_c_json_printer@@Base+0x92c>
   24ea8:	cmp	r0, #0
   24eac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   24eb0:	strd	r6, [sp, #8]
   24eb4:	strd	r8, [sp, #16]
   24eb8:	strd	sl, [sp, #24]
   24ebc:	str	lr, [sp, #32]
   24ec0:	sub	sp, sp, #36	; 0x24
   24ec4:	beq	24edc <__flatcc_fb_gen_c_json_printer@@Base+0x9e0>
   24ec8:	ldr	r2, [r0, #4]
   24ecc:	movw	r3, #17986	; 0x4642
   24ed0:	movt	r3, #21314	; 0x5342
   24ed4:	cmp	r2, r3
   24ed8:	beq	24ef8 <__flatcc_fb_gen_c_json_printer@@Base+0x9fc>
   24edc:	movw	r1, #25360	; 0x6310
   24ee0:	movt	r1, #5
   24ee4:	ldr	r3, [pc, #1668]	; 25570 <__flatcc_fb_gen_c_json_printer@@Base+0x1074>
   24ee8:	movw	r0, #25456	; 0x6370
   24eec:	movt	r0, #5
   24ef0:	mov	r2, #237	; 0xed
   24ef4:	bl	14014 <__assert_fail@plt>
   24ef8:	ldr	r2, [r0]
   24efc:	adds	r3, r0, r2
   24f00:	beq	24edc <__flatcc_fb_gen_c_json_printer@@Base+0x9e0>
   24f04:	ldr	r2, [r0, r2]
   24f08:	sub	r2, r3, r2
   24f0c:	ldrh	r1, [r2]
   24f10:	cmp	r1, #5
   24f14:	bls	25554 <__flatcc_fb_gen_c_json_printer@@Base+0x1058>
   24f18:	ldrh	r1, [r2, #4]
   24f1c:	cmp	r1, #0
   24f20:	beq	25554 <__flatcc_fb_gen_c_json_printer@@Base+0x1058>
   24f24:	ldr	r2, [r3, r1]
   24f28:	add	r3, r3, r1
   24f2c:	add	r2, r2, #4
   24f30:	adds	r0, r3, r2
   24f34:	str	r0, [sp, #20]
   24f38:	beq	254e4 <__flatcc_fb_gen_c_json_printer@@Base+0xfe8>
   24f3c:	ldr	r1, [r0, #-4]
   24f40:	cmp	r1, #0
   24f44:	beq	254e4 <__flatcc_fb_gen_c_json_printer@@Base+0xfe8>
   24f48:	ldr	r3, [r3, r2]
   24f4c:	adds	r2, r0, r3
   24f50:	beq	25538 <__flatcc_fb_gen_c_json_printer@@Base+0x103c>
   24f54:	ldr	r3, [r0, r3]
   24f58:	sub	r3, r2, r3
   24f5c:	ldrh	r0, [r3]
   24f60:	cmp	r0, #7
   24f64:	bls	25470 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
   24f68:	ldrh	r3, [r3, #6]
   24f6c:	cmp	r3, #0
   24f70:	movne	r0, #0
   24f74:	strne	r0, [sp, #24]
   24f78:	beq	25470 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
   24f7c:	ldr	r0, [r2, r3]
   24f80:	add	r2, r2, r3
   24f84:	add	r3, r0, #4
   24f88:	adds	fp, r2, r3
   24f8c:	beq	25428 <__flatcc_fb_gen_c_json_printer@@Base+0xf2c>
   24f90:	ldr	r3, [fp, #-4]
   24f94:	cmp	r3, #0
   24f98:	str	r3, [sp, #28]
   24f9c:	beq	25428 <__flatcc_fb_gen_c_json_printer@@Base+0xf2c>
   24fa0:	lsr	r2, r3, #1
   24fa4:	sub	sl, r3, #1
   24fa8:	mov	r3, r2
   24fac:	lsl	r2, r2, #1
   24fb0:	str	sl, [sp, #4]
   24fb4:	mov	sl, r3
   24fb8:	str	r2, [sp, #8]
   24fbc:	ldr	r3, [sp, #4]
   24fc0:	ldr	r2, [sp, #8]
   24fc4:	cmp	r3, r2
   24fc8:	movcs	r4, r2
   24fcc:	movcs	r7, sl
   24fd0:	strcs	sl, [sp, #16]
   24fd4:	bcs	25038 <__flatcc_fb_gen_c_json_printer@@Base+0xb3c>
   24fd8:	b	251c8 <__flatcc_fb_gen_c_json_printer@@Base+0xccc>
   24fdc:	ldr	r8, [r0, #-4]
   24fe0:	str	r3, [sp, #12]
   24fe4:	cmp	r9, r8
   24fe8:	movcc	r2, r9
   24fec:	movcs	r2, r8
   24ff0:	bl	13ffc <strncmp@plt>
   24ff4:	cmp	r0, #0
   24ff8:	ldr	r3, [sp, #12]
   24ffc:	beq	251bc <__flatcc_fb_gen_c_json_printer@@Base+0xcc0>
   25000:	bge	251c4 <__flatcc_fb_gen_c_json_printer@@Base+0xcc8>
   25004:	ldr	r0, [sp, #4]
   25008:	sub	r2, r7, r4
   2500c:	lsl	r1, r4, #1
   25010:	lsl	r2, r2, #2
   25014:	mov	r7, r4
   25018:	sub	r6, r6, r2
   2501c:	add	r5, r5, r2
   25020:	cmp	r0, r1
   25024:	str	r6, [fp, r3]
   25028:	str	r5, [fp, sl]
   2502c:	bcc	251c4 <__flatcc_fb_gen_c_json_printer@@Base+0xcc8>
   25030:	mov	r4, r1
   25034:	mov	r3, r0
   25038:	cmp	r3, r4
   2503c:	ldr	r6, [fp, #-4]
   25040:	bls	25110 <__flatcc_fb_gen_c_json_printer@@Base+0xc14>
   25044:	lsl	r3, r4, #2
   25048:	cmp	r6, r4
   2504c:	add	r0, fp, r3
   25050:	bls	2551c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   25054:	ldr	r1, [fp, r4, lsl #2]
   25058:	adds	r2, r0, r1
   2505c:	beq	25500 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25060:	ldr	r1, [r0, r1]
   25064:	sub	r1, r2, r1
   25068:	ldrh	r0, [r1]
   2506c:	cmp	r0, #5
   25070:	bls	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   25074:	ldrh	r1, [r1, #4]
   25078:	cmp	r1, #0
   2507c:	beq	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   25080:	ldr	r0, [r2, r1]
   25084:	add	r8, r4, #1
   25088:	add	r3, r3, #4
   2508c:	add	r2, r2, r1
   25090:	cmp	r8, r6
   25094:	add	ip, fp, r3
   25098:	add	r0, r0, #4
   2509c:	add	r0, r2, r0
   250a0:	bcs	2551c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   250a4:	ldr	r3, [fp, r3]
   250a8:	adds	r1, ip, r3
   250ac:	beq	25500 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   250b0:	ldr	r3, [ip, r3]
   250b4:	sub	r3, r1, r3
   250b8:	ldrh	r2, [r3]
   250bc:	cmp	r2, #5
   250c0:	bls	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   250c4:	ldrh	r2, [r3, #4]
   250c8:	cmp	r2, #0
   250cc:	beq	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   250d0:	ldr	r3, [r1, r2]
   250d4:	add	r1, r1, r2
   250d8:	add	r3, r3, #4
   250dc:	adds	r1, r1, r3
   250e0:	ldrne	r9, [r1, #-4]
   250e4:	moveq	r9, #0
   250e8:	cmp	r0, #0
   250ec:	beq	2548c <__flatcc_fb_gen_c_json_printer@@Base+0xf90>
   250f0:	ldr	r5, [r0, #-4]
   250f4:	cmp	r9, r5
   250f8:	movcc	r2, r9
   250fc:	movcs	r2, r5
   25100:	bl	13ffc <strncmp@plt>
   25104:	cmp	r0, #0
   25108:	beq	25490 <__flatcc_fb_gen_c_json_printer@@Base+0xf94>
   2510c:	movlt	r4, r8
   25110:	lsl	r3, r7, #2
   25114:	cmp	r6, r7
   25118:	add	r1, fp, r3
   2511c:	bls	2551c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   25120:	ldr	r5, [fp, r7, lsl #2]
   25124:	adds	r2, r1, r5
   25128:	beq	25500 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   2512c:	ldr	r1, [r1, r5]
   25130:	sub	r1, r2, r1
   25134:	ldrh	r0, [r1]
   25138:	cmp	r0, #5
   2513c:	bls	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   25140:	ldrh	r1, [r1, #4]
   25144:	cmp	r1, #0
   25148:	beq	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   2514c:	ldr	r0, [r2, r1]
   25150:	lsl	sl, r4, #2
   25154:	add	r2, r2, r1
   25158:	cmp	r4, r6
   2515c:	add	r1, fp, sl
   25160:	add	r0, r0, #4
   25164:	add	r0, r2, r0
   25168:	bcs	2551c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   2516c:	ldr	r6, [fp, r4, lsl #2]
   25170:	adds	r2, r1, r6
   25174:	beq	25500 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25178:	ldr	r1, [r1, r6]
   2517c:	sub	r1, r2, r1
   25180:	ldrh	ip, [r1]
   25184:	cmp	ip, #5
   25188:	bls	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   2518c:	ldrh	ip, [r1, #4]
   25190:	cmp	ip, #0
   25194:	beq	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   25198:	ldr	r1, [r2, ip]
   2519c:	add	r2, r2, ip
   251a0:	add	r1, r1, #4
   251a4:	adds	r1, r2, r1
   251a8:	ldrne	r9, [r1, #-4]
   251ac:	moveq	r9, r1
   251b0:	cmp	r0, #0
   251b4:	bne	24fdc <__flatcc_fb_gen_c_json_printer@@Base+0xae0>
   251b8:	mov	r8, r0
   251bc:	cmp	r9, r8
   251c0:	bhi	25004 <__flatcc_fb_gen_c_json_printer@@Base+0xb08>
   251c4:	ldr	sl, [sp, #16]
   251c8:	sub	sl, sl, #1
   251cc:	ldr	r3, [sp, #8]
   251d0:	cmn	sl, #1
   251d4:	sub	r3, r3, #2
   251d8:	str	r3, [sp, #8]
   251dc:	bne	24fbc <__flatcc_fb_gen_c_json_printer@@Base+0xac0>
   251e0:	ldr	sl, [sp, #4]
   251e4:	cmp	sl, #0
   251e8:	beq	25420 <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   251ec:	ldr	r3, [sp, #28]
   251f0:	add	r2, fp, #4
   251f4:	str	r2, [sp, #16]
   251f8:	add	r3, fp, r3, lsl #2
   251fc:	ldr	r2, [sp, #16]
   25200:	sub	lr, r3, #4
   25204:	mov	r7, #0
   25208:	sub	sl, sl, #1
   2520c:	mov	r4, r7
   25210:	ldr	r1, [r3, #-4]
   25214:	str	lr, [sp, #12]
   25218:	ldr	r0, [fp]
   2521c:	sub	ip, r3, r2
   25220:	sub	r2, r2, r3
   25224:	add	r1, r1, ip
   25228:	add	r2, r2, r0
   2522c:	str	r1, [fp]
   25230:	str	r2, [r3, #-4]
   25234:	b	2529c <__flatcc_fb_gen_c_json_printer@@Base+0xda0>
   25238:	cmp	r0, #0
   2523c:	ldr	r9, [r1, #-4]
   25240:	beq	2549c <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   25244:	ldr	r8, [r0, #-4]
   25248:	str	r3, [sp, #8]
   2524c:	cmp	r9, r8
   25250:	movcc	r2, r9
   25254:	movcs	r2, r8
   25258:	bl	13ffc <strncmp@plt>
   2525c:	cmp	r0, #0
   25260:	ldr	r3, [sp, #8]
   25264:	beq	254a0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   25268:	bge	25414 <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   2526c:	sub	r2, r7, r4
   25270:	lsl	r1, r4, #1
   25274:	mov	r7, r4
   25278:	lsl	r2, r2, #2
   2527c:	cmp	sl, r1
   25280:	sub	r6, r6, r2
   25284:	add	r5, r5, r2
   25288:	ldr	r2, [sp, #4]
   2528c:	str	r6, [fp, r2]
   25290:	str	r5, [fp, r3]
   25294:	bcc	25414 <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   25298:	mov	r4, r1
   2529c:	cmp	sl, r4
   252a0:	ldr	r6, [fp, #-4]
   252a4:	bls	25374 <__flatcc_fb_gen_c_json_printer@@Base+0xe78>
   252a8:	lsl	r2, r4, #2
   252ac:	cmp	r6, r4
   252b0:	add	ip, fp, r2
   252b4:	bls	2551c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   252b8:	ldr	r0, [fp, r4, lsl #2]
   252bc:	adds	r1, ip, r0
   252c0:	beq	25500 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   252c4:	ldr	r0, [ip, r0]
   252c8:	sub	r0, r1, r0
   252cc:	ldrh	ip, [r0]
   252d0:	cmp	ip, #5
   252d4:	bls	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   252d8:	ldrh	ip, [r0, #4]
   252dc:	cmp	ip, #0
   252e0:	beq	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   252e4:	ldr	r0, [r1, ip]
   252e8:	add	r8, r4, #1
   252ec:	add	r1, r1, ip
   252f0:	add	r2, r2, #4
   252f4:	cmp	r6, r8
   252f8:	add	ip, fp, r2
   252fc:	add	r0, r0, #4
   25300:	add	r0, r1, r0
   25304:	bls	2551c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   25308:	ldr	r2, [fp, r2]
   2530c:	adds	r1, ip, r2
   25310:	beq	25500 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25314:	ldr	r2, [ip, r2]
   25318:	sub	r2, r1, r2
   2531c:	ldrh	ip, [r2]
   25320:	cmp	ip, #5
   25324:	bls	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   25328:	ldrh	ip, [r2, #4]
   2532c:	cmp	ip, #0
   25330:	beq	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   25334:	ldr	r2, [r1, ip]
   25338:	add	r1, r1, ip
   2533c:	add	r2, r2, #4
   25340:	adds	r1, r1, r2
   25344:	beq	25374 <__flatcc_fb_gen_c_json_printer@@Base+0xe78>
   25348:	cmp	r0, #0
   2534c:	ldr	r9, [r1, #-4]
   25350:	beq	254b8 <__flatcc_fb_gen_c_json_printer@@Base+0xfbc>
   25354:	ldr	r5, [r0, #-4]
   25358:	cmp	r9, r5
   2535c:	movcc	r2, r9
   25360:	movcs	r2, r5
   25364:	bl	13ffc <strncmp@plt>
   25368:	cmp	r0, #0
   2536c:	beq	254bc <__flatcc_fb_gen_c_json_printer@@Base+0xfc0>
   25370:	movlt	r4, r8
   25374:	lsl	r3, r7, #2
   25378:	cmp	r6, r7
   2537c:	add	r2, fp, r3
   25380:	str	r3, [sp, #4]
   25384:	bls	2551c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   25388:	ldr	r5, [fp, r7, lsl #2]
   2538c:	adds	r0, r2, r5
   25390:	beq	25500 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25394:	ldr	r2, [r2, r5]
   25398:	sub	r2, r0, r2
   2539c:	ldrh	r1, [r2]
   253a0:	cmp	r1, #5
   253a4:	bls	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   253a8:	ldrh	r2, [r2, #4]
   253ac:	cmp	r2, #0
   253b0:	beq	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   253b4:	ldr	r1, [r0, r2]
   253b8:	lsl	r3, r4, #2
   253bc:	add	r0, r0, r2
   253c0:	cmp	r6, r4
   253c4:	add	r2, fp, r3
   253c8:	add	r1, r1, #4
   253cc:	add	r0, r0, r1
   253d0:	bls	2551c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   253d4:	ldr	r6, [fp, r4, lsl #2]
   253d8:	adds	r1, r2, r6
   253dc:	beq	25500 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   253e0:	ldr	r2, [r2, r6]
   253e4:	sub	r2, r1, r2
   253e8:	ldrh	ip, [r2]
   253ec:	cmp	ip, #5
   253f0:	bls	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   253f4:	ldrh	ip, [r2, #4]
   253f8:	cmp	ip, #0
   253fc:	beq	254c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   25400:	ldr	r2, [r1, ip]
   25404:	add	r1, r1, ip
   25408:	add	r2, r2, #4
   2540c:	adds	r1, r1, r2
   25410:	bne	25238 <__flatcc_fb_gen_c_json_printer@@Base+0xd3c>
   25414:	cmp	sl, #0
   25418:	ldr	r3, [sp, #12]
   2541c:	bne	251fc <__flatcc_fb_gen_c_json_printer@@Base+0xd00>
   25420:	ldr	r3, [sp, #20]
   25424:	ldr	r1, [r3, #-4]
   25428:	ldr	r3, [sp, #24]
   2542c:	add	r2, r3, #1
   25430:	cmp	r2, r1
   25434:	str	r2, [sp, #24]
   25438:	bcs	254e4 <__flatcc_fb_gen_c_json_printer@@Base+0xfe8>
   2543c:	ldr	r0, [sp, #20]
   25440:	ldr	r3, [r0, r2, lsl #2]
   25444:	add	r0, r0, r2, lsl #2
   25448:	adds	r2, r0, r3
   2544c:	beq	25538 <__flatcc_fb_gen_c_json_printer@@Base+0x103c>
   25450:	ldr	r3, [r0, r3]
   25454:	sub	r3, r2, r3
   25458:	ldrh	r0, [r3]
   2545c:	cmp	r0, #7
   25460:	bls	25470 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
   25464:	ldrh	r3, [r3, #6]
   25468:	cmp	r3, #0
   2546c:	bne	24f7c <__flatcc_fb_gen_c_json_printer@@Base+0xa80>
   25470:	movw	r1, #25360	; 0x6310
   25474:	movt	r1, #5
   25478:	ldr	r3, [pc, #244]	; 25574 <__flatcc_fb_gen_c_json_printer@@Base+0x1078>
   2547c:	movw	r0, #25496	; 0x6398
   25480:	movt	r0, #5
   25484:	mov	r2, #224	; 0xe0
   25488:	bl	14014 <__assert_fail@plt>
   2548c:	mov	r5, r0
   25490:	cmp	r9, r5
   25494:	movhi	r4, r8
   25498:	b	25110 <__flatcc_fb_gen_c_json_printer@@Base+0xc14>
   2549c:	mov	r8, #0
   254a0:	cmp	r9, r8
   254a4:	bhi	2526c <__flatcc_fb_gen_c_json_printer@@Base+0xd70>
   254a8:	cmp	sl, #0
   254ac:	ldr	r3, [sp, #12]
   254b0:	bne	251fc <__flatcc_fb_gen_c_json_printer@@Base+0xd00>
   254b4:	b	25420 <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   254b8:	mov	r5, r0
   254bc:	cmp	r9, r5
   254c0:	movhi	r4, r8
   254c4:	b	25374 <__flatcc_fb_gen_c_json_printer@@Base+0xe78>
   254c8:	movw	r1, #25360	; 0x6310
   254cc:	movt	r1, #5
   254d0:	ldr	r3, [pc, #160]	; 25578 <__flatcc_fb_gen_c_json_printer@@Base+0x107c>
   254d4:	movw	r0, #25496	; 0x6398
   254d8:	movt	r0, #5
   254dc:	mov	r2, #195	; 0xc3
   254e0:	bl	14014 <__assert_fail@plt>
   254e4:	add	sp, sp, #36	; 0x24
   254e8:	ldrd	r4, [sp]
   254ec:	ldrd	r6, [sp, #8]
   254f0:	ldrd	r8, [sp, #16]
   254f4:	ldrd	sl, [sp, #24]
   254f8:	add	sp, sp, #32
   254fc:	pop	{pc}		; (ldr pc, [sp], #4)
   25500:	movw	r1, #25360	; 0x6310
   25504:	movt	r1, #5
   25508:	ldr	r3, [pc, #104]	; 25578 <__flatcc_fb_gen_c_json_printer@@Base+0x107c>
   2550c:	movw	r0, #25456	; 0x6370
   25510:	movt	r0, #5
   25514:	mov	r2, #195	; 0xc3
   25518:	bl	14014 <__assert_fail@plt>
   2551c:	movw	r1, #25360	; 0x6310
   25520:	movt	r1, #5
   25524:	ldr	r3, [pc, #80]	; 2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1080>
   25528:	movw	r0, #25532	; 0x63bc
   2552c:	movt	r0, #5
   25530:	mov	r2, #192	; 0xc0
   25534:	bl	14014 <__assert_fail@plt>
   25538:	movw	r1, #25360	; 0x6310
   2553c:	movt	r1, #5
   25540:	ldr	r3, [pc, #44]	; 25574 <__flatcc_fb_gen_c_json_printer@@Base+0x1078>
   25544:	movw	r0, #25456	; 0x6370
   25548:	movt	r0, #5
   2554c:	mov	r2, #224	; 0xe0
   25550:	bl	14014 <__assert_fail@plt>
   25554:	movw	r1, #25360	; 0x6310
   25558:	movt	r1, #5
   2555c:	ldr	r3, [pc, #12]	; 25570 <__flatcc_fb_gen_c_json_printer@@Base+0x1074>
   25560:	movw	r0, #25496	; 0x6398
   25564:	movt	r0, #5
   25568:	mov	r2, #237	; 0xed
   2556c:	bl	14014 <__assert_fail@plt>
   25570:	andeq	r6, r5, r0, lsr #2
   25574:	andeq	r6, r5, ip, lsr r1
   25578:	andeq	r6, r5, r0, ror r1
   2557c:	andeq	r6, r5, r8, asr r1
   25580:	strd	r4, [sp, #-36]!	; 0xffffffdc
   25584:	mov	r5, r2
   25588:	strd	r6, [sp, #8]
   2558c:	strd	r8, [sp, #16]
   25590:	ldr	r8, [r3, #60]	; 0x3c
   25594:	strd	sl, [sp, #24]
   25598:	mov	fp, r0
   2559c:	str	lr, [sp, #32]
   255a0:	vpush	{d8}
   255a4:	sub	sp, sp, #100	; 0x64
   255a8:	add	r2, sp, #52	; 0x34
   255ac:	str	r3, [sp, #8]
   255b0:	mov	r0, r8
   255b4:	str	r1, [sp, #52]	; 0x34
   255b8:	mov	r1, r3
   255bc:	mov	r3, #0
   255c0:	str	r3, [sp, #56]	; 0x38
   255c4:	str	r1, [sp, #92]	; 0x5c
   255c8:	movw	r1, #18968	; 0x4a18
   255cc:	movt	r1, #2
   255d0:	str	r3, [sp, #60]	; 0x3c
   255d4:	str	r3, [sp, #64]	; 0x40
   255d8:	str	r3, [sp, #68]	; 0x44
   255dc:	str	r3, [sp, #72]	; 0x48
   255e0:	str	r3, [sp, #76]	; 0x4c
   255e4:	str	r3, [sp, #80]	; 0x50
   255e8:	str	r3, [sp, #84]	; 0x54
   255ec:	str	r3, [sp, #88]	; 0x58
   255f0:	bl	29cf8 <fb_scope_table_visit@@Base>
   255f4:	ldr	r6, [sp, #56]	; 0x38
   255f8:	mov	r1, #8
   255fc:	mov	r0, r6
   25600:	bl	13e7c <calloc@plt>
   25604:	ldr	r7, [sp, #60]	; 0x3c
   25608:	mov	r9, r0
   2560c:	mov	r1, #8
   25610:	str	r0, [sp, #68]	; 0x44
   25614:	mov	r0, r7
   25618:	bl	13e7c <calloc@plt>
   2561c:	ldr	r4, [sp, #64]	; 0x40
   25620:	mov	sl, r0
   25624:	str	r0, [sp, #72]	; 0x48
   25628:	mov	r0, r4
   2562c:	bl	13f18 <malloc@plt>
   25630:	cmp	r6, #0
   25634:	mov	r3, r0
   25638:	str	r0, [sp, #76]	; 0x4c
   2563c:	movle	r6, #0
   25640:	movgt	r6, #1
   25644:	str	r9, [sp, #80]	; 0x50
   25648:	cmp	r9, #0
   2564c:	str	sl, [sp, #84]	; 0x54
   25650:	movne	r6, #0
   25654:	str	r0, [sp, #88]	; 0x58
   25658:	cmp	r6, #0
   2565c:	bne	2624c <__flatcc_fb_gen_c_json_printer@@Base+0x1d50>
   25660:	cmp	r7, #0
   25664:	movle	r7, #0
   25668:	movgt	r7, #1
   2566c:	cmp	sl, #0
   25670:	movne	r7, #0
   25674:	cmp	r7, #0
   25678:	bne	26274 <__flatcc_fb_gen_c_json_printer@@Base+0x1d78>
   2567c:	adds	r4, r4, #0
   25680:	movne	r4, #1
   25684:	cmp	r0, #0
   25688:	movne	r4, #0
   2568c:	cmp	r4, #0
   25690:	bne	26234 <__flatcc_fb_gen_c_json_printer@@Base+0x1d38>
   25694:	mov	r0, r8
   25698:	add	r2, sp, #52	; 0x34
   2569c:	movw	r1, #18944	; 0x4a00
   256a0:	movt	r1, #2
   256a4:	bl	29cf8 <fb_scope_table_visit@@Base>
   256a8:	ldr	r6, [sp, #56]	; 0x38
   256ac:	movw	r3, #18992	; 0x4a30
   256b0:	movt	r3, #2
   256b4:	mov	r2, #8
   256b8:	ldr	r7, [sp, #68]	; 0x44
   256bc:	mov	r1, r6
   256c0:	mov	r0, r7
   256c4:	bl	13fe4 <qsort@plt>
   256c8:	cmp	r6, #0
   256cc:	movgt	r0, r4
   256d0:	ble	256e8 <__flatcc_fb_gen_c_json_printer@@Base+0x11ec>
   256d4:	ldr	r3, [r7, r0, lsl #3]
   256d8:	str	r0, [r3, #124]	; 0x7c
   256dc:	add	r0, r0, #1
   256e0:	cmp	r6, r0
   256e4:	bne	256d4 <__flatcc_fb_gen_c_json_printer@@Base+0x11d8>
   256e8:	ldr	r4, [sp, #60]	; 0x3c
   256ec:	movw	r3, #18992	; 0x4a30
   256f0:	movt	r3, #2
   256f4:	mov	r2, #8
   256f8:	ldr	r6, [sp, #72]	; 0x48
   256fc:	mov	r1, r4
   25700:	mov	r0, r6
   25704:	bl	13fe4 <qsort@plt>
   25708:	cmp	r4, #0
   2570c:	movgt	r3, #0
   25710:	ble	25728 <__flatcc_fb_gen_c_json_printer@@Base+0x122c>
   25714:	ldr	r2, [r6, r3, lsl #3]
   25718:	str	r3, [r2, #124]	; 0x7c
   2571c:	add	r3, r3, #1
   25720:	cmp	r4, r3
   25724:	bne	25714 <__flatcc_fb_gen_c_json_printer@@Base+0x1218>
   25728:	ldr	r0, [sp, #56]	; 0x38
   2572c:	cmp	r0, #0
   25730:	movle	r3, #0
   25734:	strle	r3, [sp, #4]
   25738:	bgt	26140 <__flatcc_fb_gen_c_json_printer@@Base+0x1c44>
   2573c:	ldr	r3, [r5]
   25740:	movw	r1, #25588	; 0x63f4
   25744:	movt	r1, #5
   25748:	mov	r2, #0
   2574c:	mov	r0, fp
   25750:	cmp	r3, #0
   25754:	movne	r3, #2
   25758:	bl	36828 <flatcc_builder_start_buffer@@Base>
   2575c:	cmp	r0, #0
   25760:	bne	25770 <__flatcc_fb_gen_c_json_printer@@Base+0x1274>
   25764:	mov	r1, #5
   25768:	mov	r0, fp
   2576c:	bl	38314 <flatcc_builder_start_table@@Base>
   25770:	ldr	r3, [sp, #8]
   25774:	ldrh	r4, [r3, #16]
   25778:	cmp	r4, #2
   2577c:	beq	2618c <__flatcc_fb_gen_c_json_printer@@Base+0x1c90>
   25780:	ldr	r3, [sp, #8]
   25784:	ldrh	r3, [r3, #32]
   25788:	cmp	r3, #2
   2578c:	beq	261c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ccc>
   25790:	ldr	r3, [sp, #56]	; 0x38
   25794:	ldr	r2, [sp, #68]	; 0x44
   25798:	cmp	r3, #0
   2579c:	str	r3, [sp, #20]
   257a0:	str	r2, [sp, #28]
   257a4:	ble	25a20 <__flatcc_fb_gen_c_json_printer@@Base+0x1524>
   257a8:	ldr	r3, [sp, #4]
   257ac:	mov	sl, #0
   257b0:	str	sl, [sp, #16]
   257b4:	sub	r3, r3, #4
   257b8:	str	r3, [sp, #24]
   257bc:	ldr	r3, [sp, #28]
   257c0:	add	r3, r3, #4
   257c4:	str	r3, [sp, #44]	; 0x2c
   257c8:	ldr	r4, [sp, #16]
   257cc:	mov	r1, #5
   257d0:	mov	r0, fp
   257d4:	ldr	r3, [sp, #28]
   257d8:	ldr	sl, [r3, r4, lsl #3]
   257dc:	bl	38314 <flatcc_builder_start_table@@Base>
   257e0:	ldr	r3, [sp, #44]	; 0x2c
   257e4:	mov	r0, fp
   257e8:	ldr	r1, [r3, r4, lsl #3]
   257ec:	bl	3a29c <flatcc_builder_create_string_str@@Base>
   257f0:	subs	r4, r0, #0
   257f4:	beq	2580c <__flatcc_fb_gen_c_json_printer@@Base+0x1310>
   257f8:	mov	r1, #0
   257fc:	mov	r0, fp
   25800:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   25804:	cmp	r0, #0
   25808:	strne	r4, [r0]
   2580c:	mov	r0, fp
   25810:	bl	37cf4 <flatcc_builder_start_offset_vector@@Base>
   25814:	ldr	r9, [sl, #20]
   25818:	cmp	r9, #0
   2581c:	movwne	r3, #28840	; 0x70a8
   25820:	movne	r8, #0
   25824:	movtne	r3, #5
   25828:	strne	r3, [sp, #40]	; 0x28
   2582c:	beq	25980 <__flatcc_fb_gen_c_json_printer@@Base+0x1484>
   25830:	cmp	r8, #0
   25834:	ldrh	r7, [r9, #72]	; 0x48
   25838:	movne	r6, #0
   2583c:	strne	r6, [sp, #12]
   25840:	bne	25858 <__flatcc_fb_gen_c_json_printer@@Base+0x135c>
   25844:	tst	r7, #128	; 0x80
   25848:	movne	r6, #1
   2584c:	moveq	r6, r8
   25850:	streq	r8, [sp, #12]
   25854:	strne	r6, [sp, #12]
   25858:	ldrh	r3, [r9, #24]
   2585c:	and	r2, r7, #4
   25860:	str	r2, [sp, #32]
   25864:	ubfx	r2, r7, #2, #1
   25868:	cmp	r3, #14
   2586c:	str	r2, [sp, #36]	; 0x24
   25870:	beq	25fa0 <__flatcc_fb_gen_c_json_printer@@Base+0x1aa4>
   25874:	mov	r1, #9
   25878:	mov	r0, fp
   2587c:	bl	38314 <flatcc_builder_start_table@@Base>
   25880:	ldr	r3, [r9, #4]
   25884:	mov	r0, fp
   25888:	ldm	r3, {r1, r2}
   2588c:	bl	3a1a4 <flatcc_builder_create_string@@Base>
   25890:	subs	r4, r0, #0
   25894:	beq	258ac <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   25898:	mov	r1, #0
   2589c:	mov	r0, fp
   258a0:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   258a4:	cmp	r0, #0
   258a8:	strne	r4, [r0]
   258ac:	ldrh	r2, [r9, #24]
   258b0:	mov	r0, fp
   258b4:	ldr	r1, [r9, #16]
   258b8:	bl	24b54 <__flatcc_fb_gen_c_json_printer@@Base+0x658>
   258bc:	subs	r4, r0, #0
   258c0:	beq	258d8 <__flatcc_fb_gen_c_json_printer@@Base+0x13dc>
   258c4:	mov	r1, #1
   258c8:	mov	r0, fp
   258cc:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   258d0:	cmp	r0, #0
   258d4:	strne	r4, [r0]
   258d8:	ldrh	r3, [sl, #8]
   258dc:	cmp	r3, #0
   258e0:	beq	25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1950>
   258e4:	cmp	r3, #1
   258e8:	bne	25914 <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   258ec:	ldrh	r4, [r9, #80]	; 0x50
   258f0:	cmp	r4, #0
   258f4:	beq	25914 <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   258f8:	mov	r3, #2
   258fc:	mov	r1, #3
   25900:	mov	r2, r3
   25904:	mov	r0, fp
   25908:	bl	3a68c <flatcc_builder_table_add@@Base>
   2590c:	cmp	r0, #0
   25910:	strhne	r4, [r0]
   25914:	ldr	r3, [sp, #32]
   25918:	cmp	r3, #0
   2591c:	beq	25940 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   25920:	mov	r3, #1
   25924:	mov	r1, #6
   25928:	mov	r2, r3
   2592c:	mov	r0, fp
   25930:	bl	3a68c <flatcc_builder_table_add@@Base>
   25934:	cmp	r0, #0
   25938:	ldrne	r3, [sp, #36]	; 0x24
   2593c:	strbne	r3, [r0]
   25940:	mov	r2, #2
   25944:	ldr	r1, [pc, #2480]	; 262fc <__flatcc_fb_gen_c_json_printer@@Base+0x1e00>
   25948:	mov	r0, fp
   2594c:	bl	38bf8 <flatcc_builder_check_required@@Base>
   25950:	cmp	r0, #0
   25954:	beq	261fc <__flatcc_fb_gen_c_json_printer@@Base+0x1d00>
   25958:	mov	r0, fp
   2595c:	bl	38c94 <flatcc_builder_end_table@@Base>
   25960:	subs	r1, r0, #0
   25964:	beq	25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x193c>
   25968:	mov	r0, fp
   2596c:	orr	r8, r8, r6
   25970:	bl	3732c <flatcc_builder_offset_vector_push@@Base>
   25974:	ldr	r9, [r9]
   25978:	cmp	r9, #0
   2597c:	bne	25830 <__flatcc_fb_gen_c_json_printer@@Base+0x1334>
   25980:	mov	r0, fp
   25984:	bl	39374 <flatcc_builder_end_offset_vector@@Base>
   25988:	subs	r4, r0, #0
   2598c:	beq	259a4 <__flatcc_fb_gen_c_json_printer@@Base+0x14a8>
   25990:	mov	r1, #1
   25994:	mov	r0, fp
   25998:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   2599c:	cmp	r0, #0
   259a0:	strne	r4, [r0]
   259a4:	ldrh	r3, [sl, #8]
   259a8:	cmp	r3, #1
   259ac:	beq	25d58 <__flatcc_fb_gen_c_json_printer@@Base+0x185c>
   259b0:	ldrh	r4, [sl, #104]	; 0x68
   259b4:	cmp	r4, #0
   259b8:	beq	259d8 <__flatcc_fb_gen_c_json_printer@@Base+0x14dc>
   259bc:	mov	r3, #4
   259c0:	mov	r1, #3
   259c4:	mov	r2, r3
   259c8:	mov	r0, fp
   259cc:	bl	3a68c <flatcc_builder_table_add@@Base>
   259d0:	cmp	r0, #0
   259d4:	strne	r4, [r0]
   259d8:	mov	r2, #2
   259dc:	ldr	r1, [pc, #2332]	; 26300 <__flatcc_fb_gen_c_json_printer@@Base+0x1e04>
   259e0:	mov	r0, fp
   259e4:	bl	38bf8 <flatcc_builder_check_required@@Base>
   259e8:	cmp	r0, #0
   259ec:	beq	26280 <__flatcc_fb_gen_c_json_printer@@Base+0x1d84>
   259f0:	ldr	r3, [sp, #16]
   259f4:	mov	r0, fp
   259f8:	add	r3, r3, #1
   259fc:	mov	r4, r3
   25a00:	str	r3, [sp, #16]
   25a04:	bl	38c94 <flatcc_builder_end_table@@Base>
   25a08:	ldr	r2, [sp, #20]
   25a0c:	ldr	r3, [sp, #24]
   25a10:	cmp	r2, r4
   25a14:	str	r0, [r3, #4]!
   25a18:	str	r3, [sp, #24]
   25a1c:	bne	257c8 <__flatcc_fb_gen_c_json_printer@@Base+0x12cc>
   25a20:	mov	r0, fp
   25a24:	ldr	r1, [sp, #4]
   25a28:	ldr	r2, [sp, #20]
   25a2c:	bl	37e4c <flatcc_builder_create_offset_vector@@Base>
   25a30:	subs	r4, r0, #0
   25a34:	beq	25a4c <__flatcc_fb_gen_c_json_printer@@Base+0x1550>
   25a38:	mov	r1, #0
   25a3c:	mov	r0, fp
   25a40:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   25a44:	cmp	r0, #0
   25a48:	strne	r4, [r0]
   25a4c:	ldr	sl, [sp, #60]	; 0x3c
   25a50:	mov	r0, fp
   25a54:	ldr	r3, [sp, #72]	; 0x48
   25a58:	str	r3, [sp, #12]
   25a5c:	bl	37cf4 <flatcc_builder_start_offset_vector@@Base>
   25a60:	cmp	sl, #0
   25a64:	ble	25c2c <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
   25a68:	ldr	r3, [sp, #12]
   25a6c:	mov	r5, #0
   25a70:	add	r3, r3, #4
   25a74:	str	r3, [sp, #16]
   25a78:	ldr	r3, [sp, #12]
   25a7c:	mov	r1, #4
   25a80:	mov	r0, fp
   25a84:	ldr	r8, [r3, r5, lsl #3]
   25a88:	ldrh	r9, [r8, #8]
   25a8c:	bl	38314 <flatcc_builder_start_table@@Base>
   25a90:	ldr	r3, [sp, #16]
   25a94:	mov	r0, fp
   25a98:	ldr	r1, [r3, r5, lsl #3]
   25a9c:	bl	3a29c <flatcc_builder_create_string_str@@Base>
   25aa0:	subs	r4, r0, #0
   25aa4:	beq	25abc <__flatcc_fb_gen_c_json_printer@@Base+0x15c0>
   25aa8:	mov	r1, #0
   25aac:	mov	r0, fp
   25ab0:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   25ab4:	cmp	r0, #0
   25ab8:	strne	r4, [r0]
   25abc:	mov	r0, fp
   25ac0:	bl	37cf4 <flatcc_builder_start_offset_vector@@Base>
   25ac4:	ldr	r4, [r8, #20]
   25ac8:	cmp	r4, #0
   25acc:	beq	25b78 <__flatcc_fb_gen_c_json_printer@@Base+0x167c>
   25ad0:	cmp	r9, #4
   25ad4:	mov	r1, #3
   25ad8:	mov	r0, fp
   25adc:	beq	25dc0 <__flatcc_fb_gen_c_json_printer@@Base+0x18c4>
   25ae0:	bl	38314 <flatcc_builder_start_table@@Base>
   25ae4:	ldr	r3, [r4, #4]
   25ae8:	mov	r0, fp
   25aec:	ldm	r3, {r1, r2}
   25af0:	bl	3a1a4 <flatcc_builder_create_string@@Base>
   25af4:	subs	r6, r0, #0
   25af8:	beq	25b14 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   25afc:	mov	r1, #0
   25b00:	mov	r0, fp
   25b04:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   25b08:	cmp	r0, #0
   25b0c:	beq	25b14 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   25b10:	str	r6, [r0]
   25b14:	ldrd	r6, [r4, #48]	; 0x30
   25b18:	orrs	r3, r6, r7
   25b1c:	beq	25b3c <__flatcc_fb_gen_c_json_printer@@Base+0x1640>
   25b20:	mov	r3, #8
   25b24:	mov	r1, #1
   25b28:	mov	r2, r3
   25b2c:	mov	r0, fp
   25b30:	bl	3a68c <flatcc_builder_table_add@@Base>
   25b34:	cmp	r0, #0
   25b38:	strdne	r6, [r0]
   25b3c:	mov	r2, #1
   25b40:	ldr	r1, [pc, #1980]	; 26304 <__flatcc_fb_gen_c_json_printer@@Base+0x1e08>
   25b44:	mov	r0, fp
   25b48:	bl	38bf8 <flatcc_builder_check_required@@Base>
   25b4c:	cmp	r0, #0
   25b50:	beq	26218 <__flatcc_fb_gen_c_json_printer@@Base+0x1d1c>
   25b54:	mov	r0, fp
   25b58:	bl	38c94 <flatcc_builder_end_table@@Base>
   25b5c:	subs	r1, r0, #0
   25b60:	beq	25da4 <__flatcc_fb_gen_c_json_printer@@Base+0x18a8>
   25b64:	mov	r0, fp
   25b68:	bl	3732c <flatcc_builder_offset_vector_push@@Base>
   25b6c:	ldr	r4, [r4]
   25b70:	cmp	r4, #0
   25b74:	bne	25ad0 <__flatcc_fb_gen_c_json_printer@@Base+0x15d4>
   25b78:	mov	r0, fp
   25b7c:	bl	39374 <flatcc_builder_end_offset_vector@@Base>
   25b80:	subs	r4, r0, #0
   25b84:	beq	25b9c <__flatcc_fb_gen_c_json_printer@@Base+0x16a0>
   25b88:	mov	r1, #1
   25b8c:	mov	r0, fp
   25b90:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   25b94:	cmp	r0, #0
   25b98:	strne	r4, [r0]
   25b9c:	cmp	r9, #4
   25ba0:	bne	25bc4 <__flatcc_fb_gen_c_json_printer@@Base+0x16c8>
   25ba4:	mov	r3, #1
   25ba8:	mov	r1, #2
   25bac:	mov	r2, r3
   25bb0:	mov	r0, fp
   25bb4:	bl	3a68c <flatcc_builder_table_add@@Base>
   25bb8:	cmp	r0, #0
   25bbc:	movne	r3, #1
   25bc0:	strbne	r3, [r0]
   25bc4:	ldrh	r2, [r8, #48]	; 0x30
   25bc8:	mov	r0, fp
   25bcc:	ldr	r1, [r8, #40]	; 0x28
   25bd0:	bl	24b54 <__flatcc_fb_gen_c_json_printer@@Base+0x658>
   25bd4:	subs	r4, r0, #0
   25bd8:	beq	25bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x16f4>
   25bdc:	mov	r1, #3
   25be0:	mov	r0, fp
   25be4:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   25be8:	cmp	r0, #0
   25bec:	strne	r4, [r0]
   25bf0:	mov	r2, #3
   25bf4:	ldr	r1, [pc, #1804]	; 26308 <__flatcc_fb_gen_c_json_printer@@Base+0x1e0c>
   25bf8:	mov	r0, fp
   25bfc:	bl	38bf8 <flatcc_builder_check_required@@Base>
   25c00:	cmp	r0, #0
   25c04:	beq	2629c <__flatcc_fb_gen_c_json_printer@@Base+0x1da0>
   25c08:	mov	r0, fp
   25c0c:	bl	38c94 <flatcc_builder_end_table@@Base>
   25c10:	subs	r1, r0, #0
   25c14:	beq	25c20 <__flatcc_fb_gen_c_json_printer@@Base+0x1724>
   25c18:	mov	r0, fp
   25c1c:	bl	3732c <flatcc_builder_offset_vector_push@@Base>
   25c20:	add	r5, r5, #1
   25c24:	cmp	sl, r5
   25c28:	bne	25a78 <__flatcc_fb_gen_c_json_printer@@Base+0x157c>
   25c2c:	mov	r0, fp
   25c30:	bl	39374 <flatcc_builder_end_offset_vector@@Base>
   25c34:	subs	r4, r0, #0
   25c38:	beq	25c50 <__flatcc_fb_gen_c_json_printer@@Base+0x1754>
   25c3c:	mov	r1, #1
   25c40:	mov	r0, fp
   25c44:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   25c48:	cmp	r0, #0
   25c4c:	strne	r4, [r0]
   25c50:	ldr	r3, [sp, #8]
   25c54:	ldr	r3, [r3, #52]	; 0x34
   25c58:	cmp	r3, #0
   25c5c:	beq	25c94 <__flatcc_fb_gen_c_json_printer@@Base+0x1798>
   25c60:	ldrh	r2, [r3, #8]
   25c64:	cmp	r2, #0
   25c68:	bne	25c94 <__flatcc_fb_gen_c_json_printer@@Base+0x1798>
   25c6c:	ldr	r2, [sp, #4]
   25c70:	ldr	r3, [r3, #124]	; 0x7c
   25c74:	ldr	r4, [r2, r3, lsl #2]
   25c78:	cmp	r4, #0
   25c7c:	beq	25c94 <__flatcc_fb_gen_c_json_printer@@Base+0x1798>
   25c80:	mov	r1, #4
   25c84:	mov	r0, fp
   25c88:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   25c8c:	cmp	r0, #0
   25c90:	strne	r4, [r0]
   25c94:	mov	r2, #2
   25c98:	ldr	r1, [pc, #1644]	; 2630c <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
   25c9c:	mov	r0, fp
   25ca0:	bl	38bf8 <flatcc_builder_check_required@@Base>
   25ca4:	cmp	r0, #0
   25ca8:	beq	262e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1de4>
   25cac:	mov	r0, fp
   25cb0:	bl	38c94 <flatcc_builder_end_table@@Base>
   25cb4:	mov	r1, r0
   25cb8:	mov	r0, fp
   25cbc:	bl	369d4 <flatcc_builder_end_buffer@@Base>
   25cc0:	ldr	r0, [sp, #68]	; 0x44
   25cc4:	cmp	r0, #0
   25cc8:	beq	25cd0 <__flatcc_fb_gen_c_json_printer@@Base+0x17d4>
   25ccc:	bl	13eac <free@plt>
   25cd0:	ldr	r0, [sp, #72]	; 0x48
   25cd4:	cmp	r0, #0
   25cd8:	beq	25ce0 <__flatcc_fb_gen_c_json_printer@@Base+0x17e4>
   25cdc:	bl	13eac <free@plt>
   25ce0:	ldr	r0, [sp, #76]	; 0x4c
   25ce4:	cmp	r0, #0
   25ce8:	beq	25cf0 <__flatcc_fb_gen_c_json_printer@@Base+0x17f4>
   25cec:	bl	13eac <free@plt>
   25cf0:	ldr	r3, [sp, #4]
   25cf4:	mov	r4, #0
   25cf8:	str	r4, [sp, #52]	; 0x34
   25cfc:	str	r4, [sp, #56]	; 0x38
   25d00:	str	r4, [sp, #60]	; 0x3c
   25d04:	cmp	r3, r4
   25d08:	mov	r0, r3
   25d0c:	str	r4, [sp, #64]	; 0x40
   25d10:	str	r4, [sp, #68]	; 0x44
   25d14:	str	r4, [sp, #72]	; 0x48
   25d18:	str	r4, [sp, #76]	; 0x4c
   25d1c:	str	r4, [sp, #80]	; 0x50
   25d20:	str	r4, [sp, #84]	; 0x54
   25d24:	str	r4, [sp, #88]	; 0x58
   25d28:	str	r4, [sp, #92]	; 0x5c
   25d2c:	beq	25d38 <__flatcc_fb_gen_c_json_printer@@Base+0x183c>
   25d30:	bl	13eac <free@plt>
   25d34:	mov	r0, r4
   25d38:	add	sp, sp, #100	; 0x64
   25d3c:	vpop	{d8}
   25d40:	ldrd	r4, [sp]
   25d44:	ldrd	r6, [sp, #8]
   25d48:	ldrd	r8, [sp, #16]
   25d4c:	ldrd	sl, [sp, #24]
   25d50:	add	sp, sp, #32
   25d54:	pop	{pc}		; (ldr pc, [sp], #4)
   25d58:	ldr	r4, [sl, #112]	; 0x70
   25d5c:	cmp	r4, #0
   25d60:	beq	25d80 <__flatcc_fb_gen_c_json_printer@@Base+0x1884>
   25d64:	mov	r3, #4
   25d68:	mov	r0, fp
   25d6c:	mov	r2, r3
   25d70:	mov	r1, r3
   25d74:	bl	3a68c <flatcc_builder_table_add@@Base>
   25d78:	cmp	r0, #0
   25d7c:	strne	r4, [r0]
   25d80:	mov	r3, #1
   25d84:	mov	r1, #2
   25d88:	mov	r2, r3
   25d8c:	mov	r0, fp
   25d90:	bl	3a68c <flatcc_builder_table_add@@Base>
   25d94:	cmp	r0, #0
   25d98:	movne	r3, #1
   25d9c:	strbne	r3, [r0]
   25da0:	b	259b0 <__flatcc_fb_gen_c_json_printer@@Base+0x14b4>
   25da4:	ldr	r4, [r4]
   25da8:	cmp	r4, #0
   25dac:	beq	25b78 <__flatcc_fb_gen_c_json_printer@@Base+0x167c>
   25db0:	cmp	r9, #4
   25db4:	mov	r1, #3
   25db8:	mov	r0, fp
   25dbc:	bne	25ae0 <__flatcc_fb_gen_c_json_printer@@Base+0x15e4>
   25dc0:	bl	38314 <flatcc_builder_start_table@@Base>
   25dc4:	ldr	r3, [r4, #4]
   25dc8:	mov	r0, fp
   25dcc:	ldm	r3, {r1, r2}
   25dd0:	bl	3a1a4 <flatcc_builder_create_string@@Base>
   25dd4:	subs	r6, r0, #0
   25dd8:	beq	25df0 <__flatcc_fb_gen_c_json_printer@@Base+0x18f4>
   25ddc:	mov	r1, #0
   25de0:	mov	r0, fp
   25de4:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   25de8:	cmp	r0, #0
   25dec:	strne	r6, [r0]
   25df0:	ldr	r3, [sp, #4]
   25df4:	cmp	r3, #0
   25df8:	beq	25b14 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   25dfc:	ldrh	r3, [r4, #24]
   25e00:	cmp	r3, #14
   25e04:	bne	25b14 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   25e08:	ldr	r3, [r4, #16]
   25e0c:	ldr	r2, [sp, #4]
   25e10:	ldr	r3, [r3, #124]	; 0x7c
   25e14:	ldr	r6, [r2, r3, lsl #2]
   25e18:	cmp	r6, #0
   25e1c:	beq	25b14 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   25e20:	mov	r1, #2
   25e24:	mov	r0, fp
   25e28:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   25e2c:	cmp	r0, #0
   25e30:	bne	25b10 <__flatcc_fb_gen_c_json_printer@@Base+0x1614>
   25e34:	b	25b14 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   25e38:	ldr	r9, [r9]
   25e3c:	orr	r8, r8, r6
   25e40:	cmp	r9, #0
   25e44:	bne	25830 <__flatcc_fb_gen_c_json_printer@@Base+0x1334>
   25e48:	b	25980 <__flatcc_fb_gen_c_json_printer@@Base+0x1484>
   25e4c:	ldrh	r3, [r9, #56]	; 0x38
   25e50:	sub	r3, r3, #3
   25e54:	cmp	r3, #3
   25e58:	ldrls	pc, [pc, r3, lsl #2]
   25e5c:	b	25e9c <__flatcc_fb_gen_c_json_printer@@Base+0x19a0>
   25e60:	andeq	r5, r2, r4, asr #30
   25e64:	andeq	r5, r2, ip, lsr pc
   25e68:	andeq	r5, r2, ip, lsr pc
   25e6c:	andeq	r5, r2, r0, ror lr
   25e70:	ldrb	r4, [r9, #48]	; 0x30
   25e74:	mov	r5, #0
   25e78:	orrs	r3, r4, r5
   25e7c:	beq	25e9c <__flatcc_fb_gen_c_json_printer@@Base+0x19a0>
   25e80:	mov	r3, #8
   25e84:	mov	r1, #4
   25e88:	mov	r2, r3
   25e8c:	mov	r0, fp
   25e90:	bl	3a68c <flatcc_builder_table_add@@Base>
   25e94:	cmp	r0, #0
   25e98:	strdne	r4, [r0]
   25e9c:	ldrh	r4, [r9, #96]	; 0x60
   25ea0:	cmp	r4, #0
   25ea4:	moveq	r4, #4
   25ea8:	beq	25f80 <__flatcc_fb_gen_c_json_printer@@Base+0x1a84>
   25eac:	mov	r3, #2
   25eb0:	mov	r0, fp
   25eb4:	mov	r2, r3
   25eb8:	mov	r1, r3
   25ebc:	bl	3a68c <flatcc_builder_table_add@@Base>
   25ec0:	cmp	r0, #0
   25ec4:	strhne	r4, [r0]
   25ec8:	ldrh	r4, [r9, #96]	; 0x60
   25ecc:	add	r4, r4, #2
   25ed0:	lsl	r4, r4, #1
   25ed4:	uxth	r4, r4
   25ed8:	cmp	r4, #0
   25edc:	bne	25f80 <__flatcc_fb_gen_c_json_printer@@Base+0x1a84>
   25ee0:	ldr	r3, [sp, #12]
   25ee4:	cmp	r3, #0
   25ee8:	beq	25f0c <__flatcc_fb_gen_c_json_printer@@Base+0x1a10>
   25eec:	mov	r3, #1
   25ef0:	mov	r1, #8
   25ef4:	mov	r2, r3
   25ef8:	mov	r0, fp
   25efc:	bl	3a68c <flatcc_builder_table_add@@Base>
   25f00:	cmp	r0, #0
   25f04:	movne	r3, #1
   25f08:	strbne	r3, [r0]
   25f0c:	tst	r7, #256	; 0x100
   25f10:	beq	25914 <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   25f14:	mov	r3, #1
   25f18:	mov	r1, #7
   25f1c:	mov	r2, r3
   25f20:	mov	r0, fp
   25f24:	bl	3a68c <flatcc_builder_table_add@@Base>
   25f28:	cmp	r0, #0
   25f2c:	beq	25914 <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   25f30:	mov	r3, #1
   25f34:	strb	r3, [r0]
   25f38:	b	25914 <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   25f3c:	ldrd	r4, [r9, #48]	; 0x30
   25f40:	b	25e78 <__flatcc_fb_gen_c_json_printer@@Base+0x197c>
   25f44:	vldr	d8, [r9, #48]	; 0x30
   25f48:	vcmp.f64	d8, #0.0
   25f4c:	vmrs	APSR_nzcv, fpscr
   25f50:	beq	25e9c <__flatcc_fb_gen_c_json_printer@@Base+0x19a0>
   25f54:	mov	r3, #8
   25f58:	mov	r1, #5
   25f5c:	mov	r2, r3
   25f60:	mov	r0, fp
   25f64:	bl	3a68c <flatcc_builder_table_add@@Base>
   25f68:	ldrh	r4, [r9, #96]	; 0x60
   25f6c:	cmp	r0, #0
   25f70:	vstrne	d8, [r0]
   25f74:	cmp	r4, #0
   25f78:	moveq	r4, #4
   25f7c:	bne	25eac <__flatcc_fb_gen_c_json_printer@@Base+0x19b0>
   25f80:	mov	r3, #2
   25f84:	mov	r1, #3
   25f88:	mov	r2, r3
   25f8c:	mov	r0, fp
   25f90:	bl	3a68c <flatcc_builder_table_add@@Base>
   25f94:	cmp	r0, #0
   25f98:	strhne	r4, [r0]
   25f9c:	b	25ee0 <__flatcc_fb_gen_c_json_printer@@Base+0x19e4>
   25fa0:	ldr	r3, [r9, #16]
   25fa4:	ldrh	r3, [r3, #8]
   25fa8:	cmp	r3, #4
   25fac:	bne	25874 <__flatcc_fb_gen_c_json_printer@@Base+0x1378>
   25fb0:	mov	r1, #9
   25fb4:	mov	r0, fp
   25fb8:	bl	38314 <flatcc_builder_start_table@@Base>
   25fbc:	mov	r0, fp
   25fc0:	bl	380a4 <flatcc_builder_start_string@@Base>
   25fc4:	ldr	r3, [r9, #4]
   25fc8:	mov	r0, fp
   25fcc:	ldm	r3, {r1, r2}
   25fd0:	bl	37660 <flatcc_builder_append_string@@Base>
   25fd4:	mov	r2, #5
   25fd8:	mov	r0, fp
   25fdc:	ldr	r1, [sp, #40]	; 0x28
   25fe0:	bl	37660 <flatcc_builder_append_string@@Base>
   25fe4:	mov	r0, fp
   25fe8:	bl	3a4b0 <flatcc_builder_end_string@@Base>
   25fec:	subs	r4, r0, #0
   25ff0:	beq	26008 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0c>
   25ff4:	mov	r1, #0
   25ff8:	mov	r0, fp
   25ffc:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   26000:	cmp	r0, #0
   26004:	strne	r4, [r0]
   26008:	mov	r1, #3
   2600c:	mov	r0, fp
   26010:	bl	38314 <flatcc_builder_start_table@@Base>
   26014:	subs	r5, r0, #0
   26018:	bne	2607c <__flatcc_fb_gen_c_json_printer@@Base+0x1b80>
   2601c:	mov	r3, #1
   26020:	mov	r1, r5
   26024:	mov	r2, r3
   26028:	mov	r0, fp
   2602c:	bl	3a68c <flatcc_builder_table_add@@Base>
   26030:	subs	r3, r0, #0
   26034:	beq	2607c <__flatcc_fb_gen_c_json_printer@@Base+0x1b80>
   26038:	mov	r4, #1
   2603c:	mov	r2, r5
   26040:	ldr	r1, [pc, #712]	; 26310 <__flatcc_fb_gen_c_json_printer@@Base+0x1e14>
   26044:	mov	r0, fp
   26048:	strb	r4, [r3]
   2604c:	bl	38bf8 <flatcc_builder_check_required@@Base>
   26050:	cmp	r0, #0
   26054:	beq	262b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1dbc>
   26058:	mov	r0, fp
   2605c:	bl	38c94 <flatcc_builder_end_table@@Base>
   26060:	subs	r5, r0, #0
   26064:	beq	2607c <__flatcc_fb_gen_c_json_printer@@Base+0x1b80>
   26068:	mov	r1, r4
   2606c:	mov	r0, fp
   26070:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   26074:	cmp	r0, #0
   26078:	strne	r5, [r0]
   2607c:	ldrh	r4, [r9, #96]	; 0x60
   26080:	add	r5, r4, #1
   26084:	lsl	r5, r5, #1
   26088:	uxth	r5, r5
   2608c:	cmp	r5, #0
   26090:	beq	260b4 <__flatcc_fb_gen_c_json_printer@@Base+0x1bb8>
   26094:	mov	r3, #2
   26098:	mov	r1, #3
   2609c:	mov	r2, r3
   260a0:	mov	r0, fp
   260a4:	bl	3a68c <flatcc_builder_table_add@@Base>
   260a8:	cmp	r0, #0
   260ac:	ldrh	r4, [r9, #96]	; 0x60
   260b0:	strhne	r5, [r0]
   260b4:	sub	r4, r4, #1
   260b8:	uxth	r4, r4
   260bc:	cmp	r4, #0
   260c0:	beq	260e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be4>
   260c4:	mov	r3, #2
   260c8:	mov	r0, fp
   260cc:	mov	r2, r3
   260d0:	mov	r1, r3
   260d4:	bl	3a68c <flatcc_builder_table_add@@Base>
   260d8:	cmp	r0, #0
   260dc:	strhne	r4, [r0]
   260e0:	and	r3, r7, #4
   260e4:	cmp	r3, #0
   260e8:	beq	2610c <__flatcc_fb_gen_c_json_printer@@Base+0x1c10>
   260ec:	mov	r3, #1
   260f0:	mov	r1, #6
   260f4:	mov	r2, r3
   260f8:	mov	r0, fp
   260fc:	bl	3a68c <flatcc_builder_table_add@@Base>
   26100:	cmp	r0, #0
   26104:	ubfxne	r3, r7, #2, #1
   26108:	strbne	r3, [r0]
   2610c:	mov	r2, #2
   26110:	ldr	r1, [pc, #484]	; 262fc <__flatcc_fb_gen_c_json_printer@@Base+0x1e00>
   26114:	mov	r0, fp
   26118:	bl	38bf8 <flatcc_builder_check_required@@Base>
   2611c:	cmp	r0, #0
   26120:	beq	261fc <__flatcc_fb_gen_c_json_printer@@Base+0x1d00>
   26124:	mov	r0, fp
   26128:	bl	38c94 <flatcc_builder_end_table@@Base>
   2612c:	subs	r1, r0, #0
   26130:	beq	25874 <__flatcc_fb_gen_c_json_printer@@Base+0x1378>
   26134:	mov	r0, fp
   26138:	bl	3732c <flatcc_builder_offset_vector_push@@Base>
   2613c:	b	25874 <__flatcc_fb_gen_c_json_printer@@Base+0x1378>
   26140:	lsl	r0, r0, #2
   26144:	bl	13f18 <malloc@plt>
   26148:	subs	r3, r0, #0
   2614c:	str	r3, [sp, #4]
   26150:	bne	2573c <__flatcc_fb_gen_c_json_printer@@Base+0x1240>
   26154:	ldr	r0, [sp, #68]	; 0x44
   26158:	cmp	r0, #0
   2615c:	beq	26164 <__flatcc_fb_gen_c_json_printer@@Base+0x1c68>
   26160:	bl	13eac <free@plt>
   26164:	ldr	r0, [sp, #72]	; 0x48
   26168:	cmp	r0, #0
   2616c:	beq	26174 <__flatcc_fb_gen_c_json_printer@@Base+0x1c78>
   26170:	bl	13eac <free@plt>
   26174:	ldr	r0, [sp, #76]	; 0x4c
   26178:	cmp	r0, #0
   2617c:	beq	26184 <__flatcc_fb_gen_c_json_printer@@Base+0x1c88>
   26180:	bl	13eac <free@plt>
   26184:	mvn	r0, #0
   26188:	b	25d38 <__flatcc_fb_gen_c_json_printer@@Base+0x183c>
   2618c:	mov	r0, fp
   26190:	ldr	r1, [r3, #8]
   26194:	ldr	r2, [r3, #12]
   26198:	bl	3a1a4 <flatcc_builder_create_string@@Base>
   2619c:	subs	r5, r0, #0
   261a0:	beq	25780 <__flatcc_fb_gen_c_json_printer@@Base+0x1284>
   261a4:	mov	r1, r4
   261a8:	mov	r0, fp
   261ac:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   261b0:	ldr	r3, [sp, #8]
   261b4:	cmp	r0, #0
   261b8:	strne	r5, [r0]
   261bc:	ldrh	r3, [r3, #32]
   261c0:	cmp	r3, #2
   261c4:	bne	25790 <__flatcc_fb_gen_c_json_printer@@Base+0x1294>
   261c8:	ldr	r3, [sp, #8]
   261cc:	mov	r0, fp
   261d0:	ldr	r1, [r3, #24]
   261d4:	ldr	r2, [r3, #28]
   261d8:	bl	3a1a4 <flatcc_builder_create_string@@Base>
   261dc:	subs	r4, r0, #0
   261e0:	beq	25790 <__flatcc_fb_gen_c_json_printer@@Base+0x1294>
   261e4:	mov	r1, #3
   261e8:	mov	r0, fp
   261ec:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   261f0:	cmp	r0, #0
   261f4:	strne	r4, [r0]
   261f8:	b	25790 <__flatcc_fb_gen_c_json_printer@@Base+0x1294>
   261fc:	movw	r1, #25120	; 0x6220
   26200:	movt	r1, #5
   26204:	ldr	r3, [pc, #264]	; 26314 <__flatcc_fb_gen_c_json_printer@@Base+0x1e18>
   26208:	movw	r0, #25596	; 0x63fc
   2620c:	movt	r0, #5
   26210:	mov	r2, #29
   26214:	bl	14014 <__assert_fail@plt>
   26218:	movw	r1, #25120	; 0x6220
   2621c:	movt	r1, #5
   26220:	ldr	r3, [pc, #240]	; 26318 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   26224:	movw	r0, #25888	; 0x6520
   26228:	movt	r0, #5
   2622c:	mov	r2, #25
   26230:	bl	14014 <__assert_fail@plt>
   26234:	cmp	r9, #0
   26238:	beq	262d4 <__flatcc_fb_gen_c_json_printer@@Base+0x1dd8>
   2623c:	mov	r0, r9
   26240:	str	r3, [sp, #4]
   26244:	bl	13eac <free@plt>
   26248:	ldr	r3, [sp, #4]
   2624c:	cmp	sl, #0
   26250:	beq	26264 <__flatcc_fb_gen_c_json_printer@@Base+0x1d68>
   26254:	mov	r0, sl
   26258:	str	r3, [sp, #4]
   2625c:	bl	13eac <free@plt>
   26260:	ldr	r3, [sp, #4]
   26264:	cmp	r3, #0
   26268:	beq	26184 <__flatcc_fb_gen_c_json_printer@@Base+0x1c88>
   2626c:	mov	r0, r3
   26270:	b	26180 <__flatcc_fb_gen_c_json_printer@@Base+0x1c84>
   26274:	cmp	r9, #0
   26278:	bne	2623c <__flatcc_fb_gen_c_json_printer@@Base+0x1d40>
   2627c:	b	26264 <__flatcc_fb_gen_c_json_printer@@Base+0x1d68>
   26280:	movw	r1, #25120	; 0x6220
   26284:	movt	r1, #5
   26288:	ldr	r3, [pc, #140]	; 2631c <__flatcc_fb_gen_c_json_printer@@Base+0x1e20>
   2628c:	movw	r0, #25740	; 0x648c
   26290:	movt	r0, #5
   26294:	mov	r2, #31
   26298:	bl	14014 <__assert_fail@plt>
   2629c:	movw	r1, #25120	; 0x6220
   262a0:	movt	r1, #5
   262a4:	ldr	r3, [pc, #116]	; 26320 <__flatcc_fb_gen_c_json_printer@@Base+0x1e24>
   262a8:	movw	r0, #26040	; 0x65b8
   262ac:	movt	r0, #5
   262b0:	mov	r2, #27
   262b4:	bl	14014 <__assert_fail@plt>
   262b8:	movw	r1, #25120	; 0x6220
   262bc:	movt	r1, #5
   262c0:	ldr	r3, [pc, #92]	; 26324 <__flatcc_fb_gen_c_json_printer@@Base+0x1e28>
   262c4:	movw	r0, #25216	; 0x6280
   262c8:	movt	r0, #5
   262cc:	mov	r2, #23
   262d0:	bl	14014 <__assert_fail@plt>
   262d4:	cmp	sl, #0
   262d8:	bne	26254 <__flatcc_fb_gen_c_json_printer@@Base+0x1d58>
   262dc:	b	26184 <__flatcc_fb_gen_c_json_printer@@Base+0x1c88>
   262e0:	movw	r1, #25120	; 0x6220
   262e4:	movt	r1, #5
   262e8:	ldr	r3, [pc, #56]	; 26328 <__flatcc_fb_gen_c_json_printer@@Base+0x1e2c>
   262ec:	movw	r0, #26184	; 0x6648
   262f0:	movt	r0, #5
   262f4:	mov	r2, #33	; 0x21
   262f8:	bl	14014 <__assert_fail@plt>
   262fc:	andeq	r6, r5, r8, lsl #3
   26300:	andeq	r6, r5, r8, lsr #3
   26304:	andeq	r6, r5, r8, asr #3
   26308:	andeq	r6, r5, r4, ror #3
   2630c:	andeq	r6, r5, r0, lsl #4
   26310:	andeq	r6, r5, r8, lsl #2
   26314:	muleq	r5, r0, r1
   26318:	andeq	r6, r5, ip, asr #3
   2631c:			; <UNDEFINED> instruction: 0x000561b0
   26320:	andeq	r6, r5, ip, ror #3
   26324:	andeq	r6, r5, ip, lsl #2
   26328:	andeq	r6, r5, r8, lsl #4

0002632c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   2632c:	strd	r4, [sp, #-20]!	; 0xffffffec
   26330:	mov	r4, r2
   26334:	mov	r5, r3
   26338:	strd	r6, [sp, #8]
   2633c:	mov	r6, r0
   26340:	mov	r7, r1
   26344:	str	lr, [sp, #16]
   26348:	sub	sp, sp, #236	; 0xec
   2634c:	mov	r0, sp
   26350:	bl	35d90 <flatcc_builder_init@@Base>
   26354:	mov	r3, r7
   26358:	add	r2, r6, #188	; 0xbc
   2635c:	ldr	r1, [r6, #184]	; 0xb8
   26360:	mov	r0, sp
   26364:	bl	25580 <__flatcc_fb_gen_c_json_printer@@Base+0x1084>
   26368:	mov	r1, r4
   2636c:	mov	r0, sp
   26370:	ldr	r2, [r5]
   26374:	bl	3b0ac <flatcc_builder_copy_buffer@@Base>
   26378:	cmp	r0, #0
   2637c:	beq	26388 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5c>
   26380:	mov	r0, r4
   26384:	bl	24ea8 <__flatcc_fb_gen_c_json_printer@@Base+0x9ac>
   26388:	mov	r0, sp
   2638c:	bl	3afe0 <flatcc_builder_get_buffer_size@@Base>
   26390:	str	r0, [r5]
   26394:	mov	r0, sp
   26398:	bl	35f58 <flatcc_builder_clear@@Base>
   2639c:	mov	r0, r4
   263a0:	add	sp, sp, #236	; 0xec
   263a4:	ldrd	r4, [sp]
   263a8:	ldrd	r6, [sp, #8]
   263ac:	add	sp, sp, #16
   263b0:	pop	{pc}		; (ldr pc, [sp], #4)

000263b4 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   263b4:	strd	r4, [sp, #-16]!
   263b8:	mov	r4, r0
   263bc:	mov	r5, r1
   263c0:	str	r6, [sp, #8]
   263c4:	mov	r6, r2
   263c8:	str	lr, [sp, #12]
   263cc:	sub	sp, sp, #232	; 0xe8
   263d0:	mov	r0, sp
   263d4:	bl	35d90 <flatcc_builder_init@@Base>
   263d8:	add	r2, r4, #188	; 0xbc
   263dc:	mov	r3, r5
   263e0:	ldr	r1, [r4, #184]	; 0xb8
   263e4:	mov	r0, sp
   263e8:	bl	25580 <__flatcc_fb_gen_c_json_printer@@Base+0x1084>
   263ec:	cmp	r0, #0
   263f0:	movne	r4, #0
   263f4:	bne	26410 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x5c>
   263f8:	mov	r1, r6
   263fc:	mov	r0, sp
   26400:	bl	3b0e8 <flatcc_builder_finalize_buffer@@Base>
   26404:	subs	r4, r0, #0
   26408:	beq	26410 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x5c>
   2640c:	bl	24ea8 <__flatcc_fb_gen_c_json_printer@@Base+0x9ac>
   26410:	mov	r0, sp
   26414:	bl	35f58 <flatcc_builder_clear@@Base>
   26418:	mov	r0, r4
   2641c:	add	sp, sp, #232	; 0xe8
   26420:	ldrd	r4, [sp]
   26424:	ldr	r6, [sp, #8]
   26428:	add	sp, sp, #12
   2642c:	pop	{pc}		; (ldr pc, [sp], #4)

00026430 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   26430:	strd	r4, [sp, #-28]!	; 0xffffffe4
   26434:	mov	r4, r0
   26438:	ldr	r5, [r0, #216]	; 0xd8
   2643c:	strd	r6, [sp, #8]
   26440:	mov	r6, r1
   26444:	strd	r8, [sp, #16]
   26448:	str	lr, [sp, #24]
   2644c:	sub	sp, sp, #252	; 0xfc
   26450:	ldr	r7, [r0, #108]	; 0x6c
   26454:	cmp	r5, #0
   26458:	beq	265a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
   2645c:	mov	r0, r5
   26460:	bl	13f54 <strlen@plt>
   26464:	mov	r8, r0
   26468:	cmp	r7, #0
   2646c:	beq	26528 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf8>
   26470:	movw	r3, #41132	; 0xa0ac
   26474:	movt	r3, #6
   26478:	ldr	r5, [r3]
   2647c:	cmp	r5, #0
   26480:	beq	265f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c8>
   26484:	add	r0, sp, #16
   26488:	bl	35d90 <flatcc_builder_init@@Base>
   2648c:	add	r2, r4, #188	; 0xbc
   26490:	mov	r3, r6
   26494:	ldr	r1, [r4, #184]	; 0xb8
   26498:	add	r0, sp, #16
   2649c:	bl	25580 <__flatcc_fb_gen_c_json_printer@@Base+0x1084>
   264a0:	subs	r4, r0, #0
   264a4:	bne	26584 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x154>
   264a8:	add	r1, sp, #12
   264ac:	add	r0, sp, #16
   264b0:	bl	3b0e8 <flatcc_builder_finalize_buffer@@Base>
   264b4:	subs	r6, r0, #0
   264b8:	beq	26584 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x154>
   264bc:	bl	24ea8 <__flatcc_fb_gen_c_json_printer@@Base+0x9ac>
   264c0:	add	r0, sp, #16
   264c4:	bl	35f58 <flatcc_builder_clear@@Base>
   264c8:	mov	r3, r5
   264cc:	mov	r1, #1
   264d0:	ldr	r2, [sp, #12]
   264d4:	mov	r0, r6
   264d8:	bl	13ef4 <fwrite@plt>
   264dc:	ldr	r3, [sp, #12]
   264e0:	cmp	r0, r3
   264e4:	bne	265b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x180>
   264e8:	mov	r0, r6
   264ec:	bl	13eac <free@plt>
   264f0:	movw	r3, #41132	; 0xa0ac
   264f4:	movt	r3, #6
   264f8:	ldr	r3, [r3]
   264fc:	cmp	r3, r5
   26500:	beq	2650c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdc>
   26504:	mov	r0, r5
   26508:	bl	13fa8 <fclose@plt>
   2650c:	mov	r0, r4
   26510:	add	sp, sp, #252	; 0xfc
   26514:	ldrd	r4, [sp]
   26518:	ldrd	r6, [sp, #8]
   2651c:	ldrd	r8, [sp, #16]
   26520:	add	sp, sp, #24
   26524:	pop	{pc}		; (ldr pc, [sp], #4)
   26528:	ldr	r7, [r6, #160]	; 0xa0
   2652c:	mov	r9, #1
   26530:	mov	r0, r7
   26534:	bl	13f54 <strlen@plt>
   26538:	movw	ip, #63004	; 0xf61c
   2653c:	movt	ip, #3
   26540:	mov	r3, r0
   26544:	mov	r2, r7
   26548:	mov	r1, r8
   2654c:	mov	r0, r5
   26550:	str	ip, [sp]
   26554:	str	r9, [sp, #4]
   26558:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   2655c:	subs	r7, r0, #0
   26560:	beq	26600 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d0>
   26564:	movw	r1, #63264	; 0xf720
   26568:	movt	r1, #3
   2656c:	bl	13ea0 <fopen@plt>
   26570:	subs	r5, r0, #0
   26574:	beq	265d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a8>
   26578:	mov	r0, r7
   2657c:	bl	13eac <free@plt>
   26580:	b	2647c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c>
   26584:	add	r0, sp, #16
   26588:	mvn	r4, #0
   2658c:	bl	35f58 <flatcc_builder_clear@@Base>
   26590:	movw	r0, #26384	; 0x6710
   26594:	movt	r0, #5
   26598:	bl	13f0c <puts@plt>
   2659c:	b	264f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc0>
   265a0:	mov	r8, r5
   265a4:	movw	r5, #39472	; 0x9a30
   265a8:	movt	r5, #4
   265ac:	b	26468 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x38>
   265b0:	movw	r3, #41128	; 0xa0a8
   265b4:	movt	r3, #6
   265b8:	movw	r0, #26420	; 0x6734
   265bc:	movt	r0, #5
   265c0:	ldr	r3, [r3]
   265c4:	mov	r2, #38	; 0x26
   265c8:	mov	r1, #1
   265cc:	mvn	r4, #0
   265d0:	bl	13ef4 <fwrite@plt>
   265d4:	b	264e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb8>
   265d8:	movw	r3, #41128	; 0xa0a8
   265dc:	movt	r3, #6
   265e0:	movw	r1, #26332	; 0x66dc
   265e4:	movt	r1, #5
   265e8:	ldr	r0, [r3]
   265ec:	mov	r2, r7
   265f0:	bl	13f60 <fprintf@plt>
   265f4:	b	26578 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x148>
   265f8:	mvn	r4, #0
   265fc:	b	2650c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdc>
   26600:	movw	r3, #41128	; 0xa0a8
   26604:	movt	r3, #6
   26608:	movw	r0, #62968	; 0xf5f8
   2660c:	movt	r0, #3
   26610:	ldr	r3, [r3]
   26614:	mov	r2, #34	; 0x22
   26618:	mov	r1, r9
   2661c:	bl	13ef4 <fwrite@plt>
   26620:	mov	r0, r9
   26624:	bl	13f48 <exit@plt>
   26628:	cmp	r3, #0
   2662c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   26630:	strd	r6, [sp, #8]
   26634:	strd	r8, [sp, #16]
   26638:	strd	sl, [sp, #24]
   2663c:	str	lr, [sp, #32]
   26640:	sub	sp, sp, #28
   26644:	str	r3, [sp, #8]
   26648:	str	r0, [sp, #12]
   2664c:	beq	2685c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x42c>
   26650:	cmp	r3, #2
   26654:	beq	2683c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x40c>
   26658:	cmp	r3, #1
   2665c:	beq	2681c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ec>
   26660:	ldr	r7, [r0, #12]
   26664:	mov	r9, r1
   26668:	mov	r3, #179	; 0xb3
   2666c:	mov	sl, r2
   26670:	mov	r4, r0
   26674:	ldr	r1, [r0, #8]
   26678:	mul	r3, r3, r7
   2667c:	cmp	r1, r3, lsr #8
   26680:	bcs	26770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x340>
   26684:	ldr	r3, [sp, #12]
   26688:	add	ip, sp, #16
   2668c:	movw	r1, #15186	; 0x3b52
   26690:	movt	r1, #12137	; 0x2f69
   26694:	mov	r2, sl
   26698:	mov	r0, r9
   2669c:	sub	r7, r7, #1
   266a0:	ldr	r6, [r3]
   266a4:	mov	r3, #0
   266a8:	stm	sp, {r1, ip}
   266ac:	bl	3b8d4 <cmetrohash64_1@@Base>
   266b0:	ldr	r3, [sp, #16]
   266b4:	ldr	r2, [sp, #64]	; 0x40
   266b8:	sub	r2, r2, #2
   266bc:	cmp	r2, #1
   266c0:	and	r2, r7, r3
   266c4:	add	r4, r6, r2, lsl #2
   266c8:	bls	267a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x370>
   266cc:	ldr	r5, [r6, r2, lsl #2]
   266d0:	cmp	r5, #0
   266d4:	moveq	r8, r4
   266d8:	beq	26734 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x304>
   266dc:	add	fp, r3, #1
   266e0:	mov	r8, #0
   266e4:	b	26718 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e8>
   266e8:	mov	r2, sl
   266ec:	mov	r1, r5
   266f0:	mov	r0, r9
   266f4:	bl	13ffc <strncmp@plt>
   266f8:	cmp	r0, #0
   266fc:	beq	26788 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x358>
   26700:	and	r4, r7, fp
   26704:	add	fp, fp, #1
   26708:	ldr	r5, [r6, r4, lsl #2]
   2670c:	add	r4, r6, r4, lsl #2
   26710:	cmp	r5, #0
   26714:	beq	2672c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2fc>
   26718:	cmp	r5, #2
   2671c:	bne	266e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   26720:	cmp	r8, #0
   26724:	moveq	r8, r4
   26728:	b	26700 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d0>
   2672c:	cmp	r8, #0
   26730:	moveq	r8, r4
   26734:	ldr	r2, [sp, #12]
   26738:	mov	r5, #0
   2673c:	ldr	r3, [r2, #8]
   26740:	add	r3, r3, #1
   26744:	str	r3, [r2, #8]
   26748:	ldr	r3, [sp, #8]
   2674c:	str	r3, [r8]
   26750:	mov	r0, r5
   26754:	add	sp, sp, #28
   26758:	ldrd	r4, [sp]
   2675c:	ldrd	r6, [sp, #8]
   26760:	ldrd	r8, [sp, #16]
   26764:	ldrd	sl, [sp, #24]
   26768:	add	sp, sp, #32
   2676c:	pop	{pc}		; (ldr pc, [sp], #4)
   26770:	lsl	r1, r1, #1
   26774:	bl	2687c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x44c>
   26778:	cmp	r0, #0
   2677c:	bne	267f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>
   26780:	ldr	r7, [r4, #12]
   26784:	b	26684 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x254>
   26788:	ldr	r3, [sp, #64]	; 0x40
   2678c:	cmp	r3, #0
   26790:	bne	26750 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
   26794:	ldr	r3, [sp, #8]
   26798:	str	r3, [r4]
   2679c:	b	26750 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
   267a0:	ldr	ip, [sp, #12]
   267a4:	ldr	r0, [r6, r2, lsl #2]
   267a8:	ldr	r1, [ip, #8]
   267ac:	cmp	r0, #2
   267b0:	cmpne	r0, #0
   267b4:	add	r2, r1, #1
   267b8:	str	r2, [ip, #8]
   267bc:	beq	267e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b4>
   267c0:	add	r3, r3, #1
   267c4:	and	r2, r7, r3
   267c8:	add	r3, r3, #1
   267cc:	ldr	r1, [r6, r2, lsl #2]
   267d0:	add	r2, r6, r2, lsl #2
   267d4:	cmp	r1, #0
   267d8:	cmpne	r1, #2
   267dc:	bne	267c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x394>
   267e0:	mov	r4, r2
   267e4:	ldr	r3, [sp, #8]
   267e8:	mov	r5, #0
   267ec:	str	r3, [r4]
   267f0:	b	26750 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
   267f4:	movw	r3, #41128	; 0xa0a8
   267f8:	movt	r3, #6
   267fc:	movw	r2, #26636	; 0x680c
   26800:	movt	r2, #5
   26804:	ldr	r0, [r3]
   26808:	movw	r1, #26688	; 0x6840
   2680c:	movt	r1, #5
   26810:	bl	13f60 <fprintf@plt>
   26814:	mov	r0, #1
   26818:	bl	13f48 <exit@plt>
   2681c:	movw	r3, #26460	; 0x675c
   26820:	movt	r3, #5
   26824:	movw	r1, #26484	; 0x6774
   26828:	movt	r1, #5
   2682c:	movw	r0, #26612	; 0x67f4
   26830:	movt	r0, #5
   26834:	mov	r2, #116	; 0x74
   26838:	bl	14014 <__assert_fail@plt>
   2683c:	movw	r3, #26460	; 0x675c
   26840:	movt	r3, #5
   26844:	movw	r1, #26484	; 0x6774
   26848:	movt	r1, #5
   2684c:	movw	r0, #26588	; 0x67dc
   26850:	movt	r0, #5
   26854:	mov	r2, #115	; 0x73
   26858:	bl	14014 <__assert_fail@plt>
   2685c:	movw	r3, #26460	; 0x675c
   26860:	movt	r3, #5
   26864:	movw	r1, #26484	; 0x6774
   26868:	movt	r1, #5
   2686c:	movw	r0, #26564	; 0x67c4
   26870:	movt	r0, #5
   26874:	mov	r2, #114	; 0x72
   26878:	bl	14014 <__assert_fail@plt>
   2687c:	ldr	r3, [r0, #8]
   26880:	strd	r4, [sp, #-28]!	; 0xffffffe4
   26884:	strd	r6, [sp, #8]
   26888:	mov	r7, r0
   2688c:	strd	r8, [sp, #16]
   26890:	str	lr, [sp, #24]
   26894:	sub	sp, sp, #28
   26898:	cmp	r1, r3
   2689c:	ldr	r6, [r0]
   268a0:	movcc	r1, r3
   268a4:	cmp	r1, #2
   268a8:	bls	269a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x578>
   268ac:	mov	r3, #4
   268b0:	movw	r0, #358	; 0x166
   268b4:	mul	r2, r0, r3
   268b8:	lsl	r4, r3, #1
   268bc:	cmp	r1, r2, lsr #8
   268c0:	mov	r3, r4
   268c4:	bhi	268b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x484>
   268c8:	mov	r1, #4
   268cc:	mov	r0, r4
   268d0:	bl	13e7c <calloc@plt>
   268d4:	cmp	r0, #0
   268d8:	str	r0, [sp, #8]
   268dc:	beq	269b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   268e0:	ldr	r3, [r7, #12]
   268e4:	mov	r5, #0
   268e8:	str	r5, [sp, #12]
   268ec:	str	r5, [sp, #16]
   268f0:	str	r4, [sp, #20]
   268f4:	cmp	r3, r5
   268f8:	addeq	r8, sp, #8
   268fc:	beq	2692c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4fc>
   26900:	sub	r6, r6, #4
   26904:	add	r8, sp, #8
   26908:	mov	r9, #3
   2690c:	ldr	r4, [r6, #4]!
   26910:	cmp	r4, #0
   26914:	cmpne	r4, #2
   26918:	bne	26974 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x544>
   2691c:	add	r5, r5, #1
   26920:	cmp	r5, r3
   26924:	bcc	2690c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4dc>
   26928:	ldr	r6, [r7]
   2692c:	cmp	r6, #0
   26930:	beq	2693c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x50c>
   26934:	mov	r0, r6
   26938:	bl	13eac <free@plt>
   2693c:	ldr	r3, [sp, #8]
   26940:	mov	r0, #0
   26944:	ldmib	r8, {r1, r2}
   26948:	str	r3, [r7]
   2694c:	ldr	r3, [r8, #12]
   26950:	str	r1, [r7, #4]
   26954:	str	r2, [r7, #8]
   26958:	str	r3, [r7, #12]
   2695c:	add	sp, sp, #28
   26960:	ldrd	r4, [sp]
   26964:	ldrd	r6, [sp, #8]
   26968:	ldrd	r8, [sp, #16]
   2696c:	add	sp, sp, #24
   26970:	pop	{pc}		; (ldr pc, [sp], #4)
   26974:	mov	r0, r4
   26978:	add	r5, r5, #1
   2697c:	bl	13f54 <strlen@plt>
   26980:	mov	r2, r0
   26984:	mov	r3, r4
   26988:	str	r9, [sp]
   2698c:	mov	r1, r4
   26990:	mov	r0, r8
   26994:	bl	26628 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f8>
   26998:	ldr	r3, [r7, #12]
   2699c:	cmp	r5, r3
   269a0:	bcc	2690c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4dc>
   269a4:	b	26928 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4f8>
   269a8:	mov	r4, #4
   269ac:	b	268c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x498>
   269b0:	mvn	r0, #0
   269b4:	b	2695c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x52c>

000269b8 <str_set_clear@@Base>:
   269b8:	str	r4, [sp, #-8]!
   269bc:	mov	r4, r0
   269c0:	ldr	r0, [r0]
   269c4:	str	lr, [sp, #4]
   269c8:	cmp	r0, #0
   269cc:	beq	269d4 <str_set_clear@@Base+0x1c>
   269d0:	bl	13eac <free@plt>
   269d4:	mov	r3, #0
   269d8:	str	r3, [r4]
   269dc:	str	r3, [r4, #4]
   269e0:	str	r3, [r4, #8]
   269e4:	str	r3, [r4, #12]
   269e8:	ldr	r4, [sp]
   269ec:	add	sp, sp, #4
   269f0:	pop	{pc}		; (ldr pc, [sp], #4)

000269f4 <str_set_destroy@@Base>:
   269f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   269f8:	strd	r6, [sp, #8]
   269fc:	mov	r6, r0
   26a00:	str	r8, [sp, #16]
   26a04:	subs	r8, r1, #0
   26a08:	str	lr, [sp, #20]
   26a0c:	ldr	r0, [r0]
   26a10:	beq	26a5c <str_set_destroy@@Base+0x68>
   26a14:	ldr	ip, [r6, #12]
   26a18:	cmp	ip, #0
   26a1c:	beq	26a5c <str_set_destroy@@Base+0x68>
   26a20:	mov	r7, r2
   26a24:	sub	r5, r0, #4
   26a28:	mov	r4, #0
   26a2c:	ldr	r3, [r5, #4]!
   26a30:	mov	r0, r7
   26a34:	cmp	r3, #0
   26a38:	cmpne	r3, #2
   26a3c:	mov	r1, r3
   26a40:	beq	26a90 <str_set_destroy@@Base+0x9c>
   26a44:	blx	r8
   26a48:	ldr	ip, [r6, #12]
   26a4c:	add	r4, r4, #1
   26a50:	cmp	r4, ip
   26a54:	bcc	26a2c <str_set_destroy@@Base+0x38>
   26a58:	ldr	r0, [r6]
   26a5c:	cmp	r0, #0
   26a60:	beq	26a68 <str_set_destroy@@Base+0x74>
   26a64:	bl	13eac <free@plt>
   26a68:	mov	r3, #0
   26a6c:	str	r3, [r6]
   26a70:	str	r3, [r6, #4]
   26a74:	str	r3, [r6, #8]
   26a78:	str	r3, [r6, #12]
   26a7c:	ldrd	r4, [sp]
   26a80:	ldrd	r6, [sp, #8]
   26a84:	ldr	r8, [sp, #16]
   26a88:	add	sp, sp, #20
   26a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   26a90:	add	r4, r4, #1
   26a94:	cmp	r4, ip
   26a98:	bcc	26a2c <str_set_destroy@@Base+0x38>
   26a9c:	b	26a58 <str_set_destroy@@Base+0x64>

00026aa0 <str_set_init@@Base>:
   26aa0:	cmp	r1, #2
   26aa4:	strd	r4, [sp, #-16]!
   26aa8:	mov	r4, r0
   26aac:	str	r6, [sp, #8]
   26ab0:	str	lr, [sp, #12]
   26ab4:	bls	26b10 <str_set_init@@Base+0x70>
   26ab8:	mov	r3, #4
   26abc:	movw	r0, #358	; 0x166
   26ac0:	mul	r2, r0, r3
   26ac4:	lsl	r5, r3, #1
   26ac8:	cmp	r1, r2, lsr #8
   26acc:	mov	r3, r5
   26ad0:	bhi	26ac0 <str_set_init@@Base+0x20>
   26ad4:	mov	r1, #4
   26ad8:	mov	r0, r5
   26adc:	bl	13e7c <calloc@plt>
   26ae0:	cmp	r0, #0
   26ae4:	str	r0, [r4]
   26ae8:	beq	26b18 <str_set_init@@Base+0x78>
   26aec:	mov	r3, #0
   26af0:	mov	r0, r3
   26af4:	str	r3, [r4, #4]
   26af8:	str	r3, [r4, #8]
   26afc:	str	r5, [r4, #12]
   26b00:	ldrd	r4, [sp]
   26b04:	ldr	r6, [sp, #8]
   26b08:	add	sp, sp, #12
   26b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   26b10:	mov	r5, #4
   26b14:	b	26ad4 <str_set_init@@Base+0x34>
   26b18:	mvn	r0, #0
   26b1c:	b	26b00 <str_set_init@@Base+0x60>

00026b20 <str_set_resize@@Base>:
   26b20:	b	2687c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x44c>

00026b24 <str_set_insert@@Base>:
   26b24:	b	26628 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f8>

00026b28 <str_set_insert_item@@Base>:
   26b28:	strd	r4, [sp, #-16]!
   26b2c:	mov	r5, r0
   26b30:	mov	r0, r1
   26b34:	str	r6, [sp, #8]
   26b38:	mov	r6, r2
   26b3c:	mov	r4, r1
   26b40:	str	lr, [sp, #12]
   26b44:	sub	sp, sp, #8
   26b48:	bl	13f54 <strlen@plt>
   26b4c:	mov	r2, r0
   26b50:	mov	r3, r4
   26b54:	str	r6, [sp]
   26b58:	mov	r0, r5
   26b5c:	mov	r1, r4
   26b60:	bl	26628 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f8>
   26b64:	add	sp, sp, #8
   26b68:	ldrd	r4, [sp]
   26b6c:	ldr	r6, [sp, #8]
   26b70:	add	sp, sp, #12
   26b74:	pop	{pc}		; (ldr pc, [sp], #4)

00026b78 <str_set_find@@Base>:
   26b78:	strd	r4, [sp, #-28]!	; 0xffffffe4
   26b7c:	strd	r6, [sp, #8]
   26b80:	ldr	r7, [r0]
   26b84:	strd	r8, [sp, #16]
   26b88:	str	lr, [sp, #24]
   26b8c:	sub	sp, sp, #20
   26b90:	cmp	r7, #0
   26b94:	beq	26c10 <str_set_find@@Base+0x98>
   26b98:	mov	r6, r1
   26b9c:	add	ip, sp, #8
   26ba0:	ldr	r9, [r0, #12]
   26ba4:	movw	r1, #15186	; 0x3b52
   26ba8:	movt	r1, #12137	; 0x2f69
   26bac:	mov	r3, #0
   26bb0:	mov	r0, r6
   26bb4:	stm	sp, {r1, ip}
   26bb8:	mov	r8, r2
   26bbc:	bl	3b8d4 <cmetrohash64_1@@Base>
   26bc0:	ldr	r5, [sp, #8]
   26bc4:	sub	r9, r9, #1
   26bc8:	and	r3, r9, r5
   26bcc:	ldr	r4, [r7, r3, lsl #2]
   26bd0:	cmp	r4, #0
   26bd4:	beq	26c10 <str_set_find@@Base+0x98>
   26bd8:	add	r5, r5, #1
   26bdc:	cmp	r4, #2
   26be0:	mov	r1, r4
   26be4:	mov	r2, r8
   26be8:	mov	r0, r6
   26bec:	beq	26bfc <str_set_find@@Base+0x84>
   26bf0:	bl	13ffc <strncmp@plt>
   26bf4:	cmp	r0, #0
   26bf8:	beq	26c14 <str_set_find@@Base+0x9c>
   26bfc:	and	r3, r9, r5
   26c00:	add	r5, r5, #1
   26c04:	ldr	r4, [r7, r3, lsl #2]
   26c08:	cmp	r4, #0
   26c0c:	bne	26bdc <str_set_find@@Base+0x64>
   26c10:	mov	r4, #0
   26c14:	mov	r0, r4
   26c18:	add	sp, sp, #20
   26c1c:	ldrd	r4, [sp]
   26c20:	ldrd	r6, [sp, #8]
   26c24:	ldrd	r8, [sp, #16]
   26c28:	add	sp, sp, #24
   26c2c:	pop	{pc}		; (ldr pc, [sp], #4)

00026c30 <str_set_find_item@@Base>:
   26c30:	strd	r4, [sp, #-28]!	; 0xffffffe4
   26c34:	mov	r4, r0
   26c38:	mov	r0, r1
   26c3c:	strd	r6, [sp, #8]
   26c40:	strd	r8, [sp, #16]
   26c44:	mov	r8, r1
   26c48:	str	lr, [sp, #24]
   26c4c:	sub	sp, sp, #20
   26c50:	bl	13f54 <strlen@plt>
   26c54:	ldr	r7, [r4]
   26c58:	cmp	r7, #0
   26c5c:	beq	26cdc <str_set_find_item@@Base+0xac>
   26c60:	add	r1, sp, #8
   26c64:	movw	r3, #15186	; 0x3b52
   26c68:	movt	r3, #12137	; 0x2f69
   26c6c:	mov	r2, r0
   26c70:	ldr	r6, [r4, #12]
   26c74:	mov	r9, r0
   26c78:	mov	r0, r8
   26c7c:	str	r3, [sp]
   26c80:	mov	r3, #0
   26c84:	str	r1, [sp, #4]
   26c88:	bl	3b8d4 <cmetrohash64_1@@Base>
   26c8c:	ldr	r5, [sp, #8]
   26c90:	sub	r6, r6, #1
   26c94:	and	r3, r6, r5
   26c98:	ldr	r4, [r7, r3, lsl #2]
   26c9c:	cmp	r4, #0
   26ca0:	beq	26cdc <str_set_find_item@@Base+0xac>
   26ca4:	add	r5, r5, #1
   26ca8:	cmp	r4, #2
   26cac:	mov	r1, r4
   26cb0:	mov	r2, r9
   26cb4:	mov	r0, r8
   26cb8:	beq	26cc8 <str_set_find_item@@Base+0x98>
   26cbc:	bl	13ffc <strncmp@plt>
   26cc0:	cmp	r0, #0
   26cc4:	beq	26ce0 <str_set_find_item@@Base+0xb0>
   26cc8:	and	r3, r6, r5
   26ccc:	add	r5, r5, #1
   26cd0:	ldr	r4, [r7, r3, lsl #2]
   26cd4:	cmp	r4, #0
   26cd8:	bne	26ca8 <str_set_find_item@@Base+0x78>
   26cdc:	mov	r4, #0
   26ce0:	mov	r0, r4
   26ce4:	add	sp, sp, #20
   26ce8:	ldrd	r4, [sp]
   26cec:	ldrd	r6, [sp, #8]
   26cf0:	ldrd	r8, [sp, #16]
   26cf4:	add	sp, sp, #24
   26cf8:	pop	{pc}		; (ldr pc, [sp], #4)

00026cfc <str_set_remove@@Base>:
   26cfc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   26d00:	ldr	r4, [r0]
   26d04:	strd	r6, [sp, #8]
   26d08:	strd	r8, [sp, #16]
   26d0c:	strd	sl, [sp, #24]
   26d10:	str	lr, [sp, #32]
   26d14:	sub	sp, sp, #20
   26d18:	cmp	r4, #0
   26d1c:	beq	26da4 <str_set_remove@@Base+0xa8>
   26d20:	mov	r6, r1
   26d24:	add	ip, sp, #8
   26d28:	movw	r1, #15186	; 0x3b52
   26d2c:	movt	r1, #12137	; 0x2f69
   26d30:	mov	r5, r0
   26d34:	mov	r3, #0
   26d38:	mov	r0, r6
   26d3c:	ldr	r8, [r5, #12]
   26d40:	mov	r7, r2
   26d44:	stm	sp, {r1, ip}
   26d48:	bl	3b8d4 <cmetrohash64_1@@Base>
   26d4c:	ldr	sl, [sp, #8]
   26d50:	sub	r8, r8, #1
   26d54:	and	r3, r8, sl
   26d58:	ldr	r9, [r4, r3, lsl #2]
   26d5c:	add	fp, r4, r3, lsl #2
   26d60:	cmp	r9, #0
   26d64:	beq	26da4 <str_set_remove@@Base+0xa8>
   26d68:	add	sl, sl, #1
   26d6c:	cmp	r9, #2
   26d70:	mov	r1, r9
   26d74:	mov	r2, r7
   26d78:	mov	r0, r6
   26d7c:	beq	26d8c <str_set_remove@@Base+0x90>
   26d80:	bl	13ffc <strncmp@plt>
   26d84:	cmp	r0, #0
   26d88:	beq	26dc8 <str_set_remove@@Base+0xcc>
   26d8c:	and	r3, r8, sl
   26d90:	add	sl, sl, #1
   26d94:	ldr	r9, [r4, r3, lsl #2]
   26d98:	add	fp, r4, r3, lsl #2
   26d9c:	cmp	r9, #0
   26da0:	bne	26d6c <str_set_remove@@Base+0x70>
   26da4:	mov	r9, #0
   26da8:	mov	r0, r9
   26dac:	add	sp, sp, #20
   26db0:	ldrd	r4, [sp]
   26db4:	ldrd	r6, [sp, #8]
   26db8:	ldrd	r8, [sp, #16]
   26dbc:	ldrd	sl, [sp, #24]
   26dc0:	add	sp, sp, #32
   26dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   26dc8:	ldr	r3, [r5, #8]
   26dcc:	mov	r2, #2
   26dd0:	str	r2, [fp]
   26dd4:	sub	r3, r3, #1
   26dd8:	str	r3, [r5, #8]
   26ddc:	b	26da8 <str_set_remove@@Base+0xac>

00026de0 <str_set_remove_item@@Base>:
   26de0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   26de4:	strd	r6, [sp, #8]
   26de8:	mov	r7, r0
   26dec:	mov	r0, r1
   26df0:	strd	r8, [sp, #16]
   26df4:	mov	r6, r1
   26df8:	strd	sl, [sp, #24]
   26dfc:	str	lr, [sp, #32]
   26e00:	sub	sp, sp, #20
   26e04:	bl	13f54 <strlen@plt>
   26e08:	ldr	r4, [r7]
   26e0c:	cmp	r4, #0
   26e10:	beq	26e98 <str_set_remove_item@@Base+0xb8>
   26e14:	add	r1, sp, #8
   26e18:	movw	r3, #15186	; 0x3b52
   26e1c:	movt	r3, #12137	; 0x2f69
   26e20:	mov	r2, r0
   26e24:	ldr	r5, [r7, #12]
   26e28:	mov	r8, r0
   26e2c:	mov	r0, r6
   26e30:	str	r3, [sp]
   26e34:	mov	r3, #0
   26e38:	str	r1, [sp, #4]
   26e3c:	bl	3b8d4 <cmetrohash64_1@@Base>
   26e40:	ldr	sl, [sp, #8]
   26e44:	sub	r5, r5, #1
   26e48:	and	r3, r5, sl
   26e4c:	ldr	r9, [r4, r3, lsl #2]
   26e50:	add	fp, r4, r3, lsl #2
   26e54:	cmp	r9, #0
   26e58:	beq	26e98 <str_set_remove_item@@Base+0xb8>
   26e5c:	add	sl, sl, #1
   26e60:	cmp	r9, #2
   26e64:	mov	r1, r9
   26e68:	mov	r2, r8
   26e6c:	mov	r0, r6
   26e70:	beq	26e80 <str_set_remove_item@@Base+0xa0>
   26e74:	bl	13ffc <strncmp@plt>
   26e78:	cmp	r0, #0
   26e7c:	beq	26ebc <str_set_remove_item@@Base+0xdc>
   26e80:	and	r3, r5, sl
   26e84:	add	sl, sl, #1
   26e88:	ldr	r9, [r4, r3, lsl #2]
   26e8c:	add	fp, r4, r3, lsl #2
   26e90:	cmp	r9, #0
   26e94:	bne	26e60 <str_set_remove_item@@Base+0x80>
   26e98:	mov	r9, #0
   26e9c:	mov	r0, r9
   26ea0:	add	sp, sp, #20
   26ea4:	ldrd	r4, [sp]
   26ea8:	ldrd	r6, [sp, #8]
   26eac:	ldrd	r8, [sp, #16]
   26eb0:	ldrd	sl, [sp, #24]
   26eb4:	add	sp, sp, #32
   26eb8:	pop	{pc}		; (ldr pc, [sp], #4)
   26ebc:	ldr	r3, [r7, #8]
   26ec0:	mov	r2, #2
   26ec4:	str	r2, [fp]
   26ec8:	sub	r3, r3, #1
   26ecc:	str	r3, [r7, #8]
   26ed0:	b	26e9c <str_set_remove_item@@Base+0xbc>

00026ed4 <str_set_visit@@Base>:
   26ed4:	ldr	ip, [r0, #12]
   26ed8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   26edc:	ldr	r5, [r0]
   26ee0:	strd	r6, [sp, #8]
   26ee4:	str	r8, [sp, #16]
   26ee8:	cmp	ip, #0
   26eec:	str	lr, [sp, #20]
   26ef0:	beq	26f34 <str_set_visit@@Base+0x60>
   26ef4:	mov	r6, r2
   26ef8:	mov	r8, r1
   26efc:	mov	r7, r0
   26f00:	sub	r5, r5, #4
   26f04:	mov	r4, #0
   26f08:	ldr	r3, [r5, #4]!
   26f0c:	mov	r0, r6
   26f10:	cmp	r3, #0
   26f14:	cmpne	r3, #2
   26f18:	mov	r1, r3
   26f1c:	beq	26f48 <str_set_visit@@Base+0x74>
   26f20:	blx	r8
   26f24:	ldr	ip, [r7, #12]
   26f28:	add	r4, r4, #1
   26f2c:	cmp	r4, ip
   26f30:	bcc	26f08 <str_set_visit@@Base+0x34>
   26f34:	ldrd	r4, [sp]
   26f38:	ldrd	r6, [sp, #8]
   26f3c:	ldr	r8, [sp, #16]
   26f40:	add	sp, sp, #20
   26f44:	pop	{pc}		; (ldr pc, [sp], #4)
   26f48:	add	r4, r4, #1
   26f4c:	cmp	r4, ip
   26f50:	bcc	26f08 <str_set_visit@@Base+0x34>
   26f54:	b	26f34 <str_set_visit@@Base+0x60>
   26f58:	ldr	r3, [r0, #8]
   26f5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   26f60:	strd	r6, [sp, #8]
   26f64:	strd	r8, [sp, #16]
   26f68:	mov	r8, r0
   26f6c:	strd	sl, [sp, #24]
   26f70:	cmp	r1, r3
   26f74:	str	lr, [sp, #32]
   26f78:	sub	sp, sp, #44	; 0x2c
   26f7c:	movcc	r1, r3
   26f80:	ldr	r6, [r0]
   26f84:	cmp	r1, #2
   26f88:	bls	27118 <str_set_visit@@Base+0x244>
   26f8c:	mov	r3, #4
   26f90:	movw	r0, #358	; 0x166
   26f94:	mul	r2, r0, r3
   26f98:	lsl	r4, r3, #1
   26f9c:	cmp	r1, r2, lsr #8
   26fa0:	mov	r3, r4
   26fa4:	bhi	26f94 <str_set_visit@@Base+0xc0>
   26fa8:	mov	r1, #4
   26fac:	mov	r0, r4
   26fb0:	bl	13e7c <calloc@plt>
   26fb4:	cmp	r0, #0
   26fb8:	str	r0, [sp, #24]
   26fbc:	beq	27120 <str_set_visit@@Base+0x24c>
   26fc0:	ldr	r3, [r8, #12]
   26fc4:	mov	r5, #0
   26fc8:	str	r5, [sp, #28]
   26fcc:	str	r5, [sp, #32]
   26fd0:	str	r4, [sp, #36]	; 0x24
   26fd4:	cmp	r3, r5
   26fd8:	beq	270c8 <str_set_visit@@Base+0x1f4>
   26fdc:	movw	r9, #15186	; 0x3b52
   26fe0:	movt	r9, #12137	; 0x2f69
   26fe4:	sub	r6, r6, #4
   26fe8:	mov	sl, #179	; 0xb3
   26fec:	b	26ffc <str_set_visit@@Base+0x128>
   26ff0:	add	r5, r5, #1
   26ff4:	cmp	r5, r3
   26ff8:	bcs	270c4 <str_set_visit@@Base+0x1f0>
   26ffc:	ldr	r4, [r6, #4]!
   27000:	cmp	r4, #0
   27004:	cmpne	r4, #2
   27008:	beq	26ff0 <str_set_visit@@Base+0x11c>
   2700c:	cmp	r4, #1
   27010:	beq	27150 <str_set_visit@@Base+0x27c>
   27014:	ldr	r1, [sp, #32]
   27018:	ldr	r7, [sp, #36]	; 0x24
   2701c:	mul	r3, sl, r7
   27020:	cmp	r1, r3, lsr #8
   27024:	bcc	27040 <str_set_visit@@Base+0x16c>
   27028:	lsl	r1, r1, #1
   2702c:	add	r0, sp, #24
   27030:	bl	26f58 <str_set_visit@@Base+0x84>
   27034:	cmp	r0, #0
   27038:	bne	27128 <str_set_visit@@Base+0x254>
   2703c:	ldr	r7, [sp, #36]	; 0x24
   27040:	add	r1, sp, #16
   27044:	mov	r2, #4
   27048:	str	r9, [sp]
   2704c:	mov	r3, #0
   27050:	add	r0, sp, #12
   27054:	ldr	fp, [sp, #24]
   27058:	str	r1, [sp, #4]
   2705c:	sub	r7, r7, #1
   27060:	str	r4, [sp, #12]
   27064:	bl	3b8d4 <cmetrohash64_1@@Base>
   27068:	ldr	r3, [sp, #16]
   2706c:	ldr	r1, [sp, #32]
   27070:	and	r2, r7, r3
   27074:	ldr	r0, [fp, r2, lsl #2]
   27078:	add	r2, fp, r2, lsl #2
   2707c:	add	r1, r1, #1
   27080:	str	r1, [sp, #32]
   27084:	cmp	r0, #0
   27088:	cmpne	r0, #2
   2708c:	beq	270b0 <str_set_visit@@Base+0x1dc>
   27090:	add	r3, r3, #1
   27094:	and	r2, r7, r3
   27098:	add	r3, r3, #1
   2709c:	ldr	r1, [fp, r2, lsl #2]
   270a0:	add	r2, fp, r2, lsl #2
   270a4:	cmp	r1, #0
   270a8:	cmpne	r1, #2
   270ac:	bne	27094 <str_set_visit@@Base+0x1c0>
   270b0:	ldr	r3, [r8, #12]
   270b4:	add	r5, r5, #1
   270b8:	str	r4, [r2]
   270bc:	cmp	r5, r3
   270c0:	bcc	26ffc <str_set_visit@@Base+0x128>
   270c4:	ldr	r6, [r8]
   270c8:	cmp	r6, #0
   270cc:	beq	270d8 <str_set_visit@@Base+0x204>
   270d0:	mov	r0, r6
   270d4:	bl	13eac <free@plt>
   270d8:	ldr	r3, [sp, #24]
   270dc:	mov	r0, #0
   270e0:	ldr	r1, [sp, #28]
   270e4:	ldr	r2, [sp, #32]
   270e8:	str	r3, [r8]
   270ec:	ldr	r3, [sp, #36]	; 0x24
   270f0:	str	r1, [r8, #4]
   270f4:	str	r2, [r8, #8]
   270f8:	str	r3, [r8, #12]
   270fc:	add	sp, sp, #44	; 0x2c
   27100:	ldrd	r4, [sp]
   27104:	ldrd	r6, [sp, #8]
   27108:	ldrd	r8, [sp, #16]
   2710c:	ldrd	sl, [sp, #24]
   27110:	add	sp, sp, #32
   27114:	pop	{pc}		; (ldr pc, [sp], #4)
   27118:	mov	r4, #4
   2711c:	b	26fa8 <str_set_visit@@Base+0xd4>
   27120:	mvn	r0, #0
   27124:	b	270fc <str_set_visit@@Base+0x228>
   27128:	movw	r3, #41128	; 0xa0a8
   2712c:	movt	r3, #6
   27130:	movw	r2, #26636	; 0x680c
   27134:	movt	r2, #5
   27138:	ldr	r0, [r3]
   2713c:	movw	r1, #26688	; 0x6840
   27140:	movt	r1, #5
   27144:	bl	13f60 <fprintf@plt>
   27148:	mov	r0, #1
   2714c:	bl	13f48 <exit@plt>
   27150:	movw	r3, #26712	; 0x6858
   27154:	movt	r3, #5
   27158:	movw	r1, #26484	; 0x6774
   2715c:	movt	r1, #5
   27160:	movw	r0, #26612	; 0x67f4
   27164:	movt	r0, #5
   27168:	mov	r2, #116	; 0x74
   2716c:	bl	14014 <__assert_fail@plt>

00027170 <ptr_set_clear@@Base>:
   27170:	str	r4, [sp, #-8]!
   27174:	mov	r4, r0
   27178:	ldr	r0, [r0]
   2717c:	str	lr, [sp, #4]
   27180:	cmp	r0, #0
   27184:	beq	2718c <ptr_set_clear@@Base+0x1c>
   27188:	bl	13eac <free@plt>
   2718c:	mov	r3, #0
   27190:	str	r3, [r4]
   27194:	str	r3, [r4, #4]
   27198:	str	r3, [r4, #8]
   2719c:	str	r3, [r4, #12]
   271a0:	ldr	r4, [sp]
   271a4:	add	sp, sp, #4
   271a8:	pop	{pc}		; (ldr pc, [sp], #4)

000271ac <ptr_set_destroy@@Base>:
   271ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   271b0:	strd	r6, [sp, #8]
   271b4:	mov	r6, r0
   271b8:	str	r8, [sp, #16]
   271bc:	subs	r8, r1, #0
   271c0:	str	lr, [sp, #20]
   271c4:	ldr	r0, [r0]
   271c8:	beq	27214 <ptr_set_destroy@@Base+0x68>
   271cc:	ldr	ip, [r6, #12]
   271d0:	cmp	ip, #0
   271d4:	beq	27214 <ptr_set_destroy@@Base+0x68>
   271d8:	mov	r7, r2
   271dc:	sub	r5, r0, #4
   271e0:	mov	r4, #0
   271e4:	ldr	r3, [r5, #4]!
   271e8:	mov	r0, r7
   271ec:	cmp	r3, #0
   271f0:	cmpne	r3, #2
   271f4:	mov	r1, r3
   271f8:	beq	27248 <ptr_set_destroy@@Base+0x9c>
   271fc:	blx	r8
   27200:	ldr	ip, [r6, #12]
   27204:	add	r4, r4, #1
   27208:	cmp	r4, ip
   2720c:	bcc	271e4 <ptr_set_destroy@@Base+0x38>
   27210:	ldr	r0, [r6]
   27214:	cmp	r0, #0
   27218:	beq	27220 <ptr_set_destroy@@Base+0x74>
   2721c:	bl	13eac <free@plt>
   27220:	mov	r3, #0
   27224:	str	r3, [r6]
   27228:	str	r3, [r6, #4]
   2722c:	str	r3, [r6, #8]
   27230:	str	r3, [r6, #12]
   27234:	ldrd	r4, [sp]
   27238:	ldrd	r6, [sp, #8]
   2723c:	ldr	r8, [sp, #16]
   27240:	add	sp, sp, #20
   27244:	pop	{pc}		; (ldr pc, [sp], #4)
   27248:	add	r4, r4, #1
   2724c:	cmp	r4, ip
   27250:	bcc	271e4 <ptr_set_destroy@@Base+0x38>
   27254:	b	27210 <ptr_set_destroy@@Base+0x64>

00027258 <ptr_set_init@@Base>:
   27258:	cmp	r1, #2
   2725c:	strd	r4, [sp, #-16]!
   27260:	mov	r4, r0
   27264:	str	r6, [sp, #8]
   27268:	str	lr, [sp, #12]
   2726c:	bls	272c8 <ptr_set_init@@Base+0x70>
   27270:	mov	r3, #4
   27274:	movw	r0, #358	; 0x166
   27278:	mul	r2, r0, r3
   2727c:	lsl	r5, r3, #1
   27280:	cmp	r1, r2, lsr #8
   27284:	mov	r3, r5
   27288:	bhi	27278 <ptr_set_init@@Base+0x20>
   2728c:	mov	r1, #4
   27290:	mov	r0, r5
   27294:	bl	13e7c <calloc@plt>
   27298:	cmp	r0, #0
   2729c:	str	r0, [r4]
   272a0:	beq	272d0 <ptr_set_init@@Base+0x78>
   272a4:	mov	r3, #0
   272a8:	mov	r0, r3
   272ac:	str	r3, [r4, #4]
   272b0:	str	r3, [r4, #8]
   272b4:	str	r5, [r4, #12]
   272b8:	ldrd	r4, [sp]
   272bc:	ldr	r6, [sp, #8]
   272c0:	add	sp, sp, #12
   272c4:	pop	{pc}		; (ldr pc, [sp], #4)
   272c8:	mov	r5, #4
   272cc:	b	2728c <ptr_set_init@@Base+0x34>
   272d0:	mvn	r0, #0
   272d4:	b	272b8 <ptr_set_init@@Base+0x60>

000272d8 <ptr_set_resize@@Base>:
   272d8:	b	26f58 <str_set_visit@@Base+0x84>

000272dc <ptr_set_insert@@Base>:
   272dc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   272e0:	strd	r6, [sp, #8]
   272e4:	subs	r7, r3, #0
   272e8:	strd	r8, [sp, #16]
   272ec:	str	lr, [sp, #24]
   272f0:	sub	sp, sp, #28
   272f4:	ldr	r9, [sp, #56]	; 0x38
   272f8:	beq	27480 <ptr_set_insert@@Base+0x1a4>
   272fc:	cmp	r7, #2
   27300:	beq	27460 <ptr_set_insert@@Base+0x184>
   27304:	cmp	r7, #1
   27308:	beq	274a0 <ptr_set_insert@@Base+0x1c4>
   2730c:	ldr	r4, [r0, #12]
   27310:	mov	r8, r1
   27314:	mov	r3, #179	; 0xb3
   27318:	mov	r6, r0
   2731c:	ldr	r1, [r0, #8]
   27320:	mul	r3, r3, r4
   27324:	cmp	r1, r3, lsr #8
   27328:	bcs	273f4 <ptr_set_insert@@Base+0x118>
   2732c:	add	ip, sp, #16
   27330:	movw	r1, #15186	; 0x3b52
   27334:	movt	r1, #12137	; 0x2f69
   27338:	mov	r2, #4
   2733c:	ldr	r5, [r6]
   27340:	mov	r3, #0
   27344:	add	r0, sp, #12
   27348:	stm	sp, {r1, ip}
   2734c:	sub	r4, r4, #1
   27350:	str	r8, [sp, #12]
   27354:	bl	3b8d4 <cmetrohash64_1@@Base>
   27358:	ldr	r2, [sp, #16]
   2735c:	sub	r3, r9, #2
   27360:	cmp	r3, #1
   27364:	and	r1, r4, r2
   27368:	add	r3, r5, r1, lsl #2
   2736c:	bls	27418 <ptr_set_insert@@Base+0x13c>
   27370:	ldr	r0, [r5, r1, lsl #2]
   27374:	cmp	r0, #0
   27378:	moveq	r1, r3
   2737c:	beq	273c8 <ptr_set_insert@@Base+0xec>
   27380:	add	r2, r2, #1
   27384:	mov	r1, #0
   27388:	b	273ac <ptr_set_insert@@Base+0xd0>
   2738c:	cmp	r8, r0
   27390:	beq	2740c <ptr_set_insert@@Base+0x130>
   27394:	and	r3, r4, r2
   27398:	add	r2, r2, #1
   2739c:	ldr	r0, [r5, r3, lsl #2]
   273a0:	add	r3, r5, r3, lsl #2
   273a4:	cmp	r0, #0
   273a8:	beq	273c0 <ptr_set_insert@@Base+0xe4>
   273ac:	cmp	r0, #2
   273b0:	bne	2738c <ptr_set_insert@@Base+0xb0>
   273b4:	cmp	r1, #0
   273b8:	moveq	r1, r3
   273bc:	b	27394 <ptr_set_insert@@Base+0xb8>
   273c0:	cmp	r1, #0
   273c4:	moveq	r1, r3
   273c8:	ldr	r3, [r6, #8]
   273cc:	mov	r0, #0
   273d0:	add	r3, r3, #1
   273d4:	str	r3, [r6, #8]
   273d8:	str	r7, [r1]
   273dc:	add	sp, sp, #28
   273e0:	ldrd	r4, [sp]
   273e4:	ldrd	r6, [sp, #8]
   273e8:	ldrd	r8, [sp, #16]
   273ec:	add	sp, sp, #24
   273f0:	pop	{pc}		; (ldr pc, [sp], #4)
   273f4:	lsl	r1, r1, #1
   273f8:	bl	26f58 <str_set_visit@@Base+0x84>
   273fc:	cmp	r0, #0
   27400:	bne	274c0 <ptr_set_insert@@Base+0x1e4>
   27404:	ldr	r4, [r6, #12]
   27408:	b	2732c <ptr_set_insert@@Base+0x50>
   2740c:	cmp	r9, #0
   27410:	streq	r7, [r3]
   27414:	b	273dc <ptr_set_insert@@Base+0x100>
   27418:	ldr	r0, [r6, #8]
   2741c:	ldr	ip, [r5, r1, lsl #2]
   27420:	add	r1, r0, #1
   27424:	cmp	ip, #0
   27428:	cmpne	ip, #2
   2742c:	str	r1, [r6, #8]
   27430:	beq	27454 <ptr_set_insert@@Base+0x178>
   27434:	add	r2, r2, #1
   27438:	and	r3, r4, r2
   2743c:	add	r2, r2, #1
   27440:	ldr	r1, [r5, r3, lsl #2]
   27444:	add	r3, r5, r3, lsl #2
   27448:	cmp	r1, #0
   2744c:	cmpne	r1, #2
   27450:	bne	27438 <ptr_set_insert@@Base+0x15c>
   27454:	mov	r0, #0
   27458:	str	r7, [r3]
   2745c:	b	273dc <ptr_set_insert@@Base+0x100>
   27460:	movw	r3, #26712	; 0x6858
   27464:	movt	r3, #5
   27468:	movw	r1, #26484	; 0x6774
   2746c:	movt	r1, #5
   27470:	movw	r0, #26588	; 0x67dc
   27474:	movt	r0, #5
   27478:	mov	r2, #115	; 0x73
   2747c:	bl	14014 <__assert_fail@plt>
   27480:	movw	r3, #26712	; 0x6858
   27484:	movt	r3, #5
   27488:	movw	r1, #26484	; 0x6774
   2748c:	movt	r1, #5
   27490:	movw	r0, #26564	; 0x67c4
   27494:	movt	r0, #5
   27498:	mov	r2, #114	; 0x72
   2749c:	bl	14014 <__assert_fail@plt>
   274a0:	movw	r3, #26712	; 0x6858
   274a4:	movt	r3, #5
   274a8:	movw	r1, #26484	; 0x6774
   274ac:	movt	r1, #5
   274b0:	movw	r0, #26612	; 0x67f4
   274b4:	movt	r0, #5
   274b8:	mov	r2, #116	; 0x74
   274bc:	bl	14014 <__assert_fail@plt>
   274c0:	movw	r3, #41128	; 0xa0a8
   274c4:	movt	r3, #6
   274c8:	movw	r2, #26636	; 0x680c
   274cc:	movt	r2, #5
   274d0:	ldr	r0, [r3]
   274d4:	movw	r1, #26688	; 0x6840
   274d8:	movt	r1, #5
   274dc:	bl	13f60 <fprintf@plt>
   274e0:	mov	r0, #1
   274e4:	bl	13f48 <exit@plt>

000274e8 <ptr_set_insert_item@@Base>:
   274e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   274ec:	strd	r6, [sp, #8]
   274f0:	subs	r7, r1, #0
   274f4:	str	r8, [sp, #16]
   274f8:	str	lr, [sp, #20]
   274fc:	sub	sp, sp, #24
   27500:	beq	27688 <ptr_set_insert_item@@Base+0x1a0>
   27504:	cmp	r7, #2
   27508:	beq	27668 <ptr_set_insert_item@@Base+0x180>
   2750c:	cmp	r7, #1
   27510:	beq	276a8 <ptr_set_insert_item@@Base+0x1c0>
   27514:	mov	r3, #179	; 0xb3
   27518:	ldr	r1, [r0, #8]
   2751c:	mov	r8, r2
   27520:	mov	r6, r0
   27524:	ldr	r4, [r0, #12]
   27528:	mul	r3, r3, r4
   2752c:	cmp	r1, r3, lsr #8
   27530:	bcs	275fc <ptr_set_insert_item@@Base+0x114>
   27534:	add	ip, sp, #16
   27538:	movw	r1, #15186	; 0x3b52
   2753c:	movt	r1, #12137	; 0x2f69
   27540:	mov	r2, #4
   27544:	ldr	r5, [r6]
   27548:	mov	r3, #0
   2754c:	add	r0, sp, #12
   27550:	stm	sp, {r1, ip}
   27554:	sub	r4, r4, #1
   27558:	str	r7, [sp, #12]
   2755c:	bl	3b8d4 <cmetrohash64_1@@Base>
   27560:	ldr	r2, [sp, #16]
   27564:	sub	r3, r8, #2
   27568:	cmp	r3, #1
   2756c:	and	r1, r4, r2
   27570:	add	r3, r5, r1, lsl #2
   27574:	bls	27620 <ptr_set_insert_item@@Base+0x138>
   27578:	ldr	r0, [r5, r1, lsl #2]
   2757c:	cmp	r0, #0
   27580:	moveq	r1, r3
   27584:	beq	275d0 <ptr_set_insert_item@@Base+0xe8>
   27588:	add	r2, r2, #1
   2758c:	mov	r1, #0
   27590:	b	275b4 <ptr_set_insert_item@@Base+0xcc>
   27594:	cmp	r7, r0
   27598:	beq	27614 <ptr_set_insert_item@@Base+0x12c>
   2759c:	and	r3, r4, r2
   275a0:	add	r2, r2, #1
   275a4:	ldr	r0, [r5, r3, lsl #2]
   275a8:	add	r3, r5, r3, lsl #2
   275ac:	cmp	r0, #0
   275b0:	beq	275c8 <ptr_set_insert_item@@Base+0xe0>
   275b4:	cmp	r0, #2
   275b8:	bne	27594 <ptr_set_insert_item@@Base+0xac>
   275bc:	cmp	r1, #0
   275c0:	moveq	r1, r3
   275c4:	b	2759c <ptr_set_insert_item@@Base+0xb4>
   275c8:	cmp	r1, #0
   275cc:	moveq	r1, r3
   275d0:	ldr	r3, [r6, #8]
   275d4:	mov	r0, #0
   275d8:	add	r3, r3, #1
   275dc:	str	r3, [r6, #8]
   275e0:	str	r7, [r1]
   275e4:	add	sp, sp, #24
   275e8:	ldrd	r4, [sp]
   275ec:	ldrd	r6, [sp, #8]
   275f0:	ldr	r8, [sp, #16]
   275f4:	add	sp, sp, #20
   275f8:	pop	{pc}		; (ldr pc, [sp], #4)
   275fc:	lsl	r1, r1, #1
   27600:	bl	26f58 <str_set_visit@@Base+0x84>
   27604:	cmp	r0, #0
   27608:	bne	276c8 <ptr_set_insert_item@@Base+0x1e0>
   2760c:	ldr	r4, [r6, #12]
   27610:	b	27534 <ptr_set_insert_item@@Base+0x4c>
   27614:	cmp	r8, #0
   27618:	streq	r0, [r3]
   2761c:	b	275e4 <ptr_set_insert_item@@Base+0xfc>
   27620:	ldr	r0, [r6, #8]
   27624:	ldr	ip, [r5, r1, lsl #2]
   27628:	add	r1, r0, #1
   2762c:	cmp	ip, #0
   27630:	cmpne	ip, #2
   27634:	str	r1, [r6, #8]
   27638:	beq	2765c <ptr_set_insert_item@@Base+0x174>
   2763c:	add	r2, r2, #1
   27640:	and	r3, r4, r2
   27644:	add	r2, r2, #1
   27648:	ldr	r1, [r5, r3, lsl #2]
   2764c:	add	r3, r5, r3, lsl #2
   27650:	cmp	r1, #0
   27654:	cmpne	r1, #2
   27658:	bne	27640 <ptr_set_insert_item@@Base+0x158>
   2765c:	mov	r0, #0
   27660:	str	r7, [r3]
   27664:	b	275e4 <ptr_set_insert_item@@Base+0xfc>
   27668:	movw	r3, #26712	; 0x6858
   2766c:	movt	r3, #5
   27670:	movw	r1, #26484	; 0x6774
   27674:	movt	r1, #5
   27678:	movw	r0, #26588	; 0x67dc
   2767c:	movt	r0, #5
   27680:	mov	r2, #115	; 0x73
   27684:	bl	14014 <__assert_fail@plt>
   27688:	movw	r3, #26712	; 0x6858
   2768c:	movt	r3, #5
   27690:	movw	r1, #26484	; 0x6774
   27694:	movt	r1, #5
   27698:	movw	r0, #26564	; 0x67c4
   2769c:	movt	r0, #5
   276a0:	mov	r2, #114	; 0x72
   276a4:	bl	14014 <__assert_fail@plt>
   276a8:	movw	r3, #26712	; 0x6858
   276ac:	movt	r3, #5
   276b0:	movw	r1, #26484	; 0x6774
   276b4:	movt	r1, #5
   276b8:	movw	r0, #26612	; 0x67f4
   276bc:	movt	r0, #5
   276c0:	mov	r2, #116	; 0x74
   276c4:	bl	14014 <__assert_fail@plt>
   276c8:	movw	r3, #41128	; 0xa0a8
   276cc:	movt	r3, #6
   276d0:	movw	r2, #26636	; 0x680c
   276d4:	movt	r2, #5
   276d8:	ldr	r0, [r3]
   276dc:	movw	r1, #26688	; 0x6840
   276e0:	movt	r1, #5
   276e4:	bl	13f60 <fprintf@plt>
   276e8:	mov	r0, #1
   276ec:	bl	13f48 <exit@plt>

000276f0 <ptr_set_find@@Base>:
   276f0:	strd	r4, [sp, #-16]!
   276f4:	str	r6, [sp, #8]
   276f8:	ldr	r6, [r0]
   276fc:	str	lr, [sp, #12]
   27700:	sub	sp, sp, #24
   27704:	cmp	r6, #0
   27708:	beq	2777c <ptr_set_find@@Base+0x8c>
   2770c:	mov	r4, r1
   27710:	movw	r3, #15186	; 0x3b52
   27714:	movt	r3, #12137	; 0x2f69
   27718:	add	r1, sp, #16
   2771c:	ldr	r5, [r0, #12]
   27720:	mov	r2, #4
   27724:	add	r0, sp, #12
   27728:	str	r3, [sp]
   2772c:	mov	r3, #0
   27730:	str	r1, [sp, #4]
   27734:	str	r4, [sp, #12]
   27738:	bl	3b8d4 <cmetrohash64_1@@Base>
   2773c:	ldr	r3, [sp, #16]
   27740:	sub	r5, r5, #1
   27744:	and	r2, r5, r3
   27748:	ldr	r0, [r6, r2, lsl #2]
   2774c:	cmp	r0, #0
   27750:	beq	2777c <ptr_set_find@@Base+0x8c>
   27754:	add	r3, r3, #1
   27758:	cmp	r0, #2
   2775c:	and	r2, r5, r3
   27760:	beq	2776c <ptr_set_find@@Base+0x7c>
   27764:	cmp	r4, r0
   27768:	beq	27780 <ptr_set_find@@Base+0x90>
   2776c:	ldr	r0, [r6, r2, lsl #2]
   27770:	add	r3, r3, #1
   27774:	cmp	r0, #0
   27778:	bne	27758 <ptr_set_find@@Base+0x68>
   2777c:	mov	r0, #0
   27780:	add	sp, sp, #24
   27784:	ldrd	r4, [sp]
   27788:	ldr	r6, [sp, #8]
   2778c:	add	sp, sp, #12
   27790:	pop	{pc}		; (ldr pc, [sp], #4)

00027794 <ptr_set_find_item@@Base>:
   27794:	strd	r4, [sp, #-16]!
   27798:	str	r6, [sp, #8]
   2779c:	ldr	r6, [r0]
   277a0:	str	lr, [sp, #12]
   277a4:	sub	sp, sp, #24
   277a8:	cmp	r6, #0
   277ac:	beq	27820 <ptr_set_find_item@@Base+0x8c>
   277b0:	mov	r4, r1
   277b4:	movw	r3, #15186	; 0x3b52
   277b8:	movt	r3, #12137	; 0x2f69
   277bc:	add	r1, sp, #16
   277c0:	ldr	r5, [r0, #12]
   277c4:	mov	r2, #4
   277c8:	add	r0, sp, #12
   277cc:	str	r3, [sp]
   277d0:	mov	r3, #0
   277d4:	str	r1, [sp, #4]
   277d8:	str	r4, [sp, #12]
   277dc:	bl	3b8d4 <cmetrohash64_1@@Base>
   277e0:	ldr	r3, [sp, #16]
   277e4:	sub	r5, r5, #1
   277e8:	and	r2, r5, r3
   277ec:	ldr	r0, [r6, r2, lsl #2]
   277f0:	cmp	r0, #0
   277f4:	beq	27820 <ptr_set_find_item@@Base+0x8c>
   277f8:	add	r3, r3, #1
   277fc:	cmp	r0, #2
   27800:	and	r2, r5, r3
   27804:	beq	27810 <ptr_set_find_item@@Base+0x7c>
   27808:	cmp	r4, r0
   2780c:	beq	27824 <ptr_set_find_item@@Base+0x90>
   27810:	ldr	r0, [r6, r2, lsl #2]
   27814:	add	r3, r3, #1
   27818:	cmp	r0, #0
   2781c:	bne	277fc <ptr_set_find_item@@Base+0x68>
   27820:	mov	r0, #0
   27824:	add	sp, sp, #24
   27828:	ldrd	r4, [sp]
   2782c:	ldr	r6, [sp, #8]
   27830:	add	sp, sp, #12
   27834:	pop	{pc}		; (ldr pc, [sp], #4)

00027838 <ptr_set_remove@@Base>:
   27838:	strd	r4, [sp, #-20]!	; 0xffffffec
   2783c:	ldr	r4, [r0]
   27840:	strd	r6, [sp, #8]
   27844:	str	lr, [sp, #16]
   27848:	sub	sp, sp, #28
   2784c:	cmp	r4, #0
   27850:	beq	278d0 <ptr_set_remove@@Base+0x98>
   27854:	mov	r6, r1
   27858:	movw	r3, #15186	; 0x3b52
   2785c:	movt	r3, #12137	; 0x2f69
   27860:	add	r1, sp, #16
   27864:	mov	r5, r0
   27868:	mov	r2, #4
   2786c:	str	r6, [sp, #12]
   27870:	add	r0, sp, #12
   27874:	ldr	r7, [r5, #12]
   27878:	str	r3, [sp]
   2787c:	mov	r3, #0
   27880:	str	r1, [sp, #4]
   27884:	bl	3b8d4 <cmetrohash64_1@@Base>
   27888:	ldr	r3, [sp, #16]
   2788c:	sub	r7, r7, #1
   27890:	and	r2, r7, r3
   27894:	ldr	r0, [r4, r2, lsl #2]
   27898:	add	r2, r4, r2, lsl #2
   2789c:	cmp	r0, #0
   278a0:	beq	278d0 <ptr_set_remove@@Base+0x98>
   278a4:	add	r3, r3, #1
   278a8:	cmp	r0, #2
   278ac:	and	r1, r7, r3
   278b0:	beq	278bc <ptr_set_remove@@Base+0x84>
   278b4:	cmp	r6, r0
   278b8:	beq	278e8 <ptr_set_remove@@Base+0xb0>
   278bc:	ldr	r0, [r4, r1, lsl #2]
   278c0:	add	r3, r3, #1
   278c4:	add	r2, r4, r1, lsl #2
   278c8:	cmp	r0, #0
   278cc:	bne	278a8 <ptr_set_remove@@Base+0x70>
   278d0:	mov	r0, #0
   278d4:	add	sp, sp, #28
   278d8:	ldrd	r4, [sp]
   278dc:	ldrd	r6, [sp, #8]
   278e0:	add	sp, sp, #16
   278e4:	pop	{pc}		; (ldr pc, [sp], #4)
   278e8:	ldr	r3, [r5, #8]
   278ec:	mov	r1, #2
   278f0:	str	r1, [r2]
   278f4:	sub	r3, r3, #1
   278f8:	str	r3, [r5, #8]
   278fc:	b	278d4 <ptr_set_remove@@Base+0x9c>

00027900 <ptr_set_remove_item@@Base>:
   27900:	strd	r4, [sp, #-20]!	; 0xffffffec
   27904:	ldr	r4, [r0]
   27908:	strd	r6, [sp, #8]
   2790c:	str	lr, [sp, #16]
   27910:	sub	sp, sp, #28
   27914:	cmp	r4, #0
   27918:	beq	27998 <ptr_set_remove_item@@Base+0x98>
   2791c:	mov	r6, r1
   27920:	movw	r3, #15186	; 0x3b52
   27924:	movt	r3, #12137	; 0x2f69
   27928:	add	r1, sp, #16
   2792c:	mov	r5, r0
   27930:	mov	r2, #4
   27934:	str	r6, [sp, #12]
   27938:	add	r0, sp, #12
   2793c:	ldr	r7, [r5, #12]
   27940:	str	r3, [sp]
   27944:	mov	r3, #0
   27948:	str	r1, [sp, #4]
   2794c:	bl	3b8d4 <cmetrohash64_1@@Base>
   27950:	ldr	r3, [sp, #16]
   27954:	sub	r7, r7, #1
   27958:	and	r2, r7, r3
   2795c:	ldr	r0, [r4, r2, lsl #2]
   27960:	add	r2, r4, r2, lsl #2
   27964:	cmp	r0, #0
   27968:	beq	27998 <ptr_set_remove_item@@Base+0x98>
   2796c:	add	r3, r3, #1
   27970:	cmp	r0, #2
   27974:	and	r1, r7, r3
   27978:	beq	27984 <ptr_set_remove_item@@Base+0x84>
   2797c:	cmp	r6, r0
   27980:	beq	279b0 <ptr_set_remove_item@@Base+0xb0>
   27984:	ldr	r0, [r4, r1, lsl #2]
   27988:	add	r3, r3, #1
   2798c:	add	r2, r4, r1, lsl #2
   27990:	cmp	r0, #0
   27994:	bne	27970 <ptr_set_remove_item@@Base+0x70>
   27998:	mov	r0, #0
   2799c:	add	sp, sp, #28
   279a0:	ldrd	r4, [sp]
   279a4:	ldrd	r6, [sp, #8]
   279a8:	add	sp, sp, #16
   279ac:	pop	{pc}		; (ldr pc, [sp], #4)
   279b0:	ldr	r3, [r5, #8]
   279b4:	mov	r1, #2
   279b8:	str	r1, [r2]
   279bc:	sub	r3, r3, #1
   279c0:	str	r3, [r5, #8]
   279c4:	b	2799c <ptr_set_remove_item@@Base+0x9c>

000279c8 <ptr_set_visit@@Base>:
   279c8:	ldr	ip, [r0, #12]
   279cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   279d0:	ldr	r5, [r0]
   279d4:	strd	r6, [sp, #8]
   279d8:	str	r8, [sp, #16]
   279dc:	cmp	ip, #0
   279e0:	str	lr, [sp, #20]
   279e4:	beq	27a28 <ptr_set_visit@@Base+0x60>
   279e8:	mov	r6, r2
   279ec:	mov	r8, r1
   279f0:	mov	r7, r0
   279f4:	sub	r5, r5, #4
   279f8:	mov	r4, #0
   279fc:	ldr	r3, [r5, #4]!
   27a00:	mov	r0, r6
   27a04:	cmp	r3, #0
   27a08:	cmpne	r3, #2
   27a0c:	mov	r1, r3
   27a10:	beq	27a3c <ptr_set_visit@@Base+0x74>
   27a14:	blx	r8
   27a18:	ldr	ip, [r7, #12]
   27a1c:	add	r4, r4, #1
   27a20:	cmp	r4, ip
   27a24:	bcc	279fc <ptr_set_visit@@Base+0x34>
   27a28:	ldrd	r4, [sp]
   27a2c:	ldrd	r6, [sp, #8]
   27a30:	ldr	r8, [sp, #16]
   27a34:	add	sp, sp, #20
   27a38:	pop	{pc}		; (ldr pc, [sp], #4)
   27a3c:	add	r4, r4, #1
   27a40:	cmp	r4, ip
   27a44:	bcc	279fc <ptr_set_visit@@Base+0x34>
   27a48:	b	27a28 <ptr_set_visit@@Base+0x60>
   27a4c:	ldr	r3, [r0, #8]
   27a50:	strd	r4, [sp, #-36]!	; 0xffffffdc
   27a54:	strd	r6, [sp, #8]
   27a58:	strd	r8, [sp, #16]
   27a5c:	mov	r8, r0
   27a60:	strd	sl, [sp, #24]
   27a64:	cmp	r1, r3
   27a68:	str	lr, [sp, #32]
   27a6c:	sub	sp, sp, #44	; 0x2c
   27a70:	movcc	r1, r3
   27a74:	ldr	r6, [r0]
   27a78:	cmp	r1, #2
   27a7c:	bls	27c18 <ptr_set_visit@@Base+0x250>
   27a80:	mov	r3, #4
   27a84:	movw	r0, #358	; 0x166
   27a88:	mul	r2, r0, r3
   27a8c:	lsl	r4, r3, #1
   27a90:	cmp	r1, r2, lsr #8
   27a94:	mov	r3, r4
   27a98:	bhi	27a88 <ptr_set_visit@@Base+0xc0>
   27a9c:	mov	r1, #4
   27aa0:	mov	r0, r4
   27aa4:	bl	13e7c <calloc@plt>
   27aa8:	cmp	r0, #0
   27aac:	str	r0, [sp, #24]
   27ab0:	beq	27c20 <ptr_set_visit@@Base+0x258>
   27ab4:	ldr	r3, [r8, #12]
   27ab8:	mov	r5, #0
   27abc:	str	r5, [sp, #28]
   27ac0:	str	r5, [sp, #32]
   27ac4:	str	r4, [sp, #36]	; 0x24
   27ac8:	cmp	r3, r5
   27acc:	beq	27bc8 <ptr_set_visit@@Base+0x200>
   27ad0:	movw	r9, #15186	; 0x3b52
   27ad4:	movt	r9, #12137	; 0x2f69
   27ad8:	sub	r6, r6, #4
   27adc:	mov	fp, #179	; 0xb3
   27ae0:	b	27af0 <ptr_set_visit@@Base+0x128>
   27ae4:	add	r5, r5, #1
   27ae8:	cmp	r5, r3
   27aec:	bcs	27bc4 <ptr_set_visit@@Base+0x1fc>
   27af0:	ldr	r4, [r6, #4]!
   27af4:	cmp	r4, #0
   27af8:	cmpne	r4, #2
   27afc:	beq	27ae4 <ptr_set_visit@@Base+0x11c>
   27b00:	ldr	r2, [r4, #4]
   27b04:	cmp	r4, #1
   27b08:	ldr	sl, [r2]
   27b0c:	ldr	r2, [r2, #4]
   27b10:	beq	27c50 <ptr_set_visit@@Base+0x288>
   27b14:	ldr	r1, [sp, #32]
   27b18:	ldr	r7, [sp, #36]	; 0x24
   27b1c:	mul	r0, fp, r7
   27b20:	cmp	r1, r0, lsr #8
   27b24:	bcc	27b48 <ptr_set_visit@@Base+0x180>
   27b28:	lsl	r1, r1, #1
   27b2c:	add	r0, sp, #24
   27b30:	str	r2, [sp, #12]
   27b34:	bl	27a4c <ptr_set_visit@@Base+0x84>
   27b38:	cmp	r0, #0
   27b3c:	bne	27c28 <ptr_set_visit@@Base+0x260>
   27b40:	ldr	r2, [sp, #12]
   27b44:	ldr	r7, [sp, #36]	; 0x24
   27b48:	add	r1, sp, #16
   27b4c:	mov	r0, sl
   27b50:	str	r9, [sp]
   27b54:	mov	r3, #0
   27b58:	ldr	sl, [sp, #24]
   27b5c:	sub	r7, r7, #1
   27b60:	str	r1, [sp, #4]
   27b64:	bl	3b8d4 <cmetrohash64_1@@Base>
   27b68:	ldr	r3, [sp, #16]
   27b6c:	ldr	r0, [sp, #32]
   27b70:	and	r2, r7, r3
   27b74:	ldr	ip, [sl, r2, lsl #2]
   27b78:	add	r2, sl, r2, lsl #2
   27b7c:	add	r0, r0, #1
   27b80:	str	r0, [sp, #32]
   27b84:	cmp	ip, #2
   27b88:	cmpne	ip, #0
   27b8c:	beq	27bb0 <ptr_set_visit@@Base+0x1e8>
   27b90:	add	r3, r3, #1
   27b94:	and	r2, r7, r3
   27b98:	add	r3, r3, #1
   27b9c:	ldr	r0, [sl, r2, lsl #2]
   27ba0:	add	r2, sl, r2, lsl #2
   27ba4:	cmp	r0, #0
   27ba8:	cmpne	r0, #2
   27bac:	bne	27b94 <ptr_set_visit@@Base+0x1cc>
   27bb0:	ldr	r3, [r8, #12]
   27bb4:	add	r5, r5, #1
   27bb8:	str	r4, [r2]
   27bbc:	cmp	r5, r3
   27bc0:	bcc	27af0 <ptr_set_visit@@Base+0x128>
   27bc4:	ldr	r6, [r8]
   27bc8:	cmp	r6, #0
   27bcc:	beq	27bd8 <ptr_set_visit@@Base+0x210>
   27bd0:	mov	r0, r6
   27bd4:	bl	13eac <free@plt>
   27bd8:	ldr	r3, [sp, #24]
   27bdc:	mov	r0, #0
   27be0:	ldr	r1, [sp, #28]
   27be4:	ldr	r2, [sp, #32]
   27be8:	str	r3, [r8]
   27bec:	ldr	r3, [sp, #36]	; 0x24
   27bf0:	str	r1, [r8, #4]
   27bf4:	str	r2, [r8, #8]
   27bf8:	str	r3, [r8, #12]
   27bfc:	add	sp, sp, #44	; 0x2c
   27c00:	ldrd	r4, [sp]
   27c04:	ldrd	r6, [sp, #8]
   27c08:	ldrd	r8, [sp, #16]
   27c0c:	ldrd	sl, [sp, #24]
   27c10:	add	sp, sp, #32
   27c14:	pop	{pc}		; (ldr pc, [sp], #4)
   27c18:	mov	r4, #4
   27c1c:	b	27a9c <ptr_set_visit@@Base+0xd4>
   27c20:	mvn	r0, #0
   27c24:	b	27bfc <ptr_set_visit@@Base+0x234>
   27c28:	movw	r3, #41128	; 0xa0a8
   27c2c:	movt	r3, #6
   27c30:	movw	r2, #26636	; 0x680c
   27c34:	movt	r2, #5
   27c38:	ldr	r0, [r3]
   27c3c:	movw	r1, #26688	; 0x6840
   27c40:	movt	r1, #5
   27c44:	bl	13f60 <fprintf@plt>
   27c48:	mov	r0, #1
   27c4c:	bl	13f48 <exit@plt>
   27c50:	movw	r3, #26736	; 0x6870
   27c54:	movt	r3, #5
   27c58:	movw	r1, #26484	; 0x6774
   27c5c:	movt	r1, #5
   27c60:	movw	r0, #26612	; 0x67f4
   27c64:	movt	r0, #5
   27c68:	mov	r2, #116	; 0x74
   27c6c:	bl	14014 <__assert_fail@plt>

00027c70 <fb_symbol_table_clear@@Base>:
   27c70:	str	r4, [sp, #-8]!
   27c74:	mov	r4, r0
   27c78:	ldr	r0, [r0]
   27c7c:	str	lr, [sp, #4]
   27c80:	cmp	r0, #0
   27c84:	beq	27c8c <fb_symbol_table_clear@@Base+0x1c>
   27c88:	bl	13eac <free@plt>
   27c8c:	mov	r3, #0
   27c90:	str	r3, [r4]
   27c94:	str	r3, [r4, #4]
   27c98:	str	r3, [r4, #8]
   27c9c:	str	r3, [r4, #12]
   27ca0:	ldr	r4, [sp]
   27ca4:	add	sp, sp, #4
   27ca8:	pop	{pc}		; (ldr pc, [sp], #4)

00027cac <fb_symbol_table_destroy@@Base>:
   27cac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   27cb0:	strd	r6, [sp, #8]
   27cb4:	mov	r6, r0
   27cb8:	str	r8, [sp, #16]
   27cbc:	subs	r8, r1, #0
   27cc0:	str	lr, [sp, #20]
   27cc4:	ldr	r0, [r0]
   27cc8:	beq	27d14 <fb_symbol_table_destroy@@Base+0x68>
   27ccc:	ldr	ip, [r6, #12]
   27cd0:	cmp	ip, #0
   27cd4:	beq	27d14 <fb_symbol_table_destroy@@Base+0x68>
   27cd8:	mov	r7, r2
   27cdc:	sub	r5, r0, #4
   27ce0:	mov	r4, #0
   27ce4:	ldr	r3, [r5, #4]!
   27ce8:	mov	r0, r7
   27cec:	cmp	r3, #0
   27cf0:	cmpne	r3, #2
   27cf4:	mov	r1, r3
   27cf8:	beq	27d48 <fb_symbol_table_destroy@@Base+0x9c>
   27cfc:	blx	r8
   27d00:	ldr	ip, [r6, #12]
   27d04:	add	r4, r4, #1
   27d08:	cmp	r4, ip
   27d0c:	bcc	27ce4 <fb_symbol_table_destroy@@Base+0x38>
   27d10:	ldr	r0, [r6]
   27d14:	cmp	r0, #0
   27d18:	beq	27d20 <fb_symbol_table_destroy@@Base+0x74>
   27d1c:	bl	13eac <free@plt>
   27d20:	mov	r3, #0
   27d24:	str	r3, [r6]
   27d28:	str	r3, [r6, #4]
   27d2c:	str	r3, [r6, #8]
   27d30:	str	r3, [r6, #12]
   27d34:	ldrd	r4, [sp]
   27d38:	ldrd	r6, [sp, #8]
   27d3c:	ldr	r8, [sp, #16]
   27d40:	add	sp, sp, #20
   27d44:	pop	{pc}		; (ldr pc, [sp], #4)
   27d48:	add	r4, r4, #1
   27d4c:	cmp	r4, ip
   27d50:	bcc	27ce4 <fb_symbol_table_destroy@@Base+0x38>
   27d54:	b	27d10 <fb_symbol_table_destroy@@Base+0x64>

00027d58 <fb_symbol_table_init@@Base>:
   27d58:	cmp	r1, #2
   27d5c:	strd	r4, [sp, #-16]!
   27d60:	mov	r4, r0
   27d64:	str	r6, [sp, #8]
   27d68:	str	lr, [sp, #12]
   27d6c:	bls	27dc8 <fb_symbol_table_init@@Base+0x70>
   27d70:	mov	r3, #4
   27d74:	movw	r0, #358	; 0x166
   27d78:	mul	r2, r0, r3
   27d7c:	lsl	r5, r3, #1
   27d80:	cmp	r1, r2, lsr #8
   27d84:	mov	r3, r5
   27d88:	bhi	27d78 <fb_symbol_table_init@@Base+0x20>
   27d8c:	mov	r1, #4
   27d90:	mov	r0, r5
   27d94:	bl	13e7c <calloc@plt>
   27d98:	cmp	r0, #0
   27d9c:	str	r0, [r4]
   27da0:	beq	27dd0 <fb_symbol_table_init@@Base+0x78>
   27da4:	mov	r3, #0
   27da8:	mov	r0, r3
   27dac:	str	r3, [r4, #4]
   27db0:	str	r3, [r4, #8]
   27db4:	str	r5, [r4, #12]
   27db8:	ldrd	r4, [sp]
   27dbc:	ldr	r6, [sp, #8]
   27dc0:	add	sp, sp, #12
   27dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   27dc8:	mov	r5, #4
   27dcc:	b	27d8c <fb_symbol_table_init@@Base+0x34>
   27dd0:	mvn	r0, #0
   27dd4:	b	27db8 <fb_symbol_table_init@@Base+0x60>

00027dd8 <fb_symbol_table_resize@@Base>:
   27dd8:	b	27a4c <ptr_set_visit@@Base+0x84>

00027ddc <fb_symbol_table_insert@@Base>:
   27ddc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   27de0:	strd	r6, [sp, #8]
   27de4:	strd	r8, [sp, #16]
   27de8:	strd	sl, [sp, #24]
   27dec:	subs	fp, r3, #0
   27df0:	str	lr, [sp, #32]
   27df4:	sub	sp, sp, #28
   27df8:	str	r1, [sp, #8]
   27dfc:	beq	27fcc <fb_symbol_table_insert@@Base+0x1f0>
   27e00:	cmp	fp, #2
   27e04:	beq	27fac <fb_symbol_table_insert@@Base+0x1d0>
   27e08:	cmp	fp, #1
   27e0c:	beq	27fec <fb_symbol_table_insert@@Base+0x210>
   27e10:	mov	r3, #179	; 0xb3
   27e14:	ldr	r1, [r0, #8]
   27e18:	mov	sl, r2
   27e1c:	mov	r9, r0
   27e20:	ldr	r6, [r0, #12]
   27e24:	mul	r3, r3, r6
   27e28:	cmp	r1, r3, lsr #8
   27e2c:	bcs	27f24 <fb_symbol_table_insert@@Base+0x148>
   27e30:	add	ip, sp, #16
   27e34:	movw	r1, #15186	; 0x3b52
   27e38:	movt	r1, #12137	; 0x2f69
   27e3c:	mov	r3, #0
   27e40:	ldr	r8, [r9]
   27e44:	mov	r2, sl
   27e48:	sub	r6, r6, #1
   27e4c:	stm	sp, {r1, ip}
   27e50:	ldr	r0, [sp, #8]
   27e54:	bl	3b8d4 <cmetrohash64_1@@Base>
   27e58:	ldr	r5, [sp, #16]
   27e5c:	ldr	r3, [sp, #64]	; 0x40
   27e60:	sub	r3, r3, #2
   27e64:	cmp	r3, #1
   27e68:	and	r3, r6, r5
   27e6c:	add	r4, r8, r3, lsl #2
   27e70:	bls	27f64 <fb_symbol_table_insert@@Base+0x188>
   27e74:	ldr	r7, [r8, r3, lsl #2]
   27e78:	cmp	r7, #0
   27e7c:	moveq	r3, r4
   27e80:	beq	27f4c <fb_symbol_table_insert@@Base+0x170>
   27e84:	add	r5, r5, #1
   27e88:	mov	r3, #0
   27e8c:	str	r9, [sp, #12]
   27e90:	mov	r9, sl
   27e94:	mov	sl, r6
   27e98:	mov	r6, r5
   27e9c:	mov	r5, r3
   27ea0:	b	27ecc <fb_symbol_table_insert@@Base+0xf0>
   27ea4:	ldr	r1, [r7, #4]
   27ea8:	ldr	r2, [r1, #4]
   27eac:	cmp	r9, r2
   27eb0:	beq	27ee0 <fb_symbol_table_insert@@Base+0x104>
   27eb4:	and	r4, sl, r6
   27eb8:	add	r6, r6, #1
   27ebc:	ldr	r7, [r8, r4, lsl #2]
   27ec0:	add	r4, r8, r4, lsl #2
   27ec4:	cmp	r7, #0
   27ec8:	beq	27f3c <fb_symbol_table_insert@@Base+0x160>
   27ecc:	cmp	r7, #2
   27ed0:	bne	27ea4 <fb_symbol_table_insert@@Base+0xc8>
   27ed4:	cmp	r5, #0
   27ed8:	moveq	r5, r4
   27edc:	b	27eb4 <fb_symbol_table_insert@@Base+0xd8>
   27ee0:	mov	r2, r9
   27ee4:	ldr	r1, [r1]
   27ee8:	ldr	r0, [sp, #8]
   27eec:	bl	13ed0 <memcmp@plt>
   27ef0:	cmp	r0, #0
   27ef4:	bne	27eb4 <fb_symbol_table_insert@@Base+0xd8>
   27ef8:	ldr	r3, [sp, #64]	; 0x40
   27efc:	cmp	r3, #0
   27f00:	streq	fp, [r4]
   27f04:	mov	r0, r7
   27f08:	add	sp, sp, #28
   27f0c:	ldrd	r4, [sp]
   27f10:	ldrd	r6, [sp, #8]
   27f14:	ldrd	r8, [sp, #16]
   27f18:	ldrd	sl, [sp, #24]
   27f1c:	add	sp, sp, #32
   27f20:	pop	{pc}		; (ldr pc, [sp], #4)
   27f24:	lsl	r1, r1, #1
   27f28:	bl	27a4c <ptr_set_visit@@Base+0x84>
   27f2c:	cmp	r0, #0
   27f30:	bne	2800c <fb_symbol_table_insert@@Base+0x230>
   27f34:	ldr	r6, [r9, #12]
   27f38:	b	27e30 <fb_symbol_table_insert@@Base+0x54>
   27f3c:	ldr	r9, [sp, #12]
   27f40:	cmp	r5, #0
   27f44:	mov	r3, r5
   27f48:	moveq	r3, r4
   27f4c:	ldr	r2, [r9, #8]
   27f50:	mov	r7, #0
   27f54:	add	r2, r2, #1
   27f58:	str	r2, [r9, #8]
   27f5c:	str	fp, [r3]
   27f60:	b	27f04 <fb_symbol_table_insert@@Base+0x128>
   27f64:	ldr	r2, [r9, #8]
   27f68:	ldr	r1, [r8, r3, lsl #2]
   27f6c:	add	r3, r2, #1
   27f70:	cmp	r1, #0
   27f74:	cmpne	r1, #2
   27f78:	str	r3, [r9, #8]
   27f7c:	beq	27fa0 <fb_symbol_table_insert@@Base+0x1c4>
   27f80:	add	r5, r5, #1
   27f84:	and	r4, r6, r5
   27f88:	add	r5, r5, #1
   27f8c:	ldr	r3, [r8, r4, lsl #2]
   27f90:	add	r4, r8, r4, lsl #2
   27f94:	cmp	r3, #0
   27f98:	cmpne	r3, #2
   27f9c:	bne	27f84 <fb_symbol_table_insert@@Base+0x1a8>
   27fa0:	mov	r7, #0
   27fa4:	str	fp, [r4]
   27fa8:	b	27f04 <fb_symbol_table_insert@@Base+0x128>
   27fac:	movw	r3, #26736	; 0x6870
   27fb0:	movt	r3, #5
   27fb4:	movw	r1, #26484	; 0x6774
   27fb8:	movt	r1, #5
   27fbc:	movw	r0, #26588	; 0x67dc
   27fc0:	movt	r0, #5
   27fc4:	mov	r2, #115	; 0x73
   27fc8:	bl	14014 <__assert_fail@plt>
   27fcc:	movw	r3, #26736	; 0x6870
   27fd0:	movt	r3, #5
   27fd4:	movw	r1, #26484	; 0x6774
   27fd8:	movt	r1, #5
   27fdc:	movw	r0, #26564	; 0x67c4
   27fe0:	movt	r0, #5
   27fe4:	mov	r2, #114	; 0x72
   27fe8:	bl	14014 <__assert_fail@plt>
   27fec:	movw	r3, #26736	; 0x6870
   27ff0:	movt	r3, #5
   27ff4:	movw	r1, #26484	; 0x6774
   27ff8:	movt	r1, #5
   27ffc:	movw	r0, #26612	; 0x67f4
   28000:	movt	r0, #5
   28004:	mov	r2, #116	; 0x74
   28008:	bl	14014 <__assert_fail@plt>
   2800c:	movw	r3, #41128	; 0xa0a8
   28010:	movt	r3, #6
   28014:	movw	r2, #26636	; 0x680c
   28018:	movt	r2, #5
   2801c:	ldr	r0, [r3]
   28020:	movw	r1, #26688	; 0x6840
   28024:	movt	r1, #5
   28028:	bl	13f60 <fprintf@plt>
   2802c:	mov	r0, #1
   28030:	bl	13f48 <exit@plt>

00028034 <fb_symbol_table_insert_item@@Base>:
   28034:	ldr	r3, [r1, #4]
   28038:	cmp	r1, #2
   2803c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   28040:	strd	r6, [sp, #8]
   28044:	strd	r8, [sp, #16]
   28048:	strd	sl, [sp, #24]
   2804c:	str	lr, [sp, #32]
   28050:	sub	sp, sp, #36	; 0x24
   28054:	ldr	fp, [r3, #4]
   28058:	str	r2, [sp, #16]
   2805c:	ldr	r2, [r3]
   28060:	str	r2, [sp, #12]
   28064:	beq	2822c <fb_symbol_table_insert_item@@Base+0x1f8>
   28068:	cmp	r1, #1
   2806c:	mov	sl, r1
   28070:	beq	2820c <fb_symbol_table_insert_item@@Base+0x1d8>
   28074:	mov	r3, #179	; 0xb3
   28078:	ldr	r1, [r0, #8]
   2807c:	mov	r9, r0
   28080:	ldr	r6, [r0, #12]
   28084:	mul	r3, r3, r6
   28088:	cmp	r1, r3, lsr #8
   2808c:	bcs	28184 <fb_symbol_table_insert_item@@Base+0x150>
   28090:	add	ip, sp, #24
   28094:	movw	r1, #15186	; 0x3b52
   28098:	movt	r1, #12137	; 0x2f69
   2809c:	mov	r3, #0
   280a0:	ldr	r8, [r9]
   280a4:	mov	r2, fp
   280a8:	sub	r6, r6, #1
   280ac:	stm	sp, {r1, ip}
   280b0:	ldr	r0, [sp, #12]
   280b4:	bl	3b8d4 <cmetrohash64_1@@Base>
   280b8:	ldr	r3, [sp, #16]
   280bc:	ldr	r5, [sp, #24]
   280c0:	sub	r3, r3, #2
   280c4:	cmp	r3, #1
   280c8:	and	r3, r6, r5
   280cc:	add	r4, r8, r3, lsl #2
   280d0:	bls	281c4 <fb_symbol_table_insert_item@@Base+0x190>
   280d4:	ldr	r7, [r8, r3, lsl #2]
   280d8:	cmp	r7, #0
   280dc:	moveq	r3, r4
   280e0:	beq	281ac <fb_symbol_table_insert_item@@Base+0x178>
   280e4:	add	r5, r5, #1
   280e8:	mov	r3, #0
   280ec:	str	r9, [sp, #20]
   280f0:	mov	r9, r8
   280f4:	mov	r8, r6
   280f8:	mov	r6, r5
   280fc:	mov	r5, r3
   28100:	b	2812c <fb_symbol_table_insert_item@@Base+0xf8>
   28104:	ldr	r1, [r7, #4]
   28108:	ldr	r2, [r1, #4]
   2810c:	cmp	fp, r2
   28110:	beq	28140 <fb_symbol_table_insert_item@@Base+0x10c>
   28114:	and	r4, r8, r6
   28118:	add	r6, r6, #1
   2811c:	ldr	r7, [r9, r4, lsl #2]
   28120:	add	r4, r9, r4, lsl #2
   28124:	cmp	r7, #0
   28128:	beq	2819c <fb_symbol_table_insert_item@@Base+0x168>
   2812c:	cmp	r7, #2
   28130:	bne	28104 <fb_symbol_table_insert_item@@Base+0xd0>
   28134:	cmp	r5, #0
   28138:	moveq	r5, r4
   2813c:	b	28114 <fb_symbol_table_insert_item@@Base+0xe0>
   28140:	mov	r2, fp
   28144:	ldr	r1, [r1]
   28148:	ldr	r0, [sp, #12]
   2814c:	bl	13ed0 <memcmp@plt>
   28150:	cmp	r0, #0
   28154:	bne	28114 <fb_symbol_table_insert_item@@Base+0xe0>
   28158:	ldr	r3, [sp, #16]
   2815c:	cmp	r3, #0
   28160:	streq	sl, [r4]
   28164:	mov	r0, r7
   28168:	add	sp, sp, #36	; 0x24
   2816c:	ldrd	r4, [sp]
   28170:	ldrd	r6, [sp, #8]
   28174:	ldrd	r8, [sp, #16]
   28178:	ldrd	sl, [sp, #24]
   2817c:	add	sp, sp, #32
   28180:	pop	{pc}		; (ldr pc, [sp], #4)
   28184:	lsl	r1, r1, #1
   28188:	bl	27a4c <ptr_set_visit@@Base+0x84>
   2818c:	cmp	r0, #0
   28190:	bne	2824c <fb_symbol_table_insert_item@@Base+0x218>
   28194:	ldr	r6, [r9, #12]
   28198:	b	28090 <fb_symbol_table_insert_item@@Base+0x5c>
   2819c:	ldr	r9, [sp, #20]
   281a0:	cmp	r5, #0
   281a4:	mov	r3, r5
   281a8:	moveq	r3, r4
   281ac:	ldr	r2, [r9, #8]
   281b0:	mov	r7, #0
   281b4:	add	r2, r2, #1
   281b8:	str	r2, [r9, #8]
   281bc:	str	sl, [r3]
   281c0:	b	28164 <fb_symbol_table_insert_item@@Base+0x130>
   281c4:	ldr	r2, [r9, #8]
   281c8:	ldr	r1, [r8, r3, lsl #2]
   281cc:	add	r3, r2, #1
   281d0:	cmp	r1, #0
   281d4:	cmpne	r1, #2
   281d8:	str	r3, [r9, #8]
   281dc:	beq	28200 <fb_symbol_table_insert_item@@Base+0x1cc>
   281e0:	add	r5, r5, #1
   281e4:	and	r4, r6, r5
   281e8:	add	r5, r5, #1
   281ec:	ldr	r3, [r8, r4, lsl #2]
   281f0:	add	r4, r8, r4, lsl #2
   281f4:	cmp	r3, #0
   281f8:	cmpne	r3, #2
   281fc:	bne	281e4 <fb_symbol_table_insert_item@@Base+0x1b0>
   28200:	mov	r7, #0
   28204:	str	sl, [r4]
   28208:	b	28164 <fb_symbol_table_insert_item@@Base+0x130>
   2820c:	movw	r3, #26736	; 0x6870
   28210:	movt	r3, #5
   28214:	movw	r1, #26484	; 0x6774
   28218:	movt	r1, #5
   2821c:	movw	r0, #26612	; 0x67f4
   28220:	movt	r0, #5
   28224:	mov	r2, #116	; 0x74
   28228:	bl	14014 <__assert_fail@plt>
   2822c:	movw	r3, #26736	; 0x6870
   28230:	movt	r3, #5
   28234:	movw	r1, #26484	; 0x6774
   28238:	movt	r1, #5
   2823c:	movw	r0, #26588	; 0x67dc
   28240:	movt	r0, #5
   28244:	mov	r2, #115	; 0x73
   28248:	bl	14014 <__assert_fail@plt>
   2824c:	movw	r3, #41128	; 0xa0a8
   28250:	movt	r3, #6
   28254:	movw	r2, #26636	; 0x680c
   28258:	movt	r2, #5
   2825c:	ldr	r0, [r3]
   28260:	movw	r1, #26688	; 0x6840
   28264:	movt	r1, #5
   28268:	bl	13f60 <fprintf@plt>
   2826c:	mov	r0, #1
   28270:	bl	13f48 <exit@plt>

00028274 <fb_symbol_table_find@@Base>:
   28274:	strd	r4, [sp, #-28]!	; 0xffffffe4
   28278:	strd	r6, [sp, #8]
   2827c:	strd	r8, [sp, #16]
   28280:	ldr	r9, [r0]
   28284:	str	lr, [sp, #24]
   28288:	sub	sp, sp, #20
   2828c:	cmp	r9, #0
   28290:	beq	2833c <fb_symbol_table_find@@Base+0xc8>
   28294:	mov	r7, r1
   28298:	add	ip, sp, #8
   2829c:	ldr	r8, [r0, #12]
   282a0:	movw	r1, #15186	; 0x3b52
   282a4:	movt	r1, #12137	; 0x2f69
   282a8:	mov	r3, #0
   282ac:	mov	r0, r7
   282b0:	stm	sp, {r1, ip}
   282b4:	mov	r6, r2
   282b8:	bl	3b8d4 <cmetrohash64_1@@Base>
   282bc:	ldr	r5, [sp, #8]
   282c0:	sub	r8, r8, #1
   282c4:	and	r3, r8, r5
   282c8:	ldr	r4, [r9, r3, lsl #2]
   282cc:	cmp	r4, #0
   282d0:	beq	2833c <fb_symbol_table_find@@Base+0xc8>
   282d4:	add	r5, r5, #1
   282d8:	b	282f0 <fb_symbol_table_find@@Base+0x7c>
   282dc:	and	r3, r8, r5
   282e0:	add	r5, r5, #1
   282e4:	ldr	r4, [r9, r3, lsl #2]
   282e8:	cmp	r4, #0
   282ec:	beq	2833c <fb_symbol_table_find@@Base+0xc8>
   282f0:	cmp	r4, #2
   282f4:	beq	282dc <fb_symbol_table_find@@Base+0x68>
   282f8:	ldr	r3, [r4, #4]
   282fc:	ldr	r2, [r3, #4]
   28300:	cmp	r6, r2
   28304:	bne	282dc <fb_symbol_table_find@@Base+0x68>
   28308:	mov	r2, r6
   2830c:	mov	r0, r7
   28310:	ldr	r1, [r3]
   28314:	bl	13ed0 <memcmp@plt>
   28318:	cmp	r0, #0
   2831c:	bne	282dc <fb_symbol_table_find@@Base+0x68>
   28320:	mov	r0, r4
   28324:	add	sp, sp, #20
   28328:	ldrd	r4, [sp]
   2832c:	ldrd	r6, [sp, #8]
   28330:	ldrd	r8, [sp, #16]
   28334:	add	sp, sp, #24
   28338:	pop	{pc}		; (ldr pc, [sp], #4)
   2833c:	mov	r4, #0
   28340:	b	28320 <fb_symbol_table_find@@Base+0xac>

00028344 <fb_symbol_table_find_item@@Base>:
   28344:	strd	r4, [sp, #-28]!	; 0xffffffe4
   28348:	ldr	r3, [r1, #4]
   2834c:	strd	r6, [sp, #8]
   28350:	ldr	r7, [r0]
   28354:	strd	r8, [sp, #16]
   28358:	str	lr, [sp, #24]
   2835c:	sub	sp, sp, #20
   28360:	ldr	r9, [r3]
   28364:	cmp	r7, #0
   28368:	ldr	r8, [r3, #4]
   2836c:	beq	28418 <fb_symbol_table_find_item@@Base+0xd4>
   28370:	add	r1, sp, #8
   28374:	movw	r3, #15186	; 0x3b52
   28378:	movt	r3, #12137	; 0x2f69
   2837c:	mov	r2, r8
   28380:	ldr	r6, [r0, #12]
   28384:	mov	r0, r9
   28388:	str	r3, [sp]
   2838c:	mov	r3, #0
   28390:	str	r1, [sp, #4]
   28394:	bl	3b8d4 <cmetrohash64_1@@Base>
   28398:	ldr	r5, [sp, #8]
   2839c:	sub	r6, r6, #1
   283a0:	and	r3, r6, r5
   283a4:	ldr	r4, [r7, r3, lsl #2]
   283a8:	cmp	r4, #0
   283ac:	beq	28418 <fb_symbol_table_find_item@@Base+0xd4>
   283b0:	add	r5, r5, #1
   283b4:	b	283cc <fb_symbol_table_find_item@@Base+0x88>
   283b8:	and	r3, r6, r5
   283bc:	add	r5, r5, #1
   283c0:	ldr	r4, [r7, r3, lsl #2]
   283c4:	cmp	r4, #0
   283c8:	beq	28418 <fb_symbol_table_find_item@@Base+0xd4>
   283cc:	cmp	r4, #2
   283d0:	beq	283b8 <fb_symbol_table_find_item@@Base+0x74>
   283d4:	ldr	r3, [r4, #4]
   283d8:	ldr	r2, [r3, #4]
   283dc:	cmp	r8, r2
   283e0:	bne	283b8 <fb_symbol_table_find_item@@Base+0x74>
   283e4:	mov	r2, r8
   283e8:	mov	r0, r9
   283ec:	ldr	r1, [r3]
   283f0:	bl	13ed0 <memcmp@plt>
   283f4:	cmp	r0, #0
   283f8:	bne	283b8 <fb_symbol_table_find_item@@Base+0x74>
   283fc:	mov	r0, r4
   28400:	add	sp, sp, #20
   28404:	ldrd	r4, [sp]
   28408:	ldrd	r6, [sp, #8]
   2840c:	ldrd	r8, [sp, #16]
   28410:	add	sp, sp, #24
   28414:	pop	{pc}		; (ldr pc, [sp], #4)
   28418:	mov	r4, #0
   2841c:	b	283fc <fb_symbol_table_find_item@@Base+0xb8>

00028420 <fb_symbol_table_remove@@Base>:
   28420:	strd	r4, [sp, #-36]!	; 0xffffffdc
   28424:	ldr	r5, [r0]
   28428:	strd	r6, [sp, #8]
   2842c:	strd	r8, [sp, #16]
   28430:	strd	sl, [sp, #24]
   28434:	str	lr, [sp, #32]
   28438:	sub	sp, sp, #20
   2843c:	cmp	r5, #0
   28440:	beq	28510 <fb_symbol_table_remove@@Base+0xf0>
   28444:	mov	r8, r1
   28448:	add	ip, sp, #8
   2844c:	movw	r1, #15186	; 0x3b52
   28450:	movt	r1, #12137	; 0x2f69
   28454:	mov	r6, r0
   28458:	mov	r3, #0
   2845c:	mov	r0, r8
   28460:	ldr	r9, [r6, #12]
   28464:	mov	r7, r2
   28468:	stm	sp, {r1, ip}
   2846c:	bl	3b8d4 <cmetrohash64_1@@Base>
   28470:	ldr	sl, [sp, #8]
   28474:	sub	r9, r9, #1
   28478:	and	r3, r9, sl
   2847c:	ldr	r4, [r5, r3, lsl #2]
   28480:	add	fp, r5, r3, lsl #2
   28484:	cmp	r4, #0
   28488:	beq	28510 <fb_symbol_table_remove@@Base+0xf0>
   2848c:	add	sl, sl, #1
   28490:	b	284ac <fb_symbol_table_remove@@Base+0x8c>
   28494:	and	r3, r9, sl
   28498:	add	sl, sl, #1
   2849c:	ldr	r4, [r5, r3, lsl #2]
   284a0:	add	fp, r5, r3, lsl #2
   284a4:	cmp	r4, #0
   284a8:	beq	28510 <fb_symbol_table_remove@@Base+0xf0>
   284ac:	cmp	r4, #2
   284b0:	beq	28494 <fb_symbol_table_remove@@Base+0x74>
   284b4:	ldr	r1, [r4, #4]
   284b8:	ldr	r3, [r1, #4]
   284bc:	cmp	r7, r3
   284c0:	bne	28494 <fb_symbol_table_remove@@Base+0x74>
   284c4:	mov	r2, r7
   284c8:	mov	r0, r8
   284cc:	ldr	r1, [r1]
   284d0:	bl	13ed0 <memcmp@plt>
   284d4:	cmp	r0, #0
   284d8:	bne	28494 <fb_symbol_table_remove@@Base+0x74>
   284dc:	ldr	r3, [r6, #8]
   284e0:	mov	r2, #2
   284e4:	str	r2, [fp]
   284e8:	sub	r3, r3, #1
   284ec:	str	r3, [r6, #8]
   284f0:	mov	r0, r4
   284f4:	add	sp, sp, #20
   284f8:	ldrd	r4, [sp]
   284fc:	ldrd	r6, [sp, #8]
   28500:	ldrd	r8, [sp, #16]
   28504:	ldrd	sl, [sp, #24]
   28508:	add	sp, sp, #32
   2850c:	pop	{pc}		; (ldr pc, [sp], #4)
   28510:	mov	r4, #0
   28514:	b	284f0 <fb_symbol_table_remove@@Base+0xd0>

00028518 <fb_symbol_table_remove_item@@Base>:
   28518:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2851c:	ldr	r5, [r0]
   28520:	ldr	r3, [r1, #4]
   28524:	strd	r6, [sp, #8]
   28528:	strd	r8, [sp, #16]
   2852c:	cmp	r5, #0
   28530:	strd	sl, [sp, #24]
   28534:	str	lr, [sp, #32]
   28538:	sub	sp, sp, #20
   2853c:	ldr	r9, [r3]
   28540:	ldr	r8, [r3, #4]
   28544:	beq	28614 <fb_symbol_table_remove_item@@Base+0xfc>
   28548:	add	r1, sp, #8
   2854c:	movw	r3, #15186	; 0x3b52
   28550:	movt	r3, #12137	; 0x2f69
   28554:	mov	r6, r0
   28558:	mov	r2, r8
   2855c:	mov	r0, r9
   28560:	ldr	r7, [r6, #12]
   28564:	str	r3, [sp]
   28568:	mov	r3, #0
   2856c:	str	r1, [sp, #4]
   28570:	bl	3b8d4 <cmetrohash64_1@@Base>
   28574:	ldr	sl, [sp, #8]
   28578:	sub	r7, r7, #1
   2857c:	and	r3, r7, sl
   28580:	ldr	r4, [r5, r3, lsl #2]
   28584:	add	fp, r5, r3, lsl #2
   28588:	cmp	r4, #0
   2858c:	beq	28614 <fb_symbol_table_remove_item@@Base+0xfc>
   28590:	add	sl, sl, #1
   28594:	b	285b0 <fb_symbol_table_remove_item@@Base+0x98>
   28598:	and	r3, r7, sl
   2859c:	add	sl, sl, #1
   285a0:	ldr	r4, [r5, r3, lsl #2]
   285a4:	add	fp, r5, r3, lsl #2
   285a8:	cmp	r4, #0
   285ac:	beq	28614 <fb_symbol_table_remove_item@@Base+0xfc>
   285b0:	cmp	r4, #2
   285b4:	beq	28598 <fb_symbol_table_remove_item@@Base+0x80>
   285b8:	ldr	r1, [r4, #4]
   285bc:	ldr	r3, [r1, #4]
   285c0:	cmp	r8, r3
   285c4:	bne	28598 <fb_symbol_table_remove_item@@Base+0x80>
   285c8:	mov	r2, r8
   285cc:	mov	r0, r9
   285d0:	ldr	r1, [r1]
   285d4:	bl	13ed0 <memcmp@plt>
   285d8:	cmp	r0, #0
   285dc:	bne	28598 <fb_symbol_table_remove_item@@Base+0x80>
   285e0:	ldr	r3, [r6, #8]
   285e4:	mov	r2, #2
   285e8:	str	r2, [fp]
   285ec:	sub	r3, r3, #1
   285f0:	str	r3, [r6, #8]
   285f4:	mov	r0, r4
   285f8:	add	sp, sp, #20
   285fc:	ldrd	r4, [sp]
   28600:	ldrd	r6, [sp, #8]
   28604:	ldrd	r8, [sp, #16]
   28608:	ldrd	sl, [sp, #24]
   2860c:	add	sp, sp, #32
   28610:	pop	{pc}		; (ldr pc, [sp], #4)
   28614:	mov	r4, #0
   28618:	b	285f4 <fb_symbol_table_remove_item@@Base+0xdc>

0002861c <fb_symbol_table_visit@@Base>:
   2861c:	ldr	ip, [r0, #12]
   28620:	strd	r4, [sp, #-24]!	; 0xffffffe8
   28624:	ldr	r5, [r0]
   28628:	strd	r6, [sp, #8]
   2862c:	str	r8, [sp, #16]
   28630:	cmp	ip, #0
   28634:	str	lr, [sp, #20]
   28638:	beq	2867c <fb_symbol_table_visit@@Base+0x60>
   2863c:	mov	r6, r2
   28640:	mov	r8, r1
   28644:	mov	r7, r0
   28648:	sub	r5, r5, #4
   2864c:	mov	r4, #0
   28650:	ldr	r3, [r5, #4]!
   28654:	mov	r0, r6
   28658:	cmp	r3, #0
   2865c:	cmpne	r3, #2
   28660:	mov	r1, r3
   28664:	beq	28690 <fb_symbol_table_visit@@Base+0x74>
   28668:	blx	r8
   2866c:	ldr	ip, [r7, #12]
   28670:	add	r4, r4, #1
   28674:	cmp	r4, ip
   28678:	bcc	28650 <fb_symbol_table_visit@@Base+0x34>
   2867c:	ldrd	r4, [sp]
   28680:	ldrd	r6, [sp, #8]
   28684:	ldr	r8, [sp, #16]
   28688:	add	sp, sp, #20
   2868c:	pop	{pc}		; (ldr pc, [sp], #4)
   28690:	add	r4, r4, #1
   28694:	cmp	r4, ip
   28698:	bcc	28650 <fb_symbol_table_visit@@Base+0x34>
   2869c:	b	2867c <fb_symbol_table_visit@@Base+0x60>
   286a0:	cmp	r2, #0
   286a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   286a8:	strd	r6, [sp, #8]
   286ac:	strd	r8, [sp, #16]
   286b0:	strd	sl, [sp, #24]
   286b4:	str	lr, [sp, #32]
   286b8:	sub	sp, sp, #20
   286bc:	str	r2, [sp, #4]
   286c0:	str	r0, [sp, #8]
   286c4:	str	r3, [sp, #12]
   286c8:	beq	289cc <fb_symbol_table_visit@@Base+0x3b0>
   286cc:	cmp	r2, #2
   286d0:	beq	289ac <fb_symbol_table_visit@@Base+0x390>
   286d4:	cmp	r2, #1
   286d8:	beq	2898c <fb_symbol_table_visit@@Base+0x370>
   286dc:	ldr	fp, [r0, #12]
   286e0:	mov	r9, r1
   286e4:	mov	r3, #179	; 0xb3
   286e8:	mov	r4, r0
   286ec:	ldr	r1, [r0, #8]
   286f0:	mul	r3, r3, fp
   286f4:	cmp	r1, r3, lsr #8
   286f8:	bcs	288b8 <fb_symbol_table_visit@@Base+0x29c>
   286fc:	sub	r3, fp, #1
   28700:	cmp	r9, #0
   28704:	str	r3, [sp]
   28708:	ldr	r3, [sp, #8]
   2870c:	ldr	fp, [r3]
   28710:	beq	28958 <fb_symbol_table_visit@@Base+0x33c>
   28714:	movw	r8, #11863	; 0x2e57
   28718:	movt	r8, #12137	; 0x2f69
   2871c:	movw	r7, #15186	; 0x3b52
   28720:	movt	r7, #12137	; 0x2f69
   28724:	movw	r6, #31153	; 0x79b1
   28728:	movt	r6, #40503	; 0x9e37
   2872c:	mov	r5, r9
   28730:	mov	r1, #0
   28734:	ldr	r3, [r5, #4]
   28738:	ldr	ip, [r3]
   2873c:	ldr	r2, [r3, #4]
   28740:	subs	r3, r2, #1
   28744:	beq	288d0 <fb_symbol_table_visit@@Base+0x2b4>
   28748:	mov	r2, ip
   2874c:	ldrb	r0, [r2], #1
   28750:	cmp	r0, #0
   28754:	beq	288d0 <fb_symbol_table_visit@@Base+0x2b4>
   28758:	add	ip, ip, r3
   2875c:	mov	r3, r8
   28760:	b	28770 <fb_symbol_table_visit@@Base+0x154>
   28764:	ldrb	r0, [r2], #1
   28768:	cmp	r0, #0
   2876c:	beq	28780 <fb_symbol_table_visit@@Base+0x164>
   28770:	add	r3, r3, r3, lsl #5
   28774:	cmp	r2, ip
   28778:	eor	r3, r3, r0
   2877c:	bne	28764 <fb_symbol_table_visit@@Base+0x148>
   28780:	ldr	r5, [r5]
   28784:	eor	r3, r3, r1
   28788:	eor	r3, r3, r7
   2878c:	mul	r1, r6, r3
   28790:	cmp	r5, #0
   28794:	bne	28734 <fb_symbol_table_visit@@Base+0x118>
   28798:	ldr	r3, [sp]
   2879c:	and	r5, r3, r1
   287a0:	add	r5, fp, r5, lsl #2
   287a4:	ldr	r3, [sp, #12]
   287a8:	ldr	r8, [r5]
   287ac:	sub	r2, r3, #2
   287b0:	cmp	r2, #1
   287b4:	bls	28904 <fb_symbol_table_visit@@Base+0x2e8>
   287b8:	cmp	r8, #0
   287bc:	moveq	sl, r5
   287c0:	beq	2887c <fb_symbol_table_visit@@Base+0x260>
   287c4:	add	r4, r1, #1
   287c8:	mov	sl, #0
   287cc:	cmp	r8, #2
   287d0:	beq	288d8 <fb_symbol_table_visit@@Base+0x2bc>
   287d4:	ldr	r6, [r8]
   287d8:	adds	r2, r9, #0
   287dc:	movne	r2, #1
   287e0:	adds	r1, r6, #0
   287e4:	movne	r1, #1
   287e8:	tst	r1, r2
   287ec:	beq	288e4 <fb_symbol_table_visit@@Base+0x2c8>
   287f0:	ldr	r0, [r6, #4]
   287f4:	ldr	r1, [r9, #4]
   287f8:	ldr	r2, [r0, #4]
   287fc:	ldr	r3, [r1, #4]
   28800:	cmp	r2, r3
   28804:	bne	28858 <fb_symbol_table_visit@@Base+0x23c>
   28808:	mov	r7, r9
   2880c:	ldr	r0, [r0]
   28810:	ldr	r1, [r1]
   28814:	bl	13ffc <strncmp@plt>
   28818:	cmp	r0, #0
   2881c:	bne	28858 <fb_symbol_table_visit@@Base+0x23c>
   28820:	ldr	r6, [r6]
   28824:	ldr	r7, [r7]
   28828:	adds	r1, r6, #0
   2882c:	movne	r1, #1
   28830:	adds	r2, r7, #0
   28834:	movne	r2, #1
   28838:	tst	r1, r2
   2883c:	beq	288e4 <fb_symbol_table_visit@@Base+0x2c8>
   28840:	ldr	r0, [r6, #4]
   28844:	ldr	r1, [r7, #4]
   28848:	ldr	r2, [r0, #4]
   2884c:	ldr	r3, [r1, #4]
   28850:	cmp	r2, r3
   28854:	beq	2880c <fb_symbol_table_visit@@Base+0x1f0>
   28858:	ldr	r3, [sp]
   2885c:	and	r5, r3, r4
   28860:	add	r4, r4, #1
   28864:	ldr	r8, [fp, r5, lsl #2]
   28868:	add	r5, fp, r5, lsl #2
   2886c:	cmp	r8, #0
   28870:	bne	287cc <fb_symbol_table_visit@@Base+0x1b0>
   28874:	cmp	sl, #0
   28878:	moveq	sl, r5
   2887c:	ldr	r2, [sp, #8]
   28880:	mov	r8, #0
   28884:	ldr	r3, [r2, #8]
   28888:	add	r3, r3, #1
   2888c:	str	r3, [r2, #8]
   28890:	ldr	r3, [sp, #4]
   28894:	str	r3, [sl]
   28898:	mov	r0, r8
   2889c:	add	sp, sp, #20
   288a0:	ldrd	r4, [sp]
   288a4:	ldrd	r6, [sp, #8]
   288a8:	ldrd	r8, [sp, #16]
   288ac:	ldrd	sl, [sp, #24]
   288b0:	add	sp, sp, #32
   288b4:	pop	{pc}		; (ldr pc, [sp], #4)
   288b8:	lsl	r1, r1, #1
   288bc:	bl	289ec <fb_symbol_table_visit@@Base+0x3d0>
   288c0:	cmp	r0, #0
   288c4:	bne	28964 <fb_symbol_table_visit@@Base+0x348>
   288c8:	ldr	fp, [r4, #12]
   288cc:	b	286fc <fb_symbol_table_visit@@Base+0xe0>
   288d0:	mov	r3, r8
   288d4:	b	28780 <fb_symbol_table_visit@@Base+0x164>
   288d8:	cmp	sl, #0
   288dc:	moveq	sl, r5
   288e0:	b	28858 <fb_symbol_table_visit@@Base+0x23c>
   288e4:	orrs	r3, r1, r2
   288e8:	bne	28858 <fb_symbol_table_visit@@Base+0x23c>
   288ec:	ldr	r3, [sp, #12]
   288f0:	cmp	r3, #0
   288f4:	bne	28898 <fb_symbol_table_visit@@Base+0x27c>
   288f8:	ldr	r3, [sp, #4]
   288fc:	str	r3, [r5]
   28900:	b	28898 <fb_symbol_table_visit@@Base+0x27c>
   28904:	ldr	r3, [sp, #8]
   28908:	cmp	r8, #0
   2890c:	cmpne	r8, #2
   28910:	ldr	r2, [r3, #8]
   28914:	add	r2, r2, #1
   28918:	str	r2, [r3, #8]
   2891c:	beq	28948 <fb_symbol_table_visit@@Base+0x32c>
   28920:	ldr	r0, [sp]
   28924:	add	r1, r1, #1
   28928:	and	r3, r0, r1
   2892c:	add	r1, r1, #1
   28930:	ldr	r2, [fp, r3, lsl #2]
   28934:	add	r3, fp, r3, lsl #2
   28938:	cmp	r2, #0
   2893c:	cmpne	r2, #2
   28940:	bne	28928 <fb_symbol_table_visit@@Base+0x30c>
   28944:	mov	r5, r3
   28948:	ldr	r3, [sp, #4]
   2894c:	mov	r8, #0
   28950:	str	r3, [r5]
   28954:	b	28898 <fb_symbol_table_visit@@Base+0x27c>
   28958:	mov	r5, fp
   2895c:	mov	r1, r9
   28960:	b	287a4 <fb_symbol_table_visit@@Base+0x188>
   28964:	movw	r3, #41128	; 0xa0a8
   28968:	movt	r3, #6
   2896c:	movw	r2, #26636	; 0x680c
   28970:	movt	r2, #5
   28974:	ldr	r0, [r3]
   28978:	movw	r1, #26688	; 0x6840
   2897c:	movt	r1, #5
   28980:	bl	13f60 <fprintf@plt>
   28984:	mov	r0, #1
   28988:	bl	13f48 <exit@plt>
   2898c:	movw	r3, #26760	; 0x6888
   28990:	movt	r3, #5
   28994:	movw	r1, #26484	; 0x6774
   28998:	movt	r1, #5
   2899c:	movw	r0, #26612	; 0x67f4
   289a0:	movt	r0, #5
   289a4:	mov	r2, #116	; 0x74
   289a8:	bl	14014 <__assert_fail@plt>
   289ac:	movw	r3, #26760	; 0x6888
   289b0:	movt	r3, #5
   289b4:	movw	r1, #26484	; 0x6774
   289b8:	movt	r1, #5
   289bc:	movw	r0, #26588	; 0x67dc
   289c0:	movt	r0, #5
   289c4:	mov	r2, #115	; 0x73
   289c8:	bl	14014 <__assert_fail@plt>
   289cc:	movw	r3, #26760	; 0x6888
   289d0:	movt	r3, #5
   289d4:	movw	r1, #26484	; 0x6774
   289d8:	movt	r1, #5
   289dc:	movw	r0, #26564	; 0x67c4
   289e0:	movt	r0, #5
   289e4:	mov	r2, #114	; 0x72
   289e8:	bl	14014 <__assert_fail@plt>
   289ec:	ldr	r3, [r0, #8]
   289f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   289f4:	strd	r6, [sp, #8]
   289f8:	mov	r7, r0
   289fc:	str	r8, [sp, #16]
   28a00:	str	lr, [sp, #20]
   28a04:	sub	sp, sp, #16
   28a08:	cmp	r1, r3
   28a0c:	ldr	r6, [r0]
   28a10:	movcc	r1, r3
   28a14:	cmp	r1, #2
   28a18:	bls	28b00 <fb_symbol_table_visit@@Base+0x4e4>
   28a1c:	mov	r3, #4
   28a20:	movw	r0, #358	; 0x166
   28a24:	mul	r2, r0, r3
   28a28:	lsl	r5, r3, #1
   28a2c:	cmp	r1, r2, lsr #8
   28a30:	mov	r3, r5
   28a34:	bhi	28a24 <fb_symbol_table_visit@@Base+0x408>
   28a38:	mov	r1, #4
   28a3c:	mov	r0, r5
   28a40:	bl	13e7c <calloc@plt>
   28a44:	cmp	r0, #0
   28a48:	str	r0, [sp]
   28a4c:	beq	28b08 <fb_symbol_table_visit@@Base+0x4ec>
   28a50:	ldr	r3, [r7, #12]
   28a54:	mov	r4, #0
   28a58:	str	r4, [sp, #4]
   28a5c:	strd	r4, [sp, #8]
   28a60:	cmp	r3, r4
   28a64:	moveq	r8, sp
   28a68:	beq	28a94 <fb_symbol_table_visit@@Base+0x478>
   28a6c:	sub	r6, r6, #4
   28a70:	mov	r8, sp
   28a74:	ldr	r2, [r6, #4]!
   28a78:	cmp	r2, #0
   28a7c:	cmpne	r2, #2
   28a80:	bne	28adc <fb_symbol_table_visit@@Base+0x4c0>
   28a84:	add	r4, r4, #1
   28a88:	cmp	r4, r3
   28a8c:	bcc	28a74 <fb_symbol_table_visit@@Base+0x458>
   28a90:	ldr	r6, [r7]
   28a94:	cmp	r6, #0
   28a98:	beq	28aa4 <fb_symbol_table_visit@@Base+0x488>
   28a9c:	mov	r0, r6
   28aa0:	bl	13eac <free@plt>
   28aa4:	ldr	r3, [sp]
   28aa8:	mov	r0, #0
   28aac:	ldmib	r8, {r1, r2}
   28ab0:	str	r3, [r7]
   28ab4:	ldr	r3, [r8, #12]
   28ab8:	str	r1, [r7, #4]
   28abc:	str	r2, [r7, #8]
   28ac0:	str	r3, [r7, #12]
   28ac4:	add	sp, sp, #16
   28ac8:	ldrd	r4, [sp]
   28acc:	ldrd	r6, [sp, #8]
   28ad0:	ldr	r8, [sp, #16]
   28ad4:	add	sp, sp, #20
   28ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   28adc:	mov	r3, #3
   28ae0:	mov	r0, r8
   28ae4:	ldr	r1, [r2]
   28ae8:	bl	286a0 <fb_symbol_table_visit@@Base+0x84>
   28aec:	ldr	r3, [r7, #12]
   28af0:	add	r4, r4, #1
   28af4:	cmp	r4, r3
   28af8:	bcc	28a74 <fb_symbol_table_visit@@Base+0x458>
   28afc:	b	28a90 <fb_symbol_table_visit@@Base+0x474>
   28b00:	mov	r5, #4
   28b04:	b	28a38 <fb_symbol_table_visit@@Base+0x41c>
   28b08:	mvn	r0, #0
   28b0c:	b	28ac4 <fb_symbol_table_visit@@Base+0x4a8>

00028b10 <fb_scope_table_clear@@Base>:
   28b10:	str	r4, [sp, #-8]!
   28b14:	mov	r4, r0
   28b18:	ldr	r0, [r0]
   28b1c:	str	lr, [sp, #4]
   28b20:	cmp	r0, #0
   28b24:	beq	28b2c <fb_scope_table_clear@@Base+0x1c>
   28b28:	bl	13eac <free@plt>
   28b2c:	mov	r3, #0
   28b30:	str	r3, [r4]
   28b34:	str	r3, [r4, #4]
   28b38:	str	r3, [r4, #8]
   28b3c:	str	r3, [r4, #12]
   28b40:	ldr	r4, [sp]
   28b44:	add	sp, sp, #4
   28b48:	pop	{pc}		; (ldr pc, [sp], #4)

00028b4c <fb_scope_table_destroy@@Base>:
   28b4c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   28b50:	strd	r6, [sp, #8]
   28b54:	mov	r6, r0
   28b58:	str	r8, [sp, #16]
   28b5c:	subs	r8, r1, #0
   28b60:	str	lr, [sp, #20]
   28b64:	ldr	r0, [r0]
   28b68:	beq	28bb4 <fb_scope_table_destroy@@Base+0x68>
   28b6c:	ldr	ip, [r6, #12]
   28b70:	cmp	ip, #0
   28b74:	beq	28bb4 <fb_scope_table_destroy@@Base+0x68>
   28b78:	mov	r7, r2
   28b7c:	sub	r5, r0, #4
   28b80:	mov	r4, #0
   28b84:	ldr	r3, [r5, #4]!
   28b88:	mov	r0, r7
   28b8c:	cmp	r3, #0
   28b90:	cmpne	r3, #2
   28b94:	mov	r1, r3
   28b98:	beq	28be8 <fb_scope_table_destroy@@Base+0x9c>
   28b9c:	blx	r8
   28ba0:	ldr	ip, [r6, #12]
   28ba4:	add	r4, r4, #1
   28ba8:	cmp	r4, ip
   28bac:	bcc	28b84 <fb_scope_table_destroy@@Base+0x38>
   28bb0:	ldr	r0, [r6]
   28bb4:	cmp	r0, #0
   28bb8:	beq	28bc0 <fb_scope_table_destroy@@Base+0x74>
   28bbc:	bl	13eac <free@plt>
   28bc0:	mov	r3, #0
   28bc4:	str	r3, [r6]
   28bc8:	str	r3, [r6, #4]
   28bcc:	str	r3, [r6, #8]
   28bd0:	str	r3, [r6, #12]
   28bd4:	ldrd	r4, [sp]
   28bd8:	ldrd	r6, [sp, #8]
   28bdc:	ldr	r8, [sp, #16]
   28be0:	add	sp, sp, #20
   28be4:	pop	{pc}		; (ldr pc, [sp], #4)
   28be8:	add	r4, r4, #1
   28bec:	cmp	r4, ip
   28bf0:	bcc	28b84 <fb_scope_table_destroy@@Base+0x38>
   28bf4:	b	28bb0 <fb_scope_table_destroy@@Base+0x64>

00028bf8 <fb_scope_table_init@@Base>:
   28bf8:	cmp	r1, #2
   28bfc:	strd	r4, [sp, #-16]!
   28c00:	mov	r4, r0
   28c04:	str	r6, [sp, #8]
   28c08:	str	lr, [sp, #12]
   28c0c:	bls	28c68 <fb_scope_table_init@@Base+0x70>
   28c10:	mov	r3, #4
   28c14:	movw	r0, #358	; 0x166
   28c18:	mul	r2, r0, r3
   28c1c:	lsl	r5, r3, #1
   28c20:	cmp	r1, r2, lsr #8
   28c24:	mov	r3, r5
   28c28:	bhi	28c18 <fb_scope_table_init@@Base+0x20>
   28c2c:	mov	r1, #4
   28c30:	mov	r0, r5
   28c34:	bl	13e7c <calloc@plt>
   28c38:	cmp	r0, #0
   28c3c:	str	r0, [r4]
   28c40:	beq	28c70 <fb_scope_table_init@@Base+0x78>
   28c44:	mov	r3, #0
   28c48:	mov	r0, r3
   28c4c:	str	r3, [r4, #4]
   28c50:	str	r3, [r4, #8]
   28c54:	str	r5, [r4, #12]
   28c58:	ldrd	r4, [sp]
   28c5c:	ldr	r6, [sp, #8]
   28c60:	add	sp, sp, #12
   28c64:	pop	{pc}		; (ldr pc, [sp], #4)
   28c68:	mov	r5, #4
   28c6c:	b	28c2c <fb_scope_table_init@@Base+0x34>
   28c70:	mvn	r0, #0
   28c74:	b	28c58 <fb_scope_table_init@@Base+0x60>

00028c78 <fb_scope_table_resize@@Base>:
   28c78:	b	289ec <fb_symbol_table_visit@@Base+0x3d0>

00028c7c <fb_scope_table_insert@@Base>:
   28c7c:	cmp	r3, #0
   28c80:	strd	r4, [sp, #-36]!	; 0xffffffdc
   28c84:	strd	r6, [sp, #8]
   28c88:	strd	r8, [sp, #16]
   28c8c:	strd	sl, [sp, #24]
   28c90:	str	lr, [sp, #32]
   28c94:	sub	sp, sp, #28
   28c98:	stm	sp, {r1, r3}
   28c9c:	str	r0, [sp, #8]
   28ca0:	beq	29184 <fb_scope_table_insert@@Base+0x508>
   28ca4:	cmp	r3, #2
   28ca8:	beq	29164 <fb_scope_table_insert@@Base+0x4e8>
   28cac:	cmp	r3, #1
   28cb0:	beq	29144 <fb_scope_table_insert@@Base+0x4c8>
   28cb4:	mov	fp, r2
   28cb8:	mov	r3, #179	; 0xb3
   28cbc:	ldr	r1, [r0, #8]
   28cc0:	mov	r4, r0
   28cc4:	ldr	r2, [r0, #12]
   28cc8:	mul	r3, r3, r2
   28ccc:	cmp	r1, r3, lsr #8
   28cd0:	bcs	29008 <fb_scope_table_insert@@Base+0x38c>
   28cd4:	sub	r3, r2, #1
   28cd8:	cmp	fp, #0
   28cdc:	str	r3, [sp, #16]
   28ce0:	ldr	r3, [sp, #8]
   28ce4:	ldr	r3, [r3]
   28ce8:	str	r3, [sp, #12]
   28cec:	ble	29020 <fb_scope_table_insert@@Base+0x3a4>
   28cf0:	ldr	r0, [sp]
   28cf4:	mov	lr, fp
   28cf8:	movw	r8, #11863	; 0x2e57
   28cfc:	movt	r8, #12137	; 0x2f69
   28d00:	cmp	lr, #0
   28d04:	movw	r7, #15186	; 0x3b52
   28d08:	movt	r7, #12137	; 0x2f69
   28d0c:	movw	r6, #31153	; 0x79b1
   28d10:	movt	r6, #40503	; 0x9e37
   28d14:	mov	r4, #0
   28d18:	movw	r9, #5381	; 0x1505
   28d1c:	ldrb	ip, [r0]
   28d20:	beq	28dc4 <fb_scope_table_insert@@Base+0x148>
   28d24:	cmp	ip, #46	; 0x2e
   28d28:	beq	290d4 <fb_scope_table_insert@@Base+0x458>
   28d2c:	mov	r3, r0
   28d30:	mov	r1, #0
   28d34:	b	28d48 <fb_scope_table_insert@@Base+0xcc>
   28d38:	ldrb	r5, [r3, #1]!
   28d3c:	cmp	r5, #46	; 0x2e
   28d40:	beq	28f4c <fb_scope_table_insert@@Base+0x2d0>
   28d44:	mov	r1, r2
   28d48:	add	r2, r1, #1
   28d4c:	cmp	r2, lr
   28d50:	bne	28d38 <fb_scope_table_insert@@Base+0xbc>
   28d54:	cmp	r1, #0
   28d58:	beq	28dd8 <fb_scope_table_insert@@Base+0x15c>
   28d5c:	cmp	ip, #0
   28d60:	mov	r2, lr
   28d64:	add	r5, r0, #1
   28d68:	beq	28dd8 <fb_scope_table_insert@@Base+0x15c>
   28d6c:	add	r1, r0, r1
   28d70:	mov	r3, r8
   28d74:	b	28d84 <fb_scope_table_insert@@Base+0x108>
   28d78:	ldrb	ip, [r5], #1
   28d7c:	cmp	ip, #0
   28d80:	beq	28d94 <fb_scope_table_insert@@Base+0x118>
   28d84:	add	r3, r3, r3, lsl #5
   28d88:	cmp	r5, r1
   28d8c:	eor	r3, r3, ip
   28d90:	bne	28d78 <fb_scope_table_insert@@Base+0xfc>
   28d94:	eor	r3, r3, r4
   28d98:	cmp	lr, r2
   28d9c:	eor	r3, r3, r7
   28da0:	mul	r4, r6, r3
   28da4:	beq	28dec <fb_scope_table_insert@@Base+0x170>
   28da8:	mvn	r3, r2
   28dac:	add	r2, r2, #1
   28db0:	add	lr, lr, r3
   28db4:	add	r0, r0, r2
   28db8:	cmp	lr, #0
   28dbc:	ldrb	ip, [r0]
   28dc0:	bne	28d24 <fb_scope_table_insert@@Base+0xa8>
   28dc4:	cmp	ip, #0
   28dc8:	mov	r2, lr
   28dcc:	mvn	r1, #0
   28dd0:	add	r5, r0, #1
   28dd4:	bne	28d6c <fb_scope_table_insert@@Base+0xf0>
   28dd8:	eor	r4, r4, #5376	; 0x1500
   28ddc:	movw	r3, #31153	; 0x79b1
   28de0:	movt	r3, #40503	; 0x9e37
   28de4:	eor	r4, r4, #5
   28de8:	mul	r4, r3, r4
   28dec:	ldr	r3, [sp, #16]
   28df0:	and	r5, r3, r4
   28df4:	ldr	r3, [sp, #12]
   28df8:	add	r5, r3, r5, lsl #2
   28dfc:	ldr	r3, [sp, #64]	; 0x40
   28e00:	ldr	r7, [r5]
   28e04:	sub	r3, r3, #2
   28e08:	cmp	r3, #1
   28e0c:	bls	290e4 <fb_scope_table_insert@@Base+0x468>
   28e10:	cmp	r7, #0
   28e14:	moveq	r8, r5
   28e18:	beq	28f10 <fb_scope_table_insert@@Base+0x294>
   28e1c:	add	r4, r4, #1
   28e20:	mov	r8, #0
   28e24:	mov	sl, r4
   28e28:	cmp	r7, #2
   28e2c:	beq	28f6c <fb_scope_table_insert@@Base+0x2f0>
   28e30:	cmp	fp, #0
   28e34:	ldr	r4, [r7]
   28e38:	ble	28f78 <fb_scope_table_insert@@Base+0x2fc>
   28e3c:	cmp	r4, #0
   28e40:	beq	28ee8 <fb_scope_table_insert@@Base+0x26c>
   28e44:	ldr	r2, [r4, #4]
   28e48:	ldm	r2, {r1, r3}
   28e4c:	cmp	fp, r3
   28e50:	bcc	28ee8 <fb_scope_table_insert@@Base+0x26c>
   28e54:	ldr	r2, [sp]
   28e58:	mov	ip, fp
   28e5c:	str	r5, [sp, #20]
   28e60:	cmp	r3, #0
   28e64:	beq	290cc <fb_scope_table_insert@@Base+0x450>
   28e68:	ldrb	lr, [r1]
   28e6c:	ldrb	r0, [r2]
   28e70:	cmp	lr, r0
   28e74:	bne	28ee8 <fb_scope_table_insert@@Base+0x26c>
   28e78:	sub	r0, r3, #1
   28e7c:	mov	lr, r2
   28e80:	add	r0, r0, r2
   28e84:	rsb	r5, r2, #1
   28e88:	b	28e9c <fb_scope_table_insert@@Base+0x220>
   28e8c:	ldrb	r9, [r1, #1]!
   28e90:	ldrb	r6, [lr, #1]!
   28e94:	cmp	r9, r6
   28e98:	bne	28ee8 <fb_scope_table_insert@@Base+0x26c>
   28e9c:	cmp	r0, lr
   28ea0:	add	r6, r5, lr
   28ea4:	bne	28e8c <fb_scope_table_insert@@Base+0x210>
   28ea8:	cmp	r3, ip
   28eac:	beq	28fec <fb_scope_table_insert@@Base+0x370>
   28eb0:	ldrb	r1, [r2, r6]
   28eb4:	cmp	r1, #46	; 0x2e
   28eb8:	bne	28ee8 <fb_scope_table_insert@@Base+0x26c>
   28ebc:	ldr	r4, [r4]
   28ec0:	mvn	r1, r3
   28ec4:	add	r3, r3, #1
   28ec8:	add	ip, ip, r1
   28ecc:	add	r2, r2, r3
   28ed0:	cmp	r4, #0
   28ed4:	beq	28ee8 <fb_scope_table_insert@@Base+0x26c>
   28ed8:	ldr	r1, [r4, #4]
   28edc:	ldm	r1, {r1, r3}
   28ee0:	cmp	r3, ip
   28ee4:	bls	28e60 <fb_scope_table_insert@@Base+0x1e4>
   28ee8:	ldr	r3, [sp, #16]
   28eec:	and	r5, r3, sl
   28ef0:	ldr	r3, [sp, #12]
   28ef4:	add	sl, sl, #1
   28ef8:	ldr	r7, [r3, r5, lsl #2]
   28efc:	add	r5, r3, r5, lsl #2
   28f00:	cmp	r7, #0
   28f04:	bne	28e28 <fb_scope_table_insert@@Base+0x1ac>
   28f08:	cmp	r8, #0
   28f0c:	moveq	r8, r5
   28f10:	ldr	r2, [sp, #8]
   28f14:	mov	r7, #0
   28f18:	ldr	r3, [r2, #8]
   28f1c:	add	r3, r3, #1
   28f20:	str	r3, [r2, #8]
   28f24:	ldr	r3, [sp, #4]
   28f28:	str	r3, [r8]
   28f2c:	mov	r0, r7
   28f30:	add	sp, sp, #28
   28f34:	ldrd	r4, [sp]
   28f38:	ldrd	r6, [sp, #8]
   28f3c:	ldrd	r8, [sp, #16]
   28f40:	ldrd	sl, [sp, #24]
   28f44:	add	sp, sp, #32
   28f48:	pop	{pc}		; (ldr pc, [sp], #4)
   28f4c:	cmp	r1, #0
   28f50:	beq	28f60 <fb_scope_table_insert@@Base+0x2e4>
   28f54:	cmp	ip, #0
   28f58:	add	r5, r0, #1
   28f5c:	bne	28d6c <fb_scope_table_insert@@Base+0xf0>
   28f60:	eor	r3, r4, r9
   28f64:	mul	r4, r6, r3
   28f68:	b	28da8 <fb_scope_table_insert@@Base+0x12c>
   28f6c:	cmp	r8, #0
   28f70:	moveq	r8, r5
   28f74:	b	28ee8 <fb_scope_table_insert@@Base+0x26c>
   28f78:	mov	r9, fp
   28f7c:	ldr	r6, [sp]
   28f80:	b	28fc0 <fb_scope_table_insert@@Base+0x344>
   28f84:	ldr	r3, [r4, #4]
   28f88:	ldr	r1, [r6, #4]
   28f8c:	ldr	r2, [r3, #4]
   28f90:	ldr	r0, [r1, #4]
   28f94:	cmp	r2, r0
   28f98:	bne	28ee8 <fb_scope_table_insert@@Base+0x26c>
   28f9c:	ldr	r1, [r1]
   28fa0:	ldr	r0, [r3]
   28fa4:	bl	13ffc <strncmp@plt>
   28fa8:	cmp	r0, #0
   28fac:	bne	28ee8 <fb_scope_table_insert@@Base+0x26c>
   28fb0:	adds	r9, r9, #1
   28fb4:	ldr	r4, [r4]
   28fb8:	ldr	r6, [r6]
   28fbc:	beq	28ff4 <fb_scope_table_insert@@Base+0x378>
   28fc0:	cmp	r4, #0
   28fc4:	cmpne	r6, #0
   28fc8:	bne	28f84 <fb_scope_table_insert@@Base+0x308>
   28fcc:	orrs	r3, r4, r6
   28fd0:	bne	28ee8 <fb_scope_table_insert@@Base+0x26c>
   28fd4:	ldr	r3, [sp, #64]	; 0x40
   28fd8:	cmp	r3, #0
   28fdc:	bne	28f2c <fb_scope_table_insert@@Base+0x2b0>
   28fe0:	ldr	r3, [sp, #4]
   28fe4:	str	r3, [r5]
   28fe8:	b	28f2c <fb_scope_table_insert@@Base+0x2b0>
   28fec:	ldr	r4, [r4]
   28ff0:	ldr	r5, [sp, #20]
   28ff4:	clz	r4, r4
   28ff8:	lsr	r4, r4, #5
   28ffc:	cmp	r4, #0
   29000:	beq	28ee8 <fb_scope_table_insert@@Base+0x26c>
   29004:	b	28fd4 <fb_scope_table_insert@@Base+0x358>
   29008:	lsl	r1, r1, #1
   2900c:	bl	289ec <fb_symbol_table_visit@@Base+0x3d0>
   29010:	cmp	r0, #0
   29014:	bne	291a4 <fb_scope_table_insert@@Base+0x528>
   29018:	ldr	r2, [r4, #12]
   2901c:	b	28cd4 <fb_scope_table_insert@@Base+0x58>
   29020:	ldr	ip, [sp]
   29024:	cmp	ip, #0
   29028:	beq	29138 <fb_scope_table_insert@@Base+0x4bc>
   2902c:	ldr	r3, [ip, #4]
   29030:	movw	r5, #11863	; 0x2e57
   29034:	movt	r5, #12137	; 0x2f69
   29038:	movw	r7, #15186	; 0x3b52
   2903c:	movt	r7, #12137	; 0x2f69
   29040:	movw	r6, #31153	; 0x79b1
   29044:	movt	r6, #40503	; 0x9e37
   29048:	mov	lr, fp
   2904c:	mov	r4, #0
   29050:	ldm	r3, {r1, r2}
   29054:	subs	r0, r2, #1
   29058:	beq	290c4 <fb_scope_table_insert@@Base+0x448>
   2905c:	mov	r2, r1
   29060:	ldrb	r8, [r2], #1
   29064:	cmp	r8, #0
   29068:	beq	290c4 <fb_scope_table_insert@@Base+0x448>
   2906c:	add	r1, r1, r0
   29070:	mov	r3, r5
   29074:	b	29084 <fb_scope_table_insert@@Base+0x408>
   29078:	ldrb	r8, [r2], #1
   2907c:	cmp	r8, #0
   29080:	beq	29094 <fb_scope_table_insert@@Base+0x418>
   29084:	add	r3, r3, r3, lsl #5
   29088:	cmp	r2, r1
   2908c:	eor	r3, r3, r8
   29090:	bne	29078 <fb_scope_table_insert@@Base+0x3fc>
   29094:	eor	r3, r3, r4
   29098:	adds	lr, lr, #1
   2909c:	ldr	ip, [ip]
   290a0:	eor	r3, r3, r7
   290a4:	mul	r4, r6, r3
   290a8:	beq	28dec <fb_scope_table_insert@@Base+0x170>
   290ac:	cmp	ip, #0
   290b0:	beq	28dec <fb_scope_table_insert@@Base+0x170>
   290b4:	ldr	r3, [ip, #4]
   290b8:	ldm	r3, {r1, r2}
   290bc:	subs	r0, r2, #1
   290c0:	bne	2905c <fb_scope_table_insert@@Base+0x3e0>
   290c4:	mov	r3, r5
   290c8:	b	29094 <fb_scope_table_insert@@Base+0x418>
   290cc:	mov	r6, r3
   290d0:	b	28ea8 <fb_scope_table_insert@@Base+0x22c>
   290d4:	add	r5, r0, #1
   290d8:	mov	r2, #0
   290dc:	mvn	r1, #0
   290e0:	b	28d6c <fb_scope_table_insert@@Base+0xf0>
   290e4:	ldr	r2, [sp, #8]
   290e8:	cmp	r7, #0
   290ec:	cmpne	r7, #2
   290f0:	ldr	r3, [r2, #8]
   290f4:	add	r3, r3, #1
   290f8:	str	r3, [r2, #8]
   290fc:	beq	29128 <fb_scope_table_insert@@Base+0x4ac>
   29100:	ldr	r2, [sp, #12]
   29104:	add	r4, r4, #1
   29108:	ldr	r1, [sp, #16]
   2910c:	and	r5, r1, r4
   29110:	add	r4, r4, #1
   29114:	ldr	r3, [r2, r5, lsl #2]
   29118:	add	r5, r2, r5, lsl #2
   2911c:	cmp	r3, #0
   29120:	cmpne	r3, #2
   29124:	bne	2910c <fb_scope_table_insert@@Base+0x490>
   29128:	ldr	r3, [sp, #4]
   2912c:	mov	r7, #0
   29130:	str	r3, [r5]
   29134:	b	28f2c <fb_scope_table_insert@@Base+0x2b0>
   29138:	mov	r5, r3
   2913c:	mov	r4, ip
   29140:	b	28dfc <fb_scope_table_insert@@Base+0x180>
   29144:	movw	r3, #26760	; 0x6888
   29148:	movt	r3, #5
   2914c:	movw	r1, #26484	; 0x6774
   29150:	movt	r1, #5
   29154:	movw	r0, #26612	; 0x67f4
   29158:	movt	r0, #5
   2915c:	mov	r2, #116	; 0x74
   29160:	bl	14014 <__assert_fail@plt>
   29164:	movw	r3, #26760	; 0x6888
   29168:	movt	r3, #5
   2916c:	movw	r1, #26484	; 0x6774
   29170:	movt	r1, #5
   29174:	movw	r0, #26588	; 0x67dc
   29178:	movt	r0, #5
   2917c:	mov	r2, #115	; 0x73
   29180:	bl	14014 <__assert_fail@plt>
   29184:	movw	r3, #26760	; 0x6888
   29188:	movt	r3, #5
   2918c:	movw	r1, #26484	; 0x6774
   29190:	movt	r1, #5
   29194:	movw	r0, #26564	; 0x67c4
   29198:	movt	r0, #5
   2919c:	mov	r2, #114	; 0x72
   291a0:	bl	14014 <__assert_fail@plt>
   291a4:	movw	r3, #41128	; 0xa0a8
   291a8:	movt	r3, #6
   291ac:	movw	r2, #26636	; 0x680c
   291b0:	movt	r2, #5
   291b4:	ldr	r0, [r3]
   291b8:	movw	r1, #26688	; 0x6840
   291bc:	movt	r1, #5
   291c0:	bl	13f60 <fprintf@plt>
   291c4:	mov	r0, #1
   291c8:	bl	13f48 <exit@plt>

000291cc <fb_scope_table_insert_item@@Base>:
   291cc:	mov	r3, r2
   291d0:	mov	r2, r1
   291d4:	ldr	r1, [r1]
   291d8:	b	286a0 <fb_symbol_table_visit@@Base+0x84>

000291dc <fb_scope_table_find@@Base>:
   291dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   291e0:	strd	r6, [sp, #8]
   291e4:	strd	sl, [sp, #24]
   291e8:	ldr	fp, [r0]
   291ec:	strd	r8, [sp, #16]
   291f0:	str	lr, [sp, #32]
   291f4:	sub	sp, sp, #12
   291f8:	cmp	fp, #0
   291fc:	moveq	r7, fp
   29200:	beq	29410 <fb_scope_table_find@@Base+0x234>
   29204:	ldr	r3, [r0, #12]
   29208:	cmp	r2, #0
   2920c:	sub	r3, r3, #1
   29210:	str	r3, [sp]
   29214:	ble	29430 <fb_scope_table_find@@Base+0x254>
   29218:	mov	r7, r2
   2921c:	mov	lr, r1
   29220:	cmp	r7, #0
   29224:	movw	sl, #11863	; 0x2e57
   29228:	movt	sl, #12137	; 0x2f69
   2922c:	movw	r8, #15186	; 0x3b52
   29230:	movt	r8, #12137	; 0x2f69
   29234:	movw	r6, #31153	; 0x79b1
   29238:	movt	r6, #40503	; 0x9e37
   2923c:	mov	r4, #0
   29240:	ldrb	r5, [lr]
   29244:	beq	292e8 <fb_scope_table_find@@Base+0x10c>
   29248:	cmp	r5, #46	; 0x2e
   2924c:	beq	2957c <fb_scope_table_find@@Base+0x3a0>
   29250:	mov	r3, lr
   29254:	mov	ip, #0
   29258:	b	2926c <fb_scope_table_find@@Base+0x90>
   2925c:	ldrb	r9, [r3, #1]!
   29260:	cmp	r9, #46	; 0x2e
   29264:	beq	29530 <fb_scope_table_find@@Base+0x354>
   29268:	mov	ip, r0
   2926c:	add	r0, ip, #1
   29270:	cmp	r0, r7
   29274:	bne	2925c <fb_scope_table_find@@Base+0x80>
   29278:	cmp	ip, #0
   2927c:	beq	292fc <fb_scope_table_find@@Base+0x120>
   29280:	cmp	r5, #0
   29284:	mov	r0, r7
   29288:	add	r9, lr, #1
   2928c:	beq	292fc <fb_scope_table_find@@Base+0x120>
   29290:	add	ip, lr, ip
   29294:	mov	r3, sl
   29298:	b	292a8 <fb_scope_table_find@@Base+0xcc>
   2929c:	ldrb	r5, [r9], #1
   292a0:	cmp	r5, #0
   292a4:	beq	292b8 <fb_scope_table_find@@Base+0xdc>
   292a8:	add	r3, r3, r3, lsl #5
   292ac:	cmp	r9, ip
   292b0:	eor	r3, r3, r5
   292b4:	bne	2929c <fb_scope_table_find@@Base+0xc0>
   292b8:	eor	r3, r3, r4
   292bc:	cmp	r7, r0
   292c0:	eor	r3, r3, r8
   292c4:	mul	r4, r6, r3
   292c8:	beq	29310 <fb_scope_table_find@@Base+0x134>
   292cc:	mvn	r3, r0
   292d0:	add	r0, r0, #1
   292d4:	add	r7, r7, r3
   292d8:	add	lr, lr, r0
   292dc:	cmp	r7, #0
   292e0:	ldrb	r5, [lr]
   292e4:	bne	29248 <fb_scope_table_find@@Base+0x6c>
   292e8:	cmp	r5, #0
   292ec:	mov	r0, r7
   292f0:	mvn	ip, #0
   292f4:	add	r9, lr, #1
   292f8:	bne	29290 <fb_scope_table_find@@Base+0xb4>
   292fc:	eor	r4, r4, #5376	; 0x1500
   29300:	movw	r3, #31153	; 0x79b1
   29304:	movt	r3, #40503	; 0x9e37
   29308:	eor	r4, r4, #5
   2930c:	mul	r4, r3, r4
   29310:	ldr	r3, [sp]
   29314:	and	r3, r3, r4
   29318:	add	r3, fp, r3, lsl #2
   2931c:	ldr	r7, [r3]
   29320:	cmp	r7, #0
   29324:	beq	29410 <fb_scope_table_find@@Base+0x234>
   29328:	mov	r6, r2
   2932c:	mov	r8, r1
   29330:	str	fp, [sp, #4]
   29334:	add	r4, r4, #1
   29338:	cmp	r7, #2
   2933c:	beq	293f4 <fb_scope_table_find@@Base+0x218>
   29340:	cmp	r6, #0
   29344:	ldr	r5, [r7]
   29348:	ble	294cc <fb_scope_table_find@@Base+0x2f0>
   2934c:	cmp	r5, #0
   29350:	beq	293f4 <fb_scope_table_find@@Base+0x218>
   29354:	ldr	r2, [r5, #4]
   29358:	ldm	r2, {r1, r3}
   2935c:	cmp	r6, r3
   29360:	bcc	293f4 <fb_scope_table_find@@Base+0x218>
   29364:	mov	r2, r8
   29368:	mov	ip, r6
   2936c:	cmp	r3, #0
   29370:	beq	29574 <fb_scope_table_find@@Base+0x398>
   29374:	ldrb	lr, [r2]
   29378:	ldrb	r0, [r1]
   2937c:	cmp	lr, r0
   29380:	bne	293f4 <fb_scope_table_find@@Base+0x218>
   29384:	sub	r0, r3, #1
   29388:	mov	lr, r2
   2938c:	add	r0, r0, r2
   29390:	rsb	sl, r2, #1
   29394:	b	293a8 <fb_scope_table_find@@Base+0x1cc>
   29398:	ldrb	fp, [r1, #1]!
   2939c:	ldrb	r9, [lr, #1]!
   293a0:	cmp	fp, r9
   293a4:	bne	293f4 <fb_scope_table_find@@Base+0x218>
   293a8:	cmp	r0, lr
   293ac:	add	r9, sl, lr
   293b0:	bne	29398 <fb_scope_table_find@@Base+0x1bc>
   293b4:	cmp	r3, ip
   293b8:	beq	29554 <fb_scope_table_find@@Base+0x378>
   293bc:	ldrb	r1, [r2, r9]
   293c0:	cmp	r1, #46	; 0x2e
   293c4:	bne	293f4 <fb_scope_table_find@@Base+0x218>
   293c8:	ldr	r5, [r5]
   293cc:	mvn	r1, r3
   293d0:	add	r3, r3, #1
   293d4:	add	ip, ip, r1
   293d8:	add	r2, r2, r3
   293dc:	cmp	r5, #0
   293e0:	beq	293f4 <fb_scope_table_find@@Base+0x218>
   293e4:	ldr	r1, [r5, #4]
   293e8:	ldm	r1, {r1, r3}
   293ec:	cmp	r3, ip
   293f0:	bls	2936c <fb_scope_table_find@@Base+0x190>
   293f4:	ldr	r3, [sp]
   293f8:	ldr	r2, [sp, #4]
   293fc:	and	r3, r3, r4
   29400:	add	r4, r4, #1
   29404:	ldr	r7, [r2, r3, lsl #2]
   29408:	cmp	r7, #0
   2940c:	bne	29338 <fb_scope_table_find@@Base+0x15c>
   29410:	mov	r0, r7
   29414:	add	sp, sp, #12
   29418:	ldrd	r4, [sp]
   2941c:	ldrd	r6, [sp, #8]
   29420:	ldrd	r8, [sp, #16]
   29424:	ldrd	sl, [sp, #24]
   29428:	add	sp, sp, #32
   2942c:	pop	{pc}		; (ldr pc, [sp], #4)
   29430:	cmp	r1, #0
   29434:	beq	2958c <fb_scope_table_find@@Base+0x3b0>
   29438:	movw	r5, #11863	; 0x2e57
   2943c:	movt	r5, #12137	; 0x2f69
   29440:	movw	r7, #15186	; 0x3b52
   29444:	movt	r7, #12137	; 0x2f69
   29448:	movw	r6, #31153	; 0x79b1
   2944c:	movt	r6, #40503	; 0x9e37
   29450:	mov	lr, r2
   29454:	mov	ip, r1
   29458:	mov	r4, #0
   2945c:	ldr	r0, [ip, #4]
   29460:	ldr	r8, [r0]
   29464:	ldr	r3, [r0, #4]
   29468:	subs	r3, r3, #1
   2946c:	beq	2956c <fb_scope_table_find@@Base+0x390>
   29470:	mov	r0, r8
   29474:	ldrb	r9, [r0], #1
   29478:	cmp	r9, #0
   2947c:	beq	2956c <fb_scope_table_find@@Base+0x390>
   29480:	add	r8, r8, r3
   29484:	mov	r3, r5
   29488:	b	29498 <fb_scope_table_find@@Base+0x2bc>
   2948c:	ldrb	r9, [r0], #1
   29490:	cmp	r9, #0
   29494:	beq	294a8 <fb_scope_table_find@@Base+0x2cc>
   29498:	add	r3, r3, r3, lsl #5
   2949c:	cmp	r0, r8
   294a0:	eor	r3, r3, r9
   294a4:	bne	2948c <fb_scope_table_find@@Base+0x2b0>
   294a8:	eor	r3, r3, r4
   294ac:	adds	lr, lr, #1
   294b0:	ldr	ip, [ip]
   294b4:	eor	r3, r3, r7
   294b8:	mul	r4, r6, r3
   294bc:	beq	29310 <fb_scope_table_find@@Base+0x134>
   294c0:	cmp	ip, #0
   294c4:	bne	2945c <fb_scope_table_find@@Base+0x280>
   294c8:	b	29310 <fb_scope_table_find@@Base+0x134>
   294cc:	mov	r9, r8
   294d0:	mov	sl, r6
   294d4:	b	29518 <fb_scope_table_find@@Base+0x33c>
   294d8:	ldr	r3, [r5, #4]
   294dc:	ldr	r1, [r9, #4]
   294e0:	ldr	r0, [r3, #4]
   294e4:	ldr	ip, [r1, #4]
   294e8:	mov	r2, r0
   294ec:	cmp	r0, ip
   294f0:	bne	293f4 <fb_scope_table_find@@Base+0x218>
   294f4:	ldr	r1, [r1]
   294f8:	ldr	r0, [r3]
   294fc:	bl	13ffc <strncmp@plt>
   29500:	cmp	r0, #0
   29504:	bne	293f4 <fb_scope_table_find@@Base+0x218>
   29508:	adds	sl, sl, #1
   2950c:	ldr	r5, [r5]
   29510:	ldr	r9, [r9]
   29514:	beq	29558 <fb_scope_table_find@@Base+0x37c>
   29518:	cmp	r5, #0
   2951c:	cmpne	r9, #0
   29520:	bne	294d8 <fb_scope_table_find@@Base+0x2fc>
   29524:	orrs	r3, r5, r9
   29528:	bne	293f4 <fb_scope_table_find@@Base+0x218>
   2952c:	b	29410 <fb_scope_table_find@@Base+0x234>
   29530:	cmp	ip, #0
   29534:	beq	29544 <fb_scope_table_find@@Base+0x368>
   29538:	cmp	r5, #0
   2953c:	add	r9, lr, #1
   29540:	bne	29290 <fb_scope_table_find@@Base+0xb4>
   29544:	eor	r3, r4, #5376	; 0x1500
   29548:	eor	r3, r3, #5
   2954c:	mul	r4, r6, r3
   29550:	b	292cc <fb_scope_table_find@@Base+0xf0>
   29554:	ldr	r5, [r5]
   29558:	clz	r5, r5
   2955c:	lsr	r5, r5, #5
   29560:	cmp	r5, #0
   29564:	beq	293f4 <fb_scope_table_find@@Base+0x218>
   29568:	b	29410 <fb_scope_table_find@@Base+0x234>
   2956c:	mov	r3, r5
   29570:	b	294a8 <fb_scope_table_find@@Base+0x2cc>
   29574:	mov	r9, r3
   29578:	b	293b4 <fb_scope_table_find@@Base+0x1d8>
   2957c:	add	r9, lr, #1
   29580:	mov	r0, #0
   29584:	mvn	ip, #0
   29588:	b	29290 <fb_scope_table_find@@Base+0xb4>
   2958c:	mov	r3, fp
   29590:	mov	r4, r1
   29594:	b	2931c <fb_scope_table_find@@Base+0x140>

00029598 <fb_scope_table_find_item@@Base>:
   29598:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2959c:	strd	r6, [sp, #8]
   295a0:	strd	r8, [sp, #16]
   295a4:	ldr	r8, [r0]
   295a8:	str	sl, [sp, #24]
   295ac:	str	lr, [sp, #28]
   295b0:	ldr	r6, [r1]
   295b4:	cmp	r8, #0
   295b8:	moveq	r9, r8
   295bc:	beq	29708 <fb_scope_table_find_item@@Base+0x170>
   295c0:	ldr	r7, [r0, #12]
   295c4:	cmp	r6, #0
   295c8:	sub	r7, r7, #1
   295cc:	beq	29738 <fb_scope_table_find_item@@Base+0x1a0>
   295d0:	movw	ip, #11863	; 0x2e57
   295d4:	movt	ip, #12137	; 0x2f69
   295d8:	movw	r5, #15186	; 0x3b52
   295dc:	movt	r5, #12137	; 0x2f69
   295e0:	movw	lr, #31153	; 0x79b1
   295e4:	movt	lr, #40503	; 0x9e37
   295e8:	mov	r0, r6
   295ec:	mov	r4, #0
   295f0:	ldr	r2, [r0, #4]
   295f4:	ldm	r2, {r1, r3}
   295f8:	subs	r3, r3, #1
   295fc:	beq	29724 <fb_scope_table_find_item@@Base+0x18c>
   29600:	mov	r2, r1
   29604:	ldrb	r9, [r2], #1
   29608:	cmp	r9, #0
   2960c:	beq	29724 <fb_scope_table_find_item@@Base+0x18c>
   29610:	add	r1, r1, r3
   29614:	mov	r3, ip
   29618:	b	29628 <fb_scope_table_find_item@@Base+0x90>
   2961c:	ldrb	r9, [r2], #1
   29620:	cmp	r9, #0
   29624:	beq	29638 <fb_scope_table_find_item@@Base+0xa0>
   29628:	add	r3, r3, r3, lsl #5
   2962c:	cmp	r2, r1
   29630:	eor	r3, r3, r9
   29634:	bne	2961c <fb_scope_table_find_item@@Base+0x84>
   29638:	ldr	r0, [r0]
   2963c:	eor	r3, r3, r4
   29640:	eor	r3, r3, r5
   29644:	mul	r4, lr, r3
   29648:	cmp	r0, #0
   2964c:	bne	295f0 <fb_scope_table_find_item@@Base+0x58>
   29650:	and	r3, r7, r4
   29654:	add	r3, r8, r3, lsl #2
   29658:	ldr	r9, [r3]
   2965c:	cmp	r9, #0
   29660:	beq	29708 <fb_scope_table_find_item@@Base+0x170>
   29664:	add	r4, r4, #1
   29668:	cmp	r9, #2
   2966c:	beq	296f4 <fb_scope_table_find_item@@Base+0x15c>
   29670:	ldr	r5, [r9]
   29674:	adds	r2, r6, #0
   29678:	movne	r2, #1
   2967c:	adds	r3, r5, #0
   29680:	movne	r3, #1
   29684:	tst	r3, r2
   29688:	beq	2972c <fb_scope_table_find_item@@Base+0x194>
   2968c:	ldr	r0, [r5, #4]
   29690:	ldr	r3, [r6, #4]
   29694:	ldr	r2, [r0, #4]
   29698:	ldr	r1, [r3, #4]
   2969c:	cmp	r2, r1
   296a0:	bne	296f4 <fb_scope_table_find_item@@Base+0x15c>
   296a4:	mov	sl, r6
   296a8:	ldr	r0, [r0]
   296ac:	ldr	r1, [r3]
   296b0:	bl	13ffc <strncmp@plt>
   296b4:	cmp	r0, #0
   296b8:	bne	296f4 <fb_scope_table_find_item@@Base+0x15c>
   296bc:	ldr	r5, [r5]
   296c0:	ldr	sl, [sl]
   296c4:	adds	r3, r5, #0
   296c8:	movne	r3, #1
   296cc:	adds	r2, sl, #0
   296d0:	movne	r2, #1
   296d4:	tst	r3, r2
   296d8:	beq	2972c <fb_scope_table_find_item@@Base+0x194>
   296dc:	ldr	r0, [r5, #4]
   296e0:	ldr	r3, [sl, #4]
   296e4:	ldr	r2, [r0, #4]
   296e8:	ldr	r1, [r3, #4]
   296ec:	cmp	r2, r1
   296f0:	beq	296a8 <fb_scope_table_find_item@@Base+0x110>
   296f4:	and	r3, r7, r4
   296f8:	add	r4, r4, #1
   296fc:	ldr	r9, [r8, r3, lsl #2]
   29700:	cmp	r9, #0
   29704:	bne	29668 <fb_scope_table_find_item@@Base+0xd0>
   29708:	mov	r0, r9
   2970c:	ldrd	r4, [sp]
   29710:	ldrd	r6, [sp, #8]
   29714:	ldrd	r8, [sp, #16]
   29718:	ldr	sl, [sp, #24]
   2971c:	add	sp, sp, #28
   29720:	pop	{pc}		; (ldr pc, [sp], #4)
   29724:	mov	r3, ip
   29728:	b	29638 <fb_scope_table_find_item@@Base+0xa0>
   2972c:	orrs	r3, r2, r3
   29730:	beq	29708 <fb_scope_table_find_item@@Base+0x170>
   29734:	b	296f4 <fb_scope_table_find_item@@Base+0x15c>
   29738:	mov	r3, r8
   2973c:	mov	r4, r6
   29740:	b	29658 <fb_scope_table_find_item@@Base+0xc0>

00029744 <fb_scope_table_remove@@Base>:
   29744:	strd	r4, [sp, #-36]!	; 0xffffffdc
   29748:	strd	r6, [sp, #8]
   2974c:	strd	sl, [sp, #24]
   29750:	ldr	fp, [r0]
   29754:	strd	r8, [sp, #16]
   29758:	str	lr, [sp, #32]
   2975c:	sub	sp, sp, #20
   29760:	str	r1, [sp]
   29764:	cmp	fp, #0
   29768:	moveq	r8, fp
   2976c:	beq	29980 <fb_scope_table_remove@@Base+0x23c>
   29770:	ldr	r3, [r0, #12]
   29774:	cmp	r2, #0
   29778:	sub	r3, r3, #1
   2977c:	str	r3, [sp, #4]
   29780:	ble	299a0 <fb_scope_table_remove@@Base+0x25c>
   29784:	mov	r6, r2
   29788:	mov	lr, r1
   2978c:	cmp	r6, #0
   29790:	movw	sl, #11863	; 0x2e57
   29794:	movt	sl, #12137	; 0x2f69
   29798:	movw	r9, #15186	; 0x3b52
   2979c:	movt	r9, #12137	; 0x2f69
   297a0:	movw	r7, #31153	; 0x79b1
   297a4:	movt	r7, #40503	; 0x9e37
   297a8:	mov	r4, #0
   297ac:	ldrb	r5, [lr]
   297b0:	beq	29854 <fb_scope_table_remove@@Base+0x110>
   297b4:	cmp	r5, #46	; 0x2e
   297b8:	beq	29b08 <fb_scope_table_remove@@Base+0x3c4>
   297bc:	mov	r3, lr
   297c0:	mov	ip, #0
   297c4:	b	297d8 <fb_scope_table_remove@@Base+0x94>
   297c8:	ldrb	r8, [r3, #1]!
   297cc:	cmp	r8, #46	; 0x2e
   297d0:	beq	29ab8 <fb_scope_table_remove@@Base+0x374>
   297d4:	mov	ip, r1
   297d8:	add	r1, ip, #1
   297dc:	cmp	r1, r6
   297e0:	bne	297c8 <fb_scope_table_remove@@Base+0x84>
   297e4:	cmp	ip, #0
   297e8:	beq	29868 <fb_scope_table_remove@@Base+0x124>
   297ec:	cmp	r5, #0
   297f0:	mov	r1, r6
   297f4:	add	r8, lr, #1
   297f8:	beq	29868 <fb_scope_table_remove@@Base+0x124>
   297fc:	add	ip, lr, ip
   29800:	mov	r3, sl
   29804:	b	29814 <fb_scope_table_remove@@Base+0xd0>
   29808:	ldrb	r5, [r8], #1
   2980c:	cmp	r5, #0
   29810:	beq	29824 <fb_scope_table_remove@@Base+0xe0>
   29814:	add	r3, r3, r3, lsl #5
   29818:	cmp	r8, ip
   2981c:	eor	r3, r3, r5
   29820:	bne	29808 <fb_scope_table_remove@@Base+0xc4>
   29824:	eor	r3, r3, r4
   29828:	cmp	r6, r1
   2982c:	eor	r3, r3, r9
   29830:	mul	r4, r7, r3
   29834:	beq	2987c <fb_scope_table_remove@@Base+0x138>
   29838:	mvn	r3, r1
   2983c:	add	r1, r1, #1
   29840:	add	r6, r6, r3
   29844:	add	lr, lr, r1
   29848:	cmp	r6, #0
   2984c:	ldrb	r5, [lr]
   29850:	bne	297b4 <fb_scope_table_remove@@Base+0x70>
   29854:	cmp	r5, #0
   29858:	mov	r1, r6
   2985c:	mvn	ip, #0
   29860:	add	r8, lr, #1
   29864:	bne	297fc <fb_scope_table_remove@@Base+0xb8>
   29868:	eor	r4, r4, #5376	; 0x1500
   2986c:	movw	r3, #31153	; 0x79b1
   29870:	movt	r3, #40503	; 0x9e37
   29874:	eor	r4, r4, #5
   29878:	mul	r4, r3, r4
   2987c:	ldr	r3, [sp, #4]
   29880:	and	r6, r3, r4
   29884:	add	r6, fp, r6, lsl #2
   29888:	ldr	r8, [r6]
   2988c:	cmp	r8, #0
   29890:	beq	29980 <fb_scope_table_remove@@Base+0x23c>
   29894:	mov	r7, r2
   29898:	add	r4, r4, #1
   2989c:	str	r0, [sp, #8]
   298a0:	mov	sl, r6
   298a4:	cmp	r8, #2
   298a8:	beq	29964 <fb_scope_table_remove@@Base+0x220>
   298ac:	cmp	r7, #0
   298b0:	ldr	r5, [r8]
   298b4:	ble	29a3c <fb_scope_table_remove@@Base+0x2f8>
   298b8:	cmp	r5, #0
   298bc:	beq	29964 <fb_scope_table_remove@@Base+0x220>
   298c0:	ldr	r2, [r5, #4]
   298c4:	ldm	r2, {r1, r3}
   298c8:	cmp	r7, r3
   298cc:	bcc	29964 <fb_scope_table_remove@@Base+0x220>
   298d0:	ldr	r2, [sp]
   298d4:	mov	ip, r7
   298d8:	str	sl, [sp, #12]
   298dc:	cmp	r3, #0
   298e0:	beq	29b00 <fb_scope_table_remove@@Base+0x3bc>
   298e4:	ldrb	lr, [r2]
   298e8:	ldrb	r0, [r1]
   298ec:	cmp	lr, r0
   298f0:	bne	29964 <fb_scope_table_remove@@Base+0x220>
   298f4:	sub	r0, r3, #1
   298f8:	mov	lr, r2
   298fc:	add	r0, r0, r2
   29900:	rsb	r6, r2, #1
   29904:	b	29918 <fb_scope_table_remove@@Base+0x1d4>
   29908:	ldrb	sl, [r1, #1]!
   2990c:	ldrb	r9, [lr, #1]!
   29910:	cmp	sl, r9
   29914:	bne	29964 <fb_scope_table_remove@@Base+0x220>
   29918:	cmp	r0, lr
   2991c:	add	r9, r6, lr
   29920:	bne	29908 <fb_scope_table_remove@@Base+0x1c4>
   29924:	cmp	r3, ip
   29928:	beq	29adc <fb_scope_table_remove@@Base+0x398>
   2992c:	ldrb	r1, [r2, r9]
   29930:	cmp	r1, #46	; 0x2e
   29934:	bne	29964 <fb_scope_table_remove@@Base+0x220>
   29938:	ldr	r5, [r5]
   2993c:	mvn	r1, r3
   29940:	add	r3, r3, #1
   29944:	add	ip, ip, r1
   29948:	add	r2, r2, r3
   2994c:	cmp	r5, #0
   29950:	beq	29964 <fb_scope_table_remove@@Base+0x220>
   29954:	ldr	r1, [r5, #4]
   29958:	ldm	r1, {r1, r3}
   2995c:	cmp	r3, ip
   29960:	bls	298dc <fb_scope_table_remove@@Base+0x198>
   29964:	ldr	r3, [sp, #4]
   29968:	and	r3, r3, r4
   2996c:	add	r4, r4, #1
   29970:	ldr	r8, [fp, r3, lsl #2]
   29974:	add	sl, fp, r3, lsl #2
   29978:	cmp	r8, #0
   2997c:	bne	298a4 <fb_scope_table_remove@@Base+0x160>
   29980:	mov	r0, r8
   29984:	add	sp, sp, #20
   29988:	ldrd	r4, [sp]
   2998c:	ldrd	r6, [sp, #8]
   29990:	ldrd	r8, [sp, #16]
   29994:	ldrd	sl, [sp, #24]
   29998:	add	sp, sp, #32
   2999c:	pop	{pc}		; (ldr pc, [sp], #4)
   299a0:	cmp	r1, #0
   299a4:	beq	29b18 <fb_scope_table_remove@@Base+0x3d4>
   299a8:	movw	r7, #11863	; 0x2e57
   299ac:	movt	r7, #12137	; 0x2f69
   299b0:	movw	r9, #15186	; 0x3b52
   299b4:	movt	r9, #12137	; 0x2f69
   299b8:	movw	r8, #31153	; 0x79b1
   299bc:	movt	r8, #40503	; 0x9e37
   299c0:	mov	r6, r2
   299c4:	mov	r5, r1
   299c8:	mov	r4, #0
   299cc:	ldr	r1, [r5, #4]
   299d0:	ldr	ip, [r1]
   299d4:	ldr	r3, [r1, #4]
   299d8:	subs	r3, r3, #1
   299dc:	beq	29af8 <fb_scope_table_remove@@Base+0x3b4>
   299e0:	mov	r1, ip
   299e4:	ldrb	lr, [r1], #1
   299e8:	cmp	lr, #0
   299ec:	beq	29af8 <fb_scope_table_remove@@Base+0x3b4>
   299f0:	add	ip, ip, r3
   299f4:	mov	r3, r7
   299f8:	b	29a08 <fb_scope_table_remove@@Base+0x2c4>
   299fc:	ldrb	lr, [r1], #1
   29a00:	cmp	lr, #0
   29a04:	beq	29a18 <fb_scope_table_remove@@Base+0x2d4>
   29a08:	add	r3, r3, r3, lsl #5
   29a0c:	cmp	r1, ip
   29a10:	eor	r3, r3, lr
   29a14:	bne	299fc <fb_scope_table_remove@@Base+0x2b8>
   29a18:	eor	r3, r3, r4
   29a1c:	adds	r6, r6, #1
   29a20:	ldr	r5, [r5]
   29a24:	eor	r3, r3, r9
   29a28:	mul	r4, r8, r3
   29a2c:	beq	2987c <fb_scope_table_remove@@Base+0x138>
   29a30:	cmp	r5, #0
   29a34:	bne	299cc <fb_scope_table_remove@@Base+0x288>
   29a38:	b	2987c <fb_scope_table_remove@@Base+0x138>
   29a3c:	mov	r9, r7
   29a40:	ldr	r6, [sp]
   29a44:	b	29a88 <fb_scope_table_remove@@Base+0x344>
   29a48:	ldr	r3, [r5, #4]
   29a4c:	ldr	r1, [r6, #4]
   29a50:	ldr	r0, [r3, #4]
   29a54:	ldr	ip, [r1, #4]
   29a58:	mov	r2, r0
   29a5c:	cmp	r0, ip
   29a60:	bne	29964 <fb_scope_table_remove@@Base+0x220>
   29a64:	ldr	r1, [r1]
   29a68:	ldr	r0, [r3]
   29a6c:	bl	13ffc <strncmp@plt>
   29a70:	cmp	r0, #0
   29a74:	bne	29964 <fb_scope_table_remove@@Base+0x220>
   29a78:	adds	r9, r9, #1
   29a7c:	ldr	r5, [r5]
   29a80:	ldr	r6, [r6]
   29a84:	beq	29ae4 <fb_scope_table_remove@@Base+0x3a0>
   29a88:	cmp	r5, #0
   29a8c:	cmpne	r6, #0
   29a90:	bne	29a48 <fb_scope_table_remove@@Base+0x304>
   29a94:	orrs	r3, r5, r6
   29a98:	bne	29964 <fb_scope_table_remove@@Base+0x220>
   29a9c:	ldr	r1, [sp, #8]
   29aa0:	mov	r2, #2
   29aa4:	ldr	r3, [r1, #8]
   29aa8:	str	r2, [sl]
   29aac:	sub	r3, r3, #1
   29ab0:	str	r3, [r1, #8]
   29ab4:	b	29980 <fb_scope_table_remove@@Base+0x23c>
   29ab8:	cmp	ip, #0
   29abc:	beq	29acc <fb_scope_table_remove@@Base+0x388>
   29ac0:	cmp	r5, #0
   29ac4:	add	r8, lr, #1
   29ac8:	bne	297fc <fb_scope_table_remove@@Base+0xb8>
   29acc:	eor	r3, r4, #5376	; 0x1500
   29ad0:	eor	r3, r3, #5
   29ad4:	mul	r4, r7, r3
   29ad8:	b	29838 <fb_scope_table_remove@@Base+0xf4>
   29adc:	ldr	r5, [r5]
   29ae0:	ldr	sl, [sp, #12]
   29ae4:	clz	r5, r5
   29ae8:	lsr	r5, r5, #5
   29aec:	cmp	r5, #0
   29af0:	beq	29964 <fb_scope_table_remove@@Base+0x220>
   29af4:	b	29a9c <fb_scope_table_remove@@Base+0x358>
   29af8:	mov	r3, r7
   29afc:	b	29a18 <fb_scope_table_remove@@Base+0x2d4>
   29b00:	mov	r9, r3
   29b04:	b	29924 <fb_scope_table_remove@@Base+0x1e0>
   29b08:	add	r8, lr, #1
   29b0c:	mov	r1, #0
   29b10:	mvn	ip, #0
   29b14:	b	297fc <fb_scope_table_remove@@Base+0xb8>
   29b18:	mov	r4, r1
   29b1c:	mov	r6, fp
   29b20:	b	29888 <fb_scope_table_remove@@Base+0x144>

00029b24 <fb_scope_table_remove_item@@Base>:
   29b24:	strd	r4, [sp, #-36]!	; 0xffffffdc
   29b28:	ldr	r5, [r0]
   29b2c:	ldr	r4, [r1]
   29b30:	strd	r6, [sp, #8]
   29b34:	strd	r8, [sp, #16]
   29b38:	cmp	r5, #0
   29b3c:	strd	sl, [sp, #24]
   29b40:	moveq	fp, r5
   29b44:	str	lr, [sp, #32]
   29b48:	sub	sp, sp, #12
   29b4c:	beq	29ca0 <fb_scope_table_remove_item@@Base+0x17c>
   29b50:	ldr	r6, [r0, #12]
   29b54:	cmp	r4, #0
   29b58:	sub	r6, r6, #1
   29b5c:	beq	29cec <fb_scope_table_remove_item@@Base+0x1c8>
   29b60:	movw	ip, #11863	; 0x2e57
   29b64:	movt	ip, #12137	; 0x2f69
   29b68:	movw	r7, #15186	; 0x3b52
   29b6c:	movt	r7, #12137	; 0x2f69
   29b70:	movw	lr, #31153	; 0x79b1
   29b74:	movt	lr, #40503	; 0x9e37
   29b78:	mov	r1, r4
   29b7c:	mov	r8, #0
   29b80:	ldr	r3, [r1, #4]
   29b84:	ldm	r3, {r3, sl}
   29b88:	subs	sl, sl, #1
   29b8c:	beq	29cc0 <fb_scope_table_remove_item@@Base+0x19c>
   29b90:	mov	r2, r3
   29b94:	ldrb	r9, [r2], #1
   29b98:	cmp	r9, #0
   29b9c:	beq	29cc0 <fb_scope_table_remove_item@@Base+0x19c>
   29ba0:	add	sl, r3, sl
   29ba4:	mov	r3, ip
   29ba8:	b	29bb8 <fb_scope_table_remove_item@@Base+0x94>
   29bac:	ldrb	r9, [r2], #1
   29bb0:	cmp	r9, #0
   29bb4:	beq	29bc8 <fb_scope_table_remove_item@@Base+0xa4>
   29bb8:	add	r3, r3, r3, lsl #5
   29bbc:	cmp	r2, sl
   29bc0:	eor	r3, r3, r9
   29bc4:	bne	29bac <fb_scope_table_remove_item@@Base+0x88>
   29bc8:	ldr	r1, [r1]
   29bcc:	eor	r3, r3, r8
   29bd0:	eor	r3, r3, r7
   29bd4:	mul	r8, lr, r3
   29bd8:	cmp	r1, #0
   29bdc:	bne	29b80 <fb_scope_table_remove_item@@Base+0x5c>
   29be0:	and	r2, r6, r8
   29be4:	add	r7, r5, r2, lsl #2
   29be8:	ldr	fp, [r7]
   29bec:	cmp	fp, #0
   29bf0:	beq	29ca0 <fb_scope_table_remove_item@@Base+0x17c>
   29bf4:	add	r8, r8, #1
   29bf8:	str	r0, [sp, #4]
   29bfc:	cmp	fp, #2
   29c00:	beq	29c88 <fb_scope_table_remove_item@@Base+0x164>
   29c04:	ldr	sl, [fp]
   29c08:	adds	r1, r4, #0
   29c0c:	movne	r1, #1
   29c10:	adds	r2, sl, #0
   29c14:	movne	r2, #1
   29c18:	tst	r2, r1
   29c1c:	beq	29cc8 <fb_scope_table_remove_item@@Base+0x1a4>
   29c20:	ldr	r1, [r4, #4]
   29c24:	ldr	r0, [sl, #4]
   29c28:	ldr	r3, [r1, #4]
   29c2c:	ldr	r2, [r0, #4]
   29c30:	cmp	r2, r3
   29c34:	bne	29c88 <fb_scope_table_remove_item@@Base+0x164>
   29c38:	mov	r9, r4
   29c3c:	ldr	r0, [r0]
   29c40:	ldr	r1, [r1]
   29c44:	bl	13ffc <strncmp@plt>
   29c48:	cmp	r0, #0
   29c4c:	bne	29c88 <fb_scope_table_remove_item@@Base+0x164>
   29c50:	ldr	sl, [sl]
   29c54:	ldr	r9, [r9]
   29c58:	adds	r2, sl, #0
   29c5c:	movne	r2, #1
   29c60:	adds	r1, r9, #0
   29c64:	movne	r1, #1
   29c68:	tst	r2, r1
   29c6c:	beq	29cc8 <fb_scope_table_remove_item@@Base+0x1a4>
   29c70:	ldr	r1, [r9, #4]
   29c74:	ldr	r0, [sl, #4]
   29c78:	ldr	ip, [r1, #4]
   29c7c:	ldr	r2, [r0, #4]
   29c80:	cmp	r2, ip
   29c84:	beq	29c3c <fb_scope_table_remove_item@@Base+0x118>
   29c88:	and	r2, r6, r8
   29c8c:	add	r8, r8, #1
   29c90:	ldr	fp, [r5, r2, lsl #2]
   29c94:	add	r7, r5, r2, lsl #2
   29c98:	cmp	fp, #0
   29c9c:	bne	29bfc <fb_scope_table_remove_item@@Base+0xd8>
   29ca0:	mov	r0, fp
   29ca4:	add	sp, sp, #12
   29ca8:	ldrd	r4, [sp]
   29cac:	ldrd	r6, [sp, #8]
   29cb0:	ldrd	r8, [sp, #16]
   29cb4:	ldrd	sl, [sp, #24]
   29cb8:	add	sp, sp, #32
   29cbc:	pop	{pc}		; (ldr pc, [sp], #4)
   29cc0:	mov	r3, ip
   29cc4:	b	29bc8 <fb_scope_table_remove_item@@Base+0xa4>
   29cc8:	orrs	r3, r1, r2
   29ccc:	bne	29c88 <fb_scope_table_remove_item@@Base+0x164>
   29cd0:	ldr	r1, [sp, #4]
   29cd4:	mov	r2, #2
   29cd8:	ldr	r3, [r1, #8]
   29cdc:	str	r2, [r7]
   29ce0:	sub	r3, r3, #1
   29ce4:	str	r3, [r1, #8]
   29ce8:	b	29ca0 <fb_scope_table_remove_item@@Base+0x17c>
   29cec:	mov	r7, r5
   29cf0:	mov	r8, r4
   29cf4:	b	29be8 <fb_scope_table_remove_item@@Base+0xc4>

00029cf8 <fb_scope_table_visit@@Base>:
   29cf8:	ldr	ip, [r0, #12]
   29cfc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   29d00:	ldr	r5, [r0]
   29d04:	strd	r6, [sp, #8]
   29d08:	str	r8, [sp, #16]
   29d0c:	cmp	ip, #0
   29d10:	str	lr, [sp, #20]
   29d14:	beq	29d58 <fb_scope_table_visit@@Base+0x60>
   29d18:	mov	r6, r2
   29d1c:	mov	r8, r1
   29d20:	mov	r7, r0
   29d24:	sub	r5, r5, #4
   29d28:	mov	r4, #0
   29d2c:	ldr	r3, [r5, #4]!
   29d30:	mov	r0, r6
   29d34:	cmp	r3, #0
   29d38:	cmpne	r3, #2
   29d3c:	mov	r1, r3
   29d40:	beq	29d6c <fb_scope_table_visit@@Base+0x74>
   29d44:	blx	r8
   29d48:	ldr	ip, [r7, #12]
   29d4c:	add	r4, r4, #1
   29d50:	cmp	r4, ip
   29d54:	bcc	29d2c <fb_scope_table_visit@@Base+0x34>
   29d58:	ldrd	r4, [sp]
   29d5c:	ldrd	r6, [sp, #8]
   29d60:	ldr	r8, [sp, #16]
   29d64:	add	sp, sp, #20
   29d68:	pop	{pc}		; (ldr pc, [sp], #4)
   29d6c:	add	r4, r4, #1
   29d70:	cmp	r4, ip
   29d74:	bcc	29d2c <fb_scope_table_visit@@Base+0x34>
   29d78:	b	29d58 <fb_scope_table_visit@@Base+0x60>
   29d7c:	ldr	r3, [r0, #8]
   29d80:	strd	r4, [sp, #-36]!	; 0xffffffdc
   29d84:	strd	r6, [sp, #8]
   29d88:	strd	r8, [sp, #16]
   29d8c:	mov	r8, r0
   29d90:	strd	sl, [sp, #24]
   29d94:	cmp	r1, r3
   29d98:	str	lr, [sp, #32]
   29d9c:	sub	sp, sp, #44	; 0x2c
   29da0:	movcc	r1, r3
   29da4:	ldr	r6, [r0]
   29da8:	cmp	r1, #2
   29dac:	bls	29f44 <fb_scope_table_visit@@Base+0x24c>
   29db0:	mov	r3, #4
   29db4:	movw	r0, #358	; 0x166
   29db8:	mul	r2, r0, r3
   29dbc:	lsl	r4, r3, #1
   29dc0:	cmp	r1, r2, lsr #8
   29dc4:	mov	r3, r4
   29dc8:	bhi	29db8 <fb_scope_table_visit@@Base+0xc0>
   29dcc:	mov	r1, #4
   29dd0:	mov	r0, r4
   29dd4:	bl	13e7c <calloc@plt>
   29dd8:	cmp	r0, #0
   29ddc:	str	r0, [sp, #24]
   29de0:	beq	29f4c <fb_scope_table_visit@@Base+0x254>
   29de4:	ldr	r3, [r8, #12]
   29de8:	mov	r5, #0
   29dec:	str	r5, [sp, #28]
   29df0:	str	r5, [sp, #32]
   29df4:	str	r4, [sp, #36]	; 0x24
   29df8:	cmp	r3, r5
   29dfc:	beq	29ef4 <fb_scope_table_visit@@Base+0x1fc>
   29e00:	movw	r9, #15186	; 0x3b52
   29e04:	movt	r9, #12137	; 0x2f69
   29e08:	sub	r6, r6, #4
   29e0c:	mov	fp, #179	; 0xb3
   29e10:	b	29e20 <fb_scope_table_visit@@Base+0x128>
   29e14:	add	r5, r5, #1
   29e18:	cmp	r5, r3
   29e1c:	bcs	29ef0 <fb_scope_table_visit@@Base+0x1f8>
   29e20:	ldr	r4, [r6, #4]!
   29e24:	cmp	r4, #0
   29e28:	cmpne	r4, #2
   29e2c:	beq	29e14 <fb_scope_table_visit@@Base+0x11c>
   29e30:	cmp	r4, #1
   29e34:	ldr	sl, [r4, #144]	; 0x90
   29e38:	ldr	r2, [r4, #148]	; 0x94
   29e3c:	beq	29f7c <fb_scope_table_visit@@Base+0x284>
   29e40:	ldr	r1, [sp, #32]
   29e44:	ldr	r7, [sp, #36]	; 0x24
   29e48:	mul	r0, fp, r7
   29e4c:	cmp	r1, r0, lsr #8
   29e50:	bcc	29e74 <fb_scope_table_visit@@Base+0x17c>
   29e54:	lsl	r1, r1, #1
   29e58:	add	r0, sp, #24
   29e5c:	str	r2, [sp, #12]
   29e60:	bl	29d7c <fb_scope_table_visit@@Base+0x84>
   29e64:	cmp	r0, #0
   29e68:	bne	29f54 <fb_scope_table_visit@@Base+0x25c>
   29e6c:	ldr	r2, [sp, #12]
   29e70:	ldr	r7, [sp, #36]	; 0x24
   29e74:	add	r1, sp, #16
   29e78:	mov	r0, sl
   29e7c:	str	r9, [sp]
   29e80:	mov	r3, #0
   29e84:	ldr	sl, [sp, #24]
   29e88:	sub	r7, r7, #1
   29e8c:	str	r1, [sp, #4]
   29e90:	bl	3b8d4 <cmetrohash64_1@@Base>
   29e94:	ldr	r3, [sp, #16]
   29e98:	ldr	r0, [sp, #32]
   29e9c:	and	r2, r7, r3
   29ea0:	ldr	ip, [sl, r2, lsl #2]
   29ea4:	add	r2, sl, r2, lsl #2
   29ea8:	add	r0, r0, #1
   29eac:	str	r0, [sp, #32]
   29eb0:	cmp	ip, #0
   29eb4:	cmpne	ip, #2
   29eb8:	beq	29edc <fb_scope_table_visit@@Base+0x1e4>
   29ebc:	add	r3, r3, #1
   29ec0:	and	r2, r7, r3
   29ec4:	add	r3, r3, #1
   29ec8:	ldr	r0, [sl, r2, lsl #2]
   29ecc:	add	r2, sl, r2, lsl #2
   29ed0:	cmp	r0, #0
   29ed4:	cmpne	r0, #2
   29ed8:	bne	29ec0 <fb_scope_table_visit@@Base+0x1c8>
   29edc:	ldr	r3, [r8, #12]
   29ee0:	add	r5, r5, #1
   29ee4:	str	r4, [r2]
   29ee8:	cmp	r5, r3
   29eec:	bcc	29e20 <fb_scope_table_visit@@Base+0x128>
   29ef0:	ldr	r6, [r8]
   29ef4:	cmp	r6, #0
   29ef8:	beq	29f04 <fb_scope_table_visit@@Base+0x20c>
   29efc:	mov	r0, r6
   29f00:	bl	13eac <free@plt>
   29f04:	ldr	r3, [sp, #24]
   29f08:	mov	r0, #0
   29f0c:	ldr	r1, [sp, #28]
   29f10:	ldr	r2, [sp, #32]
   29f14:	str	r3, [r8]
   29f18:	ldr	r3, [sp, #36]	; 0x24
   29f1c:	str	r1, [r8, #4]
   29f20:	str	r2, [r8, #8]
   29f24:	str	r3, [r8, #12]
   29f28:	add	sp, sp, #44	; 0x2c
   29f2c:	ldrd	r4, [sp]
   29f30:	ldrd	r6, [sp, #8]
   29f34:	ldrd	r8, [sp, #16]
   29f38:	ldrd	sl, [sp, #24]
   29f3c:	add	sp, sp, #32
   29f40:	pop	{pc}		; (ldr pc, [sp], #4)
   29f44:	mov	r4, #4
   29f48:	b	29dcc <fb_scope_table_visit@@Base+0xd4>
   29f4c:	mvn	r0, #0
   29f50:	b	29f28 <fb_scope_table_visit@@Base+0x230>
   29f54:	movw	r3, #41128	; 0xa0a8
   29f58:	movt	r3, #6
   29f5c:	movw	r2, #26636	; 0x680c
   29f60:	movt	r2, #5
   29f64:	ldr	r0, [r3]
   29f68:	movw	r1, #26688	; 0x6840
   29f6c:	movt	r1, #5
   29f70:	bl	13f60 <fprintf@plt>
   29f74:	mov	r0, #1
   29f78:	bl	13f48 <exit@plt>
   29f7c:	movw	r3, #26784	; 0x68a0
   29f80:	movt	r3, #5
   29f84:	movw	r1, #26484	; 0x6774
   29f88:	movt	r1, #5
   29f8c:	movw	r0, #26612	; 0x67f4
   29f90:	movt	r0, #5
   29f94:	mov	r2, #116	; 0x74
   29f98:	bl	14014 <__assert_fail@plt>

00029f9c <fb_schema_table_clear@@Base>:
   29f9c:	str	r4, [sp, #-8]!
   29fa0:	mov	r4, r0
   29fa4:	ldr	r0, [r0]
   29fa8:	str	lr, [sp, #4]
   29fac:	cmp	r0, #0
   29fb0:	beq	29fb8 <fb_schema_table_clear@@Base+0x1c>
   29fb4:	bl	13eac <free@plt>
   29fb8:	mov	r3, #0
   29fbc:	str	r3, [r4]
   29fc0:	str	r3, [r4, #4]
   29fc4:	str	r3, [r4, #8]
   29fc8:	str	r3, [r4, #12]
   29fcc:	ldr	r4, [sp]
   29fd0:	add	sp, sp, #4
   29fd4:	pop	{pc}		; (ldr pc, [sp], #4)

00029fd8 <fb_schema_table_destroy@@Base>:
   29fd8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   29fdc:	strd	r6, [sp, #8]
   29fe0:	mov	r6, r0
   29fe4:	str	r8, [sp, #16]
   29fe8:	subs	r8, r1, #0
   29fec:	str	lr, [sp, #20]
   29ff0:	ldr	r0, [r0]
   29ff4:	beq	2a040 <fb_schema_table_destroy@@Base+0x68>
   29ff8:	ldr	ip, [r6, #12]
   29ffc:	cmp	ip, #0
   2a000:	beq	2a040 <fb_schema_table_destroy@@Base+0x68>
   2a004:	mov	r7, r2
   2a008:	sub	r5, r0, #4
   2a00c:	mov	r4, #0
   2a010:	ldr	r3, [r5, #4]!
   2a014:	mov	r0, r7
   2a018:	cmp	r3, #0
   2a01c:	cmpne	r3, #2
   2a020:	mov	r1, r3
   2a024:	beq	2a074 <fb_schema_table_destroy@@Base+0x9c>
   2a028:	blx	r8
   2a02c:	ldr	ip, [r6, #12]
   2a030:	add	r4, r4, #1
   2a034:	cmp	r4, ip
   2a038:	bcc	2a010 <fb_schema_table_destroy@@Base+0x38>
   2a03c:	ldr	r0, [r6]
   2a040:	cmp	r0, #0
   2a044:	beq	2a04c <fb_schema_table_destroy@@Base+0x74>
   2a048:	bl	13eac <free@plt>
   2a04c:	mov	r3, #0
   2a050:	str	r3, [r6]
   2a054:	str	r3, [r6, #4]
   2a058:	str	r3, [r6, #8]
   2a05c:	str	r3, [r6, #12]
   2a060:	ldrd	r4, [sp]
   2a064:	ldrd	r6, [sp, #8]
   2a068:	ldr	r8, [sp, #16]
   2a06c:	add	sp, sp, #20
   2a070:	pop	{pc}		; (ldr pc, [sp], #4)
   2a074:	add	r4, r4, #1
   2a078:	cmp	r4, ip
   2a07c:	bcc	2a010 <fb_schema_table_destroy@@Base+0x38>
   2a080:	b	2a03c <fb_schema_table_destroy@@Base+0x64>

0002a084 <fb_schema_table_init@@Base>:
   2a084:	cmp	r1, #2
   2a088:	strd	r4, [sp, #-16]!
   2a08c:	mov	r4, r0
   2a090:	str	r6, [sp, #8]
   2a094:	str	lr, [sp, #12]
   2a098:	bls	2a0f4 <fb_schema_table_init@@Base+0x70>
   2a09c:	mov	r3, #4
   2a0a0:	movw	r0, #358	; 0x166
   2a0a4:	mul	r2, r0, r3
   2a0a8:	lsl	r5, r3, #1
   2a0ac:	cmp	r1, r2, lsr #8
   2a0b0:	mov	r3, r5
   2a0b4:	bhi	2a0a4 <fb_schema_table_init@@Base+0x20>
   2a0b8:	mov	r1, #4
   2a0bc:	mov	r0, r5
   2a0c0:	bl	13e7c <calloc@plt>
   2a0c4:	cmp	r0, #0
   2a0c8:	str	r0, [r4]
   2a0cc:	beq	2a0fc <fb_schema_table_init@@Base+0x78>
   2a0d0:	mov	r3, #0
   2a0d4:	mov	r0, r3
   2a0d8:	str	r3, [r4, #4]
   2a0dc:	str	r3, [r4, #8]
   2a0e0:	str	r5, [r4, #12]
   2a0e4:	ldrd	r4, [sp]
   2a0e8:	ldr	r6, [sp, #8]
   2a0ec:	add	sp, sp, #12
   2a0f0:	pop	{pc}		; (ldr pc, [sp], #4)
   2a0f4:	mov	r5, #4
   2a0f8:	b	2a0b8 <fb_schema_table_init@@Base+0x34>
   2a0fc:	mvn	r0, #0
   2a100:	b	2a0e4 <fb_schema_table_init@@Base+0x60>

0002a104 <fb_schema_table_resize@@Base>:
   2a104:	b	29d7c <fb_scope_table_visit@@Base+0x84>

0002a108 <fb_schema_table_insert@@Base>:
   2a108:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2a10c:	strd	r6, [sp, #8]
   2a110:	strd	r8, [sp, #16]
   2a114:	strd	sl, [sp, #24]
   2a118:	subs	fp, r3, #0
   2a11c:	str	lr, [sp, #32]
   2a120:	sub	sp, sp, #28
   2a124:	str	r1, [sp, #8]
   2a128:	beq	2a2f4 <fb_schema_table_insert@@Base+0x1ec>
   2a12c:	cmp	fp, #2
   2a130:	beq	2a2d4 <fb_schema_table_insert@@Base+0x1cc>
   2a134:	cmp	fp, #1
   2a138:	beq	2a314 <fb_schema_table_insert@@Base+0x20c>
   2a13c:	mov	r3, #179	; 0xb3
   2a140:	ldr	r1, [r0, #8]
   2a144:	mov	sl, r2
   2a148:	mov	r9, r0
   2a14c:	ldr	r7, [r0, #12]
   2a150:	mul	r3, r3, r7
   2a154:	cmp	r1, r3, lsr #8
   2a158:	bcs	2a24c <fb_schema_table_insert@@Base+0x144>
   2a15c:	add	ip, sp, #16
   2a160:	movw	r1, #15186	; 0x3b52
   2a164:	movt	r1, #12137	; 0x2f69
   2a168:	mov	r3, #0
   2a16c:	ldr	r8, [r9]
   2a170:	mov	r2, sl
   2a174:	sub	r7, r7, #1
   2a178:	stm	sp, {r1, ip}
   2a17c:	ldr	r0, [sp, #8]
   2a180:	bl	3b8d4 <cmetrohash64_1@@Base>
   2a184:	ldr	r5, [sp, #16]
   2a188:	ldr	r3, [sp, #64]	; 0x40
   2a18c:	sub	r3, r3, #2
   2a190:	cmp	r3, #1
   2a194:	and	r3, r7, r5
   2a198:	add	r4, r8, r3, lsl #2
   2a19c:	bls	2a28c <fb_schema_table_insert@@Base+0x184>
   2a1a0:	ldr	r6, [r8, r3, lsl #2]
   2a1a4:	cmp	r6, #0
   2a1a8:	moveq	r3, r4
   2a1ac:	beq	2a274 <fb_schema_table_insert@@Base+0x16c>
   2a1b0:	add	r5, r5, #1
   2a1b4:	mov	r3, #0
   2a1b8:	str	r9, [sp, #12]
   2a1bc:	mov	r9, sl
   2a1c0:	mov	sl, r7
   2a1c4:	mov	r7, r5
   2a1c8:	mov	r5, r3
   2a1cc:	b	2a1f4 <fb_schema_table_insert@@Base+0xec>
   2a1d0:	ldr	r2, [r6, #148]	; 0x94
   2a1d4:	cmp	r9, r2
   2a1d8:	beq	2a208 <fb_schema_table_insert@@Base+0x100>
   2a1dc:	and	r4, sl, r7
   2a1e0:	add	r7, r7, #1
   2a1e4:	ldr	r6, [r8, r4, lsl #2]
   2a1e8:	add	r4, r8, r4, lsl #2
   2a1ec:	cmp	r6, #0
   2a1f0:	beq	2a264 <fb_schema_table_insert@@Base+0x15c>
   2a1f4:	cmp	r6, #2
   2a1f8:	bne	2a1d0 <fb_schema_table_insert@@Base+0xc8>
   2a1fc:	cmp	r5, #0
   2a200:	moveq	r5, r4
   2a204:	b	2a1dc <fb_schema_table_insert@@Base+0xd4>
   2a208:	mov	r2, r9
   2a20c:	ldr	r0, [sp, #8]
   2a210:	ldr	r1, [r6, #144]	; 0x90
   2a214:	bl	13ed0 <memcmp@plt>
   2a218:	cmp	r0, #0
   2a21c:	bne	2a1dc <fb_schema_table_insert@@Base+0xd4>
   2a220:	ldr	r3, [sp, #64]	; 0x40
   2a224:	cmp	r3, #0
   2a228:	streq	fp, [r4]
   2a22c:	mov	r0, r6
   2a230:	add	sp, sp, #28
   2a234:	ldrd	r4, [sp]
   2a238:	ldrd	r6, [sp, #8]
   2a23c:	ldrd	r8, [sp, #16]
   2a240:	ldrd	sl, [sp, #24]
   2a244:	add	sp, sp, #32
   2a248:	pop	{pc}		; (ldr pc, [sp], #4)
   2a24c:	lsl	r1, r1, #1
   2a250:	bl	29d7c <fb_scope_table_visit@@Base+0x84>
   2a254:	cmp	r0, #0
   2a258:	bne	2a334 <fb_schema_table_insert@@Base+0x22c>
   2a25c:	ldr	r7, [r9, #12]
   2a260:	b	2a15c <fb_schema_table_insert@@Base+0x54>
   2a264:	ldr	r9, [sp, #12]
   2a268:	cmp	r5, #0
   2a26c:	mov	r3, r5
   2a270:	moveq	r3, r4
   2a274:	ldr	r2, [r9, #8]
   2a278:	mov	r6, #0
   2a27c:	add	r2, r2, #1
   2a280:	str	r2, [r9, #8]
   2a284:	str	fp, [r3]
   2a288:	b	2a22c <fb_schema_table_insert@@Base+0x124>
   2a28c:	ldr	r2, [r9, #8]
   2a290:	ldr	r1, [r8, r3, lsl #2]
   2a294:	add	r3, r2, #1
   2a298:	cmp	r1, #0
   2a29c:	cmpne	r1, #2
   2a2a0:	str	r3, [r9, #8]
   2a2a4:	beq	2a2c8 <fb_schema_table_insert@@Base+0x1c0>
   2a2a8:	add	r5, r5, #1
   2a2ac:	and	r4, r7, r5
   2a2b0:	add	r5, r5, #1
   2a2b4:	ldr	r3, [r8, r4, lsl #2]
   2a2b8:	add	r4, r8, r4, lsl #2
   2a2bc:	cmp	r3, #0
   2a2c0:	cmpne	r3, #2
   2a2c4:	bne	2a2ac <fb_schema_table_insert@@Base+0x1a4>
   2a2c8:	mov	r6, #0
   2a2cc:	str	fp, [r4]
   2a2d0:	b	2a22c <fb_schema_table_insert@@Base+0x124>
   2a2d4:	movw	r3, #26784	; 0x68a0
   2a2d8:	movt	r3, #5
   2a2dc:	movw	r1, #26484	; 0x6774
   2a2e0:	movt	r1, #5
   2a2e4:	movw	r0, #26588	; 0x67dc
   2a2e8:	movt	r0, #5
   2a2ec:	mov	r2, #115	; 0x73
   2a2f0:	bl	14014 <__assert_fail@plt>
   2a2f4:	movw	r3, #26784	; 0x68a0
   2a2f8:	movt	r3, #5
   2a2fc:	movw	r1, #26484	; 0x6774
   2a300:	movt	r1, #5
   2a304:	movw	r0, #26564	; 0x67c4
   2a308:	movt	r0, #5
   2a30c:	mov	r2, #114	; 0x72
   2a310:	bl	14014 <__assert_fail@plt>
   2a314:	movw	r3, #26784	; 0x68a0
   2a318:	movt	r3, #5
   2a31c:	movw	r1, #26484	; 0x6774
   2a320:	movt	r1, #5
   2a324:	movw	r0, #26612	; 0x67f4
   2a328:	movt	r0, #5
   2a32c:	mov	r2, #116	; 0x74
   2a330:	bl	14014 <__assert_fail@plt>
   2a334:	movw	r3, #41128	; 0xa0a8
   2a338:	movt	r3, #6
   2a33c:	movw	r2, #26636	; 0x680c
   2a340:	movt	r2, #5
   2a344:	ldr	r0, [r3]
   2a348:	movw	r1, #26688	; 0x6840
   2a34c:	movt	r1, #5
   2a350:	bl	13f60 <fprintf@plt>
   2a354:	mov	r0, #1
   2a358:	bl	13f48 <exit@plt>

0002a35c <fb_schema_table_insert_item@@Base>:
   2a35c:	ldr	r3, [r1, #144]	; 0x90
   2a360:	cmp	r1, #2
   2a364:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2a368:	strd	r6, [sp, #8]
   2a36c:	strd	r8, [sp, #16]
   2a370:	strd	sl, [sp, #24]
   2a374:	str	lr, [sp, #32]
   2a378:	sub	sp, sp, #36	; 0x24
   2a37c:	ldr	fp, [r1, #148]	; 0x94
   2a380:	str	r3, [sp, #12]
   2a384:	str	r2, [sp, #16]
   2a388:	beq	2a54c <fb_schema_table_insert_item@@Base+0x1f0>
   2a38c:	cmp	r1, #1
   2a390:	mov	r9, r1
   2a394:	beq	2a52c <fb_schema_table_insert_item@@Base+0x1d0>
   2a398:	mov	r3, #179	; 0xb3
   2a39c:	ldr	r1, [r0, #8]
   2a3a0:	mov	sl, r0
   2a3a4:	ldr	r7, [r0, #12]
   2a3a8:	mul	r3, r3, r7
   2a3ac:	cmp	r1, r3, lsr #8
   2a3b0:	bcs	2a4a4 <fb_schema_table_insert_item@@Base+0x148>
   2a3b4:	add	ip, sp, #24
   2a3b8:	movw	r1, #15186	; 0x3b52
   2a3bc:	movt	r1, #12137	; 0x2f69
   2a3c0:	mov	r3, #0
   2a3c4:	ldr	r8, [sl]
   2a3c8:	mov	r2, fp
   2a3cc:	sub	r7, r7, #1
   2a3d0:	stm	sp, {r1, ip}
   2a3d4:	ldr	r0, [sp, #12]
   2a3d8:	bl	3b8d4 <cmetrohash64_1@@Base>
   2a3dc:	ldr	r3, [sp, #16]
   2a3e0:	ldr	r5, [sp, #24]
   2a3e4:	sub	r3, r3, #2
   2a3e8:	cmp	r3, #1
   2a3ec:	and	r3, r7, r5
   2a3f0:	add	r4, r8, r3, lsl #2
   2a3f4:	bls	2a4e4 <fb_schema_table_insert_item@@Base+0x188>
   2a3f8:	ldr	r6, [r8, r3, lsl #2]
   2a3fc:	cmp	r6, #0
   2a400:	moveq	r3, r4
   2a404:	beq	2a4cc <fb_schema_table_insert_item@@Base+0x170>
   2a408:	add	r5, r5, #1
   2a40c:	mov	r3, #0
   2a410:	str	sl, [sp, #20]
   2a414:	mov	sl, r8
   2a418:	mov	r8, r7
   2a41c:	mov	r7, r5
   2a420:	mov	r5, r3
   2a424:	b	2a44c <fb_schema_table_insert_item@@Base+0xf0>
   2a428:	ldr	r2, [r6, #148]	; 0x94
   2a42c:	cmp	fp, r2
   2a430:	beq	2a460 <fb_schema_table_insert_item@@Base+0x104>
   2a434:	and	r4, r8, r7
   2a438:	add	r7, r7, #1
   2a43c:	ldr	r6, [sl, r4, lsl #2]
   2a440:	add	r4, sl, r4, lsl #2
   2a444:	cmp	r6, #0
   2a448:	beq	2a4bc <fb_schema_table_insert_item@@Base+0x160>
   2a44c:	cmp	r6, #2
   2a450:	bne	2a428 <fb_schema_table_insert_item@@Base+0xcc>
   2a454:	cmp	r5, #0
   2a458:	moveq	r5, r4
   2a45c:	b	2a434 <fb_schema_table_insert_item@@Base+0xd8>
   2a460:	mov	r2, fp
   2a464:	ldr	r0, [sp, #12]
   2a468:	ldr	r1, [r6, #144]	; 0x90
   2a46c:	bl	13ed0 <memcmp@plt>
   2a470:	cmp	r0, #0
   2a474:	bne	2a434 <fb_schema_table_insert_item@@Base+0xd8>
   2a478:	ldr	r3, [sp, #16]
   2a47c:	cmp	r3, #0
   2a480:	streq	r9, [r4]
   2a484:	mov	r0, r6
   2a488:	add	sp, sp, #36	; 0x24
   2a48c:	ldrd	r4, [sp]
   2a490:	ldrd	r6, [sp, #8]
   2a494:	ldrd	r8, [sp, #16]
   2a498:	ldrd	sl, [sp, #24]
   2a49c:	add	sp, sp, #32
   2a4a0:	pop	{pc}		; (ldr pc, [sp], #4)
   2a4a4:	lsl	r1, r1, #1
   2a4a8:	bl	29d7c <fb_scope_table_visit@@Base+0x84>
   2a4ac:	cmp	r0, #0
   2a4b0:	bne	2a56c <fb_schema_table_insert_item@@Base+0x210>
   2a4b4:	ldr	r7, [sl, #12]
   2a4b8:	b	2a3b4 <fb_schema_table_insert_item@@Base+0x58>
   2a4bc:	ldr	sl, [sp, #20]
   2a4c0:	cmp	r5, #0
   2a4c4:	mov	r3, r5
   2a4c8:	moveq	r3, r4
   2a4cc:	ldr	r2, [sl, #8]
   2a4d0:	mov	r6, #0
   2a4d4:	add	r2, r2, #1
   2a4d8:	str	r2, [sl, #8]
   2a4dc:	str	r9, [r3]
   2a4e0:	b	2a484 <fb_schema_table_insert_item@@Base+0x128>
   2a4e4:	ldr	r2, [sl, #8]
   2a4e8:	ldr	r1, [r8, r3, lsl #2]
   2a4ec:	add	r3, r2, #1
   2a4f0:	cmp	r1, #0
   2a4f4:	cmpne	r1, #2
   2a4f8:	str	r3, [sl, #8]
   2a4fc:	beq	2a520 <fb_schema_table_insert_item@@Base+0x1c4>
   2a500:	add	r5, r5, #1
   2a504:	and	r4, r7, r5
   2a508:	add	r5, r5, #1
   2a50c:	ldr	r3, [r8, r4, lsl #2]
   2a510:	add	r4, r8, r4, lsl #2
   2a514:	cmp	r3, #0
   2a518:	cmpne	r3, #2
   2a51c:	bne	2a504 <fb_schema_table_insert_item@@Base+0x1a8>
   2a520:	mov	r6, #0
   2a524:	str	r9, [r4]
   2a528:	b	2a484 <fb_schema_table_insert_item@@Base+0x128>
   2a52c:	movw	r3, #26784	; 0x68a0
   2a530:	movt	r3, #5
   2a534:	movw	r1, #26484	; 0x6774
   2a538:	movt	r1, #5
   2a53c:	movw	r0, #26612	; 0x67f4
   2a540:	movt	r0, #5
   2a544:	mov	r2, #116	; 0x74
   2a548:	bl	14014 <__assert_fail@plt>
   2a54c:	movw	r3, #26784	; 0x68a0
   2a550:	movt	r3, #5
   2a554:	movw	r1, #26484	; 0x6774
   2a558:	movt	r1, #5
   2a55c:	movw	r0, #26588	; 0x67dc
   2a560:	movt	r0, #5
   2a564:	mov	r2, #115	; 0x73
   2a568:	bl	14014 <__assert_fail@plt>
   2a56c:	movw	r3, #41128	; 0xa0a8
   2a570:	movt	r3, #6
   2a574:	movw	r2, #26636	; 0x680c
   2a578:	movt	r2, #5
   2a57c:	ldr	r0, [r3]
   2a580:	movw	r1, #26688	; 0x6840
   2a584:	movt	r1, #5
   2a588:	bl	13f60 <fprintf@plt>
   2a58c:	mov	r0, #1
   2a590:	bl	13f48 <exit@plt>

0002a594 <fb_schema_table_find@@Base>:
   2a594:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2a598:	strd	r6, [sp, #8]
   2a59c:	strd	r8, [sp, #16]
   2a5a0:	ldr	r8, [r0]
   2a5a4:	str	lr, [sp, #24]
   2a5a8:	sub	sp, sp, #20
   2a5ac:	cmp	r8, #0
   2a5b0:	beq	2a658 <fb_schema_table_find@@Base+0xc4>
   2a5b4:	mov	r7, r1
   2a5b8:	add	ip, sp, #8
   2a5bc:	ldr	r9, [r0, #12]
   2a5c0:	movw	r1, #15186	; 0x3b52
   2a5c4:	movt	r1, #12137	; 0x2f69
   2a5c8:	mov	r3, #0
   2a5cc:	mov	r0, r7
   2a5d0:	stm	sp, {r1, ip}
   2a5d4:	mov	r6, r2
   2a5d8:	bl	3b8d4 <cmetrohash64_1@@Base>
   2a5dc:	ldr	r5, [sp, #8]
   2a5e0:	sub	r9, r9, #1
   2a5e4:	and	r3, r9, r5
   2a5e8:	ldr	r4, [r8, r3, lsl #2]
   2a5ec:	cmp	r4, #0
   2a5f0:	beq	2a658 <fb_schema_table_find@@Base+0xc4>
   2a5f4:	add	r5, r5, #1
   2a5f8:	b	2a610 <fb_schema_table_find@@Base+0x7c>
   2a5fc:	and	r3, r9, r5
   2a600:	add	r5, r5, #1
   2a604:	ldr	r4, [r8, r3, lsl #2]
   2a608:	cmp	r4, #0
   2a60c:	beq	2a658 <fb_schema_table_find@@Base+0xc4>
   2a610:	cmp	r4, #2
   2a614:	beq	2a5fc <fb_schema_table_find@@Base+0x68>
   2a618:	ldr	r3, [r4, #148]	; 0x94
   2a61c:	cmp	r6, r3
   2a620:	bne	2a5fc <fb_schema_table_find@@Base+0x68>
   2a624:	mov	r2, r6
   2a628:	mov	r0, r7
   2a62c:	ldr	r1, [r4, #144]	; 0x90
   2a630:	bl	13ed0 <memcmp@plt>
   2a634:	cmp	r0, #0
   2a638:	bne	2a5fc <fb_schema_table_find@@Base+0x68>
   2a63c:	mov	r0, r4
   2a640:	add	sp, sp, #20
   2a644:	ldrd	r4, [sp]
   2a648:	ldrd	r6, [sp, #8]
   2a64c:	ldrd	r8, [sp, #16]
   2a650:	add	sp, sp, #24
   2a654:	pop	{pc}		; (ldr pc, [sp], #4)
   2a658:	mov	r4, #0
   2a65c:	b	2a63c <fb_schema_table_find@@Base+0xa8>

0002a660 <fb_schema_table_find_item@@Base>:
   2a660:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2a664:	strd	r6, [sp, #8]
   2a668:	ldr	r7, [r0]
   2a66c:	strd	r8, [sp, #16]
   2a670:	str	lr, [sp, #24]
   2a674:	sub	sp, sp, #20
   2a678:	ldr	r8, [r1, #144]	; 0x90
   2a67c:	cmp	r7, #0
   2a680:	ldr	r6, [r1, #148]	; 0x94
   2a684:	beq	2a72c <fb_schema_table_find_item@@Base+0xcc>
   2a688:	add	r1, sp, #8
   2a68c:	movw	r3, #15186	; 0x3b52
   2a690:	movt	r3, #12137	; 0x2f69
   2a694:	mov	r2, r6
   2a698:	ldr	r9, [r0, #12]
   2a69c:	mov	r0, r8
   2a6a0:	str	r3, [sp]
   2a6a4:	mov	r3, #0
   2a6a8:	str	r1, [sp, #4]
   2a6ac:	bl	3b8d4 <cmetrohash64_1@@Base>
   2a6b0:	ldr	r5, [sp, #8]
   2a6b4:	sub	r9, r9, #1
   2a6b8:	and	r3, r9, r5
   2a6bc:	ldr	r4, [r7, r3, lsl #2]
   2a6c0:	cmp	r4, #0
   2a6c4:	beq	2a72c <fb_schema_table_find_item@@Base+0xcc>
   2a6c8:	add	r5, r5, #1
   2a6cc:	b	2a6e4 <fb_schema_table_find_item@@Base+0x84>
   2a6d0:	and	r3, r9, r5
   2a6d4:	add	r5, r5, #1
   2a6d8:	ldr	r4, [r7, r3, lsl #2]
   2a6dc:	cmp	r4, #0
   2a6e0:	beq	2a72c <fb_schema_table_find_item@@Base+0xcc>
   2a6e4:	cmp	r4, #2
   2a6e8:	beq	2a6d0 <fb_schema_table_find_item@@Base+0x70>
   2a6ec:	ldr	r3, [r4, #148]	; 0x94
   2a6f0:	cmp	r6, r3
   2a6f4:	bne	2a6d0 <fb_schema_table_find_item@@Base+0x70>
   2a6f8:	mov	r2, r6
   2a6fc:	mov	r0, r8
   2a700:	ldr	r1, [r4, #144]	; 0x90
   2a704:	bl	13ed0 <memcmp@plt>
   2a708:	cmp	r0, #0
   2a70c:	bne	2a6d0 <fb_schema_table_find_item@@Base+0x70>
   2a710:	mov	r0, r4
   2a714:	add	sp, sp, #20
   2a718:	ldrd	r4, [sp]
   2a71c:	ldrd	r6, [sp, #8]
   2a720:	ldrd	r8, [sp, #16]
   2a724:	add	sp, sp, #24
   2a728:	pop	{pc}		; (ldr pc, [sp], #4)
   2a72c:	mov	r4, #0
   2a730:	b	2a710 <fb_schema_table_find_item@@Base+0xb0>

0002a734 <fb_schema_table_remove@@Base>:
   2a734:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2a738:	ldr	r4, [r0]
   2a73c:	strd	r6, [sp, #8]
   2a740:	strd	r8, [sp, #16]
   2a744:	strd	sl, [sp, #24]
   2a748:	str	lr, [sp, #32]
   2a74c:	sub	sp, sp, #20
   2a750:	cmp	r4, #0
   2a754:	beq	2a820 <fb_schema_table_remove@@Base+0xec>
   2a758:	mov	r7, r1
   2a75c:	add	ip, sp, #8
   2a760:	movw	r1, #15186	; 0x3b52
   2a764:	movt	r1, #12137	; 0x2f69
   2a768:	mov	r5, r0
   2a76c:	mov	r3, #0
   2a770:	mov	r0, r7
   2a774:	ldr	r8, [r5, #12]
   2a778:	mov	r6, r2
   2a77c:	stm	sp, {r1, ip}
   2a780:	bl	3b8d4 <cmetrohash64_1@@Base>
   2a784:	ldr	sl, [sp, #8]
   2a788:	sub	r8, r8, #1
   2a78c:	and	r3, r8, sl
   2a790:	ldr	r9, [r4, r3, lsl #2]
   2a794:	add	fp, r4, r3, lsl #2
   2a798:	cmp	r9, #0
   2a79c:	beq	2a820 <fb_schema_table_remove@@Base+0xec>
   2a7a0:	add	sl, sl, #1
   2a7a4:	b	2a7c0 <fb_schema_table_remove@@Base+0x8c>
   2a7a8:	and	r3, r8, sl
   2a7ac:	add	sl, sl, #1
   2a7b0:	ldr	r9, [r4, r3, lsl #2]
   2a7b4:	add	fp, r4, r3, lsl #2
   2a7b8:	cmp	r9, #0
   2a7bc:	beq	2a820 <fb_schema_table_remove@@Base+0xec>
   2a7c0:	cmp	r9, #2
   2a7c4:	beq	2a7a8 <fb_schema_table_remove@@Base+0x74>
   2a7c8:	ldr	r3, [r9, #148]	; 0x94
   2a7cc:	cmp	r6, r3
   2a7d0:	bne	2a7a8 <fb_schema_table_remove@@Base+0x74>
   2a7d4:	mov	r2, r6
   2a7d8:	mov	r0, r7
   2a7dc:	ldr	r1, [r9, #144]	; 0x90
   2a7e0:	bl	13ed0 <memcmp@plt>
   2a7e4:	cmp	r0, #0
   2a7e8:	bne	2a7a8 <fb_schema_table_remove@@Base+0x74>
   2a7ec:	ldr	r3, [r5, #8]
   2a7f0:	mov	r2, #2
   2a7f4:	str	r2, [fp]
   2a7f8:	sub	r3, r3, #1
   2a7fc:	str	r3, [r5, #8]
   2a800:	mov	r0, r9
   2a804:	add	sp, sp, #20
   2a808:	ldrd	r4, [sp]
   2a80c:	ldrd	r6, [sp, #8]
   2a810:	ldrd	r8, [sp, #16]
   2a814:	ldrd	sl, [sp, #24]
   2a818:	add	sp, sp, #32
   2a81c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a820:	mov	r9, #0
   2a824:	b	2a800 <fb_schema_table_remove@@Base+0xcc>

0002a828 <fb_schema_table_remove_item@@Base>:
   2a828:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2a82c:	ldr	r4, [r0]
   2a830:	strd	r6, [sp, #8]
   2a834:	strd	r8, [sp, #16]
   2a838:	strd	sl, [sp, #24]
   2a83c:	str	lr, [sp, #32]
   2a840:	sub	sp, sp, #20
   2a844:	cmp	r4, #0
   2a848:	ldrd	r6, [r1, #144]	; 0x90
   2a84c:	beq	2a918 <fb_schema_table_remove_item@@Base+0xf0>
   2a850:	add	r1, sp, #8
   2a854:	movw	r3, #15186	; 0x3b52
   2a858:	movt	r3, #12137	; 0x2f69
   2a85c:	mov	r5, r0
   2a860:	mov	r2, r7
   2a864:	mov	r0, r6
   2a868:	ldr	r8, [r5, #12]
   2a86c:	str	r3, [sp]
   2a870:	mov	r3, #0
   2a874:	str	r1, [sp, #4]
   2a878:	bl	3b8d4 <cmetrohash64_1@@Base>
   2a87c:	ldr	sl, [sp, #8]
   2a880:	sub	r8, r8, #1
   2a884:	and	r3, r8, sl
   2a888:	ldr	r9, [r4, r3, lsl #2]
   2a88c:	add	fp, r4, r3, lsl #2
   2a890:	cmp	r9, #0
   2a894:	beq	2a918 <fb_schema_table_remove_item@@Base+0xf0>
   2a898:	add	sl, sl, #1
   2a89c:	b	2a8b8 <fb_schema_table_remove_item@@Base+0x90>
   2a8a0:	and	r3, r8, sl
   2a8a4:	add	sl, sl, #1
   2a8a8:	ldr	r9, [r4, r3, lsl #2]
   2a8ac:	add	fp, r4, r3, lsl #2
   2a8b0:	cmp	r9, #0
   2a8b4:	beq	2a918 <fb_schema_table_remove_item@@Base+0xf0>
   2a8b8:	cmp	r9, #2
   2a8bc:	beq	2a8a0 <fb_schema_table_remove_item@@Base+0x78>
   2a8c0:	ldr	r3, [r9, #148]	; 0x94
   2a8c4:	cmp	r7, r3
   2a8c8:	bne	2a8a0 <fb_schema_table_remove_item@@Base+0x78>
   2a8cc:	mov	r2, r7
   2a8d0:	mov	r0, r6
   2a8d4:	ldr	r1, [r9, #144]	; 0x90
   2a8d8:	bl	13ed0 <memcmp@plt>
   2a8dc:	cmp	r0, #0
   2a8e0:	bne	2a8a0 <fb_schema_table_remove_item@@Base+0x78>
   2a8e4:	ldr	r3, [r5, #8]
   2a8e8:	mov	r2, #2
   2a8ec:	str	r2, [fp]
   2a8f0:	sub	r3, r3, #1
   2a8f4:	str	r3, [r5, #8]
   2a8f8:	mov	r0, r9
   2a8fc:	add	sp, sp, #20
   2a900:	ldrd	r4, [sp]
   2a904:	ldrd	r6, [sp, #8]
   2a908:	ldrd	r8, [sp, #16]
   2a90c:	ldrd	sl, [sp, #24]
   2a910:	add	sp, sp, #32
   2a914:	pop	{pc}		; (ldr pc, [sp], #4)
   2a918:	mov	r9, #0
   2a91c:	b	2a8f8 <fb_schema_table_remove_item@@Base+0xd0>

0002a920 <fb_schema_table_visit@@Base>:
   2a920:	ldr	ip, [r0, #12]
   2a924:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2a928:	ldr	r5, [r0]
   2a92c:	strd	r6, [sp, #8]
   2a930:	str	r8, [sp, #16]
   2a934:	cmp	ip, #0
   2a938:	str	lr, [sp, #20]
   2a93c:	beq	2a980 <fb_schema_table_visit@@Base+0x60>
   2a940:	mov	r6, r2
   2a944:	mov	r8, r1
   2a948:	mov	r7, r0
   2a94c:	sub	r5, r5, #4
   2a950:	mov	r4, #0
   2a954:	ldr	r3, [r5, #4]!
   2a958:	mov	r0, r6
   2a95c:	cmp	r3, #0
   2a960:	cmpne	r3, #2
   2a964:	mov	r1, r3
   2a968:	beq	2a994 <fb_schema_table_visit@@Base+0x74>
   2a96c:	blx	r8
   2a970:	ldr	ip, [r7, #12]
   2a974:	add	r4, r4, #1
   2a978:	cmp	r4, ip
   2a97c:	bcc	2a954 <fb_schema_table_visit@@Base+0x34>
   2a980:	ldrd	r4, [sp]
   2a984:	ldrd	r6, [sp, #8]
   2a988:	ldr	r8, [sp, #16]
   2a98c:	add	sp, sp, #20
   2a990:	pop	{pc}		; (ldr pc, [sp], #4)
   2a994:	add	r4, r4, #1
   2a998:	cmp	r4, ip
   2a99c:	bcc	2a954 <fb_schema_table_visit@@Base+0x34>
   2a9a0:	b	2a980 <fb_schema_table_visit@@Base+0x60>

0002a9a4 <__flatcc_fb_copy_path_n@@Base>:
   2a9a4:	strd	r4, [sp, #-16]!
   2a9a8:	mov	r4, r1
   2a9ac:	mov	r1, #0
   2a9b0:	mov	r2, r4
   2a9b4:	str	r6, [sp, #8]
   2a9b8:	mov	r6, r0
   2a9bc:	str	lr, [sp, #12]
   2a9c0:	bl	13f9c <memchr@plt>
   2a9c4:	cmp	r0, #0
   2a9c8:	subne	r4, r0, r6
   2a9cc:	add	r0, r4, #1
   2a9d0:	bl	13f18 <malloc@plt>
   2a9d4:	subs	r5, r0, #0
   2a9d8:	beq	2a9f0 <__flatcc_fb_copy_path_n@@Base+0x4c>
   2a9dc:	mov	r1, r6
   2a9e0:	mov	r2, r4
   2a9e4:	bl	13eb8 <memcpy@plt>
   2a9e8:	mov	r3, #0
   2a9ec:	strb	r3, [r5, r4]
   2a9f0:	mov	r0, r5
   2a9f4:	ldrd	r4, [sp]
   2a9f8:	ldr	r6, [sp, #8]
   2a9fc:	add	sp, sp, #12
   2aa00:	pop	{pc}		; (ldr pc, [sp], #4)

0002aa04 <__flatcc_fb_copy_path@@Base>:
   2aa04:	strd	r4, [sp, #-16]!
   2aa08:	str	r6, [sp, #8]
   2aa0c:	mov	r6, r0
   2aa10:	str	lr, [sp, #12]
   2aa14:	bl	13f54 <strlen@plt>
   2aa18:	mov	r4, r0
   2aa1c:	add	r0, r0, #1
   2aa20:	bl	13f18 <malloc@plt>
   2aa24:	subs	r5, r0, #0
   2aa28:	beq	2aa40 <__flatcc_fb_copy_path@@Base+0x3c>
   2aa2c:	mov	r1, r6
   2aa30:	mov	r2, r4
   2aa34:	bl	13eb8 <memcpy@plt>
   2aa38:	mov	r3, #0
   2aa3c:	strb	r3, [r5, r4]
   2aa40:	mov	r0, r5
   2aa44:	ldrd	r4, [sp]
   2aa48:	ldr	r6, [sp, #8]
   2aa4c:	add	sp, sp, #12
   2aa50:	pop	{pc}		; (ldr pc, [sp], #4)

0002aa54 <__flatcc_fb_chomp@@Base>:
   2aa54:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2aa58:	subs	r5, r2, #0
   2aa5c:	mov	r4, r1
   2aa60:	strd	r6, [sp, #8]
   2aa64:	str	r8, [sp, #16]
   2aa68:	str	lr, [sp, #20]
   2aa6c:	beq	2aaa0 <__flatcc_fb_chomp@@Base+0x4c>
   2aa70:	mov	r6, r0
   2aa74:	mov	r0, r5
   2aa78:	bl	13f54 <strlen@plt>
   2aa7c:	cmp	r0, r4
   2aa80:	mov	r2, r0
   2aa84:	bcs	2aaa0 <__flatcc_fb_chomp@@Base+0x4c>
   2aa88:	sub	r7, r4, r0
   2aa8c:	mov	r1, r5
   2aa90:	add	r0, r6, r7
   2aa94:	bl	13ffc <strncmp@plt>
   2aa98:	cmp	r0, #0
   2aa9c:	moveq	r4, r7
   2aaa0:	mov	r0, r4
   2aaa4:	ldrd	r4, [sp]
   2aaa8:	ldrd	r6, [sp, #8]
   2aaac:	ldr	r8, [sp, #16]
   2aab0:	add	sp, sp, #20
   2aab4:	pop	{pc}		; (ldr pc, [sp], #4)

0002aab8 <__flatcc_fb_create_join_path_n@@Base>:
   2aab8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2aabc:	mov	r4, r1
   2aac0:	strd	r6, [sp, #8]
   2aac4:	mov	r7, r3
   2aac8:	strd	r8, [sp, #16]
   2aacc:	mov	r9, r0
   2aad0:	ldr	r8, [sp, #32]
   2aad4:	str	sl, [sp, #24]
   2aad8:	mov	sl, r2
   2aadc:	str	lr, [sp, #28]
   2aae0:	cmp	r8, #0
   2aae4:	moveq	r6, r8
   2aae8:	beq	2aaf8 <__flatcc_fb_create_join_path_n@@Base+0x40>
   2aaec:	mov	r0, r8
   2aaf0:	bl	13f54 <strlen@plt>
   2aaf4:	mov	r6, r0
   2aaf8:	cmp	r9, #0
   2aafc:	beq	2ab84 <__flatcc_fb_create_join_path_n@@Base+0xcc>
   2ab00:	cmp	r7, #0
   2ab04:	bne	2ab6c <__flatcc_fb_create_join_path_n@@Base+0xb4>
   2ab08:	ldr	r3, [sp, #36]	; 0x24
   2ab0c:	cmp	r3, #0
   2ab10:	beq	2ab88 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2ab14:	cmp	r4, #0
   2ab18:	beq	2ab88 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2ab1c:	add	r3, r9, r4
   2ab20:	ldrb	r3, [r3, #-1]
   2ab24:	cmp	r3, #92	; 0x5c
   2ab28:	cmpne	r3, #47	; 0x2f
   2ab2c:	beq	2ab88 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2ab30:	ldr	r3, [sp, #36]	; 0x24
   2ab34:	add	r0, r3, r4
   2ab38:	add	r0, r0, #1
   2ab3c:	add	r0, r0, r7
   2ab40:	add	r0, r0, r6
   2ab44:	bl	13f18 <malloc@plt>
   2ab48:	subs	r5, r0, #0
   2ab4c:	beq	2aba0 <__flatcc_fb_create_join_path_n@@Base+0xe8>
   2ab50:	mov	r2, r4
   2ab54:	mov	r1, r9
   2ab58:	bl	13eb8 <memcpy@plt>
   2ab5c:	mov	r3, #47	; 0x2f
   2ab60:	strb	r3, [r5, r4]
   2ab64:	add	r4, r4, #1
   2ab68:	b	2abe8 <__flatcc_fb_create_join_path_n@@Base+0x130>
   2ab6c:	ldrb	r3, [sl]
   2ab70:	cmp	r3, #92	; 0x5c
   2ab74:	cmpne	r3, #47	; 0x2f
   2ab78:	moveq	r3, #1
   2ab7c:	movne	r3, #0
   2ab80:	bne	2abc0 <__flatcc_fb_create_join_path_n@@Base+0x108>
   2ab84:	mov	r4, #0
   2ab88:	add	r0, r7, #1
   2ab8c:	add	r0, r0, r6
   2ab90:	add	r0, r0, r4
   2ab94:	bl	13f18 <malloc@plt>
   2ab98:	subs	r5, r0, #0
   2ab9c:	bne	2abdc <__flatcc_fb_create_join_path_n@@Base+0x124>
   2aba0:	mov	r5, #0
   2aba4:	mov	r0, r5
   2aba8:	ldrd	r4, [sp]
   2abac:	ldrd	r6, [sp, #8]
   2abb0:	ldrd	r8, [sp, #16]
   2abb4:	ldr	sl, [sp, #24]
   2abb8:	add	sp, sp, #28
   2abbc:	pop	{pc}		; (ldr pc, [sp], #4)
   2abc0:	cmp	r7, #1
   2abc4:	bls	2ab08 <__flatcc_fb_create_join_path_n@@Base+0x50>
   2abc8:	ldrb	r2, [sl, #1]
   2abcc:	cmp	r2, #58	; 0x3a
   2abd0:	bne	2ab08 <__flatcc_fb_create_join_path_n@@Base+0x50>
   2abd4:	mov	r4, r3
   2abd8:	b	2ab88 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2abdc:	mov	r1, r9
   2abe0:	mov	r2, r4
   2abe4:	bl	13eb8 <memcpy@plt>
   2abe8:	mov	r2, r7
   2abec:	mov	r1, sl
   2abf0:	add	r7, r4, r7
   2abf4:	add	r0, r5, r4
   2abf8:	bl	13eb8 <memcpy@plt>
   2abfc:	mov	r2, r6
   2ac00:	mov	r1, r8
   2ac04:	add	r0, r5, r7
   2ac08:	add	r6, r5, r6
   2ac0c:	bl	13eb8 <memcpy@plt>
   2ac10:	mov	r3, #0
   2ac14:	strb	r3, [r6, r7]
   2ac18:	b	2aba4 <__flatcc_fb_create_join_path_n@@Base+0xec>

0002ac1c <__flatcc_fb_create_join_path@@Base>:
   2ac1c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2ac20:	subs	r5, r0, #0
   2ac24:	mov	r4, r1
   2ac28:	strd	r6, [sp, #8]
   2ac2c:	mov	r6, r3
   2ac30:	moveq	r7, r5
   2ac34:	str	r8, [sp, #16]
   2ac38:	mov	r8, r2
   2ac3c:	str	lr, [sp, #20]
   2ac40:	sub	sp, sp, #8
   2ac44:	beq	2ac50 <__flatcc_fb_create_join_path@@Base+0x34>
   2ac48:	bl	13f54 <strlen@plt>
   2ac4c:	mov	r7, r0
   2ac50:	cmp	r4, #0
   2ac54:	moveq	r3, r4
   2ac58:	beq	2ac68 <__flatcc_fb_create_join_path@@Base+0x4c>
   2ac5c:	mov	r0, r4
   2ac60:	bl	13f54 <strlen@plt>
   2ac64:	mov	r3, r0
   2ac68:	mov	r2, r4
   2ac6c:	mov	r1, r7
   2ac70:	str	r8, [sp]
   2ac74:	mov	r0, r5
   2ac78:	str	r6, [sp, #4]
   2ac7c:	bl	2aab8 <__flatcc_fb_create_join_path_n@@Base>
   2ac80:	add	sp, sp, #8
   2ac84:	ldrd	r4, [sp]
   2ac88:	ldrd	r6, [sp, #8]
   2ac8c:	ldr	r8, [sp, #16]
   2ac90:	add	sp, sp, #20
   2ac94:	pop	{pc}		; (ldr pc, [sp], #4)

0002ac98 <__flatcc_fb_create_path_ext_n@@Base>:
   2ac98:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2ac9c:	mov	r5, r1
   2aca0:	strd	r6, [sp, #8]
   2aca4:	subs	r7, r2, #0
   2aca8:	strd	r8, [sp, #16]
   2acac:	mov	r9, r0
   2acb0:	str	sl, [sp, #24]
   2acb4:	str	lr, [sp, #28]
   2acb8:	beq	2ad1c <__flatcc_fb_create_path_ext_n@@Base+0x84>
   2acbc:	mov	r0, r7
   2acc0:	bl	13f54 <strlen@plt>
   2acc4:	mov	r8, r0
   2acc8:	add	r6, r5, r0
   2accc:	add	r0, r6, #1
   2acd0:	bl	13f18 <malloc@plt>
   2acd4:	subs	r4, r0, #0
   2acd8:	beq	2ad00 <__flatcc_fb_create_path_ext_n@@Base+0x68>
   2acdc:	mov	r1, r9
   2ace0:	mov	r2, r5
   2ace4:	bl	13eb8 <memcpy@plt>
   2ace8:	mov	r2, r8
   2acec:	mov	r1, r7
   2acf0:	add	r0, r4, r5
   2acf4:	bl	13eb8 <memcpy@plt>
   2acf8:	mov	r3, #0
   2acfc:	strb	r3, [r4, r6]
   2ad00:	mov	r0, r4
   2ad04:	ldrd	r4, [sp]
   2ad08:	ldrd	r6, [sp, #8]
   2ad0c:	ldrd	r8, [sp, #16]
   2ad10:	ldr	sl, [sp, #24]
   2ad14:	add	sp, sp, #28
   2ad18:	pop	{pc}		; (ldr pc, [sp], #4)
   2ad1c:	mov	r6, r1
   2ad20:	mov	r8, r7
   2ad24:	b	2accc <__flatcc_fb_create_path_ext_n@@Base+0x34>

0002ad28 <__flatcc_fb_create_path_ext@@Base>:
   2ad28:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2ad2c:	mov	r4, r1
   2ad30:	strd	r6, [sp, #8]
   2ad34:	strd	r8, [sp, #16]
   2ad38:	subs	r9, r0, #0
   2ad3c:	moveq	r6, r9
   2ad40:	str	sl, [sp, #24]
   2ad44:	str	lr, [sp, #28]
   2ad48:	beq	2ad54 <__flatcc_fb_create_path_ext@@Base+0x2c>
   2ad4c:	bl	13f54 <strlen@plt>
   2ad50:	mov	r6, r0
   2ad54:	cmp	r4, #0
   2ad58:	beq	2adbc <__flatcc_fb_create_path_ext@@Base+0x94>
   2ad5c:	mov	r0, r4
   2ad60:	bl	13f54 <strlen@plt>
   2ad64:	mov	r8, r0
   2ad68:	add	r7, r6, r0
   2ad6c:	add	r0, r7, #1
   2ad70:	bl	13f18 <malloc@plt>
   2ad74:	subs	r5, r0, #0
   2ad78:	beq	2ada0 <__flatcc_fb_create_path_ext@@Base+0x78>
   2ad7c:	mov	r1, r9
   2ad80:	mov	r2, r6
   2ad84:	bl	13eb8 <memcpy@plt>
   2ad88:	mov	r2, r8
   2ad8c:	mov	r1, r4
   2ad90:	add	r0, r5, r6
   2ad94:	bl	13eb8 <memcpy@plt>
   2ad98:	mov	r3, #0
   2ad9c:	strb	r3, [r5, r7]
   2ada0:	mov	r0, r5
   2ada4:	ldrd	r4, [sp]
   2ada8:	ldrd	r6, [sp, #8]
   2adac:	ldrd	r8, [sp, #16]
   2adb0:	ldr	sl, [sp, #24]
   2adb4:	add	sp, sp, #28
   2adb8:	pop	{pc}		; (ldr pc, [sp], #4)
   2adbc:	mov	r7, r6
   2adc0:	mov	r8, r4
   2adc4:	b	2ad6c <__flatcc_fb_create_path_ext@@Base+0x44>

0002adc8 <__flatcc_fb_create_make_path_n@@Base>:
   2adc8:	cmp	r1, #1
   2adcc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2add0:	mov	r5, r0
   2add4:	strd	r6, [sp, #8]
   2add8:	mov	r6, r1
   2addc:	str	r8, [sp, #16]
   2ade0:	str	lr, [sp, #20]
   2ade4:	beq	2af40 <__flatcc_fb_create_make_path_n@@Base+0x178>
   2ade8:	bls	2af50 <__flatcc_fb_create_make_path_n@@Base+0x188>
   2adec:	ldrb	r4, [r0]
   2adf0:	sub	r8, r0, #1
   2adf4:	mov	r2, r0
   2adf8:	add	r8, r8, r1
   2adfc:	mov	r3, r4
   2ae00:	cmp	r3, #92	; 0x5c
   2ae04:	ldrb	r0, [r2, #1]!
   2ae08:	bne	2ae14 <__flatcc_fb_create_make_path_n@@Base+0x4c>
   2ae0c:	cmp	r0, #32
   2ae10:	addeq	r6, r6, #1
   2ae14:	cmp	r3, #32
   2ae18:	addeq	r6, r6, #1
   2ae1c:	cmp	r2, r8
   2ae20:	mov	r3, r0
   2ae24:	bne	2ae00 <__flatcc_fb_create_make_path_n@@Base+0x38>
   2ae28:	add	r6, r6, #1
   2ae2c:	cmp	r0, #32
   2ae30:	movne	r0, r6
   2ae34:	addeq	r0, r6, #1
   2ae38:	bl	13f18 <malloc@plt>
   2ae3c:	subs	r7, r0, #0
   2ae40:	beq	2aee8 <__flatcc_fb_create_make_path_n@@Base+0x120>
   2ae44:	mov	r3, #0
   2ae48:	mov	r6, #92	; 0x5c
   2ae4c:	b	2ae84 <__flatcc_fb_create_make_path_n@@Base+0xbc>
   2ae50:	cmp	r4, #32
   2ae54:	add	r3, r3, #2
   2ae58:	bne	2ae70 <__flatcc_fb_create_make_path_n@@Base+0xa8>
   2ae5c:	mov	lr, r2
   2ae60:	mov	r2, r3
   2ae64:	strb	r6, [r1]
   2ae68:	mov	r1, ip
   2ae6c:	add	ip, r7, r3
   2ae70:	cmp	r8, r5
   2ae74:	mov	r3, r2
   2ae78:	strb	r4, [r1]
   2ae7c:	mov	r4, r0
   2ae80:	beq	2af00 <__flatcc_fb_create_make_path_n@@Base+0x138>
   2ae84:	add	r2, r3, #1
   2ae88:	cmp	r4, #92	; 0x5c
   2ae8c:	ldrb	r0, [r5, #1]!
   2ae90:	add	ip, r7, r2
   2ae94:	add	r1, r7, r3
   2ae98:	mov	lr, r3
   2ae9c:	bne	2ae50 <__flatcc_fb_create_make_path_n@@Base+0x88>
   2aea0:	cmp	r0, #32
   2aea4:	bne	2ae70 <__flatcc_fb_create_make_path_n@@Base+0xa8>
   2aea8:	add	r3, r3, #2
   2aeac:	mov	lr, r2
   2aeb0:	strb	r4, [r1]
   2aeb4:	mov	r2, r3
   2aeb8:	mov	r1, ip
   2aebc:	add	ip, r7, r3
   2aec0:	b	2ae70 <__flatcc_fb_create_make_path_n@@Base+0xa8>
   2aec4:	mov	r0, #3
   2aec8:	bl	13f18 <malloc@plt>
   2aecc:	subs	r7, r0, #0
   2aed0:	beq	2aee8 <__flatcc_fb_create_make_path_n@@Base+0x120>
   2aed4:	mov	r2, #92	; 0x5c
   2aed8:	mov	r3, #0
   2aedc:	strb	r2, [r7]
   2aee0:	strb	r4, [r7, #1]
   2aee4:	strb	r3, [r7, #2]
   2aee8:	mov	r0, r7
   2aeec:	ldrd	r4, [sp]
   2aef0:	ldrd	r6, [sp, #8]
   2aef4:	ldr	r8, [sp, #16]
   2aef8:	add	sp, sp, #20
   2aefc:	pop	{pc}		; (ldr pc, [sp], #4)
   2af00:	cmp	r0, #32
   2af04:	addne	r2, r7, r2
   2af08:	beq	2af1c <__flatcc_fb_create_make_path_n@@Base+0x154>
   2af0c:	mov	r3, #0
   2af10:	strb	r0, [ip]
   2af14:	strb	r3, [r2, #1]
   2af18:	b	2aee8 <__flatcc_fb_create_make_path_n@@Base+0x120>
   2af1c:	mov	r3, #92	; 0x5c
   2af20:	add	r2, lr, #2
   2af24:	strb	r3, [ip]
   2af28:	add	ip, r7, r2
   2af2c:	mov	r3, #0
   2af30:	mov	r2, ip
   2af34:	strb	r0, [ip]
   2af38:	strb	r3, [r2, #1]
   2af3c:	b	2aee8 <__flatcc_fb_create_make_path_n@@Base+0x120>
   2af40:	ldrb	r4, [r0]
   2af44:	cmp	r4, #92	; 0x5c
   2af48:	cmpne	r4, #32
   2af4c:	beq	2aec4 <__flatcc_fb_create_make_path_n@@Base+0xfc>
   2af50:	mov	r2, r6
   2af54:	mov	r1, #0
   2af58:	mov	r0, r5
   2af5c:	bl	13f9c <memchr@plt>
   2af60:	cmp	r0, #0
   2af64:	subne	r6, r0, r5
   2af68:	add	r0, r6, #1
   2af6c:	bl	13f18 <malloc@plt>
   2af70:	subs	r7, r0, #0
   2af74:	beq	2aee8 <__flatcc_fb_create_make_path_n@@Base+0x120>
   2af78:	mov	r1, r5
   2af7c:	mov	r2, r6
   2af80:	bl	13eb8 <memcpy@plt>
   2af84:	mov	r3, #0
   2af88:	strb	r3, [r7, r6]
   2af8c:	b	2aee8 <__flatcc_fb_create_make_path_n@@Base+0x120>

0002af90 <__flatcc_fb_create_make_path@@Base>:
   2af90:	str	r4, [sp, #-8]!
   2af94:	mov	r4, r0
   2af98:	str	lr, [sp, #4]
   2af9c:	bl	13f54 <strlen@plt>
   2afa0:	mov	r1, r0
   2afa4:	mov	r0, r4
   2afa8:	ldr	r4, [sp]
   2afac:	ldr	lr, [sp, #4]
   2afb0:	add	sp, sp, #8
   2afb4:	b	2adc8 <__flatcc_fb_create_make_path_n@@Base>

0002afb8 <__flatcc_fb_find_basename@@Base>:
   2afb8:	add	r1, r0, r1
   2afbc:	cmp	r0, r1
   2afc0:	beq	2b018 <__flatcc_fb_find_basename@@Base+0x60>
   2afc4:	ldrb	r3, [r1, #-1]
   2afc8:	sub	r2, r1, #1
   2afcc:	cmp	r3, #47	; 0x2f
   2afd0:	cmpne	r3, #92	; 0x5c
   2afd4:	beq	2b01c <__flatcc_fb_find_basename@@Base+0x64>
   2afd8:	cmp	r0, r2
   2afdc:	beq	2b018 <__flatcc_fb_find_basename@@Base+0x60>
   2afe0:	ldrb	r3, [r1, #-2]
   2afe4:	sub	r1, r1, #2
   2afe8:	cmp	r3, #47	; 0x2f
   2afec:	cmpne	r3, #92	; 0x5c
   2aff0:	bne	2b00c <__flatcc_fb_find_basename@@Base+0x54>
   2aff4:	b	2b024 <__flatcc_fb_find_basename@@Base+0x6c>
   2aff8:	ldrb	r3, [r1, #-1]
   2affc:	cmp	r3, #92	; 0x5c
   2b000:	cmpne	r3, #47	; 0x2f
   2b004:	beq	2b01c <__flatcc_fb_find_basename@@Base+0x64>
   2b008:	mov	r1, r2
   2b00c:	cmp	r0, r1
   2b010:	sub	r2, r1, #1
   2b014:	bne	2aff8 <__flatcc_fb_find_basename@@Base+0x40>
   2b018:	mov	r1, r0
   2b01c:	sub	r0, r1, r0
   2b020:	bx	lr
   2b024:	mov	r1, r2
   2b028:	b	2b01c <__flatcc_fb_find_basename@@Base+0x64>

0002b02c <__flatcc_fb_create_basename@@Base>:
   2b02c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b030:	add	r4, r0, r1
   2b034:	cmp	r0, r4
   2b038:	strd	r6, [sp, #8]
   2b03c:	mov	r6, r2
   2b040:	str	r8, [sp, #16]
   2b044:	str	lr, [sp, #20]
   2b048:	beq	2b0a0 <__flatcc_fb_create_basename@@Base+0x74>
   2b04c:	ldrb	r3, [r4, #-1]
   2b050:	sub	r2, r4, #1
   2b054:	cmp	r3, #47	; 0x2f
   2b058:	cmpne	r3, #92	; 0x5c
   2b05c:	beq	2b0a4 <__flatcc_fb_create_basename@@Base+0x78>
   2b060:	cmp	r0, r2
   2b064:	beq	2b0a0 <__flatcc_fb_create_basename@@Base+0x74>
   2b068:	ldrb	r3, [r4, #-2]
   2b06c:	sub	r4, r4, #2
   2b070:	cmp	r3, #47	; 0x2f
   2b074:	cmpne	r3, #92	; 0x5c
   2b078:	bne	2b094 <__flatcc_fb_create_basename@@Base+0x68>
   2b07c:	b	2b120 <__flatcc_fb_create_basename@@Base+0xf4>
   2b080:	ldrb	r3, [r4, #-1]
   2b084:	cmp	r3, #92	; 0x5c
   2b088:	cmpne	r3, #47	; 0x2f
   2b08c:	beq	2b0a4 <__flatcc_fb_create_basename@@Base+0x78>
   2b090:	mov	r4, ip
   2b094:	cmp	r0, r4
   2b098:	sub	ip, r4, #1
   2b09c:	bne	2b080 <__flatcc_fb_create_basename@@Base+0x54>
   2b0a0:	mov	r4, r0
   2b0a4:	sub	r0, r4, r0
   2b0a8:	cmp	r6, #0
   2b0ac:	sub	r5, r1, r0
   2b0b0:	beq	2b0c4 <__flatcc_fb_create_basename@@Base+0x98>
   2b0b4:	mov	r0, r6
   2b0b8:	bl	13f54 <strlen@plt>
   2b0bc:	cmp	r5, r0
   2b0c0:	bhi	2b100 <__flatcc_fb_create_basename@@Base+0xd4>
   2b0c4:	add	r0, r5, #1
   2b0c8:	bl	13f18 <malloc@plt>
   2b0cc:	subs	r6, r0, #0
   2b0d0:	beq	2b0e8 <__flatcc_fb_create_basename@@Base+0xbc>
   2b0d4:	mov	r1, r4
   2b0d8:	mov	r2, r5
   2b0dc:	bl	13eb8 <memcpy@plt>
   2b0e0:	mov	r3, #0
   2b0e4:	strb	r3, [r6, r5]
   2b0e8:	mov	r0, r6
   2b0ec:	ldrd	r4, [sp]
   2b0f0:	ldrd	r6, [sp, #8]
   2b0f4:	ldr	r8, [sp, #16]
   2b0f8:	add	sp, sp, #20
   2b0fc:	pop	{pc}		; (ldr pc, [sp], #4)
   2b100:	sub	r7, r5, r0
   2b104:	mov	r2, r0
   2b108:	mov	r1, r6
   2b10c:	add	r0, r4, r7
   2b110:	bl	13ffc <strncmp@plt>
   2b114:	cmp	r0, #0
   2b118:	moveq	r5, r7
   2b11c:	b	2b0c4 <__flatcc_fb_create_basename@@Base+0x98>
   2b120:	mov	r4, r2
   2b124:	b	2b0a4 <__flatcc_fb_create_basename@@Base+0x78>

0002b128 <__flatcc_fb_read_file@@Base>:
   2b128:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b12c:	strd	r6, [sp, #8]
   2b130:	mov	r7, r1
   2b134:	movw	r1, #26808	; 0x68b8
   2b138:	movt	r1, #5
   2b13c:	str	r8, [sp, #16]
   2b140:	subs	r8, r2, #0
   2b144:	str	lr, [sp, #20]
   2b148:	sub	sp, sp, #8
   2b14c:	addeq	r8, sp, #4
   2b150:	bl	13ea0 <fopen@plt>
   2b154:	subs	r6, r0, #0
   2b158:	beq	2b228 <__flatcc_fb_read_file@@Base+0x100>
   2b15c:	mov	r2, #2
   2b160:	mov	r1, #0
   2b164:	bl	13ff0 <fseek@plt>
   2b168:	mov	r0, r6
   2b16c:	bl	13ec4 <ftell@plt>
   2b170:	cmp	r0, r7
   2b174:	mov	r5, r0
   2b178:	movls	r4, #0
   2b17c:	movhi	r4, #1
   2b180:	cmp	r7, #0
   2b184:	mov	r0, r6
   2b188:	str	r5, [r8]
   2b18c:	moveq	r4, #0
   2b190:	cmp	r4, #0
   2b194:	bne	2b220 <__flatcc_fb_read_file@@Base+0xf8>
   2b198:	bl	13edc <rewind@plt>
   2b19c:	cmp	r5, #0
   2b1a0:	movne	r0, r5
   2b1a4:	moveq	r0, #1
   2b1a8:	bl	13f18 <malloc@plt>
   2b1ac:	subs	r7, r0, #0
   2b1b0:	bne	2b1bc <__flatcc_fb_read_file@@Base+0x94>
   2b1b4:	b	2b230 <__flatcc_fb_read_file@@Base+0x108>
   2b1b8:	add	r4, r4, r0
   2b1bc:	mov	r3, r6
   2b1c0:	sub	r2, r5, r4
   2b1c4:	mov	r1, #1
   2b1c8:	add	r0, r7, r4
   2b1cc:	bl	13f00 <fread@plt>
   2b1d0:	cmp	r0, #0
   2b1d4:	bne	2b1b8 <__flatcc_fb_read_file@@Base+0x90>
   2b1d8:	cmp	r4, r5
   2b1dc:	mov	r0, r6
   2b1e0:	bne	2b208 <__flatcc_fb_read_file@@Base+0xe0>
   2b1e4:	bl	13fa8 <fclose@plt>
   2b1e8:	str	r4, [r8]
   2b1ec:	mov	r0, r7
   2b1f0:	add	sp, sp, #8
   2b1f4:	ldrd	r4, [sp]
   2b1f8:	ldrd	r6, [sp, #8]
   2b1fc:	ldr	r8, [sp, #16]
   2b200:	add	sp, sp, #20
   2b204:	pop	{pc}		; (ldr pc, [sp], #4)
   2b208:	bl	13fa8 <fclose@plt>
   2b20c:	mov	r0, r7
   2b210:	bl	13eac <free@plt>
   2b214:	mov	r7, #0
   2b218:	str	r5, [r8]
   2b21c:	b	2b1ec <__flatcc_fb_read_file@@Base+0xc4>
   2b220:	bl	13fa8 <fclose@plt>
   2b224:	b	2b214 <__flatcc_fb_read_file@@Base+0xec>
   2b228:	mov	r5, r6
   2b22c:	b	2b214 <__flatcc_fb_read_file@@Base+0xec>
   2b230:	mov	r0, r6
   2b234:	bl	13fa8 <fclose@plt>
   2b238:	b	2b214 <__flatcc_fb_read_file@@Base+0xec>

0002b23c <__flatcc_fb_default_error_out@@Base>:
   2b23c:	movw	r3, #41128	; 0xa0a8
   2b240:	movt	r3, #6
   2b244:	mov	r0, r1
   2b248:	mov	r1, #1
   2b24c:	ldr	r3, [r3]
   2b250:	b	13ef4 <fwrite@plt>
   2b254:	add	r0, r1, #4
   2b258:	b	27c70 <fb_symbol_table_clear@@Base>
   2b25c:	movw	r3, #41128	; 0xa0a8
   2b260:	movt	r3, #6
   2b264:	str	r4, [sp, #-8]!
   2b268:	movw	r0, #62968	; 0xf5f8
   2b26c:	movt	r0, #3
   2b270:	ldr	r3, [r3]
   2b274:	mov	r2, #34	; 0x22
   2b278:	mov	r1, #1
   2b27c:	str	lr, [sp, #4]
   2b280:	bl	13ef4 <fwrite@plt>
   2b284:	mov	r0, #1
   2b288:	bl	13f48 <exit@plt>
   2b28c:	ldr	ip, [r0, #28]
   2b290:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b294:	mov	r4, r0
   2b298:	ldr	r0, [r0, #20]
   2b29c:	strd	r6, [sp, #8]
   2b2a0:	mov	r7, r1
   2b2a4:	mov	r6, r2
   2b2a8:	ldr	r1, [r4, #40]	; 0x28
   2b2ac:	add	r5, ip, ip, lsl #2
   2b2b0:	str	r8, [sp, #16]
   2b2b4:	mov	r8, r3
   2b2b8:	str	lr, [sp, #20]
   2b2bc:	add	r5, r0, r5, lsl #2
   2b2c0:	cmp	r5, r1
   2b2c4:	str	r5, [r4, #24]
   2b2c8:	beq	2b30c <__flatcc_fb_default_error_out@@Base+0xd0>
   2b2cc:	ldr	r2, [r4, #60]	; 0x3c
   2b2d0:	sub	r8, r8, r6
   2b2d4:	add	r3, r1, #20
   2b2d8:	ldr	r0, [r4, #64]	; 0x40
   2b2dc:	stm	r1, {r6, r8}
   2b2e0:	ldr	r8, [sp, #16]
   2b2e4:	sub	r6, r6, r2
   2b2e8:	add	r6, r6, #1
   2b2ec:	str	r0, [r1, #8]
   2b2f0:	str	r6, [r1, #12]
   2b2f4:	str	r7, [r1, #16]
   2b2f8:	str	r3, [r4, #40]	; 0x28
   2b2fc:	ldrd	r4, [sp]
   2b300:	ldrd	r6, [sp, #8]
   2b304:	add	sp, sp, #20
   2b308:	pop	{pc}		; (ldr pc, [sp], #4)
   2b30c:	cmp	ip, #0
   2b310:	sub	r5, r5, r0
   2b314:	moveq	r1, #20480	; 0x5000
   2b318:	moveq	r3, #1024	; 0x400
   2b31c:	bne	2b34c <__flatcc_fb_default_error_out@@Base+0x110>
   2b320:	str	r3, [r4, #28]
   2b324:	bl	13ee8 <realloc@plt>
   2b328:	cmp	r0, #0
   2b32c:	str	r0, [r4, #20]
   2b330:	beq	2b35c <__flatcc_fb_default_error_out@@Base+0x120>
   2b334:	ldr	r3, [r4, #28]
   2b338:	add	r1, r0, r5
   2b33c:	add	r3, r3, r3, lsl #2
   2b340:	add	r0, r0, r3, lsl #2
   2b344:	str	r0, [r4, #24]
   2b348:	b	2b2cc <__flatcc_fb_default_error_out@@Base+0x90>
   2b34c:	lsl	r3, ip, #1
   2b350:	add	r1, r3, ip, lsl #3
   2b354:	lsl	r1, r1, #2
   2b358:	b	2b320 <__flatcc_fb_default_error_out@@Base+0xe4>
   2b35c:	bl	2b25c <__flatcc_fb_default_error_out@@Base+0x20>
   2b360:	ldr	r3, [r0, #40]	; 0x28
   2b364:	strd	r4, [sp, #-16]!
   2b368:	mov	r4, r0
   2b36c:	str	r6, [sp, #8]
   2b370:	ldr	r6, [r0, #24]
   2b374:	str	lr, [sp, #12]
   2b378:	add	r5, r3, #20
   2b37c:	str	r5, [r0, #40]	; 0x28
   2b380:	cmp	r5, r6
   2b384:	beq	2b42c <__flatcc_fb_default_error_out@@Base+0x1f0>
   2b388:	ldr	r3, [r3, #36]	; 0x24
   2b38c:	cmn	r3, #964	; 0x3c4
   2b390:	bne	2b418 <__flatcc_fb_default_error_out@@Base+0x1dc>
   2b394:	ldr	ip, [r0, #44]	; 0x2c
   2b398:	ldr	r2, [r0, #52]	; 0x34
   2b39c:	b	2b3d0 <__flatcc_fb_default_error_out@@Base+0x194>
   2b3a0:	ldr	r1, [r4, #36]	; 0x24
   2b3a4:	add	r0, r5, #20
   2b3a8:	cmp	r0, r6
   2b3ac:	str	r2, [r4, #52]	; 0x34
   2b3b0:	stm	r3, {r1, r5}
   2b3b4:	str	r3, [r4, #36]	; 0x24
   2b3b8:	str	r0, [r4, #40]	; 0x28
   2b3bc:	beq	2b430 <__flatcc_fb_default_error_out@@Base+0x1f4>
   2b3c0:	ldr	r3, [r0, #16]
   2b3c4:	cmn	r3, #964	; 0x3c4
   2b3c8:	bne	2b41c <__flatcc_fb_default_error_out@@Base+0x1e0>
   2b3cc:	mov	r5, r0
   2b3d0:	add	r1, r2, #16
   2b3d4:	cmp	r1, ip
   2b3d8:	movls	r3, r2
   2b3dc:	movls	r2, r1
   2b3e0:	bls	2b3a0 <__flatcc_fb_default_error_out@@Base+0x164>
   2b3e4:	mov	r1, #1
   2b3e8:	mov	r0, #65536	; 0x10000
   2b3ec:	bl	13e7c <calloc@plt>
   2b3f0:	cmp	r0, #0
   2b3f4:	beq	2b454 <__flatcc_fb_default_error_out@@Base+0x218>
   2b3f8:	ldr	r1, [r4, #48]	; 0x30
   2b3fc:	add	ip, r0, #65536	; 0x10000
   2b400:	add	r3, r0, #16
   2b404:	add	r2, r0, #32
   2b408:	str	ip, [r4, #44]	; 0x2c
   2b40c:	str	r0, [r4, #48]	; 0x30
   2b410:	str	r1, [r0]
   2b414:	b	2b3a0 <__flatcc_fb_default_error_out@@Base+0x164>
   2b418:	mov	r0, r5
   2b41c:	ldrd	r4, [sp]
   2b420:	ldr	r6, [sp, #8]
   2b424:	add	sp, sp, #12
   2b428:	pop	{pc}		; (ldr pc, [sp], #4)
   2b42c:	mov	r5, r3
   2b430:	movw	r3, #26812	; 0x68bc
   2b434:	movt	r3, #5
   2b438:	str	r5, [r4, #40]	; 0x28
   2b43c:	movw	r1, #27108	; 0x69e4
   2b440:	movt	r1, #5
   2b444:	movw	r0, #35672	; 0x8b58
   2b448:	movt	r0, #4
   2b44c:	movw	r2, #341	; 0x155
   2b450:	bl	14014 <__assert_fail@plt>
   2b454:	movw	r3, #41128	; 0xa0a8
   2b458:	movt	r3, #6
   2b45c:	movw	r0, #62968	; 0xf5f8
   2b460:	movt	r0, #3
   2b464:	ldr	r3, [r3]
   2b468:	mov	r2, #34	; 0x22
   2b46c:	mov	r1, #1
   2b470:	bl	13ef4 <fwrite@plt>
   2b474:	mov	r0, #1
   2b478:	bl	13f48 <exit@plt>

0002b47c <__flatcc_fb_print_error@@Base>:
   2b47c:	push	{r1, r2, r3}
   2b480:	mov	r1, #200	; 0xc8
   2b484:	strd	r4, [sp, #-12]!
   2b488:	mov	r5, r0
   2b48c:	str	lr, [sp, #8]
   2b490:	sub	sp, sp, #208	; 0xd0
   2b494:	add	ip, sp, #224	; 0xe0
   2b498:	add	r0, sp, #8
   2b49c:	ldr	r2, [sp, #220]	; 0xdc
   2b4a0:	mov	r3, ip
   2b4a4:	str	ip, [sp, #4]
   2b4a8:	bl	13fd8 <vsnprintf@plt>
   2b4ac:	cmp	r0, #199	; 0xc7
   2b4b0:	movle	r4, r0
   2b4b4:	bgt	2b4e8 <__flatcc_fb_print_error@@Base+0x6c>
   2b4b8:	ldr	r3, [r5, #8]
   2b4bc:	add	r1, sp, #8
   2b4c0:	mov	r2, r4
   2b4c4:	ldr	r0, [r5, #12]
   2b4c8:	blx	r3
   2b4cc:	mov	r0, r4
   2b4d0:	add	sp, sp, #208	; 0xd0
   2b4d4:	ldrd	r4, [sp]
   2b4d8:	ldr	lr, [sp, #8]
   2b4dc:	add	sp, sp, #12
   2b4e0:	add	sp, sp, #12
   2b4e4:	bx	lr
   2b4e8:	movw	r3, #27180	; 0x6a2c
   2b4ec:	movt	r3, #5
   2b4f0:	ldrb	r2, [r3, #4]
   2b4f4:	mov	r4, #199	; 0xc7
   2b4f8:	ldr	r3, [r3]
   2b4fc:	str	r3, [sp, #203]	; 0xcb
   2b500:	strb	r2, [sp, #207]	; 0xcf
   2b504:	b	2b4b8 <__flatcc_fb_print_error@@Base+0x3c>

0002b508 <__flatcc_error_find_file_of_token@@Base>:
   2b508:	cmp	r0, #0
   2b50c:	beq	2b534 <__flatcc_error_find_file_of_token@@Base+0x2c>
   2b510:	ldr	r3, [r0, #20]
   2b514:	cmp	r3, r1
   2b518:	bhi	2b528 <__flatcc_error_find_file_of_token@@Base+0x20>
   2b51c:	ldr	r3, [r0, #24]
   2b520:	cmp	r3, r1
   2b524:	bhi	2b540 <__flatcc_error_find_file_of_token@@Base+0x38>
   2b528:	ldr	r0, [r0]
   2b52c:	cmp	r0, #0
   2b530:	bne	2b510 <__flatcc_error_find_file_of_token@@Base+0x8>
   2b534:	movw	r0, #39472	; 0x9a30
   2b538:	movt	r0, #4
   2b53c:	bx	lr
   2b540:	ldr	r0, [r0, #520]	; 0x208
   2b544:	bx	lr

0002b548 <__flatcc_error_report@@Base>:
   2b548:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b54c:	mov	r4, r0
   2b550:	mov	r0, r3
   2b554:	strd	r6, [sp, #8]
   2b558:	adds	r6, r1, #0
   2b55c:	mov	ip, r1
   2b560:	str	r8, [sp, #16]
   2b564:	movne	r6, #1
   2b568:	mov	r5, r2
   2b56c:	str	lr, [sp, #20]
   2b570:	sub	sp, sp, #40	; 0x28
   2b574:	ldr	lr, [sp, #64]	; 0x40
   2b578:	ldr	r1, [sp, #68]	; 0x44
   2b57c:	cmp	lr, #0
   2b580:	moveq	r3, r6
   2b584:	movne	r3, #0
   2b588:	cmp	r3, #0
   2b58c:	movw	r3, #39472	; 0x9a30
   2b590:	movt	r3, #4
   2b594:	ldrne	lr, [ip]
   2b598:	ldrne	r1, [ip, #4]
   2b59c:	cmp	r2, #0
   2b5a0:	moveq	r5, r3
   2b5a4:	cmp	lr, #0
   2b5a8:	moveq	r1, lr
   2b5ac:	moveq	lr, r3
   2b5b0:	cmp	r0, #0
   2b5b4:	moveq	r3, r6
   2b5b8:	movne	r3, #0
   2b5bc:	cmp	r3, #0
   2b5c0:	beq	2b644 <__flatcc_error_report@@Base+0xfc>
   2b5c4:	cmp	r4, #0
   2b5c8:	beq	2b5f4 <__flatcc_error_report@@Base+0xac>
   2b5cc:	mov	r3, r4
   2b5d0:	ldr	r2, [r3, #20]
   2b5d4:	cmp	ip, r2
   2b5d8:	bcc	2b5e8 <__flatcc_error_report@@Base+0xa0>
   2b5dc:	ldr	r2, [r3, #24]
   2b5e0:	cmp	ip, r2
   2b5e4:	bcc	2b7a0 <__flatcc_error_report@@Base+0x258>
   2b5e8:	ldr	r3, [r3]
   2b5ec:	cmp	r3, #0
   2b5f0:	bne	2b5d0 <__flatcc_error_report@@Base+0x88>
   2b5f4:	movw	r2, #39472	; 0x9a30
   2b5f8:	movt	r2, #4
   2b5fc:	stmib	sp, {r1, lr}
   2b600:	mov	r0, r4
   2b604:	movw	r1, #27188	; 0x6a34
   2b608:	movt	r1, #5
   2b60c:	str	r5, [sp, #12]
   2b610:	ldr	r3, [ip, #12]
   2b614:	str	r3, [sp]
   2b618:	ldr	r3, [ip, #8]
   2b61c:	bl	2b47c <__flatcc_fb_print_error@@Base>
   2b620:	ldr	r3, [r4, #108]	; 0x6c
   2b624:	add	r3, r3, #1
   2b628:	str	r3, [r4, #108]	; 0x6c
   2b62c:	add	sp, sp, #40	; 0x28
   2b630:	ldrd	r4, [sp]
   2b634:	ldrd	r6, [sp, #8]
   2b638:	ldr	r8, [sp, #16]
   2b63c:	add	sp, sp, #20
   2b640:	pop	{pc}		; (ldr pc, [sp], #4)
   2b644:	cmp	r0, #0
   2b648:	moveq	r6, #0
   2b64c:	cmp	r6, #0
   2b650:	beq	2b70c <__flatcc_error_report@@Base+0x1c4>
   2b654:	cmp	r4, #0
   2b658:	beq	2b7d4 <__flatcc_error_report@@Base+0x28c>
   2b65c:	mov	r3, r4
   2b660:	ldr	r2, [r3, #20]
   2b664:	cmp	ip, r2
   2b668:	bcc	2b678 <__flatcc_error_report@@Base+0x130>
   2b66c:	ldr	r2, [r3, #24]
   2b670:	cmp	ip, r2
   2b674:	bcc	2b7a8 <__flatcc_error_report@@Base+0x260>
   2b678:	ldr	r3, [r3]
   2b67c:	cmp	r3, #0
   2b680:	bne	2b660 <__flatcc_error_report@@Base+0x118>
   2b684:	movw	r2, #39472	; 0x9a30
   2b688:	movt	r2, #4
   2b68c:	mov	r3, r4
   2b690:	ldr	r6, [r3, #20]
   2b694:	cmp	r0, r6
   2b698:	bcc	2b6a8 <__flatcc_error_report@@Base+0x160>
   2b69c:	ldr	r6, [r3, #24]
   2b6a0:	cmp	r0, r6
   2b6a4:	bcc	2b7b0 <__flatcc_error_report@@Base+0x268>
   2b6a8:	ldr	r3, [r3]
   2b6ac:	cmp	r3, #0
   2b6b0:	bne	2b690 <__flatcc_error_report@@Base+0x148>
   2b6b4:	movw	r3, #39472	; 0x9a30
   2b6b8:	movt	r3, #4
   2b6bc:	ldr	r6, [r0]
   2b6c0:	str	r1, [sp, #4]
   2b6c4:	movw	r1, #27220	; 0x6a54
   2b6c8:	movt	r1, #5
   2b6cc:	ldr	r8, [r0, #4]
   2b6d0:	str	lr, [sp, #8]
   2b6d4:	ldr	r7, [r0, #8]
   2b6d8:	str	r5, [sp, #12]
   2b6dc:	ldr	lr, [r0, #12]
   2b6e0:	mov	r0, r4
   2b6e4:	str	r3, [sp, #16]
   2b6e8:	str	r7, [sp, #20]
   2b6ec:	str	r8, [sp, #28]
   2b6f0:	str	lr, [sp, #24]
   2b6f4:	str	r6, [sp, #32]
   2b6f8:	ldr	r3, [ip, #12]
   2b6fc:	str	r3, [sp]
   2b700:	ldr	r3, [ip, #8]
   2b704:	bl	2b47c <__flatcc_fb_print_error@@Base>
   2b708:	b	2b620 <__flatcc_error_report@@Base+0xd8>
   2b70c:	orrs	r3, ip, r0
   2b710:	beq	2b788 <__flatcc_error_report@@Base+0x240>
   2b714:	cmp	r0, #0
   2b718:	beq	2b7c0 <__flatcc_error_report@@Base+0x278>
   2b71c:	cmp	r4, #0
   2b720:	beq	2b74c <__flatcc_error_report@@Base+0x204>
   2b724:	mov	r3, r4
   2b728:	ldr	r2, [r3, #20]
   2b72c:	cmp	r0, r2
   2b730:	bcc	2b740 <__flatcc_error_report@@Base+0x1f8>
   2b734:	ldr	r2, [r3, #24]
   2b738:	cmp	r0, r2
   2b73c:	bcc	2b7b8 <__flatcc_error_report@@Base+0x270>
   2b740:	ldr	r3, [r3]
   2b744:	cmp	r3, #0
   2b748:	bne	2b728 <__flatcc_error_report@@Base+0x1e0>
   2b74c:	movw	r3, #39472	; 0x9a30
   2b750:	movt	r3, #4
   2b754:	ldr	ip, [r0]
   2b758:	mov	r2, r5
   2b75c:	movw	r1, #27284	; 0x6a94
   2b760:	movt	r1, #5
   2b764:	ldmib	r0, {r5, lr}
   2b768:	str	ip, [sp, #12]
   2b76c:	ldr	ip, [r0, #12]
   2b770:	mov	r0, r4
   2b774:	str	lr, [sp]
   2b778:	str	ip, [sp, #4]
   2b77c:	str	r5, [sp, #8]
   2b780:	bl	2b47c <__flatcc_fb_print_error@@Base>
   2b784:	b	2b620 <__flatcc_error_report@@Base+0xd8>
   2b788:	mov	r2, r5
   2b78c:	movw	r1, #27272	; 0x6a88
   2b790:	movt	r1, #5
   2b794:	mov	r0, r4
   2b798:	bl	2b47c <__flatcc_fb_print_error@@Base>
   2b79c:	b	2b620 <__flatcc_error_report@@Base+0xd8>
   2b7a0:	ldr	r2, [r3, #520]	; 0x208
   2b7a4:	b	2b5fc <__flatcc_error_report@@Base+0xb4>
   2b7a8:	ldr	r2, [r3, #520]	; 0x208
   2b7ac:	b	2b68c <__flatcc_error_report@@Base+0x144>
   2b7b0:	ldr	r3, [r3, #520]	; 0x208
   2b7b4:	b	2b6bc <__flatcc_error_report@@Base+0x174>
   2b7b8:	ldr	r3, [r3, #520]	; 0x208
   2b7bc:	b	2b754 <__flatcc_error_report@@Base+0x20c>
   2b7c0:	movw	r1, #27316	; 0x6ab4
   2b7c4:	movt	r1, #5
   2b7c8:	mov	r0, r4
   2b7cc:	bl	2b47c <__flatcc_fb_print_error@@Base>
   2b7d0:	b	2b620 <__flatcc_error_report@@Base+0xd8>
   2b7d4:	movw	r2, #39472	; 0x9a30
   2b7d8:	movt	r2, #4
   2b7dc:	mov	r3, r2
   2b7e0:	b	2b6bc <__flatcc_error_report@@Base+0x174>
   2b7e4:	ldr	r3, [r0, #52]	; 0x34
   2b7e8:	strd	r4, [sp, #-16]!
   2b7ec:	mov	r5, r1
   2b7f0:	mov	r4, r0
   2b7f4:	ldr	r1, [r0, #44]	; 0x2c
   2b7f8:	str	r6, [sp, #8]
   2b7fc:	str	lr, [sp, #12]
   2b800:	sub	sp, sp, #8
   2b804:	add	r2, r3, #16
   2b808:	ldr	r6, [r0, #40]	; 0x28
   2b80c:	cmp	r2, r1
   2b810:	bhi	2b8a8 <__flatcc_error_report@@Base+0x360>
   2b814:	mov	r0, r4
   2b818:	str	r2, [r4, #52]	; 0x34
   2b81c:	str	r6, [r3, #4]
   2b820:	str	r3, [r5]
   2b824:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2b828:	ldr	r3, [r4, #40]	; 0x28
   2b82c:	ldr	r3, [r3, #16]
   2b830:	cmp	r3, #46	; 0x2e
   2b834:	beq	2b84c <__flatcc_error_report@@Base+0x304>
   2b838:	add	sp, sp, #8
   2b83c:	ldrd	r4, [sp]
   2b840:	ldr	r6, [sp, #8]
   2b844:	add	sp, sp, #12
   2b848:	pop	{pc}		; (ldr pc, [sp], #4)
   2b84c:	ldr	r6, [r5]
   2b850:	mov	r0, r4
   2b854:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2b858:	ldr	r5, [r4, #40]	; 0x28
   2b85c:	ldr	r3, [r5, #16]
   2b860:	cmp	r3, #9
   2b864:	bne	2b910 <__flatcc_error_report@@Base+0x3c8>
   2b868:	ldr	r1, [r4, #44]	; 0x2c
   2b86c:	ldr	r3, [r4, #52]	; 0x34
   2b870:	add	r2, r3, #16
   2b874:	cmp	r2, r1
   2b878:	bhi	2b8dc <__flatcc_error_report@@Base+0x394>
   2b87c:	mov	r0, r4
   2b880:	str	r2, [r4, #52]	; 0x34
   2b884:	str	r5, [r3, #4]
   2b888:	str	r3, [r6]
   2b88c:	mov	r6, r3
   2b890:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2b894:	ldr	r3, [r4, #40]	; 0x28
   2b898:	ldr	r3, [r3, #16]
   2b89c:	cmp	r3, #46	; 0x2e
   2b8a0:	bne	2b838 <__flatcc_error_report@@Base+0x2f0>
   2b8a4:	b	2b850 <__flatcc_error_report@@Base+0x308>
   2b8a8:	mov	r1, #1
   2b8ac:	mov	r0, #65536	; 0x10000
   2b8b0:	bl	13e7c <calloc@plt>
   2b8b4:	cmp	r0, #0
   2b8b8:	beq	2b938 <__flatcc_error_report@@Base+0x3f0>
   2b8bc:	ldr	r1, [r4, #48]	; 0x30
   2b8c0:	add	ip, r0, #65536	; 0x10000
   2b8c4:	add	r3, r0, #16
   2b8c8:	add	r2, r0, #32
   2b8cc:	str	ip, [r4, #44]	; 0x2c
   2b8d0:	str	r0, [r4, #48]	; 0x30
   2b8d4:	str	r1, [r0]
   2b8d8:	b	2b814 <__flatcc_error_report@@Base+0x2cc>
   2b8dc:	mov	r1, #1
   2b8e0:	mov	r0, #65536	; 0x10000
   2b8e4:	bl	13e7c <calloc@plt>
   2b8e8:	cmp	r0, #0
   2b8ec:	beq	2b938 <__flatcc_error_report@@Base+0x3f0>
   2b8f0:	ldr	r1, [r4, #48]	; 0x30
   2b8f4:	add	ip, r0, #65536	; 0x10000
   2b8f8:	add	r3, r0, #16
   2b8fc:	add	r2, r0, #32
   2b900:	str	ip, [r4, #44]	; 0x2c
   2b904:	str	r0, [r4, #48]	; 0x30
   2b908:	str	r1, [r0]
   2b90c:	b	2b87c <__flatcc_error_report@@Base+0x334>
   2b910:	mov	ip, #0
   2b914:	mov	r1, r5
   2b918:	mov	r0, r4
   2b91c:	mov	r3, ip
   2b920:	movw	r2, #27352	; 0x6ad8
   2b924:	movt	r2, #5
   2b928:	str	ip, [sp]
   2b92c:	str	ip, [sp, #4]
   2b930:	bl	2b548 <__flatcc_error_report@@Base>
   2b934:	b	2b838 <__flatcc_error_report@@Base+0x2f0>
   2b938:	bl	2b25c <__flatcc_fb_default_error_out@@Base+0x20>
   2b93c:	strd	r4, [sp, #-20]!	; 0xffffffec
   2b940:	mov	r3, #1
   2b944:	mov	r4, r0
   2b948:	strd	r6, [sp, #8]
   2b94c:	mov	r7, r1
   2b950:	ldr	r6, [r0, #40]	; 0x28
   2b954:	str	lr, [sp, #16]
   2b958:	sub	sp, sp, #12
   2b95c:	strh	r3, [r1, #8]
   2b960:	ldr	r3, [r6, #16]
   2b964:	cmp	r3, #91	; 0x5b
   2b968:	beq	2bb34 <__flatcc_error_report@@Base+0x5ec>
   2b96c:	cmn	r3, #984	; 0x3d8
   2b970:	ble	2b9f8 <__flatcc_error_report@@Base+0x4b0>
   2b974:	movw	r2, #64562	; 0xfc32
   2b978:	movt	r2, #65535	; 0xffff
   2b97c:	cmp	r3, r2
   2b980:	beq	2bc68 <__flatcc_error_report@@Base+0x720>
   2b984:	ble	2bb08 <__flatcc_error_report@@Base+0x5c0>
   2b988:	cmp	r3, #9
   2b98c:	beq	2bc54 <__flatcc_error_report@@Base+0x70c>
   2b990:	cmp	r3, #93	; 0x5d
   2b994:	moveq	r5, #0
   2b998:	beq	2bbb4 <__flatcc_error_report@@Base+0x66c>
   2b99c:	cmn	r3, #972	; 0x3cc
   2b9a0:	beq	2ba24 <__flatcc_error_report@@Base+0x4dc>
   2b9a4:	mov	r5, #0
   2b9a8:	movw	r2, #27460	; 0x6b44
   2b9ac:	movt	r2, #5
   2b9b0:	mov	ip, #0
   2b9b4:	mov	r3, ip
   2b9b8:	mov	r1, ip
   2b9bc:	str	ip, [sp]
   2b9c0:	mov	r0, r4
   2b9c4:	str	ip, [sp, #4]
   2b9c8:	bl	2b548 <__flatcc_error_report@@Base>
   2b9cc:	ldr	r3, [r4, #40]	; 0x28
   2b9d0:	ldr	r3, [r3, #16]
   2b9d4:	cmp	r3, #93	; 0x5d
   2b9d8:	beq	2ba4c <__flatcc_error_report@@Base+0x504>
   2b9dc:	cmp	r5, #0
   2b9e0:	bne	2ba60 <__flatcc_error_report@@Base+0x518>
   2b9e4:	add	sp, sp, #12
   2b9e8:	ldrd	r4, [sp]
   2b9ec:	ldrd	r6, [sp, #8]
   2b9f0:	add	sp, sp, #16
   2b9f4:	pop	{pc}		; (ldr pc, [sp], #4)
   2b9f8:	mvn	r2, #984	; 0x3d8
   2b9fc:	cmp	r3, r2
   2ba00:	bge	2ba24 <__flatcc_error_report@@Base+0x4dc>
   2ba04:	cmn	r3, #988	; 0x3dc
   2ba08:	bge	2bae8 <__flatcc_error_report@@Base+0x5a0>
   2ba0c:	cmn	r3, #996	; 0x3e4
   2ba10:	bge	2ba24 <__flatcc_error_report@@Base+0x4dc>
   2ba14:	add	r3, r3, #996	; 0x3e4
   2ba18:	add	r3, r3, #3
   2ba1c:	cmp	r3, #1
   2ba20:	bhi	2b9a4 <__flatcc_error_report@@Base+0x45c>
   2ba24:	mov	r5, #0
   2ba28:	mov	r3, #8
   2ba2c:	str	r6, [r7]
   2ba30:	mov	r0, r4
   2ba34:	strh	r3, [r7, #8]
   2ba38:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ba3c:	ldr	r3, [r4, #40]	; 0x28
   2ba40:	ldr	r3, [r3, #16]
   2ba44:	cmp	r3, #93	; 0x5d
   2ba48:	bne	2b9dc <__flatcc_error_report@@Base+0x494>
   2ba4c:	sub	r5, r5, #1
   2ba50:	mov	r0, r4
   2ba54:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ba58:	cmn	r5, #1
   2ba5c:	bne	2b9cc <__flatcc_error_report@@Base+0x484>
   2ba60:	mov	r5, #0
   2ba64:	mov	r3, r6
   2ba68:	movw	r2, #27484	; 0x6b5c
   2ba6c:	movt	r2, #5
   2ba70:	mov	r1, r5
   2ba74:	mov	r0, r4
   2ba78:	str	r5, [sp]
   2ba7c:	str	r5, [sp, #4]
   2ba80:	bl	2b548 <__flatcc_error_report@@Base>
   2ba84:	ldr	r7, [r4, #40]	; 0x28
   2ba88:	ldr	r3, [r7, #16]
   2ba8c:	cmp	r3, #93	; 0x5d
   2ba90:	bne	2b9e4 <__flatcc_error_report@@Base+0x49c>
   2ba94:	mov	r0, r4
   2ba98:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ba9c:	mov	r3, r6
   2baa0:	mov	r1, r7
   2baa4:	str	r5, [sp]
   2baa8:	movw	r2, #27520	; 0x6b80
   2baac:	movt	r2, #5
   2bab0:	str	r5, [sp, #4]
   2bab4:	mov	r0, r4
   2bab8:	bl	2b548 <__flatcc_error_report@@Base>
   2babc:	ldr	r3, [r4, #40]	; 0x28
   2bac0:	ldr	r3, [r3, #16]
   2bac4:	cmp	r3, #93	; 0x5d
   2bac8:	bne	2b9e4 <__flatcc_error_report@@Base+0x49c>
   2bacc:	mov	r0, r4
   2bad0:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2bad4:	ldr	r3, [r4, #40]	; 0x28
   2bad8:	ldr	r3, [r3, #16]
   2badc:	cmp	r3, #93	; 0x5d
   2bae0:	bne	2b9e4 <__flatcc_error_report@@Base+0x49c>
   2bae4:	b	2bacc <__flatcc_error_report@@Base+0x584>
   2bae8:	movw	r2, #64549	; 0xfc25
   2baec:	movt	r2, #65535	; 0xffff
   2baf0:	cmp	r3, r2
   2baf4:	bne	2b9a4 <__flatcc_error_report@@Base+0x45c>
   2baf8:	mov	r5, #0
   2bafc:	mov	r3, #8
   2bb00:	str	r6, [r7]
   2bb04:	b	2ba30 <__flatcc_error_report@@Base+0x4e8>
   2bb08:	movw	r2, #64554	; 0xfc2a
   2bb0c:	movt	r2, #65535	; 0xffff
   2bb10:	cmp	r3, r2
   2bb14:	blt	2b9a4 <__flatcc_error_report@@Base+0x45c>
   2bb18:	cmn	r3, #976	; 0x3d0
   2bb1c:	blt	2ba24 <__flatcc_error_report@@Base+0x4dc>
   2bb20:	movw	r2, #64561	; 0xfc31
   2bb24:	movt	r2, #65535	; 0xffff
   2bb28:	cmp	r3, r2
   2bb2c:	bne	2b9a4 <__flatcc_error_report@@Base+0x45c>
   2bb30:	b	2ba24 <__flatcc_error_report@@Base+0x4dc>
   2bb34:	mov	r5, #0
   2bb38:	mov	r0, r4
   2bb3c:	add	r5, r5, #1
   2bb40:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2bb44:	ldr	r2, [r4, #40]	; 0x28
   2bb48:	ldr	r3, [r2, #16]
   2bb4c:	cmp	r3, #91	; 0x5b
   2bb50:	beq	2bb38 <__flatcc_error_report@@Base+0x5f0>
   2bb54:	cmp	r5, #1
   2bb58:	beq	2bca4 <__flatcc_error_report@@Base+0x75c>
   2bb5c:	mov	ip, #0
   2bb60:	movw	r2, #27392	; 0x6b00
   2bb64:	movt	r2, #5
   2bb68:	mov	r3, ip
   2bb6c:	mov	r1, r6
   2bb70:	mov	r0, r4
   2bb74:	str	ip, [sp]
   2bb78:	str	ip, [sp, #4]
   2bb7c:	bl	2b548 <__flatcc_error_report@@Base>
   2bb80:	ldr	r2, [r4, #40]	; 0x28
   2bb84:	ldr	r3, [r2, #16]
   2bb88:	cmn	r3, #984	; 0x3d8
   2bb8c:	ble	2bbc4 <__flatcc_error_report@@Base+0x67c>
   2bb90:	movw	r1, #64562	; 0xfc32
   2bb94:	movt	r1, #65535	; 0xffff
   2bb98:	cmp	r3, r1
   2bb9c:	beq	2bc98 <__flatcc_error_report@@Base+0x750>
   2bba0:	ble	2bc00 <__flatcc_error_report@@Base+0x6b8>
   2bba4:	cmp	r3, #9
   2bba8:	beq	2bc84 <__flatcc_error_report@@Base+0x73c>
   2bbac:	cmp	r3, #93	; 0x5d
   2bbb0:	bne	2bbf4 <__flatcc_error_report@@Base+0x6ac>
   2bbb4:	movw	r2, #27432	; 0x6b28
   2bbb8:	movt	r2, #5
   2bbbc:	mov	ip, #0
   2bbc0:	b	2b9b4 <__flatcc_error_report@@Base+0x46c>
   2bbc4:	mvn	r1, #984	; 0x3d8
   2bbc8:	cmp	r3, r1
   2bbcc:	bge	2bc28 <__flatcc_error_report@@Base+0x6e0>
   2bbd0:	cmn	r3, #988	; 0x3dc
   2bbd4:	bge	2bc40 <__flatcc_error_report@@Base+0x6f8>
   2bbd8:	cmn	r3, #996	; 0x3e4
   2bbdc:	bge	2bc28 <__flatcc_error_report@@Base+0x6e0>
   2bbe0:	add	r3, r3, #996	; 0x3e4
   2bbe4:	add	r3, r3, #3
   2bbe8:	cmp	r3, #1
   2bbec:	bhi	2b9a8 <__flatcc_error_report@@Base+0x460>
   2bbf0:	b	2bc28 <__flatcc_error_report@@Base+0x6e0>
   2bbf4:	cmn	r3, #972	; 0x3cc
   2bbf8:	bne	2b9a8 <__flatcc_error_report@@Base+0x460>
   2bbfc:	b	2bc28 <__flatcc_error_report@@Base+0x6e0>
   2bc00:	movw	r1, #64554	; 0xfc2a
   2bc04:	movt	r1, #65535	; 0xffff
   2bc08:	cmp	r3, r1
   2bc0c:	blt	2b9a8 <__flatcc_error_report@@Base+0x460>
   2bc10:	cmn	r3, #976	; 0x3d0
   2bc14:	blt	2bc28 <__flatcc_error_report@@Base+0x6e0>
   2bc18:	movw	r1, #64561	; 0xfc31
   2bc1c:	movt	r1, #65535	; 0xffff
   2bc20:	cmp	r3, r1
   2bc24:	bne	2b9a8 <__flatcc_error_report@@Base+0x460>
   2bc28:	mov	r3, #7
   2bc2c:	mov	r0, r4
   2bc30:	str	r2, [r7]
   2bc34:	strh	r3, [r7, #8]
   2bc38:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2bc3c:	b	2ba3c <__flatcc_error_report@@Base+0x4f4>
   2bc40:	movw	r1, #64549	; 0xfc25
   2bc44:	movt	r1, #65535	; 0xffff
   2bc48:	cmp	r3, r1
   2bc4c:	bne	2b9a8 <__flatcc_error_report@@Base+0x460>
   2bc50:	b	2bc28 <__flatcc_error_report@@Base+0x6e0>
   2bc54:	bl	2b7e4 <__flatcc_error_report@@Base+0x29c>
   2bc58:	mov	r5, #0
   2bc5c:	mov	r3, #12
   2bc60:	strh	r3, [r7, #8]
   2bc64:	b	2b9cc <__flatcc_error_report@@Base+0x484>
   2bc68:	mov	r3, #10
   2bc6c:	mov	r0, r4
   2bc70:	str	r6, [r1]
   2bc74:	mov	r5, #0
   2bc78:	strh	r3, [r7, #8]
   2bc7c:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2bc80:	b	2ba3c <__flatcc_error_report@@Base+0x4f4>
   2bc84:	mov	r1, r7
   2bc88:	mov	r0, r4
   2bc8c:	bl	2b7e4 <__flatcc_error_report@@Base+0x29c>
   2bc90:	mov	r3, #11
   2bc94:	b	2bc60 <__flatcc_error_report@@Base+0x718>
   2bc98:	mov	r3, #9
   2bc9c:	str	r2, [r7]
   2bca0:	b	2ba30 <__flatcc_error_report@@Base+0x4e8>
   2bca4:	cmn	r3, #984	; 0x3d8
   2bca8:	ble	2bce4 <__flatcc_error_report@@Base+0x79c>
   2bcac:	movw	r1, #64562	; 0xfc32
   2bcb0:	movt	r1, #65535	; 0xffff
   2bcb4:	cmp	r3, r1
   2bcb8:	beq	2bc98 <__flatcc_error_report@@Base+0x750>
   2bcbc:	ble	2bd14 <__flatcc_error_report@@Base+0x7cc>
   2bcc0:	cmp	r3, #9
   2bcc4:	beq	2bc84 <__flatcc_error_report@@Base+0x73c>
   2bcc8:	cmp	r3, #93	; 0x5d
   2bccc:	beq	2bbb4 <__flatcc_error_report@@Base+0x66c>
   2bcd0:	cmn	r3, #972	; 0x3cc
   2bcd4:	bne	2b9a8 <__flatcc_error_report@@Base+0x460>
   2bcd8:	mov	r3, #7
   2bcdc:	str	r2, [r7]
   2bce0:	b	2ba30 <__flatcc_error_report@@Base+0x4e8>
   2bce4:	mvn	r1, #984	; 0x3d8
   2bce8:	cmp	r3, r1
   2bcec:	bge	2bcd8 <__flatcc_error_report@@Base+0x790>
   2bcf0:	cmn	r3, #988	; 0x3dc
   2bcf4:	bge	2bd40 <__flatcc_error_report@@Base+0x7f8>
   2bcf8:	cmn	r3, #996	; 0x3e4
   2bcfc:	bge	2bcd8 <__flatcc_error_report@@Base+0x790>
   2bd00:	add	r3, r3, #996	; 0x3e4
   2bd04:	add	r3, r3, #3
   2bd08:	cmp	r3, #1
   2bd0c:	bhi	2b9a8 <__flatcc_error_report@@Base+0x460>
   2bd10:	b	2bcd8 <__flatcc_error_report@@Base+0x790>
   2bd14:	movw	r1, #64554	; 0xfc2a
   2bd18:	movt	r1, #65535	; 0xffff
   2bd1c:	cmp	r3, r1
   2bd20:	blt	2b9a8 <__flatcc_error_report@@Base+0x460>
   2bd24:	cmn	r3, #976	; 0x3d0
   2bd28:	blt	2bcd8 <__flatcc_error_report@@Base+0x790>
   2bd2c:	movw	r1, #64561	; 0xfc31
   2bd30:	movt	r1, #65535	; 0xffff
   2bd34:	cmp	r3, r1
   2bd38:	beq	2bcd8 <__flatcc_error_report@@Base+0x790>
   2bd3c:	b	2b9a8 <__flatcc_error_report@@Base+0x460>
   2bd40:	movw	r1, #64549	; 0xfc25
   2bd44:	movt	r1, #65535	; 0xffff
   2bd48:	cmp	r3, r1
   2bd4c:	bne	2b9a8 <__flatcc_error_report@@Base+0x460>
   2bd50:	b	2bcd8 <__flatcc_error_report@@Base+0x790>
   2bd54:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2bd58:	mov	r4, r0
   2bd5c:	mov	r5, r1
   2bd60:	strd	r6, [sp, #8]
   2bd64:	movw	r7, #27620	; 0x6be4
   2bd68:	movt	r7, #5
   2bd6c:	movw	r6, #27576	; 0x6bb8
   2bd70:	movt	r6, #5
   2bd74:	str	r8, [sp, #16]
   2bd78:	movw	r8, #27624	; 0x6be8
   2bd7c:	movt	r8, #5
   2bd80:	str	lr, [sp, #20]
   2bd84:	sub	sp, sp, #8
   2bd88:	ldr	r1, [r4, #40]	; 0x28
   2bd8c:	ldr	r3, [r1, #16]
   2bd90:	sub	r3, r3, #6
   2bd94:	cmp	r3, #17
   2bd98:	ldrls	pc, [pc, r3, lsl #2]
   2bd9c:	b	2bde8 <__flatcc_error_report@@Base+0x8a0>
   2bda0:	ldrdeq	fp, [r2], -r0
   2bda4:	andeq	fp, r2, r8, ror #27
   2bda8:	andeq	fp, r2, r8, ror #27
   2bdac:	andeq	fp, r2, r8, ror #27
   2bdb0:	andeq	fp, r2, r8, ror #27
   2bdb4:	andeq	fp, r2, r8, ror #27
   2bdb8:	andeq	fp, r2, r8, ror #27
   2bdbc:	andeq	fp, r2, r8, ror #27
   2bdc0:	andeq	fp, r2, r8, ror #27
   2bdc4:	andeq	fp, r2, r8, ror #27
   2bdc8:	andeq	fp, r2, r8, ror #27
   2bdcc:	andeq	fp, r2, r8, ror #27
   2bdd0:	andeq	fp, r2, r8, lsr #29
   2bdd4:	andeq	fp, r2, r8, ror #27
   2bdd8:	muleq	r2, r0, lr
   2bddc:	andeq	fp, r2, ip, asr lr
   2bde0:	andeq	fp, r2, r4, lsl lr
   2bde4:	andeq	fp, r2, r4, lsl lr
   2bde8:	mov	ip, #0
   2bdec:	movw	r2, #27656	; 0x6c08
   2bdf0:	movt	r2, #5
   2bdf4:	mov	r3, ip
   2bdf8:	mov	r0, r4
   2bdfc:	str	ip, [sp]
   2be00:	str	ip, [sp, #4]
   2be04:	bl	2b548 <__flatcc_error_report@@Base>
   2be08:	mov	r3, #1
   2be0c:	ldr	r1, [r4, #40]	; 0x28
   2be10:	strh	r3, [r5, #8]
   2be14:	ldr	r2, [r5]
   2be18:	cmp	r2, #0
   2be1c:	beq	2be30 <__flatcc_error_report@@Base+0x8e8>
   2be20:	ldr	r3, [r1]
   2be24:	sub	r3, r3, r2
   2be28:	str	r3, [r5, #4]
   2be2c:	ldr	r1, [r4, #40]	; 0x28
   2be30:	ldr	r3, [r1, #16]
   2be34:	cmp	r3, #22
   2be38:	bne	2bef0 <__flatcc_error_report@@Base+0x9a8>
   2be3c:	mov	r0, r4
   2be40:	add	sp, sp, #8
   2be44:	ldrd	r4, [sp]
   2be48:	ldrd	r6, [sp, #8]
   2be4c:	ldr	r8, [sp, #16]
   2be50:	ldr	lr, [sp, #20]
   2be54:	add	sp, sp, #24
   2be58:	b	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2be5c:	mov	r0, #0
   2be60:	mov	ip, #1
   2be64:	mov	r3, r0
   2be68:	movw	r2, #27544	; 0x6b98
   2be6c:	movt	r2, #5
   2be70:	str	r0, [sp]
   2be74:	str	r0, [sp, #4]
   2be78:	mov	r0, r4
   2be7c:	strh	ip, [r5, #8]
   2be80:	bl	2b548 <__flatcc_error_report@@Base>
   2be84:	mov	r0, r4
   2be88:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2be8c:	b	2bd88 <__flatcc_error_report@@Base+0x840>
   2be90:	ldr	r3, [r5]
   2be94:	cmp	r3, #0
   2be98:	bne	2be84 <__flatcc_error_report@@Base+0x93c>
   2be9c:	ldr	r3, [r1]
   2bea0:	str	r3, [r5]
   2bea4:	b	2be84 <__flatcc_error_report@@Base+0x93c>
   2bea8:	mov	r0, #0
   2beac:	mov	ip, #1
   2beb0:	mov	r3, r0
   2beb4:	mov	r2, r8
   2beb8:	str	r0, [sp]
   2bebc:	str	r0, [sp, #4]
   2bec0:	mov	r0, r4
   2bec4:	strh	ip, [r5, #8]
   2bec8:	bl	2b548 <__flatcc_error_report@@Base>
   2becc:	b	2be84 <__flatcc_error_report@@Base+0x93c>
   2bed0:	mov	ip, #1
   2bed4:	mov	r3, #0
   2bed8:	mov	r2, r6
   2bedc:	mov	r0, r4
   2bee0:	stm	sp, {r7, ip}
   2bee4:	strh	ip, [r5, #8]
   2bee8:	bl	2b548 <__flatcc_error_report@@Base>
   2beec:	b	2be84 <__flatcc_error_report@@Base+0x93c>
   2bef0:	mov	ip, #0
   2bef4:	mov	r0, r4
   2bef8:	mov	r3, ip
   2befc:	movw	r2, #27700	; 0x6c34
   2bf00:	movt	r2, #5
   2bf04:	str	ip, [sp]
   2bf08:	str	ip, [sp, #4]
   2bf0c:	bl	2b548 <__flatcc_error_report@@Base>
   2bf10:	mov	r3, #1
   2bf14:	strh	r3, [r5, #8]
   2bf18:	add	sp, sp, #8
   2bf1c:	ldrd	r4, [sp]
   2bf20:	ldrd	r6, [sp, #8]
   2bf24:	ldr	r8, [sp, #16]
   2bf28:	add	sp, sp, #20
   2bf2c:	pop	{pc}		; (ldr pc, [sp], #4)
   2bf30:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2bf34:	strd	r6, [sp, #8]
   2bf38:	mov	r7, r0
   2bf3c:	ldr	r6, [r0, #40]	; 0x28
   2bf40:	strd	r8, [sp, #16]
   2bf44:	mov	r8, r1
   2bf48:	strd	sl, [sp, #24]
   2bf4c:	mov	fp, r3
   2bf50:	mov	sl, r2
   2bf54:	str	lr, [sp, #32]
   2bf58:	sub	sp, sp, #68	; 0x44
   2bf5c:	ldr	r3, [r6, #16]
   2bf60:	cmp	r3, #45	; 0x2d
   2bf64:	beq	2c0a8 <__flatcc_error_report@@Base+0xb60>
   2bf68:	cmp	r3, #10
   2bf6c:	beq	2c2f4 <__flatcc_error_report@@Base+0xdac>
   2bf70:	ble	2c004 <__flatcc_error_report@@Base+0xabc>
   2bf74:	cmp	r3, #14
   2bf78:	beq	2c1a4 <__flatcc_error_report@@Base+0xc5c>
   2bf7c:	cmp	r3, #19
   2bf80:	beq	2c040 <__flatcc_error_report@@Base+0xaf8>
   2bf84:	cmp	r3, #11
   2bf88:	bne	2c0e4 <__flatcc_error_report@@Base+0xb9c>
   2bf8c:	mov	r4, #0
   2bf90:	mov	r3, #3
   2bf94:	add	r1, sp, #60	; 0x3c
   2bf98:	ldr	r0, [r6]
   2bf9c:	strh	r3, [r8, #8]
   2bfa0:	bl	13f90 <strtod@plt>
   2bfa4:	ldrd	r2, [r6]
   2bfa8:	vstr	d0, [r8]
   2bfac:	ldr	r1, [sp, #60]	; 0x3c
   2bfb0:	add	r3, r2, r3
   2bfb4:	cmp	r1, r3
   2bfb8:	beq	2c2bc <__flatcc_error_report@@Base+0xd74>
   2bfbc:	mov	r0, #0
   2bfc0:	movw	r2, #27772	; 0x6c7c
   2bfc4:	movt	r2, #5
   2bfc8:	mov	ip, #1
   2bfcc:	mov	r3, r0
   2bfd0:	mov	r1, r6
   2bfd4:	str	r0, [sp]
   2bfd8:	str	r0, [sp, #4]
   2bfdc:	mov	r0, r7
   2bfe0:	strh	ip, [r8, #8]
   2bfe4:	bl	2b548 <__flatcc_error_report@@Base>
   2bfe8:	cmp	r4, #0
   2bfec:	beq	2c034 <__flatcc_error_report@@Base+0xaec>
   2bff0:	ldrh	r3, [r8, #8]
   2bff4:	cmp	r3, #6
   2bff8:	bne	2c034 <__flatcc_error_report@@Base+0xaec>
   2bffc:	mov	r9, r6
   2c000:	b	2c4d4 <__flatcc_error_report@@Base+0xf8c>
   2c004:	movw	r2, #64550	; 0xfc26
   2c008:	movt	r2, #65535	; 0xffff
   2c00c:	cmp	r3, r2
   2c010:	beq	2c154 <__flatcc_error_report@@Base+0xc0c>
   2c014:	cmp	r3, #9
   2c018:	beq	2c144 <__flatcc_error_report@@Base+0xbfc>
   2c01c:	cmn	r3, #988	; 0x3dc
   2c020:	bne	2c0e4 <__flatcc_error_report@@Base+0xb9c>
   2c024:	mov	r2, #1
   2c028:	mov	r3, #6
   2c02c:	strb	r2, [r8]
   2c030:	strh	r3, [r8, #8]
   2c034:	mov	r0, r7
   2c038:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c03c:	b	2c104 <__flatcc_error_report@@Base+0xbbc>
   2c040:	mov	r4, #0
   2c044:	mov	r0, r7
   2c048:	mov	r5, #0
   2c04c:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c050:	mov	r3, #2
   2c054:	mov	r1, r8
   2c058:	str	r5, [r8]
   2c05c:	mov	r0, r7
   2c060:	str	r5, [r8, #4]
   2c064:	strh	r3, [r8, #8]
   2c068:	bl	2bd54 <__flatcc_error_report@@Base+0x80c>
   2c06c:	ands	r3, sl, #1
   2c070:	beq	2c490 <__flatcc_error_report@@Base+0xf48>
   2c074:	cmp	r4, #0
   2c078:	beq	2c104 <__flatcc_error_report@@Base+0xbbc>
   2c07c:	mov	r2, #1
   2c080:	mov	r1, r6
   2c084:	str	r5, [sp]
   2c088:	mov	r0, r7
   2c08c:	mov	r3, r5
   2c090:	str	r5, [sp, #4]
   2c094:	strh	r2, [r8, #8]
   2c098:	movw	r2, #27836	; 0x6cbc
   2c09c:	movt	r2, #5
   2c0a0:	bl	2b548 <__flatcc_error_report@@Base>
   2c0a4:	b	2c104 <__flatcc_error_report@@Base+0xbbc>
   2c0a8:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c0ac:	ldr	r9, [r7, #40]	; 0x28
   2c0b0:	ldr	r3, [r9, #16]
   2c0b4:	cmp	r3, #10
   2c0b8:	beq	2c510 <__flatcc_error_report@@Base+0xfc8>
   2c0bc:	bgt	2c120 <__flatcc_error_report@@Base+0xbd8>
   2c0c0:	movw	r2, #64550	; 0xfc26
   2c0c4:	movt	r2, #65535	; 0xffff
   2c0c8:	cmp	r3, r2
   2c0cc:	beq	2c4cc <__flatcc_error_report@@Base+0xf84>
   2c0d0:	cmp	r3, #9
   2c0d4:	beq	2c168 <__flatcc_error_report@@Base+0xc20>
   2c0d8:	cmn	r3, #988	; 0x3dc
   2c0dc:	beq	2c504 <__flatcc_error_report@@Base+0xfbc>
   2c0e0:	mov	r6, r9
   2c0e4:	mov	ip, #0
   2c0e8:	mov	r2, fp
   2c0ec:	mov	r1, r6
   2c0f0:	mov	r0, r7
   2c0f4:	mov	r3, ip
   2c0f8:	str	ip, [sp]
   2c0fc:	str	ip, [sp, #4]
   2c100:	bl	2b548 <__flatcc_error_report@@Base>
   2c104:	add	sp, sp, #68	; 0x44
   2c108:	ldrd	r4, [sp]
   2c10c:	ldrd	r6, [sp, #8]
   2c110:	ldrd	r8, [sp, #16]
   2c114:	ldrd	sl, [sp, #24]
   2c118:	add	sp, sp, #32
   2c11c:	pop	{pc}		; (ldr pc, [sp], #4)
   2c120:	cmp	r3, #14
   2c124:	beq	2c2e8 <__flatcc_error_report@@Base+0xda0>
   2c128:	cmp	r3, #19
   2c12c:	beq	2c2dc <__flatcc_error_report@@Base+0xd94>
   2c130:	cmp	r3, #11
   2c134:	bne	2c0e0 <__flatcc_error_report@@Base+0xb98>
   2c138:	mov	r4, r6
   2c13c:	mov	r6, r9
   2c140:	b	2bf90 <__flatcc_error_report@@Base+0xa48>
   2c144:	bl	2b7e4 <__flatcc_error_report@@Base+0x29c>
   2c148:	mov	r3, #13
   2c14c:	strh	r3, [r8, #8]
   2c150:	b	2c104 <__flatcc_error_report@@Base+0xbbc>
   2c154:	mov	r2, #0
   2c158:	mov	r3, #6
   2c15c:	strb	r2, [r8]
   2c160:	strh	r3, [r8, #8]
   2c164:	b	2c034 <__flatcc_error_report@@Base+0xaec>
   2c168:	mov	r1, r8
   2c16c:	mov	r0, r7
   2c170:	bl	2b7e4 <__flatcc_error_report@@Base+0x29c>
   2c174:	mov	r2, #0
   2c178:	mov	ip, #1
   2c17c:	mov	r3, r2
   2c180:	mov	r1, r9
   2c184:	mov	r0, r7
   2c188:	str	r2, [sp]
   2c18c:	str	r2, [sp, #4]
   2c190:	movw	r2, #27908	; 0x6d04
   2c194:	movt	r2, #5
   2c198:	strh	ip, [r8, #8]
   2c19c:	bl	2b548 <__flatcc_error_report@@Base>
   2c1a0:	b	2c104 <__flatcc_error_report@@Base+0xbbc>
   2c1a4:	mov	r4, #0
   2c1a8:	ldr	r3, [r6]
   2c1ac:	mov	r1, #5
   2c1b0:	ldr	r2, [r6, #4]
   2c1b4:	strh	r1, [r8, #8]
   2c1b8:	add	r0, r3, r2
   2c1bc:	cmp	r3, r0
   2c1c0:	str	r0, [sp, #20]
   2c1c4:	beq	2c458 <__flatcc_error_report@@Base+0xf10>
   2c1c8:	ldrb	r1, [r3]
   2c1cc:	cmp	r1, #45	; 0x2d
   2c1d0:	str	r1, [sp, #32]
   2c1d4:	movne	r1, #0
   2c1d8:	moveq	r1, #1
   2c1dc:	sub	r2, r2, r1
   2c1e0:	cmp	r2, #1
   2c1e4:	ble	2c458 <__flatcc_error_report@@Base+0xf10>
   2c1e8:	ldrb	r2, [r3, r1]
   2c1ec:	add	r3, r3, r1
   2c1f0:	cmp	r2, #48	; 0x30
   2c1f4:	bne	2c458 <__flatcc_error_report@@Base+0xf10>
   2c1f8:	ldrb	r2, [r3, #1]
   2c1fc:	orr	r2, r2, #32
   2c200:	cmp	r2, #120	; 0x78
   2c204:	bne	2c458 <__flatcc_error_report@@Base+0xf10>
   2c208:	add	r2, r3, #2
   2c20c:	str	r2, [sp, #24]
   2c210:	sub	r2, r0, r2
   2c214:	cmp	r2, #16
   2c218:	ble	2c598 <__flatcc_error_report@@Base+0x1050>
   2c21c:	add	r3, r3, #18
   2c220:	mov	r2, r3
   2c224:	str	r3, [sp, #16]
   2c228:	ldr	r3, [sp, #24]
   2c22c:	cmp	r3, r2
   2c230:	beq	2c458 <__flatcc_error_report@@Base+0xf10>
   2c234:	mov	r1, r3
   2c238:	mov	r2, #0
   2c23c:	strd	r6, [sp, #36]	; 0x24
   2c240:	mov	r3, #0
   2c244:	str	r4, [sp, #48]	; 0x30
   2c248:	str	r8, [sp, #52]	; 0x34
   2c24c:	b	2c26c <__flatcc_error_report@@Base+0xd24>
   2c250:	subs	r4, r8, #48	; 0x30
   2c254:	sbc	r5, lr, #0
   2c258:	adds	r2, r4, r0
   2c25c:	adc	r3, r5, #0
   2c260:	ldr	r0, [sp, #16]
   2c264:	cmp	r0, r1
   2c268:	beq	2c56c <__flatcc_error_report@@Base+0x1024>
   2c26c:	mov	fp, r1
   2c270:	ldrb	r0, [r1], #1
   2c274:	lsl	lr, r3, #4
   2c278:	lsl	r8, r2, #4
   2c27c:	orr	lr, lr, r2, lsr #28
   2c280:	sub	r9, r0, #48	; 0x30
   2c284:	orr	r7, r0, #32
   2c288:	cmp	r9, #9
   2c28c:	sub	sl, r7, #97	; 0x61
   2c290:	bls	2c250 <__flatcc_error_report@@Base+0xd08>
   2c294:	cmp	sl, #5
   2c298:	bhi	2c5a4 <__flatcc_error_report@@Base+0x105c>
   2c29c:	subs	r3, r8, #87	; 0x57
   2c2a0:	str	r3, [sp, #8]
   2c2a4:	sbc	r3, lr, #0
   2c2a8:	str	r3, [sp, #12]
   2c2ac:	ldrd	r2, [sp, #8]
   2c2b0:	adds	r2, r2, r7
   2c2b4:	adc	r3, r3, #0
   2c2b8:	b	2c260 <__flatcc_error_report@@Base+0xd18>
   2c2bc:	ldrb	r3, [r2]
   2c2c0:	cmp	r3, #46	; 0x2e
   2c2c4:	beq	2c4b4 <__flatcc_error_report@@Base+0xf6c>
   2c2c8:	cmp	r4, #0
   2c2cc:	vnegne.f64	d0, d0
   2c2d0:	vstrne	d0, [r8]
   2c2d4:	bne	2bff0 <__flatcc_error_report@@Base+0xaa8>
   2c2d8:	b	2c034 <__flatcc_error_report@@Base+0xaec>
   2c2dc:	mov	r4, r6
   2c2e0:	mov	r6, r9
   2c2e4:	b	2c044 <__flatcc_error_report@@Base+0xafc>
   2c2e8:	mov	r4, r6
   2c2ec:	mov	r6, r9
   2c2f0:	b	2c1a8 <__flatcc_error_report@@Base+0xc60>
   2c2f4:	mov	r3, #0
   2c2f8:	str	r3, [sp, #8]
   2c2fc:	ldr	ip, [r6]
   2c300:	mov	r3, #5
   2c304:	ldr	r0, [r6, #4]
   2c308:	strh	r3, [r8, #8]
   2c30c:	add	r0, ip, r0
   2c310:	cmp	ip, r0
   2c314:	beq	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c318:	ldrb	r3, [ip]
   2c31c:	cmp	r3, #45	; 0x2d
   2c320:	str	r3, [sp, #20]
   2c324:	movne	r3, #0
   2c328:	moveq	r3, #1
   2c32c:	add	fp, ip, r3
   2c330:	cmp	r0, fp
   2c334:	beq	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c338:	ldrb	r2, [ip, r3]
   2c33c:	sub	r3, r2, #48	; 0x30
   2c340:	cmp	r3, #9
   2c344:	bhi	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c348:	uxtb	r2, r2
   2c34c:	mov	r3, #0
   2c350:	str	fp, [sp, #16]
   2c354:	subs	r4, r2, #48	; 0x30
   2c358:	add	r1, fp, #1
   2c35c:	str	ip, [sp, #32]
   2c360:	sbc	r5, r3, #0
   2c364:	b	2c39c <__flatcc_error_report@@Base+0xe54>
   2c368:	adds	r3, r3, r4
   2c36c:	adc	r2, r2, r5
   2c370:	adds	r3, r3, r3
   2c374:	adc	r2, r2, r2
   2c378:	subs	sl, r3, #48	; 0x30
   2c37c:	sbc	fp, r2, #0
   2c380:	adds	r2, sl, lr
   2c384:	adc	r3, fp, #0
   2c388:	cmp	r3, r5
   2c38c:	mov	r5, r3
   2c390:	cmpeq	r2, r4
   2c394:	mov	r4, r2
   2c398:	bcc	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c39c:	cmp	r0, r1
   2c3a0:	lsl	r2, r5, #2
   2c3a4:	mov	ip, r1
   2c3a8:	lsl	r3, r4, #2
   2c3ac:	beq	2c51c <__flatcc_error_report@@Base+0xfd4>
   2c3b0:	ldrb	lr, [r1], #1
   2c3b4:	orr	r2, r2, r4, lsr #30
   2c3b8:	sub	r9, lr, #48	; 0x30
   2c3bc:	cmp	r9, #9
   2c3c0:	bls	2c368 <__flatcc_error_report@@Base+0xe20>
   2c3c4:	mov	sl, ip
   2c3c8:	ldr	fp, [sp, #16]
   2c3cc:	ldr	ip, [sp, #32]
   2c3d0:	cmp	ip, sl
   2c3d4:	beq	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c3d8:	cmp	fp, sl
   2c3dc:	beq	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c3e0:	cmp	lr, #80	; 0x50
   2c3e4:	beq	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c3e8:	bhi	2c558 <__flatcc_error_report@@Base+0x1010>
   2c3ec:	cmp	lr, #46	; 0x2e
   2c3f0:	beq	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c3f4:	cmp	lr, #69	; 0x45
   2c3f8:	beq	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c3fc:	ldr	r3, [sp, #20]
   2c400:	strd	r4, [r8]
   2c404:	cmp	r3, #45	; 0x2d
   2c408:	beq	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c40c:	ldr	r3, [sp, #8]
   2c410:	cmp	r3, #0
   2c414:	beq	2c034 <__flatcc_error_report@@Base+0xaec>
   2c418:	ldrd	r2, [r8]
   2c41c:	mov	r1, #4
   2c420:	strh	r1, [r8, #8]
   2c424:	rsbs	r2, r2, #0
   2c428:	rsc	r3, r3, #0
   2c42c:	strd	r2, [r8]
   2c430:	b	2c034 <__flatcc_error_report@@Base+0xaec>
   2c434:	ldrb	r1, [r0]
   2c438:	sub	r0, r1, #48	; 0x30
   2c43c:	cmp	r0, #9
   2c440:	bls	2c458 <__flatcc_error_report@@Base+0xf10>
   2c444:	orr	r1, r1, #32
   2c448:	sub	r0, r1, #97	; 0x61
   2c44c:	uxtb	r0, r0
   2c450:	cmp	r0, #5
   2c454:	bhi	2c5d8 <__flatcc_error_report@@Base+0x1090>
   2c458:	mov	r0, #0
   2c45c:	mov	ip, #1
   2c460:	mov	r3, r0
   2c464:	movw	r2, #27720	; 0x6c48
   2c468:	movt	r2, #5
   2c46c:	mov	r1, r6
   2c470:	str	r0, [sp]
   2c474:	str	r0, [sp, #4]
   2c478:	mov	r0, r7
   2c47c:	strh	ip, [r8, #8]
   2c480:	bl	2b548 <__flatcc_error_report@@Base>
   2c484:	cmp	r4, #0
   2c488:	beq	2c034 <__flatcc_error_report@@Base+0xaec>
   2c48c:	b	2c418 <__flatcc_error_report@@Base+0xed0>
   2c490:	mov	ip, #1
   2c494:	mov	r2, fp
   2c498:	str	r3, [sp]
   2c49c:	mov	r1, r6
   2c4a0:	mov	r0, r7
   2c4a4:	str	r3, [sp, #4]
   2c4a8:	strh	ip, [r8, #8]
   2c4ac:	bl	2b548 <__flatcc_error_report@@Base>
   2c4b0:	b	2c104 <__flatcc_error_report@@Base+0xbbc>
   2c4b4:	mov	r0, #0
   2c4b8:	movw	r2, #27796	; 0x6c94
   2c4bc:	movt	r2, #5
   2c4c0:	mov	ip, #1
   2c4c4:	mov	r3, r0
   2c4c8:	b	2bfd0 <__flatcc_error_report@@Base+0xa88>
   2c4cc:	mov	r3, #0
   2c4d0:	strb	r3, [r8]
   2c4d4:	mov	r2, #0
   2c4d8:	mov	r0, #1
   2c4dc:	mov	r3, r2
   2c4e0:	mov	r1, r9
   2c4e4:	str	r2, [sp]
   2c4e8:	str	r2, [sp, #4]
   2c4ec:	movw	r2, #27872	; 0x6ce0
   2c4f0:	movt	r2, #5
   2c4f4:	strh	r0, [r8, #8]
   2c4f8:	mov	r0, r7
   2c4fc:	bl	2b548 <__flatcc_error_report@@Base>
   2c500:	b	2c034 <__flatcc_error_report@@Base+0xaec>
   2c504:	mov	r3, #1
   2c508:	strb	r3, [r8]
   2c50c:	b	2c4d4 <__flatcc_error_report@@Base+0xf8c>
   2c510:	str	r6, [sp, #8]
   2c514:	mov	r6, r9
   2c518:	b	2c2fc <__flatcc_error_report@@Base+0xdb4>
   2c51c:	ldr	fp, [sp, #16]
   2c520:	cmp	fp, r0
   2c524:	bne	2c3fc <__flatcc_error_report@@Base+0xeb4>
   2c528:	mov	r0, #0
   2c52c:	mov	ip, #1
   2c530:	mov	r3, r0
   2c534:	mov	r1, r6
   2c538:	movw	r2, #27748	; 0x6c64
   2c53c:	movt	r2, #5
   2c540:	str	r0, [sp]
   2c544:	str	r0, [sp, #4]
   2c548:	mov	r0, r7
   2c54c:	strh	ip, [r8, #8]
   2c550:	bl	2b548 <__flatcc_error_report@@Base>
   2c554:	b	2c40c <__flatcc_error_report@@Base+0xec4>
   2c558:	cmp	lr, #101	; 0x65
   2c55c:	beq	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c560:	cmp	lr, #112	; 0x70
   2c564:	bne	2c3fc <__flatcc_error_report@@Base+0xeb4>
   2c568:	b	2c528 <__flatcc_error_report@@Base+0xfe0>
   2c56c:	ldr	r1, [sp, #20]
   2c570:	ldrd	r6, [sp, #36]	; 0x24
   2c574:	ldr	r4, [sp, #48]	; 0x30
   2c578:	cmp	r1, r0
   2c57c:	ldr	r8, [sp, #52]	; 0x34
   2c580:	bne	2c434 <__flatcc_error_report@@Base+0xeec>
   2c584:	strd	r2, [r8]
   2c588:	ldr	r1, [sp, #32]
   2c58c:	cmp	r1, #45	; 0x2d
   2c590:	bne	2c484 <__flatcc_error_report@@Base+0xf3c>
   2c594:	b	2c458 <__flatcc_error_report@@Base+0xf10>
   2c598:	mov	r2, r0
   2c59c:	str	r0, [sp, #16]
   2c5a0:	b	2c228 <__flatcc_error_report@@Base+0xce0>
   2c5a4:	ldr	r1, [sp, #24]
   2c5a8:	ldrd	r6, [sp, #36]	; 0x24
   2c5ac:	ldr	r4, [sp, #48]	; 0x30
   2c5b0:	cmp	fp, r1
   2c5b4:	ldr	r8, [sp, #52]	; 0x34
   2c5b8:	beq	2c458 <__flatcc_error_report@@Base+0xf10>
   2c5bc:	ldr	r0, [sp, #20]
   2c5c0:	cmp	fp, r0
   2c5c4:	beq	2c584 <__flatcc_error_report@@Base+0x103c>
   2c5c8:	ldr	r0, [sp, #16]
   2c5cc:	ldrb	r1, [fp]
   2c5d0:	cmp	fp, r0
   2c5d4:	beq	2c438 <__flatcc_error_report@@Base+0xef0>
   2c5d8:	cmp	r1, #80	; 0x50
   2c5dc:	beq	2c458 <__flatcc_error_report@@Base+0xf10>
   2c5e0:	cmp	r1, #112	; 0x70
   2c5e4:	beq	2c458 <__flatcc_error_report@@Base+0xf10>
   2c5e8:	cmp	r1, #46	; 0x2e
   2c5ec:	bne	2c584 <__flatcc_error_report@@Base+0x103c>
   2c5f0:	b	2c458 <__flatcc_error_report@@Base+0xf10>
   2c5f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2c5f8:	strd	r6, [sp, #8]
   2c5fc:	ldr	r6, [r0, #40]	; 0x28
   2c600:	strd	r8, [sp, #16]
   2c604:	str	sl, [sp, #24]
   2c608:	str	lr, [sp, #28]
   2c60c:	sub	sp, sp, #8
   2c610:	ldr	r3, [r6, #16]
   2c614:	cmp	r3, #40	; 0x28
   2c618:	beq	2c640 <__flatcc_error_report@@Base+0x10f8>
   2c61c:	mov	r4, #0
   2c620:	mov	r0, r4
   2c624:	add	sp, sp, #8
   2c628:	ldrd	r4, [sp]
   2c62c:	ldrd	r6, [sp, #8]
   2c630:	ldrd	r8, [sp, #16]
   2c634:	ldr	sl, [sp, #24]
   2c638:	add	sp, sp, #28
   2c63c:	pop	{pc}		; (ldr pc, [sp], #4)
   2c640:	mov	r5, r0
   2c644:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c648:	ldr	r7, [r5, #40]	; 0x28
   2c64c:	ldr	r3, [r7, #16]
   2c650:	cmp	r3, #9
   2c654:	movne	r4, #0
   2c658:	beq	2c6c4 <__flatcc_error_report@@Base+0x117c>
   2c65c:	mov	r2, #0
   2c660:	cmp	r3, #41	; 0x29
   2c664:	str	r2, [r5, #36]	; 0x24
   2c668:	bne	2c6a0 <__flatcc_error_report@@Base+0x1158>
   2c66c:	mov	r0, r5
   2c670:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c674:	cmp	r4, #0
   2c678:	beq	2c61c <__flatcc_error_report@@Base+0x10d4>
   2c67c:	mov	r2, #0
   2c680:	b	2c688 <__flatcc_error_report@@Base+0x1140>
   2c684:	mov	r4, r3
   2c688:	ldr	r3, [r4]
   2c68c:	str	r2, [r4]
   2c690:	mov	r2, r4
   2c694:	cmp	r3, #0
   2c698:	bne	2c684 <__flatcc_error_report@@Base+0x113c>
   2c69c:	b	2c620 <__flatcc_error_report@@Base+0x10d8>
   2c6a0:	mov	r3, r6
   2c6a4:	mov	r1, r7
   2c6a8:	str	r2, [sp]
   2c6ac:	mov	r0, r5
   2c6b0:	str	r2, [sp, #4]
   2c6b4:	movw	r2, #28020	; 0x6d74
   2c6b8:	movt	r2, #5
   2c6bc:	bl	2b548 <__flatcc_error_report@@Base>
   2c6c0:	b	2c674 <__flatcc_error_report@@Base+0x112c>
   2c6c4:	mov	r0, r5
   2c6c8:	movw	r9, #27940	; 0x6d24
   2c6cc:	movt	r9, #5
   2c6d0:	mov	sl, #0
   2c6d4:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c6d8:	ldr	r2, [r5, #44]	; 0x2c
   2c6dc:	ldr	r8, [r5, #52]	; 0x34
   2c6e0:	add	r3, r8, #32
   2c6e4:	cmp	r3, r2
   2c6e8:	bhi	2c76c <__flatcc_error_report@@Base+0x1224>
   2c6ec:	ldr	r2, [r5, #40]	; 0x28
   2c6f0:	mov	r4, r8
   2c6f4:	str	r3, [r5, #52]	; 0x34
   2c6f8:	str	sl, [r8]
   2c6fc:	str	r7, [r8, #4]
   2c700:	ldr	r3, [r2, #16]
   2c704:	cmp	r3, #58	; 0x3a
   2c708:	bne	2c728 <__flatcc_error_report@@Base+0x11e0>
   2c70c:	mov	r0, r5
   2c710:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c714:	mov	r3, r9
   2c718:	mov	r2, #1
   2c71c:	add	r1, r8, #8
   2c720:	mov	r0, r5
   2c724:	bl	2bf30 <__flatcc_error_report@@Base+0x9e8>
   2c728:	ldr	r3, [r5, #108]	; 0x6c
   2c72c:	cmp	r3, #9
   2c730:	bgt	2c620 <__flatcc_error_report@@Base+0x10d8>
   2c734:	ldr	r7, [r5, #40]	; 0x28
   2c738:	ldr	r3, [r7, #16]
   2c73c:	cmp	r3, #44	; 0x2c
   2c740:	bne	2c65c <__flatcc_error_report@@Base+0x1114>
   2c744:	mov	r0, r5
   2c748:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c74c:	ldr	r7, [r5, #40]	; 0x28
   2c750:	ldr	r3, [r7, #16]
   2c754:	cmp	r3, #9
   2c758:	bne	2c7a0 <__flatcc_error_report@@Base+0x1258>
   2c75c:	mov	r0, r5
   2c760:	mov	sl, r8
   2c764:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c768:	b	2c6d8 <__flatcc_error_report@@Base+0x1190>
   2c76c:	mov	r1, #1
   2c770:	mov	r0, #65536	; 0x10000
   2c774:	bl	13e7c <calloc@plt>
   2c778:	cmp	r0, #0
   2c77c:	beq	2c7d0 <__flatcc_error_report@@Base+0x1288>
   2c780:	ldr	r2, [r5, #48]	; 0x30
   2c784:	add	r1, r0, #65536	; 0x10000
   2c788:	add	r8, r0, #16
   2c78c:	add	r3, r0, #48	; 0x30
   2c790:	str	r1, [r5, #44]	; 0x2c
   2c794:	str	r0, [r5, #48]	; 0x30
   2c798:	str	r2, [r0]
   2c79c:	b	2c6ec <__flatcc_error_report@@Base+0x11a4>
   2c7a0:	mov	ip, #0
   2c7a4:	mov	r1, r7
   2c7a8:	mov	r3, ip
   2c7ac:	movw	r2, #27972	; 0x6d44
   2c7b0:	movt	r2, #5
   2c7b4:	mov	r0, r5
   2c7b8:	str	ip, [sp]
   2c7bc:	str	ip, [sp, #4]
   2c7c0:	bl	2b548 <__flatcc_error_report@@Base>
   2c7c4:	ldr	r7, [r5, #40]	; 0x28
   2c7c8:	ldr	r3, [r7, #16]
   2c7cc:	b	2c65c <__flatcc_error_report@@Base+0x1114>
   2c7d0:	bl	2b25c <__flatcc_fb_default_error_out@@Base+0x20>
   2c7d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2c7d8:	mov	r4, r0
   2c7dc:	ldr	r5, [r0, #40]	; 0x28
   2c7e0:	ldr	r3, [r5, #16]
   2c7e4:	strd	r6, [sp, #8]
   2c7e8:	strd	r8, [sp, #16]
   2c7ec:	strd	sl, [sp, #24]
   2c7f0:	str	lr, [sp, #32]
   2c7f4:	sub	sp, sp, #20
   2c7f8:	cmp	r3, #9
   2c7fc:	bne	2cd38 <__flatcc_error_report@@Base+0x17f0>
   2c800:	mov	r7, r1
   2c804:	mov	r8, r2
   2c808:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c80c:	mov	r0, r4
   2c810:	str	r5, [r7, #4]
   2c814:	bl	2c5f4 <__flatcc_error_report@@Base+0x10ac>
   2c818:	ldr	r1, [r4, #40]	; 0x28
   2c81c:	ldr	r3, [r1, #16]
   2c820:	str	r0, [r7, #28]
   2c824:	cmp	r3, #123	; 0x7b
   2c828:	bne	2c998 <__flatcc_error_report@@Base+0x1450>
   2c82c:	mov	r0, r4
   2c830:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c834:	ldr	sl, [r4, #40]	; 0x28
   2c838:	ldr	fp, [sl, #16]
   2c83c:	cmp	fp, #125	; 0x7d
   2c840:	beq	2ccfc <__flatcc_error_report@@Base+0x17b4>
   2c844:	movw	r3, #28352	; 0x6ec0
   2c848:	movt	r3, #5
   2c84c:	movw	r9, #64569	; 0xfc39
   2c850:	movt	r9, #65535	; 0xffff
   2c854:	str	r3, [sp, #8]
   2c858:	movw	r3, #28380	; 0x6edc
   2c85c:	movt	r3, #5
   2c860:	str	r3, [sp, #12]
   2c864:	cmp	r8, r9
   2c868:	ldr	r0, [r4, #44]	; 0x2c
   2c86c:	ldr	r5, [r4, #52]	; 0x34
   2c870:	add	r1, r5, #128	; 0x80
   2c874:	beq	2ca10 <__flatcc_error_report@@Base+0x14c8>
   2c878:	cmp	r0, r1
   2c87c:	bcc	2cc1c <__flatcc_error_report@@Base+0x16d4>
   2c880:	ldr	r0, [r7, #20]
   2c884:	mov	ip, #5
   2c888:	str	r1, [r4, #52]	; 0x34
   2c88c:	str	r0, [r5]
   2c890:	strh	ip, [r5, #8]
   2c894:	str	r5, [r7, #20]
   2c898:	ldr	r1, [r4, #36]	; 0x24
   2c89c:	cmp	r1, #0
   2c8a0:	beq	2c8c4 <__flatcc_error_report@@Base+0x137c>
   2c8a4:	mov	ip, #0
   2c8a8:	b	2c8b0 <__flatcc_error_report@@Base+0x1368>
   2c8ac:	mov	r1, r0
   2c8b0:	ldr	r0, [r1]
   2c8b4:	str	ip, [r1]
   2c8b8:	mov	ip, r1
   2c8bc:	cmp	r0, #0
   2c8c0:	bne	2c8ac <__flatcc_error_report@@Base+0x1364>
   2c8c4:	mov	r6, #0
   2c8c8:	cmp	fp, #9
   2c8cc:	str	r1, [r5, #68]	; 0x44
   2c8d0:	str	r6, [r4, #36]	; 0x24
   2c8d4:	bne	2cb48 <__flatcc_error_report@@Base+0x1600>
   2c8d8:	mov	r0, r4
   2c8dc:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c8e0:	ldr	r1, [r4, #40]	; 0x28
   2c8e4:	ldr	r3, [r1, #16]
   2c8e8:	str	sl, [r5, #4]
   2c8ec:	cmp	r3, #58	; 0x3a
   2c8f0:	bne	2cc50 <__flatcc_error_report@@Base+0x1708>
   2c8f4:	mov	r0, r4
   2c8f8:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c8fc:	add	r1, r5, #16
   2c900:	mov	r0, r4
   2c904:	bl	2b93c <__flatcc_error_report@@Base+0x3f4>
   2c908:	ldr	r3, [r4, #40]	; 0x28
   2c90c:	ldr	r3, [r3, #16]
   2c910:	cmp	r3, #61	; 0x3d
   2c914:	bne	2c938 <__flatcc_error_report@@Base+0x13f0>
   2c918:	mov	r0, r4
   2c91c:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c920:	movw	r3, #28424	; 0x6f08
   2c924:	movt	r3, #5
   2c928:	mov	r2, #2
   2c92c:	add	r1, r5, #48	; 0x30
   2c930:	mov	r0, r4
   2c934:	bl	2bf30 <__flatcc_error_report@@Base+0x9e8>
   2c938:	mov	r0, r4
   2c93c:	bl	2c5f4 <__flatcc_error_report@@Base+0x10ac>
   2c940:	ldr	r1, [r4, #40]	; 0x28
   2c944:	mov	ip, #0
   2c948:	ldr	r3, [r1, #16]
   2c94c:	str	r0, [r5, #64]	; 0x40
   2c950:	str	ip, [r4, #36]	; 0x24
   2c954:	cmp	r3, #59	; 0x3b
   2c958:	beq	2cb34 <__flatcc_error_report@@Base+0x15ec>
   2c95c:	mov	r3, ip
   2c960:	movw	r2, #28460	; 0x6f2c
   2c964:	movt	r2, #5
   2c968:	mov	r0, r4
   2c96c:	str	ip, [sp]
   2c970:	str	ip, [sp, #4]
   2c974:	bl	2b548 <__flatcc_error_report@@Base>
   2c978:	ldr	sl, [r4, #40]	; 0x28
   2c97c:	ldr	fp, [sl, #16]
   2c980:	ldr	r1, [r4, #108]	; 0x6c
   2c984:	cmp	r1, #9
   2c988:	bgt	2c9c0 <__flatcc_error_report@@Base+0x1478>
   2c98c:	cmp	fp, #125	; 0x7d
   2c990:	bne	2c864 <__flatcc_error_report@@Base+0x131c>
   2c994:	b	2ccfc <__flatcc_error_report@@Base+0x17b4>
   2c998:	mov	ip, #0
   2c99c:	movw	r2, #28088	; 0x6db8
   2c9a0:	movt	r2, #5
   2c9a4:	mov	r3, ip
   2c9a8:	mov	r0, r4
   2c9ac:	str	ip, [sp]
   2c9b0:	str	ip, [sp, #4]
   2c9b4:	bl	2b548 <__flatcc_error_report@@Base>
   2c9b8:	ldr	r3, [r4, #40]	; 0x28
   2c9bc:	ldr	fp, [r3, #16]
   2c9c0:	cmp	fp, #0
   2c9c4:	beq	2c9f4 <__flatcc_error_report@@Base+0x14ac>
   2c9c8:	cmp	fp, #125	; 0x7d
   2c9cc:	bne	2c9dc <__flatcc_error_report@@Base+0x1494>
   2c9d0:	b	2ccb4 <__flatcc_error_report@@Base+0x176c>
   2c9d4:	cmp	r3, #125	; 0x7d
   2c9d8:	beq	2ccb4 <__flatcc_error_report@@Base+0x176c>
   2c9dc:	mov	r0, r4
   2c9e0:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2c9e4:	ldr	r3, [r4, #40]	; 0x28
   2c9e8:	ldr	r3, [r3, #16]
   2c9ec:	cmp	r3, #0
   2c9f0:	bne	2c9d4 <__flatcc_error_report@@Base+0x148c>
   2c9f4:	add	sp, sp, #20
   2c9f8:	ldrd	r4, [sp]
   2c9fc:	ldrd	r6, [sp, #8]
   2ca00:	ldrd	r8, [sp, #16]
   2ca04:	ldrd	sl, [sp, #24]
   2ca08:	add	sp, sp, #32
   2ca0c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ca10:	cmp	r0, r1
   2ca14:	bcc	2cc6c <__flatcc_error_report@@Base+0x1724>
   2ca18:	ldr	r0, [r7, #20]
   2ca1c:	mov	ip, #5
   2ca20:	str	r1, [r4, #52]	; 0x34
   2ca24:	str	r0, [r5]
   2ca28:	strh	ip, [r5, #8]
   2ca2c:	str	r5, [r7, #20]
   2ca30:	ldr	r1, [r4, #36]	; 0x24
   2ca34:	cmp	r1, #0
   2ca38:	beq	2ca5c <__flatcc_error_report@@Base+0x1514>
   2ca3c:	mov	ip, #0
   2ca40:	b	2ca48 <__flatcc_error_report@@Base+0x1500>
   2ca44:	mov	r1, r0
   2ca48:	ldr	r0, [r1]
   2ca4c:	str	ip, [r1]
   2ca50:	mov	ip, r1
   2ca54:	cmp	r0, #0
   2ca58:	bne	2ca44 <__flatcc_error_report@@Base+0x14fc>
   2ca5c:	mov	r6, #0
   2ca60:	cmp	fp, #9
   2ca64:	str	r1, [r5, #68]	; 0x44
   2ca68:	str	r6, [r4, #36]	; 0x24
   2ca6c:	bne	2cbbc <__flatcc_error_report@@Base+0x1674>
   2ca70:	mov	r0, r4
   2ca74:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ca78:	ldr	r1, [r4, #40]	; 0x28
   2ca7c:	ldr	r3, [r1, #16]
   2ca80:	str	sl, [r5, #4]
   2ca84:	cmp	r3, #40	; 0x28
   2ca88:	bne	2ccc8 <__flatcc_error_report@@Base+0x1780>
   2ca8c:	mov	r0, r4
   2ca90:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ca94:	add	r1, r5, #32
   2ca98:	mov	r0, r4
   2ca9c:	bl	2b93c <__flatcc_error_report@@Base+0x3f4>
   2caa0:	ldr	r1, [r4, #40]	; 0x28
   2caa4:	ldr	r3, [r1, #16]
   2caa8:	cmp	r3, #41	; 0x29
   2caac:	bne	2cd64 <__flatcc_error_report@@Base+0x181c>
   2cab0:	mov	r0, r4
   2cab4:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2cab8:	ldr	r1, [r4, #40]	; 0x28
   2cabc:	ldr	r3, [r1, #16]
   2cac0:	cmp	r3, #58	; 0x3a
   2cac4:	bne	2cd84 <__flatcc_error_report@@Base+0x183c>
   2cac8:	mov	r0, r4
   2cacc:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2cad0:	add	r1, r5, #16
   2cad4:	mov	r0, r4
   2cad8:	bl	2b93c <__flatcc_error_report@@Base+0x3f4>
   2cadc:	ldr	sl, [r4, #40]	; 0x28
   2cae0:	ldr	r3, [sl, #16]
   2cae4:	cmp	r3, #61	; 0x3d
   2cae8:	beq	2cda4 <__flatcc_error_report@@Base+0x185c>
   2caec:	mov	r0, r4
   2caf0:	bl	2c5f4 <__flatcc_error_report@@Base+0x10ac>
   2caf4:	ldr	r1, [r4, #40]	; 0x28
   2caf8:	ldr	r3, [r1, #16]
   2cafc:	str	r0, [r5, #64]	; 0x40
   2cb00:	str	r6, [r4, #36]	; 0x24
   2cb04:	cmp	r3, #59	; 0x3b
   2cb08:	beq	2cb34 <__flatcc_error_report@@Base+0x15ec>
   2cb0c:	mov	r3, r6
   2cb10:	movw	r2, #28276	; 0x6e74
   2cb14:	movt	r2, #5
   2cb18:	mov	r0, r4
   2cb1c:	str	r6, [sp]
   2cb20:	str	r6, [sp, #4]
   2cb24:	bl	2b548 <__flatcc_error_report@@Base>
   2cb28:	ldr	sl, [r4, #40]	; 0x28
   2cb2c:	ldr	fp, [sl, #16]
   2cb30:	b	2c980 <__flatcc_error_report@@Base+0x1438>
   2cb34:	mov	r0, r4
   2cb38:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2cb3c:	ldr	sl, [r4, #40]	; 0x28
   2cb40:	ldr	fp, [sl, #16]
   2cb44:	b	2c980 <__flatcc_error_report@@Base+0x1438>
   2cb48:	mov	r3, r6
   2cb4c:	mov	r1, sl
   2cb50:	str	r6, [sp]
   2cb54:	mov	r0, r4
   2cb58:	str	r6, [sp, #4]
   2cb5c:	ldr	r2, [sp, #8]
   2cb60:	bl	2b548 <__flatcc_error_report@@Base>
   2cb64:	ldr	sl, [r4, #40]	; 0x28
   2cb68:	ldr	r3, [sl, #16]
   2cb6c:	cmp	r3, #0
   2cb70:	bne	2cb98 <__flatcc_error_report@@Base+0x1650>
   2cb74:	b	2cc08 <__flatcc_error_report@@Base+0x16c0>
   2cb78:	cmp	r3, #125	; 0x7d
   2cb7c:	beq	2cca0 <__flatcc_error_report@@Base+0x1758>
   2cb80:	mov	r0, r4
   2cb84:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2cb88:	ldr	sl, [r4, #40]	; 0x28
   2cb8c:	ldr	r3, [sl, #16]
   2cb90:	cmp	r3, #0
   2cb94:	beq	2cc08 <__flatcc_error_report@@Base+0x16c0>
   2cb98:	cmp	r3, #59	; 0x3b
   2cb9c:	bne	2cb78 <__flatcc_error_report@@Base+0x1630>
   2cba0:	mov	r0, r4
   2cba4:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2cba8:	ldr	sl, [r4, #40]	; 0x28
   2cbac:	mov	r3, #0
   2cbb0:	ldr	fp, [sl, #16]
   2cbb4:	str	r3, [r4, #36]	; 0x24
   2cbb8:	b	2c980 <__flatcc_error_report@@Base+0x1438>
   2cbbc:	mov	r3, r6
   2cbc0:	mov	r1, sl
   2cbc4:	str	r6, [sp]
   2cbc8:	movw	r2, #28116	; 0x6dd4
   2cbcc:	movt	r2, #5
   2cbd0:	str	r6, [sp, #4]
   2cbd4:	mov	r0, r4
   2cbd8:	bl	2b548 <__flatcc_error_report@@Base>
   2cbdc:	b	2cbf8 <__flatcc_error_report@@Base+0x16b0>
   2cbe0:	cmp	r3, #59	; 0x3b
   2cbe4:	beq	2cba0 <__flatcc_error_report@@Base+0x1658>
   2cbe8:	cmp	r3, #125	; 0x7d
   2cbec:	beq	2cce8 <__flatcc_error_report@@Base+0x17a0>
   2cbf0:	mov	r0, r4
   2cbf4:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2cbf8:	ldr	sl, [r4, #40]	; 0x28
   2cbfc:	ldr	r3, [sl, #16]
   2cc00:	cmp	r3, #0
   2cc04:	bne	2cbe0 <__flatcc_error_report@@Base+0x1698>
   2cc08:	ldr	r3, [r4, #108]	; 0x6c
   2cc0c:	cmp	r3, #9
   2cc10:	bgt	2c9f4 <__flatcc_error_report@@Base+0x14ac>
   2cc14:	mov	fp, #0
   2cc18:	b	2c864 <__flatcc_error_report@@Base+0x131c>
   2cc1c:	mov	r1, #1
   2cc20:	mov	r0, #65536	; 0x10000
   2cc24:	bl	13e7c <calloc@plt>
   2cc28:	cmp	r0, #0
   2cc2c:	beq	2cdd0 <__flatcc_error_report@@Base+0x1888>
   2cc30:	ldr	ip, [r4, #48]	; 0x30
   2cc34:	add	lr, r0, #65536	; 0x10000
   2cc38:	add	r5, r0, #16
   2cc3c:	add	r1, r0, #144	; 0x90
   2cc40:	str	lr, [r4, #44]	; 0x2c
   2cc44:	str	r0, [r4, #48]	; 0x30
   2cc48:	str	ip, [r0]
   2cc4c:	b	2c880 <__flatcc_error_report@@Base+0x1338>
   2cc50:	mov	r3, r6
   2cc54:	mov	r0, r4
   2cc58:	str	r6, [sp]
   2cc5c:	str	r6, [sp, #4]
   2cc60:	ldr	r2, [sp, #12]
   2cc64:	bl	2b548 <__flatcc_error_report@@Base>
   2cc68:	b	2cb64 <__flatcc_error_report@@Base+0x161c>
   2cc6c:	mov	r1, #1
   2cc70:	mov	r0, #65536	; 0x10000
   2cc74:	bl	13e7c <calloc@plt>
   2cc78:	cmp	r0, #0
   2cc7c:	beq	2cdd0 <__flatcc_error_report@@Base+0x1888>
   2cc80:	ldr	ip, [r4, #48]	; 0x30
   2cc84:	add	lr, r0, #65536	; 0x10000
   2cc88:	add	r5, r0, #16
   2cc8c:	add	r1, r0, #144	; 0x90
   2cc90:	str	lr, [r4, #44]	; 0x2c
   2cc94:	str	r0, [r4, #48]	; 0x30
   2cc98:	str	ip, [r0]
   2cc9c:	b	2ca18 <__flatcc_error_report@@Base+0x14d0>
   2cca0:	ldr	r3, [r4, #108]	; 0x6c
   2cca4:	mov	r2, #0
   2cca8:	str	r2, [r4, #36]	; 0x24
   2ccac:	cmp	r3, #9
   2ccb0:	ble	2ccfc <__flatcc_error_report@@Base+0x17b4>
   2ccb4:	mov	r0, r4
   2ccb8:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ccbc:	mov	r3, #0
   2ccc0:	str	r3, [r4, #36]	; 0x24
   2ccc4:	b	2c9f4 <__flatcc_error_report@@Base+0x14ac>
   2ccc8:	mov	r3, r6
   2cccc:	movw	r2, #28144	; 0x6df0
   2ccd0:	movt	r2, #5
   2ccd4:	mov	r0, r4
   2ccd8:	str	r6, [sp]
   2ccdc:	str	r6, [sp, #4]
   2cce0:	bl	2b548 <__flatcc_error_report@@Base>
   2cce4:	b	2cbf8 <__flatcc_error_report@@Base+0x16b0>
   2cce8:	ldr	r3, [r4, #108]	; 0x6c
   2ccec:	mov	r2, #0
   2ccf0:	str	r2, [r4, #36]	; 0x24
   2ccf4:	cmp	r3, #9
   2ccf8:	bgt	2ccb4 <__flatcc_error_report@@Base+0x176c>
   2ccfc:	mov	r0, r4
   2cd00:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2cd04:	ldr	r3, [r7, #20]
   2cd08:	cmp	r3, #0
   2cd0c:	beq	2cd30 <__flatcc_error_report@@Base+0x17e8>
   2cd10:	mov	r1, #0
   2cd14:	b	2cd1c <__flatcc_error_report@@Base+0x17d4>
   2cd18:	mov	r3, r2
   2cd1c:	ldr	r2, [r3]
   2cd20:	str	r1, [r3]
   2cd24:	mov	r1, r3
   2cd28:	cmp	r2, #0
   2cd2c:	bne	2cd18 <__flatcc_error_report@@Base+0x17d0>
   2cd30:	str	r3, [r7, #20]
   2cd34:	b	2c9f4 <__flatcc_error_report@@Base+0x14ac>
   2cd38:	mov	ip, #0
   2cd3c:	mov	r1, r5
   2cd40:	mov	r3, ip
   2cd44:	movw	r2, #28052	; 0x6d94
   2cd48:	movt	r2, #5
   2cd4c:	str	ip, [sp]
   2cd50:	str	ip, [sp, #4]
   2cd54:	bl	2b548 <__flatcc_error_report@@Base>
   2cd58:	ldr	r3, [r4, #40]	; 0x28
   2cd5c:	ldr	fp, [r3, #16]
   2cd60:	b	2c9c0 <__flatcc_error_report@@Base+0x1478>
   2cd64:	mov	r3, r6
   2cd68:	movw	r2, #28184	; 0x6e18
   2cd6c:	movt	r2, #5
   2cd70:	mov	r0, r4
   2cd74:	str	r6, [sp]
   2cd78:	str	r6, [sp, #4]
   2cd7c:	bl	2b548 <__flatcc_error_report@@Base>
   2cd80:	b	2cbf8 <__flatcc_error_report@@Base+0x16b0>
   2cd84:	mov	r3, r6
   2cd88:	movw	r2, #28224	; 0x6e40
   2cd8c:	movt	r2, #5
   2cd90:	mov	r0, r4
   2cd94:	str	r6, [sp]
   2cd98:	str	r6, [sp, #4]
   2cd9c:	bl	2b548 <__flatcc_error_report@@Base>
   2cda0:	b	2cbf8 <__flatcc_error_report@@Base+0x16b0>
   2cda4:	mov	r0, r4
   2cda8:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2cdac:	mov	r3, r6
   2cdb0:	mov	r1, sl
   2cdb4:	str	r6, [sp]
   2cdb8:	movw	r2, #28312	; 0x6e98
   2cdbc:	movt	r2, #5
   2cdc0:	str	r6, [sp, #4]
   2cdc4:	mov	r0, r4
   2cdc8:	bl	2b548 <__flatcc_error_report@@Base>
   2cdcc:	b	2cbf8 <__flatcc_error_report@@Base+0x16b0>
   2cdd0:	bl	2b25c <__flatcc_fb_default_error_out@@Base+0x20>

0002cdd4 <error_ref_sym@@Base>:
   2cdd4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2cdd8:	strd	r6, [sp, #8]
   2cddc:	strd	r8, [sp, #16]
   2cde0:	mov	r9, r3
   2cde4:	strd	sl, [sp, #24]
   2cde8:	subs	sl, r1, #0
   2cdec:	str	lr, [sp, #32]
   2cdf0:	sub	sp, sp, #76	; 0x4c
   2cdf4:	str	r0, [sp, #8]
   2cdf8:	str	r2, [sp, #12]
   2cdfc:	beq	2cedc <error_ref_sym@@Base+0x108>
   2ce00:	mov	r6, sl
   2ce04:	mov	fp, #0
   2ce08:	mov	r4, #50	; 0x32
   2ce0c:	add	r7, sp, #20
   2ce10:	mov	r8, #46	; 0x2e
   2ce14:	ldr	r3, [r6, #4]
   2ce18:	add	r0, r7, fp
   2ce1c:	ldm	r3, {r1, r5}
   2ce20:	cmp	r5, r4
   2ce24:	movge	r5, r4
   2ce28:	mov	r2, r5
   2ce2c:	bl	13eb8 <memcpy@plt>
   2ce30:	add	ip, r5, fp
   2ce34:	add	r3, sp, #72	; 0x48
   2ce38:	add	r3, r3, ip
   2ce3c:	sub	r5, r4, r5
   2ce40:	sub	r4, r5, #1
   2ce44:	add	fp, ip, #1
   2ce48:	strb	r8, [r3, #-52]	; 0xffffffcc
   2ce4c:	cmp	r4, #0
   2ce50:	ldr	r6, [r6]
   2ce54:	movle	r2, #0
   2ce58:	movgt	r2, #1
   2ce5c:	cmp	r6, #0
   2ce60:	moveq	r2, #0
   2ce64:	cmp	r2, #0
   2ce68:	bne	2ce14 <error_ref_sym@@Base+0x40>
   2ce6c:	add	r3, sp, #72	; 0x48
   2ce70:	cmp	fp, #0
   2ce74:	add	r1, r3, fp
   2ce78:	movle	ip, fp
   2ce7c:	cmp	r4, #0
   2ce80:	strb	r2, [r1, #-52]	; 0xffffffcc
   2ce84:	ble	2cec4 <error_ref_sym@@Base+0xf0>
   2ce88:	cmp	r9, #0
   2ce8c:	ldr	r1, [sl, #4]
   2ce90:	ldrne	r9, [r9, #4]
   2ce94:	stm	sp, {r7, ip}
   2ce98:	ldr	r0, [sp, #8]
   2ce9c:	ldr	r2, [sp, #12]
   2cea0:	mov	r3, r9
   2cea4:	bl	2b548 <__flatcc_error_report@@Base>
   2cea8:	add	sp, sp, #76	; 0x4c
   2ceac:	ldrd	r4, [sp]
   2ceb0:	ldrd	r6, [sp, #8]
   2ceb4:	ldrd	r8, [sp, #16]
   2ceb8:	ldrd	sl, [sp, #24]
   2cebc:	add	sp, sp, #32
   2cec0:	pop	{pc}		; (ldr pc, [sp], #4)
   2cec4:	movw	r3, #26812	; 0x68bc
   2cec8:	movt	r3, #5
   2cecc:	ldr	r3, [r3, #8]
   2ced0:	mov	ip, #50	; 0x32
   2ced4:	str	r3, [sp, #67]	; 0x43
   2ced8:	b	2ce88 <error_ref_sym@@Base+0xb4>
   2cedc:	mov	ip, sl
   2cee0:	add	r7, sp, #20
   2cee4:	strb	sl, [sp, #20]
   2cee8:	b	2ce88 <error_ref_sym@@Base+0xb4>

0002ceec <__flatcc_fb_init_parser@@Base>:
   2ceec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2cef0:	mov	r5, r3
   2cef4:	mov	r4, r0
   2cef8:	strd	r6, [sp, #8]
   2cefc:	mov	r6, r2
   2cf00:	mov	r2, #560	; 0x230
   2cf04:	strd	r8, [sp, #16]
   2cf08:	mov	r9, r1
   2cf0c:	mov	r1, #0
   2cf10:	str	sl, [sp, #24]
   2cf14:	str	lr, [sp, #28]
   2cf18:	sub	sp, sp, #8
   2cf1c:	ldr	r7, [sp, #44]	; 0x2c
   2cf20:	bl	13f78 <memset@plt>
   2cf24:	cmp	r5, #0
   2cf28:	add	r0, r4, #128	; 0x80
   2cf2c:	ldrne	r3, [sp, #40]	; 0x28
   2cf30:	movweq	r5, #45628	; 0xb23c
   2cf34:	movteq	r5, #2
   2cf38:	str	r5, [r4, #8]
   2cf3c:	strne	r3, [r4, #12]
   2cf40:	cmp	r9, #0
   2cf44:	beq	2d13c <__flatcc_fb_init_parser@@Base+0x250>
   2cf48:	mov	r2, #224	; 0xe0
   2cf4c:	mov	r1, r9
   2cf50:	bl	13eb8 <memcpy@plt>
   2cf54:	ldr	r3, [r4, #192]	; 0xc0
   2cf58:	cmp	r7, #0
   2cf5c:	addeq	r7, r4, #416	; 0x1a0
   2cf60:	str	r7, [r4, #412]	; 0x19c
   2cf64:	cmp	r3, #4
   2cf68:	beq	2cfc0 <__flatcc_fb_init_parser@@Base+0xd4>
   2cf6c:	cmp	r3, #8
   2cf70:	beq	2cfc0 <__flatcc_fb_init_parser@@Base+0xd4>
   2cf74:	cmp	r3, #2
   2cf78:	beq	2cfc0 <__flatcc_fb_init_parser@@Base+0xd4>
   2cf7c:	mov	ip, #0
   2cf80:	mov	r0, r4
   2cf84:	mov	r3, ip
   2cf88:	mov	r1, ip
   2cf8c:	movw	r2, #28504	; 0x6f58
   2cf90:	movt	r2, #5
   2cf94:	str	ip, [sp]
   2cf98:	str	ip, [sp, #4]
   2cf9c:	bl	2b548 <__flatcc_error_report@@Base>
   2cfa0:	mvn	r0, #0
   2cfa4:	add	sp, sp, #8
   2cfa8:	ldrd	r4, [sp]
   2cfac:	ldrd	r6, [sp, #8]
   2cfb0:	ldrd	r8, [sp, #16]
   2cfb4:	ldr	sl, [sp, #24]
   2cfb8:	add	sp, sp, #28
   2cfbc:	pop	{pc}		; (ldr pc, [sp], #4)
   2cfc0:	ldr	r3, [r4, #196]	; 0xc4
   2cfc4:	cmp	r3, #4
   2cfc8:	beq	2d008 <__flatcc_fb_init_parser@@Base+0x11c>
   2cfcc:	cmp	r3, #8
   2cfd0:	beq	2d008 <__flatcc_fb_init_parser@@Base+0x11c>
   2cfd4:	cmp	r3, #2
   2cfd8:	beq	2d008 <__flatcc_fb_init_parser@@Base+0x11c>
   2cfdc:	mov	ip, #0
   2cfe0:	mov	r0, r4
   2cfe4:	mov	r3, ip
   2cfe8:	mov	r1, ip
   2cfec:	movw	r2, #28560	; 0x6f90
   2cff0:	movt	r2, #5
   2cff4:	str	ip, [sp]
   2cff8:	str	ip, [sp, #4]
   2cffc:	bl	2b548 <__flatcc_error_report@@Base>
   2d000:	mvn	r0, #0
   2d004:	b	2cfa4 <__flatcc_fb_init_parser@@Base+0xb8>
   2d008:	cmp	r6, #0
   2d00c:	beq	2d144 <__flatcc_fb_init_parser@@Base+0x258>
   2d010:	mov	r0, r6
   2d014:	bl	13f54 <strlen@plt>
   2d018:	mov	sl, r0
   2d01c:	mov	r1, sl
   2d020:	mov	r0, r6
   2d024:	ldr	r2, [r9, #96]	; 0x60
   2d028:	bl	2b02c <__flatcc_fb_create_basename@@Base>
   2d02c:	cmp	r0, #0
   2d030:	mov	r5, r0
   2d034:	str	r0, [r4, #512]	; 0x200
   2d038:	beq	2d1c8 <__flatcc_fb_init_parser@@Base+0x2dc>
   2d03c:	bl	13f54 <strlen@plt>
   2d040:	mov	r1, r0
   2d044:	mov	r8, r0
   2d048:	mov	r0, r5
   2d04c:	bl	2a9a4 <__flatcc_fb_copy_path_n@@Base>
   2d050:	subs	r5, r0, #0
   2d054:	beq	2d1c8 <__flatcc_fb_init_parser@@Base+0x2dc>
   2d058:	cmp	r8, #0
   2d05c:	beq	2d0a0 <__flatcc_fb_init_parser@@Base+0x1b4>
   2d060:	ldrb	r7, [r5]
   2d064:	cmp	r7, #0
   2d068:	beq	2d0a0 <__flatcc_fb_init_parser@@Base+0x1b4>
   2d06c:	bl	13f30 <__ctype_toupper_loc@plt>
   2d070:	sub	r2, r8, #1
   2d074:	mov	r3, r5
   2d078:	add	r2, r5, r2
   2d07c:	b	2d08c <__flatcc_fb_init_parser@@Base+0x1a0>
   2d080:	ldrb	r7, [r3, #1]!
   2d084:	cmp	r7, #0
   2d088:	beq	2d0a0 <__flatcc_fb_init_parser@@Base+0x1b4>
   2d08c:	ldr	r1, [r0]
   2d090:	cmp	r3, r2
   2d094:	ldr	r1, [r1, r7, lsl #2]
   2d098:	strb	r1, [r3]
   2d09c:	bne	2d080 <__flatcc_fb_init_parser@@Base+0x194>
   2d0a0:	mov	r1, sl
   2d0a4:	mov	r0, r6
   2d0a8:	str	r5, [r4, #496]	; 0x1f0
   2d0ac:	movw	r2, #39472	; 0x9a30
   2d0b0:	movt	r2, #4
   2d0b4:	str	r8, [r4, #500]	; 0x1f4
   2d0b8:	str	r5, [r4, #516]	; 0x204
   2d0bc:	bl	2b02c <__flatcc_fb_create_basename@@Base>
   2d0c0:	cmp	r0, #0
   2d0c4:	str	r0, [r4, #520]	; 0x208
   2d0c8:	beq	2d1c8 <__flatcc_fb_init_parser@@Base+0x2dc>
   2d0cc:	ldr	r3, [r9, #192]	; 0xc0
   2d0d0:	cmp	r3, #0
   2d0d4:	beq	2d0e8 <__flatcc_fb_init_parser@@Base+0x1fc>
   2d0d8:	mov	r0, r3
   2d0dc:	str	r3, [r4, #476]	; 0x1dc
   2d0e0:	bl	13f54 <strlen@plt>
   2d0e4:	str	r0, [r4, #480]	; 0x1e0
   2d0e8:	mov	r2, #0
   2d0ec:	ldr	r0, [r4, #412]	; 0x19c
   2d0f0:	mov	r1, r2
   2d0f4:	bl	291dc <fb_scope_table_find@@Base>
   2d0f8:	subs	r5, r0, #0
   2d0fc:	beq	2d154 <__flatcc_fb_init_parser@@Base+0x268>
   2d100:	mov	r2, #0
   2d104:	str	r5, [r4, #544]	; 0x220
   2d108:	mov	r1, r2
   2d10c:	ldr	r0, [r4, #412]	; 0x19c
   2d110:	bl	291dc <fb_scope_table_find@@Base>
   2d114:	cmp	r5, r0
   2d118:	moveq	r0, #0
   2d11c:	beq	2cfa4 <__flatcc_fb_init_parser@@Base+0xb8>
   2d120:	movw	r1, #27108	; 0x69e4
   2d124:	movt	r1, #5
   2d128:	ldr	r3, [pc, #156]	; 2d1cc <__flatcc_fb_init_parser@@Base+0x2e0>
   2d12c:	movw	r0, #28620	; 0x6fcc
   2d130:	movt	r0, #5
   2d134:	movw	r2, #1331	; 0x533
   2d138:	bl	14014 <__assert_fail@plt>
   2d13c:	bl	142b8 <flatcc_init_options@@Base>
   2d140:	b	2cf54 <__flatcc_fb_init_parser@@Base+0x68>
   2d144:	movw	r6, #28496	; 0x6f50
   2d148:	movt	r6, #5
   2d14c:	mov	sl, #4
   2d150:	b	2d01c <__flatcc_fb_init_parser@@Base+0x130>
   2d154:	ldr	r3, [r4, #44]	; 0x2c
   2d158:	ldr	r5, [r4, #52]	; 0x34
   2d15c:	add	r2, r5, #32
   2d160:	cmp	r2, r3
   2d164:	bhi	2d194 <__flatcc_fb_init_parser@@Base+0x2a8>
   2d168:	add	r3, r4, #476	; 0x1dc
   2d16c:	mov	r1, r5
   2d170:	ldr	r0, [r4, #412]	; 0x19c
   2d174:	ldrd	r6, [r3]
   2d178:	mov	r3, #0
   2d17c:	str	r2, [r4, #52]	; 0x34
   2d180:	mov	r2, #1
   2d184:	str	r3, [r5]
   2d188:	strd	r6, [r5, #20]
   2d18c:	bl	291cc <fb_scope_table_insert_item@@Base>
   2d190:	b	2d100 <__flatcc_fb_init_parser@@Base+0x214>
   2d194:	mov	r1, #1
   2d198:	mov	r0, #65536	; 0x10000
   2d19c:	bl	13e7c <calloc@plt>
   2d1a0:	cmp	r0, #0
   2d1a4:	beq	2d1c8 <__flatcc_fb_init_parser@@Base+0x2dc>
   2d1a8:	ldr	r3, [r4, #48]	; 0x30
   2d1ac:	add	r1, r0, #65536	; 0x10000
   2d1b0:	add	r5, r0, #16
   2d1b4:	add	r2, r0, #48	; 0x30
   2d1b8:	str	r1, [r4, #44]	; 0x2c
   2d1bc:	str	r0, [r4, #48]	; 0x30
   2d1c0:	str	r3, [r0]
   2d1c4:	b	2d168 <__flatcc_fb_init_parser@@Base+0x27c>
   2d1c8:	bl	2b25c <__flatcc_fb_default_error_out@@Base+0x20>
   2d1cc:	andeq	r6, r5, ip, asr #17

0002d1d0 <__flatcc_fb_parse@@Base>:
   2d1d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2d1d4:	mov	r4, r0
   2d1d8:	mov	r5, r1
   2d1dc:	mov	r0, #1
   2d1e0:	movw	r1, #28704	; 0x7020
   2d1e4:	movt	r1, #5
   2d1e8:	strd	r6, [sp, #8]
   2d1ec:	mov	r6, #4
   2d1f0:	mov	r7, #0
   2d1f4:	strd	r8, [sp, #16]
   2d1f8:	cmp	r3, #0
   2d1fc:	strd	sl, [sp, #24]
   2d200:	movw	r3, #28712	; 0x7028
   2d204:	movt	r3, #5
   2d208:	str	lr, [sp, #32]
   2d20c:	mov	r8, #0
   2d210:	mov	r9, #9
   2d214:	strne	r5, [r4, #16]
   2d218:	sub	sp, sp, #36	; 0x24
   2d21c:	strd	r0, [r4, #64]	; 0x40
   2d220:	movw	r1, #64554	; 0xfc2a
   2d224:	movt	r1, #65535	; 0xffff
   2d228:	mov	r0, #5
   2d22c:	strd	r6, [r4, #72]	; 0x48
   2d230:	add	r6, r5, r2
   2d234:	cmp	r5, r6
   2d238:	str	r5, [r4, #60]	; 0x3c
   2d23c:	str	r1, [r4, #104]	; 0x68
   2d240:	mov	r1, #0
   2d244:	strd	r8, [r4, #80]	; 0x50
   2d248:	str	r3, [r4, #88]	; 0x58
   2d24c:	str	r0, [r4, #92]	; 0x5c
   2d250:	str	r1, [r4, #96]	; 0x60
   2d254:	str	r1, [r4, #100]	; 0x64
   2d258:	beq	2d4c4 <__flatcc_fb_parse@@Base+0x2f4>
   2d25c:	movw	r9, #29243	; 0x723b
   2d260:	movt	r9, #25968	; 0x6570
   2d264:	movw	r8, #26174	; 0x663e
   2d268:	movt	r8, #28265	; 0x6e69
   2d26c:	movw	r3, #30004	; 0x7534
   2d270:	movt	r3, #29801	; 0x7469
   2d274:	movw	fp, #26931	; 0x6933
   2d278:	movt	fp, #29806	; 0x746e
   2d27c:	str	r3, [sp, #12]
   2d280:	str	r9, [sp, #16]
   2d284:	ldrb	r1, [r5]
   2d288:	movw	r7, #30006	; 0x7536
   2d28c:	movt	r7, #29811	; 0x7473
   2d290:	movw	sl, #29494	; 0x7336
   2d294:	movt	sl, #29812	; 0x7474
   2d298:	cmp	r1, #126	; 0x7e
   2d29c:	ldrls	pc, [pc, r1, lsl #2]
   2d2a0:	b	2eb58 <__flatcc_fb_parse@@Base+0x1988>
   2d2a4:	andeq	sp, r2, r4, asr #9
   2d2a8:	andeq	lr, r2, r8, asr fp
   2d2ac:	andeq	lr, r2, r8, asr fp
   2d2b0:	andeq	lr, r2, r8, asr fp
   2d2b4:	andeq	lr, r2, r8, asr fp
   2d2b8:	andeq	lr, r2, r8, asr fp
   2d2bc:	andeq	lr, r2, r8, asr fp
   2d2c0:	andeq	lr, r2, r8, asr fp
   2d2c4:	andeq	lr, r2, r8, asr fp
   2d2c8:	andeq	sp, r2, r0, lsr #9
   2d2cc:	andeq	lr, r2, r4, asr #14
   2d2d0:	andeq	lr, r2, r8, asr fp
   2d2d4:	andeq	lr, r2, r8, asr fp
   2d2d8:			; <UNDEFINED> instruction: 0x0002e7b0
   2d2dc:	andeq	lr, r2, r8, asr fp
   2d2e0:	andeq	lr, r2, r8, asr fp
   2d2e4:	andeq	lr, r2, r8, asr fp
   2d2e8:	andeq	lr, r2, r8, asr fp
   2d2ec:	andeq	lr, r2, r8, asr fp
   2d2f0:	andeq	lr, r2, r8, asr fp
   2d2f4:	andeq	lr, r2, r8, asr fp
   2d2f8:	andeq	lr, r2, r8, asr fp
   2d2fc:	andeq	lr, r2, r8, asr fp
   2d300:	andeq	lr, r2, r8, asr fp
   2d304:	andeq	lr, r2, r8, asr fp
   2d308:	andeq	lr, r2, r8, asr fp
   2d30c:	andeq	lr, r2, r8, asr fp
   2d310:	andeq	lr, r2, r8, asr fp
   2d314:	andeq	lr, r2, r8, asr fp
   2d318:	andeq	lr, r2, r8, asr fp
   2d31c:	andeq	lr, r2, r8, asr fp
   2d320:	andeq	lr, r2, r8, asr fp
   2d324:	andeq	sp, r2, r0, lsr #9
   2d328:	andeq	lr, r2, r0, lsl #14
   2d32c:	andeq	sp, r2, r0, lsl r7
   2d330:	andeq	lr, r2, r8, asr fp
   2d334:	andeq	lr, r2, r8, asr fp
   2d338:	andeq	lr, r2, r0, lsl #14
   2d33c:	andeq	lr, r2, r4, ror r7
   2d340:	andeq	lr, r2, r8, asr fp
   2d344:	andeq	lr, r2, ip, lsr #14
   2d348:	andeq	lr, r2, ip, lsr #14
   2d34c:	andeq	lr, r2, ip, ror #11
   2d350:	andeq	lr, r2, ip, lsr #12
   2d354:	andeq	lr, r2, ip, lsr #14
   2d358:	andeq	lr, r2, r8, ror #12
   2d35c:	andeq	lr, r2, r8, lsr #13
   2d360:	andeq	lr, r2, r0, lsr r4
   2d364:	andeq	lr, r2, r0, ror r4
   2d368:	andeq	lr, r2, r4, asr #6
   2d36c:	andeq	lr, r2, r4, asr #6
   2d370:	andeq	lr, r2, r4, asr #6
   2d374:	andeq	lr, r2, r4, asr #6
   2d378:	andeq	lr, r2, r4, asr #6
   2d37c:	andeq	lr, r2, r4, asr #6
   2d380:	andeq	lr, r2, r4, asr #6
   2d384:	andeq	lr, r2, r4, asr #6
   2d388:	andeq	lr, r2, r4, asr #6
   2d38c:	andeq	lr, r2, r8, ror #7
   2d390:	andeq	lr, r2, ip, lsr #14
   2d394:	ldrdeq	lr, [r2], -r4
   2d398:	andeq	lr, r2, r4, lsr #16
   2d39c:	andeq	lr, r2, r0, ror #16
   2d3a0:	andeq	lr, r2, ip, lsr #14
   2d3a4:	andeq	lr, r2, r8, asr fp
   2d3a8:	ldrdeq	lr, [r2], -r8
   2d3ac:	ldrdeq	lr, [r2], -r8
   2d3b0:	ldrdeq	lr, [r2], -r8
   2d3b4:	ldrdeq	lr, [r2], -r8
   2d3b8:	ldrdeq	lr, [r2], -r8
   2d3bc:	ldrdeq	lr, [r2], -r8
   2d3c0:	ldrdeq	lr, [r2], -r8
   2d3c4:	ldrdeq	lr, [r2], -r8
   2d3c8:	ldrdeq	lr, [r2], -r8
   2d3cc:	ldrdeq	lr, [r2], -r8
   2d3d0:	ldrdeq	lr, [r2], -r8
   2d3d4:	ldrdeq	lr, [r2], -r8
   2d3d8:	ldrdeq	lr, [r2], -r8
   2d3dc:	ldrdeq	lr, [r2], -r8
   2d3e0:	ldrdeq	lr, [r2], -r8
   2d3e4:	ldrdeq	lr, [r2], -r8
   2d3e8:	ldrdeq	lr, [r2], -r8
   2d3ec:	ldrdeq	lr, [r2], -r8
   2d3f0:	ldrdeq	lr, [r2], -r8
   2d3f4:	ldrdeq	lr, [r2], -r8
   2d3f8:	ldrdeq	lr, [r2], -r8
   2d3fc:	ldrdeq	lr, [r2], -r8
   2d400:	ldrdeq	lr, [r2], -r8
   2d404:	ldrdeq	lr, [r2], -r8
   2d408:	ldrdeq	lr, [r2], -r8
   2d40c:	ldrdeq	lr, [r2], -r8
   2d410:	andeq	lr, r2, ip, lsr #14
   2d414:	andeq	lr, r2, ip, lsr #14
   2d418:	andeq	lr, r2, ip, lsr #14
   2d41c:	andeq	lr, r2, r0, lsl #14
   2d420:	ldrdeq	lr, [r2], -r8
   2d424:	andeq	lr, r2, r8, asr fp
   2d428:	ldrdeq	lr, [r2], -r8
   2d42c:	ldrdeq	lr, [r2], -r8
   2d430:	ldrdeq	lr, [r2], -r8
   2d434:	ldrdeq	lr, [r2], -r8
   2d438:	ldrdeq	lr, [r2], -r8
   2d43c:	ldrdeq	lr, [r2], -r8
   2d440:	ldrdeq	lr, [r2], -r8
   2d444:	ldrdeq	lr, [r2], -r8
   2d448:	ldrdeq	lr, [r2], -r8
   2d44c:	ldrdeq	lr, [r2], -r8
   2d450:	ldrdeq	lr, [r2], -r8
   2d454:	ldrdeq	lr, [r2], -r8
   2d458:	ldrdeq	lr, [r2], -r8
   2d45c:	ldrdeq	lr, [r2], -r8
   2d460:	ldrdeq	lr, [r2], -r8
   2d464:	ldrdeq	lr, [r2], -r8
   2d468:	ldrdeq	lr, [r2], -r8
   2d46c:	ldrdeq	lr, [r2], -r8
   2d470:	ldrdeq	lr, [r2], -r8
   2d474:	ldrdeq	lr, [r2], -r8
   2d478:	ldrdeq	lr, [r2], -r8
   2d47c:	ldrdeq	lr, [r2], -r8
   2d480:	ldrdeq	lr, [r2], -r8
   2d484:	ldrdeq	lr, [r2], -r8
   2d488:	ldrdeq	lr, [r2], -r8
   2d48c:	ldrdeq	lr, [r2], -r8
   2d490:	andeq	lr, r2, ip, lsr #14
   2d494:	ldrdeq	lr, [r2], -r0
   2d498:	andeq	lr, r2, ip, lsr #14
   2d49c:	andeq	lr, r2, r0, lsl #14
   2d4a0:	add	r3, r5, #1
   2d4a4:	b	2d4b8 <__flatcc_fb_parse@@Base+0x2e8>
   2d4a8:	ldrb	r1, [r3], #1
   2d4ac:	cmp	r1, #9
   2d4b0:	cmpne	r1, #32
   2d4b4:	bne	2d298 <__flatcc_fb_parse@@Base+0xc8>
   2d4b8:	cmp	r3, r6
   2d4bc:	mov	r5, r3
   2d4c0:	bne	2d4a8 <__flatcc_fb_parse@@Base+0x2d8>
   2d4c4:	mov	r3, r5
   2d4c8:	mov	r2, r5
   2d4cc:	mov	r1, #0
   2d4d0:	mov	r0, r4
   2d4d4:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2d4d8:	ldr	r8, [r4, #20]
   2d4dc:	ldr	r3, [r4, #40]	; 0x28
   2d4e0:	ldr	r0, [r4, #216]	; 0xd8
   2d4e4:	str	r3, [r4, #24]
   2d4e8:	str	r8, [r4, #40]	; 0x28
   2d4ec:	bl	13f18 <malloc@plt>
   2d4f0:	cmp	r0, #0
   2d4f4:	str	r0, [r4, #112]	; 0x70
   2d4f8:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2d4fc:	ldr	r3, [r8, #16]
   2d500:	cmn	r3, #964	; 0x3c4
   2d504:	beq	2f214 <__flatcc_fb_parse@@Base+0x2044>
   2d508:	movw	r2, #64565	; 0xfc35
   2d50c:	movt	r2, #65535	; 0xffff
   2d510:	cmp	r3, r2
   2d514:	beq	2eb80 <__flatcc_fb_parse@@Base+0x19b0>
   2d518:	cmp	r3, #0
   2d51c:	ldr	r0, [r4, #108]	; 0x6c
   2d520:	beq	2ec7c <__flatcc_fb_parse@@Base+0x1aac>
   2d524:	cmp	r0, #9
   2d528:	bgt	2d6f4 <__flatcc_fb_parse@@Base+0x524>
   2d52c:	movw	r2, #29360	; 0x72b0
   2d530:	movt	r2, #5
   2d534:	movw	fp, #29336	; 0x7298
   2d538:	movt	fp, #5
   2d53c:	movw	sl, #30156	; 0x75cc
   2d540:	movt	sl, #5
   2d544:	str	r2, [sp, #12]
   2d548:	mov	r6, r8
   2d54c:	mov	r1, r8
   2d550:	b	2d5d0 <__flatcc_fb_parse@@Base+0x400>
   2d554:	mvn	r2, #972	; 0x3cc
   2d558:	cmp	r3, r2
   2d55c:	beq	2da08 <__flatcc_fb_parse@@Base+0x838>
   2d560:	cmn	r3, #972	; 0x3cc
   2d564:	bge	2d810 <__flatcc_fb_parse@@Base+0x640>
   2d568:	movw	r2, #64553	; 0xfc29
   2d56c:	movt	r2, #65535	; 0xffff
   2d570:	cmp	r3, r2
   2d574:	beq	2e0d4 <__flatcc_fb_parse@@Base+0xf04>
   2d578:	cmn	r3, #976	; 0x3d0
   2d57c:	beq	2de30 <__flatcc_fb_parse@@Base+0xc60>
   2d580:	mvn	r2, #996	; 0x3e4
   2d584:	cmp	r3, r2
   2d588:	beq	2da90 <__flatcc_fb_parse@@Base+0x8c0>
   2d58c:	mov	ip, #0
   2d590:	mov	r2, sl
   2d594:	mov	r3, ip
   2d598:	mov	r0, r4
   2d59c:	str	ip, [sp]
   2d5a0:	str	ip, [sp, #4]
   2d5a4:	bl	2b548 <__flatcc_error_report@@Base>
   2d5a8:	ldr	r1, [r4, #40]	; 0x28
   2d5ac:	cmp	r6, r1
   2d5b0:	ldr	r0, [r4, #108]	; 0x6c
   2d5b4:	beq	2d6c4 <__flatcc_fb_parse@@Base+0x4f4>
   2d5b8:	ldr	r3, [r1, #16]
   2d5bc:	cmp	r3, #0
   2d5c0:	beq	2ec7c <__flatcc_fb_parse@@Base+0x1aac>
   2d5c4:	cmp	r0, #9
   2d5c8:	mov	r6, r1
   2d5cc:	bgt	2d6f4 <__flatcc_fb_parse@@Base+0x524>
   2d5d0:	cmn	r3, #968	; 0x3c8
   2d5d4:	beq	2dc90 <__flatcc_fb_parse@@Base+0xac0>
   2d5d8:	ble	2d554 <__flatcc_fb_parse@@Base+0x384>
   2d5dc:	cmp	r3, #5
   2d5e0:	beq	2d9f0 <__flatcc_fb_parse@@Base+0x820>
   2d5e4:	bgt	2d7c8 <__flatcc_fb_parse@@Base+0x5f8>
   2d5e8:	movw	r2, #64570	; 0xfc3a
   2d5ec:	movt	r2, #65535	; 0xffff
   2d5f0:	cmp	r3, r2
   2d5f4:	beq	2d96c <__flatcc_fb_parse@@Base+0x79c>
   2d5f8:	blt	2d8e0 <__flatcc_fb_parse@@Base+0x710>
   2d5fc:	mvn	r2, #964	; 0x3c4
   2d600:	cmp	r3, r2
   2d604:	bne	2d58c <__flatcc_fb_parse@@Base+0x3bc>
   2d608:	mov	r0, r4
   2d60c:	add	r5, r4, #360	; 0x168
   2d610:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2d614:	ldrh	r3, [r5, #8]
   2d618:	cmp	r3, #0
   2d61c:	bne	2ea9c <__flatcc_fb_parse@@Base+0x18cc>
   2d620:	ldr	r1, [r4, #40]	; 0x28
   2d624:	ldr	r3, [r1, #16]
   2d628:	cmp	r3, #19
   2d62c:	bne	2e1cc <__flatcc_fb_parse@@Base+0xffc>
   2d630:	mov	r0, r4
   2d634:	mov	r7, #0
   2d638:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2d63c:	mov	r3, #2
   2d640:	mov	r1, r5
   2d644:	ldr	r8, [r4, #40]	; 0x28
   2d648:	mov	r0, r4
   2d64c:	strh	r3, [r5, #8]
   2d650:	str	r7, [r4, #360]	; 0x168
   2d654:	str	r7, [r4, #364]	; 0x16c
   2d658:	bl	2bd54 <__flatcc_error_report@@Base+0x80c>
   2d65c:	ldr	r3, [r4, #360]	; 0x168
   2d660:	cmp	r3, r7
   2d664:	beq	2d69c <__flatcc_fb_parse@@Base+0x4cc>
   2d668:	ldr	r3, [r4, #364]	; 0x16c
   2d66c:	cmp	r3, #4
   2d670:	beq	2d69c <__flatcc_fb_parse@@Base+0x4cc>
   2d674:	mov	r0, #1
   2d678:	movw	r2, #29264	; 0x7250
   2d67c:	movt	r2, #5
   2d680:	mov	r1, r8
   2d684:	str	r7, [sp]
   2d688:	mov	r3, r7
   2d68c:	str	r7, [sp, #4]
   2d690:	strh	r0, [r5, #8]
   2d694:	mov	r0, r4
   2d698:	bl	2b548 <__flatcc_error_report@@Base>
   2d69c:	ldr	r1, [r4, #40]	; 0x28
   2d6a0:	ldr	r3, [r1, #16]
   2d6a4:	cmp	r3, #59	; 0x3b
   2d6a8:	bne	2e950 <__flatcc_fb_parse@@Base+0x1780>
   2d6ac:	mov	r0, r4
   2d6b0:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2d6b4:	ldr	r1, [r4, #40]	; 0x28
   2d6b8:	ldr	r0, [r4, #108]	; 0x6c
   2d6bc:	cmp	r6, r1
   2d6c0:	bne	2d5b8 <__flatcc_fb_parse@@Base+0x3e8>
   2d6c4:	mov	r8, r1
   2d6c8:	cmp	r0, #0
   2d6cc:	bne	2d6f4 <__flatcc_fb_parse@@Base+0x524>
   2d6d0:	mov	r3, r0
   2d6d4:	mov	r1, r8
   2d6d8:	str	r0, [sp]
   2d6dc:	movw	r2, #30196	; 0x75f4
   2d6e0:	movt	r2, #5
   2d6e4:	str	r0, [sp, #4]
   2d6e8:	mov	r0, r4
   2d6ec:	bl	2b548 <__flatcc_error_report@@Base>
   2d6f0:	ldr	r0, [r4, #108]	; 0x6c
   2d6f4:	add	sp, sp, #36	; 0x24
   2d6f8:	ldrd	r4, [sp]
   2d6fc:	ldrd	r6, [sp, #8]
   2d700:	ldrd	r8, [sp, #16]
   2d704:	ldrd	sl, [sp, #24]
   2d708:	add	sp, sp, #32
   2d70c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d710:	add	r7, r5, #1
   2d714:	mov	r2, r5
   2d718:	mov	r3, r7
   2d71c:	mov	r1, #19
   2d720:	mov	r0, r4
   2d724:	mov	r9, r7
   2d728:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2d72c:	sub	r7, r7, #1
   2d730:	b	2d744 <__flatcc_fb_parse@@Base+0x574>
   2d734:	cmp	r3, #127	; 0x7f
   2d738:	cmpne	r3, #31
   2d73c:	bls	2d760 <__flatcc_fb_parse@@Base+0x590>
   2d740:	mov	r7, r5
   2d744:	add	r5, r7, #1
   2d748:	cmp	r6, r5
   2d74c:	beq	2d760 <__flatcc_fb_parse@@Base+0x590>
   2d750:	ldrb	r3, [r7, #1]
   2d754:	cmp	r3, #34	; 0x22
   2d758:	cmpne	r3, #92	; 0x5c
   2d75c:	bne	2d734 <__flatcc_fb_parse@@Base+0x564>
   2d760:	cmp	r5, r9
   2d764:	beq	2d77c <__flatcc_fb_parse@@Base+0x5ac>
   2d768:	mov	r2, r9
   2d76c:	mov	r3, r5
   2d770:	mov	r1, #20
   2d774:	mov	r0, r4
   2d778:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2d77c:	ldrb	r3, [r5]
   2d780:	cmp	r3, #34	; 0x22
   2d784:	beq	2f4d4 <__flatcc_fb_parse@@Base+0x2304>
   2d788:	cmp	r3, #0
   2d78c:	cmpne	r6, r5
   2d790:	beq	2ec4c <__flatcc_fb_parse@@Base+0x1a7c>
   2d794:	cmp	r3, #92	; 0x5c
   2d798:	beq	2d848 <__flatcc_fb_parse@@Base+0x678>
   2d79c:	cmp	r3, #13
   2d7a0:	cmpne	r3, #10
   2d7a4:	beq	2ec4c <__flatcc_fb_parse@@Base+0x1a7c>
   2d7a8:	add	r7, r5, #1
   2d7ac:	mov	r2, r5
   2d7b0:	mov	r3, r7
   2d7b4:	mov	r1, #6
   2d7b8:	mov	r0, r4
   2d7bc:	mov	r9, r7
   2d7c0:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2d7c4:	b	2d72c <__flatcc_fb_parse@@Base+0x55c>
   2d7c8:	cmp	r3, #27
   2d7cc:	beq	2e15c <__flatcc_fb_parse@@Base+0xf8c>
   2d7d0:	cmp	r3, #123	; 0x7b
   2d7d4:	beq	2e148 <__flatcc_fb_parse@@Base+0xf78>
   2d7d8:	cmp	r3, #7
   2d7dc:	bne	2d58c <__flatcc_fb_parse@@Base+0x3bc>
   2d7e0:	movw	r3, #27620	; 0x6be4
   2d7e4:	movt	r3, #5
   2d7e8:	movw	r2, #30084	; 0x7584
   2d7ec:	movt	r2, #5
   2d7f0:	mov	r0, #1
   2d7f4:	str	r3, [sp]
   2d7f8:	mov	r3, #0
   2d7fc:	str	r0, [sp, #4]
   2d800:	mov	r0, r4
   2d804:	bl	2b548 <__flatcc_error_report@@Base>
   2d808:	ldr	r1, [r4, #40]	; 0x28
   2d80c:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2d810:	movw	r2, #64566	; 0xfc36
   2d814:	movt	r2, #65535	; 0xffff
   2d818:	cmp	r3, r2
   2d81c:	beq	2ddac <__flatcc_fb_parse@@Base+0xbdc>
   2d820:	bgt	2dd18 <__flatcc_fb_parse@@Base+0xb48>
   2d824:	movw	r2, #64565	; 0xfc35
   2d828:	movt	r2, #65535	; 0xffff
   2d82c:	cmp	r3, r2
   2d830:	bne	2d58c <__flatcc_fb_parse@@Base+0x3bc>
   2d834:	mov	ip, #0
   2d838:	movw	r2, #29876	; 0x74b4
   2d83c:	movt	r2, #5
   2d840:	mov	r3, ip
   2d844:	b	2d598 <__flatcc_fb_parse@@Base+0x3c8>
   2d848:	add	r9, r7, #2
   2d84c:	mov	r2, r5
   2d850:	mov	r3, r9
   2d854:	mov	r1, #21
   2d858:	mov	r0, r4
   2d85c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2d860:	cmp	r6, r9
   2d864:	beq	2fb84 <__flatcc_fb_parse@@Base+0x29b4>
   2d868:	ldrb	r3, [r5, #1]
   2d86c:	cmp	r3, #0
   2d870:	beq	2fb84 <__flatcc_fb_parse@@Base+0x29b4>
   2d874:	cmp	r3, #34	; 0x22
   2d878:	cmpne	r3, #92	; 0x5c
   2d87c:	addeq	r7, r5, #2
   2d880:	beq	2d72c <__flatcc_fb_parse@@Base+0x55c>
   2d884:	cmp	r3, #10
   2d888:	beq	2f3f4 <__flatcc_fb_parse@@Base+0x2224>
   2d88c:	cmp	r3, #13
   2d890:	movne	r5, r9
   2d894:	bne	2d7a8 <__flatcc_fb_parse@@Base+0x5d8>
   2d898:	add	r7, r5, #2
   2d89c:	cmp	r6, r7
   2d8a0:	beq	2d8b4 <__flatcc_fb_parse@@Base+0x6e4>
   2d8a4:	ldrb	r3, [r5, #2]
   2d8a8:	cmp	r3, #10
   2d8ac:	bne	2d8b4 <__flatcc_fb_parse@@Base+0x6e4>
   2d8b0:	add	r7, r5, #3
   2d8b4:	ldr	ip, [r4, #64]	; 0x40
   2d8b8:	mov	r2, r9
   2d8bc:	mov	r3, r7
   2d8c0:	mov	r1, #18
   2d8c4:	mov	r0, r4
   2d8c8:	str	r7, [r4, #60]	; 0x3c
   2d8cc:	mov	r9, r7
   2d8d0:	add	ip, ip, #1
   2d8d4:	str	ip, [r4, #64]	; 0x40
   2d8d8:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2d8dc:	b	2d72c <__flatcc_fb_parse@@Base+0x55c>
   2d8e0:	mov	r0, r4
   2d8e4:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2d8e8:	ldr	r2, [r4, #44]	; 0x2c
   2d8ec:	ldr	r1, [r4, #52]	; 0x34
   2d8f0:	add	r3, r1, #128	; 0x80
   2d8f4:	cmp	r3, r2
   2d8f8:	bhi	2ea00 <__flatcc_fb_parse@@Base+0x1830>
   2d8fc:	ldr	r0, [r4, #392]	; 0x188
   2d900:	mov	ip, #2
   2d904:	str	r3, [r4, #52]	; 0x34
   2d908:	ldr	r2, [r4, #544]	; 0x220
   2d90c:	str	r0, [r1]
   2d910:	ldr	r3, [r4, #36]	; 0x24
   2d914:	strh	ip, [r1, #8]
   2d918:	str	r1, [r4, #392]	; 0x188
   2d91c:	str	r2, [r1, #12]
   2d920:	cmp	r3, #0
   2d924:	beq	2d948 <__flatcc_fb_parse@@Base+0x778>
   2d928:	mov	r0, #0
   2d92c:	b	2d934 <__flatcc_fb_parse@@Base+0x764>
   2d930:	mov	r3, r2
   2d934:	ldr	r2, [r3]
   2d938:	str	r0, [r3]
   2d93c:	mov	r0, r3
   2d940:	cmp	r2, #0
   2d944:	bne	2d930 <__flatcc_fb_parse@@Base+0x760>
   2d948:	mov	r0, #0
   2d94c:	movw	r2, #64569	; 0xfc39
   2d950:	str	r3, [r1, #32]
   2d954:	movt	r2, #65535	; 0xffff
   2d958:	str	r0, [r4, #36]	; 0x24
   2d95c:	mov	r0, r4
   2d960:	bl	2c7d4 <__flatcc_error_report@@Base+0x128c>
   2d964:	ldr	r1, [r4, #40]	; 0x28
   2d968:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2d96c:	mov	r0, r4
   2d970:	add	r5, r4, #376	; 0x178
   2d974:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2d978:	ldrh	r3, [r5, #8]
   2d97c:	cmp	r3, #2
   2d980:	beq	2f508 <__flatcc_fb_parse@@Base+0x2338>
   2d984:	ldr	r1, [r4, #40]	; 0x28
   2d988:	ldr	r3, [r1, #16]
   2d98c:	cmp	r3, #19
   2d990:	bne	2e174 <__flatcc_fb_parse@@Base+0xfa4>
   2d994:	mov	r0, r4
   2d998:	mov	r7, #0
   2d99c:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2d9a0:	mov	r3, #2
   2d9a4:	mov	r1, r5
   2d9a8:	mov	r0, r4
   2d9ac:	strh	r3, [r5, #8]
   2d9b0:	str	r7, [r4, #376]	; 0x178
   2d9b4:	str	r7, [r4, #380]	; 0x17c
   2d9b8:	bl	2bd54 <__flatcc_error_report@@Base+0x80c>
   2d9bc:	ldr	r1, [r4, #40]	; 0x28
   2d9c0:	ldr	r3, [r1, #16]
   2d9c4:	cmp	r3, #59	; 0x3b
   2d9c8:	beq	2d6ac <__flatcc_fb_parse@@Base+0x4dc>
   2d9cc:	mov	r3, r7
   2d9d0:	movw	r2, #29168	; 0x71f0
   2d9d4:	movt	r2, #5
   2d9d8:	mov	r0, r4
   2d9dc:	str	r7, [sp]
   2d9e0:	str	r7, [sp, #4]
   2d9e4:	bl	2b548 <__flatcc_error_report@@Base>
   2d9e8:	ldr	r1, [r4, #40]	; 0x28
   2d9ec:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2d9f0:	movw	r3, #27620	; 0x6be4
   2d9f4:	movt	r3, #5
   2d9f8:	movw	r2, #30032	; 0x7550
   2d9fc:	movt	r2, #5
   2da00:	mov	r0, #1
   2da04:	b	2d7f4 <__flatcc_fb_parse@@Base+0x624>
   2da08:	mov	r0, r4
   2da0c:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2da10:	ldr	r2, [r4, #44]	; 0x2c
   2da14:	ldr	r1, [r4, #52]	; 0x34
   2da18:	add	r3, r1, #128	; 0x80
   2da1c:	cmp	r3, r2
   2da20:	bhi	2e964 <__flatcc_fb_parse@@Base+0x1794>
   2da24:	ldr	r0, [r4, #392]	; 0x188
   2da28:	mov	ip, #1
   2da2c:	str	r3, [r4, #52]	; 0x34
   2da30:	ldr	r2, [r4, #544]	; 0x220
   2da34:	str	r0, [r1]
   2da38:	ldr	r3, [r4, #36]	; 0x24
   2da3c:	strh	ip, [r1, #8]
   2da40:	str	r1, [r4, #392]	; 0x188
   2da44:	str	r2, [r1, #12]
   2da48:	cmp	r3, #0
   2da4c:	beq	2da70 <__flatcc_fb_parse@@Base+0x8a0>
   2da50:	mov	r0, #0
   2da54:	b	2da5c <__flatcc_fb_parse@@Base+0x88c>
   2da58:	mov	r3, r2
   2da5c:	ldr	r2, [r3]
   2da60:	str	r0, [r3]
   2da64:	mov	r0, r3
   2da68:	cmp	r2, #0
   2da6c:	bne	2da58 <__flatcc_fb_parse@@Base+0x888>
   2da70:	mov	ip, #0
   2da74:	mvn	r2, #972	; 0x3cc
   2da78:	str	r3, [r1, #32]
   2da7c:	mov	r0, r4
   2da80:	str	ip, [r4, #36]	; 0x24
   2da84:	bl	2c7d4 <__flatcc_error_report@@Base+0x128c>
   2da88:	ldr	r1, [r4, #40]	; 0x28
   2da8c:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2da90:	mov	r0, r4
   2da94:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2da98:	ldr	r2, [r4, #44]	; 0x2c
   2da9c:	ldr	r5, [r4, #52]	; 0x34
   2daa0:	add	r3, r5, #128	; 0x80
   2daa4:	cmp	r3, r2
   2daa8:	bhi	2e998 <__flatcc_fb_parse@@Base+0x17c8>
   2daac:	ldr	r1, [r4, #392]	; 0x188
   2dab0:	mov	r0, #3
   2dab4:	str	r3, [r4, #52]	; 0x34
   2dab8:	ldr	r2, [r4, #544]	; 0x220
   2dabc:	str	r1, [r5]
   2dac0:	ldr	r3, [r4, #36]	; 0x24
   2dac4:	strh	r0, [r5, #8]
   2dac8:	str	r5, [r4, #392]	; 0x188
   2dacc:	str	r2, [r5, #12]
   2dad0:	cmp	r3, #0
   2dad4:	beq	2daf8 <__flatcc_fb_parse@@Base+0x928>
   2dad8:	mov	r1, #0
   2dadc:	b	2dae4 <__flatcc_fb_parse@@Base+0x914>
   2dae0:	mov	r3, r2
   2dae4:	ldr	r2, [r3]
   2dae8:	str	r1, [r3]
   2daec:	mov	r1, r3
   2daf0:	cmp	r2, #0
   2daf4:	bne	2dae0 <__flatcc_fb_parse@@Base+0x910>
   2daf8:	ldr	r8, [r4, #40]	; 0x28
   2dafc:	mov	r7, #0
   2db00:	str	r3, [r5, #32]
   2db04:	str	r7, [r4, #36]	; 0x24
   2db08:	ldr	r3, [r8, #16]
   2db0c:	cmp	r3, #9
   2db10:	bne	2e27c <__flatcc_fb_parse@@Base+0x10ac>
   2db14:	mov	r0, r4
   2db18:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2db1c:	ldr	r3, [r4, #40]	; 0x28
   2db20:	ldr	r3, [r3, #16]
   2db24:	str	r8, [r5, #4]
   2db28:	cmp	r3, #58	; 0x3a
   2db2c:	beq	2eac8 <__flatcc_fb_parse@@Base+0x18f8>
   2db30:	mov	r0, r4
   2db34:	bl	2c5f4 <__flatcc_error_report@@Base+0x10ac>
   2db38:	ldr	r8, [r4, #40]	; 0x28
   2db3c:	ldr	r3, [r8, #16]
   2db40:	str	r0, [r5, #28]
   2db44:	cmp	r3, #123	; 0x7b
   2db48:	bne	2e928 <__flatcc_fb_parse@@Base+0x1758>
   2db4c:	mov	r0, r4
   2db50:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2db54:	ldr	r9, [r4, #40]	; 0x28
   2db58:	ldr	r2, [r9, #16]
   2db5c:	cmp	r2, #9
   2db60:	bne	2ed68 <__flatcc_fb_parse@@Base+0x1b98>
   2db64:	movw	r3, #29616	; 0x73b0
   2db68:	movt	r3, #5
   2db6c:	str	r3, [sp, #16]
   2db70:	mov	r0, r4
   2db74:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2db78:	ldr	r3, [r4, #108]	; 0x6c
   2db7c:	cmp	r3, #9
   2db80:	bgt	2e2a0 <__flatcc_fb_parse@@Base+0x10d0>
   2db84:	ldr	r2, [r4, #44]	; 0x2c
   2db88:	ldr	r7, [r4, #52]	; 0x34
   2db8c:	add	r3, r7, #128	; 0x80
   2db90:	cmp	r3, r2
   2db94:	bhi	2f280 <__flatcc_fb_parse@@Base+0x20b0>
   2db98:	ldr	r2, [r5, #20]
   2db9c:	mov	r0, #5
   2dba0:	str	r3, [r4, #52]	; 0x34
   2dba4:	str	r2, [r7]
   2dba8:	strh	r0, [r7, #8]
   2dbac:	str	r7, [r5, #20]
   2dbb0:	ldr	r3, [r4, #36]	; 0x24
   2dbb4:	cmp	r3, #0
   2dbb8:	beq	2dbdc <__flatcc_fb_parse@@Base+0xa0c>
   2dbbc:	mov	r0, #0
   2dbc0:	b	2dbc8 <__flatcc_fb_parse@@Base+0x9f8>
   2dbc4:	mov	r3, r2
   2dbc8:	ldr	r2, [r3]
   2dbcc:	str	r0, [r3]
   2dbd0:	mov	r0, r3
   2dbd4:	cmp	r2, #0
   2dbd8:	bne	2dbc4 <__flatcc_fb_parse@@Base+0x9f4>
   2dbdc:	ldr	r0, [r4, #40]	; 0x28
   2dbe0:	mov	r2, #0
   2dbe4:	str	r3, [r7, #68]	; 0x44
   2dbe8:	str	r2, [r4, #36]	; 0x24
   2dbec:	str	r9, [r7, #4]
   2dbf0:	ldr	r3, [r0, #16]
   2dbf4:	cmp	r3, #61	; 0x3d
   2dbf8:	bne	2dc20 <__flatcc_fb_parse@@Base+0xa50>
   2dbfc:	mov	r0, r4
   2dc00:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2dc04:	mov	r0, r4
   2dc08:	mov	r2, #0
   2dc0c:	ldr	r3, [sp, #16]
   2dc10:	add	r1, r7, #48	; 0x30
   2dc14:	bl	2bf30 <__flatcc_error_report@@Base+0x9e8>
   2dc18:	ldr	r0, [r4, #40]	; 0x28
   2dc1c:	ldr	r3, [r0, #16]
   2dc20:	cmp	r3, #44	; 0x2c
   2dc24:	beq	2ed40 <__flatcc_fb_parse@@Base+0x1b70>
   2dc28:	mov	r1, r0
   2dc2c:	mov	r0, #0
   2dc30:	cmp	r3, #125	; 0x7d
   2dc34:	str	r0, [r4, #36]	; 0x24
   2dc38:	beq	2f3bc <__flatcc_fb_parse@@Base+0x21ec>
   2dc3c:	movw	r2, #29644	; 0x73cc
   2dc40:	movt	r2, #5
   2dc44:	str	r0, [sp]
   2dc48:	mov	r3, r8
   2dc4c:	str	r0, [sp, #4]
   2dc50:	mov	r0, r4
   2dc54:	bl	2b548 <__flatcc_error_report@@Base>
   2dc58:	ldr	r3, [r5, #20]
   2dc5c:	cmp	r3, #0
   2dc60:	beq	2dc84 <__flatcc_fb_parse@@Base+0xab4>
   2dc64:	mov	r1, #0
   2dc68:	b	2dc70 <__flatcc_fb_parse@@Base+0xaa0>
   2dc6c:	mov	r3, r2
   2dc70:	ldr	r2, [r3]
   2dc74:	str	r1, [r3]
   2dc78:	mov	r1, r3
   2dc7c:	cmp	r2, #0
   2dc80:	bne	2dc6c <__flatcc_fb_parse@@Base+0xa9c>
   2dc84:	ldr	r1, [r4, #40]	; 0x28
   2dc88:	str	r3, [r5, #20]
   2dc8c:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2dc90:	mov	r0, r4
   2dc94:	add	r7, r4, #400	; 0x190
   2dc98:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2dc9c:	ldr	r5, [r4, #40]	; 0x28
   2dca0:	ldr	r3, [r4, #400]	; 0x190
   2dca4:	cmp	r3, #0
   2dca8:	beq	2dccc <__flatcc_fb_parse@@Base+0xafc>
   2dcac:	mov	ip, #0
   2dcb0:	mov	r2, fp
   2dcb4:	mov	r3, ip
   2dcb8:	mov	r1, r5
   2dcbc:	mov	r0, r4
   2dcc0:	str	ip, [sp]
   2dcc4:	str	ip, [sp, #4]
   2dcc8:	bl	2b548 <__flatcc_error_report@@Base>
   2dccc:	mov	r1, r7
   2dcd0:	mov	r0, r4
   2dcd4:	bl	2b7e4 <__flatcc_error_report@@Base+0x29c>
   2dcd8:	ldr	r1, [r4, #40]	; 0x28
   2dcdc:	mov	r0, #0
   2dce0:	ldr	r2, [r4, #544]	; 0x220
   2dce4:	ldr	r3, [r1, #16]
   2dce8:	str	r0, [r4, #36]	; 0x24
   2dcec:	str	r2, [r4, #408]	; 0x198
   2dcf0:	cmp	r3, #59	; 0x3b
   2dcf4:	beq	2d6ac <__flatcc_fb_parse@@Base+0x4dc>
   2dcf8:	mov	r3, r5
   2dcfc:	str	r0, [sp]
   2dd00:	str	r0, [sp, #4]
   2dd04:	mov	r0, r4
   2dd08:	ldr	r2, [sp, #12]
   2dd0c:	bl	2b548 <__flatcc_error_report@@Base>
   2dd10:	ldr	r1, [r4, #40]	; 0x28
   2dd14:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2dd18:	mov	r0, r4
   2dd1c:	mov	r5, #0
   2dd20:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2dd24:	ldr	r7, [r4, #40]	; 0x28
   2dd28:	str	r5, [sp, #24]
   2dd2c:	ldr	r3, [r7, #16]
   2dd30:	cmp	r3, #59	; 0x3b
   2dd34:	beq	2e914 <__flatcc_fb_parse@@Base+0x1744>
   2dd38:	cmp	r3, #9
   2dd3c:	beq	2f350 <__flatcc_fb_parse@@Base+0x2180>
   2dd40:	mov	r3, r5
   2dd44:	mov	r1, r7
   2dd48:	str	r5, [sp]
   2dd4c:	movw	r2, #29028	; 0x7164
   2dd50:	movt	r2, #5
   2dd54:	str	r5, [sp, #4]
   2dd58:	mov	r0, r4
   2dd5c:	bl	2b548 <__flatcc_error_report@@Base>
   2dd60:	ldr	r1, [r4, #40]	; 0x28
   2dd64:	ldr	r3, [r1, #16]
   2dd68:	cmp	r3, #0
   2dd6c:	bne	2dd8c <__flatcc_fb_parse@@Base+0xbbc>
   2dd70:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2dd74:	mov	r0, r4
   2dd78:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2dd7c:	ldr	r1, [r4, #40]	; 0x28
   2dd80:	ldr	r3, [r1, #16]
   2dd84:	cmp	r3, #0
   2dd88:	beq	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2dd8c:	cmp	r3, #59	; 0x3b
   2dd90:	bne	2dd74 <__flatcc_fb_parse@@Base+0xba4>
   2dd94:	mov	r0, r4
   2dd98:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2dd9c:	mov	r3, #0
   2dda0:	ldr	r1, [r4, #40]	; 0x28
   2dda4:	str	r3, [r4, #36]	; 0x24
   2dda8:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2ddac:	mov	r0, r4
   2ddb0:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ddb4:	ldr	r2, [r4, #44]	; 0x2c
   2ddb8:	ldr	r5, [r4, #52]	; 0x34
   2ddbc:	add	r3, r5, #32
   2ddc0:	cmp	r3, r2
   2ddc4:	bhi	2e9cc <__flatcc_fb_parse@@Base+0x17fc>
   2ddc8:	ldr	r7, [r4, #40]	; 0x28
   2ddcc:	str	r3, [r4, #52]	; 0x34
   2ddd0:	ldr	r2, [r4, #356]	; 0x164
   2ddd4:	ldr	r3, [r7, #16]
   2ddd8:	str	r2, [r5]
   2dddc:	str	r5, [r4, #356]	; 0x164
   2dde0:	cmp	r3, #19
   2dde4:	beq	2e224 <__flatcc_fb_parse@@Base+0x1054>
   2dde8:	mov	ip, #0
   2ddec:	movw	r2, #29400	; 0x72d8
   2ddf0:	movt	r2, #5
   2ddf4:	mov	r1, r7
   2ddf8:	mov	r3, ip
   2ddfc:	mov	r0, r4
   2de00:	str	ip, [sp]
   2de04:	str	ip, [sp, #4]
   2de08:	bl	2b548 <__flatcc_error_report@@Base>
   2de0c:	ldr	r1, [r4, #40]	; 0x28
   2de10:	ldr	r3, [r1, #16]
   2de14:	cmp	r3, #59	; 0x3b
   2de18:	beq	2d6ac <__flatcc_fb_parse@@Base+0x4dc>
   2de1c:	mov	ip, #0
   2de20:	movw	r2, #29468	; 0x731c
   2de24:	movt	r2, #5
   2de28:	mov	r3, ip
   2de2c:	b	2d598 <__flatcc_fb_parse@@Base+0x3c8>
   2de30:	mov	r0, r4
   2de34:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2de38:	ldr	r2, [r4, #44]	; 0x2c
   2de3c:	ldr	r5, [r4, #52]	; 0x34
   2de40:	add	r3, r5, #128	; 0x80
   2de44:	cmp	r3, r2
   2de48:	bhi	2ea68 <__flatcc_fb_parse@@Base+0x1898>
   2de4c:	ldr	r1, [r4, #392]	; 0x188
   2de50:	mov	r0, #4
   2de54:	str	r3, [r4, #52]	; 0x34
   2de58:	ldr	r2, [r4, #544]	; 0x220
   2de5c:	str	r1, [r5]
   2de60:	ldr	r3, [r4, #36]	; 0x24
   2de64:	strh	r0, [r5, #8]
   2de68:	str	r5, [r4, #392]	; 0x188
   2de6c:	str	r2, [r5, #12]
   2de70:	cmp	r3, #0
   2de74:	beq	2de98 <__flatcc_fb_parse@@Base+0xcc8>
   2de78:	mov	r1, #0
   2de7c:	b	2de84 <__flatcc_fb_parse@@Base+0xcb4>
   2de80:	mov	r3, r2
   2de84:	ldr	r2, [r3]
   2de88:	str	r1, [r3]
   2de8c:	mov	r1, r3
   2de90:	cmp	r2, #0
   2de94:	bne	2de80 <__flatcc_fb_parse@@Base+0xcb0>
   2de98:	ldr	r8, [r4, #40]	; 0x28
   2de9c:	mov	r7, #0
   2dea0:	str	r3, [r5, #32]
   2dea4:	str	r7, [r4, #36]	; 0x24
   2dea8:	ldr	r3, [r8, #16]
   2deac:	cmp	r3, #9
   2deb0:	bne	2e2d8 <__flatcc_fb_parse@@Base+0x1108>
   2deb4:	mov	r0, r4
   2deb8:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2debc:	mov	r0, r4
   2dec0:	str	r8, [r5, #4]
   2dec4:	bl	2c5f4 <__flatcc_error_report@@Base+0x10ac>
   2dec8:	ldr	r8, [r4, #40]	; 0x28
   2decc:	ldr	r3, [r8, #16]
   2ded0:	str	r0, [r5, #28]
   2ded4:	cmp	r3, #123	; 0x7b
   2ded8:	bne	2f3c8 <__flatcc_fb_parse@@Base+0x21f8>
   2dedc:	mov	r0, r4
   2dee0:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2dee4:	ldr	r9, [r4, #40]	; 0x28
   2dee8:	ldr	r3, [r9, #16]
   2deec:	cmp	r3, #9
   2def0:	bne	2fce0 <__flatcc_fb_parse@@Base+0x2b10>
   2def4:	ldr	r3, [r4, #108]	; 0x6c
   2def8:	cmp	r3, #9
   2defc:	bgt	2e320 <__flatcc_fb_parse@@Base+0x1150>
   2df00:	movw	r3, #29780	; 0x7454
   2df04:	movt	r3, #5
   2df08:	str	r3, [sp, #20]
   2df0c:	movw	r3, #29616	; 0x73b0
   2df10:	movt	r3, #5
   2df14:	str	r3, [sp, #16]
   2df18:	ldr	r2, [r4, #44]	; 0x2c
   2df1c:	ldr	r7, [r4, #52]	; 0x34
   2df20:	add	r3, r7, #128	; 0x80
   2df24:	cmp	r3, r2
   2df28:	bhi	2f444 <__flatcc_fb_parse@@Base+0x2274>
   2df2c:	ldr	r2, [r5, #20]
   2df30:	mov	r1, #5
   2df34:	str	r3, [r4, #52]	; 0x34
   2df38:	str	r2, [r7]
   2df3c:	strh	r1, [r7, #8]
   2df40:	str	r7, [r5, #20]
   2df44:	ldr	r3, [r4, #36]	; 0x24
   2df48:	cmp	r3, #0
   2df4c:	beq	2df70 <__flatcc_fb_parse@@Base+0xda0>
   2df50:	mov	r1, #0
   2df54:	b	2df5c <__flatcc_fb_parse@@Base+0xd8c>
   2df58:	mov	r3, r2
   2df5c:	ldr	r2, [r3]
   2df60:	str	r1, [r3]
   2df64:	mov	r1, r3
   2df68:	cmp	r2, #0
   2df6c:	bne	2df58 <__flatcc_fb_parse@@Base+0xd88>
   2df70:	mov	r2, #0
   2df74:	add	r1, sp, #28
   2df78:	str	r3, [r7, #68]	; 0x44
   2df7c:	mov	r0, r4
   2df80:	str	r2, [r4, #36]	; 0x24
   2df84:	bl	2b7e4 <__flatcc_error_report@@Base+0x29c>
   2df88:	ldr	r3, [sp, #28]
   2df8c:	mov	r2, #12
   2df90:	str	r3, [r7, #16]
   2df94:	strh	r2, [r7, #24]
   2df98:	ldr	r2, [r3]
   2df9c:	cmp	r2, #0
   2dfa0:	bne	2dfac <__flatcc_fb_parse@@Base+0xddc>
   2dfa4:	b	2fba0 <__flatcc_fb_parse@@Base+0x29d0>
   2dfa8:	mov	r2, r3
   2dfac:	ldr	r3, [r2]
   2dfb0:	cmp	r3, #0
   2dfb4:	bne	2dfa8 <__flatcc_fb_parse@@Base+0xdd8>
   2dfb8:	str	r2, [sp, #28]
   2dfbc:	ldr	r1, [r4, #40]	; 0x28
   2dfc0:	ldr	r2, [r2, #4]
   2dfc4:	ldr	r3, [r1, #16]
   2dfc8:	str	r2, [r7, #4]
   2dfcc:	cmp	r3, #58	; 0x3a
   2dfd0:	beq	2f300 <__flatcc_fb_parse@@Base+0x2130>
   2dfd4:	cmp	r3, #61	; 0x3d
   2dfd8:	bne	2e000 <__flatcc_fb_parse@@Base+0xe30>
   2dfdc:	mov	r0, r4
   2dfe0:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2dfe4:	add	r1, r7, #48	; 0x30
   2dfe8:	mov	r2, #0
   2dfec:	ldr	r3, [sp, #16]
   2dff0:	mov	r0, r4
   2dff4:	bl	2bf30 <__flatcc_error_report@@Base+0x9e8>
   2dff8:	ldr	r1, [r4, #40]	; 0x28
   2dffc:	ldr	r3, [r1, #16]
   2e000:	cmp	r3, #44	; 0x2c
   2e004:	beq	2f2c8 <__flatcc_fb_parse@@Base+0x20f8>
   2e008:	mov	r0, #0
   2e00c:	cmp	r3, #125	; 0x7d
   2e010:	str	r0, [r4, #36]	; 0x24
   2e014:	beq	2f4c8 <__flatcc_fb_parse@@Base+0x22f8>
   2e018:	movw	r2, #29840	; 0x7490
   2e01c:	movt	r2, #5
   2e020:	str	r0, [sp]
   2e024:	mov	r3, r8
   2e028:	str	r0, [sp, #4]
   2e02c:	mov	r0, r4
   2e030:	bl	2b548 <__flatcc_error_report@@Base>
   2e034:	ldr	r3, [r5, #20]
   2e038:	cmp	r3, #0
   2e03c:	beq	2e060 <__flatcc_fb_parse@@Base+0xe90>
   2e040:	mov	r1, #0
   2e044:	b	2e04c <__flatcc_fb_parse@@Base+0xe7c>
   2e048:	mov	r3, r2
   2e04c:	ldr	r2, [r3]
   2e050:	str	r1, [r3]
   2e054:	mov	r1, r3
   2e058:	cmp	r2, #0
   2e05c:	bne	2e048 <__flatcc_fb_parse@@Base+0xe78>
   2e060:	ldr	r1, [r4, #44]	; 0x2c
   2e064:	ldr	ip, [r4, #52]	; 0x34
   2e068:	str	r3, [r5, #20]
   2e06c:	add	r2, ip, #128	; 0x80
   2e070:	cmp	r2, r1
   2e074:	bhi	2f5d0 <__flatcc_fb_parse@@Base+0x2400>
   2e078:	mov	r1, #5
   2e07c:	str	r2, [r4, #52]	; 0x34
   2e080:	str	r3, [ip]
   2e084:	strh	r1, [ip, #8]
   2e088:	str	ip, [r5, #20]
   2e08c:	ldr	r3, [r4, #36]	; 0x24
   2e090:	cmp	r3, #0
   2e094:	beq	2e0b8 <__flatcc_fb_parse@@Base+0xee8>
   2e098:	mov	r1, #0
   2e09c:	b	2e0a4 <__flatcc_fb_parse@@Base+0xed4>
   2e0a0:	mov	r3, r2
   2e0a4:	ldr	r2, [r3]
   2e0a8:	str	r1, [r3]
   2e0ac:	mov	r1, r3
   2e0b0:	cmp	r2, #0
   2e0b4:	bne	2e0a0 <__flatcc_fb_parse@@Base+0xed0>
   2e0b8:	mov	r2, #0
   2e0bc:	ldr	r1, [r4, #40]	; 0x28
   2e0c0:	str	r3, [ip, #68]	; 0x44
   2e0c4:	add	r3, r4, #68	; 0x44
   2e0c8:	str	r2, [r4, #36]	; 0x24
   2e0cc:	str	r3, [ip, #4]
   2e0d0:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2e0d4:	mov	r0, r4
   2e0d8:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2e0dc:	ldr	r2, [r4, #44]	; 0x2c
   2e0e0:	ldr	r1, [r4, #52]	; 0x34
   2e0e4:	add	r3, r1, #128	; 0x80
   2e0e8:	cmp	r3, r2
   2e0ec:	bhi	2ea34 <__flatcc_fb_parse@@Base+0x1864>
   2e0f0:	ldr	ip, [r4, #392]	; 0x188
   2e0f4:	mov	r2, #0
   2e0f8:	str	r3, [r4, #52]	; 0x34
   2e0fc:	ldr	r0, [r4, #544]	; 0x220
   2e100:	str	ip, [r1]
   2e104:	ldr	r3, [r4, #36]	; 0x24
   2e108:	strh	r2, [r1, #8]
   2e10c:	str	r1, [r4, #392]	; 0x188
   2e110:	str	r0, [r1, #12]
   2e114:	cmp	r3, r2
   2e118:	bne	2e124 <__flatcc_fb_parse@@Base+0xf54>
   2e11c:	b	2e138 <__flatcc_fb_parse@@Base+0xf68>
   2e120:	mov	r3, r0
   2e124:	ldr	r0, [r3]
   2e128:	str	r2, [r3]
   2e12c:	mov	r2, r3
   2e130:	cmp	r0, #0
   2e134:	bne	2e120 <__flatcc_fb_parse@@Base+0xf50>
   2e138:	mov	r0, #0
   2e13c:	movw	r2, #64553	; 0xfc29
   2e140:	str	r3, [r1, #32]
   2e144:	b	2d954 <__flatcc_fb_parse@@Base+0x784>
   2e148:	mov	ip, #0
   2e14c:	movw	r2, #29932	; 0x74ec
   2e150:	movt	r2, #5
   2e154:	mov	r3, ip
   2e158:	b	2d598 <__flatcc_fb_parse@@Base+0x3c8>
   2e15c:	movw	r3, #30148	; 0x75c4
   2e160:	movt	r3, #5
   2e164:	movw	r2, #30124	; 0x75ac
   2e168:	movt	r2, #5
   2e16c:	mov	r0, #5
   2e170:	b	2d7f4 <__flatcc_fb_parse@@Base+0x624>
   2e174:	mov	ip, #0
   2e178:	movw	r2, #29128	; 0x71c8
   2e17c:	movt	r2, #5
   2e180:	mov	r3, ip
   2e184:	mov	r0, r4
   2e188:	str	ip, [sp]
   2e18c:	str	ip, [sp, #4]
   2e190:	bl	2b548 <__flatcc_error_report@@Base>
   2e194:	ldr	r1, [r4, #40]	; 0x28
   2e198:	ldr	r3, [r1, #16]
   2e19c:	cmp	r3, #0
   2e1a0:	bne	2e1c0 <__flatcc_fb_parse@@Base+0xff0>
   2e1a4:	b	2ec6c <__flatcc_fb_parse@@Base+0x1a9c>
   2e1a8:	mov	r0, r4
   2e1ac:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2e1b0:	ldr	r1, [r4, #40]	; 0x28
   2e1b4:	ldr	r3, [r1, #16]
   2e1b8:	cmp	r3, #0
   2e1bc:	beq	2ec6c <__flatcc_fb_parse@@Base+0x1a9c>
   2e1c0:	cmp	r3, #59	; 0x3b
   2e1c4:	bne	2e1a8 <__flatcc_fb_parse@@Base+0xfd8>
   2e1c8:	b	2dd94 <__flatcc_fb_parse@@Base+0xbc4>
   2e1cc:	mov	ip, #0
   2e1d0:	movw	r2, #29224	; 0x7228
   2e1d4:	movt	r2, #5
   2e1d8:	mov	r3, ip
   2e1dc:	mov	r0, r4
   2e1e0:	str	ip, [sp]
   2e1e4:	str	ip, [sp, #4]
   2e1e8:	bl	2b548 <__flatcc_error_report@@Base>
   2e1ec:	ldr	r1, [r4, #40]	; 0x28
   2e1f0:	ldr	r3, [r1, #16]
   2e1f4:	cmp	r3, #0
   2e1f8:	bne	2e218 <__flatcc_fb_parse@@Base+0x1048>
   2e1fc:	b	2ec6c <__flatcc_fb_parse@@Base+0x1a9c>
   2e200:	mov	r0, r4
   2e204:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2e208:	ldr	r1, [r4, #40]	; 0x28
   2e20c:	ldr	r3, [r1, #16]
   2e210:	cmp	r3, #0
   2e214:	beq	2ec6c <__flatcc_fb_parse@@Base+0x1a9c>
   2e218:	cmp	r3, #59	; 0x3b
   2e21c:	bne	2e200 <__flatcc_fb_parse@@Base+0x1030>
   2e220:	b	2dd94 <__flatcc_fb_parse@@Base+0xbc4>
   2e224:	mov	r0, r4
   2e228:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2e22c:	mov	r3, #0
   2e230:	mov	r2, #2
   2e234:	mov	r0, r4
   2e238:	add	r1, r5, #8
   2e23c:	str	r3, [r5, #8]
   2e240:	str	r3, [r5, #12]
   2e244:	strh	r2, [r5, #16]
   2e248:	bl	2bd54 <__flatcc_error_report@@Base+0x80c>
   2e24c:	ldr	r0, [r5, #12]
   2e250:	cmp	r0, #0
   2e254:	bne	2de0c <__flatcc_fb_parse@@Base+0xc3c>
   2e258:	mov	r3, r0
   2e25c:	mov	r1, r7
   2e260:	str	r0, [sp]
   2e264:	movw	r2, #29436	; 0x72fc
   2e268:	movt	r2, #5
   2e26c:	str	r0, [sp, #4]
   2e270:	mov	r0, r4
   2e274:	bl	2b548 <__flatcc_error_report@@Base>
   2e278:	b	2de0c <__flatcc_fb_parse@@Base+0xc3c>
   2e27c:	mov	r1, r8
   2e280:	movw	r2, #29492	; 0x7334
   2e284:	movt	r2, #5
   2e288:	mov	r3, r7
   2e28c:	str	r7, [sp]
   2e290:	mov	r0, r4
   2e294:	str	r7, [sp, #4]
   2e298:	bl	2b548 <__flatcc_error_report@@Base>
   2e29c:	str	r7, [r5, #4]
   2e2a0:	ldr	r1, [r4, #40]	; 0x28
   2e2a4:	ldr	r3, [r1, #16]
   2e2a8:	cmp	r3, #0
   2e2ac:	bne	2e2cc <__flatcc_fb_parse@@Base+0x10fc>
   2e2b0:	b	2ec6c <__flatcc_fb_parse@@Base+0x1a9c>
   2e2b4:	mov	r0, r4
   2e2b8:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2e2bc:	ldr	r1, [r4, #40]	; 0x28
   2e2c0:	ldr	r3, [r1, #16]
   2e2c4:	cmp	r3, #0
   2e2c8:	beq	2ec6c <__flatcc_fb_parse@@Base+0x1a9c>
   2e2cc:	cmp	r3, #125	; 0x7d
   2e2d0:	bne	2e2b4 <__flatcc_fb_parse@@Base+0x10e4>
   2e2d4:	b	2dd94 <__flatcc_fb_parse@@Base+0xbc4>
   2e2d8:	mov	r1, r8
   2e2dc:	mov	r3, r7
   2e2e0:	str	r7, [sp]
   2e2e4:	movw	r2, #29680	; 0x73f0
   2e2e8:	movt	r2, #5
   2e2ec:	str	r7, [sp, #4]
   2e2f0:	mov	r0, r4
   2e2f4:	bl	2b548 <__flatcc_error_report@@Base>
   2e2f8:	ldr	r1, [r4, #40]	; 0x28
   2e2fc:	ldr	r3, [r1, #16]
   2e300:	str	r7, [r5, #4]
   2e304:	cmp	r3, #0
   2e308:	bne	2e338 <__flatcc_fb_parse@@Base+0x1168>
   2e30c:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2e310:	cmp	r3, #125	; 0x7d
   2e314:	moveq	r3, #0
   2e318:	streq	r3, [r4, #36]	; 0x24
   2e31c:	beq	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2e320:	mov	r0, r4
   2e324:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2e328:	ldr	r1, [r4, #40]	; 0x28
   2e32c:	ldr	r3, [r1, #16]
   2e330:	cmp	r3, #0
   2e334:	beq	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2e338:	cmp	r3, #59	; 0x3b
   2e33c:	bne	2e310 <__flatcc_fb_parse@@Base+0x1140>
   2e340:	b	2dd94 <__flatcc_fb_parse@@Base+0xbc4>
   2e344:	add	r2, r5, #1
   2e348:	subs	r3, r2, #0
   2e34c:	beq	300d4 <__flatcc_fb_parse@@Base+0x2f04>
   2e350:	ldrb	r1, [r2]
   2e354:	add	r2, r3, #1
   2e358:	sub	r0, r1, #48	; 0x30
   2e35c:	cmp	r0, #9
   2e360:	bls	2e348 <__flatcc_fb_parse@@Base+0x1178>
   2e364:	cmp	r1, #46	; 0x2e
   2e368:	beq	2fc24 <__flatcc_fb_parse@@Base+0x2a54>
   2e36c:	cmp	r6, r3
   2e370:	beq	2f4f0 <__flatcc_fb_parse@@Base+0x2320>
   2e374:	and	r1, r1, #223	; 0xdf
   2e378:	cmp	r1, #69	; 0x45
   2e37c:	moveq	r0, r3
   2e380:	bne	2f4f0 <__flatcc_fb_parse@@Base+0x2320>
   2e384:	add	r2, r3, #1
   2e388:	cmp	r6, r2
   2e38c:	beq	2e3a0 <__flatcc_fb_parse@@Base+0x11d0>
   2e390:	ldrb	r1, [r3, #1]
   2e394:	sub	r1, r1, #43	; 0x2b
   2e398:	tst	r1, #253	; 0xfd
   2e39c:	movne	r2, r3
   2e3a0:	add	r2, r2, #1
   2e3a4:	b	2e3bc <__flatcc_fb_parse@@Base+0x11ec>
   2e3a8:	ldrb	r1, [r2]
   2e3ac:	add	r2, r2, #1
   2e3b0:	sub	r1, r1, #48	; 0x30
   2e3b4:	cmp	r1, #9
   2e3b8:	bhi	2e3c8 <__flatcc_fb_parse@@Base+0x11f8>
   2e3bc:	cmp	r6, r2
   2e3c0:	mov	r3, r2
   2e3c4:	bne	2e3a8 <__flatcc_fb_parse@@Base+0x11d8>
   2e3c8:	cmp	r3, r0
   2e3cc:	beq	2f4f0 <__flatcc_fb_parse@@Base+0x2320>
   2e3d0:	mov	r2, r5
   2e3d4:	mov	r1, #11
   2e3d8:	mov	r0, r4
   2e3dc:	mov	r5, r3
   2e3e0:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e3e4:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e3e8:	add	r3, r5, #1
   2e3ec:	cmp	r6, r3
   2e3f0:	beq	2f638 <__flatcc_fb_parse@@Base+0x2468>
   2e3f4:	ldrb	r2, [r5, #1]
   2e3f8:	cmp	r2, #58	; 0x3a
   2e3fc:	beq	2f6f0 <__flatcc_fb_parse@@Base+0x2520>
   2e400:	cmp	r2, #61	; 0x3d
   2e404:	bne	2f638 <__flatcc_fb_parse@@Base+0x2468>
   2e408:	add	r3, r5, #2
   2e40c:	mov	r2, r5
   2e410:	movw	r1, #15674	; 0x3d3a
   2e414:	mov	r0, r4
   2e418:	mov	r5, r3
   2e41c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e420:	cmp	r6, r5
   2e424:	beq	2d4c4 <__flatcc_fb_parse@@Base+0x2f4>
   2e428:	ldrb	r1, [r5]
   2e42c:	b	2d298 <__flatcc_fb_parse@@Base+0xc8>
   2e430:	add	r3, r5, #1
   2e434:	cmp	r6, r3
   2e438:	beq	2e458 <__flatcc_fb_parse@@Base+0x1288>
   2e43c:	ldrb	r2, [r5, #1]
   2e440:	cmp	r2, #47	; 0x2f
   2e444:	beq	2f968 <__flatcc_fb_parse@@Base+0x2798>
   2e448:	cmp	r2, #61	; 0x3d
   2e44c:	beq	2fab0 <__flatcc_fb_parse@@Base+0x28e0>
   2e450:	cmp	r2, #42	; 0x2a
   2e454:	beq	2f818 <__flatcc_fb_parse@@Base+0x2648>
   2e458:	mov	r2, r5
   2e45c:	mov	r1, #47	; 0x2f
   2e460:	mov	r0, r4
   2e464:	mov	r5, r3
   2e468:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e46c:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e470:	add	r2, r5, #1
   2e474:	cmp	r6, r2
   2e478:	beq	2e348 <__flatcc_fb_parse@@Base+0x1178>
   2e47c:	ldrb	r3, [r5, #1]
   2e480:	cmp	r3, #88	; 0x58
   2e484:	beq	2e490 <__flatcc_fb_parse@@Base+0x12c0>
   2e488:	cmp	r3, #120	; 0x78
   2e48c:	bne	2e348 <__flatcc_fb_parse@@Base+0x1178>
   2e490:	add	r1, r5, #2
   2e494:	cmp	r6, r1
   2e498:	mov	r3, r1
   2e49c:	beq	2e4c0 <__flatcc_fb_parse@@Base+0x12f0>
   2e4a0:	ldrb	r2, [r1], #1
   2e4a4:	sub	r0, r2, #48	; 0x30
   2e4a8:	cmp	r0, #9
   2e4ac:	bls	2e494 <__flatcc_fb_parse@@Base+0x12c4>
   2e4b0:	orr	r2, r2, #32
   2e4b4:	sub	r2, r2, #97	; 0x61
   2e4b8:	cmp	r2, #5
   2e4bc:	bls	2e494 <__flatcc_fb_parse@@Base+0x12c4>
   2e4c0:	mov	r2, r5
   2e4c4:	mov	r1, #14
   2e4c8:	mov	r0, r4
   2e4cc:	mov	r5, r3
   2e4d0:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e4d4:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e4d8:	add	r2, r5, #1
   2e4dc:	lsl	r3, r1, #8
   2e4e0:	cmp	r6, r2
   2e4e4:	mov	r9, r2
   2e4e8:	beq	2e510 <__flatcc_fb_parse@@Base+0x1340>
   2e4ec:	ldrb	ip, [r5, #1]
   2e4f0:	movw	r0, #26812	; 0x68bc
   2e4f4:	movt	r0, #5
   2e4f8:	add	lr, r0, ip
   2e4fc:	ldrb	lr, [lr, #40]	; 0x28
   2e500:	cmp	lr, #0
   2e504:	orrne	r3, r3, ip, lsl #16
   2e508:	movne	ip, r2
   2e50c:	bne	2e5cc <__flatcc_fb_parse@@Base+0x13fc>
   2e510:	mov	r0, #49	; 0x31
   2e514:	orr	r3, r3, r0
   2e518:	orr	r1, r3, r1, lsl #24
   2e51c:	ldr	r3, [sp, #16]
   2e520:	cmp	r1, r3
   2e524:	beq	2fd70 <__flatcc_fb_parse@@Base+0x2ba0>
   2e528:	bhi	2ede4 <__flatcc_fb_parse@@Base+0x1c14>
   2e52c:	movw	r3, #30005	; 0x7535
   2e530:	movt	r3, #14441	; 0x3869
   2e534:	cmp	r1, r3
   2e538:	beq	2fdc0 <__flatcc_fb_parse@@Base+0x2bf0>
   2e53c:	bhi	2eecc <__flatcc_fb_parse@@Base+0x1cfc>
   2e540:	movw	r3, #30006	; 0x7536
   2e544:	movt	r3, #13417	; 0x3469
   2e548:	cmp	r1, r3
   2e54c:	beq	2fd98 <__flatcc_fb_parse@@Base+0x2bc8>
   2e550:	bls	2ee74 <__flatcc_fb_parse@@Base+0x1ca4>
   2e554:	movw	r3, #26933	; 0x6935
   2e558:	movt	r3, #13422	; 0x346e
   2e55c:	cmp	r1, r3
   2e560:	beq	2ffac <__flatcc_fb_parse@@Base+0x2ddc>
   2e564:	bls	2ee3c <__flatcc_fb_parse@@Base+0x1c6c>
   2e568:	movw	r3, #30006	; 0x7536
   2e56c:	movt	r3, #13929	; 0x3669
   2e570:	cmp	r1, r3
   2e574:	bne	2edac <__flatcc_fb_parse@@Base+0x1bdc>
   2e578:	mov	r1, r5
   2e57c:	movw	r0, #29616	; 0x73b0
   2e580:	movt	r0, #4
   2e584:	mov	r2, #6
   2e588:	bl	13ed0 <memcmp@plt>
   2e58c:	cmp	r0, #0
   2e590:	movw	r1, #64556	; 0xfc2c
   2e594:	movt	r1, #65535	; 0xffff
   2e598:	movne	r1, #9
   2e59c:	mov	r2, r5
   2e5a0:	mov	r3, r9
   2e5a4:	mov	r0, r4
   2e5a8:	mov	r5, r9
   2e5ac:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e5b0:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e5b4:	ldrb	r1, [r9]
   2e5b8:	add	r1, r0, r1
   2e5bc:	ldrb	r1, [r1, #40]	; 0x28
   2e5c0:	cmp	r1, #0
   2e5c4:	beq	2fc2c <__flatcc_fb_parse@@Base+0x2a5c>
   2e5c8:	mov	ip, r9
   2e5cc:	add	r9, r9, #1
   2e5d0:	cmp	r6, r9
   2e5d4:	bne	2e5b4 <__flatcc_fb_parse@@Base+0x13e4>
   2e5d8:	sub	r0, r6, r5
   2e5dc:	ldrb	r1, [ip]
   2e5e0:	uxtb	r0, r0
   2e5e4:	add	r0, r0, #48	; 0x30
   2e5e8:	b	2e514 <__flatcc_fb_parse@@Base+0x1344>
   2e5ec:	add	r9, r5, #1
   2e5f0:	cmp	r6, r9
   2e5f4:	beq	2f668 <__flatcc_fb_parse@@Base+0x2498>
   2e5f8:	ldrb	r3, [r5, #1]
   2e5fc:	cmp	r3, #42	; 0x2a
   2e600:	beq	2f6b4 <__flatcc_fb_parse@@Base+0x24e4>
   2e604:	cmp	r3, #61	; 0x3d
   2e608:	bne	2f668 <__flatcc_fb_parse@@Base+0x2498>
   2e60c:	mov	r2, r5
   2e610:	movw	r1, #15658	; 0x3d2a
   2e614:	mov	r3, r9
   2e618:	mov	r0, r4
   2e61c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e620:	ldrb	r1, [r5, #1]
   2e624:	mov	r5, r9
   2e628:	b	2d298 <__flatcc_fb_parse@@Base+0xc8>
   2e62c:	add	r3, r5, #1
   2e630:	cmp	r6, r3
   2e634:	beq	2f620 <__flatcc_fb_parse@@Base+0x2450>
   2e638:	ldrb	r2, [r5, #1]
   2e63c:	cmp	r2, #43	; 0x2b
   2e640:	beq	2f73c <__flatcc_fb_parse@@Base+0x256c>
   2e644:	cmp	r2, #61	; 0x3d
   2e648:	bne	2f620 <__flatcc_fb_parse@@Base+0x2450>
   2e64c:	add	r3, r5, #2
   2e650:	mov	r2, r5
   2e654:	movw	r1, #15659	; 0x3d2b
   2e658:	mov	r0, r4
   2e65c:	mov	r5, r3
   2e660:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e664:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e668:	add	r3, r5, #1
   2e66c:	cmp	r6, r3
   2e670:	beq	2e690 <__flatcc_fb_parse@@Base+0x14c0>
   2e674:	ldrb	r2, [r5, #1]
   2e678:	cmp	r2, #61	; 0x3d
   2e67c:	beq	2f7fc <__flatcc_fb_parse@@Base+0x262c>
   2e680:	cmp	r2, #62	; 0x3e
   2e684:	beq	2f7e0 <__flatcc_fb_parse@@Base+0x2610>
   2e688:	cmp	r2, #45	; 0x2d
   2e68c:	beq	2fb68 <__flatcc_fb_parse@@Base+0x2998>
   2e690:	mov	r2, r5
   2e694:	mov	r1, #45	; 0x2d
   2e698:	mov	r0, r4
   2e69c:	mov	r5, r3
   2e6a0:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e6a4:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e6a8:	add	r3, r5, #1
   2e6ac:	cmp	r6, r3
   2e6b0:	beq	2f608 <__flatcc_fb_parse@@Base+0x2438>
   2e6b4:	ldrb	r2, [r5, #1]
   2e6b8:	cmp	r2, #46	; 0x2e
   2e6bc:	beq	2f684 <__flatcc_fb_parse@@Base+0x24b4>
   2e6c0:	bcc	2f608 <__flatcc_fb_parse@@Base+0x2438>
   2e6c4:	sub	r2, r2, #48	; 0x30
   2e6c8:	cmp	r2, #9
   2e6cc:	movls	r0, r5
   2e6d0:	bhi	2f608 <__flatcc_fb_parse@@Base+0x2438>
   2e6d4:	add	r2, r3, #1
   2e6d8:	b	2e6f0 <__flatcc_fb_parse@@Base+0x1520>
   2e6dc:	ldrb	r1, [r2]
   2e6e0:	add	r2, r2, #1
   2e6e4:	sub	ip, r1, #48	; 0x30
   2e6e8:	cmp	ip, #9
   2e6ec:	bhi	2f758 <__flatcc_fb_parse@@Base+0x2588>
   2e6f0:	cmp	r6, r2
   2e6f4:	mov	r3, r2
   2e6f8:	bne	2e6dc <__flatcc_fb_parse@@Base+0x150c>
   2e6fc:	b	2e3c8 <__flatcc_fb_parse@@Base+0x11f8>
   2e700:	add	r3, r5, #1
   2e704:	cmp	r6, r3
   2e708:	beq	2e718 <__flatcc_fb_parse@@Base+0x1548>
   2e70c:	ldrb	r2, [r5, #1]
   2e710:	cmp	r2, #61	; 0x3d
   2e714:	beq	2fbe4 <__flatcc_fb_parse@@Base+0x2a14>
   2e718:	mov	r2, r5
   2e71c:	mov	r0, r4
   2e720:	mov	r5, r3
   2e724:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e728:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e72c:	add	r3, r5, #1
   2e730:	mov	r2, r5
   2e734:	mov	r0, r4
   2e738:	mov	r5, r3
   2e73c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e740:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e744:	add	r3, r5, #1
   2e748:	cmp	r6, r3
   2e74c:	beq	2e75c <__flatcc_fb_parse@@Base+0x158c>
   2e750:	ldrb	r2, [r5, #1]
   2e754:	cmp	r2, #13
   2e758:	beq	2e7c8 <__flatcc_fb_parse@@Base+0x15f8>
   2e75c:	ldr	r2, [r4, #64]	; 0x40
   2e760:	mov	r5, r3
   2e764:	str	r3, [r4, #60]	; 0x3c
   2e768:	add	r3, r2, #1
   2e76c:	str	r3, [r4, #64]	; 0x40
   2e770:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e774:	add	r9, r5, #1
   2e778:	cmp	r6, r9
   2e77c:	beq	2f428 <__flatcc_fb_parse@@Base+0x2258>
   2e780:	ldrb	r3, [r5, #1]
   2e784:	cmp	r3, #38	; 0x26
   2e788:	beq	2f410 <__flatcc_fb_parse@@Base+0x2240>
   2e78c:	cmp	r3, #61	; 0x3d
   2e790:	bne	2f428 <__flatcc_fb_parse@@Base+0x2258>
   2e794:	add	r3, r5, #2
   2e798:	mov	r2, r5
   2e79c:	movw	r1, #15654	; 0x3d26
   2e7a0:	mov	r0, r4
   2e7a4:	mov	r5, r3
   2e7a8:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e7ac:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e7b0:	add	r3, r5, #1
   2e7b4:	cmp	r6, r3
   2e7b8:	beq	2e75c <__flatcc_fb_parse@@Base+0x158c>
   2e7bc:	ldrb	r2, [r5, #1]
   2e7c0:	cmp	r2, #10
   2e7c4:	bne	2e75c <__flatcc_fb_parse@@Base+0x158c>
   2e7c8:	add	r3, r5, #2
   2e7cc:	b	2e75c <__flatcc_fb_parse@@Base+0x158c>
   2e7d0:	add	r9, r5, #1
   2e7d4:	cmp	r6, r9
   2e7d8:	beq	2e808 <__flatcc_fb_parse@@Base+0x1638>
   2e7dc:	ldrb	r3, [r5, #1]
   2e7e0:	cmp	r3, #61	; 0x3d
   2e7e4:	beq	2f6d4 <__flatcc_fb_parse@@Base+0x2504>
   2e7e8:	cmp	r3, #124	; 0x7c
   2e7ec:	bne	2e808 <__flatcc_fb_parse@@Base+0x1638>
   2e7f0:	add	r9, r5, #2
   2e7f4:	mov	r2, r5
   2e7f8:	mov	r3, r9
   2e7fc:	movw	r1, #31868	; 0x7c7c
   2e800:	mov	r0, r4
   2e804:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e808:	mov	r2, r5
   2e80c:	mov	r3, r9
   2e810:	mov	r1, #124	; 0x7c
   2e814:	mov	r0, r4
   2e818:	mov	r5, r9
   2e81c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e820:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e824:	add	r9, r5, #1
   2e828:	cmp	r6, r9
   2e82c:	beq	2f4a4 <__flatcc_fb_parse@@Base+0x22d4>
   2e830:	ldrb	r3, [r5, #1]
   2e834:	cmp	r3, #61	; 0x3d
   2e838:	beq	2f478 <__flatcc_fb_parse@@Base+0x22a8>
   2e83c:	cmp	r3, #62	; 0x3e
   2e840:	bne	2f4a4 <__flatcc_fb_parse@@Base+0x22d4>
   2e844:	add	r3, r5, #2
   2e848:	mov	r2, r5
   2e84c:	movw	r1, #15933	; 0x3e3d
   2e850:	mov	r0, r4
   2e854:	mov	r5, r3
   2e858:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e85c:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e860:	add	r3, r5, #1
   2e864:	cmp	r6, r3
   2e868:	beq	2f650 <__flatcc_fb_parse@@Base+0x2480>
   2e86c:	ldrb	r2, [r5, #1]
   2e870:	cmp	r2, #61	; 0x3d
   2e874:	beq	2f720 <__flatcc_fb_parse@@Base+0x2550>
   2e878:	cmp	r2, #62	; 0x3e
   2e87c:	bne	2f650 <__flatcc_fb_parse@@Base+0x2480>
   2e880:	add	r3, r5, #2
   2e884:	cmp	r6, r3
   2e888:	beq	2f584 <__flatcc_fb_parse@@Base+0x23b4>
   2e88c:	ldrb	r2, [r5, #2]
   2e890:	cmp	r2, #61	; 0x3d
   2e894:	beq	2fc40 <__flatcc_fb_parse@@Base+0x2a70>
   2e898:	cmp	r2, #62	; 0x3e
   2e89c:	bne	2f584 <__flatcc_fb_parse@@Base+0x23b4>
   2e8a0:	add	r3, r5, #3
   2e8a4:	cmp	r6, r3
   2e8a8:	beq	2e8b8 <__flatcc_fb_parse@@Base+0x16e8>
   2e8ac:	ldrb	r2, [r5, #3]
   2e8b0:	cmp	r2, #61	; 0x3d
   2e8b4:	beq	30090 <__flatcc_fb_parse@@Base+0x2ec0>
   2e8b8:	mov	r2, r5
   2e8bc:	movw	r1, #15934	; 0x3e3e
   2e8c0:	movt	r1, #62	; 0x3e
   2e8c4:	mov	r0, r4
   2e8c8:	mov	r5, r3
   2e8cc:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e8d0:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e8d4:	add	r3, r5, #1
   2e8d8:	cmp	r6, r3
   2e8dc:	beq	2e8fc <__flatcc_fb_parse@@Base+0x172c>
   2e8e0:	ldrb	r2, [r5, #1]
   2e8e4:	cmp	r2, #60	; 0x3c
   2e8e8:	beq	2f7a0 <__flatcc_fb_parse@@Base+0x25d0>
   2e8ec:	cmp	r2, #61	; 0x3d
   2e8f0:	beq	2f784 <__flatcc_fb_parse@@Base+0x25b4>
   2e8f4:	cmp	r2, #45	; 0x2d
   2e8f8:	beq	2f768 <__flatcc_fb_parse@@Base+0x2598>
   2e8fc:	mov	r2, r5
   2e900:	mov	r1, #60	; 0x3c
   2e904:	mov	r0, r4
   2e908:	mov	r5, r3
   2e90c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2e910:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2e914:	mov	r0, r4
   2e918:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2e91c:	str	r5, [r4, #544]	; 0x220
   2e920:	ldr	r1, [r4, #40]	; 0x28
   2e924:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2e928:	mov	ip, #0
   2e92c:	mov	r1, r8
   2e930:	mov	r3, ip
   2e934:	movw	r2, #29556	; 0x7374
   2e938:	movt	r2, #5
   2e93c:	mov	r0, r4
   2e940:	str	ip, [sp]
   2e944:	str	ip, [sp, #4]
   2e948:	bl	2b548 <__flatcc_error_report@@Base>
   2e94c:	b	2e2a0 <__flatcc_fb_parse@@Base+0x10d0>
   2e950:	mov	ip, #0
   2e954:	movw	r2, #29304	; 0x7278
   2e958:	movt	r2, #5
   2e95c:	mov	r3, ip
   2e960:	b	2d598 <__flatcc_fb_parse@@Base+0x3c8>
   2e964:	mov	r1, #1
   2e968:	mov	r0, #65536	; 0x10000
   2e96c:	bl	13e7c <calloc@plt>
   2e970:	cmp	r0, #0
   2e974:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2e978:	ldr	r2, [r4, #48]	; 0x30
   2e97c:	add	ip, r0, #65536	; 0x10000
   2e980:	add	r1, r0, #16
   2e984:	add	r3, r0, #144	; 0x90
   2e988:	str	ip, [r4, #44]	; 0x2c
   2e98c:	str	r0, [r4, #48]	; 0x30
   2e990:	str	r2, [r0]
   2e994:	b	2da24 <__flatcc_fb_parse@@Base+0x854>
   2e998:	mov	r1, #1
   2e99c:	mov	r0, #65536	; 0x10000
   2e9a0:	bl	13e7c <calloc@plt>
   2e9a4:	cmp	r0, #0
   2e9a8:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2e9ac:	ldr	r2, [r4, #48]	; 0x30
   2e9b0:	add	r1, r0, #65536	; 0x10000
   2e9b4:	add	r5, r0, #16
   2e9b8:	add	r3, r0, #144	; 0x90
   2e9bc:	str	r1, [r4, #44]	; 0x2c
   2e9c0:	str	r0, [r4, #48]	; 0x30
   2e9c4:	str	r2, [r0]
   2e9c8:	b	2daac <__flatcc_fb_parse@@Base+0x8dc>
   2e9cc:	mov	r1, #1
   2e9d0:	mov	r0, #65536	; 0x10000
   2e9d4:	bl	13e7c <calloc@plt>
   2e9d8:	cmp	r0, #0
   2e9dc:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2e9e0:	ldr	r2, [r4, #48]	; 0x30
   2e9e4:	add	r3, r0, #65536	; 0x10000
   2e9e8:	add	r5, r0, #16
   2e9ec:	str	r3, [r4, #44]	; 0x2c
   2e9f0:	add	r3, r0, #48	; 0x30
   2e9f4:	str	r0, [r4, #48]	; 0x30
   2e9f8:	str	r2, [r0]
   2e9fc:	b	2ddc8 <__flatcc_fb_parse@@Base+0xbf8>
   2ea00:	mov	r1, #1
   2ea04:	mov	r0, #65536	; 0x10000
   2ea08:	bl	13e7c <calloc@plt>
   2ea0c:	cmp	r0, #0
   2ea10:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2ea14:	ldr	r2, [r4, #48]	; 0x30
   2ea18:	add	ip, r0, #65536	; 0x10000
   2ea1c:	add	r1, r0, #16
   2ea20:	add	r3, r0, #144	; 0x90
   2ea24:	str	ip, [r4, #44]	; 0x2c
   2ea28:	str	r0, [r4, #48]	; 0x30
   2ea2c:	str	r2, [r0]
   2ea30:	b	2d8fc <__flatcc_fb_parse@@Base+0x72c>
   2ea34:	mov	r1, #1
   2ea38:	mov	r0, #65536	; 0x10000
   2ea3c:	bl	13e7c <calloc@plt>
   2ea40:	cmp	r0, #0
   2ea44:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2ea48:	ldr	r2, [r4, #48]	; 0x30
   2ea4c:	add	ip, r0, #65536	; 0x10000
   2ea50:	add	r1, r0, #16
   2ea54:	add	r3, r0, #144	; 0x90
   2ea58:	str	ip, [r4, #44]	; 0x2c
   2ea5c:	str	r0, [r4, #48]	; 0x30
   2ea60:	str	r2, [r0]
   2ea64:	b	2e0f0 <__flatcc_fb_parse@@Base+0xf20>
   2ea68:	mov	r1, #1
   2ea6c:	mov	r0, #65536	; 0x10000
   2ea70:	bl	13e7c <calloc@plt>
   2ea74:	cmp	r0, #0
   2ea78:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2ea7c:	ldr	r2, [r4, #48]	; 0x30
   2ea80:	add	r1, r0, #65536	; 0x10000
   2ea84:	add	r5, r0, #16
   2ea88:	add	r3, r0, #144	; 0x90
   2ea8c:	str	r1, [r4, #44]	; 0x2c
   2ea90:	str	r0, [r4, #48]	; 0x30
   2ea94:	str	r2, [r0]
   2ea98:	b	2de4c <__flatcc_fb_parse@@Base+0xc7c>
   2ea9c:	ldr	r1, [r4, #360]	; 0x168
   2eaa0:	movw	r2, #29196	; 0x720c
   2eaa4:	movt	r2, #5
   2eaa8:	mov	r3, #0
   2eaac:	mov	r0, r4
   2eab0:	ldr	ip, [r4, #364]	; 0x16c
   2eab4:	str	r1, [sp]
   2eab8:	ldr	r1, [r4, #40]	; 0x28
   2eabc:	str	ip, [sp, #4]
   2eac0:	bl	2b548 <__flatcc_error_report@@Base>
   2eac4:	b	2d620 <__flatcc_fb_parse@@Base+0x450>
   2eac8:	mov	r0, r4
   2eacc:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ead0:	add	r1, r5, #40	; 0x28
   2ead4:	mov	r0, r4
   2ead8:	bl	2b93c <__flatcc_error_report@@Base+0x3f4>
   2eadc:	ldrh	r3, [r5, #48]	; 0x30
   2eae0:	ldr	r1, [r5, #40]	; 0x28
   2eae4:	cmp	r3, #8
   2eae8:	bne	2f540 <__flatcc_fb_parse@@Base+0x2370>
   2eaec:	ldr	r3, [r1, #16]
   2eaf0:	add	r3, r3, #996	; 0x3e4
   2eaf4:	cmp	r3, #21
   2eaf8:	ldrls	pc, [pc, r3, lsl #2]
   2eafc:	b	2db30 <__flatcc_fb_parse@@Base+0x960>
   2eb00:	andeq	pc, r2, r0, ror #10
   2eb04:	andeq	pc, r2, r0, ror #10
   2eb08:	andeq	sp, r2, r0, lsr fp
   2eb0c:	andeq	sp, r2, r0, lsr fp
   2eb10:	andeq	sp, r2, r0, lsr fp
   2eb14:	andeq	sp, r2, r0, lsr fp
   2eb18:	andeq	sp, r2, r0, lsr fp
   2eb1c:	andeq	sp, r2, r0, lsr fp
   2eb20:	andeq	sp, r2, r0, lsr fp
   2eb24:	andeq	sp, r2, r0, lsr fp
   2eb28:	andeq	sp, r2, r0, lsr fp
   2eb2c:	andeq	pc, r2, r0, ror #10
   2eb30:	andeq	sp, r2, r0, lsr fp
   2eb34:	andeq	sp, r2, r0, lsr fp
   2eb38:	andeq	sp, r2, r0, lsr fp
   2eb3c:	andeq	sp, r2, r0, lsr fp
   2eb40:	andeq	sp, r2, r0, lsr fp
   2eb44:	andeq	sp, r2, r0, lsr fp
   2eb48:	andeq	sp, r2, r0, lsr fp
   2eb4c:	andeq	sp, r2, r0, lsr fp
   2eb50:	andeq	sp, r2, r0, lsr fp
   2eb54:	andeq	pc, r2, r0, ror #10
   2eb58:	cmp	r1, #127	; 0x7f
   2eb5c:	cmpne	r1, #31
   2eb60:	mov	r2, r5
   2eb64:	add	r3, r5, #1
   2eb68:	bhi	2f2b4 <__flatcc_fb_parse@@Base+0x20e4>
   2eb6c:	mov	r1, #5
   2eb70:	mov	r0, r4
   2eb74:	mov	r5, r3
   2eb78:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2eb7c:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2eb80:	movw	r7, #28892	; 0x70dc
   2eb84:	movt	r7, #5
   2eb88:	movw	r6, #28948	; 0x7114
   2eb8c:	movt	r6, #5
   2eb90:	movw	r5, #28996	; 0x7144
   2eb94:	movt	r5, #5
   2eb98:	mov	r0, r4
   2eb9c:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2eba0:	ldr	r3, [r4, #140]	; 0x8c
   2eba4:	cmp	r3, #0
   2eba8:	bne	2f228 <__flatcc_fb_parse@@Base+0x2058>
   2ebac:	ldr	r1, [r4, #40]	; 0x28
   2ebb0:	ldr	r0, [r4, #108]	; 0x6c
   2ebb4:	ldr	r3, [r1, #16]
   2ebb8:	cmp	r0, #9
   2ebbc:	bgt	2fc18 <__flatcc_fb_parse@@Base+0x2a48>
   2ebc0:	cmp	r3, #19
   2ebc4:	bne	2ece0 <__flatcc_fb_parse@@Base+0x1b10>
   2ebc8:	mov	r0, r4
   2ebcc:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ebd0:	ldr	r1, [r4, #44]	; 0x2c
   2ebd4:	ldr	r3, [r4, #52]	; 0x34
   2ebd8:	add	r2, r3, #32
   2ebdc:	cmp	r2, r1
   2ebe0:	bhi	2f24c <__flatcc_fb_parse@@Base+0x207c>
   2ebe4:	ldr	lr, [r4, #352]	; 0x160
   2ebe8:	mov	ip, #2
   2ebec:	mov	r9, #0
   2ebf0:	add	r1, r3, #8
   2ebf4:	mov	r0, r4
   2ebf8:	str	r2, [r4, #52]	; 0x34
   2ebfc:	str	lr, [r3]
   2ec00:	str	r3, [r4, #352]	; 0x160
   2ec04:	str	r9, [r3, #8]
   2ec08:	str	r9, [r3, #12]
   2ec0c:	strh	ip, [r3, #16]
   2ec10:	bl	2bd54 <__flatcc_error_report@@Base+0x80c>
   2ec14:	ldr	r1, [r4, #40]	; 0x28
   2ec18:	ldr	r3, [r1, #16]
   2ec1c:	cmp	r3, #59	; 0x3b
   2ec20:	bne	2ed90 <__flatcc_fb_parse@@Base+0x1bc0>
   2ec24:	mov	r0, r4
   2ec28:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ec2c:	ldr	r1, [r4, #40]	; 0x28
   2ec30:	movw	r2, #64565	; 0xfc35
   2ec34:	movt	r2, #65535	; 0xffff
   2ec38:	ldr	r3, [r1, #16]
   2ec3c:	cmp	r3, r2
   2ec40:	beq	2eb98 <__flatcc_fb_parse@@Base+0x19c8>
   2ec44:	mov	r8, r1
   2ec48:	b	2d518 <__flatcc_fb_parse@@Base+0x348>
   2ec4c:	mov	r3, r5
   2ec50:	mov	r2, r5
   2ec54:	mov	r1, #23
   2ec58:	mov	r0, r4
   2ec5c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2ec60:	cmp	r6, r5
   2ec64:	bne	2d284 <__flatcc_fb_parse@@Base+0xb4>
   2ec68:	b	2d4c4 <__flatcc_fb_parse@@Base+0x2f4>
   2ec6c:	cmp	r1, r6
   2ec70:	mov	r8, r1
   2ec74:	ldr	r0, [r4, #108]	; 0x6c
   2ec78:	beq	2d6c8 <__flatcc_fb_parse@@Base+0x4f8>
   2ec7c:	ldr	r2, [r4, #356]	; 0x164
   2ec80:	cmp	r2, #0
   2ec84:	beq	2eca8 <__flatcc_fb_parse@@Base+0x1ad8>
   2ec88:	mov	r1, #0
   2ec8c:	b	2ec94 <__flatcc_fb_parse@@Base+0x1ac4>
   2ec90:	mov	r2, r3
   2ec94:	ldr	r3, [r2]
   2ec98:	str	r1, [r2]
   2ec9c:	mov	r1, r2
   2eca0:	cmp	r3, #0
   2eca4:	bne	2ec90 <__flatcc_fb_parse@@Base+0x1ac0>
   2eca8:	ldr	r3, [r4, #392]	; 0x188
   2ecac:	str	r2, [r4, #356]	; 0x164
   2ecb0:	cmp	r3, #0
   2ecb4:	beq	2ecd8 <__flatcc_fb_parse@@Base+0x1b08>
   2ecb8:	mov	r1, #0
   2ecbc:	b	2ecc4 <__flatcc_fb_parse@@Base+0x1af4>
   2ecc0:	mov	r3, r2
   2ecc4:	ldr	r2, [r3]
   2ecc8:	str	r1, [r3]
   2eccc:	mov	r1, r3
   2ecd0:	cmp	r2, #0
   2ecd4:	bne	2ecc0 <__flatcc_fb_parse@@Base+0x1af0>
   2ecd8:	str	r3, [r4, #392]	; 0x188
   2ecdc:	b	2d6f4 <__flatcc_fb_parse@@Base+0x524>
   2ece0:	mov	ip, #0
   2ece4:	mov	r2, r6
   2ece8:	mov	r3, ip
   2ecec:	mov	r0, r4
   2ecf0:	str	ip, [sp]
   2ecf4:	str	ip, [sp, #4]
   2ecf8:	bl	2b548 <__flatcc_error_report@@Base>
   2ecfc:	ldr	r3, [r4, #40]	; 0x28
   2ed00:	ldr	r3, [r3, #16]
   2ed04:	cmp	r3, #0
   2ed08:	bne	2ed24 <__flatcc_fb_parse@@Base+0x1b54>
   2ed0c:	b	2ebd0 <__flatcc_fb_parse@@Base+0x1a00>
   2ed10:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ed14:	ldr	r3, [r4, #40]	; 0x28
   2ed18:	ldr	r3, [r3, #16]
   2ed1c:	cmp	r3, #0
   2ed20:	beq	2ebd0 <__flatcc_fb_parse@@Base+0x1a00>
   2ed24:	cmp	r3, #59	; 0x3b
   2ed28:	mov	r0, r4
   2ed2c:	bne	2ed10 <__flatcc_fb_parse@@Base+0x1b40>
   2ed30:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ed34:	mov	r3, #0
   2ed38:	str	r3, [r4, #36]	; 0x24
   2ed3c:	b	2ebd0 <__flatcc_fb_parse@@Base+0x1a00>
   2ed40:	mov	r0, r4
   2ed44:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2ed48:	ldr	r9, [r4, #40]	; 0x28
   2ed4c:	ldr	r3, [r9, #16]
   2ed50:	cmp	r3, #125	; 0x7d
   2ed54:	beq	2f3b4 <__flatcc_fb_parse@@Base+0x21e4>
   2ed58:	mov	r2, #0
   2ed5c:	cmp	r3, #9
   2ed60:	str	r2, [r4, #36]	; 0x24
   2ed64:	beq	2db70 <__flatcc_fb_parse@@Base+0x9a0>
   2ed68:	mov	ip, #0
   2ed6c:	mov	r1, r9
   2ed70:	mov	r3, ip
   2ed74:	movw	r2, #29588	; 0x7394
   2ed78:	movt	r2, #5
   2ed7c:	mov	r0, r4
   2ed80:	str	ip, [sp]
   2ed84:	str	ip, [sp, #4]
   2ed88:	bl	2b548 <__flatcc_error_report@@Base>
   2ed8c:	b	2e2a0 <__flatcc_fb_parse@@Base+0x10d0>
   2ed90:	mov	r3, r9
   2ed94:	mov	r2, r5
   2ed98:	str	r9, [sp]
   2ed9c:	mov	r0, r4
   2eda0:	str	r9, [sp, #4]
   2eda4:	bl	2b548 <__flatcc_error_report@@Base>
   2eda8:	b	2ec2c <__flatcc_fb_parse@@Base+0x1a5c>
   2edac:	movw	r3, #26933	; 0x6935
   2edb0:	movt	r3, #13934	; 0x366e
   2edb4:	cmp	r1, r3
   2edb8:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2edbc:	mov	r1, r5
   2edc0:	movw	r0, #29648	; 0x73d0
   2edc4:	movt	r0, #4
   2edc8:	mov	r2, #5
   2edcc:	bl	13ed0 <memcmp@plt>
   2edd0:	cmp	r0, #0
   2edd4:	movw	r1, #64544	; 0xfc20
   2edd8:	movt	r1, #65535	; 0xffff
   2eddc:	movne	r1, #9
   2ede0:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ede4:	cmp	r1, r8
   2ede8:	beq	2febc <__flatcc_fb_parse@@Base+0x2cec>
   2edec:	bhi	2f0c4 <__flatcc_fb_parse@@Base+0x1ef4>
   2edf0:	movw	r3, #30005	; 0x7535
   2edf4:	movt	r3, #26476	; 0x676c
   2edf8:	cmp	r1, r3
   2edfc:	beq	2fe98 <__flatcc_fb_parse@@Base+0x2cc8>
   2ee00:	bls	2f054 <__flatcc_fb_parse@@Base+0x1e84>
   2ee04:	movw	r3, #29494	; 0x7336
   2ee08:	movt	r3, #26484	; 0x6774
   2ee0c:	cmp	r1, r3
   2ee10:	beq	2fe70 <__flatcc_fb_parse@@Base+0x2ca0>
   2ee14:	bls	2f110 <__flatcc_fb_parse@@Base+0x1f40>
   2ee18:	movw	r3, #25140	; 0x6234
   2ee1c:	movt	r3, #27759	; 0x6c6f
   2ee20:	cmp	r1, r3
   2ee24:	bne	2f008 <__flatcc_fb_parse@@Base+0x1e38>
   2ee28:	ldrb	r3, [r5]
   2ee2c:	cmp	r3, #98	; 0x62
   2ee30:	beq	2f59c <__flatcc_fb_parse@@Base+0x23cc>
   2ee34:	mov	r1, #9
   2ee38:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ee3c:	movw	r3, #26167	; 0x6637
   2ee40:	movt	r3, #13420	; 0x346c
   2ee44:	cmp	r1, r3
   2ee48:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2ee4c:	mov	r1, r5
   2ee50:	movw	r0, #28796	; 0x707c
   2ee54:	movt	r0, #5
   2ee58:	mov	r2, #7
   2ee5c:	bl	13ed0 <memcmp@plt>
   2ee60:	cmp	r0, #0
   2ee64:	movw	r1, #64541	; 0xfc1d
   2ee68:	movt	r1, #65535	; 0xffff
   2ee6c:	movne	r1, #9
   2ee70:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ee74:	movw	r3, #26167	; 0x6637
   2ee78:	movt	r3, #12908	; 0x326c
   2ee7c:	cmp	r1, r3
   2ee80:	beq	2ff34 <__flatcc_fb_parse@@Base+0x2d64>
   2ee84:	movw	r3, #26933	; 0x6935
   2ee88:	movt	r3, #12910	; 0x326e
   2ee8c:	cmp	r1, r3
   2ee90:	beq	2fe48 <__flatcc_fb_parse@@Base+0x2c78>
   2ee94:	movw	r3, #30006	; 0x7536
   2ee98:	movt	r3, #12905	; 0x3269
   2ee9c:	cmp	r1, r3
   2eea0:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2eea4:	mov	r1, r5
   2eea8:	movw	r0, #29608	; 0x73a8
   2eeac:	movt	r0, #4
   2eeb0:	mov	r2, #6
   2eeb4:	bl	13ed0 <memcmp@plt>
   2eeb8:	cmp	r0, #0
   2eebc:	movw	r1, #64557	; 0xfc2d
   2eec0:	movt	r1, #65535	; 0xffff
   2eec4:	movne	r1, #9
   2eec8:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2eecc:	movw	r3, #29749	; 0x7435
   2eed0:	movt	r3, #25953	; 0x6561
   2eed4:	cmp	r1, r3
   2eed8:	beq	2ff0c <__flatcc_fb_parse@@Base+0x2d3c>
   2eedc:	bls	2ef9c <__flatcc_fb_parse@@Base+0x1dcc>
   2eee0:	movw	r3, #26935	; 0x6937
   2eee4:	movt	r3, #25966	; 0x656e
   2eee8:	cmp	r1, r3
   2eeec:	beq	2fee4 <__flatcc_fb_parse@@Base+0x2d14>
   2eef0:	bls	2ef64 <__flatcc_fb_parse@@Base+0x1d94>
   2eef4:	movw	r3, #25654	; 0x6436
   2eef8:	movt	r3, #25967	; 0x656f
   2eefc:	cmp	r1, r3
   2ef00:	bne	2ef2c <__flatcc_fb_parse@@Base+0x1d5c>
   2ef04:	mov	r1, r5
   2ef08:	movw	r0, #29664	; 0x73e0
   2ef0c:	movt	r0, #4
   2ef10:	mov	r2, #6
   2ef14:	bl	13ed0 <memcmp@plt>
   2ef18:	cmp	r0, #0
   2ef1c:	movw	r1, #64561	; 0xfc31
   2ef20:	movt	r1, #65535	; 0xffff
   2ef24:	movne	r1, #9
   2ef28:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ef2c:	movw	r3, #29241	; 0x7239
   2ef30:	movt	r3, #25967	; 0x656f
   2ef34:	cmp	r1, r3
   2ef38:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2ef3c:	mov	r1, r5
   2ef40:	movw	r0, #28836	; 0x70a4
   2ef44:	movt	r0, #5
   2ef48:	mov	r2, #9
   2ef4c:	bl	13ed0 <memcmp@plt>
   2ef50:	cmp	r0, #0
   2ef54:	movw	r1, #64568	; 0xfc38
   2ef58:	movt	r1, #65535	; 0xffff
   2ef5c:	movne	r1, #9
   2ef60:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ef64:	movw	r3, #30005	; 0x7535
   2ef68:	movt	r3, #25954	; 0x6562
   2ef6c:	cmp	r1, r3
   2ef70:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2ef74:	mov	r1, r5
   2ef78:	movw	r0, #28712	; 0x7028
   2ef7c:	movt	r0, #5
   2ef80:	mov	r2, #5
   2ef84:	bl	13ed0 <memcmp@plt>
   2ef88:	cmp	r0, #0
   2ef8c:	movw	r1, #64554	; 0xfc2a
   2ef90:	movt	r1, #65535	; 0xffff
   2ef94:	movne	r1, #9
   2ef98:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ef9c:	movw	r3, #26165	; 0x6635
   2efa0:	movt	r3, #25953	; 0x6561
   2efa4:	cmp	r1, r3
   2efa8:	beq	2ffd4 <__flatcc_fb_parse@@Base+0x2e04>
   2efac:	movw	r3, #28217	; 0x6e39
   2efb0:	movt	r3, #25953	; 0x6561
   2efb4:	cmp	r1, r3
   2efb8:	beq	2fde4 <__flatcc_fb_parse@@Base+0x2c14>
   2efbc:	movw	r3, #26932	; 0x6934
   2efc0:	movt	r3, #14446	; 0x386e
   2efc4:	cmp	r1, r3
   2efc8:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2efcc:	ldrb	r3, [r5]
   2efd0:	cmp	r3, #105	; 0x69
   2efd4:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2efd8:	ldrb	r3, [r2]
   2efdc:	cmp	r3, #110	; 0x6e
   2efe0:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2efe4:	ldrb	r3, [r2, #1]
   2efe8:	add	r2, r2, #1
   2efec:	cmp	r3, #116	; 0x74
   2eff0:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2eff4:	ldrb	r3, [r2, #1]
   2eff8:	cmp	r3, #56	; 0x38
   2effc:	mvneq	r1, #992	; 0x3e0
   2f000:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f004:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2f008:	movw	r3, #25908	; 0x6534
   2f00c:	movt	r3, #28014	; 0x6d6e
   2f010:	cmp	r1, r3
   2f014:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f018:	ldrb	r3, [r5]
   2f01c:	cmp	r3, #101	; 0x65
   2f020:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f024:	ldrb	r3, [r2]
   2f028:	cmp	r3, #110	; 0x6e
   2f02c:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f030:	ldrb	r3, [r2, #1]
   2f034:	add	r2, r2, #1
   2f038:	cmp	r3, #117	; 0x75
   2f03c:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f040:	ldrb	r3, [r2, #1]
   2f044:	cmp	r3, #109	; 0x6d
   2f048:	mvneq	r1, #996	; 0x3e4
   2f04c:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f050:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2f054:	movw	r3, #24889	; 0x6139
   2f058:	movt	r3, #25972	; 0x6574
   2f05c:	cmp	r1, r3
   2f060:	beq	2ff84 <__flatcc_fb_parse@@Base+0x2db4>
   2f064:	movw	r3, #25140	; 0x6234
   2f068:	movt	r3, #25977	; 0x6579
   2f06c:	cmp	r1, r3
   2f070:	beq	2fe08 <__flatcc_fb_parse@@Base+0x2c38>
   2f074:	movw	r3, #29748	; 0x7434
   2f078:	movt	r3, #25970	; 0x6572
   2f07c:	cmp	r1, r3
   2f080:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f084:	ldrb	r3, [r5]
   2f088:	cmp	r3, #116	; 0x74
   2f08c:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f090:	ldrb	r3, [r2]
   2f094:	cmp	r3, #114	; 0x72
   2f098:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f09c:	ldrb	r3, [r2, #1]
   2f0a0:	add	r2, r2, #1
   2f0a4:	cmp	r3, #117	; 0x75
   2f0a8:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f0ac:	ldrb	r3, [r2, #1]
   2f0b0:	cmp	r3, #101	; 0x65
   2f0b4:	movweq	r1, #64548	; 0xfc24
   2f0b8:	movteq	r1, #65535	; 0xffff
   2f0bc:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f0c0:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2f0c4:	ldr	r3, [sp, #12]
   2f0c8:	cmp	r1, r3
   2f0cc:	beq	30050 <__flatcc_fb_parse@@Base+0x2e80>
   2f0d0:	bls	2f1bc <__flatcc_fb_parse@@Base+0x1fec>
   2f0d4:	cmp	r1, fp
   2f0d8:	beq	30020 <__flatcc_fb_parse@@Base+0x2e50>
   2f0dc:	bls	2f188 <__flatcc_fb_parse@@Base+0x1fb8>
   2f0e0:	cmp	r1, r7
   2f0e4:	bne	2f15c <__flatcc_fb_parse@@Base+0x1f8c>
   2f0e8:	mov	r1, r5
   2f0ec:	movw	r0, #28780	; 0x706c
   2f0f0:	movt	r0, #5
   2f0f4:	mov	r2, #6
   2f0f8:	bl	13ed0 <memcmp@plt>
   2f0fc:	cmp	r0, #0
   2f100:	movw	r1, #64564	; 0xfc34
   2f104:	movt	r1, #65535	; 0xffff
   2f108:	movne	r1, #9
   2f10c:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2f110:	movw	r3, #27700	; 0x6c34
   2f114:	movt	r3, #26479	; 0x676f
   2f118:	cmp	r1, r3
   2f11c:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f120:	ldrb	r3, [r5]
   2f124:	cmp	r3, #108	; 0x6c
   2f128:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f12c:	ldrb	r3, [r2]
   2f130:	cmp	r3, #111	; 0x6f
   2f134:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f138:	ldrb	r3, [r2, #1]
   2f13c:	add	r2, r2, #1
   2f140:	cmp	r3, #110	; 0x6e
   2f144:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f148:	ldrb	r3, [r2, #1]
   2f14c:	cmp	r3, #103	; 0x67
   2f150:	mvneq	r1, #988	; 0x3dc
   2f154:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f158:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2f15c:	cmp	r1, sl
   2f160:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f164:	mov	r1, r5
   2f168:	movw	r0, #31912	; 0x7ca8
   2f16c:	movt	r0, #5
   2f170:	mov	r2, #6
   2f174:	bl	13ed0 <memcmp@plt>
   2f178:	cmp	r0, #0
   2f17c:	movne	r1, #9
   2f180:	mvneq	r1, #972	; 0x3cc
   2f184:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2f188:	movw	r3, #26165	; 0x6635
   2f18c:	movt	r3, #29804	; 0x746c
   2f190:	cmp	r1, r3
   2f194:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f198:	mov	r1, r5
   2f19c:	movw	r0, #29672	; 0x73e8
   2f1a0:	movt	r0, #4
   2f1a4:	mov	r2, #5
   2f1a8:	bl	13ed0 <memcmp@plt>
   2f1ac:	cmp	r0, #0
   2f1b0:	movne	r1, #9
   2f1b4:	mvneq	r1, #984	; 0x3d8
   2f1b8:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2f1bc:	movw	r3, #26175	; 0x663f
   2f1c0:	movt	r3, #29289	; 0x7269
   2f1c4:	cmp	r1, r3
   2f1c8:	beq	2fffc <__flatcc_fb_parse@@Base+0x2e2c>
   2f1cc:	movw	r3, #29493	; 0x7335
   2f1d0:	movt	r3, #29800	; 0x7468
   2f1d4:	cmp	r1, r3
   2f1d8:	beq	2ff5c <__flatcc_fb_parse@@Base+0x2d8c>
   2f1dc:	movw	r3, #30005	; 0x7535
   2f1e0:	movt	r3, #28270	; 0x6e6e
   2f1e4:	cmp	r1, r3
   2f1e8:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f1ec:	mov	r1, r5
   2f1f0:	movw	r0, #28764	; 0x705c
   2f1f4:	movt	r0, #5
   2f1f8:	mov	r2, #5
   2f1fc:	bl	13ed0 <memcmp@plt>
   2f200:	cmp	r0, #0
   2f204:	movw	r1, #64560	; 0xfc30
   2f208:	movt	r1, #65535	; 0xffff
   2f20c:	movne	r1, #9
   2f210:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2f214:	mov	r0, r4
   2f218:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2f21c:	ldr	r8, [r4, #40]	; 0x28
   2f220:	ldr	r3, [r8, #16]
   2f224:	b	2d508 <__flatcc_fb_parse@@Base+0x338>
   2f228:	mov	ip, #0
   2f22c:	mov	r2, r7
   2f230:	mov	r3, ip
   2f234:	mov	r1, r8
   2f238:	mov	r0, r4
   2f23c:	str	ip, [sp]
   2f240:	str	ip, [sp, #4]
   2f244:	bl	2b548 <__flatcc_error_report@@Base>
   2f248:	b	2ebac <__flatcc_fb_parse@@Base+0x19dc>
   2f24c:	mov	r1, #1
   2f250:	mov	r0, #65536	; 0x10000
   2f254:	bl	13e7c <calloc@plt>
   2f258:	cmp	r0, #0
   2f25c:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2f260:	ldr	r1, [r4, #48]	; 0x30
   2f264:	add	ip, r0, #65536	; 0x10000
   2f268:	add	r3, r0, #16
   2f26c:	add	r2, r0, #48	; 0x30
   2f270:	str	ip, [r4, #44]	; 0x2c
   2f274:	str	r0, [r4, #48]	; 0x30
   2f278:	str	r1, [r0]
   2f27c:	b	2ebe4 <__flatcc_fb_parse@@Base+0x1a14>
   2f280:	mov	r1, #1
   2f284:	mov	r0, #65536	; 0x10000
   2f288:	bl	13e7c <calloc@plt>
   2f28c:	cmp	r0, #0
   2f290:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2f294:	ldr	r2, [r4, #48]	; 0x30
   2f298:	add	ip, r0, #65536	; 0x10000
   2f29c:	add	r7, r0, #16
   2f2a0:	add	r3, r0, #144	; 0x90
   2f2a4:	str	ip, [r4, #44]	; 0x2c
   2f2a8:	str	r0, [r4, #48]	; 0x30
   2f2ac:	str	r2, [r0]
   2f2b0:	b	2db98 <__flatcc_fb_parse@@Base+0x9c8>
   2f2b4:	mov	r1, #8
   2f2b8:	mov	r0, r4
   2f2bc:	mov	r5, r3
   2f2c0:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f2c4:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f2c8:	mov	r0, r4
   2f2cc:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2f2d0:	ldr	r9, [r4, #40]	; 0x28
   2f2d4:	ldr	r3, [r9, #16]
   2f2d8:	cmp	r3, #125	; 0x7d
   2f2dc:	beq	2f4c0 <__flatcc_fb_parse@@Base+0x22f0>
   2f2e0:	mov	r2, #0
   2f2e4:	cmp	r3, #9
   2f2e8:	str	r2, [r4, #36]	; 0x24
   2f2ec:	bne	2fce0 <__flatcc_fb_parse@@Base+0x2b10>
   2f2f0:	ldr	r3, [r4, #108]	; 0x6c
   2f2f4:	cmp	r3, #9
   2f2f8:	ble	2df18 <__flatcc_fb_parse@@Base+0xd48>
   2f2fc:	b	2e320 <__flatcc_fb_parse@@Base+0x1150>
   2f300:	mov	r0, r4
   2f304:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2f308:	ldr	r3, [r7, #16]
   2f30c:	ldr	r3, [r3]
   2f310:	cmp	r3, #0
   2f314:	beq	2f338 <__flatcc_fb_parse@@Base+0x2168>
   2f318:	mov	ip, #0
   2f31c:	mov	r1, r9
   2f320:	ldr	r2, [sp, #20]
   2f324:	mov	r3, ip
   2f328:	mov	r0, r4
   2f32c:	str	ip, [sp]
   2f330:	str	ip, [sp, #4]
   2f334:	bl	2b548 <__flatcc_error_report@@Base>
   2f338:	add	r1, r7, #16
   2f33c:	mov	r0, r4
   2f340:	bl	2b93c <__flatcc_error_report@@Base+0x3f4>
   2f344:	ldr	r1, [r4, #40]	; 0x28
   2f348:	ldr	r3, [r1, #16]
   2f34c:	b	2dfd4 <__flatcc_fb_parse@@Base+0xe04>
   2f350:	add	r1, sp, #24
   2f354:	mov	r0, r4
   2f358:	bl	2b7e4 <__flatcc_error_report@@Base+0x29c>
   2f35c:	ldr	r1, [r4, #40]	; 0x28
   2f360:	ldr	r3, [r1, #16]
   2f364:	str	r5, [r4, #36]	; 0x24
   2f368:	cmp	r3, #59	; 0x3b
   2f36c:	beq	2f534 <__flatcc_fb_parse@@Base+0x2364>
   2f370:	movw	r2, #29060	; 0x7184
   2f374:	movt	r2, #5
   2f378:	str	r5, [sp]
   2f37c:	mov	r3, r7
   2f380:	mov	r0, r4
   2f384:	str	r5, [sp, #4]
   2f388:	bl	2b548 <__flatcc_error_report@@Base>
   2f38c:	ldr	r7, [sp, #24]
   2f390:	mov	r2, #0
   2f394:	ldr	r0, [r4, #412]	; 0x19c
   2f398:	mov	r1, r7
   2f39c:	bl	291dc <fb_scope_table_find@@Base>
   2f3a0:	subs	r5, r0, #0
   2f3a4:	beq	2fba8 <__flatcc_fb_parse@@Base+0x29d8>
   2f3a8:	str	r5, [r4, #544]	; 0x220
   2f3ac:	ldr	r1, [r4, #40]	; 0x28
   2f3b0:	b	2d5ac <__flatcc_fb_parse@@Base+0x3dc>
   2f3b4:	mov	r3, #0
   2f3b8:	str	r3, [r4, #36]	; 0x24
   2f3bc:	mov	r0, r4
   2f3c0:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2f3c4:	b	2dc58 <__flatcc_fb_parse@@Base+0xa88>
   2f3c8:	mov	r3, r7
   2f3cc:	mov	r1, r8
   2f3d0:	str	r7, [sp]
   2f3d4:	movw	r2, #29720	; 0x7418
   2f3d8:	movt	r2, #5
   2f3dc:	str	r7, [sp, #4]
   2f3e0:	mov	r0, r4
   2f3e4:	bl	2b548 <__flatcc_error_report@@Base>
   2f3e8:	ldr	r1, [r4, #40]	; 0x28
   2f3ec:	ldr	r3, [r1, #16]
   2f3f0:	b	2e304 <__flatcc_fb_parse@@Base+0x1134>
   2f3f4:	add	r7, r5, #2
   2f3f8:	cmp	r6, r7
   2f3fc:	beq	2d8b4 <__flatcc_fb_parse@@Base+0x6e4>
   2f400:	ldrb	r3, [r5, #2]
   2f404:	cmp	r3, #13
   2f408:	bne	2d8b4 <__flatcc_fb_parse@@Base+0x6e4>
   2f40c:	b	2d8b0 <__flatcc_fb_parse@@Base+0x6e0>
   2f410:	add	r9, r5, #2
   2f414:	mov	r2, r5
   2f418:	mov	r3, r9
   2f41c:	movw	r1, #9766	; 0x2626
   2f420:	mov	r0, r4
   2f424:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f428:	mov	r2, r5
   2f42c:	mov	r3, r9
   2f430:	mov	r1, #38	; 0x26
   2f434:	mov	r0, r4
   2f438:	mov	r5, r9
   2f43c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f440:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f444:	mov	r1, #1
   2f448:	mov	r0, #65536	; 0x10000
   2f44c:	bl	13e7c <calloc@plt>
   2f450:	cmp	r0, #0
   2f454:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2f458:	ldr	r2, [r4, #48]	; 0x30
   2f45c:	add	r1, r0, #65536	; 0x10000
   2f460:	add	r7, r0, #16
   2f464:	add	r3, r0, #144	; 0x90
   2f468:	str	r1, [r4, #44]	; 0x2c
   2f46c:	str	r0, [r4, #48]	; 0x30
   2f470:	str	r2, [r0]
   2f474:	b	2df2c <__flatcc_fb_parse@@Base+0xd5c>
   2f478:	add	r9, r5, #2
   2f47c:	cmp	r6, r9
   2f480:	beq	2f490 <__flatcc_fb_parse@@Base+0x22c0>
   2f484:	ldrb	r3, [r5, #2]
   2f488:	cmp	r3, #61	; 0x3d
   2f48c:	beq	2fd30 <__flatcc_fb_parse@@Base+0x2b60>
   2f490:	mov	r3, r9
   2f494:	mov	r2, r5
   2f498:	movw	r1, #15677	; 0x3d3d
   2f49c:	mov	r0, r4
   2f4a0:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f4a4:	mov	r2, r5
   2f4a8:	mov	r3, r9
   2f4ac:	mov	r1, #61	; 0x3d
   2f4b0:	mov	r0, r4
   2f4b4:	mov	r5, r9
   2f4b8:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f4bc:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f4c0:	mov	r3, #0
   2f4c4:	str	r3, [r4, #36]	; 0x24
   2f4c8:	mov	r0, r4
   2f4cc:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2f4d0:	b	2e034 <__flatcc_fb_parse@@Base+0xe64>
   2f4d4:	add	r3, r7, #2
   2f4d8:	mov	r2, r5
   2f4dc:	mov	r1, #22
   2f4e0:	mov	r0, r4
   2f4e4:	mov	r5, r3
   2f4e8:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f4ec:	b	2ec60 <__flatcc_fb_parse@@Base+0x1a90>
   2f4f0:	mov	r2, r5
   2f4f4:	mov	r1, #10
   2f4f8:	mov	r0, r4
   2f4fc:	mov	r5, r3
   2f500:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f504:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f508:	ldr	r1, [r4, #376]	; 0x178
   2f50c:	movw	r2, #29100	; 0x71ac
   2f510:	movt	r2, #5
   2f514:	mov	r3, #0
   2f518:	mov	r0, r4
   2f51c:	ldr	ip, [r4, #380]	; 0x17c
   2f520:	str	r1, [sp]
   2f524:	ldr	r1, [r4, #40]	; 0x28
   2f528:	str	ip, [sp, #4]
   2f52c:	bl	2b548 <__flatcc_error_report@@Base>
   2f530:	b	2d984 <__flatcc_fb_parse@@Base+0x7b4>
   2f534:	mov	r0, r4
   2f538:	bl	2b360 <__flatcc_fb_default_error_out@@Base+0x124>
   2f53c:	b	2f38c <__flatcc_fb_parse@@Base+0x21bc>
   2f540:	mov	r3, r7
   2f544:	movw	r2, #29532	; 0x735c
   2f548:	movt	r2, #5
   2f54c:	mov	r0, r4
   2f550:	str	r7, [sp]
   2f554:	str	r7, [sp, #4]
   2f558:	bl	2b548 <__flatcc_error_report@@Base>
   2f55c:	b	2db30 <__flatcc_fb_parse@@Base+0x960>
   2f560:	mov	ip, #0
   2f564:	movw	r2, #29532	; 0x735c
   2f568:	movt	r2, #5
   2f56c:	mov	r3, ip
   2f570:	mov	r0, r4
   2f574:	str	ip, [sp]
   2f578:	str	ip, [sp, #4]
   2f57c:	bl	2b548 <__flatcc_error_report@@Base>
   2f580:	b	2db30 <__flatcc_fb_parse@@Base+0x960>
   2f584:	mov	r2, r5
   2f588:	movw	r1, #15934	; 0x3e3e
   2f58c:	mov	r0, r4
   2f590:	mov	r5, r3
   2f594:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f598:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f59c:	ldrb	r3, [r2]
   2f5a0:	cmp	r3, #111	; 0x6f
   2f5a4:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f5a8:	ldrb	r3, [r2, #1]
   2f5ac:	add	r2, r2, #1
   2f5b0:	cmp	r3, #111	; 0x6f
   2f5b4:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f5b8:	ldrb	r3, [r2, #1]
   2f5bc:	cmp	r3, #108	; 0x6c
   2f5c0:	movweq	r1, #64537	; 0xfc19
   2f5c4:	movteq	r1, #65535	; 0xffff
   2f5c8:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2f5cc:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2f5d0:	mov	r1, #1
   2f5d4:	mov	r0, #65536	; 0x10000
   2f5d8:	bl	13e7c <calloc@plt>
   2f5dc:	cmp	r0, #0
   2f5e0:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2f5e4:	ldr	r3, [r4, #48]	; 0x30
   2f5e8:	add	r2, r0, #65536	; 0x10000
   2f5ec:	add	ip, r0, #16
   2f5f0:	str	r2, [r4, #44]	; 0x2c
   2f5f4:	add	r2, r0, #144	; 0x90
   2f5f8:	str	r0, [r4, #48]	; 0x30
   2f5fc:	str	r3, [r0]
   2f600:	ldr	r3, [r5, #20]
   2f604:	b	2e078 <__flatcc_fb_parse@@Base+0xea8>
   2f608:	mov	r2, r5
   2f60c:	mov	r1, #46	; 0x2e
   2f610:	mov	r0, r4
   2f614:	mov	r5, r3
   2f618:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f61c:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f620:	mov	r2, r5
   2f624:	mov	r1, #43	; 0x2b
   2f628:	mov	r0, r4
   2f62c:	mov	r5, r3
   2f630:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f634:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f638:	mov	r2, r5
   2f63c:	mov	r1, #58	; 0x3a
   2f640:	mov	r0, r4
   2f644:	mov	r5, r3
   2f648:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f64c:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f650:	mov	r2, r5
   2f654:	mov	r1, #62	; 0x3e
   2f658:	mov	r0, r4
   2f65c:	mov	r5, r3
   2f660:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f664:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f668:	mov	r2, r5
   2f66c:	mov	r3, r9
   2f670:	mov	r1, #42	; 0x2a
   2f674:	mov	r0, r4
   2f678:	mov	r5, r9
   2f67c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f680:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f684:	add	r3, r5, #2
   2f688:	cmp	r6, r3
   2f68c:	beq	2f69c <__flatcc_fb_parse@@Base+0x24cc>
   2f690:	ldrb	r2, [r5, #2]
   2f694:	cmp	r2, #46	; 0x2e
   2f698:	beq	2fd10 <__flatcc_fb_parse@@Base+0x2b40>
   2f69c:	mov	r2, r5
   2f6a0:	movw	r1, #11822	; 0x2e2e
   2f6a4:	mov	r0, r4
   2f6a8:	mov	r5, r3
   2f6ac:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f6b0:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f6b4:	mov	r2, r5
   2f6b8:	movw	r1, #10794	; 0x2a2a
   2f6bc:	mov	r3, r9
   2f6c0:	mov	r0, r4
   2f6c4:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f6c8:	ldrb	r1, [r5, #1]
   2f6cc:	mov	r5, r9
   2f6d0:	b	2d298 <__flatcc_fb_parse@@Base+0xc8>
   2f6d4:	add	r3, r5, #2
   2f6d8:	mov	r2, r5
   2f6dc:	movw	r1, #15740	; 0x3d7c
   2f6e0:	mov	r0, r4
   2f6e4:	mov	r5, r3
   2f6e8:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f6ec:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f6f0:	add	r3, r5, #2
   2f6f4:	cmp	r6, r3
   2f6f8:	beq	2f708 <__flatcc_fb_parse@@Base+0x2538>
   2f6fc:	ldrb	r2, [r5, #2]
   2f700:	cmp	r2, #61	; 0x3d
   2f704:	beq	2fd50 <__flatcc_fb_parse@@Base+0x2b80>
   2f708:	mov	r2, r5
   2f70c:	movw	r1, #14906	; 0x3a3a
   2f710:	mov	r0, r4
   2f714:	mov	r5, r3
   2f718:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f71c:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f720:	add	r3, r5, #2
   2f724:	mov	r2, r5
   2f728:	movw	r1, #15678	; 0x3d3e
   2f72c:	mov	r0, r4
   2f730:	mov	r5, r3
   2f734:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f738:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f73c:	add	r3, r5, #2
   2f740:	mov	r2, r5
   2f744:	movw	r1, #11051	; 0x2b2b
   2f748:	mov	r0, r4
   2f74c:	mov	r5, r3
   2f750:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f754:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f758:	and	r1, r1, #223	; 0xdf
   2f75c:	cmp	r1, #69	; 0x45
   2f760:	bne	2e3c8 <__flatcc_fb_parse@@Base+0x11f8>
   2f764:	b	2e384 <__flatcc_fb_parse@@Base+0x11b4>
   2f768:	add	r3, r5, #2
   2f76c:	mov	r2, r5
   2f770:	movw	r1, #11580	; 0x2d3c
   2f774:	mov	r0, r4
   2f778:	mov	r5, r3
   2f77c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f780:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f784:	add	r3, r5, #2
   2f788:	mov	r2, r5
   2f78c:	movw	r1, #15676	; 0x3d3c
   2f790:	mov	r0, r4
   2f794:	mov	r5, r3
   2f798:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f79c:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f7a0:	add	r3, r5, #2
   2f7a4:	cmp	r6, r3
   2f7a8:	beq	2fc60 <__flatcc_fb_parse@@Base+0x2a90>
   2f7ac:	ldrb	r2, [r5, #2]
   2f7b0:	cmp	r2, #60	; 0x3c
   2f7b4:	beq	2fcac <__flatcc_fb_parse@@Base+0x2adc>
   2f7b8:	cmp	r2, #61	; 0x3d
   2f7bc:	bne	2fc60 <__flatcc_fb_parse@@Base+0x2a90>
   2f7c0:	add	r3, r5, #3
   2f7c4:	mov	r2, r5
   2f7c8:	movw	r1, #15420	; 0x3c3c
   2f7cc:	movt	r1, #61	; 0x3d
   2f7d0:	mov	r0, r4
   2f7d4:	mov	r5, r3
   2f7d8:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f7dc:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f7e0:	add	r3, r5, #2
   2f7e4:	mov	r2, r5
   2f7e8:	movw	r1, #15917	; 0x3e2d
   2f7ec:	mov	r0, r4
   2f7f0:	mov	r5, r3
   2f7f4:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f7f8:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f7fc:	add	r3, r5, #2
   2f800:	mov	r2, r5
   2f804:	movw	r1, #15661	; 0x3d2d
   2f808:	mov	r0, r4
   2f80c:	mov	r5, r3
   2f810:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f814:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2f818:	add	r7, r5, #2
   2f81c:	cmp	r6, r7
   2f820:	beq	2fc0c <__flatcc_fb_parse@@Base+0x2a3c>
   2f824:	ldrb	r3, [r5, #2]
   2f828:	cmp	r3, #33	; 0x21
   2f82c:	cmpne	r3, #42	; 0x2a
   2f830:	bne	2fc0c <__flatcc_fb_parse@@Base+0x2a3c>
   2f834:	mov	r0, #1
   2f838:	add	r7, r5, #3
   2f83c:	movw	r1, #64572	; 0xfc3c
   2f840:	movt	r1, #65535	; 0xffff
   2f844:	mov	r3, r7
   2f848:	mov	r2, r7
   2f84c:	str	r0, [r4, #32]
   2f850:	mov	r0, r4
   2f854:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f858:	movw	r9, #64572	; 0xfc3c
   2f85c:	movt	r9, #65535	; 0xffff
   2f860:	sub	r2, r7, #1
   2f864:	b	2f86c <__flatcc_fb_parse@@Base+0x269c>
   2f868:	mov	r2, r5
   2f86c:	add	r5, r2, #1
   2f870:	cmp	r6, r5
   2f874:	beq	2f924 <__flatcc_fb_parse@@Base+0x2754>
   2f878:	ldrb	r3, [r2, #1]
   2f87c:	cmp	r3, #127	; 0x7f
   2f880:	cmpne	r3, #31
   2f884:	bls	2f950 <__flatcc_fb_parse@@Base+0x2780>
   2f888:	cmp	r3, #47	; 0x2f
   2f88c:	bne	2f868 <__flatcc_fb_parse@@Base+0x2698>
   2f890:	ldrb	r3, [r5, #-1]
   2f894:	cmp	r3, #42	; 0x2a
   2f898:	bne	2f868 <__flatcc_fb_parse@@Base+0x2698>
   2f89c:	cmp	r7, r2
   2f8a0:	moveq	r5, r7
   2f8a4:	beq	2f8b8 <__flatcc_fb_parse@@Base+0x26e8>
   2f8a8:	ldr	r3, [r4, #32]
   2f8ac:	mov	r5, r2
   2f8b0:	cmp	r3, #0
   2f8b4:	bne	2f938 <__flatcc_fb_parse@@Base+0x2768>
   2f8b8:	cmp	r6, r5
   2f8bc:	beq	2fa04 <__flatcc_fb_parse@@Base+0x2834>
   2f8c0:	ldrb	r3, [r5]
   2f8c4:	cmp	r3, #0
   2f8c8:	beq	2fa04 <__flatcc_fb_parse@@Base+0x2834>
   2f8cc:	cmp	r3, #10
   2f8d0:	beq	2fa4c <__flatcc_fb_parse@@Base+0x287c>
   2f8d4:	cmp	r3, #13
   2f8d8:	beq	2fa78 <__flatcc_fb_parse@@Base+0x28a8>
   2f8dc:	cmp	r3, #127	; 0x7f
   2f8e0:	cmpne	r3, #31
   2f8e4:	movls	r2, #1
   2f8e8:	movhi	r2, #0
   2f8ec:	bhi	2fa40 <__flatcc_fb_parse@@Base+0x2870>
   2f8f0:	cmp	r3, #9
   2f8f4:	cmpne	r3, #32
   2f8f8:	add	r7, r5, #1
   2f8fc:	bne	2fa98 <__flatcc_fb_parse@@Base+0x28c8>
   2f900:	ldr	r3, [r4, #32]
   2f904:	cmp	r3, #0
   2f908:	beq	2f860 <__flatcc_fb_parse@@Base+0x2690>
   2f90c:	mov	r2, r5
   2f910:	mov	r3, r7
   2f914:	mov	r1, r9
   2f918:	mov	r0, r4
   2f91c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f920:	b	2f860 <__flatcc_fb_parse@@Base+0x2690>
   2f924:	cmp	r7, r6
   2f928:	beq	2fa04 <__flatcc_fb_parse@@Base+0x2834>
   2f92c:	ldr	r3, [r4, #32]
   2f930:	cmp	r3, #0
   2f934:	beq	2fa04 <__flatcc_fb_parse@@Base+0x2834>
   2f938:	mov	r2, r7
   2f93c:	mov	r3, r5
   2f940:	mov	r1, r9
   2f944:	mov	r0, r4
   2f948:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f94c:	b	2f8b8 <__flatcc_fb_parse@@Base+0x26e8>
   2f950:	cmp	r7, r5
   2f954:	beq	2f8c4 <__flatcc_fb_parse@@Base+0x26f4>
   2f958:	ldr	r3, [r4, #32]
   2f95c:	cmp	r3, #0
   2f960:	beq	2f8c0 <__flatcc_fb_parse@@Base+0x26f0>
   2f964:	b	2f938 <__flatcc_fb_parse@@Base+0x2768>
   2f968:	add	r7, r5, #2
   2f96c:	cmp	r6, r7
   2f970:	beq	2fc00 <__flatcc_fb_parse@@Base+0x2a30>
   2f974:	ldrb	r3, [r5, #2]
   2f978:	cmp	r3, #33	; 0x21
   2f97c:	cmpne	r3, #47	; 0x2f
   2f980:	bne	2fc00 <__flatcc_fb_parse@@Base+0x2a30>
   2f984:	mov	r0, #1
   2f988:	add	r7, r5, #3
   2f98c:	movw	r1, #64572	; 0xfc3c
   2f990:	movt	r1, #65535	; 0xffff
   2f994:	mov	r3, r7
   2f998:	mov	r2, r7
   2f99c:	str	r0, [r4, #32]
   2f9a0:	mov	r0, r4
   2f9a4:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2f9a8:	movw	sl, #64572	; 0xfc3c
   2f9ac:	movt	sl, #65535	; 0xffff
   2f9b0:	sub	r9, r7, #1
   2f9b4:	b	2f9cc <__flatcc_fb_parse@@Base+0x27fc>
   2f9b8:	ldrb	r3, [r9, #1]
   2f9bc:	cmp	r3, #127	; 0x7f
   2f9c0:	cmpne	r3, #31
   2f9c4:	bls	2facc <__flatcc_fb_parse@@Base+0x28fc>
   2f9c8:	mov	r9, r5
   2f9cc:	add	r5, r9, #1
   2f9d0:	cmp	r6, r5
   2f9d4:	bne	2f9b8 <__flatcc_fb_parse@@Base+0x27e8>
   2f9d8:	cmp	r7, r6
   2f9dc:	beq	2fa04 <__flatcc_fb_parse@@Base+0x2834>
   2f9e0:	ldr	r3, [r4, #32]
   2f9e4:	cmp	r3, #0
   2f9e8:	beq	2fa04 <__flatcc_fb_parse@@Base+0x2834>
   2f9ec:	movw	r1, #64572	; 0xfc3c
   2f9f0:	movt	r1, #65535	; 0xffff
   2f9f4:	mov	r2, r7
   2f9f8:	mov	r3, r6
   2f9fc:	mov	r0, r4
   2fa00:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fa04:	mov	r3, r5
   2fa08:	mov	r2, r5
   2fa0c:	mov	r1, #27
   2fa10:	mov	r0, r4
   2fa14:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fa18:	cmp	r6, r5
   2fa1c:	beq	2d4c4 <__flatcc_fb_parse@@Base+0x2f4>
   2fa20:	ldrb	r1, [r5]
   2fa24:	cmp	r1, #0
   2fa28:	bne	2d4c4 <__flatcc_fb_parse@@Base+0x2f4>
   2fa2c:	mov	r3, r5
   2fa30:	mov	r2, r5
   2fa34:	mov	r0, r4
   2fa38:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fa3c:	b	2d4d8 <__flatcc_fb_parse@@Base+0x308>
   2fa40:	add	r5, r5, #2
   2fa44:	str	r2, [r4, #32]
   2fa48:	b	2ec60 <__flatcc_fb_parse@@Base+0x1a90>
   2fa4c:	add	r7, r5, #1
   2fa50:	cmp	r6, r7
   2fa54:	beq	2fa64 <__flatcc_fb_parse@@Base+0x2894>
   2fa58:	ldrb	r3, [r5, #1]
   2fa5c:	cmp	r3, #13
   2fa60:	beq	2fa90 <__flatcc_fb_parse@@Base+0x28c0>
   2fa64:	ldr	r3, [r4, #64]	; 0x40
   2fa68:	str	r7, [r4, #60]	; 0x3c
   2fa6c:	add	r3, r3, #1
   2fa70:	str	r3, [r4, #64]	; 0x40
   2fa74:	b	2f860 <__flatcc_fb_parse@@Base+0x2690>
   2fa78:	add	r7, r5, #1
   2fa7c:	cmp	r6, r7
   2fa80:	beq	2fa64 <__flatcc_fb_parse@@Base+0x2894>
   2fa84:	ldrb	r3, [r5, #1]
   2fa88:	cmp	r3, #10
   2fa8c:	bne	2fa64 <__flatcc_fb_parse@@Base+0x2894>
   2fa90:	add	r7, r5, #2
   2fa94:	b	2fa64 <__flatcc_fb_parse@@Base+0x2894>
   2fa98:	mov	r2, r5
   2fa9c:	mov	r3, r7
   2faa0:	mov	r1, #7
   2faa4:	mov	r0, r4
   2faa8:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2faac:	b	2f860 <__flatcc_fb_parse@@Base+0x2690>
   2fab0:	add	r3, r5, #2
   2fab4:	mov	r2, r5
   2fab8:	movw	r1, #15663	; 0x3d2f
   2fabc:	mov	r0, r4
   2fac0:	mov	r5, r3
   2fac4:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fac8:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2facc:	cmp	r7, r5
   2fad0:	bne	2fb38 <__flatcc_fb_parse@@Base+0x2968>
   2fad4:	ldrb	r3, [r5]
   2fad8:	cmp	r3, #0
   2fadc:	beq	2fa04 <__flatcc_fb_parse@@Base+0x2834>
   2fae0:	cmp	r3, #13
   2fae4:	cmpne	r3, #10
   2fae8:	beq	2fb5c <__flatcc_fb_parse@@Base+0x298c>
   2faec:	cmp	r3, #9
   2faf0:	cmpne	r3, #32
   2faf4:	add	r7, r9, #2
   2faf8:	bne	2fb20 <__flatcc_fb_parse@@Base+0x2950>
   2fafc:	ldr	r3, [r4, #32]
   2fb00:	cmp	r3, #0
   2fb04:	beq	2f9b0 <__flatcc_fb_parse@@Base+0x27e0>
   2fb08:	mov	r2, r5
   2fb0c:	mov	r3, r7
   2fb10:	mov	r1, sl
   2fb14:	mov	r0, r4
   2fb18:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fb1c:	b	2f9b0 <__flatcc_fb_parse@@Base+0x27e0>
   2fb20:	mov	r2, r5
   2fb24:	mov	r3, r7
   2fb28:	mov	r1, #7
   2fb2c:	mov	r0, r4
   2fb30:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fb34:	b	2f9b0 <__flatcc_fb_parse@@Base+0x27e0>
   2fb38:	ldr	r3, [r4, #32]
   2fb3c:	cmp	r3, #0
   2fb40:	beq	2fad4 <__flatcc_fb_parse@@Base+0x2904>
   2fb44:	mov	r2, r7
   2fb48:	mov	r3, r5
   2fb4c:	mov	r1, sl
   2fb50:	mov	r0, r4
   2fb54:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fb58:	b	2fad4 <__flatcc_fb_parse@@Base+0x2904>
   2fb5c:	mov	r3, #0
   2fb60:	str	r3, [r4, #32]
   2fb64:	b	2ec60 <__flatcc_fb_parse@@Base+0x1a90>
   2fb68:	add	r3, r5, #2
   2fb6c:	mov	r2, r5
   2fb70:	movw	r1, #11565	; 0x2d2d
   2fb74:	mov	r0, r4
   2fb78:	mov	r5, r3
   2fb7c:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fb80:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2fb84:	mov	r3, r9
   2fb88:	mov	r2, r9
   2fb8c:	mov	r1, #23
   2fb90:	mov	r0, r4
   2fb94:	mov	r5, r9
   2fb98:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fb9c:	b	2ec60 <__flatcc_fb_parse@@Base+0x1a90>
   2fba0:	mov	r2, r3
   2fba4:	b	2dfbc <__flatcc_fb_parse@@Base+0xdec>
   2fba8:	ldr	r3, [r4, #44]	; 0x2c
   2fbac:	ldr	r5, [r4, #52]	; 0x34
   2fbb0:	add	r2, r5, #32
   2fbb4:	cmp	r2, r3
   2fbb8:	bhi	2fc78 <__flatcc_fb_parse@@Base+0x2aa8>
   2fbbc:	add	r3, r4, #476	; 0x1dc
   2fbc0:	mov	r1, r5
   2fbc4:	ldr	r0, [r4, #412]	; 0x19c
   2fbc8:	ldrd	r8, [r3]
   2fbcc:	str	r2, [r4, #52]	; 0x34
   2fbd0:	mov	r2, #1
   2fbd4:	str	r7, [r5]
   2fbd8:	strd	r8, [r5, #20]
   2fbdc:	bl	291cc <fb_scope_table_insert_item@@Base>
   2fbe0:	b	2f3a8 <__flatcc_fb_parse@@Base+0x21d8>
   2fbe4:	add	r3, r5, #2
   2fbe8:	mov	r2, r5
   2fbec:	orr	r1, r1, #15616	; 0x3d00
   2fbf0:	mov	r0, r4
   2fbf4:	mov	r5, r3
   2fbf8:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fbfc:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2fc00:	mov	r3, #0
   2fc04:	str	r3, [r4, #32]
   2fc08:	b	2f9a8 <__flatcc_fb_parse@@Base+0x27d8>
   2fc0c:	mov	r3, #0
   2fc10:	str	r3, [r4, #32]
   2fc14:	b	2f858 <__flatcc_fb_parse@@Base+0x2688>
   2fc18:	cmp	r3, #0
   2fc1c:	bne	2d6f4 <__flatcc_fb_parse@@Base+0x524>
   2fc20:	b	2ec7c <__flatcc_fb_parse@@Base+0x1aac>
   2fc24:	mov	r0, r3
   2fc28:	b	2e6d4 <__flatcc_fb_parse@@Base+0x1504>
   2fc2c:	sub	r0, r9, r5
   2fc30:	ldrb	r1, [ip]
   2fc34:	uxtb	r0, r0
   2fc38:	add	r0, r0, #48	; 0x30
   2fc3c:	b	2e514 <__flatcc_fb_parse@@Base+0x1344>
   2fc40:	add	r3, r5, #3
   2fc44:	mov	r2, r5
   2fc48:	movw	r1, #15934	; 0x3e3e
   2fc4c:	movt	r1, #61	; 0x3d
   2fc50:	mov	r0, r4
   2fc54:	mov	r5, r3
   2fc58:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fc5c:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2fc60:	mov	r2, r5
   2fc64:	movw	r1, #15420	; 0x3c3c
   2fc68:	mov	r0, r4
   2fc6c:	mov	r5, r3
   2fc70:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fc74:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2fc78:	mov	r1, #1
   2fc7c:	mov	r0, #65536	; 0x10000
   2fc80:	bl	13e7c <calloc@plt>
   2fc84:	cmp	r0, #0
   2fc88:	beq	300d0 <__flatcc_fb_parse@@Base+0x2f00>
   2fc8c:	ldr	r3, [r4, #48]	; 0x30
   2fc90:	add	r1, r0, #65536	; 0x10000
   2fc94:	add	r5, r0, #16
   2fc98:	add	r2, r0, #48	; 0x30
   2fc9c:	str	r1, [r4, #44]	; 0x2c
   2fca0:	str	r0, [r4, #48]	; 0x30
   2fca4:	str	r3, [r0]
   2fca8:	b	2fbbc <__flatcc_fb_parse@@Base+0x29ec>
   2fcac:	add	r3, r5, #3
   2fcb0:	cmp	r6, r3
   2fcb4:	beq	2fcc4 <__flatcc_fb_parse@@Base+0x2af4>
   2fcb8:	ldrb	r2, [r5, #3]
   2fcbc:	cmp	r2, #61	; 0x3d
   2fcc0:	beq	300b0 <__flatcc_fb_parse@@Base+0x2ee0>
   2fcc4:	mov	r2, r5
   2fcc8:	movw	r1, #15420	; 0x3c3c
   2fccc:	movt	r1, #60	; 0x3c
   2fcd0:	mov	r0, r4
   2fcd4:	mov	r5, r3
   2fcd8:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fcdc:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2fce0:	mov	ip, #0
   2fce4:	mov	r1, r9
   2fce8:	mov	r3, ip
   2fcec:	movw	r2, #29752	; 0x7438
   2fcf0:	movt	r2, #5
   2fcf4:	mov	r0, r4
   2fcf8:	str	ip, [sp]
   2fcfc:	str	ip, [sp, #4]
   2fd00:	bl	2b548 <__flatcc_error_report@@Base>
   2fd04:	ldr	r1, [r4, #40]	; 0x28
   2fd08:	ldr	r3, [r1, #16]
   2fd0c:	b	2e304 <__flatcc_fb_parse@@Base+0x1134>
   2fd10:	add	r3, r5, #3
   2fd14:	mov	r2, r5
   2fd18:	movw	r1, #11822	; 0x2e2e
   2fd1c:	movt	r1, #46	; 0x2e
   2fd20:	mov	r0, r4
   2fd24:	mov	r5, r3
   2fd28:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fd2c:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2fd30:	add	r3, r5, #3
   2fd34:	mov	r2, r5
   2fd38:	movw	r1, #15677	; 0x3d3d
   2fd3c:	movt	r1, #61	; 0x3d
   2fd40:	mov	r0, r4
   2fd44:	mov	r5, r3
   2fd48:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fd4c:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2fd50:	add	r3, r5, #3
   2fd54:	mov	r2, r5
   2fd58:	movw	r1, #14906	; 0x3a3a
   2fd5c:	movt	r1, #61	; 0x3d
   2fd60:	mov	r0, r4
   2fd64:	mov	r5, r3
   2fd68:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   2fd6c:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   2fd70:	mov	r1, r5
   2fd74:	movw	r0, #28848	; 0x70b0
   2fd78:	movt	r0, #5
   2fd7c:	mov	r2, #11
   2fd80:	bl	13ed0 <memcmp@plt>
   2fd84:	cmp	r0, #0
   2fd88:	movw	r1, #64569	; 0xfc39
   2fd8c:	movt	r1, #65535	; 0xffff
   2fd90:	movne	r1, #9
   2fd94:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2fd98:	mov	r1, r5
   2fd9c:	movw	r0, #29600	; 0x73a0
   2fda0:	movt	r0, #4
   2fda4:	mov	r2, #6
   2fda8:	bl	13ed0 <memcmp@plt>
   2fdac:	cmp	r0, #0
   2fdb0:	movw	r1, #64558	; 0xfc2e
   2fdb4:	movt	r1, #65535	; 0xffff
   2fdb8:	movne	r1, #9
   2fdbc:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2fdc0:	mov	r1, r5
   2fdc4:	movw	r0, #29624	; 0x73b8
   2fdc8:	movt	r0, #4
   2fdcc:	mov	r2, #5
   2fdd0:	bl	13ed0 <memcmp@plt>
   2fdd4:	cmp	r0, #0
   2fdd8:	movne	r1, #9
   2fddc:	mvneq	r1, #980	; 0x3d4
   2fde0:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2fde4:	mov	r1, r5
   2fde8:	movw	r0, #28824	; 0x7098
   2fdec:	movt	r0, #5
   2fdf0:	mov	r2, #9
   2fdf4:	bl	13ed0 <memcmp@plt>
   2fdf8:	cmp	r0, #0
   2fdfc:	movne	r1, #9
   2fe00:	mvneq	r1, #968	; 0x3c8
   2fe04:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2fe08:	ldrb	r3, [r5]
   2fe0c:	cmp	r3, #98	; 0x62
   2fe10:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2fe14:	ldrb	r3, [r2]
   2fe18:	cmp	r3, #121	; 0x79
   2fe1c:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2fe20:	ldrb	r3, [r2, #1]
   2fe24:	add	r2, r2, #1
   2fe28:	cmp	r3, #116	; 0x74
   2fe2c:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2fe30:	ldrb	r3, [r2, #1]
   2fe34:	cmp	r3, #101	; 0x65
   2fe38:	movweq	r1, #64538	; 0xfc1a
   2fe3c:	movteq	r1, #65535	; 0xffff
   2fe40:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   2fe44:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2fe48:	mov	r1, r5
   2fe4c:	movw	r0, #29640	; 0x73c8
   2fe50:	movt	r0, #4
   2fe54:	mov	r2, #5
   2fe58:	bl	13ed0 <memcmp@plt>
   2fe5c:	cmp	r0, #0
   2fe60:	movw	r1, #64545	; 0xfc21
   2fe64:	movt	r1, #65535	; 0xffff
   2fe68:	movne	r1, #9
   2fe6c:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2fe70:	mov	r1, r5
   2fe74:	movw	r0, #27692	; 0x6c2c
   2fe78:	movt	r0, #5
   2fe7c:	mov	r2, #6
   2fe80:	bl	13ed0 <memcmp@plt>
   2fe84:	cmp	r0, #0
   2fe88:	movw	r1, #64562	; 0xfc32
   2fe8c:	movt	r1, #65535	; 0xffff
   2fe90:	movne	r1, #9
   2fe94:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2fe98:	mov	r1, r5
   2fe9c:	movw	r0, #28756	; 0x7054
   2fea0:	movt	r0, #5
   2fea4:	mov	r2, #5
   2fea8:	bl	13ed0 <memcmp@plt>
   2feac:	cmp	r0, #0
   2feb0:	movne	r1, #9
   2feb4:	mvneq	r1, #976	; 0x3d0
   2feb8:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2febc:	mov	r1, r5
   2fec0:	movw	r0, #28860	; 0x70bc
   2fec4:	movt	r0, #5
   2fec8:	mov	r2, #14
   2fecc:	bl	13ed0 <memcmp@plt>
   2fed0:	cmp	r0, #0
   2fed4:	movw	r1, #64570	; 0xfc3a
   2fed8:	movt	r1, #65535	; 0xffff
   2fedc:	movne	r1, #9
   2fee0:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2fee4:	mov	r1, r5
   2fee8:	movw	r0, #28804	; 0x7084
   2feec:	movt	r0, #5
   2fef0:	mov	r2, #7
   2fef4:	bl	13ed0 <memcmp@plt>
   2fef8:	cmp	r0, #0
   2fefc:	movw	r1, #64565	; 0xfc35
   2ff00:	movt	r1, #65535	; 0xffff
   2ff04:	movne	r1, #9
   2ff08:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ff0c:	mov	r1, r5
   2ff10:	movw	r0, #36088	; 0x8cf8
   2ff14:	movt	r0, #5
   2ff18:	mov	r2, #5
   2ff1c:	bl	13ed0 <memcmp@plt>
   2ff20:	cmp	r0, #0
   2ff24:	movw	r1, #64553	; 0xfc29
   2ff28:	movt	r1, #65535	; 0xffff
   2ff2c:	movne	r1, #9
   2ff30:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ff34:	mov	r1, r5
   2ff38:	movw	r0, #28788	; 0x7074
   2ff3c:	movt	r0, #5
   2ff40:	mov	r2, #7
   2ff44:	bl	13ed0 <memcmp@plt>
   2ff48:	cmp	r0, #0
   2ff4c:	movw	r1, #64540	; 0xfc1c
   2ff50:	movt	r1, #65535	; 0xffff
   2ff54:	movne	r1, #9
   2ff58:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ff5c:	mov	r1, r5
   2ff60:	movw	r0, #28772	; 0x7064
   2ff64:	movt	r0, #5
   2ff68:	mov	r2, #5
   2ff6c:	bl	13ed0 <memcmp@plt>
   2ff70:	cmp	r0, #0
   2ff74:	movw	r1, #64552	; 0xfc28
   2ff78:	movt	r1, #65535	; 0xffff
   2ff7c:	movne	r1, #9
   2ff80:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ff84:	mov	r1, r5
   2ff88:	movw	r0, #28812	; 0x708c
   2ff8c:	movt	r0, #5
   2ff90:	mov	r2, #9
   2ff94:	bl	13ed0 <memcmp@plt>
   2ff98:	cmp	r0, #0
   2ff9c:	movw	r1, #64566	; 0xfc36
   2ffa0:	movt	r1, #65535	; 0xffff
   2ffa4:	movne	r1, #9
   2ffa8:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ffac:	mov	r1, r5
   2ffb0:	movw	r0, #29632	; 0x73c0
   2ffb4:	movt	r0, #4
   2ffb8:	mov	r2, #5
   2ffbc:	bl	13ed0 <memcmp@plt>
   2ffc0:	cmp	r0, #0
   2ffc4:	movw	r1, #64546	; 0xfc22
   2ffc8:	movt	r1, #65535	; 0xffff
   2ffcc:	movne	r1, #9
   2ffd0:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2ffd4:	mov	r1, r5
   2ffd8:	movw	r0, #28748	; 0x704c
   2ffdc:	movt	r0, #5
   2ffe0:	mov	r2, #5
   2ffe4:	bl	13ed0 <memcmp@plt>
   2ffe8:	cmp	r0, #0
   2ffec:	movw	r1, #64550	; 0xfc26
   2fff0:	movt	r1, #65535	; 0xffff
   2fff4:	movne	r1, #9
   2fff8:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   2fffc:	mov	r1, r5
   30000:	movw	r0, #28876	; 0x70cc
   30004:	movt	r0, #5
   30008:	mov	r2, #15
   3000c:	bl	13ed0 <memcmp@plt>
   30010:	cmp	r0, #0
   30014:	movne	r1, #9
   30018:	mvneq	r1, #964	; 0x3c4
   3001c:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   30020:	ldrb	r3, [r5]
   30024:	cmp	r3, #105	; 0x69
   30028:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   3002c:	ldrb	r3, [r2]
   30030:	cmp	r3, #110	; 0x6e
   30034:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   30038:	ldrb	r3, [r2, #1]
   3003c:	cmp	r3, #116	; 0x74
   30040:	movweq	r1, #64542	; 0xfc1e
   30044:	movteq	r1, #65535	; 0xffff
   30048:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   3004c:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   30050:	ldrb	r3, [r5]
   30054:	cmp	r3, #117	; 0x75
   30058:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   3005c:	ldrb	r3, [r2]
   30060:	cmp	r3, #105	; 0x69
   30064:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   30068:	ldrb	r3, [r2, #1]
   3006c:	add	r2, r2, #1
   30070:	cmp	r3, #110	; 0x6e
   30074:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   30078:	ldrb	r3, [r2, #1]
   3007c:	cmp	r3, #116	; 0x74
   30080:	movweq	r1, #64549	; 0xfc25
   30084:	movteq	r1, #65535	; 0xffff
   30088:	bne	2ee34 <__flatcc_fb_parse@@Base+0x1c64>
   3008c:	b	2e59c <__flatcc_fb_parse@@Base+0x13cc>
   30090:	add	r3, r5, #4
   30094:	mov	r2, r5
   30098:	movw	r1, #15934	; 0x3e3e
   3009c:	movt	r1, #15678	; 0x3d3e
   300a0:	mov	r0, r4
   300a4:	mov	r5, r3
   300a8:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   300ac:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   300b0:	add	r3, r5, #4
   300b4:	mov	r2, r5
   300b8:	movw	r1, #15420	; 0x3c3c
   300bc:	movt	r1, #15676	; 0x3d3c
   300c0:	mov	r0, r4
   300c4:	mov	r5, r3
   300c8:	bl	2b28c <__flatcc_fb_default_error_out@@Base+0x50>
   300cc:	b	2e420 <__flatcc_fb_parse@@Base+0x1250>
   300d0:	bl	2b25c <__flatcc_fb_default_error_out@@Base+0x20>
   300d4:	ldrb	r3, [r2]
   300d8:	udf	#0

000300dc <__flatcc_fb_clear_parser@@Base>:
   300dc:	strd	r4, [sp, #-16]!
   300e0:	mov	r5, r0
   300e4:	ldr	r4, [r0, #392]	; 0x188
   300e8:	str	r6, [sp, #8]
   300ec:	str	lr, [sp, #12]
   300f0:	cmp	r4, #0
   300f4:	beq	30110 <__flatcc_fb_clear_parser@@Base+0x34>
   300f8:	ldrh	r3, [r4, #8]
   300fc:	cmp	r3, #4
   30100:	bls	301e8 <__flatcc_fb_clear_parser@@Base+0x10c>
   30104:	ldr	r4, [r4]
   30108:	cmp	r4, #0
   3010c:	bne	300f8 <__flatcc_fb_clear_parser@@Base+0x1c>
   30110:	add	r0, r5, #448	; 0x1c0
   30114:	bl	29f9c <fb_schema_table_clear@@Base>
   30118:	add	r0, r5, #432	; 0x1b0
   3011c:	bl	3c748 <fb_name_table_clear@@Base>
   30120:	add	r0, r5, #524	; 0x20c
   30124:	bl	27170 <ptr_set_clear@@Base>
   30128:	ldr	r0, [r5, #112]	; 0x70
   3012c:	cmp	r0, #0
   30130:	beq	30138 <__flatcc_fb_clear_parser@@Base+0x5c>
   30134:	bl	13eac <free@plt>
   30138:	ldr	r0, [r5, #20]
   3013c:	cmp	r0, #0
   30140:	beq	30148 <__flatcc_fb_clear_parser@@Base+0x6c>
   30144:	bl	13eac <free@plt>
   30148:	ldr	r0, [r5, #512]	; 0x200
   3014c:	cmp	r0, #0
   30150:	beq	30158 <__flatcc_fb_clear_parser@@Base+0x7c>
   30154:	bl	13eac <free@plt>
   30158:	ldr	r0, [r5, #516]	; 0x204
   3015c:	cmp	r0, #0
   30160:	beq	30168 <__flatcc_fb_clear_parser@@Base+0x8c>
   30164:	bl	13eac <free@plt>
   30168:	ldr	r0, [r5, #520]	; 0x208
   3016c:	cmp	r0, #0
   30170:	beq	30178 <__flatcc_fb_clear_parser@@Base+0x9c>
   30174:	bl	13eac <free@plt>
   30178:	ldr	r0, [r5, #548]	; 0x224
   3017c:	cmp	r0, #0
   30180:	beq	30188 <__flatcc_fb_clear_parser@@Base+0xac>
   30184:	bl	13eac <free@plt>
   30188:	add	r0, r5, #416	; 0x1a0
   3018c:	movw	r1, #45652	; 0xb254
   30190:	movt	r1, #2
   30194:	mov	r2, #0
   30198:	bl	28b4c <fb_scope_table_destroy@@Base>
   3019c:	ldr	r0, [r5, #48]	; 0x30
   301a0:	cmp	r0, #0
   301a4:	beq	301b8 <__flatcc_fb_clear_parser@@Base+0xdc>
   301a8:	ldr	r4, [r0]
   301ac:	bl	13eac <free@plt>
   301b0:	subs	r0, r4, #0
   301b4:	bne	301a8 <__flatcc_fb_clear_parser@@Base+0xcc>
   301b8:	ldr	r0, [r5, #16]
   301bc:	cmp	r0, #0
   301c0:	beq	301c8 <__flatcc_fb_clear_parser@@Base+0xec>
   301c4:	bl	13eac <free@plt>
   301c8:	mov	r0, r5
   301cc:	mov	r2, #560	; 0x230
   301d0:	ldrd	r4, [sp]
   301d4:	mov	r1, #0
   301d8:	ldr	r6, [sp, #8]
   301dc:	ldr	lr, [sp, #12]
   301e0:	add	sp, sp, #16
   301e4:	b	13f78 <memset@plt>
   301e8:	add	r0, r4, #56	; 0x38
   301ec:	bl	27c70 <fb_symbol_table_clear@@Base>
   301f0:	add	r0, r4, #72	; 0x48
   301f4:	bl	3d680 <fb_value_set_clear@@Base>
   301f8:	ldr	r4, [r4]
   301fc:	cmp	r4, #0
   30200:	bne	300f8 <__flatcc_fb_clear_parser@@Base+0x1c>
   30204:	b	30110 <__flatcc_fb_clear_parser@@Base+0x34>
   30208:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3020c:	strd	r6, [sp, #8]
   30210:	strd	sl, [sp, #24]
   30214:	ldrh	sl, [r1, #8]
   30218:	strd	r8, [sp, #16]
   3021c:	str	lr, [sp, #32]
   30220:	sub	sp, sp, #44	; 0x2c
   30224:	cmp	sl, #1
   30228:	bne	3074c <__flatcc_fb_clear_parser@@Base+0x670>
   3022c:	ldrh	r3, [r1, #10]
   30230:	mov	r8, r0
   30234:	mov	r4, r1
   30238:	ands	r0, r3, #1
   3023c:	bne	3072c <__flatcc_fb_clear_parser@@Base+0x650>
   30240:	tst	r3, #2
   30244:	bne	302c8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   30248:	ldr	r2, [r1, #120]	; 0x78
   3024c:	cmp	r2, #0
   30250:	bne	3076c <__flatcc_fb_clear_parser@@Base+0x690>
   30254:	ldr	r5, [r1, #20]
   30258:	orr	r3, r3, #1
   3025c:	strh	r3, [r1, #10]
   30260:	cmp	r5, #0
   30264:	beq	30590 <__flatcc_fb_clear_parser@@Base+0x4b4>
   30268:	ldr	r2, [r8, #116]	; 0x74
   3026c:	cmp	r2, #99	; 0x63
   30270:	bgt	304e4 <__flatcc_fb_clear_parser@@Base+0x408>
   30274:	movw	fp, #30220	; 0x760c
   30278:	movt	fp, #5
   3027c:	movw	r9, #30876	; 0x789c
   30280:	movt	r9, #5
   30284:	ldrh	r3, [r5, #24]
   30288:	cmp	r3, #8
   3028c:	beq	3035c <__flatcc_fb_clear_parser@@Base+0x280>
   30290:	cmp	r3, #14
   30294:	beq	302e4 <__flatcc_fb_clear_parser@@Base+0x208>
   30298:	cmp	r3, #1
   3029c:	beq	302c4 <__flatcc_fb_clear_parser@@Base+0x1e8>
   302a0:	ldr	r1, [r5, #4]
   302a4:	mov	ip, #0
   302a8:	mov	r0, r8
   302ac:	mov	r3, ip
   302b0:	movw	r2, #30828	; 0x786c
   302b4:	movt	r2, #5
   302b8:	str	ip, [sp]
   302bc:	str	ip, [sp, #4]
   302c0:	bl	2b548 <__flatcc_error_report@@Base>
   302c4:	mvn	r0, #0
   302c8:	add	sp, sp, #44	; 0x2c
   302cc:	ldrd	r4, [sp]
   302d0:	ldrd	r6, [sp, #8]
   302d4:	ldrd	r8, [sp, #16]
   302d8:	ldrd	sl, [sp, #24]
   302dc:	add	sp, sp, #32
   302e0:	pop	{pc}		; (ldr pc, [sp], #4)
   302e4:	ldr	r6, [r5, #16]
   302e8:	ldrh	r3, [r6, #8]
   302ec:	cmp	r3, #3
   302f0:	beq	3053c <__flatcc_fb_clear_parser@@Base+0x460>
   302f4:	cmp	r3, #1
   302f8:	bne	30700 <__flatcc_fb_clear_parser@@Base+0x624>
   302fc:	ldrh	r3, [r6, #10]
   30300:	tst	r3, #1
   30304:	bne	306d4 <__flatcc_fb_clear_parser@@Base+0x5f8>
   30308:	ands	ip, r3, #2
   3030c:	bne	30344 <__flatcc_fb_clear_parser@@Base+0x268>
   30310:	ldr	r3, [r8, #188]	; 0xbc
   30314:	cmp	r3, #0
   30318:	bne	3056c <__flatcc_fb_clear_parser@@Base+0x490>
   3031c:	add	r2, r2, #1
   30320:	mov	r1, r6
   30324:	mov	r0, r8
   30328:	str	r2, [r8, #116]	; 0x74
   3032c:	bl	30208 <__flatcc_fb_clear_parser@@Base+0x12c>
   30330:	ldr	r3, [r8, #116]	; 0x74
   30334:	cmp	r0, #0
   30338:	sub	r3, r3, #1
   3033c:	str	r3, [r8, #116]	; 0x74
   30340:	bne	302c8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   30344:	ldrh	ip, [r6, #104]	; 0x68
   30348:	ldrd	r2, [r6, #112]	; 0x70
   3034c:	strh	ip, [r5, #74]	; 0x4a
   30350:	strd	r2, [sp, #24]
   30354:	strd	r2, [r5, #88]	; 0x58
   30358:	b	303b0 <__flatcc_fb_clear_parser@@Base+0x2d4>
   3035c:	ldr	r3, [r5, #16]
   30360:	ldr	r2, [r3, #16]
   30364:	add	r2, r2, #996	; 0x3e4
   30368:	add	r2, r2, #3
   3036c:	cmp	r2, #27
   30370:	bhi	30554 <__flatcc_fb_clear_parser@@Base+0x478>
   30374:	add	r2, fp, r2, lsl #2
   30378:	ldr	r2, [r2, #16]
   3037c:	add	r1, fp, r2, lsl #2
   30380:	str	r2, [r5, #16]
   30384:	ldr	ip, [r1, #128]	; 0x80
   30388:	mov	r1, #0
   3038c:	mov	r0, ip
   30390:	cmp	ip, #0
   30394:	strd	r0, [sp, #24]
   30398:	beq	3055c <__flatcc_fb_clear_parser@@Base+0x480>
   3039c:	mov	r2, ip
   303a0:	mov	r3, r1
   303a4:	uxth	ip, ip
   303a8:	strh	ip, [r5, #74]	; 0x4a
   303ac:	strd	r2, [r5, #88]	; 0x58
   303b0:	uxth	r0, ip
   303b4:	mov	r1, #0
   303b8:	subs	r3, r0, #1
   303bc:	str	r3, [sp, #8]
   303c0:	sbc	r3, r1, #0
   303c4:	str	r3, [sp, #12]
   303c8:	ldrd	r2, [sp, #8]
   303cc:	cmp	r3, #0
   303d0:	cmpeq	r2, #255	; 0xff
   303d4:	bhi	30424 <__flatcc_fb_clear_parser@@Base+0x348>
   303d8:	cmp	r1, #0
   303dc:	cmpeq	r0, #1
   303e0:	beq	30440 <__flatcc_fb_clear_parser@@Base+0x364>
   303e4:	cmp	r1, #0
   303e8:	cmpeq	r0, #2
   303ec:	beq	30440 <__flatcc_fb_clear_parser@@Base+0x364>
   303f0:	cmp	r1, #0
   303f4:	cmpeq	r0, #3
   303f8:	beq	30424 <__flatcc_fb_clear_parser@@Base+0x348>
   303fc:	mov	r2, #4
   30400:	mov	r3, #0
   30404:	cmp	r1, r3
   30408:	cmpeq	r0, r2
   3040c:	beq	30440 <__flatcc_fb_clear_parser@@Base+0x364>
   30410:	adds	r2, r2, r2
   30414:	adc	r3, r3, r3
   30418:	cmp	r1, r3
   3041c:	cmpeq	r0, r2
   30420:	bcs	30404 <__flatcc_fb_clear_parser@@Base+0x328>
   30424:	movw	r1, #30624	; 0x77a0
   30428:	movt	r1, #5
   3042c:	ldr	r3, [pc, #856]	; 3078c <__flatcc_fb_clear_parser@@Base+0x6b0>
   30430:	movw	r0, #30984	; 0x7908
   30434:	movt	r0, #5
   30438:	mov	r2, #108	; 0x6c
   3043c:	bl	14014 <__assert_fail@plt>
   30440:	ldrd	r2, [r4, #112]	; 0x70
   30444:	subs	lr, r2, #1
   30448:	sbc	r6, r3, #0
   3044c:	adds	lr, lr, r0
   30450:	adc	r6, r6, r1
   30454:	rsbs	r0, r0, #0
   30458:	rsc	r1, r1, #0
   3045c:	and	lr, lr, r0
   30460:	and	r1, r6, r1
   30464:	str	lr, [sp, #16]
   30468:	str	r1, [sp, #20]
   3046c:	ldrd	r0, [sp, #16]
   30470:	cmp	r3, r1
   30474:	strd	r0, [r5, #80]	; 0x50
   30478:	cmpeq	r2, r0
   3047c:	bhi	30678 <__flatcc_fb_clear_parser@@Base+0x59c>
   30480:	mov	r2, r0
   30484:	mov	r3, r1
   30488:	ldrd	r0, [sp, #24]
   3048c:	adds	r6, r2, r0
   30490:	mov	r2, #0
   30494:	adcs	r7, r3, r1
   30498:	mov	r3, #0
   3049c:	movcs	r2, #1
   304a0:	movcs	r3, #0
   304a4:	orrs	r3, r2, r3
   304a8:	bne	30678 <__flatcc_fb_clear_parser@@Base+0x59c>
   304ac:	mov	r3, #0
   304b0:	movw	r2, #65535	; 0xffff
   304b4:	cmp	r7, r3
   304b8:	cmpeq	r6, r2
   304bc:	bhi	30510 <__flatcc_fb_clear_parser@@Base+0x434>
   304c0:	ldr	r5, [r5]
   304c4:	cmp	sl, ip
   304c8:	movcc	sl, ip
   304cc:	strd	r6, [r4, #112]	; 0x70
   304d0:	cmp	r5, #0
   304d4:	beq	30590 <__flatcc_fb_clear_parser@@Base+0x4b4>
   304d8:	ldr	r2, [r8, #116]	; 0x74
   304dc:	cmp	r2, #99	; 0x63
   304e0:	ble	30284 <__flatcc_fb_clear_parser@@Base+0x1a8>
   304e4:	mov	ip, #0
   304e8:	mov	r0, r8
   304ec:	mov	r3, ip
   304f0:	mov	r1, ip
   304f4:	movw	r2, #30752	; 0x7820
   304f8:	movt	r2, #5
   304fc:	str	ip, [sp]
   30500:	str	ip, [sp, #4]
   30504:	bl	2b548 <__flatcc_error_report@@Base>
   30508:	mvn	r0, #0
   3050c:	b	302c8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   30510:	mov	ip, #0
   30514:	movw	r2, #31032	; 0x7938
   30518:	movt	r2, #5
   3051c:	mov	r3, ip
   30520:	ldr	r1, [r5, #4]
   30524:	mov	r0, r8
   30528:	str	ip, [sp]
   3052c:	str	ip, [sp, #4]
   30530:	bl	2b548 <__flatcc_error_report@@Base>
   30534:	ldrh	ip, [r5, #74]	; 0x4a
   30538:	b	304c0 <__flatcc_fb_clear_parser@@Base+0x3e4>
   3053c:	ldrd	r2, [r6, #112]	; 0x70
   30540:	uxth	ip, r2
   30544:	strd	r2, [sp, #24]
   30548:	strh	ip, [r5, #74]	; 0x4a
   3054c:	strd	r2, [r5, #88]	; 0x58
   30550:	b	303b0 <__flatcc_fb_clear_parser@@Base+0x2d4>
   30554:	mov	r2, #0
   30558:	str	r2, [r5, #16]
   3055c:	mov	ip, #0
   30560:	mov	r0, r8
   30564:	ldr	r1, [r5, #4]
   30568:	b	302b0 <__flatcc_fb_clear_parser@@Base+0x1d4>
   3056c:	mov	r2, r9
   30570:	mov	r0, r8
   30574:	ldr	r1, [r5, #4]
   30578:	ldr	r3, [r6, #4]
   3057c:	str	ip, [sp]
   30580:	str	ip, [sp, #4]
   30584:	bl	2b548 <__flatcc_error_report@@Base>
   30588:	ldr	r2, [r8, #116]	; 0x74
   3058c:	b	3031c <__flatcc_fb_clear_parser@@Base+0x240>
   30590:	ldrh	r2, [r4, #104]	; 0x68
   30594:	cmp	r2, #0
   30598:	moveq	r2, sl
   3059c:	strheq	sl, [r4, #104]	; 0x68
   305a0:	beq	305ac <__flatcc_fb_clear_parser@@Base+0x4d0>
   305a4:	cmp	r2, sl
   305a8:	bcc	306a4 <__flatcc_fb_clear_parser@@Base+0x5c8>
   305ac:	uxth	r2, r2
   305b0:	mov	r3, #0
   305b4:	subs	r1, r2, #1
   305b8:	str	r1, [sp, #32]
   305bc:	sbc	r1, r3, #0
   305c0:	str	r1, [sp, #36]	; 0x24
   305c4:	ldrd	r0, [sp, #32]
   305c8:	cmp	r1, #0
   305cc:	cmpeq	r0, #255	; 0xff
   305d0:	bhi	30424 <__flatcc_fb_clear_parser@@Base+0x348>
   305d4:	cmp	r3, #0
   305d8:	cmpeq	r2, #1
   305dc:	beq	30624 <__flatcc_fb_clear_parser@@Base+0x548>
   305e0:	cmp	r3, #0
   305e4:	cmpeq	r2, #2
   305e8:	beq	30624 <__flatcc_fb_clear_parser@@Base+0x548>
   305ec:	cmp	r3, #0
   305f0:	cmpeq	r2, #3
   305f4:	movne	r0, #4
   305f8:	movne	r1, #0
   305fc:	beq	30424 <__flatcc_fb_clear_parser@@Base+0x348>
   30600:	cmp	r3, r1
   30604:	cmpeq	r2, r0
   30608:	beq	30624 <__flatcc_fb_clear_parser@@Base+0x548>
   3060c:	adds	r0, r0, r0
   30610:	adc	r1, r1, r1
   30614:	cmp	r3, r1
   30618:	cmpeq	r2, r0
   3061c:	bcs	30600 <__flatcc_fb_clear_parser@@Base+0x524>
   30620:	b	30424 <__flatcc_fb_clear_parser@@Base+0x348>
   30624:	ldr	r1, [r4, #112]	; 0x70
   30628:	mov	r0, #0
   3062c:	ldr	ip, [r4, #116]	; 0x74
   30630:	ldrh	r5, [r4, #10]
   30634:	subs	r1, r1, #1
   30638:	ldr	lr, [r8, #396]	; 0x18c
   3063c:	sbc	ip, ip, #0
   30640:	adds	r1, r1, r2
   30644:	adc	ip, ip, r3
   30648:	rsbs	r2, r2, #0
   3064c:	rsc	r3, r3, #0
   30650:	bic	r5, r5, #1
   30654:	and	ip, ip, r3
   30658:	and	r3, r1, r2
   3065c:	orr	r2, r5, #2
   30660:	strh	r2, [r4, #10]
   30664:	str	r3, [r4, #112]	; 0x70
   30668:	str	ip, [r4, #116]	; 0x74
   3066c:	str	lr, [r4, #120]	; 0x78
   30670:	str	r4, [r8, #396]	; 0x18c
   30674:	b	302c8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   30678:	mov	ip, #0
   3067c:	mov	r0, r8
   30680:	ldr	r1, [r5, #4]
   30684:	mov	r3, ip
   30688:	movw	r2, #31008	; 0x7920
   3068c:	movt	r2, #5
   30690:	str	ip, [sp]
   30694:	str	ip, [sp, #4]
   30698:	bl	2b548 <__flatcc_error_report@@Base>
   3069c:	mvn	r0, #0
   306a0:	b	302c8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   306a4:	mov	ip, #0
   306a8:	movw	r2, #31084	; 0x796c
   306ac:	movt	r2, #5
   306b0:	mov	r3, ip
   306b4:	ldr	r1, [r4, #4]
   306b8:	mov	r0, r8
   306bc:	str	ip, [sp]
   306c0:	str	ip, [sp, #4]
   306c4:	bl	2b548 <__flatcc_error_report@@Base>
   306c8:	mov	r2, sl
   306cc:	strh	sl, [r4, #104]	; 0x68
   306d0:	b	305ac <__flatcc_fb_clear_parser@@Base+0x4d0>
   306d4:	mov	ip, #0
   306d8:	mov	r0, r8
   306dc:	ldr	r1, [r5, #4]
   306e0:	movw	r2, #30844	; 0x787c
   306e4:	movt	r2, #5
   306e8:	ldr	r3, [r6, #4]
   306ec:	str	ip, [sp]
   306f0:	str	ip, [sp, #4]
   306f4:	bl	2b548 <__flatcc_error_report@@Base>
   306f8:	mvn	r0, #0
   306fc:	b	302c8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   30700:	mov	ip, #0
   30704:	mov	r0, r8
   30708:	ldr	r1, [r5, #4]
   3070c:	mov	r3, ip
   30710:	movw	r2, #30948	; 0x78e4
   30714:	movt	r2, #5
   30718:	str	ip, [sp]
   3071c:	str	ip, [sp, #4]
   30720:	bl	2b548 <__flatcc_error_report@@Base>
   30724:	mvn	r0, #0
   30728:	b	302c8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   3072c:	movw	r3, #30220	; 0x760c
   30730:	movt	r3, #5
   30734:	movw	r1, #30624	; 0x77a0
   30738:	movt	r1, #5
   3073c:	movw	r0, #30700	; 0x77ec
   30740:	movt	r0, #5
   30744:	mov	r2, #504	; 0x1f8
   30748:	bl	14014 <__assert_fail@plt>
   3074c:	movw	r3, #30220	; 0x760c
   30750:	movt	r3, #5
   30754:	movw	r1, #30624	; 0x77a0
   30758:	movt	r1, #5
   3075c:	movw	r0, #65440	; 0xffa0
   30760:	movt	r0, #3
   30764:	movw	r2, #502	; 0x1f6
   30768:	bl	14014 <__assert_fail@plt>
   3076c:	movw	r3, #30220	; 0x760c
   30770:	movt	r3, #5
   30774:	movw	r1, #30624	; 0x77a0
   30778:	movt	r1, #5
   3077c:	movw	r0, #30740	; 0x7814
   30780:	movt	r0, #5
   30784:	mov	r2, #508	; 0x1fc
   30788:	bl	14014 <__assert_fail@plt>
   3078c:			; <UNDEFINED> instruction: 0x000576bc
   30790:	ldrh	r3, [r1, #8]
   30794:	strd	r4, [sp, #-36]!	; 0xffffffdc
   30798:	strd	r6, [sp, #8]
   3079c:	mov	r6, r0
   307a0:	strd	r8, [sp, #16]
   307a4:	strd	sl, [sp, #24]
   307a8:	mov	fp, r1
   307ac:	str	lr, [sp, #32]
   307b0:	sub	sp, sp, #132	; 0x84
   307b4:	cmp	r3, #4
   307b8:	str	r3, [sp, #16]
   307bc:	beq	31094 <__flatcc_fb_clear_parser@@Base+0xfb8>
   307c0:	cmp	r3, #3
   307c4:	bne	31498 <__flatcc_fb_clear_parser@@Base+0x13bc>
   307c8:	ldrh	r2, [r1, #48]	; 0x30
   307cc:	cmp	r2, #0
   307d0:	beq	31450 <__flatcc_fb_clear_parser@@Base+0x1374>
   307d4:	cmp	r2, #8
   307d8:	bne	3141c <__flatcc_fb_clear_parser@@Base+0x1340>
   307dc:	ldr	r3, [r1, #40]	; 0x28
   307e0:	ldr	r3, [r3, #16]
   307e4:	add	r3, r3, #996	; 0x3e4
   307e8:	add	r3, r3, #3
   307ec:	cmp	r3, #27
   307f0:	bhi	30940 <__flatcc_fb_clear_parser@@Base+0x864>
   307f4:	movw	r1, #30220	; 0x760c
   307f8:	movt	r1, #5
   307fc:	add	r3, r1, r3, lsl #2
   30800:	mov	r0, #0
   30804:	ldr	r2, [r3, #16]
   30808:	add	r1, r1, r2, lsl #2
   3080c:	ldr	r1, [r1, #128]	; 0x80
   30810:	uxth	r3, r1
   30814:	str	r2, [fp, #40]	; 0x28
   30818:	strh	r3, [fp, #104]	; 0x68
   3081c:	str	r1, [fp, #112]	; 0x70
   30820:	str	r0, [fp, #116]	; 0x74
   30824:	ldr	r4, [fp, #28]
   30828:	mov	r0, #0
   3082c:	mov	r1, #0
   30830:	add	r8, sp, #80	; 0x50
   30834:	strd	r0, [sp, #80]	; 0x50
   30838:	strd	r0, [r8, #8]
   3083c:	strd	r0, [r8, #16]
   30840:	cmp	r4, #0
   30844:	strd	r0, [r8, #24]
   30848:	strd	r0, [r8, #32]
   3084c:	strheq	r4, [fp, #92]	; 0x5c
   30850:	streq	r4, [sp, #20]
   30854:	strd	r0, [r8, #40]	; 0x28
   30858:	beq	30a20 <__flatcc_fb_clear_parser@@Base+0x944>
   3085c:	movw	r3, #31556	; 0x7b44
   30860:	movt	r3, #5
   30864:	movw	r9, #30220	; 0x760c
   30868:	movt	r9, #5
   3086c:	movw	sl, #31592	; 0x7b68
   30870:	movt	sl, #5
   30874:	str	r3, [sp, #12]
   30878:	mov	r7, #100	; 0x64
   3087c:	mov	r5, #0
   30880:	b	308c4 <__flatcc_fb_clear_parser@@Base+0x7e8>
   30884:	add	r1, r9, r1
   30888:	str	r4, [r8, r2, lsl #2]
   3088c:	ldr	lr, [r1, #204]	; 0xcc
   30890:	cmp	lr, #0
   30894:	bne	30954 <__flatcc_fb_clear_parser@@Base+0x878>
   30898:	ldrh	r3, [r4, #16]
   3089c:	cmp	r3, #0
   308a0:	bne	310cc <__flatcc_fb_clear_parser@@Base+0xff0>
   308a4:	ldr	r4, [r4]
   308a8:	subs	r7, r7, #1
   308ac:	movne	ip, #1
   308b0:	moveq	ip, #0
   308b4:	cmp	r4, #0
   308b8:	moveq	ip, #0
   308bc:	cmp	ip, #0
   308c0:	beq	309cc <__flatcc_fb_clear_parser@@Base+0x8f0>
   308c4:	ldr	r3, [r4, #4]
   308c8:	ldr	r0, [r6, #412]	; 0x19c
   308cc:	ldm	r3, {r1, r2}
   308d0:	add	r0, r0, #16
   308d4:	bl	3cd40 <fb_name_table_find@@Base>
   308d8:	subs	ip, r0, #0
   308dc:	beq	30df8 <__flatcc_fb_clear_parser@@Base+0xd1c>
   308e0:	ldr	r2, [ip, #24]
   308e4:	cmp	r2, #0
   308e8:	beq	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   308ec:	mov	r3, #32
   308f0:	asr	r3, r3, r2
   308f4:	ands	ip, r3, #1
   308f8:	beq	30dd4 <__flatcc_fb_clear_parser@@Base+0xcf8>
   308fc:	ldr	ip, [r8, r2, lsl #2]
   30900:	mov	r3, #1
   30904:	lsl	r1, r2, #2
   30908:	orr	r5, r5, r3, lsl r2
   3090c:	uxth	r5, r5
   30910:	cmp	ip, #0
   30914:	beq	30884 <__flatcc_fb_clear_parser@@Base+0x7a8>
   30918:	mov	ip, #0
   3091c:	movw	r2, #31396	; 0x7aa4
   30920:	movt	r2, #5
   30924:	mov	r3, ip
   30928:	ldr	r1, [r4, #4]
   3092c:	mov	r0, r6
   30930:	str	ip, [sp]
   30934:	str	ip, [sp, #4]
   30938:	bl	2b548 <__flatcc_error_report@@Base>
   3093c:	b	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   30940:	mov	r3, #0
   30944:	mov	r1, r3
   30948:	mov	r0, r3
   3094c:	mov	r2, r3
   30950:	b	30814 <__flatcc_fb_clear_parser@@Base+0x738>
   30954:	cmp	lr, #2
   30958:	bne	3098c <__flatcc_fb_clear_parser@@Base+0x8b0>
   3095c:	ldrh	r3, [r4, #16]
   30960:	cmp	r3, #2
   30964:	beq	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   30968:	mov	r3, ip
   3096c:	movw	r2, #31476	; 0x7af4
   30970:	movt	r2, #5
   30974:	mov	r0, r6
   30978:	ldr	r1, [r4, #4]
   3097c:	str	ip, [sp]
   30980:	str	ip, [sp, #4]
   30984:	bl	2b548 <__flatcc_error_report@@Base>
   30988:	b	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   3098c:	cmp	lr, #5
   30990:	beq	30e9c <__flatcc_fb_clear_parser@@Base+0xdc0>
   30994:	cmp	lr, #4
   30998:	bne	30ecc <__flatcc_fb_clear_parser@@Base+0xdf0>
   3099c:	ldrh	r3, [r4, #16]
   309a0:	sub	r3, r3, #4
   309a4:	cmp	r3, #1
   309a8:	bls	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   309ac:	mov	r3, ip
   309b0:	mov	r0, r6
   309b4:	ldr	r1, [r4, #4]
   309b8:	str	ip, [sp]
   309bc:	str	ip, [sp, #4]
   309c0:	ldr	r2, [sp, #12]
   309c4:	bl	2b548 <__flatcc_error_report@@Base>
   309c8:	b	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   309cc:	cmp	r4, #0
   309d0:	and	r7, r5, #32
   309d4:	beq	309f8 <__flatcc_fb_clear_parser@@Base+0x91c>
   309d8:	movw	r2, #31636	; 0x7b94
   309dc:	movt	r2, #5
   309e0:	ldr	r1, [r4, #4]
   309e4:	mov	r3, ip
   309e8:	mov	r0, r6
   309ec:	str	ip, [sp]
   309f0:	str	ip, [sp, #4]
   309f4:	bl	2b548 <__flatcc_error_report@@Base>
   309f8:	cmp	r7, #0
   309fc:	strh	r5, [fp, #92]	; 0x5c
   30a00:	ldr	r2, [fp, #40]	; 0x28
   30a04:	streq	r7, [sp, #20]
   30a08:	beq	30a20 <__flatcc_fb_clear_parser@@Base+0x944>
   30a0c:	mov	r0, #0
   30a10:	mov	r1, #0
   30a14:	mov	r3, #1
   30a18:	str	r3, [sp, #20]
   30a1c:	strd	r0, [sp, #48]	; 0x30
   30a20:	cmp	r2, #5
   30a24:	bne	30f30 <__flatcc_fb_clear_parser@@Base+0xe54>
   30a28:	mov	r2, #0
   30a2c:	mov	r3, #6
   30a30:	add	r7, sp, #48	; 0x30
   30a34:	strb	r2, [sp, #48]	; 0x30
   30a38:	strh	r3, [sp, #56]	; 0x38
   30a3c:	ldr	r5, [fp, #20]
   30a40:	ldrd	r0, [r7, #8]
   30a44:	ldrd	r2, [sp, #48]	; 0x30
   30a48:	cmp	r5, #0
   30a4c:	strd	r2, [sp, #64]	; 0x40
   30a50:	strd	r0, [sp, #72]	; 0x48
   30a54:	beq	30c9c <__flatcc_fb_clear_parser@@Base+0xbc0>
   30a58:	movw	r3, #32508	; 0x7efc
   30a5c:	movt	r3, #5
   30a60:	str	fp, [sp, #12]
   30a64:	add	r8, fp, #56	; 0x38
   30a68:	mov	r4, #1
   30a6c:	str	r3, [sp, #28]
   30a70:	movw	r3, #30220	; 0x760c
   30a74:	movt	r3, #5
   30a78:	str	r3, [sp, #24]
   30a7c:	movw	r3, #32100	; 0x7d64
   30a80:	movt	r3, #5
   30a84:	str	r3, [sp, #44]	; 0x2c
   30a88:	add	r3, r6, #352	; 0x160
   30a8c:	str	r3, [sp, #32]
   30a90:	b	30ae4 <__flatcc_fb_clear_parser@@Base+0xa08>
   30a94:	ldr	r3, [r0, #4]
   30a98:	add	r2, r6, #68	; 0x44
   30a9c:	mov	ip, #0
   30aa0:	mov	r0, r6
   30aa4:	ldr	r1, [r5, #4]
   30aa8:	str	ip, [sp]
   30aac:	str	ip, [sp, #4]
   30ab0:	cmp	r3, r2
   30ab4:	movweq	r2, #31720	; 0x7be8
   30ab8:	movwne	r2, #31752	; 0x7c08
   30abc:	moveq	r3, ip
   30ac0:	movteq	r2, #5
   30ac4:	movtne	r2, #5
   30ac8:	bl	2b548 <__flatcc_error_report@@Base>
   30acc:	mov	r3, #1
   30ad0:	strh	r3, [r5, #24]
   30ad4:	ldr	r5, [r5]
   30ad8:	mov	r4, #0
   30adc:	cmp	r5, r4
   30ae0:	beq	30c9c <__flatcc_fb_clear_parser@@Base+0xbc0>
   30ae4:	mov	r2, #1
   30ae8:	mov	r1, r5
   30aec:	mov	r0, r8
   30af0:	bl	28034 <fb_symbol_table_insert_item@@Base>
   30af4:	cmp	r0, #0
   30af8:	bne	30a94 <__flatcc_fb_clear_parser@@Base+0x9b8>
   30afc:	ldrh	r3, [r5, #8]
   30b00:	cmp	r3, #5
   30b04:	bne	31274 <__flatcc_fb_clear_parser@@Base+0x1198>
   30b08:	ldr	r0, [r5, #64]	; 0x40
   30b0c:	cmp	r0, #0
   30b10:	bne	3147c <__flatcc_fb_clear_parser@@Base+0x13a0>
   30b14:	ldr	r3, [sp, #16]
   30b18:	cmp	r3, #4
   30b1c:	beq	30cdc <__flatcc_fb_clear_parser@@Base+0xc00>
   30b20:	ldrh	r3, [r5, #56]	; 0x38
   30b24:	eor	r9, r4, #1
   30b28:	cmp	r3, #0
   30b2c:	moveq	r2, r9
   30b30:	movne	r2, #0
   30b34:	cmp	r2, #0
   30b38:	bne	30d40 <__flatcc_fb_clear_parser@@Base+0xc64>
   30b3c:	ldr	r2, [sp, #20]
   30b40:	cmp	r2, #0
   30b44:	beq	30cbc <__flatcc_fb_clear_parser@@Base+0xbe0>
   30b48:	cmp	r3, #0
   30b4c:	beq	30d90 <__flatcc_fb_clear_parser@@Base+0xcb4>
   30b50:	cmp	r3, #5
   30b54:	bne	313dc <__flatcc_fb_clear_parser@@Base+0x1300>
   30b58:	ldr	r1, [sp, #12]
   30b5c:	ldrd	r2, [r5, #48]	; 0x30
   30b60:	ldr	lr, [r1, #40]	; 0x28
   30b64:	ldrd	r0, [r5, #56]	; 0x38
   30b68:	strd	r2, [r7]
   30b6c:	strd	r0, [r7, #8]
   30b70:	ldr	r3, [sp, #24]
   30b74:	ldrd	sl, [sp, #48]	; 0x30
   30b78:	add	r3, r3, lr, lsl #2
   30b7c:	ldr	r2, [r3, #128]	; 0x80
   30b80:	mov	r3, #0
   30b84:	cmp	fp, r3
   30b88:	lsl	r2, r2, #3
   30b8c:	cmpeq	sl, r2
   30b90:	bcs	31384 <__flatcc_fb_clear_parser@@Base+0x12a8>
   30b94:	mov	r3, #1
   30b98:	sub	ip, sl, #32
   30b9c:	lsl	ip, r3, ip
   30ba0:	rsb	r1, sl, #32
   30ba4:	mov	r2, lr
   30ba8:	lsl	lr, r3, sl
   30bac:	mov	r0, #5
   30bb0:	add	r4, r5, #48	; 0x30
   30bb4:	orr	ip, ip, r3, lsr r1
   30bb8:	mov	r3, r4
   30bbc:	mov	r1, r5
   30bc0:	mov	sl, #0
   30bc4:	str	lr, [r5, #48]	; 0x30
   30bc8:	str	ip, [r5, #52]	; 0x34
   30bcc:	strh	r0, [r5, #56]	; 0x38
   30bd0:	mov	r0, r6
   30bd4:	bl	34fd4 <__flatcc_fb_coerce_scalar_type@@Base>
   30bd8:	cmp	r0, sl
   30bdc:	bne	3135c <__flatcc_fb_clear_parser@@Base+0x1280>
   30be0:	cmp	r9, #0
   30be4:	beq	30c1c <__flatcc_fb_clear_parser@@Base+0xb40>
   30be8:	ldr	r3, [r6, #180]	; 0xb4
   30bec:	cmp	r3, #0
   30bf0:	beq	30c1c <__flatcc_fb_clear_parser@@Base+0xb40>
   30bf4:	ldrh	r3, [sp, #56]	; 0x38
   30bf8:	cmp	r3, #5
   30bfc:	beq	30e1c <__flatcc_fb_clear_parser@@Base+0xd40>
   30c00:	cmp	r3, #4
   30c04:	bne	30e68 <__flatcc_fb_clear_parser@@Base+0xd8c>
   30c08:	ldrd	r2, [sp, #48]	; 0x30
   30c0c:	ldrd	r0, [sp, #64]	; 0x40
   30c10:	cmp	r0, r2
   30c14:	sbcs	r3, r1, r3
   30c18:	bge	30e30 <__flatcc_fb_clear_parser@@Base+0xd54>
   30c1c:	ldrd	sl, [r7]
   30c20:	mov	r1, r4
   30c24:	mov	r2, #1
   30c28:	ldr	r3, [sp, #12]
   30c2c:	strd	sl, [sp, #64]	; 0x40
   30c30:	ldrd	sl, [r7, #8]
   30c34:	add	r0, r3, #72	; 0x48
   30c38:	strd	sl, [sp, #72]	; 0x48
   30c3c:	bl	3d7f8 <fb_value_set_insert_item@@Base>
   30c40:	cmp	r0, #0
   30c44:	beq	30c60 <__flatcc_fb_clear_parser@@Base+0xb84>
   30c48:	ldr	r3, [sp, #16]
   30c4c:	cmp	r3, #4
   30c50:	beq	31328 <__flatcc_fb_clear_parser@@Base+0x124c>
   30c54:	ldrh	r3, [r5, #10]
   30c58:	orr	r3, r3, #4
   30c5c:	strh	r3, [r5, #10]
   30c60:	ldr	r3, [r5, #64]	; 0x40
   30c64:	cmp	r3, #0
   30c68:	beq	30ad4 <__flatcc_fb_clear_parser@@Base+0x9f8>
   30c6c:	mov	ip, #0
   30c70:	mov	r0, r6
   30c74:	ldr	r1, [r5, #4]
   30c78:	mov	r3, ip
   30c7c:	mov	r4, #0
   30c80:	str	ip, [sp]
   30c84:	str	ip, [sp, #4]
   30c88:	ldr	r2, [sp, #28]
   30c8c:	bl	2b548 <__flatcc_error_report@@Base>
   30c90:	ldr	r5, [r5]
   30c94:	cmp	r5, r4
   30c98:	bne	30ae4 <__flatcc_fb_clear_parser@@Base+0xa08>
   30c9c:	mov	r0, #0
   30ca0:	add	sp, sp, #132	; 0x84
   30ca4:	ldrd	r4, [sp]
   30ca8:	ldrd	r6, [sp, #8]
   30cac:	ldrd	r8, [sp, #16]
   30cb0:	ldrd	sl, [sp, #24]
   30cb4:	add	sp, sp, #32
   30cb8:	pop	{pc}		; (ldr pc, [sp], #4)
   30cbc:	cmp	r3, #0
   30cc0:	add	r4, r5, #48	; 0x30
   30cc4:	bne	30d9c <__flatcc_fb_clear_parser@@Base+0xcc0>
   30cc8:	ldrd	r2, [r7]
   30ccc:	ldrd	r0, [r7, #8]
   30cd0:	strd	r2, [r4]
   30cd4:	strd	r0, [r4, #8]
   30cd8:	b	30be0 <__flatcc_fb_clear_parser@@Base+0xb04>
   30cdc:	ldr	r1, [r5, #4]
   30ce0:	add	r3, r6, #68	; 0x44
   30ce4:	cmp	r1, r3
   30ce8:	strheq	r0, [r5, #24]
   30cec:	beq	30b20 <__flatcc_fb_clear_parser@@Base+0xa44>
   30cf0:	ldrh	r3, [r5, #24]
   30cf4:	cmp	r3, #10
   30cf8:	moveq	r2, #0
   30cfc:	moveq	r3, #0
   30d00:	strdeq	r2, [r5, #88]	; 0x58
   30d04:	beq	30b20 <__flatcc_fb_clear_parser@@Base+0xa44>
   30d08:	cmp	r3, #12
   30d0c:	beq	30f8c <__flatcc_fb_clear_parser@@Base+0xeb0>
   30d10:	cmp	r3, #1
   30d14:	beq	30ad4 <__flatcc_fb_clear_parser@@Base+0x9f8>
   30d18:	mov	r3, r0
   30d1c:	movw	r2, #31848	; 0x7c68
   30d20:	movt	r2, #5
   30d24:	str	r0, [sp]
   30d28:	str	r0, [sp, #4]
   30d2c:	mov	r0, r6
   30d30:	bl	2b548 <__flatcc_error_report@@Base>
   30d34:	mov	r3, #1
   30d38:	strh	r3, [r5, #24]
   30d3c:	b	30ad4 <__flatcc_fb_clear_parser@@Base+0x9f8>
   30d40:	ldrh	r3, [sp, #56]	; 0x38
   30d44:	cmp	r3, #5
   30d48:	beq	30f04 <__flatcc_fb_clear_parser@@Base+0xe28>
   30d4c:	cmp	r3, #4
   30d50:	beq	31064 <__flatcc_fb_clear_parser@@Base+0xf88>
   30d54:	cmp	r3, #6
   30d58:	beq	30d70 <__flatcc_fb_clear_parser@@Base+0xc94>
   30d5c:	ldr	r3, [sp, #20]
   30d60:	cmp	r3, #0
   30d64:	bne	30d90 <__flatcc_fb_clear_parser@@Base+0xcb4>
   30d68:	add	r4, r5, #48	; 0x30
   30d6c:	b	30cc8 <__flatcc_fb_clear_parser@@Base+0xbec>
   30d70:	ldrb	r4, [sp, #48]	; 0x30
   30d74:	cmp	r4, #1
   30d78:	beq	313b0 <__flatcc_fb_clear_parser@@Base+0x12d4>
   30d7c:	ldr	r2, [sp, #20]
   30d80:	mov	r3, #1
   30d84:	strb	r3, [sp, #48]	; 0x30
   30d88:	cmp	r2, #0
   30d8c:	beq	30d68 <__flatcc_fb_clear_parser@@Base+0xc8c>
   30d90:	ldr	r3, [sp, #12]
   30d94:	ldr	lr, [r3, #40]	; 0x28
   30d98:	b	30b70 <__flatcc_fb_clear_parser@@Base+0xa94>
   30d9c:	ldrd	sl, [r5, #48]	; 0x30
   30da0:	mov	r3, r7
   30da4:	mov	r1, r5
   30da8:	mov	r0, r6
   30dac:	ldr	r2, [sp, #12]
   30db0:	strd	sl, [r7]
   30db4:	ldrd	sl, [r4, #8]
   30db8:	ldr	r2, [r2, #40]	; 0x28
   30dbc:	strd	sl, [r7, #8]
   30dc0:	bl	34fd4 <__flatcc_fb_coerce_scalar_type@@Base>
   30dc4:	cmp	r0, #0
   30dc8:	beq	30cc8 <__flatcc_fb_clear_parser@@Base+0xbec>
   30dcc:	mvn	r0, #0
   30dd0:	b	30ca0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   30dd4:	mov	r3, ip
   30dd8:	movw	r2, #31348	; 0x7a74
   30ddc:	movt	r2, #5
   30de0:	mov	r0, r6
   30de4:	ldr	r1, [r4, #4]
   30de8:	str	ip, [sp]
   30dec:	str	ip, [sp, #4]
   30df0:	bl	2b548 <__flatcc_error_report@@Base>
   30df4:	b	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   30df8:	mov	r3, ip
   30dfc:	movw	r2, #31316	; 0x7a54
   30e00:	movt	r2, #5
   30e04:	mov	r0, r6
   30e08:	ldr	r1, [r4, #4]
   30e0c:	str	ip, [sp]
   30e10:	str	ip, [sp, #4]
   30e14:	bl	2b548 <__flatcc_error_report@@Base>
   30e18:	b	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   30e1c:	ldrd	r0, [sp, #48]	; 0x30
   30e20:	ldrd	r2, [sp, #64]	; 0x40
   30e24:	cmp	r1, r3
   30e28:	cmpeq	r0, r2
   30e2c:	bhi	30c1c <__flatcc_fb_clear_parser@@Base+0xb40>
   30e30:	ldr	r3, [sp, #16]
   30e34:	mov	ip, #0
   30e38:	mov	r0, r6
   30e3c:	ldr	r1, [r5, #4]
   30e40:	cmp	r3, #4
   30e44:	bne	30e54 <__flatcc_fb_clear_parser@@Base+0xd78>
   30e48:	ldrd	r2, [sp, #64]	; 0x40
   30e4c:	orrs	r3, r2, r3
   30e50:	beq	31408 <__flatcc_fb_clear_parser@@Base+0x132c>
   30e54:	movw	r2, #32328	; 0x7e48
   30e58:	movt	r2, #5
   30e5c:	str	ip, [sp]
   30e60:	mov	r3, ip
   30e64:	b	31344 <__flatcc_fb_clear_parser@@Base+0x1268>
   30e68:	cmp	r3, #6
   30e6c:	bne	30c1c <__flatcc_fb_clear_parser@@Base+0xb40>
   30e70:	ldrb	r2, [sp, #48]	; 0x30
   30e74:	ldrb	r3, [sp, #64]	; 0x40
   30e78:	cmp	r2, r3
   30e7c:	bhi	30c1c <__flatcc_fb_clear_parser@@Base+0xb40>
   30e80:	mov	ip, #0
   30e84:	movw	r2, #32368	; 0x7e70
   30e88:	movt	r2, #5
   30e8c:	mov	r0, r6
   30e90:	ldr	r1, [r5, #4]
   30e94:	mov	r3, ip
   30e98:	b	31340 <__flatcc_fb_clear_parser@@Base+0x1264>
   30e9c:	ldrh	r3, [r4, #16]
   30ea0:	cmp	r3, #5
   30ea4:	beq	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   30ea8:	mov	r3, ip
   30eac:	movw	r2, #31512	; 0x7b18
   30eb0:	movt	r2, #5
   30eb4:	mov	r0, r6
   30eb8:	ldr	r1, [r4, #4]
   30ebc:	str	ip, [sp]
   30ec0:	str	ip, [sp, #4]
   30ec4:	bl	2b548 <__flatcc_error_report@@Base>
   30ec8:	b	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   30ecc:	cmp	lr, #6
   30ed0:	bne	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   30ed4:	ldrh	r3, [r4, #16]
   30ed8:	cmp	r3, #6
   30edc:	beq	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   30ee0:	mov	ip, #0
   30ee4:	mov	r2, sl
   30ee8:	ldr	r1, [r4, #4]
   30eec:	mov	r3, ip
   30ef0:	mov	r0, r6
   30ef4:	str	ip, [sp]
   30ef8:	str	ip, [sp, #4]
   30efc:	bl	2b548 <__flatcc_error_report@@Base>
   30f00:	b	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   30f04:	ldr	r3, [sp, #12]
   30f08:	ldr	lr, [r3, #40]	; 0x28
   30f0c:	cmp	lr, #6
   30f10:	beq	31228 <__flatcc_fb_clear_parser@@Base+0x114c>
   30f14:	ldrd	sl, [sp, #48]	; 0x30
   30f18:	mov	r3, #0
   30f1c:	adds	r0, sl, #1
   30f20:	adc	r2, fp, #0
   30f24:	str	r0, [sp, #48]	; 0x30
   30f28:	str	r2, [sp, #52]	; 0x34
   30f2c:	b	30b3c <__flatcc_fb_clear_parser@@Base+0xa60>
   30f30:	mov	r0, #0
   30f34:	mov	r1, #0
   30f38:	mov	ip, #4
   30f3c:	add	r7, sp, #48	; 0x30
   30f40:	mov	r3, r7
   30f44:	strd	r0, [sp, #48]	; 0x30
   30f48:	mov	r1, fp
   30f4c:	mov	r0, r6
   30f50:	strh	ip, [sp, #56]	; 0x38
   30f54:	bl	34fd4 <__flatcc_fb_coerce_scalar_type@@Base>
   30f58:	cmp	r0, #0
   30f5c:	beq	30a3c <__flatcc_fb_clear_parser@@Base+0x960>
   30f60:	mov	ip, #0
   30f64:	mov	r0, r6
   30f68:	mov	r3, ip
   30f6c:	mov	r1, ip
   30f70:	movw	r2, #31656	; 0x7ba8
   30f74:	movt	r2, #5
   30f78:	str	ip, [sp]
   30f7c:	str	ip, [sp, #4]
   30f80:	bl	2b548 <__flatcc_error_report@@Base>
   30f84:	mvn	r0, #0
   30f88:	b	30ca0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   30f8c:	ldr	lr, [r5, #16]
   30f90:	ldr	fp, [sp, #12]
   30f94:	cmp	lr, #0
   30f98:	ldr	r9, [fp, #12]
   30f9c:	beq	31168 <__flatcc_fb_clear_parser@@Base+0x108c>
   30fa0:	mov	r2, r0
   30fa4:	mov	r1, lr
   30fa8:	b	30fb4 <__flatcc_fb_clear_parser@@Base+0xed8>
   30fac:	mov	r2, ip
   30fb0:	mov	r1, r3
   30fb4:	ldr	r3, [r1]
   30fb8:	add	ip, r2, #1
   30fbc:	cmp	r3, #0
   30fc0:	bne	30fac <__flatcc_fb_clear_parser@@Base+0xed0>
   30fc4:	sub	r3, ip, #1
   30fc8:	cmp	r9, #0
   30fcc:	str	fp, [sp, #12]
   30fd0:	clz	r3, r3
   30fd4:	mov	sl, r1
   30fd8:	lsr	r3, r3, #5
   30fdc:	moveq	r3, #0
   30fe0:	cmp	r3, #0
   30fe4:	beq	310f0 <__flatcc_fb_clear_parser@@Base+0x1014>
   30fe8:	add	r3, r6, #524	; 0x20c
   30fec:	str	r3, [sp, #36]	; 0x24
   30ff0:	str	r4, [sp, #40]	; 0x28
   30ff4:	ldr	r3, [sl, #4]
   30ff8:	add	r0, r9, #4
   30ffc:	ldm	r3, {r1, r2}
   31000:	bl	28274 <fb_symbol_table_find@@Base>
   31004:	subs	r3, r0, #0
   31008:	beq	3118c <__flatcc_fb_clear_parser@@Base+0x10b0>
   3100c:	ldrh	r2, [r3, #8]
   31010:	cmp	r2, #4
   31014:	bhi	3118c <__flatcc_fb_clear_parser@@Base+0x10b0>
   31018:	ldr	r1, [r3, #16]
   3101c:	str	r3, [sp, #12]
   31020:	ldr	r0, [sp, #36]	; 0x24
   31024:	bl	27794 <ptr_set_find_item@@Base>
   31028:	cmp	r0, #0
   3102c:	ldr	r3, [sp, #12]
   31030:	beq	3118c <__flatcc_fb_clear_parser@@Base+0x10b0>
   31034:	ldr	r4, [sp, #40]	; 0x28
   31038:	str	fp, [sp, #12]
   3103c:	ldrh	r2, [r3, #8]
   31040:	cmp	r2, #1
   31044:	bhi	312f8 <__flatcc_fb_clear_parser@@Base+0x121c>
   31048:	mov	r2, #14
   3104c:	mov	r0, #0
   31050:	str	r3, [r5, #16]
   31054:	mov	r1, #0
   31058:	strh	r2, [r5, #24]
   3105c:	strd	r0, [r5, #88]	; 0x58
   31060:	b	30b20 <__flatcc_fb_clear_parser@@Base+0xa44>
   31064:	ldr	r3, [sp, #12]
   31068:	ldrd	r0, [sp, #48]	; 0x30
   3106c:	ldr	lr, [r3, #40]	; 0x28
   31070:	cmp	lr, #6
   31074:	beq	312a0 <__flatcc_fb_clear_parser@@Base+0x11c4>
   31078:	adds	r2, r0, #1
   3107c:	adc	r3, r1, #0
   31080:	ldr	r1, [sp, #20]
   31084:	strd	r2, [sp, #48]	; 0x30
   31088:	cmp	r1, #0
   3108c:	bne	30b70 <__flatcc_fb_clear_parser@@Base+0xa94>
   31090:	b	30d68 <__flatcc_fb_clear_parser@@Base+0xc8c>
   31094:	ldrh	r3, [r1, #48]	; 0x30
   31098:	cmp	r3, #0
   3109c:	bne	31440 <__flatcc_fb_clear_parser@@Base+0x1364>
   310a0:	ldr	ip, [sp, #16]
   310a4:	mov	r2, #8
   310a8:	mov	r0, #1
   310ac:	mov	r1, #0
   310b0:	mov	r3, #1
   310b4:	str	ip, [fp, #40]	; 0x28
   310b8:	strh	r2, [fp, #48]	; 0x30
   310bc:	mov	r2, ip
   310c0:	strh	r3, [fp, #104]	; 0x68
   310c4:	strd	r0, [fp, #112]	; 0x70
   310c8:	b	30824 <__flatcc_fb_clear_parser@@Base+0x748>
   310cc:	mov	r3, lr
   310d0:	movw	r2, #31436	; 0x7acc
   310d4:	movt	r2, #5
   310d8:	mov	r0, r6
   310dc:	ldr	r1, [r4, #4]
   310e0:	str	lr, [sp]
   310e4:	str	lr, [sp, #4]
   310e8:	bl	2b548 <__flatcc_error_report@@Base>
   310ec:	b	308a4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   310f0:	cmp	ip, #1
   310f4:	moveq	r1, r3
   310f8:	ldr	r3, [sp, #32]
   310fc:	movne	r1, lr
   31100:	cmp	r3, #0
   31104:	beq	31168 <__flatcc_fb_clear_parser@@Base+0x108c>
   31108:	ldr	r0, [r6, #412]	; 0x19c
   3110c:	cmp	r0, #0
   31110:	beq	31168 <__flatcc_fb_clear_parser@@Base+0x108c>
   31114:	rsb	r2, r2, #0
   31118:	bl	291dc <fb_scope_table_find@@Base>
   3111c:	cmp	r0, #0
   31120:	beq	31164 <__flatcc_fb_clear_parser@@Base+0x1088>
   31124:	ldr	r3, [sl, #4]
   31128:	add	r0, r0, #4
   3112c:	ldm	r3, {r1, r2}
   31130:	bl	28274 <fb_symbol_table_find@@Base>
   31134:	subs	r3, r0, #0
   31138:	beq	31164 <__flatcc_fb_clear_parser@@Base+0x1088>
   3113c:	ldrh	r2, [r3, #8]
   31140:	cmp	r2, #4
   31144:	bhi	31164 <__flatcc_fb_clear_parser@@Base+0x1088>
   31148:	add	r0, r6, #524	; 0x20c
   3114c:	ldr	r1, [r3, #16]
   31150:	str	r3, [sp, #36]	; 0x24
   31154:	bl	27794 <ptr_set_find_item@@Base>
   31158:	cmp	r0, #0
   3115c:	ldr	r3, [sp, #36]	; 0x24
   31160:	bne	3103c <__flatcc_fb_clear_parser@@Base+0xf60>
   31164:	ldr	lr, [r5, #16]
   31168:	mov	r3, r5
   3116c:	mov	r1, lr
   31170:	movw	r2, #31920	; 0x7cb0
   31174:	movt	r2, #5
   31178:	mov	r0, r6
   3117c:	bl	2cdd4 <error_ref_sym@@Base>
   31180:	mov	r3, #1
   31184:	strh	r3, [r5, #24]
   31188:	b	30ad4 <__flatcc_fb_clear_parser@@Base+0x9f8>
   3118c:	ldr	r2, [r9]
   31190:	cmp	r2, #0
   31194:	beq	31214 <__flatcc_fb_clear_parser@@Base+0x1138>
   31198:	mov	r3, #0
   3119c:	b	311a4 <__flatcc_fb_clear_parser@@Base+0x10c8>
   311a0:	mov	r3, r1
   311a4:	ldr	r2, [r2]
   311a8:	add	r1, r3, #1
   311ac:	cmp	r2, #0
   311b0:	bne	311a0 <__flatcc_fb_clear_parser@@Base+0x10c4>
   311b4:	ldr	r2, [sp, #32]
   311b8:	cmp	r2, #0
   311bc:	beq	31214 <__flatcc_fb_clear_parser@@Base+0x1138>
   311c0:	rsb	r4, r3, #0
   311c4:	ldr	r0, [r6, #412]	; 0x19c
   311c8:	b	311f0 <__flatcc_fb_clear_parser@@Base+0x1114>
   311cc:	cmp	r0, #0
   311d0:	beq	311ec <__flatcc_fb_clear_parser@@Base+0x1110>
   311d4:	mov	r2, r4
   311d8:	ldr	r1, [r9]
   311dc:	bl	291dc <fb_scope_table_find@@Base>
   311e0:	cmp	r0, #0
   311e4:	bne	31220 <__flatcc_fb_clear_parser@@Base+0x1144>
   311e8:	ldr	r0, [r6, #412]	; 0x19c
   311ec:	add	r4, r4, #1
   311f0:	cmp	r4, #0
   311f4:	bne	311cc <__flatcc_fb_clear_parser@@Base+0x10f0>
   311f8:	cmp	r0, #0
   311fc:	beq	31214 <__flatcc_fb_clear_parser@@Base+0x1138>
   31200:	mov	r2, r4
   31204:	mov	r1, r4
   31208:	bl	291dc <fb_scope_table_find@@Base>
   3120c:	subs	r9, r0, #0
   31210:	bne	30ff4 <__flatcc_fb_clear_parser@@Base+0xf18>
   31214:	str	fp, [sp, #12]
   31218:	ldr	lr, [r5, #16]
   3121c:	b	31168 <__flatcc_fb_clear_parser@@Base+0x108c>
   31220:	mov	r9, r0
   31224:	b	30ff4 <__flatcc_fb_clear_parser@@Base+0xf18>
   31228:	ldrd	sl, [sp, #48]	; 0x30
   3122c:	mvn	r3, #0
   31230:	mvn	r2, #0
   31234:	cmp	fp, r3
   31238:	cmpeq	sl, r2
   3123c:	movne	r3, #0
   31240:	bne	30f1c <__flatcc_fb_clear_parser@@Base+0xe40>
   31244:	mov	ip, #0
   31248:	movw	r2, #32040	; 0x7d28
   3124c:	movt	r2, #5
   31250:	mov	r3, ip
   31254:	ldr	r1, [r5, #4]
   31258:	mov	r0, r6
   3125c:	str	ip, [sp]
   31260:	str	ip, [sp, #4]
   31264:	bl	2b548 <__flatcc_error_report@@Base>
   31268:	ldrh	r3, [r5, #56]	; 0x38
   3126c:	ldrd	sl, [sp, #48]	; 0x30
   31270:	b	30f1c <__flatcc_fb_clear_parser@@Base+0xe40>
   31274:	mov	ip, r0
   31278:	mov	r3, r0
   3127c:	ldr	r1, [r5, #4]
   31280:	mov	r0, r6
   31284:	movw	r2, #31780	; 0x7c24
   31288:	movt	r2, #5
   3128c:	str	ip, [sp]
   31290:	str	ip, [sp, #4]
   31294:	bl	2b548 <__flatcc_error_report@@Base>
   31298:	mvn	r0, #0
   3129c:	b	30ca0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   312a0:	mvn	r3, #-2147483648	; 0x80000000
   312a4:	mvn	r2, #0
   312a8:	cmp	r1, r3
   312ac:	cmpeq	r0, r2
   312b0:	bne	31078 <__flatcc_fb_clear_parser@@Base+0xf9c>
   312b4:	mov	ip, #0
   312b8:	movw	r2, #32072	; 0x7d48
   312bc:	movt	r2, #5
   312c0:	mov	r3, ip
   312c4:	ldr	r1, [r5, #4]
   312c8:	mov	r0, r6
   312cc:	str	ip, [sp]
   312d0:	str	ip, [sp, #4]
   312d4:	bl	2b548 <__flatcc_error_report@@Base>
   312d8:	ldr	r2, [sp, #48]	; 0x30
   312dc:	ldr	r1, [sp, #52]	; 0x34
   312e0:	ldrh	r3, [r5, #56]	; 0x38
   312e4:	adds	r2, r2, #1
   312e8:	adc	r1, r1, #0
   312ec:	str	r2, [sp, #48]	; 0x30
   312f0:	str	r1, [sp, #52]	; 0x34
   312f4:	b	30b3c <__flatcc_fb_clear_parser@@Base+0xa60>
   312f8:	mov	ip, #0
   312fc:	movw	r2, #31968	; 0x7ce0
   31300:	movt	r2, #5
   31304:	mov	r0, r6
   31308:	ldr	r3, [r3, #4]
   3130c:	ldr	r1, [r5, #4]
   31310:	str	ip, [sp]
   31314:	str	ip, [sp, #4]
   31318:	bl	2b548 <__flatcc_error_report@@Base>
   3131c:	mov	r3, #1
   31320:	strh	r3, [r5, #24]
   31324:	b	30ad4 <__flatcc_fb_clear_parser@@Base+0x9f8>
   31328:	ldr	r1, [r5, #4]
   3132c:	mov	ip, #0
   31330:	movw	r2, #32432	; 0x7eb0
   31334:	movt	r2, #5
   31338:	mov	r0, r6
   3133c:	mov	r3, ip
   31340:	str	ip, [sp]
   31344:	str	ip, [sp, #4]
   31348:	bl	2b548 <__flatcc_error_report@@Base>
   3134c:	mov	r3, #1
   31350:	mvn	r0, #0
   31354:	strh	r3, [r5, #56]	; 0x38
   31358:	b	30ca0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   3135c:	mov	r0, r6
   31360:	mov	r3, sl
   31364:	ldr	r1, [r5, #4]
   31368:	movw	r2, #32208	; 0x7dd0
   3136c:	movt	r2, #5
   31370:	str	sl, [sp]
   31374:	str	sl, [sp, #4]
   31378:	bl	2b548 <__flatcc_error_report@@Base>
   3137c:	mvn	r0, #0
   31380:	b	30ca0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   31384:	mov	ip, #0
   31388:	mov	r0, r6
   3138c:	ldr	r1, [r5, #4]
   31390:	mov	r3, ip
   31394:	movw	r2, #32208	; 0x7dd0
   31398:	movt	r2, #5
   3139c:	str	ip, [sp]
   313a0:	str	ip, [sp, #4]
   313a4:	bl	2b548 <__flatcc_error_report@@Base>
   313a8:	mvn	r0, #0
   313ac:	b	30ca0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   313b0:	mov	ip, #0
   313b4:	mov	r0, r6
   313b8:	ldr	r1, [r5, #4]
   313bc:	mov	r3, ip
   313c0:	str	ip, [sp]
   313c4:	str	ip, [sp, #4]
   313c8:	ldr	r2, [sp, #44]	; 0x2c
   313cc:	bl	2b548 <__flatcc_error_report@@Base>
   313d0:	ldrh	r3, [r5, #56]	; 0x38
   313d4:	strb	r4, [sp, #48]	; 0x30
   313d8:	b	30b3c <__flatcc_fb_clear_parser@@Base+0xa60>
   313dc:	mov	ip, #0
   313e0:	mov	r0, r6
   313e4:	ldr	r1, [r5, #4]
   313e8:	mov	r3, ip
   313ec:	movw	r2, #32148	; 0x7d94
   313f0:	movt	r2, #5
   313f4:	str	ip, [sp]
   313f8:	str	ip, [sp, #4]
   313fc:	bl	2b548 <__flatcc_error_report@@Base>
   31400:	mvn	r0, #0
   31404:	b	30ca0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   31408:	movw	r2, #32260	; 0x7e04
   3140c:	movt	r2, #5
   31410:	str	ip, [sp]
   31414:	mov	r3, ip
   31418:	b	31344 <__flatcc_fb_clear_parser@@Base+0x1268>
   3141c:	movw	r2, #31200	; 0x79e0
   31420:	movt	r2, #5
   31424:	mov	ip, #0
   31428:	mov	r3, ip
   3142c:	ldr	r1, [fp, #4]
   31430:	str	ip, [sp]
   31434:	str	ip, [sp, #4]
   31438:	bl	2b548 <__flatcc_error_report@@Base>
   3143c:	b	30dcc <__flatcc_fb_clear_parser@@Base+0xcf0>
   31440:	movw	r2, #31252	; 0x7a14
   31444:	movt	r2, #5
   31448:	mov	ip, #0
   3144c:	b	31428 <__flatcc_fb_clear_parser@@Base+0x134c>
   31450:	mov	r1, #1
   31454:	str	r2, [sp]
   31458:	mov	r3, r2
   3145c:	str	r2, [sp, #4]
   31460:	movw	r2, #31176	; 0x79c8
   31464:	movt	r2, #5
   31468:	strh	r1, [fp, #48]	; 0x30
   3146c:	ldr	r1, [fp, #4]
   31470:	bl	2b548 <__flatcc_error_report@@Base>
   31474:	mvn	r0, #0
   31478:	b	30ca0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   3147c:	movw	r1, #30624	; 0x77a0
   31480:	movt	r1, #5
   31484:	ldr	r3, [pc, #40]	; 314b4 <__flatcc_fb_clear_parser@@Base+0x13d8>
   31488:	movw	r0, #31824	; 0x7c50
   3148c:	movt	r0, #5
   31490:	movw	r2, #1315	; 0x523
   31494:	bl	14014 <__assert_fail@plt>
   31498:	movw	r1, #30624	; 0x77a0
   3149c:	movt	r1, #5
   314a0:	ldr	r3, [pc, #12]	; 314b4 <__flatcc_fb_clear_parser@@Base+0x13d8>
   314a4:	movw	r0, #31144	; 0x79a8
   314a8:	movt	r0, #5
   314ac:	movw	r2, #1229	; 0x4cd
   314b0:	bl	14014 <__assert_fail@plt>
   314b4:	andeq	r7, r5, r8, asr #13
   314b8:	ldrh	r3, [r1, #8]
   314bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   314c0:	strd	r6, [sp, #8]
   314c4:	strd	r8, [sp, #16]
   314c8:	strd	sl, [sp, #24]
   314cc:	str	lr, [sp, #32]
   314d0:	sub	sp, sp, #252	; 0xfc
   314d4:	cmp	r3, #0
   314d8:	str	r1, [sp, #40]	; 0x28
   314dc:	bne	33214 <__flatcc_fb_clear_parser@@Base+0x3138>
   314e0:	ldr	r3, [sp, #40]	; 0x28
   314e4:	ldrh	r5, [r3, #48]	; 0x30
   314e8:	cmp	r5, #0
   314ec:	bne	33230 <__flatcc_fb_clear_parser@@Base+0x3154>
   314f0:	ldr	r4, [r3, #28]
   314f4:	mov	r2, #0
   314f8:	mov	r3, #0
   314fc:	add	r6, sp, #100	; 0x64
   31500:	mov	fp, r0
   31504:	strd	r2, [sp, #100]	; 0x64
   31508:	strd	r2, [r6, #8]
   3150c:	strd	r2, [r6, #16]
   31510:	cmp	r4, #0
   31514:	strd	r2, [r6, #24]
   31518:	strd	r2, [r6, #32]
   3151c:	strd	r2, [r6, #40]	; 0x28
   31520:	beq	32e78 <__flatcc_fb_clear_parser@@Base+0x2d9c>
   31524:	movw	r7, #30220	; 0x760c
   31528:	movt	r7, #5
   3152c:	movw	r8, #31592	; 0x7b68
   31530:	movt	r8, #5
   31534:	movw	r9, #31556	; 0x7b44
   31538:	movt	r9, #5
   3153c:	mov	sl, #100	; 0x64
   31540:	b	31584 <__flatcc_fb_clear_parser@@Base+0x14a8>
   31544:	add	r1, r7, r1
   31548:	str	r4, [r6, r2, lsl #2]
   3154c:	ldr	lr, [r1, #204]	; 0xcc
   31550:	cmp	lr, #0
   31554:	bne	31600 <__flatcc_fb_clear_parser@@Base+0x1524>
   31558:	ldrh	r3, [r4, #16]
   3155c:	cmp	r3, #0
   31560:	bne	32a50 <__flatcc_fb_clear_parser@@Base+0x2974>
   31564:	ldr	r4, [r4]
   31568:	subs	sl, sl, #1
   3156c:	movne	ip, #1
   31570:	moveq	ip, #0
   31574:	cmp	r4, #0
   31578:	moveq	ip, #0
   3157c:	cmp	ip, #0
   31580:	beq	3169c <__flatcc_fb_clear_parser@@Base+0x15c0>
   31584:	ldr	r3, [r4, #4]
   31588:	ldr	r0, [fp, #412]	; 0x19c
   3158c:	ldm	r3, {r1, r2}
   31590:	add	r0, r0, #16
   31594:	bl	3cd40 <fb_name_table_find@@Base>
   31598:	subs	ip, r0, #0
   3159c:	beq	32600 <__flatcc_fb_clear_parser@@Base+0x2524>
   315a0:	ldr	r2, [ip, #24]
   315a4:	cmp	r2, #0
   315a8:	beq	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   315ac:	mov	r3, #8
   315b0:	asr	r3, r3, r2
   315b4:	ands	ip, r3, #1
   315b8:	beq	31678 <__flatcc_fb_clear_parser@@Base+0x159c>
   315bc:	ldr	ip, [r6, r2, lsl #2]
   315c0:	mov	r3, #1
   315c4:	lsl	r1, r2, #2
   315c8:	orr	r5, r5, r3, lsl r2
   315cc:	uxth	r5, r5
   315d0:	cmp	ip, #0
   315d4:	beq	31544 <__flatcc_fb_clear_parser@@Base+0x1468>
   315d8:	mov	ip, #0
   315dc:	movw	r2, #31396	; 0x7aa4
   315e0:	movt	r2, #5
   315e4:	mov	r3, ip
   315e8:	ldr	r1, [r4, #4]
   315ec:	mov	r0, fp
   315f0:	str	ip, [sp]
   315f4:	str	ip, [sp, #4]
   315f8:	bl	2b548 <__flatcc_error_report@@Base>
   315fc:	b	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   31600:	cmp	lr, #2
   31604:	bne	31638 <__flatcc_fb_clear_parser@@Base+0x155c>
   31608:	ldrh	r3, [r4, #16]
   3160c:	cmp	r3, #2
   31610:	beq	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   31614:	mov	r3, ip
   31618:	movw	r2, #31476	; 0x7af4
   3161c:	movt	r2, #5
   31620:	mov	r0, fp
   31624:	ldr	r1, [r4, #4]
   31628:	str	ip, [sp]
   3162c:	str	ip, [sp, #4]
   31630:	bl	2b548 <__flatcc_error_report@@Base>
   31634:	b	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   31638:	cmp	lr, #5
   3163c:	beq	32624 <__flatcc_fb_clear_parser@@Base+0x2548>
   31640:	cmp	lr, #4
   31644:	bne	32654 <__flatcc_fb_clear_parser@@Base+0x2578>
   31648:	ldrh	r3, [r4, #16]
   3164c:	sub	r3, r3, #4
   31650:	cmp	r3, #1
   31654:	bls	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   31658:	mov	r3, ip
   3165c:	mov	r2, r9
   31660:	ldr	r1, [r4, #4]
   31664:	mov	r0, fp
   31668:	str	ip, [sp]
   3166c:	str	ip, [sp, #4]
   31670:	bl	2b548 <__flatcc_error_report@@Base>
   31674:	b	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   31678:	mov	r3, ip
   3167c:	movw	r2, #31348	; 0x7a74
   31680:	movt	r2, #5
   31684:	mov	r0, fp
   31688:	ldr	r1, [r4, #4]
   3168c:	str	ip, [sp]
   31690:	str	ip, [sp, #4]
   31694:	bl	2b548 <__flatcc_error_report@@Base>
   31698:	b	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   3169c:	cmp	r4, #0
   316a0:	beq	316c4 <__flatcc_fb_clear_parser@@Base+0x15e8>
   316a4:	movw	r2, #31636	; 0x7b94
   316a8:	movt	r2, #5
   316ac:	ldr	r1, [r4, #4]
   316b0:	mov	r3, ip
   316b4:	mov	r0, fp
   316b8:	str	ip, [sp]
   316bc:	str	ip, [sp, #4]
   316c0:	bl	2b548 <__flatcc_error_report@@Base>
   316c4:	ldr	r3, [sp, #40]	; 0x28
   316c8:	ldr	sl, [r3, #20]
   316cc:	strh	r5, [r3, #92]	; 0x5c
   316d0:	cmp	sl, #0
   316d4:	beq	32f04 <__flatcc_fb_clear_parser@@Base+0x2e28>
   316d8:	mov	r3, #0
   316dc:	mov	r2, #0
   316e0:	mov	r1, #0
   316e4:	strd	r2, [sp, #16]
   316e8:	str	r1, [sp, #24]
   316ec:	str	r3, [sp, #56]	; 0x38
   316f0:	strd	r2, [sp, #72]	; 0x48
   316f4:	movw	r3, #30220	; 0x760c
   316f8:	movt	r3, #5
   316fc:	str	r3, [sp, #32]
   31700:	add	r3, fp, #352	; 0x160
   31704:	str	r1, [sp, #44]	; 0x2c
   31708:	str	r3, [sp, #12]
   3170c:	ldr	r3, [sp, #40]	; 0x28
   31710:	str	r2, [sp, #52]	; 0x34
   31714:	str	r1, [sp, #60]	; 0x3c
   31718:	str	r1, [sp, #64]	; 0x40
   3171c:	add	r3, r3, #56	; 0x38
   31720:	str	r3, [sp, #36]	; 0x24
   31724:	mov	r2, #1
   31728:	mov	r1, sl
   3172c:	ldr	r0, [sp, #36]	; 0x24
   31730:	bl	28034 <fb_symbol_table_insert_item@@Base>
   31734:	subs	r3, r0, #0
   31738:	str	r3, [sp, #8]
   3173c:	bne	32298 <__flatcc_fb_clear_parser@@Base+0x21bc>
   31740:	ldrh	r3, [sl, #8]
   31744:	cmp	r3, #5
   31748:	bne	329a4 <__flatcc_fb_clear_parser@@Base+0x28c8>
   3174c:	ldrh	r3, [sl, #24]
   31750:	cmp	r3, #1
   31754:	beq	3198c <__flatcc_fb_clear_parser@@Base+0x18b0>
   31758:	sub	r3, r3, #7
   3175c:	cmp	r3, #1
   31760:	bhi	3178c <__flatcc_fb_clear_parser@@Base+0x16b0>
   31764:	ldr	r3, [sl, #16]
   31768:	ldr	r3, [r3, #16]
   3176c:	add	r3, r3, #996	; 0x3e4
   31770:	add	r3, r3, #3
   31774:	cmp	r3, #27
   31778:	ldrls	r2, [sp, #32]
   3177c:	ldrhi	r3, [sp, #8]
   31780:	addls	r3, r2, r3, lsl #2
   31784:	ldrls	r3, [r3, #16]
   31788:	str	r3, [sl, #16]
   3178c:	ldr	r4, [sl, #64]	; 0x40
   31790:	ldr	r3, [sp, #52]	; 0x34
   31794:	ldr	r2, [sp, #56]	; 0x38
   31798:	cmp	r4, #0
   3179c:	moveq	r5, r4
   317a0:	strheq	r4, [sl, #72]	; 0x48
   317a4:	str	r3, [r6]
   317a8:	strd	r2, [r6, #4]
   317ac:	strd	r2, [r6, #12]
   317b0:	strd	r2, [r6, #20]
   317b4:	strd	r2, [r6, #28]
   317b8:	strd	r2, [r6, #36]	; 0x24
   317bc:	str	r2, [r6, #44]	; 0x2c
   317c0:	beq	31c4c <__flatcc_fb_clear_parser@@Base+0x1b70>
   317c4:	movw	r3, #31556	; 0x7b44
   317c8:	movt	r3, #5
   317cc:	ldr	r9, [sp, #8]
   317d0:	movw	r8, #31592	; 0x7b68
   317d4:	movt	r8, #5
   317d8:	mov	r5, #0
   317dc:	mov	r7, #100	; 0x64
   317e0:	str	r3, [sp, #28]
   317e4:	b	3182c <__flatcc_fb_clear_parser@@Base+0x1750>
   317e8:	ldr	r1, [sp, #32]
   317ec:	str	r4, [r6, r2, lsl #2]
   317f0:	add	r3, r1, r3
   317f4:	ldr	ip, [r3, #204]	; 0xcc
   317f8:	cmp	ip, #0
   317fc:	bne	319f4 <__flatcc_fb_clear_parser@@Base+0x1918>
   31800:	ldrh	r3, [r4, #16]
   31804:	cmp	r3, #0
   31808:	bne	3255c <__flatcc_fb_clear_parser@@Base+0x2480>
   3180c:	ldr	r4, [r4]
   31810:	subs	r7, r7, #1
   31814:	movne	ip, #1
   31818:	moveq	ip, #0
   3181c:	cmp	r4, #0
   31820:	moveq	ip, #0
   31824:	cmp	ip, #0
   31828:	beq	31a90 <__flatcc_fb_clear_parser@@Base+0x19b4>
   3182c:	ldr	r3, [r4, #4]
   31830:	ldr	r0, [fp, #412]	; 0x19c
   31834:	ldm	r3, {r1, r2}
   31838:	add	r0, r0, #16
   3183c:	bl	3cd40 <fb_name_table_find@@Base>
   31840:	subs	ip, r0, #0
   31844:	beq	32274 <__flatcc_fb_clear_parser@@Base+0x2198>
   31848:	ldr	r2, [ip, #24]
   3184c:	cmp	r2, #0
   31850:	beq	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   31854:	movw	r3, #4038	; 0xfc6
   31858:	asr	r3, r3, r2
   3185c:	ands	ip, r3, #1
   31860:	beq	31a6c <__flatcc_fb_clear_parser@@Base+0x1990>
   31864:	ldr	lr, [r6, r2, lsl #2]
   31868:	mov	r1, #1
   3186c:	lsl	r3, r2, #2
   31870:	orr	r5, r5, r1, lsl r2
   31874:	uxth	r5, r5
   31878:	cmp	lr, #0
   3187c:	beq	317e8 <__flatcc_fb_clear_parser@@Base+0x170c>
   31880:	mov	ip, #0
   31884:	movw	r2, #31396	; 0x7aa4
   31888:	movt	r2, #5
   3188c:	mov	r3, ip
   31890:	ldr	r1, [r4, #4]
   31894:	mov	r0, fp
   31898:	str	ip, [sp]
   3189c:	str	ip, [sp, #4]
   318a0:	bl	2b548 <__flatcc_error_report@@Base>
   318a4:	b	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   318a8:	mov	r7, #0
   318ac:	ldr	lr, [sp, #8]
   318b0:	mov	ip, #14
   318b4:	ldr	r1, [sp, #24]
   318b8:	ldrd	r2, [lr, #112]	; 0x70
   318bc:	str	lr, [sl, #16]
   318c0:	ldrh	lr, [lr, #104]	; 0x68
   318c4:	eor	r1, r1, #1
   318c8:	cmp	r0, #4
   318cc:	movne	r1, #0
   318d0:	andeq	r1, r1, #1
   318d4:	strh	ip, [sl, #24]
   318d8:	cmp	r1, #0
   318dc:	strh	lr, [sl, #74]	; 0x4a
   318e0:	strd	r2, [sl, #88]	; 0x58
   318e4:	ldrh	r3, [sl, #56]	; 0x38
   318e8:	bne	32b74 <__flatcc_fb_clear_parser@@Base+0x2a98>
   318ec:	cmp	r3, #0
   318f0:	bne	32b08 <__flatcc_fb_clear_parser@@Base+0x2a2c>
   318f4:	cmp	r0, #3
   318f8:	bne	31ed0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   318fc:	ldr	r0, [sp, #8]
   31900:	mov	r4, sl
   31904:	ldr	r3, [sp, #52]	; 0x34
   31908:	ldr	r1, [sp, #56]	; 0x38
   3190c:	ldr	r2, [r0, #40]	; 0x28
   31910:	mov	r8, r3
   31914:	mov	r3, #5
   31918:	mov	r9, r1
   3191c:	mov	r1, r0
   31920:	strh	r3, [sl, #56]	; 0x38
   31924:	mov	r0, fp
   31928:	strd	r8, [r4, #48]!	; 0x30
   3192c:	mov	r3, r4
   31930:	bl	34fd4 <__flatcc_fb_coerce_scalar_type@@Base>
   31934:	cmp	r0, #0
   31938:	bne	31f8c <__flatcc_fb_clear_parser@@Base+0x1eb0>
   3193c:	ldr	r3, [fp, #212]	; 0xd4
   31940:	cmp	r3, #0
   31944:	beq	31ed0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   31948:	ldr	r0, [sl, #16]
   3194c:	mov	r1, r4
   31950:	add	r0, r0, #72	; 0x48
   31954:	bl	3d92c <fb_value_set_find_item@@Base>
   31958:	subs	r3, r0, #0
   3195c:	bne	31ed0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   31960:	str	r3, [sp]
   31964:	movw	r2, #34120	; 0x8548
   31968:	movt	r2, #5
   3196c:	str	r3, [sp, #4]
   31970:	mov	r0, fp
   31974:	ldr	r3, [sp, #8]
   31978:	ldr	r1, [sl, #4]
   3197c:	ldr	r3, [r3, #4]
   31980:	bl	2b548 <__flatcc_error_report@@Base>
   31984:	mov	r3, #1
   31988:	strh	r3, [sl, #24]
   3198c:	ldr	sl, [sl]
   31990:	cmp	sl, #0
   31994:	bne	31724 <__flatcc_fb_clear_parser@@Base+0x1648>
   31998:	ldr	r3, [sp, #24]
   3199c:	cmp	r3, #0
   319a0:	beq	327b0 <__flatcc_fb_clear_parser@@Base+0x26d4>
   319a4:	ldr	r3, [sp, #60]	; 0x3c
   319a8:	cmp	r3, #0
   319ac:	beq	319e8 <__flatcc_fb_clear_parser@@Base+0x190c>
   319b0:	ldr	r2, [sp, #40]	; 0x28
   319b4:	cmp	r3, #1
   319b8:	ldrh	r3, [r2, #10]
   319bc:	orr	r3, r3, #8
   319c0:	strh	r3, [r2, #10]
   319c4:	beq	319e8 <__flatcc_fb_clear_parser@@Base+0x190c>
   319c8:	ldr	r3, [fp, #156]	; 0x9c
   319cc:	cmp	r3, #0
   319d0:	movne	r3, #0
   319d4:	strne	r3, [sp, #60]	; 0x3c
   319d8:	beq	33268 <__flatcc_fb_clear_parser@@Base+0x318c>
   319dc:	ldr	r3, [sp, #24]
   319e0:	cmp	r3, #0
   319e4:	beq	329d0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   319e8:	mvn	r3, #0
   319ec:	str	r3, [sp, #60]	; 0x3c
   319f0:	b	329d0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   319f4:	cmp	ip, #2
   319f8:	bne	31a2c <__flatcc_fb_clear_parser@@Base+0x1950>
   319fc:	ldrh	r3, [r4, #16]
   31a00:	cmp	r3, #2
   31a04:	beq	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   31a08:	mov	r3, lr
   31a0c:	movw	r2, #31476	; 0x7af4
   31a10:	movt	r2, #5
   31a14:	mov	r0, fp
   31a18:	ldr	r1, [r4, #4]
   31a1c:	str	lr, [sp]
   31a20:	str	lr, [sp, #4]
   31a24:	bl	2b548 <__flatcc_error_report@@Base>
   31a28:	b	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   31a2c:	cmp	ip, #5
   31a30:	beq	3243c <__flatcc_fb_clear_parser@@Base+0x2360>
   31a34:	cmp	ip, #4
   31a38:	bne	3246c <__flatcc_fb_clear_parser@@Base+0x2390>
   31a3c:	ldrh	r3, [r4, #16]
   31a40:	sub	r3, r3, #4
   31a44:	cmp	r3, #1
   31a48:	bls	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   31a4c:	mov	r3, lr
   31a50:	mov	r0, fp
   31a54:	ldr	r1, [r4, #4]
   31a58:	str	lr, [sp]
   31a5c:	str	lr, [sp, #4]
   31a60:	ldr	r2, [sp, #28]
   31a64:	bl	2b548 <__flatcc_error_report@@Base>
   31a68:	b	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   31a6c:	mov	r3, ip
   31a70:	movw	r2, #31348	; 0x7a74
   31a74:	movt	r2, #5
   31a78:	mov	r0, fp
   31a7c:	ldr	r1, [r4, #4]
   31a80:	str	ip, [sp]
   31a84:	str	ip, [sp, #4]
   31a88:	bl	2b548 <__flatcc_error_report@@Base>
   31a8c:	b	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   31a90:	cmp	r4, #0
   31a94:	str	r9, [sp, #8]
   31a98:	ldr	r7, [sp, #124]	; 0x7c
   31a9c:	beq	31ac0 <__flatcc_fb_clear_parser@@Base+0x19e4>
   31aa0:	movw	r2, #31636	; 0x7b94
   31aa4:	movt	r2, #5
   31aa8:	mov	r3, ip
   31aac:	mov	r0, fp
   31ab0:	ldr	r1, [r4, #4]
   31ab4:	str	ip, [sp]
   31ab8:	str	ip, [sp, #4]
   31abc:	bl	2b548 <__flatcc_error_report@@Base>
   31ac0:	cmp	r7, #0
   31ac4:	strh	r5, [sl, #72]	; 0x48
   31ac8:	beq	31bf0 <__flatcc_fb_clear_parser@@Base+0x1b14>
   31acc:	ldrh	r3, [sl, #24]
   31ad0:	ldr	r2, [sp, #40]	; 0x28
   31ad4:	cmp	r3, #7
   31ad8:	ldr	r4, [r2, #12]
   31adc:	bne	32e8c <__flatcc_fb_clear_parser@@Base+0x2db0>
   31ae0:	ldr	r3, [sl, #16]
   31ae4:	cmp	r3, #4
   31ae8:	bne	32e8c <__flatcc_fb_clear_parser@@Base+0x2db0>
   31aec:	ldrh	r3, [r7, #16]
   31af0:	cmp	r3, #2
   31af4:	bne	32e80 <__flatcc_fb_clear_parser@@Base+0x2da4>
   31af8:	ldr	r1, [r7, #8]
   31afc:	ldr	ip, [r7, #12]
   31b00:	cmp	ip, #0
   31b04:	ble	32e34 <__flatcc_fb_clear_parser@@Base+0x2d58>
   31b08:	sub	r5, ip, #1
   31b0c:	ldrb	r3, [r1, r5]
   31b10:	cmp	r3, #46	; 0x2e
   31b14:	beq	32e48 <__flatcc_fb_clear_parser@@Base+0x2d6c>
   31b18:	cmp	r5, #0
   31b1c:	beq	32e5c <__flatcc_fb_clear_parser@@Base+0x2d80>
   31b20:	sub	r2, ip, #2
   31b24:	ldrb	r3, [r1, r2]
   31b28:	cmp	r3, #46	; 0x2e
   31b2c:	beq	32e6c <__flatcc_fb_clear_parser@@Base+0x2d90>
   31b30:	add	r0, r1, r2
   31b34:	ldr	r9, [sp, #8]
   31b38:	b	31b50 <__flatcc_fb_clear_parser@@Base+0x1a74>
   31b3c:	ldrb	lr, [r0, #-1]!
   31b40:	sub	r3, r2, #1
   31b44:	cmp	lr, #46	; 0x2e
   31b48:	beq	325d0 <__flatcc_fb_clear_parser@@Base+0x24f4>
   31b4c:	mov	r2, r3
   31b50:	cmp	r2, #0
   31b54:	bne	31b3c <__flatcc_fb_clear_parser@@Base+0x1a60>
   31b58:	mov	r8, r1
   31b5c:	str	r9, [sp, #8]
   31b60:	str	ip, [sp, #28]
   31b64:	clz	r3, r2
   31b68:	cmp	r4, #0
   31b6c:	lsr	r3, r3, #5
   31b70:	moveq	r3, #0
   31b74:	cmp	r3, #0
   31b78:	beq	3250c <__flatcc_fb_clear_parser@@Base+0x2430>
   31b7c:	ldr	r9, [sp, #8]
   31b80:	add	r3, fp, #524	; 0x20c
   31b84:	str	r3, [sp, #48]	; 0x30
   31b88:	mov	r1, r8
   31b8c:	add	r0, r4, #4
   31b90:	ldr	r2, [sp, #28]
   31b94:	bl	28274 <fb_symbol_table_find@@Base>
   31b98:	subs	r5, r0, #0
   31b9c:	beq	321b0 <__flatcc_fb_clear_parser@@Base+0x20d4>
   31ba0:	ldrh	r3, [r5, #8]
   31ba4:	cmp	r3, #4
   31ba8:	bhi	321b0 <__flatcc_fb_clear_parser@@Base+0x20d4>
   31bac:	ldr	r1, [r5, #16]
   31bb0:	ldr	r0, [sp, #48]	; 0x30
   31bb4:	bl	27794 <ptr_set_find_item@@Base>
   31bb8:	cmp	r0, #0
   31bbc:	beq	321b0 <__flatcc_fb_clear_parser@@Base+0x20d4>
   31bc0:	mov	r3, r5
   31bc4:	str	r9, [sp, #8]
   31bc8:	ldrh	r2, [r3, #8]
   31bcc:	cmp	r2, #0
   31bd0:	beq	31be8 <__flatcc_fb_clear_parser@@Base+0x1b0c>
   31bd4:	ldr	ip, [fp, #176]	; 0xb0
   31bd8:	cmp	ip, #0
   31bdc:	beq	331d0 <__flatcc_fb_clear_parser@@Base+0x30f4>
   31be0:	cmp	r2, #1
   31be4:	bne	33194 <__flatcc_fb_clear_parser@@Base+0x30b8>
   31be8:	ldrh	r5, [sl, #72]	; 0x48
   31bec:	str	r3, [sl, #104]	; 0x68
   31bf0:	tst	r5, #256	; 0x100
   31bf4:	beq	31c04 <__flatcc_fb_clear_parser@@Base+0x1b28>
   31bf8:	ldrh	r3, [sl, #24]
   31bfc:	cmp	r3, #8
   31c00:	beq	3268c <__flatcc_fb_clear_parser@@Base+0x25b0>
   31c04:	tst	r5, #1024	; 0x400
   31c08:	beq	31c4c <__flatcc_fb_clear_parser@@Base+0x1b70>
   31c0c:	ldrh	r3, [sl, #24]
   31c10:	cmp	r3, #7
   31c14:	bne	31c24 <__flatcc_fb_clear_parser@@Base+0x1b48>
   31c18:	ldr	r3, [sl, #16]
   31c1c:	cmp	r3, #4
   31c20:	beq	31c88 <__flatcc_fb_clear_parser@@Base+0x1bac>
   31c24:	mov	ip, #0
   31c28:	movw	r2, #33400	; 0x8278
   31c2c:	movt	r2, #5
   31c30:	mov	r3, ip
   31c34:	ldr	r1, [sl, #4]
   31c38:	mov	r0, fp
   31c3c:	str	ip, [sp]
   31c40:	str	ip, [sp, #4]
   31c44:	bl	2b548 <__flatcc_error_report@@Base>
   31c48:	ldrh	r5, [sl, #72]	; 0x48
   31c4c:	tst	r5, #2048	; 0x800
   31c50:	beq	31c88 <__flatcc_fb_clear_parser@@Base+0x1bac>
   31c54:	ldrh	r3, [sl, #24]
   31c58:	cmp	r3, #7
   31c5c:	beq	32590 <__flatcc_fb_clear_parser@@Base+0x24b4>
   31c60:	mov	ip, #0
   31c64:	movw	r2, #33460	; 0x82b4
   31c68:	movt	r2, #5
   31c6c:	mov	r3, ip
   31c70:	ldr	r1, [sl, #4]
   31c74:	mov	r0, fp
   31c78:	str	ip, [sp]
   31c7c:	str	ip, [sp, #4]
   31c80:	bl	2b548 <__flatcc_error_report@@Base>
   31c84:	ldrh	r5, [sl, #72]	; 0x48
   31c88:	and	r5, r5, #3072	; 0xc00
   31c8c:	cmp	r5, #3072	; 0xc00
   31c90:	beq	325a8 <__flatcc_fb_clear_parser@@Base+0x24cc>
   31c94:	ldr	r3, [sp, #104]	; 0x68
   31c98:	adds	r1, r3, #0
   31c9c:	str	r3, [sp, #28]
   31ca0:	ldrd	r2, [sp, #16]
   31ca4:	movne	r1, #1
   31ca8:	str	r1, [sp, #48]	; 0x30
   31cac:	mov	r0, r2
   31cb0:	orrs	r3, r0, r3
   31cb4:	moveq	r3, r1
   31cb8:	movne	r3, #0
   31cbc:	cmp	r3, #0
   31cc0:	bne	324a4 <__flatcc_fb_clear_parser@@Base+0x23c8>
   31cc4:	ldr	r3, [sp, #24]
   31cc8:	cmp	r3, #0
   31ccc:	bne	31d18 <__flatcc_fb_clear_parser@@Base+0x1c3c>
   31cd0:	ldrd	r0, [sp, #16]
   31cd4:	ldrd	r2, [fp, #216]	; 0xd8
   31cd8:	cmp	r3, r1
   31cdc:	cmpeq	r2, r0
   31ce0:	bls	324dc <__flatcc_fb_clear_parser@@Base+0x2400>
   31ce4:	ldr	r2, [sp, #44]	; 0x2c
   31ce8:	cmp	r2, #0
   31cec:	bne	31d00 <__flatcc_fb_clear_parser@@Base+0x1c24>
   31cf0:	ldrh	r3, [sp, #16]
   31cf4:	str	r2, [sp, #24]
   31cf8:	str	r3, [sl, #96]	; 0x60
   31cfc:	str	r2, [sl, #100]	; 0x64
   31d00:	ldr	r3, [sp, #16]
   31d04:	adds	r3, r3, #1
   31d08:	str	r3, [sp, #16]
   31d0c:	ldr	r3, [sp, #20]
   31d10:	adc	r3, r3, #0
   31d14:	str	r3, [sp, #20]
   31d18:	ldrh	r3, [sl, #24]
   31d1c:	sub	r3, r3, #7
   31d20:	cmp	r3, #5
   31d24:	ldrls	pc, [pc, r3, lsl #2]
   31d28:	b	332a0 <__flatcc_fb_clear_parser@@Base+0x31c4>
   31d2c:	andeq	r2, r3, r4, lsl r0
   31d30:	andeq	r1, r3, r4, lsr #31
   31d34:	andeq	r1, r3, ip, asr pc
   31d38:	andeq	r1, r3, r0, asr #29
   31d3c:	andeq	r1, r3, r4, lsl #28
   31d40:	andeq	r1, r3, r4, asr #26
   31d44:	ldr	ip, [sl, #16]
   31d48:	ldr	r3, [sp, #40]	; 0x28
   31d4c:	cmp	ip, #0
   31d50:	ldr	r4, [r3, #12]
   31d54:	beq	32414 <__flatcc_fb_clear_parser@@Base+0x2338>
   31d58:	mov	r7, ip
   31d5c:	mov	r2, #0
   31d60:	b	31d6c <__flatcc_fb_clear_parser@@Base+0x1c90>
   31d64:	mov	r2, r3
   31d68:	mov	r7, r5
   31d6c:	ldr	r5, [r7]
   31d70:	add	r3, r2, #1
   31d74:	cmp	r5, #0
   31d78:	bne	31d64 <__flatcc_fb_clear_parser@@Base+0x1c88>
   31d7c:	sub	r1, r3, #1
   31d80:	cmp	r4, #0
   31d84:	clz	r1, r1
   31d88:	lsr	r1, r1, #5
   31d8c:	moveq	r1, #0
   31d90:	cmp	r1, #0
   31d94:	addne	r8, fp, #524	; 0x20c
   31d98:	beq	32730 <__flatcc_fb_clear_parser@@Base+0x2654>
   31d9c:	ldr	r3, [r7, #4]
   31da0:	add	r0, r4, #4
   31da4:	ldm	r3, {r1, r2}
   31da8:	bl	28274 <fb_symbol_table_find@@Base>
   31dac:	subs	r9, r0, #0
   31db0:	beq	32388 <__flatcc_fb_clear_parser@@Base+0x22ac>
   31db4:	ldrh	r3, [r9, #8]
   31db8:	cmp	r3, #4
   31dbc:	bhi	32388 <__flatcc_fb_clear_parser@@Base+0x22ac>
   31dc0:	mov	r0, r8
   31dc4:	ldr	r1, [r9, #16]
   31dc8:	str	r8, [sp, #68]	; 0x44
   31dcc:	bl	27794 <ptr_set_find_item@@Base>
   31dd0:	cmp	r0, #0
   31dd4:	beq	32388 <__flatcc_fb_clear_parser@@Base+0x22ac>
   31dd8:	str	r9, [sp, #8]
   31ddc:	ldr	r3, [sp, #8]
   31de0:	ldrh	r0, [r3, #8]
   31de4:	cmp	r0, #4
   31de8:	ldrls	pc, [pc, r0, lsl #2]
   31dec:	b	33280 <__flatcc_fb_clear_parser@@Base+0x31a4>
   31df0:	andeq	r1, r3, r8, lsr #17
   31df4:	andeq	r1, r3, r8, lsr #17
   31df8:	andeq	r2, r3, r4, ror sl
   31dfc:			; <UNDEFINED> instruction: 0x00032ab4
   31e00:	andeq	r1, r3, r8, lsr #17
   31e04:	ldr	ip, [sl, #16]
   31e08:	ldr	r3, [sp, #40]	; 0x28
   31e0c:	cmp	ip, #0
   31e10:	ldr	r4, [r3, #12]
   31e14:	beq	32358 <__flatcc_fb_clear_parser@@Base+0x227c>
   31e18:	mov	r5, ip
   31e1c:	mov	r2, #0
   31e20:	b	31e2c <__flatcc_fb_clear_parser@@Base+0x1d50>
   31e24:	mov	r2, r0
   31e28:	mov	r5, r3
   31e2c:	ldr	r3, [r5]
   31e30:	add	r0, r2, #1
   31e34:	cmp	r3, #0
   31e38:	bne	31e24 <__flatcc_fb_clear_parser@@Base+0x1d48>
   31e3c:	sub	r3, r0, #1
   31e40:	cmp	r4, #0
   31e44:	clz	r3, r3
   31e48:	lsr	r3, r3, #5
   31e4c:	moveq	r3, #0
   31e50:	cmp	r3, #0
   31e54:	addne	r7, fp, #524	; 0x20c
   31e58:	beq	326b8 <__flatcc_fb_clear_parser@@Base+0x25dc>
   31e5c:	ldr	r3, [r5, #4]
   31e60:	add	r0, r4, #4
   31e64:	ldm	r3, {r1, r2}
   31e68:	bl	28274 <fb_symbol_table_find@@Base>
   31e6c:	subs	r9, r0, #0
   31e70:	beq	322cc <__flatcc_fb_clear_parser@@Base+0x21f0>
   31e74:	ldrh	r3, [r9, #8]
   31e78:	cmp	r3, #4
   31e7c:	bhi	322cc <__flatcc_fb_clear_parser@@Base+0x21f0>
   31e80:	mov	r0, r7
   31e84:	ldr	r1, [r9, #16]
   31e88:	bl	27794 <ptr_set_find_item@@Base>
   31e8c:	cmp	r0, #0
   31e90:	beq	322cc <__flatcc_fb_clear_parser@@Base+0x21f0>
   31e94:	str	r9, [sp, #8]
   31e98:	ldr	r3, [sp, #8]
   31e9c:	ldrh	r3, [r3, #8]
   31ea0:	cmp	r3, #4
   31ea4:	ldrls	pc, [pc, r3, lsl #2]
   31ea8:	b	32c04 <__flatcc_fb_clear_parser@@Base+0x2b28>
   31eac:	andeq	r2, r3, r4, asr r0
   31eb0:	andeq	r2, r3, r4, asr r0
   31eb4:	andeq	r2, r3, r4, lsl #24
   31eb8:	andeq	r2, r3, r4, asr r0
   31ebc:	andeq	r2, r3, r4, asr r0
   31ec0:	ldrh	r3, [sl, #56]	; 0x38
   31ec4:	cmp	r3, #0
   31ec8:	bne	32e20 <__flatcc_fb_clear_parser@@Base+0x2d44>
   31ecc:	ldr	r7, [fp, #164]	; 0xa4
   31ed0:	ldr	r3, [sp, #24]
   31ed4:	cmp	r3, #0
   31ed8:	bne	3215c <__flatcc_fb_clear_parser@@Base+0x2080>
   31edc:	ldr	r3, [sp, #44]	; 0x2c
   31ee0:	ldr	r2, [sp, #48]	; 0x30
   31ee4:	eor	r3, r3, #1
   31ee8:	ands	lr, r3, r2
   31eec:	ldr	r3, [sp, #28]
   31ef0:	bne	32948 <__flatcc_fb_clear_parser@@Base+0x286c>
   31ef4:	ldr	r2, [sp, #44]	; 0x2c
   31ef8:	cmp	r3, #0
   31efc:	movne	ip, #0
   31f00:	andeq	ip, r2, #1
   31f04:	cmp	ip, #0
   31f08:	bne	329f0 <__flatcc_fb_clear_parser@@Base+0x2914>
   31f0c:	cmp	r3, #0
   31f10:	beq	32108 <__flatcc_fb_clear_parser@@Base+0x202c>
   31f14:	ldrh	r3, [r3, #16]
   31f18:	cmp	r3, #5
   31f1c:	beq	320cc <__flatcc_fb_clear_parser@@Base+0x1ff0>
   31f20:	cmp	r3, #4
   31f24:	ldr	r3, [sp, #28]
   31f28:	mov	r0, fp
   31f2c:	movweq	r2, #34516	; 0x86d4
   31f30:	movwne	r2, #34548	; 0x86f4
   31f34:	movteq	r2, #5
   31f38:	movtne	r2, #5
   31f3c:	ldr	r1, [r3, #4]
   31f40:	mov	r3, ip
   31f44:	str	ip, [sp]
   31f48:	str	ip, [sp, #4]
   31f4c:	mov	ip, #1
   31f50:	str	ip, [sp, #24]
   31f54:	bl	2b548 <__flatcc_error_report@@Base>
   31f58:	b	3215c <__flatcc_fb_clear_parser@@Base+0x2080>
   31f5c:	ldrh	r7, [sl, #56]	; 0x38
   31f60:	cmp	r7, #0
   31f64:	beq	31ed0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   31f68:	ldr	r1, [sl, #4]
   31f6c:	movw	r2, #33748	; 0x83d4
   31f70:	movt	r2, #5
   31f74:	mov	ip, #0
   31f78:	mov	r3, ip
   31f7c:	mov	r0, fp
   31f80:	str	ip, [sp]
   31f84:	str	ip, [sp, #4]
   31f88:	bl	2b548 <__flatcc_error_report@@Base>
   31f8c:	mov	r3, #1
   31f90:	strh	r3, [sl, #24]
   31f94:	ldr	sl, [sl]
   31f98:	cmp	sl, #0
   31f9c:	bne	31724 <__flatcc_fb_clear_parser@@Base+0x1648>
   31fa0:	b	31998 <__flatcc_fb_clear_parser@@Base+0x18bc>
   31fa4:	ldrh	r2, [sl, #56]	; 0x38
   31fa8:	cmp	r2, #13
   31fac:	addne	r1, sl, #48	; 0x30
   31fb0:	beq	32c20 <__flatcc_fb_clear_parser@@Base+0x2b44>
   31fb4:	cmp	r2, #0
   31fb8:	bne	31fd4 <__flatcc_fb_clear_parser@@Base+0x1ef8>
   31fbc:	ldr	r2, [sp, #52]	; 0x34
   31fc0:	mov	r3, #5
   31fc4:	str	r2, [sl, #48]	; 0x30
   31fc8:	ldr	r2, [sp, #56]	; 0x38
   31fcc:	strh	r3, [sl, #56]	; 0x38
   31fd0:	str	r2, [sl, #52]	; 0x34
   31fd4:	mov	r3, r1
   31fd8:	mov	r0, fp
   31fdc:	ldr	r2, [sl, #16]
   31fe0:	mov	r1, sl
   31fe4:	bl	34fd4 <__flatcc_fb_coerce_scalar_type@@Base>
   31fe8:	cmp	r0, #0
   31fec:	bne	31f8c <__flatcc_fb_clear_parser@@Base+0x1eb0>
   31ff0:	ldr	r3, [sl, #16]
   31ff4:	mov	r7, #1
   31ff8:	str	r0, [sl, #92]	; 0x5c
   31ffc:	ldr	r2, [sp, #32]
   32000:	add	r3, r2, r3, lsl #2
   32004:	ldr	r3, [r3, #128]	; 0x80
   32008:	strh	r3, [sl, #74]	; 0x4a
   3200c:	str	r3, [sl, #88]	; 0x58
   32010:	b	31ed0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   32014:	ldr	r3, [sl, #16]
   32018:	mov	ip, #0
   3201c:	ldr	r2, [sp, #32]
   32020:	str	ip, [sl, #92]	; 0x5c
   32024:	ldrh	r7, [sl, #56]	; 0x38
   32028:	add	r3, r2, r3, lsl #2
   3202c:	ldr	r3, [r3, #128]	; 0x80
   32030:	cmp	r7, ip
   32034:	strh	r3, [sl, #74]	; 0x4a
   32038:	str	r3, [sl, #88]	; 0x58
   3203c:	beq	31ed0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   32040:	movw	r2, #33668	; 0x8384
   32044:	movt	r2, #5
   32048:	ldr	r1, [sl, #4]
   3204c:	mov	r3, ip
   32050:	b	31f7c <__flatcc_fb_clear_parser@@Base+0x1ea0>
   32054:	ldrh	r7, [sl, #56]	; 0x38
   32058:	cmp	r7, #0
   3205c:	bne	32bac <__flatcc_fb_clear_parser@@Base+0x2ad0>
   32060:	ldr	r2, [sp, #8]
   32064:	cmp	r3, #4
   32068:	mov	r0, #15
   3206c:	ldrh	r1, [r2, #104]	; 0x68
   32070:	str	r2, [sl, #16]
   32074:	ldrd	r2, [r2, #112]	; 0x70
   32078:	strh	r0, [sl, #24]
   3207c:	strh	r1, [sl, #74]	; 0x4a
   32080:	strd	r2, [sl, #88]	; 0x58
   32084:	bne	31ed0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   32088:	ldr	r3, [sp, #24]
   3208c:	cmp	r3, #0
   32090:	bne	32eb8 <__flatcc_fb_clear_parser@@Base+0x2ddc>
   32094:	ldr	r2, [sp, #44]	; 0x2c
   32098:	cmp	r2, #0
   3209c:	bne	320ac <__flatcc_fb_clear_parser@@Base+0x1fd0>
   320a0:	ldrh	r3, [sp, #16]
   320a4:	str	r3, [sl, #96]	; 0x60
   320a8:	str	r2, [sl, #100]	; 0x64
   320ac:	ldr	r3, [sp, #16]
   320b0:	mov	r7, #0
   320b4:	adds	r3, r3, #1
   320b8:	str	r3, [sp, #16]
   320bc:	ldr	r3, [sp, #20]
   320c0:	adc	r3, r3, r7
   320c4:	str	r3, [sp, #20]
   320c8:	b	31edc <__flatcc_fb_clear_parser@@Base+0x1e00>
   320cc:	ldr	r3, [sp, #28]
   320d0:	ldrd	r0, [r3, #8]
   320d4:	ldrd	r2, [fp, #216]	; 0xd8
   320d8:	cmp	r1, r3
   320dc:	cmpeq	r0, r2
   320e0:	bcs	32f1c <__flatcc_fb_clear_parser@@Base+0x2e40>
   320e4:	uxth	r3, r0
   320e8:	ldrd	r0, [sp, #72]	; 0x48
   320ec:	str	r3, [sp, #80]	; 0x50
   320f0:	str	ip, [sp, #84]	; 0x54
   320f4:	ldrd	r2, [sp, #80]	; 0x50
   320f8:	cmp	r1, r3
   320fc:	strd	r2, [sl, #96]	; 0x60
   32100:	cmpeq	r0, r2
   32104:	strdcc	r2, [sp, #72]	; 0x48
   32108:	ldr	r3, [sp, #44]	; 0x2c
   3210c:	cmp	r3, #0
   32110:	beq	33274 <__flatcc_fb_clear_parser@@Base+0x3198>
   32114:	ldr	r1, [sp, #64]	; 0x40
   32118:	ldr	r3, [sl, #96]	; 0x60
   3211c:	ldrb	r2, [r1, r3]
   32120:	add	r3, r1, r3
   32124:	cmp	r2, #2
   32128:	beq	32a1c <__flatcc_fb_clear_parser@@Base+0x2940>
   3212c:	cmp	r2, #0
   32130:	moveq	r2, #1
   32134:	strbeq	r2, [r3]
   32138:	bne	32978 <__flatcc_fb_clear_parser@@Base+0x289c>
   3213c:	ldr	r3, [sp, #8]
   32140:	cmp	r3, #0
   32144:	beq	32158 <__flatcc_fb_clear_parser@@Base+0x207c>
   32148:	ldrh	r3, [r3, #8]
   3214c:	cmp	r3, #4
   32150:	movne	r3, #0
   32154:	beq	328f4 <__flatcc_fb_clear_parser@@Base+0x2818>
   32158:	str	r3, [sp, #24]
   3215c:	ldrh	r3, [sl, #72]	; 0x48
   32160:	tst	r3, #128	; 0x80
   32164:	beq	3198c <__flatcc_fb_clear_parser@@Base+0x18b0>
   32168:	ldr	r3, [sp, #60]	; 0x3c
   3216c:	cmp	r7, #0
   32170:	add	r3, r3, #1
   32174:	str	r3, [sp, #60]	; 0x3c
   32178:	bne	3198c <__flatcc_fb_clear_parser@@Base+0x18b0>
   3217c:	mov	ip, #0
   32180:	movw	r2, #34680	; 0x8778
   32184:	movt	r2, #5
   32188:	mov	r3, ip
   3218c:	ldr	r1, [sl, #4]
   32190:	mov	r0, fp
   32194:	str	ip, [sp]
   32198:	str	ip, [sp, #4]
   3219c:	bl	2b548 <__flatcc_error_report@@Base>
   321a0:	ldr	sl, [sl]
   321a4:	cmp	sl, #0
   321a8:	bne	31724 <__flatcc_fb_clear_parser@@Base+0x1648>
   321ac:	b	31998 <__flatcc_fb_clear_parser@@Base+0x18bc>
   321b0:	ldr	r3, [r4]
   321b4:	cmp	r3, #0
   321b8:	beq	32238 <__flatcc_fb_clear_parser@@Base+0x215c>
   321bc:	mov	r5, #0
   321c0:	b	321c8 <__flatcc_fb_clear_parser@@Base+0x20ec>
   321c4:	mov	r5, r2
   321c8:	ldr	r3, [r3]
   321cc:	add	r2, r5, #1
   321d0:	cmp	r3, #0
   321d4:	bne	321c4 <__flatcc_fb_clear_parser@@Base+0x20e8>
   321d8:	ldr	r3, [sp, #12]
   321dc:	cmp	r3, #0
   321e0:	beq	32238 <__flatcc_fb_clear_parser@@Base+0x215c>
   321e4:	rsb	r5, r5, #0
   321e8:	ldr	r0, [fp, #412]	; 0x19c
   321ec:	b	32214 <__flatcc_fb_clear_parser@@Base+0x2138>
   321f0:	cmp	r0, #0
   321f4:	beq	32210 <__flatcc_fb_clear_parser@@Base+0x2134>
   321f8:	mov	r2, r5
   321fc:	ldr	r1, [r4]
   32200:	bl	291dc <fb_scope_table_find@@Base>
   32204:	cmp	r0, #0
   32208:	bne	3226c <__flatcc_fb_clear_parser@@Base+0x2190>
   3220c:	ldr	r0, [fp, #412]	; 0x19c
   32210:	add	r5, r5, #1
   32214:	cmp	r5, #0
   32218:	bne	321f0 <__flatcc_fb_clear_parser@@Base+0x2114>
   3221c:	cmp	r0, #0
   32220:	beq	32238 <__flatcc_fb_clear_parser@@Base+0x215c>
   32224:	mov	r2, r5
   32228:	mov	r1, r5
   3222c:	bl	291dc <fb_scope_table_find@@Base>
   32230:	subs	r4, r0, #0
   32234:	bne	31b88 <__flatcc_fb_clear_parser@@Base+0x1aac>
   32238:	ldr	r1, [r7, #8]
   3223c:	str	r9, [sp, #8]
   32240:	ldr	ip, [r7, #12]
   32244:	movw	r2, #33216	; 0x81c0
   32248:	movt	r2, #5
   3224c:	ldr	lr, [r7, #4]
   32250:	mov	r3, #0
   32254:	mov	r0, fp
   32258:	stm	sp, {r1, ip}
   3225c:	mov	r1, lr
   32260:	bl	2b548 <__flatcc_error_report@@Base>
   32264:	ldrh	r5, [sl, #72]	; 0x48
   32268:	b	31bf0 <__flatcc_fb_clear_parser@@Base+0x1b14>
   3226c:	mov	r4, r0
   32270:	b	31b88 <__flatcc_fb_clear_parser@@Base+0x1aac>
   32274:	mov	r3, ip
   32278:	movw	r2, #31316	; 0x7a54
   3227c:	movt	r2, #5
   32280:	mov	r0, fp
   32284:	ldr	r1, [r4, #4]
   32288:	str	ip, [sp]
   3228c:	str	ip, [sp, #4]
   32290:	bl	2b548 <__flatcc_error_report@@Base>
   32294:	b	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   32298:	mov	ip, #0
   3229c:	movw	r2, #33076	; 0x8134
   322a0:	movt	r2, #5
   322a4:	mov	r0, fp
   322a8:	ldr	r1, [sl, #4]
   322ac:	ldr	r3, [r3, #4]
   322b0:	str	ip, [sp]
   322b4:	str	ip, [sp, #4]
   322b8:	bl	2b548 <__flatcc_error_report@@Base>
   322bc:	ldr	sl, [sl]
   322c0:	cmp	sl, #0
   322c4:	bne	31724 <__flatcc_fb_clear_parser@@Base+0x1648>
   322c8:	b	31998 <__flatcc_fb_clear_parser@@Base+0x18bc>
   322cc:	ldr	r3, [r4]
   322d0:	cmp	r3, #0
   322d4:	beq	32354 <__flatcc_fb_clear_parser@@Base+0x2278>
   322d8:	mov	r8, #0
   322dc:	b	322e4 <__flatcc_fb_clear_parser@@Base+0x2208>
   322e0:	mov	r8, r2
   322e4:	ldr	r3, [r3]
   322e8:	add	r2, r8, #1
   322ec:	cmp	r3, #0
   322f0:	bne	322e0 <__flatcc_fb_clear_parser@@Base+0x2204>
   322f4:	ldr	r3, [sp, #12]
   322f8:	cmp	r3, #0
   322fc:	beq	32354 <__flatcc_fb_clear_parser@@Base+0x2278>
   32300:	rsb	r8, r8, #0
   32304:	ldr	r0, [fp, #412]	; 0x19c
   32308:	b	32330 <__flatcc_fb_clear_parser@@Base+0x2254>
   3230c:	cmp	r0, #0
   32310:	beq	3232c <__flatcc_fb_clear_parser@@Base+0x2250>
   32314:	mov	r2, r8
   32318:	ldr	r1, [r4]
   3231c:	bl	291dc <fb_scope_table_find@@Base>
   32320:	cmp	r0, #0
   32324:	bne	32588 <__flatcc_fb_clear_parser@@Base+0x24ac>
   32328:	ldr	r0, [fp, #412]	; 0x19c
   3232c:	add	r8, r8, #1
   32330:	cmp	r8, #0
   32334:	bne	3230c <__flatcc_fb_clear_parser@@Base+0x2230>
   32338:	cmp	r0, #0
   3233c:	beq	32354 <__flatcc_fb_clear_parser@@Base+0x2278>
   32340:	mov	r2, r8
   32344:	mov	r1, r8
   32348:	bl	291dc <fb_scope_table_find@@Base>
   3234c:	subs	r4, r0, #0
   32350:	bne	31e5c <__flatcc_fb_clear_parser@@Base+0x1d80>
   32354:	ldr	ip, [sl, #16]
   32358:	movw	r2, #34192	; 0x8590
   3235c:	movt	r2, #5
   32360:	mov	r1, ip
   32364:	mov	r3, sl
   32368:	mov	r0, fp
   3236c:	bl	2cdd4 <error_ref_sym@@Base>
   32370:	mov	r3, #1
   32374:	strh	r3, [sl, #24]
   32378:	ldr	sl, [sl]
   3237c:	cmp	sl, #0
   32380:	bne	31724 <__flatcc_fb_clear_parser@@Base+0x1648>
   32384:	b	31998 <__flatcc_fb_clear_parser@@Base+0x18bc>
   32388:	ldr	r3, [r4]
   3238c:	cmp	r3, #0
   32390:	beq	32410 <__flatcc_fb_clear_parser@@Base+0x2334>
   32394:	mov	r9, #0
   32398:	b	323a0 <__flatcc_fb_clear_parser@@Base+0x22c4>
   3239c:	mov	r9, r2
   323a0:	ldr	r3, [r3]
   323a4:	add	r2, r9, #1
   323a8:	cmp	r3, #0
   323ac:	bne	3239c <__flatcc_fb_clear_parser@@Base+0x22c0>
   323b0:	ldr	r3, [sp, #12]
   323b4:	cmp	r3, #0
   323b8:	beq	32410 <__flatcc_fb_clear_parser@@Base+0x2334>
   323bc:	rsb	r9, r9, #0
   323c0:	ldr	r0, [fp, #412]	; 0x19c
   323c4:	b	323ec <__flatcc_fb_clear_parser@@Base+0x2310>
   323c8:	cmp	r0, #0
   323cc:	beq	323e8 <__flatcc_fb_clear_parser@@Base+0x230c>
   323d0:	mov	r2, r9
   323d4:	ldr	r1, [r4]
   323d8:	bl	291dc <fb_scope_table_find@@Base>
   323dc:	cmp	r0, #0
   323e0:	bne	32580 <__flatcc_fb_clear_parser@@Base+0x24a4>
   323e4:	ldr	r0, [fp, #412]	; 0x19c
   323e8:	add	r9, r9, #1
   323ec:	cmp	r9, #0
   323f0:	bne	323c8 <__flatcc_fb_clear_parser@@Base+0x22ec>
   323f4:	cmp	r0, #0
   323f8:	beq	32410 <__flatcc_fb_clear_parser@@Base+0x2334>
   323fc:	mov	r2, r9
   32400:	mov	r1, r9
   32404:	bl	291dc <fb_scope_table_find@@Base>
   32408:	subs	r4, r0, #0
   3240c:	bne	31d9c <__flatcc_fb_clear_parser@@Base+0x1cc0>
   32410:	ldr	ip, [sl, #16]
   32414:	mov	r3, sl
   32418:	mov	r1, ip
   3241c:	movw	r2, #33792	; 0x8400
   32420:	movt	r2, #5
   32424:	mov	r0, fp
   32428:	bl	2cdd4 <error_ref_sym@@Base>
   3242c:	mov	r3, #1
   32430:	strh	r3, [sl, #24]
   32434:	str	r3, [sp, #24]
   32438:	b	3198c <__flatcc_fb_clear_parser@@Base+0x18b0>
   3243c:	ldrh	r3, [r4, #16]
   32440:	cmp	r3, #5
   32444:	beq	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   32448:	mov	r3, lr
   3244c:	movw	r2, #31512	; 0x7b18
   32450:	movt	r2, #5
   32454:	mov	r0, fp
   32458:	ldr	r1, [r4, #4]
   3245c:	str	lr, [sp]
   32460:	str	lr, [sp, #4]
   32464:	bl	2b548 <__flatcc_error_report@@Base>
   32468:	b	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   3246c:	cmp	ip, #6
   32470:	bne	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   32474:	ldrh	r3, [r4, #16]
   32478:	cmp	r3, #6
   3247c:	beq	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   32480:	mov	ip, #0
   32484:	mov	r2, r8
   32488:	ldr	r1, [r4, #4]
   3248c:	mov	r3, ip
   32490:	mov	r0, fp
   32494:	str	ip, [sp]
   32498:	str	ip, [sp, #4]
   3249c:	bl	2b548 <__flatcc_error_report@@Base>
   324a0:	b	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   324a4:	ldr	r3, [fp, #112]	; 0x70
   324a8:	mov	r1, #0
   324ac:	ldr	r2, [fp, #216]	; 0xd8
   324b0:	mov	r0, r3
   324b4:	str	r3, [sp, #64]	; 0x40
   324b8:	bl	13f78 <memset@plt>
   324bc:	ldr	r3, [sp, #24]
   324c0:	cmp	r3, #0
   324c4:	bne	325ec <__flatcc_fb_clear_parser@@Base+0x2510>
   324c8:	ldrd	r2, [fp, #216]	; 0xd8
   324cc:	orrs	r3, r2, r3
   324d0:	mov	r3, #1
   324d4:	str	r3, [sp, #44]	; 0x2c
   324d8:	bne	31d00 <__flatcc_fb_clear_parser@@Base+0x1c24>
   324dc:	mov	ip, #0
   324e0:	ldr	r1, [sl, #4]
   324e4:	movw	r2, #33580	; 0x832c
   324e8:	movt	r2, #5
   324ec:	mov	r3, ip
   324f0:	str	ip, [sp]
   324f4:	mov	r0, fp
   324f8:	str	ip, [sp, #4]
   324fc:	mov	ip, #1
   32500:	str	ip, [sp, #24]
   32504:	bl	2b548 <__flatcc_error_report@@Base>
   32508:	b	31d00 <__flatcc_fb_clear_parser@@Base+0x1c24>
   3250c:	ldr	r3, [sp, #12]
   32510:	cmp	r3, #0
   32514:	beq	32244 <__flatcc_fb_clear_parser@@Base+0x2168>
   32518:	ldr	r0, [fp, #412]	; 0x19c
   3251c:	cmp	r0, #0
   32520:	beq	32244 <__flatcc_fb_clear_parser@@Base+0x2168>
   32524:	cmp	r2, #0
   32528:	moveq	r1, #0
   3252c:	bl	291dc <fb_scope_table_find@@Base>
   32530:	cmp	r0, #0
   32534:	beq	32550 <__flatcc_fb_clear_parser@@Base+0x2474>
   32538:	mov	r1, r8
   3253c:	add	r0, r0, #4
   32540:	ldr	r2, [sp, #28]
   32544:	bl	28274 <fb_symbol_table_find@@Base>
   32548:	subs	r3, r0, #0
   3254c:	bne	31bc8 <__flatcc_fb_clear_parser@@Base+0x1aec>
   32550:	ldr	r1, [r7, #8]
   32554:	ldr	ip, [r7, #12]
   32558:	b	32244 <__flatcc_fb_clear_parser@@Base+0x2168>
   3255c:	mov	r3, ip
   32560:	movw	r2, #31436	; 0x7acc
   32564:	movt	r2, #5
   32568:	mov	r0, fp
   3256c:	ldr	r1, [r4, #4]
   32570:	str	ip, [sp]
   32574:	str	ip, [sp, #4]
   32578:	bl	2b548 <__flatcc_error_report@@Base>
   3257c:	b	3180c <__flatcc_fb_clear_parser@@Base+0x1730>
   32580:	mov	r4, r0
   32584:	b	31d9c <__flatcc_fb_clear_parser@@Base+0x1cc0>
   32588:	mov	r4, r0
   3258c:	b	31e5c <__flatcc_fb_clear_parser@@Base+0x1d80>
   32590:	ldr	r3, [sl, #16]
   32594:	cmp	r3, #4
   32598:	bne	31c60 <__flatcc_fb_clear_parser@@Base+0x1b84>
   3259c:	and	r5, r5, #3072	; 0xc00
   325a0:	cmp	r5, #3072	; 0xc00
   325a4:	bne	31c94 <__flatcc_fb_clear_parser@@Base+0x1bb8>
   325a8:	mov	ip, #0
   325ac:	movw	r2, #33524	; 0x82f4
   325b0:	movt	r2, #5
   325b4:	mov	r3, ip
   325b8:	ldr	r1, [sl, #4]
   325bc:	mov	r0, fp
   325c0:	str	ip, [sp]
   325c4:	str	ip, [sp, #4]
   325c8:	bl	2b548 <__flatcc_error_report@@Base>
   325cc:	b	31c94 <__flatcc_fb_clear_parser@@Base+0x1bb8>
   325d0:	str	r9, [sp, #8]
   325d4:	mov	r8, r2
   325d8:	sub	r2, r5, r3
   325dc:	str	r2, [sp, #28]
   325e0:	mov	r2, r3
   325e4:	add	r8, r1, r8
   325e8:	b	31b64 <__flatcc_fb_clear_parser@@Base+0x1a88>
   325ec:	mov	r2, #0
   325f0:	str	r3, [sp, #44]	; 0x2c
   325f4:	mov	r3, #0
   325f8:	strd	r2, [sp, #16]
   325fc:	b	31d18 <__flatcc_fb_clear_parser@@Base+0x1c3c>
   32600:	mov	r3, ip
   32604:	movw	r2, #31316	; 0x7a54
   32608:	movt	r2, #5
   3260c:	mov	r0, fp
   32610:	ldr	r1, [r4, #4]
   32614:	str	ip, [sp]
   32618:	str	ip, [sp, #4]
   3261c:	bl	2b548 <__flatcc_error_report@@Base>
   32620:	b	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   32624:	ldrh	r3, [r4, #16]
   32628:	cmp	r3, #5
   3262c:	beq	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   32630:	mov	r3, ip
   32634:	movw	r2, #31512	; 0x7b18
   32638:	movt	r2, #5
   3263c:	mov	r0, fp
   32640:	ldr	r1, [r4, #4]
   32644:	str	ip, [sp]
   32648:	str	ip, [sp, #4]
   3264c:	bl	2b548 <__flatcc_error_report@@Base>
   32650:	b	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   32654:	cmp	lr, #6
   32658:	bne	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   3265c:	ldrh	r3, [r4, #16]
   32660:	cmp	r3, #6
   32664:	beq	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   32668:	mov	ip, #0
   3266c:	mov	r2, r8
   32670:	ldr	r1, [r4, #4]
   32674:	mov	r3, ip
   32678:	mov	r0, fp
   3267c:	str	ip, [sp]
   32680:	str	ip, [sp, #4]
   32684:	bl	2b548 <__flatcc_error_report@@Base>
   32688:	b	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   3268c:	mov	ip, #0
   32690:	movw	r2, #33344	; 0x8240
   32694:	movt	r2, #5
   32698:	mov	r3, ip
   3269c:	ldr	r1, [sl, #4]
   326a0:	mov	r0, fp
   326a4:	str	ip, [sp]
   326a8:	str	ip, [sp, #4]
   326ac:	bl	2b548 <__flatcc_error_report@@Base>
   326b0:	ldrh	r5, [sl, #72]	; 0x48
   326b4:	b	31c04 <__flatcc_fb_clear_parser@@Base+0x1b28>
   326b8:	cmp	r0, #1
   326bc:	moveq	r1, r3
   326c0:	ldr	r3, [sp, #12]
   326c4:	movne	r1, ip
   326c8:	cmp	r3, #0
   326cc:	beq	32358 <__flatcc_fb_clear_parser@@Base+0x227c>
   326d0:	ldr	r0, [fp, #412]	; 0x19c
   326d4:	cmp	r0, #0
   326d8:	beq	32358 <__flatcc_fb_clear_parser@@Base+0x227c>
   326dc:	rsb	r2, r2, #0
   326e0:	bl	291dc <fb_scope_table_find@@Base>
   326e4:	cmp	r0, #0
   326e8:	beq	32354 <__flatcc_fb_clear_parser@@Base+0x2278>
   326ec:	ldr	r3, [r5, #4]
   326f0:	add	r0, r0, #4
   326f4:	ldm	r3, {r1, r2}
   326f8:	bl	28274 <fb_symbol_table_find@@Base>
   326fc:	subs	r3, r0, #0
   32700:	str	r3, [sp, #8]
   32704:	beq	32354 <__flatcc_fb_clear_parser@@Base+0x2278>
   32708:	ldrh	r3, [r3, #8]
   3270c:	cmp	r3, #4
   32710:	bhi	32354 <__flatcc_fb_clear_parser@@Base+0x2278>
   32714:	ldr	r3, [sp, #8]
   32718:	add	r0, fp, #524	; 0x20c
   3271c:	ldr	r1, [r3, #16]
   32720:	bl	27794 <ptr_set_find_item@@Base>
   32724:	cmp	r0, #0
   32728:	bne	31e98 <__flatcc_fb_clear_parser@@Base+0x1dbc>
   3272c:	b	32354 <__flatcc_fb_clear_parser@@Base+0x2278>
   32730:	cmp	r3, #1
   32734:	ldr	r3, [sp, #12]
   32738:	movne	r1, ip
   3273c:	moveq	r1, #0
   32740:	cmp	r3, #0
   32744:	beq	32414 <__flatcc_fb_clear_parser@@Base+0x2338>
   32748:	ldr	r0, [fp, #412]	; 0x19c
   3274c:	cmp	r0, #0
   32750:	beq	32414 <__flatcc_fb_clear_parser@@Base+0x2338>
   32754:	rsb	r2, r2, #0
   32758:	bl	291dc <fb_scope_table_find@@Base>
   3275c:	cmp	r0, #0
   32760:	beq	32410 <__flatcc_fb_clear_parser@@Base+0x2334>
   32764:	ldr	r3, [r7, #4]
   32768:	add	r0, r0, #4
   3276c:	ldm	r3, {r1, r2}
   32770:	bl	28274 <fb_symbol_table_find@@Base>
   32774:	subs	r3, r0, #0
   32778:	str	r3, [sp, #8]
   3277c:	beq	32410 <__flatcc_fb_clear_parser@@Base+0x2334>
   32780:	ldrh	r3, [r3, #8]
   32784:	cmp	r3, #4
   32788:	bhi	32410 <__flatcc_fb_clear_parser@@Base+0x2334>
   3278c:	ldr	r2, [sp, #8]
   32790:	add	r3, fp, #524	; 0x20c
   32794:	mov	r0, r3
   32798:	str	r3, [sp, #68]	; 0x44
   3279c:	ldr	r1, [r2, #16]
   327a0:	bl	27794 <ptr_set_find_item@@Base>
   327a4:	cmp	r0, #0
   327a8:	bne	31ddc <__flatcc_fb_clear_parser@@Base+0x1d00>
   327ac:	b	32410 <__flatcc_fb_clear_parser@@Base+0x2334>
   327b0:	ldrd	r0, [sp, #16]
   327b4:	ldr	r3, [sp, #44]	; 0x2c
   327b8:	cmp	r3, #0
   327bc:	ldr	r3, [sp, #40]	; 0x28
   327c0:	strd	r0, [r3, #96]	; 0x60
   327c4:	beq	331e0 <__flatcc_fb_clear_parser@@Base+0x3104>
   327c8:	ldrd	r4, [sp, #72]	; 0x48
   327cc:	mov	r3, r0
   327d0:	orrs	r3, r3, r1
   327d4:	movne	r3, #1
   327d8:	moveq	r3, #0
   327dc:	cmp	r1, r5
   327e0:	cmpeq	r0, r4
   327e4:	movhi	r3, #0
   327e8:	andls	r3, r3, #1
   327ec:	cmp	r3, #0
   327f0:	beq	32ac8 <__flatcc_fb_clear_parser@@Base+0x29ec>
   327f4:	mov	r2, r4
   327f8:	mov	r3, r5
   327fc:	orrs	r1, r2, r3
   32800:	beq	32888 <__flatcc_fb_clear_parser@@Base+0x27ac>
   32804:	ldr	r1, [sp, #64]	; 0x40
   32808:	mov	r5, #0
   3280c:	movw	sl, #34756	; 0x87c4
   32810:	movt	sl, #5
   32814:	mov	r8, r5
   32818:	add	r6, r1, r2
   3281c:	sub	r4, r1, #1
   32820:	sub	r6, r6, #1
   32824:	mov	r1, #10
   32828:	ldrb	r7, [r4, #1]!
   3282c:	cmp	r7, #0
   32830:	bne	32878 <__flatcc_fb_clear_parser@@Base+0x279c>
   32834:	cmp	r1, #0
   32838:	sub	r9, r1, #1
   3283c:	beq	32f30 <__flatcc_fb_clear_parser@@Base+0x2e54>
   32840:	mov	r2, r5
   32844:	mov	r3, r8
   32848:	mov	r1, sl
   3284c:	add	r0, sp, #148	; 0x94
   32850:	bl	13fcc <sprintf@plt>
   32854:	ldr	r1, [sp, #40]	; 0x28
   32858:	mov	r3, r7
   3285c:	add	r2, sp, #148	; 0x94
   32860:	mov	r0, fp
   32864:	str	r7, [sp]
   32868:	str	r7, [sp, #4]
   3286c:	ldr	r1, [r1, #4]
   32870:	bl	2b548 <__flatcc_error_report@@Base>
   32874:	mov	r1, r9
   32878:	adds	r5, r5, #1
   3287c:	adc	r8, r8, #0
   32880:	cmp	r4, r6
   32884:	bne	32828 <__flatcc_fb_clear_parser@@Base+0x274c>
   32888:	ldr	r2, [sp, #60]	; 0x3c
   3288c:	cmp	r2, #0
   32890:	beq	319e8 <__flatcc_fb_clear_parser@@Base+0x190c>
   32894:	ldr	r1, [sp, #40]	; 0x28
   32898:	cmp	r2, #1
   3289c:	ldrh	r3, [r1, #10]
   328a0:	orr	r3, r3, #8
   328a4:	strh	r3, [r1, #10]
   328a8:	beq	319e8 <__flatcc_fb_clear_parser@@Base+0x190c>
   328ac:	ldr	r3, [fp, #156]	; 0x9c
   328b0:	cmp	r3, #0
   328b4:	bne	319e8 <__flatcc_fb_clear_parser@@Base+0x190c>
   328b8:	ldr	r3, [sp, #40]	; 0x28
   328bc:	mov	ip, #0
   328c0:	mov	r0, fp
   328c4:	movw	r2, #34808	; 0x87f8
   328c8:	movt	r2, #5
   328cc:	ldr	lr, [sp, #44]	; 0x2c
   328d0:	ldr	r1, [r3, #4]
   328d4:	mov	r3, ip
   328d8:	str	ip, [sp]
   328dc:	str	ip, [sp, #4]
   328e0:	mvn	ip, #0
   328e4:	str	lr, [sp, #24]
   328e8:	str	ip, [sp, #60]	; 0x3c
   328ec:	bl	2b548 <__flatcc_error_report@@Base>
   328f0:	b	319dc <__flatcc_fb_clear_parser@@Base+0x1900>
   328f4:	ldrd	r0, [sl, #96]	; 0x60
   328f8:	ldrh	r3, [sl, #24]
   328fc:	cmp	r1, #0
   32900:	cmpeq	r0, #1
   32904:	bls	32bc0 <__flatcc_fb_clear_parser@@Base+0x2ae4>
   32908:	ldr	r1, [sp, #64]	; 0x40
   3290c:	sub	r0, r0, #1
   32910:	ldrb	r2, [r1, r0]
   32914:	add	r0, r1, r0
   32918:	cmp	r2, #2
   3291c:	beq	32f68 <__flatcc_fb_clear_parser@@Base+0x2e8c>
   32920:	cmp	r2, #0
   32924:	beq	32f58 <__flatcc_fb_clear_parser@@Base+0x2e7c>
   32928:	ldr	r2, [sp, #28]
   3292c:	movw	ip, #32892	; 0x807c
   32930:	movt	ip, #5
   32934:	mov	r0, #0
   32938:	ldr	r1, [r2, #4]
   3293c:	movw	r2, #32980	; 0x80d4
   32940:	movt	r2, #5
   32944:	b	32bdc <__flatcc_fb_clear_parser@@Base+0x2b00>
   32948:	mov	ip, #0
   3294c:	movw	r2, #34360	; 0x8638
   32950:	movt	r2, #5
   32954:	ldr	r1, [r3, #4]
   32958:	mov	r3, ip
   3295c:	str	ip, [sp]
   32960:	mov	r0, fp
   32964:	str	ip, [sp, #4]
   32968:	mov	ip, #1
   3296c:	str	ip, [sp, #24]
   32970:	bl	2b548 <__flatcc_error_report@@Base>
   32974:	b	3215c <__flatcc_fb_clear_parser@@Base+0x2080>
   32978:	ldr	r3, [sp, #28]
   3297c:	mov	ip, #0
   32980:	movw	r2, #34632	; 0x8748
   32984:	movt	r2, #5
   32988:	mov	r0, fp
   3298c:	ldr	r1, [r3, #4]
   32990:	mov	r3, ip
   32994:	str	ip, [sp]
   32998:	str	ip, [sp, #4]
   3299c:	bl	2b548 <__flatcc_error_report@@Base>
   329a0:	b	3213c <__flatcc_fb_clear_parser@@Base+0x2060>
   329a4:	ldr	r8, [sp, #8]
   329a8:	mvn	ip, #0
   329ac:	movw	r2, #33112	; 0x8158
   329b0:	movt	r2, #5
   329b4:	mov	r0, fp
   329b8:	ldr	r1, [sl, #4]
   329bc:	mov	r3, r8
   329c0:	str	r8, [sp]
   329c4:	str	r8, [sp, #4]
   329c8:	str	ip, [sp, #60]	; 0x3c
   329cc:	bl	2b548 <__flatcc_error_report@@Base>
   329d0:	ldr	r0, [sp, #60]	; 0x3c
   329d4:	add	sp, sp, #252	; 0xfc
   329d8:	ldrd	r4, [sp]
   329dc:	ldrd	r6, [sp, #8]
   329e0:	ldrd	r8, [sp, #16]
   329e4:	ldrd	sl, [sp, #24]
   329e8:	add	sp, sp, #32
   329ec:	pop	{pc}		; (ldr pc, [sp], #4)
   329f0:	mov	ip, #1
   329f4:	mov	r3, lr
   329f8:	ldr	r1, [sl, #4]
   329fc:	movw	r2, #34424	; 0x8678
   32a00:	movt	r2, #5
   32a04:	str	lr, [sp]
   32a08:	mov	r0, fp
   32a0c:	str	lr, [sp, #4]
   32a10:	str	ip, [sp, #24]
   32a14:	bl	2b548 <__flatcc_error_report@@Base>
   32a18:	b	3215c <__flatcc_fb_clear_parser@@Base+0x2080>
   32a1c:	ldr	r3, [sp, #28]
   32a20:	mov	ip, #0
   32a24:	movw	r2, #34576	; 0x8710
   32a28:	movt	r2, #5
   32a2c:	mov	r0, fp
   32a30:	ldr	r1, [r3, #4]
   32a34:	mov	r3, ip
   32a38:	str	ip, [sp]
   32a3c:	str	ip, [sp, #4]
   32a40:	ldr	ip, [sp, #44]	; 0x2c
   32a44:	str	ip, [sp, #24]
   32a48:	bl	2b548 <__flatcc_error_report@@Base>
   32a4c:	b	3215c <__flatcc_fb_clear_parser@@Base+0x2080>
   32a50:	mov	r3, lr
   32a54:	movw	r2, #31436	; 0x7acc
   32a58:	movt	r2, #5
   32a5c:	mov	r0, fp
   32a60:	ldr	r1, [r4, #4]
   32a64:	str	lr, [sp]
   32a68:	str	lr, [sp, #4]
   32a6c:	bl	2b548 <__flatcc_error_report@@Base>
   32a70:	b	31564 <__flatcc_fb_clear_parser@@Base+0x1488>
   32a74:	ldr	r3, [sp, #8]
   32a78:	movw	r2, #33896	; 0x8468
   32a7c:	movt	r2, #5
   32a80:	mov	ip, #0
   32a84:	mov	r0, fp
   32a88:	ldr	r1, [sl, #4]
   32a8c:	ldr	r3, [r3, #4]
   32a90:	str	ip, [sp]
   32a94:	str	ip, [sp, #4]
   32a98:	bl	2b548 <__flatcc_error_report@@Base>
   32a9c:	mov	r3, #1
   32aa0:	strh	r3, [sl, #24]
   32aa4:	ldr	sl, [sl]
   32aa8:	cmp	sl, #0
   32aac:	bne	31724 <__flatcc_fb_clear_parser@@Base+0x1648>
   32ab0:	b	31998 <__flatcc_fb_clear_parser@@Base+0x18bc>
   32ab4:	ldrh	r3, [sl, #72]	; 0x48
   32ab8:	tst	r3, #256	; 0x100
   32abc:	bne	32ed4 <__flatcc_fb_clear_parser@@Base+0x2df8>
   32ac0:	ldr	r7, [fp, #148]	; 0x94
   32ac4:	b	318ac <__flatcc_fb_clear_parser@@Base+0x17d0>
   32ac8:	ldr	r2, [sp, #60]	; 0x3c
   32acc:	cmp	r2, #0
   32ad0:	beq	329d0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   32ad4:	ldr	r1, [sp, #40]	; 0x28
   32ad8:	cmp	r2, #1
   32adc:	ldrh	r3, [r1, #10]
   32ae0:	orr	r3, r3, #8
   32ae4:	strh	r3, [r1, #10]
   32ae8:	beq	32afc <__flatcc_fb_clear_parser@@Base+0x2a20>
   32aec:	ldr	r3, [fp, #156]	; 0x9c
   32af0:	cmp	r3, #0
   32af4:	str	r3, [sp, #44]	; 0x2c
   32af8:	beq	328b8 <__flatcc_fb_clear_parser@@Base+0x27dc>
   32afc:	ldr	r3, [sp, #24]
   32b00:	str	r3, [sp, #60]	; 0x3c
   32b04:	b	329d0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   32b08:	cmp	r0, #3
   32b0c:	bne	32bac <__flatcc_fb_clear_parser@@Base+0x2ad0>
   32b10:	cmp	r3, #13
   32b14:	beq	32f88 <__flatcc_fb_clear_parser@@Base+0x2eac>
   32b18:	ldr	r3, [sp, #8]
   32b1c:	add	r4, sl, #48	; 0x30
   32b20:	mov	r1, sl
   32b24:	mov	r0, fp
   32b28:	ldr	r2, [r3, #40]	; 0x28
   32b2c:	mov	r3, r4
   32b30:	bl	34fd4 <__flatcc_fb_coerce_scalar_type@@Base>
   32b34:	cmp	r0, #0
   32b38:	bne	31f8c <__flatcc_fb_clear_parser@@Base+0x1eb0>
   32b3c:	ldr	r3, [fp, #212]	; 0xd4
   32b40:	cmp	r3, #0
   32b44:	beq	31ed0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   32b48:	ldr	r0, [sl, #16]
   32b4c:	mov	r1, r4
   32b50:	add	r0, r0, #72	; 0x48
   32b54:	bl	3d92c <fb_value_set_find_item@@Base>
   32b58:	subs	ip, r0, #0
   32b5c:	bne	31ed0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   32b60:	movw	r2, #34072	; 0x8518
   32b64:	movt	r2, #5
   32b68:	ldr	r1, [sl, #4]
   32b6c:	mov	r3, ip
   32b70:	b	31f7c <__flatcc_fb_clear_parser@@Base+0x1ea0>
   32b74:	ldr	r1, [sp, #44]	; 0x2c
   32b78:	cmp	r1, #0
   32b7c:	bne	32b8c <__flatcc_fb_clear_parser@@Base+0x2ab0>
   32b80:	ldrh	r2, [sp, #16]
   32b84:	str	r2, [sl, #96]	; 0x60
   32b88:	str	r1, [sl, #100]	; 0x64
   32b8c:	ldr	r2, [sp, #16]
   32b90:	adds	r2, r2, #1
   32b94:	str	r2, [sp, #16]
   32b98:	ldr	r2, [sp, #20]
   32b9c:	adc	r2, r2, #0
   32ba0:	cmp	r3, #0
   32ba4:	str	r2, [sp, #20]
   32ba8:	beq	31edc <__flatcc_fb_clear_parser@@Base+0x1e00>
   32bac:	movw	r2, #33980	; 0x84bc
   32bb0:	movt	r2, #5
   32bb4:	ldr	r1, [sl, #4]
   32bb8:	mov	ip, #0
   32bbc:	b	31f78 <__flatcc_fb_clear_parser@@Base+0x1e9c>
   32bc0:	ldr	r2, [sp, #28]
   32bc4:	movw	ip, #32544	; 0x7f20
   32bc8:	movt	ip, #5
   32bcc:	mov	r0, #0
   32bd0:	ldr	r1, [r2, #4]
   32bd4:	movw	r2, #32624	; 0x7f70
   32bd8:	movt	r2, #5
   32bdc:	cmp	r3, #11
   32be0:	mov	r3, r0
   32be4:	str	r0, [sp]
   32be8:	moveq	r2, ip
   32bec:	ldr	ip, [sp, #44]	; 0x2c
   32bf0:	str	r0, [sp, #4]
   32bf4:	mov	r0, fp
   32bf8:	str	ip, [sp, #24]
   32bfc:	bl	2b548 <__flatcc_error_report@@Base>
   32c00:	b	3215c <__flatcc_fb_clear_parser@@Base+0x2080>
   32c04:	movw	r2, #34244	; 0x85c4
   32c08:	movt	r2, #5
   32c0c:	ldr	r1, [sl, #4]
   32c10:	mov	ip, #0
   32c14:	mov	r0, fp
   32c18:	ldr	r3, [sl, #16]
   32c1c:	b	32a90 <__flatcc_fb_clear_parser@@Base+0x29b4>
   32c20:	ldr	ip, [sl, #48]	; 0x30
   32c24:	ldr	r3, [sp, #40]	; 0x28
   32c28:	cmp	ip, #0
   32c2c:	ldr	r4, [r3, #12]
   32c30:	beq	3324c <__flatcc_fb_clear_parser@@Base+0x3170>
   32c34:	mov	r7, #0
   32c38:	mov	r5, ip
   32c3c:	mov	r2, r7
   32c40:	ldr	r9, [sp, #8]
   32c44:	b	32c54 <__flatcc_fb_clear_parser@@Base+0x2b78>
   32c48:	mov	r7, r5
   32c4c:	mov	r2, r1
   32c50:	mov	r5, r3
   32c54:	ldr	r3, [r5]
   32c58:	add	r1, r2, #1
   32c5c:	cmp	r3, #0
   32c60:	bne	32c48 <__flatcc_fb_clear_parser@@Base+0x2b6c>
   32c64:	cmp	r7, #0
   32c68:	str	r9, [sp, #8]
   32c6c:	beq	32d04 <__flatcc_fb_clear_parser@@Base+0x2c28>
   32c70:	sub	r3, r2, #1
   32c74:	cmp	r4, #0
   32c78:	clz	r3, r3
   32c7c:	lsr	r3, r3, #5
   32c80:	moveq	r3, #0
   32c84:	cmp	r3, #0
   32c88:	addne	r3, fp, #524	; 0x20c
   32c8c:	strne	r3, [sp, #8]
   32c90:	bne	32d18 <__flatcc_fb_clear_parser@@Base+0x2c3c>
   32c94:	cmp	r2, #1
   32c98:	moveq	r1, r3
   32c9c:	ldr	r3, [sp, #12]
   32ca0:	movne	r1, ip
   32ca4:	cmp	r3, #0
   32ca8:	beq	32d04 <__flatcc_fb_clear_parser@@Base+0x2c28>
   32cac:	ldr	r0, [fp, #412]	; 0x19c
   32cb0:	cmp	r0, #0
   32cb4:	beq	32d04 <__flatcc_fb_clear_parser@@Base+0x2c28>
   32cb8:	rsb	r2, r2, #1
   32cbc:	bl	291dc <fb_scope_table_find@@Base>
   32cc0:	cmp	r0, #0
   32cc4:	beq	32d00 <__flatcc_fb_clear_parser@@Base+0x2c24>
   32cc8:	ldr	r3, [r7, #4]
   32ccc:	add	r0, r0, #4
   32cd0:	ldm	r3, {r1, r2}
   32cd4:	bl	28274 <fb_symbol_table_find@@Base>
   32cd8:	subs	r8, r0, #0
   32cdc:	beq	32d00 <__flatcc_fb_clear_parser@@Base+0x2c24>
   32ce0:	ldrh	r2, [r8, #8]
   32ce4:	cmp	r2, #4
   32ce8:	bhi	32d00 <__flatcc_fb_clear_parser@@Base+0x2c24>
   32cec:	add	r0, fp, #524	; 0x20c
   32cf0:	ldr	r1, [r8, #16]
   32cf4:	bl	27794 <ptr_set_find_item@@Base>
   32cf8:	cmp	r0, #0
   32cfc:	bne	32d54 <__flatcc_fb_clear_parser@@Base+0x2c78>
   32d00:	ldr	ip, [sl, #48]	; 0x30
   32d04:	movw	r2, #33616	; 0x8350
   32d08:	movt	r2, #5
   32d0c:	mov	r1, ip
   32d10:	b	32364 <__flatcc_fb_clear_parser@@Base+0x2288>
   32d14:	mov	r4, r0
   32d18:	ldr	r3, [r7, #4]
   32d1c:	add	r0, r4, #4
   32d20:	ldm	r3, {r1, r2}
   32d24:	bl	28274 <fb_symbol_table_find@@Base>
   32d28:	subs	r8, r0, #0
   32d2c:	beq	32d94 <__flatcc_fb_clear_parser@@Base+0x2cb8>
   32d30:	ldrh	r3, [r8, #8]
   32d34:	cmp	r3, #4
   32d38:	bhi	32d94 <__flatcc_fb_clear_parser@@Base+0x2cb8>
   32d3c:	ldr	r0, [sp, #8]
   32d40:	ldr	r1, [r8, #16]
   32d44:	bl	27794 <ptr_set_find_item@@Base>
   32d48:	cmp	r0, #0
   32d4c:	beq	32d94 <__flatcc_fb_clear_parser@@Base+0x2cb8>
   32d50:	str	r9, [sp, #8]
   32d54:	ldrh	r2, [r8, #8]
   32d58:	cmp	r2, #3
   32d5c:	bne	32d00 <__flatcc_fb_clear_parser@@Base+0x2c24>
   32d60:	ldr	r2, [r5, #4]
   32d64:	add	r0, r8, #56	; 0x38
   32d68:	ldm	r2, {r1, r2}
   32d6c:	bl	28274 <fb_symbol_table_find@@Base>
   32d70:	cmp	r0, #0
   32d74:	beq	32d00 <__flatcc_fb_clear_parser@@Base+0x2c24>
   32d78:	ldrd	r2, [r0, #48]	; 0x30
   32d7c:	add	r1, sl, #48	; 0x30
   32d80:	strd	r2, [sl, #48]	; 0x30
   32d84:	ldrd	r2, [r0, #56]	; 0x38
   32d88:	strd	r2, [r1, #8]
   32d8c:	uxth	r2, r2
   32d90:	b	31fb4 <__flatcc_fb_clear_parser@@Base+0x1ed8>
   32d94:	ldr	r3, [r4]
   32d98:	cmp	r3, #0
   32d9c:	beq	32d00 <__flatcc_fb_clear_parser@@Base+0x2c24>
   32da0:	mov	r8, #0
   32da4:	b	32dac <__flatcc_fb_clear_parser@@Base+0x2cd0>
   32da8:	mov	r8, r2
   32dac:	ldr	r3, [r3]
   32db0:	add	r2, r8, #1
   32db4:	cmp	r3, #0
   32db8:	bne	32da8 <__flatcc_fb_clear_parser@@Base+0x2ccc>
   32dbc:	ldr	r3, [sp, #12]
   32dc0:	cmp	r3, #0
   32dc4:	beq	32d00 <__flatcc_fb_clear_parser@@Base+0x2c24>
   32dc8:	rsb	r8, r8, #0
   32dcc:	ldr	r0, [fp, #412]	; 0x19c
   32dd0:	b	32df8 <__flatcc_fb_clear_parser@@Base+0x2d1c>
   32dd4:	cmp	r0, #0
   32dd8:	beq	32df4 <__flatcc_fb_clear_parser@@Base+0x2d18>
   32ddc:	mov	r2, r8
   32de0:	ldr	r1, [r4]
   32de4:	bl	291dc <fb_scope_table_find@@Base>
   32de8:	cmp	r0, #0
   32dec:	bne	32d14 <__flatcc_fb_clear_parser@@Base+0x2c38>
   32df0:	ldr	r0, [fp, #412]	; 0x19c
   32df4:	add	r8, r8, #1
   32df8:	cmp	r8, #0
   32dfc:	bne	32dd4 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   32e00:	cmp	r0, #0
   32e04:	beq	32d00 <__flatcc_fb_clear_parser@@Base+0x2c24>
   32e08:	mov	r2, r8
   32e0c:	mov	r1, r8
   32e10:	bl	291dc <fb_scope_table_find@@Base>
   32e14:	subs	r4, r0, #0
   32e18:	bne	32d18 <__flatcc_fb_clear_parser@@Base+0x2c3c>
   32e1c:	b	32d00 <__flatcc_fb_clear_parser@@Base+0x2c24>
   32e20:	movw	r2, #33712	; 0x83b0
   32e24:	movt	r2, #5
   32e28:	ldr	r1, [sl, #4]
   32e2c:	mov	ip, #0
   32e30:	b	31f78 <__flatcc_fb_clear_parser@@Base+0x1e9c>
   32e34:	mov	r3, #0
   32e38:	mov	r2, ip
   32e3c:	mov	r8, r1
   32e40:	str	r3, [sp, #28]
   32e44:	b	31b64 <__flatcc_fb_clear_parser@@Base+0x1a88>
   32e48:	mov	r3, #0
   32e4c:	mov	r2, r5
   32e50:	mov	r8, ip
   32e54:	str	r3, [sp, #28]
   32e58:	b	325e4 <__flatcc_fb_clear_parser@@Base+0x2508>
   32e5c:	mov	r2, r5
   32e60:	mov	r8, r1
   32e64:	str	ip, [sp, #28]
   32e68:	b	31b64 <__flatcc_fb_clear_parser@@Base+0x1a88>
   32e6c:	mov	r3, r2
   32e70:	mov	r2, r5
   32e74:	b	325d4 <__flatcc_fb_clear_parser@@Base+0x24f8>
   32e78:	mov	r5, r4
   32e7c:	b	316c4 <__flatcc_fb_clear_parser@@Base+0x15e8>
   32e80:	tst	r5, #1024	; 0x400
   32e84:	beq	31c4c <__flatcc_fb_clear_parser@@Base+0x1b70>
   32e88:	b	31c88 <__flatcc_fb_clear_parser@@Base+0x1bac>
   32e8c:	mov	ip, #0
   32e90:	movw	r2, #33152	; 0x8180
   32e94:	movt	r2, #5
   32e98:	mov	r3, ip
   32e9c:	ldr	r1, [r7, #4]
   32ea0:	mov	r0, fp
   32ea4:	str	ip, [sp]
   32ea8:	str	ip, [sp, #4]
   32eac:	bl	2b548 <__flatcc_error_report@@Base>
   32eb0:	ldrh	r5, [sl, #72]	; 0x48
   32eb4:	b	31bf0 <__flatcc_fb_clear_parser@@Base+0x1b14>
   32eb8:	ldrh	r3, [sl, #72]	; 0x48
   32ebc:	tst	r3, #128	; 0x80
   32ec0:	beq	3198c <__flatcc_fb_clear_parser@@Base+0x18b0>
   32ec4:	ldr	r3, [sp, #60]	; 0x3c
   32ec8:	add	r3, r3, #1
   32ecc:	str	r3, [sp, #60]	; 0x3c
   32ed0:	b	3217c <__flatcc_fb_clear_parser@@Base+0x20a0>
   32ed4:	mov	ip, #0
   32ed8:	mov	r0, fp
   32edc:	ldr	r1, [sl, #4]
   32ee0:	mov	r3, ip
   32ee4:	movw	r2, #33840	; 0x8430
   32ee8:	movt	r2, #5
   32eec:	str	ip, [sp]
   32ef0:	str	ip, [sp, #4]
   32ef4:	bl	2b548 <__flatcc_error_report@@Base>
   32ef8:	ldr	r3, [sp, #8]
   32efc:	ldrh	r0, [r3, #8]
   32f00:	b	32ac0 <__flatcc_fb_clear_parser@@Base+0x29e4>
   32f04:	mov	r1, r3
   32f08:	mov	r2, #0
   32f0c:	str	sl, [sp, #60]	; 0x3c
   32f10:	mov	r3, #0
   32f14:	strd	r2, [r1, #96]	; 0x60
   32f18:	b	329d0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   32f1c:	movw	r2, #34484	; 0x86b4
   32f20:	movt	r2, #5
   32f24:	ldr	r1, [sl, #4]
   32f28:	mov	r3, ip
   32f2c:	b	3295c <__flatcc_fb_clear_parser@@Base+0x2880>
   32f30:	mov	r3, r1
   32f34:	str	r1, [sp]
   32f38:	movw	r2, #34732	; 0x87ac
   32f3c:	movt	r2, #5
   32f40:	str	r1, [sp, #4]
   32f44:	mov	r0, fp
   32f48:	ldr	r1, [sp, #40]	; 0x28
   32f4c:	ldr	r1, [r1, #4]
   32f50:	bl	2b548 <__flatcc_error_report@@Base>
   32f54:	b	32888 <__flatcc_fb_clear_parser@@Base+0x27ac>
   32f58:	mov	r3, #2
   32f5c:	str	r2, [sp, #24]
   32f60:	strb	r3, [r0]
   32f64:	b	3215c <__flatcc_fb_clear_parser@@Base+0x2080>
   32f68:	ldr	r2, [sp, #28]
   32f6c:	movw	ip, #32700	; 0x7fbc
   32f70:	movt	ip, #5
   32f74:	mov	r0, #0
   32f78:	ldr	r1, [r2, #4]
   32f7c:	movw	r2, #32800	; 0x8020
   32f80:	movt	r2, #5
   32f84:	b	32bdc <__flatcc_fb_clear_parser@@Base+0x2b00>
   32f88:	ldr	r3, [sl, #48]	; 0x30
   32f8c:	ldr	r2, [sp, #40]	; 0x28
   32f90:	cmp	r3, #0
   32f94:	str	r3, [sp, #88]	; 0x58
   32f98:	ldr	r4, [r2, #12]
   32f9c:	beq	3324c <__flatcc_fb_clear_parser@@Base+0x3170>
   32fa0:	mov	r2, r1
   32fa4:	mov	r1, r3
   32fa8:	ldr	r9, [sp, #8]
   32fac:	b	32fbc <__flatcc_fb_clear_parser@@Base+0x2ee0>
   32fb0:	mov	r5, r1
   32fb4:	mov	r2, r0
   32fb8:	mov	r1, r3
   32fbc:	ldr	r3, [r1]
   32fc0:	add	r0, r2, #1
   32fc4:	cmp	r3, #0
   32fc8:	bne	32fb0 <__flatcc_fb_clear_parser@@Base+0x2ed4>
   32fcc:	cmp	r5, #0
   32fd0:	str	r9, [sp, #8]
   32fd4:	str	r1, [sp, #92]	; 0x5c
   32fd8:	beq	33078 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   32fdc:	sub	r3, r2, #1
   32fe0:	cmp	r4, #0
   32fe4:	clz	r3, r3
   32fe8:	lsr	r3, r3, #5
   32fec:	moveq	r3, #0
   32ff0:	cmp	r3, #0
   32ff4:	bne	330c0 <__flatcc_fb_clear_parser@@Base+0x2fe4>
   32ff8:	cmp	r2, #1
   32ffc:	ldr	r1, [sp, #88]	; 0x58
   33000:	moveq	r1, r3
   33004:	ldr	r3, [sp, #12]
   33008:	cmp	r3, #0
   3300c:	beq	33078 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   33010:	ldr	r0, [fp, #412]	; 0x19c
   33014:	cmp	r0, #0
   33018:	beq	33078 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   3301c:	rsb	r2, r2, #1
   33020:	bl	291dc <fb_scope_table_find@@Base>
   33024:	cmp	r0, #0
   33028:	beq	33078 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   3302c:	ldr	r3, [r5, #4]
   33030:	add	r0, r0, #4
   33034:	ldm	r3, {r1, r2}
   33038:	bl	28274 <fb_symbol_table_find@@Base>
   3303c:	subs	r3, r0, #0
   33040:	beq	33078 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   33044:	ldrh	r2, [r3, #8]
   33048:	cmp	r2, #4
   3304c:	bhi	33078 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   33050:	ldr	r1, [r3, #16]
   33054:	ldr	r0, [sp, #68]	; 0x44
   33058:	str	r3, [sp, #68]	; 0x44
   3305c:	bl	27794 <ptr_set_find_item@@Base>
   33060:	cmp	r0, #0
   33064:	ldr	r3, [sp, #68]	; 0x44
   33068:	beq	33078 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   3306c:	ldrh	r2, [r3, #8]
   33070:	cmp	r2, #3
   33074:	beq	3308c <__flatcc_fb_clear_parser@@Base+0x2fb0>
   33078:	ldr	r3, [sp, #88]	; 0x58
   3307c:	ldr	r3, [r3]
   33080:	cmp	r3, #0
   33084:	bne	331c0 <__flatcc_fb_clear_parser@@Base+0x30e4>
   33088:	ldr	r3, [sp, #8]
   3308c:	add	r0, r3, #56	; 0x38
   33090:	ldr	r2, [sp, #92]	; 0x5c
   33094:	ldr	r2, [r2, #4]
   33098:	ldm	r2, {r1, r2}
   3309c:	bl	28274 <fb_symbol_table_find@@Base>
   330a0:	cmp	r0, #0
   330a4:	beq	331c0 <__flatcc_fb_clear_parser@@Base+0x30e4>
   330a8:	ldrd	r2, [r0, #48]	; 0x30
   330ac:	strd	r2, [sl, #48]	; 0x30
   330b0:	ldrd	r2, [r0, #56]	; 0x38
   330b4:	strd	r2, [sl, #56]	; 0x38
   330b8:	b	31ed0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   330bc:	mov	r4, r0
   330c0:	ldr	r3, [r5, #4]
   330c4:	add	r0, r4, #4
   330c8:	ldm	r3, {r1, r2}
   330cc:	bl	28274 <fb_symbol_table_find@@Base>
   330d0:	subs	r8, r0, #0
   330d4:	beq	33104 <__flatcc_fb_clear_parser@@Base+0x3028>
   330d8:	ldrh	r3, [r8, #8]
   330dc:	cmp	r3, #4
   330e0:	bhi	33104 <__flatcc_fb_clear_parser@@Base+0x3028>
   330e4:	ldr	r1, [r8, #16]
   330e8:	ldr	r0, [sp, #68]	; 0x44
   330ec:	bl	27794 <ptr_set_find_item@@Base>
   330f0:	cmp	r0, #0
   330f4:	beq	33104 <__flatcc_fb_clear_parser@@Base+0x3028>
   330f8:	mov	r3, r8
   330fc:	str	r9, [sp, #8]
   33100:	b	3306c <__flatcc_fb_clear_parser@@Base+0x2f90>
   33104:	ldr	r3, [r4]
   33108:	cmp	r3, #0
   3310c:	beq	3318c <__flatcc_fb_clear_parser@@Base+0x30b0>
   33110:	mov	r8, #0
   33114:	b	3311c <__flatcc_fb_clear_parser@@Base+0x3040>
   33118:	mov	r8, r2
   3311c:	ldr	r3, [r3]
   33120:	add	r2, r8, #1
   33124:	cmp	r3, #0
   33128:	bne	33118 <__flatcc_fb_clear_parser@@Base+0x303c>
   3312c:	ldr	r3, [sp, #12]
   33130:	cmp	r3, #0
   33134:	beq	3318c <__flatcc_fb_clear_parser@@Base+0x30b0>
   33138:	rsb	r8, r8, #0
   3313c:	ldr	r0, [fp, #412]	; 0x19c
   33140:	b	33168 <__flatcc_fb_clear_parser@@Base+0x308c>
   33144:	cmp	r0, #0
   33148:	beq	33164 <__flatcc_fb_clear_parser@@Base+0x3088>
   3314c:	mov	r2, r8
   33150:	ldr	r1, [r4]
   33154:	bl	291dc <fb_scope_table_find@@Base>
   33158:	cmp	r0, #0
   3315c:	bne	330bc <__flatcc_fb_clear_parser@@Base+0x2fe0>
   33160:	ldr	r0, [fp, #412]	; 0x19c
   33164:	add	r8, r8, #1
   33168:	cmp	r8, #0
   3316c:	bne	33144 <__flatcc_fb_clear_parser@@Base+0x3068>
   33170:	cmp	r0, #0
   33174:	beq	3318c <__flatcc_fb_clear_parser@@Base+0x30b0>
   33178:	mov	r2, r8
   3317c:	mov	r1, r8
   33180:	bl	291dc <fb_scope_table_find@@Base>
   33184:	subs	r4, r0, #0
   33188:	bne	330c0 <__flatcc_fb_clear_parser@@Base+0x2fe4>
   3318c:	str	r9, [sp, #8]
   33190:	b	33078 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   33194:	ldr	r3, [r3, #4]
   33198:	movw	r2, #33288	; 0x8208
   3319c:	movt	r2, #5
   331a0:	mov	ip, #0
   331a4:	mov	r0, fp
   331a8:	ldr	r1, [r7, #4]
   331ac:	str	ip, [sp]
   331b0:	str	ip, [sp, #4]
   331b4:	bl	2b548 <__flatcc_error_report@@Base>
   331b8:	ldrh	r5, [sl, #72]	; 0x48
   331bc:	b	31bf0 <__flatcc_fb_clear_parser@@Base+0x1b14>
   331c0:	movw	r2, #34024	; 0x84e8
   331c4:	movt	r2, #5
   331c8:	ldr	r1, [sl, #48]	; 0x30
   331cc:	b	32364 <__flatcc_fb_clear_parser@@Base+0x2288>
   331d0:	movw	r2, #33244	; 0x81dc
   331d4:	movt	r2, #5
   331d8:	ldr	r3, [r3, #4]
   331dc:	b	331a4 <__flatcc_fb_clear_parser@@Base+0x30c8>
   331e0:	ldr	r3, [sp, #60]	; 0x3c
   331e4:	cmp	r3, #0
   331e8:	beq	329d0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   331ec:	ldr	r2, [sp, #40]	; 0x28
   331f0:	ldr	r1, [sp, #60]	; 0x3c
   331f4:	ldrh	r3, [r2, #10]
   331f8:	cmp	r1, #1
   331fc:	orr	r3, r3, #8
   33200:	strh	r3, [r2, #10]
   33204:	bne	319c8 <__flatcc_fb_clear_parser@@Base+0x18ec>
   33208:	ldr	r3, [sp, #44]	; 0x2c
   3320c:	str	r3, [sp, #60]	; 0x3c
   33210:	b	329d0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   33214:	movw	r1, #30624	; 0x77a0
   33218:	movt	r1, #5
   3321c:	ldr	r3, [pc, #144]	; 332b4 <__flatcc_fb_clear_parser@@Base+0x31d8>
   33220:	movw	r0, #1964	; 0x7ac
   33224:	movt	r0, #4
   33228:	movw	r2, #769	; 0x301
   3322c:	bl	14014 <__assert_fail@plt>
   33230:	movw	r1, #30624	; 0x77a0
   33234:	movt	r1, #5
   33238:	ldr	r3, [pc, #116]	; 332b4 <__flatcc_fb_clear_parser@@Base+0x31d8>
   3323c:	movw	r0, #33060	; 0x8124
   33240:	movt	r0, #5
   33244:	movw	r2, #770	; 0x302
   33248:	bl	14014 <__assert_fail@plt>
   3324c:	movw	r1, #30624	; 0x77a0
   33250:	movt	r1, #5
   33254:	ldr	r3, [pc, #92]	; 332b8 <__flatcc_fb_clear_parser@@Base+0x31dc>
   33258:	movw	r0, #33612	; 0x834c
   3325c:	movt	r0, #5
   33260:	movw	r2, #347	; 0x15b
   33264:	bl	14014 <__assert_fail@plt>
   33268:	ldr	r3, [sp, #24]
   3326c:	str	r3, [sp, #44]	; 0x2c
   33270:	b	328b8 <__flatcc_fb_clear_parser@@Base+0x27dc>
   33274:	ldr	r3, [sp, #44]	; 0x2c
   33278:	str	r3, [sp, #24]
   3327c:	b	3215c <__flatcc_fb_clear_parser@@Base+0x2080>
   33280:	ldr	r3, [sp, #8]
   33284:	movw	r2, #33940	; 0x8494
   33288:	movt	r2, #5
   3328c:	mov	ip, #0
   33290:	mov	r0, fp
   33294:	ldr	r1, [sl, #4]
   33298:	ldr	r3, [r3, #4]
   3329c:	b	32a90 <__flatcc_fb_clear_parser@@Base+0x29b4>
   332a0:	movw	r2, #34320	; 0x8610
   332a4:	movt	r2, #5
   332a8:	ldr	r1, [sl, #4]
   332ac:	mov	ip, #0
   332b0:	b	31f78 <__flatcc_fb_clear_parser@@Base+0x1e9c>
   332b4:	andeq	r7, r5, r8, lsl #14
   332b8:	andeq	r7, r5, r8, lsl r7

000332bc <__flatcc_fb_build_schema@@Base>:
   332bc:	add	r3, r0, #524	; 0x20c
   332c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   332c4:	strd	r6, [sp, #8]
   332c8:	strd	r8, [sp, #16]
   332cc:	strd	sl, [sp, #24]
   332d0:	add	sl, r0, #352	; 0x160
   332d4:	mov	fp, r0
   332d8:	str	lr, [sp, #32]
   332dc:	sub	sp, sp, #140	; 0x8c
   332e0:	mov	r1, sl
   332e4:	mov	r0, r3
   332e8:	str	r3, [sp, #24]
   332ec:	bl	27794 <ptr_set_find_item@@Base>
   332f0:	cmp	r0, #0
   332f4:	beq	34f70 <__flatcc_fb_build_schema@@Base+0x1cb4>
   332f8:	ldr	r4, [fp, #392]	; 0x188
   332fc:	cmp	r4, #0
   33300:	beq	333d8 <__flatcc_fb_build_schema@@Base+0x11c>
   33304:	movw	r5, #403	; 0x193
   33308:	movt	r5, #256	; 0x100
   3330c:	movw	r6, #40389	; 0x9dc5
   33310:	movt	r6, #33052	; 0x811c
   33314:	b	33324 <__flatcc_fb_build_schema@@Base+0x68>
   33318:	ldr	r4, [r4]
   3331c:	cmp	r4, #0
   33320:	beq	333d8 <__flatcc_fb_build_schema@@Base+0x11c>
   33324:	ldrh	r3, [r4, #8]
   33328:	cmp	r3, #4
   3332c:	bhi	33318 <__flatcc_fb_build_schema@@Base+0x5c>
   33330:	ldr	r3, [r4, #4]
   33334:	ldr	r0, [r4, #12]
   33338:	ldm	r3, {r1, r7}
   3333c:	cmp	r0, #0
   33340:	beq	33cbc <__flatcc_fb_build_schema@@Base+0xa00>
   33344:	ldr	lr, [r0]
   33348:	cmp	lr, #0
   3334c:	bne	341c8 <__flatcc_fb_build_schema@@Base+0xf0c>
   33350:	cmp	r7, #0
   33354:	beq	34220 <__flatcc_fb_build_schema@@Base+0xf64>
   33358:	movw	r3, #40389	; 0x9dc5
   3335c:	movt	r3, #33052	; 0x811c
   33360:	add	ip, r1, r7
   33364:	ldrb	r2, [r1], #1
   33368:	eor	r3, r3, r2
   3336c:	cmp	r1, ip
   33370:	mul	r3, r5, r3
   33374:	bne	33364 <__flatcc_fb_build_schema@@Base+0xa8>
   33378:	cmp	r3, #0
   3337c:	str	sl, [r4, #16]
   33380:	moveq	r3, r6
   33384:	cmp	r0, #0
   33388:	str	r3, [r4, #88]	; 0x58
   3338c:	beq	33318 <__flatcc_fb_build_schema@@Base+0x5c>
   33390:	add	r0, r0, #4
   33394:	mov	r2, #1
   33398:	mov	r1, r4
   3339c:	bl	28034 <fb_symbol_table_insert_item@@Base>
   333a0:	cmp	r0, #0
   333a4:	beq	33318 <__flatcc_fb_build_schema@@Base+0x5c>
   333a8:	mov	ip, #0
   333ac:	movw	r2, #34924	; 0x886c
   333b0:	movt	r2, #5
   333b4:	ldr	r3, [r0, #4]
   333b8:	mov	r0, fp
   333bc:	ldr	r1, [r4, #4]
   333c0:	str	ip, [sp]
   333c4:	str	ip, [sp, #4]
   333c8:	bl	2b548 <__flatcc_error_report@@Base>
   333cc:	ldr	r4, [r4]
   333d0:	cmp	r4, #0
   333d4:	bne	33324 <__flatcc_fb_build_schema@@Base+0x68>
   333d8:	ldr	r4, [fp, #356]	; 0x164
   333dc:	cmp	r4, #0
   333e0:	beq	33438 <__flatcc_fb_build_schema@@Base+0x17c>
   333e4:	movw	r5, #34952	; 0x8888
   333e8:	movt	r5, #5
   333ec:	ldr	r0, [fp, #412]	; 0x19c
   333f0:	mov	r2, #1
   333f4:	mov	r1, r4
   333f8:	add	r0, r0, #16
   333fc:	bl	3cb08 <fb_name_table_insert_item@@Base>
   33400:	cmp	r0, #0
   33404:	beq	334e0 <__flatcc_fb_build_schema@@Base+0x224>
   33408:	ldr	ip, [r4, #12]
   3340c:	mov	r3, #0
   33410:	mov	r2, r5
   33414:	mov	r1, r3
   33418:	mov	r0, fp
   3341c:	str	ip, [sp, #4]
   33420:	ldr	ip, [r4, #8]
   33424:	str	ip, [sp]
   33428:	bl	2b548 <__flatcc_error_report@@Base>
   3342c:	ldr	r4, [r4]
   33430:	cmp	r4, #0
   33434:	bne	333ec <__flatcc_fb_build_schema@@Base+0x130>
   33438:	ldr	r5, [pc, #4064]	; 34420 <__flatcc_fb_build_schema@@Base+0x1164>
   3343c:	mov	r7, #0
   33440:	mov	r6, #2
   33444:	b	33498 <__flatcc_fb_build_schema@@Base+0x1dc>
   33448:	ldr	r2, [r5], #4
   3344c:	str	r3, [fp, #52]	; 0x34
   33450:	mov	r0, r2
   33454:	str	r2, [r4, #8]
   33458:	str	r7, [r4, #24]
   3345c:	bl	13f54 <strlen@plt>
   33460:	ldr	r3, [fp, #412]	; 0x19c
   33464:	mov	ip, #0
   33468:	mov	r1, r4
   3346c:	mov	r2, #1
   33470:	str	ip, [r4]
   33474:	str	r0, [r4, #12]
   33478:	strh	r6, [r4, #16]
   3347c:	add	r0, r3, #16
   33480:	bl	3cb08 <fb_name_table_insert_item@@Base>
   33484:	cmp	r0, #0
   33488:	strne	r7, [r0, #24]
   3348c:	add	r7, r7, #1
   33490:	cmp	r7, #12
   33494:	beq	334f0 <__flatcc_fb_build_schema@@Base+0x234>
   33498:	ldr	r2, [fp, #44]	; 0x2c
   3349c:	ldr	r4, [fp, #52]	; 0x34
   334a0:	add	r3, r4, #32
   334a4:	cmp	r3, r2
   334a8:	bls	33448 <__flatcc_fb_build_schema@@Base+0x18c>
   334ac:	mov	r1, #1
   334b0:	mov	r0, #65536	; 0x10000
   334b4:	bl	13e7c <calloc@plt>
   334b8:	cmp	r0, #0
   334bc:	beq	34f2c <__flatcc_fb_build_schema@@Base+0x1c70>
   334c0:	ldr	r2, [fp, #48]	; 0x30
   334c4:	add	r1, r0, #65536	; 0x10000
   334c8:	add	r4, r0, #16
   334cc:	add	r3, r0, #48	; 0x30
   334d0:	str	r1, [fp, #44]	; 0x2c
   334d4:	str	r0, [fp, #48]	; 0x30
   334d8:	str	r2, [r0]
   334dc:	b	33448 <__flatcc_fb_build_schema@@Base+0x18c>
   334e0:	ldr	r4, [r4]
   334e4:	cmp	r4, #0
   334e8:	bne	333ec <__flatcc_fb_build_schema@@Base+0x130>
   334ec:	b	33438 <__flatcc_fb_build_schema@@Base+0x17c>
   334f0:	ldr	r3, [fp, #184]	; 0xb8
   334f4:	ldr	r9, [fp, #392]	; 0x188
   334f8:	cmp	r3, #0
   334fc:	bne	3353c <__flatcc_fb_build_schema@@Base+0x280>
   33500:	cmp	r9, #0
   33504:	beq	34eb0 <__flatcc_fb_build_schema@@Base+0x1bf4>
   33508:	mov	r4, #1
   3350c:	ldrh	r3, [r9, #8]
   33510:	cmp	r3, #3
   33514:	bne	3352c <__flatcc_fb_build_schema@@Base+0x270>
   33518:	mov	r1, r9
   3351c:	mov	r0, fp
   33520:	bl	30790 <__flatcc_fb_clear_parser@@Base+0x6b4>
   33524:	cmp	r0, #0
   33528:	strhne	r4, [r9, #48]	; 0x30
   3352c:	ldr	r9, [r9]
   33530:	cmp	r9, #0
   33534:	bne	3350c <__flatcc_fb_build_schema@@Base+0x250>
   33538:	ldr	r9, [fp, #392]	; 0x188
   3353c:	cmp	r9, #0
   33540:	beq	34eb0 <__flatcc_fb_build_schema@@Base+0x1bf4>
   33544:	movw	r3, #30220	; 0x760c
   33548:	movt	r3, #5
   3354c:	str	sl, [sp, #16]
   33550:	mov	sl, r9
   33554:	str	r3, [sp, #12]
   33558:	ldrh	r3, [sl, #8]
   3355c:	cmp	r3, #4
   33560:	ldrls	pc, [pc, r3, lsl #2]
   33564:	b	34fa8 <__flatcc_fb_build_schema@@Base+0x1cec>
   33568:	andeq	r3, r3, ip, asr #13
   3356c:	andeq	r3, r3, ip, lsr #22
   33570:	andeq	r3, r3, ip, asr #13
   33574:	strdeq	r3, [r3], -ip
   33578:	andeq	r3, r3, r8, lsl #22
   3357c:	cmp	r4, #0
   33580:	beq	335a4 <__flatcc_fb_build_schema@@Base+0x2e8>
   33584:	movw	r2, #31636	; 0x7b94
   33588:	movt	r2, #5
   3358c:	ldr	r1, [r4, #4]
   33590:	mov	r3, ip
   33594:	mov	r0, fp
   33598:	str	ip, [sp]
   3359c:	str	ip, [sp, #4]
   335a0:	bl	2b548 <__flatcc_error_report@@Base>
   335a4:	ldrh	r3, [r7, #24]
   335a8:	strh	r5, [r7, #72]	; 0x48
   335ac:	cmp	r3, #8
   335b0:	beq	34250 <__flatcc_fb_build_schema@@Base+0xf94>
   335b4:	cmp	r3, #12
   335b8:	bne	34170 <__flatcc_fb_build_schema@@Base+0xeb4>
   335bc:	ldr	ip, [r7, #16]
   335c0:	ldr	r3, [sp, #28]
   335c4:	cmp	ip, #0
   335c8:	ldr	r4, [r3, #12]
   335cc:	beq	33648 <__flatcc_fb_build_schema@@Base+0x38c>
   335d0:	mov	r5, ip
   335d4:	mov	r2, #0
   335d8:	b	335e4 <__flatcc_fb_build_schema@@Base+0x328>
   335dc:	mov	r2, r0
   335e0:	mov	r5, r3
   335e4:	ldr	r3, [r5]
   335e8:	add	r0, r2, #1
   335ec:	cmp	r3, #0
   335f0:	bne	335dc <__flatcc_fb_build_schema@@Base+0x320>
   335f4:	sub	r3, r0, #1
   335f8:	cmp	r4, #0
   335fc:	clz	r3, r3
   33600:	lsr	r3, r3, #5
   33604:	moveq	r3, #0
   33608:	cmp	r3, #0
   3360c:	bne	33f5c <__flatcc_fb_build_schema@@Base+0xca0>
   33610:	cmp	r0, #1
   33614:	moveq	r1, r3
   33618:	ldr	r3, [sp, #16]
   3361c:	movne	r1, ip
   33620:	cmp	r3, #0
   33624:	beq	33648 <__flatcc_fb_build_schema@@Base+0x38c>
   33628:	ldr	r0, [fp, #412]	; 0x19c
   3362c:	cmp	r0, #0
   33630:	beq	33648 <__flatcc_fb_build_schema@@Base+0x38c>
   33634:	rsb	r2, r2, #0
   33638:	bl	291dc <fb_scope_table_find@@Base>
   3363c:	cmp	r0, #0
   33640:	bne	34bbc <__flatcc_fb_build_schema@@Base+0x1900>
   33644:	ldr	ip, [r7, #16]
   33648:	mov	r3, r7
   3364c:	mov	r1, ip
   33650:	movw	r2, #35172	; 0x8964
   33654:	movt	r2, #5
   33658:	mov	r0, fp
   3365c:	bl	2cdd4 <error_ref_sym@@Base>
   33660:	mov	r3, #1
   33664:	strh	r3, [r7, #24]
   33668:	ldr	r7, [r7]
   3366c:	cmp	r7, #0
   33670:	bne	33d70 <__flatcc_fb_build_schema@@Base+0xab4>
   33674:	ldr	sl, [sp, #28]
   33678:	ldr	r2, [sp, #36]	; 0x24
   3367c:	cmp	r2, #0
   33680:	beq	336cc <__flatcc_fb_build_schema@@Base+0x410>
   33684:	ldrh	r3, [sl, #10]
   33688:	cmp	r2, #1
   3368c:	orr	r3, r3, #8
   33690:	strh	r3, [sl, #10]
   33694:	beq	336cc <__flatcc_fb_build_schema@@Base+0x410>
   33698:	ldr	r3, [fp, #156]	; 0x9c
   3369c:	cmp	r3, #0
   336a0:	bne	336cc <__flatcc_fb_build_schema@@Base+0x410>
   336a4:	movw	r2, #34808	; 0x87f8
   336a8:	movt	r2, #5
   336ac:	str	r7, [sp]
   336b0:	mov	r3, r7
   336b4:	mov	r0, fp
   336b8:	str	r7, [sp, #4]
   336bc:	ldr	r1, [sl, #4]
   336c0:	bl	2b548 <__flatcc_error_report@@Base>
   336c4:	mov	r3, #1
   336c8:	strh	r3, [sl, #48]	; 0x30
   336cc:	ldr	sl, [sl]
   336d0:	cmp	sl, #0
   336d4:	bne	33558 <__flatcc_fb_build_schema@@Base+0x29c>
   336d8:	ldr	r4, [fp, #392]	; 0x188
   336dc:	ldr	sl, [sp, #16]
   336e0:	cmp	r4, #0
   336e4:	beq	34eb0 <__flatcc_fb_build_schema@@Base+0x1bf4>
   336e8:	ldrh	r5, [r4, #8]
   336ec:	cmp	r5, #1
   336f0:	bne	33714 <__flatcc_fb_build_schema@@Base+0x458>
   336f4:	ldrh	r3, [r4, #48]	; 0x30
   336f8:	cmp	r3, #1
   336fc:	beq	33714 <__flatcc_fb_build_schema@@Base+0x458>
   33700:	mov	r1, r4
   33704:	mov	r0, fp
   33708:	bl	30208 <__flatcc_fb_clear_parser@@Base+0x12c>
   3370c:	cmp	r0, #0
   33710:	strhne	r5, [r4, #48]	; 0x30
   33714:	ldr	r4, [r4]
   33718:	cmp	r4, #0
   3371c:	bne	336e8 <__flatcc_fb_build_schema@@Base+0x42c>
   33720:	ldr	r9, [fp, #392]	; 0x188
   33724:	cmp	r9, #0
   33728:	beq	34eb0 <__flatcc_fb_build_schema@@Base+0x1bf4>
   3372c:	movw	r3, #30220	; 0x760c
   33730:	movt	r3, #5
   33734:	str	r3, [sp, #20]
   33738:	mov	r3, r9
   3373c:	mov	r9, sl
   33740:	mov	sl, r3
   33744:	ldrh	r3, [sl, #8]
   33748:	cmp	r3, #0
   3374c:	beq	34984 <__flatcc_fb_build_schema@@Base+0x16c8>
   33750:	cmp	r3, #2
   33754:	bne	339e4 <__flatcc_fb_build_schema@@Base+0x728>
   33758:	ldrh	ip, [sl, #48]	; 0x30
   3375c:	cmp	ip, #1
   33760:	beq	339e4 <__flatcc_fb_build_schema@@Base+0x728>
   33764:	cmp	ip, #0
   33768:	bne	34f8c <__flatcc_fb_build_schema@@Base+0x1cd0>
   3376c:	ldr	r3, [sl, #28]
   33770:	cmp	r3, #0
   33774:	beq	33798 <__flatcc_fb_build_schema@@Base+0x4dc>
   33778:	movw	r2, #35564	; 0x8aec
   3377c:	movt	r2, #5
   33780:	ldr	r1, [sl, #4]
   33784:	mov	r3, ip
   33788:	mov	r0, fp
   3378c:	str	ip, [sp]
   33790:	str	ip, [sp, #4]
   33794:	bl	2b548 <__flatcc_error_report@@Base>
   33798:	ldr	r4, [sl, #20]
   3379c:	cmp	r4, #0
   337a0:	beq	339e4 <__flatcc_fb_build_schema@@Base+0x728>
   337a4:	movw	r3, #35760	; 0x8bb0
   337a8:	movt	r3, #5
   337ac:	str	sl, [sp, #16]
   337b0:	str	r3, [sp, #36]	; 0x24
   337b4:	add	r3, sl, #56	; 0x38
   337b8:	ldr	sl, [sp, #24]
   337bc:	str	r3, [sp, #12]
   337c0:	mov	r2, #1
   337c4:	mov	r1, r4
   337c8:	ldr	r0, [sp, #12]
   337cc:	bl	28034 <fb_symbol_table_insert_item@@Base>
   337d0:	subs	ip, r0, #0
   337d4:	bne	348b4 <__flatcc_fb_build_schema@@Base+0x15f8>
   337d8:	ldrh	r3, [r4, #8]
   337dc:	cmp	r3, #5
   337e0:	bne	34db8 <__flatcc_fb_build_schema@@Base+0x1afc>
   337e4:	ldrh	r3, [r4, #56]	; 0x38
   337e8:	cmp	r3, #0
   337ec:	bne	34960 <__flatcc_fb_build_schema@@Base+0x16a4>
   337f0:	ldrh	r3, [r4, #24]
   337f4:	cmp	r3, #1
   337f8:	beq	339d4 <__flatcc_fb_build_schema@@Base+0x718>
   337fc:	cmp	r3, #12
   33800:	beq	33828 <__flatcc_fb_build_schema@@Base+0x56c>
   33804:	mov	ip, #0
   33808:	movw	r2, #35696	; 0x8b70
   3380c:	movt	r2, #5
   33810:	mov	r3, ip
   33814:	ldr	r1, [r4, #4]
   33818:	mov	r0, fp
   3381c:	str	ip, [sp]
   33820:	str	ip, [sp, #4]
   33824:	bl	2b548 <__flatcc_error_report@@Base>
   33828:	ldr	ip, [r4, #32]
   3382c:	ldr	r3, [sp, #16]
   33830:	cmp	ip, #0
   33834:	ldr	r5, [r3, #12]
   33838:	beq	343f4 <__flatcc_fb_build_schema@@Base+0x1138>
   3383c:	mov	r6, ip
   33840:	mov	r2, #0
   33844:	b	33850 <__flatcc_fb_build_schema@@Base+0x594>
   33848:	mov	r2, r0
   3384c:	mov	r6, r3
   33850:	ldr	r3, [r6]
   33854:	add	r0, r2, #1
   33858:	cmp	r3, #0
   3385c:	bne	33848 <__flatcc_fb_build_schema@@Base+0x58c>
   33860:	sub	r3, r0, #1
   33864:	cmp	r5, #0
   33868:	clz	r3, r3
   3386c:	lsr	r3, r3, #5
   33870:	moveq	r3, #0
   33874:	cmp	r3, #0
   33878:	bne	34334 <__flatcc_fb_build_schema@@Base+0x1078>
   3387c:	cmp	r0, #1
   33880:	moveq	r1, r3
   33884:	movne	r1, ip
   33888:	cmp	r9, #0
   3388c:	beq	343f4 <__flatcc_fb_build_schema@@Base+0x1138>
   33890:	ldr	r0, [fp, #412]	; 0x19c
   33894:	cmp	r0, #0
   33898:	beq	343f4 <__flatcc_fb_build_schema@@Base+0x1138>
   3389c:	rsb	r2, r2, #0
   338a0:	bl	291dc <fb_scope_table_find@@Base>
   338a4:	cmp	r0, #0
   338a8:	beq	343f0 <__flatcc_fb_build_schema@@Base+0x1134>
   338ac:	ldr	r3, [r6, #4]
   338b0:	add	r0, r0, #4
   338b4:	ldm	r3, {r1, r2}
   338b8:	bl	28274 <fb_symbol_table_find@@Base>
   338bc:	subs	r7, r0, #0
   338c0:	beq	343f0 <__flatcc_fb_build_schema@@Base+0x1134>
   338c4:	ldrh	r3, [r7, #8]
   338c8:	cmp	r3, #4
   338cc:	bhi	343f0 <__flatcc_fb_build_schema@@Base+0x1134>
   338d0:	mov	r0, sl
   338d4:	ldr	r1, [r7, #16]
   338d8:	bl	27794 <ptr_set_find_item@@Base>
   338dc:	cmp	r0, #0
   338e0:	beq	343f0 <__flatcc_fb_build_schema@@Base+0x1134>
   338e4:	ldrh	r2, [r7, #8]
   338e8:	cmp	r2, #0
   338ec:	bne	34a1c <__flatcc_fb_build_schema@@Base+0x1760>
   338f0:	mov	r3, #14
   338f4:	ldr	ip, [r4, #16]
   338f8:	str	r7, [r4, #32]
   338fc:	strh	r3, [r4, #40]	; 0x28
   33900:	ldr	r3, [sp, #16]
   33904:	cmp	ip, #0
   33908:	ldr	r5, [r3, #12]
   3390c:	beq	339b4 <__flatcc_fb_build_schema@@Base+0x6f8>
   33910:	mov	r6, ip
   33914:	b	33920 <__flatcc_fb_build_schema@@Base+0x664>
   33918:	mov	r2, r0
   3391c:	mov	r6, r3
   33920:	ldr	r3, [r6]
   33924:	add	r0, r2, #1
   33928:	cmp	r3, #0
   3392c:	bne	33918 <__flatcc_fb_build_schema@@Base+0x65c>
   33930:	sub	r1, r0, #1
   33934:	cmp	r5, #0
   33938:	clz	r1, r1
   3393c:	lsr	r1, r1, #5
   33940:	moveq	r1, #0
   33944:	cmp	r1, #0
   33948:	bne	34434 <__flatcc_fb_build_schema@@Base+0x1178>
   3394c:	cmp	r0, #1
   33950:	movne	r1, ip
   33954:	cmp	r9, #0
   33958:	beq	339b4 <__flatcc_fb_build_schema@@Base+0x6f8>
   3395c:	ldr	r0, [fp, #412]	; 0x19c
   33960:	cmp	r0, #0
   33964:	beq	339b4 <__flatcc_fb_build_schema@@Base+0x6f8>
   33968:	rsb	r2, r2, #0
   3396c:	bl	291dc <fb_scope_table_find@@Base>
   33970:	cmp	r0, #0
   33974:	beq	339b0 <__flatcc_fb_build_schema@@Base+0x6f4>
   33978:	ldr	r3, [r6, #4]
   3397c:	add	r0, r0, #4
   33980:	ldm	r3, {r1, r2}
   33984:	bl	28274 <fb_symbol_table_find@@Base>
   33988:	subs	r7, r0, #0
   3398c:	beq	339b0 <__flatcc_fb_build_schema@@Base+0x6f4>
   33990:	ldrh	r3, [r7, #8]
   33994:	cmp	r3, #4
   33998:	bhi	339b0 <__flatcc_fb_build_schema@@Base+0x6f4>
   3399c:	mov	r0, sl
   339a0:	ldr	r1, [r7, #16]
   339a4:	bl	27794 <ptr_set_find_item@@Base>
   339a8:	cmp	r0, #0
   339ac:	bne	3446c <__flatcc_fb_build_schema@@Base+0x11b0>
   339b0:	ldr	ip, [r4, #16]
   339b4:	mov	r3, r4
   339b8:	mov	r1, ip
   339bc:	movw	r2, #35868	; 0x8c1c
   339c0:	movt	r2, #5
   339c4:	mov	r0, fp
   339c8:	bl	2cdd4 <error_ref_sym@@Base>
   339cc:	mov	r3, #1
   339d0:	strh	r3, [r4, #24]
   339d4:	ldr	r4, [r4]
   339d8:	cmp	r4, #0
   339dc:	bne	337c0 <__flatcc_fb_build_schema@@Base+0x504>
   339e0:	ldr	sl, [sp, #16]
   339e4:	ldr	sl, [sl]
   339e8:	cmp	sl, #0
   339ec:	bne	33744 <__flatcc_fb_build_schema@@Base+0x488>
   339f0:	mov	sl, r9
   339f4:	ldr	r0, [fp, #392]	; 0x188
   339f8:	ldr	r3, [fp, #396]	; 0x18c
   339fc:	cmp	r3, #0
   33a00:	beq	33a24 <__flatcc_fb_build_schema@@Base+0x768>
   33a04:	mov	r1, #0
   33a08:	b	33a10 <__flatcc_fb_build_schema@@Base+0x754>
   33a0c:	mov	r3, r2
   33a10:	ldr	r2, [r3, #120]	; 0x78
   33a14:	str	r1, [r3, #120]	; 0x78
   33a18:	mov	r1, r3
   33a1c:	cmp	r2, #0
   33a20:	bne	33a0c <__flatcc_fb_build_schema@@Base+0x750>
   33a24:	cmp	r0, #0
   33a28:	str	r3, [fp, #396]	; 0x18c
   33a2c:	beq	347ec <__flatcc_fb_build_schema@@Base+0x1530>
   33a30:	mov	ip, #0
   33a34:	mov	lr, ip
   33a38:	ldrh	r2, [r0, #8]
   33a3c:	cmp	r2, #0
   33a40:	bne	347e0 <__flatcc_fb_build_schema@@Base+0x1524>
   33a44:	ldrh	r3, [r0, #92]	; 0x5c
   33a48:	ldr	r1, [r0, #20]
   33a4c:	ands	r3, r3, #8
   33a50:	bne	34abc <__flatcc_fb_build_schema@@Base+0x1800>
   33a54:	cmp	r1, #0
   33a58:	str	r3, [sp, #52]	; 0x34
   33a5c:	movne	r4, r1
   33a60:	str	r3, [sp, #56]	; 0x38
   33a64:	str	r3, [sp, #60]	; 0x3c
   33a68:	str	r3, [sp, #64]	; 0x40
   33a6c:	str	r3, [sp, #68]	; 0x44
   33a70:	str	r3, [sp, #72]	; 0x48
   33a74:	str	r3, [sp, #76]	; 0x4c
   33a78:	str	r3, [sp, #80]	; 0x50
   33a7c:	str	r3, [sp, #84]	; 0x54
   33a80:	str	r3, [sp, #88]	; 0x58
   33a84:	str	r3, [sp, #92]	; 0x5c
   33a88:	str	r3, [sp, #96]	; 0x60
   33a8c:	str	r3, [sp, #100]	; 0x64
   33a90:	str	r3, [sp, #104]	; 0x68
   33a94:	str	r3, [sp, #108]	; 0x6c
   33a98:	str	r3, [sp, #112]	; 0x70
   33a9c:	str	r3, [sp, #116]	; 0x74
   33aa0:	str	r3, [sp, #120]	; 0x78
   33aa4:	beq	3469c <__flatcc_fb_build_schema@@Base+0x13e0>
   33aa8:	ldrh	r2, [r4, #24]
   33aac:	ldrh	r3, [r4, #74]	; 0x4a
   33ab0:	sub	r2, r2, #1
   33ab4:	cmp	r2, #14
   33ab8:	ldrls	pc, [pc, r2, lsl #2]
   33abc:	b	3463c <__flatcc_fb_build_schema@@Base+0x1380>
   33ac0:			; <UNDEFINED> instruction: 0x000347b0
   33ac4:	andeq	r4, r3, ip, lsr r6
   33ac8:	andeq	r4, r3, ip, lsr r6
   33acc:	andeq	r4, r3, ip, lsr r6
   33ad0:	andeq	r4, r3, ip, lsr r6
   33ad4:	andeq	r4, r3, ip, lsr r6
   33ad8:	andeq	r4, r3, r8, lsr r6
   33adc:	andeq	r4, r3, ip, lsr r6
   33ae0:	andeq	r4, r3, r8, lsr r6
   33ae4:	andeq	r4, r3, r8, lsr r6
   33ae8:	andeq	r4, r3, ip, lsr r6
   33aec:	andeq	r4, r3, ip, lsr r6
   33af0:	andeq	r4, r3, ip, lsr r6
   33af4:	andeq	r4, r3, r0, lsr #12
   33af8:	andeq	r4, r3, r8, lsr r6
   33afc:	ldr	r3, [fp, #184]	; 0xb8
   33b00:	cmp	r3, #0
   33b04:	beq	336cc <__flatcc_fb_build_schema@@Base+0x410>
   33b08:	mov	r1, sl
   33b0c:	mov	r0, fp
   33b10:	bl	30790 <__flatcc_fb_clear_parser@@Base+0x6b4>
   33b14:	cmp	r0, #0
   33b18:	bne	336c4 <__flatcc_fb_build_schema@@Base+0x408>
   33b1c:	ldr	sl, [sl]
   33b20:	cmp	sl, #0
   33b24:	bne	33558 <__flatcc_fb_build_schema@@Base+0x29c>
   33b28:	b	336d8 <__flatcc_fb_build_schema@@Base+0x41c>
   33b2c:	ldrh	r5, [sl, #48]	; 0x30
   33b30:	cmp	r5, #0
   33b34:	bne	34ec4 <__flatcc_fb_build_schema@@Base+0x1c08>
   33b38:	ldr	r4, [sl, #28]
   33b3c:	mov	r2, #0
   33b40:	mov	r3, #0
   33b44:	add	r9, sp, #88	; 0x58
   33b48:	strd	r2, [sp, #88]	; 0x58
   33b4c:	strd	r2, [r9, #8]
   33b50:	strd	r2, [r9, #16]
   33b54:	cmp	r4, #0
   33b58:	strd	r2, [r9, #24]
   33b5c:	strd	r2, [r9, #32]
   33b60:	strheq	r4, [sl, #92]	; 0x5c
   33b64:	strd	r2, [r9, #40]	; 0x28
   33b68:	beq	33d50 <__flatcc_fb_build_schema@@Base+0xa94>
   33b6c:	movw	r7, #31592	; 0x7b68
   33b70:	movt	r7, #5
   33b74:	movw	r8, #31556	; 0x7b44
   33b78:	movt	r8, #5
   33b7c:	mov	r6, #100	; 0x64
   33b80:	b	33bc8 <__flatcc_fb_build_schema@@Base+0x90c>
   33b84:	ldr	r3, [sp, #12]
   33b88:	str	r4, [r9, r2, lsl #2]
   33b8c:	add	r1, r3, r1
   33b90:	ldr	lr, [r1, #204]	; 0xcc
   33b94:	cmp	lr, #0
   33b98:	bne	33c44 <__flatcc_fb_build_schema@@Base+0x988>
   33b9c:	ldrh	r3, [r4, #16]
   33ba0:	cmp	r3, #0
   33ba4:	bne	34d68 <__flatcc_fb_build_schema@@Base+0x1aac>
   33ba8:	ldr	r4, [r4]
   33bac:	subs	r6, r6, #1
   33bb0:	movne	ip, #1
   33bb4:	moveq	ip, #0
   33bb8:	cmp	r4, #0
   33bbc:	moveq	ip, #0
   33bc0:	cmp	ip, #0
   33bc4:	beq	33cd0 <__flatcc_fb_build_schema@@Base+0xa14>
   33bc8:	ldr	r3, [r4, #4]
   33bcc:	ldr	r0, [fp, #412]	; 0x19c
   33bd0:	ldm	r3, {r1, r2}
   33bd4:	add	r0, r0, #16
   33bd8:	bl	3cd40 <fb_name_table_find@@Base>
   33bdc:	subs	ip, r0, #0
   33be0:	beq	3422c <__flatcc_fb_build_schema@@Base+0xf70>
   33be4:	ldr	r2, [ip, #24]
   33be8:	cmp	r2, #0
   33bec:	beq	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   33bf0:	mov	r3, #16
   33bf4:	asr	r3, r3, r2
   33bf8:	ands	ip, r3, #1
   33bfc:	beq	341a4 <__flatcc_fb_build_schema@@Base+0xee8>
   33c00:	ldr	ip, [r9, r2, lsl #2]
   33c04:	mov	r3, #1
   33c08:	lsl	r1, r2, #2
   33c0c:	orr	r5, r5, r3, lsl r2
   33c10:	uxth	r5, r5
   33c14:	cmp	ip, #0
   33c18:	beq	33b84 <__flatcc_fb_build_schema@@Base+0x8c8>
   33c1c:	mov	ip, #0
   33c20:	movw	r2, #31396	; 0x7aa4
   33c24:	movt	r2, #5
   33c28:	mov	r3, ip
   33c2c:	ldr	r1, [r4, #4]
   33c30:	mov	r0, fp
   33c34:	str	ip, [sp]
   33c38:	str	ip, [sp, #4]
   33c3c:	bl	2b548 <__flatcc_error_report@@Base>
   33c40:	b	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   33c44:	cmp	lr, #2
   33c48:	bne	33c7c <__flatcc_fb_build_schema@@Base+0x9c0>
   33c4c:	ldrh	r3, [r4, #16]
   33c50:	cmp	r3, #2
   33c54:	beq	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   33c58:	mov	r3, ip
   33c5c:	movw	r2, #31476	; 0x7af4
   33c60:	movt	r2, #5
   33c64:	mov	r0, fp
   33c68:	ldr	r1, [r4, #4]
   33c6c:	str	ip, [sp]
   33c70:	str	ip, [sp, #4]
   33c74:	bl	2b548 <__flatcc_error_report@@Base>
   33c78:	b	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   33c7c:	cmp	lr, #5
   33c80:	beq	34268 <__flatcc_fb_build_schema@@Base+0xfac>
   33c84:	cmp	lr, #4
   33c88:	bne	34298 <__flatcc_fb_build_schema@@Base+0xfdc>
   33c8c:	ldrh	r3, [r4, #16]
   33c90:	sub	r3, r3, #4
   33c94:	cmp	r3, #1
   33c98:	bls	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   33c9c:	mov	r3, ip
   33ca0:	mov	r2, r8
   33ca4:	ldr	r1, [r4, #4]
   33ca8:	mov	r0, fp
   33cac:	str	ip, [sp]
   33cb0:	str	ip, [sp, #4]
   33cb4:	bl	2b548 <__flatcc_error_report@@Base>
   33cb8:	b	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   33cbc:	cmp	r7, #0
   33cc0:	streq	sl, [r4, #16]
   33cc4:	streq	r6, [r4, #88]	; 0x58
   33cc8:	bne	33358 <__flatcc_fb_build_schema@@Base+0x9c>
   33ccc:	b	33318 <__flatcc_fb_build_schema@@Base+0x5c>
   33cd0:	cmp	r4, #0
   33cd4:	ldr	r6, [sp, #104]	; 0x68
   33cd8:	beq	33cfc <__flatcc_fb_build_schema@@Base+0xa40>
   33cdc:	movw	r2, #31636	; 0x7b94
   33ce0:	movt	r2, #5
   33ce4:	ldr	r1, [r4, #4]
   33ce8:	mov	r3, ip
   33cec:	mov	r0, fp
   33cf0:	str	ip, [sp]
   33cf4:	str	ip, [sp, #4]
   33cf8:	bl	2b548 <__flatcc_error_report@@Base>
   33cfc:	cmp	r6, #0
   33d00:	strh	r5, [sl, #92]	; 0x5c
   33d04:	beq	33d50 <__flatcc_fb_build_schema@@Base+0xa94>
   33d08:	ldrd	r0, [r6, #8]
   33d0c:	subs	r3, r0, #1
   33d10:	str	r3, [sp, #40]	; 0x28
   33d14:	sbc	r3, r1, #0
   33d18:	str	r3, [sp, #44]	; 0x2c
   33d1c:	ldrd	r2, [sp, #40]	; 0x28
   33d20:	cmp	r3, #0
   33d24:	cmpeq	r2, #255	; 0xff
   33d28:	bls	342d0 <__flatcc_fb_build_schema@@Base+0x1014>
   33d2c:	mov	ip, #0
   33d30:	movw	r2, #35024	; 0x88d0
   33d34:	movt	r2, #5
   33d38:	mov	r3, ip
   33d3c:	ldr	r1, [sl, #4]
   33d40:	mov	r0, fp
   33d44:	str	ip, [sp]
   33d48:	str	ip, [sp, #4]
   33d4c:	bl	2b548 <__flatcc_error_report@@Base>
   33d50:	ldr	r7, [sl, #20]
   33d54:	cmp	r7, #0
   33d58:	beq	336cc <__flatcc_fb_build_schema@@Base+0x410>
   33d5c:	add	r3, sl, #56	; 0x38
   33d60:	str	r3, [sp, #20]
   33d64:	mov	r3, #0
   33d68:	str	sl, [sp, #28]
   33d6c:	str	r3, [sp, #36]	; 0x24
   33d70:	mov	r2, #1
   33d74:	mov	r1, r7
   33d78:	ldr	r0, [sp, #20]
   33d7c:	bl	28034 <fb_symbol_table_insert_item@@Base>
   33d80:	cmp	r0, #0
   33d84:	bne	34104 <__flatcc_fb_build_schema@@Base+0xe48>
   33d88:	ldrh	r3, [r7, #8]
   33d8c:	cmp	r3, #5
   33d90:	bne	34e84 <__flatcc_fb_build_schema@@Base+0x1bc8>
   33d94:	ldr	r2, [fp, #168]	; 0xa8
   33d98:	mov	r0, #0
   33d9c:	mov	r1, #0
   33da0:	ldr	r8, [fp, #172]	; 0xac
   33da4:	strd	r0, [r9]
   33da8:	ldr	r4, [r7, #64]	; 0x40
   33dac:	strd	r0, [r9, #8]
   33db0:	strd	r0, [r9, #16]
   33db4:	cmp	r8, #0
   33db8:	strd	r0, [r9, #24]
   33dbc:	movne	r8, #128	; 0x80
   33dc0:	movne	r3, #132	; 0x84
   33dc4:	strd	r0, [r9, #32]
   33dc8:	moveq	r3, #4
   33dcc:	cmp	r2, #0
   33dd0:	strd	r0, [r9, #40]	; 0x28
   33dd4:	movne	r8, r3
   33dd8:	cmp	r4, #0
   33ddc:	beq	34b6c <__flatcc_fb_build_schema@@Base+0x18b0>
   33de0:	movw	r3, #31556	; 0x7b44
   33de4:	movt	r3, #5
   33de8:	movw	sl, #31592	; 0x7b68
   33dec:	movt	sl, #5
   33df0:	mov	r5, #0
   33df4:	mov	r6, #100	; 0x64
   33df8:	str	r3, [sp, #32]
   33dfc:	b	33e44 <__flatcc_fb_build_schema@@Base+0xb88>
   33e00:	ldr	r3, [sp, #12]
   33e04:	str	r4, [r9, r2, lsl #2]
   33e08:	add	r1, r3, r1
   33e0c:	ldr	lr, [r1, #204]	; 0xcc
   33e10:	cmp	lr, #0
   33e14:	bne	33ebc <__flatcc_fb_build_schema@@Base+0xc00>
   33e18:	ldrh	r3, [r4, #16]
   33e1c:	cmp	r3, #0
   33e20:	bne	34a98 <__flatcc_fb_build_schema@@Base+0x17dc>
   33e24:	ldr	r4, [r4]
   33e28:	subs	r6, r6, #1
   33e2c:	movne	ip, #1
   33e30:	moveq	ip, #0
   33e34:	cmp	r4, #0
   33e38:	moveq	ip, #0
   33e3c:	cmp	ip, #0
   33e40:	beq	3357c <__flatcc_fb_build_schema@@Base+0x2c0>
   33e44:	ldr	r3, [r4, #4]
   33e48:	ldr	r0, [fp, #412]	; 0x19c
   33e4c:	ldm	r3, {r1, r2}
   33e50:	add	r0, r0, #16
   33e54:	bl	3cd40 <fb_name_table_find@@Base>
   33e58:	subs	ip, r0, #0
   33e5c:	beq	340b0 <__flatcc_fb_build_schema@@Base+0xdf4>
   33e60:	ldr	r2, [ip, #24]
   33e64:	cmp	r2, #0
   33e68:	beq	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   33e6c:	asr	r3, r8, r2
   33e70:	ands	ip, r3, #1
   33e74:	beq	33f34 <__flatcc_fb_build_schema@@Base+0xc78>
   33e78:	ldr	ip, [r9, r2, lsl #2]
   33e7c:	mov	r3, #1
   33e80:	lsl	r1, r2, #2
   33e84:	orr	r5, r5, r3, lsl r2
   33e88:	uxth	r5, r5
   33e8c:	cmp	ip, #0
   33e90:	beq	33e00 <__flatcc_fb_build_schema@@Base+0xb44>
   33e94:	mov	ip, #0
   33e98:	movw	r2, #31396	; 0x7aa4
   33e9c:	movt	r2, #5
   33ea0:	mov	r3, ip
   33ea4:	ldr	r1, [r4, #4]
   33ea8:	mov	r0, fp
   33eac:	str	ip, [sp]
   33eb0:	str	ip, [sp, #4]
   33eb4:	bl	2b548 <__flatcc_error_report@@Base>
   33eb8:	b	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   33ebc:	cmp	lr, #2
   33ec0:	bne	33ef4 <__flatcc_fb_build_schema@@Base+0xc38>
   33ec4:	ldrh	r3, [r4, #16]
   33ec8:	cmp	r3, #2
   33ecc:	beq	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   33ed0:	mov	r3, ip
   33ed4:	movw	r2, #31476	; 0x7af4
   33ed8:	movt	r2, #5
   33edc:	mov	r0, fp
   33ee0:	ldr	r1, [r4, #4]
   33ee4:	str	ip, [sp]
   33ee8:	str	ip, [sp, #4]
   33eec:	bl	2b548 <__flatcc_error_report@@Base>
   33ef0:	b	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   33ef4:	cmp	lr, #5
   33ef8:	beq	340d4 <__flatcc_fb_build_schema@@Base+0xe18>
   33efc:	cmp	lr, #4
   33f00:	bne	34138 <__flatcc_fb_build_schema@@Base+0xe7c>
   33f04:	ldrh	r3, [r4, #16]
   33f08:	sub	r3, r3, #4
   33f0c:	cmp	r3, #1
   33f10:	bls	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   33f14:	mov	r3, ip
   33f18:	mov	r0, fp
   33f1c:	ldr	r1, [r4, #4]
   33f20:	str	ip, [sp]
   33f24:	str	ip, [sp, #4]
   33f28:	ldr	r2, [sp, #32]
   33f2c:	bl	2b548 <__flatcc_error_report@@Base>
   33f30:	b	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   33f34:	mov	r3, ip
   33f38:	movw	r2, #31348	; 0x7a74
   33f3c:	movt	r2, #5
   33f40:	mov	r0, fp
   33f44:	ldr	r1, [r4, #4]
   33f48:	str	ip, [sp]
   33f4c:	str	ip, [sp, #4]
   33f50:	bl	2b548 <__flatcc_error_report@@Base>
   33f54:	b	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   33f58:	mov	r4, r0
   33f5c:	ldr	r3, [r5, #4]
   33f60:	add	r0, r4, #4
   33f64:	ldm	r3, {r1, r2}
   33f68:	bl	28274 <fb_symbol_table_find@@Base>
   33f6c:	subs	r6, r0, #0
   33f70:	beq	34024 <__flatcc_fb_build_schema@@Base+0xd68>
   33f74:	ldrh	r3, [r6, #8]
   33f78:	cmp	r3, #4
   33f7c:	bhi	34024 <__flatcc_fb_build_schema@@Base+0xd68>
   33f80:	ldr	r1, [r6, #16]
   33f84:	ldr	r0, [sp, #24]
   33f88:	bl	27794 <ptr_set_find_item@@Base>
   33f8c:	cmp	r0, #0
   33f90:	beq	34024 <__flatcc_fb_build_schema@@Base+0xd68>
   33f94:	ldrh	r4, [r6, #8]
   33f98:	mov	r3, #14
   33f9c:	str	r6, [r7, #16]
   33fa0:	strh	r3, [r7, #24]
   33fa4:	cmp	r4, #1
   33fa8:	beq	34b80 <__flatcc_fb_build_schema@@Base+0x18c4>
   33fac:	ldr	ip, [fp, #152]	; 0x98
   33fb0:	cmp	ip, #0
   33fb4:	beq	34ee4 <__flatcc_fb_build_schema@@Base+0x1c28>
   33fb8:	cmp	r4, #3
   33fbc:	bne	34f14 <__flatcc_fb_build_schema@@Base+0x1c58>
   33fc0:	ldrh	r3, [r7, #72]	; 0x48
   33fc4:	tst	r3, #128	; 0x80
   33fc8:	beq	33fe4 <__flatcc_fb_build_schema@@Base+0xd28>
   33fcc:	ldr	ip, [fp, #148]	; 0x94
   33fd0:	cmp	ip, #0
   33fd4:	beq	34e30 <__flatcc_fb_build_schema@@Base+0x1b74>
   33fd8:	ldr	r3, [sp, #36]	; 0x24
   33fdc:	add	r3, r3, #1
   33fe0:	str	r3, [sp, #36]	; 0x24
   33fe4:	ldrh	r3, [r7, #56]	; 0x38
   33fe8:	cmp	r3, #0
   33fec:	beq	33668 <__flatcc_fb_build_schema@@Base+0x3ac>
   33ff0:	mov	ip, #0
   33ff4:	movw	r2, #35460	; 0x8a84
   33ff8:	movt	r2, #5
   33ffc:	mov	r3, ip
   34000:	ldr	r1, [r7, #4]
   34004:	mov	r0, fp
   34008:	str	ip, [sp]
   3400c:	str	ip, [sp, #4]
   34010:	bl	2b548 <__flatcc_error_report@@Base>
   34014:	ldr	r7, [r7]
   34018:	cmp	r7, #0
   3401c:	bne	33d70 <__flatcc_fb_build_schema@@Base+0xab4>
   34020:	b	33674 <__flatcc_fb_build_schema@@Base+0x3b8>
   34024:	ldr	r3, [r4]
   34028:	cmp	r3, #0
   3402c:	beq	33644 <__flatcc_fb_build_schema@@Base+0x388>
   34030:	mov	r6, #0
   34034:	b	3403c <__flatcc_fb_build_schema@@Base+0xd80>
   34038:	mov	r6, r2
   3403c:	ldr	r3, [r3]
   34040:	add	r2, r6, #1
   34044:	cmp	r3, #0
   34048:	bne	34038 <__flatcc_fb_build_schema@@Base+0xd7c>
   3404c:	ldr	r3, [sp, #16]
   34050:	cmp	r3, #0
   34054:	beq	33644 <__flatcc_fb_build_schema@@Base+0x388>
   34058:	rsb	r6, r6, #0
   3405c:	ldr	r0, [fp, #412]	; 0x19c
   34060:	b	34088 <__flatcc_fb_build_schema@@Base+0xdcc>
   34064:	cmp	r0, #0
   34068:	beq	34084 <__flatcc_fb_build_schema@@Base+0xdc8>
   3406c:	mov	r2, r6
   34070:	ldr	r1, [r4]
   34074:	bl	291dc <fb_scope_table_find@@Base>
   34078:	cmp	r0, #0
   3407c:	bne	33f58 <__flatcc_fb_build_schema@@Base+0xc9c>
   34080:	ldr	r0, [fp, #412]	; 0x19c
   34084:	add	r6, r6, #1
   34088:	cmp	r6, #0
   3408c:	bne	34064 <__flatcc_fb_build_schema@@Base+0xda8>
   34090:	cmp	r0, #0
   34094:	beq	33644 <__flatcc_fb_build_schema@@Base+0x388>
   34098:	mov	r2, r6
   3409c:	mov	r1, r6
   340a0:	bl	291dc <fb_scope_table_find@@Base>
   340a4:	subs	r4, r0, #0
   340a8:	bne	33f5c <__flatcc_fb_build_schema@@Base+0xca0>
   340ac:	b	33644 <__flatcc_fb_build_schema@@Base+0x388>
   340b0:	mov	r3, ip
   340b4:	movw	r2, #31316	; 0x7a54
   340b8:	movt	r2, #5
   340bc:	mov	r0, fp
   340c0:	ldr	r1, [r4, #4]
   340c4:	str	ip, [sp]
   340c8:	str	ip, [sp, #4]
   340cc:	bl	2b548 <__flatcc_error_report@@Base>
   340d0:	b	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   340d4:	ldrh	r3, [r4, #16]
   340d8:	cmp	r3, #5
   340dc:	beq	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   340e0:	mov	r3, ip
   340e4:	movw	r2, #31512	; 0x7b18
   340e8:	movt	r2, #5
   340ec:	mov	r0, fp
   340f0:	ldr	r1, [r4, #4]
   340f4:	str	ip, [sp]
   340f8:	str	ip, [sp, #4]
   340fc:	bl	2b548 <__flatcc_error_report@@Base>
   34100:	b	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   34104:	mov	ip, #0
   34108:	movw	r2, #35100	; 0x891c
   3410c:	movt	r2, #5
   34110:	ldr	r3, [r0, #4]
   34114:	mov	r0, fp
   34118:	ldr	r1, [r7, #4]
   3411c:	str	ip, [sp]
   34120:	str	ip, [sp, #4]
   34124:	bl	2b548 <__flatcc_error_report@@Base>
   34128:	ldr	r7, [r7]
   3412c:	cmp	r7, #0
   34130:	bne	33d70 <__flatcc_fb_build_schema@@Base+0xab4>
   34134:	b	33674 <__flatcc_fb_build_schema@@Base+0x3b8>
   34138:	cmp	lr, #6
   3413c:	bne	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   34140:	ldrh	r3, [r4, #16]
   34144:	cmp	r3, #6
   34148:	beq	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   3414c:	mov	ip, #0
   34150:	mov	r2, sl
   34154:	ldr	r1, [r4, #4]
   34158:	mov	r3, ip
   3415c:	mov	r0, fp
   34160:	str	ip, [sp]
   34164:	str	ip, [sp, #4]
   34168:	bl	2b548 <__flatcc_error_report@@Base>
   3416c:	b	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   34170:	ldr	r1, [r7, #4]
   34174:	movw	r2, #35400	; 0x8a48
   34178:	movt	r2, #5
   3417c:	mov	ip, #0
   34180:	ldr	sl, [sp, #28]
   34184:	mov	r3, ip
   34188:	mov	r0, fp
   3418c:	str	ip, [sp]
   34190:	str	ip, [sp, #4]
   34194:	bl	2b548 <__flatcc_error_report@@Base>
   34198:	mov	r3, #1
   3419c:	strh	r3, [sl, #48]	; 0x30
   341a0:	b	336cc <__flatcc_fb_build_schema@@Base+0x410>
   341a4:	mov	r3, ip
   341a8:	movw	r2, #31348	; 0x7a74
   341ac:	movt	r2, #5
   341b0:	mov	r0, fp
   341b4:	ldr	r1, [r4, #4]
   341b8:	str	ip, [sp]
   341bc:	str	ip, [sp, #4]
   341c0:	bl	2b548 <__flatcc_error_report@@Base>
   341c4:	b	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   341c8:	movw	r3, #40389	; 0x9dc5
   341cc:	movt	r3, #33052	; 0x811c
   341d0:	ldr	r2, [lr, #4]
   341d4:	ldr	ip, [r2]
   341d8:	ldr	r8, [r2, #4]
   341dc:	cmp	r8, #0
   341e0:	beq	341fc <__flatcc_fb_build_schema@@Base+0xf40>
   341e4:	add	r8, ip, r8
   341e8:	ldrb	r2, [ip], #1
   341ec:	eor	r3, r3, r2
   341f0:	cmp	ip, r8
   341f4:	mul	r3, r5, r3
   341f8:	bne	341e8 <__flatcc_fb_build_schema@@Base+0xf2c>
   341fc:	ldr	lr, [lr]
   34200:	eor	r3, r3, #46	; 0x2e
   34204:	mul	r3, r5, r3
   34208:	cmp	lr, #0
   3420c:	bne	341d0 <__flatcc_fb_build_schema@@Base+0xf14>
   34210:	cmp	r7, #0
   34214:	bne	33360 <__flatcc_fb_build_schema@@Base+0xa4>
   34218:	cmp	r3, #0
   3421c:	bne	34e08 <__flatcc_fb_build_schema@@Base+0x1b4c>
   34220:	str	sl, [r4, #16]
   34224:	str	r6, [r4, #88]	; 0x58
   34228:	b	33390 <__flatcc_fb_build_schema@@Base+0xd4>
   3422c:	mov	r3, ip
   34230:	movw	r2, #31316	; 0x7a54
   34234:	movt	r2, #5
   34238:	mov	r0, fp
   3423c:	ldr	r1, [r4, #4]
   34240:	str	ip, [sp]
   34244:	str	ip, [sp, #4]
   34248:	bl	2b548 <__flatcc_error_report@@Base>
   3424c:	b	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   34250:	tst	r5, #128	; 0x80
   34254:	beq	33fe4 <__flatcc_fb_build_schema@@Base+0xd28>
   34258:	ldr	r3, [sp, #36]	; 0x24
   3425c:	add	r3, r3, #1
   34260:	str	r3, [sp, #36]	; 0x24
   34264:	b	33fe4 <__flatcc_fb_build_schema@@Base+0xd28>
   34268:	ldrh	r3, [r4, #16]
   3426c:	cmp	r3, #5
   34270:	beq	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   34274:	mov	r3, ip
   34278:	movw	r2, #31512	; 0x7b18
   3427c:	movt	r2, #5
   34280:	mov	r0, fp
   34284:	ldr	r1, [r4, #4]
   34288:	str	ip, [sp]
   3428c:	str	ip, [sp, #4]
   34290:	bl	2b548 <__flatcc_error_report@@Base>
   34294:	b	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   34298:	cmp	lr, #6
   3429c:	bne	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   342a0:	ldrh	r3, [r4, #16]
   342a4:	cmp	r3, #6
   342a8:	beq	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   342ac:	mov	ip, #0
   342b0:	mov	r2, r7
   342b4:	ldr	r1, [r4, #4]
   342b8:	mov	r3, ip
   342bc:	mov	r0, fp
   342c0:	str	ip, [sp]
   342c4:	str	ip, [sp, #4]
   342c8:	bl	2b548 <__flatcc_error_report@@Base>
   342cc:	b	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   342d0:	cmp	r1, #0
   342d4:	cmpeq	r0, #1
   342d8:	beq	34328 <__flatcc_fb_build_schema@@Base+0x106c>
   342dc:	cmp	r1, #0
   342e0:	cmpeq	r0, #2
   342e4:	beq	34328 <__flatcc_fb_build_schema@@Base+0x106c>
   342e8:	cmp	r1, #0
   342ec:	cmpeq	r0, #3
   342f0:	movne	r2, #4
   342f4:	movne	r3, #0
   342f8:	beq	33d2c <__flatcc_fb_build_schema@@Base+0xa70>
   342fc:	cmp	r1, r3
   34300:	cmpeq	r0, r2
   34304:	beq	34328 <__flatcc_fb_build_schema@@Base+0x106c>
   34308:	adds	r2, r2, r2
   3430c:	adc	r3, r3, r3
   34310:	cmp	r1, r3
   34314:	cmpeq	r0, r2
   34318:	bcc	33d2c <__flatcc_fb_build_schema@@Base+0xa70>
   3431c:	cmp	r1, r3
   34320:	cmpeq	r0, r2
   34324:	bne	34308 <__flatcc_fb_build_schema@@Base+0x104c>
   34328:	strh	r0, [sl, #104]	; 0x68
   3432c:	b	33d50 <__flatcc_fb_build_schema@@Base+0xa94>
   34330:	mov	r5, r0
   34334:	ldr	r3, [r6, #4]
   34338:	add	r0, r5, #4
   3433c:	ldm	r3, {r1, r2}
   34340:	bl	28274 <fb_symbol_table_find@@Base>
   34344:	subs	r7, r0, #0
   34348:	beq	3436c <__flatcc_fb_build_schema@@Base+0x10b0>
   3434c:	ldrh	r3, [r7, #8]
   34350:	cmp	r3, #4
   34354:	bhi	3436c <__flatcc_fb_build_schema@@Base+0x10b0>
   34358:	mov	r0, sl
   3435c:	ldr	r1, [r7, #16]
   34360:	bl	27794 <ptr_set_find_item@@Base>
   34364:	cmp	r0, #0
   34368:	bne	338e4 <__flatcc_fb_build_schema@@Base+0x628>
   3436c:	ldr	r3, [r5]
   34370:	cmp	r3, #0
   34374:	beq	343f0 <__flatcc_fb_build_schema@@Base+0x1134>
   34378:	mov	r7, #0
   3437c:	b	34384 <__flatcc_fb_build_schema@@Base+0x10c8>
   34380:	mov	r7, r2
   34384:	ldr	r3, [r3]
   34388:	add	r2, r7, #1
   3438c:	cmp	r3, #0
   34390:	bne	34380 <__flatcc_fb_build_schema@@Base+0x10c4>
   34394:	cmp	r9, #0
   34398:	beq	343f0 <__flatcc_fb_build_schema@@Base+0x1134>
   3439c:	rsb	r7, r7, #0
   343a0:	ldr	r0, [fp, #412]	; 0x19c
   343a4:	b	343cc <__flatcc_fb_build_schema@@Base+0x1110>
   343a8:	cmp	r0, #0
   343ac:	beq	343c8 <__flatcc_fb_build_schema@@Base+0x110c>
   343b0:	mov	r2, r7
   343b4:	ldr	r1, [r5]
   343b8:	bl	291dc <fb_scope_table_find@@Base>
   343bc:	cmp	r0, #0
   343c0:	bne	34330 <__flatcc_fb_build_schema@@Base+0x1074>
   343c4:	ldr	r0, [fp, #412]	; 0x19c
   343c8:	add	r7, r7, #1
   343cc:	cmp	r7, #0
   343d0:	bne	343a8 <__flatcc_fb_build_schema@@Base+0x10ec>
   343d4:	cmp	r0, #0
   343d8:	beq	343f0 <__flatcc_fb_build_schema@@Base+0x1134>
   343dc:	mov	r2, r7
   343e0:	mov	r1, r7
   343e4:	bl	291dc <fb_scope_table_find@@Base>
   343e8:	subs	r5, r0, #0
   343ec:	bne	34334 <__flatcc_fb_build_schema@@Base+0x1078>
   343f0:	ldr	ip, [r4, #32]
   343f4:	mov	r3, r4
   343f8:	mov	r1, ip
   343fc:	mov	r0, fp
   34400:	ldr	r2, [sp, #36]	; 0x24
   34404:	bl	2cdd4 <error_ref_sym@@Base>
   34408:	mov	r3, #1
   3440c:	strh	r3, [r4, #24]
   34410:	ldr	r4, [r4]
   34414:	cmp	r4, #0
   34418:	bne	337c0 <__flatcc_fb_build_schema@@Base+0x504>
   3441c:	b	339e0 <__flatcc_fb_build_schema@@Base+0x724>
   34420:	andeq	r7, r5, r8, asr #14
   34424:	andeq	r7, r5, ip, lsl #15
   34428:	andeq	r7, r5, ip, lsr #14
   3442c:	andeq	r7, r5, r8, ror r7
   34430:	mov	r5, r0
   34434:	ldr	r3, [r6, #4]
   34438:	add	r0, r5, #4
   3443c:	ldm	r3, {r1, r2}
   34440:	bl	28274 <fb_symbol_table_find@@Base>
   34444:	subs	r7, r0, #0
   34448:	beq	34598 <__flatcc_fb_build_schema@@Base+0x12dc>
   3444c:	ldrh	r3, [r7, #8]
   34450:	cmp	r3, #4
   34454:	bhi	34598 <__flatcc_fb_build_schema@@Base+0x12dc>
   34458:	mov	r0, sl
   3445c:	ldr	r1, [r7, #16]
   34460:	bl	27794 <ptr_set_find_item@@Base>
   34464:	cmp	r0, #0
   34468:	beq	34598 <__flatcc_fb_build_schema@@Base+0x12dc>
   3446c:	ldrh	r6, [r7, #8]
   34470:	cmp	r6, #0
   34474:	bne	34b58 <__flatcc_fb_build_schema@@Base+0x189c>
   34478:	ldr	r5, [r4, #64]	; 0x40
   3447c:	mov	r2, #0
   34480:	mov	r3, #0
   34484:	add	r8, sp, #88	; 0x58
   34488:	mov	r1, #14
   3448c:	str	r7, [r4, #16]
   34490:	strd	r2, [sp, #88]	; 0x58
   34494:	strd	r2, [r8, #8]
   34498:	strd	r2, [r8, #16]
   3449c:	cmp	r5, #0
   344a0:	strh	r1, [r4, #24]
   344a4:	strd	r2, [r8, #24]
   344a8:	strd	r2, [r8, #32]
   344ac:	strd	r2, [r8, #40]	; 0x28
   344b0:	strd	r2, [r4, #88]	; 0x58
   344b4:	beq	349e4 <__flatcc_fb_build_schema@@Base+0x1728>
   344b8:	movw	r3, #31592	; 0x7b68
   344bc:	movt	r3, #5
   344c0:	mov	r7, #100	; 0x64
   344c4:	str	r3, [sp, #28]
   344c8:	movw	r3, #31556	; 0x7b44
   344cc:	movt	r3, #5
   344d0:	str	r3, [sp, #32]
   344d4:	b	3451c <__flatcc_fb_build_schema@@Base+0x1260>
   344d8:	ldr	r3, [sp, #20]
   344dc:	str	r5, [r8, r2, lsl #2]
   344e0:	add	r1, r3, r1
   344e4:	ldr	lr, [r1, #204]	; 0xcc
   344e8:	cmp	lr, #0
   344ec:	bne	348e8 <__flatcc_fb_build_schema@@Base+0x162c>
   344f0:	ldrh	r3, [r5, #16]
   344f4:	cmp	r3, #0
   344f8:	bne	34d94 <__flatcc_fb_build_schema@@Base+0x1ad8>
   344fc:	ldr	r5, [r5]
   34500:	subs	r7, r7, #1
   34504:	movne	ip, #1
   34508:	moveq	ip, #0
   3450c:	cmp	r5, #0
   34510:	moveq	ip, #0
   34514:	cmp	ip, #0
   34518:	beq	349bc <__flatcc_fb_build_schema@@Base+0x1700>
   3451c:	ldr	r3, [r5, #4]
   34520:	ldr	r0, [fp, #412]	; 0x19c
   34524:	ldm	r3, {r1, r2}
   34528:	add	r0, r0, #16
   3452c:	bl	3cd40 <fb_name_table_find@@Base>
   34530:	subs	ip, r0, #0
   34534:	beq	34a58 <__flatcc_fb_build_schema@@Base+0x179c>
   34538:	ldr	r2, [ip, #24]
   3453c:	cmp	r2, #0
   34540:	beq	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34544:	mov	r3, #4
   34548:	asr	r3, r3, r2
   3454c:	ands	ip, r3, #1
   34550:	beq	349f8 <__flatcc_fb_build_schema@@Base+0x173c>
   34554:	ldr	ip, [r8, r2, lsl #2]
   34558:	mov	r3, #1
   3455c:	lsl	r1, r2, #2
   34560:	orr	r6, r6, r3, lsl r2
   34564:	uxth	r6, r6
   34568:	cmp	ip, #0
   3456c:	beq	344d8 <__flatcc_fb_build_schema@@Base+0x121c>
   34570:	mov	ip, #0
   34574:	movw	r2, #31396	; 0x7aa4
   34578:	movt	r2, #5
   3457c:	mov	r3, ip
   34580:	ldr	r1, [r5, #4]
   34584:	mov	r0, fp
   34588:	str	ip, [sp]
   3458c:	str	ip, [sp, #4]
   34590:	bl	2b548 <__flatcc_error_report@@Base>
   34594:	b	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34598:	ldr	r3, [r5]
   3459c:	cmp	r3, #0
   345a0:	beq	339b0 <__flatcc_fb_build_schema@@Base+0x6f4>
   345a4:	mov	r7, #0
   345a8:	b	345b0 <__flatcc_fb_build_schema@@Base+0x12f4>
   345ac:	mov	r7, r2
   345b0:	ldr	r3, [r3]
   345b4:	add	r2, r7, #1
   345b8:	cmp	r3, #0
   345bc:	bne	345ac <__flatcc_fb_build_schema@@Base+0x12f0>
   345c0:	cmp	r9, #0
   345c4:	beq	339b0 <__flatcc_fb_build_schema@@Base+0x6f4>
   345c8:	rsb	r7, r7, #0
   345cc:	ldr	r0, [fp, #412]	; 0x19c
   345d0:	b	345f8 <__flatcc_fb_build_schema@@Base+0x133c>
   345d4:	cmp	r0, #0
   345d8:	beq	345f4 <__flatcc_fb_build_schema@@Base+0x1338>
   345dc:	mov	r2, r7
   345e0:	ldr	r1, [r5]
   345e4:	bl	291dc <fb_scope_table_find@@Base>
   345e8:	cmp	r0, #0
   345ec:	bne	34430 <__flatcc_fb_build_schema@@Base+0x1174>
   345f0:	ldr	r0, [fp, #412]	; 0x19c
   345f4:	add	r7, r7, #1
   345f8:	cmp	r7, #0
   345fc:	bne	345d4 <__flatcc_fb_build_schema@@Base+0x1318>
   34600:	cmp	r0, #0
   34604:	beq	339b0 <__flatcc_fb_build_schema@@Base+0x6f4>
   34608:	mov	r2, r7
   3460c:	mov	r1, r7
   34610:	bl	291dc <fb_scope_table_find@@Base>
   34614:	subs	r5, r0, #0
   34618:	bne	34434 <__flatcc_fb_build_schema@@Base+0x1178>
   3461c:	b	339b0 <__flatcc_fb_build_schema@@Base+0x6f4>
   34620:	ldr	r2, [r4, #16]
   34624:	ldrh	r3, [r2, #8]
   34628:	cmp	r3, #1
   3462c:	beq	34c94 <__flatcc_fb_build_schema@@Base+0x19d8>
   34630:	cmp	r3, #3
   34634:	beq	34c94 <__flatcc_fb_build_schema@@Base+0x19d8>
   34638:	ldrh	r3, [fp, #192]	; 0xc0
   3463c:	cmp	r3, #0
   34640:	beq	34f54 <__flatcc_fb_build_schema@@Base+0x1c98>
   34644:	lsrs	r2, r3, #1
   34648:	moveq	r3, r2
   3464c:	beq	3466c <__flatcc_fb_build_schema@@Base+0x13b0>
   34650:	mov	r3, #0
   34654:	add	r3, r3, #1
   34658:	lsrs	r2, r2, #1
   3465c:	uxth	r3, r3
   34660:	bne	34654 <__flatcc_fb_build_schema@@Base+0x1398>
   34664:	cmp	r3, #7
   34668:	movcs	r3, #7
   3466c:	add	r2, sp, #136	; 0x88
   34670:	add	r3, r2, r3, lsl #2
   34674:	ldr	r2, [r3, #-84]	; 0xffffffac
   34678:	cmp	r2, #0
   3467c:	beq	34a7c <__flatcc_fb_build_schema@@Base+0x17c0>
   34680:	ldr	r2, [r3, #-48]	; 0xffffffd0
   34684:	add	r5, r4, #108	; 0x6c
   34688:	str	r5, [r3, #-48]	; 0xffffffd0
   3468c:	str	r4, [r2]
   34690:	ldr	r4, [r4]
   34694:	cmp	r4, #0
   34698:	bne	33aa8 <__flatcc_fb_build_schema@@Base+0x7ec>
   3469c:	add	r4, sp, #84	; 0x54
   346a0:	mov	r1, #8
   346a4:	str	r4, [sp, #120]	; 0x78
   346a8:	sub	r3, r1, #1
   346ac:	add	r2, sp, #136	; 0x88
   346b0:	uxth	r3, r3
   346b4:	add	r2, r2, r3, lsl #2
   346b8:	ldr	r2, [r2, #-84]	; 0xffffffac
   346bc:	cmp	r2, #0
   346c0:	bne	34d48 <__flatcc_fb_build_schema@@Base+0x1a8c>
   346c4:	cmp	r3, #0
   346c8:	beq	34d8c <__flatcc_fb_build_schema@@Base+0x1ad0>
   346cc:	sub	r3, r1, #2
   346d0:	add	r2, sp, #136	; 0x88
   346d4:	uxth	r3, r3
   346d8:	add	r2, r2, r3, lsl #2
   346dc:	ldr	r2, [r2, #-84]	; 0xffffffac
   346e0:	cmp	r2, #0
   346e4:	bne	34d48 <__flatcc_fb_build_schema@@Base+0x1a8c>
   346e8:	cmp	r3, #0
   346ec:	beq	34d8c <__flatcc_fb_build_schema@@Base+0x1ad0>
   346f0:	sub	r3, r1, #3
   346f4:	add	r2, sp, #136	; 0x88
   346f8:	uxth	r3, r3
   346fc:	add	r2, r2, r3, lsl #2
   34700:	ldr	r2, [r2, #-84]	; 0xffffffac
   34704:	cmp	r2, #0
   34708:	bne	34d48 <__flatcc_fb_build_schema@@Base+0x1a8c>
   3470c:	cmp	r3, #0
   34710:	beq	34d8c <__flatcc_fb_build_schema@@Base+0x1ad0>
   34714:	sub	r3, r1, #4
   34718:	add	r2, sp, #136	; 0x88
   3471c:	uxth	r3, r3
   34720:	add	r2, r2, r3, lsl #2
   34724:	ldr	r2, [r2, #-84]	; 0xffffffac
   34728:	cmp	r2, #0
   3472c:	bne	34d48 <__flatcc_fb_build_schema@@Base+0x1a8c>
   34730:	cmp	r3, #0
   34734:	beq	34d8c <__flatcc_fb_build_schema@@Base+0x1ad0>
   34738:	sub	r3, r1, #5
   3473c:	add	r2, sp, #136	; 0x88
   34740:	uxth	r3, r3
   34744:	add	r2, r2, r3, lsl #2
   34748:	ldr	r2, [r2, #-84]	; 0xffffffac
   3474c:	cmp	r2, #0
   34750:	bne	34d48 <__flatcc_fb_build_schema@@Base+0x1a8c>
   34754:	cmp	r3, #0
   34758:	beq	34d8c <__flatcc_fb_build_schema@@Base+0x1ad0>
   3475c:	sub	r3, r1, #6
   34760:	add	r2, sp, #136	; 0x88
   34764:	uxth	r3, r3
   34768:	add	r2, r2, r3, lsl #2
   3476c:	ldr	r2, [r2, #-84]	; 0xffffffac
   34770:	cmp	r2, #0
   34774:	bne	34d48 <__flatcc_fb_build_schema@@Base+0x1a8c>
   34778:	cmp	r3, #0
   3477c:	beq	34d8c <__flatcc_fb_build_schema@@Base+0x1ad0>
   34780:	sub	r1, r1, #7
   34784:	add	r3, sp, #136	; 0x88
   34788:	uxth	r1, r1
   3478c:	add	r2, r3, r1, lsl #2
   34790:	mov	r3, r1
   34794:	ldr	r2, [r2, #-84]	; 0xffffffac
   34798:	cmp	r2, #0
   3479c:	bne	34d4c <__flatcc_fb_build_schema@@Base+0x1a90>
   347a0:	ldr	r3, [sp, #52]	; 0x34
   347a4:	str	r3, [r4]
   347a8:	ldr	r3, [sp, #84]	; 0x54
   347ac:	b	347dc <__flatcc_fb_build_schema@@Base+0x1520>
   347b0:	add	r3, sp, #48	; 0x30
   347b4:	str	lr, [sp, #48]	; 0x30
   347b8:	b	347c0 <__flatcc_fb_build_schema@@Base+0x1504>
   347bc:	mov	r1, r2
   347c0:	str	r1, [r3]
   347c4:	mov	r3, r1
   347c8:	ldr	r2, [r3], #108	; 0x6c
   347cc:	cmp	r2, #0
   347d0:	bne	347bc <__flatcc_fb_build_schema@@Base+0x1500>
   347d4:	ldr	r3, [sp, #48]	; 0x30
   347d8:	str	r2, [r1, #108]	; 0x6c
   347dc:	str	r3, [r0, #24]
   347e0:	ldr	r0, [r0]
   347e4:	cmp	r0, #0
   347e8:	bne	33a38 <__flatcc_fb_build_schema@@Base+0x77c>
   347ec:	ldr	ip, [fp, #400]	; 0x190
   347f0:	cmp	ip, #0
   347f4:	beq	34c5c <__flatcc_fb_build_schema@@Base+0x19a0>
   347f8:	mov	r6, ip
   347fc:	mov	r2, #0
   34800:	ldr	r5, [fp, #408]	; 0x198
   34804:	b	34810 <__flatcc_fb_build_schema@@Base+0x1554>
   34808:	mov	r2, r1
   3480c:	mov	r6, r3
   34810:	ldr	r3, [r6]
   34814:	add	r1, r2, #1
   34818:	cmp	r3, #0
   3481c:	bne	34808 <__flatcc_fb_build_schema@@Base+0x154c>
   34820:	sub	r3, r1, #1
   34824:	cmp	r5, #0
   34828:	clz	r3, r3
   3482c:	lsr	r3, r3, #5
   34830:	moveq	r3, #0
   34834:	cmp	r3, #0
   34838:	bne	34bfc <__flatcc_fb_build_schema@@Base+0x1940>
   3483c:	cmp	r1, #1
   34840:	moveq	r1, r3
   34844:	movne	r1, ip
   34848:	cmp	sl, #0
   3484c:	streq	sl, [fp, #404]	; 0x194
   34850:	beq	34d2c <__flatcc_fb_build_schema@@Base+0x1a70>
   34854:	ldr	r0, [fp, #412]	; 0x19c
   34858:	cmp	r0, #0
   3485c:	beq	348ac <__flatcc_fb_build_schema@@Base+0x15f0>
   34860:	rsb	r2, r2, #0
   34864:	bl	291dc <fb_scope_table_find@@Base>
   34868:	cmp	r0, #0
   3486c:	beq	34ed8 <__flatcc_fb_build_schema@@Base+0x1c1c>
   34870:	ldr	r3, [r6, #4]
   34874:	add	r0, r0, #4
   34878:	ldm	r3, {r1, r2}
   3487c:	bl	28274 <fb_symbol_table_find@@Base>
   34880:	subs	r4, r0, #0
   34884:	beq	34d20 <__flatcc_fb_build_schema@@Base+0x1a64>
   34888:	ldrh	r3, [r4, #8]
   3488c:	cmp	r3, #4
   34890:	bhi	34d20 <__flatcc_fb_build_schema@@Base+0x1a64>
   34894:	ldr	r1, [r4, #16]
   34898:	ldr	r0, [sp, #24]
   3489c:	bl	27794 <ptr_set_find_item@@Base>
   348a0:	cmp	r0, #0
   348a4:	bne	34c34 <__flatcc_fb_build_schema@@Base+0x1978>
   348a8:	ldr	ip, [fp, #400]	; 0x190
   348ac:	str	r0, [fp, #404]	; 0x194
   348b0:	b	34d2c <__flatcc_fb_build_schema@@Base+0x1a70>
   348b4:	ldr	r3, [ip, #4]
   348b8:	mov	ip, #0
   348bc:	movw	r2, #35600	; 0x8b10
   348c0:	movt	r2, #5
   348c4:	mov	r0, fp
   348c8:	ldr	r1, [r4, #4]
   348cc:	str	ip, [sp]
   348d0:	str	ip, [sp, #4]
   348d4:	bl	2b548 <__flatcc_error_report@@Base>
   348d8:	ldr	r4, [r4]
   348dc:	cmp	r4, #0
   348e0:	bne	337c0 <__flatcc_fb_build_schema@@Base+0x504>
   348e4:	b	339e0 <__flatcc_fb_build_schema@@Base+0x724>
   348e8:	cmp	lr, #2
   348ec:	bne	34920 <__flatcc_fb_build_schema@@Base+0x1664>
   348f0:	ldrh	r3, [r5, #16]
   348f4:	cmp	r3, #2
   348f8:	beq	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   348fc:	mov	r3, ip
   34900:	movw	r2, #31476	; 0x7af4
   34904:	movt	r2, #5
   34908:	mov	r0, fp
   3490c:	ldr	r1, [r5, #4]
   34910:	str	ip, [sp]
   34914:	str	ip, [sp, #4]
   34918:	bl	2b548 <__flatcc_error_report@@Base>
   3491c:	b	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34920:	cmp	lr, #5
   34924:	beq	34af0 <__flatcc_fb_build_schema@@Base+0x1834>
   34928:	cmp	lr, #4
   3492c:	bne	34b20 <__flatcc_fb_build_schema@@Base+0x1864>
   34930:	ldrh	r3, [r5, #16]
   34934:	sub	r3, r3, #4
   34938:	cmp	r3, #1
   3493c:	bls	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34940:	mov	r3, ip
   34944:	mov	r0, fp
   34948:	ldr	r1, [r5, #4]
   3494c:	str	ip, [sp]
   34950:	str	ip, [sp, #4]
   34954:	ldr	r2, [sp, #32]
   34958:	bl	2b548 <__flatcc_error_report@@Base>
   3495c:	b	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34960:	mov	r3, ip
   34964:	movw	r2, #35632	; 0x8b30
   34968:	movt	r2, #5
   3496c:	mov	r0, fp
   34970:	ldr	r1, [r4, #4]
   34974:	str	ip, [sp]
   34978:	str	ip, [sp, #4]
   3497c:	bl	2b548 <__flatcc_error_report@@Base>
   34980:	b	337f0 <__flatcc_fb_build_schema@@Base+0x534>
   34984:	ldrh	r3, [sl, #48]	; 0x30
   34988:	cmp	r3, #1
   3498c:	beq	339e4 <__flatcc_fb_build_schema@@Base+0x728>
   34990:	mov	r1, sl
   34994:	mov	r0, fp
   34998:	bl	314b8 <__flatcc_fb_clear_parser@@Base+0x13dc>
   3499c:	cmp	r0, #0
   349a0:	beq	339e4 <__flatcc_fb_build_schema@@Base+0x728>
   349a4:	mov	r3, #1
   349a8:	strh	r3, [sl, #48]	; 0x30
   349ac:	ldr	sl, [sl]
   349b0:	cmp	sl, #0
   349b4:	bne	33744 <__flatcc_fb_build_schema@@Base+0x488>
   349b8:	b	339f0 <__flatcc_fb_build_schema@@Base+0x734>
   349bc:	cmp	r5, #0
   349c0:	beq	349e4 <__flatcc_fb_build_schema@@Base+0x1728>
   349c4:	movw	r2, #31636	; 0x7b94
   349c8:	movt	r2, #5
   349cc:	ldr	r1, [r5, #4]
   349d0:	mov	r3, ip
   349d4:	mov	r0, fp
   349d8:	str	ip, [sp]
   349dc:	str	ip, [sp, #4]
   349e0:	bl	2b548 <__flatcc_error_report@@Base>
   349e4:	strh	r6, [r4, #72]	; 0x48
   349e8:	ldr	r4, [r4]
   349ec:	cmp	r4, #0
   349f0:	bne	337c0 <__flatcc_fb_build_schema@@Base+0x504>
   349f4:	b	339e0 <__flatcc_fb_build_schema@@Base+0x724>
   349f8:	mov	r3, ip
   349fc:	movw	r2, #31348	; 0x7a74
   34a00:	movt	r2, #5
   34a04:	mov	r0, fp
   34a08:	ldr	r1, [r5, #4]
   34a0c:	str	ip, [sp]
   34a10:	str	ip, [sp, #4]
   34a14:	bl	2b548 <__flatcc_error_report@@Base>
   34a18:	b	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34a1c:	ldr	r3, [r7, #4]
   34a20:	movw	r2, #35812	; 0x8be4
   34a24:	movt	r2, #5
   34a28:	mov	ip, #0
   34a2c:	mov	r0, fp
   34a30:	ldr	r1, [r4, #4]
   34a34:	str	ip, [sp]
   34a38:	str	ip, [sp, #4]
   34a3c:	bl	2b548 <__flatcc_error_report@@Base>
   34a40:	mov	r3, #1
   34a44:	strh	r3, [r4, #24]
   34a48:	ldr	r4, [r4]
   34a4c:	cmp	r4, #0
   34a50:	bne	337c0 <__flatcc_fb_build_schema@@Base+0x504>
   34a54:	b	339e0 <__flatcc_fb_build_schema@@Base+0x724>
   34a58:	mov	r3, ip
   34a5c:	movw	r2, #31316	; 0x7a54
   34a60:	movt	r2, #5
   34a64:	mov	r0, fp
   34a68:	ldr	r1, [r5, #4]
   34a6c:	str	ip, [sp]
   34a70:	str	ip, [sp, #4]
   34a74:	bl	2b548 <__flatcc_error_report@@Base>
   34a78:	b	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34a7c:	add	r2, r4, #108	; 0x6c
   34a80:	str	r4, [r3, #-84]	; 0xffffffac
   34a84:	ldr	r4, [r4]
   34a88:	str	r2, [r3, #-48]	; 0xffffffd0
   34a8c:	cmp	r4, #0
   34a90:	bne	33aa8 <__flatcc_fb_build_schema@@Base+0x7ec>
   34a94:	b	3469c <__flatcc_fb_build_schema@@Base+0x13e0>
   34a98:	mov	r3, lr
   34a9c:	movw	r2, #31436	; 0x7acc
   34aa0:	movt	r2, #5
   34aa4:	mov	r0, fp
   34aa8:	ldr	r1, [r4, #4]
   34aac:	str	lr, [sp]
   34ab0:	str	lr, [sp, #4]
   34ab4:	bl	2b548 <__flatcc_error_report@@Base>
   34ab8:	b	33e24 <__flatcc_fb_build_schema@@Base+0xb68>
   34abc:	cmp	r1, #0
   34ac0:	add	r3, sp, #88	; 0x58
   34ac4:	str	r2, [sp, #88]	; 0x58
   34ac8:	beq	34ae0 <__flatcc_fb_build_schema@@Base+0x1824>
   34acc:	str	r1, [r3]
   34ad0:	mov	r3, r1
   34ad4:	ldr	r1, [r3], #108	; 0x6c
   34ad8:	cmp	r1, #0
   34adc:	bne	34acc <__flatcc_fb_build_schema@@Base+0x1810>
   34ae0:	str	ip, [r3]
   34ae4:	ldr	r3, [sp, #88]	; 0x58
   34ae8:	str	r3, [r0, #24]
   34aec:	b	347e0 <__flatcc_fb_build_schema@@Base+0x1524>
   34af0:	ldrh	r3, [r5, #16]
   34af4:	cmp	r3, #5
   34af8:	beq	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34afc:	mov	r3, ip
   34b00:	movw	r2, #31512	; 0x7b18
   34b04:	movt	r2, #5
   34b08:	mov	r0, fp
   34b0c:	ldr	r1, [r5, #4]
   34b10:	str	ip, [sp]
   34b14:	str	ip, [sp, #4]
   34b18:	bl	2b548 <__flatcc_error_report@@Base>
   34b1c:	b	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34b20:	cmp	lr, #6
   34b24:	bne	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34b28:	ldrh	r3, [r5, #16]
   34b2c:	cmp	r3, #6
   34b30:	beq	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34b34:	mov	ip, #0
   34b38:	mov	r0, fp
   34b3c:	ldr	r1, [r5, #4]
   34b40:	mov	r3, ip
   34b44:	str	ip, [sp]
   34b48:	str	ip, [sp, #4]
   34b4c:	ldr	r2, [sp, #28]
   34b50:	bl	2b548 <__flatcc_error_report@@Base>
   34b54:	b	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34b58:	movw	r2, #35920	; 0x8c50
   34b5c:	movt	r2, #5
   34b60:	ldr	r3, [r7, #4]
   34b64:	mov	ip, #0
   34b68:	b	34a2c <__flatcc_fb_build_schema@@Base+0x1770>
   34b6c:	ldrh	r3, [r7, #24]
   34b70:	strh	r4, [r7, #72]	; 0x48
   34b74:	cmp	r3, #8
   34b78:	bne	335b4 <__flatcc_fb_build_schema@@Base+0x2f8>
   34b7c:	b	33fe4 <__flatcc_fb_build_schema@@Base+0xd28>
   34b80:	ldrh	r3, [r7, #72]	; 0x48
   34b84:	tst	r3, #128	; 0x80
   34b88:	beq	33fe4 <__flatcc_fb_build_schema@@Base+0xd28>
   34b8c:	mov	ip, #0
   34b90:	movw	r2, #35288	; 0x89d8
   34b94:	movt	r2, #5
   34b98:	mov	r3, ip
   34b9c:	ldr	r1, [r7, #4]
   34ba0:	mov	r0, fp
   34ba4:	str	ip, [sp]
   34ba8:	str	ip, [sp, #4]
   34bac:	ldr	sl, [sp, #28]
   34bb0:	bl	2b548 <__flatcc_error_report@@Base>
   34bb4:	strh	r4, [r7, #24]
   34bb8:	b	336c4 <__flatcc_fb_build_schema@@Base+0x408>
   34bbc:	ldr	r3, [r5, #4]
   34bc0:	add	r0, r0, #4
   34bc4:	ldm	r3, {r1, r2}
   34bc8:	bl	28274 <fb_symbol_table_find@@Base>
   34bcc:	subs	r6, r0, #0
   34bd0:	beq	33644 <__flatcc_fb_build_schema@@Base+0x388>
   34bd4:	ldrh	r3, [r6, #8]
   34bd8:	cmp	r3, #4
   34bdc:	bhi	33644 <__flatcc_fb_build_schema@@Base+0x388>
   34be0:	ldr	r1, [r6, #16]
   34be4:	ldr	r0, [sp, #24]
   34be8:	bl	27794 <ptr_set_find_item@@Base>
   34bec:	cmp	r0, #0
   34bf0:	bne	33f94 <__flatcc_fb_build_schema@@Base+0xcd8>
   34bf4:	b	33644 <__flatcc_fb_build_schema@@Base+0x388>
   34bf8:	mov	r5, r0
   34bfc:	ldr	r3, [r6, #4]
   34c00:	add	r0, r5, #4
   34c04:	ldm	r3, {r1, r2}
   34c08:	bl	28274 <fb_symbol_table_find@@Base>
   34c0c:	subs	r4, r0, #0
   34c10:	beq	34c9c <__flatcc_fb_build_schema@@Base+0x19e0>
   34c14:	ldrh	r3, [r4, #8]
   34c18:	cmp	r3, #4
   34c1c:	bhi	34c9c <__flatcc_fb_build_schema@@Base+0x19e0>
   34c20:	ldr	r1, [r4, #16]
   34c24:	ldr	r0, [sp, #24]
   34c28:	bl	27794 <ptr_set_find_item@@Base>
   34c2c:	cmp	r0, #0
   34c30:	beq	34c9c <__flatcc_fb_build_schema@@Base+0x19e0>
   34c34:	ldr	r3, [fp, #176]	; 0xb0
   34c38:	ldrh	r2, [r4, #8]
   34c3c:	str	r4, [fp, #404]	; 0x194
   34c40:	cmp	r3, #0
   34c44:	beq	34de8 <__flatcc_fb_build_schema@@Base+0x1b2c>
   34c48:	cmp	r2, #1
   34c4c:	bhi	34e14 <__flatcc_fb_build_schema@@Base+0x1b58>
   34c50:	mov	r3, #0
   34c54:	str	r3, [fp, #400]	; 0x190
   34c58:	b	34c68 <__flatcc_fb_build_schema@@Base+0x19ac>
   34c5c:	ldr	r3, [fp, #208]	; 0xd0
   34c60:	cmp	r3, #0
   34c64:	bne	34e60 <__flatcc_fb_build_schema@@Base+0x1ba4>
   34c68:	ldr	r0, [fp, #108]	; 0x6c
   34c6c:	clz	r3, r0
   34c70:	lsr	r3, r3, #5
   34c74:	str	r3, [fp, #120]	; 0x78
   34c78:	add	sp, sp, #140	; 0x8c
   34c7c:	ldrd	r4, [sp]
   34c80:	ldrd	r6, [sp, #8]
   34c84:	ldrd	r8, [sp, #16]
   34c88:	ldrd	sl, [sp, #24]
   34c8c:	add	sp, sp, #32
   34c90:	pop	{pc}		; (ldr pc, [sp], #4)
   34c94:	ldrh	r3, [r2, #104]	; 0x68
   34c98:	b	3463c <__flatcc_fb_build_schema@@Base+0x1380>
   34c9c:	ldr	r3, [r5]
   34ca0:	cmp	r3, #0
   34ca4:	beq	34d20 <__flatcc_fb_build_schema@@Base+0x1a64>
   34ca8:	mov	r4, #0
   34cac:	b	34cb4 <__flatcc_fb_build_schema@@Base+0x19f8>
   34cb0:	mov	r4, r2
   34cb4:	ldr	r3, [r3]
   34cb8:	add	r2, r4, #1
   34cbc:	cmp	r3, #0
   34cc0:	bne	34cb0 <__flatcc_fb_build_schema@@Base+0x19f4>
   34cc4:	cmp	sl, #0
   34cc8:	beq	34d20 <__flatcc_fb_build_schema@@Base+0x1a64>
   34ccc:	rsb	r4, r4, #0
   34cd0:	ldr	r0, [fp, #412]	; 0x19c
   34cd4:	b	34cfc <__flatcc_fb_build_schema@@Base+0x1a40>
   34cd8:	cmp	r0, #0
   34cdc:	beq	34cf8 <__flatcc_fb_build_schema@@Base+0x1a3c>
   34ce0:	mov	r2, r4
   34ce4:	ldr	r1, [r5]
   34ce8:	bl	291dc <fb_scope_table_find@@Base>
   34cec:	cmp	r0, #0
   34cf0:	bne	34bf8 <__flatcc_fb_build_schema@@Base+0x193c>
   34cf4:	ldr	r0, [fp, #412]	; 0x19c
   34cf8:	add	r4, r4, #1
   34cfc:	cmp	r4, #0
   34d00:	bne	34cd8 <__flatcc_fb_build_schema@@Base+0x1a1c>
   34d04:	cmp	r0, #0
   34d08:	beq	34d20 <__flatcc_fb_build_schema@@Base+0x1a64>
   34d0c:	mov	r2, r4
   34d10:	mov	r1, r4
   34d14:	bl	291dc <fb_scope_table_find@@Base>
   34d18:	subs	r5, r0, #0
   34d1c:	bne	34bfc <__flatcc_fb_build_schema@@Base+0x1940>
   34d20:	ldr	ip, [fp, #400]	; 0x190
   34d24:	mov	r3, #0
   34d28:	str	r3, [fp, #404]	; 0x194
   34d2c:	mov	r1, ip
   34d30:	movw	r2, #36008	; 0x8ca8
   34d34:	movt	r2, #5
   34d38:	mov	r3, #0
   34d3c:	mov	r0, fp
   34d40:	bl	2cdd4 <error_ref_sym@@Base>
   34d44:	b	34c50 <__flatcc_fb_build_schema@@Base+0x1994>
   34d48:	mov	r1, r3
   34d4c:	cmp	r1, #0
   34d50:	str	r2, [r4]
   34d54:	beq	347a8 <__flatcc_fb_build_schema@@Base+0x14ec>
   34d58:	add	r2, sp, #136	; 0x88
   34d5c:	add	r3, r2, r3, lsl #2
   34d60:	ldr	r4, [r3, #-48]	; 0xffffffd0
   34d64:	b	346a8 <__flatcc_fb_build_schema@@Base+0x13ec>
   34d68:	mov	r3, lr
   34d6c:	movw	r2, #31436	; 0x7acc
   34d70:	movt	r2, #5
   34d74:	mov	r0, fp
   34d78:	ldr	r1, [r4, #4]
   34d7c:	str	lr, [sp]
   34d80:	str	lr, [sp, #4]
   34d84:	bl	2b548 <__flatcc_error_report@@Base>
   34d88:	b	33ba8 <__flatcc_fb_build_schema@@Base+0x8ec>
   34d8c:	ldr	r3, [sp, #52]	; 0x34
   34d90:	b	347a4 <__flatcc_fb_build_schema@@Base+0x14e8>
   34d94:	mov	r3, lr
   34d98:	movw	r2, #31436	; 0x7acc
   34d9c:	movt	r2, #5
   34da0:	mov	r0, fp
   34da4:	ldr	r1, [r5, #4]
   34da8:	str	lr, [sp]
   34dac:	str	lr, [sp, #4]
   34db0:	bl	2b548 <__flatcc_error_report@@Base>
   34db4:	b	344fc <__flatcc_fb_build_schema@@Base+0x1240>
   34db8:	ldr	sl, [sp, #16]
   34dbc:	mov	r3, ip
   34dc0:	movw	r2, #33112	; 0x8158
   34dc4:	movt	r2, #5
   34dc8:	mov	r0, fp
   34dcc:	ldr	r1, [r4, #4]
   34dd0:	str	ip, [sp]
   34dd4:	str	ip, [sp, #4]
   34dd8:	bl	2b548 <__flatcc_error_report@@Base>
   34ddc:	mov	r3, #1
   34de0:	strh	r3, [sl, #48]	; 0x30
   34de4:	b	349ac <__flatcc_fb_build_schema@@Base+0x16f0>
   34de8:	cmp	r2, #0
   34dec:	beq	34c50 <__flatcc_fb_build_schema@@Base+0x1994>
   34df0:	movw	r2, #36068	; 0x8ce4
   34df4:	movt	r2, #5
   34df8:	ldr	r1, [fp, #400]	; 0x190
   34dfc:	mov	r0, fp
   34e00:	bl	2cdd4 <error_ref_sym@@Base>
   34e04:	b	34c50 <__flatcc_fb_build_schema@@Base+0x1994>
   34e08:	str	sl, [r4, #16]
   34e0c:	str	r3, [r4, #88]	; 0x58
   34e10:	b	33390 <__flatcc_fb_build_schema@@Base+0xd4>
   34e14:	movw	r2, #36028	; 0x8cbc
   34e18:	movt	r2, #5
   34e1c:	ldr	r1, [fp, #400]	; 0x190
   34e20:	mov	r3, #0
   34e24:	mov	r0, fp
   34e28:	bl	2cdd4 <error_ref_sym@@Base>
   34e2c:	b	34c50 <__flatcc_fb_build_schema@@Base+0x1994>
   34e30:	mov	r3, ip
   34e34:	movw	r2, #35288	; 0x89d8
   34e38:	movt	r2, #5
   34e3c:	mov	r0, fp
   34e40:	ldr	r1, [r7, #4]
   34e44:	str	ip, [sp]
   34e48:	str	ip, [sp, #4]
   34e4c:	ldr	sl, [sp, #28]
   34e50:	bl	2b548 <__flatcc_error_report@@Base>
   34e54:	mov	r3, #1
   34e58:	strh	r3, [r7, #24]
   34e5c:	b	336c4 <__flatcc_fb_build_schema@@Base+0x408>
   34e60:	movw	r2, #35984	; 0x8c90
   34e64:	movt	r2, #5
   34e68:	str	ip, [sp]
   34e6c:	mov	r3, ip
   34e70:	mov	r1, ip
   34e74:	str	ip, [sp, #4]
   34e78:	mov	r0, fp
   34e7c:	bl	2b548 <__flatcc_error_report@@Base>
   34e80:	b	34c68 <__flatcc_fb_build_schema@@Base+0x19ac>
   34e84:	mov	ip, r0
   34e88:	mov	r3, r0
   34e8c:	ldr	r1, [r7, #4]
   34e90:	movw	r2, #35136	; 0x8940
   34e94:	movt	r2, #5
   34e98:	mov	r0, fp
   34e9c:	str	ip, [sp]
   34ea0:	str	ip, [sp, #4]
   34ea4:	ldr	sl, [sp, #28]
   34ea8:	bl	2b548 <__flatcc_error_report@@Base>
   34eac:	b	336c4 <__flatcc_fb_build_schema@@Base+0x408>
   34eb0:	ldr	r3, [fp, #396]	; 0x18c
   34eb4:	cmp	r3, #0
   34eb8:	movne	r0, #0
   34ebc:	bne	33a04 <__flatcc_fb_build_schema@@Base+0x748>
   34ec0:	b	347ec <__flatcc_fb_build_schema@@Base+0x1530>
   34ec4:	movw	r2, #34980	; 0x88a4
   34ec8:	movt	r2, #5
   34ecc:	ldr	r1, [sl, #4]
   34ed0:	mov	ip, #0
   34ed4:	b	34184 <__flatcc_fb_build_schema@@Base+0xec8>
   34ed8:	str	r0, [fp, #404]	; 0x194
   34edc:	ldr	ip, [fp, #400]	; 0x190
   34ee0:	b	34d2c <__flatcc_fb_build_schema@@Base+0x1a70>
   34ee4:	ldr	r3, [r6, #4]
   34ee8:	movw	r2, #35340	; 0x8a0c
   34eec:	movt	r2, #5
   34ef0:	ldr	sl, [sp, #28]
   34ef4:	mov	r0, fp
   34ef8:	ldr	r1, [r7, #4]
   34efc:	str	ip, [sp]
   34f00:	str	ip, [sp, #4]
   34f04:	bl	2b548 <__flatcc_error_report@@Base>
   34f08:	mov	r3, #1
   34f0c:	strh	r3, [r7, #24]
   34f10:	b	336c4 <__flatcc_fb_build_schema@@Base+0x408>
   34f14:	movw	r2, #35220	; 0x8994
   34f18:	movt	r2, #5
   34f1c:	ldr	r3, [r6, #4]
   34f20:	mov	ip, #0
   34f24:	ldr	sl, [sp, #28]
   34f28:	b	34ef4 <__flatcc_fb_build_schema@@Base+0x1c38>
   34f2c:	movw	r3, #41128	; 0xa0a8
   34f30:	movt	r3, #6
   34f34:	movw	r0, #62968	; 0xf5f8
   34f38:	movt	r0, #3
   34f3c:	ldr	r3, [r3]
   34f40:	mov	r2, #34	; 0x22
   34f44:	mov	r1, #1
   34f48:	bl	13ef4 <fwrite@plt>
   34f4c:	mov	r0, #1
   34f50:	bl	13f48 <exit@plt>
   34f54:	movw	r1, #30624	; 0x77a0
   34f58:	movt	r1, #5
   34f5c:	ldr	r3, [pc, #-2880]	; 34424 <__flatcc_fb_build_schema@@Base+0x1168>
   34f60:	movw	r0, #35976	; 0x8c88
   34f64:	movt	r0, #5
   34f68:	movw	r2, #1521	; 0x5f1
   34f6c:	bl	14014 <__assert_fail@plt>
   34f70:	movw	r1, #30624	; 0x77a0
   34f74:	movt	r1, #5
   34f78:	ldr	r3, [pc, #-2904]	; 34428 <__flatcc_fb_build_schema@@Base+0x116c>
   34f7c:	movw	r0, #34868	; 0x8834
   34f80:	movt	r0, #5
   34f84:	movw	r2, #1558	; 0x616
   34f88:	bl	14014 <__assert_fail@plt>
   34f8c:	movw	r1, #30624	; 0x77a0
   34f90:	movt	r1, #5
   34f94:	ldr	r3, [pc, #-2928]	; 3442c <__flatcc_fb_build_schema@@Base+0x1170>
   34f98:	movw	r0, #33060	; 0x8124
   34f9c:	movt	r0, #5
   34fa0:	movw	r2, #1129	; 0x469
   34fa4:	bl	14014 <__assert_fail@plt>
   34fa8:	mov	ip, #0
   34fac:	mov	r0, fp
   34fb0:	ldr	r1, [sl, #4]
   34fb4:	mov	r3, ip
   34fb8:	movw	r2, #35512	; 0x8ab8
   34fbc:	movt	r2, #5
   34fc0:	str	ip, [sp]
   34fc4:	str	ip, [sp, #4]
   34fc8:	bl	2b548 <__flatcc_error_report@@Base>
   34fcc:	mvn	r0, #0
   34fd0:	b	34c78 <__flatcc_fb_build_schema@@Base+0x19bc>

00034fd4 <__flatcc_fb_coerce_scalar_type@@Base>:
   34fd4:	ldrh	ip, [r3, #8]
   34fd8:	cmp	ip, #0
   34fdc:	beq	35118 <__flatcc_fb_coerce_scalar_type@@Base+0x144>
   34fe0:	cmp	ip, #4
   34fe4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   34fe8:	mov	r5, r0
   34fec:	mov	r4, r3
   34ff0:	str	r6, [sp, #8]
   34ff4:	mov	r6, r1
   34ff8:	strd	r8, [sp, #12]
   34ffc:	strd	sl, [sp, #20]
   35000:	str	lr, [sp, #28]
   35004:	vpush	{d8}
   35008:	sub	sp, sp, #8
   3500c:	beq	35090 <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   35010:	cmp	ip, #1
   35014:	beq	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   35018:	cmp	ip, #6
   3501c:	bne	35120 <__flatcc_fb_coerce_scalar_type@@Base+0x14c>
   35020:	cmp	r2, #5
   35024:	beq	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   35028:	ldr	r3, [r0, #144]	; 0x90
   3502c:	cmp	r3, #0
   35030:	beq	35198 <__flatcc_fb_coerce_scalar_type@@Base+0x1c4>
   35034:	ldrb	r0, [r4]
   35038:	mov	r1, #0
   3503c:	mov	r3, #5
   35040:	cmp	r1, #0
   35044:	cmpeq	r0, #1
   35048:	strd	r0, [r4]
   3504c:	strh	r3, [r4, #8]
   35050:	bhi	3571c <__flatcc_fb_coerce_scalar_type@@Base+0x748>
   35054:	sub	r2, r2, #1
   35058:	cmp	r2, #10
   3505c:	ldrls	pc, [pc, r2, lsl #2]
   35060:	b	35674 <__flatcc_fb_coerce_scalar_type@@Base+0x6a0>
   35064:	strdeq	r5, [r3], -r4
   35068:	strdeq	r5, [r3], -r4
   3506c:	andeq	r5, r3, ip, asr #5
   35070:	muleq	r3, r4, r2
   35074:	andeq	r5, r3, r4, ror r6
   35078:	andeq	r5, r3, r8, ror #3
   3507c:	andeq	r5, r3, r4, lsl #8
   35080:	andeq	r5, r3, r4, asr #7
   35084:	andeq	r5, r3, r4, lsl #7
   35088:	strdeq	r5, [r3], -r0
   3508c:	andeq	r5, r3, r4, lsr r6
   35090:	ldrd	r0, [r3]
   35094:	cmp	r0, #0
   35098:	sbcs	r3, r1, #0
   3509c:	blt	3515c <__flatcc_fb_coerce_scalar_type@@Base+0x188>
   350a0:	mov	r3, #5
   350a4:	sub	r2, r2, #1
   350a8:	strh	r3, [r4, #8]
   350ac:	cmp	r2, #10
   350b0:	ldrls	pc, [pc, r2, lsl #2]
   350b4:	b	35674 <__flatcc_fb_coerce_scalar_type@@Base+0x6a0>
   350b8:	andeq	r5, r3, r0, ror #4
   350bc:	andeq	r5, r3, r8, lsl #4
   350c0:	andeq	r5, r3, r0, asr #5
   350c4:	andeq	r5, r3, r8, lsl #5
   350c8:	andeq	r5, r3, ip, lsr #13
   350cc:	ldrdeq	r5, [r3], -r4
   350d0:	strdeq	r5, [r3], -r0
   350d4:			; <UNDEFINED> instruction: 0x000353b0
   350d8:	andeq	r5, r3, r0, ror r3
   350dc:	andeq	r5, r3, r8, lsr r3
   350e0:	andeq	r5, r3, r0, lsl #6
   350e4:	cmp	ip, #5
   350e8:	beq	356ac <__flatcc_fb_coerce_scalar_type@@Base+0x6d8>
   350ec:	cmp	ip, #6
   350f0:	bne	356b8 <__flatcc_fb_coerce_scalar_type@@Base+0x6e4>
   350f4:	mov	r0, #0
   350f8:	add	sp, sp, #8
   350fc:	vpop	{d8}
   35100:	ldrd	r4, [sp]
   35104:	ldr	r6, [sp, #8]
   35108:	ldrd	r8, [sp, #12]
   3510c:	ldrd	sl, [sp, #20]
   35110:	add	sp, sp, #28
   35114:	pop	{pc}		; (ldr pc, [sp], #4)
   35118:	mov	r0, #0
   3511c:	bx	lr
   35120:	sub	r2, r2, #1
   35124:	cmp	r2, #10
   35128:	ldrls	pc, [pc, r2, lsl #2]
   3512c:	b	35674 <__flatcc_fb_coerce_scalar_type@@Base+0x6a0>
   35130:	andeq	r5, r3, r4, ror #4
   35134:	andeq	r5, r3, ip, lsl #4
   35138:	andeq	r5, r3, r4, asr #5
   3513c:	andeq	r5, r3, ip, lsl #5
   35140:	andeq	r5, r3, r4, ror #1
   35144:	ldrdeq	r5, [r3], -r8
   35148:	strdeq	r5, [r3], -r4
   3514c:			; <UNDEFINED> instruction: 0x000353b4
   35150:	andeq	r5, r3, r4, ror r3
   35154:	andeq	r5, r3, ip, lsr r3
   35158:	andeq	r5, r3, r4, lsl #6
   3515c:	sub	r2, r2, #1
   35160:	cmp	r2, #10
   35164:	ldrls	pc, [pc, r2, lsl #2]
   35168:	b	35674 <__flatcc_fb_coerce_scalar_type@@Base+0x6a0>
   3516c:	andeq	r5, r3, ip, ror #4
   35170:	andeq	r5, r3, r0, lsl #11
   35174:	andeq	r5, r3, r8, asr #10
   35178:	andeq	r5, r3, r4, ror #10
   3517c:			; <UNDEFINED> instruction: 0x000356b8
   35180:	strdeq	r5, [r3], -r4
   35184:	muleq	r3, ip, r4
   35188:	andeq	r5, r3, r4, ror #8
   3518c:	andeq	r5, r3, r0, lsr r4
   35190:	andeq	r5, r3, ip, lsl #10
   35194:	ldrdeq	r5, [r3], -r0
   35198:	sub	r2, r2, #1
   3519c:	cmp	r2, #10
   351a0:	ldrls	pc, [pc, r2, lsl #2]
   351a4:	b	35674 <__flatcc_fb_coerce_scalar_type@@Base+0x6a0>
   351a8:	andeq	r5, r3, ip, ror #4
   351ac:	andeq	r5, r3, r0, lsl #11
   351b0:	andeq	r5, r3, r8, asr #10
   351b4:	andeq	r5, r3, r4, ror #10
   351b8:	andeq	r5, r3, r4, ror r6
   351bc:	muleq	r3, r0, r6
   351c0:	ldrdeq	r5, [r3], -r4
   351c4:			; <UNDEFINED> instruction: 0x000355b8
   351c8:	muleq	r3, ip, r5
   351cc:	andeq	r5, r3, r4, asr r3
   351d0:	andeq	r5, r3, ip, lsl r3
   351d4:	ldrh	ip, [r4, #8]
   351d8:	cmp	ip, #4
   351dc:	beq	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   351e0:	cmp	ip, #5
   351e4:	bne	35690 <__flatcc_fb_coerce_scalar_type@@Base+0x6bc>
   351e8:	ldrd	r2, [r4]
   351ec:	cmp	r2, #0
   351f0:	sbcs	r3, r3, #0
   351f4:	blt	35700 <__flatcc_fb_coerce_scalar_type@@Base+0x72c>
   351f8:	mov	r3, #4
   351fc:	mov	r0, #0
   35200:	strh	r3, [r4, #8]
   35204:	b	350f8 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   35208:	ldrh	ip, [r4, #8]
   3520c:	cmp	ip, #5
   35210:	bne	35580 <__flatcc_fb_coerce_scalar_type@@Base+0x5ac>
   35214:	ldrd	r2, [r4]
   35218:	mov	r1, #0
   3521c:	mvn	r0, #0
   35220:	cmp	r3, r1
   35224:	cmpeq	r2, r0
   35228:	bls	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   3522c:	ldr	r1, [r6, #4]
   35230:	mov	ip, #0
   35234:	movw	r2, #36460	; 0x8e6c
   35238:	movt	r2, #5
   3523c:	mov	r0, r5
   35240:	mov	r3, ip
   35244:	str	ip, [sp]
   35248:	str	ip, [sp, #4]
   3524c:	bl	2b548 <__flatcc_error_report@@Base>
   35250:	mov	r3, #1
   35254:	mvn	r0, #0
   35258:	strh	r3, [r4, #8]
   3525c:	b	350f8 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   35260:	ldrh	ip, [r4, #8]
   35264:	cmp	ip, #5
   35268:	beq	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   3526c:	mov	ip, #0
   35270:	movw	r2, #36352	; 0x8e00
   35274:	movt	r2, #5
   35278:	mov	r0, r5
   3527c:	ldr	r1, [r6, #4]
   35280:	mov	r3, ip
   35284:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35288:	ldrh	ip, [r4, #8]
   3528c:	cmp	ip, #5
   35290:	bne	35564 <__flatcc_fb_coerce_scalar_type@@Base+0x590>
   35294:	ldrd	r2, [r4]
   35298:	cmp	r3, #0
   3529c:	cmpeq	r2, #255	; 0xff
   352a0:	bls	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   352a4:	mov	ip, #0
   352a8:	movw	r2, #36640	; 0x8f20
   352ac:	movt	r2, #5
   352b0:	mov	r0, r5
   352b4:	ldr	r1, [r6, #4]
   352b8:	mov	r3, ip
   352bc:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   352c0:	ldrh	ip, [r4, #8]
   352c4:	cmp	ip, #5
   352c8:	bne	35548 <__flatcc_fb_coerce_scalar_type@@Base+0x574>
   352cc:	ldrd	r2, [r4]
   352d0:	mov	r1, #0
   352d4:	movw	r0, #65535	; 0xffff
   352d8:	cmp	r3, r1
   352dc:	cmpeq	r2, r0
   352e0:	bls	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   352e4:	mov	ip, #0
   352e8:	movw	r2, #36552	; 0x8ec8
   352ec:	movt	r2, #5
   352f0:	mov	r0, r5
   352f4:	ldr	r1, [r6, #4]
   352f8:	mov	r3, ip
   352fc:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35300:	ldrh	ip, [r4, #8]
   35304:	cmp	ip, #4
   35308:	beq	354d0 <__flatcc_fb_coerce_scalar_type@@Base+0x4fc>
   3530c:	cmp	ip, #5
   35310:	beq	35634 <__flatcc_fb_coerce_scalar_type@@Base+0x660>
   35314:	cmp	ip, #3
   35318:	beq	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   3531c:	mov	ip, #0
   35320:	movw	r2, #37344	; 0x91e0
   35324:	movt	r2, #5
   35328:	mov	r0, r5
   3532c:	ldr	r1, [r6, #4]
   35330:	mov	r3, ip
   35334:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35338:	ldrh	ip, [r4, #8]
   3533c:	cmp	ip, #4
   35340:	beq	3550c <__flatcc_fb_coerce_scalar_type@@Base+0x538>
   35344:	cmp	ip, #5
   35348:	beq	355f0 <__flatcc_fb_coerce_scalar_type@@Base+0x61c>
   3534c:	cmp	ip, #3
   35350:	beq	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   35354:	mov	ip, #0
   35358:	movw	r2, #37236	; 0x9174
   3535c:	movt	r2, #5
   35360:	mov	r0, r5
   35364:	ldr	r1, [r6, #4]
   35368:	mov	r3, ip
   3536c:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35370:	ldrh	ip, [r4, #8]
   35374:	cmp	ip, #4
   35378:	beq	35430 <__flatcc_fb_coerce_scalar_type@@Base+0x45c>
   3537c:	cmp	ip, #5
   35380:	bne	3559c <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   35384:	ldrd	r2, [r4]
   35388:	cmp	r2, #128	; 0x80
   3538c:	sbcs	r3, r3, #0
   35390:	blt	351f8 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   35394:	mov	ip, #0
   35398:	movw	r2, #36992	; 0x9080
   3539c:	movt	r2, #5
   353a0:	mov	r0, r5
   353a4:	ldr	r1, [r6, #4]
   353a8:	mov	r3, ip
   353ac:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   353b0:	ldrh	ip, [r4, #8]
   353b4:	cmp	ip, #4
   353b8:	beq	35464 <__flatcc_fb_coerce_scalar_type@@Base+0x490>
   353bc:	cmp	ip, #5
   353c0:	bne	355b8 <__flatcc_fb_coerce_scalar_type@@Base+0x5e4>
   353c4:	ldrd	r2, [r4]
   353c8:	cmp	r2, #32768	; 0x8000
   353cc:	sbcs	r3, r3, #0
   353d0:	blt	351f8 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   353d4:	mov	ip, #0
   353d8:	movw	r2, #36884	; 0x9014
   353dc:	movt	r2, #5
   353e0:	mov	r0, r5
   353e4:	ldr	r1, [r6, #4]
   353e8:	mov	r3, ip
   353ec:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   353f0:	ldrh	ip, [r4, #8]
   353f4:	cmp	ip, #4
   353f8:	beq	3549c <__flatcc_fb_coerce_scalar_type@@Base+0x4c8>
   353fc:	cmp	ip, #5
   35400:	bne	355d4 <__flatcc_fb_coerce_scalar_type@@Base+0x600>
   35404:	ldrd	r2, [r4]
   35408:	cmp	r2, #-2147483648	; 0x80000000
   3540c:	sbcs	r3, r3, #0
   35410:	blt	351f8 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   35414:	mov	ip, #0
   35418:	movw	r2, #36776	; 0x8fa8
   3541c:	movt	r2, #5
   35420:	mov	r0, r5
   35424:	ldr	r1, [r6, #4]
   35428:	mov	r3, ip
   3542c:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35430:	ldrd	r2, [r4]
   35434:	mvn	r0, #127	; 0x7f
   35438:	mvn	r1, #0
   3543c:	cmp	r2, r0
   35440:	sbcs	r3, r3, r1
   35444:	bge	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   35448:	mov	ip, #0
   3544c:	movw	r2, #36964	; 0x9064
   35450:	movt	r2, #5
   35454:	mov	r0, r5
   35458:	ldr	r1, [r6, #4]
   3545c:	mov	r3, ip
   35460:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35464:	ldrd	r2, [r4]
   35468:	mov	r0, #32768	; 0x8000
   3546c:	movt	r0, #65535	; 0xffff
   35470:	mvn	r1, #0
   35474:	cmp	r2, r0
   35478:	sbcs	r3, r3, r1
   3547c:	bge	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   35480:	mov	ip, #0
   35484:	movw	r2, #36852	; 0x8ff4
   35488:	movt	r2, #5
   3548c:	mov	r0, r5
   35490:	ldr	r1, [r6, #4]
   35494:	mov	r3, ip
   35498:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   3549c:	ldrd	r2, [r4]
   354a0:	mov	r0, #-2147483648	; 0x80000000
   354a4:	mvn	r1, #0
   354a8:	cmp	r2, r0
   354ac:	sbcs	r3, r3, r1
   354b0:	bge	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   354b4:	mov	ip, #0
   354b8:	movw	r2, #36748	; 0x8f8c
   354bc:	movt	r2, #5
   354c0:	mov	r0, r5
   354c4:	ldr	r1, [r6, #4]
   354c8:	mov	r3, ip
   354cc:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   354d0:	ldrd	r8, [r4]
   354d4:	mov	r1, r9
   354d8:	mov	r0, r8
   354dc:	bl	3e304 <fb_value_set_visit@@Base+0x618>
   354e0:	vmov	s16, r0
   354e4:	bl	3e3cc <fb_value_set_visit@@Base+0x6e0>
   354e8:	cmp	r9, r1
   354ec:	cmpeq	r8, r0
   354f0:	bne	35658 <__flatcc_fb_coerce_scalar_type@@Base+0x684>
   354f4:	vcvt.f64.f32	d8, s16
   354f8:	mov	r3, #3
   354fc:	mov	r0, #0
   35500:	vstr	d8, [r4]
   35504:	strh	r3, [r4, #8]
   35508:	b	350f8 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   3550c:	ldrd	r8, [r4]
   35510:	mov	r0, r8
   35514:	mov	r1, r9
   35518:	bl	3e0d0 <fb_value_set_visit@@Base+0x3e4>
   3551c:	mov	sl, r0
   35520:	mov	fp, r1
   35524:	bl	3e3f8 <fb_value_set_visit@@Base+0x70c>
   35528:	cmp	r9, r1
   3552c:	cmpeq	r8, r0
   35530:	bne	35618 <__flatcc_fb_coerce_scalar_type@@Base+0x644>
   35534:	mov	r3, #3
   35538:	mov	r0, #0
   3553c:	strd	sl, [r4]
   35540:	strh	r3, [r4, #8]
   35544:	b	350f8 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   35548:	mov	ip, #0
   3554c:	movw	r2, #36492	; 0x8e8c
   35550:	movt	r2, #5
   35554:	mov	r0, r5
   35558:	ldr	r1, [r6, #4]
   3555c:	mov	r3, ip
   35560:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35564:	mov	ip, #0
   35568:	movw	r2, #36584	; 0x8ee8
   3556c:	movt	r2, #5
   35570:	mov	r0, r5
   35574:	ldr	r1, [r6, #4]
   35578:	mov	r3, ip
   3557c:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35580:	mov	ip, #0
   35584:	movw	r2, #36404	; 0x8e34
   35588:	movt	r2, #5
   3558c:	mov	r0, r5
   35590:	ldr	r1, [r6, #4]
   35594:	mov	r3, ip
   35598:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   3559c:	mov	ip, #0
   355a0:	movw	r2, #37020	; 0x909c
   355a4:	movt	r2, #5
   355a8:	mov	r0, r5
   355ac:	ldr	r1, [r6, #4]
   355b0:	mov	r3, ip
   355b4:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   355b8:	mov	ip, #0
   355bc:	movw	r2, #36916	; 0x9034
   355c0:	movt	r2, #5
   355c4:	mov	r0, r5
   355c8:	ldr	r1, [r6, #4]
   355cc:	mov	r3, ip
   355d0:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   355d4:	mov	ip, #0
   355d8:	movw	r2, #36804	; 0x8fc4
   355dc:	movt	r2, #5
   355e0:	mov	r0, r5
   355e4:	ldr	r1, [r6, #4]
   355e8:	mov	r3, ip
   355ec:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   355f0:	ldrd	r8, [r4]
   355f4:	mov	r0, r8
   355f8:	mov	r1, r9
   355fc:	bl	3e0bc <fb_value_set_visit@@Base+0x3d0>
   35600:	mov	sl, r0
   35604:	mov	fp, r1
   35608:	bl	3e468 <fb_value_set_visit@@Base+0x77c>
   3560c:	cmp	r9, r1
   35610:	cmpeq	r8, r0
   35614:	beq	35534 <__flatcc_fb_coerce_scalar_type@@Base+0x560>
   35618:	mov	ip, #0
   3561c:	movw	r2, #37188	; 0x9144
   35620:	movt	r2, #5
   35624:	mov	r0, r5
   35628:	ldr	r1, [r6, #4]
   3562c:	mov	r3, ip
   35630:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35634:	ldrd	r8, [r4]
   35638:	mov	r1, r9
   3563c:	mov	r0, r8
   35640:	bl	3e2f4 <fb_value_set_visit@@Base+0x608>
   35644:	vmov	s16, r0
   35648:	bl	3e428 <fb_value_set_visit@@Base+0x73c>
   3564c:	cmp	r9, r1
   35650:	cmpeq	r8, r0
   35654:	beq	354f4 <__flatcc_fb_coerce_scalar_type@@Base+0x520>
   35658:	mov	ip, #0
   3565c:	movw	r2, #37296	; 0x91b0
   35660:	movt	r2, #5
   35664:	mov	r0, r5
   35668:	ldr	r1, [r6, #4]
   3566c:	mov	r3, ip
   35670:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35674:	mov	ip, #0
   35678:	movw	r2, #37400	; 0x9218
   3567c:	movt	r2, #5
   35680:	mov	r0, r5
   35684:	ldr	r1, [r6, #4]
   35688:	mov	r3, ip
   3568c:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35690:	mov	ip, #0
   35694:	movw	r2, #36704	; 0x8f60
   35698:	movt	r2, #5
   3569c:	mov	r0, r5
   356a0:	ldr	r1, [r6, #4]
   356a4:	mov	r3, ip
   356a8:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   356ac:	ldr	r3, [r5, #144]	; 0x90
   356b0:	cmp	r3, #0
   356b4:	bne	356d4 <__flatcc_fb_coerce_scalar_type@@Base+0x700>
   356b8:	mov	ip, #0
   356bc:	movw	r2, #37132	; 0x910c
   356c0:	movt	r2, #5
   356c4:	mov	r0, r5
   356c8:	ldr	r1, [r6, #4]
   356cc:	mov	r3, ip
   356d0:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   356d4:	ldrd	r2, [r4]
   356d8:	cmp	r3, #0
   356dc:	cmpeq	r2, #1
   356e0:	bls	350f4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   356e4:	mov	ip, #0
   356e8:	movw	r2, #37068	; 0x90cc
   356ec:	movt	r2, #5
   356f0:	mov	r0, r5
   356f4:	ldr	r1, [r6, #4]
   356f8:	mov	r3, ip
   356fc:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   35700:	mov	ip, #0
   35704:	movw	r2, #36672	; 0x8f40
   35708:	movt	r2, #5
   3570c:	mov	r0, r5
   35710:	ldr	r1, [r6, #4]
   35714:	mov	r3, ip
   35718:	b	35244 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   3571c:	movw	r3, #36216	; 0x8d78
   35720:	movt	r3, #5
   35724:	movw	r1, #36248	; 0x8d98
   35728:	movt	r1, #5
   3572c:	movw	r0, #36320	; 0x8de0
   35730:	movt	r0, #5
   35734:	mov	r2, #52	; 0x34
   35738:	bl	14014 <__assert_fail@plt>

0003573c <flatcc_builder_default_alloc@@Base>:
   3573c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   35740:	subs	r5, r2, #0
   35744:	strd	r6, [sp, #8]
   35748:	mov	r6, r1
   3574c:	str	r8, [sp, #16]
   35750:	str	lr, [sp, #20]
   35754:	beq	3578c <flatcc_builder_default_alloc@@Base+0x50>
   35758:	mov	r7, r3
   3575c:	ldr	r3, [sp, #24]
   35760:	sub	r2, r3, #1
   35764:	cmp	r2, #6
   35768:	ldrls	pc, [pc, r2, lsl #2]
   3576c:	b	3583c <flatcc_builder_default_alloc@@Base+0x100>
   35770:			; <UNDEFINED> instruction: 0x000357bc
   35774:	andeq	r5, r3, ip, lsr r8
   35778:	andeq	r5, r3, ip, lsr r8
   3577c:	andeq	r5, r3, r4, lsr r8
   35780:	andeq	r5, r3, r4, lsr #16
   35784:	andeq	r5, r3, ip, lsr r8
   35788:	andeq	r5, r3, ip, lsr #16
   3578c:	ldr	r0, [r1]
   35790:	cmp	r0, #0
   35794:	beq	357a8 <flatcc_builder_default_alloc@@Base+0x6c>
   35798:	bl	13eac <free@plt>
   3579c:	mov	r0, r5
   357a0:	str	r5, [r6]
   357a4:	str	r5, [r6, #4]
   357a8:	ldrd	r4, [sp]
   357ac:	ldrd	r6, [sp, #8]
   357b0:	ldr	r8, [sp, #16]
   357b4:	add	sp, sp, #20
   357b8:	pop	{pc}		; (ldr pc, [sp], #4)
   357bc:	mov	r4, #256	; 0x100
   357c0:	cmp	r4, r5
   357c4:	bcs	357d4 <flatcc_builder_default_alloc@@Base+0x98>
   357c8:	lsl	r4, r4, #1
   357cc:	cmp	r5, r4
   357d0:	bhi	357c8 <flatcc_builder_default_alloc@@Base+0x8c>
   357d4:	ldr	r2, [r6, #4]
   357d8:	cmp	r5, r2
   357dc:	bhi	357ec <flatcc_builder_default_alloc@@Base+0xb0>
   357e0:	cmp	r4, r2, lsr #1
   357e4:	movls	r0, #0
   357e8:	bls	357a8 <flatcc_builder_default_alloc@@Base+0x6c>
   357ec:	mov	r1, r4
   357f0:	ldr	r0, [r6]
   357f4:	bl	13ee8 <realloc@plt>
   357f8:	subs	r5, r0, #0
   357fc:	beq	35858 <flatcc_builder_default_alloc@@Base+0x11c>
   35800:	cmp	r7, #0
   35804:	beq	35814 <flatcc_builder_default_alloc@@Base+0xd8>
   35808:	ldr	r0, [r6, #4]
   3580c:	cmp	r0, r4
   35810:	bcc	35844 <flatcc_builder_default_alloc@@Base+0x108>
   35814:	mov	r0, #0
   35818:	str	r5, [r6]
   3581c:	str	r4, [r6, #4]
   35820:	b	357a8 <flatcc_builder_default_alloc@@Base+0x6c>
   35824:	mov	r4, r5
   35828:	b	357d4 <flatcc_builder_default_alloc@@Base+0x98>
   3582c:	mov	r4, #64	; 0x40
   35830:	b	357c0 <flatcc_builder_default_alloc@@Base+0x84>
   35834:	mov	r4, #288	; 0x120
   35838:	b	357c0 <flatcc_builder_default_alloc@@Base+0x84>
   3583c:	mov	r4, #32
   35840:	b	357c0 <flatcc_builder_default_alloc@@Base+0x84>
   35844:	sub	r2, r4, r0
   35848:	mov	r1, #0
   3584c:	add	r0, r5, r0
   35850:	bl	13f78 <memset@plt>
   35854:	b	35814 <flatcc_builder_default_alloc@@Base+0xd8>
   35858:	mvn	r0, #0
   3585c:	b	357a8 <flatcc_builder_default_alloc@@Base+0x6c>
   35860:	movw	r3, #37424	; 0x9230
   35864:	movt	r3, #5
   35868:	str	r4, [sp, #-8]!
   3586c:	movw	r1, #39296	; 0x9980
   35870:	movt	r1, #5
   35874:	str	lr, [sp, #4]
   35878:	movw	r0, #35672	; 0x8b58
   3587c:	movt	r0, #4
   35880:	mov	r2, #308	; 0x134
   35884:	bl	14014 <__assert_fail@plt>
   35888:	movw	r1, #39296	; 0x9980
   3588c:	movt	r1, #5
   35890:	ldr	r3, [pc, #20]	; 358ac <flatcc_builder_default_alloc@@Base+0x170>
   35894:	movw	r0, #35672	; 0x8b58
   35898:	movt	r0, #4
   3589c:	str	r4, [sp, #-8]!
   358a0:	movw	r2, #677	; 0x2a5
   358a4:	str	lr, [sp, #4]
   358a8:	bl	14014 <__assert_fail@plt>
   358ac:	andeq	r9, r5, r0, asr #4
   358b0:	movw	r1, #39296	; 0x9980
   358b4:	movt	r1, #5
   358b8:	ldr	r3, [pc, #20]	; 358d4 <flatcc_builder_default_alloc@@Base+0x198>
   358bc:	movw	r0, #35672	; 0x8b58
   358c0:	movt	r0, #4
   358c4:	str	r4, [sp, #-8]!
   358c8:	movw	r2, #702	; 0x2be
   358cc:	str	lr, [sp, #4]
   358d0:	bl	14014 <__assert_fail@plt>
   358d4:	andeq	r9, r5, ip, asr #4
   358d8:	movw	r1, #39296	; 0x9980
   358dc:	movt	r1, #5
   358e0:	ldr	r3, [pc, #20]	; 358fc <flatcc_builder_default_alloc@@Base+0x1c0>
   358e4:	movw	r0, #35672	; 0x8b58
   358e8:	movt	r0, #4
   358ec:	str	r4, [sp, #-8]!
   358f0:	movw	r2, #651	; 0x28b
   358f4:	str	lr, [sp, #4]
   358f8:	bl	14014 <__assert_fail@plt>
   358fc:	andeq	r9, r5, ip, asr r2
   35900:	movw	r1, #39296	; 0x9980
   35904:	movt	r1, #5
   35908:	ldr	r3, [pc, #20]	; 35924 <flatcc_builder_default_alloc@@Base+0x1e8>
   3590c:	movw	r0, #39368	; 0x99c8
   35910:	movt	r0, #5
   35914:	str	r4, [sp, #-8]!
   35918:	mov	r2, #892	; 0x37c
   3591c:	str	lr, [sp, #4]
   35920:	bl	14014 <__assert_fail@plt>
   35924:	andeq	r9, r5, r8, ror #4
   35928:	movw	r1, #39296	; 0x9980
   3592c:	movt	r1, #5
   35930:	ldr	r3, [pc, #20]	; 3594c <flatcc_builder_default_alloc@@Base+0x210>
   35934:	movw	r0, #39396	; 0x99e4
   35938:	movt	r0, #5
   3593c:	str	r4, [sp, #-8]!
   35940:	movw	r2, #542	; 0x21e
   35944:	str	lr, [sp, #4]
   35948:	bl	14014 <__assert_fail@plt>
   3594c:	andeq	r9, r5, ip, ror r2
   35950:	movw	r1, #39296	; 0x9980
   35954:	movt	r1, #5
   35958:	ldr	r3, [pc, #20]	; 35974 <flatcc_builder_default_alloc@@Base+0x238>
   3595c:	movw	r0, #39424	; 0x9a00
   35960:	movt	r0, #5
   35964:	str	r4, [sp, #-8]!
   35968:	movw	r2, #966	; 0x3c6
   3596c:	str	lr, [sp, #4]
   35970:	bl	14014 <__assert_fail@plt>
   35974:	muleq	r5, ip, r2
   35978:	movw	r1, #39296	; 0x9980
   3597c:	movt	r1, #5
   35980:	ldr	r3, [pc, #20]	; 3599c <flatcc_builder_default_alloc@@Base+0x260>
   35984:	movw	r0, #39468	; 0x9a2c
   35988:	movt	r0, #5
   3598c:	str	r4, [sp, #-8]!
   35990:	movw	r2, #1926	; 0x786
   35994:	str	lr, [sp, #4]
   35998:	bl	14014 <__assert_fail@plt>
   3599c:			; <UNDEFINED> instruction: 0x000592bc
   359a0:	ldrd	r2, [r0, #156]	; 0x9c
   359a4:	strd	r4, [sp, #-20]!	; 0xffffffec
   359a8:	mov	r5, r1
   359ac:	mov	r4, r0
   359b0:	strd	r6, [sp, #8]
   359b4:	str	lr, [sp, #16]
   359b8:	sub	sp, sp, #12
   359bc:	add	r1, r2, #1
   359c0:	cmp	r1, r3
   359c4:	str	r1, [r0, #156]	; 0x9c
   359c8:	ble	35aa8 <flatcc_builder_default_alloc@@Base+0x36c>
   359cc:	ldr	r3, [r0, #176]	; 0xb0
   359d0:	cmp	r1, r3
   359d4:	cmpgt	r3, #0
   359d8:	movgt	r3, #1
   359dc:	movle	r3, #0
   359e0:	bgt	35ab8 <flatcc_builder_default_alloc@@Base+0x37c>
   359e4:	add	r2, r2, r2, lsl #3
   359e8:	ldr	r1, [r0, #88]	; 0x58
   359ec:	lsl	r6, r2, #2
   359f0:	add	r2, r6, #36	; 0x24
   359f4:	cmp	r2, r1
   359f8:	bls	35a1c <flatcc_builder_default_alloc@@Base+0x2e0>
   359fc:	mov	ip, #4
   35a00:	add	r1, r0, #84	; 0x54
   35a04:	ldr	r0, [r0, #40]	; 0x28
   35a08:	str	ip, [sp]
   35a0c:	ldr	r7, [r4, #48]	; 0x30
   35a10:	blx	r7
   35a14:	cmp	r0, #0
   35a18:	bne	35ac0 <flatcc_builder_default_alloc@@Base+0x384>
   35a1c:	ldr	r2, [r4, #84]	; 0x54
   35a20:	add	r2, r2, r6
   35a24:	cmp	r2, #0
   35a28:	str	r2, [r4, #32]
   35a2c:	beq	35ab8 <flatcc_builder_default_alloc@@Base+0x37c>
   35a30:	ldr	r3, [r4, #88]	; 0x58
   35a34:	movw	r0, #36409	; 0x8e39
   35a38:	movt	r0, #14563	; 0x38e3
   35a3c:	ldr	r1, [r4, #176]	; 0xb0
   35a40:	umull	r0, r3, r0, r3
   35a44:	lsr	r3, r3, #3
   35a48:	cmp	r3, r1
   35a4c:	cmpgt	r1, #0
   35a50:	movgt	r3, r1
   35a54:	str	r3, [r4, #160]	; 0xa0
   35a58:	ldr	r3, [r4, #20]
   35a5c:	mov	r1, #0
   35a60:	mvn	lr, #3
   35a64:	mov	r0, r1
   35a68:	ldr	ip, [r4, #28]
   35a6c:	ldrh	r6, [r4, #130]	; 0x82
   35a70:	str	r3, [r2, #8]
   35a74:	add	r3, r3, ip
   35a78:	add	r3, r3, #7
   35a7c:	bic	r3, r3, #7
   35a80:	strh	r6, [r2, #12]
   35a84:	strh	r5, [r4, #130]	; 0x82
   35a88:	stm	r2, {ip, lr}
   35a8c:	str	r1, [r4, #20]
   35a90:	str	r3, [r4, #28]
   35a94:	add	sp, sp, #12
   35a98:	ldrd	r4, [sp]
   35a9c:	ldrd	r6, [sp, #8]
   35aa0:	add	sp, sp, #16
   35aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   35aa8:	ldr	r2, [r0, #32]
   35aac:	add	r2, r2, #36	; 0x24
   35ab0:	str	r2, [r0, #32]
   35ab4:	b	35a58 <flatcc_builder_default_alloc@@Base+0x31c>
   35ab8:	mvn	r0, #0
   35abc:	b	35a94 <flatcc_builder_default_alloc@@Base+0x358>
   35ac0:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>
   35ac4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   35ac8:	mov	r4, r0
   35acc:	ldrh	r0, [r0, #128]	; 0x80
   35ad0:	strd	r6, [sp, #8]
   35ad4:	mov	r6, #4
   35ad8:	ldr	r5, [r4, #136]	; 0x88
   35adc:	str	lr, [sp, #20]
   35ae0:	mov	lr, r2
   35ae4:	str	r8, [sp, #16]
   35ae8:	sub	sp, sp, #88	; 0x58
   35aec:	cmp	r0, #3
   35af0:	add	r0, sp, #12
   35af4:	movls	r2, #4
   35af8:	str	lr, [sp, #12]
   35afc:	str	r6, [sp, #16]
   35b00:	strhls	r2, [r4, #128]	; 0x80
   35b04:	mov	r2, #1
   35b08:	lsls	ip, lr, #2
   35b0c:	moveq	r7, #2
   35b10:	str	r2, [sp, #20]
   35b14:	str	r0, [sp, #24]
   35b18:	and	r0, r5, #3
   35b1c:	str	r6, [sp, #28]
   35b20:	beq	35b44 <flatcc_builder_default_alloc@@Base+0x408>
   35b24:	mov	r8, #2
   35b28:	add	r6, ip, r6
   35b2c:	mov	r2, r8
   35b30:	mov	r7, #3
   35b34:	str	r6, [sp, #16]
   35b38:	str	r8, [sp, #20]
   35b3c:	str	r1, [sp, #32]
   35b40:	str	ip, [sp, #36]	; 0x24
   35b44:	cmp	r0, #0
   35b48:	beq	35b70 <flatcc_builder_default_alloc@@Base+0x434>
   35b4c:	ldr	r8, [pc, #360]	; 35cbc <flatcc_builder_default_alloc@@Base+0x580>
   35b50:	add	r2, r2, #1
   35b54:	add	ip, sp, #88	; 0x58
   35b58:	add	ip, ip, r2, lsl #3
   35b5c:	add	r6, r6, r0
   35b60:	mov	r2, r7
   35b64:	strd	r6, [sp, #16]
   35b68:	str	r8, [ip, #-72]	; 0xffffffb8
   35b6c:	str	r0, [ip, #-68]	; 0xffffffbc
   35b70:	cmp	lr, #0
   35b74:	beq	35c04 <flatcc_builder_default_alloc@@Base+0x4c8>
   35b78:	cmp	r3, #0
   35b7c:	subne	r5, r1, r5
   35b80:	addne	lr, r3, lr
   35b84:	addne	r5, r5, r6
   35b88:	bne	35bb4 <flatcc_builder_default_alloc@@Base+0x478>
   35b8c:	b	35c6c <flatcc_builder_default_alloc@@Base+0x530>
   35b90:	sub	ip, r5, r1
   35b94:	add	r0, ip, r0
   35b98:	str	r0, [r1, #-4]
   35b9c:	ldrb	r0, [r3]
   35ba0:	cmp	r0, #0
   35ba4:	beq	35c50 <flatcc_builder_default_alloc@@Base+0x514>
   35ba8:	add	r3, r3, #1
   35bac:	cmp	r3, lr
   35bb0:	beq	35c00 <flatcc_builder_default_alloc@@Base+0x4c4>
   35bb4:	ldr	r0, [r1], #4
   35bb8:	cmp	r0, #0
   35bbc:	bne	35b90 <flatcc_builder_default_alloc@@Base+0x454>
   35bc0:	ldrb	r0, [r3]
   35bc4:	cmp	r0, #0
   35bc8:	beq	35ba8 <flatcc_builder_default_alloc@@Base+0x46c>
   35bcc:	movw	r1, #39296	; 0x9980
   35bd0:	movt	r1, #5
   35bd4:	ldr	r3, [pc, #228]	; 35cc0 <flatcc_builder_default_alloc@@Base+0x584>
   35bd8:	movw	r0, #39492	; 0x9a44
   35bdc:	movt	r0, #5
   35be0:	movw	r2, #1461	; 0x5b5
   35be4:	bl	14014 <__assert_fail@plt>
   35be8:	sub	r0, ip, r1
   35bec:	add	r3, r3, #1
   35bf0:	add	r0, r0, r5
   35bf4:	cmp	lr, r3
   35bf8:	str	r0, [r1, #-4]
   35bfc:	bne	35c74 <flatcc_builder_default_alloc@@Base+0x538>
   35c00:	ldr	r5, [r4, #136]	; 0x88
   35c04:	sub	r7, r5, r6
   35c08:	cmp	r7, r5
   35c0c:	bge	35ca0 <flatcc_builder_default_alloc@@Base+0x564>
   35c10:	mov	r3, r7
   35c14:	add	r1, sp, #24
   35c18:	str	r6, [sp]
   35c1c:	ldr	r0, [r4, #36]	; 0x24
   35c20:	ldr	r5, [r4, #44]	; 0x2c
   35c24:	blx	r5
   35c28:	cmp	r0, #0
   35c2c:	bne	35c9c <flatcc_builder_default_alloc@@Base+0x560>
   35c30:	mov	r0, r7
   35c34:	str	r7, [r4, #136]	; 0x88
   35c38:	add	sp, sp, #88	; 0x58
   35c3c:	ldrd	r4, [sp]
   35c40:	ldrd	r6, [sp, #8]
   35c44:	ldr	r8, [sp, #16]
   35c48:	add	sp, sp, #20
   35c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   35c50:	movw	r1, #39296	; 0x9980
   35c54:	movt	r1, #5
   35c58:	ldr	r3, [pc, #96]	; 35cc0 <flatcc_builder_default_alloc@@Base+0x584>
   35c5c:	movw	r0, #39476	; 0x9a34
   35c60:	movt	r0, #5
   35c64:	movw	r2, #1457	; 0x5b1
   35c68:	bl	14014 <__assert_fail@plt>
   35c6c:	sub	ip, r1, r5
   35c70:	add	ip, ip, r6
   35c74:	ldr	r5, [r1], #4
   35c78:	cmp	r5, #0
   35c7c:	bne	35be8 <flatcc_builder_default_alloc@@Base+0x4ac>
   35c80:	movw	r1, #39296	; 0x9980
   35c84:	movt	r1, #5
   35c88:	ldr	r3, [pc, #48]	; 35cc0 <flatcc_builder_default_alloc@@Base+0x584>
   35c8c:	movw	r0, #35672	; 0x8b58
   35c90:	movt	r0, #4
   35c94:	movw	r2, #1463	; 0x5b7
   35c98:	bl	14014 <__assert_fail@plt>
   35c9c:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   35ca0:	movw	r1, #39296	; 0x9980
   35ca4:	movt	r1, #5
   35ca8:	ldr	r3, [pc, #20]	; 35cc4 <flatcc_builder_default_alloc@@Base+0x588>
   35cac:	movw	r0, #35672	; 0x8b58
   35cb0:	movt	r0, #4
   35cb4:	movw	r2, #647	; 0x287
   35cb8:	bl	14014 <__assert_fail@plt>
   35cbc:	ldrdeq	r9, [r5], -r8
   35cc0:	ldrdeq	r9, [r5], -r8
   35cc4:	andeq	r9, r5, ip, asr r2

00035cc8 <flatcc_builder_flush_vtable_cache@@Base>:
   35cc8:	ldr	r3, [r0, #116]	; 0x74
   35ccc:	cmp	r3, #0
   35cd0:	bxeq	lr
   35cd4:	str	r4, [sp, #-8]!
   35cd8:	mov	r4, r0
   35cdc:	mov	r1, #0
   35ce0:	ldr	r0, [r0, #92]	; 0x5c
   35ce4:	ldr	r2, [r4, #96]	; 0x60
   35ce8:	str	lr, [sp, #4]
   35cec:	bl	13f78 <memset@plt>
   35cf0:	mov	r3, #16
   35cf4:	mov	r2, #0
   35cf8:	strd	r2, [r4, #120]	; 0x78
   35cfc:	ldr	r4, [sp]
   35d00:	add	sp, sp, #4
   35d04:	pop	{pc}		; (ldr pc, [sp], #4)

00035d08 <flatcc_builder_custom_init@@Base>:
   35d08:	strd	r4, [sp, #-24]!	; 0xffffffe8
   35d0c:	mov	r5, r3
   35d10:	mov	r4, r0
   35d14:	strd	r6, [sp, #8]
   35d18:	mov	r6, r1
   35d1c:	mov	r7, r2
   35d20:	mov	r1, #0
   35d24:	mov	r2, #232	; 0xe8
   35d28:	str	r8, [sp, #16]
   35d2c:	str	lr, [sp, #20]
   35d30:	ldr	r8, [sp, #24]
   35d34:	bl	13f78 <memset@plt>
   35d38:	cmp	r6, #0
   35d3c:	beq	35d78 <flatcc_builder_custom_init@@Base+0x70>
   35d40:	cmp	r5, #0
   35d44:	movw	r3, #22332	; 0x573c
   35d48:	movt	r3, #3
   35d4c:	str	r7, [r4, #36]	; 0x24
   35d50:	mov	r0, #0
   35d54:	moveq	r5, r3
   35d58:	str	r8, [r4, #40]	; 0x28
   35d5c:	str	r6, [r4, #44]	; 0x2c
   35d60:	str	r5, [r4, #48]	; 0x30
   35d64:	ldrd	r4, [sp]
   35d68:	ldrd	r6, [sp, #8]
   35d6c:	ldr	r8, [sp, #16]
   35d70:	add	sp, sp, #20
   35d74:	pop	{pc}		; (ldr pc, [sp], #4)
   35d78:	mov	r3, #1
   35d7c:	movw	r6, #46200	; 0xb478
   35d80:	movt	r6, #3
   35d84:	add	r7, r4, #188	; 0xbc
   35d88:	str	r3, [r4, #184]	; 0xb8
   35d8c:	b	35d40 <flatcc_builder_custom_init@@Base+0x38>

00035d90 <flatcc_builder_init@@Base>:
   35d90:	mov	r2, #232	; 0xe8
   35d94:	mov	r1, #0
   35d98:	str	r4, [sp, #-8]!
   35d9c:	str	lr, [sp, #4]
   35da0:	bl	13f78 <memset@plt>
   35da4:	mov	r3, r0
   35da8:	movw	r2, #22332	; 0x573c
   35dac:	movt	r2, #3
   35db0:	mov	r0, #1
   35db4:	ldr	r4, [sp]
   35db8:	add	ip, r3, #188	; 0xbc
   35dbc:	movw	r1, #46200	; 0xb478
   35dc0:	movt	r1, #3
   35dc4:	add	sp, sp, #4
   35dc8:	str	ip, [r3, #36]	; 0x24
   35dcc:	str	r1, [r3, #44]	; 0x2c
   35dd0:	str	r2, [r3, #48]	; 0x30
   35dd4:	str	r0, [r3, #184]	; 0xb8
   35dd8:	mov	r0, #0
   35ddc:	pop	{pc}		; (ldr pc, [sp], #4)

00035de0 <flatcc_builder_custom_reset@@Base>:
   35de0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   35de4:	mov	r5, #0
   35de8:	mov	r4, r0
   35dec:	strd	r6, [sp, #8]
   35df0:	mov	r6, r0
   35df4:	strd	r8, [sp, #16]
   35df8:	mov	r8, r1
   35dfc:	mov	r9, r2
   35e00:	str	lr, [sp, #24]
   35e04:	sub	sp, sp, #12
   35e08:	b	35e58 <flatcc_builder_custom_reset@@Base+0x78>
   35e0c:	cmp	r5, #5
   35e10:	cmpne	r9, #0
   35e14:	beq	35e3c <flatcc_builder_custom_reset@@Base+0x5c>
   35e18:	mov	r3, #1
   35e1c:	str	r5, [sp]
   35e20:	mov	r2, r3
   35e24:	ldr	r0, [r6, #40]	; 0x28
   35e28:	ldr	r7, [r6, #48]	; 0x30
   35e2c:	blx	r7
   35e30:	cmp	r0, #0
   35e34:	bne	35f40 <flatcc_builder_custom_reset@@Base+0x160>
   35e38:	ldr	r0, [r4, #52]	; 0x34
   35e3c:	mov	r1, #0
   35e40:	ldr	r2, [r4, #56]	; 0x38
   35e44:	bl	13f78 <memset@plt>
   35e48:	add	r5, r5, #1
   35e4c:	add	r4, r4, #8
   35e50:	cmp	r5, #8
   35e54:	beq	35e90 <flatcc_builder_custom_reset@@Base+0xb0>
   35e58:	ldr	r0, [r4, #52]	; 0x34
   35e5c:	add	r1, r4, #52	; 0x34
   35e60:	cmp	r0, #0
   35e64:	bne	35e0c <flatcc_builder_custom_reset@@Base+0x2c>
   35e68:	ldr	r3, [r4, #56]	; 0x38
   35e6c:	cmp	r3, #0
   35e70:	beq	35e48 <flatcc_builder_custom_reset@@Base+0x68>
   35e74:	movw	r1, #39296	; 0x9980
   35e78:	movt	r1, #5
   35e7c:	ldr	r3, [pc, #196]	; 35f48 <flatcc_builder_custom_reset@@Base+0x168>
   35e80:	movw	r0, #39508	; 0x9a54
   35e84:	movt	r0, #5
   35e88:	movw	r2, #434	; 0x1b2
   35e8c:	bl	14014 <__assert_fail@plt>
   35e90:	mov	r2, #0
   35e94:	ldr	r0, [r6, #52]	; 0x34
   35e98:	ldr	r3, [r6, #124]	; 0x7c
   35e9c:	ldr	r1, [r6, #60]	; 0x3c
   35ea0:	str	r0, [r6, #4]
   35ea4:	str	r2, [r6, #120]	; 0x78
   35ea8:	cmp	r3, r2
   35eac:	ldr	r2, [r6, #76]	; 0x4c
   35eb0:	movne	r3, #16
   35eb4:	strne	r3, [r6, #124]	; 0x7c
   35eb8:	mov	r3, #0
   35ebc:	cmp	r8, r3
   35ec0:	str	r2, [r6]
   35ec4:	str	r1, [r6, #16]
   35ec8:	str	r3, [r6, #20]
   35ecc:	str	r3, [r6, #24]
   35ed0:	str	r3, [r6, #32]
   35ed4:	strh	r3, [r6, #128]	; 0x80
   35ed8:	str	r3, [r6, #136]	; 0x88
   35edc:	str	r3, [r6, #140]	; 0x8c
   35ee0:	str	r3, [r6, #148]	; 0x94
   35ee4:	str	r3, [r6, #152]	; 0x98
   35ee8:	str	r3, [r6, #156]	; 0x9c
   35eec:	str	r3, [r6, #160]	; 0xa0
   35ef0:	bne	35f18 <flatcc_builder_custom_reset@@Base+0x138>
   35ef4:	ldr	r0, [r6, #184]	; 0xb8
   35ef8:	cmp	r0, #0
   35efc:	bne	35f30 <flatcc_builder_custom_reset@@Base+0x150>
   35f00:	add	sp, sp, #12
   35f04:	ldrd	r4, [sp]
   35f08:	ldrd	r6, [sp, #8]
   35f0c:	ldrd	r8, [sp, #16]
   35f10:	add	sp, sp, #24
   35f14:	pop	{pc}		; (ldr pc, [sp], #4)
   35f18:	ldr	r0, [r6, #184]	; 0xb8
   35f1c:	str	r3, [r6, #172]	; 0xac
   35f20:	str	r3, [r6, #176]	; 0xb0
   35f24:	str	r3, [r6, #180]	; 0xb4
   35f28:	cmp	r0, #0
   35f2c:	beq	35f00 <flatcc_builder_custom_reset@@Base+0x120>
   35f30:	add	r0, r6, #188	; 0xbc
   35f34:	bl	3b324 <flatcc_emitter_reset@@Base>
   35f38:	mov	r0, #0
   35f3c:	b	35f00 <flatcc_builder_custom_reset@@Base+0x120>
   35f40:	mvn	r0, #0
   35f44:	b	35f00 <flatcc_builder_custom_reset@@Base+0x120>
   35f48:	strdeq	r9, [r5], -r8

00035f4c <flatcc_builder_reset@@Base>:
   35f4c:	mov	r2, #0
   35f50:	mov	r1, r2
   35f54:	b	35de0 <flatcc_builder_custom_reset@@Base>

00035f58 <flatcc_builder_clear@@Base>:
   35f58:	strd	r4, [sp, #-20]!	; 0xffffffec
   35f5c:	mov	r4, #0
   35f60:	add	r5, r0, #52	; 0x34
   35f64:	strd	r6, [sp, #8]
   35f68:	mov	r6, r0
   35f6c:	str	lr, [sp, #16]
   35f70:	sub	sp, sp, #12
   35f74:	mov	r3, #0
   35f78:	mov	r1, r5
   35f7c:	str	r4, [sp]
   35f80:	mov	r2, r3
   35f84:	add	r4, r4, #1
   35f88:	ldr	r0, [r6, #40]	; 0x28
   35f8c:	add	r5, r5, #8
   35f90:	ldr	r7, [r6, #48]	; 0x30
   35f94:	blx	r7
   35f98:	cmp	r4, #8
   35f9c:	bne	35f74 <flatcc_builder_clear@@Base+0x1c>
   35fa0:	ldr	r3, [r6, #184]	; 0xb8
   35fa4:	cmp	r3, #0
   35fa8:	bne	35fd0 <flatcc_builder_clear@@Base+0x78>
   35fac:	mov	r0, r6
   35fb0:	mov	r2, #232	; 0xe8
   35fb4:	mov	r1, #0
   35fb8:	add	sp, sp, #12
   35fbc:	ldrd	r4, [sp]
   35fc0:	ldrd	r6, [sp, #8]
   35fc4:	ldr	lr, [sp, #16]
   35fc8:	add	sp, sp, #20
   35fcc:	b	13f78 <memset@plt>
   35fd0:	add	r0, r6, #188	; 0xbc
   35fd4:	bl	3b3f8 <flatcc_emitter_clear@@Base>
   35fd8:	b	35fac <flatcc_builder_clear@@Base+0x54>

00035fdc <flatcc_builder_enter_user_frame_ptr@@Base>:
   35fdc:	strd	r4, [sp, #-20]!	; 0xffffffec
   35fe0:	add	r4, r1, #3
   35fe4:	mov	r5, r0
   35fe8:	ldr	r3, [r0, #112]	; 0x70
   35fec:	bic	r4, r4, #3
   35ff0:	strd	r6, [sp, #8]
   35ff4:	add	r4, r4, #4
   35ff8:	ldr	r6, [r0, #228]	; 0xe4
   35ffc:	str	lr, [sp, #16]
   36000:	sub	sp, sp, #12
   36004:	add	r2, r6, r4
   36008:	cmp	r2, r3
   3600c:	bls	36034 <flatcc_builder_enter_user_frame_ptr@@Base+0x58>
   36010:	mov	ip, #7
   36014:	add	r1, r0, #108	; 0x6c
   36018:	ldr	r0, [r0, #40]	; 0x28
   3601c:	mov	r3, #0
   36020:	str	ip, [sp]
   36024:	ldr	r7, [r5, #48]	; 0x30
   36028:	blx	r7
   3602c:	cmp	r0, #0
   36030:	bne	36088 <flatcc_builder_enter_user_frame_ptr@@Base+0xac>
   36034:	ldr	r7, [r5, #108]	; 0x6c
   36038:	adds	r3, r7, r6
   3603c:	moveq	r0, r3
   36040:	beq	36074 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   36044:	mov	r2, r4
   36048:	mov	r0, r3
   3604c:	mov	r1, #0
   36050:	bl	13f78 <memset@plt>
   36054:	ldr	r2, [r5, #224]	; 0xe0
   36058:	add	r0, r0, #4
   3605c:	str	r2, [r7, r6]
   36060:	ldr	r3, [r5, #228]	; 0xe4
   36064:	add	r4, r3, r4
   36068:	add	r3, r3, #4
   3606c:	str	r3, [r5, #224]	; 0xe0
   36070:	str	r4, [r5, #228]	; 0xe4
   36074:	add	sp, sp, #12
   36078:	ldrd	r4, [sp]
   3607c:	ldrd	r6, [sp, #8]
   36080:	add	sp, sp, #16
   36084:	pop	{pc}		; (ldr pc, [sp], #4)
   36088:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>

0003608c <flatcc_builder_enter_user_frame@@Base>:
   3608c:	strd	r4, [sp, #-20]!	; 0xffffffec
   36090:	add	r4, r1, #3
   36094:	mov	r5, r0
   36098:	ldr	r3, [r0, #112]	; 0x70
   3609c:	bic	r4, r4, #3
   360a0:	strd	r6, [sp, #8]
   360a4:	add	r4, r4, #4
   360a8:	ldr	r6, [r0, #228]	; 0xe4
   360ac:	str	lr, [sp, #16]
   360b0:	sub	sp, sp, #12
   360b4:	add	r2, r6, r4
   360b8:	cmp	r2, r3
   360bc:	bls	360e4 <flatcc_builder_enter_user_frame@@Base+0x58>
   360c0:	mov	ip, #7
   360c4:	add	r1, r0, #108	; 0x6c
   360c8:	ldr	r0, [r0, #40]	; 0x28
   360cc:	mov	r3, #0
   360d0:	str	ip, [sp]
   360d4:	ldr	r7, [r5, #48]	; 0x30
   360d8:	blx	r7
   360dc:	cmp	r0, #0
   360e0:	bne	3612c <flatcc_builder_enter_user_frame@@Base+0xa0>
   360e4:	ldr	r7, [r5, #108]	; 0x6c
   360e8:	adds	r0, r7, r6
   360ec:	beq	36118 <flatcc_builder_enter_user_frame@@Base+0x8c>
   360f0:	mov	r2, r4
   360f4:	mov	r1, #0
   360f8:	bl	13f78 <memset@plt>
   360fc:	ldr	r3, [r5, #224]	; 0xe0
   36100:	str	r3, [r7, r6]
   36104:	ldr	r0, [r5, #228]	; 0xe4
   36108:	add	r4, r0, r4
   3610c:	add	r0, r0, #4
   36110:	str	r0, [r5, #224]	; 0xe0
   36114:	str	r4, [r5, #228]	; 0xe4
   36118:	add	sp, sp, #12
   3611c:	ldrd	r4, [sp]
   36120:	ldrd	r6, [sp, #8]
   36124:	add	sp, sp, #16
   36128:	pop	{pc}		; (ldr pc, [sp], #4)
   3612c:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>

00036130 <flatcc_builder_exit_user_frame@@Base>:
   36130:	ldr	r2, [r0, #224]	; 0xe0
   36134:	cmp	r2, #0
   36138:	beq	36160 <flatcc_builder_exit_user_frame@@Base+0x30>
   3613c:	mov	r3, r0
   36140:	sub	r0, r2, #4
   36144:	ldr	r1, [r3, #108]	; 0x6c
   36148:	str	r0, [r3, #228]	; 0xe4
   3614c:	add	r2, r1, r2
   36150:	ldr	r2, [r2, #-4]
   36154:	mov	r0, r2
   36158:	str	r2, [r3, #224]	; 0xe0
   3615c:	bx	lr
   36160:	str	r4, [sp, #-8]!
   36164:	str	lr, [sp, #4]
   36168:	bl	35928 <flatcc_builder_default_alloc@@Base+0x1ec>

0003616c <flatcc_builder_exit_user_frame_at@@Base>:
   3616c:	ldr	r2, [r0, #224]	; 0xe0
   36170:	str	r4, [sp, #-8]!
   36174:	str	lr, [sp, #4]
   36178:	cmp	r2, r1
   3617c:	bcc	361b8 <flatcc_builder_exit_user_frame_at@@Base+0x4c>
   36180:	cmp	r1, #0
   36184:	mov	r3, r0
   36188:	str	r1, [r0, #224]	; 0xe0
   3618c:	beq	361d4 <flatcc_builder_exit_user_frame_at@@Base+0x68>
   36190:	ldr	r2, [r3, #108]	; 0x6c
   36194:	sub	r0, r1, #4
   36198:	ldr	r4, [sp]
   3619c:	add	sp, sp, #4
   361a0:	str	r0, [r3, #228]	; 0xe4
   361a4:	add	r1, r2, r1
   361a8:	ldr	r2, [r1, #-4]
   361ac:	mov	r0, r2
   361b0:	str	r2, [r3, #224]	; 0xe0
   361b4:	pop	{pc}		; (ldr pc, [sp], #4)
   361b8:	movw	r1, #39296	; 0x9980
   361bc:	movt	r1, #5
   361c0:	ldr	r3, [pc, #16]	; 361d8 <flatcc_builder_exit_user_frame_at@@Base+0x6c>
   361c4:	movw	r0, #39528	; 0x9a68
   361c8:	movt	r0, #5
   361cc:	movw	r2, #551	; 0x227
   361d0:	bl	14014 <__assert_fail@plt>
   361d4:	bl	35928 <flatcc_builder_default_alloc@@Base+0x1ec>
   361d8:	andeq	r9, r5, r4, lsl r5

000361dc <flatcc_builder_get_current_user_frame@@Base>:
   361dc:	ldr	r0, [r0, #224]	; 0xe0
   361e0:	bx	lr

000361e4 <flatcc_builder_get_user_frame_ptr@@Base>:
   361e4:	ldr	r0, [r0, #108]	; 0x6c
   361e8:	add	r0, r0, r1
   361ec:	bx	lr

000361f0 <flatcc_builder_embed_buffer@@Base>:
   361f0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   361f4:	mov	r5, r0
   361f8:	ldr	r0, [r0, #152]	; 0x98
   361fc:	strd	r6, [sp, #8]
   36200:	mov	r7, r2
   36204:	mov	r6, r3
   36208:	strd	r8, [sp, #16]
   3620c:	str	sl, [sp, #24]
   36210:	str	lr, [sp, #28]
   36214:	sub	sp, sp, #88	; 0x58
   36218:	ldrh	r4, [sp, #120]	; 0x78
   3621c:	ldr	r8, [sp, #124]	; 0x7c
   36220:	cmp	r4, #4
   36224:	movcc	r4, #4
   36228:	cmp	r1, #0
   3622c:	and	r8, r8, #2
   36230:	bne	36240 <flatcc_builder_embed_buffer@@Base+0x50>
   36234:	ldrh	r1, [r5, #132]	; 0x84
   36238:	cmp	r1, #0
   3623c:	beq	36260 <flatcc_builder_embed_buffer@@Base+0x70>
   36240:	cmp	r1, r4
   36244:	movcs	r4, r1
   36248:	cmp	r0, #0
   3624c:	bne	36260 <flatcc_builder_embed_buffer@@Base+0x70>
   36250:	ldr	r9, [r5, #140]	; 0x8c
   36254:	sub	r1, r1, #1
   36258:	ands	r1, r1, r9
   3625c:	bne	36388 <flatcc_builder_embed_buffer@@Base+0x198>
   36260:	ldr	r1, [r5, #136]	; 0x88
   36264:	cmp	r8, #0
   36268:	sub	r4, r4, #1
   3626c:	movne	ip, #4
   36270:	moveq	ip, #0
   36274:	mov	r2, #0
   36278:	cmp	r0, r2
   3627c:	str	r2, [sp, #16]
   36280:	sub	r3, r1, r6
   36284:	str	r2, [sp, #20]
   36288:	sub	r3, r3, ip
   3628c:	and	r4, r4, r3
   36290:	add	r3, r6, r4
   36294:	str	r3, [sp, #12]
   36298:	bne	36358 <flatcc_builder_embed_buffer@@Base+0x168>
   3629c:	mov	lr, #2
   362a0:	mov	r3, #1
   362a4:	mov	r2, r0
   362a8:	cmp	r6, #0
   362ac:	beq	362d8 <flatcc_builder_embed_buffer@@Base+0xe8>
   362b0:	add	r2, r2, #1
   362b4:	add	ip, sp, #88	; 0x58
   362b8:	add	ip, ip, r2, lsl #3
   362bc:	add	r0, r0, r6
   362c0:	mov	r2, r3
   362c4:	str	r0, [sp, #16]
   362c8:	str	r7, [ip, #-72]	; 0xffffffb8
   362cc:	str	r6, [ip, #-68]	; 0xffffffbc
   362d0:	str	r3, [sp, #20]
   362d4:	mov	r3, lr
   362d8:	cmp	r4, #0
   362dc:	beq	36308 <flatcc_builder_embed_buffer@@Base+0x118>
   362e0:	ldr	lr, [pc, #312]	; 36420 <flatcc_builder_embed_buffer@@Base+0x230>
   362e4:	add	r2, r2, #1
   362e8:	add	ip, sp, #88	; 0x58
   362ec:	add	ip, ip, r2, lsl #3
   362f0:	add	r0, r0, r4
   362f4:	mov	r2, r3
   362f8:	str	r0, [sp, #16]
   362fc:	str	lr, [ip, #-72]	; 0xffffffb8
   36300:	str	r4, [ip, #-68]	; 0xffffffbc
   36304:	str	r3, [sp, #20]
   36308:	sub	r4, r1, r0
   3630c:	cmp	r1, r4
   36310:	ble	363e0 <flatcc_builder_embed_buffer@@Base+0x1f0>
   36314:	mov	r3, r4
   36318:	add	r1, sp, #24
   3631c:	str	r0, [sp]
   36320:	ldr	r0, [r5, #36]	; 0x24
   36324:	ldr	r6, [r5, #44]	; 0x2c
   36328:	blx	r6
   3632c:	cmp	r0, #0
   36330:	bne	363dc <flatcc_builder_embed_buffer@@Base+0x1ec>
   36334:	mov	r0, r4
   36338:	str	r4, [r5, #136]	; 0x88
   3633c:	add	sp, sp, #88	; 0x58
   36340:	ldrd	r4, [sp]
   36344:	ldrd	r6, [sp, #8]
   36348:	ldrd	r8, [sp, #16]
   3634c:	ldr	sl, [sp, #24]
   36350:	add	sp, sp, #28
   36354:	pop	{pc}		; (ldr pc, [sp], #4)
   36358:	mov	ip, #4
   3635c:	mov	r3, #1
   36360:	add	r8, sp, #12
   36364:	mov	r2, r3
   36368:	mov	r0, ip
   3636c:	mov	lr, #3
   36370:	str	ip, [sp, #16]
   36374:	str	r3, [sp, #20]
   36378:	mov	r3, #2
   3637c:	str	r8, [sp, #24]
   36380:	str	ip, [sp, #28]
   36384:	b	362a8 <flatcc_builder_embed_buffer@@Base+0xb8>
   36388:	ldr	r3, [pc, #144]	; 36420 <flatcc_builder_embed_buffer@@Base+0x230>
   3638c:	add	r0, r9, r1
   36390:	mov	r2, #1
   36394:	cmp	r9, r0
   36398:	str	r1, [sp, #16]
   3639c:	str	r0, [r5, #140]	; 0x8c
   363a0:	strd	r2, [sp, #20]
   363a4:	str	r1, [sp, #28]
   363a8:	bgt	363fc <flatcc_builder_embed_buffer@@Base+0x20c>
   363ac:	mov	r3, r9
   363b0:	str	r1, [sp]
   363b4:	add	r1, sp, #24
   363b8:	ldr	r0, [r5, #36]	; 0x24
   363bc:	ldr	sl, [r5, #44]	; 0x2c
   363c0:	blx	sl
   363c4:	cmp	r0, #0
   363c8:	bne	3641c <flatcc_builder_embed_buffer@@Base+0x22c>
   363cc:	cmn	r9, #1
   363d0:	beq	36418 <flatcc_builder_embed_buffer@@Base+0x228>
   363d4:	ldr	r0, [r5, #152]	; 0x98
   363d8:	b	36260 <flatcc_builder_embed_buffer@@Base+0x70>
   363dc:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   363e0:	movw	r1, #39296	; 0x9980
   363e4:	movt	r1, #5
   363e8:	ldr	r3, [pc, #52]	; 36424 <flatcc_builder_embed_buffer@@Base+0x234>
   363ec:	movw	r0, #35672	; 0x8b58
   363f0:	movt	r0, #4
   363f4:	movw	r2, #647	; 0x287
   363f8:	bl	14014 <__assert_fail@plt>
   363fc:	movw	r1, #39296	; 0x9980
   36400:	movt	r1, #5
   36404:	movw	r0, #35672	; 0x8b58
   36408:	movt	r0, #4
   3640c:	sub	r3, r3, #152	; 0x98
   36410:	movw	r2, #673	; 0x2a1
   36414:	bl	14014 <__assert_fail@plt>
   36418:	bl	358b0 <flatcc_builder_default_alloc@@Base+0x174>
   3641c:	bl	35888 <flatcc_builder_default_alloc@@Base+0x14c>
   36420:	ldrdeq	r9, [r5], -r8
   36424:	andeq	r9, r5, ip, asr r2

00036428 <flatcc_builder_create_buffer@@Base>:
   36428:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3642c:	mov	ip, #0
   36430:	mov	r5, r0
   36434:	strd	r6, [sp, #8]
   36438:	mov	r7, r3
   3643c:	strd	r8, [sp, #16]
   36440:	mov	r9, r1
   36444:	strd	sl, [sp, #24]
   36448:	str	lr, [sp, #32]
   3644c:	sub	sp, sp, #100	; 0x64
   36450:	ldrh	r4, [sp, #136]	; 0x88
   36454:	str	ip, [sp, #20]
   36458:	ldr	r6, [sp, #140]	; 0x8c
   3645c:	cmp	r4, #4
   36460:	movcc	r4, #4
   36464:	cmp	r2, #0
   36468:	and	r8, r6, #1
   3646c:	bne	3647c <flatcc_builder_create_buffer@@Base+0x54>
   36470:	ldrh	r2, [r0, #132]	; 0x84
   36474:	cmp	r2, ip
   36478:	beq	3649c <flatcc_builder_create_buffer@@Base+0x74>
   3647c:	cmp	r2, r4
   36480:	movcs	r4, r2
   36484:	cmp	r8, #0
   36488:	bne	3649c <flatcc_builder_create_buffer@@Base+0x74>
   3648c:	ldr	sl, [r5, #140]	; 0x8c
   36490:	sub	r2, r2, #1
   36494:	ands	r1, r2, sl
   36498:	bne	36630 <flatcc_builder_create_buffer@@Base+0x208>
   3649c:	ldrh	r3, [r5, #128]	; 0x80
   364a0:	ldr	r0, [r5, #136]	; 0x88
   364a4:	cmp	r3, r4
   364a8:	strhcc	r4, [r5, #128]	; 0x80
   364ac:	cmp	r9, #0
   364b0:	sub	r4, r4, #1
   364b4:	ldrne	r3, [r9]
   364b8:	ldreq	r1, [sp, #20]
   364bc:	movne	r1, r3
   364c0:	strne	r3, [sp, #20]
   364c4:	sub	r3, r0, #4
   364c8:	cmp	r1, #0
   364cc:	movne	r1, #4
   364d0:	tst	r6, #2
   364d4:	movne	r2, #4
   364d8:	moveq	r2, #0
   364dc:	sub	r3, r3, r1
   364e0:	ands	r6, r6, #3
   364e4:	sub	r3, r3, r2
   364e8:	and	r4, r4, r3
   364ec:	bne	36608 <flatcc_builder_create_buffer@@Base+0x1e0>
   364f0:	mov	r3, r6
   364f4:	mov	r9, #3
   364f8:	mov	lr, #2
   364fc:	mov	r2, #1
   36500:	mov	ip, #4
   36504:	add	fp, sp, #96	; 0x60
   36508:	add	r3, r3, #1
   3650c:	str	ip, [sp, #24]
   36510:	add	r3, fp, r3, lsl #3
   36514:	add	sl, sp, #12
   36518:	mov	fp, #4
   3651c:	cmp	r1, #0
   36520:	strd	sl, [r3, #-72]	; 0xffffffb8
   36524:	str	r2, [sp, #28]
   36528:	beq	36558 <flatcc_builder_create_buffer@@Base+0x130>
   3652c:	add	r2, r2, #1
   36530:	add	r3, sp, #96	; 0x60
   36534:	add	r3, r3, r2, lsl #3
   36538:	add	ip, ip, r1
   3653c:	add	sl, sp, #20
   36540:	mov	r2, lr
   36544:	str	ip, [sp, #24]
   36548:	str	sl, [r3, #-72]	; 0xffffffb8
   3654c:	str	r1, [r3, #-68]	; 0xffffffbc
   36550:	str	lr, [sp, #28]
   36554:	mov	lr, r9
   36558:	cmp	r4, #0
   3655c:	beq	36588 <flatcc_builder_create_buffer@@Base+0x160>
   36560:	ldr	r1, [pc, #372]	; 366dc <flatcc_builder_create_buffer@@Base+0x2b4>
   36564:	add	r2, r2, #1
   36568:	add	r3, sp, #96	; 0x60
   3656c:	add	r3, r3, r2, lsl #3
   36570:	add	ip, ip, r4
   36574:	mov	r2, lr
   36578:	str	ip, [sp, #24]
   3657c:	str	r1, [r3, #-72]	; 0xffffffb8
   36580:	str	r4, [r3, #-68]	; 0xffffffbc
   36584:	str	lr, [sp, #28]
   36588:	sub	r4, r0, ip
   3658c:	cmp	r6, #0
   36590:	mov	r1, r4
   36594:	addne	r1, r4, #4
   36598:	cmp	r8, #0
   3659c:	sub	r7, r7, r1
   365a0:	ldrne	r3, [r5, #144]	; 0x90
   365a4:	str	r7, [sp, #12]
   365a8:	ldreq	r3, [r5, #140]	; 0x8c
   365ac:	cmp	r0, r4
   365b0:	sub	r3, r3, r1
   365b4:	str	r3, [sp, #16]
   365b8:	ble	36680 <flatcc_builder_create_buffer@@Base+0x258>
   365bc:	mov	r3, r4
   365c0:	add	r1, sp, #32
   365c4:	str	ip, [sp]
   365c8:	ldr	r0, [r5, #36]	; 0x24
   365cc:	ldr	r6, [r5, #44]	; 0x2c
   365d0:	blx	r6
   365d4:	cmp	r0, #0
   365d8:	bne	3669c <flatcc_builder_create_buffer@@Base+0x274>
   365dc:	cmp	r4, #0
   365e0:	str	r4, [r5, #136]	; 0x88
   365e4:	beq	366a0 <flatcc_builder_create_buffer@@Base+0x278>
   365e8:	mov	r0, r4
   365ec:	add	sp, sp, #100	; 0x64
   365f0:	ldrd	r4, [sp]
   365f4:	ldrd	r6, [sp, #8]
   365f8:	ldrd	r8, [sp, #16]
   365fc:	ldrd	sl, [sp, #24]
   36600:	add	sp, sp, #32
   36604:	pop	{pc}		; (ldr pc, [sp], #4)
   36608:	mov	ip, #4
   3660c:	add	r3, sp, #16
   36610:	mov	r9, ip
   36614:	mov	lr, #3
   36618:	mov	r2, #2
   3661c:	str	r3, [sp, #32]
   36620:	mov	r3, #1
   36624:	str	ip, [sp, #36]	; 0x24
   36628:	mov	ip, #8
   3662c:	b	36504 <flatcc_builder_create_buffer@@Base+0xdc>
   36630:	ldr	r3, [pc, #164]	; 366dc <flatcc_builder_create_buffer@@Base+0x2b4>
   36634:	add	r0, sl, r1
   36638:	mov	r2, #1
   3663c:	cmp	sl, r0
   36640:	str	r1, [sp, #24]
   36644:	str	r0, [r5, #140]	; 0x8c
   36648:	strd	r2, [sp, #28]
   3664c:	str	r1, [sp, #36]	; 0x24
   36650:	bgt	366c0 <flatcc_builder_create_buffer@@Base+0x298>
   36654:	mov	r3, sl
   36658:	str	r1, [sp]
   3665c:	add	r1, sp, #32
   36660:	ldr	r0, [r5, #36]	; 0x24
   36664:	ldr	fp, [r5, #44]	; 0x2c
   36668:	blx	fp
   3666c:	cmp	r0, #0
   36670:	bne	366bc <flatcc_builder_create_buffer@@Base+0x294>
   36674:	cmn	sl, #1
   36678:	bne	3649c <flatcc_builder_create_buffer@@Base+0x74>
   3667c:	bl	358b0 <flatcc_builder_default_alloc@@Base+0x174>
   36680:	movw	r1, #39296	; 0x9980
   36684:	movt	r1, #5
   36688:	ldr	r3, [pc, #80]	; 366e0 <flatcc_builder_create_buffer@@Base+0x2b8>
   3668c:	movw	r0, #35672	; 0x8b58
   36690:	movt	r0, #4
   36694:	movw	r2, #647	; 0x287
   36698:	bl	14014 <__assert_fail@plt>
   3669c:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   366a0:	movw	r1, #39296	; 0x9980
   366a4:	movt	r1, #5
   366a8:	ldr	r3, [pc, #52]	; 366e4 <flatcc_builder_create_buffer@@Base+0x2bc>
   366ac:	movw	r0, #35672	; 0x8b58
   366b0:	movt	r0, #4
   366b4:	mov	r2, #772	; 0x304
   366b8:	bl	14014 <__assert_fail@plt>
   366bc:	bl	35888 <flatcc_builder_default_alloc@@Base+0x14c>
   366c0:	movw	r1, #39296	; 0x9980
   366c4:	movt	r1, #5
   366c8:	movw	r0, #35672	; 0x8b58
   366cc:	movt	r0, #4
   366d0:	sub	r3, r3, #152	; 0x98
   366d4:	movw	r2, #673	; 0x2a1
   366d8:	bl	14014 <__assert_fail@plt>
   366dc:	ldrdeq	r9, [r5], -r8
   366e0:	andeq	r9, r5, ip, asr r2
   366e4:	andeq	r9, r5, r8, lsr r5

000366e8 <flatcc_builder_create_struct@@Base>:
   366e8:	cmp	r3, #0
   366ec:	strd	r4, [sp, #-16]!
   366f0:	str	r6, [sp, #8]
   366f4:	str	lr, [sp, #12]
   366f8:	sub	sp, sp, #80	; 0x50
   366fc:	beq	36800 <flatcc_builder_create_struct@@Base+0x118>
   36700:	mov	r4, r0
   36704:	mov	r0, r2
   36708:	ldrh	r2, [r4, #128]	; 0x80
   3670c:	ldr	ip, [r4, #136]	; 0x88
   36710:	cmp	r2, r3
   36714:	mov	r2, #0
   36718:	strhcc	r3, [r4, #128]	; 0x80
   3671c:	sub	r5, ip, r0
   36720:	sub	r3, r3, #1
   36724:	cmp	r0, r2
   36728:	and	r3, r3, r5
   3672c:	str	r2, [sp, #8]
   36730:	str	r2, [sp, #12]
   36734:	bne	367b4 <flatcc_builder_create_struct@@Base+0xcc>
   36738:	cmp	r3, #0
   3673c:	movne	r1, r2
   36740:	movne	r0, r3
   36744:	movne	r2, #1
   36748:	beq	367e0 <flatcc_builder_create_struct@@Base+0xf8>
   3674c:	ldr	lr, [pc, #200]	; 3681c <flatcc_builder_create_struct@@Base+0x134>
   36750:	add	r5, sp, #80	; 0x50
   36754:	add	r1, r1, #1
   36758:	add	r1, r5, r1, lsl #3
   3675c:	sub	r5, ip, r0
   36760:	str	r0, [sp, #8]
   36764:	str	r2, [sp, #12]
   36768:	str	lr, [r1, #-72]	; 0xffffffb8
   3676c:	str	r3, [r1, #-68]	; 0xffffffbc
   36770:	cmp	ip, r5
   36774:	ble	367e0 <flatcc_builder_create_struct@@Base+0xf8>
   36778:	mov	r3, r5
   3677c:	add	r1, sp, #16
   36780:	str	r0, [sp]
   36784:	ldr	r0, [r4, #36]	; 0x24
   36788:	ldr	r6, [r4, #44]	; 0x2c
   3678c:	blx	r6
   36790:	cmp	r0, #0
   36794:	bne	367fc <flatcc_builder_create_struct@@Base+0x114>
   36798:	mov	r0, r5
   3679c:	str	r5, [r4, #136]	; 0x88
   367a0:	add	sp, sp, #80	; 0x50
   367a4:	ldrd	r4, [sp]
   367a8:	ldr	r6, [sp, #8]
   367ac:	add	sp, sp, #12
   367b0:	pop	{pc}		; (ldr pc, [sp], #4)
   367b4:	mov	r2, #1
   367b8:	cmp	r3, #0
   367bc:	str	r0, [sp, #8]
   367c0:	str	r2, [sp, #12]
   367c4:	str	r1, [sp, #16]
   367c8:	movne	r1, r2
   367cc:	movne	r2, #2
   367d0:	str	r0, [sp, #20]
   367d4:	addne	r0, r0, r3
   367d8:	beq	36770 <flatcc_builder_create_struct@@Base+0x88>
   367dc:	b	3674c <flatcc_builder_create_struct@@Base+0x64>
   367e0:	movw	r1, #39296	; 0x9980
   367e4:	movt	r1, #5
   367e8:	ldr	r3, [pc, #48]	; 36820 <flatcc_builder_create_struct@@Base+0x138>
   367ec:	movw	r0, #35672	; 0x8b58
   367f0:	movt	r0, #4
   367f4:	movw	r2, #647	; 0x287
   367f8:	bl	14014 <__assert_fail@plt>
   367fc:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   36800:	movw	r1, #39296	; 0x9980
   36804:	movt	r1, #5
   36808:	ldr	r3, [pc, #20]	; 36824 <flatcc_builder_create_struct@@Base+0x13c>
   3680c:	movw	r0, #39560	; 0x9a88
   36810:	movt	r0, #5
   36814:	movw	r2, #783	; 0x30f
   36818:	bl	14014 <__assert_fail@plt>
   3681c:	ldrdeq	r9, [r5], -r8
   36820:	andeq	r9, r5, ip, asr r2
   36824:	andeq	r9, r5, r8, asr r5

00036828 <flatcc_builder_start_buffer@@Base>:
   36828:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3682c:	mov	r5, r1
   36830:	mov	r4, r0
   36834:	ldr	r1, [r0, #156]	; 0x9c
   36838:	strd	r6, [sp, #8]
   3683c:	mov	r6, r3
   36840:	mov	r7, r2
   36844:	ldr	r3, [r0, #160]	; 0xa0
   36848:	strd	r8, [sp, #16]
   3684c:	ldrh	r8, [r0, #128]	; 0x80
   36850:	add	r2, r1, #1
   36854:	strd	sl, [sp, #24]
   36858:	str	lr, [sp, #32]
   3685c:	sub	sp, sp, #12
   36860:	cmp	r2, r3
   36864:	str	r2, [r0, #156]	; 0x9c
   36868:	ble	369b4 <flatcc_builder_start_buffer@@Base+0x18c>
   3686c:	ldr	r3, [r0, #176]	; 0xb0
   36870:	cmp	r3, #0
   36874:	cmpgt	r2, r3
   36878:	movgt	r3, #1
   3687c:	movle	r3, #0
   36880:	bgt	369c4 <flatcc_builder_start_buffer@@Base+0x19c>
   36884:	add	r1, r1, r1, lsl #3
   36888:	ldr	r0, [r0, #88]	; 0x58
   3688c:	lsl	r9, r1, #2
   36890:	add	r2, r9, #36	; 0x24
   36894:	cmp	r2, r0
   36898:	bls	368bc <flatcc_builder_start_buffer@@Base+0x94>
   3689c:	mov	ip, #4
   368a0:	add	r1, r4, #84	; 0x54
   368a4:	ldr	r0, [r4, #40]	; 0x28
   368a8:	str	ip, [sp]
   368ac:	ldr	sl, [r4, #48]	; 0x30
   368b0:	blx	sl
   368b4:	cmp	r0, #0
   368b8:	bne	369cc <flatcc_builder_start_buffer@@Base+0x1a4>
   368bc:	ldr	r3, [r4, #84]	; 0x54
   368c0:	add	r3, r3, r9
   368c4:	cmp	r3, #0
   368c8:	str	r3, [r4, #32]
   368cc:	beq	369c4 <flatcc_builder_start_buffer@@Base+0x19c>
   368d0:	ldr	r2, [r4, #88]	; 0x58
   368d4:	movw	r0, #36409	; 0x8e39
   368d8:	movt	r0, #14563	; 0x38e3
   368dc:	ldr	r1, [r4, #176]	; 0xb0
   368e0:	umull	r0, r2, r0, r2
   368e4:	lsr	r2, r2, #3
   368e8:	cmp	r1, #0
   368ec:	cmpgt	r2, r1
   368f0:	movgt	r2, r1
   368f4:	str	r2, [r4, #160]	; 0xa0
   368f8:	ldr	sl, [pc, #208]	; 369d0 <flatcc_builder_start_buffer@@Base+0x1a8>
   368fc:	mov	r0, #0
   36900:	mvn	lr, #3
   36904:	cmp	r5, r0
   36908:	ldr	r2, [r4, #20]
   3690c:	ldr	ip, [r4, #28]
   36910:	moveq	r5, sl
   36914:	ldrh	r9, [r4, #130]	; 0x82
   36918:	ldrh	fp, [r4, #132]	; 0x84
   3691c:	ldr	r1, [r4, #148]	; 0x94
   36920:	ldr	sl, [r4, #152]	; 0x98
   36924:	str	r2, [r3, #8]
   36928:	add	r2, r2, ip
   3692c:	add	r2, r2, #7
   36930:	strh	r9, [r3, #12]
   36934:	bic	r2, r2, #7
   36938:	strh	r8, [r4, #130]	; 0x82
   3693c:	ldrh	r8, [r4, #164]	; 0xa4
   36940:	ldr	r9, [r4, #136]	; 0x88
   36944:	stm	r3, {ip, lr}
   36948:	mov	ip, #1
   3694c:	str	r0, [r4, #20]
   36950:	str	r2, [r4, #28]
   36954:	add	r2, r1, ip
   36958:	strh	ip, [r4, #128]	; 0x80
   3695c:	ldr	lr, [r4, #144]	; 0x90
   36960:	strh	fp, [r3, #34]	; 0x22
   36964:	strh	r7, [r4, #132]	; 0x84
   36968:	ldr	r7, [r4, #168]	; 0xa8
   3696c:	strh	r8, [r3, #32]
   36970:	strh	r6, [r4, #164]	; 0xa4
   36974:	str	lr, [r3, #20]
   36978:	str	sl, [r3, #28]
   3697c:	str	r9, [r4, #144]	; 0x90
   36980:	str	r2, [r4, #148]	; 0x94
   36984:	str	r1, [r4, #152]	; 0x98
   36988:	str	r7, [r3, #16]
   3698c:	ldr	r2, [r5]
   36990:	str	r2, [r4, #168]	; 0xa8
   36994:	strh	ip, [r3, #14]
   36998:	add	sp, sp, #12
   3699c:	ldrd	r4, [sp]
   369a0:	ldrd	r6, [sp, #8]
   369a4:	ldrd	r8, [sp, #16]
   369a8:	ldrd	sl, [sp, #24]
   369ac:	add	sp, sp, #32
   369b0:	pop	{pc}		; (ldr pc, [sp], #4)
   369b4:	ldr	r3, [r0, #32]
   369b8:	add	r3, r3, #36	; 0x24
   369bc:	str	r3, [r0, #32]
   369c0:	b	368f8 <flatcc_builder_start_buffer@@Base+0xd0>
   369c4:	mvn	r0, #0
   369c8:	b	36998 <flatcc_builder_start_buffer@@Base+0x170>
   369cc:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>
   369d0:	ldrdeq	r9, [r5], -r8

000369d4 <flatcc_builder_end_buffer@@Base>:
   369d4:	ldr	ip, [r0, #32]
   369d8:	strd	r4, [sp, #-16]!
   369dc:	mov	r4, r0
   369e0:	ldrh	r2, [r0, #164]	; 0xa4
   369e4:	ldr	r0, [r0, #152]	; 0x98
   369e8:	ldrh	ip, [ip, #14]
   369ec:	and	r2, r2, #2
   369f0:	str	r6, [sp, #8]
   369f4:	str	lr, [sp, #12]
   369f8:	sub	sp, sp, #8
   369fc:	cmp	r0, #0
   36a00:	moveq	r0, r2
   36a04:	orrne	r0, r2, #1
   36a08:	cmp	ip, #1
   36a0c:	bne	36af4 <flatcc_builder_end_buffer@@Base+0x120>
   36a10:	ldrh	r2, [r4, #132]	; 0x84
   36a14:	mov	r3, r1
   36a18:	add	r1, r4, #168	; 0xa8
   36a1c:	ldrh	ip, [r4, #128]	; 0x80
   36a20:	cmp	r2, ip
   36a24:	movhi	ip, r2
   36a28:	strhhi	r2, [r4, #128]	; 0x80
   36a2c:	str	ip, [sp]
   36a30:	str	r0, [sp, #4]
   36a34:	mov	r0, r4
   36a38:	bl	36428 <flatcc_builder_create_buffer@@Base>
   36a3c:	subs	r5, r0, #0
   36a40:	beq	36adc <flatcc_builder_end_buffer@@Base+0x108>
   36a44:	mov	r1, #0
   36a48:	ldr	r0, [r4, #16]
   36a4c:	ldr	r3, [r4, #32]
   36a50:	ldr	r2, [r4, #20]
   36a54:	ldrh	lr, [r3, #32]
   36a58:	ldr	ip, [r3, #16]
   36a5c:	ldr	r6, [r3, #20]
   36a60:	ldr	r3, [r3, #28]
   36a64:	str	r6, [r4, #144]	; 0x90
   36a68:	strh	lr, [r4, #164]	; 0xa4
   36a6c:	str	r3, [r4, #152]	; 0x98
   36a70:	str	ip, [r4, #168]	; 0xa8
   36a74:	bl	13f78 <memset@plt>
   36a78:	ldr	r3, [r4, #32]
   36a7c:	ldr	r0, [r4, #60]	; 0x3c
   36a80:	ldr	r2, [r4, #64]	; 0x40
   36a84:	ldr	ip, [r3]
   36a88:	ldmib	r3, {r1, lr}
   36a8c:	add	r0, r0, ip
   36a90:	sub	r2, r2, ip
   36a94:	str	r0, [r4, #16]
   36a98:	cmp	r2, r1
   36a9c:	ldrh	r0, [r4, #128]	; 0x80
   36aa0:	movcs	r2, r1
   36aa4:	str	lr, [r4, #20]
   36aa8:	str	ip, [r4, #28]
   36aac:	ldrh	ip, [r4, #130]	; 0x82
   36ab0:	str	r2, [r4, #24]
   36ab4:	ldr	r2, [r4, #156]	; 0x9c
   36ab8:	str	r1, [r3, #4]
   36abc:	cmp	r0, ip
   36ac0:	sub	r0, r3, #36	; 0x24
   36ac4:	strhcc	ip, [r4, #128]	; 0x80
   36ac8:	ldrh	r1, [r3, #12]
   36acc:	sub	r3, r2, #1
   36ad0:	str	r0, [r4, #32]
   36ad4:	strh	r1, [r4, #130]	; 0x82
   36ad8:	str	r3, [r4, #156]	; 0x9c
   36adc:	mov	r0, r5
   36ae0:	add	sp, sp, #8
   36ae4:	ldrd	r4, [sp]
   36ae8:	ldr	r6, [sp, #8]
   36aec:	add	sp, sp, #12
   36af0:	pop	{pc}		; (ldr pc, [sp], #4)
   36af4:	movw	r1, #39296	; 0x9980
   36af8:	movt	r1, #5
   36afc:	ldr	r3, [pc, #12]	; 36b10 <flatcc_builder_end_buffer@@Base+0x13c>
   36b00:	movw	r0, #39572	; 0x9a94
   36b04:	movt	r0, #5
   36b08:	movw	r2, #838	; 0x346
   36b0c:	bl	14014 <__assert_fail@plt>
   36b10:	andeq	r9, r5, r8, ror r5

00036b14 <flatcc_builder_start_struct@@Base>:
   36b14:	strd	r4, [sp, #-24]!	; 0xffffffe8
   36b18:	mov	r5, r1
   36b1c:	mov	r4, r0
   36b20:	ldr	r1, [r0, #156]	; 0x9c
   36b24:	ldr	r3, [r0, #160]	; 0xa0
   36b28:	strd	r6, [sp, #8]
   36b2c:	mov	r6, r2
   36b30:	str	r8, [sp, #16]
   36b34:	add	r2, r1, #1
   36b38:	str	lr, [sp, #20]
   36b3c:	sub	sp, sp, #8
   36b40:	cmp	r2, r3
   36b44:	str	r2, [r0, #156]	; 0x9c
   36b48:	ble	36c68 <flatcc_builder_start_struct@@Base+0x154>
   36b4c:	ldr	r3, [r0, #176]	; 0xb0
   36b50:	cmp	r3, #0
   36b54:	cmpgt	r2, r3
   36b58:	movgt	r3, #1
   36b5c:	movle	r3, #0
   36b60:	bgt	36cd4 <flatcc_builder_start_struct@@Base+0x1c0>
   36b64:	add	r1, r1, r1, lsl #3
   36b68:	ldr	r0, [r0, #88]	; 0x58
   36b6c:	lsl	r7, r1, #2
   36b70:	add	r2, r7, #36	; 0x24
   36b74:	cmp	r2, r0
   36b78:	bls	36b9c <flatcc_builder_start_struct@@Base+0x88>
   36b7c:	mov	ip, #4
   36b80:	add	r1, r4, #84	; 0x54
   36b84:	ldr	r0, [r4, #40]	; 0x28
   36b88:	str	ip, [sp]
   36b8c:	ldr	r8, [r4, #48]	; 0x30
   36b90:	blx	r8
   36b94:	cmp	r0, #0
   36b98:	bne	36cdc <flatcc_builder_start_struct@@Base+0x1c8>
   36b9c:	ldr	r1, [r4, #84]	; 0x54
   36ba0:	add	r1, r1, r7
   36ba4:	cmp	r1, #0
   36ba8:	str	r1, [r4, #32]
   36bac:	beq	36cd4 <flatcc_builder_start_struct@@Base+0x1c0>
   36bb0:	ldr	r3, [r4, #88]	; 0x58
   36bb4:	movw	r0, #36409	; 0x8e39
   36bb8:	movt	r0, #14563	; 0x38e3
   36bbc:	ldr	r2, [r4, #176]	; 0xb0
   36bc0:	umull	r0, r3, r0, r3
   36bc4:	lsr	r3, r3, #3
   36bc8:	cmp	r2, #0
   36bcc:	cmpgt	r3, r2
   36bd0:	movgt	r3, r2
   36bd4:	str	r3, [r4, #160]	; 0xa0
   36bd8:	ldr	r3, [r4, #20]
   36bdc:	mvn	lr, #3
   36be0:	ldr	ip, [r4, #28]
   36be4:	ldrh	r7, [r4, #130]	; 0x82
   36be8:	ldr	r2, [r4, #64]	; 0x40
   36bec:	ldr	r0, [r4, #60]	; 0x3c
   36bf0:	str	r3, [r1, #8]
   36bf4:	add	r3, r3, ip
   36bf8:	add	r3, r3, #7
   36bfc:	strh	r7, [r1, #12]
   36c00:	mov	r7, #0
   36c04:	bic	r3, r3, #7
   36c08:	strh	r6, [r4, #130]	; 0x82
   36c0c:	mvn	r6, #3
   36c10:	sub	r2, r2, r3
   36c14:	stm	r1, {ip, lr}
   36c18:	mov	ip, #2
   36c1c:	cmp	r2, lr
   36c20:	add	r0, r0, r3
   36c24:	str	r7, [r4, #20]
   36c28:	movhi	r2, lr
   36c2c:	str	r3, [r4, #28]
   36c30:	strh	ip, [r1, #14]
   36c34:	strls	r2, [r4, #24]
   36c38:	strhi	lr, [r4, #24]
   36c3c:	cmp	r5, r2
   36c40:	str	r0, [r4, #16]
   36c44:	str	r6, [r1, #4]
   36c48:	str	r5, [r4, #20]
   36c4c:	bcs	36c78 <flatcc_builder_start_struct@@Base+0x164>
   36c50:	add	sp, sp, #8
   36c54:	ldrd	r4, [sp]
   36c58:	ldrd	r6, [sp, #8]
   36c5c:	ldr	r8, [sp, #16]
   36c60:	add	sp, sp, #20
   36c64:	pop	{pc}		; (ldr pc, [sp], #4)
   36c68:	ldr	r1, [r0, #32]
   36c6c:	add	r1, r1, #36	; 0x24
   36c70:	str	r1, [r0, #32]
   36c74:	b	36bd8 <flatcc_builder_start_struct@@Base+0xc4>
   36c78:	mov	ip, #1
   36c7c:	add	r1, r4, #60	; 0x3c
   36c80:	ldr	r0, [r4, #40]	; 0x28
   36c84:	add	r2, r5, ip
   36c88:	add	r2, r2, r3
   36c8c:	mov	r3, ip
   36c90:	str	ip, [sp]
   36c94:	ldr	r5, [r4, #48]	; 0x30
   36c98:	blx	r5
   36c9c:	cmp	r0, #0
   36ca0:	bne	36cd4 <flatcc_builder_start_struct@@Base+0x1c0>
   36ca4:	ldr	r0, [r4, #28]
   36ca8:	ldr	r2, [r4, #32]
   36cac:	ldr	r3, [r4, #64]	; 0x40
   36cb0:	ldr	r1, [r4, #60]	; 0x3c
   36cb4:	sub	r3, r3, r0
   36cb8:	cmp	r3, r6
   36cbc:	movhi	r3, r6
   36cc0:	add	r0, r1, r0
   36cc4:	str	r0, [r4, #16]
   36cc8:	str	r3, [r4, #24]
   36ccc:	str	r6, [r2, #4]
   36cd0:	b	36c50 <flatcc_builder_start_struct@@Base+0x13c>
   36cd4:	mov	r0, #0
   36cd8:	b	36c50 <flatcc_builder_start_struct@@Base+0x13c>
   36cdc:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>

00036ce0 <flatcc_builder_struct_edit@@Base>:
   36ce0:	ldr	r0, [r0, #16]
   36ce4:	bx	lr

00036ce8 <flatcc_builder_end_struct@@Base>:
   36ce8:	ldr	r3, [r0, #32]
   36cec:	strd	r4, [sp, #-16]!
   36cf0:	ldrh	r3, [r3, #14]
   36cf4:	str	r6, [sp, #8]
   36cf8:	str	lr, [sp, #12]
   36cfc:	sub	sp, sp, #80	; 0x50
   36d00:	cmp	r3, #2
   36d04:	bne	36eac <flatcc_builder_end_struct@@Base+0x1c4>
   36d08:	ldrh	r3, [r0, #130]	; 0x82
   36d0c:	mov	r4, r0
   36d10:	ldr	r1, [r0, #16]
   36d14:	ldr	r0, [r0, #20]
   36d18:	cmp	r3, #0
   36d1c:	beq	36e90 <flatcc_builder_end_struct@@Base+0x1a8>
   36d20:	ldrh	r2, [r4, #128]	; 0x80
   36d24:	ldr	ip, [r4, #136]	; 0x88
   36d28:	cmp	r2, r3
   36d2c:	mov	r2, #0
   36d30:	strhcc	r3, [r4, #128]	; 0x80
   36d34:	sub	r5, ip, r0
   36d38:	sub	r3, r3, #1
   36d3c:	cmp	r0, r2
   36d40:	and	r3, r3, r5
   36d44:	str	r2, [sp, #8]
   36d48:	str	r2, [sp, #12]
   36d4c:	bne	36e44 <flatcc_builder_end_struct@@Base+0x15c>
   36d50:	cmp	r3, #0
   36d54:	movne	r1, r2
   36d58:	movne	r0, r3
   36d5c:	movne	r2, #1
   36d60:	beq	36e70 <flatcc_builder_end_struct@@Base+0x188>
   36d64:	ldr	lr, [pc, #348]	; 36ec8 <flatcc_builder_end_struct@@Base+0x1e0>
   36d68:	add	r5, sp, #80	; 0x50
   36d6c:	add	r1, r1, #1
   36d70:	add	r1, r5, r1, lsl #3
   36d74:	sub	r5, ip, r0
   36d78:	str	r0, [sp, #8]
   36d7c:	str	r2, [sp, #12]
   36d80:	str	lr, [r1, #-72]	; 0xffffffb8
   36d84:	str	r3, [r1, #-68]	; 0xffffffbc
   36d88:	cmp	ip, r5
   36d8c:	ble	36e70 <flatcc_builder_end_struct@@Base+0x188>
   36d90:	add	r1, sp, #16
   36d94:	mov	r3, r5
   36d98:	str	r0, [sp]
   36d9c:	ldr	r0, [r4, #36]	; 0x24
   36da0:	ldr	r6, [r4, #44]	; 0x2c
   36da4:	blx	r6
   36da8:	subs	r1, r0, #0
   36dac:	bne	36e8c <flatcc_builder_end_struct@@Base+0x1a4>
   36db0:	cmp	r5, #0
   36db4:	str	r5, [r4, #136]	; 0x88
   36db8:	beq	36e2c <flatcc_builder_end_struct@@Base+0x144>
   36dbc:	ldr	r0, [r4, #16]
   36dc0:	ldr	r2, [r4, #20]
   36dc4:	bl	13f78 <memset@plt>
   36dc8:	ldr	r3, [r4, #32]
   36dcc:	ldr	r0, [r4, #60]	; 0x3c
   36dd0:	ldr	r2, [r4, #64]	; 0x40
   36dd4:	ldr	ip, [r3]
   36dd8:	ldmib	r3, {r1, lr}
   36ddc:	add	r0, r0, ip
   36de0:	sub	r2, r2, ip
   36de4:	str	r0, [r4, #16]
   36de8:	cmp	r2, r1
   36dec:	ldrh	r0, [r4, #128]	; 0x80
   36df0:	movcs	r2, r1
   36df4:	str	lr, [r4, #20]
   36df8:	str	ip, [r4, #28]
   36dfc:	ldrh	ip, [r4, #130]	; 0x82
   36e00:	str	r2, [r4, #24]
   36e04:	ldr	r2, [r4, #156]	; 0x9c
   36e08:	str	r1, [r3, #4]
   36e0c:	cmp	r0, ip
   36e10:	sub	r0, r3, #36	; 0x24
   36e14:	strhcc	ip, [r4, #128]	; 0x80
   36e18:	ldrh	r1, [r3, #12]
   36e1c:	sub	r3, r2, #1
   36e20:	str	r0, [r4, #32]
   36e24:	strh	r1, [r4, #130]	; 0x82
   36e28:	str	r3, [r4, #156]	; 0x9c
   36e2c:	mov	r0, r5
   36e30:	add	sp, sp, #80	; 0x50
   36e34:	ldrd	r4, [sp]
   36e38:	ldr	r6, [sp, #8]
   36e3c:	add	sp, sp, #12
   36e40:	pop	{pc}		; (ldr pc, [sp], #4)
   36e44:	mov	r2, #1
   36e48:	cmp	r3, #0
   36e4c:	str	r0, [sp, #8]
   36e50:	str	r2, [sp, #12]
   36e54:	str	r1, [sp, #16]
   36e58:	movne	r1, r2
   36e5c:	movne	r2, #2
   36e60:	str	r0, [sp, #20]
   36e64:	addne	r0, r0, r3
   36e68:	beq	36d88 <flatcc_builder_end_struct@@Base+0xa0>
   36e6c:	b	36d64 <flatcc_builder_end_struct@@Base+0x7c>
   36e70:	movw	r1, #39296	; 0x9980
   36e74:	movt	r1, #5
   36e78:	ldr	r3, [pc, #76]	; 36ecc <flatcc_builder_end_struct@@Base+0x1e4>
   36e7c:	movw	r0, #35672	; 0x8b58
   36e80:	movt	r0, #4
   36e84:	movw	r2, #647	; 0x287
   36e88:	bl	14014 <__assert_fail@plt>
   36e8c:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   36e90:	movw	r1, #39296	; 0x9980
   36e94:	movt	r1, #5
   36e98:	ldr	r3, [pc, #48]	; 36ed0 <flatcc_builder_end_struct@@Base+0x1e8>
   36e9c:	movw	r0, #39560	; 0x9a88
   36ea0:	movt	r0, #5
   36ea4:	movw	r2, #783	; 0x30f
   36ea8:	bl	14014 <__assert_fail@plt>
   36eac:	movw	r1, #39296	; 0x9980
   36eb0:	movt	r1, #5
   36eb4:	ldr	r3, [pc, #24]	; 36ed4 <flatcc_builder_end_struct@@Base+0x1ec>
   36eb8:	movw	r0, #39616	; 0x9ac0
   36ebc:	movt	r0, #5
   36ec0:	mov	r2, #872	; 0x368
   36ec4:	bl	14014 <__assert_fail@plt>
   36ec8:	ldrdeq	r9, [r5], -r8
   36ecc:	andeq	r9, r5, ip, asr r2
   36ed0:	andeq	r9, r5, r8, asr r5
   36ed4:	muleq	r5, r4, r5

00036ed8 <flatcc_builder_extend_vector@@Base>:
   36ed8:	ldr	ip, [r0, #32]
   36edc:	strd	r4, [sp, #-20]!	; 0xffffffec
   36ee0:	mov	r4, r0
   36ee4:	ldr	r3, [ip, #20]
   36ee8:	ldr	r0, [ip, #24]
   36eec:	strd	r6, [sp, #8]
   36ef0:	str	lr, [sp, #16]
   36ef4:	sub	sp, sp, #12
   36ef8:	adds	r3, r1, r3
   36efc:	movcs	r5, #1
   36f00:	movcc	r5, #0
   36f04:	cmp	r0, r3
   36f08:	orrcc	r5, r5, #1
   36f0c:	cmp	r5, #0
   36f10:	bne	36fbc <flatcc_builder_extend_vector@@Base+0xe4>
   36f14:	ldr	r2, [ip, #16]
   36f18:	ldr	r6, [r4, #20]
   36f1c:	str	r3, [ip, #20]
   36f20:	ldr	r3, [r4, #24]
   36f24:	mla	r2, r2, r1, r6
   36f28:	cmp	r2, r3
   36f2c:	str	r2, [r4, #20]
   36f30:	bcs	36f50 <flatcc_builder_extend_vector@@Base+0x78>
   36f34:	ldr	r0, [r4, #16]
   36f38:	add	r0, r0, r6
   36f3c:	add	sp, sp, #12
   36f40:	ldrd	r4, [sp]
   36f44:	ldrd	r6, [sp, #8]
   36f48:	add	sp, sp, #16
   36f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   36f50:	ldr	ip, [r4, #28]
   36f54:	mov	r0, #1
   36f58:	add	r1, r4, #60	; 0x3c
   36f5c:	mov	r3, r0
   36f60:	str	r0, [sp]
   36f64:	ldr	r7, [r4, #48]	; 0x30
   36f68:	add	ip, ip, r0
   36f6c:	ldr	r0, [r4, #40]	; 0x28
   36f70:	add	r2, ip, r2
   36f74:	blx	r7
   36f78:	cmp	r0, #0
   36f7c:	bne	36fb4 <flatcc_builder_extend_vector@@Base+0xdc>
   36f80:	ldr	r2, [r4, #28]
   36f84:	ldr	r0, [r4, #60]	; 0x3c
   36f88:	ldr	r3, [r4, #64]	; 0x40
   36f8c:	add	r0, r0, r2
   36f90:	sub	r3, r3, r2
   36f94:	mvn	r2, #3
   36f98:	str	r0, [r4, #16]
   36f9c:	cmn	r3, #4
   36fa0:	mvnhi	r3, #3
   36fa4:	str	r3, [r4, #24]
   36fa8:	ldr	r3, [r4, #32]
   36fac:	str	r2, [r3, #4]
   36fb0:	b	36f38 <flatcc_builder_extend_vector@@Base+0x60>
   36fb4:	mov	r0, r5
   36fb8:	b	36f3c <flatcc_builder_extend_vector@@Base+0x64>
   36fbc:	bl	35900 <flatcc_builder_default_alloc@@Base+0x1c4>

00036fc0 <flatcc_builder_vector_push@@Base>:
   36fc0:	ldr	r3, [r0, #32]
   36fc4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   36fc8:	ldrh	r2, [r3, #14]
   36fcc:	strd	r6, [sp, #8]
   36fd0:	str	r8, [sp, #16]
   36fd4:	str	lr, [sp, #20]
   36fd8:	sub	sp, sp, #8
   36fdc:	cmp	r2, #4
   36fe0:	bne	370e4 <flatcc_builder_vector_push@@Base+0x124>
   36fe4:	mov	r6, r1
   36fe8:	ldr	r2, [r3, #20]
   36fec:	ldr	r1, [r3, #24]
   36ff0:	cmp	r2, r1
   36ff4:	bhi	370c8 <flatcc_builder_vector_push@@Base+0x108>
   36ff8:	add	r2, r2, #1
   36ffc:	ldr	r5, [r3, #16]
   37000:	mov	r4, r0
   37004:	ldr	r7, [r0, #20]
   37008:	str	r2, [r3, #20]
   3700c:	ldr	r3, [r0, #24]
   37010:	add	ip, r5, r7
   37014:	cmp	ip, r3
   37018:	str	ip, [r0, #20]
   3701c:	bcs	3705c <flatcc_builder_vector_push@@Base+0x9c>
   37020:	ldr	r3, [r0, #16]
   37024:	adds	r3, r3, r7
   37028:	beq	37040 <flatcc_builder_vector_push@@Base+0x80>
   3702c:	mov	r0, r3
   37030:	mov	r2, r5
   37034:	mov	r1, r6
   37038:	bl	13eb8 <memcpy@plt>
   3703c:	mov	r3, r0
   37040:	mov	r0, r3
   37044:	add	sp, sp, #8
   37048:	ldrd	r4, [sp]
   3704c:	ldrd	r6, [sp, #8]
   37050:	ldr	r8, [sp, #16]
   37054:	add	sp, sp, #20
   37058:	pop	{pc}		; (ldr pc, [sp], #4)
   3705c:	ldr	r2, [r4, #28]
   37060:	mov	r0, #1
   37064:	add	r1, r4, #60	; 0x3c
   37068:	mov	r3, r0
   3706c:	str	r0, [sp]
   37070:	ldr	r8, [r4, #48]	; 0x30
   37074:	add	r2, r2, r0
   37078:	ldr	r0, [r4, #40]	; 0x28
   3707c:	add	r2, r2, ip
   37080:	blx	r8
   37084:	cmp	r0, #0
   37088:	bne	370c0 <flatcc_builder_vector_push@@Base+0x100>
   3708c:	ldr	r1, [r4, #28]
   37090:	ldr	r3, [r4, #60]	; 0x3c
   37094:	ldr	r2, [r4, #64]	; 0x40
   37098:	add	r3, r3, r1
   3709c:	sub	r2, r2, r1
   370a0:	mvn	r1, #3
   370a4:	str	r3, [r4, #16]
   370a8:	cmn	r2, #4
   370ac:	mvnhi	r2, #3
   370b0:	str	r2, [r4, #24]
   370b4:	ldr	r2, [r4, #32]
   370b8:	str	r1, [r2, #4]
   370bc:	b	37024 <flatcc_builder_vector_push@@Base+0x64>
   370c0:	mov	r3, #0
   370c4:	b	37040 <flatcc_builder_vector_push@@Base+0x80>
   370c8:	movw	r1, #39296	; 0x9980
   370cc:	movt	r1, #5
   370d0:	ldr	r3, [pc, #40]	; 37100 <flatcc_builder_vector_push@@Base+0x140>
   370d4:	movw	r0, #39704	; 0x9b18
   370d8:	movt	r0, #5
   370dc:	mov	r2, #908	; 0x38c
   370e0:	bl	14014 <__assert_fail@plt>
   370e4:	movw	r1, #39296	; 0x9980
   370e8:	movt	r1, #5
   370ec:	ldr	r3, [pc, #12]	; 37100 <flatcc_builder_vector_push@@Base+0x140>
   370f0:	movw	r0, #39660	; 0x9aec
   370f4:	movt	r0, #5
   370f8:	movw	r2, #907	; 0x38b
   370fc:	bl	14014 <__assert_fail@plt>
   37100:			; <UNDEFINED> instruction: 0x000595b0

00037104 <flatcc_builder_append_vector@@Base>:
   37104:	strd	r4, [sp, #-28]!	; 0xffffffe4
   37108:	mov	r5, r0
   3710c:	ldr	r0, [r0, #32]
   37110:	ldrh	r3, [r0, #14]
   37114:	strd	r6, [sp, #8]
   37118:	strd	r8, [sp, #16]
   3711c:	str	lr, [sp, #24]
   37120:	sub	sp, sp, #12
   37124:	cmp	r3, #4
   37128:	bne	37228 <flatcc_builder_append_vector@@Base+0x124>
   3712c:	mov	r6, r1
   37130:	ldr	r1, [r0, #20]
   37134:	ldr	r4, [r0, #24]
   37138:	adds	r1, r2, r1
   3713c:	movcs	r3, #1
   37140:	movcc	r3, #0
   37144:	cmp	r4, r1
   37148:	movcs	r4, r3
   3714c:	orrcc	r4, r3, #1
   37150:	cmp	r4, #0
   37154:	bne	37224 <flatcc_builder_append_vector@@Base+0x120>
   37158:	ldr	r7, [r0, #16]
   3715c:	ldr	r8, [r5, #20]
   37160:	ldr	r3, [r5, #24]
   37164:	mul	r7, r7, r2
   37168:	str	r1, [r0, #20]
   3716c:	add	ip, r7, r8
   37170:	cmp	ip, r3
   37174:	str	ip, [r5, #20]
   37178:	bcs	371b8 <flatcc_builder_append_vector@@Base+0xb4>
   3717c:	ldr	r3, [r5, #16]
   37180:	adds	r3, r3, r8
   37184:	beq	3719c <flatcc_builder_append_vector@@Base+0x98>
   37188:	mov	r0, r3
   3718c:	mov	r2, r7
   37190:	mov	r1, r6
   37194:	bl	13eb8 <memcpy@plt>
   37198:	mov	r3, r0
   3719c:	mov	r0, r3
   371a0:	add	sp, sp, #12
   371a4:	ldrd	r4, [sp]
   371a8:	ldrd	r6, [sp, #8]
   371ac:	ldrd	r8, [sp, #16]
   371b0:	add	sp, sp, #24
   371b4:	pop	{pc}		; (ldr pc, [sp], #4)
   371b8:	ldr	r2, [r5, #28]
   371bc:	mov	r0, #1
   371c0:	add	r1, r5, #60	; 0x3c
   371c4:	mov	r3, r0
   371c8:	str	r0, [sp]
   371cc:	ldr	r9, [r5, #48]	; 0x30
   371d0:	add	r2, r2, r0
   371d4:	ldr	r0, [r5, #40]	; 0x28
   371d8:	add	r2, r2, ip
   371dc:	blx	r9
   371e0:	cmp	r0, #0
   371e4:	bne	3721c <flatcc_builder_append_vector@@Base+0x118>
   371e8:	ldr	r1, [r5, #28]
   371ec:	ldr	r3, [r5, #60]	; 0x3c
   371f0:	ldr	r2, [r5, #64]	; 0x40
   371f4:	add	r3, r3, r1
   371f8:	sub	r2, r2, r1
   371fc:	mvn	r1, #3
   37200:	str	r3, [r5, #16]
   37204:	cmn	r2, #4
   37208:	mvnhi	r2, #3
   3720c:	str	r2, [r5, #24]
   37210:	ldr	r2, [r5, #32]
   37214:	str	r1, [r2, #4]
   37218:	b	37180 <flatcc_builder_append_vector@@Base+0x7c>
   3721c:	mov	r3, r4
   37220:	b	3719c <flatcc_builder_append_vector@@Base+0x98>
   37224:	bl	35900 <flatcc_builder_default_alloc@@Base+0x1c4>
   37228:	movw	r1, #39296	; 0x9980
   3722c:	movt	r1, #5
   37230:	ldr	r3, [pc, #12]	; 37244 <flatcc_builder_append_vector@@Base+0x140>
   37234:	movw	r0, #39660	; 0x9aec
   37238:	movt	r0, #5
   3723c:	movw	r2, #915	; 0x393
   37240:	bl	14014 <__assert_fail@plt>
   37244:	andeq	r9, r5, ip, asr #11

00037248 <flatcc_builder_extend_offset_vector@@Base>:
   37248:	ldr	ip, [r0, #32]
   3724c:	strd	r4, [sp, #-20]!	; 0xffffffec
   37250:	mov	r4, r0
   37254:	ldr	r3, [ip, #20]
   37258:	strd	r6, [sp, #8]
   3725c:	str	lr, [sp, #16]
   37260:	sub	sp, sp, #12
   37264:	adds	r3, r1, r3
   37268:	movcs	r2, #1
   3726c:	movcc	r2, #0
   37270:	cmn	r3, #-1073741823	; 0xc0000001
   37274:	movls	r0, #0
   37278:	movhi	r0, #1
   3727c:	orrs	r5, r2, r0
   37280:	bne	37328 <flatcc_builder_extend_offset_vector@@Base+0xe0>
   37284:	ldr	r6, [r4, #20]
   37288:	str	r3, [ip, #20]
   3728c:	ldr	r3, [r4, #24]
   37290:	add	r2, r6, r1, lsl #2
   37294:	cmp	r2, r3
   37298:	str	r2, [r4, #20]
   3729c:	bcs	372bc <flatcc_builder_extend_offset_vector@@Base+0x74>
   372a0:	ldr	r0, [r4, #16]
   372a4:	add	r0, r0, r6
   372a8:	add	sp, sp, #12
   372ac:	ldrd	r4, [sp]
   372b0:	ldrd	r6, [sp, #8]
   372b4:	add	sp, sp, #16
   372b8:	pop	{pc}		; (ldr pc, [sp], #4)
   372bc:	ldr	ip, [r4, #28]
   372c0:	mov	r0, #1
   372c4:	add	r1, r4, #60	; 0x3c
   372c8:	mov	r3, r0
   372cc:	str	r0, [sp]
   372d0:	ldr	r7, [r4, #48]	; 0x30
   372d4:	add	ip, ip, r0
   372d8:	ldr	r0, [r4, #40]	; 0x28
   372dc:	add	r2, ip, r2
   372e0:	blx	r7
   372e4:	cmp	r0, #0
   372e8:	bne	37320 <flatcc_builder_extend_offset_vector@@Base+0xd8>
   372ec:	ldr	r2, [r4, #28]
   372f0:	ldr	r0, [r4, #60]	; 0x3c
   372f4:	ldr	r3, [r4, #64]	; 0x40
   372f8:	add	r0, r0, r2
   372fc:	sub	r3, r3, r2
   37300:	mvn	r2, #3
   37304:	str	r0, [r4, #16]
   37308:	cmn	r3, #4
   3730c:	mvnhi	r3, #3
   37310:	str	r3, [r4, #24]
   37314:	ldr	r3, [r4, #32]
   37318:	str	r2, [r3, #4]
   3731c:	b	372a4 <flatcc_builder_extend_offset_vector@@Base+0x5c>
   37320:	mov	r0, r5
   37324:	b	372a8 <flatcc_builder_extend_offset_vector@@Base+0x60>
   37328:	bl	35900 <flatcc_builder_default_alloc@@Base+0x1c4>

0003732c <flatcc_builder_offset_vector_push@@Base>:
   3732c:	ldr	r2, [r0, #32]
   37330:	strd	r4, [sp, #-20]!	; 0xffffffec
   37334:	ldrh	r3, [r2, #14]
   37338:	strd	r6, [sp, #8]
   3733c:	str	lr, [sp, #16]
   37340:	sub	sp, sp, #12
   37344:	cmp	r3, #5
   37348:	bne	3740c <flatcc_builder_offset_vector_push@@Base+0xe0>
   3734c:	ldr	r3, [r2, #20]
   37350:	cmn	r3, #-1073741823	; 0xc0000001
   37354:	beq	37404 <flatcc_builder_offset_vector_push@@Base+0xd8>
   37358:	ldr	r5, [r0, #20]
   3735c:	mov	r6, r1
   37360:	add	r3, r3, #1
   37364:	mov	r4, r0
   37368:	ldr	r1, [r0, #24]
   3736c:	str	r3, [r2, #20]
   37370:	add	r3, r5, #4
   37374:	cmp	r3, r1
   37378:	str	r3, [r0, #20]
   3737c:	bcs	373a0 <flatcc_builder_offset_vector_push@@Base+0x74>
   37380:	ldr	r3, [r0, #16]
   37384:	adds	r0, r3, r5
   37388:	strne	r6, [r3, r5]
   3738c:	add	sp, sp, #12
   37390:	ldrd	r4, [sp]
   37394:	ldrd	r6, [sp, #8]
   37398:	add	sp, sp, #16
   3739c:	pop	{pc}		; (ldr pc, [sp], #4)
   373a0:	ldr	r2, [r4, #28]
   373a4:	mov	r0, #1
   373a8:	add	r1, r4, #60	; 0x3c
   373ac:	mov	r3, r0
   373b0:	str	r0, [sp]
   373b4:	ldr	r0, [r4, #40]	; 0x28
   373b8:	add	r2, r5, r2
   373bc:	ldr	r7, [r4, #48]	; 0x30
   373c0:	add	r2, r2, #5
   373c4:	blx	r7
   373c8:	cmp	r0, #0
   373cc:	bne	37404 <flatcc_builder_offset_vector_push@@Base+0xd8>
   373d0:	ldr	r1, [r4, #28]
   373d4:	ldr	r3, [r4, #60]	; 0x3c
   373d8:	ldr	r2, [r4, #64]	; 0x40
   373dc:	add	r3, r3, r1
   373e0:	sub	r2, r2, r1
   373e4:	mvn	r1, #3
   373e8:	str	r3, [r4, #16]
   373ec:	cmn	r2, #4
   373f0:	mvnhi	r2, #3
   373f4:	str	r2, [r4, #24]
   373f8:	ldr	r2, [r4, #32]
   373fc:	str	r1, [r2, #4]
   37400:	b	37384 <flatcc_builder_offset_vector_push@@Base+0x58>
   37404:	mov	r0, #0
   37408:	b	3738c <flatcc_builder_offset_vector_push@@Base+0x60>
   3740c:	movw	r1, #39296	; 0x9980
   37410:	movt	r1, #5
   37414:	ldr	r3, [pc, #12]	; 37428 <flatcc_builder_offset_vector_push@@Base+0xfc>
   37418:	movw	r0, #39768	; 0x9b58
   3741c:	movt	r0, #5
   37420:	movw	r2, #934	; 0x3a6
   37424:	bl	14014 <__assert_fail@plt>
   37428:	andeq	r9, r5, ip, ror #11

0003742c <flatcc_builder_append_offset_vector@@Base>:
   3742c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   37430:	mov	r5, r0
   37434:	ldr	r0, [r0, #32]
   37438:	ldrh	r3, [r0, #14]
   3743c:	strd	r6, [sp, #8]
   37440:	strd	r8, [sp, #16]
   37444:	str	lr, [sp, #24]
   37448:	sub	sp, sp, #12
   3744c:	cmp	r3, #5
   37450:	bne	37548 <flatcc_builder_append_offset_vector@@Base+0x11c>
   37454:	ldr	r3, [r0, #20]
   37458:	mov	r7, r1
   3745c:	adds	r1, r2, r3
   37460:	movcs	r4, #1
   37464:	movcc	r4, #0
   37468:	cmn	r1, #-1073741823	; 0xc0000001
   3746c:	movls	r3, #0
   37470:	movhi	r3, #1
   37474:	orrs	r4, r4, r3
   37478:	bne	37544 <flatcc_builder_append_offset_vector@@Base+0x118>
   3747c:	ldr	r8, [r5, #20]
   37480:	lsl	r6, r2, #2
   37484:	ldr	r3, [r5, #24]
   37488:	str	r1, [r0, #20]
   3748c:	add	ip, r6, r8
   37490:	cmp	ip, r3
   37494:	str	ip, [r5, #20]
   37498:	bcs	374d8 <flatcc_builder_append_offset_vector@@Base+0xac>
   3749c:	ldr	r3, [r5, #16]
   374a0:	adds	r3, r3, r8
   374a4:	beq	374bc <flatcc_builder_append_offset_vector@@Base+0x90>
   374a8:	mov	r0, r3
   374ac:	mov	r2, r6
   374b0:	mov	r1, r7
   374b4:	bl	13eb8 <memcpy@plt>
   374b8:	mov	r3, r0
   374bc:	mov	r0, r3
   374c0:	add	sp, sp, #12
   374c4:	ldrd	r4, [sp]
   374c8:	ldrd	r6, [sp, #8]
   374cc:	ldrd	r8, [sp, #16]
   374d0:	add	sp, sp, #24
   374d4:	pop	{pc}		; (ldr pc, [sp], #4)
   374d8:	ldr	r2, [r5, #28]
   374dc:	mov	r0, #1
   374e0:	add	r1, r5, #60	; 0x3c
   374e4:	mov	r3, r0
   374e8:	str	r0, [sp]
   374ec:	ldr	r9, [r5, #48]	; 0x30
   374f0:	add	r2, r2, r0
   374f4:	ldr	r0, [r5, #40]	; 0x28
   374f8:	add	r2, r2, ip
   374fc:	blx	r9
   37500:	cmp	r0, #0
   37504:	bne	3753c <flatcc_builder_append_offset_vector@@Base+0x110>
   37508:	ldr	r1, [r5, #28]
   3750c:	ldr	r3, [r5, #60]	; 0x3c
   37510:	ldr	r2, [r5, #64]	; 0x40
   37514:	add	r3, r3, r1
   37518:	sub	r2, r2, r1
   3751c:	mvn	r1, #3
   37520:	str	r3, [r5, #16]
   37524:	cmn	r2, #4
   37528:	mvnhi	r2, #3
   3752c:	str	r2, [r5, #24]
   37530:	ldr	r2, [r5, #32]
   37534:	str	r1, [r2, #4]
   37538:	b	374a0 <flatcc_builder_append_offset_vector@@Base+0x74>
   3753c:	mov	r3, r4
   37540:	b	374bc <flatcc_builder_append_offset_vector@@Base+0x90>
   37544:	bl	35900 <flatcc_builder_default_alloc@@Base+0x1c4>
   37548:	movw	r1, #39296	; 0x9980
   3754c:	movt	r1, #5
   37550:	ldr	r3, [pc, #12]	; 37564 <flatcc_builder_append_offset_vector@@Base+0x138>
   37554:	movw	r0, #39768	; 0x9b58
   37558:	movt	r0, #5
   3755c:	mov	r2, #948	; 0x3b4
   37560:	bl	14014 <__assert_fail@plt>
   37564:	andeq	r9, r5, r0, lsl r6

00037568 <flatcc_builder_extend_string@@Base>:
   37568:	ldr	r2, [r0, #32]
   3756c:	strd	r4, [sp, #-16]!
   37570:	ldrh	r3, [r2, #14]
   37574:	str	r6, [sp, #8]
   37578:	str	lr, [sp, #12]
   3757c:	sub	sp, sp, #8
   37580:	cmp	r3, #6
   37584:	bne	37640 <flatcc_builder_extend_string@@Base+0xd8>
   37588:	ldr	r3, [r2, #20]
   3758c:	adds	r3, r1, r3
   37590:	bcs	3763c <flatcc_builder_extend_string@@Base+0xd4>
   37594:	ldr	r5, [r0, #20]
   37598:	mov	r4, r0
   3759c:	str	r3, [r2, #20]
   375a0:	ldr	r3, [r0, #24]
   375a4:	add	r2, r1, r5
   375a8:	cmp	r2, r3
   375ac:	str	r2, [r0, #20]
   375b0:	bcs	375d0 <flatcc_builder_extend_string@@Base+0x68>
   375b4:	ldr	r0, [r0, #16]
   375b8:	add	r0, r0, r5
   375bc:	add	sp, sp, #8
   375c0:	ldrd	r4, [sp]
   375c4:	ldr	r6, [sp, #8]
   375c8:	add	sp, sp, #12
   375cc:	pop	{pc}		; (ldr pc, [sp], #4)
   375d0:	ldr	ip, [r4, #28]
   375d4:	mov	r0, #1
   375d8:	add	r1, r4, #60	; 0x3c
   375dc:	mov	r3, r0
   375e0:	str	r0, [sp]
   375e4:	ldr	r6, [r4, #48]	; 0x30
   375e8:	add	ip, ip, r0
   375ec:	ldr	r0, [r4, #40]	; 0x28
   375f0:	add	r2, ip, r2
   375f4:	blx	r6
   375f8:	cmp	r0, #0
   375fc:	bne	37634 <flatcc_builder_extend_string@@Base+0xcc>
   37600:	ldr	r2, [r4, #28]
   37604:	ldr	r0, [r4, #60]	; 0x3c
   37608:	ldr	r3, [r4, #64]	; 0x40
   3760c:	add	r0, r0, r2
   37610:	sub	r3, r3, r2
   37614:	mvn	r2, #3
   37618:	str	r0, [r4, #16]
   3761c:	cmn	r3, #4
   37620:	mvnhi	r3, #3
   37624:	str	r3, [r4, #24]
   37628:	ldr	r3, [r4, #32]
   3762c:	str	r2, [r3, #4]
   37630:	b	375b8 <flatcc_builder_extend_string@@Base+0x50>
   37634:	mov	r0, #0
   37638:	b	375bc <flatcc_builder_extend_string@@Base+0x54>
   3763c:	bl	35900 <flatcc_builder_default_alloc@@Base+0x1c4>
   37640:	movw	r1, #39296	; 0x9980
   37644:	movt	r1, #5
   37648:	ldr	r3, [pc, #12]	; 3765c <flatcc_builder_extend_string@@Base+0xf4>
   3764c:	movw	r0, #39424	; 0x9a00
   37650:	movt	r0, #5
   37654:	movw	r2, #957	; 0x3bd
   37658:	bl	14014 <__assert_fail@plt>
   3765c:	andeq	r9, r5, r4, lsr r6

00037660 <flatcc_builder_append_string@@Base>:
   37660:	strd	r4, [sp, #-24]!	; 0xffffffe8
   37664:	strd	r6, [sp, #8]
   37668:	mov	r6, r1
   3766c:	ldr	r1, [r0, #32]
   37670:	str	r8, [sp, #16]
   37674:	str	lr, [sp, #20]
   37678:	sub	sp, sp, #8
   3767c:	ldrh	r3, [r1, #14]
   37680:	cmp	r3, #6
   37684:	bne	37764 <flatcc_builder_append_string@@Base+0x104>
   37688:	ldr	r3, [r1, #20]
   3768c:	mov	r5, r2
   37690:	adds	r3, r2, r3
   37694:	bcs	37760 <flatcc_builder_append_string@@Base+0x100>
   37698:	ldr	r7, [r0, #20]
   3769c:	mov	r4, r0
   376a0:	str	r3, [r1, #20]
   376a4:	ldr	r3, [r0, #24]
   376a8:	add	ip, r2, r7
   376ac:	cmp	ip, r3
   376b0:	str	ip, [r0, #20]
   376b4:	bcs	376f4 <flatcc_builder_append_string@@Base+0x94>
   376b8:	ldr	r3, [r0, #16]
   376bc:	adds	r3, r3, r7
   376c0:	beq	376d8 <flatcc_builder_append_string@@Base+0x78>
   376c4:	mov	r0, r3
   376c8:	mov	r2, r5
   376cc:	mov	r1, r6
   376d0:	bl	13eb8 <memcpy@plt>
   376d4:	mov	r3, r0
   376d8:	mov	r0, r3
   376dc:	add	sp, sp, #8
   376e0:	ldrd	r4, [sp]
   376e4:	ldrd	r6, [sp, #8]
   376e8:	ldr	r8, [sp, #16]
   376ec:	add	sp, sp, #20
   376f0:	pop	{pc}		; (ldr pc, [sp], #4)
   376f4:	ldr	r2, [r4, #28]
   376f8:	mov	r0, #1
   376fc:	add	r1, r4, #60	; 0x3c
   37700:	mov	r3, r0
   37704:	str	r0, [sp]
   37708:	ldr	r8, [r4, #48]	; 0x30
   3770c:	add	r2, r2, r0
   37710:	ldr	r0, [r4, #40]	; 0x28
   37714:	add	r2, r2, ip
   37718:	blx	r8
   3771c:	cmp	r0, #0
   37720:	bne	37758 <flatcc_builder_append_string@@Base+0xf8>
   37724:	ldr	r1, [r4, #28]
   37728:	ldr	r3, [r4, #60]	; 0x3c
   3772c:	ldr	r2, [r4, #64]	; 0x40
   37730:	add	r3, r3, r1
   37734:	sub	r2, r2, r1
   37738:	mvn	r1, #3
   3773c:	str	r3, [r4, #16]
   37740:	cmn	r2, #4
   37744:	mvnhi	r2, #3
   37748:	str	r2, [r4, #24]
   3774c:	ldr	r2, [r4, #32]
   37750:	str	r1, [r2, #4]
   37754:	b	376bc <flatcc_builder_append_string@@Base+0x5c>
   37758:	mov	r3, #0
   3775c:	b	376d8 <flatcc_builder_append_string@@Base+0x78>
   37760:	bl	35900 <flatcc_builder_default_alloc@@Base+0x1c4>
   37764:	bl	35950 <flatcc_builder_default_alloc@@Base+0x214>

00037768 <flatcc_builder_append_string_str@@Base>:
   37768:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3776c:	mov	r4, r0
   37770:	mov	r0, r1
   37774:	strd	r6, [sp, #8]
   37778:	mov	r6, r1
   3777c:	str	r8, [sp, #16]
   37780:	str	lr, [sp, #20]
   37784:	sub	sp, sp, #8
   37788:	bl	13f54 <strlen@plt>
   3778c:	ldr	r2, [r4, #32]
   37790:	ldrh	r3, [r2, #14]
   37794:	cmp	r3, #6
   37798:	bne	37874 <flatcc_builder_append_string_str@@Base+0x10c>
   3779c:	ldr	r3, [r2, #20]
   377a0:	mov	r5, r0
   377a4:	adds	r3, r0, r3
   377a8:	bcs	37870 <flatcc_builder_append_string_str@@Base+0x108>
   377ac:	ldr	r7, [r4, #20]
   377b0:	str	r3, [r2, #20]
   377b4:	ldr	r3, [r4, #24]
   377b8:	add	ip, r0, r7
   377bc:	cmp	ip, r3
   377c0:	str	ip, [r4, #20]
   377c4:	bcs	37804 <flatcc_builder_append_string_str@@Base+0x9c>
   377c8:	ldr	r3, [r4, #16]
   377cc:	adds	r3, r3, r7
   377d0:	beq	377e8 <flatcc_builder_append_string_str@@Base+0x80>
   377d4:	mov	r0, r3
   377d8:	mov	r2, r5
   377dc:	mov	r1, r6
   377e0:	bl	13eb8 <memcpy@plt>
   377e4:	mov	r3, r0
   377e8:	mov	r0, r3
   377ec:	add	sp, sp, #8
   377f0:	ldrd	r4, [sp]
   377f4:	ldrd	r6, [sp, #8]
   377f8:	ldr	r8, [sp, #16]
   377fc:	add	sp, sp, #20
   37800:	pop	{pc}		; (ldr pc, [sp], #4)
   37804:	ldr	r2, [r4, #28]
   37808:	mov	r0, #1
   3780c:	add	r1, r4, #60	; 0x3c
   37810:	mov	r3, r0
   37814:	str	r0, [sp]
   37818:	ldr	r8, [r4, #48]	; 0x30
   3781c:	add	r2, r2, r0
   37820:	ldr	r0, [r4, #40]	; 0x28
   37824:	add	r2, r2, ip
   37828:	blx	r8
   3782c:	cmp	r0, #0
   37830:	bne	37868 <flatcc_builder_append_string_str@@Base+0x100>
   37834:	ldr	r1, [r4, #28]
   37838:	ldr	r3, [r4, #60]	; 0x3c
   3783c:	ldr	r2, [r4, #64]	; 0x40
   37840:	add	r3, r3, r1
   37844:	sub	r2, r2, r1
   37848:	mvn	r1, #3
   3784c:	str	r3, [r4, #16]
   37850:	cmn	r2, #4
   37854:	mvnhi	r2, #3
   37858:	str	r2, [r4, #24]
   3785c:	ldr	r2, [r4, #32]
   37860:	str	r1, [r2, #4]
   37864:	b	377cc <flatcc_builder_append_string_str@@Base+0x64>
   37868:	mov	r3, #0
   3786c:	b	377e8 <flatcc_builder_append_string_str@@Base+0x80>
   37870:	bl	35900 <flatcc_builder_default_alloc@@Base+0x1c4>
   37874:	bl	35950 <flatcc_builder_default_alloc@@Base+0x214>

00037878 <flatcc_builder_append_string_strn@@Base>:
   37878:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3787c:	mov	r4, r0
   37880:	mov	r5, r2
   37884:	strd	r6, [sp, #8]
   37888:	mov	r6, r1
   3788c:	mov	r1, #0
   37890:	mov	r0, r6
   37894:	str	r8, [sp, #16]
   37898:	str	lr, [sp, #20]
   3789c:	sub	sp, sp, #8
   378a0:	bl	13f9c <memchr@plt>
   378a4:	ldr	r2, [r4, #32]
   378a8:	cmp	r0, #0
   378ac:	subne	r5, r0, r6
   378b0:	ldrh	r3, [r2, #14]
   378b4:	cmp	r3, #6
   378b8:	bne	37990 <flatcc_builder_append_string_strn@@Base+0x118>
   378bc:	ldr	r3, [r2, #20]
   378c0:	adds	r3, r5, r3
   378c4:	bcs	3798c <flatcc_builder_append_string_strn@@Base+0x114>
   378c8:	ldr	r7, [r4, #20]
   378cc:	str	r3, [r2, #20]
   378d0:	ldr	r3, [r4, #24]
   378d4:	add	ip, r5, r7
   378d8:	cmp	ip, r3
   378dc:	str	ip, [r4, #20]
   378e0:	bcs	37920 <flatcc_builder_append_string_strn@@Base+0xa8>
   378e4:	ldr	r3, [r4, #16]
   378e8:	adds	r3, r3, r7
   378ec:	beq	37904 <flatcc_builder_append_string_strn@@Base+0x8c>
   378f0:	mov	r0, r3
   378f4:	mov	r2, r5
   378f8:	mov	r1, r6
   378fc:	bl	13eb8 <memcpy@plt>
   37900:	mov	r3, r0
   37904:	mov	r0, r3
   37908:	add	sp, sp, #8
   3790c:	ldrd	r4, [sp]
   37910:	ldrd	r6, [sp, #8]
   37914:	ldr	r8, [sp, #16]
   37918:	add	sp, sp, #20
   3791c:	pop	{pc}		; (ldr pc, [sp], #4)
   37920:	ldr	r2, [r4, #28]
   37924:	mov	r0, #1
   37928:	add	r1, r4, #60	; 0x3c
   3792c:	mov	r3, r0
   37930:	str	r0, [sp]
   37934:	ldr	r8, [r4, #48]	; 0x30
   37938:	add	r2, r2, r0
   3793c:	ldr	r0, [r4, #40]	; 0x28
   37940:	add	r2, r2, ip
   37944:	blx	r8
   37948:	cmp	r0, #0
   3794c:	bne	37984 <flatcc_builder_append_string_strn@@Base+0x10c>
   37950:	ldr	r1, [r4, #28]
   37954:	ldr	r3, [r4, #60]	; 0x3c
   37958:	ldr	r2, [r4, #64]	; 0x40
   3795c:	add	r3, r3, r1
   37960:	sub	r2, r2, r1
   37964:	mvn	r1, #3
   37968:	str	r3, [r4, #16]
   3796c:	cmn	r2, #4
   37970:	mvnhi	r2, #3
   37974:	str	r2, [r4, #24]
   37978:	ldr	r2, [r4, #32]
   3797c:	str	r1, [r2, #4]
   37980:	b	378e8 <flatcc_builder_append_string_strn@@Base+0x70>
   37984:	mov	r3, #0
   37988:	b	37904 <flatcc_builder_append_string_strn@@Base+0x8c>
   3798c:	bl	35900 <flatcc_builder_default_alloc@@Base+0x1c4>
   37990:	bl	35950 <flatcc_builder_default_alloc@@Base+0x214>

00037994 <flatcc_builder_truncate_vector@@Base>:
   37994:	mov	r3, r0
   37998:	ldr	r0, [r0, #32]
   3799c:	str	r4, [sp, #-8]!
   379a0:	ldrh	r2, [r0, #14]
   379a4:	str	lr, [sp, #4]
   379a8:	cmp	r2, #4
   379ac:	bne	379fc <flatcc_builder_truncate_vector@@Base+0x68>
   379b0:	mov	lr, r1
   379b4:	ldr	r1, [r0, #20]
   379b8:	cmp	r1, lr
   379bc:	bcc	37a18 <flatcc_builder_truncate_vector@@Base+0x84>
   379c0:	ldr	r2, [r0, #16]
   379c4:	sub	ip, r1, lr
   379c8:	mov	r1, #0
   379cc:	str	ip, [r0, #20]
   379d0:	ldr	r0, [r3, #16]
   379d4:	ldr	ip, [r3, #20]
   379d8:	mul	r2, r2, lr
   379dc:	sub	ip, ip, r2
   379e0:	add	r0, r0, ip
   379e4:	str	ip, [r3, #20]
   379e8:	bl	13f78 <memset@plt>
   379ec:	ldr	r4, [sp]
   379f0:	add	sp, sp, #4
   379f4:	mov	r0, #0
   379f8:	pop	{pc}		; (ldr pc, [sp], #4)
   379fc:	movw	r1, #39296	; 0x9980
   37a00:	movt	r1, #5
   37a04:	ldr	r3, [pc, #40]	; 37a34 <flatcc_builder_truncate_vector@@Base+0xa0>
   37a08:	movw	r0, #39660	; 0x9aec
   37a0c:	movt	r0, #5
   37a10:	movw	r2, #985	; 0x3d9
   37a14:	bl	14014 <__assert_fail@plt>
   37a18:	movw	r1, #39296	; 0x9980
   37a1c:	movt	r1, #5
   37a20:	ldr	r3, [pc, #12]	; 37a34 <flatcc_builder_truncate_vector@@Base+0xa0>
   37a24:	movw	r0, #39820	; 0x9b8c
   37a28:	movt	r0, #5
   37a2c:	movw	r2, #986	; 0x3da
   37a30:	bl	14014 <__assert_fail@plt>
   37a34:	andeq	r9, r5, r4, asr r6

00037a38 <flatcc_builder_truncate_offset_vector@@Base>:
   37a38:	mov	r3, r0
   37a3c:	ldr	r0, [r0, #32]
   37a40:	str	r4, [sp, #-8]!
   37a44:	ldrh	r2, [r0, #14]
   37a48:	str	lr, [sp, #4]
   37a4c:	cmp	r2, #5
   37a50:	bne	37aa0 <flatcc_builder_truncate_offset_vector@@Base+0x68>
   37a54:	mov	lr, r1
   37a58:	ldr	r1, [r0, #20]
   37a5c:	cmp	r1, lr
   37a60:	bcc	37abc <flatcc_builder_truncate_offset_vector@@Base+0x84>
   37a64:	ldr	r2, [r0, #16]
   37a68:	sub	ip, r1, lr
   37a6c:	mov	r1, #0
   37a70:	str	ip, [r0, #20]
   37a74:	ldr	r0, [r3, #16]
   37a78:	ldr	ip, [r3, #20]
   37a7c:	mul	r2, r2, lr
   37a80:	sub	ip, ip, r2
   37a84:	add	r0, r0, ip
   37a88:	str	ip, [r3, #20]
   37a8c:	bl	13f78 <memset@plt>
   37a90:	ldr	r4, [sp]
   37a94:	add	sp, sp, #4
   37a98:	mov	r0, #0
   37a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   37aa0:	movw	r1, #39296	; 0x9980
   37aa4:	movt	r1, #5
   37aa8:	ldr	r3, [pc, #40]	; 37ad8 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   37aac:	movw	r0, #39768	; 0x9b58
   37ab0:	movt	r0, #5
   37ab4:	movw	r2, #994	; 0x3e2
   37ab8:	bl	14014 <__assert_fail@plt>
   37abc:	movw	r1, #39296	; 0x9980
   37ac0:	movt	r1, #5
   37ac4:	ldr	r3, [pc, #12]	; 37ad8 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   37ac8:	movw	r0, #39856	; 0x9bb0
   37acc:	movt	r0, #5
   37ad0:	movw	r2, #995	; 0x3e3
   37ad4:	bl	14014 <__assert_fail@plt>
   37ad8:	andeq	r9, r5, r4, ror r6

00037adc <flatcc_builder_truncate_string@@Base>:
   37adc:	str	r4, [sp, #-8]!
   37ae0:	str	lr, [sp, #4]
   37ae4:	ldr	lr, [r0, #32]
   37ae8:	ldrh	r2, [lr, #14]
   37aec:	cmp	r2, #6
   37af0:	bne	37b40 <flatcc_builder_truncate_string@@Base+0x64>
   37af4:	ldr	r2, [lr, #20]
   37af8:	mov	ip, r1
   37afc:	cmp	r2, r1
   37b00:	bcc	37b5c <flatcc_builder_truncate_string@@Base+0x80>
   37b04:	sub	r1, r2, r1
   37b08:	mov	r3, r0
   37b0c:	ldr	r0, [r0, #16]
   37b10:	mov	r2, ip
   37b14:	str	r1, [lr, #20]
   37b18:	mov	r1, #0
   37b1c:	ldr	lr, [r3, #20]
   37b20:	sub	ip, lr, ip
   37b24:	add	r0, r0, ip
   37b28:	str	ip, [r3, #20]
   37b2c:	bl	13f78 <memset@plt>
   37b30:	ldr	r4, [sp]
   37b34:	add	sp, sp, #4
   37b38:	mov	r0, #0
   37b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   37b40:	movw	r1, #39296	; 0x9980
   37b44:	movt	r1, #5
   37b48:	ldr	r3, [pc, #40]	; 37b78 <flatcc_builder_truncate_string@@Base+0x9c>
   37b4c:	movw	r0, #39424	; 0x9a00
   37b50:	movt	r0, #5
   37b54:	movw	r2, #1003	; 0x3eb
   37b58:	bl	14014 <__assert_fail@plt>
   37b5c:	movw	r1, #39296	; 0x9980
   37b60:	movt	r1, #5
   37b64:	ldr	r3, [pc, #12]	; 37b78 <flatcc_builder_truncate_string@@Base+0x9c>
   37b68:	movw	r0, #39916	; 0x9bec
   37b6c:	movt	r0, #5
   37b70:	mov	r2, #1004	; 0x3ec
   37b74:	bl	14014 <__assert_fail@plt>
   37b78:	muleq	r5, ip, r6

00037b7c <flatcc_builder_start_vector@@Base>:
   37b7c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   37b80:	mov	r4, r0
   37b84:	mov	r5, r3
   37b88:	ldr	r0, [r0, #156]	; 0x9c
   37b8c:	cmp	r2, #4
   37b90:	ldr	r3, [r4, #160]	; 0xa0
   37b94:	strd	r6, [sp, #8]
   37b98:	movcs	r7, r2
   37b9c:	movcc	r7, #4
   37ba0:	mov	r6, r1
   37ba4:	strd	r8, [sp, #16]
   37ba8:	add	r2, r0, #1
   37bac:	str	lr, [sp, #24]
   37bb0:	sub	sp, sp, #12
   37bb4:	cmp	r2, r3
   37bb8:	str	r2, [r4, #156]	; 0x9c
   37bbc:	ble	37cd8 <flatcc_builder_start_vector@@Base+0x15c>
   37bc0:	ldr	r3, [r4, #176]	; 0xb0
   37bc4:	cmp	r3, #0
   37bc8:	cmpgt	r2, r3
   37bcc:	movgt	r3, #1
   37bd0:	movle	r3, #0
   37bd4:	bgt	37ce8 <flatcc_builder_start_vector@@Base+0x16c>
   37bd8:	add	r0, r0, r0, lsl #3
   37bdc:	ldr	r1, [r4, #88]	; 0x58
   37be0:	lsl	r8, r0, #2
   37be4:	add	r2, r8, #36	; 0x24
   37be8:	cmp	r2, r1
   37bec:	bls	37c10 <flatcc_builder_start_vector@@Base+0x94>
   37bf0:	mov	ip, #4
   37bf4:	add	r1, r4, #84	; 0x54
   37bf8:	ldr	r0, [r4, #40]	; 0x28
   37bfc:	str	ip, [sp]
   37c00:	ldr	r9, [r4, #48]	; 0x30
   37c04:	blx	r9
   37c08:	cmp	r0, #0
   37c0c:	bne	37cf0 <flatcc_builder_start_vector@@Base+0x174>
   37c10:	ldr	r3, [r4, #84]	; 0x54
   37c14:	add	r3, r3, r8
   37c18:	cmp	r3, #0
   37c1c:	str	r3, [r4, #32]
   37c20:	beq	37ce8 <flatcc_builder_start_vector@@Base+0x16c>
   37c24:	ldr	r2, [r4, #88]	; 0x58
   37c28:	movw	r0, #36409	; 0x8e39
   37c2c:	movt	r0, #14563	; 0x38e3
   37c30:	ldr	r1, [r4, #176]	; 0xb0
   37c34:	umull	r0, r2, r0, r2
   37c38:	lsr	r2, r2, #3
   37c3c:	cmp	r1, #0
   37c40:	cmpgt	r2, r1
   37c44:	movgt	r2, r1
   37c48:	str	r2, [r4, #160]	; 0xa0
   37c4c:	ldr	r2, [r4, #20]
   37c50:	mvn	r9, #3
   37c54:	mov	ip, #0
   37c58:	ldr	r0, [r4, #28]
   37c5c:	ldrh	lr, [r4, #130]	; 0x82
   37c60:	ldr	r1, [r4, #64]	; 0x40
   37c64:	ldr	r8, [r4, #60]	; 0x3c
   37c68:	str	r2, [r3, #8]
   37c6c:	add	r2, r2, r0
   37c70:	add	r2, r2, #7
   37c74:	strh	lr, [r3, #12]
   37c78:	bic	r2, r2, #7
   37c7c:	strh	r7, [r4, #130]	; 0x82
   37c80:	mov	r7, #4
   37c84:	sub	r1, r1, r2
   37c88:	str	r0, [r3]
   37c8c:	mov	r0, ip
   37c90:	cmp	r1, r9
   37c94:	add	lr, r8, r2
   37c98:	str	ip, [r4, #20]
   37c9c:	movhi	r1, r9
   37ca0:	str	r2, [r4, #28]
   37ca4:	strh	r7, [r3, #14]
   37ca8:	str	r6, [r3, #16]
   37cac:	str	ip, [r3, #20]
   37cb0:	str	r5, [r3, #24]
   37cb4:	str	lr, [r4, #16]
   37cb8:	str	r1, [r4, #24]
   37cbc:	str	r9, [r3, #4]
   37cc0:	add	sp, sp, #12
   37cc4:	ldrd	r4, [sp]
   37cc8:	ldrd	r6, [sp, #8]
   37ccc:	ldrd	r8, [sp, #16]
   37cd0:	add	sp, sp, #24
   37cd4:	pop	{pc}		; (ldr pc, [sp], #4)
   37cd8:	ldr	r3, [r4, #32]
   37cdc:	add	r3, r3, #36	; 0x24
   37ce0:	str	r3, [r4, #32]
   37ce4:	b	37c4c <flatcc_builder_start_vector@@Base+0xd0>
   37ce8:	mvn	r0, #0
   37cec:	b	37cc0 <flatcc_builder_start_vector@@Base+0x144>
   37cf0:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>

00037cf4 <flatcc_builder_start_offset_vector@@Base>:
   37cf4:	ldrd	r2, [r0, #156]	; 0x9c
   37cf8:	strd	r4, [sp, #-16]!
   37cfc:	mov	r4, r0
   37d00:	str	r6, [sp, #8]
   37d04:	str	lr, [sp, #12]
   37d08:	sub	sp, sp, #8
   37d0c:	add	r1, r2, #1
   37d10:	cmp	r1, r3
   37d14:	str	r1, [r0, #156]	; 0x9c
   37d18:	ble	37e30 <flatcc_builder_start_offset_vector@@Base+0x13c>
   37d1c:	ldr	r3, [r0, #176]	; 0xb0
   37d20:	cmp	r3, #0
   37d24:	cmpgt	r1, r3
   37d28:	movgt	r3, #1
   37d2c:	movle	r3, #0
   37d30:	bgt	37e40 <flatcc_builder_start_offset_vector@@Base+0x14c>
   37d34:	add	r2, r2, r2, lsl #3
   37d38:	ldr	r1, [r0, #88]	; 0x58
   37d3c:	lsl	r5, r2, #2
   37d40:	add	r2, r5, #36	; 0x24
   37d44:	cmp	r2, r1
   37d48:	bls	37d6c <flatcc_builder_start_offset_vector@@Base+0x78>
   37d4c:	mov	ip, #4
   37d50:	add	r1, r0, #84	; 0x54
   37d54:	ldr	r0, [r0, #40]	; 0x28
   37d58:	str	ip, [sp]
   37d5c:	ldr	r6, [r4, #48]	; 0x30
   37d60:	blx	r6
   37d64:	cmp	r0, #0
   37d68:	bne	37e48 <flatcc_builder_start_offset_vector@@Base+0x154>
   37d6c:	ldr	r3, [r4, #84]	; 0x54
   37d70:	add	r3, r3, r5
   37d74:	cmp	r3, #0
   37d78:	str	r3, [r4, #32]
   37d7c:	beq	37e40 <flatcc_builder_start_offset_vector@@Base+0x14c>
   37d80:	ldr	r2, [r4, #88]	; 0x58
   37d84:	movw	r0, #36409	; 0x8e39
   37d88:	movt	r0, #14563	; 0x38e3
   37d8c:	ldr	r1, [r4, #176]	; 0xb0
   37d90:	umull	r0, r2, r0, r2
   37d94:	lsr	r2, r2, #3
   37d98:	cmp	r1, #0
   37d9c:	cmpgt	r2, r1
   37da0:	movgt	r2, r1
   37da4:	str	r2, [r4, #160]	; 0xa0
   37da8:	ldr	r2, [r4, #20]
   37dac:	mvn	r5, #3
   37db0:	mov	lr, #0
   37db4:	ldr	r0, [r4, #28]
   37db8:	ldrh	r6, [r4, #130]	; 0x82
   37dbc:	ldr	ip, [r4, #60]	; 0x3c
   37dc0:	ldr	r1, [r4, #64]	; 0x40
   37dc4:	str	r2, [r3, #8]
   37dc8:	add	r2, r2, r0
   37dcc:	add	r2, r2, #7
   37dd0:	strh	r6, [r3, #12]
   37dd4:	mov	r6, #4
   37dd8:	bic	r2, r2, #7
   37ddc:	add	ip, ip, r2
   37de0:	strh	r6, [r4, #130]	; 0x82
   37de4:	sub	r1, r1, r2
   37de8:	str	r0, [r3]
   37dec:	mov	r0, lr
   37df0:	cmp	r1, r5
   37df4:	str	lr, [r4, #20]
   37df8:	movhi	r1, r5
   37dfc:	str	r2, [r4, #28]
   37e00:	mov	r2, #5
   37e04:	strh	r2, [r3, #14]
   37e08:	str	r6, [r3, #16]
   37e0c:	str	lr, [r3, #20]
   37e10:	str	ip, [r4, #16]
   37e14:	str	r1, [r4, #24]
   37e18:	str	r5, [r3, #4]
   37e1c:	add	sp, sp, #8
   37e20:	ldrd	r4, [sp]
   37e24:	ldr	r6, [sp, #8]
   37e28:	add	sp, sp, #12
   37e2c:	pop	{pc}		; (ldr pc, [sp], #4)
   37e30:	ldr	r3, [r0, #32]
   37e34:	add	r3, r3, #36	; 0x24
   37e38:	str	r3, [r0, #32]
   37e3c:	b	37da8 <flatcc_builder_start_offset_vector@@Base+0xb4>
   37e40:	mvn	r0, #0
   37e44:	b	37e1c <flatcc_builder_start_offset_vector@@Base+0x128>
   37e48:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>

00037e4c <flatcc_builder_create_offset_vector@@Base>:
   37e4c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   37e50:	mov	r5, r2
   37e54:	mov	r4, r0
   37e58:	ldr	r3, [r0, #160]	; 0xa0
   37e5c:	strd	r6, [sp, #8]
   37e60:	mov	r6, r1
   37e64:	ldr	r1, [r0, #156]	; 0x9c
   37e68:	strd	r8, [sp, #16]
   37e6c:	str	lr, [sp, #24]
   37e70:	sub	sp, sp, #12
   37e74:	add	r2, r1, #1
   37e78:	cmp	r2, r3
   37e7c:	str	r2, [r0, #156]	; 0x9c
   37e80:	ble	37ff8 <flatcc_builder_create_offset_vector@@Base+0x1ac>
   37e84:	ldr	r3, [r0, #176]	; 0xb0
   37e88:	cmp	r2, r3
   37e8c:	cmpgt	r3, #0
   37e90:	movgt	r3, #1
   37e94:	movle	r3, #0
   37e98:	bgt	37fd8 <flatcc_builder_create_offset_vector@@Base+0x18c>
   37e9c:	add	r1, r1, r1, lsl #3
   37ea0:	ldr	r0, [r0, #88]	; 0x58
   37ea4:	lsl	r7, r1, #2
   37ea8:	add	r2, r7, #36	; 0x24
   37eac:	cmp	r2, r0
   37eb0:	bls	37ed4 <flatcc_builder_create_offset_vector@@Base+0x88>
   37eb4:	mov	ip, #4
   37eb8:	add	r1, r4, #84	; 0x54
   37ebc:	ldr	r0, [r4, #40]	; 0x28
   37ec0:	str	ip, [sp]
   37ec4:	ldr	r8, [r4, #48]	; 0x30
   37ec8:	blx	r8
   37ecc:	cmp	r0, #0
   37ed0:	bne	3809c <flatcc_builder_create_offset_vector@@Base+0x250>
   37ed4:	ldr	r3, [r4, #84]	; 0x54
   37ed8:	add	r3, r3, r7
   37edc:	cmp	r3, #0
   37ee0:	str	r3, [r4, #32]
   37ee4:	beq	37fd8 <flatcc_builder_create_offset_vector@@Base+0x18c>
   37ee8:	ldr	r2, [r4, #88]	; 0x58
   37eec:	movw	r0, #36409	; 0x8e39
   37ef0:	movt	r0, #14563	; 0x38e3
   37ef4:	ldr	r1, [r4, #176]	; 0xb0
   37ef8:	umull	r0, r2, r0, r2
   37efc:	lsr	r2, r2, #3
   37f00:	cmp	r2, r1
   37f04:	cmpgt	r1, #0
   37f08:	movgt	r2, r1
   37f0c:	str	r2, [r4, #160]	; 0xa0
   37f10:	ldr	r2, [r4, #20]
   37f14:	mvn	lr, #3
   37f18:	mov	r0, #4
   37f1c:	ldr	r8, [r4, #28]
   37f20:	ldrh	r7, [r4, #130]	; 0x82
   37f24:	ldr	r1, [r4, #64]	; 0x40
   37f28:	ldr	r9, [r4, #60]	; 0x3c
   37f2c:	str	r2, [r3, #8]
   37f30:	add	r2, r2, r8
   37f34:	add	r2, r2, #7
   37f38:	strh	r7, [r3, #12]
   37f3c:	mov	r7, #0
   37f40:	bic	r2, r2, #7
   37f44:	strh	r0, [r4, #130]	; 0x82
   37f48:	sub	r1, r1, r2
   37f4c:	str	r8, [r3]
   37f50:	cmp	r1, lr
   37f54:	add	r9, r9, r2
   37f58:	str	r7, [r4, #20]
   37f5c:	movls	ip, r1
   37f60:	movhi	ip, lr
   37f64:	str	r2, [r4, #28]
   37f68:	mov	r1, #5
   37f6c:	strh	r1, [r3, #14]
   37f70:	mov	r1, r5
   37f74:	str	r0, [r3, #16]
   37f78:	mov	r0, r4
   37f7c:	str	r7, [r3, #20]
   37f80:	str	r9, [r4, #16]
   37f84:	str	ip, [r4, #24]
   37f88:	str	lr, [r3, #4]
   37f8c:	bl	37248 <flatcc_builder_extend_offset_vector@@Base>
   37f90:	cmp	r0, r7
   37f94:	beq	37fd8 <flatcc_builder_create_offset_vector@@Base+0x18c>
   37f98:	lsl	r2, r5, #2
   37f9c:	mov	r1, r6
   37fa0:	bl	13eb8 <memcpy@plt>
   37fa4:	ldr	r3, [r4, #32]
   37fa8:	ldrh	r2, [r3, #14]
   37fac:	cmp	r2, #5
   37fb0:	bne	38080 <flatcc_builder_create_offset_vector@@Base+0x234>
   37fb4:	ldr	r2, [r3, #20]
   37fb8:	cmn	r2, #-1073741823	; 0xc0000001
   37fbc:	bhi	37fd8 <flatcc_builder_create_offset_vector@@Base+0x18c>
   37fc0:	mov	r3, r7
   37fc4:	mov	r0, r4
   37fc8:	ldr	r1, [r4, #16]
   37fcc:	bl	35ac4 <flatcc_builder_default_alloc@@Base+0x388>
   37fd0:	subs	r5, r0, #0
   37fd4:	bne	38008 <flatcc_builder_create_offset_vector@@Base+0x1bc>
   37fd8:	mov	r5, #0
   37fdc:	mov	r0, r5
   37fe0:	add	sp, sp, #12
   37fe4:	ldrd	r4, [sp]
   37fe8:	ldrd	r6, [sp, #8]
   37fec:	ldrd	r8, [sp, #16]
   37ff0:	add	sp, sp, #24
   37ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   37ff8:	ldr	r3, [r0, #32]
   37ffc:	add	r3, r3, #36	; 0x24
   38000:	str	r3, [r0, #32]
   38004:	b	37f10 <flatcc_builder_create_offset_vector@@Base+0xc4>
   38008:	mov	r1, r7
   3800c:	ldr	r0, [r4, #16]
   38010:	ldr	r2, [r4, #20]
   38014:	bl	13f78 <memset@plt>
   38018:	ldr	r3, [r4, #32]
   3801c:	ldr	r0, [r4, #60]	; 0x3c
   38020:	ldr	r2, [r4, #64]	; 0x40
   38024:	ldr	ip, [r3]
   38028:	ldmib	r3, {r1, lr}
   3802c:	add	r0, r0, ip
   38030:	sub	r2, r2, ip
   38034:	str	r0, [r4, #16]
   38038:	cmp	r2, r1
   3803c:	ldrh	r0, [r4, #128]	; 0x80
   38040:	movcs	r2, r1
   38044:	str	lr, [r4, #20]
   38048:	str	ip, [r4, #28]
   3804c:	ldrh	ip, [r4, #130]	; 0x82
   38050:	str	r2, [r4, #24]
   38054:	ldr	r2, [r4, #156]	; 0x9c
   38058:	str	r1, [r3, #4]
   3805c:	cmp	r0, ip
   38060:	sub	r0, r3, #36	; 0x24
   38064:	strhcc	ip, [r4, #128]	; 0x80
   38068:	ldrh	r1, [r3, #12]
   3806c:	sub	r3, r2, #1
   38070:	str	r0, [r4, #32]
   38074:	strh	r1, [r4, #130]	; 0x82
   38078:	str	r3, [r4, #156]	; 0x9c
   3807c:	b	37fdc <flatcc_builder_create_offset_vector@@Base+0x190>
   38080:	movw	r1, #39296	; 0x9980
   38084:	movt	r1, #5
   38088:	ldr	r3, [pc, #16]	; 380a0 <flatcc_builder_create_offset_vector@@Base+0x254>
   3808c:	movw	r0, #39768	; 0x9b58
   38090:	movt	r0, #5
   38094:	movw	r2, #1480	; 0x5c8
   38098:	bl	14014 <__assert_fail@plt>
   3809c:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>
   380a0:			; <UNDEFINED> instruction: 0x000596bc

000380a4 <flatcc_builder_start_string@@Base>:
   380a4:	ldrd	r2, [r0, #156]	; 0x9c
   380a8:	strd	r4, [sp, #-16]!
   380ac:	mov	r4, r0
   380b0:	str	r6, [sp, #8]
   380b4:	str	lr, [sp, #12]
   380b8:	sub	sp, sp, #8
   380bc:	add	r1, r2, #1
   380c0:	cmp	r1, r3
   380c4:	str	r1, [r0, #156]	; 0x9c
   380c8:	ble	381e0 <flatcc_builder_start_string@@Base+0x13c>
   380cc:	ldr	r3, [r0, #176]	; 0xb0
   380d0:	cmp	r3, #0
   380d4:	cmpgt	r1, r3
   380d8:	movgt	r3, #1
   380dc:	movle	r3, #0
   380e0:	bgt	381f0 <flatcc_builder_start_string@@Base+0x14c>
   380e4:	add	r2, r2, r2, lsl #3
   380e8:	ldr	r1, [r0, #88]	; 0x58
   380ec:	lsl	r5, r2, #2
   380f0:	add	r2, r5, #36	; 0x24
   380f4:	cmp	r2, r1
   380f8:	bls	3811c <flatcc_builder_start_string@@Base+0x78>
   380fc:	mov	ip, #4
   38100:	add	r1, r0, #84	; 0x54
   38104:	ldr	r0, [r0, #40]	; 0x28
   38108:	str	ip, [sp]
   3810c:	ldr	r6, [r4, #48]	; 0x30
   38110:	blx	r6
   38114:	cmp	r0, #0
   38118:	bne	381f8 <flatcc_builder_start_string@@Base+0x154>
   3811c:	ldr	r3, [r4, #84]	; 0x54
   38120:	add	r3, r3, r5
   38124:	cmp	r3, #0
   38128:	str	r3, [r4, #32]
   3812c:	beq	381f0 <flatcc_builder_start_string@@Base+0x14c>
   38130:	ldr	r2, [r4, #88]	; 0x58
   38134:	movw	r0, #36409	; 0x8e39
   38138:	movt	r0, #14563	; 0x38e3
   3813c:	ldr	r1, [r4, #176]	; 0xb0
   38140:	umull	r0, r2, r0, r2
   38144:	lsr	r2, r2, #3
   38148:	cmp	r1, #0
   3814c:	cmpgt	r2, r1
   38150:	movgt	r2, r1
   38154:	str	r2, [r4, #160]	; 0xa0
   38158:	ldr	r2, [r4, #20]
   3815c:	mvn	r5, #3
   38160:	mov	lr, #0
   38164:	ldr	r0, [r4, #28]
   38168:	ldrh	r6, [r4, #130]	; 0x82
   3816c:	ldr	ip, [r4, #60]	; 0x3c
   38170:	ldr	r1, [r4, #64]	; 0x40
   38174:	str	r2, [r3, #8]
   38178:	add	r2, r2, r0
   3817c:	add	r2, r2, #7
   38180:	strh	r6, [r3, #12]
   38184:	mov	r6, #1
   38188:	bic	r2, r2, #7
   3818c:	add	ip, ip, r2
   38190:	strh	r6, [r4, #130]	; 0x82
   38194:	sub	r1, r1, r2
   38198:	str	r0, [r3]
   3819c:	mov	r0, lr
   381a0:	cmp	r1, r5
   381a4:	str	lr, [r4, #20]
   381a8:	movhi	r1, r5
   381ac:	str	r2, [r4, #28]
   381b0:	mov	r2, #6
   381b4:	strh	r2, [r3, #14]
   381b8:	str	r6, [r3, #16]
   381bc:	str	lr, [r3, #20]
   381c0:	str	ip, [r4, #16]
   381c4:	str	r1, [r4, #24]
   381c8:	str	r5, [r3, #4]
   381cc:	add	sp, sp, #8
   381d0:	ldrd	r4, [sp]
   381d4:	ldr	r6, [sp, #8]
   381d8:	add	sp, sp, #12
   381dc:	pop	{pc}		; (ldr pc, [sp], #4)
   381e0:	ldr	r3, [r0, #32]
   381e4:	add	r3, r3, #36	; 0x24
   381e8:	str	r3, [r0, #32]
   381ec:	b	38158 <flatcc_builder_start_string@@Base+0xb4>
   381f0:	mvn	r0, #0
   381f4:	b	381cc <flatcc_builder_start_string@@Base+0x128>
   381f8:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>

000381fc <flatcc_builder_reserve_table@@Base>:
   381fc:	cmp	r1, #0
   38200:	strd	r4, [sp, #-20]!	; 0xffffffec
   38204:	strd	r6, [sp, #8]
   38208:	str	lr, [sp, #16]
   3820c:	sub	sp, sp, #12
   38210:	blt	382f4 <flatcc_builder_reserve_table@@Base+0xf8>
   38214:	ldr	r2, [r0, #32]
   38218:	add	r1, r1, #2
   3821c:	mov	r4, r0
   38220:	lsl	r5, r1, #1
   38224:	ldr	r1, [r0, #56]	; 0x38
   38228:	ldrh	r6, [r2, #28]
   3822c:	ldr	r3, [r2, #16]
   38230:	add	r6, r3, r6, lsl #1
   38234:	add	r2, r6, r5
   38238:	cmp	r2, r1
   3823c:	bhi	382a4 <flatcc_builder_reserve_table@@Base+0xa8>
   38240:	ldr	r3, [r4, #52]	; 0x34
   38244:	adds	r3, r3, r6
   38248:	mvneq	r0, #0
   3824c:	streq	r3, [r4, #4]
   38250:	beq	38290 <flatcc_builder_reserve_table@@Base+0x94>
   38254:	ldr	r2, [r4, #32]
   38258:	add	r3, r3, #4
   3825c:	ldr	r1, [r4, #80]	; 0x50
   38260:	ldr	r6, [r2, #20]
   38264:	str	r3, [r4, #4]
   38268:	add	r2, r5, r6
   3826c:	sub	r2, r2, #3
   38270:	cmp	r2, r1
   38274:	bhi	382cc <flatcc_builder_reserve_table@@Base+0xd0>
   38278:	ldr	r3, [r4, #76]	; 0x4c
   3827c:	add	r3, r3, r6
   38280:	clz	r0, r3
   38284:	lsr	r0, r0, #5
   38288:	str	r3, [r4]
   3828c:	rsb	r0, r0, #0
   38290:	add	sp, sp, #12
   38294:	ldrd	r4, [sp]
   38298:	ldrd	r6, [sp, #8]
   3829c:	add	sp, sp, #16
   382a0:	pop	{pc}		; (ldr pc, [sp], #4)
   382a4:	mov	ip, #0
   382a8:	add	r1, r0, #52	; 0x34
   382ac:	ldr	r0, [r0, #40]	; 0x28
   382b0:	mov	r3, #1
   382b4:	str	ip, [sp]
   382b8:	ldr	r7, [r4, #48]	; 0x30
   382bc:	blx	r7
   382c0:	cmp	r0, #0
   382c4:	beq	38240 <flatcc_builder_reserve_table@@Base+0x44>
   382c8:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>
   382cc:	mov	ip, #3
   382d0:	mov	r3, #0
   382d4:	ldr	r0, [r4, #40]	; 0x28
   382d8:	add	r1, r4, #76	; 0x4c
   382dc:	str	ip, [sp]
   382e0:	ldr	r5, [r4, #48]	; 0x30
   382e4:	blx	r5
   382e8:	cmp	r0, #0
   382ec:	beq	38278 <flatcc_builder_reserve_table@@Base+0x7c>
   382f0:	b	382c8 <flatcc_builder_reserve_table@@Base+0xcc>
   382f4:	movw	r1, #39296	; 0x9980
   382f8:	movt	r1, #5
   382fc:	ldr	r3, [pc, #12]	; 38310 <flatcc_builder_reserve_table@@Base+0x114>
   38300:	movw	r0, #39952	; 0x9c10
   38304:	movt	r0, #5
   38308:	movw	r2, #1065	; 0x429
   3830c:	bl	14014 <__assert_fail@plt>
   38310:	andeq	r9, r5, r0, ror #13

00038314 <flatcc_builder_start_table@@Base>:
   38314:	strd	r4, [sp, #-32]!	; 0xffffffe0
   38318:	mov	r5, r1
   3831c:	mov	r1, #4
   38320:	strd	r6, [sp, #8]
   38324:	mov	r4, r0
   38328:	strd	r8, [sp, #16]
   3832c:	str	sl, [sp, #24]
   38330:	str	lr, [sp, #28]
   38334:	sub	sp, sp, #8
   38338:	bl	359a0 <flatcc_builder_default_alloc@@Base+0x264>
   3833c:	subs	r7, r0, #0
   38340:	bne	38488 <flatcc_builder_start_table@@Base+0x174>
   38344:	ldm	r4, {r0, r2}
   38348:	add	r5, r5, #2
   3834c:	movw	ip, #15186	; 0x3b52
   38350:	movt	ip, #12137	; 0x2f69
   38354:	lsl	r5, r5, #1
   38358:	mov	r8, #3
   3835c:	ldrh	lr, [r4, #8]
   38360:	ldr	r1, [r4, #52]	; 0x34
   38364:	ldr	sl, [r4, #76]	; 0x4c
   38368:	ldr	r3, [r4, #32]
   3836c:	sub	r2, r2, r1
   38370:	ldr	r9, [r4, #56]	; 0x38
   38374:	add	r6, r2, lr, lsl #1
   38378:	sub	r0, r0, sl
   3837c:	ldr	sl, [r4, #12]
   38380:	str	r2, [r3, #16]
   38384:	add	r2, r6, r5
   38388:	str	r0, [r3, #20]
   3838c:	cmp	r2, r9
   38390:	str	sl, [r3, #24]
   38394:	strh	lr, [r3, #28]
   38398:	strh	r7, [r4, #8]
   3839c:	str	ip, [r4, #12]
   383a0:	strh	r8, [r3, #14]
   383a4:	bls	383cc <flatcc_builder_start_table@@Base+0xb8>
   383a8:	mov	r3, #1
   383ac:	add	r1, r4, #52	; 0x34
   383b0:	str	r7, [sp]
   383b4:	ldr	r0, [r4, #40]	; 0x28
   383b8:	ldr	r8, [r4, #48]	; 0x30
   383bc:	blx	r8
   383c0:	cmp	r0, #0
   383c4:	bne	38484 <flatcc_builder_start_table@@Base+0x170>
   383c8:	ldr	r1, [r4, #52]	; 0x34
   383cc:	adds	r6, r6, r1
   383d0:	streq	r6, [r4, #4]
   383d4:	beq	38488 <flatcc_builder_start_table@@Base+0x174>
   383d8:	ldr	r1, [r4, #32]
   383dc:	sub	r2, r5, #3
   383e0:	add	r6, r6, #4
   383e4:	ldr	r3, [r4, #80]	; 0x50
   383e8:	ldr	r5, [r1, #20]
   383ec:	str	r6, [r4, #4]
   383f0:	add	r2, r2, r5
   383f4:	cmp	r2, r3
   383f8:	bhi	38460 <flatcc_builder_start_table@@Base+0x14c>
   383fc:	ldr	r3, [r4, #76]	; 0x4c
   38400:	add	r3, r3, r5
   38404:	cmp	r3, #0
   38408:	str	r3, [r4]
   3840c:	beq	38488 <flatcc_builder_start_table@@Base+0x174>
   38410:	ldr	r0, [r4, #28]
   38414:	movw	r2, #65532	; 0xfffc
   38418:	ldr	ip, [r4, #32]
   3841c:	ldr	r3, [r4, #64]	; 0x40
   38420:	ldr	r1, [r4, #60]	; 0x3c
   38424:	sub	r3, r3, r0
   38428:	cmp	r3, r2
   3842c:	add	r1, r1, r0
   38430:	movcs	r3, r2
   38434:	str	r1, [r4, #16]
   38438:	str	r3, [r4, #24]
   3843c:	str	r2, [ip, #4]
   38440:	mov	r0, r7
   38444:	add	sp, sp, #8
   38448:	ldrd	r4, [sp]
   3844c:	ldrd	r6, [sp, #8]
   38450:	ldrd	r8, [sp, #16]
   38454:	ldr	sl, [sp, #24]
   38458:	add	sp, sp, #28
   3845c:	pop	{pc}		; (ldr pc, [sp], #4)
   38460:	mov	ip, #3
   38464:	mov	r3, #0
   38468:	ldr	r0, [r4, #40]	; 0x28
   3846c:	add	r1, r4, #76	; 0x4c
   38470:	str	ip, [sp]
   38474:	ldr	r6, [r4, #48]	; 0x30
   38478:	blx	r6
   3847c:	cmp	r0, #0
   38480:	beq	383fc <flatcc_builder_start_table@@Base+0xe8>
   38484:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>
   38488:	mvn	r7, #0
   3848c:	b	38440 <flatcc_builder_start_table@@Base+0x12c>

00038490 <flatcc_builder_create_vtable@@Base>:
   38490:	strd	r4, [sp, #-16]!
   38494:	mov	r5, r0
   38498:	mov	r3, #0
   3849c:	ldr	ip, [r5, #152]	; 0x98
   384a0:	subs	r0, r2, #0
   384a4:	str	r6, [sp, #8]
   384a8:	str	lr, [sp, #12]
   384ac:	sub	sp, sp, #80	; 0x50
   384b0:	str	r3, [sp, #8]
   384b4:	str	r3, [sp, #12]
   384b8:	beq	38534 <flatcc_builder_create_vtable@@Base+0xa4>
   384bc:	mov	r2, #1
   384c0:	cmp	ip, r3
   384c4:	str	r0, [sp, #8]
   384c8:	str	r2, [sp, #12]
   384cc:	str	r1, [sp, #16]
   384d0:	str	r0, [sp, #20]
   384d4:	beq	38564 <flatcc_builder_create_vtable@@Base+0xd4>
   384d8:	ldr	r3, [r5, #136]	; 0x88
   384dc:	sub	r4, r3, r0
   384e0:	cmp	r3, r4
   384e4:	ble	38548 <flatcc_builder_create_vtable@@Base+0xb8>
   384e8:	mov	r3, r4
   384ec:	mov	r2, #1
   384f0:	str	r0, [sp]
   384f4:	add	r1, sp, #16
   384f8:	ldr	r0, [r5, #36]	; 0x24
   384fc:	ldr	r6, [r5, #44]	; 0x2c
   38500:	blx	r6
   38504:	cmp	r0, #0
   38508:	bne	385ac <flatcc_builder_create_vtable@@Base+0x11c>
   3850c:	cmp	r4, #0
   38510:	str	r4, [r5, #136]	; 0x88
   38514:	beq	3851c <flatcc_builder_create_vtable@@Base+0x8c>
   38518:	add	r4, r4, #1
   3851c:	mov	r0, r4
   38520:	add	sp, sp, #80	; 0x50
   38524:	ldrd	r4, [sp]
   38528:	ldr	r6, [sp, #8]
   3852c:	add	sp, sp, #12
   38530:	pop	{pc}		; (ldr pc, [sp], #4)
   38534:	cmp	ip, #0
   38538:	bne	38548 <flatcc_builder_create_vtable@@Base+0xb8>
   3853c:	ldr	r2, [r5, #180]	; 0xb4
   38540:	cmp	r2, #0
   38544:	beq	385a4 <flatcc_builder_create_vtable@@Base+0x114>
   38548:	movw	r1, #39296	; 0x9980
   3854c:	movt	r1, #5
   38550:	ldr	r3, [pc, #88]	; 385b0 <flatcc_builder_create_vtable@@Base+0x120>
   38554:	movw	r0, #35672	; 0x8b58
   38558:	movt	r0, #4
   3855c:	movw	r2, #647	; 0x287
   38560:	bl	14014 <__assert_fail@plt>
   38564:	ldr	r3, [r5, #180]	; 0xb4
   38568:	cmp	r3, #0
   3856c:	bne	384d8 <flatcc_builder_create_vtable@@Base+0x48>
   38570:	ldr	r4, [r5, #140]	; 0x8c
   38574:	mov	ip, r0
   38578:	add	r0, r4, r0
   3857c:	str	r0, [r5, #140]	; 0x8c
   38580:	mov	r3, r4
   38584:	add	r1, sp, #16
   38588:	str	ip, [sp]
   3858c:	ldr	r0, [r5, #36]	; 0x24
   38590:	ldr	r5, [r5, #44]	; 0x2c
   38594:	blx	r5
   38598:	cmp	r0, #0
   3859c:	beq	38518 <flatcc_builder_create_vtable@@Base+0x88>
   385a0:	bl	35888 <flatcc_builder_default_alloc@@Base+0x14c>
   385a4:	ldr	r4, [r5, #140]	; 0x8c
   385a8:	b	38580 <flatcc_builder_create_vtable@@Base+0xf0>
   385ac:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   385b0:	andeq	r9, r5, ip, asr r2

000385b4 <flatcc_builder_create_cached_vtable@@Base>:
   385b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   385b8:	strd	r6, [sp, #8]
   385bc:	mov	r6, r0
   385c0:	strd	r8, [sp, #16]
   385c4:	mov	r9, r2
   385c8:	mov	r8, r3
   385cc:	strd	sl, [sp, #24]
   385d0:	str	lr, [sp, #32]
   385d4:	sub	sp, sp, #28
   385d8:	str	r1, [sp, #8]
   385dc:	ldr	r1, [r0, #116]	; 0x74
   385e0:	cmp	r1, #0
   385e4:	rsbne	r1, r1, #32
   385e8:	beq	38770 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   385ec:	ldr	sl, [r6, #92]	; 0x5c
   385f0:	lsr	r8, r8, r1
   385f4:	adds	fp, sl, r8, lsl #2
   385f8:	str	fp, [sp, #12]
   385fc:	beq	3880c <flatcc_builder_create_cached_vtable@@Base+0x258>
   38600:	ldr	r5, [sl, r8, lsl #2]
   38604:	cmp	r5, #0
   38608:	beq	38840 <flatcc_builder_create_cached_vtable@@Base+0x28c>
   3860c:	mov	r3, #0
   38610:	str	r8, [sp, #16]
   38614:	mov	r8, fp
   38618:	mov	fp, r6
   3861c:	ldr	r7, [r6, #68]	; 0x44
   38620:	str	r3, [sp, #20]
   38624:	ldr	r3, [r6, #100]	; 0x64
   38628:	mov	r6, r3
   3862c:	add	r4, r6, r5
   38630:	ldr	r1, [r4, #8]
   38634:	ldrh	r2, [r7, r1]
   38638:	add	r1, r7, r1
   3863c:	cmp	r2, r9
   38640:	bne	3871c <flatcc_builder_create_cached_vtable@@Base+0x168>
   38644:	mov	r2, r9
   38648:	ldr	r0, [sp, #8]
   3864c:	bl	13ed0 <memcmp@plt>
   38650:	cmp	r0, #0
   38654:	bne	3871c <flatcc_builder_create_cached_vtable@@Base+0x168>
   38658:	ldr	r1, [r4, #4]
   3865c:	ldr	r2, [fp, #152]	; 0x98
   38660:	cmp	r1, r2
   38664:	beq	38728 <flatcc_builder_create_cached_vtable@@Base+0x174>
   38668:	ldr	r5, [r4, #12]
   3866c:	add	r8, r4, #12
   38670:	str	r4, [sp, #20]
   38674:	cmp	r5, #0
   38678:	bne	3862c <flatcc_builder_create_cached_vtable@@Base+0x78>
   3867c:	ldr	r8, [sp, #16]
   38680:	mov	r6, fp
   38684:	ldr	r3, [r6, #104]	; 0x68
   38688:	ldr	r4, [r6, #124]	; 0x7c
   3868c:	add	r2, r4, #16
   38690:	cmp	r2, r3
   38694:	bls	386bc <flatcc_builder_create_cached_vtable@@Base+0x108>
   38698:	mov	ip, #6
   3869c:	mov	r3, #0
   386a0:	ldr	r0, [r6, #40]	; 0x28
   386a4:	add	r1, r6, #100	; 0x64
   386a8:	str	ip, [sp]
   386ac:	ldr	r5, [r6, #48]	; 0x30
   386b0:	blx	r5
   386b4:	cmp	r0, #0
   386b8:	bne	3883c <flatcc_builder_create_cached_vtable@@Base+0x288>
   386bc:	ldr	r5, [r6, #100]	; 0x64
   386c0:	adds	r7, r5, r4
   386c4:	beq	3880c <flatcc_builder_create_cached_vtable@@Base+0x258>
   386c8:	ldr	r3, [r6, #124]	; 0x7c
   386cc:	mov	r2, r9
   386d0:	ldr	r0, [r6, #152]	; 0x98
   386d4:	ldr	r1, [sp, #8]
   386d8:	add	ip, r3, #16
   386dc:	str	ip, [r6, #124]	; 0x7c
   386e0:	str	r0, [r7, #4]
   386e4:	mov	r0, r6
   386e8:	ldr	ip, [sl, r8, lsl #2]
   386ec:	str	ip, [r7, #12]
   386f0:	str	r3, [sl, r8, lsl #2]
   386f4:	bl	38490 <flatcc_builder_create_vtable@@Base>
   386f8:	cmp	r0, #0
   386fc:	str	r0, [r5, r4]
   38700:	beq	3880c <flatcc_builder_create_cached_vtable@@Base+0x258>
   38704:	ldr	r3, [sp, #20]
   38708:	cmp	r3, #0
   3870c:	beq	38850 <flatcc_builder_create_cached_vtable@@Base+0x29c>
   38710:	ldr	r3, [r3, #8]
   38714:	str	r3, [r7, #8]
   38718:	b	38754 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3871c:	add	r8, r4, #12
   38720:	ldr	r5, [r4, #12]
   38724:	b	38674 <flatcc_builder_create_cached_vtable@@Base+0xc0>
   38728:	ldr	r3, [sp, #12]
   3872c:	mov	fp, r8
   38730:	ldr	r8, [sp, #16]
   38734:	cmp	r3, fp
   38738:	beq	38750 <flatcc_builder_create_cached_vtable@@Base+0x19c>
   3873c:	ldr	r3, [r4, #12]
   38740:	str	r3, [fp]
   38744:	ldr	r3, [sl, r8, lsl #2]
   38748:	str	r3, [r4, #12]
   3874c:	str	r5, [sl, r8, lsl #2]
   38750:	ldr	r0, [r4]
   38754:	add	sp, sp, #28
   38758:	ldrd	r4, [sp]
   3875c:	ldrd	r6, [sp, #8]
   38760:	ldrd	r8, [sp, #16]
   38764:	ldrd	sl, [sp, #24]
   38768:	add	sp, sp, #32
   3876c:	pop	{pc}		; (ldr pc, [sp], #4)
   38770:	ldr	r4, [r0, #124]	; 0x7c
   38774:	add	r5, r0, #92	; 0x5c
   38778:	cmp	r4, #0
   3877c:	bne	38900 <flatcc_builder_create_cached_vtable@@Base+0x34c>
   38780:	ldr	r3, [r0, #104]	; 0x68
   38784:	cmp	r3, #15
   38788:	bls	38814 <flatcc_builder_create_cached_vtable@@Base+0x260>
   3878c:	ldr	r3, [r6, #100]	; 0x64
   38790:	cmp	r3, #0
   38794:	beq	3880c <flatcc_builder_create_cached_vtable@@Base+0x258>
   38798:	mov	ip, #16
   3879c:	mov	r2, #5
   387a0:	ldr	r0, [r6, #40]	; 0x28
   387a4:	mov	r1, r5
   387a8:	mov	r3, #1
   387ac:	str	r2, [sp]
   387b0:	mov	r2, #256	; 0x100
   387b4:	str	ip, [r6, #124]	; 0x7c
   387b8:	ldr	r5, [r6, #48]	; 0x30
   387bc:	blx	r5
   387c0:	cmp	r0, #0
   387c4:	bne	3880c <flatcc_builder_create_cached_vtable@@Base+0x258>
   387c8:	mov	r3, #256	; 0x100
   387cc:	ldr	r1, [r6, #96]	; 0x60
   387d0:	b	387d8 <flatcc_builder_create_cached_vtable@@Base+0x224>
   387d4:	mov	r3, r2
   387d8:	lsl	r2, r3, #1
   387dc:	cmp	r2, r1
   387e0:	bls	387d4 <flatcc_builder_create_cached_vtable@@Base+0x220>
   387e4:	lsr	r3, r3, #2
   387e8:	cmp	r3, #1
   387ec:	bls	38848 <flatcc_builder_create_cached_vtable@@Base+0x294>
   387f0:	mov	r2, #1
   387f4:	add	r4, r4, #1
   387f8:	cmp	r3, r2, lsl r4
   387fc:	bhi	387f4 <flatcc_builder_create_cached_vtable@@Base+0x240>
   38800:	rsb	r1, r4, #32
   38804:	str	r4, [r6, #116]	; 0x74
   38808:	b	385ec <flatcc_builder_create_cached_vtable@@Base+0x38>
   3880c:	mov	r0, #0
   38810:	b	38754 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   38814:	mov	ip, #6
   38818:	add	r1, r0, #100	; 0x64
   3881c:	ldr	r0, [r0, #40]	; 0x28
   38820:	mov	r3, r4
   38824:	mov	r2, #16
   38828:	str	ip, [sp]
   3882c:	ldr	r7, [r6, #48]	; 0x30
   38830:	blx	r7
   38834:	cmp	r0, #0
   38838:	beq	3878c <flatcc_builder_create_cached_vtable@@Base+0x1d8>
   3883c:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>
   38840:	str	r5, [sp, #20]
   38844:	b	38684 <flatcc_builder_create_cached_vtable@@Base+0xd0>
   38848:	mov	r1, #32
   3884c:	b	38804 <flatcc_builder_create_cached_vtable@@Base+0x250>
   38850:	ldr	r8, [r6, #120]	; 0x78
   38854:	ldr	r3, [r6, #172]	; 0xac
   38858:	add	r2, r9, r8
   3885c:	cmp	r3, #0
   38860:	beq	388a0 <flatcc_builder_create_cached_vtable@@Base+0x2ec>
   38864:	cmp	r3, r2
   38868:	bcs	388a0 <flatcc_builder_create_cached_vtable@@Base+0x2ec>
   3886c:	ldr	r3, [r6, #116]	; 0x74
   38870:	cmp	r3, #0
   38874:	beq	38754 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   38878:	ldr	r7, [sp, #20]
   3887c:	ldr	r0, [r6, #92]	; 0x5c
   38880:	ldr	r2, [r6, #96]	; 0x60
   38884:	mov	r1, r7
   38888:	bl	13f78 <memset@plt>
   3888c:	mov	r3, #16
   38890:	mov	r2, r7
   38894:	ldr	r0, [r5, r4]
   38898:	strd	r2, [r6, #120]	; 0x78
   3889c:	b	38754 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   388a0:	ldr	r3, [r6, #72]	; 0x48
   388a4:	cmp	r3, r2
   388a8:	bcs	388d0 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   388ac:	mov	ip, #2
   388b0:	mov	r3, #0
   388b4:	ldr	r0, [r6, #40]	; 0x28
   388b8:	add	r1, r6, #68	; 0x44
   388bc:	str	ip, [sp]
   388c0:	ldr	sl, [r6, #48]	; 0x30
   388c4:	blx	sl
   388c8:	cmp	r0, #0
   388cc:	bne	3883c <flatcc_builder_create_cached_vtable@@Base+0x288>
   388d0:	ldr	r3, [r6, #68]	; 0x44
   388d4:	adds	r0, r3, r8
   388d8:	beq	3891c <flatcc_builder_create_cached_vtable@@Base+0x368>
   388dc:	ldr	r3, [r6, #120]	; 0x78
   388e0:	mov	r2, r9
   388e4:	ldr	r1, [sp, #8]
   388e8:	add	r9, r3, r9
   388ec:	str	r3, [r7, #8]
   388f0:	str	r9, [r6, #120]	; 0x78
   388f4:	bl	13eb8 <memcpy@plt>
   388f8:	ldr	r0, [r5, r4]
   388fc:	b	38754 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   38900:	movw	r1, #39296	; 0x9980
   38904:	movt	r1, #5
   38908:	ldr	r3, [pc, #20]	; 38924 <flatcc_builder_create_cached_vtable@@Base+0x370>
   3890c:	movw	r0, #39964	; 0x9c1c
   38910:	movt	r0, #5
   38914:	movw	r2, #342	; 0x156
   38918:	bl	14014 <__assert_fail@plt>
   3891c:	mvn	r0, #0
   38920:	b	38754 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   38924:	andeq	r9, r5, r0, lsl #14

00038928 <flatcc_builder_create_table@@Base>:
   38928:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3892c:	mov	r5, r0
   38930:	strd	r6, [sp, #8]
   38934:	str	r8, [sp, #16]
   38938:	str	lr, [sp, #20]
   3893c:	sub	sp, sp, #88	; 0x58
   38940:	ldr	r6, [sp, #116]	; 0x74
   38944:	ldr	r0, [sp, #120]	; 0x78
   38948:	cmp	r6, #0
   3894c:	blt	38ab4 <flatcc_builder_create_table@@Base+0x18c>
   38950:	ands	r7, r0, #1
   38954:	beq	38a98 <flatcc_builder_create_table@@Base+0x170>
   38958:	ldrh	ip, [r5, #128]	; 0x80
   3895c:	cmp	r3, #4
   38960:	sub	r0, r0, #1
   38964:	movcc	r3, #4
   38968:	cmp	ip, r3
   3896c:	ldr	ip, [r5, #136]	; 0x88
   38970:	strhcc	r3, [r5, #128]	; 0x80
   38974:	sub	r3, r3, #1
   38978:	cmp	r6, #0
   3897c:	sub	r4, ip, r2
   38980:	mov	r8, r4
   38984:	sub	r4, r4, #4
   38988:	and	r8, r8, r3
   3898c:	sub	r0, r4, r0
   38990:	sub	r0, r0, r8
   38994:	str	r0, [sp, #12]
   38998:	beq	389cc <flatcc_builder_create_table@@Base+0xa4>
   3899c:	ldr	ip, [sp, #112]	; 0x70
   389a0:	sub	r4, r8, r4
   389a4:	sub	r4, r4, #4
   389a8:	add	r6, ip, r6, lsl #1
   389ac:	ldrh	r3, [ip], #2
   389b0:	ldr	r0, [r1, r3]
   389b4:	sub	lr, r4, r3
   389b8:	cmp	r6, ip
   389bc:	add	r0, r0, lr
   389c0:	str	r0, [r1, r3]
   389c4:	bne	389ac <flatcc_builder_create_table@@Base+0x84>
   389c8:	ldr	ip, [r5, #136]	; 0x88
   389cc:	mov	r0, #4
   389d0:	add	r3, sp, #12
   389d4:	mov	lr, #1
   389d8:	cmp	r2, #0
   389dc:	moveq	r2, #2
   389e0:	str	r0, [sp, #16]
   389e4:	str	lr, [sp, #20]
   389e8:	str	r3, [sp, #24]
   389ec:	str	r0, [sp, #28]
   389f0:	beq	38a14 <flatcc_builder_create_table@@Base+0xec>
   389f4:	mov	r3, #2
   389f8:	add	r0, r2, r0
   389fc:	mov	r7, r3
   38a00:	str	r0, [sp, #16]
   38a04:	str	r2, [sp, #36]	; 0x24
   38a08:	mov	r2, #3
   38a0c:	str	r3, [sp, #20]
   38a10:	str	r1, [sp, #32]
   38a14:	cmp	r8, #0
   38a18:	bne	38a6c <flatcc_builder_create_table@@Base+0x144>
   38a1c:	sub	r4, ip, r0
   38a20:	cmp	r4, ip
   38a24:	bge	38ad4 <flatcc_builder_create_table@@Base+0x1ac>
   38a28:	mov	r2, r7
   38a2c:	mov	r3, r4
   38a30:	str	r0, [sp]
   38a34:	add	r1, sp, #24
   38a38:	ldr	r0, [r5, #36]	; 0x24
   38a3c:	ldr	r6, [r5, #44]	; 0x2c
   38a40:	blx	r6
   38a44:	cmp	r0, #0
   38a48:	bne	38ad0 <flatcc_builder_create_table@@Base+0x1a8>
   38a4c:	mov	r0, r4
   38a50:	str	r4, [r5, #136]	; 0x88
   38a54:	add	sp, sp, #88	; 0x58
   38a58:	ldrd	r4, [sp]
   38a5c:	ldrd	r6, [sp, #8]
   38a60:	ldr	r8, [sp, #16]
   38a64:	add	sp, sp, #20
   38a68:	pop	{pc}		; (ldr pc, [sp], #4)
   38a6c:	ldr	r1, [pc, #124]	; 38af0 <flatcc_builder_create_table@@Base+0x1c8>
   38a70:	add	r7, r7, #1
   38a74:	add	r3, sp, #88	; 0x58
   38a78:	add	r3, r3, r7, lsl #3
   38a7c:	add	r0, r0, r8
   38a80:	mov	r7, r2
   38a84:	str	r0, [sp, #16]
   38a88:	str	r2, [sp, #20]
   38a8c:	str	r1, [r3, #-72]	; 0xffffffb8
   38a90:	str	r8, [r3, #-68]	; 0xffffffbc
   38a94:	b	38a1c <flatcc_builder_create_table@@Base+0xf4>
   38a98:	movw	r1, #39296	; 0x9980
   38a9c:	movt	r1, #5
   38aa0:	ldr	r3, [pc, #76]	; 38af4 <flatcc_builder_create_table@@Base+0x1cc>
   38aa4:	movw	r0, #40000	; 0x9c40
   38aa8:	movt	r0, #5
   38aac:	movw	r2, #1243	; 0x4db
   38ab0:	bl	14014 <__assert_fail@plt>
   38ab4:	movw	r1, #39296	; 0x9980
   38ab8:	movt	r1, #5
   38abc:	ldr	r3, [pc, #48]	; 38af4 <flatcc_builder_create_table@@Base+0x1cc>
   38ac0:	movw	r0, #39980	; 0x9c2c
   38ac4:	movt	r0, #5
   38ac8:	movw	r2, #1237	; 0x4d5
   38acc:	bl	14014 <__assert_fail@plt>
   38ad0:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   38ad4:	movw	r1, #39296	; 0x9980
   38ad8:	movt	r1, #5
   38adc:	ldr	r3, [pc, #20]	; 38af8 <flatcc_builder_create_table@@Base+0x1d0>
   38ae0:	movw	r0, #35672	; 0x8b58
   38ae4:	movt	r0, #4
   38ae8:	movw	r2, #647	; 0x287
   38aec:	bl	14014 <__assert_fail@plt>
   38af0:	ldrdeq	r9, [r5], -r8
   38af4:	andeq	r9, r5, ip, lsl #14
   38af8:	andeq	r9, r5, ip, asr r2

00038afc <flatcc_builder_check_required_field@@Base>:
   38afc:	ldr	r3, [r0, #32]
   38b00:	ldrh	r3, [r3, #14]
   38b04:	cmp	r3, #3
   38b08:	bne	38b38 <flatcc_builder_check_required_field@@Base+0x3c>
   38b0c:	ldrh	r3, [r0, #8]
   38b10:	cmp	r3, r1
   38b14:	bls	38b30 <flatcc_builder_check_required_field@@Base+0x34>
   38b18:	ldr	r3, [r0, #4]
   38b1c:	lsl	r1, r1, #1
   38b20:	ldrh	r0, [r3, r1]
   38b24:	adds	r0, r0, #0
   38b28:	movne	r0, #1
   38b2c:	bx	lr
   38b30:	mov	r0, #0
   38b34:	bx	lr
   38b38:	movw	r1, #39296	; 0x9980
   38b3c:	movt	r1, #5
   38b40:	ldr	r3, [pc, #20]	; 38b5c <flatcc_builder_check_required_field@@Base+0x60>
   38b44:	movw	r0, #40012	; 0x9c4c
   38b48:	movt	r0, #5
   38b4c:	str	r4, [sp, #-8]!
   38b50:	movw	r2, #1272	; 0x4f8
   38b54:	str	lr, [sp, #4]
   38b58:	bl	14014 <__assert_fail@plt>
   38b5c:	andeq	r9, r5, r8, lsr #14

00038b60 <flatcc_builder_check_union_field@@Base>:
   38b60:	ldr	r3, [r0, #32]
   38b64:	ldrh	r3, [r3, #14]
   38b68:	cmp	r3, #3
   38b6c:	bne	38bd0 <flatcc_builder_check_union_field@@Base+0x70>
   38b70:	cmp	r1, #0
   38b74:	beq	38bbc <flatcc_builder_check_union_field@@Base+0x5c>
   38b78:	ldrh	r3, [r0, #8]
   38b7c:	cmp	r3, r1
   38b80:	bls	38bbc <flatcc_builder_check_union_field@@Base+0x5c>
   38b84:	ldr	r3, [r0, #4]
   38b88:	sub	r1, r1, #-2147483647	; 0x80000001
   38b8c:	lsl	r1, r1, #1
   38b90:	ldrh	r2, [r3, r1]!
   38b94:	cmp	r2, #0
   38b98:	ldrh	r1, [r3, #2]
   38b9c:	beq	38bb0 <flatcc_builder_check_union_field@@Base+0x50>
   38ba0:	ldr	r3, [r0, #16]
   38ba4:	ldrb	r3, [r3, r2]
   38ba8:	cmp	r3, #0
   38bac:	bne	38bc4 <flatcc_builder_check_union_field@@Base+0x64>
   38bb0:	clz	r0, r1
   38bb4:	lsr	r0, r0, #5
   38bb8:	bx	lr
   38bbc:	mov	r0, #0
   38bc0:	bx	lr
   38bc4:	adds	r0, r1, #0
   38bc8:	movne	r0, #1
   38bcc:	bx	lr
   38bd0:	movw	r1, #39296	; 0x9980
   38bd4:	movt	r1, #5
   38bd8:	ldr	r3, [pc, #20]	; 38bf4 <flatcc_builder_check_union_field@@Base+0x94>
   38bdc:	movw	r0, #40012	; 0x9c4c
   38be0:	movt	r0, #5
   38be4:	str	r4, [sp, #-8]!
   38be8:	movw	r2, #1279	; 0x4ff
   38bec:	str	lr, [sp, #4]
   38bf0:	bl	14014 <__assert_fail@plt>
   38bf4:	andeq	r9, r5, ip, asr #14

00038bf8 <flatcc_builder_check_required@@Base>:
   38bf8:	ldr	r3, [r0, #32]
   38bfc:	ldrh	r3, [r3, #14]
   38c00:	cmp	r3, #3
   38c04:	bne	38c6c <flatcc_builder_check_required@@Base+0x74>
   38c08:	ldrh	r3, [r0, #8]
   38c0c:	cmp	r3, r2
   38c10:	blt	38c64 <flatcc_builder_check_required@@Base+0x6c>
   38c14:	cmp	r2, #0
   38c18:	ble	38c5c <flatcc_builder_check_required@@Base+0x64>
   38c1c:	ldrh	r3, [r1]
   38c20:	ldr	ip, [r0, #4]
   38c24:	lsl	r3, r3, #1
   38c28:	ldrh	r0, [ip, r3]
   38c2c:	cmp	r0, #0
   38c30:	bxeq	lr
   38c34:	add	r2, r1, r2, lsl #1
   38c38:	add	r1, r1, #2
   38c3c:	b	38c54 <flatcc_builder_check_required@@Base+0x5c>
   38c40:	ldrh	r3, [r1], #2
   38c44:	lsl	r3, r3, #1
   38c48:	ldrh	r0, [ip, r3]
   38c4c:	cmp	r0, #0
   38c50:	bxeq	lr
   38c54:	cmp	r1, r2
   38c58:	bne	38c40 <flatcc_builder_check_required@@Base+0x48>
   38c5c:	mov	r0, #1
   38c60:	bx	lr
   38c64:	mov	r0, #0
   38c68:	bx	lr
   38c6c:	movw	r1, #39296	; 0x9980
   38c70:	movt	r1, #5
   38c74:	ldr	r3, [pc, #20]	; 38c90 <flatcc_builder_check_required@@Base+0x98>
   38c78:	movw	r0, #40012	; 0x9c4c
   38c7c:	movt	r0, #5
   38c80:	str	r4, [sp, #-8]!
   38c84:	movw	r2, #1297	; 0x511
   38c88:	str	lr, [sp, #4]
   38c8c:	bl	14014 <__assert_fail@plt>
   38c90:	andeq	r9, r5, r0, ror r7

00038c94 <flatcc_builder_end_table@@Base>:
   38c94:	ldr	r3, [r0, #32]
   38c98:	strd	r4, [sp, #-20]!	; 0xffffffec
   38c9c:	ldrh	r3, [r3, #14]
   38ca0:	strd	r6, [sp, #8]
   38ca4:	str	lr, [sp, #16]
   38ca8:	sub	sp, sp, #20
   38cac:	cmp	r3, #3
   38cb0:	bne	38e34 <flatcc_builder_end_table@@Base+0x1a0>
   38cb4:	ldrh	r5, [r0, #8]
   38cb8:	movw	ip, #31153	; 0x79b1
   38cbc:	movt	ip, #40503	; 0x9e37
   38cc0:	mov	r4, r0
   38cc4:	ldr	r1, [r0, #4]
   38cc8:	ldr	r3, [r0, #12]
   38ccc:	add	r5, r5, #2
   38cd0:	lsl	r5, r5, #1
   38cd4:	ldr	lr, [r0, #20]
   38cd8:	sub	r6, r1, #4
   38cdc:	uxth	r5, r5
   38ce0:	eor	r3, r3, r5
   38ce4:	mov	r2, r5
   38ce8:	strh	r5, [r1, #-4]
   38cec:	mul	r3, ip, r3
   38cf0:	add	lr, lr, #4
   38cf4:	uxth	lr, lr
   38cf8:	eor	r3, r3, lr
   38cfc:	strh	lr, [r1, #-2]
   38d00:	mov	r1, r6
   38d04:	mul	r3, ip, r3
   38d08:	str	r3, [r0, #12]
   38d0c:	bl	385b4 <flatcc_builder_create_cached_vtable@@Base>
   38d10:	subs	r7, r0, #0
   38d14:	bne	38d34 <flatcc_builder_end_table@@Base+0xa0>
   38d18:	mov	r5, #0
   38d1c:	mov	r0, r5
   38d20:	add	sp, sp, #20
   38d24:	ldrd	r4, [sp]
   38d28:	ldrd	r6, [sp, #8]
   38d2c:	add	sp, sp, #16
   38d30:	pop	{pc}		; (ldr pc, [sp], #4)
   38d34:	mov	r2, r5
   38d38:	mov	r1, #0
   38d3c:	mov	r0, r6
   38d40:	bl	13f78 <memset@plt>
   38d44:	ldr	ip, [r4]
   38d48:	mov	r0, r4
   38d4c:	ldr	r3, [r4, #32]
   38d50:	ldr	r2, [r4, #76]	; 0x4c
   38d54:	ldr	r1, [r3, #20]
   38d58:	str	r7, [sp, #8]
   38d5c:	ldrh	r3, [r4, #130]	; 0x82
   38d60:	add	r2, r2, r1
   38d64:	ldr	r1, [r4, #16]
   38d68:	sub	ip, ip, r2
   38d6c:	asr	ip, ip, #1
   38d70:	str	r2, [sp]
   38d74:	ldr	r2, [r4, #20]
   38d78:	str	ip, [sp, #4]
   38d7c:	bl	38928 <flatcc_builder_create_table@@Base>
   38d80:	subs	r5, r0, #0
   38d84:	beq	38d18 <flatcc_builder_end_table@@Base+0x84>
   38d88:	ldr	r3, [r4, #32]
   38d8c:	mov	r1, #0
   38d90:	ldr	r0, [r4, #52]	; 0x34
   38d94:	ldr	r2, [r4, #76]	; 0x4c
   38d98:	ldr	ip, [r3, #16]
   38d9c:	ldr	r6, [r3, #20]
   38da0:	ldrh	lr, [r3, #28]
   38da4:	add	r0, r0, ip
   38da8:	ldr	ip, [r3, #24]
   38dac:	add	r3, r2, r6
   38db0:	ldr	r2, [r4, #20]
   38db4:	str	r3, [r4]
   38db8:	str	r0, [r4, #4]
   38dbc:	strh	lr, [r4, #8]
   38dc0:	str	ip, [r4, #12]
   38dc4:	ldr	r0, [r4, #16]
   38dc8:	bl	13f78 <memset@plt>
   38dcc:	ldr	r3, [r4, #32]
   38dd0:	ldr	r0, [r4, #60]	; 0x3c
   38dd4:	ldr	r2, [r4, #64]	; 0x40
   38dd8:	ldr	ip, [r3]
   38ddc:	ldmib	r3, {r1, lr}
   38de0:	add	r0, r0, ip
   38de4:	sub	r2, r2, ip
   38de8:	str	r0, [r4, #16]
   38dec:	cmp	r2, r1
   38df0:	ldrh	r0, [r4, #128]	; 0x80
   38df4:	movcs	r2, r1
   38df8:	str	lr, [r4, #20]
   38dfc:	str	ip, [r4, #28]
   38e00:	ldrh	ip, [r4, #130]	; 0x82
   38e04:	str	r2, [r4, #24]
   38e08:	ldr	r2, [r4, #156]	; 0x9c
   38e0c:	str	r1, [r3, #4]
   38e10:	cmp	r0, ip
   38e14:	sub	r0, r3, #36	; 0x24
   38e18:	strhcc	ip, [r4, #128]	; 0x80
   38e1c:	ldrh	r1, [r3, #12]
   38e20:	sub	r3, r2, #1
   38e24:	str	r0, [r4, #32]
   38e28:	strh	r1, [r4, #130]	; 0x82
   38e2c:	str	r3, [r4, #156]	; 0x9c
   38e30:	b	38d1c <flatcc_builder_end_table@@Base+0x88>
   38e34:	movw	r1, #39296	; 0x9980
   38e38:	movt	r1, #5
   38e3c:	ldr	r3, [pc, #12]	; 38e50 <flatcc_builder_end_table@@Base+0x1bc>
   38e40:	movw	r0, #40012	; 0x9c4c
   38e44:	movt	r0, #5
   38e48:	movw	r2, #1317	; 0x525
   38e4c:	bl	14014 <__assert_fail@plt>
   38e50:	muleq	r5, r0, r7

00038e54 <flatcc_builder_create_vector@@Base>:
   38e54:	strd	r4, [sp, #-16]!
   38e58:	mov	r4, r0
   38e5c:	str	r6, [sp, #8]
   38e60:	str	lr, [sp, #12]
   38e64:	sub	sp, sp, #88	; 0x58
   38e68:	ldr	ip, [sp, #108]	; 0x6c
   38e6c:	ldrh	r0, [sp, #104]	; 0x68
   38e70:	cmp	r2, ip
   38e74:	bhi	38f68 <flatcc_builder_create_vector@@Base+0x114>
   38e78:	ldrh	ip, [r4, #128]	; 0x80
   38e7c:	cmp	r0, #4
   38e80:	mul	r3, r3, r2
   38e84:	movcc	r0, #4
   38e88:	add	lr, sp, #12
   38e8c:	str	r2, [sp, #12]
   38e90:	ldr	r6, [r4, #136]	; 0x88
   38e94:	mov	r2, #1
   38e98:	str	lr, [sp, #24]
   38e9c:	cmp	ip, r0
   38ea0:	mov	ip, #4
   38ea4:	strhcc	r0, [r4, #128]	; 0x80
   38ea8:	sub	lr, r6, r3
   38eac:	sub	r0, r0, #1
   38eb0:	cmp	r3, #0
   38eb4:	and	r0, r0, lr
   38eb8:	str	ip, [sp, #16]
   38ebc:	moveq	r3, #2
   38ec0:	str	r2, [sp, #20]
   38ec4:	str	ip, [sp, #28]
   38ec8:	beq	38eec <flatcc_builder_create_vector@@Base+0x98>
   38ecc:	mov	lr, #2
   38ed0:	add	ip, r3, ip
   38ed4:	mov	r2, lr
   38ed8:	str	ip, [sp, #16]
   38edc:	str	r3, [sp, #36]	; 0x24
   38ee0:	mov	r3, #3
   38ee4:	str	lr, [sp, #20]
   38ee8:	str	r1, [sp, #32]
   38eec:	cmp	r0, #0
   38ef0:	bne	38f3c <flatcc_builder_create_vector@@Base+0xe8>
   38ef4:	sub	r5, r6, ip
   38ef8:	cmp	r6, r5
   38efc:	ble	38f88 <flatcc_builder_create_vector@@Base+0x134>
   38f00:	mov	r3, r5
   38f04:	add	r1, sp, #24
   38f08:	str	ip, [sp]
   38f0c:	ldr	r0, [r4, #36]	; 0x24
   38f10:	ldr	r6, [r4, #44]	; 0x2c
   38f14:	blx	r6
   38f18:	cmp	r0, #0
   38f1c:	bne	38f84 <flatcc_builder_create_vector@@Base+0x130>
   38f20:	mov	r0, r5
   38f24:	str	r5, [r4, #136]	; 0x88
   38f28:	add	sp, sp, #88	; 0x58
   38f2c:	ldrd	r4, [sp]
   38f30:	ldr	r6, [sp, #8]
   38f34:	add	sp, sp, #12
   38f38:	pop	{pc}		; (ldr pc, [sp], #4)
   38f3c:	ldr	lr, [pc, #96]	; 38fa4 <flatcc_builder_create_vector@@Base+0x150>
   38f40:	add	r2, r2, #1
   38f44:	add	r1, sp, #88	; 0x58
   38f48:	add	r1, r1, r2, lsl #3
   38f4c:	add	ip, ip, r0
   38f50:	mov	r2, r3
   38f54:	str	ip, [sp, #16]
   38f58:	str	r3, [sp, #20]
   38f5c:	str	lr, [r1, #-72]	; 0xffffffb8
   38f60:	str	r0, [r1, #-68]	; 0xffffffbc
   38f64:	b	38ef4 <flatcc_builder_create_vector@@Base+0xa0>
   38f68:	movw	r1, #39296	; 0x9980
   38f6c:	movt	r1, #5
   38f70:	ldr	r3, [pc, #48]	; 38fa8 <flatcc_builder_create_vector@@Base+0x154>
   38f74:	movw	r0, #40056	; 0x9c78
   38f78:	movt	r0, #5
   38f7c:	movw	r2, #1365	; 0x555
   38f80:	bl	14014 <__assert_fail@plt>
   38f84:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   38f88:	movw	r1, #39296	; 0x9980
   38f8c:	movt	r1, #5
   38f90:	ldr	r3, [pc, #20]	; 38fac <flatcc_builder_create_vector@@Base+0x158>
   38f94:	movw	r0, #35672	; 0x8b58
   38f98:	movt	r0, #4
   38f9c:	movw	r2, #647	; 0x287
   38fa0:	bl	14014 <__assert_fail@plt>
   38fa4:	ldrdeq	r9, [r5], -r8
   38fa8:	andeq	r9, r5, ip, lsr #15
   38fac:	andeq	r9, r5, ip, asr r2

00038fb0 <flatcc_builder_end_vector@@Base>:
   38fb0:	ldr	r2, [r0, #32]
   38fb4:	strd	r4, [sp, #-16]!
   38fb8:	ldrh	r3, [r2, #14]
   38fbc:	str	r6, [sp, #8]
   38fc0:	str	lr, [sp, #12]
   38fc4:	sub	sp, sp, #88	; 0x58
   38fc8:	cmp	r3, #4
   38fcc:	bne	39194 <flatcc_builder_end_vector@@Base+0x1e4>
   38fd0:	ldr	ip, [r2, #20]
   38fd4:	mov	r4, r0
   38fd8:	ldr	r1, [r2, #24]
   38fdc:	ldrh	r3, [r0, #130]	; 0x82
   38fe0:	ldr	r5, [r4, #16]
   38fe4:	cmp	ip, r1
   38fe8:	ldr	r0, [r2, #16]
   38fec:	bhi	39178 <flatcc_builder_end_vector@@Base+0x1c8>
   38ff0:	cmp	r3, #4
   38ff4:	mul	r0, r0, ip
   38ff8:	mov	r1, #4
   38ffc:	ldrh	r2, [r4, #128]	; 0x80
   39000:	movcc	r3, #4
   39004:	add	r6, sp, #12
   39008:	str	ip, [sp, #12]
   3900c:	ldr	lr, [r4, #136]	; 0x88
   39010:	str	r1, [sp, #16]
   39014:	str	r6, [sp, #24]
   39018:	cmp	r2, r3
   3901c:	mov	r2, #1
   39020:	strhcc	r3, [r4, #128]	; 0x80
   39024:	sub	ip, lr, r0
   39028:	sub	r3, r3, #1
   3902c:	cmp	r0, #0
   39030:	and	r3, r3, ip
   39034:	str	r2, [sp, #20]
   39038:	moveq	r0, #2
   3903c:	str	r1, [sp, #28]
   39040:	beq	39064 <flatcc_builder_end_vector@@Base+0xb4>
   39044:	mov	ip, #2
   39048:	add	r1, r0, r1
   3904c:	mov	r2, ip
   39050:	str	r1, [sp, #16]
   39054:	str	r0, [sp, #36]	; 0x24
   39058:	mov	r0, #3
   3905c:	str	ip, [sp, #20]
   39060:	str	r5, [sp, #32]
   39064:	cmp	r3, #0
   39068:	bne	3912c <flatcc_builder_end_vector@@Base+0x17c>
   3906c:	sub	r5, lr, r1
   39070:	cmp	lr, r5
   39074:	ble	3915c <flatcc_builder_end_vector@@Base+0x1ac>
   39078:	mov	r3, r5
   3907c:	str	r1, [sp]
   39080:	add	r1, sp, #24
   39084:	ldr	r0, [r4, #36]	; 0x24
   39088:	ldr	r6, [r4, #44]	; 0x2c
   3908c:	blx	r6
   39090:	subs	r1, r0, #0
   39094:	bne	39158 <flatcc_builder_end_vector@@Base+0x1a8>
   39098:	cmp	r5, #0
   3909c:	str	r5, [r4, #136]	; 0x88
   390a0:	beq	39114 <flatcc_builder_end_vector@@Base+0x164>
   390a4:	ldr	r0, [r4, #16]
   390a8:	ldr	r2, [r4, #20]
   390ac:	bl	13f78 <memset@plt>
   390b0:	ldr	r3, [r4, #32]
   390b4:	ldr	r0, [r4, #60]	; 0x3c
   390b8:	ldr	r2, [r4, #64]	; 0x40
   390bc:	ldr	ip, [r3]
   390c0:	ldmib	r3, {r1, lr}
   390c4:	add	r0, r0, ip
   390c8:	sub	r2, r2, ip
   390cc:	str	r0, [r4, #16]
   390d0:	cmp	r2, r1
   390d4:	ldrh	r0, [r4, #128]	; 0x80
   390d8:	movcs	r2, r1
   390dc:	str	lr, [r4, #20]
   390e0:	str	ip, [r4, #28]
   390e4:	ldrh	ip, [r4, #130]	; 0x82
   390e8:	str	r2, [r4, #24]
   390ec:	ldr	r2, [r4, #156]	; 0x9c
   390f0:	str	r1, [r3, #4]
   390f4:	cmp	r0, ip
   390f8:	sub	r0, r3, #36	; 0x24
   390fc:	strhcc	ip, [r4, #128]	; 0x80
   39100:	ldrh	r1, [r3, #12]
   39104:	sub	r3, r2, #1
   39108:	str	r0, [r4, #32]
   3910c:	strh	r1, [r4, #130]	; 0x82
   39110:	str	r3, [r4, #156]	; 0x9c
   39114:	mov	r0, r5
   39118:	add	sp, sp, #88	; 0x58
   3911c:	ldrd	r4, [sp]
   39120:	ldr	r6, [sp, #8]
   39124:	add	sp, sp, #12
   39128:	pop	{pc}		; (ldr pc, [sp], #4)
   3912c:	ldr	r5, [pc, #124]	; 391b0 <flatcc_builder_end_vector@@Base+0x200>
   39130:	add	r2, r2, #1
   39134:	add	ip, sp, #88	; 0x58
   39138:	add	ip, ip, r2, lsl #3
   3913c:	add	r1, r1, r3
   39140:	mov	r2, r0
   39144:	str	r1, [sp, #16]
   39148:	str	r0, [sp, #20]
   3914c:	str	r5, [ip, #-72]	; 0xffffffb8
   39150:	str	r3, [ip, #-68]	; 0xffffffbc
   39154:	b	3906c <flatcc_builder_end_vector@@Base+0xbc>
   39158:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   3915c:	movw	r1, #39296	; 0x9980
   39160:	movt	r1, #5
   39164:	ldr	r3, [pc, #72]	; 391b4 <flatcc_builder_end_vector@@Base+0x204>
   39168:	movw	r0, #35672	; 0x8b58
   3916c:	movt	r0, #4
   39170:	movw	r2, #647	; 0x287
   39174:	bl	14014 <__assert_fail@plt>
   39178:	movw	r1, #39296	; 0x9980
   3917c:	movt	r1, #5
   39180:	ldr	r3, [pc, #48]	; 391b8 <flatcc_builder_end_vector@@Base+0x208>
   39184:	movw	r0, #40056	; 0x9c78
   39188:	movt	r0, #5
   3918c:	movw	r2, #1365	; 0x555
   39190:	bl	14014 <__assert_fail@plt>
   39194:	movw	r1, #39296	; 0x9980
   39198:	movt	r1, #5
   3919c:	ldr	r3, [pc, #24]	; 391bc <flatcc_builder_end_vector@@Base+0x20c>
   391a0:	movw	r0, #39660	; 0x9aec
   391a4:	movt	r0, #5
   391a8:	movw	r2, #1400	; 0x578
   391ac:	bl	14014 <__assert_fail@plt>
   391b0:	ldrdeq	r9, [r5], -r8
   391b4:	andeq	r9, r5, ip, asr r2
   391b8:	andeq	r9, r5, ip, lsr #15
   391bc:	andeq	r9, r5, ip, asr #15

000391c0 <flatcc_builder_vector_count@@Base>:
   391c0:	ldr	r3, [r0, #32]
   391c4:	ldr	r0, [r3, #20]
   391c8:	bx	lr

000391cc <flatcc_builder_vector_edit@@Base>:
   391cc:	ldr	r0, [r0, #16]
   391d0:	bx	lr

000391d4 <flatcc_builder_create_offset_vector_direct@@Base>:
   391d4:	cmn	r2, #-1073741823	; 0xc0000001
   391d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   391dc:	strd	r6, [sp, #8]
   391e0:	str	r8, [sp, #16]
   391e4:	str	lr, [sp, #20]
   391e8:	sub	sp, sp, #88	; 0x58
   391ec:	bhi	392f0 <flatcc_builder_create_offset_vector_direct@@Base+0x11c>
   391f0:	ldrh	r3, [r0, #128]	; 0x80
   391f4:	mov	r4, r0
   391f8:	mov	ip, #1
   391fc:	str	r2, [sp, #12]
   39200:	ldr	r5, [r4, #136]	; 0x88
   39204:	str	ip, [sp, #20]
   39208:	cmp	r3, #3
   3920c:	movls	r3, #4
   39210:	strhls	r3, [r0, #128]	; 0x80
   39214:	mov	r0, #4
   39218:	add	r3, sp, #12
   3921c:	lsls	lr, r2, #2
   39220:	str	r0, [sp, #16]
   39224:	moveq	r7, #2
   39228:	str	r3, [sp, #24]
   3922c:	and	r3, r5, #3
   39230:	str	r0, [sp, #28]
   39234:	beq	39258 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   39238:	mov	r6, #2
   3923c:	add	r0, lr, r0
   39240:	mov	ip, r6
   39244:	mov	r7, #3
   39248:	str	r0, [sp, #16]
   3924c:	str	r6, [sp, #20]
   39250:	str	r1, [sp, #32]
   39254:	str	lr, [sp, #36]	; 0x24
   39258:	cmp	r3, #0
   3925c:	bne	392c4 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
   39260:	cmp	r2, #0
   39264:	beq	39314 <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   39268:	ldr	r3, [r1]
   3926c:	cmp	r3, #0
   39270:	subne	lr, lr, #4
   39274:	movne	r2, #0
   39278:	beq	392a8 <flatcc_builder_create_offset_vector_direct@@Base+0xd4>
   3927c:	sub	r3, r3, #4
   39280:	cmp	r2, lr
   39284:	sub	r3, r3, r5
   39288:	add	r3, r3, r0
   3928c:	sub	r3, r3, r2
   39290:	str	r3, [r1]
   39294:	beq	39310 <flatcc_builder_create_offset_vector_direct@@Base+0x13c>
   39298:	ldr	r3, [r1, #4]!
   3929c:	add	r2, r2, #4
   392a0:	cmp	r3, #0
   392a4:	bne	3927c <flatcc_builder_create_offset_vector_direct@@Base+0xa8>
   392a8:	movw	r1, #39296	; 0x9980
   392ac:	movt	r1, #5
   392b0:	ldr	r3, [pc, #176]	; 39368 <flatcc_builder_create_offset_vector_direct@@Base+0x194>
   392b4:	movw	r0, #35672	; 0x8b58
   392b8:	movt	r0, #4
   392bc:	movw	r2, #1463	; 0x5b7
   392c0:	bl	14014 <__assert_fail@plt>
   392c4:	ldr	r8, [pc, #160]	; 3936c <flatcc_builder_create_offset_vector_direct@@Base+0x198>
   392c8:	add	ip, ip, #1
   392cc:	add	r6, sp, #88	; 0x58
   392d0:	add	r6, r6, ip, lsl #3
   392d4:	add	r0, r0, r3
   392d8:	mov	ip, r7
   392dc:	str	r0, [sp, #16]
   392e0:	str	r7, [sp, #20]
   392e4:	str	r8, [r6, #-72]	; 0xffffffb8
   392e8:	str	r3, [r6, #-68]	; 0xffffffbc
   392ec:	b	39260 <flatcc_builder_create_offset_vector_direct@@Base+0x8c>
   392f0:	mov	r6, #0
   392f4:	mov	r0, r6
   392f8:	add	sp, sp, #88	; 0x58
   392fc:	ldrd	r4, [sp]
   39300:	ldrd	r6, [sp, #8]
   39304:	ldr	r8, [sp, #16]
   39308:	add	sp, sp, #20
   3930c:	pop	{pc}		; (ldr pc, [sp], #4)
   39310:	ldr	r5, [r4, #136]	; 0x88
   39314:	sub	r6, r5, r0
   39318:	cmp	r6, r5
   3931c:	bge	3934c <flatcc_builder_create_offset_vector_direct@@Base+0x178>
   39320:	mov	r2, ip
   39324:	mov	r3, r6
   39328:	str	r0, [sp]
   3932c:	add	r1, sp, #24
   39330:	ldr	r0, [r4, #36]	; 0x24
   39334:	ldr	r5, [r4, #44]	; 0x2c
   39338:	blx	r5
   3933c:	cmp	r0, #0
   39340:	streq	r6, [r4, #136]	; 0x88
   39344:	beq	392f4 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   39348:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   3934c:	movw	r1, #39296	; 0x9980
   39350:	movt	r1, #5
   39354:	ldr	r3, [pc, #20]	; 39370 <flatcc_builder_create_offset_vector_direct@@Base+0x19c>
   39358:	movw	r0, #35672	; 0x8b58
   3935c:	movt	r0, #4
   39360:	movw	r2, #647	; 0x287
   39364:	bl	14014 <__assert_fail@plt>
   39368:	ldrdeq	r9, [r5], -r8
   3936c:	ldrdeq	r9, [r5], -r8
   39370:	andeq	r9, r5, ip, asr r2

00039374 <flatcc_builder_end_offset_vector@@Base>:
   39374:	ldr	r3, [r0, #32]
   39378:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3937c:	ldrh	r2, [r3, #14]
   39380:	strd	r6, [sp, #8]
   39384:	str	r8, [sp, #16]
   39388:	str	lr, [sp, #20]
   3938c:	sub	sp, sp, #88	; 0x58
   39390:	cmp	r2, #5
   39394:	bne	3957c <flatcc_builder_end_offset_vector@@Base+0x208>
   39398:	ldr	r3, [r3, #20]
   3939c:	cmn	r3, #-1073741823	; 0xc0000001
   393a0:	bhi	394a4 <flatcc_builder_end_offset_vector@@Base+0x130>
   393a4:	ldrh	r2, [r0, #128]	; 0x80
   393a8:	mov	r4, r0
   393ac:	add	r5, sp, #12
   393b0:	mov	r1, #1
   393b4:	str	r3, [sp, #12]
   393b8:	ldr	ip, [r4, #136]	; 0x88
   393bc:	str	r1, [sp, #20]
   393c0:	ldr	r0, [r0, #16]
   393c4:	cmp	r2, #3
   393c8:	str	r5, [sp, #24]
   393cc:	movls	r2, #4
   393d0:	and	r5, ip, #3
   393d4:	strhls	r2, [r4, #128]	; 0x80
   393d8:	mov	r2, #4
   393dc:	lsls	lr, r3, #2
   393e0:	moveq	r6, #2
   393e4:	str	r2, [sp, #16]
   393e8:	str	r2, [sp, #28]
   393ec:	beq	39410 <flatcc_builder_end_offset_vector@@Base+0x9c>
   393f0:	mov	r7, #2
   393f4:	add	r2, lr, r2
   393f8:	mov	r1, r7
   393fc:	mov	r6, #3
   39400:	str	r2, [sp, #16]
   39404:	str	r7, [sp, #20]
   39408:	str	r0, [sp, #32]
   3940c:	str	lr, [sp, #36]	; 0x24
   39410:	cmp	r5, #0
   39414:	bne	3947c <flatcc_builder_end_offset_vector@@Base+0x108>
   39418:	cmp	r3, #0
   3941c:	beq	394cc <flatcc_builder_end_offset_vector@@Base+0x158>
   39420:	ldr	r3, [r0]
   39424:	cmp	r3, #0
   39428:	subne	lr, lr, #4
   3942c:	movne	r1, #0
   39430:	beq	39460 <flatcc_builder_end_offset_vector@@Base+0xec>
   39434:	sub	r3, r3, #4
   39438:	cmp	r1, lr
   3943c:	sub	r3, r3, ip
   39440:	add	r3, r3, r2
   39444:	sub	r3, r3, r1
   39448:	str	r3, [r0]
   3944c:	beq	394c4 <flatcc_builder_end_offset_vector@@Base+0x150>
   39450:	ldr	r3, [r0, #4]!
   39454:	add	r1, r1, #4
   39458:	cmp	r3, #0
   3945c:	bne	39434 <flatcc_builder_end_offset_vector@@Base+0xc0>
   39460:	movw	r1, #39296	; 0x9980
   39464:	movt	r1, #5
   39468:	ldr	r3, [pc, #328]	; 395b8 <flatcc_builder_end_offset_vector@@Base+0x244>
   3946c:	movw	r0, #35672	; 0x8b58
   39470:	movt	r0, #4
   39474:	movw	r2, #1463	; 0x5b7
   39478:	bl	14014 <__assert_fail@plt>
   3947c:	ldr	r7, [pc, #312]	; 395bc <flatcc_builder_end_offset_vector@@Base+0x248>
   39480:	add	r1, r1, #1
   39484:	add	r8, sp, #88	; 0x58
   39488:	add	r1, r8, r1, lsl #3
   3948c:	add	r2, r2, r5
   39490:	str	r2, [sp, #16]
   39494:	str	r6, [sp, #20]
   39498:	str	r7, [r1, #-72]	; 0xffffffb8
   3949c:	str	r5, [r1, #-68]	; 0xffffffbc
   394a0:	b	39418 <flatcc_builder_end_offset_vector@@Base+0xa4>
   394a4:	mov	r5, #0
   394a8:	mov	r0, r5
   394ac:	add	sp, sp, #88	; 0x58
   394b0:	ldrd	r4, [sp]
   394b4:	ldrd	r6, [sp, #8]
   394b8:	ldr	r8, [sp, #16]
   394bc:	add	sp, sp, #20
   394c0:	pop	{pc}		; (ldr pc, [sp], #4)
   394c4:	ldr	r2, [sp, #16]
   394c8:	ldr	ip, [r4, #136]	; 0x88
   394cc:	sub	r5, ip, r2
   394d0:	cmp	r5, ip
   394d4:	bge	3959c <flatcc_builder_end_offset_vector@@Base+0x228>
   394d8:	add	r1, sp, #24
   394dc:	mov	r3, r5
   394e0:	str	r2, [sp]
   394e4:	ldr	r2, [sp, #20]
   394e8:	ldr	r0, [r4, #36]	; 0x24
   394ec:	ldr	r6, [r4, #44]	; 0x2c
   394f0:	blx	r6
   394f4:	subs	r1, r0, #0
   394f8:	bne	39598 <flatcc_builder_end_offset_vector@@Base+0x224>
   394fc:	cmp	r5, #0
   39500:	str	r5, [r4, #136]	; 0x88
   39504:	beq	394a4 <flatcc_builder_end_offset_vector@@Base+0x130>
   39508:	ldr	r0, [r4, #16]
   3950c:	ldr	r2, [r4, #20]
   39510:	bl	13f78 <memset@plt>
   39514:	ldr	r3, [r4, #32]
   39518:	ldr	r0, [r4, #60]	; 0x3c
   3951c:	ldr	r2, [r4, #64]	; 0x40
   39520:	ldr	ip, [r3]
   39524:	ldmib	r3, {r1, lr}
   39528:	add	r0, r0, ip
   3952c:	sub	r2, r2, ip
   39530:	str	r0, [r4, #16]
   39534:	cmp	r2, r1
   39538:	ldrh	r0, [r4, #128]	; 0x80
   3953c:	movcs	r2, r1
   39540:	str	lr, [r4, #20]
   39544:	str	ip, [r4, #28]
   39548:	ldrh	ip, [r4, #130]	; 0x82
   3954c:	str	r2, [r4, #24]
   39550:	ldr	r2, [r4, #156]	; 0x9c
   39554:	str	r1, [r3, #4]
   39558:	cmp	r0, ip
   3955c:	sub	r0, r3, #36	; 0x24
   39560:	strhcc	ip, [r4, #128]	; 0x80
   39564:	ldrh	r1, [r3, #12]
   39568:	sub	r3, r2, #1
   3956c:	str	r0, [r4, #32]
   39570:	strh	r1, [r4, #130]	; 0x82
   39574:	str	r3, [r4, #156]	; 0x9c
   39578:	b	394a8 <flatcc_builder_end_offset_vector@@Base+0x134>
   3957c:	movw	r1, #39296	; 0x9980
   39580:	movt	r1, #5
   39584:	ldr	r3, [pc, #52]	; 395c0 <flatcc_builder_end_offset_vector@@Base+0x24c>
   39588:	movw	r0, #39768	; 0x9b58
   3958c:	movt	r0, #5
   39590:	movw	r2, #1480	; 0x5c8
   39594:	bl	14014 <__assert_fail@plt>
   39598:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   3959c:	movw	r1, #39296	; 0x9980
   395a0:	movt	r1, #5
   395a4:	ldr	r3, [pc, #24]	; 395c4 <flatcc_builder_end_offset_vector@@Base+0x250>
   395a8:	movw	r0, #35672	; 0x8b58
   395ac:	movt	r0, #4
   395b0:	movw	r2, #647	; 0x287
   395b4:	bl	14014 <__assert_fail@plt>
   395b8:	ldrdeq	r9, [r5], -r8
   395bc:	ldrdeq	r9, [r5], -r8
   395c0:			; <UNDEFINED> instruction: 0x000596bc
   395c4:	andeq	r9, r5, ip, asr r2

000395c8 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   395c8:	ldr	r2, [r0, #32]
   395cc:	strd	r4, [sp, #-16]!
   395d0:	ldrh	ip, [r2, #14]
   395d4:	str	r6, [sp, #8]
   395d8:	str	lr, [sp, #12]
   395dc:	cmp	ip, #5
   395e0:	bne	39698 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd0>
   395e4:	ldr	r2, [r2, #20]
   395e8:	cmn	r2, #-1073741823	; 0xc0000001
   395ec:	bhi	39608 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
   395f0:	mov	r3, r1
   395f4:	ldr	r1, [r0, #16]
   395f8:	mov	r4, r0
   395fc:	bl	35ac4 <flatcc_builder_default_alloc@@Base+0x388>
   39600:	subs	r5, r0, #0
   39604:	bne	39620 <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   39608:	mov	r5, #0
   3960c:	mov	r0, r5
   39610:	ldrd	r4, [sp]
   39614:	ldr	r6, [sp, #8]
   39618:	add	sp, sp, #12
   3961c:	pop	{pc}		; (ldr pc, [sp], #4)
   39620:	mov	r1, #0
   39624:	ldr	r0, [r4, #16]
   39628:	ldr	r2, [r4, #20]
   3962c:	bl	13f78 <memset@plt>
   39630:	ldr	r3, [r4, #32]
   39634:	ldr	r0, [r4, #60]	; 0x3c
   39638:	ldr	r2, [r4, #64]	; 0x40
   3963c:	ldr	ip, [r3]
   39640:	ldmib	r3, {r1, lr}
   39644:	add	r0, r0, ip
   39648:	sub	r2, r2, ip
   3964c:	str	r0, [r4, #16]
   39650:	cmp	r2, r1
   39654:	ldrh	r0, [r4, #128]	; 0x80
   39658:	movcs	r2, r1
   3965c:	str	lr, [r4, #20]
   39660:	str	ip, [r4, #28]
   39664:	ldrh	ip, [r4, #130]	; 0x82
   39668:	str	r2, [r4, #24]
   3966c:	ldr	r2, [r4, #156]	; 0x9c
   39670:	str	r1, [r3, #4]
   39674:	cmp	r0, ip
   39678:	sub	r0, r3, #36	; 0x24
   3967c:	strhcc	ip, [r4, #128]	; 0x80
   39680:	ldrh	r1, [r3, #12]
   39684:	sub	r3, r2, #1
   39688:	str	r0, [r4, #32]
   3968c:	strh	r1, [r4, #130]	; 0x82
   39690:	str	r3, [r4, #156]	; 0x9c
   39694:	b	3960c <flatcc_builder_end_offset_vector_for_unions@@Base+0x44>
   39698:	movw	r1, #39296	; 0x9980
   3969c:	movt	r1, #5
   396a0:	ldr	r3, [pc, #12]	; 396b4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xec>
   396a4:	movw	r0, #39768	; 0x9b58
   396a8:	movt	r0, #5
   396ac:	movw	r2, #1493	; 0x5d5
   396b0:	bl	14014 <__assert_fail@plt>
   396b4:	andeq	r9, r5, r8, ror #15

000396b8 <flatcc_builder_offset_vector_edit@@Base>:
   396b8:	ldr	r0, [r0, #16]
   396bc:	bx	lr

000396c0 <flatcc_builder_offset_vector_count@@Base>:
   396c0:	ldr	r3, [r0, #32]
   396c4:	ldr	r0, [r3, #20]
   396c8:	bx	lr

000396cc <flatcc_builder_create_union_vector@@Base>:
   396cc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   396d0:	mov	r4, r1
   396d4:	mov	r1, #4
   396d8:	strd	r6, [sp, #8]
   396dc:	mov	r6, r0
   396e0:	mov	r0, r4
   396e4:	strd	r8, [sp, #16]
   396e8:	mov	r5, r2
   396ec:	mov	r7, r3
   396f0:	str	sl, [sp, #24]
   396f4:	str	lr, [sp, #28]
   396f8:	sub	sp, sp, #8
   396fc:	bl	359a0 <flatcc_builder_default_alloc@@Base+0x264>
   39700:	cmp	r0, #0
   39704:	bne	39870 <flatcc_builder_create_union_vector@@Base+0x1a4>
   39708:	ldr	ip, [r4, #28]
   3970c:	mov	lr, #4
   39710:	mov	r8, #5
   39714:	mvn	r9, #3
   39718:	ldr	r3, [r4, #32]
   3971c:	ldr	r2, [r4, #64]	; 0x40
   39720:	ldr	r1, [r4, #60]	; 0x3c
   39724:	strh	r8, [r3, #14]
   39728:	str	lr, [r3, #16]
   3972c:	sub	r2, r2, ip
   39730:	str	r0, [r3, #20]
   39734:	mov	r0, r4
   39738:	cmn	r2, #4
   3973c:	add	r1, r1, ip
   39740:	mvnhi	r2, #3
   39744:	str	r1, [r4, #16]
   39748:	mov	r1, r7
   3974c:	str	r2, [r4, #24]
   39750:	str	r9, [r3, #4]
   39754:	bl	37248 <flatcc_builder_extend_offset_vector@@Base>
   39758:	cmp	r0, #0
   3975c:	beq	39870 <flatcc_builder_create_union_vector@@Base+0x1a4>
   39760:	ldr	r8, [r4, #20]
   39764:	ldr	r3, [r4, #24]
   39768:	add	r2, r7, r8
   3976c:	cmp	r2, r3
   39770:	str	r2, [r4, #20]
   39774:	bcs	3989c <flatcc_builder_create_union_vector@@Base+0x1d0>
   39778:	ldr	r1, [r4, #16]
   3977c:	adds	r8, r1, r8
   39780:	beq	39870 <flatcc_builder_create_union_vector@@Base+0x1a4>
   39784:	cmp	r7, #0
   39788:	beq	397b8 <flatcc_builder_create_union_vector@@Base+0xec>
   3978c:	add	lr, r5, r7, lsl #3
   39790:	mov	r2, r5
   39794:	sub	r0, r8, #1
   39798:	sub	r3, r1, #4
   3979c:	ldrb	ip, [r2]
   397a0:	add	r2, r2, #8
   397a4:	strb	ip, [r0, #1]!
   397a8:	ldr	ip, [r2, #-4]
   397ac:	cmp	lr, r2
   397b0:	str	ip, [r3, #4]!
   397b4:	bne	3979c <flatcc_builder_create_union_vector@@Base+0xd0>
   397b8:	mov	r3, r8
   397bc:	mov	r2, r7
   397c0:	mov	r0, r4
   397c4:	bl	35ac4 <flatcc_builder_default_alloc@@Base+0x388>
   397c8:	subs	r5, r0, #0
   397cc:	beq	398fc <flatcc_builder_create_union_vector@@Base+0x230>
   397d0:	mvn	ip, #0
   397d4:	mov	r3, #1
   397d8:	mov	r2, r7
   397dc:	mov	r1, r8
   397e0:	mov	r0, r4
   397e4:	stm	sp, {r3, ip}
   397e8:	bl	38e54 <flatcc_builder_create_vector@@Base>
   397ec:	mov	r7, r0
   397f0:	mov	r1, #0
   397f4:	ldr	r0, [r4, #16]
   397f8:	ldr	r2, [r4, #20]
   397fc:	bl	13f78 <memset@plt>
   39800:	ldr	r3, [r4, #32]
   39804:	str	r7, [r6]
   39808:	ldr	r0, [r4, #60]	; 0x3c
   3980c:	str	r5, [r6, #4]
   39810:	ldr	r2, [r4, #64]	; 0x40
   39814:	ldr	ip, [r3]
   39818:	ldmib	r3, {r1, lr}
   3981c:	add	r0, r0, ip
   39820:	sub	r2, r2, ip
   39824:	str	r0, [r4, #16]
   39828:	cmp	r2, r1
   3982c:	ldrh	r0, [r4, #128]	; 0x80
   39830:	movcs	r2, r1
   39834:	str	lr, [r4, #20]
   39838:	str	ip, [r4, #28]
   3983c:	ldrh	ip, [r4, #130]	; 0x82
   39840:	str	r2, [r4, #24]
   39844:	ldr	r2, [r4, #156]	; 0x9c
   39848:	str	r1, [r3, #4]
   3984c:	cmp	r0, ip
   39850:	sub	r0, r3, #36	; 0x24
   39854:	strhcc	ip, [r4, #128]	; 0x80
   39858:	ldrh	r1, [r3, #12]
   3985c:	sub	r3, r2, #1
   39860:	str	r0, [r4, #32]
   39864:	strh	r1, [r4, #130]	; 0x82
   39868:	str	r3, [r4, #156]	; 0x9c
   3986c:	b	3987c <flatcc_builder_create_union_vector@@Base+0x1b0>
   39870:	mov	r3, #0
   39874:	str	r3, [r6]
   39878:	str	r3, [r6, #4]
   3987c:	mov	r0, r6
   39880:	add	sp, sp, #8
   39884:	ldrd	r4, [sp]
   39888:	ldrd	r6, [sp, #8]
   3988c:	ldrd	r8, [sp, #16]
   39890:	ldr	sl, [sp, #24]
   39894:	add	sp, sp, #28
   39898:	pop	{pc}		; (ldr pc, [sp], #4)
   3989c:	ldr	ip, [r4, #28]
   398a0:	mov	r0, #1
   398a4:	add	r1, r4, #60	; 0x3c
   398a8:	mov	r3, r0
   398ac:	str	r0, [sp]
   398b0:	ldr	sl, [r4, #48]	; 0x30
   398b4:	add	ip, ip, r0
   398b8:	ldr	r0, [r4, #40]	; 0x28
   398bc:	add	r2, ip, r2
   398c0:	blx	sl
   398c4:	cmp	r0, #0
   398c8:	bne	39870 <flatcc_builder_create_union_vector@@Base+0x1a4>
   398cc:	ldr	r1, [r4, #28]
   398d0:	ldr	r2, [r4, #32]
   398d4:	ldr	r3, [r4, #64]	; 0x40
   398d8:	ldr	r0, [r4, #60]	; 0x3c
   398dc:	sub	r3, r3, r1
   398e0:	cmn	r3, #4
   398e4:	movhi	r3, r9
   398e8:	add	r1, r0, r1
   398ec:	str	r1, [r4, #16]
   398f0:	str	r3, [r4, #24]
   398f4:	str	r9, [r2, #4]
   398f8:	b	3977c <flatcc_builder_create_union_vector@@Base+0xb0>
   398fc:	mov	r7, r5
   39900:	b	397f0 <flatcc_builder_create_union_vector@@Base+0x124>

00039904 <flatcc_builder_create_union_vector_direct@@Base>:
   39904:	strd	r4, [sp, #-24]!	; 0xffffffe8
   39908:	strd	r6, [sp, #8]
   3990c:	mov	r6, r0
   39910:	str	r8, [sp, #16]
   39914:	str	lr, [sp, #20]
   39918:	sub	sp, sp, #88	; 0x58
   3991c:	ldr	r4, [sp, #112]	; 0x70
   39920:	cmn	r4, #-1073741823	; 0xc0000001
   39924:	bhi	399f8 <flatcc_builder_create_union_vector_direct@@Base+0xf4>
   39928:	mov	r5, r1
   3992c:	mov	r8, r2
   39930:	mov	r1, r3
   39934:	mov	r0, r5
   39938:	mov	r3, r2
   3993c:	mov	r2, r4
   39940:	bl	35ac4 <flatcc_builder_default_alloc@@Base+0x388>
   39944:	subs	r7, r0, #0
   39948:	beq	399f8 <flatcc_builder_create_union_vector_direct@@Base+0xf4>
   3994c:	ldrh	r3, [r5, #128]	; 0x80
   39950:	mov	r2, #1
   39954:	mov	r1, #4
   39958:	str	r4, [sp, #12]
   3995c:	ldr	r0, [r5, #136]	; 0x88
   39960:	str	r1, [sp, #16]
   39964:	str	r1, [sp, #28]
   39968:	cmp	r3, #3
   3996c:	movls	r3, #4
   39970:	strhls	r3, [r5, #128]	; 0x80
   39974:	add	r3, sp, #12
   39978:	cmp	r4, #0
   3997c:	moveq	ip, #2
   39980:	strd	r2, [sp, #20]
   39984:	sub	r3, r0, r4
   39988:	and	r3, r3, #3
   3998c:	bne	39a20 <flatcc_builder_create_union_vector_direct@@Base+0x11c>
   39990:	cmp	r3, #0
   39994:	beq	399c0 <flatcc_builder_create_union_vector_direct@@Base+0xbc>
   39998:	ldr	r4, [pc, #196]	; 39a64 <flatcc_builder_create_union_vector_direct@@Base+0x160>
   3999c:	add	r2, r2, #1
   399a0:	add	lr, sp, #88	; 0x58
   399a4:	add	lr, lr, r2, lsl #3
   399a8:	add	r1, r1, r3
   399ac:	mov	r2, ip
   399b0:	str	r1, [sp, #16]
   399b4:	str	ip, [sp, #20]
   399b8:	str	r4, [lr, #-72]	; 0xffffffb8
   399bc:	str	r3, [lr, #-68]	; 0xffffffbc
   399c0:	sub	r4, r0, r1
   399c4:	cmp	r0, r4
   399c8:	ble	39a44 <flatcc_builder_create_union_vector_direct@@Base+0x140>
   399cc:	mov	r3, r4
   399d0:	str	r1, [sp]
   399d4:	add	r1, sp, #24
   399d8:	ldr	r0, [r5, #36]	; 0x24
   399dc:	ldr	r8, [r5, #44]	; 0x2c
   399e0:	blx	r8
   399e4:	cmp	r0, #0
   399e8:	bne	39a60 <flatcc_builder_create_union_vector_direct@@Base+0x15c>
   399ec:	stm	r6, {r4, r7}
   399f0:	str	r4, [r5, #136]	; 0x88
   399f4:	b	39a04 <flatcc_builder_create_union_vector_direct@@Base+0x100>
   399f8:	mov	r3, #0
   399fc:	str	r3, [r6]
   39a00:	str	r3, [r6, #4]
   39a04:	mov	r0, r6
   39a08:	add	sp, sp, #88	; 0x58
   39a0c:	ldrd	r4, [sp]
   39a10:	ldrd	r6, [sp, #8]
   39a14:	ldr	r8, [sp, #16]
   39a18:	add	sp, sp, #20
   39a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   39a20:	mov	lr, #2
   39a24:	add	r1, r4, r1
   39a28:	mov	r2, lr
   39a2c:	mov	ip, #3
   39a30:	str	r1, [sp, #16]
   39a34:	str	lr, [sp, #20]
   39a38:	str	r8, [sp, #32]
   39a3c:	str	r4, [sp, #36]	; 0x24
   39a40:	b	39990 <flatcc_builder_create_union_vector_direct@@Base+0x8c>
   39a44:	movw	r1, #39296	; 0x9980
   39a48:	movt	r1, #5
   39a4c:	ldr	r3, [pc, #20]	; 39a68 <flatcc_builder_create_union_vector_direct@@Base+0x164>
   39a50:	movw	r0, #35672	; 0x8b58
   39a54:	movt	r0, #4
   39a58:	movw	r2, #647	; 0x287
   39a5c:	bl	14014 <__assert_fail@plt>
   39a60:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   39a64:	ldrdeq	r9, [r5], -r8
   39a68:	andeq	r9, r5, ip, asr r2

00039a6c <flatcc_builder_start_union_vector@@Base>:
   39a6c:	ldrd	r2, [r0, #156]	; 0x9c
   39a70:	strd	r4, [sp, #-16]!
   39a74:	mov	r4, r0
   39a78:	str	r6, [sp, #8]
   39a7c:	str	lr, [sp, #12]
   39a80:	sub	sp, sp, #8
   39a84:	add	r1, r2, #1
   39a88:	cmp	r1, r3
   39a8c:	str	r1, [r0, #156]	; 0x9c
   39a90:	ble	39bac <flatcc_builder_start_union_vector@@Base+0x140>
   39a94:	ldr	r3, [r0, #176]	; 0xb0
   39a98:	cmp	r3, #0
   39a9c:	cmpgt	r1, r3
   39aa0:	movgt	r3, #1
   39aa4:	movle	r3, #0
   39aa8:	bgt	39bbc <flatcc_builder_start_union_vector@@Base+0x150>
   39aac:	add	r2, r2, r2, lsl #3
   39ab0:	ldr	r1, [r0, #88]	; 0x58
   39ab4:	lsl	r5, r2, #2
   39ab8:	add	r2, r5, #36	; 0x24
   39abc:	cmp	r2, r1
   39ac0:	bls	39ae4 <flatcc_builder_start_union_vector@@Base+0x78>
   39ac4:	mov	ip, #4
   39ac8:	add	r1, r0, #84	; 0x54
   39acc:	ldr	r0, [r0, #40]	; 0x28
   39ad0:	str	ip, [sp]
   39ad4:	ldr	r6, [r4, #48]	; 0x30
   39ad8:	blx	r6
   39adc:	cmp	r0, #0
   39ae0:	bne	39bc4 <flatcc_builder_start_union_vector@@Base+0x158>
   39ae4:	ldr	r3, [r4, #84]	; 0x54
   39ae8:	add	r3, r3, r5
   39aec:	cmp	r3, #0
   39af0:	str	r3, [r4, #32]
   39af4:	beq	39bbc <flatcc_builder_start_union_vector@@Base+0x150>
   39af8:	ldr	r2, [r4, #88]	; 0x58
   39afc:	movw	r0, #36409	; 0x8e39
   39b00:	movt	r0, #14563	; 0x38e3
   39b04:	ldr	r1, [r4, #176]	; 0xb0
   39b08:	umull	r0, r2, r0, r2
   39b0c:	lsr	r2, r2, #3
   39b10:	cmp	r1, #0
   39b14:	cmpgt	r2, r1
   39b18:	movgt	r2, r1
   39b1c:	str	r2, [r4, #160]	; 0xa0
   39b20:	ldr	r2, [r4, #20]
   39b24:	mvn	r5, #3
   39b28:	mov	lr, #0
   39b2c:	ldr	r6, [r4, #28]
   39b30:	ldrh	r0, [r4, #130]	; 0x82
   39b34:	ldr	ip, [r4, #60]	; 0x3c
   39b38:	ldr	r1, [r4, #64]	; 0x40
   39b3c:	str	r2, [r3, #8]
   39b40:	add	r2, r2, r6
   39b44:	add	r2, r2, #7
   39b48:	strh	r0, [r3, #12]
   39b4c:	mov	r0, #4
   39b50:	bic	r2, r2, #7
   39b54:	add	ip, ip, r2
   39b58:	strh	r0, [r4, #130]	; 0x82
   39b5c:	mov	r0, lr
   39b60:	sub	r1, r1, r2
   39b64:	str	r6, [r3]
   39b68:	mov	r6, #8
   39b6c:	cmp	r1, r5
   39b70:	str	lr, [r4, #20]
   39b74:	movhi	r1, r5
   39b78:	str	r2, [r4, #28]
   39b7c:	mov	r2, #7
   39b80:	strh	r2, [r3, #14]
   39b84:	str	r6, [r3, #16]
   39b88:	str	lr, [r3, #20]
   39b8c:	str	ip, [r4, #16]
   39b90:	str	r1, [r4, #24]
   39b94:	str	r5, [r3, #4]
   39b98:	add	sp, sp, #8
   39b9c:	ldrd	r4, [sp]
   39ba0:	ldr	r6, [sp, #8]
   39ba4:	add	sp, sp, #12
   39ba8:	pop	{pc}		; (ldr pc, [sp], #4)
   39bac:	ldr	r3, [r0, #32]
   39bb0:	add	r3, r3, #36	; 0x24
   39bb4:	str	r3, [r0, #32]
   39bb8:	b	39b20 <flatcc_builder_start_union_vector@@Base+0xb4>
   39bbc:	mvn	r0, #0
   39bc0:	b	39b98 <flatcc_builder_start_union_vector@@Base+0x12c>
   39bc4:	bl	35860 <flatcc_builder_default_alloc@@Base+0x124>

00039bc8 <flatcc_builder_end_union_vector@@Base>:
   39bc8:	ldr	r3, [r1, #32]
   39bcc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   39bd0:	ldrh	r2, [r3, #14]
   39bd4:	strd	r6, [sp, #8]
   39bd8:	strd	r8, [sp, #16]
   39bdc:	str	lr, [sp, #24]
   39be0:	sub	sp, sp, #12
   39be4:	cmp	r2, #7
   39be8:	bne	39da4 <flatcc_builder_end_union_vector@@Base+0x1dc>
   39bec:	ldr	r5, [r3, #20]
   39bf0:	mov	r4, r1
   39bf4:	mov	r6, r0
   39bf8:	ldr	r8, [r1, #20]
   39bfc:	ldr	r3, [r1, #24]
   39c00:	lsl	r7, r5, #2
   39c04:	add	r2, r7, r5
   39c08:	add	r2, r2, r8
   39c0c:	cmp	r2, r3
   39c10:	str	r2, [r1, #20]
   39c14:	bcs	39d24 <flatcc_builder_end_union_vector@@Base+0x15c>
   39c18:	ldr	r3, [r1, #16]
   39c1c:	adds	r1, r3, r8
   39c20:	beq	39d8c <flatcc_builder_end_union_vector@@Base+0x1c4>
   39c24:	cmp	r5, #0
   39c28:	add	r7, r1, r7
   39c2c:	subne	r0, r7, #1
   39c30:	addne	lr, r3, r5, lsl #3
   39c34:	subne	r2, r1, #4
   39c38:	beq	39c58 <flatcc_builder_end_union_vector@@Base+0x90>
   39c3c:	ldrb	ip, [r3]
   39c40:	add	r3, r3, #8
   39c44:	strb	ip, [r0, #1]!
   39c48:	ldr	ip, [r3, #-4]
   39c4c:	cmp	lr, r3
   39c50:	str	ip, [r2, #4]!
   39c54:	bne	39c3c <flatcc_builder_end_union_vector@@Base+0x74>
   39c58:	mov	r3, r7
   39c5c:	mov	r2, r5
   39c60:	mov	r0, r4
   39c64:	bl	35ac4 <flatcc_builder_default_alloc@@Base+0x388>
   39c68:	subs	r8, r0, #0
   39c6c:	beq	39d9c <flatcc_builder_end_union_vector@@Base+0x1d4>
   39c70:	mvn	ip, #0
   39c74:	mov	r3, #1
   39c78:	mov	r2, r5
   39c7c:	mov	r1, r7
   39c80:	mov	r0, r4
   39c84:	stm	sp, {r3, ip}
   39c88:	bl	38e54 <flatcc_builder_create_vector@@Base>
   39c8c:	mov	r5, r0
   39c90:	mov	r1, #0
   39c94:	ldr	r0, [r4, #16]
   39c98:	ldr	r2, [r4, #20]
   39c9c:	bl	13f78 <memset@plt>
   39ca0:	ldr	r3, [r4, #32]
   39ca4:	stm	r6, {r5, r8}
   39ca8:	ldr	r0, [r4, #60]	; 0x3c
   39cac:	ldr	r2, [r4, #64]	; 0x40
   39cb0:	ldr	ip, [r3]
   39cb4:	ldmib	r3, {r1, lr}
   39cb8:	add	r0, r0, ip
   39cbc:	sub	r2, r2, ip
   39cc0:	str	r0, [r4, #16]
   39cc4:	cmp	r2, r1
   39cc8:	ldrh	r0, [r4, #128]	; 0x80
   39ccc:	movcs	r2, r1
   39cd0:	str	lr, [r4, #20]
   39cd4:	str	ip, [r4, #28]
   39cd8:	ldrh	ip, [r4, #130]	; 0x82
   39cdc:	str	r2, [r4, #24]
   39ce0:	ldr	r2, [r4, #156]	; 0x9c
   39ce4:	str	r1, [r3, #4]
   39ce8:	cmp	r0, ip
   39cec:	sub	r0, r3, #36	; 0x24
   39cf0:	strhcc	ip, [r4, #128]	; 0x80
   39cf4:	ldrh	r1, [r3, #12]
   39cf8:	sub	r3, r2, #1
   39cfc:	str	r0, [r4, #32]
   39d00:	strh	r1, [r4, #130]	; 0x82
   39d04:	str	r3, [r4, #156]	; 0x9c
   39d08:	mov	r0, r6
   39d0c:	add	sp, sp, #12
   39d10:	ldrd	r4, [sp]
   39d14:	ldrd	r6, [sp, #8]
   39d18:	ldrd	r8, [sp, #16]
   39d1c:	add	sp, sp, #24
   39d20:	pop	{pc}		; (ldr pc, [sp], #4)
   39d24:	ldr	ip, [r4, #28]
   39d28:	mov	r0, #1
   39d2c:	add	r1, r1, #60	; 0x3c
   39d30:	mov	r3, r0
   39d34:	str	r0, [sp]
   39d38:	ldr	r9, [r4, #48]	; 0x30
   39d3c:	add	ip, ip, r0
   39d40:	ldr	r0, [r4, #40]	; 0x28
   39d44:	add	r2, ip, r2
   39d48:	blx	r9
   39d4c:	cmp	r0, #0
   39d50:	bne	39d8c <flatcc_builder_end_union_vector@@Base+0x1c4>
   39d54:	ldr	r1, [r4, #28]
   39d58:	ldr	r3, [r4, #60]	; 0x3c
   39d5c:	ldr	r2, [r4, #64]	; 0x40
   39d60:	add	r3, r3, r1
   39d64:	sub	r2, r2, r1
   39d68:	mvn	r1, #3
   39d6c:	str	r3, [r4, #16]
   39d70:	cmn	r2, #4
   39d74:	mvnhi	r2, #3
   39d78:	str	r2, [r4, #24]
   39d7c:	ldr	r2, [r4, #32]
   39d80:	str	r1, [r2, #4]
   39d84:	adds	r1, r3, r8
   39d88:	bne	39c24 <flatcc_builder_end_union_vector@@Base+0x5c>
   39d8c:	mov	r3, #0
   39d90:	str	r3, [r6]
   39d94:	str	r3, [r6, #4]
   39d98:	b	39d08 <flatcc_builder_end_union_vector@@Base+0x140>
   39d9c:	mov	r5, r8
   39da0:	b	39c90 <flatcc_builder_end_union_vector@@Base+0xc8>
   39da4:	movw	r1, #39296	; 0x9980
   39da8:	movt	r1, #5
   39dac:	ldr	r3, [pc, #12]	; 39dc0 <flatcc_builder_end_union_vector@@Base+0x1f8>
   39db0:	movw	r0, #40076	; 0x9c8c
   39db4:	movt	r0, #5
   39db8:	movw	r2, #1617	; 0x651
   39dbc:	bl	14014 <__assert_fail@plt>
   39dc0:	andeq	r9, r5, r4, lsl r8

00039dc4 <flatcc_builder_union_vector_edit@@Base>:
   39dc4:	ldr	r0, [r0, #16]
   39dc8:	bx	lr

00039dcc <flatcc_builder_union_vector_count@@Base>:
   39dcc:	ldr	r3, [r0, #32]
   39dd0:	ldr	r0, [r3, #20]
   39dd4:	bx	lr

00039dd8 <flatcc_builder_extend_union_vector@@Base>:
   39dd8:	ldr	ip, [r0, #32]
   39ddc:	strd	r4, [sp, #-20]!	; 0xffffffec
   39de0:	mov	r4, r0
   39de4:	ldr	r3, [ip, #20]
   39de8:	strd	r6, [sp, #8]
   39dec:	str	lr, [sp, #16]
   39df0:	sub	sp, sp, #12
   39df4:	adds	r3, r1, r3
   39df8:	movcs	r2, #1
   39dfc:	movcc	r2, #0
   39e00:	cmn	r3, #-536870911	; 0xe0000001
   39e04:	movls	r0, #0
   39e08:	movhi	r0, #1
   39e0c:	orrs	r5, r2, r0
   39e10:	bne	39eb8 <flatcc_builder_extend_union_vector@@Base+0xe0>
   39e14:	ldr	r6, [r4, #20]
   39e18:	str	r3, [ip, #20]
   39e1c:	ldr	r3, [r4, #24]
   39e20:	add	r2, r6, r1, lsl #3
   39e24:	cmp	r2, r3
   39e28:	str	r2, [r4, #20]
   39e2c:	bcs	39e4c <flatcc_builder_extend_union_vector@@Base+0x74>
   39e30:	ldr	r0, [r4, #16]
   39e34:	add	r0, r0, r6
   39e38:	add	sp, sp, #12
   39e3c:	ldrd	r4, [sp]
   39e40:	ldrd	r6, [sp, #8]
   39e44:	add	sp, sp, #16
   39e48:	pop	{pc}		; (ldr pc, [sp], #4)
   39e4c:	ldr	ip, [r4, #28]
   39e50:	mov	r0, #1
   39e54:	add	r1, r4, #60	; 0x3c
   39e58:	mov	r3, r0
   39e5c:	str	r0, [sp]
   39e60:	ldr	r7, [r4, #48]	; 0x30
   39e64:	add	ip, ip, r0
   39e68:	ldr	r0, [r4, #40]	; 0x28
   39e6c:	add	r2, ip, r2
   39e70:	blx	r7
   39e74:	cmp	r0, #0
   39e78:	bne	39eb0 <flatcc_builder_extend_union_vector@@Base+0xd8>
   39e7c:	ldr	r2, [r4, #28]
   39e80:	ldr	r0, [r4, #60]	; 0x3c
   39e84:	ldr	r3, [r4, #64]	; 0x40
   39e88:	add	r0, r0, r2
   39e8c:	sub	r3, r3, r2
   39e90:	mvn	r2, #3
   39e94:	str	r0, [r4, #16]
   39e98:	cmn	r3, #4
   39e9c:	mvnhi	r3, #3
   39ea0:	str	r3, [r4, #24]
   39ea4:	ldr	r3, [r4, #32]
   39ea8:	str	r2, [r3, #4]
   39eac:	b	39e34 <flatcc_builder_extend_union_vector@@Base+0x5c>
   39eb0:	mov	r0, r5
   39eb4:	b	39e38 <flatcc_builder_extend_union_vector@@Base+0x60>
   39eb8:	bl	35900 <flatcc_builder_default_alloc@@Base+0x1c4>

00039ebc <flatcc_builder_truncate_union_vector@@Base>:
   39ebc:	mov	r3, r0
   39ec0:	ldr	r0, [r0, #32]
   39ec4:	str	r4, [sp, #-8]!
   39ec8:	ldrh	r2, [r0, #14]
   39ecc:	str	lr, [sp, #4]
   39ed0:	cmp	r2, #7
   39ed4:	bne	39f24 <flatcc_builder_truncate_union_vector@@Base+0x68>
   39ed8:	mov	lr, r1
   39edc:	ldr	r1, [r0, #20]
   39ee0:	cmp	r1, lr
   39ee4:	bcc	39f40 <flatcc_builder_truncate_union_vector@@Base+0x84>
   39ee8:	ldr	r2, [r0, #16]
   39eec:	sub	ip, r1, lr
   39ef0:	mov	r1, #0
   39ef4:	str	ip, [r0, #20]
   39ef8:	ldr	r0, [r3, #16]
   39efc:	ldr	ip, [r3, #20]
   39f00:	mul	r2, r2, lr
   39f04:	sub	ip, ip, r2
   39f08:	add	r0, r0, ip
   39f0c:	str	ip, [r3, #20]
   39f10:	bl	13f78 <memset@plt>
   39f14:	ldr	r4, [sp]
   39f18:	add	sp, sp, #4
   39f1c:	mov	r0, #0
   39f20:	pop	{pc}		; (ldr pc, [sp], #4)
   39f24:	movw	r1, #39296	; 0x9980
   39f28:	movt	r1, #5
   39f2c:	ldr	r3, [pc, #40]	; 39f5c <flatcc_builder_truncate_union_vector@@Base+0xa0>
   39f30:	movw	r0, #40076	; 0x9c8c
   39f34:	movt	r0, #5
   39f38:	movw	r2, #1665	; 0x681
   39f3c:	bl	14014 <__assert_fail@plt>
   39f40:	movw	r1, #39296	; 0x9980
   39f44:	movt	r1, #5
   39f48:	ldr	r3, [pc, #12]	; 39f5c <flatcc_builder_truncate_union_vector@@Base+0xa0>
   39f4c:	movw	r0, #39856	; 0x9bb0
   39f50:	movt	r0, #5
   39f54:	movw	r2, #1666	; 0x682
   39f58:	bl	14014 <__assert_fail@plt>
   39f5c:	andeq	r9, r5, r4, lsr r8

00039f60 <flatcc_builder_union_vector_push@@Base>:
   39f60:	strd	r4, [sp, #-20]!	; 0xffffffec
   39f64:	strd	r6, [sp, #8]
   39f68:	str	lr, [sp, #16]
   39f6c:	sub	sp, sp, #20
   39f70:	add	r3, sp, #16
   39f74:	stmdb	r3, {r1, r2}
   39f78:	ldr	r2, [r0, #32]
   39f7c:	ldrh	r3, [r2, #14]
   39f80:	cmp	r3, #7
   39f84:	bne	3a048 <flatcc_builder_union_vector_push@@Base+0xe8>
   39f88:	ldr	r3, [r2, #20]
   39f8c:	cmn	r3, #-536870911	; 0xe0000001
   39f90:	beq	3a040 <flatcc_builder_union_vector_push@@Base+0xe0>
   39f94:	ldr	r5, [r0, #20]
   39f98:	add	r3, r3, #1
   39f9c:	mov	r4, r0
   39fa0:	ldr	r1, [r0, #24]
   39fa4:	str	r3, [r2, #20]
   39fa8:	add	r3, r5, #8
   39fac:	cmp	r3, r1
   39fb0:	str	r3, [r0, #20]
   39fb4:	bcs	39fdc <flatcc_builder_union_vector_push@@Base+0x7c>
   39fb8:	ldr	r3, [r0, #16]
   39fbc:	adds	r0, r3, r5
   39fc0:	ldrdne	r6, [sp, #8]
   39fc4:	strdne	r6, [r3, r5]
   39fc8:	add	sp, sp, #20
   39fcc:	ldrd	r4, [sp]
   39fd0:	ldrd	r6, [sp, #8]
   39fd4:	add	sp, sp, #16
   39fd8:	pop	{pc}		; (ldr pc, [sp], #4)
   39fdc:	ldr	r2, [r4, #28]
   39fe0:	mov	r0, #1
   39fe4:	add	r1, r4, #60	; 0x3c
   39fe8:	mov	r3, r0
   39fec:	str	r0, [sp]
   39ff0:	ldr	r0, [r4, #40]	; 0x28
   39ff4:	add	r2, r5, r2
   39ff8:	ldr	r6, [r4, #48]	; 0x30
   39ffc:	add	r2, r2, #9
   3a000:	blx	r6
   3a004:	cmp	r0, #0
   3a008:	bne	3a040 <flatcc_builder_union_vector_push@@Base+0xe0>
   3a00c:	ldr	r1, [r4, #28]
   3a010:	ldr	r3, [r4, #60]	; 0x3c
   3a014:	ldr	r2, [r4, #64]	; 0x40
   3a018:	add	r3, r3, r1
   3a01c:	sub	r2, r2, r1
   3a020:	mvn	r1, #3
   3a024:	str	r3, [r4, #16]
   3a028:	cmn	r2, #4
   3a02c:	mvnhi	r2, #3
   3a030:	str	r2, [r4, #24]
   3a034:	ldr	r2, [r4, #32]
   3a038:	str	r1, [r2, #4]
   3a03c:	b	39fbc <flatcc_builder_union_vector_push@@Base+0x5c>
   3a040:	mov	r0, #0
   3a044:	b	39fc8 <flatcc_builder_union_vector_push@@Base+0x68>
   3a048:	movw	r1, #39296	; 0x9980
   3a04c:	movt	r1, #5
   3a050:	ldr	r3, [pc, #12]	; 3a064 <flatcc_builder_union_vector_push@@Base+0x104>
   3a054:	movw	r0, #40076	; 0x9c8c
   3a058:	movt	r0, #5
   3a05c:	movw	r2, #1677	; 0x68d
   3a060:	bl	14014 <__assert_fail@plt>
   3a064:	andeq	r9, r5, ip, asr r8

0003a068 <flatcc_builder_append_union_vector@@Base>:
   3a068:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3a06c:	mov	r5, r0
   3a070:	ldr	r0, [r0, #32]
   3a074:	ldrh	r3, [r0, #14]
   3a078:	strd	r6, [sp, #8]
   3a07c:	strd	r8, [sp, #16]
   3a080:	str	lr, [sp, #24]
   3a084:	sub	sp, sp, #12
   3a088:	cmp	r3, #7
   3a08c:	bne	3a184 <flatcc_builder_append_union_vector@@Base+0x11c>
   3a090:	ldr	r3, [r0, #20]
   3a094:	mov	r7, r1
   3a098:	adds	r1, r2, r3
   3a09c:	movcs	r4, #1
   3a0a0:	movcc	r4, #0
   3a0a4:	cmn	r1, #-536870911	; 0xe0000001
   3a0a8:	movls	r3, #0
   3a0ac:	movhi	r3, #1
   3a0b0:	orrs	r4, r4, r3
   3a0b4:	bne	3a180 <flatcc_builder_append_union_vector@@Base+0x118>
   3a0b8:	ldr	r8, [r5, #20]
   3a0bc:	lsl	r6, r2, #3
   3a0c0:	ldr	r3, [r5, #24]
   3a0c4:	str	r1, [r0, #20]
   3a0c8:	add	ip, r6, r8
   3a0cc:	cmp	ip, r3
   3a0d0:	str	ip, [r5, #20]
   3a0d4:	bcs	3a114 <flatcc_builder_append_union_vector@@Base+0xac>
   3a0d8:	ldr	r3, [r5, #16]
   3a0dc:	adds	r3, r3, r8
   3a0e0:	beq	3a0f8 <flatcc_builder_append_union_vector@@Base+0x90>
   3a0e4:	mov	r0, r3
   3a0e8:	mov	r2, r6
   3a0ec:	mov	r1, r7
   3a0f0:	bl	13eb8 <memcpy@plt>
   3a0f4:	mov	r3, r0
   3a0f8:	mov	r0, r3
   3a0fc:	add	sp, sp, #12
   3a100:	ldrd	r4, [sp]
   3a104:	ldrd	r6, [sp, #8]
   3a108:	ldrd	r8, [sp, #16]
   3a10c:	add	sp, sp, #24
   3a110:	pop	{pc}		; (ldr pc, [sp], #4)
   3a114:	ldr	r2, [r5, #28]
   3a118:	mov	r0, #1
   3a11c:	add	r1, r5, #60	; 0x3c
   3a120:	mov	r3, r0
   3a124:	str	r0, [sp]
   3a128:	ldr	r9, [r5, #48]	; 0x30
   3a12c:	add	r2, r2, r0
   3a130:	ldr	r0, [r5, #40]	; 0x28
   3a134:	add	r2, r2, ip
   3a138:	blx	r9
   3a13c:	cmp	r0, #0
   3a140:	bne	3a178 <flatcc_builder_append_union_vector@@Base+0x110>
   3a144:	ldr	r1, [r5, #28]
   3a148:	ldr	r3, [r5, #60]	; 0x3c
   3a14c:	ldr	r2, [r5, #64]	; 0x40
   3a150:	add	r3, r3, r1
   3a154:	sub	r2, r2, r1
   3a158:	mvn	r1, #3
   3a15c:	str	r3, [r5, #16]
   3a160:	cmn	r2, #4
   3a164:	mvnhi	r2, #3
   3a168:	str	r2, [r5, #24]
   3a16c:	ldr	r2, [r5, #32]
   3a170:	str	r1, [r2, #4]
   3a174:	b	3a0dc <flatcc_builder_append_union_vector@@Base+0x74>
   3a178:	mov	r3, r4
   3a17c:	b	3a0f8 <flatcc_builder_append_union_vector@@Base+0x90>
   3a180:	bl	35900 <flatcc_builder_default_alloc@@Base+0x1c4>
   3a184:	movw	r1, #39296	; 0x9980
   3a188:	movt	r1, #5
   3a18c:	ldr	r3, [pc, #12]	; 3a1a0 <flatcc_builder_append_union_vector@@Base+0x138>
   3a190:	movw	r0, #40076	; 0x9c8c
   3a194:	movt	r0, #5
   3a198:	movw	r2, #1692	; 0x69c
   3a19c:	bl	14014 <__assert_fail@plt>
   3a1a0:	andeq	r9, r5, r0, lsl #17

0003a1a4 <flatcc_builder_create_string@@Base>:
   3a1a4:	strd	r4, [sp, #-16]!
   3a1a8:	mov	r4, r0
   3a1ac:	mov	ip, #4
   3a1b0:	str	r6, [sp, #8]
   3a1b4:	cmp	r2, #0
   3a1b8:	str	lr, [sp, #12]
   3a1bc:	sub	sp, sp, #88	; 0x58
   3a1c0:	moveq	r6, #2
   3a1c4:	ldr	lr, [r0, #136]	; 0x88
   3a1c8:	add	r3, sp, #12
   3a1cc:	str	r2, [sp, #12]
   3a1d0:	str	r3, [sp, #24]
   3a1d4:	mov	r3, #1
   3a1d8:	moveq	r1, r3
   3a1dc:	str	ip, [sp, #28]
   3a1e0:	sub	r0, lr, r2
   3a1e4:	sub	r0, r0, #1
   3a1e8:	and	r0, r0, #3
   3a1ec:	add	r0, r0, r3
   3a1f0:	beq	3a208 <flatcc_builder_create_string@@Base+0x64>
   3a1f4:	add	ip, r2, ip
   3a1f8:	mov	r6, #3
   3a1fc:	str	r1, [sp, #32]
   3a200:	mov	r1, #2
   3a204:	str	r2, [sp, #36]	; 0x24
   3a208:	ldr	r3, [pc, #136]	; 3a298 <flatcc_builder_create_string@@Base+0xf4>
   3a20c:	add	r1, r1, #1
   3a210:	add	r2, sp, #88	; 0x58
   3a214:	add	ip, r0, ip
   3a218:	add	r1, r2, r1, lsl #3
   3a21c:	sub	r5, lr, ip
   3a220:	cmp	lr, r5
   3a224:	str	ip, [sp, #16]
   3a228:	str	r6, [sp, #20]
   3a22c:	str	r3, [r1, #-72]	; 0xffffffb8
   3a230:	str	r0, [r1, #-68]	; 0xffffffbc
   3a234:	ble	3a278 <flatcc_builder_create_string@@Base+0xd4>
   3a238:	mov	r2, r6
   3a23c:	mov	r3, r5
   3a240:	str	ip, [sp]
   3a244:	add	r1, sp, #24
   3a248:	ldr	r0, [r4, #36]	; 0x24
   3a24c:	ldr	r6, [r4, #44]	; 0x2c
   3a250:	blx	r6
   3a254:	cmp	r0, #0
   3a258:	bne	3a294 <flatcc_builder_create_string@@Base+0xf0>
   3a25c:	mov	r0, r5
   3a260:	str	r5, [r4, #136]	; 0x88
   3a264:	add	sp, sp, #88	; 0x58
   3a268:	ldrd	r4, [sp]
   3a26c:	ldr	r6, [sp, #8]
   3a270:	add	sp, sp, #12
   3a274:	pop	{pc}		; (ldr pc, [sp], #4)
   3a278:	movw	r1, #39296	; 0x9980
   3a27c:	movt	r1, #5
   3a280:	movw	r0, #35672	; 0x8b58
   3a284:	movt	r0, #4
   3a288:	sub	r3, r3, #124	; 0x7c
   3a28c:	movw	r2, #647	; 0x287
   3a290:	bl	14014 <__assert_fail@plt>
   3a294:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   3a298:	ldrdeq	r9, [r5], -r8

0003a29c <flatcc_builder_create_string_str@@Base>:
   3a29c:	strd	r4, [sp, #-16]!
   3a2a0:	mov	r4, r0
   3a2a4:	mov	r0, r1
   3a2a8:	str	r6, [sp, #8]
   3a2ac:	mov	r6, r1
   3a2b0:	str	lr, [sp, #12]
   3a2b4:	sub	sp, sp, #88	; 0x58
   3a2b8:	bl	13f54 <strlen@plt>
   3a2bc:	ldr	r5, [r4, #136]	; 0x88
   3a2c0:	mov	r2, #4
   3a2c4:	add	r1, sp, #12
   3a2c8:	mov	r3, #1
   3a2cc:	cmp	r0, #0
   3a2d0:	str	r0, [sp, #12]
   3a2d4:	str	r1, [sp, #24]
   3a2d8:	str	r2, [sp, #28]
   3a2dc:	sub	ip, r5, #1
   3a2e0:	sub	ip, ip, r0
   3a2e4:	and	ip, ip, #3
   3a2e8:	add	ip, ip, r3
   3a2ec:	beq	3a370 <flatcc_builder_create_string_str@@Base+0xd4>
   3a2f0:	add	lr, r0, r2
   3a2f4:	mov	r1, #2
   3a2f8:	str	r6, [sp, #32]
   3a2fc:	mov	r2, #3
   3a300:	str	r0, [sp, #36]	; 0x24
   3a304:	ldr	r3, [pc, #148]	; 3a3a0 <flatcc_builder_create_string_str@@Base+0x104>
   3a308:	add	r0, ip, lr
   3a30c:	add	r1, r1, #1
   3a310:	add	lr, sp, #88	; 0x58
   3a314:	sub	r6, r5, r0
   3a318:	add	r1, lr, r1, lsl #3
   3a31c:	cmp	r5, r6
   3a320:	str	r0, [sp, #16]
   3a324:	str	r2, [sp, #20]
   3a328:	str	r3, [r1, #-72]	; 0xffffffb8
   3a32c:	str	ip, [r1, #-68]	; 0xffffffbc
   3a330:	ble	3a380 <flatcc_builder_create_string_str@@Base+0xe4>
   3a334:	mov	r3, r6
   3a338:	add	r1, sp, #24
   3a33c:	str	r0, [sp]
   3a340:	ldr	r0, [r4, #36]	; 0x24
   3a344:	ldr	r5, [r4, #44]	; 0x2c
   3a348:	blx	r5
   3a34c:	cmp	r0, #0
   3a350:	bne	3a39c <flatcc_builder_create_string_str@@Base+0x100>
   3a354:	mov	r0, r6
   3a358:	str	r6, [r4, #136]	; 0x88
   3a35c:	add	sp, sp, #88	; 0x58
   3a360:	ldrd	r4, [sp]
   3a364:	ldr	r6, [sp, #8]
   3a368:	add	sp, sp, #12
   3a36c:	pop	{pc}		; (ldr pc, [sp], #4)
   3a370:	mov	lr, r2
   3a374:	mov	r1, r3
   3a378:	mov	r2, #2
   3a37c:	b	3a304 <flatcc_builder_create_string_str@@Base+0x68>
   3a380:	movw	r1, #39296	; 0x9980
   3a384:	movt	r1, #5
   3a388:	movw	r0, #35672	; 0x8b58
   3a38c:	movt	r0, #4
   3a390:	sub	r3, r3, #124	; 0x7c
   3a394:	movw	r2, #647	; 0x287
   3a398:	bl	14014 <__assert_fail@plt>
   3a39c:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   3a3a0:	ldrdeq	r9, [r5], -r8

0003a3a4 <flatcc_builder_create_string_strn@@Base>:
   3a3a4:	strd	r4, [sp, #-16]!
   3a3a8:	mov	r4, r0
   3a3ac:	mov	r5, r2
   3a3b0:	str	r6, [sp, #8]
   3a3b4:	mov	r6, r1
   3a3b8:	mov	r1, #0
   3a3bc:	mov	r0, r6
   3a3c0:	str	lr, [sp, #12]
   3a3c4:	sub	sp, sp, #88	; 0x58
   3a3c8:	bl	13f9c <memchr@plt>
   3a3cc:	ldr	lr, [r4, #136]	; 0x88
   3a3d0:	cmp	r0, #0
   3a3d4:	mov	ip, #4
   3a3d8:	subne	r5, r0, r6
   3a3dc:	add	r3, sp, #12
   3a3e0:	cmp	r5, #0
   3a3e4:	mov	r0, #1
   3a3e8:	moveq	r2, #2
   3a3ec:	str	r5, [sp, #12]
   3a3f0:	str	r3, [sp, #24]
   3a3f4:	sub	r1, lr, #1
   3a3f8:	str	ip, [sp, #28]
   3a3fc:	sub	r1, r1, r5
   3a400:	and	r1, r1, #3
   3a404:	add	r1, r1, r0
   3a408:	beq	3a420 <flatcc_builder_create_string_strn@@Base+0x7c>
   3a40c:	add	ip, r5, ip
   3a410:	mov	r2, #3
   3a414:	str	r6, [sp, #32]
   3a418:	mov	r0, #2
   3a41c:	str	r5, [sp, #36]	; 0x24
   3a420:	ldr	r3, [pc, #132]	; 3a4ac <flatcc_builder_create_string_strn@@Base+0x108>
   3a424:	add	r5, sp, #88	; 0x58
   3a428:	add	r0, r0, #1
   3a42c:	add	r0, r5, r0, lsl #3
   3a430:	add	ip, r1, ip
   3a434:	sub	r5, lr, ip
   3a438:	cmp	lr, r5
   3a43c:	str	ip, [sp, #16]
   3a440:	str	r2, [sp, #20]
   3a444:	str	r3, [r0, #-72]	; 0xffffffb8
   3a448:	str	r1, [r0, #-68]	; 0xffffffbc
   3a44c:	ble	3a48c <flatcc_builder_create_string_strn@@Base+0xe8>
   3a450:	mov	r3, r5
   3a454:	add	r1, sp, #24
   3a458:	str	ip, [sp]
   3a45c:	ldr	r0, [r4, #36]	; 0x24
   3a460:	ldr	r6, [r4, #44]	; 0x2c
   3a464:	blx	r6
   3a468:	cmp	r0, #0
   3a46c:	bne	3a4a8 <flatcc_builder_create_string_strn@@Base+0x104>
   3a470:	mov	r0, r5
   3a474:	str	r5, [r4, #136]	; 0x88
   3a478:	add	sp, sp, #88	; 0x58
   3a47c:	ldrd	r4, [sp]
   3a480:	ldr	r6, [sp, #8]
   3a484:	add	sp, sp, #12
   3a488:	pop	{pc}		; (ldr pc, [sp], #4)
   3a48c:	movw	r1, #39296	; 0x9980
   3a490:	movt	r1, #5
   3a494:	movw	r0, #35672	; 0x8b58
   3a498:	movt	r0, #4
   3a49c:	sub	r3, r3, #124	; 0x7c
   3a4a0:	movw	r2, #647	; 0x287
   3a4a4:	bl	14014 <__assert_fail@plt>
   3a4a8:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   3a4ac:	ldrdeq	r9, [r5], -r8

0003a4b0 <flatcc_builder_end_string@@Base>:
   3a4b0:	ldr	r3, [r0, #32]
   3a4b4:	strd	r4, [sp, #-16]!
   3a4b8:	ldrh	r2, [r3, #14]
   3a4bc:	str	r6, [sp, #8]
   3a4c0:	str	lr, [sp, #12]
   3a4c4:	sub	sp, sp, #88	; 0x58
   3a4c8:	cmp	r2, #6
   3a4cc:	bne	3a654 <flatcc_builder_end_string@@Base+0x1a4>
   3a4d0:	ldr	r3, [r3, #20]
   3a4d4:	mov	r4, r0
   3a4d8:	ldr	r2, [r0, #20]
   3a4dc:	cmp	r3, r2
   3a4e0:	bne	3a638 <flatcc_builder_end_string@@Base+0x188>
   3a4e4:	ldr	lr, [r4, #136]	; 0x88
   3a4e8:	add	r2, sp, #12
   3a4ec:	mov	ip, #4
   3a4f0:	cmp	r3, #0
   3a4f4:	mov	r0, #1
   3a4f8:	str	r3, [sp, #12]
   3a4fc:	str	r2, [sp, #24]
   3a500:	str	ip, [sp, #28]
   3a504:	ldr	r2, [r4, #16]
   3a508:	moveq	r2, #2
   3a50c:	sub	r1, lr, r3
   3a510:	sub	r1, r1, #1
   3a514:	and	r1, r1, #3
   3a518:	add	r1, r1, r0
   3a51c:	bne	3a604 <flatcc_builder_end_string@@Base+0x154>
   3a520:	ldr	r3, [pc, #328]	; 3a670 <flatcc_builder_end_string@@Base+0x1c0>
   3a524:	add	r5, sp, #88	; 0x58
   3a528:	add	r0, r0, #1
   3a52c:	add	r0, r5, r0, lsl #3
   3a530:	add	ip, r1, ip
   3a534:	sub	r5, lr, ip
   3a538:	cmp	lr, r5
   3a53c:	str	ip, [sp, #16]
   3a540:	str	r2, [sp, #20]
   3a544:	str	r3, [r0, #-72]	; 0xffffffb8
   3a548:	str	r1, [r0, #-68]	; 0xffffffbc
   3a54c:	ble	3a61c <flatcc_builder_end_string@@Base+0x16c>
   3a550:	add	r1, sp, #24
   3a554:	mov	r3, r5
   3a558:	str	ip, [sp]
   3a55c:	ldr	r0, [r4, #36]	; 0x24
   3a560:	ldr	r6, [r4, #44]	; 0x2c
   3a564:	blx	r6
   3a568:	subs	r1, r0, #0
   3a56c:	bne	3a618 <flatcc_builder_end_string@@Base+0x168>
   3a570:	cmp	r5, #0
   3a574:	str	r5, [r4, #136]	; 0x88
   3a578:	beq	3a5ec <flatcc_builder_end_string@@Base+0x13c>
   3a57c:	ldr	r0, [r4, #16]
   3a580:	ldr	r2, [r4, #20]
   3a584:	bl	13f78 <memset@plt>
   3a588:	ldr	r3, [r4, #32]
   3a58c:	ldr	r0, [r4, #60]	; 0x3c
   3a590:	ldr	r2, [r4, #64]	; 0x40
   3a594:	ldr	ip, [r3]
   3a598:	ldmib	r3, {r1, lr}
   3a59c:	add	r0, r0, ip
   3a5a0:	sub	r2, r2, ip
   3a5a4:	str	r0, [r4, #16]
   3a5a8:	cmp	r2, r1
   3a5ac:	ldrh	r0, [r4, #128]	; 0x80
   3a5b0:	movcs	r2, r1
   3a5b4:	str	lr, [r4, #20]
   3a5b8:	str	ip, [r4, #28]
   3a5bc:	ldrh	ip, [r4, #130]	; 0x82
   3a5c0:	str	r2, [r4, #24]
   3a5c4:	ldr	r2, [r4, #156]	; 0x9c
   3a5c8:	str	r1, [r3, #4]
   3a5cc:	cmp	r0, ip
   3a5d0:	sub	r0, r3, #36	; 0x24
   3a5d4:	strhcc	ip, [r4, #128]	; 0x80
   3a5d8:	ldrh	r1, [r3, #12]
   3a5dc:	sub	r3, r2, #1
   3a5e0:	str	r0, [r4, #32]
   3a5e4:	strh	r1, [r4, #130]	; 0x82
   3a5e8:	str	r3, [r4, #156]	; 0x9c
   3a5ec:	mov	r0, r5
   3a5f0:	add	sp, sp, #88	; 0x58
   3a5f4:	ldrd	r4, [sp]
   3a5f8:	ldr	r6, [sp, #8]
   3a5fc:	add	sp, sp, #12
   3a600:	pop	{pc}		; (ldr pc, [sp], #4)
   3a604:	add	ip, r3, ip
   3a608:	mov	r0, #2
   3a60c:	strd	r2, [sp, #32]
   3a610:	mov	r2, #3
   3a614:	b	3a520 <flatcc_builder_end_string@@Base+0x70>
   3a618:	bl	358d8 <flatcc_builder_default_alloc@@Base+0x19c>
   3a61c:	movw	r1, #39296	; 0x9980
   3a620:	movt	r1, #5
   3a624:	movw	r0, #35672	; 0x8b58
   3a628:	movt	r0, #4
   3a62c:	sub	r3, r3, #124	; 0x7c
   3a630:	movw	r2, #647	; 0x287
   3a634:	bl	14014 <__assert_fail@plt>
   3a638:	movw	r1, #39296	; 0x9980
   3a63c:	movt	r1, #5
   3a640:	ldr	r3, [pc, #44]	; 3a674 <flatcc_builder_end_string@@Base+0x1c4>
   3a644:	movw	r0, #40128	; 0x9cc0
   3a648:	movt	r0, #5
   3a64c:	movw	r2, #1733	; 0x6c5
   3a650:	bl	14014 <__assert_fail@plt>
   3a654:	movw	r1, #39296	; 0x9980
   3a658:	movt	r1, #5
   3a65c:	ldr	r3, [pc, #16]	; 3a674 <flatcc_builder_end_string@@Base+0x1c4>
   3a660:	movw	r0, #39424	; 0x9a00
   3a664:	movt	r0, #5
   3a668:	movw	r2, #1732	; 0x6c4
   3a66c:	bl	14014 <__assert_fail@plt>
   3a670:	ldrdeq	r9, [r5], -r8
   3a674:	andeq	r9, r5, r4, lsr #17

0003a678 <flatcc_builder_string_edit@@Base>:
   3a678:	ldr	r0, [r0, #16]
   3a67c:	bx	lr

0003a680 <flatcc_builder_string_len@@Base>:
   3a680:	ldr	r3, [r0, #32]
   3a684:	ldr	r0, [r3, #20]
   3a688:	bx	lr

0003a68c <flatcc_builder_table_add@@Base>:
   3a68c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3a690:	mov	r4, r0
   3a694:	ldr	r0, [r0, #32]
   3a698:	ldrh	r0, [r0, #14]
   3a69c:	strd	r6, [sp, #8]
   3a6a0:	strd	r8, [sp, #16]
   3a6a4:	str	lr, [sp, #24]
   3a6a8:	sub	sp, sp, #12
   3a6ac:	cmp	r0, #3
   3a6b0:	bne	3a814 <flatcc_builder_table_add@@Base+0x188>
   3a6b4:	movw	r0, #32764	; 0x7ffc
   3a6b8:	cmp	r1, r0
   3a6bc:	bhi	3a7f8 <flatcc_builder_table_add@@Base+0x16c>
   3a6c0:	ldrh	r0, [r4, #130]	; 0x82
   3a6c4:	lsl	r7, r1, #1
   3a6c8:	ldr	ip, [r4, #4]
   3a6cc:	cmp	r0, r3
   3a6d0:	strhcc	r3, [r4, #130]	; 0x82
   3a6d4:	ldrh	r5, [ip, r7]
   3a6d8:	add	ip, ip, r7
   3a6dc:	cmp	r5, #0
   3a6e0:	bne	3a7dc <flatcc_builder_table_add@@Base+0x150>
   3a6e4:	ldr	r9, [r4, #12]
   3a6e8:	movw	lr, #31153	; 0x79b1
   3a6ec:	movt	lr, #40503	; 0x9e37
   3a6f0:	uxth	r6, r1
   3a6f4:	sub	r8, r3, #1
   3a6f8:	ldr	r0, [r4, #20]
   3a6fc:	rsb	r3, r3, #0
   3a700:	eor	r1, r1, r9
   3a704:	mul	r1, lr, r1
   3a708:	add	r8, r8, r0
   3a70c:	ldr	r0, [r4, #24]
   3a710:	and	r8, r8, r3
   3a714:	eor	r1, r1, r2
   3a718:	add	r2, r2, r8
   3a71c:	mul	r1, lr, r1
   3a720:	cmp	r2, r0
   3a724:	str	r1, [r4, #12]
   3a728:	str	r2, [r4, #20]
   3a72c:	bcs	3a768 <flatcc_builder_table_add@@Base+0xdc>
   3a730:	ldr	r0, [r4, #16]
   3a734:	add	r3, r8, #4
   3a738:	add	r0, r0, r8
   3a73c:	strh	r3, [ip]
   3a740:	ldrh	r3, [r4, #8]
   3a744:	cmp	r3, r6
   3a748:	addls	r6, r6, #1
   3a74c:	strhls	r6, [r4, #8]
   3a750:	add	sp, sp, #12
   3a754:	ldrd	r4, [sp]
   3a758:	ldrd	r6, [sp, #8]
   3a75c:	ldrd	r8, [sp, #16]
   3a760:	add	sp, sp, #24
   3a764:	pop	{pc}		; (ldr pc, [sp], #4)
   3a768:	ldr	ip, [r4, #28]
   3a76c:	mov	r0, #1
   3a770:	add	r1, r4, #60	; 0x3c
   3a774:	mov	r3, r0
   3a778:	str	r0, [sp]
   3a77c:	ldr	r9, [r4, #48]	; 0x30
   3a780:	add	ip, ip, r0
   3a784:	ldr	r0, [r4, #40]	; 0x28
   3a788:	add	r2, ip, r2
   3a78c:	blx	r9
   3a790:	cmp	r0, #0
   3a794:	bne	3a7d4 <flatcc_builder_table_add@@Base+0x148>
   3a798:	ldr	ip, [r4, #4]
   3a79c:	movw	r2, #65532	; 0xfffc
   3a7a0:	ldr	r5, [r4, #28]
   3a7a4:	ldr	r3, [r4, #64]	; 0x40
   3a7a8:	add	ip, ip, r7
   3a7ac:	ldr	r0, [r4, #60]	; 0x3c
   3a7b0:	ldr	r1, [r4, #32]
   3a7b4:	sub	r3, r3, r5
   3a7b8:	cmp	r3, r2
   3a7bc:	add	r0, r0, r5
   3a7c0:	movcs	r3, r2
   3a7c4:	str	r0, [r4, #16]
   3a7c8:	str	r3, [r4, #24]
   3a7cc:	str	r2, [r1, #4]
   3a7d0:	b	3a734 <flatcc_builder_table_add@@Base+0xa8>
   3a7d4:	mov	r0, r5
   3a7d8:	b	3a750 <flatcc_builder_table_add@@Base+0xc4>
   3a7dc:	movw	r1, #39296	; 0x9980
   3a7e0:	movt	r1, #5
   3a7e4:	ldr	r3, [pc, #68]	; 3a830 <flatcc_builder_table_add@@Base+0x1a4>
   3a7e8:	movw	r0, #35672	; 0x8b58
   3a7ec:	movt	r0, #4
   3a7f0:	movw	r2, #1784	; 0x6f8
   3a7f4:	bl	14014 <__assert_fail@plt>
   3a7f8:	movw	r1, #39296	; 0x9980
   3a7fc:	movt	r1, #5
   3a800:	ldr	r3, [pc, #40]	; 3a830 <flatcc_builder_table_add@@Base+0x1a4>
   3a804:	movw	r0, #40164	; 0x9ce4
   3a808:	movt	r0, #5
   3a80c:	movw	r2, #1774	; 0x6ee
   3a810:	bl	14014 <__assert_fail@plt>
   3a814:	movw	r1, #39296	; 0x9980
   3a818:	movt	r1, #5
   3a81c:	ldr	r3, [pc, #12]	; 3a830 <flatcc_builder_table_add@@Base+0x1a4>
   3a820:	movw	r0, #40012	; 0x9c4c
   3a824:	movt	r0, #5
   3a828:	movw	r2, #1773	; 0x6ed
   3a82c:	bl	14014 <__assert_fail@plt>
   3a830:	andeq	r9, r5, r0, asr #17

0003a834 <flatcc_builder_table_edit@@Base>:
   3a834:	ldr	r2, [r0, #32]
   3a838:	ldrh	r2, [r2, #14]
   3a83c:	cmp	r2, #3
   3a840:	bne	3a858 <flatcc_builder_table_edit@@Base+0x24>
   3a844:	ldr	r3, [r0, #20]
   3a848:	ldr	r0, [r0, #16]
   3a84c:	sub	r3, r3, r1
   3a850:	add	r0, r0, r3
   3a854:	bx	lr
   3a858:	movw	r1, #39296	; 0x9980
   3a85c:	movt	r1, #5
   3a860:	ldr	r3, [pc, #20]	; 3a87c <flatcc_builder_table_edit@@Base+0x48>
   3a864:	movw	r0, #40012	; 0x9c4c
   3a868:	movt	r0, #5
   3a86c:	str	r4, [sp, #-8]!
   3a870:	movw	r2, #1794	; 0x702
   3a874:	str	lr, [sp, #4]
   3a878:	bl	14014 <__assert_fail@plt>
   3a87c:	ldrdeq	r9, [r5], -ip

0003a880 <flatcc_builder_table_add_copy@@Base>:
   3a880:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3a884:	mov	r5, r3
   3a888:	ldr	r3, [r0, #32]
   3a88c:	ldrh	r3, [r3, #14]
   3a890:	strd	r6, [sp, #8]
   3a894:	strd	r8, [sp, #16]
   3a898:	strd	sl, [sp, #24]
   3a89c:	str	lr, [sp, #32]
   3a8a0:	sub	sp, sp, #12
   3a8a4:	cmp	r3, #3
   3a8a8:	ldrh	ip, [sp, #48]	; 0x30
   3a8ac:	bne	3aa38 <flatcc_builder_table_add_copy@@Base+0x1b8>
   3a8b0:	movw	r3, #32764	; 0x7ffc
   3a8b4:	cmp	r1, r3
   3a8b8:	bhi	3aa1c <flatcc_builder_table_add_copy@@Base+0x19c>
   3a8bc:	ldrh	r3, [r0, #130]	; 0x82
   3a8c0:	mov	r7, r2
   3a8c4:	lsl	r8, r1, #1
   3a8c8:	mov	r4, r0
   3a8cc:	ldr	r2, [r0, #4]
   3a8d0:	cmp	r3, ip
   3a8d4:	strhcc	ip, [r0, #130]	; 0x82
   3a8d8:	ldrh	r9, [r2, r8]
   3a8dc:	add	r2, r2, r8
   3a8e0:	cmp	r9, #0
   3a8e4:	bne	3aa00 <flatcc_builder_table_add_copy@@Base+0x180>
   3a8e8:	ldr	lr, [r4, #12]
   3a8ec:	movw	r0, #31153	; 0x79b1
   3a8f0:	movt	r0, #40503	; 0x9e37
   3a8f4:	uxth	r6, r1
   3a8f8:	sub	r3, ip, #1
   3a8fc:	ldr	sl, [r4, #20]
   3a900:	rsb	ip, ip, #0
   3a904:	eor	r1, r1, lr
   3a908:	ldr	lr, [r4, #24]
   3a90c:	mul	r1, r0, r1
   3a910:	add	r3, r3, sl
   3a914:	and	sl, r3, ip
   3a918:	add	ip, r5, sl
   3a91c:	eor	r1, r1, r5
   3a920:	cmp	ip, lr
   3a924:	str	ip, [r4, #20]
   3a928:	mul	r1, r0, r1
   3a92c:	str	r1, [r4, #12]
   3a930:	bcs	3a98c <flatcc_builder_table_add_copy@@Base+0x10c>
   3a934:	ldr	r3, [r4, #16]
   3a938:	add	r1, sl, #4
   3a93c:	strh	r1, [r2]
   3a940:	ldrh	r2, [r4, #8]
   3a944:	cmp	r2, r6
   3a948:	addls	r6, r6, #1
   3a94c:	strhls	r6, [r4, #8]
   3a950:	adds	r3, r3, sl
   3a954:	beq	3a96c <flatcc_builder_table_add_copy@@Base+0xec>
   3a958:	mov	r0, r3
   3a95c:	mov	r2, r5
   3a960:	mov	r1, r7
   3a964:	bl	13eb8 <memcpy@plt>
   3a968:	mov	r3, r0
   3a96c:	mov	r0, r3
   3a970:	add	sp, sp, #12
   3a974:	ldrd	r4, [sp]
   3a978:	ldrd	r6, [sp, #8]
   3a97c:	ldrd	r8, [sp, #16]
   3a980:	ldrd	sl, [sp, #24]
   3a984:	add	sp, sp, #32
   3a988:	pop	{pc}		; (ldr pc, [sp], #4)
   3a98c:	ldr	r2, [r4, #28]
   3a990:	mov	r0, #1
   3a994:	add	r1, r4, #60	; 0x3c
   3a998:	mov	r3, r0
   3a99c:	str	r0, [sp]
   3a9a0:	ldr	fp, [r4, #48]	; 0x30
   3a9a4:	add	r2, r2, r0
   3a9a8:	ldr	r0, [r4, #40]	; 0x28
   3a9ac:	add	r2, r2, ip
   3a9b0:	blx	fp
   3a9b4:	cmp	r0, #0
   3a9b8:	bne	3a9f8 <flatcc_builder_table_add_copy@@Base+0x178>
   3a9bc:	ldr	r2, [r4, #4]
   3a9c0:	movw	r0, #65532	; 0xfffc
   3a9c4:	ldr	r3, [r4, #28]
   3a9c8:	ldr	r1, [r4, #64]	; 0x40
   3a9cc:	add	r2, r2, r8
   3a9d0:	ldr	lr, [r4, #60]	; 0x3c
   3a9d4:	ldr	ip, [r4, #32]
   3a9d8:	sub	r1, r1, r3
   3a9dc:	cmp	r1, r0
   3a9e0:	add	r3, lr, r3
   3a9e4:	movcs	r1, r0
   3a9e8:	str	r3, [r4, #16]
   3a9ec:	str	r1, [r4, #24]
   3a9f0:	str	r0, [ip, #4]
   3a9f4:	b	3a938 <flatcc_builder_table_add_copy@@Base+0xb8>
   3a9f8:	mov	r3, r9
   3a9fc:	b	3a96c <flatcc_builder_table_add_copy@@Base+0xec>
   3aa00:	movw	r1, #39296	; 0x9980
   3aa04:	movt	r1, #5
   3aa08:	ldr	r3, [pc, #68]	; 3aa54 <flatcc_builder_table_add_copy@@Base+0x1d4>
   3aa0c:	movw	r0, #35672	; 0x8b58
   3aa10:	movt	r0, #4
   3aa14:	movw	r2, #1784	; 0x6f8
   3aa18:	bl	14014 <__assert_fail@plt>
   3aa1c:	movw	r1, #39296	; 0x9980
   3aa20:	movt	r1, #5
   3aa24:	ldr	r3, [pc, #40]	; 3aa54 <flatcc_builder_table_add_copy@@Base+0x1d4>
   3aa28:	movw	r0, #40164	; 0x9ce4
   3aa2c:	movt	r0, #5
   3aa30:	movw	r2, #1774	; 0x6ee
   3aa34:	bl	14014 <__assert_fail@plt>
   3aa38:	movw	r1, #39296	; 0x9980
   3aa3c:	movt	r1, #5
   3aa40:	ldr	r3, [pc, #12]	; 3aa54 <flatcc_builder_table_add_copy@@Base+0x1d4>
   3aa44:	movw	r0, #40012	; 0x9c4c
   3aa48:	movt	r0, #5
   3aa4c:	movw	r2, #1773	; 0x6ed
   3aa50:	bl	14014 <__assert_fail@plt>
   3aa54:	andeq	r9, r5, r0, asr #17

0003aa58 <flatcc_builder_table_add_offset@@Base>:
   3aa58:	ldr	r3, [r0, #32]
   3aa5c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3aa60:	ldrh	r3, [r3, #14]
   3aa64:	strd	r6, [sp, #8]
   3aa68:	strd	r8, [sp, #16]
   3aa6c:	str	lr, [sp, #24]
   3aa70:	sub	sp, sp, #12
   3aa74:	cmp	r3, #3
   3aa78:	bne	3abd8 <flatcc_builder_table_add_offset@@Base+0x180>
   3aa7c:	movw	r3, #32764	; 0x7ffc
   3aa80:	cmp	r1, r3
   3aa84:	bhi	3abbc <flatcc_builder_table_add_offset@@Base+0x164>
   3aa88:	ldr	ip, [r0, #4]
   3aa8c:	lsl	r7, r1, #1
   3aa90:	mov	r4, r0
   3aa94:	ldrh	r5, [ip, r7]
   3aa98:	add	ip, ip, r7
   3aa9c:	cmp	r5, #0
   3aaa0:	bne	3aba0 <flatcc_builder_table_add_offset@@Base+0x148>
   3aaa4:	ldr	r2, [r0, #12]
   3aaa8:	movw	r3, #31153	; 0x79b1
   3aaac:	movt	r3, #40503	; 0x9e37
   3aab0:	uxth	r6, r1
   3aab4:	ldr	r8, [r0, #20]
   3aab8:	ldr	r0, [r0, #24]
   3aabc:	eor	r1, r1, r2
   3aac0:	mul	r1, r3, r1
   3aac4:	add	r8, r8, #3
   3aac8:	bic	r8, r8, #3
   3aacc:	add	r2, r8, #4
   3aad0:	eor	r1, r1, #4
   3aad4:	cmp	r2, r0
   3aad8:	str	r2, [r4, #20]
   3aadc:	mul	r1, r3, r1
   3aae0:	str	r1, [r4, #12]
   3aae4:	bhi	3ab34 <flatcc_builder_table_add_offset@@Base+0xdc>
   3aae8:	ldr	r0, [r4, #16]
   3aaec:	uxth	r2, r8
   3aaf0:	add	r0, r0, r8
   3aaf4:	add	r3, r2, #4
   3aaf8:	strh	r3, [ip]
   3aafc:	ldrh	r3, [r4, #8]
   3ab00:	cmp	r3, r6
   3ab04:	ldr	r3, [r4]
   3ab08:	addls	r6, r6, #1
   3ab0c:	strhls	r6, [r4, #8]
   3ab10:	add	r1, r3, #2
   3ab14:	str	r1, [r4]
   3ab18:	strh	r2, [r3]
   3ab1c:	add	sp, sp, #12
   3ab20:	ldrd	r4, [sp]
   3ab24:	ldrd	r6, [sp, #8]
   3ab28:	ldrd	r8, [sp, #16]
   3ab2c:	add	sp, sp, #24
   3ab30:	pop	{pc}		; (ldr pc, [sp], #4)
   3ab34:	ldr	ip, [r4, #28]
   3ab38:	mov	r0, #1
   3ab3c:	add	r1, r4, #60	; 0x3c
   3ab40:	mov	r3, r0
   3ab44:	str	r0, [sp]
   3ab48:	ldr	r0, [r4, #40]	; 0x28
   3ab4c:	add	r2, r2, ip
   3ab50:	ldr	r9, [r4, #48]	; 0x30
   3ab54:	blx	r9
   3ab58:	cmp	r0, #0
   3ab5c:	bne	3ab98 <flatcc_builder_table_add_offset@@Base+0x140>
   3ab60:	ldr	ip, [r4, #4]
   3ab64:	movw	r2, #65532	; 0xfffc
   3ab68:	ldrd	r0, [r4, #28]
   3ab6c:	ldr	r3, [r4, #64]	; 0x40
   3ab70:	add	ip, ip, r7
   3ab74:	ldr	r5, [r4, #60]	; 0x3c
   3ab78:	sub	r3, r3, r0
   3ab7c:	cmp	r3, r2
   3ab80:	add	r0, r5, r0
   3ab84:	movcs	r3, r2
   3ab88:	str	r0, [r4, #16]
   3ab8c:	str	r3, [r4, #24]
   3ab90:	str	r2, [r1, #4]
   3ab94:	b	3aaec <flatcc_builder_table_add_offset@@Base+0x94>
   3ab98:	mov	r0, r5
   3ab9c:	b	3ab1c <flatcc_builder_table_add_offset@@Base+0xc4>
   3aba0:	movw	r1, #39296	; 0x9980
   3aba4:	movt	r1, #5
   3aba8:	ldr	r3, [pc, #68]	; 3abf4 <flatcc_builder_table_add_offset@@Base+0x19c>
   3abac:	movw	r0, #35672	; 0x8b58
   3abb0:	movt	r0, #4
   3abb4:	movw	r2, #1819	; 0x71b
   3abb8:	bl	14014 <__assert_fail@plt>
   3abbc:	movw	r1, #39296	; 0x9980
   3abc0:	movt	r1, #5
   3abc4:	ldr	r3, [pc, #40]	; 3abf4 <flatcc_builder_table_add_offset@@Base+0x19c>
   3abc8:	movw	r0, #40164	; 0x9ce4
   3abcc:	movt	r0, #5
   3abd0:	movw	r2, #1812	; 0x714
   3abd4:	bl	14014 <__assert_fail@plt>
   3abd8:	movw	r1, #39296	; 0x9980
   3abdc:	movt	r1, #5
   3abe0:	ldr	r3, [pc, #12]	; 3abf4 <flatcc_builder_table_add_offset@@Base+0x19c>
   3abe4:	movw	r0, #40012	; 0x9c4c
   3abe8:	movt	r0, #5
   3abec:	movw	r2, #1811	; 0x713
   3abf0:	bl	14014 <__assert_fail@plt>
   3abf4:	strdeq	r9, [r5], -r8

0003abf8 <flatcc_builder_table_add_union@@Base>:
   3abf8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3abfc:	strd	r6, [sp, #8]
   3ac00:	strd	r8, [sp, #16]
   3ac04:	str	lr, [sp, #24]
   3ac08:	sub	sp, sp, #20
   3ac0c:	add	ip, sp, #16
   3ac10:	stmdb	ip, {r2, r3}
   3ac14:	ldr	r3, [r0, #32]
   3ac18:	ldrb	r7, [sp, #8]
   3ac1c:	ldr	r6, [sp, #12]
   3ac20:	ldrh	r3, [r3, #14]
   3ac24:	cmp	r3, #3
   3ac28:	bne	3ade4 <flatcc_builder_table_add_union@@Base+0x1ec>
   3ac2c:	cmp	r7, #0
   3ac30:	mov	r4, r0
   3ac34:	mov	r5, r1
   3ac38:	beq	3ad1c <flatcc_builder_table_add_union@@Base+0x124>
   3ac3c:	cmp	r6, #0
   3ac40:	beq	3ac64 <flatcc_builder_table_add_union@@Base+0x6c>
   3ac44:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   3ac48:	cmp	r0, #0
   3ac4c:	beq	3ae38 <flatcc_builder_table_add_union@@Base+0x240>
   3ac50:	ldr	r3, [r4, #32]
   3ac54:	ldrh	r3, [r3, #14]
   3ac58:	str	r6, [r0]
   3ac5c:	cmp	r3, #3
   3ac60:	bne	3ae00 <flatcc_builder_table_add_union@@Base+0x208>
   3ac64:	sub	r1, r5, #1
   3ac68:	movw	r3, #32764	; 0x7ffc
   3ac6c:	cmp	r1, r3
   3ac70:	bhi	3ae1c <flatcc_builder_table_add_union@@Base+0x224>
   3ac74:	ldrh	r3, [r4, #130]	; 0x82
   3ac78:	lsl	r8, r1, #1
   3ac7c:	cmp	r3, #0
   3ac80:	moveq	r3, #1
   3ac84:	strheq	r3, [r4, #130]	; 0x82
   3ac88:	ldr	r3, [r4, #4]
   3ac8c:	ldrh	r2, [r3, r8]
   3ac90:	add	r0, r3, r8
   3ac94:	cmp	r2, #0
   3ac98:	bne	3adc8 <flatcc_builder_table_add_union@@Base+0x1d0>
   3ac9c:	ldr	r2, [r4, #12]
   3aca0:	movw	r3, #31153	; 0x79b1
   3aca4:	movt	r3, #40503	; 0x9e37
   3aca8:	uxth	r6, r1
   3acac:	ldr	r5, [r4, #20]
   3acb0:	ldr	ip, [r4, #24]
   3acb4:	eor	r1, r1, r2
   3acb8:	mul	r1, r3, r1
   3acbc:	add	r2, r5, #1
   3acc0:	cmp	r2, ip
   3acc4:	str	r2, [r4, #20]
   3acc8:	eor	r1, r1, #1
   3accc:	mul	r1, r3, r1
   3acd0:	str	r1, [r4, #12]
   3acd4:	bcs	3ad40 <flatcc_builder_table_add_union@@Base+0x148>
   3acd8:	ldr	r3, [r4, #16]
   3acdc:	add	r2, r5, #4
   3ace0:	strh	r2, [r0]
   3ace4:	ldrh	r2, [r4, #8]
   3ace8:	cmp	r2, r6
   3acec:	addls	r6, r6, #1
   3acf0:	strhls	r6, [r4, #8]
   3acf4:	cmn	r3, r5
   3acf8:	beq	3adac <flatcc_builder_table_add_union@@Base+0x1b4>
   3acfc:	mov	r0, #0
   3ad00:	strb	r7, [r3, r5]
   3ad04:	add	sp, sp, #20
   3ad08:	ldrd	r4, [sp]
   3ad0c:	ldrd	r6, [sp, #8]
   3ad10:	ldrd	r8, [sp, #16]
   3ad14:	add	sp, sp, #24
   3ad18:	pop	{pc}		; (ldr pc, [sp], #4)
   3ad1c:	cmp	r6, #0
   3ad20:	beq	3ac64 <flatcc_builder_table_add_union@@Base+0x6c>
   3ad24:	movw	r1, #39296	; 0x9980
   3ad28:	movt	r1, #5
   3ad2c:	ldr	r3, [pc, #288]	; 3ae54 <flatcc_builder_table_add_union@@Base+0x25c>
   3ad30:	movw	r0, #40232	; 0x9d28
   3ad34:	movt	r0, #5
   3ad38:	movw	r2, #1519	; 0x5ef
   3ad3c:	bl	14014 <__assert_fail@plt>
   3ad40:	ldr	r2, [r4, #28]
   3ad44:	mov	r0, #1
   3ad48:	add	r1, r4, #60	; 0x3c
   3ad4c:	mov	r3, r0
   3ad50:	str	r0, [sp]
   3ad54:	ldr	r0, [r4, #40]	; 0x28
   3ad58:	add	r2, r5, r2
   3ad5c:	ldr	r9, [r4, #48]	; 0x30
   3ad60:	add	r2, r2, #2
   3ad64:	blx	r9
   3ad68:	cmp	r0, #0
   3ad6c:	bne	3adac <flatcc_builder_table_add_union@@Base+0x1b4>
   3ad70:	ldr	r0, [r4, #4]
   3ad74:	movw	r1, #65532	; 0xfffc
   3ad78:	ldr	ip, [r4, #28]
   3ad7c:	ldr	r2, [r4, #64]	; 0x40
   3ad80:	add	r0, r0, r8
   3ad84:	ldr	r3, [r4, #60]	; 0x3c
   3ad88:	ldr	lr, [r4, #32]
   3ad8c:	sub	r2, r2, ip
   3ad90:	cmp	r2, r1
   3ad94:	add	r3, r3, ip
   3ad98:	movcs	r2, r1
   3ad9c:	str	r3, [r4, #16]
   3ada0:	str	r2, [r4, #24]
   3ada4:	str	r1, [lr, #4]
   3ada8:	b	3acdc <flatcc_builder_table_add_union@@Base+0xe4>
   3adac:	movw	r1, #39296	; 0x9980
   3adb0:	movt	r1, #5
   3adb4:	ldr	r3, [pc, #152]	; 3ae54 <flatcc_builder_table_add_union@@Base+0x25c>
   3adb8:	movw	r0, #40280	; 0x9d58
   3adbc:	movt	r0, #5
   3adc0:	movw	r2, #1526	; 0x5f6
   3adc4:	bl	14014 <__assert_fail@plt>
   3adc8:	movw	r1, #39296	; 0x9980
   3adcc:	movt	r1, #5
   3add0:	ldr	r3, [pc, #128]	; 3ae58 <flatcc_builder_table_add_union@@Base+0x260>
   3add4:	movw	r0, #35672	; 0x8b58
   3add8:	movt	r0, #4
   3addc:	movw	r2, #1784	; 0x6f8
   3ade0:	bl	14014 <__assert_fail@plt>
   3ade4:	movw	r1, #39296	; 0x9980
   3ade8:	movt	r1, #5
   3adec:	ldr	r3, [pc, #96]	; 3ae54 <flatcc_builder_table_add_union@@Base+0x25c>
   3adf0:	movw	r0, #40012	; 0x9c4c
   3adf4:	movt	r0, #5
   3adf8:	movw	r2, #1518	; 0x5ee
   3adfc:	bl	14014 <__assert_fail@plt>
   3ae00:	movw	r1, #39296	; 0x9980
   3ae04:	movt	r1, #5
   3ae08:	ldr	r3, [pc, #72]	; 3ae58 <flatcc_builder_table_add_union@@Base+0x260>
   3ae0c:	movw	r0, #40012	; 0x9c4c
   3ae10:	movt	r0, #5
   3ae14:	movw	r2, #1773	; 0x6ed
   3ae18:	bl	14014 <__assert_fail@plt>
   3ae1c:	movw	r1, #39296	; 0x9980
   3ae20:	movt	r1, #5
   3ae24:	ldr	r3, [pc, #44]	; 3ae58 <flatcc_builder_table_add_union@@Base+0x260>
   3ae28:	movw	r0, #40164	; 0x9ce4
   3ae2c:	movt	r0, #5
   3ae30:	movw	r2, #1774	; 0x6ee
   3ae34:	bl	14014 <__assert_fail@plt>
   3ae38:	movw	r1, #39296	; 0x9980
   3ae3c:	movt	r1, #5
   3ae40:	ldr	r3, [pc, #12]	; 3ae54 <flatcc_builder_table_add_union@@Base+0x25c>
   3ae44:	movw	r0, #40268	; 0x9d4c
   3ae48:	movt	r0, #5
   3ae4c:	movw	r2, #1522	; 0x5f2
   3ae50:	bl	14014 <__assert_fail@plt>
   3ae54:	andeq	r9, r5, r8, lsl r9
   3ae58:	andeq	r9, r5, r0, asr #17

0003ae5c <flatcc_builder_table_add_union_vector@@Base>:
   3ae5c:	strd	r4, [sp, #-20]!	; 0xffffffec
   3ae60:	strd	r6, [sp, #8]
   3ae64:	mov	r7, r1
   3ae68:	str	lr, [sp, #16]
   3ae6c:	sub	sp, sp, #12
   3ae70:	add	r1, sp, #8
   3ae74:	stmdb	r1, {r2, r3}
   3ae78:	ldr	r3, [r0, #32]
   3ae7c:	ldm	sp, {r4, r6}
   3ae80:	ldrh	r3, [r3, #14]
   3ae84:	cmp	r3, #3
   3ae88:	bne	3af28 <flatcc_builder_table_add_union_vector@@Base+0xcc>
   3ae8c:	clz	r3, r6
   3ae90:	clz	r2, r4
   3ae94:	lsr	r3, r3, #5
   3ae98:	lsr	r2, r2, #5
   3ae9c:	cmp	r2, r3
   3aea0:	beq	3aed0 <flatcc_builder_table_add_union_vector@@Base+0x74>
   3aea4:	adds	r4, r4, #0
   3aea8:	movne	r4, #1
   3aeac:	cmp	r4, r3
   3aeb0:	mvnne	r4, #0
   3aeb4:	beq	3af44 <flatcc_builder_table_add_union_vector@@Base+0xe8>
   3aeb8:	mov	r0, r4
   3aebc:	add	sp, sp, #12
   3aec0:	ldrd	r4, [sp]
   3aec4:	ldrd	r6, [sp, #8]
   3aec8:	add	sp, sp, #16
   3aecc:	pop	{pc}		; (ldr pc, [sp], #4)
   3aed0:	cmp	r4, #0
   3aed4:	beq	3aeb8 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3aed8:	sub	r1, r7, #1
   3aedc:	mov	r5, r0
   3aee0:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   3aee4:	subs	r3, r0, #0
   3aee8:	beq	3af60 <flatcc_builder_table_add_union_vector@@Base+0x104>
   3aeec:	mov	r1, r7
   3aef0:	mov	r0, r5
   3aef4:	str	r4, [r3]
   3aef8:	bl	3aa58 <flatcc_builder_table_add_offset@@Base>
   3aefc:	cmp	r0, #0
   3af00:	movne	r4, #0
   3af04:	strne	r6, [r0]
   3af08:	bne	3aeb8 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3af0c:	movw	r1, #39296	; 0x9980
   3af10:	movt	r1, #5
   3af14:	ldr	r3, [pc, #96]	; 3af7c <flatcc_builder_table_add_union_vector@@Base+0x120>
   3af18:	movw	r0, #40268	; 0x9d4c
   3af1c:	movt	r0, #5
   3af20:	movw	r2, #1544	; 0x608
   3af24:	bl	14014 <__assert_fail@plt>
   3af28:	movw	r1, #39296	; 0x9980
   3af2c:	movt	r1, #5
   3af30:	ldr	r3, [pc, #68]	; 3af7c <flatcc_builder_table_add_union_vector@@Base+0x120>
   3af34:	movw	r0, #40012	; 0x9c4c
   3af38:	movt	r0, #5
   3af3c:	mov	r2, #1536	; 0x600
   3af40:	bl	14014 <__assert_fail@plt>
   3af44:	movw	r1, #39296	; 0x9980
   3af48:	movt	r1, #5
   3af4c:	ldr	r3, [pc, #40]	; 3af7c <flatcc_builder_table_add_union_vector@@Base+0x120>
   3af50:	movw	r0, #40292	; 0x9d64
   3af54:	movt	r0, #5
   3af58:	movw	r2, #1537	; 0x601
   3af5c:	bl	14014 <__assert_fail@plt>
   3af60:	movw	r1, #39296	; 0x9980
   3af64:	movt	r1, #5
   3af68:	ldr	r3, [pc, #12]	; 3af7c <flatcc_builder_table_add_union_vector@@Base+0x120>
   3af6c:	movw	r0, #40268	; 0x9d4c
   3af70:	movt	r0, #5
   3af74:	movw	r2, #1540	; 0x604
   3af78:	bl	14014 <__assert_fail@plt>
   3af7c:	andeq	r9, r5, r8, lsr r9

0003af80 <flatcc_builder_push_buffer_alignment@@Base>:
   3af80:	mov	r3, r0
   3af84:	mov	r2, #4
   3af88:	ldrh	r0, [r0, #128]	; 0x80
   3af8c:	strh	r2, [r3, #128]	; 0x80
   3af90:	bx	lr

0003af94 <flatcc_builder_pop_buffer_alignment@@Base>:
   3af94:	ldrh	r3, [r0, #128]	; 0x80
   3af98:	cmp	r3, r1
   3af9c:	strhcc	r1, [r0, #128]	; 0x80
   3afa0:	bx	lr

0003afa4 <flatcc_builder_get_buffer_alignment@@Base>:
   3afa4:	ldrh	r0, [r0, #128]	; 0x80
   3afa8:	bx	lr

0003afac <flatcc_builder_set_vtable_clustering@@Base>:
   3afac:	clz	r1, r1
   3afb0:	lsr	r1, r1, #5
   3afb4:	str	r1, [r0, #180]	; 0xb4
   3afb8:	bx	lr

0003afbc <flatcc_builder_set_block_align@@Base>:
   3afbc:	strh	r1, [r0, #132]	; 0x84
   3afc0:	bx	lr

0003afc4 <flatcc_builder_get_level@@Base>:
   3afc4:	ldr	r0, [r0, #156]	; 0x9c
   3afc8:	bx	lr

0003afcc <flatcc_builder_set_max_level@@Base>:
   3afcc:	ldr	r3, [r0, #160]	; 0xa0
   3afd0:	str	r1, [r0, #176]	; 0xb0
   3afd4:	cmp	r3, r1
   3afd8:	strlt	r1, [r0, #160]	; 0xa0
   3afdc:	bx	lr

0003afe0 <flatcc_builder_get_buffer_size@@Base>:
   3afe0:	ldr	r3, [r0, #136]	; 0x88
   3afe4:	ldr	r0, [r0, #140]	; 0x8c
   3afe8:	sub	r0, r0, r3
   3afec:	bx	lr

0003aff0 <flatcc_builder_get_buffer_start@@Base>:
   3aff0:	ldr	r0, [r0, #136]	; 0x88
   3aff4:	bx	lr

0003aff8 <flatcc_builder_get_buffer_end@@Base>:
   3aff8:	ldr	r0, [r0, #140]	; 0x8c
   3affc:	bx	lr

0003b000 <flatcc_builder_set_vtable_cache_limit@@Base>:
   3b000:	str	r1, [r0, #172]	; 0xac
   3b004:	bx	lr

0003b008 <flatcc_builder_set_identifier@@Base>:
   3b008:	ldr	r3, [pc, #16]	; 3b020 <flatcc_builder_set_identifier@@Base+0x18>
   3b00c:	cmp	r1, #0
   3b010:	moveq	r1, r3
   3b014:	ldr	r3, [r1]
   3b018:	str	r3, [r0, #168]	; 0xa8
   3b01c:	bx	lr
   3b020:	ldrdeq	r9, [r5], -r8

0003b024 <flatcc_builder_get_type@@Base>:
   3b024:	ldr	r0, [r0, #32]
   3b028:	cmp	r0, #0
   3b02c:	ldrhne	r0, [r0, #14]
   3b030:	bx	lr

0003b034 <flatcc_builder_get_type_at@@Base>:
   3b034:	cmp	r1, #0
   3b038:	ble	3b060 <flatcc_builder_get_type_at@@Base+0x2c>
   3b03c:	ldr	r3, [r0, #156]	; 0x9c
   3b040:	cmp	r3, r1
   3b044:	blt	3b060 <flatcc_builder_get_type_at@@Base+0x2c>
   3b048:	ldr	r2, [r0, #32]
   3b04c:	sub	r1, r1, r3
   3b050:	add	r1, r1, r1, lsl #3
   3b054:	add	r1, r2, r1, lsl #2
   3b058:	ldrh	r0, [r1, #14]
   3b05c:	bx	lr
   3b060:	mov	r0, #0
   3b064:	bx	lr

0003b068 <flatcc_builder_get_direct_buffer@@Base>:
   3b068:	ldr	r3, [r0, #184]	; 0xb8
   3b06c:	cmp	r3, #0
   3b070:	bne	3b08c <flatcc_builder_get_direct_buffer@@Base+0x24>
   3b074:	cmp	r1, #0
   3b078:	movne	r3, #0
   3b07c:	movne	r0, r3
   3b080:	moveq	r0, r1
   3b084:	strne	r3, [r1]
   3b088:	bx	lr
   3b08c:	ldrd	r2, [r0, #188]	; 0xbc
   3b090:	cmp	r2, r3
   3b094:	bne	3b074 <flatcc_builder_get_direct_buffer@@Base+0xc>
   3b098:	cmp	r1, #0
   3b09c:	ldrne	r3, [r0, #212]	; 0xd4
   3b0a0:	ldr	r0, [r0, #196]	; 0xc4
   3b0a4:	strne	r3, [r1]
   3b0a8:	bx	lr

0003b0ac <flatcc_builder_copy_buffer@@Base>:
   3b0ac:	ldr	r3, [r0, #184]	; 0xb8
   3b0b0:	cmp	r3, #0
   3b0b4:	beq	3b0dc <flatcc_builder_copy_buffer@@Base+0x30>
   3b0b8:	add	r0, r0, #188	; 0xbc
   3b0bc:	str	r4, [sp, #-8]!
   3b0c0:	str	lr, [sp, #4]
   3b0c4:	bl	3b818 <flatcc_emitter_copy_buffer@@Base>
   3b0c8:	cmp	r0, #0
   3b0cc:	beq	3b0e4 <flatcc_builder_copy_buffer@@Base+0x38>
   3b0d0:	ldr	r4, [sp]
   3b0d4:	add	sp, sp, #4
   3b0d8:	pop	{pc}		; (ldr pc, [sp], #4)
   3b0dc:	mov	r0, r3
   3b0e0:	bx	lr
   3b0e4:	bl	35978 <flatcc_builder_default_alloc@@Base+0x23c>

0003b0e8 <flatcc_builder_finalize_buffer@@Base>:
   3b0e8:	strd	r4, [sp, #-16]!
   3b0ec:	cmp	r1, #0
   3b0f0:	mov	r5, r0
   3b0f4:	ldr	r2, [r0, #136]	; 0x88
   3b0f8:	ldr	r4, [r0, #140]	; 0x8c
   3b0fc:	str	r6, [sp, #8]
   3b100:	str	lr, [sp, #12]
   3b104:	sub	r4, r4, r2
   3b108:	mov	r0, r4
   3b10c:	strne	r4, [r1]
   3b110:	bl	13f18 <malloc@plt>
   3b114:	subs	r6, r0, #0
   3b118:	beq	3b170 <flatcc_builder_finalize_buffer@@Base+0x88>
   3b11c:	ldr	r3, [r5, #184]	; 0xb8
   3b120:	cmp	r3, #0
   3b124:	beq	3b154 <flatcc_builder_finalize_buffer@@Base+0x6c>
   3b128:	mov	r2, r4
   3b12c:	add	r0, r5, #188	; 0xbc
   3b130:	mov	r1, r6
   3b134:	bl	3b818 <flatcc_emitter_copy_buffer@@Base>
   3b138:	cmp	r0, #0
   3b13c:	beq	3b18c <flatcc_builder_finalize_buffer@@Base+0xa4>
   3b140:	mov	r0, r6
   3b144:	ldrd	r4, [sp]
   3b148:	ldr	r6, [sp, #8]
   3b14c:	add	sp, sp, #12
   3b150:	pop	{pc}		; (ldr pc, [sp], #4)
   3b154:	movw	r1, #39296	; 0x9980
   3b158:	movt	r1, #5
   3b15c:	ldr	r3, [pc, #44]	; 3b190 <flatcc_builder_finalize_buffer@@Base+0xa8>
   3b160:	movw	r0, #35672	; 0x8b58
   3b164:	movt	r0, #4
   3b168:	movw	r2, #1948	; 0x79c
   3b16c:	bl	14014 <__assert_fail@plt>
   3b170:	movw	r1, #39296	; 0x9980
   3b174:	movt	r1, #5
   3b178:	ldr	r3, [pc, #16]	; 3b190 <flatcc_builder_finalize_buffer@@Base+0xa8>
   3b17c:	movw	r0, #35672	; 0x8b58
   3b180:	movt	r0, #4
   3b184:	movw	r2, #1944	; 0x798
   3b188:	bl	14014 <__assert_fail@plt>
   3b18c:	bl	35978 <flatcc_builder_default_alloc@@Base+0x23c>
   3b190:	andeq	r9, r5, r0, ror #18

0003b194 <flatcc_builder_finalize_aligned_buffer@@Base>:
   3b194:	strd	r4, [sp, #-20]!	; 0xffffffec
   3b198:	mov	r2, #0
   3b19c:	mov	r5, r0
   3b1a0:	ldr	r3, [r0, #136]	; 0x88
   3b1a4:	ldr	r4, [r0, #140]	; 0x8c
   3b1a8:	strd	r6, [sp, #8]
   3b1ac:	subs	r6, r1, #0
   3b1b0:	ldrh	r1, [r0, #128]	; 0x80
   3b1b4:	str	lr, [sp, #16]
   3b1b8:	sub	sp, sp, #12
   3b1bc:	add	r0, sp, #4
   3b1c0:	sub	r3, r4, r3
   3b1c4:	str	r2, [sp, #4]
   3b1c8:	sub	r4, r1, #1
   3b1cc:	rsb	r2, r1, #0
   3b1d0:	strne	r3, [r6]
   3b1d4:	add	r4, r4, r3
   3b1d8:	cmp	r1, #4
   3b1dc:	and	r4, r4, r2
   3b1e0:	movcc	r1, #4
   3b1e4:	mov	r2, r4
   3b1e8:	bl	13f6c <posix_memalign@plt>
   3b1ec:	cmp	r0, #0
   3b1f0:	beq	3b230 <flatcc_builder_finalize_aligned_buffer@@Base+0x9c>
   3b1f4:	ldr	r0, [sp, #4]
   3b1f8:	cmp	r0, #0
   3b1fc:	beq	3b204 <flatcc_builder_finalize_aligned_buffer@@Base+0x70>
   3b200:	bl	13eac <free@plt>
   3b204:	cmp	r6, #0
   3b208:	movne	r3, #0
   3b20c:	moveq	r7, r6
   3b210:	movne	r7, r3
   3b214:	strne	r3, [r6]
   3b218:	mov	r0, r7
   3b21c:	add	sp, sp, #12
   3b220:	ldrd	r4, [sp]
   3b224:	ldrd	r6, [sp, #8]
   3b228:	add	sp, sp, #16
   3b22c:	pop	{pc}		; (ldr pc, [sp], #4)
   3b230:	ldr	r7, [sp, #4]
   3b234:	cmp	r7, #0
   3b238:	beq	3b204 <flatcc_builder_finalize_aligned_buffer@@Base+0x70>
   3b23c:	ldr	r3, [r5, #184]	; 0xb8
   3b240:	cmp	r3, #0
   3b244:	beq	3b264 <flatcc_builder_finalize_aligned_buffer@@Base+0xd0>
   3b248:	mov	r2, r4
   3b24c:	add	r0, r5, #188	; 0xbc
   3b250:	mov	r1, r7
   3b254:	bl	3b818 <flatcc_emitter_copy_buffer@@Base>
   3b258:	cmp	r0, #0
   3b25c:	bne	3b218 <flatcc_builder_finalize_aligned_buffer@@Base+0x84>
   3b260:	bl	35978 <flatcc_builder_default_alloc@@Base+0x23c>
   3b264:	mov	r0, r7
   3b268:	b	3b200 <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>

0003b26c <flatcc_builder_aligned_alloc@@Base>:
   3b26c:	cmp	r0, #4
   3b270:	str	r4, [sp, #-8]!
   3b274:	mov	r4, #0
   3b278:	str	lr, [sp, #4]
   3b27c:	sub	sp, sp, #8
   3b280:	mov	r2, r1
   3b284:	movcs	r1, r0
   3b288:	movcc	r1, #4
   3b28c:	add	r0, sp, #4
   3b290:	str	r4, [sp, #4]
   3b294:	bl	13f6c <posix_memalign@plt>
   3b298:	cmp	r0, r4
   3b29c:	ldr	r0, [sp, #4]
   3b2a0:	beq	3b2b4 <flatcc_builder_aligned_alloc@@Base+0x48>
   3b2a4:	cmp	r0, #0
   3b2a8:	beq	3b2b4 <flatcc_builder_aligned_alloc@@Base+0x48>
   3b2ac:	bl	13eac <free@plt>
   3b2b0:	mov	r0, r4
   3b2b4:	add	sp, sp, #8
   3b2b8:	ldr	r4, [sp]
   3b2bc:	add	sp, sp, #4
   3b2c0:	pop	{pc}		; (ldr pc, [sp], #4)

0003b2c4 <flatcc_builder_aligned_free@@Base>:
   3b2c4:	b	13eac <free@plt>

0003b2c8 <flatcc_builder_get_emit_context@@Base>:
   3b2c8:	ldr	r0, [r0, #36]	; 0x24
   3b2cc:	bx	lr

0003b2d0 <flatcc_emitter_recycle_page@@Base>:
   3b2d0:	ldr	r3, [r0]
   3b2d4:	cmp	r3, r1
   3b2d8:	beq	3b31c <flatcc_emitter_recycle_page@@Base+0x4c>
   3b2dc:	ldr	r2, [r0, #4]
   3b2e0:	cmp	r2, r1
   3b2e4:	beq	3b31c <flatcc_emitter_recycle_page@@Base+0x4c>
   3b2e8:	push	{lr}		; (str lr, [sp, #-4]!)
   3b2ec:	mov	r0, #0
   3b2f0:	ldr	lr, [r1, #2944]	; 0xb80
   3b2f4:	ldr	ip, [r1, #2948]	; 0xb84
   3b2f8:	str	ip, [lr, #2948]	; 0xb84
   3b2fc:	ldr	r2, [r3, #2948]	; 0xb84
   3b300:	str	lr, [ip, #2944]	; 0xb80
   3b304:	str	r3, [r1, #2944]	; 0xb80
   3b308:	str	r2, [r1, #2948]	; 0xb84
   3b30c:	str	r1, [r2, #2944]	; 0xb80
   3b310:	ldr	r3, [r1, #2944]	; 0xb80
   3b314:	str	r1, [r3, #2948]	; 0xb84
   3b318:	pop	{pc}		; (ldr pc, [sp], #4)
   3b31c:	mvn	r0, #0
   3b320:	bx	lr

0003b324 <flatcc_emitter_reset@@Base>:
   3b324:	ldr	r2, [r0]
   3b328:	cmp	r2, #0
   3b32c:	bxeq	lr
   3b330:	strd	r4, [sp, #-16]!
   3b334:	movw	ip, #64064	; 0xfa40
   3b338:	movt	ip, #65535	; 0xffff
   3b33c:	ldr	r1, [r0, #24]
   3b340:	add	r4, r2, #1472	; 0x5c0
   3b344:	ldr	r3, [r0, #32]
   3b348:	ldr	r5, [r0, #28]
   3b34c:	str	r6, [sp, #8]
   3b350:	str	lr, [sp, #12]
   3b354:	mov	lr, #1472	; 0x5c0
   3b358:	cmp	r3, #0
   3b35c:	stmib	r0, {r2, r4}
   3b360:	moveq	r3, r1
   3b364:	lsr	r1, r1, #2
   3b368:	str	lr, [r0, #12]
   3b36c:	add	r3, r3, r3, lsl #1
   3b370:	str	r4, [r0, #16]
   3b374:	str	lr, [r0, #20]
   3b378:	add	r3, r1, r3, lsr #2
   3b37c:	str	ip, [r2, #2952]	; 0xb88
   3b380:	mov	ip, #0
   3b384:	cmp	r5, r3, lsl #1
   3b388:	str	ip, [r0, #24]
   3b38c:	str	r3, [r0, #32]
   3b390:	bls	3b3e8 <flatcc_emitter_reset@@Base+0xc4>
   3b394:	ldr	r3, [r2, #2944]	; 0xb80
   3b398:	mov	r4, r0
   3b39c:	cmp	r2, r3
   3b3a0:	bne	3b3b8 <flatcc_emitter_reset@@Base+0x94>
   3b3a4:	b	3b3e8 <flatcc_emitter_reset@@Base+0xc4>
   3b3a8:	ldm	r4, {r1, r2}
   3b3ac:	ldr	r3, [r2, #2944]	; 0xb80
   3b3b0:	cmp	r3, r1
   3b3b4:	beq	3b3e8 <flatcc_emitter_reset@@Base+0xc4>
   3b3b8:	ldr	r1, [r3, #2944]	; 0xb80
   3b3bc:	mov	r0, r3
   3b3c0:	str	r1, [r2, #2944]	; 0xb80
   3b3c4:	ldr	r3, [r3, #2944]	; 0xb80
   3b3c8:	str	r2, [r3, #2948]	; 0xb84
   3b3cc:	bl	13eac <free@plt>
   3b3d0:	ldr	r3, [r4, #28]
   3b3d4:	ldr	r2, [r4, #32]
   3b3d8:	sub	r3, r3, #2944	; 0xb80
   3b3dc:	cmp	r3, r2, lsl #1
   3b3e0:	str	r3, [r4, #28]
   3b3e4:	bhi	3b3a8 <flatcc_emitter_reset@@Base+0x84>
   3b3e8:	ldrd	r4, [sp]
   3b3ec:	ldr	r6, [sp, #8]
   3b3f0:	add	sp, sp, #12
   3b3f4:	pop	{pc}		; (ldr pc, [sp], #4)

0003b3f8 <flatcc_emitter_clear@@Base>:
   3b3f8:	ldr	r3, [r0]
   3b3fc:	cmp	r3, #0
   3b400:	bxeq	lr
   3b404:	mov	r1, #0
   3b408:	strd	r4, [sp, #-16]!
   3b40c:	mov	r5, r0
   3b410:	ldr	r2, [r3, #2948]	; 0xb84
   3b414:	str	r6, [sp, #8]
   3b418:	str	lr, [sp, #12]
   3b41c:	str	r1, [r2, #2944]	; 0xb80
   3b420:	ldr	r4, [r3, #2944]	; 0xb80
   3b424:	cmp	r4, r1
   3b428:	bne	3b434 <flatcc_emitter_clear@@Base+0x3c>
   3b42c:	b	3b470 <flatcc_emitter_clear@@Base+0x78>
   3b430:	mov	r4, r3
   3b434:	ldr	r0, [r4, #2948]	; 0xb84
   3b438:	bl	13eac <free@plt>
   3b43c:	ldr	r3, [r4, #2944]	; 0xb80
   3b440:	cmp	r3, #0
   3b444:	bne	3b430 <flatcc_emitter_clear@@Base+0x38>
   3b448:	mov	r0, r4
   3b44c:	bl	13eac <free@plt>
   3b450:	mov	r0, r5
   3b454:	mov	r2, #36	; 0x24
   3b458:	ldrd	r4, [sp]
   3b45c:	mov	r1, #0
   3b460:	ldr	r6, [sp, #8]
   3b464:	ldr	lr, [sp, #12]
   3b468:	add	sp, sp, #16
   3b46c:	b	13f78 <memset@plt>
   3b470:	mov	r4, r3
   3b474:	b	3b448 <flatcc_emitter_clear@@Base+0x50>

0003b478 <flatcc_emitter@@Base>:
   3b478:	cmp	r3, #0
   3b47c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3b480:	mov	r4, r0
   3b484:	ldr	r3, [r0, #24]
   3b488:	strd	r6, [sp, #8]
   3b48c:	strd	r8, [sp, #16]
   3b490:	sub	r8, r2, #1
   3b494:	strd	sl, [sp, #24]
   3b498:	str	lr, [sp, #32]
   3b49c:	sub	sp, sp, #12
   3b4a0:	ldr	ip, [sp, #48]	; 0x30
   3b4a4:	add	r3, r3, ip
   3b4a8:	str	r3, [r0, #24]
   3b4ac:	blt	3b690 <flatcc_emitter@@Base+0x218>
   3b4b0:	ldr	r0, [r0, #20]
   3b4b4:	cmp	r0, ip
   3b4b8:	bcs	3b550 <flatcc_emitter@@Base+0xd8>
   3b4bc:	cmp	r2, #0
   3b4c0:	beq	3b594 <flatcc_emitter@@Base+0x11c>
   3b4c4:	movw	r3, #64064	; 0xfa40
   3b4c8:	movt	r3, #65535	; 0xffff
   3b4cc:	add	r5, r1, #8
   3b4d0:	mov	r8, r2
   3b4d4:	mov	r9, #1472	; 0x5c0
   3b4d8:	str	r3, [sp, #4]
   3b4dc:	ldr	r7, [r5, #-8]
   3b4e0:	ldr	r6, [r5, #-4]
   3b4e4:	cmp	r6, #0
   3b4e8:	beq	3b62c <flatcc_emitter@@Base+0x1b4>
   3b4ec:	mov	r3, r0
   3b4f0:	cmp	r6, r3
   3b4f4:	bls	3b548 <flatcc_emitter@@Base+0xd0>
   3b4f8:	cmp	r3, #0
   3b4fc:	beq	3b5b4 <flatcc_emitter@@Base+0x13c>
   3b500:	sub	fp, r6, r3
   3b504:	mov	r6, r3
   3b508:	mov	r2, r6
   3b50c:	mov	r1, r7
   3b510:	ldr	r0, [r4, #16]
   3b514:	bl	13eb8 <memcpy@plt>
   3b518:	ldr	r2, [r4, #16]
   3b51c:	cmp	fp, #0
   3b520:	add	r7, r7, r6
   3b524:	ldr	r0, [r4, #20]
   3b528:	add	r2, r2, r6
   3b52c:	sub	r3, r0, r6
   3b530:	mov	r0, r3
   3b534:	strd	r2, [r4, #16]
   3b538:	beq	3b62c <flatcc_emitter@@Base+0x1b4>
   3b53c:	mov	r6, fp
   3b540:	cmp	r6, r3
   3b544:	bhi	3b4f8 <flatcc_emitter@@Base+0x80>
   3b548:	mov	fp, #0
   3b54c:	b	3b508 <flatcc_emitter@@Base+0x90>
   3b550:	ldr	r3, [r4, #16]
   3b554:	sub	r0, r0, ip
   3b558:	str	r0, [r4, #20]
   3b55c:	add	ip, r3, ip
   3b560:	str	ip, [r4, #16]
   3b564:	cmp	r2, #0
   3b568:	addne	r4, r1, #8
   3b56c:	beq	3b594 <flatcc_emitter@@Base+0x11c>
   3b570:	mov	r0, r3
   3b574:	ldmdb	r4, {r1, r2}
   3b578:	sub	r8, r8, #1
   3b57c:	bl	13eb8 <memcpy@plt>
   3b580:	ldr	r2, [r4, #-4]
   3b584:	cmn	r8, #1
   3b588:	add	r4, r4, #8
   3b58c:	add	r3, r0, r2
   3b590:	bne	3b570 <flatcc_emitter@@Base+0xf8>
   3b594:	mov	r0, #0
   3b598:	add	sp, sp, #12
   3b59c:	ldrd	r4, [sp]
   3b5a0:	ldrd	r6, [sp, #8]
   3b5a4:	ldrd	r8, [sp, #16]
   3b5a8:	ldrd	sl, [sp, #24]
   3b5ac:	add	sp, sp, #32
   3b5b0:	pop	{pc}		; (ldr pc, [sp], #4)
   3b5b4:	ldr	fp, [r4, #4]
   3b5b8:	cmp	fp, #0
   3b5bc:	beq	3b63c <flatcc_emitter@@Base+0x1c4>
   3b5c0:	ldr	sl, [r4]
   3b5c4:	ldr	r0, [fp, #2944]	; 0xb80
   3b5c8:	cmp	r0, sl
   3b5cc:	beq	3b5f8 <flatcc_emitter@@Base+0x180>
   3b5d0:	str	r0, [r4, #4]
   3b5d4:	ldr	r1, [r0, #2948]	; 0xb84
   3b5d8:	mov	r2, #2944	; 0xb80
   3b5dc:	mov	r3, r2
   3b5e0:	str	r0, [r4, #16]
   3b5e4:	str	r2, [r4, #20]
   3b5e8:	ldr	r2, [r1, #2952]	; 0xb88
   3b5ec:	add	r2, r2, r3
   3b5f0:	str	r2, [r0, #2952]	; 0xb88
   3b5f4:	b	3b4f0 <flatcc_emitter@@Base+0x78>
   3b5f8:	movw	r0, #2956	; 0xb8c
   3b5fc:	bl	13f18 <malloc@plt>
   3b600:	cmp	r0, #0
   3b604:	beq	3b688 <flatcc_emitter@@Base+0x210>
   3b608:	ldr	r2, [r4, #28]
   3b60c:	str	sl, [r0, #2944]	; 0xb80
   3b610:	str	fp, [r0, #2948]	; 0xb84
   3b614:	add	r2, r2, #2944	; 0xb80
   3b618:	str	r2, [r4, #28]
   3b61c:	str	r0, [sl, #2948]	; 0xb84
   3b620:	str	r0, [fp, #2944]	; 0xb80
   3b624:	str	r0, [r4, #4]
   3b628:	b	3b5d4 <flatcc_emitter@@Base+0x15c>
   3b62c:	subs	r8, r8, #1
   3b630:	add	r5, r5, #8
   3b634:	bne	3b4dc <flatcc_emitter@@Base+0x64>
   3b638:	b	3b594 <flatcc_emitter@@Base+0x11c>
   3b63c:	movw	r0, #2956	; 0xb8c
   3b640:	bl	13f18 <malloc@plt>
   3b644:	cmp	r0, #0
   3b648:	beq	3b688 <flatcc_emitter@@Base+0x210>
   3b64c:	ldr	r2, [r4, #28]
   3b650:	add	r1, r0, #1472	; 0x5c0
   3b654:	mov	r3, #1472	; 0x5c0
   3b658:	str	r0, [r4]
   3b65c:	strd	r0, [r4, #4]
   3b660:	str	r9, [r4, #12]
   3b664:	str	r1, [r4, #16]
   3b668:	add	r2, r2, #2944	; 0xb80
   3b66c:	str	r9, [r4, #20]
   3b670:	str	r0, [r0, #2944]	; 0xb80
   3b674:	str	r2, [r4, #28]
   3b678:	ldr	r2, [sp, #4]
   3b67c:	str	r0, [r0, #2948]	; 0xb84
   3b680:	str	r2, [r0, #2952]	; 0xb88
   3b684:	b	3b4f0 <flatcc_emitter@@Base+0x78>
   3b688:	mvn	r0, #0
   3b68c:	b	3b598 <flatcc_emitter@@Base+0x120>
   3b690:	ldr	r0, [r0, #12]
   3b694:	cmp	r0, ip
   3b698:	bcs	3b800 <flatcc_emitter@@Base+0x388>
   3b69c:	add	r5, r1, r2, lsl #3
   3b6a0:	movw	r3, #64064	; 0xfa40
   3b6a4:	movt	r3, #65535	; 0xffff
   3b6a8:	str	r3, [sp, #4]
   3b6ac:	cmn	r8, #1
   3b6b0:	beq	3b594 <flatcc_emitter@@Base+0x11c>
   3b6b4:	ldr	r7, [r5, #-8]
   3b6b8:	ldr	r6, [r5, #-4]
   3b6bc:	cmp	r6, #0
   3b6c0:	add	r7, r7, r6
   3b6c4:	beq	3b714 <flatcc_emitter@@Base+0x29c>
   3b6c8:	mov	r9, #1472	; 0x5c0
   3b6cc:	ldr	r2, [r4, #12]
   3b6d0:	cmp	r2, r6
   3b6d4:	bcs	3b778 <flatcc_emitter@@Base+0x300>
   3b6d8:	cmp	r2, #0
   3b6dc:	beq	3b720 <flatcc_emitter@@Base+0x2a8>
   3b6e0:	sub	r6, r6, r2
   3b6e4:	mov	r1, #0
   3b6e8:	ldr	r3, [r4, #8]
   3b6ec:	rsb	r0, r2, #0
   3b6f0:	add	r7, r7, r0
   3b6f4:	str	r1, [r4, #12]
   3b6f8:	mov	r1, r7
   3b6fc:	add	r3, r3, r0
   3b700:	mov	r0, r3
   3b704:	str	r3, [r4, #8]
   3b708:	bl	13eb8 <memcpy@plt>
   3b70c:	cmp	r6, #0
   3b710:	bne	3b6cc <flatcc_emitter@@Base+0x254>
   3b714:	sub	r5, r5, #8
   3b718:	sub	r8, r8, #1
   3b71c:	b	3b6ac <flatcc_emitter@@Base+0x234>
   3b720:	ldr	fp, [r4]
   3b724:	cmp	fp, #0
   3b728:	beq	3b7bc <flatcc_emitter@@Base+0x344>
   3b72c:	ldr	sl, [r4, #4]
   3b730:	ldr	r0, [fp, #2948]	; 0xb84
   3b734:	cmp	r0, sl
   3b738:	beq	3b788 <flatcc_emitter@@Base+0x310>
   3b73c:	ldr	r3, [fp, #2952]	; 0xb88
   3b740:	sub	r3, r3, #2944	; 0xb80
   3b744:	str	r3, [r0, #2952]	; 0xb88
   3b748:	str	r0, [r4]
   3b74c:	ldr	r3, [r0, #2944]	; 0xb80
   3b750:	mov	r2, #2944	; 0xb80
   3b754:	add	r1, r0, #2944	; 0xb80
   3b758:	ldr	r3, [r3, #2952]	; 0xb88
   3b75c:	str	r1, [r4, #8]
   3b760:	str	r2, [r4, #12]
   3b764:	sub	r3, r3, #2944	; 0xb80
   3b768:	str	r3, [r0, #2952]	; 0xb88
   3b76c:	ldr	r2, [r4, #12]
   3b770:	cmp	r2, r6
   3b774:	bcc	3b6d8 <flatcc_emitter@@Base+0x260>
   3b778:	sub	r1, r2, r6
   3b77c:	mov	r2, r6
   3b780:	mov	r6, #0
   3b784:	b	3b6e8 <flatcc_emitter@@Base+0x270>
   3b788:	movw	r0, #2956	; 0xb8c
   3b78c:	bl	13f18 <malloc@plt>
   3b790:	cmp	r0, #0
   3b794:	beq	3b688 <flatcc_emitter@@Base+0x210>
   3b798:	ldr	r2, [r4, #28]
   3b79c:	str	fp, [r0, #2944]	; 0xb80
   3b7a0:	str	sl, [r0, #2948]	; 0xb84
   3b7a4:	add	r2, r2, #2944	; 0xb80
   3b7a8:	str	r2, [r4, #28]
   3b7ac:	str	r0, [fp, #2948]	; 0xb84
   3b7b0:	str	r0, [sl, #2944]	; 0xb80
   3b7b4:	str	r0, [r4]
   3b7b8:	b	3b74c <flatcc_emitter@@Base+0x2d4>
   3b7bc:	movw	r0, #2956	; 0xb8c
   3b7c0:	bl	13f18 <malloc@plt>
   3b7c4:	cmp	r0, #0
   3b7c8:	beq	3b688 <flatcc_emitter@@Base+0x210>
   3b7cc:	ldr	r3, [r4, #28]
   3b7d0:	add	r2, r0, #1472	; 0x5c0
   3b7d4:	str	r0, [r4]
   3b7d8:	stmib	r4, {r0, r2, r9}
   3b7dc:	add	r3, r3, #2944	; 0xb80
   3b7e0:	str	r2, [r4, #16]
   3b7e4:	str	r9, [r4, #20]
   3b7e8:	str	r3, [r4, #28]
   3b7ec:	ldr	r3, [sp, #4]
   3b7f0:	str	r0, [r0, #2944]	; 0xb80
   3b7f4:	str	r0, [r0, #2948]	; 0xb84
   3b7f8:	str	r3, [r0, #2952]	; 0xb88
   3b7fc:	b	3b6cc <flatcc_emitter@@Base+0x254>
   3b800:	ldr	r3, [r4, #8]
   3b804:	sub	r0, r0, ip
   3b808:	str	r0, [r4, #12]
   3b80c:	sub	r3, r3, ip
   3b810:	str	r3, [r4, #8]
   3b814:	b	3b564 <flatcc_emitter@@Base+0xec>

0003b818 <flatcc_emitter_copy_buffer@@Base>:
   3b818:	ldr	r3, [r0, #24]
   3b81c:	strd	r4, [sp, #-16]!
   3b820:	str	r6, [sp, #8]
   3b824:	str	lr, [sp, #12]
   3b828:	cmp	r3, r2
   3b82c:	movhi	r5, #0
   3b830:	bhi	3b8b0 <flatcc_emitter_copy_buffer@@Base+0x98>
   3b834:	ldr	r5, [r0]
   3b838:	mov	r6, r0
   3b83c:	cmp	r5, #0
   3b840:	beq	3b8b0 <flatcc_emitter_copy_buffer@@Base+0x98>
   3b844:	ldr	r2, [r6, #4]
   3b848:	mov	r0, r1
   3b84c:	ldr	r1, [r6, #8]
   3b850:	cmp	r5, r2
   3b854:	beq	3b8c4 <flatcc_emitter_copy_buffer@@Base+0xac>
   3b858:	ldr	r2, [r6, #12]
   3b85c:	rsb	r2, r2, #2944	; 0xb80
   3b860:	add	r5, r0, r2
   3b864:	bl	13eb8 <memcpy@plt>
   3b868:	ldrd	r2, [r6]
   3b86c:	ldr	r4, [r2, #2944]	; 0xb80
   3b870:	cmp	r4, r3
   3b874:	beq	3b89c <flatcc_emitter_copy_buffer@@Base+0x84>
   3b878:	mov	r2, #2944	; 0xb80
   3b87c:	mov	r1, r4
   3b880:	mov	r0, r5
   3b884:	add	r5, r5, r2
   3b888:	bl	13eb8 <memcpy@plt>
   3b88c:	ldr	r3, [r6, #4]
   3b890:	ldr	r4, [r4, #2944]	; 0xb80
   3b894:	cmp	r3, r4
   3b898:	bne	3b878 <flatcc_emitter_copy_buffer@@Base+0x60>
   3b89c:	ldr	r2, [r6, #20]
   3b8a0:	mov	r1, r4
   3b8a4:	mov	r0, r5
   3b8a8:	rsb	r2, r2, #2944	; 0xb80
   3b8ac:	bl	13eb8 <memcpy@plt>
   3b8b0:	mov	r0, r5
   3b8b4:	ldrd	r4, [sp]
   3b8b8:	ldr	r6, [sp, #8]
   3b8bc:	add	sp, sp, #12
   3b8c0:	pop	{pc}		; (ldr pc, [sp], #4)
   3b8c4:	mov	r2, r3
   3b8c8:	mov	r5, r0
   3b8cc:	bl	13eb8 <memcpy@plt>
   3b8d0:	b	3b8b0 <flatcc_emitter_copy_buffer@@Base+0x98>

0003b8d4 <cmetrohash64_1@@Base>:
   3b8d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3b8d8:	movw	ip, #24283	; 0x5edb
   3b8dc:	movt	ip, #44806	; 0xaf06
   3b8e0:	strd	r6, [sp, #8]
   3b8e4:	adds	r4, r2, ip
   3b8e8:	movw	r6, #23867	; 0x5d3b
   3b8ec:	movt	r6, #24802	; 0x60e2
   3b8f0:	strd	r8, [sp, #16]
   3b8f4:	add	ip, r0, r2
   3b8f8:	strd	sl, [sp, #24]
   3b8fc:	adc	r5, r3, r6
   3b900:	cmp	r3, #0
   3b904:	str	lr, [sp, #32]
   3b908:	sub	sp, sp, #68	; 0x44
   3b90c:	mov	r3, r5
   3b910:	ldr	lr, [sp, #104]	; 0x68
   3b914:	movw	r1, #37345	; 0x91e1
   3b918:	movt	r1, #51258	; 0xc83a
   3b91c:	cmpeq	r2, #31
   3b920:	mov	r2, r4
   3b924:	str	ip, [sp, #52]	; 0x34
   3b928:	umlal	r2, r3, r1, lr
   3b92c:	mov	r4, r2
   3b930:	mov	r5, r3
   3b934:	strd	r4, [sp, #8]
   3b938:	bls	3bbd0 <cmetrohash64_1@@Base+0x2fc>
   3b93c:	movw	lr, #49211	; 0xc03b
   3b940:	movt	lr, #31710	; 0x7bde
   3b944:	str	r4, [sp]
   3b948:	str	r1, [sp, #32]
   3b94c:	movw	r1, #56283	; 0xdbdb
   3b950:	movt	r1, #34376	; 0x8648
   3b954:	mov	fp, r3
   3b958:	mov	sl, r2
   3b95c:	str	r5, [sp, #28]
   3b960:	str	r1, [sp, #36]	; 0x24
   3b964:	movw	r1, #28837	; 0x70a5
   3b968:	movt	r1, #12120	; 0x2f58
   3b96c:	mov	r3, r2
   3b970:	str	r1, [sp, #44]	; 0x2c
   3b974:	sub	r1, ip, #32
   3b978:	mov	ip, r5
   3b97c:	str	r1, [sp, #40]	; 0x28
   3b980:	mov	r1, r5
   3b984:	str	lr, [sp, #48]	; 0x30
   3b988:	ldr	r4, [r0]
   3b98c:	add	r0, r0, #32
   3b990:	ldr	r7, [sp, #32]
   3b994:	ldr	r6, [r0, #-28]	; 0xffffffe4
   3b998:	ldr	r8, [r0, #-24]	; 0xffffffe8
   3b99c:	umull	r4, r5, r4, r7
   3b9a0:	ldr	lr, [r0, #-20]	; 0xffffffec
   3b9a4:	mla	r5, r7, r6, r5
   3b9a8:	ldr	r7, [sp, #36]	; 0x24
   3b9ac:	adds	r3, r4, r3
   3b9b0:	ldr	r6, [r0, #-16]
   3b9b4:	adc	r4, r5, r1
   3b9b8:	lsr	r1, r4, #29
   3b9bc:	umull	r8, r9, r8, r7
   3b9c0:	orr	r5, r1, r3, lsl #3
   3b9c4:	mla	r9, r7, lr, r9
   3b9c8:	ldr	lr, [r0, #-12]
   3b9cc:	lsr	r7, r3, #29
   3b9d0:	orr	r3, r7, r4, lsl #3
   3b9d4:	ldr	r4, [r0, #-8]
   3b9d8:	adds	r3, r3, r2
   3b9dc:	adc	r1, r5, ip
   3b9e0:	adds	sl, r8, sl
   3b9e4:	lsr	r8, sl, #29
   3b9e8:	adc	r5, r9, fp
   3b9ec:	ldr	r9, [sp, #48]	; 0x30
   3b9f0:	lsr	fp, r5, #29
   3b9f4:	orr	r5, r8, r5, lsl #3
   3b9f8:	ldr	r8, [sp]
   3b9fc:	orr	fp, fp, sl, lsl #3
   3ba00:	umull	r6, r7, r6, r9
   3ba04:	adds	sl, r5, r8
   3ba08:	ldr	r5, [sp, #44]	; 0x2c
   3ba0c:	mla	r7, r9, lr, r7
   3ba10:	ldr	r9, [sp, #28]
   3ba14:	ldr	lr, [r0, #-4]
   3ba18:	str	r5, [sp, #16]
   3ba1c:	umull	r4, r5, r4, r5
   3ba20:	adc	fp, fp, r9
   3ba24:	adds	r2, r6, r2
   3ba28:	strd	r4, [sp]
   3ba2c:	adc	ip, r7, ip
   3ba30:	lsr	r6, r2, #29
   3ba34:	ldr	r4, [sp, #4]
   3ba38:	lsr	r7, ip, #29
   3ba3c:	orr	ip, r6, ip, lsl #3
   3ba40:	ldr	r5, [sp, #16]
   3ba44:	orr	r7, r7, r2, lsl #3
   3ba48:	adds	r2, ip, r3
   3ba4c:	adc	ip, r7, r1
   3ba50:	mla	lr, r5, lr, r4
   3ba54:	str	lr, [sp, #4]
   3ba58:	ldrd	r6, [sp]
   3ba5c:	adds	r4, r6, r8
   3ba60:	lsr	lr, r4, #29
   3ba64:	adc	r6, r7, r9
   3ba68:	lsr	r5, r6, #29
   3ba6c:	orr	lr, lr, r6, lsl #3
   3ba70:	orr	r4, r5, r4, lsl #3
   3ba74:	adds	lr, lr, sl
   3ba78:	str	lr, [sp]
   3ba7c:	adc	lr, r4, fp
   3ba80:	str	lr, [sp, #28]
   3ba84:	ldr	lr, [sp, #40]	; 0x28
   3ba88:	cmp	r0, lr
   3ba8c:	bls	3b988 <cmetrohash64_1@@Base+0xb4>
   3ba90:	eor	r5, r3, sl
   3ba94:	ldr	lr, [sp]
   3ba98:	eor	r6, r1, fp
   3ba9c:	str	r5, [sp, #40]	; 0x28
   3baa0:	ldr	r5, [sp, #28]
   3baa4:	ldrd	r8, [sp, #32]
   3baa8:	adds	r4, r3, lr
   3baac:	str	r6, [sp, #32]
   3bab0:	adc	lr, r1, r5
   3bab4:	umull	r4, r5, r4, r8
   3bab8:	mla	r5, r8, lr, r5
   3babc:	adds	r6, r4, sl
   3bac0:	lsl	r4, r6, #31
   3bac4:	adc	lr, r5, fp
   3bac8:	orr	r4, r4, lr, lsr #1
   3bacc:	lsl	lr, lr, #31
   3bad0:	umull	r4, r5, r4, r9
   3bad4:	orr	lr, lr, r6, lsr #1
   3bad8:	eor	r6, r4, r2
   3badc:	mla	r5, r9, lr, r5
   3bae0:	adds	r4, sl, r6
   3bae4:	eor	r7, r5, ip
   3bae8:	umull	r4, r5, r4, r9
   3baec:	adc	r2, fp, r7
   3baf0:	mla	r5, r9, r2, r5
   3baf4:	adds	lr, r4, r3
   3baf8:	lsl	r2, lr, #31
   3bafc:	adc	ip, r5, r1
   3bb00:	adds	r4, r3, r6
   3bb04:	orr	r2, r2, ip, lsr #1
   3bb08:	adc	r1, r1, r7
   3bb0c:	lsl	ip, ip, #31
   3bb10:	umull	r4, r5, r4, r8
   3bb14:	umull	r2, r3, r2, r8
   3bb18:	orr	ip, ip, lr, lsr #1
   3bb1c:	mov	lr, r8
   3bb20:	mla	r5, r8, r1, r5
   3bb24:	strd	r2, [sp, #16]
   3bb28:	mla	r3, r8, ip, r3
   3bb2c:	ldr	r2, [sp, #16]
   3bb30:	mov	ip, r9
   3bb34:	str	r3, [sp, #20]
   3bb38:	ldr	r3, [sp]
   3bb3c:	ldr	r8, [sp, #20]
   3bb40:	eor	r2, r2, r3
   3bb44:	ldr	r3, [sp, #28]
   3bb48:	eor	r8, r8, r3
   3bb4c:	adds	r3, r4, r2
   3bb50:	adc	r1, r5, r8
   3bb54:	adds	sl, sl, r2
   3bb58:	lsl	r4, r3, #31
   3bb5c:	adc	r5, fp, r8
   3bb60:	lsl	r2, r1, #31
   3bb64:	umull	r8, r9, sl, r9
   3bb68:	mov	sl, ip
   3bb6c:	orr	r4, r4, r1, lsr #1
   3bb70:	orr	r3, r2, r3, lsr #1
   3bb74:	mla	r9, ip, r5, r9
   3bb78:	adds	r2, r8, r6
   3bb7c:	umull	r4, r5, r4, ip
   3bb80:	lsl	r1, r2, #31
   3bb84:	adc	ip, r9, r7
   3bb88:	lsl	r6, ip, #31
   3bb8c:	mla	r5, sl, r3, r5
   3bb90:	ldr	r3, [sp, #40]	; 0x28
   3bb94:	orr	ip, r1, ip, lsr #1
   3bb98:	ldr	r1, [sp, #8]
   3bb9c:	orr	r6, r6, r2, lsr #1
   3bba0:	umull	r8, r9, ip, lr
   3bba4:	ldr	r2, [sp, #32]
   3bba8:	eor	r3, r4, r3
   3bbac:	eor	r3, r3, r8
   3bbb0:	mla	r9, lr, r6, r9
   3bbb4:	adds	r3, r1, r3
   3bbb8:	eor	r2, r5, r2
   3bbbc:	str	r3, [sp, #8]
   3bbc0:	eor	r2, r2, r9
   3bbc4:	ldr	r3, [sp, #12]
   3bbc8:	adc	r3, r3, r2
   3bbcc:	str	r3, [sp, #12]
   3bbd0:	ldr	r7, [sp, #52]	; 0x34
   3bbd4:	sub	r3, r7, r0
   3bbd8:	cmp	r3, #15
   3bbdc:	ble	3bd38 <cmetrohash64_1@@Base+0x464>
   3bbe0:	ldr	r2, [r0]
   3bbe4:	movw	r3, #37345	; 0x91e1
   3bbe8:	movt	r3, #51258	; 0xc83a
   3bbec:	movw	sl, #56283	; 0xdbdb
   3bbf0:	movt	sl, #34376	; 0x8648
   3bbf4:	ldr	r1, [r0, #4]
   3bbf8:	movw	r5, #46599	; 0xb607
   3bbfc:	movt	r5, #13299	; 0x33f3
   3bc00:	add	r0, r0, #16
   3bc04:	movw	lr, #42186	; 0xa4ca
   3bc08:	movt	lr, #26887	; 0x6907
   3bc0c:	ldr	r4, [r0, #-8]
   3bc10:	movw	r6, #18043	; 0x467b
   3bc14:	movt	r6, #12846	; 0x322e
   3bc18:	umull	r8, r9, r2, r3
   3bc1c:	str	r5, [sp, #16]
   3bc20:	ldr	r2, [r0, #-4]
   3bc24:	movw	ip, #45150	; 0xb05e
   3bc28:	movt	ip, #5864	; 0x16e8
   3bc2c:	movw	fp, #49211	; 0xc03b
   3bc30:	movt	fp, #31710	; 0x7bde
   3bc34:	mla	r3, r3, r1, r9
   3bc38:	umull	r4, r5, r4, sl
   3bc3c:	mov	r9, r3
   3bc40:	sub	r3, r7, r0
   3bc44:	strd	r4, [sp]
   3bc48:	mov	r5, r9
   3bc4c:	ldmib	sp, {r1, r7}
   3bc50:	mla	r2, sl, r2, r1
   3bc54:	ldr	r1, [sp, #8]
   3bc58:	str	r2, [sp, #4]
   3bc5c:	mov	r2, r5
   3bc60:	ldrd	r4, [sp]
   3bc64:	adds	r9, r8, r1
   3bc68:	ldr	r1, [sp, #12]
   3bc6c:	lsl	r8, r9, #31
   3bc70:	adc	r1, r2, r1
   3bc74:	adds	r7, r4, r7
   3bc78:	mov	r2, r5
   3bc7c:	ldrd	r4, [sp, #12]
   3bc80:	orr	r8, r8, r1, lsr #1
   3bc84:	lsl	r1, r1, #31
   3bc88:	mul	lr, lr, r8
   3bc8c:	orr	r1, r1, r9, lsr #1
   3bc90:	adc	r2, r2, r4
   3bc94:	lsl	r4, r7, #31
   3bc98:	orr	r4, r4, r2, lsr #1
   3bc9c:	lsl	r2, r2, #31
   3bca0:	mla	lr, r6, r1, lr
   3bca4:	orr	r2, r2, r7, lsr #1
   3bca8:	umull	r6, r7, r8, r6
   3bcac:	umull	r8, r9, r8, sl
   3bcb0:	mul	ip, ip, r4
   3bcb4:	add	r7, lr, r7
   3bcb8:	strd	r8, [sp]
   3bcbc:	umull	r8, r9, r4, fp
   3bcc0:	ldr	lr, [sp, #4]
   3bcc4:	mla	ip, r5, r2, ip
   3bcc8:	umull	r4, r5, r4, r5
   3bccc:	mla	r9, fp, r2, r9
   3bcd0:	lsl	r2, r7, #29
   3bcd4:	add	r5, ip, r5
   3bcd8:	lsl	ip, r4, #29
   3bcdc:	mla	r1, sl, r1, lr
   3bce0:	orr	ip, ip, r5, lsr #3
   3bce4:	lsl	lr, r5, #29
   3bce8:	str	r1, [sp, #4]
   3bcec:	lsl	r1, r6, #29
   3bcf0:	ldrd	sl, [sp]
   3bcf4:	orr	r6, r2, r6, lsr #3
   3bcf8:	orr	r1, r1, r7, lsr #3
   3bcfc:	ldr	r2, [sp, #8]
   3bd00:	orr	r4, lr, r4, lsr #3
   3bd04:	adds	r1, r1, r8
   3bd08:	adc	r6, r6, r9
   3bd0c:	eor	r1, r1, sl
   3bd10:	eor	r6, r6, fp
   3bd14:	adds	r1, r1, ip
   3bd18:	eor	r1, r1, r8
   3bd1c:	adc	r4, r6, r4
   3bd20:	adds	r2, r2, r1
   3bd24:	eor	r4, r4, r9
   3bd28:	str	r2, [sp, #8]
   3bd2c:	ldr	r2, [sp, #12]
   3bd30:	adc	r2, r2, r4
   3bd34:	str	r2, [sp, #12]
   3bd38:	cmp	r3, #7
   3bd3c:	ble	3bda0 <cmetrohash64_1@@Base+0x4cc>
   3bd40:	ldr	r6, [r0]
   3bd44:	movw	r2, #28837	; 0x70a5
   3bd48:	movt	r2, #12120	; 0x2f58
   3bd4c:	movw	lr, #56283	; 0xdbdb
   3bd50:	movt	lr, #34376	; 0x8648
   3bd54:	ldr	r1, [r0, #4]
   3bd58:	add	r0, r0, #8
   3bd5c:	ldrd	r8, [sp, #8]
   3bd60:	umull	r6, r7, r6, r2
   3bd64:	ldr	r3, [sp, #52]	; 0x34
   3bd68:	mla	r7, r2, r1, r7
   3bd6c:	adds	r1, r6, r8
   3bd70:	lsl	r4, r1, #31
   3bd74:	adc	r2, r7, r9
   3bd78:	sub	r3, r3, r0
   3bd7c:	orr	r4, r4, r2, lsr #1
   3bd80:	lsl	ip, r2, #31
   3bd84:	umull	r4, r5, r4, lr
   3bd88:	orr	ip, ip, r1, lsr #1
   3bd8c:	eor	r1, r4, r1
   3bd90:	mla	r5, lr, ip, r5
   3bd94:	str	r1, [sp, #8]
   3bd98:	eor	r2, r5, r2
   3bd9c:	str	r2, [sp, #12]
   3bda0:	cmp	r3, #3
   3bda4:	ble	3bdf4 <cmetrohash64_1@@Base+0x520>
   3bda8:	ldr	r2, [r0], #4
   3bdac:	movw	r3, #28837	; 0x70a5
   3bdb0:	movt	r3, #12120	; 0x2f58
   3bdb4:	movw	r1, #56283	; 0xdbdb
   3bdb8:	movt	r1, #34376	; 0x8648
   3bdbc:	ldrd	r6, [sp, #8]
   3bdc0:	umlal	r6, r7, r3, r2
   3bdc4:	ldr	r3, [sp, #52]	; 0x34
   3bdc8:	lsr	r4, r6, #15
   3bdcc:	lsr	r2, r7, #15
   3bdd0:	orr	r4, r4, r7, lsl #17
   3bdd4:	sub	r3, r3, r0
   3bdd8:	orr	r2, r2, r6, lsl #17
   3bddc:	umull	r4, r5, r4, r1
   3bde0:	mla	r5, r1, r2, r5
   3bde4:	eor	r2, r4, r6
   3bde8:	str	r2, [sp, #8]
   3bdec:	eor	r2, r5, r7
   3bdf0:	str	r2, [sp, #12]
   3bdf4:	cmp	r3, #1
   3bdf8:	ble	3be48 <cmetrohash64_1@@Base+0x574>
   3bdfc:	ldrh	r2, [r0], #2
   3be00:	movw	r3, #28837	; 0x70a5
   3be04:	movt	r3, #12120	; 0x2f58
   3be08:	movw	r1, #56283	; 0xdbdb
   3be0c:	movt	r1, #34376	; 0x8648
   3be10:	ldrd	r4, [sp, #8]
   3be14:	umlal	r4, r5, r3, r2
   3be18:	ldr	r3, [sp, #52]	; 0x34
   3be1c:	lsr	r6, r4, #13
   3be20:	lsr	r2, r5, #13
   3be24:	orr	r6, r6, r5, lsl #19
   3be28:	sub	r3, r3, r0
   3be2c:	orr	r2, r2, r4, lsl #19
   3be30:	umull	r6, r7, r6, r1
   3be34:	mla	r7, r1, r2, r7
   3be38:	eor	r2, r6, r4
   3be3c:	str	r2, [sp, #8]
   3be40:	eor	r2, r7, r5
   3be44:	str	r2, [sp, #12]
   3be48:	cmp	r3, #0
   3be4c:	ble	3be9c <cmetrohash64_1@@Base+0x5c8>
   3be50:	ldrb	r0, [r0]
   3be54:	movw	r3, #28837	; 0x70a5
   3be58:	movt	r3, #12120	; 0x2f58
   3be5c:	movw	lr, #56283	; 0xdbdb
   3be60:	movt	lr, #34376	; 0x8648
   3be64:	ldrd	r4, [sp, #8]
   3be68:	umull	r0, r1, r0, r3
   3be6c:	adds	r6, r0, r4
   3be70:	lsr	r2, r6, #25
   3be74:	adc	r1, r1, r5
   3be78:	lsr	ip, r1, #25
   3be7c:	orr	r2, r2, r1, lsl #7
   3be80:	orr	ip, ip, r6, lsl #7
   3be84:	umull	r2, r3, r2, lr
   3be88:	mla	r3, lr, ip, r3
   3be8c:	eor	r0, r2, r6
   3be90:	str	r0, [sp, #8]
   3be94:	eor	r3, r3, r1
   3be98:	str	r3, [sp, #12]
   3be9c:	ldrd	r4, [sp, #8]
   3bea0:	movw	r0, #37345	; 0x91e1
   3bea4:	movt	r0, #51258	; 0xc83a
   3bea8:	lsl	r2, r4, #31
   3beac:	lsl	r1, r5, #31
   3beb0:	orr	r2, r2, r5, lsr #1
   3beb4:	orr	r1, r1, r4, lsr #1
   3beb8:	eor	r2, r2, r4
   3bebc:	eor	r1, r1, r5
   3bec0:	umull	r4, r5, r2, r0
   3bec4:	mla	r5, r0, r1, r5
   3bec8:	lsl	r1, r4, #31
   3becc:	orr	r1, r1, r5, lsr #1
   3bed0:	lsl	r0, r5, #31
   3bed4:	eor	r2, r4, r1
   3bed8:	ldr	r1, [sp, #108]	; 0x6c
   3bedc:	orr	r0, r0, r4, lsr #1
   3bee0:	eor	r3, r5, r0
   3bee4:	str	r2, [r1]
   3bee8:	str	r3, [r1, #4]
   3beec:	add	sp, sp, #68	; 0x44
   3bef0:	ldrd	r4, [sp]
   3bef4:	ldrd	r6, [sp, #8]
   3bef8:	ldrd	r8, [sp, #16]
   3befc:	ldrd	sl, [sp, #24]
   3bf00:	add	sp, sp, #32
   3bf04:	pop	{pc}		; (ldr pc, [sp], #4)

0003bf08 <cmetrohash64_2@@Base>:
   3bf08:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3bf0c:	movw	ip, #52149	; 0xcbb5
   3bf10:	movt	ip, #56292	; 0xdbe4
   3bf14:	strd	r6, [sp, #8]
   3bf18:	adds	r4, r2, ip
   3bf1c:	movw	r6, #13310	; 0x33fe
   3bf20:	movt	r6, #21180	; 0x52bc
   3bf24:	strd	r8, [sp, #16]
   3bf28:	add	ip, r0, r2
   3bf2c:	strd	sl, [sp, #24]
   3bf30:	adc	r5, r3, r6
   3bf34:	cmp	r3, #0
   3bf38:	str	lr, [sp, #32]
   3bf3c:	sub	sp, sp, #68	; 0x44
   3bf40:	mov	r3, r5
   3bf44:	ldr	lr, [sp, #104]	; 0x68
   3bf48:	movw	r1, #6389	; 0x18f5
   3bf4c:	movt	r1, #54992	; 0xd6d0
   3bf50:	cmpeq	r2, #31
   3bf54:	mov	r2, r4
   3bf58:	str	ip, [sp, #52]	; 0x34
   3bf5c:	umlal	r2, r3, r1, lr
   3bf60:	mov	r4, r2
   3bf64:	mov	r5, r3
   3bf68:	strd	r4, [sp, #8]
   3bf6c:	bls	3c204 <cmetrohash64_2@@Base+0x2fc>
   3bf70:	movw	lr, #12225	; 0x2fc1
   3bf74:	movt	lr, #25241	; 0x6299
   3bf78:	str	r4, [sp]
   3bf7c:	str	r1, [sp, #32]
   3bf80:	movw	r1, #827	; 0x33b
   3bf84:	movt	r1, #41642	; 0xa2aa
   3bf88:	mov	fp, r3
   3bf8c:	mov	sl, r2
   3bf90:	str	r5, [sp, #28]
   3bf94:	str	r1, [sp, #36]	; 0x24
   3bf98:	movw	r1, #23337	; 0x5b29
   3bf9c:	movt	r1, #12476	; 0x30bc
   3bfa0:	mov	r3, r2
   3bfa4:	str	r1, [sp, #44]	; 0x2c
   3bfa8:	sub	r1, ip, #32
   3bfac:	mov	ip, r5
   3bfb0:	str	r1, [sp, #40]	; 0x28
   3bfb4:	mov	r1, r5
   3bfb8:	str	lr, [sp, #48]	; 0x30
   3bfbc:	ldr	r4, [r0]
   3bfc0:	add	r0, r0, #32
   3bfc4:	ldr	r7, [sp, #32]
   3bfc8:	ldr	r6, [r0, #-28]	; 0xffffffe4
   3bfcc:	ldr	r8, [r0, #-24]	; 0xffffffe8
   3bfd0:	umull	r4, r5, r4, r7
   3bfd4:	ldr	lr, [r0, #-20]	; 0xffffffec
   3bfd8:	mla	r5, r7, r6, r5
   3bfdc:	ldr	r7, [sp, #36]	; 0x24
   3bfe0:	adds	r3, r4, r3
   3bfe4:	ldr	r6, [r0, #-16]
   3bfe8:	adc	r4, r5, r1
   3bfec:	lsr	r1, r4, #29
   3bff0:	umull	r8, r9, r8, r7
   3bff4:	orr	r5, r1, r3, lsl #3
   3bff8:	mla	r9, r7, lr, r9
   3bffc:	ldr	lr, [r0, #-12]
   3c000:	lsr	r7, r3, #29
   3c004:	orr	r3, r7, r4, lsl #3
   3c008:	ldr	r4, [r0, #-8]
   3c00c:	adds	r3, r3, r2
   3c010:	adc	r1, r5, ip
   3c014:	adds	sl, r8, sl
   3c018:	lsr	r8, sl, #29
   3c01c:	adc	r5, r9, fp
   3c020:	ldr	r9, [sp, #48]	; 0x30
   3c024:	lsr	fp, r5, #29
   3c028:	orr	r5, r8, r5, lsl #3
   3c02c:	ldr	r8, [sp]
   3c030:	orr	fp, fp, sl, lsl #3
   3c034:	umull	r6, r7, r6, r9
   3c038:	adds	sl, r5, r8
   3c03c:	ldr	r5, [sp, #44]	; 0x2c
   3c040:	mla	r7, r9, lr, r7
   3c044:	ldr	r9, [sp, #28]
   3c048:	ldr	lr, [r0, #-4]
   3c04c:	str	r5, [sp, #16]
   3c050:	umull	r4, r5, r4, r5
   3c054:	adc	fp, fp, r9
   3c058:	adds	r2, r6, r2
   3c05c:	strd	r4, [sp]
   3c060:	adc	ip, r7, ip
   3c064:	lsr	r6, r2, #29
   3c068:	ldr	r4, [sp, #4]
   3c06c:	lsr	r7, ip, #29
   3c070:	orr	ip, r6, ip, lsl #3
   3c074:	ldr	r5, [sp, #16]
   3c078:	orr	r7, r7, r2, lsl #3
   3c07c:	adds	r2, ip, r3
   3c080:	adc	ip, r7, r1
   3c084:	mla	lr, r5, lr, r4
   3c088:	str	lr, [sp, #4]
   3c08c:	ldrd	r6, [sp]
   3c090:	adds	r4, r6, r8
   3c094:	lsr	lr, r4, #29
   3c098:	adc	r6, r7, r9
   3c09c:	lsr	r5, r6, #29
   3c0a0:	orr	lr, lr, r6, lsl #3
   3c0a4:	orr	r4, r5, r4, lsl #3
   3c0a8:	adds	lr, lr, sl
   3c0ac:	str	lr, [sp]
   3c0b0:	adc	lr, r4, fp
   3c0b4:	str	lr, [sp, #28]
   3c0b8:	ldr	lr, [sp, #40]	; 0x28
   3c0bc:	cmp	r0, lr
   3c0c0:	bls	3bfbc <cmetrohash64_2@@Base+0xb4>
   3c0c4:	eor	r5, r3, sl
   3c0c8:	ldr	lr, [sp]
   3c0cc:	eor	r6, r1, fp
   3c0d0:	str	r5, [sp, #40]	; 0x28
   3c0d4:	ldr	r5, [sp, #28]
   3c0d8:	ldrd	r8, [sp, #32]
   3c0dc:	adds	r4, r3, lr
   3c0e0:	str	r6, [sp, #32]
   3c0e4:	adc	lr, r1, r5
   3c0e8:	umull	r4, r5, r4, r8
   3c0ec:	mla	r5, r8, lr, r5
   3c0f0:	adds	r6, r4, sl
   3c0f4:	lsr	r4, r6, #30
   3c0f8:	adc	lr, r5, fp
   3c0fc:	orr	r4, r4, lr, lsl #2
   3c100:	lsr	lr, lr, #30
   3c104:	umull	r4, r5, r4, r9
   3c108:	orr	lr, lr, r6, lsl #2
   3c10c:	eor	r6, r4, r2
   3c110:	mla	r5, r9, lr, r5
   3c114:	adds	r4, sl, r6
   3c118:	eor	r7, r5, ip
   3c11c:	umull	r4, r5, r4, r9
   3c120:	adc	r2, fp, r7
   3c124:	mla	r5, r9, r2, r5
   3c128:	adds	lr, r4, r3
   3c12c:	lsr	r2, lr, #30
   3c130:	adc	ip, r5, r1
   3c134:	adds	r4, r3, r6
   3c138:	orr	r2, r2, ip, lsl #2
   3c13c:	adc	r1, r1, r7
   3c140:	lsr	ip, ip, #30
   3c144:	umull	r4, r5, r4, r8
   3c148:	umull	r2, r3, r2, r8
   3c14c:	orr	ip, ip, lr, lsl #2
   3c150:	mov	lr, r8
   3c154:	mla	r5, r8, r1, r5
   3c158:	strd	r2, [sp, #16]
   3c15c:	mla	r3, r8, ip, r3
   3c160:	ldr	r2, [sp, #16]
   3c164:	mov	ip, r9
   3c168:	str	r3, [sp, #20]
   3c16c:	ldr	r3, [sp]
   3c170:	ldr	r8, [sp, #20]
   3c174:	eor	r2, r2, r3
   3c178:	ldr	r3, [sp, #28]
   3c17c:	eor	r8, r8, r3
   3c180:	adds	r3, r4, r2
   3c184:	adc	r1, r5, r8
   3c188:	adds	sl, sl, r2
   3c18c:	lsr	r4, r3, #30
   3c190:	adc	r5, fp, r8
   3c194:	lsr	r2, r1, #30
   3c198:	umull	r8, r9, sl, r9
   3c19c:	mov	sl, ip
   3c1a0:	orr	r4, r4, r1, lsl #2
   3c1a4:	orr	r3, r2, r3, lsl #2
   3c1a8:	mla	r9, ip, r5, r9
   3c1ac:	adds	r2, r8, r6
   3c1b0:	umull	r4, r5, r4, ip
   3c1b4:	lsr	r1, r2, #30
   3c1b8:	adc	ip, r9, r7
   3c1bc:	lsr	r6, ip, #30
   3c1c0:	mla	r5, sl, r3, r5
   3c1c4:	ldr	r3, [sp, #40]	; 0x28
   3c1c8:	orr	ip, r1, ip, lsl #2
   3c1cc:	ldr	r1, [sp, #8]
   3c1d0:	orr	r6, r6, r2, lsl #2
   3c1d4:	umull	r8, r9, ip, lr
   3c1d8:	ldr	r2, [sp, #32]
   3c1dc:	eor	r3, r4, r3
   3c1e0:	eor	r3, r3, r8
   3c1e4:	mla	r9, lr, r6, r9
   3c1e8:	adds	r3, r1, r3
   3c1ec:	eor	r2, r5, r2
   3c1f0:	str	r3, [sp, #8]
   3c1f4:	eor	r2, r2, r9
   3c1f8:	ldr	r3, [sp, #12]
   3c1fc:	adc	r3, r3, r2
   3c200:	str	r3, [sp, #12]
   3c204:	ldr	fp, [sp, #52]	; 0x34
   3c208:	sub	r3, fp, r0
   3c20c:	cmp	r3, #15
   3c210:	ble	3c358 <cmetrohash64_2@@Base+0x450>
   3c214:	ldr	r4, [r0]
   3c218:	movw	r2, #12225	; 0x2fc1
   3c21c:	movt	r2, #25241	; 0x6299
   3c220:	add	r0, r0, #16
   3c224:	movw	ip, #11461	; 0x2cc5
   3c228:	movt	ip, #2375	; 0x947
   3c22c:	ldr	sl, [r0, #-8]
   3c230:	movw	r1, #23337	; 0x5b29
   3c234:	movt	r1, #12476	; 0x30bc
   3c238:	movw	r7, #11409	; 0x2c91
   3c23c:	movt	r7, #25774	; 0x64ae
   3c240:	ldr	r9, [r0, #-12]
   3c244:	movw	lr, #4606	; 0x11fe
   3c248:	movt	lr, #10469	; 0x28e5
   3c24c:	umull	r4, r5, r4, r2
   3c250:	movw	r8, #5693	; 0x163d
   3c254:	movt	r8, #42015	; 0xa41f
   3c258:	ldr	r6, [r0, #-4]
   3c25c:	sub	r3, fp, r0
   3c260:	strd	r4, [sp]
   3c264:	umull	r4, r5, sl, r2
   3c268:	ldr	sl, [sp, #4]
   3c26c:	strd	r4, [sp, #16]
   3c270:	ldr	r4, [sp]
   3c274:	mla	r9, r2, r9, sl
   3c278:	ldrd	sl, [sp, #8]
   3c27c:	mla	r2, r2, r6, r5
   3c280:	ldr	r5, [sp, #16]
   3c284:	str	r9, [sp, #4]
   3c288:	str	r2, [sp, #20]
   3c28c:	adds	r9, r4, sl
   3c290:	ldr	r4, [sp, #4]
   3c294:	lsr	r6, r9, #29
   3c298:	adc	r2, r4, fp
   3c29c:	adds	r5, r5, sl
   3c2a0:	ldr	r4, [sp, #20]
   3c2a4:	orr	r6, r6, r2, lsl #3
   3c2a8:	lsr	sl, r2, #29
   3c2ac:	ldr	r2, [sp, #12]
   3c2b0:	orr	r9, sl, r9, lsl #3
   3c2b4:	mul	lr, lr, r6
   3c2b8:	adc	r2, r4, r2
   3c2bc:	lsr	r4, r5, #29
   3c2c0:	str	r9, [sp]
   3c2c4:	mla	lr, r8, r9, lr
   3c2c8:	orr	r4, r4, r2, lsl #3
   3c2cc:	lsr	r2, r2, #29
   3c2d0:	umull	r8, r9, r6, r8
   3c2d4:	orr	r2, r2, r5, lsl #3
   3c2d8:	mul	ip, ip, r4
   3c2dc:	umull	sl, fp, r4, r1
   3c2e0:	add	r9, lr, r9
   3c2e4:	umull	r4, r5, r4, r7
   3c2e8:	mla	ip, r7, r2, ip
   3c2ec:	umull	r6, r7, r6, r1
   3c2f0:	mla	fp, r1, r2, fp
   3c2f4:	add	r5, ip, r5
   3c2f8:	ldr	ip, [sp]
   3c2fc:	lsl	r2, r8, #30
   3c300:	lsl	lr, r5, #30
   3c304:	orr	r2, r2, r9, lsr #2
   3c308:	adds	r2, r2, sl
   3c30c:	mla	r7, r1, ip, r7
   3c310:	eor	r2, r2, r6
   3c314:	lsl	r1, r9, #30
   3c318:	lsl	ip, r4, #30
   3c31c:	orr	r8, r1, r8, lsr #2
   3c320:	ldr	r1, [sp, #8]
   3c324:	orr	ip, ip, r5, lsr #2
   3c328:	adc	r8, r8, fp
   3c32c:	orr	r4, lr, r4, lsr #2
   3c330:	adds	r2, r2, ip
   3c334:	eor	r8, r8, r7
   3c338:	eor	r2, r2, sl
   3c33c:	adc	r4, r8, r4
   3c340:	adds	r2, r1, r2
   3c344:	eor	r4, r4, fp
   3c348:	str	r2, [sp, #8]
   3c34c:	ldr	r2, [sp, #12]
   3c350:	adc	r2, r2, r4
   3c354:	str	r2, [sp, #12]
   3c358:	cmp	r3, #7
   3c35c:	ble	3c3c0 <cmetrohash64_2@@Base+0x4b8>
   3c360:	ldr	r6, [r0]
   3c364:	movw	r2, #23337	; 0x5b29
   3c368:	movt	r2, #12476	; 0x30bc
   3c36c:	movw	lr, #827	; 0x33b
   3c370:	movt	lr, #41642	; 0xa2aa
   3c374:	ldr	r1, [r0, #4]
   3c378:	add	r0, r0, #8
   3c37c:	ldrd	r8, [sp, #8]
   3c380:	umull	r6, r7, r6, r2
   3c384:	ldr	r3, [sp, #52]	; 0x34
   3c388:	mla	r7, r2, r1, r7
   3c38c:	adds	r1, r6, r8
   3c390:	lsl	r4, r1, #28
   3c394:	adc	r2, r7, r9
   3c398:	sub	r3, r3, r0
   3c39c:	orr	r4, r4, r2, lsr #4
   3c3a0:	lsl	ip, r2, #28
   3c3a4:	umull	r4, r5, r4, lr
   3c3a8:	orr	ip, ip, r1, lsr #4
   3c3ac:	eor	r1, r4, r1
   3c3b0:	mla	r5, lr, ip, r5
   3c3b4:	str	r1, [sp, #8]
   3c3b8:	eor	r2, r5, r2
   3c3bc:	str	r2, [sp, #12]
   3c3c0:	cmp	r3, #3
   3c3c4:	ble	3c414 <cmetrohash64_2@@Base+0x50c>
   3c3c8:	ldr	r2, [r0], #4
   3c3cc:	movw	r3, #23337	; 0x5b29
   3c3d0:	movt	r3, #12476	; 0x30bc
   3c3d4:	movw	r1, #827	; 0x33b
   3c3d8:	movt	r1, #41642	; 0xa2aa
   3c3dc:	ldrd	r6, [sp, #8]
   3c3e0:	umlal	r6, r7, r3, r2
   3c3e4:	ldr	r3, [sp, #52]	; 0x34
   3c3e8:	lsr	r4, r6, #15
   3c3ec:	lsr	r2, r7, #15
   3c3f0:	orr	r4, r4, r7, lsl #17
   3c3f4:	sub	r3, r3, r0
   3c3f8:	orr	r2, r2, r6, lsl #17
   3c3fc:	umull	r4, r5, r4, r1
   3c400:	mla	r5, r1, r2, r5
   3c404:	eor	r2, r4, r6
   3c408:	str	r2, [sp, #8]
   3c40c:	eor	r2, r5, r7
   3c410:	str	r2, [sp, #12]
   3c414:	cmp	r3, #1
   3c418:	ble	3c468 <cmetrohash64_2@@Base+0x560>
   3c41c:	ldrh	r2, [r0], #2
   3c420:	movw	r3, #23337	; 0x5b29
   3c424:	movt	r3, #12476	; 0x30bc
   3c428:	movw	r1, #827	; 0x33b
   3c42c:	movt	r1, #41642	; 0xa2aa
   3c430:	ldrd	r4, [sp, #8]
   3c434:	umlal	r4, r5, r3, r2
   3c438:	ldr	r3, [sp, #52]	; 0x34
   3c43c:	lsr	r6, r4, #15
   3c440:	lsr	r2, r5, #15
   3c444:	orr	r6, r6, r5, lsl #17
   3c448:	sub	r3, r3, r0
   3c44c:	orr	r2, r2, r4, lsl #17
   3c450:	umull	r6, r7, r6, r1
   3c454:	mla	r7, r1, r2, r7
   3c458:	eor	r2, r6, r4
   3c45c:	str	r2, [sp, #8]
   3c460:	eor	r2, r7, r5
   3c464:	str	r2, [sp, #12]
   3c468:	cmp	r3, #0
   3c46c:	ble	3c4bc <cmetrohash64_2@@Base+0x5b4>
   3c470:	ldrb	r0, [r0]
   3c474:	movw	r3, #23337	; 0x5b29
   3c478:	movt	r3, #12476	; 0x30bc
   3c47c:	movw	lr, #827	; 0x33b
   3c480:	movt	lr, #41642	; 0xa2aa
   3c484:	ldrd	r4, [sp, #8]
   3c488:	umull	r0, r1, r0, r3
   3c48c:	adds	r6, r0, r4
   3c490:	lsr	r2, r6, #23
   3c494:	adc	r1, r1, r5
   3c498:	lsr	ip, r1, #23
   3c49c:	orr	r2, r2, r1, lsl #9
   3c4a0:	orr	ip, ip, r6, lsl #9
   3c4a4:	umull	r2, r3, r2, lr
   3c4a8:	mla	r3, lr, ip, r3
   3c4ac:	eor	r0, r2, r6
   3c4b0:	str	r0, [sp, #8]
   3c4b4:	eor	r3, r3, r1
   3c4b8:	str	r3, [sp, #12]
   3c4bc:	ldrd	r4, [sp, #8]
   3c4c0:	movw	r0, #6389	; 0x18f5
   3c4c4:	movt	r0, #54992	; 0xd6d0
   3c4c8:	lsr	r2, r4, #28
   3c4cc:	lsr	r1, r5, #28
   3c4d0:	orr	r2, r2, r5, lsl #4
   3c4d4:	orr	r1, r1, r4, lsl #4
   3c4d8:	eor	r2, r2, r4
   3c4dc:	eor	r1, r1, r5
   3c4e0:	umull	r4, r5, r2, r0
   3c4e4:	mla	r5, r0, r1, r5
   3c4e8:	lsr	r0, r4, #29
   3c4ec:	lsr	r1, r5, #29
   3c4f0:	orr	r0, r0, r5, lsl #3
   3c4f4:	orr	r1, r1, r4, lsl #3
   3c4f8:	eor	r2, r4, r0
   3c4fc:	eor	r3, r5, r1
   3c500:	ldr	r1, [sp, #108]	; 0x6c
   3c504:	str	r2, [r1]
   3c508:	str	r3, [r1, #4]
   3c50c:	add	sp, sp, #68	; 0x44
   3c510:	ldrd	r4, [sp]
   3c514:	ldrd	r6, [sp, #8]
   3c518:	ldrd	r8, [sp, #16]
   3c51c:	ldrd	sl, [sp, #24]
   3c520:	add	sp, sp, #32
   3c524:	pop	{pc}		; (ldr pc, [sp], #4)
   3c528:	ldr	r3, [r0, #8]
   3c52c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3c530:	strd	r6, [sp, #8]
   3c534:	strd	r8, [sp, #16]
   3c538:	mov	r8, r0
   3c53c:	strd	sl, [sp, #24]
   3c540:	cmp	r1, r3
   3c544:	str	lr, [sp, #32]
   3c548:	sub	sp, sp, #44	; 0x2c
   3c54c:	movcc	r1, r3
   3c550:	ldr	r6, [r0]
   3c554:	cmp	r1, #2
   3c558:	bls	3c6f0 <cmetrohash64_2@@Base+0x7e8>
   3c55c:	mov	r3, #4
   3c560:	movw	r0, #358	; 0x166
   3c564:	mul	r2, r0, r3
   3c568:	lsl	r4, r3, #1
   3c56c:	cmp	r1, r2, lsr #8
   3c570:	mov	r3, r4
   3c574:	bhi	3c564 <cmetrohash64_2@@Base+0x65c>
   3c578:	mov	r1, #4
   3c57c:	mov	r0, r4
   3c580:	bl	13e7c <calloc@plt>
   3c584:	cmp	r0, #0
   3c588:	str	r0, [sp, #24]
   3c58c:	beq	3c6f8 <cmetrohash64_2@@Base+0x7f0>
   3c590:	ldr	r3, [r8, #12]
   3c594:	mov	r5, #0
   3c598:	str	r5, [sp, #28]
   3c59c:	str	r5, [sp, #32]
   3c5a0:	str	r4, [sp, #36]	; 0x24
   3c5a4:	cmp	r3, r5
   3c5a8:	beq	3c6a0 <cmetrohash64_2@@Base+0x798>
   3c5ac:	movw	r9, #15186	; 0x3b52
   3c5b0:	movt	r9, #12137	; 0x2f69
   3c5b4:	sub	r6, r6, #4
   3c5b8:	mov	fp, #179	; 0xb3
   3c5bc:	b	3c5cc <cmetrohash64_2@@Base+0x6c4>
   3c5c0:	add	r5, r5, #1
   3c5c4:	cmp	r5, r3
   3c5c8:	bcs	3c69c <cmetrohash64_2@@Base+0x794>
   3c5cc:	ldr	r4, [r6, #4]!
   3c5d0:	cmp	r4, #0
   3c5d4:	cmpne	r4, #2
   3c5d8:	beq	3c5c0 <cmetrohash64_2@@Base+0x6b8>
   3c5dc:	cmp	r4, #1
   3c5e0:	ldr	sl, [r4, #8]
   3c5e4:	ldr	r2, [r4, #12]
   3c5e8:	beq	3c728 <cmetrohash64_2@@Base+0x820>
   3c5ec:	ldr	r1, [sp, #32]
   3c5f0:	ldr	r7, [sp, #36]	; 0x24
   3c5f4:	mul	r0, fp, r7
   3c5f8:	cmp	r1, r0, lsr #8
   3c5fc:	bcc	3c620 <cmetrohash64_2@@Base+0x718>
   3c600:	lsl	r1, r1, #1
   3c604:	add	r0, sp, #24
   3c608:	str	r2, [sp, #12]
   3c60c:	bl	3c528 <cmetrohash64_2@@Base+0x620>
   3c610:	cmp	r0, #0
   3c614:	bne	3c700 <cmetrohash64_2@@Base+0x7f8>
   3c618:	ldr	r2, [sp, #12]
   3c61c:	ldr	r7, [sp, #36]	; 0x24
   3c620:	add	r1, sp, #16
   3c624:	mov	r0, sl
   3c628:	str	r9, [sp]
   3c62c:	mov	r3, #0
   3c630:	ldr	sl, [sp, #24]
   3c634:	sub	r7, r7, #1
   3c638:	str	r1, [sp, #4]
   3c63c:	bl	3b8d4 <cmetrohash64_1@@Base>
   3c640:	ldr	r3, [sp, #16]
   3c644:	ldr	r0, [sp, #32]
   3c648:	and	r2, r7, r3
   3c64c:	ldr	ip, [sl, r2, lsl #2]
   3c650:	add	r2, sl, r2, lsl #2
   3c654:	add	r0, r0, #1
   3c658:	str	r0, [sp, #32]
   3c65c:	cmp	ip, #0
   3c660:	cmpne	ip, #2
   3c664:	beq	3c688 <cmetrohash64_2@@Base+0x780>
   3c668:	add	r3, r3, #1
   3c66c:	and	r2, r7, r3
   3c670:	add	r3, r3, #1
   3c674:	ldr	r0, [sl, r2, lsl #2]
   3c678:	add	r2, sl, r2, lsl #2
   3c67c:	cmp	r0, #0
   3c680:	cmpne	r0, #2
   3c684:	bne	3c66c <cmetrohash64_2@@Base+0x764>
   3c688:	ldr	r3, [r8, #12]
   3c68c:	add	r5, r5, #1
   3c690:	str	r4, [r2]
   3c694:	cmp	r5, r3
   3c698:	bcc	3c5cc <cmetrohash64_2@@Base+0x6c4>
   3c69c:	ldr	r6, [r8]
   3c6a0:	cmp	r6, #0
   3c6a4:	beq	3c6b0 <cmetrohash64_2@@Base+0x7a8>
   3c6a8:	mov	r0, r6
   3c6ac:	bl	13eac <free@plt>
   3c6b0:	ldr	r3, [sp, #24]
   3c6b4:	mov	r0, #0
   3c6b8:	ldr	r1, [sp, #28]
   3c6bc:	ldr	r2, [sp, #32]
   3c6c0:	str	r3, [r8]
   3c6c4:	ldr	r3, [sp, #36]	; 0x24
   3c6c8:	str	r1, [r8, #4]
   3c6cc:	str	r2, [r8, #8]
   3c6d0:	str	r3, [r8, #12]
   3c6d4:	add	sp, sp, #44	; 0x2c
   3c6d8:	ldrd	r4, [sp]
   3c6dc:	ldrd	r6, [sp, #8]
   3c6e0:	ldrd	r8, [sp, #16]
   3c6e4:	ldrd	sl, [sp, #24]
   3c6e8:	add	sp, sp, #32
   3c6ec:	pop	{pc}		; (ldr pc, [sp], #4)
   3c6f0:	mov	r4, #4
   3c6f4:	b	3c578 <cmetrohash64_2@@Base+0x670>
   3c6f8:	mvn	r0, #0
   3c6fc:	b	3c6d4 <cmetrohash64_2@@Base+0x7cc>
   3c700:	movw	r3, #41128	; 0xa0a8
   3c704:	movt	r3, #6
   3c708:	movw	r2, #26636	; 0x680c
   3c70c:	movt	r2, #5
   3c710:	ldr	r0, [r3]
   3c714:	movw	r1, #26688	; 0x6840
   3c718:	movt	r1, #5
   3c71c:	bl	13f60 <fprintf@plt>
   3c720:	mov	r0, #1
   3c724:	bl	13f48 <exit@plt>
   3c728:	movw	r3, #40332	; 0x9d8c
   3c72c:	movt	r3, #5
   3c730:	movw	r1, #26484	; 0x6774
   3c734:	movt	r1, #5
   3c738:	movw	r0, #26612	; 0x67f4
   3c73c:	movt	r0, #5
   3c740:	mov	r2, #116	; 0x74
   3c744:	bl	14014 <__assert_fail@plt>

0003c748 <fb_name_table_clear@@Base>:
   3c748:	str	r4, [sp, #-8]!
   3c74c:	mov	r4, r0
   3c750:	ldr	r0, [r0]
   3c754:	str	lr, [sp, #4]
   3c758:	cmp	r0, #0
   3c75c:	beq	3c764 <fb_name_table_clear@@Base+0x1c>
   3c760:	bl	13eac <free@plt>
   3c764:	mov	r3, #0
   3c768:	str	r3, [r4]
   3c76c:	str	r3, [r4, #4]
   3c770:	str	r3, [r4, #8]
   3c774:	str	r3, [r4, #12]
   3c778:	ldr	r4, [sp]
   3c77c:	add	sp, sp, #4
   3c780:	pop	{pc}		; (ldr pc, [sp], #4)

0003c784 <fb_name_table_destroy@@Base>:
   3c784:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3c788:	strd	r6, [sp, #8]
   3c78c:	mov	r6, r0
   3c790:	str	r8, [sp, #16]
   3c794:	subs	r8, r1, #0
   3c798:	str	lr, [sp, #20]
   3c79c:	ldr	r0, [r0]
   3c7a0:	beq	3c7ec <fb_name_table_destroy@@Base+0x68>
   3c7a4:	ldr	ip, [r6, #12]
   3c7a8:	cmp	ip, #0
   3c7ac:	beq	3c7ec <fb_name_table_destroy@@Base+0x68>
   3c7b0:	mov	r7, r2
   3c7b4:	sub	r5, r0, #4
   3c7b8:	mov	r4, #0
   3c7bc:	ldr	r3, [r5, #4]!
   3c7c0:	mov	r0, r7
   3c7c4:	cmp	r3, #0
   3c7c8:	cmpne	r3, #2
   3c7cc:	mov	r1, r3
   3c7d0:	beq	3c820 <fb_name_table_destroy@@Base+0x9c>
   3c7d4:	blx	r8
   3c7d8:	ldr	ip, [r6, #12]
   3c7dc:	add	r4, r4, #1
   3c7e0:	cmp	r4, ip
   3c7e4:	bcc	3c7bc <fb_name_table_destroy@@Base+0x38>
   3c7e8:	ldr	r0, [r6]
   3c7ec:	cmp	r0, #0
   3c7f0:	beq	3c7f8 <fb_name_table_destroy@@Base+0x74>
   3c7f4:	bl	13eac <free@plt>
   3c7f8:	mov	r3, #0
   3c7fc:	str	r3, [r6]
   3c800:	str	r3, [r6, #4]
   3c804:	str	r3, [r6, #8]
   3c808:	str	r3, [r6, #12]
   3c80c:	ldrd	r4, [sp]
   3c810:	ldrd	r6, [sp, #8]
   3c814:	ldr	r8, [sp, #16]
   3c818:	add	sp, sp, #20
   3c81c:	pop	{pc}		; (ldr pc, [sp], #4)
   3c820:	add	r4, r4, #1
   3c824:	cmp	r4, ip
   3c828:	bcc	3c7bc <fb_name_table_destroy@@Base+0x38>
   3c82c:	b	3c7e8 <fb_name_table_destroy@@Base+0x64>

0003c830 <fb_name_table_init@@Base>:
   3c830:	cmp	r1, #2
   3c834:	strd	r4, [sp, #-16]!
   3c838:	mov	r4, r0
   3c83c:	str	r6, [sp, #8]
   3c840:	str	lr, [sp, #12]
   3c844:	bls	3c8a0 <fb_name_table_init@@Base+0x70>
   3c848:	mov	r3, #4
   3c84c:	movw	r0, #358	; 0x166
   3c850:	mul	r2, r0, r3
   3c854:	lsl	r5, r3, #1
   3c858:	cmp	r1, r2, lsr #8
   3c85c:	mov	r3, r5
   3c860:	bhi	3c850 <fb_name_table_init@@Base+0x20>
   3c864:	mov	r1, #4
   3c868:	mov	r0, r5
   3c86c:	bl	13e7c <calloc@plt>
   3c870:	cmp	r0, #0
   3c874:	str	r0, [r4]
   3c878:	beq	3c8a8 <fb_name_table_init@@Base+0x78>
   3c87c:	mov	r3, #0
   3c880:	mov	r0, r3
   3c884:	str	r3, [r4, #4]
   3c888:	str	r3, [r4, #8]
   3c88c:	str	r5, [r4, #12]
   3c890:	ldrd	r4, [sp]
   3c894:	ldr	r6, [sp, #8]
   3c898:	add	sp, sp, #12
   3c89c:	pop	{pc}		; (ldr pc, [sp], #4)
   3c8a0:	mov	r5, #4
   3c8a4:	b	3c864 <fb_name_table_init@@Base+0x34>
   3c8a8:	mvn	r0, #0
   3c8ac:	b	3c890 <fb_name_table_init@@Base+0x60>

0003c8b0 <fb_name_table_resize@@Base>:
   3c8b0:	b	3c528 <cmetrohash64_2@@Base+0x620>

0003c8b4 <fb_name_table_insert@@Base>:
   3c8b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3c8b8:	strd	r6, [sp, #8]
   3c8bc:	strd	r8, [sp, #16]
   3c8c0:	strd	sl, [sp, #24]
   3c8c4:	subs	fp, r3, #0
   3c8c8:	str	lr, [sp, #32]
   3c8cc:	sub	sp, sp, #28
   3c8d0:	str	r1, [sp, #8]
   3c8d4:	beq	3caa0 <fb_name_table_insert@@Base+0x1ec>
   3c8d8:	cmp	fp, #2
   3c8dc:	beq	3ca80 <fb_name_table_insert@@Base+0x1cc>
   3c8e0:	cmp	fp, #1
   3c8e4:	beq	3cac0 <fb_name_table_insert@@Base+0x20c>
   3c8e8:	mov	r3, #179	; 0xb3
   3c8ec:	ldr	r1, [r0, #8]
   3c8f0:	mov	sl, r2
   3c8f4:	mov	r9, r0
   3c8f8:	ldr	r7, [r0, #12]
   3c8fc:	mul	r3, r3, r7
   3c900:	cmp	r1, r3, lsr #8
   3c904:	bcs	3c9f8 <fb_name_table_insert@@Base+0x144>
   3c908:	add	ip, sp, #16
   3c90c:	movw	r1, #15186	; 0x3b52
   3c910:	movt	r1, #12137	; 0x2f69
   3c914:	mov	r3, #0
   3c918:	ldr	r8, [r9]
   3c91c:	mov	r2, sl
   3c920:	sub	r7, r7, #1
   3c924:	stm	sp, {r1, ip}
   3c928:	ldr	r0, [sp, #8]
   3c92c:	bl	3b8d4 <cmetrohash64_1@@Base>
   3c930:	ldr	r5, [sp, #16]
   3c934:	ldr	r3, [sp, #64]	; 0x40
   3c938:	sub	r3, r3, #2
   3c93c:	cmp	r3, #1
   3c940:	and	r3, r7, r5
   3c944:	add	r4, r8, r3, lsl #2
   3c948:	bls	3ca38 <fb_name_table_insert@@Base+0x184>
   3c94c:	ldr	r6, [r8, r3, lsl #2]
   3c950:	cmp	r6, #0
   3c954:	moveq	r3, r4
   3c958:	beq	3ca20 <fb_name_table_insert@@Base+0x16c>
   3c95c:	add	r5, r5, #1
   3c960:	mov	r3, #0
   3c964:	str	r9, [sp, #12]
   3c968:	mov	r9, sl
   3c96c:	mov	sl, r7
   3c970:	mov	r7, r5
   3c974:	mov	r5, r3
   3c978:	b	3c9a0 <fb_name_table_insert@@Base+0xec>
   3c97c:	ldr	r2, [r6, #12]
   3c980:	cmp	r9, r2
   3c984:	beq	3c9b4 <fb_name_table_insert@@Base+0x100>
   3c988:	and	r4, sl, r7
   3c98c:	add	r7, r7, #1
   3c990:	ldr	r6, [r8, r4, lsl #2]
   3c994:	add	r4, r8, r4, lsl #2
   3c998:	cmp	r6, #0
   3c99c:	beq	3ca10 <fb_name_table_insert@@Base+0x15c>
   3c9a0:	cmp	r6, #2
   3c9a4:	bne	3c97c <fb_name_table_insert@@Base+0xc8>
   3c9a8:	cmp	r5, #0
   3c9ac:	moveq	r5, r4
   3c9b0:	b	3c988 <fb_name_table_insert@@Base+0xd4>
   3c9b4:	mov	r2, r9
   3c9b8:	ldr	r1, [r6, #8]
   3c9bc:	ldr	r0, [sp, #8]
   3c9c0:	bl	13ed0 <memcmp@plt>
   3c9c4:	cmp	r0, #0
   3c9c8:	bne	3c988 <fb_name_table_insert@@Base+0xd4>
   3c9cc:	ldr	r3, [sp, #64]	; 0x40
   3c9d0:	cmp	r3, #0
   3c9d4:	streq	fp, [r4]
   3c9d8:	mov	r0, r6
   3c9dc:	add	sp, sp, #28
   3c9e0:	ldrd	r4, [sp]
   3c9e4:	ldrd	r6, [sp, #8]
   3c9e8:	ldrd	r8, [sp, #16]
   3c9ec:	ldrd	sl, [sp, #24]
   3c9f0:	add	sp, sp, #32
   3c9f4:	pop	{pc}		; (ldr pc, [sp], #4)
   3c9f8:	lsl	r1, r1, #1
   3c9fc:	bl	3c528 <cmetrohash64_2@@Base+0x620>
   3ca00:	cmp	r0, #0
   3ca04:	bne	3cae0 <fb_name_table_insert@@Base+0x22c>
   3ca08:	ldr	r7, [r9, #12]
   3ca0c:	b	3c908 <fb_name_table_insert@@Base+0x54>
   3ca10:	ldr	r9, [sp, #12]
   3ca14:	cmp	r5, #0
   3ca18:	mov	r3, r5
   3ca1c:	moveq	r3, r4
   3ca20:	ldr	r2, [r9, #8]
   3ca24:	mov	r6, #0
   3ca28:	add	r2, r2, #1
   3ca2c:	str	r2, [r9, #8]
   3ca30:	str	fp, [r3]
   3ca34:	b	3c9d8 <fb_name_table_insert@@Base+0x124>
   3ca38:	ldr	r2, [r9, #8]
   3ca3c:	ldr	r1, [r8, r3, lsl #2]
   3ca40:	add	r3, r2, #1
   3ca44:	cmp	r1, #0
   3ca48:	cmpne	r1, #2
   3ca4c:	str	r3, [r9, #8]
   3ca50:	beq	3ca74 <fb_name_table_insert@@Base+0x1c0>
   3ca54:	add	r5, r5, #1
   3ca58:	and	r4, r7, r5
   3ca5c:	add	r5, r5, #1
   3ca60:	ldr	r3, [r8, r4, lsl #2]
   3ca64:	add	r4, r8, r4, lsl #2
   3ca68:	cmp	r3, #0
   3ca6c:	cmpne	r3, #2
   3ca70:	bne	3ca58 <fb_name_table_insert@@Base+0x1a4>
   3ca74:	mov	r6, #0
   3ca78:	str	fp, [r4]
   3ca7c:	b	3c9d8 <fb_name_table_insert@@Base+0x124>
   3ca80:	movw	r3, #40332	; 0x9d8c
   3ca84:	movt	r3, #5
   3ca88:	movw	r1, #26484	; 0x6774
   3ca8c:	movt	r1, #5
   3ca90:	movw	r0, #26588	; 0x67dc
   3ca94:	movt	r0, #5
   3ca98:	mov	r2, #115	; 0x73
   3ca9c:	bl	14014 <__assert_fail@plt>
   3caa0:	movw	r3, #40332	; 0x9d8c
   3caa4:	movt	r3, #5
   3caa8:	movw	r1, #26484	; 0x6774
   3caac:	movt	r1, #5
   3cab0:	movw	r0, #26564	; 0x67c4
   3cab4:	movt	r0, #5
   3cab8:	mov	r2, #114	; 0x72
   3cabc:	bl	14014 <__assert_fail@plt>
   3cac0:	movw	r3, #40332	; 0x9d8c
   3cac4:	movt	r3, #5
   3cac8:	movw	r1, #26484	; 0x6774
   3cacc:	movt	r1, #5
   3cad0:	movw	r0, #26612	; 0x67f4
   3cad4:	movt	r0, #5
   3cad8:	mov	r2, #116	; 0x74
   3cadc:	bl	14014 <__assert_fail@plt>
   3cae0:	movw	r3, #41128	; 0xa0a8
   3cae4:	movt	r3, #6
   3cae8:	movw	r2, #26636	; 0x680c
   3caec:	movt	r2, #5
   3caf0:	ldr	r0, [r3]
   3caf4:	movw	r1, #26688	; 0x6840
   3caf8:	movt	r1, #5
   3cafc:	bl	13f60 <fprintf@plt>
   3cb00:	mov	r0, #1
   3cb04:	bl	13f48 <exit@plt>

0003cb08 <fb_name_table_insert_item@@Base>:
   3cb08:	ldr	r3, [r1, #8]
   3cb0c:	cmp	r1, #2
   3cb10:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3cb14:	strd	r6, [sp, #8]
   3cb18:	strd	r8, [sp, #16]
   3cb1c:	strd	sl, [sp, #24]
   3cb20:	str	lr, [sp, #32]
   3cb24:	sub	sp, sp, #36	; 0x24
   3cb28:	ldr	fp, [r1, #12]
   3cb2c:	str	r3, [sp, #12]
   3cb30:	str	r2, [sp, #16]
   3cb34:	beq	3ccf8 <fb_name_table_insert_item@@Base+0x1f0>
   3cb38:	cmp	r1, #1
   3cb3c:	mov	r9, r1
   3cb40:	beq	3ccd8 <fb_name_table_insert_item@@Base+0x1d0>
   3cb44:	mov	r3, #179	; 0xb3
   3cb48:	ldr	r1, [r0, #8]
   3cb4c:	mov	sl, r0
   3cb50:	ldr	r7, [r0, #12]
   3cb54:	mul	r3, r3, r7
   3cb58:	cmp	r1, r3, lsr #8
   3cb5c:	bcs	3cc50 <fb_name_table_insert_item@@Base+0x148>
   3cb60:	add	ip, sp, #24
   3cb64:	movw	r1, #15186	; 0x3b52
   3cb68:	movt	r1, #12137	; 0x2f69
   3cb6c:	mov	r3, #0
   3cb70:	ldr	r8, [sl]
   3cb74:	mov	r2, fp
   3cb78:	sub	r7, r7, #1
   3cb7c:	stm	sp, {r1, ip}
   3cb80:	ldr	r0, [sp, #12]
   3cb84:	bl	3b8d4 <cmetrohash64_1@@Base>
   3cb88:	ldr	r3, [sp, #16]
   3cb8c:	ldr	r5, [sp, #24]
   3cb90:	sub	r3, r3, #2
   3cb94:	cmp	r3, #1
   3cb98:	and	r3, r7, r5
   3cb9c:	add	r4, r8, r3, lsl #2
   3cba0:	bls	3cc90 <fb_name_table_insert_item@@Base+0x188>
   3cba4:	ldr	r6, [r8, r3, lsl #2]
   3cba8:	cmp	r6, #0
   3cbac:	moveq	r3, r4
   3cbb0:	beq	3cc78 <fb_name_table_insert_item@@Base+0x170>
   3cbb4:	add	r5, r5, #1
   3cbb8:	mov	r3, #0
   3cbbc:	str	sl, [sp, #20]
   3cbc0:	mov	sl, r8
   3cbc4:	mov	r8, r7
   3cbc8:	mov	r7, r5
   3cbcc:	mov	r5, r3
   3cbd0:	b	3cbf8 <fb_name_table_insert_item@@Base+0xf0>
   3cbd4:	ldr	r2, [r6, #12]
   3cbd8:	cmp	fp, r2
   3cbdc:	beq	3cc0c <fb_name_table_insert_item@@Base+0x104>
   3cbe0:	and	r4, r8, r7
   3cbe4:	add	r7, r7, #1
   3cbe8:	ldr	r6, [sl, r4, lsl #2]
   3cbec:	add	r4, sl, r4, lsl #2
   3cbf0:	cmp	r6, #0
   3cbf4:	beq	3cc68 <fb_name_table_insert_item@@Base+0x160>
   3cbf8:	cmp	r6, #2
   3cbfc:	bne	3cbd4 <fb_name_table_insert_item@@Base+0xcc>
   3cc00:	cmp	r5, #0
   3cc04:	moveq	r5, r4
   3cc08:	b	3cbe0 <fb_name_table_insert_item@@Base+0xd8>
   3cc0c:	mov	r2, fp
   3cc10:	ldr	r1, [r6, #8]
   3cc14:	ldr	r0, [sp, #12]
   3cc18:	bl	13ed0 <memcmp@plt>
   3cc1c:	cmp	r0, #0
   3cc20:	bne	3cbe0 <fb_name_table_insert_item@@Base+0xd8>
   3cc24:	ldr	r3, [sp, #16]
   3cc28:	cmp	r3, #0
   3cc2c:	streq	r9, [r4]
   3cc30:	mov	r0, r6
   3cc34:	add	sp, sp, #36	; 0x24
   3cc38:	ldrd	r4, [sp]
   3cc3c:	ldrd	r6, [sp, #8]
   3cc40:	ldrd	r8, [sp, #16]
   3cc44:	ldrd	sl, [sp, #24]
   3cc48:	add	sp, sp, #32
   3cc4c:	pop	{pc}		; (ldr pc, [sp], #4)
   3cc50:	lsl	r1, r1, #1
   3cc54:	bl	3c528 <cmetrohash64_2@@Base+0x620>
   3cc58:	cmp	r0, #0
   3cc5c:	bne	3cd18 <fb_name_table_insert_item@@Base+0x210>
   3cc60:	ldr	r7, [sl, #12]
   3cc64:	b	3cb60 <fb_name_table_insert_item@@Base+0x58>
   3cc68:	ldr	sl, [sp, #20]
   3cc6c:	cmp	r5, #0
   3cc70:	mov	r3, r5
   3cc74:	moveq	r3, r4
   3cc78:	ldr	r2, [sl, #8]
   3cc7c:	mov	r6, #0
   3cc80:	add	r2, r2, #1
   3cc84:	str	r2, [sl, #8]
   3cc88:	str	r9, [r3]
   3cc8c:	b	3cc30 <fb_name_table_insert_item@@Base+0x128>
   3cc90:	ldr	r2, [sl, #8]
   3cc94:	ldr	r1, [r8, r3, lsl #2]
   3cc98:	add	r3, r2, #1
   3cc9c:	cmp	r1, #0
   3cca0:	cmpne	r1, #2
   3cca4:	str	r3, [sl, #8]
   3cca8:	beq	3cccc <fb_name_table_insert_item@@Base+0x1c4>
   3ccac:	add	r5, r5, #1
   3ccb0:	and	r4, r7, r5
   3ccb4:	add	r5, r5, #1
   3ccb8:	ldr	r3, [r8, r4, lsl #2]
   3ccbc:	add	r4, r8, r4, lsl #2
   3ccc0:	cmp	r3, #0
   3ccc4:	cmpne	r3, #2
   3ccc8:	bne	3ccb0 <fb_name_table_insert_item@@Base+0x1a8>
   3cccc:	mov	r6, #0
   3ccd0:	str	r9, [r4]
   3ccd4:	b	3cc30 <fb_name_table_insert_item@@Base+0x128>
   3ccd8:	movw	r3, #40332	; 0x9d8c
   3ccdc:	movt	r3, #5
   3cce0:	movw	r1, #26484	; 0x6774
   3cce4:	movt	r1, #5
   3cce8:	movw	r0, #26612	; 0x67f4
   3ccec:	movt	r0, #5
   3ccf0:	mov	r2, #116	; 0x74
   3ccf4:	bl	14014 <__assert_fail@plt>
   3ccf8:	movw	r3, #40332	; 0x9d8c
   3ccfc:	movt	r3, #5
   3cd00:	movw	r1, #26484	; 0x6774
   3cd04:	movt	r1, #5
   3cd08:	movw	r0, #26588	; 0x67dc
   3cd0c:	movt	r0, #5
   3cd10:	mov	r2, #115	; 0x73
   3cd14:	bl	14014 <__assert_fail@plt>
   3cd18:	movw	r3, #41128	; 0xa0a8
   3cd1c:	movt	r3, #6
   3cd20:	movw	r2, #26636	; 0x680c
   3cd24:	movt	r2, #5
   3cd28:	ldr	r0, [r3]
   3cd2c:	movw	r1, #26688	; 0x6840
   3cd30:	movt	r1, #5
   3cd34:	bl	13f60 <fprintf@plt>
   3cd38:	mov	r0, #1
   3cd3c:	bl	13f48 <exit@plt>

0003cd40 <fb_name_table_find@@Base>:
   3cd40:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3cd44:	strd	r6, [sp, #8]
   3cd48:	strd	r8, [sp, #16]
   3cd4c:	ldr	r8, [r0]
   3cd50:	str	lr, [sp, #24]
   3cd54:	sub	sp, sp, #20
   3cd58:	cmp	r8, #0
   3cd5c:	beq	3ce04 <fb_name_table_find@@Base+0xc4>
   3cd60:	mov	r7, r1
   3cd64:	add	ip, sp, #8
   3cd68:	ldr	r9, [r0, #12]
   3cd6c:	movw	r1, #15186	; 0x3b52
   3cd70:	movt	r1, #12137	; 0x2f69
   3cd74:	mov	r3, #0
   3cd78:	mov	r0, r7
   3cd7c:	stm	sp, {r1, ip}
   3cd80:	mov	r6, r2
   3cd84:	bl	3b8d4 <cmetrohash64_1@@Base>
   3cd88:	ldr	r5, [sp, #8]
   3cd8c:	sub	r9, r9, #1
   3cd90:	and	r3, r9, r5
   3cd94:	ldr	r4, [r8, r3, lsl #2]
   3cd98:	cmp	r4, #0
   3cd9c:	beq	3ce04 <fb_name_table_find@@Base+0xc4>
   3cda0:	add	r5, r5, #1
   3cda4:	b	3cdbc <fb_name_table_find@@Base+0x7c>
   3cda8:	and	r3, r9, r5
   3cdac:	add	r5, r5, #1
   3cdb0:	ldr	r4, [r8, r3, lsl #2]
   3cdb4:	cmp	r4, #0
   3cdb8:	beq	3ce04 <fb_name_table_find@@Base+0xc4>
   3cdbc:	cmp	r4, #2
   3cdc0:	beq	3cda8 <fb_name_table_find@@Base+0x68>
   3cdc4:	ldr	r3, [r4, #12]
   3cdc8:	cmp	r6, r3
   3cdcc:	bne	3cda8 <fb_name_table_find@@Base+0x68>
   3cdd0:	mov	r2, r6
   3cdd4:	mov	r0, r7
   3cdd8:	ldr	r1, [r4, #8]
   3cddc:	bl	13ed0 <memcmp@plt>
   3cde0:	cmp	r0, #0
   3cde4:	bne	3cda8 <fb_name_table_find@@Base+0x68>
   3cde8:	mov	r0, r4
   3cdec:	add	sp, sp, #20
   3cdf0:	ldrd	r4, [sp]
   3cdf4:	ldrd	r6, [sp, #8]
   3cdf8:	ldrd	r8, [sp, #16]
   3cdfc:	add	sp, sp, #24
   3ce00:	pop	{pc}		; (ldr pc, [sp], #4)
   3ce04:	mov	r4, #0
   3ce08:	b	3cde8 <fb_name_table_find@@Base+0xa8>

0003ce0c <fb_name_table_find_item@@Base>:
   3ce0c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3ce10:	strd	r6, [sp, #8]
   3ce14:	ldr	r7, [r0]
   3ce18:	strd	r8, [sp, #16]
   3ce1c:	str	lr, [sp, #24]
   3ce20:	sub	sp, sp, #20
   3ce24:	ldr	r8, [r1, #8]
   3ce28:	cmp	r7, #0
   3ce2c:	ldr	r6, [r1, #12]
   3ce30:	beq	3ced8 <fb_name_table_find_item@@Base+0xcc>
   3ce34:	add	r1, sp, #8
   3ce38:	movw	r3, #15186	; 0x3b52
   3ce3c:	movt	r3, #12137	; 0x2f69
   3ce40:	mov	r2, r6
   3ce44:	ldr	r9, [r0, #12]
   3ce48:	mov	r0, r8
   3ce4c:	str	r3, [sp]
   3ce50:	mov	r3, #0
   3ce54:	str	r1, [sp, #4]
   3ce58:	bl	3b8d4 <cmetrohash64_1@@Base>
   3ce5c:	ldr	r5, [sp, #8]
   3ce60:	sub	r9, r9, #1
   3ce64:	and	r3, r9, r5
   3ce68:	ldr	r4, [r7, r3, lsl #2]
   3ce6c:	cmp	r4, #0
   3ce70:	beq	3ced8 <fb_name_table_find_item@@Base+0xcc>
   3ce74:	add	r5, r5, #1
   3ce78:	b	3ce90 <fb_name_table_find_item@@Base+0x84>
   3ce7c:	and	r3, r9, r5
   3ce80:	add	r5, r5, #1
   3ce84:	ldr	r4, [r7, r3, lsl #2]
   3ce88:	cmp	r4, #0
   3ce8c:	beq	3ced8 <fb_name_table_find_item@@Base+0xcc>
   3ce90:	cmp	r4, #2
   3ce94:	beq	3ce7c <fb_name_table_find_item@@Base+0x70>
   3ce98:	ldr	r3, [r4, #12]
   3ce9c:	cmp	r6, r3
   3cea0:	bne	3ce7c <fb_name_table_find_item@@Base+0x70>
   3cea4:	mov	r2, r6
   3cea8:	mov	r0, r8
   3ceac:	ldr	r1, [r4, #8]
   3ceb0:	bl	13ed0 <memcmp@plt>
   3ceb4:	cmp	r0, #0
   3ceb8:	bne	3ce7c <fb_name_table_find_item@@Base+0x70>
   3cebc:	mov	r0, r4
   3cec0:	add	sp, sp, #20
   3cec4:	ldrd	r4, [sp]
   3cec8:	ldrd	r6, [sp, #8]
   3cecc:	ldrd	r8, [sp, #16]
   3ced0:	add	sp, sp, #24
   3ced4:	pop	{pc}		; (ldr pc, [sp], #4)
   3ced8:	mov	r4, #0
   3cedc:	b	3cebc <fb_name_table_find_item@@Base+0xb0>

0003cee0 <fb_name_table_remove@@Base>:
   3cee0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3cee4:	ldr	r4, [r0]
   3cee8:	strd	r6, [sp, #8]
   3ceec:	strd	r8, [sp, #16]
   3cef0:	strd	sl, [sp, #24]
   3cef4:	str	lr, [sp, #32]
   3cef8:	sub	sp, sp, #20
   3cefc:	cmp	r4, #0
   3cf00:	beq	3cfcc <fb_name_table_remove@@Base+0xec>
   3cf04:	mov	r7, r1
   3cf08:	add	ip, sp, #8
   3cf0c:	movw	r1, #15186	; 0x3b52
   3cf10:	movt	r1, #12137	; 0x2f69
   3cf14:	mov	r5, r0
   3cf18:	mov	r3, #0
   3cf1c:	mov	r0, r7
   3cf20:	ldr	r8, [r5, #12]
   3cf24:	mov	r6, r2
   3cf28:	stm	sp, {r1, ip}
   3cf2c:	bl	3b8d4 <cmetrohash64_1@@Base>
   3cf30:	ldr	sl, [sp, #8]
   3cf34:	sub	r8, r8, #1
   3cf38:	and	r3, r8, sl
   3cf3c:	ldr	r9, [r4, r3, lsl #2]
   3cf40:	add	fp, r4, r3, lsl #2
   3cf44:	cmp	r9, #0
   3cf48:	beq	3cfcc <fb_name_table_remove@@Base+0xec>
   3cf4c:	add	sl, sl, #1
   3cf50:	b	3cf6c <fb_name_table_remove@@Base+0x8c>
   3cf54:	and	r3, r8, sl
   3cf58:	add	sl, sl, #1
   3cf5c:	ldr	r9, [r4, r3, lsl #2]
   3cf60:	add	fp, r4, r3, lsl #2
   3cf64:	cmp	r9, #0
   3cf68:	beq	3cfcc <fb_name_table_remove@@Base+0xec>
   3cf6c:	cmp	r9, #2
   3cf70:	beq	3cf54 <fb_name_table_remove@@Base+0x74>
   3cf74:	ldr	r3, [r9, #12]
   3cf78:	cmp	r6, r3
   3cf7c:	bne	3cf54 <fb_name_table_remove@@Base+0x74>
   3cf80:	mov	r2, r6
   3cf84:	mov	r0, r7
   3cf88:	ldr	r1, [r9, #8]
   3cf8c:	bl	13ed0 <memcmp@plt>
   3cf90:	cmp	r0, #0
   3cf94:	bne	3cf54 <fb_name_table_remove@@Base+0x74>
   3cf98:	ldr	r3, [r5, #8]
   3cf9c:	mov	r2, #2
   3cfa0:	str	r2, [fp]
   3cfa4:	sub	r3, r3, #1
   3cfa8:	str	r3, [r5, #8]
   3cfac:	mov	r0, r9
   3cfb0:	add	sp, sp, #20
   3cfb4:	ldrd	r4, [sp]
   3cfb8:	ldrd	r6, [sp, #8]
   3cfbc:	ldrd	r8, [sp, #16]
   3cfc0:	ldrd	sl, [sp, #24]
   3cfc4:	add	sp, sp, #32
   3cfc8:	pop	{pc}		; (ldr pc, [sp], #4)
   3cfcc:	mov	r9, #0
   3cfd0:	b	3cfac <fb_name_table_remove@@Base+0xcc>

0003cfd4 <fb_name_table_remove_item@@Base>:
   3cfd4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3cfd8:	ldr	r4, [r0]
   3cfdc:	strd	r6, [sp, #8]
   3cfe0:	strd	r8, [sp, #16]
   3cfe4:	strd	sl, [sp, #24]
   3cfe8:	str	lr, [sp, #32]
   3cfec:	sub	sp, sp, #20
   3cff0:	cmp	r4, #0
   3cff4:	ldrd	r6, [r1, #8]
   3cff8:	beq	3d0c4 <fb_name_table_remove_item@@Base+0xf0>
   3cffc:	add	r1, sp, #8
   3d000:	movw	r3, #15186	; 0x3b52
   3d004:	movt	r3, #12137	; 0x2f69
   3d008:	mov	r5, r0
   3d00c:	mov	r2, r7
   3d010:	mov	r0, r6
   3d014:	ldr	r8, [r5, #12]
   3d018:	str	r3, [sp]
   3d01c:	mov	r3, #0
   3d020:	str	r1, [sp, #4]
   3d024:	bl	3b8d4 <cmetrohash64_1@@Base>
   3d028:	ldr	sl, [sp, #8]
   3d02c:	sub	r8, r8, #1
   3d030:	and	r3, r8, sl
   3d034:	ldr	r9, [r4, r3, lsl #2]
   3d038:	add	fp, r4, r3, lsl #2
   3d03c:	cmp	r9, #0
   3d040:	beq	3d0c4 <fb_name_table_remove_item@@Base+0xf0>
   3d044:	add	sl, sl, #1
   3d048:	b	3d064 <fb_name_table_remove_item@@Base+0x90>
   3d04c:	and	r3, r8, sl
   3d050:	add	sl, sl, #1
   3d054:	ldr	r9, [r4, r3, lsl #2]
   3d058:	add	fp, r4, r3, lsl #2
   3d05c:	cmp	r9, #0
   3d060:	beq	3d0c4 <fb_name_table_remove_item@@Base+0xf0>
   3d064:	cmp	r9, #2
   3d068:	beq	3d04c <fb_name_table_remove_item@@Base+0x78>
   3d06c:	ldr	r3, [r9, #12]
   3d070:	cmp	r7, r3
   3d074:	bne	3d04c <fb_name_table_remove_item@@Base+0x78>
   3d078:	mov	r2, r7
   3d07c:	mov	r0, r6
   3d080:	ldr	r1, [r9, #8]
   3d084:	bl	13ed0 <memcmp@plt>
   3d088:	cmp	r0, #0
   3d08c:	bne	3d04c <fb_name_table_remove_item@@Base+0x78>
   3d090:	ldr	r3, [r5, #8]
   3d094:	mov	r2, #2
   3d098:	str	r2, [fp]
   3d09c:	sub	r3, r3, #1
   3d0a0:	str	r3, [r5, #8]
   3d0a4:	mov	r0, r9
   3d0a8:	add	sp, sp, #20
   3d0ac:	ldrd	r4, [sp]
   3d0b0:	ldrd	r6, [sp, #8]
   3d0b4:	ldrd	r8, [sp, #16]
   3d0b8:	ldrd	sl, [sp, #24]
   3d0bc:	add	sp, sp, #32
   3d0c0:	pop	{pc}		; (ldr pc, [sp], #4)
   3d0c4:	mov	r9, #0
   3d0c8:	b	3d0a4 <fb_name_table_remove_item@@Base+0xd0>

0003d0cc <fb_name_table_visit@@Base>:
   3d0cc:	ldr	ip, [r0, #12]
   3d0d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3d0d4:	ldr	r5, [r0]
   3d0d8:	strd	r6, [sp, #8]
   3d0dc:	str	r8, [sp, #16]
   3d0e0:	cmp	ip, #0
   3d0e4:	str	lr, [sp, #20]
   3d0e8:	beq	3d12c <fb_name_table_visit@@Base+0x60>
   3d0ec:	mov	r6, r2
   3d0f0:	mov	r8, r1
   3d0f4:	mov	r7, r0
   3d0f8:	sub	r5, r5, #4
   3d0fc:	mov	r4, #0
   3d100:	ldr	r3, [r5, #4]!
   3d104:	mov	r0, r6
   3d108:	cmp	r3, #0
   3d10c:	cmpne	r3, #2
   3d110:	mov	r1, r3
   3d114:	beq	3d140 <fb_name_table_visit@@Base+0x74>
   3d118:	blx	r8
   3d11c:	ldr	ip, [r7, #12]
   3d120:	add	r4, r4, #1
   3d124:	cmp	r4, ip
   3d128:	bcc	3d100 <fb_name_table_visit@@Base+0x34>
   3d12c:	ldrd	r4, [sp]
   3d130:	ldrd	r6, [sp, #8]
   3d134:	ldr	r8, [sp, #16]
   3d138:	add	sp, sp, #20
   3d13c:	pop	{pc}		; (ldr pc, [sp], #4)
   3d140:	add	r4, r4, #1
   3d144:	cmp	r4, ip
   3d148:	bcc	3d100 <fb_name_table_visit@@Base+0x34>
   3d14c:	b	3d12c <fb_name_table_visit@@Base+0x60>
   3d150:	ldr	r3, [r0, #8]
   3d154:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3d158:	strd	r6, [sp, #8]
   3d15c:	mov	r7, r0
   3d160:	strd	r8, [sp, #16]
   3d164:	strd	sl, [sp, #24]
   3d168:	cmp	r1, r3
   3d16c:	str	lr, [sp, #32]
   3d170:	sub	sp, sp, #20
   3d174:	movcc	r1, r3
   3d178:	ldr	r6, [r0]
   3d17c:	cmp	r1, #2
   3d180:	bls	3d368 <fb_name_table_visit@@Base+0x29c>
   3d184:	mov	r3, #4
   3d188:	movw	r0, #358	; 0x166
   3d18c:	mul	r2, r0, r3
   3d190:	lsl	r4, r3, #1
   3d194:	cmp	r1, r2, lsr #8
   3d198:	mov	r3, r4
   3d19c:	bhi	3d18c <fb_name_table_visit@@Base+0xc0>
   3d1a0:	mov	r1, #4
   3d1a4:	mov	r0, r4
   3d1a8:	bl	13e7c <calloc@plt>
   3d1ac:	cmp	r0, #0
   3d1b0:	str	r0, [sp]
   3d1b4:	beq	3d370 <fb_name_table_visit@@Base+0x2a4>
   3d1b8:	ldr	lr, [r7, #12]
   3d1bc:	mov	r5, #0
   3d1c0:	str	r5, [sp, #4]
   3d1c4:	str	r5, [sp, #8]
   3d1c8:	str	r4, [sp, #12]
   3d1cc:	cmp	lr, r5
   3d1d0:	beq	3d2a8 <fb_name_table_visit@@Base+0x1dc>
   3d1d4:	movw	sl, #15191	; 0x3b57
   3d1d8:	movt	sl, #12137	; 0x2f69
   3d1dc:	movw	r8, #31153	; 0x79b1
   3d1e0:	movt	r8, #40503	; 0x9e37
   3d1e4:	movw	r9, #15186	; 0x3b52
   3d1e8:	movt	r9, #12137	; 0x2f69
   3d1ec:	sub	r6, r6, #4
   3d1f0:	b	3d200 <fb_name_table_visit@@Base+0x134>
   3d1f4:	add	r5, r5, #1
   3d1f8:	cmp	r5, lr
   3d1fc:	bcs	3d2a4 <fb_name_table_visit@@Base+0x1d8>
   3d200:	ldr	r4, [r6, #4]!
   3d204:	cmp	r4, #0
   3d208:	cmpne	r4, #2
   3d20c:	beq	3d1f4 <fb_name_table_visit@@Base+0x128>
   3d210:	cmp	r4, #1
   3d214:	beq	3d378 <fb_name_table_visit@@Base+0x2ac>
   3d218:	mov	r3, #179	; 0xb3
   3d21c:	ldr	r1, [sp, #8]
   3d220:	ldr	r0, [sp, #12]
   3d224:	mul	r3, r3, r0
   3d228:	cmp	r1, r3, lsr #8
   3d22c:	bcs	3d2f4 <fb_name_table_visit@@Base+0x228>
   3d230:	ldrh	r3, [r4, #8]
   3d234:	sub	r0, r0, #1
   3d238:	ldr	ip, [sp]
   3d23c:	cmp	r3, #5
   3d240:	beq	3d318 <fb_name_table_visit@@Base+0x24c>
   3d244:	cmp	r3, #6
   3d248:	beq	3d34c <fb_name_table_visit@@Base+0x280>
   3d24c:	cmp	r3, #4
   3d250:	movne	r3, ip
   3d254:	movne	r2, #0
   3d258:	beq	3d330 <fb_name_table_visit@@Base+0x264>
   3d25c:	ldr	fp, [r3]
   3d260:	add	r1, r1, #1
   3d264:	str	r1, [sp, #8]
   3d268:	cmp	fp, #2
   3d26c:	cmpne	fp, #0
   3d270:	beq	3d294 <fb_name_table_visit@@Base+0x1c8>
   3d274:	add	r2, r2, #1
   3d278:	and	r3, r0, r2
   3d27c:	add	r2, r2, #1
   3d280:	ldr	r1, [ip, r3, lsl #2]
   3d284:	add	r3, ip, r3, lsl #2
   3d288:	cmp	r1, #0
   3d28c:	cmpne	r1, #2
   3d290:	bne	3d278 <fb_name_table_visit@@Base+0x1ac>
   3d294:	add	r5, r5, #1
   3d298:	str	r4, [r3]
   3d29c:	cmp	r5, lr
   3d2a0:	bcc	3d200 <fb_name_table_visit@@Base+0x134>
   3d2a4:	ldr	r6, [r7]
   3d2a8:	cmp	r6, #0
   3d2ac:	beq	3d2b8 <fb_name_table_visit@@Base+0x1ec>
   3d2b0:	mov	r0, r6
   3d2b4:	bl	13eac <free@plt>
   3d2b8:	ldr	r3, [sp]
   3d2bc:	mov	r0, #0
   3d2c0:	ldmib	sp, {r1, r2}
   3d2c4:	str	r3, [r7]
   3d2c8:	ldr	r3, [sp, #12]
   3d2cc:	str	r1, [r7, #4]
   3d2d0:	str	r2, [r7, #8]
   3d2d4:	str	r3, [r7, #12]
   3d2d8:	add	sp, sp, #20
   3d2dc:	ldrd	r4, [sp]
   3d2e0:	ldrd	r6, [sp, #8]
   3d2e4:	ldrd	r8, [sp, #16]
   3d2e8:	ldrd	sl, [sp, #24]
   3d2ec:	add	sp, sp, #32
   3d2f0:	pop	{pc}		; (ldr pc, [sp], #4)
   3d2f4:	lsl	r1, r1, #1
   3d2f8:	mov	r0, sp
   3d2fc:	bl	3d150 <fb_name_table_visit@@Base+0x84>
   3d300:	cmp	r0, #0
   3d304:	bne	3d398 <fb_name_table_visit@@Base+0x2cc>
   3d308:	ldr	r1, [sp, #8]
   3d30c:	ldr	lr, [r7, #12]
   3d310:	ldr	r0, [sp, #12]
   3d314:	b	3d230 <fb_name_table_visit@@Base+0x164>
   3d318:	ldr	r2, [r4]
   3d31c:	eor	r2, r2, sl
   3d320:	mul	r2, r8, r2
   3d324:	and	r3, r0, r2
   3d328:	add	r3, ip, r3, lsl #2
   3d32c:	b	3d25c <fb_name_table_visit@@Base+0x190>
   3d330:	ldr	r2, [r4]
   3d334:	eor	r2, r2, #4
   3d338:	eor	r2, r2, r9
   3d33c:	mul	r2, r8, r2
   3d340:	and	r3, r0, r2
   3d344:	add	r3, ip, r3, lsl #2
   3d348:	b	3d25c <fb_name_table_visit@@Base+0x190>
   3d34c:	ldrb	r2, [r4]
   3d350:	eor	r2, r2, #6
   3d354:	eor	r2, r2, r9
   3d358:	mul	r2, r8, r2
   3d35c:	and	r3, r0, r2
   3d360:	add	r3, ip, r3, lsl #2
   3d364:	b	3d25c <fb_name_table_visit@@Base+0x190>
   3d368:	mov	r4, #4
   3d36c:	b	3d1a0 <fb_name_table_visit@@Base+0xd4>
   3d370:	mvn	r0, #0
   3d374:	b	3d2d8 <fb_name_table_visit@@Base+0x20c>
   3d378:	movw	r3, #40356	; 0x9da4
   3d37c:	movt	r3, #5
   3d380:	movw	r1, #26484	; 0x6774
   3d384:	movt	r1, #5
   3d388:	movw	r0, #26612	; 0x67f4
   3d38c:	movt	r0, #5
   3d390:	mov	r2, #116	; 0x74
   3d394:	bl	14014 <__assert_fail@plt>
   3d398:	movw	r3, #41128	; 0xa0a8
   3d39c:	movt	r3, #6
   3d3a0:	movw	r2, #26636	; 0x680c
   3d3a4:	movt	r2, #5
   3d3a8:	ldr	r0, [r3]
   3d3ac:	movw	r1, #26688	; 0x6840
   3d3b0:	movt	r1, #5
   3d3b4:	bl	13f60 <fprintf@plt>
   3d3b8:	mov	r0, #1
   3d3bc:	bl	13f48 <exit@plt>
   3d3c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3d3c4:	strd	r6, [sp, #8]
   3d3c8:	strd	sl, [sp, #24]
   3d3cc:	subs	fp, r2, #0
   3d3d0:	strd	r8, [sp, #16]
   3d3d4:	str	lr, [sp, #32]
   3d3d8:	sub	sp, sp, #12
   3d3dc:	beq	3d660 <fb_name_table_visit@@Base+0x594>
   3d3e0:	cmp	fp, #2
   3d3e4:	beq	3d640 <fb_name_table_visit@@Base+0x574>
   3d3e8:	cmp	fp, #1
   3d3ec:	beq	3d620 <fb_name_table_visit@@Base+0x554>
   3d3f0:	ldr	lr, [r0, #12]
   3d3f4:	mov	r9, r1
   3d3f8:	mov	r6, r3
   3d3fc:	mov	r3, #179	; 0xb3
   3d400:	mov	sl, r0
   3d404:	ldr	r1, [r0, #8]
   3d408:	mul	r3, r3, lr
   3d40c:	cmp	r1, r3, lsr #8
   3d410:	bcs	3d550 <fb_name_table_visit@@Base+0x484>
   3d414:	ldrh	ip, [r9, #8]
   3d418:	sub	lr, lr, #1
   3d41c:	ldr	r1, [sl]
   3d420:	cmp	ip, #5
   3d424:	beq	3d5ec <fb_name_table_visit@@Base+0x520>
   3d428:	cmp	ip, #6
   3d42c:	beq	3d5e0 <fb_name_table_visit@@Base+0x514>
   3d430:	cmp	ip, #4
   3d434:	movne	r3, r1
   3d438:	movne	r2, #0
   3d43c:	beq	3d568 <fb_name_table_visit@@Base+0x49c>
   3d440:	sub	r4, r6, #2
   3d444:	ldr	r0, [r3]
   3d448:	cmp	r4, #1
   3d44c:	bls	3d59c <fb_name_table_visit@@Base+0x4d0>
   3d450:	cmp	r0, #0
   3d454:	moveq	r8, r3
   3d458:	beq	3d520 <fb_name_table_visit@@Base+0x454>
   3d45c:	mov	r4, r6
   3d460:	add	r2, r2, #1
   3d464:	mov	r8, #0
   3d468:	mov	r7, fp
   3d46c:	mov	r6, sl
   3d470:	str	r4, [sp, #4]
   3d474:	b	3d4b4 <fb_name_table_visit@@Base+0x3e8>
   3d478:	ldrh	r4, [r0, #8]
   3d47c:	cmp	r4, ip
   3d480:	bne	3d49c <fb_name_table_visit@@Base+0x3d0>
   3d484:	cmp	ip, #5
   3d488:	beq	3d4c8 <fb_name_table_visit@@Base+0x3fc>
   3d48c:	cmp	ip, #6
   3d490:	beq	3d4f8 <fb_name_table_visit@@Base+0x42c>
   3d494:	cmp	ip, #4
   3d498:	beq	3d4c8 <fb_name_table_visit@@Base+0x3fc>
   3d49c:	and	r3, lr, r2
   3d4a0:	add	r2, r2, #1
   3d4a4:	ldr	r0, [r1, r3, lsl #2]
   3d4a8:	add	r3, r1, r3, lsl #2
   3d4ac:	cmp	r0, #0
   3d4b0:	beq	3d510 <fb_name_table_visit@@Base+0x444>
   3d4b4:	cmp	r0, #2
   3d4b8:	bne	3d478 <fb_name_table_visit@@Base+0x3ac>
   3d4bc:	cmp	r8, #0
   3d4c0:	moveq	r8, r3
   3d4c4:	b	3d49c <fb_name_table_visit@@Base+0x3d0>
   3d4c8:	ldrd	r4, [r0]
   3d4cc:	ldrd	sl, [r9]
   3d4d0:	cmp	fp, r5
   3d4d4:	cmpeq	sl, r4
   3d4d8:	moveq	r4, #1
   3d4dc:	movne	r4, #0
   3d4e0:	cmp	r4, #0
   3d4e4:	beq	3d49c <fb_name_table_visit@@Base+0x3d0>
   3d4e8:	ldr	r6, [sp, #4]
   3d4ec:	cmp	r6, #0
   3d4f0:	streq	r7, [r3]
   3d4f4:	b	3d534 <fb_name_table_visit@@Base+0x468>
   3d4f8:	ldrb	r4, [r9]
   3d4fc:	ldrb	r5, [r0]
   3d500:	sub	r4, r4, r5
   3d504:	clz	r4, r4
   3d508:	lsr	r4, r4, #5
   3d50c:	b	3d4e0 <fb_name_table_visit@@Base+0x414>
   3d510:	cmp	r8, #0
   3d514:	mov	sl, r6
   3d518:	mov	fp, r7
   3d51c:	moveq	r8, r3
   3d520:	ldr	r3, [sl, #8]
   3d524:	mov	r0, #0
   3d528:	add	r3, r3, #1
   3d52c:	str	r3, [sl, #8]
   3d530:	str	fp, [r8]
   3d534:	add	sp, sp, #12
   3d538:	ldrd	r4, [sp]
   3d53c:	ldrd	r6, [sp, #8]
   3d540:	ldrd	r8, [sp, #16]
   3d544:	ldrd	sl, [sp, #24]
   3d548:	add	sp, sp, #32
   3d54c:	pop	{pc}		; (ldr pc, [sp], #4)
   3d550:	lsl	r1, r1, #1
   3d554:	bl	3d150 <fb_name_table_visit@@Base+0x84>
   3d558:	cmp	r0, #0
   3d55c:	bne	3d5f8 <fb_name_table_visit@@Base+0x52c>
   3d560:	ldr	lr, [sl, #12]
   3d564:	b	3d414 <fb_name_table_visit@@Base+0x348>
   3d568:	ldr	r0, [r9]
   3d56c:	movw	r3, #15190	; 0x3b56
   3d570:	movt	r3, #12137	; 0x2f69
   3d574:	movw	r2, #31153	; 0x79b1
   3d578:	movt	r2, #40503	; 0x9e37
   3d57c:	eor	r3, r3, r0
   3d580:	sub	r4, r6, #2
   3d584:	mul	r2, r2, r3
   3d588:	cmp	r4, #1
   3d58c:	and	r3, lr, r2
   3d590:	add	r3, r1, r3, lsl #2
   3d594:	ldr	r0, [r3]
   3d598:	bhi	3d450 <fb_name_table_visit@@Base+0x384>
   3d59c:	cmp	r0, #0
   3d5a0:	cmpne	r0, #2
   3d5a4:	ldr	ip, [sl, #8]
   3d5a8:	add	ip, ip, #1
   3d5ac:	str	ip, [sl, #8]
   3d5b0:	beq	3d5d4 <fb_name_table_visit@@Base+0x508>
   3d5b4:	add	r2, r2, #1
   3d5b8:	and	r3, lr, r2
   3d5bc:	add	r2, r2, #1
   3d5c0:	ldr	r0, [r1, r3, lsl #2]
   3d5c4:	add	r3, r1, r3, lsl #2
   3d5c8:	cmp	r0, #0
   3d5cc:	cmpne	r0, #2
   3d5d0:	bne	3d5b8 <fb_name_table_visit@@Base+0x4ec>
   3d5d4:	mov	r0, #0
   3d5d8:	str	fp, [r3]
   3d5dc:	b	3d534 <fb_name_table_visit@@Base+0x468>
   3d5e0:	ldrb	r0, [r9]
   3d5e4:	movw	r3, #15188	; 0x3b54
   3d5e8:	b	3d570 <fb_name_table_visit@@Base+0x4a4>
   3d5ec:	movw	r3, #15191	; 0x3b57
   3d5f0:	ldr	r0, [r9]
   3d5f4:	b	3d570 <fb_name_table_visit@@Base+0x4a4>
   3d5f8:	movw	r3, #41128	; 0xa0a8
   3d5fc:	movt	r3, #6
   3d600:	movw	r2, #26636	; 0x680c
   3d604:	movt	r2, #5
   3d608:	ldr	r0, [r3]
   3d60c:	movw	r1, #26688	; 0x6840
   3d610:	movt	r1, #5
   3d614:	bl	13f60 <fprintf@plt>
   3d618:	mov	r0, #1
   3d61c:	bl	13f48 <exit@plt>
   3d620:	movw	r3, #40356	; 0x9da4
   3d624:	movt	r3, #5
   3d628:	movw	r1, #26484	; 0x6774
   3d62c:	movt	r1, #5
   3d630:	movw	r0, #26612	; 0x67f4
   3d634:	movt	r0, #5
   3d638:	mov	r2, #116	; 0x74
   3d63c:	bl	14014 <__assert_fail@plt>
   3d640:	movw	r3, #40356	; 0x9da4
   3d644:	movt	r3, #5
   3d648:	movw	r1, #26484	; 0x6774
   3d64c:	movt	r1, #5
   3d650:	movw	r0, #26588	; 0x67dc
   3d654:	movt	r0, #5
   3d658:	mov	r2, #115	; 0x73
   3d65c:	bl	14014 <__assert_fail@plt>
   3d660:	movw	r3, #40356	; 0x9da4
   3d664:	movt	r3, #5
   3d668:	movw	r1, #26484	; 0x6774
   3d66c:	movt	r1, #5
   3d670:	movw	r0, #26564	; 0x67c4
   3d674:	movt	r0, #5
   3d678:	mov	r2, #114	; 0x72
   3d67c:	bl	14014 <__assert_fail@plt>

0003d680 <fb_value_set_clear@@Base>:
   3d680:	str	r4, [sp, #-8]!
   3d684:	mov	r4, r0
   3d688:	ldr	r0, [r0]
   3d68c:	str	lr, [sp, #4]
   3d690:	cmp	r0, #0
   3d694:	beq	3d69c <fb_value_set_clear@@Base+0x1c>
   3d698:	bl	13eac <free@plt>
   3d69c:	mov	r3, #0
   3d6a0:	str	r3, [r4]
   3d6a4:	str	r3, [r4, #4]
   3d6a8:	str	r3, [r4, #8]
   3d6ac:	str	r3, [r4, #12]
   3d6b0:	ldr	r4, [sp]
   3d6b4:	add	sp, sp, #4
   3d6b8:	pop	{pc}		; (ldr pc, [sp], #4)

0003d6bc <fb_value_set_destroy@@Base>:
   3d6bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3d6c0:	strd	r6, [sp, #8]
   3d6c4:	mov	r6, r0
   3d6c8:	str	r8, [sp, #16]
   3d6cc:	subs	r8, r1, #0
   3d6d0:	str	lr, [sp, #20]
   3d6d4:	ldr	r0, [r0]
   3d6d8:	beq	3d724 <fb_value_set_destroy@@Base+0x68>
   3d6dc:	ldr	ip, [r6, #12]
   3d6e0:	cmp	ip, #0
   3d6e4:	beq	3d724 <fb_value_set_destroy@@Base+0x68>
   3d6e8:	mov	r7, r2
   3d6ec:	sub	r5, r0, #4
   3d6f0:	mov	r4, #0
   3d6f4:	ldr	r3, [r5, #4]!
   3d6f8:	mov	r0, r7
   3d6fc:	cmp	r3, #0
   3d700:	cmpne	r3, #2
   3d704:	mov	r1, r3
   3d708:	beq	3d758 <fb_value_set_destroy@@Base+0x9c>
   3d70c:	blx	r8
   3d710:	ldr	ip, [r6, #12]
   3d714:	add	r4, r4, #1
   3d718:	cmp	r4, ip
   3d71c:	bcc	3d6f4 <fb_value_set_destroy@@Base+0x38>
   3d720:	ldr	r0, [r6]
   3d724:	cmp	r0, #0
   3d728:	beq	3d730 <fb_value_set_destroy@@Base+0x74>
   3d72c:	bl	13eac <free@plt>
   3d730:	mov	r3, #0
   3d734:	str	r3, [r6]
   3d738:	str	r3, [r6, #4]
   3d73c:	str	r3, [r6, #8]
   3d740:	str	r3, [r6, #12]
   3d744:	ldrd	r4, [sp]
   3d748:	ldrd	r6, [sp, #8]
   3d74c:	ldr	r8, [sp, #16]
   3d750:	add	sp, sp, #20
   3d754:	pop	{pc}		; (ldr pc, [sp], #4)
   3d758:	add	r4, r4, #1
   3d75c:	cmp	r4, ip
   3d760:	bcc	3d6f4 <fb_value_set_destroy@@Base+0x38>
   3d764:	b	3d720 <fb_value_set_destroy@@Base+0x64>

0003d768 <fb_value_set_init@@Base>:
   3d768:	cmp	r1, #2
   3d76c:	strd	r4, [sp, #-16]!
   3d770:	mov	r4, r0
   3d774:	str	r6, [sp, #8]
   3d778:	str	lr, [sp, #12]
   3d77c:	bls	3d7d8 <fb_value_set_init@@Base+0x70>
   3d780:	mov	r3, #4
   3d784:	movw	r0, #358	; 0x166
   3d788:	mul	r2, r0, r3
   3d78c:	lsl	r5, r3, #1
   3d790:	cmp	r1, r2, lsr #8
   3d794:	mov	r3, r5
   3d798:	bhi	3d788 <fb_value_set_init@@Base+0x20>
   3d79c:	mov	r1, #4
   3d7a0:	mov	r0, r5
   3d7a4:	bl	13e7c <calloc@plt>
   3d7a8:	cmp	r0, #0
   3d7ac:	str	r0, [r4]
   3d7b0:	beq	3d7e0 <fb_value_set_init@@Base+0x78>
   3d7b4:	mov	r3, #0
   3d7b8:	mov	r0, r3
   3d7bc:	str	r3, [r4, #4]
   3d7c0:	str	r3, [r4, #8]
   3d7c4:	str	r5, [r4, #12]
   3d7c8:	ldrd	r4, [sp]
   3d7cc:	ldr	r6, [sp, #8]
   3d7d0:	add	sp, sp, #12
   3d7d4:	pop	{pc}		; (ldr pc, [sp], #4)
   3d7d8:	mov	r5, #4
   3d7dc:	b	3d79c <fb_value_set_init@@Base+0x34>
   3d7e0:	mvn	r0, #0
   3d7e4:	b	3d7c8 <fb_value_set_init@@Base+0x60>

0003d7e8 <fb_value_set_resize@@Base>:
   3d7e8:	b	3d150 <fb_name_table_visit@@Base+0x84>

0003d7ec <fb_value_set_insert@@Base>:
   3d7ec:	mov	r2, r3
   3d7f0:	ldr	r3, [sp]
   3d7f4:	b	3d3c0 <fb_name_table_visit@@Base+0x2f4>

0003d7f8 <fb_value_set_insert_item@@Base>:
   3d7f8:	mov	r3, r2
   3d7fc:	mov	r2, r1
   3d800:	b	3d3c0 <fb_name_table_visit@@Base+0x2f4>

0003d804 <fb_value_set_find@@Base>:
   3d804:	strd	r4, [sp, #-20]!	; 0xffffffec
   3d808:	strd	r6, [sp, #8]
   3d80c:	ldr	r7, [r0]
   3d810:	str	lr, [sp, #16]
   3d814:	cmp	r7, #0
   3d818:	beq	3d924 <fb_value_set_find@@Base+0x120>
   3d81c:	ldrh	lr, [r1, #8]
   3d820:	ldr	r6, [r0, #12]
   3d824:	cmp	lr, #5
   3d828:	sub	r6, r6, #1
   3d82c:	beq	3d8e4 <fb_value_set_find@@Base+0xe0>
   3d830:	cmp	lr, #6
   3d834:	beq	3d918 <fb_value_set_find@@Base+0x114>
   3d838:	cmp	lr, #4
   3d83c:	movne	r3, r7
   3d840:	movne	ip, #0
   3d844:	beq	3d90c <fb_value_set_find@@Base+0x108>
   3d848:	ldr	r0, [r3]
   3d84c:	cmp	r0, #0
   3d850:	beq	3d8b8 <fb_value_set_find@@Base+0xb4>
   3d854:	add	ip, ip, #1
   3d858:	b	3d878 <fb_value_set_find@@Base+0x74>
   3d85c:	cmp	lr, #4
   3d860:	beq	3d8c8 <fb_value_set_find@@Base+0xc4>
   3d864:	and	r3, r6, ip
   3d868:	add	ip, ip, #1
   3d86c:	ldr	r0, [r7, r3, lsl #2]
   3d870:	cmp	r0, #0
   3d874:	beq	3d8b8 <fb_value_set_find@@Base+0xb4>
   3d878:	cmp	r0, #2
   3d87c:	beq	3d864 <fb_value_set_find@@Base+0x60>
   3d880:	ldrh	r3, [r0, #8]
   3d884:	cmp	r3, lr
   3d888:	bne	3d864 <fb_value_set_find@@Base+0x60>
   3d88c:	cmp	lr, #5
   3d890:	beq	3d8c8 <fb_value_set_find@@Base+0xc4>
   3d894:	cmp	lr, #6
   3d898:	bne	3d85c <fb_value_set_find@@Base+0x58>
   3d89c:	ldrb	r3, [r1]
   3d8a0:	ldrb	r2, [r0]
   3d8a4:	sub	r3, r3, r2
   3d8a8:	clz	r3, r3
   3d8ac:	lsr	r3, r3, #5
   3d8b0:	cmp	r3, #0
   3d8b4:	beq	3d864 <fb_value_set_find@@Base+0x60>
   3d8b8:	ldrd	r4, [sp]
   3d8bc:	ldrd	r6, [sp, #8]
   3d8c0:	add	sp, sp, #16
   3d8c4:	pop	{pc}		; (ldr pc, [sp], #4)
   3d8c8:	ldrd	r2, [r0]
   3d8cc:	ldrd	r4, [r1]
   3d8d0:	cmp	r5, r3
   3d8d4:	cmpeq	r4, r2
   3d8d8:	moveq	r3, #1
   3d8dc:	movne	r3, #0
   3d8e0:	b	3d8b0 <fb_value_set_find@@Base+0xac>
   3d8e4:	ldr	r2, [r1]
   3d8e8:	movw	r3, #15191	; 0x3b57
   3d8ec:	movt	r3, #12137	; 0x2f69
   3d8f0:	movw	ip, #31153	; 0x79b1
   3d8f4:	movt	ip, #40503	; 0x9e37
   3d8f8:	eor	r3, r3, r2
   3d8fc:	mul	ip, ip, r3
   3d900:	and	r3, r6, ip
   3d904:	add	r3, r7, r3, lsl #2
   3d908:	b	3d848 <fb_value_set_find@@Base+0x44>
   3d90c:	movw	r3, #15190	; 0x3b56
   3d910:	ldr	r2, [r1]
   3d914:	b	3d8ec <fb_value_set_find@@Base+0xe8>
   3d918:	ldrb	r2, [r1]
   3d91c:	movw	r3, #15188	; 0x3b54
   3d920:	b	3d8ec <fb_value_set_find@@Base+0xe8>
   3d924:	mov	r0, r7
   3d928:	b	3d8b8 <fb_value_set_find@@Base+0xb4>

0003d92c <fb_value_set_find_item@@Base>:
   3d92c:	strd	r4, [sp, #-20]!	; 0xffffffec
   3d930:	strd	r6, [sp, #8]
   3d934:	ldr	r7, [r0]
   3d938:	str	lr, [sp, #16]
   3d93c:	cmp	r7, #0
   3d940:	beq	3da4c <fb_value_set_find_item@@Base+0x120>
   3d944:	ldrh	lr, [r1, #8]
   3d948:	ldr	r6, [r0, #12]
   3d94c:	cmp	lr, #5
   3d950:	sub	r6, r6, #1
   3d954:	beq	3da0c <fb_value_set_find_item@@Base+0xe0>
   3d958:	cmp	lr, #6
   3d95c:	beq	3da40 <fb_value_set_find_item@@Base+0x114>
   3d960:	cmp	lr, #4
   3d964:	movne	r3, r7
   3d968:	movne	ip, #0
   3d96c:	beq	3da34 <fb_value_set_find_item@@Base+0x108>
   3d970:	ldr	r0, [r3]
   3d974:	cmp	r0, #0
   3d978:	beq	3d9e0 <fb_value_set_find_item@@Base+0xb4>
   3d97c:	add	ip, ip, #1
   3d980:	b	3d9a0 <fb_value_set_find_item@@Base+0x74>
   3d984:	cmp	lr, #4
   3d988:	beq	3d9f0 <fb_value_set_find_item@@Base+0xc4>
   3d98c:	and	r3, r6, ip
   3d990:	add	ip, ip, #1
   3d994:	ldr	r0, [r7, r3, lsl #2]
   3d998:	cmp	r0, #0
   3d99c:	beq	3d9e0 <fb_value_set_find_item@@Base+0xb4>
   3d9a0:	cmp	r0, #2
   3d9a4:	beq	3d98c <fb_value_set_find_item@@Base+0x60>
   3d9a8:	ldrh	r3, [r0, #8]
   3d9ac:	cmp	r3, lr
   3d9b0:	bne	3d98c <fb_value_set_find_item@@Base+0x60>
   3d9b4:	cmp	lr, #5
   3d9b8:	beq	3d9f0 <fb_value_set_find_item@@Base+0xc4>
   3d9bc:	cmp	lr, #6
   3d9c0:	bne	3d984 <fb_value_set_find_item@@Base+0x58>
   3d9c4:	ldrb	r3, [r1]
   3d9c8:	ldrb	r2, [r0]
   3d9cc:	sub	r3, r3, r2
   3d9d0:	clz	r3, r3
   3d9d4:	lsr	r3, r3, #5
   3d9d8:	cmp	r3, #0
   3d9dc:	beq	3d98c <fb_value_set_find_item@@Base+0x60>
   3d9e0:	ldrd	r4, [sp]
   3d9e4:	ldrd	r6, [sp, #8]
   3d9e8:	add	sp, sp, #16
   3d9ec:	pop	{pc}		; (ldr pc, [sp], #4)
   3d9f0:	ldrd	r2, [r0]
   3d9f4:	ldrd	r4, [r1]
   3d9f8:	cmp	r5, r3
   3d9fc:	cmpeq	r4, r2
   3da00:	moveq	r3, #1
   3da04:	movne	r3, #0
   3da08:	b	3d9d8 <fb_value_set_find_item@@Base+0xac>
   3da0c:	ldr	r2, [r1]
   3da10:	movw	r3, #15191	; 0x3b57
   3da14:	movt	r3, #12137	; 0x2f69
   3da18:	movw	ip, #31153	; 0x79b1
   3da1c:	movt	ip, #40503	; 0x9e37
   3da20:	eor	r3, r3, r2
   3da24:	mul	ip, ip, r3
   3da28:	and	r3, r6, ip
   3da2c:	add	r3, r7, r3, lsl #2
   3da30:	b	3d970 <fb_value_set_find_item@@Base+0x44>
   3da34:	movw	r3, #15190	; 0x3b56
   3da38:	ldr	r2, [r1]
   3da3c:	b	3da14 <fb_value_set_find_item@@Base+0xe8>
   3da40:	ldrb	r2, [r1]
   3da44:	movw	r3, #15188	; 0x3b54
   3da48:	b	3da14 <fb_value_set_find_item@@Base+0xe8>
   3da4c:	mov	r0, r7
   3da50:	b	3d9e0 <fb_value_set_find_item@@Base+0xb4>

0003da54 <fb_value_set_remove@@Base>:
   3da54:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3da58:	strd	r6, [sp, #8]
   3da5c:	strd	r8, [sp, #16]
   3da60:	ldr	r8, [r0]
   3da64:	str	lr, [sp, #24]
   3da68:	cmp	r8, #0
   3da6c:	beq	3db98 <fb_value_set_remove@@Base+0x144>
   3da70:	ldrh	lr, [r1, #8]
   3da74:	ldr	r9, [r0, #12]
   3da78:	cmp	lr, #5
   3da7c:	sub	r9, r9, #1
   3da80:	beq	3db8c <fb_value_set_remove@@Base+0x138>
   3da84:	cmp	lr, #6
   3da88:	beq	3db80 <fb_value_set_remove@@Base+0x12c>
   3da8c:	cmp	lr, #4
   3da90:	movne	r3, r8
   3da94:	movne	ip, #0
   3da98:	beq	3db58 <fb_value_set_remove@@Base+0x104>
   3da9c:	ldr	r2, [r3]
   3daa0:	cmp	r2, #0
   3daa4:	beq	3db24 <fb_value_set_remove@@Base+0xd0>
   3daa8:	add	ip, ip, #1
   3daac:	b	3dad0 <fb_value_set_remove@@Base+0x7c>
   3dab0:	cmp	lr, #4
   3dab4:	beq	3db3c <fb_value_set_remove@@Base+0xe8>
   3dab8:	and	r3, r9, ip
   3dabc:	add	ip, ip, #1
   3dac0:	ldr	r2, [r8, r3, lsl #2]
   3dac4:	add	r3, r8, r3, lsl #2
   3dac8:	cmp	r2, #0
   3dacc:	beq	3db24 <fb_value_set_remove@@Base+0xd0>
   3dad0:	cmp	r2, #2
   3dad4:	beq	3dab8 <fb_value_set_remove@@Base+0x64>
   3dad8:	ldrh	r4, [r2, #8]
   3dadc:	cmp	r4, lr
   3dae0:	bne	3dab8 <fb_value_set_remove@@Base+0x64>
   3dae4:	cmp	lr, #5
   3dae8:	beq	3db3c <fb_value_set_remove@@Base+0xe8>
   3daec:	cmp	lr, #6
   3daf0:	bne	3dab0 <fb_value_set_remove@@Base+0x5c>
   3daf4:	ldrb	r4, [r1]
   3daf8:	ldrb	r5, [r2]
   3dafc:	sub	r4, r4, r5
   3db00:	clz	r4, r4
   3db04:	lsr	r4, r4, #5
   3db08:	cmp	r4, #0
   3db0c:	beq	3dab8 <fb_value_set_remove@@Base+0x64>
   3db10:	ldr	r1, [r0, #8]
   3db14:	mov	ip, #2
   3db18:	str	ip, [r3]
   3db1c:	sub	r3, r1, #1
   3db20:	str	r3, [r0, #8]
   3db24:	ldrd	r4, [sp]
   3db28:	mov	r0, r2
   3db2c:	ldrd	r6, [sp, #8]
   3db30:	ldrd	r8, [sp, #16]
   3db34:	add	sp, sp, #24
   3db38:	pop	{pc}		; (ldr pc, [sp], #4)
   3db3c:	ldrd	r4, [r2]
   3db40:	ldrd	r6, [r1]
   3db44:	cmp	r7, r5
   3db48:	cmpeq	r6, r4
   3db4c:	moveq	r4, #1
   3db50:	movne	r4, #0
   3db54:	b	3db08 <fb_value_set_remove@@Base+0xb4>
   3db58:	ldr	r2, [r1]
   3db5c:	movw	r3, #15190	; 0x3b56
   3db60:	movt	r3, #12137	; 0x2f69
   3db64:	movw	ip, #31153	; 0x79b1
   3db68:	movt	ip, #40503	; 0x9e37
   3db6c:	eor	r3, r3, r2
   3db70:	mul	ip, ip, r3
   3db74:	and	r3, r9, ip
   3db78:	add	r3, r8, r3, lsl #2
   3db7c:	b	3da9c <fb_value_set_remove@@Base+0x48>
   3db80:	ldrb	r2, [r1]
   3db84:	movw	r3, #15188	; 0x3b54
   3db88:	b	3db60 <fb_value_set_remove@@Base+0x10c>
   3db8c:	movw	r3, #15191	; 0x3b57
   3db90:	ldr	r2, [r1]
   3db94:	b	3db60 <fb_value_set_remove@@Base+0x10c>
   3db98:	mov	r2, r8
   3db9c:	b	3db24 <fb_value_set_remove@@Base+0xd0>

0003dba0 <fb_value_set_remove_item@@Base>:
   3dba0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3dba4:	strd	r6, [sp, #8]
   3dba8:	strd	r8, [sp, #16]
   3dbac:	ldr	r8, [r0]
   3dbb0:	str	lr, [sp, #24]
   3dbb4:	cmp	r8, #0
   3dbb8:	beq	3dce4 <fb_value_set_remove_item@@Base+0x144>
   3dbbc:	ldrh	lr, [r1, #8]
   3dbc0:	ldr	r9, [r0, #12]
   3dbc4:	cmp	lr, #5
   3dbc8:	sub	r9, r9, #1
   3dbcc:	beq	3dcd8 <fb_value_set_remove_item@@Base+0x138>
   3dbd0:	cmp	lr, #6
   3dbd4:	beq	3dccc <fb_value_set_remove_item@@Base+0x12c>
   3dbd8:	cmp	lr, #4
   3dbdc:	movne	r3, r8
   3dbe0:	movne	ip, #0
   3dbe4:	beq	3dca4 <fb_value_set_remove_item@@Base+0x104>
   3dbe8:	ldr	r2, [r3]
   3dbec:	cmp	r2, #0
   3dbf0:	beq	3dc70 <fb_value_set_remove_item@@Base+0xd0>
   3dbf4:	add	ip, ip, #1
   3dbf8:	b	3dc1c <fb_value_set_remove_item@@Base+0x7c>
   3dbfc:	cmp	lr, #4
   3dc00:	beq	3dc88 <fb_value_set_remove_item@@Base+0xe8>
   3dc04:	and	r3, r9, ip
   3dc08:	add	ip, ip, #1
   3dc0c:	ldr	r2, [r8, r3, lsl #2]
   3dc10:	add	r3, r8, r3, lsl #2
   3dc14:	cmp	r2, #0
   3dc18:	beq	3dc70 <fb_value_set_remove_item@@Base+0xd0>
   3dc1c:	cmp	r2, #2
   3dc20:	beq	3dc04 <fb_value_set_remove_item@@Base+0x64>
   3dc24:	ldrh	r4, [r2, #8]
   3dc28:	cmp	r4, lr
   3dc2c:	bne	3dc04 <fb_value_set_remove_item@@Base+0x64>
   3dc30:	cmp	lr, #5
   3dc34:	beq	3dc88 <fb_value_set_remove_item@@Base+0xe8>
   3dc38:	cmp	lr, #6
   3dc3c:	bne	3dbfc <fb_value_set_remove_item@@Base+0x5c>
   3dc40:	ldrb	r4, [r1]
   3dc44:	ldrb	r5, [r2]
   3dc48:	sub	r4, r4, r5
   3dc4c:	clz	r4, r4
   3dc50:	lsr	r4, r4, #5
   3dc54:	cmp	r4, #0
   3dc58:	beq	3dc04 <fb_value_set_remove_item@@Base+0x64>
   3dc5c:	ldr	r1, [r0, #8]
   3dc60:	mov	ip, #2
   3dc64:	str	ip, [r3]
   3dc68:	sub	r3, r1, #1
   3dc6c:	str	r3, [r0, #8]
   3dc70:	ldrd	r4, [sp]
   3dc74:	mov	r0, r2
   3dc78:	ldrd	r6, [sp, #8]
   3dc7c:	ldrd	r8, [sp, #16]
   3dc80:	add	sp, sp, #24
   3dc84:	pop	{pc}		; (ldr pc, [sp], #4)
   3dc88:	ldrd	r4, [r2]
   3dc8c:	ldrd	r6, [r1]
   3dc90:	cmp	r7, r5
   3dc94:	cmpeq	r6, r4
   3dc98:	moveq	r4, #1
   3dc9c:	movne	r4, #0
   3dca0:	b	3dc54 <fb_value_set_remove_item@@Base+0xb4>
   3dca4:	ldr	r2, [r1]
   3dca8:	movw	r3, #15190	; 0x3b56
   3dcac:	movt	r3, #12137	; 0x2f69
   3dcb0:	movw	ip, #31153	; 0x79b1
   3dcb4:	movt	ip, #40503	; 0x9e37
   3dcb8:	eor	r3, r3, r2
   3dcbc:	mul	ip, ip, r3
   3dcc0:	and	r3, r9, ip
   3dcc4:	add	r3, r8, r3, lsl #2
   3dcc8:	b	3dbe8 <fb_value_set_remove_item@@Base+0x48>
   3dccc:	ldrb	r2, [r1]
   3dcd0:	movw	r3, #15188	; 0x3b54
   3dcd4:	b	3dcac <fb_value_set_remove_item@@Base+0x10c>
   3dcd8:	movw	r3, #15191	; 0x3b57
   3dcdc:	ldr	r2, [r1]
   3dce0:	b	3dcac <fb_value_set_remove_item@@Base+0x10c>
   3dce4:	mov	r2, r8
   3dce8:	b	3dc70 <fb_value_set_remove_item@@Base+0xd0>

0003dcec <fb_value_set_visit@@Base>:
   3dcec:	ldr	ip, [r0, #12]
   3dcf0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3dcf4:	ldr	r5, [r0]
   3dcf8:	strd	r6, [sp, #8]
   3dcfc:	str	r8, [sp, #16]
   3dd00:	cmp	ip, #0
   3dd04:	str	lr, [sp, #20]
   3dd08:	beq	3dd4c <fb_value_set_visit@@Base+0x60>
   3dd0c:	mov	r6, r2
   3dd10:	mov	r8, r1
   3dd14:	mov	r7, r0
   3dd18:	sub	r5, r5, #4
   3dd1c:	mov	r4, #0
   3dd20:	ldr	r3, [r5, #4]!
   3dd24:	mov	r0, r6
   3dd28:	cmp	r3, #0
   3dd2c:	cmpne	r3, #2
   3dd30:	mov	r1, r3
   3dd34:	beq	3dd60 <fb_value_set_visit@@Base+0x74>
   3dd38:	blx	r8
   3dd3c:	ldr	ip, [r7, #12]
   3dd40:	add	r4, r4, #1
   3dd44:	cmp	r4, ip
   3dd48:	bcc	3dd20 <fb_value_set_visit@@Base+0x34>
   3dd4c:	ldrd	r4, [sp]
   3dd50:	ldrd	r6, [sp, #8]
   3dd54:	ldr	r8, [sp, #16]
   3dd58:	add	sp, sp, #20
   3dd5c:	pop	{pc}		; (ldr pc, [sp], #4)
   3dd60:	add	r4, r4, #1
   3dd64:	cmp	r4, ip
   3dd68:	bcc	3dd20 <fb_value_set_visit@@Base+0x34>
   3dd6c:	b	3dd4c <fb_value_set_visit@@Base+0x60>
   3dd70:	eor	r1, r1, #-2147483648	; 0x80000000
   3dd74:	b	3dd7c <fb_value_set_visit@@Base+0x90>
   3dd78:	eor	r3, r3, #-2147483648	; 0x80000000
   3dd7c:	push	{r4, r5, lr}
   3dd80:	lsl	r4, r1, #1
   3dd84:	lsl	r5, r3, #1
   3dd88:	teq	r4, r5
   3dd8c:	teqeq	r0, r2
   3dd90:	orrsne	ip, r4, r0
   3dd94:	orrsne	ip, r5, r2
   3dd98:	mvnsne	ip, r4, asr #21
   3dd9c:	mvnsne	ip, r5, asr #21
   3dda0:	beq	3df8c <fb_value_set_visit@@Base+0x2a0>
   3dda4:	lsr	r4, r4, #21
   3dda8:	rsbs	r5, r4, r5, lsr #21
   3ddac:	rsblt	r5, r5, #0
   3ddb0:	ble	3ddd0 <fb_value_set_visit@@Base+0xe4>
   3ddb4:	add	r4, r4, r5
   3ddb8:	eor	r2, r0, r2
   3ddbc:	eor	r3, r1, r3
   3ddc0:	eor	r0, r2, r0
   3ddc4:	eor	r1, r3, r1
   3ddc8:	eor	r2, r0, r2
   3ddcc:	eor	r3, r1, r3
   3ddd0:	cmp	r5, #54	; 0x36
   3ddd4:	pophi	{r4, r5, pc}
   3ddd8:	tst	r1, #-2147483648	; 0x80000000
   3dddc:	lsl	r1, r1, #12
   3dde0:	mov	ip, #1048576	; 0x100000
   3dde4:	orr	r1, ip, r1, lsr #12
   3dde8:	beq	3ddf4 <fb_value_set_visit@@Base+0x108>
   3ddec:	rsbs	r0, r0, #0
   3ddf0:	rsc	r1, r1, #0
   3ddf4:	tst	r3, #-2147483648	; 0x80000000
   3ddf8:	lsl	r3, r3, #12
   3ddfc:	orr	r3, ip, r3, lsr #12
   3de00:	beq	3de0c <fb_value_set_visit@@Base+0x120>
   3de04:	rsbs	r2, r2, #0
   3de08:	rsc	r3, r3, #0
   3de0c:	teq	r4, r5
   3de10:	beq	3df74 <fb_value_set_visit@@Base+0x288>
   3de14:	sub	r4, r4, #1
   3de18:	rsbs	lr, r5, #32
   3de1c:	blt	3de38 <fb_value_set_visit@@Base+0x14c>
   3de20:	lsl	ip, r2, lr
   3de24:	adds	r0, r0, r2, lsr r5
   3de28:	adc	r1, r1, #0
   3de2c:	adds	r0, r0, r3, lsl lr
   3de30:	adcs	r1, r1, r3, asr r5
   3de34:	b	3de54 <fb_value_set_visit@@Base+0x168>
   3de38:	sub	r5, r5, #32
   3de3c:	add	lr, lr, #32
   3de40:	cmp	r2, #1
   3de44:	lsl	ip, r3, lr
   3de48:	orrcs	ip, ip, #2
   3de4c:	adds	r0, r0, r3, asr r5
   3de50:	adcs	r1, r1, r3, asr #31
   3de54:	and	r5, r1, #-2147483648	; 0x80000000
   3de58:	bpl	3de68 <fb_value_set_visit@@Base+0x17c>
   3de5c:	rsbs	ip, ip, #0
   3de60:	rscs	r0, r0, #0
   3de64:	rsc	r1, r1, #0
   3de68:	cmp	r1, #1048576	; 0x100000
   3de6c:	bcc	3deac <fb_value_set_visit@@Base+0x1c0>
   3de70:	cmp	r1, #2097152	; 0x200000
   3de74:	bcc	3de94 <fb_value_set_visit@@Base+0x1a8>
   3de78:	lsrs	r1, r1, #1
   3de7c:	rrxs	r0, r0
   3de80:	rrx	ip, ip
   3de84:	add	r4, r4, #1
   3de88:	lsl	r2, r4, #21
   3de8c:	cmn	r2, #4194304	; 0x400000
   3de90:	bcs	3dfec <fb_value_set_visit@@Base+0x300>
   3de94:	cmp	ip, #-2147483648	; 0x80000000
   3de98:	lsrseq	ip, r0, #1
   3de9c:	adcs	r0, r0, #0
   3dea0:	adc	r1, r1, r4, lsl #20
   3dea4:	orr	r1, r1, r5
   3dea8:	pop	{r4, r5, pc}
   3deac:	lsls	ip, ip, #1
   3deb0:	adcs	r0, r0, r0
   3deb4:	adc	r1, r1, r1
   3deb8:	tst	r1, #1048576	; 0x100000
   3debc:	sub	r4, r4, #1
   3dec0:	bne	3de94 <fb_value_set_visit@@Base+0x1a8>
   3dec4:	teq	r1, #0
   3dec8:	moveq	r1, r0
   3decc:	moveq	r0, #0
   3ded0:	clz	r3, r1
   3ded4:	addeq	r3, r3, #32
   3ded8:	sub	r3, r3, #11
   3dedc:	subs	r2, r3, #32
   3dee0:	bge	3df04 <fb_value_set_visit@@Base+0x218>
   3dee4:	adds	r2, r2, #12
   3dee8:	ble	3df00 <fb_value_set_visit@@Base+0x214>
   3deec:	add	ip, r2, #20
   3def0:	rsb	r2, r2, #12
   3def4:	lsl	r0, r1, ip
   3def8:	lsr	r1, r1, r2
   3defc:	b	3df14 <fb_value_set_visit@@Base+0x228>
   3df00:	add	r2, r2, #20
   3df04:	rsble	ip, r2, #32
   3df08:	lsl	r1, r1, r2
   3df0c:	orrle	r1, r1, r0, lsr ip
   3df10:	lslle	r0, r0, r2
   3df14:	subs	r4, r4, r3
   3df18:	addge	r1, r1, r4, lsl #20
   3df1c:	orrge	r1, r1, r5
   3df20:	popge	{r4, r5, pc}
   3df24:	mvn	r4, r4
   3df28:	subs	r4, r4, #31
   3df2c:	bge	3df68 <fb_value_set_visit@@Base+0x27c>
   3df30:	adds	r4, r4, #12
   3df34:	bgt	3df50 <fb_value_set_visit@@Base+0x264>
   3df38:	add	r4, r4, #20
   3df3c:	rsb	r2, r4, #32
   3df40:	lsr	r0, r0, r4
   3df44:	orr	r0, r0, r1, lsl r2
   3df48:	orr	r1, r5, r1, lsr r4
   3df4c:	pop	{r4, r5, pc}
   3df50:	rsb	r4, r4, #12
   3df54:	rsb	r2, r4, #32
   3df58:	lsr	r0, r0, r2
   3df5c:	orr	r0, r0, r1, lsl r4
   3df60:	mov	r1, r5
   3df64:	pop	{r4, r5, pc}
   3df68:	lsr	r0, r1, r4
   3df6c:	mov	r1, r5
   3df70:	pop	{r4, r5, pc}
   3df74:	teq	r4, #0
   3df78:	eor	r3, r3, #1048576	; 0x100000
   3df7c:	eoreq	r1, r1, #1048576	; 0x100000
   3df80:	addeq	r4, r4, #1
   3df84:	subne	r5, r5, #1
   3df88:	b	3de14 <fb_value_set_visit@@Base+0x128>
   3df8c:	mvns	ip, r4, asr #21
   3df90:	mvnsne	ip, r5, asr #21
   3df94:	beq	3dffc <fb_value_set_visit@@Base+0x310>
   3df98:	teq	r4, r5
   3df9c:	teqeq	r0, r2
   3dfa0:	beq	3dfb4 <fb_value_set_visit@@Base+0x2c8>
   3dfa4:	orrs	ip, r4, r0
   3dfa8:	moveq	r1, r3
   3dfac:	moveq	r0, r2
   3dfb0:	pop	{r4, r5, pc}
   3dfb4:	teq	r1, r3
   3dfb8:	movne	r1, #0
   3dfbc:	movne	r0, #0
   3dfc0:	popne	{r4, r5, pc}
   3dfc4:	lsrs	ip, r4, #21
   3dfc8:	bne	3dfdc <fb_value_set_visit@@Base+0x2f0>
   3dfcc:	lsls	r0, r0, #1
   3dfd0:	adcs	r1, r1, r1
   3dfd4:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3dfd8:	pop	{r4, r5, pc}
   3dfdc:	adds	r4, r4, #4194304	; 0x400000
   3dfe0:	addcc	r1, r1, #1048576	; 0x100000
   3dfe4:	popcc	{r4, r5, pc}
   3dfe8:	and	r5, r1, #-2147483648	; 0x80000000
   3dfec:	orr	r1, r5, #2130706432	; 0x7f000000
   3dff0:	orr	r1, r1, #15728640	; 0xf00000
   3dff4:	mov	r0, #0
   3dff8:	pop	{r4, r5, pc}
   3dffc:	mvns	ip, r4, asr #21
   3e000:	movne	r1, r3
   3e004:	movne	r0, r2
   3e008:	mvnseq	ip, r5, asr #21
   3e00c:	movne	r3, r1
   3e010:	movne	r2, r0
   3e014:	orrs	r4, r0, r1, lsl #12
   3e018:	orrseq	r5, r2, r3, lsl #12
   3e01c:	teqeq	r1, r3
   3e020:	orrne	r1, r1, #524288	; 0x80000
   3e024:	pop	{r4, r5, pc}
   3e028:	teq	r0, #0
   3e02c:	moveq	r1, #0
   3e030:	bxeq	lr
   3e034:	push	{r4, r5, lr}
   3e038:	mov	r4, #1024	; 0x400
   3e03c:	add	r4, r4, #50	; 0x32
   3e040:	mov	r5, #0
   3e044:	mov	r1, #0
   3e048:	b	3dec4 <fb_value_set_visit@@Base+0x1d8>
   3e04c:	teq	r0, #0
   3e050:	moveq	r1, #0
   3e054:	bxeq	lr
   3e058:	push	{r4, r5, lr}
   3e05c:	mov	r4, #1024	; 0x400
   3e060:	add	r4, r4, #50	; 0x32
   3e064:	ands	r5, r0, #-2147483648	; 0x80000000
   3e068:	rsbmi	r0, r0, #0
   3e06c:	mov	r1, #0
   3e070:	b	3dec4 <fb_value_set_visit@@Base+0x1d8>
   3e074:	lsls	r2, r0, #1
   3e078:	asr	r1, r2, #3
   3e07c:	rrx	r1, r1
   3e080:	lsl	r0, r2, #28
   3e084:	andsne	r3, r2, #-16777216	; 0xff000000
   3e088:	teqne	r3, #-16777216	; 0xff000000
   3e08c:	eorne	r1, r1, #939524096	; 0x38000000
   3e090:	bxne	lr
   3e094:	bics	r2, r2, #-16777216	; 0xff000000
   3e098:	bxeq	lr
   3e09c:	teq	r3, #-16777216	; 0xff000000
   3e0a0:	orreq	r1, r1, #524288	; 0x80000
   3e0a4:	bxeq	lr
   3e0a8:	push	{r4, r5, lr}
   3e0ac:	mov	r4, #896	; 0x380
   3e0b0:	and	r5, r1, #-2147483648	; 0x80000000
   3e0b4:	bic	r1, r1, #-2147483648	; 0x80000000
   3e0b8:	b	3dec4 <fb_value_set_visit@@Base+0x1d8>
   3e0bc:	orrs	r2, r0, r1
   3e0c0:	bxeq	lr
   3e0c4:	push	{r4, r5, lr}
   3e0c8:	mov	r5, #0
   3e0cc:	b	3e0ec <fb_value_set_visit@@Base+0x400>
   3e0d0:	orrs	r2, r0, r1
   3e0d4:	bxeq	lr
   3e0d8:	push	{r4, r5, lr}
   3e0dc:	ands	r5, r1, #-2147483648	; 0x80000000
   3e0e0:	bpl	3e0ec <fb_value_set_visit@@Base+0x400>
   3e0e4:	rsbs	r0, r0, #0
   3e0e8:	rsc	r1, r1, #0
   3e0ec:	mov	r4, #1024	; 0x400
   3e0f0:	add	r4, r4, #50	; 0x32
   3e0f4:	lsrs	ip, r1, #22
   3e0f8:	beq	3de68 <fb_value_set_visit@@Base+0x17c>
   3e0fc:	mov	r2, #3
   3e100:	lsrs	ip, ip, #3
   3e104:	addne	r2, r2, #3
   3e108:	lsrs	ip, ip, #3
   3e10c:	addne	r2, r2, #3
   3e110:	add	r2, r2, ip, lsr #3
   3e114:	rsb	r3, r2, #32
   3e118:	lsl	ip, r0, r3
   3e11c:	lsr	r0, r0, r2
   3e120:	orr	r0, r0, r1, lsl r3
   3e124:	lsr	r1, r1, r2
   3e128:	add	r4, r4, r2
   3e12c:	b	3de68 <fb_value_set_visit@@Base+0x17c>
   3e130:	eor	r0, r0, #-2147483648	; 0x80000000
   3e134:	b	3e13c <fb_value_set_visit@@Base+0x450>
   3e138:	eor	r1, r1, #-2147483648	; 0x80000000
   3e13c:	lsls	r2, r0, #1
   3e140:	lslsne	r3, r1, #1
   3e144:	teqne	r2, r3
   3e148:	mvnsne	ip, r2, asr #24
   3e14c:	mvnsne	ip, r3, asr #24
   3e150:	beq	3e248 <fb_value_set_visit@@Base+0x55c>
   3e154:	lsr	r2, r2, #24
   3e158:	rsbs	r3, r2, r3, lsr #24
   3e15c:	addgt	r2, r2, r3
   3e160:	eorgt	r1, r0, r1
   3e164:	eorgt	r0, r1, r0
   3e168:	eorgt	r1, r0, r1
   3e16c:	rsblt	r3, r3, #0
   3e170:	cmp	r3, #25
   3e174:	bxhi	lr
   3e178:	tst	r0, #-2147483648	; 0x80000000
   3e17c:	orr	r0, r0, #8388608	; 0x800000
   3e180:	bic	r0, r0, #-16777216	; 0xff000000
   3e184:	rsbne	r0, r0, #0
   3e188:	tst	r1, #-2147483648	; 0x80000000
   3e18c:	orr	r1, r1, #8388608	; 0x800000
   3e190:	bic	r1, r1, #-16777216	; 0xff000000
   3e194:	rsbne	r1, r1, #0
   3e198:	teq	r2, r3
   3e19c:	beq	3e230 <fb_value_set_visit@@Base+0x544>
   3e1a0:	sub	r2, r2, #1
   3e1a4:	adds	r0, r0, r1, asr r3
   3e1a8:	rsb	r3, r3, #32
   3e1ac:	lsl	r1, r1, r3
   3e1b0:	and	r3, r0, #-2147483648	; 0x80000000
   3e1b4:	bpl	3e1c0 <fb_value_set_visit@@Base+0x4d4>
   3e1b8:	rsbs	r1, r1, #0
   3e1bc:	rsc	r0, r0, #0
   3e1c0:	cmp	r0, #8388608	; 0x800000
   3e1c4:	bcc	3e1f8 <fb_value_set_visit@@Base+0x50c>
   3e1c8:	cmp	r0, #16777216	; 0x1000000
   3e1cc:	bcc	3e1e4 <fb_value_set_visit@@Base+0x4f8>
   3e1d0:	lsrs	r0, r0, #1
   3e1d4:	rrx	r1, r1
   3e1d8:	add	r2, r2, #1
   3e1dc:	cmp	r2, #254	; 0xfe
   3e1e0:	bcs	3e29c <fb_value_set_visit@@Base+0x5b0>
   3e1e4:	cmp	r1, #-2147483648	; 0x80000000
   3e1e8:	adc	r0, r0, r2, lsl #23
   3e1ec:	biceq	r0, r0, #1
   3e1f0:	orr	r0, r0, r3
   3e1f4:	bx	lr
   3e1f8:	lsls	r1, r1, #1
   3e1fc:	adc	r0, r0, r0
   3e200:	tst	r0, #8388608	; 0x800000
   3e204:	sub	r2, r2, #1
   3e208:	bne	3e1e4 <fb_value_set_visit@@Base+0x4f8>
   3e20c:	clz	ip, r0
   3e210:	sub	ip, ip, #8
   3e214:	subs	r2, r2, ip
   3e218:	lsl	r0, r0, ip
   3e21c:	addge	r0, r0, r2, lsl #23
   3e220:	rsblt	r2, r2, #0
   3e224:	orrge	r0, r0, r3
   3e228:	orrlt	r0, r3, r0, lsr r2
   3e22c:	bx	lr
   3e230:	teq	r2, #0
   3e234:	eor	r1, r1, #8388608	; 0x800000
   3e238:	eoreq	r0, r0, #8388608	; 0x800000
   3e23c:	addeq	r2, r2, #1
   3e240:	subne	r3, r3, #1
   3e244:	b	3e1a0 <fb_value_set_visit@@Base+0x4b4>
   3e248:	lsl	r3, r1, #1
   3e24c:	mvns	ip, r2, asr #24
   3e250:	mvnsne	ip, r3, asr #24
   3e254:	beq	3e2a8 <fb_value_set_visit@@Base+0x5bc>
   3e258:	teq	r2, r3
   3e25c:	beq	3e26c <fb_value_set_visit@@Base+0x580>
   3e260:	teq	r2, #0
   3e264:	moveq	r0, r1
   3e268:	bx	lr
   3e26c:	teq	r0, r1
   3e270:	movne	r0, #0
   3e274:	bxne	lr
   3e278:	tst	r2, #-16777216	; 0xff000000
   3e27c:	bne	3e28c <fb_value_set_visit@@Base+0x5a0>
   3e280:	lsls	r0, r0, #1
   3e284:	orrcs	r0, r0, #-2147483648	; 0x80000000
   3e288:	bx	lr
   3e28c:	adds	r2, r2, #33554432	; 0x2000000
   3e290:	addcc	r0, r0, #8388608	; 0x800000
   3e294:	bxcc	lr
   3e298:	and	r3, r0, #-2147483648	; 0x80000000
   3e29c:	orr	r0, r3, #2130706432	; 0x7f000000
   3e2a0:	orr	r0, r0, #8388608	; 0x800000
   3e2a4:	bx	lr
   3e2a8:	mvns	r2, r2, asr #24
   3e2ac:	movne	r0, r1
   3e2b0:	mvnseq	r3, r3, asr #24
   3e2b4:	movne	r1, r0
   3e2b8:	lsls	r2, r0, #9
   3e2bc:	lslseq	r3, r1, #9
   3e2c0:	teqeq	r0, r1
   3e2c4:	orrne	r0, r0, #4194304	; 0x400000
   3e2c8:	bx	lr
   3e2cc:	mov	r3, #0
   3e2d0:	b	3e2dc <fb_value_set_visit@@Base+0x5f0>
   3e2d4:	ands	r3, r0, #-2147483648	; 0x80000000
   3e2d8:	rsbmi	r0, r0, #0
   3e2dc:	movs	ip, r0
   3e2e0:	bxeq	lr
   3e2e4:	orr	r3, r3, #1258291200	; 0x4b000000
   3e2e8:	mov	r1, r0
   3e2ec:	mov	r0, #0
   3e2f0:	b	3e334 <fb_value_set_visit@@Base+0x648>
   3e2f4:	orrs	r2, r0, r1
   3e2f8:	bxeq	lr
   3e2fc:	mov	r3, #0
   3e300:	b	3e31c <fb_value_set_visit@@Base+0x630>
   3e304:	orrs	r2, r0, r1
   3e308:	bxeq	lr
   3e30c:	ands	r3, r1, #-2147483648	; 0x80000000
   3e310:	bpl	3e31c <fb_value_set_visit@@Base+0x630>
   3e314:	rsbs	r0, r0, #0
   3e318:	rsc	r1, r1, #0
   3e31c:	movs	ip, r1
   3e320:	moveq	ip, r0
   3e324:	moveq	r1, r0
   3e328:	moveq	r0, #0
   3e32c:	orr	r3, r3, #1526726656	; 0x5b000000
   3e330:	subeq	r3, r3, #268435456	; 0x10000000
   3e334:	sub	r3, r3, #8388608	; 0x800000
   3e338:	clz	r2, ip
   3e33c:	subs	r2, r2, #8
   3e340:	sub	r3, r3, r2, lsl #23
   3e344:	blt	3e364 <fb_value_set_visit@@Base+0x678>
   3e348:	add	r3, r3, r1, lsl r2
   3e34c:	lsl	ip, r0, r2
   3e350:	rsb	r2, r2, #32
   3e354:	cmp	ip, #-2147483648	; 0x80000000
   3e358:	adc	r0, r3, r0, lsr r2
   3e35c:	biceq	r0, r0, #1
   3e360:	bx	lr
   3e364:	add	r2, r2, #32
   3e368:	lsl	ip, r1, r2
   3e36c:	rsb	r2, r2, #32
   3e370:	orrs	r0, r0, ip, lsl #1
   3e374:	adc	r0, r3, r1, lsr r2
   3e378:	biceq	r0, r0, ip, lsr #31
   3e37c:	bx	lr
   3e380:	cmp	r3, #0
   3e384:	cmpeq	r2, #0
   3e388:	bne	3e3a0 <fb_value_set_visit@@Base+0x6b4>
   3e38c:	cmp	r1, #0
   3e390:	cmpeq	r0, #0
   3e394:	mvnne	r1, #0
   3e398:	mvnne	r0, #0
   3e39c:	b	3e3bc <fb_value_set_visit@@Base+0x6d0>
   3e3a0:	sub	sp, sp, #8
   3e3a4:	push	{sp, lr}
   3e3a8:	bl	3e4a8 <fb_value_set_visit@@Base+0x7bc>
   3e3ac:	ldr	lr, [sp, #4]
   3e3b0:	add	sp, sp, #8
   3e3b4:	pop	{r2, r3}
   3e3b8:	bx	lr
   3e3bc:	push	{r1, lr}
   3e3c0:	mov	r0, #8
   3e3c4:	bl	13e88 <raise@plt>
   3e3c8:	pop	{r1, pc}
   3e3cc:	vmov	s15, r0
   3e3d0:	vcmpe.f32	s15, #0.0
   3e3d4:	vmrs	APSR_nzcv, fpscr
   3e3d8:	bmi	3e3e0 <fb_value_set_visit@@Base+0x6f4>
   3e3dc:	b	3e428 <fb_value_set_visit@@Base+0x73c>
   3e3e0:	push	{r4, lr}
   3e3e4:	eor	r0, r0, #-2147483648	; 0x80000000
   3e3e8:	bl	3e428 <fb_value_set_visit@@Base+0x73c>
   3e3ec:	rsbs	r0, r0, #0
   3e3f0:	rsc	r1, r1, #0
   3e3f4:	pop	{r4, pc}
   3e3f8:	vmov	d7, r0, r1
   3e3fc:	vcmpe.f64	d7, #0.0
   3e400:	vmrs	APSR_nzcv, fpscr
   3e404:	bmi	3e40c <fb_value_set_visit@@Base+0x720>
   3e408:	b	3e468 <fb_value_set_visit@@Base+0x77c>
   3e40c:	push	{r4, lr}
   3e410:	eor	r1, r1, #-2147483648	; 0x80000000
   3e414:	bl	3e468 <fb_value_set_visit@@Base+0x77c>
   3e418:	rsbs	r0, r0, #0
   3e41c:	rsc	r1, r1, #0
   3e420:	pop	{r4, pc}
   3e424:	andeq	r0, r0, r0
   3e428:	vmov	s15, r0
   3e42c:	vldr	d5, [pc, #36]	; 3e458 <fb_value_set_visit@@Base+0x76c>
   3e430:	vcvt.f64.f32	d6, s15
   3e434:	vldr	d7, [pc, #36]	; 3e460 <fb_value_set_visit@@Base+0x774>
   3e438:	vmul.f64	d7, d6, d7
   3e43c:	vcvt.u32.f64	s14, d7
   3e440:	vcvt.f64.u32	d4, s14
   3e444:	vmov	r1, s14
   3e448:	vmls.f64	d6, d4, d5
   3e44c:	vcvt.u32.f64	s15, d6
   3e450:	vmov	r0, s15
   3e454:	bx	lr
   3e458:	andeq	r0, r0, r0
   3e45c:	mvnsmi	r0, r0
   3e460:	andeq	r0, r0, r0
   3e464:	ldclcc	0, cr0, [r0]
   3e468:	vmov	d6, r0, r1
   3e46c:	vldr	d7, [pc, #36]	; 3e498 <fb_value_set_visit@@Base+0x7ac>
   3e470:	vldr	d5, [pc, #40]	; 3e4a0 <fb_value_set_visit@@Base+0x7b4>
   3e474:	vmul.f64	d7, d6, d7
   3e478:	vcvt.u32.f64	s14, d7
   3e47c:	vcvt.f64.u32	d4, s14
   3e480:	vmov	r1, s14
   3e484:	vmls.f64	d6, d4, d5
   3e488:	vcvt.u32.f64	s15, d6
   3e48c:	vmov	r0, s15
   3e490:	bx	lr
   3e494:	nop			; (mov r0, r0)
   3e498:	andeq	r0, r0, r0
   3e49c:	ldclcc	0, cr0, [r0]
   3e4a0:	andeq	r0, r0, r0
   3e4a4:	mvnsmi	r0, r0
   3e4a8:	cmp	r1, r3
   3e4ac:	cmpeq	r0, r2
   3e4b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e4b4:	mov	r4, r0
   3e4b8:	movcc	r0, #0
   3e4bc:	mov	r5, r1
   3e4c0:	ldr	lr, [sp, #36]	; 0x24
   3e4c4:	movcc	r1, r0
   3e4c8:	bcc	3e5c4 <fb_value_set_visit@@Base+0x8d8>
   3e4cc:	cmp	r3, #0
   3e4d0:	clzeq	ip, r2
   3e4d4:	clzne	ip, r3
   3e4d8:	addeq	ip, ip, #32
   3e4dc:	cmp	r5, #0
   3e4e0:	clzeq	r1, r4
   3e4e4:	addeq	r1, r1, #32
   3e4e8:	clzne	r1, r5
   3e4ec:	sub	ip, ip, r1
   3e4f0:	sub	sl, ip, #32
   3e4f4:	lsl	r9, r3, ip
   3e4f8:	rsb	fp, ip, #32
   3e4fc:	orr	r9, r9, r2, lsl sl
   3e500:	orr	r9, r9, r2, lsr fp
   3e504:	lsl	r8, r2, ip
   3e508:	cmp	r5, r9
   3e50c:	cmpeq	r4, r8
   3e510:	movcc	r0, #0
   3e514:	movcc	r1, r0
   3e518:	bcc	3e534 <fb_value_set_visit@@Base+0x848>
   3e51c:	mov	r0, #1
   3e520:	subs	r4, r4, r8
   3e524:	lsl	r1, r0, sl
   3e528:	orr	r1, r1, r0, lsr fp
   3e52c:	lsl	r0, r0, ip
   3e530:	sbc	r5, r5, r9
   3e534:	cmp	ip, #0
   3e538:	beq	3e5c4 <fb_value_set_visit@@Base+0x8d8>
   3e53c:	lsr	r6, r8, #1
   3e540:	orr	r6, r6, r9, lsl #31
   3e544:	lsr	r7, r9, #1
   3e548:	mov	r2, ip
   3e54c:	b	3e570 <fb_value_set_visit@@Base+0x884>
   3e550:	subs	r3, r4, r6
   3e554:	sbc	r8, r5, r7
   3e558:	adds	r3, r3, r3
   3e55c:	adc	r8, r8, r8
   3e560:	adds	r4, r3, #1
   3e564:	adc	r5, r8, #0
   3e568:	subs	r2, r2, #1
   3e56c:	beq	3e58c <fb_value_set_visit@@Base+0x8a0>
   3e570:	cmp	r5, r7
   3e574:	cmpeq	r4, r6
   3e578:	bcs	3e550 <fb_value_set_visit@@Base+0x864>
   3e57c:	adds	r4, r4, r4
   3e580:	adc	r5, r5, r5
   3e584:	subs	r2, r2, #1
   3e588:	bne	3e570 <fb_value_set_visit@@Base+0x884>
   3e58c:	lsr	r3, r4, ip
   3e590:	orr	r3, r3, r5, lsl fp
   3e594:	lsr	r2, r5, ip
   3e598:	orr	r3, r3, r5, lsr sl
   3e59c:	adds	r0, r0, r4
   3e5a0:	mov	r4, r3
   3e5a4:	lsl	r3, r2, ip
   3e5a8:	orr	r3, r3, r4, lsl sl
   3e5ac:	lsl	ip, r4, ip
   3e5b0:	orr	r3, r3, r4, lsr fp
   3e5b4:	adc	r1, r1, r5
   3e5b8:	subs	r0, r0, ip
   3e5bc:	mov	r5, r2
   3e5c0:	sbc	r1, r1, r3
   3e5c4:	cmp	lr, #0
   3e5c8:	strdne	r4, [lr]
   3e5cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e5d0 <__libc_csu_init@@Base>:
   3e5d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3e5d4:	mov	r7, r0
   3e5d8:	ldr	r6, [pc, #72]	; 3e628 <__libc_csu_init@@Base+0x58>
   3e5dc:	ldr	r5, [pc, #72]	; 3e62c <__libc_csu_init@@Base+0x5c>
   3e5e0:	add	r6, pc, r6
   3e5e4:	add	r5, pc, r5
   3e5e8:	sub	r6, r6, r5
   3e5ec:	mov	r8, r1
   3e5f0:	mov	r9, r2
   3e5f4:	bl	13e5c <calloc@plt-0x20>
   3e5f8:	asrs	r6, r6, #2
   3e5fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e600:	mov	r4, #0
   3e604:	add	r4, r4, #1
   3e608:	ldr	r3, [r5], #4
   3e60c:	mov	r2, r9
   3e610:	mov	r1, r8
   3e614:	mov	r0, r7
   3e618:	blx	r3
   3e61c:	cmp	r6, r4
   3e620:	bne	3e604 <__libc_csu_init@@Base+0x34>
   3e624:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e628:	andeq	fp, r2, ip, lsr #18
   3e62c:	andeq	fp, r2, r4, lsr #18

0003e630 <__libc_csu_fini@@Base>:
   3e630:	bx	lr

Disassembly of section .fini:

0003e634 <.fini>:
   3e634:	push	{r3, lr}
   3e638:	pop	{r3, pc}
