
../repos/coreutils/src/who:     file format elf32-littlearm


Disassembly of section .init:

00011064 <.init>:
   11064:	push	{r3, lr}
   11068:	bl	113c0 <__assert_fail@plt+0x48>
   1106c:	pop	{r3, pc}

Disassembly of section .plt:

00011070 <calloc@plt-0x14>:
   11070:	push	{lr}		; (str lr, [sp, #-4]!)
   11074:	ldr	lr, [pc, #4]	; 11080 <calloc@plt-0x4>
   11078:	add	lr, pc, lr
   1107c:	ldr	pc, [lr, #8]!
   11080:	andeq	fp, r1, r0, lsl #31

00011084 <calloc@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #110592	; 0x1b000
   1108c:	ldr	pc, [ip, #3968]!	; 0xf80

00011090 <fputs_unlocked@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #110592	; 0x1b000
   11098:	ldr	pc, [ip, #3960]!	; 0xf78

0001109c <raise@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #110592	; 0x1b000
   110a4:	ldr	pc, [ip, #3952]!	; 0xf70

000110a8 <strcmp@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #110592	; 0x1b000
   110b0:	ldr	pc, [ip, #3944]!	; 0xf68

000110b4 <printf@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #110592	; 0x1b000
   110bc:	ldr	pc, [ip, #3936]!	; 0xf60

000110c0 <fflush@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #110592	; 0x1b000
   110c8:	ldr	pc, [ip, #3928]!	; 0xf58

000110cc <utmpxname@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #110592	; 0x1b000
   110d4:	ldr	pc, [ip, #3920]!	; 0xf50

000110d8 <free@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #110592	; 0x1b000
   110e0:	ldr	pc, [ip, #3912]!	; 0xf48

000110e4 <gai_strerror@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #110592	; 0x1b000
   110ec:	ldr	pc, [ip, #3904]!	; 0xf40

000110f0 <_exit@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #110592	; 0x1b000
   110f8:	ldr	pc, [ip, #3896]!	; 0xf38

000110fc <memcpy@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #110592	; 0x1b000
   11104:	ldr	pc, [ip, #3888]!	; 0xf30

00011108 <mbsinit@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #110592	; 0x1b000
   11110:	ldr	pc, [ip, #3880]!	; 0xf28

00011114 <time@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #110592	; 0x1b000
   1111c:	ldr	pc, [ip, #3872]!	; 0xf20

00011120 <memcmp@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #110592	; 0x1b000
   11128:	ldr	pc, [ip, #3864]!	; 0xf18

0001112c <stpcpy@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #110592	; 0x1b000
   11134:	ldr	pc, [ip, #3856]!	; 0xf10

00011138 <strdup@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #110592	; 0x1b000
   11140:	ldr	pc, [ip, #3848]!	; 0xf08

00011144 <setutxent@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #110592	; 0x1b000
   1114c:	ldr	pc, [ip, #3840]!	; 0xf00

00011150 <realloc@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #110592	; 0x1b000
   11158:	ldr	pc, [ip, #3832]!	; 0xef8

0001115c <textdomain@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #110592	; 0x1b000
   11164:	ldr	pc, [ip, #3824]!	; 0xef0

00011168 <iswprint@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #110592	; 0x1b000
   11170:	ldr	pc, [ip, #3816]!	; 0xee8

00011174 <lseek64@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #110592	; 0x1b000
   1117c:	ldr	pc, [ip, #3808]!	; 0xee0

00011180 <__ctype_get_mb_cur_max@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #110592	; 0x1b000
   11188:	ldr	pc, [ip, #3800]!	; 0xed8

0001118c <__fpending@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #110592	; 0x1b000
   11194:	ldr	pc, [ip, #3792]!	; 0xed0

00011198 <ferror_unlocked@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #110592	; 0x1b000
   111a0:	ldr	pc, [ip, #3784]!	; 0xec8

000111a4 <mbrtowc@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #110592	; 0x1b000
   111ac:	ldr	pc, [ip, #3776]!	; 0xec0

000111b0 <error@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #110592	; 0x1b000
   111b8:	ldr	pc, [ip, #3768]!	; 0xeb8

000111bc <puts@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #110592	; 0x1b000
   111c4:	ldr	pc, [ip, #3760]!	; 0xeb0

000111c8 <malloc@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #110592	; 0x1b000
   111d0:	ldr	pc, [ip, #3752]!	; 0xea8

000111d4 <__libc_start_main@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #110592	; 0x1b000
   111dc:	ldr	pc, [ip, #3744]!	; 0xea0

000111e0 <strftime@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #110592	; 0x1b000
   111e8:	ldr	pc, [ip, #3736]!	; 0xe98

000111ec <__freading@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #110592	; 0x1b000
   111f4:	ldr	pc, [ip, #3728]!	; 0xe90

000111f8 <localtime@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #110592	; 0x1b000
   11200:	ldr	pc, [ip, #3720]!	; 0xe88

00011204 <__gmon_start__@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #110592	; 0x1b000
   1120c:	ldr	pc, [ip, #3712]!	; 0xe80

00011210 <getopt_long@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #110592	; 0x1b000
   11218:	ldr	pc, [ip, #3704]!	; 0xe78

0001121c <kill@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #110592	; 0x1b000
   11224:	ldr	pc, [ip, #3696]!	; 0xe70

00011228 <__ctype_b_loc@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #110592	; 0x1b000
   11230:	ldr	pc, [ip, #3688]!	; 0xe68

00011234 <exit@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #110592	; 0x1b000
   1123c:	ldr	pc, [ip, #3680]!	; 0xe60

00011240 <gettext@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #110592	; 0x1b000
   11248:	ldr	pc, [ip, #3672]!	; 0xe58

0001124c <ttyname@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #110592	; 0x1b000
   11254:	ldr	pc, [ip, #3664]!	; 0xe50

00011258 <strlen@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #110592	; 0x1b000
   11260:	ldr	pc, [ip, #3656]!	; 0xe48

00011264 <strchr@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #110592	; 0x1b000
   1126c:	ldr	pc, [ip, #3648]!	; 0xe40

00011270 <fprintf@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #110592	; 0x1b000
   11278:	ldr	pc, [ip, #3640]!	; 0xe38

0001127c <__errno_location@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #110592	; 0x1b000
   11284:	ldr	pc, [ip, #3632]!	; 0xe30

00011288 <__cxa_atexit@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #110592	; 0x1b000
   11290:	ldr	pc, [ip, #3624]!	; 0xe28

00011294 <memset@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #110592	; 0x1b000
   1129c:	ldr	pc, [ip, #3616]!	; 0xe20

000112a0 <strncpy@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #110592	; 0x1b000
   112a8:	ldr	pc, [ip, #3608]!	; 0xe18

000112ac <fileno@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #110592	; 0x1b000
   112b4:	ldr	pc, [ip, #3600]!	; 0xe10

000112b8 <asprintf@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #110592	; 0x1b000
   112c0:	ldr	pc, [ip, #3592]!	; 0xe08

000112c4 <fclose@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #110592	; 0x1b000
   112cc:	ldr	pc, [ip, #3584]!	; 0xe00

000112d0 <fseeko64@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #110592	; 0x1b000
   112d8:	ldr	pc, [ip, #3576]!	; 0xdf8

000112dc <endutxent@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #110592	; 0x1b000
   112e4:	ldr	pc, [ip, #3568]!	; 0xdf0

000112e8 <setlocale@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #110592	; 0x1b000
   112f0:	ldr	pc, [ip, #3560]!	; 0xde8

000112f4 <strrchr@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #110592	; 0x1b000
   112fc:	ldr	pc, [ip, #3552]!	; 0xde0

00011300 <nl_langinfo@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #110592	; 0x1b000
   11308:	ldr	pc, [ip, #3544]!	; 0xdd8

0001130c <sprintf@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #110592	; 0x1b000
   11314:	ldr	pc, [ip, #3536]!	; 0xdd0

00011318 <freeaddrinfo@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #110592	; 0x1b000
   11320:	ldr	pc, [ip, #3528]!	; 0xdc8

00011324 <getaddrinfo@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #110592	; 0x1b000
   1132c:	ldr	pc, [ip, #3520]!	; 0xdc0

00011330 <bindtextdomain@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #110592	; 0x1b000
   11338:	ldr	pc, [ip, #3512]!	; 0xdb8

0001133c <__xstat64@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #110592	; 0x1b000
   11344:	ldr	pc, [ip, #3504]!	; 0xdb0

00011348 <fputs@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #110592	; 0x1b000
   11350:	ldr	pc, [ip, #3496]!	; 0xda8

00011354 <strncmp@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #110592	; 0x1b000
   1135c:	ldr	pc, [ip, #3488]!	; 0xda0

00011360 <abort@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #110592	; 0x1b000
   11368:	ldr	pc, [ip, #3480]!	; 0xd98

0001136c <getutxent@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #110592	; 0x1b000
   11374:	ldr	pc, [ip, #3472]!	; 0xd90

00011378 <__assert_fail@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #110592	; 0x1b000
   11380:	ldr	pc, [ip, #3464]!	; 0xd88

Disassembly of section .text:

00011384 <.text>:
   11384:	mov	fp, #0
   11388:	mov	lr, #0
   1138c:	pop	{r1}		; (ldr r1, [sp], #4)
   11390:	mov	r2, sp
   11394:	push	{r2}		; (str r2, [sp, #-4]!)
   11398:	push	{r0}		; (str r0, [sp, #-4]!)
   1139c:	ldr	ip, [pc, #16]	; 113b4 <__assert_fail@plt+0x3c>
   113a0:	push	{ip}		; (str ip, [sp, #-4]!)
   113a4:	ldr	r0, [pc, #12]	; 113b8 <__assert_fail@plt+0x40>
   113a8:	ldr	r3, [pc, #12]	; 113bc <__assert_fail@plt+0x44>
   113ac:	bl	111d4 <__libc_start_main@plt>
   113b0:	bl	11360 <abort@plt>
   113b4:	andeq	ip, r1, r4, asr #32
   113b8:	andeq	r1, r1, r4, lsl #16
   113bc:	andeq	fp, r1, r4, ror #31
   113c0:	ldr	r3, [pc, #20]	; 113dc <__assert_fail@plt+0x64>
   113c4:	ldr	r2, [pc, #20]	; 113e0 <__assert_fail@plt+0x68>
   113c8:	add	r3, pc, r3
   113cc:	ldr	r2, [r3, r2]
   113d0:	cmp	r2, #0
   113d4:	bxeq	lr
   113d8:	b	11204 <__gmon_start__@plt>
   113dc:	andeq	fp, r1, r0, lsr ip
   113e0:	andeq	r0, r0, ip, lsl #2
   113e4:	ldr	r0, [pc, #24]	; 11404 <__assert_fail@plt+0x8c>
   113e8:	ldr	r3, [pc, #24]	; 11408 <__assert_fail@plt+0x90>
   113ec:	cmp	r3, r0
   113f0:	bxeq	lr
   113f4:	ldr	r3, [pc, #16]	; 1140c <__assert_fail@plt+0x94>
   113f8:	cmp	r3, #0
   113fc:	bxeq	lr
   11400:	bx	r3
   11404:	andeq	sp, r2, r8, ror #2
   11408:	andeq	sp, r2, r8, ror #2
   1140c:	andeq	r0, r0, r0
   11410:	ldr	r0, [pc, #36]	; 1143c <__assert_fail@plt+0xc4>
   11414:	ldr	r1, [pc, #36]	; 11440 <__assert_fail@plt+0xc8>
   11418:	sub	r1, r1, r0
   1141c:	asr	r1, r1, #2
   11420:	add	r1, r1, r1, lsr #31
   11424:	asrs	r1, r1, #1
   11428:	bxeq	lr
   1142c:	ldr	r3, [pc, #16]	; 11444 <__assert_fail@plt+0xcc>
   11430:	cmp	r3, #0
   11434:	bxeq	lr
   11438:	bx	r3
   1143c:	andeq	sp, r2, r8, ror #2
   11440:	andeq	sp, r2, r8, ror #2
   11444:	andeq	r0, r0, r0
   11448:	push	{r4, lr}
   1144c:	ldr	r4, [pc, #24]	; 1146c <__assert_fail@plt+0xf4>
   11450:	ldrb	r3, [r4]
   11454:	cmp	r3, #0
   11458:	popne	{r4, pc}
   1145c:	bl	113e4 <__assert_fail@plt+0x6c>
   11460:	mov	r3, #1
   11464:	strb	r3, [r4]
   11468:	pop	{r4, pc}
   1146c:	andeq	sp, r2, r0, lsl #3
   11470:	b	11410 <__assert_fail@plt+0x98>
   11474:	push	{fp, lr}
   11478:	mov	fp, sp
   1147c:	sub	sp, sp, #56	; 0x38
   11480:	str	r0, [fp, #-4]
   11484:	ldr	r0, [fp, #-4]
   11488:	cmp	r0, #0
   1148c:	beq	114d8 <__assert_fail@plt+0x160>
   11490:	b	11494 <__assert_fail@plt+0x11c>
   11494:	movw	r0, #53624	; 0xd178
   11498:	movt	r0, #2
   1149c:	ldr	r0, [r0]
   114a0:	movw	r1, #49276	; 0xc07c
   114a4:	movt	r1, #1
   114a8:	str	r0, [fp, #-8]
   114ac:	mov	r0, r1
   114b0:	bl	11240 <gettext@plt>
   114b4:	movw	r1, #53764	; 0xd204
   114b8:	movt	r1, #2
   114bc:	ldr	r2, [r1]
   114c0:	ldr	r1, [fp, #-8]
   114c4:	str	r0, [fp, #-12]
   114c8:	mov	r0, r1
   114cc:	ldr	r1, [fp, #-12]
   114d0:	bl	11270 <fprintf@plt>
   114d4:	b	11650 <__assert_fail@plt+0x2d8>
   114d8:	movw	r0, #49315	; 0xc0a3
   114dc:	movt	r0, #1
   114e0:	bl	11240 <gettext@plt>
   114e4:	movw	r1, #53764	; 0xd204
   114e8:	movt	r1, #2
   114ec:	ldr	r1, [r1]
   114f0:	bl	110b4 <printf@plt>
   114f4:	movw	r1, #49359	; 0xc0cf
   114f8:	movt	r1, #1
   114fc:	str	r0, [fp, #-16]
   11500:	mov	r0, r1
   11504:	bl	11240 <gettext@plt>
   11508:	movw	r1, #53628	; 0xd17c
   1150c:	movt	r1, #2
   11510:	ldr	r1, [r1]
   11514:	bl	11090 <fputs_unlocked@plt>
   11518:	movw	r1, #49419	; 0xc10b
   1151c:	movt	r1, #1
   11520:	str	r0, [fp, #-20]	; 0xffffffec
   11524:	mov	r0, r1
   11528:	bl	11240 <gettext@plt>
   1152c:	movw	r1, #53628	; 0xd17c
   11530:	movt	r1, #2
   11534:	ldr	r1, [r1]
   11538:	bl	11090 <fputs_unlocked@plt>
   1153c:	movw	r1, #49614	; 0xc1ce
   11540:	movt	r1, #1
   11544:	str	r0, [fp, #-24]	; 0xffffffe8
   11548:	mov	r0, r1
   1154c:	bl	11240 <gettext@plt>
   11550:	movw	r1, #53628	; 0xd17c
   11554:	movt	r1, #2
   11558:	ldr	r1, [r1]
   1155c:	bl	11090 <fputs_unlocked@plt>
   11560:	movw	r1, #49664	; 0xc200
   11564:	movt	r1, #1
   11568:	str	r0, [sp, #28]
   1156c:	mov	r0, r1
   11570:	bl	11240 <gettext@plt>
   11574:	movw	r1, #53628	; 0xd17c
   11578:	movt	r1, #2
   1157c:	ldr	r1, [r1]
   11580:	bl	11090 <fputs_unlocked@plt>
   11584:	movw	r1, #49851	; 0xc2bb
   11588:	movt	r1, #1
   1158c:	str	r0, [sp, #24]
   11590:	mov	r0, r1
   11594:	bl	11240 <gettext@plt>
   11598:	movw	r1, #53628	; 0xd17c
   1159c:	movt	r1, #2
   115a0:	ldr	r1, [r1]
   115a4:	bl	11090 <fputs_unlocked@plt>
   115a8:	movw	r1, #50074	; 0xc39a
   115ac:	movt	r1, #1
   115b0:	str	r0, [sp, #20]
   115b4:	mov	r0, r1
   115b8:	bl	11240 <gettext@plt>
   115bc:	movw	r1, #53628	; 0xd17c
   115c0:	movt	r1, #2
   115c4:	ldr	r1, [r1]
   115c8:	bl	11090 <fputs_unlocked@plt>
   115cc:	movw	r1, #50237	; 0xc43d
   115d0:	movt	r1, #1
   115d4:	str	r0, [sp, #16]
   115d8:	mov	r0, r1
   115dc:	bl	11240 <gettext@plt>
   115e0:	movw	r1, #53628	; 0xd17c
   115e4:	movt	r1, #2
   115e8:	ldr	r1, [r1]
   115ec:	bl	11090 <fputs_unlocked@plt>
   115f0:	movw	r1, #50282	; 0xc46a
   115f4:	movt	r1, #1
   115f8:	str	r0, [sp, #12]
   115fc:	mov	r0, r1
   11600:	bl	11240 <gettext@plt>
   11604:	movw	r1, #53628	; 0xd17c
   11608:	movt	r1, #2
   1160c:	ldr	r1, [r1]
   11610:	bl	11090 <fputs_unlocked@plt>
   11614:	movw	r1, #50336	; 0xc4a0
   11618:	movt	r1, #1
   1161c:	str	r0, [sp, #8]
   11620:	mov	r0, r1
   11624:	bl	11240 <gettext@plt>
   11628:	movw	r1, #50461	; 0xc51d
   1162c:	movt	r1, #1
   11630:	movw	r2, #50475	; 0xc52b
   11634:	movt	r2, #1
   11638:	bl	110b4 <printf@plt>
   1163c:	movw	r1, #50489	; 0xc539
   11640:	movt	r1, #1
   11644:	str	r0, [sp, #4]
   11648:	mov	r0, r1
   1164c:	bl	11658 <__assert_fail@plt+0x2e0>
   11650:	ldr	r0, [fp, #-4]
   11654:	bl	11234 <exit@plt>
   11658:	push	{fp, lr}
   1165c:	mov	fp, sp
   11660:	sub	sp, sp, #88	; 0x58
   11664:	add	r1, sp, #28
   11668:	movw	r2, #51672	; 0xc9d8
   1166c:	movt	r2, #1
   11670:	str	r0, [fp, #-4]
   11674:	mov	r0, r1
   11678:	str	r1, [sp, #12]
   1167c:	mov	r1, r2
   11680:	movw	r2, #56	; 0x38
   11684:	bl	110fc <memcpy@plt>
   11688:	ldr	r0, [fp, #-4]
   1168c:	str	r0, [sp, #24]
   11690:	ldr	r0, [sp, #12]
   11694:	str	r0, [sp, #20]
   11698:	ldr	r0, [sp, #20]
   1169c:	ldr	r0, [r0]
   116a0:	movw	r1, #0
   116a4:	cmp	r0, r1
   116a8:	movw	r0, #0
   116ac:	str	r0, [sp, #8]
   116b0:	beq	116dc <__assert_fail@plt+0x364>
   116b4:	ldr	r0, [fp, #-4]
   116b8:	ldr	r1, [sp, #20]
   116bc:	ldr	r1, [r1]
   116c0:	bl	110a8 <strcmp@plt>
   116c4:	cmp	r0, #0
   116c8:	movw	r0, #0
   116cc:	moveq	r0, #1
   116d0:	mvn	r1, #0
   116d4:	eor	r0, r0, r1
   116d8:	str	r0, [sp, #8]
   116dc:	ldr	r0, [sp, #8]
   116e0:	tst	r0, #1
   116e4:	beq	116f8 <__assert_fail@plt+0x380>
   116e8:	ldr	r0, [sp, #20]
   116ec:	add	r0, r0, #8
   116f0:	str	r0, [sp, #20]
   116f4:	b	11698 <__assert_fail@plt+0x320>
   116f8:	ldr	r0, [sp, #20]
   116fc:	ldr	r0, [r0, #4]
   11700:	movw	r1, #0
   11704:	cmp	r0, r1
   11708:	beq	11718 <__assert_fail@plt+0x3a0>
   1170c:	ldr	r0, [sp, #20]
   11710:	ldr	r0, [r0, #4]
   11714:	str	r0, [sp, #24]
   11718:	movw	r0, #50732	; 0xc62c
   1171c:	movt	r0, #1
   11720:	bl	11240 <gettext@plt>
   11724:	movw	r1, #50532	; 0xc564
   11728:	movt	r1, #1
   1172c:	movw	r2, #50755	; 0xc643
   11730:	movt	r2, #1
   11734:	bl	110b4 <printf@plt>
   11738:	movw	r1, #5
   1173c:	str	r0, [sp, #4]
   11740:	mov	r0, r1
   11744:	movw	r1, #0
   11748:	bl	112e8 <setlocale@plt>
   1174c:	str	r0, [sp, #16]
   11750:	ldr	r0, [sp, #16]
   11754:	movw	r1, #0
   11758:	cmp	r0, r1
   1175c:	beq	11798 <__assert_fail@plt+0x420>
   11760:	ldr	r0, [sp, #16]
   11764:	movw	r1, #50795	; 0xc66b
   11768:	movt	r1, #1
   1176c:	movw	r2, #3
   11770:	bl	11354 <strncmp@plt>
   11774:	cmp	r0, #0
   11778:	beq	11798 <__assert_fail@plt+0x420>
   1177c:	movw	r0, #50799	; 0xc66f
   11780:	movt	r0, #1
   11784:	bl	11240 <gettext@plt>
   11788:	movw	r1, #53628	; 0xd17c
   1178c:	movt	r1, #2
   11790:	ldr	r1, [r1]
   11794:	bl	11090 <fputs_unlocked@plt>
   11798:	movw	r0, #50870	; 0xc6b6
   1179c:	movt	r0, #1
   117a0:	bl	11240 <gettext@plt>
   117a4:	ldr	r2, [fp, #-4]
   117a8:	movw	r1, #50755	; 0xc643
   117ac:	movt	r1, #1
   117b0:	bl	110b4 <printf@plt>
   117b4:	movw	r1, #50897	; 0xc6d1
   117b8:	movt	r1, #1
   117bc:	str	r0, [sp]
   117c0:	mov	r0, r1
   117c4:	bl	11240 <gettext@plt>
   117c8:	ldr	r1, [sp, #24]
   117cc:	ldr	r2, [sp, #24]
   117d0:	ldr	r3, [fp, #-4]
   117d4:	cmp	r2, r3
   117d8:	movw	r2, #0
   117dc:	moveq	r2, #1
   117e0:	tst	r2, #1
   117e4:	movw	r2, #50947	; 0xc703
   117e8:	movt	r2, #1
   117ec:	movw	r3, #50665	; 0xc5e9
   117f0:	movt	r3, #1
   117f4:	movne	r2, r3
   117f8:	bl	110b4 <printf@plt>
   117fc:	mov	sp, fp
   11800:	pop	{fp, pc}
   11804:	push	{fp, lr}
   11808:	mov	fp, sp
   1180c:	sub	sp, sp, #64	; 0x40
   11810:	movw	r2, #0
   11814:	str	r2, [fp, #-4]
   11818:	str	r0, [fp, #-8]
   1181c:	str	r1, [fp, #-12]
   11820:	movw	r0, #1
   11824:	strb	r0, [fp, #-17]	; 0xffffffef
   11828:	ldr	r0, [fp, #-12]
   1182c:	ldr	r0, [r0]
   11830:	bl	13f94 <__assert_fail@plt+0x2c1c>
   11834:	movw	r0, #6
   11838:	movw	r1, #50947	; 0xc703
   1183c:	movt	r1, #1
   11840:	bl	112e8 <setlocale@plt>
   11844:	movw	r1, #50536	; 0xc568
   11848:	movt	r1, #1
   1184c:	str	r0, [fp, #-24]	; 0xffffffe8
   11850:	mov	r0, r1
   11854:	movw	r1, #50493	; 0xc53d
   11858:	movt	r1, #1
   1185c:	bl	11330 <bindtextdomain@plt>
   11860:	movw	r1, #50536	; 0xc568
   11864:	movt	r1, #1
   11868:	str	r0, [fp, #-28]	; 0xffffffe4
   1186c:	mov	r0, r1
   11870:	bl	1115c <textdomain@plt>
   11874:	movw	r1, #15464	; 0x3c68
   11878:	movt	r1, #1
   1187c:	str	r0, [sp, #32]
   11880:	mov	r0, r1
   11884:	bl	1c048 <__assert_fail@plt+0xacd0>
   11888:	ldr	r0, [fp, #-8]
   1188c:	ldr	r1, [fp, #-12]
   11890:	movw	r2, #50517	; 0xc555
   11894:	movt	r2, #1
   11898:	movw	r3, #51384	; 0xc8b8
   1189c:	movt	r3, #1
   118a0:	movw	ip, #0
   118a4:	str	ip, [sp]
   118a8:	bl	11210 <getopt_long@plt>
   118ac:	str	r0, [fp, #-16]
   118b0:	cmn	r0, #1
   118b4:	beq	11c40 <__assert_fail@plt+0x8c8>
   118b8:	ldr	r0, [fp, #-16]
   118bc:	cmn	r0, #3
   118c0:	str	r0, [sp, #28]
   118c4:	beq	11bd4 <__assert_fail@plt+0x85c>
   118c8:	b	118cc <__assert_fail@plt+0x554>
   118cc:	ldr	r0, [sp, #28]
   118d0:	cmn	r0, #2
   118d4:	beq	11bcc <__assert_fail@plt+0x854>
   118d8:	b	118dc <__assert_fail@plt+0x564>
   118dc:	ldr	r0, [sp, #28]
   118e0:	cmp	r0, #72	; 0x48
   118e4:	beq	11aa4 <__assert_fail@plt+0x72c>
   118e8:	b	118ec <__assert_fail@plt+0x574>
   118ec:	ldr	r0, [sp, #28]
   118f0:	cmp	r0, #84	; 0x54
   118f4:	beq	11b7c <__assert_fail@plt+0x804>
   118f8:	b	118fc <__assert_fail@plt+0x584>
   118fc:	ldr	r0, [sp, #28]
   11900:	cmp	r0, #97	; 0x61
   11904:	beq	119cc <__assert_fail@plt+0x654>
   11908:	b	1190c <__assert_fail@plt+0x594>
   1190c:	ldr	r0, [sp, #28]
   11910:	cmp	r0, #98	; 0x62
   11914:	beq	11a54 <__assert_fail@plt+0x6dc>
   11918:	b	1191c <__assert_fail@plt+0x5a4>
   1191c:	ldr	r0, [sp, #28]
   11920:	cmp	r0, #100	; 0x64
   11924:	beq	11a70 <__assert_fail@plt+0x6f8>
   11928:	b	1192c <__assert_fail@plt+0x5b4>
   1192c:	ldr	r0, [sp, #28]
   11930:	cmp	r0, #108	; 0x6c
   11934:	beq	11ab8 <__assert_fail@plt+0x740>
   11938:	b	1193c <__assert_fail@plt+0x5c4>
   1193c:	ldr	r0, [sp, #28]
   11940:	cmp	r0, #109	; 0x6d
   11944:	beq	11ae0 <__assert_fail@plt+0x768>
   11948:	b	1194c <__assert_fail@plt+0x5d4>
   1194c:	ldr	r0, [sp, #28]
   11950:	cmp	r0, #112	; 0x70
   11954:	beq	11af4 <__assert_fail@plt+0x77c>
   11958:	b	1195c <__assert_fail@plt+0x5e4>
   1195c:	ldr	r0, [sp, #28]
   11960:	cmp	r0, #113	; 0x71
   11964:	beq	11b10 <__assert_fail@plt+0x798>
   11968:	b	1196c <__assert_fail@plt+0x5f4>
   1196c:	ldr	r0, [sp, #28]
   11970:	cmp	r0, #114	; 0x72
   11974:	beq	11b24 <__assert_fail@plt+0x7ac>
   11978:	b	1197c <__assert_fail@plt+0x604>
   1197c:	ldr	r0, [sp, #28]
   11980:	cmp	r0, #115	; 0x73
   11984:	beq	11b4c <__assert_fail@plt+0x7d4>
   11988:	b	1198c <__assert_fail@plt+0x614>
   1198c:	ldr	r0, [sp, #28]
   11990:	cmp	r0, #116	; 0x74
   11994:	beq	11b60 <__assert_fail@plt+0x7e8>
   11998:	b	1199c <__assert_fail@plt+0x624>
   1199c:	ldr	r0, [sp, #28]
   119a0:	cmp	r0, #117	; 0x75
   119a4:	beq	11b90 <__assert_fail@plt+0x818>
   119a8:	b	119ac <__assert_fail@plt+0x634>
   119ac:	ldr	r0, [sp, #28]
   119b0:	cmp	r0, #119	; 0x77
   119b4:	beq	11b7c <__assert_fail@plt+0x804>
   119b8:	b	119bc <__assert_fail@plt+0x644>
   119bc:	ldr	r0, [sp, #28]
   119c0:	cmp	r0, #256	; 0x100
   119c4:	beq	11bb8 <__assert_fail@plt+0x840>
   119c8:	b	11c34 <__assert_fail@plt+0x8bc>
   119cc:	movw	r0, #53636	; 0xd184
   119d0:	movt	r0, #2
   119d4:	movw	r1, #1
   119d8:	strb	r1, [r0]
   119dc:	movw	r0, #53637	; 0xd185
   119e0:	movt	r0, #2
   119e4:	strb	r1, [r0]
   119e8:	movw	r0, #53638	; 0xd186
   119ec:	movt	r0, #2
   119f0:	strb	r1, [r0]
   119f4:	movw	r0, #53639	; 0xd187
   119f8:	movt	r0, #2
   119fc:	strb	r1, [r0]
   11a00:	movw	r0, #53640	; 0xd188
   11a04:	movt	r0, #2
   11a08:	strb	r1, [r0]
   11a0c:	movw	r0, #53641	; 0xd189
   11a10:	movt	r0, #2
   11a14:	strb	r1, [r0]
   11a18:	movw	r0, #53642	; 0xd18a
   11a1c:	movt	r0, #2
   11a20:	strb	r1, [r0]
   11a24:	movw	r0, #53643	; 0xd18b
   11a28:	movt	r0, #2
   11a2c:	strb	r1, [r0]
   11a30:	movw	r0, #53644	; 0xd18c
   11a34:	movt	r0, #2
   11a38:	strb	r1, [r0]
   11a3c:	movw	r0, #53645	; 0xd18d
   11a40:	movt	r0, #2
   11a44:	strb	r1, [r0]
   11a48:	movw	r0, #0
   11a4c:	strb	r0, [fp, #-17]	; 0xffffffef
   11a50:	b	11c3c <__assert_fail@plt+0x8c4>
   11a54:	movw	r0, #53636	; 0xd184
   11a58:	movt	r0, #2
   11a5c:	movw	r1, #1
   11a60:	strb	r1, [r0]
   11a64:	movw	r0, #0
   11a68:	strb	r0, [fp, #-17]	; 0xffffffef
   11a6c:	b	11c3c <__assert_fail@plt+0x8c4>
   11a70:	movw	r0, #53637	; 0xd185
   11a74:	movt	r0, #2
   11a78:	movw	r1, #1
   11a7c:	strb	r1, [r0]
   11a80:	movw	r0, #53644	; 0xd18c
   11a84:	movt	r0, #2
   11a88:	strb	r1, [r0]
   11a8c:	movw	r0, #53645	; 0xd18d
   11a90:	movt	r0, #2
   11a94:	strb	r1, [r0]
   11a98:	movw	r0, #0
   11a9c:	strb	r0, [fp, #-17]	; 0xffffffef
   11aa0:	b	11c3c <__assert_fail@plt+0x8c4>
   11aa4:	movw	r0, #53646	; 0xd18e
   11aa8:	movt	r0, #2
   11aac:	movw	r1, #1
   11ab0:	strb	r1, [r0]
   11ab4:	b	11c3c <__assert_fail@plt+0x8c4>
   11ab8:	movw	r0, #53638	; 0xd186
   11abc:	movt	r0, #2
   11ac0:	movw	r1, #1
   11ac4:	strb	r1, [r0]
   11ac8:	movw	r0, #53644	; 0xd18c
   11acc:	movt	r0, #2
   11ad0:	strb	r1, [r0]
   11ad4:	movw	r0, #0
   11ad8:	strb	r0, [fp, #-17]	; 0xffffffef
   11adc:	b	11c3c <__assert_fail@plt+0x8c4>
   11ae0:	movw	r0, #53647	; 0xd18f
   11ae4:	movt	r0, #2
   11ae8:	movw	r1, #1
   11aec:	strb	r1, [r0]
   11af0:	b	11c3c <__assert_fail@plt+0x8c4>
   11af4:	movw	r0, #53639	; 0xd187
   11af8:	movt	r0, #2
   11afc:	movw	r1, #1
   11b00:	strb	r1, [r0]
   11b04:	movw	r0, #0
   11b08:	strb	r0, [fp, #-17]	; 0xffffffef
   11b0c:	b	11c3c <__assert_fail@plt+0x8c4>
   11b10:	movw	r0, #53648	; 0xd190
   11b14:	movt	r0, #2
   11b18:	movw	r1, #1
   11b1c:	strb	r1, [r0]
   11b20:	b	11c3c <__assert_fail@plt+0x8c4>
   11b24:	movw	r0, #53640	; 0xd188
   11b28:	movt	r0, #2
   11b2c:	movw	r1, #1
   11b30:	strb	r1, [r0]
   11b34:	movw	r0, #53644	; 0xd18c
   11b38:	movt	r0, #2
   11b3c:	strb	r1, [r0]
   11b40:	movw	r0, #0
   11b44:	strb	r0, [fp, #-17]	; 0xffffffef
   11b48:	b	11c3c <__assert_fail@plt+0x8c4>
   11b4c:	movw	r0, #53649	; 0xd191
   11b50:	movt	r0, #2
   11b54:	movw	r1, #1
   11b58:	strb	r1, [r0]
   11b5c:	b	11c3c <__assert_fail@plt+0x8c4>
   11b60:	movw	r0, #53641	; 0xd189
   11b64:	movt	r0, #2
   11b68:	movw	r1, #1
   11b6c:	strb	r1, [r0]
   11b70:	movw	r0, #0
   11b74:	strb	r0, [fp, #-17]	; 0xffffffef
   11b78:	b	11c3c <__assert_fail@plt+0x8c4>
   11b7c:	movw	r0, #53643	; 0xd18b
   11b80:	movt	r0, #2
   11b84:	movw	r1, #1
   11b88:	strb	r1, [r0]
   11b8c:	b	11c3c <__assert_fail@plt+0x8c4>
   11b90:	movw	r0, #53642	; 0xd18a
   11b94:	movt	r0, #2
   11b98:	movw	r1, #1
   11b9c:	strb	r1, [r0]
   11ba0:	movw	r0, #53644	; 0xd18c
   11ba4:	movt	r0, #2
   11ba8:	strb	r1, [r0]
   11bac:	movw	r0, #0
   11bb0:	strb	r0, [fp, #-17]	; 0xffffffef
   11bb4:	b	11c3c <__assert_fail@plt+0x8c4>
   11bb8:	movw	r0, #53650	; 0xd192
   11bbc:	movt	r0, #2
   11bc0:	movw	r1, #1
   11bc4:	strb	r1, [r0]
   11bc8:	b	11c3c <__assert_fail@plt+0x8c4>
   11bcc:	movw	r0, #0
   11bd0:	bl	11474 <__assert_fail@plt+0xfc>
   11bd4:	movw	r0, #53628	; 0xd17c
   11bd8:	movt	r0, #2
   11bdc:	ldr	r0, [r0]
   11be0:	movw	r1, #53536	; 0xd120
   11be4:	movt	r1, #2
   11be8:	ldr	r3, [r1]
   11bec:	movw	r1, #50489	; 0xc539
   11bf0:	movt	r1, #1
   11bf4:	movw	r2, #50532	; 0xc564
   11bf8:	movt	r2, #1
   11bfc:	movw	ip, #50546	; 0xc572
   11c00:	movt	ip, #1
   11c04:	str	ip, [sp]
   11c08:	movw	ip, #50563	; 0xc583
   11c0c:	movt	ip, #1
   11c10:	str	ip, [sp, #4]
   11c14:	movw	ip, #50579	; 0xc593
   11c18:	movt	ip, #1
   11c1c:	str	ip, [sp, #8]
   11c20:	movw	ip, #0
   11c24:	str	ip, [sp, #12]
   11c28:	bl	17294 <__assert_fail@plt+0x5f1c>
   11c2c:	movw	r0, #0
   11c30:	bl	11234 <exit@plt>
   11c34:	movw	r0, #1
   11c38:	bl	11474 <__assert_fail@plt+0xfc>
   11c3c:	b	11888 <__assert_fail@plt+0x510>
   11c40:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11c44:	tst	r0, #1
   11c48:	beq	11c68 <__assert_fail@plt+0x8f0>
   11c4c:	movw	r0, #53642	; 0xd18a
   11c50:	movt	r0, #2
   11c54:	movw	r1, #1
   11c58:	strb	r1, [r0]
   11c5c:	movw	r0, #53649	; 0xd191
   11c60:	movt	r0, #2
   11c64:	strb	r1, [r0]
   11c68:	movw	r0, #53645	; 0xd18d
   11c6c:	movt	r0, #2
   11c70:	ldrb	r0, [r0]
   11c74:	tst	r0, #1
   11c78:	beq	11c8c <__assert_fail@plt+0x914>
   11c7c:	movw	r0, #53649	; 0xd191
   11c80:	movt	r0, #2
   11c84:	movw	r1, #0
   11c88:	strb	r1, [r0]
   11c8c:	movw	r0, #2
   11c90:	bl	13dc8 <__assert_fail@plt+0x2a50>
   11c94:	tst	r0, #1
   11c98:	beq	11cc4 <__assert_fail@plt+0x94c>
   11c9c:	movw	r0, #53652	; 0xd194
   11ca0:	movt	r0, #2
   11ca4:	movw	r1, #50593	; 0xc5a1
   11ca8:	movt	r1, #1
   11cac:	str	r1, [r0]
   11cb0:	movw	r0, #53656	; 0xd198
   11cb4:	movt	r0, #2
   11cb8:	movw	r1, #16
   11cbc:	str	r1, [r0]
   11cc0:	b	11ce8 <__assert_fail@plt+0x970>
   11cc4:	movw	r0, #53652	; 0xd194
   11cc8:	movt	r0, #2
   11ccc:	movw	r1, #50608	; 0xc5b0
   11cd0:	movt	r1, #1
   11cd4:	str	r1, [r0]
   11cd8:	movw	r0, #53656	; 0xd198
   11cdc:	movt	r0, #2
   11ce0:	movw	r1, #12
   11ce4:	str	r1, [r0]
   11ce8:	ldr	r0, [fp, #-8]
   11cec:	movw	r1, #53616	; 0xd170
   11cf0:	movt	r1, #2
   11cf4:	ldr	r1, [r1]
   11cf8:	sub	r0, r0, r1
   11cfc:	add	r1, r0, #1
   11d00:	cmp	r1, #2
   11d04:	str	r0, [sp, #24]
   11d08:	bcc	11d40 <__assert_fail@plt+0x9c8>
   11d0c:	b	11d10 <__assert_fail@plt+0x998>
   11d10:	ldr	r0, [sp, #24]
   11d14:	cmp	r0, #1
   11d18:	beq	11d54 <__assert_fail@plt+0x9dc>
   11d1c:	b	11d20 <__assert_fail@plt+0x9a8>
   11d20:	ldr	r0, [sp, #24]
   11d24:	cmp	r0, #2
   11d28:	bne	11d78 <__assert_fail@plt+0xa00>
   11d2c:	b	11d30 <__assert_fail@plt+0x9b8>
   11d30:	movw	r0, #53647	; 0xd18f
   11d34:	movt	r0, #2
   11d38:	movw	r1, #1
   11d3c:	strb	r1, [r0]
   11d40:	movw	r0, #50461	; 0xc51d
   11d44:	movt	r0, #1
   11d48:	movw	r1, #1
   11d4c:	bl	11dd8 <__assert_fail@plt+0xa60>
   11d50:	b	11dcc <__assert_fail@plt+0xa54>
   11d54:	ldr	r0, [fp, #-12]
   11d58:	movw	r1, #53616	; 0xd170
   11d5c:	movt	r1, #2
   11d60:	ldr	r1, [r1]
   11d64:	add	r0, r0, r1, lsl #2
   11d68:	ldr	r0, [r0]
   11d6c:	movw	r1, #0
   11d70:	bl	11dd8 <__assert_fail@plt+0xa60>
   11d74:	b	11dcc <__assert_fail@plt+0xa54>
   11d78:	movw	r0, #50620	; 0xc5bc
   11d7c:	movt	r0, #1
   11d80:	bl	11240 <gettext@plt>
   11d84:	ldr	r1, [fp, #-12]
   11d88:	movw	r2, #53616	; 0xd170
   11d8c:	movt	r2, #2
   11d90:	ldr	r2, [r2]
   11d94:	add	r2, r2, #2
   11d98:	add	r1, r1, r2, lsl #2
   11d9c:	ldr	r1, [r1]
   11da0:	str	r0, [sp, #20]
   11da4:	mov	r0, r1
   11da8:	bl	165f0 <__assert_fail@plt+0x5278>
   11dac:	movw	r1, #0
   11db0:	str	r0, [sp, #16]
   11db4:	mov	r0, r1
   11db8:	ldr	r2, [sp, #20]
   11dbc:	ldr	r3, [sp, #16]
   11dc0:	bl	111b0 <error@plt>
   11dc4:	movw	r0, #1
   11dc8:	bl	11474 <__assert_fail@plt+0xfc>
   11dcc:	movw	r0, #0
   11dd0:	mov	sp, fp
   11dd4:	pop	{fp, pc}
   11dd8:	push	{fp, lr}
   11ddc:	mov	fp, sp
   11de0:	sub	sp, sp, #24
   11de4:	str	r0, [fp, #-4]
   11de8:	str	r1, [fp, #-8]
   11dec:	ldr	r0, [fp, #-4]
   11df0:	ldr	r3, [fp, #-8]
   11df4:	add	r1, sp, #12
   11df8:	add	r2, sp, #8
   11dfc:	bl	167fc <__assert_fail@plt+0x5484>
   11e00:	cmp	r0, #0
   11e04:	beq	11e48 <__assert_fail@plt+0xad0>
   11e08:	bl	1127c <__errno_location@plt>
   11e0c:	ldr	r1, [r0]
   11e10:	ldr	r2, [fp, #-4]
   11e14:	movw	r0, #0
   11e18:	movw	r3, #3
   11e1c:	str	r1, [sp, #4]
   11e20:	mov	r1, r3
   11e24:	bl	163ac <__assert_fail@plt+0x5034>
   11e28:	movw	r1, #1
   11e2c:	str	r0, [sp]
   11e30:	mov	r0, r1
   11e34:	ldr	r1, [sp, #4]
   11e38:	movw	r2, #51759	; 0xca2f
   11e3c:	movt	r2, #1
   11e40:	ldr	r3, [sp]
   11e44:	bl	111b0 <error@plt>
   11e48:	movw	r0, #53648	; 0xd190
   11e4c:	movt	r0, #2
   11e50:	ldrb	r0, [r0]
   11e54:	tst	r0, #1
   11e58:	beq	11e6c <__assert_fail@plt+0xaf4>
   11e5c:	ldr	r0, [sp, #12]
   11e60:	ldr	r1, [sp, #8]
   11e64:	bl	11e88 <__assert_fail@plt+0xb10>
   11e68:	b	11e78 <__assert_fail@plt+0xb00>
   11e6c:	ldr	r0, [sp, #12]
   11e70:	ldr	r1, [sp, #8]
   11e74:	bl	11f5c <__assert_fail@plt+0xbe4>
   11e78:	ldr	r0, [sp, #8]
   11e7c:	bl	13d88 <__assert_fail@plt+0x2a10>
   11e80:	mov	sp, fp
   11e84:	pop	{fp, pc}
   11e88:	push	{fp, lr}
   11e8c:	mov	fp, sp
   11e90:	sub	sp, sp, #24
   11e94:	str	r0, [fp, #-4]
   11e98:	str	r1, [fp, #-8]
   11e9c:	movw	r0, #0
   11ea0:	str	r0, [sp, #12]
   11ea4:	movw	r0, #50947	; 0xc703
   11ea8:	movt	r0, #1
   11eac:	str	r0, [sp, #8]
   11eb0:	ldr	r0, [fp, #-4]
   11eb4:	mvn	r1, #0
   11eb8:	add	r1, r0, r1
   11ebc:	str	r1, [fp, #-4]
   11ec0:	cmp	r0, #0
   11ec4:	beq	11f40 <__assert_fail@plt+0xbc8>
   11ec8:	ldr	r0, [fp, #-8]
   11ecc:	ldrb	r0, [r0, #44]	; 0x2c
   11ed0:	cmp	r0, #0
   11ed4:	beq	11f30 <__assert_fail@plt+0xbb8>
   11ed8:	ldr	r0, [fp, #-8]
   11edc:	ldrsh	r0, [r0]
   11ee0:	cmp	r0, #7
   11ee4:	bne	11f30 <__assert_fail@plt+0xbb8>
   11ee8:	ldr	r0, [fp, #-8]
   11eec:	bl	16728 <__assert_fail@plt+0x53b0>
   11ef0:	str	r0, [sp, #4]
   11ef4:	ldr	r1, [sp, #8]
   11ef8:	ldr	r2, [sp, #4]
   11efc:	movw	r0, #51053	; 0xc76d
   11f00:	movt	r0, #1
   11f04:	bl	110b4 <printf@plt>
   11f08:	ldr	r1, [sp, #4]
   11f0c:	str	r0, [sp]
   11f10:	mov	r0, r1
   11f14:	bl	13d88 <__assert_fail@plt+0x2a10>
   11f18:	movw	r0, #51202	; 0xc802
   11f1c:	movt	r0, #1
   11f20:	str	r0, [sp, #8]
   11f24:	ldr	r0, [sp, #12]
   11f28:	add	r0, r0, #1
   11f2c:	str	r0, [sp, #12]
   11f30:	ldr	r0, [fp, #-8]
   11f34:	add	r0, r0, #384	; 0x180
   11f38:	str	r0, [fp, #-8]
   11f3c:	b	11eb0 <__assert_fail@plt+0xb38>
   11f40:	movw	r0, #51058	; 0xc772
   11f44:	movt	r0, #1
   11f48:	bl	11240 <gettext@plt>
   11f4c:	ldr	r1, [sp, #12]
   11f50:	bl	110b4 <printf@plt>
   11f54:	mov	sp, fp
   11f58:	pop	{fp, pc}
   11f5c:	push	{fp, lr}
   11f60:	mov	fp, sp
   11f64:	sub	sp, sp, #16
   11f68:	ldr	r2, [pc, #636]	; 121ec <__assert_fail@plt+0xe74>
   11f6c:	str	r0, [fp, #-4]
   11f70:	str	r1, [sp, #8]
   11f74:	str	r2, [sp]
   11f78:	movw	r0, #53646	; 0xd18e
   11f7c:	movt	r0, #2
   11f80:	ldrb	r0, [r0]
   11f84:	tst	r0, #1
   11f88:	beq	11f90 <__assert_fail@plt+0xc18>
   11f8c:	bl	121f0 <__assert_fail@plt+0xe78>
   11f90:	movw	r0, #53647	; 0xd18f
   11f94:	movt	r0, #2
   11f98:	ldrb	r0, [r0]
   11f9c:	tst	r0, #1
   11fa0:	beq	11ff0 <__assert_fail@plt+0xc78>
   11fa4:	movw	r0, #0
   11fa8:	bl	1124c <ttyname@plt>
   11fac:	str	r0, [sp, #4]
   11fb0:	ldr	r0, [sp, #4]
   11fb4:	movw	r1, #0
   11fb8:	cmp	r0, r1
   11fbc:	bne	11fc4 <__assert_fail@plt+0xc4c>
   11fc0:	b	121e4 <__assert_fail@plt+0xe6c>
   11fc4:	ldr	r0, [sp, #4]
   11fc8:	movw	r1, #51072	; 0xc780
   11fcc:	movt	r1, #1
   11fd0:	movw	r2, #5
   11fd4:	bl	11354 <strncmp@plt>
   11fd8:	cmp	r0, #0
   11fdc:	bne	11fec <__assert_fail@plt+0xc74>
   11fe0:	ldr	r0, [sp, #4]
   11fe4:	add	r0, r0, #5
   11fe8:	str	r0, [sp, #4]
   11fec:	b	11ff0 <__assert_fail@plt+0xc78>
   11ff0:	b	11ff4 <__assert_fail@plt+0xc7c>
   11ff4:	ldr	r0, [fp, #-4]
   11ff8:	mvn	r1, #0
   11ffc:	add	r1, r0, r1
   12000:	str	r1, [fp, #-4]
   12004:	cmp	r0, #0
   12008:	beq	121e4 <__assert_fail@plt+0xe6c>
   1200c:	movw	r0, #53647	; 0xd18f
   12010:	movt	r0, #2
   12014:	ldrb	r0, [r0]
   12018:	tst	r0, #1
   1201c:	beq	1203c <__assert_fail@plt+0xcc4>
   12020:	ldr	r0, [sp, #4]
   12024:	ldr	r1, [sp, #8]
   12028:	add	r1, r1, #8
   1202c:	movw	r2, #32
   12030:	bl	11354 <strncmp@plt>
   12034:	cmp	r0, #0
   12038:	bne	121b8 <__assert_fail@plt+0xe40>
   1203c:	movw	r0, #53642	; 0xd18a
   12040:	movt	r0, #2
   12044:	ldrb	r0, [r0]
   12048:	tst	r0, #1
   1204c:	beq	12080 <__assert_fail@plt+0xd08>
   12050:	ldr	r0, [sp, #8]
   12054:	ldrb	r0, [r0, #44]	; 0x2c
   12058:	cmp	r0, #0
   1205c:	beq	12080 <__assert_fail@plt+0xd08>
   12060:	ldr	r0, [sp, #8]
   12064:	ldrsh	r0, [r0]
   12068:	cmp	r0, #7
   1206c:	bne	12080 <__assert_fail@plt+0xd08>
   12070:	ldr	r0, [sp, #8]
   12074:	ldr	r1, [sp]
   12078:	bl	122e0 <__assert_fail@plt+0xf68>
   1207c:	b	121b4 <__assert_fail@plt+0xe3c>
   12080:	movw	r0, #53640	; 0xd188
   12084:	movt	r0, #2
   12088:	ldrb	r0, [r0]
   1208c:	tst	r0, #1
   12090:	beq	120b0 <__assert_fail@plt+0xd38>
   12094:	ldr	r0, [sp, #8]
   12098:	ldrsh	r0, [r0]
   1209c:	cmp	r0, #1
   120a0:	bne	120b0 <__assert_fail@plt+0xd38>
   120a4:	ldr	r0, [sp, #8]
   120a8:	bl	12778 <__assert_fail@plt+0x1400>
   120ac:	b	121b0 <__assert_fail@plt+0xe38>
   120b0:	movw	r0, #53636	; 0xd184
   120b4:	movt	r0, #2
   120b8:	ldrb	r0, [r0]
   120bc:	tst	r0, #1
   120c0:	beq	120e0 <__assert_fail@plt+0xd68>
   120c4:	ldr	r0, [sp, #8]
   120c8:	ldrsh	r0, [r0]
   120cc:	cmp	r0, #2
   120d0:	bne	120e0 <__assert_fail@plt+0xd68>
   120d4:	ldr	r0, [sp, #8]
   120d8:	bl	129a0 <__assert_fail@plt+0x1628>
   120dc:	b	121ac <__assert_fail@plt+0xe34>
   120e0:	movw	r0, #53641	; 0xd189
   120e4:	movt	r0, #2
   120e8:	ldrb	r0, [r0]
   120ec:	tst	r0, #1
   120f0:	beq	12110 <__assert_fail@plt+0xd98>
   120f4:	ldr	r0, [sp, #8]
   120f8:	ldrsh	r0, [r0]
   120fc:	cmp	r0, #3
   12100:	bne	12110 <__assert_fail@plt+0xd98>
   12104:	ldr	r0, [sp, #8]
   12108:	bl	12a2c <__assert_fail@plt+0x16b4>
   1210c:	b	121a8 <__assert_fail@plt+0xe30>
   12110:	movw	r0, #53639	; 0xd187
   12114:	movt	r0, #2
   12118:	ldrb	r0, [r0]
   1211c:	tst	r0, #1
   12120:	beq	12140 <__assert_fail@plt+0xdc8>
   12124:	ldr	r0, [sp, #8]
   12128:	ldrsh	r0, [r0]
   1212c:	cmp	r0, #5
   12130:	bne	12140 <__assert_fail@plt+0xdc8>
   12134:	ldr	r0, [sp, #8]
   12138:	bl	12ab8 <__assert_fail@plt+0x1740>
   1213c:	b	121a4 <__assert_fail@plt+0xe2c>
   12140:	movw	r0, #53638	; 0xd186
   12144:	movt	r0, #2
   12148:	ldrb	r0, [r0]
   1214c:	tst	r0, #1
   12150:	beq	12170 <__assert_fail@plt+0xdf8>
   12154:	ldr	r0, [sp, #8]
   12158:	ldrsh	r0, [r0]
   1215c:	cmp	r0, #6
   12160:	bne	12170 <__assert_fail@plt+0xdf8>
   12164:	ldr	r0, [sp, #8]
   12168:	bl	12b8c <__assert_fail@plt+0x1814>
   1216c:	b	121a0 <__assert_fail@plt+0xe28>
   12170:	movw	r0, #53637	; 0xd185
   12174:	movt	r0, #2
   12178:	ldrb	r0, [r0]
   1217c:	tst	r0, #1
   12180:	beq	1219c <__assert_fail@plt+0xe24>
   12184:	ldr	r0, [sp, #8]
   12188:	ldrsh	r0, [r0]
   1218c:	cmp	r0, #8
   12190:	bne	1219c <__assert_fail@plt+0xe24>
   12194:	ldr	r0, [sp, #8]
   12198:	bl	12c6c <__assert_fail@plt+0x18f4>
   1219c:	b	121a0 <__assert_fail@plt+0xe28>
   121a0:	b	121a4 <__assert_fail@plt+0xe2c>
   121a4:	b	121a8 <__assert_fail@plt+0xe30>
   121a8:	b	121ac <__assert_fail@plt+0xe34>
   121ac:	b	121b0 <__assert_fail@plt+0xe38>
   121b0:	b	121b4 <__assert_fail@plt+0xe3c>
   121b4:	b	121b8 <__assert_fail@plt+0xe40>
   121b8:	ldr	r0, [sp, #8]
   121bc:	ldrsh	r0, [r0]
   121c0:	cmp	r0, #2
   121c4:	bne	121d4 <__assert_fail@plt+0xe5c>
   121c8:	ldr	r0, [sp, #8]
   121cc:	ldr	r0, [r0, #340]	; 0x154
   121d0:	str	r0, [sp]
   121d4:	ldr	r0, [sp, #8]
   121d8:	add	r0, r0, #384	; 0x180
   121dc:	str	r0, [sp, #8]
   121e0:	b	11ff4 <__assert_fail@plt+0xc7c>
   121e4:	mov	sp, fp
   121e8:	pop	{fp, pc}
   121ec:	andhi	r0, r0, r0
   121f0:	push	{r4, r5, r6, r7, fp, lr}
   121f4:	add	fp, sp, #16
   121f8:	sub	sp, sp, #56	; 0x38
   121fc:	movw	r0, #51078	; 0xc786
   12200:	movt	r0, #1
   12204:	bl	11240 <gettext@plt>
   12208:	movw	r1, #51083	; 0xc78b
   1220c:	movt	r1, #1
   12210:	str	r0, [fp, #-20]	; 0xffffffec
   12214:	mov	r0, r1
   12218:	bl	11240 <gettext@plt>
   1221c:	movw	r1, #51088	; 0xc790
   12220:	movt	r1, #1
   12224:	str	r0, [fp, #-24]	; 0xffffffe8
   12228:	mov	r0, r1
   1222c:	bl	11240 <gettext@plt>
   12230:	movw	r1, #51093	; 0xc795
   12234:	movt	r1, #1
   12238:	str	r0, [fp, #-28]	; 0xffffffe4
   1223c:	mov	r0, r1
   12240:	bl	11240 <gettext@plt>
   12244:	movw	r1, #51098	; 0xc79a
   12248:	movt	r1, #1
   1224c:	str	r0, [fp, #-32]	; 0xffffffe0
   12250:	mov	r0, r1
   12254:	bl	11240 <gettext@plt>
   12258:	movw	r1, #51102	; 0xc79e
   1225c:	movt	r1, #1
   12260:	str	r0, [sp, #36]	; 0x24
   12264:	mov	r0, r1
   12268:	bl	11240 <gettext@plt>
   1226c:	movw	r1, #51110	; 0xc7a6
   12270:	movt	r1, #1
   12274:	str	r0, [sp, #32]
   12278:	mov	r0, r1
   1227c:	bl	11240 <gettext@plt>
   12280:	mvn	r1, #0
   12284:	str	r0, [sp, #28]
   12288:	mov	r0, r1
   1228c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12290:	str	r1, [sp, #24]
   12294:	mov	r1, r2
   12298:	movw	r3, #32
   1229c:	and	r2, r3, #255	; 0xff
   122a0:	ldr	r3, [sp, #24]
   122a4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   122a8:	str	ip, [sp]
   122ac:	ldr	lr, [fp, #-28]	; 0xffffffe4
   122b0:	str	lr, [sp, #4]
   122b4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   122b8:	str	r4, [sp, #8]
   122bc:	ldr	r5, [sp, #36]	; 0x24
   122c0:	str	r5, [sp, #12]
   122c4:	ldr	r6, [sp, #32]
   122c8:	str	r6, [sp, #16]
   122cc:	ldr	r7, [sp, #28]
   122d0:	str	r7, [sp, #20]
   122d4:	bl	12e40 <__assert_fail@plt+0x1ac8>
   122d8:	sub	sp, fp, #16
   122dc:	pop	{r4, r5, r6, r7, fp, pc}
   122e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   122e4:	add	fp, sp, #24
   122e8:	sub	sp, sp, #544	; 0x220
   122ec:	sub	r2, fp, #204	; 0xcc
   122f0:	sub	r3, fp, #186	; 0xba
   122f4:	str	r0, [fp, #-28]	; 0xffffffe4
   122f8:	str	r1, [fp, #-32]	; 0xffffffe0
   122fc:	str	r3, [fp, #-192]	; 0xffffff40
   12300:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12304:	ldr	r0, [r0, #4]
   12308:	str	r0, [sp, #92]	; 0x5c
   1230c:	mov	r0, r2
   12310:	movw	r1, #51172	; 0xc7e4
   12314:	movt	r1, #1
   12318:	ldr	r2, [sp, #92]	; 0x5c
   1231c:	bl	1130c <sprintf@plt>
   12320:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12324:	ldrb	r1, [r1, #8]
   12328:	cmp	r1, #47	; 0x2f
   1232c:	beq	12344 <__assert_fail@plt+0xfcc>
   12330:	ldr	r0, [fp, #-192]	; 0xffffff40
   12334:	movw	r1, #51072	; 0xc780
   12338:	movt	r1, #1
   1233c:	bl	1112c <stpcpy@plt>
   12340:	str	r0, [fp, #-192]	; 0xffffff40
   12344:	ldr	r0, [fp, #-192]	; 0xffffff40
   12348:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1234c:	add	r1, r1, #8
   12350:	movw	r2, #32
   12354:	bl	1313c <__assert_fail@plt+0x1dc4>
   12358:	sub	r1, fp, #186	; 0xba
   1235c:	str	r0, [sp, #88]	; 0x58
   12360:	mov	r0, r1
   12364:	sub	r1, fp, #136	; 0x88
   12368:	bl	1c060 <__assert_fail@plt+0xace8>
   1236c:	cmp	r0, #0
   12370:	bne	12398 <__assert_fail@plt+0x1020>
   12374:	sub	r0, fp, #136	; 0x88
   12378:	bl	131d4 <__assert_fail@plt+0x1e5c>
   1237c:	tst	r0, #1
   12380:	movw	r0, #43	; 0x2b
   12384:	moveq	r0, #45	; 0x2d
   12388:	strb	r0, [fp, #-141]	; 0xffffff73
   1238c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12390:	str	r0, [fp, #-140]	; 0xffffff74
   12394:	b	123a8 <__assert_fail@plt+0x1030>
   12398:	movw	r0, #63	; 0x3f
   1239c:	strb	r0, [fp, #-141]	; 0xffffff73
   123a0:	movw	r0, #0
   123a4:	str	r0, [fp, #-140]	; 0xffffff74
   123a8:	ldr	r0, [fp, #-140]	; 0xffffff74
   123ac:	cmp	r0, #0
   123b0:	beq	123f4 <__assert_fail@plt+0x107c>
   123b4:	sub	r0, fp, #148	; 0x94
   123b8:	ldr	r1, [fp, #-140]	; 0xffffff74
   123bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   123c0:	str	r0, [sp, #84]	; 0x54
   123c4:	mov	r0, r1
   123c8:	mov	r1, r2
   123cc:	bl	13200 <__assert_fail@plt+0x1e88>
   123d0:	ldr	r1, [sp, #84]	; 0x54
   123d4:	str	r0, [sp, #80]	; 0x50
   123d8:	mov	r0, r1
   123dc:	movw	r1, #51176	; 0xc7e8
   123e0:	movt	r1, #1
   123e4:	movw	r2, #6
   123e8:	ldr	r3, [sp, #80]	; 0x50
   123ec:	bl	1130c <sprintf@plt>
   123f0:	b	12404 <__assert_fail@plt+0x108c>
   123f4:	sub	r0, fp, #148	; 0x94
   123f8:	movw	r1, #51181	; 0xc7ed
   123fc:	movt	r1, #1
   12400:	bl	1130c <sprintf@plt>
   12404:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12408:	ldrsb	r0, [r0, #76]	; 0x4c
   1240c:	cmp	r0, #0
   12410:	beq	12630 <__assert_fail@plt+0x12b8>
   12414:	add	r0, sp, #107	; 0x6b
   12418:	movw	r1, #0
   1241c:	str	r1, [sp, #100]	; 0x64
   12420:	str	r1, [sp, #96]	; 0x60
   12424:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12428:	add	r1, r1, #76	; 0x4c
   1242c:	movw	r2, #256	; 0x100
   12430:	bl	1313c <__assert_fail@plt+0x1dc4>
   12434:	add	r1, sp, #107	; 0x6b
   12438:	str	r0, [sp, #76]	; 0x4c
   1243c:	mov	r0, r1
   12440:	movw	r1, #58	; 0x3a
   12444:	bl	11264 <strchr@plt>
   12448:	str	r0, [sp, #96]	; 0x60
   1244c:	ldr	r0, [sp, #96]	; 0x60
   12450:	movw	r1, #0
   12454:	cmp	r0, r1
   12458:	beq	12470 <__assert_fail@plt+0x10f8>
   1245c:	ldr	r0, [sp, #96]	; 0x60
   12460:	add	r1, r0, #1
   12464:	str	r1, [sp, #96]	; 0x60
   12468:	movw	r1, #0
   1246c:	strb	r1, [r0]
   12470:	ldrb	r0, [sp, #107]	; 0x6b
   12474:	cmp	r0, #0
   12478:	beq	1249c <__assert_fail@plt+0x1124>
   1247c:	movw	r0, #53650	; 0xd192
   12480:	movt	r0, #2
   12484:	ldrb	r0, [r0]
   12488:	tst	r0, #1
   1248c:	beq	1249c <__assert_fail@plt+0x1124>
   12490:	add	r0, sp, #107	; 0x6b
   12494:	bl	13ae8 <__assert_fail@plt+0x2770>
   12498:	str	r0, [sp, #100]	; 0x64
   1249c:	ldr	r0, [sp, #100]	; 0x64
   124a0:	movw	r1, #0
   124a4:	cmp	r0, r1
   124a8:	bne	124b4 <__assert_fail@plt+0x113c>
   124ac:	add	r0, sp, #107	; 0x6b
   124b0:	str	r0, [sp, #100]	; 0x64
   124b4:	ldr	r0, [sp, #96]	; 0x60
   124b8:	movw	r1, #0
   124bc:	cmp	r0, r1
   124c0:	beq	12588 <__assert_fail@plt+0x1210>
   124c4:	movw	r0, #53664	; 0xd1a0
   124c8:	movt	r0, #2
   124cc:	ldr	r0, [r0]
   124d0:	ldr	r1, [sp, #100]	; 0x64
   124d4:	str	r0, [sp, #72]	; 0x48
   124d8:	mov	r0, r1
   124dc:	bl	11258 <strlen@plt>
   124e0:	ldr	r1, [sp, #96]	; 0x60
   124e4:	str	r0, [sp, #68]	; 0x44
   124e8:	mov	r0, r1
   124ec:	bl	11258 <strlen@plt>
   124f0:	ldr	r1, [sp, #68]	; 0x44
   124f4:	add	r0, r1, r0
   124f8:	add	r0, r0, #4
   124fc:	ldr	r1, [sp, #72]	; 0x48
   12500:	cmp	r1, r0
   12504:	bcs	12564 <__assert_fail@plt+0x11ec>
   12508:	ldr	r0, [sp, #100]	; 0x64
   1250c:	bl	11258 <strlen@plt>
   12510:	ldr	r1, [sp, #96]	; 0x60
   12514:	str	r0, [sp, #64]	; 0x40
   12518:	mov	r0, r1
   1251c:	bl	11258 <strlen@plt>
   12520:	ldr	r1, [sp, #64]	; 0x40
   12524:	add	r0, r1, r0
   12528:	add	r0, r0, #4
   1252c:	movw	r1, #53664	; 0xd1a0
   12530:	movt	r1, #2
   12534:	str	r0, [r1]
   12538:	movw	r0, #53660	; 0xd19c
   1253c:	movt	r0, #2
   12540:	ldr	r0, [r0]
   12544:	bl	13d88 <__assert_fail@plt+0x2a10>
   12548:	movw	r0, #53664	; 0xd1a0
   1254c:	movt	r0, #2
   12550:	ldr	r0, [r0]
   12554:	bl	1741c <__assert_fail@plt+0x60a4>
   12558:	movw	r1, #53660	; 0xd19c
   1255c:	movt	r1, #2
   12560:	str	r0, [r1]
   12564:	movw	r0, #53660	; 0xd19c
   12568:	movt	r0, #2
   1256c:	ldr	r0, [r0]
   12570:	ldr	r2, [sp, #100]	; 0x64
   12574:	ldr	r3, [sp, #96]	; 0x60
   12578:	movw	r1, #51185	; 0xc7f1
   1257c:	movt	r1, #1
   12580:	bl	1130c <sprintf@plt>
   12584:	b	12614 <__assert_fail@plt+0x129c>
   12588:	movw	r0, #53664	; 0xd1a0
   1258c:	movt	r0, #2
   12590:	ldr	r0, [r0]
   12594:	ldr	r1, [sp, #100]	; 0x64
   12598:	str	r0, [sp, #60]	; 0x3c
   1259c:	mov	r0, r1
   125a0:	bl	11258 <strlen@plt>
   125a4:	add	r0, r0, #3
   125a8:	ldr	r1, [sp, #60]	; 0x3c
   125ac:	cmp	r1, r0
   125b0:	bcs	125f8 <__assert_fail@plt+0x1280>
   125b4:	ldr	r0, [sp, #100]	; 0x64
   125b8:	bl	11258 <strlen@plt>
   125bc:	add	r0, r0, #3
   125c0:	movw	r1, #53664	; 0xd1a0
   125c4:	movt	r1, #2
   125c8:	str	r0, [r1]
   125cc:	movw	r0, #53660	; 0xd19c
   125d0:	movt	r0, #2
   125d4:	ldr	r0, [r0]
   125d8:	bl	13d88 <__assert_fail@plt+0x2a10>
   125dc:	movw	r0, #53664	; 0xd1a0
   125e0:	movt	r0, #2
   125e4:	ldr	r0, [r0]
   125e8:	bl	1741c <__assert_fail@plt+0x60a4>
   125ec:	movw	r1, #53660	; 0xd19c
   125f0:	movt	r1, #2
   125f4:	str	r0, [r1]
   125f8:	movw	r0, #53660	; 0xd19c
   125fc:	movt	r0, #2
   12600:	ldr	r0, [r0]
   12604:	ldr	r2, [sp, #100]	; 0x64
   12608:	movw	r1, #51193	; 0xc7f9
   1260c:	movt	r1, #1
   12610:	bl	1130c <sprintf@plt>
   12614:	add	r0, sp, #107	; 0x6b
   12618:	ldr	r1, [sp, #100]	; 0x64
   1261c:	cmp	r1, r0
   12620:	beq	1262c <__assert_fail@plt+0x12b4>
   12624:	ldr	r0, [sp, #100]	; 0x64
   12628:	bl	13d88 <__assert_fail@plt+0x2a10>
   1262c:	b	12694 <__assert_fail@plt+0x131c>
   12630:	movw	r0, #53664	; 0xd1a0
   12634:	movt	r0, #2
   12638:	ldr	r0, [r0]
   1263c:	cmp	r0, #1
   12640:	bcs	12680 <__assert_fail@plt+0x1308>
   12644:	movw	r0, #53664	; 0xd1a0
   12648:	movt	r0, #2
   1264c:	movw	r1, #1
   12650:	str	r1, [r0]
   12654:	movw	r0, #53660	; 0xd19c
   12658:	movt	r0, #2
   1265c:	ldr	r0, [r0]
   12660:	bl	13d88 <__assert_fail@plt+0x2a10>
   12664:	movw	r0, #53664	; 0xd1a0
   12668:	movt	r0, #2
   1266c:	ldr	r0, [r0]
   12670:	bl	1741c <__assert_fail@plt+0x60a4>
   12674:	movw	r1, #53660	; 0xd19c
   12678:	movt	r1, #2
   1267c:	str	r0, [r1]
   12680:	movw	r0, #53660	; 0xd19c
   12684:	movt	r0, #2
   12688:	ldr	r0, [r0]
   1268c:	movw	r1, #0
   12690:	strb	r1, [r0]
   12694:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12698:	add	r1, r0, #44	; 0x2c
   1269c:	ldrb	r0, [fp, #-141]	; 0xffffff73
   126a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   126a4:	add	r2, r2, #8
   126a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   126ac:	str	r0, [sp, #56]	; 0x38
   126b0:	mov	r0, r3
   126b4:	str	r1, [sp, #52]	; 0x34
   126b8:	str	r2, [sp, #48]	; 0x30
   126bc:	bl	13360 <__assert_fail@plt+0x1fe8>
   126c0:	sub	r1, fp, #204	; 0xcc
   126c4:	sub	r2, fp, #148	; 0x94
   126c8:	movw	r3, #53660	; 0xd19c
   126cc:	movt	r3, #2
   126d0:	ldr	r3, [r3]
   126d4:	movw	ip, #0
   126d8:	cmp	r3, ip
   126dc:	str	r0, [sp, #44]	; 0x2c
   126e0:	str	r1, [sp, #40]	; 0x28
   126e4:	str	r2, [sp, #36]	; 0x24
   126e8:	beq	12700 <__assert_fail@plt+0x1388>
   126ec:	movw	r0, #53660	; 0xd19c
   126f0:	movt	r0, #2
   126f4:	ldr	r0, [r0]
   126f8:	str	r0, [sp, #32]
   126fc:	b	12710 <__assert_fail@plt+0x1398>
   12700:	movw	r0, #50947	; 0xc703
   12704:	movt	r0, #1
   12708:	str	r0, [sp, #32]
   1270c:	b	12710 <__assert_fail@plt+0x1398>
   12710:	ldr	r0, [sp, #32]
   12714:	movw	r1, #32
   12718:	str	r0, [sp, #28]
   1271c:	mov	r0, r1
   12720:	ldr	r2, [sp, #52]	; 0x34
   12724:	str	r1, [sp, #24]
   12728:	mov	r1, r2
   1272c:	ldr	r3, [sp, #56]	; 0x38
   12730:	and	r2, r3, #255	; 0xff
   12734:	ldr	r3, [sp, #24]
   12738:	ldr	ip, [sp, #48]	; 0x30
   1273c:	str	ip, [sp]
   12740:	ldr	lr, [sp, #44]	; 0x2c
   12744:	str	lr, [sp, #4]
   12748:	ldr	r4, [sp, #36]	; 0x24
   1274c:	str	r4, [sp, #8]
   12750:	ldr	r5, [sp, #40]	; 0x28
   12754:	str	r5, [sp, #12]
   12758:	ldr	r6, [sp, #28]
   1275c:	str	r6, [sp, #16]
   12760:	movw	r7, #50947	; 0xc703
   12764:	movt	r7, #1
   12768:	str	r7, [sp, #20]
   1276c:	bl	12e40 <__assert_fail@plt+0x1ac8>
   12770:	sub	sp, fp, #24
   12774:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12778:	push	{r4, r5, fp, lr}
   1277c:	add	fp, sp, #8
   12780:	sub	sp, sp, #88	; 0x58
   12784:	str	r0, [fp, #-12]
   12788:	ldr	r0, [fp, #-12]
   1278c:	ldr	r0, [r0, #4]
   12790:	asr	r1, r0, #31
   12794:	add	r0, r0, r1, lsr #24
   12798:	lsr	r0, r0, #8
   1279c:	strb	r0, [fp, #-13]
   127a0:	ldr	r0, [fp, #-12]
   127a4:	ldr	r0, [r0, #4]
   127a8:	asr	r1, r0, #31
   127ac:	add	r1, r0, r1, lsr #24
   127b0:	bic	r1, r1, #255	; 0xff
   127b4:	sub	r0, r0, r1
   127b8:	strb	r0, [fp, #-14]
   127bc:	movw	r0, #53708	; 0xd1cc
   127c0:	movt	r0, #2
   127c4:	ldr	r0, [r0]
   127c8:	movw	r1, #0
   127cc:	cmp	r0, r1
   127d0:	bne	127f8 <__assert_fail@plt+0x1480>
   127d4:	movw	r0, #51300	; 0xc864
   127d8:	movt	r0, #1
   127dc:	bl	11240 <gettext@plt>
   127e0:	bl	11258 <strlen@plt>
   127e4:	add	r0, r0, #3
   127e8:	bl	1741c <__assert_fail@plt+0x60a4>
   127ec:	movw	r1, #53708	; 0xd1cc
   127f0:	movt	r1, #2
   127f4:	str	r0, [r1]
   127f8:	movw	r0, #53708	; 0xd1cc
   127fc:	movt	r0, #2
   12800:	ldr	r0, [r0]
   12804:	movw	r1, #51300	; 0xc864
   12808:	movt	r1, #1
   1280c:	str	r0, [fp, #-20]	; 0xffffffec
   12810:	mov	r0, r1
   12814:	bl	11240 <gettext@plt>
   12818:	ldrb	r3, [fp, #-14]
   1281c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12820:	str	r0, [fp, #-24]	; 0xffffffe8
   12824:	mov	r0, r1
   12828:	movw	r1, #51310	; 0xc86e
   1282c:	movt	r1, #1
   12830:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12834:	bl	1130c <sprintf@plt>
   12838:	movw	r1, #53712	; 0xd1d0
   1283c:	movt	r1, #2
   12840:	ldr	r1, [r1]
   12844:	movw	r2, #0
   12848:	cmp	r1, r2
   1284c:	bne	12874 <__assert_fail@plt+0x14fc>
   12850:	movw	r0, #51316	; 0xc874
   12854:	movt	r0, #1
   12858:	bl	11240 <gettext@plt>
   1285c:	bl	11258 <strlen@plt>
   12860:	add	r0, r0, #2
   12864:	bl	1741c <__assert_fail@plt+0x60a4>
   12868:	movw	r1, #53712	; 0xd1d0
   1286c:	movt	r1, #2
   12870:	str	r0, [r1]
   12874:	movw	r0, #53712	; 0xd1d0
   12878:	movt	r0, #2
   1287c:	ldr	r0, [r0]
   12880:	movw	r1, #51316	; 0xc874
   12884:	movt	r1, #1
   12888:	str	r0, [fp, #-28]	; 0xffffffe4
   1288c:	mov	r0, r1
   12890:	bl	11240 <gettext@plt>
   12894:	ldrb	r1, [fp, #-13]
   12898:	cmp	r1, #78	; 0x4e
   1289c:	str	r0, [fp, #-32]	; 0xffffffe0
   128a0:	bne	128b0 <__assert_fail@plt+0x1538>
   128a4:	movw	r0, #83	; 0x53
   128a8:	str	r0, [fp, #-36]	; 0xffffffdc
   128ac:	b	128b8 <__assert_fail@plt+0x1540>
   128b0:	ldrb	r0, [fp, #-13]
   128b4:	str	r0, [fp, #-36]	; 0xffffffdc
   128b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   128bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128c0:	str	r0, [fp, #-40]	; 0xffffffd8
   128c4:	mov	r0, r1
   128c8:	movw	r1, #51322	; 0xc87a
   128cc:	movt	r1, #1
   128d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   128d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   128d8:	bl	1130c <sprintf@plt>
   128dc:	movw	r1, #53708	; 0xd1cc
   128e0:	movt	r1, #2
   128e4:	ldr	r1, [r1]
   128e8:	ldr	r2, [fp, #-12]
   128ec:	str	r0, [fp, #-44]	; 0xffffffd4
   128f0:	mov	r0, r2
   128f4:	str	r1, [sp, #48]	; 0x30
   128f8:	bl	13360 <__assert_fail@plt+0x1fe8>
   128fc:	ldrb	r1, [fp, #-13]
   12900:	str	r0, [sp, #44]	; 0x2c
   12904:	mov	r0, r1
   12908:	bl	13730 <__assert_fail@plt+0x23b8>
   1290c:	tst	r0, #1
   12910:	beq	12928 <__assert_fail@plt+0x15b0>
   12914:	movw	r0, #53712	; 0xd1d0
   12918:	movt	r0, #2
   1291c:	ldr	r0, [r0]
   12920:	str	r0, [sp, #40]	; 0x28
   12924:	b	12938 <__assert_fail@plt+0x15c0>
   12928:	movw	r0, #50947	; 0xc703
   1292c:	movt	r0, #1
   12930:	str	r0, [sp, #40]	; 0x28
   12934:	b	12938 <__assert_fail@plt+0x15c0>
   12938:	ldr	r0, [sp, #40]	; 0x28
   1293c:	mvn	r1, #0
   12940:	str	r0, [sp, #36]	; 0x24
   12944:	mov	r0, r1
   12948:	movw	r2, #50947	; 0xc703
   1294c:	movt	r2, #1
   12950:	str	r1, [sp, #32]
   12954:	mov	r1, r2
   12958:	movw	r3, #32
   1295c:	and	r3, r3, #255	; 0xff
   12960:	str	r2, [sp, #28]
   12964:	mov	r2, r3
   12968:	ldr	r3, [sp, #32]
   1296c:	ldr	ip, [sp, #48]	; 0x30
   12970:	str	ip, [sp]
   12974:	ldr	lr, [sp, #44]	; 0x2c
   12978:	str	lr, [sp, #4]
   1297c:	ldr	r4, [sp, #28]
   12980:	str	r4, [sp, #8]
   12984:	str	r4, [sp, #12]
   12988:	ldr	r5, [sp, #36]	; 0x24
   1298c:	str	r5, [sp, #16]
   12990:	str	r4, [sp, #20]
   12994:	bl	12e40 <__assert_fail@plt+0x1ac8>
   12998:	sub	sp, fp, #8
   1299c:	pop	{r4, r5, fp, pc}
   129a0:	push	{r4, sl, fp, lr}
   129a4:	add	fp, sp, #8
   129a8:	sub	sp, sp, #48	; 0x30
   129ac:	str	r0, [fp, #-12]
   129b0:	movw	r0, #51327	; 0xc87f
   129b4:	movt	r0, #1
   129b8:	bl	11240 <gettext@plt>
   129bc:	ldr	r1, [fp, #-12]
   129c0:	str	r0, [fp, #-16]
   129c4:	mov	r0, r1
   129c8:	bl	13360 <__assert_fail@plt+0x1fe8>
   129cc:	mvn	r1, #0
   129d0:	str	r0, [fp, #-20]	; 0xffffffec
   129d4:	mov	r0, r1
   129d8:	movw	r2, #50947	; 0xc703
   129dc:	movt	r2, #1
   129e0:	str	r1, [fp, #-24]	; 0xffffffe8
   129e4:	mov	r1, r2
   129e8:	movw	r3, #32
   129ec:	and	r3, r3, #255	; 0xff
   129f0:	str	r2, [sp, #28]
   129f4:	mov	r2, r3
   129f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129fc:	ldr	ip, [fp, #-16]
   12a00:	str	ip, [sp]
   12a04:	ldr	lr, [fp, #-20]	; 0xffffffec
   12a08:	str	lr, [sp, #4]
   12a0c:	ldr	r4, [sp, #28]
   12a10:	str	r4, [sp, #8]
   12a14:	str	r4, [sp, #12]
   12a18:	str	r4, [sp, #16]
   12a1c:	str	r4, [sp, #20]
   12a20:	bl	12e40 <__assert_fail@plt+0x1ac8>
   12a24:	sub	sp, fp, #8
   12a28:	pop	{r4, sl, fp, pc}
   12a2c:	push	{r4, sl, fp, lr}
   12a30:	add	fp, sp, #8
   12a34:	sub	sp, sp, #48	; 0x30
   12a38:	str	r0, [fp, #-12]
   12a3c:	movw	r0, #51339	; 0xc88b
   12a40:	movt	r0, #1
   12a44:	bl	11240 <gettext@plt>
   12a48:	ldr	r1, [fp, #-12]
   12a4c:	str	r0, [fp, #-16]
   12a50:	mov	r0, r1
   12a54:	bl	13360 <__assert_fail@plt+0x1fe8>
   12a58:	mvn	r1, #0
   12a5c:	str	r0, [fp, #-20]	; 0xffffffec
   12a60:	mov	r0, r1
   12a64:	movw	r2, #50947	; 0xc703
   12a68:	movt	r2, #1
   12a6c:	str	r1, [fp, #-24]	; 0xffffffe8
   12a70:	mov	r1, r2
   12a74:	movw	r3, #32
   12a78:	and	r3, r3, #255	; 0xff
   12a7c:	str	r2, [sp, #28]
   12a80:	mov	r2, r3
   12a84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a88:	ldr	ip, [fp, #-16]
   12a8c:	str	ip, [sp]
   12a90:	ldr	lr, [fp, #-20]	; 0xffffffec
   12a94:	str	lr, [sp, #4]
   12a98:	ldr	r4, [sp, #28]
   12a9c:	str	r4, [sp, #8]
   12aa0:	str	r4, [sp, #12]
   12aa4:	str	r4, [sp, #16]
   12aa8:	str	r4, [sp, #20]
   12aac:	bl	12e40 <__assert_fail@plt+0x1ac8>
   12ab0:	sub	sp, fp, #8
   12ab4:	pop	{r4, sl, fp, pc}
   12ab8:	push	{r4, r5, r6, sl, fp, lr}
   12abc:	add	fp, sp, #16
   12ac0:	sub	sp, sp, #72	; 0x48
   12ac4:	str	r0, [fp, #-20]	; 0xffffffec
   12ac8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12acc:	bl	13414 <__assert_fail@plt+0x209c>
   12ad0:	sub	r1, fp, #36	; 0x24
   12ad4:	str	r0, [fp, #-24]	; 0xffffffe8
   12ad8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12adc:	ldr	r2, [r0, #4]
   12ae0:	mov	r0, r1
   12ae4:	movw	r1, #51172	; 0xc7e4
   12ae8:	movt	r1, #1
   12aec:	bl	1130c <sprintf@plt>
   12af0:	ldr	r1, [fp, #-20]	; 0xffffffec
   12af4:	add	r1, r1, #8
   12af8:	ldr	r2, [fp, #-20]	; 0xffffffec
   12afc:	str	r0, [fp, #-40]	; 0xffffffd8
   12b00:	mov	r0, r2
   12b04:	str	r1, [sp, #44]	; 0x2c
   12b08:	bl	13360 <__assert_fail@plt+0x1fe8>
   12b0c:	sub	r1, fp, #36	; 0x24
   12b10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12b14:	mvn	r3, #0
   12b18:	str	r0, [sp, #40]	; 0x28
   12b1c:	mov	r0, r3
   12b20:	movw	r3, #50947	; 0xc703
   12b24:	movt	r3, #1
   12b28:	str	r1, [sp, #36]	; 0x24
   12b2c:	mov	r1, r3
   12b30:	movw	ip, #32
   12b34:	and	ip, ip, #255	; 0xff
   12b38:	str	r2, [sp, #32]
   12b3c:	mov	r2, ip
   12b40:	movw	ip, #32
   12b44:	str	r3, [sp, #28]
   12b48:	mov	r3, ip
   12b4c:	ldr	ip, [sp, #44]	; 0x2c
   12b50:	str	ip, [sp]
   12b54:	ldr	lr, [sp, #40]	; 0x28
   12b58:	str	lr, [sp, #4]
   12b5c:	ldr	r4, [sp, #28]
   12b60:	str	r4, [sp, #8]
   12b64:	ldr	r5, [sp, #36]	; 0x24
   12b68:	str	r5, [sp, #12]
   12b6c:	ldr	r6, [sp, #32]
   12b70:	str	r6, [sp, #16]
   12b74:	str	r4, [sp, #20]
   12b78:	bl	12e40 <__assert_fail@plt+0x1ac8>
   12b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b80:	bl	13d88 <__assert_fail@plt+0x2a10>
   12b84:	sub	sp, fp, #16
   12b88:	pop	{r4, r5, r6, sl, fp, pc}
   12b8c:	push	{r4, r5, r6, sl, fp, lr}
   12b90:	add	fp, sp, #16
   12b94:	sub	sp, sp, #72	; 0x48
   12b98:	str	r0, [fp, #-20]	; 0xffffffec
   12b9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ba0:	bl	13414 <__assert_fail@plt+0x209c>
   12ba4:	sub	r1, fp, #36	; 0x24
   12ba8:	str	r0, [fp, #-24]	; 0xffffffe8
   12bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bb0:	ldr	r2, [r0, #4]
   12bb4:	mov	r0, r1
   12bb8:	movw	r1, #51172	; 0xc7e4
   12bbc:	movt	r1, #1
   12bc0:	bl	1130c <sprintf@plt>
   12bc4:	movw	r1, #51356	; 0xc89c
   12bc8:	movt	r1, #1
   12bcc:	str	r0, [fp, #-40]	; 0xffffffd8
   12bd0:	mov	r0, r1
   12bd4:	bl	11240 <gettext@plt>
   12bd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12bdc:	add	r1, r1, #8
   12be0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12be4:	str	r0, [sp, #44]	; 0x2c
   12be8:	mov	r0, r2
   12bec:	str	r1, [sp, #40]	; 0x28
   12bf0:	bl	13360 <__assert_fail@plt+0x1fe8>
   12bf4:	sub	r1, fp, #36	; 0x24
   12bf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12bfc:	mvn	r3, #0
   12c00:	str	r0, [sp, #36]	; 0x24
   12c04:	mov	r0, r3
   12c08:	ldr	r3, [sp, #44]	; 0x2c
   12c0c:	str	r1, [sp, #32]
   12c10:	mov	r1, r3
   12c14:	movw	ip, #32
   12c18:	and	ip, ip, #255	; 0xff
   12c1c:	str	r2, [sp, #28]
   12c20:	mov	r2, ip
   12c24:	movw	r3, #32
   12c28:	ldr	ip, [sp, #40]	; 0x28
   12c2c:	str	ip, [sp]
   12c30:	ldr	lr, [sp, #36]	; 0x24
   12c34:	str	lr, [sp, #4]
   12c38:	movw	r4, #50947	; 0xc703
   12c3c:	movt	r4, #1
   12c40:	str	r4, [sp, #8]
   12c44:	ldr	r5, [sp, #32]
   12c48:	str	r5, [sp, #12]
   12c4c:	ldr	r6, [sp, #28]
   12c50:	str	r6, [sp, #16]
   12c54:	str	r4, [sp, #20]
   12c58:	bl	12e40 <__assert_fail@plt+0x1ac8>
   12c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c60:	bl	13d88 <__assert_fail@plt+0x2a10>
   12c64:	sub	sp, fp, #16
   12c68:	pop	{r4, r5, r6, sl, fp, pc}
   12c6c:	push	{r4, r5, r6, sl, fp, lr}
   12c70:	add	fp, sp, #16
   12c74:	sub	sp, sp, #96	; 0x60
   12c78:	str	r0, [fp, #-20]	; 0xffffffec
   12c7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c80:	bl	13414 <__assert_fail@plt+0x209c>
   12c84:	sub	r1, fp, #36	; 0x24
   12c88:	str	r0, [fp, #-24]	; 0xffffffe8
   12c8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c90:	ldr	r2, [r0, #4]
   12c94:	mov	r0, r1
   12c98:	movw	r1, #51172	; 0xc7e4
   12c9c:	movt	r1, #1
   12ca0:	bl	1130c <sprintf@plt>
   12ca4:	movw	r1, #53716	; 0xd1d4
   12ca8:	movt	r1, #2
   12cac:	ldr	r1, [r1]
   12cb0:	movw	r2, #0
   12cb4:	cmp	r1, r2
   12cb8:	bne	12d0c <__assert_fail@plt+0x1994>
   12cbc:	movw	r0, #51362	; 0xc8a2
   12cc0:	movt	r0, #1
   12cc4:	bl	11240 <gettext@plt>
   12cc8:	bl	11258 <strlen@plt>
   12ccc:	add	r0, r0, #6
   12cd0:	add	r0, r0, #1
   12cd4:	movw	r1, #51368	; 0xc8a8
   12cd8:	movt	r1, #1
   12cdc:	str	r0, [fp, #-40]	; 0xffffffd8
   12ce0:	mov	r0, r1
   12ce4:	bl	11240 <gettext@plt>
   12ce8:	bl	11258 <strlen@plt>
   12cec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12cf0:	add	r0, r1, r0
   12cf4:	add	r0, r0, #6
   12cf8:	add	r0, r0, #1
   12cfc:	bl	1741c <__assert_fail@plt+0x60a4>
   12d00:	movw	r1, #53716	; 0xd1d4
   12d04:	movt	r1, #2
   12d08:	str	r0, [r1]
   12d0c:	movw	r0, #53716	; 0xd1d4
   12d10:	movt	r0, #2
   12d14:	ldr	r0, [r0]
   12d18:	movw	r1, #51362	; 0xc8a2
   12d1c:	movt	r1, #1
   12d20:	str	r0, [fp, #-44]	; 0xffffffd4
   12d24:	mov	r0, r1
   12d28:	bl	11240 <gettext@plt>
   12d2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d30:	add	r1, r1, #332	; 0x14c
   12d34:	ldrsh	r3, [r1]
   12d38:	movw	r1, #51368	; 0xc8a8
   12d3c:	movt	r1, #1
   12d40:	str	r0, [fp, #-48]	; 0xffffffd0
   12d44:	mov	r0, r1
   12d48:	str	r3, [fp, #-52]	; 0xffffffcc
   12d4c:	bl	11240 <gettext@plt>
   12d50:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d54:	movw	r2, #334	; 0x14e
   12d58:	add	r1, r1, r2
   12d5c:	ldrsh	r1, [r1]
   12d60:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12d64:	str	r0, [sp, #56]	; 0x38
   12d68:	mov	r0, r2
   12d6c:	movw	r3, #51374	; 0xc8ae
   12d70:	movt	r3, #1
   12d74:	str	r1, [sp, #52]	; 0x34
   12d78:	mov	r1, r3
   12d7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12d80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12d84:	ldr	ip, [sp, #56]	; 0x38
   12d88:	str	ip, [sp]
   12d8c:	ldr	lr, [sp, #52]	; 0x34
   12d90:	str	lr, [sp, #4]
   12d94:	bl	1130c <sprintf@plt>
   12d98:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d9c:	add	r1, r1, #8
   12da0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12da4:	str	r0, [sp, #48]	; 0x30
   12da8:	mov	r0, r2
   12dac:	str	r1, [sp, #44]	; 0x2c
   12db0:	bl	13360 <__assert_fail@plt+0x1fe8>
   12db4:	sub	r1, fp, #36	; 0x24
   12db8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12dbc:	movw	r3, #53716	; 0xd1d4
   12dc0:	movt	r3, #2
   12dc4:	ldr	r3, [r3]
   12dc8:	mvn	ip, #0
   12dcc:	str	r0, [sp, #40]	; 0x28
   12dd0:	mov	r0, ip
   12dd4:	movw	ip, #50947	; 0xc703
   12dd8:	movt	ip, #1
   12ddc:	str	r1, [sp, #36]	; 0x24
   12de0:	mov	r1, ip
   12de4:	movw	lr, #32
   12de8:	and	lr, lr, #255	; 0xff
   12dec:	str	r2, [sp, #32]
   12df0:	mov	r2, lr
   12df4:	movw	lr, #32
   12df8:	str	r3, [sp, #28]
   12dfc:	mov	r3, lr
   12e00:	ldr	lr, [sp, #44]	; 0x2c
   12e04:	str	lr, [sp]
   12e08:	ldr	r4, [sp, #40]	; 0x28
   12e0c:	str	r4, [sp, #4]
   12e10:	str	ip, [sp, #8]
   12e14:	ldr	ip, [sp, #36]	; 0x24
   12e18:	str	ip, [sp, #12]
   12e1c:	ldr	r5, [sp, #32]
   12e20:	str	r5, [sp, #16]
   12e24:	ldr	r6, [sp, #28]
   12e28:	str	r6, [sp, #20]
   12e2c:	bl	12e40 <__assert_fail@plt+0x1ac8>
   12e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e34:	bl	13d88 <__assert_fail@plt+0x2a10>
   12e38:	sub	sp, fp, #16
   12e3c:	pop	{r4, r5, r6, sl, fp, pc}
   12e40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e44:	add	fp, sp, #28
   12e48:	sub	sp, sp, #132	; 0x84
   12e4c:	ldr	ip, [fp, #28]
   12e50:	ldr	lr, [fp, #24]
   12e54:	ldr	r4, [fp, #20]
   12e58:	ldr	r5, [fp, #16]
   12e5c:	ldr	r6, [fp, #12]
   12e60:	ldr	r7, [fp, #8]
   12e64:	str	r0, [fp, #-32]	; 0xffffffe0
   12e68:	str	r1, [fp, #-36]	; 0xffffffdc
   12e6c:	strb	r2, [fp, #-37]	; 0xffffffdb
   12e70:	str	r3, [fp, #-44]	; 0xffffffd4
   12e74:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   12e78:	movw	r1, #53528	; 0xd118
   12e7c:	movt	r1, #2
   12e80:	strb	r0, [r1, #1]
   12e84:	movw	r0, #53644	; 0xd18c
   12e88:	movt	r0, #2
   12e8c:	ldrb	r0, [r0]
   12e90:	tst	r0, #1
   12e94:	beq	12ed4 <__assert_fail@plt+0x1b5c>
   12e98:	movw	r0, #53649	; 0xd191
   12e9c:	movt	r0, #2
   12ea0:	ldrb	r0, [r0]
   12ea4:	tst	r0, #1
   12ea8:	bne	12ed4 <__assert_fail@plt+0x1b5c>
   12eac:	ldr	r0, [fp, #16]
   12eb0:	bl	11258 <strlen@plt>
   12eb4:	cmp	r0, #7
   12eb8:	bcs	12ed4 <__assert_fail@plt+0x1b5c>
   12ebc:	sub	r0, fp, #56	; 0x38
   12ec0:	ldr	r2, [fp, #16]
   12ec4:	movw	r1, #51115	; 0xc7ab
   12ec8:	movt	r1, #1
   12ecc:	bl	1130c <sprintf@plt>
   12ed0:	b	12edc <__assert_fail@plt+0x1b64>
   12ed4:	movw	r0, #0
   12ed8:	strb	r0, [fp, #-56]	; 0xffffffc8
   12edc:	movw	r0, #53649	; 0xd191
   12ee0:	movt	r0, #2
   12ee4:	ldrb	r0, [r0]
   12ee8:	tst	r0, #1
   12eec:	bne	12f18 <__assert_fail@plt+0x1ba0>
   12ef0:	ldr	r0, [fp, #20]
   12ef4:	bl	11258 <strlen@plt>
   12ef8:	cmp	r0, #12
   12efc:	bcs	12f18 <__assert_fail@plt+0x1ba0>
   12f00:	sub	r0, fp, #69	; 0x45
   12f04:	ldr	r2, [fp, #20]
   12f08:	movw	r1, #51121	; 0xc7b1
   12f0c:	movt	r1, #1
   12f10:	bl	1130c <sprintf@plt>
   12f14:	b	12f20 <__assert_fail@plt+0x1ba8>
   12f18:	movw	r0, #0
   12f1c:	strb	r0, [fp, #-69]	; 0xffffffbb
   12f20:	movw	r0, #53645	; 0xd18d
   12f24:	movt	r0, #2
   12f28:	ldrb	r0, [r0]
   12f2c:	tst	r0, #1
   12f30:	beq	12f74 <__assert_fail@plt+0x1bfc>
   12f34:	ldr	r0, [fp, #28]
   12f38:	bl	11258 <strlen@plt>
   12f3c:	movw	r1, #12
   12f40:	cmp	r1, r0
   12f44:	bls	12f54 <__assert_fail@plt+0x1bdc>
   12f48:	movw	r0, #12
   12f4c:	str	r0, [sp, #72]	; 0x48
   12f50:	b	12f60 <__assert_fail@plt+0x1be8>
   12f54:	ldr	r0, [fp, #28]
   12f58:	bl	11258 <strlen@plt>
   12f5c:	str	r0, [sp, #72]	; 0x48
   12f60:	ldr	r0, [sp, #72]	; 0x48
   12f64:	add	r0, r0, #1
   12f68:	add	r0, r0, #1
   12f6c:	str	r0, [sp, #68]	; 0x44
   12f70:	b	12f80 <__assert_fail@plt+0x1c08>
   12f74:	movw	r0, #1
   12f78:	str	r0, [sp, #68]	; 0x44
   12f7c:	b	12f80 <__assert_fail@plt+0x1c08>
   12f80:	ldr	r0, [sp, #68]	; 0x44
   12f84:	bl	1741c <__assert_fail@plt+0x60a4>
   12f88:	str	r0, [fp, #-76]	; 0xffffffb4
   12f8c:	movw	r0, #53645	; 0xd18d
   12f90:	movt	r0, #2
   12f94:	ldrb	r0, [r0]
   12f98:	tst	r0, #1
   12f9c:	beq	12fb8 <__assert_fail@plt+0x1c40>
   12fa0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12fa4:	ldr	r2, [fp, #28]
   12fa8:	movw	r1, #51127	; 0xc7b7
   12fac:	movt	r1, #1
   12fb0:	bl	1130c <sprintf@plt>
   12fb4:	b	12fc4 <__assert_fail@plt+0x1c4c>
   12fb8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12fbc:	movw	r1, #0
   12fc0:	strb	r1, [r0]
   12fc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12fc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12fcc:	movw	r1, #0
   12fd0:	cmp	r0, r1
   12fd4:	str	r2, [sp, #64]	; 0x40
   12fd8:	beq	12fe8 <__assert_fail@plt+0x1c70>
   12fdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12fe0:	str	r0, [sp, #60]	; 0x3c
   12fe4:	b	12ff8 <__assert_fail@plt+0x1c80>
   12fe8:	movw	r0, #51167	; 0xc7df
   12fec:	movt	r0, #1
   12ff0:	str	r0, [sp, #60]	; 0x3c
   12ff4:	b	12ff8 <__assert_fail@plt+0x1c80>
   12ff8:	ldr	r0, [sp, #60]	; 0x3c
   12ffc:	sub	r1, fp, #69	; 0x45
   13000:	sub	r2, fp, #56	; 0x38
   13004:	movw	r3, #53643	; 0xd18b
   13008:	movt	r3, #2
   1300c:	ldrb	r3, [r3]
   13010:	tst	r3, #1
   13014:	movw	r3, #50947	; 0xc703
   13018:	movt	r3, #1
   1301c:	movw	ip, #53528	; 0xd118
   13020:	movt	ip, #2
   13024:	movne	r3, ip
   13028:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1302c:	ldr	lr, [fp, #8]
   13030:	movw	r4, #53656	; 0xd198
   13034:	movt	r4, #2
   13038:	ldr	r4, [r4]
   1303c:	ldr	r5, [fp, #12]
   13040:	ldr	r6, [fp, #24]
   13044:	ldr	r7, [fp, #-76]	; 0xffffffb4
   13048:	sub	r8, fp, #48	; 0x30
   1304c:	str	r0, [sp, #56]	; 0x38
   13050:	mov	r0, r8
   13054:	movw	r8, #51134	; 0xc7be
   13058:	movt	r8, #1
   1305c:	str	r1, [sp, #52]	; 0x34
   13060:	mov	r1, r8
   13064:	ldr	r8, [sp, #64]	; 0x40
   13068:	str	r2, [sp, #48]	; 0x30
   1306c:	mov	r2, r8
   13070:	ldr	r9, [sp, #56]	; 0x38
   13074:	str	r3, [sp, #44]	; 0x2c
   13078:	mov	r3, r9
   1307c:	ldr	sl, [sp, #44]	; 0x2c
   13080:	str	sl, [sp]
   13084:	str	ip, [sp, #4]
   13088:	str	lr, [sp, #8]
   1308c:	str	r4, [sp, #12]
   13090:	str	r5, [sp, #16]
   13094:	ldr	ip, [sp, #48]	; 0x30
   13098:	str	ip, [sp, #20]
   1309c:	ldr	lr, [sp, #52]	; 0x34
   130a0:	str	lr, [sp, #24]
   130a4:	str	r6, [sp, #28]
   130a8:	str	r7, [sp, #32]
   130ac:	bl	112b8 <asprintf@plt>
   130b0:	str	r0, [sp, #80]	; 0x50
   130b4:	ldr	r0, [sp, #80]	; 0x50
   130b8:	cmn	r0, #1
   130bc:	bne	130c4 <__assert_fail@plt+0x1d4c>
   130c0:	bl	1a154 <__assert_fail@plt+0x8ddc>
   130c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   130c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   130cc:	str	r0, [sp, #40]	; 0x28
   130d0:	mov	r0, r1
   130d4:	bl	11258 <strlen@plt>
   130d8:	ldr	r1, [sp, #40]	; 0x28
   130dc:	add	r0, r1, r0
   130e0:	str	r0, [sp, #76]	; 0x4c
   130e4:	ldr	r0, [sp, #76]	; 0x4c
   130e8:	mvn	r1, #0
   130ec:	add	r2, r0, r1
   130f0:	str	r2, [sp, #76]	; 0x4c
   130f4:	add	r0, r0, r1
   130f8:	ldrb	r0, [r0]
   130fc:	cmp	r0, #32
   13100:	bne	13108 <__assert_fail@plt+0x1d90>
   13104:	b	130e4 <__assert_fail@plt+0x1d6c>
   13108:	ldr	r0, [sp, #76]	; 0x4c
   1310c:	movw	r1, #0
   13110:	strb	r1, [r0, #1]
   13114:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13118:	bl	111bc <puts@plt>
   1311c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13120:	str	r0, [sp, #36]	; 0x24
   13124:	mov	r0, r1
   13128:	bl	13d88 <__assert_fail@plt+0x2a10>
   1312c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13130:	bl	13d88 <__assert_fail@plt+0x2a10>
   13134:	sub	sp, fp, #28
   13138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1313c:	sub	sp, sp, #20
   13140:	str	r0, [sp, #16]
   13144:	str	r1, [sp, #12]
   13148:	str	r2, [sp, #8]
   1314c:	ldr	r0, [sp, #12]
   13150:	ldr	r1, [sp, #8]
   13154:	add	r0, r0, r1
   13158:	str	r0, [sp, #4]
   1315c:	ldr	r0, [sp, #12]
   13160:	ldr	r1, [sp, #4]
   13164:	cmp	r0, r1
   13168:	movw	r0, #0
   1316c:	str	r0, [sp]
   13170:	bcs	1318c <__assert_fail@plt+0x1e14>
   13174:	ldr	r0, [sp, #12]
   13178:	ldrb	r0, [r0]
   1317c:	cmp	r0, #0
   13180:	movw	r0, #0
   13184:	movne	r0, #1
   13188:	str	r0, [sp]
   1318c:	ldr	r0, [sp]
   13190:	tst	r0, #1
   13194:	beq	131bc <__assert_fail@plt+0x1e44>
   13198:	ldr	r0, [sp, #12]
   1319c:	add	r1, r0, #1
   131a0:	str	r1, [sp, #12]
   131a4:	ldrb	r0, [r0]
   131a8:	ldr	r1, [sp, #16]
   131ac:	add	r2, r1, #1
   131b0:	str	r2, [sp, #16]
   131b4:	strb	r0, [r1]
   131b8:	b	1315c <__assert_fail@plt+0x1de4>
   131bc:	ldr	r0, [sp, #16]
   131c0:	movw	r1, #0
   131c4:	strb	r1, [r0]
   131c8:	ldr	r0, [sp, #16]
   131cc:	add	sp, sp, #20
   131d0:	bx	lr
   131d4:	sub	sp, sp, #4
   131d8:	str	r0, [sp]
   131dc:	ldr	r0, [sp]
   131e0:	ldr	r0, [r0, #16]
   131e4:	and	r0, r0, #16
   131e8:	cmp	r0, #0
   131ec:	movw	r0, #0
   131f0:	movne	r0, #1
   131f4:	and	r0, r0, #1
   131f8:	add	sp, sp, #4
   131fc:	bx	lr
   13200:	push	{fp, lr}
   13204:	mov	fp, sp
   13208:	sub	sp, sp, #24
   1320c:	str	r0, [fp, #-8]
   13210:	str	r1, [sp, #12]
   13214:	movw	r0, #53532	; 0xd11c
   13218:	movt	r0, #2
   1321c:	ldr	r0, [r0]
   13220:	cmp	r0, #-2147483648	; 0x80000000
   13224:	bne	13234 <__assert_fail@plt+0x1ebc>
   13228:	movw	r0, #53532	; 0xd11c
   1322c:	movt	r0, #2
   13230:	bl	11114 <time@plt>
   13234:	ldr	r0, [sp, #12]
   13238:	ldr	r1, [fp, #-8]
   1323c:	cmp	r0, r1
   13240:	bge	13340 <__assert_fail@plt+0x1fc8>
   13244:	ldr	r0, [pc, #272]	; 1335c <__assert_fail@plt+0x1fe4>
   13248:	movw	r1, #53532	; 0xd11c
   1324c:	movt	r1, #2
   13250:	ldr	r1, [r1]
   13254:	sub	r0, r1, r0
   13258:	ldr	r1, [fp, #-8]
   1325c:	cmp	r0, r1
   13260:	bge	13340 <__assert_fail@plt+0x1fc8>
   13264:	ldr	r0, [fp, #-8]
   13268:	movw	r1, #53532	; 0xd11c
   1326c:	movt	r1, #2
   13270:	ldr	r1, [r1]
   13274:	cmp	r0, r1
   13278:	bgt	13340 <__assert_fail@plt+0x1fc8>
   1327c:	movw	r0, #53532	; 0xd11c
   13280:	movt	r0, #2
   13284:	ldr	r0, [r0]
   13288:	ldr	r1, [fp, #-8]
   1328c:	sub	r0, r0, r1
   13290:	str	r0, [sp, #8]
   13294:	ldr	r0, [sp, #8]
   13298:	cmp	r0, #60	; 0x3c
   1329c:	bge	132b0 <__assert_fail@plt+0x1f38>
   132a0:	movw	r0, #51198	; 0xc7fe
   132a4:	movt	r0, #1
   132a8:	str	r0, [fp, #-4]
   132ac:	b	13350 <__assert_fail@plt+0x1fd8>
   132b0:	ldr	r0, [sp, #8]
   132b4:	movw	r1, #3600	; 0xe10
   132b8:	sdiv	r0, r0, r1
   132bc:	cmp	r0, #24
   132c0:	bge	132c8 <__assert_fail@plt+0x1f50>
   132c4:	b	132e8 <__assert_fail@plt+0x1f70>
   132c8:	movw	r0, #51204	; 0xc804
   132cc:	movt	r0, #1
   132d0:	movw	r1, #51234	; 0xc822
   132d4:	movt	r1, #1
   132d8:	movw	r2, #205	; 0xcd
   132dc:	movw	r3, #51244	; 0xc82c
   132e0:	movt	r3, #1
   132e4:	bl	11378 <__assert_fail@plt>
   132e8:	ldr	r0, [sp, #8]
   132ec:	movw	r1, #46021	; 0xb3c5
   132f0:	movt	r1, #37282	; 0x91a2
   132f4:	smmla	r1, r0, r1, r0
   132f8:	asr	r2, r1, #11
   132fc:	add	r1, r2, r1, lsr #31
   13300:	mov	r2, #3600	; 0xe10
   13304:	mls	r0, r1, r2, r0
   13308:	movw	r2, #60	; 0x3c
   1330c:	sdiv	r3, r0, r2
   13310:	movw	r0, #53668	; 0xd1a4
   13314:	movt	r0, #2
   13318:	movw	r2, #51284	; 0xc854
   1331c:	movt	r2, #1
   13320:	str	r1, [sp, #4]
   13324:	mov	r1, r2
   13328:	ldr	r2, [sp, #4]
   1332c:	bl	1130c <sprintf@plt>
   13330:	movw	r1, #53668	; 0xd1a4
   13334:	movt	r1, #2
   13338:	str	r1, [fp, #-4]
   1333c:	b	13350 <__assert_fail@plt+0x1fd8>
   13340:	movw	r0, #51294	; 0xc85e
   13344:	movt	r0, #1
   13348:	bl	11240 <gettext@plt>
   1334c:	str	r0, [fp, #-4]
   13350:	ldr	r0, [fp, #-4]
   13354:	mov	sp, fp
   13358:	pop	{fp, pc}
   1335c:	andeq	r5, r1, r0, lsl #3
   13360:	push	{fp, lr}
   13364:	mov	fp, sp
   13368:	sub	sp, sp, #16
   1336c:	str	r0, [sp, #8]
   13370:	ldr	r0, [sp, #8]
   13374:	ldr	r0, [r0, #340]	; 0x154
   13378:	str	r0, [sp, #4]
   1337c:	add	r0, sp, #4
   13380:	bl	111f8 <localtime@plt>
   13384:	str	r0, [sp]
   13388:	ldr	r0, [sp]
   1338c:	movw	r1, #0
   13390:	cmp	r0, r1
   13394:	beq	133c8 <__assert_fail@plt+0x2050>
   13398:	movw	r0, #53652	; 0xd194
   1339c:	movt	r0, #2
   133a0:	ldr	r2, [r0]
   133a4:	ldr	r3, [sp]
   133a8:	movw	r0, #53674	; 0xd1aa
   133ac:	movt	r0, #2
   133b0:	movw	r1, #33	; 0x21
   133b4:	bl	111e0 <strftime@plt>
   133b8:	movw	r1, #53674	; 0xd1aa
   133bc:	movt	r1, #2
   133c0:	str	r1, [fp, #-4]
   133c4:	b	133dc <__assert_fail@plt+0x2064>
   133c8:	ldr	r0, [sp, #4]
   133cc:	movw	r1, #53674	; 0xd1aa
   133d0:	movt	r1, #2
   133d4:	bl	133e8 <__assert_fail@plt+0x2070>
   133d8:	str	r0, [fp, #-4]
   133dc:	ldr	r0, [fp, #-4]
   133e0:	mov	sp, fp
   133e4:	pop	{fp, pc}
   133e8:	push	{fp, lr}
   133ec:	mov	fp, sp
   133f0:	sub	sp, sp, #8
   133f4:	str	r0, [sp, #4]
   133f8:	str	r1, [sp]
   133fc:	ldr	r0, [sp, #4]
   13400:	asr	r1, r0, #31
   13404:	ldr	r2, [sp]
   13408:	bl	13e64 <__assert_fail@plt+0x2aec>
   1340c:	mov	sp, fp
   13410:	pop	{fp, pc}
   13414:	push	{fp, lr}
   13418:	mov	fp, sp
   1341c:	sub	sp, sp, #32
   13420:	str	r0, [fp, #-4]
   13424:	movw	r0, #4
   13428:	str	r0, [fp, #-8]
   1342c:	movw	r0, #51352	; 0xc898
   13430:	movt	r0, #1
   13434:	bl	11240 <gettext@plt>
   13438:	bl	11258 <strlen@plt>
   1343c:	ldr	r1, [fp, #-8]
   13440:	add	r0, r0, r1
   13444:	add	r0, r0, #1
   13448:	bl	1741c <__assert_fail@plt+0x60a4>
   1344c:	str	r0, [fp, #-12]
   13450:	ldr	r0, [fp, #-12]
   13454:	movw	r1, #51352	; 0xc898
   13458:	movt	r1, #1
   1345c:	str	r0, [sp, #12]
   13460:	mov	r0, r1
   13464:	bl	11240 <gettext@plt>
   13468:	ldr	r1, [sp, #12]
   1346c:	str	r0, [sp, #8]
   13470:	mov	r0, r1
   13474:	ldr	r1, [sp, #8]
   13478:	bl	1112c <stpcpy@plt>
   1347c:	str	r0, [sp, #16]
   13480:	ldr	r0, [sp, #16]
   13484:	ldr	r1, [fp, #-4]
   13488:	add	r1, r1, #40	; 0x28
   1348c:	ldr	r2, [fp, #-8]
   13490:	bl	1313c <__assert_fail@plt+0x1dc4>
   13494:	ldr	r1, [fp, #-12]
   13498:	str	r0, [sp, #4]
   1349c:	mov	r0, r1
   134a0:	mov	sp, fp
   134a4:	pop	{fp, pc}
   134a8:	sub	sp, sp, #12
   134ac:	str	r0, [sp, #4]
   134b0:	ldr	r0, [sp, #4]
   134b4:	sub	r1, r0, #48	; 0x30
   134b8:	cmp	r1, #10
   134bc:	str	r0, [sp]
   134c0:	bcc	134f0 <__assert_fail@plt+0x2178>
   134c4:	b	134c8 <__assert_fail@plt+0x2150>
   134c8:	ldr	r0, [sp]
   134cc:	sub	r1, r0, #65	; 0x41
   134d0:	cmp	r1, #26
   134d4:	bcc	134f0 <__assert_fail@plt+0x2178>
   134d8:	b	134dc <__assert_fail@plt+0x2164>
   134dc:	ldr	r0, [sp]
   134e0:	sub	r1, r0, #97	; 0x61
   134e4:	cmp	r1, #25
   134e8:	bhi	13500 <__assert_fail@plt+0x2188>
   134ec:	b	134f0 <__assert_fail@plt+0x2178>
   134f0:	movw	r0, #1
   134f4:	and	r0, r0, #1
   134f8:	strb	r0, [sp, #11]
   134fc:	b	1350c <__assert_fail@plt+0x2194>
   13500:	movw	r0, #0
   13504:	and	r0, r0, #1
   13508:	strb	r0, [sp, #11]
   1350c:	ldrb	r0, [sp, #11]
   13510:	and	r0, r0, #1
   13514:	add	sp, sp, #12
   13518:	bx	lr
   1351c:	sub	sp, sp, #12
   13520:	str	r0, [sp, #4]
   13524:	ldr	r0, [sp, #4]
   13528:	sub	r1, r0, #65	; 0x41
   1352c:	cmp	r1, #26
   13530:	str	r0, [sp]
   13534:	bcc	13550 <__assert_fail@plt+0x21d8>
   13538:	b	1353c <__assert_fail@plt+0x21c4>
   1353c:	ldr	r0, [sp]
   13540:	sub	r1, r0, #97	; 0x61
   13544:	cmp	r1, #25
   13548:	bhi	13560 <__assert_fail@plt+0x21e8>
   1354c:	b	13550 <__assert_fail@plt+0x21d8>
   13550:	movw	r0, #1
   13554:	and	r0, r0, #1
   13558:	strb	r0, [sp, #11]
   1355c:	b	1356c <__assert_fail@plt+0x21f4>
   13560:	movw	r0, #0
   13564:	and	r0, r0, #1
   13568:	strb	r0, [sp, #11]
   1356c:	ldrb	r0, [sp, #11]
   13570:	and	r0, r0, #1
   13574:	add	sp, sp, #12
   13578:	bx	lr
   1357c:	sub	sp, sp, #8
   13580:	str	r0, [sp]
   13584:	ldr	r0, [sp]
   13588:	cmp	r0, #127	; 0x7f
   1358c:	bhi	135a4 <__assert_fail@plt+0x222c>
   13590:	b	13594 <__assert_fail@plt+0x221c>
   13594:	movw	r0, #1
   13598:	and	r0, r0, #1
   1359c:	strb	r0, [sp, #7]
   135a0:	b	135b0 <__assert_fail@plt+0x2238>
   135a4:	movw	r0, #0
   135a8:	and	r0, r0, #1
   135ac:	strb	r0, [sp, #7]
   135b0:	ldrb	r0, [sp, #7]
   135b4:	and	r0, r0, #1
   135b8:	add	sp, sp, #8
   135bc:	bx	lr
   135c0:	sub	sp, sp, #8
   135c4:	str	r0, [sp, #4]
   135c8:	ldr	r0, [sp, #4]
   135cc:	cmp	r0, #32
   135d0:	movw	r0, #1
   135d4:	str	r0, [sp]
   135d8:	beq	135f0 <__assert_fail@plt+0x2278>
   135dc:	ldr	r0, [sp, #4]
   135e0:	cmp	r0, #9
   135e4:	movw	r0, #0
   135e8:	moveq	r0, #1
   135ec:	str	r0, [sp]
   135f0:	ldr	r0, [sp]
   135f4:	and	r0, r0, #1
   135f8:	add	sp, sp, #8
   135fc:	bx	lr
   13600:	sub	sp, sp, #12
   13604:	str	r0, [sp, #4]
   13608:	ldr	r0, [sp, #4]
   1360c:	cmp	r0, #32
   13610:	str	r0, [sp]
   13614:	bcc	1362c <__assert_fail@plt+0x22b4>
   13618:	b	1361c <__assert_fail@plt+0x22a4>
   1361c:	ldr	r0, [sp]
   13620:	cmp	r0, #127	; 0x7f
   13624:	bne	1363c <__assert_fail@plt+0x22c4>
   13628:	b	1362c <__assert_fail@plt+0x22b4>
   1362c:	movw	r0, #1
   13630:	and	r0, r0, #1
   13634:	strb	r0, [sp, #11]
   13638:	b	13648 <__assert_fail@plt+0x22d0>
   1363c:	movw	r0, #0
   13640:	and	r0, r0, #1
   13644:	strb	r0, [sp, #11]
   13648:	ldrb	r0, [sp, #11]
   1364c:	and	r0, r0, #1
   13650:	add	sp, sp, #12
   13654:	bx	lr
   13658:	sub	sp, sp, #8
   1365c:	str	r0, [sp]
   13660:	ldr	r0, [sp]
   13664:	sub	r0, r0, #48	; 0x30
   13668:	cmp	r0, #9
   1366c:	bhi	13684 <__assert_fail@plt+0x230c>
   13670:	b	13674 <__assert_fail@plt+0x22fc>
   13674:	movw	r0, #1
   13678:	and	r0, r0, #1
   1367c:	strb	r0, [sp, #7]
   13680:	b	13690 <__assert_fail@plt+0x2318>
   13684:	movw	r0, #0
   13688:	and	r0, r0, #1
   1368c:	strb	r0, [sp, #7]
   13690:	ldrb	r0, [sp, #7]
   13694:	and	r0, r0, #1
   13698:	add	sp, sp, #8
   1369c:	bx	lr
   136a0:	sub	sp, sp, #8
   136a4:	str	r0, [sp]
   136a8:	ldr	r0, [sp]
   136ac:	sub	r0, r0, #33	; 0x21
   136b0:	cmp	r0, #93	; 0x5d
   136b4:	bhi	136cc <__assert_fail@plt+0x2354>
   136b8:	b	136bc <__assert_fail@plt+0x2344>
   136bc:	movw	r0, #1
   136c0:	and	r0, r0, #1
   136c4:	strb	r0, [sp, #7]
   136c8:	b	136d8 <__assert_fail@plt+0x2360>
   136cc:	movw	r0, #0
   136d0:	and	r0, r0, #1
   136d4:	strb	r0, [sp, #7]
   136d8:	ldrb	r0, [sp, #7]
   136dc:	and	r0, r0, #1
   136e0:	add	sp, sp, #8
   136e4:	bx	lr
   136e8:	sub	sp, sp, #8
   136ec:	str	r0, [sp]
   136f0:	ldr	r0, [sp]
   136f4:	sub	r0, r0, #97	; 0x61
   136f8:	cmp	r0, #25
   136fc:	bhi	13714 <__assert_fail@plt+0x239c>
   13700:	b	13704 <__assert_fail@plt+0x238c>
   13704:	movw	r0, #1
   13708:	and	r0, r0, #1
   1370c:	strb	r0, [sp, #7]
   13710:	b	13720 <__assert_fail@plt+0x23a8>
   13714:	movw	r0, #0
   13718:	and	r0, r0, #1
   1371c:	strb	r0, [sp, #7]
   13720:	ldrb	r0, [sp, #7]
   13724:	and	r0, r0, #1
   13728:	add	sp, sp, #8
   1372c:	bx	lr
   13730:	sub	sp, sp, #8
   13734:	str	r0, [sp]
   13738:	ldr	r0, [sp]
   1373c:	sub	r0, r0, #32
   13740:	cmp	r0, #94	; 0x5e
   13744:	bhi	1375c <__assert_fail@plt+0x23e4>
   13748:	b	1374c <__assert_fail@plt+0x23d4>
   1374c:	movw	r0, #1
   13750:	and	r0, r0, #1
   13754:	strb	r0, [sp, #7]
   13758:	b	13768 <__assert_fail@plt+0x23f0>
   1375c:	movw	r0, #0
   13760:	and	r0, r0, #1
   13764:	strb	r0, [sp, #7]
   13768:	ldrb	r0, [sp, #7]
   1376c:	and	r0, r0, #1
   13770:	add	sp, sp, #8
   13774:	bx	lr
   13778:	sub	sp, sp, #12
   1377c:	str	r0, [sp, #4]
   13780:	ldr	r0, [sp, #4]
   13784:	sub	r0, r0, #33	; 0x21
   13788:	cmp	r0, #93	; 0x5d
   1378c:	str	r0, [sp]
   13790:	bhi	1392c <__assert_fail@plt+0x25b4>
   13794:	add	r0, pc, #8
   13798:	ldr	r1, [sp]
   1379c:	ldr	r0, [r0, r1, lsl #2]
   137a0:	mov	pc, r0
   137a4:	andeq	r3, r1, ip, lsl r9
   137a8:	andeq	r3, r1, ip, lsl r9
   137ac:	andeq	r3, r1, ip, lsl r9
   137b0:	andeq	r3, r1, ip, lsl r9
   137b4:	andeq	r3, r1, ip, lsl r9
   137b8:	andeq	r3, r1, ip, lsl r9
   137bc:	andeq	r3, r1, ip, lsl r9
   137c0:	andeq	r3, r1, ip, lsl r9
   137c4:	andeq	r3, r1, ip, lsl r9
   137c8:	andeq	r3, r1, ip, lsl r9
   137cc:	andeq	r3, r1, ip, lsl r9
   137d0:	andeq	r3, r1, ip, lsl r9
   137d4:	andeq	r3, r1, ip, lsl r9
   137d8:	andeq	r3, r1, ip, lsl r9
   137dc:	andeq	r3, r1, ip, lsl r9
   137e0:	andeq	r3, r1, ip, lsr #18
   137e4:	andeq	r3, r1, ip, lsr #18
   137e8:	andeq	r3, r1, ip, lsr #18
   137ec:	andeq	r3, r1, ip, lsr #18
   137f0:	andeq	r3, r1, ip, lsr #18
   137f4:	andeq	r3, r1, ip, lsr #18
   137f8:	andeq	r3, r1, ip, lsr #18
   137fc:	andeq	r3, r1, ip, lsr #18
   13800:	andeq	r3, r1, ip, lsr #18
   13804:	andeq	r3, r1, ip, lsr #18
   13808:	andeq	r3, r1, ip, lsl r9
   1380c:	andeq	r3, r1, ip, lsl r9
   13810:	andeq	r3, r1, ip, lsl r9
   13814:	andeq	r3, r1, ip, lsl r9
   13818:	andeq	r3, r1, ip, lsl r9
   1381c:	andeq	r3, r1, ip, lsl r9
   13820:	andeq	r3, r1, ip, lsl r9
   13824:	andeq	r3, r1, ip, lsr #18
   13828:	andeq	r3, r1, ip, lsr #18
   1382c:	andeq	r3, r1, ip, lsr #18
   13830:	andeq	r3, r1, ip, lsr #18
   13834:	andeq	r3, r1, ip, lsr #18
   13838:	andeq	r3, r1, ip, lsr #18
   1383c:	andeq	r3, r1, ip, lsr #18
   13840:	andeq	r3, r1, ip, lsr #18
   13844:	andeq	r3, r1, ip, lsr #18
   13848:	andeq	r3, r1, ip, lsr #18
   1384c:	andeq	r3, r1, ip, lsr #18
   13850:	andeq	r3, r1, ip, lsr #18
   13854:	andeq	r3, r1, ip, lsr #18
   13858:	andeq	r3, r1, ip, lsr #18
   1385c:	andeq	r3, r1, ip, lsr #18
   13860:	andeq	r3, r1, ip, lsr #18
   13864:	andeq	r3, r1, ip, lsr #18
   13868:	andeq	r3, r1, ip, lsr #18
   1386c:	andeq	r3, r1, ip, lsr #18
   13870:	andeq	r3, r1, ip, lsr #18
   13874:	andeq	r3, r1, ip, lsr #18
   13878:	andeq	r3, r1, ip, lsr #18
   1387c:	andeq	r3, r1, ip, lsr #18
   13880:	andeq	r3, r1, ip, lsr #18
   13884:	andeq	r3, r1, ip, lsr #18
   13888:	andeq	r3, r1, ip, lsr #18
   1388c:	andeq	r3, r1, ip, lsl r9
   13890:	andeq	r3, r1, ip, lsl r9
   13894:	andeq	r3, r1, ip, lsl r9
   13898:	andeq	r3, r1, ip, lsl r9
   1389c:	andeq	r3, r1, ip, lsl r9
   138a0:	andeq	r3, r1, ip, lsl r9
   138a4:	andeq	r3, r1, ip, lsr #18
   138a8:	andeq	r3, r1, ip, lsr #18
   138ac:	andeq	r3, r1, ip, lsr #18
   138b0:	andeq	r3, r1, ip, lsr #18
   138b4:	andeq	r3, r1, ip, lsr #18
   138b8:	andeq	r3, r1, ip, lsr #18
   138bc:	andeq	r3, r1, ip, lsr #18
   138c0:	andeq	r3, r1, ip, lsr #18
   138c4:	andeq	r3, r1, ip, lsr #18
   138c8:	andeq	r3, r1, ip, lsr #18
   138cc:	andeq	r3, r1, ip, lsr #18
   138d0:	andeq	r3, r1, ip, lsr #18
   138d4:	andeq	r3, r1, ip, lsr #18
   138d8:	andeq	r3, r1, ip, lsr #18
   138dc:	andeq	r3, r1, ip, lsr #18
   138e0:	andeq	r3, r1, ip, lsr #18
   138e4:	andeq	r3, r1, ip, lsr #18
   138e8:	andeq	r3, r1, ip, lsr #18
   138ec:	andeq	r3, r1, ip, lsr #18
   138f0:	andeq	r3, r1, ip, lsr #18
   138f4:	andeq	r3, r1, ip, lsr #18
   138f8:	andeq	r3, r1, ip, lsr #18
   138fc:	andeq	r3, r1, ip, lsr #18
   13900:	andeq	r3, r1, ip, lsr #18
   13904:	andeq	r3, r1, ip, lsr #18
   13908:	andeq	r3, r1, ip, lsr #18
   1390c:	andeq	r3, r1, ip, lsl r9
   13910:	andeq	r3, r1, ip, lsl r9
   13914:	andeq	r3, r1, ip, lsl r9
   13918:	andeq	r3, r1, ip, lsl r9
   1391c:	movw	r0, #1
   13920:	and	r0, r0, #1
   13924:	strb	r0, [sp, #11]
   13928:	b	13938 <__assert_fail@plt+0x25c0>
   1392c:	movw	r0, #0
   13930:	and	r0, r0, #1
   13934:	strb	r0, [sp, #11]
   13938:	ldrb	r0, [sp, #11]
   1393c:	and	r0, r0, #1
   13940:	add	sp, sp, #12
   13944:	bx	lr
   13948:	sub	sp, sp, #12
   1394c:	str	r0, [sp, #4]
   13950:	ldr	r0, [sp, #4]
   13954:	sub	r1, r0, #9
   13958:	cmp	r1, #5
   1395c:	str	r0, [sp]
   13960:	bcc	13978 <__assert_fail@plt+0x2600>
   13964:	b	13968 <__assert_fail@plt+0x25f0>
   13968:	ldr	r0, [sp]
   1396c:	cmp	r0, #32
   13970:	bne	13988 <__assert_fail@plt+0x2610>
   13974:	b	13978 <__assert_fail@plt+0x2600>
   13978:	movw	r0, #1
   1397c:	and	r0, r0, #1
   13980:	strb	r0, [sp, #11]
   13984:	b	13994 <__assert_fail@plt+0x261c>
   13988:	movw	r0, #0
   1398c:	and	r0, r0, #1
   13990:	strb	r0, [sp, #11]
   13994:	ldrb	r0, [sp, #11]
   13998:	and	r0, r0, #1
   1399c:	add	sp, sp, #12
   139a0:	bx	lr
   139a4:	sub	sp, sp, #8
   139a8:	str	r0, [sp]
   139ac:	ldr	r0, [sp]
   139b0:	sub	r0, r0, #65	; 0x41
   139b4:	cmp	r0, #25
   139b8:	bhi	139d0 <__assert_fail@plt+0x2658>
   139bc:	b	139c0 <__assert_fail@plt+0x2648>
   139c0:	movw	r0, #1
   139c4:	and	r0, r0, #1
   139c8:	strb	r0, [sp, #7]
   139cc:	b	139dc <__assert_fail@plt+0x2664>
   139d0:	movw	r0, #0
   139d4:	and	r0, r0, #1
   139d8:	strb	r0, [sp, #7]
   139dc:	ldrb	r0, [sp, #7]
   139e0:	and	r0, r0, #1
   139e4:	add	sp, sp, #8
   139e8:	bx	lr
   139ec:	sub	sp, sp, #12
   139f0:	str	r0, [sp, #4]
   139f4:	ldr	r0, [sp, #4]
   139f8:	sub	r1, r0, #48	; 0x30
   139fc:	cmp	r1, #10
   13a00:	str	r0, [sp]
   13a04:	bcc	13a34 <__assert_fail@plt+0x26bc>
   13a08:	b	13a0c <__assert_fail@plt+0x2694>
   13a0c:	ldr	r0, [sp]
   13a10:	sub	r1, r0, #65	; 0x41
   13a14:	cmp	r1, #6
   13a18:	bcc	13a34 <__assert_fail@plt+0x26bc>
   13a1c:	b	13a20 <__assert_fail@plt+0x26a8>
   13a20:	ldr	r0, [sp]
   13a24:	sub	r1, r0, #97	; 0x61
   13a28:	cmp	r1, #5
   13a2c:	bhi	13a44 <__assert_fail@plt+0x26cc>
   13a30:	b	13a34 <__assert_fail@plt+0x26bc>
   13a34:	movw	r0, #1
   13a38:	and	r0, r0, #1
   13a3c:	strb	r0, [sp, #11]
   13a40:	b	13a50 <__assert_fail@plt+0x26d8>
   13a44:	movw	r0, #0
   13a48:	and	r0, r0, #1
   13a4c:	strb	r0, [sp, #11]
   13a50:	ldrb	r0, [sp, #11]
   13a54:	and	r0, r0, #1
   13a58:	add	sp, sp, #12
   13a5c:	bx	lr
   13a60:	sub	sp, sp, #8
   13a64:	str	r0, [sp]
   13a68:	ldr	r0, [sp]
   13a6c:	sub	r0, r0, #65	; 0x41
   13a70:	cmp	r0, #25
   13a74:	bhi	13a90 <__assert_fail@plt+0x2718>
   13a78:	b	13a7c <__assert_fail@plt+0x2704>
   13a7c:	ldr	r0, [sp]
   13a80:	sub	r0, r0, #65	; 0x41
   13a84:	add	r0, r0, #97	; 0x61
   13a88:	str	r0, [sp, #4]
   13a8c:	b	13a98 <__assert_fail@plt+0x2720>
   13a90:	ldr	r0, [sp]
   13a94:	str	r0, [sp, #4]
   13a98:	ldr	r0, [sp, #4]
   13a9c:	add	sp, sp, #8
   13aa0:	bx	lr
   13aa4:	sub	sp, sp, #8
   13aa8:	str	r0, [sp]
   13aac:	ldr	r0, [sp]
   13ab0:	sub	r0, r0, #97	; 0x61
   13ab4:	cmp	r0, #25
   13ab8:	bhi	13ad4 <__assert_fail@plt+0x275c>
   13abc:	b	13ac0 <__assert_fail@plt+0x2748>
   13ac0:	ldr	r0, [sp]
   13ac4:	sub	r0, r0, #97	; 0x61
   13ac8:	add	r0, r0, #65	; 0x41
   13acc:	str	r0, [sp, #4]
   13ad0:	b	13adc <__assert_fail@plt+0x2764>
   13ad4:	ldr	r0, [sp]
   13ad8:	str	r0, [sp, #4]
   13adc:	ldr	r0, [sp, #4]
   13ae0:	add	sp, sp, #8
   13ae4:	bx	lr
   13ae8:	push	{fp, lr}
   13aec:	mov	fp, sp
   13af0:	sub	sp, sp, #8
   13af4:	str	r0, [sp, #4]
   13af8:	ldr	r0, [sp, #4]
   13afc:	movw	r1, #53720	; 0xd1d8
   13b00:	movt	r1, #2
   13b04:	bl	13b10 <__assert_fail@plt+0x2798>
   13b08:	mov	sp, fp
   13b0c:	pop	{fp, pc}
   13b10:	push	{fp, lr}
   13b14:	mov	fp, sp
   13b18:	sub	sp, sp, #32
   13b1c:	str	r0, [fp, #-4]
   13b20:	str	r1, [fp, #-8]
   13b24:	movw	r0, #0
   13b28:	str	r0, [fp, #-12]
   13b2c:	str	r0, [sp, #16]
   13b30:	movw	r1, #2
   13b34:	movw	r2, #53724	; 0xd1dc
   13b38:	movt	r2, #2
   13b3c:	str	r1, [r2]
   13b40:	ldr	r1, [fp, #-4]
   13b44:	str	r0, [sp, #8]
   13b48:	mov	r0, r1
   13b4c:	ldr	r1, [sp, #8]
   13b50:	add	r3, sp, #16
   13b54:	bl	11324 <getaddrinfo@plt>
   13b58:	str	r0, [sp, #12]
   13b5c:	ldr	r0, [sp, #12]
   13b60:	cmp	r0, #0
   13b64:	bne	13bd8 <__assert_fail@plt+0x2860>
   13b68:	ldr	r0, [sp, #16]
   13b6c:	ldr	r0, [r0, #24]
   13b70:	movw	r1, #0
   13b74:	cmp	r0, r1
   13b78:	beq	13b8c <__assert_fail@plt+0x2814>
   13b7c:	ldr	r0, [sp, #16]
   13b80:	ldr	r0, [r0, #24]
   13b84:	str	r0, [sp, #4]
   13b88:	b	13b94 <__assert_fail@plt+0x281c>
   13b8c:	ldr	r0, [fp, #-4]
   13b90:	str	r0, [sp, #4]
   13b94:	ldr	r0, [sp, #4]
   13b98:	bl	11138 <strdup@plt>
   13b9c:	str	r0, [fp, #-12]
   13ba0:	ldr	r0, [fp, #-12]
   13ba4:	movw	r1, #0
   13ba8:	cmp	r0, r1
   13bac:	bne	13bcc <__assert_fail@plt+0x2854>
   13bb0:	ldr	r0, [fp, #-8]
   13bb4:	movw	r1, #0
   13bb8:	cmp	r0, r1
   13bbc:	beq	13bcc <__assert_fail@plt+0x2854>
   13bc0:	ldr	r0, [fp, #-8]
   13bc4:	mvn	r1, #9
   13bc8:	str	r1, [r0]
   13bcc:	ldr	r0, [sp, #16]
   13bd0:	bl	11318 <freeaddrinfo@plt>
   13bd4:	b	13bf8 <__assert_fail@plt+0x2880>
   13bd8:	ldr	r0, [fp, #-8]
   13bdc:	movw	r1, #0
   13be0:	cmp	r0, r1
   13be4:	beq	13bf4 <__assert_fail@plt+0x287c>
   13be8:	ldr	r0, [sp, #12]
   13bec:	ldr	r1, [fp, #-8]
   13bf0:	str	r0, [r1]
   13bf4:	b	13bf8 <__assert_fail@plt+0x2880>
   13bf8:	ldr	r0, [fp, #-12]
   13bfc:	mov	sp, fp
   13c00:	pop	{fp, pc}
   13c04:	push	{fp, lr}
   13c08:	mov	fp, sp
   13c0c:	movw	r0, #53720	; 0xd1d8
   13c10:	movt	r0, #2
   13c14:	ldr	r0, [r0]
   13c18:	bl	110e4 <gai_strerror@plt>
   13c1c:	pop	{fp, pc}
   13c20:	sub	sp, sp, #4
   13c24:	str	r0, [sp]
   13c28:	ldr	r0, [sp]
   13c2c:	movw	r1, #53756	; 0xd1fc
   13c30:	movt	r1, #2
   13c34:	str	r0, [r1]
   13c38:	add	sp, sp, #4
   13c3c:	bx	lr
   13c40:	sub	sp, sp, #4
   13c44:	and	r0, r0, #1
   13c48:	strb	r0, [sp, #3]
   13c4c:	ldrb	r0, [sp, #3]
   13c50:	and	r0, r0, #1
   13c54:	movw	r1, #53760	; 0xd200
   13c58:	movt	r1, #2
   13c5c:	strb	r0, [r1]
   13c60:	add	sp, sp, #4
   13c64:	bx	lr
   13c68:	push	{fp, lr}
   13c6c:	mov	fp, sp
   13c70:	sub	sp, sp, #24
   13c74:	movw	r0, #53628	; 0xd17c
   13c78:	movt	r0, #2
   13c7c:	ldr	r0, [r0]
   13c80:	bl	1a40c <__assert_fail@plt+0x9094>
   13c84:	cmp	r0, #0
   13c88:	beq	13d58 <__assert_fail@plt+0x29e0>
   13c8c:	movw	r0, #53760	; 0xd200
   13c90:	movt	r0, #2
   13c94:	ldrb	r0, [r0]
   13c98:	tst	r0, #1
   13c9c:	beq	13cb0 <__assert_fail@plt+0x2938>
   13ca0:	bl	1127c <__errno_location@plt>
   13ca4:	ldr	r0, [r0]
   13ca8:	cmp	r0, #32
   13cac:	beq	13d58 <__assert_fail@plt+0x29e0>
   13cb0:	movw	r0, #51743	; 0xca1f
   13cb4:	movt	r0, #1
   13cb8:	bl	11240 <gettext@plt>
   13cbc:	str	r0, [fp, #-4]
   13cc0:	movw	r0, #53756	; 0xd1fc
   13cc4:	movt	r0, #2
   13cc8:	ldr	r0, [r0]
   13ccc:	movw	r1, #0
   13cd0:	cmp	r0, r1
   13cd4:	beq	13d2c <__assert_fail@plt+0x29b4>
   13cd8:	bl	1127c <__errno_location@plt>
   13cdc:	ldr	r1, [r0]
   13ce0:	movw	r0, #53756	; 0xd1fc
   13ce4:	movt	r0, #2
   13ce8:	ldr	r0, [r0]
   13cec:	str	r1, [fp, #-8]
   13cf0:	bl	16354 <__assert_fail@plt+0x4fdc>
   13cf4:	ldr	r1, [fp, #-4]
   13cf8:	movw	r2, #0
   13cfc:	str	r0, [sp, #12]
   13d00:	mov	r0, r2
   13d04:	ldr	r2, [fp, #-8]
   13d08:	str	r1, [sp, #8]
   13d0c:	mov	r1, r2
   13d10:	movw	r2, #51755	; 0xca2b
   13d14:	movt	r2, #1
   13d18:	ldr	r3, [sp, #12]
   13d1c:	ldr	ip, [sp, #8]
   13d20:	str	ip, [sp]
   13d24:	bl	111b0 <error@plt>
   13d28:	b	13d48 <__assert_fail@plt+0x29d0>
   13d2c:	bl	1127c <__errno_location@plt>
   13d30:	ldr	r1, [r0]
   13d34:	ldr	r3, [fp, #-4]
   13d38:	movw	r0, #0
   13d3c:	movw	r2, #51759	; 0xca2f
   13d40:	movt	r2, #1
   13d44:	bl	111b0 <error@plt>
   13d48:	movw	r0, #53540	; 0xd124
   13d4c:	movt	r0, #2
   13d50:	ldr	r0, [r0]
   13d54:	bl	110f0 <_exit@plt>
   13d58:	movw	r0, #53624	; 0xd178
   13d5c:	movt	r0, #2
   13d60:	ldr	r0, [r0]
   13d64:	bl	1a40c <__assert_fail@plt+0x9094>
   13d68:	cmp	r0, #0
   13d6c:	beq	13d80 <__assert_fail@plt+0x2a08>
   13d70:	movw	r0, #53540	; 0xd124
   13d74:	movt	r0, #2
   13d78:	ldr	r0, [r0]
   13d7c:	bl	110f0 <_exit@plt>
   13d80:	mov	sp, fp
   13d84:	pop	{fp, pc}
   13d88:	push	{fp, lr}
   13d8c:	mov	fp, sp
   13d90:	sub	sp, sp, #16
   13d94:	str	r0, [fp, #-4]
   13d98:	bl	1127c <__errno_location@plt>
   13d9c:	ldr	r0, [r0]
   13da0:	str	r0, [sp, #8]
   13da4:	ldr	r0, [fp, #-4]
   13da8:	bl	110d8 <free@plt>
   13dac:	ldr	r0, [sp, #8]
   13db0:	str	r0, [sp, #4]
   13db4:	bl	1127c <__errno_location@plt>
   13db8:	ldr	r1, [sp, #4]
   13dbc:	str	r1, [r0]
   13dc0:	mov	sp, fp
   13dc4:	pop	{fp, pc}
   13dc8:	push	{r4, r5, fp, lr}
   13dcc:	add	fp, sp, #8
   13dd0:	sub	sp, sp, #272	; 0x110
   13dd4:	add	r1, sp, #7
   13dd8:	str	r0, [fp, #-16]
   13ddc:	ldr	r0, [fp, #-16]
   13de0:	movw	r2, #257	; 0x101
   13de4:	bl	169f4 <__assert_fail@plt+0x567c>
   13de8:	cmp	r0, #0
   13dec:	beq	13e00 <__assert_fail@plt+0x2a88>
   13df0:	movw	r0, #0
   13df4:	and	r0, r0, #1
   13df8:	strb	r0, [fp, #-9]
   13dfc:	b	13e54 <__assert_fail@plt+0x2adc>
   13e00:	add	r0, sp, #7
   13e04:	movw	r1, #51762	; 0xca32
   13e08:	movt	r1, #1
   13e0c:	bl	110a8 <strcmp@plt>
   13e10:	cmp	r0, #0
   13e14:	movw	r0, #1
   13e18:	str	r0, [sp]
   13e1c:	beq	13e40 <__assert_fail@plt+0x2ac8>
   13e20:	add	r0, sp, #7
   13e24:	movw	r1, #51764	; 0xca34
   13e28:	movt	r1, #1
   13e2c:	bl	110a8 <strcmp@plt>
   13e30:	cmp	r0, #0
   13e34:	movw	r0, #0
   13e38:	moveq	r0, #1
   13e3c:	str	r0, [sp]
   13e40:	ldr	r0, [sp]
   13e44:	mvn	r1, #0
   13e48:	eor	r0, r0, r1
   13e4c:	and	r0, r0, #1
   13e50:	strb	r0, [fp, #-9]
   13e54:	ldrb	r0, [fp, #-9]
   13e58:	and	r0, r0, #1
   13e5c:	sub	sp, fp, #8
   13e60:	pop	{r4, r5, fp, pc}
   13e64:	push	{fp, lr}
   13e68:	mov	fp, sp
   13e6c:	sub	sp, sp, #16
   13e70:	str	r0, [sp, #8]
   13e74:	str	r1, [sp, #12]
   13e78:	str	r2, [sp, #4]
   13e7c:	ldr	r0, [sp, #4]
   13e80:	add	r0, r0, #20
   13e84:	str	r0, [sp]
   13e88:	ldr	r0, [sp]
   13e8c:	mov	r1, #0
   13e90:	strb	r1, [r0]
   13e94:	ldr	r0, [sp, #12]
   13e98:	cmn	r0, #1
   13e9c:	bgt	13f24 <__assert_fail@plt+0x2bac>
   13ea0:	b	13ea4 <__assert_fail@plt+0x2b2c>
   13ea4:	b	13ea8 <__assert_fail@plt+0x2b30>
   13ea8:	ldr	r0, [sp, #8]
   13eac:	ldr	r1, [sp, #12]
   13eb0:	mov	r2, #10
   13eb4:	mov	r3, #0
   13eb8:	bl	1bd9c <__assert_fail@plt+0xaa24>
   13ebc:	rsb	r2, r2, #48	; 0x30
   13ec0:	ldr	r3, [sp]
   13ec4:	mvn	ip, #0
   13ec8:	add	lr, r3, ip
   13ecc:	str	lr, [sp]
   13ed0:	add	r3, r3, ip
   13ed4:	strb	r2, [r3]
   13ed8:	ldr	r0, [sp, #8]
   13edc:	ldr	r1, [sp, #12]
   13ee0:	mov	r2, #10
   13ee4:	mov	r3, #0
   13ee8:	bl	1bd9c <__assert_fail@plt+0xaa24>
   13eec:	str	r1, [sp, #12]
   13ef0:	str	r0, [sp, #8]
   13ef4:	orr	r0, r0, r1
   13ef8:	cmp	r0, #0
   13efc:	bne	13ea8 <__assert_fail@plt+0x2b30>
   13f00:	b	13f04 <__assert_fail@plt+0x2b8c>
   13f04:	ldr	r0, [sp]
   13f08:	mvn	r1, #0
   13f0c:	add	r2, r0, r1
   13f10:	str	r2, [sp]
   13f14:	add	r0, r0, r1
   13f18:	movw	r1, #45	; 0x2d
   13f1c:	strb	r1, [r0]
   13f20:	b	13f88 <__assert_fail@plt+0x2c10>
   13f24:	b	13f28 <__assert_fail@plt+0x2bb0>
   13f28:	ldr	r0, [sp, #8]
   13f2c:	ldr	r1, [sp, #12]
   13f30:	mov	r2, #10
   13f34:	mov	r3, #0
   13f38:	bl	1bd9c <__assert_fail@plt+0xaa24>
   13f3c:	add	r2, r2, #48	; 0x30
   13f40:	ldr	r3, [sp]
   13f44:	mvn	ip, #0
   13f48:	add	lr, r3, ip
   13f4c:	str	lr, [sp]
   13f50:	add	r3, r3, ip
   13f54:	strb	r2, [r3]
   13f58:	ldr	r0, [sp, #8]
   13f5c:	ldr	r1, [sp, #12]
   13f60:	mov	r2, #10
   13f64:	mov	r3, #0
   13f68:	bl	1bd9c <__assert_fail@plt+0xaa24>
   13f6c:	str	r1, [sp, #12]
   13f70:	str	r0, [sp, #8]
   13f74:	orr	r0, r0, r1
   13f78:	cmp	r0, #0
   13f7c:	bne	13f28 <__assert_fail@plt+0x2bb0>
   13f80:	b	13f84 <__assert_fail@plt+0x2c0c>
   13f84:	b	13f88 <__assert_fail@plt+0x2c10>
   13f88:	ldr	r0, [sp]
   13f8c:	mov	sp, fp
   13f90:	pop	{fp, pc}
   13f94:	push	{fp, lr}
   13f98:	mov	fp, sp
   13f9c:	sub	sp, sp, #24
   13fa0:	str	r0, [fp, #-4]
   13fa4:	ldr	r0, [fp, #-4]
   13fa8:	movw	r1, #0
   13fac:	cmp	r0, r1
   13fb0:	bne	13fd4 <__assert_fail@plt+0x2c5c>
   13fb4:	movw	r0, #53624	; 0xd178
   13fb8:	movt	r0, #2
   13fbc:	ldr	r1, [r0]
   13fc0:	movw	r0, #51770	; 0xca3a
   13fc4:	movt	r0, #1
   13fc8:	bl	11348 <fputs@plt>
   13fcc:	str	r0, [sp, #8]
   13fd0:	bl	11360 <abort@plt>
   13fd4:	ldr	r0, [fp, #-4]
   13fd8:	movw	r1, #47	; 0x2f
   13fdc:	bl	112f4 <strrchr@plt>
   13fe0:	str	r0, [fp, #-8]
   13fe4:	ldr	r0, [fp, #-8]
   13fe8:	movw	r1, #0
   13fec:	cmp	r0, r1
   13ff0:	beq	14004 <__assert_fail@plt+0x2c8c>
   13ff4:	ldr	r0, [fp, #-8]
   13ff8:	add	r0, r0, #1
   13ffc:	str	r0, [sp, #4]
   14000:	b	1400c <__assert_fail@plt+0x2c94>
   14004:	ldr	r0, [fp, #-4]
   14008:	str	r0, [sp, #4]
   1400c:	ldr	r0, [sp, #4]
   14010:	str	r0, [sp, #12]
   14014:	ldr	r0, [sp, #12]
   14018:	ldr	r1, [fp, #-4]
   1401c:	sub	r0, r0, r1
   14020:	cmp	r0, #7
   14024:	blt	14090 <__assert_fail@plt+0x2d18>
   14028:	ldr	r0, [sp, #12]
   1402c:	mvn	r1, #6
   14030:	add	r0, r0, r1
   14034:	movw	r1, #51826	; 0xca72
   14038:	movt	r1, #1
   1403c:	movw	r2, #7
   14040:	bl	11354 <strncmp@plt>
   14044:	cmp	r0, #0
   14048:	bne	14090 <__assert_fail@plt+0x2d18>
   1404c:	ldr	r0, [sp, #12]
   14050:	str	r0, [fp, #-4]
   14054:	ldr	r0, [sp, #12]
   14058:	movw	r1, #51834	; 0xca7a
   1405c:	movt	r1, #1
   14060:	movw	r2, #3
   14064:	bl	11354 <strncmp@plt>
   14068:	cmp	r0, #0
   1406c:	bne	1408c <__assert_fail@plt+0x2d14>
   14070:	ldr	r0, [sp, #12]
   14074:	add	r0, r0, #3
   14078:	str	r0, [fp, #-4]
   1407c:	ldr	r0, [fp, #-4]
   14080:	movw	r1, #53608	; 0xd168
   14084:	movt	r1, #2
   14088:	str	r0, [r1]
   1408c:	b	14090 <__assert_fail@plt+0x2d18>
   14090:	ldr	r0, [fp, #-4]
   14094:	movw	r1, #53764	; 0xd204
   14098:	movt	r1, #2
   1409c:	str	r0, [r1]
   140a0:	ldr	r0, [fp, #-4]
   140a4:	movw	r1, #53612	; 0xd16c
   140a8:	movt	r1, #2
   140ac:	str	r0, [r1]
   140b0:	mov	sp, fp
   140b4:	pop	{fp, pc}
   140b8:	push	{fp, lr}
   140bc:	mov	fp, sp
   140c0:	sub	sp, sp, #24
   140c4:	str	r0, [fp, #-4]
   140c8:	bl	1127c <__errno_location@plt>
   140cc:	ldr	r0, [r0]
   140d0:	str	r0, [fp, #-8]
   140d4:	ldr	r0, [fp, #-4]
   140d8:	movw	r1, #0
   140dc:	cmp	r0, r1
   140e0:	beq	140f0 <__assert_fail@plt+0x2d78>
   140e4:	ldr	r0, [fp, #-4]
   140e8:	str	r0, [sp, #8]
   140ec:	b	14100 <__assert_fail@plt+0x2d88>
   140f0:	movw	r0, #53768	; 0xd208
   140f4:	movt	r0, #2
   140f8:	str	r0, [sp, #8]
   140fc:	b	14100 <__assert_fail@plt+0x2d88>
   14100:	ldr	r0, [sp, #8]
   14104:	movw	r1, #48	; 0x30
   14108:	bl	1a054 <__assert_fail@plt+0x8cdc>
   1410c:	str	r0, [sp, #12]
   14110:	ldr	r0, [fp, #-8]
   14114:	str	r0, [sp, #4]
   14118:	bl	1127c <__errno_location@plt>
   1411c:	ldr	r1, [sp, #4]
   14120:	str	r1, [r0]
   14124:	ldr	r0, [sp, #12]
   14128:	mov	sp, fp
   1412c:	pop	{fp, pc}
   14130:	sub	sp, sp, #8
   14134:	str	r0, [sp, #4]
   14138:	ldr	r0, [sp, #4]
   1413c:	movw	r1, #0
   14140:	cmp	r0, r1
   14144:	beq	14154 <__assert_fail@plt+0x2ddc>
   14148:	ldr	r0, [sp, #4]
   1414c:	str	r0, [sp]
   14150:	b	14164 <__assert_fail@plt+0x2dec>
   14154:	movw	r0, #53768	; 0xd208
   14158:	movt	r0, #2
   1415c:	str	r0, [sp]
   14160:	b	14164 <__assert_fail@plt+0x2dec>
   14164:	ldr	r0, [sp]
   14168:	ldr	r0, [r0]
   1416c:	add	sp, sp, #8
   14170:	bx	lr
   14174:	sub	sp, sp, #16
   14178:	str	r0, [sp, #12]
   1417c:	str	r1, [sp, #8]
   14180:	ldr	r0, [sp, #8]
   14184:	ldr	r1, [sp, #12]
   14188:	movw	r2, #0
   1418c:	cmp	r1, r2
   14190:	str	r0, [sp, #4]
   14194:	beq	141a4 <__assert_fail@plt+0x2e2c>
   14198:	ldr	r0, [sp, #12]
   1419c:	str	r0, [sp]
   141a0:	b	141b4 <__assert_fail@plt+0x2e3c>
   141a4:	movw	r0, #53768	; 0xd208
   141a8:	movt	r0, #2
   141ac:	str	r0, [sp]
   141b0:	b	141b4 <__assert_fail@plt+0x2e3c>
   141b4:	ldr	r0, [sp]
   141b8:	ldr	r1, [sp, #4]
   141bc:	str	r1, [r0]
   141c0:	add	sp, sp, #16
   141c4:	bx	lr
   141c8:	sub	sp, sp, #32
   141cc:	str	r0, [sp, #28]
   141d0:	strb	r1, [sp, #27]
   141d4:	str	r2, [sp, #20]
   141d8:	ldrb	r0, [sp, #27]
   141dc:	strb	r0, [sp, #19]
   141e0:	ldr	r0, [sp, #28]
   141e4:	movw	r1, #0
   141e8:	cmp	r0, r1
   141ec:	beq	141fc <__assert_fail@plt+0x2e84>
   141f0:	ldr	r0, [sp, #28]
   141f4:	str	r0, [sp]
   141f8:	b	1420c <__assert_fail@plt+0x2e94>
   141fc:	movw	r0, #53768	; 0xd208
   14200:	movt	r0, #2
   14204:	str	r0, [sp]
   14208:	b	1420c <__assert_fail@plt+0x2e94>
   1420c:	ldr	r0, [sp]
   14210:	add	r0, r0, #8
   14214:	ldrb	r1, [sp, #19]
   14218:	lsr	r1, r1, #5
   1421c:	add	r0, r0, r1, lsl #2
   14220:	str	r0, [sp, #12]
   14224:	ldrb	r0, [sp, #19]
   14228:	and	r0, r0, #31
   1422c:	str	r0, [sp, #8]
   14230:	ldr	r0, [sp, #12]
   14234:	ldr	r0, [r0]
   14238:	ldr	r1, [sp, #8]
   1423c:	lsr	r0, r0, r1
   14240:	and	r0, r0, #1
   14244:	str	r0, [sp, #4]
   14248:	ldr	r0, [sp, #20]
   1424c:	and	r0, r0, #1
   14250:	ldr	r1, [sp, #4]
   14254:	eor	r0, r0, r1
   14258:	ldr	r1, [sp, #8]
   1425c:	lsl	r0, r0, r1
   14260:	ldr	r1, [sp, #12]
   14264:	ldr	r2, [r1]
   14268:	eor	r0, r2, r0
   1426c:	str	r0, [r1]
   14270:	ldr	r0, [sp, #4]
   14274:	add	sp, sp, #32
   14278:	bx	lr
   1427c:	sub	sp, sp, #12
   14280:	str	r0, [sp, #8]
   14284:	str	r1, [sp, #4]
   14288:	ldr	r0, [sp, #8]
   1428c:	movw	r1, #0
   14290:	cmp	r0, r1
   14294:	bne	142a4 <__assert_fail@plt+0x2f2c>
   14298:	movw	r0, #53768	; 0xd208
   1429c:	movt	r0, #2
   142a0:	str	r0, [sp, #8]
   142a4:	ldr	r0, [sp, #8]
   142a8:	ldr	r0, [r0, #4]
   142ac:	str	r0, [sp]
   142b0:	ldr	r0, [sp, #4]
   142b4:	ldr	r1, [sp, #8]
   142b8:	str	r0, [r1, #4]
   142bc:	ldr	r0, [sp]
   142c0:	add	sp, sp, #12
   142c4:	bx	lr
   142c8:	push	{fp, lr}
   142cc:	mov	fp, sp
   142d0:	sub	sp, sp, #16
   142d4:	str	r0, [fp, #-4]
   142d8:	str	r1, [sp, #8]
   142dc:	str	r2, [sp, #4]
   142e0:	ldr	r0, [fp, #-4]
   142e4:	movw	r1, #0
   142e8:	cmp	r0, r1
   142ec:	bne	142fc <__assert_fail@plt+0x2f84>
   142f0:	movw	r0, #53768	; 0xd208
   142f4:	movt	r0, #2
   142f8:	str	r0, [fp, #-4]
   142fc:	ldr	r0, [fp, #-4]
   14300:	movw	r1, #10
   14304:	str	r1, [r0]
   14308:	ldr	r0, [sp, #8]
   1430c:	movw	r1, #0
   14310:	cmp	r0, r1
   14314:	beq	14328 <__assert_fail@plt+0x2fb0>
   14318:	ldr	r0, [sp, #4]
   1431c:	movw	r1, #0
   14320:	cmp	r0, r1
   14324:	bne	1432c <__assert_fail@plt+0x2fb4>
   14328:	bl	11360 <abort@plt>
   1432c:	ldr	r0, [sp, #8]
   14330:	ldr	r1, [fp, #-4]
   14334:	str	r0, [r1, #40]	; 0x28
   14338:	ldr	r0, [sp, #4]
   1433c:	ldr	r1, [fp, #-4]
   14340:	str	r0, [r1, #44]	; 0x2c
   14344:	mov	sp, fp
   14348:	pop	{fp, pc}
   1434c:	push	{r4, r5, r6, sl, fp, lr}
   14350:	add	fp, sp, #16
   14354:	sub	sp, sp, #56	; 0x38
   14358:	ldr	ip, [fp, #8]
   1435c:	str	r0, [fp, #-20]	; 0xffffffec
   14360:	str	r1, [fp, #-24]	; 0xffffffe8
   14364:	str	r2, [fp, #-28]	; 0xffffffe4
   14368:	str	r3, [fp, #-32]	; 0xffffffe0
   1436c:	ldr	r0, [fp, #8]
   14370:	movw	r1, #0
   14374:	cmp	r0, r1
   14378:	beq	14388 <__assert_fail@plt+0x3010>
   1437c:	ldr	r0, [fp, #8]
   14380:	str	r0, [sp, #24]
   14384:	b	14398 <__assert_fail@plt+0x3020>
   14388:	movw	r0, #53768	; 0xd208
   1438c:	movt	r0, #2
   14390:	str	r0, [sp, #24]
   14394:	b	14398 <__assert_fail@plt+0x3020>
   14398:	ldr	r0, [sp, #24]
   1439c:	str	r0, [sp, #36]	; 0x24
   143a0:	bl	1127c <__errno_location@plt>
   143a4:	ldr	r0, [r0]
   143a8:	str	r0, [sp, #32]
   143ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   143b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   143b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   143b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   143bc:	ldr	ip, [sp, #36]	; 0x24
   143c0:	ldr	ip, [ip]
   143c4:	ldr	lr, [sp, #36]	; 0x24
   143c8:	ldr	lr, [lr, #4]
   143cc:	ldr	r4, [sp, #36]	; 0x24
   143d0:	add	r4, r4, #8
   143d4:	ldr	r5, [sp, #36]	; 0x24
   143d8:	ldr	r5, [r5, #40]	; 0x28
   143dc:	ldr	r6, [sp, #36]	; 0x24
   143e0:	ldr	r6, [r6, #44]	; 0x2c
   143e4:	str	ip, [sp]
   143e8:	str	lr, [sp, #4]
   143ec:	str	r4, [sp, #8]
   143f0:	str	r5, [sp, #12]
   143f4:	str	r6, [sp, #16]
   143f8:	bl	14420 <__assert_fail@plt+0x30a8>
   143fc:	str	r0, [sp, #28]
   14400:	ldr	r0, [sp, #32]
   14404:	str	r0, [sp, #20]
   14408:	bl	1127c <__errno_location@plt>
   1440c:	ldr	r1, [sp, #20]
   14410:	str	r1, [r0]
   14414:	ldr	r0, [sp, #28]
   14418:	sub	sp, fp, #16
   1441c:	pop	{r4, r5, r6, sl, fp, pc}
   14420:	push	{r4, r5, r6, sl, fp, lr}
   14424:	add	fp, sp, #16
   14428:	sub	sp, sp, #160	; 0xa0
   1442c:	ldr	ip, [fp, #24]
   14430:	ldr	lr, [fp, #20]
   14434:	ldr	r4, [fp, #16]
   14438:	ldr	r5, [fp, #12]
   1443c:	ldr	r6, [fp, #8]
   14440:	str	r0, [fp, #-24]	; 0xffffffe8
   14444:	str	r1, [fp, #-28]	; 0xffffffe4
   14448:	str	r2, [fp, #-32]	; 0xffffffe0
   1444c:	str	r3, [fp, #-36]	; 0xffffffdc
   14450:	movw	r0, #0
   14454:	str	r0, [fp, #-44]	; 0xffffffd4
   14458:	str	r0, [fp, #-48]	; 0xffffffd0
   1445c:	str	r0, [fp, #-52]	; 0xffffffcc
   14460:	str	r0, [fp, #-56]	; 0xffffffc8
   14464:	movw	r0, #0
   14468:	strb	r0, [fp, #-57]	; 0xffffffc7
   1446c:	str	ip, [sp, #72]	; 0x48
   14470:	str	lr, [sp, #68]	; 0x44
   14474:	str	r4, [sp, #64]	; 0x40
   14478:	str	r5, [sp, #60]	; 0x3c
   1447c:	str	r6, [sp, #56]	; 0x38
   14480:	bl	11180 <__ctype_get_mb_cur_max@plt>
   14484:	cmp	r0, #1
   14488:	movw	r0, #0
   1448c:	moveq	r0, #1
   14490:	and	r0, r0, #1
   14494:	strb	r0, [fp, #-58]	; 0xffffffc6
   14498:	ldr	r0, [fp, #12]
   1449c:	and	r0, r0, #2
   144a0:	cmp	r0, #0
   144a4:	movw	r0, #0
   144a8:	movne	r0, #1
   144ac:	and	r0, r0, #1
   144b0:	strb	r0, [fp, #-59]	; 0xffffffc5
   144b4:	movw	r0, #0
   144b8:	strb	r0, [fp, #-60]	; 0xffffffc4
   144bc:	strb	r0, [fp, #-61]	; 0xffffffc3
   144c0:	movw	r0, #1
   144c4:	strb	r0, [fp, #-62]	; 0xffffffc2
   144c8:	ldr	r0, [fp, #8]
   144cc:	cmp	r0, #10
   144d0:	str	r0, [sp, #52]	; 0x34
   144d4:	bhi	146fc <__assert_fail@plt+0x3384>
   144d8:	add	r0, pc, #8
   144dc:	ldr	r1, [sp, #52]	; 0x34
   144e0:	ldr	r0, [r0, r1, lsl #2]
   144e4:	mov	pc, r0
   144e8:	strdeq	r4, [r1], -r0
   144ec:	andeq	r4, r1, ip, ror #12
   144f0:	andeq	r4, r1, ip, lsl #13
   144f4:	andeq	r4, r1, r4, ror #12
   144f8:	andeq	r4, r1, r4, ror r6
   144fc:	andeq	r4, r1, r4, lsr #10
   14500:	andeq	r4, r1, r4, lsl r5
   14504:	andeq	r4, r1, r8, lsl #11
   14508:	muleq	r1, ip, r5
   1450c:	muleq	r1, ip, r5
   14510:	muleq	r1, ip, r5
   14514:	movw	r0, #5
   14518:	str	r0, [fp, #8]
   1451c:	movw	r0, #1
   14520:	strb	r0, [fp, #-59]	; 0xffffffc5
   14524:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14528:	tst	r0, #1
   1452c:	bne	14568 <__assert_fail@plt+0x31f0>
   14530:	b	14534 <__assert_fail@plt+0x31bc>
   14534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14538:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1453c:	cmp	r0, r1
   14540:	bcs	14558 <__assert_fail@plt+0x31e0>
   14544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14548:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1454c:	add	r0, r0, r1
   14550:	movw	r1, #34	; 0x22
   14554:	strb	r1, [r0]
   14558:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1455c:	add	r0, r0, #1
   14560:	str	r0, [fp, #-44]	; 0xffffffd4
   14564:	b	14568 <__assert_fail@plt+0x31f0>
   14568:	movw	r0, #1
   1456c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14570:	movw	r0, #51914	; 0xcaca
   14574:	movt	r0, #1
   14578:	str	r0, [fp, #-52]	; 0xffffffcc
   1457c:	movw	r0, #1
   14580:	str	r0, [fp, #-56]	; 0xffffffc8
   14584:	b	14700 <__assert_fail@plt+0x3388>
   14588:	movw	r0, #1
   1458c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14590:	movw	r0, #0
   14594:	strb	r0, [fp, #-59]	; 0xffffffc5
   14598:	b	14700 <__assert_fail@plt+0x3388>
   1459c:	ldr	r0, [fp, #8]
   145a0:	cmp	r0, #10
   145a4:	beq	145d0 <__assert_fail@plt+0x3258>
   145a8:	ldr	r1, [fp, #8]
   145ac:	movw	r0, #51916	; 0xcacc
   145b0:	movt	r0, #1
   145b4:	bl	16614 <__assert_fail@plt+0x529c>
   145b8:	str	r0, [fp, #20]
   145bc:	ldr	r1, [fp, #8]
   145c0:	movw	r0, #51918	; 0xcace
   145c4:	movt	r0, #1
   145c8:	bl	16614 <__assert_fail@plt+0x529c>
   145cc:	str	r0, [fp, #24]
   145d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   145d4:	tst	r0, #1
   145d8:	bne	14644 <__assert_fail@plt+0x32cc>
   145dc:	ldr	r0, [fp, #20]
   145e0:	str	r0, [fp, #-52]	; 0xffffffcc
   145e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   145e8:	ldrsb	r0, [r0]
   145ec:	cmp	r0, #0
   145f0:	beq	14640 <__assert_fail@plt+0x32c8>
   145f4:	b	145f8 <__assert_fail@plt+0x3280>
   145f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14600:	cmp	r0, r1
   14604:	bcs	14620 <__assert_fail@plt+0x32a8>
   14608:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1460c:	ldrb	r0, [r0]
   14610:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14614:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14618:	add	r1, r1, r2
   1461c:	strb	r0, [r1]
   14620:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14624:	add	r0, r0, #1
   14628:	str	r0, [fp, #-44]	; 0xffffffd4
   1462c:	b	14630 <__assert_fail@plt+0x32b8>
   14630:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14634:	add	r0, r0, #1
   14638:	str	r0, [fp, #-52]	; 0xffffffcc
   1463c:	b	145e4 <__assert_fail@plt+0x326c>
   14640:	b	14644 <__assert_fail@plt+0x32cc>
   14644:	movw	r0, #1
   14648:	strb	r0, [fp, #-57]	; 0xffffffc7
   1464c:	ldr	r0, [fp, #24]
   14650:	str	r0, [fp, #-52]	; 0xffffffcc
   14654:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14658:	bl	11258 <strlen@plt>
   1465c:	str	r0, [fp, #-56]	; 0xffffffc8
   14660:	b	14700 <__assert_fail@plt+0x3388>
   14664:	movw	r0, #1
   14668:	strb	r0, [fp, #-57]	; 0xffffffc7
   1466c:	movw	r0, #1
   14670:	strb	r0, [fp, #-59]	; 0xffffffc5
   14674:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14678:	tst	r0, #1
   1467c:	bne	14688 <__assert_fail@plt+0x3310>
   14680:	movw	r0, #1
   14684:	strb	r0, [fp, #-57]	; 0xffffffc7
   14688:	b	1468c <__assert_fail@plt+0x3314>
   1468c:	movw	r0, #2
   14690:	str	r0, [fp, #8]
   14694:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14698:	tst	r0, #1
   1469c:	bne	146d8 <__assert_fail@plt+0x3360>
   146a0:	b	146a4 <__assert_fail@plt+0x332c>
   146a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146ac:	cmp	r0, r1
   146b0:	bcs	146c8 <__assert_fail@plt+0x3350>
   146b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146bc:	add	r0, r0, r1
   146c0:	movw	r1, #39	; 0x27
   146c4:	strb	r1, [r0]
   146c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146cc:	add	r0, r0, #1
   146d0:	str	r0, [fp, #-44]	; 0xffffffd4
   146d4:	b	146d8 <__assert_fail@plt+0x3360>
   146d8:	movw	r0, #51918	; 0xcace
   146dc:	movt	r0, #1
   146e0:	str	r0, [fp, #-52]	; 0xffffffcc
   146e4:	movw	r0, #1
   146e8:	str	r0, [fp, #-56]	; 0xffffffc8
   146ec:	b	14700 <__assert_fail@plt+0x3388>
   146f0:	movw	r0, #0
   146f4:	strb	r0, [fp, #-59]	; 0xffffffc5
   146f8:	b	14700 <__assert_fail@plt+0x3388>
   146fc:	bl	11360 <abort@plt>
   14700:	movw	r0, #0
   14704:	str	r0, [fp, #-40]	; 0xffffffd8
   14708:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1470c:	cmn	r0, #1
   14710:	bne	1473c <__assert_fail@plt+0x33c4>
   14714:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14718:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1471c:	add	r0, r0, r1
   14720:	ldrb	r0, [r0]
   14724:	cmp	r0, #0
   14728:	movw	r0, #0
   1472c:	moveq	r0, #1
   14730:	and	r0, r0, #1
   14734:	str	r0, [sp, #48]	; 0x30
   14738:	b	14758 <__assert_fail@plt+0x33e0>
   1473c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14740:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14744:	cmp	r0, r1
   14748:	movw	r0, #0
   1474c:	moveq	r0, #1
   14750:	and	r0, r0, #1
   14754:	str	r0, [sp, #48]	; 0x30
   14758:	ldr	r0, [sp, #48]	; 0x30
   1475c:	cmp	r0, #0
   14760:	movw	r0, #0
   14764:	movne	r0, #1
   14768:	mvn	r1, #0
   1476c:	eor	r0, r0, r1
   14770:	tst	r0, #1
   14774:	beq	15960 <__assert_fail@plt+0x45e8>
   14778:	movw	r0, #0
   1477c:	strb	r0, [fp, #-65]	; 0xffffffbf
   14780:	strb	r0, [fp, #-66]	; 0xffffffbe
   14784:	strb	r0, [fp, #-67]	; 0xffffffbd
   14788:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1478c:	tst	r0, #1
   14790:	beq	1483c <__assert_fail@plt+0x34c4>
   14794:	ldr	r0, [fp, #8]
   14798:	cmp	r0, #2
   1479c:	beq	1483c <__assert_fail@plt+0x34c4>
   147a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   147a4:	cmp	r0, #0
   147a8:	beq	1483c <__assert_fail@plt+0x34c4>
   147ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147b0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   147b4:	add	r0, r0, r1
   147b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   147bc:	cmn	r1, #1
   147c0:	str	r0, [sp, #44]	; 0x2c
   147c4:	bne	147ec <__assert_fail@plt+0x3474>
   147c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   147cc:	movw	r1, #1
   147d0:	cmp	r1, r0
   147d4:	bcs	147ec <__assert_fail@plt+0x3474>
   147d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147dc:	bl	11258 <strlen@plt>
   147e0:	str	r0, [fp, #-36]	; 0xffffffdc
   147e4:	str	r0, [sp, #40]	; 0x28
   147e8:	b	147f4 <__assert_fail@plt+0x347c>
   147ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   147f0:	str	r0, [sp, #40]	; 0x28
   147f4:	ldr	r0, [sp, #40]	; 0x28
   147f8:	ldr	r1, [sp, #44]	; 0x2c
   147fc:	cmp	r1, r0
   14800:	bhi	1483c <__assert_fail@plt+0x34c4>
   14804:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14808:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1480c:	add	r0, r0, r1
   14810:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14814:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14818:	bl	11120 <memcmp@plt>
   1481c:	cmp	r0, #0
   14820:	bne	1483c <__assert_fail@plt+0x34c4>
   14824:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14828:	tst	r0, #1
   1482c:	beq	14834 <__assert_fail@plt+0x34bc>
   14830:	b	15ae0 <__assert_fail@plt+0x4768>
   14834:	movw	r0, #1
   14838:	strb	r0, [fp, #-65]	; 0xffffffbf
   1483c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14840:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14844:	ldrb	r0, [r0, r1]
   14848:	strb	r0, [fp, #-63]	; 0xffffffc1
   1484c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14850:	mov	r1, r0
   14854:	cmp	r0, #126	; 0x7e
   14858:	str	r1, [sp, #36]	; 0x24
   1485c:	bhi	150cc <__assert_fail@plt+0x3d54>
   14860:	add	r0, pc, #8
   14864:	ldr	r1, [sp, #36]	; 0x24
   14868:	ldr	r0, [r0, r1, lsl #2]
   1486c:	mov	pc, r0
   14870:	andeq	r4, r1, ip, ror #20
   14874:	andeq	r5, r1, ip, asr #1
   14878:	andeq	r5, r1, ip, asr #1
   1487c:	andeq	r5, r1, ip, asr #1
   14880:	andeq	r5, r1, ip, asr #1
   14884:	andeq	r5, r1, ip, asr #1
   14888:	andeq	r5, r1, ip, asr #1
   1488c:	andeq	r4, r1, r4, ror lr
   14890:	andeq	r4, r1, r0, lsl #29
   14894:			; <UNDEFINED> instruction: 0x00014eb0
   14898:	muleq	r1, r8, lr
   1489c:			; <UNDEFINED> instruction: 0x00014ebc
   148a0:	andeq	r4, r1, ip, lsl #29
   148a4:	andeq	r4, r1, r4, lsr #29
   148a8:	andeq	r5, r1, ip, asr #1
   148ac:	andeq	r5, r1, ip, asr #1
   148b0:	andeq	r5, r1, ip, asr #1
   148b4:	andeq	r5, r1, ip, asr #1
   148b8:	andeq	r5, r1, ip, asr #1
   148bc:	andeq	r5, r1, ip, asr #1
   148c0:	andeq	r5, r1, ip, asr #1
   148c4:	andeq	r5, r1, ip, asr #1
   148c8:	andeq	r5, r1, ip, asr #1
   148cc:	andeq	r5, r1, ip, asr #1
   148d0:	andeq	r5, r1, ip, asr #1
   148d4:	andeq	r5, r1, ip, asr #1
   148d8:	andeq	r5, r1, ip, asr #1
   148dc:	andeq	r5, r1, ip, asr #1
   148e0:	andeq	r5, r1, ip, asr #1
   148e4:	andeq	r5, r1, ip, asr #1
   148e8:	andeq	r5, r1, ip, asr #1
   148ec:	andeq	r5, r1, ip, asr #1
   148f0:	andeq	r4, r1, r0, lsr #31
   148f4:	andeq	r4, r1, r8, lsr #31
   148f8:	andeq	r4, r1, r8, lsr #31
   148fc:	andeq	r4, r1, ip, lsl #31
   14900:	andeq	r4, r1, r8, lsr #31
   14904:	andeq	r5, r1, r0, asr #1
   14908:	andeq	r4, r1, r8, lsr #31
   1490c:	andeq	r4, r1, r8, asr #31
   14910:	andeq	r4, r1, r8, lsr #31
   14914:	andeq	r4, r1, r8, lsr #31
   14918:	andeq	r4, r1, r8, lsr #31
   1491c:	andeq	r5, r1, r0, asr #1
   14920:	andeq	r5, r1, r0, asr #1
   14924:	andeq	r5, r1, r0, asr #1
   14928:	andeq	r5, r1, r0, asr #1
   1492c:	andeq	r5, r1, r0, asr #1
   14930:	andeq	r5, r1, r0, asr #1
   14934:	andeq	r5, r1, r0, asr #1
   14938:	andeq	r5, r1, r0, asr #1
   1493c:	andeq	r5, r1, r0, asr #1
   14940:	andeq	r5, r1, r0, asr #1
   14944:	andeq	r5, r1, r0, asr #1
   14948:	andeq	r5, r1, r0, asr #1
   1494c:	andeq	r5, r1, r0, asr #1
   14950:	andeq	r5, r1, r0, asr #1
   14954:	andeq	r5, r1, r0, asr #1
   14958:	andeq	r5, r1, r0, asr #1
   1495c:	andeq	r4, r1, r8, lsr #31
   14960:	andeq	r4, r1, r8, lsr #31
   14964:	andeq	r4, r1, r8, lsr #31
   14968:	andeq	r4, r1, r8, lsr #31
   1496c:	andeq	r4, r1, r8, ror ip
   14970:	andeq	r5, r1, ip, asr #1
   14974:	andeq	r5, r1, r0, asr #1
   14978:	andeq	r5, r1, r0, asr #1
   1497c:	andeq	r5, r1, r0, asr #1
   14980:	andeq	r5, r1, r0, asr #1
   14984:	andeq	r5, r1, r0, asr #1
   14988:	andeq	r5, r1, r0, asr #1
   1498c:	andeq	r5, r1, r0, asr #1
   14990:	andeq	r5, r1, r0, asr #1
   14994:	andeq	r5, r1, r0, asr #1
   14998:	andeq	r5, r1, r0, asr #1
   1499c:	andeq	r5, r1, r0, asr #1
   149a0:	andeq	r5, r1, r0, asr #1
   149a4:	andeq	r5, r1, r0, asr #1
   149a8:	andeq	r5, r1, r0, asr #1
   149ac:	andeq	r5, r1, r0, asr #1
   149b0:	andeq	r5, r1, r0, asr #1
   149b4:	andeq	r5, r1, r0, asr #1
   149b8:	andeq	r5, r1, r0, asr #1
   149bc:	andeq	r5, r1, r0, asr #1
   149c0:	andeq	r5, r1, r0, asr #1
   149c4:	andeq	r5, r1, r0, asr #1
   149c8:	andeq	r5, r1, r0, asr #1
   149cc:	andeq	r5, r1, r0, asr #1
   149d0:	andeq	r5, r1, r0, asr #1
   149d4:	andeq	r5, r1, r0, asr #1
   149d8:	andeq	r5, r1, r0, asr #1
   149dc:	andeq	r4, r1, r8, lsr #31
   149e0:	andeq	r4, r1, r8, asr #29
   149e4:	andeq	r5, r1, r0, asr #1
   149e8:	andeq	r4, r1, r8, lsr #31
   149ec:	andeq	r5, r1, r0, asr #1
   149f0:	andeq	r4, r1, r8, lsr #31
   149f4:	andeq	r5, r1, r0, asr #1
   149f8:	andeq	r5, r1, r0, asr #1
   149fc:	andeq	r5, r1, r0, asr #1
   14a00:	andeq	r5, r1, r0, asr #1
   14a04:	andeq	r5, r1, r0, asr #1
   14a08:	andeq	r5, r1, r0, asr #1
   14a0c:	andeq	r5, r1, r0, asr #1
   14a10:	andeq	r5, r1, r0, asr #1
   14a14:	andeq	r5, r1, r0, asr #1
   14a18:	andeq	r5, r1, r0, asr #1
   14a1c:	andeq	r5, r1, r0, asr #1
   14a20:	andeq	r5, r1, r0, asr #1
   14a24:	andeq	r5, r1, r0, asr #1
   14a28:	andeq	r5, r1, r0, asr #1
   14a2c:	andeq	r5, r1, r0, asr #1
   14a30:	andeq	r5, r1, r0, asr #1
   14a34:	andeq	r5, r1, r0, asr #1
   14a38:	andeq	r5, r1, r0, asr #1
   14a3c:	andeq	r5, r1, r0, asr #1
   14a40:	andeq	r5, r1, r0, asr #1
   14a44:	andeq	r5, r1, r0, asr #1
   14a48:	andeq	r5, r1, r0, asr #1
   14a4c:	andeq	r5, r1, r0, asr #1
   14a50:	andeq	r5, r1, r0, asr #1
   14a54:	andeq	r5, r1, r0, asr #1
   14a58:	andeq	r5, r1, r0, asr #1
   14a5c:	andeq	r4, r1, r8, asr pc
   14a60:	andeq	r4, r1, r8, lsr #31
   14a64:	andeq	r4, r1, r8, asr pc
   14a68:	andeq	r4, r1, ip, lsl #31
   14a6c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14a70:	tst	r0, #1
   14a74:	beq	14c5c <__assert_fail@plt+0x38e4>
   14a78:	b	14a7c <__assert_fail@plt+0x3704>
   14a7c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14a80:	tst	r0, #1
   14a84:	beq	14a8c <__assert_fail@plt+0x3714>
   14a88:	b	15ae0 <__assert_fail@plt+0x4768>
   14a8c:	movw	r0, #1
   14a90:	strb	r0, [fp, #-66]	; 0xffffffbe
   14a94:	ldr	r0, [fp, #8]
   14a98:	cmp	r0, #2
   14a9c:	bne	14b50 <__assert_fail@plt+0x37d8>
   14aa0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14aa4:	tst	r0, #1
   14aa8:	bne	14b50 <__assert_fail@plt+0x37d8>
   14aac:	b	14ab0 <__assert_fail@plt+0x3738>
   14ab0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ab4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ab8:	cmp	r0, r1
   14abc:	bcs	14ad4 <__assert_fail@plt+0x375c>
   14ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ac4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ac8:	add	r0, r0, r1
   14acc:	movw	r1, #39	; 0x27
   14ad0:	strb	r1, [r0]
   14ad4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ad8:	add	r0, r0, #1
   14adc:	str	r0, [fp, #-44]	; 0xffffffd4
   14ae0:	b	14ae4 <__assert_fail@plt+0x376c>
   14ae4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14aec:	cmp	r0, r1
   14af0:	bcs	14b08 <__assert_fail@plt+0x3790>
   14af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14af8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14afc:	add	r0, r0, r1
   14b00:	movw	r1, #36	; 0x24
   14b04:	strb	r1, [r0]
   14b08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b0c:	add	r0, r0, #1
   14b10:	str	r0, [fp, #-44]	; 0xffffffd4
   14b14:	b	14b18 <__assert_fail@plt+0x37a0>
   14b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b20:	cmp	r0, r1
   14b24:	bcs	14b3c <__assert_fail@plt+0x37c4>
   14b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b30:	add	r0, r0, r1
   14b34:	movw	r1, #39	; 0x27
   14b38:	strb	r1, [r0]
   14b3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b40:	add	r0, r0, #1
   14b44:	str	r0, [fp, #-44]	; 0xffffffd4
   14b48:	movw	r0, #1
   14b4c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14b50:	b	14b54 <__assert_fail@plt+0x37dc>
   14b54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b5c:	cmp	r0, r1
   14b60:	bcs	14b78 <__assert_fail@plt+0x3800>
   14b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b6c:	add	r0, r0, r1
   14b70:	movw	r1, #92	; 0x5c
   14b74:	strb	r1, [r0]
   14b78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b7c:	add	r0, r0, #1
   14b80:	str	r0, [fp, #-44]	; 0xffffffd4
   14b84:	b	14b88 <__assert_fail@plt+0x3810>
   14b88:	ldr	r0, [fp, #8]
   14b8c:	cmp	r0, #2
   14b90:	beq	14c50 <__assert_fail@plt+0x38d8>
   14b94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b98:	add	r0, r0, #1
   14b9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ba0:	cmp	r0, r1
   14ba4:	bcs	14c50 <__assert_fail@plt+0x38d8>
   14ba8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14bb0:	add	r1, r1, #1
   14bb4:	add	r0, r0, r1
   14bb8:	ldrb	r0, [r0]
   14bbc:	movw	r1, #48	; 0x30
   14bc0:	cmp	r1, r0
   14bc4:	bgt	14c50 <__assert_fail@plt+0x38d8>
   14bc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14bd0:	add	r1, r1, #1
   14bd4:	add	r0, r0, r1
   14bd8:	ldrb	r0, [r0]
   14bdc:	cmp	r0, #57	; 0x39
   14be0:	bgt	14c50 <__assert_fail@plt+0x38d8>
   14be4:	b	14be8 <__assert_fail@plt+0x3870>
   14be8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14bf0:	cmp	r0, r1
   14bf4:	bcs	14c0c <__assert_fail@plt+0x3894>
   14bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14bfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c00:	add	r0, r0, r1
   14c04:	movw	r1, #48	; 0x30
   14c08:	strb	r1, [r0]
   14c0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c10:	add	r0, r0, #1
   14c14:	str	r0, [fp, #-44]	; 0xffffffd4
   14c18:	b	14c1c <__assert_fail@plt+0x38a4>
   14c1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c24:	cmp	r0, r1
   14c28:	bcs	14c40 <__assert_fail@plt+0x38c8>
   14c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c34:	add	r0, r0, r1
   14c38:	movw	r1, #48	; 0x30
   14c3c:	strb	r1, [r0]
   14c40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c44:	add	r0, r0, #1
   14c48:	str	r0, [fp, #-44]	; 0xffffffd4
   14c4c:	b	14c50 <__assert_fail@plt+0x38d8>
   14c50:	movw	r0, #48	; 0x30
   14c54:	strb	r0, [fp, #-63]	; 0xffffffc1
   14c58:	b	14c74 <__assert_fail@plt+0x38fc>
   14c5c:	ldr	r0, [fp, #12]
   14c60:	and	r0, r0, #1
   14c64:	cmp	r0, #0
   14c68:	beq	14c70 <__assert_fail@plt+0x38f8>
   14c6c:	b	15950 <__assert_fail@plt+0x45d8>
   14c70:	b	14c74 <__assert_fail@plt+0x38fc>
   14c74:	b	156ec <__assert_fail@plt+0x4374>
   14c78:	ldr	r0, [fp, #8]
   14c7c:	cmp	r0, #2
   14c80:	str	r0, [sp, #32]
   14c84:	beq	14c9c <__assert_fail@plt+0x3924>
   14c88:	b	14c8c <__assert_fail@plt+0x3914>
   14c8c:	ldr	r0, [sp, #32]
   14c90:	cmp	r0, #5
   14c94:	beq	14cb0 <__assert_fail@plt+0x3938>
   14c98:	b	14e6c <__assert_fail@plt+0x3af4>
   14c9c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ca0:	tst	r0, #1
   14ca4:	beq	14cac <__assert_fail@plt+0x3934>
   14ca8:	b	15ae0 <__assert_fail@plt+0x4768>
   14cac:	b	14e70 <__assert_fail@plt+0x3af8>
   14cb0:	ldr	r0, [fp, #12]
   14cb4:	and	r0, r0, #4
   14cb8:	cmp	r0, #0
   14cbc:	beq	14e68 <__assert_fail@plt+0x3af0>
   14cc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14cc4:	add	r0, r0, #2
   14cc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ccc:	cmp	r0, r1
   14cd0:	bcs	14e68 <__assert_fail@plt+0x3af0>
   14cd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14cd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14cdc:	add	r1, r1, #1
   14ce0:	add	r0, r0, r1
   14ce4:	ldrb	r0, [r0]
   14ce8:	cmp	r0, #63	; 0x3f
   14cec:	bne	14e68 <__assert_fail@plt+0x3af0>
   14cf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14cf4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14cf8:	add	r0, r1, r0
   14cfc:	ldrb	r0, [r0, #2]
   14d00:	mov	r1, r0
   14d04:	cmp	r0, #33	; 0x21
   14d08:	str	r1, [sp, #28]
   14d0c:	beq	14d5c <__assert_fail@plt+0x39e4>
   14d10:	b	14d14 <__assert_fail@plt+0x399c>
   14d14:	ldr	r0, [sp, #28]
   14d18:	sub	r1, r0, #39	; 0x27
   14d1c:	cmp	r1, #3
   14d20:	bcc	14d5c <__assert_fail@plt+0x39e4>
   14d24:	b	14d28 <__assert_fail@plt+0x39b0>
   14d28:	ldr	r0, [sp, #28]
   14d2c:	cmp	r0, #45	; 0x2d
   14d30:	beq	14d5c <__assert_fail@plt+0x39e4>
   14d34:	b	14d38 <__assert_fail@plt+0x39c0>
   14d38:	ldr	r0, [sp, #28]
   14d3c:	cmp	r0, #47	; 0x2f
   14d40:	beq	14d5c <__assert_fail@plt+0x39e4>
   14d44:	b	14d48 <__assert_fail@plt+0x39d0>
   14d48:	ldr	r0, [sp, #28]
   14d4c:	sub	r1, r0, #60	; 0x3c
   14d50:	cmp	r1, #2
   14d54:	bhi	14e60 <__assert_fail@plt+0x3ae8>
   14d58:	b	14d5c <__assert_fail@plt+0x39e4>
   14d5c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14d60:	tst	r0, #1
   14d64:	beq	14d6c <__assert_fail@plt+0x39f4>
   14d68:	b	15ae0 <__assert_fail@plt+0x4768>
   14d6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14d74:	add	r1, r1, #2
   14d78:	add	r0, r0, r1
   14d7c:	ldrb	r0, [r0]
   14d80:	strb	r0, [fp, #-63]	; 0xffffffc1
   14d84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d88:	add	r0, r0, #2
   14d8c:	str	r0, [fp, #-40]	; 0xffffffd8
   14d90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d98:	cmp	r0, r1
   14d9c:	bcs	14db4 <__assert_fail@plt+0x3a3c>
   14da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14da4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14da8:	add	r0, r0, r1
   14dac:	movw	r1, #63	; 0x3f
   14db0:	strb	r1, [r0]
   14db4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14db8:	add	r0, r0, #1
   14dbc:	str	r0, [fp, #-44]	; 0xffffffd4
   14dc0:	b	14dc4 <__assert_fail@plt+0x3a4c>
   14dc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14dc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14dcc:	cmp	r0, r1
   14dd0:	bcs	14de8 <__assert_fail@plt+0x3a70>
   14dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14dd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ddc:	add	r0, r0, r1
   14de0:	movw	r1, #34	; 0x22
   14de4:	strb	r1, [r0]
   14de8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14dec:	add	r0, r0, #1
   14df0:	str	r0, [fp, #-44]	; 0xffffffd4
   14df4:	b	14df8 <__assert_fail@plt+0x3a80>
   14df8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14dfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e00:	cmp	r0, r1
   14e04:	bcs	14e1c <__assert_fail@plt+0x3aa4>
   14e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e10:	add	r0, r0, r1
   14e14:	movw	r1, #34	; 0x22
   14e18:	strb	r1, [r0]
   14e1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e20:	add	r0, r0, #1
   14e24:	str	r0, [fp, #-44]	; 0xffffffd4
   14e28:	b	14e2c <__assert_fail@plt+0x3ab4>
   14e2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e34:	cmp	r0, r1
   14e38:	bcs	14e50 <__assert_fail@plt+0x3ad8>
   14e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e44:	add	r0, r0, r1
   14e48:	movw	r1, #63	; 0x3f
   14e4c:	strb	r1, [r0]
   14e50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e54:	add	r0, r0, #1
   14e58:	str	r0, [fp, #-44]	; 0xffffffd4
   14e5c:	b	14e64 <__assert_fail@plt+0x3aec>
   14e60:	b	14e64 <__assert_fail@plt+0x3aec>
   14e64:	b	14e68 <__assert_fail@plt+0x3af0>
   14e68:	b	14e70 <__assert_fail@plt+0x3af8>
   14e6c:	b	14e70 <__assert_fail@plt+0x3af8>
   14e70:	b	156ec <__assert_fail@plt+0x4374>
   14e74:	movw	r0, #97	; 0x61
   14e78:	strb	r0, [fp, #-64]	; 0xffffffc0
   14e7c:	b	14f3c <__assert_fail@plt+0x3bc4>
   14e80:	movw	r0, #98	; 0x62
   14e84:	strb	r0, [fp, #-64]	; 0xffffffc0
   14e88:	b	14f3c <__assert_fail@plt+0x3bc4>
   14e8c:	movw	r0, #102	; 0x66
   14e90:	strb	r0, [fp, #-64]	; 0xffffffc0
   14e94:	b	14f3c <__assert_fail@plt+0x3bc4>
   14e98:	movw	r0, #110	; 0x6e
   14e9c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14ea0:	b	14f1c <__assert_fail@plt+0x3ba4>
   14ea4:	movw	r0, #114	; 0x72
   14ea8:	strb	r0, [fp, #-64]	; 0xffffffc0
   14eac:	b	14f1c <__assert_fail@plt+0x3ba4>
   14eb0:	movw	r0, #116	; 0x74
   14eb4:	strb	r0, [fp, #-64]	; 0xffffffc0
   14eb8:	b	14f1c <__assert_fail@plt+0x3ba4>
   14ebc:	movw	r0, #118	; 0x76
   14ec0:	strb	r0, [fp, #-64]	; 0xffffffc0
   14ec4:	b	14f3c <__assert_fail@plt+0x3bc4>
   14ec8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14ecc:	strb	r0, [fp, #-64]	; 0xffffffc0
   14ed0:	ldr	r0, [fp, #8]
   14ed4:	cmp	r0, #2
   14ed8:	bne	14ef0 <__assert_fail@plt+0x3b78>
   14edc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ee0:	tst	r0, #1
   14ee4:	beq	14eec <__assert_fail@plt+0x3b74>
   14ee8:	b	15ae0 <__assert_fail@plt+0x4768>
   14eec:	b	15874 <__assert_fail@plt+0x44fc>
   14ef0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14ef4:	tst	r0, #1
   14ef8:	beq	14f18 <__assert_fail@plt+0x3ba0>
   14efc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14f00:	tst	r0, #1
   14f04:	beq	14f18 <__assert_fail@plt+0x3ba0>
   14f08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14f0c:	cmp	r0, #0
   14f10:	beq	14f18 <__assert_fail@plt+0x3ba0>
   14f14:	b	15874 <__assert_fail@plt+0x44fc>
   14f18:	b	14f1c <__assert_fail@plt+0x3ba4>
   14f1c:	ldr	r0, [fp, #8]
   14f20:	cmp	r0, #2
   14f24:	bne	14f38 <__assert_fail@plt+0x3bc0>
   14f28:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14f2c:	tst	r0, #1
   14f30:	beq	14f38 <__assert_fail@plt+0x3bc0>
   14f34:	b	15ae0 <__assert_fail@plt+0x4768>
   14f38:	b	14f3c <__assert_fail@plt+0x3bc4>
   14f3c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14f40:	tst	r0, #1
   14f44:	beq	14f54 <__assert_fail@plt+0x3bdc>
   14f48:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   14f4c:	strb	r0, [fp, #-63]	; 0xffffffc1
   14f50:	b	15760 <__assert_fail@plt+0x43e8>
   14f54:	b	156ec <__assert_fail@plt+0x4374>
   14f58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14f5c:	cmn	r0, #1
   14f60:	bne	14f78 <__assert_fail@plt+0x3c00>
   14f64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f68:	ldrb	r0, [r0, #1]
   14f6c:	cmp	r0, #0
   14f70:	beq	14f88 <__assert_fail@plt+0x3c10>
   14f74:	b	14f84 <__assert_fail@plt+0x3c0c>
   14f78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14f7c:	cmp	r0, #1
   14f80:	beq	14f88 <__assert_fail@plt+0x3c10>
   14f84:	b	156ec <__assert_fail@plt+0x4374>
   14f88:	b	14f8c <__assert_fail@plt+0x3c14>
   14f8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14f90:	cmp	r0, #0
   14f94:	beq	14f9c <__assert_fail@plt+0x3c24>
   14f98:	b	156ec <__assert_fail@plt+0x4374>
   14f9c:	b	14fa0 <__assert_fail@plt+0x3c28>
   14fa0:	movw	r0, #1
   14fa4:	strb	r0, [fp, #-67]	; 0xffffffbd
   14fa8:	ldr	r0, [fp, #8]
   14fac:	cmp	r0, #2
   14fb0:	bne	14fc4 <__assert_fail@plt+0x3c4c>
   14fb4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14fb8:	tst	r0, #1
   14fbc:	beq	14fc4 <__assert_fail@plt+0x3c4c>
   14fc0:	b	15ae0 <__assert_fail@plt+0x4768>
   14fc4:	b	156ec <__assert_fail@plt+0x4374>
   14fc8:	movw	r0, #1
   14fcc:	strb	r0, [fp, #-61]	; 0xffffffc3
   14fd0:	strb	r0, [fp, #-67]	; 0xffffffbd
   14fd4:	ldr	r0, [fp, #8]
   14fd8:	cmp	r0, #2
   14fdc:	bne	150bc <__assert_fail@plt+0x3d44>
   14fe0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14fe4:	tst	r0, #1
   14fe8:	beq	14ff0 <__assert_fail@plt+0x3c78>
   14fec:	b	15ae0 <__assert_fail@plt+0x4768>
   14ff0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14ff4:	cmp	r0, #0
   14ff8:	beq	15018 <__assert_fail@plt+0x3ca0>
   14ffc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15000:	cmp	r0, #0
   15004:	bne	15018 <__assert_fail@plt+0x3ca0>
   15008:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1500c:	str	r0, [fp, #-48]	; 0xffffffd0
   15010:	movw	r0, #0
   15014:	str	r0, [fp, #-28]	; 0xffffffe4
   15018:	b	1501c <__assert_fail@plt+0x3ca4>
   1501c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15020:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15024:	cmp	r0, r1
   15028:	bcs	15040 <__assert_fail@plt+0x3cc8>
   1502c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15030:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15034:	add	r0, r0, r1
   15038:	movw	r1, #39	; 0x27
   1503c:	strb	r1, [r0]
   15040:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15044:	add	r0, r0, #1
   15048:	str	r0, [fp, #-44]	; 0xffffffd4
   1504c:	b	15050 <__assert_fail@plt+0x3cd8>
   15050:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15054:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15058:	cmp	r0, r1
   1505c:	bcs	15074 <__assert_fail@plt+0x3cfc>
   15060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15064:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15068:	add	r0, r0, r1
   1506c:	movw	r1, #92	; 0x5c
   15070:	strb	r1, [r0]
   15074:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15078:	add	r0, r0, #1
   1507c:	str	r0, [fp, #-44]	; 0xffffffd4
   15080:	b	15084 <__assert_fail@plt+0x3d0c>
   15084:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15088:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1508c:	cmp	r0, r1
   15090:	bcs	150a8 <__assert_fail@plt+0x3d30>
   15094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15098:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1509c:	add	r0, r0, r1
   150a0:	movw	r1, #39	; 0x27
   150a4:	strb	r1, [r0]
   150a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150ac:	add	r0, r0, #1
   150b0:	str	r0, [fp, #-44]	; 0xffffffd4
   150b4:	movw	r0, #0
   150b8:	strb	r0, [fp, #-60]	; 0xffffffc4
   150bc:	b	156ec <__assert_fail@plt+0x4374>
   150c0:	movw	r0, #1
   150c4:	strb	r0, [fp, #-67]	; 0xffffffbd
   150c8:	b	156ec <__assert_fail@plt+0x4374>
   150cc:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   150d0:	tst	r0, #1
   150d4:	beq	15114 <__assert_fail@plt+0x3d9c>
   150d8:	mov	r0, #1
   150dc:	str	r0, [fp, #-72]	; 0xffffffb8
   150e0:	bl	11228 <__ctype_b_loc@plt>
   150e4:	ldr	r0, [r0]
   150e8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   150ec:	mov	r2, r1
   150f0:	add	r0, r0, r1, lsl #1
   150f4:	ldrh	r0, [r0]
   150f8:	and	r0, r0, #16384	; 0x4000
   150fc:	cmp	r0, #0
   15100:	movw	r0, #0
   15104:	movne	r0, #1
   15108:	and	r0, r0, #1
   1510c:	strb	r0, [fp, #-73]	; 0xffffffb7
   15110:	b	153a0 <__assert_fail@plt+0x4028>
   15114:	sub	r0, fp, #84	; 0x54
   15118:	movw	r1, #0
   1511c:	and	r1, r1, #255	; 0xff
   15120:	movw	r2, #8
   15124:	bl	11294 <memset@plt>
   15128:	movw	r0, #0
   1512c:	str	r0, [fp, #-72]	; 0xffffffb8
   15130:	movw	r0, #1
   15134:	strb	r0, [fp, #-73]	; 0xffffffb7
   15138:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1513c:	cmn	r0, #1
   15140:	bne	15150 <__assert_fail@plt+0x3dd8>
   15144:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15148:	bl	11258 <strlen@plt>
   1514c:	str	r0, [fp, #-36]	; 0xffffffdc
   15150:	b	15154 <__assert_fail@plt+0x3ddc>
   15154:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15158:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1515c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15160:	add	r1, r1, r2
   15164:	add	r1, r0, r1
   15168:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1516c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15170:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15174:	add	r2, r2, r3
   15178:	sub	r2, r0, r2
   1517c:	add	r0, sp, #88	; 0x58
   15180:	sub	r3, fp, #84	; 0x54
   15184:	bl	1a9ac <__assert_fail@plt+0x9634>
   15188:	str	r0, [sp, #84]	; 0x54
   1518c:	ldr	r0, [sp, #84]	; 0x54
   15190:	cmp	r0, #0
   15194:	bne	1519c <__assert_fail@plt+0x3e24>
   15198:	b	1539c <__assert_fail@plt+0x4024>
   1519c:	ldr	r0, [sp, #84]	; 0x54
   151a0:	cmn	r0, #1
   151a4:	bne	151b4 <__assert_fail@plt+0x3e3c>
   151a8:	movw	r0, #0
   151ac:	strb	r0, [fp, #-73]	; 0xffffffb7
   151b0:	b	1539c <__assert_fail@plt+0x4024>
   151b4:	ldr	r0, [sp, #84]	; 0x54
   151b8:	cmn	r0, #2
   151bc:	bne	15230 <__assert_fail@plt+0x3eb8>
   151c0:	movw	r0, #0
   151c4:	strb	r0, [fp, #-73]	; 0xffffffb7
   151c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151cc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   151d0:	add	r0, r0, r1
   151d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   151d8:	cmp	r0, r1
   151dc:	movw	r0, #0
   151e0:	str	r0, [sp, #24]
   151e4:	bcs	15210 <__assert_fail@plt+0x3e98>
   151e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   151f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   151f4:	add	r1, r1, r2
   151f8:	add	r0, r0, r1
   151fc:	ldrb	r0, [r0]
   15200:	cmp	r0, #0
   15204:	movw	r0, #0
   15208:	movne	r0, #1
   1520c:	str	r0, [sp, #24]
   15210:	ldr	r0, [sp, #24]
   15214:	tst	r0, #1
   15218:	beq	1522c <__assert_fail@plt+0x3eb4>
   1521c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15220:	add	r0, r0, #1
   15224:	str	r0, [fp, #-72]	; 0xffffffb8
   15228:	b	151c8 <__assert_fail@plt+0x3e50>
   1522c:	b	1539c <__assert_fail@plt+0x4024>
   15230:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15234:	tst	r0, #1
   15238:	beq	15344 <__assert_fail@plt+0x3fcc>
   1523c:	ldr	r0, [fp, #8]
   15240:	cmp	r0, #2
   15244:	bne	15344 <__assert_fail@plt+0x3fcc>
   15248:	movw	r0, #1
   1524c:	str	r0, [sp, #80]	; 0x50
   15250:	ldr	r0, [sp, #80]	; 0x50
   15254:	ldr	r1, [sp, #84]	; 0x54
   15258:	cmp	r0, r1
   1525c:	bcs	15340 <__assert_fail@plt+0x3fc8>
   15260:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15264:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15268:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1526c:	add	r1, r1, r2
   15270:	ldr	r2, [sp, #80]	; 0x50
   15274:	add	r1, r1, r2
   15278:	ldrb	r0, [r0, r1]
   1527c:	sub	r0, r0, #91	; 0x5b
   15280:	cmp	r0, #33	; 0x21
   15284:	str	r0, [sp, #20]
   15288:	bhi	15328 <__assert_fail@plt+0x3fb0>
   1528c:	add	r0, pc, #8
   15290:	ldr	r1, [sp, #20]
   15294:	ldr	r0, [r0, r1, lsl #2]
   15298:	mov	pc, r0
   1529c:	andeq	r5, r1, r4, lsr #6
   152a0:	andeq	r5, r1, r4, lsr #6
   152a4:	andeq	r5, r1, r8, lsr #6
   152a8:	andeq	r5, r1, r4, lsr #6
   152ac:	andeq	r5, r1, r8, lsr #6
   152b0:	andeq	r5, r1, r4, lsr #6
   152b4:	andeq	r5, r1, r8, lsr #6
   152b8:	andeq	r5, r1, r8, lsr #6
   152bc:	andeq	r5, r1, r8, lsr #6
   152c0:	andeq	r5, r1, r8, lsr #6
   152c4:	andeq	r5, r1, r8, lsr #6
   152c8:	andeq	r5, r1, r8, lsr #6
   152cc:	andeq	r5, r1, r8, lsr #6
   152d0:	andeq	r5, r1, r8, lsr #6
   152d4:	andeq	r5, r1, r8, lsr #6
   152d8:	andeq	r5, r1, r8, lsr #6
   152dc:	andeq	r5, r1, r8, lsr #6
   152e0:	andeq	r5, r1, r8, lsr #6
   152e4:	andeq	r5, r1, r8, lsr #6
   152e8:	andeq	r5, r1, r8, lsr #6
   152ec:	andeq	r5, r1, r8, lsr #6
   152f0:	andeq	r5, r1, r8, lsr #6
   152f4:	andeq	r5, r1, r8, lsr #6
   152f8:	andeq	r5, r1, r8, lsr #6
   152fc:	andeq	r5, r1, r8, lsr #6
   15300:	andeq	r5, r1, r8, lsr #6
   15304:	andeq	r5, r1, r8, lsr #6
   15308:	andeq	r5, r1, r8, lsr #6
   1530c:	andeq	r5, r1, r8, lsr #6
   15310:	andeq	r5, r1, r8, lsr #6
   15314:	andeq	r5, r1, r8, lsr #6
   15318:	andeq	r5, r1, r8, lsr #6
   1531c:	andeq	r5, r1, r8, lsr #6
   15320:	andeq	r5, r1, r4, lsr #6
   15324:	b	15ae0 <__assert_fail@plt+0x4768>
   15328:	b	1532c <__assert_fail@plt+0x3fb4>
   1532c:	b	15330 <__assert_fail@plt+0x3fb8>
   15330:	ldr	r0, [sp, #80]	; 0x50
   15334:	add	r0, r0, #1
   15338:	str	r0, [sp, #80]	; 0x50
   1533c:	b	15250 <__assert_fail@plt+0x3ed8>
   15340:	b	15344 <__assert_fail@plt+0x3fcc>
   15344:	ldr	r0, [sp, #88]	; 0x58
   15348:	bl	11168 <iswprint@plt>
   1534c:	cmp	r0, #0
   15350:	bne	1535c <__assert_fail@plt+0x3fe4>
   15354:	movw	r0, #0
   15358:	strb	r0, [fp, #-73]	; 0xffffffb7
   1535c:	ldr	r0, [sp, #84]	; 0x54
   15360:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15364:	add	r0, r1, r0
   15368:	str	r0, [fp, #-72]	; 0xffffffb8
   1536c:	b	15370 <__assert_fail@plt+0x3ff8>
   15370:	b	15374 <__assert_fail@plt+0x3ffc>
   15374:	b	15378 <__assert_fail@plt+0x4000>
   15378:	sub	r0, fp, #84	; 0x54
   1537c:	bl	11108 <mbsinit@plt>
   15380:	cmp	r0, #0
   15384:	movw	r0, #0
   15388:	movne	r0, #1
   1538c:	mvn	r1, #0
   15390:	eor	r0, r0, r1
   15394:	tst	r0, #1
   15398:	bne	15154 <__assert_fail@plt+0x3ddc>
   1539c:	b	153a0 <__assert_fail@plt+0x4028>
   153a0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   153a4:	and	r0, r0, #1
   153a8:	strb	r0, [fp, #-67]	; 0xffffffbd
   153ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   153b0:	movw	r1, #1
   153b4:	cmp	r1, r0
   153b8:	bcc	153d4 <__assert_fail@plt+0x405c>
   153bc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   153c0:	tst	r0, #1
   153c4:	beq	156e8 <__assert_fail@plt+0x4370>
   153c8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   153cc:	tst	r0, #1
   153d0:	bne	156e8 <__assert_fail@plt+0x4370>
   153d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   153d8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   153dc:	add	r0, r0, r1
   153e0:	str	r0, [sp, #76]	; 0x4c
   153e4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   153e8:	tst	r0, #1
   153ec:	beq	1559c <__assert_fail@plt+0x4224>
   153f0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   153f4:	tst	r0, #1
   153f8:	bne	1559c <__assert_fail@plt+0x4224>
   153fc:	b	15400 <__assert_fail@plt+0x4088>
   15400:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15404:	tst	r0, #1
   15408:	beq	15410 <__assert_fail@plt+0x4098>
   1540c:	b	15ae0 <__assert_fail@plt+0x4768>
   15410:	movw	r0, #1
   15414:	strb	r0, [fp, #-66]	; 0xffffffbe
   15418:	ldr	r0, [fp, #8]
   1541c:	cmp	r0, #2
   15420:	bne	154d4 <__assert_fail@plt+0x415c>
   15424:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15428:	tst	r0, #1
   1542c:	bne	154d4 <__assert_fail@plt+0x415c>
   15430:	b	15434 <__assert_fail@plt+0x40bc>
   15434:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15438:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1543c:	cmp	r0, r1
   15440:	bcs	15458 <__assert_fail@plt+0x40e0>
   15444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15448:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1544c:	add	r0, r0, r1
   15450:	movw	r1, #39	; 0x27
   15454:	strb	r1, [r0]
   15458:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1545c:	add	r0, r0, #1
   15460:	str	r0, [fp, #-44]	; 0xffffffd4
   15464:	b	15468 <__assert_fail@plt+0x40f0>
   15468:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1546c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15470:	cmp	r0, r1
   15474:	bcs	1548c <__assert_fail@plt+0x4114>
   15478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1547c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15480:	add	r0, r0, r1
   15484:	movw	r1, #36	; 0x24
   15488:	strb	r1, [r0]
   1548c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15490:	add	r0, r0, #1
   15494:	str	r0, [fp, #-44]	; 0xffffffd4
   15498:	b	1549c <__assert_fail@plt+0x4124>
   1549c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154a4:	cmp	r0, r1
   154a8:	bcs	154c0 <__assert_fail@plt+0x4148>
   154ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154b4:	add	r0, r0, r1
   154b8:	movw	r1, #39	; 0x27
   154bc:	strb	r1, [r0]
   154c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154c4:	add	r0, r0, #1
   154c8:	str	r0, [fp, #-44]	; 0xffffffd4
   154cc:	movw	r0, #1
   154d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   154d4:	b	154d8 <__assert_fail@plt+0x4160>
   154d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154e0:	cmp	r0, r1
   154e4:	bcs	154fc <__assert_fail@plt+0x4184>
   154e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154f0:	add	r0, r0, r1
   154f4:	movw	r1, #92	; 0x5c
   154f8:	strb	r1, [r0]
   154fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15500:	add	r0, r0, #1
   15504:	str	r0, [fp, #-44]	; 0xffffffd4
   15508:	b	1550c <__assert_fail@plt+0x4194>
   1550c:	b	15510 <__assert_fail@plt+0x4198>
   15510:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15514:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15518:	cmp	r0, r1
   1551c:	bcs	1553c <__assert_fail@plt+0x41c4>
   15520:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15524:	asr	r0, r0, #6
   15528:	add	r0, r0, #48	; 0x30
   1552c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15530:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15534:	add	r1, r1, r2
   15538:	strb	r0, [r1]
   1553c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15540:	add	r0, r0, #1
   15544:	str	r0, [fp, #-44]	; 0xffffffd4
   15548:	b	1554c <__assert_fail@plt+0x41d4>
   1554c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15550:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15554:	cmp	r0, r1
   15558:	bcs	1557c <__assert_fail@plt+0x4204>
   1555c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15560:	asr	r0, r0, #3
   15564:	and	r0, r0, #7
   15568:	add	r0, r0, #48	; 0x30
   1556c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15570:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15574:	add	r1, r1, r2
   15578:	strb	r0, [r1]
   1557c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15580:	add	r0, r0, #1
   15584:	str	r0, [fp, #-44]	; 0xffffffd4
   15588:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1558c:	and	r0, r0, #7
   15590:	add	r0, r0, #48	; 0x30
   15594:	strb	r0, [fp, #-63]	; 0xffffffc1
   15598:	b	155e8 <__assert_fail@plt+0x4270>
   1559c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   155a0:	tst	r0, #1
   155a4:	beq	155e4 <__assert_fail@plt+0x426c>
   155a8:	b	155ac <__assert_fail@plt+0x4234>
   155ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   155b4:	cmp	r0, r1
   155b8:	bcs	155d0 <__assert_fail@plt+0x4258>
   155bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   155c4:	add	r0, r0, r1
   155c8:	movw	r1, #92	; 0x5c
   155cc:	strb	r1, [r0]
   155d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155d4:	add	r0, r0, #1
   155d8:	str	r0, [fp, #-44]	; 0xffffffd4
   155dc:	movw	r0, #0
   155e0:	strb	r0, [fp, #-65]	; 0xffffffbf
   155e4:	b	155e8 <__assert_fail@plt+0x4270>
   155e8:	ldr	r0, [sp, #76]	; 0x4c
   155ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   155f0:	add	r1, r1, #1
   155f4:	cmp	r0, r1
   155f8:	bhi	15600 <__assert_fail@plt+0x4288>
   155fc:	b	156e4 <__assert_fail@plt+0x436c>
   15600:	b	15604 <__assert_fail@plt+0x428c>
   15604:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15608:	tst	r0, #1
   1560c:	beq	1568c <__assert_fail@plt+0x4314>
   15610:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15614:	tst	r0, #1
   15618:	bne	1568c <__assert_fail@plt+0x4314>
   1561c:	b	15620 <__assert_fail@plt+0x42a8>
   15620:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15624:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15628:	cmp	r0, r1
   1562c:	bcs	15644 <__assert_fail@plt+0x42cc>
   15630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15634:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15638:	add	r0, r0, r1
   1563c:	movw	r1, #39	; 0x27
   15640:	strb	r1, [r0]
   15644:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15648:	add	r0, r0, #1
   1564c:	str	r0, [fp, #-44]	; 0xffffffd4
   15650:	b	15654 <__assert_fail@plt+0x42dc>
   15654:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15658:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1565c:	cmp	r0, r1
   15660:	bcs	15678 <__assert_fail@plt+0x4300>
   15664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15668:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1566c:	add	r0, r0, r1
   15670:	movw	r1, #39	; 0x27
   15674:	strb	r1, [r0]
   15678:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1567c:	add	r0, r0, #1
   15680:	str	r0, [fp, #-44]	; 0xffffffd4
   15684:	movw	r0, #0
   15688:	strb	r0, [fp, #-60]	; 0xffffffc4
   1568c:	b	15690 <__assert_fail@plt+0x4318>
   15690:	b	15694 <__assert_fail@plt+0x431c>
   15694:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15698:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1569c:	cmp	r0, r1
   156a0:	bcs	156b8 <__assert_fail@plt+0x4340>
   156a4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   156a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   156b0:	add	r1, r1, r2
   156b4:	strb	r0, [r1]
   156b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156bc:	add	r0, r0, #1
   156c0:	str	r0, [fp, #-44]	; 0xffffffd4
   156c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   156cc:	add	r1, r1, #1
   156d0:	str	r1, [fp, #-40]	; 0xffffffd8
   156d4:	add	r0, r0, r1
   156d8:	ldrb	r0, [r0]
   156dc:	strb	r0, [fp, #-63]	; 0xffffffc1
   156e0:	b	153e4 <__assert_fail@plt+0x406c>
   156e4:	b	15874 <__assert_fail@plt+0x44fc>
   156e8:	b	156ec <__assert_fail@plt+0x4374>
   156ec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   156f0:	tst	r0, #1
   156f4:	beq	15704 <__assert_fail@plt+0x438c>
   156f8:	ldr	r0, [fp, #8]
   156fc:	cmp	r0, #2
   15700:	bne	15710 <__assert_fail@plt+0x4398>
   15704:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15708:	tst	r0, #1
   1570c:	beq	1574c <__assert_fail@plt+0x43d4>
   15710:	ldr	r0, [fp, #16]
   15714:	movw	r1, #0
   15718:	cmp	r0, r1
   1571c:	beq	1574c <__assert_fail@plt+0x43d4>
   15720:	ldr	r0, [fp, #16]
   15724:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15728:	lsr	r1, r1, #5
   1572c:	add	r0, r0, r1, lsl #2
   15730:	ldr	r0, [r0]
   15734:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15738:	and	r1, r1, #31
   1573c:	lsr	r0, r0, r1
   15740:	and	r0, r0, #1
   15744:	cmp	r0, #0
   15748:	bne	1575c <__assert_fail@plt+0x43e4>
   1574c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15750:	tst	r0, #1
   15754:	bne	1575c <__assert_fail@plt+0x43e4>
   15758:	b	15874 <__assert_fail@plt+0x44fc>
   1575c:	b	15760 <__assert_fail@plt+0x43e8>
   15760:	b	15764 <__assert_fail@plt+0x43ec>
   15764:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15768:	tst	r0, #1
   1576c:	beq	15774 <__assert_fail@plt+0x43fc>
   15770:	b	15ae0 <__assert_fail@plt+0x4768>
   15774:	movw	r0, #1
   15778:	strb	r0, [fp, #-66]	; 0xffffffbe
   1577c:	ldr	r0, [fp, #8]
   15780:	cmp	r0, #2
   15784:	bne	15838 <__assert_fail@plt+0x44c0>
   15788:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1578c:	tst	r0, #1
   15790:	bne	15838 <__assert_fail@plt+0x44c0>
   15794:	b	15798 <__assert_fail@plt+0x4420>
   15798:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1579c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157a0:	cmp	r0, r1
   157a4:	bcs	157bc <__assert_fail@plt+0x4444>
   157a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   157b0:	add	r0, r0, r1
   157b4:	movw	r1, #39	; 0x27
   157b8:	strb	r1, [r0]
   157bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157c0:	add	r0, r0, #1
   157c4:	str	r0, [fp, #-44]	; 0xffffffd4
   157c8:	b	157cc <__assert_fail@plt+0x4454>
   157cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157d4:	cmp	r0, r1
   157d8:	bcs	157f0 <__assert_fail@plt+0x4478>
   157dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   157e4:	add	r0, r0, r1
   157e8:	movw	r1, #36	; 0x24
   157ec:	strb	r1, [r0]
   157f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157f4:	add	r0, r0, #1
   157f8:	str	r0, [fp, #-44]	; 0xffffffd4
   157fc:	b	15800 <__assert_fail@plt+0x4488>
   15800:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15804:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15808:	cmp	r0, r1
   1580c:	bcs	15824 <__assert_fail@plt+0x44ac>
   15810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15814:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15818:	add	r0, r0, r1
   1581c:	movw	r1, #39	; 0x27
   15820:	strb	r1, [r0]
   15824:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15828:	add	r0, r0, #1
   1582c:	str	r0, [fp, #-44]	; 0xffffffd4
   15830:	movw	r0, #1
   15834:	strb	r0, [fp, #-60]	; 0xffffffc4
   15838:	b	1583c <__assert_fail@plt+0x44c4>
   1583c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15840:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15844:	cmp	r0, r1
   15848:	bcs	15860 <__assert_fail@plt+0x44e8>
   1584c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15850:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15854:	add	r0, r0, r1
   15858:	movw	r1, #92	; 0x5c
   1585c:	strb	r1, [r0]
   15860:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15864:	add	r0, r0, #1
   15868:	str	r0, [fp, #-44]	; 0xffffffd4
   1586c:	b	15870 <__assert_fail@plt+0x44f8>
   15870:	b	15874 <__assert_fail@plt+0x44fc>
   15874:	b	15878 <__assert_fail@plt+0x4500>
   15878:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1587c:	tst	r0, #1
   15880:	beq	15900 <__assert_fail@plt+0x4588>
   15884:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15888:	tst	r0, #1
   1588c:	bne	15900 <__assert_fail@plt+0x4588>
   15890:	b	15894 <__assert_fail@plt+0x451c>
   15894:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15898:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1589c:	cmp	r0, r1
   158a0:	bcs	158b8 <__assert_fail@plt+0x4540>
   158a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158ac:	add	r0, r0, r1
   158b0:	movw	r1, #39	; 0x27
   158b4:	strb	r1, [r0]
   158b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158bc:	add	r0, r0, #1
   158c0:	str	r0, [fp, #-44]	; 0xffffffd4
   158c4:	b	158c8 <__assert_fail@plt+0x4550>
   158c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158d0:	cmp	r0, r1
   158d4:	bcs	158ec <__assert_fail@plt+0x4574>
   158d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158e0:	add	r0, r0, r1
   158e4:	movw	r1, #39	; 0x27
   158e8:	strb	r1, [r0]
   158ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158f0:	add	r0, r0, #1
   158f4:	str	r0, [fp, #-44]	; 0xffffffd4
   158f8:	movw	r0, #0
   158fc:	strb	r0, [fp, #-60]	; 0xffffffc4
   15900:	b	15904 <__assert_fail@plt+0x458c>
   15904:	b	15908 <__assert_fail@plt+0x4590>
   15908:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1590c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15910:	cmp	r0, r1
   15914:	bcs	1592c <__assert_fail@plt+0x45b4>
   15918:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1591c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15920:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15924:	add	r1, r1, r2
   15928:	strb	r0, [r1]
   1592c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15930:	add	r0, r0, #1
   15934:	str	r0, [fp, #-44]	; 0xffffffd4
   15938:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1593c:	tst	r0, #1
   15940:	bne	1594c <__assert_fail@plt+0x45d4>
   15944:	movw	r0, #0
   15948:	strb	r0, [fp, #-62]	; 0xffffffc2
   1594c:	b	15950 <__assert_fail@plt+0x45d8>
   15950:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15954:	add	r0, r0, #1
   15958:	str	r0, [fp, #-40]	; 0xffffffd8
   1595c:	b	14708 <__assert_fail@plt+0x3390>
   15960:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15964:	cmp	r0, #0
   15968:	bne	15988 <__assert_fail@plt+0x4610>
   1596c:	ldr	r0, [fp, #8]
   15970:	cmp	r0, #2
   15974:	bne	15988 <__assert_fail@plt+0x4610>
   15978:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1597c:	tst	r0, #1
   15980:	beq	15988 <__assert_fail@plt+0x4610>
   15984:	b	15ae0 <__assert_fail@plt+0x4768>
   15988:	ldr	r0, [fp, #8]
   1598c:	cmp	r0, #2
   15990:	bne	15a30 <__assert_fail@plt+0x46b8>
   15994:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15998:	tst	r0, #1
   1599c:	bne	15a30 <__assert_fail@plt+0x46b8>
   159a0:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   159a4:	tst	r0, #1
   159a8:	beq	15a30 <__assert_fail@plt+0x46b8>
   159ac:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   159b0:	tst	r0, #1
   159b4:	beq	159fc <__assert_fail@plt+0x4684>
   159b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   159c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   159c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   159c8:	ldr	ip, [fp, #12]
   159cc:	ldr	lr, [fp, #16]
   159d0:	ldr	r4, [fp, #20]
   159d4:	ldr	r5, [fp, #24]
   159d8:	movw	r6, #5
   159dc:	str	r6, [sp]
   159e0:	str	ip, [sp, #4]
   159e4:	str	lr, [sp, #8]
   159e8:	str	r4, [sp, #12]
   159ec:	str	r5, [sp, #16]
   159f0:	bl	14420 <__assert_fail@plt+0x30a8>
   159f4:	str	r0, [fp, #-20]	; 0xffffffec
   159f8:	b	15b48 <__assert_fail@plt+0x47d0>
   159fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15a00:	cmp	r0, #0
   15a04:	bne	15a28 <__assert_fail@plt+0x46b0>
   15a08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15a0c:	cmp	r0, #0
   15a10:	beq	15a28 <__assert_fail@plt+0x46b0>
   15a14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15a18:	str	r0, [fp, #-28]	; 0xffffffe4
   15a1c:	movw	r0, #0
   15a20:	str	r0, [fp, #-44]	; 0xffffffd4
   15a24:	b	144c8 <__assert_fail@plt+0x3150>
   15a28:	b	15a2c <__assert_fail@plt+0x46b4>
   15a2c:	b	15a30 <__assert_fail@plt+0x46b8>
   15a30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15a34:	movw	r1, #0
   15a38:	cmp	r0, r1
   15a3c:	beq	15ab0 <__assert_fail@plt+0x4738>
   15a40:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15a44:	tst	r0, #1
   15a48:	bne	15ab0 <__assert_fail@plt+0x4738>
   15a4c:	b	15a50 <__assert_fail@plt+0x46d8>
   15a50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15a54:	ldrsb	r0, [r0]
   15a58:	cmp	r0, #0
   15a5c:	beq	15aac <__assert_fail@plt+0x4734>
   15a60:	b	15a64 <__assert_fail@plt+0x46ec>
   15a64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a6c:	cmp	r0, r1
   15a70:	bcs	15a8c <__assert_fail@plt+0x4714>
   15a74:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15a78:	ldrb	r0, [r0]
   15a7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a80:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15a84:	add	r1, r1, r2
   15a88:	strb	r0, [r1]
   15a8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a90:	add	r0, r0, #1
   15a94:	str	r0, [fp, #-44]	; 0xffffffd4
   15a98:	b	15a9c <__assert_fail@plt+0x4724>
   15a9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15aa0:	add	r0, r0, #1
   15aa4:	str	r0, [fp, #-52]	; 0xffffffcc
   15aa8:	b	15a50 <__assert_fail@plt+0x46d8>
   15aac:	b	15ab0 <__assert_fail@plt+0x4738>
   15ab0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ab4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ab8:	cmp	r0, r1
   15abc:	bcs	15ad4 <__assert_fail@plt+0x475c>
   15ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ac4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ac8:	add	r0, r0, r1
   15acc:	movw	r1, #0
   15ad0:	strb	r1, [r0]
   15ad4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ad8:	str	r0, [fp, #-20]	; 0xffffffec
   15adc:	b	15b48 <__assert_fail@plt+0x47d0>
   15ae0:	ldr	r0, [fp, #8]
   15ae4:	cmp	r0, #2
   15ae8:	bne	15b00 <__assert_fail@plt+0x4788>
   15aec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15af0:	tst	r0, #1
   15af4:	beq	15b00 <__assert_fail@plt+0x4788>
   15af8:	movw	r0, #4
   15afc:	str	r0, [fp, #8]
   15b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15b0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15b10:	ldr	ip, [fp, #8]
   15b14:	ldr	lr, [fp, #12]
   15b18:	mvn	r4, #2
   15b1c:	and	lr, lr, r4
   15b20:	ldr	r4, [fp, #20]
   15b24:	ldr	r5, [fp, #24]
   15b28:	str	ip, [sp]
   15b2c:	str	lr, [sp, #4]
   15b30:	movw	ip, #0
   15b34:	str	ip, [sp, #8]
   15b38:	str	r4, [sp, #12]
   15b3c:	str	r5, [sp, #16]
   15b40:	bl	14420 <__assert_fail@plt+0x30a8>
   15b44:	str	r0, [fp, #-20]	; 0xffffffec
   15b48:	ldr	r0, [fp, #-20]	; 0xffffffec
   15b4c:	sub	sp, fp, #16
   15b50:	pop	{r4, r5, r6, sl, fp, pc}
   15b54:	push	{fp, lr}
   15b58:	mov	fp, sp
   15b5c:	sub	sp, sp, #16
   15b60:	str	r0, [fp, #-4]
   15b64:	str	r1, [sp, #8]
   15b68:	str	r2, [sp, #4]
   15b6c:	ldr	r0, [fp, #-4]
   15b70:	ldr	r1, [sp, #8]
   15b74:	ldr	r3, [sp, #4]
   15b78:	movw	r2, #0
   15b7c:	bl	15b88 <__assert_fail@plt+0x4810>
   15b80:	mov	sp, fp
   15b84:	pop	{fp, pc}
   15b88:	push	{r4, r5, r6, sl, fp, lr}
   15b8c:	add	fp, sp, #16
   15b90:	sub	sp, sp, #80	; 0x50
   15b94:	str	r0, [fp, #-20]	; 0xffffffec
   15b98:	str	r1, [fp, #-24]	; 0xffffffe8
   15b9c:	str	r2, [fp, #-28]	; 0xffffffe4
   15ba0:	str	r3, [fp, #-32]	; 0xffffffe0
   15ba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ba8:	movw	r1, #0
   15bac:	cmp	r0, r1
   15bb0:	beq	15bc0 <__assert_fail@plt+0x4848>
   15bb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bb8:	str	r0, [sp, #40]	; 0x28
   15bbc:	b	15bd0 <__assert_fail@plt+0x4858>
   15bc0:	movw	r0, #53768	; 0xd208
   15bc4:	movt	r0, #2
   15bc8:	str	r0, [sp, #40]	; 0x28
   15bcc:	b	15bd0 <__assert_fail@plt+0x4858>
   15bd0:	ldr	r0, [sp, #40]	; 0x28
   15bd4:	str	r0, [fp, #-36]	; 0xffffffdc
   15bd8:	bl	1127c <__errno_location@plt>
   15bdc:	ldr	r0, [r0]
   15be0:	str	r0, [fp, #-40]	; 0xffffffd8
   15be4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15be8:	ldr	r0, [r0, #4]
   15bec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15bf0:	movw	r2, #0
   15bf4:	cmp	r1, r2
   15bf8:	movw	r1, #0
   15bfc:	movne	r1, #1
   15c00:	tst	r1, #1
   15c04:	mov	r1, r2
   15c08:	moveq	r1, #1
   15c0c:	orr	r0, r0, r1
   15c10:	str	r0, [fp, #-44]	; 0xffffffd4
   15c14:	ldr	r0, [fp, #-20]	; 0xffffffec
   15c18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15c20:	ldr	r1, [r1]
   15c24:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15c28:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15c2c:	add	lr, lr, #8
   15c30:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15c34:	ldr	r4, [r4, #40]	; 0x28
   15c38:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15c3c:	ldr	r5, [r5, #44]	; 0x2c
   15c40:	str	r0, [sp, #36]	; 0x24
   15c44:	mov	r0, r2
   15c48:	str	r1, [sp, #32]
   15c4c:	mov	r1, r2
   15c50:	ldr	r2, [sp, #36]	; 0x24
   15c54:	ldr	r6, [sp, #32]
   15c58:	str	r6, [sp]
   15c5c:	str	ip, [sp, #4]
   15c60:	str	lr, [sp, #8]
   15c64:	str	r4, [sp, #12]
   15c68:	str	r5, [sp, #16]
   15c6c:	bl	14420 <__assert_fail@plt+0x30a8>
   15c70:	add	r0, r0, #1
   15c74:	str	r0, [sp, #48]	; 0x30
   15c78:	ldr	r0, [sp, #48]	; 0x30
   15c7c:	bl	17494 <__assert_fail@plt+0x611c>
   15c80:	str	r0, [sp, #44]	; 0x2c
   15c84:	ldr	r0, [sp, #44]	; 0x2c
   15c88:	ldr	r1, [sp, #48]	; 0x30
   15c8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c94:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15c98:	ldr	ip, [ip]
   15c9c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15ca0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15ca4:	add	r4, r4, #8
   15ca8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15cac:	ldr	r5, [r5, #40]	; 0x28
   15cb0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   15cb4:	ldr	r6, [r6, #44]	; 0x2c
   15cb8:	str	ip, [sp]
   15cbc:	str	lr, [sp, #4]
   15cc0:	str	r4, [sp, #8]
   15cc4:	str	r5, [sp, #12]
   15cc8:	str	r6, [sp, #16]
   15ccc:	bl	14420 <__assert_fail@plt+0x30a8>
   15cd0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15cd4:	str	r0, [sp, #28]
   15cd8:	str	r1, [sp, #24]
   15cdc:	bl	1127c <__errno_location@plt>
   15ce0:	ldr	r1, [sp, #24]
   15ce4:	str	r1, [r0]
   15ce8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15cec:	movw	r2, #0
   15cf0:	cmp	r0, r2
   15cf4:	beq	15d08 <__assert_fail@plt+0x4990>
   15cf8:	ldr	r0, [sp, #48]	; 0x30
   15cfc:	sub	r0, r0, #1
   15d00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d04:	str	r0, [r1]
   15d08:	ldr	r0, [sp, #44]	; 0x2c
   15d0c:	sub	sp, fp, #16
   15d10:	pop	{r4, r5, r6, sl, fp, pc}
   15d14:	push	{fp, lr}
   15d18:	mov	fp, sp
   15d1c:	sub	sp, sp, #8
   15d20:	movw	r0, #53544	; 0xd128
   15d24:	movt	r0, #2
   15d28:	ldr	r0, [r0]
   15d2c:	str	r0, [sp, #4]
   15d30:	movw	r0, #1
   15d34:	str	r0, [sp]
   15d38:	ldr	r0, [sp]
   15d3c:	movw	r1, #53548	; 0xd12c
   15d40:	movt	r1, #2
   15d44:	ldr	r1, [r1]
   15d48:	cmp	r0, r1
   15d4c:	bge	15d74 <__assert_fail@plt+0x49fc>
   15d50:	ldr	r0, [sp, #4]
   15d54:	ldr	r1, [sp]
   15d58:	add	r0, r0, r1, lsl #3
   15d5c:	ldr	r0, [r0, #4]
   15d60:	bl	13d88 <__assert_fail@plt+0x2a10>
   15d64:	ldr	r0, [sp]
   15d68:	add	r0, r0, #1
   15d6c:	str	r0, [sp]
   15d70:	b	15d38 <__assert_fail@plt+0x49c0>
   15d74:	ldr	r0, [sp, #4]
   15d78:	ldr	r0, [r0, #4]
   15d7c:	movw	r1, #53816	; 0xd238
   15d80:	movt	r1, #2
   15d84:	cmp	r0, r1
   15d88:	beq	15db4 <__assert_fail@plt+0x4a3c>
   15d8c:	ldr	r0, [sp, #4]
   15d90:	ldr	r0, [r0, #4]
   15d94:	bl	13d88 <__assert_fail@plt+0x2a10>
   15d98:	movw	r0, #256	; 0x100
   15d9c:	movw	r1, #53552	; 0xd130
   15da0:	movt	r1, #2
   15da4:	str	r0, [r1]
   15da8:	movw	r0, #53816	; 0xd238
   15dac:	movt	r0, #2
   15db0:	str	r0, [r1, #4]
   15db4:	ldr	r0, [sp, #4]
   15db8:	movw	r1, #53552	; 0xd130
   15dbc:	movt	r1, #2
   15dc0:	cmp	r0, r1
   15dc4:	beq	15de4 <__assert_fail@plt+0x4a6c>
   15dc8:	ldr	r0, [sp, #4]
   15dcc:	bl	13d88 <__assert_fail@plt+0x2a10>
   15dd0:	movw	r0, #53544	; 0xd128
   15dd4:	movt	r0, #2
   15dd8:	movw	r1, #53552	; 0xd130
   15ddc:	movt	r1, #2
   15de0:	str	r1, [r0]
   15de4:	movw	r0, #53548	; 0xd12c
   15de8:	movt	r0, #2
   15dec:	movw	r1, #1
   15df0:	str	r1, [r0]
   15df4:	mov	sp, fp
   15df8:	pop	{fp, pc}
   15dfc:	push	{fp, lr}
   15e00:	mov	fp, sp
   15e04:	sub	sp, sp, #8
   15e08:	str	r0, [sp, #4]
   15e0c:	str	r1, [sp]
   15e10:	ldr	r0, [sp, #4]
   15e14:	ldr	r1, [sp]
   15e18:	mvn	r2, #0
   15e1c:	movw	r3, #53768	; 0xd208
   15e20:	movt	r3, #2
   15e24:	bl	15e30 <__assert_fail@plt+0x4ab8>
   15e28:	mov	sp, fp
   15e2c:	pop	{fp, pc}
   15e30:	push	{r4, r5, r6, sl, fp, lr}
   15e34:	add	fp, sp, #16
   15e38:	sub	sp, sp, #80	; 0x50
   15e3c:	str	r0, [fp, #-20]	; 0xffffffec
   15e40:	str	r1, [fp, #-24]	; 0xffffffe8
   15e44:	str	r2, [fp, #-28]	; 0xffffffe4
   15e48:	str	r3, [fp, #-32]	; 0xffffffe0
   15e4c:	bl	1127c <__errno_location@plt>
   15e50:	ldr	r1, [pc, #672]	; 160f8 <__assert_fail@plt+0x4d80>
   15e54:	ldr	r0, [r0]
   15e58:	str	r0, [fp, #-36]	; 0xffffffdc
   15e5c:	movw	r0, #53544	; 0xd128
   15e60:	movt	r0, #2
   15e64:	ldr	r0, [r0]
   15e68:	str	r0, [fp, #-40]	; 0xffffffd8
   15e6c:	str	r1, [fp, #-44]	; 0xffffffd4
   15e70:	ldr	r0, [fp, #-20]	; 0xffffffec
   15e74:	movw	r1, #0
   15e78:	cmp	r1, r0
   15e7c:	bgt	15e90 <__assert_fail@plt+0x4b18>
   15e80:	ldr	r0, [fp, #-20]	; 0xffffffec
   15e84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e88:	cmp	r0, r1
   15e8c:	blt	15e94 <__assert_fail@plt+0x4b1c>
   15e90:	bl	11360 <abort@plt>
   15e94:	movw	r0, #53548	; 0xd12c
   15e98:	movt	r0, #2
   15e9c:	ldr	r0, [r0]
   15ea0:	ldr	r1, [fp, #-20]	; 0xffffffec
   15ea4:	cmp	r0, r1
   15ea8:	bgt	15fa0 <__assert_fail@plt+0x4c28>
   15eac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15eb0:	movw	r1, #53552	; 0xd130
   15eb4:	movt	r1, #2
   15eb8:	cmp	r0, r1
   15ebc:	movw	r0, #0
   15ec0:	moveq	r0, #1
   15ec4:	and	r0, r0, #1
   15ec8:	strb	r0, [fp, #-45]	; 0xffffffd3
   15ecc:	movw	r0, #53548	; 0xd12c
   15ed0:	movt	r0, #2
   15ed4:	ldr	r0, [r0]
   15ed8:	str	r0, [sp, #44]	; 0x2c
   15edc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15ee0:	tst	r0, #1
   15ee4:	beq	15ef4 <__assert_fail@plt+0x4b7c>
   15ee8:	movw	r0, #0
   15eec:	str	r0, [sp, #24]
   15ef0:	b	15efc <__assert_fail@plt+0x4b84>
   15ef4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15ef8:	str	r0, [sp, #24]
   15efc:	ldr	r0, [sp, #24]
   15f00:	ldr	r1, [fp, #-20]	; 0xffffffec
   15f04:	movw	r2, #53548	; 0xd12c
   15f08:	movt	r2, #2
   15f0c:	ldr	r2, [r2]
   15f10:	sub	r1, r1, r2
   15f14:	add	r2, r1, #1
   15f18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f1c:	add	r1, sp, #44	; 0x2c
   15f20:	movw	ip, #8
   15f24:	str	ip, [sp]
   15f28:	bl	176d0 <__assert_fail@plt+0x6358>
   15f2c:	str	r0, [fp, #-40]	; 0xffffffd8
   15f30:	movw	r1, #53544	; 0xd128
   15f34:	movt	r1, #2
   15f38:	str	r0, [r1]
   15f3c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15f40:	tst	r0, #1
   15f44:	beq	15f64 <__assert_fail@plt+0x4bec>
   15f48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15f4c:	movw	r1, #53552	; 0xd130
   15f50:	movt	r1, #2
   15f54:	ldr	r2, [r1]
   15f58:	str	r2, [r0]
   15f5c:	ldr	r1, [r1, #4]
   15f60:	str	r1, [r0, #4]
   15f64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15f68:	movw	r1, #53548	; 0xd12c
   15f6c:	movt	r1, #2
   15f70:	ldr	r1, [r1]
   15f74:	add	r0, r0, r1, lsl #3
   15f78:	ldr	r2, [sp, #44]	; 0x2c
   15f7c:	sub	r1, r2, r1
   15f80:	lsl	r2, r1, #3
   15f84:	movw	r1, #0
   15f88:	and	r1, r1, #255	; 0xff
   15f8c:	bl	11294 <memset@plt>
   15f90:	ldr	r0, [sp, #44]	; 0x2c
   15f94:	movw	r1, #53548	; 0xd12c
   15f98:	movt	r1, #2
   15f9c:	str	r0, [r1]
   15fa0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15fa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   15fa8:	ldr	r0, [r0, r1, lsl #3]
   15fac:	str	r0, [sp, #40]	; 0x28
   15fb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15fb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   15fb8:	add	r0, r0, r1, lsl #3
   15fbc:	ldr	r0, [r0, #4]
   15fc0:	str	r0, [sp, #36]	; 0x24
   15fc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fc8:	ldr	r0, [r0, #4]
   15fcc:	orr	r0, r0, #1
   15fd0:	str	r0, [sp, #32]
   15fd4:	ldr	r0, [sp, #36]	; 0x24
   15fd8:	ldr	r1, [sp, #40]	; 0x28
   15fdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15fe0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15fe4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15fe8:	ldr	ip, [ip]
   15fec:	ldr	lr, [sp, #32]
   15ff0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15ff4:	add	r4, r4, #8
   15ff8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15ffc:	ldr	r5, [r5, #40]	; 0x28
   16000:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16004:	ldr	r6, [r6, #44]	; 0x2c
   16008:	str	ip, [sp]
   1600c:	str	lr, [sp, #4]
   16010:	str	r4, [sp, #8]
   16014:	str	r5, [sp, #12]
   16018:	str	r6, [sp, #16]
   1601c:	bl	14420 <__assert_fail@plt+0x30a8>
   16020:	str	r0, [sp, #28]
   16024:	ldr	r0, [sp, #40]	; 0x28
   16028:	ldr	r1, [sp, #28]
   1602c:	cmp	r0, r1
   16030:	bhi	160d8 <__assert_fail@plt+0x4d60>
   16034:	ldr	r0, [sp, #28]
   16038:	add	r0, r0, #1
   1603c:	str	r0, [sp, #40]	; 0x28
   16040:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16044:	ldr	r2, [fp, #-20]	; 0xffffffec
   16048:	add	r1, r1, r2, lsl #3
   1604c:	str	r0, [r1]
   16050:	ldr	r0, [sp, #36]	; 0x24
   16054:	movw	r1, #53816	; 0xd238
   16058:	movt	r1, #2
   1605c:	cmp	r0, r1
   16060:	beq	1606c <__assert_fail@plt+0x4cf4>
   16064:	ldr	r0, [sp, #36]	; 0x24
   16068:	bl	13d88 <__assert_fail@plt+0x2a10>
   1606c:	ldr	r0, [sp, #40]	; 0x28
   16070:	bl	17494 <__assert_fail@plt+0x611c>
   16074:	mov	r1, r0
   16078:	str	r0, [sp, #36]	; 0x24
   1607c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16080:	ldr	r2, [fp, #-20]	; 0xffffffec
   16084:	add	r0, r0, r2, lsl #3
   16088:	str	r1, [r0, #4]
   1608c:	ldr	r0, [sp, #36]	; 0x24
   16090:	ldr	r1, [sp, #40]	; 0x28
   16094:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16098:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1609c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   160a0:	ldr	ip, [ip]
   160a4:	ldr	lr, [sp, #32]
   160a8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   160ac:	add	r4, r4, #8
   160b0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   160b4:	ldr	r5, [r5, #40]	; 0x28
   160b8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   160bc:	ldr	r6, [r6, #44]	; 0x2c
   160c0:	str	ip, [sp]
   160c4:	str	lr, [sp, #4]
   160c8:	str	r4, [sp, #8]
   160cc:	str	r5, [sp, #12]
   160d0:	str	r6, [sp, #16]
   160d4:	bl	14420 <__assert_fail@plt+0x30a8>
   160d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   160dc:	str	r0, [sp, #20]
   160e0:	bl	1127c <__errno_location@plt>
   160e4:	ldr	r1, [sp, #20]
   160e8:	str	r1, [r0]
   160ec:	ldr	r0, [sp, #36]	; 0x24
   160f0:	sub	sp, fp, #16
   160f4:	pop	{r4, r5, r6, sl, fp, pc}
   160f8:	svcvc	0x00ffffff
   160fc:	push	{fp, lr}
   16100:	mov	fp, sp
   16104:	sub	sp, sp, #16
   16108:	str	r0, [fp, #-4]
   1610c:	str	r1, [sp, #8]
   16110:	str	r2, [sp, #4]
   16114:	ldr	r0, [fp, #-4]
   16118:	ldr	r1, [sp, #8]
   1611c:	ldr	r2, [sp, #4]
   16120:	movw	r3, #53768	; 0xd208
   16124:	movt	r3, #2
   16128:	bl	15e30 <__assert_fail@plt+0x4ab8>
   1612c:	mov	sp, fp
   16130:	pop	{fp, pc}
   16134:	push	{fp, lr}
   16138:	mov	fp, sp
   1613c:	sub	sp, sp, #8
   16140:	str	r0, [sp, #4]
   16144:	ldr	r1, [sp, #4]
   16148:	movw	r0, #0
   1614c:	bl	15dfc <__assert_fail@plt+0x4a84>
   16150:	mov	sp, fp
   16154:	pop	{fp, pc}
   16158:	push	{fp, lr}
   1615c:	mov	fp, sp
   16160:	sub	sp, sp, #8
   16164:	str	r0, [sp, #4]
   16168:	str	r1, [sp]
   1616c:	ldr	r1, [sp, #4]
   16170:	ldr	r2, [sp]
   16174:	movw	r0, #0
   16178:	bl	160fc <__assert_fail@plt+0x4d84>
   1617c:	mov	sp, fp
   16180:	pop	{fp, pc}
   16184:	push	{fp, lr}
   16188:	mov	fp, sp
   1618c:	sub	sp, sp, #64	; 0x40
   16190:	str	r0, [fp, #-4]
   16194:	str	r1, [fp, #-8]
   16198:	str	r2, [fp, #-12]
   1619c:	ldr	r1, [fp, #-8]
   161a0:	add	r0, sp, #4
   161a4:	bl	161c4 <__assert_fail@plt+0x4e4c>
   161a8:	ldr	r0, [fp, #-4]
   161ac:	ldr	r1, [fp, #-12]
   161b0:	mvn	r2, #0
   161b4:	add	r3, sp, #4
   161b8:	bl	15e30 <__assert_fail@plt+0x4ab8>
   161bc:	mov	sp, fp
   161c0:	pop	{fp, pc}
   161c4:	push	{fp, lr}
   161c8:	mov	fp, sp
   161cc:	sub	sp, sp, #8
   161d0:	str	r1, [sp, #4]
   161d4:	mov	r1, r0
   161d8:	str	r0, [sp]
   161dc:	mov	r0, r1
   161e0:	movw	r1, #0
   161e4:	and	r1, r1, #255	; 0xff
   161e8:	movw	r2, #48	; 0x30
   161ec:	bl	11294 <memset@plt>
   161f0:	ldr	r0, [sp, #4]
   161f4:	cmp	r0, #10
   161f8:	bne	16200 <__assert_fail@plt+0x4e88>
   161fc:	bl	11360 <abort@plt>
   16200:	ldr	r0, [sp, #4]
   16204:	ldr	r1, [sp]
   16208:	str	r0, [r1]
   1620c:	mov	sp, fp
   16210:	pop	{fp, pc}
   16214:	push	{fp, lr}
   16218:	mov	fp, sp
   1621c:	sub	sp, sp, #64	; 0x40
   16220:	str	r0, [fp, #-4]
   16224:	str	r1, [fp, #-8]
   16228:	str	r2, [fp, #-12]
   1622c:	str	r3, [fp, #-16]
   16230:	ldr	r1, [fp, #-8]
   16234:	mov	r0, sp
   16238:	bl	161c4 <__assert_fail@plt+0x4e4c>
   1623c:	ldr	r0, [fp, #-4]
   16240:	ldr	r1, [fp, #-12]
   16244:	ldr	r2, [fp, #-16]
   16248:	mov	r3, sp
   1624c:	bl	15e30 <__assert_fail@plt+0x4ab8>
   16250:	mov	sp, fp
   16254:	pop	{fp, pc}
   16258:	push	{fp, lr}
   1625c:	mov	fp, sp
   16260:	sub	sp, sp, #8
   16264:	str	r0, [sp, #4]
   16268:	str	r1, [sp]
   1626c:	ldr	r1, [sp, #4]
   16270:	ldr	r2, [sp]
   16274:	movw	r0, #0
   16278:	bl	16184 <__assert_fail@plt+0x4e0c>
   1627c:	mov	sp, fp
   16280:	pop	{fp, pc}
   16284:	push	{fp, lr}
   16288:	mov	fp, sp
   1628c:	sub	sp, sp, #16
   16290:	str	r0, [fp, #-4]
   16294:	str	r1, [sp, #8]
   16298:	str	r2, [sp, #4]
   1629c:	ldr	r1, [fp, #-4]
   162a0:	ldr	r2, [sp, #8]
   162a4:	ldr	r3, [sp, #4]
   162a8:	movw	r0, #0
   162ac:	bl	16214 <__assert_fail@plt+0x4e9c>
   162b0:	mov	sp, fp
   162b4:	pop	{fp, pc}
   162b8:	push	{fp, lr}
   162bc:	mov	fp, sp
   162c0:	sub	sp, sp, #72	; 0x48
   162c4:	movw	r3, #53768	; 0xd208
   162c8:	movt	r3, #2
   162cc:	str	r0, [fp, #-4]
   162d0:	str	r1, [fp, #-8]
   162d4:	strb	r2, [fp, #-9]
   162d8:	add	r0, sp, #12
   162dc:	mov	r1, r0
   162e0:	str	r0, [sp, #8]
   162e4:	mov	r0, r1
   162e8:	mov	r1, r3
   162ec:	movw	r2, #48	; 0x30
   162f0:	bl	110fc <memcpy@plt>
   162f4:	ldr	r0, [sp, #8]
   162f8:	ldrb	r1, [fp, #-9]
   162fc:	movw	r2, #1
   16300:	bl	141c8 <__assert_fail@plt+0x2e50>
   16304:	ldr	r1, [fp, #-4]
   16308:	ldr	r2, [fp, #-8]
   1630c:	movw	r3, #0
   16310:	str	r0, [sp, #4]
   16314:	mov	r0, r3
   16318:	add	r3, sp, #12
   1631c:	bl	15e30 <__assert_fail@plt+0x4ab8>
   16320:	mov	sp, fp
   16324:	pop	{fp, pc}
   16328:	push	{fp, lr}
   1632c:	mov	fp, sp
   16330:	sub	sp, sp, #8
   16334:	str	r0, [sp, #4]
   16338:	strb	r1, [sp, #3]
   1633c:	ldr	r0, [sp, #4]
   16340:	mvn	r1, #0
   16344:	ldrb	r2, [sp, #3]
   16348:	bl	162b8 <__assert_fail@plt+0x4f40>
   1634c:	mov	sp, fp
   16350:	pop	{fp, pc}
   16354:	push	{fp, lr}
   16358:	mov	fp, sp
   1635c:	sub	sp, sp, #8
   16360:	str	r0, [sp, #4]
   16364:	ldr	r0, [sp, #4]
   16368:	movw	r1, #58	; 0x3a
   1636c:	and	r1, r1, #255	; 0xff
   16370:	bl	16328 <__assert_fail@plt+0x4fb0>
   16374:	mov	sp, fp
   16378:	pop	{fp, pc}
   1637c:	push	{fp, lr}
   16380:	mov	fp, sp
   16384:	sub	sp, sp, #8
   16388:	str	r0, [sp, #4]
   1638c:	str	r1, [sp]
   16390:	ldr	r0, [sp, #4]
   16394:	ldr	r1, [sp]
   16398:	movw	r2, #58	; 0x3a
   1639c:	and	r2, r2, #255	; 0xff
   163a0:	bl	162b8 <__assert_fail@plt+0x4f40>
   163a4:	mov	sp, fp
   163a8:	pop	{fp, pc}
   163ac:	push	{fp, lr}
   163b0:	mov	fp, sp
   163b4:	sub	sp, sp, #120	; 0x78
   163b8:	str	r0, [fp, #-4]
   163bc:	str	r1, [fp, #-8]
   163c0:	str	r2, [fp, #-12]
   163c4:	ldr	r1, [fp, #-8]
   163c8:	add	r0, sp, #12
   163cc:	bl	161c4 <__assert_fail@plt+0x4e4c>
   163d0:	add	r0, sp, #60	; 0x3c
   163d4:	mov	r1, r0
   163d8:	add	r2, sp, #12
   163dc:	str	r0, [sp, #8]
   163e0:	mov	r0, r1
   163e4:	mov	r1, r2
   163e8:	movw	r2, #48	; 0x30
   163ec:	bl	110fc <memcpy@plt>
   163f0:	ldr	r0, [sp, #8]
   163f4:	movw	r1, #58	; 0x3a
   163f8:	and	r1, r1, #255	; 0xff
   163fc:	movw	r2, #1
   16400:	bl	141c8 <__assert_fail@plt+0x2e50>
   16404:	ldr	r1, [fp, #-4]
   16408:	ldr	r2, [fp, #-12]
   1640c:	str	r0, [sp, #4]
   16410:	mov	r0, r1
   16414:	mov	r1, r2
   16418:	mvn	r2, #0
   1641c:	add	r3, sp, #60	; 0x3c
   16420:	bl	15e30 <__assert_fail@plt+0x4ab8>
   16424:	mov	sp, fp
   16428:	pop	{fp, pc}
   1642c:	push	{fp, lr}
   16430:	mov	fp, sp
   16434:	sub	sp, sp, #24
   16438:	str	r0, [fp, #-4]
   1643c:	str	r1, [fp, #-8]
   16440:	str	r2, [sp, #12]
   16444:	str	r3, [sp, #8]
   16448:	ldr	r0, [fp, #-4]
   1644c:	ldr	r1, [fp, #-8]
   16450:	ldr	r2, [sp, #12]
   16454:	ldr	r3, [sp, #8]
   16458:	mvn	ip, #0
   1645c:	str	ip, [sp]
   16460:	bl	1646c <__assert_fail@plt+0x50f4>
   16464:	mov	sp, fp
   16468:	pop	{fp, pc}
   1646c:	push	{fp, lr}
   16470:	mov	fp, sp
   16474:	sub	sp, sp, #72	; 0x48
   16478:	ldr	ip, [fp, #8]
   1647c:	movw	lr, #53768	; 0xd208
   16480:	movt	lr, #2
   16484:	str	r0, [fp, #-4]
   16488:	str	r1, [fp, #-8]
   1648c:	str	r2, [fp, #-12]
   16490:	str	r3, [fp, #-16]
   16494:	add	r0, sp, #8
   16498:	mov	r1, r0
   1649c:	str	r0, [sp, #4]
   164a0:	mov	r0, r1
   164a4:	mov	r1, lr
   164a8:	movw	r2, #48	; 0x30
   164ac:	str	ip, [sp]
   164b0:	bl	110fc <memcpy@plt>
   164b4:	ldr	r1, [fp, #-8]
   164b8:	ldr	r2, [fp, #-12]
   164bc:	ldr	r0, [sp, #4]
   164c0:	bl	142c8 <__assert_fail@plt+0x2f50>
   164c4:	ldr	r0, [fp, #-4]
   164c8:	ldr	r1, [fp, #-16]
   164cc:	ldr	r2, [fp, #8]
   164d0:	add	r3, sp, #8
   164d4:	bl	15e30 <__assert_fail@plt+0x4ab8>
   164d8:	mov	sp, fp
   164dc:	pop	{fp, pc}
   164e0:	push	{fp, lr}
   164e4:	mov	fp, sp
   164e8:	sub	sp, sp, #16
   164ec:	str	r0, [fp, #-4]
   164f0:	str	r1, [sp, #8]
   164f4:	str	r2, [sp, #4]
   164f8:	ldr	r1, [fp, #-4]
   164fc:	ldr	r2, [sp, #8]
   16500:	ldr	r3, [sp, #4]
   16504:	movw	r0, #0
   16508:	bl	1642c <__assert_fail@plt+0x50b4>
   1650c:	mov	sp, fp
   16510:	pop	{fp, pc}
   16514:	push	{fp, lr}
   16518:	mov	fp, sp
   1651c:	sub	sp, sp, #24
   16520:	str	r0, [fp, #-4]
   16524:	str	r1, [fp, #-8]
   16528:	str	r2, [sp, #12]
   1652c:	str	r3, [sp, #8]
   16530:	ldr	r1, [fp, #-4]
   16534:	ldr	r2, [fp, #-8]
   16538:	ldr	r3, [sp, #12]
   1653c:	ldr	r0, [sp, #8]
   16540:	movw	ip, #0
   16544:	str	r0, [sp, #4]
   16548:	mov	r0, ip
   1654c:	ldr	ip, [sp, #4]
   16550:	str	ip, [sp]
   16554:	bl	1646c <__assert_fail@plt+0x50f4>
   16558:	mov	sp, fp
   1655c:	pop	{fp, pc}
   16560:	push	{fp, lr}
   16564:	mov	fp, sp
   16568:	sub	sp, sp, #16
   1656c:	str	r0, [fp, #-4]
   16570:	str	r1, [sp, #8]
   16574:	str	r2, [sp, #4]
   16578:	ldr	r0, [fp, #-4]
   1657c:	ldr	r1, [sp, #8]
   16580:	ldr	r2, [sp, #4]
   16584:	movw	r3, #53560	; 0xd138
   16588:	movt	r3, #2
   1658c:	bl	15e30 <__assert_fail@plt+0x4ab8>
   16590:	mov	sp, fp
   16594:	pop	{fp, pc}
   16598:	push	{fp, lr}
   1659c:	mov	fp, sp
   165a0:	sub	sp, sp, #8
   165a4:	str	r0, [sp, #4]
   165a8:	str	r1, [sp]
   165ac:	ldr	r1, [sp, #4]
   165b0:	ldr	r2, [sp]
   165b4:	movw	r0, #0
   165b8:	bl	16560 <__assert_fail@plt+0x51e8>
   165bc:	mov	sp, fp
   165c0:	pop	{fp, pc}
   165c4:	push	{fp, lr}
   165c8:	mov	fp, sp
   165cc:	sub	sp, sp, #8
   165d0:	str	r0, [sp, #4]
   165d4:	str	r1, [sp]
   165d8:	ldr	r0, [sp, #4]
   165dc:	ldr	r1, [sp]
   165e0:	mvn	r2, #0
   165e4:	bl	16560 <__assert_fail@plt+0x51e8>
   165e8:	mov	sp, fp
   165ec:	pop	{fp, pc}
   165f0:	push	{fp, lr}
   165f4:	mov	fp, sp
   165f8:	sub	sp, sp, #8
   165fc:	str	r0, [sp, #4]
   16600:	ldr	r1, [sp, #4]
   16604:	movw	r0, #0
   16608:	bl	165c4 <__assert_fail@plt+0x524c>
   1660c:	mov	sp, fp
   16610:	pop	{fp, pc}
   16614:	push	{fp, lr}
   16618:	mov	fp, sp
   1661c:	sub	sp, sp, #24
   16620:	str	r0, [fp, #-8]
   16624:	str	r1, [sp, #12]
   16628:	ldr	r0, [fp, #-8]
   1662c:	bl	11240 <gettext@plt>
   16630:	str	r0, [sp, #8]
   16634:	ldr	r0, [sp, #8]
   16638:	ldr	r1, [fp, #-8]
   1663c:	cmp	r0, r1
   16640:	beq	16650 <__assert_fail@plt+0x52d8>
   16644:	ldr	r0, [sp, #8]
   16648:	str	r0, [fp, #-4]
   1664c:	b	1671c <__assert_fail@plt+0x53a4>
   16650:	bl	1a950 <__assert_fail@plt+0x95d8>
   16654:	str	r0, [sp, #4]
   16658:	ldr	r0, [sp, #4]
   1665c:	movw	r1, #51920	; 0xcad0
   16660:	movt	r1, #1
   16664:	bl	1a354 <__assert_fail@plt+0x8fdc>
   16668:	cmp	r0, #0
   1666c:	bne	166a4 <__assert_fail@plt+0x532c>
   16670:	ldr	r0, [fp, #-8]
   16674:	ldrb	r0, [r0]
   16678:	cmp	r0, #96	; 0x60
   1667c:	movw	r0, #0
   16680:	moveq	r0, #1
   16684:	tst	r0, #1
   16688:	movw	r0, #51930	; 0xcada
   1668c:	movt	r0, #1
   16690:	movw	r1, #51926	; 0xcad6
   16694:	movt	r1, #1
   16698:	movne	r0, r1
   1669c:	str	r0, [fp, #-4]
   166a0:	b	1671c <__assert_fail@plt+0x53a4>
   166a4:	ldr	r0, [sp, #4]
   166a8:	movw	r1, #51934	; 0xcade
   166ac:	movt	r1, #1
   166b0:	bl	1a354 <__assert_fail@plt+0x8fdc>
   166b4:	cmp	r0, #0
   166b8:	bne	166f0 <__assert_fail@plt+0x5378>
   166bc:	ldr	r0, [fp, #-8]
   166c0:	ldrb	r0, [r0]
   166c4:	cmp	r0, #96	; 0x60
   166c8:	movw	r0, #0
   166cc:	moveq	r0, #1
   166d0:	tst	r0, #1
   166d4:	movw	r0, #51946	; 0xcaea
   166d8:	movt	r0, #1
   166dc:	movw	r1, #51942	; 0xcae6
   166e0:	movt	r1, #1
   166e4:	movne	r0, r1
   166e8:	str	r0, [fp, #-4]
   166ec:	b	1671c <__assert_fail@plt+0x53a4>
   166f0:	ldr	r0, [sp, #12]
   166f4:	cmp	r0, #9
   166f8:	movw	r0, #0
   166fc:	moveq	r0, #1
   16700:	tst	r0, #1
   16704:	movw	r0, #51918	; 0xcace
   16708:	movt	r0, #1
   1670c:	movw	r1, #51914	; 0xcaca
   16710:	movt	r1, #1
   16714:	movne	r0, r1
   16718:	str	r0, [fp, #-4]
   1671c:	ldr	r0, [fp, #-4]
   16720:	mov	sp, fp
   16724:	pop	{fp, pc}
   16728:	push	{fp, lr}
   1672c:	mov	fp, sp
   16730:	sub	sp, sp, #24
   16734:	str	r0, [fp, #-4]
   16738:	movw	r0, #33	; 0x21
   1673c:	bl	1741c <__assert_fail@plt+0x60a4>
   16740:	str	r0, [sp, #12]
   16744:	ldr	r0, [sp, #12]
   16748:	ldr	r1, [fp, #-4]
   1674c:	add	r1, r1, #44	; 0x2c
   16750:	movw	r2, #32
   16754:	bl	112a0 <strncpy@plt>
   16758:	ldr	r1, [sp, #12]
   1675c:	movw	r2, #0
   16760:	strb	r2, [r1, #32]
   16764:	ldr	r1, [sp, #12]
   16768:	ldr	r2, [sp, #12]
   1676c:	str	r0, [sp, #8]
   16770:	mov	r0, r2
   16774:	str	r1, [sp, #4]
   16778:	bl	11258 <strlen@plt>
   1677c:	ldr	r1, [sp, #4]
   16780:	add	r0, r1, r0
   16784:	str	r0, [fp, #-8]
   16788:	ldr	r0, [sp, #12]
   1678c:	ldr	r1, [fp, #-8]
   16790:	cmp	r0, r1
   16794:	movw	r0, #0
   16798:	str	r0, [sp]
   1679c:	bcs	167c0 <__assert_fail@plt+0x5448>
   167a0:	ldr	r0, [fp, #-8]
   167a4:	mvn	r1, #0
   167a8:	add	r0, r0, r1
   167ac:	ldrb	r0, [r0]
   167b0:	cmp	r0, #32
   167b4:	movw	r0, #0
   167b8:	moveq	r0, #1
   167bc:	str	r0, [sp]
   167c0:	ldr	r0, [sp]
   167c4:	tst	r0, #1
   167c8:	beq	167f0 <__assert_fail@plt+0x5478>
   167cc:	b	167d0 <__assert_fail@plt+0x5458>
   167d0:	ldr	r0, [fp, #-8]
   167d4:	mvn	r1, #0
   167d8:	add	r2, r0, r1
   167dc:	str	r2, [fp, #-8]
   167e0:	add	r0, r0, r1
   167e4:	movw	r1, #0
   167e8:	strb	r1, [r0]
   167ec:	b	16788 <__assert_fail@plt+0x5410>
   167f0:	ldr	r0, [sp, #12]
   167f4:	mov	sp, fp
   167f8:	pop	{fp, pc}
   167fc:	push	{fp, lr}
   16800:	mov	fp, sp
   16804:	sub	sp, sp, #40	; 0x28
   16808:	str	r0, [fp, #-4]
   1680c:	str	r1, [fp, #-8]
   16810:	str	r2, [fp, #-12]
   16814:	str	r3, [fp, #-16]
   16818:	movw	r0, #0
   1681c:	str	r0, [sp, #20]
   16820:	str	r0, [sp, #16]
   16824:	str	r0, [sp, #12]
   16828:	ldr	r0, [fp, #-4]
   1682c:	bl	110cc <utmpxname@plt>
   16830:	str	r0, [sp, #4]
   16834:	bl	11144 <setutxent@plt>
   16838:	bl	1136c <getutxent@plt>
   1683c:	str	r0, [sp, #8]
   16840:	movw	r1, #0
   16844:	cmp	r0, r1
   16848:	beq	168b8 <__assert_fail@plt+0x5540>
   1684c:	ldr	r0, [sp, #8]
   16850:	ldr	r1, [fp, #-16]
   16854:	bl	168e0 <__assert_fail@plt+0x5568>
   16858:	tst	r0, #1
   1685c:	beq	168b4 <__assert_fail@plt+0x553c>
   16860:	ldr	r0, [sp, #20]
   16864:	ldr	r1, [sp, #16]
   16868:	cmp	r0, r1
   1686c:	bne	16890 <__assert_fail@plt+0x5518>
   16870:	ldr	r0, [sp, #12]
   16874:	add	r1, sp, #16
   16878:	movw	r2, #1
   1687c:	mvn	r3, #0
   16880:	movw	ip, #384	; 0x180
   16884:	str	ip, [sp]
   16888:	bl	176d0 <__assert_fail@plt+0x6358>
   1688c:	str	r0, [sp, #12]
   16890:	ldr	r0, [sp, #12]
   16894:	ldr	r1, [sp, #20]
   16898:	add	r2, r1, #1
   1689c:	str	r2, [sp, #20]
   168a0:	movw	r2, #384	; 0x180
   168a4:	mul	r1, r1, r2
   168a8:	add	r0, r0, r1
   168ac:	ldr	r1, [sp, #8]
   168b0:	bl	110fc <memcpy@plt>
   168b4:	b	16838 <__assert_fail@plt+0x54c0>
   168b8:	bl	112dc <endutxent@plt>
   168bc:	ldr	r0, [sp, #20]
   168c0:	ldr	r1, [fp, #-8]
   168c4:	str	r0, [r1]
   168c8:	ldr	r0, [sp, #12]
   168cc:	ldr	r1, [fp, #-12]
   168d0:	str	r0, [r1]
   168d4:	movw	r0, #0
   168d8:	mov	sp, fp
   168dc:	pop	{fp, pc}
   168e0:	push	{fp, lr}
   168e4:	mov	fp, sp
   168e8:	sub	sp, sp, #24
   168ec:	str	r0, [fp, #-8]
   168f0:	str	r1, [sp, #12]
   168f4:	ldr	r0, [fp, #-8]
   168f8:	ldrb	r0, [r0, #44]	; 0x2c
   168fc:	cmp	r0, #0
   16900:	movw	r0, #0
   16904:	str	r0, [sp, #4]
   16908:	beq	16938 <__assert_fail@plt+0x55c0>
   1690c:	ldr	r0, [fp, #-8]
   16910:	ldrsh	r0, [r0]
   16914:	cmp	r0, #7
   16918:	movw	r0, #1
   1691c:	str	r0, [sp]
   16920:	beq	16930 <__assert_fail@plt+0x55b8>
   16924:	movw	r0, #0
   16928:	str	r0, [sp]
   1692c:	b	16930 <__assert_fail@plt+0x55b8>
   16930:	ldr	r0, [sp]
   16934:	str	r0, [sp, #4]
   16938:	ldr	r0, [sp, #4]
   1693c:	and	r0, r0, #1
   16940:	strb	r0, [sp, #11]
   16944:	ldr	r0, [sp, #12]
   16948:	and	r0, r0, #2
   1694c:	cmp	r0, #0
   16950:	beq	16970 <__assert_fail@plt+0x55f8>
   16954:	ldrb	r0, [sp, #11]
   16958:	tst	r0, #1
   1695c:	bne	16970 <__assert_fail@plt+0x55f8>
   16960:	movw	r0, #0
   16964:	and	r0, r0, #1
   16968:	strb	r0, [fp, #-1]
   1696c:	b	169e4 <__assert_fail@plt+0x566c>
   16970:	ldr	r0, [sp, #12]
   16974:	and	r0, r0, #1
   16978:	cmp	r0, #0
   1697c:	beq	169d8 <__assert_fail@plt+0x5660>
   16980:	ldrb	r0, [sp, #11]
   16984:	tst	r0, #1
   16988:	beq	169d8 <__assert_fail@plt+0x5660>
   1698c:	ldr	r0, [fp, #-8]
   16990:	ldr	r0, [r0, #4]
   16994:	movw	r1, #0
   16998:	cmp	r1, r0
   1699c:	bge	169d8 <__assert_fail@plt+0x5660>
   169a0:	ldr	r0, [fp, #-8]
   169a4:	ldr	r0, [r0, #4]
   169a8:	movw	r1, #0
   169ac:	bl	1121c <kill@plt>
   169b0:	cmp	r0, #0
   169b4:	bge	169d8 <__assert_fail@plt+0x5660>
   169b8:	bl	1127c <__errno_location@plt>
   169bc:	ldr	r0, [r0]
   169c0:	cmp	r0, #3
   169c4:	bne	169d8 <__assert_fail@plt+0x5660>
   169c8:	movw	r0, #0
   169cc:	and	r0, r0, #1
   169d0:	strb	r0, [fp, #-1]
   169d4:	b	169e4 <__assert_fail@plt+0x566c>
   169d8:	movw	r0, #1
   169dc:	and	r0, r0, #1
   169e0:	strb	r0, [fp, #-1]
   169e4:	ldrb	r0, [fp, #-1]
   169e8:	and	r0, r0, #1
   169ec:	mov	sp, fp
   169f0:	pop	{fp, pc}
   169f4:	push	{fp, lr}
   169f8:	mov	fp, sp
   169fc:	sub	sp, sp, #16
   16a00:	str	r0, [fp, #-4]
   16a04:	str	r1, [sp, #8]
   16a08:	str	r2, [sp, #4]
   16a0c:	ldr	r0, [fp, #-4]
   16a10:	ldr	r1, [sp, #8]
   16a14:	ldr	r2, [sp, #4]
   16a18:	bl	16a24 <__assert_fail@plt+0x56ac>
   16a1c:	mov	sp, fp
   16a20:	pop	{fp, pc}
   16a24:	push	{fp, lr}
   16a28:	mov	fp, sp
   16a2c:	sub	sp, sp, #24
   16a30:	str	r0, [fp, #-8]
   16a34:	str	r1, [sp, #12]
   16a38:	str	r2, [sp, #8]
   16a3c:	ldr	r0, [fp, #-8]
   16a40:	bl	16b24 <__assert_fail@plt+0x57ac>
   16a44:	str	r0, [sp, #4]
   16a48:	ldr	r0, [sp, #4]
   16a4c:	movw	r1, #0
   16a50:	cmp	r0, r1
   16a54:	bne	16a7c <__assert_fail@plt+0x5704>
   16a58:	ldr	r0, [sp, #8]
   16a5c:	cmp	r0, #0
   16a60:	bls	16a70 <__assert_fail@plt+0x56f8>
   16a64:	ldr	r0, [sp, #12]
   16a68:	movw	r1, #0
   16a6c:	strb	r1, [r0]
   16a70:	movw	r0, #22
   16a74:	str	r0, [fp, #-4]
   16a78:	b	16af8 <__assert_fail@plt+0x5780>
   16a7c:	ldr	r0, [sp, #4]
   16a80:	bl	11258 <strlen@plt>
   16a84:	str	r0, [sp]
   16a88:	ldr	r0, [sp]
   16a8c:	ldr	r1, [sp, #8]
   16a90:	cmp	r0, r1
   16a94:	bcs	16ab8 <__assert_fail@plt+0x5740>
   16a98:	ldr	r0, [sp, #12]
   16a9c:	ldr	r1, [sp, #4]
   16aa0:	ldr	r2, [sp]
   16aa4:	add	r2, r2, #1
   16aa8:	bl	110fc <memcpy@plt>
   16aac:	movw	r0, #0
   16ab0:	str	r0, [fp, #-4]
   16ab4:	b	16af8 <__assert_fail@plt+0x5780>
   16ab8:	ldr	r0, [sp, #8]
   16abc:	cmp	r0, #0
   16ac0:	bls	16af0 <__assert_fail@plt+0x5778>
   16ac4:	ldr	r0, [sp, #12]
   16ac8:	ldr	r1, [sp, #4]
   16acc:	ldr	r2, [sp, #8]
   16ad0:	sub	r2, r2, #1
   16ad4:	bl	110fc <memcpy@plt>
   16ad8:	ldr	r0, [sp, #12]
   16adc:	ldr	r1, [sp, #8]
   16ae0:	sub	r1, r1, #1
   16ae4:	add	r0, r0, r1
   16ae8:	movw	r1, #0
   16aec:	strb	r1, [r0]
   16af0:	movw	r0, #34	; 0x22
   16af4:	str	r0, [fp, #-4]
   16af8:	ldr	r0, [fp, #-4]
   16afc:	mov	sp, fp
   16b00:	pop	{fp, pc}
   16b04:	push	{fp, lr}
   16b08:	mov	fp, sp
   16b0c:	sub	sp, sp, #8
   16b10:	str	r0, [sp, #4]
   16b14:	ldr	r0, [sp, #4]
   16b18:	bl	16b24 <__assert_fail@plt+0x57ac>
   16b1c:	mov	sp, fp
   16b20:	pop	{fp, pc}
   16b24:	push	{fp, lr}
   16b28:	mov	fp, sp
   16b2c:	sub	sp, sp, #8
   16b30:	str	r0, [sp, #4]
   16b34:	ldr	r0, [sp, #4]
   16b38:	movw	r1, #0
   16b3c:	bl	112e8 <setlocale@plt>
   16b40:	str	r0, [sp]
   16b44:	ldr	r0, [sp]
   16b48:	mov	sp, fp
   16b4c:	pop	{fp, pc}
   16b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b54:	add	fp, sp, #28
   16b58:	sub	sp, sp, #196	; 0xc4
   16b5c:	ldr	ip, [fp, #12]
   16b60:	ldr	lr, [fp, #8]
   16b64:	str	r0, [fp, #-32]	; 0xffffffe0
   16b68:	str	r1, [fp, #-36]	; 0xffffffdc
   16b6c:	str	r2, [fp, #-40]	; 0xffffffd8
   16b70:	str	r3, [fp, #-44]	; 0xffffffd4
   16b74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16b78:	movw	r1, #0
   16b7c:	cmp	r0, r1
   16b80:	beq	16bb4 <__assert_fail@plt+0x583c>
   16b84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16b8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16b90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16b94:	movw	ip, #52036	; 0xcb44
   16b98:	movt	ip, #1
   16b9c:	str	r1, [fp, #-48]	; 0xffffffd0
   16ba0:	mov	r1, ip
   16ba4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   16ba8:	str	ip, [sp]
   16bac:	bl	11270 <fprintf@plt>
   16bb0:	b	16bcc <__assert_fail@plt+0x5854>
   16bb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16bb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16bbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16bc0:	movw	r1, #52048	; 0xcb50
   16bc4:	movt	r1, #1
   16bc8:	bl	11270 <fprintf@plt>
   16bcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16bd0:	movw	r1, #52055	; 0xcb57
   16bd4:	movt	r1, #1
   16bd8:	str	r0, [fp, #-52]	; 0xffffffcc
   16bdc:	mov	r0, r1
   16be0:	bl	11240 <gettext@plt>
   16be4:	movw	r1, #52773	; 0xce25
   16be8:	movt	r1, #1
   16bec:	movw	r3, #2022	; 0x7e6
   16bf0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16bf4:	str	r0, [fp, #-56]	; 0xffffffc8
   16bf8:	mov	r0, r2
   16bfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16c00:	bl	11270 <fprintf@plt>
   16c04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16c08:	movw	r2, #50946	; 0xc702
   16c0c:	movt	r2, #1
   16c10:	str	r0, [fp, #-60]	; 0xffffffc4
   16c14:	mov	r0, r2
   16c18:	str	r2, [fp, #-64]	; 0xffffffc0
   16c1c:	bl	11090 <fputs_unlocked@plt>
   16c20:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16c24:	movw	r2, #52059	; 0xcb5b
   16c28:	movt	r2, #1
   16c2c:	str	r0, [fp, #-68]	; 0xffffffbc
   16c30:	mov	r0, r2
   16c34:	str	r1, [fp, #-72]	; 0xffffffb8
   16c38:	bl	11240 <gettext@plt>
   16c3c:	movw	r2, #52230	; 0xcc06
   16c40:	movt	r2, #1
   16c44:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16c48:	str	r0, [fp, #-76]	; 0xffffffb4
   16c4c:	mov	r0, r1
   16c50:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16c54:	bl	11270 <fprintf@plt>
   16c58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16c5c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16c60:	str	r0, [fp, #-80]	; 0xffffffb0
   16c64:	mov	r0, r2
   16c68:	bl	11090 <fputs_unlocked@plt>
   16c6c:	ldr	r1, [fp, #12]
   16c70:	cmp	r1, #9
   16c74:	str	r1, [fp, #-84]	; 0xffffffac
   16c78:	bhi	17094 <__assert_fail@plt+0x5d1c>
   16c7c:	add	r0, pc, #8
   16c80:	ldr	r1, [fp, #-84]	; 0xffffffac
   16c84:	ldr	r0, [r0, r1, lsl #2]
   16c88:	mov	pc, r0
   16c8c:			; <UNDEFINED> instruction: 0x00016cb4
   16c90:			; <UNDEFINED> instruction: 0x00016cb8
   16c94:	strdeq	r6, [r1], -r0
   16c98:	andeq	r6, r1, r0, lsr sp
   16c9c:	andeq	r6, r1, r8, lsl #27
   16ca0:	andeq	r6, r1, ip, ror #27
   16ca4:	andeq	r6, r1, ip, asr lr
   16ca8:	ldrdeq	r6, [r1], -r8
   16cac:	andeq	r6, r1, r0, ror #30
   16cb0:	strdeq	r6, [r1], -r4
   16cb4:	b	17130 <__assert_fail@plt+0x5db8>
   16cb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16cbc:	movw	r1, #52264	; 0xcc28
   16cc0:	movt	r1, #1
   16cc4:	str	r0, [fp, #-88]	; 0xffffffa8
   16cc8:	mov	r0, r1
   16ccc:	bl	11240 <gettext@plt>
   16cd0:	ldr	r1, [fp, #8]
   16cd4:	ldr	r2, [r1]
   16cd8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16cdc:	str	r0, [fp, #-92]	; 0xffffffa4
   16ce0:	mov	r0, r1
   16ce4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16ce8:	bl	11270 <fprintf@plt>
   16cec:	b	17130 <__assert_fail@plt+0x5db8>
   16cf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16cf4:	movw	r1, #52280	; 0xcc38
   16cf8:	movt	r1, #1
   16cfc:	str	r0, [fp, #-96]	; 0xffffffa0
   16d00:	mov	r0, r1
   16d04:	bl	11240 <gettext@plt>
   16d08:	ldr	r1, [fp, #8]
   16d0c:	ldr	r2, [r1]
   16d10:	ldr	r1, [fp, #8]
   16d14:	ldr	r3, [r1, #4]
   16d18:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16d1c:	str	r0, [fp, #-100]	; 0xffffff9c
   16d20:	mov	r0, r1
   16d24:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16d28:	bl	11270 <fprintf@plt>
   16d2c:	b	17130 <__assert_fail@plt+0x5db8>
   16d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d34:	movw	r1, #52303	; 0xcc4f
   16d38:	movt	r1, #1
   16d3c:	str	r0, [fp, #-104]	; 0xffffff98
   16d40:	mov	r0, r1
   16d44:	bl	11240 <gettext@plt>
   16d48:	ldr	r1, [fp, #8]
   16d4c:	ldr	r2, [r1]
   16d50:	ldr	r1, [fp, #8]
   16d54:	ldr	r3, [r1, #4]
   16d58:	ldr	r1, [fp, #8]
   16d5c:	ldr	r1, [r1, #8]
   16d60:	ldr	ip, [fp, #-104]	; 0xffffff98
   16d64:	str	r0, [fp, #-108]	; 0xffffff94
   16d68:	mov	r0, ip
   16d6c:	ldr	lr, [fp, #-108]	; 0xffffff94
   16d70:	str	r1, [sp, #112]	; 0x70
   16d74:	mov	r1, lr
   16d78:	ldr	r4, [sp, #112]	; 0x70
   16d7c:	str	r4, [sp]
   16d80:	bl	11270 <fprintf@plt>
   16d84:	b	17130 <__assert_fail@plt+0x5db8>
   16d88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d8c:	movw	r1, #52331	; 0xcc6b
   16d90:	movt	r1, #1
   16d94:	str	r0, [sp, #108]	; 0x6c
   16d98:	mov	r0, r1
   16d9c:	bl	11240 <gettext@plt>
   16da0:	ldr	r1, [fp, #8]
   16da4:	ldr	r2, [r1]
   16da8:	ldr	r1, [fp, #8]
   16dac:	ldr	r3, [r1, #4]
   16db0:	ldr	r1, [fp, #8]
   16db4:	ldr	r1, [r1, #8]
   16db8:	ldr	ip, [fp, #8]
   16dbc:	ldr	ip, [ip, #12]
   16dc0:	ldr	lr, [sp, #108]	; 0x6c
   16dc4:	str	r0, [sp, #104]	; 0x68
   16dc8:	mov	r0, lr
   16dcc:	ldr	r4, [sp, #104]	; 0x68
   16dd0:	str	r1, [sp, #100]	; 0x64
   16dd4:	mov	r1, r4
   16dd8:	ldr	r5, [sp, #100]	; 0x64
   16ddc:	str	r5, [sp]
   16de0:	str	ip, [sp, #4]
   16de4:	bl	11270 <fprintf@plt>
   16de8:	b	17130 <__assert_fail@plt+0x5db8>
   16dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16df0:	movw	r1, #52363	; 0xcc8b
   16df4:	movt	r1, #1
   16df8:	str	r0, [sp, #96]	; 0x60
   16dfc:	mov	r0, r1
   16e00:	bl	11240 <gettext@plt>
   16e04:	ldr	r1, [fp, #8]
   16e08:	ldr	r2, [r1]
   16e0c:	ldr	r1, [fp, #8]
   16e10:	ldr	r3, [r1, #4]
   16e14:	ldr	r1, [fp, #8]
   16e18:	ldr	r1, [r1, #8]
   16e1c:	ldr	ip, [fp, #8]
   16e20:	ldr	ip, [ip, #12]
   16e24:	ldr	lr, [fp, #8]
   16e28:	ldr	lr, [lr, #16]
   16e2c:	ldr	r4, [sp, #96]	; 0x60
   16e30:	str	r0, [sp, #92]	; 0x5c
   16e34:	mov	r0, r4
   16e38:	ldr	r5, [sp, #92]	; 0x5c
   16e3c:	str	r1, [sp, #88]	; 0x58
   16e40:	mov	r1, r5
   16e44:	ldr	r6, [sp, #88]	; 0x58
   16e48:	str	r6, [sp]
   16e4c:	str	ip, [sp, #4]
   16e50:	str	lr, [sp, #8]
   16e54:	bl	11270 <fprintf@plt>
   16e58:	b	17130 <__assert_fail@plt+0x5db8>
   16e5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16e60:	movw	r1, #52399	; 0xccaf
   16e64:	movt	r1, #1
   16e68:	str	r0, [sp, #84]	; 0x54
   16e6c:	mov	r0, r1
   16e70:	bl	11240 <gettext@plt>
   16e74:	ldr	r1, [fp, #8]
   16e78:	ldr	r2, [r1]
   16e7c:	ldr	r1, [fp, #8]
   16e80:	ldr	r3, [r1, #4]
   16e84:	ldr	r1, [fp, #8]
   16e88:	ldr	r1, [r1, #8]
   16e8c:	ldr	ip, [fp, #8]
   16e90:	ldr	ip, [ip, #12]
   16e94:	ldr	lr, [fp, #8]
   16e98:	ldr	lr, [lr, #16]
   16e9c:	ldr	r4, [fp, #8]
   16ea0:	ldr	r4, [r4, #20]
   16ea4:	ldr	r5, [sp, #84]	; 0x54
   16ea8:	str	r0, [sp, #80]	; 0x50
   16eac:	mov	r0, r5
   16eb0:	ldr	r6, [sp, #80]	; 0x50
   16eb4:	str	r1, [sp, #76]	; 0x4c
   16eb8:	mov	r1, r6
   16ebc:	ldr	r7, [sp, #76]	; 0x4c
   16ec0:	str	r7, [sp]
   16ec4:	str	ip, [sp, #4]
   16ec8:	str	lr, [sp, #8]
   16ecc:	str	r4, [sp, #12]
   16ed0:	bl	11270 <fprintf@plt>
   16ed4:	b	17130 <__assert_fail@plt+0x5db8>
   16ed8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16edc:	movw	r1, #52439	; 0xccd7
   16ee0:	movt	r1, #1
   16ee4:	str	r0, [sp, #72]	; 0x48
   16ee8:	mov	r0, r1
   16eec:	bl	11240 <gettext@plt>
   16ef0:	ldr	r1, [fp, #8]
   16ef4:	ldr	r2, [r1]
   16ef8:	ldr	r1, [fp, #8]
   16efc:	ldr	r3, [r1, #4]
   16f00:	ldr	r1, [fp, #8]
   16f04:	ldr	r1, [r1, #8]
   16f08:	ldr	ip, [fp, #8]
   16f0c:	ldr	ip, [ip, #12]
   16f10:	ldr	lr, [fp, #8]
   16f14:	ldr	lr, [lr, #16]
   16f18:	ldr	r4, [fp, #8]
   16f1c:	ldr	r4, [r4, #20]
   16f20:	ldr	r5, [fp, #8]
   16f24:	ldr	r5, [r5, #24]
   16f28:	ldr	r6, [sp, #72]	; 0x48
   16f2c:	str	r0, [sp, #68]	; 0x44
   16f30:	mov	r0, r6
   16f34:	ldr	r7, [sp, #68]	; 0x44
   16f38:	str	r1, [sp, #64]	; 0x40
   16f3c:	mov	r1, r7
   16f40:	ldr	r8, [sp, #64]	; 0x40
   16f44:	str	r8, [sp]
   16f48:	str	ip, [sp, #4]
   16f4c:	str	lr, [sp, #8]
   16f50:	str	r4, [sp, #12]
   16f54:	str	r5, [sp, #16]
   16f58:	bl	11270 <fprintf@plt>
   16f5c:	b	17130 <__assert_fail@plt+0x5db8>
   16f60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f64:	movw	r1, #52483	; 0xcd03
   16f68:	movt	r1, #1
   16f6c:	str	r0, [sp, #60]	; 0x3c
   16f70:	mov	r0, r1
   16f74:	bl	11240 <gettext@plt>
   16f78:	ldr	r1, [fp, #8]
   16f7c:	ldr	r2, [r1]
   16f80:	ldr	r1, [fp, #8]
   16f84:	ldr	r3, [r1, #4]
   16f88:	ldr	r1, [fp, #8]
   16f8c:	ldr	r1, [r1, #8]
   16f90:	ldr	ip, [fp, #8]
   16f94:	ldr	ip, [ip, #12]
   16f98:	ldr	lr, [fp, #8]
   16f9c:	ldr	lr, [lr, #16]
   16fa0:	ldr	r4, [fp, #8]
   16fa4:	ldr	r4, [r4, #20]
   16fa8:	ldr	r5, [fp, #8]
   16fac:	ldr	r5, [r5, #24]
   16fb0:	ldr	r6, [fp, #8]
   16fb4:	ldr	r6, [r6, #28]
   16fb8:	ldr	r7, [sp, #60]	; 0x3c
   16fbc:	str	r0, [sp, #56]	; 0x38
   16fc0:	mov	r0, r7
   16fc4:	ldr	r8, [sp, #56]	; 0x38
   16fc8:	str	r1, [sp, #52]	; 0x34
   16fcc:	mov	r1, r8
   16fd0:	ldr	r9, [sp, #52]	; 0x34
   16fd4:	str	r9, [sp]
   16fd8:	str	ip, [sp, #4]
   16fdc:	str	lr, [sp, #8]
   16fe0:	str	r4, [sp, #12]
   16fe4:	str	r5, [sp, #16]
   16fe8:	str	r6, [sp, #20]
   16fec:	bl	11270 <fprintf@plt>
   16ff0:	b	17130 <__assert_fail@plt+0x5db8>
   16ff4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ff8:	movw	r1, #52531	; 0xcd33
   16ffc:	movt	r1, #1
   17000:	str	r0, [sp, #48]	; 0x30
   17004:	mov	r0, r1
   17008:	bl	11240 <gettext@plt>
   1700c:	ldr	r1, [fp, #8]
   17010:	ldr	r2, [r1]
   17014:	ldr	r1, [fp, #8]
   17018:	ldr	r3, [r1, #4]
   1701c:	ldr	r1, [fp, #8]
   17020:	ldr	r1, [r1, #8]
   17024:	ldr	ip, [fp, #8]
   17028:	ldr	ip, [ip, #12]
   1702c:	ldr	lr, [fp, #8]
   17030:	ldr	lr, [lr, #16]
   17034:	ldr	r4, [fp, #8]
   17038:	ldr	r4, [r4, #20]
   1703c:	ldr	r5, [fp, #8]
   17040:	ldr	r5, [r5, #24]
   17044:	ldr	r6, [fp, #8]
   17048:	ldr	r6, [r6, #28]
   1704c:	ldr	r7, [fp, #8]
   17050:	ldr	r7, [r7, #32]
   17054:	ldr	r8, [sp, #48]	; 0x30
   17058:	str	r0, [sp, #44]	; 0x2c
   1705c:	mov	r0, r8
   17060:	ldr	r9, [sp, #44]	; 0x2c
   17064:	str	r1, [sp, #40]	; 0x28
   17068:	mov	r1, r9
   1706c:	ldr	sl, [sp, #40]	; 0x28
   17070:	str	sl, [sp]
   17074:	str	ip, [sp, #4]
   17078:	str	lr, [sp, #8]
   1707c:	str	r4, [sp, #12]
   17080:	str	r5, [sp, #16]
   17084:	str	r6, [sp, #20]
   17088:	str	r7, [sp, #24]
   1708c:	bl	11270 <fprintf@plt>
   17090:	b	17130 <__assert_fail@plt+0x5db8>
   17094:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17098:	movw	r1, #52583	; 0xcd67
   1709c:	movt	r1, #1
   170a0:	str	r0, [sp, #36]	; 0x24
   170a4:	mov	r0, r1
   170a8:	bl	11240 <gettext@plt>
   170ac:	ldr	r1, [fp, #8]
   170b0:	ldr	r2, [r1]
   170b4:	ldr	r1, [fp, #8]
   170b8:	ldr	r3, [r1, #4]
   170bc:	ldr	r1, [fp, #8]
   170c0:	ldr	r1, [r1, #8]
   170c4:	ldr	ip, [fp, #8]
   170c8:	ldr	ip, [ip, #12]
   170cc:	ldr	lr, [fp, #8]
   170d0:	ldr	lr, [lr, #16]
   170d4:	ldr	r4, [fp, #8]
   170d8:	ldr	r4, [r4, #20]
   170dc:	ldr	r5, [fp, #8]
   170e0:	ldr	r5, [r5, #24]
   170e4:	ldr	r6, [fp, #8]
   170e8:	ldr	r6, [r6, #28]
   170ec:	ldr	r7, [fp, #8]
   170f0:	ldr	r7, [r7, #32]
   170f4:	ldr	r8, [sp, #36]	; 0x24
   170f8:	str	r0, [sp, #32]
   170fc:	mov	r0, r8
   17100:	ldr	r9, [sp, #32]
   17104:	str	r1, [sp, #28]
   17108:	mov	r1, r9
   1710c:	ldr	sl, [sp, #28]
   17110:	str	sl, [sp]
   17114:	str	ip, [sp, #4]
   17118:	str	lr, [sp, #8]
   1711c:	str	r4, [sp, #12]
   17120:	str	r5, [sp, #16]
   17124:	str	r6, [sp, #20]
   17128:	str	r7, [sp, #24]
   1712c:	bl	11270 <fprintf@plt>
   17130:	sub	sp, fp, #28
   17134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17138:	push	{fp, lr}
   1713c:	mov	fp, sp
   17140:	sub	sp, sp, #32
   17144:	ldr	ip, [fp, #8]
   17148:	str	r0, [fp, #-4]
   1714c:	str	r1, [fp, #-8]
   17150:	str	r2, [fp, #-12]
   17154:	str	r3, [sp, #16]
   17158:	movw	r0, #0
   1715c:	str	r0, [sp, #12]
   17160:	ldr	r0, [fp, #8]
   17164:	ldr	r1, [sp, #12]
   17168:	add	r0, r0, r1, lsl #2
   1716c:	ldr	r0, [r0]
   17170:	movw	r1, #0
   17174:	cmp	r0, r1
   17178:	beq	17190 <__assert_fail@plt+0x5e18>
   1717c:	b	17180 <__assert_fail@plt+0x5e08>
   17180:	ldr	r0, [sp, #12]
   17184:	add	r0, r0, #1
   17188:	str	r0, [sp, #12]
   1718c:	b	17160 <__assert_fail@plt+0x5de8>
   17190:	ldr	r0, [fp, #-4]
   17194:	ldr	r1, [fp, #-8]
   17198:	ldr	r2, [fp, #-12]
   1719c:	ldr	r3, [sp, #16]
   171a0:	ldr	ip, [fp, #8]
   171a4:	ldr	lr, [sp, #12]
   171a8:	str	ip, [sp]
   171ac:	str	lr, [sp, #4]
   171b0:	bl	16b50 <__assert_fail@plt+0x57d8>
   171b4:	mov	sp, fp
   171b8:	pop	{fp, pc}
   171bc:	push	{fp, lr}
   171c0:	mov	fp, sp
   171c4:	sub	sp, sp, #80	; 0x50
   171c8:	ldr	ip, [fp, #8]
   171cc:	str	ip, [fp, #-4]
   171d0:	str	r0, [fp, #-8]
   171d4:	str	r1, [fp, #-12]
   171d8:	str	r2, [fp, #-16]
   171dc:	str	r3, [fp, #-20]	; 0xffffffec
   171e0:	movw	r0, #0
   171e4:	str	r0, [fp, #-24]	; 0xffffffe8
   171e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171ec:	cmp	r0, #10
   171f0:	movw	r0, #0
   171f4:	str	r0, [sp, #12]
   171f8:	bcs	17230 <__assert_fail@plt+0x5eb8>
   171fc:	ldr	r0, [fp, #-4]
   17200:	add	r1, r0, #4
   17204:	str	r1, [fp, #-4]
   17208:	ldr	r0, [r0]
   1720c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17210:	add	r2, sp, #16
   17214:	add	r1, r2, r1, lsl #2
   17218:	str	r0, [r1]
   1721c:	movw	r1, #0
   17220:	cmp	r0, r1
   17224:	movw	r0, #0
   17228:	movne	r0, #1
   1722c:	str	r0, [sp, #12]
   17230:	ldr	r0, [sp, #12]
   17234:	tst	r0, #1
   17238:	beq	17250 <__assert_fail@plt+0x5ed8>
   1723c:	b	17240 <__assert_fail@plt+0x5ec8>
   17240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17244:	add	r0, r0, #1
   17248:	str	r0, [fp, #-24]	; 0xffffffe8
   1724c:	b	171e8 <__assert_fail@plt+0x5e70>
   17250:	add	r0, sp, #16
   17254:	ldr	r1, [fp, #-8]
   17258:	ldr	r2, [fp, #-12]
   1725c:	ldr	r3, [fp, #-16]
   17260:	ldr	ip, [fp, #-20]	; 0xffffffec
   17264:	ldr	lr, [fp, #-24]	; 0xffffffe8
   17268:	str	r0, [sp, #8]
   1726c:	mov	r0, r1
   17270:	mov	r1, r2
   17274:	mov	r2, r3
   17278:	mov	r3, ip
   1727c:	ldr	ip, [sp, #8]
   17280:	str	ip, [sp]
   17284:	str	lr, [sp, #4]
   17288:	bl	16b50 <__assert_fail@plt+0x57d8>
   1728c:	mov	sp, fp
   17290:	pop	{fp, pc}
   17294:	push	{fp, lr}
   17298:	mov	fp, sp
   1729c:	sub	sp, sp, #24
   172a0:	str	r0, [fp, #-4]
   172a4:	str	r1, [fp, #-8]
   172a8:	str	r2, [sp, #12]
   172ac:	str	r3, [sp, #8]
   172b0:	add	r0, fp, #8
   172b4:	str	r0, [sp, #4]
   172b8:	ldr	r0, [fp, #-4]
   172bc:	ldr	r1, [fp, #-8]
   172c0:	ldr	r2, [sp, #12]
   172c4:	ldr	r3, [sp, #8]
   172c8:	ldr	ip, [sp, #4]
   172cc:	mov	lr, sp
   172d0:	str	ip, [lr]
   172d4:	bl	171bc <__assert_fail@plt+0x5e44>
   172d8:	add	r0, sp, #4
   172dc:	mov	sp, fp
   172e0:	pop	{fp, pc}
   172e4:	push	{fp, lr}
   172e8:	mov	fp, sp
   172ec:	sub	sp, sp, #16
   172f0:	movw	r0, #53628	; 0xd17c
   172f4:	movt	r0, #2
   172f8:	ldr	r1, [r0]
   172fc:	movw	r0, #50946	; 0xc702
   17300:	movt	r0, #1
   17304:	bl	11090 <fputs_unlocked@plt>
   17308:	movw	r1, #52643	; 0xcda3
   1730c:	movt	r1, #1
   17310:	str	r0, [fp, #-4]
   17314:	mov	r0, r1
   17318:	bl	11240 <gettext@plt>
   1731c:	movw	r1, #52663	; 0xcdb7
   17320:	movt	r1, #1
   17324:	bl	110b4 <printf@plt>
   17328:	movw	r1, #52685	; 0xcdcd
   1732c:	movt	r1, #1
   17330:	str	r0, [sp, #8]
   17334:	mov	r0, r1
   17338:	bl	11240 <gettext@plt>
   1733c:	movw	r1, #50532	; 0xc564
   17340:	movt	r1, #1
   17344:	movw	r2, #50755	; 0xc643
   17348:	movt	r2, #1
   1734c:	bl	110b4 <printf@plt>
   17350:	movw	r1, #52705	; 0xcde1
   17354:	movt	r1, #1
   17358:	str	r0, [sp, #4]
   1735c:	mov	r0, r1
   17360:	bl	11240 <gettext@plt>
   17364:	movw	r1, #52744	; 0xce08
   17368:	movt	r1, #1
   1736c:	bl	110b4 <printf@plt>
   17370:	mov	sp, fp
   17374:	pop	{fp, pc}
   17378:	push	{fp, lr}
   1737c:	mov	fp, sp
   17380:	sub	sp, sp, #16
   17384:	str	r0, [fp, #-4]
   17388:	str	r1, [sp, #8]
   1738c:	str	r2, [sp, #4]
   17390:	ldr	r0, [fp, #-4]
   17394:	ldr	r1, [sp, #8]
   17398:	ldr	r2, [sp, #4]
   1739c:	bl	173a8 <__assert_fail@plt+0x6030>
   173a0:	mov	sp, fp
   173a4:	pop	{fp, pc}
   173a8:	push	{fp, lr}
   173ac:	mov	fp, sp
   173b0:	sub	sp, sp, #16
   173b4:	str	r0, [fp, #-4]
   173b8:	str	r1, [sp, #8]
   173bc:	str	r2, [sp, #4]
   173c0:	ldr	r0, [fp, #-4]
   173c4:	ldr	r1, [sp, #8]
   173c8:	ldr	r2, [sp, #4]
   173cc:	bl	1aa5c <__assert_fail@plt+0x96e4>
   173d0:	str	r0, [sp]
   173d4:	ldr	r0, [sp]
   173d8:	movw	r1, #0
   173dc:	cmp	r0, r1
   173e0:	bne	17410 <__assert_fail@plt+0x6098>
   173e4:	ldr	r0, [fp, #-4]
   173e8:	movw	r1, #0
   173ec:	cmp	r0, r1
   173f0:	beq	1740c <__assert_fail@plt+0x6094>
   173f4:	ldr	r0, [sp, #8]
   173f8:	cmp	r0, #0
   173fc:	beq	17410 <__assert_fail@plt+0x6098>
   17400:	ldr	r0, [sp, #4]
   17404:	cmp	r0, #0
   17408:	beq	17410 <__assert_fail@plt+0x6098>
   1740c:	bl	1a154 <__assert_fail@plt+0x8ddc>
   17410:	ldr	r0, [sp]
   17414:	mov	sp, fp
   17418:	pop	{fp, pc}
   1741c:	push	{fp, lr}
   17420:	mov	fp, sp
   17424:	sub	sp, sp, #8
   17428:	str	r0, [sp, #4]
   1742c:	ldr	r0, [sp, #4]
   17430:	bl	1a240 <__assert_fail@plt+0x8ec8>
   17434:	bl	17440 <__assert_fail@plt+0x60c8>
   17438:	mov	sp, fp
   1743c:	pop	{fp, pc}
   17440:	push	{fp, lr}
   17444:	mov	fp, sp
   17448:	sub	sp, sp, #8
   1744c:	str	r0, [sp, #4]
   17450:	ldr	r0, [sp, #4]
   17454:	movw	r1, #0
   17458:	cmp	r0, r1
   1745c:	bne	17464 <__assert_fail@plt+0x60ec>
   17460:	bl	1a154 <__assert_fail@plt+0x8ddc>
   17464:	ldr	r0, [sp, #4]
   17468:	mov	sp, fp
   1746c:	pop	{fp, pc}
   17470:	push	{fp, lr}
   17474:	mov	fp, sp
   17478:	sub	sp, sp, #8
   1747c:	str	r0, [sp, #4]
   17480:	ldr	r0, [sp, #4]
   17484:	bl	1a798 <__assert_fail@plt+0x9420>
   17488:	bl	17440 <__assert_fail@plt+0x60c8>
   1748c:	mov	sp, fp
   17490:	pop	{fp, pc}
   17494:	push	{fp, lr}
   17498:	mov	fp, sp
   1749c:	sub	sp, sp, #8
   174a0:	str	r0, [sp, #4]
   174a4:	ldr	r0, [sp, #4]
   174a8:	bl	1741c <__assert_fail@plt+0x60a4>
   174ac:	mov	sp, fp
   174b0:	pop	{fp, pc}
   174b4:	push	{fp, lr}
   174b8:	mov	fp, sp
   174bc:	sub	sp, sp, #16
   174c0:	str	r0, [fp, #-4]
   174c4:	str	r1, [sp, #8]
   174c8:	ldr	r0, [fp, #-4]
   174cc:	ldr	r1, [sp, #8]
   174d0:	bl	1a2b0 <__assert_fail@plt+0x8f38>
   174d4:	str	r0, [sp, #4]
   174d8:	ldr	r0, [sp, #4]
   174dc:	movw	r1, #0
   174e0:	cmp	r0, r1
   174e4:	bne	17508 <__assert_fail@plt+0x6190>
   174e8:	ldr	r0, [fp, #-4]
   174ec:	movw	r1, #0
   174f0:	cmp	r0, r1
   174f4:	beq	17504 <__assert_fail@plt+0x618c>
   174f8:	ldr	r0, [sp, #8]
   174fc:	cmp	r0, #0
   17500:	beq	17508 <__assert_fail@plt+0x6190>
   17504:	bl	1a154 <__assert_fail@plt+0x8ddc>
   17508:	ldr	r0, [sp, #4]
   1750c:	mov	sp, fp
   17510:	pop	{fp, pc}
   17514:	push	{fp, lr}
   17518:	mov	fp, sp
   1751c:	sub	sp, sp, #8
   17520:	str	r0, [sp, #4]
   17524:	str	r1, [sp]
   17528:	ldr	r0, [sp, #4]
   1752c:	ldr	r1, [sp]
   17530:	bl	1a7d8 <__assert_fail@plt+0x9460>
   17534:	bl	17440 <__assert_fail@plt+0x60c8>
   17538:	mov	sp, fp
   1753c:	pop	{fp, pc}
   17540:	push	{fp, lr}
   17544:	mov	fp, sp
   17548:	sub	sp, sp, #16
   1754c:	str	r0, [fp, #-4]
   17550:	str	r1, [sp, #8]
   17554:	str	r2, [sp, #4]
   17558:	ldr	r0, [fp, #-4]
   1755c:	ldr	r1, [sp, #8]
   17560:	ldr	r2, [sp, #4]
   17564:	bl	1a8d0 <__assert_fail@plt+0x9558>
   17568:	bl	17440 <__assert_fail@plt+0x60c8>
   1756c:	mov	sp, fp
   17570:	pop	{fp, pc}
   17574:	push	{fp, lr}
   17578:	mov	fp, sp
   1757c:	sub	sp, sp, #8
   17580:	str	r0, [sp, #4]
   17584:	str	r1, [sp]
   17588:	ldr	r1, [sp, #4]
   1758c:	ldr	r2, [sp]
   17590:	movw	r0, #0
   17594:	bl	173a8 <__assert_fail@plt+0x6030>
   17598:	mov	sp, fp
   1759c:	pop	{fp, pc}
   175a0:	push	{fp, lr}
   175a4:	mov	fp, sp
   175a8:	sub	sp, sp, #8
   175ac:	str	r0, [sp, #4]
   175b0:	str	r1, [sp]
   175b4:	ldr	r1, [sp, #4]
   175b8:	ldr	r2, [sp]
   175bc:	movw	r0, #0
   175c0:	bl	17540 <__assert_fail@plt+0x61c8>
   175c4:	mov	sp, fp
   175c8:	pop	{fp, pc}
   175cc:	push	{fp, lr}
   175d0:	mov	fp, sp
   175d4:	sub	sp, sp, #8
   175d8:	str	r0, [sp, #4]
   175dc:	str	r1, [sp]
   175e0:	ldr	r0, [sp, #4]
   175e4:	ldr	r1, [sp]
   175e8:	movw	r2, #1
   175ec:	bl	175f8 <__assert_fail@plt+0x6280>
   175f0:	mov	sp, fp
   175f4:	pop	{fp, pc}
   175f8:	push	{fp, lr}
   175fc:	mov	fp, sp
   17600:	sub	sp, sp, #16
   17604:	str	r0, [fp, #-4]
   17608:	str	r1, [sp, #8]
   1760c:	str	r2, [sp, #4]
   17610:	ldr	r0, [sp, #8]
   17614:	ldr	r0, [r0]
   17618:	str	r0, [sp]
   1761c:	ldr	r0, [fp, #-4]
   17620:	movw	r1, #0
   17624:	cmp	r0, r1
   17628:	bne	17674 <__assert_fail@plt+0x62fc>
   1762c:	ldr	r0, [sp]
   17630:	cmp	r0, #0
   17634:	bne	17670 <__assert_fail@plt+0x62f8>
   17638:	ldr	r0, [sp, #4]
   1763c:	movw	r1, #64	; 0x40
   17640:	udiv	r0, r1, r0
   17644:	str	r0, [sp]
   17648:	ldr	r0, [sp]
   1764c:	cmp	r0, #0
   17650:	movw	r0, #0
   17654:	movne	r0, #1
   17658:	mvn	r1, #0
   1765c:	eor	r0, r0, r1
   17660:	and	r0, r0, #1
   17664:	ldr	r1, [sp]
   17668:	add	r0, r1, r0
   1766c:	str	r0, [sp]
   17670:	b	176a4 <__assert_fail@plt+0x632c>
   17674:	ldr	r0, [sp]
   17678:	ldr	r1, [sp]
   1767c:	lsr	r1, r1, #1
   17680:	add	r1, r1, #1
   17684:	adds	r0, r0, r1
   17688:	mov	r1, #0
   1768c:	adc	r1, r1, #0
   17690:	str	r0, [sp]
   17694:	tst	r1, #1
   17698:	beq	176a0 <__assert_fail@plt+0x6328>
   1769c:	bl	1a154 <__assert_fail@plt+0x8ddc>
   176a0:	b	176a4 <__assert_fail@plt+0x632c>
   176a4:	ldr	r0, [fp, #-4]
   176a8:	ldr	r1, [sp]
   176ac:	ldr	r2, [sp, #4]
   176b0:	bl	173a8 <__assert_fail@plt+0x6030>
   176b4:	str	r0, [fp, #-4]
   176b8:	ldr	r0, [sp]
   176bc:	ldr	r1, [sp, #8]
   176c0:	str	r0, [r1]
   176c4:	ldr	r0, [fp, #-4]
   176c8:	mov	sp, fp
   176cc:	pop	{fp, pc}
   176d0:	push	{fp, lr}
   176d4:	mov	fp, sp
   176d8:	sub	sp, sp, #216	; 0xd8
   176dc:	ldr	ip, [fp, #8]
   176e0:	str	r0, [fp, #-4]
   176e4:	str	r1, [fp, #-8]
   176e8:	str	r2, [fp, #-12]
   176ec:	str	r3, [fp, #-16]
   176f0:	ldr	r0, [fp, #-8]
   176f4:	ldr	r0, [r0]
   176f8:	str	r0, [fp, #-20]	; 0xffffffec
   176fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   17700:	ldr	r1, [fp, #-20]	; 0xffffffec
   17704:	asr	r1, r1, #1
   17708:	add	r1, r0, r1
   1770c:	mov	r2, #1
   17710:	cmp	r1, r0
   17714:	movwvc	r2, #0
   17718:	str	r1, [fp, #-24]	; 0xffffffe8
   1771c:	tst	r2, #1
   17720:	beq	1772c <__assert_fail@plt+0x63b4>
   17724:	ldr	r0, [pc, #4036]	; 186f0 <__assert_fail@plt+0x7378>
   17728:	str	r0, [fp, #-24]	; 0xffffffe8
   1772c:	ldr	r0, [fp, #-16]
   17730:	movw	r1, #0
   17734:	cmp	r1, r0
   17738:	bgt	17754 <__assert_fail@plt+0x63dc>
   1773c:	ldr	r0, [fp, #-16]
   17740:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17744:	cmp	r0, r1
   17748:	bge	17754 <__assert_fail@plt+0x63dc>
   1774c:	ldr	r0, [fp, #-16]
   17750:	str	r0, [fp, #-24]	; 0xffffffe8
   17754:	b	17b2c <__assert_fail@plt+0x67b4>
   17758:	b	1775c <__assert_fail@plt+0x63e4>
   1775c:	ldr	r0, [fp, #8]
   17760:	cmp	r0, #0
   17764:	bge	17878 <__assert_fail@plt+0x6500>
   17768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1776c:	cmp	r0, #0
   17770:	bge	177fc <__assert_fail@plt+0x6484>
   17774:	b	17778 <__assert_fail@plt+0x6400>
   17778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1777c:	ldr	r1, [fp, #8]
   17780:	movw	r2, #127	; 0x7f
   17784:	sdiv	r1, r2, r1
   17788:	cmp	r0, r1
   1778c:	blt	17918 <__assert_fail@plt+0x65a0>
   17790:	b	17930 <__assert_fail@plt+0x65b8>
   17794:	b	17798 <__assert_fail@plt+0x6420>
   17798:	ldr	r0, [pc, #4084]	; 18794 <__assert_fail@plt+0x741c>
   1779c:	ldr	r1, [fp, #8]
   177a0:	cmp	r1, r0
   177a4:	blt	177bc <__assert_fail@plt+0x6444>
   177a8:	b	177c8 <__assert_fail@plt+0x6450>
   177ac:	ldr	r0, [fp, #8]
   177b0:	movw	r1, #0
   177b4:	cmp	r1, r0
   177b8:	bge	177c8 <__assert_fail@plt+0x6450>
   177bc:	movw	r0, #0
   177c0:	str	r0, [fp, #-36]	; 0xffffffdc
   177c4:	b	177e0 <__assert_fail@plt+0x6468>
   177c8:	ldr	r0, [fp, #8]
   177cc:	movw	r1, #0
   177d0:	sub	r0, r1, r0
   177d4:	movw	r1, #127	; 0x7f
   177d8:	sdiv	r0, r1, r0
   177dc:	str	r0, [fp, #-36]	; 0xffffffdc
   177e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   177e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177e8:	mvn	r2, #0
   177ec:	sub	r1, r2, r1
   177f0:	cmp	r0, r1
   177f4:	ble	17918 <__assert_fail@plt+0x65a0>
   177f8:	b	17930 <__assert_fail@plt+0x65b8>
   177fc:	b	17800 <__assert_fail@plt+0x6488>
   17800:	b	1785c <__assert_fail@plt+0x64e4>
   17804:	b	1785c <__assert_fail@plt+0x64e4>
   17808:	ldr	r0, [fp, #8]
   1780c:	cmn	r0, #1
   17810:	bne	1785c <__assert_fail@plt+0x64e4>
   17814:	b	17818 <__assert_fail@plt+0x64a0>
   17818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1781c:	mvn	r1, #127	; 0x7f
   17820:	add	r0, r0, r1
   17824:	movw	r1, #0
   17828:	cmp	r1, r0
   1782c:	blt	17918 <__assert_fail@plt+0x65a0>
   17830:	b	17930 <__assert_fail@plt+0x65b8>
   17834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17838:	movw	r1, #0
   1783c:	cmp	r1, r0
   17840:	bge	17930 <__assert_fail@plt+0x65b8>
   17844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17848:	sub	r0, r0, #1
   1784c:	movw	r1, #127	; 0x7f
   17850:	cmp	r1, r0
   17854:	blt	17918 <__assert_fail@plt+0x65a0>
   17858:	b	17930 <__assert_fail@plt+0x65b8>
   1785c:	ldr	r0, [fp, #8]
   17860:	mvn	r1, #127	; 0x7f
   17864:	sdiv	r0, r1, r0
   17868:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1786c:	cmp	r0, r1
   17870:	blt	17918 <__assert_fail@plt+0x65a0>
   17874:	b	17930 <__assert_fail@plt+0x65b8>
   17878:	ldr	r0, [fp, #8]
   1787c:	cmp	r0, #0
   17880:	bne	17888 <__assert_fail@plt+0x6510>
   17884:	b	17930 <__assert_fail@plt+0x65b8>
   17888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1788c:	cmp	r0, #0
   17890:	bge	17900 <__assert_fail@plt+0x6588>
   17894:	b	17898 <__assert_fail@plt+0x6520>
   17898:	b	178e4 <__assert_fail@plt+0x656c>
   1789c:	b	178e4 <__assert_fail@plt+0x656c>
   178a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178a4:	cmn	r0, #1
   178a8:	bne	178e4 <__assert_fail@plt+0x656c>
   178ac:	b	178b0 <__assert_fail@plt+0x6538>
   178b0:	ldr	r0, [fp, #8]
   178b4:	mvn	r1, #127	; 0x7f
   178b8:	add	r0, r0, r1
   178bc:	movw	r1, #0
   178c0:	cmp	r1, r0
   178c4:	blt	17918 <__assert_fail@plt+0x65a0>
   178c8:	b	17930 <__assert_fail@plt+0x65b8>
   178cc:	ldr	r0, [fp, #8]
   178d0:	sub	r0, r0, #1
   178d4:	movw	r1, #127	; 0x7f
   178d8:	cmp	r1, r0
   178dc:	blt	17918 <__assert_fail@plt+0x65a0>
   178e0:	b	17930 <__assert_fail@plt+0x65b8>
   178e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178e8:	mvn	r1, #127	; 0x7f
   178ec:	sdiv	r0, r1, r0
   178f0:	ldr	r1, [fp, #8]
   178f4:	cmp	r0, r1
   178f8:	blt	17918 <__assert_fail@plt+0x65a0>
   178fc:	b	17930 <__assert_fail@plt+0x65b8>
   17900:	ldr	r0, [fp, #8]
   17904:	movw	r1, #127	; 0x7f
   17908:	sdiv	r0, r1, r0
   1790c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17910:	cmp	r0, r1
   17914:	bge	17930 <__assert_fail@plt+0x65b8>
   17918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1791c:	ldr	r1, [fp, #8]
   17920:	mul	r0, r0, r1
   17924:	sxtb	r0, r0
   17928:	str	r0, [fp, #-28]	; 0xffffffe4
   1792c:	b	18af4 <__assert_fail@plt+0x777c>
   17930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17934:	ldr	r1, [fp, #8]
   17938:	mul	r0, r0, r1
   1793c:	sxtb	r0, r0
   17940:	str	r0, [fp, #-28]	; 0xffffffe4
   17944:	b	18b00 <__assert_fail@plt+0x7788>
   17948:	ldr	r0, [fp, #8]
   1794c:	cmp	r0, #0
   17950:	bge	17a60 <__assert_fail@plt+0x66e8>
   17954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17958:	cmp	r0, #0
   1795c:	bge	179e8 <__assert_fail@plt+0x6670>
   17960:	b	17964 <__assert_fail@plt+0x65ec>
   17964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17968:	ldr	r1, [fp, #8]
   1796c:	movw	r2, #255	; 0xff
   17970:	sdiv	r1, r2, r1
   17974:	cmp	r0, r1
   17978:	blt	17afc <__assert_fail@plt+0x6784>
   1797c:	b	17b14 <__assert_fail@plt+0x679c>
   17980:	b	17984 <__assert_fail@plt+0x660c>
   17984:	ldr	r0, [pc, #3592]	; 18794 <__assert_fail@plt+0x741c>
   17988:	ldr	r1, [fp, #8]
   1798c:	cmp	r1, r0
   17990:	blt	179a8 <__assert_fail@plt+0x6630>
   17994:	b	179b4 <__assert_fail@plt+0x663c>
   17998:	ldr	r0, [fp, #8]
   1799c:	movw	r1, #0
   179a0:	cmp	r1, r0
   179a4:	bge	179b4 <__assert_fail@plt+0x663c>
   179a8:	movw	r0, #0
   179ac:	str	r0, [fp, #-40]	; 0xffffffd8
   179b0:	b	179cc <__assert_fail@plt+0x6654>
   179b4:	ldr	r0, [fp, #8]
   179b8:	movw	r1, #0
   179bc:	sub	r0, r1, r0
   179c0:	movw	r1, #255	; 0xff
   179c4:	sdiv	r0, r1, r0
   179c8:	str	r0, [fp, #-40]	; 0xffffffd8
   179cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   179d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179d4:	mvn	r2, #0
   179d8:	sub	r1, r2, r1
   179dc:	cmp	r0, r1
   179e0:	ble	17afc <__assert_fail@plt+0x6784>
   179e4:	b	17b14 <__assert_fail@plt+0x679c>
   179e8:	b	179ec <__assert_fail@plt+0x6674>
   179ec:	b	17a44 <__assert_fail@plt+0x66cc>
   179f0:	b	17a44 <__assert_fail@plt+0x66cc>
   179f4:	ldr	r0, [fp, #8]
   179f8:	cmn	r0, #1
   179fc:	bne	17a44 <__assert_fail@plt+0x66cc>
   17a00:	b	17a04 <__assert_fail@plt+0x668c>
   17a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a08:	add	r0, r0, #0
   17a0c:	movw	r1, #0
   17a10:	cmp	r1, r0
   17a14:	blt	17afc <__assert_fail@plt+0x6784>
   17a18:	b	17b14 <__assert_fail@plt+0x679c>
   17a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a20:	movw	r1, #0
   17a24:	cmp	r1, r0
   17a28:	bge	17b14 <__assert_fail@plt+0x679c>
   17a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a30:	sub	r0, r0, #1
   17a34:	mvn	r1, #0
   17a38:	cmp	r1, r0
   17a3c:	blt	17afc <__assert_fail@plt+0x6784>
   17a40:	b	17b14 <__assert_fail@plt+0x679c>
   17a44:	ldr	r0, [fp, #8]
   17a48:	movw	r1, #0
   17a4c:	sdiv	r0, r1, r0
   17a50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a54:	cmp	r0, r1
   17a58:	blt	17afc <__assert_fail@plt+0x6784>
   17a5c:	b	17b14 <__assert_fail@plt+0x679c>
   17a60:	ldr	r0, [fp, #8]
   17a64:	cmp	r0, #0
   17a68:	bne	17a70 <__assert_fail@plt+0x66f8>
   17a6c:	b	17b14 <__assert_fail@plt+0x679c>
   17a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a74:	cmp	r0, #0
   17a78:	bge	17ae4 <__assert_fail@plt+0x676c>
   17a7c:	b	17a80 <__assert_fail@plt+0x6708>
   17a80:	b	17ac8 <__assert_fail@plt+0x6750>
   17a84:	b	17ac8 <__assert_fail@plt+0x6750>
   17a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a8c:	cmn	r0, #1
   17a90:	bne	17ac8 <__assert_fail@plt+0x6750>
   17a94:	b	17a98 <__assert_fail@plt+0x6720>
   17a98:	ldr	r0, [fp, #8]
   17a9c:	add	r0, r0, #0
   17aa0:	movw	r1, #0
   17aa4:	cmp	r1, r0
   17aa8:	blt	17afc <__assert_fail@plt+0x6784>
   17aac:	b	17b14 <__assert_fail@plt+0x679c>
   17ab0:	ldr	r0, [fp, #8]
   17ab4:	sub	r0, r0, #1
   17ab8:	mvn	r1, #0
   17abc:	cmp	r1, r0
   17ac0:	blt	17afc <__assert_fail@plt+0x6784>
   17ac4:	b	17b14 <__assert_fail@plt+0x679c>
   17ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17acc:	movw	r1, #0
   17ad0:	sdiv	r0, r1, r0
   17ad4:	ldr	r1, [fp, #8]
   17ad8:	cmp	r0, r1
   17adc:	blt	17afc <__assert_fail@plt+0x6784>
   17ae0:	b	17b14 <__assert_fail@plt+0x679c>
   17ae4:	ldr	r0, [fp, #8]
   17ae8:	movw	r1, #255	; 0xff
   17aec:	sdiv	r0, r1, r0
   17af0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17af4:	cmp	r0, r1
   17af8:	bge	17b14 <__assert_fail@plt+0x679c>
   17afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b00:	ldr	r1, [fp, #8]
   17b04:	mul	r0, r0, r1
   17b08:	and	r0, r0, #255	; 0xff
   17b0c:	str	r0, [fp, #-28]	; 0xffffffe4
   17b10:	b	18af4 <__assert_fail@plt+0x777c>
   17b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b18:	ldr	r1, [fp, #8]
   17b1c:	mul	r0, r0, r1
   17b20:	and	r0, r0, #255	; 0xff
   17b24:	str	r0, [fp, #-28]	; 0xffffffe4
   17b28:	b	18b00 <__assert_fail@plt+0x7788>
   17b2c:	b	17f04 <__assert_fail@plt+0x6b8c>
   17b30:	b	17b34 <__assert_fail@plt+0x67bc>
   17b34:	ldr	r0, [fp, #8]
   17b38:	cmp	r0, #0
   17b3c:	bge	17c50 <__assert_fail@plt+0x68d8>
   17b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b44:	cmp	r0, #0
   17b48:	bge	17bd4 <__assert_fail@plt+0x685c>
   17b4c:	b	17b50 <__assert_fail@plt+0x67d8>
   17b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b54:	ldr	r1, [fp, #8]
   17b58:	movw	r2, #32767	; 0x7fff
   17b5c:	sdiv	r1, r2, r1
   17b60:	cmp	r0, r1
   17b64:	blt	17cf0 <__assert_fail@plt+0x6978>
   17b68:	b	17d08 <__assert_fail@plt+0x6990>
   17b6c:	b	17b70 <__assert_fail@plt+0x67f8>
   17b70:	ldr	r0, [pc, #3100]	; 18794 <__assert_fail@plt+0x741c>
   17b74:	ldr	r1, [fp, #8]
   17b78:	cmp	r1, r0
   17b7c:	blt	17b94 <__assert_fail@plt+0x681c>
   17b80:	b	17ba0 <__assert_fail@plt+0x6828>
   17b84:	ldr	r0, [fp, #8]
   17b88:	movw	r1, #0
   17b8c:	cmp	r1, r0
   17b90:	bge	17ba0 <__assert_fail@plt+0x6828>
   17b94:	movw	r0, #0
   17b98:	str	r0, [fp, #-44]	; 0xffffffd4
   17b9c:	b	17bb8 <__assert_fail@plt+0x6840>
   17ba0:	ldr	r0, [fp, #8]
   17ba4:	movw	r1, #0
   17ba8:	sub	r0, r1, r0
   17bac:	movw	r1, #32767	; 0x7fff
   17bb0:	sdiv	r0, r1, r0
   17bb4:	str	r0, [fp, #-44]	; 0xffffffd4
   17bb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17bbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bc0:	mvn	r2, #0
   17bc4:	sub	r1, r2, r1
   17bc8:	cmp	r0, r1
   17bcc:	ble	17cf0 <__assert_fail@plt+0x6978>
   17bd0:	b	17d08 <__assert_fail@plt+0x6990>
   17bd4:	b	17bd8 <__assert_fail@plt+0x6860>
   17bd8:	b	17c34 <__assert_fail@plt+0x68bc>
   17bdc:	b	17c34 <__assert_fail@plt+0x68bc>
   17be0:	ldr	r0, [fp, #8]
   17be4:	cmn	r0, #1
   17be8:	bne	17c34 <__assert_fail@plt+0x68bc>
   17bec:	b	17bf0 <__assert_fail@plt+0x6878>
   17bf0:	ldr	r0, [pc, #4068]	; 18bdc <__assert_fail@plt+0x7864>
   17bf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bf8:	add	r0, r1, r0
   17bfc:	movw	r1, #0
   17c00:	cmp	r1, r0
   17c04:	blt	17cf0 <__assert_fail@plt+0x6978>
   17c08:	b	17d08 <__assert_fail@plt+0x6990>
   17c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c10:	movw	r1, #0
   17c14:	cmp	r1, r0
   17c18:	bge	17d08 <__assert_fail@plt+0x6990>
   17c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c20:	sub	r0, r0, #1
   17c24:	movw	r1, #32767	; 0x7fff
   17c28:	cmp	r1, r0
   17c2c:	blt	17cf0 <__assert_fail@plt+0x6978>
   17c30:	b	17d08 <__assert_fail@plt+0x6990>
   17c34:	ldr	r0, [pc, #4000]	; 18bdc <__assert_fail@plt+0x7864>
   17c38:	ldr	r1, [fp, #8]
   17c3c:	sdiv	r0, r0, r1
   17c40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c44:	cmp	r0, r1
   17c48:	blt	17cf0 <__assert_fail@plt+0x6978>
   17c4c:	b	17d08 <__assert_fail@plt+0x6990>
   17c50:	ldr	r0, [fp, #8]
   17c54:	cmp	r0, #0
   17c58:	bne	17c60 <__assert_fail@plt+0x68e8>
   17c5c:	b	17d08 <__assert_fail@plt+0x6990>
   17c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c64:	cmp	r0, #0
   17c68:	bge	17cd8 <__assert_fail@plt+0x6960>
   17c6c:	b	17c70 <__assert_fail@plt+0x68f8>
   17c70:	b	17cbc <__assert_fail@plt+0x6944>
   17c74:	b	17cbc <__assert_fail@plt+0x6944>
   17c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c7c:	cmn	r0, #1
   17c80:	bne	17cbc <__assert_fail@plt+0x6944>
   17c84:	b	17c88 <__assert_fail@plt+0x6910>
   17c88:	ldr	r0, [pc, #3916]	; 18bdc <__assert_fail@plt+0x7864>
   17c8c:	ldr	r1, [fp, #8]
   17c90:	add	r0, r1, r0
   17c94:	movw	r1, #0
   17c98:	cmp	r1, r0
   17c9c:	blt	17cf0 <__assert_fail@plt+0x6978>
   17ca0:	b	17d08 <__assert_fail@plt+0x6990>
   17ca4:	ldr	r0, [fp, #8]
   17ca8:	sub	r0, r0, #1
   17cac:	movw	r1, #32767	; 0x7fff
   17cb0:	cmp	r1, r0
   17cb4:	blt	17cf0 <__assert_fail@plt+0x6978>
   17cb8:	b	17d08 <__assert_fail@plt+0x6990>
   17cbc:	ldr	r0, [pc, #3864]	; 18bdc <__assert_fail@plt+0x7864>
   17cc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cc4:	sdiv	r0, r0, r1
   17cc8:	ldr	r1, [fp, #8]
   17ccc:	cmp	r0, r1
   17cd0:	blt	17cf0 <__assert_fail@plt+0x6978>
   17cd4:	b	17d08 <__assert_fail@plt+0x6990>
   17cd8:	ldr	r0, [fp, #8]
   17cdc:	movw	r1, #32767	; 0x7fff
   17ce0:	sdiv	r0, r1, r0
   17ce4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ce8:	cmp	r0, r1
   17cec:	bge	17d08 <__assert_fail@plt+0x6990>
   17cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf4:	ldr	r1, [fp, #8]
   17cf8:	mul	r0, r0, r1
   17cfc:	sxth	r0, r0
   17d00:	str	r0, [fp, #-28]	; 0xffffffe4
   17d04:	b	18af4 <__assert_fail@plt+0x777c>
   17d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d0c:	ldr	r1, [fp, #8]
   17d10:	mul	r0, r0, r1
   17d14:	sxth	r0, r0
   17d18:	str	r0, [fp, #-28]	; 0xffffffe4
   17d1c:	b	18b00 <__assert_fail@plt+0x7788>
   17d20:	ldr	r0, [fp, #8]
   17d24:	cmp	r0, #0
   17d28:	bge	17e38 <__assert_fail@plt+0x6ac0>
   17d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d30:	cmp	r0, #0
   17d34:	bge	17dc0 <__assert_fail@plt+0x6a48>
   17d38:	b	17d3c <__assert_fail@plt+0x69c4>
   17d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d40:	ldr	r1, [fp, #8]
   17d44:	movw	r2, #65535	; 0xffff
   17d48:	sdiv	r1, r2, r1
   17d4c:	cmp	r0, r1
   17d50:	blt	17ed4 <__assert_fail@plt+0x6b5c>
   17d54:	b	17eec <__assert_fail@plt+0x6b74>
   17d58:	b	17d5c <__assert_fail@plt+0x69e4>
   17d5c:	ldr	r0, [pc, #2608]	; 18794 <__assert_fail@plt+0x741c>
   17d60:	ldr	r1, [fp, #8]
   17d64:	cmp	r1, r0
   17d68:	blt	17d80 <__assert_fail@plt+0x6a08>
   17d6c:	b	17d8c <__assert_fail@plt+0x6a14>
   17d70:	ldr	r0, [fp, #8]
   17d74:	movw	r1, #0
   17d78:	cmp	r1, r0
   17d7c:	bge	17d8c <__assert_fail@plt+0x6a14>
   17d80:	movw	r0, #0
   17d84:	str	r0, [fp, #-48]	; 0xffffffd0
   17d88:	b	17da4 <__assert_fail@plt+0x6a2c>
   17d8c:	ldr	r0, [fp, #8]
   17d90:	movw	r1, #0
   17d94:	sub	r0, r1, r0
   17d98:	movw	r1, #65535	; 0xffff
   17d9c:	sdiv	r0, r1, r0
   17da0:	str	r0, [fp, #-48]	; 0xffffffd0
   17da4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17da8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17dac:	mvn	r2, #0
   17db0:	sub	r1, r2, r1
   17db4:	cmp	r0, r1
   17db8:	ble	17ed4 <__assert_fail@plt+0x6b5c>
   17dbc:	b	17eec <__assert_fail@plt+0x6b74>
   17dc0:	b	17dc4 <__assert_fail@plt+0x6a4c>
   17dc4:	b	17e1c <__assert_fail@plt+0x6aa4>
   17dc8:	b	17e1c <__assert_fail@plt+0x6aa4>
   17dcc:	ldr	r0, [fp, #8]
   17dd0:	cmn	r0, #1
   17dd4:	bne	17e1c <__assert_fail@plt+0x6aa4>
   17dd8:	b	17ddc <__assert_fail@plt+0x6a64>
   17ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17de0:	add	r0, r0, #0
   17de4:	movw	r1, #0
   17de8:	cmp	r1, r0
   17dec:	blt	17ed4 <__assert_fail@plt+0x6b5c>
   17df0:	b	17eec <__assert_fail@plt+0x6b74>
   17df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17df8:	movw	r1, #0
   17dfc:	cmp	r1, r0
   17e00:	bge	17eec <__assert_fail@plt+0x6b74>
   17e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e08:	sub	r0, r0, #1
   17e0c:	mvn	r1, #0
   17e10:	cmp	r1, r0
   17e14:	blt	17ed4 <__assert_fail@plt+0x6b5c>
   17e18:	b	17eec <__assert_fail@plt+0x6b74>
   17e1c:	ldr	r0, [fp, #8]
   17e20:	movw	r1, #0
   17e24:	sdiv	r0, r1, r0
   17e28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e2c:	cmp	r0, r1
   17e30:	blt	17ed4 <__assert_fail@plt+0x6b5c>
   17e34:	b	17eec <__assert_fail@plt+0x6b74>
   17e38:	ldr	r0, [fp, #8]
   17e3c:	cmp	r0, #0
   17e40:	bne	17e48 <__assert_fail@plt+0x6ad0>
   17e44:	b	17eec <__assert_fail@plt+0x6b74>
   17e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e4c:	cmp	r0, #0
   17e50:	bge	17ebc <__assert_fail@plt+0x6b44>
   17e54:	b	17e58 <__assert_fail@plt+0x6ae0>
   17e58:	b	17ea0 <__assert_fail@plt+0x6b28>
   17e5c:	b	17ea0 <__assert_fail@plt+0x6b28>
   17e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e64:	cmn	r0, #1
   17e68:	bne	17ea0 <__assert_fail@plt+0x6b28>
   17e6c:	b	17e70 <__assert_fail@plt+0x6af8>
   17e70:	ldr	r0, [fp, #8]
   17e74:	add	r0, r0, #0
   17e78:	movw	r1, #0
   17e7c:	cmp	r1, r0
   17e80:	blt	17ed4 <__assert_fail@plt+0x6b5c>
   17e84:	b	17eec <__assert_fail@plt+0x6b74>
   17e88:	ldr	r0, [fp, #8]
   17e8c:	sub	r0, r0, #1
   17e90:	mvn	r1, #0
   17e94:	cmp	r1, r0
   17e98:	blt	17ed4 <__assert_fail@plt+0x6b5c>
   17e9c:	b	17eec <__assert_fail@plt+0x6b74>
   17ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ea4:	movw	r1, #0
   17ea8:	sdiv	r0, r1, r0
   17eac:	ldr	r1, [fp, #8]
   17eb0:	cmp	r0, r1
   17eb4:	blt	17ed4 <__assert_fail@plt+0x6b5c>
   17eb8:	b	17eec <__assert_fail@plt+0x6b74>
   17ebc:	ldr	r0, [fp, #8]
   17ec0:	movw	r1, #65535	; 0xffff
   17ec4:	sdiv	r0, r1, r0
   17ec8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ecc:	cmp	r0, r1
   17ed0:	bge	17eec <__assert_fail@plt+0x6b74>
   17ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ed8:	ldr	r1, [fp, #8]
   17edc:	mul	r0, r0, r1
   17ee0:	uxth	r0, r0
   17ee4:	str	r0, [fp, #-28]	; 0xffffffe4
   17ee8:	b	18af4 <__assert_fail@plt+0x777c>
   17eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ef0:	ldr	r1, [fp, #8]
   17ef4:	mul	r0, r0, r1
   17ef8:	uxth	r0, r0
   17efc:	str	r0, [fp, #-28]	; 0xffffffe4
   17f00:	b	18b00 <__assert_fail@plt+0x7788>
   17f04:	b	17f08 <__assert_fail@plt+0x6b90>
   17f08:	b	17f0c <__assert_fail@plt+0x6b94>
   17f0c:	ldr	r0, [fp, #8]
   17f10:	cmp	r0, #0
   17f14:	bge	18018 <__assert_fail@plt+0x6ca0>
   17f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f1c:	cmp	r0, #0
   17f20:	bge	17fac <__assert_fail@plt+0x6c34>
   17f24:	b	17f28 <__assert_fail@plt+0x6bb0>
   17f28:	ldr	r0, [pc, #1984]	; 186f0 <__assert_fail@plt+0x7378>
   17f2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f30:	ldr	r2, [fp, #8]
   17f34:	sdiv	r0, r0, r2
   17f38:	cmp	r1, r0
   17f3c:	blt	180a8 <__assert_fail@plt+0x6d30>
   17f40:	b	180bc <__assert_fail@plt+0x6d44>
   17f44:	b	17f48 <__assert_fail@plt+0x6bd0>
   17f48:	ldr	r0, [pc, #2116]	; 18794 <__assert_fail@plt+0x741c>
   17f4c:	ldr	r1, [fp, #8]
   17f50:	cmp	r1, r0
   17f54:	blt	17f6c <__assert_fail@plt+0x6bf4>
   17f58:	b	17f78 <__assert_fail@plt+0x6c00>
   17f5c:	ldr	r0, [fp, #8]
   17f60:	movw	r1, #0
   17f64:	cmp	r1, r0
   17f68:	bge	17f78 <__assert_fail@plt+0x6c00>
   17f6c:	movw	r0, #0
   17f70:	str	r0, [fp, #-52]	; 0xffffffcc
   17f74:	b	17f90 <__assert_fail@plt+0x6c18>
   17f78:	ldr	r0, [pc, #1904]	; 186f0 <__assert_fail@plt+0x7378>
   17f7c:	ldr	r1, [fp, #8]
   17f80:	movw	r2, #0
   17f84:	sub	r1, r2, r1
   17f88:	sdiv	r0, r0, r1
   17f8c:	str	r0, [fp, #-52]	; 0xffffffcc
   17f90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17f94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f98:	mvn	r2, #0
   17f9c:	sub	r1, r2, r1
   17fa0:	cmp	r0, r1
   17fa4:	ble	180a8 <__assert_fail@plt+0x6d30>
   17fa8:	b	180bc <__assert_fail@plt+0x6d44>
   17fac:	ldr	r0, [fp, #8]
   17fb0:	cmn	r0, #1
   17fb4:	bne	17ffc <__assert_fail@plt+0x6c84>
   17fb8:	b	17fbc <__assert_fail@plt+0x6c44>
   17fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fc0:	add	r0, r0, #-2147483648	; 0x80000000
   17fc4:	movw	r1, #0
   17fc8:	cmp	r1, r0
   17fcc:	blt	180a8 <__assert_fail@plt+0x6d30>
   17fd0:	b	180bc <__assert_fail@plt+0x6d44>
   17fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fd8:	movw	r1, #0
   17fdc:	cmp	r1, r0
   17fe0:	bge	180bc <__assert_fail@plt+0x6d44>
   17fe4:	ldr	r0, [pc, #1796]	; 186f0 <__assert_fail@plt+0x7378>
   17fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fec:	sub	r1, r1, #1
   17ff0:	cmp	r0, r1
   17ff4:	blt	180a8 <__assert_fail@plt+0x6d30>
   17ff8:	b	180bc <__assert_fail@plt+0x6d44>
   17ffc:	ldr	r0, [pc, #4080]	; 18ff4 <__assert_fail@plt+0x7c7c>
   18000:	ldr	r1, [fp, #8]
   18004:	sdiv	r0, r0, r1
   18008:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1800c:	cmp	r0, r1
   18010:	blt	180a8 <__assert_fail@plt+0x6d30>
   18014:	b	180bc <__assert_fail@plt+0x6d44>
   18018:	ldr	r0, [fp, #8]
   1801c:	cmp	r0, #0
   18020:	bne	18028 <__assert_fail@plt+0x6cb0>
   18024:	b	180bc <__assert_fail@plt+0x6d44>
   18028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1802c:	cmp	r0, #0
   18030:	bge	18090 <__assert_fail@plt+0x6d18>
   18034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18038:	cmn	r0, #1
   1803c:	bne	18074 <__assert_fail@plt+0x6cfc>
   18040:	b	18044 <__assert_fail@plt+0x6ccc>
   18044:	ldr	r0, [fp, #8]
   18048:	add	r0, r0, #-2147483648	; 0x80000000
   1804c:	movw	r1, #0
   18050:	cmp	r1, r0
   18054:	blt	180a8 <__assert_fail@plt+0x6d30>
   18058:	b	180bc <__assert_fail@plt+0x6d44>
   1805c:	ldr	r0, [pc, #1676]	; 186f0 <__assert_fail@plt+0x7378>
   18060:	ldr	r1, [fp, #8]
   18064:	sub	r1, r1, #1
   18068:	cmp	r0, r1
   1806c:	blt	180a8 <__assert_fail@plt+0x6d30>
   18070:	b	180bc <__assert_fail@plt+0x6d44>
   18074:	ldr	r0, [pc, #3960]	; 18ff4 <__assert_fail@plt+0x7c7c>
   18078:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1807c:	sdiv	r0, r0, r1
   18080:	ldr	r1, [fp, #8]
   18084:	cmp	r0, r1
   18088:	blt	180a8 <__assert_fail@plt+0x6d30>
   1808c:	b	180bc <__assert_fail@plt+0x6d44>
   18090:	ldr	r0, [pc, #1624]	; 186f0 <__assert_fail@plt+0x7378>
   18094:	ldr	r1, [fp, #8]
   18098:	sdiv	r0, r0, r1
   1809c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180a0:	cmp	r0, r1
   180a4:	bge	180bc <__assert_fail@plt+0x6d44>
   180a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180ac:	ldr	r1, [fp, #8]
   180b0:	mul	r0, r0, r1
   180b4:	str	r0, [fp, #-28]	; 0xffffffe4
   180b8:	b	18af4 <__assert_fail@plt+0x777c>
   180bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180c0:	ldr	r1, [fp, #8]
   180c4:	mul	r0, r0, r1
   180c8:	str	r0, [fp, #-28]	; 0xffffffe4
   180cc:	b	18b00 <__assert_fail@plt+0x7788>
   180d0:	ldr	r0, [fp, #8]
   180d4:	cmp	r0, #0
   180d8:	bge	181e8 <__assert_fail@plt+0x6e70>
   180dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180e0:	cmp	r0, #0
   180e4:	bge	18170 <__assert_fail@plt+0x6df8>
   180e8:	b	18108 <__assert_fail@plt+0x6d90>
   180ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180f0:	ldr	r1, [fp, #8]
   180f4:	mvn	r2, #0
   180f8:	udiv	r1, r2, r1
   180fc:	cmp	r0, r1
   18100:	bcc	18284 <__assert_fail@plt+0x6f0c>
   18104:	b	18298 <__assert_fail@plt+0x6f20>
   18108:	b	1810c <__assert_fail@plt+0x6d94>
   1810c:	ldr	r0, [pc, #1664]	; 18794 <__assert_fail@plt+0x741c>
   18110:	ldr	r1, [fp, #8]
   18114:	cmp	r1, r0
   18118:	blt	18130 <__assert_fail@plt+0x6db8>
   1811c:	b	1813c <__assert_fail@plt+0x6dc4>
   18120:	ldr	r0, [fp, #8]
   18124:	movw	r1, #0
   18128:	cmp	r1, r0
   1812c:	bge	1813c <__assert_fail@plt+0x6dc4>
   18130:	movw	r0, #1
   18134:	str	r0, [fp, #-56]	; 0xffffffc8
   18138:	b	18154 <__assert_fail@plt+0x6ddc>
   1813c:	ldr	r0, [fp, #8]
   18140:	movw	r1, #0
   18144:	sub	r0, r1, r0
   18148:	mvn	r1, #0
   1814c:	udiv	r0, r1, r0
   18150:	str	r0, [fp, #-56]	; 0xffffffc8
   18154:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18158:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1815c:	mvn	r2, #0
   18160:	sub	r1, r2, r1
   18164:	cmp	r0, r1
   18168:	bls	18284 <__assert_fail@plt+0x6f0c>
   1816c:	b	18298 <__assert_fail@plt+0x6f20>
   18170:	b	18174 <__assert_fail@plt+0x6dfc>
   18174:	b	181cc <__assert_fail@plt+0x6e54>
   18178:	b	181cc <__assert_fail@plt+0x6e54>
   1817c:	ldr	r0, [fp, #8]
   18180:	cmn	r0, #1
   18184:	bne	181cc <__assert_fail@plt+0x6e54>
   18188:	b	1818c <__assert_fail@plt+0x6e14>
   1818c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18190:	add	r0, r0, #0
   18194:	movw	r1, #0
   18198:	cmp	r1, r0
   1819c:	blt	18284 <__assert_fail@plt+0x6f0c>
   181a0:	b	18298 <__assert_fail@plt+0x6f20>
   181a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181a8:	movw	r1, #0
   181ac:	cmp	r1, r0
   181b0:	bge	18298 <__assert_fail@plt+0x6f20>
   181b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181b8:	sub	r0, r0, #1
   181bc:	mvn	r1, #0
   181c0:	cmp	r1, r0
   181c4:	blt	18284 <__assert_fail@plt+0x6f0c>
   181c8:	b	18298 <__assert_fail@plt+0x6f20>
   181cc:	ldr	r0, [fp, #8]
   181d0:	movw	r1, #0
   181d4:	sdiv	r0, r1, r0
   181d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181dc:	cmp	r0, r1
   181e0:	blt	18284 <__assert_fail@plt+0x6f0c>
   181e4:	b	18298 <__assert_fail@plt+0x6f20>
   181e8:	ldr	r0, [fp, #8]
   181ec:	cmp	r0, #0
   181f0:	bne	181f8 <__assert_fail@plt+0x6e80>
   181f4:	b	18298 <__assert_fail@plt+0x6f20>
   181f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181fc:	cmp	r0, #0
   18200:	bge	1826c <__assert_fail@plt+0x6ef4>
   18204:	b	18208 <__assert_fail@plt+0x6e90>
   18208:	b	18250 <__assert_fail@plt+0x6ed8>
   1820c:	b	18250 <__assert_fail@plt+0x6ed8>
   18210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18214:	cmn	r0, #1
   18218:	bne	18250 <__assert_fail@plt+0x6ed8>
   1821c:	b	18220 <__assert_fail@plt+0x6ea8>
   18220:	ldr	r0, [fp, #8]
   18224:	add	r0, r0, #0
   18228:	movw	r1, #0
   1822c:	cmp	r1, r0
   18230:	blt	18284 <__assert_fail@plt+0x6f0c>
   18234:	b	18298 <__assert_fail@plt+0x6f20>
   18238:	ldr	r0, [fp, #8]
   1823c:	sub	r0, r0, #1
   18240:	mvn	r1, #0
   18244:	cmp	r1, r0
   18248:	blt	18284 <__assert_fail@plt+0x6f0c>
   1824c:	b	18298 <__assert_fail@plt+0x6f20>
   18250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18254:	movw	r1, #0
   18258:	sdiv	r0, r1, r0
   1825c:	ldr	r1, [fp, #8]
   18260:	cmp	r0, r1
   18264:	blt	18284 <__assert_fail@plt+0x6f0c>
   18268:	b	18298 <__assert_fail@plt+0x6f20>
   1826c:	ldr	r0, [fp, #8]
   18270:	mvn	r1, #0
   18274:	udiv	r0, r1, r0
   18278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1827c:	cmp	r0, r1
   18280:	bcs	18298 <__assert_fail@plt+0x6f20>
   18284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18288:	ldr	r1, [fp, #8]
   1828c:	mul	r0, r0, r1
   18290:	str	r0, [fp, #-28]	; 0xffffffe4
   18294:	b	18af4 <__assert_fail@plt+0x777c>
   18298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1829c:	ldr	r1, [fp, #8]
   182a0:	mul	r0, r0, r1
   182a4:	str	r0, [fp, #-28]	; 0xffffffe4
   182a8:	b	18b00 <__assert_fail@plt+0x7788>
   182ac:	b	182b0 <__assert_fail@plt+0x6f38>
   182b0:	b	182b4 <__assert_fail@plt+0x6f3c>
   182b4:	ldr	r0, [fp, #8]
   182b8:	cmp	r0, #0
   182bc:	bge	183c0 <__assert_fail@plt+0x7048>
   182c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182c4:	cmp	r0, #0
   182c8:	bge	18354 <__assert_fail@plt+0x6fdc>
   182cc:	b	182d0 <__assert_fail@plt+0x6f58>
   182d0:	ldr	r0, [pc, #1048]	; 186f0 <__assert_fail@plt+0x7378>
   182d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182d8:	ldr	r2, [fp, #8]
   182dc:	sdiv	r0, r0, r2
   182e0:	cmp	r1, r0
   182e4:	blt	18450 <__assert_fail@plt+0x70d8>
   182e8:	b	18464 <__assert_fail@plt+0x70ec>
   182ec:	b	182f0 <__assert_fail@plt+0x6f78>
   182f0:	ldr	r0, [pc, #1180]	; 18794 <__assert_fail@plt+0x741c>
   182f4:	ldr	r1, [fp, #8]
   182f8:	cmp	r1, r0
   182fc:	blt	18314 <__assert_fail@plt+0x6f9c>
   18300:	b	18320 <__assert_fail@plt+0x6fa8>
   18304:	ldr	r0, [fp, #8]
   18308:	movw	r1, #0
   1830c:	cmp	r1, r0
   18310:	bge	18320 <__assert_fail@plt+0x6fa8>
   18314:	movw	r0, #0
   18318:	str	r0, [fp, #-60]	; 0xffffffc4
   1831c:	b	18338 <__assert_fail@plt+0x6fc0>
   18320:	ldr	r0, [pc, #968]	; 186f0 <__assert_fail@plt+0x7378>
   18324:	ldr	r1, [fp, #8]
   18328:	movw	r2, #0
   1832c:	sub	r1, r2, r1
   18330:	sdiv	r0, r0, r1
   18334:	str	r0, [fp, #-60]	; 0xffffffc4
   18338:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1833c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18340:	mvn	r2, #0
   18344:	sub	r1, r2, r1
   18348:	cmp	r0, r1
   1834c:	ble	18450 <__assert_fail@plt+0x70d8>
   18350:	b	18464 <__assert_fail@plt+0x70ec>
   18354:	ldr	r0, [fp, #8]
   18358:	cmn	r0, #1
   1835c:	bne	183a4 <__assert_fail@plt+0x702c>
   18360:	b	18364 <__assert_fail@plt+0x6fec>
   18364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18368:	add	r0, r0, #-2147483648	; 0x80000000
   1836c:	movw	r1, #0
   18370:	cmp	r1, r0
   18374:	blt	18450 <__assert_fail@plt+0x70d8>
   18378:	b	18464 <__assert_fail@plt+0x70ec>
   1837c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18380:	movw	r1, #0
   18384:	cmp	r1, r0
   18388:	bge	18464 <__assert_fail@plt+0x70ec>
   1838c:	ldr	r0, [pc, #860]	; 186f0 <__assert_fail@plt+0x7378>
   18390:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18394:	sub	r1, r1, #1
   18398:	cmp	r0, r1
   1839c:	blt	18450 <__assert_fail@plt+0x70d8>
   183a0:	b	18464 <__assert_fail@plt+0x70ec>
   183a4:	ldr	r0, [pc, #3144]	; 18ff4 <__assert_fail@plt+0x7c7c>
   183a8:	ldr	r1, [fp, #8]
   183ac:	sdiv	r0, r0, r1
   183b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183b4:	cmp	r0, r1
   183b8:	blt	18450 <__assert_fail@plt+0x70d8>
   183bc:	b	18464 <__assert_fail@plt+0x70ec>
   183c0:	ldr	r0, [fp, #8]
   183c4:	cmp	r0, #0
   183c8:	bne	183d0 <__assert_fail@plt+0x7058>
   183cc:	b	18464 <__assert_fail@plt+0x70ec>
   183d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183d4:	cmp	r0, #0
   183d8:	bge	18438 <__assert_fail@plt+0x70c0>
   183dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183e0:	cmn	r0, #1
   183e4:	bne	1841c <__assert_fail@plt+0x70a4>
   183e8:	b	183ec <__assert_fail@plt+0x7074>
   183ec:	ldr	r0, [fp, #8]
   183f0:	add	r0, r0, #-2147483648	; 0x80000000
   183f4:	movw	r1, #0
   183f8:	cmp	r1, r0
   183fc:	blt	18450 <__assert_fail@plt+0x70d8>
   18400:	b	18464 <__assert_fail@plt+0x70ec>
   18404:	ldr	r0, [pc, #740]	; 186f0 <__assert_fail@plt+0x7378>
   18408:	ldr	r1, [fp, #8]
   1840c:	sub	r1, r1, #1
   18410:	cmp	r0, r1
   18414:	blt	18450 <__assert_fail@plt+0x70d8>
   18418:	b	18464 <__assert_fail@plt+0x70ec>
   1841c:	ldr	r0, [pc, #3024]	; 18ff4 <__assert_fail@plt+0x7c7c>
   18420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18424:	sdiv	r0, r0, r1
   18428:	ldr	r1, [fp, #8]
   1842c:	cmp	r0, r1
   18430:	blt	18450 <__assert_fail@plt+0x70d8>
   18434:	b	18464 <__assert_fail@plt+0x70ec>
   18438:	ldr	r0, [pc, #688]	; 186f0 <__assert_fail@plt+0x7378>
   1843c:	ldr	r1, [fp, #8]
   18440:	sdiv	r0, r0, r1
   18444:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18448:	cmp	r0, r1
   1844c:	bge	18464 <__assert_fail@plt+0x70ec>
   18450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18454:	ldr	r1, [fp, #8]
   18458:	mul	r0, r0, r1
   1845c:	str	r0, [fp, #-28]	; 0xffffffe4
   18460:	b	18af4 <__assert_fail@plt+0x777c>
   18464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18468:	ldr	r1, [fp, #8]
   1846c:	mul	r0, r0, r1
   18470:	str	r0, [fp, #-28]	; 0xffffffe4
   18474:	b	18b00 <__assert_fail@plt+0x7788>
   18478:	ldr	r0, [fp, #8]
   1847c:	cmp	r0, #0
   18480:	bge	18590 <__assert_fail@plt+0x7218>
   18484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18488:	cmp	r0, #0
   1848c:	bge	18518 <__assert_fail@plt+0x71a0>
   18490:	b	184b0 <__assert_fail@plt+0x7138>
   18494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18498:	ldr	r1, [fp, #8]
   1849c:	mvn	r2, #0
   184a0:	udiv	r1, r2, r1
   184a4:	cmp	r0, r1
   184a8:	bcc	1862c <__assert_fail@plt+0x72b4>
   184ac:	b	18640 <__assert_fail@plt+0x72c8>
   184b0:	b	184b4 <__assert_fail@plt+0x713c>
   184b4:	ldr	r0, [pc, #728]	; 18794 <__assert_fail@plt+0x741c>
   184b8:	ldr	r1, [fp, #8]
   184bc:	cmp	r1, r0
   184c0:	blt	184d8 <__assert_fail@plt+0x7160>
   184c4:	b	184e4 <__assert_fail@plt+0x716c>
   184c8:	ldr	r0, [fp, #8]
   184cc:	movw	r1, #0
   184d0:	cmp	r1, r0
   184d4:	bge	184e4 <__assert_fail@plt+0x716c>
   184d8:	movw	r0, #1
   184dc:	str	r0, [fp, #-64]	; 0xffffffc0
   184e0:	b	184fc <__assert_fail@plt+0x7184>
   184e4:	ldr	r0, [fp, #8]
   184e8:	movw	r1, #0
   184ec:	sub	r0, r1, r0
   184f0:	mvn	r1, #0
   184f4:	udiv	r0, r1, r0
   184f8:	str	r0, [fp, #-64]	; 0xffffffc0
   184fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18504:	mvn	r2, #0
   18508:	sub	r1, r2, r1
   1850c:	cmp	r0, r1
   18510:	bls	1862c <__assert_fail@plt+0x72b4>
   18514:	b	18640 <__assert_fail@plt+0x72c8>
   18518:	b	1851c <__assert_fail@plt+0x71a4>
   1851c:	b	18574 <__assert_fail@plt+0x71fc>
   18520:	b	18574 <__assert_fail@plt+0x71fc>
   18524:	ldr	r0, [fp, #8]
   18528:	cmn	r0, #1
   1852c:	bne	18574 <__assert_fail@plt+0x71fc>
   18530:	b	18534 <__assert_fail@plt+0x71bc>
   18534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18538:	add	r0, r0, #0
   1853c:	movw	r1, #0
   18540:	cmp	r1, r0
   18544:	blt	1862c <__assert_fail@plt+0x72b4>
   18548:	b	18640 <__assert_fail@plt+0x72c8>
   1854c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18550:	movw	r1, #0
   18554:	cmp	r1, r0
   18558:	bge	18640 <__assert_fail@plt+0x72c8>
   1855c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18560:	sub	r0, r0, #1
   18564:	mvn	r1, #0
   18568:	cmp	r1, r0
   1856c:	blt	1862c <__assert_fail@plt+0x72b4>
   18570:	b	18640 <__assert_fail@plt+0x72c8>
   18574:	ldr	r0, [fp, #8]
   18578:	movw	r1, #0
   1857c:	sdiv	r0, r1, r0
   18580:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18584:	cmp	r0, r1
   18588:	blt	1862c <__assert_fail@plt+0x72b4>
   1858c:	b	18640 <__assert_fail@plt+0x72c8>
   18590:	ldr	r0, [fp, #8]
   18594:	cmp	r0, #0
   18598:	bne	185a0 <__assert_fail@plt+0x7228>
   1859c:	b	18640 <__assert_fail@plt+0x72c8>
   185a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185a4:	cmp	r0, #0
   185a8:	bge	18614 <__assert_fail@plt+0x729c>
   185ac:	b	185b0 <__assert_fail@plt+0x7238>
   185b0:	b	185f8 <__assert_fail@plt+0x7280>
   185b4:	b	185f8 <__assert_fail@plt+0x7280>
   185b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185bc:	cmn	r0, #1
   185c0:	bne	185f8 <__assert_fail@plt+0x7280>
   185c4:	b	185c8 <__assert_fail@plt+0x7250>
   185c8:	ldr	r0, [fp, #8]
   185cc:	add	r0, r0, #0
   185d0:	movw	r1, #0
   185d4:	cmp	r1, r0
   185d8:	blt	1862c <__assert_fail@plt+0x72b4>
   185dc:	b	18640 <__assert_fail@plt+0x72c8>
   185e0:	ldr	r0, [fp, #8]
   185e4:	sub	r0, r0, #1
   185e8:	mvn	r1, #0
   185ec:	cmp	r1, r0
   185f0:	blt	1862c <__assert_fail@plt+0x72b4>
   185f4:	b	18640 <__assert_fail@plt+0x72c8>
   185f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185fc:	movw	r1, #0
   18600:	sdiv	r0, r1, r0
   18604:	ldr	r1, [fp, #8]
   18608:	cmp	r0, r1
   1860c:	blt	1862c <__assert_fail@plt+0x72b4>
   18610:	b	18640 <__assert_fail@plt+0x72c8>
   18614:	ldr	r0, [fp, #8]
   18618:	mvn	r1, #0
   1861c:	udiv	r0, r1, r0
   18620:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18624:	cmp	r0, r1
   18628:	bcs	18640 <__assert_fail@plt+0x72c8>
   1862c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18630:	ldr	r1, [fp, #8]
   18634:	mul	r0, r0, r1
   18638:	str	r0, [fp, #-28]	; 0xffffffe4
   1863c:	b	18af4 <__assert_fail@plt+0x777c>
   18640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18644:	ldr	r1, [fp, #8]
   18648:	mul	r0, r0, r1
   1864c:	str	r0, [fp, #-28]	; 0xffffffe4
   18650:	b	18b00 <__assert_fail@plt+0x7788>
   18654:	b	18658 <__assert_fail@plt+0x72e0>
   18658:	ldr	r0, [fp, #8]
   1865c:	cmp	r0, #0
   18660:	bge	187d0 <__assert_fail@plt+0x7458>
   18664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18668:	cmp	r0, #0
   1866c:	bge	18748 <__assert_fail@plt+0x73d0>
   18670:	b	18674 <__assert_fail@plt+0x72fc>
   18674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18678:	ldr	r1, [fp, #8]
   1867c:	asr	r3, r1, #31
   18680:	mvn	r2, #0
   18684:	mvn	ip, #-2147483648	; 0x80000000
   18688:	str	r0, [fp, #-68]	; 0xffffffbc
   1868c:	mov	r0, r2
   18690:	str	r1, [fp, #-72]	; 0xffffffb8
   18694:	mov	r1, ip
   18698:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1869c:	bl	1bd9c <__assert_fail@plt+0xaa24>
   186a0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   186a4:	subs	r0, r2, r0
   186a8:	rscs	r1, r1, r2, asr #31
   186ac:	blt	18898 <__assert_fail@plt+0x7520>
   186b0:	b	188ac <__assert_fail@plt+0x7534>
   186b4:	b	186b8 <__assert_fail@plt+0x7340>
   186b8:	ldr	r0, [pc, #212]	; 18794 <__assert_fail@plt+0x741c>
   186bc:	ldr	r1, [fp, #8]
   186c0:	cmp	r1, r0
   186c4:	blt	186dc <__assert_fail@plt+0x7364>
   186c8:	b	186f4 <__assert_fail@plt+0x737c>
   186cc:	ldr	r0, [fp, #8]
   186d0:	movw	r1, #0
   186d4:	cmp	r1, r0
   186d8:	bge	186f4 <__assert_fail@plt+0x737c>
   186dc:	mov	r0, #0
   186e0:	mvn	r1, #0
   186e4:	str	r1, [fp, #-76]	; 0xffffffb4
   186e8:	str	r0, [fp, #-80]	; 0xffffffb0
   186ec:	b	18728 <__assert_fail@plt+0x73b0>
   186f0:	svcvc	0x00ffffff
   186f4:	ldr	r0, [fp, #8]
   186f8:	rsb	r0, r0, #0
   186fc:	asr	r3, r0, #31
   18700:	mvn	r1, #0
   18704:	mvn	r2, #-2147483648	; 0x80000000
   18708:	str	r0, [fp, #-84]	; 0xffffffac
   1870c:	mov	r0, r1
   18710:	mov	r1, r2
   18714:	ldr	r2, [fp, #-84]	; 0xffffffac
   18718:	bl	1bd9c <__assert_fail@plt+0xaa24>
   1871c:	str	r0, [fp, #-76]	; 0xffffffb4
   18720:	str	r1, [fp, #-80]	; 0xffffffb0
   18724:	b	18728 <__assert_fail@plt+0x73b0>
   18728:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1872c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   18730:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18734:	mvn	r2, r2
   18738:	subs	r1, r2, r1
   1873c:	rscs	r0, r0, r2, asr #31
   18740:	bge	18898 <__assert_fail@plt+0x7520>
   18744:	b	188ac <__assert_fail@plt+0x7534>
   18748:	ldr	r0, [fp, #8]
   1874c:	cmn	r0, #1
   18750:	bne	18798 <__assert_fail@plt+0x7420>
   18754:	b	18758 <__assert_fail@plt+0x73e0>
   18758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1875c:	mov	r1, #-2147483648	; 0x80000000
   18760:	add	r1, r1, r0, asr #31
   18764:	rsbs	r0, r0, #0
   18768:	rscs	r1, r1, #0
   1876c:	blt	18898 <__assert_fail@plt+0x7520>
   18770:	b	188ac <__assert_fail@plt+0x7534>
   18774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18778:	movw	r1, #0
   1877c:	cmp	r1, r0
   18780:	bge	188ac <__assert_fail@plt+0x7534>
   18784:	mov	r0, #0
   18788:	cmp	r0, #0
   1878c:	bne	18898 <__assert_fail@plt+0x7520>
   18790:	b	188ac <__assert_fail@plt+0x7534>
   18794:	andhi	r0, r0, r1
   18798:	ldr	r0, [fp, #8]
   1879c:	asr	r3, r0, #31
   187a0:	mov	r1, #0
   187a4:	mov	r2, #-2147483648	; 0x80000000
   187a8:	str	r0, [fp, #-88]	; 0xffffffa8
   187ac:	mov	r0, r1
   187b0:	mov	r1, r2
   187b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   187b8:	bl	1bd9c <__assert_fail@plt+0xaa24>
   187bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187c0:	subs	r0, r0, r2
   187c4:	sbcs	r1, r1, r2, asr #31
   187c8:	blt	18898 <__assert_fail@plt+0x7520>
   187cc:	b	188ac <__assert_fail@plt+0x7534>
   187d0:	ldr	r0, [fp, #8]
   187d4:	cmp	r0, #0
   187d8:	bne	187e0 <__assert_fail@plt+0x7468>
   187dc:	b	188ac <__assert_fail@plt+0x7534>
   187e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187e4:	cmp	r0, #0
   187e8:	bge	18860 <__assert_fail@plt+0x74e8>
   187ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187f0:	cmn	r0, #1
   187f4:	bne	18828 <__assert_fail@plt+0x74b0>
   187f8:	b	187fc <__assert_fail@plt+0x7484>
   187fc:	ldr	r0, [fp, #8]
   18800:	mov	r1, #-2147483648	; 0x80000000
   18804:	add	r1, r1, r0, asr #31
   18808:	rsbs	r0, r0, #0
   1880c:	rscs	r1, r1, #0
   18810:	blt	18898 <__assert_fail@plt+0x7520>
   18814:	b	188ac <__assert_fail@plt+0x7534>
   18818:	mov	r0, #0
   1881c:	cmp	r0, #0
   18820:	bne	18898 <__assert_fail@plt+0x7520>
   18824:	b	188ac <__assert_fail@plt+0x7534>
   18828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1882c:	asr	r3, r0, #31
   18830:	mov	r1, #0
   18834:	mov	r2, #-2147483648	; 0x80000000
   18838:	str	r0, [fp, #-92]	; 0xffffffa4
   1883c:	mov	r0, r1
   18840:	mov	r1, r2
   18844:	ldr	r2, [fp, #-92]	; 0xffffffa4
   18848:	bl	1bd9c <__assert_fail@plt+0xaa24>
   1884c:	ldr	r2, [fp, #8]
   18850:	subs	r0, r0, r2
   18854:	sbcs	r1, r1, r2, asr #31
   18858:	blt	18898 <__assert_fail@plt+0x7520>
   1885c:	b	188ac <__assert_fail@plt+0x7534>
   18860:	ldr	r0, [fp, #8]
   18864:	asr	r3, r0, #31
   18868:	mvn	r1, #0
   1886c:	mvn	r2, #-2147483648	; 0x80000000
   18870:	str	r0, [fp, #-96]	; 0xffffffa0
   18874:	mov	r0, r1
   18878:	mov	r1, r2
   1887c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18880:	bl	1bd9c <__assert_fail@plt+0xaa24>
   18884:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18888:	subs	r0, r0, r2
   1888c:	sbcs	r1, r1, r2, asr #31
   18890:	bge	188ac <__assert_fail@plt+0x7534>
   18894:	b	18898 <__assert_fail@plt+0x7520>
   18898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1889c:	ldr	r1, [fp, #8]
   188a0:	mul	r0, r0, r1
   188a4:	str	r0, [fp, #-28]	; 0xffffffe4
   188a8:	b	18af4 <__assert_fail@plt+0x777c>
   188ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188b0:	ldr	r1, [fp, #8]
   188b4:	mul	r0, r0, r1
   188b8:	str	r0, [fp, #-28]	; 0xffffffe4
   188bc:	b	18b00 <__assert_fail@plt+0x7788>
   188c0:	ldr	r0, [fp, #8]
   188c4:	cmp	r0, #0
   188c8:	bge	18a18 <__assert_fail@plt+0x76a0>
   188cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188d0:	cmp	r0, #0
   188d4:	bge	189a0 <__assert_fail@plt+0x7628>
   188d8:	b	18918 <__assert_fail@plt+0x75a0>
   188dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188e0:	ldr	r1, [fp, #8]
   188e4:	asr	r3, r1, #31
   188e8:	mvn	r2, #0
   188ec:	str	r0, [fp, #-100]	; 0xffffff9c
   188f0:	mov	r0, r2
   188f4:	str	r1, [fp, #-104]	; 0xffffff98
   188f8:	mov	r1, r2
   188fc:	ldr	r2, [fp, #-104]	; 0xffffff98
   18900:	bl	1be70 <__assert_fail@plt+0xaaf8>
   18904:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18908:	subs	r0, r2, r0
   1890c:	rscs	r1, r1, r2, asr #31
   18910:	bcc	18acc <__assert_fail@plt+0x7754>
   18914:	b	18ae0 <__assert_fail@plt+0x7768>
   18918:	b	1891c <__assert_fail@plt+0x75a4>
   1891c:	ldr	r0, [pc, #-400]	; 18794 <__assert_fail@plt+0x741c>
   18920:	ldr	r1, [fp, #8]
   18924:	cmp	r1, r0
   18928:	blt	18940 <__assert_fail@plt+0x75c8>
   1892c:	b	18954 <__assert_fail@plt+0x75dc>
   18930:	ldr	r0, [fp, #8]
   18934:	movw	r1, #0
   18938:	cmp	r1, r0
   1893c:	bge	18954 <__assert_fail@plt+0x75dc>
   18940:	mov	r0, #1
   18944:	mvn	r1, #0
   18948:	str	r1, [sp, #108]	; 0x6c
   1894c:	str	r0, [sp, #104]	; 0x68
   18950:	b	18980 <__assert_fail@plt+0x7608>
   18954:	ldr	r0, [fp, #8]
   18958:	rsb	r0, r0, #0
   1895c:	asr	r3, r0, #31
   18960:	mvn	r1, #0
   18964:	str	r0, [sp, #100]	; 0x64
   18968:	mov	r0, r1
   1896c:	ldr	r2, [sp, #100]	; 0x64
   18970:	bl	1be70 <__assert_fail@plt+0xaaf8>
   18974:	str	r0, [sp, #108]	; 0x6c
   18978:	str	r1, [sp, #104]	; 0x68
   1897c:	b	18980 <__assert_fail@plt+0x7608>
   18980:	ldr	r0, [sp, #104]	; 0x68
   18984:	ldr	r1, [sp, #108]	; 0x6c
   18988:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1898c:	mvn	r2, r2
   18990:	subs	r1, r2, r1
   18994:	rscs	r0, r0, r2, asr #31
   18998:	bcs	18acc <__assert_fail@plt+0x7754>
   1899c:	b	18ae0 <__assert_fail@plt+0x7768>
   189a0:	b	189a4 <__assert_fail@plt+0x762c>
   189a4:	b	189fc <__assert_fail@plt+0x7684>
   189a8:	b	189fc <__assert_fail@plt+0x7684>
   189ac:	ldr	r0, [fp, #8]
   189b0:	cmn	r0, #1
   189b4:	bne	189fc <__assert_fail@plt+0x7684>
   189b8:	b	189bc <__assert_fail@plt+0x7644>
   189bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189c0:	add	r0, r0, #0
   189c4:	movw	r1, #0
   189c8:	cmp	r1, r0
   189cc:	blt	18acc <__assert_fail@plt+0x7754>
   189d0:	b	18ae0 <__assert_fail@plt+0x7768>
   189d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189d8:	movw	r1, #0
   189dc:	cmp	r1, r0
   189e0:	bge	18ae0 <__assert_fail@plt+0x7768>
   189e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189e8:	sub	r0, r0, #1
   189ec:	mvn	r1, #0
   189f0:	cmp	r1, r0
   189f4:	blt	18acc <__assert_fail@plt+0x7754>
   189f8:	b	18ae0 <__assert_fail@plt+0x7768>
   189fc:	ldr	r0, [fp, #8]
   18a00:	movw	r1, #0
   18a04:	sdiv	r0, r1, r0
   18a08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a0c:	cmp	r0, r1
   18a10:	blt	18acc <__assert_fail@plt+0x7754>
   18a14:	b	18ae0 <__assert_fail@plt+0x7768>
   18a18:	ldr	r0, [fp, #8]
   18a1c:	cmp	r0, #0
   18a20:	bne	18a28 <__assert_fail@plt+0x76b0>
   18a24:	b	18ae0 <__assert_fail@plt+0x7768>
   18a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a2c:	cmp	r0, #0
   18a30:	bge	18a9c <__assert_fail@plt+0x7724>
   18a34:	b	18a38 <__assert_fail@plt+0x76c0>
   18a38:	b	18a80 <__assert_fail@plt+0x7708>
   18a3c:	b	18a80 <__assert_fail@plt+0x7708>
   18a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a44:	cmn	r0, #1
   18a48:	bne	18a80 <__assert_fail@plt+0x7708>
   18a4c:	b	18a50 <__assert_fail@plt+0x76d8>
   18a50:	ldr	r0, [fp, #8]
   18a54:	add	r0, r0, #0
   18a58:	movw	r1, #0
   18a5c:	cmp	r1, r0
   18a60:	blt	18acc <__assert_fail@plt+0x7754>
   18a64:	b	18ae0 <__assert_fail@plt+0x7768>
   18a68:	ldr	r0, [fp, #8]
   18a6c:	sub	r0, r0, #1
   18a70:	mvn	r1, #0
   18a74:	cmp	r1, r0
   18a78:	blt	18acc <__assert_fail@plt+0x7754>
   18a7c:	b	18ae0 <__assert_fail@plt+0x7768>
   18a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a84:	movw	r1, #0
   18a88:	sdiv	r0, r1, r0
   18a8c:	ldr	r1, [fp, #8]
   18a90:	cmp	r0, r1
   18a94:	blt	18acc <__assert_fail@plt+0x7754>
   18a98:	b	18ae0 <__assert_fail@plt+0x7768>
   18a9c:	ldr	r0, [fp, #8]
   18aa0:	asr	r3, r0, #31
   18aa4:	mvn	r1, #0
   18aa8:	str	r0, [sp, #96]	; 0x60
   18aac:	mov	r0, r1
   18ab0:	ldr	r2, [sp, #96]	; 0x60
   18ab4:	bl	1be70 <__assert_fail@plt+0xaaf8>
   18ab8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18abc:	subs	r0, r0, r2
   18ac0:	sbcs	r1, r1, r2, asr #31
   18ac4:	bcs	18ae0 <__assert_fail@plt+0x7768>
   18ac8:	b	18acc <__assert_fail@plt+0x7754>
   18acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ad0:	ldr	r1, [fp, #8]
   18ad4:	mul	r0, r0, r1
   18ad8:	str	r0, [fp, #-28]	; 0xffffffe4
   18adc:	b	18af4 <__assert_fail@plt+0x777c>
   18ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ae4:	ldr	r1, [fp, #8]
   18ae8:	mul	r0, r0, r1
   18aec:	str	r0, [fp, #-28]	; 0xffffffe4
   18af0:	b	18b00 <__assert_fail@plt+0x7788>
   18af4:	ldr	r0, [pc, #-1036]	; 186f0 <__assert_fail@plt+0x7378>
   18af8:	str	r0, [sp, #92]	; 0x5c
   18afc:	b	18b20 <__assert_fail@plt+0x77a8>
   18b00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18b04:	cmp	r0, #64	; 0x40
   18b08:	movw	r0, #0
   18b0c:	movlt	r0, #1
   18b10:	tst	r0, #1
   18b14:	movw	r0, #64	; 0x40
   18b18:	moveq	r0, #0
   18b1c:	str	r0, [sp, #92]	; 0x5c
   18b20:	ldr	r0, [sp, #92]	; 0x5c
   18b24:	str	r0, [fp, #-32]	; 0xffffffe0
   18b28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b2c:	cmp	r0, #0
   18b30:	beq	18b60 <__assert_fail@plt+0x77e8>
   18b34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b38:	ldr	r1, [fp, #8]
   18b3c:	sdiv	r0, r0, r1
   18b40:	str	r0, [fp, #-24]	; 0xffffffe8
   18b44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b48:	mov	r1, r0
   18b4c:	ldr	r2, [fp, #8]
   18b50:	sdiv	r3, r0, r2
   18b54:	mls	r0, r3, r2, r0
   18b58:	sub	r0, r1, r0
   18b5c:	str	r0, [fp, #-28]	; 0xffffffe4
   18b60:	ldr	r0, [fp, #-4]
   18b64:	movw	r1, #0
   18b68:	cmp	r0, r1
   18b6c:	bne	18b7c <__assert_fail@plt+0x7804>
   18b70:	ldr	r0, [fp, #-8]
   18b74:	movw	r1, #0
   18b78:	str	r1, [r0]
   18b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b80:	ldr	r1, [fp, #-20]	; 0xffffffec
   18b84:	sub	r0, r0, r1
   18b88:	ldr	r1, [fp, #-12]
   18b8c:	cmp	r0, r1
   18b90:	bge	19f7c <__assert_fail@plt+0x8c04>
   18b94:	ldr	r0, [fp, #-20]	; 0xffffffec
   18b98:	ldr	r1, [fp, #-12]
   18b9c:	add	r1, r0, r1
   18ba0:	mov	r2, #1
   18ba4:	cmp	r1, r0
   18ba8:	movwvc	r2, #0
   18bac:	str	r1, [fp, #-24]	; 0xffffffe8
   18bb0:	tst	r2, #1
   18bb4:	bne	19f78 <__assert_fail@plt+0x8c00>
   18bb8:	ldr	r0, [fp, #-16]
   18bbc:	movw	r1, #0
   18bc0:	cmp	r1, r0
   18bc4:	bgt	18bd8 <__assert_fail@plt+0x7860>
   18bc8:	ldr	r0, [fp, #-16]
   18bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bd0:	cmp	r0, r1
   18bd4:	blt	19f78 <__assert_fail@plt+0x8c00>
   18bd8:	b	18fb4 <__assert_fail@plt+0x7c3c>
   18bdc:			; <UNDEFINED> instruction: 0xffff8000
   18be0:	b	18be4 <__assert_fail@plt+0x786c>
   18be4:	ldr	r0, [fp, #8]
   18be8:	cmp	r0, #0
   18bec:	bge	18d00 <__assert_fail@plt+0x7988>
   18bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bf4:	cmp	r0, #0
   18bf8:	bge	18c84 <__assert_fail@plt+0x790c>
   18bfc:	b	18c00 <__assert_fail@plt+0x7888>
   18c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c04:	ldr	r1, [fp, #8]
   18c08:	movw	r2, #127	; 0x7f
   18c0c:	sdiv	r1, r2, r1
   18c10:	cmp	r0, r1
   18c14:	blt	18da0 <__assert_fail@plt+0x7a28>
   18c18:	b	18db8 <__assert_fail@plt+0x7a40>
   18c1c:	b	18c20 <__assert_fail@plt+0x78a8>
   18c20:	ldr	r0, [pc, #-1172]	; 18794 <__assert_fail@plt+0x741c>
   18c24:	ldr	r1, [fp, #8]
   18c28:	cmp	r1, r0
   18c2c:	blt	18c44 <__assert_fail@plt+0x78cc>
   18c30:	b	18c50 <__assert_fail@plt+0x78d8>
   18c34:	ldr	r0, [fp, #8]
   18c38:	movw	r1, #0
   18c3c:	cmp	r1, r0
   18c40:	bge	18c50 <__assert_fail@plt+0x78d8>
   18c44:	movw	r0, #0
   18c48:	str	r0, [sp, #88]	; 0x58
   18c4c:	b	18c68 <__assert_fail@plt+0x78f0>
   18c50:	ldr	r0, [fp, #8]
   18c54:	movw	r1, #0
   18c58:	sub	r0, r1, r0
   18c5c:	movw	r1, #127	; 0x7f
   18c60:	sdiv	r0, r1, r0
   18c64:	str	r0, [sp, #88]	; 0x58
   18c68:	ldr	r0, [sp, #88]	; 0x58
   18c6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c70:	mvn	r2, #0
   18c74:	sub	r1, r2, r1
   18c78:	cmp	r0, r1
   18c7c:	ble	18da0 <__assert_fail@plt+0x7a28>
   18c80:	b	18db8 <__assert_fail@plt+0x7a40>
   18c84:	b	18c88 <__assert_fail@plt+0x7910>
   18c88:	b	18ce4 <__assert_fail@plt+0x796c>
   18c8c:	b	18ce4 <__assert_fail@plt+0x796c>
   18c90:	ldr	r0, [fp, #8]
   18c94:	cmn	r0, #1
   18c98:	bne	18ce4 <__assert_fail@plt+0x796c>
   18c9c:	b	18ca0 <__assert_fail@plt+0x7928>
   18ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ca4:	mvn	r1, #127	; 0x7f
   18ca8:	add	r0, r0, r1
   18cac:	movw	r1, #0
   18cb0:	cmp	r1, r0
   18cb4:	blt	18da0 <__assert_fail@plt+0x7a28>
   18cb8:	b	18db8 <__assert_fail@plt+0x7a40>
   18cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cc0:	movw	r1, #0
   18cc4:	cmp	r1, r0
   18cc8:	bge	18db8 <__assert_fail@plt+0x7a40>
   18ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cd0:	sub	r0, r0, #1
   18cd4:	movw	r1, #127	; 0x7f
   18cd8:	cmp	r1, r0
   18cdc:	blt	18da0 <__assert_fail@plt+0x7a28>
   18ce0:	b	18db8 <__assert_fail@plt+0x7a40>
   18ce4:	ldr	r0, [fp, #8]
   18ce8:	mvn	r1, #127	; 0x7f
   18cec:	sdiv	r0, r1, r0
   18cf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cf4:	cmp	r0, r1
   18cf8:	blt	18da0 <__assert_fail@plt+0x7a28>
   18cfc:	b	18db8 <__assert_fail@plt+0x7a40>
   18d00:	ldr	r0, [fp, #8]
   18d04:	cmp	r0, #0
   18d08:	bne	18d10 <__assert_fail@plt+0x7998>
   18d0c:	b	18db8 <__assert_fail@plt+0x7a40>
   18d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d14:	cmp	r0, #0
   18d18:	bge	18d88 <__assert_fail@plt+0x7a10>
   18d1c:	b	18d20 <__assert_fail@plt+0x79a8>
   18d20:	b	18d6c <__assert_fail@plt+0x79f4>
   18d24:	b	18d6c <__assert_fail@plt+0x79f4>
   18d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d2c:	cmn	r0, #1
   18d30:	bne	18d6c <__assert_fail@plt+0x79f4>
   18d34:	b	18d38 <__assert_fail@plt+0x79c0>
   18d38:	ldr	r0, [fp, #8]
   18d3c:	mvn	r1, #127	; 0x7f
   18d40:	add	r0, r0, r1
   18d44:	movw	r1, #0
   18d48:	cmp	r1, r0
   18d4c:	blt	18da0 <__assert_fail@plt+0x7a28>
   18d50:	b	18db8 <__assert_fail@plt+0x7a40>
   18d54:	ldr	r0, [fp, #8]
   18d58:	sub	r0, r0, #1
   18d5c:	movw	r1, #127	; 0x7f
   18d60:	cmp	r1, r0
   18d64:	blt	18da0 <__assert_fail@plt+0x7a28>
   18d68:	b	18db8 <__assert_fail@plt+0x7a40>
   18d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d70:	mvn	r1, #127	; 0x7f
   18d74:	sdiv	r0, r1, r0
   18d78:	ldr	r1, [fp, #8]
   18d7c:	cmp	r0, r1
   18d80:	blt	18da0 <__assert_fail@plt+0x7a28>
   18d84:	b	18db8 <__assert_fail@plt+0x7a40>
   18d88:	ldr	r0, [fp, #8]
   18d8c:	movw	r1, #127	; 0x7f
   18d90:	sdiv	r0, r1, r0
   18d94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d98:	cmp	r0, r1
   18d9c:	bge	18db8 <__assert_fail@plt+0x7a40>
   18da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18da4:	ldr	r1, [fp, #8]
   18da8:	mul	r0, r0, r1
   18dac:	sxtb	r0, r0
   18db0:	str	r0, [fp, #-28]	; 0xffffffe4
   18db4:	b	19f78 <__assert_fail@plt+0x8c00>
   18db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dbc:	ldr	r1, [fp, #8]
   18dc0:	mul	r0, r0, r1
   18dc4:	sxtb	r0, r0
   18dc8:	str	r0, [fp, #-28]	; 0xffffffe4
   18dcc:	b	19f7c <__assert_fail@plt+0x8c04>
   18dd0:	ldr	r0, [fp, #8]
   18dd4:	cmp	r0, #0
   18dd8:	bge	18ee8 <__assert_fail@plt+0x7b70>
   18ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18de0:	cmp	r0, #0
   18de4:	bge	18e70 <__assert_fail@plt+0x7af8>
   18de8:	b	18dec <__assert_fail@plt+0x7a74>
   18dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df0:	ldr	r1, [fp, #8]
   18df4:	movw	r2, #255	; 0xff
   18df8:	sdiv	r1, r2, r1
   18dfc:	cmp	r0, r1
   18e00:	blt	18f84 <__assert_fail@plt+0x7c0c>
   18e04:	b	18f9c <__assert_fail@plt+0x7c24>
   18e08:	b	18e0c <__assert_fail@plt+0x7a94>
   18e0c:	ldr	r0, [pc, #-1664]	; 18794 <__assert_fail@plt+0x741c>
   18e10:	ldr	r1, [fp, #8]
   18e14:	cmp	r1, r0
   18e18:	blt	18e30 <__assert_fail@plt+0x7ab8>
   18e1c:	b	18e3c <__assert_fail@plt+0x7ac4>
   18e20:	ldr	r0, [fp, #8]
   18e24:	movw	r1, #0
   18e28:	cmp	r1, r0
   18e2c:	bge	18e3c <__assert_fail@plt+0x7ac4>
   18e30:	movw	r0, #0
   18e34:	str	r0, [sp, #84]	; 0x54
   18e38:	b	18e54 <__assert_fail@plt+0x7adc>
   18e3c:	ldr	r0, [fp, #8]
   18e40:	movw	r1, #0
   18e44:	sub	r0, r1, r0
   18e48:	movw	r1, #255	; 0xff
   18e4c:	sdiv	r0, r1, r0
   18e50:	str	r0, [sp, #84]	; 0x54
   18e54:	ldr	r0, [sp, #84]	; 0x54
   18e58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e5c:	mvn	r2, #0
   18e60:	sub	r1, r2, r1
   18e64:	cmp	r0, r1
   18e68:	ble	18f84 <__assert_fail@plt+0x7c0c>
   18e6c:	b	18f9c <__assert_fail@plt+0x7c24>
   18e70:	b	18e74 <__assert_fail@plt+0x7afc>
   18e74:	b	18ecc <__assert_fail@plt+0x7b54>
   18e78:	b	18ecc <__assert_fail@plt+0x7b54>
   18e7c:	ldr	r0, [fp, #8]
   18e80:	cmn	r0, #1
   18e84:	bne	18ecc <__assert_fail@plt+0x7b54>
   18e88:	b	18e8c <__assert_fail@plt+0x7b14>
   18e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e90:	add	r0, r0, #0
   18e94:	movw	r1, #0
   18e98:	cmp	r1, r0
   18e9c:	blt	18f84 <__assert_fail@plt+0x7c0c>
   18ea0:	b	18f9c <__assert_fail@plt+0x7c24>
   18ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ea8:	movw	r1, #0
   18eac:	cmp	r1, r0
   18eb0:	bge	18f9c <__assert_fail@plt+0x7c24>
   18eb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18eb8:	sub	r0, r0, #1
   18ebc:	mvn	r1, #0
   18ec0:	cmp	r1, r0
   18ec4:	blt	18f84 <__assert_fail@plt+0x7c0c>
   18ec8:	b	18f9c <__assert_fail@plt+0x7c24>
   18ecc:	ldr	r0, [fp, #8]
   18ed0:	movw	r1, #0
   18ed4:	sdiv	r0, r1, r0
   18ed8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18edc:	cmp	r0, r1
   18ee0:	blt	18f84 <__assert_fail@plt+0x7c0c>
   18ee4:	b	18f9c <__assert_fail@plt+0x7c24>
   18ee8:	ldr	r0, [fp, #8]
   18eec:	cmp	r0, #0
   18ef0:	bne	18ef8 <__assert_fail@plt+0x7b80>
   18ef4:	b	18f9c <__assert_fail@plt+0x7c24>
   18ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18efc:	cmp	r0, #0
   18f00:	bge	18f6c <__assert_fail@plt+0x7bf4>
   18f04:	b	18f08 <__assert_fail@plt+0x7b90>
   18f08:	b	18f50 <__assert_fail@plt+0x7bd8>
   18f0c:	b	18f50 <__assert_fail@plt+0x7bd8>
   18f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f14:	cmn	r0, #1
   18f18:	bne	18f50 <__assert_fail@plt+0x7bd8>
   18f1c:	b	18f20 <__assert_fail@plt+0x7ba8>
   18f20:	ldr	r0, [fp, #8]
   18f24:	add	r0, r0, #0
   18f28:	movw	r1, #0
   18f2c:	cmp	r1, r0
   18f30:	blt	18f84 <__assert_fail@plt+0x7c0c>
   18f34:	b	18f9c <__assert_fail@plt+0x7c24>
   18f38:	ldr	r0, [fp, #8]
   18f3c:	sub	r0, r0, #1
   18f40:	mvn	r1, #0
   18f44:	cmp	r1, r0
   18f48:	blt	18f84 <__assert_fail@plt+0x7c0c>
   18f4c:	b	18f9c <__assert_fail@plt+0x7c24>
   18f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f54:	movw	r1, #0
   18f58:	sdiv	r0, r1, r0
   18f5c:	ldr	r1, [fp, #8]
   18f60:	cmp	r0, r1
   18f64:	blt	18f84 <__assert_fail@plt+0x7c0c>
   18f68:	b	18f9c <__assert_fail@plt+0x7c24>
   18f6c:	ldr	r0, [fp, #8]
   18f70:	movw	r1, #255	; 0xff
   18f74:	sdiv	r0, r1, r0
   18f78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f7c:	cmp	r0, r1
   18f80:	bge	18f9c <__assert_fail@plt+0x7c24>
   18f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f88:	ldr	r1, [fp, #8]
   18f8c:	mul	r0, r0, r1
   18f90:	and	r0, r0, #255	; 0xff
   18f94:	str	r0, [fp, #-28]	; 0xffffffe4
   18f98:	b	19f78 <__assert_fail@plt+0x8c00>
   18f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fa0:	ldr	r1, [fp, #8]
   18fa4:	mul	r0, r0, r1
   18fa8:	and	r0, r0, #255	; 0xff
   18fac:	str	r0, [fp, #-28]	; 0xffffffe4
   18fb0:	b	19f7c <__assert_fail@plt+0x8c04>
   18fb4:	b	19390 <__assert_fail@plt+0x8018>
   18fb8:	b	18fbc <__assert_fail@plt+0x7c44>
   18fbc:	ldr	r0, [fp, #8]
   18fc0:	cmp	r0, #0
   18fc4:	bge	190dc <__assert_fail@plt+0x7d64>
   18fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fcc:	cmp	r0, #0
   18fd0:	bge	19060 <__assert_fail@plt+0x7ce8>
   18fd4:	b	18fd8 <__assert_fail@plt+0x7c60>
   18fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fdc:	ldr	r1, [fp, #8]
   18fe0:	movw	r2, #32767	; 0x7fff
   18fe4:	sdiv	r1, r2, r1
   18fe8:	cmp	r0, r1
   18fec:	blt	1917c <__assert_fail@plt+0x7e04>
   18ff0:	b	19194 <__assert_fail@plt+0x7e1c>
   18ff4:	andhi	r0, r0, r0
   18ff8:	b	18ffc <__assert_fail@plt+0x7c84>
   18ffc:	ldr	r0, [pc, #4004]	; 19fa8 <__assert_fail@plt+0x8c30>
   19000:	ldr	r1, [fp, #8]
   19004:	cmp	r1, r0
   19008:	blt	19020 <__assert_fail@plt+0x7ca8>
   1900c:	b	1902c <__assert_fail@plt+0x7cb4>
   19010:	ldr	r0, [fp, #8]
   19014:	movw	r1, #0
   19018:	cmp	r1, r0
   1901c:	bge	1902c <__assert_fail@plt+0x7cb4>
   19020:	movw	r0, #0
   19024:	str	r0, [sp, #80]	; 0x50
   19028:	b	19044 <__assert_fail@plt+0x7ccc>
   1902c:	ldr	r0, [fp, #8]
   19030:	movw	r1, #0
   19034:	sub	r0, r1, r0
   19038:	movw	r1, #32767	; 0x7fff
   1903c:	sdiv	r0, r1, r0
   19040:	str	r0, [sp, #80]	; 0x50
   19044:	ldr	r0, [sp, #80]	; 0x50
   19048:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1904c:	mvn	r2, #0
   19050:	sub	r1, r2, r1
   19054:	cmp	r0, r1
   19058:	ble	1917c <__assert_fail@plt+0x7e04>
   1905c:	b	19194 <__assert_fail@plt+0x7e1c>
   19060:	b	19064 <__assert_fail@plt+0x7cec>
   19064:	b	190c0 <__assert_fail@plt+0x7d48>
   19068:	b	190c0 <__assert_fail@plt+0x7d48>
   1906c:	ldr	r0, [fp, #8]
   19070:	cmn	r0, #1
   19074:	bne	190c0 <__assert_fail@plt+0x7d48>
   19078:	b	1907c <__assert_fail@plt+0x7d04>
   1907c:	ldr	r0, [pc, #3884]	; 19fb0 <__assert_fail@plt+0x8c38>
   19080:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19084:	add	r0, r1, r0
   19088:	movw	r1, #0
   1908c:	cmp	r1, r0
   19090:	blt	1917c <__assert_fail@plt+0x7e04>
   19094:	b	19194 <__assert_fail@plt+0x7e1c>
   19098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1909c:	movw	r1, #0
   190a0:	cmp	r1, r0
   190a4:	bge	19194 <__assert_fail@plt+0x7e1c>
   190a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190ac:	sub	r0, r0, #1
   190b0:	movw	r1, #32767	; 0x7fff
   190b4:	cmp	r1, r0
   190b8:	blt	1917c <__assert_fail@plt+0x7e04>
   190bc:	b	19194 <__assert_fail@plt+0x7e1c>
   190c0:	ldr	r0, [pc, #3816]	; 19fb0 <__assert_fail@plt+0x8c38>
   190c4:	ldr	r1, [fp, #8]
   190c8:	sdiv	r0, r0, r1
   190cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190d0:	cmp	r0, r1
   190d4:	blt	1917c <__assert_fail@plt+0x7e04>
   190d8:	b	19194 <__assert_fail@plt+0x7e1c>
   190dc:	ldr	r0, [fp, #8]
   190e0:	cmp	r0, #0
   190e4:	bne	190ec <__assert_fail@plt+0x7d74>
   190e8:	b	19194 <__assert_fail@plt+0x7e1c>
   190ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190f0:	cmp	r0, #0
   190f4:	bge	19164 <__assert_fail@plt+0x7dec>
   190f8:	b	190fc <__assert_fail@plt+0x7d84>
   190fc:	b	19148 <__assert_fail@plt+0x7dd0>
   19100:	b	19148 <__assert_fail@plt+0x7dd0>
   19104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19108:	cmn	r0, #1
   1910c:	bne	19148 <__assert_fail@plt+0x7dd0>
   19110:	b	19114 <__assert_fail@plt+0x7d9c>
   19114:	ldr	r0, [pc, #3732]	; 19fb0 <__assert_fail@plt+0x8c38>
   19118:	ldr	r1, [fp, #8]
   1911c:	add	r0, r1, r0
   19120:	movw	r1, #0
   19124:	cmp	r1, r0
   19128:	blt	1917c <__assert_fail@plt+0x7e04>
   1912c:	b	19194 <__assert_fail@plt+0x7e1c>
   19130:	ldr	r0, [fp, #8]
   19134:	sub	r0, r0, #1
   19138:	movw	r1, #32767	; 0x7fff
   1913c:	cmp	r1, r0
   19140:	blt	1917c <__assert_fail@plt+0x7e04>
   19144:	b	19194 <__assert_fail@plt+0x7e1c>
   19148:	ldr	r0, [pc, #3680]	; 19fb0 <__assert_fail@plt+0x8c38>
   1914c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19150:	sdiv	r0, r0, r1
   19154:	ldr	r1, [fp, #8]
   19158:	cmp	r0, r1
   1915c:	blt	1917c <__assert_fail@plt+0x7e04>
   19160:	b	19194 <__assert_fail@plt+0x7e1c>
   19164:	ldr	r0, [fp, #8]
   19168:	movw	r1, #32767	; 0x7fff
   1916c:	sdiv	r0, r1, r0
   19170:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19174:	cmp	r0, r1
   19178:	bge	19194 <__assert_fail@plt+0x7e1c>
   1917c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19180:	ldr	r1, [fp, #8]
   19184:	mul	r0, r0, r1
   19188:	sxth	r0, r0
   1918c:	str	r0, [fp, #-28]	; 0xffffffe4
   19190:	b	19f78 <__assert_fail@plt+0x8c00>
   19194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19198:	ldr	r1, [fp, #8]
   1919c:	mul	r0, r0, r1
   191a0:	sxth	r0, r0
   191a4:	str	r0, [fp, #-28]	; 0xffffffe4
   191a8:	b	19f7c <__assert_fail@plt+0x8c04>
   191ac:	ldr	r0, [fp, #8]
   191b0:	cmp	r0, #0
   191b4:	bge	192c4 <__assert_fail@plt+0x7f4c>
   191b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191bc:	cmp	r0, #0
   191c0:	bge	1924c <__assert_fail@plt+0x7ed4>
   191c4:	b	191c8 <__assert_fail@plt+0x7e50>
   191c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191cc:	ldr	r1, [fp, #8]
   191d0:	movw	r2, #65535	; 0xffff
   191d4:	sdiv	r1, r2, r1
   191d8:	cmp	r0, r1
   191dc:	blt	19360 <__assert_fail@plt+0x7fe8>
   191e0:	b	19378 <__assert_fail@plt+0x8000>
   191e4:	b	191e8 <__assert_fail@plt+0x7e70>
   191e8:	ldr	r0, [pc, #3512]	; 19fa8 <__assert_fail@plt+0x8c30>
   191ec:	ldr	r1, [fp, #8]
   191f0:	cmp	r1, r0
   191f4:	blt	1920c <__assert_fail@plt+0x7e94>
   191f8:	b	19218 <__assert_fail@plt+0x7ea0>
   191fc:	ldr	r0, [fp, #8]
   19200:	movw	r1, #0
   19204:	cmp	r1, r0
   19208:	bge	19218 <__assert_fail@plt+0x7ea0>
   1920c:	movw	r0, #0
   19210:	str	r0, [sp, #76]	; 0x4c
   19214:	b	19230 <__assert_fail@plt+0x7eb8>
   19218:	ldr	r0, [fp, #8]
   1921c:	movw	r1, #0
   19220:	sub	r0, r1, r0
   19224:	movw	r1, #65535	; 0xffff
   19228:	sdiv	r0, r1, r0
   1922c:	str	r0, [sp, #76]	; 0x4c
   19230:	ldr	r0, [sp, #76]	; 0x4c
   19234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19238:	mvn	r2, #0
   1923c:	sub	r1, r2, r1
   19240:	cmp	r0, r1
   19244:	ble	19360 <__assert_fail@plt+0x7fe8>
   19248:	b	19378 <__assert_fail@plt+0x8000>
   1924c:	b	19250 <__assert_fail@plt+0x7ed8>
   19250:	b	192a8 <__assert_fail@plt+0x7f30>
   19254:	b	192a8 <__assert_fail@plt+0x7f30>
   19258:	ldr	r0, [fp, #8]
   1925c:	cmn	r0, #1
   19260:	bne	192a8 <__assert_fail@plt+0x7f30>
   19264:	b	19268 <__assert_fail@plt+0x7ef0>
   19268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1926c:	add	r0, r0, #0
   19270:	movw	r1, #0
   19274:	cmp	r1, r0
   19278:	blt	19360 <__assert_fail@plt+0x7fe8>
   1927c:	b	19378 <__assert_fail@plt+0x8000>
   19280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19284:	movw	r1, #0
   19288:	cmp	r1, r0
   1928c:	bge	19378 <__assert_fail@plt+0x8000>
   19290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19294:	sub	r0, r0, #1
   19298:	mvn	r1, #0
   1929c:	cmp	r1, r0
   192a0:	blt	19360 <__assert_fail@plt+0x7fe8>
   192a4:	b	19378 <__assert_fail@plt+0x8000>
   192a8:	ldr	r0, [fp, #8]
   192ac:	movw	r1, #0
   192b0:	sdiv	r0, r1, r0
   192b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192b8:	cmp	r0, r1
   192bc:	blt	19360 <__assert_fail@plt+0x7fe8>
   192c0:	b	19378 <__assert_fail@plt+0x8000>
   192c4:	ldr	r0, [fp, #8]
   192c8:	cmp	r0, #0
   192cc:	bne	192d4 <__assert_fail@plt+0x7f5c>
   192d0:	b	19378 <__assert_fail@plt+0x8000>
   192d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192d8:	cmp	r0, #0
   192dc:	bge	19348 <__assert_fail@plt+0x7fd0>
   192e0:	b	192e4 <__assert_fail@plt+0x7f6c>
   192e4:	b	1932c <__assert_fail@plt+0x7fb4>
   192e8:	b	1932c <__assert_fail@plt+0x7fb4>
   192ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192f0:	cmn	r0, #1
   192f4:	bne	1932c <__assert_fail@plt+0x7fb4>
   192f8:	b	192fc <__assert_fail@plt+0x7f84>
   192fc:	ldr	r0, [fp, #8]
   19300:	add	r0, r0, #0
   19304:	movw	r1, #0
   19308:	cmp	r1, r0
   1930c:	blt	19360 <__assert_fail@plt+0x7fe8>
   19310:	b	19378 <__assert_fail@plt+0x8000>
   19314:	ldr	r0, [fp, #8]
   19318:	sub	r0, r0, #1
   1931c:	mvn	r1, #0
   19320:	cmp	r1, r0
   19324:	blt	19360 <__assert_fail@plt+0x7fe8>
   19328:	b	19378 <__assert_fail@plt+0x8000>
   1932c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19330:	movw	r1, #0
   19334:	sdiv	r0, r1, r0
   19338:	ldr	r1, [fp, #8]
   1933c:	cmp	r0, r1
   19340:	blt	19360 <__assert_fail@plt+0x7fe8>
   19344:	b	19378 <__assert_fail@plt+0x8000>
   19348:	ldr	r0, [fp, #8]
   1934c:	movw	r1, #65535	; 0xffff
   19350:	sdiv	r0, r1, r0
   19354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19358:	cmp	r0, r1
   1935c:	bge	19378 <__assert_fail@plt+0x8000>
   19360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19364:	ldr	r1, [fp, #8]
   19368:	mul	r0, r0, r1
   1936c:	uxth	r0, r0
   19370:	str	r0, [fp, #-28]	; 0xffffffe4
   19374:	b	19f78 <__assert_fail@plt+0x8c00>
   19378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1937c:	ldr	r1, [fp, #8]
   19380:	mul	r0, r0, r1
   19384:	uxth	r0, r0
   19388:	str	r0, [fp, #-28]	; 0xffffffe4
   1938c:	b	19f7c <__assert_fail@plt+0x8c04>
   19390:	b	19394 <__assert_fail@plt+0x801c>
   19394:	b	19398 <__assert_fail@plt+0x8020>
   19398:	ldr	r0, [fp, #8]
   1939c:	cmp	r0, #0
   193a0:	bge	194a4 <__assert_fail@plt+0x812c>
   193a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193a8:	cmp	r0, #0
   193ac:	bge	19438 <__assert_fail@plt+0x80c0>
   193b0:	b	193b4 <__assert_fail@plt+0x803c>
   193b4:	ldr	r0, [pc, #3048]	; 19fa4 <__assert_fail@plt+0x8c2c>
   193b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193bc:	ldr	r2, [fp, #8]
   193c0:	sdiv	r0, r0, r2
   193c4:	cmp	r1, r0
   193c8:	blt	19534 <__assert_fail@plt+0x81bc>
   193cc:	b	19548 <__assert_fail@plt+0x81d0>
   193d0:	b	193d4 <__assert_fail@plt+0x805c>
   193d4:	ldr	r0, [pc, #3020]	; 19fa8 <__assert_fail@plt+0x8c30>
   193d8:	ldr	r1, [fp, #8]
   193dc:	cmp	r1, r0
   193e0:	blt	193f8 <__assert_fail@plt+0x8080>
   193e4:	b	19404 <__assert_fail@plt+0x808c>
   193e8:	ldr	r0, [fp, #8]
   193ec:	movw	r1, #0
   193f0:	cmp	r1, r0
   193f4:	bge	19404 <__assert_fail@plt+0x808c>
   193f8:	movw	r0, #0
   193fc:	str	r0, [sp, #72]	; 0x48
   19400:	b	1941c <__assert_fail@plt+0x80a4>
   19404:	ldr	r0, [pc, #2968]	; 19fa4 <__assert_fail@plt+0x8c2c>
   19408:	ldr	r1, [fp, #8]
   1940c:	movw	r2, #0
   19410:	sub	r1, r2, r1
   19414:	sdiv	r0, r0, r1
   19418:	str	r0, [sp, #72]	; 0x48
   1941c:	ldr	r0, [sp, #72]	; 0x48
   19420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19424:	mvn	r2, #0
   19428:	sub	r1, r2, r1
   1942c:	cmp	r0, r1
   19430:	ble	19534 <__assert_fail@plt+0x81bc>
   19434:	b	19548 <__assert_fail@plt+0x81d0>
   19438:	ldr	r0, [fp, #8]
   1943c:	cmn	r0, #1
   19440:	bne	19488 <__assert_fail@plt+0x8110>
   19444:	b	19448 <__assert_fail@plt+0x80d0>
   19448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1944c:	add	r0, r0, #-2147483648	; 0x80000000
   19450:	movw	r1, #0
   19454:	cmp	r1, r0
   19458:	blt	19534 <__assert_fail@plt+0x81bc>
   1945c:	b	19548 <__assert_fail@plt+0x81d0>
   19460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19464:	movw	r1, #0
   19468:	cmp	r1, r0
   1946c:	bge	19548 <__assert_fail@plt+0x81d0>
   19470:	ldr	r0, [pc, #2860]	; 19fa4 <__assert_fail@plt+0x8c2c>
   19474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19478:	sub	r1, r1, #1
   1947c:	cmp	r0, r1
   19480:	blt	19534 <__assert_fail@plt+0x81bc>
   19484:	b	19548 <__assert_fail@plt+0x81d0>
   19488:	ldr	r0, [pc, #2844]	; 19fac <__assert_fail@plt+0x8c34>
   1948c:	ldr	r1, [fp, #8]
   19490:	sdiv	r0, r0, r1
   19494:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19498:	cmp	r0, r1
   1949c:	blt	19534 <__assert_fail@plt+0x81bc>
   194a0:	b	19548 <__assert_fail@plt+0x81d0>
   194a4:	ldr	r0, [fp, #8]
   194a8:	cmp	r0, #0
   194ac:	bne	194b4 <__assert_fail@plt+0x813c>
   194b0:	b	19548 <__assert_fail@plt+0x81d0>
   194b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194b8:	cmp	r0, #0
   194bc:	bge	1951c <__assert_fail@plt+0x81a4>
   194c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194c4:	cmn	r0, #1
   194c8:	bne	19500 <__assert_fail@plt+0x8188>
   194cc:	b	194d0 <__assert_fail@plt+0x8158>
   194d0:	ldr	r0, [fp, #8]
   194d4:	add	r0, r0, #-2147483648	; 0x80000000
   194d8:	movw	r1, #0
   194dc:	cmp	r1, r0
   194e0:	blt	19534 <__assert_fail@plt+0x81bc>
   194e4:	b	19548 <__assert_fail@plt+0x81d0>
   194e8:	ldr	r0, [pc, #2740]	; 19fa4 <__assert_fail@plt+0x8c2c>
   194ec:	ldr	r1, [fp, #8]
   194f0:	sub	r1, r1, #1
   194f4:	cmp	r0, r1
   194f8:	blt	19534 <__assert_fail@plt+0x81bc>
   194fc:	b	19548 <__assert_fail@plt+0x81d0>
   19500:	ldr	r0, [pc, #2724]	; 19fac <__assert_fail@plt+0x8c34>
   19504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19508:	sdiv	r0, r0, r1
   1950c:	ldr	r1, [fp, #8]
   19510:	cmp	r0, r1
   19514:	blt	19534 <__assert_fail@plt+0x81bc>
   19518:	b	19548 <__assert_fail@plt+0x81d0>
   1951c:	ldr	r0, [pc, #2688]	; 19fa4 <__assert_fail@plt+0x8c2c>
   19520:	ldr	r1, [fp, #8]
   19524:	sdiv	r0, r0, r1
   19528:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1952c:	cmp	r0, r1
   19530:	bge	19548 <__assert_fail@plt+0x81d0>
   19534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19538:	ldr	r1, [fp, #8]
   1953c:	mul	r0, r0, r1
   19540:	str	r0, [fp, #-28]	; 0xffffffe4
   19544:	b	19f78 <__assert_fail@plt+0x8c00>
   19548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1954c:	ldr	r1, [fp, #8]
   19550:	mul	r0, r0, r1
   19554:	str	r0, [fp, #-28]	; 0xffffffe4
   19558:	b	19f7c <__assert_fail@plt+0x8c04>
   1955c:	ldr	r0, [fp, #8]
   19560:	cmp	r0, #0
   19564:	bge	19674 <__assert_fail@plt+0x82fc>
   19568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1956c:	cmp	r0, #0
   19570:	bge	195fc <__assert_fail@plt+0x8284>
   19574:	b	19594 <__assert_fail@plt+0x821c>
   19578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1957c:	ldr	r1, [fp, #8]
   19580:	mvn	r2, #0
   19584:	udiv	r1, r2, r1
   19588:	cmp	r0, r1
   1958c:	bcc	19710 <__assert_fail@plt+0x8398>
   19590:	b	19724 <__assert_fail@plt+0x83ac>
   19594:	b	19598 <__assert_fail@plt+0x8220>
   19598:	ldr	r0, [pc, #2568]	; 19fa8 <__assert_fail@plt+0x8c30>
   1959c:	ldr	r1, [fp, #8]
   195a0:	cmp	r1, r0
   195a4:	blt	195bc <__assert_fail@plt+0x8244>
   195a8:	b	195c8 <__assert_fail@plt+0x8250>
   195ac:	ldr	r0, [fp, #8]
   195b0:	movw	r1, #0
   195b4:	cmp	r1, r0
   195b8:	bge	195c8 <__assert_fail@plt+0x8250>
   195bc:	movw	r0, #1
   195c0:	str	r0, [sp, #68]	; 0x44
   195c4:	b	195e0 <__assert_fail@plt+0x8268>
   195c8:	ldr	r0, [fp, #8]
   195cc:	movw	r1, #0
   195d0:	sub	r0, r1, r0
   195d4:	mvn	r1, #0
   195d8:	udiv	r0, r1, r0
   195dc:	str	r0, [sp, #68]	; 0x44
   195e0:	ldr	r0, [sp, #68]	; 0x44
   195e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195e8:	mvn	r2, #0
   195ec:	sub	r1, r2, r1
   195f0:	cmp	r0, r1
   195f4:	bls	19710 <__assert_fail@plt+0x8398>
   195f8:	b	19724 <__assert_fail@plt+0x83ac>
   195fc:	b	19600 <__assert_fail@plt+0x8288>
   19600:	b	19658 <__assert_fail@plt+0x82e0>
   19604:	b	19658 <__assert_fail@plt+0x82e0>
   19608:	ldr	r0, [fp, #8]
   1960c:	cmn	r0, #1
   19610:	bne	19658 <__assert_fail@plt+0x82e0>
   19614:	b	19618 <__assert_fail@plt+0x82a0>
   19618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1961c:	add	r0, r0, #0
   19620:	movw	r1, #0
   19624:	cmp	r1, r0
   19628:	blt	19710 <__assert_fail@plt+0x8398>
   1962c:	b	19724 <__assert_fail@plt+0x83ac>
   19630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19634:	movw	r1, #0
   19638:	cmp	r1, r0
   1963c:	bge	19724 <__assert_fail@plt+0x83ac>
   19640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19644:	sub	r0, r0, #1
   19648:	mvn	r1, #0
   1964c:	cmp	r1, r0
   19650:	blt	19710 <__assert_fail@plt+0x8398>
   19654:	b	19724 <__assert_fail@plt+0x83ac>
   19658:	ldr	r0, [fp, #8]
   1965c:	movw	r1, #0
   19660:	sdiv	r0, r1, r0
   19664:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19668:	cmp	r0, r1
   1966c:	blt	19710 <__assert_fail@plt+0x8398>
   19670:	b	19724 <__assert_fail@plt+0x83ac>
   19674:	ldr	r0, [fp, #8]
   19678:	cmp	r0, #0
   1967c:	bne	19684 <__assert_fail@plt+0x830c>
   19680:	b	19724 <__assert_fail@plt+0x83ac>
   19684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19688:	cmp	r0, #0
   1968c:	bge	196f8 <__assert_fail@plt+0x8380>
   19690:	b	19694 <__assert_fail@plt+0x831c>
   19694:	b	196dc <__assert_fail@plt+0x8364>
   19698:	b	196dc <__assert_fail@plt+0x8364>
   1969c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196a0:	cmn	r0, #1
   196a4:	bne	196dc <__assert_fail@plt+0x8364>
   196a8:	b	196ac <__assert_fail@plt+0x8334>
   196ac:	ldr	r0, [fp, #8]
   196b0:	add	r0, r0, #0
   196b4:	movw	r1, #0
   196b8:	cmp	r1, r0
   196bc:	blt	19710 <__assert_fail@plt+0x8398>
   196c0:	b	19724 <__assert_fail@plt+0x83ac>
   196c4:	ldr	r0, [fp, #8]
   196c8:	sub	r0, r0, #1
   196cc:	mvn	r1, #0
   196d0:	cmp	r1, r0
   196d4:	blt	19710 <__assert_fail@plt+0x8398>
   196d8:	b	19724 <__assert_fail@plt+0x83ac>
   196dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196e0:	movw	r1, #0
   196e4:	sdiv	r0, r1, r0
   196e8:	ldr	r1, [fp, #8]
   196ec:	cmp	r0, r1
   196f0:	blt	19710 <__assert_fail@plt+0x8398>
   196f4:	b	19724 <__assert_fail@plt+0x83ac>
   196f8:	ldr	r0, [fp, #8]
   196fc:	mvn	r1, #0
   19700:	udiv	r0, r1, r0
   19704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19708:	cmp	r0, r1
   1970c:	bcs	19724 <__assert_fail@plt+0x83ac>
   19710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19714:	ldr	r1, [fp, #8]
   19718:	mul	r0, r0, r1
   1971c:	str	r0, [fp, #-28]	; 0xffffffe4
   19720:	b	19f78 <__assert_fail@plt+0x8c00>
   19724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19728:	ldr	r1, [fp, #8]
   1972c:	mul	r0, r0, r1
   19730:	str	r0, [fp, #-28]	; 0xffffffe4
   19734:	b	19f7c <__assert_fail@plt+0x8c04>
   19738:	b	1973c <__assert_fail@plt+0x83c4>
   1973c:	b	19740 <__assert_fail@plt+0x83c8>
   19740:	ldr	r0, [fp, #8]
   19744:	cmp	r0, #0
   19748:	bge	1984c <__assert_fail@plt+0x84d4>
   1974c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19750:	cmp	r0, #0
   19754:	bge	197e0 <__assert_fail@plt+0x8468>
   19758:	b	1975c <__assert_fail@plt+0x83e4>
   1975c:	ldr	r0, [pc, #2112]	; 19fa4 <__assert_fail@plt+0x8c2c>
   19760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19764:	ldr	r2, [fp, #8]
   19768:	sdiv	r0, r0, r2
   1976c:	cmp	r1, r0
   19770:	blt	198dc <__assert_fail@plt+0x8564>
   19774:	b	198f0 <__assert_fail@plt+0x8578>
   19778:	b	1977c <__assert_fail@plt+0x8404>
   1977c:	ldr	r0, [pc, #2084]	; 19fa8 <__assert_fail@plt+0x8c30>
   19780:	ldr	r1, [fp, #8]
   19784:	cmp	r1, r0
   19788:	blt	197a0 <__assert_fail@plt+0x8428>
   1978c:	b	197ac <__assert_fail@plt+0x8434>
   19790:	ldr	r0, [fp, #8]
   19794:	movw	r1, #0
   19798:	cmp	r1, r0
   1979c:	bge	197ac <__assert_fail@plt+0x8434>
   197a0:	movw	r0, #0
   197a4:	str	r0, [sp, #64]	; 0x40
   197a8:	b	197c4 <__assert_fail@plt+0x844c>
   197ac:	ldr	r0, [pc, #2032]	; 19fa4 <__assert_fail@plt+0x8c2c>
   197b0:	ldr	r1, [fp, #8]
   197b4:	movw	r2, #0
   197b8:	sub	r1, r2, r1
   197bc:	sdiv	r0, r0, r1
   197c0:	str	r0, [sp, #64]	; 0x40
   197c4:	ldr	r0, [sp, #64]	; 0x40
   197c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197cc:	mvn	r2, #0
   197d0:	sub	r1, r2, r1
   197d4:	cmp	r0, r1
   197d8:	ble	198dc <__assert_fail@plt+0x8564>
   197dc:	b	198f0 <__assert_fail@plt+0x8578>
   197e0:	ldr	r0, [fp, #8]
   197e4:	cmn	r0, #1
   197e8:	bne	19830 <__assert_fail@plt+0x84b8>
   197ec:	b	197f0 <__assert_fail@plt+0x8478>
   197f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197f4:	add	r0, r0, #-2147483648	; 0x80000000
   197f8:	movw	r1, #0
   197fc:	cmp	r1, r0
   19800:	blt	198dc <__assert_fail@plt+0x8564>
   19804:	b	198f0 <__assert_fail@plt+0x8578>
   19808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1980c:	movw	r1, #0
   19810:	cmp	r1, r0
   19814:	bge	198f0 <__assert_fail@plt+0x8578>
   19818:	ldr	r0, [pc, #1924]	; 19fa4 <__assert_fail@plt+0x8c2c>
   1981c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19820:	sub	r1, r1, #1
   19824:	cmp	r0, r1
   19828:	blt	198dc <__assert_fail@plt+0x8564>
   1982c:	b	198f0 <__assert_fail@plt+0x8578>
   19830:	ldr	r0, [pc, #1908]	; 19fac <__assert_fail@plt+0x8c34>
   19834:	ldr	r1, [fp, #8]
   19838:	sdiv	r0, r0, r1
   1983c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19840:	cmp	r0, r1
   19844:	blt	198dc <__assert_fail@plt+0x8564>
   19848:	b	198f0 <__assert_fail@plt+0x8578>
   1984c:	ldr	r0, [fp, #8]
   19850:	cmp	r0, #0
   19854:	bne	1985c <__assert_fail@plt+0x84e4>
   19858:	b	198f0 <__assert_fail@plt+0x8578>
   1985c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19860:	cmp	r0, #0
   19864:	bge	198c4 <__assert_fail@plt+0x854c>
   19868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1986c:	cmn	r0, #1
   19870:	bne	198a8 <__assert_fail@plt+0x8530>
   19874:	b	19878 <__assert_fail@plt+0x8500>
   19878:	ldr	r0, [fp, #8]
   1987c:	add	r0, r0, #-2147483648	; 0x80000000
   19880:	movw	r1, #0
   19884:	cmp	r1, r0
   19888:	blt	198dc <__assert_fail@plt+0x8564>
   1988c:	b	198f0 <__assert_fail@plt+0x8578>
   19890:	ldr	r0, [pc, #1804]	; 19fa4 <__assert_fail@plt+0x8c2c>
   19894:	ldr	r1, [fp, #8]
   19898:	sub	r1, r1, #1
   1989c:	cmp	r0, r1
   198a0:	blt	198dc <__assert_fail@plt+0x8564>
   198a4:	b	198f0 <__assert_fail@plt+0x8578>
   198a8:	ldr	r0, [pc, #1788]	; 19fac <__assert_fail@plt+0x8c34>
   198ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198b0:	sdiv	r0, r0, r1
   198b4:	ldr	r1, [fp, #8]
   198b8:	cmp	r0, r1
   198bc:	blt	198dc <__assert_fail@plt+0x8564>
   198c0:	b	198f0 <__assert_fail@plt+0x8578>
   198c4:	ldr	r0, [pc, #1752]	; 19fa4 <__assert_fail@plt+0x8c2c>
   198c8:	ldr	r1, [fp, #8]
   198cc:	sdiv	r0, r0, r1
   198d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198d4:	cmp	r0, r1
   198d8:	bge	198f0 <__assert_fail@plt+0x8578>
   198dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198e0:	ldr	r1, [fp, #8]
   198e4:	mul	r0, r0, r1
   198e8:	str	r0, [fp, #-28]	; 0xffffffe4
   198ec:	b	19f78 <__assert_fail@plt+0x8c00>
   198f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198f4:	ldr	r1, [fp, #8]
   198f8:	mul	r0, r0, r1
   198fc:	str	r0, [fp, #-28]	; 0xffffffe4
   19900:	b	19f7c <__assert_fail@plt+0x8c04>
   19904:	ldr	r0, [fp, #8]
   19908:	cmp	r0, #0
   1990c:	bge	19a1c <__assert_fail@plt+0x86a4>
   19910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19914:	cmp	r0, #0
   19918:	bge	199a4 <__assert_fail@plt+0x862c>
   1991c:	b	1993c <__assert_fail@plt+0x85c4>
   19920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19924:	ldr	r1, [fp, #8]
   19928:	mvn	r2, #0
   1992c:	udiv	r1, r2, r1
   19930:	cmp	r0, r1
   19934:	bcc	19ab8 <__assert_fail@plt+0x8740>
   19938:	b	19acc <__assert_fail@plt+0x8754>
   1993c:	b	19940 <__assert_fail@plt+0x85c8>
   19940:	ldr	r0, [pc, #1632]	; 19fa8 <__assert_fail@plt+0x8c30>
   19944:	ldr	r1, [fp, #8]
   19948:	cmp	r1, r0
   1994c:	blt	19964 <__assert_fail@plt+0x85ec>
   19950:	b	19970 <__assert_fail@plt+0x85f8>
   19954:	ldr	r0, [fp, #8]
   19958:	movw	r1, #0
   1995c:	cmp	r1, r0
   19960:	bge	19970 <__assert_fail@plt+0x85f8>
   19964:	movw	r0, #1
   19968:	str	r0, [sp, #60]	; 0x3c
   1996c:	b	19988 <__assert_fail@plt+0x8610>
   19970:	ldr	r0, [fp, #8]
   19974:	movw	r1, #0
   19978:	sub	r0, r1, r0
   1997c:	mvn	r1, #0
   19980:	udiv	r0, r1, r0
   19984:	str	r0, [sp, #60]	; 0x3c
   19988:	ldr	r0, [sp, #60]	; 0x3c
   1998c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19990:	mvn	r2, #0
   19994:	sub	r1, r2, r1
   19998:	cmp	r0, r1
   1999c:	bls	19ab8 <__assert_fail@plt+0x8740>
   199a0:	b	19acc <__assert_fail@plt+0x8754>
   199a4:	b	199a8 <__assert_fail@plt+0x8630>
   199a8:	b	19a00 <__assert_fail@plt+0x8688>
   199ac:	b	19a00 <__assert_fail@plt+0x8688>
   199b0:	ldr	r0, [fp, #8]
   199b4:	cmn	r0, #1
   199b8:	bne	19a00 <__assert_fail@plt+0x8688>
   199bc:	b	199c0 <__assert_fail@plt+0x8648>
   199c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199c4:	add	r0, r0, #0
   199c8:	movw	r1, #0
   199cc:	cmp	r1, r0
   199d0:	blt	19ab8 <__assert_fail@plt+0x8740>
   199d4:	b	19acc <__assert_fail@plt+0x8754>
   199d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199dc:	movw	r1, #0
   199e0:	cmp	r1, r0
   199e4:	bge	19acc <__assert_fail@plt+0x8754>
   199e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199ec:	sub	r0, r0, #1
   199f0:	mvn	r1, #0
   199f4:	cmp	r1, r0
   199f8:	blt	19ab8 <__assert_fail@plt+0x8740>
   199fc:	b	19acc <__assert_fail@plt+0x8754>
   19a00:	ldr	r0, [fp, #8]
   19a04:	movw	r1, #0
   19a08:	sdiv	r0, r1, r0
   19a0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a10:	cmp	r0, r1
   19a14:	blt	19ab8 <__assert_fail@plt+0x8740>
   19a18:	b	19acc <__assert_fail@plt+0x8754>
   19a1c:	ldr	r0, [fp, #8]
   19a20:	cmp	r0, #0
   19a24:	bne	19a2c <__assert_fail@plt+0x86b4>
   19a28:	b	19acc <__assert_fail@plt+0x8754>
   19a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a30:	cmp	r0, #0
   19a34:	bge	19aa0 <__assert_fail@plt+0x8728>
   19a38:	b	19a3c <__assert_fail@plt+0x86c4>
   19a3c:	b	19a84 <__assert_fail@plt+0x870c>
   19a40:	b	19a84 <__assert_fail@plt+0x870c>
   19a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a48:	cmn	r0, #1
   19a4c:	bne	19a84 <__assert_fail@plt+0x870c>
   19a50:	b	19a54 <__assert_fail@plt+0x86dc>
   19a54:	ldr	r0, [fp, #8]
   19a58:	add	r0, r0, #0
   19a5c:	movw	r1, #0
   19a60:	cmp	r1, r0
   19a64:	blt	19ab8 <__assert_fail@plt+0x8740>
   19a68:	b	19acc <__assert_fail@plt+0x8754>
   19a6c:	ldr	r0, [fp, #8]
   19a70:	sub	r0, r0, #1
   19a74:	mvn	r1, #0
   19a78:	cmp	r1, r0
   19a7c:	blt	19ab8 <__assert_fail@plt+0x8740>
   19a80:	b	19acc <__assert_fail@plt+0x8754>
   19a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a88:	movw	r1, #0
   19a8c:	sdiv	r0, r1, r0
   19a90:	ldr	r1, [fp, #8]
   19a94:	cmp	r0, r1
   19a98:	blt	19ab8 <__assert_fail@plt+0x8740>
   19a9c:	b	19acc <__assert_fail@plt+0x8754>
   19aa0:	ldr	r0, [fp, #8]
   19aa4:	mvn	r1, #0
   19aa8:	udiv	r0, r1, r0
   19aac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ab0:	cmp	r0, r1
   19ab4:	bcs	19acc <__assert_fail@plt+0x8754>
   19ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19abc:	ldr	r1, [fp, #8]
   19ac0:	mul	r0, r0, r1
   19ac4:	str	r0, [fp, #-28]	; 0xffffffe4
   19ac8:	b	19f78 <__assert_fail@plt+0x8c00>
   19acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ad0:	ldr	r1, [fp, #8]
   19ad4:	mul	r0, r0, r1
   19ad8:	str	r0, [fp, #-28]	; 0xffffffe4
   19adc:	b	19f7c <__assert_fail@plt+0x8c04>
   19ae0:	b	19ae4 <__assert_fail@plt+0x876c>
   19ae4:	ldr	r0, [fp, #8]
   19ae8:	cmp	r0, #0
   19aec:	bge	19c54 <__assert_fail@plt+0x88dc>
   19af0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19af4:	cmp	r0, #0
   19af8:	bge	19bd0 <__assert_fail@plt+0x8858>
   19afc:	b	19b00 <__assert_fail@plt+0x8788>
   19b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b04:	ldr	r1, [fp, #8]
   19b08:	asr	r3, r1, #31
   19b0c:	mvn	r2, #0
   19b10:	mvn	ip, #-2147483648	; 0x80000000
   19b14:	str	r0, [sp, #56]	; 0x38
   19b18:	mov	r0, r2
   19b1c:	str	r1, [sp, #52]	; 0x34
   19b20:	mov	r1, ip
   19b24:	ldr	r2, [sp, #52]	; 0x34
   19b28:	bl	1bd9c <__assert_fail@plt+0xaa24>
   19b2c:	ldr	r2, [sp, #56]	; 0x38
   19b30:	subs	r0, r2, r0
   19b34:	rscs	r1, r1, r2, asr #31
   19b38:	blt	19d1c <__assert_fail@plt+0x89a4>
   19b3c:	b	19d30 <__assert_fail@plt+0x89b8>
   19b40:	b	19b44 <__assert_fail@plt+0x87cc>
   19b44:	ldr	r0, [pc, #1116]	; 19fa8 <__assert_fail@plt+0x8c30>
   19b48:	ldr	r1, [fp, #8]
   19b4c:	cmp	r1, r0
   19b50:	blt	19b68 <__assert_fail@plt+0x87f0>
   19b54:	b	19b7c <__assert_fail@plt+0x8804>
   19b58:	ldr	r0, [fp, #8]
   19b5c:	movw	r1, #0
   19b60:	cmp	r1, r0
   19b64:	bge	19b7c <__assert_fail@plt+0x8804>
   19b68:	mov	r0, #0
   19b6c:	mvn	r1, #0
   19b70:	str	r1, [sp, #48]	; 0x30
   19b74:	str	r0, [sp, #44]	; 0x2c
   19b78:	b	19bb0 <__assert_fail@plt+0x8838>
   19b7c:	ldr	r0, [fp, #8]
   19b80:	rsb	r0, r0, #0
   19b84:	asr	r3, r0, #31
   19b88:	mvn	r1, #0
   19b8c:	mvn	r2, #-2147483648	; 0x80000000
   19b90:	str	r0, [sp, #40]	; 0x28
   19b94:	mov	r0, r1
   19b98:	mov	r1, r2
   19b9c:	ldr	r2, [sp, #40]	; 0x28
   19ba0:	bl	1bd9c <__assert_fail@plt+0xaa24>
   19ba4:	str	r0, [sp, #48]	; 0x30
   19ba8:	str	r1, [sp, #44]	; 0x2c
   19bac:	b	19bb0 <__assert_fail@plt+0x8838>
   19bb0:	ldr	r0, [sp, #44]	; 0x2c
   19bb4:	ldr	r1, [sp, #48]	; 0x30
   19bb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19bbc:	mvn	r2, r2
   19bc0:	subs	r1, r2, r1
   19bc4:	rscs	r0, r0, r2, asr #31
   19bc8:	bge	19d1c <__assert_fail@plt+0x89a4>
   19bcc:	b	19d30 <__assert_fail@plt+0x89b8>
   19bd0:	ldr	r0, [fp, #8]
   19bd4:	cmn	r0, #1
   19bd8:	bne	19c1c <__assert_fail@plt+0x88a4>
   19bdc:	b	19be0 <__assert_fail@plt+0x8868>
   19be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19be4:	mov	r1, #-2147483648	; 0x80000000
   19be8:	add	r1, r1, r0, asr #31
   19bec:	rsbs	r0, r0, #0
   19bf0:	rscs	r1, r1, #0
   19bf4:	blt	19d1c <__assert_fail@plt+0x89a4>
   19bf8:	b	19d30 <__assert_fail@plt+0x89b8>
   19bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c00:	movw	r1, #0
   19c04:	cmp	r1, r0
   19c08:	bge	19d30 <__assert_fail@plt+0x89b8>
   19c0c:	mov	r0, #0
   19c10:	cmp	r0, #0
   19c14:	bne	19d1c <__assert_fail@plt+0x89a4>
   19c18:	b	19d30 <__assert_fail@plt+0x89b8>
   19c1c:	ldr	r0, [fp, #8]
   19c20:	asr	r3, r0, #31
   19c24:	mov	r1, #0
   19c28:	mov	r2, #-2147483648	; 0x80000000
   19c2c:	str	r0, [sp, #36]	; 0x24
   19c30:	mov	r0, r1
   19c34:	mov	r1, r2
   19c38:	ldr	r2, [sp, #36]	; 0x24
   19c3c:	bl	1bd9c <__assert_fail@plt+0xaa24>
   19c40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c44:	subs	r0, r0, r2
   19c48:	sbcs	r1, r1, r2, asr #31
   19c4c:	blt	19d1c <__assert_fail@plt+0x89a4>
   19c50:	b	19d30 <__assert_fail@plt+0x89b8>
   19c54:	ldr	r0, [fp, #8]
   19c58:	cmp	r0, #0
   19c5c:	bne	19c64 <__assert_fail@plt+0x88ec>
   19c60:	b	19d30 <__assert_fail@plt+0x89b8>
   19c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c68:	cmp	r0, #0
   19c6c:	bge	19ce4 <__assert_fail@plt+0x896c>
   19c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c74:	cmn	r0, #1
   19c78:	bne	19cac <__assert_fail@plt+0x8934>
   19c7c:	b	19c80 <__assert_fail@plt+0x8908>
   19c80:	ldr	r0, [fp, #8]
   19c84:	mov	r1, #-2147483648	; 0x80000000
   19c88:	add	r1, r1, r0, asr #31
   19c8c:	rsbs	r0, r0, #0
   19c90:	rscs	r1, r1, #0
   19c94:	blt	19d1c <__assert_fail@plt+0x89a4>
   19c98:	b	19d30 <__assert_fail@plt+0x89b8>
   19c9c:	mov	r0, #0
   19ca0:	cmp	r0, #0
   19ca4:	bne	19d1c <__assert_fail@plt+0x89a4>
   19ca8:	b	19d30 <__assert_fail@plt+0x89b8>
   19cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cb0:	asr	r3, r0, #31
   19cb4:	mov	r1, #0
   19cb8:	mov	r2, #-2147483648	; 0x80000000
   19cbc:	str	r0, [sp, #32]
   19cc0:	mov	r0, r1
   19cc4:	mov	r1, r2
   19cc8:	ldr	r2, [sp, #32]
   19ccc:	bl	1bd9c <__assert_fail@plt+0xaa24>
   19cd0:	ldr	r2, [fp, #8]
   19cd4:	subs	r0, r0, r2
   19cd8:	sbcs	r1, r1, r2, asr #31
   19cdc:	blt	19d1c <__assert_fail@plt+0x89a4>
   19ce0:	b	19d30 <__assert_fail@plt+0x89b8>
   19ce4:	ldr	r0, [fp, #8]
   19ce8:	asr	r3, r0, #31
   19cec:	mvn	r1, #0
   19cf0:	mvn	r2, #-2147483648	; 0x80000000
   19cf4:	str	r0, [sp, #28]
   19cf8:	mov	r0, r1
   19cfc:	mov	r1, r2
   19d00:	ldr	r2, [sp, #28]
   19d04:	bl	1bd9c <__assert_fail@plt+0xaa24>
   19d08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d0c:	subs	r0, r0, r2
   19d10:	sbcs	r1, r1, r2, asr #31
   19d14:	bge	19d30 <__assert_fail@plt+0x89b8>
   19d18:	b	19d1c <__assert_fail@plt+0x89a4>
   19d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d20:	ldr	r1, [fp, #8]
   19d24:	mul	r0, r0, r1
   19d28:	str	r0, [fp, #-28]	; 0xffffffe4
   19d2c:	b	19f78 <__assert_fail@plt+0x8c00>
   19d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d34:	ldr	r1, [fp, #8]
   19d38:	mul	r0, r0, r1
   19d3c:	str	r0, [fp, #-28]	; 0xffffffe4
   19d40:	b	19f7c <__assert_fail@plt+0x8c04>
   19d44:	ldr	r0, [fp, #8]
   19d48:	cmp	r0, #0
   19d4c:	bge	19e9c <__assert_fail@plt+0x8b24>
   19d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d54:	cmp	r0, #0
   19d58:	bge	19e24 <__assert_fail@plt+0x8aac>
   19d5c:	b	19d9c <__assert_fail@plt+0x8a24>
   19d60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d64:	ldr	r1, [fp, #8]
   19d68:	asr	r3, r1, #31
   19d6c:	mvn	r2, #0
   19d70:	str	r0, [sp, #24]
   19d74:	mov	r0, r2
   19d78:	str	r1, [sp, #20]
   19d7c:	mov	r1, r2
   19d80:	ldr	r2, [sp, #20]
   19d84:	bl	1be70 <__assert_fail@plt+0xaaf8>
   19d88:	ldr	r2, [sp, #24]
   19d8c:	subs	r0, r2, r0
   19d90:	rscs	r1, r1, r2, asr #31
   19d94:	bcc	19f50 <__assert_fail@plt+0x8bd8>
   19d98:	b	19f64 <__assert_fail@plt+0x8bec>
   19d9c:	b	19da0 <__assert_fail@plt+0x8a28>
   19da0:	ldr	r0, [pc, #512]	; 19fa8 <__assert_fail@plt+0x8c30>
   19da4:	ldr	r1, [fp, #8]
   19da8:	cmp	r1, r0
   19dac:	blt	19dc4 <__assert_fail@plt+0x8a4c>
   19db0:	b	19dd8 <__assert_fail@plt+0x8a60>
   19db4:	ldr	r0, [fp, #8]
   19db8:	movw	r1, #0
   19dbc:	cmp	r1, r0
   19dc0:	bge	19dd8 <__assert_fail@plt+0x8a60>
   19dc4:	mov	r0, #1
   19dc8:	mvn	r1, #0
   19dcc:	str	r1, [sp, #16]
   19dd0:	str	r0, [sp, #12]
   19dd4:	b	19e04 <__assert_fail@plt+0x8a8c>
   19dd8:	ldr	r0, [fp, #8]
   19ddc:	rsb	r0, r0, #0
   19de0:	asr	r3, r0, #31
   19de4:	mvn	r1, #0
   19de8:	str	r0, [sp, #8]
   19dec:	mov	r0, r1
   19df0:	ldr	r2, [sp, #8]
   19df4:	bl	1be70 <__assert_fail@plt+0xaaf8>
   19df8:	str	r0, [sp, #16]
   19dfc:	str	r1, [sp, #12]
   19e00:	b	19e04 <__assert_fail@plt+0x8a8c>
   19e04:	ldr	r0, [sp, #12]
   19e08:	ldr	r1, [sp, #16]
   19e0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e10:	mvn	r2, r2
   19e14:	subs	r1, r2, r1
   19e18:	rscs	r0, r0, r2, asr #31
   19e1c:	bcs	19f50 <__assert_fail@plt+0x8bd8>
   19e20:	b	19f64 <__assert_fail@plt+0x8bec>
   19e24:	b	19e28 <__assert_fail@plt+0x8ab0>
   19e28:	b	19e80 <__assert_fail@plt+0x8b08>
   19e2c:	b	19e80 <__assert_fail@plt+0x8b08>
   19e30:	ldr	r0, [fp, #8]
   19e34:	cmn	r0, #1
   19e38:	bne	19e80 <__assert_fail@plt+0x8b08>
   19e3c:	b	19e40 <__assert_fail@plt+0x8ac8>
   19e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e44:	add	r0, r0, #0
   19e48:	movw	r1, #0
   19e4c:	cmp	r1, r0
   19e50:	blt	19f50 <__assert_fail@plt+0x8bd8>
   19e54:	b	19f64 <__assert_fail@plt+0x8bec>
   19e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e5c:	movw	r1, #0
   19e60:	cmp	r1, r0
   19e64:	bge	19f64 <__assert_fail@plt+0x8bec>
   19e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e6c:	sub	r0, r0, #1
   19e70:	mvn	r1, #0
   19e74:	cmp	r1, r0
   19e78:	blt	19f50 <__assert_fail@plt+0x8bd8>
   19e7c:	b	19f64 <__assert_fail@plt+0x8bec>
   19e80:	ldr	r0, [fp, #8]
   19e84:	movw	r1, #0
   19e88:	sdiv	r0, r1, r0
   19e8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e90:	cmp	r0, r1
   19e94:	blt	19f50 <__assert_fail@plt+0x8bd8>
   19e98:	b	19f64 <__assert_fail@plt+0x8bec>
   19e9c:	ldr	r0, [fp, #8]
   19ea0:	cmp	r0, #0
   19ea4:	bne	19eac <__assert_fail@plt+0x8b34>
   19ea8:	b	19f64 <__assert_fail@plt+0x8bec>
   19eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19eb0:	cmp	r0, #0
   19eb4:	bge	19f20 <__assert_fail@plt+0x8ba8>
   19eb8:	b	19ebc <__assert_fail@plt+0x8b44>
   19ebc:	b	19f04 <__assert_fail@plt+0x8b8c>
   19ec0:	b	19f04 <__assert_fail@plt+0x8b8c>
   19ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ec8:	cmn	r0, #1
   19ecc:	bne	19f04 <__assert_fail@plt+0x8b8c>
   19ed0:	b	19ed4 <__assert_fail@plt+0x8b5c>
   19ed4:	ldr	r0, [fp, #8]
   19ed8:	add	r0, r0, #0
   19edc:	movw	r1, #0
   19ee0:	cmp	r1, r0
   19ee4:	blt	19f50 <__assert_fail@plt+0x8bd8>
   19ee8:	b	19f64 <__assert_fail@plt+0x8bec>
   19eec:	ldr	r0, [fp, #8]
   19ef0:	sub	r0, r0, #1
   19ef4:	mvn	r1, #0
   19ef8:	cmp	r1, r0
   19efc:	blt	19f50 <__assert_fail@plt+0x8bd8>
   19f00:	b	19f64 <__assert_fail@plt+0x8bec>
   19f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f08:	movw	r1, #0
   19f0c:	sdiv	r0, r1, r0
   19f10:	ldr	r1, [fp, #8]
   19f14:	cmp	r0, r1
   19f18:	blt	19f50 <__assert_fail@plt+0x8bd8>
   19f1c:	b	19f64 <__assert_fail@plt+0x8bec>
   19f20:	ldr	r0, [fp, #8]
   19f24:	asr	r3, r0, #31
   19f28:	mvn	r1, #0
   19f2c:	str	r0, [sp, #4]
   19f30:	mov	r0, r1
   19f34:	ldr	r2, [sp, #4]
   19f38:	bl	1be70 <__assert_fail@plt+0xaaf8>
   19f3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19f40:	subs	r0, r0, r2
   19f44:	sbcs	r1, r1, r2, asr #31
   19f48:	bcs	19f64 <__assert_fail@plt+0x8bec>
   19f4c:	b	19f50 <__assert_fail@plt+0x8bd8>
   19f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f54:	ldr	r1, [fp, #8]
   19f58:	mul	r0, r0, r1
   19f5c:	str	r0, [fp, #-28]	; 0xffffffe4
   19f60:	b	19f78 <__assert_fail@plt+0x8c00>
   19f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f68:	ldr	r1, [fp, #8]
   19f6c:	mul	r0, r0, r1
   19f70:	str	r0, [fp, #-28]	; 0xffffffe4
   19f74:	b	19f7c <__assert_fail@plt+0x8c04>
   19f78:	bl	1a154 <__assert_fail@plt+0x8ddc>
   19f7c:	ldr	r0, [fp, #-4]
   19f80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f84:	bl	174b4 <__assert_fail@plt+0x613c>
   19f88:	str	r0, [fp, #-4]
   19f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f90:	ldr	r1, [fp, #-8]
   19f94:	str	r0, [r1]
   19f98:	ldr	r0, [fp, #-4]
   19f9c:	mov	sp, fp
   19fa0:	pop	{fp, pc}
   19fa4:	svcvc	0x00ffffff
   19fa8:	andhi	r0, r0, r1
   19fac:	andhi	r0, r0, r0
   19fb0:			; <UNDEFINED> instruction: 0xffff8000
   19fb4:	push	{fp, lr}
   19fb8:	mov	fp, sp
   19fbc:	sub	sp, sp, #8
   19fc0:	str	r0, [sp, #4]
   19fc4:	ldr	r0, [sp, #4]
   19fc8:	movw	r1, #1
   19fcc:	bl	19fd8 <__assert_fail@plt+0x8c60>
   19fd0:	mov	sp, fp
   19fd4:	pop	{fp, pc}
   19fd8:	push	{fp, lr}
   19fdc:	mov	fp, sp
   19fe0:	sub	sp, sp, #8
   19fe4:	str	r0, [sp, #4]
   19fe8:	str	r1, [sp]
   19fec:	ldr	r0, [sp, #4]
   19ff0:	ldr	r1, [sp]
   19ff4:	bl	1a1a4 <__assert_fail@plt+0x8e2c>
   19ff8:	bl	17440 <__assert_fail@plt+0x60c8>
   19ffc:	mov	sp, fp
   1a000:	pop	{fp, pc}
   1a004:	push	{fp, lr}
   1a008:	mov	fp, sp
   1a00c:	sub	sp, sp, #8
   1a010:	str	r0, [sp, #4]
   1a014:	ldr	r0, [sp, #4]
   1a018:	movw	r1, #1
   1a01c:	bl	1a028 <__assert_fail@plt+0x8cb0>
   1a020:	mov	sp, fp
   1a024:	pop	{fp, pc}
   1a028:	push	{fp, lr}
   1a02c:	mov	fp, sp
   1a030:	sub	sp, sp, #8
   1a034:	str	r0, [sp, #4]
   1a038:	str	r1, [sp]
   1a03c:	ldr	r0, [sp, #4]
   1a040:	ldr	r1, [sp]
   1a044:	bl	1a840 <__assert_fail@plt+0x94c8>
   1a048:	bl	17440 <__assert_fail@plt+0x60c8>
   1a04c:	mov	sp, fp
   1a050:	pop	{fp, pc}
   1a054:	push	{fp, lr}
   1a058:	mov	fp, sp
   1a05c:	sub	sp, sp, #16
   1a060:	str	r0, [fp, #-4]
   1a064:	str	r1, [sp, #8]
   1a068:	ldr	r0, [sp, #8]
   1a06c:	bl	1741c <__assert_fail@plt+0x60a4>
   1a070:	ldr	r1, [fp, #-4]
   1a074:	ldr	r2, [sp, #8]
   1a078:	str	r0, [sp, #4]
   1a07c:	bl	110fc <memcpy@plt>
   1a080:	ldr	r0, [sp, #4]
   1a084:	mov	sp, fp
   1a088:	pop	{fp, pc}
   1a08c:	push	{fp, lr}
   1a090:	mov	fp, sp
   1a094:	sub	sp, sp, #16
   1a098:	str	r0, [fp, #-4]
   1a09c:	str	r1, [sp, #8]
   1a0a0:	ldr	r0, [sp, #8]
   1a0a4:	bl	17470 <__assert_fail@plt+0x60f8>
   1a0a8:	ldr	r1, [fp, #-4]
   1a0ac:	ldr	r2, [sp, #8]
   1a0b0:	str	r0, [sp, #4]
   1a0b4:	bl	110fc <memcpy@plt>
   1a0b8:	ldr	r0, [sp, #4]
   1a0bc:	mov	sp, fp
   1a0c0:	pop	{fp, pc}
   1a0c4:	push	{fp, lr}
   1a0c8:	mov	fp, sp
   1a0cc:	sub	sp, sp, #16
   1a0d0:	str	r0, [fp, #-4]
   1a0d4:	str	r1, [sp, #8]
   1a0d8:	ldr	r0, [sp, #8]
   1a0dc:	add	r0, r0, #1
   1a0e0:	bl	17470 <__assert_fail@plt+0x60f8>
   1a0e4:	str	r0, [sp, #4]
   1a0e8:	ldr	r0, [sp, #4]
   1a0ec:	ldr	r1, [sp, #8]
   1a0f0:	add	r0, r0, r1
   1a0f4:	movw	r1, #0
   1a0f8:	strb	r1, [r0]
   1a0fc:	ldr	r0, [sp, #4]
   1a100:	ldr	r1, [fp, #-4]
   1a104:	ldr	r2, [sp, #8]
   1a108:	str	r0, [sp]
   1a10c:	bl	110fc <memcpy@plt>
   1a110:	ldr	r0, [sp]
   1a114:	mov	sp, fp
   1a118:	pop	{fp, pc}
   1a11c:	push	{fp, lr}
   1a120:	mov	fp, sp
   1a124:	sub	sp, sp, #8
   1a128:	str	r0, [sp, #4]
   1a12c:	ldr	r0, [sp, #4]
   1a130:	ldr	r1, [sp, #4]
   1a134:	str	r0, [sp]
   1a138:	mov	r0, r1
   1a13c:	bl	11258 <strlen@plt>
   1a140:	add	r1, r0, #1
   1a144:	ldr	r0, [sp]
   1a148:	bl	1a054 <__assert_fail@plt+0x8cdc>
   1a14c:	mov	sp, fp
   1a150:	pop	{fp, pc}
   1a154:	push	{fp, lr}
   1a158:	mov	fp, sp
   1a15c:	sub	sp, sp, #8
   1a160:	movw	r0, #53540	; 0xd124
   1a164:	movt	r0, #2
   1a168:	ldr	r0, [r0]
   1a16c:	movw	r1, #52820	; 0xce54
   1a170:	movt	r1, #1
   1a174:	str	r0, [sp, #4]
   1a178:	mov	r0, r1
   1a17c:	bl	11240 <gettext@plt>
   1a180:	ldr	r1, [sp, #4]
   1a184:	str	r0, [sp]
   1a188:	mov	r0, r1
   1a18c:	movw	r1, #0
   1a190:	movw	r2, #51759	; 0xca2f
   1a194:	movt	r2, #1
   1a198:	ldr	r3, [sp]
   1a19c:	bl	111b0 <error@plt>
   1a1a0:	bl	11360 <abort@plt>
   1a1a4:	push	{fp, lr}
   1a1a8:	mov	fp, sp
   1a1ac:	sub	sp, sp, #16
   1a1b0:	str	r0, [sp, #8]
   1a1b4:	str	r1, [sp, #4]
   1a1b8:	ldr	r0, [sp, #8]
   1a1bc:	cmp	r0, #0
   1a1c0:	beq	1a1d0 <__assert_fail@plt+0x8e58>
   1a1c4:	ldr	r0, [sp, #4]
   1a1c8:	cmp	r0, #0
   1a1cc:	bne	1a1dc <__assert_fail@plt+0x8e64>
   1a1d0:	movw	r0, #1
   1a1d4:	str	r0, [sp, #4]
   1a1d8:	str	r0, [sp, #8]
   1a1dc:	ldr	r0, [sp, #4]
   1a1e0:	cmp	r0, #0
   1a1e4:	beq	1a218 <__assert_fail@plt+0x8ea0>
   1a1e8:	ldr	r0, [pc, #76]	; 1a23c <__assert_fail@plt+0x8ec4>
   1a1ec:	ldr	r1, [sp, #4]
   1a1f0:	udiv	r0, r0, r1
   1a1f4:	ldr	r1, [sp, #8]
   1a1f8:	cmp	r0, r1
   1a1fc:	bcs	1a218 <__assert_fail@plt+0x8ea0>
   1a200:	bl	1127c <__errno_location@plt>
   1a204:	movw	r1, #12
   1a208:	str	r1, [r0]
   1a20c:	movw	r0, #0
   1a210:	str	r0, [fp, #-4]
   1a214:	b	1a230 <__assert_fail@plt+0x8eb8>
   1a218:	ldr	r0, [sp, #8]
   1a21c:	ldr	r1, [sp, #4]
   1a220:	bl	11084 <calloc@plt>
   1a224:	str	r0, [sp]
   1a228:	ldr	r0, [sp]
   1a22c:	str	r0, [fp, #-4]
   1a230:	ldr	r0, [fp, #-4]
   1a234:	mov	sp, fp
   1a238:	pop	{fp, pc}
   1a23c:	svcvc	0x00ffffff
   1a240:	push	{fp, lr}
   1a244:	mov	fp, sp
   1a248:	sub	sp, sp, #16
   1a24c:	str	r0, [sp, #8]
   1a250:	ldr	r0, [sp, #8]
   1a254:	cmp	r0, #0
   1a258:	bne	1a264 <__assert_fail@plt+0x8eec>
   1a25c:	movw	r0, #1
   1a260:	str	r0, [sp, #8]
   1a264:	ldr	r0, [pc, #64]	; 1a2ac <__assert_fail@plt+0x8f34>
   1a268:	ldr	r1, [sp, #8]
   1a26c:	cmp	r0, r1
   1a270:	bcs	1a28c <__assert_fail@plt+0x8f14>
   1a274:	bl	1127c <__errno_location@plt>
   1a278:	movw	r1, #12
   1a27c:	str	r1, [r0]
   1a280:	movw	r0, #0
   1a284:	str	r0, [fp, #-4]
   1a288:	b	1a2a0 <__assert_fail@plt+0x8f28>
   1a28c:	ldr	r0, [sp, #8]
   1a290:	bl	111c8 <malloc@plt>
   1a294:	str	r0, [sp, #4]
   1a298:	ldr	r0, [sp, #4]
   1a29c:	str	r0, [fp, #-4]
   1a2a0:	ldr	r0, [fp, #-4]
   1a2a4:	mov	sp, fp
   1a2a8:	pop	{fp, pc}
   1a2ac:	svcvc	0x00ffffff
   1a2b0:	push	{fp, lr}
   1a2b4:	mov	fp, sp
   1a2b8:	sub	sp, sp, #16
   1a2bc:	str	r0, [sp, #8]
   1a2c0:	str	r1, [sp, #4]
   1a2c4:	ldr	r0, [sp, #8]
   1a2c8:	movw	r1, #0
   1a2cc:	cmp	r0, r1
   1a2d0:	bne	1a2e4 <__assert_fail@plt+0x8f6c>
   1a2d4:	ldr	r0, [sp, #4]
   1a2d8:	bl	1a240 <__assert_fail@plt+0x8ec8>
   1a2dc:	str	r0, [fp, #-4]
   1a2e0:	b	1a344 <__assert_fail@plt+0x8fcc>
   1a2e4:	ldr	r0, [sp, #4]
   1a2e8:	cmp	r0, #0
   1a2ec:	bne	1a304 <__assert_fail@plt+0x8f8c>
   1a2f0:	ldr	r0, [sp, #8]
   1a2f4:	bl	13d88 <__assert_fail@plt+0x2a10>
   1a2f8:	movw	r0, #0
   1a2fc:	str	r0, [fp, #-4]
   1a300:	b	1a344 <__assert_fail@plt+0x8fcc>
   1a304:	ldr	r0, [pc, #68]	; 1a350 <__assert_fail@plt+0x8fd8>
   1a308:	ldr	r1, [sp, #4]
   1a30c:	cmp	r0, r1
   1a310:	bcs	1a32c <__assert_fail@plt+0x8fb4>
   1a314:	bl	1127c <__errno_location@plt>
   1a318:	movw	r1, #12
   1a31c:	str	r1, [r0]
   1a320:	movw	r0, #0
   1a324:	str	r0, [fp, #-4]
   1a328:	b	1a344 <__assert_fail@plt+0x8fcc>
   1a32c:	ldr	r0, [sp, #8]
   1a330:	ldr	r1, [sp, #4]
   1a334:	bl	11150 <realloc@plt>
   1a338:	str	r0, [sp]
   1a33c:	ldr	r0, [sp]
   1a340:	str	r0, [fp, #-4]
   1a344:	ldr	r0, [fp, #-4]
   1a348:	mov	sp, fp
   1a34c:	pop	{fp, pc}
   1a350:	svcvc	0x00ffffff
   1a354:	push	{fp, lr}
   1a358:	mov	fp, sp
   1a35c:	sub	sp, sp, #24
   1a360:	str	r0, [fp, #-8]
   1a364:	str	r1, [sp, #12]
   1a368:	ldr	r0, [fp, #-8]
   1a36c:	str	r0, [sp, #8]
   1a370:	ldr	r0, [sp, #12]
   1a374:	str	r0, [sp, #4]
   1a378:	ldr	r0, [sp, #8]
   1a37c:	ldr	r1, [sp, #4]
   1a380:	cmp	r0, r1
   1a384:	bne	1a394 <__assert_fail@plt+0x901c>
   1a388:	movw	r0, #0
   1a38c:	str	r0, [fp, #-4]
   1a390:	b	1a400 <__assert_fail@plt+0x9088>
   1a394:	b	1a398 <__assert_fail@plt+0x9020>
   1a398:	ldr	r0, [sp, #8]
   1a39c:	ldrb	r0, [r0]
   1a3a0:	bl	13a60 <__assert_fail@plt+0x26e8>
   1a3a4:	strb	r0, [sp, #3]
   1a3a8:	ldr	r0, [sp, #4]
   1a3ac:	ldrb	r0, [r0]
   1a3b0:	bl	13a60 <__assert_fail@plt+0x26e8>
   1a3b4:	strb	r0, [sp, #2]
   1a3b8:	ldrb	r0, [sp, #3]
   1a3bc:	cmp	r0, #0
   1a3c0:	bne	1a3c8 <__assert_fail@plt+0x9050>
   1a3c4:	b	1a3f0 <__assert_fail@plt+0x9078>
   1a3c8:	ldr	r0, [sp, #8]
   1a3cc:	add	r0, r0, #1
   1a3d0:	str	r0, [sp, #8]
   1a3d4:	ldr	r0, [sp, #4]
   1a3d8:	add	r0, r0, #1
   1a3dc:	str	r0, [sp, #4]
   1a3e0:	ldrb	r0, [sp, #3]
   1a3e4:	ldrb	r1, [sp, #2]
   1a3e8:	cmp	r0, r1
   1a3ec:	beq	1a398 <__assert_fail@plt+0x9020>
   1a3f0:	ldrb	r0, [sp, #3]
   1a3f4:	ldrb	r1, [sp, #2]
   1a3f8:	sub	r0, r0, r1
   1a3fc:	str	r0, [fp, #-4]
   1a400:	ldr	r0, [fp, #-4]
   1a404:	mov	sp, fp
   1a408:	pop	{fp, pc}
   1a40c:	push	{fp, lr}
   1a410:	mov	fp, sp
   1a414:	sub	sp, sp, #16
   1a418:	str	r0, [sp, #8]
   1a41c:	ldr	r0, [sp, #8]
   1a420:	bl	1118c <__fpending@plt>
   1a424:	cmp	r0, #0
   1a428:	movw	r0, #0
   1a42c:	movne	r0, #1
   1a430:	and	r0, r0, #1
   1a434:	strb	r0, [sp, #7]
   1a438:	ldr	r0, [sp, #8]
   1a43c:	bl	11198 <ferror_unlocked@plt>
   1a440:	cmp	r0, #0
   1a444:	movw	r0, #0
   1a448:	movne	r0, #1
   1a44c:	and	r0, r0, #1
   1a450:	strb	r0, [sp, #6]
   1a454:	ldr	r0, [sp, #8]
   1a458:	bl	1a4dc <__assert_fail@plt+0x9164>
   1a45c:	cmp	r0, #0
   1a460:	movw	r0, #0
   1a464:	movne	r0, #1
   1a468:	and	r0, r0, #1
   1a46c:	strb	r0, [sp, #5]
   1a470:	ldrb	r0, [sp, #6]
   1a474:	tst	r0, #1
   1a478:	bne	1a4a4 <__assert_fail@plt+0x912c>
   1a47c:	ldrb	r0, [sp, #5]
   1a480:	tst	r0, #1
   1a484:	beq	1a4c8 <__assert_fail@plt+0x9150>
   1a488:	ldrb	r0, [sp, #7]
   1a48c:	tst	r0, #1
   1a490:	bne	1a4a4 <__assert_fail@plt+0x912c>
   1a494:	bl	1127c <__errno_location@plt>
   1a498:	ldr	r0, [r0]
   1a49c:	cmp	r0, #9
   1a4a0:	beq	1a4c8 <__assert_fail@plt+0x9150>
   1a4a4:	ldrb	r0, [sp, #5]
   1a4a8:	tst	r0, #1
   1a4ac:	bne	1a4bc <__assert_fail@plt+0x9144>
   1a4b0:	bl	1127c <__errno_location@plt>
   1a4b4:	movw	r1, #0
   1a4b8:	str	r1, [r0]
   1a4bc:	mvn	r0, #0
   1a4c0:	str	r0, [fp, #-4]
   1a4c4:	b	1a4d0 <__assert_fail@plt+0x9158>
   1a4c8:	movw	r0, #0
   1a4cc:	str	r0, [fp, #-4]
   1a4d0:	ldr	r0, [fp, #-4]
   1a4d4:	mov	sp, fp
   1a4d8:	pop	{fp, pc}
   1a4dc:	push	{fp, lr}
   1a4e0:	mov	fp, sp
   1a4e4:	sub	sp, sp, #32
   1a4e8:	str	r0, [fp, #-8]
   1a4ec:	movw	r0, #0
   1a4f0:	str	r0, [fp, #-12]
   1a4f4:	str	r0, [sp, #12]
   1a4f8:	ldr	r0, [fp, #-8]
   1a4fc:	bl	112ac <fileno@plt>
   1a500:	str	r0, [sp, #16]
   1a504:	ldr	r0, [sp, #16]
   1a508:	cmp	r0, #0
   1a50c:	bge	1a520 <__assert_fail@plt+0x91a8>
   1a510:	ldr	r0, [fp, #-8]
   1a514:	bl	112c4 <fclose@plt>
   1a518:	str	r0, [fp, #-4]
   1a51c:	b	1a5bc <__assert_fail@plt+0x9244>
   1a520:	ldr	r0, [fp, #-8]
   1a524:	bl	111ec <__freading@plt>
   1a528:	cmp	r0, #0
   1a52c:	beq	1a564 <__assert_fail@plt+0x91ec>
   1a530:	ldr	r0, [fp, #-8]
   1a534:	bl	112ac <fileno@plt>
   1a538:	mov	r1, sp
   1a53c:	mov	r2, #1
   1a540:	str	r2, [r1]
   1a544:	mov	r1, #0
   1a548:	mov	r2, r1
   1a54c:	mov	r3, r1
   1a550:	bl	11174 <lseek64@plt>
   1a554:	and	r0, r0, r1
   1a558:	cmn	r0, #1
   1a55c:	beq	1a580 <__assert_fail@plt+0x9208>
   1a560:	b	1a564 <__assert_fail@plt+0x91ec>
   1a564:	ldr	r0, [fp, #-8]
   1a568:	bl	1a5c8 <__assert_fail@plt+0x9250>
   1a56c:	cmp	r0, #0
   1a570:	beq	1a580 <__assert_fail@plt+0x9208>
   1a574:	bl	1127c <__errno_location@plt>
   1a578:	ldr	r0, [r0]
   1a57c:	str	r0, [fp, #-12]
   1a580:	ldr	r0, [fp, #-8]
   1a584:	bl	112c4 <fclose@plt>
   1a588:	str	r0, [sp, #12]
   1a58c:	ldr	r0, [fp, #-12]
   1a590:	cmp	r0, #0
   1a594:	beq	1a5b4 <__assert_fail@plt+0x923c>
   1a598:	ldr	r0, [fp, #-12]
   1a59c:	str	r0, [sp, #8]
   1a5a0:	bl	1127c <__errno_location@plt>
   1a5a4:	ldr	r1, [sp, #8]
   1a5a8:	str	r1, [r0]
   1a5ac:	mvn	r0, #0
   1a5b0:	str	r0, [sp, #12]
   1a5b4:	ldr	r0, [sp, #12]
   1a5b8:	str	r0, [fp, #-4]
   1a5bc:	ldr	r0, [fp, #-4]
   1a5c0:	mov	sp, fp
   1a5c4:	pop	{fp, pc}
   1a5c8:	push	{fp, lr}
   1a5cc:	mov	fp, sp
   1a5d0:	sub	sp, sp, #8
   1a5d4:	str	r0, [sp]
   1a5d8:	ldr	r0, [sp]
   1a5dc:	movw	r1, #0
   1a5e0:	cmp	r0, r1
   1a5e4:	beq	1a5f8 <__assert_fail@plt+0x9280>
   1a5e8:	ldr	r0, [sp]
   1a5ec:	bl	111ec <__freading@plt>
   1a5f0:	cmp	r0, #0
   1a5f4:	bne	1a608 <__assert_fail@plt+0x9290>
   1a5f8:	ldr	r0, [sp]
   1a5fc:	bl	110c0 <fflush@plt>
   1a600:	str	r0, [sp, #4]
   1a604:	b	1a61c <__assert_fail@plt+0x92a4>
   1a608:	ldr	r0, [sp]
   1a60c:	bl	1a628 <__assert_fail@plt+0x92b0>
   1a610:	ldr	r0, [sp]
   1a614:	bl	110c0 <fflush@plt>
   1a618:	str	r0, [sp, #4]
   1a61c:	ldr	r0, [sp, #4]
   1a620:	mov	sp, fp
   1a624:	pop	{fp, pc}
   1a628:	push	{fp, lr}
   1a62c:	mov	fp, sp
   1a630:	sub	sp, sp, #8
   1a634:	str	r0, [sp, #4]
   1a638:	ldr	r0, [sp, #4]
   1a63c:	ldr	r0, [r0]
   1a640:	and	r0, r0, #256	; 0x100
   1a644:	cmp	r0, #0
   1a648:	beq	1a66c <__assert_fail@plt+0x92f4>
   1a64c:	ldr	r0, [sp, #4]
   1a650:	mov	r1, sp
   1a654:	mov	r2, #1
   1a658:	str	r2, [r1]
   1a65c:	mov	r1, #0
   1a660:	mov	r2, r1
   1a664:	mov	r3, r1
   1a668:	bl	1a674 <__assert_fail@plt+0x92fc>
   1a66c:	mov	sp, fp
   1a670:	pop	{fp, pc}
   1a674:	push	{fp, lr}
   1a678:	mov	fp, sp
   1a67c:	sub	sp, sp, #32
   1a680:	ldr	r1, [fp, #8]
   1a684:	str	r0, [fp, #-8]
   1a688:	str	r3, [sp, #20]
   1a68c:	str	r2, [sp, #16]
   1a690:	ldr	r0, [fp, #-8]
   1a694:	ldr	r0, [r0, #8]
   1a698:	ldr	r2, [fp, #-8]
   1a69c:	ldr	r2, [r2, #4]
   1a6a0:	cmp	r0, r2
   1a6a4:	bne	1a750 <__assert_fail@plt+0x93d8>
   1a6a8:	ldr	r0, [fp, #-8]
   1a6ac:	ldr	r0, [r0, #20]
   1a6b0:	ldr	r1, [fp, #-8]
   1a6b4:	ldr	r1, [r1, #16]
   1a6b8:	cmp	r0, r1
   1a6bc:	bne	1a750 <__assert_fail@plt+0x93d8>
   1a6c0:	ldr	r0, [fp, #-8]
   1a6c4:	ldr	r0, [r0, #36]	; 0x24
   1a6c8:	movw	r1, #0
   1a6cc:	cmp	r0, r1
   1a6d0:	bne	1a750 <__assert_fail@plt+0x93d8>
   1a6d4:	ldr	r0, [fp, #-8]
   1a6d8:	bl	112ac <fileno@plt>
   1a6dc:	ldr	r2, [sp, #16]
   1a6e0:	ldr	r3, [sp, #20]
   1a6e4:	ldr	r1, [fp, #8]
   1a6e8:	mov	ip, sp
   1a6ec:	str	r1, [ip]
   1a6f0:	bl	11174 <lseek64@plt>
   1a6f4:	str	r1, [sp, #12]
   1a6f8:	str	r0, [sp, #8]
   1a6fc:	ldr	r0, [sp, #8]
   1a700:	ldr	r1, [sp, #12]
   1a704:	and	r0, r0, r1
   1a708:	cmn	r0, #1
   1a70c:	bne	1a720 <__assert_fail@plt+0x93a8>
   1a710:	b	1a714 <__assert_fail@plt+0x939c>
   1a714:	mvn	r0, #0
   1a718:	str	r0, [fp, #-4]
   1a71c:	b	1a770 <__assert_fail@plt+0x93f8>
   1a720:	ldr	r0, [fp, #-8]
   1a724:	ldr	r1, [r0]
   1a728:	bic	r1, r1, #16
   1a72c:	str	r1, [r0]
   1a730:	ldr	r0, [sp, #8]
   1a734:	ldr	r1, [sp, #12]
   1a738:	ldr	r2, [fp, #-8]
   1a73c:	str	r1, [r2, #84]	; 0x54
   1a740:	str	r0, [r2, #80]	; 0x50
   1a744:	movw	r0, #0
   1a748:	str	r0, [fp, #-4]
   1a74c:	b	1a770 <__assert_fail@plt+0x93f8>
   1a750:	ldr	r0, [fp, #-8]
   1a754:	ldr	r2, [sp, #16]
   1a758:	ldr	r3, [sp, #20]
   1a75c:	ldr	r1, [fp, #8]
   1a760:	mov	ip, sp
   1a764:	str	r1, [ip]
   1a768:	bl	112d0 <fseeko64@plt>
   1a76c:	str	r0, [fp, #-4]
   1a770:	ldr	r0, [fp, #-4]
   1a774:	mov	sp, fp
   1a778:	pop	{fp, pc}
   1a77c:	push	{fp, lr}
   1a780:	mov	fp, sp
   1a784:	bl	1127c <__errno_location@plt>
   1a788:	movw	r1, #12
   1a78c:	str	r1, [r0]
   1a790:	movw	r0, #0
   1a794:	pop	{fp, pc}
   1a798:	push	{fp, lr}
   1a79c:	mov	fp, sp
   1a7a0:	sub	sp, sp, #8
   1a7a4:	str	r0, [sp, #4]
   1a7a8:	ldr	r0, [sp, #4]
   1a7ac:	cmn	r0, #1
   1a7b0:	bhi	1a7c4 <__assert_fail@plt+0x944c>
   1a7b4:	ldr	r0, [sp, #4]
   1a7b8:	bl	1a240 <__assert_fail@plt+0x8ec8>
   1a7bc:	str	r0, [sp]
   1a7c0:	b	1a7cc <__assert_fail@plt+0x9454>
   1a7c4:	bl	1a77c <__assert_fail@plt+0x9404>
   1a7c8:	str	r0, [sp]
   1a7cc:	ldr	r0, [sp]
   1a7d0:	mov	sp, fp
   1a7d4:	pop	{fp, pc}
   1a7d8:	push	{fp, lr}
   1a7dc:	mov	fp, sp
   1a7e0:	sub	sp, sp, #16
   1a7e4:	str	r0, [fp, #-4]
   1a7e8:	str	r1, [sp, #8]
   1a7ec:	ldr	r0, [sp, #8]
   1a7f0:	cmn	r0, #1
   1a7f4:	bhi	1a82c <__assert_fail@plt+0x94b4>
   1a7f8:	ldr	r0, [fp, #-4]
   1a7fc:	ldr	r1, [sp, #8]
   1a800:	ldr	r2, [sp, #8]
   1a804:	cmp	r2, #0
   1a808:	movw	r2, #0
   1a80c:	movne	r2, #1
   1a810:	mvn	r3, #0
   1a814:	eor	r2, r2, r3
   1a818:	and	r2, r2, #1
   1a81c:	orr	r1, r1, r2
   1a820:	bl	1a2b0 <__assert_fail@plt+0x8f38>
   1a824:	str	r0, [sp, #4]
   1a828:	b	1a834 <__assert_fail@plt+0x94bc>
   1a82c:	bl	1a77c <__assert_fail@plt+0x9404>
   1a830:	str	r0, [sp, #4]
   1a834:	ldr	r0, [sp, #4]
   1a838:	mov	sp, fp
   1a83c:	pop	{fp, pc}
   1a840:	push	{fp, lr}
   1a844:	mov	fp, sp
   1a848:	sub	sp, sp, #16
   1a84c:	str	r0, [sp, #8]
   1a850:	str	r1, [sp, #4]
   1a854:	ldr	r0, [sp, #8]
   1a858:	mvn	r1, #0
   1a85c:	cmp	r1, r0
   1a860:	bcs	1a884 <__assert_fail@plt+0x950c>
   1a864:	ldr	r0, [sp, #4]
   1a868:	cmp	r0, #0
   1a86c:	beq	1a87c <__assert_fail@plt+0x9504>
   1a870:	bl	1a77c <__assert_fail@plt+0x9404>
   1a874:	str	r0, [fp, #-4]
   1a878:	b	1a8c4 <__assert_fail@plt+0x954c>
   1a87c:	movw	r0, #0
   1a880:	str	r0, [sp, #8]
   1a884:	ldr	r0, [sp, #4]
   1a888:	mvn	r1, #0
   1a88c:	cmp	r1, r0
   1a890:	bcs	1a8b4 <__assert_fail@plt+0x953c>
   1a894:	ldr	r0, [sp, #8]
   1a898:	cmp	r0, #0
   1a89c:	beq	1a8ac <__assert_fail@plt+0x9534>
   1a8a0:	bl	1a77c <__assert_fail@plt+0x9404>
   1a8a4:	str	r0, [fp, #-4]
   1a8a8:	b	1a8c4 <__assert_fail@plt+0x954c>
   1a8ac:	movw	r0, #0
   1a8b0:	str	r0, [sp, #4]
   1a8b4:	ldr	r0, [sp, #8]
   1a8b8:	ldr	r1, [sp, #4]
   1a8bc:	bl	1a1a4 <__assert_fail@plt+0x8e2c>
   1a8c0:	str	r0, [fp, #-4]
   1a8c4:	ldr	r0, [fp, #-4]
   1a8c8:	mov	sp, fp
   1a8cc:	pop	{fp, pc}
   1a8d0:	push	{fp, lr}
   1a8d4:	mov	fp, sp
   1a8d8:	sub	sp, sp, #16
   1a8dc:	str	r0, [fp, #-4]
   1a8e0:	str	r1, [sp, #8]
   1a8e4:	str	r2, [sp, #4]
   1a8e8:	ldr	r0, [sp, #8]
   1a8ec:	cmp	r0, #0
   1a8f0:	beq	1a900 <__assert_fail@plt+0x9588>
   1a8f4:	ldr	r0, [sp, #4]
   1a8f8:	cmp	r0, #0
   1a8fc:	bne	1a90c <__assert_fail@plt+0x9594>
   1a900:	movw	r0, #1
   1a904:	str	r0, [sp, #4]
   1a908:	str	r0, [sp, #8]
   1a90c:	ldr	r0, [sp, #8]
   1a910:	cmn	r0, #1
   1a914:	bhi	1a93c <__assert_fail@plt+0x95c4>
   1a918:	ldr	r0, [sp, #4]
   1a91c:	cmn	r0, #1
   1a920:	bhi	1a93c <__assert_fail@plt+0x95c4>
   1a924:	ldr	r0, [fp, #-4]
   1a928:	ldr	r1, [sp, #8]
   1a92c:	ldr	r2, [sp, #4]
   1a930:	bl	1aa5c <__assert_fail@plt+0x96e4>
   1a934:	str	r0, [sp]
   1a938:	b	1a944 <__assert_fail@plt+0x95cc>
   1a93c:	bl	1a77c <__assert_fail@plt+0x9404>
   1a940:	str	r0, [sp]
   1a944:	ldr	r0, [sp]
   1a948:	mov	sp, fp
   1a94c:	pop	{fp, pc}
   1a950:	push	{fp, lr}
   1a954:	mov	fp, sp
   1a958:	sub	sp, sp, #8
   1a95c:	movw	r0, #14
   1a960:	bl	11300 <nl_langinfo@plt>
   1a964:	str	r0, [sp, #4]
   1a968:	ldr	r0, [sp, #4]
   1a96c:	movw	r1, #0
   1a970:	cmp	r0, r1
   1a974:	bne	1a984 <__assert_fail@plt+0x960c>
   1a978:	movw	r0, #50947	; 0xc703
   1a97c:	movt	r0, #1
   1a980:	str	r0, [sp, #4]
   1a984:	ldr	r0, [sp, #4]
   1a988:	ldrb	r0, [r0]
   1a98c:	cmp	r0, #0
   1a990:	bne	1a9a0 <__assert_fail@plt+0x9628>
   1a994:	movw	r0, #52837	; 0xce65
   1a998:	movt	r0, #1
   1a99c:	str	r0, [sp, #4]
   1a9a0:	ldr	r0, [sp, #4]
   1a9a4:	mov	sp, fp
   1a9a8:	pop	{fp, pc}
   1a9ac:	push	{fp, lr}
   1a9b0:	mov	fp, sp
   1a9b4:	sub	sp, sp, #32
   1a9b8:	str	r0, [fp, #-8]
   1a9bc:	str	r1, [fp, #-12]
   1a9c0:	str	r2, [sp, #16]
   1a9c4:	str	r3, [sp, #12]
   1a9c8:	ldr	r0, [fp, #-8]
   1a9cc:	movw	r1, #0
   1a9d0:	cmp	r0, r1
   1a9d4:	bne	1a9e0 <__assert_fail@plt+0x9668>
   1a9d8:	add	r0, sp, #4
   1a9dc:	str	r0, [fp, #-8]
   1a9e0:	ldr	r0, [fp, #-8]
   1a9e4:	ldr	r1, [fp, #-12]
   1a9e8:	ldr	r2, [sp, #16]
   1a9ec:	ldr	r3, [sp, #12]
   1a9f0:	bl	111a4 <mbrtowc@plt>
   1a9f4:	str	r0, [sp, #8]
   1a9f8:	ldr	r0, [sp, #8]
   1a9fc:	mvn	r1, #1
   1aa00:	cmp	r1, r0
   1aa04:	bhi	1aa48 <__assert_fail@plt+0x96d0>
   1aa08:	ldr	r0, [sp, #16]
   1aa0c:	cmp	r0, #0
   1aa10:	beq	1aa48 <__assert_fail@plt+0x96d0>
   1aa14:	movw	r0, #0
   1aa18:	bl	13dc8 <__assert_fail@plt+0x2a50>
   1aa1c:	tst	r0, #1
   1aa20:	bne	1aa48 <__assert_fail@plt+0x96d0>
   1aa24:	ldr	r0, [fp, #-12]
   1aa28:	ldrb	r0, [r0]
   1aa2c:	strb	r0, [sp, #3]
   1aa30:	ldrb	r0, [sp, #3]
   1aa34:	ldr	r1, [fp, #-8]
   1aa38:	str	r0, [r1]
   1aa3c:	movw	r0, #1
   1aa40:	str	r0, [fp, #-4]
   1aa44:	b	1aa50 <__assert_fail@plt+0x96d8>
   1aa48:	ldr	r0, [sp, #8]
   1aa4c:	str	r0, [fp, #-4]
   1aa50:	ldr	r0, [fp, #-4]
   1aa54:	mov	sp, fp
   1aa58:	pop	{fp, pc}
   1aa5c:	push	{fp, lr}
   1aa60:	mov	fp, sp
   1aa64:	sub	sp, sp, #96	; 0x60
   1aa68:	str	r0, [fp, #-8]
   1aa6c:	str	r1, [fp, #-12]
   1aa70:	str	r2, [fp, #-16]
   1aa74:	b	1ae2c <__assert_fail@plt+0x9ab4>
   1aa78:	b	1ac4c <__assert_fail@plt+0x98d4>
   1aa7c:	ldr	r0, [fp, #-16]
   1aa80:	cmp	r0, #0
   1aa84:	bcs	1ab88 <__assert_fail@plt+0x9810>
   1aa88:	ldr	r0, [fp, #-12]
   1aa8c:	cmp	r0, #0
   1aa90:	bcs	1ab18 <__assert_fail@plt+0x97a0>
   1aa94:	b	1aab4 <__assert_fail@plt+0x973c>
   1aa98:	ldr	r0, [fp, #-12]
   1aa9c:	ldr	r1, [fp, #-16]
   1aaa0:	movw	r2, #127	; 0x7f
   1aaa4:	udiv	r1, r2, r1
   1aaa8:	cmp	r0, r1
   1aaac:	bcc	1ac1c <__assert_fail@plt+0x98a4>
   1aab0:	b	1ac34 <__assert_fail@plt+0x98bc>
   1aab4:	b	1aac8 <__assert_fail@plt+0x9750>
   1aab8:	ldr	r0, [fp, #-16]
   1aabc:	cmp	r0, #1
   1aac0:	bcc	1aad8 <__assert_fail@plt+0x9760>
   1aac4:	b	1aae4 <__assert_fail@plt+0x976c>
   1aac8:	ldr	r0, [fp, #-16]
   1aacc:	movw	r1, #0
   1aad0:	cmp	r1, r0
   1aad4:	bcs	1aae4 <__assert_fail@plt+0x976c>
   1aad8:	movw	r0, #0
   1aadc:	str	r0, [fp, #-24]	; 0xffffffe8
   1aae0:	b	1aafc <__assert_fail@plt+0x9784>
   1aae4:	ldr	r0, [fp, #-16]
   1aae8:	movw	r1, #0
   1aaec:	sub	r0, r1, r0
   1aaf0:	movw	r1, #127	; 0x7f
   1aaf4:	udiv	r0, r1, r0
   1aaf8:	str	r0, [fp, #-24]	; 0xffffffe8
   1aafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab00:	ldr	r1, [fp, #-12]
   1ab04:	mvn	r2, #0
   1ab08:	sub	r1, r2, r1
   1ab0c:	cmp	r0, r1
   1ab10:	bls	1ac1c <__assert_fail@plt+0x98a4>
   1ab14:	b	1ac34 <__assert_fail@plt+0x98bc>
   1ab18:	ldr	r0, [fp, #-16]
   1ab1c:	cmn	r0, #1
   1ab20:	bne	1ab6c <__assert_fail@plt+0x97f4>
   1ab24:	b	1ab44 <__assert_fail@plt+0x97cc>
   1ab28:	ldr	r0, [fp, #-12]
   1ab2c:	mvn	r1, #127	; 0x7f
   1ab30:	add	r0, r0, r1
   1ab34:	movw	r1, #0
   1ab38:	cmp	r1, r0
   1ab3c:	bcc	1ac1c <__assert_fail@plt+0x98a4>
   1ab40:	b	1ac34 <__assert_fail@plt+0x98bc>
   1ab44:	ldr	r0, [fp, #-12]
   1ab48:	movw	r1, #0
   1ab4c:	cmp	r1, r0
   1ab50:	bcs	1ac34 <__assert_fail@plt+0x98bc>
   1ab54:	ldr	r0, [fp, #-12]
   1ab58:	sub	r0, r0, #1
   1ab5c:	movw	r1, #127	; 0x7f
   1ab60:	cmp	r1, r0
   1ab64:	bcc	1ac1c <__assert_fail@plt+0x98a4>
   1ab68:	b	1ac34 <__assert_fail@plt+0x98bc>
   1ab6c:	ldr	r0, [fp, #-16]
   1ab70:	mvn	r1, #127	; 0x7f
   1ab74:	udiv	r0, r1, r0
   1ab78:	ldr	r1, [fp, #-12]
   1ab7c:	cmp	r0, r1
   1ab80:	bcc	1ac1c <__assert_fail@plt+0x98a4>
   1ab84:	b	1ac34 <__assert_fail@plt+0x98bc>
   1ab88:	ldr	r0, [fp, #-16]
   1ab8c:	cmp	r0, #0
   1ab90:	bne	1ab98 <__assert_fail@plt+0x9820>
   1ab94:	b	1ac34 <__assert_fail@plt+0x98bc>
   1ab98:	ldr	r0, [fp, #-12]
   1ab9c:	cmp	r0, #0
   1aba0:	bcs	1ac04 <__assert_fail@plt+0x988c>
   1aba4:	ldr	r0, [fp, #-12]
   1aba8:	cmn	r0, #1
   1abac:	bne	1abe8 <__assert_fail@plt+0x9870>
   1abb0:	b	1abd0 <__assert_fail@plt+0x9858>
   1abb4:	ldr	r0, [fp, #-16]
   1abb8:	mvn	r1, #127	; 0x7f
   1abbc:	add	r0, r0, r1
   1abc0:	movw	r1, #0
   1abc4:	cmp	r1, r0
   1abc8:	bcc	1ac1c <__assert_fail@plt+0x98a4>
   1abcc:	b	1ac34 <__assert_fail@plt+0x98bc>
   1abd0:	ldr	r0, [fp, #-16]
   1abd4:	sub	r0, r0, #1
   1abd8:	movw	r1, #127	; 0x7f
   1abdc:	cmp	r1, r0
   1abe0:	bcc	1ac1c <__assert_fail@plt+0x98a4>
   1abe4:	b	1ac34 <__assert_fail@plt+0x98bc>
   1abe8:	ldr	r0, [fp, #-12]
   1abec:	mvn	r1, #127	; 0x7f
   1abf0:	udiv	r0, r1, r0
   1abf4:	ldr	r1, [fp, #-16]
   1abf8:	cmp	r0, r1
   1abfc:	bcc	1ac1c <__assert_fail@plt+0x98a4>
   1ac00:	b	1ac34 <__assert_fail@plt+0x98bc>
   1ac04:	ldr	r0, [fp, #-16]
   1ac08:	movw	r1, #127	; 0x7f
   1ac0c:	udiv	r0, r1, r0
   1ac10:	ldr	r1, [fp, #-12]
   1ac14:	cmp	r0, r1
   1ac18:	bcs	1ac34 <__assert_fail@plt+0x98bc>
   1ac1c:	ldr	r0, [fp, #-12]
   1ac20:	ldr	r1, [fp, #-16]
   1ac24:	mul	r0, r0, r1
   1ac28:	sxtb	r0, r0
   1ac2c:	str	r0, [fp, #-20]	; 0xffffffec
   1ac30:	b	1bd5c <__assert_fail@plt+0xa9e4>
   1ac34:	ldr	r0, [fp, #-12]
   1ac38:	ldr	r1, [fp, #-16]
   1ac3c:	mul	r0, r0, r1
   1ac40:	sxtb	r0, r0
   1ac44:	str	r0, [fp, #-20]	; 0xffffffec
   1ac48:	b	1bd74 <__assert_fail@plt+0xa9fc>
   1ac4c:	ldr	r0, [fp, #-16]
   1ac50:	cmp	r0, #0
   1ac54:	bcs	1ad60 <__assert_fail@plt+0x99e8>
   1ac58:	ldr	r0, [fp, #-12]
   1ac5c:	cmp	r0, #0
   1ac60:	bcs	1ace8 <__assert_fail@plt+0x9970>
   1ac64:	b	1ac84 <__assert_fail@plt+0x990c>
   1ac68:	ldr	r0, [fp, #-12]
   1ac6c:	ldr	r1, [fp, #-16]
   1ac70:	movw	r2, #255	; 0xff
   1ac74:	udiv	r1, r2, r1
   1ac78:	cmp	r0, r1
   1ac7c:	bcc	1adfc <__assert_fail@plt+0x9a84>
   1ac80:	b	1ae14 <__assert_fail@plt+0x9a9c>
   1ac84:	b	1ac98 <__assert_fail@plt+0x9920>
   1ac88:	ldr	r0, [fp, #-16]
   1ac8c:	cmp	r0, #1
   1ac90:	bcc	1aca8 <__assert_fail@plt+0x9930>
   1ac94:	b	1acb4 <__assert_fail@plt+0x993c>
   1ac98:	ldr	r0, [fp, #-16]
   1ac9c:	movw	r1, #0
   1aca0:	cmp	r1, r0
   1aca4:	bcs	1acb4 <__assert_fail@plt+0x993c>
   1aca8:	movw	r0, #0
   1acac:	str	r0, [fp, #-28]	; 0xffffffe4
   1acb0:	b	1accc <__assert_fail@plt+0x9954>
   1acb4:	ldr	r0, [fp, #-16]
   1acb8:	movw	r1, #0
   1acbc:	sub	r0, r1, r0
   1acc0:	movw	r1, #255	; 0xff
   1acc4:	udiv	r0, r1, r0
   1acc8:	str	r0, [fp, #-28]	; 0xffffffe4
   1accc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1acd0:	ldr	r1, [fp, #-12]
   1acd4:	mvn	r2, #0
   1acd8:	sub	r1, r2, r1
   1acdc:	cmp	r0, r1
   1ace0:	bls	1adfc <__assert_fail@plt+0x9a84>
   1ace4:	b	1ae14 <__assert_fail@plt+0x9a9c>
   1ace8:	b	1acf0 <__assert_fail@plt+0x9978>
   1acec:	b	1acf4 <__assert_fail@plt+0x997c>
   1acf0:	b	1ad44 <__assert_fail@plt+0x99cc>
   1acf4:	ldr	r0, [fp, #-16]
   1acf8:	cmn	r0, #1
   1acfc:	bne	1ad44 <__assert_fail@plt+0x99cc>
   1ad00:	b	1ad1c <__assert_fail@plt+0x99a4>
   1ad04:	ldr	r0, [fp, #-12]
   1ad08:	add	r0, r0, #0
   1ad0c:	movw	r1, #0
   1ad10:	cmp	r1, r0
   1ad14:	bcc	1adfc <__assert_fail@plt+0x9a84>
   1ad18:	b	1ae14 <__assert_fail@plt+0x9a9c>
   1ad1c:	ldr	r0, [fp, #-12]
   1ad20:	movw	r1, #0
   1ad24:	cmp	r1, r0
   1ad28:	bcs	1ae14 <__assert_fail@plt+0x9a9c>
   1ad2c:	ldr	r0, [fp, #-12]
   1ad30:	sub	r0, r0, #1
   1ad34:	mvn	r1, #0
   1ad38:	cmp	r1, r0
   1ad3c:	bcc	1adfc <__assert_fail@plt+0x9a84>
   1ad40:	b	1ae14 <__assert_fail@plt+0x9a9c>
   1ad44:	ldr	r0, [fp, #-16]
   1ad48:	movw	r1, #0
   1ad4c:	udiv	r0, r1, r0
   1ad50:	ldr	r1, [fp, #-12]
   1ad54:	cmp	r0, r1
   1ad58:	bcc	1adfc <__assert_fail@plt+0x9a84>
   1ad5c:	b	1ae14 <__assert_fail@plt+0x9a9c>
   1ad60:	ldr	r0, [fp, #-16]
   1ad64:	cmp	r0, #0
   1ad68:	bne	1ad70 <__assert_fail@plt+0x99f8>
   1ad6c:	b	1ae14 <__assert_fail@plt+0x9a9c>
   1ad70:	ldr	r0, [fp, #-12]
   1ad74:	cmp	r0, #0
   1ad78:	bcs	1ade4 <__assert_fail@plt+0x9a6c>
   1ad7c:	b	1ad84 <__assert_fail@plt+0x9a0c>
   1ad80:	b	1ad88 <__assert_fail@plt+0x9a10>
   1ad84:	b	1adc8 <__assert_fail@plt+0x9a50>
   1ad88:	ldr	r0, [fp, #-12]
   1ad8c:	cmn	r0, #1
   1ad90:	bne	1adc8 <__assert_fail@plt+0x9a50>
   1ad94:	b	1adb0 <__assert_fail@plt+0x9a38>
   1ad98:	ldr	r0, [fp, #-16]
   1ad9c:	add	r0, r0, #0
   1ada0:	movw	r1, #0
   1ada4:	cmp	r1, r0
   1ada8:	bcc	1adfc <__assert_fail@plt+0x9a84>
   1adac:	b	1ae14 <__assert_fail@plt+0x9a9c>
   1adb0:	ldr	r0, [fp, #-16]
   1adb4:	sub	r0, r0, #1
   1adb8:	mvn	r1, #0
   1adbc:	cmp	r1, r0
   1adc0:	bcc	1adfc <__assert_fail@plt+0x9a84>
   1adc4:	b	1ae14 <__assert_fail@plt+0x9a9c>
   1adc8:	ldr	r0, [fp, #-12]
   1adcc:	movw	r1, #0
   1add0:	udiv	r0, r1, r0
   1add4:	ldr	r1, [fp, #-16]
   1add8:	cmp	r0, r1
   1addc:	bcc	1adfc <__assert_fail@plt+0x9a84>
   1ade0:	b	1ae14 <__assert_fail@plt+0x9a9c>
   1ade4:	ldr	r0, [fp, #-16]
   1ade8:	movw	r1, #255	; 0xff
   1adec:	udiv	r0, r1, r0
   1adf0:	ldr	r1, [fp, #-12]
   1adf4:	cmp	r0, r1
   1adf8:	bcs	1ae14 <__assert_fail@plt+0x9a9c>
   1adfc:	ldr	r0, [fp, #-12]
   1ae00:	ldr	r1, [fp, #-16]
   1ae04:	mul	r0, r0, r1
   1ae08:	and	r0, r0, #255	; 0xff
   1ae0c:	str	r0, [fp, #-20]	; 0xffffffec
   1ae10:	b	1bd5c <__assert_fail@plt+0xa9e4>
   1ae14:	ldr	r0, [fp, #-12]
   1ae18:	ldr	r1, [fp, #-16]
   1ae1c:	mul	r0, r0, r1
   1ae20:	and	r0, r0, #255	; 0xff
   1ae24:	str	r0, [fp, #-20]	; 0xffffffec
   1ae28:	b	1bd74 <__assert_fail@plt+0xa9fc>
   1ae2c:	b	1b1e4 <__assert_fail@plt+0x9e6c>
   1ae30:	b	1b004 <__assert_fail@plt+0x9c8c>
   1ae34:	ldr	r0, [fp, #-16]
   1ae38:	cmp	r0, #0
   1ae3c:	bcs	1af40 <__assert_fail@plt+0x9bc8>
   1ae40:	ldr	r0, [fp, #-12]
   1ae44:	cmp	r0, #0
   1ae48:	bcs	1aed0 <__assert_fail@plt+0x9b58>
   1ae4c:	b	1ae6c <__assert_fail@plt+0x9af4>
   1ae50:	ldr	r0, [fp, #-12]
   1ae54:	ldr	r1, [fp, #-16]
   1ae58:	movw	r2, #32767	; 0x7fff
   1ae5c:	udiv	r1, r2, r1
   1ae60:	cmp	r0, r1
   1ae64:	bcc	1afd4 <__assert_fail@plt+0x9c5c>
   1ae68:	b	1afec <__assert_fail@plt+0x9c74>
   1ae6c:	b	1ae80 <__assert_fail@plt+0x9b08>
   1ae70:	ldr	r0, [fp, #-16]
   1ae74:	cmp	r0, #1
   1ae78:	bcc	1ae90 <__assert_fail@plt+0x9b18>
   1ae7c:	b	1ae9c <__assert_fail@plt+0x9b24>
   1ae80:	ldr	r0, [fp, #-16]
   1ae84:	movw	r1, #0
   1ae88:	cmp	r1, r0
   1ae8c:	bcs	1ae9c <__assert_fail@plt+0x9b24>
   1ae90:	movw	r0, #0
   1ae94:	str	r0, [fp, #-32]	; 0xffffffe0
   1ae98:	b	1aeb4 <__assert_fail@plt+0x9b3c>
   1ae9c:	ldr	r0, [fp, #-16]
   1aea0:	movw	r1, #0
   1aea4:	sub	r0, r1, r0
   1aea8:	movw	r1, #32767	; 0x7fff
   1aeac:	udiv	r0, r1, r0
   1aeb0:	str	r0, [fp, #-32]	; 0xffffffe0
   1aeb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aeb8:	ldr	r1, [fp, #-12]
   1aebc:	mvn	r2, #0
   1aec0:	sub	r1, r2, r1
   1aec4:	cmp	r0, r1
   1aec8:	bls	1afd4 <__assert_fail@plt+0x9c5c>
   1aecc:	b	1afec <__assert_fail@plt+0x9c74>
   1aed0:	ldr	r0, [fp, #-16]
   1aed4:	cmn	r0, #1
   1aed8:	bne	1af24 <__assert_fail@plt+0x9bac>
   1aedc:	b	1aefc <__assert_fail@plt+0x9b84>
   1aee0:	ldr	r0, [pc, #3760]	; 1bd98 <__assert_fail@plt+0xaa20>
   1aee4:	ldr	r1, [fp, #-12]
   1aee8:	add	r0, r1, r0
   1aeec:	movw	r1, #0
   1aef0:	cmp	r1, r0
   1aef4:	bcc	1afd4 <__assert_fail@plt+0x9c5c>
   1aef8:	b	1afec <__assert_fail@plt+0x9c74>
   1aefc:	ldr	r0, [fp, #-12]
   1af00:	movw	r1, #0
   1af04:	cmp	r1, r0
   1af08:	bcs	1afec <__assert_fail@plt+0x9c74>
   1af0c:	ldr	r0, [fp, #-12]
   1af10:	sub	r0, r0, #1
   1af14:	movw	r1, #32767	; 0x7fff
   1af18:	cmp	r1, r0
   1af1c:	bcc	1afd4 <__assert_fail@plt+0x9c5c>
   1af20:	b	1afec <__assert_fail@plt+0x9c74>
   1af24:	ldr	r0, [pc, #3692]	; 1bd98 <__assert_fail@plt+0xaa20>
   1af28:	ldr	r1, [fp, #-16]
   1af2c:	udiv	r0, r0, r1
   1af30:	ldr	r1, [fp, #-12]
   1af34:	cmp	r0, r1
   1af38:	bcc	1afd4 <__assert_fail@plt+0x9c5c>
   1af3c:	b	1afec <__assert_fail@plt+0x9c74>
   1af40:	ldr	r0, [fp, #-16]
   1af44:	cmp	r0, #0
   1af48:	bne	1af50 <__assert_fail@plt+0x9bd8>
   1af4c:	b	1afec <__assert_fail@plt+0x9c74>
   1af50:	ldr	r0, [fp, #-12]
   1af54:	cmp	r0, #0
   1af58:	bcs	1afbc <__assert_fail@plt+0x9c44>
   1af5c:	ldr	r0, [fp, #-12]
   1af60:	cmn	r0, #1
   1af64:	bne	1afa0 <__assert_fail@plt+0x9c28>
   1af68:	b	1af88 <__assert_fail@plt+0x9c10>
   1af6c:	ldr	r0, [pc, #3620]	; 1bd98 <__assert_fail@plt+0xaa20>
   1af70:	ldr	r1, [fp, #-16]
   1af74:	add	r0, r1, r0
   1af78:	movw	r1, #0
   1af7c:	cmp	r1, r0
   1af80:	bcc	1afd4 <__assert_fail@plt+0x9c5c>
   1af84:	b	1afec <__assert_fail@plt+0x9c74>
   1af88:	ldr	r0, [fp, #-16]
   1af8c:	sub	r0, r0, #1
   1af90:	movw	r1, #32767	; 0x7fff
   1af94:	cmp	r1, r0
   1af98:	bcc	1afd4 <__assert_fail@plt+0x9c5c>
   1af9c:	b	1afec <__assert_fail@plt+0x9c74>
   1afa0:	ldr	r0, [pc, #3568]	; 1bd98 <__assert_fail@plt+0xaa20>
   1afa4:	ldr	r1, [fp, #-12]
   1afa8:	udiv	r0, r0, r1
   1afac:	ldr	r1, [fp, #-16]
   1afb0:	cmp	r0, r1
   1afb4:	bcc	1afd4 <__assert_fail@plt+0x9c5c>
   1afb8:	b	1afec <__assert_fail@plt+0x9c74>
   1afbc:	ldr	r0, [fp, #-16]
   1afc0:	movw	r1, #32767	; 0x7fff
   1afc4:	udiv	r0, r1, r0
   1afc8:	ldr	r1, [fp, #-12]
   1afcc:	cmp	r0, r1
   1afd0:	bcs	1afec <__assert_fail@plt+0x9c74>
   1afd4:	ldr	r0, [fp, #-12]
   1afd8:	ldr	r1, [fp, #-16]
   1afdc:	mul	r0, r0, r1
   1afe0:	sxth	r0, r0
   1afe4:	str	r0, [fp, #-20]	; 0xffffffec
   1afe8:	b	1bd5c <__assert_fail@plt+0xa9e4>
   1afec:	ldr	r0, [fp, #-12]
   1aff0:	ldr	r1, [fp, #-16]
   1aff4:	mul	r0, r0, r1
   1aff8:	sxth	r0, r0
   1affc:	str	r0, [fp, #-20]	; 0xffffffec
   1b000:	b	1bd74 <__assert_fail@plt+0xa9fc>
   1b004:	ldr	r0, [fp, #-16]
   1b008:	cmp	r0, #0
   1b00c:	bcs	1b118 <__assert_fail@plt+0x9da0>
   1b010:	ldr	r0, [fp, #-12]
   1b014:	cmp	r0, #0
   1b018:	bcs	1b0a0 <__assert_fail@plt+0x9d28>
   1b01c:	b	1b03c <__assert_fail@plt+0x9cc4>
   1b020:	ldr	r0, [fp, #-12]
   1b024:	ldr	r1, [fp, #-16]
   1b028:	movw	r2, #65535	; 0xffff
   1b02c:	udiv	r1, r2, r1
   1b030:	cmp	r0, r1
   1b034:	bcc	1b1b4 <__assert_fail@plt+0x9e3c>
   1b038:	b	1b1cc <__assert_fail@plt+0x9e54>
   1b03c:	b	1b050 <__assert_fail@plt+0x9cd8>
   1b040:	ldr	r0, [fp, #-16]
   1b044:	cmp	r0, #1
   1b048:	bcc	1b060 <__assert_fail@plt+0x9ce8>
   1b04c:	b	1b06c <__assert_fail@plt+0x9cf4>
   1b050:	ldr	r0, [fp, #-16]
   1b054:	movw	r1, #0
   1b058:	cmp	r1, r0
   1b05c:	bcs	1b06c <__assert_fail@plt+0x9cf4>
   1b060:	movw	r0, #0
   1b064:	str	r0, [fp, #-36]	; 0xffffffdc
   1b068:	b	1b084 <__assert_fail@plt+0x9d0c>
   1b06c:	ldr	r0, [fp, #-16]
   1b070:	movw	r1, #0
   1b074:	sub	r0, r1, r0
   1b078:	movw	r1, #65535	; 0xffff
   1b07c:	udiv	r0, r1, r0
   1b080:	str	r0, [fp, #-36]	; 0xffffffdc
   1b084:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b088:	ldr	r1, [fp, #-12]
   1b08c:	mvn	r2, #0
   1b090:	sub	r1, r2, r1
   1b094:	cmp	r0, r1
   1b098:	bls	1b1b4 <__assert_fail@plt+0x9e3c>
   1b09c:	b	1b1cc <__assert_fail@plt+0x9e54>
   1b0a0:	b	1b0a8 <__assert_fail@plt+0x9d30>
   1b0a4:	b	1b0ac <__assert_fail@plt+0x9d34>
   1b0a8:	b	1b0fc <__assert_fail@plt+0x9d84>
   1b0ac:	ldr	r0, [fp, #-16]
   1b0b0:	cmn	r0, #1
   1b0b4:	bne	1b0fc <__assert_fail@plt+0x9d84>
   1b0b8:	b	1b0d4 <__assert_fail@plt+0x9d5c>
   1b0bc:	ldr	r0, [fp, #-12]
   1b0c0:	add	r0, r0, #0
   1b0c4:	movw	r1, #0
   1b0c8:	cmp	r1, r0
   1b0cc:	bcc	1b1b4 <__assert_fail@plt+0x9e3c>
   1b0d0:	b	1b1cc <__assert_fail@plt+0x9e54>
   1b0d4:	ldr	r0, [fp, #-12]
   1b0d8:	movw	r1, #0
   1b0dc:	cmp	r1, r0
   1b0e0:	bcs	1b1cc <__assert_fail@plt+0x9e54>
   1b0e4:	ldr	r0, [fp, #-12]
   1b0e8:	sub	r0, r0, #1
   1b0ec:	mvn	r1, #0
   1b0f0:	cmp	r1, r0
   1b0f4:	bcc	1b1b4 <__assert_fail@plt+0x9e3c>
   1b0f8:	b	1b1cc <__assert_fail@plt+0x9e54>
   1b0fc:	ldr	r0, [fp, #-16]
   1b100:	movw	r1, #0
   1b104:	udiv	r0, r1, r0
   1b108:	ldr	r1, [fp, #-12]
   1b10c:	cmp	r0, r1
   1b110:	bcc	1b1b4 <__assert_fail@plt+0x9e3c>
   1b114:	b	1b1cc <__assert_fail@plt+0x9e54>
   1b118:	ldr	r0, [fp, #-16]
   1b11c:	cmp	r0, #0
   1b120:	bne	1b128 <__assert_fail@plt+0x9db0>
   1b124:	b	1b1cc <__assert_fail@plt+0x9e54>
   1b128:	ldr	r0, [fp, #-12]
   1b12c:	cmp	r0, #0
   1b130:	bcs	1b19c <__assert_fail@plt+0x9e24>
   1b134:	b	1b13c <__assert_fail@plt+0x9dc4>
   1b138:	b	1b140 <__assert_fail@plt+0x9dc8>
   1b13c:	b	1b180 <__assert_fail@plt+0x9e08>
   1b140:	ldr	r0, [fp, #-12]
   1b144:	cmn	r0, #1
   1b148:	bne	1b180 <__assert_fail@plt+0x9e08>
   1b14c:	b	1b168 <__assert_fail@plt+0x9df0>
   1b150:	ldr	r0, [fp, #-16]
   1b154:	add	r0, r0, #0
   1b158:	movw	r1, #0
   1b15c:	cmp	r1, r0
   1b160:	bcc	1b1b4 <__assert_fail@plt+0x9e3c>
   1b164:	b	1b1cc <__assert_fail@plt+0x9e54>
   1b168:	ldr	r0, [fp, #-16]
   1b16c:	sub	r0, r0, #1
   1b170:	mvn	r1, #0
   1b174:	cmp	r1, r0
   1b178:	bcc	1b1b4 <__assert_fail@plt+0x9e3c>
   1b17c:	b	1b1cc <__assert_fail@plt+0x9e54>
   1b180:	ldr	r0, [fp, #-12]
   1b184:	movw	r1, #0
   1b188:	udiv	r0, r1, r0
   1b18c:	ldr	r1, [fp, #-16]
   1b190:	cmp	r0, r1
   1b194:	bcc	1b1b4 <__assert_fail@plt+0x9e3c>
   1b198:	b	1b1cc <__assert_fail@plt+0x9e54>
   1b19c:	ldr	r0, [fp, #-16]
   1b1a0:	movw	r1, #65535	; 0xffff
   1b1a4:	udiv	r0, r1, r0
   1b1a8:	ldr	r1, [fp, #-12]
   1b1ac:	cmp	r0, r1
   1b1b0:	bcs	1b1cc <__assert_fail@plt+0x9e54>
   1b1b4:	ldr	r0, [fp, #-12]
   1b1b8:	ldr	r1, [fp, #-16]
   1b1bc:	mul	r0, r0, r1
   1b1c0:	uxth	r0, r0
   1b1c4:	str	r0, [fp, #-20]	; 0xffffffec
   1b1c8:	b	1bd5c <__assert_fail@plt+0xa9e4>
   1b1cc:	ldr	r0, [fp, #-12]
   1b1d0:	ldr	r1, [fp, #-16]
   1b1d4:	mul	r0, r0, r1
   1b1d8:	uxth	r0, r0
   1b1dc:	str	r0, [fp, #-20]	; 0xffffffec
   1b1e0:	b	1bd74 <__assert_fail@plt+0xa9fc>
   1b1e4:	b	1b1e8 <__assert_fail@plt+0x9e70>
   1b1e8:	b	1b3ac <__assert_fail@plt+0xa034>
   1b1ec:	ldr	r0, [fp, #-16]
   1b1f0:	cmp	r0, #0
   1b1f4:	bcs	1b2f4 <__assert_fail@plt+0x9f7c>
   1b1f8:	ldr	r0, [fp, #-12]
   1b1fc:	cmp	r0, #0
   1b200:	bcs	1b288 <__assert_fail@plt+0x9f10>
   1b204:	b	1b224 <__assert_fail@plt+0x9eac>
   1b208:	ldr	r0, [pc, #2944]	; 1bd90 <__assert_fail@plt+0xaa18>
   1b20c:	ldr	r1, [fp, #-12]
   1b210:	ldr	r2, [fp, #-16]
   1b214:	udiv	r0, r0, r2
   1b218:	cmp	r1, r0
   1b21c:	bcc	1b384 <__assert_fail@plt+0xa00c>
   1b220:	b	1b398 <__assert_fail@plt+0xa020>
   1b224:	b	1b238 <__assert_fail@plt+0x9ec0>
   1b228:	ldr	r0, [fp, #-16]
   1b22c:	cmp	r0, #1
   1b230:	bcc	1b248 <__assert_fail@plt+0x9ed0>
   1b234:	b	1b254 <__assert_fail@plt+0x9edc>
   1b238:	ldr	r0, [fp, #-16]
   1b23c:	movw	r1, #0
   1b240:	cmp	r1, r0
   1b244:	bcs	1b254 <__assert_fail@plt+0x9edc>
   1b248:	movw	r0, #0
   1b24c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b250:	b	1b26c <__assert_fail@plt+0x9ef4>
   1b254:	ldr	r0, [pc, #2868]	; 1bd90 <__assert_fail@plt+0xaa18>
   1b258:	ldr	r1, [fp, #-16]
   1b25c:	movw	r2, #0
   1b260:	sub	r1, r2, r1
   1b264:	udiv	r0, r0, r1
   1b268:	str	r0, [fp, #-40]	; 0xffffffd8
   1b26c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b270:	ldr	r1, [fp, #-12]
   1b274:	mvn	r2, #0
   1b278:	sub	r1, r2, r1
   1b27c:	cmp	r0, r1
   1b280:	bls	1b384 <__assert_fail@plt+0xa00c>
   1b284:	b	1b398 <__assert_fail@plt+0xa020>
   1b288:	ldr	r0, [fp, #-16]
   1b28c:	cmn	r0, #1
   1b290:	bne	1b2d8 <__assert_fail@plt+0x9f60>
   1b294:	b	1b2b0 <__assert_fail@plt+0x9f38>
   1b298:	ldr	r0, [fp, #-12]
   1b29c:	add	r0, r0, #-2147483648	; 0x80000000
   1b2a0:	movw	r1, #0
   1b2a4:	cmp	r1, r0
   1b2a8:	bcc	1b384 <__assert_fail@plt+0xa00c>
   1b2ac:	b	1b398 <__assert_fail@plt+0xa020>
   1b2b0:	ldr	r0, [fp, #-12]
   1b2b4:	movw	r1, #0
   1b2b8:	cmp	r1, r0
   1b2bc:	bcs	1b398 <__assert_fail@plt+0xa020>
   1b2c0:	ldr	r0, [pc, #2760]	; 1bd90 <__assert_fail@plt+0xaa18>
   1b2c4:	ldr	r1, [fp, #-12]
   1b2c8:	sub	r1, r1, #1
   1b2cc:	cmp	r0, r1
   1b2d0:	bcc	1b384 <__assert_fail@plt+0xa00c>
   1b2d4:	b	1b398 <__assert_fail@plt+0xa020>
   1b2d8:	ldr	r0, [pc, #2740]	; 1bd94 <__assert_fail@plt+0xaa1c>
   1b2dc:	ldr	r1, [fp, #-16]
   1b2e0:	udiv	r0, r0, r1
   1b2e4:	ldr	r1, [fp, #-12]
   1b2e8:	cmp	r0, r1
   1b2ec:	bcc	1b384 <__assert_fail@plt+0xa00c>
   1b2f0:	b	1b398 <__assert_fail@plt+0xa020>
   1b2f4:	ldr	r0, [fp, #-16]
   1b2f8:	cmp	r0, #0
   1b2fc:	bne	1b304 <__assert_fail@plt+0x9f8c>
   1b300:	b	1b398 <__assert_fail@plt+0xa020>
   1b304:	ldr	r0, [fp, #-12]
   1b308:	cmp	r0, #0
   1b30c:	bcs	1b36c <__assert_fail@plt+0x9ff4>
   1b310:	ldr	r0, [fp, #-12]
   1b314:	cmn	r0, #1
   1b318:	bne	1b350 <__assert_fail@plt+0x9fd8>
   1b31c:	b	1b338 <__assert_fail@plt+0x9fc0>
   1b320:	ldr	r0, [fp, #-16]
   1b324:	add	r0, r0, #-2147483648	; 0x80000000
   1b328:	movw	r1, #0
   1b32c:	cmp	r1, r0
   1b330:	bcc	1b384 <__assert_fail@plt+0xa00c>
   1b334:	b	1b398 <__assert_fail@plt+0xa020>
   1b338:	ldr	r0, [pc, #2640]	; 1bd90 <__assert_fail@plt+0xaa18>
   1b33c:	ldr	r1, [fp, #-16]
   1b340:	sub	r1, r1, #1
   1b344:	cmp	r0, r1
   1b348:	bcc	1b384 <__assert_fail@plt+0xa00c>
   1b34c:	b	1b398 <__assert_fail@plt+0xa020>
   1b350:	ldr	r0, [pc, #2620]	; 1bd94 <__assert_fail@plt+0xaa1c>
   1b354:	ldr	r1, [fp, #-12]
   1b358:	udiv	r0, r0, r1
   1b35c:	ldr	r1, [fp, #-16]
   1b360:	cmp	r0, r1
   1b364:	bcc	1b384 <__assert_fail@plt+0xa00c>
   1b368:	b	1b398 <__assert_fail@plt+0xa020>
   1b36c:	ldr	r0, [pc, #2588]	; 1bd90 <__assert_fail@plt+0xaa18>
   1b370:	ldr	r1, [fp, #-16]
   1b374:	udiv	r0, r0, r1
   1b378:	ldr	r1, [fp, #-12]
   1b37c:	cmp	r0, r1
   1b380:	bcs	1b398 <__assert_fail@plt+0xa020>
   1b384:	ldr	r0, [fp, #-12]
   1b388:	ldr	r1, [fp, #-16]
   1b38c:	mul	r0, r0, r1
   1b390:	str	r0, [fp, #-20]	; 0xffffffec
   1b394:	b	1bd5c <__assert_fail@plt+0xa9e4>
   1b398:	ldr	r0, [fp, #-12]
   1b39c:	ldr	r1, [fp, #-16]
   1b3a0:	mul	r0, r0, r1
   1b3a4:	str	r0, [fp, #-20]	; 0xffffffec
   1b3a8:	b	1bd74 <__assert_fail@plt+0xa9fc>
   1b3ac:	ldr	r0, [fp, #-16]
   1b3b0:	cmp	r0, #0
   1b3b4:	bcs	1b4c0 <__assert_fail@plt+0xa148>
   1b3b8:	ldr	r0, [fp, #-12]
   1b3bc:	cmp	r0, #0
   1b3c0:	bcs	1b448 <__assert_fail@plt+0xa0d0>
   1b3c4:	b	1b3e4 <__assert_fail@plt+0xa06c>
   1b3c8:	ldr	r0, [fp, #-12]
   1b3cc:	ldr	r1, [fp, #-16]
   1b3d0:	mvn	r2, #0
   1b3d4:	udiv	r1, r2, r1
   1b3d8:	cmp	r0, r1
   1b3dc:	bcc	1b55c <__assert_fail@plt+0xa1e4>
   1b3e0:	b	1b570 <__assert_fail@plt+0xa1f8>
   1b3e4:	b	1b3f8 <__assert_fail@plt+0xa080>
   1b3e8:	ldr	r0, [fp, #-16]
   1b3ec:	cmp	r0, #1
   1b3f0:	bcc	1b408 <__assert_fail@plt+0xa090>
   1b3f4:	b	1b414 <__assert_fail@plt+0xa09c>
   1b3f8:	ldr	r0, [fp, #-16]
   1b3fc:	movw	r1, #0
   1b400:	cmp	r1, r0
   1b404:	bcs	1b414 <__assert_fail@plt+0xa09c>
   1b408:	movw	r0, #1
   1b40c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b410:	b	1b42c <__assert_fail@plt+0xa0b4>
   1b414:	ldr	r0, [fp, #-16]
   1b418:	movw	r1, #0
   1b41c:	sub	r0, r1, r0
   1b420:	mvn	r1, #0
   1b424:	udiv	r0, r1, r0
   1b428:	str	r0, [fp, #-44]	; 0xffffffd4
   1b42c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b430:	ldr	r1, [fp, #-12]
   1b434:	mvn	r2, #0
   1b438:	sub	r1, r2, r1
   1b43c:	cmp	r0, r1
   1b440:	bls	1b55c <__assert_fail@plt+0xa1e4>
   1b444:	b	1b570 <__assert_fail@plt+0xa1f8>
   1b448:	b	1b450 <__assert_fail@plt+0xa0d8>
   1b44c:	b	1b454 <__assert_fail@plt+0xa0dc>
   1b450:	b	1b4a4 <__assert_fail@plt+0xa12c>
   1b454:	ldr	r0, [fp, #-16]
   1b458:	cmn	r0, #1
   1b45c:	bne	1b4a4 <__assert_fail@plt+0xa12c>
   1b460:	b	1b47c <__assert_fail@plt+0xa104>
   1b464:	ldr	r0, [fp, #-12]
   1b468:	add	r0, r0, #0
   1b46c:	movw	r1, #0
   1b470:	cmp	r1, r0
   1b474:	bcc	1b55c <__assert_fail@plt+0xa1e4>
   1b478:	b	1b570 <__assert_fail@plt+0xa1f8>
   1b47c:	ldr	r0, [fp, #-12]
   1b480:	movw	r1, #0
   1b484:	cmp	r1, r0
   1b488:	bcs	1b570 <__assert_fail@plt+0xa1f8>
   1b48c:	ldr	r0, [fp, #-12]
   1b490:	sub	r0, r0, #1
   1b494:	mvn	r1, #0
   1b498:	cmp	r1, r0
   1b49c:	bcc	1b55c <__assert_fail@plt+0xa1e4>
   1b4a0:	b	1b570 <__assert_fail@plt+0xa1f8>
   1b4a4:	ldr	r0, [fp, #-16]
   1b4a8:	movw	r1, #0
   1b4ac:	udiv	r0, r1, r0
   1b4b0:	ldr	r1, [fp, #-12]
   1b4b4:	cmp	r0, r1
   1b4b8:	bcc	1b55c <__assert_fail@plt+0xa1e4>
   1b4bc:	b	1b570 <__assert_fail@plt+0xa1f8>
   1b4c0:	ldr	r0, [fp, #-16]
   1b4c4:	cmp	r0, #0
   1b4c8:	bne	1b4d0 <__assert_fail@plt+0xa158>
   1b4cc:	b	1b570 <__assert_fail@plt+0xa1f8>
   1b4d0:	ldr	r0, [fp, #-12]
   1b4d4:	cmp	r0, #0
   1b4d8:	bcs	1b544 <__assert_fail@plt+0xa1cc>
   1b4dc:	b	1b4e4 <__assert_fail@plt+0xa16c>
   1b4e0:	b	1b4e8 <__assert_fail@plt+0xa170>
   1b4e4:	b	1b528 <__assert_fail@plt+0xa1b0>
   1b4e8:	ldr	r0, [fp, #-12]
   1b4ec:	cmn	r0, #1
   1b4f0:	bne	1b528 <__assert_fail@plt+0xa1b0>
   1b4f4:	b	1b510 <__assert_fail@plt+0xa198>
   1b4f8:	ldr	r0, [fp, #-16]
   1b4fc:	add	r0, r0, #0
   1b500:	movw	r1, #0
   1b504:	cmp	r1, r0
   1b508:	bcc	1b55c <__assert_fail@plt+0xa1e4>
   1b50c:	b	1b570 <__assert_fail@plt+0xa1f8>
   1b510:	ldr	r0, [fp, #-16]
   1b514:	sub	r0, r0, #1
   1b518:	mvn	r1, #0
   1b51c:	cmp	r1, r0
   1b520:	bcc	1b55c <__assert_fail@plt+0xa1e4>
   1b524:	b	1b570 <__assert_fail@plt+0xa1f8>
   1b528:	ldr	r0, [fp, #-12]
   1b52c:	movw	r1, #0
   1b530:	udiv	r0, r1, r0
   1b534:	ldr	r1, [fp, #-16]
   1b538:	cmp	r0, r1
   1b53c:	bcc	1b55c <__assert_fail@plt+0xa1e4>
   1b540:	b	1b570 <__assert_fail@plt+0xa1f8>
   1b544:	ldr	r0, [fp, #-16]
   1b548:	mvn	r1, #0
   1b54c:	udiv	r0, r1, r0
   1b550:	ldr	r1, [fp, #-12]
   1b554:	cmp	r0, r1
   1b558:	bcs	1b570 <__assert_fail@plt+0xa1f8>
   1b55c:	ldr	r0, [fp, #-12]
   1b560:	ldr	r1, [fp, #-16]
   1b564:	mul	r0, r0, r1
   1b568:	str	r0, [fp, #-20]	; 0xffffffec
   1b56c:	b	1bd5c <__assert_fail@plt+0xa9e4>
   1b570:	ldr	r0, [fp, #-12]
   1b574:	ldr	r1, [fp, #-16]
   1b578:	mul	r0, r0, r1
   1b57c:	str	r0, [fp, #-20]	; 0xffffffec
   1b580:	b	1bd74 <__assert_fail@plt+0xa9fc>
   1b584:	b	1b588 <__assert_fail@plt+0xa210>
   1b588:	b	1b74c <__assert_fail@plt+0xa3d4>
   1b58c:	ldr	r0, [fp, #-16]
   1b590:	cmp	r0, #0
   1b594:	bcs	1b694 <__assert_fail@plt+0xa31c>
   1b598:	ldr	r0, [fp, #-12]
   1b59c:	cmp	r0, #0
   1b5a0:	bcs	1b628 <__assert_fail@plt+0xa2b0>
   1b5a4:	b	1b5c4 <__assert_fail@plt+0xa24c>
   1b5a8:	ldr	r0, [pc, #2016]	; 1bd90 <__assert_fail@plt+0xaa18>
   1b5ac:	ldr	r1, [fp, #-12]
   1b5b0:	ldr	r2, [fp, #-16]
   1b5b4:	udiv	r0, r0, r2
   1b5b8:	cmp	r1, r0
   1b5bc:	bcc	1b724 <__assert_fail@plt+0xa3ac>
   1b5c0:	b	1b738 <__assert_fail@plt+0xa3c0>
   1b5c4:	b	1b5d8 <__assert_fail@plt+0xa260>
   1b5c8:	ldr	r0, [fp, #-16]
   1b5cc:	cmp	r0, #1
   1b5d0:	bcc	1b5e8 <__assert_fail@plt+0xa270>
   1b5d4:	b	1b5f4 <__assert_fail@plt+0xa27c>
   1b5d8:	ldr	r0, [fp, #-16]
   1b5dc:	movw	r1, #0
   1b5e0:	cmp	r1, r0
   1b5e4:	bcs	1b5f4 <__assert_fail@plt+0xa27c>
   1b5e8:	movw	r0, #0
   1b5ec:	str	r0, [sp, #48]	; 0x30
   1b5f0:	b	1b60c <__assert_fail@plt+0xa294>
   1b5f4:	ldr	r0, [pc, #1940]	; 1bd90 <__assert_fail@plt+0xaa18>
   1b5f8:	ldr	r1, [fp, #-16]
   1b5fc:	movw	r2, #0
   1b600:	sub	r1, r2, r1
   1b604:	udiv	r0, r0, r1
   1b608:	str	r0, [sp, #48]	; 0x30
   1b60c:	ldr	r0, [sp, #48]	; 0x30
   1b610:	ldr	r1, [fp, #-12]
   1b614:	mvn	r2, #0
   1b618:	sub	r1, r2, r1
   1b61c:	cmp	r0, r1
   1b620:	bls	1b724 <__assert_fail@plt+0xa3ac>
   1b624:	b	1b738 <__assert_fail@plt+0xa3c0>
   1b628:	ldr	r0, [fp, #-16]
   1b62c:	cmn	r0, #1
   1b630:	bne	1b678 <__assert_fail@plt+0xa300>
   1b634:	b	1b650 <__assert_fail@plt+0xa2d8>
   1b638:	ldr	r0, [fp, #-12]
   1b63c:	add	r0, r0, #-2147483648	; 0x80000000
   1b640:	movw	r1, #0
   1b644:	cmp	r1, r0
   1b648:	bcc	1b724 <__assert_fail@plt+0xa3ac>
   1b64c:	b	1b738 <__assert_fail@plt+0xa3c0>
   1b650:	ldr	r0, [fp, #-12]
   1b654:	movw	r1, #0
   1b658:	cmp	r1, r0
   1b65c:	bcs	1b738 <__assert_fail@plt+0xa3c0>
   1b660:	ldr	r0, [pc, #1832]	; 1bd90 <__assert_fail@plt+0xaa18>
   1b664:	ldr	r1, [fp, #-12]
   1b668:	sub	r1, r1, #1
   1b66c:	cmp	r0, r1
   1b670:	bcc	1b724 <__assert_fail@plt+0xa3ac>
   1b674:	b	1b738 <__assert_fail@plt+0xa3c0>
   1b678:	ldr	r0, [pc, #1812]	; 1bd94 <__assert_fail@plt+0xaa1c>
   1b67c:	ldr	r1, [fp, #-16]
   1b680:	udiv	r0, r0, r1
   1b684:	ldr	r1, [fp, #-12]
   1b688:	cmp	r0, r1
   1b68c:	bcc	1b724 <__assert_fail@plt+0xa3ac>
   1b690:	b	1b738 <__assert_fail@plt+0xa3c0>
   1b694:	ldr	r0, [fp, #-16]
   1b698:	cmp	r0, #0
   1b69c:	bne	1b6a4 <__assert_fail@plt+0xa32c>
   1b6a0:	b	1b738 <__assert_fail@plt+0xa3c0>
   1b6a4:	ldr	r0, [fp, #-12]
   1b6a8:	cmp	r0, #0
   1b6ac:	bcs	1b70c <__assert_fail@plt+0xa394>
   1b6b0:	ldr	r0, [fp, #-12]
   1b6b4:	cmn	r0, #1
   1b6b8:	bne	1b6f0 <__assert_fail@plt+0xa378>
   1b6bc:	b	1b6d8 <__assert_fail@plt+0xa360>
   1b6c0:	ldr	r0, [fp, #-16]
   1b6c4:	add	r0, r0, #-2147483648	; 0x80000000
   1b6c8:	movw	r1, #0
   1b6cc:	cmp	r1, r0
   1b6d0:	bcc	1b724 <__assert_fail@plt+0xa3ac>
   1b6d4:	b	1b738 <__assert_fail@plt+0xa3c0>
   1b6d8:	ldr	r0, [pc, #1712]	; 1bd90 <__assert_fail@plt+0xaa18>
   1b6dc:	ldr	r1, [fp, #-16]
   1b6e0:	sub	r1, r1, #1
   1b6e4:	cmp	r0, r1
   1b6e8:	bcc	1b724 <__assert_fail@plt+0xa3ac>
   1b6ec:	b	1b738 <__assert_fail@plt+0xa3c0>
   1b6f0:	ldr	r0, [pc, #1692]	; 1bd94 <__assert_fail@plt+0xaa1c>
   1b6f4:	ldr	r1, [fp, #-12]
   1b6f8:	udiv	r0, r0, r1
   1b6fc:	ldr	r1, [fp, #-16]
   1b700:	cmp	r0, r1
   1b704:	bcc	1b724 <__assert_fail@plt+0xa3ac>
   1b708:	b	1b738 <__assert_fail@plt+0xa3c0>
   1b70c:	ldr	r0, [pc, #1660]	; 1bd90 <__assert_fail@plt+0xaa18>
   1b710:	ldr	r1, [fp, #-16]
   1b714:	udiv	r0, r0, r1
   1b718:	ldr	r1, [fp, #-12]
   1b71c:	cmp	r0, r1
   1b720:	bcs	1b738 <__assert_fail@plt+0xa3c0>
   1b724:	ldr	r0, [fp, #-12]
   1b728:	ldr	r1, [fp, #-16]
   1b72c:	mul	r0, r0, r1
   1b730:	str	r0, [fp, #-20]	; 0xffffffec
   1b734:	b	1bd5c <__assert_fail@plt+0xa9e4>
   1b738:	ldr	r0, [fp, #-12]
   1b73c:	ldr	r1, [fp, #-16]
   1b740:	mul	r0, r0, r1
   1b744:	str	r0, [fp, #-20]	; 0xffffffec
   1b748:	b	1bd74 <__assert_fail@plt+0xa9fc>
   1b74c:	ldr	r0, [fp, #-16]
   1b750:	cmp	r0, #0
   1b754:	bcs	1b860 <__assert_fail@plt+0xa4e8>
   1b758:	ldr	r0, [fp, #-12]
   1b75c:	cmp	r0, #0
   1b760:	bcs	1b7e8 <__assert_fail@plt+0xa470>
   1b764:	b	1b784 <__assert_fail@plt+0xa40c>
   1b768:	ldr	r0, [fp, #-12]
   1b76c:	ldr	r1, [fp, #-16]
   1b770:	mvn	r2, #0
   1b774:	udiv	r1, r2, r1
   1b778:	cmp	r0, r1
   1b77c:	bcc	1b8fc <__assert_fail@plt+0xa584>
   1b780:	b	1b910 <__assert_fail@plt+0xa598>
   1b784:	b	1b798 <__assert_fail@plt+0xa420>
   1b788:	ldr	r0, [fp, #-16]
   1b78c:	cmp	r0, #1
   1b790:	bcc	1b7a8 <__assert_fail@plt+0xa430>
   1b794:	b	1b7b4 <__assert_fail@plt+0xa43c>
   1b798:	ldr	r0, [fp, #-16]
   1b79c:	movw	r1, #0
   1b7a0:	cmp	r1, r0
   1b7a4:	bcs	1b7b4 <__assert_fail@plt+0xa43c>
   1b7a8:	movw	r0, #1
   1b7ac:	str	r0, [sp, #44]	; 0x2c
   1b7b0:	b	1b7cc <__assert_fail@plt+0xa454>
   1b7b4:	ldr	r0, [fp, #-16]
   1b7b8:	movw	r1, #0
   1b7bc:	sub	r0, r1, r0
   1b7c0:	mvn	r1, #0
   1b7c4:	udiv	r0, r1, r0
   1b7c8:	str	r0, [sp, #44]	; 0x2c
   1b7cc:	ldr	r0, [sp, #44]	; 0x2c
   1b7d0:	ldr	r1, [fp, #-12]
   1b7d4:	mvn	r2, #0
   1b7d8:	sub	r1, r2, r1
   1b7dc:	cmp	r0, r1
   1b7e0:	bls	1b8fc <__assert_fail@plt+0xa584>
   1b7e4:	b	1b910 <__assert_fail@plt+0xa598>
   1b7e8:	b	1b7f0 <__assert_fail@plt+0xa478>
   1b7ec:	b	1b7f4 <__assert_fail@plt+0xa47c>
   1b7f0:	b	1b844 <__assert_fail@plt+0xa4cc>
   1b7f4:	ldr	r0, [fp, #-16]
   1b7f8:	cmn	r0, #1
   1b7fc:	bne	1b844 <__assert_fail@plt+0xa4cc>
   1b800:	b	1b81c <__assert_fail@plt+0xa4a4>
   1b804:	ldr	r0, [fp, #-12]
   1b808:	add	r0, r0, #0
   1b80c:	movw	r1, #0
   1b810:	cmp	r1, r0
   1b814:	bcc	1b8fc <__assert_fail@plt+0xa584>
   1b818:	b	1b910 <__assert_fail@plt+0xa598>
   1b81c:	ldr	r0, [fp, #-12]
   1b820:	movw	r1, #0
   1b824:	cmp	r1, r0
   1b828:	bcs	1b910 <__assert_fail@plt+0xa598>
   1b82c:	ldr	r0, [fp, #-12]
   1b830:	sub	r0, r0, #1
   1b834:	mvn	r1, #0
   1b838:	cmp	r1, r0
   1b83c:	bcc	1b8fc <__assert_fail@plt+0xa584>
   1b840:	b	1b910 <__assert_fail@plt+0xa598>
   1b844:	ldr	r0, [fp, #-16]
   1b848:	movw	r1, #0
   1b84c:	udiv	r0, r1, r0
   1b850:	ldr	r1, [fp, #-12]
   1b854:	cmp	r0, r1
   1b858:	bcc	1b8fc <__assert_fail@plt+0xa584>
   1b85c:	b	1b910 <__assert_fail@plt+0xa598>
   1b860:	ldr	r0, [fp, #-16]
   1b864:	cmp	r0, #0
   1b868:	bne	1b870 <__assert_fail@plt+0xa4f8>
   1b86c:	b	1b910 <__assert_fail@plt+0xa598>
   1b870:	ldr	r0, [fp, #-12]
   1b874:	cmp	r0, #0
   1b878:	bcs	1b8e4 <__assert_fail@plt+0xa56c>
   1b87c:	b	1b884 <__assert_fail@plt+0xa50c>
   1b880:	b	1b888 <__assert_fail@plt+0xa510>
   1b884:	b	1b8c8 <__assert_fail@plt+0xa550>
   1b888:	ldr	r0, [fp, #-12]
   1b88c:	cmn	r0, #1
   1b890:	bne	1b8c8 <__assert_fail@plt+0xa550>
   1b894:	b	1b8b0 <__assert_fail@plt+0xa538>
   1b898:	ldr	r0, [fp, #-16]
   1b89c:	add	r0, r0, #0
   1b8a0:	movw	r1, #0
   1b8a4:	cmp	r1, r0
   1b8a8:	bcc	1b8fc <__assert_fail@plt+0xa584>
   1b8ac:	b	1b910 <__assert_fail@plt+0xa598>
   1b8b0:	ldr	r0, [fp, #-16]
   1b8b4:	sub	r0, r0, #1
   1b8b8:	mvn	r1, #0
   1b8bc:	cmp	r1, r0
   1b8c0:	bcc	1b8fc <__assert_fail@plt+0xa584>
   1b8c4:	b	1b910 <__assert_fail@plt+0xa598>
   1b8c8:	ldr	r0, [fp, #-12]
   1b8cc:	movw	r1, #0
   1b8d0:	udiv	r0, r1, r0
   1b8d4:	ldr	r1, [fp, #-16]
   1b8d8:	cmp	r0, r1
   1b8dc:	bcc	1b8fc <__assert_fail@plt+0xa584>
   1b8e0:	b	1b910 <__assert_fail@plt+0xa598>
   1b8e4:	ldr	r0, [fp, #-16]
   1b8e8:	mvn	r1, #0
   1b8ec:	udiv	r0, r1, r0
   1b8f0:	ldr	r1, [fp, #-12]
   1b8f4:	cmp	r0, r1
   1b8f8:	bcs	1b910 <__assert_fail@plt+0xa598>
   1b8fc:	ldr	r0, [fp, #-12]
   1b900:	ldr	r1, [fp, #-16]
   1b904:	mul	r0, r0, r1
   1b908:	str	r0, [fp, #-20]	; 0xffffffec
   1b90c:	b	1bd5c <__assert_fail@plt+0xa9e4>
   1b910:	ldr	r0, [fp, #-12]
   1b914:	ldr	r1, [fp, #-16]
   1b918:	mul	r0, r0, r1
   1b91c:	str	r0, [fp, #-20]	; 0xffffffec
   1b920:	b	1bd74 <__assert_fail@plt+0xa9fc>
   1b924:	b	1bb40 <__assert_fail@plt+0xa7c8>
   1b928:	ldr	r0, [fp, #-16]
   1b92c:	cmp	r0, #0
   1b930:	bcs	1ba70 <__assert_fail@plt+0xa6f8>
   1b934:	ldr	r0, [fp, #-12]
   1b938:	cmp	r0, #0
   1b93c:	bcs	1b9fc <__assert_fail@plt+0xa684>
   1b940:	b	1b944 <__assert_fail@plt+0xa5cc>
   1b944:	ldr	r0, [fp, #-12]
   1b948:	ldr	r2, [fp, #-16]
   1b94c:	mvn	r1, #0
   1b950:	mvn	r3, #-2147483648	; 0x80000000
   1b954:	mov	ip, #0
   1b958:	str	r0, [sp, #40]	; 0x28
   1b95c:	mov	r0, r1
   1b960:	mov	r1, r3
   1b964:	mov	r3, ip
   1b968:	bl	1be70 <__assert_fail@plt+0xaaf8>
   1b96c:	ldr	r2, [sp, #40]	; 0x28
   1b970:	subs	r0, r2, r0
   1b974:	rscs	r1, r1, #0
   1b978:	blt	1bb18 <__assert_fail@plt+0xa7a0>
   1b97c:	b	1bb2c <__assert_fail@plt+0xa7b4>
   1b980:	b	1b994 <__assert_fail@plt+0xa61c>
   1b984:	ldr	r0, [fp, #-16]
   1b988:	cmp	r0, #1
   1b98c:	bcc	1b9a4 <__assert_fail@plt+0xa62c>
   1b990:	b	1b9b8 <__assert_fail@plt+0xa640>
   1b994:	ldr	r0, [fp, #-16]
   1b998:	movw	r1, #0
   1b99c:	cmp	r1, r0
   1b9a0:	bcs	1b9b8 <__assert_fail@plt+0xa640>
   1b9a4:	mov	r0, #0
   1b9a8:	mvn	r1, #0
   1b9ac:	str	r1, [sp, #36]	; 0x24
   1b9b0:	str	r0, [sp, #32]
   1b9b4:	b	1b9dc <__assert_fail@plt+0xa664>
   1b9b8:	ldr	r0, [fp, #-16]
   1b9bc:	rsb	r2, r0, #0
   1b9c0:	mvn	r0, #0
   1b9c4:	mvn	r1, #-2147483648	; 0x80000000
   1b9c8:	mov	r3, #0
   1b9cc:	bl	1be70 <__assert_fail@plt+0xaaf8>
   1b9d0:	str	r0, [sp, #36]	; 0x24
   1b9d4:	str	r1, [sp, #32]
   1b9d8:	b	1b9dc <__assert_fail@plt+0xa664>
   1b9dc:	ldr	r0, [sp, #32]
   1b9e0:	ldr	r1, [sp, #36]	; 0x24
   1b9e4:	ldr	r2, [fp, #-12]
   1b9e8:	mvn	r2, r2
   1b9ec:	subs	r1, r2, r1
   1b9f0:	rscs	r0, r0, #0
   1b9f4:	bge	1bb18 <__assert_fail@plt+0xa7a0>
   1b9f8:	b	1bb2c <__assert_fail@plt+0xa7b4>
   1b9fc:	ldr	r0, [fp, #-16]
   1ba00:	cmn	r0, #1
   1ba04:	bne	1ba44 <__assert_fail@plt+0xa6cc>
   1ba08:	b	1ba24 <__assert_fail@plt+0xa6ac>
   1ba0c:	ldr	r0, [fp, #-12]
   1ba10:	rsbs	r0, r0, #0
   1ba14:	mov	r1, #0
   1ba18:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1ba1c:	blt	1bb18 <__assert_fail@plt+0xa7a0>
   1ba20:	b	1bb2c <__assert_fail@plt+0xa7b4>
   1ba24:	ldr	r0, [fp, #-12]
   1ba28:	movw	r1, #0
   1ba2c:	cmp	r1, r0
   1ba30:	bcs	1bb2c <__assert_fail@plt+0xa7b4>
   1ba34:	mov	r0, #0
   1ba38:	cmp	r0, #0
   1ba3c:	bne	1bb18 <__assert_fail@plt+0xa7a0>
   1ba40:	b	1bb2c <__assert_fail@plt+0xa7b4>
   1ba44:	ldr	r2, [fp, #-16]
   1ba48:	mov	r1, #-2147483648	; 0x80000000
   1ba4c:	mov	r0, #0
   1ba50:	str	r0, [sp, #28]
   1ba54:	ldr	r3, [sp, #28]
   1ba58:	bl	1bd9c <__assert_fail@plt+0xaa24>
   1ba5c:	ldr	r2, [fp, #-12]
   1ba60:	subs	r0, r0, r2
   1ba64:	sbcs	r1, r1, #0
   1ba68:	blt	1bb18 <__assert_fail@plt+0xa7a0>
   1ba6c:	b	1bb2c <__assert_fail@plt+0xa7b4>
   1ba70:	ldr	r0, [fp, #-16]
   1ba74:	cmp	r0, #0
   1ba78:	bne	1ba80 <__assert_fail@plt+0xa708>
   1ba7c:	b	1bb2c <__assert_fail@plt+0xa7b4>
   1ba80:	ldr	r0, [fp, #-12]
   1ba84:	cmp	r0, #0
   1ba88:	bcs	1baf0 <__assert_fail@plt+0xa778>
   1ba8c:	ldr	r0, [fp, #-12]
   1ba90:	cmn	r0, #1
   1ba94:	bne	1bac4 <__assert_fail@plt+0xa74c>
   1ba98:	b	1bab4 <__assert_fail@plt+0xa73c>
   1ba9c:	ldr	r0, [fp, #-16]
   1baa0:	rsbs	r0, r0, #0
   1baa4:	mov	r1, #0
   1baa8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1baac:	blt	1bb18 <__assert_fail@plt+0xa7a0>
   1bab0:	b	1bb2c <__assert_fail@plt+0xa7b4>
   1bab4:	mov	r0, #0
   1bab8:	cmp	r0, #0
   1babc:	bne	1bb18 <__assert_fail@plt+0xa7a0>
   1bac0:	b	1bb2c <__assert_fail@plt+0xa7b4>
   1bac4:	ldr	r2, [fp, #-12]
   1bac8:	mov	r1, #-2147483648	; 0x80000000
   1bacc:	mov	r0, #0
   1bad0:	str	r0, [sp, #24]
   1bad4:	ldr	r3, [sp, #24]
   1bad8:	bl	1bd9c <__assert_fail@plt+0xaa24>
   1badc:	ldr	r2, [fp, #-16]
   1bae0:	subs	r0, r0, r2
   1bae4:	sbcs	r1, r1, #0
   1bae8:	blt	1bb18 <__assert_fail@plt+0xa7a0>
   1baec:	b	1bb2c <__assert_fail@plt+0xa7b4>
   1baf0:	ldr	r2, [fp, #-16]
   1baf4:	mvn	r0, #0
   1baf8:	mvn	r1, #-2147483648	; 0x80000000
   1bafc:	mov	r3, #0
   1bb00:	bl	1be70 <__assert_fail@plt+0xaaf8>
   1bb04:	ldr	r2, [fp, #-12]
   1bb08:	subs	r0, r0, r2
   1bb0c:	sbcs	r1, r1, #0
   1bb10:	bge	1bb2c <__assert_fail@plt+0xa7b4>
   1bb14:	b	1bb18 <__assert_fail@plt+0xa7a0>
   1bb18:	ldr	r0, [fp, #-12]
   1bb1c:	ldr	r1, [fp, #-16]
   1bb20:	mul	r0, r0, r1
   1bb24:	str	r0, [fp, #-20]	; 0xffffffec
   1bb28:	b	1bd5c <__assert_fail@plt+0xa9e4>
   1bb2c:	ldr	r0, [fp, #-12]
   1bb30:	ldr	r1, [fp, #-16]
   1bb34:	mul	r0, r0, r1
   1bb38:	str	r0, [fp, #-20]	; 0xffffffec
   1bb3c:	b	1bd74 <__assert_fail@plt+0xa9fc>
   1bb40:	ldr	r0, [fp, #-16]
   1bb44:	cmp	r0, #0
   1bb48:	bcs	1bc84 <__assert_fail@plt+0xa90c>
   1bb4c:	ldr	r0, [fp, #-12]
   1bb50:	cmp	r0, #0
   1bb54:	bcs	1bc0c <__assert_fail@plt+0xa894>
   1bb58:	b	1bb8c <__assert_fail@plt+0xa814>
   1bb5c:	ldr	r0, [fp, #-12]
   1bb60:	ldr	r2, [fp, #-16]
   1bb64:	mvn	r1, #0
   1bb68:	mov	r3, #0
   1bb6c:	str	r0, [sp, #20]
   1bb70:	mov	r0, r1
   1bb74:	bl	1be70 <__assert_fail@plt+0xaaf8>
   1bb78:	ldr	r2, [sp, #20]
   1bb7c:	subs	r0, r2, r0
   1bb80:	rscs	r1, r1, #0
   1bb84:	bcc	1bd34 <__assert_fail@plt+0xa9bc>
   1bb88:	b	1bd48 <__assert_fail@plt+0xa9d0>
   1bb8c:	b	1bba0 <__assert_fail@plt+0xa828>
   1bb90:	ldr	r0, [fp, #-16]
   1bb94:	cmp	r0, #1
   1bb98:	bcc	1bbb0 <__assert_fail@plt+0xa838>
   1bb9c:	b	1bbc4 <__assert_fail@plt+0xa84c>
   1bba0:	ldr	r0, [fp, #-16]
   1bba4:	movw	r1, #0
   1bba8:	cmp	r1, r0
   1bbac:	bcs	1bbc4 <__assert_fail@plt+0xa84c>
   1bbb0:	mov	r0, #1
   1bbb4:	mvn	r1, #0
   1bbb8:	str	r1, [sp, #16]
   1bbbc:	str	r0, [sp, #12]
   1bbc0:	b	1bbec <__assert_fail@plt+0xa874>
   1bbc4:	ldr	r0, [fp, #-16]
   1bbc8:	rsb	r2, r0, #0
   1bbcc:	mvn	r0, #0
   1bbd0:	mov	r3, #0
   1bbd4:	str	r0, [sp, #8]
   1bbd8:	ldr	r1, [sp, #8]
   1bbdc:	bl	1be70 <__assert_fail@plt+0xaaf8>
   1bbe0:	str	r0, [sp, #16]
   1bbe4:	str	r1, [sp, #12]
   1bbe8:	b	1bbec <__assert_fail@plt+0xa874>
   1bbec:	ldr	r0, [sp, #12]
   1bbf0:	ldr	r1, [sp, #16]
   1bbf4:	ldr	r2, [fp, #-12]
   1bbf8:	mvn	r2, r2
   1bbfc:	subs	r1, r2, r1
   1bc00:	rscs	r0, r0, #0
   1bc04:	bcs	1bd34 <__assert_fail@plt+0xa9bc>
   1bc08:	b	1bd48 <__assert_fail@plt+0xa9d0>
   1bc0c:	b	1bc14 <__assert_fail@plt+0xa89c>
   1bc10:	b	1bc18 <__assert_fail@plt+0xa8a0>
   1bc14:	b	1bc68 <__assert_fail@plt+0xa8f0>
   1bc18:	ldr	r0, [fp, #-16]
   1bc1c:	cmn	r0, #1
   1bc20:	bne	1bc68 <__assert_fail@plt+0xa8f0>
   1bc24:	b	1bc40 <__assert_fail@plt+0xa8c8>
   1bc28:	ldr	r0, [fp, #-12]
   1bc2c:	add	r0, r0, #0
   1bc30:	movw	r1, #0
   1bc34:	cmp	r1, r0
   1bc38:	bcc	1bd34 <__assert_fail@plt+0xa9bc>
   1bc3c:	b	1bd48 <__assert_fail@plt+0xa9d0>
   1bc40:	ldr	r0, [fp, #-12]
   1bc44:	movw	r1, #0
   1bc48:	cmp	r1, r0
   1bc4c:	bcs	1bd48 <__assert_fail@plt+0xa9d0>
   1bc50:	ldr	r0, [fp, #-12]
   1bc54:	sub	r0, r0, #1
   1bc58:	mvn	r1, #0
   1bc5c:	cmp	r1, r0
   1bc60:	bcc	1bd34 <__assert_fail@plt+0xa9bc>
   1bc64:	b	1bd48 <__assert_fail@plt+0xa9d0>
   1bc68:	ldr	r0, [fp, #-16]
   1bc6c:	movw	r1, #0
   1bc70:	udiv	r0, r1, r0
   1bc74:	ldr	r1, [fp, #-12]
   1bc78:	cmp	r0, r1
   1bc7c:	bcc	1bd34 <__assert_fail@plt+0xa9bc>
   1bc80:	b	1bd48 <__assert_fail@plt+0xa9d0>
   1bc84:	ldr	r0, [fp, #-16]
   1bc88:	cmp	r0, #0
   1bc8c:	bne	1bc94 <__assert_fail@plt+0xa91c>
   1bc90:	b	1bd48 <__assert_fail@plt+0xa9d0>
   1bc94:	ldr	r0, [fp, #-12]
   1bc98:	cmp	r0, #0
   1bc9c:	bcs	1bd08 <__assert_fail@plt+0xa990>
   1bca0:	b	1bca8 <__assert_fail@plt+0xa930>
   1bca4:	b	1bcac <__assert_fail@plt+0xa934>
   1bca8:	b	1bcec <__assert_fail@plt+0xa974>
   1bcac:	ldr	r0, [fp, #-12]
   1bcb0:	cmn	r0, #1
   1bcb4:	bne	1bcec <__assert_fail@plt+0xa974>
   1bcb8:	b	1bcd4 <__assert_fail@plt+0xa95c>
   1bcbc:	ldr	r0, [fp, #-16]
   1bcc0:	add	r0, r0, #0
   1bcc4:	movw	r1, #0
   1bcc8:	cmp	r1, r0
   1bccc:	bcc	1bd34 <__assert_fail@plt+0xa9bc>
   1bcd0:	b	1bd48 <__assert_fail@plt+0xa9d0>
   1bcd4:	ldr	r0, [fp, #-16]
   1bcd8:	sub	r0, r0, #1
   1bcdc:	mvn	r1, #0
   1bce0:	cmp	r1, r0
   1bce4:	bcc	1bd34 <__assert_fail@plt+0xa9bc>
   1bce8:	b	1bd48 <__assert_fail@plt+0xa9d0>
   1bcec:	ldr	r0, [fp, #-12]
   1bcf0:	movw	r1, #0
   1bcf4:	udiv	r0, r1, r0
   1bcf8:	ldr	r1, [fp, #-16]
   1bcfc:	cmp	r0, r1
   1bd00:	bcc	1bd34 <__assert_fail@plt+0xa9bc>
   1bd04:	b	1bd48 <__assert_fail@plt+0xa9d0>
   1bd08:	ldr	r2, [fp, #-16]
   1bd0c:	mvn	r0, #0
   1bd10:	mov	r3, #0
   1bd14:	str	r0, [sp, #4]
   1bd18:	ldr	r1, [sp, #4]
   1bd1c:	bl	1be70 <__assert_fail@plt+0xaaf8>
   1bd20:	ldr	r2, [fp, #-12]
   1bd24:	subs	r0, r0, r2
   1bd28:	sbcs	r1, r1, #0
   1bd2c:	bcs	1bd48 <__assert_fail@plt+0xa9d0>
   1bd30:	b	1bd34 <__assert_fail@plt+0xa9bc>
   1bd34:	ldr	r0, [fp, #-12]
   1bd38:	ldr	r1, [fp, #-16]
   1bd3c:	mul	r0, r0, r1
   1bd40:	str	r0, [fp, #-20]	; 0xffffffec
   1bd44:	b	1bd5c <__assert_fail@plt+0xa9e4>
   1bd48:	ldr	r0, [fp, #-12]
   1bd4c:	ldr	r1, [fp, #-16]
   1bd50:	mul	r0, r0, r1
   1bd54:	str	r0, [fp, #-20]	; 0xffffffec
   1bd58:	b	1bd74 <__assert_fail@plt+0xa9fc>
   1bd5c:	bl	1127c <__errno_location@plt>
   1bd60:	movw	r1, #12
   1bd64:	str	r1, [r0]
   1bd68:	movw	r0, #0
   1bd6c:	str	r0, [fp, #-4]
   1bd70:	b	1bd84 <__assert_fail@plt+0xaa0c>
   1bd74:	ldr	r0, [fp, #-8]
   1bd78:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd7c:	bl	1a2b0 <__assert_fail@plt+0x8f38>
   1bd80:	str	r0, [fp, #-4]
   1bd84:	ldr	r0, [fp, #-4]
   1bd88:	mov	sp, fp
   1bd8c:	pop	{fp, pc}
   1bd90:	svcvc	0x00ffffff
   1bd94:	andhi	r0, r0, r0
   1bd98:			; <UNDEFINED> instruction: 0xffff8000
   1bd9c:	cmp	r3, #0
   1bda0:	cmpeq	r2, #0
   1bda4:	bne	1bdc8 <__assert_fail@plt+0xaa50>
   1bda8:	cmp	r1, #0
   1bdac:	movlt	r1, #-2147483648	; 0x80000000
   1bdb0:	movlt	r0, #0
   1bdb4:	blt	1bdc4 <__assert_fail@plt+0xaa4c>
   1bdb8:	cmpeq	r0, #0
   1bdbc:	mvnne	r1, #-2147483648	; 0x80000000
   1bdc0:	mvnne	r0, #0
   1bdc4:	b	1beac <__assert_fail@plt+0xab34>
   1bdc8:	sub	sp, sp, #8
   1bdcc:	push	{sp, lr}
   1bdd0:	cmp	r1, #0
   1bdd4:	blt	1bdf4 <__assert_fail@plt+0xaa7c>
   1bdd8:	cmp	r3, #0
   1bddc:	blt	1be28 <__assert_fail@plt+0xaab0>
   1bde0:	bl	1bebc <__assert_fail@plt+0xab44>
   1bde4:	ldr	lr, [sp, #4]
   1bde8:	add	sp, sp, #8
   1bdec:	pop	{r2, r3}
   1bdf0:	bx	lr
   1bdf4:	rsbs	r0, r0, #0
   1bdf8:	sbc	r1, r1, r1, lsl #1
   1bdfc:	cmp	r3, #0
   1be00:	blt	1be4c <__assert_fail@plt+0xaad4>
   1be04:	bl	1bebc <__assert_fail@plt+0xab44>
   1be08:	ldr	lr, [sp, #4]
   1be0c:	add	sp, sp, #8
   1be10:	pop	{r2, r3}
   1be14:	rsbs	r0, r0, #0
   1be18:	sbc	r1, r1, r1, lsl #1
   1be1c:	rsbs	r2, r2, #0
   1be20:	sbc	r3, r3, r3, lsl #1
   1be24:	bx	lr
   1be28:	rsbs	r2, r2, #0
   1be2c:	sbc	r3, r3, r3, lsl #1
   1be30:	bl	1bebc <__assert_fail@plt+0xab44>
   1be34:	ldr	lr, [sp, #4]
   1be38:	add	sp, sp, #8
   1be3c:	pop	{r2, r3}
   1be40:	rsbs	r0, r0, #0
   1be44:	sbc	r1, r1, r1, lsl #1
   1be48:	bx	lr
   1be4c:	rsbs	r2, r2, #0
   1be50:	sbc	r3, r3, r3, lsl #1
   1be54:	bl	1bebc <__assert_fail@plt+0xab44>
   1be58:	ldr	lr, [sp, #4]
   1be5c:	add	sp, sp, #8
   1be60:	pop	{r2, r3}
   1be64:	rsbs	r2, r2, #0
   1be68:	sbc	r3, r3, r3, lsl #1
   1be6c:	bx	lr
   1be70:	cmp	r3, #0
   1be74:	cmpeq	r2, #0
   1be78:	bne	1be90 <__assert_fail@plt+0xab18>
   1be7c:	cmp	r1, #0
   1be80:	cmpeq	r0, #0
   1be84:	mvnne	r1, #0
   1be88:	mvnne	r0, #0
   1be8c:	b	1beac <__assert_fail@plt+0xab34>
   1be90:	sub	sp, sp, #8
   1be94:	push	{sp, lr}
   1be98:	bl	1bebc <__assert_fail@plt+0xab44>
   1be9c:	ldr	lr, [sp, #4]
   1bea0:	add	sp, sp, #8
   1bea4:	pop	{r2, r3}
   1bea8:	bx	lr
   1beac:	push	{r1, lr}
   1beb0:	mov	r0, #8
   1beb4:	bl	1109c <raise@plt>
   1beb8:	pop	{r1, pc}
   1bebc:	cmp	r1, r3
   1bec0:	cmpeq	r0, r2
   1bec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bec8:	mov	r4, r0
   1becc:	movcc	r0, #0
   1bed0:	mov	r5, r1
   1bed4:	ldr	lr, [sp, #36]	; 0x24
   1bed8:	movcc	r1, r0
   1bedc:	bcc	1bfd8 <__assert_fail@plt+0xac60>
   1bee0:	cmp	r3, #0
   1bee4:	clzeq	ip, r2
   1bee8:	clzne	ip, r3
   1beec:	addeq	ip, ip, #32
   1bef0:	cmp	r5, #0
   1bef4:	clzeq	r1, r4
   1bef8:	addeq	r1, r1, #32
   1befc:	clzne	r1, r5
   1bf00:	sub	ip, ip, r1
   1bf04:	sub	sl, ip, #32
   1bf08:	lsl	r9, r3, ip
   1bf0c:	rsb	fp, ip, #32
   1bf10:	orr	r9, r9, r2, lsl sl
   1bf14:	orr	r9, r9, r2, lsr fp
   1bf18:	lsl	r8, r2, ip
   1bf1c:	cmp	r5, r9
   1bf20:	cmpeq	r4, r8
   1bf24:	movcc	r0, #0
   1bf28:	movcc	r1, r0
   1bf2c:	bcc	1bf48 <__assert_fail@plt+0xabd0>
   1bf30:	mov	r0, #1
   1bf34:	subs	r4, r4, r8
   1bf38:	lsl	r1, r0, sl
   1bf3c:	orr	r1, r1, r0, lsr fp
   1bf40:	lsl	r0, r0, ip
   1bf44:	sbc	r5, r5, r9
   1bf48:	cmp	ip, #0
   1bf4c:	beq	1bfd8 <__assert_fail@plt+0xac60>
   1bf50:	lsr	r6, r8, #1
   1bf54:	orr	r6, r6, r9, lsl #31
   1bf58:	lsr	r7, r9, #1
   1bf5c:	mov	r2, ip
   1bf60:	b	1bf84 <__assert_fail@plt+0xac0c>
   1bf64:	subs	r3, r4, r6
   1bf68:	sbc	r8, r5, r7
   1bf6c:	adds	r3, r3, r3
   1bf70:	adc	r8, r8, r8
   1bf74:	adds	r4, r3, #1
   1bf78:	adc	r5, r8, #0
   1bf7c:	subs	r2, r2, #1
   1bf80:	beq	1bfa0 <__assert_fail@plt+0xac28>
   1bf84:	cmp	r5, r7
   1bf88:	cmpeq	r4, r6
   1bf8c:	bcs	1bf64 <__assert_fail@plt+0xabec>
   1bf90:	adds	r4, r4, r4
   1bf94:	adc	r5, r5, r5
   1bf98:	subs	r2, r2, #1
   1bf9c:	bne	1bf84 <__assert_fail@plt+0xac0c>
   1bfa0:	lsr	r3, r4, ip
   1bfa4:	orr	r3, r3, r5, lsl fp
   1bfa8:	lsr	r2, r5, ip
   1bfac:	orr	r3, r3, r5, lsr sl
   1bfb0:	adds	r0, r0, r4
   1bfb4:	mov	r4, r3
   1bfb8:	lsl	r3, r2, ip
   1bfbc:	orr	r3, r3, r4, lsl sl
   1bfc0:	lsl	ip, r4, ip
   1bfc4:	orr	r3, r3, r4, lsr fp
   1bfc8:	adc	r1, r1, r5
   1bfcc:	subs	r0, r0, ip
   1bfd0:	mov	r5, r2
   1bfd4:	sbc	r1, r1, r3
   1bfd8:	cmp	lr, #0
   1bfdc:	strdne	r4, [lr]
   1bfe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bfe4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bfe8:	mov	r7, r0
   1bfec:	ldr	r6, [pc, #72]	; 1c03c <__assert_fail@plt+0xacc4>
   1bff0:	ldr	r5, [pc, #72]	; 1c040 <__assert_fail@plt+0xacc8>
   1bff4:	add	r6, pc, r6
   1bff8:	add	r5, pc, r5
   1bffc:	sub	r6, r6, r5
   1c000:	mov	r8, r1
   1c004:	mov	r9, r2
   1c008:	bl	11064 <calloc@plt-0x20>
   1c00c:	asrs	r6, r6, #2
   1c010:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c014:	mov	r4, #0
   1c018:	add	r4, r4, #1
   1c01c:	ldr	r3, [r5], #4
   1c020:	mov	r2, r9
   1c024:	mov	r1, r8
   1c028:	mov	r0, r7
   1c02c:	blx	r3
   1c030:	cmp	r6, r4
   1c034:	bne	1c018 <__assert_fail@plt+0xaca0>
   1c038:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c03c:	andeq	r0, r1, r0, lsl pc
   1c040:	andeq	r0, r1, r8, lsl #30
   1c044:	bx	lr
   1c048:	ldr	r3, [pc, #12]	; 1c05c <__assert_fail@plt+0xace4>
   1c04c:	mov	r1, #0
   1c050:	add	r3, pc, r3
   1c054:	ldr	r2, [r3]
   1c058:	b	11288 <__cxa_atexit@plt>
   1c05c:	strheq	r1, [r1], -ip
   1c060:	mov	r2, r1
   1c064:	mov	r1, r0
   1c068:	mov	r0, #3
   1c06c:	b	1133c <__xstat64@plt>

Disassembly of section .fini:

0001c070 <.fini>:
   1c070:	push	{r3, lr}
   1c074:	pop	{r3, pc}
