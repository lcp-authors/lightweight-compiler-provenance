
../repos/charybdis/librb/src/.libs/librb.so:     file format elf32-littlearm


Disassembly of section .init:

00004318 <_init>:
    4318:	push	{r3, lr}
    431c:	bl	4cf8 <call_weak_fn>
    4320:	pop	{r3, pc}

Disassembly of section .plt:

00004324 <.plt>:
    4324:	push	{lr}		; (str lr, [sp, #-4]!)
    4328:	ldr	lr, [pc, #4]	; 4334 <.plt+0x10>
    432c:	add	lr, pc, lr
    4330:	ldr	pc, [lr, #8]!
    4334:	.word	0x00027ccc

00004338 <rb_helper_run@plt>:
    4338:	add	ip, pc, #0, 12
    433c:	add	ip, ip, #159744	; 0x27000
    4340:	ldr	pc, [ip, #3276]!	; 0xccc

00004344 <TLS_method@plt>:
    4344:	add	ip, pc, #0, 12
    4348:	add	ip, ip, #159744	; 0x27000
    434c:	ldr	pc, [ip, #3268]!	; 0xcc4

00004350 <open@plt>:
    4350:	add	ip, pc, #0, 12
    4354:	add	ip, ip, #159744	; 0x27000
    4358:	ldr	pc, [ip, #3260]!	; 0xcbc

0000435c <rb_init_netio@plt>:
    435c:	add	ip, pc, #0, 12
    4360:	add	ip, ip, #159744	; 0x27000
    4364:	ldr	pc, [ip, #3252]!	; 0xcb4

00004368 <sigemptyset@plt>:
    4368:	add	ip, pc, #0, 12
    436c:	add	ip, ip, #159744	; 0x27000
    4370:	ldr	pc, [ip, #3244]!	; 0xcac

00004374 <strerror@plt>:
    4374:	add	ip, pc, #0, 12
    4378:	add	ip, ip, #159744	; 0x27000
    437c:	ldr	pc, [ip, #3236]!	; 0xca4

00004380 <rb_radixtree_elem_delete@plt>:
    4380:	add	ip, pc, #0, 12
    4384:	add	ip, ip, #159744	; 0x27000
    4388:	ldr	pc, [ip, #3228]!	; 0xc9c

0000438c <getdtablesize@plt>:
    438c:	add	ip, pc, #0, 12
    4390:	add	ip, ip, #159744	; 0x27000
    4394:	ldr	pc, [ip, #3220]!	; 0xc94

00004398 <abort@plt>:
    4398:	add	ip, pc, #0, 12
    439c:	add	ip, ip, #159744	; 0x27000
    43a0:	ldr	pc, [ip, #3212]!	; 0xc8c

000043a4 <connect@plt>:
    43a4:	add	ip, pc, #0, 12
    43a8:	add	ip, ip, #159744	; 0x27000
    43ac:	ldr	pc, [ip, #3204]!	; 0xc84

000043b0 <rb_ignore_errno@plt>:
    43b0:	add	ip, pc, #0, 12
    43b4:	add	ip, ip, #159744	; 0x27000
    43b8:	ldr	pc, [ip, #3196]!	; 0xc7c

000043bc <rb_settimeout@plt>:
    43bc:	add	ip, pc, #0, 12
    43c0:	add	ip, ip, #159744	; 0x27000
    43c4:	ldr	pc, [ip, #3188]!	; 0xc74

000043c8 <SSL_CTX_set_cipher_list@plt>:
    43c8:	add	ip, pc, #0, 12
    43cc:	add	ip, ip, #159744	; 0x27000
    43d0:	ldr	pc, [ip, #3180]!	; 0xc6c

000043d4 <ERR_get_error@plt>:
    43d4:	add	ip, pc, #0, 12
    43d8:	add	ip, ip, #159744	; 0x27000
    43dc:	ldr	pc, [ip, #3172]!	; 0xc64

000043e0 <rb_radixtree_foreach_start@plt>:
    43e0:	add	ip, pc, #0, 12
    43e4:	add	ip, ip, #159744	; 0x27000
    43e8:	ldr	pc, [ip, #3164]!	; 0xc5c

000043ec <strcasestr@plt>:
    43ec:	add	ip, pc, #0, 12
    43f0:	add	ip, ip, #159744	; 0x27000
    43f4:	ldr	pc, [ip, #3156]!	; 0xc54

000043f8 <rb_connect_tcp@plt>:
    43f8:	add	ip, pc, #0, 12
    43fc:	add	ip, ip, #159744	; 0x27000
    4400:	ldr	pc, [ip, #3148]!	; 0xc4c

00004404 <RAND_load_file@plt>:
    4404:	add	ip, pc, #0, 12
    4408:	add	ip, ip, #159744	; 0x27000
    440c:	ldr	pc, [ip, #3140]!	; 0xc44

00004410 <signalfd@plt>:
    4410:	add	ip, pc, #0, 12
    4414:	add	ip, ip, #159744	; 0x27000
    4418:	ldr	pc, [ip, #3132]!	; 0xc3c

0000441c <rb_radixtree_foreach_next@plt>:
    441c:	add	ip, pc, #0, 12
    4420:	add	ip, ip, #159744	; 0x27000
    4424:	ldr	pc, [ip, #3124]!	; 0xc34

00004428 <memcmp@plt>:
    4428:	add	ip, pc, #0, 12
    442c:	add	ip, ip, #159744	; 0x27000
    4430:	ldr	pc, [ip, #3116]!	; 0xc2c

00004434 <SSL_CTX_free@plt>:
    4434:	add	ip, pc, #0, 12
    4438:	add	ip, ip, #159744	; 0x27000
    443c:	ldr	pc, [ip, #3108]!	; 0xc24

00004440 <rb_getmaxconnect@plt>:
    4440:	add	ip, pc, #0, 12
    4444:	add	ip, ip, #159744	; 0x27000
    4448:	ldr	pc, [ip, #3100]!	; 0xc1c

0000444c <sigwaitinfo@plt>:
    444c:	add	ip, pc, #0, 12
    4450:	add	ip, ip, #159744	; 0x27000
    4454:	ldr	pc, [ip, #3092]!	; 0xc14

00004458 <__libc_current_sigrtmin@plt>:
    4458:	add	ip, pc, #0, 12
    445c:	add	ip, ip, #159744	; 0x27000
    4460:	ldr	pc, [ip, #3084]!	; 0xc0c

00004464 <__xstat@plt>:
    4464:	add	ip, pc, #0, 12
    4468:	add	ip, ip, #159744	; 0x27000
    446c:	ldr	pc, [ip, #3076]!	; 0xc04

00004470 <rb_event_delete@plt>:
    4470:	add	ip, pc, #0, 12
    4474:	add	ip, ip, #159744	; 0x27000
    4478:	ldr	pc, [ip, #3068]!	; 0xbfc

0000447c <rb_setselect@plt>:
    447c:	add	ip, pc, #0, 12
    4480:	add	ip, ip, #159744	; 0x27000
    4484:	ldr	pc, [ip, #3060]!	; 0xbf4

00004488 <rb_fd_ssl@plt>:
    4488:	add	ip, pc, #0, 12
    448c:	add	ip, ip, #159744	; 0x27000
    4490:	ldr	pc, [ip, #3052]!	; 0xbec

00004494 <sigtimedwait@plt>:
    4494:	add	ip, pc, #0, 12
    4498:	add	ip, ip, #159744	; 0x27000
    449c:	ldr	pc, [ip, #3044]!	; 0xbe4

000044a0 <rb_setenv@plt>:
    44a0:	add	ip, pc, #0, 12
    44a4:	add	ip, ip, #159744	; 0x27000
    44a8:	ldr	pc, [ip, #3036]!	; 0xbdc

000044ac <signal@plt>:
    44ac:	add	ip, pc, #0, 12
    44b0:	add	ip, ip, #159744	; 0x27000
    44b4:	ldr	pc, [ip, #3028]!	; 0xbd4

000044b8 <rb_get_fd@plt>:
    44b8:	add	ip, pc, #0, 12
    44bc:	add	ip, ip, #159744	; 0x27000
    44c0:	ldr	pc, [ip, #3020]!	; 0xbcc

000044c4 <epoll_create@plt>:
    44c4:	add	ip, pc, #0, 12
    44c8:	add	ip, ip, #159744	; 0x27000
    44cc:	ldr	pc, [ip, #3012]!	; 0xbc4

000044d0 <rb_clear_patricia@plt>:
    44d0:	add	ip, pc, #0, 12
    44d4:	add	ip, ip, #159744	; 0x27000
    44d8:	ldr	pc, [ip, #3004]!	; 0xbbc

000044dc <__gmon_start__@plt>:
    44dc:	add	ip, pc, #0, 12
    44e0:	add	ip, ip, #159744	; 0x27000
    44e4:	ldr	pc, [ip, #2996]!	; 0xbb4

000044e8 <SSL_CTX_clear_options@plt>:
    44e8:	add	ip, pc, #0, 12
    44ec:	add	ip, ip, #159744	; 0x27000
    44f0:	ldr	pc, [ip, #2988]!	; 0xbac

000044f4 <SSL_get_current_cipher@plt>:
    44f4:	add	ip, pc, #0, 12
    44f8:	add	ip, ip, #159744	; 0x27000
    44fc:	ldr	pc, [ip, #2980]!	; 0xba4

00004500 <timer_create@plt>:
    4500:	add	ip, pc, #0, 12
    4504:	add	ip, ip, #159744	; 0x27000
    4508:	ldr	pc, [ip, #2972]!	; 0xb9c

0000450c <X509_get_X509_PUBKEY@plt>:
    450c:	add	ip, pc, #0, 12
    4510:	add	ip, ip, #159744	; 0x27000
    4514:	ldr	pc, [ip, #2964]!	; 0xb94

00004518 <rb_select@plt>:
    4518:	add	ip, pc, #0, 12
    451c:	add	ip, ip, #159744	; 0x27000
    4520:	ldr	pc, [ip, #2956]!	; 0xb8c

00004524 <rb_patricia_search_best@plt>:
    4524:	add	ip, pc, #0, 12
    4528:	add	ip, ip, #159744	; 0x27000
    452c:	ldr	pc, [ip, #2948]!	; 0xb84

00004530 <vsnprintf@plt>:
    4530:	add	ip, pc, #0, 12
    4534:	add	ip, ip, #159744	; 0x27000
    4538:	ldr	pc, [ip, #2940]!	; 0xb7c

0000453c <socketpair@plt>:
    453c:	add	ip, pc, #0, 12
    4540:	add	ip, ip, #159744	; 0x27000
    4544:	ldr	pc, [ip, #2932]!	; 0xb74

00004548 <strncpy@plt>:
    4548:	add	ip, pc, #0, 12
    454c:	add	ip, ip, #159744	; 0x27000
    4550:	ldr	pc, [ip, #2924]!	; 0xb6c

00004554 <fclose@plt>:
    4554:	add	ip, pc, #0, 12
    4558:	add	ip, ip, #159744	; 0x27000
    455c:	ldr	pc, [ip, #2916]!	; 0xb64

00004560 <recv@plt>:
    4560:	add	ip, pc, #0, 12
    4564:	add	ip, ip, #159744	; 0x27000
    4568:	ldr	pc, [ip, #2908]!	; 0xb5c

0000456c <getenv@plt>:
    456c:	add	ip, pc, #0, 12
    4570:	add	ip, ip, #159744	; 0x27000
    4574:	ldr	pc, [ip, #2900]!	; 0xb54

00004578 <ERR_error_string_n@plt>:
    4578:	add	ip, pc, #0, 12
    457c:	add	ip, ip, #159744	; 0x27000
    4580:	ldr	pc, [ip, #2892]!	; 0xb4c

00004584 <strchr@plt>:
    4584:	add	ip, pc, #0, 12
    4588:	add	ip, ip, #159744	; 0x27000
    458c:	ldr	pc, [ip, #2884]!	; 0xb44

00004590 <rb_gettimeofday@plt>:
    4590:	add	ip, pc, #0, 12
    4594:	add	ip, ip, #159744	; 0x27000
    4598:	ldr	pc, [ip, #2876]!	; 0xb3c

0000459c <strcasecmp@plt>:
    459c:	add	ip, pc, #0, 12
    45a0:	add	ip, ip, #159744	; 0x27000
    45a4:	ldr	pc, [ip, #2868]!	; 0xb34

000045a8 <rb_helper_restart@plt>:
    45a8:	add	ip, pc, #0, 12
    45ac:	add	ip, ip, #159744	; 0x27000
    45b0:	ldr	pc, [ip, #2860]!	; 0xb2c

000045b4 <listen@plt>:
    45b4:	add	ip, pc, #0, 12
    45b8:	add	ip, ip, #159744	; 0x27000
    45bc:	ldr	pc, [ip, #2852]!	; 0xb24

000045c0 <calloc@plt>:
    45c0:	add	ip, pc, #0, 12
    45c4:	add	ip, ip, #159744	; 0x27000
    45c8:	ldr	pc, [ip, #2844]!	; 0xb1c

000045cc <SSL_write@plt>:
    45cc:	add	ip, pc, #0, 12
    45d0:	add	ip, ip, #159744	; 0x27000
    45d4:	ldr	pc, [ip, #2836]!	; 0xb14

000045d8 <rb_event_init@plt>:
    45d8:	add	ip, pc, #0, 12
    45dc:	add	ip, ip, #159744	; 0x27000
    45e0:	ldr	pc, [ip, #2828]!	; 0xb0c

000045e4 <stpcpy@plt>:
    45e4:	add	ip, pc, #0, 12
    45e8:	add	ip, ip, #159744	; 0x27000
    45ec:	ldr	pc, [ip, #2820]!	; 0xb04

000045f0 <fopen@plt>:
    45f0:	add	ip, pc, #0, 12
    45f4:	add	ip, ip, #159744	; 0x27000
    45f8:	ldr	pc, [ip, #2812]!	; 0xafc

000045fc <rb_set_nb@plt>:
    45fc:	add	ip, pc, #0, 12
    4600:	add	ip, ip, #159744	; 0x27000
    4604:	ldr	pc, [ip, #2804]!	; 0xaf4

00004608 <memset@plt>:
    4608:	add	ip, pc, #0, 12
    460c:	add	ip, ip, #159744	; 0x27000
    4610:	ldr	pc, [ip, #2796]!	; 0xaec

00004614 <rb_inet_pton@plt>:
    4614:	add	ip, pc, #0, 12
    4618:	add	ip, ip, #159744	; 0x27000
    461c:	ldr	pc, [ip, #2788]!	; 0xae4

00004620 <rb_radixtree_stats@plt>:
    4620:	add	ip, pc, #0, 12
    4624:	add	ip, ip, #159744	; 0x27000
    4628:	ldr	pc, [ip, #2780]!	; 0xadc

0000462c <strrchr@plt>:
    462c:	add	ip, pc, #0, 12
    4630:	add	ip, ip, #159744	; 0x27000
    4634:	ldr	pc, [ip, #2772]!	; 0xad4

00004638 <rb_write@plt>:
    4638:	add	ip, pc, #0, 12
    463c:	add	ip, ip, #159744	; 0x27000
    4640:	ldr	pc, [ip, #2764]!	; 0xacc

00004644 <SSL_set_fd@plt>:
    4644:	add	ip, pc, #0, 12
    4648:	add	ip, ip, #159744	; 0x27000
    464c:	ldr	pc, [ip, #2756]!	; 0xac4

00004650 <SSL_CTX_ctrl@plt>:
    4650:	add	ip, pc, #0, 12
    4654:	add	ip, ip, #159744	; 0x27000
    4658:	ldr	pc, [ip, #2748]!	; 0xabc

0000465c <rb_linebuf_parse@plt>:
    465c:	add	ip, pc, #0, 12
    4660:	add	ip, ip, #159744	; 0x27000
    4664:	ldr	pc, [ip, #2740]!	; 0xab4

00004668 <writev@plt>:
    4668:	add	ip, pc, #0, 12
    466c:	add	ip, ip, #159744	; 0x27000
    4670:	ldr	pc, [ip, #2732]!	; 0xaac

00004674 <rb_fsnprint@plt>:
    4674:	add	ip, pc, #0, 12
    4678:	add	ip, ip, #159744	; 0x27000
    467c:	ldr	pc, [ip, #2724]!	; 0xaa4

00004680 <rb_strlcpy@plt>:
    4680:	add	ip, pc, #0, 12
    4684:	add	ip, ip, #159744	; 0x27000
    4688:	ldr	pc, [ip, #2716]!	; 0xa9c

0000468c <rb_patricia_search_best2@plt>:
    468c:	add	ip, pc, #0, 12
    4690:	add	ip, ip, #159744	; 0x27000
    4694:	ldr	pc, [ip, #2708]!	; 0xa94

00004698 <SSL_CIPHER_get_name@plt>:
    4698:	add	ip, pc, #0, 12
    469c:	add	ip, ip, #159744	; 0x27000
    46a0:	ldr	pc, [ip, #2700]!	; 0xa8c

000046a4 <posix_spawnattr_init@plt>:
    46a4:	add	ip, pc, #0, 12
    46a8:	add	ip, ip, #159744	; 0x27000
    46ac:	ldr	pc, [ip, #2692]!	; 0xa84

000046b0 <OpenSSL_version_num@plt>:
    46b0:	add	ip, pc, #0, 12
    46b4:	add	ip, ip, #159744	; 0x27000
    46b8:	ldr	pc, [ip, #2684]!	; 0xa7c

000046bc <rb_dictionary_foreach_next@plt>:
    46bc:	add	ip, pc, #0, 12
    46c0:	add	ip, ip, #159744	; 0x27000
    46c4:	ldr	pc, [ip, #2676]!	; 0xa74

000046c8 <rb_kill@plt>:
    46c8:	add	ip, pc, #0, 12
    46cc:	add	ip, ip, #159744	; 0x27000
    46d0:	ldr	pc, [ip, #2668]!	; 0xa6c

000046d4 <free@plt>:
    46d4:	add	ip, pc, #0, 12
    46d8:	add	ip, ip, #159744	; 0x27000
    46dc:	ldr	pc, [ip, #2660]!	; 0xa64

000046e0 <sendmsg@plt>:
    46e0:	add	ip, pc, #0, 12
    46e4:	add	ip, ip, #159744	; 0x27000
    46e8:	ldr	pc, [ip, #2652]!	; 0xa5c

000046ec <read@plt>:
    46ec:	add	ip, pc, #0, 12
    46f0:	add	ip, ip, #159744	; 0x27000
    46f4:	ldr	pc, [ip, #2644]!	; 0xa54

000046f8 <rb_radixtree_elem_add@plt>:
    46f8:	add	ip, pc, #0, 12
    46fc:	add	ip, ip, #159744	; 0x27000
    4700:	ldr	pc, [ip, #2636]!	; 0xa4c

00004704 <write@plt>:
    4704:	add	ip, pc, #0, 12
    4708:	add	ip, ip, #159744	; 0x27000
    470c:	ldr	pc, [ip, #2628]!	; 0xa44

00004710 <SSL_new@plt>:
    4710:	add	ip, pc, #0, 12
    4714:	add	ip, ip, #159744	; 0x27000
    4718:	ldr	pc, [ip, #2620]!	; 0xa3c

0000471c <access@plt>:
    471c:	add	ip, pc, #0, 12
    4720:	add	ip, ip, #159744	; 0x27000
    4724:	ldr	pc, [ip, #2612]!	; 0xa34

00004728 <rb_lib_loop@plt>:
    4728:	add	ip, pc, #0, 12
    472c:	add	ip, ip, #159744	; 0x27000
    4730:	ldr	pc, [ip, #2604]!	; 0xa2c

00004734 <timer_settime@plt>:
    4734:	add	ip, pc, #0, 12
    4738:	add	ip, ip, #159744	; 0x27000
    473c:	ldr	pc, [ip, #2596]!	; 0xa24

00004740 <gettimeofday@plt>:
    4740:	add	ip, pc, #0, 12
    4744:	add	ip, ip, #159744	; 0x27000
    4748:	ldr	pc, [ip, #2588]!	; 0xa1c

0000474c <accept@plt>:
    474c:	add	ip, pc, #0, 12
    4750:	add	ip, ip, #159744	; 0x27000
    4754:	ldr	pc, [ip, #2580]!	; 0xa14

00004758 <SSL_read@plt>:
    4758:	add	ip, pc, #0, 12
    475c:	add	ip, ip, #159744	; 0x27000
    4760:	ldr	pc, [ip, #2572]!	; 0xa0c

00004764 <rb_read@plt>:
    4764:	add	ip, pc, #0, 12
    4768:	add	ip, ip, #159744	; 0x27000
    476c:	ldr	pc, [ip, #2564]!	; 0xa04

00004770 <socket@plt>:
    4770:	add	ip, pc, #0, 12
    4774:	add	ip, ip, #159744	; 0x27000
    4778:	ldr	pc, [ip, #2556]!	; 0x9fc

0000477c <rb_linebuf_get@plt>:
    477c:	add	ip, pc, #0, 12
    4780:	add	ip, ip, #159744	; 0x27000
    4784:	ldr	pc, [ip, #2548]!	; 0x9f4

00004788 <rb_radixtree_foreach_cur@plt>:
    4788:	add	ip, pc, #0, 12
    478c:	add	ip, ip, #159744	; 0x27000
    4790:	ldr	pc, [ip, #2540]!	; 0x9ec

00004794 <epoll_wait@plt>:
    4794:	add	ip, pc, #0, 12
    4798:	add	ip, ip, #159744	; 0x27000
    479c:	ldr	pc, [ip, #2532]!	; 0x9e4

000047a0 <SSL_do_handshake@plt>:
    47a0:	add	ip, pc, #0, 12
    47a4:	add	ip, ip, #159744	; 0x27000
    47a8:	ldr	pc, [ip, #2524]!	; 0x9dc

000047ac <rb_linebuf_flush@plt>:
    47ac:	add	ip, pc, #0, 12
    47b0:	add	ip, ip, #159744	; 0x27000
    47b4:	ldr	pc, [ip, #2516]!	; 0x9d4

000047b8 <posix_spawn@plt>:
    47b8:	add	ip, pc, #0, 12
    47bc:	add	ip, ip, #159744	; 0x27000
    47c0:	ldr	pc, [ip, #2508]!	; 0x9cc

000047c4 <strlen@plt>:
    47c4:	add	ip, pc, #0, 12
    47c8:	add	ip, ip, #159744	; 0x27000
    47cc:	ldr	pc, [ip, #2500]!	; 0x9c4

000047d0 <rb_current_time@plt>:
    47d0:	add	ip, pc, #0, 12
    47d4:	add	ip, ip, #159744	; 0x27000
    47d8:	ldr	pc, [ip, #2492]!	; 0x9bc

000047dc <strtoul@plt>:
    47dc:	add	ip, pc, #0, 12
    47e0:	add	ip, ip, #159744	; 0x27000
    47e4:	ldr	pc, [ip, #2484]!	; 0x9b4

000047e8 <memcpy@plt>:
    47e8:	add	ip, pc, #0, 12
    47ec:	add	ip, ip, #159744	; 0x27000
    47f0:	ldr	pc, [ip, #2476]!	; 0x9ac

000047f4 <PEM_read_X509@plt>:
    47f4:	add	ip, pc, #0, 12
    47f8:	add	ip, ip, #159744	; 0x27000
    47fc:	ldr	pc, [ip, #2468]!	; 0x9a4

00004800 <posix_spawnattr_setflags@plt>:
    4800:	add	ip, pc, #0, 12
    4804:	add	ip, ip, #159744	; 0x27000
    4808:	ldr	pc, [ip, #2460]!	; 0x99c

0000480c <__ctype_tolower_loc@plt>:
    480c:	add	ip, pc, #0, 12
    4810:	add	ip, ip, #159744	; 0x27000
    4814:	ldr	pc, [ip, #2452]!	; 0x994

00004818 <SSL_CTX_use_certificate_chain_file@plt>:
    4818:	add	ip, pc, #0, 12
    481c:	add	ip, ip, #159744	; 0x27000
    4820:	ldr	pc, [ip, #2444]!	; 0x98c

00004824 <rb_free_rb_dlink_node@plt>:
    4824:	add	ip, pc, #0, 12
    4828:	add	ip, ip, #159744	; 0x27000
    482c:	ldr	pc, [ip, #2436]!	; 0x984

00004830 <SSL_CTX_set_options@plt>:
    4830:	add	ip, pc, #0, 12
    4834:	add	ip, ip, #159744	; 0x27000
    4838:	ldr	pc, [ip, #2428]!	; 0x97c

0000483c <posix_spawnattr_destroy@plt>:
    483c:	add	ip, pc, #0, 12
    4840:	add	ip, ip, #159744	; 0x27000
    4844:	ldr	pc, [ip, #2420]!	; 0x974

00004848 <rb_close@plt>:
    4848:	add	ip, pc, #0, 12
    484c:	add	ip, ip, #159744	; 0x27000
    4850:	ldr	pc, [ip, #2412]!	; 0x96c

00004854 <strtol@plt>:
    4854:	add	ip, pc, #0, 12
    4858:	add	ip, ip, #159744	; 0x27000
    485c:	ldr	pc, [ip, #2404]!	; 0x964

00004860 <sigaddset@plt>:
    4860:	add	ip, pc, #0, 12
    4864:	add	ip, ip, #159744	; 0x27000
    4868:	ldr	pc, [ip, #2396]!	; 0x95c

0000486c <strcpy@plt>:
    486c:	add	ip, pc, #0, 12
    4870:	add	ip, ip, #159744	; 0x27000
    4874:	ldr	pc, [ip, #2388]!	; 0x954

00004878 <waitpid@plt>:
    4878:	add	ip, pc, #0, 12
    487c:	add	ip, ip, #159744	; 0x27000
    4880:	ldr	pc, [ip, #2380]!	; 0x94c

00004884 <rb_run_one_event@plt>:
    4884:	add	ip, pc, #0, 12
    4888:	add	ip, ip, #159744	; 0x27000
    488c:	ldr	pc, [ip, #2372]!	; 0x944

00004890 <rb_patricia_search_exact@plt>:
    4890:	add	ip, pc, #0, 12
    4894:	add	ip, ip, #159744	; 0x27000
    4898:	ldr	pc, [ip, #2364]!	; 0x93c

0000489c <strncat@plt>:
    489c:	add	ip, pc, #0, 12
    48a0:	add	ip, ip, #159744	; 0x27000
    48a4:	ldr	pc, [ip, #2356]!	; 0x934

000048a8 <rb_bh_free@plt>:
    48a8:	add	ip, pc, #0, 12
    48ac:	add	ip, ip, #159744	; 0x27000
    48b0:	ldr	pc, [ip, #2348]!	; 0x92c

000048b4 <rb_init_rb_dlink_nodes@plt>:
    48b4:	add	ip, pc, #0, 12
    48b8:	add	ip, ip, #159744	; 0x27000
    48bc:	ldr	pc, [ip, #2340]!	; 0x924

000048c0 <EVP_sha1@plt>:
    48c0:	add	ip, pc, #0, 12
    48c4:	add	ip, ip, #159744	; 0x27000
    48c8:	ldr	pc, [ip, #2332]!	; 0x91c

000048cc <rb_patricia_lookup@plt>:
    48cc:	add	ip, pc, #0, 12
    48d0:	add	ip, ip, #159744	; 0x27000
    48d4:	ldr	pc, [ip, #2324]!	; 0x914

000048d8 <shutdown@plt>:
    48d8:	add	ip, pc, #0, 12
    48dc:	add	ip, ip, #159744	; 0x27000
    48e0:	ldr	pc, [ip, #2316]!	; 0x90c

000048e4 <bind@plt>:
    48e4:	add	ip, pc, #0, 12
    48e8:	add	ip, ip, #159744	; 0x27000
    48ec:	ldr	pc, [ip, #2308]!	; 0x904

000048f0 <rb_lib_log@plt>:
    48f0:	add	ip, pc, #0, 12
    48f4:	add	ip, ip, #159744	; 0x27000
    48f8:	ldr	pc, [ip, #2300]!	; 0x8fc

000048fc <SSL_CTX_use_PrivateKey_file@plt>:
    48fc:	add	ip, pc, #0, 12
    4900:	add	ip, ip, #159744	; 0x27000
    4904:	ldr	pc, [ip, #2292]!	; 0x8f4

00004908 <select@plt>:
    4908:	add	ip, pc, #0, 12
    490c:	add	ip, ip, #159744	; 0x27000
    4910:	ldr	pc, [ip, #2284]!	; 0x8ec

00004914 <close@plt>:
    4914:	add	ip, pc, #0, 12
    4918:	add	ip, ip, #159744	; 0x27000
    491c:	ldr	pc, [ip, #2276]!	; 0x8e4

00004920 <rb_inet_ntop@plt>:
    4920:	add	ip, pc, #0, 12
    4924:	add	ip, ip, #159744	; 0x27000
    4928:	ldr	pc, [ip, #2268]!	; 0x8dc

0000492c <rb_bh_alloc@plt>:
    492c:	add	ip, pc, #0, 12
    4930:	add	ip, ip, #159744	; 0x27000
    4934:	ldr	pc, [ip, #2260]!	; 0x8d4

00004938 <SSL_free@plt>:
    4938:	add	ip, pc, #0, 12
    493c:	add	ip, ip, #159744	; 0x27000
    4940:	ldr	pc, [ip, #2252]!	; 0x8cc

00004944 <rb_pipe@plt>:
    4944:	add	ip, pc, #0, 12
    4948:	add	ip, ip, #159744	; 0x27000
    494c:	ldr	pc, [ip, #2244]!	; 0x8c4

00004950 <strncasecmp@plt>:
    4950:	add	ip, pc, #0, 12
    4954:	add	ip, ip, #159744	; 0x27000
    4958:	ldr	pc, [ip, #2236]!	; 0x8bc

0000495c <rb_outofmemory@plt>:
    495c:	add	ip, pc, #0, 12
    4960:	add	ip, ip, #159744	; 0x27000
    4964:	ldr	pc, [ip, #2228]!	; 0x8b4

00004968 <rb_set_time@plt>:
    4968:	add	ip, pc, #0, 12
    496c:	add	ip, ip, #159744	; 0x27000
    4970:	ldr	pc, [ip, #2220]!	; 0x8ac

00004974 <rb_dictionary_stats@plt>:
    4974:	add	ip, pc, #0, 12
    4978:	add	ip, ip, #159744	; 0x27000
    497c:	ldr	pc, [ip, #2212]!	; 0x8a4

00004980 <malloc@plt>:
    4980:	add	ip, pc, #0, 12
    4984:	add	ip, ip, #159744	; 0x27000
    4988:	ldr	pc, [ip, #2204]!	; 0x89c

0000498c <sigprocmask@plt>:
    498c:	add	ip, pc, #0, 12
    4990:	add	ip, ip, #159744	; 0x27000
    4994:	ldr	pc, [ip, #2196]!	; 0x894

00004998 <rb_event_run@plt>:
    4998:	add	ip, pc, #0, 12
    499c:	add	ip, ip, #159744	; 0x27000
    49a0:	ldr	pc, [ip, #2188]!	; 0x88c

000049a4 <SSL_set_accept_state@plt>:
    49a4:	add	ip, pc, #0, 12
    49a8:	add	ip, ip, #159744	; 0x27000
    49ac:	ldr	pc, [ip, #2180]!	; 0x884

000049b0 <rb_init_bh@plt>:
    49b0:	add	ip, pc, #0, 12
    49b4:	add	ip, ip, #159744	; 0x27000
    49b8:	ldr	pc, [ip, #2172]!	; 0x87c

000049bc <PEM_read_DHparams@plt>:
    49bc:	add	ip, pc, #0, 12
    49c0:	add	ip, ip, #159744	; 0x27000
    49c4:	ldr	pc, [ip, #2164]!	; 0x874

000049c8 <gmtime_r@plt>:
    49c8:	add	ip, pc, #0, 12
    49cc:	add	ip, ip, #159744	; 0x27000
    49d0:	ldr	pc, [ip, #2156]!	; 0x86c

000049d4 <poll@plt>:
    49d4:	add	ip, pc, #0, 12
    49d8:	add	ip, ip, #159744	; 0x27000
    49dc:	ldr	pc, [ip, #2148]!	; 0x864

000049e0 <ASN1_item_digest@plt>:
    49e0:	add	ip, pc, #0, 12
    49e4:	add	ip, ip, #159744	; 0x27000
    49e8:	ldr	pc, [ip, #2140]!	; 0x85c

000049ec <strnlen@plt>:
    49ec:	add	ip, pc, #0, 12
    49f0:	add	ip, ip, #159744	; 0x27000
    49f4:	ldr	pc, [ip, #2132]!	; 0x854

000049f8 <SSL_get_peer_certificate@plt>:
    49f8:	add	ip, pc, #0, 12
    49fc:	add	ip, ip, #159744	; 0x27000
    4a00:	ldr	pc, [ip, #2124]!	; 0x84c

00004a04 <rb_dictionary_find@plt>:
    4a04:	add	ip, pc, #0, 12
    4a08:	add	ip, ip, #159744	; 0x27000
    4a0c:	ldr	pc, [ip, #2116]!	; 0x844

00004a10 <rb_lib_init@plt>:
    4a10:	add	ip, pc, #0, 12
    4a14:	add	ip, ip, #159744	; 0x27000
    4a18:	ldr	pc, [ip, #2108]!	; 0x83c

00004a1c <SSL_get_verify_result@plt>:
    4a1c:	add	ip, pc, #0, 12
    4a20:	add	ip, ip, #159744	; 0x27000
    4a24:	ldr	pc, [ip, #2100]!	; 0x834

00004a28 <strtok_r@plt>:
    4a28:	add	ip, pc, #0, 12
    4a2c:	add	ip, ip, #159744	; 0x27000
    4a30:	ldr	pc, [ip, #2092]!	; 0x82c

00004a34 <rb_lib_restart@plt>:
    4a34:	add	ip, pc, #0, 12
    4a38:	add	ip, ip, #159744	; 0x27000
    4a3c:	ldr	pc, [ip, #2084]!	; 0x824

00004a40 <DH_free@plt>:
    4a40:	add	ip, pc, #0, 12
    4a44:	add	ip, ip, #159744	; 0x27000
    4a48:	ldr	pc, [ip, #2076]!	; 0x81c

00004a4c <timer_delete@plt>:
    4a4c:	add	ip, pc, #0, 12
    4a50:	add	ip, ip, #159744	; 0x27000
    4a54:	ldr	pc, [ip, #2068]!	; 0x814

00004a58 <rb_open@plt>:
    4a58:	add	ip, pc, #0, 12
    4a5c:	add	ip, ip, #159744	; 0x27000
    4a60:	ldr	pc, [ip, #2060]!	; 0x80c

00004a64 <rb_get_sockerr@plt>:
    4a64:	add	ip, pc, #0, 12
    4a68:	add	ip, ip, #159744	; 0x27000
    4a6c:	ldr	pc, [ip, #2052]!	; 0x804

00004a70 <send@plt>:
    4a70:	add	ip, pc, #0, 12
    4a74:	add	ip, ip, #159744	; 0x27000
    4a78:	ldr	pc, [ip, #2044]!	; 0x7fc

00004a7c <SSL_shutdown@plt>:
    4a7c:	add	ip, pc, #0, 12
    4a80:	add	ip, ip, #159744	; 0x27000
    4a84:	ldr	pc, [ip, #2036]!	; 0x7f4

00004a88 <rb_bh_create@plt>:
    4a88:	add	ip, pc, #0, 12
    4a8c:	add	ip, ip, #159744	; 0x27000
    4a90:	ldr	pc, [ip, #2028]!	; 0x7ec

00004a94 <dup2@plt>:
    4a94:	add	ip, pc, #0, 12
    4a98:	add	ip, ip, #159744	; 0x27000
    4a9c:	ldr	pc, [ip, #2020]!	; 0x7e4

00004aa0 <getpid@plt>:
    4aa0:	add	ip, pc, #0, 12
    4aa4:	add	ip, ip, #159744	; 0x27000
    4aa8:	ldr	pc, [ip, #2012]!	; 0x7dc

00004aac <rb_writev@plt>:
    4aac:	add	ip, pc, #0, 12
    4ab0:	add	ip, ip, #159744	; 0x27000
    4ab4:	ldr	pc, [ip, #2004]!	; 0x7d4

00004ab8 <RAND_bytes@plt>:
    4ab8:	add	ip, pc, #0, 12
    4abc:	add	ip, ip, #159744	; 0x27000
    4ac0:	ldr	pc, [ip, #1996]!	; 0x7cc

00004ac4 <rb_linebuf_newbuf@plt>:
    4ac4:	add	ip, pc, #0, 12
    4ac8:	add	ip, ip, #159744	; 0x27000
    4acc:	ldr	pc, [ip, #1988]!	; 0x7c4

00004ad0 <rb_fdlist_init@plt>:
    4ad0:	add	ip, pc, #0, 12
    4ad4:	add	ip, ip, #159744	; 0x27000
    4ad8:	ldr	pc, [ip, #1980]!	; 0x7bc

00004adc <rb_event_add@plt>:
    4adc:	add	ip, pc, #0, 12
    4ae0:	add	ip, ip, #159744	; 0x27000
    4ae4:	ldr	pc, [ip, #1972]!	; 0x7b4

00004ae8 <readlink@plt>:
    4ae8:	add	ip, pc, #0, 12
    4aec:	add	ip, ip, #159744	; 0x27000
    4af0:	ldr	pc, [ip, #1964]!	; 0x7ac

00004af4 <SSL_CTX_new@plt>:
    4af4:	add	ip, pc, #0, 12
    4af8:	add	ip, ip, #159744	; 0x27000
    4afc:	ldr	pc, [ip, #1956]!	; 0x7a4

00004b00 <rb_setup_fd@plt>:
    4b00:	add	ip, pc, #0, 12
    4b04:	add	ip, ip, #159744	; 0x27000
    4b08:	ldr	pc, [ip, #1948]!	; 0x79c

00004b0c <recvmsg@plt>:
    4b0c:	add	ip, pc, #0, 12
    4b10:	add	ip, ip, #159744	; 0x27000
    4b14:	ldr	pc, [ip, #1940]!	; 0x794

00004b18 <rand@plt>:
    4b18:	add	ip, pc, #0, 12
    4b1c:	add	ip, ip, #159744	; 0x27000
    4b20:	ldr	pc, [ip, #1932]!	; 0x78c

00004b24 <rb_linebuf_init@plt>:
    4b24:	add	ip, pc, #0, 12
    4b28:	add	ip, ip, #159744	; 0x27000
    4b2c:	ldr	pc, [ip, #1924]!	; 0x784

00004b30 <__fxstat@plt>:
    4b30:	add	ip, pc, #0, 12
    4b34:	add	ip, ip, #159744	; 0x27000
    4b38:	ldr	pc, [ip, #1916]!	; 0x77c

00004b3c <SSL_set_connect_state@plt>:
    4b3c:	add	ip, pc, #0, 12
    4b40:	add	ip, ip, #159744	; 0x27000
    4b44:	ldr	pc, [ip, #1908]!	; 0x774

00004b48 <rb_radixtree_elem_find@plt>:
    4b48:	add	ip, pc, #0, 12
    4b4c:	add	ip, ip, #159744	; 0x27000
    4b50:	ldr	pc, [ip, #1900]!	; 0x76c

00004b54 <rb_make_rb_dlink_node@plt>:
    4b54:	add	ip, pc, #0, 12
    4b58:	add	ip, ip, #159744	; 0x27000
    4b5c:	ldr	pc, [ip, #1892]!	; 0x764

00004b60 <rb_strlcat@plt>:
    4b60:	add	ip, pc, #0, 12
    4b64:	add	ip, ip, #159744	; 0x27000
    4b68:	ldr	pc, [ip, #1884]!	; 0x75c

00004b6c <rb_spawn_process@plt>:
    4b6c:	add	ip, pc, #0, 12
    4b70:	add	ip, ip, #159744	; 0x27000
    4b74:	ldr	pc, [ip, #1876]!	; 0x754

00004b78 <EVP_sha512@plt>:
    4b78:	add	ip, pc, #0, 12
    4b7c:	add	ip, ip, #159744	; 0x27000
    4b80:	ldr	pc, [ip, #1868]!	; 0x74c

00004b84 <snprintf@plt>:
    4b84:	add	ip, pc, #0, 12
    4b88:	add	ip, ip, #159744	; 0x27000
    4b8c:	ldr	pc, [ip, #1860]!	; 0x744

00004b90 <RAND_status@plt>:
    4b90:	add	ip, pc, #0, 12
    4b94:	add	ip, ip, #159744	; 0x27000
    4b98:	ldr	pc, [ip, #1852]!	; 0x73c

00004b9c <timerfd_create@plt>:
    4b9c:	add	ip, pc, #0, 12
    4ba0:	add	ip, ip, #159744	; 0x27000
    4ba4:	ldr	pc, [ip, #1844]!	; 0x734

00004ba8 <EVP_sha256@plt>:
    4ba8:	add	ip, pc, #0, 12
    4bac:	add	ip, ip, #159744	; 0x27000
    4bb0:	ldr	pc, [ip, #1836]!	; 0x72c

00004bb4 <strcspn@plt>:
    4bb4:	add	ip, pc, #0, 12
    4bb8:	add	ip, ip, #159744	; 0x27000
    4bbc:	ldr	pc, [ip, #1828]!	; 0x724

00004bc0 <rb_linebuf_put@plt>:
    4bc0:	add	ip, pc, #0, 12
    4bc4:	add	ip, ip, #159744	; 0x27000
    4bc8:	ldr	pc, [ip, #1820]!	; 0x71c

00004bcc <rb_listen@plt>:
    4bcc:	add	ip, pc, #0, 12
    4bd0:	add	ip, ip, #159744	; 0x27000
    4bd4:	ldr	pc, [ip, #1812]!	; 0x714

00004bd8 <fcntl@plt>:
    4bd8:	add	ip, pc, #0, 12
    4bdc:	add	ip, ip, #159744	; 0x27000
    4be0:	ldr	pc, [ip, #1804]!	; 0x70c

00004be4 <strncmp@plt>:
    4be4:	add	ip, pc, #0, 12
    4be8:	add	ip, ip, #159744	; 0x27000
    4bec:	ldr	pc, [ip, #1796]!	; 0x704

00004bf0 <kill@plt>:
    4bf0:	add	ip, pc, #0, 12
    4bf4:	add	ip, ip, #159744	; 0x27000
    4bf8:	ldr	pc, [ip, #1788]!	; 0x6fc

00004bfc <nanosleep@plt>:
    4bfc:	add	ip, pc, #0, 12
    4c00:	add	ip, ip, #159744	; 0x27000
    4c04:	ldr	pc, [ip, #1780]!	; 0x6f4

00004c08 <rb_event_next@plt>:
    4c08:	add	ip, pc, #0, 12
    4c0c:	add	ip, ip, #159744	; 0x27000
    4c10:	ldr	pc, [ip, #1772]!	; 0x6ec

00004c14 <realloc@plt>:
    4c14:	add	ip, pc, #0, 12
    4c18:	add	ip, ip, #159744	; 0x27000
    4c1c:	ldr	pc, [ip, #1764]!	; 0x6e4

00004c20 <timerfd_settime@plt>:
    4c20:	add	ip, pc, #0, 12
    4c24:	add	ip, ip, #159744	; 0x27000
    4c28:	ldr	pc, [ip, #1756]!	; 0x6dc

00004c2c <epoll_ctl@plt>:
    4c2c:	add	ip, pc, #0, 12
    4c30:	add	ip, ip, #159744	; 0x27000
    4c34:	ldr	pc, [ip, #1748]!	; 0x6d4

00004c38 <X509_free@plt>:
    4c38:	add	ip, pc, #0, 12
    4c3c:	add	ip, ip, #159744	; 0x27000
    4c40:	ldr	pc, [ip, #1740]!	; 0x6cc

00004c44 <readv@plt>:
    4c44:	add	ip, pc, #0, 12
    4c48:	add	ip, ip, #159744	; 0x27000
    4c4c:	ldr	pc, [ip, #1732]!	; 0x6c4

00004c50 <getsockopt@plt>:
    4c50:	add	ip, pc, #0, 12
    4c54:	add	ip, ip, #159744	; 0x27000
    4c58:	ldr	pc, [ip, #1724]!	; 0x6bc

00004c5c <pipe@plt>:
    4c5c:	add	ip, pc, #0, 12
    4c60:	add	ip, ip, #159744	; 0x27000
    4c64:	ldr	pc, [ip, #1716]!	; 0x6b4

00004c68 <OpenSSL_version@plt>:
    4c68:	add	ip, pc, #0, 12
    4c6c:	add	ip, ip, #159744	; 0x27000
    4c70:	ldr	pc, [ip, #1708]!	; 0x6ac

00004c74 <setsockopt@plt>:
    4c74:	add	ip, pc, #0, 12
    4c78:	add	ip, ip, #159744	; 0x27000
    4c7c:	ldr	pc, [ip, #1700]!	; 0x6a4

00004c80 <SSL_get_error@plt>:
    4c80:	add	ip, pc, #0, 12
    4c84:	add	ip, ip, #159744	; 0x27000
    4c88:	ldr	pc, [ip, #1692]!	; 0x69c

00004c8c <SSL_get_version@plt>:
    4c8c:	add	ip, pc, #0, 12
    4c90:	add	ip, ip, #159744	; 0x27000
    4c94:	ldr	pc, [ip, #1684]!	; 0x694

00004c98 <rb_radixtree_delete@plt>:
    4c98:	add	ip, pc, #0, 12
    4c9c:	add	ip, ip, #159744	; 0x27000
    4ca0:	ldr	pc, [ip, #1676]!	; 0x68c

00004ca4 <setenv@plt>:
    4ca4:	add	ip, pc, #0, 12
    4ca8:	add	ip, ip, #159744	; 0x27000
    4cac:	ldr	pc, [ip, #1668]!	; 0x684

00004cb0 <strcmp@plt>:
    4cb0:	add	ip, pc, #0, 12
    4cb4:	add	ip, ip, #159744	; 0x27000
    4cb8:	ldr	pc, [ip, #1660]!	; 0x67c

00004cbc <__errno_location@plt>:
    4cbc:	add	ip, pc, #0, 12
    4cc0:	add	ip, ip, #159744	; 0x27000
    4cc4:	ldr	pc, [ip, #1652]!	; 0x674

00004cc8 <__cxa_finalize@plt>:
    4cc8:	add	ip, pc, #0, 12
    4ccc:	add	ip, ip, #159744	; 0x27000
    4cd0:	ldr	pc, [ip, #1644]!	; 0x66c

00004cd4 <sprintf@plt>:
    4cd4:	add	ip, pc, #0, 12
    4cd8:	add	ip, ip, #159744	; 0x27000
    4cdc:	ldr	pc, [ip, #1636]!	; 0x664

00004ce0 <rb_bh_usage@plt>:
    4ce0:	add	ip, pc, #0, 12
    4ce4:	add	ip, ip, #159744	; 0x27000
    4ce8:	ldr	pc, [ip, #1628]!	; 0x65c

00004cec <SSL_CTX_set_verify@plt>:
    4cec:	add	ip, pc, #0, 12
    4cf0:	add	ip, ip, #159744	; 0x27000
    4cf4:	ldr	pc, [ip, #1620]!	; 0x654

Disassembly of section .text:

00004cf8 <call_weak_fn>:
    4cf8:	ldr	r3, [pc, #20]	; 4d14 <call_weak_fn+0x1c>
    4cfc:	ldr	r2, [pc, #20]	; 4d18 <call_weak_fn+0x20>
    4d00:	add	r3, pc, r3
    4d04:	ldr	r2, [r3, r2]
    4d08:	cmp	r2, #0
    4d0c:	bxeq	lr
    4d10:	b	44dc <__gmon_start__@plt>
    4d14:	.word	0x000272f8
    4d18:	.word	0x0000035c

00004d1c <deregister_tm_clones>:
    4d1c:	ldr	r0, [pc, #44]	; 4d50 <deregister_tm_clones+0x34>
    4d20:	ldr	r3, [pc, #44]	; 4d54 <deregister_tm_clones+0x38>
    4d24:	add	r0, pc, r0
    4d28:	add	r3, pc, r3
    4d2c:	cmp	r3, r0
    4d30:	ldr	r3, [pc, #32]	; 4d58 <deregister_tm_clones+0x3c>
    4d34:	add	r3, pc, r3
    4d38:	bxeq	lr
    4d3c:	ldr	r2, [pc, #24]	; 4d5c <deregister_tm_clones+0x40>
    4d40:	ldr	r3, [r3, r2]
    4d44:	cmp	r3, #0
    4d48:	bxeq	lr
    4d4c:	bx	r3
    4d50:	.word	0x000277a0
    4d54:	.word	0x0002779c
    4d58:	.word	0x000272c4
    4d5c:	.word	0x00000378

00004d60 <register_tm_clones>:
    4d60:	ldr	r0, [pc, #56]	; 4da0 <register_tm_clones+0x40>
    4d64:	ldr	r3, [pc, #56]	; 4da4 <register_tm_clones+0x44>
    4d68:	add	r0, pc, r0
    4d6c:	add	r3, pc, r3
    4d70:	sub	r1, r3, r0
    4d74:	ldr	r3, [pc, #44]	; 4da8 <register_tm_clones+0x48>
    4d78:	asr	r1, r1, #2
    4d7c:	add	r3, pc, r3
    4d80:	add	r1, r1, r1, lsr #31
    4d84:	asrs	r1, r1, #1
    4d88:	bxeq	lr
    4d8c:	ldr	r2, [pc, #24]	; 4dac <register_tm_clones+0x4c>
    4d90:	ldr	r3, [r3, r2]
    4d94:	cmp	r3, #0
    4d98:	bxeq	lr
    4d9c:	bx	r3
    4da0:	.word	0x0002775c
    4da4:	.word	0x00027758
    4da8:	.word	0x0002727c
    4dac:	.word	0x00000388

00004db0 <__do_global_dtors_aux>:
    4db0:	ldr	r3, [pc, #76]	; 4e04 <__do_global_dtors_aux+0x54>
    4db4:	ldr	r2, [pc, #76]	; 4e08 <__do_global_dtors_aux+0x58>
    4db8:	add	r3, pc, r3
    4dbc:	add	r2, pc, r2
    4dc0:	ldrb	r3, [r3]
    4dc4:	cmp	r3, #0
    4dc8:	bxne	lr
    4dcc:	ldr	r3, [pc, #56]	; 4e0c <__do_global_dtors_aux+0x5c>
    4dd0:	push	{r4, lr}
    4dd4:	ldr	r3, [r2, r3]
    4dd8:	cmp	r3, #0
    4ddc:	beq	4dec <__do_global_dtors_aux+0x3c>
    4de0:	ldr	r3, [pc, #40]	; 4e10 <__do_global_dtors_aux+0x60>
    4de4:	ldr	r0, [pc, r3]
    4de8:	bl	4cc8 <__cxa_finalize@plt>
    4dec:	bl	4d1c <deregister_tm_clones>
    4df0:	ldr	r3, [pc, #28]	; 4e14 <__do_global_dtors_aux+0x64>
    4df4:	mov	r2, #1
    4df8:	add	r3, pc, r3
    4dfc:	strb	r2, [r3]
    4e00:	pop	{r4, pc}
    4e04:	.word	0x00027710
    4e08:	.word	0x0002723c
    4e0c:	.word	0x00000418
    4e10:	.word	0x00027634
    4e14:	.word	0x000276d0

00004e18 <frame_dummy>:
    4e18:	b	4d60 <register_tm_clones>

00004e1c <rb_spawn_process>:
    4e1c:	strd	r4, [sp, #-20]!	; 0xffffffec
    4e20:	strd	r6, [sp, #8]
    4e24:	mov	r7, r0
    4e28:	mov	r6, r1
    4e2c:	str	lr, [sp, #16]
    4e30:	sub	sp, sp, #356	; 0x164
    4e34:	add	r4, sp, #16
    4e38:	ldr	r5, [pc, #124]	; 4ebc <rb_spawn_process+0xa0>
    4e3c:	mov	r0, r4
    4e40:	bl	46a4 <posix_spawnattr_init@plt>
    4e44:	mov	r1, #64	; 0x40
    4e48:	mov	r0, r4
    4e4c:	bl	4800 <posix_spawnattr_setflags@plt>
    4e50:	ldr	ip, [pc, #104]	; 4ec0 <rb_spawn_process+0xa4>
    4e54:	add	r5, pc, r5
    4e58:	mov	r1, r7
    4e5c:	mov	r3, r4
    4e60:	mov	r2, #0
    4e64:	add	r0, sp, #12
    4e68:	ldr	ip, [r5, ip]
    4e6c:	str	r6, [sp]
    4e70:	ldr	ip, [ip]
    4e74:	str	ip, [sp, #4]
    4e78:	bl	47b8 <posix_spawn@plt>
    4e7c:	mov	r5, r0
    4e80:	mov	r0, r4
    4e84:	bl	483c <posix_spawnattr_destroy@plt>
    4e88:	cmp	r5, #0
    4e8c:	bne	4eac <rb_spawn_process+0x90>
    4e90:	ldr	r3, [sp, #12]
    4e94:	mov	r0, r3
    4e98:	add	sp, sp, #356	; 0x164
    4e9c:	ldrd	r4, [sp]
    4ea0:	ldrd	r6, [sp, #8]
    4ea4:	add	sp, sp, #16
    4ea8:	pop	{pc}		; (ldr pc, [sp], #4)
    4eac:	bl	4cbc <__errno_location@plt>
    4eb0:	mvn	r3, #0
    4eb4:	str	r5, [r0]
    4eb8:	b	4e94 <rb_spawn_process+0x78>
    4ebc:	.word	0x000271a4
    4ec0:	.word	0x000003a0

00004ec4 <rb_gettimeofday>:
    4ec4:	b	4740 <gettimeofday@plt>

00004ec8 <rb_sleep>:
    4ec8:	mov	r3, #1000	; 0x3e8
    4ecc:	push	{lr}		; (str lr, [sp, #-4]!)
    4ed0:	sub	sp, sp, #12
    4ed4:	mul	r3, r3, r1
    4ed8:	mov	r1, #0
    4edc:	stm	sp, {r0, r3}
    4ee0:	mov	r0, sp
    4ee4:	bl	4bfc <nanosleep@plt>
    4ee8:	add	sp, sp, #12
    4eec:	pop	{pc}		; (ldr pc, [sp], #4)

00004ef0 <rb_strerror>:
    4ef0:	b	4374 <strerror@plt>

00004ef4 <rb_kill>:
    4ef4:	b	4bf0 <kill@plt>

00004ef8 <rb_setenv>:
    4ef8:	b	4ca4 <setenv@plt>

00004efc <rb_waitpid>:
    4efc:	b	4878 <waitpid@plt>

00004f00 <rb_getpid>:
    4f00:	b	4aa0 <getpid@plt>

00004f04 <rb_path_to_self>:
    4f04:	str	r4, [sp, #-8]!
    4f08:	mov	r2, #4096	; 0x1000
    4f0c:	ldr	r4, [pc, #44]	; 4f40 <rb_path_to_self+0x3c>
    4f10:	str	lr, [sp, #4]
    4f14:	ldr	r0, [pc, #40]	; 4f44 <rb_path_to_self+0x40>
    4f18:	add	r4, pc, r4
    4f1c:	mov	r1, r4
    4f20:	add	r0, pc, r0
    4f24:	bl	4ae8 <readlink@plt>
    4f28:	cmn	r0, #1
    4f2c:	movne	r0, r4
    4f30:	ldr	r4, [sp]
    4f34:	add	sp, sp, #4
    4f38:	moveq	r0, #0
    4f3c:	pop	{pc}		; (ldr pc, [sp], #4)
    4f40:	.word	0x000275b4
    4f44:	.word	0x000148a8

00004f48 <rb_init_netio_win32>:
    4f48:	str	r4, [sp, #-8]!
    4f4c:	str	lr, [sp, #4]
    4f50:	bl	4cbc <__errno_location@plt>
    4f54:	mov	r3, #38	; 0x26
    4f58:	ldr	r4, [sp]
    4f5c:	add	sp, sp, #4
    4f60:	str	r3, [r0]
    4f64:	mvn	r0, #0
    4f68:	pop	{pc}		; (ldr pc, [sp], #4)

00004f6c <rb_setselect_win32>:
    4f6c:	str	r4, [sp, #-8]!
    4f70:	str	lr, [sp, #4]
    4f74:	bl	4cbc <__errno_location@plt>
    4f78:	mov	r3, #38	; 0x26
    4f7c:	ldr	r4, [sp]
    4f80:	add	sp, sp, #4
    4f84:	str	r3, [r0]
    4f88:	pop	{pc}		; (ldr pc, [sp], #4)

00004f8c <rb_select_win32>:
    4f8c:	str	r4, [sp, #-8]!
    4f90:	str	lr, [sp, #4]
    4f94:	bl	4cbc <__errno_location@plt>
    4f98:	mov	r3, #38	; 0x26
    4f9c:	ldr	r4, [sp]
    4fa0:	add	sp, sp, #4
    4fa4:	str	r3, [r0]
    4fa8:	mvn	r0, #0
    4fac:	pop	{pc}		; (ldr pc, [sp], #4)

00004fb0 <rb_setup_fd_win32>:
    4fb0:	str	r4, [sp, #-8]!
    4fb4:	str	lr, [sp, #4]
    4fb8:	bl	4cbc <__errno_location@plt>
    4fbc:	mov	r3, #38	; 0x26
    4fc0:	ldr	r4, [sp]
    4fc4:	add	sp, sp, #4
    4fc8:	str	r3, [r0]
    4fcc:	mvn	r0, #0
    4fd0:	pop	{pc}		; (ldr pc, [sp], #4)
    4fd4:	andeq	r0, r0, r0

00004fd8 <rb_sha256_process_block>:
    4fd8:	ldr	r3, [r2, #32]
    4fdc:	lsr	ip, r1, #2
    4fe0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4fe4:	adds	r3, r3, r1
    4fe8:	ldr	r1, [r2, #8]
    4fec:	strd	r6, [sp, #8]
    4ff0:	strd	r8, [sp, #16]
    4ff4:	strd	sl, [sp, #24]
    4ff8:	str	lr, [sp, #32]
    4ffc:	sub	sp, sp, #332	; 0x14c
    5000:	str	r3, [r2, #32]
    5004:	ldr	r3, [r2, #12]
    5008:	str	r1, [sp, #28]
    500c:	str	ip, [sp, #52]	; 0x34
    5010:	ldr	ip, [r2]
    5014:	str	r3, [sp, #32]
    5018:	ldr	r3, [r2, #16]
    501c:	str	ip, [sp, #20]
    5020:	ldr	ip, [r2, #4]
    5024:	str	r2, [sp, #68]	; 0x44
    5028:	str	r3, [sp, #36]	; 0x24
    502c:	ldr	r3, [r2, #20]
    5030:	str	ip, [sp, #24]
    5034:	str	r3, [sp, #40]	; 0x28
    5038:	ldr	r3, [r2, #24]
    503c:	str	r3, [sp, #16]
    5040:	ldr	r3, [r2, #28]
    5044:	str	r3, [sp, #44]	; 0x2c
    5048:	bcc	5058 <rb_sha256_process_block+0x80>
    504c:	ldr	r3, [r2, #36]	; 0x24
    5050:	add	r3, r3, #1
    5054:	str	r3, [r2, #36]	; 0x24
    5058:	ldr	r3, [sp, #52]	; 0x34
    505c:	cmp	r3, #0
    5060:	beq	535c <rb_sha256_process_block+0x384>
    5064:	ldr	r3, [pc, #848]	; 53bc <rb_sha256_process_block+0x3e4>
    5068:	add	r2, r0, #64	; 0x40
    506c:	str	r2, [sp, #48]	; 0x30
    5070:	add	r2, sp, #68	; 0x44
    5074:	str	r2, [sp, #60]	; 0x3c
    5078:	add	r2, sp, #72	; 0x48
    507c:	add	r3, pc, r3
    5080:	str	r3, [sp, #56]	; 0x38
    5084:	add	r3, r3, #252	; 0xfc
    5088:	str	r2, [sp, #64]	; 0x40
    508c:	str	r3, [sp, #12]
    5090:	ldr	r6, [sp, #48]	; 0x30
    5094:	mov	lr, #16
    5098:	ldr	ip, [sp, #64]	; 0x40
    509c:	ldr	r0, [r6, #-64]	; 0xffffffc0
    50a0:	ldrd	r2, [r6, #-60]	; 0xffffffc4
    50a4:	ldr	r1, [r6, #-52]	; 0xffffffcc
    50a8:	rev	r0, r0
    50ac:	ldrd	r4, [r6, #-48]	; 0xffffffd0
    50b0:	rev	r2, r2
    50b4:	rev	r3, r3
    50b8:	str	r0, [sp, #72]	; 0x48
    50bc:	strd	r2, [sp, #76]	; 0x4c
    50c0:	rev	r2, r1
    50c4:	ldr	r1, [r6, #-40]	; 0xffffffd8
    50c8:	rev	r3, r4
    50cc:	ldr	r4, [r6, #-36]	; 0xffffffdc
    50d0:	strd	r2, [sp, #84]	; 0x54
    50d4:	rev	r2, r5
    50d8:	ldr	r5, [r6, #-32]	; 0xffffffe0
    50dc:	rev	r3, r1
    50e0:	ldr	r1, [r6, #-28]	; 0xffffffe4
    50e4:	strd	r2, [sp, #92]	; 0x5c
    50e8:	rev	r2, r4
    50ec:	rev	r3, r5
    50f0:	ldrd	r4, [r6, #-24]	; 0xffffffe8
    50f4:	strd	r2, [sp, #100]	; 0x64
    50f8:	rev	r2, r1
    50fc:	ldr	r1, [r6, #-16]
    5100:	rev	r3, r4
    5104:	ldr	r4, [r6, #-12]
    5108:	strd	r2, [sp, #108]	; 0x6c
    510c:	rev	r2, r5
    5110:	ldr	r5, [r6, #-8]
    5114:	rev	r3, r1
    5118:	ldr	r1, [r6, #-4]
    511c:	strd	r2, [sp, #116]	; 0x74
    5120:	rev	r2, r4
    5124:	rev	r3, r5
    5128:	strd	r2, [sp, #124]	; 0x7c
    512c:	rev	r2, r1
    5130:	str	r2, [sp, #132]	; 0x84
    5134:	ror	r1, r3, #19
    5138:	ldr	r4, [ip, #4]
    513c:	add	lr, lr, #2
    5140:	cmp	lr, #62	; 0x3e
    5144:	add	ip, ip, #8
    5148:	eor	r1, r1, r3, ror #17
    514c:	ldr	r6, [ip, #28]
    5150:	eor	r1, r1, r3, lsr #10
    5154:	ldr	r5, [ip, #32]
    5158:	ror	r3, r2, #19
    515c:	add	r1, r1, r0
    5160:	ldr	r0, [ip]
    5164:	eor	r3, r3, r2, ror #17
    5168:	add	r6, r1, r6
    516c:	ror	r1, r4, #18
    5170:	eor	r2, r3, r2, lsr #10
    5174:	eor	r3, r1, r4, ror #7
    5178:	ror	r1, r0, #7
    517c:	add	r2, r2, r5
    5180:	eor	r3, r3, r4, lsr #3
    5184:	add	r2, r2, r4
    5188:	eor	r1, r1, r0, ror #18
    518c:	add	r3, r6, r3
    5190:	eor	r1, r1, r0, lsr #3
    5194:	str	r3, [ip, #56]	; 0x38
    5198:	add	r2, r2, r1
    519c:	str	r2, [ip, #60]	; 0x3c
    51a0:	bne	5134 <rb_sha256_process_block+0x15c>
    51a4:	ldr	r8, [sp, #16]
    51a8:	ldr	r2, [sp, #60]	; 0x3c
    51ac:	ldr	r4, [sp, #312]	; 0x138
    51b0:	ldr	lr, [sp, #316]	; 0x13c
    51b4:	str	r2, [sp, #8]
    51b8:	ldr	r7, [sp, #256]	; 0x100
    51bc:	ror	ip, r4, #19
    51c0:	ldr	r2, [sp, #44]	; 0x2c
    51c4:	ror	r1, lr, #17
    51c8:	ldr	r6, [sp, #292]	; 0x124
    51cc:	eor	ip, ip, r4, ror #17
    51d0:	eor	r1, r1, lr, ror #19
    51d4:	ldr	r5, [sp, #264]	; 0x108
    51d8:	eor	ip, ip, r4, lsr #10
    51dc:	str	r2, [sp, #4]
    51e0:	eor	r4, r1, lr, lsr #10
    51e4:	ldr	fp, [sp, #296]	; 0x128
    51e8:	add	lr, r6, r7
    51ec:	ldr	r2, [sp, #260]	; 0x104
    51f0:	add	ip, ip, lr
    51f4:	ror	lr, r5, #18
    51f8:	ldr	r3, [sp, #56]	; 0x38
    51fc:	eor	lr, lr, r5, ror #7
    5200:	ldr	r6, [sp, #24]
    5204:	ror	r1, r2, #7
    5208:	eor	lr, lr, r5, lsr #3
    520c:	ldr	r5, [sp, #28]
    5210:	eor	r1, r1, r2, ror #18
    5214:	sub	r3, r3, #4
    5218:	ldr	sl, [sp, #32]
    521c:	eor	r1, r1, r2, lsr #3
    5220:	add	r2, r2, fp
    5224:	add	r2, r4, r2
    5228:	mov	r4, r3
    522c:	ldr	r0, [sp, #36]	; 0x24
    5230:	add	r1, ip, r1
    5234:	add	lr, r2, lr
    5238:	ldr	ip, [sp, #20]
    523c:	str	r1, [sp, #320]	; 0x140
    5240:	str	lr, [sp, #324]	; 0x144
    5244:	ldr	r9, [sp, #40]	; 0x28
    5248:	b	5264 <rb_sha256_process_block+0x28c>
    524c:	mov	r8, r9
    5250:	mov	r5, r6
    5254:	mov	r9, r0
    5258:	mov	r6, ip
    525c:	mov	r0, r3
    5260:	mov	ip, lr
    5264:	ldr	r2, [sp, #8]
    5268:	ror	r3, r0, #11
    526c:	bic	fp, r8, r0
    5270:	and	r1, r9, r0
    5274:	ldr	r7, [r4, #4]!
    5278:	eor	r3, r3, r0, ror #6
    527c:	eor	r1, r1, fp
    5280:	ldr	fp, [sp, #12]
    5284:	eor	r3, r3, r0, ror #25
    5288:	ldr	lr, [r2, #4]!
    528c:	cmp	fp, r4
    5290:	eor	fp, r5, r6
    5294:	and	fp, fp, ip
    5298:	add	lr, r7, lr
    529c:	str	r2, [sp, #8]
    52a0:	ror	r2, ip, #13
    52a4:	add	lr, r3, lr
    52a8:	ldr	r3, [sp, #4]
    52ac:	and	r7, r5, r6
    52b0:	eor	r2, r2, ip, ror #2
    52b4:	add	lr, lr, r1
    52b8:	eor	r7, r7, fp
    52bc:	str	r8, [sp, #4]
    52c0:	eor	r2, r2, ip, ror #22
    52c4:	add	lr, lr, r3
    52c8:	add	r7, r2, r7
    52cc:	add	r3, lr, sl
    52d0:	mov	sl, r5
    52d4:	add	lr, lr, r7
    52d8:	bne	524c <rb_sha256_process_block+0x274>
    52dc:	mov	r2, r3
    52e0:	ldr	r3, [sp, #52]	; 0x34
    52e4:	subs	r3, r3, #16
    52e8:	str	r3, [sp, #52]	; 0x34
    52ec:	ldr	r3, [sp, #20]
    52f0:	add	r3, r3, lr
    52f4:	str	r3, [sp, #20]
    52f8:	ldr	r3, [sp, #24]
    52fc:	add	r3, r3, ip
    5300:	str	r3, [sp, #24]
    5304:	ldr	r3, [sp, #28]
    5308:	add	r3, r3, r6
    530c:	str	r3, [sp, #28]
    5310:	ldr	r3, [sp, #32]
    5314:	add	r3, r3, r5
    5318:	str	r3, [sp, #32]
    531c:	ldr	r3, [sp, #36]	; 0x24
    5320:	add	r3, r3, r2
    5324:	str	r3, [sp, #36]	; 0x24
    5328:	ldr	r3, [sp, #40]	; 0x28
    532c:	add	r3, r3, r0
    5330:	str	r3, [sp, #40]	; 0x28
    5334:	ldr	r3, [sp, #16]
    5338:	add	r3, r3, r9
    533c:	str	r3, [sp, #16]
    5340:	ldr	r3, [sp, #44]	; 0x2c
    5344:	add	r3, r3, r8
    5348:	str	r3, [sp, #44]	; 0x2c
    534c:	ldr	r3, [sp, #48]	; 0x30
    5350:	add	r3, r3, #64	; 0x40
    5354:	str	r3, [sp, #48]	; 0x30
    5358:	bne	5090 <rb_sha256_process_block+0xb8>
    535c:	ldr	r2, [sp, #20]
    5360:	ldr	r3, [sp, #68]	; 0x44
    5364:	str	r2, [r3]
    5368:	ldr	r2, [sp, #24]
    536c:	str	r2, [r3, #4]
    5370:	ldr	r2, [sp, #28]
    5374:	str	r2, [r3, #8]
    5378:	ldr	r2, [sp, #32]
    537c:	str	r2, [r3, #12]
    5380:	ldr	r2, [sp, #36]	; 0x24
    5384:	str	r2, [r3, #16]
    5388:	ldr	r2, [sp, #40]	; 0x28
    538c:	str	r2, [r3, #20]
    5390:	ldr	r2, [sp, #16]
    5394:	str	r2, [r3, #24]
    5398:	ldr	r2, [sp, #44]	; 0x2c
    539c:	str	r2, [r3, #28]
    53a0:	add	sp, sp, #332	; 0x14c
    53a4:	ldrd	r4, [sp]
    53a8:	ldrd	r6, [sp, #8]
    53ac:	ldrd	r8, [sp, #16]
    53b0:	ldrd	sl, [sp, #24]
    53b4:	add	sp, sp, #32
    53b8:	pop	{pc}		; (ldr pc, [sp], #4)
    53bc:	.word	0x0001475c

000053c0 <rb_sha512_process_block>:
    53c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    53c4:	mov	r3, #0
    53c8:	mov	ip, r0
    53cc:	ldr	r4, [r2]
    53d0:	strd	r6, [sp, #8]
    53d4:	strd	r8, [sp, #16]
    53d8:	strd	sl, [sp, #24]
    53dc:	str	lr, [sp, #32]
    53e0:	sub	sp, sp, #820	; 0x334
    53e4:	mov	lr, r2
    53e8:	ldrd	r6, [r2, #64]	; 0x40
    53ec:	str	r4, [sp, #100]	; 0x64
    53f0:	ldr	r4, [lr, #4]
    53f4:	str	r2, [sp, #172]	; 0xac
    53f8:	mov	r2, r1
    53fc:	lsr	r1, r1, #3
    5400:	str	r4, [sp, #104]	; 0x68
    5404:	adds	r4, r6, r2
    5408:	ldr	r2, [lr, #8]
    540c:	adcs	r5, r7, r3
    5410:	movcs	r0, #1
    5414:	movcc	r0, #0
    5418:	str	r2, [sp, #108]	; 0x6c
    541c:	ldr	r2, [lr, #12]
    5420:	str	r1, [sp, #148]	; 0x94
    5424:	mov	r1, #0
    5428:	str	r2, [sp, #112]	; 0x70
    542c:	ldr	r2, [lr, #16]
    5430:	str	r2, [sp, #116]	; 0x74
    5434:	ldr	r2, [lr, #20]
    5438:	str	r2, [sp, #120]	; 0x78
    543c:	ldr	r2, [lr, #24]
    5440:	str	r2, [sp, #84]	; 0x54
    5444:	ldr	r2, [lr, #28]
    5448:	str	r2, [sp, #88]	; 0x58
    544c:	ldr	r2, [lr, #32]
    5450:	str	r2, [sp, #92]	; 0x5c
    5454:	ldr	r2, [lr, #36]	; 0x24
    5458:	str	r2, [sp, #96]	; 0x60
    545c:	ldr	r2, [lr, #40]	; 0x28
    5460:	str	r2, [sp, #76]	; 0x4c
    5464:	ldr	r2, [lr, #44]	; 0x2c
    5468:	str	r2, [sp, #80]	; 0x50
    546c:	ldr	r2, [lr, #48]	; 0x30
    5470:	ldr	r3, [lr, #60]	; 0x3c
    5474:	str	r2, [sp, #124]	; 0x7c
    5478:	ldr	r2, [lr, #52]	; 0x34
    547c:	str	r2, [sp, #128]	; 0x80
    5480:	str	r3, [sp, #136]	; 0x88
    5484:	orrs	r3, r0, r1
    5488:	ldr	r2, [lr, #56]	; 0x38
    548c:	ldr	r1, [sp, #172]	; 0xac
    5490:	str	r2, [sp, #132]	; 0x84
    5494:	strd	r4, [r1, #64]	; 0x40
    5498:	beq	54b4 <rb_sha512_process_block+0xf4>
    549c:	ldr	r3, [r1, #72]	; 0x48
    54a0:	ldr	r2, [r1, #76]	; 0x4c
    54a4:	adds	r3, r3, #1
    54a8:	adc	r2, r2, #0
    54ac:	str	r3, [r1, #72]	; 0x48
    54b0:	str	r2, [r1, #76]	; 0x4c
    54b4:	ldr	r3, [sp, #148]	; 0x94
    54b8:	cmp	r3, #0
    54bc:	beq	5c94 <rb_sha512_process_block+0x8d4>
    54c0:	add	r2, ip, #128	; 0x80
    54c4:	ldr	r3, [pc, #2152]	; 5d34 <rb_sha512_process_block+0x974>
    54c8:	str	r2, [sp, #140]	; 0x8c
    54cc:	add	r2, sp, #176	; 0xb0
    54d0:	str	r2, [sp, #168]	; 0xa8
    54d4:	add	r2, sp, #784	; 0x310
    54d8:	add	r3, pc, r3
    54dc:	str	r2, [sp, #160]	; 0xa0
    54e0:	add	r2, sp, #688	; 0x2b0
    54e4:	str	r2, [sp, #72]	; 0x48
    54e8:	add	r2, sp, #800	; 0x320
    54ec:	str	r3, [sp, #156]	; 0x9c
    54f0:	add	r3, r3, #888	; 0x378
    54f4:	str	r2, [sp, #144]	; 0x90
    54f8:	add	r2, sp, #672	; 0x2a0
    54fc:	str	r3, [sp, #64]	; 0x40
    5500:	str	r2, [sp, #152]	; 0x98
    5504:	add	r2, sp, #752	; 0x2f0
    5508:	str	r2, [sp, #68]	; 0x44
    550c:	add	r2, sp, #168	; 0xa8
    5510:	str	r2, [sp, #164]	; 0xa4
    5514:	ldr	r5, [sp, #140]	; 0x8c
    5518:	mov	fp, #16
    551c:	ldr	lr, [sp, #168]	; 0xa8
    5520:	ldr	r9, [r5, #-128]	; 0xffffff80
    5524:	ldrd	r2, [r5, #-120]	; 0xffffff88
    5528:	mov	r4, lr
    552c:	ldr	r1, [r5, #-112]	; 0xffffff90
    5530:	rev	r9, r9
    5534:	ldr	r0, [r5, #-108]	; 0xffffff94
    5538:	rev	r2, r2
    553c:	rev	r3, r3
    5540:	str	r9, [lr, #4]
    5544:	ldr	ip, [r5, #-104]	; 0xffffff98
    5548:	str	r3, [lr, #8]
    554c:	str	r2, [lr, #12]
    5550:	rev	r2, r1
    5554:	rev	r3, r0
    5558:	ldr	sl, [r5, #-124]	; 0xffffff84
    555c:	ldr	r1, [r5, #-100]	; 0xffffff9c
    5560:	str	r2, [lr, #20]
    5564:	rev	r2, ip
    5568:	ldr	r0, [r5, #-96]	; 0xffffffa0
    556c:	str	r3, [lr, #16]
    5570:	rev	sl, sl
    5574:	ldr	ip, [r5, #-92]	; 0xffffffa4
    5578:	rev	r3, r1
    557c:	str	sl, [lr]
    5580:	ldr	r1, [r5, #-88]	; 0xffffffa8
    5584:	str	r3, [lr, #24]
    5588:	str	r2, [lr, #28]
    558c:	rev	r2, r0
    5590:	rev	r3, ip
    5594:	ldr	r0, [r5, #-84]	; 0xffffffac
    5598:	ldr	ip, [r5, #-80]	; 0xffffffb0
    559c:	str	r2, [lr, #36]	; 0x24
    55a0:	rev	r2, r1
    55a4:	ldr	r1, [r5, #-76]	; 0xffffffb4
    55a8:	str	r3, [lr, #32]
    55ac:	rev	r3, r0
    55b0:	ldr	r0, [r5, #-72]	; 0xffffffb8
    55b4:	str	r2, [lr, #44]	; 0x2c
    55b8:	rev	r2, ip
    55bc:	ldr	ip, [r5, #-68]	; 0xffffffbc
    55c0:	str	r3, [lr, #40]	; 0x28
    55c4:	rev	r3, r1
    55c8:	str	r3, [lr, #48]	; 0x30
    55cc:	str	r2, [lr, #52]	; 0x34
    55d0:	rev	r2, r0
    55d4:	rev	r3, ip
    55d8:	str	r2, [lr, #60]	; 0x3c
    55dc:	str	r3, [lr, #56]	; 0x38
    55e0:	ldr	r3, [r5, #-64]	; 0xffffffc0
    55e4:	ldr	r2, [r5, #-60]	; 0xffffffc4
    55e8:	ldr	r1, [r5, #-56]	; 0xffffffc8
    55ec:	rev	r3, r3
    55f0:	ldr	r0, [r5, #-52]	; 0xffffffcc
    55f4:	rev	r2, r2
    55f8:	ldr	ip, [r5, #-48]	; 0xffffffd0
    55fc:	strd	r2, [lr, #64]	; 0x40
    5600:	rev	r3, r1
    5604:	ldr	r1, [r5, #-44]	; 0xffffffd4
    5608:	rev	r2, r0
    560c:	ldr	r0, [r5, #-40]	; 0xffffffd8
    5610:	strd	r2, [lr, #72]	; 0x48
    5614:	rev	r3, ip
    5618:	ldr	ip, [r5, #-36]	; 0xffffffdc
    561c:	rev	r2, r1
    5620:	ldr	r1, [r5, #-32]	; 0xffffffe0
    5624:	strd	r2, [lr, #80]	; 0x50
    5628:	rev	r3, r0
    562c:	ldr	r0, [r5, #-28]	; 0xffffffe4
    5630:	rev	r2, ip
    5634:	ldr	ip, [r5, #-24]	; 0xffffffe8
    5638:	strd	r2, [lr, #88]	; 0x58
    563c:	rev	r3, r1
    5640:	ldr	r1, [r5, #-20]	; 0xffffffec
    5644:	rev	r2, r0
    5648:	ldr	r0, [r5, #-16]
    564c:	strd	r2, [lr, #96]	; 0x60
    5650:	rev	r3, ip
    5654:	ldr	ip, [r5, #-12]
    5658:	rev	r2, r1
    565c:	ldr	lr, [r5, #-8]
    5660:	str	r2, [r4, #104]	; 0x68
    5664:	ldr	r2, [r5, #-4]
    5668:	rev	r1, ip
    566c:	str	r3, [r4, #108]	; 0x6c
    5670:	rev	r3, r0
    5674:	rev	lr, lr
    5678:	str	r1, [r4, #112]	; 0x70
    567c:	str	r3, [r4, #116]	; 0x74
    5680:	rev	r2, r2
    5684:	str	r2, [r4, #120]	; 0x78
    5688:	str	lr, [r4, #124]	; 0x7c
    568c:	lsr	r0, r3, #19
    5690:	ldr	r6, [r4, #8]
    5694:	add	fp, fp, #2
    5698:	lsl	r5, r3, #3
    569c:	add	r4, r4, #16
    56a0:	lsr	r7, r1, #19
    56a4:	orr	r5, r5, r1, lsr #29
    56a8:	lsl	ip, r1, #3
    56ac:	orr	r0, r0, r1, lsl #13
    56b0:	lsr	r1, r1, #6
    56b4:	orr	r7, r7, r3, lsl #13
    56b8:	eor	r0, r0, r5
    56bc:	ldr	r5, [r4, #-4]
    56c0:	orr	ip, ip, r3, lsr #29
    56c4:	orr	r1, r1, r3, lsl #26
    56c8:	eor	ip, ip, r7
    56cc:	eor	r0, r0, r3, lsr #6
    56d0:	ldr	r7, [r4, #56]	; 0x38
    56d4:	eor	r3, ip, r1
    56d8:	lsr	r1, r6, #1
    56dc:	lsr	ip, r6, #8
    56e0:	adds	r3, r3, sl
    56e4:	ldr	sl, [r4]
    56e8:	orr	r1, r1, r5, lsl #31
    56ec:	adc	r0, r0, r9
    56f0:	orr	ip, ip, r5, lsl #24
    56f4:	ldr	r9, [r4, #4]
    56f8:	lsr	r8, r5, #1
    56fc:	adds	r3, r3, r7
    5700:	eor	r1, r1, ip
    5704:	lsr	ip, r5, #8
    5708:	ldr	r7, [r4, #60]	; 0x3c
    570c:	orr	r8, r8, r6, lsl #31
    5710:	orr	ip, ip, r6, lsl #24
    5714:	eor	ip, ip, r8
    5718:	lsr	r8, r6, #7
    571c:	adc	r0, r0, r7
    5720:	eor	ip, ip, r5, lsr #7
    5724:	orr	r8, r8, r5, lsl #25
    5728:	lsl	r7, r2, #3
    572c:	eor	r1, r1, r8
    5730:	lsr	r8, r2, #19
    5734:	adds	r1, r3, r1
    5738:	orr	r7, r7, lr, lsr #29
    573c:	adc	r3, r0, ip
    5740:	orr	r0, r8, lr, lsl #13
    5744:	lsl	ip, lr, #3
    5748:	str	r1, [r4, #112]	; 0x70
    574c:	eor	r7, r7, r0
    5750:	lsr	r0, r2, #6
    5754:	str	r3, [r4, #116]	; 0x74
    5758:	orr	r8, ip, r2, lsr #29
    575c:	orr	r0, r0, lr, lsl #26
    5760:	lsr	ip, lr, #19
    5764:	eor	r7, r7, r0
    5768:	ldr	r0, [r4, #64]	; 0x40
    576c:	orr	r2, ip, r2, lsl #13
    5770:	ldr	ip, [r4, #68]	; 0x44
    5774:	eor	r2, r2, r8
    5778:	lsr	r8, sl, #8
    577c:	eor	lr, r2, lr, lsr #6
    5780:	adds	r7, r7, r0
    5784:	lsr	r0, sl, #1
    5788:	orr	r2, r8, r9, lsl #24
    578c:	orr	r0, r0, r9, lsl #31
    5790:	adc	lr, lr, ip
    5794:	adds	r6, r7, r6
    5798:	lsr	ip, r9, #8
    579c:	adc	r5, lr, r5
    57a0:	lsr	r7, r9, #1
    57a4:	eor	r2, r2, r0
    57a8:	lsr	r0, sl, #7
    57ac:	orr	lr, ip, sl, lsl #24
    57b0:	orr	ip, r7, sl, lsl #31
    57b4:	orr	r0, r0, r9, lsl #25
    57b8:	eor	lr, lr, ip
    57bc:	eor	lr, lr, r9, lsr #7
    57c0:	eor	r2, r2, r0
    57c4:	adds	r2, r6, r2
    57c8:	adc	lr, r5, lr
    57cc:	cmp	fp, #78	; 0x4e
    57d0:	str	r2, [r4, #120]	; 0x78
    57d4:	str	lr, [r4, #124]	; 0x7c
    57d8:	bne	568c <rb_sha512_process_block+0x2cc>
    57dc:	ldr	r8, [sp, #68]	; 0x44
    57e0:	ldrd	r2, [sp, #156]	; 0x9c
    57e4:	ldr	r1, [sp, #84]	; 0x54
    57e8:	ldr	r9, [r8, #-8]
    57ec:	add	r2, r2, #248	; 0xf8
    57f0:	ldr	r4, [r3]
    57f4:	str	r1, [sp, #48]	; 0x30
    57f8:	ldr	r0, [r3, #4]
    57fc:	ldr	r1, [sp, #88]	; 0x58
    5800:	ldr	r3, [sp, #124]	; 0x7c
    5804:	ldr	r5, [sp, #144]	; 0x90
    5808:	ldr	ip, [sp, #92]	; 0x5c
    580c:	strd	r2, [sp, #8]
    5810:	str	r1, [sp, #52]	; 0x34
    5814:	lsr	r1, r4, #6
    5818:	ldr	r3, [sp, #128]	; 0x80
    581c:	orr	r1, r1, r0, lsl #26
    5820:	ldr	r2, [sp, #164]	; 0xa4
    5824:	ldr	sl, [r5, #-8]
    5828:	str	r3, [sp, #16]
    582c:	ldr	r3, [sp, #76]	; 0x4c
    5830:	ldr	lr, [sp, #96]	; 0x60
    5834:	str	r3, [sp, #28]
    5838:	str	r2, [sp, #36]	; 0x24
    583c:	ldr	r3, [sp, #80]	; 0x50
    5840:	ldr	r2, [sp, #132]	; 0x84
    5844:	str	r3, [sp, #32]
    5848:	ldr	r3, [sp, #72]	; 0x48
    584c:	str	r2, [sp, #40]	; 0x28
    5850:	ldr	r2, [sp, #136]	; 0x88
    5854:	ldr	r7, [r3, #-8]
    5858:	str	r2, [sp, #44]	; 0x2c
    585c:	lsl	r2, r4, #3
    5860:	ldr	r6, [r3, #-4]
    5864:	lsr	r3, r4, #19
    5868:	orr	r2, r2, r0, lsr #29
    586c:	orr	r3, r3, r0, lsl #13
    5870:	eor	r3, r3, r2
    5874:	ldr	r2, [sp, #152]	; 0x98
    5878:	eor	r5, r3, r1
    587c:	lsr	r3, r0, #19
    5880:	ldr	r1, [r8, #-4]
    5884:	orr	r3, r3, r4, lsl #13
    5888:	ldr	fp, [r2]
    588c:	lsl	r2, r0, #3
    5890:	orr	r2, r2, r4, lsr #29
    5894:	str	r1, [sp]
    5898:	ldr	r4, [sp, #144]	; 0x90
    589c:	eor	r3, r3, r2
    58a0:	lsr	r2, r7, #1
    58a4:	eor	r0, r3, r0, lsr #6
    58a8:	ldr	r3, [sp, #72]	; 0x48
    58ac:	orr	r2, r2, r6, lsl #31
    58b0:	ldr	r1, [sp, #152]	; 0x98
    58b4:	ldr	r8, [r4, #-4]
    58b8:	adds	r4, fp, r9
    58bc:	ldr	fp, [r3]
    58c0:	ldr	r3, [sp]
    58c4:	ldr	r9, [r1, #4]
    58c8:	lsr	r1, r7, #8
    58cc:	orr	r1, r1, r6, lsl #24
    58d0:	eor	r1, r1, r2
    58d4:	lsr	r2, r6, #8
    58d8:	adc	r3, r9, r3
    58dc:	adds	r4, r4, r5
    58e0:	ldr	r9, [sp, #72]	; 0x48
    58e4:	adc	r5, r3, r0
    58e8:	orr	r0, r2, r7, lsl #24
    58ec:	ldr	r2, [sp, #68]	; 0x44
    58f0:	lsr	r3, r7, #7
    58f4:	orr	r3, r3, r6, lsl #25
    58f8:	ldr	r9, [r9, #4]
    58fc:	eor	r1, r1, r3
    5900:	ldr	r2, [r2]
    5904:	adds	r1, r4, r1
    5908:	ldr	r3, [sp, #68]	; 0x44
    590c:	ldr	r4, [sp, #144]	; 0x90
    5910:	str	r2, [sp]
    5914:	lsr	r2, r6, #1
    5918:	orr	r2, r2, r7, lsl #31
    591c:	eor	r2, r2, r0
    5920:	ldr	r0, [r3, #4]
    5924:	eor	r2, r2, r6, lsr #7
    5928:	str	r1, [r4]
    592c:	ldr	r3, [sp]
    5930:	lsl	r1, sl, #3
    5934:	adc	r2, r5, r2
    5938:	orr	r1, r1, r8, lsr #29
    593c:	str	r2, [r4, #4]
    5940:	lsl	r2, r8, #3
    5944:	adds	r5, r7, r3
    5948:	lsr	r3, sl, #19
    594c:	ldr	r7, [sp, #120]	; 0x78
    5950:	adc	r6, r6, r0
    5954:	orr	r4, r2, sl, lsr #29
    5958:	orr	r3, r3, r8, lsl #13
    595c:	lsr	r0, r8, #19
    5960:	eor	r1, r1, r3
    5964:	lsr	r3, sl, #6
    5968:	lsr	r2, fp, #8
    596c:	str	r7, [sp, #4]
    5970:	orr	r3, r3, r8, lsl #26
    5974:	orr	r2, r2, r9, lsl #24
    5978:	eor	r3, r3, r1
    597c:	orr	r0, r0, sl, lsl #13
    5980:	adds	r5, r3, r5
    5984:	lsr	r3, fp, #1
    5988:	eor	r0, r0, r4
    598c:	lsr	r1, r9, #8
    5990:	orr	r3, r3, r9, lsl #31
    5994:	orr	r1, r1, fp, lsl #24
    5998:	eor	r4, r2, r3
    599c:	lsr	r3, r9, #1
    59a0:	lsr	r2, fp, #7
    59a4:	orr	r3, r3, fp, lsl #31
    59a8:	orr	r2, r2, r9, lsl #25
    59ac:	eor	r3, r3, r1
    59b0:	ldr	r1, [sp, #116]	; 0x74
    59b4:	eor	r0, r0, r8, lsr #6
    59b8:	eor	r2, r2, r4
    59bc:	eor	r3, r3, r9, lsr #7
    59c0:	adc	r0, r0, r6
    59c4:	adds	r2, r5, r2
    59c8:	ldrd	r4, [sp, #100]	; 0x64
    59cc:	adc	r3, r0, r3
    59d0:	str	r1, [sp]
    59d4:	ldr	r1, [sp, #108]	; 0x6c
    59d8:	str	r2, [sp, #808]	; 0x328
    59dc:	str	r1, [sp, #20]
    59e0:	ldr	r1, [sp, #112]	; 0x70
    59e4:	str	r3, [sp, #812]	; 0x32c
    59e8:	str	r1, [sp, #24]
    59ec:	b	5a30 <rb_sha512_process_block+0x670>
    59f0:	ldr	r3, [sp, #28]
    59f4:	str	r3, [sp, #12]
    59f8:	ldr	r3, [sp, #32]
    59fc:	str	ip, [sp, #28]
    5a00:	mov	ip, r0
    5a04:	str	r3, [sp, #16]
    5a08:	ldr	r3, [sp, #20]
    5a0c:	str	lr, [sp, #32]
    5a10:	mov	lr, fp
    5a14:	str	r3, [sp]
    5a18:	ldr	r3, [sp, #24]
    5a1c:	str	r4, [sp, #20]
    5a20:	mov	r4, r1
    5a24:	str	r5, [sp, #24]
    5a28:	mov	r5, r9
    5a2c:	str	r3, [sp, #4]
    5a30:	ldr	r1, [sp, #8]
    5a34:	lsr	r9, ip, #14
    5a38:	lsr	r8, ip, #18
    5a3c:	ldr	r0, [sp, #12]
    5a40:	orr	sl, r9, lr, lsl #18
    5a44:	orr	r8, r8, lr, lsl #14
    5a48:	ldr	r7, [sp, #28]
    5a4c:	eor	r9, sl, r8
    5a50:	lsr	r8, lr, #14
    5a54:	ldrd	r2, [r1, #8]!
    5a58:	lsr	sl, lr, #18
    5a5c:	bic	fp, r0, ip
    5a60:	orr	r8, r8, ip, lsl #18
    5a64:	ldr	r6, [sp, #36]	; 0x24
    5a68:	orr	sl, sl, ip, lsl #14
    5a6c:	eor	sl, sl, r8
    5a70:	str	r1, [sp, #8]
    5a74:	ldrd	r0, [r6, #8]!
    5a78:	str	r6, [sp, #36]	; 0x24
    5a7c:	lsl	r6, ip, #23
    5a80:	strd	r0, [sp, #56]	; 0x38
    5a84:	adds	r0, r2, r0
    5a88:	lsl	r2, lr, #23
    5a8c:	orr	r6, r6, lr, lsr #9
    5a90:	ldr	r1, [sp, #60]	; 0x3c
    5a94:	orr	r2, r2, ip, lsr #9
    5a98:	eor	r6, r6, r9
    5a9c:	ldr	r9, [sp, #16]
    5aa0:	eor	sl, sl, r2
    5aa4:	ldr	r2, [sp, #32]
    5aa8:	adc	r1, r3, r1
    5aac:	adds	r6, r6, r0
    5ab0:	and	r0, ip, r7
    5ab4:	adc	sl, sl, r1
    5ab8:	lsl	r1, r4, #25
    5abc:	eor	r3, fp, r0
    5ac0:	bic	r0, r9, lr
    5ac4:	lsl	fp, r4, #30
    5ac8:	lsr	r9, r4, #28
    5acc:	adds	r3, r6, r3
    5ad0:	ldr	r7, [sp, #20]
    5ad4:	and	r8, lr, r2
    5ad8:	orr	r6, fp, r5, lsr #2
    5adc:	eor	r2, r0, r8
    5ae0:	orr	r9, r9, r5, lsl #4
    5ae4:	adc	r2, sl, r2
    5ae8:	ldr	sl, [sp, #40]	; 0x28
    5aec:	orr	r1, r1, r5, lsr #7
    5af0:	eor	r9, r9, r6
    5af4:	lsl	fp, r5, #30
    5af8:	ldr	r6, [sp, #44]	; 0x2c
    5afc:	eor	r1, r1, r9
    5b00:	orr	fp, fp, r4, lsr #2
    5b04:	ldm	sp, {r0, r9}
    5b08:	adds	r3, r3, sl
    5b0c:	lsl	sl, r5, #25
    5b10:	adc	r2, r2, r6
    5b14:	ldr	r6, [sp]
    5b18:	orr	sl, sl, r4, lsr #7
    5b1c:	eor	r8, r7, r0
    5b20:	lsr	r0, r5, #28
    5b24:	and	r8, r8, r4
    5b28:	orr	r0, r0, r4, lsl #4
    5b2c:	and	r6, r7, r6
    5b30:	ldr	r7, [sp, #24]
    5b34:	eor	r6, r6, r8
    5b38:	eor	fp, fp, r0
    5b3c:	adds	r1, r1, r6
    5b40:	ldm	sp, {r6, r8}
    5b44:	eor	fp, fp, sl
    5b48:	ldr	r0, [sp, #12]
    5b4c:	and	r9, r7, r9
    5b50:	eor	r8, r7, r8
    5b54:	ldr	r7, [sp, #48]	; 0x30
    5b58:	and	r8, r8, r5
    5b5c:	eor	r9, r9, r8
    5b60:	str	r0, [sp, #40]	; 0x28
    5b64:	adc	r9, fp, r9
    5b68:	ldr	r8, [sp, #16]
    5b6c:	adds	r0, r3, r7
    5b70:	ldr	r7, [sp, #52]	; 0x34
    5b74:	str	r8, [sp, #44]	; 0x2c
    5b78:	str	r6, [sp, #48]	; 0x30
    5b7c:	adc	fp, r2, r7
    5b80:	adds	r1, r3, r1
    5b84:	ldr	r3, [sp, #8]
    5b88:	adc	r9, r2, r9
    5b8c:	ldr	r2, [sp, #64]	; 0x40
    5b90:	cmp	r3, r2
    5b94:	ldr	r3, [sp, #4]
    5b98:	str	r3, [sp, #52]	; 0x34
    5b9c:	bne	59f0 <rb_sha512_process_block+0x630>
    5ba0:	mov	r7, r3
    5ba4:	ldr	r2, [sp, #20]
    5ba8:	ldr	r3, [sp, #100]	; 0x64
    5bac:	adds	r3, r3, r1
    5bb0:	str	r3, [sp, #100]	; 0x64
    5bb4:	ldr	r3, [sp, #140]	; 0x8c
    5bb8:	add	r3, r3, #128	; 0x80
    5bbc:	str	r3, [sp, #140]	; 0x8c
    5bc0:	ldr	r3, [sp, #104]	; 0x68
    5bc4:	adc	r3, r3, r9
    5bc8:	str	r3, [sp, #104]	; 0x68
    5bcc:	ldr	r3, [sp, #108]	; 0x6c
    5bd0:	adds	r3, r3, r4
    5bd4:	str	r3, [sp, #108]	; 0x6c
    5bd8:	ldr	r3, [sp, #112]	; 0x70
    5bdc:	adc	r3, r3, r5
    5be0:	str	r3, [sp, #112]	; 0x70
    5be4:	ldr	r3, [sp, #116]	; 0x74
    5be8:	adds	r3, r3, r2
    5bec:	ldr	r2, [sp, #24]
    5bf0:	str	r3, [sp, #116]	; 0x74
    5bf4:	ldr	r3, [sp, #120]	; 0x78
    5bf8:	adc	r3, r3, r2
    5bfc:	ldr	r2, [sp, #28]
    5c00:	str	r3, [sp, #120]	; 0x78
    5c04:	ldr	r3, [sp, #84]	; 0x54
    5c08:	adds	r3, r3, r6
    5c0c:	str	r3, [sp, #84]	; 0x54
    5c10:	ldr	r3, [sp, #88]	; 0x58
    5c14:	adc	r3, r3, r7
    5c18:	str	r3, [sp, #88]	; 0x58
    5c1c:	ldr	r3, [sp, #92]	; 0x5c
    5c20:	adds	r3, r3, r0
    5c24:	str	r3, [sp, #92]	; 0x5c
    5c28:	ldr	r3, [sp, #96]	; 0x60
    5c2c:	adc	r3, r3, fp
    5c30:	str	r3, [sp, #96]	; 0x60
    5c34:	ldr	r3, [sp, #76]	; 0x4c
    5c38:	adds	r3, r3, ip
    5c3c:	str	r3, [sp, #76]	; 0x4c
    5c40:	ldr	r3, [sp, #80]	; 0x50
    5c44:	adc	r3, r3, lr
    5c48:	str	r3, [sp, #80]	; 0x50
    5c4c:	ldr	r3, [sp, #124]	; 0x7c
    5c50:	adds	r3, r3, r2
    5c54:	str	r3, [sp, #124]	; 0x7c
    5c58:	ldr	r3, [sp, #128]	; 0x80
    5c5c:	ldr	r2, [sp, #32]
    5c60:	adc	r3, r3, r2
    5c64:	ldr	r2, [sp, #12]
    5c68:	str	r3, [sp, #128]	; 0x80
    5c6c:	ldr	r3, [sp, #132]	; 0x84
    5c70:	adds	r3, r3, r2
    5c74:	str	r3, [sp, #132]	; 0x84
    5c78:	ldr	r3, [sp, #136]	; 0x88
    5c7c:	adc	r3, r3, r8
    5c80:	str	r3, [sp, #136]	; 0x88
    5c84:	ldr	r3, [sp, #148]	; 0x94
    5c88:	subs	r3, r3, #16
    5c8c:	str	r3, [sp, #148]	; 0x94
    5c90:	bne	5514 <rb_sha512_process_block+0x154>
    5c94:	ldr	r2, [sp, #100]	; 0x64
    5c98:	ldr	r3, [sp, #172]	; 0xac
    5c9c:	str	r2, [r3]
    5ca0:	ldr	r2, [sp, #104]	; 0x68
    5ca4:	str	r2, [r3, #4]
    5ca8:	ldr	r2, [sp, #108]	; 0x6c
    5cac:	str	r2, [r3, #8]
    5cb0:	ldr	r2, [sp, #112]	; 0x70
    5cb4:	str	r2, [r3, #12]
    5cb8:	ldr	r2, [sp, #116]	; 0x74
    5cbc:	str	r2, [r3, #16]
    5cc0:	ldr	r2, [sp, #120]	; 0x78
    5cc4:	str	r2, [r3, #20]
    5cc8:	ldr	r2, [sp, #84]	; 0x54
    5ccc:	str	r2, [r3, #24]
    5cd0:	ldr	r2, [sp, #88]	; 0x58
    5cd4:	str	r2, [r3, #28]
    5cd8:	ldr	r2, [sp, #92]	; 0x5c
    5cdc:	str	r2, [r3, #32]
    5ce0:	ldr	r2, [sp, #96]	; 0x60
    5ce4:	str	r2, [r3, #36]	; 0x24
    5ce8:	ldr	r2, [sp, #76]	; 0x4c
    5cec:	str	r2, [r3, #40]	; 0x28
    5cf0:	ldr	r2, [sp, #80]	; 0x50
    5cf4:	str	r2, [r3, #44]	; 0x2c
    5cf8:	ldr	r2, [sp, #124]	; 0x7c
    5cfc:	str	r2, [r3, #48]	; 0x30
    5d00:	ldr	r2, [sp, #128]	; 0x80
    5d04:	str	r2, [r3, #52]	; 0x34
    5d08:	ldr	r2, [sp, #132]	; 0x84
    5d0c:	str	r2, [r3, #56]	; 0x38
    5d10:	ldr	r2, [sp, #136]	; 0x88
    5d14:	str	r2, [r3, #60]	; 0x3c
    5d18:	add	sp, sp, #820	; 0x334
    5d1c:	ldrd	r4, [sp]
    5d20:	ldrd	r6, [sp, #8]
    5d24:	ldrd	r8, [sp, #16]
    5d28:	ldrd	sl, [sp, #24]
    5d2c:	add	sp, sp, #32
    5d30:	pop	{pc}		; (ldr pc, [sp], #4)
    5d34:	.word	0x00014300

00005d38 <MD5Transform>:
    5d38:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5d3c:	movw	r2, #42104	; 0xa478
    5d40:	movt	r2, #55146	; 0xd76a
    5d44:	ldm	r0, {r4, ip}
    5d48:	movw	r5, #38145	; 0x9501
    5d4c:	movt	r5, #64838	; 0xfd46
    5d50:	ldr	r3, [r0, #8]
    5d54:	strd	r6, [sp, #8]
    5d58:	movw	r7, #28891	; 0x70db
    5d5c:	movt	r7, #9248	; 0x2420
    5d60:	strd	r8, [sp, #16]
    5d64:	movw	r8, #46934	; 0xb756
    5d68:	movt	r8, #59591	; 0xe8c7
    5d6c:	strd	sl, [sp, #24]
    5d70:	movw	r6, #52974	; 0xceee
    5d74:	movt	r6, #49597	; 0xc1bd
    5d78:	str	lr, [sp, #32]
    5d7c:	sub	sp, sp, #148	; 0x94
    5d80:	movw	sl, #50730	; 0xc62a
    5d84:	movt	sl, #18311	; 0x4787
    5d88:	ldr	fp, [r1]
    5d8c:	movw	r9, #17939	; 0x4613
    5d90:	movt	r9, #43056	; 0xa830
    5d94:	str	ip, [sp]
    5d98:	ldr	lr, [r0, #12]
    5d9c:	str	r4, [sp, #64]	; 0x40
    5da0:	ldr	r4, [r1, #8]
    5da4:	str	r3, [sp, #24]
    5da8:	str	fp, [sp, #60]	; 0x3c
    5dac:	movw	fp, #4015	; 0xfaf
    5db0:	movt	fp, #62844	; 0xf57c
    5db4:	eor	r3, r3, lr
    5db8:	and	r3, r3, ip
    5dbc:	str	r0, [sp, #68]	; 0x44
    5dc0:	movw	r0, #39128	; 0x98d8
    5dc4:	movt	r0, #27008	; 0x6980
    5dc8:	str	lr, [sp, #56]	; 0x38
    5dcc:	ldr	lr, [sp, #60]	; 0x3c
    5dd0:	str	r4, [sp, #8]
    5dd4:	movw	r4, #55230	; 0xd7be
    5dd8:	movt	r4, #35164	; 0x895c
    5ddc:	str	r0, [sp, #40]	; 0x28
    5de0:	ldr	r0, [sp, #24]
    5de4:	str	r4, [sp, #52]	; 0x34
    5de8:	add	r2, lr, r2
    5dec:	ldr	lr, [r1, #4]
    5df0:	ldr	r4, [sp, #64]	; 0x40
    5df4:	eor	r0, ip, r0
    5df8:	ldr	ip, [sp, #56]	; 0x38
    5dfc:	str	lr, [sp, #4]
    5e00:	movw	lr, #63407	; 0xf7af
    5e04:	movt	lr, #35652	; 0x8b44
    5e08:	add	r2, r2, r4
    5e0c:	ldr	r4, [sp, #4]
    5e10:	eor	r3, r3, ip
    5e14:	add	r3, r3, r2
    5e18:	ldr	r2, [r1, #12]
    5e1c:	add	r8, r4, r8
    5e20:	add	r8, r8, ip
    5e24:	ldr	ip, [r1, #16]
    5e28:	str	r2, [sp, #12]
    5e2c:	movw	r2, #4386	; 0x1122
    5e30:	movt	r2, #27536	; 0x6b90
    5e34:	str	r2, [sp, #72]	; 0x48
    5e38:	ldr	r2, [sp]
    5e3c:	str	ip, [sp, #16]
    5e40:	movw	ip, #29075	; 0x7193
    5e44:	movt	ip, #64920	; 0xfd98
    5e48:	ldr	r4, [r1, #20]
    5e4c:	add	r3, r2, r3, ror #25
    5e50:	str	ip, [sp, #76]	; 0x4c
    5e54:	and	r0, r0, r3
    5e58:	eor	r2, r2, r3
    5e5c:	ldr	ip, [sp, #24]
    5e60:	str	r4, [sp, #20]
    5e64:	ldr	r4, [sp, #12]
    5e68:	eor	r0, r0, ip
    5e6c:	add	r0, r0, r8
    5e70:	ldr	r8, [sp, #8]
    5e74:	add	r6, r4, r6
    5e78:	add	r0, r3, r0, ror #20
    5e7c:	ldr	r4, [sp, #16]
    5e80:	and	r2, r2, r0
    5e84:	add	r7, r8, r7
    5e88:	ldr	r8, [sp]
    5e8c:	add	r7, r7, ip
    5e90:	add	fp, r4, fp
    5e94:	ldr	r4, [sp, #20]
    5e98:	add	fp, fp, r3
    5e9c:	ldr	ip, [r1, #24]
    5ea0:	eor	r2, r2, r8
    5ea4:	add	r6, r6, r8
    5ea8:	ldr	r8, [r1, #28]
    5eac:	add	r7, r2, r7
    5eb0:	add	r7, r0, r7, ror #15
    5eb4:	add	sl, r4, sl
    5eb8:	add	sl, sl, r0
    5ebc:	eor	r2, r0, r7
    5ec0:	add	r9, ip, r9
    5ec4:	str	ip, [sp, #28]
    5ec8:	add	r9, r9, r7
    5ecc:	mov	r4, r8
    5ed0:	eor	r8, r3, r0
    5ed4:	and	r8, r8, r7
    5ed8:	add	r5, r4, r5
    5edc:	eor	r8, r8, r3
    5ee0:	ldr	r3, [r1, #32]
    5ee4:	add	r6, r8, r6
    5ee8:	str	r4, [sp, #32]
    5eec:	add	r6, r7, r6, ror #10
    5ef0:	ldr	r8, [r1, #36]	; 0x24
    5ef4:	and	r2, r2, r6
    5ef8:	add	r5, r5, r6
    5efc:	eor	r0, r0, r2
    5f00:	ldr	r2, [sp, #40]	; 0x28
    5f04:	add	fp, r0, fp
    5f08:	str	r3, [sp, #36]	; 0x24
    5f0c:	add	fp, r6, fp, ror #25
    5f10:	ldr	r0, [r1, #40]	; 0x28
    5f14:	add	lr, r8, lr
    5f18:	str	r8, [sp, #40]	; 0x28
    5f1c:	ldr	r8, [r1, #48]	; 0x30
    5f20:	add	ip, r3, r2
    5f24:	eor	r3, r7, r6
    5f28:	and	r3, r3, fp
    5f2c:	eor	r2, r6, fp
    5f30:	eor	r7, r7, r3
    5f34:	add	r4, ip, fp
    5f38:	str	r0, [sp, #44]	; 0x2c
    5f3c:	add	sl, r7, sl
    5f40:	sub	r0, r0, #41984	; 0xa400
    5f44:	add	sl, fp, sl, ror #20
    5f48:	sub	r0, r0, #79	; 0x4f
    5f4c:	and	r2, r2, sl
    5f50:	eor	r3, fp, sl
    5f54:	eor	r6, r6, r2
    5f58:	add	lr, lr, sl
    5f5c:	add	r9, r6, r9
    5f60:	ldr	r6, [r1, #44]	; 0x2c
    5f64:	add	r9, sl, r9, ror #15
    5f68:	and	r3, r3, r9
    5f6c:	eor	r2, sl, r9
    5f70:	eor	fp, fp, r3
    5f74:	ldr	r3, [sp, #52]	; 0x34
    5f78:	add	r0, r0, r9
    5f7c:	add	r5, fp, r5
    5f80:	str	r6, [sp, #48]	; 0x30
    5f84:	movw	fp, #17294	; 0x438e
    5f88:	movt	fp, #42617	; 0xa679
    5f8c:	add	r5, r9, r5, ror #10
    5f90:	and	r2, r2, r5
    5f94:	eor	sl, sl, r2
    5f98:	add	r3, r6, r3
    5f9c:	add	r4, sl, r4
    5fa0:	add	ip, r3, r5
    5fa4:	ldr	sl, [sp, #72]	; 0x48
    5fa8:	add	r4, r5, r4, ror #25
    5fac:	eor	r3, r9, r5
    5fb0:	and	r3, r3, r4
    5fb4:	eor	r2, r5, r4
    5fb8:	eor	r9, r9, r3
    5fbc:	ldr	r3, [r1, #56]	; 0x38
    5fc0:	add	lr, r9, lr
    5fc4:	add	sl, r8, sl
    5fc8:	add	lr, r4, lr, ror #20
    5fcc:	mov	r6, sl
    5fd0:	ldr	sl, [r1, #52]	; 0x34
    5fd4:	add	r7, r6, r4
    5fd8:	and	r2, r2, lr
    5fdc:	ldr	r9, [sp, #76]	; 0x4c
    5fe0:	eor	r5, r5, r2
    5fe4:	eor	r2, r4, lr
    5fe8:	add	r0, r5, r0
    5fec:	ldr	r6, [r1, #60]	; 0x3c
    5ff0:	add	fp, r3, fp
    5ff4:	add	r0, lr, r0, ror #15
    5ff8:	movw	r5, #45888	; 0xb340
    5ffc:	movt	r5, #49216	; 0xc040
    6000:	str	sl, [sp, #52]	; 0x34
    6004:	and	r2, r2, r0
    6008:	add	r9, sl, r9
    600c:	eor	r4, r4, r2
    6010:	eor	r2, lr, r0
    6014:	add	ip, r4, ip
    6018:	add	r9, r9, lr
    601c:	ldr	r4, [sp, #4]
    6020:	add	ip, r0, ip, ror #10
    6024:	add	fp, fp, r0
    6028:	movw	sl, #2081	; 0x821
    602c:	movt	sl, #18868	; 0x49b4
    6030:	and	r2, r2, ip
    6034:	eor	r1, r0, ip
    6038:	eor	lr, lr, r2
    603c:	movw	r2, #9570	; 0x2562
    6040:	movt	r2, #63006	; 0xf61e
    6044:	add	r7, lr, r7
    6048:	ldr	lr, [sp, #28]
    604c:	add	r7, ip, r7, ror #25
    6050:	add	r2, r4, r2
    6054:	add	sl, r6, sl
    6058:	add	sl, sl, ip
    605c:	movw	r4, #23121	; 0x5a51
    6060:	movt	r4, #9822	; 0x265e
    6064:	and	r1, r1, r7
    6068:	eor	r0, r0, r1
    606c:	eor	r1, ip, r7
    6070:	add	r9, r0, r9
    6074:	add	r5, lr, r5
    6078:	add	r9, r7, r9, ror #20
    607c:	add	r2, r2, r7
    6080:	and	r1, r1, r9
    6084:	eor	lr, r7, r9
    6088:	eor	r1, r1, ip
    608c:	add	r5, r5, r9
    6090:	add	r1, r1, fp
    6094:	ldr	fp, [sp, #48]	; 0x30
    6098:	add	r1, r9, r1, ror #15
    609c:	and	lr, lr, r1
    60a0:	eor	r7, r7, lr
    60a4:	movw	lr, #51114	; 0xc7aa
    60a8:	movt	lr, #59830	; 0xe9b6
    60ac:	add	sl, r7, sl
    60b0:	add	sl, r1, sl, ror #10
    60b4:	add	r4, fp, r4
    60b8:	ldr	fp, [sp, #60]	; 0x3c
    60bc:	add	r4, r4, r1
    60c0:	movw	r7, #64456	; 0xfbc8
    60c4:	movt	r7, #59347	; 0xe7d3
    60c8:	eor	r0, r1, sl
    60cc:	and	r9, r9, r0
    60d0:	eor	r9, r9, r1
    60d4:	add	ip, r9, r2
    60d8:	ldr	r2, [sp, #20]
    60dc:	movw	r9, #4189	; 0x105d
    60e0:	movt	r9, #54831	; 0xd62f
    60e4:	add	ip, sl, ip, ror #27
    60e8:	add	lr, fp, lr
    60ec:	add	lr, lr, sl
    60f0:	movw	fp, #5203	; 0x1453
    60f4:	movt	fp, #580	; 0x244
    60f8:	eor	r0, sl, ip
    60fc:	and	r0, r0, r1
    6100:	ldr	r1, [sp, #44]	; 0x2c
    6104:	eor	r0, r0, sl
    6108:	add	r9, r2, r9
    610c:	add	r5, r0, r5
    6110:	add	r9, r9, ip
    6114:	add	r5, ip, r5, ror #23
    6118:	eor	r2, ip, r5
    611c:	add	fp, r1, fp
    6120:	and	sl, sl, r2
    6124:	add	fp, fp, r5
    6128:	eor	sl, sl, ip
    612c:	add	r0, sl, r4
    6130:	movw	r4, #59009	; 0xe681
    6134:	movt	r4, #55457	; 0xd8a1
    6138:	add	r0, r5, r0, ror #18
    613c:	ldr	sl, [sp, #16]
    6140:	add	r4, r6, r4
    6144:	eor	r2, r5, r0
    6148:	add	r4, r4, r0
    614c:	and	r2, r2, ip
    6150:	eor	r2, r2, r5
    6154:	add	lr, r2, lr
    6158:	add	r7, sl, r7
    615c:	ldr	sl, [sp, #12]
    6160:	add	lr, r0, lr, ror #12
    6164:	eor	r2, r0, lr
    6168:	add	r7, r7, lr
    616c:	and	r2, r2, r5
    6170:	movw	r5, #52710	; 0xcde6
    6174:	movt	r5, #8673	; 0x21e1
    6178:	eor	r2, r2, r0
    617c:	add	r2, r2, r9
    6180:	ldr	r9, [sp, #40]	; 0x28
    6184:	add	r2, lr, r2, ror #27
    6188:	eor	r1, lr, r2
    618c:	and	r1, r1, r0
    6190:	eor	r1, r1, lr
    6194:	add	r5, r9, r5
    6198:	add	fp, r1, fp
    619c:	add	r5, r5, r2
    61a0:	add	fp, r2, fp, ror #23
    61a4:	movw	r9, #2006	; 0x7d6
    61a8:	movt	r9, #49975	; 0xc337
    61ac:	add	r9, r3, r9
    61b0:	eor	r1, r2, fp
    61b4:	add	r9, r9, fp
    61b8:	and	r1, r1, lr
    61bc:	movw	lr, #3463	; 0xd87
    61c0:	movt	lr, #62677	; 0xf4d5
    61c4:	eor	r1, r1, r2
    61c8:	add	r1, r1, r4
    61cc:	movw	r4, #5357	; 0x14ed
    61d0:	movt	r4, #17754	; 0x455a
    61d4:	add	r1, fp, r1, ror #18
    61d8:	add	lr, sl, lr
    61dc:	ldr	sl, [sp, #52]	; 0x34
    61e0:	eor	ip, fp, r1
    61e4:	add	lr, lr, r1
    61e8:	and	ip, ip, r2
    61ec:	ldr	r2, [sp, #36]	; 0x24
    61f0:	eor	ip, ip, fp
    61f4:	add	r7, ip, r7
    61f8:	add	r7, r1, r7, ror #12
    61fc:	add	r4, r2, r4
    6200:	eor	r2, r1, r7
    6204:	and	fp, fp, r2
    6208:	ldr	r2, [sp, #8]
    620c:	add	r4, r4, r7
    6210:	eor	fp, fp, r1
    6214:	add	ip, fp, r5
    6218:	movw	r5, #59653	; 0xe905
    621c:	movt	r5, #43491	; 0xa9e3
    6220:	add	ip, r7, ip, ror #27
    6224:	movw	fp, #53161	; 0xcfa9
    6228:	movt	fp, #19422	; 0x4bde
    622c:	add	r5, sl, r5
    6230:	eor	r0, r7, ip
    6234:	movw	sl, #41976	; 0xa3f8
    6238:	movt	sl, #64751	; 0xfcef
    623c:	and	r0, r0, r1
    6240:	ldr	r1, [sp, #32]
    6244:	eor	r0, r0, r7
    6248:	add	sl, r2, sl
    624c:	add	r9, r0, r9
    6250:	add	r5, r5, ip
    6254:	add	r9, ip, r9, ror #23
    6258:	eor	r2, ip, r9
    625c:	add	sl, sl, r9
    6260:	and	r7, r7, r2
    6264:	eor	r7, r7, ip
    6268:	add	r0, r7, lr
    626c:	movw	lr, #729	; 0x2d9
    6270:	movt	lr, #26479	; 0x676f
    6274:	add	r0, r9, r0, ror #18
    6278:	movw	r7, #19594	; 0x4c8a
    627c:	movt	r7, #36138	; 0x8d2a
    6280:	add	lr, r1, lr
    6284:	eor	r2, r9, r0
    6288:	add	lr, lr, r0
    628c:	and	r2, r2, ip
    6290:	add	r7, r8, r7
    6294:	eor	r2, r2, r9
    6298:	movw	ip, #14658	; 0x3942
    629c:	movt	ip, #65530	; 0xfffa
    62a0:	add	r4, r2, r4
    62a4:	add	r4, r0, r4, ror #12
    62a8:	eor	r2, r0, r4
    62ac:	add	r7, r7, r4
    62b0:	and	r2, r2, r9
    62b4:	ldr	r9, [sp, #20]
    62b8:	eor	r2, r2, r0
    62bc:	add	r2, r2, r5
    62c0:	ldr	r5, [sp, #36]	; 0x24
    62c4:	add	r2, r4, r2, ror #27
    62c8:	eor	r1, r4, r2
    62cc:	add	ip, r9, ip
    62d0:	and	r1, r1, r0
    62d4:	add	ip, ip, r2
    62d8:	eor	r1, r1, r4
    62dc:	movw	r0, #63105	; 0xf681
    62e0:	movt	r0, #34673	; 0x8771
    62e4:	add	sl, r1, sl
    62e8:	add	sl, r2, sl, ror #23
    62ec:	add	r0, r5, r0
    62f0:	movw	r5, #14348	; 0x380c
    62f4:	movt	r5, #64997	; 0xfde5
    62f8:	eor	r1, r2, sl
    62fc:	add	r0, r0, sl
    6300:	and	r1, r1, r4
    6304:	movw	r4, #24866	; 0x6122
    6308:	movt	r4, #28061	; 0x6d9d
    630c:	eor	r1, r1, r2
    6310:	add	r1, r1, lr
    6314:	ldr	lr, [sp, #48]	; 0x30
    6318:	add	r5, r3, r5
    631c:	add	r1, sl, r1, ror #18
    6320:	add	r4, lr, r4
    6324:	eor	lr, sl, r1
    6328:	and	r2, r2, lr
    632c:	add	r4, r4, r1
    6330:	eor	r2, r2, sl
    6334:	ldr	sl, [sp, #44]	; 0x2c
    6338:	add	r7, r2, r7
    633c:	add	r7, r1, r7, ror #12
    6340:	eor	lr, lr, r7
    6344:	eor	r1, r1, r7
    6348:	add	ip, lr, ip
    634c:	add	r9, r5, r7
    6350:	ldr	r5, [sp, #4]
    6354:	add	ip, r7, ip, ror #28
    6358:	movw	lr, #59972	; 0xea44
    635c:	movt	lr, #42174	; 0xa4be
    6360:	eor	r1, r1, ip
    6364:	eor	r7, r7, ip
    6368:	add	r0, r1, r0
    636c:	ldr	r1, [sp, #16]
    6370:	add	r0, ip, r0, ror #21
    6374:	add	lr, r5, lr
    6378:	movw	r5, #19296	; 0x4b60
    637c:	movt	r5, #63163	; 0xf6bb
    6380:	add	lr, lr, ip
    6384:	eor	r7, r7, r0
    6388:	eor	ip, ip, r0
    638c:	add	fp, r1, fp
    6390:	add	r1, r7, r4
    6394:	ldr	r4, [sp, #12]
    6398:	add	r1, r0, r1, ror #16
    639c:	add	fp, fp, r0
    63a0:	ldr	r7, [sp, #32]
    63a4:	eor	r2, ip, r1
    63a8:	eor	r0, r0, r1
    63ac:	add	r2, r2, r9
    63b0:	movw	r9, #48240	; 0xbc70
    63b4:	movt	r9, #48831	; 0xbebf
    63b8:	add	r2, r1, r2, ror #9
    63bc:	add	r9, sl, r9
    63c0:	ldr	sl, [sp, #52]	; 0x34
    63c4:	eor	r0, r0, r2
    63c8:	add	r5, r7, r5
    63cc:	add	ip, r0, lr
    63d0:	add	r5, r5, r1
    63d4:	add	ip, r2, ip, ror #28
    63d8:	eor	r1, r1, r2
    63dc:	add	r9, r9, r2
    63e0:	movw	r0, #32454	; 0x7ec6
    63e4:	movt	r0, #10395	; 0x289b
    63e8:	eor	r1, r1, ip
    63ec:	eor	r2, r2, ip
    63f0:	add	r1, r1, fp
    63f4:	add	r0, sl, r0
    63f8:	ldr	fp, [sp, #60]	; 0x3c
    63fc:	add	r1, ip, r1, ror #21
    6400:	add	r0, r0, ip
    6404:	movw	lr, #10234	; 0x27fa
    6408:	movt	lr, #60065	; 0xeaa1
    640c:	eor	r2, r2, r1
    6410:	eor	ip, ip, r1
    6414:	add	sl, r2, r5
    6418:	movw	r5, #12421	; 0x3085
    641c:	movt	r5, #54511	; 0xd4ef
    6420:	add	sl, r1, sl, ror #16
    6424:	add	lr, fp, lr
    6428:	add	lr, lr, r1
    642c:	add	r5, r4, r5
    6430:	eor	ip, ip, sl
    6434:	eor	r2, r1, sl
    6438:	ldr	r1, [sp, #40]	; 0x28
    643c:	add	ip, ip, r9
    6440:	add	r5, r5, sl
    6444:	add	ip, sl, ip, ror #9
    6448:	ldr	r9, [sp, #28]
    644c:	movw	r4, #7429	; 0x1d05
    6450:	movt	r4, #1160	; 0x488
    6454:	eor	r2, r2, ip
    6458:	eor	sl, sl, ip
    645c:	add	r2, r2, r0
    6460:	movw	r0, #53305	; 0xd039
    6464:	movt	r0, #55764	; 0xd9d4
    6468:	add	r2, ip, r2, ror #28
    646c:	add	r0, r1, r0
    6470:	add	r4, r9, r4
    6474:	eor	r1, sl, r2
    6478:	add	r4, r4, ip
    647c:	add	sl, r1, lr
    6480:	eor	ip, ip, r2
    6484:	add	sl, r2, sl, ror #21
    6488:	movw	lr, #39397	; 0x99e5
    648c:	movt	lr, #59099	; 0xe6db
    6490:	add	lr, r8, lr
    6494:	add	r0, r0, r2
    6498:	eor	ip, ip, sl
    649c:	eor	r1, r2, sl
    64a0:	ldr	r2, [sp, #8]
    64a4:	add	r7, ip, r5
    64a8:	add	lr, lr, sl
    64ac:	add	r7, sl, r7, ror #16
    64b0:	movw	ip, #31992	; 0x7cf8
    64b4:	movt	ip, #8098	; 0x1fa2
    64b8:	add	ip, r6, ip
    64bc:	movw	r9, #9127	; 0x23a7
    64c0:	movt	r9, #43924	; 0xab94
    64c4:	eor	r1, r1, r7
    64c8:	ldr	r5, [sp, #4]
    64cc:	add	r1, r1, r4
    64d0:	eor	sl, sl, r7
    64d4:	add	r1, r7, r1, ror #9
    64d8:	add	ip, ip, r7
    64dc:	movw	r4, #22117	; 0x5665
    64e0:	movt	r4, #50348	; 0xc4ac
    64e4:	add	r9, r3, r9
    64e8:	ldr	r3, [sp, #20]
    64ec:	eor	sl, sl, r1
    64f0:	eor	r7, r7, r1
    64f4:	add	sl, sl, r0
    64f8:	add	r4, r2, r4
    64fc:	add	sl, r1, sl, ror #28
    6500:	add	r4, r4, r1
    6504:	movw	r0, #8772	; 0x2244
    6508:	movt	r0, #62505	; 0xf429
    650c:	eor	r7, r7, sl
    6510:	eor	r1, r1, sl
    6514:	add	r7, r7, lr
    6518:	add	r0, fp, r0
    651c:	ldr	lr, [sp, #32]
    6520:	add	r7, sl, r7, ror #21
    6524:	add	r0, r0, sl
    6528:	movw	fp, #65431	; 0xff97
    652c:	movt	fp, #17194	; 0x432a
    6530:	eor	r2, r1, r7
    6534:	eor	sl, sl, r7
    6538:	add	r2, r2, ip
    653c:	mvn	ip, r7
    6540:	add	r2, r7, r2, ror #16
    6544:	add	fp, lr, fp
    6548:	movw	lr, #41017	; 0xa039
    654c:	movt	lr, #64659	; 0xfc93
    6550:	add	fp, fp, r7
    6554:	ldr	r7, [sp, #12]
    6558:	eor	sl, sl, r2
    655c:	mvn	r1, r2
    6560:	add	sl, sl, r4
    6564:	add	r9, r9, r2
    6568:	add	sl, r2, sl, ror #9
    656c:	movw	r4, #52370	; 0xcc92
    6570:	movt	r4, #36620	; 0x8f0c
    6574:	add	lr, r3, lr
    6578:	movw	r3, #22979	; 0x59c3
    657c:	movt	r3, #25947	; 0x655b
    6580:	orr	ip, ip, sl
    6584:	eor	r2, r2, ip
    6588:	add	r4, r7, r4
    658c:	add	r2, r2, r0
    6590:	mvn	ip, sl
    6594:	add	r2, sl, r2, ror #26
    6598:	add	lr, lr, sl
    659c:	movw	r0, #62589	; 0xf47d
    65a0:	movt	r0, #65519	; 0xffef
    65a4:	add	r3, r8, r3
    65a8:	orr	r7, r1, r2
    65ac:	mvn	r1, r2
    65b0:	eor	sl, sl, r7
    65b4:	add	r3, r3, r2
    65b8:	add	sl, sl, fp
    65bc:	ldr	fp, [sp, #44]	; 0x2c
    65c0:	movw	r8, #17172	; 0x4314
    65c4:	movt	r8, #41729	; 0xa301
    65c8:	add	r7, r2, sl, ror #22
    65cc:	movw	sl, #32335	; 0x7e4f
    65d0:	movt	sl, #28584	; 0x6fa8
    65d4:	add	r4, r4, r7
    65d8:	add	r0, fp, r0
    65dc:	movw	fp, #24017	; 0x5dd1
    65e0:	movt	fp, #34180	; 0x8584
    65e4:	add	fp, r5, fp
    65e8:	orr	r5, ip, r7
    65ec:	eor	r5, r5, r2
    65f0:	mvn	r2, r7
    65f4:	add	r5, r5, r9
    65f8:	ldr	r9, [sp, #36]	; 0x24
    65fc:	add	r5, r7, r5, ror #17
    6600:	orr	r1, r1, r5
    6604:	add	r0, r0, r5
    6608:	eor	r7, r7, r1
    660c:	mvn	r1, r5
    6610:	add	lr, r7, lr
    6614:	add	sl, r9, sl
    6618:	add	lr, r5, lr, ror #11
    661c:	movw	r9, #59104	; 0xe6e0
    6620:	movt	r9, #65068	; 0xfe2c
    6624:	add	r9, r6, r9
    6628:	ldr	r6, [sp, #28]
    662c:	movw	r7, #4513	; 0x11a1
    6630:	movt	r7, #19976	; 0x4e08
    6634:	orr	ip, r2, lr
    6638:	eor	r5, r5, ip
    663c:	mvn	r2, lr
    6640:	add	r3, r5, r3
    6644:	add	fp, fp, lr
    6648:	add	r3, lr, r3, ror #26
    664c:	add	r8, r6, r8
    6650:	ldr	r6, [sp, #52]	; 0x34
    6654:	orr	ip, r1, r3
    6658:	add	sl, sl, r3
    665c:	eor	ip, ip, lr
    6660:	mvn	r1, r3
    6664:	ldr	r5, [sp, #16]
    6668:	add	ip, ip, r4
    666c:	movw	r4, #53947	; 0xd2bb
    6670:	movt	r4, #10967	; 0x2ad7
    6674:	add	ip, r3, ip, ror #22
    6678:	ldr	lr, [sp, #48]	; 0x30
    667c:	add	r7, r6, r7
    6680:	movw	r6, #32386	; 0x7e82
    6684:	movt	r6, #63315	; 0xf753
    6688:	orr	r2, r2, ip
    668c:	eor	r3, r3, r2
    6690:	mvn	r2, ip
    6694:	add	r0, r3, r0
    6698:	ldr	r3, [sp, #8]
    669c:	add	r6, r5, r6
    66a0:	add	r0, ip, r0, ror #17
    66a4:	movw	r5, #62005	; 0xf235
    66a8:	movt	r5, #48442	; 0xbd3a
    66ac:	add	r5, lr, r5
    66b0:	movw	lr, #54161	; 0xd391
    66b4:	movt	lr, #60294	; 0xeb86
    66b8:	orr	r1, r1, r0
    66bc:	eor	r1, r1, ip
    66c0:	add	r9, r9, ip
    66c4:	add	r1, r1, fp
    66c8:	add	r4, r3, r4
    66cc:	ldr	r3, [sp, #40]	; 0x28
    66d0:	add	r1, r0, r1, ror #11
    66d4:	add	r8, r8, r0
    66d8:	orr	r2, r2, r1
    66dc:	mvn	ip, r1
    66e0:	eor	r2, r2, r0
    66e4:	add	r7, r7, r1
    66e8:	add	r2, r2, sl
    66ec:	add	lr, r3, lr
    66f0:	add	r2, r1, r2, ror #26
    66f4:	mvn	r3, r0
    66f8:	orr	r3, r3, r2
    66fc:	mvn	r0, r2
    6700:	eor	r3, r3, r1
    6704:	add	r6, r6, r2
    6708:	add	r3, r3, r9
    670c:	ldr	r9, [sp, #64]	; 0x40
    6710:	add	r3, r2, r3, ror #22
    6714:	orr	ip, ip, r3
    6718:	mvn	fp, r3
    671c:	eor	ip, ip, r2
    6720:	add	r5, r5, r3
    6724:	add	ip, ip, r8
    6728:	ldr	r8, [sp]
    672c:	add	ip, r3, ip, ror #17
    6730:	orr	r0, r0, ip
    6734:	mvn	sl, ip
    6738:	eor	r0, r0, r3
    673c:	add	r4, r4, ip
    6740:	add	r0, r0, r7
    6744:	ldr	r7, [sp, #56]	; 0x38
    6748:	add	r0, ip, r0, ror #11
    674c:	orr	fp, fp, r0
    6750:	mvn	r1, r0
    6754:	eor	ip, ip, fp
    6758:	add	lr, lr, r0
    675c:	add	r6, ip, r6
    6760:	ldr	ip, [sp, #24]
    6764:	add	r6, r0, r6, ror #26
    6768:	orr	sl, sl, r6
    676c:	add	r3, r9, r6
    6770:	eor	r0, r0, sl
    6774:	mvn	r2, r6
    6778:	add	r5, r0, r5
    677c:	ldr	r0, [sp, #68]	; 0x44
    6780:	add	r5, r6, r5, ror #22
    6784:	orr	r1, r1, r5
    6788:	eor	r6, r6, r1
    678c:	add	r4, r6, r4
    6790:	str	r3, [r0]
    6794:	add	r3, r7, r5
    6798:	add	r4, r5, r4, ror #17
    679c:	str	r3, [r0, #12]
    67a0:	orr	r2, r2, r4
    67a4:	add	r3, r8, r4
    67a8:	eor	r5, r5, r2
    67ac:	add	r4, ip, r4
    67b0:	add	lr, r5, lr
    67b4:	add	r5, r3, lr, ror #11
    67b8:	str	r5, [r0, #4]
    67bc:	str	r4, [r0, #8]
    67c0:	add	sp, sp, #148	; 0x94
    67c4:	ldrd	r4, [sp]
    67c8:	ldrd	r6, [sp, #8]
    67cc:	ldrd	r8, [sp, #16]
    67d0:	ldrd	sl, [sp, #24]
    67d4:	add	sp, sp, #32
    67d8:	pop	{pc}		; (ldr pc, [sp], #4)

000067dc <MD5Update>:
    67dc:	lsl	r3, r2, #3
    67e0:	strd	r4, [sp, #-32]!	; 0xffffffe0
    67e4:	mov	r5, r0
    67e8:	strd	r6, [sp, #8]
    67ec:	mov	r6, r2
    67f0:	mov	r7, r1
    67f4:	ldr	r2, [r0, #16]
    67f8:	strd	r8, [sp, #16]
    67fc:	ldr	r1, [r0, #20]
    6800:	str	sl, [sp, #24]
    6804:	str	lr, [sp, #28]
    6808:	adds	r3, r2, r3
    680c:	ubfx	r8, r2, #3, #6
    6810:	addcs	r1, r1, #1
    6814:	rsb	r4, r8, #64	; 0x40
    6818:	str	r3, [r0, #16]
    681c:	add	r1, r1, r6, lsr #29
    6820:	add	r9, r8, #24
    6824:	cmp	r6, r4
    6828:	add	r9, r0, r9
    682c:	str	r1, [r0, #20]
    6830:	bcs	685c <MD5Update+0x80>
    6834:	mov	r2, r6
    6838:	mov	r1, r7
    683c:	ldrd	r4, [sp]
    6840:	mov	r0, r9
    6844:	ldrd	r6, [sp, #8]
    6848:	ldrd	r8, [sp, #16]
    684c:	ldr	sl, [sp, #24]
    6850:	ldr	lr, [sp, #28]
    6854:	add	sp, sp, #32
    6858:	b	47e8 <memcpy@plt>
    685c:	mov	r2, r4
    6860:	mov	r1, r7
    6864:	mov	r0, r9
    6868:	add	r9, r5, #24
    686c:	bl	47e8 <memcpy@plt>
    6870:	mov	r1, r9
    6874:	mov	r0, r5
    6878:	bl	5d38 <MD5Transform>
    687c:	rsb	r3, r8, #127	; 0x7f
    6880:	cmp	r6, r3
    6884:	subls	r2, r8, #64	; 0x40
    6888:	addls	r7, r7, r4
    688c:	addls	r6, r6, r2
    6890:	bls	6834 <MD5Update+0x58>
    6894:	add	r1, r7, r4
    6898:	mov	r0, r5
    689c:	bl	5d38 <MD5Transform>
    68a0:	add	r3, r4, #127	; 0x7f
    68a4:	add	r4, r4, #64	; 0x40
    68a8:	cmp	r6, r3
    68ac:	bhi	6894 <MD5Update+0xb8>
    68b0:	add	r7, r7, r4
    68b4:	sub	r6, r6, r4
    68b8:	b	6834 <MD5Update+0x58>

000068bc <rb_sha256_process_bytes>:
    68bc:	strd	r4, [sp, #-32]!	; 0xffffffe0
    68c0:	mov	r5, r2
    68c4:	mov	r4, r0
    68c8:	strd	r6, [sp, #8]
    68cc:	mov	r6, r1
    68d0:	ldr	r7, [r2, #40]	; 0x28
    68d4:	strd	r8, [sp, #16]
    68d8:	str	sl, [sp, #24]
    68dc:	str	lr, [sp, #28]
    68e0:	cmp	r7, #0
    68e4:	bne	69d8 <rb_sha256_process_bytes+0x11c>
    68e8:	cmp	r6, #63	; 0x3f
    68ec:	bls	69b8 <rb_sha256_process_bytes+0xfc>
    68f0:	tst	r4, #3
    68f4:	beq	69a0 <rb_sha256_process_bytes+0xe4>
    68f8:	cmp	r6, #64	; 0x40
    68fc:	beq	6a84 <rb_sha256_process_bytes+0x1c8>
    6900:	sub	r8, r6, #65	; 0x41
    6904:	add	r9, r5, #44	; 0x2c
    6908:	lsr	r8, r8, #6
    690c:	add	r7, r8, #1
    6910:	add	r7, r4, r7, lsl #6
    6914:	mov	r3, r4
    6918:	mov	r2, r9
    691c:	add	r4, r4, #64	; 0x40
    6920:	ldr	lr, [r3]
    6924:	add	r3, r3, #16
    6928:	add	r2, r2, #16
    692c:	ldr	ip, [r3, #-12]
    6930:	ldr	r0, [r3, #-8]
    6934:	ldr	r1, [r3, #-4]
    6938:	cmp	r3, r4
    693c:	str	lr, [r2, #-16]
    6940:	str	ip, [r2, #-12]
    6944:	str	r0, [r2, #-8]
    6948:	str	r1, [r2, #-4]
    694c:	bne	6920 <rb_sha256_process_bytes+0x64>
    6950:	mov	r4, r3
    6954:	mov	r2, r5
    6958:	mov	r1, #64	; 0x40
    695c:	mov	r0, r9
    6960:	bl	4fd8 <rb_sha256_process_block>
    6964:	cmp	r4, r7
    6968:	bne	6914 <rb_sha256_process_bytes+0x58>
    696c:	sub	r6, r6, #64	; 0x40
    6970:	sub	r6, r6, r8, lsl #6
    6974:	ldr	r4, [r5, #40]	; 0x28
    6978:	mov	r1, r7
    697c:	mov	r2, r6
    6980:	add	r0, r4, #44	; 0x2c
    6984:	add	r4, r4, r6
    6988:	add	r0, r5, r0
    698c:	bl	47e8 <memcpy@plt>
    6990:	cmp	r4, #63	; 0x3f
    6994:	bhi	6a18 <rb_sha256_process_bytes+0x15c>
    6998:	str	r4, [r5, #40]	; 0x28
    699c:	b	69c0 <rb_sha256_process_bytes+0x104>
    69a0:	bic	r1, r6, #63	; 0x3f
    69a4:	mov	r0, r4
    69a8:	mov	r2, r5
    69ac:	and	r6, r6, #63	; 0x3f
    69b0:	add	r4, r4, r1
    69b4:	bl	4fd8 <rb_sha256_process_block>
    69b8:	cmp	r6, #0
    69bc:	bne	6a84 <rb_sha256_process_bytes+0x1c8>
    69c0:	ldrd	r4, [sp]
    69c4:	ldrd	r6, [sp, #8]
    69c8:	ldrd	r8, [sp, #16]
    69cc:	ldr	sl, [sp, #24]
    69d0:	add	sp, sp, #28
    69d4:	pop	{pc}		; (ldr pc, [sp], #4)
    69d8:	rsb	r8, r7, #128	; 0x80
    69dc:	add	r0, r7, #44	; 0x2c
    69e0:	cmp	r8, r1
    69e4:	add	r0, r2, r0
    69e8:	movcs	r8, r1
    69ec:	mov	r1, r4
    69f0:	mov	r2, r8
    69f4:	bl	47e8 <memcpy@plt>
    69f8:	ldr	r1, [r5, #40]	; 0x28
    69fc:	add	r1, r8, r1
    6a00:	cmp	r1, #64	; 0x40
    6a04:	str	r1, [r5, #40]	; 0x28
    6a08:	bhi	6a44 <rb_sha256_process_bytes+0x188>
    6a0c:	add	r4, r4, r8
    6a10:	sub	r6, r6, r8
    6a14:	b	68e8 <rb_sha256_process_bytes+0x2c>
    6a18:	add	r6, r5, #44	; 0x2c
    6a1c:	mov	r2, r5
    6a20:	mov	r0, r6
    6a24:	sub	r4, r4, #64	; 0x40
    6a28:	mov	r1, #64	; 0x40
    6a2c:	bl	4fd8 <rb_sha256_process_block>
    6a30:	mov	r0, r6
    6a34:	mov	r2, r4
    6a38:	add	r1, r5, #108	; 0x6c
    6a3c:	bl	47e8 <memcpy@plt>
    6a40:	b	6998 <rb_sha256_process_bytes+0xdc>
    6a44:	add	r9, r5, #44	; 0x2c
    6a48:	mov	r2, r5
    6a4c:	mov	r0, r9
    6a50:	bic	r1, r1, #63	; 0x3f
    6a54:	bl	4fd8 <rb_sha256_process_block>
    6a58:	ldr	r3, [r5, #40]	; 0x28
    6a5c:	add	r1, r7, r8
    6a60:	mov	r0, r9
    6a64:	bic	r1, r1, #63	; 0x3f
    6a68:	add	r1, r1, #44	; 0x2c
    6a6c:	add	r1, r5, r1
    6a70:	and	r3, r3, #63	; 0x3f
    6a74:	mov	r2, r3
    6a78:	str	r3, [r5, #40]	; 0x28
    6a7c:	bl	47e8 <memcpy@plt>
    6a80:	b	6a0c <rb_sha256_process_bytes+0x150>
    6a84:	mov	r7, r4
    6a88:	b	6974 <rb_sha256_process_bytes+0xb8>

00006a8c <rb_sha256_finish_ctx>:
    6a8c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6a90:	mov	r4, r0
    6a94:	mov	r5, r1
    6a98:	ldr	r3, [r0, #32]
    6a9c:	ldr	r0, [r0, #40]	; 0x28
    6aa0:	strd	r6, [sp, #8]
    6aa4:	str	r8, [sp, #16]
    6aa8:	str	lr, [sp, #20]
    6aac:	adds	r3, r3, r0
    6ab0:	str	r3, [r4, #32]
    6ab4:	bcc	6ac4 <rb_sha256_finish_ctx+0x38>
    6ab8:	ldr	r3, [r4, #36]	; 0x24
    6abc:	add	r3, r3, #1
    6ac0:	str	r3, [r4, #36]	; 0x24
    6ac4:	cmp	r0, #55	; 0x37
    6ac8:	bls	6bb8 <rb_sha256_finish_ctx+0x12c>
    6acc:	rsb	r2, r0, #120	; 0x78
    6ad0:	mov	r6, #164	; 0xa4
    6ad4:	mov	r7, #168	; 0xa8
    6ad8:	mov	r8, #128	; 0x80
    6adc:	ldr	r1, [pc, #232]	; 6bcc <rb_sha256_finish_ctx+0x140>
    6ae0:	add	r0, r0, #44	; 0x2c
    6ae4:	add	r0, r4, r0
    6ae8:	add	r1, pc, r1
    6aec:	add	r1, r1, #896	; 0x380
    6af0:	bl	47e8 <memcpy@plt>
    6af4:	ldr	r3, [r4, #32]
    6af8:	add	r0, r4, #44	; 0x2c
    6afc:	mov	r1, r8
    6b00:	mov	r2, r4
    6b04:	lsl	ip, r3, #11
    6b08:	lsl	lr, r3, #3
    6b0c:	and	ip, ip, #16711680	; 0xff0000
    6b10:	orr	ip, ip, lr, lsr #24
    6b14:	lsr	lr, lr, #8
    6b18:	orr	ip, ip, r3, lsl #27
    6b1c:	and	lr, lr, #65280	; 0xff00
    6b20:	lsr	r3, r3, #29
    6b24:	orr	ip, ip, lr
    6b28:	str	ip, [r4, r7]
    6b2c:	ldr	ip, [r4, #36]	; 0x24
    6b30:	orr	r3, r3, ip, lsl #3
    6b34:	rev	r3, r3
    6b38:	str	r3, [r4, r6]
    6b3c:	bl	4fd8 <rb_sha256_process_block>
    6b40:	ldr	r3, [r4]
    6b44:	mov	r0, r5
    6b48:	ldrd	r6, [sp, #8]
    6b4c:	ldr	r8, [sp, #16]
    6b50:	rev	r3, r3
    6b54:	str	r3, [r5]
    6b58:	ldr	r3, [r4, #4]
    6b5c:	rev	r3, r3
    6b60:	str	r3, [r5, #4]
    6b64:	ldr	r3, [r4, #8]
    6b68:	rev	r3, r3
    6b6c:	str	r3, [r5, #8]
    6b70:	ldr	r3, [r4, #12]
    6b74:	rev	r3, r3
    6b78:	str	r3, [r5, #12]
    6b7c:	ldr	r3, [r4, #16]
    6b80:	rev	r3, r3
    6b84:	str	r3, [r5, #16]
    6b88:	ldr	r3, [r4, #20]
    6b8c:	rev	r3, r3
    6b90:	str	r3, [r5, #20]
    6b94:	ldr	r3, [r4, #24]
    6b98:	rev	r3, r3
    6b9c:	str	r3, [r5, #24]
    6ba0:	ldr	r3, [r4, #28]
    6ba4:	rev	r3, r3
    6ba8:	str	r3, [r5, #28]
    6bac:	ldrd	r4, [sp]
    6bb0:	add	sp, sp, #20
    6bb4:	pop	{pc}		; (ldr pc, [sp], #4)
    6bb8:	rsb	r2, r0, #56	; 0x38
    6bbc:	mov	r6, #100	; 0x64
    6bc0:	mov	r7, #104	; 0x68
    6bc4:	mov	r8, #64	; 0x40
    6bc8:	b	6adc <rb_sha256_finish_ctx+0x50>
    6bcc:	.word	0x00012cf0

00006bd0 <rb_sha512_process_bytes>:
    6bd0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6bd4:	mov	r5, r2
    6bd8:	mov	r4, r0
    6bdc:	strd	r6, [sp, #8]
    6be0:	mov	r6, r1
    6be4:	strd	sl, [sp, #24]
    6be8:	ldrd	sl, [r2, #80]	; 0x50
    6bec:	strd	r8, [sp, #16]
    6bf0:	str	lr, [sp, #32]
    6bf4:	sub	sp, sp, #4
    6bf8:	orrs	r3, sl, fp
    6bfc:	bne	6ccc <rb_sha512_process_bytes+0xfc>
    6c00:	cmp	r6, #127	; 0x7f
    6c04:	bls	6ca8 <rb_sha512_process_bytes+0xd8>
    6c08:	tst	r4, #7
    6c0c:	beq	6c90 <rb_sha512_process_bytes+0xc0>
    6c10:	cmp	r6, #128	; 0x80
    6c14:	beq	6d88 <rb_sha512_process_bytes+0x1b8>
    6c18:	sub	r9, r6, #129	; 0x81
    6c1c:	add	r8, r5, #88	; 0x58
    6c20:	lsr	r9, r9, #7
    6c24:	add	r7, r9, #1
    6c28:	add	r7, r4, r7, lsl #7
    6c2c:	mov	r2, #128	; 0x80
    6c30:	mov	r1, r4
    6c34:	mov	r0, r8
    6c38:	add	r4, r4, r2
    6c3c:	bl	47e8 <memcpy@plt>
    6c40:	mov	r2, r5
    6c44:	mov	r1, #128	; 0x80
    6c48:	bl	53c0 <rb_sha512_process_block>
    6c4c:	cmp	r4, r7
    6c50:	bne	6c2c <rb_sha512_process_bytes+0x5c>
    6c54:	sub	r6, r6, #128	; 0x80
    6c58:	sub	r6, r6, r9, lsl #7
    6c5c:	ldr	r4, [r5, #80]	; 0x50
    6c60:	mov	r1, r7
    6c64:	mov	r2, r6
    6c68:	add	r0, r4, #88	; 0x58
    6c6c:	add	r4, r4, r6
    6c70:	add	r0, r5, r0
    6c74:	bl	47e8 <memcpy@plt>
    6c78:	cmp	r4, #127	; 0x7f
    6c7c:	bhi	6d14 <rb_sha512_process_bytes+0x144>
    6c80:	mov	r3, #0
    6c84:	str	r4, [r5, #80]	; 0x50
    6c88:	str	r3, [r5, #84]	; 0x54
    6c8c:	b	6cb0 <rb_sha512_process_bytes+0xe0>
    6c90:	bic	r1, r6, #127	; 0x7f
    6c94:	mov	r0, r4
    6c98:	mov	r2, r5
    6c9c:	and	r6, r6, #127	; 0x7f
    6ca0:	add	r4, r4, r1
    6ca4:	bl	53c0 <rb_sha512_process_block>
    6ca8:	cmp	r6, #0
    6cac:	bne	6d88 <rb_sha512_process_bytes+0x1b8>
    6cb0:	add	sp, sp, #4
    6cb4:	ldrd	r4, [sp]
    6cb8:	ldrd	r6, [sp, #8]
    6cbc:	ldrd	r8, [sp, #16]
    6cc0:	ldrd	sl, [sp, #24]
    6cc4:	add	sp, sp, #32
    6cc8:	pop	{pc}		; (ldr pc, [sp], #4)
    6ccc:	rsb	r7, sl, #256	; 0x100
    6cd0:	add	r0, sl, #88	; 0x58
    6cd4:	cmp	r7, r1
    6cd8:	add	r0, r2, r0
    6cdc:	movcs	r7, r1
    6ce0:	mov	r1, r4
    6ce4:	mov	r2, r7
    6ce8:	bl	47e8 <memcpy@plt>
    6cec:	ldrd	r2, [r5, #80]	; 0x50
    6cf0:	adds	r0, r2, r7
    6cf4:	adc	r1, r3, #0
    6cf8:	cmp	r1, #0
    6cfc:	cmpeq	r0, #128	; 0x80
    6d00:	strd	r0, [r5, #80]	; 0x50
    6d04:	bhi	6d40 <rb_sha512_process_bytes+0x170>
    6d08:	add	r4, r4, r7
    6d0c:	sub	r6, r6, r7
    6d10:	b	6c00 <rb_sha512_process_bytes+0x30>
    6d14:	add	r6, r5, #88	; 0x58
    6d18:	mov	r2, r5
    6d1c:	mov	r0, r6
    6d20:	sub	r4, r4, #128	; 0x80
    6d24:	mov	r1, #128	; 0x80
    6d28:	bl	53c0 <rb_sha512_process_block>
    6d2c:	mov	r0, r6
    6d30:	mov	r2, r4
    6d34:	add	r1, r5, #216	; 0xd8
    6d38:	bl	47e8 <memcpy@plt>
    6d3c:	b	6c80 <rb_sha512_process_bytes+0xb0>
    6d40:	add	r9, r5, #88	; 0x58
    6d44:	bic	r1, r0, #127	; 0x7f
    6d48:	mov	r2, r5
    6d4c:	mov	r0, r9
    6d50:	bl	53c0 <rb_sha512_process_block>
    6d54:	ldr	r3, [r5, #80]	; 0x50
    6d58:	add	r1, r7, sl
    6d5c:	mov	r2, #0
    6d60:	bic	r1, r1, #127	; 0x7f
    6d64:	mov	r0, r9
    6d68:	add	r1, r1, #88	; 0x58
    6d6c:	str	r2, [r5, #84]	; 0x54
    6d70:	add	r1, r5, r1
    6d74:	and	r3, r3, #127	; 0x7f
    6d78:	mov	r2, r3
    6d7c:	str	r3, [r5, #80]	; 0x50
    6d80:	bl	47e8 <memcpy@plt>
    6d84:	b	6d08 <rb_sha512_process_bytes+0x138>
    6d88:	mov	r7, r4
    6d8c:	b	6c5c <rb_sha512_process_bytes+0x8c>

00006d90 <rb_sha512_finish_ctx>:
    6d90:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6d94:	mov	r4, r0
    6d98:	mov	r5, r1
    6d9c:	ldrd	r2, [r0, #64]	; 0x40
    6da0:	strd	r6, [sp, #8]
    6da4:	strd	sl, [sp, #24]
    6da8:	ldrd	sl, [r0, #80]	; 0x50
    6dac:	strd	r8, [sp, #16]
    6db0:	mov	r9, #0
    6db4:	str	lr, [sp, #32]
    6db8:	sub	sp, sp, #4
    6dbc:	adds	r0, r2, sl
    6dc0:	adcs	r1, r3, fp
    6dc4:	movcs	r8, #1
    6dc8:	movcc	r8, #0
    6dcc:	orrs	r3, r8, r9
    6dd0:	strd	r0, [r4, #64]	; 0x40
    6dd4:	beq	6df0 <rb_sha512_finish_ctx+0x60>
    6dd8:	ldr	r3, [r4, #72]	; 0x48
    6ddc:	ldr	r2, [r4, #76]	; 0x4c
    6de0:	adds	r3, r3, #1
    6de4:	adc	r2, r2, #0
    6de8:	str	r3, [r4, #72]	; 0x48
    6dec:	str	r2, [r4, #76]	; 0x4c
    6df0:	ldr	r1, [pc, #396]	; 6f84 <rb_sha512_finish_ctx+0x1f4>
    6df4:	cmp	fp, #0
    6df8:	add	r0, sl, #88	; 0x58
    6dfc:	cmpeq	sl, #111	; 0x6f
    6e00:	add	r0, r4, r0
    6e04:	rsbhi	r9, sl, #240	; 0xf0
    6e08:	rsbls	r9, sl, #112	; 0x70
    6e0c:	mov	r2, r9
    6e10:	movhi	r8, #256	; 0x100
    6e14:	movls	r8, #128	; 0x80
    6e18:	add	r1, pc, r1
    6e1c:	add	r1, r1, #960	; 0x3c0
    6e20:	bl	47e8 <memcpy@plt>
    6e24:	ldr	r3, [r4, #68]	; 0x44
    6e28:	adds	r6, sl, r9
    6e2c:	mov	r1, r8
    6e30:	adds	r8, r6, #8
    6e34:	add	r6, r4, r6
    6e38:	ldr	sl, [r4, #64]	; 0x40
    6e3c:	add	r8, r4, r8
    6e40:	mov	r2, r4
    6e44:	add	r0, r4, #88	; 0x58
    6e48:	lsl	ip, r3, #3
    6e4c:	lsr	r7, r3, #29
    6e50:	orr	ip, ip, sl, lsr #29
    6e54:	lsl	r3, sl, #11
    6e58:	lsl	fp, ip, #24
    6e5c:	lsl	r9, ip, #8
    6e60:	and	r3, r3, #16711680	; 0xff0000
    6e64:	orr	fp, fp, ip, lsr #24
    6e68:	lsr	lr, ip, #8
    6e6c:	and	ip, r9, #16711680	; 0xff0000
    6e70:	lsr	r9, sl, #5
    6e74:	orr	ip, fp, ip
    6e78:	and	lr, lr, #65280	; 0xff00
    6e7c:	and	r9, r9, #65280	; 0xff00
    6e80:	orr	lr, ip, lr
    6e84:	ubfx	ip, sl, #21, #8
    6e88:	orr	r3, r3, r9
    6e8c:	orr	r3, r3, sl, lsl #27
    6e90:	str	lr, [r8, #88]	; 0x58
    6e94:	orr	r3, r3, ip
    6e98:	str	r3, [r8, #92]	; 0x5c
    6e9c:	ldr	lr, [r4, #72]	; 0x48
    6ea0:	ldr	r3, [r4, #76]	; 0x4c
    6ea4:	orr	ip, r7, lr, lsl #3
    6ea8:	lsl	r3, r3, #3
    6eac:	rev	ip, ip
    6eb0:	orr	r3, r3, lr, lsr #29
    6eb4:	str	ip, [r6, #92]	; 0x5c
    6eb8:	rev	r3, r3
    6ebc:	str	r3, [r6, #88]	; 0x58
    6ec0:	bl	53c0 <rb_sha512_process_block>
    6ec4:	ldrd	r2, [r4]
    6ec8:	mov	r0, r5
    6ecc:	rev	r2, r2
    6ed0:	rev	r3, r3
    6ed4:	str	r3, [r5]
    6ed8:	str	r2, [r5, #4]
    6edc:	ldrd	r2, [r4, #8]
    6ee0:	rev	r2, r2
    6ee4:	rev	r3, r3
    6ee8:	str	r3, [r5, #8]
    6eec:	str	r2, [r5, #12]
    6ef0:	ldrd	r2, [r4, #16]
    6ef4:	rev	r2, r2
    6ef8:	rev	r3, r3
    6efc:	str	r3, [r5, #16]
    6f00:	str	r2, [r5, #20]
    6f04:	ldrd	r2, [r4, #24]
    6f08:	rev	r2, r2
    6f0c:	rev	r3, r3
    6f10:	str	r3, [r5, #24]
    6f14:	str	r2, [r5, #28]
    6f18:	ldrd	r2, [r4, #32]
    6f1c:	rev	r2, r2
    6f20:	rev	r3, r3
    6f24:	str	r3, [r5, #32]
    6f28:	str	r2, [r5, #36]	; 0x24
    6f2c:	ldrd	r2, [r4, #40]	; 0x28
    6f30:	rev	r2, r2
    6f34:	rev	r3, r3
    6f38:	str	r3, [r5, #40]	; 0x28
    6f3c:	str	r2, [r5, #44]	; 0x2c
    6f40:	ldrd	r2, [r4, #48]	; 0x30
    6f44:	rev	r2, r2
    6f48:	rev	r3, r3
    6f4c:	str	r3, [r5, #48]	; 0x30
    6f50:	str	r2, [r5, #52]	; 0x34
    6f54:	ldrd	r2, [r4, #56]	; 0x38
    6f58:	rev	r2, r2
    6f5c:	rev	r3, r3
    6f60:	str	r3, [r5, #56]	; 0x38
    6f64:	str	r2, [r5, #60]	; 0x3c
    6f68:	add	sp, sp, #4
    6f6c:	ldrd	r4, [sp]
    6f70:	ldrd	r6, [sp, #8]
    6f74:	ldrd	r8, [sp, #16]
    6f78:	ldrd	sl, [sp, #24]
    6f7c:	add	sp, sp, #32
    6f80:	pop	{pc}		; (ldr pc, [sp], #4)
    6f84:	.word	0x000129c0

00006f88 <rb_sha256_crypt_r>:
    6f88:	ldr	ip, [pc, #1248]	; 7470 <rb_sha256_crypt_r+0x4e8>
    6f8c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6f90:	mov	r4, r1
    6f94:	strd	r6, [sp, #8]
    6f98:	mov	r6, r0
    6f9c:	strd	r8, [sp, #16]
    6fa0:	strd	sl, [sp, #24]
    6fa4:	add	fp, sp, #32
    6fa8:	str	lr, [sp, #32]
    6fac:	sub	sp, sp, #484	; 0x1e4
    6fb0:	add	ip, pc, ip
    6fb4:	add	r0, ip, #1088	; 0x440
    6fb8:	str	r3, [fp, #-488]	; 0xfffffe18
    6fbc:	str	r2, [fp, #-484]	; 0xfffffe1c
    6fc0:	mov	r2, #3
    6fc4:	str	r1, [fp, #-464]	; 0xfffffe30
    6fc8:	bl	4be4 <strncmp@plt>
    6fcc:	ldr	r1, [pc, #1184]	; 7474 <rb_sha256_crypt_r+0x4ec>
    6fd0:	cmp	r0, #0
    6fd4:	mov	r2, #7
    6fd8:	addeq	r3, r4, #3
    6fdc:	streq	r3, [fp, #-464]	; 0xfffffe30
    6fe0:	ldr	r0, [fp, #-464]	; 0xfffffe30
    6fe4:	add	r1, pc, r1
    6fe8:	add	r1, r1, #1088	; 0x440
    6fec:	add	r1, r1, #4
    6ff0:	bl	4be4 <strncmp@plt>
    6ff4:	subs	r3, r0, #0
    6ff8:	str	r3, [fp, #-492]	; 0xfffffe14
    6ffc:	beq	7d4c <rb_sha256_crypt_r+0xdc4>
    7000:	mov	r3, #0
    7004:	str	r3, [fp, #-492]	; 0xfffffe14
    7008:	movw	r3, #5000	; 0x1388
    700c:	str	r3, [fp, #-468]	; 0xfffffe2c
    7010:	sub	r3, fp, #212	; 0xd4
    7014:	str	r3, [fp, #-476]	; 0xfffffe24
    7018:	ldr	r1, [pc, #1112]	; 7478 <rb_sha256_crypt_r+0x4f0>
    701c:	ldr	r0, [fp, #-464]	; 0xfffffe30
    7020:	add	r1, pc, r1
    7024:	bl	4bb4 <strcspn@plt>
    7028:	cmp	r0, #16
    702c:	movcc	r3, r0
    7030:	movcs	r3, #16
    7034:	mov	r0, r6
    7038:	str	r3, [fp, #-460]	; 0xfffffe34
    703c:	bl	47c4 <strlen@plt>
    7040:	ands	r3, r6, #3
    7044:	mov	sl, r0
    7048:	streq	r3, [fp, #-500]	; 0xfffffe0c
    704c:	bne	7d24 <rb_sha256_crypt_r+0xd9c>
    7050:	ldr	r3, [fp, #-464]	; 0xfffffe30
    7054:	ands	r3, r3, #3
    7058:	streq	r3, [fp, #-504]	; 0xfffffe08
    705c:	bne	7cfc <rb_sha256_crypt_r+0xd74>
    7060:	add	r9, pc, #1000	; 0x3e8
    7064:	ldrd	r8, [r9]
    7068:	sub	r4, fp, #388	; 0x184
    706c:	mov	r5, #0
    7070:	mov	r2, r4
    7074:	mov	r1, sl
    7078:	mov	r0, r6
    707c:	str	r5, [fp, #-348]	; 0xfffffea4
    7080:	sub	r7, fp, #452	; 0x1c4
    7084:	strd	r8, [r4]
    7088:	add	r9, pc, #968	; 0x3c8
    708c:	ldrd	r8, [r9]
    7090:	strd	r8, [r4, #8]
    7094:	mov	r8, #0
    7098:	mov	r9, #0
    709c:	strd	r8, [r4, #32]
    70a0:	add	r9, pc, #952	; 0x3b8
    70a4:	ldrd	r8, [r9]
    70a8:	strd	r8, [r4, #16]
    70ac:	add	r9, pc, #948	; 0x3b4
    70b0:	ldrd	r8, [r9]
    70b4:	strd	r8, [r4, #24]
    70b8:	add	r9, pc, #912	; 0x390
    70bc:	ldrd	r8, [r9]
    70c0:	bl	68bc <rb_sha256_process_bytes>
    70c4:	mov	r2, r4
    70c8:	ldr	r0, [fp, #-464]	; 0xfffffe30
    70cc:	ldr	r1, [fp, #-460]	; 0xfffffe34
    70d0:	bl	68bc <rb_sha256_process_bytes>
    70d4:	strd	r8, [fp, #-212]	; 0xffffff2c
    70d8:	mov	r1, sl
    70dc:	mov	r0, r6
    70e0:	add	r9, pc, #880	; 0x370
    70e4:	ldrd	r8, [r9]
    70e8:	ldr	r2, [fp, #-476]	; 0xfffffe24
    70ec:	strd	r8, [fp, #-204]	; 0xffffff34
    70f0:	add	r9, pc, #872	; 0x368
    70f4:	ldrd	r8, [r9]
    70f8:	str	r5, [fp, #-172]	; 0xffffff54
    70fc:	strd	r8, [fp, #-196]	; 0xffffff3c
    7100:	add	r9, pc, #864	; 0x360
    7104:	ldrd	r8, [r9]
    7108:	strd	r8, [fp, #-188]	; 0xffffff44
    710c:	mov	r8, #0
    7110:	mov	r9, #0
    7114:	strd	r8, [fp, #-180]	; 0xffffff4c
    7118:	bl	68bc <rb_sha256_process_bytes>
    711c:	ldr	r5, [fp, #-476]	; 0xfffffe24
    7120:	ldr	r0, [fp, #-464]	; 0xfffffe30
    7124:	ldr	r1, [fp, #-460]	; 0xfffffe34
    7128:	mov	r2, r5
    712c:	bl	68bc <rb_sha256_process_bytes>
    7130:	mov	r2, r5
    7134:	mov	r1, sl
    7138:	mov	r0, r6
    713c:	bl	68bc <rb_sha256_process_bytes>
    7140:	mov	r1, r7
    7144:	mov	r0, r5
    7148:	bl	6a8c <rb_sha256_finish_ctx>
    714c:	cmp	sl, #32
    7150:	bls	7db4 <rb_sha256_crypt_r+0xe2c>
    7154:	mov	r5, sl
    7158:	sub	r5, r5, #32
    715c:	mov	r2, r4
    7160:	mov	r1, #32
    7164:	mov	r0, r7
    7168:	bl	68bc <rb_sha256_process_bytes>
    716c:	cmp	r5, #32
    7170:	bhi	7158 <rb_sha256_crypt_r+0x1d0>
    7174:	sub	r3, sl, #33	; 0x21
    7178:	sub	r1, sl, #32
    717c:	bic	r3, r3, #31
    7180:	mov	r2, r4
    7184:	sub	r1, r1, r3
    7188:	mov	r0, r7
    718c:	bl	68bc <rb_sha256_process_bytes>
    7190:	mov	r5, sl
    7194:	tst	r5, #1
    7198:	mov	r1, sl
    719c:	mov	r0, r6
    71a0:	movne	r1, #32
    71a4:	movne	r0, r7
    71a8:	mov	r2, r4
    71ac:	bl	68bc <rb_sha256_process_bytes>
    71b0:	lsrs	r5, r5, #1
    71b4:	bne	7194 <rb_sha256_crypt_r+0x20c>
    71b8:	mov	r1, r7
    71bc:	mov	r0, r4
    71c0:	bl	6a8c <rb_sha256_finish_ctx>
    71c4:	mov	r2, #0
    71c8:	mov	r3, #0
    71cc:	add	r1, pc, #636	; 0x27c
    71d0:	ldrd	r0, [r1]
    71d4:	ldr	r8, [fp, #-476]	; 0xfffffe24
    71d8:	strd	r2, [fp, #-180]	; 0xffffff4c
    71dc:	add	r3, pc, #628	; 0x274
    71e0:	ldrd	r2, [r3]
    71e4:	strd	r0, [fp, #-212]	; 0xffffff2c
    71e8:	add	r1, pc, #624	; 0x270
    71ec:	ldrd	r0, [r1]
    71f0:	strd	r2, [fp, #-204]	; 0xffffff34
    71f4:	add	r3, pc, #620	; 0x26c
    71f8:	ldrd	r2, [r3]
    71fc:	strd	r0, [fp, #-196]	; 0xffffff3c
    7200:	strd	r2, [fp, #-188]	; 0xffffff44
    7204:	str	r5, [fp, #-172]	; 0xffffff54
    7208:	add	r5, r5, #1
    720c:	mov	r2, r8
    7210:	mov	r1, sl
    7214:	mov	r0, r6
    7218:	bl	68bc <rb_sha256_process_bytes>
    721c:	cmp	sl, r5
    7220:	bhi	7208 <rb_sha256_crypt_r+0x280>
    7224:	sub	r9, fp, #420	; 0x1a4
    7228:	ldr	r0, [fp, #-476]	; 0xfffffe24
    722c:	mov	r1, r9
    7230:	bl	6a8c <rb_sha256_finish_ctx>
    7234:	add	r3, sl, #7
    7238:	cmp	sl, #31
    723c:	bic	r3, r3, #7
    7240:	sub	sp, sp, r3
    7244:	add	r3, sp, #8
    7248:	str	r3, [fp, #-456]	; 0xfffffe38
    724c:	bls	7e38 <rb_sha256_crypt_r+0xeb0>
    7250:	sub	lr, sl, #32
    7254:	add	r1, sp, #40	; 0x28
    7258:	lsr	lr, lr, #5
    725c:	mov	r5, r7
    7260:	add	ip, r3, lr, lsl #5
    7264:	add	ip, ip, #64	; 0x40
    7268:	ldrd	r6, [r9]
    726c:	sub	r0, r1, #32
    7270:	add	r1, r1, #32
    7274:	ldrd	r2, [r9, #8]
    7278:	strd	r6, [r1, #-64]	; 0xffffffc0
    727c:	cmp	ip, r1
    7280:	ldrd	r6, [r9, #16]
    7284:	strd	r2, [r0, #8]
    7288:	ldrd	r2, [r9, #24]
    728c:	strd	r6, [r0, #16]
    7290:	strd	r2, [r0, #24]
    7294:	bne	7268 <rb_sha256_crypt_r+0x2e0>
    7298:	ldr	r3, [fp, #-456]	; 0xfffffe38
    729c:	add	r0, lr, #1
    72a0:	mov	r7, r5
    72a4:	and	r2, sl, #31
    72a8:	add	r0, r3, r0, lsl #5
    72ac:	mov	r1, r9
    72b0:	bl	47e8 <memcpy@plt>
    72b4:	mov	r2, #0
    72b8:	mov	r3, #0
    72bc:	add	r1, pc, #396	; 0x18c
    72c0:	ldrd	r0, [r1]
    72c4:	mov	ip, #0
    72c8:	str	r4, [fp, #-472]	; 0xfffffe28
    72cc:	ldr	r5, [fp, #-476]	; 0xfffffe24
    72d0:	mov	r4, ip
    72d4:	ldr	r8, [fp, #-464]	; 0xfffffe30
    72d8:	strd	r2, [fp, #-180]	; 0xffffff4c
    72dc:	add	r3, pc, #372	; 0x174
    72e0:	ldrd	r2, [r3]
    72e4:	strd	r0, [fp, #-212]	; 0xffffff2c
    72e8:	add	r1, pc, #368	; 0x170
    72ec:	ldrd	r0, [r1]
    72f0:	ldr	r6, [fp, #-460]	; 0xfffffe34
    72f4:	strd	r2, [fp, #-204]	; 0xffffff34
    72f8:	add	r3, pc, #360	; 0x168
    72fc:	ldrd	r2, [r3]
    7300:	strd	r0, [fp, #-196]	; 0xffffff3c
    7304:	str	ip, [fp, #-172]	; 0xffffff54
    7308:	strd	r2, [fp, #-188]	; 0xffffff44
    730c:	mov	r2, r5
    7310:	mov	r1, r6
    7314:	mov	r0, r8
    7318:	add	r4, r4, #1
    731c:	bl	68bc <rb_sha256_process_bytes>
    7320:	ldrb	r2, [fp, #-452]	; 0xfffffe3c
    7324:	add	r2, r2, #16
    7328:	cmp	r2, r4
    732c:	bhi	730c <rb_sha256_crypt_r+0x384>
    7330:	mov	r1, r9
    7334:	ldr	r0, [fp, #-476]	; 0xfffffe24
    7338:	movw	r6, #43691	; 0xaaab
    733c:	movt	r6, #43690	; 0xaaaa
    7340:	mov	r8, #0
    7344:	ldr	r4, [fp, #-472]	; 0xfffffe28
    7348:	bl	6a8c <rb_sha256_finish_ctx>
    734c:	ldr	r2, [fp, #-460]	; 0xfffffe34
    7350:	mov	r1, r9
    7354:	add	r3, r2, #7
    7358:	bic	r3, r3, #7
    735c:	sub	sp, sp, r3
    7360:	add	r3, sp, #8
    7364:	mov	r0, r3
    7368:	str	r3, [fp, #-480]	; 0xfffffe20
    736c:	movw	r3, #18725	; 0x4925
    7370:	movt	r3, #9362	; 0x2492
    7374:	str	r3, [fp, #-472]	; 0xfffffe28
    7378:	bl	47e8 <memcpy@plt>
    737c:	str	r9, [fp, #-496]	; 0xfffffe10
    7380:	mov	r9, r4
    7384:	add	r5, pc, #204	; 0xcc
    7388:	ldrd	r4, [r5]
    738c:	mov	ip, #0
    7390:	mov	r1, #32
    7394:	mov	r0, r7
    7398:	add	r3, pc, #176	; 0xb0
    739c:	ldrd	r2, [r3]
    73a0:	str	ip, [fp, #-348]	; 0xfffffea4
    73a4:	strd	r4, [r9, #8]
    73a8:	add	r5, pc, #176	; 0xb0
    73ac:	ldrd	r4, [r5]
    73b0:	strd	r2, [r9]
    73b4:	mov	r2, r9
    73b8:	strd	r4, [r9, #16]
    73bc:	add	r5, pc, #164	; 0xa4
    73c0:	ldrd	r4, [r5]
    73c4:	strd	r4, [r9, #24]
    73c8:	mov	r4, #0
    73cc:	mov	r5, #0
    73d0:	strd	r4, [r9, #32]
    73d4:	ands	r4, r8, #1
    73d8:	movne	r1, sl
    73dc:	ldrne	r0, [fp, #-456]	; 0xfffffe38
    73e0:	bl	68bc <rb_sha256_process_bytes>
    73e4:	umull	r3, r2, r6, r8
    73e8:	lsr	r2, r2, #1
    73ec:	add	r2, r2, r2, lsl #1
    73f0:	cmp	r8, r2
    73f4:	bne	7c98 <rb_sha256_crypt_r+0xd10>
    73f8:	ldr	r3, [fp, #-472]	; 0xfffffe28
    73fc:	umull	r3, r2, r3, r8
    7400:	sub	r1, r8, r2
    7404:	add	r2, r2, r1, lsr #1
    7408:	lsr	r2, r2, #2
    740c:	rsb	r2, r2, r2, lsl #3
    7410:	cmp	r8, r2
    7414:	bne	7c84 <rb_sha256_crypt_r+0xcfc>
    7418:	cmp	r4, #0
    741c:	mov	r2, r9
    7420:	mov	r1, #32
    7424:	mov	r0, r7
    7428:	beq	7c58 <rb_sha256_crypt_r+0xcd0>
    742c:	bl	68bc <rb_sha256_process_bytes>
    7430:	mov	r1, r7
    7434:	mov	r0, r9
    7438:	bl	6a8c <rb_sha256_finish_ctx>
    743c:	ldr	r3, [fp, #-468]	; 0xfffffe2c
    7440:	add	r8, r8, #1
    7444:	cmp	r3, r8
    7448:	bne	7384 <rb_sha256_crypt_r+0x3fc>
    744c:	b	7494 <rb_sha256_crypt_r+0x50c>
    7450:	.word	0x6a09e667
    7454:	.word	0xbb67ae85
    7458:	.word	0x3c6ef372
    745c:	.word	0xa54ff53a
    7460:	.word	0x510e527f
    7464:	.word	0x9b05688c
    7468:	.word	0x1f83d9ab
    746c:	.word	0x5be0cd19
    7470:	.word	0x00012828
    7474:	.word	0x000127f4
    7478:	.word	0x00012fac
    747c:	.word	0x00012314
    7480:	.word	0x00012250
    7484:	.word	0x00012130
    7488:	.word	0x00011fd0
    748c:	.word	0x00011e64
    7490:	.word	0x00011d04
    7494:	ldr	r3, [fp, #-488]	; 0xfffffe18
    7498:	mov	r1, #0
    749c:	mov	r4, r9
    74a0:	ldr	r9, [fp, #-496]	; 0xfffffe10
    74a4:	ldr	r6, [fp, #-484]	; 0xfffffe1c
    74a8:	bic	r5, r3, r3, asr #31
    74ac:	mov	r2, r5
    74b0:	mov	r0, r6
    74b4:	bl	4608 <memset@plt>
    74b8:	ldr	r1, [pc, #-68]	; 747c <rb_sha256_crypt_r+0x4f4>
    74bc:	mov	r2, r5
    74c0:	mov	r0, r6
    74c4:	add	r1, pc, r1
    74c8:	add	r1, r1, #1088	; 0x440
    74cc:	bl	4548 <strncpy@plt>
    74d0:	mov	r0, r6
    74d4:	bl	47c4 <strlen@plt>
    74d8:	adds	r6, r6, r0
    74dc:	ldreq	r3, [fp, #-484]	; 0xfffffe1c
    74e0:	addeq	r6, r3, r5
    74e4:	ldr	r3, [fp, #-488]	; 0xfffffe18
    74e8:	sub	r5, r3, #3
    74ec:	ldr	r3, [fp, #-492]	; 0xfffffe14
    74f0:	bic	r8, r5, r5, asr #31
    74f4:	cmp	r3, #0
    74f8:	bne	7cc0 <rb_sha256_crypt_r+0xd38>
    74fc:	mov	r1, #0
    7500:	mov	r0, r6
    7504:	ldr	r2, [fp, #-460]	; 0xfffffe34
    7508:	bl	4608 <memset@plt>
    750c:	mov	r0, r6
    7510:	ldr	r1, [fp, #-464]	; 0xfffffe30
    7514:	ldr	r3, [fp, #-460]	; 0xfffffe34
    7518:	cmp	r8, r3
    751c:	movcs	r8, r3
    7520:	mov	r2, r8
    7524:	sub	r5, r5, r8
    7528:	bl	4548 <strncpy@plt>
    752c:	ldr	r6, [fp, #-484]	; 0xfffffe1c
    7530:	mov	r0, r6
    7534:	bl	47c4 <strlen@plt>
    7538:	ldr	r3, [fp, #-460]	; 0xfffffe34
    753c:	adds	r0, r6, r0
    7540:	moveq	r0, r3
    7544:	cmp	r5, #0
    7548:	ble	7cac <rb_sha256_crypt_r+0xd24>
    754c:	ldrb	r3, [fp, #-442]	; 0xfffffe46
    7550:	mov	r2, #36	; 0x24
    7554:	cmp	r5, #1
    7558:	ldrb	r1, [fp, #-452]	; 0xfffffe3c
    755c:	strb	r2, [r0]
    7560:	ldrb	r2, [fp, #-432]	; 0xfffffe50
    7564:	lsl	r3, r3, #8
    7568:	orr	r3, r3, r1, lsl #16
    756c:	orr	r3, r3, r2
    7570:	beq	7cac <rb_sha256_crypt_r+0xd24>
    7574:	ldr	r2, [pc, #-252]	; 7480 <rb_sha256_crypt_r+0x4f8>
    7578:	and	r1, r3, #63	; 0x3f
    757c:	sub	ip, r5, #2
    7580:	cmp	ip, #0
    7584:	lsr	ip, r3, #6
    7588:	add	r2, pc, r2
    758c:	add	r1, r2, r1
    7590:	ldrb	r1, [r1, #1100]	; 0x44c
    7594:	strb	r1, [r0, #1]
    7598:	ble	7cac <rb_sha256_crypt_r+0xd24>
    759c:	and	ip, ip, #63	; 0x3f
    75a0:	sub	r1, r5, #3
    75a4:	add	ip, r2, ip
    75a8:	cmp	r1, #0
    75ac:	lsr	r1, r3, #12
    75b0:	ldrb	ip, [ip, #1100]	; 0x44c
    75b4:	strb	ip, [r0, #2]
    75b8:	ble	7cac <rb_sha256_crypt_r+0xd24>
    75bc:	and	ip, r1, #63	; 0x3f
    75c0:	lsr	r1, r3, #18
    75c4:	sub	r3, r5, #4
    75c8:	add	ip, r2, ip
    75cc:	cmp	r3, #0
    75d0:	ldrb	r3, [ip, #1100]	; 0x44c
    75d4:	strb	r3, [r0, #3]
    75d8:	ble	7cac <rb_sha256_crypt_r+0xd24>
    75dc:	ldrb	r3, [fp, #-451]	; 0xfffffe3d
    75e0:	add	r1, r2, r1
    75e4:	cmp	r5, #5
    75e8:	ldrb	lr, [fp, #-431]	; 0xfffffe51
    75ec:	ldrb	ip, [r1, #1100]	; 0x44c
    75f0:	lsl	r3, r3, #8
    75f4:	ldrb	r1, [fp, #-441]	; 0xfffffe47
    75f8:	orr	r3, r3, lr, lsl #16
    75fc:	strb	ip, [r0, #4]
    7600:	orr	r1, r3, r1
    7604:	beq	7cac <rb_sha256_crypt_r+0xd24>
    7608:	and	r3, r1, #63	; 0x3f
    760c:	sub	ip, r5, #6
    7610:	add	r3, r2, r3
    7614:	cmp	ip, #0
    7618:	lsr	ip, r1, #6
    761c:	ldrb	r3, [r3, #1100]	; 0x44c
    7620:	strb	r3, [r0, #5]
    7624:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7628:	and	r3, ip, #63	; 0x3f
    762c:	sub	ip, r5, #7
    7630:	add	r3, r2, r3
    7634:	cmp	ip, #0
    7638:	lsr	ip, r1, #12
    763c:	ldrb	r3, [r3, #1100]	; 0x44c
    7640:	strb	r3, [r0, #6]
    7644:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7648:	and	ip, ip, #63	; 0x3f
    764c:	sub	r3, r5, #8
    7650:	lsr	r1, r1, #18
    7654:	add	ip, r2, ip
    7658:	cmp	r3, #0
    765c:	ldrb	r3, [ip, #1100]	; 0x44c
    7660:	strb	r3, [r0, #7]
    7664:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7668:	ldrb	ip, [fp, #-430]	; 0xfffffe52
    766c:	add	r2, r2, r1
    7670:	cmp	r5, #9
    7674:	ldrb	r1, [fp, #-440]	; 0xfffffe48
    7678:	ldrb	r2, [r2, #1100]	; 0x44c
    767c:	lsl	r3, ip, #8
    7680:	ldrb	lr, [fp, #-450]	; 0xfffffe3e
    7684:	orr	r3, r3, r1, lsl #16
    7688:	strb	r2, [r0, #8]
    768c:	orr	r3, r3, lr
    7690:	beq	7cac <rb_sha256_crypt_r+0xd24>
    7694:	ldr	r2, [pc, #-536]	; 7484 <rb_sha256_crypt_r+0x4fc>
    7698:	and	r1, r3, #63	; 0x3f
    769c:	sub	ip, r5, #10
    76a0:	cmp	ip, #0
    76a4:	lsr	ip, r3, #6
    76a8:	add	r2, pc, r2
    76ac:	add	r1, r2, r1
    76b0:	ldrb	r1, [r1, #1100]	; 0x44c
    76b4:	strb	r1, [r0, #9]
    76b8:	ble	7cac <rb_sha256_crypt_r+0xd24>
    76bc:	and	ip, ip, #63	; 0x3f
    76c0:	sub	r1, r5, #11
    76c4:	add	ip, r2, ip
    76c8:	cmp	r1, #0
    76cc:	lsr	r1, r3, #12
    76d0:	ldrb	ip, [ip, #1100]	; 0x44c
    76d4:	strb	ip, [r0, #10]
    76d8:	ble	7cac <rb_sha256_crypt_r+0xd24>
    76dc:	and	ip, r1, #63	; 0x3f
    76e0:	lsr	r1, r3, #18
    76e4:	sub	r3, r5, #12
    76e8:	add	ip, r2, ip
    76ec:	cmp	r3, #0
    76f0:	ldrb	r3, [ip, #1100]	; 0x44c
    76f4:	strb	r3, [r0, #11]
    76f8:	ble	7cac <rb_sha256_crypt_r+0xd24>
    76fc:	ldrb	r3, [fp, #-439]	; 0xfffffe49
    7700:	add	r1, r2, r1
    7704:	cmp	r5, #13
    7708:	ldrb	lr, [fp, #-449]	; 0xfffffe3f
    770c:	ldrb	ip, [r1, #1100]	; 0x44c
    7710:	lsl	r3, r3, #8
    7714:	ldrb	r1, [fp, #-429]	; 0xfffffe53
    7718:	orr	r3, r3, lr, lsl #16
    771c:	strb	ip, [r0, #12]
    7720:	orr	r1, r3, r1
    7724:	beq	7cac <rb_sha256_crypt_r+0xd24>
    7728:	and	r3, r1, #63	; 0x3f
    772c:	sub	ip, r5, #14
    7730:	add	r3, r2, r3
    7734:	cmp	ip, #0
    7738:	lsr	ip, r1, #6
    773c:	ldrb	r3, [r3, #1100]	; 0x44c
    7740:	strb	r3, [r0, #13]
    7744:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7748:	and	r3, ip, #63	; 0x3f
    774c:	sub	ip, r5, #15
    7750:	add	r3, r2, r3
    7754:	cmp	ip, #0
    7758:	lsr	ip, r1, #12
    775c:	ldrb	r3, [r3, #1100]	; 0x44c
    7760:	strb	r3, [r0, #14]
    7764:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7768:	and	ip, ip, #63	; 0x3f
    776c:	sub	r3, r5, #16
    7770:	lsr	r1, r1, #18
    7774:	add	ip, r2, ip
    7778:	cmp	r3, #0
    777c:	ldrb	r3, [ip, #1100]	; 0x44c
    7780:	strb	r3, [r0, #15]
    7784:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7788:	ldrb	r3, [fp, #-448]	; 0xfffffe40
    778c:	add	r1, r2, r1
    7790:	cmp	r5, #17
    7794:	ldrb	lr, [fp, #-428]	; 0xfffffe54
    7798:	ldrb	ip, [r1, #1100]	; 0x44c
    779c:	lsl	r3, r3, #8
    77a0:	ldrb	r1, [fp, #-438]	; 0xfffffe4a
    77a4:	orr	r3, r3, lr, lsl #16
    77a8:	strb	ip, [r0, #16]
    77ac:	orr	r1, r3, r1
    77b0:	beq	7cac <rb_sha256_crypt_r+0xd24>
    77b4:	and	r3, r1, #63	; 0x3f
    77b8:	sub	ip, r5, #18
    77bc:	add	r3, r2, r3
    77c0:	cmp	ip, #0
    77c4:	lsr	ip, r1, #6
    77c8:	ldrb	r3, [r3, #1100]	; 0x44c
    77cc:	strb	r3, [r0, #17]
    77d0:	ble	7cac <rb_sha256_crypt_r+0xd24>
    77d4:	and	ip, ip, #63	; 0x3f
    77d8:	sub	r3, r5, #19
    77dc:	add	r2, r2, ip
    77e0:	cmp	r3, #0
    77e4:	lsr	r3, r1, #12
    77e8:	ldrb	r2, [r2, #1100]	; 0x44c
    77ec:	strb	r2, [r0, #18]
    77f0:	ble	7cac <rb_sha256_crypt_r+0xd24>
    77f4:	ldr	r2, [pc, #-884]	; 7488 <rb_sha256_crypt_r+0x500>
    77f8:	and	r3, r3, #63	; 0x3f
    77fc:	sub	ip, r5, #20
    7800:	cmp	ip, #0
    7804:	lsr	r1, r1, #18
    7808:	add	r2, pc, r2
    780c:	add	r3, r2, r3
    7810:	ldrb	r3, [r3, #1100]	; 0x44c
    7814:	strb	r3, [r0, #19]
    7818:	ble	7cac <rb_sha256_crypt_r+0xd24>
    781c:	ldrb	r3, [fp, #-427]	; 0xfffffe55
    7820:	add	r1, r2, r1
    7824:	cmp	r5, #21
    7828:	ldrb	lr, [fp, #-437]	; 0xfffffe4b
    782c:	ldrb	ip, [r1, #1100]	; 0x44c
    7830:	lsl	r3, r3, #8
    7834:	ldrb	r1, [fp, #-447]	; 0xfffffe41
    7838:	orr	r3, r3, lr, lsl #16
    783c:	strb	ip, [r0, #20]
    7840:	orr	r1, r3, r1
    7844:	beq	7cac <rb_sha256_crypt_r+0xd24>
    7848:	and	r3, r1, #63	; 0x3f
    784c:	sub	ip, r5, #22
    7850:	add	r3, r2, r3
    7854:	cmp	ip, #0
    7858:	lsr	ip, r1, #6
    785c:	ldrb	r3, [r3, #1100]	; 0x44c
    7860:	strb	r3, [r0, #21]
    7864:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7868:	and	r3, ip, #63	; 0x3f
    786c:	sub	ip, r5, #23
    7870:	add	r3, r2, r3
    7874:	cmp	ip, #0
    7878:	lsr	ip, r1, #12
    787c:	ldrb	r3, [r3, #1100]	; 0x44c
    7880:	strb	r3, [r0, #22]
    7884:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7888:	and	ip, ip, #63	; 0x3f
    788c:	sub	r3, r5, #24
    7890:	lsr	r1, r1, #18
    7894:	add	ip, r2, ip
    7898:	cmp	r3, #0
    789c:	ldrb	r3, [ip, #1100]	; 0x44c
    78a0:	strb	r3, [r0, #23]
    78a4:	ble	7cac <rb_sha256_crypt_r+0xd24>
    78a8:	ldrb	r3, [fp, #-436]	; 0xfffffe4c
    78ac:	add	r1, r2, r1
    78b0:	cmp	r5, #25
    78b4:	ldrb	lr, [fp, #-446]	; 0xfffffe42
    78b8:	ldrb	ip, [r1, #1100]	; 0x44c
    78bc:	lsl	r3, r3, #8
    78c0:	ldrb	r1, [fp, #-426]	; 0xfffffe56
    78c4:	orr	r3, r3, lr, lsl #16
    78c8:	strb	ip, [r0, #24]
    78cc:	orr	r1, r3, r1
    78d0:	beq	7cac <rb_sha256_crypt_r+0xd24>
    78d4:	and	r3, r1, #63	; 0x3f
    78d8:	sub	ip, r5, #26
    78dc:	add	r3, r2, r3
    78e0:	cmp	ip, #0
    78e4:	lsr	ip, r1, #6
    78e8:	ldrb	r3, [r3, #1100]	; 0x44c
    78ec:	strb	r3, [r0, #25]
    78f0:	ble	7cac <rb_sha256_crypt_r+0xd24>
    78f4:	and	r3, ip, #63	; 0x3f
    78f8:	sub	ip, r5, #27
    78fc:	add	r3, r2, r3
    7900:	cmp	ip, #0
    7904:	lsr	ip, r1, #12
    7908:	ldrb	r3, [r3, #1100]	; 0x44c
    790c:	strb	r3, [r0, #26]
    7910:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7914:	and	ip, ip, #63	; 0x3f
    7918:	sub	r3, r5, #28
    791c:	lsr	r1, r1, #18
    7920:	add	ip, r2, ip
    7924:	cmp	r3, #0
    7928:	ldrb	r3, [ip, #1100]	; 0x44c
    792c:	strb	r3, [r0, #27]
    7930:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7934:	ldrb	ip, [fp, #-445]	; 0xfffffe43
    7938:	add	r2, r2, r1
    793c:	cmp	r5, #29
    7940:	ldrb	r1, [fp, #-425]	; 0xfffffe57
    7944:	ldrb	r2, [r2, #1100]	; 0x44c
    7948:	lsl	r3, ip, #8
    794c:	ldrb	lr, [fp, #-435]	; 0xfffffe4d
    7950:	orr	r3, r3, r1, lsl #16
    7954:	strb	r2, [r0, #28]
    7958:	orr	r3, r3, lr
    795c:	beq	7cac <rb_sha256_crypt_r+0xd24>
    7960:	ldr	r2, [pc, #-1244]	; 748c <rb_sha256_crypt_r+0x504>
    7964:	and	r1, r3, #63	; 0x3f
    7968:	sub	ip, r5, #30
    796c:	cmp	ip, #0
    7970:	lsr	ip, r3, #6
    7974:	add	r2, pc, r2
    7978:	add	r1, r2, r1
    797c:	ldrb	r1, [r1, #1100]	; 0x44c
    7980:	strb	r1, [r0, #29]
    7984:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7988:	and	ip, ip, #63	; 0x3f
    798c:	sub	r1, r5, #31
    7990:	add	ip, r2, ip
    7994:	cmp	r1, #0
    7998:	lsr	r1, r3, #12
    799c:	ldrb	ip, [ip, #1100]	; 0x44c
    79a0:	strb	ip, [r0, #30]
    79a4:	ble	7cac <rb_sha256_crypt_r+0xd24>
    79a8:	and	ip, r1, #63	; 0x3f
    79ac:	lsr	r1, r3, #18
    79b0:	sub	r3, r5, #32
    79b4:	add	ip, r2, ip
    79b8:	cmp	r3, #0
    79bc:	ldrb	r3, [ip, #1100]	; 0x44c
    79c0:	strb	r3, [r0, #31]
    79c4:	ble	7cac <rb_sha256_crypt_r+0xd24>
    79c8:	ldrb	r3, [fp, #-424]	; 0xfffffe58
    79cc:	add	r1, r2, r1
    79d0:	cmp	r5, #33	; 0x21
    79d4:	ldrb	lr, [fp, #-434]	; 0xfffffe4e
    79d8:	ldrb	ip, [r1, #1100]	; 0x44c
    79dc:	lsl	r3, r3, #8
    79e0:	ldrb	r1, [fp, #-444]	; 0xfffffe44
    79e4:	orr	r3, r3, lr, lsl #16
    79e8:	strb	ip, [r0, #32]
    79ec:	orr	r1, r3, r1
    79f0:	beq	7cac <rb_sha256_crypt_r+0xd24>
    79f4:	and	r3, r1, #63	; 0x3f
    79f8:	sub	ip, r5, #34	; 0x22
    79fc:	add	r3, r2, r3
    7a00:	cmp	ip, #0
    7a04:	lsr	ip, r1, #6
    7a08:	ldrb	r3, [r3, #1100]	; 0x44c
    7a0c:	strb	r3, [r0, #33]	; 0x21
    7a10:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7a14:	and	r3, ip, #63	; 0x3f
    7a18:	sub	ip, r5, #35	; 0x23
    7a1c:	add	r3, r2, r3
    7a20:	cmp	ip, #0
    7a24:	lsr	ip, r1, #12
    7a28:	ldrb	r3, [r3, #1100]	; 0x44c
    7a2c:	strb	r3, [r0, #34]	; 0x22
    7a30:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7a34:	and	ip, ip, #63	; 0x3f
    7a38:	sub	r3, r5, #36	; 0x24
    7a3c:	lsr	r1, r1, #18
    7a40:	add	ip, r2, ip
    7a44:	cmp	r3, #0
    7a48:	ldrb	r3, [ip, #1100]	; 0x44c
    7a4c:	strb	r3, [r0, #35]	; 0x23
    7a50:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7a54:	ldrb	r3, [fp, #-433]	; 0xfffffe4f
    7a58:	add	r1, r2, r1
    7a5c:	cmp	r5, #37	; 0x25
    7a60:	ldrb	lr, [fp, #-443]	; 0xfffffe45
    7a64:	ldrb	ip, [r1, #1100]	; 0x44c
    7a68:	lsl	r3, r3, #8
    7a6c:	ldrb	r1, [fp, #-423]	; 0xfffffe59
    7a70:	orr	r3, r3, lr, lsl #16
    7a74:	strb	ip, [r0, #36]	; 0x24
    7a78:	orr	r1, r3, r1
    7a7c:	beq	7cac <rb_sha256_crypt_r+0xd24>
    7a80:	and	r3, r1, #63	; 0x3f
    7a84:	sub	ip, r5, #38	; 0x26
    7a88:	add	r3, r2, r3
    7a8c:	cmp	ip, #0
    7a90:	lsr	ip, r1, #6
    7a94:	ldrb	r3, [r3, #1100]	; 0x44c
    7a98:	strb	r3, [r0, #37]	; 0x25
    7a9c:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7aa0:	and	ip, ip, #63	; 0x3f
    7aa4:	sub	r3, r5, #39	; 0x27
    7aa8:	add	r2, r2, ip
    7aac:	cmp	r3, #0
    7ab0:	lsr	r3, r1, #12
    7ab4:	ldrb	r2, [r2, #1100]	; 0x44c
    7ab8:	strb	r2, [r0, #38]	; 0x26
    7abc:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7ac0:	ldr	ip, [pc, #-1592]	; 7490 <rb_sha256_crypt_r+0x508>
    7ac4:	and	r3, r3, #63	; 0x3f
    7ac8:	sub	r2, r5, #40	; 0x28
    7acc:	cmp	r2, #0
    7ad0:	lsr	r1, r1, #18
    7ad4:	add	ip, pc, ip
    7ad8:	add	r3, ip, r3
    7adc:	ldrb	r3, [r3, #1100]	; 0x44c
    7ae0:	strb	r3, [r0, #39]	; 0x27
    7ae4:	ble	7cac <rb_sha256_crypt_r+0xd24>
    7ae8:	add	r1, ip, r1
    7aec:	cmp	r5, #41	; 0x29
    7af0:	ldrh	r3, [r7, #30]
    7af4:	ldrb	r2, [r1, #1100]	; 0x44c
    7af8:	strb	r2, [r0, #40]	; 0x28
    7afc:	beq	7cac <rb_sha256_crypt_r+0xd24>
    7b00:	and	r2, r3, #63	; 0x3f
    7b04:	cmp	r5, #42	; 0x2a
    7b08:	lsr	r1, r3, #6
    7b0c:	add	r2, ip, r2
    7b10:	ldrb	r2, [r2, #1100]	; 0x44c
    7b14:	strb	r2, [r0, #41]	; 0x29
    7b18:	beq	7cac <rb_sha256_crypt_r+0xd24>
    7b1c:	and	r1, r1, #63	; 0x3f
    7b20:	cmp	r5, #43	; 0x2b
    7b24:	lsr	r3, r3, #12
    7b28:	add	r1, ip, r1
    7b2c:	ldrb	r2, [r1, #1100]	; 0x44c
    7b30:	strb	r2, [r0, #42]	; 0x2a
    7b34:	beq	7cac <rb_sha256_crypt_r+0xd24>
    7b38:	add	r3, ip, r3
    7b3c:	cmp	r5, #44	; 0x2c
    7b40:	ldrb	r3, [r3, #1100]	; 0x44c
    7b44:	strb	r3, [r0, #43]	; 0x2b
    7b48:	beq	7cac <rb_sha256_crypt_r+0xd24>
    7b4c:	mov	r3, #0
    7b50:	mov	r5, r6
    7b54:	strb	r3, [r0, #44]	; 0x2c
    7b58:	mov	r1, r7
    7b5c:	mov	r6, #0
    7b60:	add	r3, pc, #736	; 0x2e0
    7b64:	ldrd	r2, [r3]
    7b68:	mov	r7, #0
    7b6c:	mov	r8, #0
    7b70:	mov	r0, r4
    7b74:	str	r8, [fp, #-348]	; 0xfffffea4
    7b78:	strd	r6, [r4, #32]
    7b7c:	add	r7, pc, #716	; 0x2cc
    7b80:	ldrd	r6, [r7]
    7b84:	strd	r6, [r4]
    7b88:	add	r7, pc, #712	; 0x2c8
    7b8c:	ldrd	r6, [r7]
    7b90:	strd	r2, [r4, #8]
    7b94:	add	r3, pc, #708	; 0x2c4
    7b98:	ldrd	r2, [r3]
    7b9c:	strd	r6, [r4, #16]
    7ba0:	mov	r6, #0
    7ba4:	mov	r7, #0
    7ba8:	strd	r2, [r4, #24]
    7bac:	bl	6a8c <rb_sha256_finish_ctx>
    7bb0:	mov	r1, r8
    7bb4:	mov	r2, sl
    7bb8:	strd	r6, [r9]
    7bbc:	strd	r6, [r9, #8]
    7bc0:	strd	r6, [r9, #16]
    7bc4:	strd	r6, [r9, #24]
    7bc8:	ldr	r0, [fp, #-456]	; 0xfffffe38
    7bcc:	bl	4608 <memset@plt>
    7bd0:	mov	r1, r8
    7bd4:	ldr	r0, [fp, #-480]	; 0xfffffe20
    7bd8:	ldr	r2, [fp, #-460]	; 0xfffffe34
    7bdc:	bl	4608 <memset@plt>
    7be0:	mov	r1, r8
    7be4:	mov	r2, #172	; 0xac
    7be8:	mov	r0, r4
    7bec:	bl	4608 <memset@plt>
    7bf0:	mov	r1, r8
    7bf4:	mov	r2, #172	; 0xac
    7bf8:	ldr	r0, [fp, #-476]	; 0xfffffe24
    7bfc:	bl	4608 <memset@plt>
    7c00:	ldr	r3, [fp, #-500]	; 0xfffffe0c
    7c04:	cmp	r3, r8
    7c08:	beq	7c1c <rb_sha256_crypt_r+0xc94>
    7c0c:	mov	r2, sl
    7c10:	mov	r1, r8
    7c14:	mov	r0, r3
    7c18:	bl	4608 <memset@plt>
    7c1c:	ldr	r3, [fp, #-504]	; 0xfffffe08
    7c20:	cmp	r3, #0
    7c24:	beq	7c38 <rb_sha256_crypt_r+0xcb0>
    7c28:	mov	r0, r3
    7c2c:	mov	r1, #0
    7c30:	ldr	r2, [fp, #-460]	; 0xfffffe34
    7c34:	bl	4608 <memset@plt>
    7c38:	mov	r0, r5
    7c3c:	sub	sp, fp, #32
    7c40:	ldrd	r4, [sp]
    7c44:	ldrd	r6, [sp, #8]
    7c48:	ldrd	r8, [sp, #16]
    7c4c:	ldrd	sl, [sp, #24]
    7c50:	add	sp, sp, #32
    7c54:	pop	{pc}		; (ldr pc, [sp], #4)
    7c58:	mov	r1, sl
    7c5c:	ldr	r0, [fp, #-456]	; 0xfffffe38
    7c60:	add	r8, r8, #1
    7c64:	bl	68bc <rb_sha256_process_bytes>
    7c68:	mov	r1, r7
    7c6c:	mov	r0, r9
    7c70:	bl	6a8c <rb_sha256_finish_ctx>
    7c74:	ldr	r3, [fp, #-468]	; 0xfffffe2c
    7c78:	cmp	r3, r8
    7c7c:	bne	7384 <rb_sha256_crypt_r+0x3fc>
    7c80:	b	7494 <rb_sha256_crypt_r+0x50c>
    7c84:	mov	r2, r9
    7c88:	mov	r1, sl
    7c8c:	ldr	r0, [fp, #-456]	; 0xfffffe38
    7c90:	bl	68bc <rb_sha256_process_bytes>
    7c94:	b	7418 <rb_sha256_crypt_r+0x490>
    7c98:	mov	r2, r9
    7c9c:	ldr	r0, [fp, #-480]	; 0xfffffe20
    7ca0:	ldr	r1, [fp, #-460]	; 0xfffffe34
    7ca4:	bl	68bc <rb_sha256_process_bytes>
    7ca8:	b	73f8 <rb_sha256_crypt_r+0x470>
    7cac:	bl	4cbc <__errno_location@plt>
    7cb0:	mov	r3, #34	; 0x22
    7cb4:	mov	r5, #0
    7cb8:	str	r3, [r0]
    7cbc:	b	7b58 <rb_sha256_crypt_r+0xbd0>
    7cc0:	ldr	r2, [fp, #-468]	; 0xfffffe2c
    7cc4:	mov	r1, r8
    7cc8:	mov	r0, r6
    7ccc:	ldr	r3, [pc, #404]	; 7e68 <rb_sha256_crypt_r+0xee0>
    7cd0:	str	r2, [sp]
    7cd4:	ldr	r2, [pc, #400]	; 7e6c <rb_sha256_crypt_r+0xee4>
    7cd8:	add	r3, pc, r3
    7cdc:	add	r3, r3, #1088	; 0x440
    7ce0:	add	r3, r3, #4
    7ce4:	add	r2, pc, r2
    7ce8:	bl	4b84 <snprintf@plt>
    7cec:	sub	r5, r5, r0
    7cf0:	add	r6, r6, r0
    7cf4:	bic	r8, r5, r5, asr #31
    7cf8:	b	74fc <rb_sha256_crypt_r+0x574>
    7cfc:	ldr	r1, [fp, #-464]	; 0xfffffe30
    7d00:	ldr	r2, [fp, #-460]	; 0xfffffe34
    7d04:	add	r3, r2, #11
    7d08:	bic	r3, r3, #7
    7d0c:	sub	sp, sp, r3
    7d10:	add	r0, sp, #12
    7d14:	bl	47e8 <memcpy@plt>
    7d18:	str	r0, [fp, #-504]	; 0xfffffe08
    7d1c:	str	r0, [fp, #-464]	; 0xfffffe30
    7d20:	b	7060 <rb_sha256_crypt_r+0xd8>
    7d24:	add	r3, r0, #11
    7d28:	mov	r1, r6
    7d2c:	bic	r3, r3, #7
    7d30:	mov	r2, r0
    7d34:	sub	sp, sp, r3
    7d38:	add	r0, sp, #12
    7d3c:	bl	47e8 <memcpy@plt>
    7d40:	mov	r6, r0
    7d44:	str	r0, [fp, #-500]	; 0xfffffe0c
    7d48:	b	7050 <rb_sha256_crypt_r+0xc8>
    7d4c:	sub	r3, fp, #212	; 0xd4
    7d50:	mov	r2, #10
    7d54:	mov	r1, r3
    7d58:	str	r3, [fp, #-476]	; 0xfffffe24
    7d5c:	ldr	r3, [fp, #-464]	; 0xfffffe30
    7d60:	add	r0, r3, #7
    7d64:	bl	47dc <strtoul@plt>
    7d68:	ldr	r3, [fp, #-212]	; 0xffffff2c
    7d6c:	ldrb	r2, [r3]
    7d70:	cmp	r2, #36	; 0x24
    7d74:	movwne	r3, #5000	; 0x1388
    7d78:	strne	r3, [fp, #-468]	; 0xfffffe2c
    7d7c:	bne	7018 <rb_sha256_crypt_r+0x90>
    7d80:	add	r3, r3, #1
    7d84:	movw	r2, #51711	; 0xc9ff
    7d88:	movt	r2, #15258	; 0x3b9a
    7d8c:	cmp	r0, r2
    7d90:	str	r3, [fp, #-464]	; 0xfffffe30
    7d94:	movcc	r3, r0
    7d98:	movcs	r3, r2
    7d9c:	cmp	r3, #1000	; 0x3e8
    7da0:	mov	r2, #1
    7da4:	movcc	r3, #1000	; 0x3e8
    7da8:	str	r2, [fp, #-492]	; 0xfffffe14
    7dac:	str	r3, [fp, #-468]	; 0xfffffe2c
    7db0:	b	7018 <rb_sha256_crypt_r+0x90>
    7db4:	mov	r2, r4
    7db8:	mov	r1, sl
    7dbc:	mov	r0, r7
    7dc0:	bl	68bc <rb_sha256_process_bytes>
    7dc4:	cmp	sl, #0
    7dc8:	bne	7190 <rb_sha256_crypt_r+0x208>
    7dcc:	mov	r1, r7
    7dd0:	mov	r0, r4
    7dd4:	bl	6a8c <rb_sha256_finish_ctx>
    7dd8:	add	r3, pc, #112	; 0x70
    7ddc:	ldrd	r2, [r3]
    7de0:	sub	r9, fp, #420	; 0x1a4
    7de4:	mov	r1, r9
    7de8:	ldr	r0, [fp, #-476]	; 0xfffffe24
    7dec:	strd	r2, [fp, #-212]	; 0xffffff2c
    7df0:	add	r3, pc, #80	; 0x50
    7df4:	ldrd	r2, [r3]
    7df8:	strd	r2, [fp, #-204]	; 0xffffff34
    7dfc:	add	r3, pc, #84	; 0x54
    7e00:	ldrd	r2, [r3]
    7e04:	str	sl, [fp, #-172]	; 0xffffff54
    7e08:	strd	r2, [fp, #-196]	; 0xffffff3c
    7e0c:	add	r3, pc, #76	; 0x4c
    7e10:	ldrd	r2, [r3]
    7e14:	strd	r2, [fp, #-188]	; 0xffffff44
    7e18:	mov	r2, #0
    7e1c:	mov	r3, #0
    7e20:	strd	r2, [fp, #-180]	; 0xffffff4c
    7e24:	bl	6a8c <rb_sha256_finish_ctx>
    7e28:	add	r0, sp, #8
    7e2c:	mov	r2, sl
    7e30:	str	r0, [fp, #-456]	; 0xfffffe38
    7e34:	b	72ac <rb_sha256_crypt_r+0x324>
    7e38:	mov	r2, sl
    7e3c:	ldr	r0, [fp, #-456]	; 0xfffffe38
    7e40:	b	72ac <rb_sha256_crypt_r+0x324>
    7e44:	nop	{0}
    7e48:	.word	0x3c6ef372
    7e4c:	.word	0xa54ff53a
    7e50:	.word	0x6a09e667
    7e54:	.word	0xbb67ae85
    7e58:	.word	0x510e527f
    7e5c:	.word	0x9b05688c
    7e60:	.word	0x1f83d9ab
    7e64:	.word	0x5be0cd19
    7e68:	.word	0x00011b00
    7e6c:	.word	0x000122ec

00007e70 <rb_sha512_crypt_r>:
    7e70:	ldr	ip, [pc, #1328]	; 83a8 <rb_sha512_crypt_r+0x538>
    7e74:	strd	r4, [sp, #-36]!	; 0xffffffdc
    7e78:	mov	r4, r1
    7e7c:	strd	r6, [sp, #8]
    7e80:	mov	r6, r0
    7e84:	strd	r8, [sp, #16]
    7e88:	strd	sl, [sp, #24]
    7e8c:	add	fp, sp, #32
    7e90:	str	lr, [sp, #32]
    7e94:	sub	sp, sp, #884	; 0x374
    7e98:	add	ip, pc, ip
    7e9c:	add	r0, ip, #1168	; 0x490
    7ea0:	str	r3, [fp, #-892]	; 0xfffffc84
    7ea4:	str	r2, [fp, #-888]	; 0xfffffc88
    7ea8:	mov	r2, #3
    7eac:	str	r1, [fp, #-868]	; 0xfffffc9c
    7eb0:	bl	4be4 <strncmp@plt>
    7eb4:	ldr	r1, [pc, #1264]	; 83ac <rb_sha512_crypt_r+0x53c>
    7eb8:	cmp	r0, #0
    7ebc:	mov	r2, #7
    7ec0:	addeq	r3, r4, #3
    7ec4:	streq	r3, [fp, #-868]	; 0xfffffc9c
    7ec8:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    7ecc:	add	r1, pc, r1
    7ed0:	add	r1, r1, #1168	; 0x490
    7ed4:	add	r1, r1, #4
    7ed8:	bl	4be4 <strncmp@plt>
    7edc:	subs	r3, r0, #0
    7ee0:	str	r3, [fp, #-896]	; 0xfffffc80
    7ee4:	beq	9404 <rb_sha512_crypt_r+0x1594>
    7ee8:	mov	r3, #0
    7eec:	str	r3, [fp, #-896]	; 0xfffffc80
    7ef0:	movw	r3, #5000	; 0x1388
    7ef4:	str	r3, [fp, #-872]	; 0xfffffc98
    7ef8:	sub	r3, fp, #380	; 0x17c
    7efc:	str	r3, [fp, #-880]	; 0xfffffc90
    7f00:	ldr	r1, [pc, #1192]	; 83b0 <rb_sha512_crypt_r+0x540>
    7f04:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    7f08:	add	r1, pc, r1
    7f0c:	bl	4bb4 <strcspn@plt>
    7f10:	cmp	r0, #16
    7f14:	movcc	r3, r0
    7f18:	movcs	r3, #16
    7f1c:	mov	r0, r6
    7f20:	str	r3, [fp, #-864]	; 0xfffffca0
    7f24:	bl	47c4 <strlen@plt>
    7f28:	ands	r3, r6, #7
    7f2c:	str	r0, [fp, #-856]	; 0xfffffca8
    7f30:	streq	r3, [fp, #-904]	; 0xfffffc78
    7f34:	bne	93dc <rb_sha512_crypt_r+0x156c>
    7f38:	ldr	r3, [fp, #-868]	; 0xfffffc9c
    7f3c:	ands	r3, r3, #7
    7f40:	streq	r3, [fp, #-908]	; 0xfffffc74
    7f44:	bne	93b4 <rb_sha512_crypt_r+0x1544>
    7f48:	sub	r4, fp, #724	; 0x2d4
    7f4c:	mov	r8, #0
    7f50:	ldr	r7, [fp, #-856]	; 0xfffffca8
    7f54:	mov	r9, #0
    7f58:	sub	r5, fp, #372	; 0x174
    7f5c:	mov	r2, r4
    7f60:	mov	r0, r6
    7f64:	strd	r8, [r4, #64]	; 0x40
    7f68:	sub	r8, fp, #852	; 0x354
    7f6c:	str	r8, [fp, #-876]	; 0xfffffc94
    7f70:	mov	r1, r7
    7f74:	add	r9, pc, #1004	; 0x3ec
    7f78:	ldrd	r8, [r9]
    7f7c:	strd	r8, [r4]
    7f80:	add	r9, pc, #1000	; 0x3e8
    7f84:	ldrd	r8, [r9]
    7f88:	strd	r8, [r4, #8]
    7f8c:	add	r9, pc, #996	; 0x3e4
    7f90:	ldrd	r8, [r9]
    7f94:	strd	r8, [r4, #16]
    7f98:	add	r9, pc, #992	; 0x3e0
    7f9c:	ldrd	r8, [r9]
    7fa0:	strd	r8, [r4, #24]
    7fa4:	add	r9, pc, #988	; 0x3dc
    7fa8:	ldrd	r8, [r9]
    7fac:	strd	r8, [r4, #32]
    7fb0:	add	r9, pc, #984	; 0x3d8
    7fb4:	ldrd	r8, [r9]
    7fb8:	strd	r8, [r4, #40]	; 0x28
    7fbc:	mov	r8, #0
    7fc0:	mov	r9, #0
    7fc4:	strd	r8, [r4, #72]	; 0x48
    7fc8:	add	r9, pc, #968	; 0x3c8
    7fcc:	ldrd	r8, [r9]
    7fd0:	strd	r8, [r4, #48]	; 0x30
    7fd4:	mov	r8, #0
    7fd8:	mov	r9, #0
    7fdc:	strd	r8, [r4, #80]	; 0x50
    7fe0:	add	r9, pc, #952	; 0x3b8
    7fe4:	ldrd	r8, [r9]
    7fe8:	strd	r8, [r4, #56]	; 0x38
    7fec:	add	r9, pc, #884	; 0x374
    7ff0:	ldrd	r8, [r9]
    7ff4:	bl	6bd0 <rb_sha512_process_bytes>
    7ff8:	mov	r2, r4
    7ffc:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    8000:	ldr	r1, [fp, #-864]	; 0xfffffca0
    8004:	bl	6bd0 <rb_sha512_process_bytes>
    8008:	strd	r8, [r5, #-8]
    800c:	mov	r1, r7
    8010:	mov	r0, r6
    8014:	add	r9, pc, #852	; 0x354
    8018:	ldrd	r8, [r9]
    801c:	ldr	sl, [fp, #-880]	; 0xfffffc90
    8020:	strd	r8, [r5]
    8024:	add	r9, pc, #844	; 0x34c
    8028:	ldrd	r8, [r9]
    802c:	mov	r2, sl
    8030:	strd	r8, [r5, #8]
    8034:	add	r9, pc, #836	; 0x344
    8038:	ldrd	r8, [r9]
    803c:	strd	r8, [r5, #16]
    8040:	add	r9, pc, #832	; 0x340
    8044:	ldrd	r8, [r9]
    8048:	strd	r8, [r5, #24]
    804c:	add	r9, pc, #828	; 0x33c
    8050:	ldrd	r8, [r9]
    8054:	strd	r8, [r5, #32]
    8058:	add	r9, pc, #824	; 0x338
    805c:	ldrd	r8, [r9]
    8060:	strd	r8, [r5, #40]	; 0x28
    8064:	add	r9, pc, #820	; 0x334
    8068:	ldrd	r8, [r9]
    806c:	strd	r8, [r5, #48]	; 0x30
    8070:	mov	r8, #0
    8074:	mov	r9, #0
    8078:	strd	r8, [r5, #56]	; 0x38
    807c:	strd	r8, [r5, #64]	; 0x40
    8080:	strd	r8, [r5, #72]	; 0x48
    8084:	bl	6bd0 <rb_sha512_process_bytes>
    8088:	mov	r2, sl
    808c:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    8090:	ldr	r1, [fp, #-864]	; 0xfffffca0
    8094:	bl	6bd0 <rb_sha512_process_bytes>
    8098:	mov	r2, sl
    809c:	mov	r1, r7
    80a0:	mov	r0, r6
    80a4:	bl	6bd0 <rb_sha512_process_bytes>
    80a8:	ldr	r8, [fp, #-876]	; 0xfffffc94
    80ac:	mov	r0, sl
    80b0:	mov	r1, r8
    80b4:	bl	6d90 <rb_sha512_finish_ctx>
    80b8:	cmp	r7, #64	; 0x40
    80bc:	bls	946c <rb_sha512_crypt_r+0x15fc>
    80c0:	sub	r7, r7, #64	; 0x40
    80c4:	mov	r2, r4
    80c8:	mov	r1, #64	; 0x40
    80cc:	mov	r0, r8
    80d0:	bl	6bd0 <rb_sha512_process_bytes>
    80d4:	cmp	r7, #64	; 0x40
    80d8:	bhi	80c0 <rb_sha512_crypt_r+0x250>
    80dc:	ldr	r0, [fp, #-876]	; 0xfffffc94
    80e0:	ldr	r2, [fp, #-856]	; 0xfffffca8
    80e4:	sub	r3, r2, #65	; 0x41
    80e8:	sub	r1, r2, #64	; 0x40
    80ec:	bic	r3, r3, #63	; 0x3f
    80f0:	mov	r2, r4
    80f4:	sub	r1, r1, r3
    80f8:	bl	6bd0 <rb_sha512_process_bytes>
    80fc:	ldr	r9, [fp, #-876]	; 0xfffffc94
    8100:	ldr	r8, [fp, #-856]	; 0xfffffca8
    8104:	mov	r7, r8
    8108:	tst	r7, #1
    810c:	mov	r1, r8
    8110:	mov	r0, r6
    8114:	movne	r1, #64	; 0x40
    8118:	movne	r0, r9
    811c:	mov	r2, r4
    8120:	bl	6bd0 <rb_sha512_process_bytes>
    8124:	lsrs	r7, r7, #1
    8128:	bne	8108 <rb_sha512_crypt_r+0x298>
    812c:	add	r9, pc, #572	; 0x23c
    8130:	ldrd	r8, [r9]
    8134:	mov	r0, r4
    8138:	ldr	r1, [fp, #-876]	; 0xfffffc94
    813c:	bl	6d90 <rb_sha512_finish_ctx>
    8140:	add	r1, pc, #544	; 0x220
    8144:	ldrd	r0, [r1]
    8148:	mov	r2, #0
    814c:	mov	r3, #0
    8150:	strd	r8, [r5]
    8154:	add	r9, pc, #556	; 0x22c
    8158:	ldrd	r8, [r9]
    815c:	strd	r0, [r5, #-8]
    8160:	add	r1, pc, #528	; 0x210
    8164:	ldrd	r0, [r1]
    8168:	strd	r2, [r5, #56]	; 0x38
    816c:	strd	r2, [r5, #64]	; 0x40
    8170:	strd	r8, [r5, #24]
    8174:	add	r9, pc, #532	; 0x214
    8178:	ldrd	r8, [r9]
    817c:	strd	r2, [r5, #72]	; 0x48
    8180:	add	r3, pc, #504	; 0x1f8
    8184:	ldrd	r2, [r3]
    8188:	strd	r0, [r5, #8]
    818c:	add	r1, pc, #516	; 0x204
    8190:	ldrd	r0, [r1]
    8194:	strd	r2, [r5, #16]
    8198:	add	r3, pc, #512	; 0x200
    819c:	ldrd	r2, [r3]
    81a0:	strd	r8, [r5, #32]
    81a4:	ldr	r9, [fp, #-880]	; 0xfffffc90
    81a8:	strd	r0, [r5, #40]	; 0x28
    81ac:	ldr	r8, [fp, #-856]	; 0xfffffca8
    81b0:	strd	r2, [r5, #48]	; 0x30
    81b4:	add	r7, r7, #1
    81b8:	mov	r2, r9
    81bc:	mov	r1, r8
    81c0:	mov	r0, r6
    81c4:	bl	6bd0 <rb_sha512_process_bytes>
    81c8:	cmp	r8, r7
    81cc:	bhi	81b4 <rb_sha512_crypt_r+0x344>
    81d0:	sub	sl, fp, #788	; 0x314
    81d4:	ldr	r0, [fp, #-880]	; 0xfffffc90
    81d8:	mov	r1, sl
    81dc:	bl	6d90 <rb_sha512_finish_ctx>
    81e0:	ldr	r2, [fp, #-856]	; 0xfffffca8
    81e4:	add	r3, r2, #7
    81e8:	cmp	r2, #63	; 0x3f
    81ec:	bic	r3, r3, #7
    81f0:	sub	sp, sp, r3
    81f4:	add	r3, sp, #8
    81f8:	str	r3, [fp, #-860]	; 0xfffffca4
    81fc:	bls	9528 <rb_sha512_crypt_r+0x16b8>
    8200:	sub	lr, r2, #64	; 0x40
    8204:	add	r0, sp, #72	; 0x48
    8208:	lsr	lr, lr, #6
    820c:	add	ip, r3, lr, lsl #6
    8210:	add	ip, ip, #128	; 0x80
    8214:	ldrd	r2, [sl]
    8218:	sub	r1, r0, #64	; 0x40
    821c:	add	r0, r0, #64	; 0x40
    8220:	ldrd	r6, [sl, #8]
    8224:	ldrd	r8, [sl, #32]
    8228:	strd	r2, [r0, #-128]	; 0xffffff80
    822c:	cmp	r0, ip
    8230:	ldrd	r2, [sl, #16]
    8234:	strd	r6, [r1, #8]
    8238:	ldrd	r6, [sl, #24]
    823c:	strd	r2, [r1, #16]
    8240:	strd	r8, [r1, #32]
    8244:	strd	r6, [r1, #24]
    8248:	ldrd	r2, [sl, #40]	; 0x28
    824c:	ldrd	r6, [sl, #48]	; 0x30
    8250:	ldrd	r8, [sl, #56]	; 0x38
    8254:	strd	r2, [r1, #40]	; 0x28
    8258:	strd	r6, [r1, #48]	; 0x30
    825c:	strd	r8, [r1, #56]	; 0x38
    8260:	bne	8214 <rb_sha512_crypt_r+0x3a4>
    8264:	ldr	r3, [fp, #-856]	; 0xfffffca8
    8268:	add	r0, lr, #1
    826c:	and	r2, r3, #63	; 0x3f
    8270:	ldr	r3, [fp, #-860]	; 0xfffffca4
    8274:	add	r0, r3, r0, lsl #6
    8278:	mov	r1, sl
    827c:	add	r9, pc, #236	; 0xec
    8280:	ldrd	r8, [r9]
    8284:	mov	r6, #0
    8288:	bl	47e8 <memcpy@plt>
    828c:	add	r1, pc, #212	; 0xd4
    8290:	ldrd	r0, [r1]
    8294:	mov	r2, #0
    8298:	mov	r3, #0
    829c:	ldr	r7, [fp, #-868]	; 0xfffffc9c
    82a0:	strd	r2, [r5, #56]	; 0x38
    82a4:	strd	r2, [r5, #64]	; 0x40
    82a8:	strd	r0, [r5, #-8]
    82ac:	add	r1, pc, #196	; 0xc4
    82b0:	ldrd	r0, [r1]
    82b4:	strd	r8, [r5]
    82b8:	add	r9, pc, #200	; 0xc8
    82bc:	ldrd	r8, [r9]
    82c0:	strd	r2, [r5, #72]	; 0x48
    82c4:	add	r3, pc, #180	; 0xb4
    82c8:	ldrd	r2, [r3]
    82cc:	strd	r0, [r5, #8]
    82d0:	add	r1, pc, #192	; 0xc0
    82d4:	ldrd	r0, [r1]
    82d8:	strd	r2, [r5, #16]
    82dc:	add	r3, pc, #188	; 0xbc
    82e0:	ldrd	r2, [r3]
    82e4:	strd	r8, [r5, #24]
    82e8:	add	r9, pc, #160	; 0xa0
    82ec:	ldrd	r8, [r9]
    82f0:	strd	r8, [r5, #32]
    82f4:	strd	r0, [r5, #40]	; 0x28
    82f8:	strd	r2, [r5, #48]	; 0x30
    82fc:	ldr	r8, [fp, #-880]	; 0xfffffc90
    8300:	ldr	r5, [fp, #-864]	; 0xfffffca0
    8304:	mov	r2, r8
    8308:	mov	r1, r5
    830c:	mov	r0, r7
    8310:	add	r6, r6, #1
    8314:	bl	6bd0 <rb_sha512_process_bytes>
    8318:	ldrb	r3, [fp, #-852]	; 0xfffffcac
    831c:	add	r3, r3, #16
    8320:	cmp	r3, r6
    8324:	bhi	8304 <rb_sha512_crypt_r+0x494>
    8328:	mov	r1, sl
    832c:	ldr	r0, [fp, #-880]	; 0xfffffc90
    8330:	mov	r5, #0
    8334:	bl	6d90 <rb_sha512_finish_ctx>
    8338:	ldr	r2, [fp, #-864]	; 0xfffffca0
    833c:	mov	r1, sl
    8340:	add	r3, r2, #7
    8344:	bic	r3, r3, #7
    8348:	sub	sp, sp, r3
    834c:	add	r3, sp, #8
    8350:	mov	r0, r3
    8354:	str	r3, [fp, #-884]	; 0xfffffc8c
    8358:	bl	47e8 <memcpy@plt>
    835c:	str	sl, [fp, #-900]	; 0xfffffc7c
    8360:	ldr	sl, [fp, #-876]	; 0xfffffc94
    8364:	b	83b4 <rb_sha512_crypt_r+0x544>
    8368:	.word	0xf3bcc908
    836c:	.word	0x6a09e667
    8370:	.word	0x84caa73b
    8374:	.word	0xbb67ae85
    8378:	.word	0xfe94f82b
    837c:	.word	0x3c6ef372
    8380:	.word	0x5f1d36f1
    8384:	.word	0xa54ff53a
    8388:	.word	0xade682d1
    838c:	.word	0x510e527f
    8390:	.word	0x2b3e6c1f
    8394:	.word	0x9b05688c
    8398:	.word	0xfb41bd6b
    839c:	.word	0x1f83d9ab
    83a0:	.word	0x137e2179
    83a4:	.word	0x5be0cd19
    83a8:	.word	0x00011940
    83ac:	.word	0x0001190c
    83b0:	.word	0x000120c4
    83b4:	mov	r2, r4
    83b8:	mov	r1, #64	; 0x40
    83bc:	add	r7, pc, #1004	; 0x3ec
    83c0:	ldrd	r6, [r7]
    83c4:	mov	r0, sl
    83c8:	add	r9, pc, #1000	; 0x3e8
    83cc:	ldrd	r8, [r9]
    83d0:	strd	r6, [r4]
    83d4:	add	r7, pc, #996	; 0x3e4
    83d8:	ldrd	r6, [r7]
    83dc:	strd	r6, [r4, #8]
    83e0:	add	r7, pc, #992	; 0x3e0
    83e4:	ldrd	r6, [r7]
    83e8:	strd	r8, [r4, #24]
    83ec:	add	r9, pc, #988	; 0x3dc
    83f0:	ldrd	r8, [r9]
    83f4:	strd	r6, [r4, #16]
    83f8:	add	r7, pc, #984	; 0x3d8
    83fc:	ldrd	r6, [r7]
    8400:	strd	r6, [r4, #32]
    8404:	add	r7, pc, #980	; 0x3d4
    8408:	ldrd	r6, [r7]
    840c:	strd	r8, [r4, #48]	; 0x30
    8410:	strd	r6, [r4, #40]	; 0x28
    8414:	add	r7, pc, #972	; 0x3cc
    8418:	ldrd	r6, [r7]
    841c:	strd	r6, [r4, #56]	; 0x38
    8420:	mov	r6, #0
    8424:	mov	r7, #0
    8428:	strd	r6, [r4, #64]	; 0x40
    842c:	strd	r6, [r4, #72]	; 0x48
    8430:	strd	r6, [r4, #80]	; 0x50
    8434:	ands	r6, r5, #1
    8438:	ldrne	r0, [fp, #-860]	; 0xfffffca4
    843c:	ldrne	r1, [fp, #-856]	; 0xfffffca8
    8440:	bl	6bd0 <rb_sha512_process_bytes>
    8444:	movw	r3, #43691	; 0xaaab
    8448:	movt	r3, #43690	; 0xaaaa
    844c:	umull	r2, r3, r3, r5
    8450:	lsr	r3, r3, #1
    8454:	add	r3, r3, r3, lsl #1
    8458:	cmp	r5, r3
    845c:	bne	9350 <rb_sha512_crypt_r+0x14e0>
    8460:	movw	r3, #18725	; 0x4925
    8464:	movt	r3, #9362	; 0x2492
    8468:	umull	r2, r3, r3, r5
    846c:	sub	r2, r5, r3
    8470:	add	r3, r3, r2, lsr #1
    8474:	lsr	r3, r3, #2
    8478:	rsb	r3, r3, r3, lsl #3
    847c:	cmp	r5, r3
    8480:	bne	933c <rb_sha512_crypt_r+0x14cc>
    8484:	cmp	r6, #0
    8488:	mov	r2, r4
    848c:	mov	r1, #64	; 0x40
    8490:	mov	r0, sl
    8494:	beq	9310 <rb_sha512_crypt_r+0x14a0>
    8498:	bl	6bd0 <rb_sha512_process_bytes>
    849c:	mov	r1, sl
    84a0:	mov	r0, r4
    84a4:	bl	6d90 <rb_sha512_finish_ctx>
    84a8:	ldr	r3, [fp, #-872]	; 0xfffffc98
    84ac:	add	r5, r5, #1
    84b0:	cmp	r3, r5
    84b4:	bne	83b4 <rb_sha512_crypt_r+0x544>
    84b8:	mov	r1, #0
    84bc:	ldr	sl, [fp, #-900]	; 0xfffffc7c
    84c0:	ldr	r3, [fp, #-892]	; 0xfffffc84
    84c4:	ldr	r6, [fp, #-888]	; 0xfffffc88
    84c8:	bic	r5, r3, r3, asr #31
    84cc:	mov	r0, r6
    84d0:	mov	r2, r5
    84d4:	bl	4608 <memset@plt>
    84d8:	ldr	r1, [pc, #784]	; 87f0 <rb_sha512_crypt_r+0x980>
    84dc:	mov	r2, r5
    84e0:	mov	r0, r6
    84e4:	add	r1, pc, r1
    84e8:	add	r1, r1, #1168	; 0x490
    84ec:	bl	4548 <strncpy@plt>
    84f0:	mov	r0, r6
    84f4:	bl	47c4 <strlen@plt>
    84f8:	adds	r6, r6, r0
    84fc:	ldreq	r3, [fp, #-888]	; 0xfffffc88
    8500:	addeq	r6, r3, r5
    8504:	ldr	r3, [fp, #-892]	; 0xfffffc84
    8508:	sub	r5, r3, #3
    850c:	ldr	r3, [fp, #-896]	; 0xfffffc80
    8510:	bic	r7, r5, r5, asr #31
    8514:	cmp	r3, #0
    8518:	bne	9378 <rb_sha512_crypt_r+0x1508>
    851c:	ldr	r3, [fp, #-864]	; 0xfffffca0
    8520:	mov	r1, #0
    8524:	mov	r0, r6
    8528:	cmp	r3, r7
    852c:	movcc	r7, r3
    8530:	mov	r2, r7
    8534:	sub	r5, r5, r7
    8538:	bl	4608 <memset@plt>
    853c:	mov	r2, r7
    8540:	mov	r0, r6
    8544:	ldr	r1, [fp, #-868]	; 0xfffffc9c
    8548:	bl	4548 <strncpy@plt>
    854c:	ldr	r6, [fp, #-888]	; 0xfffffc88
    8550:	mov	r0, r6
    8554:	bl	47c4 <strlen@plt>
    8558:	adds	r0, r6, r0
    855c:	ldreq	r2, [fp, #-864]	; 0xfffffca0
    8560:	addeq	r0, r6, r2
    8564:	cmp	r5, #0
    8568:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    856c:	ldrb	r3, [fp, #-831]	; 0xfffffcc1
    8570:	mov	r2, #36	; 0x24
    8574:	cmp	r5, #1
    8578:	ldrb	r1, [fp, #-852]	; 0xfffffcac
    857c:	strb	r2, [r0]
    8580:	ldrb	r2, [fp, #-810]	; 0xfffffcd6
    8584:	lsl	r3, r3, #8
    8588:	orr	r3, r3, r1, lsl #16
    858c:	orr	r3, r3, r2
    8590:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8594:	ldr	r2, [pc, #600]	; 87f4 <rb_sha512_crypt_r+0x984>
    8598:	and	r1, r3, #63	; 0x3f
    859c:	sub	ip, r5, #2
    85a0:	cmp	ip, #0
    85a4:	lsr	ip, r3, #6
    85a8:	add	r2, pc, r2
    85ac:	add	r1, r2, r1
    85b0:	ldrb	r1, [r1, #1100]	; 0x44c
    85b4:	strb	r1, [r0, #1]
    85b8:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    85bc:	and	ip, ip, #63	; 0x3f
    85c0:	sub	r1, r5, #3
    85c4:	add	ip, r2, ip
    85c8:	cmp	r1, #0
    85cc:	lsr	r1, r3, #12
    85d0:	ldrb	ip, [ip, #1100]	; 0x44c
    85d4:	strb	ip, [r0, #2]
    85d8:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    85dc:	and	ip, r1, #63	; 0x3f
    85e0:	lsr	r1, r3, #18
    85e4:	sub	r3, r5, #4
    85e8:	add	ip, r2, ip
    85ec:	cmp	r3, #0
    85f0:	ldrb	r3, [ip, #1100]	; 0x44c
    85f4:	strb	r3, [r0, #3]
    85f8:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    85fc:	ldrb	r3, [fp, #-809]	; 0xfffffcd7
    8600:	add	r1, r2, r1
    8604:	cmp	r5, #5
    8608:	ldrb	lr, [fp, #-830]	; 0xfffffcc2
    860c:	ldrb	ip, [r1, #1100]	; 0x44c
    8610:	lsl	r3, r3, #8
    8614:	ldrb	r1, [fp, #-851]	; 0xfffffcad
    8618:	orr	r3, r3, lr, lsl #16
    861c:	strb	ip, [r0, #4]
    8620:	orr	r1, r3, r1
    8624:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8628:	and	r3, r1, #63	; 0x3f
    862c:	sub	ip, r5, #6
    8630:	add	r3, r2, r3
    8634:	cmp	ip, #0
    8638:	lsr	ip, r1, #6
    863c:	ldrb	r3, [r3, #1100]	; 0x44c
    8640:	strb	r3, [r0, #5]
    8644:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8648:	and	r3, ip, #63	; 0x3f
    864c:	sub	ip, r5, #7
    8650:	add	r3, r2, r3
    8654:	cmp	ip, #0
    8658:	lsr	ip, r1, #12
    865c:	ldrb	r3, [r3, #1100]	; 0x44c
    8660:	strb	r3, [r0, #6]
    8664:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8668:	and	ip, ip, #63	; 0x3f
    866c:	sub	r3, r5, #8
    8670:	lsr	r1, r1, #18
    8674:	add	ip, r2, ip
    8678:	cmp	r3, #0
    867c:	ldrb	r3, [ip, #1100]	; 0x44c
    8680:	strb	r3, [r0, #7]
    8684:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8688:	ldrb	ip, [fp, #-850]	; 0xfffffcae
    868c:	add	r2, r2, r1
    8690:	cmp	r5, #9
    8694:	ldrb	r1, [fp, #-808]	; 0xfffffcd8
    8698:	ldrb	r2, [r2, #1100]	; 0x44c
    869c:	lsl	r3, ip, #8
    86a0:	ldrb	lr, [fp, #-829]	; 0xfffffcc3
    86a4:	orr	r3, r3, r1, lsl #16
    86a8:	strb	r2, [r0, #8]
    86ac:	orr	r3, r3, lr
    86b0:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    86b4:	ldr	r2, [pc, #316]	; 87f8 <rb_sha512_crypt_r+0x988>
    86b8:	and	r1, r3, #63	; 0x3f
    86bc:	sub	ip, r5, #10
    86c0:	cmp	ip, #0
    86c4:	lsr	ip, r3, #6
    86c8:	add	r2, pc, r2
    86cc:	add	r1, r2, r1
    86d0:	ldrb	r1, [r1, #1100]	; 0x44c
    86d4:	strb	r1, [r0, #9]
    86d8:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    86dc:	and	ip, ip, #63	; 0x3f
    86e0:	sub	r1, r5, #11
    86e4:	add	ip, r2, ip
    86e8:	cmp	r1, #0
    86ec:	lsr	r1, r3, #12
    86f0:	ldrb	ip, [ip, #1100]	; 0x44c
    86f4:	strb	ip, [r0, #10]
    86f8:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    86fc:	and	ip, r1, #63	; 0x3f
    8700:	lsr	r1, r3, #18
    8704:	sub	r3, r5, #12
    8708:	add	ip, r2, ip
    870c:	cmp	r3, #0
    8710:	ldrb	r3, [ip, #1100]	; 0x44c
    8714:	strb	r3, [r0, #11]
    8718:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    871c:	ldrb	r3, [fp, #-828]	; 0xfffffcc4
    8720:	add	r1, r2, r1
    8724:	cmp	r5, #13
    8728:	ldrb	lr, [fp, #-849]	; 0xfffffcaf
    872c:	ldrb	ip, [r1, #1100]	; 0x44c
    8730:	lsl	r3, r3, #8
    8734:	ldrb	r1, [fp, #-807]	; 0xfffffcd9
    8738:	orr	r3, r3, lr, lsl #16
    873c:	strb	ip, [r0, #12]
    8740:	orr	r1, r3, r1
    8744:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8748:	and	r3, r1, #63	; 0x3f
    874c:	sub	ip, r5, #14
    8750:	add	r3, r2, r3
    8754:	cmp	ip, #0
    8758:	lsr	ip, r1, #6
    875c:	ldrb	r3, [r3, #1100]	; 0x44c
    8760:	strb	r3, [r0, #13]
    8764:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8768:	and	r3, ip, #63	; 0x3f
    876c:	sub	ip, r5, #15
    8770:	add	r3, r2, r3
    8774:	cmp	ip, #0
    8778:	lsr	ip, r1, #12
    877c:	ldrb	r3, [r3, #1100]	; 0x44c
    8780:	strb	r3, [r0, #14]
    8784:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8788:	and	ip, ip, #63	; 0x3f
    878c:	sub	r3, r5, #16
    8790:	lsr	r1, r1, #18
    8794:	add	ip, r2, ip
    8798:	cmp	r3, #0
    879c:	ldrb	r3, [ip, #1100]	; 0x44c
    87a0:	strb	r3, [r0, #15]
    87a4:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    87a8:	b	8818 <rb_sha512_crypt_r+0x9a8>
    87ac:	nop	{0}
    87b0:	.word	0xf3bcc908
    87b4:	.word	0x6a09e667
    87b8:	.word	0x5f1d36f1
    87bc:	.word	0xa54ff53a
    87c0:	.word	0x84caa73b
    87c4:	.word	0xbb67ae85
    87c8:	.word	0xfe94f82b
    87cc:	.word	0x3c6ef372
    87d0:	.word	0xfb41bd6b
    87d4:	.word	0x1f83d9ab
    87d8:	.word	0xade682d1
    87dc:	.word	0x510e527f
    87e0:	.word	0x2b3e6c1f
    87e4:	.word	0x9b05688c
    87e8:	.word	0x137e2179
    87ec:	.word	0x5be0cd19
    87f0:	.word	0x000112f4
    87f4:	.word	0x00011230
    87f8:	.word	0x00011110
    87fc:	.word	0x00010f40
    8800:	.word	0x00010dd4
    8804:	.word	0x00010c74
    8808:	.word	0x00010b08
    880c:	.word	0x000109a8
    8810:	.word	0x0001083c
    8814:	.word	0x000106dc
    8818:	ldrb	r3, [fp, #-806]	; 0xfffffcda
    881c:	add	r1, r2, r1
    8820:	cmp	r5, #17
    8824:	ldrb	lr, [fp, #-827]	; 0xfffffcc5
    8828:	ldrb	ip, [r1, #1100]	; 0x44c
    882c:	lsl	r3, r3, #8
    8830:	ldrb	r1, [fp, #-848]	; 0xfffffcb0
    8834:	orr	r3, r3, lr, lsl #16
    8838:	strb	ip, [r0, #16]
    883c:	orr	r1, r3, r1
    8840:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8844:	and	r3, r1, #63	; 0x3f
    8848:	sub	ip, r5, #18
    884c:	add	r3, r2, r3
    8850:	cmp	ip, #0
    8854:	lsr	ip, r1, #6
    8858:	ldrb	r3, [r3, #1100]	; 0x44c
    885c:	strb	r3, [r0, #17]
    8860:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8864:	and	ip, ip, #63	; 0x3f
    8868:	sub	r3, r5, #19
    886c:	add	r2, r2, ip
    8870:	cmp	r3, #0
    8874:	lsr	r3, r1, #12
    8878:	ldrb	r2, [r2, #1100]	; 0x44c
    887c:	strb	r2, [r0, #18]
    8880:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8884:	ldr	r2, [pc, #-144]	; 87fc <rb_sha512_crypt_r+0x98c>
    8888:	and	r3, r3, #63	; 0x3f
    888c:	sub	ip, r5, #20
    8890:	cmp	ip, #0
    8894:	lsr	r1, r1, #18
    8898:	add	r2, pc, r2
    889c:	add	r3, r2, r3
    88a0:	ldrb	r3, [r3, #1100]	; 0x44c
    88a4:	strb	r3, [r0, #19]
    88a8:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    88ac:	ldrb	r3, [fp, #-847]	; 0xfffffcb1
    88b0:	add	r1, r2, r1
    88b4:	cmp	r5, #21
    88b8:	ldrb	lr, [fp, #-805]	; 0xfffffcdb
    88bc:	ldrb	ip, [r1, #1100]	; 0x44c
    88c0:	lsl	r3, r3, #8
    88c4:	ldrb	r1, [fp, #-826]	; 0xfffffcc6
    88c8:	orr	r3, r3, lr, lsl #16
    88cc:	strb	ip, [r0, #20]
    88d0:	orr	r1, r3, r1
    88d4:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    88d8:	and	r3, r1, #63	; 0x3f
    88dc:	sub	ip, r5, #22
    88e0:	add	r3, r2, r3
    88e4:	cmp	ip, #0
    88e8:	lsr	ip, r1, #6
    88ec:	ldrb	r3, [r3, #1100]	; 0x44c
    88f0:	strb	r3, [r0, #21]
    88f4:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    88f8:	and	r3, ip, #63	; 0x3f
    88fc:	sub	ip, r5, #23
    8900:	add	r3, r2, r3
    8904:	cmp	ip, #0
    8908:	lsr	ip, r1, #12
    890c:	ldrb	r3, [r3, #1100]	; 0x44c
    8910:	strb	r3, [r0, #22]
    8914:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8918:	and	ip, ip, #63	; 0x3f
    891c:	sub	r3, r5, #24
    8920:	lsr	r1, r1, #18
    8924:	add	ip, r2, ip
    8928:	cmp	r3, #0
    892c:	ldrb	r3, [ip, #1100]	; 0x44c
    8930:	strb	r3, [r0, #23]
    8934:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8938:	ldrb	r3, [fp, #-825]	; 0xfffffcc7
    893c:	add	r1, r2, r1
    8940:	cmp	r5, #25
    8944:	ldrb	lr, [fp, #-846]	; 0xfffffcb2
    8948:	ldrb	ip, [r1, #1100]	; 0x44c
    894c:	lsl	r3, r3, #8
    8950:	ldrb	r1, [fp, #-804]	; 0xfffffcdc
    8954:	orr	r3, r3, lr, lsl #16
    8958:	strb	ip, [r0, #24]
    895c:	orr	r1, r3, r1
    8960:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8964:	and	r3, r1, #63	; 0x3f
    8968:	sub	ip, r5, #26
    896c:	add	r3, r2, r3
    8970:	cmp	ip, #0
    8974:	lsr	ip, r1, #6
    8978:	ldrb	r3, [r3, #1100]	; 0x44c
    897c:	strb	r3, [r0, #25]
    8980:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8984:	and	r3, ip, #63	; 0x3f
    8988:	sub	ip, r5, #27
    898c:	add	r3, r2, r3
    8990:	cmp	ip, #0
    8994:	lsr	ip, r1, #12
    8998:	ldrb	r3, [r3, #1100]	; 0x44c
    899c:	strb	r3, [r0, #26]
    89a0:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    89a4:	and	ip, ip, #63	; 0x3f
    89a8:	sub	r3, r5, #28
    89ac:	lsr	r1, r1, #18
    89b0:	add	ip, r2, ip
    89b4:	cmp	r3, #0
    89b8:	ldrb	r3, [ip, #1100]	; 0x44c
    89bc:	strb	r3, [r0, #27]
    89c0:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    89c4:	ldrb	ip, [fp, #-803]	; 0xfffffcdd
    89c8:	add	r2, r2, r1
    89cc:	cmp	r5, #29
    89d0:	ldrb	r1, [fp, #-824]	; 0xfffffcc8
    89d4:	ldrb	r2, [r2, #1100]	; 0x44c
    89d8:	lsl	r3, ip, #8
    89dc:	ldrb	lr, [fp, #-845]	; 0xfffffcb3
    89e0:	orr	r3, r3, r1, lsl #16
    89e4:	strb	r2, [r0, #28]
    89e8:	orr	r3, r3, lr
    89ec:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    89f0:	ldr	r2, [pc, #-504]	; 8800 <rb_sha512_crypt_r+0x990>
    89f4:	and	r1, r3, #63	; 0x3f
    89f8:	sub	ip, r5, #30
    89fc:	cmp	ip, #0
    8a00:	lsr	ip, r3, #6
    8a04:	add	r2, pc, r2
    8a08:	add	r1, r2, r1
    8a0c:	ldrb	r1, [r1, #1100]	; 0x44c
    8a10:	strb	r1, [r0, #29]
    8a14:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8a18:	and	ip, ip, #63	; 0x3f
    8a1c:	sub	r1, r5, #31
    8a20:	add	ip, r2, ip
    8a24:	cmp	r1, #0
    8a28:	lsr	r1, r3, #12
    8a2c:	ldrb	ip, [ip, #1100]	; 0x44c
    8a30:	strb	ip, [r0, #30]
    8a34:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8a38:	and	ip, r1, #63	; 0x3f
    8a3c:	lsr	r1, r3, #18
    8a40:	sub	r3, r5, #32
    8a44:	add	ip, r2, ip
    8a48:	cmp	r3, #0
    8a4c:	ldrb	r3, [ip, #1100]	; 0x44c
    8a50:	strb	r3, [r0, #31]
    8a54:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8a58:	ldrb	r3, [fp, #-844]	; 0xfffffcb4
    8a5c:	add	r1, r2, r1
    8a60:	cmp	r5, #33	; 0x21
    8a64:	ldrb	lr, [fp, #-802]	; 0xfffffcde
    8a68:	ldrb	ip, [r1, #1100]	; 0x44c
    8a6c:	lsl	r3, r3, #8
    8a70:	ldrb	r1, [fp, #-823]	; 0xfffffcc9
    8a74:	orr	r3, r3, lr, lsl #16
    8a78:	strb	ip, [r0, #32]
    8a7c:	orr	r1, r3, r1
    8a80:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8a84:	and	r3, r1, #63	; 0x3f
    8a88:	sub	ip, r5, #34	; 0x22
    8a8c:	add	r3, r2, r3
    8a90:	cmp	ip, #0
    8a94:	lsr	ip, r1, #6
    8a98:	ldrb	r3, [r3, #1100]	; 0x44c
    8a9c:	strb	r3, [r0, #33]	; 0x21
    8aa0:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8aa4:	and	r3, ip, #63	; 0x3f
    8aa8:	sub	ip, r5, #35	; 0x23
    8aac:	add	r3, r2, r3
    8ab0:	cmp	ip, #0
    8ab4:	lsr	ip, r1, #12
    8ab8:	ldrb	r3, [r3, #1100]	; 0x44c
    8abc:	strb	r3, [r0, #34]	; 0x22
    8ac0:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8ac4:	and	ip, ip, #63	; 0x3f
    8ac8:	sub	r3, r5, #36	; 0x24
    8acc:	lsr	r1, r1, #18
    8ad0:	add	ip, r2, ip
    8ad4:	cmp	r3, #0
    8ad8:	ldrb	r3, [ip, #1100]	; 0x44c
    8adc:	strb	r3, [r0, #35]	; 0x23
    8ae0:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8ae4:	ldrb	r3, [fp, #-822]	; 0xfffffcca
    8ae8:	add	r1, r2, r1
    8aec:	cmp	r5, #37	; 0x25
    8af0:	ldrb	lr, [fp, #-843]	; 0xfffffcb5
    8af4:	ldrb	ip, [r1, #1100]	; 0x44c
    8af8:	lsl	r3, r3, #8
    8afc:	ldrb	r1, [fp, #-801]	; 0xfffffcdf
    8b00:	orr	r3, r3, lr, lsl #16
    8b04:	strb	ip, [r0, #36]	; 0x24
    8b08:	orr	r1, r3, r1
    8b0c:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8b10:	and	r3, r1, #63	; 0x3f
    8b14:	sub	ip, r5, #38	; 0x26
    8b18:	add	r3, r2, r3
    8b1c:	cmp	ip, #0
    8b20:	lsr	ip, r1, #6
    8b24:	ldrb	r3, [r3, #1100]	; 0x44c
    8b28:	strb	r3, [r0, #37]	; 0x25
    8b2c:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8b30:	and	ip, ip, #63	; 0x3f
    8b34:	sub	r3, r5, #39	; 0x27
    8b38:	add	r2, r2, ip
    8b3c:	cmp	r3, #0
    8b40:	lsr	r3, r1, #12
    8b44:	ldrb	r2, [r2, #1100]	; 0x44c
    8b48:	strb	r2, [r0, #38]	; 0x26
    8b4c:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8b50:	ldr	r2, [pc, #-852]	; 8804 <rb_sha512_crypt_r+0x994>
    8b54:	and	r3, r3, #63	; 0x3f
    8b58:	sub	ip, r5, #40	; 0x28
    8b5c:	cmp	ip, #0
    8b60:	lsr	r1, r1, #18
    8b64:	add	r2, pc, r2
    8b68:	add	r3, r2, r3
    8b6c:	ldrb	r3, [r3, #1100]	; 0x44c
    8b70:	strb	r3, [r0, #39]	; 0x27
    8b74:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8b78:	ldrb	r3, [fp, #-800]	; 0xfffffce0
    8b7c:	add	r1, r2, r1
    8b80:	cmp	r5, #41	; 0x29
    8b84:	ldrb	lr, [fp, #-821]	; 0xfffffccb
    8b88:	ldrb	ip, [r1, #1100]	; 0x44c
    8b8c:	lsl	r3, r3, #8
    8b90:	ldrb	r1, [fp, #-842]	; 0xfffffcb6
    8b94:	orr	r3, r3, lr, lsl #16
    8b98:	strb	ip, [r0, #40]	; 0x28
    8b9c:	orr	r1, r3, r1
    8ba0:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8ba4:	and	r3, r1, #63	; 0x3f
    8ba8:	sub	ip, r5, #42	; 0x2a
    8bac:	add	r3, r2, r3
    8bb0:	cmp	ip, #0
    8bb4:	lsr	ip, r1, #6
    8bb8:	ldrb	r3, [r3, #1100]	; 0x44c
    8bbc:	strb	r3, [r0, #41]	; 0x29
    8bc0:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8bc4:	and	r3, ip, #63	; 0x3f
    8bc8:	sub	ip, r5, #43	; 0x2b
    8bcc:	add	r3, r2, r3
    8bd0:	cmp	ip, #0
    8bd4:	lsr	ip, r1, #12
    8bd8:	ldrb	r3, [r3, #1100]	; 0x44c
    8bdc:	strb	r3, [r0, #42]	; 0x2a
    8be0:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8be4:	and	ip, ip, #63	; 0x3f
    8be8:	sub	r3, r5, #44	; 0x2c
    8bec:	lsr	r1, r1, #18
    8bf0:	add	ip, r2, ip
    8bf4:	cmp	r3, #0
    8bf8:	ldrb	r3, [ip, #1100]	; 0x44c
    8bfc:	strb	r3, [r0, #43]	; 0x2b
    8c00:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8c04:	ldrb	r3, [fp, #-841]	; 0xfffffcb7
    8c08:	add	r1, r2, r1
    8c0c:	cmp	r5, #45	; 0x2d
    8c10:	ldrb	lr, [fp, #-799]	; 0xfffffce1
    8c14:	ldrb	ip, [r1, #1100]	; 0x44c
    8c18:	lsl	r3, r3, #8
    8c1c:	ldrb	r1, [fp, #-820]	; 0xfffffccc
    8c20:	orr	r3, r3, lr, lsl #16
    8c24:	strb	ip, [r0, #44]	; 0x2c
    8c28:	orr	r1, r3, r1
    8c2c:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8c30:	and	r3, r1, #63	; 0x3f
    8c34:	sub	ip, r5, #46	; 0x2e
    8c38:	add	r3, r2, r3
    8c3c:	cmp	ip, #0
    8c40:	lsr	ip, r1, #6
    8c44:	ldrb	r3, [r3, #1100]	; 0x44c
    8c48:	strb	r3, [r0, #45]	; 0x2d
    8c4c:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8c50:	and	r3, ip, #63	; 0x3f
    8c54:	sub	ip, r5, #47	; 0x2f
    8c58:	add	r3, r2, r3
    8c5c:	cmp	ip, #0
    8c60:	lsr	ip, r1, #12
    8c64:	ldrb	r3, [r3, #1100]	; 0x44c
    8c68:	strb	r3, [r0, #46]	; 0x2e
    8c6c:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8c70:	and	ip, ip, #63	; 0x3f
    8c74:	sub	r3, r5, #48	; 0x30
    8c78:	lsr	r1, r1, #18
    8c7c:	add	ip, r2, ip
    8c80:	cmp	r3, #0
    8c84:	ldrb	r3, [ip, #1100]	; 0x44c
    8c88:	strb	r3, [r0, #47]	; 0x2f
    8c8c:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8c90:	ldrb	ip, [fp, #-819]	; 0xfffffccd
    8c94:	add	r2, r2, r1
    8c98:	cmp	r5, #49	; 0x31
    8c9c:	ldrb	r1, [fp, #-840]	; 0xfffffcb8
    8ca0:	ldrb	r2, [r2, #1100]	; 0x44c
    8ca4:	lsl	r3, ip, #8
    8ca8:	ldrb	lr, [fp, #-798]	; 0xfffffce2
    8cac:	orr	r3, r3, r1, lsl #16
    8cb0:	strb	r2, [r0, #48]	; 0x30
    8cb4:	orr	r3, r3, lr
    8cb8:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8cbc:	ldr	r2, [pc, #-1212]	; 8808 <rb_sha512_crypt_r+0x998>
    8cc0:	and	r1, r3, #63	; 0x3f
    8cc4:	sub	ip, r5, #50	; 0x32
    8cc8:	cmp	ip, #0
    8ccc:	lsr	ip, r3, #6
    8cd0:	add	r2, pc, r2
    8cd4:	add	r1, r2, r1
    8cd8:	ldrb	r1, [r1, #1100]	; 0x44c
    8cdc:	strb	r1, [r0, #49]	; 0x31
    8ce0:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8ce4:	and	ip, ip, #63	; 0x3f
    8ce8:	sub	r1, r5, #51	; 0x33
    8cec:	add	ip, r2, ip
    8cf0:	cmp	r1, #0
    8cf4:	lsr	r1, r3, #12
    8cf8:	ldrb	ip, [ip, #1100]	; 0x44c
    8cfc:	strb	ip, [r0, #50]	; 0x32
    8d00:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8d04:	and	ip, r1, #63	; 0x3f
    8d08:	lsr	r1, r3, #18
    8d0c:	sub	r3, r5, #52	; 0x34
    8d10:	add	ip, r2, ip
    8d14:	cmp	r3, #0
    8d18:	ldrb	r3, [ip, #1100]	; 0x44c
    8d1c:	strb	r3, [r0, #51]	; 0x33
    8d20:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8d24:	ldrb	r3, [fp, #-797]	; 0xfffffce3
    8d28:	add	r1, r2, r1
    8d2c:	cmp	r5, #53	; 0x35
    8d30:	ldrb	lr, [fp, #-818]	; 0xfffffcce
    8d34:	ldrb	ip, [r1, #1100]	; 0x44c
    8d38:	lsl	r3, r3, #8
    8d3c:	ldrb	r1, [fp, #-839]	; 0xfffffcb9
    8d40:	orr	r3, r3, lr, lsl #16
    8d44:	strb	ip, [r0, #52]	; 0x34
    8d48:	orr	r1, r3, r1
    8d4c:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8d50:	and	r3, r1, #63	; 0x3f
    8d54:	sub	ip, r5, #54	; 0x36
    8d58:	add	r3, r2, r3
    8d5c:	cmp	ip, #0
    8d60:	lsr	ip, r1, #6
    8d64:	ldrb	r3, [r3, #1100]	; 0x44c
    8d68:	strb	r3, [r0, #53]	; 0x35
    8d6c:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8d70:	and	r3, ip, #63	; 0x3f
    8d74:	sub	ip, r5, #55	; 0x37
    8d78:	add	r3, r2, r3
    8d7c:	cmp	ip, #0
    8d80:	lsr	ip, r1, #12
    8d84:	ldrb	r3, [r3, #1100]	; 0x44c
    8d88:	strb	r3, [r0, #54]	; 0x36
    8d8c:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8d90:	and	ip, ip, #63	; 0x3f
    8d94:	sub	r3, r5, #56	; 0x38
    8d98:	lsr	r1, r1, #18
    8d9c:	add	ip, r2, ip
    8da0:	cmp	r3, #0
    8da4:	ldrb	r3, [ip, #1100]	; 0x44c
    8da8:	strb	r3, [r0, #55]	; 0x37
    8dac:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8db0:	ldrb	r3, [fp, #-838]	; 0xfffffcba
    8db4:	add	r1, r2, r1
    8db8:	cmp	r5, #57	; 0x39
    8dbc:	ldrb	lr, [fp, #-796]	; 0xfffffce4
    8dc0:	ldrb	ip, [r1, #1100]	; 0x44c
    8dc4:	lsl	r3, r3, #8
    8dc8:	ldrb	r1, [fp, #-817]	; 0xfffffccf
    8dcc:	orr	r3, r3, lr, lsl #16
    8dd0:	strb	ip, [r0, #56]	; 0x38
    8dd4:	orr	r1, r3, r1
    8dd8:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8ddc:	and	r3, r1, #63	; 0x3f
    8de0:	sub	ip, r5, #58	; 0x3a
    8de4:	add	r3, r2, r3
    8de8:	cmp	ip, #0
    8dec:	lsr	ip, r1, #6
    8df0:	ldrb	r3, [r3, #1100]	; 0x44c
    8df4:	strb	r3, [r0, #57]	; 0x39
    8df8:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8dfc:	and	ip, ip, #63	; 0x3f
    8e00:	sub	r3, r5, #59	; 0x3b
    8e04:	add	r2, r2, ip
    8e08:	cmp	r3, #0
    8e0c:	lsr	r3, r1, #12
    8e10:	ldrb	r2, [r2, #1100]	; 0x44c
    8e14:	strb	r2, [r0, #58]	; 0x3a
    8e18:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8e1c:	ldr	r2, [pc, #-1560]	; 880c <rb_sha512_crypt_r+0x99c>
    8e20:	and	r3, r3, #63	; 0x3f
    8e24:	sub	ip, r5, #60	; 0x3c
    8e28:	cmp	ip, #0
    8e2c:	lsr	r1, r1, #18
    8e30:	add	r2, pc, r2
    8e34:	add	r3, r2, r3
    8e38:	ldrb	r3, [r3, #1100]	; 0x44c
    8e3c:	strb	r3, [r0, #59]	; 0x3b
    8e40:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8e44:	ldrb	r3, [fp, #-816]	; 0xfffffcd0
    8e48:	add	r1, r2, r1
    8e4c:	cmp	r5, #61	; 0x3d
    8e50:	ldrb	lr, [fp, #-837]	; 0xfffffcbb
    8e54:	ldrb	ip, [r1, #1100]	; 0x44c
    8e58:	lsl	r3, r3, #8
    8e5c:	ldrb	r1, [fp, #-795]	; 0xfffffce5
    8e60:	orr	r3, r3, lr, lsl #16
    8e64:	strb	ip, [r0, #60]	; 0x3c
    8e68:	orr	r1, r3, r1
    8e6c:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8e70:	and	r3, r1, #63	; 0x3f
    8e74:	sub	ip, r5, #62	; 0x3e
    8e78:	add	r3, r2, r3
    8e7c:	cmp	ip, #0
    8e80:	lsr	ip, r1, #6
    8e84:	ldrb	r3, [r3, #1100]	; 0x44c
    8e88:	strb	r3, [r0, #61]	; 0x3d
    8e8c:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8e90:	and	r3, ip, #63	; 0x3f
    8e94:	sub	ip, r5, #63	; 0x3f
    8e98:	add	r3, r2, r3
    8e9c:	cmp	ip, #0
    8ea0:	lsr	ip, r1, #12
    8ea4:	ldrb	r3, [r3, #1100]	; 0x44c
    8ea8:	strb	r3, [r0, #62]	; 0x3e
    8eac:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8eb0:	and	ip, ip, #63	; 0x3f
    8eb4:	sub	r3, r5, #64	; 0x40
    8eb8:	lsr	r1, r1, #18
    8ebc:	add	ip, r2, ip
    8ec0:	cmp	r3, #0
    8ec4:	ldrb	r3, [ip, #1100]	; 0x44c
    8ec8:	strb	r3, [r0, #63]	; 0x3f
    8ecc:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8ed0:	ldrb	r3, [fp, #-794]	; 0xfffffce6
    8ed4:	add	r1, r2, r1
    8ed8:	cmp	r5, #65	; 0x41
    8edc:	ldrb	lr, [fp, #-815]	; 0xfffffcd1
    8ee0:	ldrb	ip, [r1, #1100]	; 0x44c
    8ee4:	lsl	r3, r3, #8
    8ee8:	ldrb	r1, [fp, #-836]	; 0xfffffcbc
    8eec:	orr	r3, r3, lr, lsl #16
    8ef0:	strb	ip, [r0, #64]	; 0x40
    8ef4:	orr	r1, r3, r1
    8ef8:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8efc:	and	r3, r1, #63	; 0x3f
    8f00:	sub	ip, r5, #66	; 0x42
    8f04:	add	r3, r2, r3
    8f08:	cmp	ip, #0
    8f0c:	lsr	ip, r1, #6
    8f10:	ldrb	r3, [r3, #1100]	; 0x44c
    8f14:	strb	r3, [r0, #65]	; 0x41
    8f18:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8f1c:	and	r3, ip, #63	; 0x3f
    8f20:	sub	ip, r5, #67	; 0x43
    8f24:	add	r3, r2, r3
    8f28:	cmp	ip, #0
    8f2c:	lsr	ip, r1, #12
    8f30:	ldrb	r3, [r3, #1100]	; 0x44c
    8f34:	strb	r3, [r0, #66]	; 0x42
    8f38:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8f3c:	and	ip, ip, #63	; 0x3f
    8f40:	sub	r3, r5, #68	; 0x44
    8f44:	lsr	r1, r1, #18
    8f48:	add	ip, r2, ip
    8f4c:	cmp	r3, #0
    8f50:	ldrb	r3, [ip, #1100]	; 0x44c
    8f54:	strb	r3, [r0, #67]	; 0x43
    8f58:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8f5c:	ldrb	ip, [fp, #-835]	; 0xfffffcbd
    8f60:	add	r2, r2, r1
    8f64:	cmp	r5, #69	; 0x45
    8f68:	ldrb	r1, [fp, #-793]	; 0xfffffce7
    8f6c:	ldrb	r2, [r2, #1100]	; 0x44c
    8f70:	lsl	r3, ip, #8
    8f74:	ldrb	lr, [fp, #-814]	; 0xfffffcd2
    8f78:	orr	r3, r3, r1, lsl #16
    8f7c:	strb	r2, [r0, #68]	; 0x44
    8f80:	orr	r3, r3, lr
    8f84:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    8f88:	ldr	r2, [pc, #-1920]	; 8810 <rb_sha512_crypt_r+0x9a0>
    8f8c:	and	r1, r3, #63	; 0x3f
    8f90:	sub	ip, r5, #70	; 0x46
    8f94:	cmp	ip, #0
    8f98:	lsr	ip, r3, #6
    8f9c:	add	r2, pc, r2
    8fa0:	add	r1, r2, r1
    8fa4:	ldrb	r1, [r1, #1100]	; 0x44c
    8fa8:	strb	r1, [r0, #69]	; 0x45
    8fac:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8fb0:	and	ip, ip, #63	; 0x3f
    8fb4:	sub	r1, r5, #71	; 0x47
    8fb8:	add	ip, r2, ip
    8fbc:	cmp	r1, #0
    8fc0:	lsr	r1, r3, #12
    8fc4:	ldrb	ip, [ip, #1100]	; 0x44c
    8fc8:	strb	ip, [r0, #70]	; 0x46
    8fcc:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8fd0:	and	ip, r1, #63	; 0x3f
    8fd4:	lsr	r1, r3, #18
    8fd8:	sub	r3, r5, #72	; 0x48
    8fdc:	add	ip, r2, ip
    8fe0:	cmp	r3, #0
    8fe4:	ldrb	r3, [ip, #1100]	; 0x44c
    8fe8:	strb	r3, [r0, #71]	; 0x47
    8fec:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    8ff0:	ldrb	r3, [fp, #-813]	; 0xfffffcd3
    8ff4:	add	r1, r2, r1
    8ff8:	cmp	r5, #73	; 0x49
    8ffc:	ldrb	lr, [fp, #-834]	; 0xfffffcbe
    9000:	ldrb	ip, [r1, #1100]	; 0x44c
    9004:	lsl	r3, r3, #8
    9008:	ldrb	r1, [fp, #-792]	; 0xfffffce8
    900c:	orr	r3, r3, lr, lsl #16
    9010:	strb	ip, [r0, #72]	; 0x48
    9014:	orr	r1, r3, r1
    9018:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    901c:	and	r3, r1, #63	; 0x3f
    9020:	sub	ip, r5, #74	; 0x4a
    9024:	add	r3, r2, r3
    9028:	cmp	ip, #0
    902c:	lsr	ip, r1, #6
    9030:	ldrb	r3, [r3, #1100]	; 0x44c
    9034:	strb	r3, [r0, #73]	; 0x49
    9038:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    903c:	and	r3, ip, #63	; 0x3f
    9040:	sub	ip, r5, #75	; 0x4b
    9044:	add	r3, r2, r3
    9048:	cmp	ip, #0
    904c:	lsr	ip, r1, #12
    9050:	ldrb	r3, [r3, #1100]	; 0x44c
    9054:	strb	r3, [r0, #74]	; 0x4a
    9058:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    905c:	and	ip, ip, #63	; 0x3f
    9060:	sub	r3, r5, #76	; 0x4c
    9064:	lsr	r1, r1, #18
    9068:	add	ip, r2, ip
    906c:	cmp	r3, #0
    9070:	ldrb	r3, [ip, #1100]	; 0x44c
    9074:	strb	r3, [r0, #75]	; 0x4b
    9078:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    907c:	ldrb	r3, [fp, #-791]	; 0xfffffce9
    9080:	add	r1, r2, r1
    9084:	cmp	r5, #77	; 0x4d
    9088:	ldrb	lr, [fp, #-812]	; 0xfffffcd4
    908c:	ldrb	ip, [r1, #1100]	; 0x44c
    9090:	lsl	r3, r3, #8
    9094:	ldrb	r1, [fp, #-833]	; 0xfffffcbf
    9098:	orr	r3, r3, lr, lsl #16
    909c:	strb	ip, [r0, #76]	; 0x4c
    90a0:	orr	r1, r3, r1
    90a4:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    90a8:	and	r3, r1, #63	; 0x3f
    90ac:	sub	ip, r5, #78	; 0x4e
    90b0:	add	r3, r2, r3
    90b4:	cmp	ip, #0
    90b8:	lsr	ip, r1, #6
    90bc:	ldrb	r3, [r3, #1100]	; 0x44c
    90c0:	strb	r3, [r0, #77]	; 0x4d
    90c4:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    90c8:	and	ip, ip, #63	; 0x3f
    90cc:	sub	r3, r5, #79	; 0x4f
    90d0:	add	r2, r2, ip
    90d4:	cmp	r3, #0
    90d8:	lsr	r3, r1, #12
    90dc:	ldrb	r2, [r2, #1100]	; 0x44c
    90e0:	strb	r2, [r0, #78]	; 0x4e
    90e4:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    90e8:	ldr	r2, [pc, #-2268]	; 8814 <rb_sha512_crypt_r+0x9a4>
    90ec:	and	r3, r3, #63	; 0x3f
    90f0:	sub	ip, r5, #80	; 0x50
    90f4:	cmp	ip, #0
    90f8:	lsr	r1, r1, #18
    90fc:	add	r2, pc, r2
    9100:	add	r3, r2, r3
    9104:	ldrb	r3, [r3, #1100]	; 0x44c
    9108:	strb	r3, [r0, #79]	; 0x4f
    910c:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    9110:	ldrb	r3, [fp, #-832]	; 0xfffffcc0
    9114:	add	r1, r2, r1
    9118:	cmp	r5, #81	; 0x51
    911c:	ldrb	lr, [fp, #-790]	; 0xfffffcea
    9120:	ldrb	ip, [r1, #1100]	; 0x44c
    9124:	lsl	r3, r3, #8
    9128:	ldrb	r1, [fp, #-811]	; 0xfffffcd5
    912c:	orr	r3, r3, lr, lsl #16
    9130:	strb	ip, [r0, #80]	; 0x50
    9134:	orr	r1, r3, r1
    9138:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    913c:	and	r3, r1, #63	; 0x3f
    9140:	cmp	r5, #82	; 0x52
    9144:	lsr	ip, r1, #6
    9148:	add	r3, r2, r3
    914c:	ldrb	r3, [r3, #1100]	; 0x44c
    9150:	strb	r3, [r0, #81]	; 0x51
    9154:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    9158:	and	ip, ip, #63	; 0x3f
    915c:	cmp	r5, #83	; 0x53
    9160:	lsr	r3, r1, #12
    9164:	add	ip, r2, ip
    9168:	ldrb	ip, [ip, #1100]	; 0x44c
    916c:	strb	ip, [r0, #82]	; 0x52
    9170:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    9174:	and	r3, r3, #63	; 0x3f
    9178:	subs	ip, r5, #84	; 0x54
    917c:	lsr	r1, r1, #18
    9180:	add	r3, r2, r3
    9184:	ldrb	r3, [r3, #1100]	; 0x44c
    9188:	strb	r3, [r0, #83]	; 0x53
    918c:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    9190:	add	r1, r2, r1
    9194:	cmp	r5, #85	; 0x55
    9198:	ldrb	r5, [fp, #-789]	; 0xfffffceb
    919c:	ldrb	r3, [r1, #1100]	; 0x44c
    91a0:	strb	r3, [r0, #84]	; 0x54
    91a4:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    91a8:	and	r3, r5, #63	; 0x3f
    91ac:	cmp	ip, #2
    91b0:	lsr	r5, r5, #6
    91b4:	add	r3, r2, r3
    91b8:	ldrb	r3, [r3, #1100]	; 0x44c
    91bc:	strb	r3, [r0, #85]	; 0x55
    91c0:	beq	9364 <rb_sha512_crypt_r+0x14f4>
    91c4:	add	r2, r2, r5
    91c8:	cmp	ip, #3
    91cc:	ldrb	r3, [r2, #1100]	; 0x44c
    91d0:	strb	r3, [r0, #86]	; 0x56
    91d4:	ble	9364 <rb_sha512_crypt_r+0x14f4>
    91d8:	ldr	r5, [fp, #-888]	; 0xfffffc88
    91dc:	mov	r3, #0
    91e0:	strb	r3, [r0, #87]	; 0x57
    91e4:	add	r7, pc, #844	; 0x34c
    91e8:	ldrd	r6, [r7]
    91ec:	mov	r2, #0
    91f0:	mov	r3, #0
    91f4:	mov	r0, r4
    91f8:	add	r9, pc, #832	; 0x340
    91fc:	ldrd	r8, [r9]
    9200:	ldr	r1, [fp, #-876]	; 0xfffffc94
    9204:	strd	r6, [r4]
    9208:	add	r7, pc, #824	; 0x338
    920c:	ldrd	r6, [r7]
    9210:	strd	r8, [r4, #8]
    9214:	add	r9, pc, #820	; 0x334
    9218:	ldrd	r8, [r9]
    921c:	strd	r6, [r4, #16]
    9220:	strd	r2, [r4, #64]	; 0x40
    9224:	strd	r2, [r4, #72]	; 0x48
    9228:	strd	r2, [r4, #80]	; 0x50
    922c:	add	r3, pc, #804	; 0x324
    9230:	ldrd	r2, [r3]
    9234:	add	r7, pc, #804	; 0x324
    9238:	ldrd	r6, [r7]
    923c:	strd	r2, [r4, #24]
    9240:	add	r3, pc, #800	; 0x320
    9244:	ldrd	r2, [r3]
    9248:	strd	r8, [r4, #32]
    924c:	add	r9, pc, #796	; 0x31c
    9250:	ldrd	r8, [r9]
    9254:	strd	r8, [r4, #40]	; 0x28
    9258:	strd	r6, [r4, #48]	; 0x30
    925c:	strd	r2, [r4, #56]	; 0x38
    9260:	bl	6d90 <rb_sha512_finish_ctx>
    9264:	mov	r2, #64	; 0x40
    9268:	mov	r1, #0
    926c:	mov	r0, sl
    9270:	bl	4608 <memset@plt>
    9274:	mov	r1, #0
    9278:	ldr	r0, [fp, #-860]	; 0xfffffca4
    927c:	ldr	r6, [fp, #-856]	; 0xfffffca8
    9280:	mov	r2, r6
    9284:	bl	4608 <memset@plt>
    9288:	mov	r1, #0
    928c:	ldr	r0, [fp, #-884]	; 0xfffffc8c
    9290:	ldr	r2, [fp, #-864]	; 0xfffffca0
    9294:	bl	4608 <memset@plt>
    9298:	mov	r2, #344	; 0x158
    929c:	mov	r1, #0
    92a0:	mov	r0, r4
    92a4:	bl	4608 <memset@plt>
    92a8:	mov	r2, #344	; 0x158
    92ac:	mov	r1, #0
    92b0:	ldr	r0, [fp, #-880]	; 0xfffffc90
    92b4:	bl	4608 <memset@plt>
    92b8:	ldr	r3, [fp, #-904]	; 0xfffffc78
    92bc:	cmp	r3, #0
    92c0:	beq	92d4 <rb_sha512_crypt_r+0x1464>
    92c4:	mov	r2, r6
    92c8:	mov	r0, r3
    92cc:	mov	r1, #0
    92d0:	bl	4608 <memset@plt>
    92d4:	ldr	r3, [fp, #-908]	; 0xfffffc74
    92d8:	cmp	r3, #0
    92dc:	beq	92f0 <rb_sha512_crypt_r+0x1480>
    92e0:	mov	r0, r3
    92e4:	mov	r1, #0
    92e8:	ldr	r2, [fp, #-864]	; 0xfffffca0
    92ec:	bl	4608 <memset@plt>
    92f0:	mov	r0, r5
    92f4:	sub	sp, fp, #32
    92f8:	ldrd	r4, [sp]
    92fc:	ldrd	r6, [sp, #8]
    9300:	ldrd	r8, [sp, #16]
    9304:	ldrd	sl, [sp, #24]
    9308:	add	sp, sp, #32
    930c:	pop	{pc}		; (ldr pc, [sp], #4)
    9310:	ldr	r0, [fp, #-860]	; 0xfffffca4
    9314:	add	r5, r5, #1
    9318:	ldr	r1, [fp, #-856]	; 0xfffffca8
    931c:	bl	6bd0 <rb_sha512_process_bytes>
    9320:	mov	r1, sl
    9324:	mov	r0, r4
    9328:	bl	6d90 <rb_sha512_finish_ctx>
    932c:	ldr	r3, [fp, #-872]	; 0xfffffc98
    9330:	cmp	r3, r5
    9334:	bne	83b4 <rb_sha512_crypt_r+0x544>
    9338:	b	84b8 <rb_sha512_crypt_r+0x648>
    933c:	mov	r2, r4
    9340:	ldr	r0, [fp, #-860]	; 0xfffffca4
    9344:	ldr	r1, [fp, #-856]	; 0xfffffca8
    9348:	bl	6bd0 <rb_sha512_process_bytes>
    934c:	b	8484 <rb_sha512_crypt_r+0x614>
    9350:	mov	r2, r4
    9354:	ldr	r0, [fp, #-884]	; 0xfffffc8c
    9358:	ldr	r1, [fp, #-864]	; 0xfffffca0
    935c:	bl	6bd0 <rb_sha512_process_bytes>
    9360:	b	8460 <rb_sha512_crypt_r+0x5f0>
    9364:	bl	4cbc <__errno_location@plt>
    9368:	mov	r3, #34	; 0x22
    936c:	mov	r5, #0
    9370:	str	r3, [r0]
    9374:	b	91e4 <rb_sha512_crypt_r+0x1374>
    9378:	ldr	r2, [fp, #-872]	; 0xfffffc98
    937c:	mov	r1, r7
    9380:	mov	r0, r6
    9384:	ldr	r3, [pc, #492]	; 9578 <rb_sha512_crypt_r+0x1708>
    9388:	str	r2, [sp]
    938c:	ldr	r2, [pc, #488]	; 957c <rb_sha512_crypt_r+0x170c>
    9390:	add	r3, pc, r3
    9394:	add	r3, r3, #1168	; 0x490
    9398:	add	r3, r3, #4
    939c:	add	r2, pc, r2
    93a0:	bl	4b84 <snprintf@plt>
    93a4:	sub	r5, r5, r0
    93a8:	add	r6, r6, r0
    93ac:	bic	r7, r5, r5, asr #31
    93b0:	b	851c <rb_sha512_crypt_r+0x6ac>
    93b4:	ldr	r1, [fp, #-868]	; 0xfffffc9c
    93b8:	ldr	r2, [fp, #-864]	; 0xfffffca0
    93bc:	add	r3, r2, #15
    93c0:	bic	r3, r3, #7
    93c4:	sub	sp, sp, r3
    93c8:	add	r0, sp, #16
    93cc:	bl	47e8 <memcpy@plt>
    93d0:	str	r0, [fp, #-908]	; 0xfffffc74
    93d4:	str	r0, [fp, #-868]	; 0xfffffc9c
    93d8:	b	7f48 <rb_sha512_crypt_r+0xd8>
    93dc:	add	r3, r0, #15
    93e0:	mov	r2, r0
    93e4:	bic	r3, r3, #7
    93e8:	mov	r1, r6
    93ec:	sub	sp, sp, r3
    93f0:	add	r0, sp, #16
    93f4:	bl	47e8 <memcpy@plt>
    93f8:	mov	r6, r0
    93fc:	str	r0, [fp, #-904]	; 0xfffffc78
    9400:	b	7f38 <rb_sha512_crypt_r+0xc8>
    9404:	sub	r3, fp, #380	; 0x17c
    9408:	mov	r2, #10
    940c:	mov	r1, r3
    9410:	str	r3, [fp, #-880]	; 0xfffffc90
    9414:	ldr	r3, [fp, #-868]	; 0xfffffc9c
    9418:	add	r0, r3, #7
    941c:	bl	47dc <strtoul@plt>
    9420:	ldr	r3, [fp, #-380]	; 0xfffffe84
    9424:	ldrb	r2, [r3]
    9428:	cmp	r2, #36	; 0x24
    942c:	movwne	r3, #5000	; 0x1388
    9430:	strne	r3, [fp, #-872]	; 0xfffffc98
    9434:	bne	7f00 <rb_sha512_crypt_r+0x90>
    9438:	add	r3, r3, #1
    943c:	movw	r2, #51711	; 0xc9ff
    9440:	movt	r2, #15258	; 0x3b9a
    9444:	cmp	r0, r2
    9448:	str	r3, [fp, #-868]	; 0xfffffc9c
    944c:	movcc	r3, r0
    9450:	movcs	r3, r2
    9454:	cmp	r3, #1000	; 0x3e8
    9458:	mov	r2, #1
    945c:	movcc	r3, #1000	; 0x3e8
    9460:	str	r2, [fp, #-896]	; 0xfffffc80
    9464:	str	r3, [fp, #-872]	; 0xfffffc98
    9468:	b	7f00 <rb_sha512_crypt_r+0x90>
    946c:	mov	r2, r4
    9470:	ldr	r0, [fp, #-876]	; 0xfffffc94
    9474:	ldr	r7, [fp, #-856]	; 0xfffffca8
    9478:	mov	r1, r7
    947c:	bl	6bd0 <rb_sha512_process_bytes>
    9480:	cmp	r7, #0
    9484:	bne	80fc <rb_sha512_crypt_r+0x28c>
    9488:	mov	r0, r4
    948c:	ldr	r1, [fp, #-876]	; 0xfffffc94
    9490:	sub	sl, fp, #788	; 0x314
    9494:	bl	6d90 <rb_sha512_finish_ctx>
    9498:	add	r3, pc, #152	; 0x98
    949c:	ldrd	r2, [r3]
    94a0:	mov	r1, sl
    94a4:	ldr	r0, [fp, #-880]	; 0xfffffc90
    94a8:	strd	r2, [r5, #-8]
    94ac:	add	r3, pc, #140	; 0x8c
    94b0:	ldrd	r2, [r3]
    94b4:	strd	r2, [r5]
    94b8:	add	r3, pc, #136	; 0x88
    94bc:	ldrd	r2, [r3]
    94c0:	strd	r2, [r5, #8]
    94c4:	add	r3, pc, #140	; 0x8c
    94c8:	ldrd	r2, [r3]
    94cc:	strd	r2, [r5, #16]
    94d0:	add	r3, pc, #120	; 0x78
    94d4:	ldrd	r2, [r3]
    94d8:	strd	r2, [r5, #24]
    94dc:	add	r3, pc, #140	; 0x8c
    94e0:	ldrd	r2, [r3]
    94e4:	strd	r2, [r5, #32]
    94e8:	add	r3, pc, #112	; 0x70
    94ec:	ldrd	r2, [r3]
    94f0:	strd	r2, [r5, #40]	; 0x28
    94f4:	add	r3, pc, #108	; 0x6c
    94f8:	ldrd	r2, [r3]
    94fc:	strd	r2, [r5, #48]	; 0x30
    9500:	mov	r2, #0
    9504:	mov	r3, #0
    9508:	strd	r2, [r5, #56]	; 0x38
    950c:	strd	r2, [r5, #64]	; 0x40
    9510:	strd	r2, [r5, #72]	; 0x48
    9514:	bl	6d90 <rb_sha512_finish_ctx>
    9518:	add	r0, sp, #8
    951c:	ldr	r2, [fp, #-856]	; 0xfffffca8
    9520:	str	r0, [fp, #-860]	; 0xfffffca4
    9524:	b	8278 <rb_sha512_crypt_r+0x408>
    9528:	ldr	r0, [fp, #-860]	; 0xfffffca4
    952c:	ldr	r2, [fp, #-856]	; 0xfffffca8
    9530:	b	8278 <rb_sha512_crypt_r+0x408>
    9534:	nop	{0}
    9538:	.word	0xf3bcc908
    953c:	.word	0x6a09e667
    9540:	.word	0x84caa73b
    9544:	.word	0xbb67ae85
    9548:	.word	0xfe94f82b
    954c:	.word	0x3c6ef372
    9550:	.word	0xade682d1
    9554:	.word	0x510e527f
    9558:	.word	0x5f1d36f1
    955c:	.word	0xa54ff53a
    9560:	.word	0xfb41bd6b
    9564:	.word	0x1f83d9ab
    9568:	.word	0x137e2179
    956c:	.word	0x5be0cd19
    9570:	.word	0x2b3e6c1f
    9574:	.word	0x9b05688c
    9578:	.word	0x00010448
    957c:	.word	0x00010c34

00009580 <rb_des_init>:
    9580:	ldr	r3, [pc, #4016]	; a538 <rb_des_init+0xfb8>
    9584:	add	r3, pc, r3
    9588:	ldr	r2, [r3]
    958c:	cmp	r2, #1
    9590:	bxeq	lr
    9594:	strd	r4, [sp, #-36]!	; 0xffffffdc
    9598:	mov	r1, #0
    959c:	mov	r0, #14
    95a0:	ldr	r4, [pc, #3988]	; a53c <rb_des_init+0xfbc>
    95a4:	mov	r5, r1
    95a8:	movw	ip, #1308	; 0x51c
    95ac:	strd	r6, [sp, #8]
    95b0:	add	r7, r3, #28
    95b4:	strd	r8, [sp, #16]
    95b8:	mov	r6, r7
    95bc:	strd	sl, [sp, #24]
    95c0:	str	lr, [sp, #32]
    95c4:	sub	sp, sp, #100	; 0x64
    95c8:	add	r4, pc, r4
    95cc:	str	r1, [r3, #4]
    95d0:	add	r2, r4, #1168	; 0x490
    95d4:	add	r8, r4, #1296	; 0x510
    95d8:	str	r1, [r3, #8]
    95dc:	add	r8, r8, #12
    95e0:	str	r1, [r3, #12]
    95e4:	str	r1, [r3, #16]
    95e8:	add	r1, r2, #28
    95ec:	add	r2, r2, #44	; 0x2c
    95f0:	str	r1, [r3, #20]
    95f4:	str	r2, [r3, #24]
    95f8:	strb	r0, [r3, #28]
    95fc:	add	lr, r4, r5, lsl #6
    9600:	mov	r0, r6
    9604:	mov	r2, #1
    9608:	ubfx	r3, r2, #1, #4
    960c:	and	r9, r2, #32
    9610:	lsl	r1, r2, #4
    9614:	add	r2, r2, #1
    9618:	orr	r3, r3, r9
    961c:	cmp	r2, #64	; 0x40
    9620:	and	r1, r1, #16
    9624:	orr	r3, r3, r1
    9628:	add	r3, lr, r3
    962c:	ldrb	r3, [r3, ip]
    9630:	strb	r3, [r0, #1]!
    9634:	bne	9608 <rb_des_init+0x88>
    9638:	add	r5, r5, #1
    963c:	add	r6, r6, #64	; 0x40
    9640:	cmp	r5, #8
    9644:	beq	9654 <rb_des_init+0xd4>
    9648:	ldrb	r3, [r8, r5, lsl #6]
    964c:	strb	r3, [r6]
    9650:	b	95fc <rb_des_init+0x7c>
    9654:	ldr	r3, [pc, #3812]	; a540 <rb_des_init+0xfc0>
    9658:	mvn	r8, #63	; 0x3f
    965c:	add	lr, r7, #127	; 0x7f
    9660:	sub	r8, r8, r7
    9664:	mov	r9, #0
    9668:	ldr	sl, [pc, #3796]	; a544 <rb_des_init+0xfc4>
    966c:	mvn	fp, #64	; 0x40
    9670:	add	r3, pc, r3
    9674:	add	r7, r3, #91	; 0x5b
    9678:	add	sl, pc, sl
    967c:	add	r5, sl, r9, lsl #12
    9680:	sub	r6, fp, r8
    9684:	mov	ip, #0
    9688:	add	r4, r8, #1
    968c:	ldrb	r0, [r6, #1]!
    9690:	mov	r3, r7
    9694:	lsl	r0, r0, #4
    9698:	sxtb	r0, r0
    969c:	add	r2, r4, r3
    96a0:	ldrb	r1, [r3, #1]!
    96a4:	orr	r2, ip, r2
    96a8:	orr	r1, r0, r1
    96ac:	cmp	lr, r3
    96b0:	strb	r1, [r5, r2]
    96b4:	bne	969c <rb_des_init+0x11c>
    96b8:	add	ip, ip, #64	; 0x40
    96bc:	cmp	ip, #4096	; 0x1000
    96c0:	bne	968c <rb_des_init+0x10c>
    96c4:	add	r9, r9, #1
    96c8:	add	r7, r7, #128	; 0x80
    96cc:	cmp	r9, #4
    96d0:	sub	r8, r8, #128	; 0x80
    96d4:	add	lr, lr, #128	; 0x80
    96d8:	bne	967c <rb_des_init+0xfc>
    96dc:	ldr	r2, [pc, #3684]	; a548 <rb_des_init+0xfc8>
    96e0:	ldr	r3, [pc, #3684]	; a54c <rb_des_init+0xfcc>
    96e4:	add	r2, pc, r2
    96e8:	add	r2, r2, #1808	; 0x710
    96ec:	add	r3, pc, r3
    96f0:	add	r5, r2, #11
    96f4:	add	lr, r3, #536	; 0x218
    96f8:	add	ip, r2, #75	; 0x4b
    96fc:	mov	r0, r5
    9700:	add	lr, lr, #3
    9704:	add	r0, r0, #1
    9708:	mov	r1, r0
    970c:	cmp	ip, r0
    9710:	ldrb	r2, [r1], #-1
    9714:	sub	r2, r2, #1
    9718:	sub	r1, r1, r5
    971c:	uxtb	r2, r2
    9720:	add	r4, r3, r2
    9724:	strb	r2, [lr, #1]!
    9728:	strb	r1, [r4, #604]	; 0x25c
    972c:	bne	9704 <rb_des_init+0x184>
    9730:	add	r3, r3, #668	; 0x29c
    9734:	mov	r2, #64	; 0x40
    9738:	mov	r0, r3
    973c:	mov	r1, #255	; 0xff
    9740:	bl	4608 <memset@plt>
    9744:	ldr	r2, [pc, #3588]	; a550 <rb_des_init+0xfd0>
    9748:	sub	r3, r0, #668	; 0x29c
    974c:	add	r2, pc, r2
    9750:	add	r2, r2, #1872	; 0x750
    9754:	add	lr, r2, #11
    9758:	add	r0, r2, #67	; 0x43
    975c:	mov	r1, lr
    9760:	add	r1, r1, #1
    9764:	mov	r2, r1
    9768:	cmp	r0, r1
    976c:	ldrb	ip, [r2], #-1
    9770:	add	ip, r3, ip
    9774:	sub	r2, r2, lr
    9778:	strb	r2, [ip, #667]	; 0x29b
    977c:	bne	9760 <rb_des_init+0x1e0>
    9780:	add	r3, r3, #732	; 0x2dc
    9784:	mov	r2, #56	; 0x38
    9788:	mov	r0, r3
    978c:	mov	r1, #255	; 0xff
    9790:	bl	4608 <memset@plt>
    9794:	ldr	r2, [pc, #3512]	; a554 <rb_des_init+0xfd4>
    9798:	sub	r3, r0, #732	; 0x2dc
    979c:	add	r2, pc, r2
    97a0:	add	r2, r2, #1936	; 0x790
    97a4:	add	lr, r2, #3
    97a8:	add	r2, r2, #51	; 0x33
    97ac:	mov	r0, lr
    97b0:	add	r0, r0, #1
    97b4:	mov	r1, r0
    97b8:	cmp	r2, r0
    97bc:	ldrb	ip, [r1], #-1
    97c0:	add	ip, r3, ip
    97c4:	sub	r1, r1, lr
    97c8:	strb	r1, [ip, #731]	; 0x2db
    97cc:	bne	97b0 <rb_des_init+0x230>
    97d0:	mov	r2, #0
    97d4:	add	r3, r3, #732	; 0x2dc
    97d8:	mov	fp, r2
    97dc:	str	r2, [sp, #8]
    97e0:	strd	r2, [sp, #40]	; 0x28
    97e4:	ldr	r3, [pc, #3436]	; a558 <rb_des_init+0xfd8>
    97e8:	add	r3, pc, r3
    97ec:	str	r3, [sp, #76]	; 0x4c
    97f0:	ldr	r3, [pc, #3428]	; a55c <rb_des_init+0xfdc>
    97f4:	add	r3, pc, r3
    97f8:	str	r3, [sp, #72]	; 0x48
    97fc:	ldr	r3, [pc, #3420]	; a560 <rb_des_init+0xfe0>
    9800:	add	r3, pc, r3
    9804:	str	r3, [sp, #68]	; 0x44
    9808:	ldr	r3, [pc, #3412]	; a564 <rb_des_init+0xfe4>
    980c:	add	r3, pc, r3
    9810:	str	r3, [sp, #64]	; 0x40
    9814:	ldr	r3, [pc, #3404]	; a568 <rb_des_init+0xfe8>
    9818:	add	r3, pc, r3
    981c:	str	r3, [sp, #60]	; 0x3c
    9820:	ldr	r3, [pc, #3396]	; a56c <rb_des_init+0xfec>
    9824:	add	r3, pc, r3
    9828:	str	r3, [sp, #56]	; 0x38
    982c:	ldr	r3, [pc, #3388]	; a570 <rb_des_init+0xff0>
    9830:	add	r3, pc, r3
    9834:	str	r3, [sp, #52]	; 0x34
    9838:	ldr	r3, [pc, #3380]	; a574 <rb_des_init+0xff4>
    983c:	add	r3, pc, r3
    9840:	str	r3, [sp, #48]	; 0x30
    9844:	ldr	r3, [pc, #3372]	; a578 <rb_des_init+0xff8>
    9848:	add	r3, pc, r3
    984c:	str	r3, [sp, #80]	; 0x50
    9850:	ldr	r3, [pc, #3364]	; a57c <rb_des_init+0xffc>
    9854:	add	r3, pc, r3
    9858:	str	r3, [sp, #84]	; 0x54
    985c:	ldr	r3, [pc, #3356]	; a580 <rb_des_init+0x1000>
    9860:	add	r3, pc, r3
    9864:	str	r3, [sp, #88]	; 0x58
    9868:	ldr	r3, [pc, #3348]	; a584 <rb_des_init+0x1004>
    986c:	add	r3, pc, r3
    9870:	str	r3, [sp, #92]	; 0x5c
    9874:	ldr	r4, [sp, #8]
    9878:	ldr	r1, [sp, #64]	; 0x40
    987c:	ldr	r2, [sp, #80]	; 0x50
    9880:	add	r3, r4, #1
    9884:	add	r7, r4, #2
    9888:	ldr	lr, [sp, #72]	; 0x48
    988c:	add	r5, r4, #5
    9890:	add	r8, r4, #7
    9894:	add	r0, r4, #3
    9898:	add	r6, r4, #4
    989c:	str	fp, [r1]
    98a0:	str	r3, [sp, #36]	; 0x24
    98a4:	add	r4, r4, #6
    98a8:	add	r9, r2, r3
    98ac:	ldr	ip, [sp, #76]	; 0x4c
    98b0:	str	r7, [sp, #4]
    98b4:	ldr	r2, [sp, #84]	; 0x54
    98b8:	str	r5, [sp, #12]
    98bc:	str	fp, [lr]
    98c0:	str	fp, [ip]
    98c4:	str	r4, [sp, #16]
    98c8:	add	sl, r2, r3
    98cc:	str	r9, [sp, #28]
    98d0:	mov	r9, r4
    98d4:	ldr	r3, [sp, #88]	; 0x58
    98d8:	str	sl, [sp, #32]
    98dc:	ldr	r2, [sp, #68]	; 0x44
    98e0:	ldr	r5, [sp, #40]	; 0x28
    98e4:	add	r3, r3, r7
    98e8:	ldr	r7, [sp, #12]
    98ec:	str	r3, [sp, #20]
    98f0:	ldr	r3, [sp, #92]	; 0x5c
    98f4:	str	fp, [r2]
    98f8:	add	r3, r3, r8
    98fc:	str	r3, [sp, #24]
    9900:	mov	r3, #0
    9904:	b	9c68 <rb_des_init+0x6e8>
    9908:	ldr	sl, [pc, #3192]	; a588 <rb_des_init+0x1008>
    990c:	add	sl, pc, sl
    9910:	add	r4, sl, r4, lsl #2
    9914:	ldr	sl, [ip]
    9918:	ldr	r4, [r4, #1180]	; 0x49c
    991c:	orr	r4, sl, r4
    9920:	str	r4, [ip]
    9924:	ldr	r4, [sp, #32]
    9928:	ldrb	r4, [r4, #540]	; 0x21c
    992c:	cmp	r4, #31
    9930:	ble	9cac <rb_des_init+0x72c>
    9934:	ldr	sl, [pc, #3152]	; a58c <rb_des_init+0x100c>
    9938:	add	sl, pc, sl
    993c:	add	r4, sl, r4, lsl #2
    9940:	ldr	sl, [r1]
    9944:	ldr	r4, [r4, #1052]	; 0x41c
    9948:	orr	r4, sl, r4
    994c:	str	r4, [r1]
    9950:	tst	r3, #32
    9954:	beq	99bc <rb_des_init+0x43c>
    9958:	ldr	r4, [sp, #20]
    995c:	ldrb	r4, [r4, #604]	; 0x25c
    9960:	cmp	r4, #31
    9964:	bgt	9cec <rb_des_init+0x76c>
    9968:	ldr	sl, [pc, #3104]	; a590 <rb_des_init+0x1010>
    996c:	add	sl, pc, sl
    9970:	add	r4, sl, r4, lsl #2
    9974:	ldr	sl, [ip]
    9978:	ldr	r4, [r4, #1180]	; 0x49c
    997c:	orr	r4, sl, r4
    9980:	str	r4, [ip]
    9984:	ldr	r4, [pc, #3080]	; a594 <rb_des_init+0x1014>
    9988:	ldr	sl, [sp, #4]
    998c:	add	r4, pc, r4
    9990:	add	r4, r4, sl
    9994:	ldrb	r4, [r4, #540]	; 0x21c
    9998:	cmp	r4, #31
    999c:	ble	9ccc <rb_des_init+0x74c>
    99a0:	ldr	sl, [pc, #3056]	; a598 <rb_des_init+0x1018>
    99a4:	add	sl, pc, sl
    99a8:	add	r4, sl, r4, lsl #2
    99ac:	ldr	sl, [r1]
    99b0:	ldr	r4, [r4, #1052]	; 0x41c
    99b4:	orr	r4, sl, r4
    99b8:	str	r4, [r1]
    99bc:	tst	r3, #16
    99c0:	beq	9a2c <rb_des_init+0x4ac>
    99c4:	ldr	r4, [pc, #3024]	; a59c <rb_des_init+0x101c>
    99c8:	add	r4, pc, r4
    99cc:	add	r4, r4, r0
    99d0:	ldrb	r4, [r4, #604]	; 0x25c
    99d4:	cmp	r4, #31
    99d8:	bgt	9d2c <rb_des_init+0x7ac>
    99dc:	ldr	sl, [pc, #3004]	; a5a0 <rb_des_init+0x1020>
    99e0:	add	sl, pc, sl
    99e4:	add	r4, sl, r4, lsl #2
    99e8:	ldr	sl, [ip]
    99ec:	ldr	r4, [r4, #1180]	; 0x49c
    99f0:	orr	r4, sl, r4
    99f4:	str	r4, [ip]
    99f8:	ldr	r4, [pc, #2980]	; a5a4 <rb_des_init+0x1024>
    99fc:	add	r4, pc, r4
    9a00:	add	r4, r4, r0
    9a04:	ldrb	r4, [r4, #540]	; 0x21c
    9a08:	cmp	r4, #31
    9a0c:	ble	9d0c <rb_des_init+0x78c>
    9a10:	ldr	sl, [pc, #2960]	; a5a8 <rb_des_init+0x1028>
    9a14:	add	sl, pc, sl
    9a18:	add	r4, sl, r4, lsl #2
    9a1c:	ldr	sl, [r1]
    9a20:	ldr	r4, [r4, #1052]	; 0x41c
    9a24:	orr	r4, sl, r4
    9a28:	str	r4, [r1]
    9a2c:	tst	r3, #8
    9a30:	beq	9a9c <rb_des_init+0x51c>
    9a34:	ldr	r4, [pc, #2928]	; a5ac <rb_des_init+0x102c>
    9a38:	add	r4, pc, r4
    9a3c:	add	r4, r4, r6
    9a40:	ldrb	r4, [r4, #604]	; 0x25c
    9a44:	cmp	r4, #31
    9a48:	bgt	9d6c <rb_des_init+0x7ec>
    9a4c:	ldr	sl, [pc, #2908]	; a5b0 <rb_des_init+0x1030>
    9a50:	add	sl, pc, sl
    9a54:	add	r4, sl, r4, lsl #2
    9a58:	ldr	sl, [ip]
    9a5c:	ldr	r4, [r4, #1180]	; 0x49c
    9a60:	orr	r4, sl, r4
    9a64:	str	r4, [ip]
    9a68:	ldr	r4, [pc, #2884]	; a5b4 <rb_des_init+0x1034>
    9a6c:	add	r4, pc, r4
    9a70:	add	r4, r4, r6
    9a74:	ldrb	r4, [r4, #540]	; 0x21c
    9a78:	cmp	r4, #31
    9a7c:	ble	9d4c <rb_des_init+0x7cc>
    9a80:	ldr	sl, [pc, #2864]	; a5b8 <rb_des_init+0x1038>
    9a84:	add	sl, pc, sl
    9a88:	add	r4, sl, r4, lsl #2
    9a8c:	ldr	sl, [r1]
    9a90:	ldr	r4, [r4, #1052]	; 0x41c
    9a94:	orr	r4, sl, r4
    9a98:	str	r4, [r1]
    9a9c:	tst	r3, #4
    9aa0:	beq	9b0c <rb_des_init+0x58c>
    9aa4:	ldr	r4, [pc, #2832]	; a5bc <rb_des_init+0x103c>
    9aa8:	add	r4, pc, r4
    9aac:	add	r4, r4, r7
    9ab0:	ldrb	r4, [r4, #604]	; 0x25c
    9ab4:	cmp	r4, #31
    9ab8:	bgt	9dac <rb_des_init+0x82c>
    9abc:	ldr	sl, [pc, #2812]	; a5c0 <rb_des_init+0x1040>
    9ac0:	add	sl, pc, sl
    9ac4:	add	r4, sl, r4, lsl #2
    9ac8:	ldr	sl, [ip]
    9acc:	ldr	r4, [r4, #1180]	; 0x49c
    9ad0:	orr	r4, sl, r4
    9ad4:	str	r4, [ip]
    9ad8:	ldr	r4, [pc, #2788]	; a5c4 <rb_des_init+0x1044>
    9adc:	add	r4, pc, r4
    9ae0:	add	r4, r4, r7
    9ae4:	ldrb	r4, [r4, #540]	; 0x21c
    9ae8:	cmp	r4, #31
    9aec:	ble	9d8c <rb_des_init+0x80c>
    9af0:	ldr	sl, [pc, #2768]	; a5c8 <rb_des_init+0x1048>
    9af4:	add	sl, pc, sl
    9af8:	add	r4, sl, r4, lsl #2
    9afc:	ldr	sl, [r1]
    9b00:	ldr	r4, [r4, #1052]	; 0x41c
    9b04:	orr	r4, sl, r4
    9b08:	str	r4, [r1]
    9b0c:	tst	r3, #2
    9b10:	beq	9b7c <rb_des_init+0x5fc>
    9b14:	ldr	r4, [pc, #2736]	; a5cc <rb_des_init+0x104c>
    9b18:	add	r4, pc, r4
    9b1c:	add	r4, r4, r9
    9b20:	ldrb	r4, [r4, #604]	; 0x25c
    9b24:	cmp	r4, #31
    9b28:	bgt	9dec <rb_des_init+0x86c>
    9b2c:	ldr	sl, [pc, #2716]	; a5d0 <rb_des_init+0x1050>
    9b30:	add	sl, pc, sl
    9b34:	add	r4, sl, r4, lsl #2
    9b38:	ldr	sl, [ip]
    9b3c:	ldr	r4, [r4, #1180]	; 0x49c
    9b40:	orr	r4, sl, r4
    9b44:	str	r4, [ip]
    9b48:	ldr	r4, [pc, #2692]	; a5d4 <rb_des_init+0x1054>
    9b4c:	add	r4, pc, r4
    9b50:	add	r4, r4, r9
    9b54:	ldrb	r4, [r4, #540]	; 0x21c
    9b58:	cmp	r4, #31
    9b5c:	ble	9dcc <rb_des_init+0x84c>
    9b60:	ldr	sl, [pc, #2672]	; a5d8 <rb_des_init+0x1058>
    9b64:	add	sl, pc, sl
    9b68:	add	r4, sl, r4, lsl #2
    9b6c:	ldr	sl, [r1]
    9b70:	ldr	r4, [r4, #1052]	; 0x41c
    9b74:	orr	r4, sl, r4
    9b78:	str	r4, [r1]
    9b7c:	tst	r3, #1
    9b80:	beq	9be4 <rb_des_init+0x664>
    9b84:	ldr	r4, [sp, #24]
    9b88:	ldrb	r4, [r4, #604]	; 0x25c
    9b8c:	cmp	r4, #31
    9b90:	bgt	a228 <rb_des_init+0xca8>
    9b94:	ldr	sl, [pc, #2624]	; a5dc <rb_des_init+0x105c>
    9b98:	add	sl, pc, sl
    9b9c:	add	r4, sl, r4, lsl #2
    9ba0:	ldr	sl, [ip]
    9ba4:	ldr	r4, [r4, #1180]	; 0x49c
    9ba8:	orr	r4, sl, r4
    9bac:	str	r4, [ip]
    9bb0:	ldr	r4, [pc, #2600]	; a5e0 <rb_des_init+0x1060>
    9bb4:	add	r4, pc, r4
    9bb8:	add	r4, r4, r8
    9bbc:	ldrb	r4, [r4, #540]	; 0x21c
    9bc0:	cmp	r4, #31
    9bc4:	ble	9e0c <rb_des_init+0x88c>
    9bc8:	ldr	sl, [pc, #2580]	; a5e4 <rb_des_init+0x1064>
    9bcc:	add	sl, pc, sl
    9bd0:	add	r4, sl, r4, lsl #2
    9bd4:	ldr	sl, [r1]
    9bd8:	ldr	r4, [r4, #1052]	; 0x41c
    9bdc:	orr	r4, sl, r4
    9be0:	str	r4, [r1]
    9be4:	add	r3, r3, #1
    9be8:	cmp	r3, #256	; 0x100
    9bec:	beq	9e34 <rb_des_init+0x8b4>
    9bf0:	tst	r3, #128	; 0x80
    9bf4:	str	fp, [ip, #4]!
    9bf8:	str	fp, [lr, #4]!
    9bfc:	str	fp, [r1, #4]
    9c00:	str	fp, [r2, #4]
    9c04:	beq	9c60 <rb_des_init+0x6e0>
    9c08:	ldr	r4, [pc, #2520]	; a5e8 <rb_des_init+0x1068>
    9c0c:	add	r4, pc, r4
    9c10:	add	r4, r4, #604	; 0x25c
    9c14:	ldrb	r4, [r4, r5, lsl #3]
    9c18:	cmp	r4, #31
    9c1c:	bgt	a260 <rb_des_init+0xce0>
    9c20:	ldr	sl, [pc, #2500]	; a5ec <rb_des_init+0x106c>
    9c24:	add	sl, pc, sl
    9c28:	add	r4, sl, r4, lsl #2
    9c2c:	ldr	r4, [r4, #1180]	; 0x49c
    9c30:	str	r4, [ip]
    9c34:	ldr	r4, [pc, #2484]	; a5f0 <rb_des_init+0x1070>
    9c38:	add	r4, pc, r4
    9c3c:	add	r4, r4, #540	; 0x21c
    9c40:	ldrb	r4, [r4, r5, lsl #3]
    9c44:	cmp	r4, #31
    9c48:	ble	a248 <rb_des_init+0xcc8>
    9c4c:	ldr	sl, [pc, #2464]	; a5f4 <rb_des_init+0x1074>
    9c50:	add	sl, pc, sl
    9c54:	add	r4, sl, r4, lsl #2
    9c58:	ldr	r4, [r4, #1052]	; 0x41c
    9c5c:	str	r4, [r1, #4]
    9c60:	add	r2, r2, #4
    9c64:	add	r1, r1, #4
    9c68:	tst	r3, #64	; 0x40
    9c6c:	beq	9950 <rb_des_init+0x3d0>
    9c70:	ldr	r4, [sp, #28]
    9c74:	ldrb	r4, [r4, #604]	; 0x25c
    9c78:	cmp	r4, #31
    9c7c:	ble	9908 <rb_des_init+0x388>
    9c80:	ldr	sl, [pc, #2416]	; a5f8 <rb_des_init+0x1078>
    9c84:	add	sl, pc, sl
    9c88:	add	r4, sl, r4, lsl #2
    9c8c:	ldr	sl, [lr]
    9c90:	ldr	r4, [r4, #1052]	; 0x41c
    9c94:	orr	r4, sl, r4
    9c98:	str	r4, [lr]
    9c9c:	ldr	r4, [sp, #32]
    9ca0:	ldrb	r4, [r4, #540]	; 0x21c
    9ca4:	cmp	r4, #31
    9ca8:	bgt	9934 <rb_des_init+0x3b4>
    9cac:	ldr	sl, [pc, #2376]	; a5fc <rb_des_init+0x107c>
    9cb0:	add	sl, pc, sl
    9cb4:	add	r4, sl, r4, lsl #2
    9cb8:	ldr	sl, [r2]
    9cbc:	ldr	r4, [r4, #1180]	; 0x49c
    9cc0:	orr	r4, sl, r4
    9cc4:	str	r4, [r2]
    9cc8:	b	9950 <rb_des_init+0x3d0>
    9ccc:	ldr	sl, [pc, #2348]	; a600 <rb_des_init+0x1080>
    9cd0:	add	sl, pc, sl
    9cd4:	add	r4, sl, r4, lsl #2
    9cd8:	ldr	sl, [r2]
    9cdc:	ldr	r4, [r4, #1180]	; 0x49c
    9ce0:	orr	r4, sl, r4
    9ce4:	str	r4, [r2]
    9ce8:	b	99bc <rb_des_init+0x43c>
    9cec:	ldr	sl, [pc, #2320]	; a604 <rb_des_init+0x1084>
    9cf0:	add	sl, pc, sl
    9cf4:	add	r4, sl, r4, lsl #2
    9cf8:	ldr	sl, [lr]
    9cfc:	ldr	r4, [r4, #1052]	; 0x41c
    9d00:	orr	r4, sl, r4
    9d04:	str	r4, [lr]
    9d08:	b	9984 <rb_des_init+0x404>
    9d0c:	ldr	sl, [pc, #2292]	; a608 <rb_des_init+0x1088>
    9d10:	add	sl, pc, sl
    9d14:	add	r4, sl, r4, lsl #2
    9d18:	ldr	sl, [r2]
    9d1c:	ldr	r4, [r4, #1180]	; 0x49c
    9d20:	orr	r4, sl, r4
    9d24:	str	r4, [r2]
    9d28:	b	9a2c <rb_des_init+0x4ac>
    9d2c:	ldr	sl, [pc, #2264]	; a60c <rb_des_init+0x108c>
    9d30:	add	sl, pc, sl
    9d34:	add	r4, sl, r4, lsl #2
    9d38:	ldr	sl, [lr]
    9d3c:	ldr	r4, [r4, #1052]	; 0x41c
    9d40:	orr	r4, sl, r4
    9d44:	str	r4, [lr]
    9d48:	b	99f8 <rb_des_init+0x478>
    9d4c:	ldr	sl, [pc, #2236]	; a610 <rb_des_init+0x1090>
    9d50:	add	sl, pc, sl
    9d54:	add	r4, sl, r4, lsl #2
    9d58:	ldr	sl, [r2]
    9d5c:	ldr	r4, [r4, #1180]	; 0x49c
    9d60:	orr	r4, sl, r4
    9d64:	str	r4, [r2]
    9d68:	b	9a9c <rb_des_init+0x51c>
    9d6c:	ldr	sl, [pc, #2208]	; a614 <rb_des_init+0x1094>
    9d70:	add	sl, pc, sl
    9d74:	add	r4, sl, r4, lsl #2
    9d78:	ldr	sl, [lr]
    9d7c:	ldr	r4, [r4, #1052]	; 0x41c
    9d80:	orr	r4, sl, r4
    9d84:	str	r4, [lr]
    9d88:	b	9a68 <rb_des_init+0x4e8>
    9d8c:	ldr	sl, [pc, #2180]	; a618 <rb_des_init+0x1098>
    9d90:	add	sl, pc, sl
    9d94:	add	r4, sl, r4, lsl #2
    9d98:	ldr	sl, [r2]
    9d9c:	ldr	r4, [r4, #1180]	; 0x49c
    9da0:	orr	r4, sl, r4
    9da4:	str	r4, [r2]
    9da8:	b	9b0c <rb_des_init+0x58c>
    9dac:	ldr	sl, [pc, #2152]	; a61c <rb_des_init+0x109c>
    9db0:	add	sl, pc, sl
    9db4:	add	r4, sl, r4, lsl #2
    9db8:	ldr	sl, [lr]
    9dbc:	ldr	r4, [r4, #1052]	; 0x41c
    9dc0:	orr	r4, sl, r4
    9dc4:	str	r4, [lr]
    9dc8:	b	9ad8 <rb_des_init+0x558>
    9dcc:	ldr	sl, [pc, #2124]	; a620 <rb_des_init+0x10a0>
    9dd0:	add	sl, pc, sl
    9dd4:	add	r4, sl, r4, lsl #2
    9dd8:	ldr	sl, [r2]
    9ddc:	ldr	r4, [r4, #1180]	; 0x49c
    9de0:	orr	r4, sl, r4
    9de4:	str	r4, [r2]
    9de8:	b	9b7c <rb_des_init+0x5fc>
    9dec:	ldr	sl, [pc, #2096]	; a624 <rb_des_init+0x10a4>
    9df0:	add	sl, pc, sl
    9df4:	add	r4, sl, r4, lsl #2
    9df8:	ldr	sl, [lr]
    9dfc:	ldr	r4, [r4, #1052]	; 0x41c
    9e00:	orr	r4, sl, r4
    9e04:	str	r4, [lr]
    9e08:	b	9b48 <rb_des_init+0x5c8>
    9e0c:	ldr	sl, [pc, #2068]	; a628 <rb_des_init+0x10a8>
    9e10:	add	r3, r3, #1
    9e14:	cmp	r3, #256	; 0x100
    9e18:	add	sl, pc, sl
    9e1c:	add	r4, sl, r4, lsl #2
    9e20:	ldr	sl, [r2]
    9e24:	ldr	r4, [r4, #1180]	; 0x49c
    9e28:	orr	r4, sl, r4
    9e2c:	str	r4, [r2]
    9e30:	bne	9bf0 <rb_des_init+0x670>
    9e34:	ldr	lr, [pc, #2032]	; a62c <rb_des_init+0x10ac>
    9e38:	mov	sl, #0
    9e3c:	mov	r3, sl
    9e40:	ldr	r8, [sp, #56]	; 0x38
    9e44:	ldr	r5, [pc, #2020]	; a630 <rb_des_init+0x10b0>
    9e48:	add	lr, pc, lr
    9e4c:	ldr	r9, [sp, #36]	; 0x24
    9e50:	mov	r1, r8
    9e54:	str	fp, [r8]
    9e58:	ldr	r8, [pc, #2004]	; a634 <rb_des_init+0x10b4>
    9e5c:	add	r5, pc, r5
    9e60:	ldr	r7, [sp, #4]
    9e64:	add	lr, lr, r9
    9e68:	ldr	ip, [sp, #48]	; 0x30
    9e6c:	add	r8, pc, r8
    9e70:	str	lr, [sp, #20]
    9e74:	add	r0, r8, r0
    9e78:	ldr	lr, [pc, #1976]	; a638 <rb_des_init+0x10b8>
    9e7c:	add	r5, r5, r7
    9e80:	ldr	r2, [sp, #60]	; 0x3c
    9e84:	str	r0, [sp, #28]
    9e88:	ldr	r0, [pc, #1964]	; a63c <rb_des_init+0x10bc>
    9e8c:	add	lr, pc, lr
    9e90:	str	r5, [sp, #24]
    9e94:	ldr	r5, [sp, #44]	; 0x2c
    9e98:	str	fp, [r2]
    9e9c:	ldr	r4, [sp, #52]	; 0x34
    9ea0:	add	r0, pc, r0
    9ea4:	str	r0, [sp, #36]	; 0x24
    9ea8:	add	r0, lr, r6
    9eac:	str	r0, [sp, #32]
    9eb0:	mov	r0, sl
    9eb4:	b	a088 <rb_des_init+0xb08>
    9eb8:	ldrb	sl, [r5]
    9ebc:	cmp	sl, #255	; 0xff
    9ec0:	beq	a858 <rb_des_init+0x12d8>
    9ec4:	cmp	sl, #23
    9ec8:	ble	a350 <rb_des_init+0xdd0>
    9ecc:	ldr	lr, [pc, #1900]	; a640 <rb_des_init+0x10c0>
    9ed0:	mov	r0, #0
    9ed4:	add	lr, pc, lr
    9ed8:	add	lr, lr, sl, lsl #2
    9edc:	ldr	lr, [lr, #1116]	; 0x45c
    9ee0:	str	lr, [ip]
    9ee4:	cmp	r9, #0
    9ee8:	beq	9f18 <rb_des_init+0x998>
    9eec:	ldrb	r9, [r5, #1]
    9ef0:	cmp	r9, #255	; 0xff
    9ef4:	beq	9f18 <rb_des_init+0x998>
    9ef8:	cmp	r9, #23
    9efc:	ble	a278 <rb_des_init+0xcf8>
    9f00:	ldr	sl, [pc, #1852]	; a644 <rb_des_init+0x10c4>
    9f04:	add	sl, pc, sl
    9f08:	add	r9, sl, r9, lsl #2
    9f0c:	ldr	r9, [r9, #1116]	; 0x45c
    9f10:	orr	lr, lr, r9
    9f14:	str	lr, [ip]
    9f18:	cmp	r8, #0
    9f1c:	beq	9f4c <rb_des_init+0x9cc>
    9f20:	ldrb	r8, [r5, #2]
    9f24:	cmp	r8, #255	; 0xff
    9f28:	beq	9f4c <rb_des_init+0x9cc>
    9f2c:	cmp	r8, #23
    9f30:	ble	a36c <rb_des_init+0xdec>
    9f34:	ldr	r9, [pc, #1804]	; a648 <rb_des_init+0x10c8>
    9f38:	add	r9, pc, r9
    9f3c:	add	r8, r9, r8, lsl #2
    9f40:	ldr	r8, [r8, #1116]	; 0x45c
    9f44:	orr	lr, lr, r8
    9f48:	str	lr, [ip]
    9f4c:	cmp	r7, #0
    9f50:	beq	9f80 <rb_des_init+0xa00>
    9f54:	ldrb	r7, [r5, #3]
    9f58:	cmp	r7, #255	; 0xff
    9f5c:	beq	9f80 <rb_des_init+0xa00>
    9f60:	cmp	r7, #23
    9f64:	ble	a388 <rb_des_init+0xe08>
    9f68:	ldr	r8, [pc, #1756]	; a64c <rb_des_init+0x10cc>
    9f6c:	add	r8, pc, r8
    9f70:	add	r7, r8, r7, lsl #2
    9f74:	ldr	r7, [r7, #1116]	; 0x45c
    9f78:	orr	lr, lr, r7
    9f7c:	str	lr, [ip]
    9f80:	cmp	r6, #0
    9f84:	beq	9fb4 <rb_des_init+0xa34>
    9f88:	ldrb	r6, [r5, #4]
    9f8c:	cmp	r6, #255	; 0xff
    9f90:	beq	9fb4 <rb_des_init+0xa34>
    9f94:	cmp	r6, #23
    9f98:	ble	a3a4 <rb_des_init+0xe24>
    9f9c:	ldr	r7, [pc, #1708]	; a650 <rb_des_init+0x10d0>
    9fa0:	add	r7, pc, r7
    9fa4:	add	r6, r7, r6, lsl #2
    9fa8:	ldr	r6, [r6, #1116]	; 0x45c
    9fac:	orr	lr, lr, r6
    9fb0:	str	lr, [ip]
    9fb4:	ands	r6, r3, #2
    9fb8:	cmp	r6, #0
    9fbc:	beq	9fec <rb_des_init+0xa6c>
    9fc0:	ldrb	r6, [r5, #5]
    9fc4:	cmp	r6, #255	; 0xff
    9fc8:	beq	9fec <rb_des_init+0xa6c>
    9fcc:	cmp	r6, #23
    9fd0:	ble	a3c0 <rb_des_init+0xe40>
    9fd4:	ldr	r7, [pc, #1656]	; a654 <rb_des_init+0x10d4>
    9fd8:	add	r7, pc, r7
    9fdc:	add	r6, r7, r6, lsl #2
    9fe0:	ldr	r6, [r6, #1116]	; 0x45c
    9fe4:	orr	lr, lr, r6
    9fe8:	str	lr, [ip]
    9fec:	ands	r6, r3, #1
    9ff0:	cmp	r6, #0
    9ff4:	beq	a024 <rb_des_init+0xaa4>
    9ff8:	ldrb	r6, [r5, #6]
    9ffc:	cmp	r6, #255	; 0xff
    a000:	beq	a024 <rb_des_init+0xaa4>
    a004:	cmp	r6, #23
    a008:	ble	a3dc <rb_des_init+0xe5c>
    a00c:	ldr	r0, [pc, #1604]	; a658 <rb_des_init+0x10d8>
    a010:	add	r0, pc, r0
    a014:	add	r0, r0, r6, lsl #2
    a018:	ldr	r0, [r0, #1116]	; 0x45c
    a01c:	orr	r0, r0, lr
    a020:	str	r0, [ip]
    a024:	add	r3, r3, #1
    a028:	cmp	r3, #128	; 0x80
    a02c:	beq	a400 <rb_des_init+0xe80>
    a030:	ands	r0, r3, #64	; 0x40
    a034:	str	fp, [r1, #4]
    a038:	str	fp, [r2, #4]
    a03c:	beq	a078 <rb_des_init+0xaf8>
    a040:	ldr	lr, [pc, #1556]	; a65c <rb_des_init+0x10dc>
    a044:	ldr	r6, [sp, #8]
    a048:	add	lr, pc, lr
    a04c:	add	lr, lr, r6
    a050:	ldrb	lr, [lr, #668]	; 0x29c
    a054:	cmp	lr, #255	; 0xff
    a058:	beq	a078 <rb_des_init+0xaf8>
    a05c:	cmp	lr, #27
    a060:	ble	a840 <rb_des_init+0x12c0>
    a064:	ldr	r6, [pc, #1524]	; a660 <rb_des_init+0x10e0>
    a068:	add	r6, pc, r6
    a06c:	add	lr, r6, lr, lsl #2
    a070:	ldr	lr, [lr, #1084]	; 0x43c
    a074:	str	lr, [r1, #4]
    a078:	add	r2, r2, #4
    a07c:	add	r1, r1, #4
    a080:	add	r4, r4, #4
    a084:	add	ip, ip, #4
    a088:	ands	r9, r3, #32
    a08c:	beq	a0c4 <rb_des_init+0xb44>
    a090:	ldr	lr, [sp, #20]
    a094:	ldrb	lr, [lr, #668]	; 0x29c
    a098:	cmp	lr, #255	; 0xff
    a09c:	beq	a0c4 <rb_des_init+0xb44>
    a0a0:	cmp	lr, #27
    a0a4:	ble	a2d4 <rb_des_init+0xd54>
    a0a8:	ldr	r6, [pc, #1460]	; a664 <rb_des_init+0x10e4>
    a0ac:	ldr	r7, [r1]
    a0b0:	add	r6, pc, r6
    a0b4:	add	lr, r6, lr, lsl #2
    a0b8:	ldr	lr, [lr, #1084]	; 0x43c
    a0bc:	orr	lr, r7, lr
    a0c0:	str	lr, [r1]
    a0c4:	ands	r8, r3, #16
    a0c8:	beq	a100 <rb_des_init+0xb80>
    a0cc:	ldr	lr, [sp, #24]
    a0d0:	ldrb	lr, [lr, #668]	; 0x29c
    a0d4:	cmp	lr, #255	; 0xff
    a0d8:	beq	a100 <rb_des_init+0xb80>
    a0dc:	cmp	lr, #27
    a0e0:	ble	a2f0 <rb_des_init+0xd70>
    a0e4:	ldr	r6, [pc, #1404]	; a668 <rb_des_init+0x10e8>
    a0e8:	ldr	r7, [r1]
    a0ec:	add	r6, pc, r6
    a0f0:	add	lr, r6, lr, lsl #2
    a0f4:	ldr	lr, [lr, #1084]	; 0x43c
    a0f8:	orr	lr, r7, lr
    a0fc:	str	lr, [r1]
    a100:	ands	r7, r3, #8
    a104:	beq	a13c <rb_des_init+0xbbc>
    a108:	ldr	lr, [sp, #28]
    a10c:	ldrb	lr, [lr, #668]	; 0x29c
    a110:	cmp	lr, #255	; 0xff
    a114:	beq	a13c <rb_des_init+0xbbc>
    a118:	cmp	lr, #27
    a11c:	ble	a310 <rb_des_init+0xd90>
    a120:	ldr	r6, [pc, #1348]	; a66c <rb_des_init+0x10ec>
    a124:	ldr	sl, [r1]
    a128:	add	r6, pc, r6
    a12c:	add	lr, r6, lr, lsl #2
    a130:	ldr	lr, [lr, #1084]	; 0x43c
    a134:	orr	lr, sl, lr
    a138:	str	lr, [r1]
    a13c:	ands	r6, r3, #4
    a140:	beq	a178 <rb_des_init+0xbf8>
    a144:	ldr	lr, [sp, #32]
    a148:	ldrb	lr, [lr, #668]	; 0x29c
    a14c:	cmp	lr, #255	; 0xff
    a150:	beq	a178 <rb_des_init+0xbf8>
    a154:	cmp	lr, #27
    a158:	ble	a330 <rb_des_init+0xdb0>
    a15c:	ldr	sl, [pc, #1292]	; a670 <rb_des_init+0x10f0>
    a160:	add	sl, pc, sl
    a164:	add	lr, sl, lr, lsl #2
    a168:	ldr	sl, [r1]
    a16c:	ldr	lr, [lr, #1084]	; 0x43c
    a170:	orr	lr, sl, lr
    a174:	str	lr, [r1]
    a178:	ands	lr, r3, #2
    a17c:	str	lr, [sp, #4]
    a180:	beq	a1c4 <rb_des_init+0xc44>
    a184:	ldr	lr, [pc, #1256]	; a674 <rb_des_init+0x10f4>
    a188:	ldr	sl, [sp, #12]
    a18c:	add	lr, pc, lr
    a190:	add	lr, lr, sl
    a194:	ldrb	lr, [lr, #668]	; 0x29c
    a198:	cmp	lr, #255	; 0xff
    a19c:	beq	a1c4 <rb_des_init+0xc44>
    a1a0:	cmp	lr, #27
    a1a4:	ble	a294 <rb_des_init+0xd14>
    a1a8:	ldr	sl, [pc, #1224]	; a678 <rb_des_init+0x10f8>
    a1ac:	add	sl, pc, sl
    a1b0:	add	lr, sl, lr, lsl #2
    a1b4:	ldr	sl, [r1]
    a1b8:	ldr	lr, [lr, #1084]	; 0x43c
    a1bc:	orr	lr, sl, lr
    a1c0:	str	lr, [r1]
    a1c4:	ands	lr, r3, #1
    a1c8:	str	lr, [sp, #4]
    a1cc:	beq	a210 <rb_des_init+0xc90>
    a1d0:	ldr	lr, [pc, #1188]	; a67c <rb_des_init+0x10fc>
    a1d4:	ldr	sl, [sp, #16]
    a1d8:	add	lr, pc, lr
    a1dc:	add	lr, lr, sl
    a1e0:	ldrb	lr, [lr, #668]	; 0x29c
    a1e4:	cmp	lr, #255	; 0xff
    a1e8:	beq	a210 <rb_des_init+0xc90>
    a1ec:	cmp	lr, #27
    a1f0:	ble	a2b4 <rb_des_init+0xd34>
    a1f4:	ldr	sl, [pc, #1156]	; a680 <rb_des_init+0x1100>
    a1f8:	add	sl, pc, sl
    a1fc:	add	lr, sl, lr, lsl #2
    a200:	ldr	sl, [r1]
    a204:	ldr	lr, [lr, #1084]	; 0x43c
    a208:	orr	lr, sl, lr
    a20c:	str	lr, [r1]
    a210:	cmp	r0, #0
    a214:	str	fp, [r4]
    a218:	str	fp, [ip]
    a21c:	bne	9eb8 <rb_des_init+0x938>
    a220:	mov	lr, r0
    a224:	b	9ee4 <rb_des_init+0x964>
    a228:	ldr	sl, [pc, #1108]	; a684 <rb_des_init+0x1104>
    a22c:	add	sl, pc, sl
    a230:	add	r4, sl, r4, lsl #2
    a234:	ldr	sl, [lr]
    a238:	ldr	r4, [r4, #1052]	; 0x41c
    a23c:	orr	r4, sl, r4
    a240:	str	r4, [lr]
    a244:	b	9bb0 <rb_des_init+0x630>
    a248:	ldr	sl, [pc, #1080]	; a688 <rb_des_init+0x1108>
    a24c:	add	sl, pc, sl
    a250:	add	r4, sl, r4, lsl #2
    a254:	ldr	r4, [r4, #1180]	; 0x49c
    a258:	str	r4, [r2, #4]
    a25c:	b	9c60 <rb_des_init+0x6e0>
    a260:	ldr	sl, [pc, #1060]	; a68c <rb_des_init+0x110c>
    a264:	add	sl, pc, sl
    a268:	add	r4, sl, r4, lsl #2
    a26c:	ldr	r4, [r4, #1052]	; 0x41c
    a270:	str	r4, [lr]
    a274:	b	9c34 <rb_des_init+0x6b4>
    a278:	ldr	sl, [pc, #1040]	; a690 <rb_des_init+0x1110>
    a27c:	add	sl, pc, sl
    a280:	add	r9, sl, r9, lsl #2
    a284:	ldr	r9, [r9, #1212]	; 0x4bc
    a288:	orr	r0, r0, r9
    a28c:	str	r0, [r4]
    a290:	b	9f18 <rb_des_init+0x998>
    a294:	ldr	sl, [pc, #1016]	; a694 <rb_des_init+0x1114>
    a298:	add	sl, pc, sl
    a29c:	add	lr, sl, lr, lsl #2
    a2a0:	ldr	sl, [r2]
    a2a4:	ldr	lr, [lr, #1196]	; 0x4ac
    a2a8:	orr	lr, sl, lr
    a2ac:	str	lr, [r2]
    a2b0:	b	a1c4 <rb_des_init+0xc44>
    a2b4:	ldr	sl, [pc, #988]	; a698 <rb_des_init+0x1118>
    a2b8:	add	sl, pc, sl
    a2bc:	add	lr, sl, lr, lsl #2
    a2c0:	ldr	sl, [r2]
    a2c4:	ldr	lr, [lr, #1196]	; 0x4ac
    a2c8:	orr	lr, sl, lr
    a2cc:	str	lr, [r2]
    a2d0:	b	a210 <rb_des_init+0xc90>
    a2d4:	ldr	r6, [sp, #36]	; 0x24
    a2d8:	add	lr, r6, lr, lsl #2
    a2dc:	ldr	r6, [r2]
    a2e0:	ldr	lr, [lr, #1196]	; 0x4ac
    a2e4:	orr	lr, r6, lr
    a2e8:	str	lr, [r2]
    a2ec:	b	a0c4 <rb_des_init+0xb44>
    a2f0:	ldr	r6, [pc, #932]	; a69c <rb_des_init+0x111c>
    a2f4:	ldr	r7, [r2]
    a2f8:	add	r6, pc, r6
    a2fc:	add	lr, r6, lr, lsl #2
    a300:	ldr	lr, [lr, #1196]	; 0x4ac
    a304:	orr	lr, r7, lr
    a308:	str	lr, [r2]
    a30c:	b	a100 <rb_des_init+0xb80>
    a310:	ldr	r6, [pc, #904]	; a6a0 <rb_des_init+0x1120>
    a314:	ldr	sl, [r2]
    a318:	add	r6, pc, r6
    a31c:	add	lr, r6, lr, lsl #2
    a320:	ldr	lr, [lr, #1196]	; 0x4ac
    a324:	orr	lr, sl, lr
    a328:	str	lr, [r2]
    a32c:	b	a13c <rb_des_init+0xbbc>
    a330:	ldr	sl, [pc, #876]	; a6a4 <rb_des_init+0x1124>
    a334:	add	sl, pc, sl
    a338:	add	lr, sl, lr, lsl #2
    a33c:	ldr	sl, [r2]
    a340:	ldr	lr, [lr, #1196]	; 0x4ac
    a344:	orr	lr, sl, lr
    a348:	str	lr, [r2]
    a34c:	b	a178 <rb_des_init+0xbf8>
    a350:	ldr	r0, [pc, #848]	; a6a8 <rb_des_init+0x1128>
    a354:	mov	lr, #0
    a358:	add	r0, pc, r0
    a35c:	add	r0, r0, sl, lsl #2
    a360:	ldr	r0, [r0, #1212]	; 0x4bc
    a364:	str	r0, [r4]
    a368:	b	9ee4 <rb_des_init+0x964>
    a36c:	ldr	r9, [pc, #824]	; a6ac <rb_des_init+0x112c>
    a370:	add	r9, pc, r9
    a374:	add	r8, r9, r8, lsl #2
    a378:	ldr	r8, [r8, #1212]	; 0x4bc
    a37c:	orr	r0, r0, r8
    a380:	str	r0, [r4]
    a384:	b	9f4c <rb_des_init+0x9cc>
    a388:	ldr	r8, [pc, #800]	; a6b0 <rb_des_init+0x1130>
    a38c:	add	r8, pc, r8
    a390:	add	r7, r8, r7, lsl #2
    a394:	ldr	r7, [r7, #1212]	; 0x4bc
    a398:	orr	r0, r0, r7
    a39c:	str	r0, [r4]
    a3a0:	b	9f80 <rb_des_init+0xa00>
    a3a4:	ldr	r7, [pc, #776]	; a6b4 <rb_des_init+0x1134>
    a3a8:	add	r7, pc, r7
    a3ac:	add	r6, r7, r6, lsl #2
    a3b0:	ldr	r6, [r6, #1212]	; 0x4bc
    a3b4:	orr	r0, r0, r6
    a3b8:	str	r0, [r4]
    a3bc:	b	9fb4 <rb_des_init+0xa34>
    a3c0:	ldr	r7, [pc, #752]	; a6b8 <rb_des_init+0x1138>
    a3c4:	add	r7, pc, r7
    a3c8:	add	r6, r7, r6, lsl #2
    a3cc:	ldr	r6, [r6, #1212]	; 0x4bc
    a3d0:	orr	r0, r0, r6
    a3d4:	str	r0, [r4]
    a3d8:	b	9fec <rb_des_init+0xa6c>
    a3dc:	ldr	lr, [pc, #728]	; a6bc <rb_des_init+0x113c>
    a3e0:	add	r3, r3, #1
    a3e4:	cmp	r3, #128	; 0x80
    a3e8:	add	lr, pc, lr
    a3ec:	add	lr, lr, r6, lsl #2
    a3f0:	ldr	lr, [lr, #1212]	; 0x4bc
    a3f4:	orr	r0, lr, r0
    a3f8:	str	r0, [r4]
    a3fc:	bne	a030 <rb_des_init+0xab0>
    a400:	ldr	r3, [sp, #40]	; 0x28
    a404:	ldr	r2, [sp, #76]	; 0x4c
    a408:	add	r3, r3, #1
    a40c:	cmp	r3, #8
    a410:	str	r3, [sp, #40]	; 0x28
    a414:	add	r2, r2, #1024	; 0x400
    a418:	ldr	r3, [sp, #72]	; 0x48
    a41c:	str	r2, [sp, #76]	; 0x4c
    a420:	add	r3, r3, #1024	; 0x400
    a424:	str	r3, [sp, #72]	; 0x48
    a428:	ldr	r3, [sp, #68]	; 0x44
    a42c:	add	r3, r3, #1024	; 0x400
    a430:	str	r3, [sp, #68]	; 0x44
    a434:	ldr	r3, [sp, #64]	; 0x40
    a438:	add	r3, r3, #1024	; 0x400
    a43c:	str	r3, [sp, #64]	; 0x40
    a440:	ldr	r3, [sp, #60]	; 0x3c
    a444:	add	r3, r3, #512	; 0x200
    a448:	str	r3, [sp, #60]	; 0x3c
    a44c:	ldr	r3, [sp, #56]	; 0x38
    a450:	add	r3, r3, #512	; 0x200
    a454:	str	r3, [sp, #56]	; 0x38
    a458:	ldr	r3, [sp, #52]	; 0x34
    a45c:	add	r3, r3, #512	; 0x200
    a460:	str	r3, [sp, #52]	; 0x34
    a464:	ldr	r3, [sp, #48]	; 0x30
    a468:	add	r3, r3, #512	; 0x200
    a46c:	str	r3, [sp, #48]	; 0x30
    a470:	ldr	r3, [sp, #8]
    a474:	add	r3, r3, #8
    a478:	str	r3, [sp, #8]
    a47c:	ldr	r3, [sp, #44]	; 0x2c
    a480:	add	r3, r3, #7
    a484:	str	r3, [sp, #44]	; 0x2c
    a488:	bne	9874 <rb_des_init+0x2f4>
    a48c:	ldr	r3, [pc, #556]	; a6c0 <rb_des_init+0x1140>
    a490:	ldr	r0, [pc, #556]	; a6c4 <rb_des_init+0x1144>
    a494:	add	r3, pc, r3
    a498:	add	r3, r3, #1984	; 0x7c0
    a49c:	add	lr, r3, #3
    a4a0:	add	r0, pc, r0
    a4a4:	add	r3, r3, #35	; 0x23
    a4a8:	mov	r1, lr
    a4ac:	add	r1, r1, #1
    a4b0:	mov	r2, r1
    a4b4:	cmp	r3, r1
    a4b8:	ldrb	ip, [r2], #-1
    a4bc:	add	ip, r0, ip
    a4c0:	sub	r2, r2, lr
    a4c4:	strb	r2, [ip, #787]	; 0x313
    a4c8:	bne	a4ac <rb_des_init+0xf2c>
    a4cc:	ldr	fp, [pc, #500]	; a6c8 <rb_des_init+0x1148>
    a4d0:	add	r3, r0, #820	; 0x334
    a4d4:	add	r1, r0, #788	; 0x314
    a4d8:	mov	ip, #0
    a4dc:	ldr	r6, [pc, #488]	; a6cc <rb_des_init+0x114c>
    a4e0:	str	r3, [sp, #4]
    a4e4:	ldr	r5, [pc, #484]	; a6d0 <rb_des_init+0x1150>
    a4e8:	add	fp, pc, fp
    a4ec:	ldr	r4, [pc, #480]	; a6d4 <rb_des_init+0x1154>
    a4f0:	add	r6, pc, r6
    a4f4:	ldr	lr, [pc, #476]	; a6d8 <rb_des_init+0x1158>
    a4f8:	add	r5, pc, r5
    a4fc:	add	r4, pc, r4
    a500:	add	lr, pc, lr
    a504:	ldr	sl, [pc, #464]	; a6dc <rb_des_init+0x115c>
    a508:	mov	r2, fp
    a50c:	mov	r3, #0
    a510:	str	ip, [fp]
    a514:	ldr	r9, [pc, #452]	; a6e0 <rb_des_init+0x1160>
    a518:	str	fp, [sp, #8]
    a51c:	ldr	r8, [pc, #448]	; a6e4 <rb_des_init+0x1164>
    a520:	add	sl, pc, sl
    a524:	ldr	r7, [pc, #444]	; a6e8 <rb_des_init+0x1168>
    a528:	add	r9, pc, r9
    a52c:	add	r8, pc, r8
    a530:	add	r7, pc, r7
    a534:	b	a714 <rb_des_init+0x1194>
    a538:	.word	0x00023f48
    a53c:	.word	0x00010210
    a540:	.word	0x00023e5c
    a544:	.word	0x00025328
    a548:	.word	0x000100f4
    a54c:	.word	0x00023de0
    a550:	.word	0x0001008c
    a554:	.word	0x0001003c
    a558:	.word	0x000331b8
    a55c:	.word	0x000311ac
    a560:	.word	0x0002f1a0
    a564:	.word	0x0002d194
    a568:	.word	0x0002c188
    a56c:	.word	0x0002b17c
    a570:	.word	0x0002a170
    a574:	.word	0x00029164
    a578:	.word	0x00023c84
    a57c:	.word	0x00023c78
    a580:	.word	0x00023c6c
    a584:	.word	0x00023c60
    a588:	.word	0x0000fecc
    a58c:	.word	0x0000fea0
    a590:	.word	0x0000fe6c
    a594:	.word	0x00023b40
    a598:	.word	0x0000fe34
    a59c:	.word	0x00023b04
    a5a0:	.word	0x0000fdf8
    a5a4:	.word	0x00023ad0
    a5a8:	.word	0x0000fdc4
    a5ac:	.word	0x00023a94
    a5b0:	.word	0x0000fd88
    a5b4:	.word	0x00023a60
    a5b8:	.word	0x0000fd54
    a5bc:	.word	0x00023a24
    a5c0:	.word	0x0000fd18
    a5c4:	.word	0x000239f0
    a5c8:	.word	0x0000fce4
    a5cc:	.word	0x000239b4
    a5d0:	.word	0x0000fca8
    a5d4:	.word	0x00023980
    a5d8:	.word	0x0000fc74
    a5dc:	.word	0x0000fc40
    a5e0:	.word	0x00023918
    a5e4:	.word	0x0000fc0c
    a5e8:	.word	0x000238c0
    a5ec:	.word	0x0000fbb4
    a5f0:	.word	0x00023894
    a5f4:	.word	0x0000fb88
    a5f8:	.word	0x0000fb54
    a5fc:	.word	0x0000fb28
    a600:	.word	0x0000fb08
    a604:	.word	0x0000fae8
    a608:	.word	0x0000fac8
    a60c:	.word	0x0000faa8
    a610:	.word	0x0000fa88
    a614:	.word	0x0000fa68
    a618:	.word	0x0000fa48
    a61c:	.word	0x0000fa28
    a620:	.word	0x0000fa08
    a624:	.word	0x0000f9e8
    a628:	.word	0x0000f9c0
    a62c:	.word	0x00023684
    a630:	.word	0x00023670
    a634:	.word	0x00023660
    a638:	.word	0x00023640
    a63c:	.word	0x0000f938
    a640:	.word	0x0000f904
    a644:	.word	0x0000f8d4
    a648:	.word	0x0000f8a0
    a64c:	.word	0x0000f86c
    a650:	.word	0x0000f838
    a654:	.word	0x0000f800
    a658:	.word	0x0000f7c8
    a65c:	.word	0x00023484
    a660:	.word	0x0000f770
    a664:	.word	0x0000f728
    a668:	.word	0x0000f6ec
    a66c:	.word	0x0000f6b0
    a670:	.word	0x0000f678
    a674:	.word	0x00023340
    a678:	.word	0x0000f62c
    a67c:	.word	0x000232f4
    a680:	.word	0x0000f5e0
    a684:	.word	0x0000f5ac
    a688:	.word	0x0000f58c
    a68c:	.word	0x0000f574
    a690:	.word	0x0000f55c
    a694:	.word	0x0000f540
    a698:	.word	0x0000f520
    a69c:	.word	0x0000f4e0
    a6a0:	.word	0x0000f4c0
    a6a4:	.word	0x0000f4a4
    a6a8:	.word	0x0000f480
    a6ac:	.word	0x0000f468
    a6b0:	.word	0x0000f44c
    a6b4:	.word	0x0000f430
    a6b8:	.word	0x0000f414
    a6bc:	.word	0x0000f3f0
    a6c0:	.word	0x0000f344
    a6c4:	.word	0x0002302c
    a6c8:	.word	0x000234b8
    a6cc:	.word	0x0000f2e8
    a6d0:	.word	0x0000f2e0
    a6d4:	.word	0x0000f2dc
    a6d8:	.word	0x0000f2d8
    a6dc:	.word	0x0000f2b8
    a6e0:	.word	0x0000f2b0
    a6e4:	.word	0x0000f2ac
    a6e8:	.word	0x0000f2a8
    a6ec:	.word	0x00022cb0
    a6f0:	.word	0x0000ef94
    a6f4:	tst	r3, #128	; 0x80
    a6f8:	str	ip, [r2, #4]
    a6fc:	beq	a710 <rb_des_init+0x1190>
    a700:	ldrb	r0, [r1]
    a704:	add	r0, r7, r0, lsl #2
    a708:	ldr	r0, [r0, #1180]	; 0x49c
    a70c:	str	r0, [r2, #4]
    a710:	add	r2, r2, #4
    a714:	tst	r3, #64	; 0x40
    a718:	beq	a734 <rb_des_init+0x11b4>
    a71c:	ldrb	r0, [r1, #1]
    a720:	ldr	fp, [r2]
    a724:	add	r0, r6, r0, lsl #2
    a728:	ldr	r0, [r0, #1180]	; 0x49c
    a72c:	orr	r0, fp, r0
    a730:	str	r0, [r2]
    a734:	tst	r3, #32
    a738:	beq	a754 <rb_des_init+0x11d4>
    a73c:	ldrb	r0, [r1, #2]
    a740:	ldr	fp, [r2]
    a744:	add	r0, r5, r0, lsl #2
    a748:	ldr	r0, [r0, #1180]	; 0x49c
    a74c:	orr	r0, fp, r0
    a750:	str	r0, [r2]
    a754:	tst	r3, #16
    a758:	beq	a774 <rb_des_init+0x11f4>
    a75c:	ldrb	r0, [r1, #3]
    a760:	ldr	fp, [r2]
    a764:	add	r0, r4, r0, lsl #2
    a768:	ldr	r0, [r0, #1180]	; 0x49c
    a76c:	orr	r0, fp, r0
    a770:	str	r0, [r2]
    a774:	tst	r3, #8
    a778:	beq	a794 <rb_des_init+0x1214>
    a77c:	ldrb	r0, [r1, #4]
    a780:	ldr	fp, [r2]
    a784:	add	r0, lr, r0, lsl #2
    a788:	ldr	r0, [r0, #1180]	; 0x49c
    a78c:	orr	r0, fp, r0
    a790:	str	r0, [r2]
    a794:	tst	r3, #4
    a798:	beq	a7b4 <rb_des_init+0x1234>
    a79c:	ldrb	r0, [r1, #5]
    a7a0:	ldr	fp, [r2]
    a7a4:	add	r0, sl, r0, lsl #2
    a7a8:	ldr	r0, [r0, #1180]	; 0x49c
    a7ac:	orr	r0, fp, r0
    a7b0:	str	r0, [r2]
    a7b4:	tst	r3, #2
    a7b8:	beq	a7d4 <rb_des_init+0x1254>
    a7bc:	ldrb	r0, [r1, #6]
    a7c0:	ldr	fp, [r2]
    a7c4:	add	r0, r9, r0, lsl #2
    a7c8:	ldr	r0, [r0, #1180]	; 0x49c
    a7cc:	orr	r0, fp, r0
    a7d0:	str	r0, [r2]
    a7d4:	tst	r3, #1
    a7d8:	beq	a7f4 <rb_des_init+0x1274>
    a7dc:	ldrb	r0, [r1, #7]
    a7e0:	ldr	fp, [r2]
    a7e4:	add	r0, r8, r0, lsl #2
    a7e8:	ldr	r0, [r0, #1180]	; 0x49c
    a7ec:	orr	r0, fp, r0
    a7f0:	str	r0, [r2]
    a7f4:	add	r3, r3, #1
    a7f8:	cmp	r3, #256	; 0x100
    a7fc:	bne	a6f4 <rb_des_init+0x1174>
    a800:	ldmib	sp, {r3, fp}
    a804:	add	r1, r1, #8
    a808:	cmp	r3, r1
    a80c:	add	fp, fp, #1024	; 0x400
    a810:	bne	a504 <rb_des_init+0xf84>
    a814:	ldr	r3, [pc, #-304]	; a6ec <rb_des_init+0x116c>
    a818:	mov	r2, #1
    a81c:	add	r3, pc, r3
    a820:	str	r2, [r3]
    a824:	add	sp, sp, #100	; 0x64
    a828:	ldrd	r4, [sp]
    a82c:	ldrd	r6, [sp, #8]
    a830:	ldrd	r8, [sp, #16]
    a834:	ldrd	sl, [sp, #24]
    a838:	add	sp, sp, #32
    a83c:	pop	{pc}		; (ldr pc, [sp], #4)
    a840:	ldr	r6, [pc, #-344]	; a6f0 <rb_des_init+0x1170>
    a844:	add	r6, pc, r6
    a848:	add	lr, r6, lr, lsl #2
    a84c:	ldr	lr, [lr, #1196]	; 0x4ac
    a850:	str	lr, [r2, #4]
    a854:	b	a078 <rb_des_init+0xaf8>
    a858:	mov	r0, #0
    a85c:	mov	lr, r0
    a860:	b	9ee4 <rb_des_init+0x964>

0000a864 <MD5Update.constprop.2>:
    a864:	strd	r4, [sp, #-16]!
    a868:	mov	r4, r0
    a86c:	mov	r5, r1
    a870:	ldr	r0, [r0, #16]
    a874:	str	r6, [sp, #8]
    a878:	str	lr, [sp, #12]
    a87c:	add	r3, r0, #8
    a880:	ubfx	r0, r0, #3, #6
    a884:	cmp	r3, #7
    a888:	str	r3, [r4, #16]
    a88c:	bhi	a89c <MD5Update.constprop.2+0x38>
    a890:	ldr	r3, [r4, #20]
    a894:	add	r3, r3, #1
    a898:	str	r3, [r4, #20]
    a89c:	cmp	r0, #63	; 0x3f
    a8a0:	beq	a8c8 <MD5Update.constprop.2+0x64>
    a8a4:	add	r0, r0, #24
    a8a8:	mov	r2, #1
    a8ac:	mov	r1, r5
    a8b0:	add	r0, r4, r0
    a8b4:	ldrd	r4, [sp]
    a8b8:	ldr	r6, [sp, #8]
    a8bc:	ldr	lr, [sp, #12]
    a8c0:	add	sp, sp, #16
    a8c4:	b	47e8 <memcpy@plt>
    a8c8:	ldrb	r3, [r5], #1
    a8cc:	mov	r0, r4
    a8d0:	add	r1, r4, #24
    a8d4:	strb	r3, [r4, #87]	; 0x57
    a8d8:	bl	5d38 <MD5Transform>
    a8dc:	mov	r2, #0
    a8e0:	mov	r0, #24
    a8e4:	b	a8ac <MD5Update.constprop.2+0x48>

0000a8e8 <MD5Update.constprop.3>:
    a8e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    a8ec:	ldr	r5, [r0, #16]
    a8f0:	strd	r6, [sp, #8]
    a8f4:	mov	r6, r0
    a8f8:	mov	r7, r1
    a8fc:	str	r8, [sp, #16]
    a900:	str	lr, [sp, #20]
    a904:	add	r3, r5, #128	; 0x80
    a908:	ubfx	r5, r5, #3, #6
    a90c:	cmp	r3, #127	; 0x7f
    a910:	str	r3, [r0, #16]
    a914:	bhi	a924 <MD5Update.constprop.3+0x3c>
    a918:	ldr	r3, [r0, #20]
    a91c:	add	r3, r3, #1
    a920:	str	r3, [r0, #20]
    a924:	rsb	r8, r5, #64	; 0x40
    a928:	add	r0, r5, #24
    a92c:	cmp	r8, #16
    a930:	add	r0, r6, r0
    a934:	movhi	r2, #16
    a938:	bhi	a964 <MD5Update.constprop.3+0x7c>
    a93c:	mov	r2, r8
    a940:	mov	r1, r7
    a944:	add	r4, r6, #24
    a948:	add	r7, r7, r8
    a94c:	bl	47e8 <memcpy@plt>
    a950:	mov	r0, r6
    a954:	mov	r1, r4
    a958:	bl	5d38 <MD5Transform>
    a95c:	mov	r0, r4
    a960:	sub	r2, r5, #48	; 0x30
    a964:	mov	r1, r7
    a968:	ldrd	r4, [sp]
    a96c:	ldrd	r6, [sp, #8]
    a970:	ldr	r8, [sp, #16]
    a974:	ldr	lr, [sp, #20]
    a978:	add	sp, sp, #24
    a97c:	b	47e8 <memcpy@plt>

0000a980 <rb_crypt>:
    a980:	strd	r4, [sp, #-36]!	; 0xffffffdc
    a984:	mov	r4, r1
    a988:	strd	r6, [sp, #8]
    a98c:	mov	r6, r0
    a990:	strd	r8, [sp, #16]
    a994:	strd	sl, [sp, #24]
    a998:	str	lr, [sp, #32]
    a99c:	sub	sp, sp, #260	; 0x104
    a9a0:	ldrb	r3, [r1]
    a9a4:	cmp	r3, #36	; 0x24
    a9a8:	bne	aa00 <rb_crypt+0x80>
    a9ac:	ldrb	r3, [r1, #2]
    a9b0:	cmp	r3, #36	; 0x24
    a9b4:	beq	a9c4 <rb_crypt+0x44>
    a9b8:	ldrb	r3, [r1, #3]
    a9bc:	cmp	r3, #36	; 0x24
    a9c0:	bne	aa00 <rb_crypt+0x80>
    a9c4:	ldrb	r3, [r4, #1]
    a9c8:	cmp	r3, #53	; 0x35
    a9cc:	beq	b988 <rb_crypt+0x1008>
    a9d0:	cmp	r3, #54	; 0x36
    a9d4:	beq	b934 <rb_crypt+0xfb4>
    a9d8:	cmp	r3, #49	; 0x31
    a9dc:	beq	b238 <rb_crypt+0x8b8>
    a9e0:	mov	r0, #0
    a9e4:	add	sp, sp, #260	; 0x104
    a9e8:	ldrd	r4, [sp]
    a9ec:	ldrd	r6, [sp, #8]
    a9f0:	ldrd	r8, [sp, #16]
    a9f4:	ldrd	sl, [sp, #24]
    a9f8:	add	sp, sp, #32
    a9fc:	pop	{pc}		; (ldr pc, [sp], #4)
    aa00:	add	r5, sp, #168	; 0xa8
    aa04:	bl	9580 <rb_des_init>
    aa08:	mov	r2, r5
    aa0c:	ldrb	r3, [r6]
    aa10:	lsl	r3, r3, #1
    aa14:	uxtb	r3, r3
    aa18:	cmp	r3, #0
    aa1c:	strb	r3, [r2], #1
    aa20:	sub	r3, r2, r5
    aa24:	addne	r6, r6, #1
    aa28:	cmp	r3, #8
    aa2c:	bne	aa0c <rb_crypt+0x8c>
    aa30:	bl	9580 <rb_des_init>
    aa34:	ldr	ip, [sp, #168]	; 0xa8
    aa38:	ldr	lr, [sp, #172]	; 0xac
    aa3c:	rev	ip, ip
    aa40:	rev	lr, lr
    aa44:	orrs	r3, ip, lr
    aa48:	bne	b1e4 <rb_crypt+0x864>
    aa4c:	ldr	r1, [pc, #3084]	; b660 <rb_crypt+0xce0>
    aa50:	lsr	r5, lr, #25
    aa54:	lsr	r0, ip, #25
    aa58:	str	r4, [sp, #32]
    aa5c:	mov	r4, #0
    aa60:	ldr	r2, [pc, #3068]	; b664 <rb_crypt+0xce4>
    aa64:	add	r5, r5, #512	; 0x200
    aa68:	ubfx	sl, ip, #17, #7
    aa6c:	ubfx	r6, ip, #1, #7
    aa70:	add	sl, sl, #128	; 0x80
    aa74:	ubfx	r8, ip, #9, #7
    aa78:	add	r1, pc, r1
    aa7c:	add	r6, r6, #384	; 0x180
    aa80:	ubfx	r7, lr, #17, #7
    aa84:	ldr	r3, [r1, r5, lsl #2]
    aa88:	add	r8, r8, #256	; 0x100
    aa8c:	add	r2, pc, r2
    aa90:	str	r6, [sp, #4]
    aa94:	add	r7, r7, #640	; 0x280
    aa98:	ldr	r9, [r1, r0, lsl #2]
    aa9c:	ubfx	r6, lr, #9, #7
    aaa0:	ldr	fp, [r2, r5, lsl #2]
    aaa4:	ubfx	r5, lr, #1, #7
    aaa8:	add	r6, r6, #768	; 0x300
    aaac:	ldr	r0, [r2, r0, lsl #2]
    aab0:	add	r5, r5, #896	; 0x380
    aab4:	orr	r9, r9, r3
    aab8:	ldr	r3, [r1, sl, lsl #2]
    aabc:	ldr	sl, [r2, sl, lsl #2]
    aac0:	orr	r0, r0, fp
    aac4:	ldr	fp, [r1, r8, lsl #2]
    aac8:	orr	r3, r9, r3
    aacc:	ldr	r8, [r2, r8, lsl #2]
    aad0:	orr	r0, r0, sl
    aad4:	ldr	sl, [sp, #4]
    aad8:	orr	r3, r3, fp
    aadc:	orr	r0, r0, r8
    aae0:	ldr	r8, [pc, #2944]	; b668 <rb_crypt+0xce8>
    aae4:	ldr	r9, [r1, sl, lsl #2]
    aae8:	ldr	sl, [r2, sl, lsl #2]
    aaec:	add	r8, pc, r8
    aaf0:	add	r8, r8, #2016	; 0x7e0
    aaf4:	orr	r3, r3, r9
    aaf8:	ldr	r9, [r1, r7, lsl #2]
    aafc:	orr	r0, r0, sl
    ab00:	ldr	sl, [r2, r7, lsl #2]
    ab04:	ldr	r7, [pc, #2912]	; b66c <rb_crypt+0xcec>
    ab08:	orr	r3, r3, r9
    ab0c:	ldr	r9, [r1, r6, lsl #2]
    ab10:	orr	r0, r0, sl
    ab14:	add	sl, r8, #3
    ab18:	ldr	r1, [r1, r5, lsl #2]
    ab1c:	add	r7, pc, r7
    ab20:	str	sl, [sp, #16]
    ab24:	ldr	sl, [r2, r6, lsl #2]
    ab28:	add	fp, r7, #1168	; 0x490
    ab2c:	add	r6, r8, #19
    ab30:	str	lr, [r7, #4]
    ab34:	orr	r3, r3, r9
    ab38:	add	fp, fp, #4
    ab3c:	str	ip, [r7, #8]
    ab40:	add	ip, r7, #1232	; 0x4d0
    ab44:	add	ip, ip, #4
    ab48:	ldr	lr, [pc, #2848]	; b670 <rb_crypt+0xcf0>
    ab4c:	orr	r1, r3, r1
    ab50:	str	ip, [sp, #8]
    ab54:	add	ip, r7, #880	; 0x370
    ab58:	orr	r0, r0, sl
    ab5c:	ldr	r2, [r2, r5, lsl #2]
    ab60:	str	ip, [sp, #12]
    ab64:	add	ip, r7, #816	; 0x330
    ab68:	add	lr, pc, lr
    ab6c:	str	ip, [sp, #4]
    ab70:	ldr	ip, [pc, #2812]	; b674 <rb_crypt+0xcf4>
    ab74:	orr	r2, r0, r2
    ab78:	str	r1, [sp, #20]
    ab7c:	str	r2, [sp, #24]
    ab80:	str	r6, [sp, #28]
    ab84:	add	ip, pc, ip
    ab88:	ldr	r2, [sp, #16]
    ab8c:	ldrb	r3, [r2, #1]!
    ab90:	add	r4, r4, r3
    ab94:	ldr	r3, [sp, #28]
    ab98:	str	r2, [sp, #16]
    ab9c:	rsb	r1, r4, #28
    aba0:	cmp	r2, r3
    aba4:	ldr	r3, [sp, #20]
    aba8:	ldr	r2, [sp, #24]
    abac:	lsr	r0, r3, r1
    abb0:	lsr	r1, r2, r1
    abb4:	orr	r0, r0, r3, lsl r4
    abb8:	orr	r1, r1, r2, lsl r4
    abbc:	and	r2, r0, #127	; 0x7f
    abc0:	ubfx	r5, r0, #21, #7
    abc4:	and	r3, r1, #127	; 0x7f
    abc8:	add	r2, r2, #384	; 0x180
    abcc:	ubfx	r7, r0, #14, #7
    abd0:	add	r3, r3, #896	; 0x380
    abd4:	ldr	r8, [lr, r2, lsl #2]
    abd8:	ubfx	r0, r0, #7, #7
    abdc:	add	r7, r7, #128	; 0x80
    abe0:	ubfx	r6, r1, #21, #7
    abe4:	ldr	sl, [ip, r2, lsl #2]
    abe8:	add	r0, r0, #256	; 0x100
    abec:	add	r6, r6, #512	; 0x200
    abf0:	ldr	r2, [lr, r3, lsl #2]
    abf4:	ldr	r3, [ip, r3, lsl #2]
    abf8:	ldr	r9, [lr, r5, lsl #2]
    abfc:	orr	r2, r8, r2
    ac00:	ldr	r8, [ip, r5, lsl #2]
    ac04:	ubfx	r5, r1, #14, #7
    ac08:	orr	r3, sl, r3
    ac0c:	ubfx	r1, r1, #7, #7
    ac10:	ldr	sl, [lr, r7, lsl #2]
    ac14:	add	r5, r5, #640	; 0x280
    ac18:	orr	r2, r2, r9
    ac1c:	add	r1, r1, #768	; 0x300
    ac20:	ldr	r7, [ip, r7, lsl #2]
    ac24:	orr	r3, r3, r8
    ac28:	ldr	r9, [lr, r0, lsl #2]
    ac2c:	orr	r2, r2, sl
    ac30:	ldr	r0, [ip, r0, lsl #2]
    ac34:	orr	r3, r3, r7
    ac38:	ldr	r8, [lr, r6, lsl #2]
    ac3c:	orr	r2, r2, r9
    ac40:	ldr	r6, [ip, r6, lsl #2]
    ac44:	orr	r3, r3, r0
    ac48:	ldr	r7, [lr, r5, lsl #2]
    ac4c:	orr	r2, r2, r8
    ac50:	ldr	r5, [ip, r5, lsl #2]
    ac54:	orr	r3, r3, r6
    ac58:	ldr	sl, [lr, r1, lsl #2]
    ac5c:	orr	r2, r2, r7
    ac60:	ldr	r1, [ip, r1, lsl #2]
    ac64:	orr	r3, r3, r5
    ac68:	orr	r2, r2, sl
    ac6c:	orr	r3, r3, r1
    ac70:	ldr	r1, [sp, #12]
    ac74:	str	r2, [fp, #-4]!
    ac78:	str	r2, [r1, #4]!
    ac7c:	ldr	r2, [sp, #4]
    ac80:	str	r1, [sp, #12]
    ac84:	str	r3, [r2, #4]!
    ac88:	str	r2, [sp, #4]
    ac8c:	ldr	r2, [sp, #8]
    ac90:	str	r3, [r2, #-4]!
    ac94:	str	r2, [sp, #8]
    ac98:	bne	ab88 <rb_crypt+0x208>
    ac9c:	ldr	r4, [sp, #32]
    aca0:	ldrb	r3, [r4, #1]
    aca4:	cmp	r3, #122	; 0x7a
    aca8:	bhi	acdc <rb_crypt+0x35c>
    acac:	cmp	r3, #96	; 0x60
    acb0:	subhi	r1, r3, #59	; 0x3b
    acb4:	bhi	b208 <rb_crypt+0x888>
    acb8:	cmp	r3, #90	; 0x5a
    acbc:	bhi	acdc <rb_crypt+0x35c>
    acc0:	cmp	r3, #64	; 0x40
    acc4:	subhi	r1, r3, #53	; 0x35
    acc8:	bhi	b208 <rb_crypt+0x888>
    accc:	sub	r1, r3, #46	; 0x2e
    acd0:	uxtb	r2, r1
    acd4:	cmp	r2, #11
    acd8:	bls	b208 <rb_crypt+0x888>
    acdc:	ldrb	r2, [r4]
    ace0:	cmp	r2, #122	; 0x7a
    ace4:	bhi	b22c <rb_crypt+0x8ac>
    ace8:	mov	r1, #0
    acec:	cmp	r2, #96	; 0x60
    acf0:	subhi	r0, r2, #59	; 0x3b
    acf4:	orrhi	r1, r1, r0
    acf8:	movhi	lr, r1
    acfc:	bhi	ad30 <rb_crypt+0x3b0>
    ad00:	cmp	r2, #90	; 0x5a
    ad04:	bhi	ad2c <rb_crypt+0x3ac>
    ad08:	cmp	r2, #64	; 0x40
    ad0c:	subhi	r0, r2, #53	; 0x35
    ad10:	orrhi	r1, r1, r0
    ad14:	movhi	lr, r1
    ad18:	bhi	ad30 <rb_crypt+0x3b0>
    ad1c:	sub	r0, r2, #46	; 0x2e
    ad20:	uxtb	ip, r0
    ad24:	cmp	ip, #11
    ad28:	orrls	r1, r1, r0
    ad2c:	mov	lr, r1
    ad30:	ldr	r0, [pc, #2368]	; b678 <rb_crypt+0xcf8>
    ad34:	cmp	r3, #0
    ad38:	moveq	r3, r2
    ad3c:	add	r0, pc, r0
    ad40:	strb	r2, [r0, #1068]	; 0x42c
    ad44:	ldr	ip, [pc, #2352]	; b67c <rb_crypt+0xcfc>
    ad48:	add	ip, pc, ip
    ad4c:	ldr	r2, [ip, #16]
    ad50:	strb	r3, [ip, #1069]	; 0x42d
    ad54:	cmp	r2, r1
    ad58:	beq	ba94 <rb_crypt+0x1114>
    ad5c:	mov	r3, #0
    ad60:	mov	r1, #24
    ad64:	mov	r0, r3
    ad68:	mov	r6, r3
    ad6c:	mov	r2, #8388608	; 0x800000
    ad70:	str	r3, [ip, #12]
    ad74:	mov	r3, #1
    ad78:	str	lr, [ip, #16]
    ad7c:	tst	lr, r3
    ad80:	lsl	r3, r3, #1
    ad84:	orrne	r6, r6, r2
    ad88:	movne	r0, #1
    ad8c:	lsr	r2, r2, #1
    ad90:	subs	r1, r1, #1
    ad94:	bne	ad7c <rb_crypt+0x3fc>
    ad98:	cmp	r0, #0
    ad9c:	moveq	r6, r0
    ada0:	beq	adb0 <rb_crypt+0x430>
    ada4:	ldr	r3, [pc, #2260]	; b680 <rb_crypt+0xd00>
    ada8:	add	r3, pc, r3
    adac:	str	r6, [r3, #12]
    adb0:	ldr	lr, [pc, #2252]	; b684 <rb_crypt+0xd04>
    adb4:	mov	r3, #25
    adb8:	ldr	r7, [pc, #2248]	; b688 <rb_crypt+0xd08>
    adbc:	str	r3, [sp, #4]
    adc0:	ldr	ip, [pc, #2244]	; b68c <rb_crypt+0xd0c>
    adc4:	add	lr, pc, lr
    adc8:	ldr	r4, [lr]
    adcc:	add	r0, lr, #4096	; 0x1000
    add0:	add	r7, pc, r7
    add4:	ldr	r3, [lr, #1024]	; 0x400
    add8:	add	r1, r7, #948	; 0x3b4
    addc:	add	ip, pc, ip
    ade0:	str	r1, [sp, #48]	; 0x30
    ade4:	add	r2, ip, #4096	; 0x1000
    ade8:	ldr	r8, [ip]
    adec:	str	r7, [sp, #52]	; 0x34
    adf0:	ldr	r1, [ip, #1024]	; 0x400
    adf4:	orr	r3, r4, r3
    adf8:	ldr	r5, [lr, #2048]	; 0x800
    adfc:	ldr	r4, [lr, #3072]	; 0xc00
    ae00:	orr	r1, r8, r1
    ae04:	ldr	lr, [ip, #2048]	; 0x800
    ae08:	orr	r3, r3, r5
    ae0c:	ldr	r5, [r0]
    ae10:	orr	r3, r3, r4
    ae14:	ldr	r4, [ip, #3072]	; 0xc00
    ae18:	orr	r1, r1, lr
    ae1c:	ldr	lr, [r0, #1024]	; 0x400
    ae20:	orr	r3, r3, r5
    ae24:	ldr	ip, [r2]
    ae28:	orr	r1, r1, r4
    ae2c:	ldr	r4, [r0, #2048]	; 0x800
    ae30:	orr	r3, r3, lr
    ae34:	ldr	lr, [r2, #1024]	; 0x400
    ae38:	orr	r1, r1, ip
    ae3c:	ldr	ip, [r0, #3072]	; 0xc00
    ae40:	orr	r3, r3, r4
    ae44:	ldr	r0, [r2, #2048]	; 0x800
    ae48:	orr	r1, r1, lr
    ae4c:	ldr	r2, [r2, #3072]	; 0xc00
    ae50:	orr	r3, r3, ip
    ae54:	ldr	r4, [pc, #2100]	; b690 <rb_crypt+0xd10>
    ae58:	lsl	ip, r3, #23
    ae5c:	orr	r1, r1, r0
    ae60:	lsr	r0, r3, #9
    ae64:	ldr	lr, [pc, #2088]	; b694 <rb_crypt+0xd14>
    ae68:	lsl	r9, r3, #1
    ae6c:	orr	r1, r1, r2
    ae70:	lsr	r2, r3, #15
    ae74:	str	r0, [sp, #20]
    ae78:	lsr	r0, r3, #11
    ae7c:	add	r4, pc, r4
    ae80:	str	r2, [sp, #32]
    ae84:	lsl	r2, r3, #7
    ae88:	add	lr, pc, lr
    ae8c:	str	ip, [sp, #36]	; 0x24
    ae90:	str	r2, [sp, #16]
    ae94:	lsl	r2, r3, #5
    ae98:	str	r0, [sp, #24]
    ae9c:	lsr	r0, r3, #13
    aea0:	str	r2, [sp, #12]
    aea4:	lsr	r2, r3, #31
    aea8:	str	r0, [sp, #28]
    aeac:	str	r2, [sp, #40]	; 0x28
    aeb0:	lsl	r2, r3, #3
    aeb4:	str	r2, [sp, #8]
    aeb8:	add	r8, r7, #820	; 0x334
    aebc:	add	r5, r7, #884	; 0x374
    aec0:	b	af14 <rb_crypt+0x594>
    aec4:	lsl	r2, ip, #23
    aec8:	mov	r3, ip
    aecc:	lsl	r9, ip, #1
    aed0:	str	r2, [sp, #36]	; 0x24
    aed4:	lsr	r2, ip, #9
    aed8:	str	r2, [sp, #20]
    aedc:	lsr	r2, ip, #11
    aee0:	str	r2, [sp, #24]
    aee4:	lsr	r2, ip, #13
    aee8:	str	r2, [sp, #28]
    aeec:	lsr	r2, ip, #15
    aef0:	str	r2, [sp, #32]
    aef4:	lsl	r2, ip, #7
    aef8:	str	r2, [sp, #16]
    aefc:	lsl	r2, ip, #5
    af00:	str	r2, [sp, #12]
    af04:	lsr	r2, ip, #31
    af08:	str	r2, [sp, #40]	; 0x28
    af0c:	lsl	r2, ip, #3
    af10:	str	r2, [sp, #8]
    af14:	ldr	r2, [sp, #36]	; 0x24
    af18:	ldr	ip, [r5], #4
    af1c:	and	sl, r2, #8388608	; 0x800000
    af20:	ldr	r2, [sp, #20]
    af24:	and	r0, r2, #8126464	; 0x7c0000
    af28:	ldr	r2, [sp, #16]
    af2c:	orr	sl, sl, r0
    af30:	ldr	r0, [sp, #24]
    af34:	and	fp, r2, #16515072	; 0xfc0000
    af38:	ldr	r2, [sp, #12]
    af3c:	and	r0, r0, #258048	; 0x3f000
    af40:	and	r2, r2, #258048	; 0x3f000
    af44:	orr	r2, fp, r2
    af48:	orr	fp, sl, r0
    af4c:	ldr	r0, [sp, #28]
    af50:	ldr	sl, [r8], #4
    af54:	and	r0, r0, #4032	; 0xfc0
    af58:	str	r0, [sp, #44]	; 0x2c
    af5c:	ldr	r0, [sp, #40]	; 0x28
    af60:	orr	r2, r2, r0
    af64:	ldr	r0, [sp, #44]	; 0x2c
    af68:	orr	r0, fp, r0
    af6c:	ldr	fp, [sp, #32]
    af70:	and	fp, fp, #63	; 0x3f
    af74:	orr	r0, r0, fp
    af78:	ldr	fp, [sp, #8]
    af7c:	eor	ip, ip, r0
    af80:	and	fp, fp, #4032	; 0xfc0
    af84:	orr	fp, r2, fp
    af88:	and	r2, r9, #62	; 0x3e
    af8c:	orr	r2, fp, r2
    af90:	eor	r0, r0, r2
    af94:	eor	r2, r2, sl
    af98:	ldr	sl, [sp, #48]	; 0x30
    af9c:	and	r0, r0, r6
    afa0:	eor	r2, r2, r0
    afa4:	cmp	r5, sl
    afa8:	eor	sl, r0, ip
    afac:	add	r0, lr, r2, lsr #12
    afb0:	ubfx	ip, sl, #0, #12
    afb4:	ldrb	fp, [lr, sl, lsr #12]
    afb8:	ubfx	r2, r2, #0, #12
    afbc:	add	r0, r0, #8192	; 0x2000
    afc0:	add	ip, lr, ip
    afc4:	ldrb	r0, [r0]
    afc8:	add	ip, ip, #4096	; 0x1000
    afcc:	add	r2, lr, r2
    afd0:	ldrb	ip, [ip]
    afd4:	add	r2, r2, #12288	; 0x3000
    afd8:	ldrb	r2, [r2]
    afdc:	add	r0, r0, #512	; 0x200
    afe0:	ldr	r0, [r4, r0, lsl #2]
    afe4:	add	ip, ip, #256	; 0x100
    afe8:	ldr	sl, [r4, ip, lsl #2]
    afec:	add	r2, r2, #768	; 0x300
    aff0:	ldr	ip, [r4, fp, lsl #2]
    aff4:	ldr	r2, [r4, r2, lsl #2]
    aff8:	orr	sl, ip, sl
    affc:	orr	sl, sl, r0
    b000:	orr	sl, sl, r2
    b004:	eor	ip, r1, sl
    b008:	mov	r1, r3
    b00c:	bne	aec4 <rb_crypt+0x544>
    b010:	ldr	r2, [sp, #4]
    b014:	mov	r1, ip
    b018:	subs	r2, r2, #1
    b01c:	str	r2, [sp, #4]
    b020:	bne	aeb8 <rb_crypt+0x538>
    b024:	ldr	r5, [pc, #1644]	; b698 <rb_crypt+0xd18>
    b028:	lsr	r9, ip, #24
    b02c:	uxtb	r8, ip
    b030:	add	r8, r8, #768	; 0x300
    b034:	lsr	r4, r3, #24
    b038:	uxtb	lr, r3
    b03c:	ldr	ip, [pc, #1624]	; b69c <rb_crypt+0xd1c>
    b040:	ubfx	r7, r3, #16, #8
    b044:	add	lr, lr, #1792	; 0x700
    b048:	ubfx	r3, r3, #8, #8
    b04c:	add	r4, r4, #1024	; 0x400
    b050:	ubfx	r0, r1, #16, #8
    b054:	add	r7, r7, #1280	; 0x500
    b058:	add	r5, pc, r5
    b05c:	add	r6, r3, #1536	; 0x600
    b060:	ubfx	r1, r1, #8, #8
    b064:	ldr	r2, [r5, r8, lsl #2]
    b068:	add	r0, r0, #256	; 0x100
    b06c:	add	ip, pc, ip
    b070:	add	r1, r1, #512	; 0x200
    b074:	ldr	sl, [r5, r9, lsl #2]
    b078:	ldr	r3, [ip, r8, lsl #2]
    b07c:	ldr	r8, [ip, r9, lsl #2]
    b080:	orr	sl, sl, r2
    b084:	ldr	r9, [ip, r4, lsl #2]
    b088:	ldr	r2, [r5, r4, lsl #2]
    b08c:	orr	r3, r8, r3
    b090:	ldr	fp, [r5, lr, lsl #2]
    b094:	orr	r3, r3, r9
    b098:	ldr	r8, [ip, lr, lsl #2]
    b09c:	orr	r2, sl, r2
    b0a0:	ldr	r9, [r5, r0, lsl #2]
    b0a4:	orr	r2, r2, fp
    b0a8:	ldr	sl, [ip, r0, lsl #2]
    b0ac:	orr	r3, r3, r8
    b0b0:	ldr	fp, [r5, r1, lsl #2]
    b0b4:	orr	r2, r2, r9
    b0b8:	ldr	r1, [ip, r1, lsl #2]
    b0bc:	orr	r3, r3, sl
    b0c0:	ldr	r8, [r5, r7, lsl #2]
    b0c4:	orr	r2, r2, fp
    b0c8:	ldr	sl, [ip, r7, lsl #2]
    b0cc:	orr	r3, r3, r1
    b0d0:	ldr	r1, [pc, #1480]	; b6a0 <rb_crypt+0xd20>
    b0d4:	orr	r2, r2, r8
    b0d8:	ldr	fp, [r5, r6, lsl #2]
    b0dc:	orr	r3, r3, sl
    b0e0:	ldr	r5, [ip, r6, lsl #2]
    b0e4:	add	r1, pc, r1
    b0e8:	ldr	r4, [sp, #4]
    b0ec:	orr	r2, r2, fp
    b0f0:	lsr	ip, r2, #16
    b0f4:	orr	r3, r3, r5
    b0f8:	lsl	r2, r2, #2
    b0fc:	add	r8, r1, r3, lsr #26
    b100:	orr	ip, ip, r3, lsl #16
    b104:	mov	lr, r4
    b108:	str	r4, [sp, #8]
    b10c:	ldrb	sl, [r8, #1100]	; 0x44c
    b110:	ubfx	r6, r2, #12, #6
    b114:	and	r5, r2, #63	; 0x3f
    b118:	ubfx	r7, ip, #18, #6
    b11c:	add	r5, r1, r5
    b120:	add	r6, r1, r6
    b124:	ldr	r4, [sp, #52]	; 0x34
    b128:	ubfx	r8, ip, #12, #6
    b12c:	add	r7, r1, r7
    b130:	ubfx	r2, r2, #6, #6
    b134:	ldrb	fp, [r6, #1100]	; 0x44c
    b138:	add	r8, r1, r8
    b13c:	and	r6, ip, #63	; 0x3f
    b140:	bfi	lr, sl, #0, #8
    b144:	add	r6, r1, r6
    b148:	add	r2, r1, r2
    b14c:	ldrb	r9, [r7, #1100]	; 0x44c
    b150:	ubfx	ip, ip, #6, #6
    b154:	ubfx	r7, r3, #20, #6
    b158:	add	r0, r4, #1056	; 0x420
    b15c:	ldr	sl, [sp, #8]
    b160:	add	ip, r1, ip
    b164:	add	r0, r0, #12
    b168:	strb	fp, [r4, #1078]	; 0x436
    b16c:	add	r7, r1, r7
    b170:	ldrb	fp, [r8, #1100]	; 0x44c
    b174:	ubfx	r8, r3, #14, #6
    b178:	ubfx	r3, r3, #8, #6
    b17c:	add	r8, r1, r8
    b180:	ldrb	r7, [r7, #1100]	; 0x44c
    b184:	bfi	sl, r9, #0, #8
    b188:	add	r3, r1, r3
    b18c:	ldrb	r1, [ip, #1100]	; 0x44c
    b190:	mov	r9, sl
    b194:	bfi	r9, fp, #8, #8
    b198:	ldrb	r8, [r8, #1100]	; 0x44c
    b19c:	bfi	lr, r7, #8, #8
    b1a0:	ldrb	ip, [r6, #1100]	; 0x44c
    b1a4:	mov	r6, r9
    b1a8:	bfi	r6, r1, #16, #8
    b1ac:	ldrb	r1, [r3, #1100]	; 0x44c
    b1b0:	bfi	lr, r8, #16, #8
    b1b4:	ldrb	r3, [r5, #1100]	; 0x44c
    b1b8:	bfi	r6, ip, #24, #8
    b1bc:	ldrb	r2, [r2, #1100]	; 0x44c
    b1c0:	bfi	lr, r1, #24, #8
    b1c4:	str	r6, [r4, #1074]	; 0x432
    b1c8:	str	lr, [r4, #1070]	; 0x42e
    b1cc:	strb	r2, [r4, #1079]	; 0x437
    b1d0:	strb	r3, [r4, #1080]	; 0x438
    b1d4:	mov	r3, r4
    b1d8:	ldr	r4, [sp, #4]
    b1dc:	strb	r4, [r3, #1081]	; 0x439
    b1e0:	b	a9e4 <rb_crypt+0x64>
    b1e4:	ldr	r3, [pc, #1208]	; b6a4 <rb_crypt+0xd24>
    b1e8:	add	r3, pc, r3
    b1ec:	ldr	r2, [r3, #8]
    b1f0:	cmp	ip, r2
    b1f4:	bne	aa4c <rb_crypt+0xcc>
    b1f8:	ldr	r3, [r3, #4]
    b1fc:	cmp	lr, r3
    b200:	bne	aa4c <rb_crypt+0xcc>
    b204:	b	aca0 <rb_crypt+0x320>
    b208:	ldrb	r2, [r4]
    b20c:	lsl	r1, r1, #6
    b210:	cmp	r2, #122	; 0x7a
    b214:	bls	acec <rb_crypt+0x36c>
    b218:	ldr	r0, [pc, #1160]	; b6a8 <rb_crypt+0xd28>
    b21c:	mov	lr, r1
    b220:	add	r0, pc, r0
    b224:	strb	r2, [r0, #1068]	; 0x42c
    b228:	b	ad44 <rb_crypt+0x3c4>
    b22c:	mov	lr, #0
    b230:	mov	r1, lr
    b234:	b	ad30 <rb_crypt+0x3b0>
    b238:	ldr	r5, [pc, #1132]	; b6ac <rb_crypt+0xd2c>
    b23c:	mov	r2, #3
    b240:	mov	r0, r4
    b244:	ldr	r1, [pc, #1124]	; b6b0 <rb_crypt+0xd30>
    b248:	add	r5, pc, r5
    b24c:	add	r1, pc, r1
    b250:	str	r4, [r5, #1092]	; 0x444
    b254:	bl	4be4 <strncmp@plt>
    b258:	cmp	r0, #0
    b25c:	beq	b9b8 <rb_crypt+0x1038>
    b260:	mov	r3, #0
    b264:	mov	r7, r4
    b268:	str	r4, [r5, #1096]	; 0x448
    b26c:	str	r3, [sp, #8]
    b270:	mov	r2, #0
    b274:	mov	r3, #0
    b278:	add	r5, pc, #976	; 0x3d0
    b27c:	ldrd	r4, [r5]
    b280:	mov	r0, r6
    b284:	strd	r2, [sp, #96]	; 0x60
    b288:	add	r3, pc, #968	; 0x3c8
    b28c:	ldrd	r2, [r3]
    b290:	strd	r4, [sp, #80]	; 0x50
    b294:	strd	r2, [sp, #88]	; 0x58
    b298:	bl	47c4 <strlen@plt>
    b29c:	lsl	r2, r0, #3
    b2a0:	cmp	r0, #63	; 0x3f
    b2a4:	mov	fp, r0
    b2a8:	lsr	r3, r0, #29
    b2ac:	movls	r1, r6
    b2b0:	addls	r8, sp, #80	; 0x50
    b2b4:	addls	r5, sp, #104	; 0x68
    b2b8:	strd	r2, [sp, #96]	; 0x60
    b2bc:	bhi	bab4 <rb_crypt+0x1134>
    b2c0:	mov	r2, fp
    b2c4:	mov	r0, r5
    b2c8:	add	r5, pc, #896	; 0x380
    b2cc:	ldrd	r4, [r5]
    b2d0:	bl	47e8 <memcpy@plt>
    b2d4:	ldr	r1, [pc, #984]	; b6b4 <rb_crypt+0xd34>
    b2d8:	mov	r2, #3
    b2dc:	mov	r0, r8
    b2e0:	add	r1, pc, r1
    b2e4:	bl	67dc <MD5Update>
    b2e8:	mov	r1, r7
    b2ec:	mov	r0, r8
    b2f0:	ldr	r2, [sp, #8]
    b2f4:	bl	67dc <MD5Update>
    b2f8:	mov	r2, #0
    b2fc:	mov	r3, #0
    b300:	strd	r4, [sp, #168]	; 0xa8
    b304:	mov	r0, r6
    b308:	strd	r2, [sp, #184]	; 0xb8
    b30c:	add	r3, pc, #836	; 0x344
    b310:	ldrd	r2, [r3]
    b314:	strd	r2, [sp, #176]	; 0xb0
    b318:	bl	47c4 <strlen@plt>
    b31c:	lsl	r1, r0, #3
    b320:	cmp	r0, #63	; 0x3f
    b324:	mov	r9, r0
    b328:	lsr	r3, r0, #29
    b32c:	addls	r5, sp, #168	; 0xa8
    b330:	addls	fp, sp, #192	; 0xc0
    b334:	str	r1, [sp, #184]	; 0xb8
    b338:	movls	r1, r6
    b33c:	str	r3, [sp, #188]	; 0xbc
    b340:	bhi	bb98 <rb_crypt+0x1218>
    b344:	mov	r2, r9
    b348:	mov	r0, fp
    b34c:	bl	47e8 <memcpy@plt>
    b350:	mov	r1, r7
    b354:	mov	r0, r5
    b358:	ldr	r2, [sp, #8]
    b35c:	bl	67dc <MD5Update>
    b360:	mov	r0, r6
    b364:	add	r7, sp, #64	; 0x40
    b368:	bl	47c4 <strlen@plt>
    b36c:	mov	r2, r0
    b370:	mov	r1, r6
    b374:	mov	r0, r5
    b378:	bl	67dc <MD5Update>
    b37c:	ldrd	r0, [sp, #184]	; 0xb8
    b380:	ldr	r2, [sp, #184]	; 0xb8
    b384:	strd	r0, [sp, #64]	; 0x40
    b388:	mov	r0, r5
    b38c:	ldr	r1, [pc, #804]	; b6b8 <rb_crypt+0xd38>
    b390:	ubfx	r2, r2, #3, #6
    b394:	cmp	r2, #55	; 0x37
    b398:	rsbls	r2, r2, #56	; 0x38
    b39c:	rsbhi	r2, r2, #120	; 0x78
    b3a0:	add	r1, pc, r1
    b3a4:	bl	67dc <MD5Update>
    b3a8:	mov	r1, r7
    b3ac:	mov	r2, #8
    b3b0:	mov	r0, r5
    b3b4:	bl	67dc <MD5Update>
    b3b8:	ldrd	sl, [sp, #168]	; 0xa8
    b3bc:	mov	r2, #88	; 0x58
    b3c0:	mov	r1, #0
    b3c4:	mov	r0, r5
    b3c8:	strd	sl, [sp, #64]	; 0x40
    b3cc:	ldrd	sl, [r5, #8]
    b3d0:	strd	sl, [r7, #8]
    b3d4:	bl	4608 <memset@plt>
    b3d8:	mov	r0, r6
    b3dc:	bl	47c4 <strlen@plt>
    b3e0:	subs	r4, r0, #0
    b3e4:	subne	r3, r4, #1
    b3e8:	subne	r9, r4, #16
    b3ec:	bicne	r3, r3, #15
    b3f0:	subne	r9, r9, r3
    b3f4:	beq	b41c <rb_crypt+0xa9c>
    b3f8:	cmp	r4, #16
    b3fc:	mov	r1, r7
    b400:	movlt	r2, r4
    b404:	movge	r2, #16
    b408:	mov	r0, r8
    b40c:	sub	r4, r4, #16
    b410:	bl	67dc <MD5Update>
    b414:	cmp	r4, r9
    b418:	bne	b3f8 <rb_crypt+0xa78>
    b41c:	mov	r2, #0
    b420:	mov	r3, #0
    b424:	mov	r0, r6
    b428:	strd	r2, [sp, #64]	; 0x40
    b42c:	strd	r2, [r7, #8]
    b430:	bl	47c4 <strlen@plt>
    b434:	subs	r4, r0, #0
    b438:	beq	b458 <rb_crypt+0xad8>
    b43c:	tst	r4, #1
    b440:	mov	r1, r6
    b444:	mov	r0, r8
    b448:	movne	r1, r7
    b44c:	bl	a864 <MD5Update.constprop.2>
    b450:	lsrs	r4, r4, #1
    b454:	bne	b43c <rb_crypt+0xabc>
    b458:	ldr	r4, [pc, #604]	; b6bc <rb_crypt+0xd3c>
    b45c:	mov	r2, #120	; 0x78
    b460:	ldr	r1, [pc, #600]	; b6c0 <rb_crypt+0xd40>
    b464:	add	r4, pc, r4
    b468:	add	r9, r4, #948	; 0x3b4
    b46c:	add	r1, pc, r1
    b470:	mov	r0, r9
    b474:	bl	4680 <rb_strlcpy@plt>
    b478:	mov	r0, r9
    b47c:	ldr	r2, [sp, #8]
    b480:	ldr	r1, [r4, #1092]	; 0x444
    b484:	bl	489c <strncat@plt>
    b488:	ldr	r1, [pc, #564]	; b6c4 <rb_crypt+0xd44>
    b48c:	mov	r2, #120	; 0x78
    b490:	mov	r0, r9
    b494:	add	r1, pc, r1
    b498:	bl	4b60 <rb_strlcat@plt>
    b49c:	ldr	r2, [sp, #96]	; 0x60
    b4a0:	ldrd	r0, [sp, #96]	; 0x60
    b4a4:	ubfx	r2, r2, #3, #6
    b4a8:	cmp	r2, #55	; 0x37
    b4ac:	strd	r0, [sp, #56]	; 0x38
    b4b0:	rsbls	r2, r2, #56	; 0x38
    b4b4:	rsbhi	r2, r2, #120	; 0x78
    b4b8:	ldr	r1, [pc, #520]	; b6c8 <rb_crypt+0xd48>
    b4bc:	add	r9, sp, #56	; 0x38
    b4c0:	movw	r3, #18725	; 0x4925
    b4c4:	movt	r3, #9362	; 0x2492
    b4c8:	mov	r0, r8
    b4cc:	str	r9, [sp, #4]
    b4d0:	mov	r4, #0
    b4d4:	movw	sl, #43691	; 0xaaab
    b4d8:	movt	sl, #43690	; 0xaaaa
    b4dc:	str	r3, [sp, #12]
    b4e0:	add	fp, sp, #184	; 0xb8
    b4e4:	add	r1, pc, r1
    b4e8:	bl	67dc <MD5Update>
    b4ec:	mov	r1, r9
    b4f0:	mov	r0, r8
    b4f4:	mov	r2, #8
    b4f8:	bl	67dc <MD5Update>
    b4fc:	mov	r0, r8
    b500:	ldrd	r8, [r8, #8]
    b504:	mov	r2, #88	; 0x58
    b508:	mov	r1, r4
    b50c:	ldr	r3, [pc, #440]	; b6cc <rb_crypt+0xd4c>
    b510:	strd	r8, [r7, #8]
    b514:	ldrd	r8, [sp, #80]	; 0x50
    b518:	add	r3, pc, r3
    b51c:	str	r3, [sp, #16]
    b520:	strd	r8, [sp, #64]	; 0x40
    b524:	bl	4608 <memset@plt>
    b528:	b	b5f8 <rb_crypt+0xc78>
    b52c:	mov	r0, r6
    b530:	bl	47c4 <strlen@plt>
    b534:	mov	r2, r0
    b538:	mov	r1, r6
    b53c:	mov	r0, r5
    b540:	bl	67dc <MD5Update>
    b544:	umull	r2, r3, sl, r4
    b548:	lsr	r3, r3, #1
    b54c:	add	r3, r3, r3, lsl #1
    b550:	cmp	r4, r3
    b554:	bne	b704 <rb_crypt+0xd84>
    b558:	ldr	r3, [sp, #12]
    b55c:	umull	r2, r3, r3, r4
    b560:	sub	r2, r4, r3
    b564:	add	r3, r3, r2, lsr #1
    b568:	lsr	r3, r3, #2
    b56c:	rsb	r3, r3, r3, lsl #3
    b570:	cmp	r4, r3
    b574:	bne	b6e8 <rb_crypt+0xd68>
    b578:	cmp	r8, #0
    b57c:	beq	b634 <rb_crypt+0xcb4>
    b580:	mov	r1, r7
    b584:	mov	r0, r5
    b588:	bl	a8e8 <MD5Update.constprop.3>
    b58c:	ldrd	r0, [fp]
    b590:	add	r4, r4, #1
    b594:	ldr	r3, [sp, #4]
    b598:	ldr	r2, [sp, #184]	; 0xb8
    b59c:	strd	r0, [r3]
    b5a0:	mov	r0, r5
    b5a4:	ldr	r1, [pc, #292]	; b6d0 <rb_crypt+0xd50>
    b5a8:	ubfx	r2, r2, #3, #6
    b5ac:	cmp	r2, #55	; 0x37
    b5b0:	rsbls	r2, r2, #56	; 0x38
    b5b4:	rsbhi	r2, r2, #120	; 0x78
    b5b8:	add	r1, pc, r1
    b5bc:	bl	67dc <MD5Update>
    b5c0:	mov	r2, #8
    b5c4:	mov	r0, r5
    b5c8:	ldr	r1, [sp, #4]
    b5cc:	bl	67dc <MD5Update>
    b5d0:	ldrd	r8, [r5]
    b5d4:	mov	r2, #88	; 0x58
    b5d8:	mov	r1, #0
    b5dc:	mov	r0, r5
    b5e0:	strd	r8, [r7]
    b5e4:	ldrd	r8, [r5, #8]
    b5e8:	strd	r8, [r7, #8]
    b5ec:	bl	4608 <memset@plt>
    b5f0:	cmp	r4, #1000	; 0x3e8
    b5f4:	beq	b71c <rb_crypt+0xd9c>
    b5f8:	add	r3, pc, #80	; 0x50
    b5fc:	ldrd	r2, [r3]
    b600:	ands	r8, r4, #1
    b604:	strd	r2, [sp, #168]	; 0xa8
    b608:	add	r3, pc, #72	; 0x48
    b60c:	ldrd	r2, [r3]
    b610:	strd	r2, [sp, #176]	; 0xb0
    b614:	mov	r2, #0
    b618:	mov	r3, #0
    b61c:	strd	r2, [sp, #184]	; 0xb8
    b620:	bne	b52c <rb_crypt+0xbac>
    b624:	mov	r1, r7
    b628:	mov	r0, r5
    b62c:	bl	a8e8 <MD5Update.constprop.3>
    b630:	b	b544 <rb_crypt+0xbc4>
    b634:	mov	r0, r6
    b638:	bl	47c4 <strlen@plt>
    b63c:	mov	r2, r0
    b640:	mov	r1, r6
    b644:	mov	r0, r5
    b648:	bl	67dc <MD5Update>
    b64c:	b	b58c <rb_crypt+0xc0c>
    b650:	.word	0x67452301
    b654:	.word	0xefcdab89
    b658:	.word	0x98badcfe
    b65c:	.word	0x10325476
    b660:	.word	0x0002af28
    b664:	.word	0x00029f14
    b668:	.word	0x0000ecec
    b66c:	.word	0x000229b0
    b670:	.word	0x00028e38
    b674:	.word	0x00027e1c
    b678:	.word	0x00022790
    b67c:	.word	0x00022784
    b680:	.word	0x00022724
    b684:	.word	0x0002fbdc
    b688:	.word	0x000226fc
    b68c:	.word	0x00031bc4
    b690:	.word	0x00022b24
    b694:	.word	0x00023b18
    b698:	.word	0x0002b948
    b69c:	.word	0x0002d934
    b6a0:	.word	0x0000e6f4
    b6a4:	.word	0x000222e4
    b6a8:	.word	0x000222ac
    b6ac:	.word	0x00022284
    b6b0:	.word	0x0000ed8c
    b6b4:	.word	0x0000ecf8
    b6b8:	.word	0x0002107c
    b6bc:	.word	0x00022068
    b6c0:	.word	0x0000eb6c
    b6c4:	.word	0x0000eb38
    b6c8:	.word	0x00020f38
    b6cc:	.word	0x00021fb4
    b6d0:	.word	0x00020e64
    b6d4:	.word	0x00021da0
    b6d8:	.word	0x0000e06c
    b6dc:	.word	0x00021b88
    b6e0:	.word	0x00021a44
    b6e4:	.word	0x00021a24
    b6e8:	mov	r0, r6
    b6ec:	bl	47c4 <strlen@plt>
    b6f0:	mov	r2, r0
    b6f4:	mov	r1, r6
    b6f8:	mov	r0, r5
    b6fc:	bl	67dc <MD5Update>
    b700:	b	b578 <rb_crypt+0xbf8>
    b704:	mov	r0, r5
    b708:	ldr	r2, [sp, #8]
    b70c:	ldr	r3, [sp, #16]
    b710:	ldr	r1, [r3, #1092]	; 0x444
    b714:	bl	67dc <MD5Update>
    b718:	b	b558 <rb_crypt+0xbd8>
    b71c:	ldr	r0, [pc, #-80]	; b6d4 <rb_crypt+0xd54>
    b720:	mov	r7, #0
    b724:	mov	r6, r7
    b728:	mov	r5, r7
    b72c:	add	r0, pc, r0
    b730:	add	r4, r0, #948	; 0x3b4
    b734:	mov	r0, r4
    b738:	bl	47c4 <strlen@plt>
    b73c:	ldrb	lr, [sp, #70]	; 0x46
    b740:	ldrb	r3, [sp, #64]	; 0x40
    b744:	ldrb	r8, [sp, #76]	; 0x4c
    b748:	lsl	lr, lr, #8
    b74c:	ldrb	r1, [sp, #72]	; 0x48
    b750:	orr	lr, lr, r3, lsl #16
    b754:	ldr	r3, [pc, #-132]	; b6d8 <rb_crypt+0xd58>
    b758:	orr	lr, lr, r8
    b75c:	ldrb	r9, [sp, #66]	; 0x42
    b760:	and	r8, lr, #63	; 0x3f
    b764:	lsl	r1, r1, #8
    b768:	ldrb	ip, [sp, #71]	; 0x47
    b76c:	add	r3, pc, r3
    b770:	ldrb	sl, [sp, #65]	; 0x41
    b774:	add	r8, r3, r8
    b778:	orr	r1, r1, r9, lsl #16
    b77c:	ldrb	r2, [sp, #73]	; 0x49
    b780:	lsl	ip, ip, #8
    b784:	ldrb	r9, [sp, #77]	; 0x4d
    b788:	orr	ip, ip, sl, lsl #16
    b78c:	ldrb	r8, [r8, #1100]	; 0x44c
    b790:	lsl	r2, r2, #8
    b794:	ldrb	sl, [sp, #67]	; 0x43
    b798:	orr	ip, ip, r9
    b79c:	ldrb	r9, [sp, #79]	; 0x4f
    b7a0:	bfi	r7, r8, #0, #8
    b7a4:	ubfx	r8, lr, #6, #6
    b7a8:	orr	r2, r2, sl, lsl #16
    b7ac:	ldrb	sl, [sp, #78]	; 0x4e
    b7b0:	add	r8, r3, r8
    b7b4:	ldrb	r8, [r8, #1100]	; 0x44c
    b7b8:	orr	r2, r2, r9
    b7bc:	and	r9, ip, #63	; 0x3f
    b7c0:	add	r9, r3, r9
    b7c4:	ldrb	fp, [r9, #1100]	; 0x44c
    b7c8:	orr	r1, r1, sl
    b7cc:	and	r9, r1, #63	; 0x3f
    b7d0:	add	r9, r3, r9
    b7d4:	bfi	r7, r8, #8, #8
    b7d8:	ubfx	r8, lr, #12, #6
    b7dc:	ldrb	sl, [r9, #1100]	; 0x44c
    b7e0:	and	r9, r2, #63	; 0x3f
    b7e4:	bfi	r6, fp, #0, #8
    b7e8:	add	r9, r3, r9
    b7ec:	add	r8, r3, r8
    b7f0:	add	lr, r3, lr, lsr #18
    b7f4:	ldrb	r9, [r9, #1100]	; 0x44c
    b7f8:	ldrb	fp, [r8, #1100]	; 0x44c
    b7fc:	ubfx	r8, ip, #6, #6
    b800:	bfi	r5, sl, #0, #8
    b804:	add	r8, r3, r8
    b808:	ldrb	sl, [lr, #1100]	; 0x44c
    b80c:	ubfx	lr, r1, #6, #6
    b810:	ldrb	r8, [r8, #1100]	; 0x44c
    b814:	add	lr, r3, lr
    b818:	bfi	r7, fp, #16, #8
    b81c:	ldrb	fp, [lr, #1100]	; 0x44c
    b820:	ubfx	lr, r2, #6, #6
    b824:	bfi	r7, sl, #24, #8
    b828:	add	lr, r3, lr
    b82c:	bfi	r6, r8, #8, #8
    b830:	ldrb	sl, [lr, #1100]	; 0x44c
    b834:	add	lr, r4, r0
    b838:	ubfx	r8, ip, #12, #6
    b83c:	str	r7, [r4, r0]
    b840:	mov	r0, r4
    b844:	add	ip, r3, ip, lsr #18
    b848:	add	r8, r3, r8
    b84c:	ubfx	r4, r1, #12, #6
    b850:	ldrb	r7, [r8, #1100]	; 0x44c
    b854:	add	r1, r3, r1, lsr #18
    b858:	add	r4, r3, r4
    b85c:	bfi	r5, fp, #8, #8
    b860:	ldrb	r8, [ip, #1100]	; 0x44c
    b864:	ubfx	ip, r2, #12, #6
    b868:	add	r2, r3, r2, lsr #18
    b86c:	add	ip, r3, ip
    b870:	ldrb	r4, [r4, #1100]	; 0x44c
    b874:	bfi	r6, r7, #16, #8
    b878:	ldrb	r7, [ip, #1100]	; 0x44c
    b87c:	mov	ip, #0
    b880:	bfi	ip, r9, #0, #8
    b884:	ldrb	r1, [r1, #1100]	; 0x44c
    b888:	bfi	r6, r8, #24, #8
    b88c:	bfi	ip, sl, #8, #8
    b890:	ldrb	r2, [r2, #1100]	; 0x44c
    b894:	bfi	r5, r4, #16, #8
    b898:	bfi	ip, r7, #16, #8
    b89c:	str	r6, [lr, #4]
    b8a0:	bfi	r5, r1, #24, #8
    b8a4:	mov	r1, #0
    b8a8:	bfi	ip, r2, #24, #8
    b8ac:	str	r5, [lr, #8]
    b8b0:	str	ip, [lr, #12]
    b8b4:	ldrb	r2, [sp, #74]	; 0x4a
    b8b8:	strb	r1, [lr, #22]
    b8bc:	ldrb	r5, [sp, #68]	; 0x44
    b8c0:	ldrb	r4, [sp, #69]	; 0x45
    b8c4:	lsl	r2, r2, #8
    b8c8:	ldrb	ip, [sp, #75]	; 0x4b
    b8cc:	orr	r2, r2, r5, lsl #16
    b8d0:	orr	r2, r2, r4
    b8d4:	and	r4, r2, #63	; 0x3f
    b8d8:	ubfx	r5, r2, #6, #6
    b8dc:	add	r4, r3, r4
    b8e0:	ldrb	r7, [r4, #1100]	; 0x44c
    b8e4:	add	r5, r3, r5
    b8e8:	ubfx	r4, r2, #12, #6
    b8ec:	add	r2, r3, r2, lsr #18
    b8f0:	ldrb	r6, [r5, #1100]	; 0x44c
    b8f4:	add	r4, r3, r4
    b8f8:	ldrb	r5, [r4, #1100]	; 0x44c
    b8fc:	bfi	r1, r7, #0, #8
    b900:	ldrb	r4, [r2, #1100]	; 0x44c
    b904:	and	r2, ip, #63	; 0x3f
    b908:	add	ip, r3, ip, lsr #6
    b90c:	bfi	r1, r6, #8, #8
    b910:	add	r3, r3, r2
    b914:	ldrb	r2, [r3, #1100]	; 0x44c
    b918:	bfi	r1, r5, #16, #8
    b91c:	ldrb	r3, [ip, #1100]	; 0x44c
    b920:	bfi	r1, r4, #24, #8
    b924:	str	r1, [lr, #16]
    b928:	strb	r2, [lr, #20]
    b92c:	strb	r3, [lr, #21]
    b930:	b	a9e4 <rb_crypt+0x64>
    b934:	ldr	r5, [pc, #-608]	; b6dc <rb_crypt+0xd5c>
    b938:	mov	r0, r4
    b93c:	bl	47c4 <strlen@plt>
    b940:	add	r7, r0, #109	; 0x6d
    b944:	add	r5, pc, r5
    b948:	ldr	r3, [r5, #1100]	; 0x44c
    b94c:	ldr	r2, [r5, #1104]	; 0x450
    b950:	cmp	r7, r3
    b954:	ble	b978 <rb_crypt+0xff8>
    b958:	mov	r0, r2
    b95c:	mov	r1, r7
    b960:	bl	4c14 <realloc@plt>
    b964:	subs	r2, r0, #0
    b968:	beq	a9e0 <rb_crypt+0x60>
    b96c:	mov	r3, r7
    b970:	str	r7, [r5, #1100]	; 0x44c
    b974:	str	r2, [r5, #1104]	; 0x450
    b978:	mov	r1, r4
    b97c:	mov	r0, r6
    b980:	bl	7e70 <rb_sha512_crypt_r>
    b984:	b	a9e4 <rb_crypt+0x64>
    b988:	mov	r0, r4
    b98c:	bl	47c4 <strlen@plt>
    b990:	add	r5, r0, #66	; 0x42
    b994:	mov	r0, r5
    b998:	bl	4980 <malloc@plt>
    b99c:	subs	r2, r0, #0
    b9a0:	beq	a9e0 <rb_crypt+0x60>
    b9a4:	mov	r3, r5
    b9a8:	mov	r1, r4
    b9ac:	mov	r0, r6
    b9b0:	bl	6f88 <rb_sha256_crypt_r>
    b9b4:	b	a9e4 <rb_crypt+0x64>
    b9b8:	ldrb	r3, [r4, #3]
    b9bc:	add	r7, r4, #3
    b9c0:	str	r7, [r5, #1092]	; 0x444
    b9c4:	str	r7, [r5, #1096]	; 0x448
    b9c8:	cmp	r3, #36	; 0x24
    b9cc:	cmpne	r3, #0
    b9d0:	movne	r3, #1
    b9d4:	moveq	r3, #0
    b9d8:	beq	bc84 <rb_crypt+0x1304>
    b9dc:	ldrb	r2, [r4, #4]
    b9e0:	add	r3, r4, #4
    b9e4:	cmp	r2, #36	; 0x24
    b9e8:	cmpne	r2, #0
    b9ec:	beq	ba9c <rb_crypt+0x111c>
    b9f0:	ldrb	r2, [r4, #5]
    b9f4:	add	r3, r4, #5
    b9f8:	cmp	r2, #36	; 0x24
    b9fc:	cmpne	r2, #0
    ba00:	beq	ba9c <rb_crypt+0x111c>
    ba04:	ldrb	r2, [r4, #6]
    ba08:	add	r3, r4, #6
    ba0c:	cmp	r2, #36	; 0x24
    ba10:	cmpne	r2, #0
    ba14:	beq	ba9c <rb_crypt+0x111c>
    ba18:	ldrb	r2, [r4, #7]
    ba1c:	add	r3, r4, #7
    ba20:	cmp	r2, #36	; 0x24
    ba24:	cmpne	r2, #0
    ba28:	beq	ba9c <rb_crypt+0x111c>
    ba2c:	ldrb	r2, [r4, #8]
    ba30:	add	r3, r4, #8
    ba34:	cmp	r2, #36	; 0x24
    ba38:	cmpne	r2, #0
    ba3c:	beq	ba9c <rb_crypt+0x111c>
    ba40:	ldrb	r2, [r4, #9]
    ba44:	add	r3, r4, #9
    ba48:	cmp	r2, #36	; 0x24
    ba4c:	cmpne	r2, #0
    ba50:	beq	ba9c <rb_crypt+0x111c>
    ba54:	ldrb	r2, [r4, #10]
    ba58:	add	r3, r4, #10
    ba5c:	cmp	r2, #36	; 0x24
    ba60:	cmpne	r2, #0
    ba64:	beq	ba9c <rb_crypt+0x111c>
    ba68:	ldrb	r2, [r4, #11]
    ba6c:	add	r3, r4, #11
    ba70:	cmp	r2, #0
    ba74:	cmpne	r2, #36	; 0x24
    ba78:	beq	ba9c <rb_crypt+0x111c>
    ba7c:	ldr	r2, [pc, #-932]	; b6e0 <rb_crypt+0xd60>
    ba80:	sub	r1, r3, r7
    ba84:	str	r1, [sp, #8]
    ba88:	add	r2, pc, r2
    ba8c:	str	r3, [r2, #1096]	; 0x448
    ba90:	b	b270 <rb_crypt+0x8f0>
    ba94:	ldr	r6, [ip, #12]
    ba98:	b	adb0 <rb_crypt+0x430>
    ba9c:	ldr	r2, [pc, #-960]	; b6e4 <rb_crypt+0xd64>
    baa0:	sub	r1, r3, r7
    baa4:	str	r1, [sp, #8]
    baa8:	add	r2, pc, r2
    baac:	str	r3, [r2, #1096]	; 0x448
    bab0:	b	b270 <rb_crypt+0x8f0>
    bab4:	ldr	r3, [r6]
    bab8:	add	r5, sp, #104	; 0x68
    babc:	add	r8, sp, #80	; 0x50
    bac0:	mov	r1, r5
    bac4:	mov	r0, r8
    bac8:	ldr	ip, [r6, #4]
    bacc:	ldr	r2, [r6, #8]
    bad0:	str	r3, [sp, #104]	; 0x68
    bad4:	ldr	r3, [r6, #12]
    bad8:	str	ip, [r5, #4]
    badc:	ldr	ip, [r6, #16]
    bae0:	str	r2, [r5, #8]
    bae4:	ldr	r2, [r6, #20]
    bae8:	str	r3, [r5, #12]
    baec:	ldr	r3, [r6, #24]
    baf0:	str	ip, [r5, #16]
    baf4:	ldr	ip, [r6, #28]
    baf8:	str	r2, [r5, #20]
    bafc:	ldr	r2, [r6, #32]
    bb00:	str	r3, [r5, #24]
    bb04:	ldr	r3, [r6, #36]	; 0x24
    bb08:	str	ip, [r5, #28]
    bb0c:	ldr	ip, [r6, #40]	; 0x28
    bb10:	str	r2, [r5, #32]
    bb14:	ldr	r2, [r6, #44]	; 0x2c
    bb18:	str	r3, [r5, #36]	; 0x24
    bb1c:	ldr	r3, [r6, #48]	; 0x30
    bb20:	str	ip, [r5, #40]	; 0x28
    bb24:	ldr	ip, [r6, #52]	; 0x34
    bb28:	str	r2, [r5, #44]	; 0x2c
    bb2c:	ldr	r2, [r6, #56]	; 0x38
    bb30:	str	r3, [r5, #48]	; 0x30
    bb34:	ldr	r3, [r6, #60]	; 0x3c
    bb38:	str	ip, [r5, #52]	; 0x34
    bb3c:	str	r2, [r5, #56]	; 0x38
    bb40:	str	r3, [r5, #60]	; 0x3c
    bb44:	bl	5d38 <MD5Transform>
    bb48:	cmp	fp, #127	; 0x7f
    bb4c:	subls	fp, fp, #64	; 0x40
    bb50:	addls	r1, r6, #64	; 0x40
    bb54:	bls	b2c0 <rb_crypt+0x940>
    bb58:	sub	r9, fp, #128	; 0x80
    bb5c:	add	sl, r6, #128	; 0x80
    bb60:	bic	r3, r9, #63	; 0x3f
    bb64:	add	r4, r6, #64	; 0x40
    bb68:	add	sl, r3, sl
    bb6c:	mov	r1, r4
    bb70:	mov	r0, r8
    bb74:	add	r4, r4, #64	; 0x40
    bb78:	bl	5d38 <MD5Transform>
    bb7c:	cmp	sl, r4
    bb80:	bne	bb6c <rb_crypt+0x11ec>
    bb84:	bic	r1, r9, #63	; 0x3f
    bb88:	add	r1, r1, #128	; 0x80
    bb8c:	sub	fp, fp, r1
    bb90:	add	r1, r6, r1
    bb94:	b	b2c0 <rb_crypt+0x940>
    bb98:	ldr	r3, [r6]
    bb9c:	add	fp, sp, #192	; 0xc0
    bba0:	add	r5, sp, #168	; 0xa8
    bba4:	mov	r1, fp
    bba8:	mov	r0, r5
    bbac:	ldr	lr, [r6, #4]
    bbb0:	ldr	ip, [r6, #8]
    bbb4:	str	r3, [sp, #192]	; 0xc0
    bbb8:	ldr	r3, [r6, #12]
    bbbc:	str	lr, [fp, #4]
    bbc0:	ldr	lr, [r6, #16]
    bbc4:	str	ip, [fp, #8]
    bbc8:	ldr	ip, [r6, #20]
    bbcc:	str	r3, [fp, #12]
    bbd0:	ldr	r3, [r6, #24]
    bbd4:	str	lr, [fp, #16]
    bbd8:	ldr	lr, [r6, #28]
    bbdc:	str	ip, [fp, #20]
    bbe0:	ldr	ip, [r6, #32]
    bbe4:	str	r3, [fp, #24]
    bbe8:	ldr	r3, [r6, #36]	; 0x24
    bbec:	str	lr, [fp, #28]
    bbf0:	ldr	lr, [r6, #40]	; 0x28
    bbf4:	str	ip, [fp, #32]
    bbf8:	ldr	ip, [r6, #44]	; 0x2c
    bbfc:	str	r3, [fp, #36]	; 0x24
    bc00:	ldr	r3, [r6, #48]	; 0x30
    bc04:	str	lr, [fp, #40]	; 0x28
    bc08:	ldr	lr, [r6, #52]	; 0x34
    bc0c:	str	ip, [fp, #44]	; 0x2c
    bc10:	ldr	ip, [r6, #56]	; 0x38
    bc14:	str	r3, [fp, #48]	; 0x30
    bc18:	ldr	r3, [r6, #60]	; 0x3c
    bc1c:	str	lr, [fp, #52]	; 0x34
    bc20:	str	ip, [fp, #56]	; 0x38
    bc24:	str	r3, [fp, #60]	; 0x3c
    bc28:	bl	5d38 <MD5Transform>
    bc2c:	cmp	r9, #127	; 0x7f
    bc30:	subls	r9, r9, #64	; 0x40
    bc34:	addls	r1, r6, #64	; 0x40
    bc38:	bls	b344 <rb_crypt+0x9c4>
    bc3c:	sub	r3, r9, #128	; 0x80
    bc40:	add	sl, r6, #128	; 0x80
    bc44:	add	r4, r6, #64	; 0x40
    bc48:	str	r3, [sp, #4]
    bc4c:	bic	r3, r3, #63	; 0x3f
    bc50:	add	sl, r3, sl
    bc54:	mov	r1, r4
    bc58:	mov	r0, r5
    bc5c:	add	r4, r4, #64	; 0x40
    bc60:	bl	5d38 <MD5Transform>
    bc64:	cmp	r4, sl
    bc68:	bne	bc54 <rb_crypt+0x12d4>
    bc6c:	ldr	r3, [sp, #4]
    bc70:	bic	r1, r3, #63	; 0x3f
    bc74:	add	r1, r1, #128	; 0x80
    bc78:	sub	r9, r9, r1
    bc7c:	add	r1, r6, r1
    bc80:	b	b344 <rb_crypt+0x9c4>
    bc84:	str	r3, [sp, #8]
    bc88:	b	b270 <rb_crypt+0x8f0>

0000bc8c <rb_init_bh>:
    bc8c:	mov	r1, #12
    bc90:	mov	r0, #1
    bc94:	str	r4, [sp, #-8]!
    bc98:	str	lr, [sp, #4]
    bc9c:	bl	45c0 <calloc@plt>
    bca0:	cmp	r0, #0
    bca4:	beq	bcc0 <rb_init_bh+0x34>
    bca8:	ldr	r3, [pc, #20]	; bcc4 <rb_init_bh+0x38>
    bcac:	ldr	r4, [sp]
    bcb0:	add	sp, sp, #4
    bcb4:	add	r3, pc, r3
    bcb8:	str	r0, [r3]
    bcbc:	pop	{pc}		; (ldr pc, [sp], #4)
    bcc0:	bl	495c <rb_outofmemory@plt>
    bcc4:	.word	0x00032cec

0000bcc8 <rb_bh_create>:
    bcc8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    bccc:	strd	r6, [sp, #8]
    bcd0:	subs	r7, r1, #0
    bcd4:	movle	r3, #1
    bcd8:	movgt	r3, #0
    bcdc:	str	r8, [sp, #16]
    bce0:	cmp	r0, #0
    bce4:	str	lr, [sp, #20]
    bce8:	moveq	r3, #1
    bcec:	cmp	r3, #0
    bcf0:	bne	bde0 <rb_bh_create+0x118>
    bcf4:	cmp	r0, #11
    bcf8:	mov	r5, r0
    bcfc:	bls	bdbc <rb_bh_create+0xf4>
    bd00:	mov	r1, #48	; 0x30
    bd04:	mov	r0, #1
    bd08:	mov	r6, r2
    bd0c:	bl	45c0 <calloc@plt>
    bd10:	subs	r4, r0, #0
    bd14:	beq	bdb8 <rb_bh_create+0xf0>
    bd18:	cmp	r6, #0
    bd1c:	str	r5, [r4, #12]
    bd20:	str	r7, [r4, #16]
    bd24:	beq	bd54 <rb_bh_create+0x8c>
    bd28:	mov	r0, r6
    bd2c:	bl	47c4 <strlen@plt>
    bd30:	add	r5, r0, #1
    bd34:	mov	r0, r5
    bd38:	bl	4980 <malloc@plt>
    bd3c:	subs	r7, r0, #0
    bd40:	beq	bdb8 <rb_bh_create+0xf0>
    bd44:	mov	r2, r5
    bd48:	mov	r1, r6
    bd4c:	bl	47e8 <memcpy@plt>
    bd50:	str	r7, [r4, #44]	; 0x2c
    bd54:	ldr	r3, [pc, #168]	; be04 <rb_bh_create+0x13c>
    bd58:	mov	r2, #0
    bd5c:	str	r4, [r4]
    bd60:	str	r2, [r4, #4]
    bd64:	add	r3, pc, r3
    bd68:	ldr	r3, [r3]
    bd6c:	ldr	r2, [r3]
    bd70:	cmp	r2, #0
    bd74:	str	r2, [r4, #8]
    bd78:	strne	r4, [r2, #4]
    bd7c:	beq	bda8 <rb_bh_create+0xe0>
    bd80:	ldr	r2, [r3, #8]
    bd84:	mov	r0, r4
    bd88:	ldrd	r6, [sp, #8]
    bd8c:	ldr	r8, [sp, #16]
    bd90:	add	r2, r2, #1
    bd94:	str	r4, [r3]
    bd98:	ldrd	r4, [sp]
    bd9c:	add	sp, sp, #20
    bda0:	str	r2, [r3, #8]
    bda4:	pop	{pc}		; (ldr pc, [sp], #4)
    bda8:	ldr	r2, [r3, #4]
    bdac:	cmp	r2, #0
    bdb0:	streq	r4, [r3, #4]
    bdb4:	b	bd80 <rb_bh_create+0xb8>
    bdb8:	bl	495c <rb_outofmemory@plt>
    bdbc:	ldr	r2, [pc, #68]	; be08 <rb_bh_create+0x140>
    bdc0:	mov	r3, #151	; 0x97
    bdc4:	ldr	r1, [pc, #64]	; be0c <rb_bh_create+0x144>
    bdc8:	ldr	r0, [pc, #64]	; be10 <rb_bh_create+0x148>
    bdcc:	add	r2, pc, r2
    bdd0:	add	r1, pc, r1
    bdd4:	add	r0, pc, r0
    bdd8:	bl	48f0 <rb_lib_log@plt>
    bddc:	bl	4398 <abort@plt>
    bde0:	ldr	r2, [pc, #44]	; be14 <rb_bh_create+0x14c>
    bde4:	mov	r3, #147	; 0x93
    bde8:	ldr	r1, [pc, #40]	; be18 <rb_bh_create+0x150>
    bdec:	ldr	r0, [pc, #40]	; be1c <rb_bh_create+0x154>
    bdf0:	add	r2, pc, r2
    bdf4:	add	r1, pc, r1
    bdf8:	add	r0, pc, r0
    bdfc:	bl	48f0 <rb_lib_log@plt>
    be00:	bl	4398 <abort@plt>
    be04:	.word	0x00032c3c
    be08:	.word	0x0000e210
    be0c:	.word	0x0000e26c
    be10:	.word	0x0000e240
    be14:	.word	0x0000e1ec
    be18:	.word	0x0000e1f4
    be1c:	.word	0x0000e21c

0000be20 <rb_bh_alloc>:
    be20:	subs	r3, r0, #0
    be24:	str	r4, [sp, #-8]!
    be28:	str	lr, [sp, #4]
    be2c:	beq	be50 <rb_bh_alloc+0x30>
    be30:	mov	r0, #1
    be34:	ldr	r1, [r3, #12]
    be38:	bl	45c0 <calloc@plt>
    be3c:	cmp	r0, #0
    be40:	beq	be74 <rb_bh_alloc+0x54>
    be44:	ldr	r4, [sp]
    be48:	add	sp, sp, #4
    be4c:	pop	{pc}		; (ldr pc, [sp], #4)
    be50:	ldr	r2, [pc, #32]	; be78 <rb_bh_alloc+0x58>
    be54:	mov	r3, #186	; 0xba
    be58:	ldr	r1, [pc, #28]	; be7c <rb_bh_alloc+0x5c>
    be5c:	ldr	r0, [pc, #28]	; be80 <rb_bh_alloc+0x60>
    be60:	add	r2, pc, r2
    be64:	add	r1, pc, r1
    be68:	add	r0, pc, r0
    be6c:	bl	48f0 <rb_lib_log@plt>
    be70:	bl	4398 <abort@plt>
    be74:	bl	495c <rb_outofmemory@plt>
    be78:	.word	0x0000e17c
    be7c:	.word	0x0000e214
    be80:	.word	0x0000e1ac

0000be84 <rb_bh_free>:
    be84:	cmp	r0, #0
    be88:	str	r4, [sp, #-8]!
    be8c:	str	lr, [sp, #4]
    be90:	beq	beb4 <rb_bh_free+0x30>
    be94:	cmp	r1, #0
    be98:	beq	bec8 <rb_bh_free+0x44>
    be9c:	mov	r0, r1
    bea0:	bl	46d4 <free@plt>
    bea4:	mov	r0, #0
    bea8:	ldr	r4, [sp]
    beac:	add	sp, sp, #4
    beb0:	pop	{pc}		; (ldr pc, [sp], #4)
    beb4:	ldr	r0, [pc, #32]	; bedc <rb_bh_free+0x58>
    beb8:	add	r0, pc, r0
    bebc:	bl	48f0 <rb_lib_log@plt>
    bec0:	mov	r0, #1
    bec4:	b	bea8 <rb_bh_free+0x24>
    bec8:	ldr	r0, [pc, #16]	; bee0 <rb_bh_free+0x5c>
    becc:	add	r0, pc, r0
    bed0:	bl	48f0 <rb_lib_log@plt>
    bed4:	mov	r0, #1
    bed8:	b	bea8 <rb_bh_free+0x24>
    bedc:	.word	0x0000e1e0
    bee0:	.word	0x0000e1ec

0000bee4 <rb_bh_destroy>:
    bee4:	str	r4, [sp, #-8]!
    bee8:	subs	r4, r0, #0
    beec:	moveq	r0, #1
    bef0:	str	lr, [sp, #4]
    bef4:	beq	bf58 <rb_bh_destroy+0x74>
    bef8:	ldr	r3, [pc, #100]	; bf64 <rb_bh_destroy+0x80>
    befc:	ldr	ip, [r4, #4]
    bf00:	ldr	r2, [r4, #8]
    bf04:	ldr	r1, [pc, r3]
    bf08:	ldr	r0, [r4, #44]	; 0x2c
    bf0c:	cmp	r2, #0
    bf10:	strne	ip, [r2, #4]
    bf14:	streq	ip, [r1, #4]
    bf18:	ldr	r3, [r4, #4]
    bf1c:	cmp	r3, #0
    bf20:	strne	r2, [r3, #8]
    bf24:	ldr	r3, [r1, #8]
    bf28:	streq	r2, [r1]
    bf2c:	mov	r2, #0
    bf30:	cmp	r0, r2
    bf34:	str	r2, [r4, #4]
    bf38:	str	r2, [r4, #8]
    bf3c:	sub	r3, r3, #1
    bf40:	str	r3, [r1, #8]
    bf44:	beq	bf4c <rb_bh_destroy+0x68>
    bf48:	bl	46d4 <free@plt>
    bf4c:	mov	r0, r4
    bf50:	bl	46d4 <free@plt>
    bf54:	mov	r0, #0
    bf58:	ldr	r4, [sp]
    bf5c:	add	sp, sp, #4
    bf60:	pop	{pc}		; (ldr pc, [sp], #4)
    bf64:	.word	0x00032a9c

0000bf68 <rb_bh_usage>:
    bf68:	cmp	r1, #0
    bf6c:	ldr	r0, [sp]
    bf70:	movne	ip, #0
    bf74:	strne	ip, [r1]
    bf78:	cmp	r2, #0
    bf7c:	movne	r1, #0
    bf80:	strne	r1, [r2]
    bf84:	cmp	r3, #0
    bf88:	movne	r2, #0
    bf8c:	strne	r2, [r3]
    bf90:	cmp	r0, #0
    bf94:	beq	bfa4 <rb_bh_usage+0x3c>
    bf98:	ldr	r3, [pc, #8]	; bfa8 <rb_bh_usage+0x40>
    bf9c:	add	r3, pc, r3
    bfa0:	str	r3, [r0]
    bfa4:	bx	lr
    bfa8:	.word	0x0000e13c

0000bfac <rb_bh_usage_all>:
    bfac:	strd	r4, [sp, #-24]!	; 0xffffffe8
    bfb0:	subs	r5, r0, #0
    bfb4:	strd	r6, [sp, #8]
    bfb8:	str	r8, [sp, #16]
    bfbc:	str	lr, [sp, #20]
    bfc0:	sub	sp, sp, #8
    bfc4:	beq	c048 <rb_bh_usage_all+0x9c>
    bfc8:	ldr	r3, [pc, #144]	; c060 <rb_bh_usage_all+0xb4>
    bfcc:	add	r3, pc, r3
    bfd0:	ldr	r3, [r3]
    bfd4:	ldr	r4, [r3]
    bfd8:	cmp	r4, #0
    bfdc:	beq	c048 <rb_bh_usage_all+0x9c>
    bfe0:	ldr	r7, [pc, #124]	; c064 <rb_bh_usage_all+0xb8>
    bfe4:	mov	r6, r1
    bfe8:	add	r7, pc, r7
    bfec:	b	c00c <rb_bh_usage_all+0x60>
    bff0:	mov	r7, ip
    bff4:	str	ip, [sp]
    bff8:	str	r6, [sp, #4]
    bffc:	blx	r5
    c000:	ldr	r4, [r4, #8]
    c004:	cmp	r4, #0
    c008:	beq	c048 <rb_bh_usage_all+0x9c>
    c00c:	ldr	r2, [r4]
    c010:	ldr	r1, [r2, #28]
    c014:	ldr	lr, [r2, #40]	; 0x28
    c018:	ldr	ip, [r2, #44]	; 0x2c
    c01c:	ldrd	r2, [r2, #12]
    c020:	cmp	ip, #0
    c024:	mul	r3, r3, r1
    c028:	mov	r1, lr
    c02c:	sub	r8, r3, lr
    c030:	mul	r3, r2, r3
    c034:	mov	r0, r8
    c038:	mul	r2, r8, r2
    c03c:	bne	bff0 <rb_bh_usage_all+0x44>
    c040:	str	r7, [sp]
    c044:	b	bff8 <rb_bh_usage_all+0x4c>
    c048:	add	sp, sp, #8
    c04c:	ldrd	r4, [sp]
    c050:	ldrd	r6, [sp, #8]
    c054:	ldr	r8, [sp, #16]
    c058:	add	sp, sp, #20
    c05c:	pop	{pc}		; (ldr pc, [sp], #4)
    c060:	.word	0x000329d4
    c064:	.word	0x0000e100

0000c068 <rb_bh_total_usage>:
    c068:	ldr	r3, [pc, #128]	; c0f0 <rb_bh_total_usage+0x88>
    c06c:	strd	r4, [sp, #-20]!	; 0xffffffec
    c070:	add	r3, pc, r3
    c074:	ldr	r3, [r3]
    c078:	ldr	ip, [r3]
    c07c:	strd	r6, [sp, #8]
    c080:	str	lr, [sp, #16]
    c084:	cmp	ip, #0
    c088:	beq	c0e4 <rb_bh_total_usage+0x7c>
    c08c:	mov	r5, #0
    c090:	mov	r6, r5
    c094:	ldr	r2, [ip]
    c098:	ldr	ip, [ip, #8]
    c09c:	ldr	r4, [r2, #12]
    c0a0:	ldr	r3, [r2, #16]
    c0a4:	cmp	ip, #0
    c0a8:	ldr	r7, [r2, #28]
    c0ac:	ldr	lr, [r2, #40]	; 0x28
    c0b0:	mul	r3, r3, r7
    c0b4:	sub	r2, r3, lr
    c0b8:	mla	r6, r4, r3, r6
    c0bc:	mla	r5, r4, r2, r5
    c0c0:	bne	c094 <rb_bh_total_usage+0x2c>
    c0c4:	cmp	r0, #0
    c0c8:	strne	r6, [r0]
    c0cc:	cmp	r1, #0
    c0d0:	ldrd	r6, [sp, #8]
    c0d4:	strne	r5, [r1]
    c0d8:	ldrd	r4, [sp]
    c0dc:	add	sp, sp, #16
    c0e0:	pop	{pc}		; (ldr pc, [sp], #4)
    c0e4:	mov	r5, ip
    c0e8:	mov	r6, ip
    c0ec:	b	c0c4 <rb_bh_total_usage+0x5c>
    c0f0:	.word	0x00032930

0000c0f4 <inetntoa>:
    c0f4:	ldr	r3, [pc, #232]	; c1e4 <inetntoa+0xf0>
    c0f8:	ldrb	r2, [r0]
    c0fc:	add	r3, pc, r3
    c100:	ldr	r1, [r3, r2, lsl #2]
    c104:	ldrb	r2, [r1]
    c108:	cmp	r2, #0
    c10c:	beq	c1d8 <inetntoa+0xe4>
    c110:	ldr	r3, [pc, #208]	; c1e8 <inetntoa+0xf4>
    c114:	add	r3, pc, r3
    c118:	strb	r2, [r3], #1
    c11c:	ldrb	r2, [r1, #1]!
    c120:	cmp	r2, #0
    c124:	bne	c118 <inetntoa+0x24>
    c128:	mov	r1, #46	; 0x2e
    c12c:	ldr	r2, [pc, #184]	; c1ec <inetntoa+0xf8>
    c130:	strb	r1, [r3], #1
    c134:	ldrb	r1, [r0, #1]
    c138:	add	r2, pc, r2
    c13c:	ldr	r1, [r2, r1, lsl #2]
    c140:	ldrb	r2, [r1]
    c144:	cmp	r2, #0
    c148:	beq	c15c <inetntoa+0x68>
    c14c:	strb	r2, [r3], #1
    c150:	ldrb	r2, [r1, #1]!
    c154:	cmp	r2, #0
    c158:	bne	c14c <inetntoa+0x58>
    c15c:	mov	r1, #46	; 0x2e
    c160:	ldr	r2, [pc, #136]	; c1f0 <inetntoa+0xfc>
    c164:	strb	r1, [r3], #1
    c168:	ldrb	r1, [r0, #2]
    c16c:	add	r2, pc, r2
    c170:	ldr	r1, [r2, r1, lsl #2]
    c174:	ldrb	r2, [r1]
    c178:	cmp	r2, #0
    c17c:	beq	c190 <inetntoa+0x9c>
    c180:	strb	r2, [r3], #1
    c184:	ldrb	r2, [r1, #1]!
    c188:	cmp	r2, #0
    c18c:	bne	c180 <inetntoa+0x8c>
    c190:	mov	r1, #46	; 0x2e
    c194:	ldr	r2, [pc, #88]	; c1f4 <inetntoa+0x100>
    c198:	strb	r1, [r3], #1
    c19c:	ldrb	r1, [r0, #3]
    c1a0:	add	r2, pc, r2
    c1a4:	ldr	r1, [r2, r1, lsl #2]
    c1a8:	ldrb	r2, [r1]
    c1ac:	cmp	r2, #0
    c1b0:	beq	c1c4 <inetntoa+0xd0>
    c1b4:	strb	r2, [r3], #1
    c1b8:	ldrb	r2, [r1, #1]!
    c1bc:	cmp	r2, #0
    c1c0:	bne	c1b4 <inetntoa+0xc0>
    c1c4:	ldr	r0, [pc, #44]	; c1f8 <inetntoa+0x104>
    c1c8:	mov	r2, #0
    c1cc:	strb	r2, [r3]
    c1d0:	add	r0, pc, r0
    c1d4:	bx	lr
    c1d8:	ldr	r3, [pc, #28]	; c1fc <inetntoa+0x108>
    c1dc:	add	r3, pc, r3
    c1e0:	b	c128 <inetntoa+0x34>
    c1e4:	.word	0x0001f940
    c1e8:	.word	0x00032890
    c1ec:	.word	0x0001f904
    c1f0:	.word	0x0001f8d0
    c1f4:	.word	0x0001f89c
    c1f8:	.word	0x000327d4
    c1fc:	.word	0x000327c8

0000c200 <rb_unsupported_event>:
    c200:	mov	r0, #0
    c204:	bx	lr

0000c208 <rb_checktimeouts>:
    c208:	ldr	r3, [pc, #256]	; c310 <rb_checktimeouts+0x108>
    c20c:	add	r3, pc, r3
    c210:	ldr	r3, [r3, #16]
    c214:	cmp	r3, #0
    c218:	bxeq	lr
    c21c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    c220:	ldr	r4, [r3]
    c224:	strd	r6, [sp, #8]
    c228:	ldr	r7, [pc, #228]	; c314 <rb_checktimeouts+0x10c>
    c22c:	strd	r8, [sp, #16]
    c230:	ldr	r9, [pc, #224]	; c318 <rb_checktimeouts+0x110>
    c234:	strd	sl, [sp, #24]
    c238:	ldr	r5, [r4]
    c23c:	add	r7, pc, r7
    c240:	str	lr, [sp, #32]
    c244:	sub	sp, sp, #4
    c248:	ldr	r8, [pc, #204]	; c31c <rb_checktimeouts+0x114>
    c24c:	add	r9, pc, r9
    c250:	ldr	r6, [r3, #8]
    c254:	cmp	r5, #0
    c258:	add	r8, pc, r8
    c25c:	beq	c2cc <rb_checktimeouts+0xc4>
    c260:	ldrb	r3, [r5, #16]
    c264:	tst	r3, #1
    c268:	beq	c2cc <rb_checktimeouts+0xc4>
    c26c:	ldr	sl, [r4, #16]
    c270:	bl	47d0 <rb_current_time@plt>
    c274:	cmp	sl, r0
    c278:	bge	c2cc <rb_checktimeouts+0xc4>
    c27c:	ldr	r3, [r4, #8]
    c280:	mov	r0, r4
    c284:	ldr	r2, [r4, #12]
    c288:	ldrd	sl, [r4, #20]
    c28c:	cmp	r2, #0
    c290:	strne	r3, [r2, #4]
    c294:	ldrne	r3, [r4, #8]
    c298:	streq	r3, [r8, #20]
    c29c:	cmp	r3, #0
    c2a0:	strne	r2, [r3, #8]
    c2a4:	ldr	r3, [r7, #24]
    c2a8:	streq	r2, [r9, #16]
    c2ac:	mov	r2, #0
    c2b0:	str	r2, [r5, #44]	; 0x2c
    c2b4:	sub	r3, r3, #1
    c2b8:	str	r3, [r7, #24]
    c2bc:	bl	46d4 <free@plt>
    c2c0:	mov	r1, fp
    c2c4:	mov	r0, r5
    c2c8:	blx	sl
    c2cc:	cmp	r6, #0
    c2d0:	beq	c2f4 <rb_checktimeouts+0xec>
    c2d4:	mov	r3, r6
    c2d8:	ldr	r6, [r6, #8]
    c2dc:	ldr	r4, [r3]
    c2e0:	ldr	r5, [r4]
    c2e4:	cmp	r5, #0
    c2e8:	bne	c260 <rb_checktimeouts+0x58>
    c2ec:	cmp	r6, #0
    c2f0:	bne	c2d4 <rb_checktimeouts+0xcc>
    c2f4:	add	sp, sp, #4
    c2f8:	ldrd	r4, [sp]
    c2fc:	ldrd	r6, [sp, #8]
    c300:	ldrd	r8, [sp, #16]
    c304:	ldrd	sl, [sp, #24]
    c308:	add	sp, sp, #32
    c30c:	pop	{pc}		; (ldr pc, [sp], #4)
    c310:	.word	0x00032798
    c314:	.word	0x00032768
    c318:	.word	0x00032758
    c31c:	.word	0x0003274c

0000c320 <inet_pton6>:
    c320:	strd	r4, [sp, #-36]!	; 0xffffffdc
    c324:	mov	r4, r0
    c328:	mov	r3, #0
    c32c:	strd	r6, [sp, #8]
    c330:	mov	r2, #0
    c334:	strd	r8, [sp, #16]
    c338:	strd	sl, [sp, #24]
    c33c:	str	lr, [sp, #32]
    c340:	sub	sp, sp, #44	; 0x2c
    c344:	ldrb	r0, [r0]
    c348:	add	r6, sp, #24
    c34c:	strd	r2, [sp, #24]
    c350:	strd	r2, [r6, #8]
    c354:	add	r3, sp, #40	; 0x28
    c358:	str	r6, [sp]
    c35c:	cmp	r0, #58	; 0x3a
    c360:	str	r3, [sp, #4]
    c364:	str	r1, [sp, #8]
    c368:	beq	c534 <inet_pton6+0x214>
    c36c:	ldr	r8, [pc, #636]	; c5f0 <inet_pton6+0x2d0>
    c370:	mov	sl, #0
    c374:	mov	r9, r4
    c378:	bl	480c <__ctype_tolower_loc@plt>
    c37c:	ldr	r7, [r0]
    c380:	mov	fp, sl
    c384:	str	sl, [sp, #12]
    c388:	add	r8, pc, r8
    c38c:	ldrb	r3, [r4], #1
    c390:	ldr	r5, [r7, r3, lsl #2]
    c394:	cmp	r5, #0
    c398:	beq	c3d4 <inet_pton6+0xb4>
    c39c:	mov	r1, r5
    c3a0:	mov	r0, r8
    c3a4:	bl	4584 <strchr@plt>
    c3a8:	cmp	r0, #0
    c3ac:	beq	c49c <inet_pton6+0x17c>
    c3b0:	sub	r0, r0, r8
    c3b4:	orr	sl, r0, sl, lsl #4
    c3b8:	cmp	sl, #65536	; 0x10000
    c3bc:	bcs	c47c <inet_pton6+0x15c>
    c3c0:	ldrb	r3, [r4], #1
    c3c4:	mov	fp, #1
    c3c8:	ldr	r5, [r7, r3, lsl #2]
    c3cc:	cmp	r5, #0
    c3d0:	bne	c39c <inet_pton6+0x7c>
    c3d4:	cmp	fp, #0
    c3d8:	beq	c3f8 <inet_pton6+0xd8>
    c3dc:	ldm	sp, {r1, r3}
    c3e0:	add	r2, r1, #2
    c3e4:	cmp	r3, r2
    c3e8:	bcc	c47c <inet_pton6+0x15c>
    c3ec:	rev16	r3, sl
    c3f0:	str	r2, [sp]
    c3f4:	strh	r3, [r1]
    c3f8:	ldr	r3, [sp, #12]
    c3fc:	cmp	r3, #0
    c400:	beq	c46c <inet_pton6+0x14c>
    c404:	ldr	r2, [sp]
    c408:	ldr	r1, [sp, #4]
    c40c:	sub	r3, r2, r3
    c410:	cmp	r2, r1
    c414:	beq	c47c <inet_pton6+0x15c>
    c418:	cmp	r3, #0
    c41c:	ble	c444 <inet_pton6+0x124>
    c420:	mov	sl, r1
    c424:	ldr	r1, [sp, #12]
    c428:	mov	r8, r2
    c42c:	mov	r2, #0
    c430:	ldrb	r3, [r8, #-1]!
    c434:	cmp	r1, r8
    c438:	strb	r3, [sl, #-1]!
    c43c:	strb	r2, [r8]
    c440:	bne	c430 <inet_pton6+0x110>
    c444:	ldr	ip, [sp, #8]
    c448:	mov	r0, #1
    c44c:	ldr	r3, [sp, #24]
    c450:	ldmib	r6, {r1, r2}
    c454:	str	r3, [ip]
    c458:	ldr	r3, [r6, #12]
    c45c:	str	r1, [ip, #4]
    c460:	str	r2, [ip, #8]
    c464:	str	r3, [ip, #12]
    c468:	b	c480 <inet_pton6+0x160>
    c46c:	ldr	r3, [sp]
    c470:	ldr	r2, [sp, #4]
    c474:	cmp	r3, r2
    c478:	beq	c444 <inet_pton6+0x124>
    c47c:	mov	r0, #0
    c480:	add	sp, sp, #44	; 0x2c
    c484:	ldrd	r4, [sp]
    c488:	ldrd	r6, [sp, #8]
    c48c:	ldrd	r8, [sp, #16]
    c490:	ldrd	sl, [sp, #24]
    c494:	add	sp, sp, #32
    c498:	pop	{pc}		; (ldr pc, [sp], #4)
    c49c:	cmp	r5, #58	; 0x3a
    c4a0:	beq	c548 <inet_pton6+0x228>
    c4a4:	ldrb	r3, [r4]
    c4a8:	sub	r5, r5, #46	; 0x2e
    c4ac:	clz	r5, r5
    c4b0:	lsr	r5, r5, #5
    c4b4:	cmp	r3, #0
    c4b8:	moveq	r5, #0
    c4bc:	cmp	r5, #0
    c4c0:	beq	c38c <inet_pton6+0x6c>
    c4c4:	ldr	r3, [sp]
    c4c8:	add	r4, r3, #4
    c4cc:	ldr	r3, [sp, #4]
    c4d0:	cmp	r4, r3
    c4d4:	bhi	c47c <inet_pton6+0x15c>
    c4d8:	mov	lr, r0
    c4dc:	mov	r1, r0
    c4e0:	strb	r0, [sp, #20]
    c4e4:	add	ip, sp, #20
    c4e8:	mov	r0, #10
    c4ec:	ldrb	r3, [r9], #1
    c4f0:	cmp	r3, #0
    c4f4:	sub	r2, r3, #48	; 0x30
    c4f8:	beq	c5d4 <inet_pton6+0x2b4>
    c4fc:	cmp	r2, #9
    c500:	bhi	c5a4 <inet_pton6+0x284>
    c504:	ldrb	r3, [ip]
    c508:	smlabb	r2, r0, r3, r2
    c50c:	cmp	r2, #255	; 0xff
    c510:	bhi	c47c <inet_pton6+0x15c>
    c514:	cmp	r1, #0
    c518:	strb	r2, [ip]
    c51c:	bne	c4ec <inet_pton6+0x1cc>
    c520:	add	lr, lr, #1
    c524:	mov	r1, #1
    c528:	cmp	lr, #4
    c52c:	ble	c4ec <inet_pton6+0x1cc>
    c530:	b	c47c <inet_pton6+0x15c>
    c534:	ldrb	r3, [r4, #1]
    c538:	cmp	r3, #58	; 0x3a
    c53c:	bne	c47c <inet_pton6+0x15c>
    c540:	add	r4, r4, #1
    c544:	b	c36c <inet_pton6+0x4c>
    c548:	cmp	fp, #0
    c54c:	bne	c56c <inet_pton6+0x24c>
    c550:	ldr	r3, [sp, #12]
    c554:	cmp	r3, #0
    c558:	bne	c47c <inet_pton6+0x15c>
    c55c:	ldr	r3, [sp]
    c560:	mov	r9, r4
    c564:	str	r3, [sp, #12]
    c568:	b	c38c <inet_pton6+0x6c>
    c56c:	ldrb	r3, [r4]
    c570:	cmp	r3, #0
    c574:	beq	c47c <inet_pton6+0x15c>
    c578:	ldm	sp, {r1, r2}
    c57c:	add	r3, r1, #2
    c580:	cmp	r2, r3
    c584:	bcc	c47c <inet_pton6+0x15c>
    c588:	rev16	r2, sl
    c58c:	mov	fp, r0
    c590:	str	r3, [sp]
    c594:	mov	sl, r0
    c598:	mov	r9, r4
    c59c:	strh	r2, [r1]
    c5a0:	b	c38c <inet_pton6+0x6c>
    c5a4:	cmp	r3, #46	; 0x2e
    c5a8:	movne	r1, #0
    c5ac:	andeq	r1, r1, #1
    c5b0:	eor	r1, r1, #1
    c5b4:	cmp	lr, #4
    c5b8:	movne	r3, r1
    c5bc:	orreq	r3, r1, #1
    c5c0:	subs	r1, r3, #0
    c5c4:	bne	c47c <inet_pton6+0x15c>
    c5c8:	add	ip, ip, #1
    c5cc:	strb	r3, [ip]
    c5d0:	b	c4ec <inet_pton6+0x1cc>
    c5d4:	cmp	lr, #3
    c5d8:	ble	c47c <inet_pton6+0x15c>
    c5dc:	ldr	r2, [sp]
    c5e0:	str	r4, [sp]
    c5e4:	ldr	r3, [sp, #20]
    c5e8:	str	r3, [r2]
    c5ec:	b	c3f8 <inet_pton6+0xd8>
    c5f0:	.word	0x0000dd70

0000c5f4 <rb_getmaxconnect>:
    c5f4:	ldr	r3, [pc, #16]	; c60c <rb_getmaxconnect+0x18>
    c5f8:	ldr	r2, [pc, #16]	; c610 <rb_getmaxconnect+0x1c>
    c5fc:	add	r3, pc, r3
    c600:	ldr	r3, [r3, r2]
    c604:	ldr	r0, [r3]
    c608:	bx	lr
    c60c:	.word	0x0001f9fc
    c610:	.word	0x0000039c

0000c614 <rb_set_buffers>:
    c614:	strd	r4, [sp, #-16]!
    c618:	subs	r4, r0, #0
    c61c:	str	r6, [sp, #8]
    c620:	str	lr, [sp, #12]
    c624:	sub	sp, sp, #16
    c628:	str	r1, [sp, #12]
    c62c:	beq	c658 <rb_set_buffers+0x44>
    c630:	mov	r5, #4
    c634:	add	r6, sp, #12
    c638:	mov	r3, r6
    c63c:	mov	r2, #8
    c640:	mov	r1, #1
    c644:	str	r5, [sp]
    c648:	ldr	r0, [r4, #12]
    c64c:	bl	4c74 <setsockopt@plt>
    c650:	cmp	r0, #0
    c654:	beq	c670 <rb_set_buffers+0x5c>
    c658:	mov	r0, #0
    c65c:	add	sp, sp, #16
    c660:	ldrd	r4, [sp]
    c664:	ldr	r6, [sp, #8]
    c668:	add	sp, sp, #12
    c66c:	pop	{pc}		; (ldr pc, [sp], #4)
    c670:	mov	r3, r6
    c674:	mov	r2, #7
    c678:	str	r5, [sp]
    c67c:	mov	r1, #1
    c680:	ldr	r0, [r4, #12]
    c684:	bl	4c74 <setsockopt@plt>
    c688:	clz	r0, r0
    c68c:	lsr	r0, r0, #5
    c690:	b	c65c <rb_set_buffers+0x48>

0000c694 <rb_settimeout>:
    c694:	strd	r4, [sp, #-32]!	; 0xffffffe0
    c698:	strd	r6, [sp, #8]
    c69c:	subs	r6, r0, #0
    c6a0:	ldr	r7, [pc, #384]	; c828 <rb_settimeout+0x194>
    c6a4:	strd	r8, [sp, #16]
    c6a8:	str	sl, [sp, #24]
    c6ac:	str	lr, [sp, #28]
    c6b0:	add	r7, pc, r7
    c6b4:	beq	c73c <rb_settimeout+0xa8>
    c6b8:	cmp	r2, #0
    c6bc:	mov	r9, r3
    c6c0:	ldr	r4, [r6, #44]	; 0x2c
    c6c4:	mov	r8, r2
    c6c8:	mov	r5, r1
    c6cc:	beq	c754 <rb_settimeout+0xc0>
    c6d0:	cmp	r4, #0
    c6d4:	beq	c7cc <rb_settimeout+0x138>
    c6d8:	str	r6, [r4]
    c6dc:	bl	47d0 <rb_current_time@plt>
    c6e0:	ldr	r3, [pc, #324]	; c82c <rb_settimeout+0x198>
    c6e4:	mov	r2, #0
    c6e8:	add	r5, r0, r5
    c6ec:	add	r0, r4, #4
    c6f0:	str	r4, [r4, #4]
    c6f4:	str	r2, [r4, #8]
    c6f8:	str	r5, [r4, #16]
    c6fc:	strd	r8, [r4, #20]
    c700:	add	r3, pc, r3
    c704:	ldr	r2, [r3, #16]
    c708:	cmp	r2, #0
    c70c:	str	r2, [r4, #12]
    c710:	strne	r0, [r2, #4]
    c714:	beq	c7bc <rb_settimeout+0x128>
    c718:	ldr	r4, [pc, #272]	; c830 <rb_settimeout+0x19c>
    c71c:	add	r4, pc, r4
    c720:	ldr	r3, [r4, #24]
    c724:	str	r0, [r4, #16]
    c728:	ldr	r2, [r4, #28]
    c72c:	add	r3, r3, #1
    c730:	cmp	r2, #0
    c734:	str	r3, [r4, #24]
    c738:	beq	c7e8 <rb_settimeout+0x154>
    c73c:	ldrd	r4, [sp]
    c740:	ldrd	r6, [sp, #8]
    c744:	ldrd	r8, [sp, #16]
    c748:	ldr	sl, [sp, #24]
    c74c:	add	sp, sp, #28
    c750:	pop	{pc}		; (ldr pc, [sp], #4)
    c754:	cmp	r4, #0
    c758:	beq	c73c <rb_settimeout+0xa8>
    c75c:	ldr	r3, [r4, #8]
    c760:	ldr	r2, [r4, #12]
    c764:	cmp	r2, #0
    c768:	beq	c818 <rb_settimeout+0x184>
    c76c:	str	r3, [r2, #4]
    c770:	ldr	r3, [r4, #8]
    c774:	cmp	r3, #0
    c778:	strne	r2, [r3, #8]
    c77c:	beq	c808 <rb_settimeout+0x174>
    c780:	ldr	r5, [pc, #172]	; c834 <rb_settimeout+0x1a0>
    c784:	mov	r0, r4
    c788:	add	r5, pc, r5
    c78c:	ldr	r4, [r5, #24]
    c790:	sub	r4, r4, #1
    c794:	str	r4, [r5, #24]
    c798:	bl	46d4 <free@plt>
    c79c:	mov	r3, #0
    c7a0:	cmp	r4, r3
    c7a4:	str	r3, [r6, #44]	; 0x2c
    c7a8:	bne	c73c <rb_settimeout+0xa8>
    c7ac:	ldr	r0, [r5, #28]
    c7b0:	bl	4470 <rb_event_delete@plt>
    c7b4:	str	r4, [r5, #28]
    c7b8:	b	c73c <rb_settimeout+0xa8>
    c7bc:	ldr	r2, [r3, #20]
    c7c0:	cmp	r2, #0
    c7c4:	streq	r0, [r3, #20]
    c7c8:	b	c718 <rb_settimeout+0x84>
    c7cc:	mov	r1, #28
    c7d0:	mov	r0, #1
    c7d4:	bl	45c0 <calloc@plt>
    c7d8:	subs	r4, r0, #0
    c7dc:	strne	r4, [r6, #44]	; 0x2c
    c7e0:	bne	c6d8 <rb_settimeout+0x44>
    c7e4:	bl	495c <rb_outofmemory@plt>
    c7e8:	ldr	r1, [pc, #72]	; c838 <rb_settimeout+0x1a4>
    c7ec:	mov	r3, #5
    c7f0:	ldr	r0, [pc, #68]	; c83c <rb_settimeout+0x1a8>
    c7f4:	ldr	r1, [r7, r1]
    c7f8:	add	r0, pc, r0
    c7fc:	bl	4adc <rb_event_add@plt>
    c800:	str	r0, [r4, #28]
    c804:	b	c73c <rb_settimeout+0xa8>
    c808:	ldr	r3, [pc, #48]	; c840 <rb_settimeout+0x1ac>
    c80c:	add	r3, pc, r3
    c810:	str	r2, [r3, #16]
    c814:	b	c780 <rb_settimeout+0xec>
    c818:	ldr	r1, [pc, #36]	; c844 <rb_settimeout+0x1b0>
    c81c:	add	r1, pc, r1
    c820:	str	r3, [r1, #20]
    c824:	b	c774 <rb_settimeout+0xe0>
    c828:	.word	0x0001f948
    c82c:	.word	0x000322a4
    c830:	.word	0x00032288
    c834:	.word	0x0003221c
    c838:	.word	0x0000034c
    c83c:	.word	0x0000d91c
    c840:	.word	0x00032198
    c844:	.word	0x00032188

0000c848 <rb_sctp_bindx>:
    c848:	mvn	r0, #0
    c84c:	bx	lr

0000c850 <rb_inet_get_proto>:
    c850:	mov	r0, #6
    c854:	bx	lr

0000c858 <rb_connect_callback>:
    c858:	strd	r4, [sp, #-32]!	; 0xffffffe0
    c85c:	subs	r4, r0, #0
    c860:	strd	r6, [sp, #8]
    c864:	strd	r8, [sp, #16]
    c868:	str	sl, [sp, #24]
    c86c:	str	lr, [sp, #28]
    c870:	beq	c8ec <rb_connect_callback+0x94>
    c874:	ldr	r5, [r4, #48]	; 0x30
    c878:	cmp	r5, #0
    c87c:	beq	c8ec <rb_connect_callback+0x94>
    c880:	ldr	r7, [r5, #260]	; 0x104
    c884:	cmp	r7, #0
    c888:	beq	c8ec <rb_connect_callback+0x94>
    c88c:	mov	r6, r1
    c890:	bl	4cbc <__errno_location@plt>
    c894:	mov	r8, r0
    c898:	ldr	sl, [r5, #264]	; 0x108
    c89c:	mov	r0, #0
    c8a0:	mov	r3, r0
    c8a4:	mov	r2, r0
    c8a8:	ldr	r9, [r8]
    c8ac:	mov	r1, r0
    c8b0:	str	r0, [r5, #260]	; 0x104
    c8b4:	mov	r0, r4
    c8b8:	bl	43bc <rb_settimeout@plt>
    c8bc:	mov	r2, sl
    c8c0:	mov	r1, r6
    c8c4:	ldr	sl, [sp, #24]
    c8c8:	mov	r0, r4
    c8cc:	mov	r3, r7
    c8d0:	ldrd	r4, [sp]
    c8d4:	ldrd	r6, [sp, #8]
    c8d8:	ldr	lr, [sp, #28]
    c8dc:	str	r9, [r8]
    c8e0:	ldrd	r8, [sp, #16]
    c8e4:	add	sp, sp, #32
    c8e8:	bx	r3
    c8ec:	ldrd	r4, [sp]
    c8f0:	ldrd	r6, [sp, #8]
    c8f4:	ldrd	r8, [sp, #16]
    c8f8:	ldr	sl, [sp, #24]
    c8fc:	add	sp, sp, #28
    c900:	pop	{pc}		; (ldr pc, [sp], #4)

0000c904 <rb_connect_outcome>:
    c904:	mov	r3, #0
    c908:	mov	r2, #4
    c90c:	strd	r4, [sp, #-12]!
    c910:	str	lr, [sp, #8]
    c914:	sub	sp, sp, #20
    c918:	subs	r4, r0, #0
    c91c:	str	r3, [sp, #8]
    c920:	str	r2, [sp, #12]
    c924:	beq	c978 <rb_connect_outcome+0x74>
    c928:	ldr	r3, [r4, #48]	; 0x30
    c92c:	cmp	r3, #0
    c930:	beq	c978 <rb_connect_outcome+0x74>
    c934:	ldr	r3, [r3, #260]	; 0x104
    c938:	cmp	r3, #0
    c93c:	beq	c978 <rb_connect_outcome+0x74>
    c940:	add	r0, sp, #12
    c944:	add	r3, sp, #8
    c948:	mov	r1, #1
    c94c:	str	r0, [sp]
    c950:	ldr	r0, [r4, #12]
    c954:	bl	4c50 <getsockopt@plt>
    c958:	cmp	r0, #0
    c95c:	blt	c990 <rb_connect_outcome+0x8c>
    c960:	ldr	r5, [sp, #8]
    c964:	cmp	r5, #0
    c968:	bne	c988 <rb_connect_outcome+0x84>
    c96c:	mov	r1, r5
    c970:	mov	r0, r4
    c974:	bl	c858 <rb_connect_callback>
    c978:	add	sp, sp, #20
    c97c:	ldrd	r4, [sp]
    c980:	add	sp, sp, #8
    c984:	pop	{pc}		; (ldr pc, [sp], #4)
    c988:	bl	4cbc <__errno_location@plt>
    c98c:	str	r5, [r0]
    c990:	mov	r0, r4
    c994:	mov	r1, #4
    c998:	bl	c858 <rb_connect_callback>
    c99c:	add	sp, sp, #20
    c9a0:	ldrd	r4, [sp]
    c9a4:	add	sp, sp, #8
    c9a8:	pop	{pc}		; (ldr pc, [sp], #4)

0000c9ac <rb_connect_timeout>:
    c9ac:	mov	r1, #3
    c9b0:	b	c858 <rb_connect_callback>

0000c9b4 <rb_connect_sctp>:
    c9b4:	mov	r1, #4
    c9b8:	b	c858 <rb_connect_callback>

0000c9bc <rb_connect_sockaddr>:
    c9bc:	subs	r3, r0, #0
    c9c0:	beq	c9ec <rb_connect_sockaddr+0x30>
    c9c4:	mov	r0, r1
    c9c8:	ldr	r1, [r3, #48]	; 0x30
    c9cc:	str	r4, [sp, #-8]!
    c9d0:	str	lr, [sp, #4]
    c9d4:	add	r1, r1, #128	; 0x80
    c9d8:	bl	47e8 <memcpy@plt>
    c9dc:	ldr	r4, [sp]
    c9e0:	add	sp, sp, #4
    c9e4:	mov	r0, #1
    c9e8:	pop	{pc}		; (ldr pc, [sp], #4)
    c9ec:	mov	r0, r3
    c9f0:	bx	lr

0000c9f4 <rb_errstr>:
    c9f4:	cmp	r0, #6
    c9f8:	bhi	ca10 <rb_errstr+0x1c>
    c9fc:	ldr	r3, [pc, #24]	; ca1c <rb_errstr+0x28>
    ca00:	add	r3, pc, r3
    ca04:	add	r0, r3, r0, lsl #2
    ca08:	ldr	r0, [r0, #1024]	; 0x400
    ca0c:	bx	lr
    ca10:	ldr	r0, [pc, #8]	; ca20 <rb_errstr+0x2c>
    ca14:	add	r0, pc, r0
    ca18:	bx	lr
    ca1c:	.word	0x0001f03c
    ca20:	.word	0x0000d714

0000ca24 <rb_listen>:
    ca24:	strd	r4, [sp, #-16]!
    ca28:	mov	r4, r0
    ca2c:	str	r6, [sp, #8]
    ca30:	mov	r6, r2
    ca34:	str	lr, [sp, #12]
    ca38:	sub	sp, sp, #16
    ca3c:	ldrb	ip, [r0, #17]
    ca40:	str	r1, [sp, #12]
    ca44:	ldr	r0, [r0, #12]
    ca48:	bic	ip, ip, #127	; 0x7f
    ca4c:	orr	ip, ip, #20
    ca50:	strb	ip, [r4, #17]
    ca54:	bl	45b4 <listen@plt>
    ca58:	clz	r3, r0
    ca5c:	cmp	r6, #0
    ca60:	lsr	r3, r3, #5
    ca64:	moveq	r3, #0
    ca68:	mov	r5, r0
    ca6c:	cmp	r3, #0
    ca70:	bne	ca8c <rb_listen+0x68>
    ca74:	mov	r0, r5
    ca78:	add	sp, sp, #16
    ca7c:	ldrd	r4, [sp]
    ca80:	ldr	r6, [sp, #8]
    ca84:	add	sp, sp, #12
    ca88:	pop	{pc}		; (ldr pc, [sp], #4)
    ca8c:	mov	ip, #4
    ca90:	add	r3, sp, #12
    ca94:	ldr	r0, [r4, #12]
    ca98:	mov	r2, #9
    ca9c:	mov	r1, #6
    caa0:	str	ip, [sp]
    caa4:	bl	4c74 <setsockopt@plt>
    caa8:	b	ca74 <rb_listen+0x50>

0000caac <rb_fdlist_init>:
    caac:	ldr	r3, [pc, #156]	; cb50 <rb_fdlist_init+0xa4>
    cab0:	strd	r4, [sp, #-16]!
    cab4:	add	r3, pc, r3
    cab8:	ldr	r3, [r3, #32]
    cabc:	str	r6, [sp, #8]
    cac0:	mov	r6, r2
    cac4:	ldr	r2, [pc, #136]	; cb54 <rb_fdlist_init+0xa8>
    cac8:	str	lr, [sp, #12]
    cacc:	cmp	r3, #0
    cad0:	add	r2, pc, r2
    cad4:	bne	cb20 <rb_fdlist_init+0x74>
    cad8:	ldr	r3, [pc, #120]	; cb58 <rb_fdlist_init+0xac>
    cadc:	cmp	r0, #0
    cae0:	ldr	r5, [r2, r3]
    cae4:	str	r1, [r5]
    cae8:	beq	cb10 <rb_fdlist_init+0x64>
    caec:	cmp	r1, #3
    caf0:	ble	cb10 <rb_fdlist_init+0x64>
    caf4:	mov	r4, #3
    caf8:	mov	r0, r4
    cafc:	add	r4, r4, #1
    cb00:	bl	4914 <close@plt>
    cb04:	ldr	r3, [r5]
    cb08:	cmp	r4, r3
    cb0c:	blt	caf8 <rb_fdlist_init+0x4c>
    cb10:	ldr	r3, [pc, #68]	; cb5c <rb_fdlist_init+0xb0>
    cb14:	mov	r2, #1
    cb18:	add	r3, pc, r3
    cb1c:	str	r2, [r3, #32]
    cb20:	ldr	r2, [pc, #56]	; cb60 <rb_fdlist_init+0xb4>
    cb24:	mov	r1, r6
    cb28:	mov	r0, #68	; 0x44
    cb2c:	add	r2, pc, r2
    cb30:	bl	4a88 <rb_bh_create@plt>
    cb34:	ldr	r3, [pc, #40]	; cb64 <rb_fdlist_init+0xb8>
    cb38:	ldrd	r4, [sp]
    cb3c:	ldr	r6, [sp, #8]
    cb40:	add	sp, sp, #12
    cb44:	add	r3, pc, r3
    cb48:	str	r0, [r3, #36]	; 0x24
    cb4c:	pop	{pc}		; (ldr pc, [sp], #4)
    cb50:	.word	0x00031ef0
    cb54:	.word	0x0001f528
    cb58:	.word	0x0000039c
    cb5c:	.word	0x00031e8c
    cb60:	.word	0x0000d614
    cb64:	.word	0x00031e60

0000cb68 <rb_open>:
    cb68:	asr	r3, r0, #12
    cb6c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    cb70:	cmp	r0, #0
    cb74:	strd	r6, [sp, #8]
    cb78:	mov	r7, r1
    cb7c:	mov	r6, r0
    cb80:	eor	r3, r3, r0, asr #24
    cb84:	ldr	r1, [pc, #352]	; ccec <rb_open+0x184>
    cb88:	strd	r8, [sp, #16]
    cb8c:	mov	r8, r2
    cb90:	eor	r3, r3, r0
    cb94:	str	sl, [sp, #24]
    cb98:	ubfx	r3, r3, #0, #12
    cb9c:	str	lr, [sp, #28]
    cba0:	add	r3, r3, r3, lsl #1
    cba4:	add	r1, pc, r1
    cba8:	lsl	r4, r3, #2
    cbac:	ldr	r3, [pc, #316]	; ccf0 <rb_open+0x188>
    cbb0:	ldr	r9, [r1, r3]
    cbb4:	blt	cbe4 <rb_open+0x7c>
    cbb8:	ldr	r3, [r9]
    cbbc:	ldr	r3, [r3, r4]
    cbc0:	cmp	r3, #0
    cbc4:	beq	cbe4 <rb_open+0x7c>
    cbc8:	ldr	r5, [r3]
    cbcc:	ldr	r2, [r5, #12]
    cbd0:	cmp	r6, r2
    cbd4:	beq	cc34 <rb_open+0xcc>
    cbd8:	ldr	r3, [r3, #8]
    cbdc:	cmp	r3, #0
    cbe0:	bne	cbc8 <rb_open+0x60>
    cbe4:	ldr	r3, [pc, #264]	; ccf4 <rb_open+0x18c>
    cbe8:	add	r3, pc, r3
    cbec:	ldr	r0, [r3, #36]	; 0x24
    cbf0:	bl	492c <rb_bh_alloc@plt>
    cbf4:	ldr	r2, [r9]
    cbf8:	mov	r3, #0
    cbfc:	mov	r5, r0
    cc00:	str	r0, [r5]
    cc04:	str	r3, [r0, #4]
    cc08:	str	r6, [r0, #12]
    cc0c:	ldr	r3, [r2, r4]
    cc10:	add	r1, r2, r4
    cc14:	cmp	r3, #0
    cc18:	str	r3, [r0, #8]
    cc1c:	strne	r0, [r3, #4]
    cc20:	beq	cccc <rb_open+0x164>
    cc24:	ldr	r3, [r1, #8]
    cc28:	str	r5, [r2, r4]
    cc2c:	add	r3, r3, #1
    cc30:	str	r3, [r1, #8]
    cc34:	ldrb	r3, [r5, #16]
    cc38:	tst	r3, #1
    cc3c:	bne	cca8 <rb_open+0x140>
    cc40:	orr	r3, r3, #1
    cc44:	cmp	r8, #0
    cc48:	str	r6, [r5, #12]
    cc4c:	strb	r3, [r5, #16]
    cc50:	strb	r7, [r5, #17]
    cc54:	beq	cc78 <rb_open+0x110>
    cc58:	mov	r0, #128	; 0x80
    cc5c:	bl	4980 <malloc@plt>
    cc60:	subs	r4, r0, #0
    cc64:	beq	ccdc <rb_open+0x174>
    cc68:	mov	r1, r8
    cc6c:	mov	r2, #128	; 0x80
    cc70:	bl	4680 <rb_strlcpy@plt>
    cc74:	str	r4, [r5, #24]
    cc78:	ldr	r2, [pc, #120]	; ccf8 <rb_open+0x190>
    cc7c:	add	r2, pc, r2
    cc80:	ldr	r3, [r2, #40]	; 0x28
    cc84:	add	r3, r3, #1
    cc88:	str	r3, [r2, #40]	; 0x28
    cc8c:	mov	r0, r5
    cc90:	ldrd	r4, [sp]
    cc94:	ldrd	r6, [sp, #8]
    cc98:	ldrd	r8, [sp, #16]
    cc9c:	ldr	sl, [sp, #24]
    cca0:	add	sp, sp, #28
    cca4:	pop	{pc}		; (ldr pc, [sp], #4)
    cca8:	ldr	r2, [r5, #24]
    ccac:	cmp	r2, #0
    ccb0:	beq	cce0 <rb_open+0x178>
    ccb4:	ldr	r0, [pc, #64]	; ccfc <rb_open+0x194>
    ccb8:	mov	r1, r6
    ccbc:	mov	r5, #0
    ccc0:	add	r0, pc, r0
    ccc4:	bl	48f0 <rb_lib_log@plt>
    ccc8:	b	cc8c <rb_open+0x124>
    cccc:	ldr	r3, [r1, #4]
    ccd0:	cmp	r3, #0
    ccd4:	streq	r0, [r1, #4]
    ccd8:	b	cc24 <rb_open+0xbc>
    ccdc:	bl	495c <rb_outofmemory@plt>
    cce0:	ldr	r2, [pc, #24]	; cd00 <rb_open+0x198>
    cce4:	add	r2, pc, r2
    cce8:	b	ccb4 <rb_open+0x14c>
    ccec:	.word	0x0001f454
    ccf0:	.word	0x000003bc
    ccf4:	.word	0x00031dbc
    ccf8:	.word	0x00031d28
    ccfc:	.word	0x0000d498
    cd00:	.word	0x0000d46c

0000cd04 <rb_dump_fd>:
    cd04:	ldr	r3, [pc, #192]	; cdcc <rb_dump_fd+0xc8>
    cd08:	strd	r4, [sp, #-32]!	; 0xffffffe0
    cd0c:	mov	r5, r1
    cd10:	ldr	r2, [pc, #184]	; cdd0 <rb_dump_fd+0xcc>
    cd14:	strd	r6, [sp, #8]
    cd18:	mov	r7, r0
    cd1c:	ldr	r6, [pc, #176]	; cdd4 <rb_dump_fd+0xd0>
    cd20:	add	r3, pc, r3
    cd24:	strd	r8, [sp, #16]
    cd28:	mov	r9, #0
    cd2c:	str	sl, [sp, #24]
    cd30:	str	lr, [sp, #28]
    cd34:	ldr	r8, [r3, r2]
    cd38:	add	r6, pc, r6
    cd3c:	b	cd4c <rb_dump_fd+0x48>
    cd40:	add	r9, r9, #12
    cd44:	cmp	r9, #49152	; 0xc000
    cd48:	beq	cdb4 <rb_dump_fd+0xb0>
    cd4c:	ldr	r3, [r8]
    cd50:	add	r2, r3, r9
    cd54:	ldr	r2, [r2, #8]
    cd58:	cmp	r2, #0
    cd5c:	beq	cd40 <rb_dump_fd+0x3c>
    cd60:	ldr	r4, [r3, r9]
    cd64:	cmp	r4, #0
    cd68:	beq	cd40 <rb_dump_fd+0x3c>
    cd6c:	ldr	r3, [r4]
    cd70:	mov	r2, r5
    cd74:	cmp	r3, #0
    cd78:	beq	cd9c <rb_dump_fd+0x98>
    cd7c:	ldrb	r1, [r3, #16]
    cd80:	tst	r1, #1
    cd84:	beq	cd9c <rb_dump_fd+0x98>
    cd88:	ldr	r0, [r3, #12]
    cd8c:	ldr	r1, [r3, #24]
    cd90:	cmp	r1, #0
    cd94:	moveq	r1, r6
    cd98:	blx	r7
    cd9c:	ldr	r4, [r4, #8]
    cda0:	cmp	r4, #0
    cda4:	bne	cd6c <rb_dump_fd+0x68>
    cda8:	add	r9, r9, #12
    cdac:	cmp	r9, #49152	; 0xc000
    cdb0:	bne	cd4c <rb_dump_fd+0x48>
    cdb4:	ldrd	r4, [sp]
    cdb8:	ldrd	r6, [sp, #8]
    cdbc:	ldrd	r8, [sp, #16]
    cdc0:	ldr	sl, [sp, #24]
    cdc4:	add	sp, sp, #28
    cdc8:	pop	{pc}		; (ldr pc, [sp], #4)
    cdcc:	.word	0x0001f2d8
    cdd0:	.word	0x000003bc
    cdd4:	.word	0x0000e5fc

0000cdd8 <rb_note>:
    cdd8:	strd	r4, [sp, #-16]!
    cddc:	subs	r4, r0, #0
    cde0:	str	r6, [sp, #8]
    cde4:	str	lr, [sp, #12]
    cde8:	beq	ce20 <rb_note+0x48>
    cdec:	ldr	r0, [r4, #24]
    cdf0:	mov	r5, r1
    cdf4:	cmp	r0, #0
    cdf8:	beq	ce00 <rb_note+0x28>
    cdfc:	bl	46d4 <free@plt>
    ce00:	mov	r0, #128	; 0x80
    ce04:	bl	4980 <malloc@plt>
    ce08:	subs	r6, r0, #0
    ce0c:	beq	ce30 <rb_note+0x58>
    ce10:	mov	r1, r5
    ce14:	mov	r2, #128	; 0x80
    ce18:	bl	4680 <rb_strlcpy@plt>
    ce1c:	str	r6, [r4, #24]
    ce20:	ldrd	r4, [sp]
    ce24:	ldr	r6, [sp, #8]
    ce28:	add	sp, sp, #12
    ce2c:	pop	{pc}		; (ldr pc, [sp], #4)
    ce30:	bl	495c <rb_outofmemory@plt>

0000ce34 <rb_set_type>:
    ce34:	strb	r1, [r0, #17]
    ce38:	bx	lr

0000ce3c <rb_get_type>:
    ce3c:	ldrb	r0, [r0, #17]
    ce40:	bx	lr

0000ce44 <rb_fd_ssl>:
    ce44:	cmp	r0, #0
    ce48:	ldrbne	r0, [r0, #17]
    ce4c:	ubfxne	r0, r0, #5, #1
    ce50:	bx	lr

0000ce54 <rb_get_fd>:
    ce54:	cmp	r0, #0
    ce58:	ldrne	r0, [r0, #12]
    ce5c:	mvneq	r0, #0
    ce60:	bx	lr

0000ce64 <rb_get_sockerr>:
    ce64:	mov	r3, #0
    ce68:	strd	r4, [sp, #-20]!	; 0xffffffec
    ce6c:	strd	r6, [sp, #8]
    ce70:	mov	r6, #4
    ce74:	mov	r7, r0
    ce78:	str	lr, [sp, #16]
    ce7c:	sub	sp, sp, #20
    ce80:	str	r3, [sp, #8]
    ce84:	str	r6, [sp, #12]
    ce88:	bl	4cbc <__errno_location@plt>
    ce8c:	ldrb	r3, [r7, #17]
    ce90:	ldr	r4, [r0]
    ce94:	tst	r3, #4
    ce98:	bne	ceb4 <rb_get_sockerr+0x50>
    ce9c:	mov	r0, r4
    cea0:	add	sp, sp, #20
    cea4:	ldrd	r4, [sp]
    cea8:	ldrd	r6, [sp, #8]
    ceac:	add	sp, sp, #16
    ceb0:	pop	{pc}		; (ldr pc, [sp], #4)
    ceb4:	mov	r5, r0
    ceb8:	mov	r0, r7
    cebc:	bl	44b8 <rb_get_fd@plt>
    cec0:	add	ip, sp, #12
    cec4:	mov	r2, r6
    cec8:	add	r3, sp, #8
    cecc:	mov	r1, #1
    ced0:	str	ip, [sp]
    ced4:	bl	4c50 <getsockopt@plt>
    ced8:	cmp	r0, #0
    cedc:	bne	ceec <rb_get_sockerr+0x88>
    cee0:	ldr	r3, [sp, #8]
    cee4:	cmp	r3, #0
    cee8:	movne	r4, r3
    ceec:	str	r4, [r5]
    cef0:	b	ce9c <rb_get_sockerr+0x38>

0000cef4 <rb_bind>:
    cef4:	mov	r3, #4
    cef8:	strd	r4, [sp, #-16]!
    cefc:	mov	r4, r0
    cf00:	ldr	r0, [r0, #12]
    cf04:	mov	ip, #1
    cf08:	mov	r2, #2
    cf0c:	str	r6, [sp, #8]
    cf10:	mov	r6, r1
    cf14:	mov	r1, ip
    cf18:	str	lr, [sp, #12]
    cf1c:	sub	sp, sp, #16
    cf20:	str	r3, [sp]
    cf24:	add	r3, sp, #12
    cf28:	str	ip, [sp, #12]
    cf2c:	bl	4c74 <setsockopt@plt>
    cf30:	subs	r5, r0, #0
    cf34:	bne	cf70 <rb_bind+0x7c>
    cf38:	ldrh	r3, [r6]
    cf3c:	mov	r1, r6
    cf40:	ldr	r0, [r4, #12]
    cf44:	cmp	r3, #2
    cf48:	moveq	r2, #16
    cf4c:	movne	r2, #28
    cf50:	bl	48e4 <bind@plt>
    cf54:	mov	r5, r0
    cf58:	mov	r0, r5
    cf5c:	add	sp, sp, #16
    cf60:	ldrd	r4, [sp]
    cf64:	ldr	r6, [sp, #8]
    cf68:	add	sp, sp, #12
    cf6c:	pop	{pc}		; (ldr pc, [sp], #4)
    cf70:	mov	r0, r4
    cf74:	ldr	r4, [r4, #12]
    cf78:	bl	4a64 <rb_get_sockerr@plt>
    cf7c:	bl	4374 <strerror@plt>
    cf80:	mov	r2, r0
    cf84:	ldr	r0, [pc, #12]	; cf98 <rb_bind+0xa4>
    cf88:	mov	r1, r4
    cf8c:	add	r0, pc, r0
    cf90:	bl	48f0 <rb_lib_log@plt>
    cf94:	b	cf58 <rb_bind+0x64>
    cf98:	.word	0x0000d200

0000cf9c <rb_get_fde>:
    cf9c:	subs	r2, r0, #0
    cfa0:	ldr	r0, [pc, #96]	; d008 <rb_get_fde+0x6c>
    cfa4:	add	r0, pc, r0
    cfa8:	blt	d000 <rb_get_fde+0x64>
    cfac:	ldr	r1, [pc, #88]	; d00c <rb_get_fde+0x70>
    cfb0:	asr	r3, r2, #24
    cfb4:	eor	r3, r3, r2, asr #12
    cfb8:	eor	r3, r3, r2
    cfbc:	ldr	r1, [r0, r1]
    cfc0:	ubfx	r3, r3, #0, #12
    cfc4:	add	r3, r3, r3, lsl #1
    cfc8:	ldr	r1, [r1]
    cfcc:	ldr	r0, [r1, r3, lsl #2]
    cfd0:	cmp	r0, #0
    cfd4:	beq	cffc <rb_get_fde+0x60>
    cfd8:	ldr	r3, [r0]
    cfdc:	ldr	r1, [r3, #12]
    cfe0:	cmp	r2, r1
    cfe4:	beq	cff8 <rb_get_fde+0x5c>
    cfe8:	ldr	r0, [r0, #8]
    cfec:	cmp	r0, #0
    cff0:	bne	cfd8 <rb_get_fde+0x3c>
    cff4:	bx	lr
    cff8:	mov	r0, r3
    cffc:	bx	lr
    d000:	mov	r0, #0
    d004:	bx	lr
    d008:	.word	0x0001f054
    d00c:	.word	0x000003bc

0000d010 <rb_read>:
    d010:	push	{lr}		; (str lr, [sp, #-4]!)
    d014:	subs	lr, r0, #0
    d018:	beq	d044 <rb_read+0x34>
    d01c:	ldrb	ip, [lr, #17]
    d020:	ands	r3, ip, #32
    d024:	bne	d048 <rb_read+0x38>
    d028:	tst	ip, #4
    d02c:	ldr	r0, [lr, #12]
    d030:	bne	d03c <rb_read+0x2c>
    d034:	pop	{lr}		; (ldr lr, [sp], #4)
    d038:	b	46ec <read@plt>
    d03c:	pop	{lr}		; (ldr lr, [sp], #4)
    d040:	b	4560 <recv@plt>
    d044:	pop	{pc}		; (ldr pc, [sp], #4)
    d048:	pop	{lr}		; (ldr lr, [sp], #4)
    d04c:	b	10670 <rb_ssl_read>

0000d050 <rb_write>:
    d050:	subs	r3, r0, #0
    d054:	beq	d07c <rb_write+0x2c>
    d058:	ldrb	ip, [r3, #17]
    d05c:	tst	ip, #32
    d060:	bne	d080 <rb_write+0x30>
    d064:	tst	ip, #4
    d068:	ldr	r0, [r3, #12]
    d06c:	bne	d074 <rb_write+0x24>
    d070:	b	4704 <write@plt>
    d074:	mov	r3, #16384	; 0x4000
    d078:	b	4a70 <send@plt>
    d07c:	bx	lr
    d080:	b	106a0 <rb_ssl_write>

0000d084 <rb_writev>:
    d084:	strd	r4, [sp, #-20]!	; 0xffffffec
    d088:	strd	r6, [sp, #8]
    d08c:	subs	r6, r0, #0
    d090:	str	lr, [sp, #16]
    d094:	sub	sp, sp, #36	; 0x24
    d098:	beq	d154 <rb_writev+0xd0>
    d09c:	ldrb	r3, [r6, #17]
    d0a0:	mov	r5, r1
    d0a4:	mov	r4, r2
    d0a8:	ands	ip, r3, #32
    d0ac:	bne	d110 <rb_writev+0x8c>
    d0b0:	tst	r3, #4
    d0b4:	ldr	r0, [r6, #12]
    d0b8:	bne	d0dc <rb_writev+0x58>
    d0bc:	bl	4668 <writev@plt>
    d0c0:	mov	r4, r0
    d0c4:	mov	r0, r4
    d0c8:	add	sp, sp, #36	; 0x24
    d0cc:	ldrd	r4, [sp]
    d0d0:	ldrd	r6, [sp, #8]
    d0d4:	add	sp, sp, #16
    d0d8:	pop	{pc}		; (ldr pc, [sp], #4)
    d0dc:	add	r3, sp, #4
    d0e0:	mov	r2, #16384	; 0x4000
    d0e4:	str	ip, [sp, #4]
    d0e8:	mov	r1, r3
    d0ec:	str	ip, [sp, #8]
    d0f0:	str	r5, [sp, #12]
    d0f4:	str	r4, [sp, #16]
    d0f8:	str	ip, [sp, #20]
    d0fc:	str	ip, [sp, #24]
    d100:	str	ip, [sp, #28]
    d104:	bl	46e0 <sendmsg@plt>
    d108:	mov	r4, r0
    d10c:	b	d0c4 <rb_writev+0x40>
    d110:	subs	r7, r2, #0
    d114:	beq	d0c4 <rb_writev+0x40>
    d118:	add	r5, r1, #8
    d11c:	mov	r4, #0
    d120:	b	d130 <rb_writev+0xac>
    d124:	subs	r7, r7, #1
    d128:	add	r4, r4, r0
    d12c:	beq	d0c4 <rb_writev+0x40>
    d130:	mov	r0, r6
    d134:	ldmdb	r5, {r1, r2}
    d138:	add	r5, r5, #8
    d13c:	bl	4638 <rb_write@plt>
    d140:	cmp	r0, #0
    d144:	bgt	d124 <rb_writev+0xa0>
    d148:	cmp	r4, #0
    d14c:	moveq	r4, r0
    d150:	b	d0c4 <rb_writev+0x40>
    d154:	bl	4cbc <__errno_location@plt>
    d158:	mov	r3, #9
    d15c:	mvn	r4, #0
    d160:	str	r3, [r0]
    d164:	b	d0c4 <rb_writev+0x40>

0000d168 <rb_inet_ntop>:
    d168:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d16c:	cmp	r0, #2
    d170:	strd	r6, [sp, #8]
    d174:	strd	r8, [sp, #16]
    d178:	strd	sl, [sp, #24]
    d17c:	mov	fp, r3
    d180:	str	lr, [sp, #32]
    d184:	sub	sp, sp, #108	; 0x6c
    d188:	str	r2, [sp, #4]
    d18c:	beq	d420 <rb_inet_ntop+0x2b8>
    d190:	cmp	r0, #10
    d194:	bne	d1f4 <rb_inet_ntop+0x8c>
    d198:	ldr	r3, [r1]
    d19c:	cmp	r3, #0
    d1a0:	bne	d214 <rb_inet_ntop+0xac>
    d1a4:	ldr	r3, [r1, #4]
    d1a8:	cmp	r3, #0
    d1ac:	bne	d214 <rb_inet_ntop+0xac>
    d1b0:	ldr	r3, [r1, #8]
    d1b4:	cmn	r3, #65536	; 0x10000
    d1b8:	beq	d1d4 <rb_inet_ntop+0x6c>
    d1bc:	cmp	r3, #0
    d1c0:	bne	d214 <rb_inet_ntop+0xac>
    d1c4:	ldr	r3, [r1, #12]
    d1c8:	rev	r3, r3
    d1cc:	cmp	r3, #1
    d1d0:	bls	d214 <rb_inet_ntop+0xac>
    d1d4:	cmp	fp, #15
    d1d8:	bls	d1f4 <rb_inet_ntop+0x8c>
    d1dc:	add	r0, r1, #12
    d1e0:	bl	c0f4 <inetntoa>
    d1e4:	mov	r1, r0
    d1e8:	ldr	r0, [sp, #4]
    d1ec:	bl	486c <strcpy@plt>
    d1f0:	b	d1f8 <rb_inet_ntop+0x90>
    d1f4:	mov	r0, #0
    d1f8:	add	sp, sp, #108	; 0x6c
    d1fc:	ldrd	r4, [sp]
    d200:	ldrd	r6, [sp, #8]
    d204:	ldrd	r8, [sp, #16]
    d208:	ldrd	sl, [sp, #24]
    d20c:	add	sp, sp, #32
    d210:	pop	{pc}		; (ldr pc, [sp], #4)
    d214:	add	r3, r1, #12
    d218:	ldrb	ip, [r1]
    d21c:	ldrb	r2, [r1, #2]
    d220:	str	r3, [sp, #16]
    d224:	ldrb	r0, [r1, #1]
    d228:	ldrb	r3, [r1, #3]
    d22c:	ldrb	r4, [r1, #6]
    d230:	orr	r0, r0, ip, lsl #8
    d234:	ldrb	r6, [r1, #5]
    d238:	orr	r3, r3, r2, lsl #8
    d23c:	cmp	r0, #0
    d240:	ldrb	ip, [r1, #4]
    d244:	str	r0, [sp, #24]
    d248:	ldrb	r2, [r1, #7]
    d24c:	str	r3, [sp, #28]
    d250:	ldrb	lr, [r1, #9]
    d254:	orr	r6, r6, ip, lsl #8
    d258:	ldrb	r9, [r1, #11]
    d25c:	orr	r2, r2, r4, lsl #8
    d260:	ldrb	ip, [r1, #8]
    d264:	str	r6, [sp, #32]
    d268:	ldrb	r4, [r1, #10]
    d26c:	str	r2, [sp, #36]	; 0x24
    d270:	ldrb	r5, [r1, #12]
    d274:	orr	lr, lr, ip, lsl #8
    d278:	ldrb	ip, [r1, #13]
    d27c:	orr	r9, r9, r4, lsl #8
    d280:	ldrb	r4, [r1, #14]
    d284:	str	lr, [sp, #40]	; 0x28
    d288:	ldrb	r1, [r1, #15]
    d28c:	orr	ip, ip, r5, lsl #8
    d290:	str	r9, [sp, #44]	; 0x2c
    d294:	str	ip, [sp, #48]	; 0x30
    d298:	orr	r1, r1, r4, lsl #8
    d29c:	str	r1, [sp, #52]	; 0x34
    d2a0:	bne	d440 <rb_inet_ntop+0x2d8>
    d2a4:	cmp	r3, #0
    d2a8:	beq	d45c <rb_inet_ntop+0x2f4>
    d2ac:	cmp	r6, #0
    d2b0:	movne	r7, #1
    d2b4:	beq	d530 <rb_inet_ntop+0x3c8>
    d2b8:	cmp	r2, #0
    d2bc:	movne	r3, r0
    d2c0:	bne	d500 <rb_inet_ntop+0x398>
    d2c4:	cmp	lr, #0
    d2c8:	movne	r3, r0
    d2cc:	bne	d764 <rb_inet_ntop+0x5fc>
    d2d0:	mov	r2, r7
    d2d4:	mov	r3, r0
    d2d8:	mov	r7, #1
    d2dc:	mov	r6, #3
    d2e0:	cmp	r9, #0
    d2e4:	add	r7, r7, #1
    d2e8:	beq	d520 <rb_inet_ntop+0x3b8>
    d2ec:	cmn	r3, #1
    d2f0:	movne	r0, #0
    d2f4:	moveq	r0, #1
    d2f8:	cmp	r2, r7
    d2fc:	orrlt	r0, r0, #1
    d300:	cmp	r0, #0
    d304:	beq	d7b8 <rb_inet_ntop+0x650>
    d308:	cmp	ip, #0
    d30c:	bne	d4bc <rb_inet_ntop+0x354>
    d310:	mov	r2, r7
    d314:	mov	r3, r6
    d318:	mov	r7, #1
    d31c:	mov	r6, #6
    d320:	cmp	r1, #0
    d324:	beq	d61c <rb_inet_ntop+0x4b4>
    d328:	cmn	r3, #1
    d32c:	movne	r1, #0
    d330:	moveq	r1, #1
    d334:	cmp	r2, r7
    d338:	orrlt	r1, r1, #1
    d33c:	cmp	r1, #0
    d340:	moveq	r7, r2
    d344:	moveq	r6, r3
    d348:	cmp	r7, #1
    d34c:	movgt	r8, #1
    d350:	ble	d4dc <rb_inet_ntop+0x374>
    d354:	cmp	r7, #5
    d358:	beq	d658 <rb_inet_ntop+0x4f0>
    d35c:	cmp	r7, #6
    d360:	beq	d7c4 <rb_inet_ntop+0x65c>
    d364:	ldr	r9, [pc, #1316]	; d890 <rb_inet_ntop+0x728>
    d368:	add	r3, sp, #56	; 0x38
    d36c:	add	sl, sp, #24
    d370:	mov	r4, r3
    d374:	mov	r5, #0
    d378:	str	r3, [sp, #12]
    d37c:	add	r3, r6, r7
    d380:	str	r3, [sp, #8]
    d384:	add	r9, pc, r9
    d388:	b	d3c0 <rb_inet_ntop+0x258>
    d38c:	cmp	r5, #0
    d390:	beq	d3a0 <rb_inet_ntop+0x238>
    d394:	mov	r3, #58	; 0x3a
    d398:	strb	r3, [r2], #1
    d39c:	mov	r4, r2
    d3a0:	mov	r0, r4
    d3a4:	ldr	r2, [sl]
    d3a8:	bl	4cd4 <sprintf@plt>
    d3ac:	add	r4, r4, r0
    d3b0:	add	r5, r5, #1
    d3b4:	add	sl, sl, #4
    d3b8:	cmp	r5, #8
    d3bc:	beq	d5d0 <rb_inet_ntop+0x468>
    d3c0:	cmp	r5, r6
    d3c4:	movlt	r0, #0
    d3c8:	andge	r0, r8, #1
    d3cc:	mov	r1, r9
    d3d0:	cmp	r0, #0
    d3d4:	mov	r2, r4
    d3d8:	beq	d38c <rb_inet_ntop+0x224>
    d3dc:	ldr	r3, [sp, #8]
    d3e0:	cmp	r3, r5
    d3e4:	ble	d38c <rb_inet_ntop+0x224>
    d3e8:	cmp	r5, r6
    d3ec:	bne	d3b0 <rb_inet_ntop+0x248>
    d3f0:	cmp	r5, #0
    d3f4:	add	r2, r4, #1
    d3f8:	bne	d410 <rb_inet_ntop+0x2a8>
    d3fc:	mov	r1, r4
    d400:	mov	r0, #48	; 0x30
    d404:	mov	r4, r2
    d408:	strb	r0, [r1], #2
    d40c:	mov	r2, r1
    d410:	mov	r3, #58	; 0x3a
    d414:	strb	r3, [r4]
    d418:	mov	r4, r2
    d41c:	b	d3b0 <rb_inet_ntop+0x248>
    d420:	cmp	r3, #15
    d424:	bls	d1f4 <rb_inet_ntop+0x8c>
    d428:	mov	r0, r1
    d42c:	bl	c0f4 <inetntoa>
    d430:	mov	r1, r0
    d434:	ldr	r0, [sp, #4]
    d438:	bl	486c <strcpy@plt>
    d43c:	b	d1f8 <rb_inet_ntop+0x90>
    d440:	cmp	r3, #0
    d444:	beq	d4e8 <rb_inet_ntop+0x380>
    d448:	cmp	r6, #0
    d44c:	beq	d57c <rb_inet_ntop+0x414>
    d450:	mov	r7, #0
    d454:	mvn	r0, #0
    d458:	b	d2b8 <rb_inet_ntop+0x150>
    d45c:	cmp	r6, #0
    d460:	mov	r7, #2
    d464:	bne	d4f8 <rb_inet_ntop+0x390>
    d468:	cmp	r2, #0
    d46c:	add	r7, r7, #1
    d470:	beq	d58c <rb_inet_ntop+0x424>
    d474:	cmp	lr, #0
    d478:	beq	d5b4 <rb_inet_ntop+0x44c>
    d47c:	cmp	r9, #0
    d480:	bne	d308 <rb_inet_ntop+0x1a0>
    d484:	cmp	ip, #0
    d488:	beq	d564 <rb_inet_ntop+0x3fc>
    d48c:	mov	r2, r7
    d490:	mov	r3, r6
    d494:	mov	r7, #1
    d498:	mov	r6, #5
    d49c:	cmn	r3, #1
    d4a0:	movne	r0, #0
    d4a4:	moveq	r0, #1
    d4a8:	cmp	r2, r7
    d4ac:	orrlt	r0, r0, #1
    d4b0:	cmp	r0, #0
    d4b4:	moveq	r7, r2
    d4b8:	moveq	r6, r3
    d4bc:	cmp	r1, #0
    d4c0:	bne	d648 <rb_inet_ntop+0x4e0>
    d4c4:	cmn	r6, #1
    d4c8:	cmpne	r7, #0
    d4cc:	movgt	r2, r7
    d4d0:	movgt	r3, r6
    d4d4:	bgt	d63c <rb_inet_ntop+0x4d4>
    d4d8:	mov	r7, #1
    d4dc:	mvn	r6, #0
    d4e0:	mov	r8, #0
    d4e4:	b	d35c <rb_inet_ntop+0x1f4>
    d4e8:	mov	r7, #1
    d4ec:	cmp	r6, #0
    d4f0:	movne	r3, r7
    d4f4:	beq	d594 <rb_inet_ntop+0x42c>
    d4f8:	cmp	r2, #0
    d4fc:	beq	d59c <rb_inet_ntop+0x434>
    d500:	cmp	lr, #0
    d504:	movne	r6, r3
    d508:	bne	d47c <rb_inet_ntop+0x314>
    d50c:	cmp	r9, #0
    d510:	mov	r2, r7
    d514:	mov	r6, #4
    d518:	mov	r7, #1
    d51c:	bne	d2ec <rb_inet_ntop+0x184>
    d520:	cmp	ip, #0
    d524:	add	r7, r7, #1
    d528:	bne	d49c <rb_inet_ntop+0x334>
    d52c:	b	d574 <rb_inet_ntop+0x40c>
    d530:	cmp	r2, #0
    d534:	bne	d794 <rb_inet_ntop+0x62c>
    d538:	mov	r7, #1
    d53c:	mov	r3, r2
    d540:	mov	r6, #2
    d544:	mov	r2, r7
    d548:	cmp	lr, #0
    d54c:	add	r7, r7, #1
    d550:	beq	d2e0 <rb_inet_ntop+0x178>
    d554:	cmp	r9, #0
    d558:	bne	d308 <rb_inet_ntop+0x1a0>
    d55c:	cmp	ip, #0
    d560:	bne	d4bc <rb_inet_ntop+0x354>
    d564:	mov	r2, r7
    d568:	mov	r3, r6
    d56c:	mov	r7, #1
    d570:	mov	r6, #5
    d574:	add	r7, r7, #1
    d578:	b	d320 <rb_inet_ntop+0x1b8>
    d57c:	cmp	r2, #0
    d580:	mov	r7, #1
    d584:	mov	r6, #2
    d588:	bne	d474 <rb_inet_ntop+0x30c>
    d58c:	mvn	r3, #0
    d590:	b	d548 <rb_inet_ntop+0x3e0>
    d594:	mov	r6, r7
    d598:	b	d468 <rb_inet_ntop+0x300>
    d59c:	cmp	lr, #0
    d5a0:	bne	d764 <rb_inet_ntop+0x5fc>
    d5a4:	mov	r2, r7
    d5a8:	mov	r6, #3
    d5ac:	mov	r7, #1
    d5b0:	b	d2e0 <rb_inet_ntop+0x178>
    d5b4:	cmp	r9, #0
    d5b8:	bne	d308 <rb_inet_ntop+0x1a0>
    d5bc:	mov	r2, r7
    d5c0:	mov	r3, r6
    d5c4:	mov	r7, #1
    d5c8:	mov	r6, #4
    d5cc:	b	d520 <rb_inet_ntop+0x3b8>
    d5d0:	cmn	r6, #1
    d5d4:	add	r2, r4, #1
    d5d8:	beq	d5f8 <rb_inet_ntop+0x490>
    d5dc:	add	r6, r6, r7
    d5e0:	cmp	r6, #8
    d5e4:	bne	d5f8 <rb_inet_ntop+0x490>
    d5e8:	mov	r3, #58	; 0x3a
    d5ec:	strb	r3, [r4]
    d5f0:	mov	r4, r2
    d5f4:	add	r2, r2, #1
    d5f8:	ldr	r1, [sp, #12]
    d5fc:	mov	r3, #0
    d600:	strb	r3, [r4]
    d604:	sub	r2, r2, r1
    d608:	cmp	fp, r2
    d60c:	bcc	d1f4 <rb_inet_ntop+0x8c>
    d610:	ldr	r0, [sp, #4]
    d614:	bl	47e8 <memcpy@plt>
    d618:	b	d1f8 <rb_inet_ntop+0x90>
    d61c:	cmn	r3, #1
    d620:	add	r7, r7, #1
    d624:	movne	r1, #0
    d628:	moveq	r1, #1
    d62c:	cmp	r7, r2
    d630:	orrgt	r1, r1, #1
    d634:	cmp	r1, #0
    d638:	bne	d348 <rb_inet_ntop+0x1e0>
    d63c:	mov	r7, r2
    d640:	mov	r6, r3
    d644:	b	d348 <rb_inet_ntop+0x1e0>
    d648:	cmn	r6, #1
    d64c:	moveq	r8, #0
    d650:	beq	d354 <rb_inet_ntop+0x1ec>
    d654:	b	d348 <rb_inet_ntop+0x1e0>
    d658:	ldr	r2, [pc, #564]	; d894 <rb_inet_ntop+0x72c>
    d65c:	add	r3, sp, #56	; 0x38
    d660:	add	sl, sp, #24
    d664:	mov	r4, r3
    d668:	mov	r5, #0
    d66c:	str	r3, [sp, #12]
    d670:	add	r3, r6, #5
    d674:	str	r3, [sp, #8]
    d678:	add	r2, pc, r2
    d67c:	str	r9, [sp, #20]
    d680:	mov	r9, r2
    d684:	b	d6c8 <rb_inet_ntop+0x560>
    d688:	cmp	r5, #0
    d68c:	beq	d6a4 <rb_inet_ntop+0x53c>
    d690:	mov	r2, #58	; 0x3a
    d694:	cmp	r5, #6
    d698:	cmpeq	r6, #0
    d69c:	strb	r2, [r4], #1
    d6a0:	beq	d720 <rb_inet_ntop+0x5b8>
    d6a4:	mov	r0, r4
    d6a8:	mov	r1, r9
    d6ac:	ldr	r2, [sl]
    d6b0:	bl	4cd4 <sprintf@plt>
    d6b4:	add	r4, r4, r0
    d6b8:	add	r5, r5, #1
    d6bc:	add	sl, sl, #4
    d6c0:	cmp	r5, #8
    d6c4:	beq	d5d0 <rb_inet_ntop+0x468>
    d6c8:	cmp	r5, r6
    d6cc:	movlt	r2, #0
    d6d0:	andge	r2, r8, #1
    d6d4:	cmp	r2, #0
    d6d8:	beq	d688 <rb_inet_ntop+0x520>
    d6dc:	ldr	r3, [sp, #8]
    d6e0:	cmp	r5, r3
    d6e4:	bge	d688 <rb_inet_ntop+0x520>
    d6e8:	cmp	r5, r6
    d6ec:	bne	d6b8 <rb_inet_ntop+0x550>
    d6f0:	cmp	r5, #0
    d6f4:	add	r2, r4, #1
    d6f8:	bne	d710 <rb_inet_ntop+0x5a8>
    d6fc:	mov	r1, r4
    d700:	mov	r3, #48	; 0x30
    d704:	mov	r4, r2
    d708:	strb	r3, [r1], #2
    d70c:	mov	r2, r1
    d710:	mov	r1, #58	; 0x3a
    d714:	strb	r1, [r4]
    d718:	mov	r4, r2
    d71c:	b	d6b8 <rb_inet_ntop+0x550>
    d720:	ldr	r3, [sp, #20]
    d724:	movw	r2, #65535	; 0xffff
    d728:	cmp	r3, r2
    d72c:	bne	d6a4 <rb_inet_ntop+0x53c>
    d730:	ldr	r3, [sp, #12]
    d734:	sub	r3, r4, r3
    d738:	rsb	r3, r3, #46	; 0x2e
    d73c:	cmp	r3, #15
    d740:	bls	d1f4 <rb_inet_ntop+0x8c>
    d744:	ldr	r0, [sp, #16]
    d748:	bl	c0f4 <inetntoa>
    d74c:	mov	r1, r0
    d750:	mov	r0, r4
    d754:	bl	45e4 <stpcpy@plt>
    d758:	mov	r4, r0
    d75c:	add	r2, r0, #1
    d760:	b	d5dc <rb_inet_ntop+0x474>
    d764:	cmn	r3, #1
    d768:	cmpne	r7, #0
    d76c:	ble	d884 <rb_inet_ntop+0x71c>
    d770:	cmp	r9, #0
    d774:	bne	d7bc <rb_inet_ntop+0x654>
    d778:	cmp	ip, #0
    d77c:	movne	r6, r3
    d780:	bne	d4bc <rb_inet_ntop+0x354>
    d784:	mov	r2, r7
    d788:	mov	r6, #5
    d78c:	mov	r7, #1
    d790:	b	d574 <rb_inet_ntop+0x40c>
    d794:	cmp	lr, #0
    d798:	mov	r7, #1
    d79c:	bne	d47c <rb_inet_ntop+0x314>
    d7a0:	cmp	r9, #0
    d7a4:	bne	d308 <rb_inet_ntop+0x1a0>
    d7a8:	mov	r3, r9
    d7ac:	mov	r2, r7
    d7b0:	mov	r6, #4
    d7b4:	b	d520 <rb_inet_ntop+0x3b8>
    d7b8:	mov	r7, r2
    d7bc:	mov	r6, r3
    d7c0:	b	d308 <rb_inet_ntop+0x1a0>
    d7c4:	ldr	sl, [pc, #204]	; d898 <rb_inet_ntop+0x730>
    d7c8:	add	r3, sp, #56	; 0x38
    d7cc:	add	r9, sp, #24
    d7d0:	mov	r4, r3
    d7d4:	mov	r5, #0
    d7d8:	str	r3, [sp, #12]
    d7dc:	add	r3, r6, #6
    d7e0:	str	r3, [sp, #8]
    d7e4:	add	sl, pc, sl
    d7e8:	b	d82c <rb_inet_ntop+0x6c4>
    d7ec:	cmp	r5, #0
    d7f0:	beq	d808 <rb_inet_ntop+0x6a0>
    d7f4:	mov	r2, #58	; 0x3a
    d7f8:	cmp	r5, #6
    d7fc:	cmpeq	r6, #0
    d800:	strb	r2, [r4], #1
    d804:	beq	d730 <rb_inet_ntop+0x5c8>
    d808:	mov	r0, r4
    d80c:	mov	r1, sl
    d810:	ldr	r2, [r9]
    d814:	bl	4cd4 <sprintf@plt>
    d818:	add	r4, r4, r0
    d81c:	add	r5, r5, #1
    d820:	add	r9, r9, #4
    d824:	cmp	r5, #8
    d828:	beq	d5d0 <rb_inet_ntop+0x468>
    d82c:	cmp	r5, r6
    d830:	movlt	r2, #0
    d834:	andge	r2, r8, #1
    d838:	cmp	r2, #0
    d83c:	beq	d7ec <rb_inet_ntop+0x684>
    d840:	ldr	r3, [sp, #8]
    d844:	cmp	r3, r5
    d848:	ble	d7ec <rb_inet_ntop+0x684>
    d84c:	cmp	r5, r6
    d850:	bne	d81c <rb_inet_ntop+0x6b4>
    d854:	cmp	r5, #0
    d858:	add	r2, r4, #1
    d85c:	beq	d878 <rb_inet_ntop+0x710>
    d860:	mov	r1, r2
    d864:	mov	r2, r4
    d868:	mov	r4, r1
    d86c:	mov	r1, #58	; 0x3a
    d870:	strb	r1, [r2]
    d874:	b	d81c <rb_inet_ntop+0x6b4>
    d878:	mov	r3, #48	; 0x30
    d87c:	strb	r3, [r4], #2
    d880:	b	d86c <rb_inet_ntop+0x704>
    d884:	mov	r7, #1
    d888:	mov	r6, #3
    d88c:	b	d554 <rb_inet_ntop+0x3ec>
    d890:	.word	0x0000ce48
    d894:	.word	0x0000cb54
    d898:	.word	0x0000c9e8

0000d89c <rb_inet_ntop_sock>:
    d89c:	ldrh	ip, [r0]
    d8a0:	cmp	ip, #2
    d8a4:	beq	d8b8 <rb_inet_ntop_sock+0x1c>
    d8a8:	cmp	ip, #10
    d8ac:	beq	d8cc <rb_inet_ntop_sock+0x30>
    d8b0:	mov	r0, #0
    d8b4:	bx	lr
    d8b8:	mov	r3, r2
    d8bc:	mov	r2, r1
    d8c0:	add	r1, r0, #4
    d8c4:	mov	r0, ip
    d8c8:	b	4920 <rb_inet_ntop@plt>
    d8cc:	mov	r3, r2
    d8d0:	mov	r2, r1
    d8d4:	add	r1, r0, #8
    d8d8:	mov	r0, ip
    d8dc:	b	4920 <rb_inet_ntop@plt>

0000d8e0 <rb_inet_pton>:
    d8e0:	cmp	r0, #2
    d8e4:	mov	ip, r1
    d8e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    d8ec:	mov	r4, r2
    d8f0:	strd	r6, [sp, #8]
    d8f4:	str	r8, [sp, #16]
    d8f8:	str	lr, [sp, #20]
    d8fc:	sub	sp, sp, #56	; 0x38
    d900:	beq	da04 <rb_inet_pton+0x124>
    d904:	cmp	r0, #10
    d908:	mvnne	r0, #0
    d90c:	bne	d97c <rb_inet_pton+0x9c>
    d910:	mov	r1, #0
    d914:	mov	r5, sp
    d918:	mov	lr, r1
    d91c:	mov	r3, r1
    d920:	mov	r2, r5
    d924:	mov	r7, ip
    d928:	strb	r1, [sp]
    d92c:	ldrb	r6, [r7], #1
    d930:	cmp	r6, #0
    d934:	sub	r8, r6, #48	; 0x30
    d938:	beq	d9d0 <rb_inet_pton+0xf0>
    d93c:	cmp	r8, #9
    d940:	bhi	d994 <rb_inet_pton+0xb4>
    d944:	ldrb	r1, [r2]
    d948:	smlabb	r1, r0, r1, r8
    d94c:	cmp	r1, #255	; 0xff
    d950:	bhi	d970 <rb_inet_pton+0x90>
    d954:	cmp	r3, #0
    d958:	strb	r1, [r2]
    d95c:	bne	d92c <rb_inet_pton+0x4c>
    d960:	add	lr, lr, #1
    d964:	mov	r3, #1
    d968:	cmp	lr, #4
    d96c:	ble	d92c <rb_inet_pton+0x4c>
    d970:	mov	r1, r4
    d974:	mov	r0, ip
    d978:	bl	c320 <inet_pton6>
    d97c:	add	sp, sp, #56	; 0x38
    d980:	ldrd	r4, [sp]
    d984:	ldrd	r6, [sp, #8]
    d988:	ldr	r8, [sp, #16]
    d98c:	add	sp, sp, #20
    d990:	pop	{pc}		; (ldr pc, [sp], #4)
    d994:	cmp	r6, #46	; 0x2e
    d998:	movne	r3, #0
    d99c:	andeq	r3, r3, #1
    d9a0:	eor	r3, r3, #1
    d9a4:	cmp	lr, #4
    d9a8:	movne	r1, r3
    d9ac:	orreq	r1, r3, #1
    d9b0:	subs	r3, r1, #0
    d9b4:	bne	d970 <rb_inet_pton+0x90>
    d9b8:	ldrb	r6, [r7], #1
    d9bc:	add	r2, r2, #1
    d9c0:	strb	r1, [r2]
    d9c4:	cmp	r6, #0
    d9c8:	sub	r8, r6, #48	; 0x30
    d9cc:	bne	d93c <rb_inet_pton+0x5c>
    d9d0:	cmp	lr, #3
    d9d4:	ble	d970 <rb_inet_pton+0x90>
    d9d8:	ldr	r1, [pc, #216]	; dab8 <rb_inet_pton+0x1d8>
    d9dc:	mov	r2, ip
    d9e0:	mov	r0, r5
    d9e4:	ldr	r3, [sp]
    d9e8:	add	r1, pc, r1
    d9ec:	str	r3, [r4]
    d9f0:	bl	4cd4 <sprintf@plt>
    d9f4:	mov	r1, r4
    d9f8:	mov	r0, r5
    d9fc:	bl	c320 <inet_pton6>
    da00:	b	d97c <rb_inet_pton+0x9c>
    da04:	mov	r3, #0
    da08:	mov	r2, sp
    da0c:	mov	r0, r3
    da10:	mov	r6, #10
    da14:	strb	r3, [sp]
    da18:	ldrb	lr, [ip], #1
    da1c:	cmp	lr, #0
    da20:	sub	r5, lr, #48	; 0x30
    da24:	beq	daa0 <rb_inet_pton+0x1c0>
    da28:	cmp	r5, #9
    da2c:	bhi	da64 <rb_inet_pton+0x184>
    da30:	ldrb	r1, [r2]
    da34:	smlabb	r1, r6, r1, r5
    da38:	cmp	r1, #255	; 0xff
    da3c:	bhi	da5c <rb_inet_pton+0x17c>
    da40:	cmp	r3, #0
    da44:	strb	r1, [r2]
    da48:	bne	da18 <rb_inet_pton+0x138>
    da4c:	add	r0, r0, #1
    da50:	mov	r3, #1
    da54:	cmp	r0, #4
    da58:	ble	da18 <rb_inet_pton+0x138>
    da5c:	mov	r0, #0
    da60:	b	d97c <rb_inet_pton+0x9c>
    da64:	cmp	lr, #46	; 0x2e
    da68:	movne	r3, #0
    da6c:	andeq	r3, r3, #1
    da70:	eor	r3, r3, #1
    da74:	cmp	r0, #4
    da78:	movne	r1, r3
    da7c:	orreq	r1, r3, #1
    da80:	subs	r3, r1, #0
    da84:	bne	da5c <rb_inet_pton+0x17c>
    da88:	ldrb	lr, [ip], #1
    da8c:	add	r2, r2, #1
    da90:	strb	r1, [r2]
    da94:	cmp	lr, #0
    da98:	sub	r5, lr, #48	; 0x30
    da9c:	bne	da28 <rb_inet_pton+0x148>
    daa0:	cmp	r0, #3
    daa4:	ble	da5c <rb_inet_pton+0x17c>
    daa8:	ldr	r3, [sp]
    daac:	mov	r0, #1
    dab0:	str	r3, [r4]
    dab4:	b	d97c <rb_inet_pton+0x9c>
    dab8:	.word	0x0000c7e8

0000dabc <rb_inet_pton_sock>:
    dabc:	mov	r2, #128	; 0x80
    dac0:	strd	r4, [sp, #-16]!
    dac4:	mov	r4, r1
    dac8:	mov	r5, r0
    dacc:	mov	r0, r1
    dad0:	str	r6, [sp, #8]
    dad4:	mov	r1, #0
    dad8:	str	lr, [sp, #12]
    dadc:	bl	4608 <memset@plt>
    dae0:	add	r2, r4, #4
    dae4:	mov	r1, r5
    dae8:	mov	r0, #2
    daec:	bl	4614 <rb_inet_pton@plt>
    daf0:	cmp	r0, #0
    daf4:	beq	db14 <rb_inet_pton_sock+0x58>
    daf8:	mov	r3, #2
    dafc:	mov	r0, #1
    db00:	str	r3, [r4]
    db04:	ldrd	r4, [sp]
    db08:	ldr	r6, [sp, #8]
    db0c:	add	sp, sp, #12
    db10:	pop	{pc}		; (ldr pc, [sp], #4)
    db14:	mov	r1, r5
    db18:	add	r2, r4, #8
    db1c:	mov	r0, #10
    db20:	bl	4614 <rb_inet_pton@plt>
    db24:	cmp	r0, #0
    db28:	beq	db04 <rb_inet_pton_sock+0x48>
    db2c:	mov	r3, #10
    db30:	ldr	r6, [sp, #8]
    db34:	mov	r0, #1
    db38:	str	r3, [r4]
    db3c:	ldrd	r4, [sp]
    db40:	add	sp, sp, #12
    db44:	pop	{pc}		; (ldr pc, [sp], #4)

0000db48 <rb_get_iotype>:
    db48:	ldr	r0, [pc, #8]	; db58 <rb_get_iotype+0x10>
    db4c:	add	r0, pc, r0
    db50:	add	r0, r0, #44	; 0x2c
    db54:	bx	lr
    db58:	.word	0x00030e58

0000db5c <rb_io_sched_event>:
    db5c:	strd	r4, [sp, #-16]!
    db60:	subs	r5, r0, #0
    db64:	str	r6, [sp, #8]
    db68:	str	lr, [sp, #12]
    db6c:	beq	dbc0 <rb_io_sched_event+0x64>
    db70:	ldr	r4, [pc, #92]	; dbd4 <rb_io_sched_event+0x78>
    db74:	add	r4, pc, r4
    db78:	ldr	r3, [r4, #72]	; 0x48
    db7c:	cmp	r3, #0
    db80:	beq	dbc0 <rb_io_sched_event+0x64>
    db84:	ldr	r2, [r4, #76]	; 0x4c
    db88:	cmp	r2, #0
    db8c:	beq	dbc0 <rb_io_sched_event+0x64>
    db90:	mov	r6, r1
    db94:	blx	r3
    db98:	cmp	r0, #0
    db9c:	beq	dbc0 <rb_io_sched_event+0x64>
    dba0:	mov	r1, r6
    dba4:	mov	r0, r5
    dba8:	ldr	r6, [sp, #8]
    dbac:	ldr	lr, [sp, #12]
    dbb0:	ldr	r3, [r4, #76]	; 0x4c
    dbb4:	ldrd	r4, [sp]
    dbb8:	add	sp, sp, #16
    dbbc:	bx	r3
    dbc0:	ldrd	r4, [sp]
    dbc4:	mov	r0, #0
    dbc8:	ldr	r6, [sp, #8]
    dbcc:	add	sp, sp, #12
    dbd0:	pop	{pc}		; (ldr pc, [sp], #4)
    dbd4:	.word	0x00030e30

0000dbd8 <rb_io_unsched_event>:
    dbd8:	strd	r4, [sp, #-16]!
    dbdc:	subs	r5, r0, #0
    dbe0:	str	r6, [sp, #8]
    dbe4:	str	lr, [sp, #12]
    dbe8:	beq	dc34 <rb_io_unsched_event+0x5c>
    dbec:	ldr	r4, [pc, #80]	; dc44 <rb_io_unsched_event+0x6c>
    dbf0:	add	r4, pc, r4
    dbf4:	ldr	r3, [r4, #72]	; 0x48
    dbf8:	cmp	r3, #0
    dbfc:	beq	dc34 <rb_io_unsched_event+0x5c>
    dc00:	ldr	r2, [r4, #80]	; 0x50
    dc04:	cmp	r2, #0
    dc08:	beq	dc34 <rb_io_unsched_event+0x5c>
    dc0c:	blx	r3
    dc10:	cmp	r0, #0
    dc14:	beq	dc34 <rb_io_unsched_event+0x5c>
    dc18:	mov	r0, r5
    dc1c:	ldr	r6, [sp, #8]
    dc20:	ldr	lr, [sp, #12]
    dc24:	ldr	r3, [r4, #80]	; 0x50
    dc28:	ldrd	r4, [sp]
    dc2c:	add	sp, sp, #16
    dc30:	bx	r3
    dc34:	ldrd	r4, [sp]
    dc38:	ldr	r6, [sp, #8]
    dc3c:	add	sp, sp, #12
    dc40:	pop	{pc}		; (ldr pc, [sp], #4)
    dc44:	.word	0x00030db4

0000dc48 <rb_io_supports_event>:
    dc48:	ldr	r3, [pc, #20]	; dc64 <rb_io_supports_event+0x1c>
    dc4c:	add	r3, pc, r3
    dc50:	ldr	r0, [r3, #72]	; 0x48
    dc54:	cmp	r0, #0
    dc58:	beq	dc60 <rb_io_supports_event+0x18>
    dc5c:	bx	r0
    dc60:	bx	lr
    dc64:	.word	0x00030d58

0000dc68 <rb_io_init_event>:
    dc68:	ldr	r3, [pc, #32]	; dc90 <rb_io_init_event+0x28>
    dc6c:	str	r4, [sp, #-8]!
    dc70:	add	r3, pc, r3
    dc74:	ldr	r3, [r3, #84]	; 0x54
    dc78:	str	lr, [sp, #4]
    dc7c:	blx	r3
    dc80:	ldr	r4, [sp]
    dc84:	ldr	lr, [sp, #4]
    dc88:	add	sp, sp, #8
    dc8c:	b	110cc <rb_event_io_register_all>
    dc90:	.word	0x00030d34

0000dc94 <rb_init_netio>:
    dc94:	ldr	r0, [pc, #1276]	; e198 <rb_init_netio+0x504>
    dc98:	strd	r4, [sp, #-16]!
    dc9c:	ldr	r4, [pc, #1272]	; e19c <rb_init_netio+0x508>
    dca0:	str	r6, [sp, #8]
    dca4:	str	lr, [sp, #12]
    dca8:	add	r0, pc, r0
    dcac:	bl	456c <getenv@plt>
    dcb0:	mov	r5, r0
    dcb4:	mov	r1, #49152	; 0xc000
    dcb8:	mov	r0, #1
    dcbc:	add	r4, pc, r4
    dcc0:	bl	45c0 <calloc@plt>
    dcc4:	cmp	r0, #0
    dcc8:	beq	e014 <rb_init_netio+0x380>
    dccc:	ldr	r3, [pc, #1228]	; e1a0 <rb_init_netio+0x50c>
    dcd0:	ldr	r3, [r4, r3]
    dcd4:	str	r0, [r3]
    dcd8:	bl	fd10 <rb_init_ssl>
    dcdc:	cmp	r5, #0
    dce0:	beq	dda4 <rb_init_netio+0x110>
    dce4:	ldr	r0, [pc, #1208]	; e1a4 <rb_init_netio+0x510>
    dce8:	mov	r1, r5
    dcec:	add	r0, pc, r0
    dcf0:	bl	4cb0 <strcmp@plt>
    dcf4:	cmp	r0, #0
    dcf8:	beq	de30 <rb_init_netio+0x19c>
    dcfc:	ldr	r0, [pc, #1188]	; e1a8 <rb_init_netio+0x514>
    dd00:	mov	r1, r5
    dd04:	add	r0, pc, r0
    dd08:	bl	4cb0 <strcmp@plt>
    dd0c:	cmp	r0, #0
    dd10:	beq	dff4 <rb_init_netio+0x360>
    dd14:	ldr	r0, [pc, #1168]	; e1ac <rb_init_netio+0x518>
    dd18:	mov	r1, r5
    dd1c:	add	r0, pc, r0
    dd20:	bl	4cb0 <strcmp@plt>
    dd24:	cmp	r0, #0
    dd28:	beq	e004 <rb_init_netio+0x370>
    dd2c:	ldr	r0, [pc, #1148]	; e1b0 <rb_init_netio+0x51c>
    dd30:	mov	r1, r5
    dd34:	add	r0, pc, r0
    dd38:	bl	4cb0 <strcmp@plt>
    dd3c:	cmp	r0, #0
    dd40:	beq	df9c <rb_init_netio+0x308>
    dd44:	ldr	r0, [pc, #1128]	; e1b4 <rb_init_netio+0x520>
    dd48:	mov	r1, r5
    dd4c:	add	r0, pc, r0
    dd50:	bl	4cb0 <strcmp@plt>
    dd54:	cmp	r0, #0
    dd58:	beq	e0c8 <rb_init_netio+0x434>
    dd5c:	ldr	r0, [pc, #1108]	; e1b8 <rb_init_netio+0x524>
    dd60:	mov	r1, r5
    dd64:	add	r0, pc, r0
    dd68:	bl	4cb0 <strcmp@plt>
    dd6c:	cmp	r0, #0
    dd70:	beq	e154 <rb_init_netio+0x4c0>
    dd74:	ldr	r0, [pc, #1088]	; e1bc <rb_init_netio+0x528>
    dd78:	mov	r1, r5
    dd7c:	add	r0, pc, r0
    dd80:	bl	4cb0 <strcmp@plt>
    dd84:	cmp	r0, #0
    dd88:	beq	e070 <rb_init_netio+0x3dc>
    dd8c:	ldr	r0, [pc, #1068]	; e1c0 <rb_init_netio+0x52c>
    dd90:	mov	r1, r5
    dd94:	add	r0, pc, r0
    dd98:	bl	4cb0 <strcmp@plt>
    dd9c:	cmp	r0, #0
    dda0:	beq	df34 <rb_init_netio+0x2a0>
    dda4:	bl	15f7c <rb_init_netio_kqueue>
    dda8:	cmp	r0, #0
    ddac:	bne	deac <rb_init_netio+0x218>
    ddb0:	ldr	r0, [pc, #1036]	; e1c4 <rb_init_netio+0x530>
    ddb4:	mov	r2, #25
    ddb8:	ldr	r3, [pc, #1032]	; e1c8 <rb_init_netio+0x534>
    ddbc:	ldr	r1, [pc, #1032]	; e1cc <rb_init_netio+0x538>
    ddc0:	ldr	lr, [r4, r0]
    ddc4:	add	r3, pc, r3
    ddc8:	ldr	ip, [pc, #1024]	; e1d0 <rb_init_netio+0x53c>
    ddcc:	add	r0, r3, #44	; 0x2c
    ddd0:	str	lr, [r3, #88]	; 0x58
    ddd4:	ldr	lr, [r4, r1]
    ddd8:	ldr	r1, [pc, #1012]	; e1d4 <rb_init_netio+0x540>
    dddc:	str	lr, [r3, #92]	; 0x5c
    dde0:	ldr	lr, [r4, ip]
    dde4:	ldr	ip, [pc, #1004]	; e1d8 <rb_init_netio+0x544>
    dde8:	str	lr, [r3, #96]	; 0x60
    ddec:	ldr	lr, [r4, r1]
    ddf0:	ldr	r1, [pc, #996]	; e1dc <rb_init_netio+0x548>
    ddf4:	str	lr, [r3, #76]	; 0x4c
    ddf8:	ldr	lr, [r4, ip]
    ddfc:	ldr	ip, [pc, #988]	; e1e0 <rb_init_netio+0x54c>
    de00:	str	lr, [r3, #80]	; 0x50
    de04:	ldr	lr, [r4, r1]
    de08:	ldr	r1, [pc, #980]	; e1e4 <rb_init_netio+0x550>
    de0c:	str	lr, [r3, #84]	; 0x54
    de10:	ldr	ip, [r4, ip]
    de14:	add	r1, pc, r1
    de18:	str	ip, [r3, #72]	; 0x48
    de1c:	ldrd	r4, [sp]
    de20:	ldr	r6, [sp, #8]
    de24:	ldr	lr, [sp, #12]
    de28:	add	sp, sp, #16
    de2c:	b	4680 <rb_strlcpy@plt>
    de30:	bl	13a84 <rb_init_netio_epoll>
    de34:	cmp	r0, #0
    de38:	bne	dd8c <rb_init_netio+0xf8>
    de3c:	ldr	r0, [pc, #932]	; e1e8 <rb_init_netio+0x554>
    de40:	mov	r2, #25
    de44:	ldr	r3, [pc, #928]	; e1ec <rb_init_netio+0x558>
    de48:	ldr	r1, [pc, #928]	; e1f0 <rb_init_netio+0x55c>
    de4c:	ldr	lr, [r4, r0]
    de50:	add	r3, pc, r3
    de54:	ldr	ip, [pc, #920]	; e1f4 <rb_init_netio+0x560>
    de58:	add	r0, r3, #44	; 0x2c
    de5c:	str	lr, [r3, #88]	; 0x58
    de60:	ldr	lr, [r4, r1]
    de64:	ldr	r1, [pc, #908]	; e1f8 <rb_init_netio+0x564>
    de68:	str	lr, [r3, #92]	; 0x5c
    de6c:	ldr	lr, [r4, ip]
    de70:	ldr	ip, [pc, #900]	; e1fc <rb_init_netio+0x568>
    de74:	str	lr, [r3, #96]	; 0x60
    de78:	ldr	lr, [r4, r1]
    de7c:	ldr	r1, [pc, #892]	; e200 <rb_init_netio+0x56c>
    de80:	str	lr, [r3, #76]	; 0x4c
    de84:	ldr	lr, [r4, ip]
    de88:	ldr	ip, [pc, #884]	; e204 <rb_init_netio+0x570>
    de8c:	str	lr, [r3, #80]	; 0x50
    de90:	ldr	lr, [r4, r1]
    de94:	ldr	r1, [pc, #876]	; e208 <rb_init_netio+0x574>
    de98:	str	lr, [r3, #72]	; 0x48
    de9c:	ldr	ip, [r4, ip]
    dea0:	add	r1, pc, r1
    dea4:	str	ip, [r3, #84]	; 0x54
    dea8:	b	de1c <rb_init_netio+0x188>
    deac:	bl	13a84 <rb_init_netio_epoll>
    deb0:	cmp	r0, #0
    deb4:	beq	de3c <rb_init_netio+0x1a8>
    deb8:	bl	14ec4 <rb_init_netio_ports>
    debc:	cmp	r0, #0
    dec0:	bne	e018 <rb_init_netio+0x384>
    dec4:	ldr	r0, [pc, #832]	; e20c <rb_init_netio+0x578>
    dec8:	mov	r2, #25
    decc:	ldr	r3, [pc, #828]	; e210 <rb_init_netio+0x57c>
    ded0:	ldr	r1, [pc, #828]	; e214 <rb_init_netio+0x580>
    ded4:	ldr	lr, [r4, r0]
    ded8:	add	r3, pc, r3
    dedc:	ldr	ip, [pc, #820]	; e218 <rb_init_netio+0x584>
    dee0:	add	r0, r3, #44	; 0x2c
    dee4:	str	lr, [r3, #88]	; 0x58
    dee8:	ldr	lr, [r4, r1]
    deec:	ldr	r1, [pc, #808]	; e21c <rb_init_netio+0x588>
    def0:	str	lr, [r3, #92]	; 0x5c
    def4:	ldr	lr, [r4, ip]
    def8:	ldr	ip, [pc, #800]	; e220 <rb_init_netio+0x58c>
    defc:	str	lr, [r3, #96]	; 0x60
    df00:	ldr	lr, [r4, r1]
    df04:	ldr	r1, [pc, #792]	; e224 <rb_init_netio+0x590>
    df08:	str	lr, [r3, #76]	; 0x4c
    df0c:	ldr	lr, [r4, ip]
    df10:	ldr	ip, [pc, #784]	; e228 <rb_init_netio+0x594>
    df14:	str	lr, [r3, #80]	; 0x50
    df18:	ldr	lr, [r4, r1]
    df1c:	ldr	r1, [pc, #776]	; e22c <rb_init_netio+0x598>
    df20:	str	lr, [r3, #84]	; 0x54
    df24:	ldr	ip, [r4, ip]
    df28:	add	r1, pc, r1
    df2c:	str	ip, [r3, #72]	; 0x48
    df30:	b	de1c <rb_init_netio+0x188>
    df34:	bl	4f48 <rb_init_netio_win32>
    df38:	cmp	r0, #0
    df3c:	bne	dda4 <rb_init_netio+0x110>
    df40:	ldr	r0, [pc, #744]	; e230 <rb_init_netio+0x59c>
    df44:	mov	ip, #0
    df48:	mov	r2, #25
    df4c:	ldr	r3, [pc, #736]	; e234 <rb_init_netio+0x5a0>
    df50:	ldr	r1, [pc, #736]	; e238 <rb_init_netio+0x5a4>
    df54:	ldr	r5, [r4, r0]
    df58:	add	r3, pc, r3
    df5c:	ldr	lr, [pc, #728]	; e23c <rb_init_netio+0x5a8>
    df60:	add	r0, r3, #44	; 0x2c
    df64:	str	r5, [r3, #88]	; 0x58
    df68:	ldr	r5, [r4, r1]
    df6c:	ldr	r1, [pc, #716]	; e240 <rb_init_netio+0x5ac>
    df70:	str	r5, [r3, #92]	; 0x5c
    df74:	ldr	lr, [r4, lr]
    df78:	add	r1, pc, r1
    df7c:	str	r1, [r3, #72]	; 0x48
    df80:	ldr	r1, [pc, #700]	; e244 <rb_init_netio+0x5b0>
    df84:	add	r1, pc, r1
    df88:	str	ip, [r3, #76]	; 0x4c
    df8c:	str	ip, [r3, #80]	; 0x50
    df90:	str	ip, [r3, #84]	; 0x54
    df94:	str	lr, [r3, #96]	; 0x60
    df98:	b	de1c <rb_init_netio+0x188>
    df9c:	bl	149f8 <rb_init_netio_poll>
    dfa0:	cmp	r0, #0
    dfa4:	bne	dd8c <rb_init_netio+0xf8>
    dfa8:	ldr	r0, [pc, #664]	; e248 <rb_init_netio+0x5b4>
    dfac:	mov	ip, #0
    dfb0:	mov	r2, #25
    dfb4:	ldr	r3, [pc, #656]	; e24c <rb_init_netio+0x5b8>
    dfb8:	ldr	r1, [pc, #656]	; e250 <rb_init_netio+0x5bc>
    dfbc:	ldr	r5, [r4, r0]
    dfc0:	add	r3, pc, r3
    dfc4:	ldr	lr, [pc, #648]	; e254 <rb_init_netio+0x5c0>
    dfc8:	add	r0, r3, #44	; 0x2c
    dfcc:	str	r5, [r3, #88]	; 0x58
    dfd0:	ldr	r5, [r4, r1]
    dfd4:	ldr	r1, [pc, #636]	; e258 <rb_init_netio+0x5c4>
    dfd8:	str	r5, [r3, #92]	; 0x5c
    dfdc:	ldr	lr, [r4, lr]
    dfe0:	add	r1, pc, r1
    dfe4:	str	r1, [r3, #72]	; 0x48
    dfe8:	ldr	r1, [pc, #620]	; e25c <rb_init_netio+0x5c8>
    dfec:	add	r1, pc, r1
    dff0:	b	df88 <rb_init_netio+0x2f4>
    dff4:	bl	15f7c <rb_init_netio_kqueue>
    dff8:	cmp	r0, #0
    dffc:	beq	ddb0 <rb_init_netio+0x11c>
    e000:	b	dd8c <rb_init_netio+0xf8>
    e004:	bl	14ec4 <rb_init_netio_ports>
    e008:	cmp	r0, #0
    e00c:	beq	dec4 <rb_init_netio+0x230>
    e010:	b	dd8c <rb_init_netio+0xf8>
    e014:	bl	495c <rb_outofmemory@plt>
    e018:	bl	1394c <rb_init_netio_devpoll>
    e01c:	cmp	r0, #0
    e020:	bne	e0d8 <rb_init_netio+0x444>
    e024:	ldr	r0, [pc, #564]	; e260 <rb_init_netio+0x5cc>
    e028:	mov	ip, #0
    e02c:	mov	r2, #25
    e030:	ldr	r3, [pc, #556]	; e264 <rb_init_netio+0x5d0>
    e034:	ldr	r1, [pc, #556]	; e268 <rb_init_netio+0x5d4>
    e038:	ldr	r5, [r4, r0]
    e03c:	add	r3, pc, r3
    e040:	ldr	lr, [pc, #548]	; e26c <rb_init_netio+0x5d8>
    e044:	add	r0, r3, #44	; 0x2c
    e048:	str	r5, [r3, #88]	; 0x58
    e04c:	ldr	r5, [r4, r1]
    e050:	ldr	r1, [pc, #536]	; e270 <rb_init_netio+0x5dc>
    e054:	str	r5, [r3, #92]	; 0x5c
    e058:	ldr	lr, [r4, lr]
    e05c:	add	r1, pc, r1
    e060:	str	r1, [r3, #72]	; 0x48
    e064:	ldr	r1, [pc, #520]	; e274 <rb_init_netio+0x5e0>
    e068:	add	r1, pc, r1
    e06c:	b	df88 <rb_init_netio+0x2f4>
    e070:	bl	15ac8 <rb_init_netio_select>
    e074:	cmp	r0, #0
    e078:	bne	dd8c <rb_init_netio+0xf8>
    e07c:	ldr	r0, [pc, #500]	; e278 <rb_init_netio+0x5e4>
    e080:	mov	ip, #0
    e084:	mov	r2, #25
    e088:	ldr	r3, [pc, #492]	; e27c <rb_init_netio+0x5e8>
    e08c:	ldr	r1, [pc, #492]	; e280 <rb_init_netio+0x5ec>
    e090:	ldr	r5, [r4, r0]
    e094:	add	r3, pc, r3
    e098:	ldr	lr, [pc, #484]	; e284 <rb_init_netio+0x5f0>
    e09c:	add	r0, r3, #44	; 0x2c
    e0a0:	str	r5, [r3, #88]	; 0x58
    e0a4:	ldr	r5, [r4, r1]
    e0a8:	ldr	r1, [pc, #472]	; e288 <rb_init_netio+0x5f4>
    e0ac:	str	r5, [r3, #92]	; 0x5c
    e0b0:	ldr	lr, [r4, lr]
    e0b4:	add	r1, pc, r1
    e0b8:	str	r1, [r3, #72]	; 0x48
    e0bc:	ldr	r1, [pc, #456]	; e28c <rb_init_netio+0x5f8>
    e0c0:	add	r1, pc, r1
    e0c4:	b	df88 <rb_init_netio+0x2f4>
    e0c8:	bl	1394c <rb_init_netio_devpoll>
    e0cc:	cmp	r0, #0
    e0d0:	beq	e024 <rb_init_netio+0x390>
    e0d4:	b	dd8c <rb_init_netio+0xf8>
    e0d8:	bl	14f34 <rb_init_netio_sigio>
    e0dc:	cmp	r0, #0
    e0e0:	bne	e164 <rb_init_netio+0x4d0>
    e0e4:	ldr	r0, [pc, #420]	; e290 <rb_init_netio+0x5fc>
    e0e8:	mov	r2, #25
    e0ec:	ldr	r3, [pc, #416]	; e294 <rb_init_netio+0x600>
    e0f0:	ldr	r1, [pc, #416]	; e298 <rb_init_netio+0x604>
    e0f4:	ldr	lr, [r4, r0]
    e0f8:	add	r3, pc, r3
    e0fc:	ldr	ip, [pc, #408]	; e29c <rb_init_netio+0x608>
    e100:	add	r0, r3, #44	; 0x2c
    e104:	str	lr, [r3, #88]	; 0x58
    e108:	ldr	lr, [r4, r1]
    e10c:	ldr	r1, [pc, #396]	; e2a0 <rb_init_netio+0x60c>
    e110:	str	lr, [r3, #92]	; 0x5c
    e114:	ldr	lr, [r4, ip]
    e118:	ldr	ip, [pc, #388]	; e2a4 <rb_init_netio+0x610>
    e11c:	str	lr, [r3, #96]	; 0x60
    e120:	ldr	lr, [r4, r1]
    e124:	ldr	r1, [pc, #380]	; e2a8 <rb_init_netio+0x614>
    e128:	str	lr, [r3, #76]	; 0x4c
    e12c:	ldr	lr, [r4, ip]
    e130:	ldr	ip, [pc, #372]	; e2ac <rb_init_netio+0x618>
    e134:	str	lr, [r3, #80]	; 0x50
    e138:	ldr	lr, [r4, r1]
    e13c:	ldr	r1, [pc, #364]	; e2b0 <rb_init_netio+0x61c>
    e140:	str	lr, [r3, #72]	; 0x48
    e144:	ldr	ip, [r4, ip]
    e148:	add	r1, pc, r1
    e14c:	str	ip, [r3, #84]	; 0x54
    e150:	b	de1c <rb_init_netio+0x188>
    e154:	bl	14f34 <rb_init_netio_sigio>
    e158:	cmp	r0, #0
    e15c:	beq	e0e4 <rb_init_netio+0x450>
    e160:	b	dd8c <rb_init_netio+0xf8>
    e164:	bl	149f8 <rb_init_netio_poll>
    e168:	cmp	r0, #0
    e16c:	beq	dfa8 <rb_init_netio+0x314>
    e170:	bl	4f48 <rb_init_netio_win32>
    e174:	cmp	r0, #0
    e178:	beq	df40 <rb_init_netio+0x2ac>
    e17c:	bl	15ac8 <rb_init_netio_select>
    e180:	cmp	r0, #0
    e184:	beq	e07c <rb_init_netio+0x3e8>
    e188:	ldr	r0, [pc, #292]	; e2b4 <rb_init_netio+0x620>
    e18c:	add	r0, pc, r0
    e190:	bl	48f0 <rb_lib_log@plt>
    e194:	bl	4398 <abort@plt>
    e198:	.word	0x0000c534
    e19c:	.word	0x0001e33c
    e1a0:	.word	0x000003bc
    e1a4:	.word	0x0000c504
    e1a8:	.word	0x0000c4f4
    e1ac:	.word	0x0000c4e4
    e1b0:	.word	0x0000c4d4
    e1b4:	.word	0x0000c4c4
    e1b8:	.word	0x0000c4b4
    e1bc:	.word	0x0000c4a4
    e1c0:	.word	0x0000c494
    e1c4:	.word	0x000003b8
    e1c8:	.word	0x00030be0
    e1cc:	.word	0x00000374
    e1d0:	.word	0x00000394
    e1d4:	.word	0x0000038c
    e1d8:	.word	0x000003d0
    e1dc:	.word	0x00000390
    e1e0:	.word	0x000003e0
    e1e4:	.word	0x0000c3e4
    e1e8:	.word	0x00000364
    e1ec:	.word	0x00030b54
    e1f0:	.word	0x000003c4
    e1f4:	.word	0x00000400
    e1f8:	.word	0x00000380
    e1fc:	.word	0x000003c0
    e200:	.word	0x00000354
    e204:	.word	0x00000414
    e208:	.word	0x0000c350
    e20c:	.word	0x000003e4
    e210:	.word	0x00030acc
    e214:	.word	0x00000384
    e218:	.word	0x0000040c
    e21c:	.word	0x00000350
    e220:	.word	0x00000408
    e224:	.word	0x00000360
    e228:	.word	0x000003dc
    e22c:	.word	0x0000c2d8
    e230:	.word	0x00000398
    e234:	.word	0x00030a4c
    e238:	.word	0x000003a4
    e23c:	.word	0x0000036c
    e240:	.word	0xffffe280
    e244:	.word	0x0000c2a4
    e248:	.word	0x000003e8
    e24c:	.word	0x000309e4
    e250:	.word	0x000003f8
    e254:	.word	0x0000037c
    e258:	.word	0xffffe218
    e25c:	.word	0x0000c21c
    e260:	.word	0x000003ac
    e264:	.word	0x00030968
    e268:	.word	0x000003ec
    e26c:	.word	0x000003b0
    e270:	.word	0xffffe19c
    e274:	.word	0x0000c1a8
    e278:	.word	0x0000041c
    e27c:	.word	0x00030910
    e280:	.word	0x000003b4
    e284:	.word	0x000003fc
    e288:	.word	0xffffe144
    e28c:	.word	0x0000c160
    e290:	.word	0x000003c8
    e294:	.word	0x000308ac
    e298:	.word	0x00000368
    e29c:	.word	0x000003d8
    e2a0:	.word	0x00000370
    e2a4:	.word	0x00000358
    e2a8:	.word	0x000003d4
    e2ac:	.word	0x000003f4
    e2b0:	.word	0x0000c0d0
    e2b4:	.word	0x0000c0a4

0000e2b8 <rb_setselect>:
    e2b8:	ldr	ip, [pc, #20]	; e2d4 <rb_setselect+0x1c>
    e2bc:	push	{lr}		; (str lr, [sp, #-4]!)
    e2c0:	add	ip, pc, ip
    e2c4:	ldr	lr, [ip, #88]	; 0x58
    e2c8:	mov	ip, lr
    e2cc:	pop	{lr}		; (ldr lr, [sp], #4)
    e2d0:	bx	ip
    e2d4:	.word	0x000306e4

0000e2d8 <rb_close>:
    e2d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    e2dc:	subs	r4, r0, #0
    e2e0:	strd	r6, [sp, #8]
    e2e4:	ldr	r6, [pc, #412]	; e488 <rb_close+0x1b0>
    e2e8:	str	r8, [sp, #16]
    e2ec:	str	lr, [sp, #20]
    e2f0:	add	r6, pc, r6
    e2f4:	beq	e37c <rb_close+0xa4>
    e2f8:	ldrb	r5, [r4, #17]
    e2fc:	ldr	r8, [r4, #12]
    e300:	ands	r7, r5, #16
    e304:	bne	e390 <rb_close+0xb8>
    e308:	mov	r3, #0
    e30c:	mov	r1, #3
    e310:	mov	r2, r3
    e314:	mov	r0, r4
    e318:	bl	447c <rb_setselect@plt>
    e31c:	mov	r3, #0
    e320:	mov	r0, r4
    e324:	mov	r2, r3
    e328:	mov	r1, r3
    e32c:	bl	43bc <rb_settimeout@plt>
    e330:	ldr	r0, [r4, #52]	; 0x34
    e334:	cmp	r0, #0
    e338:	beq	e340 <rb_close+0x68>
    e33c:	bl	46d4 <free@plt>
    e340:	ldr	r0, [r4, #48]	; 0x30
    e344:	cmp	r0, #0
    e348:	beq	e350 <rb_close+0x78>
    e34c:	bl	46d4 <free@plt>
    e350:	ldr	r0, [r4, #24]
    e354:	cmp	r0, #0
    e358:	beq	e360 <rb_close+0x88>
    e35c:	bl	46d4 <free@plt>
    e360:	tst	r5, #32
    e364:	bne	e3c0 <rb_close+0xe8>
    e368:	ldrb	r3, [r4, #16]
    e36c:	tst	r3, #1
    e370:	bne	e3d4 <rb_close+0xfc>
    e374:	cmp	r7, #0
    e378:	bne	e3a0 <rb_close+0xc8>
    e37c:	ldrd	r4, [sp]
    e380:	ldrd	r6, [sp, #8]
    e384:	ldr	r8, [sp, #16]
    e388:	add	sp, sp, #20
    e38c:	pop	{pc}		; (ldr pc, [sp], #4)
    e390:	mov	r1, #0
    e394:	mov	r0, r8
    e398:	bl	45b4 <listen@plt>
    e39c:	b	e308 <rb_close+0x30>
    e3a0:	mov	r0, r8
    e3a4:	mov	r1, #2
    e3a8:	ldrd	r4, [sp]
    e3ac:	ldrd	r6, [sp, #8]
    e3b0:	ldr	r8, [sp, #16]
    e3b4:	ldr	lr, [sp, #20]
    e3b8:	add	sp, sp, #24
    e3bc:	b	48d8 <shutdown@plt>
    e3c0:	mov	r0, r4
    e3c4:	bl	fc8c <rb_ssl_shutdown>
    e3c8:	ldrb	r3, [r4, #16]
    e3cc:	tst	r3, #1
    e3d0:	beq	e374 <rb_close+0x9c>
    e3d4:	ldr	ip, [pc, #176]	; e48c <rb_close+0x1b4>
    e3d8:	ldrd	r0, [r4, #8]
    e3dc:	ldr	r2, [r4, #4]
    e3e0:	ldr	ip, [r6, ip]
    e3e4:	asr	r3, r1, #24
    e3e8:	cmp	r0, #0
    e3ec:	eor	r3, r3, r1, asr #12
    e3f0:	strne	r2, [r0, #4]
    e3f4:	ldrne	r2, [r4, #4]
    e3f8:	eor	r3, r3, r1
    e3fc:	ubfx	r3, r3, #0, #12
    e400:	ldr	ip, [ip]
    e404:	add	r3, r3, r3, lsl #1
    e408:	lsl	r3, r3, #2
    e40c:	add	r1, ip, r3
    e410:	streq	r2, [r1, #4]
    e414:	cmp	r2, #0
    e418:	strne	r0, [r2, #8]
    e41c:	ldr	r2, [pc, #108]	; e490 <rb_close+0x1b8>
    e420:	streq	r0, [ip, r3]
    e424:	mov	r3, #0
    e428:	str	r3, [r4, #4]
    e42c:	add	r2, pc, r2
    e430:	ldr	r3, [r2, #100]	; 0x64
    e434:	cmp	r3, #0
    e438:	str	r3, [r4, #8]
    e43c:	strne	r4, [r3, #4]
    e440:	beq	e478 <rb_close+0x1a0>
    e444:	ldr	r3, [r1, #8]
    e448:	ldr	r2, [pc, #68]	; e494 <rb_close+0x1bc>
    e44c:	sub	r3, r3, #1
    e450:	add	r2, pc, r2
    e454:	str	r3, [r1, #8]
    e458:	ldrb	r3, [r4, #16]
    e45c:	str	r4, [r2, #100]	; 0x64
    e460:	ldr	r1, [r2, #108]	; 0x6c
    e464:	bic	r3, r3, #1
    e468:	add	r1, r1, #1
    e46c:	strb	r3, [r4, #16]
    e470:	str	r1, [r2, #108]	; 0x6c
    e474:	b	e374 <rb_close+0x9c>
    e478:	ldr	r3, [r2, #104]	; 0x68
    e47c:	cmp	r3, #0
    e480:	streq	r4, [r2, #104]	; 0x68
    e484:	b	e444 <rb_close+0x16c>
    e488:	.word	0x0001dd08
    e48c:	.word	0x000003bc
    e490:	.word	0x00030578
    e494:	.word	0x00030554

0000e498 <rb_select>:
    e498:	strd	r4, [sp, #-32]!	; 0xffffffe0
    e49c:	ldr	r5, [pc, #236]	; e590 <rb_select+0xf8>
    e4a0:	add	r5, pc, r5
    e4a4:	ldr	r3, [r5, #92]	; 0x5c
    e4a8:	strd	r6, [sp, #8]
    e4ac:	strd	r8, [sp, #16]
    e4b0:	str	sl, [sp, #24]
    e4b4:	str	lr, [sp, #28]
    e4b8:	blx	r3
    e4bc:	ldr	r4, [r5, #100]	; 0x64
    e4c0:	mov	r9, r0
    e4c4:	cmp	r4, #0
    e4c8:	beq	e574 <rb_select+0xdc>
    e4cc:	ldr	r7, [pc, #192]	; e594 <rb_select+0xfc>
    e4d0:	ldr	r8, [pc, #192]	; e598 <rb_select+0x100>
    e4d4:	ldr	r6, [r4, #8]
    e4d8:	add	r7, pc, r7
    e4dc:	add	r8, pc, r8
    e4e0:	ldr	r3, [r5, #40]	; 0x28
    e4e4:	ldr	sl, [r4]
    e4e8:	sub	r3, r3, #1
    e4ec:	ldr	r0, [sl, #12]
    e4f0:	str	r3, [r5, #40]	; 0x28
    e4f4:	bl	4914 <close@plt>
    e4f8:	ldrd	r2, [r4, #4]
    e4fc:	mov	ip, #0
    e500:	mov	r1, sl
    e504:	cmp	r3, #0
    e508:	strne	r2, [r3, #4]
    e50c:	streq	r2, [r5, #104]	; 0x68
    e510:	ldr	r0, [r4, #4]
    e514:	cmp	r0, ip
    e518:	beq	e550 <rb_select+0xb8>
    e51c:	ldr	r2, [r8, #108]	; 0x6c
    e520:	str	r3, [r0, #8]
    e524:	str	ip, [r4, #4]
    e528:	str	ip, [r4, #8]
    e52c:	ldr	r0, [r8, #36]	; 0x24
    e530:	sub	r3, r2, #1
    e534:	str	r3, [r8, #108]	; 0x6c
    e538:	bl	48a8 <rb_bh_free@plt>
    e53c:	cmp	r6, #0
    e540:	beq	e574 <rb_select+0xdc>
    e544:	mov	r4, r6
    e548:	ldr	r6, [r6, #8]
    e54c:	b	e4e0 <rb_select+0x48>
    e550:	ldr	r2, [r7, #108]	; 0x6c
    e554:	str	r3, [r7, #100]	; 0x64
    e558:	str	r0, [r4, #8]
    e55c:	ldr	r0, [r7, #36]	; 0x24
    e560:	sub	r3, r2, #1
    e564:	str	r3, [r7, #108]	; 0x6c
    e568:	bl	48a8 <rb_bh_free@plt>
    e56c:	cmp	r6, #0
    e570:	bne	e544 <rb_select+0xac>
    e574:	mov	r0, r9
    e578:	ldrd	r4, [sp]
    e57c:	ldrd	r6, [sp, #8]
    e580:	ldrd	r8, [sp, #16]
    e584:	ldr	sl, [sp, #24]
    e588:	add	sp, sp, #28
    e58c:	pop	{pc}		; (ldr pc, [sp], #4)
    e590:	.word	0x00030504
    e594:	.word	0x000304cc
    e598:	.word	0x000304c8

0000e59c <rb_setup_fd>:
    e59c:	ldr	r3, [pc, #8]	; e5ac <rb_setup_fd+0x10>
    e5a0:	add	r3, pc, r3
    e5a4:	ldr	r3, [r3, #96]	; 0x60
    e5a8:	bx	r3
    e5ac:	.word	0x00030404

0000e5b0 <rb_set_nb>:
    e5b0:	subs	r3, r0, #0
    e5b4:	beq	e61c <rb_set_nb+0x6c>
    e5b8:	str	r4, [sp, #-8]!
    e5bc:	ldr	r4, [r3, #12]
    e5c0:	str	lr, [sp, #4]
    e5c4:	bl	4b00 <rb_setup_fd@plt>
    e5c8:	cmp	r0, #0
    e5cc:	beq	e5dc <rb_set_nb+0x2c>
    e5d0:	ldr	r4, [sp]
    e5d4:	add	sp, sp, #4
    e5d8:	pop	{pc}		; (ldr pc, [sp], #4)
    e5dc:	mov	r2, r0
    e5e0:	mov	r1, #3
    e5e4:	mov	r0, r4
    e5e8:	bl	4bd8 <fcntl@plt>
    e5ec:	cmn	r0, #1
    e5f0:	moveq	r0, #0
    e5f4:	beq	e5d0 <rb_set_nb+0x20>
    e5f8:	orr	r2, r0, #2048	; 0x800
    e5fc:	mov	r1, #4
    e600:	mov	r0, r4
    e604:	bl	4bd8 <fcntl@plt>
    e608:	adds	r0, r0, #1
    e60c:	ldr	r4, [sp]
    e610:	add	sp, sp, #4
    e614:	movne	r0, #1
    e618:	pop	{pc}		; (ldr pc, [sp], #4)
    e61c:	mov	r0, #0
    e620:	bx	lr

0000e624 <rb_accept_tryaccept>:
    e624:	strd	r4, [sp, #-32]!	; 0xffffffe0
    e628:	mov	r4, r0
    e62c:	strd	r6, [sp, #8]
    e630:	strd	r8, [sp, #16]
    e634:	ldr	r9, [pc, #424]	; e7e4 <rb_accept_tryaccept+0x1c0>
    e638:	str	sl, [sp, #24]
    e63c:	ldr	sl, [pc, #420]	; e7e8 <rb_accept_tryaccept+0x1c4>
    e640:	str	lr, [sp, #28]
    e644:	sub	sp, sp, #160	; 0xa0
    e648:	add	r5, sp, #32
    e64c:	add	r8, sp, #12
    e650:	add	r9, pc, r9
    e654:	add	sl, pc, sl
    e658:	mov	r6, #128	; 0x80
    e65c:	mov	r1, #0
    e660:	mov	r2, r6
    e664:	mov	r0, r5
    e668:	bl	4608 <memset@plt>
    e66c:	mov	r2, r8
    e670:	mov	r1, r5
    e674:	ldr	r0, [r4, #12]
    e678:	str	r6, [sp, #12]
    e67c:	bl	474c <accept@plt>
    e680:	subs	r6, r0, #0
    e684:	blt	e798 <rb_accept_tryaccept+0x174>
    e688:	ldrb	r1, [r4, #17]
    e68c:	mov	r2, r9
    e690:	bic	r1, r1, #127	; 0x7f
    e694:	orr	r1, r1, #4
    e698:	bl	4a58 <rb_open@plt>
    e69c:	subs	r7, r0, #0
    e6a0:	beq	e77c <rb_accept_tryaccept+0x158>
    e6a4:	bl	45fc <rb_set_nb@plt>
    e6a8:	cmp	r0, #0
    e6ac:	beq	e7cc <rb_accept_tryaccept+0x1a8>
    e6b0:	ldrh	r3, [sp, #32]
    e6b4:	cmp	r3, #10
    e6b8:	beq	e71c <rb_accept_tryaccept+0xf8>
    e6bc:	ldr	r0, [r4, #52]	; 0x34
    e6c0:	ldr	r3, [sp, #12]
    e6c4:	ldr	r6, [r0, #136]	; 0x88
    e6c8:	cmp	r6, #0
    e6cc:	beq	e6f0 <rb_accept_tryaccept+0xcc>
    e6d0:	mov	r2, r3
    e6d4:	mov	r1, r5
    e6d8:	ldr	r3, [r0, #140]	; 0x8c
    e6dc:	mov	r0, r7
    e6e0:	blx	r6
    e6e4:	cmp	r0, #0
    e6e8:	beq	e658 <rb_accept_tryaccept+0x34>
    e6ec:	ldr	r3, [sp, #12]
    e6f0:	ldrb	r1, [r4, #17]
    e6f4:	ands	r1, r1, #32
    e6f8:	bne	e768 <rb_accept_tryaccept+0x144>
    e6fc:	ldr	ip, [r4, #52]	; 0x34
    e700:	mov	r0, r7
    e704:	mov	r2, r5
    e708:	ldr	lr, [ip, #140]	; 0x8c
    e70c:	str	lr, [sp]
    e710:	ldr	r6, [ip, #132]	; 0x84
    e714:	blx	r6
    e718:	b	e658 <rb_accept_tryaccept+0x34>
    e71c:	ldrd	r2, [sp, #40]	; 0x28
    e720:	orrs	r3, r2, r3
    e724:	bne	e6bc <rb_accept_tryaccept+0x98>
    e728:	ldr	r3, [sp, #48]	; 0x30
    e72c:	cmn	r3, #65536	; 0x10000
    e730:	bne	e6bc <rb_accept_tryaccept+0x98>
    e734:	ldrh	r2, [sp, #34]	; 0x22
    e738:	mov	ip, #2
    e73c:	mov	r0, #0
    e740:	mov	r1, #0
    e744:	ldr	r3, [sp, #52]	; 0x34
    e748:	strh	ip, [sp, #16]
    e74c:	strd	r0, [r5, #8]
    e750:	strh	r2, [sp, #18]
    e754:	str	r3, [sp, #20]
    e758:	ldrd	r2, [sp, #16]
    e75c:	strd	r0, [sp, #24]
    e760:	strd	r2, [r5]
    e764:	b	e6bc <rb_accept_tryaccept+0x98>
    e768:	mov	r1, r7
    e76c:	mov	r2, r5
    e770:	mov	r0, r4
    e774:	bl	10790 <rb_ssl_accept_setup>
    e778:	b	e658 <rb_accept_tryaccept+0x34>
    e77c:	ldr	r0, [pc, #104]	; e7ec <rb_accept_tryaccept+0x1c8>
    e780:	mov	r1, r6
    e784:	add	r0, pc, r0
    e788:	bl	48f0 <rb_lib_log@plt>
    e78c:	mov	r0, r6
    e790:	bl	4914 <close@plt>
    e794:	b	e658 <rb_accept_tryaccept+0x34>
    e798:	ldr	r2, [pc, #80]	; e7f0 <rb_accept_tryaccept+0x1cc>
    e79c:	mov	r0, r4
    e7a0:	mov	r3, #0
    e7a4:	mov	r1, #1
    e7a8:	add	r2, pc, r2
    e7ac:	bl	447c <rb_setselect@plt>
    e7b0:	add	sp, sp, #160	; 0xa0
    e7b4:	ldrd	r4, [sp]
    e7b8:	ldrd	r6, [sp, #8]
    e7bc:	ldrd	r8, [sp, #16]
    e7c0:	ldr	sl, [sp, #24]
    e7c4:	add	sp, sp, #28
    e7c8:	pop	{pc}		; (ldr pc, [sp], #4)
    e7cc:	mov	r0, sl
    e7d0:	ldr	r1, [r7, #12]
    e7d4:	bl	48f0 <rb_lib_log@plt>
    e7d8:	mov	r0, r7
    e7dc:	bl	4848 <rb_close@plt>
    e7e0:	b	e6b0 <rb_accept_tryaccept+0x8c>
    e7e4:	.word	0x0000bc1c
    e7e8:	.word	0x0000bc74
    e7ec:	.word	0x0000bafc
    e7f0:	.word	0xfffffe74

0000e7f4 <rb_socketpair>:
    e7f4:	ldr	ip, [pc, #348]	; e958 <rb_socketpair+0x164>
    e7f8:	strd	r4, [sp, #-20]!	; 0xffffffec
    e7fc:	mov	r4, r3
    e800:	add	ip, pc, ip
    e804:	mov	r3, ip
    e808:	ldr	ip, [pc, #332]	; e95c <rb_socketpair+0x168>
    e80c:	add	ip, pc, ip
    e810:	ldr	ip, [ip, #40]	; 0x28
    e814:	strd	r6, [sp, #8]
    e818:	str	lr, [sp, #16]
    e81c:	sub	sp, sp, #12
    e820:	ldr	lr, [pc, #312]	; e960 <rb_socketpair+0x16c>
    e824:	ldr	r5, [sp, #32]
    e828:	ldr	lr, [r3, lr]
    e82c:	ldr	r3, [lr]
    e830:	cmp	ip, r3
    e834:	bge	e938 <rb_socketpair+0x144>
    e838:	mov	r3, sp
    e83c:	bl	453c <socketpair@plt>
    e840:	subs	r6, r0, #0
    e844:	bne	e930 <rb_socketpair+0x13c>
    e848:	mov	r1, #4
    e84c:	ldr	r0, [sp]
    e850:	ldr	r2, [sp, #36]	; 0x24
    e854:	bl	4a58 <rb_open@plt>
    e858:	mov	r1, #4
    e85c:	str	r0, [r4]
    e860:	ldr	r0, [sp, #4]
    e864:	ldr	r2, [sp, #36]	; 0x24
    e868:	bl	4a58 <rb_open@plt>
    e86c:	str	r0, [r5]
    e870:	mov	r3, r0
    e874:	ldr	r2, [r4]
    e878:	cmp	r2, #0
    e87c:	beq	e924 <rb_socketpair+0x130>
    e880:	cmp	r3, #0
    e884:	mov	r0, r2
    e888:	beq	e94c <rb_socketpair+0x158>
    e88c:	bl	45fc <rb_set_nb@plt>
    e890:	cmp	r0, #0
    e894:	beq	e8c0 <rb_socketpair+0xcc>
    e898:	ldr	r0, [r5]
    e89c:	bl	45fc <rb_set_nb@plt>
    e8a0:	cmp	r0, #0
    e8a4:	beq	e8fc <rb_socketpair+0x108>
    e8a8:	mov	r0, r6
    e8ac:	add	sp, sp, #12
    e8b0:	ldrd	r4, [sp]
    e8b4:	ldrd	r6, [sp, #8]
    e8b8:	add	sp, sp, #16
    e8bc:	pop	{pc}		; (ldr pc, [sp], #4)
    e8c0:	bl	4cbc <__errno_location@plt>
    e8c4:	ldr	r0, [r0]
    e8c8:	mvn	r6, #0
    e8cc:	ldr	r7, [sp]
    e8d0:	bl	4374 <strerror@plt>
    e8d4:	mov	r2, r0
    e8d8:	ldr	r0, [pc, #132]	; e964 <rb_socketpair+0x170>
    e8dc:	mov	r1, r7
    e8e0:	add	r0, pc, r0
    e8e4:	bl	48f0 <rb_lib_log@plt>
    e8e8:	ldr	r0, [r4]
    e8ec:	bl	4848 <rb_close@plt>
    e8f0:	ldr	r0, [r5]
    e8f4:	bl	4848 <rb_close@plt>
    e8f8:	b	e8a8 <rb_socketpair+0xb4>
    e8fc:	bl	4cbc <__errno_location@plt>
    e900:	ldr	r0, [r0]
    e904:	mvn	r6, #0
    e908:	ldr	r7, [sp, #4]
    e90c:	bl	4374 <strerror@plt>
    e910:	mov	r2, r0
    e914:	ldr	r0, [pc, #76]	; e968 <rb_socketpair+0x174>
    e918:	mov	r1, r7
    e91c:	add	r0, pc, r0
    e920:	b	e8e4 <rb_socketpair+0xf0>
    e924:	cmp	r0, #0
    e928:	beq	e930 <rb_socketpair+0x13c>
    e92c:	bl	4848 <rb_close@plt>
    e930:	mvn	r6, #0
    e934:	b	e8a8 <rb_socketpair+0xb4>
    e938:	bl	4cbc <__errno_location@plt>
    e93c:	mov	r3, #23
    e940:	mvn	r6, #0
    e944:	str	r3, [r0]
    e948:	b	e8a8 <rb_socketpair+0xb4>
    e94c:	mvn	r6, #0
    e950:	bl	4848 <rb_close@plt>
    e954:	b	e8a8 <rb_socketpair+0xb4>
    e958:	.word	0x0001d7f8
    e95c:	.word	0x00030198
    e960:	.word	0x0000039c
    e964:	.word	0x0000ba14
    e968:	.word	0x0000b9d8

0000e96c <rb_pipe>:
    e96c:	ldr	r3, [pc, #296]	; ea9c <rb_pipe+0x130>
    e970:	strd	r4, [sp, #-16]!
    e974:	mov	r5, r1
    e978:	ldr	r1, [pc, #288]	; eaa0 <rb_pipe+0x134>
    e97c:	str	r6, [sp, #8]
    e980:	mov	r6, r2
    e984:	ldr	r2, [pc, #280]	; eaa4 <rb_pipe+0x138>
    e988:	add	r3, pc, r3
    e98c:	str	lr, [sp, #12]
    e990:	sub	sp, sp, #8
    e994:	ldr	r1, [r3, r1]
    e998:	add	r2, pc, r2
    e99c:	ldr	r2, [r2, #40]	; 0x28
    e9a0:	ldr	r3, [r1]
    e9a4:	cmp	r2, r3
    e9a8:	bge	ea88 <rb_pipe+0x11c>
    e9ac:	mov	r4, r0
    e9b0:	mov	r0, sp
    e9b4:	bl	4c5c <pipe@plt>
    e9b8:	cmn	r0, #1
    e9bc:	mov	r3, r0
    e9c0:	beq	ea10 <rb_pipe+0xa4>
    e9c4:	mov	r2, r6
    e9c8:	mov	r1, #8
    e9cc:	ldr	r0, [sp]
    e9d0:	bl	4a58 <rb_open@plt>
    e9d4:	mov	r2, r6
    e9d8:	mov	r1, #8
    e9dc:	str	r0, [r4]
    e9e0:	ldr	r0, [sp, #4]
    e9e4:	bl	4a58 <rb_open@plt>
    e9e8:	str	r0, [r5]
    e9ec:	ldr	r0, [r4]
    e9f0:	bl	45fc <rb_set_nb@plt>
    e9f4:	cmp	r0, #0
    e9f8:	beq	ea28 <rb_pipe+0xbc>
    e9fc:	ldr	r0, [r5]
    ea00:	bl	45fc <rb_set_nb@plt>
    ea04:	cmp	r0, #0
    ea08:	movne	r3, #0
    ea0c:	beq	ea64 <rb_pipe+0xf8>
    ea10:	mov	r0, r3
    ea14:	add	sp, sp, #8
    ea18:	ldrd	r4, [sp]
    ea1c:	ldr	r6, [sp, #8]
    ea20:	add	sp, sp, #12
    ea24:	pop	{pc}		; (ldr pc, [sp], #4)
    ea28:	bl	4cbc <__errno_location@plt>
    ea2c:	ldr	r0, [r0]
    ea30:	ldr	r6, [sp]
    ea34:	bl	4374 <strerror@plt>
    ea38:	mov	r2, r0
    ea3c:	ldr	r0, [pc, #100]	; eaa8 <rb_pipe+0x13c>
    ea40:	mov	r1, r6
    ea44:	add	r0, pc, r0
    ea48:	bl	48f0 <rb_lib_log@plt>
    ea4c:	ldr	r0, [r4]
    ea50:	bl	4848 <rb_close@plt>
    ea54:	ldr	r0, [r5]
    ea58:	bl	4848 <rb_close@plt>
    ea5c:	mvn	r3, #0
    ea60:	b	ea10 <rb_pipe+0xa4>
    ea64:	bl	4cbc <__errno_location@plt>
    ea68:	ldr	r0, [r0]
    ea6c:	ldr	r6, [sp, #4]
    ea70:	bl	4374 <strerror@plt>
    ea74:	mov	r2, r0
    ea78:	ldr	r0, [pc, #44]	; eaac <rb_pipe+0x140>
    ea7c:	mov	r1, r6
    ea80:	add	r0, pc, r0
    ea84:	b	ea48 <rb_pipe+0xdc>
    ea88:	bl	4cbc <__errno_location@plt>
    ea8c:	mov	r2, #23
    ea90:	mvn	r3, #0
    ea94:	str	r2, [r0]
    ea98:	b	ea10 <rb_pipe+0xa4>
    ea9c:	.word	0x0001d670
    eaa0:	.word	0x0000039c
    eaa4:	.word	0x0003000c
    eaa8:	.word	0x0000b8b0
    eaac:	.word	0x0000b874

0000eab0 <rb_socket>:
    eab0:	ldr	ip, [pc, #356]	; ec1c <rb_socket+0x16c>
    eab4:	strd	r4, [sp, #-16]!
    eab8:	mov	r4, r3
    eabc:	str	r6, [sp, #8]
    eac0:	str	lr, [sp, #12]
    eac4:	sub	sp, sp, #16
    eac8:	ldr	lr, [pc, #336]	; ec20 <rb_socket+0x170>
    eacc:	add	ip, pc, ip
    ead0:	mov	r3, ip
    ead4:	ldr	ip, [pc, #328]	; ec24 <rb_socket+0x174>
    ead8:	ldr	lr, [r3, lr]
    eadc:	add	ip, pc, ip
    eae0:	ldr	ip, [ip, #40]	; 0x28
    eae4:	ldr	r3, [lr]
    eae8:	cmp	ip, r3
    eaec:	bge	eba4 <rb_socket+0xf4>
    eaf0:	mov	r5, r0
    eaf4:	bl	4770 <socket@plt>
    eaf8:	subs	r6, r0, #0
    eafc:	blt	ebb8 <rb_socket+0x108>
    eb00:	cmp	r5, #10
    eb04:	beq	eb44 <rb_socket+0x94>
    eb08:	mov	r2, r4
    eb0c:	mov	r1, #4
    eb10:	mov	r0, r6
    eb14:	bl	4a58 <rb_open@plt>
    eb18:	subs	r4, r0, #0
    eb1c:	beq	ebf0 <rb_socket+0x140>
    eb20:	bl	45fc <rb_set_nb@plt>
    eb24:	subs	r5, r0, #0
    eb28:	beq	ebc0 <rb_socket+0x110>
    eb2c:	mov	r0, r4
    eb30:	add	sp, sp, #16
    eb34:	ldrd	r4, [sp]
    eb38:	ldr	r6, [sp, #8]
    eb3c:	add	sp, sp, #12
    eb40:	pop	{pc}		; (ldr pc, [sp], #4)
    eb44:	mov	r1, #4
    eb48:	mov	ip, #1
    eb4c:	add	r3, sp, #12
    eb50:	mov	r2, #26
    eb54:	str	r1, [sp]
    eb58:	mov	r1, #41	; 0x29
    eb5c:	str	ip, [sp, #12]
    eb60:	bl	4c74 <setsockopt@plt>
    eb64:	cmn	r0, #1
    eb68:	bne	eb08 <rb_socket+0x58>
    eb6c:	bl	4cbc <__errno_location@plt>
    eb70:	ldr	r0, [r0]
    eb74:	mov	r4, #0
    eb78:	ldr	r5, [sp, #12]
    eb7c:	bl	4374 <strerror@plt>
    eb80:	mov	r3, r0
    eb84:	ldr	r0, [pc, #156]	; ec28 <rb_socket+0x178>
    eb88:	mov	r2, r6
    eb8c:	mov	r1, r5
    eb90:	add	r0, pc, r0
    eb94:	bl	48f0 <rb_lib_log@plt>
    eb98:	mov	r0, r6
    eb9c:	bl	4914 <close@plt>
    eba0:	b	eb2c <rb_socket+0x7c>
    eba4:	bl	4cbc <__errno_location@plt>
    eba8:	mov	r3, #23
    ebac:	mov	r4, #0
    ebb0:	str	r3, [r0]
    ebb4:	b	eb2c <rb_socket+0x7c>
    ebb8:	mov	r4, #0
    ebbc:	b	eb2c <rb_socket+0x7c>
    ebc0:	bl	4cbc <__errno_location@plt>
    ebc4:	ldr	r0, [r0]
    ebc8:	bl	4374 <strerror@plt>
    ebcc:	mov	r2, r0
    ebd0:	ldr	r0, [pc, #84]	; ec2c <rb_socket+0x17c>
    ebd4:	mov	r1, r6
    ebd8:	add	r0, pc, r0
    ebdc:	bl	48f0 <rb_lib_log@plt>
    ebe0:	mov	r0, r4
    ebe4:	mov	r4, r5
    ebe8:	bl	4848 <rb_close@plt>
    ebec:	b	eb2c <rb_socket+0x7c>
    ebf0:	bl	4cbc <__errno_location@plt>
    ebf4:	ldr	r0, [r0]
    ebf8:	bl	4374 <strerror@plt>
    ebfc:	mov	r2, r0
    ec00:	ldr	r0, [pc, #40]	; ec30 <rb_socket+0x180>
    ec04:	mov	r1, r6
    ec08:	add	r0, pc, r0
    ec0c:	bl	48f0 <rb_lib_log@plt>
    ec10:	mov	r0, r6
    ec14:	bl	4914 <close@plt>
    ec18:	b	eb2c <rb_socket+0x7c>
    ec1c:	.word	0x0001d52c
    ec20:	.word	0x0000039c
    ec24:	.word	0x0002fec8
    ec28:	.word	0x0000b794
    ec2c:	.word	0x0000b71c
    ec30:	.word	0x0000b75c

0000ec34 <rb_accept_tcp>:
    ec34:	strd	r4, [sp, #-36]!	; 0xffffffdc
    ec38:	subs	r4, r0, #0
    ec3c:	strd	r6, [sp, #8]
    ec40:	strd	r8, [sp, #16]
    ec44:	strd	sl, [sp, #24]
    ec48:	str	lr, [sp, #32]
    ec4c:	sub	sp, sp, #164	; 0xa4
    ec50:	beq	edd8 <rb_accept_tcp+0x1a4>
    ec54:	mov	r7, r1
    ec58:	mov	r0, #1
    ec5c:	mov	r1, #144	; 0x90
    ec60:	mov	r6, r3
    ec64:	mov	fp, r2
    ec68:	bl	45c0 <calloc@plt>
    ec6c:	cmp	r0, #0
    ec70:	beq	ee28 <rb_accept_tcp+0x1f4>
    ec74:	ldr	r9, [pc, #432]	; ee2c <rb_accept_tcp+0x1f8>
    ec78:	add	r5, sp, #32
    ec7c:	add	r8, sp, #12
    ec80:	str	r0, [r4, #52]	; 0x34
    ec84:	ldr	sl, [pc, #420]	; ee30 <rb_accept_tcp+0x1fc>
    ec88:	str	fp, [r0, #132]	; 0x84
    ec8c:	str	r7, [r0, #136]	; 0x88
    ec90:	add	r9, pc, r9
    ec94:	str	r6, [r0, #140]	; 0x8c
    ec98:	add	sl, pc, sl
    ec9c:	mov	r6, #128	; 0x80
    eca0:	mov	r1, #0
    eca4:	mov	r2, r6
    eca8:	mov	r0, r5
    ecac:	bl	4608 <memset@plt>
    ecb0:	mov	r2, r8
    ecb4:	mov	r1, r5
    ecb8:	ldr	r0, [r4, #12]
    ecbc:	str	r6, [sp, #12]
    ecc0:	bl	474c <accept@plt>
    ecc4:	subs	r7, r0, #0
    ecc8:	blt	edc0 <rb_accept_tcp+0x18c>
    eccc:	ldrb	r1, [r4, #17]
    ecd0:	mov	r2, r9
    ecd4:	bic	r1, r1, #127	; 0x7f
    ecd8:	orr	r1, r1, #4
    ecdc:	bl	4a58 <rb_open@plt>
    ece0:	subs	r6, r0, #0
    ece4:	beq	edf4 <rb_accept_tcp+0x1c0>
    ece8:	bl	45fc <rb_set_nb@plt>
    ecec:	cmp	r0, #0
    ecf0:	beq	ee10 <rb_accept_tcp+0x1dc>
    ecf4:	ldrh	r3, [sp, #32]
    ecf8:	cmp	r3, #10
    ecfc:	beq	ed60 <rb_accept_tcp+0x12c>
    ed00:	ldr	r0, [r4, #52]	; 0x34
    ed04:	ldr	r3, [sp, #12]
    ed08:	ldr	r7, [r0, #136]	; 0x88
    ed0c:	cmp	r7, #0
    ed10:	beq	ed34 <rb_accept_tcp+0x100>
    ed14:	mov	r2, r3
    ed18:	mov	r1, r5
    ed1c:	ldr	r3, [r0, #140]	; 0x8c
    ed20:	mov	r0, r6
    ed24:	blx	r7
    ed28:	cmp	r0, #0
    ed2c:	beq	ec9c <rb_accept_tcp+0x68>
    ed30:	ldr	r3, [sp, #12]
    ed34:	ldrb	r1, [r4, #17]
    ed38:	ands	r1, r1, #32
    ed3c:	bne	edac <rb_accept_tcp+0x178>
    ed40:	ldr	ip, [r4, #52]	; 0x34
    ed44:	mov	r0, r6
    ed48:	mov	r2, r5
    ed4c:	ldr	lr, [ip, #140]	; 0x8c
    ed50:	str	lr, [sp]
    ed54:	ldr	r6, [ip, #132]	; 0x84
    ed58:	blx	r6
    ed5c:	b	ec9c <rb_accept_tcp+0x68>
    ed60:	ldrd	r2, [sp, #40]	; 0x28
    ed64:	orrs	r3, r2, r3
    ed68:	bne	ed00 <rb_accept_tcp+0xcc>
    ed6c:	ldr	r3, [sp, #48]	; 0x30
    ed70:	cmn	r3, #65536	; 0x10000
    ed74:	bne	ed00 <rb_accept_tcp+0xcc>
    ed78:	ldrh	r2, [sp, #34]	; 0x22
    ed7c:	mov	ip, #2
    ed80:	mov	r0, #0
    ed84:	mov	r1, #0
    ed88:	ldr	r3, [sp, #52]	; 0x34
    ed8c:	strh	ip, [sp, #16]
    ed90:	strd	r0, [r5, #8]
    ed94:	strh	r2, [sp, #18]
    ed98:	str	r3, [sp, #20]
    ed9c:	ldrd	r2, [sp, #16]
    eda0:	strd	r0, [sp, #24]
    eda4:	strd	r2, [r5]
    eda8:	b	ed00 <rb_accept_tcp+0xcc>
    edac:	mov	r1, r6
    edb0:	mov	r2, r5
    edb4:	mov	r0, r4
    edb8:	bl	10790 <rb_ssl_accept_setup>
    edbc:	b	ec9c <rb_accept_tcp+0x68>
    edc0:	ldr	r2, [pc, #108]	; ee34 <rb_accept_tcp+0x200>
    edc4:	mov	r0, r4
    edc8:	mov	r3, #0
    edcc:	mov	r1, #1
    edd0:	add	r2, pc, r2
    edd4:	bl	447c <rb_setselect@plt>
    edd8:	add	sp, sp, #164	; 0xa4
    eddc:	ldrd	r4, [sp]
    ede0:	ldrd	r6, [sp, #8]
    ede4:	ldrd	r8, [sp, #16]
    ede8:	ldrd	sl, [sp, #24]
    edec:	add	sp, sp, #32
    edf0:	pop	{pc}		; (ldr pc, [sp], #4)
    edf4:	ldr	r0, [pc, #60]	; ee38 <rb_accept_tcp+0x204>
    edf8:	mov	r1, r7
    edfc:	add	r0, pc, r0
    ee00:	bl	48f0 <rb_lib_log@plt>
    ee04:	mov	r0, r7
    ee08:	bl	4914 <close@plt>
    ee0c:	b	ec9c <rb_accept_tcp+0x68>
    ee10:	mov	r0, sl
    ee14:	ldr	r1, [r6, #12]
    ee18:	bl	48f0 <rb_lib_log@plt>
    ee1c:	mov	r0, r6
    ee20:	bl	4848 <rb_close@plt>
    ee24:	b	ecf4 <rb_accept_tcp+0xc0>
    ee28:	bl	495c <rb_outofmemory@plt>
    ee2c:	.word	0x0000b5dc
    ee30:	.word	0x0000b630
    ee34:	.word	0xfffff84c
    ee38:	.word	0x0000b484

0000ee3c <rb_ignore_errno>:
    ee3c:	cmp	r0, #85	; 0x55
    ee40:	beq	ee78 <rb_ignore_errno+0x3c>
    ee44:	bgt	ee60 <rb_ignore_errno+0x24>
    ee48:	cmp	r0, #4
    ee4c:	beq	ee78 <rb_ignore_errno+0x3c>
    ee50:	sub	r0, r0, #11
    ee54:	clz	r0, r0
    ee58:	lsr	r0, r0, #5
    ee5c:	bx	lr
    ee60:	cmp	r0, #105	; 0x69
    ee64:	beq	ee78 <rb_ignore_errno+0x3c>
    ee68:	sub	r0, r0, #115	; 0x73
    ee6c:	clz	r0, r0
    ee70:	lsr	r0, r0, #5
    ee74:	bx	lr
    ee78:	mov	r0, #1
    ee7c:	bx	lr

0000ee80 <rb_connect_tcp>:
    ee80:	strd	r4, [sp, #-32]!	; 0xffffffe0
    ee84:	subs	r4, r0, #0
    ee88:	strd	r6, [sp, #8]
    ee8c:	strd	r8, [sp, #16]
    ee90:	str	sl, [sp, #24]
    ee94:	str	lr, [sp, #28]
    ee98:	ldrd	r8, [sp, #32]
    ee9c:	beq	efc0 <rb_connect_tcp+0x140>
    eea0:	mov	r7, r1
    eea4:	mov	r0, #1
    eea8:	mov	r1, #268	; 0x10c
    eeac:	mov	r6, r3
    eeb0:	mov	r5, r2
    eeb4:	bl	45c0 <calloc@plt>
    eeb8:	subs	ip, r0, #0
    eebc:	beq	efe0 <rb_connect_tcp+0x160>
    eec0:	mov	r1, r7
    eec4:	add	r0, ip, #128	; 0x80
    eec8:	str	ip, [r4, #48]	; 0x30
    eecc:	mov	r2, #128	; 0x80
    eed0:	str	r6, [ip, #260]	; 0x104
    eed4:	str	r8, [ip, #264]	; 0x108
    eed8:	bl	47e8 <memcpy@plt>
    eedc:	cmp	r5, #0
    eee0:	beq	ef10 <rb_connect_tcp+0x90>
    eee4:	ldrh	r3, [r5]
    eee8:	mov	r1, r5
    eeec:	ldr	r0, [r4, #12]
    eef0:	cmp	r3, #2
    eef4:	moveq	r2, #16
    eef8:	movne	r2, #28
    eefc:	bl	48e4 <bind@plt>
    ef00:	cmp	r0, #0
    ef04:	movlt	r0, r4
    ef08:	movlt	r1, #1
    ef0c:	blt	ef58 <rb_connect_tcp+0xd8>
    ef10:	ldr	r2, [pc, #204]	; efe4 <rb_connect_tcp+0x164>
    ef14:	mov	r1, r9
    ef18:	mov	r3, #0
    ef1c:	mov	r0, r4
    ef20:	add	r2, pc, r2
    ef24:	bl	43bc <rb_settimeout@plt>
    ef28:	ldr	r0, [r4, #12]
    ef2c:	ldr	r1, [r4, #48]	; 0x30
    ef30:	ldrh	r3, [r1, #128]	; 0x80
    ef34:	add	r1, r1, #128	; 0x80
    ef38:	cmp	r3, #2
    ef3c:	moveq	r2, #16
    ef40:	movne	r2, #28
    ef44:	bl	43a4 <connect@plt>
    ef48:	cmp	r0, #0
    ef4c:	blt	ef74 <rb_connect_tcp+0xf4>
    ef50:	mov	r0, r4
    ef54:	mov	r1, #0
    ef58:	ldrd	r4, [sp]
    ef5c:	ldrd	r6, [sp, #8]
    ef60:	ldrd	r8, [sp, #16]
    ef64:	ldr	sl, [sp, #24]
    ef68:	ldr	lr, [sp, #28]
    ef6c:	add	sp, sp, #32
    ef70:	b	c858 <rb_connect_callback>
    ef74:	bl	4cbc <__errno_location@plt>
    ef78:	ldr	r0, [r0]
    ef7c:	cmp	r0, #106	; 0x6a
    ef80:	beq	ef50 <rb_connect_tcp+0xd0>
    ef84:	bl	43b0 <rb_ignore_errno@plt>
    ef88:	cmp	r0, #0
    ef8c:	mov	r0, r4
    ef90:	beq	efd8 <rb_connect_tcp+0x158>
    ef94:	ldr	r2, [pc, #76]	; efe8 <rb_connect_tcp+0x168>
    ef98:	mov	r3, #0
    ef9c:	mov	r1, #2
    efa0:	ldrd	r4, [sp]
    efa4:	ldrd	r6, [sp, #8]
    efa8:	add	r2, pc, r2
    efac:	ldrd	r8, [sp, #16]
    efb0:	ldr	sl, [sp, #24]
    efb4:	ldr	lr, [sp, #28]
    efb8:	add	sp, sp, #32
    efbc:	b	447c <rb_setselect@plt>
    efc0:	ldrd	r4, [sp]
    efc4:	ldrd	r6, [sp, #8]
    efc8:	ldrd	r8, [sp, #16]
    efcc:	ldr	sl, [sp, #24]
    efd0:	add	sp, sp, #28
    efd4:	pop	{pc}		; (ldr pc, [sp], #4)
    efd8:	mov	r1, #4
    efdc:	b	ef58 <rb_connect_tcp+0xd8>
    efe0:	bl	495c <rb_outofmemory@plt>
    efe4:	.word	0xffffda84
    efe8:	.word	0xffffd954

0000efec <rb_recv_fd_buf>:
    efec:	strd	r4, [sp, #-36]!	; 0xffffffdc
    eff0:	mov	r4, r3
    eff4:	mov	r5, #0
    eff8:	strd	r6, [sp, #8]
    effc:	strd	r8, [sp, #16]
    f000:	strd	sl, [sp, #24]
    f004:	add	fp, sp, #32
    f008:	str	lr, [sp, #32]
    f00c:	sub	sp, sp, #140	; 0x8c
    f010:	sub	r3, fp, #160	; 0xa0
    f014:	ldr	r8, [fp, #4]
    f018:	str	r1, [fp, #-160]	; 0xffffff60
    f01c:	str	r2, [fp, #-156]	; 0xffffff64
    f020:	str	r5, [fp, #-152]	; 0xffffff68
    f024:	str	r3, [fp, #-144]	; 0xffffff70
    f028:	mov	r3, #1
    f02c:	lsl	r2, r8, #2
    f030:	str	r5, [fp, #-148]	; 0xffffff6c
    f034:	str	r3, [fp, #-140]	; 0xffffff74
    f038:	add	r1, r2, #19
    f03c:	add	r2, r2, #12
    f040:	bic	r1, r1, #7
    f044:	sub	sp, sp, r1
    f048:	str	r5, [fp, #-128]	; 0xffffff80
    f04c:	str	sp, [fp, #-136]	; 0xffffff78
    f050:	str	r2, [fp, #-132]	; 0xffffff7c
    f054:	bl	44b8 <rb_get_fd@plt>
    f058:	mov	r2, r5
    f05c:	sub	r1, fp, #152	; 0x98
    f060:	bl	4b0c <recvmsg@plt>
    f064:	subs	r7, r0, #0
    f068:	ble	f080 <rb_recv_fd_buf+0x94>
    f06c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    f070:	cmp	r3, r5
    f074:	bne	f0a0 <rb_recv_fd_buf+0xb4>
    f078:	mov	r3, #0
    f07c:	str	r3, [r4]
    f080:	mov	r0, r7
    f084:	sub	sp, fp, #32
    f088:	ldrd	r4, [sp]
    f08c:	ldrd	r6, [sp, #8]
    f090:	ldrd	r8, [sp, #16]
    f094:	ldrd	sl, [sp, #24]
    f098:	add	sp, sp, #32
    f09c:	pop	{pc}		; (ldr pc, [sp], #4)
    f0a0:	ldr	r5, [fp, #-136]	; 0xffffff78
    f0a4:	cmp	r5, #0
    f0a8:	cmpne	r3, #11
    f0ac:	bls	f078 <rb_recv_fd_buf+0x8c>
    f0b0:	ldr	r6, [r5]
    f0b4:	sub	r6, r6, #12
    f0b8:	lsr	r6, r6, #2
    f0bc:	cmp	r6, r8
    f0c0:	movge	r6, r8
    f0c4:	cmp	r6, #0
    f0c8:	ble	f080 <rb_recv_fd_buf+0x94>
    f0cc:	ldr	r3, [pc, #176]	; f184 <rb_recv_fd_buf+0x198>
    f0d0:	add	r5, r5, #8
    f0d4:	add	r6, r4, r6, lsl #2
    f0d8:	sub	r8, fp, #124	; 0x7c
    f0dc:	ldr	r9, [pc, #164]	; f188 <rb_recv_fd_buf+0x19c>
    f0e0:	add	r3, pc, r3
    f0e4:	str	r3, [fp, #-168]	; 0xffffff58
    f0e8:	add	r9, pc, r9
    f0ec:	ldr	r3, [pc, #152]	; f18c <rb_recv_fd_buf+0x1a0>
    f0f0:	add	r3, pc, r3
    f0f4:	str	r3, [fp, #-172]	; 0xffffff54
    f0f8:	b	f138 <rb_recv_fd_buf+0x14c>
    f0fc:	ldr	r2, [pc, #140]	; f190 <rb_recv_fd_buf+0x1a4>
    f100:	cmp	r0, #4096	; 0x1000
    f104:	mov	r1, #64	; 0x40
    f108:	add	r2, pc, r2
    f10c:	beq	f178 <rb_recv_fd_buf+0x18c>
    f110:	cmp	r0, #32768	; 0x8000
    f114:	bne	f124 <rb_recv_fd_buf+0x138>
    f118:	ldr	r2, [pc, #116]	; f194 <rb_recv_fd_buf+0x1a8>
    f11c:	mov	r1, #2
    f120:	add	r2, pc, r2
    f124:	mov	r0, sl
    f128:	bl	4a58 <rb_open@plt>
    f12c:	str	r0, [r4], #4
    f130:	cmp	r4, r6
    f134:	beq	f080 <rb_recv_fd_buf+0x94>
    f138:	ldr	sl, [r5, #4]!
    f13c:	mov	r2, r8
    f140:	mov	r0, #3
    f144:	mov	r1, sl
    f148:	bl	4b30 <__fxstat@plt>
    f14c:	cmp	r0, #0
    f150:	mov	r2, r9
    f154:	movne	r1, #64	; 0x40
    f158:	bne	f124 <rb_recv_fd_buf+0x138>
    f15c:	ldr	r0, [fp, #-108]	; 0xffffff94
    f160:	and	r0, r0, #61440	; 0xf000
    f164:	cmp	r0, #49152	; 0xc000
    f168:	bne	f0fc <rb_recv_fd_buf+0x110>
    f16c:	mov	r1, #4
    f170:	ldr	r2, [fp, #-168]	; 0xffffff58
    f174:	b	f124 <rb_recv_fd_buf+0x138>
    f178:	mov	r1, #8
    f17c:	ldr	r2, [fp, #-172]	; 0xffffff54
    f180:	b	f124 <rb_recv_fd_buf+0x138>
    f184:	.word	0x0000b2dc
    f188:	.word	0x0000b2c4
    f18c:	.word	0x0000b2b0
    f190:	.word	0x0000b2a4
    f194:	.word	0x0000b2ac

0000f198 <rb_send_fd_buf>:
    f198:	strd	r4, [sp, #-36]!	; 0xffffffdc
    f19c:	mov	ip, #0
    f1a0:	mov	r4, #48	; 0x30
    f1a4:	strd	r6, [sp, #8]
    f1a8:	mov	r7, r0
    f1ac:	mov	r0, #1
    f1b0:	strd	r8, [sp, #16]
    f1b4:	strd	sl, [sp, #24]
    f1b8:	add	fp, sp, #32
    f1bc:	str	lr, [sp, #32]
    f1c0:	sub	sp, sp, #44	; 0x2c
    f1c4:	sub	r6, fp, #64	; 0x40
    f1c8:	ldr	lr, [fp, #4]
    f1cc:	strb	r4, [fp, #-73]	; 0xffffffb7
    f1d0:	str	ip, [fp, #-64]	; 0xffffffc0
    f1d4:	str	ip, [r6, #4]
    f1d8:	str	r0, [fp, #-52]	; 0xffffffcc
    f1dc:	cmp	lr, ip
    f1e0:	str	ip, [r6, #16]
    f1e4:	subeq	r3, fp, #73	; 0x49
    f1e8:	moveq	lr, #1
    f1ec:	str	ip, [r6, #20]
    f1f0:	cmp	r2, #0
    f1f4:	str	ip, [r6, #24]
    f1f8:	str	r3, [fp, #-72]	; 0xffffffb8
    f1fc:	sub	r3, fp, #72	; 0x48
    f200:	str	lr, [fp, #-68]	; 0xffffffbc
    f204:	str	r3, [fp, #-56]	; 0xffffffc8
    f208:	ble	f2a8 <rb_send_fd_buf+0x110>
    f20c:	add	r2, r2, r0
    f210:	mov	r8, sp
    f214:	lsl	r2, r2, #2
    f218:	add	ip, r2, #15
    f21c:	add	r3, r2, #8
    f220:	bic	ip, ip, #7
    f224:	cmp	r3, #11
    f228:	sub	sp, sp, ip
    f22c:	mov	r9, sp
    f230:	str	sp, [fp, #-48]	; 0xffffffd0
    f234:	str	r3, [fp, #-44]	; 0xffffffd4
    f238:	bls	f2c0 <rb_send_fd_buf+0x128>
    f23c:	sub	sl, r2, #4
    f240:	mov	r5, sp
    f244:	str	r0, [sp, #4]
    f248:	mov	r4, r1
    f24c:	add	sl, r1, sl
    f250:	str	r0, [sp, #8]
    f254:	str	r3, [r5], #8
    f258:	ldr	r0, [r4], #4
    f25c:	bl	44b8 <rb_get_fd@plt>
    f260:	str	r0, [r5, #4]!
    f264:	cmp	r4, sl
    f268:	bne	f258 <rb_send_fd_buf+0xc0>
    f26c:	ldr	r3, [r9]
    f270:	mov	r0, r7
    f274:	str	r3, [fp, #-44]	; 0xffffffd4
    f278:	bl	44b8 <rb_get_fd@plt>
    f27c:	mov	r1, r6
    f280:	mov	r2, #16384	; 0x4000
    f284:	bl	46e0 <sendmsg@plt>
    f288:	mov	sp, r8
    f28c:	sub	sp, fp, #32
    f290:	ldrd	r4, [sp]
    f294:	ldrd	r6, [sp, #8]
    f298:	ldrd	r8, [sp, #16]
    f29c:	ldrd	sl, [sp, #24]
    f2a0:	add	sp, sp, #32
    f2a4:	pop	{pc}		; (ldr pc, [sp], #4)
    f2a8:	mov	r0, r7
    f2ac:	bl	44b8 <rb_get_fd@plt>
    f2b0:	mov	r1, r6
    f2b4:	mov	r2, #16384	; 0x4000
    f2b8:	bl	46e0 <sendmsg@plt>
    f2bc:	b	f28c <rb_send_fd_buf+0xf4>
    f2c0:	mov	r3, #0
    f2c4:	str	r3, [r3, #4]
    f2c8:	udf	#0

0000f2cc <rb_ipv4_from_ipv6>:
    f2cc:	ldrb	r3, [r0, #8]
    f2d0:	add	r2, r0, #8
    f2d4:	cmp	r3, #32
    f2d8:	beq	f300 <rb_ipv4_from_ipv6+0x34>
    f2dc:	ldr	r3, [pc, #144]	; f374 <rb_ipv4_from_ipv6+0xa8>
    f2e0:	push	{lr}		; (str lr, [sp, #-4]!)
    f2e4:	ldrb	lr, [r0, #8]
    f2e8:	add	r3, pc, r3
    f2ec:	ldrb	ip, [r3, #20]
    f2f0:	cmp	lr, ip
    f2f4:	beq	f324 <rb_ipv4_from_ipv6+0x58>
    f2f8:	mov	r0, #0
    f2fc:	pop	{pc}		; (ldr pc, [sp], #4)
    f300:	ldrb	r3, [r2, #1]
    f304:	cmp	r3, #2
    f308:	bne	f2dc <rb_ipv4_from_ipv6+0x10>
    f30c:	ldr	r3, [r0, #10]
    f310:	mov	r0, #1
    f314:	str	r3, [r1, #4]
    f318:	mov	r3, #2
    f31c:	str	r3, [r1]
    f320:	bx	lr
    f324:	ldrb	lr, [r2, #1]
    f328:	add	r2, r2, #1
    f32c:	ldrb	ip, [r3, #21]
    f330:	cmp	lr, ip
    f334:	bne	f2f8 <rb_ipv4_from_ipv6+0x2c>
    f338:	ldrb	lr, [r2, #1]!
    f33c:	ldrb	ip, [r3, #22]
    f340:	cmp	lr, ip
    f344:	bne	f2f8 <rb_ipv4_from_ipv6+0x2c>
    f348:	ldrb	r2, [r2, #1]
    f34c:	ldrb	r3, [r3, #23]
    f350:	cmp	r2, r3
    f354:	bne	f2f8 <rb_ipv4_from_ipv6+0x2c>
    f358:	ldr	r3, [r0, #20]
    f35c:	mov	r0, #1
    f360:	mvn	r3, r3
    f364:	str	r3, [r1, #4]
    f368:	mov	r3, #2
    f36c:	str	r3, [r1]
    f370:	b	f2fc <rb_ipv4_from_ipv6+0x30>
    f374:	.word	0x0000ae10

0000f378 <verify_accept_all_cb>:
    f378:	mov	r0, #1
    f37c:	bx	lr

0000f380 <rb_ssl_timeout_cb>:
    f380:	ldr	ip, [r0, #52]	; 0x34
    f384:	mov	r3, #0
    f388:	mov	r1, #3
    f38c:	str	r4, [sp, #-8]!
    f390:	mov	r2, r3
    f394:	str	lr, [sp, #4]
    f398:	sub	sp, sp, #8
    f39c:	ldr	lr, [ip, #140]	; 0x8c
    f3a0:	str	lr, [sp]
    f3a4:	ldr	r4, [ip, #132]	; 0x84
    f3a8:	blx	r4
    f3ac:	add	sp, sp, #8
    f3b0:	ldr	r4, [sp]
    f3b4:	add	sp, sp, #4
    f3b8:	pop	{pc}		; (ldr pc, [sp], #4)

0000f3bc <make_certfp>:
    f3bc:	strd	r4, [sp, #-20]!	; 0xffffffec
    f3c0:	cmp	r2, #2
    f3c4:	mov	r5, r0
    f3c8:	ldr	r4, [pc, #344]	; f528 <make_certfp+0x16c>
    f3cc:	strd	r6, [sp, #8]
    f3d0:	mov	r6, r1
    f3d4:	str	lr, [sp, #16]
    f3d8:	sub	sp, sp, #20
    f3dc:	add	r4, pc, r4
    f3e0:	beq	f50c <make_certfp+0x150>
    f3e4:	ble	f49c <make_certfp+0xe0>
    f3e8:	movw	r0, #4097	; 0x1001
    f3ec:	cmp	r2, r0
    f3f0:	beq	f4e0 <make_certfp+0x124>
    f3f4:	movw	r0, #4098	; 0x1002
    f3f8:	cmp	r2, r0
    f3fc:	bne	f4c8 <make_certfp+0x10c>
    f400:	mov	r3, #64	; 0x40
    f404:	str	r3, [sp, #12]
    f408:	bl	4b78 <EVP_sha512@plt>
    f40c:	mov	r7, r0
    f410:	mov	r0, r5
    f414:	bl	450c <X509_get_X509_PUBKEY@plt>
    f418:	ldr	r3, [pc, #268]	; f52c <make_certfp+0x170>
    f41c:	mov	r5, r0
    f420:	ldr	r0, [r4, r3]
    f424:	add	ip, sp, #12
    f428:	mov	r2, r5
    f42c:	mov	r3, r6
    f430:	mov	r1, r7
    f434:	str	ip, [sp]
    f438:	bl	49e0 <ASN1_item_digest@plt>
    f43c:	cmp	r0, #1
    f440:	movne	r5, #0
    f444:	bne	f454 <make_certfp+0x98>
    f448:	ldr	r0, [sp, #12]
    f44c:	b	f4cc <make_certfp+0x110>
    f450:	mov	r5, r4
    f454:	bl	43d4 <ERR_get_error@plt>
    f458:	subs	r4, r0, #0
    f45c:	bne	f450 <make_certfp+0x94>
    f460:	ldr	r3, [pc, #200]	; f530 <make_certfp+0x174>
    f464:	mov	r0, r5
    f468:	mov	r2, #512	; 0x200
    f46c:	add	r3, pc, r3
    f470:	mov	r1, r3
    f474:	mov	r5, r3
    f478:	bl	4578 <ERR_error_string_n@plt>
    f47c:	ldr	r1, [pc, #176]	; f534 <make_certfp+0x178>
    f480:	mov	r2, r5
    f484:	ldr	r0, [pc, #172]	; f538 <make_certfp+0x17c>
    f488:	add	r1, pc, r1
    f48c:	add	r0, pc, r0
    f490:	bl	48f0 <rb_lib_log@plt>
    f494:	mov	r0, r4
    f498:	b	f4cc <make_certfp+0x110>
    f49c:	cmp	r2, #0
    f4a0:	beq	f4f0 <make_certfp+0x134>
    f4a4:	cmp	r2, #1
    f4a8:	bne	f4c8 <make_certfp+0x10c>
    f4ac:	mov	r3, #32
    f4b0:	str	r3, [sp, #12]
    f4b4:	bl	4ba8 <EVP_sha256@plt>
    f4b8:	ldr	r3, [pc, #124]	; f53c <make_certfp+0x180>
    f4bc:	mov	r7, r0
    f4c0:	ldr	r0, [r4, r3]
    f4c4:	b	f424 <make_certfp+0x68>
    f4c8:	mov	r0, #0
    f4cc:	add	sp, sp, #20
    f4d0:	ldrd	r4, [sp]
    f4d4:	ldrd	r6, [sp, #8]
    f4d8:	add	sp, sp, #16
    f4dc:	pop	{pc}		; (ldr pc, [sp], #4)
    f4e0:	mov	r3, #32
    f4e4:	str	r3, [sp, #12]
    f4e8:	bl	4ba8 <EVP_sha256@plt>
    f4ec:	b	f40c <make_certfp+0x50>
    f4f0:	mov	r3, #20
    f4f4:	str	r3, [sp, #12]
    f4f8:	bl	48c0 <EVP_sha1@plt>
    f4fc:	ldr	r3, [pc, #56]	; f53c <make_certfp+0x180>
    f500:	mov	r7, r0
    f504:	ldr	r0, [r4, r3]
    f508:	b	f424 <make_certfp+0x68>
    f50c:	mov	r3, #64	; 0x40
    f510:	str	r3, [sp, #12]
    f514:	bl	4b78 <EVP_sha512@plt>
    f518:	ldr	r3, [pc, #28]	; f53c <make_certfp+0x180>
    f51c:	mov	r7, r0
    f520:	ldr	r0, [r4, r3]
    f524:	b	f424 <make_certfp+0x68>
    f528:	.word	0x0001cc1c
    f52c:	.word	0x00000410
    f530:	.word	0x0002f5ac
    f534:	.word	0x0000b3c8
    f538:	.word	0x0000b5b0
    f53c:	.word	0x00000404

0000f540 <rb_ssl_accept_common>:
    f540:	strd	r4, [sp, #-20]!	; 0xffffffec
    f544:	strd	r6, [sp, #8]
    f548:	mov	r6, r0
    f54c:	str	lr, [sp, #16]
    f550:	sub	sp, sp, #12
    f554:	bl	43d4 <ERR_get_error@plt>
    f558:	subs	r4, r0, #0
    f55c:	bne	f554 <rb_ssl_accept_common+0x14>
    f560:	ldr	r0, [r6, #56]	; 0x38
    f564:	bl	47a0 <SSL_do_handshake@plt>
    f568:	mov	r5, r0
    f56c:	mov	r1, r0
    f570:	ldr	r0, [r6, #56]	; 0x38
    f574:	bl	4c80 <SSL_get_error@plt>
    f578:	cmp	r5, #1
    f57c:	mov	r7, r0
    f580:	beq	f640 <rb_ssl_accept_common+0x100>
    f584:	cmn	r5, #1
    f588:	movne	r5, #0
    f58c:	moveq	r5, #1
    f590:	cmp	r0, #2
    f594:	movne	r3, #0
    f598:	andeq	r3, r5, #1
    f59c:	cmp	r3, #0
    f5a0:	bne	f600 <rb_ssl_accept_common+0xc0>
    f5a4:	cmp	r0, #3
    f5a8:	movne	r5, #0
    f5ac:	andeq	r5, r5, #1
    f5b0:	cmp	r5, #0
    f5b4:	bne	f62c <rb_ssl_accept_common+0xec>
    f5b8:	bl	4cbc <__errno_location@plt>
    f5bc:	ldr	ip, [r6, #52]	; 0x34
    f5c0:	mov	r1, #5
    f5c4:	mov	r3, r5
    f5c8:	mov	r2, r5
    f5cc:	ldr	lr, [ip, #140]	; 0x8c
    f5d0:	str	r1, [r0]
    f5d4:	mov	r1, #6
    f5d8:	mov	r0, r6
    f5dc:	str	r7, [r6, #64]	; 0x40
    f5e0:	str	lr, [sp]
    f5e4:	ldr	r4, [ip, #132]	; 0x84
    f5e8:	blx	r4
    f5ec:	add	sp, sp, #12
    f5f0:	ldrd	r4, [sp]
    f5f4:	ldrd	r6, [sp, #8]
    f5f8:	add	sp, sp, #16
    f5fc:	pop	{pc}		; (ldr pc, [sp], #4)
    f600:	ldr	r2, [pc, #176]	; f6b8 <rb_ssl_accept_common+0x178>
    f604:	mov	r3, r4
    f608:	mov	r0, r6
    f60c:	mov	r1, #1
    f610:	add	r2, pc, r2
    f614:	add	sp, sp, #12
    f618:	ldrd	r4, [sp]
    f61c:	ldrd	r6, [sp, #8]
    f620:	ldr	lr, [sp, #16]
    f624:	add	sp, sp, #20
    f628:	b	447c <rb_setselect@plt>
    f62c:	ldr	r2, [pc, #136]	; f6bc <rb_ssl_accept_common+0x17c>
    f630:	mov	r0, r6
    f634:	mov	r1, #2
    f638:	add	r2, pc, r2
    f63c:	b	f614 <rb_ssl_accept_common+0xd4>
    f640:	ldr	ip, [r6, #60]	; 0x3c
    f644:	mov	r3, r4
    f648:	mov	r2, r4
    f64c:	mov	r1, r4
    f650:	mov	r0, r6
    f654:	add	ip, ip, #1
    f658:	str	ip, [r6, #60]	; 0x3c
    f65c:	bl	43bc <rb_settimeout@plt>
    f660:	mov	r3, r4
    f664:	mov	r2, r4
    f668:	mov	r0, r6
    f66c:	mov	r1, #3
    f670:	bl	447c <rb_setselect@plt>
    f674:	ldr	r5, [r6, #52]	; 0x34
    f678:	mov	r1, r4
    f67c:	mov	r0, r6
    f680:	ldr	r3, [r5, #128]	; 0x80
    f684:	mov	r2, r5
    f688:	ldr	ip, [r5, #140]	; 0x8c
    f68c:	str	r4, [r6, #52]	; 0x34
    f690:	str	ip, [sp]
    f694:	ldr	r4, [r5, #132]	; 0x84
    f698:	blx	r4
    f69c:	mov	r0, r5
    f6a0:	add	sp, sp, #12
    f6a4:	ldrd	r4, [sp]
    f6a8:	ldrd	r6, [sp, #8]
    f6ac:	ldr	lr, [sp, #16]
    f6b0:	add	sp, sp, #20
    f6b4:	b	46d4 <free@plt>
    f6b8:	.word	0xffffff28
    f6bc:	.word	0xffffff00

0000f6c0 <rb_ssl_read_or_write.isra.0>:
    f6c0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    f6c4:	mov	r5, r1
    f6c8:	strd	r6, [sp, #8]
    f6cc:	mov	r6, r0
    f6d0:	mov	r7, r3
    f6d4:	str	r8, [sp, #16]
    f6d8:	mov	r8, r2
    f6dc:	str	lr, [sp, #20]
    f6e0:	bl	43d4 <ERR_get_error@plt>
    f6e4:	subs	r4, r0, #0
    f6e8:	bne	f6e0 <rb_ssl_read_or_write.isra.0+0x20>
    f6ec:	cmp	r6, #0
    f6f0:	ldr	r0, [r5]
    f6f4:	bne	f728 <rb_ssl_read_or_write.isra.0+0x68>
    f6f8:	mov	r1, r7
    f6fc:	ldr	r2, [sp, #28]
    f700:	bl	4758 <SSL_read@plt>
    f704:	mov	r1, r0
    f708:	cmp	r1, #0
    f70c:	blt	f740 <rb_ssl_read_or_write.isra.0+0x80>
    f710:	ldrd	r4, [sp]
    f714:	mov	r0, r1
    f718:	ldrd	r6, [sp, #8]
    f71c:	ldr	r8, [sp, #16]
    f720:	add	sp, sp, #20
    f724:	pop	{pc}		; (ldr pc, [sp], #4)
    f728:	ldr	r1, [sp, #24]
    f72c:	ldr	r2, [sp, #28]
    f730:	bl	45cc <SSL_write@plt>
    f734:	mov	r1, r0
    f738:	cmp	r1, #0
    f73c:	bge	f710 <rb_ssl_read_or_write.isra.0+0x50>
    f740:	ldr	r0, [r5]
    f744:	bl	4c80 <SSL_get_error@plt>
    f748:	sub	r0, r0, #2
    f74c:	cmp	r0, #4
    f750:	addls	pc, pc, r0, lsl #2
    f754:	b	f770 <rb_ssl_read_or_write.isra.0+0xb0>
    f758:	b	f7e4 <rb_ssl_read_or_write.isra.0+0x124>
    f75c:	b	f7d0 <rb_ssl_read_or_write.isra.0+0x110>
    f760:	b	f770 <rb_ssl_read_or_write.isra.0+0xb0>
    f764:	b	f794 <rb_ssl_read_or_write.isra.0+0xd4>
    f768:	b	f7c8 <rb_ssl_read_or_write.isra.0+0x108>
    f76c:	mov	r4, r0
    f770:	bl	43d4 <ERR_get_error@plt>
    f774:	cmp	r0, #0
    f778:	bne	f76c <rb_ssl_read_or_write.isra.0+0xac>
    f77c:	cmp	r4, #0
    f780:	str	r4, [r8]
    f784:	mvneq	r1, #0
    f788:	beq	f710 <rb_ssl_read_or_write.isra.0+0x50>
    f78c:	b	f7b4 <rb_ssl_read_or_write.isra.0+0xf4>
    f790:	mov	r4, r0
    f794:	bl	43d4 <ERR_get_error@plt>
    f798:	cmp	r0, #0
    f79c:	bne	f790 <rb_ssl_read_or_write.isra.0+0xd0>
    f7a0:	cmp	r4, #0
    f7a4:	mvneq	r1, #0
    f7a8:	streq	r4, [r8]
    f7ac:	beq	f710 <rb_ssl_read_or_write.isra.0+0x50>
    f7b0:	str	r4, [r8]
    f7b4:	bl	4cbc <__errno_location@plt>
    f7b8:	mov	r3, #5
    f7bc:	mvn	r1, #1
    f7c0:	str	r3, [r0]
    f7c4:	b	f710 <rb_ssl_read_or_write.isra.0+0x50>
    f7c8:	mov	r1, #0
    f7cc:	b	f710 <rb_ssl_read_or_write.isra.0+0x50>
    f7d0:	bl	4cbc <__errno_location@plt>
    f7d4:	mov	r3, #11
    f7d8:	mvn	r1, #3
    f7dc:	str	r3, [r0]
    f7e0:	b	f710 <rb_ssl_read_or_write.isra.0+0x50>
    f7e4:	bl	4cbc <__errno_location@plt>
    f7e8:	mov	r3, #11
    f7ec:	mvn	r1, #2
    f7f0:	str	r3, [r0]
    f7f4:	b	f710 <rb_ssl_read_or_write.isra.0+0x50>

0000f7f8 <rb_ssl_init_fd>:
    f7f8:	strd	r4, [sp, #-16]!
    f7fc:	mov	r5, r0
    f800:	str	r6, [sp, #8]
    f804:	mov	r6, r1
    f808:	str	lr, [sp, #12]
    f80c:	bl	43d4 <ERR_get_error@plt>
    f810:	subs	r4, r0, #0
    f814:	bne	f80c <rb_ssl_init_fd+0x14>
    f818:	ldr	r3, [pc, #176]	; f8d0 <rb_ssl_init_fd+0xd8>
    f81c:	add	r3, pc, r3
    f820:	ldr	r0, [r3, #512]	; 0x200
    f824:	bl	4710 <SSL_new@plt>
    f828:	cmp	r0, #0
    f82c:	str	r0, [r5, #56]	; 0x38
    f830:	beq	f86c <rb_ssl_init_fd+0x74>
    f834:	cmp	r6, #1
    f838:	beq	f8c8 <rb_ssl_init_fd+0xd0>
    f83c:	bl	49a4 <SSL_set_accept_state@plt>
    f840:	ldr	r4, [r5, #56]	; 0x38
    f844:	mov	r0, r5
    f848:	bl	44b8 <rb_get_fd@plt>
    f84c:	mov	r1, r0
    f850:	ldr	r6, [sp, #8]
    f854:	ldr	lr, [sp, #12]
    f858:	mov	r0, r4
    f85c:	ldrd	r4, [sp]
    f860:	add	sp, sp, #16
    f864:	b	4644 <SSL_set_fd@plt>
    f868:	mov	r4, r0
    f86c:	bl	43d4 <ERR_get_error@plt>
    f870:	cmp	r0, #0
    f874:	bne	f868 <rb_ssl_init_fd+0x70>
    f878:	ldr	r3, [pc, #84]	; f8d4 <rb_ssl_init_fd+0xdc>
    f87c:	mov	r0, r4
    f880:	mov	r2, #512	; 0x200
    f884:	add	r3, pc, r3
    f888:	mov	r1, r3
    f88c:	mov	r4, r3
    f890:	bl	4578 <ERR_error_string_n@plt>
    f894:	ldr	r1, [pc, #60]	; f8d8 <rb_ssl_init_fd+0xe0>
    f898:	mov	r2, r4
    f89c:	ldr	r0, [pc, #56]	; f8dc <rb_ssl_init_fd+0xe4>
    f8a0:	add	r1, pc, r1
    f8a4:	add	r1, r1, #12
    f8a8:	add	r0, pc, r0
    f8ac:	bl	48f0 <rb_lib_log@plt>
    f8b0:	mov	r0, r5
    f8b4:	ldrd	r4, [sp]
    f8b8:	ldr	r6, [sp, #8]
    f8bc:	ldr	lr, [sp, #12]
    f8c0:	add	sp, sp, #16
    f8c4:	b	4848 <rb_close@plt>
    f8c8:	bl	4b3c <SSL_set_connect_state@plt>
    f8cc:	b	f840 <rb_ssl_init_fd+0x48>
    f8d0:	.word	0x0002f1fc
    f8d4:	.word	0x0002f194
    f8d8:	.word	0x0000afb0
    f8dc:	.word	0x0000b1b0

0000f8e0 <rb_ssl_accept_common.constprop.3>:
    f8e0:	strd	r4, [sp, #-20]!	; 0xffffffec
    f8e4:	strd	r6, [sp, #8]
    f8e8:	mov	r6, r0
    f8ec:	str	lr, [sp, #16]
    f8f0:	sub	sp, sp, #12
    f8f4:	bl	43d4 <ERR_get_error@plt>
    f8f8:	subs	r4, r0, #0
    f8fc:	bne	f8f4 <rb_ssl_accept_common.constprop.3+0x14>
    f900:	ldr	r0, [r6, #56]	; 0x38
    f904:	bl	47a0 <SSL_do_handshake@plt>
    f908:	mov	r5, r0
    f90c:	mov	r1, r0
    f910:	ldr	r0, [r6, #56]	; 0x38
    f914:	bl	4c80 <SSL_get_error@plt>
    f918:	cmp	r5, #1
    f91c:	mov	r7, r0
    f920:	beq	f9e0 <rb_ssl_accept_common.constprop.3+0x100>
    f924:	cmn	r5, #1
    f928:	movne	r5, #0
    f92c:	moveq	r5, #1
    f930:	cmp	r0, #2
    f934:	movne	r3, #0
    f938:	andeq	r3, r5, #1
    f93c:	cmp	r3, #0
    f940:	bne	f9a0 <rb_ssl_accept_common.constprop.3+0xc0>
    f944:	cmp	r0, #3
    f948:	movne	r5, #0
    f94c:	andeq	r5, r5, #1
    f950:	cmp	r5, #0
    f954:	bne	f9cc <rb_ssl_accept_common.constprop.3+0xec>
    f958:	bl	4cbc <__errno_location@plt>
    f95c:	ldr	ip, [r6, #52]	; 0x34
    f960:	mov	r1, #5
    f964:	mov	r3, r5
    f968:	mov	r2, r5
    f96c:	ldr	lr, [ip, #140]	; 0x8c
    f970:	str	r1, [r0]
    f974:	mov	r1, #6
    f978:	mov	r0, r6
    f97c:	str	r7, [r6, #64]	; 0x40
    f980:	str	lr, [sp]
    f984:	ldr	r4, [ip, #132]	; 0x84
    f988:	blx	r4
    f98c:	add	sp, sp, #12
    f990:	ldrd	r4, [sp]
    f994:	ldrd	r6, [sp, #8]
    f998:	add	sp, sp, #16
    f99c:	pop	{pc}		; (ldr pc, [sp], #4)
    f9a0:	ldr	r2, [pc, #176]	; fa58 <rb_ssl_accept_common.constprop.3+0x178>
    f9a4:	mov	r3, r4
    f9a8:	mov	r0, r6
    f9ac:	mov	r1, #1
    f9b0:	add	r2, pc, r2
    f9b4:	add	sp, sp, #12
    f9b8:	ldrd	r4, [sp]
    f9bc:	ldrd	r6, [sp, #8]
    f9c0:	ldr	lr, [sp, #16]
    f9c4:	add	sp, sp, #20
    f9c8:	b	447c <rb_setselect@plt>
    f9cc:	ldr	r2, [pc, #136]	; fa5c <rb_ssl_accept_common.constprop.3+0x17c>
    f9d0:	mov	r0, r6
    f9d4:	mov	r1, #2
    f9d8:	add	r2, pc, r2
    f9dc:	b	f9b4 <rb_ssl_accept_common.constprop.3+0xd4>
    f9e0:	ldr	ip, [r6, #60]	; 0x3c
    f9e4:	mov	r3, r4
    f9e8:	mov	r2, r4
    f9ec:	mov	r1, r4
    f9f0:	mov	r0, r6
    f9f4:	add	ip, ip, #1
    f9f8:	str	ip, [r6, #60]	; 0x3c
    f9fc:	bl	43bc <rb_settimeout@plt>
    fa00:	mov	r3, r4
    fa04:	mov	r2, r4
    fa08:	mov	r0, r6
    fa0c:	mov	r1, #3
    fa10:	bl	447c <rb_setselect@plt>
    fa14:	ldr	r5, [r6, #52]	; 0x34
    fa18:	mov	r1, r4
    fa1c:	mov	r0, r6
    fa20:	ldr	r3, [r5, #128]	; 0x80
    fa24:	mov	r2, r5
    fa28:	ldr	ip, [r5, #140]	; 0x8c
    fa2c:	str	r4, [r6, #52]	; 0x34
    fa30:	str	ip, [sp]
    fa34:	ldr	r4, [r5, #132]	; 0x84
    fa38:	blx	r4
    fa3c:	mov	r0, r5
    fa40:	add	sp, sp, #12
    fa44:	ldrd	r4, [sp]
    fa48:	ldrd	r6, [sp, #8]
    fa4c:	ldr	lr, [sp, #16]
    fa50:	add	sp, sp, #20
    fa54:	b	46d4 <free@plt>
    fa58:	.word	0xfffffb88
    fa5c:	.word	0xfffffb60

0000fa60 <rb_ssl_tryconn_timeout_cb>:
    fa60:	str	r4, [sp, #-8]!
    fa64:	mov	r4, r1
    fa68:	mov	r1, #3
    fa6c:	ldr	ip, [r4]
    fa70:	ldr	r2, [r4, #4]
    fa74:	ldr	r3, [r0, #48]	; 0x30
    fa78:	str	lr, [sp, #4]
    fa7c:	str	ip, [r3, #260]	; 0x104
    fa80:	str	r2, [r3, #264]	; 0x108
    fa84:	bl	c858 <rb_connect_callback>
    fa88:	mov	r0, r4
    fa8c:	ldr	r4, [sp]
    fa90:	ldr	lr, [sp, #4]
    fa94:	add	sp, sp, #8
    fa98:	b	46d4 <free@plt>

0000fa9c <rb_ssl_connect_common>:
    fa9c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    faa0:	mov	r5, r0
    faa4:	strd	r6, [sp, #8]
    faa8:	mov	r7, r1
    faac:	str	r8, [sp, #16]
    fab0:	str	lr, [sp, #20]
    fab4:	bl	43d4 <ERR_get_error@plt>
    fab8:	subs	r4, r0, #0
    fabc:	bne	fab4 <rb_ssl_connect_common+0x18>
    fac0:	ldr	r0, [r5, #56]	; 0x38
    fac4:	bl	47a0 <SSL_do_handshake@plt>
    fac8:	mov	r6, r0
    facc:	mov	r1, r0
    fad0:	ldr	r0, [r5, #56]	; 0x38
    fad4:	bl	4c80 <SSL_get_error@plt>
    fad8:	cmp	r6, #1
    fadc:	mov	r8, r0
    fae0:	beq	fba0 <rb_ssl_connect_common+0x104>
    fae4:	cmn	r6, #1
    fae8:	movne	r3, #0
    faec:	moveq	r3, #1
    faf0:	cmp	r0, #2
    faf4:	cmneq	r6, #1
    faf8:	beq	fb88 <rb_ssl_connect_common+0xec>
    fafc:	cmp	r0, #3
    fb00:	movne	r3, #0
    fb04:	andeq	r3, r3, #1
    fb08:	cmp	r3, #0
    fb0c:	bne	fb5c <rb_ssl_connect_common+0xc0>
    fb10:	bl	4cbc <__errno_location@plt>
    fb14:	mov	r3, #5
    fb18:	ldr	ip, [r7]
    fb1c:	mov	r1, #6
    fb20:	ldr	r2, [r7, #4]
    fb24:	str	r3, [r0]
    fb28:	mov	r0, r5
    fb2c:	ldr	r3, [r5, #48]	; 0x30
    fb30:	str	r8, [r5, #64]	; 0x40
    fb34:	str	ip, [r3, #260]	; 0x104
    fb38:	str	r2, [r3, #264]	; 0x108
    fb3c:	bl	c858 <rb_connect_callback>
    fb40:	mov	r0, r7
    fb44:	ldrd	r4, [sp]
    fb48:	ldrd	r6, [sp, #8]
    fb4c:	ldr	r8, [sp, #16]
    fb50:	ldr	lr, [sp, #20]
    fb54:	add	sp, sp, #24
    fb58:	b	46d4 <free@plt>
    fb5c:	ldr	r2, [pc, #136]	; fbec <rb_ssl_connect_common+0x150>
    fb60:	mov	r3, r7
    fb64:	mov	r0, r5
    fb68:	mov	r1, #2
    fb6c:	add	r2, pc, r2
    fb70:	ldrd	r4, [sp]
    fb74:	ldrd	r6, [sp, #8]
    fb78:	ldr	r8, [sp, #16]
    fb7c:	ldr	lr, [sp, #20]
    fb80:	add	sp, sp, #24
    fb84:	b	447c <rb_setselect@plt>
    fb88:	ldr	r2, [pc, #96]	; fbf0 <rb_ssl_connect_common+0x154>
    fb8c:	mov	r3, r7
    fb90:	mov	r0, r5
    fb94:	mov	r1, #1
    fb98:	add	r2, pc, r2
    fb9c:	b	fb70 <rb_ssl_connect_common+0xd4>
    fba0:	ldr	ip, [r5, #60]	; 0x3c
    fba4:	mov	r3, r4
    fba8:	mov	r2, r4
    fbac:	mov	r1, r4
    fbb0:	mov	r0, r5
    fbb4:	add	ip, ip, #1
    fbb8:	str	ip, [r5, #60]	; 0x3c
    fbbc:	bl	43bc <rb_settimeout@plt>
    fbc0:	mov	r3, r4
    fbc4:	mov	r2, r4
    fbc8:	mov	r1, #3
    fbcc:	mov	r0, r5
    fbd0:	bl	447c <rb_setselect@plt>
    fbd4:	mov	r1, r4
    fbd8:	mov	r0, r5
    fbdc:	ldr	ip, [r7]
    fbe0:	ldr	r2, [r7, #4]
    fbe4:	ldr	r3, [r5, #48]	; 0x30
    fbe8:	b	fb34 <rb_ssl_connect_common+0x98>
    fbec:	.word	0xffffff28
    fbf0:	.word	0xfffffefc

0000fbf4 <rb_ssl_tryconn>:
    fbf4:	cmp	r1, #0
    fbf8:	strd	r4, [sp, #-16]!
    fbfc:	mov	r4, r2
    fc00:	mov	r5, r0
    fc04:	str	r6, [sp, #8]
    fc08:	str	lr, [sp, #12]
    fc0c:	bne	fc58 <rb_ssl_tryconn+0x64>
    fc10:	ldrb	r1, [r0, #17]
    fc14:	mov	r3, r2
    fc18:	ldr	r2, [pc, #104]	; fc88 <rb_ssl_tryconn+0x94>
    fc1c:	orr	r1, r1, #32
    fc20:	add	r2, pc, r2
    fc24:	strb	r1, [r0, #17]
    fc28:	ldr	r1, [r4, #8]
    fc2c:	bl	43bc <rb_settimeout@plt>
    fc30:	mov	r0, r5
    fc34:	mov	r1, #1
    fc38:	bl	f7f8 <rb_ssl_init_fd>
    fc3c:	mov	r1, r4
    fc40:	mov	r0, r5
    fc44:	ldrd	r4, [sp]
    fc48:	ldr	r6, [sp, #8]
    fc4c:	ldr	lr, [sp, #12]
    fc50:	add	sp, sp, #16
    fc54:	b	fa9c <rb_ssl_connect_common>
    fc58:	ldr	ip, [r2]
    fc5c:	ldr	r2, [r2, #4]
    fc60:	ldr	r3, [r0, #48]	; 0x30
    fc64:	str	ip, [r3, #260]	; 0x104
    fc68:	str	r2, [r3, #264]	; 0x108
    fc6c:	bl	c858 <rb_connect_callback>
    fc70:	mov	r0, r4
    fc74:	ldrd	r4, [sp]
    fc78:	ldr	r6, [sp, #8]
    fc7c:	ldr	lr, [sp, #12]
    fc80:	add	sp, sp, #16
    fc84:	b	46d4 <free@plt>
    fc88:	.word	0xfffffe38

0000fc8c <rb_ssl_shutdown>:
    fc8c:	strd	r4, [sp, #-16]!
    fc90:	subs	r4, r0, #0
    fc94:	str	r6, [sp, #8]
    fc98:	str	lr, [sp, #12]
    fc9c:	beq	fd00 <rb_ssl_shutdown+0x74>
    fca0:	ldr	r3, [r4, #56]	; 0x38
    fca4:	cmp	r3, #0
    fca8:	beq	fd00 <rb_ssl_shutdown+0x74>
    fcac:	bl	43d4 <ERR_get_error@plt>
    fcb0:	cmp	r0, #0
    fcb4:	bne	fcac <rb_ssl_shutdown+0x20>
    fcb8:	mov	r5, #4
    fcbc:	ldr	r0, [r4, #56]	; 0x38
    fcc0:	bl	4a7c <SSL_shutdown@plt>
    fcc4:	mov	r6, r0
    fcc8:	mov	r1, r0
    fccc:	ldr	r0, [r4, #56]	; 0x38
    fcd0:	bl	4c80 <SSL_get_error@plt>
    fcd4:	cmp	r6, #0
    fcd8:	sub	r0, r0, #2
    fcdc:	bge	fcf0 <rb_ssl_shutdown+0x64>
    fce0:	cmp	r0, #1
    fce4:	bhi	fcf0 <rb_ssl_shutdown+0x64>
    fce8:	subs	r5, r5, #1
    fcec:	bne	fcbc <rb_ssl_shutdown+0x30>
    fcf0:	ldr	r0, [r4, #56]	; 0x38
    fcf4:	bl	4938 <SSL_free@plt>
    fcf8:	mov	r3, #0
    fcfc:	str	r3, [r4, #56]	; 0x38
    fd00:	ldrd	r4, [sp]
    fd04:	ldr	r6, [sp, #8]
    fd08:	add	sp, sp, #12
    fd0c:	pop	{pc}		; (ldr pc, [sp], #4)

0000fd10 <rb_init_ssl>:
    fd10:	ldr	r1, [pc, #40]	; fd40 <rb_init_ssl+0x30>
    fd14:	str	r4, [sp, #-8]!
    fd18:	ldr	r0, [pc, #36]	; fd44 <rb_init_ssl+0x34>
    fd1c:	str	lr, [sp, #4]
    fd20:	add	r1, pc, r1
    fd24:	add	r1, r1, #28
    fd28:	add	r0, pc, r0
    fd2c:	bl	48f0 <rb_lib_log@plt>
    fd30:	ldr	r4, [sp]
    fd34:	add	sp, sp, #4
    fd38:	mov	r0, #1
    fd3c:	pop	{pc}		; (ldr pc, [sp], #4)
    fd40:	.word	0x0000ab30
    fd44:	.word	0x0000ad40

0000fd48 <rb_setup_ssl_server>:
    fd48:	strd	r4, [sp, #-28]!	; 0xffffffe4
    fd4c:	strd	r6, [sp, #8]
    fd50:	subs	r7, r0, #0
    fd54:	strd	r8, [sp, #16]
    fd58:	str	lr, [sp, #24]
    fd5c:	sub	sp, sp, #12
    fd60:	beq	ffe0 <rb_setup_ssl_server+0x298>
    fd64:	cmp	r1, #0
    fd68:	mov	r6, r1
    fd6c:	moveq	r6, r7
    fd70:	cmp	r3, #0
    fd74:	mov	r9, r2
    fd78:	mov	r4, r3
    fd7c:	beq	ff78 <rb_setup_ssl_server+0x230>
    fd80:	bl	43d4 <ERR_get_error@plt>
    fd84:	subs	r5, r0, #0
    fd88:	bne	fd80 <rb_setup_ssl_server+0x38>
    fd8c:	bl	4344 <TLS_method@plt>
    fd90:	bl	4af4 <SSL_CTX_new@plt>
    fd94:	subs	r8, r0, #0
    fd98:	beq	fed8 <rb_setup_ssl_server+0x190>
    fd9c:	mov	r1, r7
    fda0:	bl	4818 <SSL_CTX_use_certificate_chain_file@plt>
    fda4:	cmp	r0, #1
    fda8:	bne	fe68 <rb_setup_ssl_server+0x120>
    fdac:	mov	r2, r0
    fdb0:	mov	r1, r6
    fdb4:	mov	r0, r8
    fdb8:	bl	48fc <SSL_CTX_use_PrivateKey_file@plt>
    fdbc:	cmp	r0, #1
    fdc0:	bne	ff24 <rb_setup_ssl_server+0x1dc>
    fdc4:	cmp	r9, #0
    fdc8:	beq	100c8 <rb_setup_ssl_server+0x380>
    fdcc:	ldr	r1, [pc, #832]	; 10114 <rb_setup_ssl_server+0x3cc>
    fdd0:	mov	r0, r9
    fdd4:	add	r1, pc, r1
    fdd8:	bl	45f0 <fopen@plt>
    fddc:	subs	r6, r0, #0
    fde0:	str	r5, [sp, #4]
    fde4:	beq	100e4 <rb_setup_ssl_server+0x39c>
    fde8:	mov	r3, r5
    fdec:	mov	r2, r5
    fdf0:	add	r1, sp, #4
    fdf4:	bl	49bc <PEM_read_DHparams@plt>
    fdf8:	cmp	r0, #0
    fdfc:	beq	ff8c <rb_setup_ssl_server+0x244>
    fe00:	mov	r2, r5
    fe04:	mov	r1, #3
    fe08:	ldr	r3, [sp, #4]
    fe0c:	mov	r0, r8
    fe10:	bl	4650 <SSL_CTX_ctrl@plt>
    fe14:	ldr	r0, [sp, #4]
    fe18:	bl	4a40 <DH_free@plt>
    fe1c:	mov	r0, r6
    fe20:	bl	4554 <fclose@plt>
    fe24:	mov	r1, r4
    fe28:	mov	r0, r8
    fe2c:	bl	43c8 <SSL_CTX_set_cipher_list@plt>
    fe30:	cmp	r0, #1
    fe34:	mov	r4, r0
    fe38:	beq	10000 <rb_setup_ssl_server+0x2b8>
    fe3c:	ldr	r1, [pc, #724]	; 10118 <rb_setup_ssl_server+0x3d0>
    fe40:	mov	r4, #0
    fe44:	ldr	r0, [pc, #720]	; 1011c <rb_setup_ssl_server+0x3d4>
    fe48:	add	r1, pc, r1
    fe4c:	add	r1, r1, #440	; 0x1b8
    fe50:	add	r0, pc, r0
    fe54:	bl	48f0 <rb_lib_log@plt>
    fe58:	mov	r0, r8
    fe5c:	bl	4434 <SSL_CTX_free@plt>
    fe60:	b	feb8 <rb_setup_ssl_server+0x170>
    fe64:	mov	r5, r4
    fe68:	bl	43d4 <ERR_get_error@plt>
    fe6c:	subs	r4, r0, #0
    fe70:	bne	fe64 <rb_setup_ssl_server+0x11c>
    fe74:	ldr	r3, [pc, #676]	; 10120 <rb_setup_ssl_server+0x3d8>
    fe78:	mov	r0, r5
    fe7c:	mov	r2, #512	; 0x200
    fe80:	add	r3, pc, r3
    fe84:	mov	r1, r3
    fe88:	mov	r5, r3
    fe8c:	bl	4578 <ERR_error_string_n@plt>
    fe90:	ldr	r1, [pc, #652]	; 10124 <rb_setup_ssl_server+0x3dc>
    fe94:	mov	r3, r5
    fe98:	mov	r2, r7
    fe9c:	ldr	r0, [pc, #644]	; 10128 <rb_setup_ssl_server+0x3e0>
    fea0:	add	r1, pc, r1
    fea4:	add	r1, r1, #440	; 0x1b8
    fea8:	add	r0, pc, r0
    feac:	bl	48f0 <rb_lib_log@plt>
    feb0:	mov	r0, r8
    feb4:	bl	4434 <SSL_CTX_free@plt>
    feb8:	mov	r0, r4
    febc:	add	sp, sp, #12
    fec0:	ldrd	r4, [sp]
    fec4:	ldrd	r6, [sp, #8]
    fec8:	ldrd	r8, [sp, #16]
    fecc:	add	sp, sp, #24
    fed0:	pop	{pc}		; (ldr pc, [sp], #4)
    fed4:	mov	r5, r4
    fed8:	bl	43d4 <ERR_get_error@plt>
    fedc:	subs	r4, r0, #0
    fee0:	bne	fed4 <rb_setup_ssl_server+0x18c>
    fee4:	ldr	r3, [pc, #576]	; 1012c <rb_setup_ssl_server+0x3e4>
    fee8:	mov	r0, r5
    feec:	mov	r2, #512	; 0x200
    fef0:	add	r3, pc, r3
    fef4:	mov	r1, r3
    fef8:	mov	r5, r3
    fefc:	bl	4578 <ERR_error_string_n@plt>
    ff00:	ldr	r1, [pc, #552]	; 10130 <rb_setup_ssl_server+0x3e8>
    ff04:	mov	r2, r5
    ff08:	ldr	r0, [pc, #548]	; 10134 <rb_setup_ssl_server+0x3ec>
    ff0c:	add	r1, pc, r1
    ff10:	add	r1, r1, #440	; 0x1b8
    ff14:	add	r0, pc, r0
    ff18:	bl	48f0 <rb_lib_log@plt>
    ff1c:	b	feb8 <rb_setup_ssl_server+0x170>
    ff20:	mov	r5, r4
    ff24:	bl	43d4 <ERR_get_error@plt>
    ff28:	subs	r4, r0, #0
    ff2c:	bne	ff20 <rb_setup_ssl_server+0x1d8>
    ff30:	ldr	r3, [pc, #512]	; 10138 <rb_setup_ssl_server+0x3f0>
    ff34:	mov	r0, r5
    ff38:	mov	r2, #512	; 0x200
    ff3c:	add	r3, pc, r3
    ff40:	mov	r1, r3
    ff44:	mov	r5, r3
    ff48:	bl	4578 <ERR_error_string_n@plt>
    ff4c:	ldr	r1, [pc, #488]	; 1013c <rb_setup_ssl_server+0x3f4>
    ff50:	mov	r3, r5
    ff54:	mov	r2, r6
    ff58:	ldr	r0, [pc, #480]	; 10140 <rb_setup_ssl_server+0x3f8>
    ff5c:	add	r1, pc, r1
    ff60:	add	r1, r1, #440	; 0x1b8
    ff64:	add	r0, pc, r0
    ff68:	bl	48f0 <rb_lib_log@plt>
    ff6c:	mov	r0, r8
    ff70:	bl	4434 <SSL_CTX_free@plt>
    ff74:	b	feb8 <rb_setup_ssl_server+0x170>
    ff78:	ldr	r4, [pc, #452]	; 10144 <rb_setup_ssl_server+0x3fc>
    ff7c:	add	r4, pc, r4
    ff80:	add	r4, r4, #40	; 0x28
    ff84:	b	fd80 <rb_setup_ssl_server+0x38>
    ff88:	mov	r5, r0
    ff8c:	bl	43d4 <ERR_get_error@plt>
    ff90:	cmp	r0, #0
    ff94:	bne	ff88 <rb_setup_ssl_server+0x240>
    ff98:	ldr	r3, [pc, #424]	; 10148 <rb_setup_ssl_server+0x400>
    ff9c:	mov	r0, r5
    ffa0:	mov	r2, #512	; 0x200
    ffa4:	add	r3, pc, r3
    ffa8:	mov	r1, r3
    ffac:	mov	r5, r3
    ffb0:	bl	4578 <ERR_error_string_n@plt>
    ffb4:	ldr	r1, [pc, #400]	; 1014c <rb_setup_ssl_server+0x404>
    ffb8:	mov	r3, r5
    ffbc:	mov	r2, r9
    ffc0:	ldr	r0, [pc, #392]	; 10150 <rb_setup_ssl_server+0x408>
    ffc4:	add	r1, pc, r1
    ffc8:	add	r1, r1, #440	; 0x1b8
    ffcc:	add	r0, pc, r0
    ffd0:	bl	48f0 <rb_lib_log@plt>
    ffd4:	mov	r0, r6
    ffd8:	bl	4554 <fclose@plt>
    ffdc:	b	fe24 <rb_setup_ssl_server+0xdc>
    ffe0:	ldr	r1, [pc, #364]	; 10154 <rb_setup_ssl_server+0x40c>
    ffe4:	mov	r4, r7
    ffe8:	ldr	r0, [pc, #360]	; 10158 <rb_setup_ssl_server+0x410>
    ffec:	add	r1, pc, r1
    fff0:	add	r1, r1, #440	; 0x1b8
    fff4:	add	r0, pc, r0
    fff8:	bl	48f0 <rb_lib_log@plt>
    fffc:	b	feb8 <rb_setup_ssl_server+0x170>
   10000:	mov	r3, #0
   10004:	mov	r1, #44	; 0x2c
   10008:	mov	r2, r3
   1000c:	mov	r0, r8
   10010:	bl	4650 <SSL_CTX_ctrl@plt>
   10014:	ldr	r2, [pc, #320]	; 1015c <rb_setup_ssl_server+0x414>
   10018:	mov	r1, #5
   1001c:	mov	r0, r8
   10020:	add	r2, pc, r2
   10024:	bl	4cec <SSL_CTX_set_verify@plt>
   10028:	mov	r1, #2048	; 0x800
   1002c:	mov	r0, r8
   10030:	bl	44e8 <SSL_CTX_clear_options@plt>
   10034:	mov	r1, #67108864	; 0x4000000
   10038:	mov	r0, r8
   1003c:	bl	4830 <SSL_CTX_set_options@plt>
   10040:	mov	r1, #16384	; 0x4000
   10044:	mov	r0, r8
   10048:	bl	4830 <SSL_CTX_set_options@plt>
   1004c:	mov	r1, #4194304	; 0x400000
   10050:	mov	r0, r8
   10054:	bl	4830 <SSL_CTX_set_options@plt>
   10058:	mov	r1, #0
   1005c:	mov	r0, r8
   10060:	bl	4830 <SSL_CTX_set_options@plt>
   10064:	mov	r1, #0
   10068:	mov	r0, r8
   1006c:	bl	4830 <SSL_CTX_set_options@plt>
   10070:	ldr	r3, [pc, #232]	; 10160 <rb_setup_ssl_server+0x418>
   10074:	mov	r2, #0
   10078:	mov	r1, #92	; 0x5c
   1007c:	mov	r0, r8
   10080:	add	r3, pc, r3
   10084:	bl	4650 <SSL_CTX_ctrl@plt>
   10088:	ldr	r3, [pc, #212]	; 10164 <rb_setup_ssl_server+0x41c>
   1008c:	add	r3, pc, r3
   10090:	ldr	r0, [r3, #512]	; 0x200
   10094:	cmp	r0, #0
   10098:	beq	100a0 <rb_setup_ssl_server+0x358>
   1009c:	bl	4434 <SSL_CTX_free@plt>
   100a0:	ldr	r1, [pc, #192]	; 10168 <rb_setup_ssl_server+0x420>
   100a4:	ldr	r3, [pc, #192]	; 1016c <rb_setup_ssl_server+0x424>
   100a8:	ldr	r0, [pc, #192]	; 10170 <rb_setup_ssl_server+0x428>
   100ac:	add	r1, pc, r1
   100b0:	add	r1, r1, #440	; 0x1b8
   100b4:	add	r3, pc, r3
   100b8:	add	r0, pc, r0
   100bc:	str	r8, [r3, #512]	; 0x200
   100c0:	bl	48f0 <rb_lib_log@plt>
   100c4:	b	feb8 <rb_setup_ssl_server+0x170>
   100c8:	ldr	r1, [pc, #164]	; 10174 <rb_setup_ssl_server+0x42c>
   100cc:	ldr	r0, [pc, #164]	; 10178 <rb_setup_ssl_server+0x430>
   100d0:	add	r1, pc, r1
   100d4:	add	r1, r1, #440	; 0x1b8
   100d8:	add	r0, pc, r0
   100dc:	bl	48f0 <rb_lib_log@plt>
   100e0:	b	fe24 <rb_setup_ssl_server+0xdc>
   100e4:	bl	4cbc <__errno_location@plt>
   100e8:	ldr	r0, [r0]
   100ec:	bl	4374 <strerror@plt>
   100f0:	ldr	r1, [pc, #132]	; 1017c <rb_setup_ssl_server+0x434>
   100f4:	mov	r3, r0
   100f8:	mov	r2, r9
   100fc:	ldr	r0, [pc, #124]	; 10180 <rb_setup_ssl_server+0x438>
   10100:	add	r1, pc, r1
   10104:	add	r1, r1, #440	; 0x1b8
   10108:	add	r0, pc, r0
   1010c:	bl	48f0 <rb_lib_log@plt>
   10110:	b	fe24 <rb_setup_ssl_server+0xdc>
   10114:	.word	0x0000b374
   10118:	.word	0x0000aa08
   1011c:	.word	0x0000ad30
   10120:	.word	0x0002eb98
   10124:	.word	0x0000a9b0
   10128:	.word	0x0000ac18
   1012c:	.word	0x0002eb28
   10130:	.word	0x0000a944
   10134:	.word	0x0000ab98
   10138:	.word	0x0002eadc
   1013c:	.word	0x0000a8f4
   10140:	.word	0x0000ab90
   10144:	.word	0x0000a8d4
   10148:	.word	0x0002ea74
   1014c:	.word	0x0000a88c
   10150:	.word	0x0000ab90
   10154:	.word	0x0000a864
   10158:	.word	0x0000aa94
   1015c:	.word	0xfffff350
   10160:	.word	0x0001c3dc
   10164:	.word	0x0002e98c
   10168:	.word	0x0000a7a4
   1016c:	.word	0x0002e964
   10170:	.word	0x0000ab08
   10174:	.word	0x0000a780
   10178:	.word	0x0000aa48
   1017c:	.word	0x0000a750
   10180:	.word	0x0000aa3c

00010184 <rb_init_prng>:
   10184:	strd	r4, [sp, #-16]!
   10188:	mov	r4, r1
   1018c:	str	r6, [sp, #8]
   10190:	mov	r6, r0
   10194:	str	lr, [sp, #12]
   10198:	bl	43d4 <ERR_get_error@plt>
   1019c:	subs	r5, r0, #0
   101a0:	bne	10198 <rb_init_prng+0x14>
   101a4:	cmp	r4, #0
   101a8:	beq	10218 <rb_init_prng+0x94>
   101ac:	bl	4b90 <RAND_status@plt>
   101b0:	cmp	r0, #1
   101b4:	mov	r4, r0
   101b8:	bne	101c4 <rb_init_prng+0x40>
   101bc:	b	1023c <rb_init_prng+0xb8>
   101c0:	mov	r5, r4
   101c4:	bl	43d4 <ERR_get_error@plt>
   101c8:	subs	r4, r0, #0
   101cc:	bne	101c0 <rb_init_prng+0x3c>
   101d0:	ldr	r1, [pc, #204]	; 102a4 <rb_init_prng+0x120>
   101d4:	mov	r0, r5
   101d8:	mov	r2, #512	; 0x200
   101dc:	add	r1, pc, r1
   101e0:	mov	r5, r1
   101e4:	bl	4578 <ERR_error_string_n@plt>
   101e8:	ldr	r1, [pc, #184]	; 102a8 <rb_init_prng+0x124>
   101ec:	mov	r2, r5
   101f0:	ldr	r0, [pc, #180]	; 102ac <rb_init_prng+0x128>
   101f4:	add	r1, pc, r1
   101f8:	add	r1, r1, #460	; 0x1cc
   101fc:	add	r0, pc, r0
   10200:	bl	48f0 <rb_lib_log@plt>
   10204:	mov	r0, r4
   10208:	ldrd	r4, [sp]
   1020c:	ldr	r6, [sp, #8]
   10210:	add	sp, sp, #12
   10214:	pop	{pc}		; (ldr pc, [sp], #4)
   10218:	mov	r0, r6
   1021c:	mvn	r1, #0
   10220:	bl	4404 <RAND_load_file@plt>
   10224:	cmp	r0, #0
   10228:	blt	1025c <rb_init_prng+0xd8>
   1022c:	bl	4b90 <RAND_status@plt>
   10230:	cmp	r0, #1
   10234:	mov	r4, r0
   10238:	bne	101c4 <rb_init_prng+0x40>
   1023c:	ldr	r1, [pc, #108]	; 102b0 <rb_init_prng+0x12c>
   10240:	ldr	r0, [pc, #108]	; 102b4 <rb_init_prng+0x130>
   10244:	add	r1, pc, r1
   10248:	add	r1, r1, #460	; 0x1cc
   1024c:	add	r0, pc, r0
   10250:	bl	48f0 <rb_lib_log@plt>
   10254:	b	10204 <rb_init_prng+0x80>
   10258:	mov	r4, r0
   1025c:	bl	43d4 <ERR_get_error@plt>
   10260:	cmp	r0, #0
   10264:	bne	10258 <rb_init_prng+0xd4>
   10268:	ldr	r3, [pc, #72]	; 102b8 <rb_init_prng+0x134>
   1026c:	mov	r0, r4
   10270:	mov	r2, #512	; 0x200
   10274:	add	r3, pc, r3
   10278:	mov	r1, r3
   1027c:	mov	r4, r3
   10280:	bl	4578 <ERR_error_string_n@plt>
   10284:	ldr	r1, [pc, #48]	; 102bc <rb_init_prng+0x138>
   10288:	mov	r2, r4
   1028c:	ldr	r0, [pc, #44]	; 102c0 <rb_init_prng+0x13c>
   10290:	add	r1, pc, r1
   10294:	add	r1, r1, #460	; 0x1cc
   10298:	add	r0, pc, r0
   1029c:	bl	48f0 <rb_lib_log@plt>
   102a0:	b	101ac <rb_init_prng+0x28>
   102a4:	.word	0x0002e83c
   102a8:	.word	0x0000a65c
   102ac:	.word	0x0000aa00
   102b0:	.word	0x0000a60c
   102b4:	.word	0x0000a9c4
   102b8:	.word	0x0002e7a4
   102bc:	.word	0x0000a5c0
   102c0:	.word	0x0000a94c

000102c4 <rb_get_random>:
   102c4:	strd	r4, [sp, #-16]!
   102c8:	mov	r5, r0
   102cc:	str	r6, [sp, #8]
   102d0:	mov	r6, r1
   102d4:	str	lr, [sp, #12]
   102d8:	bl	43d4 <ERR_get_error@plt>
   102dc:	subs	r4, r0, #0
   102e0:	bne	102d8 <rb_get_random+0x14>
   102e4:	mov	r1, r6
   102e8:	mov	r0, r5
   102ec:	bl	4ab8 <RAND_bytes@plt>
   102f0:	cmp	r0, #1
   102f4:	bne	1030c <rb_get_random+0x48>
   102f8:	ldrd	r4, [sp]
   102fc:	ldr	r6, [sp, #8]
   10300:	add	sp, sp, #12
   10304:	pop	{pc}		; (ldr pc, [sp], #4)
   10308:	mov	r4, r5
   1030c:	bl	43d4 <ERR_get_error@plt>
   10310:	subs	r5, r0, #0
   10314:	bne	10308 <rb_get_random+0x44>
   10318:	ldr	r3, [pc, #68]	; 10364 <rb_get_random+0xa0>
   1031c:	mov	r0, r4
   10320:	mov	r2, #512	; 0x200
   10324:	add	r3, pc, r3
   10328:	mov	r1, r3
   1032c:	mov	r4, r3
   10330:	bl	4578 <ERR_error_string_n@plt>
   10334:	ldr	r1, [pc, #44]	; 10368 <rb_get_random+0xa4>
   10338:	mov	r2, r4
   1033c:	ldr	r0, [pc, #40]	; 1036c <rb_get_random+0xa8>
   10340:	add	r1, pc, r1
   10344:	add	r1, r1, #476	; 0x1dc
   10348:	add	r0, pc, r0
   1034c:	bl	48f0 <rb_lib_log@plt>
   10350:	mov	r0, r5
   10354:	ldrd	r4, [sp]
   10358:	ldr	r6, [sp, #8]
   1035c:	add	sp, sp, #12
   10360:	pop	{pc}		; (ldr pc, [sp], #4)
   10364:	.word	0x0002e6f4
   10368:	.word	0x0000a510
   1036c:	.word	0x0000a8e0

00010370 <rb_get_ssl_strerror>:
   10370:	str	r4, [sp, #-8]!
   10374:	mov	r2, #512	; 0x200
   10378:	ldr	r4, [pc, #32]	; 103a0 <rb_get_ssl_strerror+0x30>
   1037c:	ldr	r0, [r0, #64]	; 0x40
   10380:	str	lr, [sp, #4]
   10384:	add	r4, pc, r4
   10388:	mov	r1, r4
   1038c:	bl	4578 <ERR_error_string_n@plt>
   10390:	mov	r0, r4
   10394:	ldr	r4, [sp]
   10398:	add	sp, sp, #4
   1039c:	pop	{pc}		; (ldr pc, [sp], #4)
   103a0:	.word	0x0002e694

000103a4 <rb_get_ssl_certfp>:
   103a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   103a8:	subs	r4, r0, #0
   103ac:	strd	r6, [sp, #8]
   103b0:	str	r8, [sp, #16]
   103b4:	str	lr, [sp, #20]
   103b8:	beq	10460 <rb_get_ssl_certfp+0xbc>
   103bc:	ldr	r0, [r4, #56]	; 0x38
   103c0:	cmp	r0, #0
   103c4:	beq	10460 <rb_get_ssl_certfp+0xbc>
   103c8:	mov	r6, r2
   103cc:	mov	r5, r1
   103d0:	bl	49f8 <SSL_get_peer_certificate@plt>
   103d4:	subs	r7, r0, #0
   103d8:	beq	10460 <rb_get_ssl_certfp+0xbc>
   103dc:	ldr	r0, [r4, #56]	; 0x38
   103e0:	bl	4a1c <SSL_get_verify_result@plt>
   103e4:	cmp	r0, #27
   103e8:	addls	pc, pc, r0, lsl #2
   103ec:	b	1047c <rb_get_ssl_certfp+0xd8>
   103f0:	b	1048c <rb_get_ssl_certfp+0xe8>
   103f4:	b	1047c <rb_get_ssl_certfp+0xd8>
   103f8:	b	1047c <rb_get_ssl_certfp+0xd8>
   103fc:	b	1047c <rb_get_ssl_certfp+0xd8>
   10400:	b	1047c <rb_get_ssl_certfp+0xd8>
   10404:	b	1047c <rb_get_ssl_certfp+0xd8>
   10408:	b	1047c <rb_get_ssl_certfp+0xd8>
   1040c:	b	1047c <rb_get_ssl_certfp+0xd8>
   10410:	b	1047c <rb_get_ssl_certfp+0xd8>
   10414:	b	1047c <rb_get_ssl_certfp+0xd8>
   10418:	b	1047c <rb_get_ssl_certfp+0xd8>
   1041c:	b	1047c <rb_get_ssl_certfp+0xd8>
   10420:	b	1047c <rb_get_ssl_certfp+0xd8>
   10424:	b	1047c <rb_get_ssl_certfp+0xd8>
   10428:	b	1047c <rb_get_ssl_certfp+0xd8>
   1042c:	b	1047c <rb_get_ssl_certfp+0xd8>
   10430:	b	1047c <rb_get_ssl_certfp+0xd8>
   10434:	b	1047c <rb_get_ssl_certfp+0xd8>
   10438:	b	1048c <rb_get_ssl_certfp+0xe8>
   1043c:	b	1048c <rb_get_ssl_certfp+0xe8>
   10440:	b	1048c <rb_get_ssl_certfp+0xe8>
   10444:	b	1048c <rb_get_ssl_certfp+0xe8>
   10448:	b	1047c <rb_get_ssl_certfp+0xd8>
   1044c:	b	1047c <rb_get_ssl_certfp+0xd8>
   10450:	b	1047c <rb_get_ssl_certfp+0xd8>
   10454:	b	1047c <rb_get_ssl_certfp+0xd8>
   10458:	b	1047c <rb_get_ssl_certfp+0xd8>
   1045c:	b	1048c <rb_get_ssl_certfp+0xe8>
   10460:	mov	r4, #0
   10464:	mov	r0, r4
   10468:	ldrd	r4, [sp]
   1046c:	ldrd	r6, [sp, #8]
   10470:	ldr	r8, [sp, #16]
   10474:	add	sp, sp, #20
   10478:	pop	{pc}		; (ldr pc, [sp], #4)
   1047c:	mov	r4, #0
   10480:	mov	r0, r7
   10484:	bl	4c38 <X509_free@plt>
   10488:	b	10464 <rb_get_ssl_certfp+0xc0>
   1048c:	mov	r2, r6
   10490:	mov	r1, r5
   10494:	mov	r0, r7
   10498:	bl	f3bc <make_certfp>
   1049c:	mov	r4, r0
   104a0:	b	10480 <rb_get_ssl_certfp+0xdc>

000104a4 <rb_get_ssl_certfp_file>:
   104a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   104a8:	mov	r4, r1
   104ac:	ldr	r1, [pc, #132]	; 10538 <rb_get_ssl_certfp_file+0x94>
   104b0:	strd	r6, [sp, #8]
   104b4:	mov	r7, r2
   104b8:	str	r8, [sp, #16]
   104bc:	str	lr, [sp, #20]
   104c0:	add	r1, pc, r1
   104c4:	bl	45f0 <fopen@plt>
   104c8:	subs	r5, r0, #0
   104cc:	beq	10530 <rb_get_ssl_certfp_file+0x8c>
   104d0:	mov	r3, #0
   104d4:	mov	r2, r3
   104d8:	mov	r1, r3
   104dc:	bl	47f4 <PEM_read_X509@plt>
   104e0:	subs	r6, r0, #0
   104e4:	beq	10520 <rb_get_ssl_certfp_file+0x7c>
   104e8:	mov	r1, r4
   104ec:	mov	r2, r7
   104f0:	bl	f3bc <make_certfp>
   104f4:	mov	r4, r0
   104f8:	mov	r0, r6
   104fc:	bl	4c38 <X509_free@plt>
   10500:	mov	r0, r5
   10504:	bl	4554 <fclose@plt>
   10508:	mov	r0, r4
   1050c:	ldrd	r4, [sp]
   10510:	ldrd	r6, [sp, #8]
   10514:	ldr	r8, [sp, #16]
   10518:	add	sp, sp, #20
   1051c:	pop	{pc}		; (ldr pc, [sp], #4)
   10520:	mov	r0, r5
   10524:	mov	r4, r6
   10528:	bl	4554 <fclose@plt>
   1052c:	b	10508 <rb_get_ssl_certfp_file+0x64>
   10530:	mvn	r4, #0
   10534:	b	10508 <rb_get_ssl_certfp_file+0x64>
   10538:	.word	0x0000ac88

0001053c <rb_get_ssl_info>:
   1053c:	strd	r4, [sp, #-20]!	; 0xffffffec
   10540:	mov	r5, r0
   10544:	movw	r4, #4175	; 0x104f
   10548:	movt	r4, #4112	; 0x1010
   1054c:	strd	r6, [sp, #8]
   10550:	mov	r6, r1
   10554:	str	lr, [sp, #16]
   10558:	sub	sp, sp, #20
   1055c:	bl	46b0 <OpenSSL_version_num@plt>
   10560:	cmp	r0, r4
   10564:	beq	105b8 <rb_get_ssl_info+0x7c>
   10568:	bl	46b0 <OpenSSL_version_num@plt>
   1056c:	mov	r7, r0
   10570:	mov	r0, #0
   10574:	bl	4c68 <OpenSSL_version@plt>
   10578:	ldr	ip, [pc, #96]	; 105e0 <rb_get_ssl_info+0xa4>
   1057c:	mov	r3, r4
   10580:	mov	r1, r6
   10584:	str	r7, [sp, #4]
   10588:	ldr	r2, [pc, #84]	; 105e4 <rb_get_ssl_info+0xa8>
   1058c:	str	r0, [sp, #8]
   10590:	mov	r0, r5
   10594:	add	ip, pc, ip
   10598:	add	r2, pc, r2
   1059c:	str	ip, [sp]
   105a0:	bl	4b84 <snprintf@plt>
   105a4:	add	sp, sp, #20
   105a8:	ldrd	r4, [sp]
   105ac:	ldrd	r6, [sp, #8]
   105b0:	add	sp, sp, #16
   105b4:	pop	{pc}		; (ldr pc, [sp], #4)
   105b8:	ldr	ip, [pc, #40]	; 105e8 <rb_get_ssl_info+0xac>
   105bc:	mov	r3, r0
   105c0:	mov	r1, r6
   105c4:	mov	r0, r5
   105c8:	ldr	r2, [pc, #28]	; 105ec <rb_get_ssl_info+0xb0>
   105cc:	add	ip, pc, ip
   105d0:	add	r2, pc, r2
   105d4:	str	ip, [sp]
   105d8:	bl	4b84 <snprintf@plt>
   105dc:	b	105a4 <rb_get_ssl_info+0x68>
   105e0:	.word	0x0000a6cc
   105e4:	.word	0x0000a6e4
   105e8:	.word	0x0000a694
   105ec:	.word	0x0000a66c

000105f0 <rb_ssl_get_cipher>:
   105f0:	strd	r4, [sp, #-12]!
   105f4:	subs	r4, r0, #0
   105f8:	str	lr, [sp, #8]
   105fc:	sub	sp, sp, #12
   10600:	beq	10660 <rb_ssl_get_cipher+0x70>
   10604:	ldr	r0, [r4, #56]	; 0x38
   10608:	cmp	r0, #0
   1060c:	beq	10650 <rb_ssl_get_cipher+0x60>
   10610:	bl	4c8c <SSL_get_version@plt>
   10614:	mov	r5, r0
   10618:	ldr	r0, [r4, #56]	; 0x38
   1061c:	bl	44f4 <SSL_get_current_cipher@plt>
   10620:	ldr	r4, [pc, #64]	; 10668 <rb_ssl_get_cipher+0x78>
   10624:	bl	4698 <SSL_CIPHER_get_name@plt>
   10628:	ldr	r2, [pc, #60]	; 1066c <rb_ssl_get_cipher+0x7c>
   1062c:	mov	r3, r5
   10630:	mov	r1, #512	; 0x200
   10634:	str	r0, [sp]
   10638:	add	r4, pc, r4
   1063c:	add	r4, r4, #516	; 0x204
   10640:	add	r2, pc, r2
   10644:	mov	r0, r4
   10648:	bl	4b84 <snprintf@plt>
   1064c:	mov	r0, r4
   10650:	add	sp, sp, #12
   10654:	ldrd	r4, [sp]
   10658:	add	sp, sp, #8
   1065c:	pop	{pc}		; (ldr pc, [sp], #4)
   10660:	mov	r0, r4
   10664:	b	10650 <rb_ssl_get_cipher+0x60>
   10668:	.word	0x0002e3e0
   1066c:	.word	0x0000a670

00010670 <rb_ssl_read>:
   10670:	mov	ip, #0
   10674:	push	{lr}		; (str lr, [sp, #-4]!)
   10678:	sub	sp, sp, #12
   1067c:	mov	r3, r1
   10680:	add	r1, r0, #56	; 0x38
   10684:	str	ip, [sp]
   10688:	str	r2, [sp, #4]
   1068c:	add	r2, r0, #64	; 0x40
   10690:	mov	r0, ip
   10694:	bl	f6c0 <rb_ssl_read_or_write.isra.0>
   10698:	add	sp, sp, #12
   1069c:	pop	{pc}		; (ldr pc, [sp], #4)

000106a0 <rb_ssl_write>:
   106a0:	push	{lr}		; (str lr, [sp, #-4]!)
   106a4:	sub	sp, sp, #12
   106a8:	mov	ip, r0
   106ac:	mov	r3, #0
   106b0:	mov	r0, #1
   106b4:	stm	sp, {r1, r2}
   106b8:	add	r1, ip, #56	; 0x38
   106bc:	add	r2, ip, #64	; 0x40
   106c0:	bl	f6c0 <rb_ssl_read_or_write.isra.0>
   106c4:	add	sp, sp, #12
   106c8:	pop	{pc}		; (ldr pc, [sp], #4)

000106cc <rb_supports_ssl>:
   106cc:	mov	r0, #1
   106d0:	bx	lr

000106d4 <rb_ssl_handshake_count>:
   106d4:	ldr	r0, [r0, #60]	; 0x3c
   106d8:	bx	lr

000106dc <rb_ssl_clear_handshake_count>:
   106dc:	mov	r3, #0
   106e0:	str	r3, [r0, #60]	; 0x3c
   106e4:	bx	lr

000106e8 <rb_ssl_start_accepted>:
   106e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   106ec:	mov	r4, r0
   106f0:	strd	r6, [sp, #8]
   106f4:	mov	r6, r3
   106f8:	mov	r7, r2
   106fc:	str	r8, [sp, #16]
   10700:	mov	r8, r1
   10704:	mov	r1, #144	; 0x90
   10708:	str	lr, [sp, #20]
   1070c:	ldrb	ip, [r0, #17]
   10710:	mov	r0, #1
   10714:	orr	ip, ip, #32
   10718:	strb	ip, [r4, #17]
   1071c:	bl	45c0 <calloc@plt>
   10720:	subs	r3, r0, #0
   10724:	beq	10788 <rb_ssl_start_accepted+0xa0>
   10728:	mov	r5, #0
   1072c:	mov	r2, #128	; 0x80
   10730:	str	r3, [r4, #52]	; 0x34
   10734:	mov	r1, r5
   10738:	str	r5, [r3, #128]	; 0x80
   1073c:	str	r8, [r3, #132]	; 0x84
   10740:	str	r7, [r3, #140]	; 0x8c
   10744:	bl	4608 <memset@plt>
   10748:	ldr	r2, [pc, #60]	; 1078c <rb_ssl_start_accepted+0xa4>
   1074c:	mov	r3, r5
   10750:	mov	r1, r6
   10754:	mov	r0, r4
   10758:	add	r2, pc, r2
   1075c:	bl	43bc <rb_settimeout@plt>
   10760:	mov	r0, r4
   10764:	mov	r1, r5
   10768:	bl	f7f8 <rb_ssl_init_fd>
   1076c:	mov	r0, r4
   10770:	ldrd	r4, [sp]
   10774:	ldrd	r6, [sp, #8]
   10778:	ldr	r8, [sp, #16]
   1077c:	ldr	lr, [sp, #20]
   10780:	add	sp, sp, #24
   10784:	b	f8e0 <rb_ssl_accept_common.constprop.3>
   10788:	bl	495c <rb_outofmemory@plt>
   1078c:	.word	0xffffec20

00010790 <rb_ssl_accept_setup>:
   10790:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10794:	mov	r4, r1
   10798:	strd	r6, [sp, #8]
   1079c:	mov	r7, r2
   107a0:	mov	r6, r3
   107a4:	str	r8, [sp, #16]
   107a8:	mov	r8, r0
   107ac:	mov	r0, #1
   107b0:	str	lr, [sp, #20]
   107b4:	ldrb	ip, [r1, #17]
   107b8:	mov	r1, #144	; 0x90
   107bc:	orr	ip, ip, #32
   107c0:	strb	ip, [r4, #17]
   107c4:	bl	45c0 <calloc@plt>
   107c8:	subs	r5, r0, #0
   107cc:	beq	10848 <rb_ssl_accept_setup+0xb8>
   107d0:	str	r5, [r4, #52]	; 0x34
   107d4:	mov	r2, #128	; 0x80
   107d8:	mov	r1, #0
   107dc:	ldr	r3, [r8, #52]	; 0x34
   107e0:	ldr	ip, [r3, #132]	; 0x84
   107e4:	ldr	r3, [r3, #140]	; 0x8c
   107e8:	str	r6, [r5, #128]	; 0x80
   107ec:	str	ip, [r5, #132]	; 0x84
   107f0:	str	r3, [r5, #140]	; 0x8c
   107f4:	bl	4608 <memset@plt>
   107f8:	mov	r2, r6
   107fc:	mov	r1, r7
   10800:	mov	r0, r5
   10804:	bl	47e8 <memcpy@plt>
   10808:	ldr	r2, [pc, #60]	; 1084c <rb_ssl_accept_setup+0xbc>
   1080c:	mov	r0, r4
   10810:	mov	r3, #0
   10814:	mov	r1, #10
   10818:	add	r2, pc, r2
   1081c:	bl	43bc <rb_settimeout@plt>
   10820:	mov	r0, r4
   10824:	mov	r1, #0
   10828:	bl	f7f8 <rb_ssl_init_fd>
   1082c:	mov	r0, r4
   10830:	ldrd	r4, [sp]
   10834:	ldrd	r6, [sp, #8]
   10838:	ldr	r8, [sp, #16]
   1083c:	ldr	lr, [sp, #20]
   10840:	add	sp, sp, #24
   10844:	b	f8e0 <rb_ssl_accept_common.constprop.3>
   10848:	bl	495c <rb_outofmemory@plt>
   1084c:	.word	0xffffeb60

00010850 <rb_ssl_listen>:
   10850:	str	r4, [sp, #-8]!
   10854:	mov	r4, r0
   10858:	str	lr, [sp, #4]
   1085c:	bl	4bcc <rb_listen@plt>
   10860:	mov	r3, #52	; 0x34
   10864:	strb	r3, [r4, #17]
   10868:	ldr	r4, [sp]
   1086c:	add	sp, sp, #4
   10870:	pop	{pc}		; (ldr pc, [sp], #4)

00010874 <rb_connect_tcp_ssl>:
   10874:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10878:	subs	r4, r0, #0
   1087c:	strd	r6, [sp, #8]
   10880:	strd	r8, [sp, #16]
   10884:	str	sl, [sp, #24]
   10888:	str	lr, [sp, #28]
   1088c:	ldr	r8, [sp, #32]
   10890:	ldr	r7, [sp, #36]	; 0x24
   10894:	beq	108f8 <rb_connect_tcp_ssl+0x84>
   10898:	mov	r6, r1
   1089c:	mov	r0, #1
   108a0:	mov	r1, #12
   108a4:	mov	r5, r3
   108a8:	mov	r9, r2
   108ac:	bl	45c0 <calloc@plt>
   108b0:	subs	ip, r0, #0
   108b4:	beq	10910 <rb_connect_tcp_ssl+0x9c>
   108b8:	ldr	r3, [pc, #84]	; 10914 <rb_connect_tcp_ssl+0xa0>
   108bc:	mov	r2, r9
   108c0:	mov	r1, r6
   108c4:	mov	r0, r4
   108c8:	ldr	sl, [sp, #24]
   108cc:	ldr	lr, [sp, #28]
   108d0:	add	r3, pc, r3
   108d4:	stm	ip, {r5, r8}
   108d8:	str	r7, [ip, #8]
   108dc:	str	ip, [sp, #32]
   108e0:	str	r7, [sp, #36]	; 0x24
   108e4:	ldrd	r4, [sp]
   108e8:	ldrd	r6, [sp, #8]
   108ec:	ldrd	r8, [sp, #16]
   108f0:	add	sp, sp, #32
   108f4:	b	43f8 <rb_connect_tcp@plt>
   108f8:	ldrd	r4, [sp]
   108fc:	ldrd	r6, [sp, #8]
   10900:	ldrd	r8, [sp, #16]
   10904:	ldr	sl, [sp, #24]
   10908:	add	sp, sp, #28
   1090c:	pop	{pc}		; (ldr pc, [sp], #4)
   10910:	bl	495c <rb_outofmemory@plt>
   10914:	.word	0xfffff31c

00010918 <rb_ssl_start_connected>:
   10918:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1091c:	subs	r4, r0, #0
   10920:	strd	r6, [sp, #8]
   10924:	str	r8, [sp, #16]
   10928:	str	lr, [sp, #20]
   1092c:	beq	109c8 <rb_ssl_start_connected+0xb0>
   10930:	mov	r7, r1
   10934:	mov	r0, #1
   10938:	mov	r1, #12
   1093c:	mov	r8, r3
   10940:	mov	r6, r2
   10944:	bl	45c0 <calloc@plt>
   10948:	subs	r5, r0, #0
   1094c:	beq	109dc <rb_ssl_start_connected+0xc4>
   10950:	mov	r1, #268	; 0x10c
   10954:	mov	r0, #1
   10958:	str	r7, [r5]
   1095c:	stmib	r5, {r6, r8}
   10960:	bl	45c0 <calloc@plt>
   10964:	cmp	r0, #0
   10968:	beq	109dc <rb_ssl_start_connected+0xc4>
   1096c:	ldrb	ip, [r4, #17]
   10970:	mov	r1, r8
   10974:	mov	r3, r5
   10978:	str	r0, [r4, #48]	; 0x30
   1097c:	ldr	r2, [pc, #92]	; 109e0 <rb_ssl_start_connected+0xc8>
   10980:	str	r7, [r0, #260]	; 0x104
   10984:	str	r6, [r0, #264]	; 0x108
   10988:	mov	r0, r4
   1098c:	orr	ip, ip, #32
   10990:	add	r2, pc, r2
   10994:	strb	ip, [r4, #17]
   10998:	bl	43bc <rb_settimeout@plt>
   1099c:	mov	r0, r4
   109a0:	mov	r1, #1
   109a4:	bl	f7f8 <rb_ssl_init_fd>
   109a8:	mov	r1, r5
   109ac:	mov	r0, r4
   109b0:	ldrd	r4, [sp]
   109b4:	ldrd	r6, [sp, #8]
   109b8:	ldr	r8, [sp, #16]
   109bc:	ldr	lr, [sp, #20]
   109c0:	add	sp, sp, #24
   109c4:	b	fa9c <rb_ssl_connect_common>
   109c8:	ldrd	r4, [sp]
   109cc:	ldrd	r6, [sp, #8]
   109d0:	ldr	r8, [sp, #16]
   109d4:	add	sp, sp, #20
   109d8:	pop	{pc}		; (ldr pc, [sp], #4)
   109dc:	bl	495c <rb_outofmemory@plt>
   109e0:	.word	0xfffff0c8

000109e4 <rb_event_add_common>:
   109e4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   109e8:	mov	r5, r3
   109ec:	strd	r6, [sp, #8]
   109f0:	mov	r6, r1
   109f4:	mov	r1, #48	; 0x30
   109f8:	str	r8, [sp, #16]
   109fc:	mov	r8, r0
   10a00:	mov	r0, #1
   10a04:	mov	r7, r2
   10a08:	str	lr, [sp, #20]
   10a0c:	bl	45c0 <calloc@plt>
   10a10:	subs	r4, r0, #0
   10a14:	beq	10afc <rb_event_add_common+0x118>
   10a18:	mov	r0, #33	; 0x21
   10a1c:	str	r6, [r4, #12]
   10a20:	bl	4980 <malloc@plt>
   10a24:	subs	r6, r0, #0
   10a28:	beq	10afc <rb_event_add_common+0x118>
   10a2c:	mov	r1, r8
   10a30:	mov	r2, #33	; 0x21
   10a34:	bl	4680 <rb_strlcpy@plt>
   10a38:	str	r7, [r4, #16]
   10a3c:	str	r6, [r4, #20]
   10a40:	bl	47d0 <rb_current_time@plt>
   10a44:	ldr	r1, [pc, #180]	; 10b00 <rb_event_add_common+0x11c>
   10a48:	mov	r3, #0
   10a4c:	add	r0, r0, r5
   10a50:	str	r4, [r4]
   10a54:	ldr	r2, [sp, #24]
   10a58:	str	r3, [r4, #44]	; 0x2c
   10a5c:	add	r1, pc, r1
   10a60:	str	r2, [r4, #24]
   10a64:	ldr	r2, [r1]
   10a68:	str	r0, [r4, #28]
   10a6c:	str	r5, [r4, #32]
   10a70:	cmn	r2, #1
   10a74:	movne	r3, #0
   10a78:	moveq	r3, #1
   10a7c:	cmp	r0, r2
   10a80:	orrlt	r3, r3, #1
   10a84:	ldr	r2, [pc, #120]	; 10b04 <rb_event_add_common+0x120>
   10a88:	cmp	r3, #0
   10a8c:	mov	r3, #0
   10a90:	str	r3, [r4, #4]
   10a94:	strne	r0, [r1]
   10a98:	add	r2, pc, r2
   10a9c:	ldr	r3, [r2]
   10aa0:	cmp	r3, #0
   10aa4:	str	r3, [r4, #8]
   10aa8:	strne	r4, [r3, #4]
   10aac:	beq	10aec <rb_event_add_common+0x108>
   10ab0:	ldr	r3, [pc, #80]	; 10b08 <rb_event_add_common+0x124>
   10ab4:	mov	r1, r5
   10ab8:	mov	r0, r4
   10abc:	add	r3, pc, r3
   10ac0:	ldr	r2, [r3, #8]
   10ac4:	str	r4, [r3]
   10ac8:	add	r2, r2, #1
   10acc:	str	r2, [r3, #8]
   10ad0:	bl	db5c <rb_io_sched_event>
   10ad4:	mov	r0, r4
   10ad8:	ldrd	r4, [sp]
   10adc:	ldrd	r6, [sp, #8]
   10ae0:	ldr	r8, [sp, #16]
   10ae4:	add	sp, sp, #20
   10ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   10aec:	ldr	r3, [r2, #4]
   10af0:	cmp	r3, #0
   10af4:	streq	r4, [r2, #4]
   10af8:	b	10ab0 <rb_event_add_common+0xcc>
   10afc:	bl	495c <rb_outofmemory@plt>
   10b00:	.word	0x0001ba1c
   10b04:	.word	0x0002e384
   10b08:	.word	0x0002e360

00010b0c <rb_event_add>:
   10b0c:	subs	ip, r3, #0
   10b10:	strd	r4, [sp, #-16]!
   10b14:	mov	r4, r0
   10b18:	mov	r5, r1
   10b1c:	str	r6, [sp, #8]
   10b20:	mov	r6, r2
   10b24:	str	lr, [sp, #12]
   10b28:	sub	sp, sp, #8
   10b2c:	ble	10b5c <rb_event_add+0x50>
   10b30:	mov	r3, ip
   10b34:	mov	r2, r6
   10b38:	str	ip, [sp]
   10b3c:	mov	r1, r5
   10b40:	mov	r0, r4
   10b44:	bl	109e4 <rb_event_add_common>
   10b48:	add	sp, sp, #8
   10b4c:	ldrd	r4, [sp]
   10b50:	ldr	r6, [sp, #8]
   10b54:	add	sp, sp, #12
   10b58:	pop	{pc}		; (ldr pc, [sp], #4)
   10b5c:	mov	r1, r0
   10b60:	ldr	r0, [pc, #16]	; 10b78 <rb_event_add+0x6c>
   10b64:	mov	r2, ip
   10b68:	add	r0, pc, r0
   10b6c:	bl	48f0 <rb_lib_log@plt>
   10b70:	mov	ip, #1
   10b74:	b	10b30 <rb_event_add+0x24>
   10b78:	.word	0x0000a150

00010b7c <rb_event_addonce>:
   10b7c:	cmp	r3, #0
   10b80:	strd	r4, [sp, #-16]!
   10b84:	mov	r4, r0
   10b88:	mov	r5, r1
   10b8c:	str	r6, [sp, #8]
   10b90:	mov	r6, r2
   10b94:	str	lr, [sp, #12]
   10b98:	sub	sp, sp, #8
   10b9c:	ble	10bcc <rb_event_addonce+0x50>
   10ba0:	mov	ip, #0
   10ba4:	mov	r2, r6
   10ba8:	mov	r1, r5
   10bac:	mov	r0, r4
   10bb0:	str	ip, [sp]
   10bb4:	bl	109e4 <rb_event_add_common>
   10bb8:	add	sp, sp, #8
   10bbc:	ldrd	r4, [sp]
   10bc0:	ldr	r6, [sp, #8]
   10bc4:	add	sp, sp, #12
   10bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   10bcc:	mov	r1, r0
   10bd0:	ldr	r0, [pc, #16]	; 10be8 <rb_event_addonce+0x6c>
   10bd4:	mov	r2, r3
   10bd8:	add	r0, pc, r0
   10bdc:	bl	48f0 <rb_lib_log@plt>
   10be0:	mov	r3, #1
   10be4:	b	10ba0 <rb_event_addonce+0x24>
   10be8:	.word	0x0000a124

00010bec <rb_event_delete>:
   10bec:	subs	r3, r0, #0
   10bf0:	beq	10c00 <rb_event_delete+0x14>
   10bf4:	mov	r2, #1
   10bf8:	str	r2, [r3, #44]	; 0x2c
   10bfc:	b	dbd8 <rb_io_unsched_event>
   10c00:	bx	lr

00010c04 <rb_event_find_delete>:
   10c04:	ldr	r3, [pc, #68]	; 10c50 <rb_event_find_delete+0x4c>
   10c08:	add	r3, pc, r3
   10c0c:	ldr	r3, [r3]
   10c10:	cmp	r3, #0
   10c14:	bne	10c28 <rb_event_find_delete+0x24>
   10c18:	b	10c48 <rb_event_find_delete+0x44>
   10c1c:	ldr	r3, [r3, #8]
   10c20:	cmp	r3, #0
   10c24:	beq	10c48 <rb_event_find_delete+0x44>
   10c28:	ldr	r2, [r3]
   10c2c:	ldr	ip, [r2, #12]
   10c30:	cmp	r0, ip
   10c34:	bne	10c1c <rb_event_find_delete+0x18>
   10c38:	ldr	ip, [r2, #16]
   10c3c:	cmp	r1, ip
   10c40:	bne	10c1c <rb_event_find_delete+0x18>
   10c44:	mov	r3, r2
   10c48:	mov	r0, r3
   10c4c:	b	4470 <rb_event_delete@plt>
   10c50:	.word	0x0002e214

00010c54 <rb_event_addish>:
   10c54:	cmp	r3, #0
   10c58:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10c5c:	mov	r4, r0
   10c60:	rsblt	r3, r3, #0
   10c64:	mov	r5, r1
   10c68:	strd	r6, [sp, #8]
   10c6c:	cmp	r3, #2
   10c70:	mov	r7, r2
   10c74:	str	r8, [sp, #16]
   10c78:	movle	r6, r3
   10c7c:	str	lr, [sp, #20]
   10c80:	sub	sp, sp, #8
   10c84:	ble	10cd4 <rb_event_addish+0x80>
   10c88:	lsl	r8, r3, #1
   10c8c:	movw	r2, #43691	; 0xaaab
   10c90:	movt	r2, #43690	; 0xaaaa
   10c94:	rsb	r6, r3, #0
   10c98:	umull	r3, r8, r2, r8
   10c9c:	bl	4b18 <rand@plt>
   10ca0:	movw	r3, #19923	; 0x4dd3
   10ca4:	movt	r3, #4194	; 0x1062
   10ca8:	asr	ip, r0, #31
   10cac:	mov	r2, #1000	; 0x3e8
   10cb0:	lsr	r8, r8, #1
   10cb4:	smull	lr, r1, r3, r0
   10cb8:	rsb	ip, ip, r1, asr #6
   10cbc:	mls	r0, r2, ip, r0
   10cc0:	mul	r0, r8, r0
   10cc4:	smull	r3, r2, r3, r0
   10cc8:	asr	r3, r0, #31
   10ccc:	rsb	r3, r3, r2, asr #6
   10cd0:	add	r3, r3, r8
   10cd4:	mov	r2, r7
   10cd8:	mov	r1, r5
   10cdc:	str	r6, [sp]
   10ce0:	mov	r0, r4
   10ce4:	bl	109e4 <rb_event_add_common>
   10ce8:	add	sp, sp, #8
   10cec:	ldrd	r4, [sp]
   10cf0:	ldrd	r6, [sp, #8]
   10cf4:	ldr	r8, [sp, #16]
   10cf8:	add	sp, sp, #20
   10cfc:	pop	{pc}		; (ldr pc, [sp], #4)

00010d00 <rb_run_one_event>:
   10d00:	ldr	r3, [pc, #244]	; 10dfc <rb_run_one_event+0xfc>
   10d04:	mov	r2, #33	; 0x21
   10d08:	strd	r4, [sp, #-16]!
   10d0c:	mov	r4, r0
   10d10:	ldr	r1, [r0, #20]
   10d14:	str	r6, [sp, #8]
   10d18:	str	lr, [sp, #12]
   10d1c:	add	r3, pc, r3
   10d20:	add	r0, r3, #12
   10d24:	bl	4680 <rb_strlcpy@plt>
   10d28:	ldr	r3, [r4, #12]
   10d2c:	ldr	r0, [r4, #16]
   10d30:	blx	r3
   10d34:	ldr	r3, [r4, #24]
   10d38:	cmp	r3, #0
   10d3c:	beq	10d94 <rb_run_one_event+0x94>
   10d40:	bl	47d0 <rb_current_time@plt>
   10d44:	mov	r5, r0
   10d48:	ldr	r0, [r4, #24]
   10d4c:	cmp	r0, #0
   10d50:	blt	10dac <rb_run_one_event+0xac>
   10d54:	ldr	r1, [pc, #164]	; 10e00 <rb_run_one_event+0x100>
   10d58:	add	r0, r5, r0
   10d5c:	str	r0, [r4, #28]
   10d60:	ldrd	r4, [sp]
   10d64:	add	r1, pc, r1
   10d68:	ldr	r6, [sp, #8]
   10d6c:	add	sp, sp, #12
   10d70:	ldr	r2, [r1]
   10d74:	cmn	r2, #1
   10d78:	movne	r3, #0
   10d7c:	moveq	r3, #1
   10d80:	cmp	r0, r2
   10d84:	orrlt	r3, r3, #1
   10d88:	cmp	r3, #0
   10d8c:	strne	r0, [r1]
   10d90:	pop	{pc}		; (ldr pc, [sp], #4)
   10d94:	mov	r0, r4
   10d98:	ldrd	r4, [sp]
   10d9c:	ldr	r6, [sp, #8]
   10da0:	ldr	lr, [sp, #12]
   10da4:	add	sp, sp, #16
   10da8:	b	4470 <rb_event_delete@plt>
   10dac:	lsl	r0, r0, #1
   10db0:	movw	r3, #43691	; 0xaaab
   10db4:	movt	r3, #43690	; 0xaaaa
   10db8:	rsb	r0, r0, #0
   10dbc:	umull	r3, r0, r3, r0
   10dc0:	lsr	r6, r0, #1
   10dc4:	bl	4b18 <rand@plt>
   10dc8:	movw	r2, #19923	; 0x4dd3
   10dcc:	movt	r2, #4194	; 0x1062
   10dd0:	asr	r3, r0, #31
   10dd4:	mov	r1, #1000	; 0x3e8
   10dd8:	smull	lr, ip, r2, r0
   10ddc:	rsb	r3, r3, ip, asr #6
   10de0:	mls	r3, r1, r3, r0
   10de4:	mul	r3, r6, r3
   10de8:	smull	r1, r2, r2, r3
   10dec:	asr	r0, r3, #31
   10df0:	rsb	r0, r0, r2, asr #6
   10df4:	add	r0, r0, r6
   10df8:	b	10d54 <rb_run_one_event+0x54>
   10dfc:	.word	0x0002e100
   10e00:	.word	0x0001b714

00010e04 <rb_event_run>:
   10e04:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10e08:	strd	r6, [sp, #8]
   10e0c:	strd	r8, [sp, #16]
   10e10:	strd	sl, [sp, #24]
   10e14:	str	lr, [sp, #32]
   10e18:	sub	sp, sp, #20
   10e1c:	bl	dc48 <rb_io_supports_event>
   10e20:	cmp	r0, #0
   10e24:	bne	10f48 <rb_event_run+0x144>
   10e28:	ldr	r3, [pc, #628]	; 110a4 <rb_event_run+0x2a0>
   10e2c:	mvn	r1, #0
   10e30:	ldr	r2, [pc, #624]	; 110a8 <rb_event_run+0x2a4>
   10e34:	add	r3, pc, r3
   10e38:	ldr	r3, [r3]
   10e3c:	add	r2, pc, r2
   10e40:	str	r1, [r2]
   10e44:	cmp	r3, #0
   10e48:	beq	10f48 <rb_event_run+0x144>
   10e4c:	ldr	r4, [r3]
   10e50:	movw	fp, #43691	; 0xaaab
   10e54:	movt	fp, #43690	; 0xaaaa
   10e58:	movw	sl, #19923	; 0x4dd3
   10e5c:	movt	sl, #4194	; 0x1062
   10e60:	ldr	r2, [pc, #580]	; 110ac <rb_event_run+0x2a8>
   10e64:	ldr	r5, [r3, #8]
   10e68:	ldr	r3, [r4, #44]	; 0x2c
   10e6c:	add	r2, pc, r2
   10e70:	ldr	r6, [pc, #568]	; 110b0 <rb_event_run+0x2ac>
   10e74:	add	r8, r2, #12
   10e78:	str	r2, [sp, #4]
   10e7c:	ldr	r7, [pc, #560]	; 110b4 <rb_event_run+0x2b0>
   10e80:	cmp	r3, #0
   10e84:	add	r6, pc, r6
   10e88:	add	r7, pc, r7
   10e8c:	beq	10f0c <rb_event_run+0x108>
   10e90:	ldr	r3, [r4, #4]
   10e94:	ldr	r2, [r4, #8]
   10e98:	cmp	r2, #0
   10e9c:	beq	10fec <rb_event_run+0x1e8>
   10ea0:	str	r3, [r2, #4]
   10ea4:	ldr	r3, [r4, #4]
   10ea8:	cmp	r3, #0
   10eac:	strne	r2, [r3, #8]
   10eb0:	beq	10fdc <rb_event_run+0x1d8>
   10eb4:	ldr	r2, [pc, #508]	; 110b8 <rb_event_run+0x2b4>
   10eb8:	mov	r3, #0
   10ebc:	str	r3, [r4, #4]
   10ec0:	str	r3, [r4, #8]
   10ec4:	ldr	r0, [r4, #20]
   10ec8:	add	r2, pc, r2
   10ecc:	ldr	r3, [r2, #8]
   10ed0:	cmp	r0, #0
   10ed4:	sub	r3, r3, #1
   10ed8:	str	r3, [r2, #8]
   10edc:	beq	10ee4 <rb_event_run+0xe0>
   10ee0:	bl	46d4 <free@plt>
   10ee4:	mov	r0, r4
   10ee8:	bl	46d4 <free@plt>
   10eec:	cmp	r5, #0
   10ef0:	beq	10f48 <rb_event_run+0x144>
   10ef4:	mov	r3, r5
   10ef8:	ldr	r5, [r5, #8]
   10efc:	ldr	r4, [r3]
   10f00:	ldr	r3, [r4, #44]	; 0x2c
   10f04:	cmp	r3, #0
   10f08:	bne	10e90 <rb_event_run+0x8c>
   10f0c:	ldr	r9, [r4, #28]
   10f10:	bl	47d0 <rb_current_time@plt>
   10f14:	cmp	r9, r0
   10f18:	ble	10f64 <rb_event_run+0x160>
   10f1c:	ldr	r2, [r6]
   10f20:	ldr	r1, [r4, #28]
   10f24:	cmn	r2, #1
   10f28:	movne	r3, #0
   10f2c:	moveq	r3, #1
   10f30:	cmp	r1, r2
   10f34:	orrlt	r3, r3, #1
   10f38:	cmp	r3, #0
   10f3c:	strne	r1, [r6]
   10f40:	cmp	r5, #0
   10f44:	bne	10ef4 <rb_event_run+0xf0>
   10f48:	add	sp, sp, #20
   10f4c:	ldrd	r4, [sp]
   10f50:	ldrd	r6, [sp, #8]
   10f54:	ldrd	r8, [sp, #16]
   10f58:	ldrd	sl, [sp, #24]
   10f5c:	add	sp, sp, #32
   10f60:	pop	{pc}		; (ldr pc, [sp], #4)
   10f64:	mov	r2, #33	; 0x21
   10f68:	mov	r0, r8
   10f6c:	ldr	r1, [r4, #20]
   10f70:	bl	4680 <rb_strlcpy@plt>
   10f74:	ldr	r3, [r4, #12]
   10f78:	ldr	r0, [r4, #16]
   10f7c:	blx	r3
   10f80:	ldr	r3, [r4, #24]
   10f84:	cmp	r3, #0
   10f88:	bne	10ffc <rb_event_run+0x1f8>
   10f8c:	ldr	r3, [r4, #4]
   10f90:	ldr	r2, [r4, #8]
   10f94:	cmp	r2, #0
   10f98:	ldreq	r1, [sp, #4]
   10f9c:	strne	r3, [r2, #4]
   10fa0:	ldrne	r3, [r4, #4]
   10fa4:	streq	r3, [r1, #4]
   10fa8:	cmp	r3, #0
   10fac:	strne	r2, [r3, #8]
   10fb0:	beq	11044 <rb_event_run+0x240>
   10fb4:	ldr	r3, [r7, #8]
   10fb8:	mov	r2, #0
   10fbc:	ldr	r0, [r4, #20]
   10fc0:	str	r2, [r4, #4]
   10fc4:	str	r2, [r4, #8]
   10fc8:	sub	r3, r3, #1
   10fcc:	cmp	r0, r2
   10fd0:	str	r3, [r7, #8]
   10fd4:	bne	10ee0 <rb_event_run+0xdc>
   10fd8:	b	10ee4 <rb_event_run+0xe0>
   10fdc:	ldr	r3, [pc, #216]	; 110bc <rb_event_run+0x2b8>
   10fe0:	add	r3, pc, r3
   10fe4:	str	r2, [r3]
   10fe8:	b	10eb4 <rb_event_run+0xb0>
   10fec:	ldr	r1, [pc, #204]	; 110c0 <rb_event_run+0x2bc>
   10ff0:	add	r1, pc, r1
   10ff4:	str	r3, [r1, #4]
   10ff8:	b	10ea8 <rb_event_run+0xa4>
   10ffc:	bl	47d0 <rb_current_time@plt>
   11000:	ldr	r3, [r4, #24]
   11004:	mov	r1, r0
   11008:	cmp	r3, #0
   1100c:	blt	11054 <rb_event_run+0x250>
   11010:	ldr	r0, [pc, #172]	; 110c4 <rb_event_run+0x2c0>
   11014:	add	r3, r1, r3
   11018:	str	r3, [r4, #28]
   1101c:	add	r0, pc, r0
   11020:	ldr	r1, [r0]
   11024:	cmn	r1, #1
   11028:	movne	r2, #0
   1102c:	moveq	r2, #1
   11030:	cmp	r3, r1
   11034:	orrlt	r2, r2, #1
   11038:	cmp	r2, #0
   1103c:	strne	r3, [r0]
   11040:	b	10eec <rb_event_run+0xe8>
   11044:	ldr	r3, [pc, #124]	; 110c8 <rb_event_run+0x2c4>
   11048:	add	r3, pc, r3
   1104c:	str	r2, [r3]
   11050:	b	10fb4 <rb_event_run+0x1b0>
   11054:	lsl	r3, r3, #1
   11058:	str	r0, [sp, #12]
   1105c:	rsb	r3, r3, #0
   11060:	umull	r2, r3, fp, r3
   11064:	lsr	r3, r3, #1
   11068:	str	r3, [sp, #8]
   1106c:	bl	4b18 <rand@plt>
   11070:	smull	r3, lr, sl, r0
   11074:	mov	ip, #1000	; 0x3e8
   11078:	ldr	r3, [sp, #8]
   1107c:	asr	r2, r0, #31
   11080:	rsb	r2, r2, lr, asr #6
   11084:	mls	r2, ip, r2, r0
   11088:	mul	r2, r3, r2
   1108c:	smull	r1, r0, sl, r2
   11090:	ldr	r1, [sp, #12]
   11094:	asr	r2, r2, #31
   11098:	rsb	r2, r2, r0, asr #6
   1109c:	add	r3, r2, r3
   110a0:	b	11010 <rb_event_run+0x20c>
   110a4:	.word	0x0002dfe8
   110a8:	.word	0x0001b63c
   110ac:	.word	0x0002dfb0
   110b0:	.word	0x0001b5f4
   110b4:	.word	0x0002df94
   110b8:	.word	0x0002df54
   110bc:	.word	0x0002de3c
   110c0:	.word	0x0002de2c
   110c4:	.word	0x0001b45c
   110c8:	.word	0x0002ddd4

000110cc <rb_event_io_register_all>:
   110cc:	str	r4, [sp, #-8]!
   110d0:	str	lr, [sp, #4]
   110d4:	bl	dc48 <rb_io_supports_event>
   110d8:	cmp	r0, #0
   110dc:	beq	1110c <rb_event_io_register_all+0x40>
   110e0:	ldr	r3, [pc, #48]	; 11118 <rb_event_io_register_all+0x4c>
   110e4:	ldr	r4, [pc, r3]
   110e8:	cmp	r4, #0
   110ec:	beq	1110c <rb_event_io_register_all+0x40>
   110f0:	ldr	r3, [r4]
   110f4:	mov	r0, r3
   110f8:	ldr	r1, [r3, #32]
   110fc:	bl	db5c <rb_io_sched_event>
   11100:	ldr	r4, [r4, #8]
   11104:	cmp	r4, #0
   11108:	bne	110f0 <rb_event_io_register_all+0x24>
   1110c:	ldr	r4, [sp]
   11110:	add	sp, sp, #4
   11114:	pop	{pc}		; (ldr pc, [sp], #4)
   11118:	.word	0x0002dd38

0001111c <rb_event_init>:
   1111c:	ldr	r0, [pc, #20]	; 11138 <rb_event_init+0x1c>
   11120:	mov	r2, #33	; 0x21
   11124:	ldr	r1, [pc, #16]	; 1113c <rb_event_init+0x20>
   11128:	add	r0, pc, r0
   1112c:	add	r0, r0, #12
   11130:	add	r1, pc, r1
   11134:	b	4680 <rb_strlcpy@plt>
   11138:	.word	0x0002dcf4
   1113c:	.word	0x00009c10

00011140 <rb_dump_events>:
   11140:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11144:	ldr	r4, [pc, #220]	; 11228 <rb_dump_events+0xe8>
   11148:	strd	r6, [sp, #8]
   1114c:	ldr	r2, [pc, #216]	; 1122c <rb_dump_events+0xec>
   11150:	strd	r8, [sp, #16]
   11154:	mov	r8, r0
   11158:	mov	r9, r1
   1115c:	strd	sl, [sp, #24]
   11160:	mov	r1, #512	; 0x200
   11164:	str	lr, [sp, #32]
   11168:	sub	sp, sp, #524	; 0x20c
   1116c:	add	r4, pc, r4
   11170:	add	r7, sp, #8
   11174:	add	r3, r4, #12
   11178:	add	r2, pc, r2
   1117c:	mov	r0, r7
   11180:	bl	4b84 <snprintf@plt>
   11184:	mov	r1, r9
   11188:	mov	r0, r7
   1118c:	blx	r8
   11190:	ldr	r1, [pc, #152]	; 11230 <rb_dump_events+0xf0>
   11194:	mov	r2, #512	; 0x200
   11198:	mov	r0, r7
   1119c:	add	r1, pc, r1
   111a0:	bl	4680 <rb_strlcpy@plt>
   111a4:	mov	r1, r9
   111a8:	mov	r0, r7
   111ac:	blx	r8
   111b0:	ldr	r4, [r4]
   111b4:	cmp	r4, #0
   111b8:	beq	1120c <rb_dump_events+0xcc>
   111bc:	ldr	sl, [pc, #112]	; 11234 <rb_dump_events+0xf4>
   111c0:	add	sl, pc, sl
   111c4:	ldr	r6, [r4]
   111c8:	ldr	fp, [r6, #20]
   111cc:	ldr	r5, [r6, #28]
   111d0:	bl	47d0 <rb_current_time@plt>
   111d4:	ldr	ip, [r6, #24]
   111d8:	mov	r2, sl
   111dc:	mov	r1, #512	; 0x200
   111e0:	mov	r3, fp
   111e4:	sub	r5, r5, r0
   111e8:	mov	r0, r7
   111ec:	stm	sp, {r5, ip}
   111f0:	bl	4b84 <snprintf@plt>
   111f4:	mov	r1, r9
   111f8:	mov	r0, r7
   111fc:	blx	r8
   11200:	ldr	r4, [r4, #8]
   11204:	cmp	r4, #0
   11208:	bne	111c4 <rb_dump_events+0x84>
   1120c:	add	sp, sp, #524	; 0x20c
   11210:	ldrd	r4, [sp]
   11214:	ldrd	r6, [sp, #8]
   11218:	ldrd	r8, [sp, #16]
   1121c:	ldrd	sl, [sp, #24]
   11220:	add	sp, sp, #32
   11224:	pop	{pc}		; (ldr pc, [sp], #4)
   11228:	.word	0x0002dcb0
   1122c:	.word	0x00009bd0
   11230:	.word	0x00009bc4
   11234:	.word	0x00009bcc

00011238 <rb_set_back_events>:
   11238:	ldr	r3, [pc, #76]	; 1128c <rb_set_back_events+0x54>
   1123c:	add	r3, pc, r3
   11240:	ldr	r3, [r3]
   11244:	cmp	r3, #0
   11248:	bxeq	lr
   1124c:	push	{lr}		; (str lr, [sp, #-4]!)
   11250:	mov	lr, #0
   11254:	ldr	r2, [r3]
   11258:	ldr	r3, [r3, #8]
   1125c:	ldr	r1, [r2, #28]
   11260:	cmp	r0, r1
   11264:	sub	ip, r1, r0
   11268:	bge	1127c <rb_set_back_events+0x44>
   1126c:	cmp	r3, #0
   11270:	str	ip, [r2, #28]
   11274:	bne	11254 <rb_set_back_events+0x1c>
   11278:	pop	{pc}		; (ldr pc, [sp], #4)
   1127c:	cmp	r3, #0
   11280:	str	lr, [r2, #28]
   11284:	bne	11254 <rb_set_back_events+0x1c>
   11288:	pop	{pc}		; (ldr pc, [sp], #4)
   1128c:	.word	0x0002dbe0

00011290 <rb_event_update>:
   11290:	strd	r4, [sp, #-16]!
   11294:	subs	r5, r0, #0
   11298:	str	r6, [sp, #8]
   1129c:	str	lr, [sp, #12]
   112a0:	beq	112c8 <rb_event_update+0x38>
   112a4:	cmp	r1, #0
   112a8:	mov	r4, r1
   112ac:	str	r1, [r5, #24]
   112b0:	blt	112f4 <rb_event_update+0x64>
   112b4:	bl	47d0 <rb_current_time@plt>
   112b8:	ldr	r3, [r5, #28]
   112bc:	add	r0, r0, r4
   112c0:	cmp	r0, r3
   112c4:	blt	112d8 <rb_event_update+0x48>
   112c8:	ldrd	r4, [sp]
   112cc:	ldr	r6, [sp, #8]
   112d0:	add	sp, sp, #12
   112d4:	pop	{pc}		; (ldr pc, [sp], #4)
   112d8:	bl	47d0 <rb_current_time@plt>
   112dc:	add	r0, r0, r4
   112e0:	ldr	r6, [sp, #8]
   112e4:	str	r0, [r5, #28]
   112e8:	ldrd	r4, [sp]
   112ec:	add	sp, sp, #12
   112f0:	pop	{pc}		; (ldr pc, [sp], #4)
   112f4:	lsl	r4, r1, #1
   112f8:	movw	r1, #43691	; 0xaaab
   112fc:	movt	r1, #43690	; 0xaaaa
   11300:	rsb	r4, r4, #0
   11304:	umull	r3, r4, r1, r4
   11308:	bl	4b18 <rand@plt>
   1130c:	movw	r2, #19923	; 0x4dd3
   11310:	movt	r2, #4194	; 0x1062
   11314:	asr	r3, r0, #31
   11318:	mov	r1, #1000	; 0x3e8
   1131c:	lsr	r6, r4, #1
   11320:	smull	lr, ip, r2, r0
   11324:	rsb	r3, r3, ip, asr #6
   11328:	mls	r0, r1, r3, r0
   1132c:	mul	r0, r6, r0
   11330:	smull	r3, r2, r2, r0
   11334:	asr	r4, r0, #31
   11338:	rsb	r4, r4, r2, asr #6
   1133c:	add	r4, r4, r6
   11340:	b	112b4 <rb_event_update+0x24>

00011344 <rb_event_next>:
   11344:	ldr	r3, [pc, #4]	; 11350 <rb_event_next+0xc>
   11348:	ldr	r0, [pc, r3]
   1134c:	bx	lr
   11350:	.word	0x0001b130

00011354 <rb_ctime>:
   11354:	strd	r4, [sp, #-12]!
   11358:	mov	r4, r1
   1135c:	mov	r5, r2
   11360:	str	lr, [sp, #8]
   11364:	sub	sp, sp, #84	; 0x54
   11368:	add	r1, sp, #36	; 0x24
   1136c:	str	r0, [sp, #28]
   11370:	add	r0, sp, #28
   11374:	bl	49c8 <gmtime_r@plt>
   11378:	cmp	r4, #0
   1137c:	mov	ip, r0
   11380:	beq	11404 <rb_ctime+0xb0>
   11384:	cmp	ip, #0
   11388:	beq	11418 <rb_ctime+0xc4>
   1138c:	ldr	r3, [ip, #20]
   11390:	mov	r1, r5
   11394:	mov	r0, r4
   11398:	ldr	lr, [pc, #144]	; 11430 <rb_ctime+0xdc>
   1139c:	ldr	r5, [ip, #24]
   113a0:	add	r3, r3, #1888	; 0x760
   113a4:	add	r3, r3, #12
   113a8:	add	lr, pc, lr
   113ac:	str	r3, [sp, #20]
   113b0:	ldr	r2, [ip]
   113b4:	ldr	r3, [lr, r5, lsl #2]
   113b8:	str	r2, [sp, #16]
   113bc:	ldr	r5, [ip, #4]
   113c0:	ldr	r2, [pc, #108]	; 11434 <rb_ctime+0xe0>
   113c4:	str	r5, [sp, #12]
   113c8:	ldr	r5, [ip, #8]
   113cc:	add	r2, pc, r2
   113d0:	str	r5, [sp, #8]
   113d4:	ldr	r5, [ip, #12]
   113d8:	str	r5, [sp, #4]
   113dc:	ldr	ip, [ip, #16]
   113e0:	add	lr, lr, ip, lsl #2
   113e4:	ldr	ip, [lr, #28]
   113e8:	str	ip, [sp]
   113ec:	bl	4b84 <snprintf@plt>
   113f0:	mov	r0, r4
   113f4:	add	sp, sp, #84	; 0x54
   113f8:	ldrd	r4, [sp]
   113fc:	add	sp, sp, #8
   11400:	pop	{pc}		; (ldr pc, [sp], #4)
   11404:	ldr	r4, [pc, #44]	; 11438 <rb_ctime+0xe4>
   11408:	cmp	ip, #0
   1140c:	mov	r5, #128	; 0x80
   11410:	add	r4, pc, r4
   11414:	bne	1138c <rb_ctime+0x38>
   11418:	ldr	r1, [pc, #28]	; 1143c <rb_ctime+0xe8>
   1141c:	mov	r2, r5
   11420:	mov	r0, r4
   11424:	add	r1, pc, r1
   11428:	bl	4680 <rb_strlcpy@plt>
   1142c:	b	113f0 <rb_ctime+0x9c>
   11430:	.word	0x0001aab0
   11434:	.word	0x00009c28
   11438:	.word	0x0002da3c
   1143c:	.word	0x00009f10

00011440 <rb_date>:
   11440:	strd	r4, [sp, #-12]!
   11444:	mov	r5, r1
   11448:	mov	r4, r2
   1144c:	str	lr, [sp, #8]
   11450:	sub	sp, sp, #84	; 0x54
   11454:	add	r1, sp, #36	; 0x24
   11458:	str	r0, [sp, #28]
   1145c:	add	r0, sp, #28
   11460:	bl	49c8 <gmtime_r@plt>
   11464:	subs	ip, r0, #0
   11468:	beq	114e8 <rb_date+0xa8>
   1146c:	ldr	r2, [ip]
   11470:	mov	r1, r4
   11474:	mov	r0, r5
   11478:	ldr	r3, [ip, #24]
   1147c:	ldr	lr, [pc, #124]	; 11500 <rb_date+0xc0>
   11480:	str	r2, [sp, #20]
   11484:	ldr	r2, [ip, #4]
   11488:	add	lr, pc, lr
   1148c:	add	r3, lr, r3, lsl #2
   11490:	str	r2, [sp, #16]
   11494:	ldr	r2, [ip, #8]
   11498:	ldr	r3, [r3, #76]	; 0x4c
   1149c:	str	r2, [sp, #12]
   114a0:	ldr	r4, [ip, #20]
   114a4:	ldr	r2, [pc, #88]	; 11504 <rb_date+0xc4>
   114a8:	add	r4, r4, #1888	; 0x760
   114ac:	add	r4, r4, #12
   114b0:	add	r2, pc, r2
   114b4:	str	r4, [sp, #8]
   114b8:	ldr	r4, [ip, #12]
   114bc:	str	r4, [sp, #4]
   114c0:	ldr	ip, [ip, #16]
   114c4:	add	lr, lr, ip, lsl #2
   114c8:	ldr	ip, [lr, #104]	; 0x68
   114cc:	str	ip, [sp]
   114d0:	bl	4b84 <snprintf@plt>
   114d4:	mov	r0, r5
   114d8:	add	sp, sp, #84	; 0x54
   114dc:	ldrd	r4, [sp]
   114e0:	add	sp, sp, #8
   114e4:	pop	{pc}		; (ldr pc, [sp], #4)
   114e8:	ldr	r1, [pc, #24]	; 11508 <rb_date+0xc8>
   114ec:	mov	r2, r4
   114f0:	mov	r0, r5
   114f4:	add	r1, pc, r1
   114f8:	bl	4680 <rb_strlcpy@plt>
   114fc:	b	114d4 <rb_date+0x94>
   11500:	.word	0x0001a9d0
   11504:	.word	0x00009b60
   11508:	.word	0x00009e40

0001150c <rb_current_time>:
   1150c:	ldr	r3, [pc, #8]	; 1151c <rb_current_time+0x10>
   11510:	add	r3, pc, r3
   11514:	ldr	r0, [r3, #128]	; 0x80
   11518:	bx	lr
   1151c:	.word	0x0002d93c

00011520 <rb_current_time_tv>:
   11520:	ldr	r0, [pc, #8]	; 11530 <rb_current_time_tv+0x10>
   11524:	add	r0, pc, r0
   11528:	add	r0, r0, #128	; 0x80
   1152c:	bx	lr
   11530:	.word	0x0002d928

00011534 <rb_lib_log>:
   11534:	push	{r0, r1, r2, r3}
   11538:	strd	r4, [sp, #-12]!
   1153c:	ldr	r4, [pc, #88]	; 1159c <rb_lib_log+0x68>
   11540:	add	r4, pc, r4
   11544:	ldr	r3, [r4, #136]	; 0x88
   11548:	str	lr, [sp, #8]
   1154c:	sub	sp, sp, #12
   11550:	cmp	r3, #0
   11554:	beq	11584 <rb_lib_log+0x50>
   11558:	add	ip, sp, #28
   1155c:	add	r5, r4, #140	; 0x8c
   11560:	ldr	r2, [sp, #24]
   11564:	mov	r3, ip
   11568:	mov	r0, r5
   1156c:	mov	r1, #512	; 0x200
   11570:	str	ip, [sp, #4]
   11574:	bl	4530 <vsnprintf@plt>
   11578:	mov	r0, r5
   1157c:	ldr	r3, [r4, #136]	; 0x88
   11580:	blx	r3
   11584:	add	sp, sp, #12
   11588:	ldrd	r4, [sp]
   1158c:	ldr	lr, [sp, #8]
   11590:	add	sp, sp, #12
   11594:	add	sp, sp, #16
   11598:	bx	lr
   1159c:	.word	0x0002d90c

000115a0 <rb_lib_die>:
   115a0:	push	{r0, r1, r2, r3}
   115a4:	strd	r4, [sp, #-12]!
   115a8:	ldr	r4, [pc, #92]	; 1160c <rb_lib_die+0x6c>
   115ac:	add	r4, pc, r4
   115b0:	ldr	r3, [r4, #652]	; 0x28c
   115b4:	str	lr, [sp, #8]
   115b8:	sub	sp, sp, #12
   115bc:	cmp	r3, #0
   115c0:	beq	11608 <rb_lib_die+0x68>
   115c4:	add	ip, sp, #28
   115c8:	add	r5, r4, #140	; 0x8c
   115cc:	ldr	r2, [sp, #24]
   115d0:	mov	r3, ip
   115d4:	mov	r1, #512	; 0x200
   115d8:	mov	r0, r5
   115dc:	str	ip, [sp, #4]
   115e0:	bl	4530 <vsnprintf@plt>
   115e4:	ldr	r3, [r4, #652]	; 0x28c
   115e8:	mov	r0, r5
   115ec:	blx	r3
   115f0:	add	sp, sp, #12
   115f4:	ldrd	r4, [sp]
   115f8:	ldr	lr, [sp, #8]
   115fc:	add	sp, sp, #12
   11600:	add	sp, sp, #16
   11604:	bx	lr
   11608:	bl	4398 <abort@plt>
   1160c:	.word	0x0002d8a0

00011610 <rb_lib_restart>:
   11610:	ldr	r4, [pc, #72]	; 11660 <rb_lib_restart+0x50>
   11614:	push	{r0, r1, r2, r3}
   11618:	push	{lr}		; (str lr, [sp, #-4]!)
   1161c:	sub	sp, sp, #12
   11620:	add	r4, pc, r4
   11624:	ldr	r3, [r4, #656]	; 0x290
   11628:	cmp	r3, #0
   1162c:	beq	1165c <rb_lib_restart+0x4c>
   11630:	add	ip, sp, #20
   11634:	add	r5, r4, #140	; 0x8c
   11638:	ldr	r2, [sp, #16]
   1163c:	mov	r3, ip
   11640:	mov	r0, r5
   11644:	mov	r1, #512	; 0x200
   11648:	str	ip, [sp, #4]
   1164c:	bl	4530 <vsnprintf@plt>
   11650:	mov	r0, r5
   11654:	ldr	r3, [r4, #656]	; 0x290
   11658:	blx	r3
   1165c:	bl	4398 <abort@plt>
   11660:	.word	0x0002d82c

00011664 <rb_set_time>:
   11664:	push	{lr}		; (str lr, [sp, #-4]!)
   11668:	sub	sp, sp, #12
   1166c:	mov	r1, #0
   11670:	mov	r0, sp
   11674:	bl	4590 <rb_gettimeofday@plt>
   11678:	cmn	r0, #1
   1167c:	beq	116bc <rb_set_time+0x58>
   11680:	ldr	r3, [pc, #92]	; 116e4 <rb_set_time+0x80>
   11684:	ldr	r2, [sp]
   11688:	add	r3, pc, r3
   1168c:	ldr	r0, [r3, #128]	; 0x80
   11690:	cmp	r2, r0
   11694:	blt	116b0 <rb_set_time+0x4c>
   11698:	ldr	r3, [pc, #72]	; 116e8 <rb_set_time+0x84>
   1169c:	ldrd	r0, [sp]
   116a0:	add	r3, pc, r3
   116a4:	strd	r0, [r3, #128]	; 0x80
   116a8:	add	sp, sp, #12
   116ac:	pop	{pc}		; (ldr pc, [sp], #4)
   116b0:	sub	r0, r0, r2
   116b4:	bl	11238 <rb_set_back_events>
   116b8:	b	11698 <rb_set_time+0x34>
   116bc:	bl	4cbc <__errno_location@plt>
   116c0:	ldr	r0, [r0]
   116c4:	bl	4374 <strerror@plt>
   116c8:	mov	r1, r0
   116cc:	ldr	r0, [pc, #24]	; 116ec <rb_set_time+0x88>
   116d0:	add	r0, pc, r0
   116d4:	bl	48f0 <rb_lib_log@plt>
   116d8:	ldr	r0, [pc, #16]	; 116f0 <rb_set_time+0x8c>
   116dc:	add	r0, pc, r0
   116e0:	bl	4a34 <rb_lib_restart@plt>
   116e4:	.word	0x0002d7c4
   116e8:	.word	0x0002d7ac
   116ec:	.word	0x00009968
   116f0:	.word	0x00009970

000116f4 <rb_lib_version>:
   116f4:	strd	r4, [sp, #-16]!
   116f8:	mov	r1, #512	; 0x200
   116fc:	str	r6, [sp, #8]
   11700:	str	lr, [sp, #12]
   11704:	sub	sp, sp, #520	; 0x208
   11708:	add	r5, sp, #8
   1170c:	ldr	r6, [pc, #80]	; 11764 <rb_lib_version+0x70>
   11710:	mov	r0, r5
   11714:	bl	1053c <rb_get_ssl_info>
   11718:	ldr	r3, [pc, #72]	; 11768 <rb_lib_version+0x74>
   1171c:	mov	r1, #640	; 0x280
   11720:	add	r6, pc, r6
   11724:	ldr	r4, [pc, #64]	; 1176c <rb_lib_version+0x78>
   11728:	ldr	r2, [pc, #64]	; 11770 <rb_lib_version+0x7c>
   1172c:	ldr	r3, [r6, r3]
   11730:	add	r4, pc, r4
   11734:	str	r5, [sp]
   11738:	add	r4, r4, #660	; 0x294
   1173c:	add	r2, pc, r2
   11740:	mov	r0, r4
   11744:	ldr	r3, [r3]
   11748:	bl	4b84 <snprintf@plt>
   1174c:	mov	r0, r4
   11750:	add	sp, sp, #520	; 0x208
   11754:	ldrd	r4, [sp]
   11758:	ldr	r6, [sp, #8]
   1175c:	add	sp, sp, #12
   11760:	pop	{pc}		; (ldr pc, [sp], #4)
   11764:	.word	0x0001a8d8
   11768:	.word	0x000003a8
   1176c:	.word	0x0002d71c
   11770:	.word	0x00009920

00011774 <rb_lib_init>:
   11774:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11778:	mov	r5, r3
   1177c:	strd	r6, [sp, #8]
   11780:	strd	r8, [sp, #16]
   11784:	mov	r8, r1
   11788:	mov	r9, r2
   1178c:	str	sl, [sp, #24]
   11790:	mov	sl, r0
   11794:	str	lr, [sp, #28]
   11798:	ldr	r6, [sp, #32]
   1179c:	ldr	r4, [sp, #36]	; 0x24
   117a0:	ldr	r7, [sp, #40]	; 0x28
   117a4:	bl	4968 <rb_set_time@plt>
   117a8:	ldr	ip, [pc, #112]	; 11820 <rb_lib_init+0xac>
   117ac:	add	ip, pc, ip
   117b0:	str	sl, [ip, #136]	; 0x88
   117b4:	str	r9, [ip, #652]	; 0x28c
   117b8:	str	r8, [ip, #656]	; 0x290
   117bc:	bl	45d8 <rb_event_init@plt>
   117c0:	bl	49b0 <rb_init_bh@plt>
   117c4:	mov	r2, r7
   117c8:	mov	r1, r6
   117cc:	mov	r0, r5
   117d0:	bl	4ad0 <rb_fdlist_init@plt>
   117d4:	bl	435c <rb_init_netio@plt>
   117d8:	mov	r0, r4
   117dc:	bl	48b4 <rb_init_rb_dlink_nodes@plt>
   117e0:	bl	dc48 <rb_io_supports_event>
   117e4:	cmp	r0, #0
   117e8:	bne	11804 <rb_lib_init+0x90>
   117ec:	ldrd	r4, [sp]
   117f0:	ldrd	r6, [sp, #8]
   117f4:	ldrd	r8, [sp, #16]
   117f8:	ldr	sl, [sp, #24]
   117fc:	add	sp, sp, #28
   11800:	pop	{pc}		; (ldr pc, [sp], #4)
   11804:	ldrd	r4, [sp]
   11808:	ldrd	r6, [sp, #8]
   1180c:	ldrd	r8, [sp, #16]
   11810:	ldr	sl, [sp, #24]
   11814:	ldr	lr, [sp, #28]
   11818:	add	sp, sp, #32
   1181c:	b	dc68 <rb_io_init_event>
   11820:	.word	0x0002d6a0

00011824 <rb_lib_loop>:
   11824:	str	r4, [sp, #-8]!
   11828:	mov	r4, r0
   1182c:	str	lr, [sp, #4]
   11830:	bl	4968 <rb_set_time@plt>
   11834:	bl	dc48 <rb_io_supports_event>
   11838:	cmp	r0, #0
   1183c:	bne	11868 <rb_lib_loop+0x44>
   11840:	cmp	r4, #0
   11844:	moveq	r5, #1000	; 0x3e8
   11848:	beq	11898 <rb_lib_loop+0x74>
   1184c:	mov	r0, r4
   11850:	bl	4518 <rb_select@plt>
   11854:	bl	4998 <rb_event_run@plt>
   11858:	mov	r0, r4
   1185c:	bl	4518 <rb_select@plt>
   11860:	bl	4998 <rb_event_run@plt>
   11864:	b	1184c <rb_lib_loop+0x28>
   11868:	mvn	r0, #0
   1186c:	bl	4518 <rb_select@plt>
   11870:	mvn	r0, #0
   11874:	bl	4518 <rb_select@plt>
   11878:	b	11868 <rb_lib_loop+0x44>
   1187c:	bl	47d0 <rb_current_time@plt>
   11880:	sub	r4, r4, r0
   11884:	mov	r0, #1000	; 0x3e8
   11888:	cmp	r4, #0
   1188c:	mulgt	r0, r5, r4
   11890:	bl	4518 <rb_select@plt>
   11894:	bl	4998 <rb_event_run@plt>
   11898:	bl	4c08 <rb_event_next@plt>
   1189c:	subs	r4, r0, #0
   118a0:	mvn	r0, #0
   118a4:	ble	11890 <rb_lib_loop+0x6c>
   118a8:	b	1187c <rb_lib_loop+0x58>

000118ac <rb_strtok_r>:
   118ac:	b	4a28 <strtok_r@plt>

000118b0 <rb_base64_encode>:
   118b0:	cmn	r1, #2
   118b4:	blt	119f8 <rb_base64_encode+0x148>
   118b8:	movw	r3, #43691	; 0xaaab
   118bc:	movt	r3, #43690	; 0xaaaa
   118c0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   118c4:	mov	r4, r1
   118c8:	add	r1, r1, #2
   118cc:	strd	r6, [sp, #8]
   118d0:	mov	r5, r0
   118d4:	mov	r0, #1
   118d8:	strd	r8, [sp, #16]
   118dc:	umull	r3, r1, r3, r1
   118e0:	str	sl, [sp, #24]
   118e4:	str	lr, [sp, #28]
   118e8:	lsr	r1, r1, r0
   118ec:	add	r1, r1, r1, lsl #2
   118f0:	bl	45c0 <calloc@plt>
   118f4:	cmp	r0, #0
   118f8:	beq	11a1c <rb_base64_encode+0x16c>
   118fc:	cmp	r4, #2
   11900:	movle	r7, r0
   11904:	ble	1197c <rb_base64_encode+0xcc>
   11908:	ldr	lr, [pc, #272]	; 11a20 <rb_base64_encode+0x170>
   1190c:	add	r3, r5, #3
   11910:	mov	r7, r0
   11914:	add	lr, pc, lr
   11918:	ldrb	r1, [r3, #-3]
   1191c:	mov	r2, #0
   11920:	sub	r4, r4, #3
   11924:	cmp	r4, #2
   11928:	mov	r5, r3
   1192c:	ldrb	r9, [r3, #-2]
   11930:	add	r3, r3, #3
   11934:	ldrb	r6, [r3, #-4]
   11938:	lsl	ip, r1, #4
   1193c:	ldrb	r8, [lr, r1, lsr #2]
   11940:	and	ip, ip, #48	; 0x30
   11944:	lsl	r1, r9, #2
   11948:	add	ip, lr, ip
   1194c:	ldrb	ip, [ip, r9, lsr #4]
   11950:	and	r1, r1, #60	; 0x3c
   11954:	and	r9, r6, #63	; 0x3f
   11958:	add	r1, lr, r1
   1195c:	ldrb	r6, [r1, r6, lsr #6]
   11960:	bfi	r2, r8, #0, #8
   11964:	ldrb	r1, [lr, r9]
   11968:	bfi	r2, ip, #8, #8
   1196c:	bfi	r2, r6, #16, #8
   11970:	bfi	r2, r1, #24, #8
   11974:	str	r2, [r7], #4
   11978:	bgt	11918 <rb_base64_encode+0x68>
   1197c:	cmp	r4, #0
   11980:	beq	119d8 <rb_base64_encode+0x128>
   11984:	ldr	r1, [pc, #152]	; 11a24 <rb_base64_encode+0x174>
   11988:	mov	r2, r7
   1198c:	cmp	r4, #2
   11990:	ldrb	ip, [r5]
   11994:	add	r1, pc, r1
   11998:	lsl	r3, ip, #4
   1199c:	ldrb	ip, [r1, ip, lsr #2]
   119a0:	and	r3, r3, #48	; 0x30
   119a4:	strb	ip, [r2], #4
   119a8:	bne	11a00 <rb_base64_encode+0x150>
   119ac:	ldrb	lr, [r5, #1]
   119b0:	mov	ip, #61	; 0x3d
   119b4:	add	r3, r1, r3
   119b8:	strb	ip, [r7, #3]
   119bc:	lsl	ip, lr, #2
   119c0:	ldrb	lr, [r3, lr, lsr #4]
   119c4:	and	r3, ip, #60	; 0x3c
   119c8:	ldrb	r3, [r1, r3]
   119cc:	strb	lr, [r7, #1]
   119d0:	strb	r3, [r7, #2]
   119d4:	mov	r7, r2
   119d8:	mov	r3, #0
   119dc:	strb	r3, [r7]
   119e0:	ldrd	r4, [sp]
   119e4:	ldrd	r6, [sp, #8]
   119e8:	ldrd	r8, [sp, #16]
   119ec:	ldr	sl, [sp, #24]
   119f0:	add	sp, sp, #28
   119f4:	pop	{pc}		; (ldr pc, [sp], #4)
   119f8:	mov	r0, #0
   119fc:	bx	lr
   11a00:	ldrb	r1, [r1, r3]
   11a04:	mov	r3, #61	; 0x3d
   11a08:	strb	r1, [r7, #1]
   11a0c:	strb	r3, [r7, #2]
   11a10:	strb	r3, [r7, #3]
   11a14:	mov	r7, r2
   11a18:	b	119d8 <rb_base64_encode+0x128>
   11a1c:	bl	495c <rb_outofmemory@plt>
   11a20:	.word	0x0000949c
   11a24:	.word	0x0000941c

00011a28 <rb_base64_decode>:
   11a28:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11a2c:	mov	r4, r1
   11a30:	mov	r5, r0
   11a34:	add	r1, r1, #1
   11a38:	mov	r0, #1
   11a3c:	strd	r6, [sp, #8]
   11a40:	mov	r6, r2
   11a44:	strd	r8, [sp, #16]
   11a48:	str	sl, [sp, #24]
   11a4c:	str	lr, [sp, #28]
   11a50:	bl	45c0 <calloc@plt>
   11a54:	cmp	r0, #0
   11a58:	beq	11b90 <rb_base64_decode+0x168>
   11a5c:	ldr	r7, [pc, #312]	; 11b9c <rb_base64_decode+0x174>
   11a60:	mov	lr, #0
   11a64:	mov	ip, r5
   11a68:	mov	r2, lr
   11a6c:	add	r7, pc, r7
   11a70:	ldrb	r1, [ip], #1
   11a74:	cmp	r1, #0
   11a78:	beq	11ae0 <rb_base64_decode+0xb8>
   11a7c:	rsb	r3, ip, #1
   11a80:	add	r3, r3, r4
   11a84:	add	r3, r5, r3
   11a88:	cmp	r3, #0
   11a8c:	ble	11b50 <rb_base64_decode+0x128>
   11a90:	cmp	r1, #61	; 0x3d
   11a94:	beq	11b58 <rb_base64_decode+0x130>
   11a98:	add	r1, r7, r1, lsl #1
   11a9c:	ldrsh	r3, [r1, #68]	; 0x44
   11aa0:	cmp	r3, #0
   11aa4:	blt	11a70 <rb_base64_decode+0x48>
   11aa8:	and	r1, r2, #3
   11aac:	add	r8, r0, lr
   11ab0:	cmp	r1, #2
   11ab4:	beq	11b34 <rb_base64_decode+0x10c>
   11ab8:	cmp	r1, #3
   11abc:	beq	11b20 <rb_base64_decode+0xf8>
   11ac0:	cmp	r1, #1
   11ac4:	beq	11b04 <rb_base64_decode+0xdc>
   11ac8:	lsl	r3, r3, #2
   11acc:	strb	r3, [r8]
   11ad0:	ldrb	r1, [ip], #1
   11ad4:	add	r2, r2, #1
   11ad8:	cmp	r1, #0
   11adc:	bne	11a7c <rb_base64_decode+0x54>
   11ae0:	mov	r3, #0
   11ae4:	str	lr, [r6]
   11ae8:	strb	r3, [r0, lr]
   11aec:	ldrd	r4, [sp]
   11af0:	ldrd	r6, [sp, #8]
   11af4:	ldrd	r8, [sp, #16]
   11af8:	ldr	sl, [sp, #24]
   11afc:	add	sp, sp, #28
   11b00:	pop	{pc}		; (ldr pc, [sp], #4)
   11b04:	ldrb	r1, [r8]
   11b08:	lsl	r9, r3, #4
   11b0c:	add	lr, lr, #1
   11b10:	orr	r3, r1, r3, asr #4
   11b14:	strb	r3, [r8]
   11b18:	strb	r9, [r0, lr]
   11b1c:	b	11ad0 <rb_base64_decode+0xa8>
   11b20:	ldrb	r1, [r8]
   11b24:	add	lr, lr, #1
   11b28:	orr	r3, r1, r3
   11b2c:	strb	r3, [r8]
   11b30:	b	11ad0 <rb_base64_decode+0xa8>
   11b34:	ldrb	r1, [r8]
   11b38:	lsl	r9, r3, #6
   11b3c:	add	lr, lr, #1
   11b40:	orr	r3, r1, r3, asr #2
   11b44:	strb	r3, [r8]
   11b48:	strb	r9, [r0, lr]
   11b4c:	b	11ad0 <rb_base64_decode+0xa8>
   11b50:	cmp	r1, #61	; 0x3d
   11b54:	bne	11ae0 <rb_base64_decode+0xb8>
   11b58:	and	r2, r2, #3
   11b5c:	cmp	r2, #2
   11b60:	beq	11b94 <rb_base64_decode+0x16c>
   11b64:	cmp	r2, #3
   11b68:	beq	11b80 <rb_base64_decode+0x158>
   11b6c:	cmp	r2, #1
   11b70:	bne	11ae0 <rb_base64_decode+0xb8>
   11b74:	bl	46d4 <free@plt>
   11b78:	mov	r0, #0
   11b7c:	b	11aec <rb_base64_decode+0xc4>
   11b80:	mov	r3, lr
   11b84:	mov	r2, #0
   11b88:	strb	r2, [r0, r3]
   11b8c:	b	11ae0 <rb_base64_decode+0xb8>
   11b90:	bl	495c <rb_outofmemory@plt>
   11b94:	add	r3, lr, #1
   11b98:	b	11b84 <rb_base64_decode+0x15c>
   11b9c:	.word	0x00009344

00011ba0 <rb_outofmemory>:
   11ba0:	ldr	r3, [pc, #56]	; 11be0 <rb_outofmemory+0x40>
   11ba4:	str	r4, [sp, #-8]!
   11ba8:	add	r3, pc, r3
   11bac:	ldr	r2, [r3]
   11bb0:	str	lr, [sp, #4]
   11bb4:	cmp	r2, #0
   11bb8:	bne	11bdc <rb_outofmemory+0x3c>
   11bbc:	ldr	r0, [pc, #32]	; 11be4 <rb_outofmemory+0x44>
   11bc0:	mov	r2, #1
   11bc4:	str	r2, [r3]
   11bc8:	add	r0, pc, r0
   11bcc:	bl	48f0 <rb_lib_log@plt>
   11bd0:	ldr	r0, [pc, #16]	; 11be8 <rb_outofmemory+0x48>
   11bd4:	add	r0, pc, r0
   11bd8:	bl	4a34 <rb_lib_restart@plt>
   11bdc:	bl	4398 <abort@plt>
   11be0:	.word	0x0002d7b8
   11be4:	.word	0x000095a4
   11be8:	.word	0x000095bc

00011bec <rb_linebuf_copy_line.isra.2>:
   11bec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11bf0:	mov	r5, #0
   11bf4:	strd	r6, [sp, #8]
   11bf8:	strd	r8, [sp, #16]
   11bfc:	str	sl, [sp, #24]
   11c00:	str	lr, [sp, #28]
   11c04:	ldrb	ip, [r1, #1025]	; 0x401
   11c08:	strb	r5, [r1, #1026]	; 0x402
   11c0c:	ldr	r7, [r1, #1028]	; 0x404
   11c10:	cmp	ip, #1
   11c14:	add	r6, r1, r7
   11c18:	beq	11d50 <rb_linebuf_copy_line.isra.2+0x164>
   11c1c:	cmp	r3, r5
   11c20:	beq	11e1c <rb_linebuf_copy_line.isra.2+0x230>
   11c24:	ldrb	r4, [r2]
   11c28:	cmp	r4, #10
   11c2c:	cmpne	r4, #13
   11c30:	beq	11e10 <rb_linebuf_copy_line.isra.2+0x224>
   11c34:	add	lr, r2, #1
   11c38:	add	r8, r2, r3
   11c3c:	cmp	lr, r8
   11c40:	sub	r5, r8, lr
   11c44:	mov	ip, lr
   11c48:	beq	11d6c <rb_linebuf_copy_line.isra.2+0x180>
   11c4c:	ldrb	r4, [lr], #1
   11c50:	cmp	r4, #13
   11c54:	cmpne	r4, #10
   11c58:	bne	11c3c <rb_linebuf_copy_line.isra.2+0x50>
   11c5c:	cmp	r4, #13
   11c60:	cmpne	r4, #10
   11c64:	addeq	lr, ip, r5
   11c68:	subeq	lr, lr, #1
   11c6c:	bne	11c8c <rb_linebuf_copy_line.isra.2+0xa0>
   11c70:	cmp	ip, lr
   11c74:	sub	r5, lr, ip
   11c78:	beq	11d6c <rb_linebuf_copy_line.isra.2+0x180>
   11c7c:	ldrb	r4, [ip, #1]!
   11c80:	cmp	r4, #13
   11c84:	cmpne	r4, #10
   11c88:	beq	11c70 <rb_linebuf_copy_line.isra.2+0x84>
   11c8c:	sub	r5, r3, r5
   11c90:	cmn	r5, #1
   11c94:	beq	11d50 <rb_linebuf_copy_line.isra.2+0x164>
   11c98:	movw	r9, #1022	; 0x3fe
   11c9c:	mov	r8, r1
   11ca0:	sub	r7, r9, r7
   11ca4:	mov	r4, r0
   11ca8:	cmp	r7, r5
   11cac:	mov	r1, r2
   11cb0:	blt	11d74 <rb_linebuf_copy_line.isra.2+0x188>
   11cb4:	mov	r2, r5
   11cb8:	mov	r0, r6
   11cbc:	bl	47e8 <memcpy@plt>
   11cc0:	mov	r2, #0
   11cc4:	add	r1, r6, r5
   11cc8:	strb	r2, [r6, r5]
   11ccc:	ldrb	r3, [r1, #-1]
   11cd0:	cmp	r3, #13
   11cd4:	cmpne	r3, #10
   11cd8:	movne	r0, #1
   11cdc:	moveq	r0, #0
   11ce0:	bne	11df0 <rb_linebuf_copy_line.isra.2+0x204>
   11ce4:	cmp	r5, r2
   11ce8:	beq	11d2c <rb_linebuf_copy_line.isra.2+0x140>
   11cec:	cmp	r3, #10
   11cf0:	cmpne	r3, #13
   11cf4:	movne	r3, r5
   11cf8:	bne	11d30 <rb_linebuf_copy_line.isra.2+0x144>
   11cfc:	sub	r2, r1, #1
   11d00:	sub	ip, r1, r5
   11d04:	sub	lr, r5, r1
   11d08:	b	11d1c <rb_linebuf_copy_line.isra.2+0x130>
   11d0c:	ldrb	r1, [r2, #-1]!
   11d10:	cmp	r1, #10
   11d14:	cmpne	r1, #13
   11d18:	bne	11d30 <rb_linebuf_copy_line.isra.2+0x144>
   11d1c:	mov	r3, r2
   11d20:	cmp	ip, r2
   11d24:	strb	r0, [r3], lr
   11d28:	bne	11d0c <rb_linebuf_copy_line.isra.2+0x120>
   11d2c:	mov	r3, #0
   11d30:	mov	r2, #1
   11d34:	strb	r2, [r8, #1025]	; 0x401
   11d38:	ldr	r2, [r4]
   11d3c:	add	r2, r2, r3
   11d40:	str	r2, [r4]
   11d44:	ldr	r2, [r8, #1028]	; 0x404
   11d48:	add	r3, r2, r3
   11d4c:	str	r3, [r8, #1028]	; 0x404
   11d50:	mov	r0, r5
   11d54:	ldrd	r4, [sp]
   11d58:	ldrd	r6, [sp, #8]
   11d5c:	ldrd	r8, [sp, #16]
   11d60:	ldr	sl, [sp, #24]
   11d64:	add	sp, sp, #28
   11d68:	pop	{pc}		; (ldr pc, [sp], #4)
   11d6c:	mov	r5, r3
   11d70:	b	11c90 <rb_linebuf_copy_line.isra.2+0xa4>
   11d74:	mov	r0, r6
   11d78:	mov	r2, r7
   11d7c:	bl	47e8 <memcpy@plt>
   11d80:	mov	r1, #0
   11d84:	cmp	r7, r1
   11d88:	strb	r1, [r8, #1022]	; 0x3fe
   11d8c:	beq	11dd0 <rb_linebuf_copy_line.isra.2+0x1e4>
   11d90:	ldrb	r3, [r8, #1021]	; 0x3fd
   11d94:	cmp	r3, #10
   11d98:	cmpne	r3, #13
   11d9c:	bne	11dd0 <rb_linebuf_copy_line.isra.2+0x1e4>
   11da0:	add	r9, r8, r9
   11da4:	add	r3, r8, #1020	; 0x3fc
   11da8:	sub	r7, r9, r7
   11dac:	add	r3, r3, #1
   11db0:	b	11dc4 <rb_linebuf_copy_line.isra.2+0x1d8>
   11db4:	ldrb	r2, [r3, #-1]!
   11db8:	cmp	r2, #10
   11dbc:	cmpne	r2, #13
   11dc0:	bne	11dd0 <rb_linebuf_copy_line.isra.2+0x1e4>
   11dc4:	cmp	r7, r3
   11dc8:	strb	r1, [r3]
   11dcc:	bne	11db4 <rb_linebuf_copy_line.isra.2+0x1c8>
   11dd0:	mov	r3, #1
   11dd4:	movw	r2, #1022	; 0x3fe
   11dd8:	strb	r3, [r8, #1025]	; 0x401
   11ddc:	str	r2, [r8, #1028]	; 0x404
   11de0:	ldr	r3, [r4]
   11de4:	add	r3, r3, r2
   11de8:	str	r3, [r4]
   11dec:	b	11d50 <rb_linebuf_copy_line.isra.2+0x164>
   11df0:	ldr	r3, [r4]
   11df4:	add	r3, r3, r5
   11df8:	str	r3, [r4]
   11dfc:	ldr	r3, [r8, #1028]	; 0x404
   11e00:	strb	r2, [r8, #1025]	; 0x401
   11e04:	add	r3, r3, r5
   11e08:	str	r3, [r8, #1028]	; 0x404
   11e0c:	b	11d50 <rb_linebuf_copy_line.isra.2+0x164>
   11e10:	mov	r5, r3
   11e14:	mov	ip, r2
   11e18:	b	11c5c <rb_linebuf_copy_line.isra.2+0x70>
   11e1c:	mov	r5, r3
   11e20:	b	11c98 <rb_linebuf_copy_line.isra.2+0xac>

00011e24 <rb_linebuf_copy_raw.isra.3>:
   11e24:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11e28:	mov	r5, r1
   11e2c:	mov	r1, #1
   11e30:	strd	r6, [sp, #8]
   11e34:	strd	r8, [sp, #16]
   11e38:	str	sl, [sp, #24]
   11e3c:	str	lr, [sp, #28]
   11e40:	ldrb	ip, [r5, #1025]	; 0x401
   11e44:	strb	r1, [r5, #1026]	; 0x402
   11e48:	ldr	r1, [r5, #1028]	; 0x404
   11e4c:	cmp	ip, #1
   11e50:	moveq	r8, #0
   11e54:	add	r7, r5, r1
   11e58:	beq	11f44 <rb_linebuf_copy_raw.isra.3+0x120>
   11e5c:	cmp	r3, #0
   11e60:	mov	r6, r0
   11e64:	mov	r4, r3
   11e68:	beq	11ee4 <rb_linebuf_copy_raw.isra.3+0xc0>
   11e6c:	ldrb	ip, [r2]
   11e70:	cmp	ip, #10
   11e74:	cmpne	ip, #13
   11e78:	beq	11fb4 <rb_linebuf_copy_raw.isra.3+0x190>
   11e7c:	add	lr, r2, #1
   11e80:	add	r0, r2, r3
   11e84:	cmp	lr, r0
   11e88:	sub	r8, r0, lr
   11e8c:	mov	r3, lr
   11e90:	beq	11edc <rb_linebuf_copy_raw.isra.3+0xb8>
   11e94:	ldrb	ip, [lr], #1
   11e98:	cmp	ip, #13
   11e9c:	cmpne	ip, #10
   11ea0:	bne	11e84 <rb_linebuf_copy_raw.isra.3+0x60>
   11ea4:	cmp	ip, #10
   11ea8:	cmpne	ip, #13
   11eac:	subne	r4, r4, r8
   11eb0:	bne	11edc <rb_linebuf_copy_raw.isra.3+0xb8>
   11eb4:	add	ip, r3, r8
   11eb8:	sub	ip, ip, #1
   11ebc:	cmp	ip, r3
   11ec0:	sub	lr, ip, r3
   11ec4:	beq	11edc <rb_linebuf_copy_raw.isra.3+0xb8>
   11ec8:	ldrb	r0, [r3, #1]!
   11ecc:	cmp	r0, #13
   11ed0:	cmpne	r0, #10
   11ed4:	beq	11ebc <rb_linebuf_copy_raw.isra.3+0x98>
   11ed8:	sub	r4, r4, lr
   11edc:	cmn	r4, #1
   11ee0:	beq	11fc0 <rb_linebuf_copy_raw.isra.3+0x19c>
   11ee4:	movw	r9, #1022	; 0x3fe
   11ee8:	sub	r8, r9, r1
   11eec:	mov	r1, r2
   11ef0:	cmp	r8, r4
   11ef4:	blt	11f60 <rb_linebuf_copy_raw.isra.3+0x13c>
   11ef8:	mov	r2, r4
   11efc:	mov	r0, r7
   11f00:	bl	47e8 <memcpy@plt>
   11f04:	mov	r2, #0
   11f08:	add	r3, r7, r4
   11f0c:	strb	r2, [r7, r4]
   11f10:	ldrb	r3, [r3, #-1]
   11f14:	cmp	r3, #13
   11f18:	cmpne	r3, #10
   11f1c:	bne	11f90 <rb_linebuf_copy_raw.isra.3+0x16c>
   11f20:	mov	r3, #1
   11f24:	mov	r8, r4
   11f28:	strb	r3, [r5, #1025]	; 0x401
   11f2c:	ldr	r3, [r6]
   11f30:	add	r3, r3, r4
   11f34:	str	r3, [r6]
   11f38:	ldr	r3, [r5, #1028]	; 0x404
   11f3c:	add	r3, r3, r4
   11f40:	str	r3, [r5, #1028]	; 0x404
   11f44:	mov	r0, r8
   11f48:	ldrd	r4, [sp]
   11f4c:	ldrd	r6, [sp, #8]
   11f50:	ldrd	r8, [sp, #16]
   11f54:	ldr	sl, [sp, #24]
   11f58:	add	sp, sp, #28
   11f5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f60:	mov	r2, r8
   11f64:	mov	r0, r7
   11f68:	bl	47e8 <memcpy@plt>
   11f6c:	mov	r3, #1
   11f70:	mov	r2, #0
   11f74:	strb	r2, [r5, #1022]	; 0x3fe
   11f78:	strb	r3, [r5, #1025]	; 0x401
   11f7c:	str	r9, [r5, #1028]	; 0x404
   11f80:	ldr	r3, [r6]
   11f84:	add	r9, r3, r9
   11f88:	str	r9, [r6]
   11f8c:	b	11f44 <rb_linebuf_copy_raw.isra.3+0x120>
   11f90:	ldr	r3, [r6]
   11f94:	mov	r8, r4
   11f98:	add	r3, r3, r4
   11f9c:	str	r3, [r6]
   11fa0:	ldr	r3, [r5, #1028]	; 0x404
   11fa4:	strb	r2, [r5, #1025]	; 0x401
   11fa8:	add	r3, r3, r4
   11fac:	str	r3, [r5, #1028]	; 0x404
   11fb0:	b	11f44 <rb_linebuf_copy_raw.isra.3+0x120>
   11fb4:	mov	r8, r3
   11fb8:	mov	r3, r2
   11fbc:	b	11ea4 <rb_linebuf_copy_raw.isra.3+0x80>
   11fc0:	mov	r8, r4
   11fc4:	b	11f44 <rb_linebuf_copy_raw.isra.3+0x120>

00011fc8 <rb_linebuf_init>:
   11fc8:	ldr	r2, [pc, #44]	; 11ffc <rb_linebuf_init+0x34>
   11fcc:	mov	r1, r0
   11fd0:	movw	r0, #1036	; 0x40c
   11fd4:	str	r4, [sp, #-8]!
   11fd8:	str	lr, [sp, #4]
   11fdc:	add	r2, pc, r2
   11fe0:	bl	4a88 <rb_bh_create@plt>
   11fe4:	ldr	r3, [pc, #20]	; 12000 <rb_linebuf_init+0x38>
   11fe8:	ldr	r4, [sp]
   11fec:	add	sp, sp, #4
   11ff0:	add	r3, pc, r3
   11ff4:	str	r0, [r3]
   11ff8:	pop	{pc}		; (ldr pc, [sp], #4)
   11ffc:	.word	0x000091c4
   12000:	.word	0x0002d374

00012004 <rb_linebuf_newbuf>:
   12004:	mov	r3, #0
   12008:	str	r3, [r0]
   1200c:	str	r3, [r0, #4]
   12010:	str	r3, [r0, #8]
   12014:	str	r3, [r0, #12]
   12018:	str	r3, [r0, #16]
   1201c:	str	r3, [r0, #20]
   12020:	str	r3, [r0, #24]
   12024:	bx	lr

00012028 <rb_linebuf_donebuf>:
   12028:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1202c:	mov	r4, r0
   12030:	strd	r6, [sp, #8]
   12034:	mov	r6, #0
   12038:	ldr	r7, [pc, #196]	; 12104 <rb_linebuf_donebuf+0xdc>
   1203c:	str	r8, [sp, #16]
   12040:	str	lr, [sp, #20]
   12044:	add	r7, pc, r7
   12048:	ldr	r3, [r4]
   1204c:	cmp	r3, #0
   12050:	beq	120f0 <rb_linebuf_donebuf+0xc8>
   12054:	ldr	r5, [r3]
   12058:	mov	r0, r3
   1205c:	ldmib	r3, {r1, r2}
   12060:	cmp	r2, #0
   12064:	strne	r1, [r2, #4]
   12068:	streq	r1, [r4, #4]
   1206c:	ldr	r1, [r3, #4]
   12070:	cmp	r1, #0
   12074:	strne	r2, [r1, #8]
   12078:	streq	r2, [r4]
   1207c:	ldr	r2, [r4, #8]
   12080:	str	r6, [r3, #4]
   12084:	str	r6, [r3, #8]
   12088:	sub	r3, r2, #1
   1208c:	str	r3, [r4, #8]
   12090:	bl	4824 <rb_free_rb_dlink_node@plt>
   12094:	ldr	r2, [r4, #12]
   12098:	ldr	r0, [r4, #16]
   1209c:	ldr	r1, [r4, #24]
   120a0:	ldr	ip, [r5, #1028]	; 0x404
   120a4:	sub	r0, r0, #1
   120a8:	ldr	r3, [r5, #1032]	; 0x408
   120ac:	sub	r1, r1, #1
   120b0:	str	r0, [r4, #16]
   120b4:	sub	r2, r2, ip
   120b8:	sub	r3, r3, #1
   120bc:	str	r2, [r4, #12]
   120c0:	cmp	r3, #0
   120c4:	str	r1, [r4, #24]
   120c8:	str	r3, [r5, #1032]	; 0x408
   120cc:	bne	12048 <rb_linebuf_donebuf+0x20>
   120d0:	ldm	r7, {r0, r3}
   120d4:	mov	r1, r5
   120d8:	sub	r3, r3, #1
   120dc:	str	r3, [r7, #4]
   120e0:	bl	48a8 <rb_bh_free@plt>
   120e4:	ldr	r3, [r4]
   120e8:	cmp	r3, #0
   120ec:	bne	12054 <rb_linebuf_donebuf+0x2c>
   120f0:	ldrd	r4, [sp]
   120f4:	ldrd	r6, [sp, #8]
   120f8:	ldr	r8, [sp, #16]
   120fc:	add	sp, sp, #20
   12100:	pop	{pc}		; (ldr pc, [sp], #4)
   12104:	.word	0x0002d320

00012108 <rb_linebuf_parse>:
   12108:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1210c:	mov	r4, r0
   12110:	mov	r5, r2
   12114:	strd	r6, [sp, #8]
   12118:	mov	r6, r1
   1211c:	strd	r8, [sp, #16]
   12120:	mov	r9, r3
   12124:	ldr	r8, [r0, #4]
   12128:	strd	sl, [sp, #24]
   1212c:	str	lr, [sp, #32]
   12130:	sub	sp, sp, #4
   12134:	cmp	r8, #0
   12138:	beq	12178 <rb_linebuf_parse+0x70>
   1213c:	cmp	r9, #0
   12140:	mov	r3, r2
   12144:	add	r0, r0, #12
   12148:	mov	r2, r1
   1214c:	ldr	r1, [r8]
   12150:	beq	1227c <rb_linebuf_parse+0x174>
   12154:	bl	11e24 <rb_linebuf_copy_raw.isra.3>
   12158:	cmn	r0, #1
   1215c:	beq	12248 <rb_linebuf_parse+0x140>
   12160:	cmp	r0, r5
   12164:	moveq	r8, #1
   12168:	beq	1224c <rb_linebuf_parse+0x144>
   1216c:	sub	r5, r5, r0
   12170:	add	r6, r6, r0
   12174:	mov	r8, #1
   12178:	cmp	r5, #0
   1217c:	ble	1224c <rb_linebuf_parse+0x144>
   12180:	ldr	r7, [pc, #252]	; 12284 <rb_linebuf_parse+0x17c>
   12184:	add	sl, r4, #12
   12188:	add	r7, pc, r7
   1218c:	b	121b0 <rb_linebuf_parse+0xa8>
   12190:	bl	11bec <rb_linebuf_copy_line.isra.2>
   12194:	cmn	r0, #1
   12198:	beq	12248 <rb_linebuf_parse+0x140>
   1219c:	sub	r5, r5, r0
   121a0:	add	r6, r6, r0
   121a4:	cmp	r5, #0
   121a8:	add	r8, r8, #1
   121ac:	ble	1224c <rb_linebuf_parse+0x144>
   121b0:	ldr	r0, [r7]
   121b4:	bl	492c <rb_bh_alloc@plt>
   121b8:	subs	fp, r0, #0
   121bc:	beq	12224 <rb_linebuf_parse+0x11c>
   121c0:	ldr	r3, [r7, #4]
   121c4:	add	r3, r3, #1
   121c8:	str	r3, [r7, #4]
   121cc:	bl	4b54 <rb_make_rb_dlink_node@plt>
   121d0:	ldr	r3, [r4, #4]
   121d4:	mov	r2, #0
   121d8:	str	fp, [r0]
   121dc:	cmp	r3, r2
   121e0:	str	r3, [r0, #4]
   121e4:	str	r2, [r0, #8]
   121e8:	strne	r0, [r3, #8]
   121ec:	beq	1226c <rb_linebuf_parse+0x164>
   121f0:	str	r0, [r4, #4]
   121f4:	ldr	ip, [r4, #8]
   121f8:	ldr	r2, [r4, #16]
   121fc:	ldr	r3, [r4, #24]
   12200:	add	ip, ip, #1
   12204:	ldr	r0, [fp, #1032]	; 0x408
   12208:	add	r2, r2, #1
   1220c:	str	ip, [r4, #8]
   12210:	add	r3, r3, #1
   12214:	add	r0, r0, #1
   12218:	str	r0, [fp, #1032]	; 0x408
   1221c:	str	r2, [r4, #16]
   12220:	str	r3, [r4, #24]
   12224:	cmp	r9, #0
   12228:	mov	r1, fp
   1222c:	mov	r3, r5
   12230:	mov	r2, r6
   12234:	mov	r0, sl
   12238:	beq	12190 <rb_linebuf_parse+0x88>
   1223c:	bl	11e24 <rb_linebuf_copy_raw.isra.3>
   12240:	cmn	r0, #1
   12244:	bne	1219c <rb_linebuf_parse+0x94>
   12248:	mvn	r8, #0
   1224c:	mov	r0, r8
   12250:	add	sp, sp, #4
   12254:	ldrd	r4, [sp]
   12258:	ldrd	r6, [sp, #8]
   1225c:	ldrd	r8, [sp, #16]
   12260:	ldrd	sl, [sp, #24]
   12264:	add	sp, sp, #32
   12268:	pop	{pc}		; (ldr pc, [sp], #4)
   1226c:	ldr	r3, [r4]
   12270:	cmp	r3, #0
   12274:	streq	r0, [r4]
   12278:	b	121f0 <rb_linebuf_parse+0xe8>
   1227c:	bl	11bec <rb_linebuf_copy_line.isra.2>
   12280:	b	12158 <rb_linebuf_parse+0x50>
   12284:	.word	0x0002d1dc

00012288 <rb_linebuf_get>:
   12288:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1228c:	ldr	r4, [r0]
   12290:	strd	r6, [sp, #8]
   12294:	str	r8, [sp, #16]
   12298:	str	lr, [sp, #20]
   1229c:	cmp	r4, #0
   122a0:	beq	123e8 <rb_linebuf_get+0x160>
   122a4:	cmp	r3, #0
   122a8:	ldr	r6, [r4]
   122ac:	bne	122bc <rb_linebuf_get+0x34>
   122b0:	ldrb	r4, [r6, #1025]	; 0x401
   122b4:	cmp	r4, #0
   122b8:	beq	123e8 <rb_linebuf_get+0x160>
   122bc:	ldr	r4, [r6, #1028]	; 0x404
   122c0:	mov	r7, r1
   122c4:	mov	r5, r0
   122c8:	mov	r1, r6
   122cc:	ldrb	r3, [r6, #1026]	; 0x402
   122d0:	cmp	r4, r2
   122d4:	subgt	r4, r2, #1
   122d8:	cmp	r3, #0
   122dc:	beq	12400 <rb_linebuf_get+0x178>
   122e0:	ldr	r3, [sp, #24]
   122e4:	cmp	r3, #0
   122e8:	bne	12428 <rb_linebuf_get+0x1a0>
   122ec:	cmp	r4, #0
   122f0:	beq	12478 <rb_linebuf_get+0x1f0>
   122f4:	ldrb	r3, [r6]
   122f8:	cmp	r3, #10
   122fc:	cmpne	r3, #13
   12300:	bne	12438 <rb_linebuf_get+0x1b0>
   12304:	add	r0, r6, r4
   12308:	add	r3, r6, #1
   1230c:	b	12320 <rb_linebuf_get+0x98>
   12310:	ldrb	r2, [r3], #1
   12314:	cmp	r2, #10
   12318:	cmpne	r2, #13
   1231c:	bne	12438 <rb_linebuf_get+0x1b0>
   12320:	cmp	r0, r3
   12324:	mov	r1, r3
   12328:	sub	r4, r0, r3
   1232c:	bne	12310 <rb_linebuf_get+0x88>
   12330:	mov	r4, #0
   12334:	mov	r8, r7
   12338:	mov	r2, r4
   1233c:	mov	r0, r7
   12340:	bl	47e8 <memcpy@plt>
   12344:	mov	r3, #0
   12348:	strb	r3, [r8]
   1234c:	ldr	r3, [r5]
   12350:	ldmib	r3, {r1, r2}
   12354:	mov	r0, r3
   12358:	cmp	r2, #0
   1235c:	strne	r1, [r2, #4]
   12360:	streq	r1, [r5, #4]
   12364:	ldr	r1, [r3, #4]
   12368:	cmp	r1, #0
   1236c:	strne	r2, [r1, #8]
   12370:	mov	r1, #0
   12374:	streq	r2, [r5]
   12378:	ldr	r2, [r5, #8]
   1237c:	str	r1, [r3, #4]
   12380:	str	r1, [r3, #8]
   12384:	sub	r3, r2, #1
   12388:	str	r3, [r5, #8]
   1238c:	bl	4824 <rb_free_rb_dlink_node@plt>
   12390:	ldr	r2, [r5, #12]
   12394:	ldr	r0, [r5, #16]
   12398:	ldr	r1, [r5, #24]
   1239c:	ldr	ip, [r6, #1028]	; 0x404
   123a0:	sub	r0, r0, #1
   123a4:	ldr	r3, [r6, #1032]	; 0x408
   123a8:	sub	r1, r1, #1
   123ac:	str	r0, [r5, #16]
   123b0:	sub	r2, r2, ip
   123b4:	sub	r3, r3, #1
   123b8:	str	r2, [r5, #12]
   123bc:	cmp	r3, #0
   123c0:	str	r1, [r5, #24]
   123c4:	str	r3, [r6, #1032]	; 0x408
   123c8:	bne	123e8 <rb_linebuf_get+0x160>
   123cc:	ldr	r3, [pc, #188]	; 12490 <rb_linebuf_get+0x208>
   123d0:	mov	r1, r6
   123d4:	add	r3, pc, r3
   123d8:	ldm	r3, {r0, r2}
   123dc:	sub	r2, r2, #1
   123e0:	str	r2, [r3, #4]
   123e4:	bl	48a8 <rb_bh_free@plt>
   123e8:	mov	r0, r4
   123ec:	ldrd	r4, [sp]
   123f0:	ldrd	r6, [sp, #8]
   123f4:	ldr	r8, [sp, #16]
   123f8:	add	sp, sp, #20
   123fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12400:	mov	r2, r4
   12404:	mov	r0, r7
   12408:	bl	47e8 <memcpy@plt>
   1240c:	ldr	r3, [sp, #24]
   12410:	cmp	r3, #0
   12414:	bne	1234c <rb_linebuf_get+0xc4>
   12418:	add	r8, r7, r4
   1241c:	mov	r3, #0
   12420:	strb	r3, [r8]
   12424:	b	1234c <rb_linebuf_get+0xc4>
   12428:	mov	r0, r7
   1242c:	mov	r2, r4
   12430:	bl	47e8 <memcpy@plt>
   12434:	b	1234c <rb_linebuf_get+0xc4>
   12438:	sub	r3, r4, #1
   1243c:	mov	r2, r4
   12440:	ldrb	ip, [r1, r3]
   12444:	add	r0, r1, r3
   12448:	cmp	ip, #13
   1244c:	cmpne	ip, #10
   12450:	addne	r8, r7, r4
   12454:	beq	1246c <rb_linebuf_get+0x1e4>
   12458:	b	1233c <rb_linebuf_get+0xb4>
   1245c:	ldrb	r2, [r0, #-1]!
   12460:	cmp	r2, #10
   12464:	cmpne	r2, #13
   12468:	bne	12484 <rb_linebuf_get+0x1fc>
   1246c:	subs	r4, r3, #0
   12470:	sub	r3, r3, #1
   12474:	bne	1245c <rb_linebuf_get+0x1d4>
   12478:	mov	r8, r7
   1247c:	mov	r2, r4
   12480:	b	1233c <rb_linebuf_get+0xb4>
   12484:	mov	r2, r4
   12488:	add	r8, r7, r4
   1248c:	b	1233c <rb_linebuf_get+0xb4>
   12490:	.word	0x0002cf90

00012494 <rb_linebuf_attach>:
   12494:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12498:	strd	r6, [sp, #8]
   1249c:	ldr	r6, [r1]
   124a0:	str	r8, [sp, #16]
   124a4:	str	lr, [sp, #20]
   124a8:	cmp	r6, #0
   124ac:	beq	12538 <rb_linebuf_attach+0xa4>
   124b0:	mov	r4, r0
   124b4:	mov	r7, #0
   124b8:	b	12508 <rb_linebuf_attach+0x74>
   124bc:	ldr	r3, [r4, #8]
   124c0:	ldr	r6, [r6, #8]
   124c4:	ldr	r2, [r4, #12]
   124c8:	add	r3, r3, #1
   124cc:	ldr	r1, [r4, #24]
   124d0:	cmp	r6, #0
   124d4:	ldr	ip, [r5, #1028]	; 0x404
   124d8:	stmib	r4, {r0, r3}
   124dc:	ldr	r0, [r4, #16]
   124e0:	add	r1, r1, #1
   124e4:	ldr	r3, [r5, #1032]	; 0x408
   124e8:	add	r2, r2, ip
   124ec:	add	r0, r0, #1
   124f0:	str	r2, [r4, #12]
   124f4:	str	r1, [r4, #24]
   124f8:	add	r3, r3, #1
   124fc:	str	r0, [r4, #16]
   12500:	str	r3, [r5, #1032]	; 0x408
   12504:	beq	12538 <rb_linebuf_attach+0xa4>
   12508:	ldr	r5, [r6]
   1250c:	bl	4b54 <rb_make_rb_dlink_node@plt>
   12510:	ldr	r3, [r4, #4]
   12514:	str	r5, [r0]
   12518:	cmp	r3, #0
   1251c:	stmib	r0, {r3, r7}
   12520:	strne	r0, [r3, #8]
   12524:	bne	124bc <rb_linebuf_attach+0x28>
   12528:	ldr	r3, [r4]
   1252c:	cmp	r3, #0
   12530:	streq	r0, [r4]
   12534:	b	124bc <rb_linebuf_attach+0x28>
   12538:	ldrd	r4, [sp]
   1253c:	ldrd	r6, [sp, #8]
   12540:	ldr	r8, [sp, #16]
   12544:	add	sp, sp, #20
   12548:	pop	{pc}		; (ldr pc, [sp], #4)

0001254c <rb_linebuf_put>:
   1254c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12550:	mov	r4, r0
   12554:	strd	r6, [sp, #8]
   12558:	mov	r7, r1
   1255c:	ldr	r6, [pc, #296]	; 1268c <rb_linebuf_put+0x140>
   12560:	str	r8, [sp, #16]
   12564:	str	lr, [sp, #20]
   12568:	add	r6, pc, r6
   1256c:	ldr	r0, [r6]
   12570:	bl	492c <rb_bh_alloc@plt>
   12574:	subs	r5, r0, #0
   12578:	beq	125e0 <rb_linebuf_put+0x94>
   1257c:	ldr	r3, [r6, #4]
   12580:	add	r3, r3, #1
   12584:	str	r3, [r6, #4]
   12588:	bl	4b54 <rb_make_rb_dlink_node@plt>
   1258c:	ldr	r3, [r4, #4]
   12590:	mov	r2, #0
   12594:	str	r5, [r0]
   12598:	cmp	r3, r2
   1259c:	str	r3, [r0, #4]
   125a0:	str	r2, [r0, #8]
   125a4:	strne	r0, [r3, #8]
   125a8:	beq	1267c <rb_linebuf_put+0x130>
   125ac:	ldr	r1, [r4, #8]
   125b0:	str	r0, [r4, #4]
   125b4:	ldr	r2, [r4, #16]
   125b8:	ldr	r3, [r4, #24]
   125bc:	add	r0, r1, #1
   125c0:	ldr	r1, [r5, #1032]	; 0x408
   125c4:	add	r2, r2, #1
   125c8:	str	r0, [r4, #8]
   125cc:	add	r3, r3, #1
   125d0:	add	r1, r1, #1
   125d4:	str	r1, [r5, #1032]	; 0x408
   125d8:	str	r2, [r4, #16]
   125dc:	str	r3, [r4, #24]
   125e0:	mov	r2, r7
   125e4:	movw	r1, #1023	; 0x3ff
   125e8:	mov	r0, r5
   125ec:	bl	4674 <rb_fsnprint@plt>
   125f0:	subs	r3, r0, #0
   125f4:	ble	12668 <rb_linebuf_put+0x11c>
   125f8:	movw	r0, #1022	; 0x3fe
   125fc:	cmp	r3, r0
   12600:	bgt	12658 <rb_linebuf_put+0x10c>
   12604:	add	r2, r3, #2
   12608:	mov	r0, r3
   1260c:	add	lr, r3, #1
   12610:	mov	r1, r2
   12614:	mov	r3, #13
   12618:	mov	r6, #10
   1261c:	mov	ip, #0
   12620:	strb	r3, [r5, r0]
   12624:	mov	r3, #1
   12628:	strb	r6, [r5, lr]
   1262c:	strb	ip, [r5, r2]
   12630:	strb	r3, [r5, #1025]	; 0x401
   12634:	ldr	r3, [r4, #12]
   12638:	ldrd	r6, [sp, #8]
   1263c:	ldr	r8, [sp, #16]
   12640:	add	r3, r3, r2
   12644:	str	r1, [r5, #1028]	; 0x404
   12648:	str	r3, [r4, #12]
   1264c:	ldrd	r4, [sp]
   12650:	add	sp, sp, #20
   12654:	pop	{pc}		; (ldr pc, [sp], #4)
   12658:	mov	r2, #1024	; 0x400
   1265c:	movw	lr, #1023	; 0x3ff
   12660:	mov	r1, r2
   12664:	b	12614 <rb_linebuf_put+0xc8>
   12668:	mov	r2, #2
   1266c:	mov	lr, #1
   12670:	mov	r1, r2
   12674:	mov	r0, #0
   12678:	b	12614 <rb_linebuf_put+0xc8>
   1267c:	ldr	r3, [r4]
   12680:	cmp	r3, #0
   12684:	streq	r0, [r4]
   12688:	b	125ac <rb_linebuf_put+0x60>
   1268c:	.word	0x0002cdfc

00012690 <rb_linebuf_flush>:
   12690:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12694:	mov	r4, r1
   12698:	strd	r6, [sp, #8]
   1269c:	mov	r6, r0
   126a0:	strd	r8, [sp, #16]
   126a4:	strd	sl, [sp, #24]
   126a8:	str	lr, [sp, #32]
   126ac:	sub	sp, sp, #12
   126b0:	bl	4488 <rb_fd_ssl@plt>
   126b4:	subs	r1, r0, #0
   126b8:	beq	12730 <rb_linebuf_flush+0xa0>
   126bc:	ldr	r3, [r4]
   126c0:	cmp	r3, #0
   126c4:	beq	129f0 <rb_linebuf_flush+0x360>
   126c8:	ldr	r5, [r3]
   126cc:	ldrb	r3, [r5, #1025]	; 0x401
   126d0:	cmp	r3, #0
   126d4:	beq	129f0 <rb_linebuf_flush+0x360>
   126d8:	ldr	r3, [r4, #20]
   126dc:	mov	r0, r6
   126e0:	ldr	r2, [r5, #1028]	; 0x404
   126e4:	add	r1, r5, r3
   126e8:	sub	r2, r2, r3
   126ec:	bl	4638 <rb_write@plt>
   126f0:	subs	r9, r0, #0
   126f4:	ble	12710 <rb_linebuf_flush+0x80>
   126f8:	ldr	r3, [r4, #20]
   126fc:	ldr	r2, [r5, #1028]	; 0x404
   12700:	add	r3, r9, r3
   12704:	cmp	r3, r2
   12708:	str	r3, [r4, #20]
   1270c:	beq	12930 <rb_linebuf_flush+0x2a0>
   12710:	mov	r0, r9
   12714:	add	sp, sp, #12
   12718:	ldrd	r4, [sp]
   1271c:	ldrd	r6, [sp, #8]
   12720:	ldrd	r8, [sp, #16]
   12724:	ldrd	sl, [sp, #24]
   12728:	add	sp, sp, #32
   1272c:	pop	{pc}		; (ldr pc, [sp], #4)
   12730:	ldr	r7, [pc, #724]	; 12a0c <rb_linebuf_flush+0x37c>
   12734:	mov	r2, #8192	; 0x2000
   12738:	add	r7, pc, r7
   1273c:	mov	r0, r7
   12740:	bl	4608 <memset@plt>
   12744:	ldr	r2, [r4]
   12748:	cmp	r2, #0
   1274c:	beq	129f0 <rb_linebuf_flush+0x360>
   12750:	ldr	r3, [r2]
   12754:	ldrb	r1, [r3, #1025]	; 0x401
   12758:	cmp	r1, #0
   1275c:	beq	129f0 <rb_linebuf_flush+0x360>
   12760:	ldr	ip, [r4, #20]
   12764:	ldr	r1, [r3, #1028]	; 0x404
   12768:	ldr	r0, [r2, #8]
   1276c:	add	r3, r3, ip
   12770:	sub	r2, r1, ip
   12774:	str	r3, [r7]
   12778:	cmp	r0, #0
   1277c:	str	r2, [r7, #4]
   12780:	beq	129e8 <rb_linebuf_flush+0x358>
   12784:	ldr	r3, [r0]
   12788:	ldrb	r2, [r3, #1025]	; 0x401
   1278c:	cmp	r2, #0
   12790:	beq	129e8 <rb_linebuf_flush+0x358>
   12794:	ldr	r1, [r0, #8]
   12798:	str	r3, [r7, #8]
   1279c:	ldr	r3, [r3, #1028]	; 0x404
   127a0:	cmp	r1, #0
   127a4:	str	r3, [r7, #12]
   127a8:	beq	12a04 <rb_linebuf_flush+0x374>
   127ac:	ldr	r3, [r1]
   127b0:	ldrb	r2, [r3, #1025]	; 0x401
   127b4:	cmp	r2, #0
   127b8:	beq	12a04 <rb_linebuf_flush+0x374>
   127bc:	ldr	r0, [r3, #1028]	; 0x404
   127c0:	mov	r2, r7
   127c4:	mov	r5, #3
   127c8:	str	r3, [r7, #16]
   127cc:	ldr	r3, [r1, #8]
   127d0:	str	r0, [r7, #20]
   127d4:	b	12808 <rb_linebuf_flush+0x178>
   127d8:	ldr	r1, [r3]
   127dc:	ldrb	r0, [r1, #1025]	; 0x401
   127e0:	cmp	r0, #0
   127e4:	beq	12810 <rb_linebuf_flush+0x180>
   127e8:	ldr	r0, [r1, #1028]	; 0x404
   127ec:	add	r5, r5, #1
   127f0:	add	r2, r2, #8
   127f4:	cmp	r5, #1024	; 0x400
   127f8:	str	r1, [r2, #16]
   127fc:	ldr	r3, [r3, #8]
   12800:	str	r0, [r2, #20]
   12804:	beq	12810 <rb_linebuf_flush+0x180>
   12808:	cmp	r3, #0
   1280c:	bne	127d8 <rb_linebuf_flush+0x148>
   12810:	ldr	r1, [pc, #504]	; 12a10 <rb_linebuf_flush+0x380>
   12814:	mov	r0, r6
   12818:	mov	r2, r5
   1281c:	add	r1, pc, r1
   12820:	bl	4aac <rb_writev@plt>
   12824:	subs	r9, r0, #0
   12828:	ble	12710 <rb_linebuf_flush+0x80>
   1282c:	ldr	r3, [pc, #480]	; 12a14 <rb_linebuf_flush+0x384>
   12830:	mov	r8, #0
   12834:	mov	r7, r9
   12838:	mov	sl, r8
   1283c:	ldr	fp, [r4]
   12840:	add	r3, pc, r3
   12844:	str	r3, [sp, #4]
   12848:	ldr	r3, [r4, #20]
   1284c:	b	12864 <rb_linebuf_flush+0x1d4>
   12850:	add	r8, r8, #1
   12854:	str	sl, [r4, #20]
   12858:	cmp	r5, r8
   1285c:	beq	12710 <rb_linebuf_flush+0x80>
   12860:	mov	r3, #0
   12864:	ldr	r6, [fp]
   12868:	ldr	r1, [r6, #1028]	; 0x404
   1286c:	sub	r1, r1, r3
   12870:	cmp	r1, r7
   12874:	bgt	129dc <rb_linebuf_flush+0x34c>
   12878:	ldr	r3, [r4]
   1287c:	sub	r7, r7, r1
   12880:	ldr	fp, [fp, #8]
   12884:	ldrd	r0, [r3, #4]
   12888:	cmp	r1, #0
   1288c:	strne	r0, [r1, #4]
   12890:	streq	r0, [r4, #4]
   12894:	ldr	r0, [r3, #4]
   12898:	cmp	r0, #0
   1289c:	strne	r1, [r0, #8]
   128a0:	mov	r0, r3
   128a4:	streq	r1, [r4]
   128a8:	ldr	r1, [r4, #8]
   128ac:	str	sl, [r3, #4]
   128b0:	str	sl, [r3, #8]
   128b4:	sub	r3, r1, #1
   128b8:	str	r3, [r4, #8]
   128bc:	bl	4824 <rb_free_rb_dlink_node@plt>
   128c0:	ldr	r1, [r4, #12]
   128c4:	ldr	ip, [r4, #16]
   128c8:	ldr	r0, [r4, #24]
   128cc:	ldr	lr, [r6, #1028]	; 0x404
   128d0:	sub	ip, ip, #1
   128d4:	ldr	r3, [r6, #1032]	; 0x408
   128d8:	sub	r0, r0, #1
   128dc:	str	ip, [r4, #16]
   128e0:	sub	r1, r1, lr
   128e4:	sub	r3, r3, #1
   128e8:	str	r1, [r4, #12]
   128ec:	cmp	r3, #0
   128f0:	str	r0, [r4, #24]
   128f4:	str	r3, [r6, #1032]	; 0x408
   128f8:	bne	12850 <rb_linebuf_flush+0x1c0>
   128fc:	str	r3, [sp]
   12900:	mov	r1, r6
   12904:	add	r8, r8, #1
   12908:	ldr	r3, [sp, #4]
   1290c:	ldm	r3, {r0, ip}
   12910:	sub	ip, ip, #1
   12914:	str	ip, [r3, #4]
   12918:	bl	48a8 <rb_bh_free@plt>
   1291c:	ldr	r3, [sp]
   12920:	cmp	r5, r8
   12924:	str	r3, [r4, #20]
   12928:	bne	12860 <rb_linebuf_flush+0x1d0>
   1292c:	b	12710 <rb_linebuf_flush+0x80>
   12930:	ldr	r3, [r4]
   12934:	mov	r2, #0
   12938:	ldr	r1, [r3, #4]
   1293c:	mov	r0, r3
   12940:	str	r2, [r4, #20]
   12944:	ldr	r2, [r3, #8]
   12948:	cmp	r2, #0
   1294c:	strne	r1, [r2, #4]
   12950:	streq	r1, [r4, #4]
   12954:	ldr	r1, [r3, #4]
   12958:	cmp	r1, #0
   1295c:	strne	r2, [r1, #8]
   12960:	mov	r1, #0
   12964:	streq	r2, [r4]
   12968:	ldr	r2, [r4, #8]
   1296c:	str	r1, [r3, #4]
   12970:	str	r1, [r3, #8]
   12974:	sub	r3, r2, #1
   12978:	str	r3, [r4, #8]
   1297c:	bl	4824 <rb_free_rb_dlink_node@plt>
   12980:	ldr	r2, [r4, #12]
   12984:	ldr	r0, [r4, #16]
   12988:	ldr	r1, [r4, #24]
   1298c:	ldr	ip, [r5, #1028]	; 0x404
   12990:	sub	r0, r0, #1
   12994:	ldr	r3, [r5, #1032]	; 0x408
   12998:	sub	r1, r1, #1
   1299c:	str	r0, [r4, #16]
   129a0:	sub	r2, r2, ip
   129a4:	sub	r3, r3, #1
   129a8:	str	r2, [r4, #12]
   129ac:	cmp	r3, #0
   129b0:	str	r1, [r4, #24]
   129b4:	str	r3, [r5, #1032]	; 0x408
   129b8:	bne	12710 <rb_linebuf_flush+0x80>
   129bc:	ldr	r3, [pc, #84]	; 12a18 <rb_linebuf_flush+0x388>
   129c0:	mov	r1, r5
   129c4:	add	r3, pc, r3
   129c8:	ldm	r3, {r0, r2}
   129cc:	sub	r2, r2, #1
   129d0:	str	r2, [r3, #4]
   129d4:	bl	48a8 <rb_bh_free@plt>
   129d8:	b	12710 <rb_linebuf_flush+0x80>
   129dc:	add	r7, r3, r7
   129e0:	str	r7, [r4, #20]
   129e4:	b	12710 <rb_linebuf_flush+0x80>
   129e8:	mov	r5, #1
   129ec:	b	12810 <rb_linebuf_flush+0x180>
   129f0:	bl	4cbc <__errno_location@plt>
   129f4:	mov	r3, #11
   129f8:	mvn	r9, #0
   129fc:	str	r3, [r0]
   12a00:	b	12710 <rb_linebuf_flush+0x80>
   12a04:	mov	r5, #2
   12a08:	b	12810 <rb_linebuf_flush+0x180>
   12a0c:	.word	0x0002cc34
   12a10:	.word	0x0002cb50
   12a14:	.word	0x0002cb24
   12a18:	.word	0x0002c9a0

00012a1c <rb_count_rb_linebuf_memory>:
   12a1c:	ldr	ip, [pc, #44]	; 12a50 <rb_count_rb_linebuf_memory+0x34>
   12a20:	mov	r3, r1
   12a24:	mov	r1, r0
   12a28:	push	{lr}		; (str lr, [sp, #-4]!)
   12a2c:	mov	lr, #0
   12a30:	sub	sp, sp, #12
   12a34:	mov	r2, lr
   12a38:	str	lr, [sp]
   12a3c:	add	ip, pc, ip
   12a40:	ldr	r0, [ip]
   12a44:	bl	4ce0 <rb_bh_usage@plt>
   12a48:	add	sp, sp, #12
   12a4c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a50:	.word	0x0002c928

00012a54 <rb_init_rb_dlink_nodes>:
   12a54:	ldr	r2, [pc, #56]	; 12a94 <rb_init_rb_dlink_nodes+0x40>
   12a58:	mov	r1, r0
   12a5c:	mov	r0, #12
   12a60:	str	r4, [sp, #-8]!
   12a64:	str	lr, [sp, #4]
   12a68:	add	r2, pc, r2
   12a6c:	bl	4a88 <rb_bh_create@plt>
   12a70:	ldr	r3, [pc, #32]	; 12a98 <rb_init_rb_dlink_nodes+0x44>
   12a74:	cmp	r0, #0
   12a78:	add	r3, pc, r3
   12a7c:	str	r0, [r3]
   12a80:	beq	12a90 <rb_init_rb_dlink_nodes+0x3c>
   12a84:	ldr	r4, [sp]
   12a88:	add	sp, sp, #4
   12a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a90:	bl	495c <rb_outofmemory@plt>
   12a94:	.word	0x0000874c
   12a98:	.word	0x0002e8f4

00012a9c <rb_make_rb_dlink_node>:
   12a9c:	ldr	r3, [pc, #4]	; 12aa8 <rb_make_rb_dlink_node+0xc>
   12aa0:	ldr	r0, [pc, r3]
   12aa4:	b	492c <rb_bh_alloc@plt>
   12aa8:	.word	0x0002e8cc

00012aac <rb_free_rb_dlink_node>:
   12aac:	ldr	r3, [pc, #12]	; 12ac0 <rb_free_rb_dlink_node+0x14>
   12ab0:	mov	r1, r0
   12ab4:	add	r3, pc, r3
   12ab8:	ldr	r0, [r3]
   12abc:	b	48a8 <rb_bh_free@plt>
   12ac0:	.word	0x0002e8b8

00012ac4 <rb_string_to_array>:
   12ac4:	subs	r3, r0, #0
   12ac8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12acc:	moveq	r4, r3
   12ad0:	strd	r6, [sp, #8]
   12ad4:	strd	r8, [sp, #16]
   12ad8:	str	sl, [sp, #24]
   12adc:	str	lr, [sp, #28]
   12ae0:	beq	12b84 <rb_string_to_array+0xc0>
   12ae4:	mov	r7, r1
   12ae8:	ldrb	r1, [r3]
   12aec:	cmp	r1, #0
   12af0:	beq	12b80 <rb_string_to_array+0xbc>
   12af4:	cmp	r1, #32
   12af8:	bne	12b10 <rb_string_to_array+0x4c>
   12afc:	ldrb	r1, [r3, #1]!
   12b00:	cmp	r1, #32
   12b04:	beq	12afc <rb_string_to_array+0x38>
   12b08:	cmp	r1, #0
   12b0c:	beq	12b80 <rb_string_to_array+0xbc>
   12b10:	mov	r8, #0
   12b14:	sub	r5, r2, #1
   12b18:	mov	r6, r8
   12b1c:	mov	r9, r7
   12b20:	cmp	r1, #58	; 0x3a
   12b24:	add	r4, r8, #1
   12b28:	beq	12ba8 <rb_string_to_array+0xe4>
   12b2c:	mov	r0, r3
   12b30:	mov	r1, #32
   12b34:	str	r3, [r9], #4
   12b38:	bl	4584 <strchr@plt>
   12b3c:	cmp	r0, #0
   12b40:	beq	12b84 <rb_string_to_array+0xc0>
   12b44:	mov	r2, r0
   12b48:	strb	r6, [r2], #1
   12b4c:	mov	r3, r2
   12b50:	ldrb	ip, [r0, #1]
   12b54:	cmp	ip, #32
   12b58:	bne	12ba0 <rb_string_to_array+0xdc>
   12b5c:	ldrb	r1, [r3, #1]!
   12b60:	cmp	r1, #32
   12b64:	beq	12b5c <rb_string_to_array+0x98>
   12b68:	cmp	r1, #0
   12b6c:	beq	12b84 <rb_string_to_array+0xc0>
   12b70:	cmp	r5, r4
   12b74:	ble	12bb4 <rb_string_to_array+0xf0>
   12b78:	mov	r8, r4
   12b7c:	b	12b20 <rb_string_to_array+0x5c>
   12b80:	mov	r4, r1
   12b84:	mov	r0, r4
   12b88:	ldrd	r4, [sp]
   12b8c:	ldrd	r6, [sp, #8]
   12b90:	ldrd	r8, [sp, #16]
   12b94:	ldr	sl, [sp, #24]
   12b98:	add	sp, sp, #28
   12b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   12ba0:	mov	r1, ip
   12ba4:	b	12b68 <rb_string_to_array+0xa4>
   12ba8:	add	r3, r3, #1
   12bac:	str	r3, [r9]
   12bb0:	b	12b84 <rb_string_to_array+0xc0>
   12bb4:	cmp	ip, #58	; 0x3a
   12bb8:	addeq	r2, r0, #2
   12bbc:	str	r2, [r7, r4, lsl #2]
   12bc0:	add	r4, r8, #2
   12bc4:	b	12b84 <rb_string_to_array+0xc0>

00012bc8 <rb_strcasecmp>:
   12bc8:	b	459c <strcasecmp@plt>

00012bcc <rb_strncasecmp>:
   12bcc:	b	4950 <strncasecmp@plt>

00012bd0 <rb_strcasestr>:
   12bd0:	b	43ec <strcasestr@plt>

00012bd4 <rb_strlcat>:
   12bd4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12bd8:	strd	r6, [sp, #8]
   12bdc:	mov	r7, r2
   12be0:	mov	r6, r0
   12be4:	str	r8, [sp, #16]
   12be8:	mov	r8, r1
   12bec:	str	lr, [sp, #20]
   12bf0:	bl	47c4 <strlen@plt>
   12bf4:	mov	r4, r0
   12bf8:	mov	r0, r8
   12bfc:	bl	47c4 <strlen@plt>
   12c00:	sub	r2, r7, r4
   12c04:	add	r6, r6, r4
   12c08:	cmp	r0, r2
   12c0c:	add	r4, r4, r0
   12c10:	movcc	r5, r0
   12c14:	subcs	r5, r2, #1
   12c18:	mov	r2, r5
   12c1c:	mov	r1, r8
   12c20:	mov	r0, r6
   12c24:	bl	47e8 <memcpy@plt>
   12c28:	mov	r2, #0
   12c2c:	mov	r0, r4
   12c30:	strb	r2, [r6, r5]
   12c34:	ldrd	r4, [sp]
   12c38:	ldrd	r6, [sp, #8]
   12c3c:	ldr	r8, [sp, #16]
   12c40:	add	sp, sp, #20
   12c44:	pop	{pc}		; (ldr pc, [sp], #4)

00012c48 <rb_strlcpy>:
   12c48:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12c4c:	mov	r4, r2
   12c50:	strd	r6, [sp, #8]
   12c54:	mov	r7, r0
   12c58:	mov	r0, r1
   12c5c:	mov	r6, r1
   12c60:	str	r8, [sp, #16]
   12c64:	str	lr, [sp, #20]
   12c68:	bl	47c4 <strlen@plt>
   12c6c:	cmp	r4, #0
   12c70:	mov	r5, r0
   12c74:	beq	12c9c <rb_strlcpy+0x54>
   12c78:	cmp	r0, r4
   12c7c:	mov	r1, r6
   12c80:	movcc	r4, r0
   12c84:	subcs	r4, r4, #1
   12c88:	mov	r2, r4
   12c8c:	mov	r0, r7
   12c90:	bl	47e8 <memcpy@plt>
   12c94:	mov	r3, #0
   12c98:	strb	r3, [r7, r4]
   12c9c:	mov	r0, r5
   12ca0:	ldrd	r4, [sp]
   12ca4:	ldrd	r6, [sp, #8]
   12ca8:	ldr	r8, [sp, #16]
   12cac:	add	sp, sp, #20
   12cb0:	pop	{pc}		; (ldr pc, [sp], #4)

00012cb4 <rb_strnlen>:
   12cb4:	b	49ec <strnlen@plt>

00012cb8 <rb_snprintf_append>:
   12cb8:	push	{r2, r3}
   12cbc:	strd	r4, [sp, #-16]!
   12cc0:	subs	r4, r1, #0
   12cc4:	str	r6, [sp, #8]
   12cc8:	str	lr, [sp, #12]
   12ccc:	sub	sp, sp, #8
   12cd0:	beq	12d3c <rb_snprintf_append+0x84>
   12cd4:	mov	r5, r0
   12cd8:	bl	47c4 <strlen@plt>
   12cdc:	cmp	r4, r0
   12ce0:	mov	r6, r0
   12ce4:	bge	12d14 <rb_snprintf_append+0x5c>
   12ce8:	sub	r4, r4, #1
   12cec:	mov	r3, #0
   12cf0:	mov	r0, r4
   12cf4:	strb	r3, [r5, r4]
   12cf8:	add	sp, sp, #8
   12cfc:	ldrd	r4, [sp]
   12d00:	ldr	r6, [sp, #8]
   12d04:	ldr	lr, [sp, #12]
   12d08:	add	sp, sp, #16
   12d0c:	add	sp, sp, #8
   12d10:	bx	lr
   12d14:	add	ip, sp, #28
   12d18:	sub	r1, r4, r0
   12d1c:	ldr	r2, [sp, #24]
   12d20:	add	r0, r5, r0
   12d24:	mov	r3, ip
   12d28:	str	ip, [sp, #4]
   12d2c:	bl	4530 <vsnprintf@plt>
   12d30:	cmp	r0, #0
   12d34:	addge	r0, r0, r6
   12d38:	b	12cf8 <rb_snprintf_append+0x40>
   12d3c:	mvn	r0, #0
   12d40:	b	12cf8 <rb_snprintf_append+0x40>

00012d44 <rb_snprintf_try_append>:
   12d44:	push	{r2, r3}
   12d48:	strd	r4, [sp, #-16]!
   12d4c:	subs	r4, r1, #0
   12d50:	str	r6, [sp, #8]
   12d54:	str	lr, [sp, #12]
   12d58:	sub	sp, sp, #8
   12d5c:	beq	12ddc <rb_snprintf_try_append+0x98>
   12d60:	mov	r6, r0
   12d64:	bl	47c4 <strlen@plt>
   12d68:	cmp	r4, r0
   12d6c:	mov	r5, r0
   12d70:	addlt	r3, r6, r4
   12d74:	movlt	r2, #0
   12d78:	mvnlt	r0, #0
   12d7c:	strblt	r2, [r3, #-1]
   12d80:	blt	12dc0 <rb_snprintf_try_append+0x7c>
   12d84:	add	ip, sp, #28
   12d88:	sub	r1, r4, r5
   12d8c:	ldr	r2, [sp, #24]
   12d90:	mov	r3, ip
   12d94:	add	r0, r6, r5
   12d98:	str	ip, [sp, #4]
   12d9c:	bl	4530 <vsnprintf@plt>
   12da0:	cmp	r0, #0
   12da4:	blt	12dc0 <rb_snprintf_try_append+0x7c>
   12da8:	add	r0, r0, r5
   12dac:	sub	r4, r4, #1
   12db0:	cmp	r0, r4
   12db4:	movgt	r3, #0
   12db8:	mvngt	r0, #0
   12dbc:	strbgt	r3, [r6, r5]
   12dc0:	add	sp, sp, #8
   12dc4:	ldrd	r4, [sp]
   12dc8:	ldr	r6, [sp, #8]
   12dcc:	ldr	lr, [sp, #12]
   12dd0:	add	sp, sp, #16
   12dd4:	add	sp, sp, #8
   12dd8:	bx	lr
   12ddc:	mvn	r0, #0
   12de0:	b	12dc0 <rb_snprintf_try_append+0x7c>

00012de4 <rb_basename>:
   12de4:	mov	r1, #47	; 0x2f
   12de8:	strd	r4, [sp, #-16]!
   12dec:	mov	r4, r0
   12df0:	str	r6, [sp, #8]
   12df4:	str	lr, [sp, #12]
   12df8:	bl	462c <strrchr@plt>
   12dfc:	cmp	r0, #0
   12e00:	addne	r4, r0, #1
   12e04:	mov	r0, r4
   12e08:	bl	47c4 <strlen@plt>
   12e0c:	add	r5, r0, #1
   12e10:	mov	r0, r5
   12e14:	bl	4980 <malloc@plt>
   12e18:	subs	r6, r0, #0
   12e1c:	beq	12e40 <rb_basename+0x5c>
   12e20:	mov	r2, r5
   12e24:	mov	r1, r4
   12e28:	bl	47e8 <memcpy@plt>
   12e2c:	mov	r0, r6
   12e30:	ldrd	r4, [sp]
   12e34:	ldr	r6, [sp, #8]
   12e38:	add	sp, sp, #12
   12e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e40:	bl	495c <rb_outofmemory@plt>

00012e44 <rb_dirname>:
   12e44:	mov	r1, #47	; 0x2f
   12e48:	strd	r4, [sp, #-16]!
   12e4c:	mov	r5, r0
   12e50:	str	r6, [sp, #8]
   12e54:	str	lr, [sp, #12]
   12e58:	bl	462c <strrchr@plt>
   12e5c:	cmp	r0, #0
   12e60:	beq	12ed4 <rb_dirname+0x90>
   12e64:	cmp	r5, r0
   12e68:	bcs	12e9c <rb_dirname+0x58>
   12e6c:	ldrb	r3, [r0]
   12e70:	cmp	r3, #47	; 0x2f
   12e74:	subeq	r3, r0, #1
   12e78:	beq	12e90 <rb_dirname+0x4c>
   12e7c:	b	12e9c <rb_dirname+0x58>
   12e80:	ldrb	r2, [r3]
   12e84:	sub	r3, r3, #1
   12e88:	cmp	r2, #47	; 0x2f
   12e8c:	bne	12e9c <rb_dirname+0x58>
   12e90:	cmp	r3, r5
   12e94:	mov	r0, r3
   12e98:	bne	12e80 <rb_dirname+0x3c>
   12e9c:	rsb	r4, r5, #2
   12ea0:	add	r4, r0, r4
   12ea4:	mov	r0, r4
   12ea8:	bl	4980 <malloc@plt>
   12eac:	subs	r6, r0, #0
   12eb0:	beq	12eec <rb_dirname+0xa8>
   12eb4:	mov	r2, r4
   12eb8:	mov	r1, r5
   12ebc:	bl	4680 <rb_strlcpy@plt>
   12ec0:	mov	r0, r6
   12ec4:	ldrd	r4, [sp]
   12ec8:	ldr	r6, [sp, #8]
   12ecc:	add	sp, sp, #12
   12ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ed4:	mov	r0, #2
   12ed8:	bl	4980 <malloc@plt>
   12edc:	subs	r6, r0, #0
   12ee0:	movne	r3, #46	; 0x2e
   12ee4:	strhne	r3, [r6]
   12ee8:	bne	12ec0 <rb_dirname+0x7c>
   12eec:	bl	495c <rb_outofmemory@plt>

00012ef0 <rb_fsnprint>:
   12ef0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12ef4:	subs	r5, r2, #0
   12ef8:	strd	r6, [sp, #8]
   12efc:	strd	r8, [sp, #16]
   12f00:	str	sl, [sp, #24]
   12f04:	str	lr, [sp, #28]
   12f08:	beq	13004 <rb_fsnprint+0x114>
   12f0c:	mov	r8, r0
   12f10:	mov	r9, r1
   12f14:	mov	r4, r1
   12f18:	mov	r6, #0
   12f1c:	sub	r7, r1, #1
   12f20:	b	12f90 <rb_fsnprint+0xa0>
   12f24:	sub	r4, r9, r6
   12f28:	cmp	r3, r4
   12f2c:	bhi	12f9c <rb_fsnprint+0xac>
   12f30:	mov	r4, r3
   12f34:	ldr	r2, [r5, #4]
   12f38:	cmp	r2, #0
   12f3c:	beq	12fc0 <rb_fsnprint+0xd0>
   12f40:	ldr	r3, [r5, #12]
   12f44:	add	r0, r8, r6
   12f48:	cmp	r3, #0
   12f4c:	beq	12fe0 <rb_fsnprint+0xf0>
   12f50:	mov	r1, r4
   12f54:	ldr	r3, [r3]
   12f58:	bl	4530 <vsnprintf@plt>
   12f5c:	cmp	r0, #0
   12f60:	blt	12fa8 <rb_fsnprint+0xb8>
   12f64:	sub	r3, r4, #1
   12f68:	cmp	r3, r0
   12f6c:	subcc	r6, r6, #1
   12f70:	addcs	r6, r6, r0
   12f74:	addcc	r6, r6, r4
   12f78:	cmp	r7, r6
   12f7c:	bls	12ffc <rb_fsnprint+0x10c>
   12f80:	ldr	r5, [r5, #16]
   12f84:	sub	r4, r4, r0
   12f88:	cmp	r5, #0
   12f8c:	beq	12fa4 <rb_fsnprint+0xb4>
   12f90:	ldr	r3, [r5]
   12f94:	cmp	r3, #0
   12f98:	bne	12f24 <rb_fsnprint+0x34>
   12f9c:	cmp	r4, #0
   12fa0:	bne	12f34 <rb_fsnprint+0x44>
   12fa4:	mov	r0, r6
   12fa8:	ldrd	r4, [sp]
   12fac:	ldrd	r6, [sp, #8]
   12fb0:	ldrd	r8, [sp, #16]
   12fb4:	ldr	sl, [sp, #24]
   12fb8:	add	sp, sp, #28
   12fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   12fc0:	ldr	r3, [r5, #8]
   12fc4:	cmp	r3, #0
   12fc8:	beq	12ff0 <rb_fsnprint+0x100>
   12fcc:	mov	r1, r4
   12fd0:	add	r0, r8, r6
   12fd4:	ldr	r2, [r5, #12]
   12fd8:	blx	r3
   12fdc:	b	12f5c <rb_fsnprint+0x6c>
   12fe0:	mov	r1, r2
   12fe4:	mov	r2, r4
   12fe8:	bl	4680 <rb_strlcpy@plt>
   12fec:	b	12f5c <rb_fsnprint+0x6c>
   12ff0:	cmp	r7, r6
   12ff4:	mov	r0, r3
   12ff8:	bhi	12f80 <rb_fsnprint+0x90>
   12ffc:	mov	r0, r7
   13000:	b	12fa8 <rb_fsnprint+0xb8>
   13004:	mov	r0, r5
   13008:	b	12fa8 <rb_fsnprint+0xb8>

0001300c <rb_fsnprintf>:
   1300c:	push	{r3}		; (str r3, [sp, #-4]!)
   13010:	str	r4, [sp, #-8]!
   13014:	str	lr, [sp, #4]
   13018:	sub	sp, sp, #28
   1301c:	mov	lr, #0
   13020:	ldr	r4, [sp, #36]	; 0x24
   13024:	add	r3, sp, #40	; 0x28
   13028:	mov	ip, sp
   1302c:	stm	sp, {r3, lr}
   13030:	add	r3, sp, #4
   13034:	str	r2, [sp, #20]
   13038:	mov	r2, r3
   1303c:	str	r4, [sp, #8]
   13040:	str	lr, [sp, #12]
   13044:	str	ip, [sp, #16]
   13048:	bl	4674 <rb_fsnprint@plt>
   1304c:	add	sp, sp, #28
   13050:	ldr	r4, [sp]
   13054:	ldr	lr, [sp, #4]
   13058:	add	sp, sp, #8
   1305c:	add	sp, sp, #4
   13060:	bx	lr

00013064 <rb_helper_child>:
   13064:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13068:	strd	r6, [sp, #8]
   1306c:	strd	sl, [sp, #24]
   13070:	mov	sl, r0
   13074:	mov	fp, r2
   13078:	ldr	r0, [pc, #552]	; 132a8 <rb_helper_child+0x244>
   1307c:	strd	r8, [sp, #16]
   13080:	mov	r9, r1
   13084:	str	lr, [sp, #32]
   13088:	sub	sp, sp, #28
   1308c:	str	r3, [sp, #20]
   13090:	add	r0, pc, r0
   13094:	bl	456c <getenv@plt>
   13098:	mov	r6, r0
   1309c:	ldr	r0, [pc, #520]	; 132ac <rb_helper_child+0x248>
   130a0:	add	r0, pc, r0
   130a4:	bl	456c <getenv@plt>
   130a8:	mov	r5, r0
   130ac:	ldr	r0, [pc, #508]	; 132b0 <rb_helper_child+0x24c>
   130b0:	clz	r4, r5
   130b4:	lsr	r4, r4, #5
   130b8:	add	r0, pc, r0
   130bc:	bl	456c <getenv@plt>
   130c0:	cmp	r6, #0
   130c4:	moveq	r4, #1
   130c8:	cmp	r0, #0
   130cc:	moveq	r4, #1
   130d0:	cmp	r4, #0
   130d4:	bne	1329c <rb_helper_child+0x238>
   130d8:	mov	r8, r0
   130dc:	mov	r1, #84	; 0x54
   130e0:	mov	r0, #1
   130e4:	bl	45c0 <calloc@plt>
   130e8:	subs	r7, r0, #0
   130ec:	beq	132a4 <rb_helper_child+0x240>
   130f0:	mov	r0, r6
   130f4:	mov	r2, #10
   130f8:	mov	r1, r4
   130fc:	bl	4854 <strtol@plt>
   13100:	mov	r6, r0
   13104:	mov	r2, #10
   13108:	mov	r0, r5
   1310c:	mov	r1, r4
   13110:	bl	4854 <strtol@plt>
   13114:	mov	r5, r0
   13118:	mov	r2, #10
   1311c:	mov	r0, r8
   13120:	mov	r1, r4
   13124:	bl	4854 <strtol@plt>
   13128:	subs	r8, r0, #0
   1312c:	bgt	13140 <rb_helper_child+0xdc>
   13130:	b	13160 <rb_helper_child+0xfc>
   13134:	add	r4, r4, #1
   13138:	cmp	r8, r4
   1313c:	beq	13160 <rb_helper_child+0xfc>
   13140:	cmp	r6, r4
   13144:	cmpne	r5, r4
   13148:	beq	13134 <rb_helper_child+0xd0>
   1314c:	mov	r0, r4
   13150:	add	r4, r4, #1
   13154:	bl	4914 <close@plt>
   13158:	cmp	r8, r4
   1315c:	bne	13140 <rb_helper_child+0xdc>
   13160:	ldr	r0, [pc, #332]	; 132b4 <rb_helper_child+0x250>
   13164:	mov	r1, #2
   13168:	add	r0, pc, r0
   1316c:	bl	4350 <open@plt>
   13170:	cmp	r6, #0
   13174:	cmpne	r5, #0
   13178:	mov	r4, r0
   1317c:	bne	13284 <rb_helper_child+0x220>
   13180:	cmp	r6, #1
   13184:	cmpne	r5, #1
   13188:	bne	13268 <rb_helper_child+0x204>
   1318c:	cmp	r6, #2
   13190:	cmpne	r5, #2
   13194:	bne	13250 <rb_helper_child+0x1ec>
   13198:	cmp	r4, #2
   1319c:	bgt	13244 <rb_helper_child+0x1e0>
   131a0:	mov	r3, #0
   131a4:	mov	r0, fp
   131a8:	ldr	r1, [sp, #20]
   131ac:	ldr	ip, [sp, #72]	; 0x48
   131b0:	ldr	r2, [sp, #64]	; 0x40
   131b4:	stm	sp, {r8, ip}
   131b8:	ldr	ip, [sp, #76]	; 0x4c
   131bc:	str	ip, [sp, #8]
   131c0:	bl	4a10 <rb_lib_init@plt>
   131c4:	ldr	r0, [sp, #68]	; 0x44
   131c8:	bl	4b24 <rb_linebuf_init@plt>
   131cc:	add	r0, r7, #4
   131d0:	bl	4ac4 <rb_linebuf_newbuf@plt>
   131d4:	add	r0, r7, #32
   131d8:	bl	4ac4 <rb_linebuf_newbuf@plt>
   131dc:	ldr	r2, [pc, #212]	; 132b8 <rb_helper_child+0x254>
   131e0:	mov	r1, #8
   131e4:	mov	r0, r6
   131e8:	add	r2, pc, r2
   131ec:	bl	4a58 <rb_open@plt>
   131f0:	ldr	r2, [pc, #196]	; 132bc <rb_helper_child+0x258>
   131f4:	mov	r1, #8
   131f8:	str	r0, [r7, #60]	; 0x3c
   131fc:	mov	r0, r5
   13200:	add	r2, pc, r2
   13204:	bl	4a58 <rb_open@plt>
   13208:	str	r0, [r7, #64]	; 0x40
   1320c:	ldr	r0, [r7, #60]	; 0x3c
   13210:	bl	45fc <rb_set_nb@plt>
   13214:	ldr	r0, [r7, #64]	; 0x40
   13218:	bl	45fc <rb_set_nb@plt>
   1321c:	str	sl, [r7, #76]	; 0x4c
   13220:	str	r9, [r7, #80]	; 0x50
   13224:	mov	r0, r7
   13228:	add	sp, sp, #28
   1322c:	ldrd	r4, [sp]
   13230:	ldrd	r6, [sp, #8]
   13234:	ldrd	r8, [sp, #16]
   13238:	ldrd	sl, [sp, #24]
   1323c:	add	sp, sp, #32
   13240:	pop	{pc}		; (ldr pc, [sp], #4)
   13244:	mov	r0, r4
   13248:	bl	4914 <close@plt>
   1324c:	b	131a0 <rb_helper_child+0x13c>
   13250:	mov	r1, #2
   13254:	mov	r0, r4
   13258:	bl	4a94 <dup2@plt>
   1325c:	cmp	r4, #2
   13260:	ble	131a0 <rb_helper_child+0x13c>
   13264:	b	13244 <rb_helper_child+0x1e0>
   13268:	mov	r1, #1
   1326c:	mov	r0, r4
   13270:	bl	4a94 <dup2@plt>
   13274:	cmp	r6, #2
   13278:	cmpne	r5, #2
   1327c:	beq	13198 <rb_helper_child+0x134>
   13280:	b	13250 <rb_helper_child+0x1ec>
   13284:	mov	r1, #0
   13288:	bl	4a94 <dup2@plt>
   1328c:	cmp	r6, #1
   13290:	cmpne	r5, #1
   13294:	beq	1318c <rb_helper_child+0x128>
   13298:	b	13268 <rb_helper_child+0x204>
   1329c:	mov	r7, #0
   132a0:	b	13224 <rb_helper_child+0x1c0>
   132a4:	bl	495c <rb_outofmemory@plt>
   132a8:	.word	0x00008138
   132ac:	.word	0x0000812c
   132b0:	.word	0x00008118
   132b4:	.word	0x00008070
   132b8:	.word	0x00007ffc
   132bc:	.word	0x00007ff8

000132c0 <rb_helper_start>:
   132c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   132c4:	strd	r6, [sp, #8]
   132c8:	mov	r7, r1
   132cc:	mov	r6, r0
   132d0:	mov	r1, #1
   132d4:	mov	r0, r7
   132d8:	strd	r8, [sp, #16]
   132dc:	strd	sl, [sp, #24]
   132e0:	mov	fp, r2
   132e4:	mov	sl, r3
   132e8:	str	lr, [sp, #32]
   132ec:	sub	sp, sp, #188	; 0xbc
   132f0:	bl	471c <access@plt>
   132f4:	cmn	r0, #1
   132f8:	beq	134e8 <rb_helper_start+0x228>
   132fc:	mov	r1, #84	; 0x54
   13300:	mov	r0, #1
   13304:	bl	45c0 <calloc@plt>
   13308:	subs	r4, r0, #0
   1330c:	beq	134f0 <rb_helper_start+0x230>
   13310:	ldr	r2, [pc, #476]	; 134f4 <rb_helper_start+0x234>
   13314:	add	r5, sp, #56	; 0x38
   13318:	mov	r3, r6
   1331c:	mov	r1, #128	; 0x80
   13320:	mov	r0, r5
   13324:	add	r2, pc, r2
   13328:	bl	4b84 <snprintf@plt>
   1332c:	mov	r2, r5
   13330:	add	r1, sp, #12
   13334:	add	r0, sp, #8
   13338:	bl	4944 <rb_pipe@plt>
   1333c:	cmp	r0, #0
   13340:	blt	134d8 <rb_helper_start+0x218>
   13344:	ldr	r2, [pc, #428]	; 134f8 <rb_helper_start+0x238>
   13348:	mov	r3, r6
   1334c:	mov	r1, #128	; 0x80
   13350:	mov	r0, r5
   13354:	add	r2, pc, r2
   13358:	bl	4b84 <snprintf@plt>
   1335c:	mov	r2, r5
   13360:	add	r1, sp, #20
   13364:	add	r0, sp, #16
   13368:	bl	4944 <rb_pipe@plt>
   1336c:	cmp	r0, #0
   13370:	blt	134d8 <rb_helper_start+0x218>
   13374:	ldr	r9, [pc, #384]	; 134fc <rb_helper_start+0x23c>
   13378:	add	r8, sp, #24
   1337c:	ldr	r0, [sp, #12]
   13380:	bl	44b8 <rb_get_fd@plt>
   13384:	mov	r3, r0
   13388:	mov	r1, #16
   1338c:	add	r9, pc, r9
   13390:	mov	r0, r8
   13394:	mov	r2, r9
   13398:	bl	4b84 <snprintf@plt>
   1339c:	ldr	r0, [sp, #16]
   133a0:	bl	44b8 <rb_get_fd@plt>
   133a4:	mov	r2, r9
   133a8:	add	r9, sp, #40	; 0x28
   133ac:	mov	r3, r0
   133b0:	mov	r1, #16
   133b4:	mov	r0, r9
   133b8:	bl	4b84 <snprintf@plt>
   133bc:	ldr	r0, [sp, #8]
   133c0:	bl	45fc <rb_set_nb@plt>
   133c4:	ldr	r0, [sp, #12]
   133c8:	bl	45fc <rb_set_nb@plt>
   133cc:	ldr	r0, [sp, #16]
   133d0:	bl	45fc <rb_set_nb@plt>
   133d4:	ldr	r0, [sp, #20]
   133d8:	bl	45fc <rb_set_nb@plt>
   133dc:	ldr	r0, [pc, #284]	; 13500 <rb_helper_start+0x240>
   133e0:	mov	r1, r9
   133e4:	mov	r2, #1
   133e8:	add	r0, pc, r0
   133ec:	bl	44a0 <rb_setenv@plt>
   133f0:	ldr	r0, [pc, #268]	; 13504 <rb_helper_start+0x244>
   133f4:	mov	r1, r8
   133f8:	mov	r2, #1
   133fc:	add	r0, pc, r0
   13400:	bl	44a0 <rb_setenv@plt>
   13404:	ldr	r1, [pc, #252]	; 13508 <rb_helper_start+0x248>
   13408:	mov	r2, #1
   1340c:	ldr	r0, [pc, #248]	; 1350c <rb_helper_start+0x24c>
   13410:	add	r1, pc, r1
   13414:	add	r0, pc, r0
   13418:	bl	44a0 <rb_setenv@plt>
   1341c:	ldr	r2, [pc, #236]	; 13510 <rb_helper_start+0x250>
   13420:	mov	r3, r6
   13424:	mov	r1, #128	; 0x80
   13428:	mov	r0, r5
   1342c:	add	r2, pc, r2
   13430:	bl	4b84 <snprintf@plt>
   13434:	mov	r3, #0
   13438:	mov	r0, r7
   1343c:	str	r5, [sp]
   13440:	mov	r1, sp
   13444:	str	r3, [sp, #4]
   13448:	bl	4b6c <rb_spawn_process@plt>
   1344c:	cmn	r0, #1
   13450:	mov	r5, r0
   13454:	beq	134b8 <rb_helper_start+0x1f8>
   13458:	ldr	r0, [sp, #12]
   1345c:	bl	4848 <rb_close@plt>
   13460:	ldr	r0, [sp, #16]
   13464:	bl	4848 <rb_close@plt>
   13468:	add	r0, r4, #4
   1346c:	bl	4ac4 <rb_linebuf_newbuf@plt>
   13470:	add	r0, r4, #32
   13474:	bl	4ac4 <rb_linebuf_newbuf@plt>
   13478:	ldr	r2, [sp, #8]
   1347c:	mov	r1, #0
   13480:	str	r5, [r4, #68]	; 0x44
   13484:	ldr	r3, [sp, #20]
   13488:	strd	r2, [r4, #60]	; 0x3c
   1348c:	str	r1, [r4, #72]	; 0x48
   13490:	str	fp, [r4, #76]	; 0x4c
   13494:	str	sl, [r4, #80]	; 0x50
   13498:	mov	r0, r4
   1349c:	add	sp, sp, #188	; 0xbc
   134a0:	ldrd	r4, [sp]
   134a4:	ldrd	r6, [sp, #8]
   134a8:	ldrd	r8, [sp, #16]
   134ac:	ldrd	sl, [sp, #24]
   134b0:	add	sp, sp, #32
   134b4:	pop	{pc}		; (ldr pc, [sp], #4)
   134b8:	ldr	r0, [sp, #8]
   134bc:	bl	4848 <rb_close@plt>
   134c0:	ldr	r0, [sp, #12]
   134c4:	bl	4848 <rb_close@plt>
   134c8:	ldr	r0, [sp, #16]
   134cc:	bl	4848 <rb_close@plt>
   134d0:	ldr	r0, [sp, #20]
   134d4:	bl	4848 <rb_close@plt>
   134d8:	mov	r0, r4
   134dc:	mov	r4, #0
   134e0:	bl	46d4 <free@plt>
   134e4:	b	13498 <rb_helper_start+0x1d8>
   134e8:	mov	r4, #0
   134ec:	b	13498 <rb_helper_start+0x1d8>
   134f0:	bl	495c <rb_outofmemory@plt>
   134f4:	.word	0x00007ee8
   134f8:	.word	0x00007ecc
   134fc:	.word	0x00007c80
   13500:	.word	0x00007de0
   13504:	.word	0x00007dd0
   13508:	.word	0x00007e24
   1350c:	.word	0x00007dbc
   13510:	.word	0x00007e0c

00013514 <rb_helper_restart>:
   13514:	ldr	r3, [r0, #80]	; 0x50
   13518:	bx	r3

0001351c <rb_helper_write_sendq>:
   1351c:	ldr	r3, [r1, #16]
   13520:	cmp	r3, #0
   13524:	bxle	lr
   13528:	strd	r4, [sp, #-16]!
   1352c:	mov	r4, r0
   13530:	add	r5, r1, #4
   13534:	str	r6, [sp, #8]
   13538:	mov	r6, r1
   1353c:	str	lr, [sp, #12]
   13540:	mov	r1, r5
   13544:	mov	r0, r4
   13548:	bl	47ac <rb_linebuf_flush@plt>
   1354c:	cmp	r0, #0
   13550:	bgt	13540 <rb_helper_write_sendq+0x24>
   13554:	beq	135a0 <rb_helper_write_sendq+0x84>
   13558:	bl	4cbc <__errno_location@plt>
   1355c:	ldr	r0, [r0]
   13560:	bl	43b0 <rb_ignore_errno@plt>
   13564:	cmp	r0, #0
   13568:	beq	135a0 <rb_helper_write_sendq+0x84>
   1356c:	ldr	r3, [r6, #16]
   13570:	cmp	r3, #0
   13574:	ble	135b8 <rb_helper_write_sendq+0x9c>
   13578:	ldr	r2, [pc, #72]	; 135c8 <rb_helper_write_sendq+0xac>
   1357c:	mov	r3, r6
   13580:	mov	r1, #2
   13584:	ldrd	r4, [sp]
   13588:	ldr	lr, [sp, #12]
   1358c:	add	r2, pc, r2
   13590:	ldr	r0, [r6, #64]	; 0x40
   13594:	ldr	r6, [sp, #8]
   13598:	add	sp, sp, #16
   1359c:	b	447c <rb_setselect@plt>
   135a0:	mov	r0, r6
   135a4:	ldrd	r4, [sp]
   135a8:	ldr	r6, [sp, #8]
   135ac:	ldr	lr, [sp, #12]
   135b0:	add	sp, sp, #16
   135b4:	b	45a8 <rb_helper_restart@plt>
   135b8:	ldrd	r4, [sp]
   135bc:	ldr	r6, [sp, #8]
   135c0:	add	sp, sp, #12
   135c4:	pop	{pc}		; (ldr pc, [sp], #4)
   135c8:	.word	0xffffff88

000135cc <rb_helper_read_cb>:
   135cc:	strd	r4, [sp, #-16]!
   135d0:	subs	r4, r1, #0
   135d4:	str	r6, [sp, #8]
   135d8:	str	lr, [sp, #12]
   135dc:	beq	1367c <rb_helper_read_cb+0xb0>
   135e0:	ldr	r5, [pc, #164]	; 1368c <rb_helper_read_cb+0xc0>
   135e4:	add	r6, r4, #32
   135e8:	add	r5, pc, r5
   135ec:	b	13600 <rb_helper_read_cb+0x34>
   135f0:	bl	465c <rb_linebuf_parse@plt>
   135f4:	mov	r0, r4
   135f8:	ldr	r3, [r4, #76]	; 0x4c
   135fc:	blx	r3
   13600:	mov	r2, #32768	; 0x8000
   13604:	mov	r1, r5
   13608:	ldr	r0, [r4, #60]	; 0x3c
   1360c:	bl	4764 <rb_read@plt>
   13610:	subs	r2, r0, #0
   13614:	mov	r3, #0
   13618:	mov	r1, r5
   1361c:	mov	r0, r6
   13620:	bgt	135f0 <rb_helper_read_cb+0x24>
   13624:	beq	1363c <rb_helper_read_cb+0x70>
   13628:	bl	4cbc <__errno_location@plt>
   1362c:	ldr	r0, [r0]
   13630:	bl	43b0 <rb_ignore_errno@plt>
   13634:	cmp	r0, #0
   13638:	bne	13654 <rb_helper_read_cb+0x88>
   1363c:	mov	r0, r4
   13640:	ldrd	r4, [sp]
   13644:	ldr	r6, [sp, #8]
   13648:	ldr	lr, [sp, #12]
   1364c:	add	sp, sp, #16
   13650:	b	45a8 <rb_helper_restart@plt>
   13654:	ldr	r2, [pc, #52]	; 13690 <rb_helper_read_cb+0xc4>
   13658:	mov	r3, r4
   1365c:	mov	r1, #1
   13660:	ldr	r6, [sp, #8]
   13664:	ldr	lr, [sp, #12]
   13668:	add	r2, pc, r2
   1366c:	ldr	r0, [r4, #60]	; 0x3c
   13670:	ldrd	r4, [sp]
   13674:	add	sp, sp, #16
   13678:	b	447c <rb_setselect@plt>
   1367c:	ldrd	r4, [sp]
   13680:	ldr	r6, [sp, #8]
   13684:	add	sp, sp, #12
   13688:	pop	{pc}		; (ldr pc, [sp], #4)
   1368c:	.word	0x0002dd88
   13690:	.word	0xffffff5c

00013694 <rb_helper_write_queue>:
   13694:	push	{r1, r2, r3}
   13698:	mov	r2, #0
   1369c:	add	r0, r0, #4
   136a0:	push	{lr}		; (str lr, [sp, #-4]!)
   136a4:	sub	sp, sp, #24
   136a8:	ldr	lr, [sp, #28]
   136ac:	add	ip, sp, #32
   136b0:	add	r3, sp, #4
   136b4:	mov	r1, r3
   136b8:	str	ip, [sp]
   136bc:	mov	ip, sp
   136c0:	str	r2, [sp, #20]
   136c4:	stmib	sp, {r2, lr}
   136c8:	str	r2, [sp, #12]
   136cc:	str	ip, [sp, #16]
   136d0:	bl	4bc0 <rb_linebuf_put@plt>
   136d4:	add	sp, sp, #24
   136d8:	pop	{lr}		; (ldr lr, [sp], #4)
   136dc:	add	sp, sp, #12
   136e0:	bx	lr

000136e4 <rb_helper_write_flush>:
   136e4:	ldr	r3, [r0, #16]
   136e8:	cmp	r3, #0
   136ec:	bxle	lr
   136f0:	strd	r4, [sp, #-16]!
   136f4:	mov	r4, r0
   136f8:	add	r5, r0, #4
   136fc:	str	r6, [sp, #8]
   13700:	ldr	r6, [r0, #64]	; 0x40
   13704:	str	lr, [sp, #12]
   13708:	mov	r1, r5
   1370c:	mov	r0, r6
   13710:	bl	47ac <rb_linebuf_flush@plt>
   13714:	cmp	r0, #0
   13718:	bgt	13708 <rb_helper_write_flush+0x24>
   1371c:	beq	13768 <rb_helper_write_flush+0x84>
   13720:	bl	4cbc <__errno_location@plt>
   13724:	ldr	r0, [r0]
   13728:	bl	43b0 <rb_ignore_errno@plt>
   1372c:	cmp	r0, #0
   13730:	beq	13768 <rb_helper_write_flush+0x84>
   13734:	ldr	r3, [r4, #16]
   13738:	cmp	r3, #0
   1373c:	ble	13780 <rb_helper_write_flush+0x9c>
   13740:	ldr	r2, [pc, #72]	; 13790 <rb_helper_write_flush+0xac>
   13744:	mov	r3, r4
   13748:	mov	r1, #2
   1374c:	ldr	r6, [sp, #8]
   13750:	ldr	lr, [sp, #12]
   13754:	add	r2, pc, r2
   13758:	ldr	r0, [r4, #64]	; 0x40
   1375c:	ldrd	r4, [sp]
   13760:	add	sp, sp, #16
   13764:	b	447c <rb_setselect@plt>
   13768:	mov	r0, r4
   1376c:	ldrd	r4, [sp]
   13770:	ldr	r6, [sp, #8]
   13774:	ldr	lr, [sp, #12]
   13778:	add	sp, sp, #16
   1377c:	b	45a8 <rb_helper_restart@plt>
   13780:	ldrd	r4, [sp]
   13784:	ldr	r6, [sp, #8]
   13788:	add	sp, sp, #12
   1378c:	pop	{pc}		; (ldr pc, [sp], #4)
   13790:	.word	0xfffffdc0

00013794 <rb_helper_write>:
   13794:	push	{r1, r2, r3}
   13798:	mov	r2, #0
   1379c:	str	r4, [sp, #-8]!
   137a0:	mov	r4, r0
   137a4:	add	r0, r0, #4
   137a8:	str	lr, [sp, #4]
   137ac:	sub	sp, sp, #28
   137b0:	ldr	ip, [sp, #36]	; 0x24
   137b4:	add	r3, sp, #40	; 0x28
   137b8:	str	r3, [sp]
   137bc:	add	r3, sp, #4
   137c0:	mov	r1, r3
   137c4:	stmib	sp, {r2, ip}
   137c8:	mov	ip, sp
   137cc:	str	r2, [sp, #12]
   137d0:	str	ip, [sp, #16]
   137d4:	str	r2, [sp, #20]
   137d8:	bl	4bc0 <rb_linebuf_put@plt>
   137dc:	mov	r0, r4
   137e0:	bl	136e4 <rb_helper_write_flush>
   137e4:	add	sp, sp, #28
   137e8:	ldr	r4, [sp]
   137ec:	ldr	lr, [sp, #4]
   137f0:	add	sp, sp, #8
   137f4:	add	sp, sp, #12
   137f8:	bx	lr

000137fc <rb_helper_run>:
   137fc:	strd	r4, [sp, #-16]!
   13800:	subs	r4, r0, #0
   13804:	str	r6, [sp, #8]
   13808:	str	lr, [sp, #12]
   1380c:	beq	13884 <rb_helper_run+0x88>
   13810:	ldr	r5, [pc, #164]	; 138bc <rb_helper_run+0xc0>
   13814:	add	r6, r4, #32
   13818:	add	r5, pc, r5
   1381c:	b	13830 <rb_helper_run+0x34>
   13820:	bl	465c <rb_linebuf_parse@plt>
   13824:	mov	r0, r4
   13828:	ldr	r3, [r4, #76]	; 0x4c
   1382c:	blx	r3
   13830:	mov	r2, #32768	; 0x8000
   13834:	mov	r1, r5
   13838:	ldr	r0, [r4, #60]	; 0x3c
   1383c:	bl	4764 <rb_read@plt>
   13840:	subs	r2, r0, #0
   13844:	mov	r3, #0
   13848:	mov	r1, r5
   1384c:	mov	r0, r6
   13850:	bgt	13820 <rb_helper_run+0x24>
   13854:	beq	1386c <rb_helper_run+0x70>
   13858:	bl	4cbc <__errno_location@plt>
   1385c:	ldr	r0, [r0]
   13860:	bl	43b0 <rb_ignore_errno@plt>
   13864:	cmp	r0, #0
   13868:	bne	13894 <rb_helper_run+0x98>
   1386c:	mov	r0, r4
   13870:	ldrd	r4, [sp]
   13874:	ldr	r6, [sp, #8]
   13878:	ldr	lr, [sp, #12]
   1387c:	add	sp, sp, #16
   13880:	b	45a8 <rb_helper_restart@plt>
   13884:	ldrd	r4, [sp]
   13888:	ldr	r6, [sp, #8]
   1388c:	add	sp, sp, #12
   13890:	pop	{pc}		; (ldr pc, [sp], #4)
   13894:	ldr	r2, [pc, #36]	; 138c0 <rb_helper_run+0xc4>
   13898:	mov	r3, r4
   1389c:	mov	r1, #1
   138a0:	ldr	r6, [sp, #8]
   138a4:	ldr	lr, [sp, #12]
   138a8:	add	r2, pc, r2
   138ac:	ldr	r0, [r4, #60]	; 0x3c
   138b0:	ldrd	r4, [sp]
   138b4:	add	sp, sp, #16
   138b8:	b	447c <rb_setselect@plt>
   138bc:	.word	0x0002db58
   138c0:	.word	0xfffffd1c

000138c4 <rb_helper_close>:
   138c4:	str	r4, [sp, #-8]!
   138c8:	subs	r4, r0, #0
   138cc:	str	lr, [sp, #4]
   138d0:	beq	13904 <rb_helper_close+0x40>
   138d4:	mov	r1, #9
   138d8:	ldr	r0, [r4, #68]	; 0x44
   138dc:	bl	46c8 <rb_kill@plt>
   138e0:	ldr	r0, [r4, #60]	; 0x3c
   138e4:	bl	4848 <rb_close@plt>
   138e8:	ldr	r0, [r4, #64]	; 0x40
   138ec:	bl	4848 <rb_close@plt>
   138f0:	mov	r0, r4
   138f4:	ldr	r4, [sp]
   138f8:	ldr	lr, [sp, #4]
   138fc:	add	sp, sp, #8
   13900:	b	46d4 <free@plt>
   13904:	ldr	r4, [sp]
   13908:	add	sp, sp, #4
   1390c:	pop	{pc}		; (ldr pc, [sp], #4)

00013910 <rb_helper_read>:
   13910:	mov	ip, #0
   13914:	push	{lr}		; (str lr, [sp, #-4]!)
   13918:	sub	sp, sp, #12
   1391c:	mov	r3, ip
   13920:	add	r0, r0, #32
   13924:	str	ip, [sp]
   13928:	bl	477c <rb_linebuf_get@plt>
   1392c:	add	sp, sp, #12
   13930:	pop	{pc}		; (ldr pc, [sp], #4)

00013934 <rb_helper_loop>:
   13934:	str	r4, [sp, #-8]!
   13938:	mov	r4, r1
   1393c:	str	lr, [sp, #4]
   13940:	bl	4338 <rb_helper_run@plt>
   13944:	mov	r0, r4
   13948:	bl	4728 <rb_lib_loop@plt>

0001394c <rb_init_netio_devpoll>:
   1394c:	mov	r0, #38	; 0x26
   13950:	bx	lr

00013954 <rb_setselect_devpoll>:
   13954:	str	r4, [sp, #-8]!
   13958:	str	lr, [sp, #4]
   1395c:	bl	4cbc <__errno_location@plt>
   13960:	mov	r3, #38	; 0x26
   13964:	ldr	r4, [sp]
   13968:	add	sp, sp, #4
   1396c:	str	r3, [r0]
   13970:	pop	{pc}		; (ldr pc, [sp], #4)

00013974 <rb_select_devpoll>:
   13974:	str	r4, [sp, #-8]!
   13978:	str	lr, [sp, #4]
   1397c:	bl	4cbc <__errno_location@plt>
   13980:	mov	r3, #38	; 0x26
   13984:	ldr	r4, [sp]
   13988:	add	sp, sp, #4
   1398c:	str	r3, [r0]
   13990:	mvn	r0, #0
   13994:	pop	{pc}		; (ldr pc, [sp], #4)

00013998 <rb_setup_fd_devpoll>:
   13998:	str	r4, [sp, #-8]!
   1399c:	str	lr, [sp, #4]
   139a0:	bl	4cbc <__errno_location@plt>
   139a4:	mov	r3, #38	; 0x26
   139a8:	ldr	r4, [sp]
   139ac:	add	sp, sp, #4
   139b0:	str	r3, [r0]
   139b4:	mvn	r0, #0
   139b8:	pop	{pc}		; (ldr pc, [sp], #4)

000139bc <rb_read_timerfd>:
   139bc:	strd	r4, [sp, #-16]!
   139c0:	subs	r4, r1, #0
   139c4:	str	r6, [sp, #8]
   139c8:	str	lr, [sp, #12]
   139cc:	sub	sp, sp, #8
   139d0:	beq	13a68 <rb_read_timerfd+0xac>
   139d4:	mov	r2, #8
   139d8:	mov	r1, sp
   139dc:	mov	r5, r0
   139e0:	bl	4764 <rb_read@plt>
   139e4:	cmp	r0, #0
   139e8:	beq	13a70 <rb_read_timerfd+0xb4>
   139ec:	blt	13a24 <rb_read_timerfd+0x68>
   139f0:	ldr	r2, [pc, #132]	; 13a7c <rb_read_timerfd+0xc0>
   139f4:	mov	r0, r5
   139f8:	mov	r3, r4
   139fc:	mov	r1, #1
   13a00:	add	r2, pc, r2
   13a04:	bl	447c <rb_setselect@plt>
   13a08:	mov	r0, r4
   13a0c:	bl	4884 <rb_run_one_event@plt>
   13a10:	add	sp, sp, #8
   13a14:	ldrd	r4, [sp]
   13a18:	ldr	r6, [sp, #8]
   13a1c:	add	sp, sp, #12
   13a20:	pop	{pc}		; (ldr pc, [sp], #4)
   13a24:	bl	4cbc <__errno_location@plt>
   13a28:	mov	r6, r0
   13a2c:	ldr	r0, [r0]
   13a30:	bl	43b0 <rb_ignore_errno@plt>
   13a34:	cmp	r0, #0
   13a38:	bne	139f0 <rb_read_timerfd+0x34>
   13a3c:	mov	r0, r5
   13a40:	bl	4848 <rb_close@plt>
   13a44:	ldr	r0, [r6]
   13a48:	ldr	r4, [r4, #20]
   13a4c:	bl	4374 <strerror@plt>
   13a50:	mov	r2, r0
   13a54:	ldr	r0, [pc, #36]	; 13a80 <rb_read_timerfd+0xc4>
   13a58:	mov	r1, r4
   13a5c:	add	r0, pc, r0
   13a60:	bl	48f0 <rb_lib_log@plt>
   13a64:	b	13a10 <rb_read_timerfd+0x54>
   13a68:	bl	4848 <rb_close@plt>
   13a6c:	b	13a10 <rb_read_timerfd+0x54>
   13a70:	bl	4cbc <__errno_location@plt>
   13a74:	mov	r6, r0
   13a78:	b	13a3c <rb_read_timerfd+0x80>
   13a7c:	.word	0xffffffb4
   13a80:	.word	0x000077ec

00013a84 <rb_init_netio_epoll>:
   13a84:	strd	r4, [sp, #-16]!
   13a88:	mov	r4, #0
   13a8c:	mov	r1, #12
   13a90:	ldr	r5, [pc, #140]	; 13b24 <rb_init_netio_epoll+0xa0>
   13a94:	mov	r0, #1
   13a98:	str	r6, [sp, #8]
   13a9c:	str	lr, [sp, #12]
   13aa0:	add	r5, pc, r5
   13aa4:	str	r4, [r5]
   13aa8:	str	r4, [r5, #4]
   13aac:	bl	45c0 <calloc@plt>
   13ab0:	subs	r6, r0, #0
   13ab4:	beq	13b18 <rb_init_netio_epoll+0x94>
   13ab8:	str	r6, [r5, #8]
   13abc:	bl	438c <getdtablesize@plt>
   13ac0:	str	r0, [r6, #8]
   13ac4:	bl	44c4 <epoll_create@plt>
   13ac8:	cmp	r0, #0
   13acc:	str	r0, [r6]
   13ad0:	blt	13b1c <rb_init_netio_epoll+0x98>
   13ad4:	ldr	r2, [pc, #76]	; 13b28 <rb_init_netio_epoll+0xa4>
   13ad8:	mov	r1, #64	; 0x40
   13adc:	add	r2, pc, r2
   13ae0:	bl	4a58 <rb_open@plt>
   13ae4:	ldr	r5, [r5, #8]
   13ae8:	mov	r0, #1
   13aec:	ldr	r1, [r5, #8]
   13af0:	lsl	r1, r1, #4
   13af4:	bl	45c0 <calloc@plt>
   13af8:	subs	r3, r0, #0
   13afc:	beq	13b18 <rb_init_netio_epoll+0x94>
   13b00:	mov	r0, r4
   13b04:	str	r3, [r5, #4]
   13b08:	ldrd	r4, [sp]
   13b0c:	ldr	r6, [sp, #8]
   13b10:	add	sp, sp, #12
   13b14:	pop	{pc}		; (ldr pc, [sp], #4)
   13b18:	bl	495c <rb_outofmemory@plt>
   13b1c:	mvn	r0, #0
   13b20:	b	13b08 <rb_init_netio_epoll+0x84>
   13b24:	.word	0x000358d0
   13b28:	.word	0x000077a0

00013b2c <rb_setup_fd_epoll>:
   13b2c:	mov	r0, #0
   13b30:	bx	lr

00013b34 <rb_setselect_epoll>:
   13b34:	push	{lr}		; (str lr, [sp, #-4]!)
   13b38:	tst	r1, #1
   13b3c:	sub	sp, sp, #20
   13b40:	ldr	lr, [r0, #20]
   13b44:	moveq	ip, lr
   13b48:	beq	13b60 <rb_setselect_epoll+0x2c>
   13b4c:	cmp	r2, #0
   13b50:	strd	r2, [r0, #28]
   13b54:	orrne	ip, lr, #1
   13b58:	biceq	ip, lr, #1
   13b5c:	str	ip, [r0, #20]
   13b60:	tst	r1, #2
   13b64:	beq	13b7c <rb_setselect_epoll+0x48>
   13b68:	cmp	r2, #0
   13b6c:	strd	r2, [r0, #36]	; 0x24
   13b70:	orrne	ip, ip, #4
   13b74:	biceq	ip, ip, #4
   13b78:	str	ip, [r0, #20]
   13b7c:	cmp	lr, #0
   13b80:	bne	13bcc <rb_setselect_epoll+0x98>
   13b84:	cmp	ip, #0
   13b88:	beq	13bc4 <rb_setselect_epoll+0x90>
   13b8c:	movgt	r1, #1
   13b90:	ble	13bd4 <rb_setselect_epoll+0xa0>
   13b94:	orr	ip, ip, #-2147483648	; 0x80000000
   13b98:	str	ip, [sp]
   13b9c:	str	r0, [sp, #8]
   13ba0:	ldr	ip, [pc, #108]	; 13c14 <rb_setselect_epoll+0xe0>
   13ba4:	mov	r3, sp
   13ba8:	ldr	r2, [r0, #12]
   13bac:	add	ip, pc, ip
   13bb0:	ldr	r0, [ip, #8]
   13bb4:	ldr	r0, [r0]
   13bb8:	bl	4c2c <epoll_ctl@plt>
   13bbc:	cmp	r0, #0
   13bc0:	bne	13bf4 <rb_setselect_epoll+0xc0>
   13bc4:	add	sp, sp, #20
   13bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   13bcc:	cmp	ip, #0
   13bd0:	bgt	13be4 <rb_setselect_epoll+0xb0>
   13bd4:	mov	r1, #2
   13bd8:	str	ip, [sp]
   13bdc:	str	r0, [sp, #8]
   13be0:	b	13ba0 <rb_setselect_epoll+0x6c>
   13be4:	cmp	ip, lr
   13be8:	movne	r1, #3
   13bec:	bne	13b94 <rb_setselect_epoll+0x60>
   13bf0:	b	13bc4 <rb_setselect_epoll+0x90>
   13bf4:	bl	4cbc <__errno_location@plt>
   13bf8:	ldr	r0, [r0]
   13bfc:	bl	4374 <strerror@plt>
   13c00:	mov	r1, r0
   13c04:	ldr	r0, [pc, #12]	; 13c18 <rb_setselect_epoll+0xe4>
   13c08:	add	r0, pc, r0
   13c0c:	bl	48f0 <rb_lib_log@plt>
   13c10:	bl	4398 <abort@plt>
   13c14:	.word	0x000357c4
   13c18:	.word	0x0000768c

00013c1c <rb_select_epoll>:
   13c1c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13c20:	mov	r3, r0
   13c24:	strd	r6, [sp, #8]
   13c28:	ldr	r6, [pc, #524]	; 13e3c <rb_select_epoll+0x220>
   13c2c:	strd	r8, [sp, #16]
   13c30:	strd	sl, [sp, #24]
   13c34:	str	lr, [sp, #32]
   13c38:	sub	sp, sp, #28
   13c3c:	add	r6, pc, r6
   13c40:	ldr	r2, [r6, #8]
   13c44:	ldrd	r0, [r2]
   13c48:	ldr	r2, [r2, #8]
   13c4c:	bl	4794 <epoll_wait@plt>
   13c50:	mov	r7, r0
   13c54:	bl	4cbc <__errno_location@plt>
   13c58:	ldr	r4, [r0]
   13c5c:	mov	r5, r0
   13c60:	str	r0, [sp, #4]
   13c64:	bl	4968 <rb_set_time@plt>
   13c68:	cmp	r7, #0
   13c6c:	str	r4, [r5]
   13c70:	blt	13e1c <rb_select_epoll+0x200>
   13c74:	beq	13dac <rb_select_epoll+0x190>
   13c78:	ldr	r8, [pc, #448]	; 13e40 <rb_select_epoll+0x224>
   13c7c:	mov	r5, #0
   13c80:	ldr	sl, [pc, #444]	; 13e44 <rb_select_epoll+0x228>
   13c84:	add	r8, pc, r8
   13c88:	add	sl, pc, sl
   13c8c:	b	13cc8 <rb_select_epoll+0xac>
   13c90:	mov	r0, #0
   13c94:	ldr	r1, [r4, #40]	; 0x28
   13c98:	cmp	r3, r0
   13c9c:	str	r0, [r4, #36]	; 0x24
   13ca0:	str	r0, [r4, #40]	; 0x28
   13ca4:	beq	13dfc <rb_select_epoll+0x1e0>
   13ca8:	mov	r0, r4
   13cac:	blx	r3
   13cb0:	ldrb	r3, [r4, #16]
   13cb4:	tst	r3, #1
   13cb8:	bne	13e34 <rb_select_epoll+0x218>
   13cbc:	add	r5, r5, #1
   13cc0:	cmp	r7, r5
   13cc4:	ble	13dac <rb_select_epoll+0x190>
   13cc8:	ldr	r3, [r6, #8]
   13ccc:	lsl	fp, r5, #4
   13cd0:	ldr	r3, [r3, #4]
   13cd4:	add	r2, r3, fp
   13cd8:	ldr	r3, [r3, r5, lsl #4]
   13cdc:	ldr	r4, [r2, #8]
   13ce0:	tst	r3, #25
   13ce4:	ldr	r9, [r4, #20]
   13ce8:	beq	13d10 <rb_select_epoll+0xf4>
   13cec:	mov	r0, #0
   13cf0:	ldr	r3, [r4, #28]
   13cf4:	str	r0, [r4, #28]
   13cf8:	ldr	r1, [r4, #32]
   13cfc:	str	r0, [r4, #32]
   13d00:	cmp	r3, r0
   13d04:	beq	13d10 <rb_select_epoll+0xf4>
   13d08:	mov	r0, r4
   13d0c:	blx	r3
   13d10:	ldrb	r3, [r4, #16]
   13d14:	tst	r3, #1
   13d18:	beq	13cbc <rb_select_epoll+0xa0>
   13d1c:	ldr	r1, [r8, #8]
   13d20:	ldr	r3, [r4, #36]	; 0x24
   13d24:	ldr	r1, [r1, #4]
   13d28:	ldr	r1, [r1, fp]
   13d2c:	tst	r1, #28
   13d30:	bne	13c90 <rb_select_epoll+0x74>
   13d34:	ldr	r1, [r4, #28]
   13d38:	cmp	r1, #0
   13d3c:	beq	13dcc <rb_select_epoll+0x1b0>
   13d40:	cmp	r3, #0
   13d44:	movne	r1, #-2147483643	; 0x80000005
   13d48:	movne	r3, #5
   13d4c:	beq	13e08 <rb_select_epoll+0x1ec>
   13d50:	cmp	r9, r3
   13d54:	beq	13cbc <rb_select_epoll+0xa0>
   13d58:	str	r1, [sp, #8]
   13d5c:	mov	r1, #3
   13d60:	str	r4, [sp, #16]
   13d64:	str	r3, [r4, #20]
   13d68:	ldr	r0, [sl, #8]
   13d6c:	add	r3, sp, #8
   13d70:	ldr	r2, [r4, #12]
   13d74:	ldr	r0, [r0]
   13d78:	bl	4c2c <epoll_ctl@plt>
   13d7c:	cmp	r0, #0
   13d80:	beq	13cbc <rb_select_epoll+0xa0>
   13d84:	ldr	r3, [sp, #4]
   13d88:	add	r5, r5, #1
   13d8c:	ldr	r0, [r3]
   13d90:	bl	4374 <strerror@plt>
   13d94:	mov	r1, r0
   13d98:	ldr	r0, [pc, #168]	; 13e48 <rb_select_epoll+0x22c>
   13d9c:	add	r0, pc, r0
   13da0:	bl	48f0 <rb_lib_log@plt>
   13da4:	cmp	r7, r5
   13da8:	bgt	13cc8 <rb_select_epoll+0xac>
   13dac:	mov	r0, #0
   13db0:	add	sp, sp, #28
   13db4:	ldrd	r4, [sp]
   13db8:	ldrd	r6, [sp, #8]
   13dbc:	ldrd	r8, [sp, #16]
   13dc0:	ldrd	sl, [sp, #24]
   13dc4:	add	sp, sp, #32
   13dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   13dcc:	cmp	r3, #0
   13dd0:	movne	r1, #-2147483644	; 0x80000004
   13dd4:	movne	r3, #4
   13dd8:	bne	13d50 <rb_select_epoll+0x134>
   13ddc:	cmp	r9, #0
   13de0:	beq	13cbc <rb_select_epoll+0xa0>
   13de4:	mov	r3, #0
   13de8:	mov	r1, #2
   13dec:	str	r3, [sp, #8]
   13df0:	str	r4, [sp, #16]
   13df4:	str	r3, [r4, #20]
   13df8:	b	13d68 <rb_select_epoll+0x14c>
   13dfc:	ldr	r3, [r4, #28]
   13e00:	cmp	r3, #0
   13e04:	beq	13ddc <rb_select_epoll+0x1c0>
   13e08:	cmp	r9, #1
   13e0c:	beq	13cbc <rb_select_epoll+0xa0>
   13e10:	mov	r1, #-2147483647	; 0x80000001
   13e14:	mov	r3, #1
   13e18:	b	13d58 <rb_select_epoll+0x13c>
   13e1c:	mov	r0, r4
   13e20:	bl	43b0 <rb_ignore_errno@plt>
   13e24:	cmp	r0, #0
   13e28:	moveq	r0, #5
   13e2c:	bne	13dac <rb_select_epoll+0x190>
   13e30:	b	13db0 <rb_select_epoll+0x194>
   13e34:	ldr	r3, [r4, #36]	; 0x24
   13e38:	b	13d34 <rb_select_epoll+0x118>
   13e3c:	.word	0x00035734
   13e40:	.word	0x000356ec
   13e44:	.word	0x000356e8
   13e48:	.word	0x00007524

00013e4c <rb_epoll_supports_event>:
   13e4c:	strd	r4, [sp, #-16]!
   13e50:	ldr	r4, [pc, #264]	; 13f60 <rb_epoll_supports_event+0x114>
   13e54:	add	r4, pc, r4
   13e58:	ldr	r0, [r4]
   13e5c:	str	r6, [sp, #8]
   13e60:	str	lr, [sp, #12]
   13e64:	sub	sp, sp, #288	; 0x120
   13e68:	cmp	r0, #1
   13e6c:	beq	13ea0 <rb_epoll_supports_event+0x54>
   13e70:	cmn	r0, #1
   13e74:	moveq	r0, #0
   13e78:	beq	13ea0 <rb_epoll_supports_event+0x54>
   13e7c:	ldr	r1, [pc, #224]	; 13f64 <rb_epoll_supports_event+0x118>
   13e80:	add	r2, sp, #72	; 0x48
   13e84:	mov	r0, #3
   13e88:	add	r1, pc, r1
   13e8c:	bl	4464 <__xstat@plt>
   13e90:	cmp	r0, #0
   13e94:	mvneq	r3, #0
   13e98:	streq	r3, [r4]
   13e9c:	bne	13eb4 <rb_epoll_supports_event+0x68>
   13ea0:	add	sp, sp, #288	; 0x120
   13ea4:	ldrd	r4, [sp]
   13ea8:	ldr	r6, [sp, #8]
   13eac:	add	sp, sp, #12
   13eb0:	pop	{pc}		; (ldr pc, [sp], #4)
   13eb4:	mov	r1, #0
   13eb8:	mov	r0, r1
   13ebc:	bl	4b9c <timerfd_create@plt>
   13ec0:	cmp	r0, #0
   13ec4:	bge	13f30 <rb_epoll_supports_event+0xe4>
   13ec8:	mov	r3, #0
   13ecc:	mov	ip, #26
   13ed0:	mov	r0, r3
   13ed4:	add	r2, sp, #4
   13ed8:	add	r1, sp, #8
   13edc:	str	ip, [sp, #12]
   13ee0:	str	r3, [sp, #16]
   13ee4:	bl	4500 <timer_create@plt>
   13ee8:	subs	r6, r0, #0
   13eec:	bne	13f48 <rb_epoll_supports_event+0xfc>
   13ef0:	add	r5, sp, #160	; 0xa0
   13ef4:	ldr	r0, [sp, #4]
   13ef8:	bl	4a4c <timer_delete@plt>
   13efc:	mov	r0, r5
   13f00:	bl	4368 <sigemptyset@plt>
   13f04:	mov	r2, r6
   13f08:	mov	r1, r5
   13f0c:	mvn	r0, #0
   13f10:	bl	4410 <signalfd@plt>
   13f14:	cmp	r0, #0
   13f18:	blt	13f48 <rb_epoll_supports_event+0xfc>
   13f1c:	bl	4914 <close@plt>
   13f20:	mov	r3, #1
   13f24:	mov	r0, r3
   13f28:	str	r3, [r4]
   13f2c:	b	13ea0 <rb_epoll_supports_event+0x54>
   13f30:	bl	4914 <close@plt>
   13f34:	mov	r3, #1
   13f38:	mov	r0, r3
   13f3c:	str	r3, [r4]
   13f40:	str	r3, [r4, #4]
   13f44:	b	13ea0 <rb_epoll_supports_event+0x54>
   13f48:	ldr	r3, [pc, #24]	; 13f68 <rb_epoll_supports_event+0x11c>
   13f4c:	mvn	r2, #0
   13f50:	mov	r0, #0
   13f54:	add	r3, pc, r3
   13f58:	str	r2, [r3]
   13f5c:	b	13ea0 <rb_epoll_supports_event+0x54>
   13f60:	.word	0x0003551c
   13f64:	.word	0x00007460
   13f68:	.word	0x0003541c

00013f6c <rb_epoll_init_event>:
   13f6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13f70:	ldr	r4, [pc, #980]	; 1434c <rb_epoll_init_event+0x3e0>
   13f74:	strd	r6, [sp, #8]
   13f78:	str	r8, [sp, #16]
   13f7c:	str	lr, [sp, #20]
   13f80:	sub	sp, sp, #128	; 0x80
   13f84:	bl	13e4c <rb_epoll_supports_event>
   13f88:	add	r4, pc, r4
   13f8c:	ldr	r5, [r4, #4]
   13f90:	cmp	r5, #0
   13f94:	beq	13fb0 <rb_epoll_init_event+0x44>
   13f98:	add	sp, sp, #128	; 0x80
   13f9c:	ldrd	r4, [sp]
   13fa0:	ldrd	r6, [sp, #8]
   13fa4:	ldr	r8, [sp, #16]
   13fa8:	add	sp, sp, #20
   13fac:	pop	{pc}		; (ldr pc, [sp], #4)
   13fb0:	mov	r6, sp
   13fb4:	mov	r0, r6
   13fb8:	bl	4368 <sigemptyset@plt>
   13fbc:	bl	4458 <__libc_current_sigrtmin@plt>
   13fc0:	mov	r1, r0
   13fc4:	mov	r0, r6
   13fc8:	bl	4860 <sigaddset@plt>
   13fcc:	mov	r2, r5
   13fd0:	mov	r1, r6
   13fd4:	mov	r0, r5
   13fd8:	bl	498c <sigprocmask@plt>
   13fdc:	mov	r0, r6
   13fe0:	bl	4368 <sigemptyset@plt>
   13fe4:	bl	4458 <__libc_current_sigrtmin@plt>
   13fe8:	mov	r1, r0
   13fec:	mov	r0, r6
   13ff0:	bl	4860 <sigaddset@plt>
   13ff4:	mov	r2, r5
   13ff8:	mov	r1, r6
   13ffc:	mvn	r0, #0
   14000:	bl	4410 <signalfd@plt>
   14004:	cmn	r0, #1
   14008:	streq	r0, [r4]
   1400c:	beq	13f98 <rb_epoll_init_event+0x2c>
   14010:	ldr	r2, [pc, #824]	; 14350 <rb_epoll_init_event+0x3e4>
   14014:	mov	r1, #64	; 0x40
   14018:	mov	r6, r4
   1401c:	add	r7, r4, #12
   14020:	ldr	r8, [pc, #812]	; 14354 <rb_epoll_init_event+0x3e8>
   14024:	add	r2, pc, r2
   14028:	bl	4a58 <rb_open@plt>
   1402c:	mov	r5, r0
   14030:	add	r8, pc, r8
   14034:	bl	45fc <rb_set_nb@plt>
   14038:	mov	r3, #128	; 0x80
   1403c:	add	r1, r4, #144	; 0x90
   14040:	add	r2, r4, #272	; 0x110
   14044:	str	r1, [r4, #12]
   14048:	add	r1, r4, #400	; 0x190
   1404c:	str	r3, [r4, #16]
   14050:	strd	r2, [r4, #20]
   14054:	add	r2, r4, #528	; 0x210
   14058:	str	r1, [r4, #28]
   1405c:	add	r1, r4, #656	; 0x290
   14060:	str	r3, [r4, #32]
   14064:	str	r2, [r4, #36]	; 0x24
   14068:	add	r2, r4, #784	; 0x310
   1406c:	str	r3, [r4, #40]	; 0x28
   14070:	str	r1, [r4, #44]	; 0x2c
   14074:	add	r1, r4, #912	; 0x390
   14078:	str	r3, [r4, #48]	; 0x30
   1407c:	str	r2, [r4, #52]	; 0x34
   14080:	add	r2, r4, #1040	; 0x410
   14084:	str	r3, [r4, #56]	; 0x38
   14088:	str	r1, [r4, #60]	; 0x3c
   1408c:	add	r1, r4, #1168	; 0x490
   14090:	str	r3, [r4, #64]	; 0x40
   14094:	str	r2, [r4, #68]	; 0x44
   14098:	add	r2, r4, #1296	; 0x510
   1409c:	str	r3, [r4, #72]	; 0x48
   140a0:	str	r1, [r4, #76]	; 0x4c
   140a4:	add	r1, r4, #1424	; 0x590
   140a8:	str	r3, [r4, #80]	; 0x50
   140ac:	str	r2, [r4, #84]	; 0x54
   140b0:	add	r2, r4, #1552	; 0x610
   140b4:	str	r3, [r4, #88]	; 0x58
   140b8:	str	r1, [r4, #92]	; 0x5c
   140bc:	add	r1, r4, #1680	; 0x690
   140c0:	str	r3, [r4, #96]	; 0x60
   140c4:	str	r2, [r4, #100]	; 0x64
   140c8:	add	r2, r4, #1808	; 0x710
   140cc:	str	r3, [r4, #104]	; 0x68
   140d0:	str	r1, [r4, #108]	; 0x6c
   140d4:	add	r1, r4, #1936	; 0x790
   140d8:	str	r3, [r4, #112]	; 0x70
   140dc:	str	r2, [r4, #116]	; 0x74
   140e0:	add	r2, r4, #2064	; 0x810
   140e4:	str	r3, [r4, #120]	; 0x78
   140e8:	str	r1, [r4, #124]	; 0x7c
   140ec:	str	r3, [r4, #128]	; 0x80
   140f0:	str	r2, [r4, #132]	; 0x84
   140f4:	str	r3, [r4, #136]	; 0x88
   140f8:	mov	r0, r5
   140fc:	bl	44b8 <rb_get_fd@plt>
   14100:	mov	r2, #16
   14104:	mov	r1, r7
   14108:	bl	4c44 <readv@plt>
   1410c:	cmp	r0, #0
   14110:	beq	1433c <rb_epoll_init_event+0x3d0>
   14114:	blt	1430c <rb_epoll_init_event+0x3a0>
   14118:	asrs	r4, r0, #7
   1411c:	beq	140f8 <rb_epoll_init_event+0x18c>
   14120:	ldr	r0, [r6, #192]	; 0xc0
   14124:	cmp	r0, #0
   14128:	beq	14130 <rb_epoll_init_event+0x1c4>
   1412c:	bl	4884 <rb_run_one_event@plt>
   14130:	cmp	r4, #1
   14134:	beq	140f8 <rb_epoll_init_event+0x18c>
   14138:	ldr	r0, [r8, #320]	; 0x140
   1413c:	cmp	r0, #0
   14140:	beq	14148 <rb_epoll_init_event+0x1dc>
   14144:	bl	4884 <rb_run_one_event@plt>
   14148:	cmp	r4, #2
   1414c:	beq	140f8 <rb_epoll_init_event+0x18c>
   14150:	ldr	r3, [pc, #512]	; 14358 <rb_epoll_init_event+0x3ec>
   14154:	add	r3, pc, r3
   14158:	ldr	r0, [r3, #448]	; 0x1c0
   1415c:	cmp	r0, #0
   14160:	beq	14168 <rb_epoll_init_event+0x1fc>
   14164:	bl	4884 <rb_run_one_event@plt>
   14168:	cmp	r4, #3
   1416c:	beq	140f8 <rb_epoll_init_event+0x18c>
   14170:	ldr	r3, [pc, #484]	; 1435c <rb_epoll_init_event+0x3f0>
   14174:	add	r3, pc, r3
   14178:	ldr	r0, [r3, #576]	; 0x240
   1417c:	cmp	r0, #0
   14180:	beq	14188 <rb_epoll_init_event+0x21c>
   14184:	bl	4884 <rb_run_one_event@plt>
   14188:	cmp	r4, #4
   1418c:	beq	140f8 <rb_epoll_init_event+0x18c>
   14190:	ldr	r3, [pc, #456]	; 14360 <rb_epoll_init_event+0x3f4>
   14194:	add	r3, pc, r3
   14198:	ldr	r0, [r3, #704]	; 0x2c0
   1419c:	cmp	r0, #0
   141a0:	beq	141a8 <rb_epoll_init_event+0x23c>
   141a4:	bl	4884 <rb_run_one_event@plt>
   141a8:	cmp	r4, #5
   141ac:	beq	140f8 <rb_epoll_init_event+0x18c>
   141b0:	ldr	r3, [pc, #428]	; 14364 <rb_epoll_init_event+0x3f8>
   141b4:	add	r3, pc, r3
   141b8:	ldr	r0, [r3, #832]	; 0x340
   141bc:	cmp	r0, #0
   141c0:	beq	141c8 <rb_epoll_init_event+0x25c>
   141c4:	bl	4884 <rb_run_one_event@plt>
   141c8:	cmp	r4, #6
   141cc:	beq	140f8 <rb_epoll_init_event+0x18c>
   141d0:	ldr	r3, [pc, #400]	; 14368 <rb_epoll_init_event+0x3fc>
   141d4:	add	r3, pc, r3
   141d8:	ldr	r0, [r3, #960]	; 0x3c0
   141dc:	cmp	r0, #0
   141e0:	beq	141e8 <rb_epoll_init_event+0x27c>
   141e4:	bl	4884 <rb_run_one_event@plt>
   141e8:	cmp	r4, #7
   141ec:	beq	140f8 <rb_epoll_init_event+0x18c>
   141f0:	ldr	r3, [pc, #372]	; 1436c <rb_epoll_init_event+0x400>
   141f4:	add	r3, pc, r3
   141f8:	ldr	r0, [r3, #1088]	; 0x440
   141fc:	cmp	r0, #0
   14200:	beq	14208 <rb_epoll_init_event+0x29c>
   14204:	bl	4884 <rb_run_one_event@plt>
   14208:	cmp	r4, #8
   1420c:	beq	140f8 <rb_epoll_init_event+0x18c>
   14210:	ldr	r3, [pc, #344]	; 14370 <rb_epoll_init_event+0x404>
   14214:	add	r3, pc, r3
   14218:	ldr	r0, [r3, #1216]	; 0x4c0
   1421c:	cmp	r0, #0
   14220:	beq	14228 <rb_epoll_init_event+0x2bc>
   14224:	bl	4884 <rb_run_one_event@plt>
   14228:	cmp	r4, #9
   1422c:	beq	140f8 <rb_epoll_init_event+0x18c>
   14230:	ldr	r3, [pc, #316]	; 14374 <rb_epoll_init_event+0x408>
   14234:	add	r3, pc, r3
   14238:	ldr	r0, [r3, #1344]	; 0x540
   1423c:	cmp	r0, #0
   14240:	beq	14248 <rb_epoll_init_event+0x2dc>
   14244:	bl	4884 <rb_run_one_event@plt>
   14248:	cmp	r4, #10
   1424c:	beq	140f8 <rb_epoll_init_event+0x18c>
   14250:	ldr	r3, [pc, #288]	; 14378 <rb_epoll_init_event+0x40c>
   14254:	add	r3, pc, r3
   14258:	ldr	r0, [r3, #1472]	; 0x5c0
   1425c:	cmp	r0, #0
   14260:	beq	14268 <rb_epoll_init_event+0x2fc>
   14264:	bl	4884 <rb_run_one_event@plt>
   14268:	cmp	r4, #11
   1426c:	beq	140f8 <rb_epoll_init_event+0x18c>
   14270:	ldr	r3, [pc, #260]	; 1437c <rb_epoll_init_event+0x410>
   14274:	add	r3, pc, r3
   14278:	ldr	r0, [r3, #1600]	; 0x640
   1427c:	cmp	r0, #0
   14280:	beq	14288 <rb_epoll_init_event+0x31c>
   14284:	bl	4884 <rb_run_one_event@plt>
   14288:	cmp	r4, #12
   1428c:	beq	140f8 <rb_epoll_init_event+0x18c>
   14290:	ldr	r3, [pc, #232]	; 14380 <rb_epoll_init_event+0x414>
   14294:	add	r3, pc, r3
   14298:	ldr	r0, [r3, #1728]	; 0x6c0
   1429c:	cmp	r0, #0
   142a0:	beq	142a8 <rb_epoll_init_event+0x33c>
   142a4:	bl	4884 <rb_run_one_event@plt>
   142a8:	cmp	r4, #13
   142ac:	beq	140f8 <rb_epoll_init_event+0x18c>
   142b0:	ldr	r3, [pc, #204]	; 14384 <rb_epoll_init_event+0x418>
   142b4:	add	r3, pc, r3
   142b8:	ldr	r0, [r3, #1856]	; 0x740
   142bc:	cmp	r0, #0
   142c0:	beq	142c8 <rb_epoll_init_event+0x35c>
   142c4:	bl	4884 <rb_run_one_event@plt>
   142c8:	cmp	r4, #14
   142cc:	beq	140f8 <rb_epoll_init_event+0x18c>
   142d0:	ldr	r3, [pc, #176]	; 14388 <rb_epoll_init_event+0x41c>
   142d4:	add	r3, pc, r3
   142d8:	ldr	r0, [r3, #1984]	; 0x7c0
   142dc:	cmp	r0, #0
   142e0:	beq	142e8 <rb_epoll_init_event+0x37c>
   142e4:	bl	4884 <rb_run_one_event@plt>
   142e8:	cmp	r4, #15
   142ec:	beq	140f8 <rb_epoll_init_event+0x18c>
   142f0:	ldr	r3, [pc, #148]	; 1438c <rb_epoll_init_event+0x420>
   142f4:	add	r3, pc, r3
   142f8:	ldr	r0, [r3, #2112]	; 0x840
   142fc:	cmp	r0, #0
   14300:	beq	140f8 <rb_epoll_init_event+0x18c>
   14304:	bl	4884 <rb_run_one_event@plt>
   14308:	b	140f8 <rb_epoll_init_event+0x18c>
   1430c:	bl	4cbc <__errno_location@plt>
   14310:	ldr	r0, [r0]
   14314:	bl	43b0 <rb_ignore_errno@plt>
   14318:	cmp	r0, #0
   1431c:	beq	1433c <rb_epoll_init_event+0x3d0>
   14320:	ldr	r2, [pc, #104]	; 14390 <rb_epoll_init_event+0x424>
   14324:	mov	r0, r5
   14328:	mov	r3, #0
   1432c:	mov	r1, #1
   14330:	add	r2, pc, r2
   14334:	bl	447c <rb_setselect@plt>
   14338:	b	13f98 <rb_epoll_init_event+0x2c>
   1433c:	mov	r0, r5
   14340:	bl	4848 <rb_close@plt>
   14344:	bl	13f6c <rb_epoll_init_event>
   14348:	b	13f98 <rb_epoll_init_event+0x2c>
   1434c:	.word	0x000353e8
   14350:	.word	0x000072dc
   14354:	.word	0x00035340
   14358:	.word	0x0003521c
   1435c:	.word	0x000351fc
   14360:	.word	0x000351dc
   14364:	.word	0x000351bc
   14368:	.word	0x0003519c
   1436c:	.word	0x0003517c
   14370:	.word	0x0003515c
   14374:	.word	0x0003513c
   14378:	.word	0x0003511c
   1437c:	.word	0x000350fc
   14380:	.word	0x000350dc
   14384:	.word	0x000350bc
   14388:	.word	0x0003509c
   1438c:	.word	0x0003507c
   14390:	.word	0x0000005c

00014394 <signalfd_handler>:
   14394:	ldr	r3, [pc, #860]	; 146f8 <signalfd_handler+0x364>
   14398:	mov	r2, #128	; 0x80
   1439c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   143a0:	mov	r5, r0
   143a4:	strd	r6, [sp, #8]
   143a8:	str	r8, [sp, #16]
   143ac:	str	lr, [sp, #20]
   143b0:	add	r3, pc, r3
   143b4:	ldr	r8, [pc, #832]	; 146fc <signalfd_handler+0x368>
   143b8:	add	r1, r3, #144	; 0x90
   143bc:	add	ip, r3, #272	; 0x110
   143c0:	add	r0, r3, #400	; 0x190
   143c4:	mov	r7, r3
   143c8:	str	r1, [r3, #12]
   143cc:	add	r1, r3, #528	; 0x210
   143d0:	add	r6, r3, #12
   143d4:	str	r2, [r3, #16]
   143d8:	str	ip, [r3, #20]
   143dc:	add	ip, r3, #656	; 0x290
   143e0:	add	r8, pc, r8
   143e4:	str	r0, [r3, #28]
   143e8:	add	r0, r3, #784	; 0x310
   143ec:	str	r2, [r3, #24]
   143f0:	str	r1, [r3, #36]	; 0x24
   143f4:	add	r1, r3, #912	; 0x390
   143f8:	str	ip, [r3, #44]	; 0x2c
   143fc:	add	ip, r3, #1040	; 0x410
   14400:	str	r2, [r3, #32]
   14404:	str	r0, [r3, #52]	; 0x34
   14408:	add	r0, r3, #1168	; 0x490
   1440c:	str	r1, [r3, #60]	; 0x3c
   14410:	add	r1, r3, #1296	; 0x510
   14414:	str	r2, [r3, #40]	; 0x28
   14418:	str	ip, [r3, #68]	; 0x44
   1441c:	add	ip, r3, #1424	; 0x590
   14420:	str	r0, [r3, #76]	; 0x4c
   14424:	add	r0, r3, #1552	; 0x610
   14428:	str	r2, [r3, #48]	; 0x30
   1442c:	str	r1, [r3, #84]	; 0x54
   14430:	add	r1, r3, #1680	; 0x690
   14434:	str	ip, [r3, #92]	; 0x5c
   14438:	add	ip, r3, #1808	; 0x710
   1443c:	str	r2, [r3, #56]	; 0x38
   14440:	str	r0, [r3, #100]	; 0x64
   14444:	add	r0, r3, #1936	; 0x790
   14448:	str	r1, [r3, #108]	; 0x6c
   1444c:	add	r1, r3, #2064	; 0x810
   14450:	str	r2, [r3, #64]	; 0x40
   14454:	str	r2, [r3, #72]	; 0x48
   14458:	str	r2, [r3, #80]	; 0x50
   1445c:	str	r2, [r3, #88]	; 0x58
   14460:	str	r2, [r3, #96]	; 0x60
   14464:	str	r2, [r3, #104]	; 0x68
   14468:	str	r2, [r3, #112]	; 0x70
   1446c:	str	ip, [r3, #116]	; 0x74
   14470:	str	r2, [r3, #120]	; 0x78
   14474:	str	r0, [r3, #124]	; 0x7c
   14478:	str	r2, [r3, #128]	; 0x80
   1447c:	str	r1, [r3, #132]	; 0x84
   14480:	str	r2, [r3, #136]	; 0x88
   14484:	mov	r0, r5
   14488:	bl	44b8 <rb_get_fd@plt>
   1448c:	mov	r2, #16
   14490:	mov	r1, r6
   14494:	bl	4c44 <readv@plt>
   14498:	cmp	r0, #0
   1449c:	beq	146d8 <signalfd_handler+0x344>
   144a0:	blt	14698 <signalfd_handler+0x304>
   144a4:	asrs	r4, r0, #7
   144a8:	beq	14484 <signalfd_handler+0xf0>
   144ac:	ldr	r0, [r7, #192]	; 0xc0
   144b0:	cmp	r0, #0
   144b4:	beq	144bc <signalfd_handler+0x128>
   144b8:	bl	4884 <rb_run_one_event@plt>
   144bc:	cmp	r4, #1
   144c0:	beq	14484 <signalfd_handler+0xf0>
   144c4:	ldr	r0, [r8, #320]	; 0x140
   144c8:	cmp	r0, #0
   144cc:	beq	144d4 <signalfd_handler+0x140>
   144d0:	bl	4884 <rb_run_one_event@plt>
   144d4:	cmp	r4, #2
   144d8:	beq	14484 <signalfd_handler+0xf0>
   144dc:	ldr	r3, [pc, #540]	; 14700 <signalfd_handler+0x36c>
   144e0:	add	r3, pc, r3
   144e4:	ldr	r0, [r3, #448]	; 0x1c0
   144e8:	cmp	r0, #0
   144ec:	beq	144f4 <signalfd_handler+0x160>
   144f0:	bl	4884 <rb_run_one_event@plt>
   144f4:	cmp	r4, #3
   144f8:	beq	14484 <signalfd_handler+0xf0>
   144fc:	ldr	r3, [pc, #512]	; 14704 <signalfd_handler+0x370>
   14500:	add	r3, pc, r3
   14504:	ldr	r0, [r3, #576]	; 0x240
   14508:	cmp	r0, #0
   1450c:	beq	14514 <signalfd_handler+0x180>
   14510:	bl	4884 <rb_run_one_event@plt>
   14514:	cmp	r4, #4
   14518:	beq	14484 <signalfd_handler+0xf0>
   1451c:	ldr	r3, [pc, #484]	; 14708 <signalfd_handler+0x374>
   14520:	add	r3, pc, r3
   14524:	ldr	r0, [r3, #704]	; 0x2c0
   14528:	cmp	r0, #0
   1452c:	beq	14534 <signalfd_handler+0x1a0>
   14530:	bl	4884 <rb_run_one_event@plt>
   14534:	cmp	r4, #5
   14538:	beq	14484 <signalfd_handler+0xf0>
   1453c:	ldr	r3, [pc, #456]	; 1470c <signalfd_handler+0x378>
   14540:	add	r3, pc, r3
   14544:	ldr	r0, [r3, #832]	; 0x340
   14548:	cmp	r0, #0
   1454c:	beq	14554 <signalfd_handler+0x1c0>
   14550:	bl	4884 <rb_run_one_event@plt>
   14554:	cmp	r4, #6
   14558:	beq	14484 <signalfd_handler+0xf0>
   1455c:	ldr	r3, [pc, #428]	; 14710 <signalfd_handler+0x37c>
   14560:	add	r3, pc, r3
   14564:	ldr	r0, [r3, #960]	; 0x3c0
   14568:	cmp	r0, #0
   1456c:	beq	14574 <signalfd_handler+0x1e0>
   14570:	bl	4884 <rb_run_one_event@plt>
   14574:	cmp	r4, #7
   14578:	beq	14484 <signalfd_handler+0xf0>
   1457c:	ldr	r3, [pc, #400]	; 14714 <signalfd_handler+0x380>
   14580:	add	r3, pc, r3
   14584:	ldr	r0, [r3, #1088]	; 0x440
   14588:	cmp	r0, #0
   1458c:	beq	14594 <signalfd_handler+0x200>
   14590:	bl	4884 <rb_run_one_event@plt>
   14594:	cmp	r4, #8
   14598:	beq	14484 <signalfd_handler+0xf0>
   1459c:	ldr	r3, [pc, #372]	; 14718 <signalfd_handler+0x384>
   145a0:	add	r3, pc, r3
   145a4:	ldr	r0, [r3, #1216]	; 0x4c0
   145a8:	cmp	r0, #0
   145ac:	beq	145b4 <signalfd_handler+0x220>
   145b0:	bl	4884 <rb_run_one_event@plt>
   145b4:	cmp	r4, #9
   145b8:	beq	14484 <signalfd_handler+0xf0>
   145bc:	ldr	r3, [pc, #344]	; 1471c <signalfd_handler+0x388>
   145c0:	add	r3, pc, r3
   145c4:	ldr	r0, [r3, #1344]	; 0x540
   145c8:	cmp	r0, #0
   145cc:	beq	145d4 <signalfd_handler+0x240>
   145d0:	bl	4884 <rb_run_one_event@plt>
   145d4:	cmp	r4, #10
   145d8:	beq	14484 <signalfd_handler+0xf0>
   145dc:	ldr	r3, [pc, #316]	; 14720 <signalfd_handler+0x38c>
   145e0:	add	r3, pc, r3
   145e4:	ldr	r0, [r3, #1472]	; 0x5c0
   145e8:	cmp	r0, #0
   145ec:	beq	145f4 <signalfd_handler+0x260>
   145f0:	bl	4884 <rb_run_one_event@plt>
   145f4:	cmp	r4, #11
   145f8:	beq	14484 <signalfd_handler+0xf0>
   145fc:	ldr	r3, [pc, #288]	; 14724 <signalfd_handler+0x390>
   14600:	add	r3, pc, r3
   14604:	ldr	r0, [r3, #1600]	; 0x640
   14608:	cmp	r0, #0
   1460c:	beq	14614 <signalfd_handler+0x280>
   14610:	bl	4884 <rb_run_one_event@plt>
   14614:	cmp	r4, #12
   14618:	beq	14484 <signalfd_handler+0xf0>
   1461c:	ldr	r3, [pc, #260]	; 14728 <signalfd_handler+0x394>
   14620:	add	r3, pc, r3
   14624:	ldr	r0, [r3, #1728]	; 0x6c0
   14628:	cmp	r0, #0
   1462c:	beq	14634 <signalfd_handler+0x2a0>
   14630:	bl	4884 <rb_run_one_event@plt>
   14634:	cmp	r4, #13
   14638:	beq	14484 <signalfd_handler+0xf0>
   1463c:	ldr	r3, [pc, #232]	; 1472c <signalfd_handler+0x398>
   14640:	add	r3, pc, r3
   14644:	ldr	r0, [r3, #1856]	; 0x740
   14648:	cmp	r0, #0
   1464c:	beq	14654 <signalfd_handler+0x2c0>
   14650:	bl	4884 <rb_run_one_event@plt>
   14654:	cmp	r4, #14
   14658:	beq	14484 <signalfd_handler+0xf0>
   1465c:	ldr	r3, [pc, #204]	; 14730 <signalfd_handler+0x39c>
   14660:	add	r3, pc, r3
   14664:	ldr	r0, [r3, #1984]	; 0x7c0
   14668:	cmp	r0, #0
   1466c:	beq	14674 <signalfd_handler+0x2e0>
   14670:	bl	4884 <rb_run_one_event@plt>
   14674:	cmp	r4, #15
   14678:	beq	14484 <signalfd_handler+0xf0>
   1467c:	ldr	r3, [pc, #176]	; 14734 <signalfd_handler+0x3a0>
   14680:	add	r3, pc, r3
   14684:	ldr	r0, [r3, #2112]	; 0x840
   14688:	cmp	r0, #0
   1468c:	beq	14484 <signalfd_handler+0xf0>
   14690:	bl	4884 <rb_run_one_event@plt>
   14694:	b	14484 <signalfd_handler+0xf0>
   14698:	bl	4cbc <__errno_location@plt>
   1469c:	ldr	r0, [r0]
   146a0:	bl	43b0 <rb_ignore_errno@plt>
   146a4:	cmp	r0, #0
   146a8:	beq	146d8 <signalfd_handler+0x344>
   146ac:	ldr	r2, [pc, #132]	; 14738 <signalfd_handler+0x3a4>
   146b0:	mov	r0, r5
   146b4:	mov	r3, #0
   146b8:	mov	r1, #1
   146bc:	ldrd	r4, [sp]
   146c0:	ldrd	r6, [sp, #8]
   146c4:	add	r2, pc, r2
   146c8:	ldr	r8, [sp, #16]
   146cc:	ldr	lr, [sp, #20]
   146d0:	add	sp, sp, #24
   146d4:	b	447c <rb_setselect@plt>
   146d8:	mov	r0, r5
   146dc:	bl	4848 <rb_close@plt>
   146e0:	ldrd	r4, [sp]
   146e4:	ldrd	r6, [sp, #8]
   146e8:	ldr	r8, [sp, #16]
   146ec:	ldr	lr, [sp, #20]
   146f0:	add	sp, sp, #24
   146f4:	b	13f6c <rb_epoll_init_event>
   146f8:	.word	0x00034fc0
   146fc:	.word	0x00034f90
   14700:	.word	0x00034e90
   14704:	.word	0x00034e70
   14708:	.word	0x00034e50
   1470c:	.word	0x00034e30
   14710:	.word	0x00034e10
   14714:	.word	0x00034df0
   14718:	.word	0x00034dd0
   1471c:	.word	0x00034db0
   14720:	.word	0x00034d90
   14724:	.word	0x00034d70
   14728:	.word	0x00034d50
   1472c:	.word	0x00034d30
   14730:	.word	0x00034d10
   14734:	.word	0x00034cf0
   14738:	.word	0xfffffcc8

0001473c <rb_epoll_sched_event>:
   1473c:	ldr	r3, [pc, #544]	; 14964 <rb_epoll_sched_event+0x228>
   14740:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14744:	mov	r5, r0
   14748:	add	r3, pc, r3
   1474c:	ldr	r4, [r3, #4]
   14750:	strd	r6, [sp, #8]
   14754:	str	r8, [sp, #16]
   14758:	mov	r8, r1
   1475c:	str	lr, [sp, #20]
   14760:	sub	sp, sp, #80	; 0x50
   14764:	cmp	r4, #0
   14768:	bne	1481c <rb_epoll_sched_event+0xe0>
   1476c:	add	r7, sp, #16
   14770:	mov	r2, #64	; 0x40
   14774:	mov	r1, r4
   14778:	mov	r0, r7
   1477c:	bl	4608 <memset@plt>
   14780:	mov	r1, #4
   14784:	mov	r0, #1
   14788:	bl	45c0 <calloc@plt>
   1478c:	subs	r6, r0, #0
   14790:	beq	14940 <rb_epoll_sched_event+0x204>
   14794:	str	r6, [r5, #40]	; 0x28
   14798:	bl	4458 <__libc_current_sigrtmin@plt>
   1479c:	mov	r1, r7
   147a0:	mov	r2, r6
   147a4:	str	r5, [sp, #16]
   147a8:	str	r0, [sp, #20]
   147ac:	mov	r0, r4
   147b0:	bl	4500 <timer_create@plt>
   147b4:	cmp	r0, #0
   147b8:	blt	148d0 <rb_epoll_sched_event+0x194>
   147bc:	ldr	r3, [r5, #24]
   147c0:	mov	r0, #0
   147c4:	mov	r1, #0
   147c8:	mov	r2, sp
   147cc:	strd	r0, [sp]
   147d0:	strd	r0, [r2, #8]
   147d4:	str	r8, [sp, #8]
   147d8:	cmp	r3, #0
   147dc:	mov	r3, #0
   147e0:	ldrdne	r0, [sp, #8]
   147e4:	strdne	r0, [sp]
   147e8:	mov	r1, r3
   147ec:	ldr	r0, [r6]
   147f0:	bl	4734 <timer_settime@plt>
   147f4:	cmp	r0, #0
   147f8:	movge	r4, #1
   147fc:	blt	14944 <rb_epoll_sched_event+0x208>
   14800:	mov	r0, r4
   14804:	add	sp, sp, #80	; 0x50
   14808:	ldrd	r4, [sp]
   1480c:	ldrd	r6, [sp, #8]
   14810:	ldr	r8, [sp, #16]
   14814:	add	sp, sp, #20
   14818:	pop	{pc}		; (ldr pc, [sp], #4)
   1481c:	mov	r1, #0
   14820:	mov	r0, r1
   14824:	bl	4b9c <timerfd_create@plt>
   14828:	subs	r7, r0, #0
   1482c:	blt	1491c <rb_epoll_sched_event+0x1e0>
   14830:	ldr	r3, [r5, #24]
   14834:	mov	r0, #0
   14838:	mov	r1, #0
   1483c:	add	r2, sp, #16
   14840:	strd	r0, [sp, #16]
   14844:	strd	r0, [r2, #8]
   14848:	str	r8, [sp, #24]
   1484c:	cmp	r3, #0
   14850:	mov	r3, #0
   14854:	ldrdne	r0, [sp, #24]
   14858:	strdne	r0, [sp, #16]
   1485c:	mov	r1, r3
   14860:	mov	r0, r7
   14864:	bl	4c20 <timerfd_settime@plt>
   14868:	cmp	r0, #0
   1486c:	blt	148f0 <rb_epoll_sched_event+0x1b4>
   14870:	ldr	r6, [pc, #240]	; 14968 <rb_epoll_sched_event+0x22c>
   14874:	mov	r1, #136	; 0x88
   14878:	mov	r4, #1
   1487c:	ldr	r2, [pc, #232]	; 1496c <rb_epoll_sched_event+0x230>
   14880:	ldr	r3, [r5, #20]
   14884:	add	r6, pc, r6
   14888:	add	r6, r6, #2192	; 0x890
   1488c:	add	r2, pc, r2
   14890:	mov	r0, r6
   14894:	bl	4b84 <snprintf@plt>
   14898:	mov	r2, r6
   1489c:	mov	r1, #64	; 0x40
   148a0:	mov	r0, r7
   148a4:	bl	4a58 <rb_open@plt>
   148a8:	mov	r6, r0
   148ac:	bl	45fc <rb_set_nb@plt>
   148b0:	ldr	r2, [pc, #184]	; 14970 <rb_epoll_sched_event+0x234>
   148b4:	mov	r0, r6
   148b8:	mov	r3, r5
   148bc:	mov	r1, r4
   148c0:	str	r6, [r5, #40]	; 0x28
   148c4:	add	r2, pc, r2
   148c8:	bl	447c <rb_setselect@plt>
   148cc:	b	14800 <rb_epoll_sched_event+0xc4>
   148d0:	bl	4cbc <__errno_location@plt>
   148d4:	ldr	r0, [r0]
   148d8:	bl	4374 <strerror@plt>
   148dc:	mov	r1, r0
   148e0:	ldr	r0, [pc, #140]	; 14974 <rb_epoll_sched_event+0x238>
   148e4:	add	r0, pc, r0
   148e8:	bl	48f0 <rb_lib_log@plt>
   148ec:	b	14800 <rb_epoll_sched_event+0xc4>
   148f0:	bl	4cbc <__errno_location@plt>
   148f4:	ldr	r0, [r0]
   148f8:	mov	r4, #0
   148fc:	bl	4374 <strerror@plt>
   14900:	mov	r1, r0
   14904:	ldr	r0, [pc, #108]	; 14978 <rb_epoll_sched_event+0x23c>
   14908:	add	r0, pc, r0
   1490c:	bl	48f0 <rb_lib_log@plt>
   14910:	mov	r0, r7
   14914:	bl	4914 <close@plt>
   14918:	b	14800 <rb_epoll_sched_event+0xc4>
   1491c:	bl	4cbc <__errno_location@plt>
   14920:	ldr	r0, [r0]
   14924:	mov	r4, #0
   14928:	bl	4374 <strerror@plt>
   1492c:	mov	r1, r0
   14930:	ldr	r0, [pc, #68]	; 1497c <rb_epoll_sched_event+0x240>
   14934:	add	r0, pc, r0
   14938:	bl	48f0 <rb_lib_log@plt>
   1493c:	b	14800 <rb_epoll_sched_event+0xc4>
   14940:	bl	495c <rb_outofmemory@plt>
   14944:	bl	4cbc <__errno_location@plt>
   14948:	ldr	r0, [r0]
   1494c:	bl	4374 <strerror@plt>
   14950:	mov	r1, r0
   14954:	ldr	r0, [pc, #36]	; 14980 <rb_epoll_sched_event+0x244>
   14958:	add	r0, pc, r0
   1495c:	bl	48f0 <rb_lib_log@plt>
   14960:	b	14800 <rb_epoll_sched_event+0xc4>
   14964:	.word	0x00034c28
   14968:	.word	0x00034aec
   1496c:	.word	0x00006aac
   14970:	.word	0xfffff0f0
   14974:	.word	0x00006a60
   14978:	.word	0x00006a18
   1497c:	.word	0x000069d8
   14980:	.word	0x00006a00

00014984 <rb_epoll_unsched_event>:
   14984:	ldr	r3, [pc, #96]	; 149ec <rb_epoll_unsched_event+0x68>
   14988:	str	r4, [sp, #-8]!
   1498c:	mov	r4, r0
   14990:	ldr	r0, [r0, #40]	; 0x28
   14994:	add	r3, pc, r3
   14998:	ldr	r3, [r3, #4]
   1499c:	str	lr, [sp, #4]
   149a0:	cmp	r3, #0
   149a4:	bne	149d4 <rb_epoll_unsched_event+0x50>
   149a8:	ldr	r0, [r0]
   149ac:	bl	4a4c <timer_delete@plt>
   149b0:	ldr	r0, [r4, #40]	; 0x28
   149b4:	cmp	r0, #0
   149b8:	beq	149c0 <rb_epoll_unsched_event+0x3c>
   149bc:	bl	46d4 <free@plt>
   149c0:	mov	r3, #0
   149c4:	str	r3, [r4, #40]	; 0x28
   149c8:	ldr	r4, [sp]
   149cc:	add	sp, sp, #4
   149d0:	pop	{pc}		; (ldr pc, [sp], #4)
   149d4:	bl	4848 <rb_close@plt>
   149d8:	mov	r3, #0
   149dc:	str	r3, [r4, #40]	; 0x28
   149e0:	ldr	r4, [sp]
   149e4:	add	sp, sp, #4
   149e8:	pop	{pc}		; (ldr pc, [sp], #4)
   149ec:	.word	0x000349dc

000149f0 <rb_setup_fd_poll>:
   149f0:	mov	r0, #0
   149f4:	bx	lr

000149f8 <rb_init_netio_poll>:
   149f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   149fc:	strd	r6, [sp, #8]
   14a00:	str	r8, [sp, #16]
   14a04:	str	lr, [sp, #20]
   14a08:	bl	4440 <rb_getmaxconnect@plt>
   14a0c:	lsl	r1, r0, #3
   14a10:	mov	r0, #1
   14a14:	bl	45c0 <calloc@plt>
   14a18:	cmp	r0, #0
   14a1c:	beq	14a88 <rb_init_netio_poll+0x90>
   14a20:	ldr	r7, [pc, #100]	; 14a8c <rb_init_netio_poll+0x94>
   14a24:	mov	r4, #0
   14a28:	mvn	r6, #0
   14a2c:	ldr	r5, [pc, #92]	; 14a90 <rb_init_netio_poll+0x98>
   14a30:	add	r7, pc, r7
   14a34:	str	r0, [r7]
   14a38:	add	r5, pc, r5
   14a3c:	bl	4440 <rb_getmaxconnect@plt>
   14a40:	str	r0, [r7, #8]
   14a44:	b	14a54 <rb_init_netio_poll+0x5c>
   14a48:	ldr	r3, [r5]
   14a4c:	str	r6, [r3, r4, lsl #3]
   14a50:	add	r4, r4, #1
   14a54:	bl	4440 <rb_getmaxconnect@plt>
   14a58:	cmp	r0, r4
   14a5c:	bgt	14a48 <rb_init_netio_poll+0x50>
   14a60:	ldr	r3, [pc, #44]	; 14a94 <rb_init_netio_poll+0x9c>
   14a64:	mov	r2, #0
   14a68:	mov	r0, r2
   14a6c:	ldrd	r4, [sp]
   14a70:	ldrd	r6, [sp, #8]
   14a74:	add	r3, pc, r3
   14a78:	ldr	r8, [sp, #16]
   14a7c:	add	sp, sp, #20
   14a80:	str	r2, [r3, #4]
   14a84:	pop	{pc}		; (ldr pc, [sp], #4)
   14a88:	bl	495c <rb_outofmemory@plt>
   14a8c:	.word	0x00035258
   14a90:	.word	0x00035250
   14a94:	.word	0x00035214

00014a98 <rb_setselect_poll>:
   14a98:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14a9c:	subs	r4, r0, #0
   14aa0:	strd	r6, [sp, #8]
   14aa4:	str	r8, [sp, #16]
   14aa8:	str	lr, [sp, #20]
   14aac:	beq	14b24 <rb_setselect_poll+0x8c>
   14ab0:	tst	r1, #1
   14ab4:	and	r1, r1, #2
   14ab8:	beq	14b38 <rb_setselect_poll+0xa0>
   14abc:	cmp	r2, #0
   14ac0:	strd	r2, [r4, #28]
   14ac4:	ldr	ip, [r4, #20]
   14ac8:	beq	14bb4 <rb_setselect_poll+0x11c>
   14acc:	orr	ip, ip, #64	; 0x40
   14ad0:	cmp	r1, #0
   14ad4:	str	ip, [r4, #20]
   14ad8:	bne	14ba4 <rb_setselect_poll+0x10c>
   14adc:	ldr	r6, [pc, #360]	; 14c4c <rb_setselect_poll+0x1b4>
   14ae0:	ldr	r2, [r4, #12]
   14ae4:	add	r6, pc, r6
   14ae8:	ldr	r5, [r6]
   14aec:	ldr	r3, [r6, #8]
   14af0:	cmp	r2, r3
   14af4:	bge	14bd4 <rb_setselect_poll+0x13c>
   14af8:	ldr	r0, [pc, #336]	; 14c50 <rb_setselect_poll+0x1b8>
   14afc:	add	ip, r5, r2, lsl #3
   14b00:	ldr	r1, [r4, #20]
   14b04:	add	r0, pc, r0
   14b08:	ldr	r3, [r0, #4]
   14b0c:	cmp	r1, #0
   14b10:	ble	14b5c <rb_setselect_poll+0xc4>
   14b14:	cmp	r2, r3
   14b18:	strh	r1, [ip, #4]
   14b1c:	str	r2, [r5, r2, lsl #3]
   14b20:	strgt	r2, [r0, #4]
   14b24:	ldrd	r4, [sp]
   14b28:	ldrd	r6, [sp, #8]
   14b2c:	ldr	r8, [sp, #16]
   14b30:	add	sp, sp, #20
   14b34:	pop	{pc}		; (ldr pc, [sp], #4)
   14b38:	cmp	r1, #0
   14b3c:	beq	14adc <rb_setselect_poll+0x44>
   14b40:	cmp	r2, #0
   14b44:	strd	r2, [r4, #36]	; 0x24
   14b48:	ldr	ip, [r4, #20]
   14b4c:	beq	14bc8 <rb_setselect_poll+0x130>
   14b50:	orr	ip, ip, #256	; 0x100
   14b54:	str	ip, [r4, #20]
   14b58:	b	14adc <rb_setselect_poll+0x44>
   14b5c:	mov	r0, #0
   14b60:	mvn	r1, #0
   14b64:	cmp	r2, r3
   14b68:	strh	r0, [ip, #4]
   14b6c:	str	r1, [r5, r2, lsl #3]
   14b70:	bne	14b24 <rb_setselect_poll+0x8c>
   14b74:	cmp	r3, r0
   14b78:	bge	14b8c <rb_setselect_poll+0xf4>
   14b7c:	b	14b24 <rb_setselect_poll+0x8c>
   14b80:	ldr	r2, [r5, r3, lsl #3]
   14b84:	cmn	r2, #1
   14b88:	bne	14c38 <rb_setselect_poll+0x1a0>
   14b8c:	subs	r3, r3, #1
   14b90:	bcs	14b80 <rb_setselect_poll+0xe8>
   14b94:	ldr	r2, [pc, #184]	; 14c54 <rb_setselect_poll+0x1bc>
   14b98:	add	r2, pc, r2
   14b9c:	str	r3, [r2, #4]
   14ba0:	b	14b24 <rb_setselect_poll+0x8c>
   14ba4:	orr	ip, ip, #256	; 0x100
   14ba8:	str	ip, [r4, #20]
   14bac:	strd	r2, [r4, #36]	; 0x24
   14bb0:	b	14adc <rb_setselect_poll+0x44>
   14bb4:	bic	ip, ip, #64	; 0x40
   14bb8:	cmp	r1, #0
   14bbc:	str	ip, [r4, #20]
   14bc0:	beq	14adc <rb_setselect_poll+0x44>
   14bc4:	strd	r2, [r4, #36]	; 0x24
   14bc8:	bic	ip, ip, #256	; 0x100
   14bcc:	str	ip, [r4, #20]
   14bd0:	b	14adc <rb_setselect_poll+0x44>
   14bd4:	add	r3, r3, #1024	; 0x400
   14bd8:	mov	r0, r5
   14bdc:	lsl	r7, r3, #3
   14be0:	str	r3, [r6, #8]
   14be4:	mov	r1, r7
   14be8:	bl	4c14 <realloc@plt>
   14bec:	subs	r5, r0, #0
   14bf0:	beq	14c48 <rb_setselect_poll+0x1b0>
   14bf4:	sub	r0, r7, #8128	; 0x1fc0
   14bf8:	mov	r2, #8192	; 0x2000
   14bfc:	str	r5, [r6]
   14c00:	sub	r0, r0, #56	; 0x38
   14c04:	mov	r1, #0
   14c08:	add	r0, r5, r0
   14c0c:	bl	4608 <memset@plt>
   14c10:	sub	r3, r7, #8192	; 0x2000
   14c14:	sub	r2, r7, #8
   14c18:	add	r3, r5, r3
   14c1c:	add	r2, r5, r2
   14c20:	mvn	r1, #0
   14c24:	str	r1, [r3, #8]!
   14c28:	cmp	r2, r3
   14c2c:	bne	14c24 <rb_setselect_poll+0x18c>
   14c30:	ldr	r2, [r4, #12]
   14c34:	b	14af8 <rb_setselect_poll+0x60>
   14c38:	ldr	r2, [pc, #24]	; 14c58 <rb_setselect_poll+0x1c0>
   14c3c:	add	r2, pc, r2
   14c40:	str	r3, [r2, #4]
   14c44:	b	14b24 <rb_setselect_poll+0x8c>
   14c48:	bl	495c <rb_outofmemory@plt>
   14c4c:	.word	0x000351a4
   14c50:	.word	0x00035184
   14c54:	.word	0x000350f0
   14c58:	.word	0x0003504c

00014c5c <rb_select_poll>:
   14c5c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14c60:	mov	r2, r0
   14c64:	strd	r6, [sp, #8]
   14c68:	ldr	r6, [pc, #496]	; 14e60 <rb_select_poll+0x204>
   14c6c:	strd	r8, [sp, #16]
   14c70:	ldr	r7, [pc, #492]	; 14e64 <rb_select_poll+0x208>
   14c74:	str	sl, [sp, #24]
   14c78:	str	lr, [sp, #28]
   14c7c:	add	r6, pc, r6
   14c80:	ldrd	r0, [r6]
   14c84:	add	r7, pc, r7
   14c88:	add	r1, r1, #1
   14c8c:	bl	49d4 <poll@plt>
   14c90:	mov	r4, r0
   14c94:	bl	4968 <rb_set_time@plt>
   14c98:	cmp	r4, #0
   14c9c:	blt	14e34 <rb_select_poll+0x1d8>
   14ca0:	beq	14dd0 <rb_select_poll+0x174>
   14ca4:	ldr	r1, [r6, #4]
   14ca8:	cmp	r1, #0
   14cac:	blt	14dd0 <rb_select_poll+0x174>
   14cb0:	ldr	r9, [pc, #432]	; 14e68 <rb_select_poll+0x20c>
   14cb4:	mov	r4, #0
   14cb8:	ldr	r8, [pc, #428]	; 14e6c <rb_select_poll+0x210>
   14cbc:	add	r9, pc, r9
   14cc0:	add	r8, pc, r8
   14cc4:	b	14cd4 <rb_select_poll+0x78>
   14cc8:	add	r4, r4, #1
   14ccc:	cmp	r4, r1
   14cd0:	bgt	14dd0 <rb_select_poll+0x174>
   14cd4:	ldr	r3, [r6]
   14cd8:	add	r0, r3, r4, lsl #3
   14cdc:	ldr	r2, [r3, r4, lsl #3]
   14ce0:	ldrsh	sl, [r0, #6]
   14ce4:	cmp	sl, #0
   14ce8:	lsrne	r3, r2, #31
   14cec:	moveq	r3, #1
   14cf0:	cmp	r3, #0
   14cf4:	bne	14cc8 <rb_select_poll+0x6c>
   14cf8:	ldr	r0, [pc, #368]	; 14e70 <rb_select_poll+0x214>
   14cfc:	asr	r3, r2, #24
   14d00:	eor	r3, r3, r2, asr #12
   14d04:	eor	r3, r3, r2
   14d08:	ldr	r0, [r7, r0]
   14d0c:	ubfx	r3, r3, #0, #12
   14d10:	add	r3, r3, r3, lsl #1
   14d14:	ldr	r0, [r0]
   14d18:	ldr	r3, [r0, r3, lsl #2]
   14d1c:	cmp	r3, #0
   14d20:	bne	14d34 <rb_select_poll+0xd8>
   14d24:	b	14cc8 <rb_select_poll+0x6c>
   14d28:	ldr	r3, [r3, #8]
   14d2c:	cmp	r3, #0
   14d30:	beq	14cc8 <rb_select_poll+0x6c>
   14d34:	ldr	r5, [r3]
   14d38:	ldr	r0, [r5, #12]
   14d3c:	cmp	r2, r0
   14d40:	bne	14d28 <rb_select_poll+0xcc>
   14d44:	tst	sl, #89	; 0x59
   14d48:	beq	14d70 <rb_select_poll+0x114>
   14d4c:	ldr	r2, [r5, #28]
   14d50:	mov	r3, #0
   14d54:	str	r3, [r5, #28]
   14d58:	ldr	r1, [r5, #32]
   14d5c:	str	r3, [r5, #32]
   14d60:	cmp	r2, r3
   14d64:	beq	14dec <rb_select_poll+0x190>
   14d68:	mov	r0, r5
   14d6c:	blx	r2
   14d70:	ldrb	r3, [r5, #16]
   14d74:	tst	r3, #1
   14d78:	beq	14da8 <rb_select_poll+0x14c>
   14d7c:	tst	sl, #284	; 0x11c
   14d80:	beq	14da8 <rb_select_poll+0x14c>
   14d84:	ldr	r2, [r5, #36]	; 0x24
   14d88:	mov	r3, #0
   14d8c:	str	r3, [r5, #36]	; 0x24
   14d90:	ldr	r1, [r5, #40]	; 0x28
   14d94:	str	r3, [r5, #40]	; 0x28
   14d98:	cmp	r2, r3
   14d9c:	beq	14e50 <rb_select_poll+0x1f4>
   14da0:	mov	r0, r5
   14da4:	blx	r2
   14da8:	ldr	r3, [r5, #28]
   14dac:	cmp	r3, #0
   14db0:	beq	14df8 <rb_select_poll+0x19c>
   14db4:	ldr	r3, [r5, #36]	; 0x24
   14db8:	cmp	r3, #0
   14dbc:	beq	14e18 <rb_select_poll+0x1bc>
   14dc0:	ldr	r1, [r8, #4]
   14dc4:	add	r4, r4, #1
   14dc8:	cmp	r4, r1
   14dcc:	ble	14cd4 <rb_select_poll+0x78>
   14dd0:	mov	r0, #0
   14dd4:	ldrd	r4, [sp]
   14dd8:	ldrd	r6, [sp, #8]
   14ddc:	ldrd	r8, [sp, #16]
   14de0:	ldr	sl, [sp, #24]
   14de4:	add	sp, sp, #28
   14de8:	pop	{pc}		; (ldr pc, [sp], #4)
   14dec:	ldrb	r3, [r5, #16]
   14df0:	tst	r3, #1
   14df4:	bne	14d7c <rb_select_poll+0x120>
   14df8:	mov	r3, #0
   14dfc:	mov	r1, #1
   14e00:	mov	r2, r3
   14e04:	mov	r0, r5
   14e08:	bl	14a98 <rb_setselect_poll>
   14e0c:	ldr	r3, [r5, #36]	; 0x24
   14e10:	cmp	r3, #0
   14e14:	bne	14dc0 <rb_select_poll+0x164>
   14e18:	mov	r3, #0
   14e1c:	mov	r1, #2
   14e20:	mov	r0, r5
   14e24:	mov	r2, r3
   14e28:	bl	14a98 <rb_setselect_poll>
   14e2c:	ldr	r1, [r9, #4]
   14e30:	b	14cc8 <rb_select_poll+0x6c>
   14e34:	bl	4cbc <__errno_location@plt>
   14e38:	ldr	r0, [r0]
   14e3c:	bl	43b0 <rb_ignore_errno@plt>
   14e40:	cmp	r0, #0
   14e44:	movne	r0, #5
   14e48:	beq	14dd0 <rb_select_poll+0x174>
   14e4c:	b	14dd4 <rb_select_poll+0x178>
   14e50:	ldr	r3, [r5, #28]
   14e54:	cmp	r3, #0
   14e58:	bne	14e18 <rb_select_poll+0x1bc>
   14e5c:	b	14df8 <rb_select_poll+0x19c>
   14e60:	.word	0x0003500c
   14e64:	.word	0x00017374
   14e68:	.word	0x00034fcc
   14e6c:	.word	0x00034fc8
   14e70:	.word	0x000003bc

00014e74 <rb_ports_supports_event>:
   14e74:	str	r4, [sp, #-8]!
   14e78:	str	lr, [sp, #4]
   14e7c:	bl	4cbc <__errno_location@plt>
   14e80:	mov	r3, #38	; 0x26
   14e84:	ldr	r4, [sp]
   14e88:	add	sp, sp, #4
   14e8c:	str	r3, [r0]
   14e90:	mov	r0, #0
   14e94:	pop	{pc}		; (ldr pc, [sp], #4)

00014e98 <rb_ports_init_event>:
   14e98:	bx	lr

00014e9c <rb_ports_sched_event>:
   14e9c:	str	r4, [sp, #-8]!
   14ea0:	str	lr, [sp, #4]
   14ea4:	bl	4cbc <__errno_location@plt>
   14ea8:	mov	r3, #38	; 0x26
   14eac:	ldr	r4, [sp]
   14eb0:	add	sp, sp, #4
   14eb4:	str	r3, [r0]
   14eb8:	mvn	r0, #0
   14ebc:	pop	{pc}		; (ldr pc, [sp], #4)

00014ec0 <rb_ports_unsched_event>:
   14ec0:	bx	lr

00014ec4 <rb_init_netio_ports>:
   14ec4:	mov	r0, #38	; 0x26
   14ec8:	bx	lr

00014ecc <rb_setselect_ports>:
   14ecc:	str	r4, [sp, #-8]!
   14ed0:	str	lr, [sp, #4]
   14ed4:	bl	4cbc <__errno_location@plt>
   14ed8:	mov	r3, #38	; 0x26
   14edc:	ldr	r4, [sp]
   14ee0:	add	sp, sp, #4
   14ee4:	str	r3, [r0]
   14ee8:	pop	{pc}		; (ldr pc, [sp], #4)

00014eec <rb_select_ports>:
   14eec:	str	r4, [sp, #-8]!
   14ef0:	str	lr, [sp, #4]
   14ef4:	bl	4cbc <__errno_location@plt>
   14ef8:	mov	r3, #38	; 0x26
   14efc:	ldr	r4, [sp]
   14f00:	add	sp, sp, #4
   14f04:	str	r3, [r0]
   14f08:	mvn	r0, #0
   14f0c:	pop	{pc}		; (ldr pc, [sp], #4)

00014f10 <rb_setup_fd_ports>:
   14f10:	str	r4, [sp, #-8]!
   14f14:	str	lr, [sp, #4]
   14f18:	bl	4cbc <__errno_location@plt>
   14f1c:	mov	r3, #38	; 0x26
   14f20:	ldr	r4, [sp]
   14f24:	add	sp, sp, #4
   14f28:	str	r3, [r0]
   14f2c:	mvn	r0, #0
   14f30:	pop	{pc}		; (ldr pc, [sp], #4)

00014f34 <rb_init_netio_sigio>:
   14f34:	strd	r4, [sp, #-16]!
   14f38:	ldr	r5, [pc, #204]	; 1500c <rb_init_netio_sigio+0xd8>
   14f3c:	str	r6, [sp, #8]
   14f40:	str	lr, [sp, #12]
   14f44:	bl	4440 <rb_getmaxconnect@plt>
   14f48:	lsl	r1, r0, #3
   14f4c:	mov	r0, #1
   14f50:	bl	45c0 <calloc@plt>
   14f54:	cmp	r0, #0
   14f58:	add	r5, pc, r5
   14f5c:	beq	15008 <rb_init_netio_sigio+0xd4>
   14f60:	ldr	r3, [pc, #168]	; 15010 <rb_init_netio_sigio+0xdc>
   14f64:	mov	r4, #0
   14f68:	mvn	r6, #0
   14f6c:	ldr	r5, [r5, r3]
   14f70:	str	r0, [r5]
   14f74:	bl	4440 <rb_getmaxconnect@plt>
   14f78:	str	r0, [r5, #8]
   14f7c:	b	14f8c <rb_init_netio_sigio+0x58>
   14f80:	ldr	r3, [r5]
   14f84:	str	r6, [r3, r4, lsl #3]
   14f88:	add	r4, r4, #1
   14f8c:	bl	4440 <rb_getmaxconnect@plt>
   14f90:	cmp	r0, r4
   14f94:	bgt	14f80 <rb_init_netio_sigio+0x4c>
   14f98:	ldr	r4, [pc, #116]	; 15014 <rb_init_netio_sigio+0xe0>
   14f9c:	mov	r3, #1
   14fa0:	mov	r6, #0
   14fa4:	str	r6, [r5, #4]
   14fa8:	add	r4, pc, r4
   14fac:	str	r3, [r4], #4
   14fb0:	mov	r0, r4
   14fb4:	bl	4368 <sigemptyset@plt>
   14fb8:	bl	4458 <__libc_current_sigrtmin@plt>
   14fbc:	mov	r1, r0
   14fc0:	mov	r0, r4
   14fc4:	bl	4860 <sigaddset@plt>
   14fc8:	mov	r1, #29
   14fcc:	mov	r0, r4
   14fd0:	bl	4860 <sigaddset@plt>
   14fd4:	bl	4458 <__libc_current_sigrtmin@plt>
   14fd8:	add	r1, r0, #1
   14fdc:	mov	r0, r4
   14fe0:	bl	4860 <sigaddset@plt>
   14fe4:	mov	r2, r6
   14fe8:	mov	r1, r4
   14fec:	mov	r0, r6
   14ff0:	bl	498c <sigprocmask@plt>
   14ff4:	mov	r0, r6
   14ff8:	ldrd	r4, [sp]
   14ffc:	ldr	r6, [sp, #8]
   15000:	add	sp, sp, #12
   15004:	pop	{pc}		; (ldr pc, [sp], #4)
   15008:	bl	495c <rb_outofmemory@plt>
   1500c:	.word	0x000170a0
   15010:	.word	0x000003cc
   15014:	.word	0x00034cec

00015018 <rb_setup_fd_sigio>:
   15018:	strd	r4, [sp, #-16]!
   1501c:	mov	r2, #0
   15020:	mov	r1, #3
   15024:	ldr	r5, [r0, #12]
   15028:	str	r6, [sp, #8]
   1502c:	str	lr, [sp, #12]
   15030:	mov	r0, r5
   15034:	bl	4bd8 <fcntl@plt>
   15038:	cmn	r0, #1
   1503c:	beq	150ac <rb_setup_fd_sigio+0x94>
   15040:	tst	r0, #8192	; 0x2000
   15044:	mov	r4, r0
   15048:	bne	150c0 <rb_setup_fd_sigio+0xa8>
   1504c:	orr	r2, r4, #10240	; 0x2800
   15050:	mov	r1, #4
   15054:	mov	r0, r5
   15058:	bl	4bd8 <fcntl@plt>
   1505c:	cmn	r0, #1
   15060:	beq	150ac <rb_setup_fd_sigio+0x94>
   15064:	bl	4458 <__libc_current_sigrtmin@plt>
   15068:	mov	r2, r0
   1506c:	mov	r1, #10
   15070:	mov	r0, r5
   15074:	bl	4bd8 <fcntl@plt>
   15078:	cmn	r0, #1
   1507c:	beq	150ac <rb_setup_fd_sigio+0x94>
   15080:	bl	4aa0 <getpid@plt>
   15084:	mov	r2, r0
   15088:	mov	r1, #8
   1508c:	mov	r0, r5
   15090:	bl	4bd8 <fcntl@plt>
   15094:	adds	r0, r0, #1
   15098:	ldrd	r4, [sp]
   1509c:	movne	r0, #1
   150a0:	ldr	r6, [sp, #8]
   150a4:	add	sp, sp, #12
   150a8:	pop	{pc}		; (ldr pc, [sp], #4)
   150ac:	ldrd	r4, [sp]
   150b0:	mov	r0, #0
   150b4:	ldr	r6, [sp, #8]
   150b8:	add	sp, sp, #12
   150bc:	pop	{pc}		; (ldr pc, [sp], #4)
   150c0:	bic	r4, r0, #8192	; 0x2000
   150c4:	mov	r1, #4
   150c8:	mov	r2, r4
   150cc:	mov	r0, r5
   150d0:	bl	4bd8 <fcntl@plt>
   150d4:	b	1504c <rb_setup_fd_sigio+0x34>

000150d8 <rb_setselect_sigio>:
   150d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   150dc:	subs	r4, r0, #0
   150e0:	strd	r6, [sp, #8]
   150e4:	str	lr, [sp, #20]
   150e8:	ldr	lr, [pc, #404]	; 15284 <rb_setselect_sigio+0x1ac>
   150ec:	str	r8, [sp, #16]
   150f0:	add	lr, pc, lr
   150f4:	beq	15164 <rb_setselect_sigio+0x8c>
   150f8:	tst	r1, #1
   150fc:	and	r1, r1, #2
   15100:	beq	15178 <rb_setselect_sigio+0xa0>
   15104:	cmp	r2, #0
   15108:	strd	r2, [r4, #28]
   1510c:	ldr	ip, [r4, #20]
   15110:	beq	151ec <rb_setselect_sigio+0x114>
   15114:	orr	ip, ip, #64	; 0x40
   15118:	cmp	r1, #0
   1511c:	str	ip, [r4, #20]
   15120:	bne	151dc <rb_setselect_sigio+0x104>
   15124:	ldr	r3, [pc, #348]	; 15288 <rb_setselect_sigio+0x1b0>
   15128:	ldr	r2, [r4, #12]
   1512c:	ldr	r5, [lr, r3]
   15130:	ldr	r0, [r5]
   15134:	ldr	r7, [r5, #8]
   15138:	cmp	r2, r7
   1513c:	bge	1520c <rb_setselect_sigio+0x134>
   15140:	ldr	r1, [r4, #20]
   15144:	add	ip, r0, r2, lsl #3
   15148:	ldr	r3, [r5, #4]
   1514c:	cmp	r1, #0
   15150:	ble	1519c <rb_setselect_sigio+0xc4>
   15154:	cmp	r2, r3
   15158:	strh	r1, [ip, #4]
   1515c:	str	r2, [r0, r2, lsl #3]
   15160:	strgt	r2, [r5, #4]
   15164:	ldrd	r4, [sp]
   15168:	ldrd	r6, [sp, #8]
   1516c:	ldr	r8, [sp, #16]
   15170:	add	sp, sp, #20
   15174:	pop	{pc}		; (ldr pc, [sp], #4)
   15178:	cmp	r1, #0
   1517c:	beq	15124 <rb_setselect_sigio+0x4c>
   15180:	cmp	r2, #0
   15184:	strd	r2, [r4, #36]	; 0x24
   15188:	ldr	ip, [r4, #20]
   1518c:	beq	15200 <rb_setselect_sigio+0x128>
   15190:	orr	ip, ip, #256	; 0x100
   15194:	str	ip, [r4, #20]
   15198:	b	15124 <rb_setselect_sigio+0x4c>
   1519c:	mov	lr, #0
   151a0:	mvn	r1, #0
   151a4:	cmp	r2, r3
   151a8:	strh	lr, [ip, #4]
   151ac:	str	r1, [r0, r2, lsl #3]
   151b0:	bne	15164 <rb_setselect_sigio+0x8c>
   151b4:	cmp	r3, lr
   151b8:	bge	151cc <rb_setselect_sigio+0xf4>
   151bc:	b	15164 <rb_setselect_sigio+0x8c>
   151c0:	ldr	r2, [r0, r3, lsl #3]
   151c4:	cmn	r2, #1
   151c8:	bne	151d4 <rb_setselect_sigio+0xfc>
   151cc:	subs	r3, r3, #1
   151d0:	bcs	151c0 <rb_setselect_sigio+0xe8>
   151d4:	str	r3, [r5, #4]
   151d8:	b	15164 <rb_setselect_sigio+0x8c>
   151dc:	orr	ip, ip, #256	; 0x100
   151e0:	str	ip, [r4, #20]
   151e4:	strd	r2, [r4, #36]	; 0x24
   151e8:	b	15124 <rb_setselect_sigio+0x4c>
   151ec:	bic	ip, ip, #64	; 0x40
   151f0:	cmp	r1, #0
   151f4:	str	ip, [r4, #20]
   151f8:	beq	15124 <rb_setselect_sigio+0x4c>
   151fc:	strd	r2, [r4, #36]	; 0x24
   15200:	bic	ip, ip, #256	; 0x100
   15204:	str	ip, [r4, #20]
   15208:	b	15124 <rb_setselect_sigio+0x4c>
   1520c:	add	r3, r7, #1024	; 0x400
   15210:	lsl	r6, r3, #3
   15214:	str	r3, [r5, #8]
   15218:	mov	r1, r6
   1521c:	bl	4c14 <realloc@plt>
   15220:	cmp	r0, #0
   15224:	beq	15280 <rb_setselect_sigio+0x1a8>
   15228:	sub	r3, r6, #8128	; 0x1fc0
   1522c:	mov	r2, #8192	; 0x2000
   15230:	str	r0, [r5]
   15234:	sub	r3, r3, #56	; 0x38
   15238:	mov	r1, #0
   1523c:	add	r0, r0, r3
   15240:	add	r7, r7, #1
   15244:	bl	4608 <memset@plt>
   15248:	ldr	r0, [r5]
   1524c:	ldr	ip, [r5, #8]
   15250:	cmp	r7, ip
   15254:	bge	15278 <rb_setselect_sigio+0x1a0>
   15258:	sub	r2, r0, #8
   1525c:	sub	r3, r6, #8192	; 0x2000
   15260:	add	r2, r2, ip, lsl #3
   15264:	mvn	r1, #0
   15268:	add	r3, r0, r3
   1526c:	str	r1, [r3, #8]!
   15270:	cmp	r2, r3
   15274:	bne	1526c <rb_setselect_sigio+0x194>
   15278:	ldr	r2, [r4, #12]
   1527c:	b	15140 <rb_setselect_sigio+0x68>
   15280:	bl	495c <rb_outofmemory@plt>
   15284:	.word	0x00016f08
   15288:	.word	0x000003cc

0001528c <rb_sigio_supports_event>:
   1528c:	strd	r4, [sp, #-12]!
   15290:	ldr	r5, [pc, #136]	; 15320 <rb_sigio_supports_event+0x94>
   15294:	add	r5, pc, r5
   15298:	ldr	r0, [r5, #132]	; 0x84
   1529c:	str	lr, [sp, #8]
   152a0:	sub	sp, sp, #76	; 0x4c
   152a4:	cmp	r0, #1
   152a8:	beq	152ec <rb_sigio_supports_event+0x60>
   152ac:	cmn	r0, #1
   152b0:	moveq	r0, #0
   152b4:	beq	152ec <rb_sigio_supports_event+0x60>
   152b8:	mov	r4, #0
   152bc:	mov	r3, #26
   152c0:	mov	r0, r4
   152c4:	add	r2, sp, #4
   152c8:	add	r1, sp, #8
   152cc:	str	r3, [sp, #12]
   152d0:	str	r4, [sp, #16]
   152d4:	bl	4500 <timer_create@plt>
   152d8:	cmp	r0, r4
   152dc:	beq	152fc <rb_sigio_supports_event+0x70>
   152e0:	mvn	r3, #0
   152e4:	mov	r0, r4
   152e8:	str	r3, [r5, #132]	; 0x84
   152ec:	add	sp, sp, #76	; 0x4c
   152f0:	ldrd	r4, [sp]
   152f4:	add	sp, sp, #8
   152f8:	pop	{pc}		; (ldr pc, [sp], #4)
   152fc:	ldr	r0, [sp, #4]
   15300:	bl	4a4c <timer_delete@plt>
   15304:	mov	r3, #1
   15308:	mov	r0, r3
   1530c:	str	r3, [r5, #132]	; 0x84
   15310:	add	sp, sp, #76	; 0x4c
   15314:	ldrd	r4, [sp]
   15318:	add	sp, sp, #8
   1531c:	pop	{pc}		; (ldr pc, [sp], #4)
   15320:	.word	0x00034a00

00015324 <rb_select_sigio>:
   15324:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15328:	strd	r6, [sp, #8]
   1532c:	mov	r6, r0
   15330:	strd	r8, [sp, #16]
   15334:	str	sl, [sp, #24]
   15338:	str	lr, [sp, #28]
   1533c:	sub	sp, sp, #136	; 0x88
   15340:	bl	1528c <rb_sigio_supports_event>
   15344:	ldr	r5, [pc, #996]	; 15730 <rb_select_sigio+0x40c>
   15348:	mvn	r3, r6
   1534c:	cmp	r0, #0
   15350:	lsr	r3, r3, #31
   15354:	movne	r0, #1
   15358:	moveq	r0, r3
   1535c:	cmp	r0, #0
   15360:	add	r5, pc, r5
   15364:	beq	15398 <rb_select_sigio+0x74>
   15368:	movw	r1, #19923	; 0x4dd3
   1536c:	movt	r1, #4194	; 0x1062
   15370:	asr	r3, r6, #31
   15374:	mov	r0, #1000	; 0x3e8
   15378:	movw	r2, #16960	; 0x4240
   1537c:	movt	r2, #15
   15380:	smull	ip, r1, r1, r6
   15384:	rsb	r3, r3, r1, asr #6
   15388:	mls	r1, r0, r3, r6
   1538c:	str	r3, [sp]
   15390:	mul	r2, r2, r1
   15394:	str	r2, [sp, #4]
   15398:	ldr	r4, [pc, #916]	; 15734 <rb_select_sigio+0x410>
   1539c:	ldr	r8, [pc, #916]	; 15738 <rb_select_sigio+0x414>
   153a0:	add	r4, pc, r4
   153a4:	add	r7, r4, #4
   153a8:	add	r8, pc, r8
   153ac:	ldr	r3, [r4]
   153b0:	cmp	r3, #0
   153b4:	bne	15428 <rb_select_sigio+0x104>
   153b8:	ldr	r3, [r4, #132]	; 0x84
   153bc:	cmp	r3, #0
   153c0:	lsreq	r3, r6, #31
   153c4:	movne	r3, #1
   153c8:	cmp	r3, #0
   153cc:	beq	15600 <rb_select_sigio+0x2dc>
   153d0:	add	r1, sp, #8
   153d4:	mov	r0, r7
   153d8:	bl	444c <sigwaitinfo@plt>
   153dc:	mov	r9, r0
   153e0:	cmp	r9, #0
   153e4:	ble	1561c <rb_select_sigio+0x2f8>
   153e8:	cmp	r9, #29
   153ec:	beq	156bc <rb_select_sigio+0x398>
   153f0:	bl	4458 <__libc_current_sigrtmin@plt>
   153f4:	add	r0, r0, #1
   153f8:	cmp	r0, r9
   153fc:	bne	15528 <rb_select_sigio+0x204>
   15400:	ldr	r3, [r8, #132]	; 0x84
   15404:	cmp	r3, #0
   15408:	beq	15528 <rb_select_sigio+0x204>
   1540c:	ldr	r0, [sp, #28]
   15410:	cmp	r0, #0
   15414:	beq	153ac <rb_select_sigio+0x88>
   15418:	bl	4884 <rb_run_one_event@plt>
   1541c:	ldr	r3, [r4]
   15420:	cmp	r3, #0
   15424:	beq	153b8 <rb_select_sigio+0x94>
   15428:	bl	4458 <__libc_current_sigrtmin@plt>
   1542c:	mov	r4, #0
   15430:	mov	r1, #1
   15434:	bl	44ac <signal@plt>
   15438:	bl	4458 <__libc_current_sigrtmin@plt>
   1543c:	mov	r1, r4
   15440:	bl	44ac <signal@plt>
   15444:	ldr	r1, [pc, #752]	; 1573c <rb_select_sigio+0x418>
   15448:	mov	r2, r6
   1544c:	ldr	r3, [pc, #748]	; 15740 <rb_select_sigio+0x41c>
   15450:	add	r1, pc, r1
   15454:	str	r4, [r1]
   15458:	ldr	r7, [r5, r3]
   1545c:	ldrd	r0, [r7]
   15460:	add	r1, r1, #1
   15464:	bl	49d4 <poll@plt>
   15468:	mov	r6, r0
   1546c:	bl	4968 <rb_set_time@plt>
   15470:	cmp	r6, r4
   15474:	blt	156cc <rb_select_sigio+0x3a8>
   15478:	beq	15504 <rb_select_sigio+0x1e0>
   1547c:	ldr	r0, [r7, #4]
   15480:	cmp	r0, #0
   15484:	blt	15504 <rb_select_sigio+0x1e0>
   15488:	mov	r6, r4
   1548c:	mov	r8, r4
   15490:	ldr	r3, [r7]
   15494:	add	r2, r3, r6, lsl #3
   15498:	ldrsh	r9, [r2, #6]
   1549c:	cmp	r9, #0
   154a0:	beq	154f8 <rb_select_sigio+0x1d4>
   154a4:	ldr	r1, [r3, r6, lsl #3]
   154a8:	cmp	r1, #0
   154ac:	blt	154f8 <rb_select_sigio+0x1d4>
   154b0:	ldr	r2, [pc, #652]	; 15744 <rb_select_sigio+0x420>
   154b4:	asr	r3, r1, #24
   154b8:	eor	r3, r3, r1, asr #12
   154bc:	eor	r3, r3, r1
   154c0:	ldr	r2, [r5, r2]
   154c4:	ubfx	r3, r3, #0, #12
   154c8:	add	r3, r3, r3, lsl #1
   154cc:	ldr	r2, [r2]
   154d0:	ldr	r3, [r2, r3, lsl #2]
   154d4:	cmp	r3, #0
   154d8:	beq	154f8 <rb_select_sigio+0x1d4>
   154dc:	ldr	r4, [r3]
   154e0:	ldr	r2, [r4, #12]
   154e4:	cmp	r1, r2
   154e8:	beq	15634 <rb_select_sigio+0x310>
   154ec:	ldr	r3, [r3, #8]
   154f0:	cmp	r3, #0
   154f4:	bne	154dc <rb_select_sigio+0x1b8>
   154f8:	add	r6, r6, #1
   154fc:	cmp	r6, r0
   15500:	ble	15490 <rb_select_sigio+0x16c>
   15504:	mov	r4, #0
   15508:	mov	r0, r4
   1550c:	add	sp, sp, #136	; 0x88
   15510:	ldrd	r4, [sp]
   15514:	ldrd	r6, [sp, #8]
   15518:	ldrd	r8, [sp, #16]
   1551c:	ldr	sl, [sp, #24]
   15520:	add	sp, sp, #28
   15524:	pop	{pc}		; (ldr pc, [sp], #4)
   15528:	ldr	r3, [pc, #528]	; 15740 <rb_select_sigio+0x41c>
   1552c:	ldr	r1, [sp, #20]
   15530:	ldr	r2, [sp, #24]
   15534:	ldr	r3, [r5, r3]
   15538:	cmp	r2, #0
   1553c:	ldr	r3, [r3]
   15540:	add	r3, r3, r2, lsl #3
   15544:	ldrh	r9, [r3, #6]
   15548:	orr	r9, r9, r1
   1554c:	sxth	r9, r9
   15550:	strh	r9, [r3, #6]
   15554:	blt	153ac <rb_select_sigio+0x88>
   15558:	ldr	r1, [pc, #484]	; 15744 <rb_select_sigio+0x420>
   1555c:	asr	r3, r2, #24
   15560:	eor	r3, r3, r2, asr #12
   15564:	eor	r3, r3, r2
   15568:	ldr	r1, [r5, r1]
   1556c:	ubfx	r3, r3, #0, #12
   15570:	add	r3, r3, r3, lsl #1
   15574:	ldr	r1, [r1]
   15578:	ldr	r3, [r1, r3, lsl #2]
   1557c:	cmp	r3, #0
   15580:	bne	15594 <rb_select_sigio+0x270>
   15584:	b	153ac <rb_select_sigio+0x88>
   15588:	ldr	r3, [r3, #8]
   1558c:	cmp	r3, #0
   15590:	beq	153ac <rb_select_sigio+0x88>
   15594:	ldr	sl, [r3]
   15598:	ldr	r1, [sl, #12]
   1559c:	cmp	r2, r1
   155a0:	bne	15588 <rb_select_sigio+0x264>
   155a4:	tst	r9, #89	; 0x59
   155a8:	beq	155d0 <rb_select_sigio+0x2ac>
   155ac:	ldr	r2, [sl, #28]
   155b0:	mov	r3, #0
   155b4:	str	r3, [sl, #28]
   155b8:	ldr	r1, [sl, #32]
   155bc:	str	r3, [sl, #32]
   155c0:	cmp	r2, r3
   155c4:	beq	155d0 <rb_select_sigio+0x2ac>
   155c8:	mov	r0, sl
   155cc:	blx	r2
   155d0:	tst	r9, #284	; 0x11c
   155d4:	beq	153ac <rb_select_sigio+0x88>
   155d8:	ldr	r2, [sl, #36]	; 0x24
   155dc:	mov	r3, #0
   155e0:	str	r3, [sl, #36]	; 0x24
   155e4:	ldr	r1, [sl, #40]	; 0x28
   155e8:	str	r3, [sl, #40]	; 0x28
   155ec:	cmp	r2, r3
   155f0:	beq	153ac <rb_select_sigio+0x88>
   155f4:	mov	r0, sl
   155f8:	blx	r2
   155fc:	b	153ac <rb_select_sigio+0x88>
   15600:	mov	r2, sp
   15604:	add	r1, sp, #8
   15608:	mov	r0, r7
   1560c:	bl	4494 <sigtimedwait@plt>
   15610:	mov	r9, r0
   15614:	cmp	r9, #0
   15618:	bgt	153e8 <rb_select_sigio+0xc4>
   1561c:	ldr	r3, [pc, #292]	; 15748 <rb_select_sigio+0x424>
   15620:	ldr	r4, [pc, r3]
   15624:	cmp	r4, #0
   15628:	bne	15428 <rb_select_sigio+0x104>
   1562c:	bl	4968 <rb_set_time@plt>
   15630:	b	15508 <rb_select_sigio+0x1e4>
   15634:	tst	r9, #89	; 0x59
   15638:	beq	1565c <rb_select_sigio+0x338>
   1563c:	ldr	r3, [r4, #28]
   15640:	str	r8, [r4, #28]
   15644:	ldr	r1, [r4, #32]
   15648:	str	r8, [r4, #32]
   1564c:	cmp	r3, #0
   15650:	beq	1570c <rb_select_sigio+0x3e8>
   15654:	mov	r0, r4
   15658:	blx	r3
   1565c:	ldrb	r3, [r4, #16]
   15660:	tst	r3, #1
   15664:	beq	15690 <rb_select_sigio+0x36c>
   15668:	tst	r9, #284	; 0x11c
   1566c:	beq	15690 <rb_select_sigio+0x36c>
   15670:	ldr	r3, [r4, #36]	; 0x24
   15674:	str	r8, [r4, #36]	; 0x24
   15678:	ldr	r1, [r4, #40]	; 0x28
   1567c:	str	r8, [r4, #40]	; 0x28
   15680:	cmp	r3, #0
   15684:	beq	156e8 <rb_select_sigio+0x3c4>
   15688:	mov	r0, r4
   1568c:	blx	r3
   15690:	ldr	r3, [r4, #28]
   15694:	cmp	r3, #0
   15698:	beq	15718 <rb_select_sigio+0x3f4>
   1569c:	ldr	r3, [r4, #36]	; 0x24
   156a0:	cmp	r3, #0
   156a4:	beq	156f4 <rb_select_sigio+0x3d0>
   156a8:	ldr	r0, [r7, #4]
   156ac:	add	r6, r6, #1
   156b0:	cmp	r6, r0
   156b4:	ble	15490 <rb_select_sigio+0x16c>
   156b8:	b	15504 <rb_select_sigio+0x1e0>
   156bc:	ldr	r0, [pc, #136]	; 1574c <rb_select_sigio+0x428>
   156c0:	add	r0, pc, r0
   156c4:	bl	48f0 <rb_lib_log@plt>
   156c8:	b	15428 <rb_select_sigio+0x104>
   156cc:	bl	4cbc <__errno_location@plt>
   156d0:	ldr	r0, [r0]
   156d4:	bl	43b0 <rb_ignore_errno@plt>
   156d8:	cmp	r0, #0
   156dc:	movne	r4, #5
   156e0:	beq	15504 <rb_select_sigio+0x1e0>
   156e4:	b	15508 <rb_select_sigio+0x1e4>
   156e8:	ldr	r3, [r4, #28]
   156ec:	cmp	r3, #0
   156f0:	beq	15718 <rb_select_sigio+0x3f4>
   156f4:	mov	r3, #0
   156f8:	mov	r0, r4
   156fc:	mov	r2, r3
   15700:	mov	r1, #2
   15704:	bl	150d8 <rb_setselect_sigio>
   15708:	b	156a8 <rb_select_sigio+0x384>
   1570c:	ldrb	r3, [r4, #16]
   15710:	tst	r3, #1
   15714:	bne	15668 <rb_select_sigio+0x344>
   15718:	mov	r3, #0
   1571c:	mov	r1, #1
   15720:	mov	r2, r3
   15724:	mov	r0, r4
   15728:	bl	150d8 <rb_setselect_sigio>
   1572c:	b	1569c <rb_select_sigio+0x378>
   15730:	.word	0x00016c98
   15734:	.word	0x000348f4
   15738:	.word	0x000348ec
   1573c:	.word	0x00034844
   15740:	.word	0x000003cc
   15744:	.word	0x000003bc
   15748:	.word	0x00034674
   1574c:	.word	0x00005cac

00015750 <rb_sigio_init_event>:
   15750:	b	1528c <rb_sigio_supports_event>

00015754 <rb_sigio_sched_event>:
   15754:	ldr	r3, [pc, #292]	; 15880 <rb_sigio_sched_event+0x12c>
   15758:	add	r3, pc, r3
   1575c:	ldr	r3, [r3, #132]	; 0x84
   15760:	cmp	r3, #0
   15764:	ble	1582c <rb_sigio_sched_event+0xd8>
   15768:	strd	r4, [sp, #-20]!	; 0xffffffec
   1576c:	mov	r2, #64	; 0x40
   15770:	mov	r4, r0
   15774:	strd	r6, [sp, #8]
   15778:	mov	r7, r1
   1577c:	mov	r1, #0
   15780:	str	lr, [sp, #16]
   15784:	sub	sp, sp, #84	; 0x54
   15788:	add	r6, sp, #16
   1578c:	mov	r0, r6
   15790:	bl	4608 <memset@plt>
   15794:	mov	r1, #4
   15798:	mov	r0, #1
   1579c:	bl	45c0 <calloc@plt>
   157a0:	subs	r5, r0, #0
   157a4:	beq	15858 <rb_sigio_sched_event+0x104>
   157a8:	str	r5, [r4, #40]	; 0x28
   157ac:	bl	4458 <__libc_current_sigrtmin@plt>
   157b0:	add	r3, r0, #1
   157b4:	mov	r1, r6
   157b8:	str	r4, [sp, #16]
   157bc:	mov	r2, r5
   157c0:	mov	r0, #0
   157c4:	str	r3, [sp, #20]
   157c8:	bl	4500 <timer_create@plt>
   157cc:	cmp	r0, #0
   157d0:	blt	15834 <rb_sigio_sched_event+0xe0>
   157d4:	ldr	r3, [r4, #24]
   157d8:	mov	r0, #0
   157dc:	mov	r1, #0
   157e0:	mov	r2, sp
   157e4:	strd	r0, [sp]
   157e8:	strd	r0, [r2, #8]
   157ec:	str	r7, [sp, #8]
   157f0:	cmp	r3, #0
   157f4:	mov	r3, #0
   157f8:	ldrdne	r0, [sp, #8]
   157fc:	strdne	r0, [sp]
   15800:	mov	r1, r3
   15804:	ldr	r0, [r5]
   15808:	bl	4734 <timer_settime@plt>
   1580c:	cmp	r0, #0
   15810:	movge	r0, #1
   15814:	blt	1585c <rb_sigio_sched_event+0x108>
   15818:	add	sp, sp, #84	; 0x54
   1581c:	ldrd	r4, [sp]
   15820:	ldrd	r6, [sp, #8]
   15824:	add	sp, sp, #16
   15828:	pop	{pc}		; (ldr pc, [sp], #4)
   1582c:	mov	r0, #0
   15830:	bx	lr
   15834:	bl	4cbc <__errno_location@plt>
   15838:	ldr	r0, [r0]
   1583c:	bl	4374 <strerror@plt>
   15840:	mov	r1, r0
   15844:	ldr	r0, [pc, #56]	; 15884 <rb_sigio_sched_event+0x130>
   15848:	add	r0, pc, r0
   1584c:	bl	48f0 <rb_lib_log@plt>
   15850:	mov	r0, #0
   15854:	b	15818 <rb_sigio_sched_event+0xc4>
   15858:	bl	495c <rb_outofmemory@plt>
   1585c:	bl	4cbc <__errno_location@plt>
   15860:	ldr	r0, [r0]
   15864:	bl	4374 <strerror@plt>
   15868:	mov	r1, r0
   1586c:	ldr	r0, [pc, #20]	; 15888 <rb_sigio_sched_event+0x134>
   15870:	add	r0, pc, r0
   15874:	bl	48f0 <rb_lib_log@plt>
   15878:	mov	r0, #0
   1587c:	b	15818 <rb_sigio_sched_event+0xc4>
   15880:	.word	0x0003453c
   15884:	.word	0x00005afc
   15888:	.word	0x00005ae8

0001588c <rb_sigio_unsched_event>:
   1588c:	ldr	r3, [pc, #72]	; 158dc <rb_sigio_unsched_event+0x50>
   15890:	add	r3, pc, r3
   15894:	ldr	r3, [r3, #132]	; 0x84
   15898:	cmp	r3, #0
   1589c:	bxle	lr
   158a0:	str	r4, [sp, #-8]!
   158a4:	mov	r4, r0
   158a8:	ldr	r3, [r0, #40]	; 0x28
   158ac:	ldr	r0, [r3]
   158b0:	str	lr, [sp, #4]
   158b4:	bl	4a4c <timer_delete@plt>
   158b8:	ldr	r0, [r4, #40]	; 0x28
   158bc:	cmp	r0, #0
   158c0:	beq	158c8 <rb_sigio_unsched_event+0x3c>
   158c4:	bl	46d4 <free@plt>
   158c8:	mov	r3, #0
   158cc:	str	r3, [r4, #40]	; 0x28
   158d0:	ldr	r4, [sp]
   158d4:	add	sp, sp, #4
   158d8:	pop	{pc}		; (ldr pc, [sp], #4)
   158dc:	.word	0x00034404

000158e0 <select_update_selectfds.isra.0>:
   158e0:	cmp	r2, #1
   158e4:	strd	r4, [sp, #-16]!
   158e8:	str	r6, [sp, #8]
   158ec:	str	lr, [sp, #12]
   158f0:	ldr	lr, [r1]
   158f4:	beq	1594c <select_update_selectfds.isra.0+0x6c>
   158f8:	cmp	r0, #0
   158fc:	add	r2, r0, #31
   15900:	movge	r2, r0
   15904:	rsbs	r6, r0, #0
   15908:	and	r6, r6, #31
   1590c:	and	r5, r0, #31
   15910:	asr	ip, r2, #5
   15914:	rsbpl	r5, r6, #0
   15918:	mov	r4, #1
   1591c:	cmp	r3, #0
   15920:	lsl	r4, r4, r5
   15924:	beq	15a58 <select_update_selectfds.isra.0+0x178>
   15928:	ldr	r2, [pc, #364]	; 15a9c <select_update_selectfds.isra.0+0x1bc>
   1592c:	orr	r3, lr, #2
   15930:	str	r3, [r1]
   15934:	add	r2, pc, r2
   15938:	add	r2, r2, ip, lsl #2
   1593c:	ldr	r1, [r2, #128]	; 0x80
   15940:	orr	r1, r1, r4
   15944:	str	r1, [r2, #128]	; 0x80
   15948:	b	15998 <select_update_selectfds.isra.0+0xb8>
   1594c:	ldr	r4, [pc, #332]	; 15aa0 <select_update_selectfds.isra.0+0x1c0>
   15950:	cmp	r0, #0
   15954:	add	ip, r0, #31
   15958:	movge	ip, r0
   1595c:	rsbs	r6, r0, #0
   15960:	asr	ip, ip, #5
   15964:	and	r6, r6, #31
   15968:	and	r5, r0, #31
   1596c:	rsbpl	r5, r6, #0
   15970:	cmp	r3, #0
   15974:	lsl	r2, r2, r5
   15978:	add	r4, pc, r4
   1597c:	ldr	r3, [r4, ip, lsl #2]
   15980:	orrne	r2, r3, r2
   15984:	biceq	r2, r3, r2
   15988:	orrne	r3, lr, #1
   1598c:	biceq	r3, lr, #1
   15990:	str	r2, [r4, ip, lsl #2]
   15994:	str	r3, [r1]
   15998:	ldr	r2, [pc, #260]	; 15aa4 <select_update_selectfds.isra.0+0x1c4>
   1599c:	tst	r3, #3
   159a0:	add	r2, pc, r2
   159a4:	ldr	r3, [r2]
   159a8:	beq	159c4 <select_update_selectfds.isra.0+0xe4>
   159ac:	cmp	r0, r3
   159b0:	strgt	r0, [r2]
   159b4:	ldrd	r4, [sp]
   159b8:	ldr	r6, [sp, #8]
   159bc:	add	sp, sp, #12
   159c0:	pop	{pc}		; (ldr pc, [sp], #4)
   159c4:	cmp	r0, r3
   159c8:	bgt	159b4 <select_update_selectfds.isra.0+0xd4>
   159cc:	cmp	r3, #0
   159d0:	blt	159b4 <select_update_selectfds.isra.0+0xd4>
   159d4:	ldr	r1, [pc, #204]	; 15aa8 <select_update_selectfds.isra.0+0x1c8>
   159d8:	asr	r0, r3, #5
   159dc:	and	r2, r3, #31
   159e0:	mov	lr, #1
   159e4:	lsl	r2, lr, r2
   159e8:	add	r1, pc, r1
   159ec:	ldr	ip, [r1, r0, lsl #2]
   159f0:	tst	r2, ip
   159f4:	bne	159b4 <select_update_selectfds.isra.0+0xd4>
   159f8:	add	r1, r1, r0, lsl #2
   159fc:	ldr	r1, [r1, #128]	; 0x80
   15a00:	tst	r2, r1
   15a04:	bne	159b4 <select_update_selectfds.isra.0+0xd4>
   15a08:	ldr	r0, [pc, #156]	; 15aac <select_update_selectfds.isra.0+0x1cc>
   15a0c:	add	r0, pc, r0
   15a10:	b	15a30 <select_update_selectfds.isra.0+0x150>
   15a14:	add	ip, r0, r1, lsl #2
   15a18:	ldr	r1, [r0, r1, lsl #2]
   15a1c:	tst	r2, r1
   15a20:	bne	15a7c <select_update_selectfds.isra.0+0x19c>
   15a24:	ldr	r1, [ip, #128]	; 0x80
   15a28:	tst	r2, r1
   15a2c:	bne	15a8c <select_update_selectfds.isra.0+0x1ac>
   15a30:	sub	r3, r3, #1
   15a34:	and	r2, r3, #31
   15a38:	cmn	r3, #1
   15a3c:	asr	r1, r3, #5
   15a40:	lsl	r2, lr, r2
   15a44:	bne	15a14 <select_update_selectfds.isra.0+0x134>
   15a48:	ldr	r2, [pc, #96]	; 15ab0 <select_update_selectfds.isra.0+0x1d0>
   15a4c:	add	r2, pc, r2
   15a50:	str	r3, [r2]
   15a54:	b	159b4 <select_update_selectfds.isra.0+0xd4>
   15a58:	ldr	r2, [pc, #84]	; 15ab4 <select_update_selectfds.isra.0+0x1d4>
   15a5c:	bic	r3, lr, #2
   15a60:	str	r3, [r1]
   15a64:	add	r2, pc, r2
   15a68:	add	r2, r2, ip, lsl #2
   15a6c:	ldr	r1, [r2, #128]	; 0x80
   15a70:	bic	r1, r1, r4
   15a74:	str	r1, [r2, #128]	; 0x80
   15a78:	b	15998 <select_update_selectfds.isra.0+0xb8>
   15a7c:	ldr	r2, [pc, #52]	; 15ab8 <select_update_selectfds.isra.0+0x1d8>
   15a80:	add	r2, pc, r2
   15a84:	str	r3, [r2]
   15a88:	b	159b4 <select_update_selectfds.isra.0+0xd4>
   15a8c:	ldr	r2, [pc, #40]	; 15abc <select_update_selectfds.isra.0+0x1dc>
   15a90:	add	r2, pc, r2
   15a94:	str	r3, [r2]
   15a98:	b	159b4 <select_update_selectfds.isra.0+0xd4>
   15a9c:	.word	0x000343e8
   15aa0:	.word	0x000343a4
   15aa4:	.word	0x00016adc
   15aa8:	.word	0x00034334
   15aac:	.word	0x00034310
   15ab0:	.word	0x00016a30
   15ab4:	.word	0x000342b8
   15ab8:	.word	0x000169fc
   15abc:	.word	0x000169ec

00015ac0 <rb_setup_fd_select>:
   15ac0:	mov	r0, #0
   15ac4:	bx	lr

00015ac8 <rb_init_netio_select>:
   15ac8:	ldr	r3, [pc, #88]	; 15b28 <rb_init_netio_select+0x60>
   15acc:	mov	r1, #0
   15ad0:	str	r4, [sp, #-8]!
   15ad4:	ldr	r2, [pc, #80]	; 15b2c <rb_init_netio_select+0x64>
   15ad8:	str	lr, [sp, #4]
   15adc:	add	r3, pc, r3
   15ae0:	ldr	r3, [r3, r2]
   15ae4:	ldr	r2, [r3]
   15ae8:	cmp	r2, #1024	; 0x400
   15aec:	movgt	r2, #1024	; 0x400
   15af0:	strgt	r2, [r3]
   15af4:	mov	r2, #128	; 0x80
   15af8:	ldr	r3, [pc, #48]	; 15b30 <rb_init_netio_select+0x68>
   15afc:	add	r3, pc, r3
   15b00:	mov	r0, r3
   15b04:	bl	4608 <memset@plt>
   15b08:	add	r0, r0, #128	; 0x80
   15b0c:	mov	r2, #128	; 0x80
   15b10:	mov	r1, #0
   15b14:	bl	4608 <memset@plt>
   15b18:	ldr	r4, [sp]
   15b1c:	add	sp, sp, #4
   15b20:	mov	r0, #0
   15b24:	pop	{pc}		; (ldr pc, [sp], #4)
   15b28:	.word	0x0001651c
   15b2c:	.word	0x0000039c
   15b30:	.word	0x00034220

00015b34 <rb_setselect_select>:
   15b34:	tst	r1, #1
   15b38:	mov	ip, r2
   15b3c:	strd	r4, [sp, #-20]!	; 0xffffffec
   15b40:	mov	r4, r3
   15b44:	strd	r6, [sp, #8]
   15b48:	str	lr, [sp, #16]
   15b4c:	bne	15b68 <rb_setselect_select+0x34>
   15b50:	tst	r1, #2
   15b54:	bne	15c70 <rb_setselect_select+0x13c>
   15b58:	ldrd	r4, [sp]
   15b5c:	ldrd	r6, [sp, #8]
   15b60:	add	sp, sp, #16
   15b64:	pop	{pc}		; (ldr pc, [sp], #4)
   15b68:	ldr	r2, [r0, #12]
   15b6c:	mov	r6, #1
   15b70:	ldr	r7, [pc, #336]	; 15cc8 <rb_setselect_select+0x194>
   15b74:	cmp	r2, #0
   15b78:	add	r3, r2, #31
   15b7c:	movge	r3, r2
   15b80:	rsbs	r5, r2, #0
   15b84:	asr	r3, r3, #5
   15b88:	and	r5, r5, #31
   15b8c:	add	r7, pc, r7
   15b90:	and	lr, r2, #31
   15b94:	rsbpl	lr, r5, #0
   15b98:	ldr	r5, [r0, #20]
   15b9c:	lsl	lr, r6, lr
   15ba0:	cmp	ip, #0
   15ba4:	ldr	r6, [r7, r3, lsl #2]
   15ba8:	str	ip, [r0, #28]
   15bac:	str	r4, [r0, #32]
   15bb0:	orrne	r5, r5, #1
   15bb4:	biceq	r5, r5, #1
   15bb8:	orrne	lr, r6, lr
   15bbc:	biceq	lr, r6, lr
   15bc0:	tst	r5, #3
   15bc4:	str	lr, [r7, r3, lsl #2]
   15bc8:	ldr	lr, [pc, #252]	; 15ccc <rb_setselect_select+0x198>
   15bcc:	str	r5, [r0, #20]
   15bd0:	add	lr, pc, lr
   15bd4:	ldr	r3, [lr]
   15bd8:	bne	15c9c <rb_setselect_select+0x168>
   15bdc:	cmp	r2, r3
   15be0:	bgt	15b50 <rb_setselect_select+0x1c>
   15be4:	cmp	r3, #0
   15be8:	blt	15b50 <rb_setselect_select+0x1c>
   15bec:	ldr	lr, [pc, #220]	; 15cd0 <rb_setselect_select+0x19c>
   15bf0:	asr	r5, r3, #5
   15bf4:	and	r2, r3, #31
   15bf8:	mov	r7, #1
   15bfc:	lsl	r2, r7, r2
   15c00:	add	lr, pc, lr
   15c04:	ldr	r6, [lr, r5, lsl #2]
   15c08:	tst	r2, r6
   15c0c:	bne	15b50 <rb_setselect_select+0x1c>
   15c10:	add	lr, lr, r5, lsl #2
   15c14:	ldr	lr, [lr, #128]	; 0x80
   15c18:	tst	r2, lr
   15c1c:	bne	15b50 <rb_setselect_select+0x1c>
   15c20:	ldr	r5, [pc, #172]	; 15cd4 <rb_setselect_select+0x1a0>
   15c24:	add	r5, pc, r5
   15c28:	b	15c48 <rb_setselect_select+0x114>
   15c2c:	add	r6, r5, lr, lsl #2
   15c30:	ldr	lr, [r5, lr, lsl #2]
   15c34:	tst	r2, lr
   15c38:	bne	15ca8 <rb_setselect_select+0x174>
   15c3c:	ldr	lr, [r6, #128]	; 0x80
   15c40:	tst	r2, lr
   15c44:	bne	15cb8 <rb_setselect_select+0x184>
   15c48:	sub	r3, r3, #1
   15c4c:	and	r2, r3, #31
   15c50:	cmn	r3, #1
   15c54:	asr	lr, r3, #5
   15c58:	lsl	r2, r7, r2
   15c5c:	bne	15c2c <rb_setselect_select+0xf8>
   15c60:	ldr	r2, [pc, #112]	; 15cd8 <rb_setselect_select+0x1a4>
   15c64:	add	r2, pc, r2
   15c68:	str	r3, [r2]
   15c6c:	b	15b50 <rb_setselect_select+0x1c>
   15c70:	add	r1, r0, #20
   15c74:	mov	r3, ip
   15c78:	ldrd	r6, [sp, #8]
   15c7c:	mov	r2, #2
   15c80:	ldr	lr, [sp, #16]
   15c84:	str	ip, [r0, #36]	; 0x24
   15c88:	str	r4, [r0, #40]	; 0x28
   15c8c:	ldrd	r4, [sp]
   15c90:	add	sp, sp, #20
   15c94:	ldr	r0, [r0, #12]
   15c98:	b	158e0 <select_update_selectfds.isra.0>
   15c9c:	cmp	r2, r3
   15ca0:	strgt	r2, [lr]
   15ca4:	b	15b50 <rb_setselect_select+0x1c>
   15ca8:	ldr	r2, [pc, #44]	; 15cdc <rb_setselect_select+0x1a8>
   15cac:	add	r2, pc, r2
   15cb0:	str	r3, [r2]
   15cb4:	b	15b50 <rb_setselect_select+0x1c>
   15cb8:	ldr	r2, [pc, #32]	; 15ce0 <rb_setselect_select+0x1ac>
   15cbc:	add	r2, pc, r2
   15cc0:	str	r3, [r2]
   15cc4:	b	15b50 <rb_setselect_select+0x1c>
   15cc8:	.word	0x00034190
   15ccc:	.word	0x000168ac
   15cd0:	.word	0x0003411c
   15cd4:	.word	0x000340f8
   15cd8:	.word	0x00016818
   15cdc:	.word	0x000167d0
   15ce0:	.word	0x000167c0

00015ce4 <rb_select_select>:
   15ce4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15ce8:	mov	r2, #128	; 0x80
   15cec:	mov	r4, r0
   15cf0:	ldr	r5, [pc, #608]	; 15f58 <rb_select_select+0x274>
   15cf4:	strd	r6, [sp, #8]
   15cf8:	ldr	r7, [pc, #604]	; 15f5c <rb_select_select+0x278>
   15cfc:	strd	r8, [sp, #16]
   15d00:	ldr	r8, [pc, #600]	; 15f60 <rb_select_select+0x27c>
   15d04:	add	r5, pc, r5
   15d08:	strd	sl, [sp, #24]
   15d0c:	add	r6, r5, #384	; 0x180
   15d10:	mov	r1, r5
   15d14:	str	lr, [sp, #32]
   15d18:	add	r0, r5, #256	; 0x100
   15d1c:	sub	sp, sp, #20
   15d20:	bl	47e8 <memcpy@plt>
   15d24:	mov	r9, r6
   15d28:	mov	r0, r6
   15d2c:	mov	r6, #1000	; 0x3e8
   15d30:	add	r1, r5, #128	; 0x80
   15d34:	mov	r2, #128	; 0x80
   15d38:	add	r8, pc, r8
   15d3c:	add	sl, sp, #8
   15d40:	add	r7, pc, r7
   15d44:	mul	r6, r6, r4
   15d48:	bl	47e8 <memcpy@plt>
   15d4c:	b	15d64 <rb_select_select+0x80>
   15d50:	bl	4cbc <__errno_location@plt>
   15d54:	ldr	r0, [r0]
   15d58:	bl	43b0 <rb_ignore_errno@plt>
   15d5c:	cmp	r0, r4
   15d60:	beq	15f4c <rb_select_select+0x268>
   15d64:	ldr	r0, [r7]
   15d68:	mov	r4, #0
   15d6c:	mov	r2, r9
   15d70:	mov	r3, r4
   15d74:	add	r1, r5, #256	; 0x100
   15d78:	str	sl, [sp]
   15d7c:	str	r4, [sp, #8]
   15d80:	str	r6, [sp, #12]
   15d84:	add	r0, r0, #1
   15d88:	bl	4908 <select@plt>
   15d8c:	subs	fp, r0, #0
   15d90:	blt	15d50 <rb_select_select+0x6c>
   15d94:	bl	4968 <rb_set_time@plt>
   15d98:	cmp	fp, #0
   15d9c:	beq	15e18 <rb_select_select+0x134>
   15da0:	ldr	r2, [r7]
   15da4:	cmp	r2, #0
   15da8:	blt	15e18 <rb_select_select+0x134>
   15dac:	ldr	r3, [pc, #432]	; 15f64 <rb_select_select+0x280>
   15db0:	ldr	r6, [pc, #432]	; 15f68 <rb_select_select+0x284>
   15db4:	ldr	r7, [pc, #432]	; 15f6c <rb_select_select+0x288>
   15db8:	ldr	r5, [r8, r3]
   15dbc:	add	r6, pc, r6
   15dc0:	ldr	r8, [pc, #424]	; 15f70 <rb_select_select+0x28c>
   15dc4:	add	r7, pc, r7
   15dc8:	add	r8, pc, r8
   15dcc:	asr	r3, r4, #24
   15dd0:	ldr	r1, [r5]
   15dd4:	eor	r3, r3, r4, asr #12
   15dd8:	eor	r3, r3, r4
   15ddc:	ubfx	r3, r3, #0, #12
   15de0:	add	r3, r3, r3, lsl #1
   15de4:	ldr	r3, [r1, r3, lsl #2]
   15de8:	cmp	r3, #0
   15dec:	beq	15e0c <rb_select_select+0x128>
   15df0:	ldr	r9, [r3]
   15df4:	ldr	r1, [r9, #12]
   15df8:	cmp	r1, r4
   15dfc:	beq	15e38 <rb_select_select+0x154>
   15e00:	ldr	r3, [r3, #8]
   15e04:	cmp	r3, #0
   15e08:	bne	15df0 <rb_select_select+0x10c>
   15e0c:	add	r4, r4, #1
   15e10:	cmp	r4, r2
   15e14:	ble	15dcc <rb_select_select+0xe8>
   15e18:	mov	r0, #0
   15e1c:	add	sp, sp, #20
   15e20:	ldrd	r4, [sp]
   15e24:	ldrd	r6, [sp, #8]
   15e28:	ldrd	r8, [sp, #16]
   15e2c:	ldrd	sl, [sp, #24]
   15e30:	add	sp, sp, #32
   15e34:	pop	{pc}		; (ldr pc, [sp], #4)
   15e38:	asr	sl, r4, #5
   15e3c:	and	r3, r4, #31
   15e40:	mov	fp, #1
   15e44:	lsl	fp, fp, r3
   15e48:	lsl	sl, sl, #2
   15e4c:	add	r3, r6, sl
   15e50:	ldr	r3, [r3, #256]	; 0x100
   15e54:	tst	fp, r3
   15e58:	beq	15e7c <rb_select_select+0x198>
   15e5c:	ldr	r3, [r9, #28]
   15e60:	mov	r2, #0
   15e64:	str	r2, [r9, #28]
   15e68:	cmp	r3, r2
   15e6c:	beq	15e7c <rb_select_select+0x198>
   15e70:	mov	r0, r9
   15e74:	ldr	r1, [r9, #32]
   15e78:	blx	r3
   15e7c:	ldrb	r3, [r9, #16]
   15e80:	tst	r3, #1
   15e84:	beq	15ee8 <rb_select_select+0x204>
   15e88:	add	sl, r7, sl
   15e8c:	ldr	r3, [sl, #384]	; 0x180
   15e90:	tst	fp, r3
   15e94:	beq	15eb8 <rb_select_select+0x1d4>
   15e98:	ldr	r3, [r9, #36]	; 0x24
   15e9c:	mov	r2, #0
   15ea0:	str	r2, [r9, #36]	; 0x24
   15ea4:	cmp	r3, r2
   15ea8:	beq	15f00 <rb_select_select+0x21c>
   15eac:	mov	r0, r9
   15eb0:	ldr	r1, [r9, #40]	; 0x28
   15eb4:	blx	r3
   15eb8:	ldr	r3, [r9, #28]
   15ebc:	cmp	r3, #0
   15ec0:	beq	15f34 <rb_select_select+0x250>
   15ec4:	ldr	r3, [r9, #36]	; 0x24
   15ec8:	cmp	r3, #0
   15ecc:	beq	15f0c <rb_select_select+0x228>
   15ed0:	ldr	r3, [pc, #156]	; 15f74 <rb_select_select+0x290>
   15ed4:	add	r4, r4, #1
   15ed8:	ldr	r2, [pc, r3]
   15edc:	cmp	r4, r2
   15ee0:	ble	15dcc <rb_select_select+0xe8>
   15ee4:	b	15e18 <rb_select_select+0x134>
   15ee8:	ldr	r3, [pc, #136]	; 15f78 <rb_select_select+0x294>
   15eec:	add	r4, r4, #1
   15ef0:	ldr	r2, [pc, r3]
   15ef4:	cmp	r4, r2
   15ef8:	ble	15dcc <rb_select_select+0xe8>
   15efc:	b	15e18 <rb_select_select+0x134>
   15f00:	ldr	r3, [r9, #28]
   15f04:	cmp	r3, #0
   15f08:	beq	15f34 <rb_select_select+0x250>
   15f0c:	mov	r2, #2
   15f10:	mov	r3, #0
   15f14:	ldr	r0, [r9, #12]
   15f18:	add	r1, r9, #20
   15f1c:	add	r4, r4, #1
   15f20:	bl	158e0 <select_update_selectfds.isra.0>
   15f24:	ldr	r2, [r8]
   15f28:	cmp	r4, r2
   15f2c:	ble	15dcc <rb_select_select+0xe8>
   15f30:	b	15e18 <rb_select_select+0x134>
   15f34:	mov	r3, #0
   15f38:	mov	r2, #1
   15f3c:	ldr	r0, [r9, #12]
   15f40:	add	r1, r9, #20
   15f44:	bl	158e0 <select_update_selectfds.isra.0>
   15f48:	b	15ec4 <rb_select_select+0x1e0>
   15f4c:	bl	4968 <rb_set_time@plt>
   15f50:	mvn	r0, #0
   15f54:	b	15e1c <rb_select_select+0x138>
   15f58:	.word	0x00034018
   15f5c:	.word	0x0001673c
   15f60:	.word	0x000162c0
   15f64:	.word	0x000003bc
   15f68:	.word	0x00033f60
   15f6c:	.word	0x00033f58
   15f70:	.word	0x000166b4
   15f74:	.word	0x000165a4
   15f78:	.word	0x0001658c

00015f7c <rb_init_netio_kqueue>:
   15f7c:	str	r4, [sp, #-8]!
   15f80:	str	lr, [sp, #4]
   15f84:	bl	4cbc <__errno_location@plt>
   15f88:	mov	r3, #38	; 0x26
   15f8c:	ldr	r4, [sp]
   15f90:	add	sp, sp, #4
   15f94:	str	r3, [r0]
   15f98:	mvn	r0, #0
   15f9c:	pop	{pc}		; (ldr pc, [sp], #4)

00015fa0 <rb_setselect_kqueue>:
   15fa0:	str	r4, [sp, #-8]!
   15fa4:	str	lr, [sp, #4]
   15fa8:	bl	4cbc <__errno_location@plt>
   15fac:	mov	r3, #38	; 0x26
   15fb0:	ldr	r4, [sp]
   15fb4:	add	sp, sp, #4
   15fb8:	str	r3, [r0]
   15fbc:	pop	{pc}		; (ldr pc, [sp], #4)

00015fc0 <rb_select_kqueue>:
   15fc0:	str	r4, [sp, #-8]!
   15fc4:	str	lr, [sp, #4]
   15fc8:	bl	4cbc <__errno_location@plt>
   15fcc:	mov	r3, #38	; 0x26
   15fd0:	ldr	r4, [sp]
   15fd4:	add	sp, sp, #4
   15fd8:	str	r3, [r0]
   15fdc:	mvn	r0, #0
   15fe0:	pop	{pc}		; (ldr pc, [sp], #4)

00015fe4 <rb_setup_fd_kqueue>:
   15fe4:	str	r4, [sp, #-8]!
   15fe8:	str	lr, [sp, #4]
   15fec:	bl	4cbc <__errno_location@plt>
   15ff0:	mov	r3, #38	; 0x26
   15ff4:	ldr	r4, [sp]
   15ff8:	add	sp, sp, #4
   15ffc:	str	r3, [r0]
   16000:	mvn	r0, #0
   16004:	pop	{pc}		; (ldr pc, [sp], #4)

00016008 <rb_kqueue_init_event>:
   16008:	bx	lr

0001600c <rb_kqueue_sched_event>:
   1600c:	str	r4, [sp, #-8]!
   16010:	str	lr, [sp, #4]
   16014:	bl	4cbc <__errno_location@plt>
   16018:	mov	r3, #38	; 0x26
   1601c:	ldr	r4, [sp]
   16020:	add	sp, sp, #4
   16024:	str	r3, [r0]
   16028:	mvn	r0, #0
   1602c:	pop	{pc}		; (ldr pc, [sp], #4)

00016030 <rb_kqueue_unsched_event>:
   16030:	bx	lr

00016034 <rb_kqueue_supports_event>:
   16034:	str	r4, [sp, #-8]!
   16038:	str	lr, [sp, #4]
   1603c:	bl	4cbc <__errno_location@plt>
   16040:	mov	r3, #38	; 0x26
   16044:	ldr	r4, [sp]
   16048:	add	sp, sp, #4
   1604c:	str	r3, [r0]
   16050:	mov	r0, #0
   16054:	pop	{pc}		; (ldr pc, [sp], #4)

00016058 <rb_rawbuf_flush_writev>:
   16058:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1605c:	mov	r2, #8192	; 0x2000
   16060:	mov	r5, r0
   16064:	strd	r6, [sp, #8]
   16068:	mov	r6, r1
   1606c:	mov	r1, #0
   16070:	strd	r8, [sp, #16]
   16074:	strd	sl, [sp, #24]
   16078:	str	lr, [sp, #32]
   1607c:	sub	sp, sp, #8192	; 0x2000
   16080:	sub	sp, sp, #12
   16084:	add	r7, sp, #8
   16088:	mov	r0, r7
   1608c:	bl	4608 <memset@plt>
   16090:	ldr	r3, [r5]
   16094:	cmp	r3, #0
   16098:	movne	r4, #0
   1609c:	bne	160c4 <rb_rawbuf_flush_writev+0x6c>
   160a0:	b	1626c <rb_rawbuf_flush_writev+0x214>
   160a4:	add	r1, r7, r4, lsl #3
   160a8:	str	r0, [r1, #-8]
   160ac:	ldr	r3, [r3, #8]
   160b0:	str	r2, [r1, #-4]
   160b4:	cmp	r3, #0
   160b8:	beq	160f0 <rb_rawbuf_flush_writev+0x98>
   160bc:	cmp	r4, #1024	; 0x400
   160c0:	beq	160f0 <rb_rawbuf_flush_writev+0x98>
   160c4:	ldr	r2, [r3]
   160c8:	add	r4, r4, #1
   160cc:	ldrb	r1, [r2, #1040]	; 0x410
   160d0:	add	r0, r2, #12
   160d4:	ldr	r2, [r2, #1036]	; 0x40c
   160d8:	cmp	r1, #0
   160dc:	beq	160a4 <rb_rawbuf_flush_writev+0x4c>
   160e0:	ldr	r1, [r5, #16]
   160e4:	add	r0, r0, r1
   160e8:	sub	r2, r2, r1
   160ec:	b	160a4 <rb_rawbuf_flush_writev+0x4c>
   160f0:	mov	r1, r7
   160f4:	mov	r0, r6
   160f8:	mov	r2, r4
   160fc:	bl	4aac <rb_writev@plt>
   16100:	subs	r9, r0, #0
   16104:	ble	161d8 <rb_rawbuf_flush_writev+0x180>
   16108:	ldr	r1, [r5]
   1610c:	cmp	r1, #0
   16110:	beq	161d8 <rb_rawbuf_flush_writev+0x180>
   16114:	ldr	r3, [pc, #356]	; 16280 <rb_rawbuf_flush_writev+0x228>
   16118:	add	r4, r4, #1
   1611c:	mov	r7, r9
   16120:	mov	fp, #1
   16124:	mov	sl, #0
   16128:	ldr	r8, [pc, #340]	; 16284 <rb_rawbuf_flush_writev+0x22c>
   1612c:	ldr	r6, [r1, #8]
   16130:	add	r3, pc, r3
   16134:	add	r8, pc, r8
   16138:	str	r3, [sp, #4]
   1613c:	ldr	r3, [r1]
   16140:	b	16158 <rb_rawbuf_flush_writev+0x100>
   16144:	add	fp, fp, #1
   16148:	ldr	r3, [r6]
   1614c:	cmp	r4, fp
   16150:	ldr	r6, [r6, #8]
   16154:	beq	161d8 <rb_rawbuf_flush_writev+0x180>
   16158:	ldrb	ip, [r3, #1040]	; 0x410
   1615c:	ldr	r0, [r5, #12]
   16160:	ldr	r1, [r3, #1036]	; 0x40c
   16164:	cmp	ip, #0
   16168:	beq	1617c <rb_rawbuf_flush_writev+0x124>
   1616c:	ldr	ip, [r5, #16]
   16170:	sub	ip, r1, ip
   16174:	cmp	ip, r7
   16178:	ble	161fc <rb_rawbuf_flush_writev+0x1a4>
   1617c:	cmp	r1, r7
   16180:	bgt	16254 <rb_rawbuf_flush_writev+0x1fc>
   16184:	sub	r0, r0, r1
   16188:	sub	r7, r7, r1
   1618c:	ldmib	r3, {r1, ip}
   16190:	str	r0, [r5, #12]
   16194:	ldr	r0, [r8]
   16198:	cmp	ip, #0
   1619c:	strne	r1, [ip, #4]
   161a0:	streq	r1, [r5, #4]
   161a4:	ldr	r1, [r3, #4]
   161a8:	cmp	r1, #0
   161ac:	strne	ip, [r1, #8]
   161b0:	mov	r1, r3
   161b4:	streq	ip, [r5]
   161b8:	ldr	ip, [r5, #8]
   161bc:	str	sl, [r3, #4]
   161c0:	str	sl, [r3, #8]
   161c4:	sub	r3, ip, #1
   161c8:	str	r3, [r5, #8]
   161cc:	bl	48a8 <rb_bh_free@plt>
   161d0:	cmp	r6, #0
   161d4:	bne	16144 <rb_rawbuf_flush_writev+0xec>
   161d8:	mov	r0, r9
   161dc:	add	sp, sp, #8192	; 0x2000
   161e0:	add	sp, sp, #12
   161e4:	ldrd	r4, [sp]
   161e8:	ldrd	r6, [sp, #8]
   161ec:	ldrd	r8, [sp, #16]
   161f0:	ldrd	sl, [sp, #24]
   161f4:	add	sp, sp, #32
   161f8:	pop	{pc}		; (ldr pc, [sp], #4)
   161fc:	sub	r0, r0, ip
   16200:	ldr	r1, [r3, #8]
   16204:	sub	r7, r7, ip
   16208:	str	r0, [r5, #12]
   1620c:	ldr	r0, [r3, #4]
   16210:	cmp	r1, #0
   16214:	ldr	ip, [r5, #8]
   16218:	strne	r0, [r1, #4]
   1621c:	streq	r0, [r5, #4]
   16220:	ldr	r0, [r3, #4]
   16224:	cmp	r0, #0
   16228:	strne	r1, [r0, #8]
   1622c:	streq	r1, [r5]
   16230:	mov	r1, r3
   16234:	str	sl, [r3, #4]
   16238:	str	sl, [r3, #8]
   1623c:	ldr	r3, [sp, #4]
   16240:	ldr	r0, [r3]
   16244:	sub	r3, ip, #1
   16248:	str	r3, [r5, #8]
   1624c:	bl	48a8 <rb_bh_free@plt>
   16250:	b	161d0 <rb_rawbuf_flush_writev+0x178>
   16254:	sub	r0, r0, r7
   16258:	mov	r2, #1
   1625c:	strb	r2, [r3, #1040]	; 0x410
   16260:	str	r0, [r5, #12]
   16264:	str	r7, [r5, #16]
   16268:	b	161d8 <rb_rawbuf_flush_writev+0x180>
   1626c:	bl	4cbc <__errno_location@plt>
   16270:	mov	r3, #11
   16274:	mvn	r9, #0
   16278:	str	r3, [r0]
   1627c:	b	161d8 <rb_rawbuf_flush_writev+0x180>
   16280:	.word	0x00033dec
   16284:	.word	0x00033de8

00016288 <rb_rawbuf_flush>:
   16288:	ldr	r3, [r0]
   1628c:	strd	r4, [sp, #-16]!
   16290:	str	r6, [sp, #8]
   16294:	str	lr, [sp, #12]
   16298:	cmp	r3, #0
   1629c:	beq	163b8 <rb_rawbuf_flush+0x130>
   162a0:	mov	r4, r0
   162a4:	mov	r0, r1
   162a8:	mov	r6, r1
   162ac:	bl	4488 <rb_fd_ssl@plt>
   162b0:	cmp	r0, #0
   162b4:	beq	1639c <rb_rawbuf_flush+0x114>
   162b8:	ldr	r3, [r4]
   162bc:	ldr	r5, [r3]
   162c0:	ldrb	r3, [r5, #1040]	; 0x410
   162c4:	cmp	r3, #0
   162c8:	beq	16384 <rb_rawbuf_flush+0xfc>
   162cc:	ldr	r2, [r4, #16]
   162d0:	mov	r1, r2
   162d4:	ldr	ip, [r5, #1036]	; 0x40c
   162d8:	add	r3, r5, #12
   162dc:	mov	r0, r6
   162e0:	add	r1, r3, r1
   162e4:	sub	r2, ip, r2
   162e8:	bl	4638 <rb_write@plt>
   162ec:	subs	r6, r0, #0
   162f0:	ble	16370 <rb_rawbuf_flush+0xe8>
   162f4:	ldr	r3, [r4, #16]
   162f8:	ldr	r2, [r5, #1036]	; 0x40c
   162fc:	add	r3, r6, r3
   16300:	cmp	r3, r2
   16304:	str	r3, [r4, #16]
   16308:	bne	16364 <rb_rawbuf_flush+0xdc>
   1630c:	mov	r2, #0
   16310:	ldr	r3, [r5, #8]
   16314:	mov	r0, #0
   16318:	mov	r1, r5
   1631c:	str	r2, [r4, #16]
   16320:	ldr	r2, [r5, #4]
   16324:	cmp	r3, #0
   16328:	strne	r2, [r3, #4]
   1632c:	streq	r2, [r4, #4]
   16330:	ldr	r2, [r5, #4]
   16334:	cmp	r2, #0
   16338:	strne	r3, [r2, #8]
   1633c:	ldr	r2, [r4, #8]
   16340:	streq	r3, [r4]
   16344:	ldr	r3, [pc, #128]	; 163cc <rb_rawbuf_flush+0x144>
   16348:	str	r0, [r5, #4]
   1634c:	str	r0, [r5, #8]
   16350:	sub	r2, r2, #1
   16354:	add	r3, pc, r3
   16358:	str	r2, [r4, #8]
   1635c:	ldr	r0, [r3]
   16360:	bl	48a8 <rb_bh_free@plt>
   16364:	ldr	r3, [r4, #12]
   16368:	sub	r3, r3, r6
   1636c:	str	r3, [r4, #12]
   16370:	mov	r0, r6
   16374:	ldrd	r4, [sp]
   16378:	ldr	r6, [sp, #8]
   1637c:	add	sp, sp, #12
   16380:	pop	{pc}		; (ldr pc, [sp], #4)
   16384:	mov	r0, #1
   16388:	mov	r1, r3
   1638c:	mov	r2, r3
   16390:	strb	r0, [r5, #1040]	; 0x410
   16394:	str	r3, [r4, #16]
   16398:	b	162d4 <rb_rawbuf_flush+0x4c>
   1639c:	mov	r1, r6
   163a0:	mov	r0, r4
   163a4:	ldrd	r4, [sp]
   163a8:	ldr	r6, [sp, #8]
   163ac:	ldr	lr, [sp, #12]
   163b0:	add	sp, sp, #16
   163b4:	b	16058 <rb_rawbuf_flush_writev>
   163b8:	bl	4cbc <__errno_location@plt>
   163bc:	mov	r3, #11
   163c0:	mvn	r6, #0
   163c4:	str	r3, [r0]
   163c8:	b	16370 <rb_rawbuf_flush+0xe8>
   163cc:	.word	0x00033bc8

000163d0 <rb_rawbuf_append>:
   163d0:	ldr	r3, [r0, #4]
   163d4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   163d8:	mov	r5, r0
   163dc:	strd	r6, [sp, #8]
   163e0:	mov	r7, r2
   163e4:	strd	r8, [sp, #16]
   163e8:	mov	r8, r1
   163ec:	str	sl, [sp, #24]
   163f0:	cmp	r3, #0
   163f4:	str	lr, [sp, #28]
   163f8:	beq	16420 <rb_rawbuf_append+0x50>
   163fc:	ldr	r4, [r3]
   16400:	cmp	r4, #0
   16404:	beq	16420 <rb_rawbuf_append+0x50>
   16408:	ldr	r3, [r4, #1036]	; 0x40c
   1640c:	cmp	r3, #1024	; 0x400
   16410:	bge	16420 <rb_rawbuf_append+0x50>
   16414:	ldrb	r0, [r4, #1040]	; 0x410
   16418:	cmp	r0, #0
   1641c:	beq	164c0 <rb_rawbuf_append+0xf0>
   16420:	cmp	r7, #0
   16424:	ble	164f0 <rb_rawbuf_append+0x120>
   16428:	ldr	sl, [pc, #264]	; 16538 <rb_rawbuf_append+0x168>
   1642c:	mov	r9, #0
   16430:	add	sl, pc, sl
   16434:	b	1648c <rb_rawbuf_append+0xbc>
   16438:	ldr	r3, [r5, #8]
   1643c:	cmp	r7, #1024	; 0x400
   16440:	mov	r1, r8
   16444:	movlt	r6, r7
   16448:	movge	r6, #1024	; 0x400
   1644c:	str	r4, [r5, #4]
   16450:	mov	r2, r6
   16454:	add	r0, r4, #12
   16458:	sub	r7, r7, r6
   1645c:	add	r8, r8, r6
   16460:	add	r3, r3, #1
   16464:	str	r3, [r5, #8]
   16468:	bl	47e8 <memcpy@plt>
   1646c:	ldr	r3, [r5, #12]
   16470:	cmp	r7, #0
   16474:	ldr	r2, [r4, #1036]	; 0x40c
   16478:	add	r3, r3, r6
   1647c:	add	r6, r2, r6
   16480:	str	r6, [r4, #1036]	; 0x40c
   16484:	str	r3, [r5, #12]
   16488:	ble	164f0 <rb_rawbuf_append+0x120>
   1648c:	ldr	r0, [sl]
   16490:	bl	492c <rb_bh_alloc@plt>
   16494:	ldr	r3, [r5, #4]
   16498:	mov	r4, r0
   1649c:	str	r0, [r4]
   164a0:	cmp	r3, #0
   164a4:	stmib	r0, {r3, r9}
   164a8:	strne	r0, [r3, #8]
   164ac:	bne	16438 <rb_rawbuf_append+0x68>
   164b0:	ldr	r3, [r5]
   164b4:	cmp	r3, #0
   164b8:	streq	r0, [r5]
   164bc:	b	16438 <rb_rawbuf_append+0x68>
   164c0:	rsb	r6, r3, #1024	; 0x400
   164c4:	add	r0, r4, #12
   164c8:	cmp	r2, r6
   164cc:	add	r0, r0, r3
   164d0:	bge	16508 <rb_rawbuf_append+0x138>
   164d4:	bl	47e8 <memcpy@plt>
   164d8:	ldr	r3, [r5, #12]
   164dc:	ldr	r2, [r4, #1036]	; 0x40c
   164e0:	add	r3, r3, r7
   164e4:	add	r7, r2, r7
   164e8:	str	r7, [r4, #1036]	; 0x40c
   164ec:	str	r3, [r5, #12]
   164f0:	ldrd	r4, [sp]
   164f4:	ldrd	r6, [sp, #8]
   164f8:	ldrd	r8, [sp, #16]
   164fc:	ldr	sl, [sp, #24]
   16500:	add	sp, sp, #28
   16504:	pop	{pc}		; (ldr pc, [sp], #4)
   16508:	mov	r2, r6
   1650c:	bl	47e8 <memcpy@plt>
   16510:	ldr	r3, [r5, #12]
   16514:	subs	r7, r7, r6
   16518:	ldr	r2, [r4, #1036]	; 0x40c
   1651c:	add	r3, r3, r6
   16520:	add	r2, r2, r6
   16524:	str	r2, [r4, #1036]	; 0x40c
   16528:	str	r3, [r5, #12]
   1652c:	beq	164f0 <rb_rawbuf_append+0x120>
   16530:	add	r8, r8, r6
   16534:	b	16428 <rb_rawbuf_append+0x58>
   16538:	.word	0x00033aec

0001653c <rb_rawbuf_get>:
   1653c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16540:	ldr	r4, [r0]
   16544:	strd	r6, [sp, #8]
   16548:	str	r8, [sp, #16]
   1654c:	str	lr, [sp, #20]
   16550:	cmp	r4, #0
   16554:	beq	165cc <rb_rawbuf_get+0x90>
   16558:	ldr	r7, [r4]
   1655c:	mov	r5, r2
   16560:	mov	r6, r0
   16564:	ldrb	r3, [r7, #1040]	; 0x410
   16568:	add	ip, r7, #12
   1656c:	ldr	r4, [r7, #1036]	; 0x40c
   16570:	cmp	r3, #0
   16574:	ldrne	r3, [r0, #16]
   16578:	addne	ip, ip, r3
   1657c:	cmp	r2, r4
   16580:	mov	r3, r1
   16584:	movlt	r4, r2
   16588:	mov	r0, r3
   1658c:	mov	r1, ip
   16590:	mov	r2, r4
   16594:	bl	47e8 <memcpy@plt>
   16598:	ldr	r3, [r7, #1036]	; 0x40c
   1659c:	cmp	r3, r4
   165a0:	beq	165e4 <rb_rawbuf_get+0xa8>
   165a4:	mov	r2, #1
   165a8:	sub	r3, r3, r4
   165ac:	strb	r2, [r7, #1040]	; 0x410
   165b0:	ldr	r2, [r6, #12]
   165b4:	str	r3, [r7, #1036]	; 0x40c
   165b8:	ldr	r3, [r6, #16]
   165bc:	sub	r2, r2, r4
   165c0:	add	r3, r3, r4
   165c4:	str	r2, [r6, #12]
   165c8:	str	r3, [r6, #16]
   165cc:	mov	r0, r4
   165d0:	ldrd	r4, [sp]
   165d4:	ldrd	r6, [sp, #8]
   165d8:	ldr	r8, [sp, #16]
   165dc:	add	sp, sp, #20
   165e0:	pop	{pc}		; (ldr pc, [sp], #4)
   165e4:	mov	r2, #0
   165e8:	ldr	r3, [r7, #8]
   165ec:	mov	r0, #0
   165f0:	mov	r1, r7
   165f4:	str	r2, [r6, #16]
   165f8:	ldr	r2, [r7, #4]
   165fc:	cmp	r3, #0
   16600:	strne	r2, [r3, #4]
   16604:	streq	r2, [r6, #4]
   16608:	ldr	r2, [r7, #4]
   1660c:	cmp	r2, #0
   16610:	strne	r3, [r2, #8]
   16614:	ldr	r2, [r6, #8]
   16618:	streq	r3, [r6]
   1661c:	ldr	r3, [pc, #40]	; 1664c <rb_rawbuf_get+0x110>
   16620:	str	r0, [r7, #4]
   16624:	str	r0, [r7, #8]
   16628:	sub	r2, r2, #1
   1662c:	add	r3, pc, r3
   16630:	str	r2, [r6, #8]
   16634:	ldr	r0, [r3]
   16638:	bl	48a8 <rb_bh_free@plt>
   1663c:	ldr	r2, [r6, #12]
   16640:	sub	r5, r2, r5
   16644:	str	r5, [r6, #12]
   16648:	b	165cc <rb_rawbuf_get+0x90>
   1664c:	.word	0x000338f0

00016650 <rb_rawbuf_length>:
   16650:	ldr	r0, [r0, #12]
   16654:	bx	lr

00016658 <rb_new_rawbuffer>:
   16658:	mov	r1, #20
   1665c:	mov	r0, #1
   16660:	str	r4, [sp, #-8]!
   16664:	str	lr, [sp, #4]
   16668:	bl	45c0 <calloc@plt>
   1666c:	cmp	r0, #0
   16670:	beq	16680 <rb_new_rawbuffer+0x28>
   16674:	ldr	r4, [sp]
   16678:	add	sp, sp, #4
   1667c:	pop	{pc}		; (ldr pc, [sp], #4)
   16680:	bl	495c <rb_outofmemory@plt>

00016684 <rb_free_rawbuffer>:
   16684:	ldr	r3, [r0]
   16688:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1668c:	mov	r5, r0
   16690:	strd	r6, [sp, #8]
   16694:	str	r8, [sp, #16]
   16698:	str	lr, [sp, #20]
   1669c:	cmp	r3, #0
   166a0:	beq	16714 <rb_free_rawbuffer+0x90>
   166a4:	ldr	r8, [pc, #152]	; 16744 <rb_free_rawbuffer+0xc0>
   166a8:	mov	r6, #0
   166ac:	ldr	r7, [pc, #148]	; 16748 <rb_free_rawbuffer+0xc4>
   166b0:	ldr	r4, [r3, #8]
   166b4:	add	r8, pc, r8
   166b8:	add	r7, pc, r7
   166bc:	ldr	r3, [r3]
   166c0:	ldr	ip, [r5, #8]
   166c4:	ldmib	r3, {r1, r2}
   166c8:	cmp	r2, #0
   166cc:	strne	r1, [r2, #4]
   166d0:	streq	r1, [r5, #4]
   166d4:	mov	r1, r3
   166d8:	ldr	r0, [r3, #4]
   166dc:	cmp	r0, #0
   166e0:	beq	16730 <rb_free_rawbuffer+0xac>
   166e4:	str	r2, [r0, #8]
   166e8:	ldr	r0, [r7]
   166ec:	str	r6, [r3, #4]
   166f0:	str	r6, [r3, #8]
   166f4:	sub	r3, ip, #1
   166f8:	str	r3, [r5, #8]
   166fc:	bl	48a8 <rb_bh_free@plt>
   16700:	cmp	r4, #0
   16704:	beq	16714 <rb_free_rawbuffer+0x90>
   16708:	mov	r3, r4
   1670c:	ldr	r4, [r4, #8]
   16710:	b	166bc <rb_free_rawbuffer+0x38>
   16714:	mov	r0, r5
   16718:	ldrd	r4, [sp]
   1671c:	ldrd	r6, [sp, #8]
   16720:	ldr	r8, [sp, #16]
   16724:	ldr	lr, [sp, #20]
   16728:	add	sp, sp, #24
   1672c:	b	46d4 <free@plt>
   16730:	str	r2, [r5]
   16734:	str	r0, [r3, #4]
   16738:	str	r0, [r3, #8]
   1673c:	ldr	r0, [r8]
   16740:	b	166f4 <rb_free_rawbuffer+0x70>
   16744:	.word	0x00033868
   16748:	.word	0x00033864

0001674c <rb_init_rawbuffers>:
   1674c:	str	r4, [sp, #-8]!
   16750:	ldr	r4, [pc, #64]	; 16798 <rb_init_rawbuffers+0x4c>
   16754:	add	r4, pc, r4
   16758:	ldr	r3, [r4]
   1675c:	str	lr, [sp, #4]
   16760:	cmp	r3, #0
   16764:	beq	16774 <rb_init_rawbuffers+0x28>
   16768:	ldr	r4, [sp]
   1676c:	add	sp, sp, #4
   16770:	pop	{pc}		; (ldr pc, [sp], #4)
   16774:	ldr	r2, [pc, #32]	; 1679c <rb_init_rawbuffers+0x50>
   16778:	mov	r1, r0
   1677c:	movw	r0, #1044	; 0x414
   16780:	add	r2, pc, r2
   16784:	bl	4a88 <rb_bh_create@plt>
   16788:	str	r0, [r4]
   1678c:	ldr	r4, [sp]
   16790:	add	sp, sp, #4
   16794:	pop	{pc}		; (ldr pc, [sp], #4)
   16798:	.word	0x000337c8
   1679c:	.word	0x00004c60

000167a0 <ascii2prefix>:
   167a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   167a4:	strd	r6, [sp, #8]
   167a8:	subs	r6, r1, #0
   167ac:	str	r8, [sp, #16]
   167b0:	str	lr, [sp, #20]
   167b4:	sub	sp, sp, #1040	; 0x410
   167b8:	sub	sp, sp, #8
   167bc:	beq	168a0 <ascii2prefix+0x100>
   167c0:	cmp	r0, #2
   167c4:	mov	r4, r0
   167c8:	moveq	r7, #32
   167cc:	beq	167dc <ascii2prefix+0x3c>
   167d0:	cmp	r0, #10
   167d4:	movne	r7, #0
   167d8:	moveq	r7, #128	; 0x80
   167dc:	mov	r1, #47	; 0x2f
   167e0:	mov	r0, r6
   167e4:	bl	4584 <strchr@plt>
   167e8:	subs	r5, r0, #0
   167ec:	beq	1683c <ascii2prefix+0x9c>
   167f0:	mov	r2, #10
   167f4:	mov	r1, #0
   167f8:	add	r0, r5, #1
   167fc:	sub	r5, r5, r6
   16800:	bl	4854 <strtol@plt>
   16804:	mov	r1, r6
   16808:	add	r6, sp, #24
   1680c:	mov	r8, r0
   16810:	mov	r2, r5
   16814:	mov	r0, r6
   16818:	bl	47e8 <memcpy@plt>
   1681c:	add	r3, sp, #1040	; 0x410
   16820:	cmp	r7, r8
   16824:	cmpge	r8, #0
   16828:	add	r3, r3, #8
   1682c:	mov	r2, #0
   16830:	add	r3, r3, r5
   16834:	movgt	r7, r8
   16838:	strb	r2, [r3, #-1024]	; 0xfffffc00
   1683c:	cmp	r4, #2
   16840:	beq	168c0 <ascii2prefix+0x120>
   16844:	cmp	r4, #10
   16848:	bne	168a0 <ascii2prefix+0x100>
   1684c:	add	r5, sp, #8
   16850:	mov	r1, r6
   16854:	mov	r2, r5
   16858:	mov	r0, r4
   1685c:	bl	4614 <rb_inet_pton@plt>
   16860:	cmp	r0, #0
   16864:	ble	168a0 <ascii2prefix+0x100>
   16868:	mov	r1, #24
   1686c:	mov	r0, #1
   16870:	bl	45c0 <calloc@plt>
   16874:	cmp	r0, #0
   16878:	beq	16904 <ascii2prefix+0x164>
   1687c:	strh	r4, [r0]
   16880:	mov	r1, #1
   16884:	ldrd	r2, [r5]
   16888:	strh	r7, [r0, #2]
   1688c:	ldrd	r4, [r5, #8]
   16890:	str	r1, [r0, #4]
   16894:	strd	r2, [r0, #8]
   16898:	strd	r4, [r0, #16]
   1689c:	b	168a4 <ascii2prefix+0x104>
   168a0:	mov	r0, #0
   168a4:	add	sp, sp, #1040	; 0x410
   168a8:	add	sp, sp, #8
   168ac:	ldrd	r4, [sp]
   168b0:	ldrd	r6, [sp, #8]
   168b4:	ldr	r8, [sp, #16]
   168b8:	add	sp, sp, #20
   168bc:	pop	{pc}		; (ldr pc, [sp], #4)
   168c0:	mov	r1, r6
   168c4:	add	r2, sp, #4
   168c8:	mov	r0, r4
   168cc:	bl	4614 <rb_inet_pton@plt>
   168d0:	cmp	r0, #0
   168d4:	ble	168a0 <ascii2prefix+0x100>
   168d8:	mov	r1, #24
   168dc:	mov	r0, #1
   168e0:	bl	45c0 <calloc@plt>
   168e4:	cmp	r0, #0
   168e8:	beq	16904 <ascii2prefix+0x164>
   168ec:	ldr	r3, [sp, #4]
   168f0:	mov	r2, #1
   168f4:	strh	r4, [r0]
   168f8:	strh	r7, [r0, #2]
   168fc:	strd	r2, [r0, #4]
   16900:	b	168a4 <ascii2prefix+0x104>
   16904:	bl	495c <rb_outofmemory@plt>

00016908 <rb_init_patricia>:
   16908:	bx	lr

0001690c <rb_new_patricia>:
   1690c:	mov	r1, #12
   16910:	str	r4, [sp, #-8]!
   16914:	mov	r4, r0
   16918:	mov	r0, #1
   1691c:	str	lr, [sp, #4]
   16920:	bl	45c0 <calloc@plt>
   16924:	subs	r3, r0, #0
   16928:	beq	16958 <rb_new_patricia+0x4c>
   1692c:	ldr	r2, [pc, #40]	; 1695c <rb_new_patricia+0x50>
   16930:	mov	r1, #0
   16934:	stm	r3, {r1, r4}
   16938:	str	r1, [r3, #8]
   1693c:	ldr	r4, [sp]
   16940:	add	sp, sp, #4
   16944:	add	r2, pc, r2
   16948:	ldr	r3, [r2]
   1694c:	add	r3, r3, #1
   16950:	str	r3, [r2]
   16954:	pop	{pc}		; (ldr pc, [sp], #4)
   16958:	bl	495c <rb_outofmemory@plt>
   1695c:	.word	0x000335dc

00016960 <rb_clear_patricia>:
   16960:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16964:	ldr	r4, [r0]
   16968:	strd	r6, [sp, #8]
   1696c:	strd	r8, [sp, #16]
   16970:	str	sl, [sp, #24]
   16974:	mov	sl, r0
   16978:	str	lr, [sp, #28]
   1697c:	sub	sp, sp, #520	; 0x208
   16980:	cmp	r4, #0
   16984:	beq	16a20 <rb_clear_patricia+0xc0>
   16988:	add	r9, sp, #4
   1698c:	mov	r8, r1
   16990:	mov	r5, r9
   16994:	ldmib	r4, {r0, r6, r7}
   16998:	cmp	r0, #0
   1699c:	beq	169c8 <rb_clear_patricia+0x68>
   169a0:	ldr	r3, [r0, #4]
   169a4:	sub	r3, r3, #1
   169a8:	cmp	r3, #0
   169ac:	str	r3, [r0, #4]
   169b0:	ble	16a44 <rb_clear_patricia+0xe4>
   169b4:	ldr	r0, [r4, #20]
   169b8:	cmp	r8, #0
   169bc:	cmpne	r0, #0
   169c0:	beq	169c8 <rb_clear_patricia+0x68>
   169c4:	blx	r8
   169c8:	mov	r0, r4
   169cc:	bl	46d4 <free@plt>
   169d0:	ldr	r3, [sl, #8]
   169d4:	cmp	r6, #0
   169d8:	sub	r3, r3, #1
   169dc:	str	r3, [sl, #8]
   169e0:	beq	16a00 <rb_clear_patricia+0xa0>
   169e4:	cmp	r7, #0
   169e8:	mov	r4, r6
   169ec:	strne	r7, [r5], #4
   169f0:	ldmib	r4, {r0, r6, r7}
   169f4:	cmp	r0, #0
   169f8:	bne	169a0 <rb_clear_patricia+0x40>
   169fc:	b	169c8 <rb_clear_patricia+0x68>
   16a00:	cmp	r7, #0
   16a04:	movne	r4, r7
   16a08:	bne	16994 <rb_clear_patricia+0x34>
   16a0c:	cmp	r5, r9
   16a10:	beq	16a20 <rb_clear_patricia+0xc0>
   16a14:	ldr	r4, [r5, #-4]
   16a18:	cmp	r4, #0
   16a1c:	bne	16a4c <rb_clear_patricia+0xec>
   16a20:	mov	r0, sl
   16a24:	add	sp, sp, #520	; 0x208
   16a28:	ldrd	r4, [sp]
   16a2c:	ldrd	r6, [sp, #8]
   16a30:	ldrd	r8, [sp, #16]
   16a34:	ldr	sl, [sp, #24]
   16a38:	ldr	lr, [sp, #28]
   16a3c:	add	sp, sp, #32
   16a40:	b	46d4 <free@plt>
   16a44:	bl	46d4 <free@plt>
   16a48:	b	169b4 <rb_clear_patricia+0x54>
   16a4c:	sub	r5, r5, #4
   16a50:	b	16994 <rb_clear_patricia+0x34>

00016a54 <rb_destroy_patricia>:
   16a54:	str	r4, [sp, #-8]!
   16a58:	str	lr, [sp, #4]
   16a5c:	bl	44d0 <rb_clear_patricia@plt>
   16a60:	ldr	r2, [pc, #24]	; 16a80 <rb_destroy_patricia+0x2c>
   16a64:	ldr	r4, [sp]
   16a68:	add	sp, sp, #4
   16a6c:	add	r2, pc, r2
   16a70:	ldr	r3, [r2]
   16a74:	sub	r3, r3, #1
   16a78:	str	r3, [r2]
   16a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   16a80:	.word	0x000334b4

00016a84 <rb_patricia_process>:
   16a84:	strd	r4, [sp, #-20]!	; 0xffffffec
   16a88:	ldr	r4, [r0]
   16a8c:	strd	r6, [sp, #8]
   16a90:	str	lr, [sp, #16]
   16a94:	sub	sp, sp, #524	; 0x20c
   16a98:	cmp	r4, #0
   16a9c:	beq	16b18 <rb_patricia_process+0x94>
   16aa0:	add	r7, sp, #4
   16aa4:	mov	r6, r1
   16aa8:	mov	r5, r7
   16aac:	ldr	r3, [r4, #4]
   16ab0:	subs	r0, r3, #0
   16ab4:	beq	16ac0 <rb_patricia_process+0x3c>
   16ab8:	ldr	r1, [r4, #20]
   16abc:	blx	r6
   16ac0:	ldr	r3, [r4, #8]
   16ac4:	mov	r2, r5
   16ac8:	ldr	r4, [r4, #12]
   16acc:	cmp	r3, #0
   16ad0:	beq	16afc <rb_patricia_process+0x78>
   16ad4:	cmp	r4, #0
   16ad8:	moveq	r4, r3
   16adc:	beq	16aac <rb_patricia_process+0x28>
   16ae0:	str	r4, [r2], #4
   16ae4:	mov	r4, r3
   16ae8:	mov	r5, r2
   16aec:	ldr	r3, [r4, #4]
   16af0:	subs	r0, r3, #0
   16af4:	bne	16ab8 <rb_patricia_process+0x34>
   16af8:	b	16ac0 <rb_patricia_process+0x3c>
   16afc:	cmp	r4, #0
   16b00:	bne	16aac <rb_patricia_process+0x28>
   16b04:	cmp	r5, r7
   16b08:	beq	16b18 <rb_patricia_process+0x94>
   16b0c:	ldr	r4, [r5, #-4]
   16b10:	cmp	r4, #0
   16b14:	bne	16b2c <rb_patricia_process+0xa8>
   16b18:	add	sp, sp, #524	; 0x20c
   16b1c:	ldrd	r4, [sp]
   16b20:	ldrd	r6, [sp, #8]
   16b24:	add	sp, sp, #16
   16b28:	pop	{pc}		; (ldr pc, [sp], #4)
   16b2c:	sub	r5, r5, #4
   16b30:	b	16aac <rb_patricia_process+0x28>

00016b34 <rb_patricia_search_exact>:
   16b34:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16b38:	ldr	r4, [r0]
   16b3c:	strd	r6, [sp, #8]
   16b40:	str	r8, [sp, #16]
   16b44:	str	lr, [sp, #20]
   16b48:	cmp	r4, #0
   16b4c:	beq	16b88 <rb_patricia_search_exact+0x54>
   16b50:	ldrh	r5, [r1, #2]
   16b54:	add	r6, r1, #8
   16b58:	mov	r0, #128	; 0x80
   16b5c:	ldr	r3, [r4]
   16b60:	cmp	r3, r5
   16b64:	and	r2, r3, #7
   16b68:	bcs	16bb0 <rb_patricia_search_exact+0x7c>
   16b6c:	ldrb	r1, [r6, r3, lsr #3]
   16b70:	ldr	r3, [r4, #8]
   16b74:	ldr	r4, [r4, #12]
   16b78:	ands	r2, r1, r0, asr r2
   16b7c:	beq	16ba0 <rb_patricia_search_exact+0x6c>
   16b80:	cmp	r4, #0
   16b84:	bne	16b5c <rb_patricia_search_exact+0x28>
   16b88:	mov	r0, r4
   16b8c:	ldrd	r4, [sp]
   16b90:	ldrd	r6, [sp, #8]
   16b94:	ldr	r8, [sp, #16]
   16b98:	add	sp, sp, #20
   16b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   16ba0:	subs	r4, r3, #0
   16ba4:	bne	16b5c <rb_patricia_search_exact+0x28>
   16ba8:	mov	r4, #0
   16bac:	b	16b88 <rb_patricia_search_exact+0x54>
   16bb0:	bhi	16ba8 <rb_patricia_search_exact+0x74>
   16bb4:	ldr	r0, [r4, #4]
   16bb8:	cmp	r0, #0
   16bbc:	beq	16ba8 <rb_patricia_search_exact+0x74>
   16bc0:	add	r7, r0, #8
   16bc4:	lsr	r2, r5, #3
   16bc8:	mov	r1, r6
   16bcc:	mov	r0, r7
   16bd0:	bl	4428 <memcmp@plt>
   16bd4:	cmp	r0, #0
   16bd8:	bne	16ba8 <rb_patricia_search_exact+0x74>
   16bdc:	ands	r3, r5, #7
   16be0:	beq	16b88 <rb_patricia_search_exact+0x54>
   16be4:	ldrb	r2, [r7, r5, lsr #3]
   16be8:	rsb	r3, r3, #8
   16bec:	mov	r1, #255	; 0xff
   16bf0:	ldrb	r0, [r6, r5, lsr #3]
   16bf4:	eor	r2, r2, r0
   16bf8:	ands	r3, r2, r1, lsl r3
   16bfc:	movne	r4, #0
   16c00:	b	16b88 <rb_patricia_search_exact+0x54>

00016c04 <rb_patricia_search_best2>:
   16c04:	ldr	r3, [r0]
   16c08:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16c0c:	strd	r6, [sp, #8]
   16c10:	strd	r8, [sp, #16]
   16c14:	str	sl, [sp, #24]
   16c18:	cmp	r3, #0
   16c1c:	str	lr, [sp, #28]
   16c20:	sub	sp, sp, #520	; 0x208
   16c24:	beq	16d08 <rb_patricia_search_best2+0x104>
   16c28:	ldrh	r5, [r1, #2]
   16c2c:	add	r6, r1, #8
   16c30:	mov	r4, #0
   16c34:	mov	r7, #128	; 0x80
   16c38:	ldr	r1, [r3]
   16c3c:	add	r0, sp, #520	; 0x208
   16c40:	add	lr, r0, r4, lsl #2
   16c44:	cmp	r1, r5
   16c48:	and	r0, r1, #7
   16c4c:	bcs	16d1c <rb_patricia_search_best2+0x118>
   16c50:	ldr	ip, [r3, #4]
   16c54:	ldrb	r1, [r6, r1, lsr #3]
   16c58:	cmp	ip, #0
   16c5c:	ldr	ip, [r3, #8]
   16c60:	addne	r4, r4, #1
   16c64:	strne	r3, [lr, #-516]	; 0xfffffdfc
   16c68:	ands	r1, r1, r7, asr r0
   16c6c:	ldr	r3, [r3, #12]
   16c70:	beq	16d10 <rb_patricia_search_best2+0x10c>
   16c74:	cmp	r3, #0
   16c78:	bne	16c38 <rb_patricia_search_best2+0x34>
   16c7c:	cmp	r4, #0
   16c80:	beq	16d08 <rb_patricia_search_best2+0x104>
   16c84:	add	r7, sp, #4
   16c88:	mov	sl, #255	; 0xff
   16c8c:	add	r7, r7, r4, lsl #2
   16c90:	subs	r4, r4, #1
   16c94:	bcc	16d08 <rb_patricia_search_best2+0x104>
   16c98:	ldr	r9, [r7, #-4]!
   16c9c:	mov	r1, r6
   16ca0:	ldr	r3, [r9, #4]
   16ca4:	ldrh	r5, [r3, #2]
   16ca8:	cmp	r3, #0
   16cac:	add	r8, r3, #8
   16cb0:	moveq	r8, r3
   16cb4:	mov	r0, r8
   16cb8:	lsr	r2, r5, #3
   16cbc:	bl	4428 <memcmp@plt>
   16cc0:	cmp	r0, #0
   16cc4:	bne	16c90 <rb_patricia_search_best2+0x8c>
   16cc8:	ands	r3, r5, #7
   16ccc:	rsb	r3, r3, #8
   16cd0:	beq	16ce8 <rb_patricia_search_best2+0xe4>
   16cd4:	ldrb	r2, [r8, r5, lsr #3]
   16cd8:	ldrb	r1, [r6, r5, lsr #3]
   16cdc:	eor	r2, r2, r1
   16ce0:	ands	r3, r2, sl, lsl r3
   16ce4:	bne	16c90 <rb_patricia_search_best2+0x8c>
   16ce8:	mov	r0, r9
   16cec:	add	sp, sp, #520	; 0x208
   16cf0:	ldrd	r4, [sp]
   16cf4:	ldrd	r6, [sp, #8]
   16cf8:	ldrd	r8, [sp, #16]
   16cfc:	ldr	sl, [sp, #24]
   16d00:	add	sp, sp, #28
   16d04:	pop	{pc}		; (ldr pc, [sp], #4)
   16d08:	mov	r9, #0
   16d0c:	b	16ce8 <rb_patricia_search_best2+0xe4>
   16d10:	subs	r3, ip, #0
   16d14:	bne	16c38 <rb_patricia_search_best2+0x34>
   16d18:	b	16c7c <rb_patricia_search_best2+0x78>
   16d1c:	cmp	r2, #0
   16d20:	beq	16c7c <rb_patricia_search_best2+0x78>
   16d24:	ldr	r2, [r3, #4]
   16d28:	cmp	r2, #0
   16d2c:	beq	16c7c <rb_patricia_search_best2+0x78>
   16d30:	add	r4, r4, #1
   16d34:	str	r3, [lr, #-516]	; 0xfffffdfc
   16d38:	b	16c84 <rb_patricia_search_best2+0x80>

00016d3c <rb_patricia_search_best>:
   16d3c:	mov	r2, #1
   16d40:	b	468c <rb_patricia_search_best2@plt>

00016d44 <rb_patricia_lookup>:
   16d44:	ldr	r2, [r0]
   16d48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16d4c:	strd	r6, [sp, #8]
   16d50:	mov	r6, r0
   16d54:	strd	r8, [sp, #16]
   16d58:	mov	r8, r1
   16d5c:	strd	sl, [sp, #24]
   16d60:	cmp	r2, #0
   16d64:	str	lr, [sp, #32]
   16d68:	sub	sp, sp, #12
   16d6c:	beq	170f0 <rb_patricia_lookup+0x3ac>
   16d70:	add	r7, r1, #8
   16d74:	ldrh	r5, [r1, #2]
   16d78:	mov	ip, #128	; 0x80
   16d7c:	b	16da0 <rb_patricia_lookup+0x5c>
   16d80:	ldrb	r1, [r7, r3, lsr #3]
   16d84:	and	r0, r3, #7
   16d88:	ands	r1, r1, ip, asr r0
   16d8c:	beq	16dc4 <rb_patricia_lookup+0x80>
   16d90:	ldr	r1, [r2, #12]
   16d94:	cmp	r1, #0
   16d98:	beq	16dd0 <rb_patricia_lookup+0x8c>
   16d9c:	mov	r2, r1
   16da0:	ldr	r3, [r2]
   16da4:	cmp	r3, r5
   16da8:	bcc	16db8 <rb_patricia_lookup+0x74>
   16dac:	ldr	r1, [r2, #4]
   16db0:	cmp	r1, #0
   16db4:	bne	16dd4 <rb_patricia_lookup+0x90>
   16db8:	ldr	r1, [r6, #4]
   16dbc:	cmp	r1, r3
   16dc0:	bhi	16d80 <rb_patricia_lookup+0x3c>
   16dc4:	ldr	r1, [r2, #8]
   16dc8:	cmp	r1, #0
   16dcc:	bne	16d9c <rb_patricia_lookup+0x58>
   16dd0:	ldr	r1, [r2, #4]
   16dd4:	cmp	r3, r5
   16dd8:	add	r9, r1, #8
   16ddc:	movcc	r4, r3
   16de0:	movcs	r4, r5
   16de4:	ldr	sl, [r2, #16]
   16de8:	cmp	r4, #0
   16dec:	beq	1714c <rb_patricia_lookup+0x408>
   16df0:	ldrb	r1, [r1, #8]
   16df4:	ldrb	r3, [r8, #8]
   16df8:	cmp	r3, r1
   16dfc:	beq	16fc8 <rb_patricia_lookup+0x284>
   16e00:	eor	r3, r3, r1
   16e04:	mov	r1, #0
   16e08:	tst	r3, #128	; 0x80
   16e0c:	bne	171bc <rb_patricia_lookup+0x478>
   16e10:	tst	r3, #64	; 0x40
   16e14:	bne	171c4 <rb_patricia_lookup+0x480>
   16e18:	tst	r3, #32
   16e1c:	bne	171cc <rb_patricia_lookup+0x488>
   16e20:	tst	r3, #16
   16e24:	bne	171d4 <rb_patricia_lookup+0x490>
   16e28:	tst	r3, #8
   16e2c:	bne	171dc <rb_patricia_lookup+0x498>
   16e30:	tst	r3, #4
   16e34:	bne	171e4 <rb_patricia_lookup+0x4a0>
   16e38:	tst	r3, #2
   16e3c:	bne	171ec <rb_patricia_lookup+0x4a8>
   16e40:	tst	r3, #1
   16e44:	moveq	r3, #8
   16e48:	movne	r3, #7
   16e4c:	add	r1, r1, r3
   16e50:	cmp	r4, r1
   16e54:	movcs	r4, r1
   16e58:	cmp	sl, #0
   16e5c:	beq	17154 <rb_patricia_lookup+0x410>
   16e60:	ldr	r3, [sl]
   16e64:	cmp	r3, r4
   16e68:	bcs	16e80 <rb_patricia_lookup+0x13c>
   16e6c:	b	17154 <rb_patricia_lookup+0x410>
   16e70:	ldr	r2, [r3]
   16e74:	cmp	r2, r4
   16e78:	bcc	16e8c <rb_patricia_lookup+0x148>
   16e7c:	mov	sl, r3
   16e80:	ldr	r3, [sl, #16]
   16e84:	cmp	r3, #0
   16e88:	bne	16e70 <rb_patricia_lookup+0x12c>
   16e8c:	cmp	r5, r4
   16e90:	bne	16ea0 <rb_patricia_lookup+0x15c>
   16e94:	ldr	r3, [sl]
   16e98:	cmp	r3, r5
   16e9c:	beq	16ff8 <rb_patricia_lookup+0x2b4>
   16ea0:	mov	r1, #24
   16ea4:	mov	r0, #1
   16ea8:	bl	45c0 <calloc@plt>
   16eac:	subs	fp, r0, #0
   16eb0:	beq	170ec <rb_patricia_lookup+0x3a8>
   16eb4:	ldr	r3, [r8, #4]
   16eb8:	str	r5, [fp]
   16ebc:	cmp	r3, #0
   16ec0:	addne	r3, r3, #1
   16ec4:	strne	r3, [r8, #4]
   16ec8:	beq	17094 <rb_patricia_lookup+0x350>
   16ecc:	ldr	r2, [r6, #8]
   16ed0:	mov	r3, #0
   16ed4:	ldr	r0, [sl]
   16ed8:	str	r8, [fp, #4]
   16edc:	str	r3, [fp, #8]
   16ee0:	add	r1, r2, #1
   16ee4:	str	r3, [fp, #12]
   16ee8:	str	r3, [fp, #16]
   16eec:	cmp	r0, r4
   16ef0:	str	r1, [r6, #8]
   16ef4:	str	r3, [fp, #20]
   16ef8:	beq	17064 <rb_patricia_lookup+0x320>
   16efc:	cmp	r5, r4
   16f00:	bne	16f44 <rb_patricia_lookup+0x200>
   16f04:	ldr	r3, [r6, #4]
   16f08:	cmp	r3, r5
   16f0c:	bhi	17028 <rb_patricia_lookup+0x2e4>
   16f10:	str	sl, [fp, #8]
   16f14:	ldr	r3, [sl, #16]
   16f18:	str	r3, [fp, #16]
   16f1c:	ldr	r3, [sl, #16]
   16f20:	cmp	r3, #0
   16f24:	streq	fp, [r6]
   16f28:	beq	16f3c <rb_patricia_lookup+0x1f8>
   16f2c:	ldr	r2, [r3, #12]
   16f30:	cmp	r2, sl
   16f34:	streq	fp, [r3, #12]
   16f38:	strne	fp, [r3, #8]
   16f3c:	str	fp, [sl, #16]
   16f40:	b	17008 <rb_patricia_lookup+0x2c4>
   16f44:	mov	r1, #24
   16f48:	mov	r0, #1
   16f4c:	str	r2, [sp, #4]
   16f50:	bl	45c0 <calloc@plt>
   16f54:	cmp	r0, #0
   16f58:	beq	170ec <rb_patricia_lookup+0x3a8>
   16f5c:	ldr	r2, [sp, #4]
   16f60:	mov	r3, #0
   16f64:	ldr	ip, [r6, #4]
   16f68:	ldr	r1, [sl, #16]
   16f6c:	add	r2, r2, #2
   16f70:	str	r4, [r0]
   16f74:	str	r3, [r0, #4]
   16f78:	cmp	ip, r4
   16f7c:	str	r2, [r6, #8]
   16f80:	str	r1, [r0, #16]
   16f84:	str	r3, [r0, #20]
   16f88:	bhi	17044 <rb_patricia_lookup+0x300>
   16f8c:	mov	r1, fp
   16f90:	mov	r2, sl
   16f94:	str	r0, [fp, #16]
   16f98:	ldr	r3, [sl, #16]
   16f9c:	str	r1, [r0, #8]
   16fa0:	str	r2, [r0, #12]
   16fa4:	cmp	r3, #0
   16fa8:	streq	r0, [r6]
   16fac:	beq	16fc0 <rb_patricia_lookup+0x27c>
   16fb0:	ldr	r2, [r3, #12]
   16fb4:	cmp	r2, sl
   16fb8:	streq	r0, [r3, #12]
   16fbc:	strne	r0, [r3, #8]
   16fc0:	str	r0, [sl, #16]
   16fc4:	b	17008 <rb_patricia_lookup+0x2c4>
   16fc8:	mov	ip, r7
   16fcc:	mov	r0, r9
   16fd0:	mov	r1, #8
   16fd4:	cmp	r4, r1
   16fd8:	bls	16e50 <rb_patricia_lookup+0x10c>
   16fdc:	ldrb	r3, [ip, #1]!
   16fe0:	add	fp, r1, #8
   16fe4:	ldrb	lr, [r0, #1]!
   16fe8:	cmp	r3, lr
   16fec:	beq	170e4 <rb_patricia_lookup+0x3a0>
   16ff0:	eor	r3, r3, lr
   16ff4:	b	16e08 <rb_patricia_lookup+0xc4>
   16ff8:	ldr	r3, [sl, #4]
   16ffc:	cmp	r3, #0
   17000:	movne	fp, sl
   17004:	beq	1719c <rb_patricia_lookup+0x458>
   17008:	mov	r0, fp
   1700c:	add	sp, sp, #12
   17010:	ldrd	r4, [sp]
   17014:	ldrd	r6, [sp, #8]
   17018:	ldrd	r8, [sp, #16]
   1701c:	ldrd	sl, [sp, #24]
   17020:	add	sp, sp, #32
   17024:	pop	{pc}		; (ldr pc, [sp], #4)
   17028:	ldrb	r3, [r9, r5, lsr #3]
   1702c:	mov	r2, #128	; 0x80
   17030:	and	r5, r5, #7
   17034:	ands	r3, r3, r2, asr r5
   17038:	strne	sl, [fp, #12]
   1703c:	bne	16f14 <rb_patricia_lookup+0x1d0>
   17040:	b	16f10 <rb_patricia_lookup+0x1cc>
   17044:	ldrb	r2, [r7, r4, lsr #3]
   17048:	mov	r1, #128	; 0x80
   1704c:	and	r3, r4, #7
   17050:	ands	r3, r2, r1, asr r3
   17054:	movne	r1, sl
   17058:	movne	r2, fp
   1705c:	bne	16f94 <rb_patricia_lookup+0x250>
   17060:	b	16f8c <rb_patricia_lookup+0x248>
   17064:	ldr	r3, [r6, #4]
   17068:	str	sl, [fp, #16]
   1706c:	cmp	r3, r4
   17070:	bls	1708c <rb_patricia_lookup+0x348>
   17074:	ldrb	r2, [r7, r4, lsr #3]
   17078:	and	r3, r4, #7
   1707c:	mov	r1, #128	; 0x80
   17080:	ands	r3, r2, r1, asr r3
   17084:	strne	fp, [sl, #12]
   17088:	bne	17008 <rb_patricia_lookup+0x2c4>
   1708c:	str	fp, [sl, #8]
   17090:	b	17008 <rb_patricia_lookup+0x2c4>
   17094:	ldrh	r2, [r8]
   17098:	cmp	r2, #10
   1709c:	beq	1715c <rb_patricia_lookup+0x418>
   170a0:	cmp	r2, #2
   170a4:	str	r2, [sp, #4]
   170a8:	bne	171f4 <rb_patricia_lookup+0x4b0>
   170ac:	mov	r1, #24
   170b0:	mov	r0, #1
   170b4:	bl	45c0 <calloc@plt>
   170b8:	cmp	r0, #0
   170bc:	beq	170ec <rb_patricia_lookup+0x3a8>
   170c0:	ldr	r3, [r8, #8]
   170c4:	mov	r8, r0
   170c8:	ldr	r2, [sp, #4]
   170cc:	str	r3, [r0, #8]
   170d0:	mov	r3, #1
   170d4:	strh	r2, [r8]
   170d8:	strh	r5, [r8, #2]
   170dc:	str	r3, [r8, #4]
   170e0:	b	16ecc <rb_patricia_lookup+0x188>
   170e4:	mov	r1, fp
   170e8:	b	16fd4 <rb_patricia_lookup+0x290>
   170ec:	bl	495c <rb_outofmemory@plt>
   170f0:	mov	r1, #24
   170f4:	mov	r0, #1
   170f8:	bl	45c0 <calloc@plt>
   170fc:	subs	fp, r0, #0
   17100:	beq	170ec <rb_patricia_lookup+0x3a8>
   17104:	ldr	r3, [r8, #4]
   17108:	ldrh	r4, [r8, #2]
   1710c:	cmp	r3, #0
   17110:	addne	r3, r3, #1
   17114:	str	r4, [fp]
   17118:	strne	r3, [r8, #4]
   1711c:	beq	171fc <rb_patricia_lookup+0x4b8>
   17120:	ldr	r2, [r6, #8]
   17124:	mov	r3, #0
   17128:	str	fp, [r6]
   1712c:	str	r8, [fp, #4]
   17130:	str	r3, [fp, #8]
   17134:	str	r3, [fp, #12]
   17138:	add	r2, r2, #1
   1713c:	str	r3, [fp, #16]
   17140:	str	r3, [fp, #20]
   17144:	str	r2, [r6, #8]
   17148:	b	17008 <rb_patricia_lookup+0x2c4>
   1714c:	cmp	sl, #0
   17150:	bne	16e80 <rb_patricia_lookup+0x13c>
   17154:	mov	sl, r2
   17158:	b	16e8c <rb_patricia_lookup+0x148>
   1715c:	mov	r1, #24
   17160:	mov	r0, #1
   17164:	str	r2, [sp, #4]
   17168:	bl	45c0 <calloc@plt>
   1716c:	subs	r8, r0, #0
   17170:	beq	170ec <rb_patricia_lookup+0x3a8>
   17174:	ldr	r1, [r7]
   17178:	ldr	ip, [r7, #4]
   1717c:	ldr	r0, [r7, #8]
   17180:	str	r1, [r8, #8]
   17184:	ldr	r1, [r7, #12]
   17188:	str	ip, [r8, #12]
   1718c:	ldr	r2, [sp, #4]
   17190:	str	r0, [r8, #16]
   17194:	str	r1, [r8, #20]
   17198:	b	170d0 <rb_patricia_lookup+0x38c>
   1719c:	ldr	r3, [r8, #4]
   171a0:	cmp	r3, #0
   171a4:	addne	r3, r3, #1
   171a8:	strne	r3, [r8, #4]
   171ac:	beq	17244 <rb_patricia_lookup+0x500>
   171b0:	mov	fp, sl
   171b4:	str	r8, [sl, #4]
   171b8:	b	17008 <rb_patricia_lookup+0x2c4>
   171bc:	mov	r3, #0
   171c0:	b	16e4c <rb_patricia_lookup+0x108>
   171c4:	mov	r3, #1
   171c8:	b	16e4c <rb_patricia_lookup+0x108>
   171cc:	mov	r3, #2
   171d0:	b	16e4c <rb_patricia_lookup+0x108>
   171d4:	mov	r3, #3
   171d8:	b	16e4c <rb_patricia_lookup+0x108>
   171dc:	mov	r3, #4
   171e0:	b	16e4c <rb_patricia_lookup+0x108>
   171e4:	mov	r3, #5
   171e8:	b	16e4c <rb_patricia_lookup+0x108>
   171ec:	mov	r3, #6
   171f0:	b	16e4c <rb_patricia_lookup+0x108>
   171f4:	mov	r8, r3
   171f8:	b	16ecc <rb_patricia_lookup+0x188>
   171fc:	ldrh	r5, [r8]
   17200:	cmp	r5, #10
   17204:	beq	1728c <rb_patricia_lookup+0x548>
   17208:	cmp	r5, #2
   1720c:	bne	172cc <rb_patricia_lookup+0x588>
   17210:	mov	r1, #24
   17214:	mov	r0, #1
   17218:	bl	45c0 <calloc@plt>
   1721c:	cmp	r0, #0
   17220:	beq	170ec <rb_patricia_lookup+0x3a8>
   17224:	ldr	r3, [r8, #8]
   17228:	mov	r8, r0
   1722c:	str	r3, [r0, #8]
   17230:	mov	r3, #1
   17234:	strh	r5, [r8]
   17238:	strh	r4, [r8, #2]
   1723c:	str	r3, [r8, #4]
   17240:	b	17120 <rb_patricia_lookup+0x3dc>
   17244:	ldrh	r4, [r8]
   17248:	cmp	r4, #10
   1724c:	beq	172d4 <rb_patricia_lookup+0x590>
   17250:	cmp	r4, #2
   17254:	bne	17308 <rb_patricia_lookup+0x5c4>
   17258:	mov	r1, #24
   1725c:	mov	r0, #1
   17260:	bl	45c0 <calloc@plt>
   17264:	cmp	r0, #0
   17268:	beq	170ec <rb_patricia_lookup+0x3a8>
   1726c:	ldr	r3, [r8, #8]
   17270:	mov	r8, r0
   17274:	str	r3, [r0, #8]
   17278:	mov	r3, #1
   1727c:	strh	r4, [r8]
   17280:	strh	r5, [r8, #2]
   17284:	str	r3, [r8, #4]
   17288:	b	171b0 <rb_patricia_lookup+0x46c>
   1728c:	mov	r1, #24
   17290:	mov	r0, #1
   17294:	bl	45c0 <calloc@plt>
   17298:	cmp	r0, #0
   1729c:	beq	170ec <rb_patricia_lookup+0x3a8>
   172a0:	mov	r3, r8
   172a4:	mov	r8, r0
   172a8:	ldr	r1, [r3, #8]!
   172ac:	ldr	ip, [r3, #4]
   172b0:	str	r1, [r0, #8]
   172b4:	ldr	r1, [r3, #8]
   172b8:	ldr	r3, [r3, #12]
   172bc:	str	ip, [r0, #12]
   172c0:	str	r1, [r0, #16]
   172c4:	str	r3, [r0, #20]
   172c8:	b	17230 <rb_patricia_lookup+0x4ec>
   172cc:	mov	r8, r3
   172d0:	b	17120 <rb_patricia_lookup+0x3dc>
   172d4:	mov	r1, #24
   172d8:	mov	r0, #1
   172dc:	bl	45c0 <calloc@plt>
   172e0:	subs	r8, r0, #0
   172e4:	beq	170ec <rb_patricia_lookup+0x3a8>
   172e8:	ldr	r2, [r7]
   172ec:	ldr	r0, [r7, #4]
   172f0:	ldr	r1, [r7, #8]
   172f4:	str	r2, [r8, #8]
   172f8:	ldr	r2, [r7, #12]
   172fc:	strd	r0, [r8, #12]
   17300:	str	r2, [r8, #20]
   17304:	b	17278 <rb_patricia_lookup+0x534>
   17308:	mov	r8, r3
   1730c:	b	171b0 <rb_patricia_lookup+0x46c>

00017310 <rb_patricia_remove>:
   17310:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17314:	mov	r4, r1
   17318:	ldr	r3, [r1, #8]
   1731c:	ldr	r5, [r1, #12]
   17320:	strd	r6, [sp, #8]
   17324:	mov	r7, r0
   17328:	str	r8, [sp, #16]
   1732c:	str	lr, [sp, #20]
   17330:	ldr	r0, [r1, #4]
   17334:	cmp	r5, #0
   17338:	beq	173d8 <rb_patricia_remove+0xc8>
   1733c:	cmp	r3, #0
   17340:	beq	17380 <rb_patricia_remove+0x70>
   17344:	cmp	r0, #0
   17348:	beq	17360 <rb_patricia_remove+0x50>
   1734c:	ldr	r3, [r0, #4]
   17350:	sub	r3, r3, #1
   17354:	cmp	r3, #0
   17358:	str	r3, [r0, #4]
   1735c:	ble	17490 <rb_patricia_remove+0x180>
   17360:	mov	r3, #0
   17364:	str	r3, [r4, #4]
   17368:	str	r3, [r4, #20]
   1736c:	ldrd	r4, [sp]
   17370:	ldrd	r6, [sp, #8]
   17374:	ldr	r8, [sp, #16]
   17378:	add	sp, sp, #20
   1737c:	pop	{pc}		; (ldr pc, [sp], #4)
   17380:	ldr	r6, [r1, #16]
   17384:	cmp	r0, #0
   17388:	str	r6, [r5, #16]
   1738c:	beq	173a4 <rb_patricia_remove+0x94>
   17390:	ldr	r3, [r0, #4]
   17394:	sub	r3, r3, #1
   17398:	cmp	r3, #0
   1739c:	str	r3, [r0, #4]
   173a0:	ble	17488 <rb_patricia_remove+0x178>
   173a4:	mov	r0, r4
   173a8:	bl	46d4 <free@plt>
   173ac:	ldr	r3, [r7, #8]
   173b0:	cmp	r6, #0
   173b4:	streq	r5, [r7]
   173b8:	sub	r3, r3, #1
   173bc:	str	r3, [r7, #8]
   173c0:	beq	1736c <rb_patricia_remove+0x5c>
   173c4:	ldr	r3, [r6, #12]
   173c8:	cmp	r3, r4
   173cc:	streq	r5, [r6, #12]
   173d0:	strne	r5, [r6, #8]
   173d4:	b	1736c <rb_patricia_remove+0x5c>
   173d8:	cmp	r3, #0
   173dc:	ldr	r6, [r1, #16]
   173e0:	movne	r5, r3
   173e4:	bne	17384 <rb_patricia_remove+0x74>
   173e8:	cmp	r0, #0
   173ec:	beq	17408 <rb_patricia_remove+0xf8>
   173f0:	ldr	r3, [r0, #4]
   173f4:	sub	r3, r3, #1
   173f8:	cmp	r3, #0
   173fc:	str	r3, [r0, #4]
   17400:	bgt	17408 <rb_patricia_remove+0xf8>
   17404:	bl	46d4 <free@plt>
   17408:	mov	r0, r4
   1740c:	bl	46d4 <free@plt>
   17410:	ldr	r3, [r7, #8]
   17414:	cmp	r6, #0
   17418:	streq	r6, [r7]
   1741c:	sub	r3, r3, #1
   17420:	str	r3, [r7, #8]
   17424:	beq	1736c <rb_patricia_remove+0x5c>
   17428:	ldr	r3, [r6, #12]
   1742c:	mov	r2, #0
   17430:	cmp	r3, r4
   17434:	ldreq	r3, [r6, #8]
   17438:	streq	r2, [r6, #12]
   1743c:	strne	r2, [r6, #8]
   17440:	ldr	r2, [r6, #4]
   17444:	cmp	r2, #0
   17448:	bne	1736c <rb_patricia_remove+0x5c>
   1744c:	ldr	r2, [r6, #16]
   17450:	cmp	r2, #0
   17454:	streq	r3, [r7]
   17458:	beq	1746c <rb_patricia_remove+0x15c>
   1745c:	ldr	r1, [r2, #12]
   17460:	cmp	r1, r6
   17464:	streq	r3, [r2, #12]
   17468:	strne	r3, [r2, #8]
   1746c:	mov	r0, r6
   17470:	str	r2, [r3, #16]
   17474:	bl	46d4 <free@plt>
   17478:	ldr	r3, [r7, #8]
   1747c:	sub	r3, r3, #1
   17480:	str	r3, [r7, #8]
   17484:	b	1736c <rb_patricia_remove+0x5c>
   17488:	bl	46d4 <free@plt>
   1748c:	b	173a4 <rb_patricia_remove+0x94>
   17490:	bl	46d4 <free@plt>
   17494:	b	17360 <rb_patricia_remove+0x50>

00017498 <make_and_lookup_ip>:
   17498:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1749c:	mov	r5, r1
   174a0:	strd	r6, [sp, #8]
   174a4:	mov	r6, r2
   174a8:	ldrh	r7, [r1]
   174ac:	str	r8, [sp, #16]
   174b0:	mov	r8, r0
   174b4:	str	lr, [sp, #20]
   174b8:	cmp	r7, #10
   174bc:	beq	17538 <make_and_lookup_ip+0xa0>
   174c0:	cmp	r7, #2
   174c4:	bne	17570 <make_and_lookup_ip+0xd8>
   174c8:	mov	r1, #24
   174cc:	mov	r0, #1
   174d0:	bl	45c0 <calloc@plt>
   174d4:	subs	r4, r0, #0
   174d8:	beq	17584 <make_and_lookup_ip+0xec>
   174dc:	ldr	r3, [r5, #4]
   174e0:	str	r3, [r4, #8]
   174e4:	cmp	r6, #0
   174e8:	mov	r3, #1
   174ec:	strh	r7, [r4]
   174f0:	movlt	r6, #128	; 0x80
   174f4:	mov	r0, r8
   174f8:	mov	r1, r4
   174fc:	strh	r6, [r4, #2]
   17500:	str	r3, [r4, #4]
   17504:	bl	48cc <rb_patricia_lookup@plt>
   17508:	ldr	r3, [r4, #4]
   1750c:	mov	r5, r0
   17510:	sub	r3, r3, #1
   17514:	cmp	r3, #0
   17518:	str	r3, [r4, #4]
   1751c:	ble	17578 <make_and_lookup_ip+0xe0>
   17520:	mov	r0, r5
   17524:	ldrd	r4, [sp]
   17528:	ldrd	r6, [sp, #8]
   1752c:	ldr	r8, [sp, #16]
   17530:	add	sp, sp, #20
   17534:	pop	{pc}		; (ldr pc, [sp], #4)
   17538:	mov	r1, #24
   1753c:	mov	r0, #1
   17540:	bl	45c0 <calloc@plt>
   17544:	subs	r4, r0, #0
   17548:	add	r5, r5, #8
   1754c:	beq	17584 <make_and_lookup_ip+0xec>
   17550:	ldr	r2, [r5]
   17554:	ldr	r0, [r5, #4]
   17558:	ldr	r1, [r5, #8]
   1755c:	str	r2, [r4, #8]
   17560:	ldr	r2, [r5, #12]
   17564:	strd	r0, [r4, #12]
   17568:	str	r2, [r4, #20]
   1756c:	b	174e4 <make_and_lookup_ip+0x4c>
   17570:	mov	r5, #0
   17574:	b	17520 <make_and_lookup_ip+0x88>
   17578:	mov	r0, r4
   1757c:	bl	46d4 <free@plt>
   17580:	b	17520 <make_and_lookup_ip+0x88>
   17584:	bl	495c <rb_outofmemory@plt>

00017588 <make_and_lookup>:
   17588:	strd	r4, [sp, #-16]!
   1758c:	mov	r5, r0
   17590:	mov	r0, #2
   17594:	str	r6, [sp, #8]
   17598:	mov	r6, r1
   1759c:	str	lr, [sp, #12]
   175a0:	bl	167a0 <ascii2prefix>
   175a4:	subs	r4, r0, #0
   175a8:	beq	175e4 <make_and_lookup+0x5c>
   175ac:	mov	r0, r5
   175b0:	mov	r1, r4
   175b4:	bl	48cc <rb_patricia_lookup@plt>
   175b8:	ldr	r3, [r4, #4]
   175bc:	mov	r5, r0
   175c0:	sub	r3, r3, #1
   175c4:	cmp	r3, #0
   175c8:	str	r3, [r4, #4]
   175cc:	ble	17600 <make_and_lookup+0x78>
   175d0:	mov	r0, r5
   175d4:	ldrd	r4, [sp]
   175d8:	ldr	r6, [sp, #8]
   175dc:	add	sp, sp, #12
   175e0:	pop	{pc}		; (ldr pc, [sp], #4)
   175e4:	mov	r1, r6
   175e8:	mov	r0, #10
   175ec:	bl	167a0 <ascii2prefix>
   175f0:	subs	r4, r0, #0
   175f4:	moveq	r5, r4
   175f8:	bne	175ac <make_and_lookup+0x24>
   175fc:	b	175d0 <make_and_lookup+0x48>
   17600:	mov	r0, r4
   17604:	bl	46d4 <free@plt>
   17608:	b	175d0 <make_and_lookup+0x48>

0001760c <rb_match_ip>:
   1760c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17610:	mov	r5, r1
   17614:	strd	r6, [sp, #8]
   17618:	mov	r7, r0
   1761c:	mov	r0, #1
   17620:	ldrh	r6, [r1]
   17624:	mov	r1, #24
   17628:	str	r8, [sp, #16]
   1762c:	str	lr, [sp, #20]
   17630:	cmp	r6, #10
   17634:	beq	176a0 <rb_match_ip+0x94>
   17638:	bl	45c0 <calloc@plt>
   1763c:	subs	r4, r0, #0
   17640:	beq	176e4 <rb_match_ip+0xd8>
   17644:	ldr	r2, [r5, #4]
   17648:	mov	r6, #2
   1764c:	mov	r3, #32
   17650:	str	r2, [r4, #8]
   17654:	mov	r2, #1
   17658:	mov	r0, r7
   1765c:	strh	r6, [r4]
   17660:	mov	r1, r4
   17664:	strh	r3, [r4, #2]
   17668:	str	r2, [r4, #4]
   1766c:	bl	4524 <rb_patricia_search_best@plt>
   17670:	ldr	r3, [r4, #4]
   17674:	mov	r5, r0
   17678:	sub	r3, r3, #1
   1767c:	cmp	r3, #0
   17680:	str	r3, [r4, #4]
   17684:	ble	176d8 <rb_match_ip+0xcc>
   17688:	mov	r0, r5
   1768c:	ldrd	r4, [sp]
   17690:	ldrd	r6, [sp, #8]
   17694:	ldr	r8, [sp, #16]
   17698:	add	sp, sp, #20
   1769c:	pop	{pc}		; (ldr pc, [sp], #4)
   176a0:	bl	45c0 <calloc@plt>
   176a4:	subs	r4, r0, #0
   176a8:	add	r5, r5, #8
   176ac:	beq	176e4 <rb_match_ip+0xd8>
   176b0:	ldr	r1, [r5]
   176b4:	mov	r3, #128	; 0x80
   176b8:	ldr	ip, [r5, #4]
   176bc:	ldr	r0, [r5, #8]
   176c0:	str	r1, [r4, #8]
   176c4:	ldr	r1, [r5, #12]
   176c8:	str	ip, [r4, #12]
   176cc:	str	r0, [r4, #16]
   176d0:	str	r1, [r4, #20]
   176d4:	b	17654 <rb_match_ip+0x48>
   176d8:	mov	r0, r4
   176dc:	bl	46d4 <free@plt>
   176e0:	b	17688 <rb_match_ip+0x7c>
   176e4:	bl	495c <rb_outofmemory@plt>

000176e8 <rb_match_ip_exact>:
   176e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   176ec:	mov	r5, r1
   176f0:	strd	r6, [sp, #8]
   176f4:	mov	r6, r2
   176f8:	ldrh	r7, [r1]
   176fc:	str	r8, [sp, #16]
   17700:	mov	r8, r0
   17704:	str	lr, [sp, #20]
   17708:	cmp	r7, #10
   1770c:	beq	17784 <rb_match_ip_exact+0x9c>
   17710:	mov	r1, #24
   17714:	mov	r0, #1
   17718:	bl	45c0 <calloc@plt>
   1771c:	subs	r4, r0, #0
   17720:	beq	177d0 <rb_match_ip_exact+0xe8>
   17724:	ldr	r3, [r5, #4]
   17728:	cmp	r6, #32
   1772c:	mov	r7, #2
   17730:	movcs	r6, #32
   17734:	str	r3, [r4, #8]
   17738:	mov	r3, #1
   1773c:	mov	r0, r8
   17740:	strh	r7, [r4]
   17744:	mov	r1, r4
   17748:	strh	r6, [r4, #2]
   1774c:	str	r3, [r4, #4]
   17750:	bl	4890 <rb_patricia_search_exact@plt>
   17754:	ldr	r3, [r4, #4]
   17758:	mov	r5, r0
   1775c:	sub	r3, r3, #1
   17760:	cmp	r3, #0
   17764:	str	r3, [r4, #4]
   17768:	ble	177c4 <rb_match_ip_exact+0xdc>
   1776c:	mov	r0, r5
   17770:	ldrd	r4, [sp]
   17774:	ldrd	r6, [sp, #8]
   17778:	ldr	r8, [sp, #16]
   1777c:	add	sp, sp, #20
   17780:	pop	{pc}		; (ldr pc, [sp], #4)
   17784:	cmp	r2, #128	; 0x80
   17788:	mov	r1, #24
   1778c:	mov	r0, #1
   17790:	movcs	r6, #128	; 0x80
   17794:	bl	45c0 <calloc@plt>
   17798:	subs	r4, r0, #0
   1779c:	add	r5, r5, #8
   177a0:	beq	177d0 <rb_match_ip_exact+0xe8>
   177a4:	ldr	r2, [r5]
   177a8:	ldr	r0, [r5, #4]
   177ac:	ldr	r1, [r5, #8]
   177b0:	str	r2, [r4, #8]
   177b4:	ldr	r2, [r5, #12]
   177b8:	strd	r0, [r4, #12]
   177bc:	str	r2, [r4, #20]
   177c0:	b	17738 <rb_match_ip_exact+0x50>
   177c4:	mov	r0, r4
   177c8:	bl	46d4 <free@plt>
   177cc:	b	1776c <rb_match_ip_exact+0x84>
   177d0:	bl	495c <rb_outofmemory@plt>

000177d4 <rb_match_string>:
   177d4:	strd	r4, [sp, #-16]!
   177d8:	mov	r5, r0
   177dc:	mov	r0, #2
   177e0:	str	r6, [sp, #8]
   177e4:	mov	r6, r1
   177e8:	str	lr, [sp, #12]
   177ec:	bl	167a0 <ascii2prefix>
   177f0:	subs	r4, r0, #0
   177f4:	beq	17830 <rb_match_string+0x5c>
   177f8:	mov	r0, r5
   177fc:	mov	r1, r4
   17800:	bl	4524 <rb_patricia_search_best@plt>
   17804:	ldr	r3, [r4, #4]
   17808:	mov	r5, r0
   1780c:	sub	r3, r3, #1
   17810:	cmp	r3, #0
   17814:	str	r3, [r4, #4]
   17818:	ble	1784c <rb_match_string+0x78>
   1781c:	mov	r0, r5
   17820:	ldrd	r4, [sp]
   17824:	ldr	r6, [sp, #8]
   17828:	add	sp, sp, #12
   1782c:	pop	{pc}		; (ldr pc, [sp], #4)
   17830:	mov	r1, r6
   17834:	mov	r0, #10
   17838:	bl	167a0 <ascii2prefix>
   1783c:	subs	r4, r0, #0
   17840:	moveq	r5, r4
   17844:	bne	177f8 <rb_match_string+0x24>
   17848:	b	1781c <rb_match_string+0x48>
   1784c:	mov	r0, r4
   17850:	bl	46d4 <free@plt>
   17854:	b	1781c <rb_match_string+0x48>

00017858 <rb_match_exact_string>:
   17858:	strd	r4, [sp, #-16]!
   1785c:	mov	r5, r0
   17860:	mov	r0, #2
   17864:	str	r6, [sp, #8]
   17868:	mov	r6, r1
   1786c:	str	lr, [sp, #12]
   17870:	bl	167a0 <ascii2prefix>
   17874:	subs	r4, r0, #0
   17878:	beq	178b4 <rb_match_exact_string+0x5c>
   1787c:	mov	r0, r5
   17880:	mov	r1, r4
   17884:	bl	4890 <rb_patricia_search_exact@plt>
   17888:	ldr	r3, [r4, #4]
   1788c:	mov	r5, r0
   17890:	sub	r3, r3, #1
   17894:	cmp	r3, #0
   17898:	str	r3, [r4, #4]
   1789c:	ble	178d0 <rb_match_exact_string+0x78>
   178a0:	mov	r0, r5
   178a4:	ldrd	r4, [sp]
   178a8:	ldr	r6, [sp, #8]
   178ac:	add	sp, sp, #12
   178b0:	pop	{pc}		; (ldr pc, [sp], #4)
   178b4:	mov	r1, r6
   178b8:	mov	r0, #10
   178bc:	bl	167a0 <ascii2prefix>
   178c0:	subs	r4, r0, #0
   178c4:	moveq	r5, r4
   178c8:	bne	1787c <rb_match_exact_string+0x24>
   178cc:	b	178a0 <rb_match_exact_string+0x48>
   178d0:	mov	r0, r4
   178d4:	bl	46d4 <free@plt>
   178d8:	b	178a0 <rb_match_exact_string+0x48>

000178dc <stats_recurse>:
   178dc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   178e0:	mov	r5, r0
   178e4:	mov	r4, r1
   178e8:	strd	r6, [sp, #8]
   178ec:	mov	r6, #0
   178f0:	str	r8, [sp, #16]
   178f4:	mov	r8, r2
   178f8:	str	lr, [sp, #20]
   178fc:	ldr	r3, [r8]
   17900:	cmp	r3, r4
   17904:	strlt	r4, [r8]
   17908:	cmp	r5, #0
   1790c:	beq	17974 <stats_recurse+0x98>
   17910:	ldr	r3, [r5]
   17914:	add	r7, r4, #1
   17918:	mov	r2, r8
   1791c:	mov	r1, r7
   17920:	subs	r0, r3, #0
   17924:	beq	17948 <stats_recurse+0x6c>
   17928:	bl	178dc <stats_recurse>
   1792c:	ldr	r5, [r5, #4]
   17930:	add	r0, r4, r0
   17934:	add	r6, r6, r0
   17938:	cmp	r5, #0
   1793c:	beq	1795c <stats_recurse+0x80>
   17940:	mov	r4, r7
   17944:	b	178fc <stats_recurse+0x20>
   17948:	ldr	r5, [r5, #4]
   1794c:	add	r6, r6, r4
   17950:	add	r7, r4, #1
   17954:	cmp	r5, #0
   17958:	bne	17940 <stats_recurse+0x64>
   1795c:	mov	r0, r6
   17960:	ldrd	r4, [sp]
   17964:	ldrd	r6, [sp, #8]
   17968:	ldr	r8, [sp, #16]
   1796c:	add	sp, sp, #20
   17970:	pop	{pc}		; (ldr pc, [sp], #4)
   17974:	add	r6, r6, r4
   17978:	b	1795c <stats_recurse+0x80>

0001797c <rb_dictionary_retune.isra.1>:
   1797c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   17980:	ldr	r4, [r1]
   17984:	strd	r6, [sp, #8]
   17988:	strd	r8, [sp, #16]
   1798c:	str	lr, [sp, #24]
   17990:	sub	sp, sp, #36	; 0x24
   17994:	cmp	r4, #0
   17998:	beq	17aa0 <rb_dictionary_retune.isra.1+0x124>
   1799c:	mov	r8, sp
   179a0:	mov	r6, r2
   179a4:	mov	r3, #0
   179a8:	mov	r2, #0
   179ac:	mov	r5, r0
   179b0:	mov	r9, r1
   179b4:	mov	r7, r8
   179b8:	strd	r2, [sp]
   179bc:	mov	r0, r6
   179c0:	ldr	r3, [r5]
   179c4:	ldr	r1, [r4, #20]
   179c8:	blx	r3
   179cc:	cmp	r0, #0
   179d0:	beq	17ab8 <rb_dictionary_retune.isra.1+0x13c>
   179d4:	blt	17a28 <rb_dictionary_retune.isra.1+0xac>
   179d8:	ldr	r3, [r4, #4]
   179dc:	cmp	r3, #0
   179e0:	beq	17ab8 <rb_dictionary_retune.isra.1+0x13c>
   179e4:	mov	r0, r6
   179e8:	ldr	r2, [r5]
   179ec:	ldr	r1, [r3, #20]
   179f0:	blx	r2
   179f4:	cmp	r0, #0
   179f8:	ble	17a5c <rb_dictionary_retune.isra.1+0xe0>
   179fc:	ldr	r3, [r4, #4]
   17a00:	ldr	r2, [r3]
   17a04:	str	r2, [r4, #4]
   17a08:	ldr	r2, [r3, #4]
   17a0c:	str	r4, [r3]
   17a10:	cmp	r2, #0
   17a14:	beq	17ac0 <rb_dictionary_retune.isra.1+0x144>
   17a18:	str	r3, [r7, #4]
   17a1c:	mov	r7, r3
   17a20:	ldr	r4, [r3, #4]
   17a24:	b	179bc <rb_dictionary_retune.isra.1+0x40>
   17a28:	ldr	r2, [r4]
   17a2c:	cmp	r2, #0
   17a30:	beq	17a84 <rb_dictionary_retune.isra.1+0x108>
   17a34:	mov	r0, r6
   17a38:	ldr	r3, [r5]
   17a3c:	ldr	r1, [r2, #20]
   17a40:	blx	r3
   17a44:	cmp	r0, #0
   17a48:	blt	17a64 <rb_dictionary_retune.isra.1+0xe8>
   17a4c:	str	r4, [r8]
   17a50:	mov	r8, r4
   17a54:	ldr	r4, [r4]
   17a58:	b	179bc <rb_dictionary_retune.isra.1+0x40>
   17a5c:	mov	r3, r4
   17a60:	b	17a18 <rb_dictionary_retune.isra.1+0x9c>
   17a64:	ldr	r3, [r4]
   17a68:	ldr	r2, [r3, #4]
   17a6c:	str	r2, [r4]
   17a70:	ldr	r2, [r3]
   17a74:	str	r4, [r3, #4]
   17a78:	mov	r4, r3
   17a7c:	cmp	r2, #0
   17a80:	bne	17a4c <rb_dictionary_retune.isra.1+0xd0>
   17a84:	str	r2, [r7, #4]
   17a88:	ldr	r3, [r4, #4]
   17a8c:	str	r3, [r8]
   17a90:	ldrd	r2, [sp]
   17a94:	str	r3, [r4]
   17a98:	str	r2, [r4, #4]
   17a9c:	str	r4, [r9]
   17aa0:	add	sp, sp, #36	; 0x24
   17aa4:	ldrd	r4, [sp]
   17aa8:	ldrd	r6, [sp, #8]
   17aac:	ldrd	r8, [sp, #16]
   17ab0:	add	sp, sp, #24
   17ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   17ab8:	ldr	r2, [r4]
   17abc:	b	17a84 <rb_dictionary_retune.isra.1+0x108>
   17ac0:	mov	r2, r4
   17ac4:	mov	r4, r3
   17ac8:	b	17a84 <rb_dictionary_retune.isra.1+0x108>

00017acc <rb_dictionary_create>:
   17acc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17ad0:	mov	r5, r0
   17ad4:	mov	r0, #1
   17ad8:	strd	r6, [sp, #8]
   17adc:	mov	r6, r1
   17ae0:	mov	r1, #40	; 0x28
   17ae4:	str	r8, [sp, #16]
   17ae8:	str	lr, [sp, #20]
   17aec:	bl	45c0 <calloc@plt>
   17af0:	subs	r4, r0, #0
   17af4:	beq	17b94 <rb_dictionary_create+0xc8>
   17af8:	mov	r0, r5
   17afc:	str	r6, [r4]
   17b00:	bl	47c4 <strlen@plt>
   17b04:	add	r6, r0, #1
   17b08:	mov	r0, r6
   17b0c:	bl	4980 <malloc@plt>
   17b10:	subs	r7, r0, #0
   17b14:	beq	17b94 <rb_dictionary_create+0xc8>
   17b18:	mov	r2, r6
   17b1c:	mov	r1, r5
   17b20:	bl	47e8 <memcpy@plt>
   17b24:	ldr	r2, [pc, #108]	; 17b98 <rb_dictionary_create+0xcc>
   17b28:	mov	r3, #0
   17b2c:	add	r1, r4, #28
   17b30:	str	r7, [r4, #20]
   17b34:	str	r4, [r4, #28]
   17b38:	str	r3, [r4, #32]
   17b3c:	add	r2, pc, r2
   17b40:	ldr	r3, [r2]
   17b44:	cmp	r3, #0
   17b48:	str	r3, [r4, #36]	; 0x24
   17b4c:	strne	r1, [r3, #4]
   17b50:	beq	17b84 <rb_dictionary_create+0xb8>
   17b54:	ldr	r3, [pc, #64]	; 17b9c <rb_dictionary_create+0xd0>
   17b58:	mov	r0, r4
   17b5c:	ldrd	r4, [sp]
   17b60:	ldrd	r6, [sp, #8]
   17b64:	add	r3, pc, r3
   17b68:	ldr	r2, [r3, #8]
   17b6c:	ldr	r8, [sp, #16]
   17b70:	add	sp, sp, #20
   17b74:	str	r1, [r3]
   17b78:	add	r2, r2, #1
   17b7c:	str	r2, [r3, #8]
   17b80:	pop	{pc}		; (ldr pc, [sp], #4)
   17b84:	ldr	r3, [r2, #4]
   17b88:	cmp	r3, #0
   17b8c:	streq	r1, [r2, #4]
   17b90:	b	17b54 <rb_dictionary_create+0x88>
   17b94:	bl	495c <rb_outofmemory@plt>
   17b98:	.word	0x000323e8
   17b9c:	.word	0x000323c0

00017ba0 <rb_dictionary_set_comparator_func>:
   17ba0:	str	r1, [r0]
   17ba4:	bx	lr

00017ba8 <rb_dictionary_get_comparator_func>:
   17ba8:	ldr	r0, [r0]
   17bac:	bx	lr

00017bb0 <rb_dictionary_destroy>:
   17bb0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17bb4:	ldr	r5, [r0, #8]
   17bb8:	strd	r6, [sp, #8]
   17bbc:	mov	r6, r0
   17bc0:	str	r8, [sp, #16]
   17bc4:	str	lr, [sp, #20]
   17bc8:	cmp	r5, #0
   17bcc:	beq	17c28 <rb_dictionary_destroy+0x78>
   17bd0:	cmp	r1, #0
   17bd4:	mov	r7, r1
   17bd8:	ldr	r4, [r5, #12]
   17bdc:	mov	r8, r2
   17be0:	beq	17c0c <rb_dictionary_destroy+0x5c>
   17be4:	mov	r0, r5
   17be8:	mov	r1, r8
   17bec:	blx	r7
   17bf0:	mov	r0, r5
   17bf4:	mov	r5, r4
   17bf8:	bl	46d4 <free@plt>
   17bfc:	cmp	r4, #0
   17c00:	beq	17c28 <rb_dictionary_destroy+0x78>
   17c04:	ldr	r4, [r4, #12]
   17c08:	b	17be4 <rb_dictionary_destroy+0x34>
   17c0c:	mov	r0, r5
   17c10:	mov	r5, r4
   17c14:	bl	46d4 <free@plt>
   17c18:	cmp	r4, #0
   17c1c:	beq	17c28 <rb_dictionary_destroy+0x78>
   17c20:	ldr	r4, [r4, #12]
   17c24:	b	17c0c <rb_dictionary_destroy+0x5c>
   17c28:	ldrd	r2, [r6, #32]
   17c2c:	cmp	r3, #0
   17c30:	beq	17c94 <rb_dictionary_destroy+0xe4>
   17c34:	str	r2, [r3, #4]
   17c38:	ldr	r2, [r6, #32]
   17c3c:	cmp	r2, #0
   17c40:	strne	r3, [r2, #8]
   17c44:	beq	17cac <rb_dictionary_destroy+0xfc>
   17c48:	ldr	r2, [pc, #108]	; 17cbc <rb_dictionary_destroy+0x10c>
   17c4c:	mov	r3, #0
   17c50:	str	r3, [r6, #32]
   17c54:	str	r3, [r6, #36]	; 0x24
   17c58:	ldr	r0, [r6, #20]
   17c5c:	add	r2, pc, r2
   17c60:	ldr	r3, [r2, #8]
   17c64:	cmp	r0, #0
   17c68:	sub	r3, r3, #1
   17c6c:	str	r3, [r2, #8]
   17c70:	beq	17c78 <rb_dictionary_destroy+0xc8>
   17c74:	bl	46d4 <free@plt>
   17c78:	mov	r0, r6
   17c7c:	ldrd	r4, [sp]
   17c80:	ldrd	r6, [sp, #8]
   17c84:	ldr	r8, [sp, #16]
   17c88:	ldr	lr, [sp, #20]
   17c8c:	add	sp, sp, #24
   17c90:	b	46d4 <free@plt>
   17c94:	ldr	r1, [pc, #36]	; 17cc0 <rb_dictionary_destroy+0x110>
   17c98:	cmp	r2, #0
   17c9c:	strne	r3, [r2, #8]
   17ca0:	add	r1, pc, r1
   17ca4:	str	r2, [r1, #4]
   17ca8:	bne	17c48 <rb_dictionary_destroy+0x98>
   17cac:	ldr	r2, [pc, #16]	; 17cc4 <rb_dictionary_destroy+0x114>
   17cb0:	add	r2, pc, r2
   17cb4:	str	r3, [r2]
   17cb8:	b	17c48 <rb_dictionary_destroy+0x98>
   17cbc:	.word	0x000322c8
   17cc0:	.word	0x00032284
   17cc4:	.word	0x00032274

00017cc8 <rb_dictionary_foreach>:
   17cc8:	ldr	r0, [r0, #8]
   17ccc:	cmp	r0, #0
   17cd0:	bxeq	lr
   17cd4:	cmp	r1, #0
   17cd8:	strd	r4, [sp, #-16]!
   17cdc:	mov	r5, r1
   17ce0:	ldr	r4, [r0, #12]
   17ce4:	str	r6, [sp, #8]
   17ce8:	mov	r6, r2
   17cec:	str	lr, [sp, #12]
   17cf0:	beq	17d10 <rb_dictionary_foreach+0x48>
   17cf4:	mov	r1, r6
   17cf8:	blx	r5
   17cfc:	cmp	r4, #0
   17d00:	mov	r0, r4
   17d04:	beq	17d24 <rb_dictionary_foreach+0x5c>
   17d08:	ldr	r4, [r4, #12]
   17d0c:	b	17cf4 <rb_dictionary_foreach+0x2c>
   17d10:	cmp	r4, #0
   17d14:	beq	17d24 <rb_dictionary_foreach+0x5c>
   17d18:	ldr	r4, [r4, #12]
   17d1c:	cmp	r4, #0
   17d20:	bne	17d18 <rb_dictionary_foreach+0x50>
   17d24:	ldrd	r4, [sp]
   17d28:	ldr	r6, [sp, #8]
   17d2c:	add	sp, sp, #12
   17d30:	pop	{pc}		; (ldr pc, [sp], #4)

00017d34 <rb_dictionary_search>:
   17d34:	ldr	r0, [r0, #8]
   17d38:	cmp	r0, #0
   17d3c:	beq	17db0 <rb_dictionary_search+0x7c>
   17d40:	cmp	r1, #0
   17d44:	strd	r4, [sp, #-16]!
   17d48:	mov	r5, r1
   17d4c:	ldr	r4, [r0, #12]
   17d50:	str	r6, [sp, #8]
   17d54:	mov	r6, r2
   17d58:	str	lr, [sp, #12]
   17d5c:	beq	17d84 <rb_dictionary_search+0x50>
   17d60:	mov	r1, r6
   17d64:	blx	r5
   17d68:	subs	r3, r0, #0
   17d6c:	mov	r0, r4
   17d70:	bne	17d9c <rb_dictionary_search+0x68>
   17d74:	cmp	r4, #0
   17d78:	beq	17d98 <rb_dictionary_search+0x64>
   17d7c:	ldr	r4, [r4, #12]
   17d80:	b	17d60 <rb_dictionary_search+0x2c>
   17d84:	cmp	r4, #0
   17d88:	beq	17d98 <rb_dictionary_search+0x64>
   17d8c:	ldr	r4, [r4, #12]
   17d90:	cmp	r4, #0
   17d94:	bne	17d8c <rb_dictionary_search+0x58>
   17d98:	mov	r3, #0
   17d9c:	ldrd	r4, [sp]
   17da0:	mov	r0, r3
   17da4:	ldr	r6, [sp, #8]
   17da8:	add	sp, sp, #12
   17dac:	pop	{pc}		; (ldr pc, [sp], #4)
   17db0:	mov	r3, #0
   17db4:	mov	r0, r3
   17db8:	bx	lr

00017dbc <rb_dictionary_foreach_cur>:
   17dbc:	ldr	r0, [r1]
   17dc0:	cmp	r0, #0
   17dc4:	ldrne	r0, [r0, #16]
   17dc8:	bx	lr

00017dcc <rb_dictionary_foreach_next>:
   17dcc:	ldr	r3, [r1]
   17dd0:	cmp	r3, #0
   17dd4:	beq	17df0 <rb_dictionary_foreach_next+0x24>
   17dd8:	ldr	r3, [r1, #4]
   17ddc:	cmp	r3, #0
   17de0:	str	r3, [r1]
   17de4:	ldrne	r3, [r3, #12]
   17de8:	strne	r3, [r1, #4]
   17dec:	bx	lr
   17df0:	mov	r1, r0
   17df4:	ldr	r0, [pc, #4]	; 17e00 <rb_dictionary_foreach_next+0x34>
   17df8:	add	r0, pc, r0
   17dfc:	b	48f0 <rb_lib_log@plt>
   17e00:	.word	0x000035fc

00017e04 <rb_dictionary_foreach_start>:
   17e04:	ldr	r2, [r0, #8]
   17e08:	mov	ip, #0
   17e0c:	cmp	r2, ip
   17e10:	stm	r1, {r2, ip}
   17e14:	beq	17e20 <rb_dictionary_foreach_start+0x1c>
   17e18:	str	r2, [r1, #4]
   17e1c:	b	46bc <rb_dictionary_foreach_next@plt>
   17e20:	bx	lr

00017e24 <rb_dictionary_find>:
   17e24:	mov	r2, r1
   17e28:	strd	r4, [sp, #-16]!
   17e2c:	mov	r4, r0
   17e30:	mov	r5, r1
   17e34:	add	r1, r0, #4
   17e38:	str	r6, [sp, #8]
   17e3c:	str	lr, [sp, #12]
   17e40:	bl	1797c <rb_dictionary_retune.isra.1>
   17e44:	ldr	r3, [r4, #4]
   17e48:	cmp	r3, #0
   17e4c:	beq	17e7c <rb_dictionary_find+0x58>
   17e50:	mov	r0, r5
   17e54:	ldr	r2, [r4]
   17e58:	ldr	r1, [r3, #20]
   17e5c:	blx	r2
   17e60:	cmp	r0, #0
   17e64:	bne	17e7c <rb_dictionary_find+0x58>
   17e68:	ldr	r0, [r4, #4]
   17e6c:	ldrd	r4, [sp]
   17e70:	ldr	r6, [sp, #8]
   17e74:	add	sp, sp, #12
   17e78:	pop	{pc}		; (ldr pc, [sp], #4)
   17e7c:	ldrd	r4, [sp]
   17e80:	mov	r0, #0
   17e84:	ldr	r6, [sp, #8]
   17e88:	add	sp, sp, #12
   17e8c:	pop	{pc}		; (ldr pc, [sp], #4)

00017e90 <rb_dictionary_get_linear_index>:
   17e90:	str	r4, [sp, #-8]!
   17e94:	mov	r4, r0
   17e98:	str	lr, [sp, #4]
   17e9c:	bl	4a04 <rb_dictionary_find@plt>
   17ea0:	cmp	r0, #0
   17ea4:	beq	17ef4 <rb_dictionary_get_linear_index+0x64>
   17ea8:	ldrb	r3, [r4, #24]
   17eac:	tst	r3, #1
   17eb0:	beq	17ee4 <rb_dictionary_get_linear_index+0x54>
   17eb4:	ldr	r3, [r4, #8]
   17eb8:	cmp	r3, #0
   17ebc:	beq	17ed8 <rb_dictionary_get_linear_index+0x48>
   17ec0:	mov	r2, #0
   17ec4:	str	r2, [r3, #24]
   17ec8:	add	r2, r2, #1
   17ecc:	ldr	r3, [r3, #12]
   17ed0:	cmp	r3, #0
   17ed4:	bne	17ec4 <rb_dictionary_get_linear_index+0x34>
   17ed8:	ldrb	r3, [r4, #24]
   17edc:	bfc	r3, #0, #1
   17ee0:	strb	r3, [r4, #24]
   17ee4:	ldr	r0, [r0, #24]
   17ee8:	ldr	r4, [sp]
   17eec:	add	sp, sp, #4
   17ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   17ef4:	mvn	r0, #0
   17ef8:	b	17ee8 <rb_dictionary_get_linear_index+0x58>

00017efc <rb_dictionary_add>:
   17efc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17f00:	mov	r4, r0
   17f04:	mov	r0, #1
   17f08:	strd	r6, [sp, #8]
   17f0c:	mov	r6, r1
   17f10:	mov	r1, #28
   17f14:	mov	r7, r2
   17f18:	str	r8, [sp, #16]
   17f1c:	str	lr, [sp, #20]
   17f20:	bl	45c0 <calloc@plt>
   17f24:	subs	r5, r0, #0
   17f28:	beq	18028 <rb_dictionary_add+0x12c>
   17f2c:	ldrb	r1, [r4, #24]
   17f30:	str	r7, [r5, #16]
   17f34:	ldr	r2, [r4, #4]
   17f38:	str	r6, [r5, #20]
   17f3c:	ldr	r3, [r4, #16]
   17f40:	orr	r1, r1, #1
   17f44:	cmp	r2, #0
   17f48:	strb	r1, [r4, #24]
   17f4c:	add	r3, r3, #1
   17f50:	str	r3, [r4, #16]
   17f54:	beq	17fd8 <rb_dictionary_add+0xdc>
   17f58:	mov	r2, r6
   17f5c:	add	r1, r4, #4
   17f60:	mov	r0, r4
   17f64:	bl	1797c <rb_dictionary_retune.isra.1>
   17f68:	ldr	r3, [r4]
   17f6c:	ldr	r2, [r4, #4]
   17f70:	ldr	r0, [r5, #20]
   17f74:	ldr	r1, [r2, #20]
   17f78:	blx	r3
   17f7c:	cmp	r0, #0
   17f80:	ldr	r3, [r4, #4]
   17f84:	blt	17ff8 <rb_dictionary_add+0xfc>
   17f88:	beq	1802c <rb_dictionary_add+0x130>
   17f8c:	ldr	r0, [r3, #4]
   17f90:	mov	r1, #0
   17f94:	ldr	r2, [r3, #12]
   17f98:	str	r3, [r5]
   17f9c:	str	r0, [r5, #4]
   17fa0:	str	r1, [r3, #4]
   17fa4:	cmp	r2, r1
   17fa8:	strne	r5, [r2, #8]
   17fac:	streq	r5, [r4, #12]
   17fb0:	str	r3, [r5, #8]
   17fb4:	str	r2, [r5, #12]
   17fb8:	str	r5, [r3, #12]
   17fbc:	str	r5, [r4, #4]
   17fc0:	mov	r0, r5
   17fc4:	ldrd	r4, [sp]
   17fc8:	ldrd	r6, [sp, #8]
   17fcc:	ldr	r8, [sp, #16]
   17fd0:	add	sp, sp, #20
   17fd4:	pop	{pc}		; (ldr pc, [sp], #4)
   17fd8:	mov	r2, #0
   17fdc:	mov	r3, #0
   17fe0:	str	r5, [r4, #4]
   17fe4:	str	r5, [r4, #8]
   17fe8:	strd	r2, [r5]
   17fec:	strd	r2, [r5, #8]
   17ff0:	str	r5, [r4, #12]
   17ff4:	b	17fc0 <rb_dictionary_add+0xc4>
   17ff8:	ldr	r0, [r3]
   17ffc:	mov	r1, #0
   18000:	ldr	r2, [r3, #8]
   18004:	stm	r5, {r0, r3}
   18008:	str	r1, [r3]
   1800c:	cmp	r2, r1
   18010:	strne	r5, [r2, #12]
   18014:	streq	r5, [r4, #8]
   18018:	strd	r2, [r5, #8]
   1801c:	str	r5, [r3, #8]
   18020:	str	r5, [r4, #4]
   18024:	b	17fc0 <rb_dictionary_add+0xc4>
   18028:	bl	495c <rb_outofmemory@plt>
   1802c:	ldr	r2, [r4, #16]
   18030:	mov	r0, r5
   18034:	ldr	ip, [r5, #16]
   18038:	ldr	r1, [r5, #20]
   1803c:	mov	r5, r3
   18040:	sub	r2, r2, #1
   18044:	str	ip, [r3, #16]
   18048:	str	r1, [r3, #20]
   1804c:	str	r2, [r4, #16]
   18050:	bl	46d4 <free@plt>
   18054:	b	17fc0 <rb_dictionary_add+0xc4>

00018058 <rb_dictionary_delete>:
   18058:	strd	r4, [sp, #-16]!
   1805c:	mov	r4, r0
   18060:	str	r6, [sp, #8]
   18064:	str	lr, [sp, #12]
   18068:	bl	4a04 <rb_dictionary_find@plt>
   1806c:	cmp	r0, #0
   18070:	moveq	r5, r0
   18074:	beq	18138 <rb_dictionary_delete+0xe0>
   18078:	ldrb	r2, [r4, #24]
   1807c:	ldr	r3, [r4, #4]
   18080:	ldr	r5, [r0, #16]
   18084:	orr	r2, r2, #1
   18088:	cmp	r3, #0
   1808c:	strb	r2, [r4, #24]
   18090:	beq	18134 <rb_dictionary_delete+0xdc>
   18094:	ldm	r3, {r1, lr}
   18098:	ldr	r2, [r3, #12]
   1809c:	cmp	r1, #0
   180a0:	streq	lr, [r4, #4]
   180a4:	beq	180f4 <rb_dictionary_delete+0x9c>
   180a8:	cmp	lr, #0
   180ac:	streq	r1, [r4, #4]
   180b0:	beq	180f4 <rb_dictionary_delete+0x9c>
   180b4:	cmp	r2, lr
   180b8:	movne	ip, lr
   180bc:	streq	r2, [r4, #4]
   180c0:	streq	r1, [r2]
   180c4:	bne	180d0 <rb_dictionary_delete+0x78>
   180c8:	b	180f4 <rb_dictionary_delete+0x9c>
   180cc:	mov	ip, r1
   180d0:	ldr	r1, [ip]
   180d4:	cmp	r1, r2
   180d8:	cmpne	r1, #0
   180dc:	bne	180cc <rb_dictionary_delete+0x74>
   180e0:	ldr	r1, [r2, #4]
   180e4:	str	r1, [ip]
   180e8:	ldr	r1, [r3]
   180ec:	str	r2, [r4, #4]
   180f0:	stm	r2, {r1, lr}
   180f4:	ldr	r1, [r3, #8]
   180f8:	ldr	ip, [r4, #8]
   180fc:	cmp	r1, #0
   18100:	strne	r2, [r1, #12]
   18104:	ldrne	r2, [r3, #12]
   18108:	cmp	r3, ip
   1810c:	streq	r2, [r4, #8]
   18110:	cmp	r2, #0
   18114:	strne	r1, [r2, #8]
   18118:	ldr	r2, [r4, #12]
   1811c:	cmp	r3, r2
   18120:	ldreq	r3, [r3, #8]
   18124:	streq	r3, [r4, #12]
   18128:	ldr	r3, [r4, #16]
   1812c:	sub	r3, r3, #1
   18130:	str	r3, [r4, #16]
   18134:	bl	46d4 <free@plt>
   18138:	mov	r0, r5
   1813c:	ldrd	r4, [sp]
   18140:	ldr	r6, [sp, #8]
   18144:	add	sp, sp, #12
   18148:	pop	{pc}		; (ldr pc, [sp], #4)

0001814c <rb_dictionary_retrieve>:
   1814c:	str	r4, [sp, #-8]!
   18150:	str	lr, [sp, #4]
   18154:	bl	4a04 <rb_dictionary_find@plt>
   18158:	cmp	r0, #0
   1815c:	ldr	r4, [sp]
   18160:	add	sp, sp, #4
   18164:	ldrne	r0, [r0, #16]
   18168:	pop	{pc}		; (ldr pc, [sp], #4)

0001816c <rb_dictionary_size>:
   1816c:	ldr	r0, [r0, #16]
   18170:	bx	lr

00018174 <rb_dictionary_stats>:
   18174:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18178:	strd	r6, [sp, #8]
   1817c:	mov	r7, r0
   18180:	strd	r8, [sp, #16]
   18184:	mov	r8, r1
   18188:	mov	r9, r2
   1818c:	ldr	r1, [r0, #16]
   18190:	str	sl, [sp, #24]
   18194:	str	lr, [sp, #28]
   18198:	sub	sp, sp, #288	; 0x120
   1819c:	cmp	r1, #0
   181a0:	beq	18270 <rb_dictionary_stats+0xfc>
   181a4:	ldr	r5, [r0, #4]
   181a8:	mov	r4, #0
   181ac:	str	r4, [sp, #28]
   181b0:	cmp	r5, r4
   181b4:	addne	sl, sp, #28
   181b8:	movne	r6, r4
   181bc:	bne	18230 <rb_dictionary_stats+0xbc>
   181c0:	mov	r3, r5
   181c4:	mov	r6, r5
   181c8:	ldr	r2, [pc, #228]	; 182b4 <rb_dictionary_stats+0x140>
   181cc:	udiv	ip, r6, r1
   181d0:	add	r4, sp, #32
   181d4:	stmib	sp, {r1, r6}
   181d8:	mov	r0, r4
   181dc:	mov	r1, #256	; 0x100
   181e0:	str	r3, [sp, #16]
   181e4:	ldr	r3, [r7, #20]
   181e8:	add	r2, pc, r2
   181ec:	str	r2, [sp]
   181f0:	ldr	r2, [pc, #192]	; 182b8 <rb_dictionary_stats+0x144>
   181f4:	str	ip, [sp, #12]
   181f8:	add	r2, pc, r2
   181fc:	bl	4b84 <snprintf@plt>
   18200:	mov	r1, r9
   18204:	mov	r0, r4
   18208:	blx	r8
   1820c:	add	sp, sp, #288	; 0x120
   18210:	ldrd	r4, [sp]
   18214:	ldrd	r6, [sp, #8]
   18218:	ldrd	r8, [sp, #16]
   1821c:	ldr	sl, [sp, #24]
   18220:	add	sp, sp, #28
   18224:	pop	{pc}		; (ldr pc, [sp], #4)
   18228:	cmp	r3, r4
   1822c:	strlt	r4, [sp, #28]
   18230:	ldr	r3, [r5]
   18234:	mov	r2, sl
   18238:	add	r1, r4, #1
   1823c:	mov	ip, r4
   18240:	subs	r0, r3, #0
   18244:	beq	18250 <rb_dictionary_stats+0xdc>
   18248:	bl	178dc <stats_recurse>
   1824c:	add	ip, r0, r4
   18250:	ldr	r5, [r5, #4]
   18254:	add	r4, r4, #1
   18258:	add	r6, r6, ip
   1825c:	ldr	r3, [sp, #28]
   18260:	cmp	r5, #0
   18264:	bne	18228 <rb_dictionary_stats+0xb4>
   18268:	ldr	r1, [r7, #16]
   1826c:	b	181c8 <rb_dictionary_stats+0x54>
   18270:	ldr	r2, [pc, #68]	; 182bc <rb_dictionary_stats+0x148>
   18274:	add	r4, sp, #32
   18278:	mov	r1, #256	; 0x100
   1827c:	mov	r0, r4
   18280:	ldr	ip, [pc, #56]	; 182c0 <rb_dictionary_stats+0x14c>
   18284:	ldr	r3, [r7, #20]
   18288:	add	r2, pc, r2
   1828c:	str	r2, [sp, #4]
   18290:	add	ip, pc, ip
   18294:	str	r2, [sp, #8]
   18298:	str	r2, [sp, #12]
   1829c:	str	r2, [sp, #16]
   182a0:	ldr	r2, [pc, #28]	; 182c4 <rb_dictionary_stats+0x150>
   182a4:	str	ip, [sp]
   182a8:	add	r2, pc, r2
   182ac:	bl	4b84 <snprintf@plt>
   182b0:	b	18200 <rb_dictionary_stats+0x8c>
   182b4:	.word	0x00003284
   182b8:	.word	0x00003250
   182bc:	.word	0x00002154
   182c0:	.word	0x000031dc
   182c4:	.word	0x000031cc

000182c8 <rb_dictionary_stats_walk>:
   182c8:	ldr	r3, [pc, #72]	; 18318 <rb_dictionary_stats_walk+0x50>
   182cc:	strd	r4, [sp, #-16]!
   182d0:	ldr	r4, [pc, r3]
   182d4:	str	r6, [sp, #8]
   182d8:	str	lr, [sp, #12]
   182dc:	cmp	r4, #0
   182e0:	beq	18308 <rb_dictionary_stats_walk+0x40>
   182e4:	mov	r6, r0
   182e8:	mov	r5, r1
   182ec:	mov	r2, r5
   182f0:	mov	r1, r6
   182f4:	ldr	r0, [r4]
   182f8:	bl	4974 <rb_dictionary_stats@plt>
   182fc:	ldr	r4, [r4, #8]
   18300:	cmp	r4, #0
   18304:	bne	182ec <rb_dictionary_stats_walk+0x24>
   18308:	ldrd	r4, [sp]
   1830c:	ldr	r6, [sp, #8]
   18310:	add	sp, sp, #12
   18314:	pop	{pc}		; (ldr pc, [sp], #4)
   18318:	.word	0x00031c54

0001831c <stats_recurse>:
   1831c:	ldr	r3, [r2]
   18320:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18324:	strd	r6, [sp, #8]
   18328:	str	r8, [sp, #16]
   1832c:	str	lr, [sp, #20]
   18330:	cmp	r3, r1
   18334:	strlt	r1, [r2]
   18338:	ldr	r3, [r0]
   1833c:	cmn	r3, #1
   18340:	moveq	r5, r1
   18344:	beq	18380 <stats_recurse+0x64>
   18348:	mov	r6, r2
   1834c:	mov	r4, r0
   18350:	add	r8, r1, #1
   18354:	add	r7, r0, #64	; 0x40
   18358:	mov	r5, #0
   1835c:	ldr	r3, [r4, #4]!
   18360:	mov	r2, r6
   18364:	mov	r1, r8
   18368:	subs	r0, r3, #0
   1836c:	beq	18378 <stats_recurse+0x5c>
   18370:	bl	1831c <stats_recurse>
   18374:	add	r5, r5, r0
   18378:	cmp	r4, r7
   1837c:	bne	1835c <stats_recurse+0x40>
   18380:	mov	r0, r5
   18384:	ldrd	r4, [sp]
   18388:	ldrd	r6, [sp, #8]
   1838c:	ldr	r8, [sp, #16]
   18390:	add	sp, sp, #20
   18394:	pop	{pc}		; (ldr pc, [sp], #4)

00018398 <rb_radixtree_create>:
   18398:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1839c:	ldr	r5, [pc, #196]	; 18468 <rb_radixtree_create+0xd0>
   183a0:	strd	r6, [sp, #8]
   183a4:	mov	r6, r0
   183a8:	mov	r7, r1
   183ac:	mov	r0, #1
   183b0:	mov	r1, #28
   183b4:	str	r8, [sp, #16]
   183b8:	str	lr, [sp, #20]
   183bc:	bl	45c0 <calloc@plt>
   183c0:	subs	r4, r0, #0
   183c4:	add	r5, pc, r5
   183c8:	beq	18464 <rb_radixtree_create+0xcc>
   183cc:	mov	r0, r6
   183d0:	str	r7, [r4]
   183d4:	bl	47c4 <strlen@plt>
   183d8:	add	r7, r0, #1
   183dc:	mov	r0, r7
   183e0:	bl	4980 <malloc@plt>
   183e4:	subs	r8, r0, #0
   183e8:	beq	18464 <rb_radixtree_create+0xcc>
   183ec:	mov	r2, r7
   183f0:	mov	r1, r6
   183f4:	bl	47e8 <memcpy@plt>
   183f8:	ldr	r3, [pc, #108]	; 1846c <rb_radixtree_create+0xd4>
   183fc:	mov	r2, #0
   18400:	add	r1, r4, #16
   18404:	str	r2, [r4, #4]
   18408:	str	r8, [r4, #12]
   1840c:	str	r4, [r4, #16]
   18410:	str	r2, [r4, #20]
   18414:	ldr	r3, [r5, r3]
   18418:	ldr	r2, [r3]
   1841c:	cmp	r2, #0
   18420:	str	r2, [r4, #24]
   18424:	strne	r1, [r2, #4]
   18428:	beq	18454 <rb_radixtree_create+0xbc>
   1842c:	ldr	r2, [r3, #8]
   18430:	mov	r0, r4
   18434:	ldrd	r4, [sp]
   18438:	ldrd	r6, [sp, #8]
   1843c:	add	r2, r2, #1
   18440:	ldr	r8, [sp, #16]
   18444:	add	sp, sp, #20
   18448:	str	r1, [r3]
   1844c:	str	r2, [r3, #8]
   18450:	pop	{pc}		; (ldr pc, [sp], #4)
   18454:	ldr	r2, [r3, #4]
   18458:	cmp	r2, #0
   1845c:	streq	r1, [r3, #4]
   18460:	b	1842c <rb_radixtree_create+0x94>
   18464:	bl	495c <rb_outofmemory@plt>
   18468:	.word	0x00013c34
   1846c:	.word	0x000003f0

00018470 <rb_radixtree_foreach>:
   18470:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18474:	ldr	r5, [r0, #4]
   18478:	strd	r6, [sp, #8]
   1847c:	str	r8, [sp, #16]
   18480:	str	lr, [sp, #20]
   18484:	cmp	r5, #0
   18488:	beq	18674 <rb_radixtree_foreach+0x204>
   1848c:	ldr	r3, [r5]
   18490:	mov	r7, r1
   18494:	cmn	r3, #1
   18498:	movne	r6, r2
   1849c:	movne	r0, #0
   184a0:	beq	186b4 <rb_radixtree_foreach+0x244>
   184a4:	add	r3, r5, r0, lsl #2
   184a8:	add	r4, r0, #1
   184ac:	ldr	r3, [r3, #4]
   184b0:	cmp	r4, #15
   184b4:	cmple	r3, #0
   184b8:	bne	18638 <rb_radixtree_foreach+0x1c8>
   184bc:	add	r4, r5, r4, lsl #2
   184c0:	add	ip, r0, #2
   184c4:	ldr	r3, [r4, #4]
   184c8:	cmp	ip, #15
   184cc:	cmple	r3, #0
   184d0:	bne	186a4 <rb_radixtree_foreach+0x234>
   184d4:	add	ip, r5, ip, lsl #2
   184d8:	add	r4, r0, #3
   184dc:	ldr	r3, [ip, #4]
   184e0:	cmp	r4, #15
   184e4:	cmple	r3, #0
   184e8:	bne	18638 <rb_radixtree_foreach+0x1c8>
   184ec:	add	r4, r5, r4, lsl #2
   184f0:	add	r2, r0, #4
   184f4:	ldr	r3, [r4, #4]
   184f8:	cmp	r2, #15
   184fc:	cmple	r3, #0
   18500:	bne	18634 <rb_radixtree_foreach+0x1c4>
   18504:	add	r2, r5, r2, lsl #2
   18508:	add	r4, r0, #5
   1850c:	ldr	r3, [r2, #4]
   18510:	cmp	r4, #15
   18514:	cmple	r3, #0
   18518:	bne	18638 <rb_radixtree_foreach+0x1c8>
   1851c:	add	r4, r5, r4, lsl #2
   18520:	add	r2, r0, #6
   18524:	ldr	r3, [r4, #4]
   18528:	cmp	r2, #15
   1852c:	cmple	r3, #0
   18530:	bne	18634 <rb_radixtree_foreach+0x1c4>
   18534:	add	r2, r5, r2, lsl #2
   18538:	add	r4, r0, #7
   1853c:	ldr	r3, [r2, #4]
   18540:	cmp	r4, #15
   18544:	cmple	r3, #0
   18548:	bne	18638 <rb_radixtree_foreach+0x1c8>
   1854c:	add	r4, r5, r4, lsl #2
   18550:	add	r2, r0, #8
   18554:	ldr	r3, [r4, #4]
   18558:	cmp	r2, #15
   1855c:	cmple	r3, #0
   18560:	bne	18634 <rb_radixtree_foreach+0x1c4>
   18564:	add	r2, r5, r2, lsl #2
   18568:	add	r4, r0, #9
   1856c:	ldr	r3, [r2, #4]
   18570:	cmp	r4, #15
   18574:	cmple	r3, #0
   18578:	bne	18638 <rb_radixtree_foreach+0x1c8>
   1857c:	add	r4, r5, r4, lsl #2
   18580:	add	r2, r0, #10
   18584:	ldr	r3, [r4, #4]
   18588:	cmp	r2, #15
   1858c:	cmple	r3, #0
   18590:	bne	18634 <rb_radixtree_foreach+0x1c4>
   18594:	add	r2, r5, r2, lsl #2
   18598:	add	r4, r0, #11
   1859c:	ldr	r3, [r2, #4]
   185a0:	cmp	r4, #15
   185a4:	cmple	r3, #0
   185a8:	bne	18638 <rb_radixtree_foreach+0x1c8>
   185ac:	add	r4, r5, r4, lsl #2
   185b0:	add	r2, r0, #12
   185b4:	ldr	r3, [r4, #4]
   185b8:	cmp	r2, #15
   185bc:	cmple	r3, #0
   185c0:	bne	18634 <rb_radixtree_foreach+0x1c4>
   185c4:	add	r2, r5, r2, lsl #2
   185c8:	add	r4, r0, #13
   185cc:	ldr	r3, [r2, #4]
   185d0:	cmp	r4, #15
   185d4:	cmple	r3, #0
   185d8:	bne	18638 <rb_radixtree_foreach+0x1c8>
   185dc:	add	r4, r5, r4, lsl #2
   185e0:	add	r2, r0, #14
   185e4:	ldr	r3, [r4, #4]
   185e8:	cmp	r2, #15
   185ec:	cmple	r3, #0
   185f0:	bne	18634 <rb_radixtree_foreach+0x1c4>
   185f4:	add	r2, r5, r2, lsl #2
   185f8:	add	r4, r0, #15
   185fc:	ldr	r3, [r2, #4]
   18600:	cmp	r4, #15
   18604:	cmple	r3, #0
   18608:	bne	18638 <rb_radixtree_foreach+0x1c8>
   1860c:	ldr	r3, [r5, #64]	; 0x40
   18610:	cmp	r3, #0
   18614:	movne	r4, #16
   18618:	beq	18648 <rb_radixtree_foreach+0x1d8>
   1861c:	ldr	r2, [r3]
   18620:	cmn	r2, #1
   18624:	movne	r0, #0
   18628:	beq	18688 <rb_radixtree_foreach+0x218>
   1862c:	mov	r5, r3
   18630:	b	184a4 <rb_radixtree_foreach+0x34>
   18634:	mov	r4, r2
   18638:	cmp	r3, #0
   1863c:	bne	1861c <rb_radixtree_foreach+0x1ac>
   18640:	cmp	r4, #16
   18644:	bne	186e0 <rb_radixtree_foreach+0x270>
   18648:	ldr	r3, [r5, #68]	; 0x44
   1864c:	ldrb	r0, [r5, #72]	; 0x48
   18650:	cmp	r3, #0
   18654:	beq	18674 <rb_radixtree_foreach+0x204>
   18658:	add	r0, r0, #1
   1865c:	cmp	r0, #15
   18660:	ble	1862c <rb_radixtree_foreach+0x1bc>
   18664:	ldrb	r0, [r3, #72]	; 0x48
   18668:	ldr	r3, [r3, #68]	; 0x44
   1866c:	cmp	r3, #0
   18670:	bne	18658 <rb_radixtree_foreach+0x1e8>
   18674:	ldrd	r4, [sp]
   18678:	ldrd	r6, [sp, #8]
   1867c:	ldr	r8, [sp, #16]
   18680:	add	sp, sp, #20
   18684:	pop	{pc}		; (ldr pc, [sp], #4)
   18688:	cmp	r7, #0
   1868c:	beq	18640 <rb_radixtree_foreach+0x1d0>
   18690:	mov	r2, r6
   18694:	ldr	r1, [r3, #4]
   18698:	ldr	r0, [r3, #8]
   1869c:	blx	r7
   186a0:	b	18640 <rb_radixtree_foreach+0x1d0>
   186a4:	cmp	r3, #0
   186a8:	mov	r4, ip
   186ac:	bne	1861c <rb_radixtree_foreach+0x1ac>
   186b0:	b	18640 <rb_radixtree_foreach+0x1d0>
   186b4:	cmp	r1, #0
   186b8:	beq	18674 <rb_radixtree_foreach+0x204>
   186bc:	mov	r3, r1
   186c0:	ldr	r1, [r5, #4]
   186c4:	ldr	r0, [r5, #8]
   186c8:	ldrd	r4, [sp]
   186cc:	ldrd	r6, [sp, #8]
   186d0:	ldr	r8, [sp, #16]
   186d4:	ldr	lr, [sp, #20]
   186d8:	add	sp, sp, #24
   186dc:	bx	r3
   186e0:	mov	r0, r4
   186e4:	mov	r3, r5
   186e8:	b	1862c <rb_radixtree_foreach+0x1bc>

000186ec <rb_radixtree_search>:
   186ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   186f0:	ldr	r4, [r0, #4]
   186f4:	strd	r6, [sp, #8]
   186f8:	str	r8, [sp, #16]
   186fc:	str	lr, [sp, #20]
   18700:	cmp	r4, #0
   18704:	beq	1895c <rb_radixtree_search+0x270>
   18708:	ldr	r3, [r4]
   1870c:	mov	r7, r1
   18710:	cmn	r3, #1
   18714:	movne	r6, r2
   18718:	movne	r3, #0
   1871c:	beq	18930 <rb_radixtree_search+0x244>
   18720:	add	r2, r4, r3, lsl #2
   18724:	add	r5, r3, #1
   18728:	ldr	r0, [r2, #4]
   1872c:	cmp	r5, #15
   18730:	cmple	r0, #0
   18734:	bne	1890c <rb_radixtree_search+0x220>
   18738:	add	r5, r4, r5, lsl #2
   1873c:	add	r2, r3, #2
   18740:	ldr	r0, [r5, #4]
   18744:	cmp	r2, #15
   18748:	cmple	r0, #0
   1874c:	bne	18908 <rb_radixtree_search+0x21c>
   18750:	add	r2, r4, r2, lsl #2
   18754:	add	r5, r3, #3
   18758:	ldr	r0, [r2, #4]
   1875c:	cmp	r5, #15
   18760:	cmple	r0, #0
   18764:	bne	1890c <rb_radixtree_search+0x220>
   18768:	add	r5, r4, r5, lsl #2
   1876c:	add	r2, r3, #4
   18770:	ldr	r0, [r5, #4]
   18774:	cmp	r2, #15
   18778:	cmple	r0, #0
   1877c:	bne	18908 <rb_radixtree_search+0x21c>
   18780:	add	r2, r4, r2, lsl #2
   18784:	add	r5, r3, #5
   18788:	ldr	r0, [r2, #4]
   1878c:	cmp	r5, #15
   18790:	cmple	r0, #0
   18794:	bne	1890c <rb_radixtree_search+0x220>
   18798:	add	r5, r4, r5, lsl #2
   1879c:	add	r2, r3, #6
   187a0:	ldr	r0, [r5, #4]
   187a4:	cmp	r2, #15
   187a8:	cmple	r0, #0
   187ac:	bne	18908 <rb_radixtree_search+0x21c>
   187b0:	add	r2, r4, r2, lsl #2
   187b4:	add	r5, r3, #7
   187b8:	ldr	r0, [r2, #4]
   187bc:	cmp	r5, #15
   187c0:	cmple	r0, #0
   187c4:	bne	1890c <rb_radixtree_search+0x220>
   187c8:	add	r5, r4, r5, lsl #2
   187cc:	add	r2, r3, #8
   187d0:	ldr	r0, [r5, #4]
   187d4:	cmp	r2, #15
   187d8:	cmple	r0, #0
   187dc:	bne	18908 <rb_radixtree_search+0x21c>
   187e0:	add	r2, r4, r2, lsl #2
   187e4:	add	r5, r3, #9
   187e8:	ldr	r0, [r2, #4]
   187ec:	cmp	r5, #15
   187f0:	cmple	r0, #0
   187f4:	bne	1890c <rb_radixtree_search+0x220>
   187f8:	add	r5, r4, r5, lsl #2
   187fc:	add	r2, r3, #10
   18800:	ldr	r0, [r5, #4]
   18804:	cmp	r2, #15
   18808:	cmple	r0, #0
   1880c:	bne	18908 <rb_radixtree_search+0x21c>
   18810:	add	r2, r4, r2, lsl #2
   18814:	add	r5, r3, #11
   18818:	ldr	r0, [r2, #4]
   1881c:	cmp	r5, #15
   18820:	cmple	r0, #0
   18824:	bne	1890c <rb_radixtree_search+0x220>
   18828:	add	r5, r4, r5, lsl #2
   1882c:	add	r2, r3, #12
   18830:	ldr	r0, [r5, #4]
   18834:	cmp	r2, #15
   18838:	cmple	r0, #0
   1883c:	bne	18908 <rb_radixtree_search+0x21c>
   18840:	add	r2, r4, r2, lsl #2
   18844:	add	r5, r3, #13
   18848:	ldr	r0, [r2, #4]
   1884c:	cmp	r5, #15
   18850:	cmple	r0, #0
   18854:	bne	1890c <rb_radixtree_search+0x220>
   18858:	add	r5, r4, r5, lsl #2
   1885c:	add	r2, r3, #14
   18860:	ldr	r0, [r5, #4]
   18864:	cmp	r2, #15
   18868:	cmple	r0, #0
   1886c:	bne	18908 <rb_radixtree_search+0x21c>
   18870:	add	r2, r4, r2, lsl #2
   18874:	add	r5, r3, #15
   18878:	ldr	r0, [r2, #4]
   1887c:	cmp	r5, #15
   18880:	cmple	r0, #0
   18884:	bne	1890c <rb_radixtree_search+0x220>
   18888:	ldr	r0, [r4, #64]	; 0x40
   1888c:	cmp	r0, #0
   18890:	movne	r5, #16
   18894:	beq	188f4 <rb_radixtree_search+0x208>
   18898:	ldr	r3, [r0]
   1889c:	cmn	r3, #1
   188a0:	movne	r4, r0
   188a4:	movne	r3, #0
   188a8:	bne	18720 <rb_radixtree_search+0x34>
   188ac:	cmp	r7, #0
   188b0:	beq	188cc <rb_radixtree_search+0x1e0>
   188b4:	mov	r2, r6
   188b8:	ldr	r1, [r0, #4]
   188bc:	ldr	r0, [r0, #8]
   188c0:	blx	r7
   188c4:	cmp	r0, #0
   188c8:	bne	1891c <rb_radixtree_search+0x230>
   188cc:	cmp	r5, #15
   188d0:	movle	r3, r5
   188d4:	ble	18720 <rb_radixtree_search+0x34>
   188d8:	ldrb	r3, [r4, #72]	; 0x48
   188dc:	ldr	r4, [r4, #68]	; 0x44
   188e0:	cmp	r4, #0
   188e4:	beq	18720 <rb_radixtree_search+0x34>
   188e8:	add	r3, r3, #1
   188ec:	cmp	r3, #15
   188f0:	ble	18720 <rb_radixtree_search+0x34>
   188f4:	ldrb	r3, [r4, #72]	; 0x48
   188f8:	ldr	r4, [r4, #68]	; 0x44
   188fc:	cmp	r4, #0
   18900:	bne	188e8 <rb_radixtree_search+0x1fc>
   18904:	b	18720 <rb_radixtree_search+0x34>
   18908:	mov	r5, r2
   1890c:	cmp	r0, #0
   18910:	bne	18898 <rb_radixtree_search+0x1ac>
   18914:	b	188cc <rb_radixtree_search+0x1e0>
   18918:	mov	r0, r1
   1891c:	ldrd	r4, [sp]
   18920:	ldrd	r6, [sp, #8]
   18924:	ldr	r8, [sp, #16]
   18928:	add	sp, sp, #20
   1892c:	pop	{pc}		; (ldr pc, [sp], #4)
   18930:	cmp	r1, #0
   18934:	beq	18918 <rb_radixtree_search+0x22c>
   18938:	mov	r3, r1
   1893c:	ldr	r1, [r4, #4]
   18940:	ldr	r0, [r4, #8]
   18944:	ldrd	r4, [sp]
   18948:	ldrd	r6, [sp, #8]
   1894c:	ldr	r8, [sp, #16]
   18950:	ldr	lr, [sp, #20]
   18954:	add	sp, sp, #24
   18958:	bx	r3
   1895c:	mov	r0, r4
   18960:	b	1891c <rb_radixtree_search+0x230>

00018964 <rb_radixtree_foreach_cur>:
   18964:	cmp	r0, #0
   18968:	beq	18978 <rb_radixtree_foreach_cur+0x14>
   1896c:	ldr	r0, [r1, #8]
   18970:	cmp	r0, #0
   18974:	ldrne	r0, [r0, #4]
   18978:	bx	lr

0001897c <rb_radixtree_foreach_next>:
   1897c:	cmp	r0, #0
   18980:	bxeq	lr
   18984:	ldr	r3, [r1, #8]
   18988:	cmp	r3, #0
   1898c:	bxeq	lr
   18990:	strd	r4, [sp, #-16]!
   18994:	str	r6, [sp, #8]
   18998:	str	lr, [sp, #12]
   1899c:	ldr	lr, [r1, #12]
   189a0:	cmp	lr, #0
   189a4:	str	lr, [r1, #8]
   189a8:	beq	18b74 <rb_radixtree_foreach_next+0x1f8>
   189ac:	ldr	r3, [lr, #12]
   189b0:	mov	r4, r1
   189b4:	ldrb	r2, [lr, #16]
   189b8:	cmp	r3, #0
   189bc:	beq	18b6c <rb_radixtree_foreach_next+0x1f0>
   189c0:	add	ip, r3, r2, lsl #2
   189c4:	add	r0, r2, #1
   189c8:	ldr	r5, [ip, #4]
   189cc:	cmp	r0, #15
   189d0:	cmple	r5, #0
   189d4:	bne	18b88 <rb_radixtree_foreach_next+0x20c>
   189d8:	add	r0, r3, r0, lsl #2
   189dc:	add	ip, r2, #2
   189e0:	ldr	r5, [r0, #4]
   189e4:	cmp	ip, #15
   189e8:	cmple	r5, #0
   189ec:	bne	18bc8 <rb_radixtree_foreach_next+0x24c>
   189f0:	add	ip, r3, ip, lsl #2
   189f4:	add	r0, r2, #3
   189f8:	ldr	r5, [ip, #4]
   189fc:	cmp	r0, #15
   18a00:	cmple	r5, #0
   18a04:	bne	18b88 <rb_radixtree_foreach_next+0x20c>
   18a08:	add	r0, r3, r0, lsl #2
   18a0c:	add	ip, r2, #4
   18a10:	ldr	r5, [r0, #4]
   18a14:	cmp	ip, #15
   18a18:	cmple	r5, #0
   18a1c:	bne	18bc8 <rb_radixtree_foreach_next+0x24c>
   18a20:	add	ip, r3, ip, lsl #2
   18a24:	add	r0, r2, #5
   18a28:	ldr	r5, [ip, #4]
   18a2c:	cmp	r0, #15
   18a30:	cmple	r5, #0
   18a34:	bne	18b88 <rb_radixtree_foreach_next+0x20c>
   18a38:	add	r0, r3, r0, lsl #2
   18a3c:	add	r1, r2, #6
   18a40:	ldr	r5, [r0, #4]
   18a44:	cmp	r1, #15
   18a48:	cmple	r5, #0
   18a4c:	bne	18b84 <rb_radixtree_foreach_next+0x208>
   18a50:	add	r1, r3, r1, lsl #2
   18a54:	add	r0, r2, #7
   18a58:	ldr	r5, [r1, #4]
   18a5c:	cmp	r0, #15
   18a60:	cmple	r5, #0
   18a64:	bne	18b88 <rb_radixtree_foreach_next+0x20c>
   18a68:	add	r0, r3, r0, lsl #2
   18a6c:	add	r1, r2, #8
   18a70:	ldr	r5, [r0, #4]
   18a74:	cmp	r1, #15
   18a78:	cmple	r5, #0
   18a7c:	bne	18b84 <rb_radixtree_foreach_next+0x208>
   18a80:	add	r1, r3, r1, lsl #2
   18a84:	add	r0, r2, #9
   18a88:	ldr	r5, [r1, #4]
   18a8c:	cmp	r0, #15
   18a90:	cmple	r5, #0
   18a94:	bne	18b88 <rb_radixtree_foreach_next+0x20c>
   18a98:	add	r0, r3, r0, lsl #2
   18a9c:	add	r1, r2, #10
   18aa0:	ldr	r5, [r0, #4]
   18aa4:	cmp	r1, #15
   18aa8:	cmple	r5, #0
   18aac:	bne	18b84 <rb_radixtree_foreach_next+0x208>
   18ab0:	add	r1, r3, r1, lsl #2
   18ab4:	add	r0, r2, #11
   18ab8:	ldr	r5, [r1, #4]
   18abc:	cmp	r0, #15
   18ac0:	cmple	r5, #0
   18ac4:	bne	18b88 <rb_radixtree_foreach_next+0x20c>
   18ac8:	add	r0, r3, r0, lsl #2
   18acc:	add	r1, r2, #12
   18ad0:	ldr	r5, [r0, #4]
   18ad4:	cmp	r1, #15
   18ad8:	cmple	r5, #0
   18adc:	bne	18b84 <rb_radixtree_foreach_next+0x208>
   18ae0:	add	r1, r3, r1, lsl #2
   18ae4:	add	r0, r2, #13
   18ae8:	ldr	r5, [r1, #4]
   18aec:	cmp	r0, #15
   18af0:	cmple	r5, #0
   18af4:	bne	18b88 <rb_radixtree_foreach_next+0x20c>
   18af8:	add	r0, r3, r0, lsl #2
   18afc:	add	r1, r2, #14
   18b00:	ldr	r5, [r0, #4]
   18b04:	cmp	r1, #15
   18b08:	cmple	r5, #0
   18b0c:	bne	18b84 <rb_radixtree_foreach_next+0x208>
   18b10:	add	r1, r3, r1, lsl #2
   18b14:	add	r0, r2, #15
   18b18:	ldr	r5, [r1, #4]
   18b1c:	cmp	r0, #15
   18b20:	cmple	r5, #0
   18b24:	bne	18b88 <rb_radixtree_foreach_next+0x20c>
   18b28:	ldr	r5, [r3, #64]	; 0x40
   18b2c:	cmp	r5, #0
   18b30:	movne	r0, #16
   18b34:	beq	18b5c <rb_radixtree_foreach_next+0x1e0>
   18b38:	ldr	r2, [r5]
   18b3c:	cmn	r2, #1
   18b40:	movne	r2, #0
   18b44:	beq	18ba4 <rb_radixtree_foreach_next+0x228>
   18b48:	mov	r3, r5
   18b4c:	b	189c0 <rb_radixtree_foreach_next+0x44>
   18b50:	add	r2, r2, #1
   18b54:	cmp	r2, #15
   18b58:	ble	189c0 <rb_radixtree_foreach_next+0x44>
   18b5c:	ldrb	r2, [r3, #72]	; 0x48
   18b60:	ldr	r3, [r3, #68]	; 0x44
   18b64:	cmp	r3, #0
   18b68:	bne	18b50 <rb_radixtree_foreach_next+0x1d4>
   18b6c:	mov	r3, #0
   18b70:	str	r3, [r4, #12]
   18b74:	ldrd	r4, [sp]
   18b78:	ldr	r6, [sp, #8]
   18b7c:	add	sp, sp, #12
   18b80:	pop	{pc}		; (ldr pc, [sp], #4)
   18b84:	mov	r0, r1
   18b88:	cmp	r5, #0
   18b8c:	bne	18b38 <rb_radixtree_foreach_next+0x1bc>
   18b90:	cmp	r0, #15
   18b94:	bgt	18b5c <rb_radixtree_foreach_next+0x1e0>
   18b98:	mov	r2, r0
   18b9c:	mov	r5, r3
   18ba0:	b	18b48 <rb_radixtree_foreach_next+0x1cc>
   18ba4:	cmp	lr, r5
   18ba8:	beq	18b90 <rb_radixtree_foreach_next+0x214>
   18bac:	ldr	r0, [r5, #8]
   18bb0:	ldr	r1, [lr, #8]
   18bb4:	bl	4cb0 <strcmp@plt>
   18bb8:	cmp	r0, #0
   18bbc:	strge	r5, [r4, #12]
   18bc0:	bge	18b74 <rb_radixtree_foreach_next+0x1f8>
   18bc4:	b	18b6c <rb_radixtree_foreach_next+0x1f0>
   18bc8:	cmp	r5, #0
   18bcc:	mov	r0, ip
   18bd0:	bne	18b38 <rb_radixtree_foreach_next+0x1bc>
   18bd4:	b	18b90 <rb_radixtree_foreach_next+0x214>

00018bd8 <rb_radixtree_foreach_start>:
   18bd8:	cmp	r0, #0
   18bdc:	mov	ip, r1
   18be0:	beq	18ce4 <rb_radixtree_foreach_start+0x10c>
   18be4:	ldr	r3, [r0, #4]
   18be8:	cmp	r3, #0
   18bec:	beq	18cdc <rb_radixtree_foreach_start+0x104>
   18bf0:	ldr	r2, [r3]
   18bf4:	cmn	r2, #1
   18bf8:	beq	18ccc <rb_radixtree_foreach_start+0xf4>
   18bfc:	ldr	r2, [r3, #4]
   18c00:	cmp	r2, #0
   18c04:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c08:	ldr	r2, [r3, #8]
   18c0c:	cmp	r2, #0
   18c10:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c14:	ldr	r2, [r3, #12]
   18c18:	cmp	r2, #0
   18c1c:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c20:	ldr	r2, [r3, #16]
   18c24:	cmp	r2, #0
   18c28:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c2c:	ldr	r2, [r3, #20]
   18c30:	cmp	r2, #0
   18c34:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c38:	ldr	r2, [r3, #24]
   18c3c:	cmp	r2, #0
   18c40:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c44:	ldr	r2, [r3, #28]
   18c48:	cmp	r2, #0
   18c4c:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c50:	ldr	r2, [r3, #32]
   18c54:	cmp	r2, #0
   18c58:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c5c:	ldr	r2, [r3, #36]	; 0x24
   18c60:	cmp	r2, #0
   18c64:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c68:	ldr	r2, [r3, #40]	; 0x28
   18c6c:	cmp	r2, #0
   18c70:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c74:	ldr	r2, [r3, #44]	; 0x2c
   18c78:	cmp	r2, #0
   18c7c:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c80:	ldr	r2, [r3, #48]	; 0x30
   18c84:	cmp	r2, #0
   18c88:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c8c:	ldr	r2, [r3, #52]	; 0x34
   18c90:	cmp	r2, #0
   18c94:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18c98:	ldr	r2, [r3, #56]	; 0x38
   18c9c:	cmp	r2, #0
   18ca0:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18ca4:	ldr	r2, [r3, #60]	; 0x3c
   18ca8:	cmp	r2, #0
   18cac:	bne	18cbc <rb_radixtree_foreach_start+0xe4>
   18cb0:	ldr	r2, [r3, #64]	; 0x40
   18cb4:	cmp	r2, #0
   18cb8:	beq	18c08 <rb_radixtree_foreach_start+0x30>
   18cbc:	mov	r3, r2
   18cc0:	ldr	r2, [r3]
   18cc4:	cmn	r2, #1
   18cc8:	bne	18bfc <rb_radixtree_foreach_start+0x24>
   18ccc:	mov	r1, ip
   18cd0:	str	r3, [ip, #8]
   18cd4:	str	r3, [ip, #12]
   18cd8:	b	441c <rb_radixtree_foreach_next@plt>
   18cdc:	str	r3, [r1, #8]
   18ce0:	str	r3, [r1, #12]
   18ce4:	bx	lr

00018ce8 <rb_radixtree_elem_find>:
   18ce8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18cec:	mov	r4, r0
   18cf0:	mov	r0, r1
   18cf4:	strd	r6, [sp, #8]
   18cf8:	mov	r6, r2
   18cfc:	strd	r8, [sp, #16]
   18d00:	mov	r8, r1
   18d04:	str	sl, [sp, #24]
   18d08:	str	lr, [sp, #28]
   18d0c:	sub	sp, sp, #256	; 0x100
   18d10:	bl	47c4 <strlen@plt>
   18d14:	ldr	r9, [r4]
   18d18:	mov	r5, r0
   18d1c:	cmp	r9, #0
   18d20:	beq	18db0 <rb_radixtree_elem_find+0xc8>
   18d24:	cmp	r0, #255	; 0xff
   18d28:	bls	18d8c <rb_radixtree_elem_find+0xa4>
   18d2c:	add	sl, r0, #1
   18d30:	mov	r0, sl
   18d34:	bl	4980 <malloc@plt>
   18d38:	subs	r7, r0, #0
   18d3c:	beq	18e30 <rb_radixtree_elem_find+0x148>
   18d40:	mov	r1, r8
   18d44:	mov	r2, sl
   18d48:	bl	47e8 <memcpy@plt>
   18d4c:	mov	r0, r7
   18d50:	blx	r9
   18d54:	ldr	r4, [r4, #4]
   18d58:	cmp	r4, #0
   18d5c:	movne	r8, r7
   18d60:	bne	18df4 <rb_radixtree_elem_find+0x10c>
   18d64:	mov	r0, r7
   18d68:	bl	46d4 <free@plt>
   18d6c:	mov	r0, r4
   18d70:	add	sp, sp, #256	; 0x100
   18d74:	ldrd	r4, [sp]
   18d78:	ldrd	r6, [sp, #8]
   18d7c:	ldrd	r8, [sp, #16]
   18d80:	ldr	sl, [sp, #24]
   18d84:	add	sp, sp, #28
   18d88:	pop	{pc}		; (ldr pc, [sp], #4)
   18d8c:	mov	r7, sp
   18d90:	mov	r1, r8
   18d94:	mov	r0, r7
   18d98:	mov	r2, #256	; 0x100
   18d9c:	bl	4680 <rb_strlcpy@plt>
   18da0:	mov	r0, r7
   18da4:	ldr	r3, [r4]
   18da8:	mov	r8, r7
   18dac:	blx	r3
   18db0:	ldr	r4, [r4, #4]
   18db4:	cmp	r4, #0
   18db8:	movne	r7, #0
   18dbc:	bne	18df4 <rb_radixtree_elem_find+0x10c>
   18dc0:	b	18d6c <rb_radixtree_elem_find+0x84>
   18dc4:	add	r2, r3, r3, lsr #31
   18dc8:	cmp	r5, r2, asr #1
   18dcc:	movle	r3, #0
   18dd0:	ble	18de4 <rb_radixtree_elem_find+0xfc>
   18dd4:	tst	r3, #1
   18dd8:	ldrb	r3, [r8, r2, asr #1]
   18ddc:	asreq	r3, r3, #4
   18de0:	and	r3, r3, #15
   18de4:	add	r4, r4, r3, lsl #2
   18de8:	ldr	r4, [r4, #4]
   18dec:	cmp	r4, #0
   18df0:	beq	18e1c <rb_radixtree_elem_find+0x134>
   18df4:	ldr	r3, [r4]
   18df8:	cmn	r3, #1
   18dfc:	bne	18dc4 <rb_radixtree_elem_find+0xdc>
   18e00:	cmp	r6, #0
   18e04:	bne	18e1c <rb_radixtree_elem_find+0x134>
   18e08:	mov	r1, r8
   18e0c:	ldr	r0, [r4, #8]
   18e10:	bl	4cb0 <strcmp@plt>
   18e14:	cmp	r0, #0
   18e18:	movne	r4, #0
   18e1c:	cmp	r7, #0
   18e20:	beq	18d6c <rb_radixtree_elem_find+0x84>
   18e24:	mov	r0, r7
   18e28:	bl	46d4 <free@plt>
   18e2c:	b	18d6c <rb_radixtree_elem_find+0x84>
   18e30:	bl	495c <rb_outofmemory@plt>

00018e34 <rb_radixtree_foreach_start_from>:
   18e34:	cmp	r2, #0
   18e38:	beq	18e84 <rb_radixtree_foreach_start_from+0x50>
   18e3c:	mov	r3, #0
   18e40:	strd	r4, [sp, #-16]!
   18e44:	mov	r4, r1
   18e48:	mov	r1, r2
   18e4c:	mov	r2, #1
   18e50:	str	r6, [sp, #8]
   18e54:	str	lr, [sp, #12]
   18e58:	mov	r5, r0
   18e5c:	str	r3, [r4, #8]
   18e60:	bl	4b48 <rb_radixtree_elem_find@plt>
   18e64:	mov	r1, r4
   18e68:	ldr	r6, [sp, #8]
   18e6c:	ldr	lr, [sp, #12]
   18e70:	str	r0, [r4, #12]
   18e74:	mov	r0, r5
   18e78:	ldrd	r4, [sp]
   18e7c:	add	sp, sp, #16
   18e80:	b	441c <rb_radixtree_foreach_next@plt>
   18e84:	b	43e0 <rb_radixtree_foreach_start@plt>

00018e88 <rb_radixtree_elem_add>:
   18e88:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18e8c:	mov	r4, r1
   18e90:	strd	r6, [sp, #8]
   18e94:	strd	r8, [sp, #16]
   18e98:	strd	sl, [sp, #24]
   18e9c:	mov	fp, r0
   18ea0:	mov	r0, r1
   18ea4:	str	lr, [sp, #32]
   18ea8:	sub	sp, sp, #20
   18eac:	str	r2, [sp, #4]
   18eb0:	bl	47c4 <strlen@plt>
   18eb4:	add	r5, r0, #1
   18eb8:	mov	r6, r0
   18ebc:	mov	r0, r5
   18ec0:	bl	4980 <malloc@plt>
   18ec4:	subs	r8, r0, #0
   18ec8:	beq	1922c <rb_radixtree_elem_add+0x3a4>
   18ecc:	mov	r2, r5
   18ed0:	mov	r1, r4
   18ed4:	bl	47e8 <memcpy@plt>
   18ed8:	ldr	r3, [fp]
   18edc:	cmp	r3, #0
   18ee0:	beq	18eec <rb_radixtree_elem_add+0x64>
   18ee4:	mov	r0, r8
   18ee8:	blx	r3
   18eec:	ldr	r5, [fp, #4]
   18ef0:	cmp	r5, #0
   18ef4:	str	r5, [sp, #8]
   18ef8:	beq	19298 <rb_radixtree_elem_add+0x410>
   18efc:	ldr	r3, [r5]
   18f00:	cmn	r3, #1
   18f04:	bne	18f1c <rb_radixtree_elem_add+0x94>
   18f08:	b	19030 <rb_radixtree_elem_add+0x1a8>
   18f0c:	ldr	r3, [r4]
   18f10:	cmn	r3, #1
   18f14:	beq	1903c <rb_radixtree_elem_add+0x1b4>
   18f18:	mov	r5, r4
   18f1c:	add	r2, r3, r3, lsr #31
   18f20:	cmp	r6, r2, asr #1
   18f24:	movle	r7, #0
   18f28:	ble	18f3c <rb_radixtree_elem_add+0xb4>
   18f2c:	ldrb	r7, [r8, r2, asr #1]
   18f30:	tst	r3, #1
   18f34:	asreq	r7, r7, #4
   18f38:	and	r7, r7, #15
   18f3c:	add	r2, r5, r7, lsl #2
   18f40:	ldr	r4, [r2, #4]
   18f44:	cmp	r4, #0
   18f48:	bne	18f0c <rb_radixtree_elem_add+0x84>
   18f4c:	cmn	r3, #1
   18f50:	mov	r4, r5
   18f54:	beq	19028 <rb_radixtree_elem_add+0x1a0>
   18f58:	ldr	r3, [r4, #4]
   18f5c:	cmp	r3, #0
   18f60:	bne	19218 <rb_radixtree_elem_add+0x390>
   18f64:	ldr	r3, [r4, #8]
   18f68:	cmp	r3, #0
   18f6c:	bne	19018 <rb_radixtree_elem_add+0x190>
   18f70:	ldr	r3, [r4, #12]
   18f74:	cmp	r3, #0
   18f78:	bne	19018 <rb_radixtree_elem_add+0x190>
   18f7c:	ldr	r3, [r4, #16]
   18f80:	cmp	r3, #0
   18f84:	bne	19018 <rb_radixtree_elem_add+0x190>
   18f88:	ldr	r3, [r4, #20]
   18f8c:	cmp	r3, #0
   18f90:	bne	19018 <rb_radixtree_elem_add+0x190>
   18f94:	ldr	r3, [r4, #24]
   18f98:	cmp	r3, #0
   18f9c:	bne	19018 <rb_radixtree_elem_add+0x190>
   18fa0:	ldr	r3, [r4, #28]
   18fa4:	cmp	r3, #0
   18fa8:	bne	19018 <rb_radixtree_elem_add+0x190>
   18fac:	ldr	r3, [r4, #32]
   18fb0:	cmp	r3, #0
   18fb4:	bne	19018 <rb_radixtree_elem_add+0x190>
   18fb8:	ldr	r3, [r4, #36]	; 0x24
   18fbc:	cmp	r3, #0
   18fc0:	bne	19018 <rb_radixtree_elem_add+0x190>
   18fc4:	ldr	r3, [r4, #40]	; 0x28
   18fc8:	cmp	r3, #0
   18fcc:	bne	19018 <rb_radixtree_elem_add+0x190>
   18fd0:	ldr	r3, [r4, #44]	; 0x2c
   18fd4:	cmp	r3, #0
   18fd8:	bne	19018 <rb_radixtree_elem_add+0x190>
   18fdc:	ldr	r3, [r4, #48]	; 0x30
   18fe0:	cmp	r3, #0
   18fe4:	bne	19018 <rb_radixtree_elem_add+0x190>
   18fe8:	ldr	r3, [r4, #52]	; 0x34
   18fec:	cmp	r3, #0
   18ff0:	bne	19018 <rb_radixtree_elem_add+0x190>
   18ff4:	ldr	r3, [r4, #56]	; 0x38
   18ff8:	cmp	r3, #0
   18ffc:	bne	19018 <rb_radixtree_elem_add+0x190>
   19000:	ldr	r3, [r4, #60]	; 0x3c
   19004:	cmp	r3, #0
   19008:	bne	19018 <rb_radixtree_elem_add+0x190>
   1900c:	ldr	r3, [r4, #64]	; 0x40
   19010:	cmp	r3, #0
   19014:	beq	18f64 <rb_radixtree_elem_add+0xdc>
   19018:	mov	r4, r3
   1901c:	ldr	r3, [r3]
   19020:	cmn	r3, #1
   19024:	bne	18f58 <rb_radixtree_elem_add+0xd0>
   19028:	ldr	r3, [r4, #8]
   1902c:	b	1905c <rb_radixtree_elem_add+0x1d4>
   19030:	mov	r4, r5
   19034:	mov	r7, #18
   19038:	mov	r5, #0
   1903c:	ldr	r3, [r4, #8]
   19040:	mov	r1, r8
   19044:	mov	r0, r3
   19048:	str	r3, [sp]
   1904c:	bl	4cb0 <strcmp@plt>
   19050:	subs	r6, r0, #0
   19054:	ldr	r3, [sp]
   19058:	beq	192e8 <rb_radixtree_elem_add+0x460>
   1905c:	ldrb	r2, [r8]
   19060:	mov	r6, #0
   19064:	ldrb	r0, [r3]
   19068:	asr	r1, r2, #4
   1906c:	cmp	r1, r0, lsr #4
   19070:	movne	r3, #4
   19074:	movne	sl, r8
   19078:	movne	r9, r6
   1907c:	strne	r3, [sp]
   19080:	bne	190b4 <rb_radixtree_elem_add+0x22c>
   19084:	add	r6, r6, #1
   19088:	asr	r9, r6, #1
   1908c:	tst	r6, #1
   19090:	ldrb	r2, [r8, r6, asr #1]
   19094:	add	sl, r8, r9
   19098:	beq	191fc <rb_radixtree_elem_add+0x374>
   1909c:	ldrb	r1, [r3, r6, asr #1]
   190a0:	eor	r1, r1, r2
   190a4:	tst	r1, #15
   190a8:	beq	19084 <rb_radixtree_elem_add+0x1fc>
   190ac:	mov	r3, #0
   190b0:	str	r3, [sp]
   190b4:	cmp	r5, #0
   190b8:	bne	190d0 <rb_radixtree_elem_add+0x248>
   190bc:	b	190e4 <rb_radixtree_elem_add+0x25c>
   190c0:	ldrb	r7, [r5, #72]	; 0x48
   190c4:	ldr	r5, [r5, #68]	; 0x44
   190c8:	cmp	r5, #0
   190cc:	beq	190e4 <rb_radixtree_elem_add+0x25c>
   190d0:	ldr	r3, [r5]
   190d4:	cmp	r3, r6
   190d8:	bgt	190c0 <rb_radixtree_elem_add+0x238>
   190dc:	cmp	r6, r3
   190e0:	ble	1917c <rb_radixtree_elem_add+0x2f4>
   190e4:	mov	r1, #76	; 0x4c
   190e8:	mov	r0, #1
   190ec:	bl	45c0 <calloc@plt>
   190f0:	subs	r3, r0, #0
   190f4:	beq	1922c <rb_radixtree_elem_add+0x3a4>
   190f8:	mov	r2, #64	; 0x40
   190fc:	add	r0, r3, #4
   19100:	str	r6, [r3]
   19104:	mov	r1, #0
   19108:	str	r5, [r3, #68]	; 0x44
   1910c:	strb	r7, [r3, #72]	; 0x48
   19110:	str	r3, [sp, #12]
   19114:	bl	4608 <memset@plt>
   19118:	ldr	r2, [r4, #8]
   1911c:	cmp	r5, #0
   19120:	ldr	r3, [sp]
   19124:	ldrb	r2, [r2, r9]
   19128:	asr	r2, r2, r3
   1912c:	ldr	r3, [sp, #12]
   19130:	and	r2, r2, #15
   19134:	beq	19250 <rb_radixtree_elem_add+0x3c8>
   19138:	add	r5, r5, r7, lsl #2
   1913c:	add	r2, r3, r2, lsl #2
   19140:	ldr	r1, [r5, #4]
   19144:	ldr	r0, [r1]
   19148:	str	r1, [r2, #4]
   1914c:	ldr	r2, [r4, #8]
   19150:	cmn	r0, #1
   19154:	beq	19230 <rb_radixtree_elem_add+0x3a8>
   19158:	str	r3, [r1, #68]	; 0x44
   1915c:	ldrb	r2, [r2, r9]
   19160:	ldr	r0, [sp]
   19164:	asr	r2, r2, r0
   19168:	and	r2, r2, #15
   1916c:	strb	r2, [r1, #72]	; 0x48
   19170:	str	r3, [r5, #4]
   19174:	mov	r5, r3
   19178:	ldrb	r2, [sl]
   1917c:	mov	r1, #20
   19180:	mov	r0, #1
   19184:	ldr	r3, [sp]
   19188:	asr	r2, r2, r3
   1918c:	and	r4, r2, #15
   19190:	bl	45c0 <calloc@plt>
   19194:	cmp	r0, #0
   19198:	beq	1922c <rb_radixtree_elem_add+0x3a4>
   1919c:	add	r3, r5, r4, lsl #2
   191a0:	mvn	r1, #0
   191a4:	ldr	r2, [fp, #8]
   191a8:	str	r0, [r3, #4]
   191ac:	str	r1, [r0]
   191b0:	ldr	r0, [sp, #4]
   191b4:	add	r2, r2, #1
   191b8:	ldr	r1, [r3, #4]
   191bc:	str	r0, [r1, #4]
   191c0:	ldr	r1, [r3, #4]
   191c4:	str	r8, [r1, #8]
   191c8:	ldr	r1, [r3, #4]
   191cc:	str	r5, [r1, #12]
   191d0:	ldr	r1, [r3, #4]
   191d4:	strb	r4, [r1, #16]
   191d8:	ldr	r0, [r3, #4]
   191dc:	str	r2, [fp, #8]
   191e0:	add	sp, sp, #20
   191e4:	ldrd	r4, [sp]
   191e8:	ldrd	r6, [sp, #8]
   191ec:	ldrd	r8, [sp, #16]
   191f0:	ldrd	sl, [sp, #24]
   191f4:	add	sp, sp, #32
   191f8:	pop	{pc}		; (ldr pc, [sp], #4)
   191fc:	ldrb	r0, [r3, r6, asr #1]
   19200:	asr	r1, r2, #4
   19204:	cmp	r1, r0, lsr #4
   19208:	beq	19084 <rb_radixtree_elem_add+0x1fc>
   1920c:	mov	r3, #4
   19210:	str	r3, [sp]
   19214:	b	190b4 <rb_radixtree_elem_add+0x22c>
   19218:	ldr	r2, [r3]
   1921c:	mov	r4, r3
   19220:	cmn	r2, #1
   19224:	bne	18f58 <rb_radixtree_elem_add+0xd0>
   19228:	b	19028 <rb_radixtree_elem_add+0x1a0>
   1922c:	bl	495c <rb_outofmemory@plt>
   19230:	str	r3, [r1, #12]
   19234:	ldrb	r2, [r2, r9]
   19238:	ldr	r0, [sp]
   1923c:	ldr	r1, [r5, #4]
   19240:	asr	r2, r2, r0
   19244:	and	r2, r2, #15
   19248:	strb	r2, [r1, #16]
   1924c:	b	19170 <rb_radixtree_elem_add+0x2e8>
   19250:	ldr	r0, [sp, #8]
   19254:	add	r2, r3, r2, lsl #2
   19258:	ldr	r1, [r0]
   1925c:	str	r0, [r2, #4]
   19260:	cmn	r1, #1
   19264:	beq	192f8 <rb_radixtree_elem_add+0x470>
   19268:	ldr	r2, [r4, #8]
   1926c:	mov	r1, r0
   19270:	str	r3, [r1, #68]	; 0x44
   19274:	ldr	r0, [sp]
   19278:	ldrb	r2, [r2, r9]
   1927c:	asr	r2, r2, r0
   19280:	and	r2, r2, #15
   19284:	strb	r2, [r1, #72]	; 0x48
   19288:	ldrb	r2, [sl]
   1928c:	mov	r5, r3
   19290:	str	r3, [fp, #4]
   19294:	b	1917c <rb_radixtree_elem_add+0x2f4>
   19298:	mov	r1, #20
   1929c:	mov	r0, #1
   192a0:	bl	45c0 <calloc@plt>
   192a4:	subs	r3, r0, #0
   192a8:	beq	1922c <rb_radixtree_elem_add+0x3a4>
   192ac:	mvn	r0, #0
   192b0:	ldr	r2, [fp, #8]
   192b4:	mov	r1, #18
   192b8:	str	r3, [fp, #4]
   192bc:	str	r0, [r3]
   192c0:	ldr	r0, [sp, #4]
   192c4:	ldr	ip, [sp, #8]
   192c8:	add	r2, r2, #1
   192cc:	str	r2, [fp, #8]
   192d0:	str	r0, [r3, #4]
   192d4:	mov	r0, r3
   192d8:	str	r8, [r3, #8]
   192dc:	str	ip, [r3, #12]
   192e0:	strb	r1, [r3, #16]
   192e4:	b	191e0 <rb_radixtree_elem_add+0x358>
   192e8:	mov	r0, r8
   192ec:	bl	46d4 <free@plt>
   192f0:	mov	r0, r6
   192f4:	b	191e0 <rb_radixtree_elem_add+0x358>
   192f8:	ldr	r2, [r4, #8]
   192fc:	mov	r1, r0
   19300:	str	r3, [r1, #12]
   19304:	ldr	r0, [sp]
   19308:	ldrb	r2, [r2, r9]
   1930c:	asr	r2, r2, r0
   19310:	and	r2, r2, #15
   19314:	strb	r2, [r1, #16]
   19318:	b	19288 <rb_radixtree_elem_add+0x400>

0001931c <rb_radixtree_add>:
   1931c:	str	r4, [sp, #-8]!
   19320:	str	lr, [sp, #4]
   19324:	bl	46f8 <rb_radixtree_elem_add@plt>
   19328:	adds	r0, r0, #0
   1932c:	ldr	r4, [sp]
   19330:	add	sp, sp, #4
   19334:	movne	r0, #1
   19338:	pop	{pc}		; (ldr pc, [sp], #4)

0001933c <rb_radixtree_elem_delete>:
   1933c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19340:	mov	r5, r0
   19344:	ldr	r0, [r1, #8]
   19348:	ldr	r4, [r1, #12]
   1934c:	strd	r6, [sp, #8]
   19350:	mov	r6, r1
   19354:	ldrb	r7, [r1, #16]
   19358:	cmp	r0, #0
   1935c:	str	r8, [sp, #16]
   19360:	str	lr, [sp, #20]
   19364:	beq	1936c <rb_radixtree_elem_delete+0x30>
   19368:	bl	46d4 <free@plt>
   1936c:	mov	r0, r6
   19370:	bl	46d4 <free@plt>
   19374:	cmp	r4, #0
   19378:	streq	r4, [r5, #4]
   1937c:	beq	19428 <rb_radixtree_elem_delete+0xec>
   19380:	add	r7, r4, r7, lsl #2
   19384:	mov	r2, #0
   19388:	mvn	r0, #0
   1938c:	mov	r3, r2
   19390:	str	r2, [r7, #4]
   19394:	b	193a4 <rb_radixtree_elem_delete+0x68>
   19398:	cmp	r2, #16
   1939c:	mov	r3, r2
   193a0:	beq	193e0 <rb_radixtree_elem_delete+0xa4>
   193a4:	add	r1, r4, r3, lsl #2
   193a8:	add	r2, r3, #1
   193ac:	ldr	r1, [r1, #4]
   193b0:	cmp	r1, #0
   193b4:	beq	19398 <rb_radixtree_elem_delete+0x5c>
   193b8:	cmn	r0, #1
   193bc:	mov	r0, r3
   193c0:	beq	19398 <rb_radixtree_elem_delete+0x5c>
   193c4:	cmp	r2, #16
   193c8:	mvn	r0, #1
   193cc:	beq	19428 <rb_radixtree_elem_delete+0xec>
   193d0:	add	r2, r3, #2
   193d4:	cmp	r2, #16
   193d8:	mov	r3, r2
   193dc:	bne	193a4 <rb_radixtree_elem_delete+0x68>
   193e0:	cmp	r0, #0
   193e4:	blt	19428 <rb_radixtree_elem_delete+0xec>
   193e8:	ldr	r2, [r4, #68]	; 0x44
   193ec:	add	r0, r4, r0, lsl #2
   193f0:	ldrb	r1, [r4, #72]	; 0x48
   193f4:	ldr	r3, [r0, #4]
   193f8:	cmp	r2, #0
   193fc:	addne	r0, r2, r1, lsl #2
   19400:	streq	r3, [r5, #4]
   19404:	strne	r3, [r0, #4]
   19408:	ldr	r0, [r3]
   1940c:	cmn	r0, #1
   19410:	mov	r0, r4
   19414:	streq	r2, [r3, #12]
   19418:	strbeq	r1, [r3, #16]
   1941c:	strne	r2, [r3, #68]	; 0x44
   19420:	strbne	r1, [r3, #72]	; 0x48
   19424:	bl	46d4 <free@plt>
   19428:	ldr	r3, [r5, #8]
   1942c:	ldrd	r6, [sp, #8]
   19430:	ldr	r8, [sp, #16]
   19434:	sub	r3, r3, #1
   19438:	cmp	r3, #0
   1943c:	str	r3, [r5, #8]
   19440:	streq	r3, [r5, #4]
   19444:	ldrd	r4, [sp]
   19448:	add	sp, sp, #20
   1944c:	pop	{pc}		; (ldr pc, [sp], #4)

00019450 <rb_radixtree_delete>:
   19450:	mov	r2, #0
   19454:	str	r4, [sp, #-8]!
   19458:	mov	r4, r0
   1945c:	str	lr, [sp, #4]
   19460:	bl	4b48 <rb_radixtree_elem_find@plt>
   19464:	subs	r3, r0, #0
   19468:	moveq	r4, r3
   1946c:	beq	19480 <rb_radixtree_delete+0x30>
   19470:	mov	r0, r4
   19474:	mov	r1, r3
   19478:	ldr	r4, [r3, #4]
   1947c:	bl	4380 <rb_radixtree_elem_delete@plt>
   19480:	mov	r0, r4
   19484:	ldr	r4, [sp]
   19488:	add	sp, sp, #4
   1948c:	pop	{pc}		; (ldr pc, [sp], #4)

00019490 <rb_radixtree_destroy>:
   19490:	strd	r4, [sp, #-28]!	; 0xffffffe4
   19494:	mov	r4, r0
   19498:	strd	r6, [sp, #8]
   1949c:	mov	r7, r1
   194a0:	strd	r8, [sp, #16]
   194a4:	mov	r8, r2
   194a8:	ldr	r9, [pc, #276]	; 195c4 <rb_radixtree_destroy+0x134>
   194ac:	str	lr, [sp, #24]
   194b0:	sub	sp, sp, #44	; 0x2c
   194b4:	mov	r6, sp
   194b8:	mov	r1, r6
   194bc:	bl	43e0 <rb_radixtree_foreach_start@plt>
   194c0:	cmp	r7, #0
   194c4:	add	r9, pc, r9
   194c8:	bne	194f8 <rb_radixtree_destroy+0x68>
   194cc:	b	1959c <rb_radixtree_destroy+0x10c>
   194d0:	ldr	r5, [sp, #8]
   194d4:	ldr	r1, [r5, #4]
   194d8:	ldr	r0, [r5, #8]
   194dc:	blx	r7
   194e0:	mov	r0, r4
   194e4:	ldr	r1, [r5, #8]
   194e8:	bl	4c98 <rb_radixtree_delete@plt>
   194ec:	mov	r1, r6
   194f0:	mov	r0, r4
   194f4:	bl	441c <rb_radixtree_foreach_next@plt>
   194f8:	mov	r1, r6
   194fc:	mov	r0, r4
   19500:	bl	4788 <rb_radixtree_foreach_cur@plt>
   19504:	cmp	r0, #0
   19508:	mov	r2, r8
   1950c:	bne	194d0 <rb_radixtree_destroy+0x40>
   19510:	ldr	r1, [pc, #176]	; 195c8 <rb_radixtree_destroy+0x138>
   19514:	ldr	r2, [r4, #24]
   19518:	ldr	r3, [r4, #20]
   1951c:	cmp	r2, #0
   19520:	beq	195b8 <rb_radixtree_destroy+0x128>
   19524:	str	r3, [r2, #4]
   19528:	ldr	r1, [r9, r1]
   1952c:	ldr	r3, [r4, #20]
   19530:	cmp	r3, #0
   19534:	ldr	r0, [r4, #12]
   19538:	strne	r2, [r3, #8]
   1953c:	ldr	r3, [r1, #8]
   19540:	streq	r2, [r1]
   19544:	mov	r2, #0
   19548:	cmp	r0, r2
   1954c:	str	r2, [r4, #20]
   19550:	str	r2, [r4, #24]
   19554:	sub	r3, r3, #1
   19558:	str	r3, [r1, #8]
   1955c:	beq	19564 <rb_radixtree_destroy+0xd4>
   19560:	bl	46d4 <free@plt>
   19564:	mov	r0, r4
   19568:	add	sp, sp, #44	; 0x2c
   1956c:	ldrd	r4, [sp]
   19570:	ldrd	r6, [sp, #8]
   19574:	ldrd	r8, [sp, #16]
   19578:	ldr	lr, [sp, #24]
   1957c:	add	sp, sp, #28
   19580:	b	46d4 <free@plt>
   19584:	ldr	r3, [sp, #8]
   19588:	ldr	r1, [r3, #8]
   1958c:	bl	4c98 <rb_radixtree_delete@plt>
   19590:	mov	r1, r6
   19594:	mov	r0, r4
   19598:	bl	441c <rb_radixtree_foreach_next@plt>
   1959c:	mov	r1, r6
   195a0:	mov	r0, r4
   195a4:	bl	4788 <rb_radixtree_foreach_cur@plt>
   195a8:	cmp	r0, #0
   195ac:	mov	r0, r4
   195b0:	bne	19584 <rb_radixtree_destroy+0xf4>
   195b4:	b	19510 <rb_radixtree_destroy+0x80>
   195b8:	ldr	r1, [r9, r1]
   195bc:	str	r3, [r1, #4]
   195c0:	b	19530 <rb_radixtree_destroy+0xa0>
   195c4:	.word	0x00012b34
   195c8:	.word	0x000003f0

000195cc <rb_radixtree_retrieve>:
   195cc:	mov	r2, #0
   195d0:	str	r4, [sp, #-8]!
   195d4:	str	lr, [sp, #4]
   195d8:	bl	4b48 <rb_radixtree_elem_find@plt>
   195dc:	cmp	r0, #0
   195e0:	ldr	r4, [sp]
   195e4:	add	sp, sp, #4
   195e8:	ldrne	r0, [r0, #4]
   195ec:	pop	{pc}		; (ldr pc, [sp], #4)

000195f0 <rb_radixtree_elem_get_key>:
   195f0:	ldr	r0, [r0, #8]
   195f4:	bx	lr

000195f8 <rb_radixtree_elem_set_data>:
   195f8:	str	r1, [r0, #4]
   195fc:	bx	lr

00019600 <rb_radixtree_elem_get_data>:
   19600:	ldr	r0, [r0, #4]
   19604:	bx	lr

00019608 <rb_radixtree_size>:
   19608:	ldr	r0, [r0, #8]
   1960c:	bx	lr

00019610 <rb_radixtree_stats>:
   19610:	strd	r4, [sp, #-32]!	; 0xffffffe0
   19614:	mov	r5, r0
   19618:	mov	r0, #0
   1961c:	ldr	ip, [r5, #8]
   19620:	strd	r6, [sp, #8]
   19624:	mov	r6, r1
   19628:	mov	r7, r2
   1962c:	strd	r8, [sp, #16]
   19630:	str	sl, [sp, #24]
   19634:	str	lr, [sp, #28]
   19638:	sub	sp, sp, #288	; 0x120
   1963c:	cmp	ip, r0
   19640:	str	r0, [sp, #28]
   19644:	beq	196d4 <rb_radixtree_stats+0xc4>
   19648:	ldr	r4, [r5, #4]
   1964c:	ldr	r3, [r4]
   19650:	cmn	r3, #1
   19654:	beq	1973c <rb_radixtree_stats+0x12c>
   19658:	mov	r8, r0
   1965c:	add	sl, r4, #64	; 0x40
   19660:	add	r9, sp, #28
   19664:	ldr	r3, [r4, #4]!
   19668:	mov	r2, r9
   1966c:	mov	r1, #1
   19670:	subs	r0, r3, #0
   19674:	beq	19680 <rb_radixtree_stats+0x70>
   19678:	bl	1831c <stats_recurse>
   1967c:	add	r8, r8, r0
   19680:	cmp	sl, r4
   19684:	bne	19664 <rb_radixtree_stats+0x54>
   19688:	ldr	ip, [r5, #8]
   1968c:	ldr	r3, [sp, #28]
   19690:	udiv	r1, r8, ip
   19694:	ldr	r2, [pc, #176]	; 1974c <rb_radixtree_stats+0x13c>
   19698:	add	r4, sp, #32
   1969c:	mov	r0, r4
   196a0:	str	ip, [sp, #4]
   196a4:	str	r3, [sp, #16]
   196a8:	str	r8, [sp, #8]
   196ac:	str	r1, [sp, #12]
   196b0:	mov	r1, #256	; 0x100
   196b4:	add	r2, pc, r2
   196b8:	mov	r3, r2
   196bc:	ldr	r2, [pc, #140]	; 19750 <rb_radixtree_stats+0x140>
   196c0:	str	r3, [sp]
   196c4:	ldr	r3, [r5, #12]
   196c8:	add	r2, pc, r2
   196cc:	bl	4b84 <snprintf@plt>
   196d0:	b	19714 <rb_radixtree_stats+0x104>
   196d4:	ldr	r2, [pc, #120]	; 19754 <rb_radixtree_stats+0x144>
   196d8:	add	r4, sp, #32
   196dc:	mov	r1, #256	; 0x100
   196e0:	mov	r0, r4
   196e4:	ldr	ip, [pc, #108]	; 19758 <rb_radixtree_stats+0x148>
   196e8:	ldr	r3, [r5, #12]
   196ec:	add	r2, pc, r2
   196f0:	str	r2, [sp, #4]
   196f4:	add	ip, pc, ip
   196f8:	str	r2, [sp, #8]
   196fc:	str	r2, [sp, #12]
   19700:	str	r2, [sp, #16]
   19704:	ldr	r2, [pc, #80]	; 1975c <rb_radixtree_stats+0x14c>
   19708:	str	ip, [sp]
   1970c:	add	r2, pc, r2
   19710:	bl	4b84 <snprintf@plt>
   19714:	mov	r1, r7
   19718:	mov	r0, r4
   1971c:	blx	r6
   19720:	add	sp, sp, #288	; 0x120
   19724:	ldrd	r4, [sp]
   19728:	ldrd	r6, [sp, #8]
   1972c:	ldrd	r8, [sp, #16]
   19730:	ldr	sl, [sp, #24]
   19734:	add	sp, sp, #28
   19738:	pop	{pc}		; (ldr pc, [sp], #4)
   1973c:	mov	r3, r0
   19740:	mov	r1, r0
   19744:	mov	r8, r0
   19748:	b	19694 <rb_radixtree_stats+0x84>
   1974c:	.word	0x00001de4
   19750:	.word	0x00001d80
   19754:	.word	0x00000cf0
   19758:	.word	0x00001da4
   1975c:	.word	0x00001d68

00019760 <rb_radixtree_stats_walk>:
   19760:	ldr	r3, [pc, #84]	; 197bc <rb_radixtree_stats_walk+0x5c>
   19764:	strd	r4, [sp, #-16]!
   19768:	ldr	r2, [pc, #80]	; 197c0 <rb_radixtree_stats_walk+0x60>
   1976c:	str	r6, [sp, #8]
   19770:	str	lr, [sp, #12]
   19774:	add	r3, pc, r3
   19778:	ldr	r3, [r3, r2]
   1977c:	ldr	r4, [r3]
   19780:	cmp	r4, #0
   19784:	beq	197ac <rb_radixtree_stats_walk+0x4c>
   19788:	mov	r6, r0
   1978c:	mov	r5, r1
   19790:	mov	r2, r5
   19794:	mov	r1, r6
   19798:	ldr	r0, [r4]
   1979c:	bl	4620 <rb_radixtree_stats@plt>
   197a0:	ldr	r4, [r4, #8]
   197a4:	cmp	r4, #0
   197a8:	bne	19790 <rb_radixtree_stats_walk+0x30>
   197ac:	ldrd	r4, [sp]
   197b0:	ldr	r6, [sp, #8]
   197b4:	add	sp, sp, #12
   197b8:	pop	{pc}		; (ldr pc, [sp], #4)
   197bc:	.word	0x00012884
   197c0:	.word	0x000003f0

Disassembly of section .fini:

000197c4 <_fini>:
   197c4:	push	{r3, lr}
   197c8:	pop	{r3, pc}
