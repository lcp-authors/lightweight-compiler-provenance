
../repos/coreutils/src/getlimits:     file format elf32-littlearm


Disassembly of section .init:

00010b9c <.init>:
   10b9c:	push	{r3, lr}
   10ba0:	bl	10e3c <__snprintf_chk@plt+0x4c>
   10ba4:	pop	{r3, pc}

Disassembly of section .plt:

00010ba8 <calloc@plt-0x14>:
   10ba8:	push	{lr}		; (str lr, [sp, #-4]!)
   10bac:	ldr	lr, [pc, #4]	; 10bb8 <calloc@plt-0x4>
   10bb0:	add	lr, pc, lr
   10bb4:	ldr	pc, [lr, #8]!
   10bb8:	andeq	r6, r1, r8, asr #8

00010bbc <calloc@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #90112	; 0x16000
   10bc4:	ldr	pc, [ip, #1096]!	; 0x448

00010bc8 <fputs_unlocked@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #90112	; 0x16000
   10bd0:	ldr	pc, [ip, #1088]!	; 0x440

00010bd4 <strcmp@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #90112	; 0x16000
   10bdc:	ldr	pc, [ip, #1080]!	; 0x438

00010be0 <fflush@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #90112	; 0x16000
   10be8:	ldr	pc, [ip, #1072]!	; 0x430

00010bec <free@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #90112	; 0x16000
   10bf4:	ldr	pc, [ip, #1064]!	; 0x428

00010bf8 <_exit@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #90112	; 0x16000
   10c00:	ldr	pc, [ip, #1056]!	; 0x420

00010c04 <memcpy@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #90112	; 0x16000
   10c0c:	ldr	pc, [ip, #1048]!	; 0x418

00010c10 <mbsinit@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #90112	; 0x16000
   10c18:	ldr	pc, [ip, #1040]!	; 0x410

00010c1c <strtold@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #90112	; 0x16000
   10c24:	ldr	pc, [ip, #1032]!	; 0x408

00010c28 <memcmp@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #90112	; 0x16000
   10c30:	ldr	pc, [ip, #1024]!	; 0x400

00010c34 <fputc_unlocked@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #90112	; 0x16000
   10c3c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c40 <dcgettext@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #90112	; 0x16000
   10c48:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c4c <realloc@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #90112	; 0x16000
   10c54:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c58 <textdomain@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #90112	; 0x16000
   10c60:	ldr	pc, [ip, #992]!	; 0x3e0

00010c64 <iswprint@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #90112	; 0x16000
   10c6c:	ldr	pc, [ip, #984]!	; 0x3d8

00010c70 <fwrite@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #90112	; 0x16000
   10c78:	ldr	pc, [ip, #976]!	; 0x3d0

00010c7c <lseek64@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #90112	; 0x16000
   10c84:	ldr	pc, [ip, #968]!	; 0x3c8

00010c88 <__ctype_get_mb_cur_max@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #90112	; 0x16000
   10c90:	ldr	pc, [ip, #960]!	; 0x3c0

00010c94 <__fpending@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #90112	; 0x16000
   10c9c:	ldr	pc, [ip, #952]!	; 0x3b8

00010ca0 <mbrtowc@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #90112	; 0x16000
   10ca8:	ldr	pc, [ip, #944]!	; 0x3b0

00010cac <error@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #90112	; 0x16000
   10cb4:	ldr	pc, [ip, #936]!	; 0x3a8

00010cb8 <strtof@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #90112	; 0x16000
   10cc0:	ldr	pc, [ip, #928]!	; 0x3a0

00010cc4 <puts@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #90112	; 0x16000
   10ccc:	ldr	pc, [ip, #920]!	; 0x398

00010cd0 <malloc@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #90112	; 0x16000
   10cd8:	ldr	pc, [ip, #912]!	; 0x390

00010cdc <__libc_start_main@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #90112	; 0x16000
   10ce4:	ldr	pc, [ip, #904]!	; 0x388

00010ce8 <__freading@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #90112	; 0x16000
   10cf0:	ldr	pc, [ip, #896]!	; 0x380

00010cf4 <__gmon_start__@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #90112	; 0x16000
   10cfc:	ldr	pc, [ip, #888]!	; 0x378

00010d00 <getopt_long@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #90112	; 0x16000
   10d08:	ldr	pc, [ip, #880]!	; 0x370

00010d0c <__ctype_b_loc@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #90112	; 0x16000
   10d14:	ldr	pc, [ip, #872]!	; 0x368

00010d18 <exit@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #90112	; 0x16000
   10d20:	ldr	pc, [ip, #864]!	; 0x360

00010d24 <strlen@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #90112	; 0x16000
   10d2c:	ldr	pc, [ip, #856]!	; 0x358

00010d30 <__errno_location@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #90112	; 0x16000
   10d38:	ldr	pc, [ip, #848]!	; 0x350

00010d3c <__sprintf_chk@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #90112	; 0x16000
   10d44:	ldr	pc, [ip, #840]!	; 0x348

00010d48 <__cxa_atexit@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #90112	; 0x16000
   10d50:	ldr	pc, [ip, #832]!	; 0x340

00010d54 <memset@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #90112	; 0x16000
   10d5c:	ldr	pc, [ip, #824]!	; 0x338

00010d60 <__printf_chk@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #90112	; 0x16000
   10d68:	ldr	pc, [ip, #816]!	; 0x330

00010d6c <strtod@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #90112	; 0x16000
   10d74:	ldr	pc, [ip, #808]!	; 0x328

00010d78 <fileno@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #90112	; 0x16000
   10d80:	ldr	pc, [ip, #800]!	; 0x320

00010d84 <__fprintf_chk@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #90112	; 0x16000
   10d8c:	ldr	pc, [ip, #792]!	; 0x318

00010d90 <fclose@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #90112	; 0x16000
   10d98:	ldr	pc, [ip, #784]!	; 0x310

00010d9c <fseeko64@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #90112	; 0x16000
   10da4:	ldr	pc, [ip, #776]!	; 0x308

00010da8 <setlocale@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #90112	; 0x16000
   10db0:	ldr	pc, [ip, #768]!	; 0x300

00010db4 <strrchr@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #90112	; 0x16000
   10dbc:	ldr	pc, [ip, #760]!	; 0x2f8

00010dc0 <nl_langinfo@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #90112	; 0x16000
   10dc8:	ldr	pc, [ip, #752]!	; 0x2f0

00010dcc <bindtextdomain@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #90112	; 0x16000
   10dd4:	ldr	pc, [ip, #744]!	; 0x2e8

00010dd8 <strncmp@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #90112	; 0x16000
   10de0:	ldr	pc, [ip, #736]!	; 0x2e0

00010de4 <abort@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #90112	; 0x16000
   10dec:	ldr	pc, [ip, #728]!	; 0x2d8

00010df0 <__snprintf_chk@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #90112	; 0x16000
   10df8:	ldr	pc, [ip, #720]!	; 0x2d0

Disassembly of section .text:

00010e00 <.text>:
   10e00:	mov	fp, #0
   10e04:	mov	lr, #0
   10e08:	pop	{r1}		; (ldr r1, [sp], #4)
   10e0c:	mov	r2, sp
   10e10:	push	{r2}		; (str r2, [sp, #-4]!)
   10e14:	push	{r0}		; (str r0, [sp, #-4]!)
   10e18:	ldr	ip, [pc, #16]	; 10e30 <__snprintf_chk@plt+0x40>
   10e1c:	push	{ip}		; (str ip, [sp, #-4]!)
   10e20:	ldr	r0, [pc, #12]	; 10e34 <__snprintf_chk@plt+0x44>
   10e24:	ldr	r3, [pc, #12]	; 10e38 <__snprintf_chk@plt+0x48>
   10e28:	bl	10cdc <__libc_start_main@plt>
   10e2c:	bl	10de4 <abort@plt>
   10e30:	andeq	r5, r1, ip, ror #15
   10e34:	andeq	r1, r1, r4, lsr #6
   10e38:	andeq	r5, r1, ip, lsl #15
   10e3c:	ldr	r3, [pc, #20]	; 10e58 <__snprintf_chk@plt+0x68>
   10e40:	ldr	r2, [pc, #20]	; 10e5c <__snprintf_chk@plt+0x6c>
   10e44:	add	r3, pc, r3
   10e48:	ldr	r2, [r3, r2]
   10e4c:	cmp	r2, #0
   10e50:	bxeq	lr
   10e54:	b	10cf4 <__gmon_start__@plt>
   10e58:			; <UNDEFINED> instruction: 0x000161b4
   10e5c:	andeq	r0, r0, ip, asr #1
   10e60:	ldr	r0, [pc, #24]	; 10e80 <__snprintf_chk@plt+0x90>
   10e64:	ldr	r3, [pc, #24]	; 10e84 <__snprintf_chk@plt+0x94>
   10e68:	cmp	r3, r0
   10e6c:	bxeq	lr
   10e70:	ldr	r3, [pc, #16]	; 10e88 <__snprintf_chk@plt+0x98>
   10e74:	cmp	r3, #0
   10e78:	bxeq	lr
   10e7c:	bx	r3
   10e80:	andeq	r7, r2, ip, lsl r1
   10e84:	andeq	r7, r2, ip, lsl r1
   10e88:	andeq	r0, r0, r0
   10e8c:	ldr	r0, [pc, #36]	; 10eb8 <__snprintf_chk@plt+0xc8>
   10e90:	ldr	r1, [pc, #36]	; 10ebc <__snprintf_chk@plt+0xcc>
   10e94:	sub	r1, r1, r0
   10e98:	asr	r1, r1, #2
   10e9c:	add	r1, r1, r1, lsr #31
   10ea0:	asrs	r1, r1, #1
   10ea4:	bxeq	lr
   10ea8:	ldr	r3, [pc, #16]	; 10ec0 <__snprintf_chk@plt+0xd0>
   10eac:	cmp	r3, #0
   10eb0:	bxeq	lr
   10eb4:	bx	r3
   10eb8:	andeq	r7, r2, ip, lsl r1
   10ebc:	andeq	r7, r2, ip, lsl r1
   10ec0:	andeq	r0, r0, r0
   10ec4:	push	{r4, lr}
   10ec8:	ldr	r4, [pc, #24]	; 10ee8 <__snprintf_chk@plt+0xf8>
   10ecc:	ldrb	r3, [r4]
   10ed0:	cmp	r3, #0
   10ed4:	popne	{r4, pc}
   10ed8:	bl	10e60 <__snprintf_chk@plt+0x70>
   10edc:	mov	r3, #1
   10ee0:	strb	r3, [r4]
   10ee4:	pop	{r4, pc}
   10ee8:	andeq	r7, r2, ip, lsr r1
   10eec:	b	10e8c <__snprintf_chk@plt+0x9c>
   10ef0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ef4:	sub	sp, sp, #60	; 0x3c
   10ef8:	subs	r4, r0, #0
   10efc:	beq	10f44 <__snprintf_chk@plt+0x154>
   10f00:	movw	r3, #28976	; 0x7130
   10f04:	movt	r3, #2
   10f08:	ldr	r5, [r3]
   10f0c:	mov	r2, #5
   10f10:	movw	r1, #22616	; 0x5858
   10f14:	movt	r1, #1
   10f18:	mov	r0, #0
   10f1c:	bl	10c40 <dcgettext@plt>
   10f20:	movw	r3, #29000	; 0x7148
   10f24:	movt	r3, #2
   10f28:	ldr	r3, [r3]
   10f2c:	mov	r2, r0
   10f30:	mov	r1, #1
   10f34:	mov	r0, r5
   10f38:	bl	10d84 <__fprintf_chk@plt>
   10f3c:	mov	r0, r4
   10f40:	bl	10d18 <exit@plt>
   10f44:	mov	r2, #5
   10f48:	movw	r1, #22656	; 0x5880
   10f4c:	movt	r1, #1
   10f50:	mov	r0, #0
   10f54:	bl	10c40 <dcgettext@plt>
   10f58:	movw	r3, #29000	; 0x7148
   10f5c:	movt	r3, #2
   10f60:	ldr	r2, [r3]
   10f64:	mov	r1, r0
   10f68:	mov	r0, #1
   10f6c:	bl	10d60 <__printf_chk@plt>
   10f70:	mov	r2, #5
   10f74:	movw	r1, #22668	; 0x588c
   10f78:	movt	r1, #1
   10f7c:	mov	r0, #0
   10f80:	bl	10c40 <dcgettext@plt>
   10f84:	movw	r5, #28980	; 0x7134
   10f88:	movt	r5, #2
   10f8c:	ldr	r1, [r5]
   10f90:	bl	10bc8 <fputs_unlocked@plt>
   10f94:	mov	r2, #5
   10f98:	movw	r1, #22744	; 0x58d8
   10f9c:	movt	r1, #1
   10fa0:	mov	r0, #0
   10fa4:	bl	10c40 <dcgettext@plt>
   10fa8:	ldr	r1, [r5]
   10fac:	bl	10bc8 <fputs_unlocked@plt>
   10fb0:	mov	r2, #5
   10fb4:	movw	r1, #22792	; 0x5908
   10fb8:	movt	r1, #1
   10fbc:	mov	r0, #0
   10fc0:	bl	10c40 <dcgettext@plt>
   10fc4:	ldr	r1, [r5]
   10fc8:	bl	10bc8 <fputs_unlocked@plt>
   10fcc:	movw	r0, #22548	; 0x5814
   10fd0:	movt	r0, #1
   10fd4:	ldr	r1, [r0]
   10fd8:	ldr	r3, [r0, #4]
   10fdc:	str	r1, [sp]
   10fe0:	str	r3, [sp, #4]
   10fe4:	ldrd	r2, [r0, #8]
   10fe8:	strd	r2, [sp, #8]
   10fec:	ldrd	r2, [r0, #16]
   10ff0:	strd	r2, [sp, #16]
   10ff4:	ldrd	r2, [r0, #24]
   10ff8:	strd	r2, [sp, #24]
   10ffc:	ldrd	r2, [r0, #32]
   11000:	strd	r2, [sp, #32]
   11004:	ldrd	r2, [r0, #40]	; 0x28
   11008:	strd	r2, [sp, #40]	; 0x28
   1100c:	ldrd	r2, [r0, #48]	; 0x30
   11010:	strd	r2, [sp, #48]	; 0x30
   11014:	cmp	r1, #0
   11018:	moveq	r5, sp
   1101c:	beq	11048 <__snprintf_chk@plt+0x258>
   11020:	mov	r5, sp
   11024:	movw	r6, #22604	; 0x584c
   11028:	movt	r6, #1
   1102c:	mov	r0, r6
   11030:	bl	10bd4 <strcmp@plt>
   11034:	cmp	r0, #0
   11038:	beq	11048 <__snprintf_chk@plt+0x258>
   1103c:	ldr	r1, [r5, #8]!
   11040:	cmp	r1, #0
   11044:	bne	1102c <__snprintf_chk@plt+0x23c>
   11048:	ldr	r5, [r5, #4]
   1104c:	cmp	r5, #0
   11050:	beq	111ac <__snprintf_chk@plt+0x3bc>
   11054:	mov	r2, #5
   11058:	movw	r1, #22848	; 0x5940
   1105c:	movt	r1, #1
   11060:	mov	r0, #0
   11064:	bl	10c40 <dcgettext@plt>
   11068:	movw	r3, #22872	; 0x5958
   1106c:	movt	r3, #1
   11070:	movw	r2, #22912	; 0x5980
   11074:	movt	r2, #1
   11078:	mov	r1, r0
   1107c:	mov	r0, #1
   11080:	bl	10d60 <__printf_chk@plt>
   11084:	mov	r1, #0
   11088:	mov	r0, #5
   1108c:	bl	10da8 <setlocale@plt>
   11090:	cmp	r0, #0
   11094:	beq	110b0 <__snprintf_chk@plt+0x2c0>
   11098:	mov	r2, #3
   1109c:	movw	r1, #22928	; 0x5990
   110a0:	movt	r1, #1
   110a4:	bl	10dd8 <strncmp@plt>
   110a8:	cmp	r0, #0
   110ac:	bne	1112c <__snprintf_chk@plt+0x33c>
   110b0:	mov	r2, #5
   110b4:	movw	r1, #23004	; 0x59dc
   110b8:	movt	r1, #1
   110bc:	mov	r0, #0
   110c0:	bl	10c40 <dcgettext@plt>
   110c4:	movw	r6, #22604	; 0x584c
   110c8:	movt	r6, #1
   110cc:	mov	r3, r6
   110d0:	movw	r2, #22872	; 0x5958
   110d4:	movt	r2, #1
   110d8:	mov	r1, r0
   110dc:	mov	r0, #1
   110e0:	bl	10d60 <__printf_chk@plt>
   110e4:	mov	r2, #5
   110e8:	movw	r1, #23032	; 0x59f8
   110ec:	movt	r1, #1
   110f0:	mov	r0, #0
   110f4:	bl	10c40 <dcgettext@plt>
   110f8:	mov	r1, r0
   110fc:	movw	r2, #24080	; 0x5e10
   11100:	movt	r2, #1
   11104:	movw	r3, #22740	; 0x58d4
   11108:	movt	r3, #1
   1110c:	cmp	r5, r6
   11110:	moveq	r3, r2
   11114:	mov	r2, r5
   11118:	mov	r0, #1
   1111c:	bl	10d60 <__printf_chk@plt>
   11120:	b	10f3c <__snprintf_chk@plt+0x14c>
   11124:	movw	r5, #22604	; 0x584c
   11128:	movt	r5, #1
   1112c:	mov	r2, #5
   11130:	movw	r1, #22932	; 0x5994
   11134:	movt	r1, #1
   11138:	mov	r0, #0
   1113c:	bl	10c40 <dcgettext@plt>
   11140:	movw	r3, #28980	; 0x7134
   11144:	movt	r3, #2
   11148:	ldr	r1, [r3]
   1114c:	bl	10bc8 <fputs_unlocked@plt>
   11150:	b	110b0 <__snprintf_chk@plt+0x2c0>
   11154:	mov	r2, #5
   11158:	movw	r1, #23004	; 0x59dc
   1115c:	movt	r1, #1
   11160:	mov	r0, #0
   11164:	bl	10c40 <dcgettext@plt>
   11168:	movw	r5, #22604	; 0x584c
   1116c:	movt	r5, #1
   11170:	mov	r3, r5
   11174:	movw	r2, #22872	; 0x5958
   11178:	movt	r2, #1
   1117c:	mov	r1, r0
   11180:	mov	r0, #1
   11184:	bl	10d60 <__printf_chk@plt>
   11188:	mov	r2, #5
   1118c:	movw	r1, #23032	; 0x59f8
   11190:	movt	r1, #1
   11194:	mov	r0, #0
   11198:	bl	10c40 <dcgettext@plt>
   1119c:	mov	r1, r0
   111a0:	movw	r3, #24080	; 0x5e10
   111a4:	movt	r3, #1
   111a8:	b	11114 <__snprintf_chk@plt+0x324>
   111ac:	mov	r2, #5
   111b0:	movw	r1, #22848	; 0x5940
   111b4:	movt	r1, #1
   111b8:	mov	r0, #0
   111bc:	bl	10c40 <dcgettext@plt>
   111c0:	movw	r3, #22872	; 0x5958
   111c4:	movt	r3, #1
   111c8:	movw	r2, #22912	; 0x5980
   111cc:	movt	r2, #1
   111d0:	mov	r1, r0
   111d4:	mov	r0, #1
   111d8:	bl	10d60 <__printf_chk@plt>
   111dc:	mov	r1, #0
   111e0:	mov	r0, #5
   111e4:	bl	10da8 <setlocale@plt>
   111e8:	cmp	r0, #0
   111ec:	beq	11154 <__snprintf_chk@plt+0x364>
   111f0:	mov	r2, #3
   111f4:	movw	r1, #22928	; 0x5990
   111f8:	movt	r1, #1
   111fc:	bl	10dd8 <strncmp@plt>
   11200:	cmp	r0, #0
   11204:	bne	11124 <__snprintf_chk@plt+0x334>
   11208:	mov	r2, #5
   1120c:	movw	r1, #23004	; 0x59dc
   11210:	movt	r1, #1
   11214:	mov	r0, #0
   11218:	bl	10c40 <dcgettext@plt>
   1121c:	movw	r5, #22604	; 0x584c
   11220:	movt	r5, #1
   11224:	mov	r3, r5
   11228:	movw	r2, #22872	; 0x5958
   1122c:	movt	r2, #1
   11230:	mov	r1, r0
   11234:	mov	r0, #1
   11238:	bl	10d60 <__printf_chk@plt>
   1123c:	mov	r2, #5
   11240:	movw	r1, #23032	; 0x59f8
   11244:	movt	r1, #1
   11248:	mov	r0, #0
   1124c:	bl	10c40 <dcgettext@plt>
   11250:	mov	r1, r0
   11254:	movw	r3, #24080	; 0x5e10
   11258:	movt	r3, #1
   1125c:	b	11114 <__snprintf_chk@plt+0x324>
   11260:	strd	r4, [sp, #-16]!
   11264:	str	r6, [sp, #8]
   11268:	str	lr, [sp, #12]
   1126c:	ldrb	r5, [r0, #1]
   11270:	cmp	r5, #45	; 0x2d
   11274:	movne	r4, #0
   11278:	moveq	r4, #1
   1127c:	add	r4, r4, #1
   11280:	add	r4, r0, r4
   11284:	mov	r0, r4
   11288:	bl	10d24 <strlen@plt>
   1128c:	add	r0, r4, r0
   11290:	mov	r3, #48	; 0x30
   11294:	strb	r3, [r4, #-1]
   11298:	sub	r3, r0, #1
   1129c:	ldrb	r2, [r0, #-1]
   112a0:	cmp	r2, #57	; 0x39
   112a4:	bne	112bc <__snprintf_chk@plt+0x4cc>
   112a8:	mov	r1, #48	; 0x30
   112ac:	strb	r1, [r3]
   112b0:	ldrb	r2, [r3, #-1]!
   112b4:	cmp	r2, #57	; 0x39
   112b8:	beq	112ac <__snprintf_chk@plt+0x4bc>
   112bc:	add	r2, r2, #1
   112c0:	strb	r2, [r3]
   112c4:	cmp	r4, r3
   112c8:	movcc	r0, r4
   112cc:	movcs	r0, r3
   112d0:	cmp	r5, #45	; 0x2d
   112d4:	beq	112e8 <__snprintf_chk@plt+0x4f8>
   112d8:	ldrd	r4, [sp]
   112dc:	ldr	r6, [sp, #8]
   112e0:	add	sp, sp, #12
   112e4:	pop	{pc}		; (ldr pc, [sp], #4)
   112e8:	mov	r3, #45	; 0x2d
   112ec:	strb	r3, [r0, #-1]
   112f0:	sub	r0, r0, #1
   112f4:	b	112d8 <__snprintf_chk@plt+0x4e8>
   112f8:	push	{lr}		; (str lr, [sp, #-4]!)
   112fc:	sub	sp, sp, #36	; 0x24
   11300:	mov	r3, #0
   11304:	mov	r2, #1
   11308:	mov	r1, #31
   1130c:	mov	r0, sp
   11310:	bl	11f60 <__snprintf_chk@plt+0x1170>
   11314:	mov	r0, sp
   11318:	bl	10cc4 <puts@plt>
   1131c:	add	sp, sp, #36	; 0x24
   11320:	pop	{pc}		; (ldr pc, [sp], #4)
   11324:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11328:	strd	r6, [sp, #8]
   1132c:	strd	r8, [sp, #16]
   11330:	strd	sl, [sp, #24]
   11334:	str	lr, [sp, #32]
   11338:	vpush	{d8-d9}
   1133c:	sub	sp, sp, #84	; 0x54
   11340:	mov	r6, r0
   11344:	mov	r5, r1
   11348:	ldr	r0, [r1]
   1134c:	bl	123f4 <__snprintf_chk@plt+0x1604>
   11350:	movw	r1, #22740	; 0x58d4
   11354:	movt	r1, #1
   11358:	mov	r0, #6
   1135c:	bl	10da8 <setlocale@plt>
   11360:	movw	r4, #22916	; 0x5984
   11364:	movt	r4, #1
   11368:	movw	r1, #23084	; 0x5a2c
   1136c:	movt	r1, #1
   11370:	mov	r0, r4
   11374:	bl	10dcc <bindtextdomain@plt>
   11378:	mov	r0, r4
   1137c:	bl	10c58 <textdomain@plt>
   11380:	movw	r0, #7400	; 0x1ce8
   11384:	movt	r0, #1
   11388:	bl	157f0 <__snprintf_chk@plt+0x4a00>
   1138c:	mov	r3, #0
   11390:	str	r3, [sp, #12]
   11394:	movw	r3, #23108	; 0x5a44
   11398:	movt	r3, #1
   1139c:	str	r3, [sp, #8]
   113a0:	movw	r3, #3824	; 0xef0
   113a4:	movt	r3, #1
   113a8:	str	r3, [sp, #4]
   113ac:	movw	r3, #23124	; 0x5a54
   113b0:	movt	r3, #1
   113b4:	str	r3, [sp]
   113b8:	movw	r3, #22912	; 0x5980
   113bc:	movt	r3, #1
   113c0:	movw	r2, #22604	; 0x584c
   113c4:	movt	r2, #1
   113c8:	mov	r1, r5
   113cc:	mov	r0, r6
   113d0:	bl	12238 <__snprintf_chk@plt+0x1448>
   113d4:	movw	r4, #23140	; 0x5a64
   113d8:	movt	r4, #1
   113dc:	mov	r6, #255	; 0xff
   113e0:	mov	r7, #0
   113e4:	strd	r6, [sp]
   113e8:	mov	r3, r4
   113ec:	mov	r2, #21
   113f0:	mov	r1, #1
   113f4:	add	r0, sp, #57	; 0x39
   113f8:	bl	10d3c <__sprintf_chk@plt>
   113fc:	add	r2, sp, #57	; 0x39
   11400:	movw	r1, #23148	; 0x5a6c
   11404:	movt	r1, #1
   11408:	mov	r0, #1
   1140c:	bl	10d60 <__printf_chk@plt>
   11410:	add	r0, sp, #56	; 0x38
   11414:	bl	11260 <__snprintf_chk@plt+0x470>
   11418:	mov	r2, r0
   1141c:	movw	r1, #23164	; 0x5a7c
   11420:	movt	r1, #1
   11424:	mov	r0, #1
   11428:	bl	10d60 <__printf_chk@plt>
   1142c:	mov	r2, #127	; 0x7f
   11430:	mov	r3, #0
   11434:	strd	r2, [sp]
   11438:	mov	r3, r4
   1143c:	mov	r2, #21
   11440:	mov	r1, #1
   11444:	add	r0, sp, #57	; 0x39
   11448:	bl	10d3c <__sprintf_chk@plt>
   1144c:	add	r2, sp, #57	; 0x39
   11450:	movw	r1, #23180	; 0x5a8c
   11454:	movt	r1, #1
   11458:	mov	r0, #1
   1145c:	bl	10d60 <__printf_chk@plt>
   11460:	add	r0, sp, #56	; 0x38
   11464:	bl	11260 <__snprintf_chk@plt+0x470>
   11468:	mov	r2, r0
   1146c:	movw	r1, #23196	; 0x5a9c
   11470:	movt	r1, #1
   11474:	mov	r0, #1
   11478:	bl	10d60 <__printf_chk@plt>
   1147c:	movw	r5, #23212	; 0x5aac
   11480:	movt	r5, #1
   11484:	mvn	r2, #127	; 0x7f
   11488:	mvn	r3, #0
   1148c:	strd	r2, [sp]
   11490:	mov	r3, r5
   11494:	mov	r2, #21
   11498:	mov	r1, #1
   1149c:	add	r0, sp, #57	; 0x39
   114a0:	bl	10d3c <__sprintf_chk@plt>
   114a4:	add	r2, sp, #57	; 0x39
   114a8:	movw	r1, #23220	; 0x5ab4
   114ac:	movt	r1, #1
   114b0:	mov	r0, #1
   114b4:	bl	10d60 <__printf_chk@plt>
   114b8:	add	r0, sp, #56	; 0x38
   114bc:	bl	11260 <__snprintf_chk@plt+0x470>
   114c0:	mov	r2, r0
   114c4:	movw	r1, #23236	; 0x5ac4
   114c8:	movt	r1, #1
   114cc:	mov	r0, #1
   114d0:	bl	10d60 <__printf_chk@plt>
   114d4:	strd	r6, [sp]
   114d8:	mov	r3, r4
   114dc:	mov	r2, #21
   114e0:	mov	r1, #1
   114e4:	add	r0, sp, #57	; 0x39
   114e8:	bl	10d3c <__sprintf_chk@plt>
   114ec:	add	r2, sp, #57	; 0x39
   114f0:	movw	r1, #23252	; 0x5ad4
   114f4:	movt	r1, #1
   114f8:	mov	r0, #1
   114fc:	bl	10d60 <__printf_chk@plt>
   11500:	add	r0, sp, #56	; 0x38
   11504:	bl	11260 <__snprintf_chk@plt+0x470>
   11508:	mov	r2, r0
   1150c:	movw	r1, #23268	; 0x5ae4
   11510:	movt	r1, #1
   11514:	mov	r0, #1
   11518:	bl	10d60 <__printf_chk@plt>
   1151c:	movw	r2, #32767	; 0x7fff
   11520:	mov	r3, #0
   11524:	strd	r2, [sp]
   11528:	mov	r3, r4
   1152c:	mov	r2, #21
   11530:	mov	r1, #1
   11534:	add	r0, sp, #57	; 0x39
   11538:	bl	10d3c <__sprintf_chk@plt>
   1153c:	add	r2, sp, #57	; 0x39
   11540:	movw	r1, #23284	; 0x5af4
   11544:	movt	r1, #1
   11548:	mov	r0, #1
   1154c:	bl	10d60 <__printf_chk@plt>
   11550:	add	r0, sp, #56	; 0x38
   11554:	bl	11260 <__snprintf_chk@plt+0x470>
   11558:	mov	r2, r0
   1155c:	movw	r1, #23300	; 0x5b04
   11560:	movt	r1, #1
   11564:	mov	r0, #1
   11568:	bl	10d60 <__printf_chk@plt>
   1156c:	mov	r2, #32768	; 0x8000
   11570:	movt	r2, #65535	; 0xffff
   11574:	mvn	r3, #0
   11578:	strd	r2, [sp]
   1157c:	mov	r3, r5
   11580:	mov	r2, #21
   11584:	mov	r1, #1
   11588:	add	r0, sp, #57	; 0x39
   1158c:	bl	10d3c <__sprintf_chk@plt>
   11590:	add	r2, sp, #57	; 0x39
   11594:	movw	r1, #23316	; 0x5b14
   11598:	movt	r1, #1
   1159c:	mov	r0, #1
   115a0:	bl	10d60 <__printf_chk@plt>
   115a4:	add	r0, sp, #56	; 0x38
   115a8:	bl	11260 <__snprintf_chk@plt+0x470>
   115ac:	mov	r2, r0
   115b0:	movw	r1, #23332	; 0x5b24
   115b4:	movt	r1, #1
   115b8:	mov	r0, #1
   115bc:	bl	10d60 <__printf_chk@plt>
   115c0:	mvn	r8, #-2147483648	; 0x80000000
   115c4:	mov	r9, #0
   115c8:	strd	r8, [sp]
   115cc:	mov	r3, r4
   115d0:	mov	r2, #21
   115d4:	mov	r1, #1
   115d8:	add	r0, sp, #57	; 0x39
   115dc:	bl	10d3c <__sprintf_chk@plt>
   115e0:	add	r2, sp, #57	; 0x39
   115e4:	movw	r1, #23348	; 0x5b34
   115e8:	movt	r1, #1
   115ec:	mov	r0, #1
   115f0:	bl	10d60 <__printf_chk@plt>
   115f4:	add	r0, sp, #56	; 0x38
   115f8:	bl	11260 <__snprintf_chk@plt+0x470>
   115fc:	mov	r2, r0
   11600:	movw	r1, #23360	; 0x5b40
   11604:	movt	r1, #1
   11608:	mov	r0, #1
   1160c:	bl	10d60 <__printf_chk@plt>
   11610:	mov	sl, #-2147483648	; 0x80000000
   11614:	mvn	fp, #0
   11618:	strd	sl, [sp]
   1161c:	mov	r3, r5
   11620:	mov	r2, #21
   11624:	mov	r1, #1
   11628:	add	r0, sp, #57	; 0x39
   1162c:	bl	10d3c <__sprintf_chk@plt>
   11630:	add	r2, sp, #57	; 0x39
   11634:	movw	r1, #23376	; 0x5b50
   11638:	movt	r1, #1
   1163c:	mov	r0, #1
   11640:	bl	10d60 <__printf_chk@plt>
   11644:	add	r0, sp, #56	; 0x38
   11648:	bl	11260 <__snprintf_chk@plt+0x470>
   1164c:	mov	r2, r0
   11650:	movw	r1, #23388	; 0x5b5c
   11654:	movt	r1, #1
   11658:	mov	r0, #1
   1165c:	bl	10d60 <__printf_chk@plt>
   11660:	mvn	r6, #0
   11664:	mov	r7, #0
   11668:	strd	r6, [sp]
   1166c:	mov	r3, r4
   11670:	mov	r2, #21
   11674:	mov	r1, #1
   11678:	add	r0, sp, #57	; 0x39
   1167c:	bl	10d3c <__sprintf_chk@plt>
   11680:	add	r2, sp, #57	; 0x39
   11684:	movw	r1, #23404	; 0x5b6c
   11688:	movt	r1, #1
   1168c:	mov	r0, #1
   11690:	bl	10d60 <__printf_chk@plt>
   11694:	add	r0, sp, #56	; 0x38
   11698:	bl	11260 <__snprintf_chk@plt+0x470>
   1169c:	mov	r2, r0
   116a0:	movw	r1, #23420	; 0x5b7c
   116a4:	movt	r1, #1
   116a8:	mov	r0, #1
   116ac:	bl	10d60 <__printf_chk@plt>
   116b0:	strd	r8, [sp]
   116b4:	mov	r3, r4
   116b8:	mov	r2, #21
   116bc:	mov	r1, #1
   116c0:	add	r0, sp, #57	; 0x39
   116c4:	bl	10d3c <__sprintf_chk@plt>
   116c8:	add	r2, sp, #57	; 0x39
   116cc:	movw	r1, #23436	; 0x5b8c
   116d0:	movt	r1, #1
   116d4:	mov	r0, #1
   116d8:	bl	10d60 <__printf_chk@plt>
   116dc:	add	r0, sp, #56	; 0x38
   116e0:	bl	11260 <__snprintf_chk@plt+0x470>
   116e4:	mov	r2, r0
   116e8:	movw	r1, #23452	; 0x5b9c
   116ec:	movt	r1, #1
   116f0:	mov	r0, #1
   116f4:	bl	10d60 <__printf_chk@plt>
   116f8:	strd	sl, [sp]
   116fc:	mov	r3, r5
   11700:	mov	r2, #21
   11704:	mov	r1, #1
   11708:	add	r0, sp, #57	; 0x39
   1170c:	bl	10d3c <__sprintf_chk@plt>
   11710:	add	r2, sp, #57	; 0x39
   11714:	movw	r1, #23468	; 0x5bac
   11718:	movt	r1, #1
   1171c:	mov	r0, #1
   11720:	bl	10d60 <__printf_chk@plt>
   11724:	add	r0, sp, #56	; 0x38
   11728:	bl	11260 <__snprintf_chk@plt+0x470>
   1172c:	mov	r2, r0
   11730:	movw	r1, #23484	; 0x5bbc
   11734:	movt	r1, #1
   11738:	mov	r0, #1
   1173c:	bl	10d60 <__printf_chk@plt>
   11740:	strd	r6, [sp]
   11744:	mov	r3, r4
   11748:	mov	r2, #21
   1174c:	mov	r1, #1
   11750:	add	r0, sp, #57	; 0x39
   11754:	bl	10d3c <__sprintf_chk@plt>
   11758:	add	r2, sp, #57	; 0x39
   1175c:	movw	r1, #23500	; 0x5bcc
   11760:	movt	r1, #1
   11764:	mov	r0, #1
   11768:	bl	10d60 <__printf_chk@plt>
   1176c:	add	r0, sp, #56	; 0x38
   11770:	bl	11260 <__snprintf_chk@plt+0x470>
   11774:	mov	r2, r0
   11778:	movw	r1, #23516	; 0x5bdc
   1177c:	movt	r1, #1
   11780:	mov	r0, #1
   11784:	bl	10d60 <__printf_chk@plt>
   11788:	strd	r6, [sp]
   1178c:	mov	r3, r4
   11790:	mov	r2, #21
   11794:	mov	r1, #1
   11798:	add	r0, sp, #57	; 0x39
   1179c:	bl	10d3c <__sprintf_chk@plt>
   117a0:	add	r2, sp, #57	; 0x39
   117a4:	movw	r1, #23532	; 0x5bec
   117a8:	movt	r1, #1
   117ac:	mov	r0, #1
   117b0:	bl	10d60 <__printf_chk@plt>
   117b4:	add	r0, sp, #56	; 0x38
   117b8:	bl	11260 <__snprintf_chk@plt+0x470>
   117bc:	mov	r2, r0
   117c0:	movw	r1, #23548	; 0x5bfc
   117c4:	movt	r1, #1
   117c8:	mov	r0, #1
   117cc:	bl	10d60 <__printf_chk@plt>
   117d0:	strd	r8, [sp]
   117d4:	mov	r3, r4
   117d8:	mov	r2, #21
   117dc:	mov	r1, #1
   117e0:	add	r0, sp, #57	; 0x39
   117e4:	bl	10d3c <__sprintf_chk@plt>
   117e8:	add	r2, sp, #57	; 0x39
   117ec:	movw	r1, #23564	; 0x5c0c
   117f0:	movt	r1, #1
   117f4:	mov	r0, #1
   117f8:	bl	10d60 <__printf_chk@plt>
   117fc:	add	r0, sp, #56	; 0x38
   11800:	bl	11260 <__snprintf_chk@plt+0x470>
   11804:	mov	r2, r0
   11808:	movw	r1, #23580	; 0x5c1c
   1180c:	movt	r1, #1
   11810:	mov	r0, #1
   11814:	bl	10d60 <__printf_chk@plt>
   11818:	strd	sl, [sp]
   1181c:	mov	r3, r5
   11820:	mov	r2, #21
   11824:	mov	r1, #1
   11828:	add	r0, sp, #57	; 0x39
   1182c:	bl	10d3c <__sprintf_chk@plt>
   11830:	add	r2, sp, #57	; 0x39
   11834:	movw	r1, #23596	; 0x5c2c
   11838:	movt	r1, #1
   1183c:	mov	r0, #1
   11840:	bl	10d60 <__printf_chk@plt>
   11844:	add	r0, sp, #56	; 0x38
   11848:	bl	11260 <__snprintf_chk@plt+0x470>
   1184c:	mov	r2, r0
   11850:	movw	r1, #23612	; 0x5c3c
   11854:	movt	r1, #1
   11858:	mov	r0, #1
   1185c:	bl	10d60 <__printf_chk@plt>
   11860:	strd	r8, [sp]
   11864:	mov	r3, r4
   11868:	mov	r2, #21
   1186c:	mov	r1, #1
   11870:	add	r0, sp, #57	; 0x39
   11874:	bl	10d3c <__sprintf_chk@plt>
   11878:	add	r2, sp, #57	; 0x39
   1187c:	movw	r1, #23628	; 0x5c4c
   11880:	movt	r1, #1
   11884:	mov	r0, #1
   11888:	bl	10d60 <__printf_chk@plt>
   1188c:	add	r0, sp, #56	; 0x38
   11890:	bl	11260 <__snprintf_chk@plt+0x470>
   11894:	mov	r2, r0
   11898:	movw	r1, #23644	; 0x5c5c
   1189c:	movt	r1, #1
   118a0:	mov	r0, #1
   118a4:	bl	10d60 <__printf_chk@plt>
   118a8:	strd	sl, [sp]
   118ac:	mov	r3, r5
   118b0:	mov	r2, #21
   118b4:	mov	r1, #1
   118b8:	add	r0, sp, #57	; 0x39
   118bc:	bl	10d3c <__sprintf_chk@plt>
   118c0:	add	r2, sp, #57	; 0x39
   118c4:	movw	r1, #23664	; 0x5c70
   118c8:	movt	r1, #1
   118cc:	mov	r0, #1
   118d0:	bl	10d60 <__printf_chk@plt>
   118d4:	add	r0, sp, #56	; 0x38
   118d8:	bl	11260 <__snprintf_chk@plt+0x470>
   118dc:	mov	r2, r0
   118e0:	movw	r1, #23680	; 0x5c80
   118e4:	movt	r1, #1
   118e8:	mov	r0, #1
   118ec:	bl	10d60 <__printf_chk@plt>
   118f0:	strd	r6, [sp]
   118f4:	mov	r3, r4
   118f8:	mov	r2, #21
   118fc:	mov	r1, #1
   11900:	add	r0, sp, #57	; 0x39
   11904:	bl	10d3c <__sprintf_chk@plt>
   11908:	add	r2, sp, #57	; 0x39
   1190c:	movw	r1, #23700	; 0x5c94
   11910:	movt	r1, #1
   11914:	mov	r0, #1
   11918:	bl	10d60 <__printf_chk@plt>
   1191c:	add	r0, sp, #56	; 0x38
   11920:	bl	11260 <__snprintf_chk@plt+0x470>
   11924:	mov	r2, r0
   11928:	movw	r1, #23716	; 0x5ca4
   1192c:	movt	r1, #1
   11930:	mov	r0, #1
   11934:	bl	10d60 <__printf_chk@plt>
   11938:	strd	r6, [sp]
   1193c:	mov	r3, r4
   11940:	mov	r2, #21
   11944:	mov	r1, #1
   11948:	add	r0, sp, #57	; 0x39
   1194c:	bl	10d3c <__sprintf_chk@plt>
   11950:	add	r2, sp, #57	; 0x39
   11954:	movw	r1, #23732	; 0x5cb4
   11958:	movt	r1, #1
   1195c:	mov	r0, #1
   11960:	bl	10d60 <__printf_chk@plt>
   11964:	add	r0, sp, #56	; 0x38
   11968:	bl	11260 <__snprintf_chk@plt+0x470>
   1196c:	mov	r2, r0
   11970:	movw	r1, #23748	; 0x5cc4
   11974:	movt	r1, #1
   11978:	mov	r0, #1
   1197c:	bl	10d60 <__printf_chk@plt>
   11980:	strd	r8, [sp]
   11984:	mov	r3, r4
   11988:	mov	r2, #21
   1198c:	mov	r1, #1
   11990:	add	r0, sp, #57	; 0x39
   11994:	bl	10d3c <__sprintf_chk@plt>
   11998:	add	r2, sp, #57	; 0x39
   1199c:	movw	r1, #23764	; 0x5cd4
   119a0:	movt	r1, #1
   119a4:	mov	r0, #1
   119a8:	bl	10d60 <__printf_chk@plt>
   119ac:	add	r0, sp, #56	; 0x38
   119b0:	bl	11260 <__snprintf_chk@plt+0x470>
   119b4:	mov	r2, r0
   119b8:	movw	r1, #23780	; 0x5ce4
   119bc:	movt	r1, #1
   119c0:	mov	r0, #1
   119c4:	bl	10d60 <__printf_chk@plt>
   119c8:	strd	sl, [sp]
   119cc:	mov	r3, r5
   119d0:	mov	r2, #21
   119d4:	mov	r1, #1
   119d8:	add	r0, sp, #57	; 0x39
   119dc:	bl	10d3c <__sprintf_chk@plt>
   119e0:	add	r2, sp, #57	; 0x39
   119e4:	movw	r1, #23796	; 0x5cf4
   119e8:	movt	r1, #1
   119ec:	mov	r0, #1
   119f0:	bl	10d60 <__printf_chk@plt>
   119f4:	add	r0, sp, #56	; 0x38
   119f8:	bl	11260 <__snprintf_chk@plt+0x470>
   119fc:	mov	r2, r0
   11a00:	movw	r1, #23812	; 0x5d04
   11a04:	movt	r1, #1
   11a08:	mov	r0, #1
   11a0c:	bl	10d60 <__printf_chk@plt>
   11a10:	mvn	r8, #0
   11a14:	mvn	r9, #-2147483648	; 0x80000000
   11a18:	strd	r8, [sp]
   11a1c:	mov	r3, r4
   11a20:	mov	r2, #21
   11a24:	mov	r1, #1
   11a28:	add	r0, sp, #57	; 0x39
   11a2c:	bl	10d3c <__sprintf_chk@plt>
   11a30:	add	r2, sp, #57	; 0x39
   11a34:	movw	r1, #23828	; 0x5d14
   11a38:	movt	r1, #1
   11a3c:	mov	r0, #1
   11a40:	bl	10d60 <__printf_chk@plt>
   11a44:	add	r0, sp, #56	; 0x38
   11a48:	bl	11260 <__snprintf_chk@plt+0x470>
   11a4c:	mov	r2, r0
   11a50:	movw	r1, #23844	; 0x5d24
   11a54:	movt	r1, #1
   11a58:	mov	r0, #1
   11a5c:	bl	10d60 <__printf_chk@plt>
   11a60:	mov	r6, #0
   11a64:	mov	r7, #-2147483648	; 0x80000000
   11a68:	strd	r6, [sp]
   11a6c:	mov	r3, r5
   11a70:	mov	r2, #21
   11a74:	mov	r1, #1
   11a78:	add	r0, sp, #57	; 0x39
   11a7c:	bl	10d3c <__sprintf_chk@plt>
   11a80:	add	r2, sp, #57	; 0x39
   11a84:	movw	r1, #23860	; 0x5d34
   11a88:	movt	r1, #1
   11a8c:	mov	r0, #1
   11a90:	bl	10d60 <__printf_chk@plt>
   11a94:	add	r0, sp, #56	; 0x38
   11a98:	bl	11260 <__snprintf_chk@plt+0x470>
   11a9c:	mov	r2, r0
   11aa0:	movw	r1, #23876	; 0x5d44
   11aa4:	movt	r1, #1
   11aa8:	mov	r0, #1
   11aac:	bl	10d60 <__printf_chk@plt>
   11ab0:	strd	r8, [sp]
   11ab4:	mov	r3, r4
   11ab8:	mov	r2, #21
   11abc:	mov	r1, #1
   11ac0:	add	r0, sp, #57	; 0x39
   11ac4:	bl	10d3c <__sprintf_chk@plt>
   11ac8:	add	r2, sp, #57	; 0x39
   11acc:	movw	r1, #23892	; 0x5d54
   11ad0:	movt	r1, #1
   11ad4:	mov	r0, #1
   11ad8:	bl	10d60 <__printf_chk@plt>
   11adc:	add	r0, sp, #56	; 0x38
   11ae0:	bl	11260 <__snprintf_chk@plt+0x470>
   11ae4:	mov	r2, r0
   11ae8:	movw	r1, #23908	; 0x5d64
   11aec:	movt	r1, #1
   11af0:	mov	r0, #1
   11af4:	bl	10d60 <__printf_chk@plt>
   11af8:	strd	r6, [sp]
   11afc:	mov	r3, r5
   11b00:	mov	r2, #21
   11b04:	mov	r1, #1
   11b08:	add	r0, sp, #57	; 0x39
   11b0c:	bl	10d3c <__sprintf_chk@plt>
   11b10:	add	r2, sp, #57	; 0x39
   11b14:	movw	r1, #23928	; 0x5d78
   11b18:	movt	r1, #1
   11b1c:	mov	r0, #1
   11b20:	bl	10d60 <__printf_chk@plt>
   11b24:	add	r0, sp, #56	; 0x38
   11b28:	bl	11260 <__snprintf_chk@plt+0x470>
   11b2c:	mov	r2, r0
   11b30:	movw	r1, #23944	; 0x5d88
   11b34:	movt	r1, #1
   11b38:	mov	r0, #1
   11b3c:	bl	10d60 <__printf_chk@plt>
   11b40:	mvn	r2, #0
   11b44:	mvn	r3, #0
   11b48:	strd	r2, [sp]
   11b4c:	mov	r3, r4
   11b50:	mov	r2, #21
   11b54:	mov	r1, #1
   11b58:	add	r0, sp, #57	; 0x39
   11b5c:	bl	10d3c <__sprintf_chk@plt>
   11b60:	add	r2, sp, #57	; 0x39
   11b64:	movw	r1, #23964	; 0x5d9c
   11b68:	movt	r1, #1
   11b6c:	mov	r0, #1
   11b70:	bl	10d60 <__printf_chk@plt>
   11b74:	add	r0, sp, #56	; 0x38
   11b78:	bl	11260 <__snprintf_chk@plt+0x470>
   11b7c:	mov	r2, r0
   11b80:	movw	r1, #23980	; 0x5dac
   11b84:	movt	r1, #1
   11b88:	mov	r0, #1
   11b8c:	bl	10d60 <__printf_chk@plt>
   11b90:	movw	r1, #24000	; 0x5dc0
   11b94:	movt	r1, #1
   11b98:	mov	r0, #1
   11b9c:	bl	10d60 <__printf_chk@plt>
   11ba0:	vldr	s0, [pc, #280]	; 11cc0 <__snprintf_chk@plt+0xed0>
   11ba4:	bl	112f8 <__snprintf_chk@plt+0x508>
   11ba8:	movw	r1, #24012	; 0x5dcc
   11bac:	movt	r1, #1
   11bb0:	mov	r0, #1
   11bb4:	bl	10d60 <__printf_chk@plt>
   11bb8:	vldr	s0, [pc, #260]	; 11cc4 <__snprintf_chk@plt+0xed4>
   11bbc:	bl	112f8 <__snprintf_chk@plt+0x508>
   11bc0:	movw	r1, #24024	; 0x5dd8
   11bc4:	movt	r1, #1
   11bc8:	mov	r0, #1
   11bcc:	bl	10d60 <__printf_chk@plt>
   11bd0:	vldr	d9, [pc, #216]	; 11cb0 <__snprintf_chk@plt+0xec0>
   11bd4:	vmov.f64	d0, d9
   11bd8:	mov	r3, #0
   11bdc:	mov	r2, #1
   11be0:	mov	r1, #40	; 0x28
   11be4:	add	r0, sp, #16
   11be8:	bl	11df8 <__snprintf_chk@plt+0x1008>
   11bec:	add	r0, sp, #16
   11bf0:	bl	10cc4 <puts@plt>
   11bf4:	movw	r1, #24036	; 0x5de4
   11bf8:	movt	r1, #1
   11bfc:	mov	r0, #1
   11c00:	bl	10d60 <__printf_chk@plt>
   11c04:	vldr	d8, [pc, #172]	; 11cb8 <__snprintf_chk@plt+0xec8>
   11c08:	vmov.f64	d0, d8
   11c0c:	mov	r3, #0
   11c10:	mov	r2, #1
   11c14:	mov	r1, #40	; 0x28
   11c18:	add	r0, sp, #16
   11c1c:	bl	11df8 <__snprintf_chk@plt+0x1008>
   11c20:	add	r0, sp, #16
   11c24:	bl	10cc4 <puts@plt>
   11c28:	movw	r1, #24048	; 0x5df0
   11c2c:	movt	r1, #1
   11c30:	mov	r0, #1
   11c34:	bl	10d60 <__printf_chk@plt>
   11c38:	vmov.f64	d0, d9
   11c3c:	mov	r3, #0
   11c40:	mov	r2, #1
   11c44:	mov	r1, #40	; 0x28
   11c48:	add	r0, sp, #16
   11c4c:	bl	120c8 <__snprintf_chk@plt+0x12d8>
   11c50:	add	r0, sp, #16
   11c54:	bl	10cc4 <puts@plt>
   11c58:	movw	r1, #24060	; 0x5dfc
   11c5c:	movt	r1, #1
   11c60:	mov	r0, #1
   11c64:	bl	10d60 <__printf_chk@plt>
   11c68:	vmov.f64	d0, d8
   11c6c:	mov	r3, #0
   11c70:	mov	r2, #1
   11c74:	mov	r1, #40	; 0x28
   11c78:	add	r0, sp, #16
   11c7c:	bl	120c8 <__snprintf_chk@plt+0x12d8>
   11c80:	add	r0, sp, #16
   11c84:	bl	10cc4 <puts@plt>
   11c88:	mov	r0, #0
   11c8c:	add	sp, sp, #84	; 0x54
   11c90:	vpop	{d8-d9}
   11c94:	ldrd	r4, [sp]
   11c98:	ldrd	r6, [sp, #8]
   11c9c:	ldrd	r8, [sp, #16]
   11ca0:	ldrd	sl, [sp, #24]
   11ca4:	add	sp, sp, #32
   11ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   11cac:	nop	{0}
   11cb0:	andeq	r0, r0, r0
   11cb4:	andseq	r0, r0, r0
   11cb8:			; <UNDEFINED> instruction: 0xffffffff
   11cbc:	svcvc	0x00efffff
   11cc0:	addeq	r0, r0, r0
   11cc4:	svcvc	0x007fffff
   11cc8:	movw	r3, #28992	; 0x7140
   11ccc:	movt	r3, #2
   11cd0:	str	r0, [r3]
   11cd4:	bx	lr
   11cd8:	movw	r3, #28992	; 0x7140
   11cdc:	movt	r3, #2
   11ce0:	strb	r0, [r3, #4]
   11ce4:	bx	lr
   11ce8:	strd	r4, [sp, #-16]!
   11cec:	str	r6, [sp, #8]
   11cf0:	str	lr, [sp, #12]
   11cf4:	sub	sp, sp, #8
   11cf8:	movw	r3, #28980	; 0x7134
   11cfc:	movt	r3, #2
   11d00:	ldr	r0, [r3]
   11d04:	bl	152a8 <__snprintf_chk@plt+0x44b8>
   11d08:	cmp	r0, #0
   11d0c:	beq	11d34 <__snprintf_chk@plt+0xf44>
   11d10:	movw	r3, #28992	; 0x7140
   11d14:	movt	r3, #2
   11d18:	ldrb	r3, [r3, #4]
   11d1c:	cmp	r3, #0
   11d20:	beq	11d60 <__snprintf_chk@plt+0xf70>
   11d24:	bl	10d30 <__errno_location@plt>
   11d28:	ldr	r3, [r0]
   11d2c:	cmp	r3, #32
   11d30:	bne	11d60 <__snprintf_chk@plt+0xf70>
   11d34:	movw	r3, #28976	; 0x7130
   11d38:	movt	r3, #2
   11d3c:	ldr	r0, [r3]
   11d40:	bl	152a8 <__snprintf_chk@plt+0x44b8>
   11d44:	cmp	r0, #0
   11d48:	bne	11de8 <__snprintf_chk@plt+0xff8>
   11d4c:	add	sp, sp, #8
   11d50:	ldrd	r4, [sp]
   11d54:	ldr	r6, [sp, #8]
   11d58:	add	sp, sp, #12
   11d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d60:	mov	r2, #5
   11d64:	movw	r1, #24180	; 0x5e74
   11d68:	movt	r1, #1
   11d6c:	mov	r0, #0
   11d70:	bl	10c40 <dcgettext@plt>
   11d74:	mov	r4, r0
   11d78:	movw	r3, #28992	; 0x7140
   11d7c:	movt	r3, #2
   11d80:	ldr	r5, [r3]
   11d84:	cmp	r5, #0
   11d88:	beq	11dc8 <__snprintf_chk@plt+0xfd8>
   11d8c:	bl	10d30 <__errno_location@plt>
   11d90:	ldr	r6, [r0]
   11d94:	mov	r0, r5
   11d98:	bl	144ec <__snprintf_chk@plt+0x36fc>
   11d9c:	str	r4, [sp]
   11da0:	mov	r3, r0
   11da4:	movw	r2, #24192	; 0x5e80
   11da8:	movt	r2, #1
   11dac:	mov	r1, r6
   11db0:	mov	r0, #0
   11db4:	bl	10cac <error@plt>
   11db8:	movw	r3, #28888	; 0x70d8
   11dbc:	movt	r3, #2
   11dc0:	ldr	r0, [r3]
   11dc4:	bl	10bf8 <_exit@plt>
   11dc8:	bl	10d30 <__errno_location@plt>
   11dcc:	mov	r3, r4
   11dd0:	movw	r2, #24196	; 0x5e84
   11dd4:	movt	r2, #1
   11dd8:	ldr	r1, [r0]
   11ddc:	mov	r0, #0
   11de0:	bl	10cac <error@plt>
   11de4:	b	11db8 <__snprintf_chk@plt+0xfc8>
   11de8:	movw	r3, #28888	; 0x70d8
   11dec:	movt	r3, #2
   11df0:	ldr	r0, [r3]
   11df4:	bl	10bf8 <_exit@plt>
   11df8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11dfc:	strd	r6, [sp, #8]
   11e00:	strd	r8, [sp, #16]
   11e04:	strd	sl, [sp, #24]
   11e08:	str	lr, [sp, #32]
   11e0c:	vpush	{d8}
   11e10:	sub	sp, sp, #44	; 0x2c
   11e14:	mov	r7, r0
   11e18:	mov	r6, r1
   11e1c:	mov	fp, r3
   11e20:	vmov.f64	d8, d0
   11e24:	vcmpe.f64	d0, #0.0
   11e28:	vmrs	APSR_nzcv, fpscr
   11e2c:	vnegmi.f64	d6, d0
   11e30:	vmovpl.f64	d6, d0
   11e34:	mov	r3, #37	; 0x25
   11e38:	strb	r3, [sp, #28]
   11e3c:	mov	r3, #45	; 0x2d
   11e40:	strb	r3, [sp, #29]
   11e44:	add	r1, sp, #29
   11e48:	and	r3, r2, #1
   11e4c:	add	r0, r1, r3
   11e50:	mov	ip, #43	; 0x2b
   11e54:	strb	ip, [r1, r3]
   11e58:	ubfx	r3, r2, #1, #1
   11e5c:	add	r1, r0, r3
   11e60:	mov	ip, #32
   11e64:	strb	ip, [r0, r3]
   11e68:	ubfx	r3, r2, #2, #1
   11e6c:	add	ip, r1, r3
   11e70:	mov	r0, #48	; 0x30
   11e74:	strb	r0, [r1, r3]
   11e78:	ubfx	r0, r2, #3, #1
   11e7c:	add	r3, ip, r0
   11e80:	mov	r1, #42	; 0x2a
   11e84:	strb	r1, [ip, r0]
   11e88:	mov	r0, #46	; 0x2e
   11e8c:	strb	r0, [r3, #1]
   11e90:	strb	r1, [r3, #2]
   11e94:	and	r2, r2, #16
   11e98:	cmp	r2, #0
   11e9c:	movne	r2, #71	; 0x47
   11ea0:	moveq	r2, #103	; 0x67
   11ea4:	strb	r2, [r3, #3]
   11ea8:	mov	r2, #0
   11eac:	strb	r2, [r3, #4]
   11eb0:	vldr	d7, [pc, #160]	; 11f58 <__snprintf_chk@plt+0x1168>
   11eb4:	vcmpe.f64	d6, d7
   11eb8:	vmrs	APSR_nzcv, fpscr
   11ebc:	movmi	r4, #1
   11ec0:	movpl	r4, #15
   11ec4:	add	sl, sp, #28
   11ec8:	mvn	r9, #0
   11ecc:	mov	r8, #1
   11ed0:	b	11ed8 <__snprintf_chk@plt+0x10e8>
   11ed4:	add	r4, r4, #1
   11ed8:	vstr	d8, [sp, #16]
   11edc:	str	r4, [sp, #8]
   11ee0:	str	fp, [sp, #4]
   11ee4:	str	sl, [sp]
   11ee8:	mov	r3, r9
   11eec:	mov	r2, r8
   11ef0:	mov	r1, r6
   11ef4:	mov	r0, r7
   11ef8:	bl	10df0 <__snprintf_chk@plt>
   11efc:	mov	r5, r0
   11f00:	cmp	r4, #16
   11f04:	movle	r3, #0
   11f08:	movgt	r3, #1
   11f0c:	orrs	r3, r3, r0, lsr #31
   11f10:	bne	11f34 <__snprintf_chk@plt+0x1144>
   11f14:	cmp	r0, r6
   11f18:	bcs	11ed4 <__snprintf_chk@plt+0x10e4>
   11f1c:	mov	r1, #0
   11f20:	mov	r0, r7
   11f24:	bl	10d6c <strtod@plt>
   11f28:	vcmp.f64	d0, d8
   11f2c:	vmrs	APSR_nzcv, fpscr
   11f30:	bne	11ed4 <__snprintf_chk@plt+0x10e4>
   11f34:	mov	r0, r5
   11f38:	add	sp, sp, #44	; 0x2c
   11f3c:	vpop	{d8}
   11f40:	ldrd	r4, [sp]
   11f44:	ldrd	r6, [sp, #8]
   11f48:	ldrd	r8, [sp, #16]
   11f4c:	ldrd	sl, [sp, #24]
   11f50:	add	sp, sp, #32
   11f54:	pop	{pc}		; (ldr pc, [sp], #4)
   11f58:	andeq	r0, r0, r0
   11f5c:	andseq	r0, r0, r0
   11f60:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11f64:	strd	r6, [sp, #8]
   11f68:	strd	r8, [sp, #16]
   11f6c:	strd	sl, [sp, #24]
   11f70:	str	lr, [sp, #32]
   11f74:	vpush	{d8-d9}
   11f78:	sub	sp, sp, #44	; 0x2c
   11f7c:	mov	r7, r0
   11f80:	mov	r6, r1
   11f84:	mov	fp, r3
   11f88:	vmov.f32	s18, s0
   11f8c:	vcvt.f64.f32	d8, s0
   11f90:	vcmpe.f32	s0, #0.0
   11f94:	vmrs	APSR_nzcv, fpscr
   11f98:	vnegmi.f32	s14, s0
   11f9c:	vmovpl.f32	s14, s0
   11fa0:	mov	r3, #37	; 0x25
   11fa4:	strb	r3, [sp, #28]
   11fa8:	mov	r3, #45	; 0x2d
   11fac:	strb	r3, [sp, #29]
   11fb0:	add	r1, sp, #29
   11fb4:	and	r3, r2, #1
   11fb8:	add	r0, r1, r3
   11fbc:	mov	ip, #43	; 0x2b
   11fc0:	strb	ip, [r1, r3]
   11fc4:	ubfx	r3, r2, #1, #1
   11fc8:	add	r1, r0, r3
   11fcc:	mov	ip, #32
   11fd0:	strb	ip, [r0, r3]
   11fd4:	ubfx	r3, r2, #2, #1
   11fd8:	add	ip, r1, r3
   11fdc:	mov	r0, #48	; 0x30
   11fe0:	strb	r0, [r1, r3]
   11fe4:	ubfx	r0, r2, #3, #1
   11fe8:	add	r3, ip, r0
   11fec:	mov	r1, #42	; 0x2a
   11ff0:	strb	r1, [ip, r0]
   11ff4:	mov	r0, #46	; 0x2e
   11ff8:	strb	r0, [r3, #1]
   11ffc:	strb	r1, [r3, #2]
   12000:	and	r2, r2, #16
   12004:	cmp	r2, #0
   12008:	movne	r2, #71	; 0x47
   1200c:	moveq	r2, #103	; 0x67
   12010:	strb	r2, [r3, #3]
   12014:	mov	r2, #0
   12018:	strb	r2, [r3, #4]
   1201c:	vldr	s15, [pc, #160]	; 120c4 <__snprintf_chk@plt+0x12d4>
   12020:	vcmpe.f32	s14, s15
   12024:	vmrs	APSR_nzcv, fpscr
   12028:	movmi	r4, #1
   1202c:	movpl	r4, #6
   12030:	add	sl, sp, #28
   12034:	mvn	r9, #0
   12038:	mov	r8, #1
   1203c:	b	12044 <__snprintf_chk@plt+0x1254>
   12040:	add	r4, r4, #1
   12044:	vstr	d8, [sp, #16]
   12048:	str	r4, [sp, #8]
   1204c:	str	fp, [sp, #4]
   12050:	str	sl, [sp]
   12054:	mov	r3, r9
   12058:	mov	r2, r8
   1205c:	mov	r1, r6
   12060:	mov	r0, r7
   12064:	bl	10df0 <__snprintf_chk@plt>
   12068:	mov	r5, r0
   1206c:	cmp	r4, #8
   12070:	movle	r3, #0
   12074:	movgt	r3, #1
   12078:	orrs	r3, r3, r0, lsr #31
   1207c:	bne	120a0 <__snprintf_chk@plt+0x12b0>
   12080:	cmp	r0, r6
   12084:	bcs	12040 <__snprintf_chk@plt+0x1250>
   12088:	mov	r1, #0
   1208c:	mov	r0, r7
   12090:	bl	10cb8 <strtof@plt>
   12094:	vcmp.f32	s0, s18
   12098:	vmrs	APSR_nzcv, fpscr
   1209c:	bne	12040 <__snprintf_chk@plt+0x1250>
   120a0:	mov	r0, r5
   120a4:	add	sp, sp, #44	; 0x2c
   120a8:	vpop	{d8-d9}
   120ac:	ldrd	r4, [sp]
   120b0:	ldrd	r6, [sp, #8]
   120b4:	ldrd	r8, [sp, #16]
   120b8:	ldrd	sl, [sp, #24]
   120bc:	add	sp, sp, #32
   120c0:	pop	{pc}		; (ldr pc, [sp], #4)
   120c4:	addeq	r0, r0, r0
   120c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   120cc:	strd	r6, [sp, #8]
   120d0:	strd	r8, [sp, #16]
   120d4:	strd	sl, [sp, #24]
   120d8:	str	lr, [sp, #32]
   120dc:	vpush	{d8}
   120e0:	sub	sp, sp, #44	; 0x2c
   120e4:	mov	r7, r0
   120e8:	mov	r6, r1
   120ec:	mov	fp, r3
   120f0:	vmov.f64	d8, d0
   120f4:	vcmpe.f64	d0, #0.0
   120f8:	vmrs	APSR_nzcv, fpscr
   120fc:	vnegmi.f64	d6, d0
   12100:	vmovpl.f64	d6, d0
   12104:	mov	r3, #37	; 0x25
   12108:	strb	r3, [sp, #28]
   1210c:	mov	r3, #45	; 0x2d
   12110:	strb	r3, [sp, #29]
   12114:	add	r1, sp, #29
   12118:	and	r3, r2, #1
   1211c:	add	r0, r1, r3
   12120:	mov	ip, #43	; 0x2b
   12124:	strb	ip, [r1, r3]
   12128:	ubfx	r3, r2, #1, #1
   1212c:	add	r1, r0, r3
   12130:	mov	ip, #32
   12134:	strb	ip, [r0, r3]
   12138:	ubfx	r3, r2, #2, #1
   1213c:	add	ip, r1, r3
   12140:	mov	r0, #48	; 0x30
   12144:	strb	r0, [r1, r3]
   12148:	ubfx	r0, r2, #3, #1
   1214c:	add	r3, ip, r0
   12150:	mov	r1, #42	; 0x2a
   12154:	strb	r1, [ip, r0]
   12158:	mov	r0, #46	; 0x2e
   1215c:	strb	r0, [r3, #1]
   12160:	strb	r1, [r3, #2]
   12164:	mov	r1, #76	; 0x4c
   12168:	strb	r1, [r3, #3]
   1216c:	and	r2, r2, #16
   12170:	cmp	r2, #0
   12174:	movne	r2, #71	; 0x47
   12178:	moveq	r2, #103	; 0x67
   1217c:	strb	r2, [r3, #4]
   12180:	mov	r2, #0
   12184:	strb	r2, [r3, #5]
   12188:	vldr	d7, [pc, #160]	; 12230 <__snprintf_chk@plt+0x1440>
   1218c:	vcmpe.f64	d6, d7
   12190:	vmrs	APSR_nzcv, fpscr
   12194:	movmi	r4, #1
   12198:	movpl	r4, #15
   1219c:	add	sl, sp, #28
   121a0:	mvn	r9, #0
   121a4:	mov	r8, #1
   121a8:	b	121b0 <__snprintf_chk@plt+0x13c0>
   121ac:	add	r4, r4, #1
   121b0:	vstr	d8, [sp, #16]
   121b4:	str	r4, [sp, #8]
   121b8:	str	fp, [sp, #4]
   121bc:	str	sl, [sp]
   121c0:	mov	r3, r9
   121c4:	mov	r2, r8
   121c8:	mov	r1, r6
   121cc:	mov	r0, r7
   121d0:	bl	10df0 <__snprintf_chk@plt>
   121d4:	mov	r5, r0
   121d8:	cmp	r4, #16
   121dc:	movle	r3, #0
   121e0:	movgt	r3, #1
   121e4:	orrs	r3, r3, r0, lsr #31
   121e8:	bne	1220c <__snprintf_chk@plt+0x141c>
   121ec:	cmp	r0, r6
   121f0:	bcs	121ac <__snprintf_chk@plt+0x13bc>
   121f4:	mov	r1, #0
   121f8:	mov	r0, r7
   121fc:	bl	10c1c <strtold@plt>
   12200:	vcmp.f64	d0, d8
   12204:	vmrs	APSR_nzcv, fpscr
   12208:	bne	121ac <__snprintf_chk@plt+0x13bc>
   1220c:	mov	r0, r5
   12210:	add	sp, sp, #44	; 0x2c
   12214:	vpop	{d8}
   12218:	ldrd	r4, [sp]
   1221c:	ldrd	r6, [sp, #8]
   12220:	ldrd	r8, [sp, #16]
   12224:	ldrd	sl, [sp, #24]
   12228:	add	sp, sp, #32
   1222c:	pop	{pc}		; (ldr pc, [sp], #4)
   12230:	andeq	r0, r0, r0
   12234:	andseq	r0, r0, r0
   12238:	strd	r4, [sp, #-16]!
   1223c:	str	r6, [sp, #8]
   12240:	str	lr, [sp, #12]
   12244:	sub	sp, sp, #16
   12248:	movw	ip, #28984	; 0x7138
   1224c:	movt	ip, #2
   12250:	ldr	r4, [ip]
   12254:	mov	lr, #0
   12258:	str	lr, [ip]
   1225c:	cmp	r0, #2
   12260:	beq	12294 <__snprintf_chk@plt+0x14a4>
   12264:	movw	r3, #28984	; 0x7138
   12268:	movt	r3, #2
   1226c:	str	r4, [r3]
   12270:	movw	r3, #28968	; 0x7128
   12274:	movt	r3, #2
   12278:	mov	r2, #0
   1227c:	str	r2, [r3]
   12280:	add	sp, sp, #16
   12284:	ldrd	r4, [sp]
   12288:	ldr	r6, [sp, #8]
   1228c:	add	sp, sp, #12
   12290:	pop	{pc}		; (ldr pc, [sp], #4)
   12294:	mov	r6, r3
   12298:	mov	r5, r2
   1229c:	str	lr, [sp]
   122a0:	movw	r3, #24200	; 0x5e88
   122a4:	movt	r3, #1
   122a8:	movw	r2, #24248	; 0x5eb8
   122ac:	movt	r2, #1
   122b0:	bl	10d00 <getopt_long@plt>
   122b4:	cmn	r0, #1
   122b8:	beq	12264 <__snprintf_chk@plt+0x1474>
   122bc:	cmp	r0, #104	; 0x68
   122c0:	beq	122fc <__snprintf_chk@plt+0x150c>
   122c4:	cmp	r0, #118	; 0x76
   122c8:	bne	12264 <__snprintf_chk@plt+0x1474>
   122cc:	add	r3, sp, #40	; 0x28
   122d0:	str	r3, [sp, #12]
   122d4:	movw	r0, #28980	; 0x7134
   122d8:	movt	r0, #2
   122dc:	str	r3, [sp]
   122e0:	ldr	r3, [sp, #32]
   122e4:	mov	r2, r6
   122e8:	mov	r1, r5
   122ec:	ldr	r0, [r0]
   122f0:	bl	14b98 <__snprintf_chk@plt+0x3da8>
   122f4:	mov	r0, #0
   122f8:	bl	10d18 <exit@plt>
   122fc:	mov	r0, #0
   12300:	ldr	r3, [sp, #36]	; 0x24
   12304:	blx	r3
   12308:	b	12264 <__snprintf_chk@plt+0x1474>
   1230c:	strd	r4, [sp, #-16]!
   12310:	str	r6, [sp, #8]
   12314:	str	lr, [sp, #12]
   12318:	sub	sp, sp, #16
   1231c:	mov	r5, r2
   12320:	mov	r6, r3
   12324:	movw	r3, #28984	; 0x7138
   12328:	movt	r3, #2
   1232c:	ldr	r4, [r3]
   12330:	mov	r2, #1
   12334:	str	r2, [r3]
   12338:	movw	r2, #22740	; 0x58d4
   1233c:	movt	r2, #1
   12340:	movw	ip, #24248	; 0x5eb8
   12344:	movt	ip, #1
   12348:	mov	r3, #0
   1234c:	str	r3, [sp]
   12350:	movw	r3, #24200	; 0x5e88
   12354:	movt	r3, #1
   12358:	ldrb	lr, [sp, #36]	; 0x24
   1235c:	cmp	lr, #0
   12360:	moveq	r2, ip
   12364:	bl	10d00 <getopt_long@plt>
   12368:	cmn	r0, #1
   1236c:	beq	123a4 <__snprintf_chk@plt+0x15b4>
   12370:	cmp	r0, #104	; 0x68
   12374:	beq	12398 <__snprintf_chk@plt+0x15a8>
   12378:	cmp	r0, #118	; 0x76
   1237c:	beq	123c4 <__snprintf_chk@plt+0x15d4>
   12380:	movw	r3, #28888	; 0x70d8
   12384:	movt	r3, #2
   12388:	ldr	r0, [r3]
   1238c:	ldr	r3, [sp, #40]	; 0x28
   12390:	blx	r3
   12394:	b	123a4 <__snprintf_chk@plt+0x15b4>
   12398:	mov	r0, #0
   1239c:	ldr	r3, [sp, #40]	; 0x28
   123a0:	blx	r3
   123a4:	movw	r3, #28984	; 0x7138
   123a8:	movt	r3, #2
   123ac:	str	r4, [r3]
   123b0:	add	sp, sp, #16
   123b4:	ldrd	r4, [sp]
   123b8:	ldr	r6, [sp, #8]
   123bc:	add	sp, sp, #12
   123c0:	pop	{pc}		; (ldr pc, [sp], #4)
   123c4:	add	r3, sp, #44	; 0x2c
   123c8:	str	r3, [sp, #12]
   123cc:	movw	r0, #28980	; 0x7134
   123d0:	movt	r0, #2
   123d4:	str	r3, [sp]
   123d8:	ldr	r3, [sp, #32]
   123dc:	mov	r2, r6
   123e0:	mov	r1, r5
   123e4:	ldr	r0, [r0]
   123e8:	bl	14b98 <__snprintf_chk@plt+0x3da8>
   123ec:	mov	r0, #0
   123f0:	bl	10d18 <exit@plt>
   123f4:	strd	r4, [sp, #-16]!
   123f8:	str	r6, [sp, #8]
   123fc:	str	lr, [sp, #12]
   12400:	subs	r4, r0, #0
   12404:	beq	124a0 <__snprintf_chk@plt+0x16b0>
   12408:	mov	r1, #47	; 0x2f
   1240c:	mov	r0, r4
   12410:	bl	10db4 <strrchr@plt>
   12414:	subs	r5, r0, #0
   12418:	beq	12478 <__snprintf_chk@plt+0x1688>
   1241c:	add	r6, r5, #1
   12420:	sub	r3, r6, r4
   12424:	cmp	r3, #6
   12428:	ble	12478 <__snprintf_chk@plt+0x1688>
   1242c:	mov	r2, #7
   12430:	movw	r1, #24324	; 0x5f04
   12434:	movt	r1, #1
   12438:	sub	r0, r5, #6
   1243c:	bl	10dd8 <strncmp@plt>
   12440:	cmp	r0, #0
   12444:	bne	12478 <__snprintf_chk@plt+0x1688>
   12448:	mov	r2, #3
   1244c:	movw	r1, #24332	; 0x5f0c
   12450:	movt	r1, #1
   12454:	mov	r0, r6
   12458:	bl	10dd8 <strncmp@plt>
   1245c:	cmp	r0, #0
   12460:	movne	r4, r6
   12464:	bne	12478 <__snprintf_chk@plt+0x1688>
   12468:	add	r4, r5, #4
   1246c:	movw	r3, #28960	; 0x7120
   12470:	movt	r3, #2
   12474:	str	r4, [r3]
   12478:	movw	r3, #29000	; 0x7148
   1247c:	movt	r3, #2
   12480:	str	r4, [r3]
   12484:	movw	r3, #28964	; 0x7124
   12488:	movt	r3, #2
   1248c:	str	r4, [r3]
   12490:	ldrd	r4, [sp]
   12494:	ldr	r6, [sp, #8]
   12498:	add	sp, sp, #12
   1249c:	pop	{pc}		; (ldr pc, [sp], #4)
   124a0:	movw	r3, #28976	; 0x7130
   124a4:	movt	r3, #2
   124a8:	ldr	r3, [r3]
   124ac:	mov	r2, #55	; 0x37
   124b0:	mov	r1, #1
   124b4:	movw	r0, #24268	; 0x5ecc
   124b8:	movt	r0, #1
   124bc:	bl	10c70 <fwrite@plt>
   124c0:	bl	10de4 <abort@plt>
   124c4:	mov	r2, #0
   124c8:	mov	r3, #0
   124cc:	strd	r2, [r0]
   124d0:	strd	r2, [r0, #8]
   124d4:	strd	r2, [r0, #16]
   124d8:	strd	r2, [r0, #24]
   124dc:	strd	r2, [r0, #32]
   124e0:	strd	r2, [r0, #40]	; 0x28
   124e4:	cmp	r1, #10
   124e8:	beq	124f4 <__snprintf_chk@plt+0x1704>
   124ec:	str	r1, [r0]
   124f0:	bx	lr
   124f4:	str	r4, [sp, #-8]!
   124f8:	str	lr, [sp, #4]
   124fc:	bl	10de4 <abort@plt>
   12500:	strd	r4, [sp, #-16]!
   12504:	str	r6, [sp, #8]
   12508:	str	lr, [sp, #12]
   1250c:	mov	r5, r0
   12510:	mov	r6, r1
   12514:	mov	r2, #5
   12518:	mov	r1, r0
   1251c:	mov	r0, #0
   12520:	bl	10c40 <dcgettext@plt>
   12524:	mov	r4, r0
   12528:	cmp	r5, r0
   1252c:	beq	12544 <__snprintf_chk@plt+0x1754>
   12530:	mov	r0, r4
   12534:	ldrd	r4, [sp]
   12538:	ldr	r6, [sp, #8]
   1253c:	add	sp, sp, #12
   12540:	pop	{pc}		; (ldr pc, [sp], #4)
   12544:	bl	15580 <__snprintf_chk@plt+0x4790>
   12548:	ldrb	r3, [r0]
   1254c:	bic	r3, r3, #32
   12550:	cmp	r3, #85	; 0x55
   12554:	bne	125d8 <__snprintf_chk@plt+0x17e8>
   12558:	ldrb	r3, [r0, #1]
   1255c:	bic	r3, r3, #32
   12560:	cmp	r3, #84	; 0x54
   12564:	bne	1259c <__snprintf_chk@plt+0x17ac>
   12568:	ldrb	r3, [r0, #2]
   1256c:	bic	r3, r3, #32
   12570:	cmp	r3, #70	; 0x46
   12574:	bne	1259c <__snprintf_chk@plt+0x17ac>
   12578:	ldrb	r3, [r0, #3]
   1257c:	cmp	r3, #45	; 0x2d
   12580:	bne	1259c <__snprintf_chk@plt+0x17ac>
   12584:	ldrb	r3, [r0, #4]
   12588:	cmp	r3, #56	; 0x38
   1258c:	bne	1259c <__snprintf_chk@plt+0x17ac>
   12590:	ldrb	r3, [r0, #5]
   12594:	cmp	r3, #0
   12598:	beq	125b8 <__snprintf_chk@plt+0x17c8>
   1259c:	movw	r4, #24420	; 0x5f64
   125a0:	movt	r4, #1
   125a4:	movw	r3, #24440	; 0x5f78
   125a8:	movt	r3, #1
   125ac:	cmp	r6, #9
   125b0:	movne	r4, r3
   125b4:	b	12530 <__snprintf_chk@plt+0x1740>
   125b8:	ldrb	r2, [r4]
   125bc:	movw	r4, #24436	; 0x5f74
   125c0:	movt	r4, #1
   125c4:	movw	r3, #24424	; 0x5f68
   125c8:	movt	r3, #1
   125cc:	cmp	r2, #96	; 0x60
   125d0:	movne	r4, r3
   125d4:	b	12530 <__snprintf_chk@plt+0x1740>
   125d8:	cmp	r3, #71	; 0x47
   125dc:	bne	1259c <__snprintf_chk@plt+0x17ac>
   125e0:	ldrb	r3, [r0, #1]
   125e4:	bic	r3, r3, #32
   125e8:	cmp	r3, #66	; 0x42
   125ec:	bne	1259c <__snprintf_chk@plt+0x17ac>
   125f0:	ldrb	r3, [r0, #2]
   125f4:	cmp	r3, #49	; 0x31
   125f8:	bne	1259c <__snprintf_chk@plt+0x17ac>
   125fc:	ldrb	r3, [r0, #3]
   12600:	cmp	r3, #56	; 0x38
   12604:	bne	1259c <__snprintf_chk@plt+0x17ac>
   12608:	ldrb	r3, [r0, #4]
   1260c:	cmp	r3, #48	; 0x30
   12610:	bne	1259c <__snprintf_chk@plt+0x17ac>
   12614:	ldrb	r3, [r0, #5]
   12618:	cmp	r3, #51	; 0x33
   1261c:	bne	1259c <__snprintf_chk@plt+0x17ac>
   12620:	ldrb	r3, [r0, #6]
   12624:	cmp	r3, #48	; 0x30
   12628:	bne	1259c <__snprintf_chk@plt+0x17ac>
   1262c:	ldrb	r3, [r0, #7]
   12630:	cmp	r3, #0
   12634:	bne	1259c <__snprintf_chk@plt+0x17ac>
   12638:	ldrb	r2, [r4]
   1263c:	movw	r4, #24432	; 0x5f70
   12640:	movt	r4, #1
   12644:	movw	r3, #24428	; 0x5f6c
   12648:	movt	r3, #1
   1264c:	cmp	r2, #96	; 0x60
   12650:	movne	r4, r3
   12654:	b	12530 <__snprintf_chk@plt+0x1740>
   12658:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1265c:	strd	r6, [sp, #8]
   12660:	strd	r8, [sp, #16]
   12664:	strd	sl, [sp, #24]
   12668:	str	lr, [sp, #32]
   1266c:	sub	sp, sp, #116	; 0x74
   12670:	str	r0, [sp, #64]	; 0x40
   12674:	mov	r8, r1
   12678:	str	r2, [sp, #48]	; 0x30
   1267c:	str	r3, [sp, #24]
   12680:	ldr	r7, [sp, #152]	; 0x98
   12684:	bl	10c88 <__ctype_get_mb_cur_max@plt>
   12688:	str	r0, [sp, #76]	; 0x4c
   1268c:	ldr	r3, [sp, #156]	; 0x9c
   12690:	ubfx	r3, r3, #1, #1
   12694:	str	r3, [sp, #32]
   12698:	mov	r3, #1
   1269c:	str	r3, [sp, #40]	; 0x28
   126a0:	mov	r3, #0
   126a4:	str	r3, [sp, #68]	; 0x44
   126a8:	str	r3, [sp, #36]	; 0x24
   126ac:	str	r3, [sp, #28]
   126b0:	str	r3, [sp, #52]	; 0x34
   126b4:	str	r3, [sp, #60]	; 0x3c
   126b8:	str	r3, [sp, #72]	; 0x48
   126bc:	movw	r3, #24444	; 0x5f7c
   126c0:	movt	r3, #1
   126c4:	str	r3, [sp, #80]	; 0x50
   126c8:	mov	r9, r8
   126cc:	mov	sl, r7
   126d0:	cmp	sl, #10
   126d4:	ldrls	pc, [pc, sl, lsl #2]
   126d8:	b	1289c <__snprintf_chk@plt+0x1aac>
   126dc:	andeq	r2, r1, ip, lsr r7
   126e0:	andeq	r2, r1, r0, lsl r7
   126e4:	andeq	r2, r1, r4, ror r8
   126e8:	andeq	r2, r1, r8, lsl #14
   126ec:	andeq	r2, r1, r8, lsr #16
   126f0:	andeq	r2, r1, ip, asr #14
   126f4:	andeq	r3, r1, r8, lsl fp
   126f8:	andeq	r2, r1, r0, lsr #17
   126fc:	andeq	r2, r1, r8, lsl #15
   12700:	andeq	r2, r1, r8, lsl #15
   12704:	andeq	r2, r1, r8, lsl #15
   12708:	mov	r3, #1
   1270c:	str	r3, [sp, #28]
   12710:	mov	r3, #1
   12714:	str	r3, [sp, #32]
   12718:	str	r3, [sp, #52]	; 0x34
   1271c:	movw	r3, #24440	; 0x5f78
   12720:	movt	r3, #1
   12724:	str	r3, [sp, #60]	; 0x3c
   12728:	mov	fp, #0
   1272c:	mov	sl, #2
   12730:	mov	r6, #0
   12734:	ldr	r8, [sp, #64]	; 0x40
   12738:	b	12fb0 <__snprintf_chk@plt+0x21c0>
   1273c:	mov	fp, sl
   12740:	mov	r3, #0
   12744:	str	r3, [sp, #32]
   12748:	b	12730 <__snprintf_chk@plt+0x1940>
   1274c:	ldr	r3, [sp, #32]
   12750:	cmp	r3, #0
   12754:	bne	128b4 <__snprintf_chk@plt+0x1ac4>
   12758:	cmp	r9, #0
   1275c:	beq	128d8 <__snprintf_chk@plt+0x1ae8>
   12760:	mov	r3, #34	; 0x22
   12764:	ldr	r2, [sp, #64]	; 0x40
   12768:	strb	r3, [r2]
   1276c:	mov	fp, #1
   12770:	str	fp, [sp, #28]
   12774:	str	fp, [sp, #52]	; 0x34
   12778:	movw	r3, #24420	; 0x5f64
   1277c:	movt	r3, #1
   12780:	str	r3, [sp, #60]	; 0x3c
   12784:	b	12730 <__snprintf_chk@plt+0x1940>
   12788:	cmp	sl, #10
   1278c:	bne	127c0 <__snprintf_chk@plt+0x19d0>
   12790:	ldr	r3, [sp, #32]
   12794:	cmp	r3, #0
   12798:	movne	fp, #0
   1279c:	beq	127e8 <__snprintf_chk@plt+0x19f8>
   127a0:	ldr	r0, [sp, #168]	; 0xa8
   127a4:	bl	10d24 <strlen@plt>
   127a8:	str	r0, [sp, #52]	; 0x34
   127ac:	ldr	r3, [sp, #168]	; 0xa8
   127b0:	str	r3, [sp, #60]	; 0x3c
   127b4:	mov	r3, #1
   127b8:	str	r3, [sp, #28]
   127bc:	b	12730 <__snprintf_chk@plt+0x1940>
   127c0:	mov	r1, sl
   127c4:	ldr	r0, [sp, #80]	; 0x50
   127c8:	bl	12500 <__snprintf_chk@plt+0x1710>
   127cc:	str	r0, [sp, #164]	; 0xa4
   127d0:	mov	r1, sl
   127d4:	movw	r0, #24440	; 0x5f78
   127d8:	movt	r0, #1
   127dc:	bl	12500 <__snprintf_chk@plt+0x1710>
   127e0:	str	r0, [sp, #168]	; 0xa8
   127e4:	b	12790 <__snprintf_chk@plt+0x19a0>
   127e8:	ldr	r3, [sp, #164]	; 0xa4
   127ec:	ldrb	r3, [r3]
   127f0:	cmp	r3, #0
   127f4:	beq	12820 <__snprintf_chk@plt+0x1a30>
   127f8:	ldr	r2, [sp, #164]	; 0xa4
   127fc:	mov	fp, #0
   12800:	ldr	r1, [sp, #64]	; 0x40
   12804:	cmp	r9, fp
   12808:	strbhi	r3, [r1, fp]
   1280c:	add	fp, fp, #1
   12810:	ldrb	r3, [r2, #1]!
   12814:	cmp	r3, #0
   12818:	bne	12804 <__snprintf_chk@plt+0x1a14>
   1281c:	b	127a0 <__snprintf_chk@plt+0x19b0>
   12820:	mov	fp, #0
   12824:	b	127a0 <__snprintf_chk@plt+0x19b0>
   12828:	ldr	r3, [sp, #32]
   1282c:	cmp	r3, #0
   12830:	bne	12710 <__snprintf_chk@plt+0x1920>
   12834:	mov	r3, #1
   12838:	str	r3, [sp, #28]
   1283c:	cmp	r9, #0
   12840:	beq	128f4 <__snprintf_chk@plt+0x1b04>
   12844:	mov	r3, #39	; 0x27
   12848:	ldr	r2, [sp, #64]	; 0x40
   1284c:	strb	r3, [r2]
   12850:	mov	r3, #0
   12854:	str	r3, [sp, #32]
   12858:	mov	fp, #1
   1285c:	str	fp, [sp, #52]	; 0x34
   12860:	movw	r3, #24440	; 0x5f78
   12864:	movt	r3, #1
   12868:	str	r3, [sp, #60]	; 0x3c
   1286c:	mov	sl, #2
   12870:	b	12730 <__snprintf_chk@plt+0x1940>
   12874:	ldr	r3, [sp, #32]
   12878:	cmp	r3, #0
   1287c:	beq	1283c <__snprintf_chk@plt+0x1a4c>
   12880:	mov	r3, #1
   12884:	str	r3, [sp, #52]	; 0x34
   12888:	movw	r3, #24440	; 0x5f78
   1288c:	movt	r3, #1
   12890:	str	r3, [sp, #60]	; 0x3c
   12894:	mov	fp, #0
   12898:	b	12730 <__snprintf_chk@plt+0x1940>
   1289c:	bl	10de4 <abort@plt>
   128a0:	mov	fp, #0
   128a4:	str	fp, [sp, #32]
   128a8:	mov	r3, #1
   128ac:	str	r3, [sp, #28]
   128b0:	b	12730 <__snprintf_chk@plt+0x1940>
   128b4:	ldr	r3, [sp, #32]
   128b8:	str	r3, [sp, #28]
   128bc:	mov	r3, #1
   128c0:	str	r3, [sp, #52]	; 0x34
   128c4:	movw	r3, #24420	; 0x5f64
   128c8:	movt	r3, #1
   128cc:	str	r3, [sp, #60]	; 0x3c
   128d0:	mov	fp, #0
   128d4:	b	12730 <__snprintf_chk@plt+0x1940>
   128d8:	mov	fp, #1
   128dc:	str	fp, [sp, #28]
   128e0:	str	fp, [sp, #52]	; 0x34
   128e4:	movw	r3, #24420	; 0x5f64
   128e8:	movt	r3, #1
   128ec:	str	r3, [sp, #60]	; 0x3c
   128f0:	b	12730 <__snprintf_chk@plt+0x1940>
   128f4:	mov	r3, #0
   128f8:	str	r3, [sp, #32]
   128fc:	mov	fp, #1
   12900:	str	fp, [sp, #52]	; 0x34
   12904:	movw	r3, #24440	; 0x5f78
   12908:	movt	r3, #1
   1290c:	str	r3, [sp, #60]	; 0x3c
   12910:	mov	sl, #2
   12914:	b	12730 <__snprintf_chk@plt+0x1940>
   12918:	mov	r3, r2
   1291c:	add	r4, r6, r2
   12920:	ldr	r2, [sp, #24]
   12924:	cmp	r3, #1
   12928:	movls	r3, #0
   1292c:	movhi	r3, #1
   12930:	cmn	r2, #1
   12934:	movne	r3, #0
   12938:	cmp	r3, #0
   1293c:	beq	1294c <__snprintf_chk@plt+0x1b5c>
   12940:	ldr	r0, [sp, #48]	; 0x30
   12944:	bl	10d24 <strlen@plt>
   12948:	str	r0, [sp, #24]
   1294c:	ldr	r3, [sp, #24]
   12950:	cmp	r4, r3
   12954:	bhi	13b40 <__snprintf_chk@plt+0x2d50>
   12958:	ldr	r3, [sp, #48]	; 0x30
   1295c:	add	r4, r3, r6
   12960:	ldr	r2, [sp, #52]	; 0x34
   12964:	ldr	r1, [sp, #60]	; 0x3c
   12968:	mov	r0, r4
   1296c:	bl	10c28 <memcmp@plt>
   12970:	cmp	r0, #0
   12974:	bne	13b40 <__snprintf_chk@plt+0x2d50>
   12978:	ldr	r3, [sp, #32]
   1297c:	cmp	r3, #0
   12980:	bne	12b90 <__snprintf_chk@plt+0x1da0>
   12984:	ldrb	r4, [r4]
   12988:	cmp	r4, #126	; 0x7e
   1298c:	ldrls	pc, [pc, r4, lsl #2]
   12990:	b	13444 <__snprintf_chk@plt+0x2654>
   12994:	ldrdeq	r2, [r1], -r4
   12998:	andeq	r3, r1, r4, asr #8
   1299c:	andeq	r3, r1, r4, asr #8
   129a0:	andeq	r3, r1, r4, asr #8
   129a4:	andeq	r3, r1, r4, asr #8
   129a8:	andeq	r3, r1, r4, asr #8
   129ac:	andeq	r3, r1, r4, asr #8
   129b0:	andeq	r3, r1, ip, ror #5
   129b4:	andeq	r2, r1, r0, ror lr
   129b8:	andeq	r3, r1, r4, lsl r2
   129bc:	andeq	r3, r1, r0, asr #5
   129c0:	andeq	r3, r1, r8, lsr #4
   129c4:	andeq	r2, r1, r4, lsl #29
   129c8:	muleq	r1, r8, lr
   129cc:	andeq	r3, r1, r4, asr #8
   129d0:	andeq	r3, r1, r4, asr #8
   129d4:	andeq	r3, r1, r4, asr #8
   129d8:	andeq	r3, r1, r4, asr #8
   129dc:	andeq	r3, r1, r4, asr #8
   129e0:	andeq	r3, r1, r4, asr #8
   129e4:	andeq	r3, r1, r4, asr #8
   129e8:	andeq	r3, r1, r4, asr #8
   129ec:	andeq	r3, r1, r4, asr #8
   129f0:	andeq	r3, r1, r4, asr #8
   129f4:	andeq	r3, r1, r4, asr #8
   129f8:	andeq	r3, r1, r4, asr #8
   129fc:	andeq	r3, r1, r4, asr #8
   12a00:	andeq	r3, r1, r4, asr #8
   12a04:	andeq	r3, r1, r4, asr #8
   12a08:	andeq	r3, r1, r4, asr #8
   12a0c:	andeq	r3, r1, r4, asr #8
   12a10:	andeq	r3, r1, r4, asr #8
   12a14:	andeq	r3, r1, r0, ror #6
   12a18:	andeq	r3, r1, r4, lsl #7
   12a1c:	andeq	r3, r1, r4, lsl #7
   12a20:	andeq	r3, r1, ip, lsl r3
   12a24:	andeq	r3, r1, r4, lsl #7
   12a28:	andeq	r3, r1, r4, lsr #17
   12a2c:	andeq	r3, r1, r4, lsl #7
   12a30:	andeq	r3, r1, r4, lsr #7
   12a34:	andeq	r3, r1, r4, lsl #7
   12a38:	andeq	r3, r1, r4, lsl #7
   12a3c:	andeq	r3, r1, r4, lsl #7
   12a40:	andeq	r3, r1, r4, lsr #17
   12a44:	andeq	r3, r1, r4, lsr #17
   12a48:	andeq	r3, r1, r4, lsr #17
   12a4c:	andeq	r3, r1, r4, lsr #17
   12a50:	andeq	r3, r1, r4, lsr #17
   12a54:	andeq	r3, r1, r4, lsr #17
   12a58:	andeq	r3, r1, r4, lsr #17
   12a5c:	andeq	r3, r1, r4, lsr #17
   12a60:	andeq	r3, r1, r4, lsr #17
   12a64:	andeq	r3, r1, r4, lsr #17
   12a68:	andeq	r3, r1, r4, lsr #17
   12a6c:	andeq	r3, r1, r4, lsr #17
   12a70:	andeq	r3, r1, r4, lsr #17
   12a74:	andeq	r3, r1, r4, lsr #17
   12a78:	andeq	r3, r1, r4, lsr #17
   12a7c:	andeq	r3, r1, r4, lsr #17
   12a80:	andeq	r3, r1, r4, lsl #7
   12a84:	andeq	r3, r1, r4, lsl #7
   12a88:	andeq	r3, r1, r4, lsl #7
   12a8c:	andeq	r3, r1, r4, lsl #7
   12a90:	andeq	r2, r1, r4, lsl #26
   12a94:	andeq	r3, r1, r4, asr #8
   12a98:	andeq	r3, r1, r4, lsr #17
   12a9c:	andeq	r3, r1, r4, lsr #17
   12aa0:	andeq	r3, r1, r4, lsr #17
   12aa4:	andeq	r3, r1, r4, lsr #17
   12aa8:	andeq	r3, r1, r4, lsr #17
   12aac:	andeq	r3, r1, r4, lsr #17
   12ab0:	andeq	r3, r1, r4, lsr #17
   12ab4:	andeq	r3, r1, r4, lsr #17
   12ab8:	andeq	r3, r1, r4, lsr #17
   12abc:	andeq	r3, r1, r4, lsr #17
   12ac0:	andeq	r3, r1, r4, lsr #17
   12ac4:	andeq	r3, r1, r4, lsr #17
   12ac8:	andeq	r3, r1, r4, lsr #17
   12acc:	andeq	r3, r1, r4, lsr #17
   12ad0:	andeq	r3, r1, r4, lsr #17
   12ad4:	andeq	r3, r1, r4, lsr #17
   12ad8:	andeq	r3, r1, r4, lsr #17
   12adc:	andeq	r3, r1, r4, lsr #17
   12ae0:	andeq	r3, r1, r4, lsr #17
   12ae4:	andeq	r3, r1, r4, lsr #17
   12ae8:	andeq	r3, r1, r4, lsr #17
   12aec:	andeq	r3, r1, r4, lsr #17
   12af0:	andeq	r3, r1, r4, lsr #17
   12af4:	andeq	r3, r1, r4, lsr #17
   12af8:	andeq	r3, r1, r4, lsr #17
   12afc:	andeq	r3, r1, r4, lsr #17
   12b00:	andeq	r3, r1, r4, lsl #7
   12b04:	andeq	r3, r1, ip, lsr r2
   12b08:	andeq	r3, r1, r4, lsr #17
   12b0c:	andeq	r3, r1, r4, lsl #7
   12b10:	andeq	r3, r1, r4, lsr #17
   12b14:	andeq	r3, r1, r4, lsl #7
   12b18:	andeq	r3, r1, r4, lsr #17
   12b1c:	andeq	r3, r1, r4, lsr #17
   12b20:	andeq	r3, r1, r4, lsr #17
   12b24:	andeq	r3, r1, r4, lsr #17
   12b28:	andeq	r3, r1, r4, lsr #17
   12b2c:	andeq	r3, r1, r4, lsr #17
   12b30:	andeq	r3, r1, r4, lsr #17
   12b34:	andeq	r3, r1, r4, lsr #17
   12b38:	andeq	r3, r1, r4, lsr #17
   12b3c:	andeq	r3, r1, r4, lsr #17
   12b40:	andeq	r3, r1, r4, lsr #17
   12b44:	andeq	r3, r1, r4, lsr #17
   12b48:	andeq	r3, r1, r4, lsr #17
   12b4c:	andeq	r3, r1, r4, lsr #17
   12b50:	andeq	r3, r1, r4, lsr #17
   12b54:	andeq	r3, r1, r4, lsr #17
   12b58:	andeq	r3, r1, r4, lsr #17
   12b5c:	andeq	r3, r1, r4, lsr #17
   12b60:	andeq	r3, r1, r4, lsr #17
   12b64:	andeq	r3, r1, r4, lsr #17
   12b68:	andeq	r3, r1, r4, lsr #17
   12b6c:	andeq	r3, r1, r4, lsr #17
   12b70:	andeq	r3, r1, r4, lsr #17
   12b74:	andeq	r3, r1, r4, lsr #17
   12b78:	andeq	r3, r1, r4, lsr #17
   12b7c:	andeq	r3, r1, r4, lsr #17
   12b80:	strdeq	r3, [r1], -ip
   12b84:	andeq	r3, r1, r4, lsl #7
   12b88:	strdeq	r3, [r1], -ip
   12b8c:	andeq	r3, r1, ip, lsl r3
   12b90:	mov	r8, r9
   12b94:	mov	r7, sl
   12b98:	b	13a98 <__snprintf_chk@plt+0x2ca8>
   12b9c:	ldr	r3, [sp, #28]
   12ba0:	cmp	r3, #0
   12ba4:	bne	12bc4 <__snprintf_chk@plt+0x1dd4>
   12ba8:	ldr	r3, [sp, #156]	; 0x9c
   12bac:	tst	r3, #1
   12bb0:	bne	12fac <__snprintf_chk@plt+0x21bc>
   12bb4:	ldr	r3, [sp, #28]
   12bb8:	str	r3, [sp, #44]	; 0x2c
   12bbc:	mov	r5, r3
   12bc0:	b	12ecc <__snprintf_chk@plt+0x20dc>
   12bc4:	ldr	r3, [sp, #32]
   12bc8:	cmp	r3, #0
   12bcc:	bne	13a48 <__snprintf_chk@plt+0x2c58>
   12bd0:	str	r3, [sp, #44]	; 0x2c
   12bd4:	ldr	r3, [sp, #36]	; 0x24
   12bd8:	eor	r3, r3, #1
   12bdc:	cmp	sl, #2
   12be0:	movne	r3, #0
   12be4:	andeq	r3, r3, #1
   12be8:	cmp	r3, #0
   12bec:	beq	12c44 <__snprintf_chk@plt+0x1e54>
   12bf0:	cmp	r9, fp
   12bf4:	movhi	r2, #39	; 0x27
   12bf8:	strbhi	r2, [r8, fp]
   12bfc:	add	r2, fp, #1
   12c00:	cmp	r9, r2
   12c04:	movhi	r1, #36	; 0x24
   12c08:	strbhi	r1, [r8, r2]
   12c0c:	add	r2, fp, #2
   12c10:	cmp	r9, r2
   12c14:	movhi	r1, #39	; 0x27
   12c18:	strbhi	r1, [r8, r2]
   12c1c:	add	r2, fp, #3
   12c20:	cmp	r9, r2
   12c24:	bls	13b04 <__snprintf_chk@plt+0x2d14>
   12c28:	mov	r1, #92	; 0x5c
   12c2c:	strb	r1, [r8, r2]
   12c30:	add	fp, fp, #4
   12c34:	str	r3, [sp, #36]	; 0x24
   12c38:	mov	r5, #0
   12c3c:	mov	r4, #48	; 0x30
   12c40:	b	12f18 <__snprintf_chk@plt+0x2128>
   12c44:	cmp	r9, fp
   12c48:	bhi	12c70 <__snprintf_chk@plt+0x1e80>
   12c4c:	add	r1, fp, #1
   12c50:	ldr	r2, [sp, #56]	; 0x38
   12c54:	cmp	r2, #0
   12c58:	bne	12c98 <__snprintf_chk@plt+0x1ea8>
   12c5c:	mov	r3, r5
   12c60:	ldr	r5, [sp, #56]	; 0x38
   12c64:	mov	fp, r1
   12c68:	mov	r4, #48	; 0x30
   12c6c:	b	12ecc <__snprintf_chk@plt+0x20dc>
   12c70:	mov	r2, #92	; 0x5c
   12c74:	strb	r2, [r8, fp]
   12c78:	add	r1, fp, #1
   12c7c:	ldr	r2, [sp, #56]	; 0x38
   12c80:	cmp	r2, #0
   12c84:	moveq	r3, r5
   12c88:	moveq	r5, r2
   12c8c:	moveq	fp, r1
   12c90:	moveq	r4, #48	; 0x30
   12c94:	beq	12f18 <__snprintf_chk@plt+0x2128>
   12c98:	add	r2, r6, #1
   12c9c:	ldr	r0, [sp, #24]
   12ca0:	cmp	r2, r0
   12ca4:	bcs	12cc0 <__snprintf_chk@plt+0x1ed0>
   12ca8:	ldr	r0, [sp, #48]	; 0x30
   12cac:	ldrb	r2, [r0, r2]
   12cb0:	sub	r2, r2, #48	; 0x30
   12cb4:	uxtb	r2, r2
   12cb8:	cmp	r2, #9
   12cbc:	bls	12cd8 <__snprintf_chk@plt+0x1ee8>
   12cc0:	mov	r2, r3
   12cc4:	mov	r3, r5
   12cc8:	mov	r5, r2
   12ccc:	mov	fp, r1
   12cd0:	mov	r4, #48	; 0x30
   12cd4:	b	12ef0 <__snprintf_chk@plt+0x2100>
   12cd8:	cmp	r9, r1
   12cdc:	movhi	r2, #48	; 0x30
   12ce0:	strbhi	r2, [r8, r1]
   12ce4:	add	r2, fp, #2
   12ce8:	cmp	r9, r2
   12cec:	movhi	r1, #48	; 0x30
   12cf0:	strbhi	r1, [r8, r2]
   12cf4:	add	r1, fp, #3
   12cf8:	b	12cc0 <__snprintf_chk@plt+0x1ed0>
   12cfc:	mov	r3, #0
   12d00:	str	r3, [sp, #44]	; 0x2c
   12d04:	cmp	sl, #2
   12d08:	beq	12d24 <__snprintf_chk@plt+0x1f34>
   12d0c:	cmp	sl, #5
   12d10:	beq	12d3c <__snprintf_chk@plt+0x1f4c>
   12d14:	mov	r5, #0
   12d18:	mov	r3, r5
   12d1c:	mov	r4, #63	; 0x3f
   12d20:	b	12ecc <__snprintf_chk@plt+0x20dc>
   12d24:	ldr	r3, [sp, #32]
   12d28:	cmp	r3, #0
   12d2c:	bne	13a54 <__snprintf_chk@plt+0x2c64>
   12d30:	mov	r5, r3
   12d34:	mov	r4, #63	; 0x3f
   12d38:	b	13434 <__snprintf_chk@plt+0x2644>
   12d3c:	ldr	r3, [sp, #156]	; 0x9c
   12d40:	tst	r3, #4
   12d44:	beq	1386c <__snprintf_chk@plt+0x2a7c>
   12d48:	add	r2, r6, #2
   12d4c:	ldr	r3, [sp, #24]
   12d50:	cmp	r2, r3
   12d54:	bcs	1387c <__snprintf_chk@plt+0x2a8c>
   12d58:	ldr	r3, [sp, #48]	; 0x30
   12d5c:	add	r3, r3, r6
   12d60:	ldrb	r4, [r3, #1]
   12d64:	cmp	r4, #63	; 0x3f
   12d68:	movne	r5, #0
   12d6c:	movne	r3, r5
   12d70:	movne	r4, #63	; 0x3f
   12d74:	bne	12ecc <__snprintf_chk@plt+0x20dc>
   12d78:	ldr	r3, [sp, #48]	; 0x30
   12d7c:	ldrb	r1, [r3, r2]
   12d80:	sub	r3, r1, #33	; 0x21
   12d84:	cmp	r3, #29
   12d88:	ldrls	pc, [pc, r3, lsl #2]
   12d8c:	b	1388c <__snprintf_chk@plt+0x2a9c>
   12d90:	andeq	r2, r1, r8, lsl #28
   12d94:	andeq	r3, r1, ip, lsl #17
   12d98:	andeq	r3, r1, ip, lsl #17
   12d9c:	andeq	r3, r1, ip, lsl #17
   12da0:	andeq	r3, r1, ip, lsl #17
   12da4:	andeq	r3, r1, ip, lsl #17
   12da8:	andeq	r2, r1, r8, lsl #28
   12dac:	andeq	r2, r1, r8, lsl #28
   12db0:	andeq	r2, r1, r8, lsl #28
   12db4:	andeq	r3, r1, ip, lsl #17
   12db8:	andeq	r3, r1, ip, lsl #17
   12dbc:	andeq	r3, r1, ip, lsl #17
   12dc0:	andeq	r2, r1, r8, lsl #28
   12dc4:	andeq	r3, r1, ip, lsl #17
   12dc8:	andeq	r2, r1, r8, lsl #28
   12dcc:	andeq	r3, r1, ip, lsl #17
   12dd0:	andeq	r3, r1, ip, lsl #17
   12dd4:	andeq	r3, r1, ip, lsl #17
   12dd8:	andeq	r3, r1, ip, lsl #17
   12ddc:	andeq	r3, r1, ip, lsl #17
   12de0:	andeq	r3, r1, ip, lsl #17
   12de4:	andeq	r3, r1, ip, lsl #17
   12de8:	andeq	r3, r1, ip, lsl #17
   12dec:	andeq	r3, r1, ip, lsl #17
   12df0:	andeq	r3, r1, ip, lsl #17
   12df4:	andeq	r3, r1, ip, lsl #17
   12df8:	andeq	r3, r1, ip, lsl #17
   12dfc:	andeq	r2, r1, r8, lsl #28
   12e00:	andeq	r2, r1, r8, lsl #28
   12e04:	andeq	r2, r1, r8, lsl #28
   12e08:	ldr	r3, [sp, #32]
   12e0c:	cmp	r3, #0
   12e10:	bne	13af8 <__snprintf_chk@plt+0x2d08>
   12e14:	cmp	r9, fp
   12e18:	movhi	r3, #63	; 0x3f
   12e1c:	strbhi	r3, [r8, fp]
   12e20:	add	r3, fp, #1
   12e24:	cmp	r9, r3
   12e28:	movhi	r0, #34	; 0x22
   12e2c:	strbhi	r0, [r8, r3]
   12e30:	add	r3, fp, #2
   12e34:	cmp	r9, r3
   12e38:	movhi	r0, #34	; 0x22
   12e3c:	strbhi	r0, [r8, r3]
   12e40:	add	r3, fp, #3
   12e44:	cmp	r9, r3
   12e48:	movhi	r0, #63	; 0x3f
   12e4c:	strbhi	r0, [r8, r3]
   12e50:	add	fp, fp, #4
   12e54:	ldr	r3, [sp, #32]
   12e58:	mov	r5, r3
   12e5c:	mov	r4, r1
   12e60:	mov	r6, r2
   12e64:	b	12ecc <__snprintf_chk@plt+0x20dc>
   12e68:	mov	r3, #0
   12e6c:	str	r3, [sp, #44]	; 0x2c
   12e70:	mov	r4, #8
   12e74:	mov	r3, #98	; 0x62
   12e78:	b	12eb8 <__snprintf_chk@plt+0x20c8>
   12e7c:	mov	r3, #0
   12e80:	str	r3, [sp, #44]	; 0x2c
   12e84:	mov	r4, #12
   12e88:	mov	r3, #102	; 0x66
   12e8c:	b	12eb8 <__snprintf_chk@plt+0x20c8>
   12e90:	mov	r3, #0
   12e94:	str	r3, [sp, #44]	; 0x2c
   12e98:	mov	r4, #13
   12e9c:	mov	r3, #114	; 0x72
   12ea0:	ldr	r2, [sp, #32]
   12ea4:	cmp	sl, #2
   12ea8:	movne	r2, #0
   12eac:	andeq	r2, r2, #1
   12eb0:	cmp	r2, #0
   12eb4:	bne	132d8 <__snprintf_chk@plt+0x24e8>
   12eb8:	ldr	r2, [sp, #28]
   12ebc:	cmp	r2, #0
   12ec0:	bne	138c0 <__snprintf_chk@plt+0x2ad0>
   12ec4:	mov	r5, r2
   12ec8:	mov	r3, r2
   12ecc:	ldr	r2, [sp, #28]
   12ed0:	eor	r2, r2, #1
   12ed4:	cmp	sl, #2
   12ed8:	orreq	r2, r2, #1
   12edc:	eor	r2, r2, #1
   12ee0:	ldr	r1, [sp, #32]
   12ee4:	orr	r2, r1, r2
   12ee8:	tst	r2, #255	; 0xff
   12eec:	beq	12f18 <__snprintf_chk@plt+0x2128>
   12ef0:	ldr	r2, [sp, #160]	; 0xa0
   12ef4:	cmp	r2, #0
   12ef8:	beq	12f18 <__snprintf_chk@plt+0x2128>
   12efc:	ubfx	r1, r4, #5, #8
   12f00:	and	r2, r4, #31
   12f04:	ldr	r0, [sp, #160]	; 0xa0
   12f08:	ldr	r1, [r0, r1, lsl #2]
   12f0c:	lsr	r2, r1, r2
   12f10:	tst	r2, #1
   12f14:	bne	12f24 <__snprintf_chk@plt+0x2134>
   12f18:	ldr	r2, [sp, #44]	; 0x2c
   12f1c:	cmp	r2, #0
   12f20:	beq	13278 <__snprintf_chk@plt+0x2488>
   12f24:	ldr	r3, [sp, #32]
   12f28:	cmp	r3, #0
   12f2c:	bne	13a78 <__snprintf_chk@plt+0x2c88>
   12f30:	ldr	r3, [sp, #36]	; 0x24
   12f34:	eor	r3, r3, #1
   12f38:	cmp	sl, #2
   12f3c:	movne	r3, #0
   12f40:	andeq	r3, r3, #1
   12f44:	cmp	r3, #0
   12f48:	beq	12f80 <__snprintf_chk@plt+0x2190>
   12f4c:	cmp	r9, fp
   12f50:	movhi	r2, #39	; 0x27
   12f54:	strbhi	r2, [r8, fp]
   12f58:	add	r2, fp, #1
   12f5c:	cmp	r9, r2
   12f60:	movhi	r1, #36	; 0x24
   12f64:	strbhi	r1, [r8, r2]
   12f68:	add	r2, fp, #2
   12f6c:	cmp	r9, r2
   12f70:	movhi	r1, #39	; 0x27
   12f74:	strbhi	r1, [r8, r2]
   12f78:	add	fp, fp, #3
   12f7c:	str	r3, [sp, #36]	; 0x24
   12f80:	cmp	r9, fp
   12f84:	movhi	r3, #92	; 0x5c
   12f88:	strbhi	r3, [r8, fp]
   12f8c:	add	fp, fp, #1
   12f90:	cmp	fp, r9
   12f94:	strbcc	r4, [r8, fp]
   12f98:	add	fp, fp, #1
   12f9c:	cmp	r5, #0
   12fa0:	ldr	r3, [sp, #40]	; 0x28
   12fa4:	moveq	r3, r5
   12fa8:	str	r3, [sp, #40]	; 0x28
   12fac:	add	r6, r6, #1
   12fb0:	ldr	r3, [sp, #24]
   12fb4:	cmn	r3, #1
   12fb8:	beq	138e8 <__snprintf_chk@plt+0x2af8>
   12fbc:	ldr	r3, [sp, #24]
   12fc0:	subs	r5, r3, r6
   12fc4:	movne	r5, #1
   12fc8:	cmp	r5, #0
   12fcc:	beq	138fc <__snprintf_chk@plt+0x2b0c>
   12fd0:	ldr	r3, [sp, #28]
   12fd4:	cmp	sl, #2
   12fd8:	moveq	r3, #0
   12fdc:	andne	r3, r3, #1
   12fe0:	str	r3, [sp, #56]	; 0x38
   12fe4:	ldr	r2, [sp, #52]	; 0x34
   12fe8:	adds	r7, r2, #0
   12fec:	movne	r7, #1
   12ff0:	ands	r3, r3, r7
   12ff4:	str	r3, [sp, #44]	; 0x2c
   12ff8:	bne	12918 <__snprintf_chk@plt+0x1b28>
   12ffc:	ldr	r3, [sp, #48]	; 0x30
   13000:	ldrb	r4, [r3, r6]
   13004:	cmp	r4, #126	; 0x7e
   13008:	ldrls	pc, [pc, r4, lsl #2]
   1300c:	b	13444 <__snprintf_chk@plt+0x2654>
   13010:	muleq	r1, ip, fp
   13014:	andeq	r3, r1, r4, asr #8
   13018:	andeq	r3, r1, r4, asr #8
   1301c:	andeq	r3, r1, r4, asr #8
   13020:	andeq	r3, r1, r4, asr #8
   13024:	andeq	r3, r1, r4, asr #8
   13028:	andeq	r3, r1, r4, asr #8
   1302c:	andeq	r3, r1, r4, ror #5
   13030:	andeq	r2, r1, r0, ror lr
   13034:	andeq	r3, r1, r4, lsl r2
   13038:			; <UNDEFINED> instruction: 0x000132b8
   1303c:	andeq	r3, r1, r8, lsr #4
   13040:	andeq	r2, r1, r4, lsl #29
   13044:	muleq	r1, r8, lr
   13048:	andeq	r3, r1, r4, asr #8
   1304c:	andeq	r3, r1, r4, asr #8
   13050:	andeq	r3, r1, r4, asr #8
   13054:	andeq	r3, r1, r4, asr #8
   13058:	andeq	r3, r1, r4, asr #8
   1305c:	andeq	r3, r1, r4, asr #8
   13060:	andeq	r3, r1, r4, asr #8
   13064:	andeq	r3, r1, r4, asr #8
   13068:	andeq	r3, r1, r4, asr #8
   1306c:	andeq	r3, r1, r4, asr #8
   13070:	andeq	r3, r1, r4, asr #8
   13074:	andeq	r3, r1, r4, asr #8
   13078:	andeq	r3, r1, r4, asr #8
   1307c:	andeq	r3, r1, r4, asr #8
   13080:	andeq	r3, r1, r4, asr #8
   13084:	andeq	r3, r1, r4, asr #8
   13088:	andeq	r3, r1, r4, asr #8
   1308c:	andeq	r3, r1, r4, asr #8
   13090:	andeq	r3, r1, r0, ror #6
   13094:	andeq	r3, r1, ip, asr r3
   13098:	andeq	r3, r1, ip, asr r3
   1309c:	andeq	r3, r1, ip, lsl r3
   130a0:	andeq	r3, r1, ip, asr r3
   130a4:	andeq	r3, r1, r4, ror #16
   130a8:	andeq	r3, r1, ip, asr r3
   130ac:	andeq	r3, r1, r4, lsr #7
   130b0:	andeq	r3, r1, ip, asr r3
   130b4:	andeq	r3, r1, ip, asr r3
   130b8:	andeq	r3, r1, ip, asr r3
   130bc:	andeq	r3, r1, r4, ror #16
   130c0:	andeq	r3, r1, r4, ror #16
   130c4:	andeq	r3, r1, r4, ror #16
   130c8:	andeq	r3, r1, r4, ror #16
   130cc:	andeq	r3, r1, r4, ror #16
   130d0:	andeq	r3, r1, r4, ror #16
   130d4:	andeq	r3, r1, r4, ror #16
   130d8:	andeq	r3, r1, r4, ror #16
   130dc:	andeq	r3, r1, r4, ror #16
   130e0:	andeq	r3, r1, r4, ror #16
   130e4:	andeq	r3, r1, r4, ror #16
   130e8:	andeq	r3, r1, r4, ror #16
   130ec:	andeq	r3, r1, r4, ror #16
   130f0:	andeq	r3, r1, r4, ror #16
   130f4:	andeq	r3, r1, r4, ror #16
   130f8:	andeq	r3, r1, r4, ror #16
   130fc:	andeq	r3, r1, ip, asr r3
   13100:	andeq	r3, r1, ip, asr r3
   13104:	andeq	r3, r1, ip, asr r3
   13108:	andeq	r3, r1, ip, asr r3
   1310c:	andeq	r2, r1, r4, lsl #26
   13110:	andeq	r3, r1, r4, asr #8
   13114:	andeq	r3, r1, r4, ror #16
   13118:	andeq	r3, r1, r4, ror #16
   1311c:	andeq	r3, r1, r4, ror #16
   13120:	andeq	r3, r1, r4, ror #16
   13124:	andeq	r3, r1, r4, ror #16
   13128:	andeq	r3, r1, r4, ror #16
   1312c:	andeq	r3, r1, r4, ror #16
   13130:	andeq	r3, r1, r4, ror #16
   13134:	andeq	r3, r1, r4, ror #16
   13138:	andeq	r3, r1, r4, ror #16
   1313c:	andeq	r3, r1, r4, ror #16
   13140:	andeq	r3, r1, r4, ror #16
   13144:	andeq	r3, r1, r4, ror #16
   13148:	andeq	r3, r1, r4, ror #16
   1314c:	andeq	r3, r1, r4, ror #16
   13150:	andeq	r3, r1, r4, ror #16
   13154:	andeq	r3, r1, r4, ror #16
   13158:	andeq	r3, r1, r4, ror #16
   1315c:	andeq	r3, r1, r4, ror #16
   13160:	andeq	r3, r1, r4, ror #16
   13164:	andeq	r3, r1, r4, ror #16
   13168:	andeq	r3, r1, r4, ror #16
   1316c:	andeq	r3, r1, r4, ror #16
   13170:	andeq	r3, r1, r4, ror #16
   13174:	andeq	r3, r1, r4, ror #16
   13178:	andeq	r3, r1, r4, ror #16
   1317c:	andeq	r3, r1, ip, asr r3
   13180:	andeq	r3, r1, ip, lsr r2
   13184:	andeq	r3, r1, r4, ror #16
   13188:	andeq	r3, r1, ip, asr r3
   1318c:	andeq	r3, r1, r4, ror #16
   13190:	andeq	r3, r1, ip, asr r3
   13194:	andeq	r3, r1, r4, ror #16
   13198:	andeq	r3, r1, r4, ror #16
   1319c:	andeq	r3, r1, r4, ror #16
   131a0:	andeq	r3, r1, r4, ror #16
   131a4:	andeq	r3, r1, r4, ror #16
   131a8:	andeq	r3, r1, r4, ror #16
   131ac:	andeq	r3, r1, r4, ror #16
   131b0:	andeq	r3, r1, r4, ror #16
   131b4:	andeq	r3, r1, r4, ror #16
   131b8:	andeq	r3, r1, r4, ror #16
   131bc:	andeq	r3, r1, r4, ror #16
   131c0:	andeq	r3, r1, r4, ror #16
   131c4:	andeq	r3, r1, r4, ror #16
   131c8:	andeq	r3, r1, r4, ror #16
   131cc:	andeq	r3, r1, r4, ror #16
   131d0:	andeq	r3, r1, r4, ror #16
   131d4:	andeq	r3, r1, r4, ror #16
   131d8:	andeq	r3, r1, r4, ror #16
   131dc:	andeq	r3, r1, r4, ror #16
   131e0:	andeq	r3, r1, r4, ror #16
   131e4:	andeq	r3, r1, r4, ror #16
   131e8:	andeq	r3, r1, r4, ror #16
   131ec:	andeq	r3, r1, r4, ror #16
   131f0:	andeq	r3, r1, r4, ror #16
   131f4:	andeq	r3, r1, r4, ror #16
   131f8:	andeq	r3, r1, r4, ror #16
   131fc:	strdeq	r3, [r1], -ip
   13200:	andeq	r3, r1, ip, asr r3
   13204:	strdeq	r3, [r1], -ip
   13208:	andeq	r3, r1, ip, lsl r3
   1320c:	mov	r3, #0
   13210:	str	r3, [sp, #44]	; 0x2c
   13214:	mov	r4, #9
   13218:	mov	r3, #116	; 0x74
   1321c:	b	12ea0 <__snprintf_chk@plt+0x20b0>
   13220:	mov	r3, #0
   13224:	str	r3, [sp, #44]	; 0x2c
   13228:	mov	r4, #11
   1322c:	mov	r3, #118	; 0x76
   13230:	b	12eb8 <__snprintf_chk@plt+0x20c8>
   13234:	mov	r3, #0
   13238:	str	r3, [sp, #44]	; 0x2c
   1323c:	cmp	sl, #2
   13240:	beq	13264 <__snprintf_chk@plt+0x2474>
   13244:	ldr	r3, [sp, #28]
   13248:	ldr	r2, [sp, #32]
   1324c:	and	r3, r3, r2
   13250:	tst	r7, r3
   13254:	bne	138d8 <__snprintf_chk@plt+0x2ae8>
   13258:	mov	r4, #92	; 0x5c
   1325c:	mov	r3, r4
   13260:	b	12eb8 <__snprintf_chk@plt+0x20c8>
   13264:	ldr	r3, [sp, #32]
   13268:	cmp	r3, #0
   1326c:	bne	13a60 <__snprintf_chk@plt+0x2c70>
   13270:	mov	r5, r3
   13274:	mov	r4, #92	; 0x5c
   13278:	eor	r3, r3, #1
   1327c:	ldr	r2, [sp, #36]	; 0x24
   13280:	and	r3, r3, r2
   13284:	tst	r3, #255	; 0xff
   13288:	beq	12f90 <__snprintf_chk@plt+0x21a0>
   1328c:	cmp	r9, fp
   13290:	movhi	r3, #39	; 0x27
   13294:	strbhi	r3, [r8, fp]
   13298:	add	r3, fp, #1
   1329c:	cmp	r9, r3
   132a0:	movhi	r2, #39	; 0x27
   132a4:	strbhi	r2, [r8, r3]
   132a8:	add	fp, fp, #2
   132ac:	mov	r3, #0
   132b0:	str	r3, [sp, #36]	; 0x24
   132b4:	b	12f90 <__snprintf_chk@plt+0x21a0>
   132b8:	mov	r3, #110	; 0x6e
   132bc:	b	12ea0 <__snprintf_chk@plt+0x20b0>
   132c0:	mov	r3, #110	; 0x6e
   132c4:	b	12ea0 <__snprintf_chk@plt+0x20b0>
   132c8:	mov	r3, #0
   132cc:	str	r3, [sp, #44]	; 0x2c
   132d0:	mov	r3, #110	; 0x6e
   132d4:	b	12ea0 <__snprintf_chk@plt+0x20b0>
   132d8:	mov	r8, r9
   132dc:	mov	r7, #2
   132e0:	b	13a80 <__snprintf_chk@plt+0x2c90>
   132e4:	mov	r3, #97	; 0x61
   132e8:	b	12eb8 <__snprintf_chk@plt+0x20c8>
   132ec:	mov	r3, #97	; 0x61
   132f0:	b	12eb8 <__snprintf_chk@plt+0x20c8>
   132f4:	mov	r3, #0
   132f8:	str	r3, [sp, #44]	; 0x2c
   132fc:	ldr	r3, [sp, #24]
   13300:	cmn	r3, #1
   13304:	beq	13330 <__snprintf_chk@plt+0x2540>
   13308:	ldr	r3, [sp, #24]
   1330c:	subs	r3, r3, #1
   13310:	movne	r3, #1
   13314:	cmp	r3, #0
   13318:	bne	13898 <__snprintf_chk@plt+0x2aa8>
   1331c:	cmp	r6, #0
   13320:	beq	13360 <__snprintf_chk@plt+0x2570>
   13324:	mov	r5, #0
   13328:	mov	r3, r5
   1332c:	b	12ecc <__snprintf_chk@plt+0x20dc>
   13330:	ldr	r3, [sp, #48]	; 0x30
   13334:	ldrb	r3, [r3, #1]
   13338:	adds	r3, r3, #0
   1333c:	movne	r3, #1
   13340:	b	13314 <__snprintf_chk@plt+0x2524>
   13344:	mov	r3, #0
   13348:	str	r3, [sp, #44]	; 0x2c
   1334c:	b	1331c <__snprintf_chk@plt+0x252c>
   13350:	mov	r3, #0
   13354:	str	r3, [sp, #44]	; 0x2c
   13358:	b	13360 <__snprintf_chk@plt+0x2570>
   1335c:	ldr	r5, [sp, #44]	; 0x2c
   13360:	ldr	r3, [sp, #32]
   13364:	cmp	sl, #2
   13368:	movne	r3, #0
   1336c:	andeq	r3, r3, #1
   13370:	cmp	r3, #0
   13374:	beq	12ecc <__snprintf_chk@plt+0x20dc>
   13378:	mov	r8, r9
   1337c:	mov	r7, #2
   13380:	b	13a80 <__snprintf_chk@plt+0x2c90>
   13384:	ldr	r5, [sp, #32]
   13388:	b	13360 <__snprintf_chk@plt+0x2570>
   1338c:	mov	r3, #0
   13390:	str	r3, [sp, #44]	; 0x2c
   13394:	mov	r5, r3
   13398:	b	13360 <__snprintf_chk@plt+0x2570>
   1339c:	mov	r3, #0
   133a0:	str	r3, [sp, #44]	; 0x2c
   133a4:	cmp	sl, #2
   133a8:	strne	r5, [sp, #68]	; 0x44
   133ac:	movne	r3, #0
   133b0:	movne	r4, #39	; 0x27
   133b4:	bne	12ecc <__snprintf_chk@plt+0x20dc>
   133b8:	ldr	r3, [sp, #32]
   133bc:	cmp	r3, #0
   133c0:	bne	13a6c <__snprintf_chk@plt+0x2c7c>
   133c4:	ldr	r3, [sp, #72]	; 0x48
   133c8:	clz	r3, r3
   133cc:	lsr	r3, r3, #5
   133d0:	cmp	r9, #0
   133d4:	moveq	r3, #0
   133d8:	cmp	r3, #0
   133dc:	movne	r3, #0
   133e0:	bne	13408 <__snprintf_chk@plt+0x2618>
   133e4:	cmp	r9, fp
   133e8:	movhi	r3, #39	; 0x27
   133ec:	strbhi	r3, [r8, fp]
   133f0:	add	r3, fp, #1
   133f4:	cmp	r9, r3
   133f8:	movhi	r2, #92	; 0x5c
   133fc:	strbhi	r2, [r8, r3]
   13400:	mov	r3, r9
   13404:	ldr	r9, [sp, #72]	; 0x48
   13408:	add	r2, fp, #2
   1340c:	cmp	r2, r3
   13410:	movcc	r1, #39	; 0x27
   13414:	strbcc	r1, [r8, r2]
   13418:	add	fp, fp, #3
   1341c:	str	r5, [sp, #68]	; 0x44
   13420:	ldr	r2, [sp, #32]
   13424:	str	r2, [sp, #36]	; 0x24
   13428:	str	r9, [sp, #72]	; 0x48
   1342c:	mov	r9, r3
   13430:	mov	r4, #39	; 0x27
   13434:	mov	r3, #0
   13438:	b	12f18 <__snprintf_chk@plt+0x2128>
   1343c:	mov	r3, #0
   13440:	str	r3, [sp, #44]	; 0x2c
   13444:	ldr	r7, [sp, #76]	; 0x4c
   13448:	cmp	r7, #1
   1344c:	bne	13484 <__snprintf_chk@plt+0x2694>
   13450:	bl	10d0c <__ctype_b_loc@plt>
   13454:	ldr	r2, [r0]
   13458:	lsl	r3, r4, #1
   1345c:	ldrh	r5, [r2, r3]
   13460:	ubfx	r5, r5, #14, #1
   13464:	mov	ip, r7
   13468:	eor	r3, r5, #1
   1346c:	ldr	r2, [sp, #28]
   13470:	and	r3, r3, r2
   13474:	ands	r3, r3, #255	; 0xff
   13478:	beq	12ecc <__snprintf_chk@plt+0x20dc>
   1347c:	mov	r5, #0
   13480:	b	136e0 <__snprintf_chk@plt+0x28f0>
   13484:	mov	r2, #0
   13488:	mov	r3, #0
   1348c:	strd	r2, [sp, #104]	; 0x68
   13490:	ldr	r3, [sp, #24]
   13494:	cmn	r3, #1
   13498:	beq	134bc <__snprintf_chk@plt+0x26cc>
   1349c:	mov	r3, #0
   134a0:	str	r4, [sp, #88]	; 0x58
   134a4:	str	fp, [sp, #92]	; 0x5c
   134a8:	str	r8, [sp, #56]	; 0x38
   134ac:	mov	r8, r3
   134b0:	str	r9, [sp, #84]	; 0x54
   134b4:	ldr	r9, [sp, #48]	; 0x30
   134b8:	b	13608 <__snprintf_chk@plt+0x2818>
   134bc:	ldr	r0, [sp, #48]	; 0x30
   134c0:	bl	10d24 <strlen@plt>
   134c4:	str	r0, [sp, #24]
   134c8:	b	1349c <__snprintf_chk@plt+0x26ac>
   134cc:	mov	r1, fp
   134d0:	ldr	r4, [sp, #88]	; 0x58
   134d4:	mov	r2, r8
   134d8:	mov	ip, r8
   134dc:	ldr	fp, [sp, #92]	; 0x5c
   134e0:	ldr	r8, [sp, #56]	; 0x38
   134e4:	ldr	r9, [sp, #84]	; 0x54
   134e8:	ldr	r0, [sp, #24]
   134ec:	cmp	r7, r0
   134f0:	bcs	136a8 <__snprintf_chk@plt+0x28b8>
   134f4:	ldrb	r3, [r1]
   134f8:	cmp	r3, #0
   134fc:	beq	136b0 <__snprintf_chk@plt+0x28c0>
   13500:	mov	r3, r1
   13504:	add	r2, r2, #1
   13508:	add	r1, r6, r2
   1350c:	cmp	r0, r1
   13510:	bls	136b8 <__snprintf_chk@plt+0x28c8>
   13514:	ldrb	r1, [r3, #1]!
   13518:	cmp	r1, #0
   1351c:	bne	13504 <__snprintf_chk@plt+0x2714>
   13520:	mov	ip, r2
   13524:	mov	r5, #0
   13528:	b	136d8 <__snprintf_chk@plt+0x28e8>
   1352c:	ldr	r3, [sp, #56]	; 0x38
   13530:	str	r3, [sp, #64]	; 0x40
   13534:	ldr	r8, [sp, #84]	; 0x54
   13538:	mov	r7, #2
   1353c:	b	13a80 <__snprintf_chk@plt+0x2c90>
   13540:	cmp	r2, r7
   13544:	beq	135e4 <__snprintf_chk@plt+0x27f4>
   13548:	ldrb	r3, [r2], #1
   1354c:	sub	r3, r3, #91	; 0x5b
   13550:	cmp	r3, #33	; 0x21
   13554:	ldrls	pc, [pc, r3, lsl #2]
   13558:	b	13540 <__snprintf_chk@plt+0x2750>
   1355c:	andeq	r3, r1, ip, lsr #10
   13560:	andeq	r3, r1, ip, lsr #10
   13564:	andeq	r3, r1, r0, asr #10
   13568:	andeq	r3, r1, ip, lsr #10
   1356c:	andeq	r3, r1, r0, asr #10
   13570:	andeq	r3, r1, ip, lsr #10
   13574:	andeq	r3, r1, r0, asr #10
   13578:	andeq	r3, r1, r0, asr #10
   1357c:	andeq	r3, r1, r0, asr #10
   13580:	andeq	r3, r1, r0, asr #10
   13584:	andeq	r3, r1, r0, asr #10
   13588:	andeq	r3, r1, r0, asr #10
   1358c:	andeq	r3, r1, r0, asr #10
   13590:	andeq	r3, r1, r0, asr #10
   13594:	andeq	r3, r1, r0, asr #10
   13598:	andeq	r3, r1, r0, asr #10
   1359c:	andeq	r3, r1, r0, asr #10
   135a0:	andeq	r3, r1, r0, asr #10
   135a4:	andeq	r3, r1, r0, asr #10
   135a8:	andeq	r3, r1, r0, asr #10
   135ac:	andeq	r3, r1, r0, asr #10
   135b0:	andeq	r3, r1, r0, asr #10
   135b4:	andeq	r3, r1, r0, asr #10
   135b8:	andeq	r3, r1, r0, asr #10
   135bc:	andeq	r3, r1, r0, asr #10
   135c0:	andeq	r3, r1, r0, asr #10
   135c4:	andeq	r3, r1, r0, asr #10
   135c8:	andeq	r3, r1, r0, asr #10
   135cc:	andeq	r3, r1, r0, asr #10
   135d0:	andeq	r3, r1, r0, asr #10
   135d4:	andeq	r3, r1, r0, asr #10
   135d8:	andeq	r3, r1, r0, asr #10
   135dc:	andeq	r3, r1, r0, asr #10
   135e0:	andeq	r3, r1, ip, lsr #10
   135e4:	ldr	r0, [sp, #100]	; 0x64
   135e8:	bl	10c64 <iswprint@plt>
   135ec:	cmp	r0, #0
   135f0:	moveq	r5, #0
   135f4:	add	r8, r8, r4
   135f8:	add	r0, sp, #104	; 0x68
   135fc:	bl	10c10 <mbsinit@plt>
   13600:	cmp	r0, #0
   13604:	bne	13674 <__snprintf_chk@plt+0x2884>
   13608:	add	r7, r6, r8
   1360c:	add	fp, r9, r7
   13610:	add	r3, sp, #104	; 0x68
   13614:	ldr	r2, [sp, #24]
   13618:	sub	r2, r2, r7
   1361c:	mov	r1, fp
   13620:	add	r0, sp, #100	; 0x64
   13624:	bl	155c4 <__snprintf_chk@plt+0x47d4>
   13628:	subs	r4, r0, #0
   1362c:	beq	136c4 <__snprintf_chk@plt+0x28d4>
   13630:	cmn	r4, #1
   13634:	beq	1368c <__snprintf_chk@plt+0x289c>
   13638:	cmn	r4, #2
   1363c:	beq	134cc <__snprintf_chk@plt+0x26dc>
   13640:	ldr	r3, [sp, #32]
   13644:	cmp	sl, #2
   13648:	movne	r3, #0
   1364c:	andeq	r3, r3, #1
   13650:	cmp	r3, #0
   13654:	beq	135e4 <__snprintf_chk@plt+0x27f4>
   13658:	cmp	r4, #1
   1365c:	bls	135e4 <__snprintf_chk@plt+0x27f4>
   13660:	add	r2, r7, #1
   13664:	add	r2, r9, r2
   13668:	add	r3, r9, r4
   1366c:	add	r7, r3, r7
   13670:	b	13548 <__snprintf_chk@plt+0x2758>
   13674:	ldr	r4, [sp, #88]	; 0x58
   13678:	mov	ip, r8
   1367c:	ldr	fp, [sp, #92]	; 0x5c
   13680:	ldr	r8, [sp, #56]	; 0x38
   13684:	ldr	r9, [sp, #84]	; 0x54
   13688:	b	136d8 <__snprintf_chk@plt+0x28e8>
   1368c:	ldr	r4, [sp, #88]	; 0x58
   13690:	mov	ip, r8
   13694:	ldr	fp, [sp, #92]	; 0x5c
   13698:	ldr	r8, [sp, #56]	; 0x38
   1369c:	ldr	r9, [sp, #84]	; 0x54
   136a0:	mov	r5, #0
   136a4:	b	136d8 <__snprintf_chk@plt+0x28e8>
   136a8:	mov	r5, #0
   136ac:	b	136d8 <__snprintf_chk@plt+0x28e8>
   136b0:	mov	r5, #0
   136b4:	b	136d8 <__snprintf_chk@plt+0x28e8>
   136b8:	mov	ip, r2
   136bc:	mov	r5, #0
   136c0:	b	136d8 <__snprintf_chk@plt+0x28e8>
   136c4:	ldr	r4, [sp, #88]	; 0x58
   136c8:	mov	ip, r8
   136cc:	ldr	fp, [sp, #92]	; 0x5c
   136d0:	ldr	r8, [sp, #56]	; 0x38
   136d4:	ldr	r9, [sp, #84]	; 0x54
   136d8:	cmp	ip, #1
   136dc:	bls	13468 <__snprintf_chk@plt+0x2678>
   136e0:	add	lr, r6, ip
   136e4:	ldr	r3, [sp, #48]	; 0x30
   136e8:	add	r1, r3, r6
   136ec:	mov	r3, #0
   136f0:	eor	r0, r5, #1
   136f4:	ldr	r2, [sp, #28]
   136f8:	and	r0, r0, r2
   136fc:	uxtb	r0, r0
   13700:	str	r0, [sp, #56]	; 0x38
   13704:	mov	r7, #92	; 0x5c
   13708:	ldr	ip, [sp, #36]	; 0x24
   1370c:	str	r5, [sp, #84]	; 0x54
   13710:	ldr	r2, [sp, #44]	; 0x2c
   13714:	b	13784 <__snprintf_chk@plt+0x2994>
   13718:	cmp	r2, #0
   1371c:	beq	1372c <__snprintf_chk@plt+0x293c>
   13720:	cmp	r9, fp
   13724:	strbhi	r7, [r8, fp]
   13728:	add	fp, fp, #1
   1372c:	add	r5, r6, #1
   13730:	cmp	r5, lr
   13734:	bcs	13840 <__snprintf_chk@plt+0x2a50>
   13738:	eor	r2, r3, #1
   1373c:	and	r2, r2, ip
   13740:	ands	r2, r2, #255	; 0xff
   13744:	beq	1385c <__snprintf_chk@plt+0x2a6c>
   13748:	cmp	r9, fp
   1374c:	movhi	r2, #39	; 0x27
   13750:	strbhi	r2, [r8, fp]
   13754:	add	r2, fp, #1
   13758:	cmp	r9, r2
   1375c:	movhi	ip, #39	; 0x27
   13760:	strbhi	ip, [r8, r2]
   13764:	add	fp, fp, #2
   13768:	ldr	ip, [sp, #56]	; 0x38
   1376c:	mov	r2, ip
   13770:	mov	r6, r5
   13774:	cmp	r9, fp
   13778:	strbhi	r4, [r8, fp]
   1377c:	add	fp, fp, #1
   13780:	ldrb	r4, [r1, #1]!
   13784:	cmp	r0, #0
   13788:	beq	13718 <__snprintf_chk@plt+0x2928>
   1378c:	ldr	r3, [sp, #32]
   13790:	cmp	r3, #0
   13794:	bne	13a28 <__snprintf_chk@plt+0x2c38>
   13798:	eor	r3, ip, #1
   1379c:	cmp	sl, #2
   137a0:	movne	r3, #0
   137a4:	andeq	r3, r3, #1
   137a8:	cmp	r3, #0
   137ac:	beq	137e4 <__snprintf_chk@plt+0x29f4>
   137b0:	cmp	r9, fp
   137b4:	movhi	ip, #39	; 0x27
   137b8:	strbhi	ip, [r8, fp]
   137bc:	add	ip, fp, #1
   137c0:	cmp	r9, ip
   137c4:	movhi	r5, #36	; 0x24
   137c8:	strbhi	r5, [r8, ip]
   137cc:	add	ip, fp, #2
   137d0:	cmp	r9, ip
   137d4:	movhi	r5, #39	; 0x27
   137d8:	strbhi	r5, [r8, ip]
   137dc:	add	fp, fp, #3
   137e0:	mov	ip, r3
   137e4:	cmp	r9, fp
   137e8:	strbhi	r7, [r8, fp]
   137ec:	add	r3, fp, #1
   137f0:	cmp	r9, r3
   137f4:	bls	13804 <__snprintf_chk@plt+0x2a14>
   137f8:	lsr	r5, r4, #6
   137fc:	add	r5, r5, #48	; 0x30
   13800:	strb	r5, [r8, r3]
   13804:	add	r3, fp, #2
   13808:	cmp	r9, r3
   1380c:	bls	1381c <__snprintf_chk@plt+0x2a2c>
   13810:	ubfx	r5, r4, #3, #3
   13814:	add	r5, r5, #48	; 0x30
   13818:	strb	r5, [r8, r3]
   1381c:	add	fp, fp, #3
   13820:	and	r4, r4, #7
   13824:	add	r4, r4, #48	; 0x30
   13828:	add	r5, r6, #1
   1382c:	cmp	r5, lr
   13830:	bcs	1384c <__snprintf_chk@plt+0x2a5c>
   13834:	ldr	r3, [sp, #56]	; 0x38
   13838:	mov	r6, r5
   1383c:	b	13774 <__snprintf_chk@plt+0x2984>
   13840:	str	ip, [sp, #36]	; 0x24
   13844:	ldr	r5, [sp, #84]	; 0x54
   13848:	b	13278 <__snprintf_chk@plt+0x2488>
   1384c:	str	ip, [sp, #36]	; 0x24
   13850:	ldr	r5, [sp, #84]	; 0x54
   13854:	mov	r3, r0
   13858:	b	13278 <__snprintf_chk@plt+0x2488>
   1385c:	mov	r6, r5
   13860:	b	13774 <__snprintf_chk@plt+0x2984>
   13864:	ldr	r3, [sp, #44]	; 0x2c
   13868:	b	12ecc <__snprintf_chk@plt+0x20dc>
   1386c:	mov	r5, #0
   13870:	mov	r3, r5
   13874:	mov	r4, #63	; 0x3f
   13878:	b	12ecc <__snprintf_chk@plt+0x20dc>
   1387c:	mov	r5, #0
   13880:	mov	r3, r5
   13884:	mov	r4, #63	; 0x3f
   13888:	b	12ecc <__snprintf_chk@plt+0x20dc>
   1388c:	mov	r5, #0
   13890:	mov	r3, r5
   13894:	b	12ecc <__snprintf_chk@plt+0x20dc>
   13898:	mov	r5, #0
   1389c:	mov	r3, r5
   138a0:	b	12ecc <__snprintf_chk@plt+0x20dc>
   138a4:	ldr	r5, [sp, #44]	; 0x2c
   138a8:	ldr	r3, [sp, #32]
   138ac:	b	12ecc <__snprintf_chk@plt+0x20dc>
   138b0:	ldr	r5, [sp, #44]	; 0x2c
   138b4:	mov	r3, #0
   138b8:	str	r3, [sp, #44]	; 0x2c
   138bc:	b	12ecc <__snprintf_chk@plt+0x20dc>
   138c0:	mov	r4, r3
   138c4:	mov	r5, #0
   138c8:	b	12f24 <__snprintf_chk@plt+0x2134>
   138cc:	mov	r5, #0
   138d0:	mov	r4, #97	; 0x61
   138d4:	b	12f24 <__snprintf_chk@plt+0x2134>
   138d8:	mov	r5, #0
   138dc:	mov	r3, r5
   138e0:	mov	r4, #92	; 0x5c
   138e4:	b	13278 <__snprintf_chk@plt+0x2488>
   138e8:	ldr	r3, [sp, #48]	; 0x30
   138ec:	ldrb	r5, [r3, r6]
   138f0:	adds	r5, r5, #0
   138f4:	movne	r5, #1
   138f8:	b	12fc8 <__snprintf_chk@plt+0x21d8>
   138fc:	cmp	sl, #2
   13900:	movne	r3, #0
   13904:	moveq	r3, #1
   13908:	ldr	r1, [sp, #32]
   1390c:	cmp	fp, #0
   13910:	andeq	r2, r3, r1
   13914:	movne	r2, #0
   13918:	cmp	r2, #0
   1391c:	bne	13a3c <__snprintf_chk@plt+0x2c4c>
   13920:	eor	r2, r1, #1
   13924:	uxtb	r2, r2
   13928:	and	r3, r3, r2
   1392c:	ldr	r1, [sp, #68]	; 0x44
   13930:	ands	r3, r1, r3
   13934:	beq	139c8 <__snprintf_chk@plt+0x2bd8>
   13938:	ldr	r2, [sp, #40]	; 0x28
   1393c:	cmp	r2, #0
   13940:	bne	13978 <__snprintf_chk@plt+0x2b88>
   13944:	ldr	r2, [sp, #72]	; 0x48
   13948:	adds	r2, r2, #0
   1394c:	movne	r2, #1
   13950:	cmp	r9, #0
   13954:	movne	r2, #0
   13958:	str	r2, [sp, #68]	; 0x44
   1395c:	mov	sl, #2
   13960:	ldr	r1, [sp, #40]	; 0x28
   13964:	str	r1, [sp, #32]
   13968:	cmp	r2, #0
   1396c:	beq	139bc <__snprintf_chk@plt+0x2bcc>
   13970:	ldr	r9, [sp, #72]	; 0x48
   13974:	b	126d0 <__snprintf_chk@plt+0x18e0>
   13978:	ldr	r3, [sp, #168]	; 0xa8
   1397c:	str	r3, [sp, #16]
   13980:	ldr	r3, [sp, #164]	; 0xa4
   13984:	str	r3, [sp, #12]
   13988:	ldr	r3, [sp, #160]	; 0xa0
   1398c:	str	r3, [sp, #8]
   13990:	ldr	r3, [sp, #156]	; 0x9c
   13994:	str	r3, [sp, #4]
   13998:	mov	r3, #5
   1399c:	str	r3, [sp]
   139a0:	ldr	r3, [sp, #24]
   139a4:	ldr	r2, [sp, #48]	; 0x30
   139a8:	ldr	r1, [sp, #72]	; 0x48
   139ac:	ldr	r0, [sp, #64]	; 0x40
   139b0:	bl	12658 <__snprintf_chk@plt+0x1868>
   139b4:	mov	fp, r0
   139b8:	b	13ad8 <__snprintf_chk@plt+0x2ce8>
   139bc:	mov	r8, r9
   139c0:	mov	r2, r3
   139c4:	b	139cc <__snprintf_chk@plt+0x2bdc>
   139c8:	mov	r8, r9
   139cc:	ldr	r3, [sp, #60]	; 0x3c
   139d0:	cmp	r3, #0
   139d4:	moveq	r2, #0
   139d8:	andne	r2, r2, #1
   139dc:	cmp	r2, #0
   139e0:	beq	13a10 <__snprintf_chk@plt+0x2c20>
   139e4:	mov	r2, r3
   139e8:	ldrb	r3, [r3]
   139ec:	cmp	r3, #0
   139f0:	beq	13a10 <__snprintf_chk@plt+0x2c20>
   139f4:	ldr	r1, [sp, #64]	; 0x40
   139f8:	cmp	r8, fp
   139fc:	strbhi	r3, [r1, fp]
   13a00:	add	fp, fp, #1
   13a04:	ldrb	r3, [r2, #1]!
   13a08:	cmp	r3, #0
   13a0c:	bne	139f8 <__snprintf_chk@plt+0x2c08>
   13a10:	cmp	r8, fp
   13a14:	bls	13ad8 <__snprintf_chk@plt+0x2ce8>
   13a18:	mov	r3, #0
   13a1c:	ldr	r2, [sp, #64]	; 0x40
   13a20:	strb	r3, [r2, fp]
   13a24:	b	13ad8 <__snprintf_chk@plt+0x2ce8>
   13a28:	mov	r8, r9
   13a2c:	mov	r7, sl
   13a30:	ldr	r3, [sp, #32]
   13a34:	str	r3, [sp, #28]
   13a38:	b	13a80 <__snprintf_chk@plt+0x2c90>
   13a3c:	mov	r8, r9
   13a40:	mov	r7, #2
   13a44:	b	13a80 <__snprintf_chk@plt+0x2c90>
   13a48:	mov	r8, r9
   13a4c:	mov	r7, sl
   13a50:	b	13a80 <__snprintf_chk@plt+0x2c90>
   13a54:	mov	r8, r9
   13a58:	mov	r7, sl
   13a5c:	b	13a80 <__snprintf_chk@plt+0x2c90>
   13a60:	mov	r8, r9
   13a64:	mov	r7, sl
   13a68:	b	13a80 <__snprintf_chk@plt+0x2c90>
   13a6c:	mov	r8, r9
   13a70:	mov	r7, sl
   13a74:	b	13a80 <__snprintf_chk@plt+0x2c90>
   13a78:	mov	r8, r9
   13a7c:	mov	r7, sl
   13a80:	ldr	r3, [sp, #28]
   13a84:	cmp	r7, #2
   13a88:	movne	r3, #0
   13a8c:	andeq	r3, r3, #1
   13a90:	cmp	r3, #0
   13a94:	movne	r7, #4
   13a98:	ldr	r3, [sp, #168]	; 0xa8
   13a9c:	str	r3, [sp, #16]
   13aa0:	ldr	r3, [sp, #164]	; 0xa4
   13aa4:	str	r3, [sp, #12]
   13aa8:	mov	r3, #0
   13aac:	str	r3, [sp, #8]
   13ab0:	ldr	r3, [sp, #156]	; 0x9c
   13ab4:	bic	r3, r3, #2
   13ab8:	str	r3, [sp, #4]
   13abc:	str	r7, [sp]
   13ac0:	ldr	r3, [sp, #24]
   13ac4:	ldr	r2, [sp, #48]	; 0x30
   13ac8:	mov	r1, r8
   13acc:	ldr	r0, [sp, #64]	; 0x40
   13ad0:	bl	12658 <__snprintf_chk@plt+0x1868>
   13ad4:	mov	fp, r0
   13ad8:	mov	r0, fp
   13adc:	add	sp, sp, #116	; 0x74
   13ae0:	ldrd	r4, [sp]
   13ae4:	ldrd	r6, [sp, #8]
   13ae8:	ldrd	r8, [sp, #16]
   13aec:	ldrd	sl, [sp, #24]
   13af0:	add	sp, sp, #32
   13af4:	pop	{pc}		; (ldr pc, [sp], #4)
   13af8:	mov	r8, r9
   13afc:	mov	r7, sl
   13b00:	b	13a98 <__snprintf_chk@plt+0x2ca8>
   13b04:	add	fp, fp, #4
   13b08:	str	r3, [sp, #36]	; 0x24
   13b0c:	mov	r5, #0
   13b10:	mov	r4, #48	; 0x30
   13b14:	b	12ecc <__snprintf_chk@plt+0x20dc>
   13b18:	mov	r3, #1
   13b1c:	str	r3, [sp, #32]
   13b20:	str	r3, [sp, #28]
   13b24:	str	r3, [sp, #52]	; 0x34
   13b28:	movw	r3, #24420	; 0x5f64
   13b2c:	movt	r3, #1
   13b30:	str	r3, [sp, #60]	; 0x3c
   13b34:	mov	fp, #0
   13b38:	mov	sl, #5
   13b3c:	b	12730 <__snprintf_chk@plt+0x1940>
   13b40:	ldr	r3, [sp, #48]	; 0x30
   13b44:	ldrb	r4, [r3, r6]
   13b48:	cmp	r4, #126	; 0x7e
   13b4c:	ldrls	pc, [pc, r4, lsl #2]
   13b50:	b	1343c <__snprintf_chk@plt+0x264c>
   13b54:	andeq	r2, r1, r4, asr #23
   13b58:	andeq	r3, r1, ip, lsr r4
   13b5c:	andeq	r3, r1, ip, lsr r4
   13b60:	andeq	r3, r1, ip, lsr r4
   13b64:	andeq	r3, r1, ip, lsr r4
   13b68:	andeq	r3, r1, ip, lsr r4
   13b6c:	andeq	r3, r1, ip, lsr r4
   13b70:	andeq	r3, r1, ip, asr #17
   13b74:	andeq	r2, r1, r8, ror #28
   13b78:	andeq	r3, r1, ip, lsl #4
   13b7c:	andeq	r3, r1, r8, asr #5
   13b80:	andeq	r3, r1, r0, lsr #4
   13b84:	andeq	r2, r1, ip, ror lr
   13b88:	muleq	r1, r0, lr
   13b8c:	andeq	r3, r1, ip, lsr r4
   13b90:	andeq	r3, r1, ip, lsr r4
   13b94:	andeq	r3, r1, ip, lsr r4
   13b98:	andeq	r3, r1, ip, lsr r4
   13b9c:	andeq	r3, r1, ip, lsr r4
   13ba0:	andeq	r3, r1, ip, lsr r4
   13ba4:	andeq	r3, r1, ip, lsr r4
   13ba8:	andeq	r3, r1, ip, lsr r4
   13bac:	andeq	r3, r1, ip, lsr r4
   13bb0:	andeq	r3, r1, ip, lsr r4
   13bb4:	andeq	r3, r1, ip, lsr r4
   13bb8:	andeq	r3, r1, ip, lsr r4
   13bbc:	andeq	r3, r1, ip, lsr r4
   13bc0:	andeq	r3, r1, ip, lsr r4
   13bc4:	andeq	r3, r1, ip, lsr r4
   13bc8:	andeq	r3, r1, ip, lsr r4
   13bcc:	andeq	r3, r1, ip, lsr r4
   13bd0:	andeq	r3, r1, ip, lsr r4
   13bd4:	andeq	r3, r1, r0, asr r3
   13bd8:	andeq	r3, r1, ip, lsl #7
   13bdc:	andeq	r3, r1, ip, lsl #7
   13be0:	andeq	r3, r1, r4, asr #6
   13be4:	andeq	r3, r1, ip, lsl #7
   13be8:			; <UNDEFINED> instruction: 0x000138b0
   13bec:	andeq	r3, r1, ip, lsl #7
   13bf0:	muleq	r1, ip, r3
   13bf4:	andeq	r3, r1, ip, lsl #7
   13bf8:	andeq	r3, r1, ip, lsl #7
   13bfc:	andeq	r3, r1, ip, lsl #7
   13c00:			; <UNDEFINED> instruction: 0x000138b0
   13c04:			; <UNDEFINED> instruction: 0x000138b0
   13c08:			; <UNDEFINED> instruction: 0x000138b0
   13c0c:			; <UNDEFINED> instruction: 0x000138b0
   13c10:			; <UNDEFINED> instruction: 0x000138b0
   13c14:			; <UNDEFINED> instruction: 0x000138b0
   13c18:			; <UNDEFINED> instruction: 0x000138b0
   13c1c:			; <UNDEFINED> instruction: 0x000138b0
   13c20:			; <UNDEFINED> instruction: 0x000138b0
   13c24:			; <UNDEFINED> instruction: 0x000138b0
   13c28:			; <UNDEFINED> instruction: 0x000138b0
   13c2c:			; <UNDEFINED> instruction: 0x000138b0
   13c30:			; <UNDEFINED> instruction: 0x000138b0
   13c34:			; <UNDEFINED> instruction: 0x000138b0
   13c38:			; <UNDEFINED> instruction: 0x000138b0
   13c3c:			; <UNDEFINED> instruction: 0x000138b0
   13c40:	andeq	r3, r1, ip, lsl #7
   13c44:	andeq	r3, r1, ip, lsl #7
   13c48:	andeq	r3, r1, ip, lsl #7
   13c4c:	andeq	r3, r1, ip, lsl #7
   13c50:	strdeq	r2, [r1], -ip
   13c54:	andeq	r3, r1, ip, lsr r4
   13c58:			; <UNDEFINED> instruction: 0x000138b0
   13c5c:			; <UNDEFINED> instruction: 0x000138b0
   13c60:			; <UNDEFINED> instruction: 0x000138b0
   13c64:			; <UNDEFINED> instruction: 0x000138b0
   13c68:			; <UNDEFINED> instruction: 0x000138b0
   13c6c:			; <UNDEFINED> instruction: 0x000138b0
   13c70:			; <UNDEFINED> instruction: 0x000138b0
   13c74:			; <UNDEFINED> instruction: 0x000138b0
   13c78:			; <UNDEFINED> instruction: 0x000138b0
   13c7c:			; <UNDEFINED> instruction: 0x000138b0
   13c80:			; <UNDEFINED> instruction: 0x000138b0
   13c84:			; <UNDEFINED> instruction: 0x000138b0
   13c88:			; <UNDEFINED> instruction: 0x000138b0
   13c8c:			; <UNDEFINED> instruction: 0x000138b0
   13c90:			; <UNDEFINED> instruction: 0x000138b0
   13c94:			; <UNDEFINED> instruction: 0x000138b0
   13c98:			; <UNDEFINED> instruction: 0x000138b0
   13c9c:			; <UNDEFINED> instruction: 0x000138b0
   13ca0:			; <UNDEFINED> instruction: 0x000138b0
   13ca4:			; <UNDEFINED> instruction: 0x000138b0
   13ca8:			; <UNDEFINED> instruction: 0x000138b0
   13cac:			; <UNDEFINED> instruction: 0x000138b0
   13cb0:			; <UNDEFINED> instruction: 0x000138b0
   13cb4:			; <UNDEFINED> instruction: 0x000138b0
   13cb8:			; <UNDEFINED> instruction: 0x000138b0
   13cbc:			; <UNDEFINED> instruction: 0x000138b0
   13cc0:	andeq	r3, r1, ip, lsl #7
   13cc4:	andeq	r3, r1, r4, lsr r2
   13cc8:			; <UNDEFINED> instruction: 0x000138b0
   13ccc:	andeq	r3, r1, ip, lsl #7
   13cd0:			; <UNDEFINED> instruction: 0x000138b0
   13cd4:	andeq	r3, r1, ip, lsl #7
   13cd8:			; <UNDEFINED> instruction: 0x000138b0
   13cdc:			; <UNDEFINED> instruction: 0x000138b0
   13ce0:			; <UNDEFINED> instruction: 0x000138b0
   13ce4:			; <UNDEFINED> instruction: 0x000138b0
   13ce8:			; <UNDEFINED> instruction: 0x000138b0
   13cec:			; <UNDEFINED> instruction: 0x000138b0
   13cf0:			; <UNDEFINED> instruction: 0x000138b0
   13cf4:			; <UNDEFINED> instruction: 0x000138b0
   13cf8:			; <UNDEFINED> instruction: 0x000138b0
   13cfc:			; <UNDEFINED> instruction: 0x000138b0
   13d00:			; <UNDEFINED> instruction: 0x000138b0
   13d04:			; <UNDEFINED> instruction: 0x000138b0
   13d08:			; <UNDEFINED> instruction: 0x000138b0
   13d0c:			; <UNDEFINED> instruction: 0x000138b0
   13d10:			; <UNDEFINED> instruction: 0x000138b0
   13d14:			; <UNDEFINED> instruction: 0x000138b0
   13d18:			; <UNDEFINED> instruction: 0x000138b0
   13d1c:			; <UNDEFINED> instruction: 0x000138b0
   13d20:			; <UNDEFINED> instruction: 0x000138b0
   13d24:			; <UNDEFINED> instruction: 0x000138b0
   13d28:			; <UNDEFINED> instruction: 0x000138b0
   13d2c:			; <UNDEFINED> instruction: 0x000138b0
   13d30:			; <UNDEFINED> instruction: 0x000138b0
   13d34:			; <UNDEFINED> instruction: 0x000138b0
   13d38:			; <UNDEFINED> instruction: 0x000138b0
   13d3c:			; <UNDEFINED> instruction: 0x000138b0
   13d40:	strdeq	r3, [r1], -r4
   13d44:	andeq	r3, r1, ip, lsl #7
   13d48:	strdeq	r3, [r1], -r4
   13d4c:	andeq	r3, r1, r4, asr #6
   13d50:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13d54:	strd	r6, [sp, #8]
   13d58:	strd	r8, [sp, #16]
   13d5c:	strd	sl, [sp, #24]
   13d60:	str	lr, [sp, #32]
   13d64:	sub	sp, sp, #52	; 0x34
   13d68:	mov	r5, r0
   13d6c:	str	r1, [sp, #24]
   13d70:	str	r2, [sp, #28]
   13d74:	mov	r4, r3
   13d78:	bl	10d30 <__errno_location@plt>
   13d7c:	str	r0, [sp, #32]
   13d80:	ldr	r3, [r0]
   13d84:	str	r3, [sp, #36]	; 0x24
   13d88:	movw	r3, #28892	; 0x70dc
   13d8c:	movt	r3, #2
   13d90:	ldr	r6, [r3]
   13d94:	cmn	r5, #-2147483647	; 0x80000001
   13d98:	movne	r3, #0
   13d9c:	moveq	r3, #1
   13da0:	orrs	r3, r3, r5, lsr #31
   13da4:	bne	13f08 <__snprintf_chk@plt+0x3118>
   13da8:	movw	r3, #28892	; 0x70dc
   13dac:	movt	r3, #2
   13db0:	ldr	r2, [r3, #4]
   13db4:	cmp	r2, r5
   13db8:	bgt	13e28 <__snprintf_chk@plt+0x3038>
   13dbc:	str	r2, [sp, #44]	; 0x2c
   13dc0:	add	r3, r3, #8
   13dc4:	cmp	r6, r3
   13dc8:	beq	13f0c <__snprintf_chk@plt+0x311c>
   13dcc:	sub	r2, r5, r2
   13dd0:	mov	r3, #8
   13dd4:	str	r3, [sp]
   13dd8:	mvn	r3, #-2147483648	; 0x80000000
   13ddc:	add	r2, r2, #1
   13de0:	add	r1, sp, #44	; 0x2c
   13de4:	mov	r0, r6
   13de8:	bl	14f10 <__snprintf_chk@plt+0x4120>
   13dec:	mov	r6, r0
   13df0:	movw	r3, #28892	; 0x70dc
   13df4:	movt	r3, #2
   13df8:	str	r0, [r3]
   13dfc:	movw	r7, #28892	; 0x70dc
   13e00:	movt	r7, #2
   13e04:	ldr	r0, [r7, #4]
   13e08:	ldr	r2, [sp, #44]	; 0x2c
   13e0c:	sub	r2, r2, r0
   13e10:	lsl	r2, r2, #3
   13e14:	mov	r1, #0
   13e18:	add	r0, r6, r0, lsl #3
   13e1c:	bl	10d54 <memset@plt>
   13e20:	ldr	r3, [sp, #44]	; 0x2c
   13e24:	str	r3, [r7, #4]
   13e28:	add	fp, r6, r5, lsl #3
   13e2c:	ldr	r8, [r6, r5, lsl #3]
   13e30:	ldr	r7, [fp, #4]
   13e34:	ldr	r3, [r4, #4]
   13e38:	orr	r9, r3, #1
   13e3c:	add	sl, r4, #8
   13e40:	ldr	r3, [r4, #44]	; 0x2c
   13e44:	str	r3, [sp, #16]
   13e48:	ldr	r3, [r4, #40]	; 0x28
   13e4c:	str	r3, [sp, #12]
   13e50:	str	sl, [sp, #8]
   13e54:	str	r9, [sp, #4]
   13e58:	ldr	r3, [r4]
   13e5c:	str	r3, [sp]
   13e60:	ldr	r3, [sp, #28]
   13e64:	ldr	r2, [sp, #24]
   13e68:	mov	r1, r8
   13e6c:	mov	r0, r7
   13e70:	bl	12658 <__snprintf_chk@plt+0x1868>
   13e74:	cmp	r8, r0
   13e78:	bhi	13edc <__snprintf_chk@plt+0x30ec>
   13e7c:	add	r8, r0, #1
   13e80:	str	r8, [r6, r5, lsl #3]
   13e84:	movw	r3, #29004	; 0x714c
   13e88:	movt	r3, #2
   13e8c:	cmp	r7, r3
   13e90:	beq	13e9c <__snprintf_chk@plt+0x30ac>
   13e94:	mov	r0, r7
   13e98:	bl	15460 <__snprintf_chk@plt+0x4670>
   13e9c:	mov	r0, r8
   13ea0:	bl	14d0c <__snprintf_chk@plt+0x3f1c>
   13ea4:	mov	r7, r0
   13ea8:	str	r0, [fp, #4]
   13eac:	ldr	r3, [r4, #44]	; 0x2c
   13eb0:	str	r3, [sp, #16]
   13eb4:	ldr	r3, [r4, #40]	; 0x28
   13eb8:	str	r3, [sp, #12]
   13ebc:	str	sl, [sp, #8]
   13ec0:	str	r9, [sp, #4]
   13ec4:	ldr	r3, [r4]
   13ec8:	str	r3, [sp]
   13ecc:	ldr	r3, [sp, #28]
   13ed0:	ldr	r2, [sp, #24]
   13ed4:	mov	r1, r8
   13ed8:	bl	12658 <__snprintf_chk@plt+0x1868>
   13edc:	ldr	r3, [sp, #32]
   13ee0:	ldr	r2, [sp, #36]	; 0x24
   13ee4:	str	r2, [r3]
   13ee8:	mov	r0, r7
   13eec:	add	sp, sp, #52	; 0x34
   13ef0:	ldrd	r4, [sp]
   13ef4:	ldrd	r6, [sp, #8]
   13ef8:	ldrd	r8, [sp, #16]
   13efc:	ldrd	sl, [sp, #24]
   13f00:	add	sp, sp, #32
   13f04:	pop	{pc}		; (ldr pc, [sp], #4)
   13f08:	bl	10de4 <abort@plt>
   13f0c:	sub	r2, r5, r2
   13f10:	mov	r3, #8
   13f14:	str	r3, [sp]
   13f18:	mvn	r3, #-2147483648	; 0x80000000
   13f1c:	add	r2, r2, #1
   13f20:	add	r1, sp, #44	; 0x2c
   13f24:	mov	r0, #0
   13f28:	bl	14f10 <__snprintf_chk@plt+0x4120>
   13f2c:	mov	r6, r0
   13f30:	movw	r3, #28892	; 0x70dc
   13f34:	movt	r3, #2
   13f38:	str	r0, [r3]
   13f3c:	ldrd	r2, [r3, #8]
   13f40:	strd	r2, [r0]
   13f44:	b	13dfc <__snprintf_chk@plt+0x300c>
   13f48:	strd	r4, [sp, #-16]!
   13f4c:	str	r6, [sp, #8]
   13f50:	str	lr, [sp, #12]
   13f54:	mov	r4, r0
   13f58:	bl	10d30 <__errno_location@plt>
   13f5c:	mov	r5, r0
   13f60:	ldr	r6, [r0]
   13f64:	cmp	r4, #0
   13f68:	ldr	r3, [pc, #32]	; 13f90 <__snprintf_chk@plt+0x31a0>
   13f6c:	moveq	r4, r3
   13f70:	mov	r1, #48	; 0x30
   13f74:	mov	r0, r4
   13f78:	bl	15080 <__snprintf_chk@plt+0x4290>
   13f7c:	str	r6, [r5]
   13f80:	ldrd	r4, [sp]
   13f84:	ldr	r6, [sp, #8]
   13f88:	add	sp, sp, #12
   13f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f90:	andeq	r7, r2, ip, asr #4
   13f94:	subs	r3, r0, #0
   13f98:	ldr	r2, [pc, #8]	; 13fa8 <__snprintf_chk@plt+0x31b8>
   13f9c:	moveq	r3, r2
   13fa0:	ldr	r0, [r3]
   13fa4:	bx	lr
   13fa8:	andeq	r7, r2, ip, asr #4
   13fac:	subs	r3, r0, #0
   13fb0:	ldr	r2, [pc, #8]	; 13fc0 <__snprintf_chk@plt+0x31d0>
   13fb4:	moveq	r3, r2
   13fb8:	str	r1, [r3]
   13fbc:	bx	lr
   13fc0:	andeq	r7, r2, ip, asr #4
   13fc4:	push	{lr}		; (str lr, [sp, #-4]!)
   13fc8:	subs	r3, r0, #0
   13fcc:	ldr	r0, [pc, #44]	; 14000 <__snprintf_chk@plt+0x3210>
   13fd0:	moveq	r3, r0
   13fd4:	add	r3, r3, #8
   13fd8:	lsr	lr, r1, #5
   13fdc:	and	r1, r1, #31
   13fe0:	ldr	ip, [r3, lr, lsl #2]
   13fe4:	lsr	r0, ip, r1
   13fe8:	eor	r2, r2, r0
   13fec:	and	r2, r2, #1
   13ff0:	eor	r1, ip, r2, lsl r1
   13ff4:	str	r1, [r3, lr, lsl #2]
   13ff8:	and	r0, r0, #1
   13ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   14000:	andeq	r7, r2, ip, asr #4
   14004:	subs	r3, r0, #0
   14008:	ldr	r2, [pc, #12]	; 1401c <__snprintf_chk@plt+0x322c>
   1400c:	moveq	r3, r2
   14010:	ldr	r0, [r3, #4]
   14014:	str	r1, [r3, #4]
   14018:	bx	lr
   1401c:	andeq	r7, r2, ip, asr #4
   14020:	subs	r3, r0, #0
   14024:	ldr	r0, [pc, #44]	; 14058 <__snprintf_chk@plt+0x3268>
   14028:	moveq	r3, r0
   1402c:	mov	r0, #10
   14030:	str	r0, [r3]
   14034:	cmp	r2, #0
   14038:	cmpne	r1, #0
   1403c:	beq	1404c <__snprintf_chk@plt+0x325c>
   14040:	str	r1, [r3, #40]	; 0x28
   14044:	str	r2, [r3, #44]	; 0x2c
   14048:	bx	lr
   1404c:	str	r4, [sp, #-8]!
   14050:	str	lr, [sp, #4]
   14054:	bl	10de4 <abort@plt>
   14058:	andeq	r7, r2, ip, asr #4
   1405c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14060:	strd	r6, [sp, #8]
   14064:	strd	r8, [sp, #16]
   14068:	str	sl, [sp, #24]
   1406c:	str	lr, [sp, #28]
   14070:	sub	sp, sp, #24
   14074:	mov	r7, r0
   14078:	mov	r8, r1
   1407c:	mov	r9, r2
   14080:	mov	sl, r3
   14084:	ldr	r4, [sp, #56]	; 0x38
   14088:	cmp	r4, #0
   1408c:	ldr	r3, [pc, #104]	; 140fc <__snprintf_chk@plt+0x330c>
   14090:	moveq	r4, r3
   14094:	bl	10d30 <__errno_location@plt>
   14098:	mov	r5, r0
   1409c:	ldr	r6, [r0]
   140a0:	ldr	r3, [r4, #44]	; 0x2c
   140a4:	str	r3, [sp, #16]
   140a8:	ldr	r3, [r4, #40]	; 0x28
   140ac:	str	r3, [sp, #12]
   140b0:	add	r3, r4, #8
   140b4:	str	r3, [sp, #8]
   140b8:	ldr	r3, [r4, #4]
   140bc:	str	r3, [sp, #4]
   140c0:	ldr	r3, [r4]
   140c4:	str	r3, [sp]
   140c8:	mov	r3, sl
   140cc:	mov	r2, r9
   140d0:	mov	r1, r8
   140d4:	mov	r0, r7
   140d8:	bl	12658 <__snprintf_chk@plt+0x1868>
   140dc:	str	r6, [r5]
   140e0:	add	sp, sp, #24
   140e4:	ldrd	r4, [sp]
   140e8:	ldrd	r6, [sp, #8]
   140ec:	ldrd	r8, [sp, #16]
   140f0:	ldr	sl, [sp, #24]
   140f4:	add	sp, sp, #28
   140f8:	pop	{pc}		; (ldr pc, [sp], #4)
   140fc:	andeq	r7, r2, ip, asr #4
   14100:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14104:	strd	r6, [sp, #8]
   14108:	strd	r8, [sp, #16]
   1410c:	strd	sl, [sp, #24]
   14110:	str	lr, [sp, #32]
   14114:	sub	sp, sp, #44	; 0x2c
   14118:	mov	r8, r0
   1411c:	mov	sl, r1
   14120:	mov	r6, r2
   14124:	subs	r4, r3, #0
   14128:	ldr	r3, [pc, #200]	; 141f8 <__snprintf_chk@plt+0x3408>
   1412c:	moveq	r4, r3
   14130:	bl	10d30 <__errno_location@plt>
   14134:	mov	r7, r0
   14138:	ldr	fp, [r0]
   1413c:	ldr	r5, [r4, #4]
   14140:	cmp	r6, #0
   14144:	orreq	r5, r5, #1
   14148:	add	r9, r4, #8
   1414c:	ldr	r3, [r4, #44]	; 0x2c
   14150:	str	r3, [sp, #16]
   14154:	ldr	r3, [r4, #40]	; 0x28
   14158:	str	r3, [sp, #12]
   1415c:	str	r9, [sp, #8]
   14160:	str	r5, [sp, #4]
   14164:	ldr	r3, [r4]
   14168:	str	r3, [sp]
   1416c:	str	sl, [sp, #36]	; 0x24
   14170:	mov	r3, sl
   14174:	str	r8, [sp, #32]
   14178:	mov	r2, r8
   1417c:	mov	r1, #0
   14180:	mov	r0, r1
   14184:	bl	12658 <__snprintf_chk@plt+0x1868>
   14188:	mov	sl, r0
   1418c:	add	r8, r0, #1
   14190:	mov	r0, r8
   14194:	bl	14d0c <__snprintf_chk@plt+0x3f1c>
   14198:	str	r0, [sp, #28]
   1419c:	ldr	r3, [r4, #44]	; 0x2c
   141a0:	str	r3, [sp, #16]
   141a4:	ldr	r3, [r4, #40]	; 0x28
   141a8:	str	r3, [sp, #12]
   141ac:	str	r9, [sp, #8]
   141b0:	str	r5, [sp, #4]
   141b4:	ldr	r3, [r4]
   141b8:	str	r3, [sp]
   141bc:	ldr	r3, [sp, #36]	; 0x24
   141c0:	ldr	r2, [sp, #32]
   141c4:	mov	r1, r8
   141c8:	bl	12658 <__snprintf_chk@plt+0x1868>
   141cc:	str	fp, [r7]
   141d0:	cmp	r6, #0
   141d4:	strne	sl, [r6]
   141d8:	ldr	r0, [sp, #28]
   141dc:	add	sp, sp, #44	; 0x2c
   141e0:	ldrd	r4, [sp]
   141e4:	ldrd	r6, [sp, #8]
   141e8:	ldrd	r8, [sp, #16]
   141ec:	ldrd	sl, [sp, #24]
   141f0:	add	sp, sp, #32
   141f4:	pop	{pc}		; (ldr pc, [sp], #4)
   141f8:	andeq	r7, r2, ip, asr #4
   141fc:	str	r4, [sp, #-8]!
   14200:	str	lr, [sp, #4]
   14204:	mov	r3, r2
   14208:	mov	r2, #0
   1420c:	bl	14100 <__snprintf_chk@plt+0x3310>
   14210:	ldr	r4, [sp]
   14214:	add	sp, sp, #4
   14218:	pop	{pc}		; (ldr pc, [sp], #4)
   1421c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14220:	strd	r6, [sp, #8]
   14224:	str	r8, [sp, #16]
   14228:	str	lr, [sp, #20]
   1422c:	movw	r3, #28892	; 0x70dc
   14230:	movt	r3, #2
   14234:	ldr	r7, [r3]
   14238:	ldr	r3, [r3, #4]
   1423c:	cmp	r3, #1
   14240:	ble	1426c <__snprintf_chk@plt+0x347c>
   14244:	mov	r4, #1
   14248:	add	r6, r7, #4
   1424c:	movw	r5, #28892	; 0x70dc
   14250:	movt	r5, #2
   14254:	ldr	r0, [r6, r4, lsl #3]
   14258:	bl	15460 <__snprintf_chk@plt+0x4670>
   1425c:	add	r4, r4, #1
   14260:	ldr	r3, [r5, #4]
   14264:	cmp	r3, r4
   14268:	bgt	14254 <__snprintf_chk@plt+0x3464>
   1426c:	ldr	r0, [r7, #4]
   14270:	movw	r3, #29004	; 0x714c
   14274:	movt	r3, #2
   14278:	cmp	r0, r3
   1427c:	beq	142a0 <__snprintf_chk@plt+0x34b0>
   14280:	bl	15460 <__snprintf_chk@plt+0x4670>
   14284:	movw	r3, #28892	; 0x70dc
   14288:	movt	r3, #2
   1428c:	mov	r2, #256	; 0x100
   14290:	str	r2, [r3, #8]
   14294:	movw	r2, #29004	; 0x714c
   14298:	movt	r2, #2
   1429c:	str	r2, [r3, #12]
   142a0:	ldr	r3, [pc, #64]	; 142e8 <__snprintf_chk@plt+0x34f8>
   142a4:	cmp	r7, r3
   142a8:	beq	142c4 <__snprintf_chk@plt+0x34d4>
   142ac:	mov	r0, r7
   142b0:	bl	15460 <__snprintf_chk@plt+0x4670>
   142b4:	movw	r3, #28892	; 0x70dc
   142b8:	movt	r3, #2
   142bc:	add	r2, r3, #8
   142c0:	str	r2, [r3]
   142c4:	movw	r3, #28892	; 0x70dc
   142c8:	movt	r3, #2
   142cc:	mov	r2, #1
   142d0:	str	r2, [r3, #4]
   142d4:	ldrd	r4, [sp]
   142d8:	ldrd	r6, [sp, #8]
   142dc:	ldr	r8, [sp, #16]
   142e0:	add	sp, sp, #20
   142e4:	pop	{pc}		; (ldr pc, [sp], #4)
   142e8:	andeq	r7, r2, r4, ror #1
   142ec:	str	r4, [sp, #-8]!
   142f0:	str	lr, [sp, #4]
   142f4:	ldr	r3, [pc, #16]	; 1430c <__snprintf_chk@plt+0x351c>
   142f8:	mvn	r2, #0
   142fc:	bl	13d50 <__snprintf_chk@plt+0x2f60>
   14300:	ldr	r4, [sp]
   14304:	add	sp, sp, #4
   14308:	pop	{pc}		; (ldr pc, [sp], #4)
   1430c:	andeq	r7, r2, ip, asr #4
   14310:	str	r4, [sp, #-8]!
   14314:	str	lr, [sp, #4]
   14318:	ldr	r3, [pc, #12]	; 1432c <__snprintf_chk@plt+0x353c>
   1431c:	bl	13d50 <__snprintf_chk@plt+0x2f60>
   14320:	ldr	r4, [sp]
   14324:	add	sp, sp, #4
   14328:	pop	{pc}		; (ldr pc, [sp], #4)
   1432c:	andeq	r7, r2, ip, asr #4
   14330:	str	r4, [sp, #-8]!
   14334:	str	lr, [sp, #4]
   14338:	mov	r1, r0
   1433c:	mov	r0, #0
   14340:	bl	142ec <__snprintf_chk@plt+0x34fc>
   14344:	ldr	r4, [sp]
   14348:	add	sp, sp, #4
   1434c:	pop	{pc}		; (ldr pc, [sp], #4)
   14350:	str	r4, [sp, #-8]!
   14354:	str	lr, [sp, #4]
   14358:	mov	r2, r1
   1435c:	mov	r1, r0
   14360:	mov	r0, #0
   14364:	bl	14310 <__snprintf_chk@plt+0x3520>
   14368:	ldr	r4, [sp]
   1436c:	add	sp, sp, #4
   14370:	pop	{pc}		; (ldr pc, [sp], #4)
   14374:	strd	r4, [sp, #-12]!
   14378:	str	lr, [sp, #8]
   1437c:	sub	sp, sp, #52	; 0x34
   14380:	mov	r4, r0
   14384:	mov	r5, r2
   14388:	mov	r0, sp
   1438c:	bl	124c4 <__snprintf_chk@plt+0x16d4>
   14390:	mov	r3, sp
   14394:	mvn	r2, #0
   14398:	mov	r1, r5
   1439c:	mov	r0, r4
   143a0:	bl	13d50 <__snprintf_chk@plt+0x2f60>
   143a4:	add	sp, sp, #52	; 0x34
   143a8:	ldrd	r4, [sp]
   143ac:	add	sp, sp, #8
   143b0:	pop	{pc}		; (ldr pc, [sp], #4)
   143b4:	strd	r4, [sp, #-16]!
   143b8:	str	r6, [sp, #8]
   143bc:	str	lr, [sp, #12]
   143c0:	sub	sp, sp, #48	; 0x30
   143c4:	mov	r4, r0
   143c8:	mov	r5, r2
   143cc:	mov	r6, r3
   143d0:	mov	r0, sp
   143d4:	bl	124c4 <__snprintf_chk@plt+0x16d4>
   143d8:	mov	r3, sp
   143dc:	mov	r2, r6
   143e0:	mov	r1, r5
   143e4:	mov	r0, r4
   143e8:	bl	13d50 <__snprintf_chk@plt+0x2f60>
   143ec:	add	sp, sp, #48	; 0x30
   143f0:	ldrd	r4, [sp]
   143f4:	ldr	r6, [sp, #8]
   143f8:	add	sp, sp, #12
   143fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14400:	str	r4, [sp, #-8]!
   14404:	str	lr, [sp, #4]
   14408:	mov	r2, r1
   1440c:	mov	r1, r0
   14410:	mov	r0, #0
   14414:	bl	14374 <__snprintf_chk@plt+0x3584>
   14418:	ldr	r4, [sp]
   1441c:	add	sp, sp, #4
   14420:	pop	{pc}		; (ldr pc, [sp], #4)
   14424:	str	r4, [sp, #-8]!
   14428:	str	lr, [sp, #4]
   1442c:	mov	r3, r2
   14430:	mov	r2, r1
   14434:	mov	r1, r0
   14438:	mov	r0, #0
   1443c:	bl	143b4 <__snprintf_chk@plt+0x35c4>
   14440:	ldr	r4, [sp]
   14444:	add	sp, sp, #4
   14448:	pop	{pc}		; (ldr pc, [sp], #4)
   1444c:	strd	r4, [sp, #-12]!
   14450:	str	lr, [sp, #8]
   14454:	sub	sp, sp, #52	; 0x34
   14458:	mov	r4, r0
   1445c:	mov	r5, r1
   14460:	mov	r1, r2
   14464:	ldr	r0, [pc, #92]	; 144c8 <__snprintf_chk@plt+0x36d8>
   14468:	ldrd	r2, [r0]
   1446c:	strd	r2, [sp]
   14470:	ldrd	r2, [r0, #8]
   14474:	strd	r2, [sp, #8]
   14478:	ldrd	r2, [r0, #16]
   1447c:	strd	r2, [sp, #16]
   14480:	ldrd	r2, [r0, #24]
   14484:	strd	r2, [sp, #24]
   14488:	ldrd	r2, [r0, #32]
   1448c:	strd	r2, [sp, #32]
   14490:	ldrd	r2, [r0, #40]	; 0x28
   14494:	strd	r2, [sp, #40]	; 0x28
   14498:	mov	r2, #1
   1449c:	mov	r0, sp
   144a0:	bl	13fc4 <__snprintf_chk@plt+0x31d4>
   144a4:	mov	r3, sp
   144a8:	mov	r2, r5
   144ac:	mov	r1, r4
   144b0:	mov	r0, #0
   144b4:	bl	13d50 <__snprintf_chk@plt+0x2f60>
   144b8:	add	sp, sp, #52	; 0x34
   144bc:	ldrd	r4, [sp]
   144c0:	add	sp, sp, #8
   144c4:	pop	{pc}		; (ldr pc, [sp], #4)
   144c8:	andeq	r7, r2, ip, asr #4
   144cc:	str	r4, [sp, #-8]!
   144d0:	str	lr, [sp, #4]
   144d4:	mov	r2, r1
   144d8:	mvn	r1, #0
   144dc:	bl	1444c <__snprintf_chk@plt+0x365c>
   144e0:	ldr	r4, [sp]
   144e4:	add	sp, sp, #4
   144e8:	pop	{pc}		; (ldr pc, [sp], #4)
   144ec:	str	r4, [sp, #-8]!
   144f0:	str	lr, [sp, #4]
   144f4:	mov	r1, #58	; 0x3a
   144f8:	bl	144cc <__snprintf_chk@plt+0x36dc>
   144fc:	ldr	r4, [sp]
   14500:	add	sp, sp, #4
   14504:	pop	{pc}		; (ldr pc, [sp], #4)
   14508:	str	r4, [sp, #-8]!
   1450c:	str	lr, [sp, #4]
   14510:	mov	r2, #58	; 0x3a
   14514:	bl	1444c <__snprintf_chk@plt+0x365c>
   14518:	ldr	r4, [sp]
   1451c:	add	sp, sp, #4
   14520:	pop	{pc}		; (ldr pc, [sp], #4)
   14524:	strd	r4, [sp, #-12]!
   14528:	str	lr, [sp, #8]
   1452c:	sub	sp, sp, #100	; 0x64
   14530:	mov	r4, r0
   14534:	mov	r5, r2
   14538:	mov	r0, sp
   1453c:	bl	124c4 <__snprintf_chk@plt+0x16d4>
   14540:	ldrd	r2, [sp]
   14544:	strd	r2, [sp, #48]	; 0x30
   14548:	ldrd	r2, [sp, #8]
   1454c:	strd	r2, [sp, #56]	; 0x38
   14550:	ldrd	r2, [sp, #16]
   14554:	strd	r2, [sp, #64]	; 0x40
   14558:	ldrd	r2, [sp, #24]
   1455c:	strd	r2, [sp, #72]	; 0x48
   14560:	ldrd	r2, [sp, #32]
   14564:	strd	r2, [sp, #80]	; 0x50
   14568:	ldrd	r2, [sp, #40]	; 0x28
   1456c:	strd	r2, [sp, #88]	; 0x58
   14570:	mov	r2, #1
   14574:	mov	r1, #58	; 0x3a
   14578:	add	r0, sp, #48	; 0x30
   1457c:	bl	13fc4 <__snprintf_chk@plt+0x31d4>
   14580:	add	r3, sp, #48	; 0x30
   14584:	mvn	r2, #0
   14588:	mov	r1, r5
   1458c:	mov	r0, r4
   14590:	bl	13d50 <__snprintf_chk@plt+0x2f60>
   14594:	add	sp, sp, #100	; 0x64
   14598:	ldrd	r4, [sp]
   1459c:	add	sp, sp, #8
   145a0:	pop	{pc}		; (ldr pc, [sp], #4)
   145a4:	strd	r4, [sp, #-20]!	; 0xffffffec
   145a8:	strd	r6, [sp, #8]
   145ac:	str	lr, [sp, #16]
   145b0:	sub	sp, sp, #52	; 0x34
   145b4:	mov	r4, r0
   145b8:	mov	r5, r3
   145bc:	ldr	r3, [pc, #92]	; 14620 <__snprintf_chk@plt+0x3830>
   145c0:	ldrd	r6, [r3]
   145c4:	strd	r6, [sp]
   145c8:	ldrd	r6, [r3, #8]
   145cc:	strd	r6, [sp, #8]
   145d0:	ldrd	r6, [r3, #16]
   145d4:	strd	r6, [sp, #16]
   145d8:	ldrd	r6, [r3, #24]
   145dc:	strd	r6, [sp, #24]
   145e0:	ldrd	r6, [r3, #32]
   145e4:	strd	r6, [sp, #32]
   145e8:	ldrd	r6, [r3, #40]	; 0x28
   145ec:	strd	r6, [sp, #40]	; 0x28
   145f0:	mov	r0, sp
   145f4:	bl	14020 <__snprintf_chk@plt+0x3230>
   145f8:	mov	r3, sp
   145fc:	ldr	r2, [sp, #72]	; 0x48
   14600:	mov	r1, r5
   14604:	mov	r0, r4
   14608:	bl	13d50 <__snprintf_chk@plt+0x2f60>
   1460c:	add	sp, sp, #52	; 0x34
   14610:	ldrd	r4, [sp]
   14614:	ldrd	r6, [sp, #8]
   14618:	add	sp, sp, #16
   1461c:	pop	{pc}		; (ldr pc, [sp], #4)
   14620:	andeq	r7, r2, ip, asr #4
   14624:	push	{lr}		; (str lr, [sp, #-4]!)
   14628:	sub	sp, sp, #12
   1462c:	mvn	ip, #0
   14630:	str	ip, [sp]
   14634:	bl	145a4 <__snprintf_chk@plt+0x37b4>
   14638:	add	sp, sp, #12
   1463c:	pop	{pc}		; (ldr pc, [sp], #4)
   14640:	str	r4, [sp, #-8]!
   14644:	str	lr, [sp, #4]
   14648:	mov	r3, r2
   1464c:	mov	r2, r1
   14650:	mov	r1, r0
   14654:	mov	r0, #0
   14658:	bl	14624 <__snprintf_chk@plt+0x3834>
   1465c:	ldr	r4, [sp]
   14660:	add	sp, sp, #4
   14664:	pop	{pc}		; (ldr pc, [sp], #4)
   14668:	push	{lr}		; (str lr, [sp, #-4]!)
   1466c:	sub	sp, sp, #12
   14670:	str	r3, [sp]
   14674:	mov	r3, r2
   14678:	mov	r2, r1
   1467c:	mov	r1, r0
   14680:	mov	r0, #0
   14684:	bl	145a4 <__snprintf_chk@plt+0x37b4>
   14688:	add	sp, sp, #12
   1468c:	pop	{pc}		; (ldr pc, [sp], #4)
   14690:	str	r4, [sp, #-8]!
   14694:	str	lr, [sp, #4]
   14698:	ldr	r3, [pc, #12]	; 146ac <__snprintf_chk@plt+0x38bc>
   1469c:	bl	13d50 <__snprintf_chk@plt+0x2f60>
   146a0:	ldr	r4, [sp]
   146a4:	add	sp, sp, #4
   146a8:	pop	{pc}		; (ldr pc, [sp], #4)
   146ac:	andeq	r7, r2, ip, ror #1
   146b0:	str	r4, [sp, #-8]!
   146b4:	str	lr, [sp, #4]
   146b8:	mov	r2, r1
   146bc:	mov	r1, r0
   146c0:	mov	r0, #0
   146c4:	bl	14690 <__snprintf_chk@plt+0x38a0>
   146c8:	ldr	r4, [sp]
   146cc:	add	sp, sp, #4
   146d0:	pop	{pc}		; (ldr pc, [sp], #4)
   146d4:	str	r4, [sp, #-8]!
   146d8:	str	lr, [sp, #4]
   146dc:	mvn	r2, #0
   146e0:	bl	14690 <__snprintf_chk@plt+0x38a0>
   146e4:	ldr	r4, [sp]
   146e8:	add	sp, sp, #4
   146ec:	pop	{pc}		; (ldr pc, [sp], #4)
   146f0:	str	r4, [sp, #-8]!
   146f4:	str	lr, [sp, #4]
   146f8:	mov	r1, r0
   146fc:	mov	r0, #0
   14700:	bl	146d4 <__snprintf_chk@plt+0x38e4>
   14704:	ldr	r4, [sp]
   14708:	add	sp, sp, #4
   1470c:	pop	{pc}		; (ldr pc, [sp], #4)
   14710:	strd	r4, [sp, #-16]!
   14714:	str	r6, [sp, #8]
   14718:	str	lr, [sp, #12]
   1471c:	sub	sp, sp, #32
   14720:	mov	r4, r0
   14724:	ldr	r5, [sp, #48]	; 0x30
   14728:	ldr	r6, [sp, #52]	; 0x34
   1472c:	cmp	r1, #0
   14730:	beq	147fc <__snprintf_chk@plt+0x3a0c>
   14734:	str	r3, [sp, #4]
   14738:	str	r2, [sp]
   1473c:	mov	r3, r1
   14740:	movw	r2, #24552	; 0x5fe8
   14744:	movt	r2, #1
   14748:	mov	r1, #1
   1474c:	bl	10d84 <__fprintf_chk@plt>
   14750:	mov	r2, #5
   14754:	movw	r1, #24572	; 0x5ffc
   14758:	movt	r1, #1
   1475c:	mov	r0, #0
   14760:	bl	10c40 <dcgettext@plt>
   14764:	movw	r3, #2022	; 0x7e6
   14768:	str	r3, [sp]
   1476c:	mov	r3, r0
   14770:	movw	r2, #25300	; 0x62d4
   14774:	movt	r2, #1
   14778:	mov	r1, #1
   1477c:	mov	r0, r4
   14780:	bl	10d84 <__fprintf_chk@plt>
   14784:	mov	r1, r4
   14788:	mov	r0, #10
   1478c:	bl	10c34 <fputc_unlocked@plt>
   14790:	mov	r2, #5
   14794:	movw	r1, #24576	; 0x6000
   14798:	movt	r1, #1
   1479c:	mov	r0, #0
   147a0:	bl	10c40 <dcgettext@plt>
   147a4:	movw	r3, #24748	; 0x60ac
   147a8:	movt	r3, #1
   147ac:	mov	r2, r0
   147b0:	mov	r1, #1
   147b4:	mov	r0, r4
   147b8:	bl	10d84 <__fprintf_chk@plt>
   147bc:	mov	r1, r4
   147c0:	mov	r0, #10
   147c4:	bl	10c34 <fputc_unlocked@plt>
   147c8:	cmp	r6, #9
   147cc:	ldrls	pc, [pc, r6, lsl #2]
   147d0:	b	14ad4 <__snprintf_chk@plt+0x3ce4>
   147d4:	andeq	r4, r1, r0, asr #16
   147d8:	andeq	r4, r1, r8, lsl r8
   147dc:	andeq	r4, r1, r4, asr r8
   147e0:	andeq	r4, r1, r8, lsl #17
   147e4:	andeq	r4, r1, r4, asr #17
   147e8:	andeq	r4, r1, r8, lsl #18
   147ec:	andeq	r4, r1, r4, asr r9
   147f0:	andeq	r4, r1, r8, lsr #19
   147f4:	andeq	r4, r1, r4, lsl #20
   147f8:	andeq	r4, r1, r8, ror #20
   147fc:	str	r3, [sp]
   14800:	mov	r3, r2
   14804:	movw	r2, #24564	; 0x5ff4
   14808:	movt	r2, #1
   1480c:	mov	r1, #1
   14810:	bl	10d84 <__fprintf_chk@plt>
   14814:	b	14750 <__snprintf_chk@plt+0x3960>
   14818:	mov	r2, #5
   1481c:	movw	r1, #24784	; 0x60d0
   14820:	movt	r1, #1
   14824:	mov	r0, #0
   14828:	bl	10c40 <dcgettext@plt>
   1482c:	ldr	r3, [r5]
   14830:	mov	r2, r0
   14834:	mov	r1, #1
   14838:	mov	r0, r4
   1483c:	bl	10d84 <__fprintf_chk@plt>
   14840:	add	sp, sp, #32
   14844:	ldrd	r4, [sp]
   14848:	ldr	r6, [sp, #8]
   1484c:	add	sp, sp, #12
   14850:	pop	{pc}		; (ldr pc, [sp], #4)
   14854:	mov	r2, #5
   14858:	movw	r1, #24800	; 0x60e0
   1485c:	movt	r1, #1
   14860:	mov	r0, #0
   14864:	bl	10c40 <dcgettext@plt>
   14868:	ldr	r3, [r5, #4]
   1486c:	str	r3, [sp]
   14870:	ldr	r3, [r5]
   14874:	mov	r2, r0
   14878:	mov	r1, #1
   1487c:	mov	r0, r4
   14880:	bl	10d84 <__fprintf_chk@plt>
   14884:	b	14840 <__snprintf_chk@plt+0x3a50>
   14888:	mov	r2, #5
   1488c:	movw	r1, #24824	; 0x60f8
   14890:	movt	r1, #1
   14894:	mov	r0, #0
   14898:	bl	10c40 <dcgettext@plt>
   1489c:	ldr	r3, [r5, #8]
   148a0:	str	r3, [sp, #4]
   148a4:	ldr	r3, [r5, #4]
   148a8:	str	r3, [sp]
   148ac:	ldr	r3, [r5]
   148b0:	mov	r2, r0
   148b4:	mov	r1, #1
   148b8:	mov	r0, r4
   148bc:	bl	10d84 <__fprintf_chk@plt>
   148c0:	b	14840 <__snprintf_chk@plt+0x3a50>
   148c4:	mov	r2, #5
   148c8:	movw	r1, #24852	; 0x6114
   148cc:	movt	r1, #1
   148d0:	mov	r0, #0
   148d4:	bl	10c40 <dcgettext@plt>
   148d8:	ldr	r3, [r5, #12]
   148dc:	str	r3, [sp, #8]
   148e0:	ldr	r3, [r5, #8]
   148e4:	str	r3, [sp, #4]
   148e8:	ldr	r3, [r5, #4]
   148ec:	str	r3, [sp]
   148f0:	ldr	r3, [r5]
   148f4:	mov	r2, r0
   148f8:	mov	r1, #1
   148fc:	mov	r0, r4
   14900:	bl	10d84 <__fprintf_chk@plt>
   14904:	b	14840 <__snprintf_chk@plt+0x3a50>
   14908:	mov	r2, #5
   1490c:	movw	r1, #24884	; 0x6134
   14910:	movt	r1, #1
   14914:	mov	r0, #0
   14918:	bl	10c40 <dcgettext@plt>
   1491c:	ldr	r3, [r5, #16]
   14920:	str	r3, [sp, #12]
   14924:	ldr	r3, [r5, #12]
   14928:	str	r3, [sp, #8]
   1492c:	ldr	r3, [r5, #8]
   14930:	str	r3, [sp, #4]
   14934:	ldr	r3, [r5, #4]
   14938:	str	r3, [sp]
   1493c:	ldr	r3, [r5]
   14940:	mov	r2, r0
   14944:	mov	r1, #1
   14948:	mov	r0, r4
   1494c:	bl	10d84 <__fprintf_chk@plt>
   14950:	b	14840 <__snprintf_chk@plt+0x3a50>
   14954:	mov	r2, #5
   14958:	movw	r1, #24920	; 0x6158
   1495c:	movt	r1, #1
   14960:	mov	r0, #0
   14964:	bl	10c40 <dcgettext@plt>
   14968:	ldr	r3, [r5, #20]
   1496c:	str	r3, [sp, #16]
   14970:	ldr	r3, [r5, #16]
   14974:	str	r3, [sp, #12]
   14978:	ldr	r3, [r5, #12]
   1497c:	str	r3, [sp, #8]
   14980:	ldr	r3, [r5, #8]
   14984:	str	r3, [sp, #4]
   14988:	ldr	r3, [r5, #4]
   1498c:	str	r3, [sp]
   14990:	ldr	r3, [r5]
   14994:	mov	r2, r0
   14998:	mov	r1, #1
   1499c:	mov	r0, r4
   149a0:	bl	10d84 <__fprintf_chk@plt>
   149a4:	b	14840 <__snprintf_chk@plt+0x3a50>
   149a8:	mov	r2, #5
   149ac:	movw	r1, #24960	; 0x6180
   149b0:	movt	r1, #1
   149b4:	mov	r0, #0
   149b8:	bl	10c40 <dcgettext@plt>
   149bc:	ldr	r3, [r5, #24]
   149c0:	str	r3, [sp, #20]
   149c4:	ldr	r3, [r5, #20]
   149c8:	str	r3, [sp, #16]
   149cc:	ldr	r3, [r5, #16]
   149d0:	str	r3, [sp, #12]
   149d4:	ldr	r3, [r5, #12]
   149d8:	str	r3, [sp, #8]
   149dc:	ldr	r3, [r5, #8]
   149e0:	str	r3, [sp, #4]
   149e4:	ldr	r3, [r5, #4]
   149e8:	str	r3, [sp]
   149ec:	ldr	r3, [r5]
   149f0:	mov	r2, r0
   149f4:	mov	r1, #1
   149f8:	mov	r0, r4
   149fc:	bl	10d84 <__fprintf_chk@plt>
   14a00:	b	14840 <__snprintf_chk@plt+0x3a50>
   14a04:	mov	r2, #5
   14a08:	movw	r1, #25004	; 0x61ac
   14a0c:	movt	r1, #1
   14a10:	mov	r0, #0
   14a14:	bl	10c40 <dcgettext@plt>
   14a18:	ldr	r3, [r5, #28]
   14a1c:	str	r3, [sp, #24]
   14a20:	ldr	r3, [r5, #24]
   14a24:	str	r3, [sp, #20]
   14a28:	ldr	r3, [r5, #20]
   14a2c:	str	r3, [sp, #16]
   14a30:	ldr	r3, [r5, #16]
   14a34:	str	r3, [sp, #12]
   14a38:	ldr	r3, [r5, #12]
   14a3c:	str	r3, [sp, #8]
   14a40:	ldr	r3, [r5, #8]
   14a44:	str	r3, [sp, #4]
   14a48:	ldr	r3, [r5, #4]
   14a4c:	str	r3, [sp]
   14a50:	ldr	r3, [r5]
   14a54:	mov	r2, r0
   14a58:	mov	r1, #1
   14a5c:	mov	r0, r4
   14a60:	bl	10d84 <__fprintf_chk@plt>
   14a64:	b	14840 <__snprintf_chk@plt+0x3a50>
   14a68:	mov	r2, #5
   14a6c:	movw	r1, #25052	; 0x61dc
   14a70:	movt	r1, #1
   14a74:	mov	r0, #0
   14a78:	bl	10c40 <dcgettext@plt>
   14a7c:	ldr	r3, [r5, #32]
   14a80:	str	r3, [sp, #28]
   14a84:	ldr	r3, [r5, #28]
   14a88:	str	r3, [sp, #24]
   14a8c:	ldr	r3, [r5, #24]
   14a90:	str	r3, [sp, #20]
   14a94:	ldr	r3, [r5, #20]
   14a98:	str	r3, [sp, #16]
   14a9c:	ldr	r3, [r5, #16]
   14aa0:	str	r3, [sp, #12]
   14aa4:	ldr	r3, [r5, #12]
   14aa8:	str	r3, [sp, #8]
   14aac:	ldr	r3, [r5, #8]
   14ab0:	str	r3, [sp, #4]
   14ab4:	ldr	r3, [r5, #4]
   14ab8:	str	r3, [sp]
   14abc:	ldr	r3, [r5]
   14ac0:	mov	r2, r0
   14ac4:	mov	r1, #1
   14ac8:	mov	r0, r4
   14acc:	bl	10d84 <__fprintf_chk@plt>
   14ad0:	b	14840 <__snprintf_chk@plt+0x3a50>
   14ad4:	mov	r2, #5
   14ad8:	movw	r1, #25104	; 0x6210
   14adc:	movt	r1, #1
   14ae0:	mov	r0, #0
   14ae4:	bl	10c40 <dcgettext@plt>
   14ae8:	ldr	r3, [r5, #32]
   14aec:	str	r3, [sp, #28]
   14af0:	ldr	r3, [r5, #28]
   14af4:	str	r3, [sp, #24]
   14af8:	ldr	r3, [r5, #24]
   14afc:	str	r3, [sp, #20]
   14b00:	ldr	r3, [r5, #20]
   14b04:	str	r3, [sp, #16]
   14b08:	ldr	r3, [r5, #16]
   14b0c:	str	r3, [sp, #12]
   14b10:	ldr	r3, [r5, #12]
   14b14:	str	r3, [sp, #8]
   14b18:	ldr	r3, [r5, #8]
   14b1c:	str	r3, [sp, #4]
   14b20:	ldr	r3, [r5, #4]
   14b24:	str	r3, [sp]
   14b28:	ldr	r3, [r5]
   14b2c:	mov	r2, r0
   14b30:	mov	r1, #1
   14b34:	mov	r0, r4
   14b38:	bl	10d84 <__fprintf_chk@plt>
   14b3c:	b	14840 <__snprintf_chk@plt+0x3a50>
   14b40:	strd	r4, [sp, #-12]!
   14b44:	str	lr, [sp, #8]
   14b48:	sub	sp, sp, #12
   14b4c:	ldr	r5, [sp, #24]
   14b50:	ldr	ip, [r5]
   14b54:	cmp	ip, #0
   14b58:	beq	14b90 <__snprintf_chk@plt+0x3da0>
   14b5c:	mov	lr, r5
   14b60:	mov	ip, #0
   14b64:	add	ip, ip, #1
   14b68:	ldr	r4, [lr, #4]!
   14b6c:	cmp	r4, #0
   14b70:	bne	14b64 <__snprintf_chk@plt+0x3d74>
   14b74:	str	ip, [sp, #4]
   14b78:	str	r5, [sp]
   14b7c:	bl	14710 <__snprintf_chk@plt+0x3920>
   14b80:	add	sp, sp, #12
   14b84:	ldrd	r4, [sp]
   14b88:	add	sp, sp, #8
   14b8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b90:	mov	ip, #0
   14b94:	b	14b74 <__snprintf_chk@plt+0x3d84>
   14b98:	strd	r4, [sp, #-12]!
   14b9c:	str	lr, [sp, #8]
   14ba0:	sub	sp, sp, #52	; 0x34
   14ba4:	ldr	r5, [sp, #64]	; 0x40
   14ba8:	add	r4, sp, #8
   14bac:	mov	ip, #0
   14bb0:	ldr	lr, [r5], #4
   14bb4:	str	lr, [r4], #4
   14bb8:	cmp	lr, #0
   14bbc:	beq	14bcc <__snprintf_chk@plt+0x3ddc>
   14bc0:	add	ip, ip, #1
   14bc4:	cmp	ip, #10
   14bc8:	bne	14bb0 <__snprintf_chk@plt+0x3dc0>
   14bcc:	str	ip, [sp, #4]
   14bd0:	add	ip, sp, #8
   14bd4:	str	ip, [sp]
   14bd8:	bl	14710 <__snprintf_chk@plt+0x3920>
   14bdc:	add	sp, sp, #52	; 0x34
   14be0:	ldrd	r4, [sp]
   14be4:	add	sp, sp, #8
   14be8:	pop	{pc}		; (ldr pc, [sp], #4)
   14bec:	push	{r3}		; (str r3, [sp, #-4]!)
   14bf0:	push	{lr}		; (str lr, [sp, #-4]!)
   14bf4:	sub	sp, sp, #16
   14bf8:	add	r3, sp, #24
   14bfc:	str	r3, [sp, #12]
   14c00:	str	r3, [sp]
   14c04:	ldr	r3, [sp, #20]
   14c08:	bl	14b98 <__snprintf_chk@plt+0x3da8>
   14c0c:	add	sp, sp, #16
   14c10:	pop	{lr}		; (ldr lr, [sp], #4)
   14c14:	add	sp, sp, #4
   14c18:	bx	lr
   14c1c:	str	r4, [sp, #-8]!
   14c20:	str	lr, [sp, #4]
   14c24:	movw	r3, #28980	; 0x7134
   14c28:	movt	r3, #2
   14c2c:	ldr	r1, [r3]
   14c30:	mov	r0, #10
   14c34:	bl	10c34 <fputc_unlocked@plt>
   14c38:	mov	r2, #5
   14c3c:	movw	r1, #25164	; 0x624c
   14c40:	movt	r1, #1
   14c44:	mov	r0, #0
   14c48:	bl	10c40 <dcgettext@plt>
   14c4c:	movw	r2, #25184	; 0x6260
   14c50:	movt	r2, #1
   14c54:	mov	r1, r0
   14c58:	mov	r0, #1
   14c5c:	bl	10d60 <__printf_chk@plt>
   14c60:	mov	r2, #5
   14c64:	movw	r1, #25208	; 0x6278
   14c68:	movt	r1, #1
   14c6c:	mov	r0, #0
   14c70:	bl	10c40 <dcgettext@plt>
   14c74:	movw	r3, #22872	; 0x5958
   14c78:	movt	r3, #1
   14c7c:	movw	r2, #22912	; 0x5980
   14c80:	movt	r2, #1
   14c84:	mov	r1, r0
   14c88:	mov	r0, #1
   14c8c:	bl	10d60 <__printf_chk@plt>
   14c90:	mov	r2, #5
   14c94:	movw	r1, #25228	; 0x628c
   14c98:	movt	r1, #1
   14c9c:	mov	r0, #0
   14ca0:	bl	10c40 <dcgettext@plt>
   14ca4:	movw	r2, #25268	; 0x62b4
   14ca8:	movt	r2, #1
   14cac:	mov	r1, r0
   14cb0:	mov	r0, #1
   14cb4:	bl	10d60 <__printf_chk@plt>
   14cb8:	ldr	r4, [sp]
   14cbc:	add	sp, sp, #4
   14cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   14cc4:	str	r4, [sp, #-8]!
   14cc8:	str	lr, [sp, #4]
   14ccc:	bl	15210 <__snprintf_chk@plt+0x4420>
   14cd0:	cmp	r0, #0
   14cd4:	beq	14ce4 <__snprintf_chk@plt+0x3ef4>
   14cd8:	ldr	r4, [sp]
   14cdc:	add	sp, sp, #4
   14ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ce4:	bl	15158 <__snprintf_chk@plt+0x4368>
   14ce8:	str	r4, [sp, #-8]!
   14cec:	str	lr, [sp, #4]
   14cf0:	bl	15210 <__snprintf_chk@plt+0x4420>
   14cf4:	cmp	r0, #0
   14cf8:	beq	14d08 <__snprintf_chk@plt+0x3f18>
   14cfc:	ldr	r4, [sp]
   14d00:	add	sp, sp, #4
   14d04:	pop	{pc}		; (ldr pc, [sp], #4)
   14d08:	bl	15158 <__snprintf_chk@plt+0x4368>
   14d0c:	str	r4, [sp, #-8]!
   14d10:	str	lr, [sp, #4]
   14d14:	bl	14cc4 <__snprintf_chk@plt+0x3ed4>
   14d18:	ldr	r4, [sp]
   14d1c:	add	sp, sp, #4
   14d20:	pop	{pc}		; (ldr pc, [sp], #4)
   14d24:	strd	r4, [sp, #-16]!
   14d28:	str	r6, [sp, #8]
   14d2c:	str	lr, [sp, #12]
   14d30:	mov	r5, r0
   14d34:	mov	r4, r1
   14d38:	bl	1524c <__snprintf_chk@plt+0x445c>
   14d3c:	cmp	r0, #0
   14d40:	beq	14d54 <__snprintf_chk@plt+0x3f64>
   14d44:	ldrd	r4, [sp]
   14d48:	ldr	r6, [sp, #8]
   14d4c:	add	sp, sp, #12
   14d50:	pop	{pc}		; (ldr pc, [sp], #4)
   14d54:	adds	r4, r4, #0
   14d58:	movne	r4, #1
   14d5c:	cmp	r5, #0
   14d60:	moveq	r4, #1
   14d64:	cmp	r4, #0
   14d68:	beq	14d44 <__snprintf_chk@plt+0x3f54>
   14d6c:	bl	15158 <__snprintf_chk@plt+0x4368>
   14d70:	str	r4, [sp, #-8]!
   14d74:	str	lr, [sp, #4]
   14d78:	cmp	r1, #0
   14d7c:	orreq	r1, r1, #1
   14d80:	bl	1524c <__snprintf_chk@plt+0x445c>
   14d84:	cmp	r0, #0
   14d88:	beq	14d98 <__snprintf_chk@plt+0x3fa8>
   14d8c:	ldr	r4, [sp]
   14d90:	add	sp, sp, #4
   14d94:	pop	{pc}		; (ldr pc, [sp], #4)
   14d98:	bl	15158 <__snprintf_chk@plt+0x4368>
   14d9c:	strd	r4, [sp, #-16]!
   14da0:	str	r6, [sp, #8]
   14da4:	str	lr, [sp, #12]
   14da8:	mov	r4, r0
   14dac:	mov	r6, r1
   14db0:	mov	r5, r2
   14db4:	bl	15634 <__snprintf_chk@plt+0x4844>
   14db8:	cmp	r0, #0
   14dbc:	beq	14dd0 <__snprintf_chk@plt+0x3fe0>
   14dc0:	ldrd	r4, [sp]
   14dc4:	ldr	r6, [sp, #8]
   14dc8:	add	sp, sp, #12
   14dcc:	pop	{pc}		; (ldr pc, [sp], #4)
   14dd0:	cmp	r4, #0
   14dd4:	beq	14de4 <__snprintf_chk@plt+0x3ff4>
   14dd8:	cmp	r6, #0
   14ddc:	cmpne	r5, #0
   14de0:	beq	14dc0 <__snprintf_chk@plt+0x3fd0>
   14de4:	bl	15158 <__snprintf_chk@plt+0x4368>
   14de8:	str	r4, [sp, #-8]!
   14dec:	str	lr, [sp, #4]
   14df0:	bl	14d9c <__snprintf_chk@plt+0x3fac>
   14df4:	ldr	r4, [sp]
   14df8:	add	sp, sp, #4
   14dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   14e00:	str	r4, [sp, #-8]!
   14e04:	str	lr, [sp, #4]
   14e08:	mov	ip, r1
   14e0c:	mov	r3, r2
   14e10:	cmp	r2, #0
   14e14:	cmpne	r1, #0
   14e18:	moveq	r3, #1
   14e1c:	moveq	ip, r3
   14e20:	mov	r2, r3
   14e24:	mov	r1, ip
   14e28:	bl	15634 <__snprintf_chk@plt+0x4844>
   14e2c:	cmp	r0, #0
   14e30:	beq	14e40 <__snprintf_chk@plt+0x4050>
   14e34:	ldr	r4, [sp]
   14e38:	add	sp, sp, #4
   14e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   14e40:	bl	15158 <__snprintf_chk@plt+0x4368>
   14e44:	str	r4, [sp, #-8]!
   14e48:	str	lr, [sp, #4]
   14e4c:	mov	r2, r1
   14e50:	mov	r1, r0
   14e54:	mov	r0, #0
   14e58:	bl	14d9c <__snprintf_chk@plt+0x3fac>
   14e5c:	ldr	r4, [sp]
   14e60:	add	sp, sp, #4
   14e64:	pop	{pc}		; (ldr pc, [sp], #4)
   14e68:	str	r4, [sp, #-8]!
   14e6c:	str	lr, [sp, #4]
   14e70:	mov	r2, r1
   14e74:	mov	r1, r0
   14e78:	mov	r0, #0
   14e7c:	bl	14e00 <__snprintf_chk@plt+0x4010>
   14e80:	ldr	r4, [sp]
   14e84:	add	sp, sp, #4
   14e88:	pop	{pc}		; (ldr pc, [sp], #4)
   14e8c:	strd	r4, [sp, #-16]!
   14e90:	str	r6, [sp, #8]
   14e94:	str	lr, [sp, #12]
   14e98:	mov	r5, r1
   14e9c:	ldr	r4, [r1]
   14ea0:	cmp	r0, #0
   14ea4:	beq	14ed4 <__snprintf_chk@plt+0x40e4>
   14ea8:	lsr	r3, r4, #1
   14eac:	add	r3, r3, #1
   14eb0:	adds	r4, r4, r3
   14eb4:	bcs	14ef0 <__snprintf_chk@plt+0x4100>
   14eb8:	mov	r1, r4
   14ebc:	bl	14d9c <__snprintf_chk@plt+0x3fac>
   14ec0:	str	r4, [r5]
   14ec4:	ldrd	r4, [sp]
   14ec8:	ldr	r6, [sp, #8]
   14ecc:	add	sp, sp, #12
   14ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ed4:	cmp	r4, #0
   14ed8:	bne	14eb8 <__snprintf_chk@plt+0x40c8>
   14edc:	mov	r4, #64	; 0x40
   14ee0:	udiv	r4, r4, r2
   14ee4:	cmp	r2, #64	; 0x40
   14ee8:	addhi	r4, r4, #1
   14eec:	b	14eb8 <__snprintf_chk@plt+0x40c8>
   14ef0:	bl	15158 <__snprintf_chk@plt+0x4368>
   14ef4:	str	r4, [sp, #-8]!
   14ef8:	str	lr, [sp, #4]
   14efc:	mov	r2, #1
   14f00:	bl	14e8c <__snprintf_chk@plt+0x409c>
   14f04:	ldr	r4, [sp]
   14f08:	add	sp, sp, #4
   14f0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14f10:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14f14:	strd	r6, [sp, #8]
   14f18:	str	r8, [sp, #16]
   14f1c:	str	lr, [sp, #20]
   14f20:	mov	r5, r1
   14f24:	ldr	lr, [sp, #24]
   14f28:	ldr	ip, [r1]
   14f2c:	asr	r4, ip, #1
   14f30:	adds	r4, ip, r4
   14f34:	movvs	r1, #1
   14f38:	movvc	r1, #0
   14f3c:	cmp	r1, #0
   14f40:	mvnne	r4, #-2147483648	; 0x80000000
   14f44:	mvn	r8, r3
   14f48:	lsr	r8, r8, #31
   14f4c:	cmp	r3, r4
   14f50:	movge	r1, #0
   14f54:	andlt	r1, r8, #1
   14f58:	cmp	r1, #0
   14f5c:	movne	r4, r3
   14f60:	smull	r6, r7, r4, lr
   14f64:	asr	r1, r6, #31
   14f68:	cmp	r1, r7
   14f6c:	bne	14f84 <__snprintf_chk@plt+0x4194>
   14f70:	mov	r1, r6
   14f74:	cmp	r6, #63	; 0x3f
   14f78:	movle	r1, #64	; 0x40
   14f7c:	ble	14f88 <__snprintf_chk@plt+0x4198>
   14f80:	b	14f94 <__snprintf_chk@plt+0x41a4>
   14f84:	mvn	r1, #-2147483648	; 0x80000000
   14f88:	sdiv	r4, r1, lr
   14f8c:	mls	r6, lr, r4, r1
   14f90:	sub	r1, r1, r6
   14f94:	cmp	r0, #0
   14f98:	moveq	r6, #0
   14f9c:	streq	r6, [r5]
   14fa0:	sub	r6, r4, ip
   14fa4:	cmp	r6, r2
   14fa8:	bge	14fe0 <__snprintf_chk@plt+0x41f0>
   14fac:	adds	r2, ip, r2
   14fb0:	mov	r4, r2
   14fb4:	bvs	14ffc <__snprintf_chk@plt+0x420c>
   14fb8:	cmp	r2, r3
   14fbc:	movle	r3, #0
   14fc0:	andgt	r3, r8, #1
   14fc4:	cmp	r3, #0
   14fc8:	bne	14ffc <__snprintf_chk@plt+0x420c>
   14fcc:	smull	r2, r3, r2, lr
   14fd0:	asr	ip, r2, #31
   14fd4:	mov	r1, r2
   14fd8:	cmp	ip, r3
   14fdc:	bne	14ffc <__snprintf_chk@plt+0x420c>
   14fe0:	bl	14d24 <__snprintf_chk@plt+0x3f34>
   14fe4:	str	r4, [r5]
   14fe8:	ldrd	r4, [sp]
   14fec:	ldrd	r6, [sp, #8]
   14ff0:	ldr	r8, [sp, #16]
   14ff4:	add	sp, sp, #20
   14ff8:	pop	{pc}		; (ldr pc, [sp], #4)
   14ffc:	bl	15158 <__snprintf_chk@plt+0x4368>
   15000:	str	r4, [sp, #-8]!
   15004:	str	lr, [sp, #4]
   15008:	bl	1519c <__snprintf_chk@plt+0x43ac>
   1500c:	cmp	r0, #0
   15010:	beq	15020 <__snprintf_chk@plt+0x4230>
   15014:	ldr	r4, [sp]
   15018:	add	sp, sp, #4
   1501c:	pop	{pc}		; (ldr pc, [sp], #4)
   15020:	bl	15158 <__snprintf_chk@plt+0x4368>
   15024:	str	r4, [sp, #-8]!
   15028:	str	lr, [sp, #4]
   1502c:	mov	r1, #1
   15030:	bl	15000 <__snprintf_chk@plt+0x4210>
   15034:	ldr	r4, [sp]
   15038:	add	sp, sp, #4
   1503c:	pop	{pc}		; (ldr pc, [sp], #4)
   15040:	str	r4, [sp, #-8]!
   15044:	str	lr, [sp, #4]
   15048:	bl	1519c <__snprintf_chk@plt+0x43ac>
   1504c:	cmp	r0, #0
   15050:	beq	15060 <__snprintf_chk@plt+0x4270>
   15054:	ldr	r4, [sp]
   15058:	add	sp, sp, #4
   1505c:	pop	{pc}		; (ldr pc, [sp], #4)
   15060:	bl	15158 <__snprintf_chk@plt+0x4368>
   15064:	str	r4, [sp, #-8]!
   15068:	str	lr, [sp, #4]
   1506c:	mov	r1, #1
   15070:	bl	15040 <__snprintf_chk@plt+0x4250>
   15074:	ldr	r4, [sp]
   15078:	add	sp, sp, #4
   1507c:	pop	{pc}		; (ldr pc, [sp], #4)
   15080:	strd	r4, [sp, #-16]!
   15084:	str	r6, [sp, #8]
   15088:	str	lr, [sp, #12]
   1508c:	mov	r5, r0
   15090:	mov	r4, r1
   15094:	mov	r0, r1
   15098:	bl	14cc4 <__snprintf_chk@plt+0x3ed4>
   1509c:	mov	r2, r4
   150a0:	mov	r1, r5
   150a4:	bl	10c04 <memcpy@plt>
   150a8:	ldrd	r4, [sp]
   150ac:	ldr	r6, [sp, #8]
   150b0:	add	sp, sp, #12
   150b4:	pop	{pc}		; (ldr pc, [sp], #4)
   150b8:	strd	r4, [sp, #-16]!
   150bc:	str	r6, [sp, #8]
   150c0:	str	lr, [sp, #12]
   150c4:	mov	r5, r0
   150c8:	mov	r4, r1
   150cc:	mov	r0, r1
   150d0:	bl	14ce8 <__snprintf_chk@plt+0x3ef8>
   150d4:	mov	r2, r4
   150d8:	mov	r1, r5
   150dc:	bl	10c04 <memcpy@plt>
   150e0:	ldrd	r4, [sp]
   150e4:	ldr	r6, [sp, #8]
   150e8:	add	sp, sp, #12
   150ec:	pop	{pc}		; (ldr pc, [sp], #4)
   150f0:	strd	r4, [sp, #-16]!
   150f4:	str	r6, [sp, #8]
   150f8:	str	lr, [sp, #12]
   150fc:	mov	r5, r0
   15100:	mov	r4, r1
   15104:	add	r0, r1, #1
   15108:	bl	14ce8 <__snprintf_chk@plt+0x3ef8>
   1510c:	mov	r2, #0
   15110:	strb	r2, [r0, r4]
   15114:	mov	r2, r4
   15118:	mov	r1, r5
   1511c:	bl	10c04 <memcpy@plt>
   15120:	ldrd	r4, [sp]
   15124:	ldr	r6, [sp, #8]
   15128:	add	sp, sp, #12
   1512c:	pop	{pc}		; (ldr pc, [sp], #4)
   15130:	str	r4, [sp, #-8]!
   15134:	str	lr, [sp, #4]
   15138:	mov	r4, r0
   1513c:	bl	10d24 <strlen@plt>
   15140:	add	r1, r0, #1
   15144:	mov	r0, r4
   15148:	bl	15080 <__snprintf_chk@plt+0x4290>
   1514c:	ldr	r4, [sp]
   15150:	add	sp, sp, #4
   15154:	pop	{pc}		; (ldr pc, [sp], #4)
   15158:	str	r4, [sp, #-8]!
   1515c:	str	lr, [sp, #4]
   15160:	movw	r3, #28888	; 0x70d8
   15164:	movt	r3, #2
   15168:	ldr	r4, [r3]
   1516c:	mov	r2, #5
   15170:	movw	r1, #25348	; 0x6304
   15174:	movt	r1, #1
   15178:	mov	r0, #0
   1517c:	bl	10c40 <dcgettext@plt>
   15180:	mov	r3, r0
   15184:	movw	r2, #24196	; 0x5e84
   15188:	movt	r2, #1
   1518c:	mov	r1, #0
   15190:	mov	r0, r4
   15194:	bl	10cac <error@plt>
   15198:	bl	10de4 <abort@plt>
   1519c:	strd	r4, [sp, #-16]!
   151a0:	str	r6, [sp, #8]
   151a4:	str	lr, [sp, #12]
   151a8:	cmp	r1, #0
   151ac:	cmpne	r0, #0
   151b0:	beq	151ec <__snprintf_chk@plt+0x43fc>
   151b4:	mov	r2, r0
   151b8:	mov	r3, r1
   151bc:	umull	r4, r5, r0, r1
   151c0:	adds	r1, r5, #0
   151c4:	movne	r1, #1
   151c8:	cmp	r4, #0
   151cc:	movlt	r1, #1
   151d0:	cmp	r1, #0
   151d4:	beq	151f4 <__snprintf_chk@plt+0x4404>
   151d8:	bl	10d30 <__errno_location@plt>
   151dc:	mov	r3, #12
   151e0:	str	r3, [r0]
   151e4:	mov	r0, #0
   151e8:	b	15200 <__snprintf_chk@plt+0x4410>
   151ec:	mov	r3, #1
   151f0:	mov	r2, r3
   151f4:	mov	r1, r3
   151f8:	mov	r0, r2
   151fc:	bl	10bbc <calloc@plt>
   15200:	ldrd	r4, [sp]
   15204:	ldr	r6, [sp, #8]
   15208:	add	sp, sp, #12
   1520c:	pop	{pc}		; (ldr pc, [sp], #4)
   15210:	str	r4, [sp, #-8]!
   15214:	str	lr, [sp, #4]
   15218:	cmp	r0, #0
   1521c:	beq	15238 <__snprintf_chk@plt+0x4448>
   15220:	bge	1523c <__snprintf_chk@plt+0x444c>
   15224:	bl	10d30 <__errno_location@plt>
   15228:	mov	r3, #12
   1522c:	str	r3, [r0]
   15230:	mov	r0, #0
   15234:	b	15240 <__snprintf_chk@plt+0x4450>
   15238:	mov	r0, #1
   1523c:	bl	10cd0 <malloc@plt>
   15240:	ldr	r4, [sp]
   15244:	add	sp, sp, #4
   15248:	pop	{pc}		; (ldr pc, [sp], #4)
   1524c:	str	r4, [sp, #-8]!
   15250:	str	lr, [sp, #4]
   15254:	cmp	r0, #0
   15258:	beq	1527c <__snprintf_chk@plt+0x448c>
   1525c:	cmp	r1, #0
   15260:	beq	15288 <__snprintf_chk@plt+0x4498>
   15264:	cmp	r1, #0
   15268:	blt	15294 <__snprintf_chk@plt+0x44a4>
   1526c:	bl	10c4c <realloc@plt>
   15270:	ldr	r4, [sp]
   15274:	add	sp, sp, #4
   15278:	pop	{pc}		; (ldr pc, [sp], #4)
   1527c:	mov	r0, r1
   15280:	bl	15210 <__snprintf_chk@plt+0x4420>
   15284:	b	15270 <__snprintf_chk@plt+0x4480>
   15288:	bl	15460 <__snprintf_chk@plt+0x4670>
   1528c:	mov	r0, #0
   15290:	b	15270 <__snprintf_chk@plt+0x4480>
   15294:	bl	10d30 <__errno_location@plt>
   15298:	mov	r3, #12
   1529c:	str	r3, [r0]
   152a0:	mov	r0, #0
   152a4:	b	15270 <__snprintf_chk@plt+0x4480>
   152a8:	strd	r4, [sp, #-16]!
   152ac:	str	r6, [sp, #8]
   152b0:	str	lr, [sp, #12]
   152b4:	mov	r5, r0
   152b8:	bl	10c94 <__fpending@plt>
   152bc:	mov	r6, r0
   152c0:	ldr	r4, [r5]
   152c4:	and	r4, r4, #32
   152c8:	mov	r0, r5
   152cc:	bl	15334 <__snprintf_chk@plt+0x4544>
   152d0:	cmp	r4, #0
   152d4:	bne	15308 <__snprintf_chk@plt+0x4518>
   152d8:	cmp	r0, #0
   152dc:	beq	152f8 <__snprintf_chk@plt+0x4508>
   152e0:	cmp	r6, #0
   152e4:	bne	15324 <__snprintf_chk@plt+0x4534>
   152e8:	bl	10d30 <__errno_location@plt>
   152ec:	ldr	r0, [r0]
   152f0:	subs	r0, r0, #9
   152f4:	mvnne	r0, #0
   152f8:	ldrd	r4, [sp]
   152fc:	ldr	r6, [sp, #8]
   15300:	add	sp, sp, #12
   15304:	pop	{pc}		; (ldr pc, [sp], #4)
   15308:	cmp	r0, #0
   1530c:	bne	1532c <__snprintf_chk@plt+0x453c>
   15310:	bl	10d30 <__errno_location@plt>
   15314:	mov	r3, #0
   15318:	str	r3, [r0]
   1531c:	mvn	r0, #0
   15320:	b	152f8 <__snprintf_chk@plt+0x4508>
   15324:	mvn	r0, #0
   15328:	b	152f8 <__snprintf_chk@plt+0x4508>
   1532c:	mvn	r0, #0
   15330:	b	152f8 <__snprintf_chk@plt+0x4508>
   15334:	strd	r4, [sp, #-16]!
   15338:	str	r6, [sp, #8]
   1533c:	str	lr, [sp, #12]
   15340:	sub	sp, sp, #8
   15344:	mov	r4, r0
   15348:	bl	10d78 <fileno@plt>
   1534c:	cmp	r0, #0
   15350:	blt	153c8 <__snprintf_chk@plt+0x45d8>
   15354:	mov	r0, r4
   15358:	bl	10ce8 <__freading@plt>
   1535c:	cmp	r0, #0
   15360:	beq	15394 <__snprintf_chk@plt+0x45a4>
   15364:	mov	r0, r4
   15368:	bl	10d78 <fileno@plt>
   1536c:	mov	r3, #1
   15370:	str	r3, [sp]
   15374:	mov	r2, #0
   15378:	mov	r3, #0
   1537c:	bl	10c7c <lseek64@plt>
   15380:	mvn	r2, #0
   15384:	mvn	r3, #0
   15388:	cmp	r1, r3
   1538c:	cmpeq	r0, r2
   15390:	beq	153d4 <__snprintf_chk@plt+0x45e4>
   15394:	mov	r0, r4
   15398:	bl	153f0 <__snprintf_chk@plt+0x4600>
   1539c:	cmp	r0, #0
   153a0:	beq	153d4 <__snprintf_chk@plt+0x45e4>
   153a4:	bl	10d30 <__errno_location@plt>
   153a8:	mov	r5, r0
   153ac:	ldr	r6, [r0]
   153b0:	mov	r0, r4
   153b4:	bl	10d90 <fclose@plt>
   153b8:	cmp	r6, #0
   153bc:	strne	r6, [r5]
   153c0:	mvnne	r0, #0
   153c4:	b	153dc <__snprintf_chk@plt+0x45ec>
   153c8:	mov	r0, r4
   153cc:	bl	10d90 <fclose@plt>
   153d0:	b	153dc <__snprintf_chk@plt+0x45ec>
   153d4:	mov	r0, r4
   153d8:	bl	10d90 <fclose@plt>
   153dc:	add	sp, sp, #8
   153e0:	ldrd	r4, [sp]
   153e4:	ldr	r6, [sp, #8]
   153e8:	add	sp, sp, #12
   153ec:	pop	{pc}		; (ldr pc, [sp], #4)
   153f0:	str	r4, [sp, #-8]!
   153f4:	str	lr, [sp, #4]
   153f8:	sub	sp, sp, #8
   153fc:	subs	r4, r0, #0
   15400:	beq	15414 <__snprintf_chk@plt+0x4624>
   15404:	mov	r0, r4
   15408:	bl	10ce8 <__freading@plt>
   1540c:	cmp	r0, #0
   15410:	bne	1542c <__snprintf_chk@plt+0x463c>
   15414:	mov	r0, r4
   15418:	bl	10be0 <fflush@plt>
   1541c:	add	sp, sp, #8
   15420:	ldr	r4, [sp]
   15424:	add	sp, sp, #4
   15428:	pop	{pc}		; (ldr pc, [sp], #4)
   1542c:	ldr	r3, [r4]
   15430:	tst	r3, #256	; 0x100
   15434:	bne	15444 <__snprintf_chk@plt+0x4654>
   15438:	mov	r0, r4
   1543c:	bl	10be0 <fflush@plt>
   15440:	b	1541c <__snprintf_chk@plt+0x462c>
   15444:	mov	r3, #1
   15448:	str	r3, [sp]
   1544c:	mov	r2, #0
   15450:	mov	r3, #0
   15454:	mov	r0, r4
   15458:	bl	154c0 <__snprintf_chk@plt+0x46d0>
   1545c:	b	15438 <__snprintf_chk@plt+0x4648>
   15460:	strd	r4, [sp, #-12]!
   15464:	str	lr, [sp, #8]
   15468:	sub	sp, sp, #12
   1546c:	mov	r5, r0
   15470:	bl	10d30 <__errno_location@plt>
   15474:	mov	r4, r0
   15478:	ldr	r3, [r0]
   1547c:	str	r3, [sp]
   15480:	str	r3, [sp, #4]
   15484:	mov	r3, #0
   15488:	str	r3, [r0]
   1548c:	mov	r0, r5
   15490:	bl	10bec <free@plt>
   15494:	ldr	r3, [r4]
   15498:	clz	r3, r3
   1549c:	lsr	r3, r3, #5
   154a0:	add	r2, sp, #8
   154a4:	add	r3, r2, r3, lsl #2
   154a8:	ldr	r3, [r3, #-8]
   154ac:	str	r3, [r4]
   154b0:	add	sp, sp, #12
   154b4:	ldrd	r4, [sp]
   154b8:	add	sp, sp, #8
   154bc:	pop	{pc}		; (ldr pc, [sp], #4)
   154c0:	str	r4, [sp, #-16]!
   154c4:	strd	r6, [sp, #4]
   154c8:	str	lr, [sp, #12]
   154cc:	sub	sp, sp, #8
   154d0:	mov	r4, r0
   154d4:	mov	r6, r2
   154d8:	mov	r7, r3
   154dc:	ldr	r2, [r0, #8]
   154e0:	ldr	r3, [r0, #4]
   154e4:	cmp	r2, r3
   154e8:	beq	15518 <__snprintf_chk@plt+0x4728>
   154ec:	ldr	r3, [sp, #24]
   154f0:	str	r3, [sp]
   154f4:	mov	r2, r6
   154f8:	mov	r3, r7
   154fc:	mov	r0, r4
   15500:	bl	10d9c <fseeko64@plt>
   15504:	add	sp, sp, #8
   15508:	ldr	r4, [sp]
   1550c:	ldrd	r6, [sp, #4]
   15510:	add	sp, sp, #12
   15514:	pop	{pc}		; (ldr pc, [sp], #4)
   15518:	ldr	r2, [r0, #20]
   1551c:	ldr	r3, [r0, #16]
   15520:	cmp	r2, r3
   15524:	bne	154ec <__snprintf_chk@plt+0x46fc>
   15528:	ldr	r3, [r0, #36]	; 0x24
   1552c:	cmp	r3, #0
   15530:	bne	154ec <__snprintf_chk@plt+0x46fc>
   15534:	bl	10d78 <fileno@plt>
   15538:	ldr	r3, [sp, #24]
   1553c:	str	r3, [sp]
   15540:	mov	r2, r6
   15544:	mov	r3, r7
   15548:	bl	10c7c <lseek64@plt>
   1554c:	mvn	r2, #0
   15550:	mvn	r3, #0
   15554:	cmp	r1, r3
   15558:	cmpeq	r0, r2
   1555c:	beq	15578 <__snprintf_chk@plt+0x4788>
   15560:	ldr	r3, [r4]
   15564:	bic	r3, r3, #16
   15568:	str	r3, [r4]
   1556c:	strd	r0, [r4, #80]	; 0x50
   15570:	mov	r0, #0
   15574:	b	15504 <__snprintf_chk@plt+0x4714>
   15578:	mvn	r0, #0
   1557c:	b	15504 <__snprintf_chk@plt+0x4714>
   15580:	str	r4, [sp, #-8]!
   15584:	str	lr, [sp, #4]
   15588:	mov	r0, #14
   1558c:	bl	10dc0 <nl_langinfo@plt>
   15590:	cmp	r0, #0
   15594:	beq	155b8 <__snprintf_chk@plt+0x47c8>
   15598:	ldrb	r2, [r0]
   1559c:	movw	r3, #25368	; 0x6318
   155a0:	movt	r3, #1
   155a4:	cmp	r2, #0
   155a8:	moveq	r0, r3
   155ac:	ldr	r4, [sp]
   155b0:	add	sp, sp, #4
   155b4:	pop	{pc}		; (ldr pc, [sp], #4)
   155b8:	movw	r0, #25368	; 0x6318
   155bc:	movt	r0, #1
   155c0:	b	155ac <__snprintf_chk@plt+0x47bc>
   155c4:	strd	r4, [sp, #-20]!	; 0xffffffec
   155c8:	strd	r6, [sp, #8]
   155cc:	str	lr, [sp, #16]
   155d0:	sub	sp, sp, #12
   155d4:	mov	r7, r1
   155d8:	mov	r5, r2
   155dc:	subs	r6, r0, #0
   155e0:	addeq	r6, sp, #4
   155e4:	mov	r0, r6
   155e8:	bl	10ca0 <mbrtowc@plt>
   155ec:	mov	r4, r0
   155f0:	cmp	r5, #0
   155f4:	cmnne	r0, #3
   155f8:	bhi	15614 <__snprintf_chk@plt+0x4824>
   155fc:	mov	r0, r4
   15600:	add	sp, sp, #12
   15604:	ldrd	r4, [sp]
   15608:	ldrd	r6, [sp, #8]
   1560c:	add	sp, sp, #16
   15610:	pop	{pc}		; (ldr pc, [sp], #4)
   15614:	mov	r0, #0
   15618:	bl	15670 <__snprintf_chk@plt+0x4880>
   1561c:	cmp	r0, #0
   15620:	bne	155fc <__snprintf_chk@plt+0x480c>
   15624:	ldrb	r3, [r7]
   15628:	str	r3, [r6]
   1562c:	mov	r4, #1
   15630:	b	155fc <__snprintf_chk@plt+0x480c>
   15634:	str	r4, [sp, #-8]!
   15638:	str	lr, [sp, #4]
   1563c:	umull	r2, r3, r1, r2
   15640:	cmp	r3, #0
   15644:	bne	1565c <__snprintf_chk@plt+0x486c>
   15648:	mov	r1, r2
   1564c:	bl	1524c <__snprintf_chk@plt+0x445c>
   15650:	ldr	r4, [sp]
   15654:	add	sp, sp, #4
   15658:	pop	{pc}		; (ldr pc, [sp], #4)
   1565c:	bl	10d30 <__errno_location@plt>
   15660:	mov	r3, #12
   15664:	str	r3, [r0]
   15668:	mov	r0, #0
   1566c:	b	15650 <__snprintf_chk@plt+0x4860>
   15670:	push	{lr}		; (str lr, [sp, #-4]!)
   15674:	sub	sp, sp, #268	; 0x10c
   15678:	movw	r2, #257	; 0x101
   1567c:	add	r1, sp, #4
   15680:	bl	156cc <__snprintf_chk@plt+0x48dc>
   15684:	cmp	r0, #0
   15688:	movne	r0, #0
   1568c:	bne	156c4 <__snprintf_chk@plt+0x48d4>
   15690:	movw	r1, #25376	; 0x6320
   15694:	movt	r1, #1
   15698:	add	r0, sp, #4
   1569c:	bl	10bd4 <strcmp@plt>
   156a0:	cmp	r0, #0
   156a4:	beq	156c0 <__snprintf_chk@plt+0x48d0>
   156a8:	movw	r1, #25380	; 0x6324
   156ac:	movt	r1, #1
   156b0:	add	r0, sp, #4
   156b4:	bl	10bd4 <strcmp@plt>
   156b8:	adds	r0, r0, #0
   156bc:	movne	r0, #1
   156c0:	and	r0, r0, #1
   156c4:	add	sp, sp, #268	; 0x10c
   156c8:	pop	{pc}		; (ldr pc, [sp], #4)
   156cc:	strd	r4, [sp, #-16]!
   156d0:	str	r6, [sp, #8]
   156d4:	str	lr, [sp, #12]
   156d8:	mov	r6, r1
   156dc:	mov	r4, r2
   156e0:	mov	r1, #0
   156e4:	bl	10da8 <setlocale@plt>
   156e8:	subs	r5, r0, #0
   156ec:	beq	15730 <__snprintf_chk@plt+0x4940>
   156f0:	mov	r0, r5
   156f4:	bl	10d24 <strlen@plt>
   156f8:	cmp	r4, r0
   156fc:	bhi	1574c <__snprintf_chk@plt+0x495c>
   15700:	cmp	r4, #0
   15704:	moveq	r0, #34	; 0x22
   15708:	beq	15760 <__snprintf_chk@plt+0x4970>
   1570c:	sub	r4, r4, #1
   15710:	mov	r2, r4
   15714:	mov	r1, r5
   15718:	mov	r0, r6
   1571c:	bl	10c04 <memcpy@plt>
   15720:	mov	r3, #0
   15724:	strb	r3, [r6, r4]
   15728:	mov	r0, #34	; 0x22
   1572c:	b	15760 <__snprintf_chk@plt+0x4970>
   15730:	cmp	r4, #0
   15734:	moveq	r0, #22
   15738:	beq	15760 <__snprintf_chk@plt+0x4970>
   1573c:	mov	r3, #0
   15740:	strb	r3, [r6]
   15744:	mov	r0, #22
   15748:	b	15760 <__snprintf_chk@plt+0x4970>
   1574c:	add	r2, r0, #1
   15750:	mov	r1, r5
   15754:	mov	r0, r6
   15758:	bl	10c04 <memcpy@plt>
   1575c:	mov	r0, #0
   15760:	ldrd	r4, [sp]
   15764:	ldr	r6, [sp, #8]
   15768:	add	sp, sp, #12
   1576c:	pop	{pc}		; (ldr pc, [sp], #4)
   15770:	str	r4, [sp, #-8]!
   15774:	str	lr, [sp, #4]
   15778:	mov	r1, #0
   1577c:	bl	10da8 <setlocale@plt>
   15780:	ldr	r4, [sp]
   15784:	add	sp, sp, #4
   15788:	pop	{pc}		; (ldr pc, [sp], #4)
   1578c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15790:	mov	r7, r0
   15794:	ldr	r6, [pc, #72]	; 157e4 <__snprintf_chk@plt+0x49f4>
   15798:	ldr	r5, [pc, #72]	; 157e8 <__snprintf_chk@plt+0x49f8>
   1579c:	add	r6, pc, r6
   157a0:	add	r5, pc, r5
   157a4:	sub	r6, r6, r5
   157a8:	mov	r8, r1
   157ac:	mov	r9, r2
   157b0:	bl	10b9c <calloc@plt-0x20>
   157b4:	asrs	r6, r6, #2
   157b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   157bc:	mov	r4, #0
   157c0:	add	r4, r4, #1
   157c4:	ldr	r3, [r5], #4
   157c8:	mov	r2, r9
   157cc:	mov	r1, r8
   157d0:	mov	r0, r7
   157d4:	blx	r3
   157d8:	cmp	r6, r4
   157dc:	bne	157c0 <__snprintf_chk@plt+0x49d0>
   157e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   157e4:	andeq	r1, r1, r0, ror r7
   157e8:	andeq	r1, r1, r8, ror #14
   157ec:	bx	lr
   157f0:	ldr	r3, [pc, #12]	; 15804 <__snprintf_chk@plt+0x4a14>
   157f4:	mov	r1, #0
   157f8:	add	r3, pc, r3
   157fc:	ldr	r2, [r3]
   15800:	b	10d48 <__cxa_atexit@plt>
   15804:	ldrdeq	r1, [r1], -r4

Disassembly of section .fini:

00015808 <.fini>:
   15808:	push	{r3, lr}
   1580c:	pop	{r3, pc}
