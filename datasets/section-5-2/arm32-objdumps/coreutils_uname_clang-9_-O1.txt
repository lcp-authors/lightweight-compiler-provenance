
../repos/coreutils/src/uname:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	10eb8 <putchar_unlocked@plt+0x48>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <calloc@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <calloc@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <calloc@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <fputs_unlocked@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <strcmp@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <fflush@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <free@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <_exit@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <memcpy@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <mbsinit@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <uname@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <dcgettext@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <realloc@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <textdomain@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <iswprint@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <fwrite@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <lseek64@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <__ctype_get_mb_cur_max@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

00010d2c <__fpending@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #792]!	; 0x318

00010d38 <ferror_unlocked@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #784]!	; 0x310

00010d44 <mbrtowc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #776]!	; 0x308

00010d50 <error@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #768]!	; 0x300

00010d5c <malloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #760]!	; 0x2f8

00010d68 <__libc_start_main@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #752]!	; 0x2f0

00010d74 <__freading@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d80 <__gmon_start__@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #736]!	; 0x2e0

00010d8c <getopt_long@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #728]!	; 0x2d8

00010d98 <__ctype_b_loc@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #720]!	; 0x2d0

00010da4 <exit@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #712]!	; 0x2c8

00010db0 <bcmp@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #704]!	; 0x2c0

00010dbc <strlen@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc8 <__errno_location@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd4 <__cxa_atexit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #680]!	; 0x2a8

00010de0 <memset@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dec <__printf_chk@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #664]!	; 0x298

00010df8 <fileno@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #656]!	; 0x290

00010e04 <__fprintf_chk@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #648]!	; 0x288

00010e10 <fclose@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #640]!	; 0x280

00010e1c <fseeko64@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #632]!	; 0x278

00010e28 <setlocale@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #624]!	; 0x270

00010e34 <strrchr@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #616]!	; 0x268

00010e40 <nl_langinfo@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #608]!	; 0x260

00010e4c <bindtextdomain@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #600]!	; 0x258

00010e58 <strncmp@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #592]!	; 0x250

00010e64 <abort@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #584]!	; 0x248

00010e70 <putchar_unlocked@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #576]!	; 0x240

Disassembly of section .text:

00010e7c <.text>:
   10e7c:	mov	fp, #0
   10e80:	mov	lr, #0
   10e84:	pop	{r1}		; (ldr r1, [sp], #4)
   10e88:	mov	r2, sp
   10e8c:	push	{r2}		; (str r2, [sp, #-4]!)
   10e90:	push	{r0}		; (str r0, [sp, #-4]!)
   10e94:	ldr	ip, [pc, #16]	; 10eac <putchar_unlocked@plt+0x3c>
   10e98:	push	{ip}		; (str ip, [sp, #-4]!)
   10e9c:	ldr	r0, [pc, #12]	; 10eb0 <putchar_unlocked@plt+0x40>
   10ea0:	ldr	r3, [pc, #12]	; 10eb4 <putchar_unlocked@plt+0x44>
   10ea4:	bl	10d68 <__libc_start_main@plt>
   10ea8:	bl	10e64 <abort@plt>
   10eac:			; <UNDEFINED> instruction: 0x000144bc
   10eb0:	andeq	r1, r1, ip, lsr #4
   10eb4:	andeq	r4, r1, ip, asr r4
   10eb8:	ldr	r3, [pc, #20]	; 10ed4 <putchar_unlocked@plt+0x64>
   10ebc:	ldr	r2, [pc, #20]	; 10ed8 <putchar_unlocked@plt+0x68>
   10ec0:	add	r3, pc, r3
   10ec4:	ldr	r2, [r3, r2]
   10ec8:	cmp	r2, #0
   10ecc:	bxeq	lr
   10ed0:	b	10d80 <__gmon_start__@plt>
   10ed4:	andeq	r5, r1, r8, lsr r1
   10ed8:	strheq	r0, [r0], -ip
   10edc:	ldr	r0, [pc, #24]	; 10efc <putchar_unlocked@plt+0x8c>
   10ee0:	ldr	r3, [pc, #24]	; 10f00 <putchar_unlocked@plt+0x90>
   10ee4:	cmp	r3, r0
   10ee8:	bxeq	lr
   10eec:	ldr	r3, [pc, #16]	; 10f04 <putchar_unlocked@plt+0x94>
   10ef0:	cmp	r3, #0
   10ef4:	bxeq	lr
   10ef8:	bx	r3
   10efc:	andeq	r6, r2, r8, lsl r1
   10f00:	andeq	r6, r2, r8, lsl r1
   10f04:	andeq	r0, r0, r0
   10f08:	ldr	r0, [pc, #36]	; 10f34 <putchar_unlocked@plt+0xc4>
   10f0c:	ldr	r1, [pc, #36]	; 10f38 <putchar_unlocked@plt+0xc8>
   10f10:	sub	r1, r1, r0
   10f14:	asr	r1, r1, #2
   10f18:	add	r1, r1, r1, lsr #31
   10f1c:	asrs	r1, r1, #1
   10f20:	bxeq	lr
   10f24:	ldr	r3, [pc, #16]	; 10f3c <putchar_unlocked@plt+0xcc>
   10f28:	cmp	r3, #0
   10f2c:	bxeq	lr
   10f30:	bx	r3
   10f34:	andeq	r6, r2, r8, lsl r1
   10f38:	andeq	r6, r2, r8, lsl r1
   10f3c:	andeq	r0, r0, r0
   10f40:	push	{r4, lr}
   10f44:	ldr	r4, [pc, #24]	; 10f64 <putchar_unlocked@plt+0xf4>
   10f48:	ldrb	r3, [r4]
   10f4c:	cmp	r3, #0
   10f50:	popne	{r4, pc}
   10f54:	bl	10edc <putchar_unlocked@plt+0x6c>
   10f58:	mov	r3, #1
   10f5c:	strb	r3, [r4]
   10f60:	pop	{r4, pc}
   10f64:	andeq	r6, r2, r0, lsr r1
   10f68:	b	10f08 <putchar_unlocked@plt+0x98>
   10f6c:	push	{fp, lr}
   10f70:	mov	fp, sp
   10f74:	mov	r4, r0
   10f78:	cmp	r0, #0
   10f7c:	bne	10ff0 <putchar_unlocked@plt+0x180>
   10f80:	movw	r1, #17675	; 0x450b
   10f84:	movt	r1, #1
   10f88:	mov	r0, #0
   10f8c:	mov	r2, #5
   10f90:	bl	10cd8 <dcgettext@plt>
   10f94:	mov	r1, r0
   10f98:	movw	r0, #24892	; 0x613c
   10f9c:	movt	r0, #2
   10fa0:	ldr	r2, [r0]
   10fa4:	mov	r0, #1
   10fa8:	bl	10dec <__printf_chk@plt>
   10fac:	movw	r5, #24776	; 0x60c8
   10fb0:	movt	r5, #2
   10fb4:	ldr	r0, [r5]
   10fb8:	cmp	r0, #1
   10fbc:	movw	r6, #24876	; 0x612c
   10fc0:	movt	r6, #2
   10fc4:	bne	11034 <putchar_unlocked@plt+0x1c4>
   10fc8:	movw	r1, #17698	; 0x4522
   10fcc:	movt	r1, #1
   10fd0:	mov	r0, #0
   10fd4:	mov	r2, #5
   10fd8:	bl	10cd8 <dcgettext@plt>
   10fdc:	ldr	r1, [r6]
   10fe0:	bl	10c78 <fputs_unlocked@plt>
   10fe4:	movw	r1, #18060	; 0x468c
   10fe8:	movt	r1, #1
   10fec:	b	1103c <putchar_unlocked@plt+0x1cc>
   10ff0:	movw	r0, #24872	; 0x6128
   10ff4:	movt	r0, #2
   10ff8:	ldr	r5, [r0]
   10ffc:	movw	r1, #17636	; 0x44e4
   11000:	movt	r1, #1
   11004:	mov	r0, #0
   11008:	mov	r2, #5
   1100c:	bl	10cd8 <dcgettext@plt>
   11010:	mov	r2, r0
   11014:	movw	r0, #24892	; 0x613c
   11018:	movt	r0, #2
   1101c:	ldr	r3, [r0]
   11020:	mov	r0, r5
   11024:	mov	r1, #1
   11028:	bl	10e04 <__fprintf_chk@plt>
   1102c:	mov	r0, r4
   11030:	bl	10da4 <exit@plt>
   11034:	movw	r1, #18363	; 0x47bb
   11038:	movt	r1, #1
   1103c:	mov	r0, #0
   11040:	mov	r2, #5
   11044:	bl	10cd8 <dcgettext@plt>
   11048:	ldr	r1, [r6]
   1104c:	bl	10c78 <fputs_unlocked@plt>
   11050:	movw	r1, #18393	; 0x47d9
   11054:	movt	r1, #1
   11058:	mov	r0, #0
   1105c:	mov	r2, #5
   11060:	bl	10cd8 <dcgettext@plt>
   11064:	ldr	r1, [r6]
   11068:	bl	10c78 <fputs_unlocked@plt>
   1106c:	movw	r1, #18438	; 0x4806
   11070:	movt	r1, #1
   11074:	mov	r0, #0
   11078:	mov	r2, #5
   1107c:	bl	10cd8 <dcgettext@plt>
   11080:	ldr	r1, [r6]
   11084:	bl	10c78 <fputs_unlocked@plt>
   11088:	ldr	r1, [r5]
   1108c:	movw	r2, #18492	; 0x483c
   11090:	movt	r2, #1
   11094:	movw	r0, #18498	; 0x4842
   11098:	movt	r0, #1
   1109c:	cmp	r1, #1
   110a0:	moveq	r0, r2
   110a4:	bl	110b0 <putchar_unlocked@plt+0x240>
   110a8:	mov	r0, r4
   110ac:	bl	10da4 <exit@plt>
   110b0:	push	{r4, r5, r6, sl, fp, lr}
   110b4:	add	fp, sp, #16
   110b8:	sub	sp, sp, #56	; 0x38
   110bc:	mov	r4, r0
   110c0:	movw	r0, #19072	; 0x4a80
   110c4:	movt	r0, #1
   110c8:	add	r1, r0, #32
   110cc:	mov	r2, #48	; 0x30
   110d0:	vld1.64	{d16-d17}, [r1]
   110d4:	mov	r5, sp
   110d8:	add	r1, r5, #32
   110dc:	add	r3, r0, #16
   110e0:	vld1.64	{d18-d19}, [r0], r2
   110e4:	vld1.64	{d20-d21}, [r3]
   110e8:	vldr	d22, [r0]
   110ec:	vst1.64	{d16-d17}, [r1]
   110f0:	add	r0, r5, #16
   110f4:	vst1.64	{d20-d21}, [r0]
   110f8:	mov	r0, r5
   110fc:	vst1.64	{d18-d19}, [r0], r2
   11100:	vstr	d22, [r0]
   11104:	ldr	r1, [sp]
   11108:	cmp	r1, #0
   1110c:	beq	1112c <putchar_unlocked@plt+0x2bc>
   11110:	mov	r5, sp
   11114:	mov	r0, r4
   11118:	bl	10c84 <strcmp@plt>
   1111c:	cmp	r0, #0
   11120:	ldrne	r1, [r5, #8]!
   11124:	cmpne	r1, #0
   11128:	bne	11114 <putchar_unlocked@plt+0x2a4>
   1112c:	ldr	r5, [r5, #4]
   11130:	movw	r1, #18655	; 0x48df
   11134:	movt	r1, #1
   11138:	mov	r0, #0
   1113c:	mov	r2, #5
   11140:	bl	10cd8 <dcgettext@plt>
   11144:	mov	r1, r0
   11148:	movw	r2, #18678	; 0x48f6
   1114c:	movt	r2, #1
   11150:	movw	r3, #18692	; 0x4904
   11154:	movt	r3, #1
   11158:	mov	r0, #1
   1115c:	bl	10dec <__printf_chk@plt>
   11160:	cmp	r5, #0
   11164:	moveq	r5, r4
   11168:	mov	r0, #5
   1116c:	mov	r1, #0
   11170:	bl	10e28 <setlocale@plt>
   11174:	cmp	r0, #0
   11178:	beq	111b8 <putchar_unlocked@plt+0x348>
   1117c:	movw	r1, #18732	; 0x492c
   11180:	movt	r1, #1
   11184:	mov	r2, #3
   11188:	bl	10e58 <strncmp@plt>
   1118c:	cmp	r0, #0
   11190:	beq	111b8 <putchar_unlocked@plt+0x348>
   11194:	movw	r1, #18736	; 0x4930
   11198:	movt	r1, #1
   1119c:	mov	r0, #0
   111a0:	mov	r2, #5
   111a4:	bl	10cd8 <dcgettext@plt>
   111a8:	movw	r1, #24876	; 0x612c
   111ac:	movt	r1, #2
   111b0:	ldr	r1, [r1]
   111b4:	bl	10c78 <fputs_unlocked@plt>
   111b8:	movw	r1, #18807	; 0x4977
   111bc:	movt	r1, #1
   111c0:	mov	r0, #0
   111c4:	mov	r2, #5
   111c8:	bl	10cd8 <dcgettext@plt>
   111cc:	mov	r1, r0
   111d0:	movw	r2, #18692	; 0x4904
   111d4:	movt	r2, #1
   111d8:	mov	r0, #1
   111dc:	mov	r3, r4
   111e0:	bl	10dec <__printf_chk@plt>
   111e4:	movw	r0, #18588	; 0x489c
   111e8:	movt	r0, #1
   111ec:	movw	r6, #18392	; 0x47d8
   111f0:	movt	r6, #1
   111f4:	cmp	r5, r4
   111f8:	moveq	r6, r0
   111fc:	movw	r1, #18834	; 0x4992
   11200:	movt	r1, #1
   11204:	mov	r0, #0
   11208:	mov	r2, #5
   1120c:	bl	10cd8 <dcgettext@plt>
   11210:	mov	r1, r0
   11214:	mov	r0, #1
   11218:	mov	r2, r5
   1121c:	mov	r3, r6
   11220:	sub	sp, fp, #16
   11224:	pop	{r4, r5, r6, sl, fp, lr}
   11228:	b	10dec <__printf_chk@plt>
   1122c:	push	{r4, r5, r6, sl, fp, lr}
   11230:	add	fp, sp, #16
   11234:	sub	sp, sp, #392	; 0x188
   11238:	mov	r4, r1
   1123c:	mov	r5, r0
   11240:	ldr	r0, [r1]
   11244:	bl	1172c <putchar_unlocked@plt+0x8bc>
   11248:	movw	r1, #18392	; 0x47d8
   1124c:	movt	r1, #1
   11250:	mov	r0, #6
   11254:	bl	10e28 <setlocale@plt>
   11258:	movw	r6, #18682	; 0x48fa
   1125c:	movt	r6, #1
   11260:	movw	r1, #18503	; 0x4847
   11264:	movt	r1, #1
   11268:	mov	r0, r6
   1126c:	bl	10e4c <bindtextdomain@plt>
   11270:	mov	r0, r6
   11274:	bl	10cf0 <textdomain@plt>
   11278:	movw	r0, #5700	; 0x1644
   1127c:	movt	r0, #1
   11280:	bl	144c0 <putchar_unlocked@plt+0x3650>
   11284:	mov	r0, r5
   11288:	mov	r1, r4
   1128c:	bl	11370 <putchar_unlocked@plt+0x500>
   11290:	mov	r4, r0
   11294:	cmp	r0, #0
   11298:	movweq	r4, #1
   1129c:	tst	r4, #31
   112a0:	beq	112f4 <putchar_unlocked@plt+0x484>
   112a4:	mov	r5, sp
   112a8:	mov	r0, r5
   112ac:	bl	10ccc <uname@plt>
   112b0:	cmn	r0, #1
   112b4:	beq	11344 <putchar_unlocked@plt+0x4d4>
   112b8:	tst	r4, #1
   112bc:	movne	r0, sp
   112c0:	blne	115d8 <putchar_unlocked@plt+0x768>
   112c4:	tst	r4, #2
   112c8:	addne	r0, r5, #65	; 0x41
   112cc:	blne	115d8 <putchar_unlocked@plt+0x768>
   112d0:	tst	r4, #4
   112d4:	addne	r0, r5, #130	; 0x82
   112d8:	blne	115d8 <putchar_unlocked@plt+0x768>
   112dc:	tst	r4, #8
   112e0:	addne	r0, r5, #195	; 0xc3
   112e4:	blne	115d8 <putchar_unlocked@plt+0x768>
   112e8:	tst	r4, #16
   112ec:	addne	r0, r5, #260	; 0x104
   112f0:	blne	115d8 <putchar_unlocked@plt+0x768>
   112f4:	cmn	r4, #1
   112f8:	andsne	r0, r4, #32
   112fc:	movwne	r0, #19064	; 0x4a78
   11300:	movtne	r0, #1
   11304:	blne	115dc <putchar_unlocked@plt+0x76c>
   11308:	cmn	r4, #1
   1130c:	andsne	r0, r4, #64	; 0x40
   11310:	movwne	r0, #19064	; 0x4a78
   11314:	movtne	r0, #1
   11318:	blne	115dc <putchar_unlocked@plt+0x76c>
   1131c:	tst	r4, #128	; 0x80
   11320:	beq	11330 <putchar_unlocked@plt+0x4c0>
   11324:	movw	r0, #18550	; 0x4876
   11328:	movt	r0, #1
   1132c:	bl	115dc <putchar_unlocked@plt+0x76c>
   11330:	mov	r0, #10
   11334:	bl	10e70 <putchar_unlocked@plt>
   11338:	mov	r0, #0
   1133c:	sub	sp, fp, #16
   11340:	pop	{r4, r5, r6, sl, fp, pc}
   11344:	bl	10dc8 <__errno_location@plt>
   11348:	ldr	r4, [r0]
   1134c:	movw	r1, #18527	; 0x485f
   11350:	movt	r1, #1
   11354:	mov	r0, #0
   11358:	mov	r2, #5
   1135c:	bl	10cd8 <dcgettext@plt>
   11360:	mov	r2, r0
   11364:	mov	r0, #1
   11368:	mov	r1, r4
   1136c:	bl	10d50 <error@plt>
   11370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11374:	add	fp, sp, #28
   11378:	sub	sp, sp, #12
   1137c:	mov	r4, r1
   11380:	mov	r5, r0
   11384:	movw	r9, #24776	; 0x60c8
   11388:	movt	r9, #2
   1138c:	ldr	r0, [r9]
   11390:	cmp	r0, #2
   11394:	bne	1140c <putchar_unlocked@plt+0x59c>
   11398:	mov	r0, #0
   1139c:	str	r0, [sp]
   113a0:	movw	r2, #18392	; 0x47d8
   113a4:	movt	r2, #1
   113a8:	movw	r3, #19128	; 0x4ab8
   113ac:	movt	r3, #1
   113b0:	mov	r0, r5
   113b4:	mov	r1, r4
   113b8:	bl	10d8c <getopt_long@plt>
   113bc:	mov	r6, #16
   113c0:	cmn	r0, #1
   113c4:	beq	11500 <putchar_unlocked@plt+0x690>
   113c8:	cmn	r0, #3
   113cc:	bne	115c0 <putchar_unlocked@plt+0x750>
   113d0:	movw	r0, #24780	; 0x60cc
   113d4:	movt	r0, #2
   113d8:	ldr	r3, [r0]
   113dc:	movw	r0, #24876	; 0x612c
   113e0:	movt	r0, #2
   113e4:	ldr	r0, [r0]
   113e8:	ldr	r2, [r9]
   113ec:	mov	r1, #0
   113f0:	movw	r7, #18901	; 0x49d5
   113f4:	movt	r7, #1
   113f8:	movw	r6, #18885	; 0x49c5
   113fc:	movt	r6, #1
   11400:	stm	sp, {r6, r7}
   11404:	str	r1, [sp, #8]
   11408:	b	11594 <putchar_unlocked@plt+0x724>
   1140c:	mov	sl, #0
   11410:	movw	r8, #18911	; 0x49df
   11414:	movt	r8, #1
   11418:	movw	r7, #19176	; 0x4ae8
   1141c:	movt	r7, #1
   11420:	mov	r0, #0
   11424:	mov	r6, r0
   11428:	str	sl, [sp]
   1142c:	mov	r0, r5
   11430:	mov	r1, r4
   11434:	mov	r2, r8
   11438:	mov	r3, r7
   1143c:	bl	10d8c <getopt_long@plt>
   11440:	cmp	r0, #96	; 0x60
   11444:	ble	114f8 <putchar_unlocked@plt+0x688>
   11448:	sub	r1, r0, #97	; 0x61
   1144c:	cmp	r1, #21
   11450:	bhi	115d0 <putchar_unlocked@plt+0x760>
   11454:	mvn	r0, #0
   11458:	add	r2, pc, #0
   1145c:	ldr	pc, [r2, r1, lsl #2]
   11460:	andeq	r1, r1, r4, lsr #8
   11464:	ldrdeq	r1, [r1], -r0
   11468:	ldrdeq	r1, [r1], -r0
   1146c:	ldrdeq	r1, [r1], -r0
   11470:	ldrdeq	r1, [r1], -r0
   11474:	ldrdeq	r1, [r1], -r0
   11478:	ldrdeq	r1, [r1], -r0
   1147c:	ldrdeq	r1, [r1], -r0
   11480:			; <UNDEFINED> instruction: 0x000114b8
   11484:	ldrdeq	r1, [r1], -r0
   11488:	ldrdeq	r1, [r1], -r0
   1148c:	ldrdeq	r1, [r1], -r0
   11490:	ldrdeq	r1, [r1], -r0
   11494:	andeq	r1, r1, r0, asr #9
   11498:	strdeq	r1, [r1], -r0
   1149c:	andeq	r1, r1, r8, ror #9
   114a0:	ldrdeq	r1, [r1], -r0
   114a4:	ldrdeq	r1, [r1], -r8
   114a8:	andeq	r1, r1, r0, ror #9
   114ac:	ldrdeq	r1, [r1], -r0
   114b0:	ldrdeq	r1, [r1], -r0
   114b4:	andeq	r1, r1, r8, asr #9
   114b8:	orr	r0, r6, #64	; 0x40
   114bc:	b	11424 <putchar_unlocked@plt+0x5b4>
   114c0:	orr	r0, r6, #2
   114c4:	b	11424 <putchar_unlocked@plt+0x5b4>
   114c8:	orr	r0, r6, #8
   114cc:	b	11424 <putchar_unlocked@plt+0x5b4>
   114d0:	orr	r0, r6, #16
   114d4:	b	11424 <putchar_unlocked@plt+0x5b4>
   114d8:	orr	r0, r6, #4
   114dc:	b	11424 <putchar_unlocked@plt+0x5b4>
   114e0:	orr	r0, r6, #1
   114e4:	b	11424 <putchar_unlocked@plt+0x5b4>
   114e8:	orr	r0, r6, #32
   114ec:	b	11424 <putchar_unlocked@plt+0x5b4>
   114f0:	orr	r0, r6, #128	; 0x80
   114f4:	b	11424 <putchar_unlocked@plt+0x5b4>
   114f8:	cmn	r0, #1
   114fc:	bne	1155c <putchar_unlocked@plt+0x6ec>
   11500:	movw	r7, #24864	; 0x6120
   11504:	movt	r7, #2
   11508:	ldr	r0, [r7]
   1150c:	cmp	r0, r5
   11510:	moveq	r0, r6
   11514:	subeq	sp, fp, #28
   11518:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1151c:	movw	r1, #18921	; 0x49e9
   11520:	movt	r1, #1
   11524:	mov	r0, #0
   11528:	mov	r2, #5
   1152c:	bl	10cd8 <dcgettext@plt>
   11530:	mov	r5, r0
   11534:	ldr	r0, [r7]
   11538:	ldr	r0, [r4, r0, lsl #2]
   1153c:	bl	12f20 <putchar_unlocked@plt+0x20b0>
   11540:	mov	r3, r0
   11544:	mov	r0, #0
   11548:	mov	r1, #0
   1154c:	mov	r2, r5
   11550:	bl	10d50 <error@plt>
   11554:	mov	r0, #1
   11558:	bl	10f6c <putchar_unlocked@plt+0xfc>
   1155c:	cmn	r0, #3
   11560:	bne	115c0 <putchar_unlocked@plt+0x750>
   11564:	movw	r0, #24780	; 0x60cc
   11568:	movt	r0, #2
   1156c:	ldr	r3, [r0]
   11570:	movw	r0, #24876	; 0x612c
   11574:	movt	r0, #2
   11578:	ldr	r0, [r0]
   1157c:	ldr	r2, [r9]
   11580:	mov	r1, #0
   11584:	movw	r7, #18885	; 0x49c5
   11588:	movt	r7, #1
   1158c:	str	r7, [sp]
   11590:	str	r1, [sp, #4]
   11594:	movw	r7, #18492	; 0x483c
   11598:	movt	r7, #1
   1159c:	movw	r1, #18498	; 0x4842
   115a0:	movt	r1, #1
   115a4:	cmp	r2, #1
   115a8:	moveq	r1, r7
   115ac:	movw	r2, #18678	; 0x48f6
   115b0:	movt	r2, #1
   115b4:	bl	136f8 <putchar_unlocked@plt+0x2888>
   115b8:	mov	r0, #0
   115bc:	bl	10da4 <exit@plt>
   115c0:	cmn	r0, #2
   115c4:	bne	115d0 <putchar_unlocked@plt+0x760>
   115c8:	mov	r0, #0
   115cc:	bl	10f6c <putchar_unlocked@plt+0xfc>
   115d0:	mov	r0, #1
   115d4:	bl	10f6c <putchar_unlocked@plt+0xfc>
   115d8:	b	115dc <putchar_unlocked@plt+0x76c>
   115dc:	push	{r4, r5, fp, lr}
   115e0:	add	fp, sp, #8
   115e4:	mov	r4, r0
   115e8:	movw	r5, #24881	; 0x6131
   115ec:	movt	r5, #2
   115f0:	ldrb	r0, [r5]
   115f4:	cmp	r0, #1
   115f8:	bne	11604 <putchar_unlocked@plt+0x794>
   115fc:	mov	r0, #32
   11600:	bl	10e70 <putchar_unlocked@plt>
   11604:	mov	r0, #1
   11608:	strb	r0, [r5]
   1160c:	movw	r0, #24876	; 0x612c
   11610:	movt	r0, #2
   11614:	ldr	r1, [r0]
   11618:	mov	r0, r4
   1161c:	pop	{r4, r5, fp, lr}
   11620:	b	10c78 <fputs_unlocked@plt>
   11624:	movw	r1, #24884	; 0x6134
   11628:	movt	r1, #2
   1162c:	str	r0, [r1]
   11630:	bx	lr
   11634:	movw	r1, #24888	; 0x6138
   11638:	movt	r1, #2
   1163c:	strb	r0, [r1]
   11640:	bx	lr
   11644:	push	{r4, r5, r6, sl, fp, lr}
   11648:	add	fp, sp, #16
   1164c:	sub	sp, sp, #8
   11650:	movw	r0, #24876	; 0x612c
   11654:	movt	r0, #2
   11658:	ldr	r0, [r0]
   1165c:	bl	13fc8 <putchar_unlocked@plt+0x3158>
   11660:	cmp	r0, #0
   11664:	beq	1168c <putchar_unlocked@plt+0x81c>
   11668:	movw	r0, #24888	; 0x6138
   1166c:	movt	r0, #2
   11670:	ldrb	r0, [r0]
   11674:	cmp	r0, #0
   11678:	beq	116ac <putchar_unlocked@plt+0x83c>
   1167c:	bl	10dc8 <__errno_location@plt>
   11680:	ldr	r0, [r0]
   11684:	cmp	r0, #32
   11688:	bne	116ac <putchar_unlocked@plt+0x83c>
   1168c:	movw	r0, #24872	; 0x6128
   11690:	movt	r0, #2
   11694:	ldr	r0, [r0]
   11698:	bl	13fc8 <putchar_unlocked@plt+0x3158>
   1169c:	cmp	r0, #0
   116a0:	subeq	sp, fp, #16
   116a4:	popeq	{r4, r5, r6, sl, fp, pc}
   116a8:	b	1171c <putchar_unlocked@plt+0x8ac>
   116ac:	movw	r1, #19415	; 0x4bd7
   116b0:	movt	r1, #1
   116b4:	mov	r0, #0
   116b8:	mov	r2, #5
   116bc:	bl	10cd8 <dcgettext@plt>
   116c0:	mov	r4, r0
   116c4:	movw	r0, #24884	; 0x6134
   116c8:	movt	r0, #2
   116cc:	ldr	r6, [r0]
   116d0:	bl	10dc8 <__errno_location@plt>
   116d4:	ldr	r5, [r0]
   116d8:	cmp	r6, #0
   116dc:	bne	116f8 <putchar_unlocked@plt+0x888>
   116e0:	movw	r2, #19431	; 0x4be7
   116e4:	movt	r2, #1
   116e8:	mov	r0, #0
   116ec:	mov	r1, r5
   116f0:	mov	r3, r4
   116f4:	b	11718 <putchar_unlocked@plt+0x8a8>
   116f8:	mov	r0, r6
   116fc:	bl	12dd0 <putchar_unlocked@plt+0x1f60>
   11700:	mov	r3, r0
   11704:	str	r4, [sp]
   11708:	movw	r2, #19427	; 0x4be3
   1170c:	movt	r2, #1
   11710:	mov	r0, #0
   11714:	mov	r1, r5
   11718:	bl	10d50 <error@plt>
   1171c:	movw	r0, #24784	; 0x60d0
   11720:	movt	r0, #2
   11724:	ldr	r0, [r0]
   11728:	bl	10ca8 <_exit@plt>
   1172c:	push	{r4, r5, fp, lr}
   11730:	add	fp, sp, #8
   11734:	cmp	r0, #0
   11738:	beq	117cc <putchar_unlocked@plt+0x95c>
   1173c:	mov	r4, r0
   11740:	mov	r1, #47	; 0x2f
   11744:	bl	10e34 <strrchr@plt>
   11748:	cmp	r0, #0
   1174c:	mov	r5, r4
   11750:	addne	r5, r0, #1
   11754:	sub	r0, r5, r4
   11758:	cmp	r0, #7
   1175c:	blt	117b0 <putchar_unlocked@plt+0x940>
   11760:	sub	r0, r5, #7
   11764:	movw	r1, #19490	; 0x4c22
   11768:	movt	r1, #1
   1176c:	mov	r2, #7
   11770:	bl	10e58 <strncmp@plt>
   11774:	cmp	r0, #0
   11778:	bne	117b0 <putchar_unlocked@plt+0x940>
   1177c:	movw	r1, #19498	; 0x4c2a
   11780:	movt	r1, #1
   11784:	mov	r0, r5
   11788:	mov	r2, #3
   1178c:	bl	10e58 <strncmp@plt>
   11790:	cmp	r0, #0
   11794:	beq	117a0 <putchar_unlocked@plt+0x930>
   11798:	mov	r4, r5
   1179c:	b	117b0 <putchar_unlocked@plt+0x940>
   117a0:	add	r4, r5, #3
   117a4:	movw	r0, #24856	; 0x6118
   117a8:	movt	r0, #2
   117ac:	str	r4, [r0]
   117b0:	movw	r0, #24860	; 0x611c
   117b4:	movt	r0, #2
   117b8:	str	r4, [r0]
   117bc:	movw	r0, #24892	; 0x613c
   117c0:	movt	r0, #2
   117c4:	str	r4, [r0]
   117c8:	pop	{r4, r5, fp, pc}
   117cc:	movw	r0, #24872	; 0x6128
   117d0:	movt	r0, #2
   117d4:	ldr	r3, [r0]
   117d8:	movw	r0, #19434	; 0x4bea
   117dc:	movt	r0, #1
   117e0:	mov	r1, #55	; 0x37
   117e4:	mov	r2, #1
   117e8:	bl	10d08 <fwrite@plt>
   117ec:	bl	10e64 <abort@plt>
   117f0:	push	{r4, r5, r6, sl, fp, lr}
   117f4:	add	fp, sp, #16
   117f8:	mov	r4, r0
   117fc:	movw	r0, #24896	; 0x6140
   11800:	movt	r0, #2
   11804:	cmp	r4, #0
   11808:	moveq	r4, r0
   1180c:	bl	10dc8 <__errno_location@plt>
   11810:	mov	r5, r0
   11814:	ldr	r6, [r0]
   11818:	mov	r0, r4
   1181c:	mov	r1, #48	; 0x30
   11820:	bl	13ae8 <putchar_unlocked@plt+0x2c78>
   11824:	str	r6, [r5]
   11828:	pop	{r4, r5, r6, sl, fp, pc}
   1182c:	movw	r1, #24896	; 0x6140
   11830:	movt	r1, #2
   11834:	cmp	r0, #0
   11838:	movne	r1, r0
   1183c:	ldr	r0, [r1]
   11840:	bx	lr
   11844:	movw	r2, #24896	; 0x6140
   11848:	movt	r2, #2
   1184c:	cmp	r0, #0
   11850:	movne	r2, r0
   11854:	str	r1, [r2]
   11858:	bx	lr
   1185c:	movw	r3, #24896	; 0x6140
   11860:	movt	r3, #2
   11864:	cmp	r0, #0
   11868:	movne	r3, r0
   1186c:	ubfx	r0, r1, #5, #3
   11870:	add	ip, r3, r0, lsl #2
   11874:	ldr	r3, [ip, #8]
   11878:	and	r1, r1, #31
   1187c:	mov	r0, #1
   11880:	and	r0, r0, r3, lsr r1
   11884:	and	r2, r2, #1
   11888:	eor	r2, r0, r2
   1188c:	eor	r1, r3, r2, lsl r1
   11890:	str	r1, [ip, #8]
   11894:	bx	lr
   11898:	movw	r2, #24896	; 0x6140
   1189c:	movt	r2, #2
   118a0:	cmp	r0, #0
   118a4:	movne	r2, r0
   118a8:	ldr	r0, [r2, #4]
   118ac:	str	r1, [r2, #4]
   118b0:	bx	lr
   118b4:	push	{fp, lr}
   118b8:	mov	fp, sp
   118bc:	movw	r3, #24896	; 0x6140
   118c0:	movt	r3, #2
   118c4:	cmp	r0, #0
   118c8:	movne	r3, r0
   118cc:	mov	r0, #10
   118d0:	str	r0, [r3]
   118d4:	cmp	r1, #0
   118d8:	cmpne	r2, #0
   118dc:	bne	118e4 <putchar_unlocked@plt+0xa74>
   118e0:	bl	10e64 <abort@plt>
   118e4:	str	r1, [r3, #40]	; 0x28
   118e8:	str	r2, [r3, #44]	; 0x2c
   118ec:	pop	{fp, pc}
   118f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118f4:	add	fp, sp, #28
   118f8:	sub	sp, sp, #20
   118fc:	mov	r8, r3
   11900:	mov	r9, r2
   11904:	mov	sl, r1
   11908:	mov	r7, r0
   1190c:	ldr	r0, [fp, #8]
   11910:	movw	r5, #24896	; 0x6140
   11914:	movt	r5, #2
   11918:	cmp	r0, #0
   1191c:	movne	r5, r0
   11920:	bl	10dc8 <__errno_location@plt>
   11924:	mov	r4, r0
   11928:	ldm	r5, {r0, r1}
   1192c:	ldr	r2, [r5, #40]	; 0x28
   11930:	ldr	r3, [r5, #44]	; 0x2c
   11934:	ldr	r6, [r4]
   11938:	add	r5, r5, #8
   1193c:	stm	sp, {r0, r1, r5}
   11940:	str	r2, [sp, #12]
   11944:	str	r3, [sp, #16]
   11948:	mov	r0, r7
   1194c:	mov	r1, sl
   11950:	mov	r2, r9
   11954:	mov	r3, r8
   11958:	bl	11968 <putchar_unlocked@plt+0xaf8>
   1195c:	str	r6, [r4]
   11960:	sub	sp, fp, #28
   11964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1196c:	add	fp, sp, #28
   11970:	sub	sp, sp, #156	; 0x9c
   11974:	mov	r9, r3
   11978:	mov	r7, r1
   1197c:	mov	r6, r0
   11980:	str	r2, [fp, #-80]	; 0xffffffb0
   11984:	add	r0, r2, #1
   11988:	str	r0, [sp, #76]	; 0x4c
   1198c:	ldr	r0, [fp, #12]
   11990:	and	r1, r0, #1
   11994:	str	r1, [sp, #40]	; 0x28
   11998:	and	r1, r0, #4
   1199c:	str	r1, [sp, #36]	; 0x24
   119a0:	ubfx	r4, r0, #1, #1
   119a4:	bl	10d20 <__ctype_get_mb_cur_max@plt>
   119a8:	str	r0, [sp, #44]	; 0x2c
   119ac:	ldr	r0, [fp, #24]
   119b0:	str	r0, [sp, #88]	; 0x58
   119b4:	ldr	r0, [fp, #20]
   119b8:	str	r0, [sp, #80]	; 0x50
   119bc:	ldr	r1, [fp, #8]
   119c0:	mov	r0, #0
   119c4:	str	r0, [sp, #84]	; 0x54
   119c8:	mov	r0, #0
   119cc:	str	r0, [fp, #-84]	; 0xffffffac
   119d0:	mov	r0, #0
   119d4:	str	r0, [fp, #-72]	; 0xffffffb8
   119d8:	mov	r0, #0
   119dc:	mov	r2, #0
   119e0:	str	r2, [fp, #-56]	; 0xffffffc8
   119e4:	mov	r2, #0
   119e8:	str	r2, [sp, #64]	; 0x40
   119ec:	mov	r2, #1
   119f0:	str	r2, [fp, #-48]	; 0xffffffd0
   119f4:	cmp	r1, #10
   119f8:	bhi	12924 <putchar_unlocked@plt+0x1ab4>
   119fc:	mov	sl, r7
   11a00:	mov	r7, r1
   11a04:	add	r1, pc, #24
   11a08:	mov	r8, #0
   11a0c:	mov	r2, #1
   11a10:	mov	r3, #0
   11a14:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11a18:	mov	lr, r9
   11a1c:	mov	r5, r6
   11a20:	ldr	pc, [r1, r7, lsl #2]
   11a24:	strdeq	r1, [r1], -r8
   11a28:	andeq	r1, r1, r8, lsr fp
   11a2c:	andeq	r1, r1, r8, lsl #22
   11a30:	strdeq	r1, [r1], -r0
   11a34:	andeq	r1, r1, ip, lsr #22
   11a38:	andeq	r1, r1, ip, lsl #23
   11a3c:	andeq	r1, r1, r8, lsl fp
   11a40:	andeq	r1, r1, r8, ror #23
   11a44:	andeq	r1, r1, r0, asr sl
   11a48:	andeq	r1, r1, r0, asr sl
   11a4c:	andeq	r1, r1, ip, ror sl
   11a50:	movw	r0, #19582	; 0x4c7e
   11a54:	movt	r0, #1
   11a58:	mov	r1, r7
   11a5c:	bl	12f2c <putchar_unlocked@plt+0x20bc>
   11a60:	str	r0, [sp, #80]	; 0x50
   11a64:	movw	r0, #19584	; 0x4c80
   11a68:	movt	r0, #1
   11a6c:	mov	r1, r7
   11a70:	bl	12f2c <putchar_unlocked@plt+0x20bc>
   11a74:	mov	r5, r6
   11a78:	str	r0, [sp, #88]	; 0x58
   11a7c:	mov	r8, #0
   11a80:	tst	r4, #1
   11a84:	str	r7, [fp, #-64]	; 0xffffffc0
   11a88:	bne	11ac0 <putchar_unlocked@plt+0xc50>
   11a8c:	ldr	r0, [sp, #80]	; 0x50
   11a90:	ldrb	r0, [r0]
   11a94:	cmp	r0, #0
   11a98:	beq	11ac0 <putchar_unlocked@plt+0xc50>
   11a9c:	ldr	r1, [sp, #80]	; 0x50
   11aa0:	add	r1, r1, #1
   11aa4:	mov	r8, #0
   11aa8:	cmp	r8, sl
   11aac:	strbcc	r0, [r5, r8]
   11ab0:	ldrb	r0, [r1, r8]
   11ab4:	add	r8, r8, #1
   11ab8:	cmp	r0, #0
   11abc:	bne	11aa8 <putchar_unlocked@plt+0xc38>
   11ac0:	ldr	r7, [sp, #88]	; 0x58
   11ac4:	mov	r0, r7
   11ac8:	bl	10dbc <strlen@plt>
   11acc:	mov	r5, r6
   11ad0:	str	r0, [fp, #-72]	; 0xffffffb8
   11ad4:	str	r7, [fp, #-84]	; 0xffffffac
   11ad8:	mov	r2, #1
   11adc:	mov	r3, r4
   11ae0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11ae4:	mov	lr, r9
   11ae8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   11aec:	b	11be8 <putchar_unlocked@plt+0xd78>
   11af0:	mov	r0, #1
   11af4:	b	11b38 <putchar_unlocked@plt+0xcc8>
   11af8:	mov	r7, #0
   11afc:	mov	r8, #0
   11b00:	mov	r2, r0
   11b04:	b	11be4 <putchar_unlocked@plt+0xd74>
   11b08:	tst	r4, #1
   11b0c:	bne	11b38 <putchar_unlocked@plt+0xcc8>
   11b10:	mov	r2, r0
   11b14:	b	11b60 <putchar_unlocked@plt+0xcf0>
   11b18:	mov	r0, #1
   11b1c:	str	r0, [fp, #-72]	; 0xffffffb8
   11b20:	mov	r8, #0
   11b24:	mov	r7, #5
   11b28:	b	11ba4 <putchar_unlocked@plt+0xd34>
   11b2c:	mov	r2, #1
   11b30:	tst	r4, #1
   11b34:	beq	11b60 <putchar_unlocked@plt+0xcf0>
   11b38:	mov	r1, #1
   11b3c:	str	r1, [fp, #-72]	; 0xffffffb8
   11b40:	mov	r8, #0
   11b44:	mov	r7, #2
   11b48:	movw	r1, #19584	; 0x4c80
   11b4c:	movt	r1, #1
   11b50:	str	r1, [fp, #-84]	; 0xffffffac
   11b54:	mov	r2, r0
   11b58:	mov	r3, #1
   11b5c:	b	11be8 <putchar_unlocked@plt+0xd78>
   11b60:	mov	r8, #1
   11b64:	mov	r7, #2
   11b68:	cmp	sl, #0
   11b6c:	movne	r0, #39	; 0x27
   11b70:	strbne	r0, [r5]
   11b74:	movw	r0, #19584	; 0x4c80
   11b78:	movt	r0, #1
   11b7c:	str	r0, [fp, #-84]	; 0xffffffac
   11b80:	mov	r0, #1
   11b84:	str	r0, [fp, #-72]	; 0xffffffb8
   11b88:	b	11be4 <putchar_unlocked@plt+0xd74>
   11b8c:	mov	r7, #5
   11b90:	tst	r4, #1
   11b94:	beq	11bbc <putchar_unlocked@plt+0xd4c>
   11b98:	mov	r0, #1
   11b9c:	str	r0, [fp, #-72]	; 0xffffffb8
   11ba0:	mov	r8, #0
   11ba4:	movw	r0, #19580	; 0x4c7c
   11ba8:	movt	r0, #1
   11bac:	str	r0, [fp, #-84]	; 0xffffffac
   11bb0:	mov	r2, #1
   11bb4:	mov	r3, #1
   11bb8:	b	11be8 <putchar_unlocked@plt+0xd78>
   11bbc:	cmp	sl, #0
   11bc0:	movne	r0, #34	; 0x22
   11bc4:	strbne	r0, [r5]
   11bc8:	mov	r8, #1
   11bcc:	movw	r0, #19580	; 0x4c7c
   11bd0:	movt	r0, #1
   11bd4:	str	r0, [fp, #-84]	; 0xffffffac
   11bd8:	mov	r0, #1
   11bdc:	str	r0, [fp, #-72]	; 0xffffffb8
   11be0:	mov	r2, #1
   11be4:	mov	r3, #0
   11be8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11bec:	cmp	r0, #0
   11bf0:	movwne	r0, #1
   11bf4:	and	r1, r0, r3
   11bf8:	and	r1, r2, r1
   11bfc:	str	r1, [sp, #56]	; 0x38
   11c00:	sub	r1, r7, #2
   11c04:	clz	r1, r1
   11c08:	lsr	r1, r1, #5
   11c0c:	and	r1, r1, r3
   11c10:	str	r1, [sp, #68]	; 0x44
   11c14:	str	r7, [fp, #-64]	; 0xffffffc0
   11c18:	subs	r1, r7, #2
   11c1c:	movwne	r1, #1
   11c20:	eor	r4, r3, #1
   11c24:	str	r4, [fp, #-88]	; 0xffffffa8
   11c28:	orr	r4, r1, r4
   11c2c:	str	r4, [sp, #72]	; 0x48
   11c30:	and	r1, r1, r2
   11c34:	and	r0, r0, r1
   11c38:	str	r0, [fp, #-60]	; 0xffffffc4
   11c3c:	str	r3, [fp, #-76]	; 0xffffffb4
   11c40:	orr	r0, r1, r3
   11c44:	eor	r0, r0, #1
   11c48:	ldr	r1, [fp, #16]
   11c4c:	clz	r1, r1
   11c50:	lsr	r1, r1, #5
   11c54:	orr	r0, r1, r0
   11c58:	str	r0, [fp, #-68]	; 0xffffffbc
   11c5c:	str	r2, [sp, #92]	; 0x5c
   11c60:	eor	r0, r2, #1
   11c64:	str	r0, [sp, #60]	; 0x3c
   11c68:	mov	r7, #0
   11c6c:	cmn	lr, #1
   11c70:	beq	11c80 <putchar_unlocked@plt+0xe10>
   11c74:	cmp	r7, lr
   11c78:	bne	11c8c <putchar_unlocked@plt+0xe1c>
   11c7c:	b	12798 <putchar_unlocked@plt+0x1928>
   11c80:	ldrb	r0, [ip, r7]
   11c84:	cmp	r0, #0
   11c88:	beq	12798 <putchar_unlocked@plt+0x1928>
   11c8c:	mov	r9, #0
   11c90:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11c94:	cmp	r0, #0
   11c98:	beq	11ccc <putchar_unlocked@plt+0xe5c>
   11c9c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11ca0:	add	r4, r7, r0
   11ca4:	cmp	r0, #2
   11ca8:	bcc	11cc4 <putchar_unlocked@plt+0xe54>
   11cac:	cmn	lr, #1
   11cb0:	bne	11cc4 <putchar_unlocked@plt+0xe54>
   11cb4:	mov	r0, ip
   11cb8:	bl	10dbc <strlen@plt>
   11cbc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11cc0:	mov	lr, r0
   11cc4:	cmp	r4, lr
   11cc8:	bls	11cd8 <putchar_unlocked@plt+0xe68>
   11ccc:	mov	r0, #0
   11cd0:	str	r0, [fp, #-52]	; 0xffffffcc
   11cd4:	b	11d1c <putchar_unlocked@plt+0xeac>
   11cd8:	mov	r4, lr
   11cdc:	add	r0, ip, r7
   11ce0:	ldr	r1, [fp, #-84]	; 0xffffffac
   11ce4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11ce8:	bl	10db0 <bcmp@plt>
   11cec:	cmp	r0, #0
   11cf0:	mov	r1, r0
   11cf4:	movwne	r1, #1
   11cf8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11cfc:	orr	r1, r1, r2
   11d00:	tst	r1, #1
   11d04:	beq	1286c <putchar_unlocked@plt+0x19fc>
   11d08:	clz	r0, r0
   11d0c:	lsr	r0, r0, #5
   11d10:	str	r0, [fp, #-52]	; 0xffffffcc
   11d14:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11d18:	mov	lr, r4
   11d1c:	ldrb	r4, [ip, r7]
   11d20:	cmp	r4, #126	; 0x7e
   11d24:	bhi	12254 <putchar_unlocked@plt+0x13e4>
   11d28:	mov	r6, #1
   11d2c:	mov	r2, #110	; 0x6e
   11d30:	mov	r0, #97	; 0x61
   11d34:	add	r3, pc, #4
   11d38:	mov	r1, #0
   11d3c:	ldr	pc, [r3, r4, lsl #2]
   11d40:	strheq	r2, [r1], -r4
   11d44:	andeq	r2, r1, r4, asr r2
   11d48:	andeq	r2, r1, r4, asr r2
   11d4c:	andeq	r2, r1, r4, asr r2
   11d50:	andeq	r2, r1, r4, asr r2
   11d54:	andeq	r2, r1, r4, asr r2
   11d58:	andeq	r2, r1, r4, asr r2
   11d5c:	andeq	r2, r1, r8, lsr #6
   11d60:	muleq	r1, r4, r0
   11d64:	andeq	r2, r1, ip, lsl #1
   11d68:	andeq	r2, r1, r0, lsr #1
   11d6c:			; <UNDEFINED> instruction: 0x000121bc
   11d70:	andeq	r2, r1, r4, lsl #1
   11d74:	muleq	r1, ip, r0
   11d78:	andeq	r2, r1, r4, asr r2
   11d7c:	andeq	r2, r1, r4, asr r2
   11d80:	andeq	r2, r1, r4, asr r2
   11d84:	andeq	r2, r1, r4, asr r2
   11d88:	andeq	r2, r1, r4, asr r2
   11d8c:	andeq	r2, r1, r4, asr r2
   11d90:	andeq	r2, r1, r4, asr r2
   11d94:	andeq	r2, r1, r4, asr r2
   11d98:	andeq	r2, r1, r4, asr r2
   11d9c:	andeq	r2, r1, r4, asr r2
   11da0:	andeq	r2, r1, r4, asr r2
   11da4:	andeq	r2, r1, r4, asr r2
   11da8:	andeq	r2, r1, r4, asr r2
   11dac:	andeq	r2, r1, r4, asr r2
   11db0:	andeq	r2, r1, r4, asr r2
   11db4:	andeq	r2, r1, r4, asr r2
   11db8:	andeq	r2, r1, r4, asr r2
   11dbc:	andeq	r2, r1, r4, asr r2
   11dc0:	andeq	r2, r1, r8, lsr r0
   11dc4:	andeq	r2, r1, ip, lsr r0
   11dc8:	andeq	r2, r1, ip, lsr r0
   11dcc:	andeq	r2, r1, r4, lsr #32
   11dd0:	andeq	r2, r1, ip, lsr r0
   11dd4:	andeq	r1, r1, ip, lsr pc
   11dd8:	andeq	r2, r1, ip, lsr r0
   11ddc:	andeq	r2, r1, r4, asr #3
   11de0:	andeq	r2, r1, ip, lsr r0
   11de4:	andeq	r2, r1, ip, lsr r0
   11de8:	andeq	r2, r1, ip, lsr r0
   11dec:	andeq	r1, r1, ip, lsr pc
   11df0:	andeq	r1, r1, ip, lsr pc
   11df4:	andeq	r1, r1, ip, lsr pc
   11df8:	andeq	r1, r1, ip, lsr pc
   11dfc:	andeq	r1, r1, ip, lsr pc
   11e00:	andeq	r1, r1, ip, lsr pc
   11e04:	andeq	r1, r1, ip, lsr pc
   11e08:	andeq	r1, r1, ip, lsr pc
   11e0c:	andeq	r1, r1, ip, lsr pc
   11e10:	andeq	r1, r1, ip, lsr pc
   11e14:	andeq	r1, r1, ip, lsr pc
   11e18:	andeq	r1, r1, ip, lsr pc
   11e1c:	andeq	r1, r1, ip, lsr pc
   11e20:	andeq	r1, r1, ip, lsr pc
   11e24:	andeq	r1, r1, ip, lsr pc
   11e28:	andeq	r1, r1, ip, lsr pc
   11e2c:	andeq	r2, r1, ip, lsr r0
   11e30:	andeq	r2, r1, ip, lsr r0
   11e34:	andeq	r2, r1, ip, lsr r0
   11e38:	andeq	r2, r1, ip, lsr r0
   11e3c:	andeq	r2, r1, ip, lsl #3
   11e40:	andeq	r2, r1, r4, asr r2
   11e44:	andeq	r1, r1, ip, lsr pc
   11e48:	andeq	r1, r1, ip, lsr pc
   11e4c:	andeq	r1, r1, ip, lsr pc
   11e50:	andeq	r1, r1, ip, lsr pc
   11e54:	andeq	r1, r1, ip, lsr pc
   11e58:	andeq	r1, r1, ip, lsr pc
   11e5c:	andeq	r1, r1, ip, lsr pc
   11e60:	andeq	r1, r1, ip, lsr pc
   11e64:	andeq	r1, r1, ip, lsr pc
   11e68:	andeq	r1, r1, ip, lsr pc
   11e6c:	andeq	r1, r1, ip, lsr pc
   11e70:	andeq	r1, r1, ip, lsr pc
   11e74:	andeq	r1, r1, ip, lsr pc
   11e78:	andeq	r1, r1, ip, lsr pc
   11e7c:	andeq	r1, r1, ip, lsr pc
   11e80:	andeq	r1, r1, ip, lsr pc
   11e84:	andeq	r1, r1, ip, lsr pc
   11e88:	andeq	r1, r1, ip, lsr pc
   11e8c:	andeq	r1, r1, ip, lsr pc
   11e90:	andeq	r1, r1, ip, lsr pc
   11e94:	andeq	r1, r1, ip, lsr pc
   11e98:	andeq	r1, r1, ip, lsr pc
   11e9c:	andeq	r1, r1, ip, lsr pc
   11ea0:	andeq	r1, r1, ip, lsr pc
   11ea4:	andeq	r1, r1, ip, lsr pc
   11ea8:	andeq	r1, r1, ip, lsr pc
   11eac:	andeq	r2, r1, ip, lsr r0
   11eb0:	andeq	r2, r1, r4, rrx
   11eb4:	andeq	r1, r1, ip, lsr pc
   11eb8:	andeq	r2, r1, ip, lsr r0
   11ebc:	andeq	r1, r1, ip, lsr pc
   11ec0:	andeq	r2, r1, ip, lsr r0
   11ec4:	andeq	r1, r1, ip, lsr pc
   11ec8:	andeq	r1, r1, ip, lsr pc
   11ecc:	andeq	r1, r1, ip, lsr pc
   11ed0:	andeq	r1, r1, ip, lsr pc
   11ed4:	andeq	r1, r1, ip, lsr pc
   11ed8:	andeq	r1, r1, ip, lsr pc
   11edc:	andeq	r1, r1, ip, lsr pc
   11ee0:	andeq	r1, r1, ip, lsr pc
   11ee4:	andeq	r1, r1, ip, lsr pc
   11ee8:	andeq	r1, r1, ip, lsr pc
   11eec:	andeq	r1, r1, ip, lsr pc
   11ef0:	andeq	r1, r1, ip, lsr pc
   11ef4:	andeq	r1, r1, ip, lsr pc
   11ef8:	andeq	r1, r1, ip, lsr pc
   11efc:	andeq	r1, r1, ip, lsr pc
   11f00:	andeq	r1, r1, ip, lsr pc
   11f04:	andeq	r1, r1, ip, lsr pc
   11f08:	andeq	r1, r1, ip, lsr pc
   11f0c:	andeq	r1, r1, ip, lsr pc
   11f10:	andeq	r1, r1, ip, lsr pc
   11f14:	andeq	r1, r1, ip, lsr pc
   11f18:	andeq	r1, r1, ip, lsr pc
   11f1c:	andeq	r1, r1, ip, lsr pc
   11f20:	andeq	r1, r1, ip, lsr pc
   11f24:	andeq	r1, r1, ip, lsr pc
   11f28:	andeq	r1, r1, ip, lsr pc
   11f2c:	strdeq	r1, [r1], -r8
   11f30:	andeq	r2, r1, ip, lsr r0
   11f34:	strdeq	r1, [r1], -r8
   11f38:	andeq	r2, r1, r4, lsr #32
   11f3c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11f40:	tst	r0, #1
   11f44:	bne	11f70 <putchar_unlocked@plt+0x1100>
   11f48:	ubfx	r0, r4, #5, #3
   11f4c:	ldr	r1, [fp, #16]
   11f50:	ldr	r0, [r1, r0, lsl #2]
   11f54:	and	r1, r4, #31
   11f58:	mov	r2, #1
   11f5c:	tst	r0, r2, lsl r1
   11f60:	beq	11f70 <putchar_unlocked@plt+0x1100>
   11f64:	mov	r0, r4
   11f68:	mov	r1, r6
   11f6c:	b	11f84 <putchar_unlocked@plt+0x1114>
   11f70:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11f74:	cmp	r0, #0
   11f78:	mov	r0, r4
   11f7c:	mov	r1, r6
   11f80:	beq	122bc <putchar_unlocked@plt+0x144c>
   11f84:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11f88:	tst	r2, #1
   11f8c:	bne	12880 <putchar_unlocked@plt+0x1a10>
   11f90:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11f94:	subs	r2, r2, #2
   11f98:	movwne	r2, #1
   11f9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11fa0:	orr	r2, r2, r3
   11fa4:	tst	r2, #1
   11fa8:	bne	11fe4 <putchar_unlocked@plt+0x1174>
   11fac:	cmp	r8, sl
   11fb0:	movcc	r2, #39	; 0x27
   11fb4:	strbcc	r2, [r5, r8]
   11fb8:	add	r2, r8, #1
   11fbc:	cmp	r2, sl
   11fc0:	movcc	r3, #36	; 0x24
   11fc4:	strbcc	r3, [r5, r2]
   11fc8:	add	r2, r8, #2
   11fcc:	cmp	r2, sl
   11fd0:	movcc	r3, #39	; 0x27
   11fd4:	strbcc	r3, [r5, r2]
   11fd8:	add	r8, r8, #3
   11fdc:	mov	r2, #1
   11fe0:	str	r2, [fp, #-56]	; 0xffffffc8
   11fe4:	cmp	r8, sl
   11fe8:	movcc	r2, #92	; 0x5c
   11fec:	strbcc	r2, [r5, r8]
   11ff0:	add	r8, r8, #1
   11ff4:	b	12300 <putchar_unlocked@plt+0x1490>
   11ff8:	cmp	lr, #1
   11ffc:	beq	12024 <putchar_unlocked@plt+0x11b4>
   12000:	mov	r6, #0
   12004:	cmn	lr, #1
   12008:	bne	12030 <putchar_unlocked@plt+0x11c0>
   1200c:	ldrb	r0, [ip, #1]
   12010:	cmp	r0, #0
   12014:	beq	12024 <putchar_unlocked@plt+0x11b4>
   12018:	mvn	lr, #0
   1201c:	mov	r9, #0
   12020:	b	11f3c <putchar_unlocked@plt+0x10cc>
   12024:	mov	r6, #0
   12028:	cmp	r7, #0
   1202c:	beq	12038 <putchar_unlocked@plt+0x11c8>
   12030:	mov	r9, #0
   12034:	b	11f3c <putchar_unlocked@plt+0x10cc>
   12038:	mov	r1, #1
   1203c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12040:	cmp	r0, #2
   12044:	bne	1205c <putchar_unlocked@plt+0x11ec>
   12048:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1204c:	tst	r0, #1
   12050:	mov	r6, r1
   12054:	beq	11f3c <putchar_unlocked@plt+0x10cc>
   12058:	b	12880 <putchar_unlocked@plt+0x1a10>
   1205c:	mov	r6, r1
   12060:	b	11f3c <putchar_unlocked@plt+0x10cc>
   12064:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12068:	cmp	r0, #2
   1206c:	bne	122a0 <putchar_unlocked@plt+0x1430>
   12070:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12074:	tst	r0, #1
   12078:	bne	12880 <putchar_unlocked@plt+0x1a10>
   1207c:	mov	r9, #0
   12080:	b	122b4 <putchar_unlocked@plt+0x1444>
   12084:	mov	r0, #102	; 0x66
   12088:	b	12328 <putchar_unlocked@plt+0x14b8>
   1208c:	mov	r2, #116	; 0x74
   12090:	b	120a0 <putchar_unlocked@plt+0x1230>
   12094:	mov	r0, #98	; 0x62
   12098:	b	12328 <putchar_unlocked@plt+0x14b8>
   1209c:	mov	r2, #114	; 0x72
   120a0:	ldr	r0, [sp, #72]	; 0x48
   120a4:	tst	r0, #1
   120a8:	mov	r0, r2
   120ac:	bne	12328 <putchar_unlocked@plt+0x14b8>
   120b0:	b	12880 <putchar_unlocked@plt+0x1a10>
   120b4:	ldr	r0, [sp, #92]	; 0x5c
   120b8:	tst	r0, #1
   120bc:	beq	12344 <putchar_unlocked@plt+0x14d4>
   120c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   120c4:	tst	r0, #1
   120c8:	bne	12880 <putchar_unlocked@plt+0x1a10>
   120cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   120d0:	subs	r0, r0, #2
   120d4:	movwne	r0, #1
   120d8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   120dc:	orr	r0, r0, r1
   120e0:	tst	r0, #1
   120e4:	bne	12120 <putchar_unlocked@plt+0x12b0>
   120e8:	cmp	r8, sl
   120ec:	movcc	r0, #39	; 0x27
   120f0:	strbcc	r0, [r5, r8]
   120f4:	add	r0, r8, #1
   120f8:	cmp	r0, sl
   120fc:	movcc	r1, #36	; 0x24
   12100:	strbcc	r1, [r5, r0]
   12104:	add	r0, r8, #2
   12108:	cmp	r0, sl
   1210c:	movcc	r1, #39	; 0x27
   12110:	strbcc	r1, [r5, r0]
   12114:	add	r8, r8, #3
   12118:	mov	r0, #1
   1211c:	str	r0, [fp, #-56]	; 0xffffffc8
   12120:	cmp	r8, sl
   12124:	movcc	r0, #92	; 0x5c
   12128:	strbcc	r0, [r5, r8]
   1212c:	add	r0, r8, #1
   12130:	mov	r6, #0
   12134:	mov	r9, #1
   12138:	mov	r4, #48	; 0x30
   1213c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12140:	cmp	r1, #2
   12144:	beq	12508 <putchar_unlocked@plt+0x1698>
   12148:	add	r1, r7, #1
   1214c:	cmp	r1, lr
   12150:	bcs	12508 <putchar_unlocked@plt+0x1698>
   12154:	ldrb	r1, [ip, r1]
   12158:	sub	r1, r1, #48	; 0x30
   1215c:	uxtb	r1, r1
   12160:	cmp	r1, #9
   12164:	bhi	12508 <putchar_unlocked@plt+0x1698>
   12168:	cmp	r0, sl
   1216c:	movcc	r1, #48	; 0x30
   12170:	strbcc	r1, [r5, r0]
   12174:	add	r0, r8, #2
   12178:	cmp	r0, sl
   1217c:	movcc	r1, #48	; 0x30
   12180:	strbcc	r1, [r5, r0]
   12184:	add	r8, r8, #3
   12188:	b	11f3c <putchar_unlocked@plt+0x10cc>
   1218c:	mov	r9, #0
   12190:	mov	r4, #63	; 0x3f
   12194:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12198:	cmp	r0, #5
   1219c:	beq	12510 <putchar_unlocked@plt+0x16a0>
   121a0:	cmp	r0, #2
   121a4:	bne	125b8 <putchar_unlocked@plt+0x1748>
   121a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   121ac:	tst	r0, #1
   121b0:	mov	r6, #0
   121b4:	beq	11f3c <putchar_unlocked@plt+0x10cc>
   121b8:	b	12880 <putchar_unlocked@plt+0x1a10>
   121bc:	mov	r0, #118	; 0x76
   121c0:	b	12328 <putchar_unlocked@plt+0x14b8>
   121c4:	mov	r4, #39	; 0x27
   121c8:	mov	r0, #1
   121cc:	str	r0, [sp, #64]	; 0x40
   121d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   121d4:	cmp	r0, #2
   121d8:	bne	12360 <putchar_unlocked@plt+0x14f0>
   121dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   121e0:	tst	r0, #1
   121e4:	bne	12880 <putchar_unlocked@plt+0x1a10>
   121e8:	ldr	r2, [sp, #84]	; 0x54
   121ec:	cmp	r2, #0
   121f0:	mov	r0, r2
   121f4:	movwne	r0, #1
   121f8:	clz	r1, sl
   121fc:	lsr	r1, r1, #5
   12200:	orrs	r0, r0, r1
   12204:	moveq	r2, sl
   12208:	str	r2, [sp, #84]	; 0x54
   1220c:	moveq	sl, r0
   12210:	cmp	r8, sl
   12214:	movcc	r0, #39	; 0x27
   12218:	strbcc	r0, [r5, r8]
   1221c:	add	r0, r8, #1
   12220:	cmp	r0, sl
   12224:	movcc	r1, #92	; 0x5c
   12228:	strbcc	r1, [r5, r0]
   1222c:	add	r0, r8, #2
   12230:	cmp	r0, sl
   12234:	movcc	r1, #39	; 0x27
   12238:	strbcc	r1, [r5, r0]
   1223c:	add	r8, r8, #3
   12240:	mov	r0, #0
   12244:	str	r0, [fp, #-56]	; 0xffffffc8
   12248:	mov	r9, #0
   1224c:	mov	r6, #1
   12250:	b	11f3c <putchar_unlocked@plt+0x10cc>
   12254:	ldr	r0, [sp, #44]	; 0x2c
   12258:	cmp	r0, #1
   1225c:	bne	12368 <putchar_unlocked@plt+0x14f8>
   12260:	str	lr, [sp, #32]
   12264:	bl	10d98 <__ctype_b_loc@plt>
   12268:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1226c:	ldr	r0, [r0]
   12270:	add	r0, r0, r4, lsl #1
   12274:	ldrb	r0, [r0, #1]
   12278:	ubfx	r6, r0, #6, #1
   1227c:	mov	r2, #1
   12280:	ldr	r0, [sp, #60]	; 0x3c
   12284:	orr	r1, r6, r0
   12288:	cmp	r2, #1
   1228c:	bhi	125c0 <putchar_unlocked@plt+0x1750>
   12290:	tst	r1, #1
   12294:	beq	125c0 <putchar_unlocked@plt+0x1750>
   12298:	ldr	lr, [sp, #32]
   1229c:	b	11f3c <putchar_unlocked@plt+0x10cc>
   122a0:	mov	r9, #0
   122a4:	mov	r0, #92	; 0x5c
   122a8:	ldr	r1, [sp, #56]	; 0x38
   122ac:	cmp	r1, #0
   122b0:	beq	12328 <putchar_unlocked@plt+0x14b8>
   122b4:	mov	r4, #92	; 0x5c
   122b8:	mov	r6, #0
   122bc:	cmp	r9, #0
   122c0:	bne	122f8 <putchar_unlocked@plt+0x1488>
   122c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   122c8:	tst	r0, #1
   122cc:	beq	122f8 <putchar_unlocked@plt+0x1488>
   122d0:	cmp	r8, sl
   122d4:	movcc	r0, #39	; 0x27
   122d8:	strbcc	r0, [r5, r8]
   122dc:	add	r0, r8, #1
   122e0:	cmp	r0, sl
   122e4:	movcc	r1, #39	; 0x27
   122e8:	strbcc	r1, [r5, r0]
   122ec:	add	r8, r8, #2
   122f0:	mov	r0, #0
   122f4:	str	r0, [fp, #-56]	; 0xffffffc8
   122f8:	mov	r1, r6
   122fc:	mov	r0, r4
   12300:	cmp	r8, sl
   12304:	strbcc	r0, [r5, r8]
   12308:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1230c:	and	r0, r0, r1
   12310:	str	r0, [fp, #-48]	; 0xffffffd0
   12314:	add	r8, r8, #1
   12318:	add	r7, r7, #1
   1231c:	cmn	lr, #1
   12320:	bne	11c74 <putchar_unlocked@plt+0xe04>
   12324:	b	11c80 <putchar_unlocked@plt+0xe10>
   12328:	mov	r9, #0
   1232c:	ldr	r1, [sp, #92]	; 0x5c
   12330:	tst	r1, #1
   12334:	mov	r6, #0
   12338:	mov	r1, #0
   1233c:	beq	11f3c <putchar_unlocked@plt+0x10cc>
   12340:	b	11f84 <putchar_unlocked@plt+0x1114>
   12344:	mov	r4, #0
   12348:	ldr	r0, [sp, #40]	; 0x28
   1234c:	cmp	r0, #0
   12350:	mov	r9, #0
   12354:	mov	r6, #0
   12358:	beq	11f3c <putchar_unlocked@plt+0x10cc>
   1235c:	b	12318 <putchar_unlocked@plt+0x14a8>
   12360:	mov	r6, #1
   12364:	b	11f3c <putchar_unlocked@plt+0x10cc>
   12368:	mov	r0, #0
   1236c:	str	r0, [fp, #-36]	; 0xffffffdc
   12370:	str	r0, [fp, #-40]	; 0xffffffd8
   12374:	cmn	lr, #1
   12378:	bne	1238c <putchar_unlocked@plt+0x151c>
   1237c:	mov	r0, ip
   12380:	bl	10dbc <strlen@plt>
   12384:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12388:	mov	lr, r0
   1238c:	ldr	r0, [sp, #76]	; 0x4c
   12390:	add	r0, r0, r7
   12394:	str	r0, [sp, #24]
   12398:	mov	r6, #1
   1239c:	mov	r2, #0
   123a0:	sub	r0, fp, #40	; 0x28
   123a4:	mov	r3, r0
   123a8:	str	r5, [sp, #28]
   123ac:	str	lr, [sp, #32]
   123b0:	b	123f4 <putchar_unlocked@plt+0x1584>
   123b4:	ldr	r5, [sp, #52]	; 0x34
   123b8:	add	r5, r0, r5
   123bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   123c0:	bl	10cfc <iswprint@plt>
   123c4:	cmp	r0, #0
   123c8:	movwne	r0, #1
   123cc:	and	r6, r6, r0
   123d0:	sub	r0, fp, #40	; 0x28
   123d4:	bl	10cc0 <mbsinit@plt>
   123d8:	sub	r3, fp, #40	; 0x28
   123dc:	mov	r2, r5
   123e0:	ldr	lr, [sp, #32]
   123e4:	cmp	r0, #0
   123e8:	ldr	r5, [sp, #28]
   123ec:	ldr	ip, [fp, #-80]	; 0xffffffb0
   123f0:	bne	12280 <putchar_unlocked@plt+0x1410>
   123f4:	str	r2, [sp, #52]	; 0x34
   123f8:	add	r0, r2, r7
   123fc:	add	r1, ip, r0
   12400:	str	r0, [sp, #48]	; 0x30
   12404:	sub	r2, lr, r0
   12408:	sub	r0, fp, #44	; 0x2c
   1240c:	bl	142ac <putchar_unlocked@plt+0x343c>
   12410:	cmp	r0, #0
   12414:	beq	1278c <putchar_unlocked@plt+0x191c>
   12418:	cmn	r0, #1
   1241c:	beq	12748 <putchar_unlocked@plt+0x18d8>
   12420:	cmn	r0, #2
   12424:	ldr	lr, [sp, #32]
   12428:	beq	12750 <putchar_unlocked@plt+0x18e0>
   1242c:	cmp	r0, #2
   12430:	mov	r1, #0
   12434:	movwcc	r1, #1
   12438:	ldr	r2, [sp, #68]	; 0x44
   1243c:	eor	r2, r2, #1
   12440:	orrs	r1, r2, r1
   12444:	bne	123b4 <putchar_unlocked@plt+0x1544>
   12448:	ldr	r1, [sp, #52]	; 0x34
   1244c:	ldr	r2, [sp, #24]
   12450:	add	r1, r2, r1
   12454:	sub	r2, r0, #1
   12458:	b	12468 <putchar_unlocked@plt+0x15f8>
   1245c:	add	r1, r1, #1
   12460:	subs	r2, r2, #1
   12464:	beq	123b4 <putchar_unlocked@plt+0x1544>
   12468:	ldrb	r3, [r1]
   1246c:	sub	r3, r3, #91	; 0x5b
   12470:	cmp	r3, #33	; 0x21
   12474:	bhi	1245c <putchar_unlocked@plt+0x15ec>
   12478:	add	r5, pc, #0
   1247c:	ldr	pc, [r5, r3, lsl #2]
   12480:	andeq	r2, r1, r8, ror r8
   12484:	andeq	r2, r1, r8, ror r8
   12488:	andeq	r2, r1, ip, asr r4
   1248c:	andeq	r2, r1, r8, ror r8
   12490:	andeq	r2, r1, ip, asr r4
   12494:	andeq	r2, r1, r8, ror r8
   12498:	andeq	r2, r1, ip, asr r4
   1249c:	andeq	r2, r1, ip, asr r4
   124a0:	andeq	r2, r1, ip, asr r4
   124a4:	andeq	r2, r1, ip, asr r4
   124a8:	andeq	r2, r1, ip, asr r4
   124ac:	andeq	r2, r1, ip, asr r4
   124b0:	andeq	r2, r1, ip, asr r4
   124b4:	andeq	r2, r1, ip, asr r4
   124b8:	andeq	r2, r1, ip, asr r4
   124bc:	andeq	r2, r1, ip, asr r4
   124c0:	andeq	r2, r1, ip, asr r4
   124c4:	andeq	r2, r1, ip, asr r4
   124c8:	andeq	r2, r1, ip, asr r4
   124cc:	andeq	r2, r1, ip, asr r4
   124d0:	andeq	r2, r1, ip, asr r4
   124d4:	andeq	r2, r1, ip, asr r4
   124d8:	andeq	r2, r1, ip, asr r4
   124dc:	andeq	r2, r1, ip, asr r4
   124e0:	andeq	r2, r1, ip, asr r4
   124e4:	andeq	r2, r1, ip, asr r4
   124e8:	andeq	r2, r1, ip, asr r4
   124ec:	andeq	r2, r1, ip, asr r4
   124f0:	andeq	r2, r1, ip, asr r4
   124f4:	andeq	r2, r1, ip, asr r4
   124f8:	andeq	r2, r1, ip, asr r4
   124fc:	andeq	r2, r1, ip, asr r4
   12500:	andeq	r2, r1, ip, asr r4
   12504:	andeq	r2, r1, r8, ror r8
   12508:	mov	r8, r0
   1250c:	b	11f3c <putchar_unlocked@plt+0x10cc>
   12510:	ldr	r0, [sp, #36]	; 0x24
   12514:	cmp	r0, #0
   12518:	beq	125b8 <putchar_unlocked@plt+0x1748>
   1251c:	add	r0, r7, #2
   12520:	cmp	r0, lr
   12524:	bcs	125b8 <putchar_unlocked@plt+0x1748>
   12528:	add	r1, r7, ip
   1252c:	ldrb	r1, [r1, #1]
   12530:	cmp	r1, #63	; 0x3f
   12534:	bne	125b8 <putchar_unlocked@plt+0x1748>
   12538:	ldrb	r1, [ip, r0]
   1253c:	sub	r2, r1, #33	; 0x21
   12540:	cmp	r2, #29
   12544:	bhi	125b8 <putchar_unlocked@plt+0x1748>
   12548:	mov	r3, #1
   1254c:	movw	r6, #20929	; 0x51c1
   12550:	movt	r6, #14336	; 0x3800
   12554:	tst	r6, r3, lsl r2
   12558:	beq	125b8 <putchar_unlocked@plt+0x1748>
   1255c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12560:	tst	r2, #1
   12564:	bne	12880 <putchar_unlocked@plt+0x1a10>
   12568:	cmp	r8, sl
   1256c:	movcc	r2, #63	; 0x3f
   12570:	strbcc	r2, [r5, r8]
   12574:	add	r2, r8, #1
   12578:	cmp	r2, sl
   1257c:	movcc	r3, #34	; 0x22
   12580:	strbcc	r3, [r5, r2]
   12584:	add	r2, r8, #2
   12588:	cmp	r2, sl
   1258c:	movcc	r3, #34	; 0x22
   12590:	strbcc	r3, [r5, r2]
   12594:	add	r2, r8, #3
   12598:	cmp	r2, sl
   1259c:	movcc	r3, #63	; 0x3f
   125a0:	strbcc	r3, [r5, r2]
   125a4:	add	r8, r8, #4
   125a8:	mov	r7, r0
   125ac:	mov	r4, r1
   125b0:	mov	r6, #0
   125b4:	b	11f3c <putchar_unlocked@plt+0x10cc>
   125b8:	mov	r6, #0
   125bc:	b	11f3c <putchar_unlocked@plt+0x10cc>
   125c0:	add	r0, r2, r7
   125c4:	str	r0, [sp, #52]	; 0x34
   125c8:	mov	r2, #0
   125cc:	ldr	lr, [sp, #32]
   125d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   125d4:	str	r1, [sp, #48]	; 0x30
   125d8:	tst	r1, #1
   125dc:	bne	126b8 <putchar_unlocked@plt+0x1848>
   125e0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   125e4:	tst	r1, #1
   125e8:	bne	12880 <putchar_unlocked@plt+0x1a10>
   125ec:	mov	r3, r0
   125f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   125f4:	subs	r1, r0, #2
   125f8:	movwne	r1, #1
   125fc:	orr	r1, r1, r3
   12600:	tst	r1, #1
   12604:	bne	1263c <putchar_unlocked@plt+0x17cc>
   12608:	cmp	r8, sl
   1260c:	movcc	r0, #39	; 0x27
   12610:	strbcc	r0, [r5, r8]
   12614:	add	r2, r8, #1
   12618:	cmp	r2, sl
   1261c:	movcc	r0, #36	; 0x24
   12620:	strbcc	r0, [r5, r2]
   12624:	add	r2, r8, #2
   12628:	cmp	r2, sl
   1262c:	movcc	r0, #39	; 0x27
   12630:	strbcc	r0, [r5, r2]
   12634:	add	r8, r8, #3
   12638:	mov	r3, #1
   1263c:	cmp	r8, sl
   12640:	movcc	r1, #92	; 0x5c
   12644:	strbcc	r1, [r5, r8]
   12648:	add	r2, r8, #1
   1264c:	cmp	r2, sl
   12650:	bcs	12664 <putchar_unlocked@plt+0x17f4>
   12654:	uxtb	r1, r4
   12658:	mov	r0, #48	; 0x30
   1265c:	orr	r1, r0, r1, lsr #6
   12660:	strb	r1, [r5, r2]
   12664:	add	r2, r8, #2
   12668:	cmp	r2, sl
   1266c:	lsrcc	r1, r4, #3
   12670:	movcc	r0, #6
   12674:	bficc	r1, r0, #3, #29
   12678:	strbcc	r1, [r5, r2]
   1267c:	mov	r0, #6
   12680:	bfi	r4, r0, #3, #29
   12684:	add	r8, r8, #3
   12688:	mov	r2, #1
   1268c:	mov	r0, r3
   12690:	b	126dc <putchar_unlocked@plt+0x186c>
   12694:	cmp	r8, sl
   12698:	strbcc	r4, [r5, r8]
   1269c:	ldr	r1, [sp, #76]	; 0x4c
   126a0:	ldrb	r4, [r1, r7]
   126a4:	add	r8, r8, #1
   126a8:	mov	r7, r3
   126ac:	ldr	r1, [sp, #48]	; 0x30
   126b0:	tst	r1, #1
   126b4:	beq	125e0 <putchar_unlocked@plt+0x1770>
   126b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   126bc:	tst	r1, #1
   126c0:	beq	126d4 <putchar_unlocked@plt+0x1864>
   126c4:	cmp	r8, sl
   126c8:	movcc	r1, #92	; 0x5c
   126cc:	strbcc	r1, [r5, r8]
   126d0:	add	r8, r8, #1
   126d4:	mov	r1, #0
   126d8:	str	r1, [fp, #-52]	; 0xffffffcc
   126dc:	and	r9, r2, #1
   126e0:	add	r3, r7, #1
   126e4:	ldr	r1, [sp, #52]	; 0x34
   126e8:	cmp	r1, r3
   126ec:	bls	12730 <putchar_unlocked@plt+0x18c0>
   126f0:	cmp	r9, #0
   126f4:	movwne	r9, #1
   126f8:	mvn	r1, r0
   126fc:	orr	r1, r1, r9
   12700:	tst	r1, #1
   12704:	bne	12694 <putchar_unlocked@plt+0x1824>
   12708:	cmp	r8, sl
   1270c:	movcc	r1, #39	; 0x27
   12710:	strbcc	r1, [r5, r8]
   12714:	add	r1, r8, #1
   12718:	cmp	r1, sl
   1271c:	movcc	r0, #39	; 0x27
   12720:	strbcc	r0, [r5, r1]
   12724:	add	r8, r8, #2
   12728:	mov	r0, #0
   1272c:	b	12694 <putchar_unlocked@plt+0x1824>
   12730:	str	r0, [fp, #-56]	; 0xffffffc8
   12734:	cmp	r9, #0
   12738:	movwne	r9, #1
   1273c:	cmp	r9, #0
   12740:	beq	122c4 <putchar_unlocked@plt+0x1454>
   12744:	b	122f8 <putchar_unlocked@plt+0x1488>
   12748:	mov	r6, #0
   1274c:	b	1278c <putchar_unlocked@plt+0x191c>
   12750:	mov	r6, #0
   12754:	ldr	r0, [sp, #48]	; 0x30
   12758:	cmp	r0, lr
   1275c:	bcs	1278c <putchar_unlocked@plt+0x191c>
   12760:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12764:	add	r0, ip, r7
   12768:	ldr	r2, [sp, #52]	; 0x34
   1276c:	ldrb	r1, [r0, r2]
   12770:	cmp	r1, #0
   12774:	beq	12280 <putchar_unlocked@plt+0x1410>
   12778:	add	r2, r2, #1
   1277c:	add	r1, r7, r2
   12780:	cmp	r1, lr
   12784:	bcc	1276c <putchar_unlocked@plt+0x18fc>
   12788:	b	12280 <putchar_unlocked@plt+0x1410>
   1278c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12790:	ldr	r2, [sp, #52]	; 0x34
   12794:	b	12280 <putchar_unlocked@plt+0x1410>
   12798:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1279c:	eor	r0, r1, #2
   127a0:	orr	r0, r0, r8
   127a4:	clz	r0, r0
   127a8:	lsr	r0, r0, #5
   127ac:	ldr	r3, [fp, #-76]	; 0xffffffb4
   127b0:	tst	r3, r0
   127b4:	bne	12880 <putchar_unlocked@plt+0x1a10>
   127b8:	mov	r6, r5
   127bc:	subs	r0, r1, #2
   127c0:	movwne	r0, #1
   127c4:	orr	r0, r3, r0
   127c8:	tst	r0, #1
   127cc:	ldr	r2, [sp, #92]	; 0x5c
   127d0:	ldreq	r0, [sp, #64]	; 0x40
   127d4:	eoreq	r0, r0, #1
   127d8:	tsteq	r0, #1
   127dc:	bne	1281c <putchar_unlocked@plt+0x19ac>
   127e0:	mov	r9, lr
   127e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   127e8:	tst	r0, #1
   127ec:	bne	128e8 <putchar_unlocked@plt+0x1a78>
   127f0:	ldr	r0, [sp, #84]	; 0x54
   127f4:	cmp	r0, #0
   127f8:	beq	1281c <putchar_unlocked@plt+0x19ac>
   127fc:	mov	r0, #0
   12800:	str	r0, [fp, #-48]	; 0xffffffd0
   12804:	mov	r1, #2
   12808:	cmp	sl, #0
   1280c:	mov	r0, r2
   12810:	mov	r4, r3
   12814:	ldr	r7, [sp, #84]	; 0x54
   12818:	beq	119f4 <putchar_unlocked@plt+0xb84>
   1281c:	ldr	r1, [fp, #-84]	; 0xffffffac
   12820:	clz	r0, r1
   12824:	lsr	r0, r0, #5
   12828:	orr	r0, r0, r3
   1282c:	tst	r0, #1
   12830:	bne	1285c <putchar_unlocked@plt+0x19ec>
   12834:	ldrb	r0, [r1]
   12838:	cmp	r0, #0
   1283c:	beq	1285c <putchar_unlocked@plt+0x19ec>
   12840:	add	r1, r1, #1
   12844:	cmp	r8, sl
   12848:	strbcc	r0, [r6, r8]
   1284c:	add	r8, r8, #1
   12850:	ldrb	r0, [r1], #1
   12854:	cmp	r0, #0
   12858:	bne	12844 <putchar_unlocked@plt+0x19d4>
   1285c:	cmp	r8, sl
   12860:	movcc	r0, #0
   12864:	strbcc	r0, [r6, r8]
   12868:	b	128dc <putchar_unlocked@plt+0x1a6c>
   1286c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12870:	mov	lr, r4
   12874:	b	12880 <putchar_unlocked@plt+0x1a10>
   12878:	ldr	r5, [sp, #28]
   1287c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12880:	mov	r0, #0
   12884:	ldr	r1, [fp, #12]
   12888:	bic	r1, r1, #2
   1288c:	mov	r2, #2
   12890:	ldr	r3, [sp, #92]	; 0x5c
   12894:	tst	r3, #1
   12898:	movwne	r2, #4
   1289c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   128a0:	cmp	r3, #2
   128a4:	movne	r2, r3
   128a8:	str	r2, [sp]
   128ac:	str	r1, [sp, #4]
   128b0:	str	r0, [sp, #8]
   128b4:	ldr	r0, [sp, #80]	; 0x50
   128b8:	str	r0, [sp, #12]
   128bc:	ldr	r0, [sp, #88]	; 0x58
   128c0:	str	r0, [sp, #16]
   128c4:	mov	r0, r5
   128c8:	mov	r1, sl
   128cc:	mov	r2, ip
   128d0:	mov	r3, lr
   128d4:	bl	11968 <putchar_unlocked@plt+0xaf8>
   128d8:	mov	r8, r0
   128dc:	mov	r0, r8
   128e0:	sub	sp, fp, #28
   128e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128e8:	mov	r0, #5
   128ec:	str	r0, [sp]
   128f0:	ldr	r0, [fp, #12]
   128f4:	str	r0, [sp, #4]
   128f8:	ldr	r0, [fp, #16]
   128fc:	str	r0, [sp, #8]
   12900:	ldr	r0, [sp, #80]	; 0x50
   12904:	str	r0, [sp, #12]
   12908:	ldr	r0, [sp, #88]	; 0x58
   1290c:	str	r0, [sp, #16]
   12910:	mov	r0, r6
   12914:	ldr	r1, [sp, #84]	; 0x54
   12918:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1291c:	mov	r3, r9
   12920:	b	128d4 <putchar_unlocked@plt+0x1a64>
   12924:	bl	10e64 <abort@plt>
   12928:	mov	r3, r2
   1292c:	mov	r2, #0
   12930:	b	12934 <putchar_unlocked@plt+0x1ac4>
   12934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12938:	add	fp, sp, #28
   1293c:	sub	sp, sp, #36	; 0x24
   12940:	mov	r4, r2
   12944:	str	r2, [sp, #24]
   12948:	mov	r5, r1
   1294c:	mov	r6, r0
   12950:	str	r0, [sp, #20]
   12954:	movw	r8, #24896	; 0x6140
   12958:	movt	r8, #2
   1295c:	cmp	r3, #0
   12960:	movne	r8, r3
   12964:	bl	10dc8 <__errno_location@plt>
   12968:	str	r0, [sp, #28]
   1296c:	ldm	r8, {r3, r9}
   12970:	ldr	r1, [r8, #40]	; 0x28
   12974:	ldr	r2, [r8, #44]	; 0x2c
   12978:	ldr	r7, [r0]
   1297c:	str	r7, [sp, #32]
   12980:	add	sl, r8, #8
   12984:	cmp	r4, #0
   12988:	orreq	r9, r9, #1
   1298c:	stm	sp, {r3, r9, sl}
   12990:	str	r1, [sp, #12]
   12994:	str	r2, [sp, #16]
   12998:	mov	r0, #0
   1299c:	mov	r1, #0
   129a0:	mov	r2, r6
   129a4:	mov	r3, r5
   129a8:	mov	r7, r5
   129ac:	bl	11968 <putchar_unlocked@plt+0xaf8>
   129b0:	mov	r5, r0
   129b4:	add	r4, r0, #1
   129b8:	mov	r0, r4
   129bc:	bl	1383c <putchar_unlocked@plt+0x29cc>
   129c0:	mov	r6, r0
   129c4:	ldr	r0, [r8]
   129c8:	ldr	r1, [r8, #40]	; 0x28
   129cc:	ldr	r2, [r8, #44]	; 0x2c
   129d0:	stm	sp, {r0, r9, sl}
   129d4:	str	r1, [sp, #12]
   129d8:	str	r2, [sp, #16]
   129dc:	mov	r0, r6
   129e0:	mov	r1, r4
   129e4:	ldr	r2, [sp, #20]
   129e8:	mov	r3, r7
   129ec:	bl	11968 <putchar_unlocked@plt+0xaf8>
   129f0:	ldr	r0, [sp, #24]
   129f4:	ldr	r1, [sp, #32]
   129f8:	ldr	r2, [sp, #28]
   129fc:	str	r1, [r2]
   12a00:	cmp	r0, #0
   12a04:	strne	r5, [r0]
   12a08:	mov	r0, r6
   12a0c:	sub	sp, fp, #28
   12a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a18:	add	fp, sp, #24
   12a1c:	movw	r8, #24792	; 0x60d8
   12a20:	movt	r8, #2
   12a24:	ldr	r4, [r8]
   12a28:	movw	r5, #24796	; 0x60dc
   12a2c:	movt	r5, #2
   12a30:	ldr	r0, [r5]
   12a34:	cmp	r0, #2
   12a38:	blt	12a64 <putchar_unlocked@plt+0x1bf4>
   12a3c:	add	r7, r4, #12
   12a40:	mov	r6, #0
   12a44:	ldr	r0, [r7, r6, lsl #3]
   12a48:	bl	14154 <putchar_unlocked@plt+0x32e4>
   12a4c:	add	r0, r6, #1
   12a50:	ldr	r1, [r5]
   12a54:	add	r2, r6, #2
   12a58:	cmp	r2, r1
   12a5c:	mov	r6, r0
   12a60:	blt	12a44 <putchar_unlocked@plt+0x1bd4>
   12a64:	ldr	r0, [r4, #4]
   12a68:	movw	r9, #24944	; 0x6170
   12a6c:	movt	r9, #2
   12a70:	cmp	r0, r9
   12a74:	movw	r7, #24800	; 0x60e0
   12a78:	movt	r7, #2
   12a7c:	beq	12a8c <putchar_unlocked@plt+0x1c1c>
   12a80:	bl	14154 <putchar_unlocked@plt+0x32e4>
   12a84:	mov	r0, #256	; 0x100
   12a88:	stm	r7, {r0, r9}
   12a8c:	cmp	r4, r7
   12a90:	beq	12aa0 <putchar_unlocked@plt+0x1c30>
   12a94:	mov	r0, r4
   12a98:	bl	14154 <putchar_unlocked@plt+0x32e4>
   12a9c:	str	r7, [r8]
   12aa0:	mov	r0, #1
   12aa4:	str	r0, [r5]
   12aa8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12aac:	movw	r3, #24896	; 0x6140
   12ab0:	movt	r3, #2
   12ab4:	mvn	r2, #0
   12ab8:	b	12abc <putchar_unlocked@plt+0x1c4c>
   12abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ac0:	add	fp, sp, #28
   12ac4:	sub	sp, sp, #44	; 0x2c
   12ac8:	mov	r7, r3
   12acc:	str	r2, [sp, #36]	; 0x24
   12ad0:	str	r1, [sp, #32]
   12ad4:	mov	r5, r0
   12ad8:	bl	10dc8 <__errno_location@plt>
   12adc:	cmp	r5, #0
   12ae0:	bmi	12c50 <putchar_unlocked@plt+0x1de0>
   12ae4:	cmn	r5, #-2147483647	; 0x80000001
   12ae8:	beq	12c50 <putchar_unlocked@plt+0x1de0>
   12aec:	movw	r4, #24792	; 0x60d8
   12af0:	movt	r4, #2
   12af4:	ldr	r6, [r4]
   12af8:	str	r0, [sp, #28]
   12afc:	ldr	r0, [r0]
   12b00:	str	r0, [sp, #24]
   12b04:	movw	r8, #24796	; 0x60dc
   12b08:	movt	r8, #2
   12b0c:	ldr	r1, [r8]
   12b10:	cmp	r1, r5
   12b14:	ble	12b20 <putchar_unlocked@plt+0x1cb0>
   12b18:	mov	sl, r6
   12b1c:	b	12b8c <putchar_unlocked@plt+0x1d1c>
   12b20:	str	r1, [fp, #-32]	; 0xffffffe0
   12b24:	mov	r0, #8
   12b28:	str	r0, [sp]
   12b2c:	movw	r9, #24800	; 0x60e0
   12b30:	movt	r9, #2
   12b34:	subs	r0, r6, r9
   12b38:	movne	r0, r6
   12b3c:	sub	r1, r5, r1
   12b40:	add	r2, r1, #1
   12b44:	sub	r1, fp, #32
   12b48:	mvn	r3, #-2147483648	; 0x80000000
   12b4c:	bl	13918 <putchar_unlocked@plt+0x2aa8>
   12b50:	mov	sl, r0
   12b54:	str	r0, [r4]
   12b58:	cmp	r6, r9
   12b5c:	bne	12b68 <putchar_unlocked@plt+0x1cf8>
   12b60:	ldrd	r0, [r9]
   12b64:	stm	sl, {r0, r1}
   12b68:	ldr	r1, [r8]
   12b6c:	add	r0, sl, r1, lsl #3
   12b70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12b74:	sub	r1, r2, r1
   12b78:	lsl	r2, r1, #3
   12b7c:	mov	r1, #0
   12b80:	bl	10de0 <memset@plt>
   12b84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b88:	str	r0, [r8]
   12b8c:	mov	r9, sl
   12b90:	ldr	r6, [r9, r5, lsl #3]!
   12b94:	ldr	r4, [r9, #4]!
   12b98:	ldm	r7, {r0, r1}
   12b9c:	ldr	r2, [r7, #40]	; 0x28
   12ba0:	ldr	r3, [r7, #44]	; 0x2c
   12ba4:	orr	r8, r1, #1
   12ba8:	add	r1, r7, #8
   12bac:	stm	sp, {r0, r8}
   12bb0:	str	r1, [sp, #20]
   12bb4:	add	r0, sp, #8
   12bb8:	stm	r0, {r1, r2, r3}
   12bbc:	mov	r0, r4
   12bc0:	mov	r1, r6
   12bc4:	ldr	r2, [sp, #32]
   12bc8:	ldr	r3, [sp, #36]	; 0x24
   12bcc:	bl	11968 <putchar_unlocked@plt+0xaf8>
   12bd0:	cmp	r6, r0
   12bd4:	bhi	12c38 <putchar_unlocked@plt+0x1dc8>
   12bd8:	add	r6, r0, #1
   12bdc:	str	r6, [sl, r5, lsl #3]
   12be0:	movw	r0, #24944	; 0x6170
   12be4:	movt	r0, #2
   12be8:	cmp	r4, r0
   12bec:	beq	12bf8 <putchar_unlocked@plt+0x1d88>
   12bf0:	mov	r0, r4
   12bf4:	bl	14154 <putchar_unlocked@plt+0x32e4>
   12bf8:	mov	r0, r6
   12bfc:	bl	1383c <putchar_unlocked@plt+0x29cc>
   12c00:	mov	r4, r0
   12c04:	str	r0, [r9]
   12c08:	ldr	r0, [r7]
   12c0c:	ldr	r1, [r7, #40]	; 0x28
   12c10:	ldr	r2, [r7, #44]	; 0x2c
   12c14:	stm	sp, {r0, r8}
   12c18:	ldr	r0, [sp, #20]
   12c1c:	add	r3, sp, #8
   12c20:	stm	r3, {r0, r1, r2}
   12c24:	mov	r0, r4
   12c28:	mov	r1, r6
   12c2c:	ldr	r2, [sp, #32]
   12c30:	ldr	r3, [sp, #36]	; 0x24
   12c34:	bl	11968 <putchar_unlocked@plt+0xaf8>
   12c38:	ldr	r0, [sp, #28]
   12c3c:	ldr	r1, [sp, #24]
   12c40:	str	r1, [r0]
   12c44:	mov	r0, r4
   12c48:	sub	sp, fp, #28
   12c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c50:	bl	10e64 <abort@plt>
   12c54:	movw	r3, #24896	; 0x6140
   12c58:	movt	r3, #2
   12c5c:	b	12abc <putchar_unlocked@plt+0x1c4c>
   12c60:	mov	r1, r0
   12c64:	mov	r0, #0
   12c68:	b	12aac <putchar_unlocked@plt+0x1c3c>
   12c6c:	mov	r2, r1
   12c70:	mov	r1, r0
   12c74:	mov	r0, #0
   12c78:	b	12c54 <putchar_unlocked@plt+0x1de4>
   12c7c:	push	{r4, r5, r6, sl, fp, lr}
   12c80:	add	fp, sp, #16
   12c84:	sub	sp, sp, #48	; 0x30
   12c88:	mov	r4, r2
   12c8c:	mov	r5, r0
   12c90:	mov	r6, sp
   12c94:	mov	r0, r6
   12c98:	bl	12cb8 <putchar_unlocked@plt+0x1e48>
   12c9c:	mov	r0, r5
   12ca0:	mov	r1, r4
   12ca4:	mvn	r2, #0
   12ca8:	mov	r3, r6
   12cac:	bl	12abc <putchar_unlocked@plt+0x1c4c>
   12cb0:	sub	sp, fp, #16
   12cb4:	pop	{r4, r5, r6, sl, fp, pc}
   12cb8:	push	{fp, lr}
   12cbc:	mov	fp, sp
   12cc0:	vmov.i32	q8, #0	; 0x00000000
   12cc4:	mov	r2, #32
   12cc8:	mov	r3, r0
   12ccc:	vst1.32	{d16-d17}, [r3], r2
   12cd0:	vst1.32	{d16-d17}, [r3]
   12cd4:	add	r2, r0, #16
   12cd8:	vst1.32	{d16-d17}, [r2]
   12cdc:	cmp	r1, #10
   12ce0:	strne	r1, [r0]
   12ce4:	popne	{fp, pc}
   12ce8:	bl	10e64 <abort@plt>
   12cec:	push	{r4, r5, r6, r7, fp, lr}
   12cf0:	add	fp, sp, #16
   12cf4:	sub	sp, sp, #48	; 0x30
   12cf8:	mov	r4, r3
   12cfc:	mov	r5, r2
   12d00:	mov	r6, r0
   12d04:	mov	r7, sp
   12d08:	mov	r0, r7
   12d0c:	bl	12cb8 <putchar_unlocked@plt+0x1e48>
   12d10:	mov	r0, r6
   12d14:	mov	r1, r5
   12d18:	mov	r2, r4
   12d1c:	mov	r3, r7
   12d20:	bl	12abc <putchar_unlocked@plt+0x1c4c>
   12d24:	sub	sp, fp, #16
   12d28:	pop	{r4, r5, r6, r7, fp, pc}
   12d2c:	mov	r2, r1
   12d30:	mov	r1, r0
   12d34:	mov	r0, #0
   12d38:	b	12c7c <putchar_unlocked@plt+0x1e0c>
   12d3c:	mov	r3, r2
   12d40:	mov	r2, r1
   12d44:	mov	r1, r0
   12d48:	mov	r0, #0
   12d4c:	b	12cec <putchar_unlocked@plt+0x1e7c>
   12d50:	push	{r4, r5, r6, sl, fp, lr}
   12d54:	add	fp, sp, #16
   12d58:	sub	sp, sp, #48	; 0x30
   12d5c:	mov	r4, r1
   12d60:	mov	r5, r0
   12d64:	movw	r0, #24896	; 0x6140
   12d68:	movt	r0, #2
   12d6c:	add	r1, r0, #16
   12d70:	mov	r3, #32
   12d74:	vld1.64	{d16-d17}, [r0], r3
   12d78:	vld1.64	{d18-d19}, [r1]
   12d7c:	mov	r6, sp
   12d80:	add	r1, r6, #16
   12d84:	vld1.64	{d20-d21}, [r0]
   12d88:	vst1.64	{d18-d19}, [r1]
   12d8c:	mov	r0, r6
   12d90:	vst1.64	{d16-d17}, [r0], r3
   12d94:	vst1.64	{d20-d21}, [r0]
   12d98:	mov	r0, r6
   12d9c:	mov	r1, r2
   12da0:	mov	r2, #1
   12da4:	bl	1185c <putchar_unlocked@plt+0x9ec>
   12da8:	mov	r0, #0
   12dac:	mov	r1, r5
   12db0:	mov	r2, r4
   12db4:	mov	r3, r6
   12db8:	bl	12abc <putchar_unlocked@plt+0x1c4c>
   12dbc:	sub	sp, fp, #16
   12dc0:	pop	{r4, r5, r6, sl, fp, pc}
   12dc4:	mov	r2, r1
   12dc8:	mvn	r1, #0
   12dcc:	b	12d50 <putchar_unlocked@plt+0x1ee0>
   12dd0:	mov	r1, #58	; 0x3a
   12dd4:	b	12dc4 <putchar_unlocked@plt+0x1f54>
   12dd8:	mov	r2, #58	; 0x3a
   12ddc:	b	12d50 <putchar_unlocked@plt+0x1ee0>
   12de0:	push	{r4, r5, r6, sl, fp, lr}
   12de4:	add	fp, sp, #16
   12de8:	sub	sp, sp, #48	; 0x30
   12dec:	mov	r4, r2
   12df0:	mov	r5, r0
   12df4:	mov	r6, sp
   12df8:	mov	r0, r6
   12dfc:	bl	12cb8 <putchar_unlocked@plt+0x1e48>
   12e00:	mov	r0, r6
   12e04:	mov	r1, #58	; 0x3a
   12e08:	mov	r2, #1
   12e0c:	bl	1185c <putchar_unlocked@plt+0x9ec>
   12e10:	mov	r0, r5
   12e14:	mov	r1, r4
   12e18:	mvn	r2, #0
   12e1c:	mov	r3, r6
   12e20:	bl	12abc <putchar_unlocked@plt+0x1c4c>
   12e24:	sub	sp, fp, #16
   12e28:	pop	{r4, r5, r6, sl, fp, pc}
   12e2c:	push	{fp, lr}
   12e30:	mov	fp, sp
   12e34:	sub	sp, sp, #8
   12e38:	mvn	ip, #0
   12e3c:	str	ip, [sp]
   12e40:	bl	12e4c <putchar_unlocked@plt+0x1fdc>
   12e44:	mov	sp, fp
   12e48:	pop	{fp, pc}
   12e4c:	push	{r4, r5, r6, r7, fp, lr}
   12e50:	add	fp, sp, #16
   12e54:	sub	sp, sp, #48	; 0x30
   12e58:	mov	r7, r3
   12e5c:	mov	r5, r0
   12e60:	movw	r0, #24896	; 0x6140
   12e64:	movt	r0, #2
   12e68:	add	r3, r0, #16
   12e6c:	mov	r4, #32
   12e70:	vld1.64	{d16-d17}, [r0], r4
   12e74:	vld1.64	{d18-d19}, [r3]
   12e78:	mov	r6, sp
   12e7c:	add	r3, r6, #16
   12e80:	vld1.64	{d20-d21}, [r0]
   12e84:	vst1.64	{d18-d19}, [r3]
   12e88:	mov	r0, r6
   12e8c:	vst1.64	{d16-d17}, [r0], r4
   12e90:	vst1.64	{d20-d21}, [r0]
   12e94:	mov	r0, r6
   12e98:	bl	118b4 <putchar_unlocked@plt+0xa44>
   12e9c:	ldr	r2, [fp, #8]
   12ea0:	mov	r0, r5
   12ea4:	mov	r1, r7
   12ea8:	mov	r3, r6
   12eac:	bl	12abc <putchar_unlocked@plt+0x1c4c>
   12eb0:	sub	sp, fp, #16
   12eb4:	pop	{r4, r5, r6, r7, fp, pc}
   12eb8:	mov	r3, r2
   12ebc:	mov	r2, r1
   12ec0:	mov	r1, r0
   12ec4:	mov	r0, #0
   12ec8:	b	12e2c <putchar_unlocked@plt+0x1fbc>
   12ecc:	push	{fp, lr}
   12ed0:	mov	fp, sp
   12ed4:	sub	sp, sp, #8
   12ed8:	mov	ip, r2
   12edc:	mov	r2, r1
   12ee0:	mov	r1, r0
   12ee4:	str	r3, [sp]
   12ee8:	mov	r0, #0
   12eec:	mov	r3, ip
   12ef0:	bl	12e4c <putchar_unlocked@plt+0x1fdc>
   12ef4:	mov	sp, fp
   12ef8:	pop	{fp, pc}
   12efc:	movw	r3, #24808	; 0x60e8
   12f00:	movt	r3, #2
   12f04:	b	12abc <putchar_unlocked@plt+0x1c4c>
   12f08:	mov	r2, r1
   12f0c:	mov	r1, r0
   12f10:	mov	r0, #0
   12f14:	b	12efc <putchar_unlocked@plt+0x208c>
   12f18:	mvn	r2, #0
   12f1c:	b	12efc <putchar_unlocked@plt+0x208c>
   12f20:	mov	r1, r0
   12f24:	mov	r0, #0
   12f28:	b	12f18 <putchar_unlocked@plt+0x20a8>
   12f2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f30:	add	fp, sp, #24
   12f34:	sub	sp, sp, #16
   12f38:	mov	r4, r1
   12f3c:	mov	r5, r0
   12f40:	mov	r7, #0
   12f44:	mov	r0, #0
   12f48:	mov	r1, r5
   12f4c:	mov	r2, #5
   12f50:	bl	10cd8 <dcgettext@plt>
   12f54:	cmp	r0, r5
   12f58:	beq	12f64 <putchar_unlocked@plt+0x20f4>
   12f5c:	sub	sp, fp, #24
   12f60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f64:	bl	14274 <putchar_unlocked@plt+0x3404>
   12f68:	mov	r6, r0
   12f6c:	mov	r8, #56	; 0x38
   12f70:	mov	r0, #45	; 0x2d
   12f74:	stm	sp, {r0, r8}
   12f78:	str	r7, [sp, #8]
   12f7c:	str	r7, [sp, #12]
   12f80:	mov	r0, r6
   12f84:	mov	r1, #85	; 0x55
   12f88:	mov	r2, #84	; 0x54
   12f8c:	mov	r3, #70	; 0x46
   12f90:	bl	13028 <putchar_unlocked@plt+0x21b8>
   12f94:	cmp	r0, #0
   12f98:	beq	12fb4 <putchar_unlocked@plt+0x2144>
   12f9c:	ldrb	r1, [r5]
   12fa0:	movw	r2, #19586	; 0x4c82
   12fa4:	movt	r2, #1
   12fa8:	movw	r0, #19590	; 0x4c86
   12fac:	movt	r0, #1
   12fb0:	b	12ff8 <putchar_unlocked@plt+0x2188>
   12fb4:	mov	r0, #48	; 0x30
   12fb8:	mov	r1, #51	; 0x33
   12fbc:	str	r8, [sp]
   12fc0:	stmib	sp, {r0, r1}
   12fc4:	str	r0, [sp, #12]
   12fc8:	mov	r0, r6
   12fcc:	mov	r1, #71	; 0x47
   12fd0:	mov	r2, #66	; 0x42
   12fd4:	mov	r3, #49	; 0x31
   12fd8:	bl	13028 <putchar_unlocked@plt+0x21b8>
   12fdc:	cmp	r0, #0
   12fe0:	beq	13008 <putchar_unlocked@plt+0x2198>
   12fe4:	ldrb	r1, [r5]
   12fe8:	movw	r2, #19594	; 0x4c8a
   12fec:	movt	r2, #1
   12ff0:	movw	r0, #19598	; 0x4c8e
   12ff4:	movt	r0, #1
   12ff8:	cmp	r1, #96	; 0x60
   12ffc:	moveq	r0, r2
   13000:	sub	sp, fp, #24
   13004:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13008:	movw	r1, #19580	; 0x4c7c
   1300c:	movt	r1, #1
   13010:	movw	r0, #19584	; 0x4c80
   13014:	movt	r0, #1
   13018:	cmp	r4, #9
   1301c:	moveq	r0, r1
   13020:	sub	sp, fp, #24
   13024:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13028:	push	{r4, r5, r6, r7, fp, lr}
   1302c:	add	fp, sp, #16
   13030:	sub	sp, sp, #16
   13034:	mov	r4, r3
   13038:	mov	r5, r2
   1303c:	mov	r7, r1
   13040:	mov	r6, r0
   13044:	mov	r0, r1
   13048:	bl	13f58 <putchar_unlocked@plt+0x30e8>
   1304c:	ldrb	r1, [r6]
   13050:	cmp	r0, #0
   13054:	andne	r1, r1, #223	; 0xdf
   13058:	mov	r0, #0
   1305c:	cmp	r1, r7
   13060:	bne	13098 <putchar_unlocked@plt+0x2228>
   13064:	cmp	r7, #0
   13068:	beq	130a0 <putchar_unlocked@plt+0x2230>
   1306c:	ldr	r0, [fp, #20]
   13070:	ldr	r1, [fp, #16]
   13074:	ldr	r2, [fp, #12]
   13078:	ldr	r3, [fp, #8]
   1307c:	str	r2, [sp]
   13080:	str	r1, [sp, #4]
   13084:	str	r0, [sp, #8]
   13088:	mov	r0, r6
   1308c:	mov	r1, r5
   13090:	mov	r2, r4
   13094:	bl	130ac <putchar_unlocked@plt+0x223c>
   13098:	sub	sp, fp, #16
   1309c:	pop	{r4, r5, r6, r7, fp, pc}
   130a0:	mov	r0, #1
   130a4:	sub	sp, fp, #16
   130a8:	pop	{r4, r5, r6, r7, fp, pc}
   130ac:	push	{r4, r5, r6, r7, fp, lr}
   130b0:	add	fp, sp, #16
   130b4:	sub	sp, sp, #8
   130b8:	mov	r4, r3
   130bc:	mov	r5, r2
   130c0:	mov	r7, r1
   130c4:	mov	r6, r0
   130c8:	mov	r0, r1
   130cc:	bl	13f58 <putchar_unlocked@plt+0x30e8>
   130d0:	ldrb	r1, [r6, #1]
   130d4:	cmp	r0, #0
   130d8:	andne	r1, r1, #223	; 0xdf
   130dc:	mov	r0, #0
   130e0:	cmp	r1, r7
   130e4:	bne	13114 <putchar_unlocked@plt+0x22a4>
   130e8:	cmp	r7, #0
   130ec:	beq	1311c <putchar_unlocked@plt+0x22ac>
   130f0:	ldr	r0, [fp, #16]
   130f4:	ldr	r1, [fp, #12]
   130f8:	ldr	r3, [fp, #8]
   130fc:	str	r1, [sp]
   13100:	str	r0, [sp, #4]
   13104:	mov	r0, r6
   13108:	mov	r1, r5
   1310c:	mov	r2, r4
   13110:	bl	13128 <putchar_unlocked@plt+0x22b8>
   13114:	sub	sp, fp, #16
   13118:	pop	{r4, r5, r6, r7, fp, pc}
   1311c:	mov	r0, #1
   13120:	sub	sp, fp, #16
   13124:	pop	{r4, r5, r6, r7, fp, pc}
   13128:	push	{r4, r5, r6, r7, fp, lr}
   1312c:	add	fp, sp, #16
   13130:	sub	sp, sp, #8
   13134:	mov	r4, r3
   13138:	mov	r5, r2
   1313c:	mov	r7, r1
   13140:	mov	r6, r0
   13144:	mov	r0, r1
   13148:	bl	13f58 <putchar_unlocked@plt+0x30e8>
   1314c:	ldrb	r1, [r6, #2]
   13150:	cmp	r0, #0
   13154:	andne	r1, r1, #223	; 0xdf
   13158:	mov	r0, #0
   1315c:	cmp	r1, r7
   13160:	bne	13188 <putchar_unlocked@plt+0x2318>
   13164:	cmp	r7, #0
   13168:	beq	13190 <putchar_unlocked@plt+0x2320>
   1316c:	ldr	r0, [fp, #12]
   13170:	ldr	r3, [fp, #8]
   13174:	str	r0, [sp]
   13178:	mov	r0, r6
   1317c:	mov	r1, r5
   13180:	mov	r2, r4
   13184:	bl	1319c <putchar_unlocked@plt+0x232c>
   13188:	sub	sp, fp, #16
   1318c:	pop	{r4, r5, r6, r7, fp, pc}
   13190:	mov	r0, #1
   13194:	sub	sp, fp, #16
   13198:	pop	{r4, r5, r6, r7, fp, pc}
   1319c:	push	{r4, r5, r6, r7, fp, lr}
   131a0:	add	fp, sp, #16
   131a4:	mov	r4, r3
   131a8:	mov	r5, r2
   131ac:	mov	r7, r1
   131b0:	mov	r6, r0
   131b4:	mov	r0, r1
   131b8:	bl	13f58 <putchar_unlocked@plt+0x30e8>
   131bc:	ldrb	r1, [r6, #3]
   131c0:	ldr	r3, [fp, #8]
   131c4:	cmp	r0, #0
   131c8:	andne	r1, r1, #223	; 0xdf
   131cc:	mov	r0, #0
   131d0:	cmp	r1, r7
   131d4:	bne	131f8 <putchar_unlocked@plt+0x2388>
   131d8:	cmp	r7, #0
   131dc:	beq	131f4 <putchar_unlocked@plt+0x2384>
   131e0:	mov	r0, r6
   131e4:	mov	r1, r5
   131e8:	mov	r2, r4
   131ec:	pop	{r4, r5, r6, r7, fp, lr}
   131f0:	b	131fc <putchar_unlocked@plt+0x238c>
   131f4:	mov	r0, #1
   131f8:	pop	{r4, r5, r6, r7, fp, pc}
   131fc:	push	{r4, r5, r6, r7, fp, lr}
   13200:	add	fp, sp, #16
   13204:	mov	r4, r3
   13208:	mov	r5, r2
   1320c:	mov	r7, r1
   13210:	mov	r6, r0
   13214:	mov	r0, r1
   13218:	bl	13f58 <putchar_unlocked@plt+0x30e8>
   1321c:	ldrb	r1, [r6, #4]
   13220:	cmp	r0, #0
   13224:	andne	r1, r1, #223	; 0xdf
   13228:	mov	r0, #0
   1322c:	cmp	r1, r7
   13230:	bne	13254 <putchar_unlocked@plt+0x23e4>
   13234:	cmp	r7, #0
   13238:	beq	13250 <putchar_unlocked@plt+0x23e0>
   1323c:	mov	r0, r6
   13240:	mov	r1, r5
   13244:	mov	r2, r4
   13248:	pop	{r4, r5, r6, r7, fp, lr}
   1324c:	b	13258 <putchar_unlocked@plt+0x23e8>
   13250:	mov	r0, #1
   13254:	pop	{r4, r5, r6, r7, fp, pc}
   13258:	push	{r4, r5, r6, sl, fp, lr}
   1325c:	add	fp, sp, #16
   13260:	mov	r4, r2
   13264:	mov	r6, r1
   13268:	mov	r5, r0
   1326c:	mov	r0, r1
   13270:	bl	13f58 <putchar_unlocked@plt+0x30e8>
   13274:	ldrb	r1, [r5, #5]
   13278:	cmp	r0, #0
   1327c:	andne	r1, r1, #223	; 0xdf
   13280:	mov	r0, #0
   13284:	cmp	r1, r6
   13288:	bne	132a8 <putchar_unlocked@plt+0x2438>
   1328c:	cmp	r6, #0
   13290:	beq	132a4 <putchar_unlocked@plt+0x2434>
   13294:	mov	r0, r5
   13298:	mov	r1, r4
   1329c:	pop	{r4, r5, r6, sl, fp, lr}
   132a0:	b	132ac <putchar_unlocked@plt+0x243c>
   132a4:	mov	r0, #1
   132a8:	pop	{r4, r5, r6, sl, fp, pc}
   132ac:	push	{r4, r5, fp, lr}
   132b0:	add	fp, sp, #8
   132b4:	mov	r5, r1
   132b8:	mov	r4, r0
   132bc:	mov	r0, r1
   132c0:	bl	13f58 <putchar_unlocked@plt+0x30e8>
   132c4:	ldrb	r1, [r4, #6]
   132c8:	cmp	r0, #0
   132cc:	andne	r1, r1, #223	; 0xdf
   132d0:	mov	r0, #0
   132d4:	cmp	r1, r5
   132d8:	popne	{r4, r5, fp, pc}
   132dc:	cmp	r5, #0
   132e0:	beq	132f0 <putchar_unlocked@plt+0x2480>
   132e4:	mov	r0, r4
   132e8:	pop	{r4, r5, fp, lr}
   132ec:	b	132f8 <putchar_unlocked@plt+0x2488>
   132f0:	mov	r0, #1
   132f4:	pop	{r4, r5, fp, pc}
   132f8:	push	{r4, sl, fp, lr}
   132fc:	add	fp, sp, #8
   13300:	mov	r4, r0
   13304:	mov	r0, #0
   13308:	bl	13f58 <putchar_unlocked@plt+0x30e8>
   1330c:	ldrb	r1, [r4, #7]
   13310:	cmp	r0, #0
   13314:	beq	13328 <putchar_unlocked@plt+0x24b8>
   13318:	tst	r1, #223	; 0xdf
   1331c:	bne	13330 <putchar_unlocked@plt+0x24c0>
   13320:	mov	r0, #1
   13324:	pop	{r4, sl, fp, pc}
   13328:	cmp	r1, #0
   1332c:	beq	13320 <putchar_unlocked@plt+0x24b0>
   13330:	mov	r0, #0
   13334:	pop	{r4, sl, fp, pc}
   13338:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1333c:	add	fp, sp, #24
   13340:	sub	sp, sp, #32
   13344:	mov	r4, r2
   13348:	mov	r8, r0
   1334c:	ldr	r6, [fp, #12]
   13350:	ldr	r7, [fp, #8]
   13354:	cmp	r1, #0
   13358:	beq	13380 <putchar_unlocked@plt+0x2510>
   1335c:	mov	r5, r1
   13360:	str	r4, [sp]
   13364:	str	r3, [sp, #4]
   13368:	movw	r2, #19688	; 0x4ce8
   1336c:	movt	r2, #1
   13370:	mov	r0, r8
   13374:	mov	r1, #1
   13378:	mov	r3, r5
   1337c:	b	13398 <putchar_unlocked@plt+0x2528>
   13380:	str	r3, [sp]
   13384:	movw	r2, #19700	; 0x4cf4
   13388:	movt	r2, #1
   1338c:	mov	r0, r8
   13390:	mov	r1, #1
   13394:	mov	r3, r4
   13398:	bl	10e04 <__fprintf_chk@plt>
   1339c:	movw	r1, #19707	; 0x4cfb
   133a0:	movt	r1, #1
   133a4:	mov	r0, #0
   133a8:	mov	r2, #5
   133ac:	bl	10cd8 <dcgettext@plt>
   133b0:	mov	r3, r0
   133b4:	movw	r0, #2022	; 0x7e6
   133b8:	str	r0, [sp]
   133bc:	movw	r2, #20425	; 0x4fc9
   133c0:	movt	r2, #1
   133c4:	mov	r0, r8
   133c8:	mov	r1, #1
   133cc:	bl	10e04 <__fprintf_chk@plt>
   133d0:	movw	r4, #18391	; 0x47d7
   133d4:	movt	r4, #1
   133d8:	mov	r0, r4
   133dc:	mov	r1, r8
   133e0:	bl	10c78 <fputs_unlocked@plt>
   133e4:	movw	r1, #19711	; 0x4cff
   133e8:	movt	r1, #1
   133ec:	mov	r0, #0
   133f0:	mov	r2, #5
   133f4:	bl	10cd8 <dcgettext@plt>
   133f8:	mov	r2, r0
   133fc:	movw	r3, #19882	; 0x4daa
   13400:	movt	r3, #1
   13404:	mov	r0, r8
   13408:	mov	r1, #1
   1340c:	bl	10e04 <__fprintf_chk@plt>
   13410:	mov	r0, r4
   13414:	mov	r1, r8
   13418:	bl	10c78 <fputs_unlocked@plt>
   1341c:	cmp	r6, #9
   13420:	bhi	1345c <putchar_unlocked@plt+0x25ec>
   13424:	add	r0, pc, #0
   13428:	ldr	pc, [r0, r6, lsl #2]
   1342c:	andeq	r3, r1, r4, asr r4
   13430:	andeq	r3, r1, r8, ror #8
   13434:	muleq	r1, r8, r4
   13438:	andeq	r3, r1, r0, asr #9
   1343c:	andeq	r3, r1, r8, ror #9
   13440:	andeq	r3, r1, r0, lsl r5
   13444:	andeq	r3, r1, r8, lsr r5
   13448:	andeq	r3, r1, r0, ror r5
   1344c:	andeq	r3, r1, r0, lsl r6
   13450:			; <UNDEFINED> instruction: 0x000135b8
   13454:	sub	sp, fp, #24
   13458:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1345c:	movw	r1, #20235	; 0x4f0b
   13460:	movt	r1, #1
   13464:	b	135c0 <putchar_unlocked@plt+0x2750>
   13468:	movw	r1, #19916	; 0x4dcc
   1346c:	movt	r1, #1
   13470:	mov	r0, #0
   13474:	mov	r2, #5
   13478:	bl	10cd8 <dcgettext@plt>
   1347c:	mov	r2, r0
   13480:	ldr	r3, [r7]
   13484:	mov	r0, r8
   13488:	mov	r1, #1
   1348c:	sub	sp, fp, #24
   13490:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13494:	b	10e04 <__fprintf_chk@plt>
   13498:	movw	r1, #19932	; 0x4ddc
   1349c:	movt	r1, #1
   134a0:	mov	r0, #0
   134a4:	mov	r2, #5
   134a8:	bl	10cd8 <dcgettext@plt>
   134ac:	mov	r2, r0
   134b0:	ldr	r3, [r7]
   134b4:	ldr	r0, [r7, #4]
   134b8:	str	r0, [sp]
   134bc:	b	135ac <putchar_unlocked@plt+0x273c>
   134c0:	movw	r1, #19955	; 0x4df3
   134c4:	movt	r1, #1
   134c8:	mov	r0, #0
   134cc:	mov	r2, #5
   134d0:	bl	10cd8 <dcgettext@plt>
   134d4:	mov	r2, r0
   134d8:	ldr	r3, [r7]
   134dc:	ldmib	r7, {r0, r1}
   134e0:	stm	sp, {r0, r1}
   134e4:	b	135ac <putchar_unlocked@plt+0x273c>
   134e8:	movw	r1, #19983	; 0x4e0f
   134ec:	movt	r1, #1
   134f0:	mov	r0, #0
   134f4:	mov	r2, #5
   134f8:	bl	10cd8 <dcgettext@plt>
   134fc:	mov	r2, r0
   13500:	ldr	r3, [r7]
   13504:	ldmib	r7, {r0, r1, r7}
   13508:	stm	sp, {r0, r1, r7}
   1350c:	b	135ac <putchar_unlocked@plt+0x273c>
   13510:	movw	r1, #20015	; 0x4e2f
   13514:	movt	r1, #1
   13518:	mov	r0, #0
   1351c:	mov	r2, #5
   13520:	bl	10cd8 <dcgettext@plt>
   13524:	mov	r2, r0
   13528:	ldr	r3, [r7]
   1352c:	ldmib	r7, {r0, r1, r6, r7}
   13530:	stm	sp, {r0, r1, r6, r7}
   13534:	b	135ac <putchar_unlocked@plt+0x273c>
   13538:	movw	r1, #20051	; 0x4e53
   1353c:	movt	r1, #1
   13540:	mov	r0, #0
   13544:	mov	r2, #5
   13548:	bl	10cd8 <dcgettext@plt>
   1354c:	mov	r2, r0
   13550:	ldr	r3, [r7]
   13554:	ldmib	r7, {r0, r1, r6}
   13558:	ldr	r5, [r7, #16]
   1355c:	ldr	r7, [r7, #20]
   13560:	stm	sp, {r0, r1, r6}
   13564:	str	r5, [sp, #12]
   13568:	str	r7, [sp, #16]
   1356c:	b	135ac <putchar_unlocked@plt+0x273c>
   13570:	movw	r1, #20091	; 0x4e7b
   13574:	movt	r1, #1
   13578:	mov	r0, #0
   1357c:	mov	r2, #5
   13580:	bl	10cd8 <dcgettext@plt>
   13584:	mov	r2, r0
   13588:	ldr	r3, [r7]
   1358c:	ldmib	r7, {r0, r1, r6}
   13590:	ldr	r5, [r7, #16]
   13594:	ldr	r4, [r7, #20]
   13598:	ldr	r7, [r7, #24]
   1359c:	stm	sp, {r0, r1, r6}
   135a0:	str	r5, [sp, #12]
   135a4:	str	r4, [sp, #16]
   135a8:	str	r7, [sp, #20]
   135ac:	mov	r0, r8
   135b0:	mov	r1, #1
   135b4:	b	13660 <putchar_unlocked@plt+0x27f0>
   135b8:	movw	r1, #20183	; 0x4ed7
   135bc:	movt	r1, #1
   135c0:	mov	r0, #0
   135c4:	mov	r2, #5
   135c8:	bl	10cd8 <dcgettext@plt>
   135cc:	mov	ip, r0
   135d0:	ldr	r3, [r7]
   135d4:	ldr	r0, [r7, #4]
   135d8:	ldr	r1, [r7, #8]
   135dc:	ldr	r6, [r7, #12]
   135e0:	ldr	r5, [r7, #16]
   135e4:	ldr	r4, [r7, #20]
   135e8:	ldr	r2, [r7, #24]
   135ec:	ldr	lr, [r7, #28]
   135f0:	ldr	r7, [r7, #32]
   135f4:	stm	sp, {r0, r1, r6}
   135f8:	str	r5, [sp, #12]
   135fc:	str	r4, [sp, #16]
   13600:	str	r2, [sp, #20]
   13604:	str	lr, [sp, #24]
   13608:	str	r7, [sp, #28]
   1360c:	b	13654 <putchar_unlocked@plt+0x27e4>
   13610:	movw	r1, #20135	; 0x4ea7
   13614:	movt	r1, #1
   13618:	mov	r0, #0
   1361c:	mov	r2, #5
   13620:	bl	10cd8 <dcgettext@plt>
   13624:	mov	ip, r0
   13628:	ldr	r3, [r7]
   1362c:	ldmib	r7, {r0, r1, r6}
   13630:	ldr	r5, [r7, #16]
   13634:	ldr	r4, [r7, #20]
   13638:	ldr	r2, [r7, #24]
   1363c:	ldr	r7, [r7, #28]
   13640:	stm	sp, {r0, r1, r6}
   13644:	str	r5, [sp, #12]
   13648:	str	r4, [sp, #16]
   1364c:	str	r2, [sp, #20]
   13650:	str	r7, [sp, #24]
   13654:	mov	r0, r8
   13658:	mov	r1, #1
   1365c:	mov	r2, ip
   13660:	bl	10e04 <__fprintf_chk@plt>
   13664:	sub	sp, fp, #24
   13668:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1366c:	push	{r4, sl, fp, lr}
   13670:	add	fp, sp, #8
   13674:	sub	sp, sp, #8
   13678:	mov	lr, #0
   1367c:	ldr	ip, [fp, #8]
   13680:	ldr	r4, [ip, lr, lsl #2]
   13684:	add	lr, lr, #1
   13688:	cmp	r4, #0
   1368c:	bne	13680 <putchar_unlocked@plt+0x2810>
   13690:	sub	r4, lr, #1
   13694:	str	ip, [sp]
   13698:	str	r4, [sp, #4]
   1369c:	bl	13338 <putchar_unlocked@plt+0x24c8>
   136a0:	sub	sp, fp, #8
   136a4:	pop	{r4, sl, fp, pc}
   136a8:	push	{r4, r5, fp, lr}
   136ac:	add	fp, sp, #8
   136b0:	sub	sp, sp, #48	; 0x30
   136b4:	mov	ip, #0
   136b8:	ldr	r4, [fp, #8]
   136bc:	add	lr, sp, #8
   136c0:	ldr	r5, [r4]
   136c4:	str	r5, [lr, ip, lsl #2]
   136c8:	cmp	r5, #0
   136cc:	beq	136e4 <putchar_unlocked@plt+0x2874>
   136d0:	add	ip, ip, #1
   136d4:	add	r4, r4, #4
   136d8:	cmp	ip, #10
   136dc:	bne	136c0 <putchar_unlocked@plt+0x2850>
   136e0:	mov	ip, #10
   136e4:	str	lr, [sp]
   136e8:	str	ip, [sp, #4]
   136ec:	bl	13338 <putchar_unlocked@plt+0x24c8>
   136f0:	sub	sp, fp, #8
   136f4:	pop	{r4, r5, fp, pc}
   136f8:	push	{fp, lr}
   136fc:	mov	fp, sp
   13700:	sub	sp, sp, #8
   13704:	add	ip, fp, #8
   13708:	str	ip, [sp, #4]
   1370c:	str	ip, [sp]
   13710:	bl	136a8 <putchar_unlocked@plt+0x2838>
   13714:	mov	sp, fp
   13718:	pop	{fp, pc}
   1371c:	push	{fp, lr}
   13720:	mov	fp, sp
   13724:	movw	r0, #24876	; 0x612c
   13728:	movt	r0, #2
   1372c:	ldr	r1, [r0]
   13730:	movw	r0, #18391	; 0x47d7
   13734:	movt	r0, #1
   13738:	bl	10c78 <fputs_unlocked@plt>
   1373c:	movw	r1, #20295	; 0x4f47
   13740:	movt	r1, #1
   13744:	mov	r0, #0
   13748:	mov	r2, #5
   1374c:	bl	10cd8 <dcgettext@plt>
   13750:	mov	r1, r0
   13754:	movw	r2, #20315	; 0x4f5b
   13758:	movt	r2, #1
   1375c:	mov	r0, #1
   13760:	bl	10dec <__printf_chk@plt>
   13764:	movw	r1, #20337	; 0x4f71
   13768:	movt	r1, #1
   1376c:	mov	r0, #0
   13770:	mov	r2, #5
   13774:	bl	10cd8 <dcgettext@plt>
   13778:	mov	r1, r0
   1377c:	movw	r2, #18678	; 0x48f6
   13780:	movt	r2, #1
   13784:	movw	r3, #18692	; 0x4904
   13788:	movt	r3, #1
   1378c:	mov	r0, #1
   13790:	bl	10dec <__printf_chk@plt>
   13794:	movw	r1, #20357	; 0x4f85
   13798:	movt	r1, #1
   1379c:	mov	r0, #0
   137a0:	mov	r2, #5
   137a4:	bl	10cd8 <dcgettext@plt>
   137a8:	mov	r1, r0
   137ac:	movw	r2, #20396	; 0x4fac
   137b0:	movt	r2, #1
   137b4:	mov	r0, #1
   137b8:	pop	{fp, lr}
   137bc:	b	10dec <__printf_chk@plt>
   137c0:	b	137c4 <putchar_unlocked@plt+0x2954>
   137c4:	push	{r4, r5, r6, sl, fp, lr}
   137c8:	add	fp, sp, #16
   137cc:	mov	r4, r2
   137d0:	mov	r5, r1
   137d4:	mov	r6, r0
   137d8:	bl	14310 <putchar_unlocked@plt+0x34a0>
   137dc:	cmp	r0, #0
   137e0:	popne	{r4, r5, r6, sl, fp, pc}
   137e4:	cmp	r6, #0
   137e8:	beq	137fc <putchar_unlocked@plt+0x298c>
   137ec:	cmp	r5, #0
   137f0:	cmpne	r4, #0
   137f4:	bne	137fc <putchar_unlocked@plt+0x298c>
   137f8:	pop	{r4, r5, r6, sl, fp, pc}
   137fc:	bl	13b88 <putchar_unlocked@plt+0x2d18>
   13800:	push	{fp, lr}
   13804:	mov	fp, sp
   13808:	bl	13c20 <putchar_unlocked@plt+0x2db0>
   1380c:	pop	{fp, lr}
   13810:	b	13814 <putchar_unlocked@plt+0x29a4>
   13814:	cmp	r0, #0
   13818:	bxne	lr
   1381c:	push	{fp, lr}
   13820:	mov	fp, sp
   13824:	bl	13b88 <putchar_unlocked@plt+0x2d18>
   13828:	push	{fp, lr}
   1382c:	mov	fp, sp
   13830:	bl	14240 <putchar_unlocked@plt+0x33d0>
   13834:	pop	{fp, lr}
   13838:	b	13814 <putchar_unlocked@plt+0x29a4>
   1383c:	b	13800 <putchar_unlocked@plt+0x2990>
   13840:	push	{r4, r5, fp, lr}
   13844:	add	fp, sp, #8
   13848:	mov	r4, r1
   1384c:	mov	r5, r0
   13850:	bl	13c50 <putchar_unlocked@plt+0x2de0>
   13854:	cmp	r0, #0
   13858:	popne	{r4, r5, fp, pc}
   1385c:	cmp	r5, #0
   13860:	beq	13870 <putchar_unlocked@plt+0x2a00>
   13864:	cmp	r4, #0
   13868:	bne	13870 <putchar_unlocked@plt+0x2a00>
   1386c:	pop	{r4, r5, fp, pc}
   13870:	bl	13b88 <putchar_unlocked@plt+0x2d18>
   13874:	push	{fp, lr}
   13878:	mov	fp, sp
   1387c:	bl	14244 <putchar_unlocked@plt+0x33d4>
   13880:	pop	{fp, lr}
   13884:	b	13814 <putchar_unlocked@plt+0x29a4>
   13888:	push	{fp, lr}
   1388c:	mov	fp, sp
   13890:	bl	14254 <putchar_unlocked@plt+0x33e4>
   13894:	pop	{fp, lr}
   13898:	b	13814 <putchar_unlocked@plt+0x29a4>
   1389c:	mov	r2, r1
   138a0:	mov	r1, r0
   138a4:	mov	r0, #0
   138a8:	b	137c4 <putchar_unlocked@plt+0x2954>
   138ac:	mov	r2, r1
   138b0:	mov	r1, r0
   138b4:	mov	r0, #0
   138b8:	b	13888 <putchar_unlocked@plt+0x2a18>
   138bc:	mov	r2, #1
   138c0:	b	138c4 <putchar_unlocked@plt+0x2a54>
   138c4:	push	{r4, r5, fp, lr}
   138c8:	add	fp, sp, #8
   138cc:	mov	r4, r1
   138d0:	ldr	r5, [r1]
   138d4:	cmp	r0, #0
   138d8:	beq	138f0 <putchar_unlocked@plt+0x2a80>
   138dc:	mov	r1, #1
   138e0:	add	r1, r1, r5, lsr #1
   138e4:	adds	r5, r5, r1
   138e8:	bcc	13908 <putchar_unlocked@plt+0x2a98>
   138ec:	bl	13b88 <putchar_unlocked@plt+0x2d18>
   138f0:	cmp	r5, #0
   138f4:	bne	13908 <putchar_unlocked@plt+0x2a98>
   138f8:	mov	r1, #64	; 0x40
   138fc:	udiv	r5, r1, r2
   13900:	cmp	r2, #64	; 0x40
   13904:	addhi	r5, r5, #1
   13908:	mov	r1, r5
   1390c:	bl	137c4 <putchar_unlocked@plt+0x2954>
   13910:	str	r5, [r4]
   13914:	pop	{r4, r5, fp, pc}
   13918:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1391c:	add	fp, sp, #24
   13920:	mov	r8, r1
   13924:	ldr	r6, [r1]
   13928:	add	r1, r6, r6, asr #1
   1392c:	cmp	r1, r6
   13930:	mvnvs	r1, #-2147483648	; 0x80000000
   13934:	cmp	r1, r3
   13938:	mov	r5, r1
   1393c:	movgt	r5, r3
   13940:	cmn	r3, #1
   13944:	movle	r5, r1
   13948:	ldr	r4, [fp, #8]
   1394c:	cmn	r4, #1
   13950:	ble	13978 <putchar_unlocked@plt+0x2b08>
   13954:	cmp	r4, #0
   13958:	beq	139cc <putchar_unlocked@plt+0x2b5c>
   1395c:	cmn	r5, #1
   13960:	ble	139a0 <putchar_unlocked@plt+0x2b30>
   13964:	mvn	r7, #-2147483648	; 0x80000000
   13968:	udiv	r1, r7, r4
   1396c:	cmp	r1, r5
   13970:	bge	139cc <putchar_unlocked@plt+0x2b5c>
   13974:	b	139dc <putchar_unlocked@plt+0x2b6c>
   13978:	cmn	r5, #1
   1397c:	ble	139bc <putchar_unlocked@plt+0x2b4c>
   13980:	cmn	r4, #1
   13984:	beq	139cc <putchar_unlocked@plt+0x2b5c>
   13988:	mov	r1, #-2147483648	; 0x80000000
   1398c:	sdiv	r1, r1, r4
   13990:	mvn	r7, #-2147483648	; 0x80000000
   13994:	cmp	r1, r5
   13998:	bge	139cc <putchar_unlocked@plt+0x2b5c>
   1399c:	b	139dc <putchar_unlocked@plt+0x2b6c>
   139a0:	beq	139cc <putchar_unlocked@plt+0x2b5c>
   139a4:	mov	r1, #-2147483648	; 0x80000000
   139a8:	sdiv	r1, r1, r5
   139ac:	mvn	r7, #-2147483648	; 0x80000000
   139b0:	cmp	r1, r4
   139b4:	bge	139cc <putchar_unlocked@plt+0x2b5c>
   139b8:	b	139dc <putchar_unlocked@plt+0x2b6c>
   139bc:	mvn	r7, #-2147483648	; 0x80000000
   139c0:	sdiv	r1, r7, r4
   139c4:	cmp	r5, r1
   139c8:	blt	139dc <putchar_unlocked@plt+0x2b6c>
   139cc:	mul	r1, r5, r4
   139d0:	mov	r7, #64	; 0x40
   139d4:	cmp	r1, #63	; 0x3f
   139d8:	bgt	139e4 <putchar_unlocked@plt+0x2b74>
   139dc:	sdiv	r5, r7, r4
   139e0:	mul	r1, r5, r4
   139e4:	cmp	r0, #0
   139e8:	moveq	r7, #0
   139ec:	streq	r7, [r8]
   139f0:	sub	r7, r5, r6
   139f4:	cmp	r7, r2
   139f8:	bge	13aa4 <putchar_unlocked@plt+0x2c34>
   139fc:	add	r5, r6, r2
   13a00:	mov	r1, #0
   13a04:	cmp	r5, r3
   13a08:	mov	r2, #0
   13a0c:	movwgt	r2, #1
   13a10:	cmn	r3, #1
   13a14:	movwgt	r1, #1
   13a18:	cmp	r5, r6
   13a1c:	bvs	13a8c <putchar_unlocked@plt+0x2c1c>
   13a20:	ands	r1, r1, r2
   13a24:	bne	13a8c <putchar_unlocked@plt+0x2c1c>
   13a28:	cmn	r4, #1
   13a2c:	ble	13a54 <putchar_unlocked@plt+0x2be4>
   13a30:	cmp	r4, #0
   13a34:	beq	13aa0 <putchar_unlocked@plt+0x2c30>
   13a38:	cmn	r5, #1
   13a3c:	ble	13a78 <putchar_unlocked@plt+0x2c08>
   13a40:	mvn	r1, #-2147483648	; 0x80000000
   13a44:	udiv	r1, r1, r4
   13a48:	cmp	r1, r5
   13a4c:	bge	13aa0 <putchar_unlocked@plt+0x2c30>
   13a50:	b	13a8c <putchar_unlocked@plt+0x2c1c>
   13a54:	cmn	r5, #1
   13a58:	ble	13a90 <putchar_unlocked@plt+0x2c20>
   13a5c:	cmn	r4, #1
   13a60:	beq	13aa0 <putchar_unlocked@plt+0x2c30>
   13a64:	mov	r1, #-2147483648	; 0x80000000
   13a68:	sdiv	r1, r1, r4
   13a6c:	cmp	r1, r5
   13a70:	bge	13aa0 <putchar_unlocked@plt+0x2c30>
   13a74:	b	13a8c <putchar_unlocked@plt+0x2c1c>
   13a78:	beq	13aa0 <putchar_unlocked@plt+0x2c30>
   13a7c:	mov	r1, #-2147483648	; 0x80000000
   13a80:	sdiv	r1, r1, r5
   13a84:	cmp	r1, r4
   13a88:	bge	13aa0 <putchar_unlocked@plt+0x2c30>
   13a8c:	bl	13b88 <putchar_unlocked@plt+0x2d18>
   13a90:	mvn	r1, #-2147483648	; 0x80000000
   13a94:	sdiv	r1, r1, r4
   13a98:	cmp	r5, r1
   13a9c:	blt	13a8c <putchar_unlocked@plt+0x2c1c>
   13aa0:	mul	r1, r5, r4
   13aa4:	bl	13840 <putchar_unlocked@plt+0x29d0>
   13aa8:	str	r5, [r8]
   13aac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ab0:	mov	r1, #1
   13ab4:	b	13ab8 <putchar_unlocked@plt+0x2c48>
   13ab8:	push	{fp, lr}
   13abc:	mov	fp, sp
   13ac0:	bl	13bcc <putchar_unlocked@plt+0x2d5c>
   13ac4:	pop	{fp, lr}
   13ac8:	b	13814 <putchar_unlocked@plt+0x29a4>
   13acc:	mov	r1, #1
   13ad0:	b	13ad4 <putchar_unlocked@plt+0x2c64>
   13ad4:	push	{fp, lr}
   13ad8:	mov	fp, sp
   13adc:	bl	14250 <putchar_unlocked@plt+0x33e0>
   13ae0:	pop	{fp, lr}
   13ae4:	b	13814 <putchar_unlocked@plt+0x29a4>
   13ae8:	push	{r4, r5, fp, lr}
   13aec:	add	fp, sp, #8
   13af0:	mov	r4, r1
   13af4:	mov	r5, r0
   13af8:	mov	r0, r1
   13afc:	bl	13800 <putchar_unlocked@plt+0x2990>
   13b00:	mov	r1, r5
   13b04:	mov	r2, r4
   13b08:	pop	{r4, r5, fp, lr}
   13b0c:	b	10cb4 <memcpy@plt>
   13b10:	push	{r4, r5, fp, lr}
   13b14:	add	fp, sp, #8
   13b18:	mov	r4, r1
   13b1c:	mov	r5, r0
   13b20:	mov	r0, r1
   13b24:	bl	13828 <putchar_unlocked@plt+0x29b8>
   13b28:	mov	r1, r5
   13b2c:	mov	r2, r4
   13b30:	pop	{r4, r5, fp, lr}
   13b34:	b	10cb4 <memcpy@plt>
   13b38:	push	{r4, r5, fp, lr}
   13b3c:	add	fp, sp, #8
   13b40:	mov	r4, r1
   13b44:	mov	r5, r0
   13b48:	add	r0, r1, #1
   13b4c:	bl	13828 <putchar_unlocked@plt+0x29b8>
   13b50:	mov	r1, #0
   13b54:	strb	r1, [r0, r4]
   13b58:	mov	r1, r5
   13b5c:	mov	r2, r4
   13b60:	pop	{r4, r5, fp, lr}
   13b64:	b	10cb4 <memcpy@plt>
   13b68:	push	{r4, sl, fp, lr}
   13b6c:	add	fp, sp, #8
   13b70:	mov	r4, r0
   13b74:	bl	10dbc <strlen@plt>
   13b78:	add	r1, r0, #1
   13b7c:	mov	r0, r4
   13b80:	pop	{r4, sl, fp, lr}
   13b84:	b	13ae8 <putchar_unlocked@plt+0x2c78>
   13b88:	push	{fp, lr}
   13b8c:	mov	fp, sp
   13b90:	movw	r0, #24784	; 0x60d0
   13b94:	movt	r0, #2
   13b98:	ldr	r4, [r0]
   13b9c:	movw	r1, #20472	; 0x4ff8
   13ba0:	movt	r1, #1
   13ba4:	mov	r0, #0
   13ba8:	mov	r2, #5
   13bac:	bl	10cd8 <dcgettext@plt>
   13bb0:	mov	r3, r0
   13bb4:	movw	r2, #19431	; 0x4be7
   13bb8:	movt	r2, #1
   13bbc:	mov	r0, r4
   13bc0:	mov	r1, #0
   13bc4:	bl	10d50 <error@plt>
   13bc8:	bl	10e64 <abort@plt>
   13bcc:	clz	r2, r1
   13bd0:	lsr	r2, r2, #5
   13bd4:	clz	r3, r0
   13bd8:	lsr	r3, r3, #5
   13bdc:	orrs	r2, r3, r2
   13be0:	movwne	r1, #1
   13be4:	movwne	r0, #1
   13be8:	cmp	r1, #0
   13bec:	beq	13c1c <putchar_unlocked@plt+0x2dac>
   13bf0:	mvn	r2, #-2147483648	; 0x80000000
   13bf4:	udiv	r2, r2, r1
   13bf8:	cmp	r2, r0
   13bfc:	bcs	13c1c <putchar_unlocked@plt+0x2dac>
   13c00:	push	{fp, lr}
   13c04:	mov	fp, sp
   13c08:	bl	10dc8 <__errno_location@plt>
   13c0c:	mov	r1, #12
   13c10:	str	r1, [r0]
   13c14:	mov	r0, #0
   13c18:	pop	{fp, pc}
   13c1c:	b	10c6c <calloc@plt>
   13c20:	cmp	r0, #0
   13c24:	movweq	r0, #1
   13c28:	cmn	r0, #1
   13c2c:	ble	13c34 <putchar_unlocked@plt+0x2dc4>
   13c30:	b	10d5c <malloc@plt>
   13c34:	push	{fp, lr}
   13c38:	mov	fp, sp
   13c3c:	bl	10dc8 <__errno_location@plt>
   13c40:	mov	r1, #12
   13c44:	str	r1, [r0]
   13c48:	mov	r0, #0
   13c4c:	pop	{fp, pc}
   13c50:	push	{fp, lr}
   13c54:	mov	fp, sp
   13c58:	cmp	r0, #0
   13c5c:	beq	13c78 <putchar_unlocked@plt+0x2e08>
   13c60:	cmp	r1, #0
   13c64:	beq	13c84 <putchar_unlocked@plt+0x2e14>
   13c68:	cmn	r1, #1
   13c6c:	ble	13c90 <putchar_unlocked@plt+0x2e20>
   13c70:	pop	{fp, lr}
   13c74:	b	10ce4 <realloc@plt>
   13c78:	mov	r0, r1
   13c7c:	pop	{fp, lr}
   13c80:	b	13c20 <putchar_unlocked@plt+0x2db0>
   13c84:	bl	14154 <putchar_unlocked@plt+0x32e4>
   13c88:	mov	r0, #0
   13c8c:	pop	{fp, pc}
   13c90:	bl	10dc8 <__errno_location@plt>
   13c94:	mov	r1, #12
   13c98:	str	r1, [r0]
   13c9c:	mov	r0, #0
   13ca0:	pop	{fp, pc}
   13ca4:	mov	r1, r0
   13ca8:	sub	r2, r0, #65	; 0x41
   13cac:	mov	r0, #1
   13cb0:	cmp	r2, #26
   13cb4:	subcs	r2, r1, #97	; 0x61
   13cb8:	cmpcs	r2, #26
   13cbc:	bcs	13cc4 <putchar_unlocked@plt+0x2e54>
   13cc0:	bx	lr
   13cc4:	sub	r1, r1, #48	; 0x30
   13cc8:	cmp	r1, #10
   13ccc:	movcs	r0, #0
   13cd0:	bx	lr
   13cd4:	mov	r1, r0
   13cd8:	sub	r2, r0, #65	; 0x41
   13cdc:	mov	r0, #1
   13ce0:	cmp	r2, #26
   13ce4:	subcs	r1, r1, #97	; 0x61
   13ce8:	cmpcs	r1, #26
   13cec:	movcs	r0, #0
   13cf0:	bx	lr
   13cf4:	mov	r1, #0
   13cf8:	cmp	r0, #128	; 0x80
   13cfc:	movwcc	r1, #1
   13d00:	mov	r0, r1
   13d04:	bx	lr
   13d08:	sub	r1, r0, #9
   13d0c:	clz	r1, r1
   13d10:	lsr	r1, r1, #5
   13d14:	sub	r0, r0, #32
   13d18:	clz	r0, r0
   13d1c:	lsr	r0, r0, #5
   13d20:	orr	r0, r0, r1
   13d24:	bx	lr
   13d28:	mov	r1, r0
   13d2c:	mov	r0, #1
   13d30:	cmp	r1, #32
   13d34:	bxcc	lr
   13d38:	cmp	r1, #127	; 0x7f
   13d3c:	movne	r0, #0
   13d40:	bx	lr
   13d44:	sub	r1, r0, #48	; 0x30
   13d48:	mov	r0, #0
   13d4c:	cmp	r1, #10
   13d50:	movwcc	r0, #1
   13d54:	bx	lr
   13d58:	sub	r1, r0, #33	; 0x21
   13d5c:	mov	r0, #0
   13d60:	cmp	r1, #94	; 0x5e
   13d64:	movwcc	r0, #1
   13d68:	bx	lr
   13d6c:	sub	r1, r0, #97	; 0x61
   13d70:	mov	r0, #0
   13d74:	cmp	r1, #26
   13d78:	movwcc	r0, #1
   13d7c:	bx	lr
   13d80:	sub	r1, r0, #32
   13d84:	mov	r0, #0
   13d88:	cmp	r1, #95	; 0x5f
   13d8c:	movwcc	r0, #1
   13d90:	bx	lr
   13d94:	sub	r1, r0, #33	; 0x21
   13d98:	cmp	r1, #93	; 0x5d
   13d9c:	bhi	13f28 <putchar_unlocked@plt+0x30b8>
   13da0:	mov	r0, #1
   13da4:	add	r2, pc, #0
   13da8:	ldr	pc, [r2, r1, lsl #2]
   13dac:	andeq	r3, r1, r4, lsr #30
   13db0:	andeq	r3, r1, r4, lsr #30
   13db4:	andeq	r3, r1, r4, lsr #30
   13db8:	andeq	r3, r1, r4, lsr #30
   13dbc:	andeq	r3, r1, r4, lsr #30
   13dc0:	andeq	r3, r1, r4, lsr #30
   13dc4:	andeq	r3, r1, r4, lsr #30
   13dc8:	andeq	r3, r1, r4, lsr #30
   13dcc:	andeq	r3, r1, r4, lsr #30
   13dd0:	andeq	r3, r1, r4, lsr #30
   13dd4:	andeq	r3, r1, r4, lsr #30
   13dd8:	andeq	r3, r1, r4, lsr #30
   13ddc:	andeq	r3, r1, r4, lsr #30
   13de0:	andeq	r3, r1, r4, lsr #30
   13de4:	andeq	r3, r1, r4, lsr #30
   13de8:	andeq	r3, r1, r8, lsr #30
   13dec:	andeq	r3, r1, r8, lsr #30
   13df0:	andeq	r3, r1, r8, lsr #30
   13df4:	andeq	r3, r1, r8, lsr #30
   13df8:	andeq	r3, r1, r8, lsr #30
   13dfc:	andeq	r3, r1, r8, lsr #30
   13e00:	andeq	r3, r1, r8, lsr #30
   13e04:	andeq	r3, r1, r8, lsr #30
   13e08:	andeq	r3, r1, r8, lsr #30
   13e0c:	andeq	r3, r1, r8, lsr #30
   13e10:	andeq	r3, r1, r4, lsr #30
   13e14:	andeq	r3, r1, r4, lsr #30
   13e18:	andeq	r3, r1, r4, lsr #30
   13e1c:	andeq	r3, r1, r4, lsr #30
   13e20:	andeq	r3, r1, r4, lsr #30
   13e24:	andeq	r3, r1, r4, lsr #30
   13e28:	andeq	r3, r1, r4, lsr #30
   13e2c:	andeq	r3, r1, r8, lsr #30
   13e30:	andeq	r3, r1, r8, lsr #30
   13e34:	andeq	r3, r1, r8, lsr #30
   13e38:	andeq	r3, r1, r8, lsr #30
   13e3c:	andeq	r3, r1, r8, lsr #30
   13e40:	andeq	r3, r1, r8, lsr #30
   13e44:	andeq	r3, r1, r8, lsr #30
   13e48:	andeq	r3, r1, r8, lsr #30
   13e4c:	andeq	r3, r1, r8, lsr #30
   13e50:	andeq	r3, r1, r8, lsr #30
   13e54:	andeq	r3, r1, r8, lsr #30
   13e58:	andeq	r3, r1, r8, lsr #30
   13e5c:	andeq	r3, r1, r8, lsr #30
   13e60:	andeq	r3, r1, r8, lsr #30
   13e64:	andeq	r3, r1, r8, lsr #30
   13e68:	andeq	r3, r1, r8, lsr #30
   13e6c:	andeq	r3, r1, r8, lsr #30
   13e70:	andeq	r3, r1, r8, lsr #30
   13e74:	andeq	r3, r1, r8, lsr #30
   13e78:	andeq	r3, r1, r8, lsr #30
   13e7c:	andeq	r3, r1, r8, lsr #30
   13e80:	andeq	r3, r1, r8, lsr #30
   13e84:	andeq	r3, r1, r8, lsr #30
   13e88:	andeq	r3, r1, r8, lsr #30
   13e8c:	andeq	r3, r1, r8, lsr #30
   13e90:	andeq	r3, r1, r8, lsr #30
   13e94:	andeq	r3, r1, r4, lsr #30
   13e98:	andeq	r3, r1, r4, lsr #30
   13e9c:	andeq	r3, r1, r4, lsr #30
   13ea0:	andeq	r3, r1, r4, lsr #30
   13ea4:	andeq	r3, r1, r4, lsr #30
   13ea8:	andeq	r3, r1, r4, lsr #30
   13eac:	andeq	r3, r1, r8, lsr #30
   13eb0:	andeq	r3, r1, r8, lsr #30
   13eb4:	andeq	r3, r1, r8, lsr #30
   13eb8:	andeq	r3, r1, r8, lsr #30
   13ebc:	andeq	r3, r1, r8, lsr #30
   13ec0:	andeq	r3, r1, r8, lsr #30
   13ec4:	andeq	r3, r1, r8, lsr #30
   13ec8:	andeq	r3, r1, r8, lsr #30
   13ecc:	andeq	r3, r1, r8, lsr #30
   13ed0:	andeq	r3, r1, r8, lsr #30
   13ed4:	andeq	r3, r1, r8, lsr #30
   13ed8:	andeq	r3, r1, r8, lsr #30
   13edc:	andeq	r3, r1, r8, lsr #30
   13ee0:	andeq	r3, r1, r8, lsr #30
   13ee4:	andeq	r3, r1, r8, lsr #30
   13ee8:	andeq	r3, r1, r8, lsr #30
   13eec:	andeq	r3, r1, r8, lsr #30
   13ef0:	andeq	r3, r1, r8, lsr #30
   13ef4:	andeq	r3, r1, r8, lsr #30
   13ef8:	andeq	r3, r1, r8, lsr #30
   13efc:	andeq	r3, r1, r8, lsr #30
   13f00:	andeq	r3, r1, r8, lsr #30
   13f04:	andeq	r3, r1, r8, lsr #30
   13f08:	andeq	r3, r1, r8, lsr #30
   13f0c:	andeq	r3, r1, r8, lsr #30
   13f10:	andeq	r3, r1, r8, lsr #30
   13f14:	andeq	r3, r1, r4, lsr #30
   13f18:	andeq	r3, r1, r4, lsr #30
   13f1c:	andeq	r3, r1, r4, lsr #30
   13f20:	andeq	r3, r1, r4, lsr #30
   13f24:	bx	lr
   13f28:	mov	r0, #0
   13f2c:	bx	lr
   13f30:	sub	r0, r0, #9
   13f34:	cmp	r0, #23
   13f38:	movhi	r0, #0
   13f3c:	bxhi	lr
   13f40:	bic	r0, r0, #-16777216	; 0xff000000
   13f44:	movw	r1, #31
   13f48:	movt	r1, #128	; 0x80
   13f4c:	mov	r2, #1
   13f50:	and	r0, r2, r1, lsr r0
   13f54:	bx	lr
   13f58:	sub	r1, r0, #65	; 0x41
   13f5c:	mov	r0, #0
   13f60:	cmp	r1, #26
   13f64:	movwcc	r0, #1
   13f68:	bx	lr
   13f6c:	mov	r1, r0
   13f70:	sub	r2, r0, #48	; 0x30
   13f74:	mov	r0, #1
   13f78:	cmp	r2, #22
   13f7c:	bhi	13f94 <putchar_unlocked@plt+0x3124>
   13f80:	mov	ip, #1
   13f84:	movw	r3, #1023	; 0x3ff
   13f88:	movt	r3, #126	; 0x7e
   13f8c:	tst	r3, ip, lsl r2
   13f90:	bxne	lr
   13f94:	sub	r1, r1, #97	; 0x61
   13f98:	cmp	r1, #6
   13f9c:	movcs	r0, #0
   13fa0:	bxcs	lr
   13fa4:	bx	lr
   13fa8:	sub	r1, r0, #65	; 0x41
   13fac:	cmp	r1, #26
   13fb0:	addcc	r0, r0, #32
   13fb4:	bx	lr
   13fb8:	sub	r1, r0, #97	; 0x61
   13fbc:	cmp	r1, #26
   13fc0:	subcc	r0, r0, #32
   13fc4:	bx	lr
   13fc8:	push	{r4, r5, r6, sl, fp, lr}
   13fcc:	add	fp, sp, #16
   13fd0:	mov	r4, r0
   13fd4:	bl	10d2c <__fpending@plt>
   13fd8:	mov	r5, r0
   13fdc:	mov	r0, r4
   13fe0:	bl	10d38 <ferror_unlocked@plt>
   13fe4:	mov	r6, r0
   13fe8:	mov	r0, r4
   13fec:	bl	1404c <putchar_unlocked@plt+0x31dc>
   13ff0:	cmp	r6, #0
   13ff4:	beq	14018 <putchar_unlocked@plt+0x31a8>
   13ff8:	mvn	r4, #0
   13ffc:	cmp	r0, #0
   14000:	bne	14044 <putchar_unlocked@plt+0x31d4>
   14004:	bl	10dc8 <__errno_location@plt>
   14008:	mov	r1, #0
   1400c:	str	r1, [r0]
   14010:	mov	r0, r4
   14014:	pop	{r4, r5, r6, sl, fp, pc}
   14018:	cmp	r0, #0
   1401c:	mov	r4, r0
   14020:	mvnne	r4, #0
   14024:	cmp	r5, #0
   14028:	bne	14044 <putchar_unlocked@plt+0x31d4>
   1402c:	cmp	r0, #0
   14030:	beq	14044 <putchar_unlocked@plt+0x31d4>
   14034:	bl	10dc8 <__errno_location@plt>
   14038:	ldr	r0, [r0]
   1403c:	subs	r4, r0, #9
   14040:	mvnne	r4, #0
   14044:	mov	r0, r4
   14048:	pop	{r4, r5, r6, sl, fp, pc}
   1404c:	push	{r4, r5, fp, lr}
   14050:	add	fp, sp, #8
   14054:	sub	sp, sp, #8
   14058:	mov	r4, r0
   1405c:	bl	10df8 <fileno@plt>
   14060:	cmn	r0, #1
   14064:	ble	140dc <putchar_unlocked@plt+0x326c>
   14068:	mov	r0, r4
   1406c:	bl	10d74 <__freading@plt>
   14070:	cmp	r0, #0
   14074:	beq	140a0 <putchar_unlocked@plt+0x3230>
   14078:	mov	r0, r4
   1407c:	bl	10df8 <fileno@plt>
   14080:	mov	r1, #1
   14084:	str	r1, [sp]
   14088:	mov	r2, #0
   1408c:	mov	r3, #0
   14090:	bl	10d14 <lseek64@plt>
   14094:	and	r0, r0, r1
   14098:	cmn	r0, #1
   1409c:	beq	140dc <putchar_unlocked@plt+0x326c>
   140a0:	mov	r0, r4
   140a4:	bl	140ec <putchar_unlocked@plt+0x327c>
   140a8:	cmp	r0, #0
   140ac:	beq	140dc <putchar_unlocked@plt+0x326c>
   140b0:	bl	10dc8 <__errno_location@plt>
   140b4:	ldr	r5, [r0]
   140b8:	mov	r0, r4
   140bc:	bl	10e10 <fclose@plt>
   140c0:	cmp	r5, #0
   140c4:	beq	140d4 <putchar_unlocked@plt+0x3264>
   140c8:	bl	10dc8 <__errno_location@plt>
   140cc:	str	r5, [r0]
   140d0:	mvn	r0, #0
   140d4:	sub	sp, fp, #8
   140d8:	pop	{r4, r5, fp, pc}
   140dc:	mov	r0, r4
   140e0:	sub	sp, fp, #8
   140e4:	pop	{r4, r5, fp, lr}
   140e8:	b	10e10 <fclose@plt>
   140ec:	push	{r4, sl, fp, lr}
   140f0:	add	fp, sp, #8
   140f4:	mov	r4, r0
   140f8:	cmp	r0, #0
   140fc:	beq	14114 <putchar_unlocked@plt+0x32a4>
   14100:	mov	r0, r4
   14104:	bl	10d74 <__freading@plt>
   14108:	cmp	r0, #0
   1410c:	movne	r0, r4
   14110:	blne	14120 <putchar_unlocked@plt+0x32b0>
   14114:	mov	r0, r4
   14118:	pop	{r4, sl, fp, lr}
   1411c:	b	10c90 <fflush@plt>
   14120:	push	{fp, lr}
   14124:	mov	fp, sp
   14128:	sub	sp, sp, #8
   1412c:	ldrb	r1, [r0, #1]
   14130:	tst	r1, #1
   14134:	beq	1414c <putchar_unlocked@plt+0x32dc>
   14138:	mov	r1, #1
   1413c:	str	r1, [sp]
   14140:	mov	r2, #0
   14144:	mov	r3, #0
   14148:	bl	1417c <putchar_unlocked@plt+0x330c>
   1414c:	mov	sp, fp
   14150:	pop	{fp, pc}
   14154:	push	{r4, r5, r6, sl, fp, lr}
   14158:	add	fp, sp, #16
   1415c:	mov	r4, r0
   14160:	bl	10dc8 <__errno_location@plt>
   14164:	mov	r5, r0
   14168:	ldr	r6, [r0]
   1416c:	mov	r0, r4
   14170:	bl	10c9c <free@plt>
   14174:	str	r6, [r5]
   14178:	pop	{r4, r5, r6, sl, fp, pc}
   1417c:	push	{r4, r5, r6, r7, fp, lr}
   14180:	add	fp, sp, #16
   14184:	sub	sp, sp, #8
   14188:	mov	r5, r3
   1418c:	mov	r6, r2
   14190:	mov	r4, r0
   14194:	ldr	r0, [r0, #4]
   14198:	ldr	r1, [r4, #8]
   1419c:	cmp	r1, r0
   141a0:	bne	141bc <putchar_unlocked@plt+0x334c>
   141a4:	ldrd	r0, [r4, #16]
   141a8:	cmp	r1, r0
   141ac:	bne	141bc <putchar_unlocked@plt+0x334c>
   141b0:	ldr	r0, [r4, #36]	; 0x24
   141b4:	cmp	r0, #0
   141b8:	beq	141d4 <putchar_unlocked@plt+0x3364>
   141bc:	mov	r0, r4
   141c0:	mov	r2, r6
   141c4:	mov	r3, r5
   141c8:	sub	sp, fp, #16
   141cc:	pop	{r4, r5, r6, r7, fp, lr}
   141d0:	b	10e1c <fseeko64@plt>
   141d4:	ldr	r7, [fp, #8]
   141d8:	mov	r0, r4
   141dc:	bl	10df8 <fileno@plt>
   141e0:	str	r7, [sp]
   141e4:	mov	r2, r6
   141e8:	mov	r3, r5
   141ec:	bl	10d14 <lseek64@plt>
   141f0:	and	r2, r0, r1
   141f4:	cmn	r2, #1
   141f8:	beq	14218 <putchar_unlocked@plt+0x33a8>
   141fc:	strd	r0, [r4, #80]	; 0x50
   14200:	ldr	r0, [r4]
   14204:	bic	r0, r0, #16
   14208:	str	r0, [r4]
   1420c:	mov	r0, #0
   14210:	sub	sp, fp, #16
   14214:	pop	{r4, r5, r6, r7, fp, pc}
   14218:	mvn	r0, #0
   1421c:	sub	sp, fp, #16
   14220:	pop	{r4, r5, r6, r7, fp, pc}
   14224:	push	{fp, lr}
   14228:	mov	fp, sp
   1422c:	bl	10dc8 <__errno_location@plt>
   14230:	mov	r1, #12
   14234:	str	r1, [r0]
   14238:	mov	r0, #0
   1423c:	pop	{fp, pc}
   14240:	b	13c20 <putchar_unlocked@plt+0x2db0>
   14244:	cmp	r1, #0
   14248:	orreq	r1, r1, #1
   1424c:	b	13c50 <putchar_unlocked@plt+0x2de0>
   14250:	b	13bcc <putchar_unlocked@plt+0x2d5c>
   14254:	clz	r3, r2
   14258:	lsr	ip, r3, #5
   1425c:	clz	r3, r1
   14260:	lsr	r3, r3, #5
   14264:	orrs	r3, r3, ip
   14268:	movwne	r1, #1
   1426c:	movwne	r2, #1
   14270:	b	14310 <putchar_unlocked@plt+0x34a0>
   14274:	push	{fp, lr}
   14278:	mov	fp, sp
   1427c:	mov	r0, #14
   14280:	bl	10e40 <nl_langinfo@plt>
   14284:	movw	r1, #18392	; 0x47d8
   14288:	movt	r1, #1
   1428c:	cmp	r0, #0
   14290:	movne	r1, r0
   14294:	ldrb	r2, [r1]
   14298:	movw	r0, #20489	; 0x5009
   1429c:	movt	r0, #1
   142a0:	cmp	r2, #0
   142a4:	movne	r0, r1
   142a8:	pop	{fp, pc}
   142ac:	push	{r4, r5, r6, r7, fp, lr}
   142b0:	add	fp, sp, #16
   142b4:	sub	sp, sp, #8
   142b8:	mov	r7, r2
   142bc:	mov	r4, r1
   142c0:	add	r5, sp, #4
   142c4:	cmp	r0, #0
   142c8:	movne	r5, r0
   142cc:	mov	r0, r5
   142d0:	bl	10d44 <mbrtowc@plt>
   142d4:	mov	r6, r0
   142d8:	cmp	r7, #0
   142dc:	beq	14304 <putchar_unlocked@plt+0x3494>
   142e0:	cmn	r6, #2
   142e4:	bcc	14304 <putchar_unlocked@plt+0x3494>
   142e8:	mov	r0, #0
   142ec:	bl	1434c <putchar_unlocked@plt+0x34dc>
   142f0:	cmp	r0, #0
   142f4:	bne	14304 <putchar_unlocked@plt+0x3494>
   142f8:	ldrb	r0, [r4]
   142fc:	str	r0, [r5]
   14300:	mov	r6, #1
   14304:	mov	r0, r6
   14308:	sub	sp, fp, #16
   1430c:	pop	{r4, r5, r6, r7, fp, pc}
   14310:	cmp	r2, #0
   14314:	beq	14344 <putchar_unlocked@plt+0x34d4>
   14318:	mvn	r3, #0
   1431c:	udiv	r3, r3, r2
   14320:	cmp	r3, r1
   14324:	bcs	14344 <putchar_unlocked@plt+0x34d4>
   14328:	push	{fp, lr}
   1432c:	mov	fp, sp
   14330:	bl	10dc8 <__errno_location@plt>
   14334:	mov	r1, #12
   14338:	str	r1, [r0]
   1433c:	mov	r0, #0
   14340:	pop	{fp, pc}
   14344:	mul	r1, r2, r1
   14348:	b	13c50 <putchar_unlocked@plt+0x2de0>
   1434c:	push	{r4, sl, fp, lr}
   14350:	add	fp, sp, #8
   14354:	sub	sp, sp, #264	; 0x108
   14358:	add	r1, sp, #7
   1435c:	movw	r2, #257	; 0x101
   14360:	bl	143b8 <putchar_unlocked@plt+0x3548>
   14364:	mov	r4, #0
   14368:	cmp	r0, #0
   1436c:	bne	143ac <putchar_unlocked@plt+0x353c>
   14370:	add	r0, sp, #7
   14374:	movw	r1, #20495	; 0x500f
   14378:	movt	r1, #1
   1437c:	mov	r2, #2
   14380:	bl	10db0 <bcmp@plt>
   14384:	cmp	r0, #0
   14388:	beq	143ac <putchar_unlocked@plt+0x353c>
   1438c:	add	r0, sp, #7
   14390:	movw	r1, #20497	; 0x5011
   14394:	movt	r1, #1
   14398:	mov	r2, #6
   1439c:	bl	10db0 <bcmp@plt>
   143a0:	mov	r4, r0
   143a4:	cmp	r0, #0
   143a8:	movwne	r4, #1
   143ac:	mov	r0, r4
   143b0:	sub	sp, fp, #8
   143b4:	pop	{r4, sl, fp, pc}
   143b8:	b	143bc <putchar_unlocked@plt+0x354c>
   143bc:	push	{r4, r5, r6, r7, fp, lr}
   143c0:	add	fp, sp, #16
   143c4:	mov	r6, r2
   143c8:	mov	r4, r1
   143cc:	bl	14454 <putchar_unlocked@plt+0x35e4>
   143d0:	cmp	r0, #0
   143d4:	beq	14404 <putchar_unlocked@plt+0x3594>
   143d8:	mov	r7, r0
   143dc:	bl	10dbc <strlen@plt>
   143e0:	cmp	r0, r6
   143e4:	bcs	14420 <putchar_unlocked@plt+0x35b0>
   143e8:	add	r2, r0, #1
   143ec:	mov	r0, r4
   143f0:	mov	r1, r7
   143f4:	bl	10cb4 <memcpy@plt>
   143f8:	mov	r5, #0
   143fc:	mov	r0, r5
   14400:	pop	{r4, r5, r6, r7, fp, pc}
   14404:	mov	r5, #22
   14408:	cmp	r6, #0
   1440c:	beq	14448 <putchar_unlocked@plt+0x35d8>
   14410:	mov	r0, #0
   14414:	strb	r0, [r4]
   14418:	mov	r0, r5
   1441c:	pop	{r4, r5, r6, r7, fp, pc}
   14420:	mov	r5, #34	; 0x22
   14424:	cmp	r6, #0
   14428:	beq	14448 <putchar_unlocked@plt+0x35d8>
   1442c:	sub	r6, r6, #1
   14430:	mov	r0, r4
   14434:	mov	r1, r7
   14438:	mov	r2, r6
   1443c:	bl	10cb4 <memcpy@plt>
   14440:	mov	r0, #0
   14444:	strb	r0, [r4, r6]
   14448:	mov	r0, r5
   1444c:	pop	{r4, r5, r6, r7, fp, pc}
   14450:	b	14454 <putchar_unlocked@plt+0x35e4>
   14454:	mov	r1, #0
   14458:	b	10e28 <setlocale@plt>
   1445c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14460:	mov	r7, r0
   14464:	ldr	r6, [pc, #72]	; 144b4 <putchar_unlocked@plt+0x3644>
   14468:	ldr	r5, [pc, #72]	; 144b8 <putchar_unlocked@plt+0x3648>
   1446c:	add	r6, pc, r6
   14470:	add	r5, pc, r5
   14474:	sub	r6, r6, r5
   14478:	mov	r8, r1
   1447c:	mov	r9, r2
   14480:	bl	10c4c <calloc@plt-0x20>
   14484:	asrs	r6, r6, #2
   14488:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1448c:	mov	r4, #0
   14490:	add	r4, r4, #1
   14494:	ldr	r3, [r5], #4
   14498:	mov	r2, r9
   1449c:	mov	r1, r8
   144a0:	mov	r0, r7
   144a4:	blx	r3
   144a8:	cmp	r6, r4
   144ac:	bne	14490 <putchar_unlocked@plt+0x3620>
   144b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144b4:	muleq	r1, r8, sl
   144b8:	muleq	r1, r0, sl
   144bc:	bx	lr
   144c0:	ldr	r3, [pc, #12]	; 144d4 <putchar_unlocked@plt+0x3664>
   144c4:	mov	r1, #0
   144c8:	add	r3, pc, r3
   144cc:	ldr	r2, [r3]
   144d0:	b	10dd4 <__cxa_atexit@plt>
   144d4:	strdeq	r1, [r1], -r4

Disassembly of section .fini:

000144d8 <.fini>:
   144d8:	push	{r3, lr}
   144dc:	pop	{r3, pc}
