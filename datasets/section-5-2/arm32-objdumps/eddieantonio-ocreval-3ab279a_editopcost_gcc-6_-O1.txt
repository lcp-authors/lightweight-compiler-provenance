
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf32-littlearm


Disassembly of section .init:

000106d4 <.init>:
   106d4:	push	{r3, lr}
   106d8:	bl	10838 <abort@plt+0x48>
   106dc:	pop	{r3, pc}

Disassembly of section .plt:

000106e0 <calloc@plt-0x14>:
   106e0:	push	{lr}		; (str lr, [sp, #-4]!)
   106e4:	ldr	lr, [pc, #4]	; 106f0 <calloc@plt-0x4>
   106e8:	add	lr, pc, lr
   106ec:	ldr	pc, [lr, #8]!
   106f0:	andeq	r1, r1, r0, lsl r9

000106f4 <calloc@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2320]!	; 0x910

00010700 <strcmp@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2312]!	; 0x908

0001070c <printf@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2304]!	; 0x900

00010718 <fopen@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2296]!	; 0x8f8

00010724 <free@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #69632	; 0x11000
   1072c:	ldr	pc, [ip, #2288]!	; 0x8f0

00010730 <fgets@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2280]!	; 0x8e8

0001073c <strdup@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2272]!	; 0x8e0

00010748 <unlink@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2264]!	; 0x8d8

00010754 <__xstat@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2256]!	; 0x8d0

00010760 <fwrite@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2248]!	; 0x8c8

0001076c <__libc_start_main@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2240]!	; 0x8c0

00010778 <__sysv_signal@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2232]!	; 0x8b8

00010784 <__gmon_start__@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2224]!	; 0x8b0

00010790 <getpid@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2216]!	; 0x8a8

0001079c <exit@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2208]!	; 0x8a0

000107a8 <strlen@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2200]!	; 0x898

000107b4 <fprintf@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2192]!	; 0x890

000107c0 <__isoc99_sscanf@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2184]!	; 0x888

000107cc <fclose@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2176]!	; 0x880

000107d8 <sprintf@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2168]!	; 0x878

000107e4 <strncmp@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2160]!	; 0x870

000107f0 <abort@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2152]!	; 0x868

Disassembly of section .text:

000107fc <error@@Base-0x7a8>:
   107fc:	mov	fp, #0
   10800:	mov	lr, #0
   10804:	pop	{r1}		; (ldr r1, [sp], #4)
   10808:	mov	r2, sp
   1080c:	push	{r2}		; (str r2, [sp, #-4]!)
   10810:	push	{r0}		; (str r0, [sp, #-4]!)
   10814:	ldr	ip, [pc, #16]	; 1082c <abort@plt+0x3c>
   10818:	push	{ip}		; (str ip, [sp, #-4]!)
   1081c:	ldr	r0, [pc, #12]	; 10830 <abort@plt+0x40>
   10820:	ldr	r3, [pc, #12]	; 10834 <abort@plt+0x44>
   10824:	bl	1076c <__libc_start_main@plt>
   10828:	bl	107f0 <abort@plt>
   1082c:	muleq	r1, ip, r3
   10830:	ldrdeq	r0, [r1], -r8
   10834:	andeq	r1, r1, ip, lsr r3
   10838:	ldr	r3, [pc, #20]	; 10854 <abort@plt+0x64>
   1083c:	ldr	r2, [pc, #20]	; 10858 <abort@plt+0x68>
   10840:	add	r3, pc, r3
   10844:	ldr	r2, [r3, r2]
   10848:	cmp	r2, #0
   1084c:	bxeq	lr
   10850:	b	10784 <__gmon_start__@plt>
   10854:			; <UNDEFINED> instruction: 0x000117b8
   10858:	andeq	r0, r0, r4, rrx
   1085c:	ldr	r3, [pc, #28]	; 10880 <abort@plt+0x90>
   10860:	ldr	r0, [pc, #28]	; 10884 <abort@plt+0x94>
   10864:	sub	r3, r3, r0
   10868:	cmp	r3, #6
   1086c:	bxls	lr
   10870:	ldr	r3, [pc, #16]	; 10888 <abort@plt+0x98>
   10874:	cmp	r3, #0
   10878:	bxeq	lr
   1087c:	bx	r3
   10880:	andeq	r2, r2, fp, ror r0
   10884:	andeq	r2, r2, r8, ror r0
   10888:	andeq	r0, r0, r0
   1088c:	ldr	r1, [pc, #36]	; 108b8 <abort@plt+0xc8>
   10890:	ldr	r0, [pc, #36]	; 108bc <abort@plt+0xcc>
   10894:	sub	r1, r1, r0
   10898:	asr	r1, r1, #2
   1089c:	add	r1, r1, r1, lsr #31
   108a0:	asrs	r1, r1, #1
   108a4:	bxeq	lr
   108a8:	ldr	r3, [pc, #16]	; 108c0 <abort@plt+0xd0>
   108ac:	cmp	r3, #0
   108b0:	bxeq	lr
   108b4:	bx	r3
   108b8:	andeq	r2, r2, r8, ror r0
   108bc:	andeq	r2, r2, r8, ror r0
   108c0:	andeq	r0, r0, r0
   108c4:	push	{r4, lr}
   108c8:	ldr	r4, [pc, #24]	; 108e8 <abort@plt+0xf8>
   108cc:	ldrb	r3, [r4]
   108d0:	cmp	r3, #0
   108d4:	popne	{r4, pc}
   108d8:	bl	1085c <abort@plt+0x6c>
   108dc:	mov	r3, #1
   108e0:	strb	r3, [r4]
   108e4:	pop	{r4, pc}
   108e8:	andeq	r2, r2, r8, lsl #1
   108ec:	ldr	r0, [pc, #40]	; 1091c <abort@plt+0x12c>
   108f0:	ldr	r3, [r0]
   108f4:	cmp	r3, #0
   108f8:	bne	10900 <abort@plt+0x110>
   108fc:	b	1088c <abort@plt+0x9c>
   10900:	ldr	r3, [pc, #24]	; 10920 <abort@plt+0x130>
   10904:	cmp	r3, #0
   10908:	beq	108fc <abort@plt+0x10c>
   1090c:	push	{r4, lr}
   10910:	blx	r3
   10914:	pop	{r4, lr}
   10918:	b	1088c <abort@plt+0x9c>
   1091c:	andeq	r1, r2, r4, lsl #30
   10920:	andeq	r0, r0, r0
   10924:	ldr	ip, [pc, #88]	; 10984 <abort@plt+0x194>
   10928:	ldr	r1, [pc, #88]	; 10988 <abort@plt+0x198>
   1092c:	ldr	r3, [ip]
   10930:	ldr	r2, [r1]
   10934:	sub	r3, r3, r2
   10938:	str	r3, [ip]
   1093c:	ldr	r3, [ip, #4]
   10940:	ldr	r2, [r1, #4]
   10944:	sub	r3, r3, r2
   10948:	str	r3, [ip, #4]
   1094c:	ldr	r3, [ip, #8]
   10950:	ldr	r2, [r1, #8]
   10954:	sub	r3, r3, r2
   10958:	str	r3, [ip, #8]
   1095c:	add	r3, ip, #12
   10960:	add	r1, r1, #12
   10964:	add	ip, ip, #412	; 0x19c
   10968:	ldr	r2, [r3, #4]
   1096c:	ldr	r0, [r1, #4]!
   10970:	sub	r2, r2, r0
   10974:	str	r2, [r3, #4]!
   10978:	cmp	r3, ip
   1097c:	bne	10968 <abort@plt+0x178>
   10980:	bx	lr
   10984:	muleq	r2, r4, r2
   10988:	strdeq	r2, [r2], -r4
   1098c:	push	{r4, r5, r6, r7, r8, lr}
   10990:	ldr	r7, [pc, #56]	; 109d0 <abort@plt+0x1e0>
   10994:	ldr	r6, [r7]
   10998:	ldr	r5, [r7, #8]!
   1099c:	mov	r4, #0
   109a0:	ldr	r8, [pc, #44]	; 109d4 <abort@plt+0x1e4>
   109a4:	mla	r2, r4, r5, r6
   109a8:	mov	r1, r4
   109ac:	mov	r0, r8
   109b0:	bl	1070c <printf@plt>
   109b4:	ldr	r3, [r7, #4]!
   109b8:	mla	r6, r4, r3, r6
   109bc:	sub	r5, r5, r3
   109c0:	add	r4, r4, #1
   109c4:	cmp	r4, #101	; 0x65
   109c8:	bne	109a4 <abort@plt+0x1b4>
   109cc:	pop	{r4, r5, r6, r7, r8, pc}
   109d0:	muleq	r2, r4, r2
   109d4:	andeq	r1, r1, ip, lsr #7
   109d8:	push	{lr}		; (str lr, [sp, #-4]!)
   109dc:	sub	sp, sp, #12
   109e0:	add	ip, sp, #8
   109e4:	str	r0, [ip, #-4]!
   109e8:	mov	r4, r1
   109ec:	mov	r3, #0
   109f0:	ldr	r2, [pc, #80]	; 10a48 <abort@plt+0x258>
   109f4:	mov	r0, ip
   109f8:	bl	110e4 <error@@Base+0x140>
   109fc:	ldr	r3, [sp, #4]
   10a00:	sub	r3, r3, #1
   10a04:	cmp	r3, #1
   10a08:	bls	10a14 <abort@plt+0x224>
   10a0c:	ldr	r0, [pc, #56]	; 10a4c <abort@plt+0x25c>
   10a10:	bl	10fa4 <error@@Base>
   10a14:	ldr	r1, [r4]
   10a18:	ldr	r0, [pc, #48]	; 10a50 <abort@plt+0x260>
   10a1c:	bl	10ac8 <abort@plt+0x2d8>
   10a20:	ldr	r3, [sp, #4]
   10a24:	cmp	r3, #2
   10a28:	beq	10a34 <abort@plt+0x244>
   10a2c:	bl	1098c <abort@plt+0x19c>
   10a30:	bl	10f4c <abort@plt+0x75c>
   10a34:	ldr	r1, [r4, #4]
   10a38:	ldr	r0, [pc, #20]	; 10a54 <abort@plt+0x264>
   10a3c:	bl	10ac8 <abort@plt+0x2d8>
   10a40:	bl	10924 <abort@plt+0x134>
   10a44:	b	10a2c <abort@plt+0x23c>
   10a48:			; <UNDEFINED> instruction: 0x000113b8
   10a4c:	andeq	r1, r1, r0, ror #7
   10a50:	muleq	r2, r4, r2
   10a54:	strdeq	r2, [r2], -r4
   10a58:	push	{r4, lr}
   10a5c:	mov	r2, r0
   10a60:	mov	r1, #99	; 0x63
   10a64:	ldr	r0, [pc, #12]	; 10a78 <abort@plt+0x288>
   10a68:	bl	10730 <fgets@plt>
   10a6c:	adds	r0, r0, #0
   10a70:	movne	r0, #1
   10a74:	pop	{r4, pc}
   10a78:	andeq	r2, r2, ip, lsl #1
   10a7c:	push	{r4, r5, r6, lr}
   10a80:	mov	r4, r1
   10a84:	mov	r5, r2
   10a88:	bl	10a58 <abort@plt+0x268>
   10a8c:	cmp	r0, #0
   10a90:	popeq	{r4, r5, r6, pc}
   10a94:	mov	r2, r4
   10a98:	ldr	r1, [pc, #32]	; 10ac0 <abort@plt+0x2d0>
   10a9c:	ldr	r0, [pc, #32]	; 10ac4 <abort@plt+0x2d4>
   10aa0:	bl	107c0 <__isoc99_sscanf@plt>
   10aa4:	cmp	r0, #1
   10aa8:	ldreq	r3, [r5]
   10aac:	ldreq	r2, [r4]
   10ab0:	addeq	r3, r3, r2
   10ab4:	streq	r3, [r5]
   10ab8:	movne	r0, #0
   10abc:	pop	{r4, r5, r6, pc}
   10ac0:	andeq	r1, r1, r8, ror #8
   10ac4:	andeq	r2, r2, ip, lsl #1
   10ac8:	push	{r4, r5, r6, r7, lr}
   10acc:	sub	sp, sp, #20
   10ad0:	mov	r5, r0
   10ad4:	mov	r6, r1
   10ad8:	ldr	r1, [pc, #328]	; 10c28 <abort@plt+0x438>
   10adc:	mov	r0, r6
   10ae0:	bl	11078 <error@@Base+0xd4>
   10ae4:	mov	r4, r0
   10ae8:	bl	10a58 <abort@plt+0x268>
   10aec:	cmp	r0, #0
   10af0:	beq	10c14 <abort@plt+0x424>
   10af4:	mov	r2, #42	; 0x2a
   10af8:	ldr	r1, [pc, #300]	; 10c2c <abort@plt+0x43c>
   10afc:	ldr	r0, [pc, #300]	; 10c30 <abort@plt+0x440>
   10b00:	bl	107e4 <strncmp@plt>
   10b04:	cmp	r0, #0
   10b08:	bne	10c14 <abort@plt+0x424>
   10b0c:	mov	r0, r4
   10b10:	bl	10a58 <abort@plt+0x268>
   10b14:	cmp	r0, #0
   10b18:	beq	10c14 <abort@plt+0x424>
   10b1c:	ldr	r1, [pc, #272]	; 10c34 <abort@plt+0x444>
   10b20:	ldr	r0, [pc, #264]	; 10c30 <abort@plt+0x440>
   10b24:	bl	10700 <strcmp@plt>
   10b28:	cmp	r0, #0
   10b2c:	bne	10c14 <abort@plt+0x424>
   10b30:	mov	r2, r5
   10b34:	add	r1, sp, #8
   10b38:	mov	r0, r4
   10b3c:	bl	10a7c <abort@plt+0x28c>
   10b40:	cmp	r0, #0
   10b44:	beq	10c14 <abort@plt+0x424>
   10b48:	add	r2, r5, #4
   10b4c:	add	r1, sp, #8
   10b50:	mov	r0, r4
   10b54:	bl	10a7c <abort@plt+0x28c>
   10b58:	cmp	r0, #0
   10b5c:	beq	10c14 <abort@plt+0x424>
   10b60:	add	r2, r5, #8
   10b64:	add	r1, sp, #12
   10b68:	mov	r0, r4
   10b6c:	bl	10a7c <abort@plt+0x28c>
   10b70:	cmp	r0, #0
   10b74:	beq	10c14 <abort@plt+0x424>
   10b78:	ldr	r3, [sp, #12]
   10b7c:	cmp	r3, #0
   10b80:	ble	10c04 <abort@plt+0x414>
   10b84:	mov	r0, r4
   10b88:	bl	10a58 <abort@plt+0x268>
   10b8c:	cmp	r0, #0
   10b90:	beq	10c04 <abort@plt+0x414>
   10b94:	mov	r0, r4
   10b98:	bl	10a58 <abort@plt+0x268>
   10b9c:	cmp	r0, #0
   10ba0:	beq	10c04 <abort@plt+0x414>
   10ba4:	mov	r0, r4
   10ba8:	bl	10a58 <abort@plt+0x268>
   10bac:	cmp	r0, #0
   10bb0:	beq	10c04 <abort@plt+0x414>
   10bb4:	ldr	r7, [pc, #124]	; 10c38 <abort@plt+0x448>
   10bb8:	ldr	r6, [pc, #112]	; 10c30 <abort@plt+0x440>
   10bbc:	b	10bf4 <abort@plt+0x404>
   10bc0:	add	r3, sp, #4
   10bc4:	add	r2, sp, #8
   10bc8:	mov	r1, r7
   10bcc:	mov	r0, r6
   10bd0:	bl	107c0 <__isoc99_sscanf@plt>
   10bd4:	cmp	r0, #2
   10bd8:	bne	10c04 <abort@plt+0x414>
   10bdc:	ldr	r3, [sp, #4]
   10be0:	add	r3, r5, r3, lsl #2
   10be4:	ldr	r2, [r3, #12]
   10be8:	ldr	r1, [sp, #8]
   10bec:	add	r2, r2, r1
   10bf0:	str	r2, [r3, #12]
   10bf4:	mov	r0, r4
   10bf8:	bl	10a58 <abort@plt+0x268>
   10bfc:	cmp	r0, #0
   10c00:	bne	10bc0 <abort@plt+0x3d0>
   10c04:	mov	r0, r4
   10c08:	bl	10e70 <abort@plt+0x680>
   10c0c:	add	sp, sp, #20
   10c10:	pop	{r4, r5, r6, r7, pc}
   10c14:	ldr	r1, [pc, #32]	; 10c3c <abort@plt+0x44c>
   10c18:	cmp	r6, #0
   10c1c:	movne	r1, r6
   10c20:	ldr	r0, [pc, #24]	; 10c40 <abort@plt+0x450>
   10c24:	bl	11030 <error@@Base+0x8c>
   10c28:	andeq	r1, r1, r0, lsl #8
   10c2c:	andeq	r1, r1, r4, lsl #8
   10c30:	andeq	r2, r2, ip, lsl #1
   10c34:	andeq	r1, r1, r4, lsr r4
   10c38:	andeq	r1, r1, r4, ror #8
   10c3c:	strdeq	r1, [r1], -r8
   10c40:	andeq	r1, r1, ip, ror #8
   10c44:	push	{r4, r5, r6, r7, r8, lr}
   10c48:	mov	r5, r0
   10c4c:	mov	r0, r1
   10c50:	ldr	r1, [pc, #188]	; 10d14 <abort@plt+0x524>
   10c54:	bl	11078 <error@@Base+0xd4>
   10c58:	mov	r6, r0
   10c5c:	ldr	r3, [pc, #180]	; 10d18 <abort@plt+0x528>
   10c60:	ldr	r2, [pc, #180]	; 10d1c <abort@plt+0x52c>
   10c64:	ldr	r1, [pc, #180]	; 10d20 <abort@plt+0x530>
   10c68:	bl	107b4 <fprintf@plt>
   10c6c:	ldr	r4, [pc, #176]	; 10d24 <abort@plt+0x534>
   10c70:	ldr	r3, [pc, #176]	; 10d28 <abort@plt+0x538>
   10c74:	ldr	r2, [r5]
   10c78:	mov	r1, r4
   10c7c:	mov	r0, r6
   10c80:	bl	107b4 <fprintf@plt>
   10c84:	ldr	r3, [pc, #160]	; 10d2c <abort@plt+0x53c>
   10c88:	ldr	r2, [r5, #4]
   10c8c:	mov	r1, r4
   10c90:	mov	r0, r6
   10c94:	bl	107b4 <fprintf@plt>
   10c98:	ldr	r3, [pc, #144]	; 10d30 <abort@plt+0x540>
   10c9c:	ldr	r2, [r5, #8]
   10ca0:	mov	r1, r4
   10ca4:	mov	r0, r6
   10ca8:	bl	107b4 <fprintf@plt>
   10cac:	ldr	r3, [r5, #8]
   10cb0:	cmp	r3, #0
   10cb4:	ble	10d08 <abort@plt+0x518>
   10cb8:	mov	r3, r6
   10cbc:	mov	r2, #25
   10cc0:	mov	r1, #1
   10cc4:	ldr	r0, [pc, #104]	; 10d34 <abort@plt+0x544>
   10cc8:	bl	10760 <fwrite@plt>
   10ccc:	add	r5, r5, #12
   10cd0:	mov	r4, #1
   10cd4:	ldr	r7, [pc, #92]	; 10d38 <abort@plt+0x548>
   10cd8:	b	10ce8 <abort@plt+0x4f8>
   10cdc:	add	r4, r4, #1
   10ce0:	cmp	r4, #101	; 0x65
   10ce4:	beq	10d08 <abort@plt+0x518>
   10ce8:	ldr	r2, [r5, #4]!
   10cec:	cmp	r2, #0
   10cf0:	ble	10cdc <abort@plt+0x4ec>
   10cf4:	mov	r3, r4
   10cf8:	mov	r1, r7
   10cfc:	mov	r0, r6
   10d00:	bl	107b4 <fprintf@plt>
   10d04:	b	10cdc <abort@plt+0x4ec>
   10d08:	mov	r0, r6
   10d0c:	bl	10e70 <abort@plt+0x680>
   10d10:	pop	{r4, r5, r6, r7, r8, pc}
   10d14:	andeq	r1, r1, r0, lsl #9
   10d18:	andeq	r1, r1, r4, lsr r4
   10d1c:	andeq	r1, r1, r4, lsl #8
   10d20:	andeq	r1, r1, r4, lsl #9
   10d24:	muleq	r1, r8, r4
   10d28:	andeq	r1, r1, ip, lsl #9
   10d2c:	andeq	r1, r1, r4, lsr #9
   10d30:			; <UNDEFINED> instruction: 0x000114b0
   10d34:			; <UNDEFINED> instruction: 0x000114b8
   10d38:	ldrdeq	r1, [r1], -r4
   10d3c:	push	{r4, r5, lr}
   10d40:	sub	sp, sp, #116	; 0x74
   10d44:	mov	r5, r0
   10d48:	ldr	r3, [pc, #44]	; 10d7c <abort@plt+0x58c>
   10d4c:	ldr	r4, [r3]
   10d50:	bl	10790 <getpid@plt>
   10d54:	str	r5, [sp]
   10d58:	mov	r3, r0
   10d5c:	mov	r2, r4
   10d60:	ldr	r1, [pc, #24]	; 10d80 <abort@plt+0x590>
   10d64:	add	r0, sp, #12
   10d68:	bl	107d8 <sprintf@plt>
   10d6c:	add	r0, sp, #12
   10d70:	bl	1073c <strdup@plt>
   10d74:	add	sp, sp, #116	; 0x74
   10d78:	pop	{r4, r5, pc}
   10d7c:	andeq	r2, r2, r8, lsr r4
   10d80:	andeq	r1, r1, r0, ror #9
   10d84:	push	{r7, lr}
   10d88:	mov	r7, r0
   10d8c:	ldr	r3, [pc, #88]	; 10dec <abort@plt+0x5fc>
   10d90:	ldr	r3, [r3]
   10d94:	cmp	r3, #0
   10d98:	beq	10da0 <abort@plt+0x5b0>
   10d9c:	blx	r3
   10da0:	ldr	r3, [pc, #72]	; 10df0 <abort@plt+0x600>
   10da4:	ldrsh	r3, [r3]
   10da8:	cmp	r3, #0
   10dac:	ble	10de4 <abort@plt+0x5f4>
   10db0:	mov	r4, #1
   10db4:	ldr	r6, [pc, #52]	; 10df0 <abort@plt+0x600>
   10db8:	mov	r0, r4
   10dbc:	bl	10d3c <abort@plt+0x54c>
   10dc0:	mov	r5, r0
   10dc4:	bl	10748 <unlink@plt>
   10dc8:	mov	r0, r5
   10dcc:	bl	10724 <free@plt>
   10dd0:	add	r4, r4, #1
   10dd4:	sxth	r4, r4
   10dd8:	ldrsh	r3, [r6]
   10ddc:	cmp	r3, r4
   10de0:	bge	10db8 <abort@plt+0x5c8>
   10de4:	mov	r0, r7
   10de8:	bl	1079c <exit@plt>
   10dec:	andeq	r2, r2, ip, lsr r4
   10df0:	strdeq	r2, [r2], -r0
   10df4:	push	{r4, lr}
   10df8:	ldrb	r3, [r0]
   10dfc:	cmp	r3, #0
   10e00:	beq	10e4c <abort@plt+0x65c>
   10e04:	ldrb	r2, [r1]
   10e08:	cmp	r2, r3
   10e0c:	bne	10e68 <abort@plt+0x678>
   10e10:	mov	ip, r1
   10e14:	mov	r2, #0
   10e18:	add	r2, r2, #1
   10e1c:	mov	r4, r2
   10e20:	ldrb	r3, [r0, #1]!
   10e24:	cmp	r3, #0
   10e28:	beq	10e50 <abort@plt+0x660>
   10e2c:	ldrb	lr, [ip, #1]!
   10e30:	cmp	lr, r3
   10e34:	beq	10e18 <abort@plt+0x628>
   10e38:	ldrb	r2, [r1, r4]
   10e3c:	cmp	r2, r3
   10e40:	mvnhi	r0, #0
   10e44:	movls	r0, #1
   10e48:	pop	{r4, pc}
   10e4c:	mov	r4, #0
   10e50:	ldrb	r3, [r1, r4]
   10e54:	cmp	r3, #0
   10e58:	movne	r3, #0
   10e5c:	bne	10e38 <abort@plt+0x648>
   10e60:	mov	r0, #0
   10e64:	pop	{r4, pc}
   10e68:	mov	r4, #0
   10e6c:	b	10e38 <abort@plt+0x648>
   10e70:	ldr	r3, [pc, #36]	; 10e9c <abort@plt+0x6ac>
   10e74:	ldr	r3, [r3]
   10e78:	cmp	r3, r0
   10e7c:	bxeq	lr
   10e80:	ldr	r3, [pc, #24]	; 10ea0 <abort@plt+0x6b0>
   10e84:	ldr	r3, [r3]
   10e88:	cmp	r0, r3
   10e8c:	bxeq	lr
   10e90:	push	{r4, lr}
   10e94:	bl	107cc <fclose@plt>
   10e98:	pop	{r4, pc}
   10e9c:	andeq	r2, r2, r0, lsl #1
   10ea0:	andeq	r2, r2, r4, lsl #1
   10ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea8:	sub	sp, sp, #92	; 0x5c
   10eac:	mov	r2, sp
   10eb0:	mov	r1, r0
   10eb4:	mov	r0, #3
   10eb8:	bl	10754 <__xstat@plt>
   10ebc:	clz	r0, r0
   10ec0:	lsr	r0, r0, #5
   10ec4:	add	sp, sp, #92	; 0x5c
   10ec8:	pop	{pc}		; (ldr pc, [sp], #4)
   10ecc:	push	{r4, lr}
   10ed0:	ldr	r3, [pc, #32]	; 10ef8 <abort@plt+0x708>
   10ed4:	ldrh	r0, [r3]
   10ed8:	add	r0, r0, #1
   10edc:	sxth	r0, r0
   10ee0:	strh	r0, [r3]
   10ee4:	bl	10d3c <abort@plt+0x54c>
   10ee8:	mov	r4, r0
   10eec:	bl	10748 <unlink@plt>
   10ef0:	mov	r0, r4
   10ef4:	pop	{r4, pc}
   10ef8:	strdeq	r2, [r2], -r0
   10efc:	push	{r4, lr}
   10f00:	mov	r4, r0
   10f04:	bl	107a8 <strlen@plt>
   10f08:	sub	r0, r0, #1
   10f0c:	sxth	r0, r0
   10f10:	cmp	r0, #0
   10f14:	blt	10f40 <abort@plt+0x750>
   10f18:	ldrb	r3, [r4, r0]
   10f1c:	cmp	r3, #47	; 0x2f
   10f20:	beq	10f40 <abort@plt+0x750>
   10f24:	sub	r0, r0, #1
   10f28:	sxth	r0, r0
   10f2c:	cmp	r0, #0
   10f30:	blt	10f40 <abort@plt+0x750>
   10f34:	ldrb	r3, [r4, r0]
   10f38:	cmp	r3, #47	; 0x2f
   10f3c:	bne	10f24 <abort@plt+0x734>
   10f40:	add	r0, r0, #1
   10f44:	add	r0, r4, r0
   10f48:	pop	{r4, pc}
   10f4c:	push	{r4, lr}
   10f50:	mov	r0, #0
   10f54:	bl	10d84 <abort@plt+0x594>
   10f58:	push	{r4, lr}
   10f5c:	ldr	r2, [pc, #48]	; 10f94 <abort@plt+0x7a4>
   10f60:	ldr	r2, [r2]
   10f64:	cmp	r2, #0
   10f68:	beq	10f74 <abort@plt+0x784>
   10f6c:	blx	r2
   10f70:	bl	10f4c <abort@plt+0x75c>
   10f74:	mov	r3, r0
   10f78:	ldr	r2, [pc, #24]	; 10f98 <abort@plt+0x7a8>
   10f7c:	ldr	r2, [r2]
   10f80:	ldr	r1, [pc, #20]	; 10f9c <abort@plt+0x7ac>
   10f84:	ldr	r0, [pc, #20]	; 10fa0 <abort@plt+0x7b0>
   10f88:	ldr	r0, [r0]
   10f8c:	bl	107b4 <fprintf@plt>
   10f90:	b	10f70 <abort@plt+0x780>
   10f94:	andeq	r2, r2, r4, lsr r4
   10f98:	andeq	r2, r2, r8, lsr r4
   10f9c:	strdeq	r1, [r1], -r0
   10fa0:	andeq	r2, r2, r8, ror r0

00010fa4 <error@@Base>:
   10fa4:	push	{r4, lr}
   10fa8:	mov	r3, r0
   10fac:	ldr	r2, [pc, #28]	; 10fd0 <error@@Base+0x2c>
   10fb0:	ldr	r2, [r2]
   10fb4:	ldr	r1, [pc, #24]	; 10fd4 <error@@Base+0x30>
   10fb8:	ldr	r0, [pc, #24]	; 10fd8 <error@@Base+0x34>
   10fbc:	ldr	r0, [r0]
   10fc0:	bl	107b4 <fprintf@plt>
   10fc4:	ldr	r3, [pc, #16]	; 10fdc <error@@Base+0x38>
   10fc8:	ldr	r0, [r3]
   10fcc:	bl	10d84 <abort@plt+0x594>
   10fd0:	andeq	r2, r2, r8, lsr r4
   10fd4:	andeq	r1, r1, r0, lsl #10
   10fd8:	andeq	r2, r2, r8, ror r0
   10fdc:	andeq	r2, r2, r0, ror r0
   10fe0:	push	{r4, lr}
   10fe4:	bl	106f4 <calloc@plt>
   10fe8:	cmp	r0, #0
   10fec:	popne	{r4, pc}
   10ff0:	ldr	r0, [pc]	; 10ff8 <error@@Base+0x54>
   10ff4:	bl	10fa4 <error@@Base>
   10ff8:	andeq	r1, r1, r8, lsl #10
   10ffc:	ldr	r3, [pc, #36]	; 11028 <error@@Base+0x84>
   11000:	ldrb	r3, [r3, #2]
   11004:	cmp	r3, #0
   11008:	beq	11010 <error@@Base+0x6c>
   1100c:	bx	lr
   11010:	push	{r4, lr}
   11014:	mov	r2, #1
   11018:	ldr	r3, [pc, #8]	; 11028 <error@@Base+0x84>
   1101c:	strb	r2, [r3, #2]
   11020:	ldr	r0, [pc, #4]	; 1102c <error@@Base+0x88>
   11024:	bl	10fa4 <error@@Base>
   11028:	strdeq	r2, [r2], -r0
   1102c:	andeq	r1, r1, r4, lsr #10
   11030:	push	{lr}		; (str lr, [sp, #-4]!)
   11034:	sub	sp, sp, #12
   11038:	ldr	r3, [pc, #40]	; 11068 <error@@Base+0xc4>
   1103c:	ldr	r2, [r3]
   11040:	ldr	r3, [pc, #36]	; 1106c <error@@Base+0xc8>
   11044:	ldr	ip, [r3]
   11048:	str	r1, [sp]
   1104c:	mov	r3, r0
   11050:	ldr	r1, [pc, #24]	; 11070 <error@@Base+0xcc>
   11054:	mov	r0, ip
   11058:	bl	107b4 <fprintf@plt>
   1105c:	ldr	r3, [pc, #16]	; 11074 <error@@Base+0xd0>
   11060:	ldr	r0, [r3]
   11064:	bl	10d84 <abort@plt+0x594>
   11068:	andeq	r2, r2, r8, lsr r4
   1106c:	andeq	r2, r2, r8, ror r0
   11070:	andeq	r1, r1, r4, lsr r5
   11074:	andeq	r2, r2, r0, ror r0
   11078:	push	{r4, r5, r6, lr}
   1107c:	subs	r5, r0, #0
   11080:	beq	110b0 <error@@Base+0x10c>
   11084:	mov	r4, r1
   11088:	mov	r0, r5
   1108c:	bl	10718 <fopen@plt>
   11090:	cmp	r0, #0
   11094:	popne	{r4, r5, r6, pc}
   11098:	ldrb	r3, [r4]
   1109c:	cmp	r3, #119	; 0x77
   110a0:	beq	110c8 <error@@Base+0x124>
   110a4:	mov	r1, r5
   110a8:	ldr	r0, [pc, #36]	; 110d4 <error@@Base+0x130>
   110ac:	bl	11030 <error@@Base+0x8c>
   110b0:	ldrb	r3, [r1]
   110b4:	cmp	r3, #114	; 0x72
   110b8:	ldreq	r3, [pc, #24]	; 110d8 <error@@Base+0x134>
   110bc:	ldrne	r3, [pc, #24]	; 110dc <error@@Base+0x138>
   110c0:	ldr	r0, [r3]
   110c4:	pop	{r4, r5, r6, pc}
   110c8:	mov	r1, r5
   110cc:	ldr	r0, [pc, #12]	; 110e0 <error@@Base+0x13c>
   110d0:	bl	11030 <error@@Base+0x8c>
   110d4:	andeq	r1, r1, ip, asr r5
   110d8:	andeq	r2, r2, r0, lsl #1
   110dc:	andeq	r2, r2, r4, lsl #1
   110e0:	andeq	r1, r1, r4, asr #10
   110e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110e8:	sub	sp, sp, #20
   110ec:	mov	r5, r0
   110f0:	str	r0, [sp, #8]
   110f4:	mov	sl, r1
   110f8:	str	r2, [sp, #12]
   110fc:	mov	r6, r3
   11100:	ldr	r0, [r1]
   11104:	bl	10efc <abort@plt+0x70c>
   11108:	ldr	r3, [pc, #468]	; 112e4 <error@@Base+0x340>
   1110c:	str	r0, [r3]
   11110:	ldr	r4, [pc, #464]	; 112e8 <error@@Base+0x344>
   11114:	mov	r1, r4
   11118:	mov	r0, #2
   1111c:	bl	10778 <__sysv_signal@plt>
   11120:	mov	r1, r4
   11124:	mov	r0, #15
   11128:	bl	10778 <__sysv_signal@plt>
   1112c:	ldr	r8, [r5]
   11130:	cmp	r8, #1
   11134:	beq	11154 <error@@Base+0x1b0>
   11138:	movle	r7, #0
   1113c:	ble	11168 <error@@Base+0x1c4>
   11140:	mov	r7, #0
   11144:	mov	r3, #1
   11148:	str	r3, [sp, #4]
   1114c:	mov	r4, r3
   11150:	b	11200 <error@@Base+0x25c>
   11154:	ldr	r3, [pc, #400]	; 112ec <error@@Base+0x348>
   11158:	ldrb	r3, [r3, #4]
   1115c:	cmp	r3, #0
   11160:	moveq	r7, #0
   11164:	bne	11178 <error@@Base+0x1d4>
   11168:	ldr	r3, [sp, #8]
   1116c:	str	r7, [r3]
   11170:	add	sp, sp, #20
   11174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11178:	ldr	r0, [sp, #12]
   1117c:	bl	10f58 <abort@plt+0x768>
   11180:	ldr	r0, [sp, #12]
   11184:	bl	10f58 <abort@plt+0x768>
   11188:	mov	r1, r6
   1118c:	b	11294 <error@@Base+0x2f0>
   11190:	ldr	r3, [r1, #8]
   11194:	cmp	r3, #0
   11198:	beq	111c0 <error@@Base+0x21c>
   1119c:	ldrb	r2, [r5, #2]
   111a0:	cmp	r2, #0
   111a4:	bne	111c0 <error@@Base+0x21c>
   111a8:	ldrb	r2, [r3]
   111ac:	cmp	r2, #0
   111b0:	bne	111cc <error@@Base+0x228>
   111b4:	mov	r2, #1
   111b8:	strb	r2, [r3]
   111bc:	b	111e4 <error@@Base+0x240>
   111c0:	mov	r1, r5
   111c4:	ldr	r0, [pc, #292]	; 112f0 <error@@Base+0x34c>
   111c8:	bl	11030 <error@@Base+0x8c>
   111cc:	mov	r1, r5
   111d0:	ldr	r0, [pc, #284]	; 112f4 <error@@Base+0x350>
   111d4:	bl	11030 <error@@Base+0x8c>
   111d8:	add	r3, r7, #1
   111dc:	str	r5, [sl, r7, lsl #2]
   111e0:	sxth	r7, r3
   111e4:	add	r4, r4, #1
   111e8:	sxth	r4, r4
   111ec:	str	r4, [sp, #4]
   111f0:	ldr	r3, [sp, #8]
   111f4:	ldr	r8, [r3]
   111f8:	cmp	r4, r8
   111fc:	bge	11168 <error@@Base+0x1c4>
   11200:	lsl	fp, r4, #2
   11204:	ldr	r5, [sl, r4, lsl #2]
   11208:	ldrb	r3, [r5]
   1120c:	cmp	r3, #45	; 0x2d
   11210:	bne	111d8 <error@@Base+0x234>
   11214:	ldrb	r9, [r5, #1]
   11218:	cmp	r9, #0
   1121c:	beq	111d8 <error@@Base+0x234>
   11220:	mov	r0, r5
   11224:	bl	107a8 <strlen@plt>
   11228:	mov	r2, r0
   1122c:	mov	r1, r5
   11230:	ldr	r0, [pc, #192]	; 112f8 <error@@Base+0x354>
   11234:	bl	107e4 <strncmp@plt>
   11238:	cmp	r0, #0
   1123c:	beq	11180 <error@@Base+0x1dc>
   11240:	ldr	r3, [sp, #4]
   11244:	add	r3, r3, #1
   11248:	cmp	r3, r8
   1124c:	addlt	r3, sl, fp
   11250:	ldrlt	r0, [r3, #4]
   11254:	movge	r0, #0
   11258:	cmp	r6, #0
   1125c:	beq	111c0 <error@@Base+0x21c>
   11260:	ldrb	r2, [r6]
   11264:	cmp	r9, r2
   11268:	cmpne	r2, #0
   1126c:	beq	11188 <error@@Base+0x1e4>
   11270:	mov	r3, #0
   11274:	add	r3, r3, #1
   11278:	sxth	r3, r3
   1127c:	add	r2, r3, r3, lsl #1
   11280:	add	r1, r6, r2, lsl #2
   11284:	ldrb	r2, [r6, r2, lsl #2]
   11288:	cmp	r9, r2
   1128c:	cmpne	r2, #0
   11290:	bne	11274 <error@@Base+0x2d0>
   11294:	cmp	r2, #0
   11298:	beq	111c0 <error@@Base+0x21c>
   1129c:	ldr	r3, [r1, #4]
   112a0:	cmp	r3, #0
   112a4:	beq	11190 <error@@Base+0x1ec>
   112a8:	ldrb	r2, [r5, #2]
   112ac:	cmp	r2, #0
   112b0:	cmpeq	r0, #0
   112b4:	beq	11190 <error@@Base+0x1ec>
   112b8:	ldr	r1, [r3]
   112bc:	cmp	r1, #0
   112c0:	bne	111cc <error@@Base+0x228>
   112c4:	cmp	r2, #0
   112c8:	addne	r0, r5, #2
   112cc:	str	r0, [r3]
   112d0:	ldrb	r3, [r5, #2]
   112d4:	cmp	r3, #0
   112d8:	addeq	r4, r4, #1
   112dc:	sxtheq	r4, r4
   112e0:	b	111e4 <error@@Base+0x240>
   112e4:	andeq	r2, r2, r8, lsr r4
   112e8:	strdeq	r0, [r1], -ip
   112ec:	andeq	r2, r2, r0, ror r0
   112f0:	andeq	r1, r1, r8, ror r5
   112f4:	andeq	r1, r1, r8, lsl #11
   112f8:	andeq	r1, r1, r0, ror r5
   112fc:	push	{lr}		; (str lr, [sp, #-4]!)
   11300:	sub	sp, sp, #12
   11304:	ldr	r3, [pc, #36]	; 11330 <error@@Base+0x38c>
   11308:	ldr	r2, [r3]
   1130c:	ldr	r3, [pc, #32]	; 11334 <error@@Base+0x390>
   11310:	ldr	ip, [r3]
   11314:	str	r1, [sp]
   11318:	mov	r3, r0
   1131c:	ldr	r1, [pc, #20]	; 11338 <error@@Base+0x394>
   11320:	mov	r0, ip
   11324:	bl	107b4 <fprintf@plt>
   11328:	add	sp, sp, #12
   1132c:	pop	{pc}		; (ldr pc, [sp], #4)
   11330:	andeq	r2, r2, r8, lsr r4
   11334:	andeq	r2, r2, r8, ror r0
   11338:	andeq	r1, r1, r4, lsr r5
   1133c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11340:	mov	r7, r0
   11344:	ldr	r6, [pc, #72]	; 11394 <error@@Base+0x3f0>
   11348:	ldr	r5, [pc, #72]	; 11398 <error@@Base+0x3f4>
   1134c:	add	r6, pc, r6
   11350:	add	r5, pc, r5
   11354:	sub	r6, r6, r5
   11358:	mov	r8, r1
   1135c:	mov	r9, r2
   11360:	bl	106d4 <calloc@plt-0x20>
   11364:	asrs	r6, r6, #2
   11368:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1136c:	mov	r4, #0
   11370:	add	r4, r4, #1
   11374:	ldr	r3, [r5], #4
   11378:	mov	r2, r9
   1137c:	mov	r1, r8
   11380:	mov	r0, r7
   11384:	blx	r3
   11388:	cmp	r6, r4
   1138c:	bne	11370 <error@@Base+0x3cc>
   11390:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11394:	andeq	r0, r1, ip, lsr #23
   11398:	andeq	r0, r1, r4, lsr #23
   1139c:	bx	lr

Disassembly of section .fini:

000113a0 <.fini>:
   113a0:	push	{r3, lr}
   113a4:	pop	{r3, pc}
