
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf32-littlearm


Disassembly of section .init:

000148d8 <.init>:
   148d8:	push	{r3, lr}
   148dc:	bl	14afc <_start@@Base+0x3c>
   148e0:	pop	{r3, pc}

Disassembly of section .plt:

000148e4 <calloc@plt-0x14>:
   148e4:	push	{lr}		; (str lr, [sp, #-4]!)
   148e8:	ldr	lr, [pc, #4]	; 148f4 <calloc@plt-0x4>
   148ec:	add	lr, pc, lr
   148f0:	ldr	pc, [lr, #8]!
   148f4:	andeq	sp, r4, ip, lsl #14

000148f8 <calloc@plt>:
   148f8:	add	ip, pc, #0, 12
   148fc:	add	ip, ip, #315392	; 0x4d000
   14900:	ldr	pc, [ip, #1804]!	; 0x70c

00014904 <raise@plt>:
   14904:	add	ip, pc, #0, 12
   14908:	add	ip, ip, #315392	; 0x4d000
   1490c:	ldr	pc, [ip, #1796]!	; 0x704

00014910 <strcmp@plt>:
   14910:	add	ip, pc, #0, 12
   14914:	add	ip, ip, #315392	; 0x4d000
   14918:	ldr	pc, [ip, #1788]!	; 0x6fc

0001491c <fopen@plt>:
   1491c:	add	ip, pc, #0, 12
   14920:	add	ip, ip, #315392	; 0x4d000
   14924:	ldr	pc, [ip, #1780]!	; 0x6f4

00014928 <free@plt>:
   14928:	add	ip, pc, #0, 12
   1492c:	add	ip, ip, #315392	; 0x4d000
   14930:	ldr	pc, [ip, #1772]!	; 0x6ec

00014934 <memcpy@plt>:
   14934:	add	ip, pc, #0, 12
   14938:	add	ip, ip, #315392	; 0x4d000
   1493c:	ldr	pc, [ip, #1764]!	; 0x6e4

00014940 <ftell@plt>:
   14940:	add	ip, pc, #0, 12
   14944:	add	ip, ip, #315392	; 0x4d000
   14948:	ldr	pc, [ip, #1756]!	; 0x6dc

0001494c <memcmp@plt>:
   1494c:	add	ip, pc, #0, 12
   14950:	add	ip, ip, #315392	; 0x4d000
   14954:	ldr	pc, [ip, #1748]!	; 0x6d4

00014958 <fputc_unlocked@plt>:
   14958:	add	ip, pc, #0, 12
   1495c:	add	ip, ip, #315392	; 0x4d000
   14960:	ldr	pc, [ip, #1740]!	; 0x6cc

00014964 <rewind@plt>:
   14964:	add	ip, pc, #0, 12
   14968:	add	ip, ip, #315392	; 0x4d000
   1496c:	ldr	pc, [ip, #1732]!	; 0x6c4

00014970 <realloc@plt>:
   14970:	add	ip, pc, #0, 12
   14974:	add	ip, ip, #315392	; 0x4d000
   14978:	ldr	pc, [ip, #1724]!	; 0x6bc

0001497c <fwrite@plt>:
   1497c:	add	ip, pc, #0, 12
   14980:	add	ip, ip, #315392	; 0x4d000
   14984:	ldr	pc, [ip, #1716]!	; 0x6b4

00014988 <puts@plt>:
   14988:	add	ip, pc, #0, 12
   1498c:	add	ip, ip, #315392	; 0x4d000
   14990:	ldr	pc, [ip, #1708]!	; 0x6ac

00014994 <malloc@plt>:
   14994:	add	ip, pc, #0, 12
   14998:	add	ip, ip, #315392	; 0x4d000
   1499c:	ldr	pc, [ip, #1700]!	; 0x6a4

000149a0 <__libc_start_main@plt>:
   149a0:	add	ip, pc, #0, 12
   149a4:	add	ip, ip, #315392	; 0x4d000
   149a8:	ldr	pc, [ip, #1692]!	; 0x69c

000149ac <__ctype_toupper_loc@plt>:
   149ac:	add	ip, pc, #0, 12
   149b0:	add	ip, ip, #315392	; 0x4d000
   149b4:	ldr	pc, [ip, #1684]!	; 0x694

000149b8 <__gmon_start__@plt>:
   149b8:	add	ip, pc, #0, 12
   149bc:	add	ip, ip, #315392	; 0x4d000
   149c0:	ldr	pc, [ip, #1676]!	; 0x68c

000149c4 <exit@plt>:
   149c4:	add	ip, pc, #0, 12
   149c8:	add	ip, ip, #315392	; 0x4d000
   149cc:	ldr	pc, [ip, #1668]!	; 0x684

000149d0 <bcmp@plt>:
   149d0:	add	ip, pc, #0, 12
   149d4:	add	ip, ip, #315392	; 0x4d000
   149d8:	ldr	pc, [ip, #1660]!	; 0x67c

000149dc <strlen@plt>:
   149dc:	add	ip, pc, #0, 12
   149e0:	add	ip, ip, #315392	; 0x4d000
   149e4:	ldr	pc, [ip, #1652]!	; 0x674

000149e8 <strchr@plt>:
   149e8:	add	ip, pc, #0, 12
   149ec:	add	ip, ip, #315392	; 0x4d000
   149f0:	ldr	pc, [ip, #1644]!	; 0x66c

000149f4 <fprintf@plt>:
   149f4:	add	ip, pc, #0, 12
   149f8:	add	ip, ip, #315392	; 0x4d000
   149fc:	ldr	pc, [ip, #1636]!	; 0x664

00014a00 <posix_memalign@plt>:
   14a00:	add	ip, pc, #0, 12
   14a04:	add	ip, ip, #315392	; 0x4d000
   14a08:	ldr	pc, [ip, #1628]!	; 0x65c

00014a0c <memset@plt>:
   14a0c:	add	ip, pc, #0, 12
   14a10:	add	ip, ip, #315392	; 0x4d000
   14a14:	ldr	pc, [ip, #1620]!	; 0x654

00014a18 <strncpy@plt>:
   14a18:	add	ip, pc, #0, 12
   14a1c:	add	ip, ip, #315392	; 0x4d000
   14a20:	ldr	pc, [ip, #1612]!	; 0x64c

00014a24 <strtod@plt>:
   14a24:	add	ip, pc, #0, 12
   14a28:	add	ip, ip, #315392	; 0x4d000
   14a2c:	ldr	pc, [ip, #1604]!	; 0x644

00014a30 <memchr@plt>:
   14a30:	add	ip, pc, #0, 12
   14a34:	add	ip, ip, #315392	; 0x4d000
   14a38:	ldr	pc, [ip, #1596]!	; 0x63c

00014a3c <fclose@plt>:
   14a3c:	add	ip, pc, #0, 12
   14a40:	add	ip, ip, #315392	; 0x4d000
   14a44:	ldr	pc, [ip, #1588]!	; 0x634

00014a48 <vfprintf@plt>:
   14a48:	add	ip, pc, #0, 12
   14a4c:	add	ip, ip, #315392	; 0x4d000
   14a50:	ldr	pc, [ip, #1580]!	; 0x62c

00014a54 <fputc@plt>:
   14a54:	add	ip, pc, #0, 12
   14a58:	add	ip, ip, #315392	; 0x4d000
   14a5c:	ldr	pc, [ip, #1572]!	; 0x624

00014a60 <sprintf@plt>:
   14a60:	add	ip, pc, #0, 12
   14a64:	add	ip, ip, #315392	; 0x4d000
   14a68:	ldr	pc, [ip, #1564]!	; 0x61c

00014a6c <vsnprintf@plt>:
   14a6c:	add	ip, pc, #0, 12
   14a70:	add	ip, ip, #315392	; 0x4d000
   14a74:	ldr	pc, [ip, #1556]!	; 0x614

00014a78 <qsort@plt>:
   14a78:	add	ip, pc, #0, 12
   14a7c:	add	ip, ip, #315392	; 0x4d000
   14a80:	ldr	pc, [ip, #1548]!	; 0x60c

00014a84 <fread_unlocked@plt>:
   14a84:	add	ip, pc, #0, 12
   14a88:	add	ip, ip, #315392	; 0x4d000
   14a8c:	ldr	pc, [ip, #1540]!	; 0x604

00014a90 <fseek@plt>:
   14a90:	add	ip, pc, #0, 12
   14a94:	add	ip, ip, #315392	; 0x4d000
   14a98:	ldr	pc, [ip, #1532]!	; 0x5fc

00014a9c <strncmp@plt>:
   14a9c:	add	ip, pc, #0, 12
   14aa0:	add	ip, ip, #315392	; 0x4d000
   14aa4:	ldr	pc, [ip, #1524]!	; 0x5f4

00014aa8 <abort@plt>:
   14aa8:	add	ip, pc, #0, 12
   14aac:	add	ip, ip, #315392	; 0x4d000
   14ab0:	ldr	pc, [ip, #1516]!	; 0x5ec

00014ab4 <__assert_fail@plt>:
   14ab4:	add	ip, pc, #0, 12
   14ab8:	add	ip, ip, #315392	; 0x4d000
   14abc:	ldr	pc, [ip, #1508]!	; 0x5e4

Disassembly of section .text:

00014ac0 <_start@@Base>:
   14ac0:	mov	fp, #0
   14ac4:	mov	lr, #0
   14ac8:	pop	{r1}		; (ldr r1, [sp], #4)
   14acc:	mov	r2, sp
   14ad0:	push	{r2}		; (str r2, [sp, #-4]!)
   14ad4:	push	{r0}		; (str r0, [sp, #-4]!)
   14ad8:	ldr	ip, [pc, #16]	; 14af0 <_start@@Base+0x30>
   14adc:	push	{ip}		; (str ip, [sp, #-4]!)
   14ae0:	ldr	r0, [pc, #12]	; 14af4 <_start@@Base+0x34>
   14ae4:	ldr	r3, [pc, #12]	; 14af8 <_start@@Base+0x38>
   14ae8:	bl	149a0 <__libc_start_main@plt>
   14aec:	bl	14aa8 <abort@plt>
   14af0:	andeq	r4, r3, r8, ror ip
   14af4:	andeq	r5, r1, r0, ror #9
   14af8:	andeq	r4, r3, r8, lsl ip
   14afc:	ldr	r3, [pc, #20]	; 14b18 <_start@@Base+0x58>
   14b00:	ldr	r2, [pc, #20]	; 14b1c <_start@@Base+0x5c>
   14b04:	add	r3, pc, r3
   14b08:	ldr	r2, [r3, r2]
   14b0c:	cmp	r2, #0
   14b10:	bxeq	lr
   14b14:	b	149b8 <__gmon_start__@plt>
   14b18:	strdeq	sp, [r4], -r4
   14b1c:	andeq	r0, r0, r4, lsr #1
   14b20:	ldr	r0, [pc, #24]	; 14b40 <_start@@Base+0x80>
   14b24:	ldr	r3, [pc, #24]	; 14b44 <_start@@Base+0x84>
   14b28:	cmp	r3, r0
   14b2c:	bxeq	lr
   14b30:	ldr	r3, [pc, #16]	; 14b48 <_start@@Base+0x88>
   14b34:	cmp	r3, #0
   14b38:	bxeq	lr
   14b3c:	bx	r3
   14b40:	strheq	r2, [r6], -r0
   14b44:	strheq	r2, [r6], -r0
   14b48:	andeq	r0, r0, r0
   14b4c:	ldr	r0, [pc, #36]	; 14b78 <_start@@Base+0xb8>
   14b50:	ldr	r1, [pc, #36]	; 14b7c <_start@@Base+0xbc>
   14b54:	sub	r1, r1, r0
   14b58:	asr	r1, r1, #2
   14b5c:	add	r1, r1, r1, lsr #31
   14b60:	asrs	r1, r1, #1
   14b64:	bxeq	lr
   14b68:	ldr	r3, [pc, #16]	; 14b80 <_start@@Base+0xc0>
   14b6c:	cmp	r3, #0
   14b70:	bxeq	lr
   14b74:	bx	r3
   14b78:	strheq	r2, [r6], -r0
   14b7c:	strheq	r2, [r6], -r0
   14b80:	andeq	r0, r0, r0
   14b84:	push	{r4, lr}
   14b88:	ldr	r4, [pc, #24]	; 14ba8 <_start@@Base+0xe8>
   14b8c:	ldrb	r3, [r4]
   14b90:	cmp	r3, #0
   14b94:	popne	{r4, pc}
   14b98:	bl	14b20 <_start@@Base+0x60>
   14b9c:	mov	r3, #1
   14ba0:	strb	r3, [r4]
   14ba4:	pop	{r4, pc}
   14ba8:	strheq	r2, [r6], -r8
   14bac:	b	14b4c <_start@@Base+0x8c>

00014bb0 <usage@@Base>:
   14bb0:	push	{r4, sl, fp, lr}
   14bb4:	add	fp, sp, #8
   14bb8:	mov	r4, r0
   14bbc:	movw	r1, #55346	; 0xd832
   14bc0:	movt	r1, #4
   14bc4:	movw	r2, #19592	; 0x4c88
   14bc8:	movt	r2, #3
   14bcc:	bl	149f4 <fprintf@plt>
   14bd0:	movw	r1, #19646	; 0x4cbe
   14bd4:	movt	r1, #3
   14bd8:	movw	r2, #19659	; 0x4ccb
   14bdc:	movt	r2, #3
   14be0:	mov	r0, r4
   14be4:	bl	149f4 <fprintf@plt>
   14be8:	movw	r0, #19665	; 0x4cd1
   14bec:	movt	r0, #3
   14bf0:	mov	r1, #35	; 0x23
   14bf4:	mov	r2, #1
   14bf8:	mov	r3, r4
   14bfc:	bl	1497c <fwrite@plt>
   14c00:	movw	r0, #19701	; 0x4cf5
   14c04:	movt	r0, #3
   14c08:	movw	r1, #1409	; 0x581
   14c0c:	mov	r2, #1
   14c10:	mov	r3, r4
   14c14:	pop	{r4, sl, fp, lr}
   14c18:	b	1497c <fwrite@plt>

00014c1c <help@@Base>:
   14c1c:	push	{r4, sl, fp, lr}
   14c20:	add	fp, sp, #8
   14c24:	mov	r4, r0
   14c28:	bl	14bb0 <usage@@Base>
   14c2c:	movw	r0, #21111	; 0x5277
   14c30:	movt	r0, #3
   14c34:	movw	r1, #3140	; 0xc44
   14c38:	mov	r2, #1
   14c3c:	mov	r3, r4
   14c40:	pop	{r4, sl, fp, lr}
   14c44:	b	1497c <fwrite@plt>

00014c48 <parse_bool_arg@@Base>:
   14c48:	push	{r4, r5, fp, lr}
   14c4c:	add	fp, sp, #8
   14c50:	mov	r4, r0
   14c54:	movw	r1, #30217	; 0x7609
   14c58:	movt	r1, #4
   14c5c:	bl	14910 <strcmp@plt>
   14c60:	mov	r5, #0
   14c64:	cmp	r0, #0
   14c68:	beq	14cb8 <parse_bool_arg@@Base+0x70>
   14c6c:	movw	r1, #24252	; 0x5ebc
   14c70:	movt	r1, #3
   14c74:	mov	r0, r4
   14c78:	bl	14910 <strcmp@plt>
   14c7c:	cmp	r0, #0
   14c80:	beq	14cb8 <parse_bool_arg@@Base+0x70>
   14c84:	movw	r1, #3010	; 0xbc2
   14c88:	movt	r1, #5
   14c8c:	mov	r0, r4
   14c90:	bl	14910 <strcmp@plt>
   14c94:	mov	r5, #1
   14c98:	cmp	r0, #0
   14c9c:	beq	14cb8 <parse_bool_arg@@Base+0x70>
   14ca0:	movw	r1, #24255	; 0x5ebf
   14ca4:	movt	r1, #3
   14ca8:	mov	r0, r4
   14cac:	bl	14910 <strcmp@plt>
   14cb0:	cmp	r0, #0
   14cb4:	bne	14cc0 <parse_bool_arg@@Base+0x78>
   14cb8:	mov	r0, r5
   14cbc:	pop	{r4, r5, fp, pc}
   14cc0:	movw	r0, #8368	; 0x20b0
   14cc4:	movt	r0, #6
   14cc8:	ldr	r0, [r0]
   14ccc:	movw	r1, #24259	; 0x5ec3
   14cd0:	movt	r1, #3
   14cd4:	mov	r2, r4
   14cd8:	bl	149f4 <fprintf@plt>
   14cdc:	mvn	r5, #0
   14ce0:	mov	r0, r5
   14ce4:	pop	{r4, r5, fp, pc}

00014ce8 <match_long_arg@@Base>:
   14ce8:	push	{r4, r5, fp, lr}
   14cec:	add	fp, sp, #8
   14cf0:	mov	r4, r2
   14cf4:	mov	r5, r0
   14cf8:	bl	14a9c <strncmp@plt>
   14cfc:	mov	r1, r0
   14d00:	mov	r0, #0
   14d04:	cmp	r1, #0
   14d08:	popne	{r4, r5, fp, pc}
   14d0c:	mov	r0, r5
   14d10:	bl	149dc <strlen@plt>
   14d14:	sub	r0, r0, r4
   14d18:	clz	r0, r0
   14d1c:	lsr	r0, r0, #5
   14d20:	pop	{r4, r5, fp, pc}

00014d24 <set_opt@@Base>:
   14d24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d28:	add	fp, sp, #24
   14d2c:	mov	r9, r2
   14d30:	mov	r6, r1
   14d34:	mov	r8, r0
   14d38:	mov	r0, r1
   14d3c:	bl	149dc <strlen@plt>
   14d40:	mov	r4, r0
   14d44:	mov	r0, r6
   14d48:	mov	r1, #61	; 0x3d
   14d4c:	bl	149e8 <strchr@plt>
   14d50:	cmp	r0, #0
   14d54:	subne	r4, r0, r6
   14d58:	addne	r9, r0, #1
   14d5c:	ldrb	r7, [r6]
   14d60:	cmp	r7, #104	; 0x68
   14d64:	beq	15204 <set_opt@@Base+0x4e0>
   14d68:	mov	r5, r0
   14d6c:	movw	r0, #24324	; 0x5f04
   14d70:	movt	r0, #3
   14d74:	mov	r1, r6
   14d78:	bl	14910 <strcmp@plt>
   14d7c:	cmp	r0, #0
   14d80:	beq	15204 <set_opt@@Base+0x4e0>
   14d84:	movw	r0, #24330	; 0x5f0a
   14d88:	movt	r0, #3
   14d8c:	mov	r1, r6
   14d90:	bl	14910 <strcmp@plt>
   14d94:	cmp	r0, #0
   14d98:	beq	1521c <set_opt@@Base+0x4f8>
   14d9c:	movw	r0, #25280	; 0x62c0
   14da0:	movt	r0, #3
   14da4:	mov	r1, r6
   14da8:	bl	14910 <strcmp@plt>
   14dac:	cmp	r0, #0
   14db0:	beq	14e70 <set_opt@@Base+0x14c>
   14db4:	movw	r0, #24339	; 0x5f13
   14db8:	movt	r0, #3
   14dbc:	mov	r1, r6
   14dc0:	bl	14910 <strcmp@plt>
   14dc4:	cmp	r0, #0
   14dc8:	beq	14e80 <set_opt@@Base+0x15c>
   14dcc:	movw	r0, #24347	; 0x5f1b
   14dd0:	movt	r0, #3
   14dd4:	mov	r1, r6
   14dd8:	bl	14910 <strcmp@plt>
   14ddc:	cmp	r0, #0
   14de0:	beq	14e90 <set_opt@@Base+0x16c>
   14de4:	movw	r0, #24360	; 0x5f28
   14de8:	movt	r0, #3
   14dec:	mov	r1, r6
   14df0:	bl	14910 <strcmp@plt>
   14df4:	cmp	r0, #0
   14df8:	beq	14ea0 <set_opt@@Base+0x17c>
   14dfc:	movw	r0, #24374	; 0x5f36
   14e00:	movt	r0, #3
   14e04:	mov	r1, r6
   14e08:	bl	14910 <strcmp@plt>
   14e0c:	cmp	r0, #0
   14e10:	beq	14ea8 <set_opt@@Base+0x184>
   14e14:	movw	r0, #24380	; 0x5f3c
   14e18:	movt	r0, #3
   14e1c:	mov	r1, r6
   14e20:	mov	r2, r4
   14e24:	bl	14ce8 <match_long_arg@@Base>
   14e28:	cmp	r0, #0
   14e2c:	bne	14f1c <set_opt@@Base+0x1f8>
   14e30:	movw	r0, #24556	; 0x5fec
   14e34:	movt	r0, #3
   14e38:	mov	r1, r6
   14e3c:	mov	r2, r4
   14e40:	bl	14ce8 <match_long_arg@@Base>
   14e44:	cmp	r0, #0
   14e48:	beq	14ebc <set_opt@@Base+0x198>
   14e4c:	cmp	r9, #0
   14e50:	beq	1525c <set_opt@@Base+0x538>
   14e54:	mov	r0, r9
   14e58:	bl	14c48 <parse_bool_arg@@Base>
   14e5c:	str	r0, [r8, #188]	; 0xbc
   14e60:	cmn	r0, #1
   14e64:	bgt	14fdc <set_opt@@Base+0x2b8>
   14e68:	mvn	r0, #0
   14e6c:	bl	149c4 <exit@plt>
   14e70:	mov	r0, #1
   14e74:	str	r0, [r8, #108]	; 0x6c
   14e78:	mov	r0, #0
   14e7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14e80:	mov	r0, #1
   14e84:	str	r0, [r8, #180]	; 0xb4
   14e88:	mov	r0, #0
   14e8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14e90:	mov	r0, #1
   14e94:	str	r0, [r8, #164]	; 0xa4
   14e98:	mov	r0, #0
   14e9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ea0:	mov	r0, #1
   14ea4:	b	14eb0 <set_opt@@Base+0x18c>
   14ea8:	mov	r0, #1
   14eac:	str	r0, [r8, #164]	; 0xa4
   14eb0:	str	r0, [r8, #168]	; 0xa8
   14eb4:	mov	r0, #0
   14eb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ebc:	movw	r0, #25240	; 0x6298
   14ec0:	movt	r0, #3
   14ec4:	mov	r1, r6
   14ec8:	mov	r2, r4
   14ecc:	bl	14ce8 <match_long_arg@@Base>
   14ed0:	cmp	r0, #0
   14ed4:	beq	14ef0 <set_opt@@Base+0x1cc>
   14ed8:	cmp	r9, #0
   14edc:	beq	15278 <set_opt@@Base+0x554>
   14ee0:	mov	r0, #1
   14ee4:	str	r0, [r8, #112]	; 0x70
   14ee8:	str	r9, [r8, #116]	; 0x74
   14eec:	b	14fdc <set_opt@@Base+0x2b8>
   14ef0:	movw	r0, #24649	; 0x6049
   14ef4:	movt	r0, #3
   14ef8:	mov	r1, r6
   14efc:	mov	r2, r4
   14f00:	bl	14ce8 <match_long_arg@@Base>
   14f04:	cmp	r0, #0
   14f08:	beq	14f5c <set_opt@@Base+0x238>
   14f0c:	cmp	r9, #0
   14f10:	beq	15294 <set_opt@@Base+0x570>
   14f14:	str	r9, [r8, #120]	; 0x78
   14f18:	b	14fdc <set_opt@@Base+0x2b8>
   14f1c:	movw	r4, #8368	; 0x20b0
   14f20:	movt	r4, #6
   14f24:	ldr	r3, [r4]
   14f28:	movw	r0, #24398	; 0x5f4e
   14f2c:	movt	r0, #3
   14f30:	mov	r1, #112	; 0x70
   14f34:	mov	r2, #1
   14f38:	bl	1497c <fwrite@plt>
   14f3c:	cmp	r9, #0
   14f40:	beq	152b0 <set_opt@@Base+0x58c>
   14f44:	mov	r0, r9
   14f48:	bl	14c48 <parse_bool_arg@@Base>
   14f4c:	str	r0, [r8, #184]	; 0xb8
   14f50:	cmn	r0, #1
   14f54:	bgt	14fdc <set_opt@@Base+0x2b8>
   14f58:	b	14e68 <set_opt@@Base+0x144>
   14f5c:	movw	r0, #24698	; 0x607a
   14f60:	movt	r0, #3
   14f64:	mov	r1, r6
   14f68:	mov	r2, r4
   14f6c:	bl	14ce8 <match_long_arg@@Base>
   14f70:	cmp	r0, #0
   14f74:	beq	14f88 <set_opt@@Base+0x264>
   14f78:	cmp	r9, #0
   14f7c:	beq	152d0 <set_opt@@Base+0x5ac>
   14f80:	str	r9, [r8, #124]	; 0x7c
   14f84:	b	14fdc <set_opt@@Base+0x2b8>
   14f88:	movw	r0, #24743	; 0x60a7
   14f8c:	movt	r0, #3
   14f90:	mov	r1, r6
   14f94:	mov	r2, r4
   14f98:	bl	14ce8 <match_long_arg@@Base>
   14f9c:	cmp	r0, #0
   14fa0:	beq	14fb4 <set_opt@@Base+0x290>
   14fa4:	cmp	r9, #0
   14fa8:	beq	152e8 <set_opt@@Base+0x5c4>
   14fac:	str	r9, [r8, #196]	; 0xc4
   14fb0:	b	14fdc <set_opt@@Base+0x2b8>
   14fb4:	movw	r0, #24750	; 0x60ae
   14fb8:	movt	r0, #3
   14fbc:	mov	r1, r6
   14fc0:	mov	r2, r4
   14fc4:	bl	14ce8 <match_long_arg@@Base>
   14fc8:	cmp	r0, #0
   14fcc:	beq	14fec <set_opt@@Base+0x2c8>
   14fd0:	cmp	r9, #0
   14fd4:	beq	1531c <set_opt@@Base+0x5f8>
   14fd8:	str	r9, [r8, #192]	; 0xc0
   14fdc:	clz	r0, r5
   14fe0:	lsr	r0, r0, #5
   14fe4:	lsl	r0, r0, #1
   14fe8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14fec:	sub	r0, r7, #45	; 0x2d
   14ff0:	cmp	r0, #74	; 0x4a
   14ff4:	bhi	15300 <set_opt@@Base+0x5dc>
   14ff8:	add	r1, pc, #0
   14ffc:	ldr	pc, [r1, r0, lsl #2]
   15000:	andeq	r5, r1, r8, lsr r3
   15004:	andeq	r5, r1, r0, lsl #6
   15008:	andeq	r5, r1, r0, lsl #6
   1500c:	andeq	r5, r1, r0, lsl #6
   15010:	andeq	r5, r1, r0, lsl #6
   15014:	andeq	r5, r1, r0, lsl #6
   15018:	andeq	r5, r1, r0, lsl #6
   1501c:	andeq	r5, r1, r0, lsl #6
   15020:	andeq	r5, r1, r0, lsl #6
   15024:	andeq	r5, r1, r0, lsl #6
   15028:	andeq	r5, r1, r0, lsl #6
   1502c:	andeq	r5, r1, r0, lsl #6
   15030:	andeq	r5, r1, r0, lsl #6
   15034:	andeq	r5, r1, r0, lsl #6
   15038:	andeq	r5, r1, r0, lsl #6
   1503c:	andeq	r5, r1, r0, lsl #6
   15040:	andeq	r5, r1, r0, lsl #6
   15044:	andeq	r5, r1, r0, lsl #6
   15048:	andeq	r5, r1, r0, lsl #6
   1504c:	andeq	r5, r1, r0, lsl #6
   15050:	andeq	r5, r1, r0, lsl #6
   15054:	andeq	r5, r1, r0, lsl #6
   15058:	andeq	r5, r1, r0, lsl #6
   1505c:	andeq	r5, r1, r0, lsl #6
   15060:	andeq	r5, r1, r0, lsl #6
   15064:	andeq	r5, r1, r0, lsl #6
   15068:	andeq	r5, r1, r0, lsl #6
   1506c:	andeq	r5, r1, r0, lsl #6
   15070:	andeq	r5, r1, ip, lsr #2
   15074:	andeq	r5, r1, r0, lsl #6
   15078:	andeq	r5, r1, r0, lsl #6
   1507c:	andeq	r5, r1, r0, lsl #6
   15080:	andeq	r5, r1, r0, lsl #6
   15084:	andeq	r5, r1, r0, lsl #6
   15088:	andeq	r5, r1, r0, lsl #6
   1508c:	andeq	r5, r1, r0, lsl #6
   15090:	andeq	r5, r1, r0, lsl #6
   15094:	andeq	r5, r1, r0, lsl #6
   15098:	andeq	r5, r1, r0, lsl #6
   1509c:	andeq	r5, r1, r0, lsl #6
   150a0:	andeq	r5, r1, r0, lsl #6
   150a4:	andeq	r5, r1, r0, lsl #6
   150a8:	andeq	r5, r1, r0, lsl #6
   150ac:	andeq	r5, r1, r0, lsl #6
   150b0:	andeq	r5, r1, r0, lsl #6
   150b4:	andeq	r5, r1, r0, lsl #6
   150b8:	andeq	r5, r1, r0, lsl #6
   150bc:	andeq	r5, r1, r0, lsl #6
   150c0:	andeq	r5, r1, r0, lsl #6
   150c4:	andeq	r5, r1, r0, lsl #6
   150c8:	andeq	r5, r1, r0, lsl #6
   150cc:	andeq	r5, r1, r0, lsl #6
   150d0:	andeq	r5, r1, r0, ror #3
   150d4:	andeq	r5, r1, r0, lsl #6
   150d8:	andeq	r5, r1, ip, lsl #3
   150dc:	ldrdeq	r5, [r1], -r0
   150e0:	andeq	r5, r1, r0, lsl #6
   150e4:	andeq	r5, r1, r0, lsl #6
   150e8:	andeq	r5, r1, r0, lsl #6
   150ec:	andeq	r5, r1, r0, lsl #6
   150f0:	andeq	r5, r1, r0, lsl #6
   150f4:	andeq	r5, r1, r0, lsl #6
   150f8:	andeq	r5, r1, r0, lsl #6
   150fc:	andeq	r5, r1, r0, lsl #6
   15100:	andeq	r5, r1, r0, lsl #6
   15104:	andeq	r5, r1, r0, lsl #6
   15108:	muleq	r1, ip, r1
   1510c:	andeq	r5, r1, r0, lsl #6
   15110:	andeq	r5, r1, r0, lsl #6
   15114:	andeq	r5, r1, r4, ror r1
   15118:	andeq	r5, r1, r0, lsl #6
   1511c:	andeq	r5, r1, r0, lsl #6
   15120:	andeq	r5, r1, r0, lsl #6
   15124:	andeq	r5, r1, r4, lsl #3
   15128:	andeq	r5, r1, r4, ror #2
   1512c:	ldrb	r1, [r6, #1]!
   15130:	mov	r0, #1
   15134:	cmp	r1, #0
   15138:	bne	1514c <set_opt@@Base+0x428>
   1513c:	mov	r0, #2
   15140:	cmp	r9, #0
   15144:	mov	r6, r9
   15148:	beq	15378 <set_opt@@Base+0x654>
   1514c:	ldr	r1, [r8, #200]	; 0xc8
   15150:	ldr	r2, [r8, #208]	; 0xd0
   15154:	add	r3, r2, #1
   15158:	str	r3, [r8, #208]	; 0xd0
   1515c:	str	r6, [r1, r2, lsl #2]
   15160:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15164:	mov	r0, #1
   15168:	str	r0, [r8, #156]	; 0x9c
   1516c:	mov	r0, #0
   15170:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15174:	mov	r0, #1
   15178:	str	r0, [r8, #172]	; 0xac
   1517c:	mov	r0, #0
   15180:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15184:	mov	r0, #1
   15188:	b	151f8 <set_opt@@Base+0x4d4>
   1518c:	mov	r0, #1
   15190:	str	r0, [r8, #144]	; 0x90
   15194:	mov	r0, #0
   15198:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1519c:	ldr	r0, [r8, #216]	; 0xd8
   151a0:	cmp	r0, #0
   151a4:	bne	1535c <set_opt@@Base+0x638>
   151a8:	ldrb	r1, [r6, #1]!
   151ac:	mov	r0, #1
   151b0:	cmp	r1, #0
   151b4:	bne	151c8 <set_opt@@Base+0x4a4>
   151b8:	mov	r0, #2
   151bc:	cmp	r9, #0
   151c0:	mov	r6, r9
   151c4:	beq	15394 <set_opt@@Base+0x670>
   151c8:	str	r6, [r8, #216]	; 0xd8
   151cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   151d0:	mov	r0, #1
   151d4:	str	r0, [r8, #112]	; 0x70
   151d8:	mov	r0, #0
   151dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   151e0:	mov	r0, #1
   151e4:	str	r0, [r8, #172]	; 0xac
   151e8:	str	r0, [r8, #144]	; 0x90
   151ec:	str	r0, [r8, #148]	; 0x94
   151f0:	str	r0, [r8, #152]	; 0x98
   151f4:	str	r0, [r8, #156]	; 0x9c
   151f8:	str	r0, [r8, #160]	; 0xa0
   151fc:	mov	r0, #0
   15200:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15204:	movw	r0, #8372	; 0x20b4
   15208:	movt	r0, #6
   1520c:	ldr	r0, [r0]
   15210:	bl	14c1c <help@@Base>
   15214:	mov	r0, #0
   15218:	bl	149c4 <exit@plt>
   1521c:	movw	r4, #8368	; 0x20b0
   15220:	movt	r4, #6
   15224:	ldr	r0, [r4]
   15228:	movw	r1, #55346	; 0xd832
   1522c:	movt	r1, #4
   15230:	movw	r2, #19592	; 0x4c88
   15234:	movt	r2, #3
   15238:	bl	149f4 <fprintf@plt>
   1523c:	ldr	r0, [r4]
   15240:	movw	r1, #19646	; 0x4cbe
   15244:	movt	r1, #3
   15248:	movw	r2, #19659	; 0x4ccb
   1524c:	movt	r2, #3
   15250:	bl	149f4 <fprintf@plt>
   15254:	mov	r0, #0
   15258:	bl	149c4 <exit@plt>
   1525c:	movw	r0, #8368	; 0x20b0
   15260:	movt	r0, #6
   15264:	ldr	r3, [r0]
   15268:	movw	r0, #24571	; 0x5ffb
   1526c:	movt	r0, #3
   15270:	mov	r1, #41	; 0x29
   15274:	b	152c0 <set_opt@@Base+0x59c>
   15278:	movw	r0, #8368	; 0x20b0
   1527c:	movt	r0, #6
   15280:	ldr	r3, [r0]
   15284:	movw	r0, #24613	; 0x6025
   15288:	movt	r0, #3
   1528c:	mov	r1, #35	; 0x23
   15290:	b	152c0 <set_opt@@Base+0x59c>
   15294:	movw	r0, #8368	; 0x20b0
   15298:	movt	r0, #6
   1529c:	ldr	r3, [r0]
   152a0:	movw	r0, #24660	; 0x6054
   152a4:	movt	r0, #3
   152a8:	mov	r1, #37	; 0x25
   152ac:	b	152c0 <set_opt@@Base+0x59c>
   152b0:	ldr	r3, [r4]
   152b4:	movw	r0, #24511	; 0x5fbf
   152b8:	movt	r0, #3
   152bc:	mov	r1, #44	; 0x2c
   152c0:	mov	r2, #1
   152c4:	bl	1497c <fwrite@plt>
   152c8:	mvn	r0, #0
   152cc:	bl	149c4 <exit@plt>
   152d0:	movw	r0, #8368	; 0x20b0
   152d4:	movt	r0, #6
   152d8:	ldr	r3, [r0]
   152dc:	movw	r0, #24707	; 0x6083
   152e0:	movt	r0, #3
   152e4:	b	1528c <set_opt@@Base+0x568>
   152e8:	movw	r0, #8368	; 0x20b0
   152ec:	movt	r0, #6
   152f0:	ldr	r3, [r0]
   152f4:	movw	r0, #24758	; 0x60b6
   152f8:	movt	r0, #3
   152fc:	b	15270 <set_opt@@Base+0x54c>
   15300:	movw	r0, #8368	; 0x20b0
   15304:	movt	r0, #6
   15308:	ldr	r0, [r0]
   1530c:	movw	r1, #24946	; 0x6172
   15310:	movt	r1, #3
   15314:	mov	r2, r7
   15318:	b	15350 <set_opt@@Base+0x62c>
   1531c:	movw	r0, #8368	; 0x20b0
   15320:	movt	r0, #6
   15324:	ldr	r3, [r0]
   15328:	movw	r0, #24800	; 0x60e0
   1532c:	movt	r0, #3
   15330:	mov	r1, #28
   15334:	b	152c0 <set_opt@@Base+0x59c>
   15338:	movw	r0, #8368	; 0x20b0
   1533c:	movt	r0, #6
   15340:	ldr	r0, [r0]
   15344:	movw	r1, #24829	; 0x60fd
   15348:	movt	r1, #3
   1534c:	mov	r2, r6
   15350:	bl	149f4 <fprintf@plt>
   15354:	mvn	r0, #0
   15358:	bl	149c4 <exit@plt>
   1535c:	movw	r0, #8368	; 0x20b0
   15360:	movt	r0, #6
   15364:	ldr	r3, [r0]
   15368:	movw	r0, #24879	; 0x612f
   1536c:	movt	r0, #3
   15370:	mov	r1, #37	; 0x25
   15374:	b	152c0 <set_opt@@Base+0x59c>
   15378:	movw	r0, #8368	; 0x20b0
   1537c:	movt	r0, #6
   15380:	ldr	r3, [r0]
   15384:	movw	r0, #24850	; 0x6112
   15388:	movt	r0, #3
   1538c:	mov	r1, #28
   15390:	b	152c0 <set_opt@@Base+0x59c>
   15394:	movw	r0, #8368	; 0x20b0
   15398:	movt	r0, #6
   1539c:	ldr	r3, [r0]
   153a0:	movw	r0, #24917	; 0x6155
   153a4:	movt	r0, #3
   153a8:	mov	r1, #28
   153ac:	b	152c0 <set_opt@@Base+0x59c>

000153b0 <get_opt@@Base>:
   153b0:	push	{r4, r5, r6, sl, fp, lr}
   153b4:	add	fp, sp, #16
   153b8:	mov	r4, r2
   153bc:	mov	r5, r1
   153c0:	mov	r6, r0
   153c4:	ldrb	r0, [r5, #1]!
   153c8:	cmp	r0, #45	; 0x2d
   153cc:	beq	15448 <get_opt@@Base+0x98>
   153d0:	cmp	r0, #0
   153d4:	bne	15410 <get_opt@@Base+0x60>
   153d8:	movw	r0, #8368	; 0x20b0
   153dc:	movt	r0, #6
   153e0:	ldr	r3, [r0]
   153e4:	movw	r0, #24967	; 0x6187
   153e8:	movt	r0, #3
   153ec:	mov	r1, #24
   153f0:	mov	r2, #1
   153f4:	bl	1497c <fwrite@plt>
   153f8:	mvn	r0, #0
   153fc:	bl	149c4 <exit@plt>
   15400:	add	r5, r5, #1
   15404:	ldrb	r1, [r5]
   15408:	cmp	r1, #0
   1540c:	beq	15444 <get_opt@@Base+0x94>
   15410:	mov	r0, r6
   15414:	mov	r1, r5
   15418:	mov	r2, r4
   1541c:	bl	14d24 <set_opt@@Base>
   15420:	mov	r1, r0
   15424:	mov	r0, #0
   15428:	cmp	r1, #0
   1542c:	beq	15400 <get_opt@@Base+0x50>
   15430:	cmp	r1, #1
   15434:	beq	15444 <get_opt@@Base+0x94>
   15438:	cmp	r1, #2
   1543c:	bne	15404 <get_opt@@Base+0x54>
   15440:	mov	r0, #1
   15444:	pop	{r4, r5, r6, sl, fp, pc}
   15448:	mov	r0, r6
   1544c:	mov	r1, r5
   15450:	mov	r2, r4
   15454:	bl	14d24 <set_opt@@Base>
   15458:	sub	r0, r0, #2
   1545c:	clz	r0, r0
   15460:	lsr	r0, r0, #5
   15464:	pop	{r4, r5, r6, sl, fp, pc}

00015468 <parse_opts@@Base>:
   15468:	push	{r4, r5, r6, r7, fp, lr}
   1546c:	add	fp, sp, #16
   15470:	cmp	r0, #2
   15474:	poplt	{r4, r5, r6, r7, fp, pc}
   15478:	mov	r4, r2
   1547c:	mov	r5, r1
   15480:	mov	r6, r0
   15484:	mov	r7, #1
   15488:	b	154ac <parse_opts@@Base+0x44>
   1548c:	ldr	r0, [r4, #204]	; 0xcc
   15490:	ldr	r2, [r4, #212]	; 0xd4
   15494:	add	r3, r2, #1
   15498:	str	r3, [r4, #212]	; 0xd4
   1549c:	str	r1, [r0, r2, lsl #2]
   154a0:	add	r7, r7, #1
   154a4:	cmp	r7, r6
   154a8:	bge	154dc <parse_opts@@Base+0x74>
   154ac:	ldr	r1, [r5, r7, lsl #2]
   154b0:	ldrb	r0, [r1]
   154b4:	cmp	r0, #45	; 0x2d
   154b8:	bne	1548c <parse_opts@@Base+0x24>
   154bc:	add	r0, r7, #1
   154c0:	mov	r2, #0
   154c4:	cmp	r0, r6
   154c8:	ldrlt	r2, [r5, r0, lsl #2]
   154cc:	mov	r0, r4
   154d0:	bl	153b0 <get_opt@@Base>
   154d4:	add	r7, r0, r7
   154d8:	b	154a0 <parse_opts@@Base+0x38>
   154dc:	pop	{r4, r5, r6, r7, fp, pc}

000154e0 <main@@Base>:
   154e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   154e4:	add	fp, sp, #24
   154e8:	sub	sp, sp, #224	; 0xe0
   154ec:	cmp	r0, #1
   154f0:	ble	157fc <main@@Base+0x31c>
   154f4:	mov	r4, r1
   154f8:	mov	r5, r0
   154fc:	mov	r0, sp
   15500:	bl	1586c <flatcc_init_options@@Base>
   15504:	lsl	r6, r5, #2
   15508:	mov	r0, r6
   1550c:	bl	14994 <malloc@plt>
   15510:	str	r0, [sp, #200]	; 0xc8
   15514:	cmp	r0, #0
   15518:	beq	15814 <main@@Base+0x334>
   1551c:	mov	r0, r6
   15520:	bl	14994 <malloc@plt>
   15524:	str	r0, [sp, #204]	; 0xcc
   15528:	cmp	r0, #0
   1552c:	beq	1583c <main@@Base+0x35c>
   15530:	mov	r2, sp
   15534:	mov	r0, r5
   15538:	mov	r1, r4
   1553c:	bl	15468 <parse_opts@@Base>
   15540:	ldr	r2, [sp, #144]	; 0x90
   15544:	ldr	r7, [sp, #156]	; 0x9c
   15548:	ldr	r1, [sp, #212]	; 0xd4
   1554c:	cmp	r2, #0
   15550:	mov	r3, r2
   15554:	movwne	r3, #1
   15558:	cmp	r7, #0
   1555c:	mov	r0, r7
   15560:	movwne	r0, #1
   15564:	and	r3, r0, r3
   15568:	str	r3, [sp, #148]	; 0x94
   1556c:	cmp	r1, #0
   15570:	beq	155f8 <main@@Base+0x118>
   15574:	ldr	r0, [sp, #152]	; 0x98
   15578:	orrs	r0, r0, r7
   1557c:	mov	r1, #1
   15580:	bne	155b0 <main@@Base+0xd0>
   15584:	ldr	r0, [sp, #160]	; 0xa0
   15588:	orrs	r0, r0, r2
   1558c:	movwne	r0, #1
   15590:	orrs	r0, r3, r0
   15594:	bne	155b0 <main@@Base+0xd0>
   15598:	ldr	r0, [sp, #164]	; 0xa4
   1559c:	cmp	r0, #0
   155a0:	bne	155b0 <main@@Base+0xd0>
   155a4:	ldr	r1, [sp, #168]	; 0xa8
   155a8:	cmp	r1, #0
   155ac:	movwne	r1, #1
   155b0:	ldr	r0, [sp, #180]	; 0xb4
   155b4:	cmp	r0, #0
   155b8:	beq	15648 <main@@Base+0x168>
   155bc:	cmp	r1, #0
   155c0:	beq	15670 <main@@Base+0x190>
   155c4:	ldr	r0, [sp, #108]	; 0x6c
   155c8:	cmp	r0, #0
   155cc:	bne	1579c <main@@Base+0x2bc>
   155d0:	ldr	r0, [sp, #124]	; 0x7c
   155d4:	cmp	r0, #0
   155d8:	beq	15670 <main@@Base+0x190>
   155dc:	movw	r0, #8368	; 0x20b0
   155e0:	movt	r0, #6
   155e4:	ldr	r3, [r0]
   155e8:	movw	r0, #25145	; 0x6239
   155ec:	movt	r0, #3
   155f0:	mov	r1, #58	; 0x3a
   155f4:	b	157b4 <main@@Base+0x2d4>
   155f8:	cmp	r2, #0
   155fc:	beq	15748 <main@@Base+0x268>
   15600:	ldr	r0, [sp, #180]	; 0xb4
   15604:	cmp	r0, #0
   15608:	bne	15748 <main@@Base+0x268>
   1560c:	mov	r0, sp
   15610:	mov	r1, #0
   15614:	mov	r2, #0
   15618:	mov	r3, #0
   1561c:	bl	15950 <flatcc_create_context@@Base>
   15620:	cmp	r0, #0
   15624:	beq	1572c <main@@Base+0x24c>
   15628:	mov	r4, r0
   1562c:	bl	160dc <flatcc_generate_files@@Base>
   15630:	cmp	r0, #0
   15634:	bne	15720 <main@@Base+0x240>
   15638:	mov	r0, r4
   1563c:	bl	16214 <flatcc_destroy_context@@Base>
   15640:	mov	r4, #0
   15644:	b	157e0 <main@@Base+0x300>
   15648:	eor	r0, r1, #1
   1564c:	cmp	r7, #0
   15650:	movwne	r7, #1
   15654:	orrs	r0, r7, r0
   15658:	bne	15668 <main@@Base+0x188>
   1565c:	ldr	r0, [sp, #160]	; 0xa0
   15660:	cmp	r0, #0
   15664:	beq	15670 <main@@Base+0x190>
   15668:	mov	r0, #1
   1566c:	str	r0, [sp, #152]	; 0x98
   15670:	ldr	r0, [sp, #120]	; 0x78
   15674:	cmp	r0, #0
   15678:	beq	15688 <main@@Base+0x1a8>
   1567c:	ldr	r0, [sp, #116]	; 0x74
   15680:	cmp	r0, #0
   15684:	beq	15764 <main@@Base+0x284>
   15688:	ldr	r0, [sp, #108]	; 0x6c
   1568c:	cmp	r0, #0
   15690:	beq	156a0 <main@@Base+0x1c0>
   15694:	ldr	r0, [sp, #124]	; 0x7c
   15698:	cmp	r0, #0
   1569c:	bne	15780 <main@@Base+0x2a0>
   156a0:	ldr	r0, [sp, #212]	; 0xd4
   156a4:	cmp	r0, #1
   156a8:	blt	15718 <main@@Base+0x238>
   156ac:	mov	r6, #0
   156b0:	ldr	r7, [sp, #204]	; 0xcc
   156b4:	mov	r5, sp
   156b8:	mov	r8, #1
   156bc:	ldr	r1, [r7, r6, lsl #2]
   156c0:	mov	r0, r5
   156c4:	mov	r2, #0
   156c8:	mov	r3, #0
   156cc:	bl	15950 <flatcc_create_context@@Base>
   156d0:	cmp	r0, #0
   156d4:	beq	1572c <main@@Base+0x24c>
   156d8:	mov	r4, r0
   156dc:	ldr	r1, [r7, r6, lsl #2]
   156e0:	bl	15a58 <flatcc_parse_file@@Base>
   156e4:	cmp	r0, #0
   156e8:	bne	15720 <main@@Base+0x240>
   156ec:	mov	r0, r4
   156f0:	bl	160dc <flatcc_generate_files@@Base>
   156f4:	cmp	r0, #0
   156f8:	bne	15720 <main@@Base+0x240>
   156fc:	mov	r0, r4
   15700:	bl	16214 <flatcc_destroy_context@@Base>
   15704:	str	r8, [sp, #128]	; 0x80
   15708:	add	r6, r6, #1
   1570c:	ldr	r0, [sp, #212]	; 0xd4
   15710:	cmp	r6, r0
   15714:	blt	156bc <main@@Base+0x1dc>
   15718:	mov	r4, #0
   1571c:	b	157e0 <main@@Base+0x300>
   15720:	mov	r0, r4
   15724:	bl	16214 <flatcc_destroy_context@@Base>
   15728:	b	157bc <main@@Base+0x2dc>
   1572c:	movw	r0, #8368	; 0x20b0
   15730:	movt	r0, #6
   15734:	ldr	r3, [r0]
   15738:	movw	r0, #25037	; 0x61cd
   1573c:	movt	r0, #3
   15740:	mov	r1, #49	; 0x31
   15744:	b	157b4 <main@@Base+0x2d4>
   15748:	movw	r0, #8368	; 0x20b0
   1574c:	movt	r0, #6
   15750:	ldr	r3, [r0]
   15754:	movw	r0, #25019	; 0x61bb
   15758:	movt	r0, #3
   1575c:	mov	r1, #17
   15760:	b	157b4 <main@@Base+0x2d4>
   15764:	movw	r0, #8368	; 0x20b0
   15768:	movt	r0, #6
   1576c:	ldr	r3, [r0]
   15770:	movw	r0, #25204	; 0x6274
   15774:	movt	r0, #3
   15778:	mov	r1, #44	; 0x2c
   1577c:	b	157b4 <main@@Base+0x2d4>
   15780:	movw	r0, #8368	; 0x20b0
   15784:	movt	r0, #6
   15788:	ldr	r3, [r0]
   1578c:	movw	r0, #25249	; 0x62a1
   15790:	movt	r0, #3
   15794:	mov	r1, #38	; 0x26
   15798:	b	157b4 <main@@Base+0x2d4>
   1579c:	movw	r0, #8368	; 0x20b0
   157a0:	movt	r0, #6
   157a4:	ldr	r3, [r0]
   157a8:	movw	r0, #25087	; 0x61ff
   157ac:	movt	r0, #3
   157b0:	mov	r1, #57	; 0x39
   157b4:	mov	r2, #1
   157b8:	bl	1497c <fwrite@plt>
   157bc:	movw	r0, #8368	; 0x20b0
   157c0:	movt	r0, #6
   157c4:	ldr	r3, [r0]
   157c8:	movw	r0, #25288	; 0x62c8
   157cc:	movt	r0, #3
   157d0:	mov	r1, #14
   157d4:	mov	r2, #1
   157d8:	bl	1497c <fwrite@plt>
   157dc:	mvn	r4, #0
   157e0:	ldr	r0, [sp, #200]	; 0xc8
   157e4:	bl	14928 <free@plt>
   157e8:	ldr	r0, [sp, #204]	; 0xcc
   157ec:	bl	14928 <free@plt>
   157f0:	mov	r0, r4
   157f4:	sub	sp, fp, #24
   157f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   157fc:	movw	r0, #8368	; 0x20b0
   15800:	movt	r0, #6
   15804:	ldr	r0, [r0]
   15808:	bl	14bb0 <usage@@Base>
   1580c:	mvn	r0, #0
   15810:	bl	149c4 <exit@plt>
   15814:	movw	r0, #8368	; 0x20b0
   15818:	movt	r0, #6
   1581c:	ldr	r3, [r0]
   15820:	movw	r0, #24992	; 0x61a0
   15824:	movt	r0, #3
   15828:	mov	r1, #26
   1582c:	mov	r2, #1
   15830:	bl	1497c <fwrite@plt>
   15834:	mvn	r0, #0
   15838:	bl	149c4 <exit@plt>
   1583c:	movw	r0, #8368	; 0x20b0
   15840:	movt	r0, #6
   15844:	ldr	r3, [r0]
   15848:	movw	r0, #24992	; 0x61a0
   1584c:	movt	r0, #3
   15850:	mov	r1, #26
   15854:	mov	r2, #1
   15858:	bl	1497c <fwrite@plt>
   1585c:	ldr	r0, [sp, #200]	; 0xc8
   15860:	bl	14928 <free@plt>
   15864:	mvn	r0, #0
   15868:	bl	149c4 <exit@plt>

0001586c <flatcc_init_options@@Base>:
   1586c:	push	{r4, r5, fp, lr}
   15870:	add	fp, sp, #8
   15874:	mov	r4, r0
   15878:	mov	r5, #0
   1587c:	mov	r1, #0
   15880:	mov	r2, #224	; 0xe0
   15884:	bl	14a0c <memset@plt>
   15888:	movw	ip, #65534	; 0xfffe
   1588c:	str	r5, [r4, #164]	; 0xa4
   15890:	mov	r0, #1
   15894:	str	r5, [r4, #132]	; 0x84
   15898:	str	r0, [r4, #136]	; 0x88
   1589c:	str	r0, [r4, #140]	; 0x8c
   158a0:	movw	r2, #25314	; 0x62e2
   158a4:	movt	r2, #3
   158a8:	movw	r3, #25308	; 0x62dc
   158ac:	movt	r3, #3
   158b0:	movw	r1, #25303	; 0x62d7
   158b4:	movt	r1, #3
   158b8:	str	r5, [r4, #80]	; 0x50
   158bc:	str	r0, [r4, #84]	; 0x54
   158c0:	str	ip, [r4, #88]	; 0x58
   158c4:	str	r5, [r4, #92]	; 0x5c
   158c8:	str	r1, [r4, #96]	; 0x60
   158cc:	str	r3, [r4, #100]	; 0x64
   158d0:	str	r2, [r4, #104]	; 0x68
   158d4:	mov	r1, #2
   158d8:	mov	r2, #4
   158dc:	str	r0, [r4, #48]	; 0x30
   158e0:	str	r0, [r4, #52]	; 0x34
   158e4:	str	r5, [r4, #56]	; 0x38
   158e8:	str	r5, [r4, #60]	; 0x3c
   158ec:	str	r2, [r4, #64]	; 0x40
   158f0:	str	r1, [r4, #68]	; 0x44
   158f4:	str	r0, [r4, #72]	; 0x48
   158f8:	str	r0, [r4, #76]	; 0x4c
   158fc:	str	r0, [r4, #16]
   15900:	str	r0, [r4, #20]
   15904:	str	r0, [r4, #24]
   15908:	str	r0, [r4, #28]
   1590c:	str	r0, [r4, #32]
   15910:	str	r0, [r4, #36]	; 0x24
   15914:	str	r0, [r4, #40]	; 0x28
   15918:	str	r0, [r4, #44]	; 0x2c
   1591c:	mov	r1, #100	; 0x64
   15920:	mov	r3, #65536	; 0x10000
   15924:	str	r3, [r4]
   15928:	str	r1, [r4, #4]
   1592c:	str	r1, [r4, #8]
   15930:	vmov.i32	q8, #0	; 0x00000000
   15934:	str	r2, [r4, #176]	; 0xb0
   15938:	str	r5, [r4, #180]	; 0xb4
   1593c:	str	r0, [r4, #184]	; 0xb8
   15940:	str	r5, [r4, #188]	; 0xbc
   15944:	add	r0, r4, #144	; 0x90
   15948:	vst1.64	{d16-d17}, [r0]
   1594c:	pop	{r4, r5, fp, pc}

00015950 <flatcc_create_context@@Base>:
   15950:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15954:	add	fp, sp, #24
   15958:	sub	sp, sp, #8
   1595c:	mov	r7, r3
   15960:	mov	r8, r2
   15964:	mov	r9, r1
   15968:	mov	r6, r0
   1596c:	mov	r0, #560	; 0x230
   15970:	bl	14994 <malloc@plt>
   15974:	cmp	r0, #0
   15978:	beq	159b0 <flatcc_create_context@@Base+0x60>
   1597c:	mov	r5, r0
   15980:	mov	r4, #0
   15984:	str	r7, [sp]
   15988:	str	r4, [sp, #4]
   1598c:	mov	r1, r6
   15990:	mov	r2, r9
   15994:	mov	r3, r8
   15998:	bl	28408 <__flatcc_fb_init_parser@@Base>
   1599c:	cmp	r0, #0
   159a0:	beq	159b8 <flatcc_create_context@@Base+0x68>
   159a4:	mov	r0, r5
   159a8:	bl	14928 <free@plt>
   159ac:	b	159bc <flatcc_create_context@@Base+0x6c>
   159b0:	mov	r4, #0
   159b4:	b	159bc <flatcc_create_context@@Base+0x6c>
   159b8:	mov	r4, r5
   159bc:	mov	r0, r4
   159c0:	sub	sp, fp, #24
   159c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000159c8 <flatcc_parse_buffer@@Base>:
   159c8:	push	{r4, r5, r6, sl, fp, lr}
   159cc:	add	fp, sp, #16
   159d0:	mov	r5, r2
   159d4:	mov	r6, r1
   159d8:	mov	r4, r0
   159dc:	mov	r0, #1
   159e0:	str	r0, [r4, #140]	; 0x8c
   159e4:	ldr	r0, [r4, #128]	; 0x80
   159e8:	cmp	r0, r2
   159ec:	bcs	15a10 <flatcc_parse_buffer@@Base+0x48>
   159f0:	cmp	r0, #0
   159f4:	beq	15a10 <flatcc_parse_buffer@@Base+0x48>
   159f8:	movw	r1, #25319	; 0x62e7
   159fc:	movt	r1, #3
   15a00:	mov	r0, r4
   15a04:	bl	280c4 <__flatcc_fb_print_error@@Base>
   15a08:	mvn	r0, #0
   15a0c:	pop	{r4, r5, r6, sl, fp, pc}
   15a10:	add	r0, r4, #524	; 0x20c
   15a14:	add	r1, r4, #352	; 0x160
   15a18:	mov	r2, #1
   15a1c:	bl	264c4 <ptr_set_insert_item@@Base>
   15a20:	mov	r0, r4
   15a24:	mov	r1, r6
   15a28:	mov	r2, r5
   15a2c:	mov	r3, #0
   15a30:	bl	286c8 <__flatcc_fb_parse@@Base>
   15a34:	mov	r1, r0
   15a38:	mvn	r0, #0
   15a3c:	cmp	r1, #0
   15a40:	popne	{r4, r5, r6, sl, fp, pc}
   15a44:	mov	r0, r4
   15a48:	bl	2bf9c <__flatcc_fb_build_schema@@Base>
   15a4c:	cmp	r0, #0
   15a50:	mvnne	r0, #0
   15a54:	pop	{r4, r5, r6, sl, fp, pc}

00015a58 <flatcc_parse_file@@Base>:
   15a58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a5c:	add	fp, sp, #28
   15a60:	sub	sp, sp, #20
   15a64:	mov	r7, r1
   15a68:	mov	r5, r0
   15a6c:	mov	r0, r1
   15a70:	bl	149dc <strlen@plt>
   15a74:	mov	r4, r0
   15a78:	ldr	r0, [r5, #412]	; 0x19c
   15a7c:	add	sl, r5, #352	; 0x160
   15a80:	add	r0, r0, #32
   15a84:	mov	r1, sl
   15a88:	mov	r2, #1
   15a8c:	bl	27848 <fb_schema_table_insert_item@@Base>
   15a90:	mov	r9, #0
   15a94:	cmp	r0, #0
   15a98:	beq	15aa8 <flatcc_parse_file@@Base+0x50>
   15a9c:	mov	r0, r9
   15aa0:	sub	sp, fp, #28
   15aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15aa8:	ldr	r0, [r5, #552]	; 0x228
   15aac:	str	r0, [sp, #12]
   15ab0:	cmp	r0, #0
   15ab4:	beq	15bdc <flatcc_parse_file@@Base+0x184>
   15ab8:	str	sl, [sp, #8]
   15abc:	ldr	r0, [r5, #336]	; 0x150
   15ac0:	cmp	r0, #1
   15ac4:	blt	15b60 <flatcc_parse_file@@Base+0x108>
   15ac8:	mov	r9, #0
   15acc:	add	sl, sp, #16
   15ad0:	b	15ae4 <flatcc_parse_file@@Base+0x8c>
   15ad4:	add	r9, r9, #1
   15ad8:	ldr	r0, [r5, #336]	; 0x150
   15adc:	cmp	r9, r0
   15ae0:	bge	15b60 <flatcc_parse_file@@Base+0x108>
   15ae4:	ldr	r0, [r5, #328]	; 0x148
   15ae8:	ldr	r6, [r0, r9, lsl #2]
   15aec:	mov	r0, r6
   15af0:	bl	149dc <strlen@plt>
   15af4:	mov	r1, r0
   15af8:	movw	r0, #26588	; 0x67dc
   15afc:	movt	r0, #3
   15b00:	str	r0, [sp]
   15b04:	mov	r0, #1
   15b08:	str	r0, [sp, #4]
   15b0c:	mov	r0, r6
   15b10:	mov	r2, r7
   15b14:	mov	r3, r4
   15b18:	bl	27bd4 <__flatcc_fb_create_join_path_n@@Base>
   15b1c:	mov	r6, r0
   15b20:	bl	15d50 <flatcc_parse_file@@Base+0x2f8>
   15b24:	ldr	r1, [r5, #128]	; 0x80
   15b28:	mov	r0, r6
   15b2c:	mov	r2, sl
   15b30:	bl	27fac <__flatcc_fb_read_file@@Base>
   15b34:	cmp	r0, #0
   15b38:	bne	15bcc <flatcc_parse_file@@Base+0x174>
   15b3c:	mov	r0, r6
   15b40:	bl	14928 <free@plt>
   15b44:	ldr	r0, [r5, #128]	; 0x80
   15b48:	ldr	r1, [sp, #16]
   15b4c:	cmp	r1, r0
   15b50:	bls	15ad4 <flatcc_parse_file@@Base+0x7c>
   15b54:	cmp	r0, #0
   15b58:	beq	15ad4 <flatcc_parse_file@@Base+0x7c>
   15b5c:	b	15d08 <flatcc_parse_file@@Base+0x2b0>
   15b60:	ldr	r0, [sp, #12]
   15b64:	cmp	r0, #0
   15b68:	beq	15d20 <flatcc_parse_file@@Base+0x2c8>
   15b6c:	ldr	r6, [r5, #552]	; 0x228
   15b70:	mov	r0, r6
   15b74:	bl	149dc <strlen@plt>
   15b78:	mov	r1, r0
   15b7c:	mov	r0, r6
   15b80:	bl	27f1c <__flatcc_fb_find_basename@@Base>
   15b84:	mov	r1, r0
   15b88:	mov	r0, #1
   15b8c:	movw	r2, #26588	; 0x67dc
   15b90:	movt	r2, #3
   15b94:	str	r2, [sp]
   15b98:	str	r0, [sp, #4]
   15b9c:	mov	r0, r6
   15ba0:	mov	r2, r7
   15ba4:	mov	r3, r4
   15ba8:	bl	27bd4 <__flatcc_fb_create_join_path_n@@Base>
   15bac:	mov	r6, r0
   15bb0:	bl	15d50 <flatcc_parse_file@@Base+0x2f8>
   15bb4:	ldr	r1, [r5, #128]	; 0x80
   15bb8:	add	r2, sp, #16
   15bbc:	mov	r0, r6
   15bc0:	bl	27fac <__flatcc_fb_read_file@@Base>
   15bc4:	cmp	r0, #0
   15bc8:	beq	15ce8 <flatcc_parse_file@@Base+0x290>
   15bcc:	mov	r8, r0
   15bd0:	mov	r9, #0
   15bd4:	ldr	sl, [sp, #8]
   15bd8:	b	15c08 <flatcc_parse_file@@Base+0x1b0>
   15bdc:	ldr	r1, [r5, #128]	; 0x80
   15be0:	add	r2, sp, #16
   15be4:	mov	r0, r7
   15be8:	bl	27fac <__flatcc_fb_read_file@@Base>
   15bec:	cmp	r0, #0
   15bf0:	beq	15cc0 <flatcc_parse_file@@Base+0x268>
   15bf4:	mov	r8, r0
   15bf8:	mov	r0, r7
   15bfc:	bl	27b28 <__flatcc_fb_copy_path@@Base>
   15c00:	mov	r6, r0
   15c04:	bl	15d50 <flatcc_parse_file@@Base+0x2f8>
   15c08:	ldr	r0, [r5, #412]	; 0x19c
   15c0c:	ldr	r1, [r0, #56]	; 0x38
   15c10:	ldr	r2, [sp, #16]
   15c14:	add	r1, r1, r2
   15c18:	str	r1, [r0, #56]	; 0x38
   15c1c:	str	r6, [r5, #548]	; 0x224
   15c20:	mov	r0, r5
   15c24:	mov	r1, r8
   15c28:	mov	r3, #1
   15c2c:	bl	286c8 <__flatcc_fb_parse@@Base>
   15c30:	cmp	r0, #0
   15c34:	bne	15a9c <flatcc_parse_file@@Base+0x44>
   15c38:	ldr	r6, [sl]
   15c3c:	cmp	r6, #0
   15c40:	beq	15c7c <flatcc_parse_file@@Base+0x224>
   15c44:	ldrd	r0, [r6, #8]
   15c48:	bl	27ab4 <__flatcc_fb_copy_path_n@@Base>
   15c4c:	mov	r4, r0
   15c50:	bl	15d50 <flatcc_parse_file@@Base+0x2f8>
   15c54:	mov	r0, r5
   15c58:	mov	r1, r4
   15c5c:	bl	15d88 <flatcc_parse_file@@Base+0x330>
   15c60:	cmp	r0, #0
   15c64:	bne	15d3c <flatcc_parse_file@@Base+0x2e4>
   15c68:	mov	r0, r4
   15c6c:	bl	14928 <free@plt>
   15c70:	ldr	r6, [r6]
   15c74:	cmp	r6, #0
   15c78:	bne	15c44 <flatcc_parse_file@@Base+0x1ec>
   15c7c:	add	r0, r5, #524	; 0x20c
   15c80:	mov	r1, sl
   15c84:	mov	r2, #1
   15c88:	bl	264c4 <ptr_set_insert_item@@Base>
   15c8c:	mov	r0, r5
   15c90:	bl	2bf9c <__flatcc_fb_build_schema@@Base>
   15c94:	cmp	r0, #0
   15c98:	bne	15a9c <flatcc_parse_file@@Base+0x44>
   15c9c:	ldr	r0, [sp, #12]
   15ca0:	cmp	r0, #0
   15ca4:	bne	15a9c <flatcc_parse_file@@Base+0x44>
   15ca8:	ldr	r0, [r5, #240]	; 0xf0
   15cac:	cmp	r0, #0
   15cb0:	beq	15a9c <flatcc_parse_file@@Base+0x44>
   15cb4:	mov	r0, r5
   15cb8:	bl	15e9c <flatcc_parse_file@@Base+0x444>
   15cbc:	b	15a9c <flatcc_parse_file@@Base+0x44>
   15cc0:	ldr	r0, [r5, #128]	; 0x80
   15cc4:	ldr	r1, [r5, #412]	; 0x19c
   15cc8:	ldr	r1, [r1, #56]	; 0x38
   15ccc:	ldr	r2, [sp, #16]
   15cd0:	add	r1, r1, r2
   15cd4:	cmp	r1, r0
   15cd8:	bls	15ab8 <flatcc_parse_file@@Base+0x60>
   15cdc:	cmp	r0, #0
   15ce0:	bne	15d08 <flatcc_parse_file@@Base+0x2b0>
   15ce4:	b	15ab8 <flatcc_parse_file@@Base+0x60>
   15ce8:	mov	r0, r6
   15cec:	bl	14928 <free@plt>
   15cf0:	ldr	r0, [r5, #128]	; 0x80
   15cf4:	ldr	r1, [sp, #16]
   15cf8:	cmp	r1, r0
   15cfc:	bls	15d20 <flatcc_parse_file@@Base+0x2c8>
   15d00:	cmp	r0, #0
   15d04:	beq	15d20 <flatcc_parse_file@@Base+0x2c8>
   15d08:	movw	r1, #25319	; 0x62e7
   15d0c:	movt	r1, #3
   15d10:	mov	r0, r5
   15d14:	bl	280c4 <__flatcc_fb_print_error@@Base>
   15d18:	mvn	r9, #0
   15d1c:	b	15a9c <flatcc_parse_file@@Base+0x44>
   15d20:	movw	r1, #25355	; 0x630b
   15d24:	movt	r1, #3
   15d28:	mov	r0, r5
   15d2c:	mov	r2, r7
   15d30:	bl	280c4 <__flatcc_fb_print_error@@Base>
   15d34:	mvn	r9, #0
   15d38:	b	15a9c <flatcc_parse_file@@Base+0x44>
   15d3c:	cmp	r4, #0
   15d40:	beq	15a9c <flatcc_parse_file@@Base+0x44>
   15d44:	mov	r0, r4
   15d48:	bl	14928 <free@plt>
   15d4c:	b	15a9c <flatcc_parse_file@@Base+0x44>
   15d50:	cmp	r0, #0
   15d54:	bxne	lr
   15d58:	push	{fp, lr}
   15d5c:	mov	fp, sp
   15d60:	movw	r0, #8368	; 0x20b0
   15d64:	movt	r0, #6
   15d68:	ldr	r3, [r0]
   15d6c:	movw	r0, #25395	; 0x6333
   15d70:	movt	r0, #3
   15d74:	mov	r1, #34	; 0x22
   15d78:	mov	r2, #1
   15d7c:	bl	1497c <fwrite@plt>
   15d80:	mov	r0, #1
   15d84:	bl	149c4 <exit@plt>
   15d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d8c:	add	fp, sp, #28
   15d90:	sub	sp, sp, #4
   15d94:	mov	sl, r1
   15d98:	mov	r5, r0
   15d9c:	ldr	r0, [r0, #132]	; 0x84
   15da0:	ldr	r4, [r5, #412]	; 0x19c
   15da4:	ldr	r1, [r4, #52]	; 0x34
   15da8:	cmp	r1, r0
   15dac:	cmpge	r0, #1
   15db0:	bge	15e20 <flatcc_parse_file@@Base+0x3c8>
   15db4:	ldr	r0, [r5, #136]	; 0x88
   15db8:	ldr	r1, [r4, #48]	; 0x30
   15dbc:	cmp	r1, r0
   15dc0:	cmpge	r0, #1
   15dc4:	bge	15e2c <flatcc_parse_file@@Base+0x3d4>
   15dc8:	add	r0, r5, #128	; 0x80
   15dcc:	mov	r1, sl
   15dd0:	mov	r2, r5
   15dd4:	bl	1624c <flatcc_destroy_context@@Base+0x38>
   15dd8:	mvn	r6, #0
   15ddc:	cmp	r0, #0
   15de0:	beq	15e40 <flatcc_parse_file@@Base+0x3e8>
   15de4:	mov	r7, r0
   15de8:	add	r8, r5, #352	; 0x160
   15dec:	add	r0, r4, #32
   15df0:	add	r9, r7, #352	; 0x160
   15df4:	mov	r1, r9
   15df8:	bl	27928 <fb_schema_table_find_item@@Base>
   15dfc:	cmp	r0, #0
   15e00:	beq	15e4c <flatcc_parse_file@@Base+0x3f4>
   15e04:	mov	r1, r0
   15e08:	mov	r0, r8
   15e0c:	bl	162c4 <flatcc_destroy_context@@Base+0xb0>
   15e10:	mov	r0, r7
   15e14:	bl	16214 <flatcc_destroy_context@@Base>
   15e18:	mov	r6, #0
   15e1c:	b	15e40 <flatcc_parse_file@@Base+0x3e8>
   15e20:	movw	r1, #25430	; 0x6356
   15e24:	movt	r1, #3
   15e28:	b	15e34 <flatcc_parse_file@@Base+0x3dc>
   15e2c:	movw	r1, #25462	; 0x6376
   15e30:	movt	r1, #3
   15e34:	mov	r0, r5
   15e38:	bl	280c4 <__flatcc_fb_print_error@@Base>
   15e3c:	mvn	r6, #0
   15e40:	mov	r0, r6
   15e44:	sub	sp, fp, #28
   15e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e4c:	ldr	r0, [r5]
   15e50:	str	r0, [r7]
   15e54:	str	r7, [r5]
   15e58:	ldr	r0, [r5, #548]	; 0x224
   15e5c:	str	r0, [r7, #552]	; 0x228
   15e60:	ldr	r0, [r4, #48]	; 0x30
   15e64:	ldr	r1, [r4, #52]	; 0x34
   15e68:	add	r1, r1, #1
   15e6c:	add	r0, r0, #1
   15e70:	str	r0, [r4, #48]	; 0x30
   15e74:	str	r1, [r4, #52]	; 0x34
   15e78:	mov	r0, r7
   15e7c:	mov	r1, sl
   15e80:	bl	15a58 <flatcc_parse_file@@Base>
   15e84:	cmp	r0, #0
   15e88:	bne	15e40 <flatcc_parse_file@@Base+0x3e8>
   15e8c:	mov	r0, r8
   15e90:	mov	r1, r9
   15e94:	bl	162c4 <flatcc_destroy_context@@Base+0xb0>
   15e98:	b	15e18 <flatcc_parse_file@@Base+0x3c0>
   15e9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15ea0:	add	fp, sp, #24
   15ea4:	mov	r6, r0
   15ea8:	ldr	r0, [r0, #552]	; 0x228
   15eac:	cmp	r0, #0
   15eb0:	bne	16064 <flatcc_parse_file@@Base+0x60c>
   15eb4:	ldr	r1, [r6, #244]	; 0xf4
   15eb8:	ldr	r7, [r6, #248]	; 0xf8
   15ebc:	ldr	r3, [r6, #344]	; 0x158
   15ec0:	ldr	ip, [r6, #512]	; 0x200
   15ec4:	movw	r2, #25628	; 0x641c
   15ec8:	movt	r2, #3
   15ecc:	movw	r5, #26588	; 0x67dc
   15ed0:	movt	r5, #3
   15ed4:	cmp	r1, #0
   15ed8:	movne	r2, r5
   15edc:	cmp	r3, #0
   15ee0:	moveq	r3, r5
   15ee4:	cmp	r1, #0
   15ee8:	mov	r0, r5
   15eec:	moveq	r0, r3
   15ef0:	moveq	r1, ip
   15ef4:	cmp	r7, #0
   15ef8:	mov	r4, r5
   15efc:	bne	15f24 <flatcc_parse_file@@Base+0x4cc>
   15f00:	ldr	r7, [r6, #308]	; 0x134
   15f04:	movw	r4, #54361	; 0xd459
   15f08:	movt	r4, #4
   15f0c:	movw	r5, #25308	; 0x62dc
   15f10:	movt	r5, #3
   15f14:	cmp	r7, #0
   15f18:	moveq	r5, r4
   15f1c:	mov	r7, ip
   15f20:	mov	r4, r3
   15f24:	mov	r3, #1
   15f28:	bl	27cf0 <__flatcc_fb_create_join_path@@Base>
   15f2c:	mov	r8, r0
   15f30:	bl	15d50 <flatcc_parse_file@@Base+0x2f8>
   15f34:	mov	r0, r4
   15f38:	mov	r1, r7
   15f3c:	mov	r2, r5
   15f40:	mov	r3, #1
   15f44:	bl	27cf0 <__flatcc_fb_create_join_path@@Base>
   15f48:	mov	r4, r0
   15f4c:	bl	15d50 <flatcc_parse_file@@Base+0x2f8>
   15f50:	mov	r0, r4
   15f54:	bl	27efc <__flatcc_fb_create_make_path@@Base>
   15f58:	mov	r9, r0
   15f5c:	bl	15d50 <flatcc_parse_file@@Base+0x2f8>
   15f60:	cmp	r4, #0
   15f64:	beq	15f70 <flatcc_parse_file@@Base+0x518>
   15f68:	mov	r0, r4
   15f6c:	bl	14928 <free@plt>
   15f70:	movw	r1, #25635	; 0x6423
   15f74:	movt	r1, #3
   15f78:	mov	r0, r8
   15f7c:	bl	1491c <fopen@plt>
   15f80:	mov	r7, r0
   15f84:	cmp	r0, #0
   15f88:	beq	16040 <flatcc_parse_file@@Base+0x5e8>
   15f8c:	movw	r1, #25685	; 0x6455
   15f90:	movt	r1, #3
   15f94:	mov	r0, r7
   15f98:	mov	r2, r9
   15f9c:	bl	149f4 <fprintf@plt>
   15fa0:	ldr	r5, [r6]
   15fa4:	cmp	r5, #0
   15fa8:	beq	15ff8 <flatcc_parse_file@@Base+0x5a0>
   15fac:	movw	r6, #25689	; 0x6459
   15fb0:	movt	r6, #3
   15fb4:	b	15fc0 <flatcc_parse_file@@Base+0x568>
   15fb8:	cmp	r5, #0
   15fbc:	beq	15ff8 <flatcc_parse_file@@Base+0x5a0>
   15fc0:	ldr	r0, [r5, #548]	; 0x224
   15fc4:	bl	27efc <__flatcc_fb_create_make_path@@Base>
   15fc8:	mov	r4, r0
   15fcc:	bl	15d50 <flatcc_parse_file@@Base+0x2f8>
   15fd0:	mov	r0, r7
   15fd4:	mov	r1, r6
   15fd8:	mov	r2, r4
   15fdc:	bl	149f4 <fprintf@plt>
   15fe0:	ldr	r5, [r5]
   15fe4:	cmp	r4, #0
   15fe8:	beq	15fb8 <flatcc_parse_file@@Base+0x560>
   15fec:	mov	r0, r4
   15ff0:	bl	14928 <free@plt>
   15ff4:	b	15fb8 <flatcc_parse_file@@Base+0x560>
   15ff8:	mov	r0, #10
   15ffc:	mov	r1, r7
   16000:	bl	14958 <fputc_unlocked@plt>
   16004:	mov	r6, #0
   16008:	cmp	r8, #0
   1600c:	beq	16018 <flatcc_parse_file@@Base+0x5c0>
   16010:	mov	r0, r8
   16014:	bl	14928 <free@plt>
   16018:	cmp	r9, #0
   1601c:	beq	16028 <flatcc_parse_file@@Base+0x5d0>
   16020:	mov	r0, r9
   16024:	bl	14928 <free@plt>
   16028:	cmp	r7, #0
   1602c:	beq	16038 <flatcc_parse_file@@Base+0x5e0>
   16030:	mov	r0, r7
   16034:	bl	14a3c <fclose@plt>
   16038:	mov	r0, r6
   1603c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16040:	movw	r1, #25638	; 0x6426
   16044:	movt	r1, #3
   16048:	mov	r0, r6
   1604c:	mov	r2, r8
   16050:	bl	280c4 <__flatcc_fb_print_error@@Base>
   16054:	mvn	r6, #0
   16058:	cmp	r8, #0
   1605c:	bne	16010 <flatcc_parse_file@@Base+0x5b8>
   16060:	b	16018 <flatcc_parse_file@@Base+0x5c0>
   16064:	movw	r0, #25492	; 0x6394
   16068:	movt	r0, #3
   1606c:	movw	r1, #25513	; 0x63a9
   16070:	movt	r1, #3
   16074:	movw	r3, #25583	; 0x63ef
   16078:	movt	r3, #3
   1607c:	mov	r2, #220	; 0xdc
   16080:	bl	14ab4 <__assert_fail@plt>

00016084 <flatcc_generate_binary_schema_to_buffer@@Base>:
   16084:	push	{fp, lr}
   16088:	mov	fp, sp
   1608c:	sub	sp, sp, #8
   16090:	mov	ip, r1
   16094:	str	r2, [sp, #4]
   16098:	add	r2, r0, #128	; 0x80
   1609c:	add	r1, r0, #352	; 0x160
   160a0:	add	r3, sp, #4
   160a4:	mov	r0, r2
   160a8:	mov	r2, ip
   160ac:	bl	23ac0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   160b0:	ldr	r1, [sp, #4]
   160b4:	cmp	r0, #0
   160b8:	mvneq	r1, #0
   160bc:	mov	r0, r1
   160c0:	mov	sp, fp
   160c4:	pop	{fp, pc}

000160c8 <flatcc_generate_binary_schema@@Base>:
   160c8:	mov	r2, r1
   160cc:	add	r3, r0, #128	; 0x80
   160d0:	add	r1, r0, #352	; 0x160
   160d4:	mov	r0, r3
   160d8:	b	23cbc <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

000160dc <flatcc_generate_files@@Base>:
   160dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   160e0:	add	fp, sp, #24
   160e4:	sub	sp, sp, #232	; 0xe8
   160e8:	mvn	r4, #0
   160ec:	cmp	r0, #0
   160f0:	beq	16104 <flatcc_generate_files@@Base+0x28>
   160f4:	mov	r5, r0
   160f8:	ldr	r0, [r0, #108]	; 0x6c
   160fc:	cmp	r0, #0
   16100:	beq	16110 <flatcc_generate_files@@Base+0x34>
   16104:	mov	r0, r4
   16108:	sub	sp, fp, #24
   1610c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16110:	mov	r0, #0
   16114:	mov	r1, r5
   16118:	mov	r7, r1
   1611c:	str	r0, [r1, #4]
   16120:	ldr	r1, [r1]
   16124:	cmp	r1, #0
   16128:	mov	r0, r7
   1612c:	bne	16118 <flatcc_generate_files@@Base+0x3c>
   16130:	ldr	r0, [r5, #308]	; 0x134
   16134:	add	r6, r5, #128	; 0x80
   16138:	cmp	r0, #0
   1613c:	beq	16154 <flatcc_generate_files@@Base+0x78>
   16140:	add	r1, r5, #352	; 0x160
   16144:	mov	r0, r6
   16148:	bl	23d30 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   1614c:	cmp	r0, #0
   16150:	bne	16104 <flatcc_generate_files@@Base+0x28>
   16154:	mov	r0, sp
   16158:	mov	r1, r6
   1615c:	bl	1646c <__flatcc_fb_init_output_c@@Base>
   16160:	cmp	r0, #0
   16164:	bne	16104 <flatcc_generate_files@@Base+0x28>
   16168:	ldr	r0, [r5, #256]	; 0x100
   1616c:	cmp	r0, #0
   16170:	beq	161d8 <flatcc_generate_files@@Base+0xfc>
   16174:	ldr	r0, [r5, #120]	; 0x78
   16178:	mov	r4, #0
   1617c:	cmp	r0, #0
   16180:	beq	16208 <flatcc_generate_files@@Base+0x12c>
   16184:	ldr	r0, [r5, #300]	; 0x12c
   16188:	cmp	r0, #0
   1618c:	beq	161f0 <flatcc_generate_files@@Base+0x114>
   16190:	cmp	r7, #0
   16194:	beq	16208 <flatcc_generate_files@@Base+0x12c>
   16198:	mov	r5, sp
   1619c:	ldr	r0, [r7, #108]	; 0x6c
   161a0:	cmp	r0, #0
   161a4:	bne	16204 <flatcc_generate_files@@Base+0x128>
   161a8:	add	r1, r7, #352	; 0x160
   161ac:	mov	r0, r5
   161b0:	bl	169c8 <__flatcc_fb_codegen_c@@Base>
   161b4:	cmp	r0, #0
   161b8:	mov	r4, r0
   161bc:	movwne	r4, #1
   161c0:	ldr	r7, [r7, #4]
   161c4:	cmp	r7, #0
   161c8:	beq	16208 <flatcc_generate_files@@Base+0x12c>
   161cc:	cmp	r0, #0
   161d0:	beq	1619c <flatcc_generate_files@@Base+0xc0>
   161d4:	b	16208 <flatcc_generate_files@@Base+0x12c>
   161d8:	mov	r0, sp
   161dc:	bl	16908 <__flatcc_fb_codegen_common_c@@Base>
   161e0:	mov	r4, r0
   161e4:	cmp	r0, #0
   161e8:	bne	16208 <flatcc_generate_files@@Base+0x12c>
   161ec:	b	16174 <flatcc_generate_files@@Base+0x98>
   161f0:	add	r1, r5, #352	; 0x160
   161f4:	mov	r0, sp
   161f8:	bl	169c8 <__flatcc_fb_codegen_c@@Base>
   161fc:	mov	r4, r0
   16200:	b	16208 <flatcc_generate_files@@Base+0x12c>
   16204:	mov	r4, #1
   16208:	mov	r0, sp
   1620c:	bl	16430 <__flatcc_fb_end_output_c@@Base>
   16210:	b	16104 <flatcc_generate_files@@Base+0x28>

00016214 <flatcc_destroy_context@@Base>:
   16214:	push	{r4, r5, fp, lr}
   16218:	add	fp, sp, #8
   1621c:	cmp	r0, #0
   16220:	popeq	{r4, r5, fp, pc}
   16224:	mov	r4, r0
   16228:	ldr	r5, [r4]
   1622c:	mov	r0, r4
   16230:	bl	297f8 <__flatcc_fb_clear_parser@@Base>
   16234:	mov	r0, r4
   16238:	bl	14928 <free@plt>
   1623c:	cmp	r5, #0
   16240:	mov	r4, r5
   16244:	bne	16228 <flatcc_destroy_context@@Base+0x14>
   16248:	pop	{r4, r5, fp, pc}
   1624c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16250:	add	fp, sp, #24
   16254:	sub	sp, sp, #8
   16258:	mov	r6, r2
   1625c:	mov	r8, r1
   16260:	mov	r7, r0
   16264:	mov	r0, #560	; 0x230
   16268:	bl	14994 <malloc@plt>
   1626c:	mov	r4, #0
   16270:	cmp	r0, #0
   16274:	beq	162b8 <flatcc_destroy_context@@Base+0xa4>
   16278:	mov	r5, r0
   1627c:	ldr	r3, [r6, #8]
   16280:	ldr	r1, [r6, #12]
   16284:	ldr	r0, [r6, #412]	; 0x19c
   16288:	str	r1, [sp]
   1628c:	str	r0, [sp, #4]
   16290:	mov	r0, r5
   16294:	mov	r1, r7
   16298:	mov	r2, r8
   1629c:	bl	28408 <__flatcc_fb_init_parser@@Base>
   162a0:	cmp	r0, #0
   162a4:	beq	162b4 <flatcc_destroy_context@@Base+0xa0>
   162a8:	mov	r0, r5
   162ac:	bl	14928 <free@plt>
   162b0:	b	162b8 <flatcc_destroy_context@@Base+0xa4>
   162b4:	mov	r4, r5
   162b8:	mov	r0, r4
   162bc:	sub	sp, fp, #24
   162c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   162c4:	mov	r2, r0
   162c8:	add	r0, r1, #172	; 0xac
   162cc:	movw	r1, #25304	; 0x62d8
   162d0:	movt	r1, #1
   162d4:	b	2665c <ptr_set_visit@@Base>
   162d8:	add	r0, r0, #172	; 0xac
   162dc:	mov	r2, #1
   162e0:	b	264c4 <ptr_set_insert_item@@Base>

000162e4 <__flatcc_fb_open_output_file@@Base>:
   162e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   162e8:	add	fp, sp, #24
   162ec:	sub	sp, sp, #8
   162f0:	mov	r9, r1
   162f4:	mov	r4, r0
   162f8:	ldr	r0, [r0, #204]	; 0xcc
   162fc:	ldr	r1, [r4, #212]	; 0xd4
   16300:	ldr	r1, [r1, #216]	; 0xd8
   16304:	movw	r6, #26588	; 0x67dc
   16308:	movt	r6, #3
   1630c:	cmp	r1, #0
   16310:	movne	r6, r1
   16314:	mov	r5, #0
   16318:	cmp	r0, #0
   1631c:	bne	16380 <__flatcc_fb_open_output_file@@Base+0x9c>
   16320:	mov	r7, r3
   16324:	mov	r8, r2
   16328:	mov	r0, r6
   1632c:	bl	149dc <strlen@plt>
   16330:	mov	r1, r0
   16334:	mov	r0, #1
   16338:	str	r7, [sp]
   1633c:	str	r0, [sp, #4]
   16340:	mov	r0, r6
   16344:	mov	r2, r9
   16348:	mov	r3, r8
   1634c:	bl	27bd4 <__flatcc_fb_create_join_path_n@@Base>
   16350:	mov	r6, r0
   16354:	bl	163b0 <__flatcc_fb_open_output_file@@Base+0xcc>
   16358:	movw	r1, #25635	; 0x6423
   1635c:	movt	r1, #3
   16360:	mov	r0, r6
   16364:	bl	1491c <fopen@plt>
   16368:	str	r0, [r4, #204]	; 0xcc
   1636c:	mov	r5, #0
   16370:	cmp	r0, #0
   16374:	beq	1638c <__flatcc_fb_open_output_file@@Base+0xa8>
   16378:	mov	r0, r6
   1637c:	bl	14928 <free@plt>
   16380:	mov	r0, r5
   16384:	sub	sp, fp, #24
   16388:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1638c:	movw	r0, #8368	; 0x20b0
   16390:	movt	r0, #6
   16394:	ldr	r0, [r0]
   16398:	movw	r1, #25693	; 0x645d
   1639c:	movt	r1, #3
   163a0:	mov	r2, r6
   163a4:	bl	149f4 <fprintf@plt>
   163a8:	mvn	r5, #0
   163ac:	b	16378 <__flatcc_fb_open_output_file@@Base+0x94>
   163b0:	cmp	r0, #0
   163b4:	bxne	lr
   163b8:	push	{fp, lr}
   163bc:	mov	fp, sp
   163c0:	movw	r0, #8368	; 0x20b0
   163c4:	movt	r0, #6
   163c8:	ldr	r3, [r0]
   163cc:	movw	r0, #25395	; 0x6333
   163d0:	movt	r0, #3
   163d4:	mov	r1, #34	; 0x22
   163d8:	mov	r2, #1
   163dc:	bl	1497c <fwrite@plt>
   163e0:	mov	r0, #1
   163e4:	bl	149c4 <exit@plt>

000163e8 <__flatcc_fb_close_output_file@@Base>:
   163e8:	push	{r4, sl, fp, lr}
   163ec:	add	fp, sp, #8
   163f0:	mov	r4, r0
   163f4:	ldr	r0, [r0, #212]	; 0xd4
   163f8:	ldr	r1, [r0, #124]	; 0x7c
   163fc:	cmp	r1, #0
   16400:	bne	16410 <__flatcc_fb_close_output_file@@Base+0x28>
   16404:	ldr	r0, [r0, #108]	; 0x6c
   16408:	cmp	r0, #0
   1640c:	beq	16414 <__flatcc_fb_close_output_file@@Base+0x2c>
   16410:	pop	{r4, sl, fp, pc}
   16414:	ldr	r0, [r4, #204]	; 0xcc
   16418:	cmp	r0, #0
   1641c:	popeq	{r4, sl, fp, pc}
   16420:	bl	14a3c <fclose@plt>
   16424:	mov	r0, #0
   16428:	str	r0, [r4, #204]	; 0xcc
   1642c:	pop	{r4, sl, fp, pc}

00016430 <__flatcc_fb_end_output_c@@Base>:
   16430:	push	{r4, sl, fp, lr}
   16434:	add	fp, sp, #8
   16438:	mov	r4, r0
   1643c:	ldr	r0, [r0, #204]	; 0xcc
   16440:	cmp	r0, #0
   16444:	beq	16460 <__flatcc_fb_end_output_c@@Base+0x30>
   16448:	movw	r1, #8372	; 0x20b4
   1644c:	movt	r1, #6
   16450:	ldr	r1, [r1]
   16454:	cmp	r0, r1
   16458:	beq	16460 <__flatcc_fb_end_output_c@@Base+0x30>
   1645c:	bl	14a3c <fclose@plt>
   16460:	mov	r0, #0
   16464:	str	r0, [r4, #204]	; 0xcc
   16468:	pop	{r4, sl, fp, pc}

0001646c <__flatcc_fb_init_output_c@@Base>:
   1646c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16470:	add	fp, sp, #28
   16474:	sub	sp, sp, #4
   16478:	mov	r6, r1
   1647c:	mov	r4, r0
   16480:	ldr	r5, [r1, #128]	; 0x80
   16484:	ldr	r7, [r1, #216]	; 0xd8
   16488:	mov	sl, #0
   1648c:	mov	r1, #0
   16490:	mov	r2, #232	; 0xe8
   16494:	bl	14a0c <memset@plt>
   16498:	str	r6, [r4, #212]	; 0xd4
   1649c:	movw	r0, #25635	; 0x6423
   164a0:	movt	r0, #3
   164a4:	movw	r8, #25727	; 0x647f
   164a8:	movt	r8, #3
   164ac:	cmp	r5, #0
   164b0:	moveq	r8, r0
   164b4:	movw	r9, #26588	; 0x67dc
   164b8:	movt	r9, #3
   164bc:	cmp	r7, #0
   164c0:	movne	r9, r7
   164c4:	ldr	r5, [r6, #196]	; 0xc4
   164c8:	cmp	r5, #0
   164cc:	beq	16508 <__flatcc_fb_init_output_c@@Base+0x9c>
   164d0:	mov	r0, r5
   164d4:	bl	149dc <strlen@plt>
   164d8:	mov	r7, r0
   164dc:	cmp	r0, #101	; 0x65
   164e0:	bcc	16514 <__flatcc_fb_init_output_c@@Base+0xa8>
   164e4:	movw	r0, #8368	; 0x20b0
   164e8:	movt	r0, #6
   164ec:	ldr	r0, [r0]
   164f0:	movw	r1, #25730	; 0x6482
   164f4:	movt	r1, #3
   164f8:	mov	r2, #100	; 0x64
   164fc:	bl	149f4 <fprintf@plt>
   16500:	mvn	sl, #0
   16504:	b	16574 <__flatcc_fb_init_output_c@@Base+0x108>
   16508:	movw	r5, #25785	; 0x64b9
   1650c:	movt	r5, #3
   16510:	mov	r7, #11
   16514:	mov	r0, r4
   16518:	mov	r1, r5
   1651c:	mov	r2, #100	; 0x64
   16520:	bl	14a18 <strncpy@plt>
   16524:	strb	sl, [r4, #100]	; 0x64
   16528:	cmp	r7, #0
   1652c:	addne	r0, r4, r7
   16530:	movne	r1, #95	; 0x5f
   16534:	strhne	r1, [r0]
   16538:	add	r5, r4, #102	; 0x66
   1653c:	mov	r0, r5
   16540:	mov	r1, r4
   16544:	bl	16608 <__flatcc_fb_init_output_c@@Base+0x19c>
   16548:	mov	sl, #0
   1654c:	strb	sl, [r5, r7]
   16550:	ldr	r0, [r6, #176]	; 0xb0
   16554:	str	r0, [r4, #224]	; 0xe0
   16558:	ldr	r0, [r6, #108]	; 0x6c
   1655c:	cmp	r0, #0
   16560:	beq	16580 <__flatcc_fb_init_output_c@@Base+0x114>
   16564:	movw	r0, #8372	; 0x20b4
   16568:	movt	r0, #6
   1656c:	ldr	r0, [r0]
   16570:	str	r0, [r4, #204]	; 0xcc
   16574:	mov	r0, sl
   16578:	sub	sp, fp, #28
   1657c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16580:	ldr	r0, [r4, #212]	; 0xd4
   16584:	ldr	r1, [r0, #124]	; 0x7c
   16588:	cmp	r1, #0
   1658c:	beq	16574 <__flatcc_fb_init_output_c@@Base+0x108>
   16590:	movw	r2, #26588	; 0x67dc
   16594:	movt	r2, #3
   16598:	mov	r0, r9
   1659c:	mov	r3, #1
   165a0:	bl	27cf0 <__flatcc_fb_create_join_path@@Base>
   165a4:	mov	r6, r0
   165a8:	bl	163b0 <__flatcc_fb_open_output_file@@Base+0xcc>
   165ac:	mov	r0, r6
   165b0:	mov	r1, r8
   165b4:	bl	1491c <fopen@plt>
   165b8:	str	r0, [r4, #204]	; 0xcc
   165bc:	mov	sl, #0
   165c0:	cmp	r0, #0
   165c4:	beq	165dc <__flatcc_fb_init_output_c@@Base+0x170>
   165c8:	cmp	r6, #0
   165cc:	beq	16574 <__flatcc_fb_init_output_c@@Base+0x108>
   165d0:	mov	r0, r6
   165d4:	bl	14928 <free@plt>
   165d8:	b	16574 <__flatcc_fb_init_output_c@@Base+0x108>
   165dc:	movw	r0, #8368	; 0x20b0
   165e0:	movt	r0, #6
   165e4:	ldr	r0, [r0]
   165e8:	movw	r1, #25693	; 0x645d
   165ec:	movt	r1, #3
   165f0:	mov	r2, r6
   165f4:	bl	149f4 <fprintf@plt>
   165f8:	mvn	sl, #0
   165fc:	cmp	r6, #0
   16600:	bne	165d0 <__flatcc_fb_init_output_c@@Base+0x164>
   16604:	b	16574 <__flatcc_fb_init_output_c@@Base+0x108>
   16608:	push	{r4, r5, r6, sl, fp, lr}
   1660c:	add	fp, sp, #16
   16610:	mov	r4, r0
   16614:	ldrb	r5, [r1]
   16618:	cmp	r5, #0
   1661c:	beq	16644 <__flatcc_fb_init_output_c@@Base+0x1d8>
   16620:	add	r6, r1, #1
   16624:	bl	149ac <__ctype_toupper_loc@plt>
   16628:	ldr	r1, [r0]
   1662c:	uxtb	r2, r5
   16630:	ldr	r1, [r1, r2, lsl #2]
   16634:	strb	r1, [r4], #1
   16638:	ldrb	r5, [r6], #1
   1663c:	cmp	r5, #0
   16640:	bne	16628 <__flatcc_fb_init_output_c@@Base+0x1bc>
   16644:	mov	r0, #0
   16648:	strb	r0, [r4]
   1664c:	pop	{r4, r5, r6, sl, fp, pc}

00016650 <__flatcc_fb_gen_c_includes@@Base>:
   16650:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16654:	add	fp, sp, #28
   16658:	sub	sp, sp, #36	; 0x24
   1665c:	str	r2, [sp, #12]
   16660:	str	r1, [sp, #8]
   16664:	mov	r6, r0
   16668:	ldr	r0, [r0, #208]	; 0xd0
   1666c:	ldr	r8, [r0]
   16670:	vmov.i32	q8, #0	; 0x00000000
   16674:	add	r4, sp, #16
   16678:	vst1.64	{d16-d17}, [r4]
   1667c:	ldr	r0, [r0, #164]	; 0xa4
   16680:	bl	27b28 <__flatcc_fb_copy_path@@Base>
   16684:	mov	r1, r0
   16688:	mov	r0, r4
   1668c:	mov	r2, #1
   16690:	bl	25ee0 <str_set_insert_item@@Base>
   16694:	cmp	r8, #0
   16698:	beq	1675c <__flatcc_fb_gen_c_includes@@Base+0x10c>
   1669c:	add	r7, sp, #16
   166a0:	b	166bc <__flatcc_fb_gen_c_includes@@Base+0x6c>
   166a4:	mov	r0, r5
   166a8:	bl	14928 <free@plt>
   166ac:	mov	r0, r4
   166b0:	bl	14928 <free@plt>
   166b4:	cmp	r8, #0
   166b8:	beq	1675c <__flatcc_fb_gen_c_includes@@Base+0x10c>
   166bc:	ldrd	r0, [r8, #8]
   166c0:	ldr	r2, [r6, #212]	; 0xd4
   166c4:	ldr	r2, [r2, #96]	; 0x60
   166c8:	bl	27f48 <__flatcc_fb_create_basename@@Base>
   166cc:	mov	r4, r0
   166d0:	bl	163b0 <__flatcc_fb_open_output_file@@Base+0xcc>
   166d4:	ldr	r8, [r8]
   166d8:	mov	r0, r4
   166dc:	bl	27b28 <__flatcc_fb_copy_path@@Base>
   166e0:	mov	r5, r0
   166e4:	bl	163b0 <__flatcc_fb_open_output_file@@Base+0xcc>
   166e8:	ldrb	r9, [r5]
   166ec:	cmp	r9, #0
   166f0:	beq	1671c <__flatcc_fb_gen_c_includes@@Base+0xcc>
   166f4:	add	sl, r5, #1
   166f8:	bl	149ac <__ctype_toupper_loc@plt>
   166fc:	ldr	r1, [r0]
   16700:	uxtb	r2, r9
   16704:	ldr	r1, [r1, r2, lsl #2]
   16708:	strb	r1, [sl, #-1]
   1670c:	ldrb	r9, [sl]
   16710:	add	sl, sl, #1
   16714:	cmp	r9, #0
   16718:	bne	166fc <__flatcc_fb_gen_c_includes@@Base+0xac>
   1671c:	mov	r0, r7
   16720:	mov	r1, r5
   16724:	mov	r2, #1
   16728:	bl	25ee0 <str_set_insert_item@@Base>
   1672c:	cmp	r0, #0
   16730:	bne	166a4 <__flatcc_fb_gen_c_includes@@Base+0x54>
   16734:	ldr	r0, [r6, #204]	; 0xcc
   16738:	str	r4, [sp]
   1673c:	ldr	r1, [sp, #8]
   16740:	str	r1, [sp, #4]
   16744:	movw	r1, #25797	; 0x64c5
   16748:	movt	r1, #3
   1674c:	mov	r2, r5
   16750:	ldr	r3, [sp, #12]
   16754:	bl	149f4 <fprintf@plt>
   16758:	b	166ac <__flatcc_fb_gen_c_includes@@Base+0x5c>
   1675c:	add	r0, sp, #16
   16760:	movw	r1, #26488	; 0x6778
   16764:	movt	r1, #1
   16768:	mov	r2, #0
   1676c:	bl	25b60 <str_set_destroy@@Base>
   16770:	sub	sp, fp, #28
   16774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16778:	mov	r0, r1
   1677c:	b	14928 <free@plt>

00016780 <__flatcc_fb_copy_scope@@Base>:
   16780:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16784:	add	fp, sp, #24
   16788:	mov	r4, r1
   1678c:	mov	r6, r0
   16790:	ldr	r1, [r0]
   16794:	ldr	r5, [r0, #24]
   16798:	cmp	r1, #0
   1679c:	mov	r0, r5
   167a0:	beq	167c8 <__flatcc_fb_copy_scope@@Base+0x48>
   167a4:	mov	r0, r5
   167a8:	ldr	r2, [r1]
   167ac:	ldr	r1, [r1, #4]
   167b0:	ldr	r1, [r1, #4]
   167b4:	add	r0, r0, r1
   167b8:	add	r0, r0, #1
   167bc:	cmp	r2, #0
   167c0:	mov	r1, r2
   167c4:	bne	167a8 <__flatcc_fb_copy_scope@@Base+0x28>
   167c8:	cmp	r0, #101	; 0x65
   167cc:	bls	167d8 <__flatcc_fb_copy_scope@@Base+0x58>
   167d0:	mvn	r5, #0
   167d4:	b	16828 <__flatcc_fb_copy_scope@@Base+0xa8>
   167d8:	ldr	r1, [r6, #20]
   167dc:	mov	r0, r4
   167e0:	mov	r2, r5
   167e4:	bl	14934 <memcpy@plt>
   167e8:	ldr	r7, [r6]
   167ec:	cmp	r7, #0
   167f0:	beq	16824 <__flatcc_fb_copy_scope@@Base+0xa4>
   167f4:	mov	r8, #95	; 0x5f
   167f8:	add	r0, r4, r5
   167fc:	ldr	r2, [r7, #4]
   16800:	ldm	r2, {r1, r6}
   16804:	mov	r2, r6
   16808:	bl	14934 <memcpy@plt>
   1680c:	add	r0, r6, r5
   16810:	strb	r8, [r4, r0]
   16814:	add	r5, r0, #1
   16818:	ldr	r7, [r7]
   1681c:	cmp	r7, #0
   16820:	bne	167f8 <__flatcc_fb_copy_scope@@Base+0x78>
   16824:	add	r4, r4, r5
   16828:	mov	r0, #0
   1682c:	strb	r0, [r4]
   16830:	mov	r0, r5
   16834:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016838 <__flatcc_fb_scoped_symbol_name@@Base>:
   16838:	push	{r4, r5, fp, lr}
   1683c:	add	fp, sp, #8
   16840:	mov	r4, r2
   16844:	ldr	r5, [r1, #4]
   16848:	ldr	r1, [r2, #204]	; 0xcc
   1684c:	cmp	r1, r0
   16850:	beq	16868 <__flatcc_fb_scoped_symbol_name@@Base+0x30>
   16854:	mov	r1, r4
   16858:	bl	16780 <__flatcc_fb_copy_scope@@Base>
   1685c:	str	r0, [r4, #208]	; 0xd0
   16860:	cmn	r0, #1
   16864:	ble	168dc <__flatcc_fb_scoped_symbol_name@@Base+0xa4>
   16868:	ldr	r2, [r5, #4]
   1686c:	ldr	r0, [r4, #208]	; 0xd0
   16870:	add	r0, r0, r2
   16874:	str	r2, [r4, #212]	; 0xd4
   16878:	str	r0, [r4, #216]	; 0xd8
   1687c:	cmp	r0, #204	; 0xcc
   16880:	bge	168a8 <__flatcc_fb_scoped_symbol_name@@Base+0x70>
   16884:	ldr	r0, [r4, #208]	; 0xd0
   16888:	ldr	r2, [r4, #212]	; 0xd4
   1688c:	add	r0, r4, r0
   16890:	ldr	r1, [r5]
   16894:	bl	14934 <memcpy@plt>
   16898:	ldr	r0, [r4, #216]	; 0xd8
   1689c:	mov	r1, #0
   168a0:	strb	r1, [r4, r0]
   168a4:	pop	{r4, r5, fp, pc}
   168a8:	ldr	r3, [r5]
   168ac:	movw	r0, #8368	; 0x20b0
   168b0:	movt	r0, #6
   168b4:	ldr	r0, [r0]
   168b8:	movw	r1, #25863	; 0x6507
   168bc:	movt	r1, #3
   168c0:	bl	149f4 <fprintf@plt>
   168c4:	mov	r0, #203	; 0xcb
   168c8:	ldr	r1, [r4, #208]	; 0xd0
   168cc:	rsb	r1, r1, #203	; 0xcb
   168d0:	str	r1, [r4, #212]	; 0xd4
   168d4:	str	r0, [r4, #216]	; 0xd8
   168d8:	b	16884 <__flatcc_fb_scoped_symbol_name@@Base+0x4c>
   168dc:	mov	r0, #0
   168e0:	str	r0, [r4, #208]	; 0xd0
   168e4:	movw	r0, #8368	; 0x20b0
   168e8:	movt	r0, #6
   168ec:	ldr	r3, [r0]
   168f0:	movw	r0, #25834	; 0x64ea
   168f4:	movt	r0, #3
   168f8:	mov	r1, #28
   168fc:	mov	r2, #1
   16900:	bl	1497c <fwrite@plt>
   16904:	b	16868 <__flatcc_fb_scoped_symbol_name@@Base+0x30>

00016908 <__flatcc_fb_codegen_common_c@@Base>:
   16908:	push	{r4, r5, r6, sl, fp, lr}
   1690c:	add	fp, sp, #16
   16910:	mov	r4, r0
   16914:	bl	149dc <strlen@plt>
   16918:	sub	r5, r0, #1
   1691c:	ldr	r0, [r4, #212]	; 0xd4
   16920:	ldr	r0, [r0, #144]	; 0x90
   16924:	cmp	r0, #0
   16928:	beq	1696c <__flatcc_fb_codegen_common_c@@Base+0x64>
   1692c:	movw	r3, #25901	; 0x652d
   16930:	movt	r3, #3
   16934:	mov	r0, r4
   16938:	mov	r1, r4
   1693c:	mov	r2, r5
   16940:	bl	162e4 <__flatcc_fb_open_output_file@@Base>
   16944:	mvn	r6, #0
   16948:	cmp	r0, #0
   1694c:	bne	169a4 <__flatcc_fb_codegen_common_c@@Base+0x9c>
   16950:	mov	r0, r4
   16954:	bl	16bac <__flatcc_fb_gen_common_c_header@@Base>
   16958:	mov	r6, r0
   1695c:	mov	r0, r4
   16960:	bl	163e8 <__flatcc_fb_close_output_file@@Base>
   16964:	cmp	r6, #0
   16968:	bne	169a4 <__flatcc_fb_codegen_common_c@@Base+0x9c>
   1696c:	ldr	r0, [r4, #212]	; 0xd4
   16970:	ldr	r0, [r0, #148]	; 0x94
   16974:	mov	r6, #0
   16978:	cmp	r0, #0
   1697c:	beq	169a4 <__flatcc_fb_codegen_common_c@@Base+0x9c>
   16980:	movw	r3, #25918	; 0x653e
   16984:	movt	r3, #3
   16988:	mov	r0, r4
   1698c:	mov	r1, r4
   16990:	mov	r2, r5
   16994:	bl	162e4 <__flatcc_fb_open_output_file@@Base>
   16998:	mvn	r6, #0
   1699c:	cmp	r0, #0
   169a0:	beq	169ac <__flatcc_fb_codegen_common_c@@Base+0xa4>
   169a4:	mov	r0, r6
   169a8:	pop	{r4, r5, r6, sl, fp, pc}
   169ac:	mov	r0, r4
   169b0:	bl	19cb4 <__flatcc_fb_gen_common_c_builder_header@@Base>
   169b4:	mov	r0, r4
   169b8:	bl	163e8 <__flatcc_fb_close_output_file@@Base>
   169bc:	mov	r6, #0
   169c0:	mov	r0, r6
   169c4:	pop	{r4, r5, r6, sl, fp, pc}

000169c8 <__flatcc_fb_codegen_c@@Base>:
   169c8:	push	{r4, r5, r6, sl, fp, lr}
   169cc:	add	fp, sp, #16
   169d0:	mov	r4, r0
   169d4:	str	r1, [r0, #208]	; 0xd0
   169d8:	ldr	r0, [r1, #60]	; 0x3c
   169dc:	mov	r1, #0
   169e0:	mov	r2, #0
   169e4:	bl	270f8 <fb_scope_table_find@@Base>
   169e8:	str	r0, [r4, #216]	; 0xd8
   169ec:	ldr	r0, [r4, #208]	; 0xd0
   169f0:	ldr	r6, [r0, #160]	; 0xa0
   169f4:	mov	r0, r6
   169f8:	bl	149dc <strlen@plt>
   169fc:	mov	r5, r0
   16a00:	ldr	r0, [r4, #212]	; 0xd4
   16a04:	ldr	r0, [r0, #152]	; 0x98
   16a08:	cmp	r0, #0
   16a0c:	beq	16a50 <__flatcc_fb_codegen_c@@Base+0x88>
   16a10:	movw	r3, #54361	; 0xd459
   16a14:	movt	r3, #4
   16a18:	mov	r0, r4
   16a1c:	mov	r1, r6
   16a20:	mov	r2, r5
   16a24:	bl	162e4 <__flatcc_fb_open_output_file@@Base>
   16a28:	mov	r1, r0
   16a2c:	mvn	r0, #0
   16a30:	cmp	r1, #0
   16a34:	bne	16ba8 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16a38:	mov	r0, r4
   16a3c:	bl	174e4 <__flatcc_fb_gen_c_reader@@Base>
   16a40:	cmp	r0, #0
   16a44:	bne	16ba8 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16a48:	mov	r0, r4
   16a4c:	bl	163e8 <__flatcc_fb_close_output_file@@Base>
   16a50:	ldr	r0, [r4, #212]	; 0xd4
   16a54:	ldr	r0, [r0, #156]	; 0x9c
   16a58:	cmp	r0, #0
   16a5c:	beq	16aa4 <__flatcc_fb_codegen_c@@Base+0xdc>
   16a60:	ldr	r0, [r4, #208]	; 0xd0
   16a64:	ldr	r1, [r0, #160]	; 0xa0
   16a68:	movw	r3, #53081	; 0xcf59
   16a6c:	movt	r3, #4
   16a70:	mov	r0, r4
   16a74:	mov	r2, r5
   16a78:	bl	162e4 <__flatcc_fb_open_output_file@@Base>
   16a7c:	mov	r1, r0
   16a80:	mvn	r0, #0
   16a84:	cmp	r1, #0
   16a88:	bne	16ba8 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16a8c:	mov	r0, r4
   16a90:	bl	1a574 <__flatcc_fb_gen_c_builder@@Base>
   16a94:	cmp	r0, #0
   16a98:	bne	16ba8 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16a9c:	mov	r0, r4
   16aa0:	bl	163e8 <__flatcc_fb_close_output_file@@Base>
   16aa4:	ldr	r0, [r4, #212]	; 0xd4
   16aa8:	ldr	r0, [r0, #160]	; 0xa0
   16aac:	cmp	r0, #0
   16ab0:	beq	16af8 <__flatcc_fb_codegen_c@@Base+0x130>
   16ab4:	ldr	r0, [r4, #208]	; 0xd0
   16ab8:	ldr	r1, [r0, #160]	; 0xa0
   16abc:	movw	r3, #25936	; 0x6550
   16ac0:	movt	r3, #3
   16ac4:	mov	r0, r4
   16ac8:	mov	r2, r5
   16acc:	bl	162e4 <__flatcc_fb_open_output_file@@Base>
   16ad0:	mov	r1, r0
   16ad4:	mvn	r0, #0
   16ad8:	cmp	r1, #0
   16adc:	bne	16ba8 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16ae0:	mov	r0, r4
   16ae4:	bl	1cc04 <__flatcc_fb_gen_c_verifier@@Base>
   16ae8:	cmp	r0, #0
   16aec:	bne	16ba8 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16af0:	mov	r0, r4
   16af4:	bl	163e8 <__flatcc_fb_close_output_file@@Base>
   16af8:	ldr	r0, [r4, #212]	; 0xd4
   16afc:	ldr	r0, [r0, #164]	; 0xa4
   16b00:	cmp	r0, #0
   16b04:	beq	16b4c <__flatcc_fb_codegen_c@@Base+0x184>
   16b08:	ldr	r0, [r4, #208]	; 0xd0
   16b0c:	ldr	r1, [r0, #160]	; 0xa0
   16b10:	movw	r3, #25948	; 0x655c
   16b14:	movt	r3, #3
   16b18:	mov	r0, r4
   16b1c:	mov	r2, r5
   16b20:	bl	162e4 <__flatcc_fb_open_output_file@@Base>
   16b24:	mov	r1, r0
   16b28:	mvn	r0, #0
   16b2c:	cmp	r1, #0
   16b30:	bne	16ba8 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16b34:	mov	r0, r4
   16b38:	bl	1d744 <__flatcc_fb_gen_c_json_parser@@Base>
   16b3c:	cmp	r0, #0
   16b40:	bne	16ba8 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16b44:	mov	r0, r4
   16b48:	bl	163e8 <__flatcc_fb_close_output_file@@Base>
   16b4c:	ldr	r0, [r4, #212]	; 0xd4
   16b50:	ldr	r1, [r0, #168]	; 0xa8
   16b54:	mov	r0, #0
   16b58:	cmp	r1, #0
   16b5c:	beq	16ba8 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16b60:	ldr	r0, [r4, #208]	; 0xd0
   16b64:	ldr	r1, [r0, #160]	; 0xa0
   16b68:	movw	r3, #25963	; 0x656b
   16b6c:	movt	r3, #3
   16b70:	mov	r0, r4
   16b74:	mov	r2, r5
   16b78:	bl	162e4 <__flatcc_fb_open_output_file@@Base>
   16b7c:	mov	r1, r0
   16b80:	mvn	r0, #0
   16b84:	cmp	r1, #0
   16b88:	bne	16ba8 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16b8c:	mov	r0, r4
   16b90:	bl	223a4 <__flatcc_fb_gen_c_json_printer@@Base>
   16b94:	cmp	r0, #0
   16b98:	popne	{r4, r5, r6, sl, fp, pc}
   16b9c:	mov	r0, r4
   16ba0:	bl	163e8 <__flatcc_fb_close_output_file@@Base>
   16ba4:	mov	r0, #0
   16ba8:	pop	{r4, r5, r6, sl, fp, pc}

00016bac <__flatcc_fb_gen_common_c_header@@Base>:
   16bac:	push	{r4, r5, fp, lr}
   16bb0:	add	fp, sp, #8
   16bb4:	mov	r5, r0
   16bb8:	ldr	r0, [r0, #204]	; 0xcc
   16bbc:	add	r4, r5, #102	; 0x66
   16bc0:	movw	r1, #25979	; 0x657b
   16bc4:	movt	r1, #3
   16bc8:	mov	r2, r4
   16bcc:	mov	r3, r4
   16bd0:	bl	149f4 <fprintf@plt>
   16bd4:	ldr	r3, [r5, #204]	; 0xcc
   16bd8:	movw	r0, #26034	; 0x65b2
   16bdc:	movt	r0, #3
   16be0:	mov	r1, #81	; 0x51
   16be4:	mov	r2, #1
   16be8:	bl	1497c <fwrite@plt>
   16bec:	ldr	r3, [r5, #204]	; 0xcc
   16bf0:	movw	r0, #26116	; 0x6604
   16bf4:	movt	r0, #3
   16bf8:	mov	r1, #52	; 0x34
   16bfc:	mov	r2, #1
   16c00:	bl	1497c <fwrite@plt>
   16c04:	ldr	r0, [r5, #212]	; 0xd4
   16c08:	ldr	r0, [r0, #136]	; 0x88
   16c0c:	cmp	r0, #0
   16c10:	bne	16c2c <__flatcc_fb_gen_common_c_header@@Base+0x80>
   16c14:	ldr	r3, [r5, #204]	; 0xcc
   16c18:	movw	r0, #26169	; 0x6639
   16c1c:	movt	r0, #3
   16c20:	mov	r1, #135	; 0x87
   16c24:	mov	r2, #1
   16c28:	bl	1497c <fwrite@plt>
   16c2c:	mov	r0, r5
   16c30:	bl	16c60 <__flatcc_fb_gen_common_c_header@@Base+0xb4>
   16c34:	mov	r0, r5
   16c38:	bl	16c88 <__flatcc_fb_gen_common_c_header@@Base+0xdc>
   16c3c:	mov	r0, r5
   16c40:	bl	174bc <__flatcc_fb_gen_common_c_header@@Base+0x910>
   16c44:	ldr	r0, [r5, #204]	; 0xcc
   16c48:	movw	r1, #26305	; 0x66c1
   16c4c:	movt	r1, #3
   16c50:	mov	r2, r4
   16c54:	bl	149f4 <fprintf@plt>
   16c58:	mov	r0, #0
   16c5c:	pop	{r4, r5, fp, pc}
   16c60:	ldr	r1, [r0, #212]	; 0xd4
   16c64:	ldr	r1, [r1, #140]	; 0x8c
   16c68:	cmp	r1, #0
   16c6c:	bxeq	lr
   16c70:	ldr	r3, [r0, #204]	; 0xcc
   16c74:	movw	r0, #26510	; 0x678e
   16c78:	movt	r0, #3
   16c7c:	mov	r1, #36	; 0x24
   16c80:	mov	r2, #1
   16c84:	b	1497c <fwrite@plt>
   16c88:	push	{r4, sl, fp, lr}
   16c8c:	add	fp, sp, #8
   16c90:	sub	sp, sp, #232	; 0xe8
   16c94:	mov	r4, r0
   16c98:	ldr	r3, [r0, #204]	; 0xcc
   16c9c:	movw	r0, #26547	; 0x67b3
   16ca0:	movt	r0, #3
   16ca4:	mov	r1, #41	; 0x29
   16ca8:	mov	r2, #1
   16cac:	bl	1497c <fwrite@plt>
   16cb0:	movw	r1, #26589	; 0x67dd
   16cb4:	movt	r1, #3
   16cb8:	mov	r0, r4
   16cbc:	bl	14910 <strcmp@plt>
   16cc0:	cmp	r0, #0
   16cc4:	beq	16d4c <__flatcc_fb_gen_common_c_header@@Base+0x1a0>
   16cc8:	ldr	r0, [r4, #204]	; 0xcc
   16ccc:	str	r4, [sp]
   16cd0:	str	r4, [sp, #4]
   16cd4:	str	r4, [sp, #8]
   16cd8:	movw	r1, #26602	; 0x67ea
   16cdc:	movt	r1, #3
   16ce0:	mov	r2, r4
   16ce4:	mov	r3, r4
   16ce8:	bl	149f4 <fprintf@plt>
   16cec:	ldr	r0, [r4, #204]	; 0xcc
   16cf0:	str	r4, [sp]
   16cf4:	str	r4, [sp, #4]
   16cf8:	movw	r1, #26809	; 0x68b9
   16cfc:	movt	r1, #3
   16d00:	movw	r2, #26587	; 0x67db
   16d04:	movt	r2, #3
   16d08:	mov	r3, r4
   16d0c:	bl	149f4 <fprintf@plt>
   16d10:	ldr	r0, [r4, #204]	; 0xcc
   16d14:	str	r4, [sp]
   16d18:	str	r4, [sp, #4]
   16d1c:	str	r4, [sp, #8]
   16d20:	movw	r1, #27152	; 0x6a10
   16d24:	movt	r1, #3
   16d28:	mov	r2, r4
   16d2c:	mov	r3, r4
   16d30:	bl	149f4 <fprintf@plt>
   16d34:	ldr	r0, [r4, #204]	; 0xcc
   16d38:	add	r2, r4, #102	; 0x66
   16d3c:	movw	r1, #27766	; 0x6c76
   16d40:	movt	r1, #3
   16d44:	mov	r3, r2
   16d48:	bl	149f4 <fprintf@plt>
   16d4c:	ldr	r0, [r4, #204]	; 0xcc
   16d50:	movw	r1, #27846	; 0x6cc6
   16d54:	movt	r1, #3
   16d58:	mov	r2, r4
   16d5c:	mov	r3, r4
   16d60:	bl	149f4 <fprintf@plt>
   16d64:	ldr	r0, [r4, #204]	; 0xcc
   16d68:	str	r4, [sp]
   16d6c:	str	r4, [sp, #4]
   16d70:	str	r4, [sp, #8]
   16d74:	str	r4, [sp, #12]
   16d78:	str	r4, [sp, #16]
   16d7c:	movw	r1, #27987	; 0x6d53
   16d80:	movt	r1, #3
   16d84:	mov	r2, r4
   16d88:	mov	r3, r4
   16d8c:	bl	149f4 <fprintf@plt>
   16d90:	ldr	r0, [r4, #204]	; 0xcc
   16d94:	movw	r1, #28358	; 0x6ec6
   16d98:	movt	r1, #3
   16d9c:	mov	r2, r4
   16da0:	mov	r3, r4
   16da4:	bl	149f4 <fprintf@plt>
   16da8:	ldr	r0, [r4, #204]	; 0xcc
   16dac:	str	r4, [sp]
   16db0:	str	r4, [sp, #4]
   16db4:	movw	r1, #28443	; 0x6f1b
   16db8:	movt	r1, #3
   16dbc:	mov	r2, r4
   16dc0:	mov	r3, r4
   16dc4:	bl	149f4 <fprintf@plt>
   16dc8:	ldr	r2, [r4, #204]	; 0xcc
   16dcc:	ldr	r0, [r4, #212]	; 0xd4
   16dd0:	ldr	r0, [r0, #32]
   16dd4:	cmp	r0, #0
   16dd8:	beq	16df4 <__flatcc_fb_gen_common_c_header@@Base+0x248>
   16ddc:	movw	r1, #28736	; 0x7040
   16de0:	movt	r1, #3
   16de4:	mov	r0, r2
   16de8:	mov	r2, r4
   16dec:	bl	149f4 <fprintf@plt>
   16df0:	b	16e00 <__flatcc_fb_gen_common_c_header@@Base+0x254>
   16df4:	mov	r0, #10
   16df8:	mov	r1, r2
   16dfc:	bl	14a54 <fputc@plt>
   16e00:	ldr	r0, [r4, #204]	; 0xcc
   16e04:	movw	r1, #28781	; 0x706d
   16e08:	movt	r1, #3
   16e0c:	mov	r2, r4
   16e10:	mov	r3, r4
   16e14:	bl	149f4 <fprintf@plt>
   16e18:	ldr	r0, [r4, #204]	; 0xcc
   16e1c:	str	r4, [sp]
   16e20:	str	r4, [sp, #4]
   16e24:	str	r4, [sp, #8]
   16e28:	movw	r1, #28992	; 0x7140
   16e2c:	movt	r1, #3
   16e30:	mov	r2, r4
   16e34:	mov	r3, r4
   16e38:	bl	149f4 <fprintf@plt>
   16e3c:	ldr	r0, [r4, #204]	; 0xcc
   16e40:	str	r4, [sp]
   16e44:	str	r4, [sp, #4]
   16e48:	str	r4, [sp, #8]
   16e4c:	movw	r1, #29418	; 0x72ea
   16e50:	movt	r1, #3
   16e54:	mov	r2, r4
   16e58:	mov	r3, r4
   16e5c:	bl	149f4 <fprintf@plt>
   16e60:	ldr	r0, [r4, #204]	; 0xcc
   16e64:	str	r4, [sp]
   16e68:	movw	r1, #29578	; 0x738a
   16e6c:	movt	r1, #3
   16e70:	mov	r2, r4
   16e74:	mov	r3, r4
   16e78:	bl	149f4 <fprintf@plt>
   16e7c:	ldr	r0, [r4, #204]	; 0xcc
   16e80:	str	r4, [sp]
   16e84:	movw	r1, #29796	; 0x7464
   16e88:	movt	r1, #3
   16e8c:	mov	r2, r4
   16e90:	mov	r3, r4
   16e94:	bl	149f4 <fprintf@plt>
   16e98:	ldr	r0, [r4, #204]	; 0xcc
   16e9c:	str	r4, [sp]
   16ea0:	movw	r1, #30014	; 0x753e
   16ea4:	movt	r1, #3
   16ea8:	mov	r2, r4
   16eac:	mov	r3, r4
   16eb0:	bl	149f4 <fprintf@plt>
   16eb4:	ldr	r0, [r4, #204]	; 0xcc
   16eb8:	str	r4, [sp]
   16ebc:	str	r4, [sp, #4]
   16ec0:	str	r4, [sp, #8]
   16ec4:	movw	r1, #30230	; 0x7616
   16ec8:	movt	r1, #3
   16ecc:	mov	r2, r4
   16ed0:	mov	r3, r4
   16ed4:	bl	149f4 <fprintf@plt>
   16ed8:	ldr	r2, [r4, #204]	; 0xcc
   16edc:	ldr	r0, [r4, #212]	; 0xd4
   16ee0:	ldr	r0, [r0, #32]
   16ee4:	cmp	r0, #0
   16ee8:	beq	16f04 <__flatcc_fb_gen_common_c_header@@Base+0x358>
   16eec:	movw	r1, #30462	; 0x76fe
   16ef0:	movt	r1, #3
   16ef4:	mov	r0, r2
   16ef8:	mov	r2, r4
   16efc:	bl	149f4 <fprintf@plt>
   16f00:	b	16f10 <__flatcc_fb_gen_common_c_header@@Base+0x364>
   16f04:	mov	r0, #10
   16f08:	mov	r1, r2
   16f0c:	bl	14a54 <fputc@plt>
   16f10:	ldr	r0, [r4, #204]	; 0xcc
   16f14:	str	r4, [sp]
   16f18:	str	r4, [sp, #4]
   16f1c:	movw	r1, #30504	; 0x7728
   16f20:	movt	r1, #3
   16f24:	mov	r2, r4
   16f28:	mov	r3, r4
   16f2c:	bl	149f4 <fprintf@plt>
   16f30:	ldr	r0, [r4, #204]	; 0xcc
   16f34:	movw	r1, #30663	; 0x77c7
   16f38:	movt	r1, #3
   16f3c:	mov	r2, r4
   16f40:	mov	r3, r4
   16f44:	bl	149f4 <fprintf@plt>
   16f48:	ldr	r0, [r4, #204]	; 0xcc
   16f4c:	str	r4, [sp]
   16f50:	movw	r1, #30729	; 0x7809
   16f54:	movt	r1, #3
   16f58:	mov	r2, r4
   16f5c:	mov	r3, r4
   16f60:	bl	149f4 <fprintf@plt>
   16f64:	ldr	r0, [r4, #204]	; 0xcc
   16f68:	movw	r1, #30867	; 0x7893
   16f6c:	movt	r1, #3
   16f70:	mov	r2, r4
   16f74:	mov	r3, r4
   16f78:	bl	149f4 <fprintf@plt>
   16f7c:	ldr	r0, [r4, #204]	; 0xcc
   16f80:	str	r4, [sp]
   16f84:	str	r4, [sp, #4]
   16f88:	movw	r1, #30981	; 0x7905
   16f8c:	movt	r1, #3
   16f90:	mov	r2, r4
   16f94:	mov	r3, r4
   16f98:	bl	149f4 <fprintf@plt>
   16f9c:	ldr	r0, [r4, #204]	; 0xcc
   16fa0:	movw	r1, #31269	; 0x7a25
   16fa4:	movt	r1, #3
   16fa8:	mov	r2, r4
   16fac:	mov	r3, r4
   16fb0:	bl	149f4 <fprintf@plt>
   16fb4:	ldr	r0, [r4, #204]	; 0xcc
   16fb8:	movw	r1, #31388	; 0x7a9c
   16fbc:	movt	r1, #3
   16fc0:	mov	r2, r4
   16fc4:	mov	r3, r4
   16fc8:	bl	149f4 <fprintf@plt>
   16fcc:	ldr	r0, [r4, #204]	; 0xcc
   16fd0:	str	r4, [sp]
   16fd4:	str	r4, [sp, #4]
   16fd8:	movw	r1, #31516	; 0x7b1c
   16fdc:	movt	r1, #3
   16fe0:	mov	r2, r4
   16fe4:	mov	r3, r4
   16fe8:	bl	149f4 <fprintf@plt>
   16fec:	ldr	r0, [r4, #204]	; 0xcc
   16ff0:	str	r4, [sp, #32]
   16ff4:	str	r4, [sp, #36]	; 0x24
   16ff8:	str	r4, [sp]
   16ffc:	str	r4, [sp, #4]
   17000:	str	r4, [sp, #8]
   17004:	str	r4, [sp, #12]
   17008:	str	r4, [sp, #16]
   1700c:	str	r4, [sp, #20]
   17010:	str	r4, [sp, #24]
   17014:	str	r4, [sp, #28]
   17018:	movw	r1, #31615	; 0x7b7f
   1701c:	movt	r1, #3
   17020:	mov	r2, r4
   17024:	mov	r3, r4
   17028:	bl	149f4 <fprintf@plt>
   1702c:	ldr	r0, [r4, #204]	; 0xcc
   17030:	movw	r1, #31904	; 0x7ca0
   17034:	movt	r1, #3
   17038:	mov	r2, r4
   1703c:	bl	149f4 <fprintf@plt>
   17040:	ldr	r0, [r4, #204]	; 0xcc
   17044:	str	r4, [sp]
   17048:	str	r4, [sp, #4]
   1704c:	movw	r1, #31938	; 0x7cc2
   17050:	movt	r1, #3
   17054:	mov	r2, r4
   17058:	mov	r3, r4
   1705c:	bl	149f4 <fprintf@plt>
   17060:	ldr	r0, [r4, #204]	; 0xcc
   17064:	str	r4, [sp, #32]
   17068:	str	r4, [sp, #36]	; 0x24
   1706c:	str	r4, [sp, #40]	; 0x28
   17070:	str	r4, [sp, #44]	; 0x2c
   17074:	str	r4, [sp, #48]	; 0x30
   17078:	str	r4, [sp, #52]	; 0x34
   1707c:	str	r4, [sp, #56]	; 0x38
   17080:	str	r4, [sp]
   17084:	str	r4, [sp, #4]
   17088:	str	r4, [sp, #8]
   1708c:	str	r4, [sp, #12]
   17090:	str	r4, [sp, #16]
   17094:	str	r4, [sp, #20]
   17098:	str	r4, [sp, #24]
   1709c:	str	r4, [sp, #28]
   170a0:	movw	r1, #32073	; 0x7d49
   170a4:	movt	r1, #3
   170a8:	mov	r2, r4
   170ac:	mov	r3, r4
   170b0:	bl	149f4 <fprintf@plt>
   170b4:	mov	r0, r4
   170b8:	bl	19288 <__flatcc_fb_gen_c_reader@@Base+0x1da4>
   170bc:	mov	r0, r4
   170c0:	bl	19374 <__flatcc_fb_gen_c_reader@@Base+0x1e90>
   170c4:	mov	r0, r4
   170c8:	bl	194a4 <__flatcc_fb_gen_c_reader@@Base+0x1fc0>
   170cc:	ldr	r0, [r4, #212]	; 0xd4
   170d0:	ldr	r0, [r0, #136]	; 0x88
   170d4:	cmp	r0, #0
   170d8:	beq	170e8 <__flatcc_fb_gen_common_c_header@@Base+0x53c>
   170dc:	mov	r0, r4
   170e0:	bl	19b84 <__flatcc_gen_sort@@Base>
   170e4:	b	17100 <__flatcc_fb_gen_common_c_header@@Base+0x554>
   170e8:	ldr	r3, [r4, #204]	; 0xcc
   170ec:	movw	r0, #32504	; 0x7ef8
   170f0:	movt	r0, #3
   170f4:	mov	r1, #20
   170f8:	mov	r2, #1
   170fc:	bl	1497c <fwrite@plt>
   17100:	ldr	r0, [r4, #204]	; 0xcc
   17104:	str	r4, [sp]
   17108:	str	r4, [sp, #4]
   1710c:	str	r4, [sp, #8]
   17110:	movw	r1, #32525	; 0x7f0d
   17114:	movt	r1, #3
   17118:	mov	r2, r4
   1711c:	mov	r3, r4
   17120:	bl	149f4 <fprintf@plt>
   17124:	ldr	r2, [r4, #204]	; 0xcc
   17128:	ldr	r0, [r4, #212]	; 0xd4
   1712c:	ldr	r0, [r0, #136]	; 0x88
   17130:	cmp	r0, #0
   17134:	beq	17150 <__flatcc_fb_gen_common_c_header@@Base+0x5a4>
   17138:	movw	r1, #32750	; 0x7fee
   1713c:	movt	r1, #3
   17140:	mov	r0, r2
   17144:	mov	r2, r4
   17148:	bl	149f4 <fprintf@plt>
   1714c:	b	1715c <__flatcc_fb_gen_common_c_header@@Base+0x5b0>
   17150:	mov	r0, #10
   17154:	mov	r1, r2
   17158:	bl	14a54 <fputc@plt>
   1715c:	ldr	r1, [r4, #204]	; 0xcc
   17160:	mov	r0, #10
   17164:	bl	14a54 <fputc@plt>
   17168:	ldr	r0, [r4, #204]	; 0xcc
   1716c:	str	r4, [sp]
   17170:	movw	r1, #32782	; 0x800e
   17174:	movt	r1, #3
   17178:	mov	r2, r4
   1717c:	mov	r3, r4
   17180:	bl	149f4 <fprintf@plt>
   17184:	ldr	r0, [r4, #204]	; 0xcc
   17188:	str	r4, [sp, #64]	; 0x40
   1718c:	str	r4, [sp, #68]	; 0x44
   17190:	str	r4, [sp, #72]	; 0x48
   17194:	str	r4, [sp, #76]	; 0x4c
   17198:	str	r4, [sp, #80]	; 0x50
   1719c:	str	r4, [sp, #84]	; 0x54
   171a0:	str	r4, [sp, #88]	; 0x58
   171a4:	str	r4, [sp, #92]	; 0x5c
   171a8:	str	r4, [sp, #32]
   171ac:	str	r4, [sp, #36]	; 0x24
   171b0:	str	r4, [sp, #40]	; 0x28
   171b4:	str	r4, [sp, #44]	; 0x2c
   171b8:	str	r4, [sp, #48]	; 0x30
   171bc:	str	r4, [sp, #52]	; 0x34
   171c0:	str	r4, [sp, #56]	; 0x38
   171c4:	str	r4, [sp, #60]	; 0x3c
   171c8:	str	r4, [sp]
   171cc:	str	r4, [sp, #4]
   171d0:	str	r4, [sp, #8]
   171d4:	str	r4, [sp, #12]
   171d8:	str	r4, [sp, #16]
   171dc:	str	r4, [sp, #20]
   171e0:	str	r4, [sp, #24]
   171e4:	str	r4, [sp, #28]
   171e8:	movw	r1, #32910	; 0x808e
   171ec:	movt	r1, #3
   171f0:	mov	r2, r4
   171f4:	mov	r3, r4
   171f8:	bl	149f4 <fprintf@plt>
   171fc:	ldr	r0, [r4, #204]	; 0xcc
   17200:	str	r4, [sp, #32]
   17204:	str	r4, [sp, #36]	; 0x24
   17208:	str	r4, [sp]
   1720c:	str	r4, [sp, #4]
   17210:	str	r4, [sp, #8]
   17214:	str	r4, [sp, #12]
   17218:	str	r4, [sp, #16]
   1721c:	str	r4, [sp, #20]
   17220:	str	r4, [sp, #24]
   17224:	str	r4, [sp, #28]
   17228:	movw	r1, #33441	; 0x82a1
   1722c:	movt	r1, #3
   17230:	mov	r2, r4
   17234:	mov	r3, r4
   17238:	bl	149f4 <fprintf@plt>
   1723c:	ldr	r0, [r4, #204]	; 0xcc
   17240:	str	r4, [sp, #224]	; 0xe0
   17244:	str	r4, [sp, #228]	; 0xe4
   17248:	str	r4, [sp, #192]	; 0xc0
   1724c:	str	r4, [sp, #196]	; 0xc4
   17250:	str	r4, [sp, #200]	; 0xc8
   17254:	str	r4, [sp, #204]	; 0xcc
   17258:	str	r4, [sp, #208]	; 0xd0
   1725c:	str	r4, [sp, #212]	; 0xd4
   17260:	str	r4, [sp, #216]	; 0xd8
   17264:	str	r4, [sp, #220]	; 0xdc
   17268:	str	r4, [sp, #160]	; 0xa0
   1726c:	str	r4, [sp, #164]	; 0xa4
   17270:	str	r4, [sp, #168]	; 0xa8
   17274:	str	r4, [sp, #172]	; 0xac
   17278:	str	r4, [sp, #176]	; 0xb0
   1727c:	str	r4, [sp, #180]	; 0xb4
   17280:	str	r4, [sp, #184]	; 0xb8
   17284:	str	r4, [sp, #188]	; 0xbc
   17288:	str	r4, [sp, #128]	; 0x80
   1728c:	str	r4, [sp, #132]	; 0x84
   17290:	str	r4, [sp, #136]	; 0x88
   17294:	str	r4, [sp, #140]	; 0x8c
   17298:	str	r4, [sp, #144]	; 0x90
   1729c:	str	r4, [sp, #148]	; 0x94
   172a0:	str	r4, [sp, #152]	; 0x98
   172a4:	str	r4, [sp, #156]	; 0x9c
   172a8:	str	r4, [sp, #96]	; 0x60
   172ac:	str	r4, [sp, #100]	; 0x64
   172b0:	str	r4, [sp, #104]	; 0x68
   172b4:	str	r4, [sp, #108]	; 0x6c
   172b8:	str	r4, [sp, #112]	; 0x70
   172bc:	str	r4, [sp, #116]	; 0x74
   172c0:	str	r4, [sp, #120]	; 0x78
   172c4:	str	r4, [sp, #124]	; 0x7c
   172c8:	str	r4, [sp, #64]	; 0x40
   172cc:	str	r4, [sp, #68]	; 0x44
   172d0:	str	r4, [sp, #72]	; 0x48
   172d4:	str	r4, [sp, #76]	; 0x4c
   172d8:	str	r4, [sp, #80]	; 0x50
   172dc:	str	r4, [sp, #84]	; 0x54
   172e0:	str	r4, [sp, #88]	; 0x58
   172e4:	str	r4, [sp, #92]	; 0x5c
   172e8:	str	r4, [sp, #32]
   172ec:	str	r4, [sp, #36]	; 0x24
   172f0:	str	r4, [sp, #40]	; 0x28
   172f4:	str	r4, [sp, #44]	; 0x2c
   172f8:	str	r4, [sp, #48]	; 0x30
   172fc:	str	r4, [sp, #52]	; 0x34
   17300:	str	r4, [sp, #56]	; 0x38
   17304:	str	r4, [sp, #60]	; 0x3c
   17308:	str	r4, [sp]
   1730c:	str	r4, [sp, #4]
   17310:	str	r4, [sp, #8]
   17314:	str	r4, [sp, #12]
   17318:	str	r4, [sp, #16]
   1731c:	str	r4, [sp, #20]
   17320:	str	r4, [sp, #24]
   17324:	str	r4, [sp, #28]
   17328:	movw	r1, #33771	; 0x83eb
   1732c:	movt	r1, #3
   17330:	mov	r2, r4
   17334:	mov	r3, r4
   17338:	bl	149f4 <fprintf@plt>
   1733c:	ldr	r0, [r4, #212]	; 0xd4
   17340:	ldr	r0, [r0, #136]	; 0x88
   17344:	cmp	r0, #0
   17348:	beq	17360 <__flatcc_fb_gen_common_c_header@@Base+0x7b4>
   1734c:	ldr	r0, [r4, #204]	; 0xcc
   17350:	movw	r1, #35492	; 0x8aa4
   17354:	movt	r1, #3
   17358:	mov	r2, r4
   1735c:	bl	149f4 <fprintf@plt>
   17360:	ldr	r0, [r4, #204]	; 0xcc
   17364:	movw	r1, #35518	; 0x8abe
   17368:	movt	r1, #3
   1736c:	mov	r2, r4
   17370:	mov	r3, r4
   17374:	bl	149f4 <fprintf@plt>
   17378:	ldr	r2, [r4, #204]	; 0xcc
   1737c:	ldr	r0, [r4, #212]	; 0xd4
   17380:	ldr	r0, [r0, #32]
   17384:	cmp	r0, #0
   17388:	beq	173a4 <__flatcc_fb_gen_common_c_header@@Base+0x7f8>
   1738c:	movw	r1, #28736	; 0x7040
   17390:	movt	r1, #3
   17394:	mov	r0, r2
   17398:	mov	r2, r4
   1739c:	bl	149f4 <fprintf@plt>
   173a0:	b	173b0 <__flatcc_fb_gen_common_c_header@@Base+0x804>
   173a4:	mov	r0, #10
   173a8:	mov	r1, r2
   173ac:	bl	14a54 <fputc@plt>
   173b0:	ldr	r0, [r4, #204]	; 0xcc
   173b4:	movw	r1, #35671	; 0x8b57
   173b8:	movt	r1, #3
   173bc:	mov	r2, r4
   173c0:	bl	149f4 <fprintf@plt>
   173c4:	ldr	r0, [r4, #204]	; 0xcc
   173c8:	str	r4, [sp, #32]
   173cc:	str	r4, [sp, #36]	; 0x24
   173d0:	str	r4, [sp, #40]	; 0x28
   173d4:	str	r4, [sp, #44]	; 0x2c
   173d8:	str	r4, [sp]
   173dc:	str	r4, [sp, #4]
   173e0:	str	r4, [sp, #8]
   173e4:	str	r4, [sp, #12]
   173e8:	str	r4, [sp, #16]
   173ec:	str	r4, [sp, #20]
   173f0:	str	r4, [sp, #24]
   173f4:	str	r4, [sp, #28]
   173f8:	movw	r1, #35798	; 0x8bd6
   173fc:	movt	r1, #3
   17400:	mov	r2, r4
   17404:	mov	r3, r4
   17408:	bl	149f4 <fprintf@plt>
   1740c:	ldr	r0, [r4, #204]	; 0xcc
   17410:	str	r4, [sp]
   17414:	movw	r1, #36639	; 0x8f1f
   17418:	movt	r1, #3
   1741c:	mov	r2, r4
   17420:	mov	r3, r4
   17424:	bl	149f4 <fprintf@plt>
   17428:	ldr	r0, [r4, #204]	; 0xcc
   1742c:	str	r4, [sp]
   17430:	str	r4, [sp, #4]
   17434:	str	r4, [sp, #8]
   17438:	str	r4, [sp, #12]
   1743c:	movw	r1, #36822	; 0x8fd6
   17440:	movt	r1, #3
   17444:	mov	r2, r4
   17448:	mov	r3, r4
   1744c:	bl	149f4 <fprintf@plt>
   17450:	ldr	r0, [r4, #204]	; 0xcc
   17454:	str	r4, [sp]
   17458:	str	r4, [sp, #4]
   1745c:	movw	r1, #37277	; 0x919d
   17460:	movt	r1, #3
   17464:	mov	r2, r4
   17468:	mov	r3, r4
   1746c:	bl	149f4 <fprintf@plt>
   17470:	ldr	r0, [r4, #204]	; 0xcc
   17474:	str	r4, [sp]
   17478:	str	r4, [sp, #4]
   1747c:	str	r4, [sp, #8]
   17480:	str	r4, [sp, #12]
   17484:	str	r4, [sp, #16]
   17488:	str	r4, [sp, #20]
   1748c:	str	r4, [sp, #24]
   17490:	str	r4, [sp, #28]
   17494:	movw	r1, #37913	; 0x9419
   17498:	movt	r1, #3
   1749c:	mov	r2, r4
   174a0:	mov	r3, r4
   174a4:	bl	149f4 <fprintf@plt>
   174a8:	ldr	r1, [r4, #204]	; 0xcc
   174ac:	mov	r0, #10
   174b0:	sub	sp, fp, #8
   174b4:	pop	{r4, sl, fp, lr}
   174b8:	b	14a54 <fputc@plt>
   174bc:	ldr	r1, [r0, #212]	; 0xd4
   174c0:	ldr	r1, [r1, #140]	; 0x8c
   174c4:	cmp	r1, #0
   174c8:	bxeq	lr
   174cc:	ldr	r3, [r0, #204]	; 0xcc
   174d0:	movw	r0, #50552	; 0xc578
   174d4:	movt	r0, #3
   174d8:	mov	r1, #36	; 0x24
   174dc:	mov	r2, #1
   174e0:	b	1497c <fwrite@plt>

000174e4 <__flatcc_fb_gen_c_reader@@Base>:
   174e4:	push	{r4, r5, fp, lr}
   174e8:	add	fp, sp, #8
   174ec:	sub	sp, sp, #8
   174f0:	mov	r4, r0
   174f4:	bl	176dc <__flatcc_fb_gen_c_reader@@Base+0x1f8>
   174f8:	ldr	r0, [r4, #208]	; 0xd0
   174fc:	ldr	r5, [r0, #44]	; 0x2c
   17500:	cmp	r5, #0
   17504:	beq	17520 <__flatcc_fb_gen_c_reader@@Base+0x3c>
   17508:	mov	r0, r4
   1750c:	mov	r1, r5
   17510:	bl	17898 <__flatcc_fb_gen_c_reader@@Base+0x3b4>
   17514:	ldr	r5, [r5, #120]	; 0x78
   17518:	cmp	r5, #0
   1751c:	bne	17508 <__flatcc_fb_gen_c_reader@@Base+0x24>
   17520:	ldr	r1, [r4, #204]	; 0xcc
   17524:	mov	r0, #10
   17528:	bl	14a54 <fputc@plt>
   1752c:	ldr	r0, [r4, #208]	; 0xd0
   17530:	ldr	r5, [r0, #40]	; 0x28
   17534:	cmp	r5, #0
   17538:	bne	1754c <__flatcc_fb_gen_c_reader@@Base+0x68>
   1753c:	b	17568 <__flatcc_fb_gen_c_reader@@Base+0x84>
   17540:	ldr	r5, [r5]
   17544:	cmp	r5, #0
   17548:	beq	17568 <__flatcc_fb_gen_c_reader@@Base+0x84>
   1754c:	ldrh	r0, [r5, #8]
   17550:	cmp	r0, #0
   17554:	bne	17540 <__flatcc_fb_gen_c_reader@@Base+0x5c>
   17558:	mov	r0, r4
   1755c:	mov	r1, r5
   17560:	bl	17898 <__flatcc_fb_gen_c_reader@@Base+0x3b4>
   17564:	b	17540 <__flatcc_fb_gen_c_reader@@Base+0x5c>
   17568:	ldr	r0, [r4, #208]	; 0xd0
   1756c:	ldr	r5, [r0, #40]	; 0x28
   17570:	cmp	r5, #0
   17574:	beq	17598 <__flatcc_fb_gen_c_reader@@Base+0xb4>
   17578:	ldrh	r0, [r5, #8]
   1757c:	cmp	r0, #1
   17580:	movls	r0, r4
   17584:	movls	r1, r5
   17588:	blls	179ec <__flatcc_fb_gen_c_reader@@Base+0x508>
   1758c:	ldr	r5, [r5]
   17590:	cmp	r5, #0
   17594:	bne	17578 <__flatcc_fb_gen_c_reader@@Base+0x94>
   17598:	ldr	r1, [r4, #204]	; 0xcc
   1759c:	mov	r0, #10
   175a0:	bl	14a54 <fputc@plt>
   175a4:	ldr	r0, [r4, #208]	; 0xd0
   175a8:	ldr	r5, [r0, #40]	; 0x28
   175ac:	cmp	r5, #0
   175b0:	beq	175d4 <__flatcc_fb_gen_c_reader@@Base+0xf0>
   175b4:	ldrh	r0, [r5, #8]
   175b8:	cmp	r0, #3
   175bc:	moveq	r0, r4
   175c0:	moveq	r1, r5
   175c4:	bleq	17ad4 <__flatcc_fb_gen_c_reader@@Base+0x5f0>
   175c8:	ldr	r5, [r5]
   175cc:	cmp	r5, #0
   175d0:	bne	175b4 <__flatcc_fb_gen_c_reader@@Base+0xd0>
   175d4:	ldr	r1, [r4, #204]	; 0xcc
   175d8:	mov	r0, #10
   175dc:	bl	14a54 <fputc@plt>
   175e0:	ldr	r0, [r4, #208]	; 0xd0
   175e4:	ldr	r5, [r0, #44]	; 0x2c
   175e8:	cmp	r5, #0
   175ec:	beq	17608 <__flatcc_fb_gen_c_reader@@Base+0x124>
   175f0:	mov	r0, r4
   175f4:	mov	r1, r5
   175f8:	bl	17eb4 <__flatcc_fb_gen_c_reader@@Base+0x9d0>
   175fc:	ldr	r5, [r5, #120]	; 0x78
   17600:	cmp	r5, #0
   17604:	bne	175f0 <__flatcc_fb_gen_c_reader@@Base+0x10c>
   17608:	ldr	r0, [r4, #208]	; 0xd0
   1760c:	ldr	r5, [r0, #40]	; 0x28
   17610:	cmp	r5, #0
   17614:	bne	17634 <__flatcc_fb_gen_c_reader@@Base+0x150>
   17618:	b	1766c <__flatcc_fb_gen_c_reader@@Base+0x188>
   1761c:	mov	r0, r4
   17620:	mov	r1, r5
   17624:	bl	187b0 <__flatcc_fb_gen_c_reader@@Base+0x12cc>
   17628:	ldr	r5, [r5]
   1762c:	cmp	r5, #0
   17630:	beq	1766c <__flatcc_fb_gen_c_reader@@Base+0x188>
   17634:	ldrh	r0, [r5, #8]
   17638:	sub	r1, r0, #1
   1763c:	cmp	r1, #3
   17640:	bcc	17628 <__flatcc_fb_gen_c_reader@@Base+0x144>
   17644:	cmp	r0, #0
   17648:	beq	1761c <__flatcc_fb_gen_c_reader@@Base+0x138>
   1764c:	cmp	r0, #4
   17650:	bne	1768c <__flatcc_fb_gen_c_reader@@Base+0x1a8>
   17654:	mov	r0, r4
   17658:	mov	r1, r5
   1765c:	bl	17ad4 <__flatcc_fb_gen_c_reader@@Base+0x5f0>
   17660:	ldr	r5, [r5]
   17664:	cmp	r5, #0
   17668:	bne	17634 <__flatcc_fb_gen_c_reader@@Base+0x150>
   1766c:	ldr	r1, [r4, #204]	; 0xcc
   17670:	mov	r0, #10
   17674:	bl	14a54 <fputc@plt>
   17678:	mov	r0, r4
   1767c:	bl	1925c <__flatcc_fb_gen_c_reader@@Base+0x1d78>
   17680:	mov	r0, #0
   17684:	sub	sp, fp, #8
   17688:	pop	{r4, r5, fp, pc}
   1768c:	movw	r0, #8368	; 0x20b0
   17690:	movt	r0, #6
   17694:	ldr	r0, [r0]
   17698:	movw	r1, #26422	; 0x6736
   1769c:	movt	r1, #3
   176a0:	str	r1, [sp]
   176a4:	movw	r1, #26331	; 0x66db
   176a8:	movt	r1, #3
   176ac:	movw	r4, #26342	; 0x66e6
   176b0:	movt	r4, #3
   176b4:	mov	r2, r4
   176b8:	movw	r3, #1672	; 0x688
   176bc:	bl	149f4 <fprintf@plt>
   176c0:	movw	r0, #30217	; 0x7609
   176c4:	movt	r0, #4
   176c8:	movw	r3, #26466	; 0x6762
   176cc:	movt	r3, #3
   176d0:	mov	r1, r4
   176d4:	movw	r2, #1672	; 0x688
   176d8:	bl	14ab4 <__assert_fail@plt>
   176dc:	push	{r4, r5, r6, sl, fp, lr}
   176e0:	add	fp, sp, #16
   176e4:	sub	sp, sp, #8
   176e8:	mov	r4, r0
   176ec:	ldr	r0, [r0, #204]	; 0xcc
   176f0:	ldr	r1, [r4, #208]	; 0xd0
   176f4:	ldr	r2, [r4, #212]	; 0xd4
   176f8:	ldr	r6, [r2, #132]	; 0x84
   176fc:	ldr	r2, [r1, #164]	; 0xa4
   17700:	movw	r1, #50589	; 0xc59d
   17704:	movt	r1, #3
   17708:	mov	r3, r2
   1770c:	bl	149f4 <fprintf@plt>
   17710:	ldr	r3, [r4, #204]	; 0xcc
   17714:	movw	r0, #26034	; 0x65b2
   17718:	movt	r0, #3
   1771c:	mov	r1, #81	; 0x51
   17720:	mov	r2, #1
   17724:	bl	1497c <fwrite@plt>
   17728:	add	r5, r4, #102	; 0x66
   1772c:	ldr	r3, [r4, #204]	; 0xcc
   17730:	cmp	r6, #0
   17734:	beq	17790 <__flatcc_fb_gen_c_reader@@Base+0x2ac>
   17738:	movw	r0, #50630	; 0xc5c6
   1773c:	movt	r0, #3
   17740:	movw	r1, #443	; 0x1bb
   17744:	mov	r2, #1
   17748:	bl	1497c <fwrite@plt>
   1774c:	ldr	r0, [r4, #204]	; 0xcc
   17750:	movw	r1, #51074	; 0xc782
   17754:	movt	r1, #3
   17758:	mov	r2, r5
   1775c:	mov	r3, r4
   17760:	bl	149f4 <fprintf@plt>
   17764:	movw	r1, #54361	; 0xd459
   17768:	movt	r1, #4
   1776c:	movw	r2, #51138	; 0xc7c2
   17770:	movt	r2, #3
   17774:	mov	r0, r4
   17778:	bl	16650 <__flatcc_fb_gen_c_includes@@Base>
   1777c:	ldr	r3, [r4, #204]	; 0xcc
   17780:	movw	r0, #51148	; 0xc7cc
   17784:	movt	r0, #3
   17788:	mov	r1, #39	; 0x27
   1778c:	b	177e8 <__flatcc_fb_gen_c_reader@@Base+0x304>
   17790:	movw	r1, #51074	; 0xc782
   17794:	movt	r1, #3
   17798:	mov	r0, r3
   1779c:	mov	r2, r5
   177a0:	mov	r3, r4
   177a4:	bl	149f4 <fprintf@plt>
   177a8:	movw	r1, #54361	; 0xd459
   177ac:	movt	r1, #4
   177b0:	movw	r2, #51138	; 0xc7c2
   177b4:	movt	r2, #3
   177b8:	mov	r0, r4
   177bc:	bl	16650 <__flatcc_fb_gen_c_includes@@Base>
   177c0:	ldr	r3, [r4, #204]	; 0xcc
   177c4:	movw	r0, #51148	; 0xc7cc
   177c8:	movt	r0, #3
   177cc:	mov	r1, #39	; 0x27
   177d0:	mov	r2, #1
   177d4:	bl	1497c <fwrite@plt>
   177d8:	ldr	r3, [r4, #204]	; 0xcc
   177dc:	movw	r0, #51188	; 0xc7f4
   177e0:	movt	r0, #3
   177e4:	mov	r1, #58	; 0x3a
   177e8:	mov	r2, #1
   177ec:	bl	1497c <fwrite@plt>
   177f0:	mov	r0, r4
   177f4:	bl	16c60 <__flatcc_fb_gen_common_c_header@@Base+0xb4>
   177f8:	ldr	r0, [r4, #204]	; 0xcc
   177fc:	ldr	r1, [r4, #208]	; 0xd0
   17800:	ldrh	r2, [r1, #16]
   17804:	cmp	r2, #2
   17808:	bne	17824 <__flatcc_fb_gen_c_reader@@Base+0x340>
   1780c:	ldrd	r2, [r1, #8]
   17810:	str	r3, [sp]
   17814:	str	r2, [sp, #4]
   17818:	movw	r1, #51247	; 0xc82f
   1781c:	movt	r1, #3
   17820:	b	1782c <__flatcc_fb_gen_c_reader@@Base+0x348>
   17824:	movw	r1, #51296	; 0xc860
   17828:	movt	r1, #3
   1782c:	mov	r2, r4
   17830:	mov	r3, r4
   17834:	bl	149f4 <fprintf@plt>
   17838:	ldr	r0, [r4, #204]	; 0xcc
   1783c:	ldr	r1, [r4, #208]	; 0xd0
   17840:	ldrh	r2, [r1, #32]
   17844:	cmp	r2, #2
   17848:	bne	17864 <__flatcc_fb_gen_c_reader@@Base+0x380>
   1784c:	ldrd	r2, [r1, #24]
   17850:	str	r3, [sp]
   17854:	str	r2, [sp, #4]
   17858:	movw	r1, #51348	; 0xc894
   1785c:	movt	r1, #3
   17860:	b	17878 <__flatcc_fb_gen_c_reader@@Base+0x394>
   17864:	ldr	r1, [r4, #212]	; 0xd4
   17868:	ldr	r1, [r1, #104]	; 0x68
   1786c:	str	r1, [sp]
   17870:	movw	r1, #51396	; 0xc8c4
   17874:	movt	r1, #3
   17878:	mov	r2, r4
   1787c:	mov	r3, r4
   17880:	bl	149f4 <fprintf@plt>
   17884:	ldr	r1, [r4, #204]	; 0xcc
   17888:	mov	r0, #10
   1788c:	sub	sp, fp, #16
   17890:	pop	{r4, r5, r6, sl, fp, lr}
   17894:	b	14a54 <fputc@plt>
   17898:	push	{r4, r5, fp, lr}
   1789c:	add	fp, sp, #8
   178a0:	sub	sp, sp, #224	; 0xe0
   178a4:	mov	r5, r1
   178a8:	mov	r4, r0
   178ac:	mov	r0, sp
   178b0:	mov	r1, #0
   178b4:	mov	r2, #220	; 0xdc
   178b8:	bl	14a0c <memset@plt>
   178bc:	ldrh	r0, [r5, #8]
   178c0:	cmp	r0, #2
   178c4:	bcs	179cc <__flatcc_fb_gen_c_reader@@Base+0x4e8>
   178c8:	mov	r1, sp
   178cc:	mov	r0, r5
   178d0:	bl	19638 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   178d4:	ldrh	r0, [r5, #8]
   178d8:	cmp	r0, #1
   178dc:	bne	17908 <__flatcc_fb_gen_c_reader@@Base+0x424>
   178e0:	ldr	r0, [r4, #204]	; 0xcc
   178e4:	ldrd	r2, [r5, #112]	; 0x70
   178e8:	orrs	r1, r2, r3
   178ec:	beq	17950 <__flatcc_fb_gen_c_reader@@Base+0x46c>
   178f0:	movw	r1, #51613	; 0xc99d
   178f4:	movt	r1, #3
   178f8:	mov	r2, sp
   178fc:	mov	r3, r2
   17900:	bl	149f4 <fprintf@plt>
   17904:	b	17960 <__flatcc_fb_gen_c_reader@@Base+0x47c>
   17908:	ldr	r0, [r4, #204]	; 0xcc
   1790c:	movw	r1, #51772	; 0xca3c
   17910:	movt	r1, #3
   17914:	mov	r5, sp
   17918:	mov	r2, r5
   1791c:	mov	r3, r5
   17920:	bl	149f4 <fprintf@plt>
   17924:	ldr	r0, [r4, #204]	; 0xcc
   17928:	movw	r1, #51816	; 0xca68
   1792c:	movt	r1, #3
   17930:	mov	r2, r4
   17934:	mov	r3, r5
   17938:	bl	149f4 <fprintf@plt>
   1793c:	ldr	r0, [r4, #204]	; 0xcc
   17940:	movw	r1, #51854	; 0xca8e
   17944:	movt	r1, #3
   17948:	mov	r2, r4
   1794c:	b	179bc <__flatcc_fb_gen_c_reader@@Base+0x4d8>
   17950:	movw	r1, #51574	; 0xc976
   17954:	movt	r1, #3
   17958:	mov	r2, sp
   1795c:	bl	149f4 <fprintf@plt>
   17960:	ldr	r0, [r4, #204]	; 0xcc
   17964:	movw	r1, #51638	; 0xc9b6
   17968:	movt	r1, #3
   1796c:	mov	r5, sp
   17970:	mov	r2, r5
   17974:	mov	r3, r5
   17978:	bl	149f4 <fprintf@plt>
   1797c:	ldr	r0, [r4, #204]	; 0xcc
   17980:	movw	r1, #51672	; 0xc9d8
   17984:	movt	r1, #3
   17988:	mov	r2, r5
   1798c:	mov	r3, r5
   17990:	bl	149f4 <fprintf@plt>
   17994:	ldr	r0, [r4, #204]	; 0xcc
   17998:	movw	r1, #51708	; 0xc9fc
   1799c:	movt	r1, #3
   179a0:	mov	r2, r5
   179a4:	mov	r3, r5
   179a8:	bl	149f4 <fprintf@plt>
   179ac:	ldr	r0, [r4, #204]	; 0xcc
   179b0:	movw	r1, #51739	; 0xca1b
   179b4:	movt	r1, #3
   179b8:	mov	r2, r5
   179bc:	mov	r3, r5
   179c0:	bl	149f4 <fprintf@plt>
   179c4:	sub	sp, fp, #8
   179c8:	pop	{r4, r5, fp, pc}
   179cc:	movw	r0, #51449	; 0xc8f9
   179d0:	movt	r0, #3
   179d4:	movw	r1, #26342	; 0x66e6
   179d8:	movt	r1, #3
   179dc:	movw	r3, #51515	; 0xc93b
   179e0:	movt	r3, #3
   179e4:	movw	r2, #863	; 0x35f
   179e8:	bl	14ab4 <__assert_fail@plt>
   179ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   179f0:	add	fp, sp, #24
   179f4:	sub	sp, sp, #248	; 0xf8
   179f8:	mov	r5, r1
   179fc:	mov	r4, r0
   17a00:	add	r6, sp, #8
   17a04:	mov	r7, #0
   17a08:	mov	r0, r6
   17a0c:	mov	r1, #0
   17a10:	mov	r2, #220	; 0xdc
   17a14:	bl	14a0c <memset@plt>
   17a18:	mov	r0, r5
   17a1c:	mov	r1, r6
   17a20:	bl	19638 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   17a24:	ldr	r5, [r5, #88]	; 0x58
   17a28:	ldr	r0, [r4, #204]	; 0xcc
   17a2c:	str	r4, [sp]
   17a30:	movw	r1, #51894	; 0xcab6
   17a34:	movt	r1, #3
   17a38:	mov	r2, r6
   17a3c:	mov	r3, r6
   17a40:	bl	149f4 <fprintf@plt>
   17a44:	ldr	r0, [r4, #204]	; 0xcc
   17a48:	str	r5, [sp]
   17a4c:	movw	r1, #51959	; 0xcaf7
   17a50:	movt	r1, #3
   17a54:	mov	r2, r6
   17a58:	mov	r3, r4
   17a5c:	bl	149f4 <fprintf@plt>
   17a60:	sub	r3, fp, #41	; 0x29
   17a64:	movw	r0, #30812	; 0x785c
   17a68:	add	r1, r3, r7, lsl #2
   17a6c:	strh	r0, [r1]
   17a70:	and	r2, r5, #15
   17a74:	cmp	r2, #9
   17a78:	mov	r6, #48	; 0x30
   17a7c:	movwhi	r6, #87	; 0x57
   17a80:	add	r2, r6, r2
   17a84:	strb	r2, [r1, #3]
   17a88:	ubfx	r2, r5, #4, #4
   17a8c:	cmp	r2, #9
   17a90:	mov	r6, #48	; 0x30
   17a94:	movwhi	r6, #87	; 0x57
   17a98:	add	r2, r6, r2
   17a9c:	strb	r2, [r1, #2]
   17aa0:	add	r7, r7, #1
   17aa4:	lsr	r5, r5, #8
   17aa8:	cmp	r7, #4
   17aac:	bne	17a68 <__flatcc_fb_gen_c_reader@@Base+0x584>
   17ab0:	mov	r0, #0
   17ab4:	strb	r0, [r3, r7, lsl #2]
   17ab8:	ldr	r0, [r4, #204]	; 0xcc
   17abc:	movw	r1, #52000	; 0xcb20
   17ac0:	movt	r1, #3
   17ac4:	add	r2, sp, #8
   17ac8:	bl	149f4 <fprintf@plt>
   17acc:	sub	sp, fp, #24
   17ad0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ad8:	add	fp, sp, #28
   17adc:	sub	sp, sp, #356	; 0x164
   17ae0:	mov	r5, r1
   17ae4:	mov	r4, r0
   17ae8:	add	r8, sp, #24
   17aec:	mov	r0, r8
   17af0:	mov	r1, #0
   17af4:	mov	r2, #220	; 0xdc
   17af8:	bl	14a0c <memset@plt>
   17afc:	ldrh	r0, [r5, #8]
   17b00:	sub	r0, r0, #3
   17b04:	uxth	r0, r0
   17b08:	cmp	r0, #2
   17b0c:	bcs	17e74 <__flatcc_fb_gen_c_reader@@Base+0x990>
   17b10:	ldrh	r0, [r5, #48]	; 0x30
   17b14:	cmp	r0, #8
   17b18:	bne	17e94 <__flatcc_fb_gen_c_reader@@Base+0x9b0>
   17b1c:	ldr	r6, [r5, #40]	; 0x28
   17b20:	mov	r0, r6
   17b24:	mov	r1, r4
   17b28:	bl	19648 <__flatcc_fb_gen_c_reader@@Base+0x2164>
   17b2c:	mov	r9, r0
   17b30:	mov	r0, r6
   17b34:	bl	19660 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   17b38:	mov	r6, r0
   17b3c:	ldr	r0, [r5, #112]	; 0x70
   17b40:	str	r0, [sp, #20]
   17b44:	ldrh	r7, [r5, #8]
   17b48:	mov	r0, r5
   17b4c:	mov	r1, r8
   17b50:	bl	19638 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   17b54:	ldr	r2, [r5, #32]
   17b58:	movw	r1, #26588	; 0x67dc
   17b5c:	movt	r1, #3
   17b60:	mov	r0, r4
   17b64:	bl	196d8 <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   17b68:	movw	r0, #52180	; 0xcbd4
   17b6c:	movt	r0, #3
   17b70:	movw	sl, #63933	; 0xf9bd
   17b74:	movt	sl, #4
   17b78:	cmp	r7, #3
   17b7c:	movne	sl, r0
   17b80:	ldr	r0, [r4, #204]	; 0xcc
   17b84:	stm	sp, {r8, sl}
   17b88:	movw	r1, #52191	; 0xcbdf
   17b8c:	movt	r1, #3
   17b90:	mov	r2, r9
   17b94:	mov	r3, r6
   17b98:	bl	149f4 <fprintf@plt>
   17b9c:	ldr	r0, [r4, #204]	; 0xcc
   17ba0:	ldr	r1, [sp, #20]
   17ba4:	lsl	r1, r1, #3
   17ba8:	stm	sp, {r8, sl}
   17bac:	str	r1, [sp, #8]
   17bb0:	movw	r1, #52214	; 0xcbf6
   17bb4:	movt	r1, #3
   17bb8:	mov	r2, r4
   17bbc:	mov	r6, r8
   17bc0:	mov	r3, r8
   17bc4:	bl	149f4 <fprintf@plt>
   17bc8:	str	r7, [sp, #16]
   17bcc:	cmp	r7, #3
   17bd0:	beq	17bf0 <__flatcc_fb_gen_c_reader@@Base+0x70c>
   17bd4:	ldr	r0, [r4, #204]	; 0xcc
   17bd8:	str	r6, [sp]
   17bdc:	movw	r1, #52256	; 0xcc20
   17be0:	movt	r1, #3
   17be4:	mov	r2, r4
   17be8:	mov	r3, r4
   17bec:	bl	149f4 <fprintf@plt>
   17bf0:	ldr	r7, [r5, #20]
   17bf4:	cmp	r7, #0
   17bf8:	beq	17c68 <__flatcc_fb_gen_c_reader@@Base+0x784>
   17bfc:	sub	r8, fp, #136	; 0x88
   17c00:	movw	r9, #52282	; 0xcc3a
   17c04:	movt	r9, #3
   17c08:	ldr	r2, [r7, #68]	; 0x44
   17c0c:	mov	r0, r4
   17c10:	movw	r1, #26588	; 0x67dc
   17c14:	movt	r1, #3
   17c18:	bl	196d8 <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   17c1c:	mov	r0, r7
   17c20:	sub	r1, fp, #140	; 0x8c
   17c24:	sub	r2, fp, #36	; 0x24
   17c28:	bl	19794 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   17c2c:	ldr	r0, [r5, #40]	; 0x28
   17c30:	add	r1, r7, #48	; 0x30
   17c34:	mov	r2, r8
   17c38:	bl	1979c <__flatcc_fb_gen_c_reader@@Base+0x22b8>
   17c3c:	ldr	r0, [r4, #204]	; 0xcc
   17c40:	ldr	r3, [fp, #-140]	; 0xffffff74
   17c44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17c48:	stm	sp, {r1, r6, sl}
   17c4c:	str	r8, [sp, #12]
   17c50:	mov	r1, r9
   17c54:	mov	r2, r6
   17c58:	bl	149f4 <fprintf@plt>
   17c5c:	ldr	r7, [r7]
   17c60:	cmp	r7, #0
   17c64:	bne	17c08 <__flatcc_fb_gen_c_reader@@Base+0x724>
   17c68:	str	r5, [sp, #20]
   17c6c:	ldr	r1, [r4, #204]	; 0xcc
   17c70:	mov	r0, #10
   17c74:	bl	14a54 <fputc@plt>
   17c78:	ldr	r0, [r4, #204]	; 0xcc
   17c7c:	ldr	r1, [sp, #16]
   17c80:	cmp	r1, #3
   17c84:	beq	17cb0 <__flatcc_fb_gen_c_reader@@Base+0x7cc>
   17c88:	movw	r1, #52313	; 0xcc59
   17c8c:	movt	r1, #3
   17c90:	add	r2, sp, #24
   17c94:	mov	r3, r2
   17c98:	bl	149f4 <fprintf@plt>
   17c9c:	ldr	r3, [r4, #204]	; 0xcc
   17ca0:	movw	r0, #48986	; 0xbf5a
   17ca4:	movt	r0, #4
   17ca8:	mov	r1, #20
   17cac:	b	17cd4 <__flatcc_fb_gen_c_reader@@Base+0x7f0>
   17cb0:	movw	r1, #52377	; 0xcc99
   17cb4:	movt	r1, #3
   17cb8:	add	r2, sp, #24
   17cbc:	mov	r3, r2
   17cc0:	bl	149f4 <fprintf@plt>
   17cc4:	ldr	r3, [r4, #204]	; 0xcc
   17cc8:	movw	r0, #52431	; 0xcccf
   17ccc:	movt	r0, #3
   17cd0:	mov	r1, #21
   17cd4:	mov	r2, #1
   17cd8:	bl	1497c <fwrite@plt>
   17cdc:	ldr	r0, [sp, #20]
   17ce0:	ldr	r5, [r0, #20]
   17ce4:	cmp	r5, #0
   17ce8:	beq	17d50 <__flatcc_fb_gen_c_reader@@Base+0x86c>
   17cec:	sub	r8, fp, #140	; 0x8c
   17cf0:	sub	r9, fp, #36	; 0x24
   17cf4:	movw	sl, #52505	; 0xcd19
   17cf8:	movt	sl, #3
   17cfc:	movw	r7, #52453	; 0xcce5
   17d00:	movt	r7, #3
   17d04:	add	r6, sp, #24
   17d08:	mov	r0, r5
   17d0c:	mov	r1, r8
   17d10:	mov	r2, r9
   17d14:	bl	19794 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   17d18:	ldr	r0, [r4, #204]	; 0xcc
   17d1c:	ldrh	r1, [r5, #10]
   17d20:	ldr	r3, [fp, #-140]	; 0xffffff74
   17d24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d28:	stm	sp, {r2, r3}
   17d2c:	str	r2, [sp, #8]
   17d30:	tst	r1, #4
   17d34:	mov	r1, r7
   17d38:	moveq	r1, sl
   17d3c:	mov	r2, r6
   17d40:	bl	149f4 <fprintf@plt>
   17d44:	ldr	r5, [r5]
   17d48:	cmp	r5, #0
   17d4c:	bne	17d08 <__flatcc_fb_gen_c_reader@@Base+0x824>
   17d50:	ldr	r3, [r4, #204]	; 0xcc
   17d54:	movw	r0, #52539	; 0xcd3b
   17d58:	movt	r0, #3
   17d5c:	mov	r1, #32
   17d60:	mov	r2, #1
   17d64:	bl	1497c <fwrite@plt>
   17d68:	ldr	r1, [r4, #204]	; 0xcc
   17d6c:	mov	r0, #10
   17d70:	bl	14a54 <fputc@plt>
   17d74:	ldr	r0, [r4, #204]	; 0xcc
   17d78:	ldr	r1, [sp, #16]
   17d7c:	cmp	r1, #3
   17d80:	beq	17dac <__flatcc_fb_gen_c_reader@@Base+0x8c8>
   17d84:	movw	r1, #52572	; 0xcd5c
   17d88:	movt	r1, #3
   17d8c:	add	r2, sp, #24
   17d90:	mov	r3, r2
   17d94:	bl	149f4 <fprintf@plt>
   17d98:	ldr	r3, [r4, #204]	; 0xcc
   17d9c:	movw	r0, #48986	; 0xbf5a
   17da0:	movt	r0, #4
   17da4:	mov	r1, #20
   17da8:	b	17dd0 <__flatcc_fb_gen_c_reader@@Base+0x8ec>
   17dac:	movw	r1, #52632	; 0xcd98
   17db0:	movt	r1, #3
   17db4:	add	r2, sp, #24
   17db8:	mov	r3, r2
   17dbc:	bl	149f4 <fprintf@plt>
   17dc0:	ldr	r3, [r4, #204]	; 0xcc
   17dc4:	movw	r0, #52431	; 0xcccf
   17dc8:	movt	r0, #3
   17dcc:	mov	r1, #21
   17dd0:	mov	r2, #1
   17dd4:	bl	1497c <fwrite@plt>
   17dd8:	ldr	r0, [sp, #20]
   17ddc:	ldr	r5, [r0, #20]
   17de0:	cmp	r5, #0
   17de4:	beq	17e48 <__flatcc_fb_gen_c_reader@@Base+0x964>
   17de8:	sub	r8, fp, #140	; 0x8c
   17dec:	sub	r9, fp, #36	; 0x24
   17df0:	movw	sl, #52735	; 0xcdff
   17df4:	movt	sl, #3
   17df8:	movw	r7, #52688	; 0xcdd0
   17dfc:	movt	r7, #3
   17e00:	add	r6, sp, #24
   17e04:	mov	r0, r5
   17e08:	mov	r1, r8
   17e0c:	mov	r2, r9
   17e10:	bl	19794 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   17e14:	ldr	r0, [r4, #204]	; 0xcc
   17e18:	ldrh	r1, [r5, #10]
   17e1c:	ldr	r3, [fp, #-140]	; 0xffffff74
   17e20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17e24:	str	r2, [sp]
   17e28:	tst	r1, #4
   17e2c:	mov	r1, r7
   17e30:	moveq	r1, sl
   17e34:	mov	r2, r6
   17e38:	bl	149f4 <fprintf@plt>
   17e3c:	ldr	r5, [r5]
   17e40:	cmp	r5, #0
   17e44:	bne	17e04 <__flatcc_fb_gen_c_reader@@Base+0x920>
   17e48:	ldr	r3, [r4, #204]	; 0xcc
   17e4c:	movw	r0, #52764	; 0xce1c
   17e50:	movt	r0, #3
   17e54:	mov	r1, #31
   17e58:	mov	r2, #1
   17e5c:	bl	1497c <fwrite@plt>
   17e60:	ldr	r1, [r4, #204]	; 0xcc
   17e64:	mov	r0, #10
   17e68:	bl	14a54 <fputc@plt>
   17e6c:	sub	sp, fp, #28
   17e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e74:	movw	r0, #52033	; 0xcb41
   17e78:	movt	r0, #3
   17e7c:	movw	r1, #26342	; 0x66e6
   17e80:	movt	r1, #3
   17e84:	movw	r3, #52097	; 0xcb81
   17e88:	movt	r3, #3
   17e8c:	movw	r2, #1204	; 0x4b4
   17e90:	bl	14ab4 <__assert_fail@plt>
   17e94:	movw	r0, #52148	; 0xcbb4
   17e98:	movt	r0, #3
   17e9c:	movw	r1, #26342	; 0x66e6
   17ea0:	movt	r1, #3
   17ea4:	movw	r3, #52097	; 0xcb81
   17ea8:	movt	r3, #3
   17eac:	movw	r2, #1205	; 0x4b5
   17eb0:	bl	14ab4 <__assert_fail@plt>
   17eb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17eb8:	add	fp, sp, #28
   17ebc:	sub	sp, sp, #516	; 0x204
   17ec0:	mov	r4, r1
   17ec4:	mov	r9, r0
   17ec8:	ldr	r0, [r0, #212]	; 0xd4
   17ecc:	ldr	r8, [r0, #132]	; 0x84
   17ed0:	sub	r0, fp, #264	; 0x108
   17ed4:	mov	r1, #0
   17ed8:	mov	r2, #220	; 0xdc
   17edc:	bl	14a0c <memset@plt>
   17ee0:	add	sl, sp, #56	; 0x38
   17ee4:	mov	r0, sl
   17ee8:	mov	r1, #0
   17eec:	mov	r2, #220	; 0xdc
   17ef0:	bl	14a0c <memset@plt>
   17ef4:	ldrh	r0, [r4, #8]
   17ef8:	cmp	r0, #1
   17efc:	bne	18750 <__flatcc_fb_gen_c_reader@@Base+0x126c>
   17f00:	add	r0, r4, #96	; 0x60
   17f04:	mov	r2, r4
   17f08:	ldrh	r1, [r2, #104]!	; 0x68
   17f0c:	str	r2, [sp, #44]	; 0x2c
   17f10:	cmp	r1, #0
   17f14:	bne	17f24 <__flatcc_fb_gen_c_reader@@Base+0xa40>
   17f18:	ldrd	r2, [r0]
   17f1c:	orrs	r1, r2, r3
   17f20:	bne	18770 <__flatcc_fb_gen_c_reader@@Base+0x128c>
   17f24:	add	r6, r4, #112	; 0x70
   17f28:	ldrd	r2, [r6]
   17f2c:	orrs	r1, r2, r3
   17f30:	bne	17f40 <__flatcc_fb_gen_c_reader@@Base+0xa5c>
   17f34:	ldrd	r0, [r0]
   17f38:	orrs	r0, r0, r1
   17f3c:	bne	18790 <__flatcc_fb_gen_c_reader@@Base+0x12ac>
   17f40:	sub	r5, fp, #264	; 0x108
   17f44:	mov	r0, r4
   17f48:	mov	r1, r5
   17f4c:	bl	19638 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   17f50:	ldr	r2, [r4, #32]
   17f54:	movw	r1, #26588	; 0x67dc
   17f58:	movt	r1, #3
   17f5c:	mov	r0, r9
   17f60:	bl	196d8 <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   17f64:	ldrd	r0, [r6]
   17f68:	orrs	r0, r0, r1
   17f6c:	str	r9, [sp, #48]	; 0x30
   17f70:	beq	181d0 <__flatcc_fb_gen_c_reader@@Base+0xcec>
   17f74:	cmp	r8, #0
   17f78:	beq	17f94 <__flatcc_fb_gen_c_reader@@Base+0xab0>
   17f7c:	ldr	r3, [r9, #204]	; 0xcc
   17f80:	movw	r0, #53689	; 0xd1b9
   17f84:	movt	r0, #3
   17f88:	mov	r1, #16
   17f8c:	mov	r2, #1
   17f90:	bl	1497c <fwrite@plt>
   17f94:	str	r6, [sp, #28]
   17f98:	ldr	r0, [r9, #204]	; 0xcc
   17f9c:	movw	r1, #53706	; 0xd1ca
   17fa0:	movt	r1, #3
   17fa4:	sub	r2, fp, #264	; 0x108
   17fa8:	bl	149f4 <fprintf@plt>
   17fac:	str	r4, [sp, #32]
   17fb0:	ldr	r5, [r4, #20]
   17fb4:	cmp	r5, #0
   17fb8:	beq	18230 <__flatcc_fb_gen_c_reader@@Base+0xd4c>
   17fbc:	mov	r4, #0
   17fc0:	mov	r6, #0
   17fc4:	mov	r0, #0
   17fc8:	str	r0, [sp, #40]	; 0x28
   17fcc:	b	18014 <__flatcc_fb_gen_c_reader@@Base+0xb30>
   17fd0:	movw	r1, #53863	; 0xd267
   17fd4:	movt	r1, #3
   17fd8:	ldr	r2, [sp, #36]	; 0x24
   17fdc:	bl	149f4 <fprintf@plt>
   17fe0:	mov	r1, r6
   17fe4:	ldr	r0, [r9, #204]	; 0xcc
   17fe8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17fec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17ff0:	bl	149f4 <fprintf@plt>
   17ff4:	add	r4, r7, #8
   17ff8:	ldr	r6, [sp, #52]	; 0x34
   17ffc:	ldr	r0, [r7]
   18000:	ldr	r1, [r4]
   18004:	add	r4, r1, r0
   18008:	ldr	r5, [r5]
   1800c:	cmp	r5, #0
   18010:	beq	1823c <__flatcc_fb_gen_c_reader@@Base+0xd58>
   18014:	str	r6, [sp, #52]	; 0x34
   18018:	ldr	r2, [r5, #68]	; 0x44
   1801c:	mov	r0, r9
   18020:	movw	r1, #50498	; 0xc542
   18024:	movt	r1, #4
   18028:	bl	196d8 <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   1802c:	mov	r0, r5
   18030:	sub	r1, fp, #36	; 0x24
   18034:	sub	r2, fp, #40	; 0x28
   18038:	bl	19794 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   1803c:	cmp	r4, #0
   18040:	ldr	r0, [sp, #44]	; 0x2c
   18044:	addne	r0, r5, #74	; 0x4a
   18048:	ldrh	sl, [r0]
   1804c:	add	r7, r5, #80	; 0x50
   18050:	cmp	r8, #0
   18054:	ldrne	r0, [r7]
   18058:	subsne	r3, r0, r4
   1805c:	beq	18080 <__flatcc_fb_gen_c_reader@@Base+0xb9c>
   18060:	ldr	r0, [r9, #204]	; 0xcc
   18064:	movw	r1, #53719	; 0xd1d7
   18068:	movt	r1, #3
   1806c:	ldr	r4, [sp, #40]	; 0x28
   18070:	mov	r2, r4
   18074:	bl	149f4 <fprintf@plt>
   18078:	add	r4, r4, #1
   1807c:	str	r4, [sp, #40]	; 0x28
   18080:	ldrb	r0, [r5, #72]	; 0x48
   18084:	tst	r0, #4
   18088:	bne	180f4 <__flatcc_fb_gen_c_reader@@Base+0xc10>
   1808c:	ldrh	r0, [r5, #24]
   18090:	cmp	r0, #14
   18094:	beq	1812c <__flatcc_fb_gen_c_reader@@Base+0xc48>
   18098:	movw	r6, #54067	; 0xd333
   1809c:	movt	r6, #3
   180a0:	cmp	r0, #8
   180a4:	bne	186c4 <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   180a8:	ldr	r9, [r5, #16]
   180ac:	mov	r0, r9
   180b0:	ldr	r4, [sp, #48]	; 0x30
   180b4:	mov	r1, r4
   180b8:	bl	19648 <__flatcc_fb_gen_c_reader@@Base+0x2164>
   180bc:	str	r0, [sp, #36]	; 0x24
   180c0:	mov	r0, r9
   180c4:	mov	r9, r4
   180c8:	bl	19660 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   180cc:	mov	r3, r0
   180d0:	ldr	r0, [r4, #204]	; 0xcc
   180d4:	cmp	r8, #0
   180d8:	bne	17fd0 <__flatcc_fb_gen_c_reader@@Base+0xaec>
   180dc:	str	r3, [sp]
   180e0:	movw	r1, #53873	; 0xd271
   180e4:	movt	r1, #3
   180e8:	mov	r2, sl
   180ec:	ldr	r3, [sp, #36]	; 0x24
   180f0:	b	17fdc <__flatcc_fb_gen_c_reader@@Base+0xaf8>
   180f4:	ldr	r0, [r9, #204]	; 0xcc
   180f8:	mov	r4, r7
   180fc:	ldr	r3, [r4, #8]!
   18100:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18104:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18108:	cmp	r8, #0
   1810c:	beq	18180 <__flatcc_fb_gen_c_reader@@Base+0xc9c>
   18110:	str	r2, [sp]
   18114:	str	r1, [sp, #4]
   18118:	movw	r1, #53749	; 0xd1f5
   1811c:	movt	r1, #3
   18120:	ldr	r6, [sp, #52]	; 0x34
   18124:	mov	r2, r6
   18128:	b	181a0 <__flatcc_fb_gen_c_reader@@Base+0xcbc>
   1812c:	ldr	r0, [r5, #16]
   18130:	ldrh	r4, [r0, #8]
   18134:	orr	r1, r4, #2
   18138:	cmp	r1, #3
   1813c:	bne	18730 <__flatcc_fb_gen_c_reader@@Base+0x124c>
   18140:	add	r6, sp, #56	; 0x38
   18144:	mov	r1, r6
   18148:	bl	19638 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   1814c:	cmp	r4, #1
   18150:	movw	r3, #53986	; 0xd2e2
   18154:	movt	r3, #3
   18158:	movw	r0, #26588	; 0x67dc
   1815c:	movt	r0, #3
   18160:	moveq	r3, r0
   18164:	ldr	r0, [r9, #204]	; 0xcc
   18168:	cmp	r8, #0
   1816c:	beq	181ac <__flatcc_fb_gen_c_reader@@Base+0xcc8>
   18170:	movw	r1, #53992	; 0xd2e8
   18174:	movt	r1, #3
   18178:	mov	r2, r6
   1817c:	b	181c0 <__flatcc_fb_gen_c_reader@@Base+0xcdc>
   18180:	str	r3, [sp]
   18184:	str	r2, [sp, #4]
   18188:	str	r1, [sp, #8]
   1818c:	movw	r1, #53800	; 0xd228
   18190:	movt	r1, #3
   18194:	mov	r2, sl
   18198:	ldr	r6, [sp, #52]	; 0x34
   1819c:	mov	r3, r6
   181a0:	bl	149f4 <fprintf@plt>
   181a4:	add	r6, r6, #1
   181a8:	b	17ffc <__flatcc_fb_gen_c_reader@@Base+0xb18>
   181ac:	str	r3, [sp]
   181b0:	movw	r1, #54004	; 0xd2f4
   181b4:	movt	r1, #3
   181b8:	mov	r2, sl
   181bc:	mov	r3, r6
   181c0:	bl	149f4 <fprintf@plt>
   181c4:	movw	r1, #54067	; 0xd333
   181c8:	movt	r1, #3
   181cc:	b	17fe4 <__flatcc_fb_gen_c_reader@@Base+0xb00>
   181d0:	ldr	r0, [r9, #204]	; 0xcc
   181d4:	movw	r1, #53365	; 0xd075
   181d8:	movt	r1, #3
   181dc:	mov	r2, r5
   181e0:	bl	149f4 <fprintf@plt>
   181e4:	ldr	r0, [r9, #204]	; 0xcc
   181e8:	str	r5, [sp]
   181ec:	movw	r1, #53462	; 0xd0d6
   181f0:	movt	r1, #3
   181f4:	mov	r2, r5
   181f8:	mov	r3, r5
   181fc:	bl	149f4 <fprintf@plt>
   18200:	ldr	r0, [r9, #204]	; 0xcc
   18204:	str	r5, [sp]
   18208:	movw	r1, #53546	; 0xd12a
   1820c:	movt	r1, #3
   18210:	mov	r2, r5
   18214:	mov	r3, r5
   18218:	bl	149f4 <fprintf@plt>
   1821c:	ldr	r0, [r9, #204]	; 0xcc
   18220:	str	r5, [sp]
   18224:	movw	r1, #53612	; 0xd16c
   18228:	movt	r1, #3
   1822c:	b	18334 <__flatcc_fb_gen_c_reader@@Base+0xe50>
   18230:	mov	r0, #0
   18234:	str	r0, [sp, #40]	; 0x28
   18238:	mov	r4, #0
   1823c:	cmp	r8, #0
   18240:	beq	182a8 <__flatcc_fb_gen_c_reader@@Base+0xdc4>
   18244:	ldr	r6, [sp, #28]
   18248:	ldr	r0, [r6]
   1824c:	subs	r3, r0, r4
   18250:	add	sl, sp, #56	; 0x38
   18254:	sub	r5, fp, #264	; 0x108
   18258:	beq	18270 <__flatcc_fb_gen_c_reader@@Base+0xd8c>
   1825c:	ldr	r0, [r9, #204]	; 0xcc
   18260:	movw	r1, #53719	; 0xd1d7
   18264:	movt	r1, #3
   18268:	ldr	r2, [sp, #40]	; 0x28
   1826c:	bl	149f4 <fprintf@plt>
   18270:	ldr	r3, [r9, #204]	; 0xcc
   18274:	movw	r0, #30653	; 0x77bd
   18278:	movt	r0, #4
   1827c:	mov	r1, #3
   18280:	mov	r2, #1
   18284:	bl	1497c <fwrite@plt>
   18288:	ldr	r3, [r9, #204]	; 0xcc
   1828c:	movw	r0, #54074	; 0xd33a
   18290:	movt	r0, #3
   18294:	mov	r1, #15
   18298:	mov	r2, #1
   1829c:	bl	1497c <fwrite@plt>
   182a0:	ldr	r4, [sp, #32]
   182a4:	b	182d0 <__flatcc_fb_gen_c_reader@@Base+0xdec>
   182a8:	ldr	r3, [r9, #204]	; 0xcc
   182ac:	movw	r0, #30653	; 0x77bd
   182b0:	movt	r0, #4
   182b4:	mov	r1, #3
   182b8:	mov	r2, #1
   182bc:	bl	1497c <fwrite@plt>
   182c0:	add	sl, sp, #56	; 0x38
   182c4:	ldr	r4, [sp, #32]
   182c8:	ldr	r6, [sp, #28]
   182cc:	sub	r5, fp, #264	; 0x108
   182d0:	ldr	r0, [r9, #204]	; 0xcc
   182d4:	ldrd	r2, [r6]
   182d8:	stm	sp, {r2, r3}
   182dc:	movw	r1, #54090	; 0xd34a
   182e0:	movt	r1, #3
   182e4:	mov	r2, r5
   182e8:	bl	149f4 <fprintf@plt>
   182ec:	ldr	r0, [r9, #204]	; 0xcc
   182f0:	str	r5, [sp]
   182f4:	movw	r1, #54153	; 0xd389
   182f8:	movt	r1, #3
   182fc:	mov	r2, r5
   18300:	mov	r3, r5
   18304:	bl	149f4 <fprintf@plt>
   18308:	ldr	r0, [r9, #204]	; 0xcc
   1830c:	str	r5, [sp]
   18310:	movw	r1, #54241	; 0xd3e1
   18314:	movt	r1, #3
   18318:	mov	r2, r5
   1831c:	mov	r3, r5
   18320:	bl	149f4 <fprintf@plt>
   18324:	ldr	r0, [r9, #204]	; 0xcc
   18328:	stm	sp, {r5, r9}
   1832c:	movw	r1, #54311	; 0xd427
   18330:	movt	r1, #3
   18334:	mov	r2, r5
   18338:	mov	r3, r5
   1833c:	bl	149f4 <fprintf@plt>
   18340:	ldr	r0, [r9, #204]	; 0xcc
   18344:	ldrd	r2, [r6]
   18348:	stm	sp, {r2, r3}
   1834c:	movw	r1, #54398	; 0xd47e
   18350:	movt	r1, #3
   18354:	sub	r5, fp, #264	; 0x108
   18358:	mov	r2, r5
   1835c:	bl	149f4 <fprintf@plt>
   18360:	ldr	r0, [r9, #204]	; 0xcc
   18364:	str	r9, [sp]
   18368:	movw	r1, #54448	; 0xd4b0
   1836c:	movt	r1, #3
   18370:	mov	r2, r5
   18374:	mov	r3, r5
   18378:	bl	149f4 <fprintf@plt>
   1837c:	ldr	r0, [r9, #204]	; 0xcc
   18380:	movw	r1, #54512	; 0xd4f0
   18384:	movt	r1, #3
   18388:	mov	r2, r9
   1838c:	mov	r3, r5
   18390:	bl	149f4 <fprintf@plt>
   18394:	ldr	r1, [r9, #204]	; 0xcc
   18398:	mov	r9, r5
   1839c:	mov	r0, #10
   183a0:	bl	14a54 <fputc@plt>
   183a4:	ldr	r6, [r4, #20]
   183a8:	cmp	r6, #0
   183ac:	beq	186ac <__flatcc_fb_gen_c_reader@@Base+0x11c8>
   183b0:	mov	r0, #0
   183b4:	str	r0, [sp, #44]	; 0x2c
   183b8:	sub	r7, fp, #36	; 0x24
   183bc:	sub	r4, fp, #40	; 0x28
   183c0:	mov	r0, #0
   183c4:	str	r0, [sp, #52]	; 0x34
   183c8:	b	183e4 <__flatcc_fb_gen_c_reader@@Base+0xf00>
   183cc:	mov	r0, #1
   183d0:	str	r0, [sp, #44]	; 0x2c
   183d4:	sub	r4, fp, #40	; 0x28
   183d8:	ldr	r6, [r6]
   183dc:	cmp	r6, #0
   183e0:	beq	186ac <__flatcc_fb_gen_c_reader@@Base+0x11c8>
   183e4:	ldrb	r0, [r6, #72]	; 0x48
   183e8:	tst	r0, #4
   183ec:	bne	183d8 <__flatcc_fb_gen_c_reader@@Base+0xef4>
   183f0:	mov	r0, r6
   183f4:	mov	r1, r7
   183f8:	mov	r2, r4
   183fc:	bl	19794 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   18400:	ldrh	r0, [r6, #24]
   18404:	cmp	r0, #14
   18408:	beq	18488 <__flatcc_fb_gen_c_reader@@Base+0xfa4>
   1840c:	cmp	r0, #8
   18410:	bne	18664 <__flatcc_fb_gen_c_reader@@Base+0x1180>
   18414:	ldr	r8, [r6, #16]
   18418:	mov	r0, r8
   1841c:	ldr	r4, [sp, #48]	; 0x30
   18420:	mov	r1, r4
   18424:	bl	19648 <__flatcc_fb_gen_c_reader@@Base+0x2164>
   18428:	mov	r7, r9
   1842c:	mov	r9, sl
   18430:	mov	sl, r0
   18434:	mov	r0, r8
   18438:	bl	19660 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   1843c:	mov	r5, r0
   18440:	ldr	r0, [r6, #16]
   18444:	bl	19950 <__flatcc_fb_gen_c_reader@@Base+0x246c>
   18448:	ldr	r1, [r4, #204]	; 0xcc
   1844c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18450:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18454:	stm	sp, {r2, r3, r4}
   18458:	str	r0, [sp, #12]
   1845c:	str	sl, [sp, #16]
   18460:	mov	sl, r9
   18464:	mov	r9, r7
   18468:	sub	r7, fp, #36	; 0x24
   1846c:	str	r5, [sp, #20]
   18470:	mov	r0, r1
   18474:	movw	r1, #54536	; 0xd508
   18478:	movt	r1, #3
   1847c:	mov	r2, r4
   18480:	sub	r4, fp, #40	; 0x28
   18484:	b	1865c <__flatcc_fb_gen_c_reader@@Base+0x1178>
   18488:	ldr	r0, [r6, #16]
   1848c:	mov	r1, sl
   18490:	bl	19638 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   18494:	ldr	r0, [r6, #16]
   18498:	ldrh	r1, [r0, #8]
   1849c:	cmp	r1, #1
   184a0:	beq	18640 <__flatcc_fb_gen_c_reader@@Base+0x115c>
   184a4:	cmp	r1, #3
   184a8:	bne	18664 <__flatcc_fb_gen_c_reader@@Base+0x1180>
   184ac:	ldr	r0, [r0, #40]	; 0x28
   184b0:	bl	19950 <__flatcc_fb_gen_c_reader@@Base+0x246c>
   184b4:	ldr	r4, [sp, #48]	; 0x30
   184b8:	ldr	r0, [r4, #204]	; 0xcc
   184bc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   184c0:	ldr	r8, [fp, #-40]	; 0xffffffd8
   184c4:	stm	sp, {r5, r8, sl}
   184c8:	str	sl, [sp, #12]
   184cc:	movw	r1, #54590	; 0xd53e
   184d0:	movt	r1, #3
   184d4:	mov	r2, r4
   184d8:	mov	r3, r9
   184dc:	bl	149f4 <fprintf@plt>
   184e0:	ldr	r0, [r4, #212]	; 0xd4
   184e4:	ldr	r0, [r0, #32]
   184e8:	cmp	r0, #0
   184ec:	bne	18518 <__flatcc_fb_gen_c_reader@@Base+0x1034>
   184f0:	ldrb	r0, [r6, #72]	; 0x48
   184f4:	tst	r0, #128	; 0x80
   184f8:	beq	18518 <__flatcc_fb_gen_c_reader@@Base+0x1034>
   184fc:	ldr	r2, [sp, #48]	; 0x30
   18500:	ldr	r0, [r2, #204]	; 0xcc
   18504:	stm	sp, {r5, r8, sl}
   18508:	movw	r1, #54647	; 0xd577
   1850c:	movt	r1, #3
   18510:	mov	r3, r9
   18514:	bl	149f4 <fprintf@plt>
   18518:	ldrb	r0, [r6, #72]	; 0x48
   1851c:	tst	r0, #128	; 0x80
   18520:	sub	r4, fp, #40	; 0x28
   18524:	beq	18664 <__flatcc_fb_gen_c_reader@@Base+0x1180>
   18528:	ldr	r0, [sp, #44]	; 0x2c
   1852c:	cmp	r0, #0
   18530:	ldr	r4, [sp, #48]	; 0x30
   18534:	beq	18550 <__flatcc_fb_gen_c_reader@@Base+0x106c>
   18538:	ldr	r3, [r4, #204]	; 0xcc
   1853c:	movw	r0, #54701	; 0xd5ad
   18540:	movt	r0, #3
   18544:	mov	r1, #66	; 0x42
   18548:	mov	r2, #1
   1854c:	bl	1497c <fwrite@plt>
   18550:	ldr	r3, [r4, #204]	; 0xcc
   18554:	movw	r0, #54768	; 0xd5f0
   18558:	movt	r0, #3
   1855c:	mov	r1, #61	; 0x3d
   18560:	mov	r2, #1
   18564:	bl	1497c <fwrite@plt>
   18568:	ldr	r0, [r4, #204]	; 0xcc
   1856c:	stm	sp, {r5, r8, sl}
   18570:	movw	r1, #54830	; 0xd62e
   18574:	movt	r1, #3
   18578:	mov	r2, r4
   1857c:	mov	r3, r9
   18580:	bl	149f4 <fprintf@plt>
   18584:	ldr	r0, [r4, #212]	; 0xd4
   18588:	ldr	r0, [r0, #136]	; 0x88
   1858c:	cmp	r0, #0
   18590:	beq	185b4 <__flatcc_fb_gen_c_reader@@Base+0x10d0>
   18594:	ldr	r0, [r4, #204]	; 0xcc
   18598:	stm	sp, {r5, r8, sl}
   1859c:	str	r9, [sp, #12]
   185a0:	movw	r1, #54884	; 0xd664
   185a4:	movt	r1, #3
   185a8:	mov	r2, r4
   185ac:	mov	r3, r9
   185b0:	bl	149f4 <fprintf@plt>
   185b4:	mov	r0, #1
   185b8:	str	r0, [sp, #52]	; 0x34
   185bc:	ldr	r0, [sp, #44]	; 0x2c
   185c0:	cmp	r0, #0
   185c4:	sub	r4, fp, #40	; 0x28
   185c8:	bne	183d8 <__flatcc_fb_gen_c_reader@@Base+0xef4>
   185cc:	ldr	r4, [sp, #48]	; 0x30
   185d0:	ldr	r0, [r4, #204]	; 0xcc
   185d4:	stm	sp, {r5, r8, sl}
   185d8:	movw	r1, #54944	; 0xd6a0
   185dc:	movt	r1, #3
   185e0:	mov	r2, r4
   185e4:	mov	r3, r9
   185e8:	bl	149f4 <fprintf@plt>
   185ec:	ldr	r0, [r4, #204]	; 0xcc
   185f0:	stm	sp, {r5, r8, sl}
   185f4:	movw	r1, #55006	; 0xd6de
   185f8:	movt	r1, #3
   185fc:	mov	r2, r4
   18600:	mov	r3, r9
   18604:	bl	149f4 <fprintf@plt>
   18608:	ldr	r0, [r4, #212]	; 0xd4
   1860c:	ldr	r0, [r0, #136]	; 0x88
   18610:	mov	r1, #1
   18614:	str	r1, [sp, #52]	; 0x34
   18618:	cmp	r0, #0
   1861c:	beq	183cc <__flatcc_fb_gen_c_reader@@Base+0xee8>
   18620:	ldr	r0, [r4, #204]	; 0xcc
   18624:	stm	sp, {r5, r8}
   18628:	movw	r1, #55068	; 0xd71c
   1862c:	movt	r1, #3
   18630:	mov	r2, r9
   18634:	mov	r3, r9
   18638:	bl	149f4 <fprintf@plt>
   1863c:	b	183cc <__flatcc_fb_gen_c_reader@@Base+0xee8>
   18640:	ldr	r2, [sp, #48]	; 0x30
   18644:	ldr	r0, [r2, #204]	; 0xcc
   18648:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1864c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18650:	stm	sp, {r1, r3, sl}
   18654:	movw	r1, #55109	; 0xd745
   18658:	movt	r1, #3
   1865c:	mov	r3, r9
   18660:	bl	149f4 <fprintf@plt>
   18664:	ldr	r0, [sp, #52]	; 0x34
   18668:	cmp	r0, #0
   1866c:	bne	183d8 <__flatcc_fb_gen_c_reader@@Base+0xef4>
   18670:	ldrh	r0, [r6, #72]	; 0x48
   18674:	ands	r0, r0, #128	; 0x80
   18678:	beq	183d8 <__flatcc_fb_gen_c_reader@@Base+0xef4>
   1867c:	ldr	r0, [sp, #48]	; 0x30
   18680:	ldr	r3, [r0, #204]	; 0xcc
   18684:	mov	r0, #1
   18688:	str	r0, [sp, #44]	; 0x2c
   1868c:	movw	r0, #55164	; 0xd77c
   18690:	movt	r0, #3
   18694:	mov	r1, #84	; 0x54
   18698:	mov	r2, #1
   1869c:	bl	1497c <fwrite@plt>
   186a0:	mov	r0, #0
   186a4:	str	r0, [sp, #52]	; 0x34
   186a8:	b	183d8 <__flatcc_fb_gen_c_reader@@Base+0xef4>
   186ac:	ldr	r0, [sp, #48]	; 0x30
   186b0:	ldr	r1, [r0, #204]	; 0xcc
   186b4:	mov	r0, #10
   186b8:	bl	14a54 <fputc@plt>
   186bc:	sub	sp, fp, #28
   186c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186c4:	ldr	r0, [sp, #48]	; 0x30
   186c8:	ldr	r0, [r0, #204]	; 0xcc
   186cc:	movw	r1, #54028	; 0xd30c
   186d0:	movt	r1, #3
   186d4:	movw	r2, #54036	; 0xd314
   186d8:	movt	r2, #3
   186dc:	bl	149f4 <fprintf@plt>
   186e0:	movw	r0, #8368	; 0x20b0
   186e4:	movt	r0, #6
   186e8:	ldr	r0, [r0]
   186ec:	movw	r1, #52924	; 0xcebc
   186f0:	movt	r1, #3
   186f4:	str	r1, [sp]
   186f8:	movw	r1, #26331	; 0x66db
   186fc:	movt	r1, #3
   18700:	movw	r4, #26342	; 0x66e6
   18704:	movt	r4, #3
   18708:	mov	r2, r4
   1870c:	movw	r3, #1029	; 0x405
   18710:	bl	149f4 <fprintf@plt>
   18714:	movw	r0, #30217	; 0x7609
   18718:	movt	r0, #4
   1871c:	movw	r3, #53249	; 0xd001
   18720:	movt	r3, #3
   18724:	mov	r1, r4
   18728:	movw	r2, #1029	; 0x405
   1872c:	bl	14ab4 <__assert_fail@plt>
   18730:	movw	r0, #53895	; 0xd287
   18734:	movt	r0, #3
   18738:	movw	r1, #26342	; 0x66e6
   1873c:	movt	r1, #3
   18740:	movw	r3, #53249	; 0xd001
   18744:	movt	r3, #3
   18748:	movw	r2, #1018	; 0x3fa
   1874c:	bl	14ab4 <__assert_fail@plt>
   18750:	movw	r0, #53217	; 0xcfe1
   18754:	movt	r0, #3
   18758:	movw	r1, #26342	; 0x66e6
   1875c:	movt	r1, #3
   18760:	movw	r3, #53249	; 0xd001
   18764:	movt	r3, #3
   18768:	mov	r2, #936	; 0x3a8
   1876c:	bl	14ab4 <__assert_fail@plt>
   18770:	movw	r0, #53302	; 0xd036
   18774:	movt	r0, #3
   18778:	movw	r1, #26342	; 0x66e6
   1877c:	movt	r1, #3
   18780:	movw	r3, #53249	; 0xd001
   18784:	movt	r3, #3
   18788:	movw	r2, #937	; 0x3a9
   1878c:	bl	14ab4 <__assert_fail@plt>
   18790:	movw	r0, #53334	; 0xd056
   18794:	movt	r0, #3
   18798:	movw	r1, #26342	; 0x66e6
   1879c:	movt	r1, #3
   187a0:	movw	r3, #53249	; 0xd001
   187a4:	movt	r3, #3
   187a8:	movw	r2, #938	; 0x3aa
   187ac:	bl	14ab4 <__assert_fail@plt>
   187b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187b4:	add	fp, sp, #28
   187b8:	sub	sp, sp, #620	; 0x26c
   187bc:	mov	r5, r0
   187c0:	ldrh	r0, [r1, #8]
   187c4:	cmp	r0, #0
   187c8:	bne	1923c <__flatcc_fb_gen_c_reader@@Base+0x1d58>
   187cc:	mov	r4, r1
   187d0:	sub	r8, fp, #264	; 0x108
   187d4:	mov	r0, #0
   187d8:	str	r0, [sp, #56]	; 0x38
   187dc:	mov	r0, r8
   187e0:	mov	r1, #0
   187e4:	mov	r2, #220	; 0xdc
   187e8:	bl	14a0c <memset@plt>
   187ec:	add	r0, sp, #160	; 0xa0
   187f0:	mov	r1, #0
   187f4:	mov	r2, #220	; 0xdc
   187f8:	bl	14a0c <memset@plt>
   187fc:	ldr	r1, [r5, #204]	; 0xcc
   18800:	mov	r0, #10
   18804:	bl	14a54 <fputc@plt>
   18808:	mov	r0, r4
   1880c:	mov	r1, r8
   18810:	bl	19638 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   18814:	ldr	r2, [r4, #32]
   18818:	movw	r1, #26588	; 0x67dc
   1881c:	movt	r1, #3
   18820:	mov	r0, r5
   18824:	bl	196d8 <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   18828:	ldr	r0, [r5, #204]	; 0xcc
   1882c:	movw	r1, #55377	; 0xd851
   18830:	movt	r1, #3
   18834:	mov	r2, r8
   18838:	bl	149f4 <fprintf@plt>
   1883c:	ldr	r0, [r5, #204]	; 0xcc
   18840:	str	r5, [sp]
   18844:	movw	r1, #54448	; 0xd4b0
   18848:	movt	r1, #3
   1884c:	mov	r2, r8
   18850:	mov	r3, r8
   18854:	bl	149f4 <fprintf@plt>
   18858:	ldr	r0, [r5, #204]	; 0xcc
   1885c:	str	r8, [sp]
   18860:	stmib	sp, {r5, r8}
   18864:	movw	r1, #55418	; 0xd87a
   18868:	movt	r1, #3
   1886c:	mov	r2, r8
   18870:	mov	r3, r8
   18874:	bl	149f4 <fprintf@plt>
   18878:	ldr	r0, [r5, #204]	; 0xcc
   1887c:	movw	r1, #55519	; 0xd8df
   18880:	movt	r1, #3
   18884:	mov	r2, r5
   18888:	mov	r3, r8
   1888c:	bl	149f4 <fprintf@plt>
   18890:	ldr	r1, [r5, #204]	; 0xcc
   18894:	mov	r0, #10
   18898:	bl	14a54 <fputc@plt>
   1889c:	str	r4, [sp, #40]	; 0x28
   188a0:	ldr	r7, [r4, #20]
   188a4:	cmp	r7, #0
   188a8:	beq	19144 <__flatcc_fb_gen_c_reader@@Base+0x1c60>
   188ac:	movw	r9, #26588	; 0x67dc
   188b0:	movt	r9, #3
   188b4:	sub	sl, fp, #40	; 0x28
   188b8:	sub	r6, fp, #36	; 0x24
   188bc:	b	188ec <__flatcc_fb_gen_c_reader@@Base+0x1408>
   188c0:	ldr	r0, [r5, #204]	; 0xcc
   188c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   188c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   188cc:	str	r1, [sp]
   188d0:	movw	r1, #55542	; 0xd8f6
   188d4:	movt	r1, #3
   188d8:	mov	r2, r8
   188dc:	bl	149f4 <fprintf@plt>
   188e0:	ldr	r7, [r7]
   188e4:	cmp	r7, #0
   188e8:	beq	19144 <__flatcc_fb_gen_c_reader@@Base+0x1c60>
   188ec:	ldr	r2, [r7, #68]	; 0x44
   188f0:	mov	r0, r5
   188f4:	mov	r1, r9
   188f8:	bl	196d8 <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   188fc:	mov	r0, r7
   18900:	mov	r1, sl
   18904:	mov	r2, r6
   18908:	bl	19794 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   1890c:	ldrh	r0, [r7, #72]	; 0x48
   18910:	tst	r0, #4
   18914:	bne	188c0 <__flatcc_fb_gen_c_reader@@Base+0x13dc>
   18918:	ubfx	r4, r0, #8, #1
   1891c:	ldrh	r0, [r7, #24]
   18920:	sub	r0, r0, #7
   18924:	cmp	r0, #8
   18928:	bhi	1914c <__flatcc_fb_gen_c_reader@@Base+0x1c68>
   1892c:	mov	r9, r8
   18930:	add	r8, r7, #96	; 0x60
   18934:	add	r1, pc, #0
   18938:	ldr	pc, [r1, r0, lsl #2]
   1893c:	andeq	r8, r1, r0, ror #18
   18940:	andeq	r8, r1, ip, lsr #22
   18944:	andeq	r8, r1, r0, lsl #27
   18948:	ldrdeq	r8, [r1], -r4
   1894c:	andeq	r9, r1, ip, asr #2
   18950:	andeq	r9, r1, ip, asr #2
   18954:	andeq	r9, r1, ip, asr #2
   18958:	andeq	r8, r1, r8, lsr lr
   1895c:	andeq	r8, r1, r8, asr #27
   18960:	ldr	r0, [r7, #16]
   18964:	bl	199c8 <__flatcc_fb_gen_c_reader@@Base+0x24e4>
   18968:	ldr	ip, [r5, #204]	; 0xcc
   1896c:	ldrd	r2, [r8]
   18970:	ldr	r6, [fp, #-40]	; 0xffffffd8
   18974:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18978:	stm	sp, {r2, r3}
   1897c:	mov	r8, r9
   18980:	str	r9, [sp, #8]
   18984:	str	r6, [sp, #12]
   18988:	movw	r9, #26588	; 0x67dc
   1898c:	movt	r9, #3
   18990:	str	r1, [sp, #16]
   18994:	str	r5, [sp, #20]
   18998:	str	r0, [sp, #24]
   1899c:	str	r4, [sp, #28]
   189a0:	mov	r0, ip
   189a4:	movw	r1, #55918	; 0xda6e
   189a8:	movt	r1, #3
   189ac:	mov	r2, r5
   189b0:	bl	149f4 <fprintf@plt>
   189b4:	ldr	r1, [r7, #104]	; 0x68
   189b8:	cmp	r1, #0
   189bc:	beq	18f6c <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   189c0:	mov	r0, r5
   189c4:	ldr	r2, [sp, #40]	; 0x28
   189c8:	mov	r3, r7
   189cc:	bl	19a40 <__flatcc_fb_gen_c_reader@@Base+0x255c>
   189d0:	b	18f6c <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   189d4:	ldr	r0, [r5, #204]	; 0xcc
   189d8:	ldrd	r2, [r8]
   189dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   189e0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   189e4:	stm	sp, {r2, r3}
   189e8:	mov	r8, r9
   189ec:	str	r9, [sp, #8]
   189f0:	str	r1, [sp, #12]
   189f4:	str	r6, [sp, #16]
   189f8:	str	r4, [sp, #20]
   189fc:	movw	r1, #55969	; 0xdaa1
   18a00:	movt	r1, #3
   18a04:	mov	r2, r5
   18a08:	bl	149f4 <fprintf@plt>
   18a0c:	ldr	r0, [r5, #212]	; 0xd4
   18a10:	ldr	r0, [r0, #32]
   18a14:	cmp	r0, #0
   18a18:	bne	18a4c <__flatcc_fb_gen_c_reader@@Base+0x1568>
   18a1c:	ldrb	r0, [r7, #72]	; 0x48
   18a20:	tst	r0, #128	; 0x80
   18a24:	beq	18a4c <__flatcc_fb_gen_c_reader@@Base+0x1568>
   18a28:	ldr	r0, [r5, #204]	; 0xcc
   18a2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18a30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18a34:	stm	sp, {r1, r2}
   18a38:	movw	r1, #56014	; 0xdace
   18a3c:	movt	r1, #3
   18a40:	mov	r2, r5
   18a44:	mov	r3, r8
   18a48:	bl	149f4 <fprintf@plt>
   18a4c:	ldrb	r0, [r7, #72]	; 0x48
   18a50:	tst	r0, #128	; 0x80
   18a54:	movw	r9, #26588	; 0x67dc
   18a58:	movt	r9, #3
   18a5c:	beq	18f6c <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   18a60:	ldr	r0, [sp, #56]	; 0x38
   18a64:	cmp	r0, #0
   18a68:	sub	r6, fp, #36	; 0x24
   18a6c:	beq	18a88 <__flatcc_fb_gen_c_reader@@Base+0x15a4>
   18a70:	ldr	r3, [r5, #204]	; 0xcc
   18a74:	movw	r0, #54701	; 0xd5ad
   18a78:	movt	r0, #3
   18a7c:	mov	r1, #66	; 0x42
   18a80:	mov	r2, #1
   18a84:	bl	1497c <fwrite@plt>
   18a88:	ldr	r0, [r5, #204]	; 0xcc
   18a8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18a90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18a94:	stm	sp, {r1, r2}
   18a98:	movw	r1, #56057	; 0xdaf9
   18a9c:	movt	r1, #3
   18aa0:	mov	r2, r5
   18aa4:	mov	r3, r8
   18aa8:	bl	149f4 <fprintf@plt>
   18aac:	ldr	r0, [r5, #212]	; 0xd4
   18ab0:	ldr	r0, [r0, #136]	; 0x88
   18ab4:	cmp	r0, #0
   18ab8:	beq	18ae0 <__flatcc_fb_gen_c_reader@@Base+0x15fc>
   18abc:	ldr	r0, [r5, #204]	; 0xcc
   18ac0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ac4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18ac8:	stm	sp, {r1, r2}
   18acc:	movw	r1, #56100	; 0xdb24
   18ad0:	movt	r1, #3
   18ad4:	mov	r2, r5
   18ad8:	mov	r3, r8
   18adc:	bl	149f4 <fprintf@plt>
   18ae0:	ldr	r0, [sp, #56]	; 0x38
   18ae4:	cmp	r0, #0
   18ae8:	bne	188e0 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   18aec:	ldr	r0, [r5, #204]	; 0xcc
   18af0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18af4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18af8:	stm	sp, {r1, r2}
   18afc:	movw	r1, #56143	; 0xdb4f
   18b00:	movt	r1, #3
   18b04:	mov	r2, r5
   18b08:	mov	r3, r8
   18b0c:	bl	149f4 <fprintf@plt>
   18b10:	ldr	r0, [r5, #204]	; 0xcc
   18b14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18b18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18b1c:	stm	sp, {r1, r2}
   18b20:	movw	r1, #56194	; 0xdb82
   18b24:	movt	r1, #3
   18b28:	b	18d38 <__flatcc_fb_gen_c_reader@@Base+0x1854>
   18b2c:	ldr	r4, [r7, #16]
   18b30:	mov	r0, r4
   18b34:	mov	r1, r5
   18b38:	bl	19648 <__flatcc_fb_gen_c_reader@@Base+0x2164>
   18b3c:	str	r0, [sp, #52]	; 0x34
   18b40:	mov	r0, r4
   18b44:	bl	19660 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   18b48:	mov	r6, r0
   18b4c:	ldr	r0, [r7, #16]
   18b50:	bl	19950 <__flatcc_fb_gen_c_reader@@Base+0x246c>
   18b54:	str	r0, [sp, #44]	; 0x2c
   18b58:	ldr	r0, [r7, #16]
   18b5c:	add	r1, r7, #48	; 0x30
   18b60:	add	r4, sp, #60	; 0x3c
   18b64:	mov	r2, r4
   18b68:	bl	1979c <__flatcc_fb_gen_c_reader@@Base+0x22b8>
   18b6c:	ldrd	r2, [r8]
   18b70:	ldr	r0, [r5, #204]	; 0xcc
   18b74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18b78:	ldr	r4, [fp, #-36]	; 0xffffffdc
   18b7c:	str	r6, [sp, #48]	; 0x30
   18b80:	str	r6, [sp, #32]
   18b84:	add	r6, sp, #60	; 0x3c
   18b88:	str	r6, [sp, #36]	; 0x24
   18b8c:	stm	sp, {r2, r3}
   18b90:	mov	r8, r9
   18b94:	str	r9, [sp, #8]
   18b98:	add	r2, sp, #12
   18b9c:	stm	r2, {r1, r4, r5}
   18ba0:	ldr	r1, [sp, #44]	; 0x2c
   18ba4:	str	r1, [sp, #24]
   18ba8:	ldr	r1, [sp, #52]	; 0x34
   18bac:	str	r1, [sp, #28]
   18bb0:	movw	r1, #55587	; 0xd923
   18bb4:	movt	r1, #3
   18bb8:	mov	r2, r5
   18bbc:	bl	149f4 <fprintf@plt>
   18bc0:	ldr	r0, [r5, #212]	; 0xd4
   18bc4:	ldr	r0, [r0, #32]
   18bc8:	cmp	r0, #0
   18bcc:	bne	18c10 <__flatcc_fb_gen_c_reader@@Base+0x172c>
   18bd0:	ldrb	r0, [r7, #72]	; 0x48
   18bd4:	tst	r0, #128	; 0x80
   18bd8:	beq	18c10 <__flatcc_fb_gen_c_reader@@Base+0x172c>
   18bdc:	ldr	r0, [r5, #204]	; 0xcc
   18be0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18be4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18be8:	stm	sp, {r1, r2}
   18bec:	ldr	r1, [sp, #52]	; 0x34
   18bf0:	str	r1, [sp, #8]
   18bf4:	ldr	r1, [sp, #48]	; 0x30
   18bf8:	str	r1, [sp, #12]
   18bfc:	movw	r1, #55644	; 0xd95c
   18c00:	movt	r1, #3
   18c04:	mov	r2, r5
   18c08:	mov	r3, r8
   18c0c:	bl	149f4 <fprintf@plt>
   18c10:	ldrb	r0, [r7, #72]	; 0x48
   18c14:	tst	r0, #128	; 0x80
   18c18:	movw	r9, #26588	; 0x67dc
   18c1c:	movt	r9, #3
   18c20:	beq	18f6c <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   18c24:	ldr	r0, [sp, #56]	; 0x38
   18c28:	cmp	r0, #0
   18c2c:	sub	r6, fp, #36	; 0x24
   18c30:	beq	18c4c <__flatcc_fb_gen_c_reader@@Base+0x1768>
   18c34:	ldr	r3, [r5, #204]	; 0xcc
   18c38:	movw	r0, #54701	; 0xd5ad
   18c3c:	movt	r0, #3
   18c40:	mov	r1, #66	; 0x42
   18c44:	mov	r2, #1
   18c48:	bl	1497c <fwrite@plt>
   18c4c:	ldr	r3, [r5, #204]	; 0xcc
   18c50:	movw	r0, #54768	; 0xd5f0
   18c54:	movt	r0, #3
   18c58:	mov	r1, #61	; 0x3d
   18c5c:	mov	r2, #1
   18c60:	bl	1497c <fwrite@plt>
   18c64:	ldr	r0, [r5, #204]	; 0xcc
   18c68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18c6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18c70:	stm	sp, {r1, r2}
   18c74:	ldr	r1, [sp, #52]	; 0x34
   18c78:	str	r1, [sp, #8]
   18c7c:	ldr	r4, [sp, #48]	; 0x30
   18c80:	str	r4, [sp, #12]
   18c84:	movw	r1, #55693	; 0xd98d
   18c88:	movt	r1, #3
   18c8c:	mov	r2, r5
   18c90:	mov	r3, r8
   18c94:	bl	149f4 <fprintf@plt>
   18c98:	ldr	r0, [r5, #212]	; 0xd4
   18c9c:	ldr	r0, [r0, #136]	; 0x88
   18ca0:	cmp	r0, #0
   18ca4:	beq	18cd8 <__flatcc_fb_gen_c_reader@@Base+0x17f4>
   18ca8:	ldr	r0, [r5, #204]	; 0xcc
   18cac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18cb0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18cb4:	stm	sp, {r1, r2}
   18cb8:	ldr	r1, [sp, #52]	; 0x34
   18cbc:	add	r2, sp, #8
   18cc0:	stm	r2, {r1, r4, r5}
   18cc4:	movw	r1, #55742	; 0xd9be
   18cc8:	movt	r1, #3
   18ccc:	mov	r2, r5
   18cd0:	mov	r3, r8
   18cd4:	bl	149f4 <fprintf@plt>
   18cd8:	ldr	r0, [sp, #56]	; 0x38
   18cdc:	cmp	r0, #0
   18ce0:	bne	188e0 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   18ce4:	ldr	r0, [r5, #204]	; 0xcc
   18ce8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18cec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18cf0:	stm	sp, {r1, r2}
   18cf4:	ldr	r4, [sp, #52]	; 0x34
   18cf8:	str	r4, [sp, #8]
   18cfc:	ldr	r1, [sp, #48]	; 0x30
   18d00:	str	r1, [sp, #12]
   18d04:	movw	r1, #55804	; 0xd9fc
   18d08:	movt	r1, #3
   18d0c:	mov	r2, r5
   18d10:	mov	r3, r8
   18d14:	bl	149f4 <fprintf@plt>
   18d18:	ldr	r0, [r5, #204]	; 0xcc
   18d1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18d20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18d24:	stm	sp, {r1, r2, r4}
   18d28:	ldr	r1, [sp, #48]	; 0x30
   18d2c:	str	r1, [sp, #12]
   18d30:	movw	r1, #55861	; 0xda35
   18d34:	movt	r1, #3
   18d38:	mov	r2, r5
   18d3c:	mov	r3, r8
   18d40:	bl	149f4 <fprintf@plt>
   18d44:	ldr	r0, [r5, #212]	; 0xd4
   18d48:	ldr	r0, [r0, #136]	; 0x88
   18d4c:	mov	r1, #1
   18d50:	str	r1, [sp, #56]	; 0x38
   18d54:	cmp	r0, #0
   18d58:	beq	188e0 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   18d5c:	ldr	r0, [r5, #204]	; 0xcc
   18d60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18d64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18d68:	stm	sp, {r1, r2}
   18d6c:	movw	r1, #55068	; 0xd71c
   18d70:	movt	r1, #3
   18d74:	mov	r2, r8
   18d78:	mov	r3, r8
   18d7c:	b	188dc <__flatcc_fb_gen_c_reader@@Base+0x13f8>
   18d80:	ldr	r0, [r5, #204]	; 0xcc
   18d84:	ldrd	r2, [r8]
   18d88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18d8c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   18d90:	stm	sp, {r2, r3}
   18d94:	mov	r8, r9
   18d98:	str	r9, [sp, #8]
   18d9c:	str	r1, [sp, #12]
   18da0:	str	r6, [sp, #16]
   18da4:	movw	r9, #26588	; 0x67dc
   18da8:	movt	r9, #3
   18dac:	str	r5, [sp, #20]
   18db0:	str	r4, [sp, #24]
   18db4:	movw	r1, #56245	; 0xdbb5
   18db8:	movt	r1, #3
   18dbc:	mov	r2, r5
   18dc0:	bl	149f4 <fprintf@plt>
   18dc4:	b	18f6c <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   18dc8:	ldr	r0, [r7, #16]
   18dcc:	add	r1, sp, #160	; 0xa0
   18dd0:	bl	19638 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   18dd4:	ldr	r0, [r7, #16]
   18dd8:	ldrh	r6, [r0, #8]
   18ddc:	cmp	r6, #4
   18de0:	bhi	1919c <__flatcc_fb_gen_c_reader@@Base+0x1cb8>
   18de4:	cmp	r6, #2
   18de8:	beq	1919c <__flatcc_fb_gen_c_reader@@Base+0x1cb8>
   18dec:	ldr	r3, [r8, #4]
   18df0:	ldr	r8, [r8]
   18df4:	ldr	r0, [r5, #204]	; 0xcc
   18df8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18dfc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18e00:	cmp	r6, #4
   18e04:	bne	18eac <__flatcc_fb_gen_c_reader@@Base+0x19c8>
   18e08:	str	r8, [sp]
   18e0c:	str	r3, [sp, #4]
   18e10:	mov	r8, r9
   18e14:	str	r9, [sp, #8]
   18e18:	str	r2, [sp, #12]
   18e1c:	str	r1, [sp, #16]
   18e20:	add	r1, sp, #160	; 0xa0
   18e24:	str	r1, [sp, #20]
   18e28:	str	r4, [sp, #24]
   18e2c:	movw	r1, #56752	; 0xddb0
   18e30:	movt	r1, #3
   18e34:	b	18f14 <__flatcc_fb_gen_c_reader@@Base+0x1a30>
   18e38:	ldr	r0, [r7, #16]
   18e3c:	add	r1, sp, #160	; 0xa0
   18e40:	bl	19638 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   18e44:	ldr	r0, [r7, #16]
   18e48:	ldrh	r1, [r0, #8]
   18e4c:	cmp	r1, #4
   18e50:	bhi	191ec <__flatcc_fb_gen_c_reader@@Base+0x1d08>
   18e54:	add	r2, pc, #0
   18e58:	ldr	pc, [r2, r1, lsl #2]
   18e5c:	andeq	r8, r1, r0, ror lr
   18e60:	andeq	r8, r1, r4, lsr #30
   18e64:	andeq	r9, r1, ip, ror #3
   18e68:	andeq	r8, r1, r0, lsr #31
   18e6c:	ldrdeq	r8, [r1], -ip
   18e70:	ldr	r0, [r5, #204]	; 0xcc
   18e74:	ldrd	r2, [r8]
   18e78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18e7c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   18e80:	stm	sp, {r2, r3}
   18e84:	mov	r8, r9
   18e88:	str	r9, [sp, #8]
   18e8c:	str	r1, [sp, #12]
   18e90:	str	r6, [sp, #16]
   18e94:	add	r1, sp, #160	; 0xa0
   18e98:	str	r1, [sp, #20]
   18e9c:	str	r4, [sp, #24]
   18ea0:	movw	r1, #56364	; 0xdc2c
   18ea4:	movt	r1, #3
   18ea8:	b	18f5c <__flatcc_fb_gen_c_reader@@Base+0x1a78>
   18eac:	str	r8, [sp]
   18eb0:	str	r3, [sp, #4]
   18eb4:	mov	r8, r9
   18eb8:	str	r9, [sp, #8]
   18ebc:	str	r2, [sp, #12]
   18ec0:	str	r1, [sp, #16]
   18ec4:	add	r1, sp, #160	; 0xa0
   18ec8:	str	r1, [sp, #20]
   18ecc:	str	r4, [sp, #24]
   18ed0:	movw	r1, #56811	; 0xddeb
   18ed4:	movt	r1, #3
   18ed8:	b	18f5c <__flatcc_fb_gen_c_reader@@Base+0x1a78>
   18edc:	ldr	r0, [r5, #204]	; 0xcc
   18ee0:	ldrd	r2, [r8]
   18ee4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ee8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   18eec:	stm	sp, {r2, r3}
   18ef0:	mov	r8, r9
   18ef4:	str	r9, [sp, #8]
   18ef8:	str	r1, [sp, #12]
   18efc:	str	r6, [sp, #16]
   18f00:	add	r1, sp, #160	; 0xa0
   18f04:	str	r1, [sp, #20]
   18f08:	str	r4, [sp, #24]
   18f0c:	movw	r1, #56547	; 0xdce3
   18f10:	movt	r1, #3
   18f14:	mov	r2, r5
   18f18:	mov	r3, r5
   18f1c:	bl	149f4 <fprintf@plt>
   18f20:	b	18f64 <__flatcc_fb_gen_c_reader@@Base+0x1a80>
   18f24:	ldr	r0, [r5, #204]	; 0xcc
   18f28:	ldrd	r2, [r8]
   18f2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18f30:	ldr	r6, [fp, #-36]	; 0xffffffdc
   18f34:	stm	sp, {r2, r3}
   18f38:	mov	r8, r9
   18f3c:	str	r9, [sp, #8]
   18f40:	str	r1, [sp, #12]
   18f44:	str	r6, [sp, #16]
   18f48:	add	r1, sp, #160	; 0xa0
   18f4c:	str	r1, [sp, #20]
   18f50:	str	r4, [sp, #24]
   18f54:	movw	r1, #56306	; 0xdbf2
   18f58:	movt	r1, #3
   18f5c:	mov	r2, r5
   18f60:	bl	149f4 <fprintf@plt>
   18f64:	movw	r9, #26588	; 0x67dc
   18f68:	movt	r9, #3
   18f6c:	ldrb	r0, [r7, #72]	; 0x48
   18f70:	tst	r0, #128	; 0x80
   18f74:	sub	r6, fp, #36	; 0x24
   18f78:	beq	188e0 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   18f7c:	ldr	r3, [r5, #204]	; 0xcc
   18f80:	mov	r0, #1
   18f84:	str	r0, [sp, #56]	; 0x38
   18f88:	movw	r0, #55164	; 0xd77c
   18f8c:	movt	r0, #3
   18f90:	mov	r1, #84	; 0x54
   18f94:	mov	r2, #1
   18f98:	bl	1497c <fwrite@plt>
   18f9c:	b	188e0 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   18fa0:	ldr	r0, [r0, #40]	; 0x28
   18fa4:	add	r1, r7, #48	; 0x30
   18fa8:	add	r2, sp, #60	; 0x3c
   18fac:	bl	1979c <__flatcc_fb_gen_c_reader@@Base+0x22b8>
   18fb0:	ldr	r0, [r5, #204]	; 0xcc
   18fb4:	ldrd	r2, [r8]
   18fb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18fbc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   18fc0:	stm	sp, {r2, r3}
   18fc4:	mov	r8, r9
   18fc8:	str	r9, [sp, #8]
   18fcc:	str	r1, [sp, #12]
   18fd0:	str	r6, [sp, #16]
   18fd4:	add	r4, sp, #160	; 0xa0
   18fd8:	str	r4, [sp, #20]
   18fdc:	str	r4, [sp, #24]
   18fe0:	add	r1, sp, #60	; 0x3c
   18fe4:	str	r1, [sp, #28]
   18fe8:	movw	r1, #56420	; 0xdc64
   18fec:	movt	r1, #3
   18ff0:	mov	r2, r5
   18ff4:	bl	149f4 <fprintf@plt>
   18ff8:	ldr	r0, [r5, #212]	; 0xd4
   18ffc:	ldr	r0, [r0, #32]
   19000:	cmp	r0, #0
   19004:	bne	19038 <__flatcc_fb_gen_c_reader@@Base+0x1b54>
   19008:	ldrb	r0, [r7, #72]	; 0x48
   1900c:	tst	r0, #128	; 0x80
   19010:	beq	19038 <__flatcc_fb_gen_c_reader@@Base+0x1b54>
   19014:	ldr	r0, [r5, #204]	; 0xcc
   19018:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1901c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19020:	stm	sp, {r1, r2, r4}
   19024:	movw	r1, #54647	; 0xd577
   19028:	movt	r1, #3
   1902c:	mov	r2, r5
   19030:	mov	r3, r8
   19034:	bl	149f4 <fprintf@plt>
   19038:	ldrb	r0, [r7, #72]	; 0x48
   1903c:	tst	r0, #128	; 0x80
   19040:	movw	r9, #26588	; 0x67dc
   19044:	movt	r9, #3
   19048:	beq	18f6c <__flatcc_fb_gen_c_reader@@Base+0x1a88>
   1904c:	ldr	r0, [sp, #56]	; 0x38
   19050:	cmp	r0, #0
   19054:	sub	r6, fp, #36	; 0x24
   19058:	beq	19074 <__flatcc_fb_gen_c_reader@@Base+0x1b90>
   1905c:	ldr	r3, [r5, #204]	; 0xcc
   19060:	movw	r0, #54701	; 0xd5ad
   19064:	movt	r0, #3
   19068:	mov	r1, #66	; 0x42
   1906c:	mov	r2, #1
   19070:	bl	1497c <fwrite@plt>
   19074:	ldr	r3, [r5, #204]	; 0xcc
   19078:	movw	r0, #54768	; 0xd5f0
   1907c:	movt	r0, #3
   19080:	mov	r1, #61	; 0x3d
   19084:	mov	r2, #1
   19088:	bl	1497c <fwrite@plt>
   1908c:	ldr	r0, [r5, #204]	; 0xcc
   19090:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19094:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19098:	stm	sp, {r1, r2}
   1909c:	add	r4, sp, #160	; 0xa0
   190a0:	str	r4, [sp, #8]
   190a4:	movw	r1, #54830	; 0xd62e
   190a8:	movt	r1, #3
   190ac:	mov	r2, r5
   190b0:	mov	r3, r8
   190b4:	bl	149f4 <fprintf@plt>
   190b8:	ldr	r0, [r5, #212]	; 0xd4
   190bc:	ldr	r0, [r0, #136]	; 0x88
   190c0:	cmp	r0, #0
   190c4:	beq	190ec <__flatcc_fb_gen_c_reader@@Base+0x1c08>
   190c8:	ldr	r0, [r5, #204]	; 0xcc
   190cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   190d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   190d4:	stm	sp, {r1, r2, r4, r5}
   190d8:	movw	r1, #56480	; 0xdca0
   190dc:	movt	r1, #3
   190e0:	mov	r2, r5
   190e4:	mov	r3, r8
   190e8:	bl	149f4 <fprintf@plt>
   190ec:	ldr	r0, [sp, #56]	; 0x38
   190f0:	cmp	r0, #0
   190f4:	bne	188e0 <__flatcc_fb_gen_c_reader@@Base+0x13fc>
   190f8:	ldr	r0, [r5, #204]	; 0xcc
   190fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19100:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19104:	stm	sp, {r1, r2}
   19108:	add	r1, sp, #160	; 0xa0
   1910c:	mov	r4, r1
   19110:	str	r1, [sp, #8]
   19114:	movw	r1, #54944	; 0xd6a0
   19118:	movt	r1, #3
   1911c:	mov	r2, r5
   19120:	mov	r3, r8
   19124:	bl	149f4 <fprintf@plt>
   19128:	ldr	r0, [r5, #204]	; 0xcc
   1912c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19130:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19134:	stm	sp, {r1, r2, r4}
   19138:	movw	r1, #55006	; 0xd6de
   1913c:	movt	r1, #3
   19140:	b	18d38 <__flatcc_fb_gen_c_reader@@Base+0x1854>
   19144:	sub	sp, fp, #28
   19148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1914c:	movw	r0, #8368	; 0x20b0
   19150:	movt	r0, #6
   19154:	ldr	r0, [r0]
   19158:	movw	r1, #56866	; 0xde22
   1915c:	movt	r1, #3
   19160:	str	r1, [sp]
   19164:	movw	r1, #26331	; 0x66db
   19168:	movt	r1, #3
   1916c:	movw	r4, #26342	; 0x66e6
   19170:	movt	r4, #3
   19174:	mov	r2, r4
   19178:	movw	r3, #1599	; 0x63f
   1917c:	bl	149f4 <fprintf@plt>
   19180:	movw	r0, #30217	; 0x7609
   19184:	movt	r0, #4
   19188:	movw	r3, #55325	; 0xd81d
   1918c:	movt	r3, #3
   19190:	mov	r1, r4
   19194:	movw	r2, #1599	; 0x63f
   19198:	bl	14ab4 <__assert_fail@plt>
   1919c:	movw	r0, #8368	; 0x20b0
   191a0:	movt	r0, #6
   191a4:	ldr	r0, [r0]
   191a8:	movw	r1, #56672	; 0xdd60
   191ac:	movt	r1, #3
   191b0:	str	r1, [sp]
   191b4:	movw	r1, #26331	; 0x66db
   191b8:	movt	r1, #3
   191bc:	movw	r4, #26342	; 0x66e6
   191c0:	movt	r4, #3
   191c4:	mov	r2, r4
   191c8:	mov	r3, #1584	; 0x630
   191cc:	bl	149f4 <fprintf@plt>
   191d0:	movw	r0, #30217	; 0x7609
   191d4:	movt	r0, #4
   191d8:	movw	r3, #55325	; 0xd81d
   191dc:	movt	r3, #3
   191e0:	mov	r1, r4
   191e4:	mov	r2, #1584	; 0x630
   191e8:	bl	14ab4 <__assert_fail@plt>
   191ec:	movw	r0, #8368	; 0x20b0
   191f0:	movt	r0, #6
   191f4:	ldr	r0, [r0]
   191f8:	movw	r1, #56599	; 0xdd17
   191fc:	movt	r1, #3
   19200:	str	r1, [sp]
   19204:	movw	r1, #26331	; 0x66db
   19208:	movt	r1, #3
   1920c:	movw	r4, #26342	; 0x66e6
   19210:	movt	r4, #3
   19214:	mov	r2, r4
   19218:	mov	r3, #1568	; 0x620
   1921c:	bl	149f4 <fprintf@plt>
   19220:	movw	r0, #30217	; 0x7609
   19224:	movt	r0, #4
   19228:	movw	r3, #55325	; 0xd81d
   1922c:	movt	r3, #3
   19230:	mov	r1, r4
   19234:	mov	r2, #1568	; 0x620
   19238:	bl	14ab4 <__assert_fail@plt>
   1923c:	movw	r0, #51484	; 0xc91c
   19240:	movt	r0, #3
   19244:	movw	r1, #26342	; 0x66e6
   19248:	movt	r1, #3
   1924c:	movw	r3, #55325	; 0xd81d
   19250:	movt	r3, #3
   19254:	movw	r2, #1362	; 0x552
   19258:	bl	14ab4 <__assert_fail@plt>
   1925c:	push	{r4, sl, fp, lr}
   19260:	add	fp, sp, #8
   19264:	mov	r4, r0
   19268:	bl	174bc <__flatcc_fb_gen_common_c_header@@Base+0x910>
   1926c:	ldr	r0, [r4, #204]	; 0xcc
   19270:	ldr	r1, [r4, #208]	; 0xd0
   19274:	ldr	r2, [r1, #164]	; 0xa4
   19278:	movw	r1, #57299	; 0xdfd3
   1927c:	movt	r1, #3
   19280:	pop	{r4, sl, fp, lr}
   19284:	b	149f4 <fprintf@plt>
   19288:	push	{r4, sl, fp, lr}
   1928c:	add	fp, sp, #8
   19290:	sub	sp, sp, #24
   19294:	mov	r4, r0
   19298:	ldr	r0, [r0, #204]	; 0xcc
   1929c:	str	r4, [sp]
   192a0:	str	r4, [sp, #4]
   192a4:	str	r4, [sp, #8]
   192a8:	str	r4, [sp, #12]
   192ac:	str	r4, [sp, #16]
   192b0:	str	r4, [sp, #20]
   192b4:	movw	r1, #38651	; 0x96fb
   192b8:	movt	r1, #3
   192bc:	mov	r2, r4
   192c0:	mov	r3, r4
   192c4:	bl	149f4 <fprintf@plt>
   192c8:	ldr	r0, [r4, #204]	; 0xcc
   192cc:	str	r4, [sp]
   192d0:	str	r4, [sp, #4]
   192d4:	movw	r1, #38846	; 0x97be
   192d8:	movt	r1, #3
   192dc:	mov	r2, r4
   192e0:	mov	r3, r4
   192e4:	bl	149f4 <fprintf@plt>
   192e8:	ldr	r0, [r4, #204]	; 0xcc
   192ec:	str	r4, [sp]
   192f0:	str	r4, [sp, #4]
   192f4:	movw	r1, #38999	; 0x9857
   192f8:	movt	r1, #3
   192fc:	mov	r2, r4
   19300:	mov	r3, r4
   19304:	bl	149f4 <fprintf@plt>
   19308:	ldr	r0, [r4, #204]	; 0xcc
   1930c:	movw	r1, #39118	; 0x98ce
   19310:	movt	r1, #3
   19314:	mov	r2, r4
   19318:	bl	149f4 <fprintf@plt>
   1931c:	ldr	r0, [r4, #204]	; 0xcc
   19320:	movw	r1, #39839	; 0x9b9f
   19324:	movt	r1, #3
   19328:	mov	r2, r4
   1932c:	bl	149f4 <fprintf@plt>
   19330:	ldr	r0, [r4, #204]	; 0xcc
   19334:	movw	r1, #40497	; 0x9e31
   19338:	movt	r1, #3
   1933c:	mov	r2, r4
   19340:	bl	149f4 <fprintf@plt>
   19344:	ldr	r0, [r4, #204]	; 0xcc
   19348:	movw	r1, #40626	; 0x9eb2
   1934c:	movt	r1, #3
   19350:	mov	r2, r4
   19354:	bl	149f4 <fprintf@plt>
   19358:	ldr	r0, [r4, #204]	; 0xcc
   1935c:	movw	r1, #40736	; 0x9f20
   19360:	movt	r1, #3
   19364:	mov	r2, r4
   19368:	sub	sp, fp, #8
   1936c:	pop	{r4, sl, fp, lr}
   19370:	b	149f4 <fprintf@plt>
   19374:	push	{r4, sl, fp, lr}
   19378:	add	fp, sp, #8
   1937c:	sub	sp, sp, #40	; 0x28
   19380:	mov	r4, r0
   19384:	ldr	r0, [r0, #204]	; 0xcc
   19388:	str	r4, [sp]
   1938c:	str	r4, [sp, #4]
   19390:	movw	r1, #41220	; 0xa104
   19394:	movt	r1, #3
   19398:	mov	r2, r4
   1939c:	mov	r3, r4
   193a0:	bl	149f4 <fprintf@plt>
   193a4:	ldr	r0, [r4, #204]	; 0xcc
   193a8:	str	r4, [sp]
   193ac:	str	r4, [sp, #4]
   193b0:	str	r4, [sp, #8]
   193b4:	str	r4, [sp, #12]
   193b8:	movw	r1, #41389	; 0xa1ad
   193bc:	movt	r1, #3
   193c0:	mov	r2, r4
   193c4:	mov	r3, r4
   193c8:	bl	149f4 <fprintf@plt>
   193cc:	ldr	r0, [r4, #204]	; 0xcc
   193d0:	str	r4, [sp]
   193d4:	movw	r1, #41864	; 0xa388
   193d8:	movt	r1, #3
   193dc:	mov	r2, r4
   193e0:	mov	r3, r4
   193e4:	bl	149f4 <fprintf@plt>
   193e8:	ldr	r0, [r4, #204]	; 0xcc
   193ec:	str	r4, [sp, #32]
   193f0:	str	r4, [sp]
   193f4:	str	r4, [sp, #4]
   193f8:	str	r4, [sp, #8]
   193fc:	str	r4, [sp, #12]
   19400:	str	r4, [sp, #16]
   19404:	str	r4, [sp, #20]
   19408:	str	r4, [sp, #24]
   1940c:	str	r4, [sp, #28]
   19410:	movw	r1, #42402	; 0xa5a2
   19414:	movt	r1, #3
   19418:	mov	r2, r4
   1941c:	mov	r3, r4
   19420:	bl	149f4 <fprintf@plt>
   19424:	ldr	r0, [r4, #204]	; 0xcc
   19428:	movw	r1, #42745	; 0xa6f9
   1942c:	movt	r1, #3
   19430:	mov	r2, r4
   19434:	mov	r3, r4
   19438:	bl	149f4 <fprintf@plt>
   1943c:	ldr	r0, [r4, #204]	; 0xcc
   19440:	str	r4, [sp]
   19444:	movw	r1, #42952	; 0xa7c8
   19448:	movt	r1, #3
   1944c:	mov	r2, r4
   19450:	mov	r3, r4
   19454:	bl	149f4 <fprintf@plt>
   19458:	ldr	r0, [r4, #204]	; 0xcc
   1945c:	str	r4, [sp]
   19460:	movw	r1, #43133	; 0xa87d
   19464:	movt	r1, #3
   19468:	mov	r2, r4
   1946c:	mov	r3, r4
   19470:	bl	149f4 <fprintf@plt>
   19474:	ldr	r0, [r4, #204]	; 0xcc
   19478:	movw	r1, #43570	; 0xaa32
   1947c:	movt	r1, #3
   19480:	mov	r2, r4
   19484:	bl	149f4 <fprintf@plt>
   19488:	ldr	r0, [r4, #204]	; 0xcc
   1948c:	movw	r1, #43740	; 0xaadc
   19490:	movt	r1, #3
   19494:	mov	r2, r4
   19498:	sub	sp, fp, #8
   1949c:	pop	{r4, sl, fp, lr}
   194a0:	b	149f4 <fprintf@plt>
   194a4:	push	{r4, sl, fp, lr}
   194a8:	add	fp, sp, #8
   194ac:	sub	sp, sp, #48	; 0x30
   194b0:	mov	r4, r0
   194b4:	ldr	r0, [r0, #204]	; 0xcc
   194b8:	movw	r1, #44041	; 0xac09
   194bc:	movt	r1, #3
   194c0:	mov	r2, r4
   194c4:	mov	r3, r4
   194c8:	bl	149f4 <fprintf@plt>
   194cc:	ldr	r0, [r4, #204]	; 0xcc
   194d0:	movw	r1, #44377	; 0xad59
   194d4:	movt	r1, #3
   194d8:	mov	r2, r4
   194dc:	mov	r3, r4
   194e0:	bl	149f4 <fprintf@plt>
   194e4:	ldr	r0, [r4, #204]	; 0xcc
   194e8:	str	r4, [sp, #32]
   194ec:	str	r4, [sp]
   194f0:	str	r4, [sp, #4]
   194f4:	str	r4, [sp, #8]
   194f8:	str	r4, [sp, #12]
   194fc:	str	r4, [sp, #16]
   19500:	str	r4, [sp, #20]
   19504:	str	r4, [sp, #24]
   19508:	str	r4, [sp, #28]
   1950c:	movw	r1, #44589	; 0xae2d
   19510:	movt	r1, #3
   19514:	mov	r2, r4
   19518:	mov	r3, r4
   1951c:	bl	149f4 <fprintf@plt>
   19520:	ldr	r0, [r4, #204]	; 0xcc
   19524:	str	r4, [sp, #32]
   19528:	str	r4, [sp]
   1952c:	str	r4, [sp, #4]
   19530:	str	r4, [sp, #8]
   19534:	str	r4, [sp, #12]
   19538:	str	r4, [sp, #16]
   1953c:	str	r4, [sp, #20]
   19540:	str	r4, [sp, #24]
   19544:	str	r4, [sp, #28]
   19548:	movw	r1, #44968	; 0xafa8
   1954c:	movt	r1, #3
   19550:	mov	r2, r4
   19554:	mov	r3, r4
   19558:	bl	149f4 <fprintf@plt>
   1955c:	ldr	r0, [r4, #204]	; 0xcc
   19560:	str	r4, [sp]
   19564:	str	r4, [sp, #4]
   19568:	str	r4, [sp, #8]
   1956c:	str	r4, [sp, #12]
   19570:	str	r4, [sp, #16]
   19574:	movw	r1, #45353	; 0xb129
   19578:	movt	r1, #3
   1957c:	mov	r2, r4
   19580:	mov	r3, r4
   19584:	bl	149f4 <fprintf@plt>
   19588:	ldr	r0, [r4, #204]	; 0xcc
   1958c:	str	r4, [sp, #32]
   19590:	str	r4, [sp]
   19594:	str	r4, [sp, #4]
   19598:	str	r4, [sp, #8]
   1959c:	str	r4, [sp, #12]
   195a0:	str	r4, [sp, #16]
   195a4:	str	r4, [sp, #20]
   195a8:	str	r4, [sp, #24]
   195ac:	str	r4, [sp, #28]
   195b0:	movw	r1, #46206	; 0xb47e
   195b4:	movt	r1, #3
   195b8:	mov	r2, r4
   195bc:	mov	r3, r4
   195c0:	bl	149f4 <fprintf@plt>
   195c4:	ldr	r0, [r4, #204]	; 0xcc
   195c8:	str	r4, [sp, #32]
   195cc:	str	r4, [sp, #36]	; 0x24
   195d0:	str	r4, [sp, #40]	; 0x28
   195d4:	str	r4, [sp]
   195d8:	str	r4, [sp, #4]
   195dc:	str	r4, [sp, #8]
   195e0:	str	r4, [sp, #12]
   195e4:	str	r4, [sp, #16]
   195e8:	str	r4, [sp, #20]
   195ec:	str	r4, [sp, #24]
   195f0:	str	r4, [sp, #28]
   195f4:	movw	r1, #47006	; 0xb79e
   195f8:	movt	r1, #3
   195fc:	mov	r2, r4
   19600:	mov	r3, r4
   19604:	bl	149f4 <fprintf@plt>
   19608:	ldr	r0, [r4, #204]	; 0xcc
   1960c:	movw	r1, #48743	; 0xbe67
   19610:	movt	r1, #3
   19614:	mov	r2, r4
   19618:	bl	149f4 <fprintf@plt>
   1961c:	ldr	r0, [r4, #204]	; 0xcc
   19620:	movw	r1, #49335	; 0xc0b7
   19624:	movt	r1, #3
   19628:	mov	r2, r4
   1962c:	sub	sp, fp, #8
   19630:	pop	{r4, sl, fp, lr}
   19634:	b	149f4 <fprintf@plt>
   19638:	mov	r2, r1
   1963c:	mov	r1, r0
   19640:	ldr	r0, [r0, #12]
   19644:	b	16838 <__flatcc_fb_scoped_symbol_name@@Base>
   19648:	movw	r2, #26588	; 0x67dc
   1964c:	movt	r2, #3
   19650:	cmp	r0, #5
   19654:	moveq	r2, r1
   19658:	mov	r0, r2
   1965c:	bx	lr
   19660:	push	{r4, sl, fp, lr}
   19664:	add	fp, sp, #8
   19668:	sub	sp, sp, #8
   1966c:	sub	r0, r0, #1
   19670:	cmp	r0, #11
   19674:	movwcc	r1, #57328	; 0xdff0
   19678:	movtcc	r1, #3
   1967c:	ldrcc	r0, [r1, r0, lsl #2]
   19680:	subcc	sp, fp, #8
   19684:	popcc	{r4, sl, fp, pc}
   19688:	movw	r0, #8368	; 0x20b0
   1968c:	movt	r0, #6
   19690:	ldr	r0, [r0]
   19694:	movw	r1, #52924	; 0xcebc
   19698:	movt	r1, #3
   1969c:	str	r1, [sp]
   196a0:	movw	r1, #26331	; 0x66db
   196a4:	movt	r1, #3
   196a8:	movw	r4, #52851	; 0xce73
   196ac:	movt	r4, #3
   196b0:	mov	r2, r4
   196b4:	mov	r3, #141	; 0x8d
   196b8:	bl	149f4 <fprintf@plt>
   196bc:	movw	r0, #30217	; 0x7609
   196c0:	movt	r0, #4
   196c4:	movw	r3, #52979	; 0xcef3
   196c8:	movt	r3, #3
   196cc:	mov	r1, r4
   196d0:	mov	r2, #141	; 0x8d
   196d4:	bl	14ab4 <__assert_fail@plt>
   196d8:	cmp	r2, #0
   196dc:	bxeq	lr
   196e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   196e4:	add	fp, sp, #24
   196e8:	mov	r6, r2
   196ec:	mov	r5, r1
   196f0:	mov	r4, r0
   196f4:	mov	r1, #0
   196f8:	mov	r0, #1
   196fc:	movw	r7, #30233	; 0x7619
   19700:	movt	r7, #4
   19704:	movw	r8, #53033	; 0xcf29
   19708:	movt	r8, #3
   1970c:	movw	r9, #53026	; 0xcf22
   19710:	movt	r9, #3
   19714:	b	1974c <__flatcc_fb_gen_c_reader@@Base+0x2268>
   19718:	ldr	r0, [r4, #204]	; 0xcc
   1971c:	ldr	r1, [r6, #4]
   19720:	ldr	r3, [r1]
   19724:	ldr	r2, [r1, #4]
   19728:	mov	r1, r7
   1972c:	bl	149f4 <fprintf@plt>
   19730:	ldr	r2, [r6]
   19734:	ldr	r0, [r6, #4]
   19738:	ldr	r1, [r0, #8]
   1973c:	mov	r0, #0
   19740:	cmp	r2, #0
   19744:	mov	r6, r2
   19748:	beq	19778 <__flatcc_fb_gen_c_reader@@Base+0x2294>
   1974c:	ldr	r2, [r6, #4]
   19750:	ldr	r2, [r2, #8]
   19754:	cmp	r1, r2
   19758:	beq	19718 <__flatcc_fb_gen_c_reader@@Base+0x2234>
   1975c:	cmp	r0, #0
   19760:	mov	r1, r9
   19764:	moveq	r1, r8
   19768:	ldr	r0, [r4, #204]	; 0xcc
   1976c:	mov	r2, r5
   19770:	bl	149f4 <fprintf@plt>
   19774:	b	19718 <__flatcc_fb_gen_c_reader@@Base+0x2234>
   19778:	ldr	r3, [r4, #204]	; 0xcc
   1977c:	movw	r0, #47532	; 0xb9ac
   19780:	movt	r0, #4
   19784:	mov	r1, #4
   19788:	mov	r2, #1
   1978c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   19790:	b	1497c <fwrite@plt>
   19794:	ldr	r0, [r0, #4]
   19798:	b	198c4 <__flatcc_fb_gen_c_reader@@Base+0x23e0>
   1979c:	push	{r4, r5, fp, lr}
   197a0:	add	fp, sp, #8
   197a4:	sub	sp, sp, #8
   197a8:	mov	r5, r1
   197ac:	ldrh	r1, [r1, #8]
   197b0:	sub	r1, r1, #3
   197b4:	cmp	r1, #3
   197b8:	bhi	19874 <__flatcc_fb_gen_c_reader@@Base+0x2390>
   197bc:	mov	r4, r2
   197c0:	add	r2, pc, #0
   197c4:	ldr	pc, [r2, r1, lsl #2]
   197c8:	ldrdeq	r9, [r1], -r8
   197cc:	andeq	r9, r1, r0, lsr r8
   197d0:	strdeq	r9, [r1], -ip
   197d4:	andeq	r9, r1, r8, lsl r8
   197d8:	vldr	d16, [r5]
   197dc:	cmp	r0, #11
   197e0:	bne	19858 <__flatcc_fb_gen_c_reader@@Base+0x2374>
   197e4:	vcvt.f32.f64	s0, d16
   197e8:	vcvt.f64.f32	d16, s0
   197ec:	vmov	r2, r3, d16
   197f0:	movw	r1, #53065	; 0xcf49
   197f4:	movt	r1, #3
   197f8:	b	19864 <__flatcc_fb_gen_c_reader@@Base+0x2380>
   197fc:	bl	198d8 <__flatcc_fb_gen_c_reader@@Base+0x23f4>
   19800:	mov	r2, r0
   19804:	ldrd	r0, [r5]
   19808:	stm	sp, {r0, r1}
   1980c:	movw	r1, #53040	; 0xcf30
   19810:	movt	r1, #3
   19814:	b	19848 <__flatcc_fb_gen_c_reader@@Base+0x2364>
   19818:	bl	198d8 <__flatcc_fb_gen_c_reader@@Base+0x23f4>
   1981c:	mov	r2, r0
   19820:	ldrb	r3, [r5]
   19824:	movw	r1, #53058	; 0xcf42
   19828:	movt	r1, #3
   1982c:	b	19864 <__flatcc_fb_gen_c_reader@@Base+0x2380>
   19830:	bl	198d8 <__flatcc_fb_gen_c_reader@@Base+0x23f4>
   19834:	mov	r2, r0
   19838:	ldrd	r0, [r5]
   1983c:	stm	sp, {r0, r1}
   19840:	movw	r1, #53049	; 0xcf39
   19844:	movt	r1, #3
   19848:	mov	r0, r4
   1984c:	bl	14a60 <sprintf@plt>
   19850:	sub	sp, fp, #8
   19854:	pop	{r4, r5, fp, pc}
   19858:	vmov	r2, r3, d16
   1985c:	movw	r1, #53069	; 0xcf4d
   19860:	movt	r1, #3
   19864:	mov	r0, r4
   19868:	sub	sp, fp, #8
   1986c:	pop	{r4, r5, fp, lr}
   19870:	b	14a60 <sprintf@plt>
   19874:	movw	r0, #8368	; 0x20b0
   19878:	movt	r0, #6
   1987c:	ldr	r0, [r0]
   19880:	movw	r1, #52924	; 0xcebc
   19884:	movt	r1, #3
   19888:	str	r1, [sp]
   1988c:	movw	r1, #26331	; 0x66db
   19890:	movt	r1, #3
   19894:	movw	r4, #52851	; 0xce73
   19898:	movt	r4, #3
   1989c:	mov	r2, r4
   198a0:	mov	r3, #260	; 0x104
   198a4:	bl	149f4 <fprintf@plt>
   198a8:	movw	r0, #30217	; 0x7609
   198ac:	movt	r0, #4
   198b0:	movw	r3, #53073	; 0xcf51
   198b4:	movt	r3, #3
   198b8:	mov	r1, r4
   198bc:	mov	r2, #260	; 0x104
   198c0:	bl	14ab4 <__assert_fail@plt>
   198c4:	ldr	r3, [r0, #4]
   198c8:	str	r3, [r1]
   198cc:	ldr	r0, [r0]
   198d0:	str	r0, [r2]
   198d4:	bx	lr
   198d8:	push	{r4, sl, fp, lr}
   198dc:	add	fp, sp, #8
   198e0:	sub	sp, sp, #8
   198e4:	sub	r0, r0, #1
   198e8:	cmp	r0, #9
   198ec:	movwcc	r1, #57372	; 0xe01c
   198f0:	movtcc	r1, #3
   198f4:	ldrcc	r0, [r1, r0, lsl #2]
   198f8:	subcc	sp, fp, #8
   198fc:	popcc	{r4, sl, fp, pc}
   19900:	movw	r0, #8368	; 0x20b0
   19904:	movt	r0, #6
   19908:	ldr	r0, [r0]
   1990c:	movw	r1, #52924	; 0xcebc
   19910:	movt	r1, #3
   19914:	str	r1, [sp]
   19918:	movw	r1, #26331	; 0x66db
   1991c:	movt	r1, #3
   19920:	movw	r4, #52851	; 0xce73
   19924:	movt	r4, #3
   19928:	mov	r2, r4
   1992c:	mov	r3, #226	; 0xe2
   19930:	bl	149f4 <fprintf@plt>
   19934:	movw	r0, #30217	; 0x7609
   19938:	movt	r0, #4
   1993c:	movw	r3, #53175	; 0xcfb7
   19940:	movt	r3, #3
   19944:	mov	r1, r4
   19948:	mov	r2, #226	; 0xe2
   1994c:	bl	14ab4 <__assert_fail@plt>
   19950:	push	{r4, sl, fp, lr}
   19954:	add	fp, sp, #8
   19958:	sub	sp, sp, #8
   1995c:	sub	r0, r0, #1
   19960:	cmp	r0, #11
   19964:	movwcc	r1, #57408	; 0xe040
   19968:	movtcc	r1, #3
   1996c:	ldrcc	r0, [r1, r0, lsl #2]
   19970:	subcc	sp, fp, #8
   19974:	popcc	{r4, sl, fp, pc}
   19978:	movw	r0, #8368	; 0x20b0
   1997c:	movt	r0, #6
   19980:	ldr	r0, [r0]
   19984:	movw	r1, #52924	; 0xcebc
   19988:	movt	r1, #3
   1998c:	str	r1, [sp]
   19990:	movw	r1, #26331	; 0x66db
   19994:	movt	r1, #3
   19998:	movw	r4, #52851	; 0xce73
   1999c:	movt	r4, #3
   199a0:	mov	r2, r4
   199a4:	mov	r3, #96	; 0x60
   199a8:	bl	149f4 <fprintf@plt>
   199ac:	movw	r0, #30217	; 0x7609
   199b0:	movt	r0, #4
   199b4:	movw	r3, #55276	; 0xd7ec
   199b8:	movt	r3, #3
   199bc:	mov	r1, r4
   199c0:	mov	r2, #96	; 0x60
   199c4:	bl	14ab4 <__assert_fail@plt>
   199c8:	push	{r4, sl, fp, lr}
   199cc:	add	fp, sp, #8
   199d0:	sub	sp, sp, #8
   199d4:	sub	r0, r0, #1
   199d8:	cmp	r0, #11
   199dc:	movwcc	r1, #57452	; 0xe06c
   199e0:	movtcc	r1, #3
   199e4:	ldrcc	r0, [r1, r0, lsl #2]
   199e8:	subcc	sp, fp, #8
   199ec:	popcc	{r4, sl, fp, pc}
   199f0:	movw	r0, #8368	; 0x20b0
   199f4:	movt	r0, #6
   199f8:	ldr	r0, [r0]
   199fc:	movw	r1, #52924	; 0xcebc
   19a00:	movt	r1, #3
   19a04:	str	r1, [sp]
   19a08:	movw	r1, #26331	; 0x66db
   19a0c:	movt	r1, #3
   19a10:	movw	r4, #52851	; 0xce73
   19a14:	movt	r4, #3
   19a18:	mov	r2, r4
   19a1c:	mov	r3, #186	; 0xba
   19a20:	bl	149f4 <fprintf@plt>
   19a24:	movw	r0, #30217	; 0x7609
   19a28:	movt	r0, #4
   19a2c:	movw	r3, #57021	; 0xdebd
   19a30:	movt	r3, #3
   19a34:	mov	r1, r4
   19a38:	mov	r2, #186	; 0xba
   19a3c:	bl	14ab4 <__assert_fail@plt>
   19a40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19a44:	add	fp, sp, #24
   19a48:	sub	sp, sp, #472	; 0x1d8
   19a4c:	mov	r5, r3
   19a50:	mov	r6, r2
   19a54:	mov	r7, r1
   19a58:	mov	r4, r0
   19a5c:	add	r0, sp, #240	; 0xf0
   19a60:	mov	r1, #0
   19a64:	mov	r2, #220	; 0xdc
   19a68:	bl	14a0c <memset@plt>
   19a6c:	add	r0, sp, #16
   19a70:	mov	r1, #0
   19a74:	mov	r2, #220	; 0xdc
   19a78:	bl	14a0c <memset@plt>
   19a7c:	cmp	r7, #0
   19a80:	beq	19b0c <__flatcc_fb_gen_c_reader@@Base+0x2628>
   19a84:	ldrh	r0, [r7, #8]
   19a88:	cmp	r0, #0
   19a8c:	beq	19aa4 <__flatcc_fb_gen_c_reader@@Base+0x25c0>
   19a90:	cmp	r0, #1
   19a94:	bne	19b14 <__flatcc_fb_gen_c_reader@@Base+0x2630>
   19a98:	movw	r9, #57082	; 0xdefa
   19a9c:	movt	r9, #3
   19aa0:	b	19aac <__flatcc_fb_gen_c_reader@@Base+0x25c8>
   19aa4:	movw	r9, #57075	; 0xdef3
   19aa8:	movt	r9, #3
   19aac:	add	r8, sp, #240	; 0xf0
   19ab0:	mov	r0, r7
   19ab4:	mov	r1, r8
   19ab8:	bl	19638 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   19abc:	ldrh	r0, [r6, #8]
   19ac0:	cmp	r0, #0
   19ac4:	bne	19b64 <__flatcc_fb_gen_c_reader@@Base+0x2680>
   19ac8:	add	r7, sp, #16
   19acc:	mov	r0, r6
   19ad0:	mov	r1, r7
   19ad4:	bl	19638 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   19ad8:	sub	r1, fp, #36	; 0x24
   19adc:	sub	r2, fp, #32
   19ae0:	mov	r0, r5
   19ae4:	bl	19794 <__flatcc_fb_gen_c_reader@@Base+0x22b0>
   19ae8:	ldr	r0, [r4, #204]	; 0xcc
   19aec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19af0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19af4:	stm	sp, {r1, r2, r8, r9}
   19af8:	movw	r1, #57254	; 0xdfa6
   19afc:	movt	r1, #3
   19b00:	mov	r2, r4
   19b04:	mov	r3, r7
   19b08:	bl	149f4 <fprintf@plt>
   19b0c:	sub	sp, fp, #24
   19b10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19b14:	movw	r0, #8368	; 0x20b0
   19b18:	movt	r0, #6
   19b1c:	ldr	r0, [r0]
   19b20:	movw	r1, #57090	; 0xdf02
   19b24:	movt	r1, #3
   19b28:	str	r1, [sp]
   19b2c:	movw	r1, #26331	; 0x66db
   19b30:	movt	r1, #3
   19b34:	movw	r4, #26342	; 0x66e6
   19b38:	movt	r4, #3
   19b3c:	mov	r2, r4
   19b40:	movw	r3, #1339	; 0x53b
   19b44:	bl	149f4 <fprintf@plt>
   19b48:	movw	r0, #30217	; 0x7609
   19b4c:	movt	r0, #4
   19b50:	movw	r3, #57142	; 0xdf36
   19b54:	movt	r3, #3
   19b58:	mov	r1, r4
   19b5c:	movw	r2, #1339	; 0x53b
   19b60:	bl	14ab4 <__assert_fail@plt>
   19b64:	movw	r0, #57223	; 0xdf87
   19b68:	movt	r0, #3
   19b6c:	movw	r1, #26342	; 0x66e6
   19b70:	movt	r1, #3
   19b74:	movw	r3, #57142	; 0xdf36
   19b78:	movt	r3, #3
   19b7c:	movw	r2, #1343	; 0x53f
   19b80:	bl	14ab4 <__assert_fail@plt>

00019b84 <__flatcc_gen_sort@@Base>:
   19b84:	push	{r4, sl, fp, lr}
   19b88:	add	fp, sp, #8
   19b8c:	sub	sp, sp, #24
   19b90:	mov	r4, r0
   19b94:	ldr	r0, [r0, #204]	; 0xcc
   19b98:	movw	r1, #57496	; 0xe098
   19b9c:	movt	r1, #3
   19ba0:	mov	r2, r4
   19ba4:	bl	149f4 <fprintf@plt>
   19ba8:	ldr	r0, [r4, #204]	; 0xcc
   19bac:	movw	r1, #58470	; 0xe466
   19bb0:	movt	r1, #3
   19bb4:	mov	r2, r4
   19bb8:	mov	r3, r4
   19bbc:	bl	149f4 <fprintf@plt>
   19bc0:	ldr	r0, [r4, #204]	; 0xcc
   19bc4:	str	r4, [sp]
   19bc8:	movw	r1, #58742	; 0xe576
   19bcc:	movt	r1, #3
   19bd0:	mov	r2, r4
   19bd4:	mov	r3, r4
   19bd8:	bl	149f4 <fprintf@plt>
   19bdc:	ldr	r0, [r4, #204]	; 0xcc
   19be0:	str	r4, [sp]
   19be4:	str	r4, [sp, #4]
   19be8:	movw	r1, #58954	; 0xe64a
   19bec:	movt	r1, #3
   19bf0:	mov	r2, r4
   19bf4:	mov	r3, r4
   19bf8:	bl	149f4 <fprintf@plt>
   19bfc:	ldr	r0, [r4, #204]	; 0xcc
   19c00:	movw	r1, #59102	; 0xe6de
   19c04:	movt	r1, #3
   19c08:	mov	r2, r4
   19c0c:	mov	r3, r4
   19c10:	bl	149f4 <fprintf@plt>
   19c14:	ldr	r0, [r4, #204]	; 0xcc
   19c18:	str	r4, [sp]
   19c1c:	str	r4, [sp, #4]
   19c20:	movw	r1, #59509	; 0xe875
   19c24:	movt	r1, #3
   19c28:	mov	r2, r4
   19c2c:	mov	r3, r4
   19c30:	bl	149f4 <fprintf@plt>
   19c34:	ldr	r0, [r4, #204]	; 0xcc
   19c38:	str	r4, [sp]
   19c3c:	str	r4, [sp, #4]
   19c40:	str	r4, [sp, #8]
   19c44:	str	r4, [sp, #12]
   19c48:	movw	r1, #59642	; 0xe8fa
   19c4c:	movt	r1, #3
   19c50:	mov	r2, r4
   19c54:	mov	r3, r4
   19c58:	bl	149f4 <fprintf@plt>
   19c5c:	ldr	r0, [r4, #204]	; 0xcc
   19c60:	str	r4, [sp]
   19c64:	str	r4, [sp, #4]
   19c68:	movw	r1, #59784	; 0xe988
   19c6c:	movt	r1, #3
   19c70:	mov	r2, r4
   19c74:	mov	r3, r4
   19c78:	bl	149f4 <fprintf@plt>
   19c7c:	ldr	r0, [r4, #204]	; 0xcc
   19c80:	str	r4, [sp]
   19c84:	str	r4, [sp, #4]
   19c88:	str	r4, [sp, #8]
   19c8c:	str	r4, [sp, #12]
   19c90:	str	r4, [sp, #16]
   19c94:	movw	r1, #59881	; 0xe9e9
   19c98:	movt	r1, #3
   19c9c:	mov	r2, r4
   19ca0:	mov	r3, r4
   19ca4:	bl	149f4 <fprintf@plt>
   19ca8:	mov	r0, #0
   19cac:	sub	sp, fp, #8
   19cb0:	pop	{r4, sl, fp, pc}

00019cb4 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   19cb4:	push	{r4, r5, fp, lr}
   19cb8:	add	fp, sp, #8
   19cbc:	sub	sp, sp, #8
   19cc0:	mov	r5, r0
   19cc4:	ldr	r0, [r0, #204]	; 0xcc
   19cc8:	add	r4, r5, #102	; 0x66
   19ccc:	movw	r1, #60000	; 0xea60
   19cd0:	movt	r1, #3
   19cd4:	mov	r2, r4
   19cd8:	bl	149f4 <fprintf@plt>
   19cdc:	ldr	r0, [r5, #204]	; 0xcc
   19ce0:	movw	r1, #60029	; 0xea7d
   19ce4:	movt	r1, #3
   19ce8:	mov	r2, r4
   19cec:	bl	149f4 <fprintf@plt>
   19cf0:	ldr	r3, [r5, #204]	; 0xcc
   19cf4:	movw	r0, #26034	; 0x65b2
   19cf8:	movt	r0, #3
   19cfc:	mov	r1, #81	; 0x51
   19d00:	mov	r2, #1
   19d04:	bl	1497c <fwrite@plt>
   19d08:	ldr	r3, [r5, #204]	; 0xcc
   19d0c:	movw	r0, #60058	; 0xea9a
   19d10:	movt	r0, #3
   19d14:	mov	r1, #53	; 0x35
   19d18:	mov	r2, #1
   19d1c:	bl	1497c <fwrite@plt>
   19d20:	mov	r0, r5
   19d24:	bl	1a524 <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   19d28:	ldr	r3, [r5, #204]	; 0xcc
   19d2c:	movw	r0, #60112	; 0xead0
   19d30:	movt	r0, #3
   19d34:	mov	r1, #22
   19d38:	mov	r2, #1
   19d3c:	bl	1497c <fwrite@plt>
   19d40:	ldr	r3, [r5, #204]	; 0xcc
   19d44:	movw	r0, #60135	; 0xeae7
   19d48:	movt	r0, #3
   19d4c:	mov	r1, #35	; 0x23
   19d50:	mov	r2, #1
   19d54:	bl	1497c <fwrite@plt>
   19d58:	ldr	r3, [r5, #204]	; 0xcc
   19d5c:	movw	r0, #51130	; 0xc7ba
   19d60:	movt	r0, #3
   19d64:	mov	r1, #7
   19d68:	mov	r2, #1
   19d6c:	bl	1497c <fwrite@plt>
   19d70:	movw	r1, #60171	; 0xeb0b
   19d74:	movt	r1, #3
   19d78:	mov	r0, r5
   19d7c:	bl	14910 <strcmp@plt>
   19d80:	cmp	r0, #0
   19d84:	beq	19e00 <__flatcc_fb_gen_common_c_builder_header@@Base+0x14c>
   19d88:	ldr	r0, [r5, #204]	; 0xcc
   19d8c:	movw	r1, #60187	; 0xeb1b
   19d90:	movt	r1, #3
   19d94:	mov	r2, r5
   19d98:	bl	149f4 <fprintf@plt>
   19d9c:	ldr	r0, [r5, #204]	; 0xcc
   19da0:	movw	r1, #60226	; 0xeb42
   19da4:	movt	r1, #3
   19da8:	mov	r2, r5
   19dac:	bl	149f4 <fprintf@plt>
   19db0:	ldr	r0, [r5, #204]	; 0xcc
   19db4:	movw	r1, #60265	; 0xeb69
   19db8:	movt	r1, #3
   19dbc:	mov	r2, r5
   19dc0:	bl	149f4 <fprintf@plt>
   19dc4:	ldr	r0, [r5, #204]	; 0xcc
   19dc8:	movw	r1, #60308	; 0xeb94
   19dcc:	movt	r1, #3
   19dd0:	mov	r2, r5
   19dd4:	bl	149f4 <fprintf@plt>
   19dd8:	ldr	r0, [r5, #204]	; 0xcc
   19ddc:	movw	r1, #60359	; 0xebc7
   19de0:	movt	r1, #3
   19de4:	mov	r2, r5
   19de8:	bl	149f4 <fprintf@plt>
   19dec:	ldr	r0, [r5, #204]	; 0xcc
   19df0:	movw	r1, #60418	; 0xec02
   19df4:	movt	r1, #3
   19df8:	mov	r2, r5
   19dfc:	bl	149f4 <fprintf@plt>
   19e00:	ldr	r0, [r5, #204]	; 0xcc
   19e04:	movw	r1, #60506	; 0xec5a
   19e08:	movt	r1, #3
   19e0c:	mov	r2, r5
   19e10:	mov	r3, r5
   19e14:	bl	149f4 <fprintf@plt>
   19e18:	ldr	r0, [r5, #204]	; 0xcc
   19e1c:	movw	r1, #60533	; 0xec75
   19e20:	movt	r1, #3
   19e24:	mov	r2, r5
   19e28:	mov	r3, r5
   19e2c:	bl	149f4 <fprintf@plt>
   19e30:	movw	r1, #26589	; 0x67dd
   19e34:	movt	r1, #3
   19e38:	mov	r0, r5
   19e3c:	bl	14910 <strcmp@plt>
   19e40:	cmp	r0, #0
   19e44:	beq	19e70 <__flatcc_fb_gen_common_c_builder_header@@Base+0x1bc>
   19e48:	ldr	r0, [r5, #204]	; 0xcc
   19e4c:	movw	r1, #60572	; 0xec9c
   19e50:	movt	r1, #3
   19e54:	mov	r2, r5
   19e58:	bl	149f4 <fprintf@plt>
   19e5c:	ldr	r0, [r5, #204]	; 0xcc
   19e60:	movw	r1, #60621	; 0xeccd
   19e64:	movt	r1, #3
   19e68:	mov	r2, r5
   19e6c:	bl	149f4 <fprintf@plt>
   19e70:	ldr	r1, [r5, #204]	; 0xcc
   19e74:	mov	r0, #10
   19e78:	bl	14a54 <fputc@plt>
   19e7c:	ldr	r0, [r5, #204]	; 0xcc
   19e80:	movw	r1, #60657	; 0xecf1
   19e84:	movt	r1, #3
   19e88:	mov	r2, r5
   19e8c:	bl	149f4 <fprintf@plt>
   19e90:	ldr	r0, [r5, #204]	; 0xcc
   19e94:	movw	r1, #61540	; 0xf064
   19e98:	movt	r1, #3
   19e9c:	mov	r2, r5
   19ea0:	bl	149f4 <fprintf@plt>
   19ea4:	ldr	r0, [r5, #204]	; 0xcc
   19ea8:	str	r5, [sp]
   19eac:	movw	r1, #63277	; 0xf72d
   19eb0:	movt	r1, #3
   19eb4:	mov	r2, r5
   19eb8:	mov	r3, r5
   19ebc:	bl	149f4 <fprintf@plt>
   19ec0:	ldr	r0, [r5, #204]	; 0xcc
   19ec4:	movw	r1, #63414	; 0xf7b6
   19ec8:	movt	r1, #3
   19ecc:	mov	r2, r5
   19ed0:	bl	149f4 <fprintf@plt>
   19ed4:	ldr	r0, [r5, #204]	; 0xcc
   19ed8:	movw	r1, #625	; 0x271
   19edc:	movt	r1, #4
   19ee0:	mov	r2, r5
   19ee4:	bl	149f4 <fprintf@plt>
   19ee8:	ldr	r0, [r5, #204]	; 0xcc
   19eec:	movw	r1, #1612	; 0x64c
   19ef0:	movt	r1, #4
   19ef4:	mov	r2, r5
   19ef8:	bl	149f4 <fprintf@plt>
   19efc:	ldr	r0, [r5, #204]	; 0xcc
   19f00:	movw	r1, #3202	; 0xc82
   19f04:	movt	r1, #4
   19f08:	mov	r2, r5
   19f0c:	bl	149f4 <fprintf@plt>
   19f10:	ldr	r0, [r5, #204]	; 0xcc
   19f14:	movw	r1, #4350	; 0x10fe
   19f18:	movt	r1, #4
   19f1c:	mov	r2, r5
   19f20:	mov	r3, r5
   19f24:	bl	149f4 <fprintf@plt>
   19f28:	ldr	r0, [r5, #204]	; 0xcc
   19f2c:	str	r5, [sp]
   19f30:	movw	r1, #6257	; 0x1871
   19f34:	movt	r1, #4
   19f38:	mov	r2, r5
   19f3c:	mov	r3, r5
   19f40:	bl	149f4 <fprintf@plt>
   19f44:	ldr	r0, [r5, #204]	; 0xcc
   19f48:	movw	r1, #7609	; 0x1db9
   19f4c:	movt	r1, #4
   19f50:	mov	r2, r5
   19f54:	bl	149f4 <fprintf@plt>
   19f58:	ldr	r0, [r5, #204]	; 0xcc
   19f5c:	movw	r1, #8759	; 0x2237
   19f60:	movt	r1, #4
   19f64:	mov	r2, r5
   19f68:	bl	149f4 <fprintf@plt>
   19f6c:	ldr	r0, [r5, #204]	; 0xcc
   19f70:	movw	r1, #9157	; 0x23c5
   19f74:	movt	r1, #4
   19f78:	mov	r2, r5
   19f7c:	bl	149f4 <fprintf@plt>
   19f80:	ldr	r0, [r5, #204]	; 0xcc
   19f84:	movw	r1, #10015	; 0x271f
   19f88:	movt	r1, #4
   19f8c:	mov	r2, r5
   19f90:	mov	r3, r5
   19f94:	bl	149f4 <fprintf@plt>
   19f98:	ldr	r0, [r5, #204]	; 0xcc
   19f9c:	movw	r1, #10532	; 0x2924
   19fa0:	movt	r1, #4
   19fa4:	mov	r2, r5
   19fa8:	bl	149f4 <fprintf@plt>
   19fac:	ldr	r0, [r5, #204]	; 0xcc
   19fb0:	str	r5, [sp]
   19fb4:	movw	r1, #11405	; 0x2c8d
   19fb8:	movt	r1, #4
   19fbc:	mov	r2, r5
   19fc0:	mov	r3, r5
   19fc4:	bl	149f4 <fprintf@plt>
   19fc8:	ldr	r0, [r5, #204]	; 0xcc
   19fcc:	str	r5, [sp]
   19fd0:	str	r5, [sp, #4]
   19fd4:	movw	r1, #12681	; 0x3189
   19fd8:	movt	r1, #4
   19fdc:	mov	r2, r5
   19fe0:	mov	r3, r5
   19fe4:	bl	149f4 <fprintf@plt>
   19fe8:	ldr	r0, [r5, #204]	; 0xcc
   19fec:	movw	r1, #12946	; 0x3292
   19ff0:	movt	r1, #4
   19ff4:	mov	r2, r5
   19ff8:	mov	r3, r5
   19ffc:	bl	149f4 <fprintf@plt>
   1a000:	ldr	r0, [r5, #204]	; 0xcc
   1a004:	str	r5, [sp]
   1a008:	str	r5, [sp, #4]
   1a00c:	movw	r1, #13818	; 0x35fa
   1a010:	movt	r1, #4
   1a014:	mov	r2, r5
   1a018:	mov	r3, r5
   1a01c:	bl	149f4 <fprintf@plt>
   1a020:	ldr	r0, [r5, #204]	; 0xcc
   1a024:	movw	r1, #15352	; 0x3bf8
   1a028:	movt	r1, #4
   1a02c:	mov	r2, r5
   1a030:	mov	r3, r5
   1a034:	bl	149f4 <fprintf@plt>
   1a038:	ldr	r0, [r5, #204]	; 0xcc
   1a03c:	movw	r1, #15787	; 0x3dab
   1a040:	movt	r1, #4
   1a044:	mov	r2, r5
   1a048:	bl	149f4 <fprintf@plt>
   1a04c:	ldr	r0, [r5, #204]	; 0xcc
   1a050:	movw	r1, #16336	; 0x3fd0
   1a054:	movt	r1, #4
   1a058:	mov	r2, r5
   1a05c:	bl	149f4 <fprintf@plt>
   1a060:	ldr	r0, [r5, #204]	; 0xcc
   1a064:	movw	r1, #17296	; 0x4390
   1a068:	movt	r1, #4
   1a06c:	mov	r2, r5
   1a070:	bl	149f4 <fprintf@plt>
   1a074:	ldr	r0, [r5, #204]	; 0xcc
   1a078:	movw	r1, #17997	; 0x464d
   1a07c:	movt	r1, #4
   1a080:	mov	r2, r5
   1a084:	bl	149f4 <fprintf@plt>
   1a088:	ldr	r0, [r5, #204]	; 0xcc
   1a08c:	movw	r1, #19041	; 0x4a61
   1a090:	movt	r1, #4
   1a094:	mov	r2, r5
   1a098:	mov	r3, r5
   1a09c:	bl	149f4 <fprintf@plt>
   1a0a0:	ldr	r0, [r5, #204]	; 0xcc
   1a0a4:	movw	r1, #19277	; 0x4b4d
   1a0a8:	movt	r1, #4
   1a0ac:	mov	r2, r5
   1a0b0:	bl	149f4 <fprintf@plt>
   1a0b4:	ldr	r0, [r5, #204]	; 0xcc
   1a0b8:	movw	r1, #19886	; 0x4dae
   1a0bc:	movt	r1, #4
   1a0c0:	mov	r2, r5
   1a0c4:	bl	149f4 <fprintf@plt>
   1a0c8:	ldr	r0, [r5, #204]	; 0xcc
   1a0cc:	movw	r1, #20773	; 0x5125
   1a0d0:	movt	r1, #4
   1a0d4:	mov	r2, r5
   1a0d8:	mov	r3, r5
   1a0dc:	bl	149f4 <fprintf@plt>
   1a0e0:	ldr	r0, [r5, #204]	; 0xcc
   1a0e4:	movw	r1, #21876	; 0x5574
   1a0e8:	movt	r1, #4
   1a0ec:	mov	r2, r5
   1a0f0:	mov	r3, r5
   1a0f4:	bl	149f4 <fprintf@plt>
   1a0f8:	ldr	r0, [r5, #204]	; 0xcc
   1a0fc:	movw	r1, #22540	; 0x580c
   1a100:	movt	r1, #4
   1a104:	mov	r2, r5
   1a108:	mov	r3, r5
   1a10c:	bl	149f4 <fprintf@plt>
   1a110:	ldr	r0, [r5, #204]	; 0xcc
   1a114:	movw	r1, #23560	; 0x5c08
   1a118:	movt	r1, #4
   1a11c:	mov	r2, r5
   1a120:	mov	r3, r5
   1a124:	bl	149f4 <fprintf@plt>
   1a128:	ldr	r0, [r5, #204]	; 0xcc
   1a12c:	str	r5, [sp]
   1a130:	movw	r1, #23828	; 0x5d14
   1a134:	movt	r1, #4
   1a138:	mov	r2, r5
   1a13c:	mov	r3, r5
   1a140:	bl	149f4 <fprintf@plt>
   1a144:	ldr	r0, [r5, #204]	; 0xcc
   1a148:	movw	r1, #23967	; 0x5d9f
   1a14c:	movt	r1, #4
   1a150:	mov	r2, r5
   1a154:	mov	r3, r5
   1a158:	bl	149f4 <fprintf@plt>
   1a15c:	ldr	r0, [r5, #204]	; 0xcc
   1a160:	movw	r1, #24811	; 0x60eb
   1a164:	movt	r1, #4
   1a168:	mov	r2, r5
   1a16c:	bl	149f4 <fprintf@plt>
   1a170:	ldr	r0, [r5, #204]	; 0xcc
   1a174:	movw	r1, #25459	; 0x6373
   1a178:	movt	r1, #4
   1a17c:	mov	r2, r5
   1a180:	bl	149f4 <fprintf@plt>
   1a184:	ldr	r0, [r5, #204]	; 0xcc
   1a188:	movw	r1, #26113	; 0x6601
   1a18c:	movt	r1, #4
   1a190:	mov	r2, r5
   1a194:	bl	149f4 <fprintf@plt>
   1a198:	ldr	r0, [r5, #204]	; 0xcc
   1a19c:	str	r5, [sp]
   1a1a0:	movw	r1, #27575	; 0x6bb7
   1a1a4:	movt	r1, #4
   1a1a8:	mov	r2, r5
   1a1ac:	mov	r3, r5
   1a1b0:	bl	149f4 <fprintf@plt>
   1a1b4:	ldr	r0, [r5, #204]	; 0xcc
   1a1b8:	movw	r1, #27718	; 0x6c46
   1a1bc:	movt	r1, #4
   1a1c0:	mov	r2, r5
   1a1c4:	bl	149f4 <fprintf@plt>
   1a1c8:	ldr	r0, [r5, #204]	; 0xcc
   1a1cc:	movw	r1, #27762	; 0x6c72
   1a1d0:	movt	r1, #4
   1a1d4:	mov	r2, r5
   1a1d8:	bl	149f4 <fprintf@plt>
   1a1dc:	ldr	r0, [r5, #204]	; 0xcc
   1a1e0:	movw	r1, #27796	; 0x6c94
   1a1e4:	movt	r1, #4
   1a1e8:	mov	r2, r5
   1a1ec:	bl	149f4 <fprintf@plt>
   1a1f0:	ldr	r0, [r5, #204]	; 0xcc
   1a1f4:	movw	r1, #27838	; 0x6cbe
   1a1f8:	movt	r1, #4
   1a1fc:	mov	r2, r5
   1a200:	bl	149f4 <fprintf@plt>
   1a204:	ldr	r0, [r5, #204]	; 0xcc
   1a208:	movw	r1, #27871	; 0x6cdf
   1a20c:	movt	r1, #4
   1a210:	mov	r2, r5
   1a214:	mov	r3, r5
   1a218:	bl	149f4 <fprintf@plt>
   1a21c:	ldr	r0, [r5, #204]	; 0xcc
   1a220:	movw	r1, #27915	; 0x6d0b
   1a224:	movt	r1, #4
   1a228:	mov	r2, r5
   1a22c:	bl	149f4 <fprintf@plt>
   1a230:	ldr	r0, [r5, #204]	; 0xcc
   1a234:	movw	r1, #27948	; 0x6d2c
   1a238:	movt	r1, #4
   1a23c:	mov	r2, r5
   1a240:	bl	149f4 <fprintf@plt>
   1a244:	ldr	r0, [r5, #204]	; 0xcc
   1a248:	movw	r1, #27994	; 0x6d5a
   1a24c:	movt	r1, #4
   1a250:	mov	r2, r5
   1a254:	bl	149f4 <fprintf@plt>
   1a258:	ldr	r0, [r5, #204]	; 0xcc
   1a25c:	movw	r1, #28029	; 0x6d7d
   1a260:	movt	r1, #4
   1a264:	mov	r2, r5
   1a268:	bl	149f4 <fprintf@plt>
   1a26c:	ldr	r0, [r5, #204]	; 0xcc
   1a270:	movw	r1, #28075	; 0x6dab
   1a274:	movt	r1, #4
   1a278:	mov	r2, r5
   1a27c:	bl	149f4 <fprintf@plt>
   1a280:	ldr	r0, [r5, #204]	; 0xcc
   1a284:	movw	r1, #28110	; 0x6dce
   1a288:	movt	r1, #4
   1a28c:	mov	r2, r5
   1a290:	bl	149f4 <fprintf@plt>
   1a294:	ldr	r0, [r5, #204]	; 0xcc
   1a298:	movw	r1, #28156	; 0x6dfc
   1a29c:	movt	r1, #4
   1a2a0:	mov	r2, r5
   1a2a4:	bl	149f4 <fprintf@plt>
   1a2a8:	ldr	r0, [r5, #204]	; 0xcc
   1a2ac:	movw	r1, #28191	; 0x6e1f
   1a2b0:	movt	r1, #4
   1a2b4:	mov	r2, r5
   1a2b8:	bl	149f4 <fprintf@plt>
   1a2bc:	ldr	r0, [r5, #204]	; 0xcc
   1a2c0:	movw	r1, #28235	; 0x6e4b
   1a2c4:	movt	r1, #4
   1a2c8:	mov	r2, r5
   1a2cc:	bl	149f4 <fprintf@plt>
   1a2d0:	ldr	r0, [r5, #204]	; 0xcc
   1a2d4:	movw	r1, #28269	; 0x6e6d
   1a2d8:	movt	r1, #4
   1a2dc:	mov	r2, r5
   1a2e0:	bl	149f4 <fprintf@plt>
   1a2e4:	ldr	r0, [r5, #204]	; 0xcc
   1a2e8:	movw	r1, #28313	; 0x6e99
   1a2ec:	movt	r1, #4
   1a2f0:	mov	r2, r5
   1a2f4:	bl	149f4 <fprintf@plt>
   1a2f8:	ldr	r0, [r5, #204]	; 0xcc
   1a2fc:	movw	r1, #28347	; 0x6ebb
   1a300:	movt	r1, #4
   1a304:	mov	r2, r5
   1a308:	bl	149f4 <fprintf@plt>
   1a30c:	ldr	r0, [r5, #204]	; 0xcc
   1a310:	movw	r1, #28391	; 0x6ee7
   1a314:	movt	r1, #4
   1a318:	mov	r2, r5
   1a31c:	bl	149f4 <fprintf@plt>
   1a320:	ldr	r0, [r5, #204]	; 0xcc
   1a324:	movw	r1, #28425	; 0x6f09
   1a328:	movt	r1, #4
   1a32c:	mov	r2, r5
   1a330:	bl	149f4 <fprintf@plt>
   1a334:	ldr	r0, [r5, #204]	; 0xcc
   1a338:	movw	r1, #28467	; 0x6f33
   1a33c:	movt	r1, #4
   1a340:	mov	r2, r5
   1a344:	bl	149f4 <fprintf@plt>
   1a348:	ldr	r0, [r5, #204]	; 0xcc
   1a34c:	movw	r1, #28501	; 0x6f55
   1a350:	movt	r1, #4
   1a354:	mov	r2, r5
   1a358:	bl	149f4 <fprintf@plt>
   1a35c:	ldr	r0, [r5, #204]	; 0xcc
   1a360:	movw	r1, #28545	; 0x6f81
   1a364:	movt	r1, #4
   1a368:	mov	r2, r5
   1a36c:	bl	149f4 <fprintf@plt>
   1a370:	ldr	r1, [r5, #204]	; 0xcc
   1a374:	mov	r0, #10
   1a378:	bl	14a54 <fputc@plt>
   1a37c:	ldr	r0, [r5, #204]	; 0xcc
   1a380:	str	r5, [sp]
   1a384:	movw	r1, #28580	; 0x6fa4
   1a388:	movt	r1, #4
   1a38c:	mov	r2, r5
   1a390:	mov	r3, r5
   1a394:	bl	149f4 <fprintf@plt>
   1a398:	ldr	r0, [r5, #204]	; 0xcc
   1a39c:	str	r5, [sp]
   1a3a0:	movw	r1, #28620	; 0x6fcc
   1a3a4:	movt	r1, #4
   1a3a8:	mov	r2, r5
   1a3ac:	mov	r3, r5
   1a3b0:	bl	149f4 <fprintf@plt>
   1a3b4:	ldr	r0, [r5, #204]	; 0xcc
   1a3b8:	str	r5, [sp]
   1a3bc:	str	r5, [sp, #4]
   1a3c0:	movw	r1, #28658	; 0x6ff2
   1a3c4:	movt	r1, #4
   1a3c8:	mov	r2, r5
   1a3cc:	mov	r3, r5
   1a3d0:	bl	149f4 <fprintf@plt>
   1a3d4:	ldr	r0, [r5, #204]	; 0xcc
   1a3d8:	str	r5, [sp]
   1a3dc:	movw	r1, #28698	; 0x701a
   1a3e0:	movt	r1, #4
   1a3e4:	mov	r2, r5
   1a3e8:	mov	r3, r5
   1a3ec:	bl	149f4 <fprintf@plt>
   1a3f0:	ldr	r0, [r5, #204]	; 0xcc
   1a3f4:	str	r5, [sp]
   1a3f8:	movw	r1, #28740	; 0x7044
   1a3fc:	movt	r1, #4
   1a400:	mov	r2, r5
   1a404:	mov	r3, r5
   1a408:	bl	149f4 <fprintf@plt>
   1a40c:	ldr	r0, [r5, #204]	; 0xcc
   1a410:	str	r5, [sp]
   1a414:	movw	r1, #28782	; 0x706e
   1a418:	movt	r1, #4
   1a41c:	mov	r2, r5
   1a420:	mov	r3, r5
   1a424:	bl	149f4 <fprintf@plt>
   1a428:	ldr	r0, [r5, #204]	; 0xcc
   1a42c:	str	r5, [sp]
   1a430:	movw	r1, #28824	; 0x7098
   1a434:	movt	r1, #4
   1a438:	mov	r2, r5
   1a43c:	mov	r3, r5
   1a440:	bl	149f4 <fprintf@plt>
   1a444:	ldr	r0, [r5, #204]	; 0xcc
   1a448:	str	r5, [sp]
   1a44c:	movw	r1, #28864	; 0x70c0
   1a450:	movt	r1, #4
   1a454:	mov	r2, r5
   1a458:	mov	r3, r5
   1a45c:	bl	149f4 <fprintf@plt>
   1a460:	ldr	r0, [r5, #204]	; 0xcc
   1a464:	str	r5, [sp]
   1a468:	movw	r1, #28904	; 0x70e8
   1a46c:	movt	r1, #4
   1a470:	mov	r2, r5
   1a474:	mov	r3, r5
   1a478:	bl	149f4 <fprintf@plt>
   1a47c:	ldr	r0, [r5, #204]	; 0xcc
   1a480:	str	r5, [sp]
   1a484:	movw	r1, #28944	; 0x7110
   1a488:	movt	r1, #4
   1a48c:	mov	r2, r5
   1a490:	mov	r3, r5
   1a494:	bl	149f4 <fprintf@plt>
   1a498:	ldr	r0, [r5, #204]	; 0xcc
   1a49c:	str	r5, [sp]
   1a4a0:	movw	r1, #28982	; 0x7136
   1a4a4:	movt	r1, #4
   1a4a8:	mov	r2, r5
   1a4ac:	mov	r3, r5
   1a4b0:	bl	149f4 <fprintf@plt>
   1a4b4:	ldr	r1, [r5, #204]	; 0xcc
   1a4b8:	mov	r0, #10
   1a4bc:	bl	14a54 <fputc@plt>
   1a4c0:	ldr	r0, [r5, #204]	; 0xcc
   1a4c4:	movw	r1, #29022	; 0x715e
   1a4c8:	movt	r1, #4
   1a4cc:	mov	r2, r5
   1a4d0:	mov	r3, r5
   1a4d4:	bl	149f4 <fprintf@plt>
   1a4d8:	ldr	r1, [r5, #204]	; 0xcc
   1a4dc:	mov	r0, #10
   1a4e0:	bl	14a54 <fputc@plt>
   1a4e4:	ldr	r0, [r5, #204]	; 0xcc
   1a4e8:	movw	r1, #29044	; 0x7174
   1a4ec:	movt	r1, #4
   1a4f0:	mov	r2, r5
   1a4f4:	mov	r3, r5
   1a4f8:	bl	149f4 <fprintf@plt>
   1a4fc:	mov	r0, r5
   1a500:	bl	1a54c <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   1a504:	ldr	r0, [r5, #204]	; 0xcc
   1a508:	movw	r1, #29066	; 0x718a
   1a50c:	movt	r1, #4
   1a510:	mov	r2, r4
   1a514:	bl	149f4 <fprintf@plt>
   1a518:	mov	r0, #0
   1a51c:	sub	sp, fp, #8
   1a520:	pop	{r4, r5, fp, pc}
   1a524:	ldr	r1, [r0, #212]	; 0xd4
   1a528:	ldr	r1, [r1, #140]	; 0x8c
   1a52c:	cmp	r1, #0
   1a530:	bxeq	lr
   1a534:	ldr	r3, [r0, #204]	; 0xcc
   1a538:	movw	r0, #26510	; 0x678e
   1a53c:	movt	r0, #3
   1a540:	mov	r1, #36	; 0x24
   1a544:	mov	r2, #1
   1a548:	b	1497c <fwrite@plt>
   1a54c:	ldr	r1, [r0, #212]	; 0xd4
   1a550:	ldr	r1, [r1, #140]	; 0x8c
   1a554:	cmp	r1, #0
   1a558:	bxeq	lr
   1a55c:	ldr	r3, [r0, #204]	; 0xcc
   1a560:	movw	r0, #50552	; 0xc578
   1a564:	movt	r0, #3
   1a568:	mov	r1, #36	; 0x24
   1a56c:	mov	r2, #1
   1a570:	b	1497c <fwrite@plt>

0001a574 <__flatcc_fb_gen_c_builder@@Base>:
   1a574:	push	{r4, sl, fp, lr}
   1a578:	add	fp, sp, #8
   1a57c:	mov	r4, r0
   1a580:	bl	1a5ac <__flatcc_fb_gen_c_builder@@Base+0x38>
   1a584:	mov	r0, r4
   1a588:	bl	1a738 <__flatcc_fb_gen_c_builder@@Base+0x1c4>
   1a58c:	mov	r0, r4
   1a590:	bl	1a800 <__flatcc_fb_gen_c_builder@@Base+0x28c>
   1a594:	mov	r0, r4
   1a598:	bl	1a844 <__flatcc_fb_gen_c_builder@@Base+0x2d0>
   1a59c:	mov	r0, r4
   1a5a0:	bl	1a96c <__flatcc_fb_gen_c_builder@@Base+0x3f8>
   1a5a4:	mov	r0, #0
   1a5a8:	pop	{r4, sl, fp, pc}
   1a5ac:	push	{r4, r5, fp, lr}
   1a5b0:	add	fp, sp, #8
   1a5b4:	sub	sp, sp, #8
   1a5b8:	mov	r4, r0
   1a5bc:	ldr	r0, [r0, #204]	; 0xcc
   1a5c0:	ldr	r1, [r4, #208]	; 0xd0
   1a5c4:	ldr	r2, [r1, #164]	; 0xa4
   1a5c8:	movw	r1, #29100	; 0x71ac
   1a5cc:	movt	r1, #4
   1a5d0:	mov	r3, r2
   1a5d4:	bl	149f4 <fprintf@plt>
   1a5d8:	ldr	r3, [r4, #204]	; 0xcc
   1a5dc:	movw	r0, #26034	; 0x65b2
   1a5e0:	movt	r0, #3
   1a5e4:	mov	r1, #81	; 0x51
   1a5e8:	mov	r2, #1
   1a5ec:	bl	1497c <fwrite@plt>
   1a5f0:	ldr	r0, [r4, #204]	; 0xcc
   1a5f4:	ldr	r1, [r4, #208]	; 0xd0
   1a5f8:	ldr	r2, [r1, #164]	; 0xa4
   1a5fc:	movw	r1, #29143	; 0x71d7
   1a600:	movt	r1, #4
   1a604:	bl	149f4 <fprintf@plt>
   1a608:	ldr	r0, [r4, #204]	; 0xcc
   1a60c:	ldr	r1, [r4, #208]	; 0xd0
   1a610:	ldr	r2, [r1, #160]	; 0xa0
   1a614:	movw	r1, #29164	; 0x71ec
   1a618:	movt	r1, #4
   1a61c:	bl	149f4 <fprintf@plt>
   1a620:	ldr	r3, [r4, #204]	; 0xcc
   1a624:	movw	r5, #51130	; 0xc7ba
   1a628:	movt	r5, #3
   1a62c:	mov	r0, r5
   1a630:	mov	r1, #7
   1a634:	mov	r2, #1
   1a638:	bl	1497c <fwrite@plt>
   1a63c:	ldr	r0, [r4, #204]	; 0xcc
   1a640:	add	r2, r4, #102	; 0x66
   1a644:	movw	r1, #60000	; 0xea60
   1a648:	movt	r1, #3
   1a64c:	bl	149f4 <fprintf@plt>
   1a650:	ldr	r0, [r4, #204]	; 0xcc
   1a654:	movw	r1, #29188	; 0x7204
   1a658:	movt	r1, #4
   1a65c:	mov	r2, r4
   1a660:	bl	149f4 <fprintf@plt>
   1a664:	ldr	r3, [r4, #204]	; 0xcc
   1a668:	mov	r0, r5
   1a66c:	mov	r1, #7
   1a670:	mov	r2, #1
   1a674:	bl	1497c <fwrite@plt>
   1a678:	movw	r1, #53081	; 0xcf59
   1a67c:	movt	r1, #4
   1a680:	movw	r2, #29219	; 0x7223
   1a684:	movt	r2, #4
   1a688:	mov	r0, r4
   1a68c:	bl	16650 <__flatcc_fb_gen_c_includes@@Base>
   1a690:	mov	r0, r4
   1a694:	bl	1a524 <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   1a698:	ldr	r0, [r4, #204]	; 0xcc
   1a69c:	ldr	r1, [r4, #208]	; 0xd0
   1a6a0:	ldrh	r2, [r1, #16]
   1a6a4:	cmp	r2, #2
   1a6a8:	bne	1a6c4 <__flatcc_fb_gen_c_builder@@Base+0x150>
   1a6ac:	ldrd	r2, [r1, #8]
   1a6b0:	str	r3, [sp]
   1a6b4:	str	r2, [sp, #4]
   1a6b8:	movw	r1, #51247	; 0xc82f
   1a6bc:	movt	r1, #3
   1a6c0:	b	1a6cc <__flatcc_fb_gen_c_builder@@Base+0x158>
   1a6c4:	movw	r1, #51296	; 0xc860
   1a6c8:	movt	r1, #3
   1a6cc:	mov	r2, r4
   1a6d0:	mov	r3, r4
   1a6d4:	bl	149f4 <fprintf@plt>
   1a6d8:	ldr	r0, [r4, #204]	; 0xcc
   1a6dc:	ldr	r1, [r4, #208]	; 0xd0
   1a6e0:	ldrh	r2, [r1, #32]
   1a6e4:	cmp	r2, #2
   1a6e8:	bne	1a704 <__flatcc_fb_gen_c_builder@@Base+0x190>
   1a6ec:	ldrd	r2, [r1, #24]
   1a6f0:	str	r3, [sp]
   1a6f4:	str	r2, [sp, #4]
   1a6f8:	movw	r1, #51348	; 0xc894
   1a6fc:	movt	r1, #3
   1a700:	b	1a718 <__flatcc_fb_gen_c_builder@@Base+0x1a4>
   1a704:	ldr	r1, [r4, #212]	; 0xd4
   1a708:	ldr	r1, [r1, #104]	; 0x68
   1a70c:	str	r1, [sp]
   1a710:	movw	r1, #51396	; 0xc8c4
   1a714:	movt	r1, #3
   1a718:	mov	r2, r4
   1a71c:	mov	r3, r4
   1a720:	bl	149f4 <fprintf@plt>
   1a724:	ldr	r1, [r4, #204]	; 0xcc
   1a728:	mov	r0, #10
   1a72c:	sub	sp, fp, #8
   1a730:	pop	{r4, r5, fp, lr}
   1a734:	b	14a54 <fputc@plt>
   1a738:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a73c:	add	fp, sp, #24
   1a740:	sub	sp, sp, #232	; 0xe8
   1a744:	mov	r4, r0
   1a748:	add	r5, sp, #8
   1a74c:	mov	r7, #0
   1a750:	mov	r0, r5
   1a754:	mov	r1, #0
   1a758:	mov	r2, #220	; 0xdc
   1a75c:	bl	14a0c <memset@plt>
   1a760:	ldr	r0, [r4, #208]	; 0xd0
   1a764:	ldr	r6, [r0, #40]	; 0x28
   1a768:	cmp	r6, #0
   1a76c:	beq	1a7f8 <__flatcc_fb_gen_c_builder@@Base+0x284>
   1a770:	movw	r8, #29230	; 0x722e
   1a774:	movt	r8, #4
   1a778:	movw	r9, #29299	; 0x7273
   1a77c:	movt	r9, #4
   1a780:	b	1a790 <__flatcc_fb_gen_c_builder@@Base+0x21c>
   1a784:	ldr	r6, [r6]
   1a788:	cmp	r6, #0
   1a78c:	beq	1a7e4 <__flatcc_fb_gen_c_builder@@Base+0x270>
   1a790:	ldrh	r0, [r6, #8]
   1a794:	cmp	r0, #3
   1a798:	bne	1a784 <__flatcc_fb_gen_c_builder@@Base+0x210>
   1a79c:	mov	r0, r6
   1a7a0:	mov	r1, r5
   1a7a4:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1a7a8:	ldr	r0, [r4, #204]	; 0xcc
   1a7ac:	str	r5, [sp]
   1a7b0:	mov	r1, r8
   1a7b4:	mov	r2, r5
   1a7b8:	mov	r3, r5
   1a7bc:	bl	149f4 <fprintf@plt>
   1a7c0:	ldr	r0, [r4, #204]	; 0xcc
   1a7c4:	str	r5, [sp]
   1a7c8:	str	r5, [sp, #4]
   1a7cc:	mov	r1, r9
   1a7d0:	mov	r2, r4
   1a7d4:	mov	r3, r4
   1a7d8:	bl	149f4 <fprintf@plt>
   1a7dc:	mov	r7, #1
   1a7e0:	b	1a784 <__flatcc_fb_gen_c_builder@@Base+0x210>
   1a7e4:	cmp	r7, #0
   1a7e8:	beq	1a7f8 <__flatcc_fb_gen_c_builder@@Base+0x284>
   1a7ec:	ldr	r1, [r4, #204]	; 0xcc
   1a7f0:	mov	r0, #10
   1a7f4:	bl	14a54 <fputc@plt>
   1a7f8:	sub	sp, fp, #24
   1a7fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a800:	push	{r4, r5, fp, lr}
   1a804:	add	fp, sp, #8
   1a808:	mov	r4, r0
   1a80c:	ldr	r0, [r0, #208]	; 0xd0
   1a810:	ldr	r5, [r0, #44]	; 0x2c
   1a814:	cmp	r5, #0
   1a818:	beq	1a840 <__flatcc_fb_gen_c_builder@@Base+0x2cc>
   1a81c:	mov	r0, r4
   1a820:	mov	r1, r5
   1a824:	bl	1a9a8 <__flatcc_fb_gen_c_builder@@Base+0x434>
   1a828:	ldr	r1, [r4, #204]	; 0xcc
   1a82c:	mov	r0, #10
   1a830:	bl	14a54 <fputc@plt>
   1a834:	ldr	r5, [r5, #120]	; 0x78
   1a838:	cmp	r5, #0
   1a83c:	bne	1a81c <__flatcc_fb_gen_c_builder@@Base+0x2a8>
   1a840:	pop	{r4, r5, fp, pc}
   1a844:	push	{r4, r5, r6, sl, fp, lr}
   1a848:	add	fp, sp, #16
   1a84c:	mov	r4, r0
   1a850:	bl	1b59c <__flatcc_fb_gen_c_builder@@Base+0x1028>
   1a854:	ldr	r0, [r4, #208]	; 0xd0
   1a858:	ldr	r5, [r0, #40]	; 0x28
   1a85c:	mov	r6, #0
   1a860:	cmp	r5, #0
   1a864:	bne	1a878 <__flatcc_fb_gen_c_builder@@Base+0x304>
   1a868:	b	1a8a4 <__flatcc_fb_gen_c_builder@@Base+0x330>
   1a86c:	ldr	r5, [r5]
   1a870:	cmp	r5, #0
   1a874:	beq	1a8a4 <__flatcc_fb_gen_c_builder@@Base+0x330>
   1a878:	ldrh	r0, [r5, #8]
   1a87c:	cmp	r0, #0
   1a880:	bne	1a86c <__flatcc_fb_gen_c_builder@@Base+0x2f8>
   1a884:	mov	r0, r4
   1a888:	mov	r1, r5
   1a88c:	bl	1b640 <__flatcc_fb_gen_c_builder@@Base+0x10cc>
   1a890:	mov	r0, r4
   1a894:	mov	r1, r5
   1a898:	bl	1b74c <__flatcc_fb_gen_c_builder@@Base+0x11d8>
   1a89c:	mov	r6, #1
   1a8a0:	b	1a86c <__flatcc_fb_gen_c_builder@@Base+0x2f8>
   1a8a4:	ldr	r0, [r4, #208]	; 0xd0
   1a8a8:	ldr	r5, [r0, #40]	; 0x28
   1a8ac:	cmp	r5, #0
   1a8b0:	bne	1a8c4 <__flatcc_fb_gen_c_builder@@Base+0x350>
   1a8b4:	b	1a8e0 <__flatcc_fb_gen_c_builder@@Base+0x36c>
   1a8b8:	ldr	r5, [r5]
   1a8bc:	cmp	r5, #0
   1a8c0:	beq	1a8e0 <__flatcc_fb_gen_c_builder@@Base+0x36c>
   1a8c4:	ldrh	r0, [r5, #8]
   1a8c8:	cmp	r0, #0
   1a8cc:	bne	1a8b8 <__flatcc_fb_gen_c_builder@@Base+0x344>
   1a8d0:	mov	r0, r4
   1a8d4:	mov	r1, r5
   1a8d8:	bl	1b7b0 <__flatcc_fb_gen_c_builder@@Base+0x123c>
   1a8dc:	b	1a8b8 <__flatcc_fb_gen_c_builder@@Base+0x344>
   1a8e0:	cmp	r6, #0
   1a8e4:	beq	1a960 <__flatcc_fb_gen_c_builder@@Base+0x3ec>
   1a8e8:	ldr	r1, [r4, #204]	; 0xcc
   1a8ec:	mov	r0, #10
   1a8f0:	bl	14a54 <fputc@plt>
   1a8f4:	mov	r0, r4
   1a8f8:	bl	1b86c <__flatcc_fb_gen_c_builder@@Base+0x12f8>
   1a8fc:	ldr	r0, [r4, #208]	; 0xd0
   1a900:	ldr	r5, [r0, #40]	; 0x28
   1a904:	cmp	r5, #0
   1a908:	bne	1a91c <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   1a90c:	b	1a95c <__flatcc_fb_gen_c_builder@@Base+0x3e8>
   1a910:	ldr	r5, [r5]
   1a914:	cmp	r5, #0
   1a918:	beq	1a95c <__flatcc_fb_gen_c_builder@@Base+0x3e8>
   1a91c:	ldrh	r0, [r5, #8]
   1a920:	cmp	r0, #0
   1a924:	bne	1a910 <__flatcc_fb_gen_c_builder@@Base+0x39c>
   1a928:	mov	r0, r4
   1a92c:	mov	r1, r5
   1a930:	bl	1b8d8 <__flatcc_fb_gen_c_builder@@Base+0x1364>
   1a934:	mov	r0, r4
   1a938:	mov	r1, r5
   1a93c:	bl	1c00c <__flatcc_fb_gen_c_builder@@Base+0x1a98>
   1a940:	mov	r0, r4
   1a944:	mov	r1, r5
   1a948:	bl	1c228 <__flatcc_fb_gen_c_builder@@Base+0x1cb4>
   1a94c:	ldr	r1, [r4, #204]	; 0xcc
   1a950:	mov	r0, #10
   1a954:	bl	14a54 <fputc@plt>
   1a958:	b	1a910 <__flatcc_fb_gen_c_builder@@Base+0x39c>
   1a95c:	pop	{r4, r5, r6, sl, fp, pc}
   1a960:	mov	r0, r4
   1a964:	pop	{r4, r5, r6, sl, fp, lr}
   1a968:	b	1b86c <__flatcc_fb_gen_c_builder@@Base+0x12f8>
   1a96c:	push	{r4, sl, fp, lr}
   1a970:	add	fp, sp, #8
   1a974:	mov	r4, r0
   1a978:	bl	1a54c <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   1a97c:	ldr	r0, [r4, #204]	; 0xcc
   1a980:	ldr	r1, [r4, #208]	; 0xd0
   1a984:	ldr	r2, [r1, #164]	; 0xa4
   1a988:	movw	r1, #33324	; 0x822c
   1a98c:	movt	r1, #4
   1a990:	pop	{r4, sl, fp, lr}
   1a994:	b	149f4 <fprintf@plt>
   1a998:	mov	r2, r1
   1a99c:	mov	r1, r0
   1a9a0:	ldr	r0, [r0, #12]
   1a9a4:	b	16838 <__flatcc_fb_scoped_symbol_name@@Base>
   1a9a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a9ac:	add	fp, sp, #28
   1a9b0:	sub	sp, sp, #260	; 0x104
   1a9b4:	mov	r6, r1
   1a9b8:	mov	r4, r0
   1a9bc:	add	r5, sp, #32
   1a9c0:	mov	r9, #0
   1a9c4:	mov	r0, r5
   1a9c8:	mov	r1, #0
   1a9cc:	mov	r2, #220	; 0xdc
   1a9d0:	bl	14a0c <memset@plt>
   1a9d4:	ldrh	r0, [r6, #8]
   1a9d8:	cmp	r0, #1
   1a9dc:	bne	1ad4c <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1a9e0:	mov	r0, r6
   1a9e4:	mov	r1, r5
   1a9e8:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1a9ec:	mov	r0, r6
   1a9f0:	bl	1ad6c <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1a9f4:	mov	r7, r0
   1a9f8:	ldr	r0, [r4, #204]	; 0xcc
   1a9fc:	movw	r1, #29478	; 0x7326
   1aa00:	movt	r1, #4
   1aa04:	mov	r2, r5
   1aa08:	bl	149f4 <fprintf@plt>
   1aa0c:	mov	r0, #1
   1aa10:	str	r0, [sp]
   1aa14:	mov	r8, #1
   1aa18:	mov	r0, r4
   1aa1c:	mov	r1, r6
   1aa20:	mov	r2, #0
   1aa24:	mov	r3, r7
   1aa28:	bl	1addc <__flatcc_fb_gen_c_builder@@Base+0x868>
   1aa2c:	ldr	r0, [r4, #204]	; 0xcc
   1aa30:	movw	r1, #29504	; 0x7340
   1aa34:	movt	r1, #4
   1aa38:	mov	r2, r5
   1aa3c:	bl	149f4 <fprintf@plt>
   1aa40:	str	r8, [sp]
   1aa44:	mov	r0, r4
   1aa48:	mov	r1, r6
   1aa4c:	mov	r2, #0
   1aa50:	mov	r3, r7
   1aa54:	bl	1af6c <__flatcc_fb_gen_c_builder@@Base+0x9f8>
   1aa58:	ldr	r1, [r4, #204]	; 0xcc
   1aa5c:	mov	r0, #10
   1aa60:	bl	14a54 <fputc@plt>
   1aa64:	ldr	r0, [r4, #204]	; 0xcc
   1aa68:	str	r5, [sp]
   1aa6c:	movw	r1, #29529	; 0x7359
   1aa70:	movt	r1, #4
   1aa74:	mov	r2, r5
   1aa78:	mov	r3, r5
   1aa7c:	bl	149f4 <fprintf@plt>
   1aa80:	str	r9, [sp]
   1aa84:	mov	r0, r4
   1aa88:	mov	r1, r6
   1aa8c:	mov	r2, #0
   1aa90:	mov	r3, r7
   1aa94:	bl	1addc <__flatcc_fb_gen_c_builder@@Base+0x868>
   1aa98:	ldr	r3, [r4, #204]	; 0xcc
   1aa9c:	movw	r0, #29567	; 0x737f
   1aaa0:	movt	r0, #4
   1aaa4:	mov	r1, #4
   1aaa8:	mov	r2, #1
   1aaac:	bl	1497c <fwrite@plt>
   1aab0:	str	r9, [sp]
   1aab4:	mov	r0, r4
   1aab8:	mov	r1, r6
   1aabc:	mov	r2, r7
   1aac0:	mov	r3, #0
   1aac4:	bl	1afe8 <__flatcc_fb_gen_c_builder@@Base+0xa74>
   1aac8:	ldr	r3, [r4, #204]	; 0xcc
   1aacc:	movw	r8, #53533	; 0xd11d
   1aad0:	movt	r8, #3
   1aad4:	mov	r0, r8
   1aad8:	mov	r1, #12
   1aadc:	mov	r2, #1
   1aae0:	bl	1497c <fwrite@plt>
   1aae4:	ldr	r0, [r4, #204]	; 0xcc
   1aae8:	str	r5, [sp]
   1aaec:	str	r5, [sp, #4]
   1aaf0:	movw	r1, #29572	; 0x7384
   1aaf4:	movt	r1, #4
   1aaf8:	mov	r2, r5
   1aafc:	mov	r3, r5
   1ab00:	bl	149f4 <fprintf@plt>
   1ab04:	ldr	r3, [r4, #204]	; 0xcc
   1ab08:	movw	r9, #29569	; 0x7381
   1ab0c:	movt	r9, #4
   1ab10:	mov	r0, r9
   1ab14:	mov	sl, #0
   1ab18:	mov	r1, #2
   1ab1c:	mov	r2, #1
   1ab20:	bl	1497c <fwrite@plt>
   1ab24:	mov	r0, #1
   1ab28:	str	r0, [sp]
   1ab2c:	mov	r0, r4
   1ab30:	mov	r1, r6
   1ab34:	mov	r2, r7
   1ab38:	mov	r3, #0
   1ab3c:	bl	1afe8 <__flatcc_fb_gen_c_builder@@Base+0xa74>
   1ab40:	ldr	r3, [r4, #204]	; 0xcc
   1ab44:	mov	r0, r8
   1ab48:	mov	r1, #12
   1ab4c:	mov	r2, #1
   1ab50:	bl	1497c <fwrite@plt>
   1ab54:	ldr	r0, [r4, #204]	; 0xcc
   1ab58:	str	r5, [sp]
   1ab5c:	movw	r1, #29626	; 0x73ba
   1ab60:	movt	r1, #4
   1ab64:	mov	r2, r5
   1ab68:	mov	r3, r5
   1ab6c:	bl	149f4 <fprintf@plt>
   1ab70:	str	sl, [sp]
   1ab74:	mov	r0, r4
   1ab78:	mov	r1, r6
   1ab7c:	mov	r2, #0
   1ab80:	mov	r3, r7
   1ab84:	bl	1addc <__flatcc_fb_gen_c_builder@@Base+0x868>
   1ab88:	ldr	r3, [r4, #204]	; 0xcc
   1ab8c:	movw	r0, #29567	; 0x737f
   1ab90:	movt	r0, #4
   1ab94:	mov	r1, #4
   1ab98:	mov	r2, #1
   1ab9c:	bl	1497c <fwrite@plt>
   1aba0:	str	sl, [sp]
   1aba4:	mov	r0, r4
   1aba8:	mov	r1, r6
   1abac:	mov	r2, r7
   1abb0:	mov	r3, #2
   1abb4:	bl	1afe8 <__flatcc_fb_gen_c_builder@@Base+0xa74>
   1abb8:	ldr	r3, [r4, #204]	; 0xcc
   1abbc:	mov	r0, r8
   1abc0:	mov	r1, #12
   1abc4:	mov	r2, #1
   1abc8:	bl	1497c <fwrite@plt>
   1abcc:	ldr	r0, [r4, #204]	; 0xcc
   1abd0:	str	r5, [sp]
   1abd4:	str	r5, [sp, #4]
   1abd8:	movw	r1, #29670	; 0x73e6
   1abdc:	movt	r1, #4
   1abe0:	mov	r2, r5
   1abe4:	mov	r3, r5
   1abe8:	bl	149f4 <fprintf@plt>
   1abec:	ldr	r3, [r4, #204]	; 0xcc
   1abf0:	mov	r0, r9
   1abf4:	mov	r1, #2
   1abf8:	mov	r2, #1
   1abfc:	bl	1497c <fwrite@plt>
   1ac00:	mov	r0, #1
   1ac04:	str	r0, [sp]
   1ac08:	mov	r0, r4
   1ac0c:	mov	r1, r6
   1ac10:	mov	r2, r7
   1ac14:	mov	r3, #2
   1ac18:	bl	1afe8 <__flatcc_fb_gen_c_builder@@Base+0xa74>
   1ac1c:	ldr	r3, [r4, #204]	; 0xcc
   1ac20:	mov	r0, r8
   1ac24:	mov	r1, #12
   1ac28:	mov	r2, #1
   1ac2c:	bl	1497c <fwrite@plt>
   1ac30:	ldr	r0, [r4, #204]	; 0xcc
   1ac34:	str	r5, [sp]
   1ac38:	movw	r1, #29730	; 0x7422
   1ac3c:	movt	r1, #4
   1ac40:	mov	r2, r5
   1ac44:	mov	r3, r5
   1ac48:	bl	149f4 <fprintf@plt>
   1ac4c:	str	sl, [sp]
   1ac50:	mov	r0, r4
   1ac54:	mov	r1, r6
   1ac58:	mov	r2, #0
   1ac5c:	mov	r3, r7
   1ac60:	bl	1addc <__flatcc_fb_gen_c_builder@@Base+0x868>
   1ac64:	ldr	r3, [r4, #204]	; 0xcc
   1ac68:	movw	r0, #29567	; 0x737f
   1ac6c:	movt	r0, #4
   1ac70:	mov	r1, #4
   1ac74:	mov	r2, #1
   1ac78:	bl	1497c <fwrite@plt>
   1ac7c:	str	sl, [sp]
   1ac80:	mov	r0, r4
   1ac84:	mov	r1, r6
   1ac88:	mov	r2, r7
   1ac8c:	mov	r3, #1
   1ac90:	bl	1afe8 <__flatcc_fb_gen_c_builder@@Base+0xa74>
   1ac94:	ldr	r3, [r4, #204]	; 0xcc
   1ac98:	mov	r0, r8
   1ac9c:	mov	r1, #12
   1aca0:	mov	r2, #1
   1aca4:	bl	1497c <fwrite@plt>
   1aca8:	ldr	r0, [r4, #204]	; 0xcc
   1acac:	str	r5, [sp]
   1acb0:	str	r5, [sp, #4]
   1acb4:	movw	r1, #29776	; 0x7450
   1acb8:	movt	r1, #4
   1acbc:	mov	r2, r5
   1acc0:	mov	r3, r5
   1acc4:	bl	149f4 <fprintf@plt>
   1acc8:	ldr	r3, [r4, #204]	; 0xcc
   1accc:	mov	r0, r9
   1acd0:	mov	r1, #2
   1acd4:	mov	r2, #1
   1acd8:	bl	1497c <fwrite@plt>
   1acdc:	mov	r0, #1
   1ace0:	str	r0, [sp]
   1ace4:	mov	r0, r4
   1ace8:	mov	r1, r6
   1acec:	mov	r2, r7
   1acf0:	mov	r3, #1
   1acf4:	bl	1afe8 <__flatcc_fb_gen_c_builder@@Base+0xa74>
   1acf8:	ldr	r3, [r4, #204]	; 0xcc
   1acfc:	mov	r0, r8
   1ad00:	mov	r1, #12
   1ad04:	mov	r2, #1
   1ad08:	bl	1497c <fwrite@plt>
   1ad0c:	ldr	r0, [r4, #204]	; 0xcc
   1ad10:	ldrd	r2, [r6, #112]	; 0x70
   1ad14:	ldrh	r1, [r6, #104]	; 0x68
   1ad18:	str	r2, [sp, #8]
   1ad1c:	str	r3, [sp, #12]
   1ad20:	str	r1, [sp, #16]
   1ad24:	str	r5, [sp, #20]
   1ad28:	str	r5, [sp, #24]
   1ad2c:	str	r5, [sp]
   1ad30:	movw	r1, #29838	; 0x748e
   1ad34:	movt	r1, #4
   1ad38:	mov	r2, r4
   1ad3c:	mov	r3, r4
   1ad40:	bl	149f4 <fprintf@plt>
   1ad44:	sub	sp, fp, #28
   1ad48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad4c:	movw	r0, #53217	; 0xcfe1
   1ad50:	movt	r0, #3
   1ad54:	movw	r1, #29336	; 0x7298
   1ad58:	movt	r1, #4
   1ad5c:	movw	r3, #29417	; 0x72e9
   1ad60:	movt	r3, #4
   1ad64:	movw	r2, #1010	; 0x3f2
   1ad68:	bl	14ab4 <__assert_fail@plt>
   1ad6c:	push	{r4, r5, fp, lr}
   1ad70:	add	fp, sp, #8
   1ad74:	ldr	r5, [r0, #20]
   1ad78:	mov	r4, #0
   1ad7c:	cmp	r5, #0
   1ad80:	bne	1ad98 <__flatcc_fb_gen_c_builder@@Base+0x824>
   1ad84:	b	1add4 <__flatcc_fb_gen_c_builder@@Base+0x860>
   1ad88:	add	r4, r4, #1
   1ad8c:	ldr	r5, [r5]
   1ad90:	cmp	r5, #0
   1ad94:	beq	1add4 <__flatcc_fb_gen_c_builder@@Base+0x860>
   1ad98:	ldrb	r0, [r5, #72]	; 0x48
   1ad9c:	tst	r0, #4
   1ada0:	bne	1ad8c <__flatcc_fb_gen_c_builder@@Base+0x818>
   1ada4:	ldrh	r0, [r5, #24]
   1ada8:	cmp	r0, #14
   1adac:	bne	1ad88 <__flatcc_fb_gen_c_builder@@Base+0x814>
   1adb0:	ldr	r0, [r5, #16]
   1adb4:	ldrh	r1, [r0, #8]
   1adb8:	cmp	r1, #1
   1adbc:	bne	1ad88 <__flatcc_fb_gen_c_builder@@Base+0x814>
   1adc0:	bl	1ad6c <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1adc4:	add	r4, r0, r4
   1adc8:	ldr	r5, [r5]
   1adcc:	cmp	r5, #0
   1add0:	bne	1ad98 <__flatcc_fb_gen_c_builder@@Base+0x824>
   1add4:	mov	r0, r4
   1add8:	pop	{r4, r5, fp, pc}
   1addc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ade0:	add	fp, sp, #28
   1ade4:	sub	sp, sp, #236	; 0xec
   1ade8:	mov	r5, r3
   1adec:	mov	r4, r2
   1adf0:	mov	r7, r1
   1adf4:	mov	r6, r0
   1adf8:	add	r0, sp, #8
   1adfc:	mov	r1, #0
   1ae00:	mov	r2, #220	; 0xdc
   1ae04:	bl	14a0c <memset@plt>
   1ae08:	ldr	r9, [r7, #20]
   1ae0c:	cmp	r9, #0
   1ae10:	beq	1af10 <__flatcc_fb_gen_c_builder@@Base+0x99c>
   1ae14:	ldr	r7, [fp, #8]
   1ae18:	b	1ae40 <__flatcc_fb_gen_c_builder@@Base+0x8cc>
   1ae1c:	str	r7, [sp]
   1ae20:	mov	r0, r6
   1ae24:	mov	r2, r4
   1ae28:	mov	r3, r5
   1ae2c:	bl	1addc <__flatcc_fb_gen_c_builder@@Base+0x868>
   1ae30:	mov	r4, r0
   1ae34:	ldr	r9, [r9]
   1ae38:	cmp	r9, #0
   1ae3c:	beq	1af10 <__flatcc_fb_gen_c_builder@@Base+0x99c>
   1ae40:	ldrb	r0, [r9, #72]	; 0x48
   1ae44:	tst	r0, #4
   1ae48:	bne	1ae34 <__flatcc_fb_gen_c_builder@@Base+0x8c0>
   1ae4c:	ldrh	r0, [r9, #24]
   1ae50:	cmp	r0, #8
   1ae54:	beq	1aebc <__flatcc_fb_gen_c_builder@@Base+0x948>
   1ae58:	cmp	r0, #14
   1ae5c:	bne	1af1c <__flatcc_fb_gen_c_builder@@Base+0x9a8>
   1ae60:	ldr	r1, [r9, #16]
   1ae64:	ldrh	r0, [r1, #8]
   1ae68:	cmp	r0, #1
   1ae6c:	beq	1ae1c <__flatcc_fb_gen_c_builder@@Base+0x8a8>
   1ae70:	mov	r0, r6
   1ae74:	mov	r1, r4
   1ae78:	mov	r2, r5
   1ae7c:	mov	r3, r7
   1ae80:	bl	1b3f0 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1ae84:	ldr	r0, [r9, #16]
   1ae88:	mov	r8, r5
   1ae8c:	mov	r5, r7
   1ae90:	add	r7, sp, #8
   1ae94:	mov	r1, r7
   1ae98:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1ae9c:	ldr	r0, [r6, #204]	; 0xcc
   1aea0:	movw	r1, #29909	; 0x74d5
   1aea4:	movt	r1, #4
   1aea8:	mov	r2, r7
   1aeac:	mov	r7, r5
   1aeb0:	mov	r5, r8
   1aeb4:	mov	r3, r4
   1aeb8:	b	1af04 <__flatcc_fb_gen_c_builder@@Base+0x990>
   1aebc:	mov	r0, r6
   1aec0:	mov	r1, r4
   1aec4:	mov	r2, r5
   1aec8:	mov	r3, r7
   1aecc:	bl	1b3f0 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1aed0:	ldr	sl, [r9, #16]
   1aed4:	mov	r0, sl
   1aed8:	mov	r1, r6
   1aedc:	bl	1b478 <__flatcc_fb_gen_c_builder@@Base+0xf04>
   1aee0:	mov	r8, r0
   1aee4:	mov	r0, sl
   1aee8:	bl	1b490 <__flatcc_fb_gen_c_builder@@Base+0xf1c>
   1aeec:	mov	r3, r0
   1aef0:	ldr	r0, [r6, #204]	; 0xcc
   1aef4:	str	r4, [sp]
   1aef8:	movw	r1, #29923	; 0x74e3
   1aefc:	movt	r1, #4
   1af00:	mov	r2, r8
   1af04:	bl	149f4 <fprintf@plt>
   1af08:	add	r4, r4, #1
   1af0c:	b	1ae34 <__flatcc_fb_gen_c_builder@@Base+0x8c0>
   1af10:	mov	r0, r4
   1af14:	sub	sp, fp, #28
   1af18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af1c:	movw	r0, #8368	; 0x20b0
   1af20:	movt	r0, #6
   1af24:	ldr	r0, [r0]
   1af28:	movw	r1, #29932	; 0x74ec
   1af2c:	movt	r1, #4
   1af30:	str	r1, [sp]
   1af34:	movw	r1, #26331	; 0x66db
   1af38:	movt	r1, #3
   1af3c:	movw	r4, #29336	; 0x7298
   1af40:	movt	r4, #4
   1af44:	mov	r2, r4
   1af48:	movw	r3, #850	; 0x352
   1af4c:	bl	149f4 <fprintf@plt>
   1af50:	movw	r0, #30217	; 0x7609
   1af54:	movt	r0, #4
   1af58:	movw	r3, #29978	; 0x751a
   1af5c:	movt	r3, #4
   1af60:	mov	r1, r4
   1af64:	movw	r2, #850	; 0x352
   1af68:	bl	14ab4 <__assert_fail@plt>
   1af6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af70:	add	fp, sp, #28
   1af74:	sub	sp, sp, #4
   1af78:	mov	r5, r3
   1af7c:	mov	r8, r2
   1af80:	mov	r6, r0
   1af84:	mov	r0, r1
   1af88:	bl	1ad6c <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1af8c:	cmp	r0, #1
   1af90:	blt	1afdc <__flatcc_fb_gen_c_builder@@Base+0xa68>
   1af94:	mov	r7, r0
   1af98:	ldr	r9, [fp, #8]
   1af9c:	mov	r4, #0
   1afa0:	movw	sl, #30248	; 0x7628
   1afa4:	movt	sl, #4
   1afa8:	mov	r0, r6
   1afac:	mov	r1, r4
   1afb0:	mov	r2, r5
   1afb4:	mov	r3, r9
   1afb8:	bl	1b3f0 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1afbc:	add	r2, r8, r4
   1afc0:	ldr	r0, [r6, #204]	; 0xcc
   1afc4:	mov	r1, sl
   1afc8:	bl	149f4 <fprintf@plt>
   1afcc:	add	r4, r4, #1
   1afd0:	cmp	r7, r4
   1afd4:	bne	1afa8 <__flatcc_fb_gen_c_builder@@Base+0xa34>
   1afd8:	add	r8, r8, r4
   1afdc:	mov	r0, r8
   1afe0:	sub	sp, fp, #28
   1afe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1afe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afec:	add	fp, sp, #28
   1aff0:	sub	sp, sp, #268	; 0x10c
   1aff4:	mov	r7, r3
   1aff8:	str	r2, [sp, #20]
   1affc:	mov	r5, r1
   1b000:	mov	r4, r0
   1b004:	add	r0, sp, #32
   1b008:	mov	r1, #0
   1b00c:	mov	r2, #220	; 0xdc
   1b010:	bl	14a0c <memset@plt>
   1b014:	movw	r0, #30071	; 0x7577
   1b018:	movt	r0, #4
   1b01c:	movw	r1, #26588	; 0x67dc
   1b020:	movt	r1, #3
   1b024:	cmp	r7, #1
   1b028:	moveq	r1, r0
   1b02c:	movw	r0, #30064	; 0x7570
   1b030:	movt	r0, #4
   1b034:	cmp	r7, #2
   1b038:	movne	r0, r1
   1b03c:	str	r0, [sp, #24]
   1b040:	ldr	r5, [r5, #20]
   1b044:	cmp	r5, #0
   1b048:	beq	1b374 <__flatcc_fb_gen_c_builder@@Base+0xe00>
   1b04c:	sub	sl, fp, #36	; 0x24
   1b050:	sub	r6, fp, #40	; 0x28
   1b054:	mov	r8, #0
   1b058:	mov	r9, #0
   1b05c:	str	r7, [sp, #28]
   1b060:	b	1b088 <__flatcc_fb_gen_c_builder@@Base+0xb14>
   1b064:	stm	sp, {r1, r8}
   1b068:	movw	r1, #30365	; 0x769d
   1b06c:	movt	r1, #4
   1b070:	add	r2, sp, #32
   1b074:	bl	149f4 <fprintf@plt>
   1b078:	add	r8, r8, #1
   1b07c:	ldr	r5, [r5]
   1b080:	cmp	r5, #0
   1b084:	beq	1b374 <__flatcc_fb_gen_c_builder@@Base+0xe00>
   1b088:	mov	r0, r5
   1b08c:	mov	r1, sl
   1b090:	mov	r2, r6
   1b094:	bl	1b508 <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1b098:	cmp	r8, #1
   1b09c:	blt	1b0d0 <__flatcc_fb_gen_c_builder@@Base+0xb5c>
   1b0a0:	ldr	r3, [r4, #204]	; 0xcc
   1b0a4:	tst	r8, #3
   1b0a8:	beq	1b0bc <__flatcc_fb_gen_c_builder@@Base+0xb48>
   1b0ac:	movw	r0, #30085	; 0x7585
   1b0b0:	movt	r0, #4
   1b0b4:	mov	r1, #2
   1b0b8:	b	1b0c8 <__flatcc_fb_gen_c_builder@@Base+0xb54>
   1b0bc:	movw	r0, #30080	; 0x7580
   1b0c0:	movt	r0, #4
   1b0c4:	mov	r1, #4
   1b0c8:	mov	r2, #1
   1b0cc:	bl	1497c <fwrite@plt>
   1b0d0:	ldrh	r0, [r5, #24]
   1b0d4:	cmp	r0, #8
   1b0d8:	beq	1b138 <__flatcc_fb_gen_c_builder@@Base+0xbc4>
   1b0dc:	cmp	r0, #14
   1b0e0:	bne	1b3a0 <__flatcc_fb_gen_c_builder@@Base+0xe2c>
   1b0e4:	ldr	r0, [r5, #16]
   1b0e8:	add	r1, sp, #32
   1b0ec:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1b0f0:	ldrh	r0, [r5, #72]	; 0x48
   1b0f4:	and	r0, r0, #4
   1b0f8:	ldr	r1, [r5, #16]
   1b0fc:	ldrh	r1, [r1, #8]
   1b100:	cmp	r1, #1
   1b104:	bne	1b1a0 <__flatcc_fb_gen_c_builder@@Base+0xc2c>
   1b108:	cmp	r0, #0
   1b10c:	beq	1b1c8 <__flatcc_fb_gen_c_builder@@Base+0xc54>
   1b110:	ldr	r0, [r4, #204]	; 0xcc
   1b114:	movw	r1, #30088	; 0x7588
   1b118:	movt	r1, #4
   1b11c:	mov	r2, r9
   1b120:	mov	r3, r9
   1b124:	bl	149f4 <fprintf@plt>
   1b128:	ldr	r0, [r5, #16]
   1b12c:	bl	1ad6c <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1b130:	add	r8, r0, r8
   1b134:	b	1b1c0 <__flatcc_fb_gen_c_builder@@Base+0xc4c>
   1b138:	ldr	r0, [r5, #16]
   1b13c:	bl	1b510 <__flatcc_fb_gen_c_builder@@Base+0xf9c>
   1b140:	mov	r3, r0
   1b144:	ldrb	r0, [r5, #72]	; 0x48
   1b148:	tst	r0, #4
   1b14c:	bne	1b1a8 <__flatcc_fb_gen_c_builder@@Base+0xc34>
   1b150:	ldrd	r0, [r5, #88]	; 0x58
   1b154:	eor	r0, r0, #1
   1b158:	orrs	r0, r0, r1
   1b15c:	movne	r0, r7
   1b160:	cmp	r0, #2
   1b164:	beq	1b274 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1b168:	cmp	r0, #1
   1b16c:	bne	1b24c <__flatcc_fb_gen_c_builder@@Base+0xcd8>
   1b170:	ldr	r0, [r4, #204]	; 0xcc
   1b174:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b178:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b17c:	ldr	r7, [fp, #8]
   1b180:	cmp	r7, #0
   1b184:	beq	1b32c <__flatcc_fb_gen_c_builder@@Base+0xdb8>
   1b188:	str	r2, [sp]
   1b18c:	stmib	sp, {r1, r2}
   1b190:	str	r1, [sp, #12]
   1b194:	movw	r1, #30252	; 0x762c
   1b198:	movt	r1, #4
   1b19c:	b	1b350 <__flatcc_fb_gen_c_builder@@Base+0xddc>
   1b1a0:	cmp	r0, #0
   1b1a4:	beq	1b200 <__flatcc_fb_gen_c_builder@@Base+0xc8c>
   1b1a8:	ldr	r0, [r4, #204]	; 0xcc
   1b1ac:	movw	r1, #30197	; 0x75f5
   1b1b0:	movt	r1, #4
   1b1b4:	mov	r2, r9
   1b1b8:	bl	149f4 <fprintf@plt>
   1b1bc:	add	r8, r8, #1
   1b1c0:	add	r9, r9, #1
   1b1c4:	b	1b07c <__flatcc_fb_gen_c_builder@@Base+0xb08>
   1b1c8:	ldr	r0, [r4, #204]	; 0xcc
   1b1cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b1d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b1d4:	ldr	r3, [fp, #8]
   1b1d8:	cmp	r3, #0
   1b1dc:	beq	1b2a4 <__flatcc_fb_gen_c_builder@@Base+0xd30>
   1b1e0:	str	r2, [sp]
   1b1e4:	stmib	sp, {r1, r2}
   1b1e8:	str	r1, [sp, #12]
   1b1ec:	movw	r1, #30145	; 0x75c1
   1b1f0:	movt	r1, #4
   1b1f4:	add	r2, sp, #32
   1b1f8:	ldr	r3, [sp, #24]
   1b1fc:	b	1b074 <__flatcc_fb_gen_c_builder@@Base+0xb00>
   1b200:	ldrd	r0, [r5, #88]	; 0x58
   1b204:	eor	r0, r0, #1
   1b208:	orrs	r0, r0, r1
   1b20c:	movne	r0, r7
   1b210:	cmp	r0, #2
   1b214:	beq	1b300 <__flatcc_fb_gen_c_builder@@Base+0xd8c>
   1b218:	cmp	r0, #1
   1b21c:	bne	1b24c <__flatcc_fb_gen_c_builder@@Base+0xcd8>
   1b220:	ldr	r0, [r4, #204]	; 0xcc
   1b224:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b228:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b22c:	ldr	r2, [fp, #8]
   1b230:	cmp	r2, #0
   1b234:	beq	1b364 <__flatcc_fb_gen_c_builder@@Base+0xdf0>
   1b238:	stm	sp, {r1, r3}
   1b23c:	str	r1, [sp, #8]
   1b240:	movw	r1, #30254	; 0x762e
   1b244:	movt	r1, #4
   1b248:	b	1b070 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1b24c:	ldr	r0, [r4, #204]	; 0xcc
   1b250:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b254:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b258:	ldr	r1, [fp, #8]
   1b25c:	cmp	r1, #0
   1b260:	beq	1b2f0 <__flatcc_fb_gen_c_builder@@Base+0xd7c>
   1b264:	stm	sp, {r2, r3}
   1b268:	movw	r1, #30219	; 0x760b
   1b26c:	movt	r1, #4
   1b270:	b	1b074 <__flatcc_fb_gen_c_builder@@Base+0xb00>
   1b274:	ldr	r0, [r4, #204]	; 0xcc
   1b278:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b27c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b280:	ldr	r7, [fp, #8]
   1b284:	cmp	r7, #0
   1b288:	beq	1b340 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1b28c:	str	r2, [sp]
   1b290:	stmib	sp, {r1, r2}
   1b294:	str	r1, [sp, #12]
   1b298:	movw	r1, #30326	; 0x7676
   1b29c:	movt	r1, #4
   1b2a0:	b	1b350 <__flatcc_fb_gen_c_builder@@Base+0xddc>
   1b2a4:	str	r2, [sp]
   1b2a8:	str	r1, [sp, #4]
   1b2ac:	movw	r1, #30176	; 0x75e0
   1b2b0:	movt	r1, #4
   1b2b4:	add	r2, sp, #32
   1b2b8:	ldr	r3, [sp, #24]
   1b2bc:	bl	149f4 <fprintf@plt>
   1b2c0:	ldr	r1, [r5, #16]
   1b2c4:	mov	r0, #0
   1b2c8:	str	r0, [sp]
   1b2cc:	mov	r0, r4
   1b2d0:	mov	r2, r8
   1b2d4:	ldr	r3, [sp, #20]
   1b2d8:	bl	1af6c <__flatcc_fb_gen_c_builder@@Base+0x9f8>
   1b2dc:	mov	r8, r0
   1b2e0:	ldr	r1, [r4, #204]	; 0xcc
   1b2e4:	mov	r0, #41	; 0x29
   1b2e8:	bl	14a54 <fputc@plt>
   1b2ec:	b	1b07c <__flatcc_fb_gen_c_builder@@Base+0xb08>
   1b2f0:	str	r8, [sp]
   1b2f4:	movw	r1, #30238	; 0x761e
   1b2f8:	movt	r1, #4
   1b2fc:	b	1b074 <__flatcc_fb_gen_c_builder@@Base+0xb00>
   1b300:	ldr	r0, [r4, #204]	; 0xcc
   1b304:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b308:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b30c:	ldr	r2, [fp, #8]
   1b310:	cmp	r2, #0
   1b314:	beq	1b064 <__flatcc_fb_gen_c_builder@@Base+0xaf0>
   1b318:	stm	sp, {r1, r3}
   1b31c:	str	r1, [sp, #8]
   1b320:	movw	r1, #30328	; 0x7678
   1b324:	movt	r1, #4
   1b328:	b	1b070 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1b32c:	str	r2, [sp]
   1b330:	stmib	sp, {r1, r8}
   1b334:	movw	r1, #30291	; 0x7653
   1b338:	movt	r1, #4
   1b33c:	b	1b350 <__flatcc_fb_gen_c_builder@@Base+0xddc>
   1b340:	str	r2, [sp]
   1b344:	stmib	sp, {r1, r8}
   1b348:	movw	r1, #30363	; 0x769b
   1b34c:	movt	r1, #4
   1b350:	mov	r2, r4
   1b354:	bl	149f4 <fprintf@plt>
   1b358:	add	r8, r8, #1
   1b35c:	ldr	r7, [sp, #28]
   1b360:	b	1b07c <__flatcc_fb_gen_c_builder@@Base+0xb08>
   1b364:	stm	sp, {r1, r8}
   1b368:	movw	r1, #30293	; 0x7655
   1b36c:	movt	r1, #4
   1b370:	b	1b070 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1b374:	ldr	r0, [sp, #20]
   1b378:	cmp	r0, #1
   1b37c:	blt	1b398 <__flatcc_fb_gen_c_builder@@Base+0xe24>
   1b380:	ldr	r3, [r4, #204]	; 0xcc
   1b384:	movw	r0, #30080	; 0x7580
   1b388:	movt	r0, #4
   1b38c:	mov	r1, #4
   1b390:	mov	r2, #1
   1b394:	bl	1497c <fwrite@plt>
   1b398:	sub	sp, fp, #28
   1b39c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b3a0:	movw	r0, #8368	; 0x20b0
   1b3a4:	movt	r0, #6
   1b3a8:	ldr	r0, [r0]
   1b3ac:	movw	r1, #30396	; 0x76bc
   1b3b0:	movt	r1, #4
   1b3b4:	str	r1, [sp]
   1b3b8:	movw	r1, #26331	; 0x66db
   1b3bc:	movt	r1, #3
   1b3c0:	movw	r4, #29336	; 0x7298
   1b3c4:	movt	r4, #4
   1b3c8:	mov	r2, r4
   1b3cc:	movw	r3, #993	; 0x3e1
   1b3d0:	bl	149f4 <fprintf@plt>
   1b3d4:	movw	r0, #30217	; 0x7609
   1b3d8:	movt	r0, #4
   1b3dc:	movw	r3, #30423	; 0x76d7
   1b3e0:	movt	r3, #4
   1b3e4:	mov	r1, r4
   1b3e8:	movw	r2, #993	; 0x3e1
   1b3ec:	bl	14ab4 <__assert_fail@plt>
   1b3f0:	push	{fp, lr}
   1b3f4:	mov	fp, sp
   1b3f8:	mov	lr, r2
   1b3fc:	movw	ip, #26587	; 0x67db
   1b400:	movt	ip, #3
   1b404:	movw	r2, #32501	; 0x7ef5
   1b408:	movt	r2, #3
   1b40c:	cmp	r3, #0
   1b410:	moveq	r2, ip
   1b414:	cmp	lr, #0
   1b418:	popeq	{fp, pc}
   1b41c:	cmp	r1, #0
   1b420:	beq	1b450 <__flatcc_fb_gen_c_builder@@Base+0xedc>
   1b424:	ldr	ip, [r0, #204]	; 0xcc
   1b428:	tst	r1, #3
   1b42c:	bne	1b45c <__flatcc_fb_gen_c_builder@@Base+0xee8>
   1b430:	sub	r0, lr, r1
   1b434:	cmp	r0, #2
   1b438:	ble	1b45c <__flatcc_fb_gen_c_builder@@Base+0xee8>
   1b43c:	movw	r1, #30058	; 0x756a
   1b440:	movt	r1, #4
   1b444:	mov	r0, ip
   1b448:	pop	{fp, lr}
   1b44c:	b	149f4 <fprintf@plt>
   1b450:	ldr	ip, [r0, #204]	; 0xcc
   1b454:	cmp	lr, #5
   1b458:	bge	1b43c <__flatcc_fb_gen_c_builder@@Base+0xec8>
   1b45c:	movw	r0, #52673	; 0xcdc1
   1b460:	movt	r0, #4
   1b464:	mov	r1, #2
   1b468:	mov	r2, #1
   1b46c:	mov	r3, ip
   1b470:	pop	{fp, lr}
   1b474:	b	1497c <fwrite@plt>
   1b478:	movw	r2, #26588	; 0x67dc
   1b47c:	movt	r2, #3
   1b480:	cmp	r0, #5
   1b484:	moveq	r2, r1
   1b488:	mov	r0, r2
   1b48c:	bx	lr
   1b490:	push	{r4, sl, fp, lr}
   1b494:	add	fp, sp, #8
   1b498:	sub	sp, sp, #8
   1b49c:	sub	r0, r0, #1
   1b4a0:	cmp	r0, #11
   1b4a4:	movwcc	r1, #33352	; 0x8248
   1b4a8:	movtcc	r1, #4
   1b4ac:	ldrcc	r0, [r1, r0, lsl #2]
   1b4b0:	subcc	sp, fp, #8
   1b4b4:	popcc	{r4, sl, fp, pc}
   1b4b8:	movw	r0, #8368	; 0x20b0
   1b4bc:	movt	r0, #6
   1b4c0:	ldr	r0, [r0]
   1b4c4:	movw	r1, #52924	; 0xcebc
   1b4c8:	movt	r1, #3
   1b4cc:	str	r1, [sp]
   1b4d0:	movw	r1, #26331	; 0x66db
   1b4d4:	movt	r1, #3
   1b4d8:	movw	r4, #52851	; 0xce73
   1b4dc:	movt	r4, #3
   1b4e0:	mov	r2, r4
   1b4e4:	mov	r3, #141	; 0x8d
   1b4e8:	bl	149f4 <fprintf@plt>
   1b4ec:	movw	r0, #30217	; 0x7609
   1b4f0:	movt	r0, #4
   1b4f4:	movw	r3, #52979	; 0xcef3
   1b4f8:	movt	r3, #3
   1b4fc:	mov	r1, r4
   1b500:	mov	r2, #141	; 0x8d
   1b504:	bl	14ab4 <__assert_fail@plt>
   1b508:	ldr	r0, [r0, #4]
   1b50c:	b	1b588 <__flatcc_fb_gen_c_builder@@Base+0x1014>
   1b510:	push	{r4, sl, fp, lr}
   1b514:	add	fp, sp, #8
   1b518:	sub	sp, sp, #8
   1b51c:	sub	r0, r0, #1
   1b520:	cmp	r0, #11
   1b524:	movwcc	r1, #33396	; 0x8274
   1b528:	movtcc	r1, #4
   1b52c:	ldrcc	r0, [r1, r0, lsl #2]
   1b530:	subcc	sp, fp, #8
   1b534:	popcc	{r4, sl, fp, pc}
   1b538:	movw	r0, #8368	; 0x20b0
   1b53c:	movt	r0, #6
   1b540:	ldr	r0, [r0]
   1b544:	movw	r1, #52924	; 0xcebc
   1b548:	movt	r1, #3
   1b54c:	str	r1, [sp]
   1b550:	movw	r1, #26331	; 0x66db
   1b554:	movt	r1, #3
   1b558:	movw	r4, #52851	; 0xce73
   1b55c:	movt	r4, #3
   1b560:	mov	r2, r4
   1b564:	mov	r3, #96	; 0x60
   1b568:	bl	149f4 <fprintf@plt>
   1b56c:	movw	r0, #30217	; 0x7609
   1b570:	movt	r0, #4
   1b574:	movw	r3, #55276	; 0xd7ec
   1b578:	movt	r3, #3
   1b57c:	mov	r1, r4
   1b580:	mov	r2, #96	; 0x60
   1b584:	bl	14ab4 <__assert_fail@plt>
   1b588:	ldr	r3, [r0, #4]
   1b58c:	str	r3, [r1]
   1b590:	ldr	r0, [r0]
   1b594:	str	r0, [r2]
   1b598:	bx	lr
   1b59c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b5a0:	add	fp, sp, #24
   1b5a4:	sub	sp, sp, #232	; 0xe8
   1b5a8:	mov	r4, r0
   1b5ac:	add	r5, sp, #8
   1b5b0:	mov	r7, #0
   1b5b4:	mov	r0, r5
   1b5b8:	mov	r1, #0
   1b5bc:	mov	r2, #220	; 0xdc
   1b5c0:	bl	14a0c <memset@plt>
   1b5c4:	ldr	r0, [r4, #208]	; 0xd0
   1b5c8:	ldr	r6, [r0, #40]	; 0x28
   1b5cc:	cmp	r6, #0
   1b5d0:	beq	1b638 <__flatcc_fb_gen_c_builder@@Base+0x10c4>
   1b5d4:	movw	r8, #30516	; 0x7734
   1b5d8:	movt	r8, #4
   1b5dc:	b	1b5ec <__flatcc_fb_gen_c_builder@@Base+0x1078>
   1b5e0:	ldr	r6, [r6]
   1b5e4:	cmp	r6, #0
   1b5e8:	beq	1b624 <__flatcc_fb_gen_c_builder@@Base+0x10b0>
   1b5ec:	ldrh	r0, [r6, #8]
   1b5f0:	cmp	r0, #4
   1b5f4:	bne	1b5e0 <__flatcc_fb_gen_c_builder@@Base+0x106c>
   1b5f8:	mov	r0, r6
   1b5fc:	mov	r1, r5
   1b600:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1b604:	ldr	r0, [r4, #204]	; 0xcc
   1b608:	stm	sp, {r4, r5}
   1b60c:	mov	r1, r8
   1b610:	mov	r2, r4
   1b614:	mov	r3, r5
   1b618:	bl	149f4 <fprintf@plt>
   1b61c:	mov	r7, #1
   1b620:	b	1b5e0 <__flatcc_fb_gen_c_builder@@Base+0x106c>
   1b624:	cmp	r7, #0
   1b628:	beq	1b638 <__flatcc_fb_gen_c_builder@@Base+0x10c4>
   1b62c:	ldr	r1, [r4, #204]	; 0xcc
   1b630:	mov	r0, #10
   1b634:	bl	14a54 <fputc@plt>
   1b638:	sub	sp, fp, #24
   1b63c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b640:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b644:	add	fp, sp, #24
   1b648:	sub	sp, sp, #224	; 0xe0
   1b64c:	mov	r7, r1
   1b650:	mov	r4, r0
   1b654:	mov	r8, sp
   1b658:	mov	r5, #0
   1b65c:	mov	r0, r8
   1b660:	mov	r1, #0
   1b664:	mov	r2, #220	; 0xdc
   1b668:	bl	14a0c <memset@plt>
   1b66c:	mov	r0, r7
   1b670:	bl	1c288 <__flatcc_fb_gen_c_builder@@Base+0x1d14>
   1b674:	mov	r6, r0
   1b678:	mov	r0, r7
   1b67c:	mov	r1, r8
   1b680:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1b684:	ldr	r0, [r4, #204]	; 0xcc
   1b688:	movw	r1, #30601	; 0x7789
   1b68c:	movt	r1, #4
   1b690:	mov	r2, r4
   1b694:	mov	r3, r8
   1b698:	bl	149f4 <fprintf@plt>
   1b69c:	ldr	r7, [r7, #20]
   1b6a0:	cmp	r7, #0
   1b6a4:	beq	1b72c <__flatcc_fb_gen_c_builder@@Base+0x11b8>
   1b6a8:	movw	r8, #30646	; 0x77b6
   1b6ac:	movt	r8, #4
   1b6b0:	b	1b6e0 <__flatcc_fb_gen_c_builder@@Base+0x116c>
   1b6b4:	ldr	r1, [r4, #204]	; 0xcc
   1b6b8:	mov	r0, #32
   1b6bc:	bl	14a54 <fputc@plt>
   1b6c0:	ldr	r2, [r7, #96]	; 0x60
   1b6c4:	ldr	r0, [r4, #204]	; 0xcc
   1b6c8:	mov	r1, r8
   1b6cc:	bl	149f4 <fprintf@plt>
   1b6d0:	add	r5, r5, #1
   1b6d4:	ldr	r7, [r7]
   1b6d8:	cmp	r7, #0
   1b6dc:	beq	1b710 <__flatcc_fb_gen_c_builder@@Base+0x119c>
   1b6e0:	ldrh	r0, [r7, #72]	; 0x48
   1b6e4:	and	r0, r0, #260	; 0x104
   1b6e8:	cmp	r0, #256	; 0x100
   1b6ec:	bne	1b6d4 <__flatcc_fb_gen_c_builder@@Base+0x1160>
   1b6f0:	cmp	r5, #1
   1b6f4:	blt	1b6b4 <__flatcc_fb_gen_c_builder@@Base+0x1140>
   1b6f8:	mov	r0, r4
   1b6fc:	mov	r1, r5
   1b700:	mov	r2, r6
   1b704:	mov	r3, #0
   1b708:	bl	1b3f0 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1b70c:	b	1b6c0 <__flatcc_fb_gen_c_builder@@Base+0x114c>
   1b710:	ldr	r3, [r4, #204]	; 0xcc
   1b714:	cmp	r5, #1
   1b718:	blt	1b730 <__flatcc_fb_gen_c_builder@@Base+0x11bc>
   1b71c:	movw	r0, #30649	; 0x77b9
   1b720:	movt	r0, #4
   1b724:	mov	r1, #7
   1b728:	b	1b73c <__flatcc_fb_gen_c_builder@@Base+0x11c8>
   1b72c:	ldr	r3, [r4, #204]	; 0xcc
   1b730:	movw	r0, #30650	; 0x77ba
   1b734:	movt	r0, #4
   1b738:	mov	r1, #6
   1b73c:	mov	r2, #1
   1b740:	bl	1497c <fwrite@plt>
   1b744:	sub	sp, fp, #24
   1b748:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b74c:	push	{r4, r5, r6, sl, fp, lr}
   1b750:	add	fp, sp, #16
   1b754:	sub	sp, sp, #240	; 0xf0
   1b758:	mov	r4, r1
   1b75c:	mov	r5, r0
   1b760:	add	r6, sp, #16
   1b764:	mov	r0, r6
   1b768:	mov	r1, #0
   1b76c:	mov	r2, #220	; 0xdc
   1b770:	bl	14a0c <memset@plt>
   1b774:	mov	r0, r4
   1b778:	mov	r1, r6
   1b77c:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1b780:	ldr	r0, [r5, #204]	; 0xcc
   1b784:	ldrd	r2, [r4, #96]	; 0x60
   1b788:	str	r2, [sp, #8]
   1b78c:	str	r3, [sp, #12]
   1b790:	str	r6, [sp]
   1b794:	movw	r1, #30657	; 0x77c1
   1b798:	movt	r1, #4
   1b79c:	mov	r2, r5
   1b7a0:	mov	r3, r5
   1b7a4:	bl	149f4 <fprintf@plt>
   1b7a8:	sub	sp, fp, #16
   1b7ac:	pop	{r4, r5, r6, sl, fp, pc}
   1b7b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b7b4:	add	fp, sp, #24
   1b7b8:	sub	sp, sp, #232	; 0xe8
   1b7bc:	mov	r6, r1
   1b7c0:	mov	r5, r0
   1b7c4:	add	r4, sp, #8
   1b7c8:	mov	r0, r4
   1b7cc:	mov	r1, #0
   1b7d0:	mov	r2, #220	; 0xdc
   1b7d4:	bl	14a0c <memset@plt>
   1b7d8:	mov	r0, r6
   1b7dc:	mov	r1, r4
   1b7e0:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1b7e4:	mov	r0, r6
   1b7e8:	bl	1c288 <__flatcc_fb_gen_c_builder@@Base+0x1d14>
   1b7ec:	mov	r7, r0
   1b7f0:	ldr	r0, [r5, #204]	; 0xcc
   1b7f4:	movw	r1, #29478	; 0x7326
   1b7f8:	movt	r1, #4
   1b7fc:	mov	r2, r4
   1b800:	bl	149f4 <fprintf@plt>
   1b804:	mov	r0, r5
   1b808:	mov	r1, r6
   1b80c:	mov	r2, r7
   1b810:	bl	1c2b8 <__flatcc_fb_gen_c_builder@@Base+0x1d44>
   1b814:	ldr	r0, [r5, #204]	; 0xcc
   1b818:	movw	r1, #29504	; 0x7340
   1b81c:	movt	r1, #4
   1b820:	mov	r2, r4
   1b824:	bl	149f4 <fprintf@plt>
   1b828:	mov	r0, r5
   1b82c:	mov	r1, r6
   1b830:	mov	r2, r7
   1b834:	bl	1c600 <__flatcc_fb_gen_c_builder@@Base+0x208c>
   1b838:	ldr	r1, [r5, #204]	; 0xcc
   1b83c:	mov	r0, #10
   1b840:	bl	14a54 <fputc@plt>
   1b844:	ldr	r0, [r5, #204]	; 0xcc
   1b848:	str	r5, [sp]
   1b84c:	str	r4, [sp, #4]
   1b850:	movw	r1, #30688	; 0x77e0
   1b854:	movt	r1, #4
   1b858:	mov	r2, r4
   1b85c:	mov	r3, r4
   1b860:	bl	149f4 <fprintf@plt>
   1b864:	sub	sp, fp, #24
   1b868:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b86c:	push	{r4, r5, fp, lr}
   1b870:	add	fp, sp, #8
   1b874:	mov	r4, r0
   1b878:	ldr	r0, [r0, #208]	; 0xd0
   1b87c:	ldr	r5, [r0, #40]	; 0x28
   1b880:	cmp	r5, #0
   1b884:	popeq	{r4, r5, fp, pc}
   1b888:	mov	r0, #0
   1b88c:	b	1b89c <__flatcc_fb_gen_c_builder@@Base+0x1328>
   1b890:	ldr	r5, [r5]
   1b894:	cmp	r5, #0
   1b898:	beq	1b8bc <__flatcc_fb_gen_c_builder@@Base+0x1348>
   1b89c:	ldrh	r1, [r5, #8]
   1b8a0:	cmp	r1, #4
   1b8a4:	bne	1b890 <__flatcc_fb_gen_c_builder@@Base+0x131c>
   1b8a8:	mov	r0, r4
   1b8ac:	mov	r1, r5
   1b8b0:	bl	1c674 <__flatcc_fb_gen_c_builder@@Base+0x2100>
   1b8b4:	mov	r0, #1
   1b8b8:	b	1b890 <__flatcc_fb_gen_c_builder@@Base+0x131c>
   1b8bc:	cmp	r0, #0
   1b8c0:	beq	1b8d4 <__flatcc_fb_gen_c_builder@@Base+0x1360>
   1b8c4:	ldr	r1, [r4, #204]	; 0xcc
   1b8c8:	mov	r0, #10
   1b8cc:	pop	{r4, r5, fp, lr}
   1b8d0:	b	14a54 <fputc@plt>
   1b8d4:	pop	{r4, r5, fp, pc}
   1b8d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b8dc:	add	fp, sp, #28
   1b8e0:	sub	sp, sp, #620	; 0x26c
   1b8e4:	mov	r6, r1
   1b8e8:	mov	r4, r0
   1b8ec:	sub	sl, fp, #264	; 0x108
   1b8f0:	mov	r0, sl
   1b8f4:	mov	r1, #0
   1b8f8:	mov	r2, #220	; 0xdc
   1b8fc:	bl	14a0c <memset@plt>
   1b900:	add	r0, sp, #160	; 0xa0
   1b904:	mov	r1, #0
   1b908:	mov	r2, #220	; 0xdc
   1b90c:	bl	14a0c <memset@plt>
   1b910:	mov	r0, r6
   1b914:	mov	r1, sl
   1b918:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1b91c:	ldr	r7, [r6, #20]
   1b920:	cmp	r7, #0
   1b924:	beq	1beb8 <__flatcc_fb_gen_c_builder@@Base+0x1944>
   1b928:	sub	r6, fp, #40	; 0x28
   1b92c:	b	1b96c <__flatcc_fb_gen_c_builder@@Base+0x13f8>
   1b930:	ldr	r0, [r4, #204]	; 0xcc
   1b934:	ldrd	r2, [r9]
   1b938:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b93c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b940:	stm	sp, {r2, r3, r4, sl}
   1b944:	str	r1, [sp, #16]
   1b948:	str	r6, [sp, #20]
   1b94c:	sub	r6, fp, #40	; 0x28
   1b950:	movw	r1, #32050	; 0x7d32
   1b954:	movt	r1, #4
   1b958:	mov	r2, r4
   1b95c:	bl	149f4 <fprintf@plt>
   1b960:	ldr	r7, [r7]
   1b964:	cmp	r7, #0
   1b968:	beq	1beb8 <__flatcc_fb_gen_c_builder@@Base+0x1944>
   1b96c:	mov	r0, r7
   1b970:	mov	r1, r6
   1b974:	sub	r2, fp, #36	; 0x24
   1b978:	bl	1b508 <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1b97c:	ldrb	r0, [r7, #72]	; 0x48
   1b980:	tst	r0, #4
   1b984:	bne	1ba8c <__flatcc_fb_gen_c_builder@@Base+0x1518>
   1b988:	ldrh	r0, [r7, #24]
   1b98c:	sub	r0, r0, #7
   1b990:	cmp	r0, #8
   1b994:	bhi	1becc <__flatcc_fb_gen_c_builder@@Base+0x1958>
   1b998:	add	r5, r7, #88	; 0x58
   1b99c:	add	r9, r7, #96	; 0x60
   1b9a0:	add	r1, pc, #0
   1b9a4:	ldr	pc, [r1, r0, lsl #2]
   1b9a8:	andeq	fp, r1, ip, asr #19
   1b9ac:			; <UNDEFINED> instruction: 0x0001bab0
   1b9b0:	andeq	fp, r1, r0, asr fp
   1b9b4:	andeq	fp, r1, r0, lsr r9
   1b9b8:	andeq	fp, r1, ip, asr #29
   1b9bc:	andeq	fp, r1, ip, asr #29
   1b9c0:	andeq	fp, r1, ip, asr #29
   1b9c4:	andeq	fp, r1, r8, lsl #24
   1b9c8:	andeq	fp, r1, ip, ror fp
   1b9cc:	ldr	r5, [r7, #16]
   1b9d0:	mov	r0, r5
   1b9d4:	mov	r1, r4
   1b9d8:	bl	1b478 <__flatcc_fb_gen_c_builder@@Base+0xf04>
   1b9dc:	mov	r6, r0
   1b9e0:	mov	r0, r5
   1b9e4:	bl	1b490 <__flatcc_fb_gen_c_builder@@Base+0xf1c>
   1b9e8:	mov	r5, r0
   1b9ec:	ldr	r0, [r7, #16]
   1b9f0:	bl	1b510 <__flatcc_fb_gen_c_builder@@Base+0xf9c>
   1b9f4:	ldrd	r2, [r9]
   1b9f8:	ldr	r1, [r4, #204]	; 0xcc
   1b9fc:	ldr	r9, [fp, #-40]	; 0xffffffd8
   1ba00:	ldr	r8, [fp, #-36]	; 0xffffffdc
   1ba04:	str	r6, [sp, #32]
   1ba08:	sub	r6, fp, #40	; 0x28
   1ba0c:	str	r5, [sp, #36]	; 0x24
   1ba10:	stm	sp, {r2, r3, r4, sl}
   1ba14:	str	r9, [sp, #16]
   1ba18:	str	r8, [sp, #20]
   1ba1c:	str	r4, [sp, #24]
   1ba20:	str	r0, [sp, #28]
   1ba24:	mov	r0, r1
   1ba28:	movw	r1, #31723	; 0x7beb
   1ba2c:	movt	r1, #4
   1ba30:	mov	r2, r4
   1ba34:	bl	149f4 <fprintf@plt>
   1ba38:	ldr	r0, [r7, #104]	; 0x68
   1ba3c:	cmp	r0, #0
   1ba40:	beq	1b960 <__flatcc_fb_gen_c_builder@@Base+0x13ec>
   1ba44:	ldrh	r1, [r0, #8]
   1ba48:	cmp	r1, #1
   1ba4c:	beq	1bc70 <__flatcc_fb_gen_c_builder@@Base+0x16fc>
   1ba50:	cmp	r1, #0
   1ba54:	bne	1bfbc <__flatcc_fb_gen_c_builder@@Base+0x1a48>
   1ba58:	add	r5, sp, #160	; 0xa0
   1ba5c:	mov	r1, r5
   1ba60:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1ba64:	ldr	r0, [r4, #204]	; 0xcc
   1ba68:	str	sl, [sp]
   1ba6c:	str	r9, [sp, #4]
   1ba70:	str	r8, [sp, #8]
   1ba74:	str	r5, [sp, #12]
   1ba78:	str	r5, [sp, #16]
   1ba7c:	str	r5, [sp, #20]
   1ba80:	movw	r1, #31778	; 0x7c22
   1ba84:	movt	r1, #4
   1ba88:	b	1bcac <__flatcc_fb_gen_c_builder@@Base+0x1738>
   1ba8c:	ldr	r0, [r4, #204]	; 0xcc
   1ba90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ba94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ba98:	str	r1, [sp]
   1ba9c:	movw	r1, #31600	; 0x7b70
   1baa0:	movt	r1, #4
   1baa4:	mov	r2, sl
   1baa8:	bl	149f4 <fprintf@plt>
   1baac:	b	1b960 <__flatcc_fb_gen_c_builder@@Base+0x13ec>
   1bab0:	ldr	sl, [r7, #16]
   1bab4:	mov	r0, sl
   1bab8:	mov	r1, r4
   1babc:	bl	1b478 <__flatcc_fb_gen_c_builder@@Base+0xf04>
   1bac0:	mov	r8, r0
   1bac4:	mov	r0, sl
   1bac8:	bl	1b490 <__flatcc_fb_gen_c_builder@@Base+0xf1c>
   1bacc:	mov	sl, r0
   1bad0:	ldr	r0, [r7, #16]
   1bad4:	bl	1b510 <__flatcc_fb_gen_c_builder@@Base+0xf9c>
   1bad8:	str	r0, [sp, #56]	; 0x38
   1badc:	ldr	r0, [r7, #16]
   1bae0:	add	r1, r7, #48	; 0x30
   1bae4:	add	r2, sp, #60	; 0x3c
   1bae8:	bl	1c814 <__flatcc_fb_gen_c_builder@@Base+0x22a0>
   1baec:	ldm	r9, {r2, r9}
   1baf0:	ldm	r5, {r1, r5}
   1baf4:	ldrh	r6, [r7, #74]	; 0x4a
   1baf8:	ldr	r0, [r4, #204]	; 0xcc
   1bafc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bb00:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1bb04:	str	r8, [sp, #32]
   1bb08:	str	sl, [sp, #36]	; 0x24
   1bb0c:	sub	sl, fp, #264	; 0x108
   1bb10:	add	lr, sp, #40	; 0x28
   1bb14:	stm	lr, {r1, r5, r6}
   1bb18:	sub	r6, fp, #40	; 0x28
   1bb1c:	add	r1, sp, #60	; 0x3c
   1bb20:	str	r1, [sp, #52]	; 0x34
   1bb24:	stm	sp, {r2, r9}
   1bb28:	str	r4, [sp, #8]
   1bb2c:	str	sl, [sp, #12]
   1bb30:	str	r3, [sp, #16]
   1bb34:	str	ip, [sp, #20]
   1bb38:	str	r4, [sp, #24]
   1bb3c:	ldr	r1, [sp, #56]	; 0x38
   1bb40:	str	r1, [sp, #28]
   1bb44:	movw	r1, #31654	; 0x7ba6
   1bb48:	movt	r1, #4
   1bb4c:	b	1b958 <__flatcc_fb_gen_c_builder@@Base+0x13e4>
   1bb50:	ldr	r0, [r4, #204]	; 0xcc
   1bb54:	ldrd	r2, [r9]
   1bb58:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bb5c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bb60:	stm	sp, {r2, r3, r4, sl}
   1bb64:	str	r1, [sp, #16]
   1bb68:	str	r6, [sp, #20]
   1bb6c:	sub	r6, fp, #40	; 0x28
   1bb70:	movw	r1, #32093	; 0x7d5d
   1bb74:	movt	r1, #4
   1bb78:	b	1b958 <__flatcc_fb_gen_c_builder@@Base+0x13e4>
   1bb7c:	ldr	r0, [r7, #16]
   1bb80:	add	r1, sp, #160	; 0xa0
   1bb84:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1bb88:	ldr	r0, [r7, #16]
   1bb8c:	ldrh	r1, [r0, #8]
   1bb90:	cmp	r1, #4
   1bb94:	bhi	1bf1c <__flatcc_fb_gen_c_builder@@Base+0x19a8>
   1bb98:	add	r2, pc, #0
   1bb9c:	ldr	pc, [r2, r1, lsl #2]
   1bba0:			; <UNDEFINED> instruction: 0x0001bbb4
   1bba4:	andeq	fp, r1, r4, ror sp
   1bba8:	andeq	fp, r1, ip, lsl pc
   1bbac:	andeq	fp, r1, ip, lsl #28
   1bbb0:			; <UNDEFINED> instruction: 0x0001bcb8
   1bbb4:	ldrb	r0, [r0, #10]
   1bbb8:	tst	r0, #8
   1bbbc:	beq	1bbd8 <__flatcc_fb_gen_c_builder@@Base+0x1664>
   1bbc0:	ldr	r3, [r4, #204]	; 0xcc
   1bbc4:	movw	r0, #32364	; 0x7e6c
   1bbc8:	movt	r0, #4
   1bbcc:	mov	r1, #32
   1bbd0:	mov	r2, #1
   1bbd4:	bl	1497c <fwrite@plt>
   1bbd8:	ldr	r0, [r4, #204]	; 0xcc
   1bbdc:	ldrd	r2, [r9]
   1bbe0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bbe4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bbe8:	stm	sp, {r2, r3, r4, sl}
   1bbec:	str	r1, [sp, #16]
   1bbf0:	str	r6, [sp, #20]
   1bbf4:	add	r1, sp, #160	; 0xa0
   1bbf8:	str	r1, [sp, #24]
   1bbfc:	movw	r1, #32450	; 0x7ec2
   1bc00:	movt	r1, #4
   1bc04:	b	1bea8 <__flatcc_fb_gen_c_builder@@Base+0x1934>
   1bc08:	ldr	r0, [r7, #16]
   1bc0c:	add	r1, sp, #160	; 0xa0
   1bc10:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1bc14:	ldr	r0, [r7, #16]
   1bc18:	ldrh	r1, [r0, #8]
   1bc1c:	cmp	r1, #4
   1bc20:	bhi	1bf6c <__flatcc_fb_gen_c_builder@@Base+0x19f8>
   1bc24:	add	r2, pc, #0
   1bc28:	ldr	pc, [r2, r1, lsl #2]
   1bc2c:	andeq	fp, r1, r0, asr #24
   1bc30:	andeq	fp, r1, ip, asr #27
   1bc34:	andeq	fp, r1, ip, ror #30
   1bc38:	andeq	fp, r1, r4, asr #28
   1bc3c:	andeq	fp, r1, r8, lsl sp
   1bc40:	ldr	r0, [r4, #204]	; 0xcc
   1bc44:	ldrd	r2, [r9]
   1bc48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bc4c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bc50:	stm	sp, {r2, r3, r4, sl}
   1bc54:	str	r1, [sp, #16]
   1bc58:	str	r6, [sp, #20]
   1bc5c:	add	r1, sp, #160	; 0xa0
   1bc60:	str	r1, [sp, #24]
   1bc64:	movw	r1, #32200	; 0x7dc8
   1bc68:	movt	r1, #4
   1bc6c:	b	1bea8 <__flatcc_fb_gen_c_builder@@Base+0x1934>
   1bc70:	add	r5, sp, #160	; 0xa0
   1bc74:	mov	r1, r5
   1bc78:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1bc7c:	ldr	r0, [r4, #204]	; 0xcc
   1bc80:	ldr	r1, [r7, #104]	; 0x68
   1bc84:	ldrh	r1, [r1, #104]	; 0x68
   1bc88:	str	sl, [sp]
   1bc8c:	str	r9, [sp, #4]
   1bc90:	str	r8, [sp, #8]
   1bc94:	str	r5, [sp, #12]
   1bc98:	str	r1, [sp, #16]
   1bc9c:	str	r5, [sp, #20]
   1bca0:	str	r5, [sp, #24]
   1bca4:	movw	r1, #31859	; 0x7c73
   1bca8:	movt	r1, #4
   1bcac:	mov	r2, r4
   1bcb0:	mov	r3, r4
   1bcb4:	b	1baa8 <__flatcc_fb_gen_c_builder@@Base+0x1534>
   1bcb8:	ldr	r0, [r4, #204]	; 0xcc
   1bcbc:	ldrd	r2, [r9]
   1bcc0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1bcc4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bcc8:	stm	sp, {r2, r3, r4, sl}
   1bccc:	str	r5, [sp, #16]
   1bcd0:	str	r6, [sp, #20]
   1bcd4:	add	r1, sp, #160	; 0xa0
   1bcd8:	str	r1, [sp, #24]
   1bcdc:	movw	r1, #32561	; 0x7f31
   1bce0:	movt	r1, #4
   1bce4:	mov	r2, r4
   1bce8:	bl	149f4 <fprintf@plt>
   1bcec:	ldr	r0, [r7, #16]
   1bcf0:	str	r0, [sp]
   1bcf4:	mov	r0, #1
   1bcf8:	str	r0, [sp, #4]
   1bcfc:	mov	r0, r4
   1bd00:	mov	r1, sl
   1bd04:	mov	r2, r5
   1bd08:	mov	r3, r6
   1bd0c:	sub	r6, fp, #40	; 0x28
   1bd10:	bl	1c93c <__flatcc_fb_gen_c_builder@@Base+0x23c8>
   1bd14:	b	1b960 <__flatcc_fb_gen_c_builder@@Base+0x13ec>
   1bd18:	ldr	r0, [r4, #204]	; 0xcc
   1bd1c:	ldrd	r2, [r9]
   1bd20:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1bd24:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bd28:	stm	sp, {r2, r3, r4, sl}
   1bd2c:	str	r5, [sp, #16]
   1bd30:	str	r6, [sp, #20]
   1bd34:	add	r1, sp, #160	; 0xa0
   1bd38:	str	r1, [sp, #24]
   1bd3c:	movw	r1, #32318	; 0x7e3e
   1bd40:	movt	r1, #4
   1bd44:	mov	r2, r4
   1bd48:	bl	149f4 <fprintf@plt>
   1bd4c:	ldr	r0, [r7, #16]
   1bd50:	str	r0, [sp]
   1bd54:	mov	r0, #0
   1bd58:	str	r0, [sp, #4]
   1bd5c:	mov	r0, r4
   1bd60:	mov	r1, sl
   1bd64:	mov	r2, r5
   1bd68:	mov	r3, r6
   1bd6c:	bl	1c93c <__flatcc_fb_gen_c_builder@@Base+0x23c8>
   1bd70:	b	1beb0 <__flatcc_fb_gen_c_builder@@Base+0x193c>
   1bd74:	ldrb	r0, [r0, #10]
   1bd78:	tst	r0, #8
   1bd7c:	beq	1bd98 <__flatcc_fb_gen_c_builder@@Base+0x1824>
   1bd80:	ldr	r3, [r4, #204]	; 0xcc
   1bd84:	movw	r0, #32364	; 0x7e6c
   1bd88:	movt	r0, #4
   1bd8c:	mov	r1, #32
   1bd90:	mov	r2, #1
   1bd94:	bl	1497c <fwrite@plt>
   1bd98:	ldr	r0, [r4, #204]	; 0xcc
   1bd9c:	ldrd	r2, [r9]
   1bda0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bda4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1bda8:	stm	sp, {r2, r3, r4, sl}
   1bdac:	str	r1, [sp, #16]
   1bdb0:	str	r6, [sp, #20]
   1bdb4:	add	r1, sp, #160	; 0xa0
   1bdb8:	str	r1, [sp, #24]
   1bdbc:	str	r1, [sp, #28]
   1bdc0:	movw	r1, #32397	; 0x7e8d
   1bdc4:	movt	r1, #4
   1bdc8:	b	1bea8 <__flatcc_fb_gen_c_builder@@Base+0x1934>
   1bdcc:	ldr	r0, [r4, #204]	; 0xcc
   1bdd0:	ldrd	r2, [r9]
   1bdd4:	ldr	r6, [r5]
   1bdd8:	ldr	r1, [r5, #4]
   1bddc:	ldrh	r5, [r7, #74]	; 0x4a
   1bde0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1bde4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1bde8:	str	r6, [sp, #32]
   1bdec:	str	r1, [sp, #36]	; 0x24
   1bdf0:	str	r5, [sp, #40]	; 0x28
   1bdf4:	stm	sp, {r2, r3, r4, sl, ip, lr}
   1bdf8:	add	r1, sp, #160	; 0xa0
   1bdfc:	str	r1, [sp, #24]
   1be00:	movw	r1, #32143	; 0x7d8f
   1be04:	movt	r1, #4
   1be08:	b	1bea8 <__flatcc_fb_gen_c_builder@@Base+0x1934>
   1be0c:	ldr	r0, [r4, #204]	; 0xcc
   1be10:	ldrd	r2, [r9]
   1be14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1be18:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1be1c:	stm	sp, {r2, r3, r4, sl}
   1be20:	str	r1, [sp, #16]
   1be24:	str	r6, [sp, #20]
   1be28:	sub	r6, fp, #40	; 0x28
   1be2c:	add	r1, sp, #160	; 0xa0
   1be30:	str	r1, [sp, #24]
   1be34:	str	r1, [sp, #28]
   1be38:	movw	r1, #32503	; 0x7ef7
   1be3c:	movt	r1, #4
   1be40:	b	1b958 <__flatcc_fb_gen_c_builder@@Base+0x13e4>
   1be44:	ldr	r0, [r0, #40]	; 0x28
   1be48:	add	r1, r7, #48	; 0x30
   1be4c:	add	r8, sp, #60	; 0x3c
   1be50:	mov	r2, r8
   1be54:	bl	1c814 <__flatcc_fb_gen_c_builder@@Base+0x22a0>
   1be58:	ldm	r9, {r2, r9}
   1be5c:	ldr	r6, [r5]
   1be60:	ldr	r1, [r5, #4]
   1be64:	ldrh	r5, [r7, #74]	; 0x4a
   1be68:	ldr	r0, [r4, #204]	; 0xcc
   1be6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1be70:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1be74:	str	r6, [sp, #32]
   1be78:	add	lr, sp, #36	; 0x24
   1be7c:	stm	lr, {r1, r5, r8}
   1be80:	stm	sp, {r2, r9}
   1be84:	str	r4, [sp, #8]
   1be88:	str	sl, [sp, #12]
   1be8c:	str	r3, [sp, #16]
   1be90:	str	ip, [sp, #20]
   1be94:	add	r1, sp, #160	; 0xa0
   1be98:	str	r1, [sp, #24]
   1be9c:	str	r1, [sp, #28]
   1bea0:	movw	r1, #32246	; 0x7df6
   1bea4:	movt	r1, #4
   1bea8:	mov	r2, r4
   1beac:	bl	149f4 <fprintf@plt>
   1beb0:	sub	r6, fp, #40	; 0x28
   1beb4:	b	1b960 <__flatcc_fb_gen_c_builder@@Base+0x13ec>
   1beb8:	ldr	r1, [r4, #204]	; 0xcc
   1bebc:	mov	r0, #10
   1bec0:	bl	14a54 <fputc@plt>
   1bec4:	sub	sp, fp, #28
   1bec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1becc:	movw	r0, #8368	; 0x20b0
   1bed0:	movt	r0, #6
   1bed4:	ldr	r0, [r0]
   1bed8:	movw	r1, #56866	; 0xde22
   1bedc:	movt	r1, #3
   1bee0:	str	r1, [sp]
   1bee4:	movw	r1, #26331	; 0x66db
   1bee8:	movt	r1, #3
   1beec:	movw	r4, #29336	; 0x7298
   1bef0:	movt	r4, #4
   1bef4:	mov	r2, r4
   1bef8:	movw	r3, #1512	; 0x5e8
   1befc:	bl	149f4 <fprintf@plt>
   1bf00:	movw	r0, #30217	; 0x7609
   1bf04:	movt	r0, #4
   1bf08:	movw	r3, #31984	; 0x7cf0
   1bf0c:	movt	r3, #4
   1bf10:	mov	r1, r4
   1bf14:	movw	r2, #1512	; 0x5e8
   1bf18:	bl	14ab4 <__assert_fail@plt>
   1bf1c:	movw	r0, #8368	; 0x20b0
   1bf20:	movt	r0, #6
   1bf24:	ldr	r0, [r0]
   1bf28:	movw	r1, #56672	; 0xdd60
   1bf2c:	movt	r1, #3
   1bf30:	str	r1, [sp]
   1bf34:	movw	r1, #26331	; 0x66db
   1bf38:	movt	r1, #3
   1bf3c:	movw	r4, #29336	; 0x7298
   1bf40:	movt	r4, #4
   1bf44:	mov	r2, r4
   1bf48:	movw	r3, #1507	; 0x5e3
   1bf4c:	bl	149f4 <fprintf@plt>
   1bf50:	movw	r0, #30217	; 0x7609
   1bf54:	movt	r0, #4
   1bf58:	movw	r3, #31984	; 0x7cf0
   1bf5c:	movt	r3, #4
   1bf60:	mov	r1, r4
   1bf64:	movw	r2, #1507	; 0x5e3
   1bf68:	bl	14ab4 <__assert_fail@plt>
   1bf6c:	movw	r0, #8368	; 0x20b0
   1bf70:	movt	r0, #6
   1bf74:	ldr	r0, [r0]
   1bf78:	movw	r1, #56599	; 0xdd17
   1bf7c:	movt	r1, #3
   1bf80:	str	r1, [sp]
   1bf84:	movw	r1, #26331	; 0x66db
   1bf88:	movt	r1, #3
   1bf8c:	movw	r4, #29336	; 0x7298
   1bf90:	movt	r4, #4
   1bf94:	mov	r2, r4
   1bf98:	mov	r3, #1472	; 0x5c0
   1bf9c:	bl	149f4 <fprintf@plt>
   1bfa0:	movw	r0, #30217	; 0x7609
   1bfa4:	movt	r0, #4
   1bfa8:	movw	r3, #31984	; 0x7cf0
   1bfac:	movt	r3, #4
   1bfb0:	mov	r1, r4
   1bfb4:	mov	r2, #1472	; 0x5c0
   1bfb8:	bl	14ab4 <__assert_fail@plt>
   1bfbc:	movw	r0, #8368	; 0x20b0
   1bfc0:	movt	r0, #6
   1bfc4:	ldr	r0, [r0]
   1bfc8:	movw	r1, #31945	; 0x7cc9
   1bfcc:	movt	r1, #4
   1bfd0:	str	r1, [sp]
   1bfd4:	movw	r1, #26331	; 0x66db
   1bfd8:	movt	r1, #3
   1bfdc:	movw	r4, #29336	; 0x7298
   1bfe0:	movt	r4, #4
   1bfe4:	mov	r2, r4
   1bfe8:	movw	r3, #1430	; 0x596
   1bfec:	bl	149f4 <fprintf@plt>
   1bff0:	movw	r0, #30217	; 0x7609
   1bff4:	movt	r0, #4
   1bff8:	movw	r3, #31984	; 0x7cf0
   1bffc:	movt	r3, #4
   1c000:	mov	r1, r4
   1c004:	movw	r2, #1430	; 0x596
   1c008:	bl	14ab4 <__assert_fail@plt>
   1c00c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c010:	add	fp, sp, #28
   1c014:	sub	sp, sp, #260	; 0x104
   1c018:	mov	r7, r1
   1c01c:	mov	r4, r0
   1c020:	ldrh	r9, [r1, #92]	; 0x5c
   1c024:	add	r5, sp, #24
   1c028:	mov	r8, #0
   1c02c:	mov	r0, r5
   1c030:	mov	r1, #0
   1c034:	mov	r2, #220	; 0xdc
   1c038:	bl	14a0c <memset@plt>
   1c03c:	mov	r0, r7
   1c040:	mov	r1, r5
   1c044:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1c048:	ldr	r0, [r4, #204]	; 0xcc
   1c04c:	stm	sp, {r4, r5}
   1c050:	movw	r1, #32997	; 0x80e5
   1c054:	movt	r1, #4
   1c058:	mov	r2, r5
   1c05c:	mov	r3, r5
   1c060:	bl	149f4 <fprintf@plt>
   1c064:	ldr	r0, [r4, #204]	; 0xcc
   1c068:	movw	r1, #33064	; 0x8128
   1c06c:	movt	r1, #4
   1c070:	mov	r2, r5
   1c074:	bl	149f4 <fprintf@plt>
   1c078:	ldr	r6, [r7, #24]
   1c07c:	cmp	r6, #0
   1c080:	beq	1c20c <__flatcc_fb_gen_c_builder@@Base+0x1c98>
   1c084:	str	r7, [sp, #20]
   1c088:	ands	r9, r9, #8
   1c08c:	str	r9, [sp, #16]
   1c090:	movwne	r9, #1
   1c094:	sub	sl, fp, #40	; 0x28
   1c098:	add	r7, sp, #24
   1c09c:	b	1c0dc <__flatcc_fb_gen_c_builder@@Base+0x1b68>
   1c0a0:	ldr	r0, [r4, #204]	; 0xcc
   1c0a4:	ldr	r2, [r6, #96]	; 0x60
   1c0a8:	ldr	r1, [r6, #100]	; 0x64
   1c0ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c0b0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1c0b4:	str	r2, [sp, #8]
   1c0b8:	str	r1, [sp, #12]
   1c0bc:	str	r5, [sp]
   1c0c0:	movw	r1, #33126	; 0x8166
   1c0c4:	movt	r1, #4
   1c0c8:	mov	r2, r7
   1c0cc:	bl	149f4 <fprintf@plt>
   1c0d0:	ldr	r6, [r6, #108]	; 0x6c
   1c0d4:	cmp	r6, #0
   1c0d8:	beq	1c15c <__flatcc_fb_gen_c_builder@@Base+0x1be8>
   1c0dc:	ldrb	r0, [r6, #72]	; 0x48
   1c0e0:	tst	r0, #4
   1c0e4:	bne	1c0d0 <__flatcc_fb_gen_c_builder@@Base+0x1b5c>
   1c0e8:	mov	r0, r6
   1c0ec:	sub	r1, fp, #36	; 0x24
   1c0f0:	mov	r2, sl
   1c0f4:	bl	1b508 <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1c0f8:	ldrh	r0, [r6, #24]
   1c0fc:	cmp	r0, #14
   1c100:	bne	1c0a0 <__flatcc_fb_gen_c_builder@@Base+0x1b2c>
   1c104:	ldr	r0, [r6, #16]
   1c108:	ldrh	r0, [r0, #8]
   1c10c:	cmp	r0, #4
   1c110:	moveq	r8, #1
   1c114:	subs	r0, r0, #4
   1c118:	movwne	r0, #1
   1c11c:	orrs	r0, r0, r9
   1c120:	bne	1c0a0 <__flatcc_fb_gen_c_builder@@Base+0x1b2c>
   1c124:	ldr	r0, [r4, #204]	; 0xcc
   1c128:	ldr	r2, [r6, #96]	; 0x60
   1c12c:	ldr	r1, [r6, #100]	; 0x64
   1c130:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c134:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1c138:	str	r2, [sp, #8]
   1c13c:	str	r1, [sp, #12]
   1c140:	str	r5, [sp]
   1c144:	movw	r1, #33086	; 0x813e
   1c148:	movt	r1, #4
   1c14c:	mov	r2, r7
   1c150:	bl	149f4 <fprintf@plt>
   1c154:	mov	r8, #1
   1c158:	b	1c0d0 <__flatcc_fb_gen_c_builder@@Base+0x1b5c>
   1c15c:	ldr	r0, [sp, #16]
   1c160:	cmp	r0, #0
   1c164:	ldr	r0, [sp, #20]
   1c168:	bne	1c20c <__flatcc_fb_gen_c_builder@@Base+0x1c98>
   1c16c:	cmp	r8, #0
   1c170:	beq	1c20c <__flatcc_fb_gen_c_builder@@Base+0x1c98>
   1c174:	ldr	r5, [r0, #24]
   1c178:	cmp	r5, #0
   1c17c:	beq	1c20c <__flatcc_fb_gen_c_builder@@Base+0x1c98>
   1c180:	sub	r8, fp, #36	; 0x24
   1c184:	sub	r9, fp, #40	; 0x28
   1c188:	movw	sl, #33160	; 0x8188
   1c18c:	movt	sl, #4
   1c190:	add	r7, sp, #24
   1c194:	b	1c1a4 <__flatcc_fb_gen_c_builder@@Base+0x1c30>
   1c198:	ldr	r5, [r5, #108]	; 0x6c
   1c19c:	cmp	r5, #0
   1c1a0:	beq	1c20c <__flatcc_fb_gen_c_builder@@Base+0x1c98>
   1c1a4:	ldrb	r0, [r5, #72]	; 0x48
   1c1a8:	tst	r0, #4
   1c1ac:	bne	1c198 <__flatcc_fb_gen_c_builder@@Base+0x1c24>
   1c1b0:	ldrh	r0, [r5, #24]
   1c1b4:	cmp	r0, #14
   1c1b8:	bne	1c198 <__flatcc_fb_gen_c_builder@@Base+0x1c24>
   1c1bc:	ldr	r0, [r5, #16]
   1c1c0:	ldrh	r0, [r0, #8]
   1c1c4:	cmp	r0, #4
   1c1c8:	bne	1c198 <__flatcc_fb_gen_c_builder@@Base+0x1c24>
   1c1cc:	mov	r0, r5
   1c1d0:	mov	r1, r8
   1c1d4:	mov	r2, r9
   1c1d8:	bl	1b508 <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1c1dc:	ldr	r0, [r4, #204]	; 0xcc
   1c1e0:	ldr	r2, [r5, #96]	; 0x60
   1c1e4:	ldr	r1, [r5, #100]	; 0x64
   1c1e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c1ec:	ldr	r6, [fp, #-40]	; 0xffffffd8
   1c1f0:	str	r2, [sp, #8]
   1c1f4:	str	r1, [sp, #12]
   1c1f8:	str	r6, [sp]
   1c1fc:	mov	r1, sl
   1c200:	mov	r2, r7
   1c204:	bl	149f4 <fprintf@plt>
   1c208:	b	1c198 <__flatcc_fb_gen_c_builder@@Base+0x1c24>
   1c20c:	ldr	r0, [r4, #204]	; 0xcc
   1c210:	movw	r1, #33204	; 0x81b4
   1c214:	movt	r1, #4
   1c218:	add	r2, sp, #24
   1c21c:	bl	149f4 <fprintf@plt>
   1c220:	sub	sp, fp, #28
   1c224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c228:	push	{r4, r5, r6, sl, fp, lr}
   1c22c:	add	fp, sp, #16
   1c230:	sub	sp, sp, #240	; 0xf0
   1c234:	mov	r4, r1
   1c238:	mov	r5, r0
   1c23c:	add	r6, sp, #16
   1c240:	mov	r0, r6
   1c244:	mov	r1, #0
   1c248:	mov	r2, #220	; 0xdc
   1c24c:	bl	14a0c <memset@plt>
   1c250:	mov	r0, r4
   1c254:	mov	r1, r6
   1c258:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1c25c:	ldr	r0, [r5, #204]	; 0xcc
   1c260:	str	r6, [sp]
   1c264:	str	r6, [sp, #4]
   1c268:	str	r6, [sp, #8]
   1c26c:	movw	r1, #33257	; 0x81e9
   1c270:	movt	r1, #4
   1c274:	mov	r2, r5
   1c278:	mov	r3, r5
   1c27c:	bl	149f4 <fprintf@plt>
   1c280:	sub	sp, fp, #16
   1c284:	pop	{r4, r5, r6, sl, fp, pc}
   1c288:	ldr	r1, [r0, #20]
   1c28c:	mov	r0, #0
   1c290:	cmp	r1, #0
   1c294:	bxeq	lr
   1c298:	mov	r2, #1
   1c29c:	ldrh	r3, [r1, #72]	; 0x48
   1c2a0:	bic	r3, r2, r3, lsr #2
   1c2a4:	add	r0, r0, r3
   1c2a8:	ldr	r1, [r1]
   1c2ac:	cmp	r1, #0
   1c2b0:	bne	1c29c <__flatcc_fb_gen_c_builder@@Base+0x1d28>
   1c2b4:	bx	lr
   1c2b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c2bc:	add	fp, sp, #28
   1c2c0:	sub	sp, sp, #236	; 0xec
   1c2c4:	mov	r4, r2
   1c2c8:	mov	r7, r1
   1c2cc:	mov	r5, r0
   1c2d0:	add	r0, sp, #8
   1c2d4:	mov	r6, #0
   1c2d8:	mov	r1, #0
   1c2dc:	mov	r2, #220	; 0xdc
   1c2e0:	bl	14a0c <memset@plt>
   1c2e4:	ldr	r7, [r7, #20]
   1c2e8:	cmp	r7, #0
   1c2ec:	beq	1c508 <__flatcc_fb_gen_c_builder@@Base+0x1f94>
   1c2f0:	add	r8, sp, #8
   1c2f4:	b	1c328 <__flatcc_fb_gen_c_builder@@Base+0x1db4>
   1c2f8:	cmp	r0, #3
   1c2fc:	bne	1c5b0 <__flatcc_fb_gen_c_builder@@Base+0x203c>
   1c300:	ldr	r0, [r5, #204]	; 0xcc
   1c304:	ldrd	r2, [r7, #96]	; 0x60
   1c308:	stm	sp, {r2, r3}
   1c30c:	movw	r1, #31020	; 0x792c
   1c310:	movt	r1, #4
   1c314:	mov	r2, r8
   1c318:	bl	149f4 <fprintf@plt>
   1c31c:	ldr	r7, [r7]
   1c320:	cmp	r7, #0
   1c324:	beq	1c508 <__flatcc_fb_gen_c_builder@@Base+0x1f94>
   1c328:	ldrb	r0, [r7, #72]	; 0x48
   1c32c:	tst	r0, #4
   1c330:	bne	1c31c <__flatcc_fb_gen_c_builder@@Base+0x1da8>
   1c334:	mov	r0, r5
   1c338:	mov	r1, r6
   1c33c:	mov	r2, r4
   1c340:	mov	r3, #1
   1c344:	bl	1b3f0 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1c348:	ldrh	r0, [r7, #24]
   1c34c:	sub	r0, r0, #7
   1c350:	cmp	r0, #8
   1c354:	bhi	1c510 <__flatcc_fb_gen_c_builder@@Base+0x1f9c>
   1c358:	add	r6, r6, #1
   1c35c:	add	r1, pc, #0
   1c360:	ldr	pc, [r1, r0, lsl #2]
   1c364:	andeq	ip, r1, r8, lsl #7
   1c368:	ldrdeq	ip, [r1], -r0
   1c36c:	andeq	ip, r1, r8, lsl r4
   1c370:			; <UNDEFINED> instruction: 0x0001c3b8
   1c374:	andeq	ip, r1, r0, lsl r5
   1c378:	andeq	ip, r1, r0, lsl r5
   1c37c:	andeq	ip, r1, r0, lsl r5
   1c380:	andeq	ip, r1, r0, ror r4
   1c384:	andeq	ip, r1, r4, lsr r4
   1c388:	ldr	r0, [r7, #16]
   1c38c:	bl	1b510 <__flatcc_fb_gen_c_builder@@Base+0xf9c>
   1c390:	mov	r3, r0
   1c394:	ldr	r0, [r5, #204]	; 0xcc
   1c398:	ldr	r2, [r7, #96]	; 0x60
   1c39c:	ldr	r1, [r7, #100]	; 0x64
   1c3a0:	str	r2, [sp]
   1c3a4:	str	r1, [sp, #4]
   1c3a8:	movw	r1, #31018	; 0x792a
   1c3ac:	movt	r1, #4
   1c3b0:	mov	r2, r5
   1c3b4:	b	1c410 <__flatcc_fb_gen_c_builder@@Base+0x1e9c>
   1c3b8:	ldr	r0, [r5, #204]	; 0xcc
   1c3bc:	ldrd	r2, [r7, #96]	; 0x60
   1c3c0:	stm	sp, {r2, r3}
   1c3c4:	movw	r1, #31039	; 0x793f
   1c3c8:	movt	r1, #4
   1c3cc:	b	1c42c <__flatcc_fb_gen_c_builder@@Base+0x1eb8>
   1c3d0:	ldr	r9, [r7, #16]
   1c3d4:	mov	r0, r9
   1c3d8:	mov	r1, r5
   1c3dc:	bl	1b478 <__flatcc_fb_gen_c_builder@@Base+0xf04>
   1c3e0:	mov	sl, r0
   1c3e4:	mov	r0, r9
   1c3e8:	bl	1b490 <__flatcc_fb_gen_c_builder@@Base+0xf1c>
   1c3ec:	mov	r3, r0
   1c3f0:	ldr	r0, [r5, #204]	; 0xcc
   1c3f4:	ldr	r2, [r7, #96]	; 0x60
   1c3f8:	ldr	r1, [r7, #100]	; 0x64
   1c3fc:	str	r2, [sp]
   1c400:	str	r1, [sp, #4]
   1c404:	movw	r1, #31007	; 0x791f
   1c408:	movt	r1, #4
   1c40c:	mov	r2, sl
   1c410:	bl	149f4 <fprintf@plt>
   1c414:	b	1c31c <__flatcc_fb_gen_c_builder@@Base+0x1da8>
   1c418:	ldr	r0, [r5, #204]	; 0xcc
   1c41c:	ldrd	r2, [r7, #96]	; 0x60
   1c420:	stm	sp, {r2, r3}
   1c424:	movw	r1, #31060	; 0x7954
   1c428:	movt	r1, #4
   1c42c:	mov	r2, r5
   1c430:	b	1c318 <__flatcc_fb_gen_c_builder@@Base+0x1da4>
   1c434:	ldr	r0, [r7, #16]
   1c438:	mov	r1, r8
   1c43c:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1c440:	ldr	r0, [r7, #16]
   1c444:	ldrh	r0, [r0, #8]
   1c448:	cmp	r0, #2
   1c44c:	bcc	1c300 <__flatcc_fb_gen_c_builder@@Base+0x1d8c>
   1c450:	cmp	r0, #4
   1c454:	bne	1c2f8 <__flatcc_fb_gen_c_builder@@Base+0x1d84>
   1c458:	ldr	r0, [r5, #204]	; 0xcc
   1c45c:	ldrd	r2, [r7, #96]	; 0x60
   1c460:	stm	sp, {r2, r3}
   1c464:	movw	r1, #30938	; 0x78da
   1c468:	movt	r1, #4
   1c46c:	b	1c314 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
   1c470:	ldr	r0, [r7, #16]
   1c474:	mov	r1, r8
   1c478:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1c47c:	ldr	r0, [r7, #16]
   1c480:	ldrh	r0, [r0, #8]
   1c484:	cmp	r0, #4
   1c488:	bhi	1c560 <__flatcc_fb_gen_c_builder@@Base+0x1fec>
   1c48c:	add	r1, pc, #0
   1c490:	ldr	pc, [r1, r0, lsl #2]
   1c494:	andeq	ip, r1, r8, lsr #9
   1c498:	ldrdeq	ip, [r1], -r8
   1c49c:	andeq	ip, r1, r0, ror #10
   1c4a0:	strdeq	ip, [r1], -r0
   1c4a4:	andeq	ip, r1, r0, asr #9
   1c4a8:	ldr	r0, [r5, #204]	; 0xcc
   1c4ac:	ldrd	r2, [r7, #96]	; 0x60
   1c4b0:	stm	sp, {r2, r3}
   1c4b4:	movw	r1, #30784	; 0x7840
   1c4b8:	movt	r1, #4
   1c4bc:	b	1c314 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
   1c4c0:	ldr	r0, [r5, #204]	; 0xcc
   1c4c4:	ldrd	r2, [r7, #96]	; 0x60
   1c4c8:	stm	sp, {r2, r3}
   1c4cc:	movw	r1, #30799	; 0x784f
   1c4d0:	movt	r1, #4
   1c4d4:	b	1c314 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
   1c4d8:	ldr	r0, [r5, #204]	; 0xcc
   1c4dc:	ldrd	r2, [r7, #96]	; 0x60
   1c4e0:	stm	sp, {r2, r3}
   1c4e4:	movw	r1, #30756	; 0x7824
   1c4e8:	movt	r1, #4
   1c4ec:	b	1c314 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
   1c4f0:	ldr	r0, [r5, #204]	; 0xcc
   1c4f4:	ldrd	r2, [r7, #96]	; 0x60
   1c4f8:	stm	sp, {r2, r3}
   1c4fc:	movw	r1, #30768	; 0x7830
   1c500:	movt	r1, #4
   1c504:	b	1c314 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
   1c508:	sub	sp, fp, #28
   1c50c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c510:	movw	r0, #8368	; 0x20b0
   1c514:	movt	r0, #6
   1c518:	ldr	r0, [r0]
   1c51c:	movw	r1, #29932	; 0x74ec
   1c520:	movt	r1, #4
   1c524:	str	r1, [sp]
   1c528:	movw	r1, #26331	; 0x66db
   1c52c:	movt	r1, #3
   1c530:	movw	r4, #29336	; 0x7298
   1c534:	movt	r4, #4
   1c538:	mov	r2, r4
   1c53c:	movw	r3, #1209	; 0x4b9
   1c540:	bl	149f4 <fprintf@plt>
   1c544:	movw	r0, #30217	; 0x7609
   1c548:	movt	r0, #4
   1c54c:	movw	r3, #30864	; 0x7890
   1c550:	movt	r3, #4
   1c554:	mov	r1, r4
   1c558:	movw	r2, #1209	; 0x4b9
   1c55c:	bl	14ab4 <__assert_fail@plt>
   1c560:	movw	r0, #8368	; 0x20b0
   1c564:	movt	r0, #6
   1c568:	ldr	r0, [r0]
   1c56c:	movw	r1, #30820	; 0x7864
   1c570:	movt	r1, #4
   1c574:	str	r1, [sp]
   1c578:	movw	r1, #26331	; 0x66db
   1c57c:	movt	r1, #3
   1c580:	movw	r4, #29336	; 0x7298
   1c584:	movt	r4, #4
   1c588:	mov	r2, r4
   1c58c:	movw	r3, #1173	; 0x495
   1c590:	bl	149f4 <fprintf@plt>
   1c594:	movw	r0, #30217	; 0x7609
   1c598:	movt	r0, #4
   1c59c:	movw	r3, #30864	; 0x7890
   1c5a0:	movt	r3, #4
   1c5a4:	mov	r1, r4
   1c5a8:	movw	r2, #1173	; 0x495
   1c5ac:	bl	14ab4 <__assert_fail@plt>
   1c5b0:	movw	r0, #8368	; 0x20b0
   1c5b4:	movt	r0, #6
   1c5b8:	ldr	r0, [r0]
   1c5bc:	movw	r1, #30963	; 0x78f3
   1c5c0:	movt	r1, #4
   1c5c4:	str	r1, [sp]
   1c5c8:	movw	r1, #26331	; 0x66db
   1c5cc:	movt	r1, #3
   1c5d0:	movw	r4, #29336	; 0x7298
   1c5d4:	movt	r4, #4
   1c5d8:	mov	r2, r4
   1c5dc:	movw	r3, #1189	; 0x4a5
   1c5e0:	bl	149f4 <fprintf@plt>
   1c5e4:	movw	r0, #30217	; 0x7609
   1c5e8:	movt	r0, #4
   1c5ec:	movw	r3, #30864	; 0x7890
   1c5f0:	movt	r3, #4
   1c5f4:	mov	r1, r4
   1c5f8:	movw	r2, #1189	; 0x4a5
   1c5fc:	bl	14ab4 <__assert_fail@plt>
   1c600:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c604:	add	fp, sp, #24
   1c608:	ldr	r7, [r1, #20]
   1c60c:	cmp	r7, #0
   1c610:	beq	1c670 <__flatcc_fb_gen_c_builder@@Base+0x20fc>
   1c614:	mov	r4, r2
   1c618:	mov	r5, r0
   1c61c:	mov	r6, #0
   1c620:	movw	r8, #31012	; 0x7924
   1c624:	movt	r8, #4
   1c628:	b	1c638 <__flatcc_fb_gen_c_builder@@Base+0x20c4>
   1c62c:	ldr	r7, [r7]
   1c630:	cmp	r7, #0
   1c634:	beq	1c670 <__flatcc_fb_gen_c_builder@@Base+0x20fc>
   1c638:	ldrb	r0, [r7, #72]	; 0x48
   1c63c:	tst	r0, #4
   1c640:	bne	1c62c <__flatcc_fb_gen_c_builder@@Base+0x20b8>
   1c644:	mov	r0, r5
   1c648:	mov	r1, r6
   1c64c:	mov	r2, r4
   1c650:	mov	r3, #1
   1c654:	bl	1b3f0 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1c658:	ldrd	r2, [r7, #96]	; 0x60
   1c65c:	ldr	r0, [r5, #204]	; 0xcc
   1c660:	mov	r1, r8
   1c664:	bl	149f4 <fprintf@plt>
   1c668:	add	r6, r6, #1
   1c66c:	b	1c62c <__flatcc_fb_gen_c_builder@@Base+0x20b8>
   1c670:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c674:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c678:	add	fp, sp, #28
   1c67c:	sub	sp, sp, #492	; 0x1ec
   1c680:	mov	r6, r1
   1c684:	mov	r4, r0
   1c688:	add	r5, sp, #256	; 0x100
   1c68c:	mov	r0, r5
   1c690:	mov	r1, #0
   1c694:	mov	r2, #220	; 0xdc
   1c698:	bl	14a0c <memset@plt>
   1c69c:	add	r9, sp, #32
   1c6a0:	mov	r0, r9
   1c6a4:	mov	r1, #0
   1c6a8:	mov	r2, #220	; 0xdc
   1c6ac:	bl	14a0c <memset@plt>
   1c6b0:	mov	r0, r6
   1c6b4:	mov	r1, r5
   1c6b8:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1c6bc:	ldr	r7, [r6, #20]
   1c6c0:	cmp	r7, #0
   1c6c4:	beq	1c7a0 <__flatcc_fb_gen_c_builder@@Base+0x222c>
   1c6c8:	sub	sl, fp, #40	; 0x28
   1c6cc:	sub	r6, fp, #36	; 0x24
   1c6d0:	movw	r8, #31085	; 0x796d
   1c6d4:	movt	r8, #4
   1c6d8:	b	1c728 <__flatcc_fb_gen_c_builder@@Base+0x21b4>
   1c6dc:	mov	r0, r7
   1c6e0:	mov	r1, sl
   1c6e4:	mov	r2, r6
   1c6e8:	bl	1b508 <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1c6ec:	ldr	r0, [r4, #204]	; 0xcc
   1c6f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c6f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c6f8:	stm	sp, {r1, r2, r4, r5}
   1c6fc:	str	r5, [sp, #16]
   1c700:	str	r1, [sp, #20]
   1c704:	str	r2, [sp, #24]
   1c708:	movw	r1, #31217	; 0x79f1
   1c70c:	movt	r1, #4
   1c710:	mov	r2, r5
   1c714:	mov	r3, r5
   1c718:	bl	149f4 <fprintf@plt>
   1c71c:	ldr	r7, [r7]
   1c720:	cmp	r7, #0
   1c724:	beq	1c7a0 <__flatcc_fb_gen_c_builder@@Base+0x222c>
   1c728:	ldrh	r0, [r7, #24]
   1c72c:	cmp	r0, #0
   1c730:	beq	1c788 <__flatcc_fb_gen_c_builder@@Base+0x2214>
   1c734:	cmp	r0, #10
   1c738:	beq	1c6dc <__flatcc_fb_gen_c_builder@@Base+0x2168>
   1c73c:	cmp	r0, #14
   1c740:	bne	1c7c4 <__flatcc_fb_gen_c_builder@@Base+0x2250>
   1c744:	ldr	r0, [r7, #16]
   1c748:	mov	r1, r9
   1c74c:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1c750:	mov	r0, r7
   1c754:	mov	r1, sl
   1c758:	mov	r2, r6
   1c75c:	bl	1b508 <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1c760:	ldr	r0, [r4, #204]	; 0xcc
   1c764:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c768:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c76c:	stm	sp, {r1, r2, r9}
   1c770:	str	r5, [sp, #12]
   1c774:	str	r5, [sp, #16]
   1c778:	str	r1, [sp, #20]
   1c77c:	str	r2, [sp, #24]
   1c780:	mov	r1, r8
   1c784:	b	1c710 <__flatcc_fb_gen_c_builder@@Base+0x219c>
   1c788:	ldr	r0, [r4, #204]	; 0xcc
   1c78c:	str	r5, [sp]
   1c790:	str	r5, [sp, #4]
   1c794:	movw	r1, #31355	; 0x7a7b
   1c798:	movt	r1, #4
   1c79c:	b	1c710 <__flatcc_fb_gen_c_builder@@Base+0x219c>
   1c7a0:	ldr	r0, [r4, #204]	; 0xcc
   1c7a4:	str	r5, [sp]
   1c7a8:	movw	r1, #31568	; 0x7b50
   1c7ac:	movt	r1, #4
   1c7b0:	mov	r2, r4
   1c7b4:	mov	r3, r4
   1c7b8:	bl	149f4 <fprintf@plt>
   1c7bc:	sub	sp, fp, #28
   1c7c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c7c4:	movw	r0, #8368	; 0x20b0
   1c7c8:	movt	r0, #6
   1c7cc:	ldr	r0, [r0]
   1c7d0:	movw	r1, #31473	; 0x7af1
   1c7d4:	movt	r1, #4
   1c7d8:	str	r1, [sp]
   1c7dc:	movw	r1, #26331	; 0x66db
   1c7e0:	movt	r1, #3
   1c7e4:	movw	r4, #29336	; 0x7298
   1c7e8:	movt	r4, #4
   1c7ec:	mov	r2, r4
   1c7f0:	movw	r3, #1608	; 0x648
   1c7f4:	bl	149f4 <fprintf@plt>
   1c7f8:	movw	r0, #30217	; 0x7609
   1c7fc:	movt	r0, #4
   1c800:	movw	r3, #31517	; 0x7b1d
   1c804:	movt	r3, #4
   1c808:	mov	r1, r4
   1c80c:	movw	r2, #1608	; 0x648
   1c810:	bl	14ab4 <__assert_fail@plt>
   1c814:	push	{r4, r5, fp, lr}
   1c818:	add	fp, sp, #8
   1c81c:	sub	sp, sp, #8
   1c820:	mov	r5, r1
   1c824:	ldrh	r1, [r1, #8]
   1c828:	sub	r1, r1, #3
   1c82c:	cmp	r1, #3
   1c830:	bhi	1c8ec <__flatcc_fb_gen_c_builder@@Base+0x2378>
   1c834:	mov	r4, r2
   1c838:	add	r2, pc, #0
   1c83c:	ldr	pc, [r2, r1, lsl #2]
   1c840:	andeq	ip, r1, r0, asr r8
   1c844:	andeq	ip, r1, r8, lsr #17
   1c848:	andeq	ip, r1, r4, ror r8
   1c84c:	muleq	r1, r0, r8
   1c850:	vldr	d16, [r5]
   1c854:	cmp	r0, #11
   1c858:	bne	1c8d0 <__flatcc_fb_gen_c_builder@@Base+0x235c>
   1c85c:	vcvt.f32.f64	s0, d16
   1c860:	vcvt.f64.f32	d16, s0
   1c864:	vmov	r2, r3, d16
   1c868:	movw	r1, #53065	; 0xcf49
   1c86c:	movt	r1, #3
   1c870:	b	1c8dc <__flatcc_fb_gen_c_builder@@Base+0x2368>
   1c874:	bl	1cb8c <__flatcc_fb_gen_c_builder@@Base+0x2618>
   1c878:	mov	r2, r0
   1c87c:	ldrd	r0, [r5]
   1c880:	stm	sp, {r0, r1}
   1c884:	movw	r1, #53040	; 0xcf30
   1c888:	movt	r1, #3
   1c88c:	b	1c8c0 <__flatcc_fb_gen_c_builder@@Base+0x234c>
   1c890:	bl	1cb8c <__flatcc_fb_gen_c_builder@@Base+0x2618>
   1c894:	mov	r2, r0
   1c898:	ldrb	r3, [r5]
   1c89c:	movw	r1, #53058	; 0xcf42
   1c8a0:	movt	r1, #3
   1c8a4:	b	1c8dc <__flatcc_fb_gen_c_builder@@Base+0x2368>
   1c8a8:	bl	1cb8c <__flatcc_fb_gen_c_builder@@Base+0x2618>
   1c8ac:	mov	r2, r0
   1c8b0:	ldrd	r0, [r5]
   1c8b4:	stm	sp, {r0, r1}
   1c8b8:	movw	r1, #53049	; 0xcf39
   1c8bc:	movt	r1, #3
   1c8c0:	mov	r0, r4
   1c8c4:	bl	14a60 <sprintf@plt>
   1c8c8:	sub	sp, fp, #8
   1c8cc:	pop	{r4, r5, fp, pc}
   1c8d0:	vmov	r2, r3, d16
   1c8d4:	movw	r1, #53069	; 0xcf4d
   1c8d8:	movt	r1, #3
   1c8dc:	mov	r0, r4
   1c8e0:	sub	sp, fp, #8
   1c8e4:	pop	{r4, r5, fp, lr}
   1c8e8:	b	14a60 <sprintf@plt>
   1c8ec:	movw	r0, #8368	; 0x20b0
   1c8f0:	movt	r0, #6
   1c8f4:	ldr	r0, [r0]
   1c8f8:	movw	r1, #52924	; 0xcebc
   1c8fc:	movt	r1, #3
   1c900:	str	r1, [sp]
   1c904:	movw	r1, #26331	; 0x66db
   1c908:	movt	r1, #3
   1c90c:	movw	r4, #52851	; 0xce73
   1c910:	movt	r4, #3
   1c914:	mov	r2, r4
   1c918:	mov	r3, #260	; 0x104
   1c91c:	bl	149f4 <fprintf@plt>
   1c920:	movw	r0, #30217	; 0x7609
   1c924:	movt	r0, #4
   1c928:	movw	r3, #53073	; 0xcf51
   1c92c:	movt	r3, #3
   1c930:	mov	r1, r4
   1c934:	mov	r2, #260	; 0x104
   1c938:	bl	14ab4 <__assert_fail@plt>
   1c93c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c940:	add	fp, sp, #28
   1c944:	sub	sp, sp, #500	; 0x1f4
   1c948:	str	r3, [sp, #36]	; 0x24
   1c94c:	str	r2, [sp, #32]
   1c950:	mov	sl, r1
   1c954:	mov	r7, r0
   1c958:	add	r4, sp, #264	; 0x108
   1c95c:	mov	r0, r4
   1c960:	mov	r1, #0
   1c964:	mov	r2, #220	; 0xdc
   1c968:	bl	14a0c <memset@plt>
   1c96c:	add	r0, sp, #40	; 0x28
   1c970:	mov	r1, #0
   1c974:	mov	r2, #220	; 0xdc
   1c978:	bl	14a0c <memset@plt>
   1c97c:	ldr	r8, [fp, #8]
   1c980:	mov	r0, r8
   1c984:	mov	r1, r4
   1c988:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1c98c:	ldr	r0, [fp, #12]
   1c990:	movw	r1, #62501	; 0xf425
   1c994:	movt	r1, #4
   1c998:	movw	r4, #32614	; 0x7f66
   1c99c:	movt	r4, #4
   1c9a0:	cmp	r0, #0
   1c9a4:	moveq	r4, r1
   1c9a8:	ldr	r9, [r8, #20]
   1c9ac:	cmp	r9, #0
   1c9b0:	beq	1cae4 <__flatcc_fb_gen_c_builder@@Base+0x2570>
   1c9b4:	sub	r5, fp, #40	; 0x28
   1c9b8:	sub	r6, fp, #36	; 0x24
   1c9bc:	b	1ca10 <__flatcc_fb_gen_c_builder@@Base+0x249c>
   1c9c0:	ldr	r0, [r7, #204]	; 0xcc
   1c9c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c9c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c9cc:	stm	sp, {r7, sl}
   1c9d0:	ldr	r3, [sp, #32]
   1c9d4:	str	r3, [sp, #8]
   1c9d8:	ldr	r3, [sp, #36]	; 0x24
   1c9dc:	str	r3, [sp, #12]
   1c9e0:	add	r3, sp, #264	; 0x108
   1c9e4:	str	r3, [sp, #16]
   1c9e8:	str	r1, [sp, #20]
   1c9ec:	str	r2, [sp, #24]
   1c9f0:	movw	r1, #32896	; 0x8080
   1c9f4:	movt	r1, #4
   1c9f8:	mov	r2, r7
   1c9fc:	mov	r3, r4
   1ca00:	bl	149f4 <fprintf@plt>
   1ca04:	ldr	r9, [r9]
   1ca08:	cmp	r9, #0
   1ca0c:	beq	1cae4 <__flatcc_fb_gen_c_builder@@Base+0x2570>
   1ca10:	mov	r0, r9
   1ca14:	mov	r1, r5
   1ca18:	mov	r2, r6
   1ca1c:	bl	1b508 <__flatcc_fb_gen_c_builder@@Base+0xf94>
   1ca20:	ldrh	r0, [r9, #24]
   1ca24:	cmp	r0, #0
   1ca28:	beq	1ca04 <__flatcc_fb_gen_c_builder@@Base+0x2490>
   1ca2c:	cmp	r0, #10
   1ca30:	beq	1c9c0 <__flatcc_fb_gen_c_builder@@Base+0x244c>
   1ca34:	cmp	r0, #14
   1ca38:	add	r8, sp, #40	; 0x28
   1ca3c:	bne	1caec <__flatcc_fb_gen_c_builder@@Base+0x2578>
   1ca40:	ldr	r0, [r9, #16]
   1ca44:	mov	r1, r8
   1ca48:	bl	1a998 <__flatcc_fb_gen_c_builder@@Base+0x424>
   1ca4c:	ldr	r0, [r9, #16]
   1ca50:	ldrh	r0, [r0, #8]
   1ca54:	cmp	r0, #1
   1ca58:	beq	1caa8 <__flatcc_fb_gen_c_builder@@Base+0x2534>
   1ca5c:	cmp	r0, #0
   1ca60:	bne	1cb3c <__flatcc_fb_gen_c_builder@@Base+0x25c8>
   1ca64:	ldr	r0, [r7, #204]	; 0xcc
   1ca68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ca6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ca70:	stm	sp, {r7, sl}
   1ca74:	ldr	r3, [sp, #32]
   1ca78:	str	r3, [sp, #8]
   1ca7c:	ldr	r3, [sp, #36]	; 0x24
   1ca80:	str	r3, [sp, #12]
   1ca84:	add	r3, sp, #264	; 0x108
   1ca88:	str	r3, [sp, #16]
   1ca8c:	str	r1, [sp, #20]
   1ca90:	str	r2, [sp, #24]
   1ca94:	add	r1, sp, #40	; 0x28
   1ca98:	str	r1, [sp, #28]
   1ca9c:	movw	r1, #32627	; 0x7f73
   1caa0:	movt	r1, #4
   1caa4:	b	1c9f8 <__flatcc_fb_gen_c_builder@@Base+0x2484>
   1caa8:	ldr	r0, [r7, #204]	; 0xcc
   1caac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1cab0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cab4:	stm	sp, {r7, sl}
   1cab8:	ldr	r3, [sp, #32]
   1cabc:	str	r3, [sp, #8]
   1cac0:	ldr	r3, [sp, #36]	; 0x24
   1cac4:	str	r3, [sp, #12]
   1cac8:	add	r3, sp, #264	; 0x108
   1cacc:	str	r3, [sp, #16]
   1cad0:	add	r3, sp, #20
   1cad4:	stm	r3, {r1, r2, r8}
   1cad8:	movw	r1, #32686	; 0x7fae
   1cadc:	movt	r1, #4
   1cae0:	b	1c9f8 <__flatcc_fb_gen_c_builder@@Base+0x2484>
   1cae4:	sub	sp, fp, #28
   1cae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1caec:	movw	r0, #8368	; 0x20b0
   1caf0:	movt	r0, #6
   1caf4:	ldr	r0, [r0]
   1caf8:	movw	r1, #32952	; 0x80b8
   1cafc:	movt	r1, #4
   1cb00:	str	r1, [sp]
   1cb04:	movw	r1, #26331	; 0x66db
   1cb08:	movt	r1, #3
   1cb0c:	movw	r4, #29336	; 0x7298
   1cb10:	movt	r4, #4
   1cb14:	mov	r2, r4
   1cb18:	movw	r3, #1368	; 0x558
   1cb1c:	bl	149f4 <fprintf@plt>
   1cb20:	movw	r0, #30217	; 0x7609
   1cb24:	movt	r0, #4
   1cb28:	movw	r3, #32800	; 0x8020
   1cb2c:	movt	r3, #4
   1cb30:	mov	r1, r4
   1cb34:	movw	r2, #1368	; 0x558
   1cb38:	bl	14ab4 <__assert_fail@plt>
   1cb3c:	movw	r0, #8368	; 0x20b0
   1cb40:	movt	r0, #6
   1cb44:	ldr	r0, [r0]
   1cb48:	movw	r1, #32746	; 0x7fea
   1cb4c:	movt	r1, #4
   1cb50:	str	r1, [sp]
   1cb54:	movw	r1, #26331	; 0x66db
   1cb58:	movt	r1, #3
   1cb5c:	movw	r4, #29336	; 0x7298
   1cb60:	movt	r4, #4
   1cb64:	mov	r2, r4
   1cb68:	movw	r3, #1358	; 0x54e
   1cb6c:	bl	149f4 <fprintf@plt>
   1cb70:	movw	r0, #30217	; 0x7609
   1cb74:	movt	r0, #4
   1cb78:	movw	r3, #32800	; 0x8020
   1cb7c:	movt	r3, #4
   1cb80:	mov	r1, r4
   1cb84:	movw	r2, #1358	; 0x54e
   1cb88:	bl	14ab4 <__assert_fail@plt>
   1cb8c:	push	{r4, sl, fp, lr}
   1cb90:	add	fp, sp, #8
   1cb94:	sub	sp, sp, #8
   1cb98:	sub	r0, r0, #1
   1cb9c:	cmp	r0, #9
   1cba0:	movwcc	r1, #33440	; 0x82a0
   1cba4:	movtcc	r1, #4
   1cba8:	ldrcc	r0, [r1, r0, lsl #2]
   1cbac:	subcc	sp, fp, #8
   1cbb0:	popcc	{r4, sl, fp, pc}
   1cbb4:	movw	r0, #8368	; 0x20b0
   1cbb8:	movt	r0, #6
   1cbbc:	ldr	r0, [r0]
   1cbc0:	movw	r1, #52924	; 0xcebc
   1cbc4:	movt	r1, #3
   1cbc8:	str	r1, [sp]
   1cbcc:	movw	r1, #26331	; 0x66db
   1cbd0:	movt	r1, #3
   1cbd4:	movw	r4, #52851	; 0xce73
   1cbd8:	movt	r4, #3
   1cbdc:	mov	r2, r4
   1cbe0:	mov	r3, #226	; 0xe2
   1cbe4:	bl	149f4 <fprintf@plt>
   1cbe8:	movw	r0, #30217	; 0x7609
   1cbec:	movt	r0, #4
   1cbf0:	movw	r3, #53175	; 0xcfb7
   1cbf4:	movt	r3, #3
   1cbf8:	mov	r1, r4
   1cbfc:	mov	r2, #226	; 0xe2
   1cc00:	bl	14ab4 <__assert_fail@plt>

0001cc04 <__flatcc_fb_gen_c_verifier@@Base>:
   1cc04:	push	{r4, sl, fp, lr}
   1cc08:	add	fp, sp, #8
   1cc0c:	mov	r4, r0
   1cc10:	bl	1cc44 <__flatcc_fb_gen_c_verifier@@Base+0x40>
   1cc14:	mov	r0, r4
   1cc18:	bl	1cd14 <__flatcc_fb_gen_c_verifier@@Base+0x110>
   1cc1c:	mov	r0, r4
   1cc20:	bl	1cda0 <__flatcc_fb_gen_c_verifier@@Base+0x19c>
   1cc24:	mov	r0, r4
   1cc28:	bl	1cde0 <__flatcc_fb_gen_c_verifier@@Base+0x1dc>
   1cc2c:	mov	r0, r4
   1cc30:	bl	1ce20 <__flatcc_fb_gen_c_verifier@@Base+0x21c>
   1cc34:	mov	r0, r4
   1cc38:	bl	1ce6c <__flatcc_fb_gen_c_verifier@@Base+0x268>
   1cc3c:	mov	r0, #0
   1cc40:	pop	{r4, sl, fp, pc}
   1cc44:	push	{r4, sl, fp, lr}
   1cc48:	add	fp, sp, #8
   1cc4c:	mov	r4, r0
   1cc50:	ldr	r0, [r0, #204]	; 0xcc
   1cc54:	ldr	r1, [r4, #208]	; 0xd0
   1cc58:	ldr	r2, [r1, #164]	; 0xa4
   1cc5c:	movw	r1, #33476	; 0x82c4
   1cc60:	movt	r1, #4
   1cc64:	mov	r3, r2
   1cc68:	bl	149f4 <fprintf@plt>
   1cc6c:	ldr	r3, [r4, #204]	; 0xcc
   1cc70:	movw	r0, #26034	; 0x65b2
   1cc74:	movt	r0, #3
   1cc78:	mov	r1, #81	; 0x51
   1cc7c:	mov	r2, #1
   1cc80:	bl	1497c <fwrite@plt>
   1cc84:	ldr	r0, [r4, #204]	; 0xcc
   1cc88:	ldr	r1, [r4, #208]	; 0xd0
   1cc8c:	ldr	r2, [r1, #164]	; 0xa4
   1cc90:	movw	r1, #29143	; 0x71d7
   1cc94:	movt	r1, #4
   1cc98:	bl	149f4 <fprintf@plt>
   1cc9c:	ldr	r0, [r4, #204]	; 0xcc
   1cca0:	ldr	r1, [r4, #208]	; 0xd0
   1cca4:	ldr	r2, [r1, #160]	; 0xa0
   1cca8:	movw	r1, #29164	; 0x71ec
   1ccac:	movt	r1, #4
   1ccb0:	bl	149f4 <fprintf@plt>
   1ccb4:	ldr	r3, [r4, #204]	; 0xcc
   1ccb8:	movw	r0, #51130	; 0xc7ba
   1ccbc:	movt	r0, #3
   1ccc0:	mov	r1, #7
   1ccc4:	mov	r2, #1
   1ccc8:	bl	1497c <fwrite@plt>
   1cccc:	ldr	r3, [r4, #204]	; 0xcc
   1ccd0:	movw	r0, #33521	; 0x82f1
   1ccd4:	movt	r0, #4
   1ccd8:	mov	r1, #36	; 0x24
   1ccdc:	mov	r2, #1
   1cce0:	bl	1497c <fwrite@plt>
   1cce4:	movw	r1, #25936	; 0x6550
   1cce8:	movt	r1, #3
   1ccec:	movw	r2, #33558	; 0x8316
   1ccf0:	movt	r2, #4
   1ccf4:	mov	r0, r4
   1ccf8:	bl	16650 <__flatcc_fb_gen_c_includes@@Base>
   1ccfc:	mov	r0, r4
   1cd00:	bl	1ce98 <__flatcc_fb_gen_c_verifier@@Base+0x294>
   1cd04:	ldr	r1, [r4, #204]	; 0xcc
   1cd08:	mov	r0, #10
   1cd0c:	pop	{r4, sl, fp, lr}
   1cd10:	b	14a54 <fputc@plt>
   1cd14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1cd18:	add	fp, sp, #24
   1cd1c:	sub	sp, sp, #224	; 0xe0
   1cd20:	mov	r4, r0
   1cd24:	mov	r0, sp
   1cd28:	mov	r1, #0
   1cd2c:	mov	r2, #220	; 0xdc
   1cd30:	bl	14a0c <memset@plt>
   1cd34:	ldr	r0, [r4, #208]	; 0xd0
   1cd38:	ldr	r5, [r0, #40]	; 0x28
   1cd3c:	cmp	r5, #0
   1cd40:	beq	1cd8c <__flatcc_fb_gen_c_verifier@@Base+0x188>
   1cd44:	mov	r6, sp
   1cd48:	movw	r7, #33570	; 0x8322
   1cd4c:	movt	r7, #4
   1cd50:	b	1cd60 <__flatcc_fb_gen_c_verifier@@Base+0x15c>
   1cd54:	ldr	r5, [r5]
   1cd58:	cmp	r5, #0
   1cd5c:	beq	1cd8c <__flatcc_fb_gen_c_verifier@@Base+0x188>
   1cd60:	ldrh	r0, [r5, #8]
   1cd64:	cmp	r0, #0
   1cd68:	bne	1cd54 <__flatcc_fb_gen_c_verifier@@Base+0x150>
   1cd6c:	mov	r0, r5
   1cd70:	mov	r1, r6
   1cd74:	bl	1cec0 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1cd78:	ldr	r0, [r4, #204]	; 0xcc
   1cd7c:	mov	r1, r7
   1cd80:	mov	r2, r6
   1cd84:	bl	149f4 <fprintf@plt>
   1cd88:	b	1cd54 <__flatcc_fb_gen_c_verifier@@Base+0x150>
   1cd8c:	ldr	r1, [r4, #204]	; 0xcc
   1cd90:	mov	r0, #10
   1cd94:	bl	14a54 <fputc@plt>
   1cd98:	sub	sp, fp, #24
   1cd9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cda0:	push	{r4, r5, fp, lr}
   1cda4:	add	fp, sp, #8
   1cda8:	mov	r4, r0
   1cdac:	ldr	r0, [r0, #208]	; 0xd0
   1cdb0:	ldr	r5, [r0, #40]	; 0x28
   1cdb4:	cmp	r5, #0
   1cdb8:	beq	1cddc <__flatcc_fb_gen_c_verifier@@Base+0x1d8>
   1cdbc:	ldrh	r0, [r5, #8]
   1cdc0:	cmp	r0, #4
   1cdc4:	moveq	r0, r4
   1cdc8:	moveq	r1, r5
   1cdcc:	bleq	1ced0 <__flatcc_fb_gen_c_verifier@@Base+0x2cc>
   1cdd0:	ldr	r5, [r5]
   1cdd4:	cmp	r5, #0
   1cdd8:	bne	1cdbc <__flatcc_fb_gen_c_verifier@@Base+0x1b8>
   1cddc:	pop	{r4, r5, fp, pc}
   1cde0:	push	{r4, r5, fp, lr}
   1cde4:	add	fp, sp, #8
   1cde8:	mov	r4, r0
   1cdec:	ldr	r0, [r0, #208]	; 0xd0
   1cdf0:	ldr	r5, [r0, #40]	; 0x28
   1cdf4:	cmp	r5, #0
   1cdf8:	beq	1ce1c <__flatcc_fb_gen_c_verifier@@Base+0x218>
   1cdfc:	ldrh	r0, [r5, #8]
   1ce00:	cmp	r0, #1
   1ce04:	moveq	r0, r4
   1ce08:	moveq	r1, r5
   1ce0c:	bleq	1d110 <__flatcc_fb_gen_c_verifier@@Base+0x50c>
   1ce10:	ldr	r5, [r5]
   1ce14:	cmp	r5, #0
   1ce18:	bne	1cdfc <__flatcc_fb_gen_c_verifier@@Base+0x1f8>
   1ce1c:	pop	{r4, r5, fp, pc}
   1ce20:	push	{r4, r5, fp, lr}
   1ce24:	add	fp, sp, #8
   1ce28:	mov	r4, r0
   1ce2c:	ldr	r0, [r0, #208]	; 0xd0
   1ce30:	ldr	r5, [r0, #40]	; 0x28
   1ce34:	cmp	r5, #0
   1ce38:	bne	1ce4c <__flatcc_fb_gen_c_verifier@@Base+0x248>
   1ce3c:	b	1ce68 <__flatcc_fb_gen_c_verifier@@Base+0x264>
   1ce40:	ldr	r5, [r5]
   1ce44:	cmp	r5, #0
   1ce48:	beq	1ce68 <__flatcc_fb_gen_c_verifier@@Base+0x264>
   1ce4c:	ldrh	r0, [r5, #8]
   1ce50:	cmp	r0, #0
   1ce54:	bne	1ce40 <__flatcc_fb_gen_c_verifier@@Base+0x23c>
   1ce58:	mov	r0, r4
   1ce5c:	mov	r1, r5
   1ce60:	bl	1d1e8 <__flatcc_fb_gen_c_verifier@@Base+0x5e4>
   1ce64:	b	1ce40 <__flatcc_fb_gen_c_verifier@@Base+0x23c>
   1ce68:	pop	{r4, r5, fp, pc}
   1ce6c:	push	{r4, sl, fp, lr}
   1ce70:	add	fp, sp, #8
   1ce74:	mov	r4, r0
   1ce78:	bl	1d71c <__flatcc_fb_gen_c_verifier@@Base+0xb18>
   1ce7c:	ldr	r0, [r4, #204]	; 0xcc
   1ce80:	ldr	r1, [r4, #208]	; 0xd0
   1ce84:	ldr	r2, [r1, #164]	; 0xa4
   1ce88:	movw	r1, #36579	; 0x8ee3
   1ce8c:	movt	r1, #4
   1ce90:	pop	{r4, sl, fp, lr}
   1ce94:	b	149f4 <fprintf@plt>
   1ce98:	ldr	r1, [r0, #212]	; 0xd4
   1ce9c:	ldr	r1, [r1, #140]	; 0x8c
   1cea0:	cmp	r1, #0
   1cea4:	bxeq	lr
   1cea8:	ldr	r3, [r0, #204]	; 0xcc
   1ceac:	movw	r0, #26510	; 0x678e
   1ceb0:	movt	r0, #3
   1ceb4:	mov	r1, #36	; 0x24
   1ceb8:	mov	r2, #1
   1cebc:	b	1497c <fwrite@plt>
   1cec0:	mov	r2, r1
   1cec4:	mov	r1, r0
   1cec8:	ldr	r0, [r0, #12]
   1cecc:	b	16838 <__flatcc_fb_scoped_symbol_name@@Base>
   1ced0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ced4:	add	fp, sp, #28
   1ced8:	sub	sp, sp, #484	; 0x1e4
   1cedc:	mov	r5, r1
   1cee0:	mov	r9, r0
   1cee4:	add	r6, sp, #256	; 0x100
   1cee8:	mov	r0, r6
   1ceec:	mov	r1, #0
   1cef0:	mov	r2, #220	; 0xdc
   1cef4:	bl	14a0c <memset@plt>
   1cef8:	add	r0, sp, #32
   1cefc:	mov	r1, #0
   1cf00:	mov	r2, #220	; 0xdc
   1cf04:	bl	14a0c <memset@plt>
   1cf08:	mov	r0, r5
   1cf0c:	mov	r1, r6
   1cf10:	bl	1cec0 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1cf14:	ldr	r0, [r9, #204]	; 0xcc
   1cf18:	movw	r1, #33639	; 0x8367
   1cf1c:	movt	r1, #4
   1cf20:	mov	r2, r6
   1cf24:	bl	149f4 <fprintf@plt>
   1cf28:	ldr	r5, [r5, #20]
   1cf2c:	cmp	r5, #0
   1cf30:	beq	1d034 <__flatcc_fb_gen_c_verifier@@Base+0x430>
   1cf34:	add	r8, sp, #28
   1cf38:	add	sl, sp, #24
   1cf3c:	movw	r4, #34091	; 0x852b
   1cf40:	movt	r4, #4
   1cf44:	add	r6, sp, #32
   1cf48:	b	1cf74 <__flatcc_fb_gen_c_verifier@@Base+0x370>
   1cf4c:	ldr	r2, [r5, #48]	; 0x30
   1cf50:	ldr	r0, [r9, #204]	; 0xcc
   1cf54:	ldr	r3, [sp, #28]
   1cf58:	ldr	r1, [sp, #24]
   1cf5c:	str	r1, [sp]
   1cf60:	mov	r1, r4
   1cf64:	bl	149f4 <fprintf@plt>
   1cf68:	ldr	r5, [r5]
   1cf6c:	cmp	r5, #0
   1cf70:	beq	1d034 <__flatcc_fb_gen_c_verifier@@Base+0x430>
   1cf74:	mov	r0, r5
   1cf78:	mov	r1, r8
   1cf7c:	mov	r2, sl
   1cf80:	bl	1d0f4 <__flatcc_fb_gen_c_verifier@@Base+0x4f0>
   1cf84:	ldrh	r0, [r5, #24]
   1cf88:	cmp	r0, #0
   1cf8c:	beq	1cf68 <__flatcc_fb_gen_c_verifier@@Base+0x364>
   1cf90:	cmp	r0, #10
   1cf94:	beq	1cf4c <__flatcc_fb_gen_c_verifier@@Base+0x348>
   1cf98:	cmp	r0, #14
   1cf9c:	bne	1d054 <__flatcc_fb_gen_c_verifier@@Base+0x450>
   1cfa0:	ldr	r0, [r5, #16]
   1cfa4:	mov	r1, r6
   1cfa8:	bl	1cec0 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1cfac:	ldr	r1, [r5, #16]
   1cfb0:	ldrh	r0, [r1, #8]
   1cfb4:	cmp	r0, #1
   1cfb8:	beq	1cfe8 <__flatcc_fb_gen_c_verifier@@Base+0x3e4>
   1cfbc:	cmp	r0, #0
   1cfc0:	bne	1d0a4 <__flatcc_fb_gen_c_verifier@@Base+0x4a0>
   1cfc4:	ldr	r2, [r5, #48]	; 0x30
   1cfc8:	ldr	r0, [r9, #204]	; 0xcc
   1cfcc:	ldr	r1, [sp, #28]
   1cfd0:	ldr	r3, [sp, #24]
   1cfd4:	stm	sp, {r1, r3}
   1cfd8:	movw	r1, #33735	; 0x83c7
   1cfdc:	movt	r1, #4
   1cfe0:	mov	r3, r6
   1cfe4:	b	1cf64 <__flatcc_fb_gen_c_verifier@@Base+0x360>
   1cfe8:	ldr	r2, [r5, #48]	; 0x30
   1cfec:	ldr	r0, [r9, #204]	; 0xcc
   1cff0:	ldr	r3, [r1, #112]	; 0x70
   1cff4:	ldr	r7, [r1, #116]	; 0x74
   1cff8:	ldrh	r1, [r1, #104]	; 0x68
   1cffc:	mov	lr, r6
   1d000:	ldr	r6, [sp, #28]
   1d004:	mov	ip, r4
   1d008:	ldr	r4, [sp, #24]
   1d00c:	stm	sp, {r3, r7}
   1d010:	str	r1, [sp, #8]
   1d014:	str	r6, [sp, #12]
   1d018:	mov	r6, lr
   1d01c:	str	r4, [sp, #16]
   1d020:	mov	r4, ip
   1d024:	movw	r1, #33815	; 0x8417
   1d028:	movt	r1, #4
   1d02c:	bl	149f4 <fprintf@plt>
   1d030:	b	1cf68 <__flatcc_fb_gen_c_verifier@@Base+0x364>
   1d034:	ldr	r3, [r9, #204]	; 0xcc
   1d038:	movw	r0, #34206	; 0x859e
   1d03c:	movt	r0, #4
   1d040:	mov	r1, #47	; 0x2f
   1d044:	mov	r2, #1
   1d048:	bl	1497c <fwrite@plt>
   1d04c:	sub	sp, fp, #28
   1d050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d054:	movw	r0, #8368	; 0x20b0
   1d058:	movt	r0, #6
   1d05c:	ldr	r0, [r0]
   1d060:	movw	r1, #34155	; 0x856b
   1d064:	movt	r1, #4
   1d068:	str	r1, [sp]
   1d06c:	movw	r1, #26331	; 0x66db
   1d070:	movt	r1, #3
   1d074:	movw	r4, #33889	; 0x8461
   1d078:	movt	r4, #4
   1d07c:	mov	r2, r4
   1d080:	mov	r3, #83	; 0x53
   1d084:	bl	149f4 <fprintf@plt>
   1d088:	movw	r0, #30217	; 0x7609
   1d08c:	movt	r0, #4
   1d090:	movw	r3, #34031	; 0x84ef
   1d094:	movt	r3, #4
   1d098:	mov	r1, r4
   1d09c:	mov	r2, #83	; 0x53
   1d0a0:	bl	14ab4 <__assert_fail@plt>
   1d0a4:	movw	r0, #8368	; 0x20b0
   1d0a8:	movt	r0, #6
   1d0ac:	ldr	r0, [r0]
   1d0b0:	movw	r1, #33971	; 0x84b3
   1d0b4:	movt	r1, #4
   1d0b8:	str	r1, [sp]
   1d0bc:	movw	r1, #26331	; 0x66db
   1d0c0:	movt	r1, #3
   1d0c4:	movw	r4, #33889	; 0x8461
   1d0c8:	movt	r4, #4
   1d0cc:	mov	r2, r4
   1d0d0:	mov	r3, #74	; 0x4a
   1d0d4:	bl	149f4 <fprintf@plt>
   1d0d8:	movw	r0, #30217	; 0x7609
   1d0dc:	movt	r0, #4
   1d0e0:	movw	r3, #34031	; 0x84ef
   1d0e4:	movt	r3, #4
   1d0e8:	mov	r1, r4
   1d0ec:	mov	r2, #74	; 0x4a
   1d0f0:	bl	14ab4 <__assert_fail@plt>
   1d0f4:	ldr	r0, [r0, #4]
   1d0f8:	b	1d0fc <__flatcc_fb_gen_c_verifier@@Base+0x4f8>
   1d0fc:	ldr	r3, [r0, #4]
   1d100:	str	r3, [r1]
   1d104:	ldr	r0, [r0]
   1d108:	str	r0, [r2]
   1d10c:	bx	lr
   1d110:	push	{r4, r5, r6, sl, fp, lr}
   1d114:	add	fp, sp, #16
   1d118:	sub	sp, sp, #240	; 0xf0
   1d11c:	mov	r5, r1
   1d120:	mov	r6, r0
   1d124:	add	r4, sp, #16
   1d128:	mov	r0, r4
   1d12c:	mov	r1, #0
   1d130:	mov	r2, #220	; 0xdc
   1d134:	bl	14a0c <memset@plt>
   1d138:	mov	r0, r5
   1d13c:	mov	r1, r4
   1d140:	bl	1cec0 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1d144:	ldr	r0, [r6, #204]	; 0xcc
   1d148:	ldrd	r2, [r5, #112]	; 0x70
   1d14c:	ldrh	r1, [r5, #104]	; 0x68
   1d150:	stm	sp, {r2, r3}
   1d154:	str	r1, [sp, #8]
   1d158:	movw	r1, #34254	; 0x85ce
   1d15c:	movt	r1, #4
   1d160:	mov	r2, r4
   1d164:	mov	r3, r4
   1d168:	bl	149f4 <fprintf@plt>
   1d16c:	ldr	r0, [r6, #204]	; 0xcc
   1d170:	ldrd	r2, [r5, #112]	; 0x70
   1d174:	ldrh	r1, [r5, #104]	; 0x68
   1d178:	stm	sp, {r2, r3}
   1d17c:	str	r1, [sp, #8]
   1d180:	movw	r1, #34407	; 0x8667
   1d184:	movt	r1, #4
   1d188:	mov	r2, r4
   1d18c:	mov	r3, r4
   1d190:	bl	149f4 <fprintf@plt>
   1d194:	ldr	r0, [r6, #204]	; 0xcc
   1d198:	ldrd	r2, [r5, #112]	; 0x70
   1d19c:	ldrh	r1, [r5, #104]	; 0x68
   1d1a0:	stm	sp, {r2, r3}
   1d1a4:	str	r1, [sp, #8]
   1d1a8:	movw	r1, #34571	; 0x870b
   1d1ac:	movt	r1, #4
   1d1b0:	mov	r2, r4
   1d1b4:	mov	r3, r6
   1d1b8:	bl	149f4 <fprintf@plt>
   1d1bc:	ldr	r0, [r6, #204]	; 0xcc
   1d1c0:	ldrd	r2, [r5, #112]	; 0x70
   1d1c4:	ldrh	r1, [r5, #104]	; 0x68
   1d1c8:	stm	sp, {r2, r3}
   1d1cc:	str	r1, [sp, #8]
   1d1d0:	movw	r1, #34754	; 0x87c2
   1d1d4:	movt	r1, #4
   1d1d8:	mov	r2, r4
   1d1dc:	bl	149f4 <fprintf@plt>
   1d1e0:	sub	sp, fp, #16
   1d1e4:	pop	{r4, r5, r6, sl, fp, pc}
   1d1e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1ec:	add	fp, sp, #28
   1d1f0:	sub	sp, sp, #484	; 0x1e4
   1d1f4:	mov	r7, r1
   1d1f8:	mov	r4, r0
   1d1fc:	add	r5, sp, #256	; 0x100
   1d200:	mov	r0, r5
   1d204:	mov	r1, #0
   1d208:	mov	r2, #220	; 0xdc
   1d20c:	bl	14a0c <memset@plt>
   1d210:	add	r0, sp, #32
   1d214:	mov	r1, #0
   1d218:	mov	r2, #220	; 0xdc
   1d21c:	bl	14a0c <memset@plt>
   1d220:	mov	r0, r7
   1d224:	mov	r1, r5
   1d228:	bl	1cec0 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1d22c:	ldr	r0, [r4, #204]	; 0xcc
   1d230:	movw	r1, #34930	; 0x8872
   1d234:	movt	r1, #4
   1d238:	mov	r2, r5
   1d23c:	bl	149f4 <fprintf@plt>
   1d240:	ldr	sl, [r7, #20]
   1d244:	cmp	sl, #0
   1d248:	beq	1d5d4 <__flatcc_fb_gen_c_verifier@@Base+0x9d0>
   1d24c:	mov	r0, #1
   1d250:	movw	r7, #38679	; 0x9717
   1d254:	movt	r7, #4
   1d258:	add	r5, sp, #32
   1d25c:	b	1d2a0 <__flatcc_fb_gen_c_verifier@@Base+0x69c>
   1d260:	ldrd	r2, [r6]
   1d264:	ldr	r0, [r4, #204]	; 0xcc
   1d268:	str	r8, [sp]
   1d26c:	movw	r1, #35344	; 0x8a10
   1d270:	movt	r1, #4
   1d274:	bl	149f4 <fprintf@plt>
   1d278:	ldr	r0, [r4, #204]	; 0xcc
   1d27c:	ldr	r1, [sl, #4]
   1d280:	ldr	r3, [r1]
   1d284:	ldr	r2, [r1, #4]
   1d288:	mov	r1, r7
   1d28c:	bl	149f4 <fprintf@plt>
   1d290:	mov	r0, #0
   1d294:	ldr	sl, [sl]
   1d298:	cmp	sl, #0
   1d29c:	beq	1d5b4 <__flatcc_fb_gen_c_verifier@@Base+0x9b0>
   1d2a0:	ldrb	r1, [sl, #72]	; 0x48
   1d2a4:	tst	r1, #4
   1d2a8:	bne	1d294 <__flatcc_fb_gen_c_verifier@@Base+0x690>
   1d2ac:	ldr	r3, [r4, #204]	; 0xcc
   1d2b0:	cmp	r0, #0
   1d2b4:	beq	1d2c8 <__flatcc_fb_gen_c_verifier@@Base+0x6c4>
   1d2b8:	movw	r0, #35000	; 0x88b8
   1d2bc:	movt	r0, #4
   1d2c0:	mov	r1, #28
   1d2c4:	b	1d2d4 <__flatcc_fb_gen_c_verifier@@Base+0x6d0>
   1d2c8:	movw	r0, #35029	; 0x88d5
   1d2cc:	movt	r0, #4
   1d2d0:	mov	r1, #30
   1d2d4:	mov	r2, #1
   1d2d8:	bl	1497c <fwrite@plt>
   1d2dc:	ldrh	r0, [sl, #72]	; 0x48
   1d2e0:	ubfx	r8, r0, #8, #1
   1d2e4:	ldrh	r0, [sl, #24]
   1d2e8:	sub	r0, r0, #7
   1d2ec:	cmp	r0, #8
   1d2f0:	bhi	1d278 <__flatcc_fb_gen_c_verifier@@Base+0x674>
   1d2f4:	add	r9, sl, #88	; 0x58
   1d2f8:	add	r6, sl, #96	; 0x60
   1d2fc:	add	r1, pc, #0
   1d300:	ldr	pc, [r1, r0, lsl #2]
   1d304:	andeq	sp, r1, r8, lsr #6
   1d308:	andeq	sp, r1, r0, lsr #8
   1d30c:	andeq	sp, r1, r0, ror #4
   1d310:	andeq	sp, r1, r8, asr #8
   1d314:	andeq	sp, r1, r8, ror r2
   1d318:	andeq	sp, r1, r8, ror r2
   1d31c:	andeq	sp, r1, r8, ror r2
   1d320:	andeq	sp, r1, r0, ror #8
   1d324:	andeq	sp, r1, r0, lsl #7
   1d328:	ldr	r0, [sl, #104]	; 0x68
   1d32c:	cmp	r0, #0
   1d330:	beq	1d4c4 <__flatcc_fb_gen_c_verifier@@Base+0x8c0>
   1d334:	mov	r1, r5
   1d338:	bl	1cec0 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1d33c:	ldrd	r2, [r6]
   1d340:	ldr	r0, [r4, #204]	; 0xcc
   1d344:	ldr	r1, [sl, #104]	; 0x68
   1d348:	ldrh	r1, [r1, #8]
   1d34c:	cmp	r1, #0
   1d350:	beq	1d59c <__flatcc_fb_gen_c_verifier@@Base+0x998>
   1d354:	ldrd	r6, [r9]
   1d358:	ldrh	r1, [sl, #74]	; 0x4a
   1d35c:	str	r6, [sp, #8]
   1d360:	str	r7, [sp, #12]
   1d364:	movw	r7, #38679	; 0x9717
   1d368:	movt	r7, #4
   1d36c:	str	r1, [sp, #16]
   1d370:	str	r8, [sp]
   1d374:	movw	r1, #35173	; 0x8965
   1d378:	movt	r1, #4
   1d37c:	b	1d274 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1d380:	ldr	r0, [sl, #16]
   1d384:	mov	r1, r5
   1d388:	bl	1cec0 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1d38c:	ldr	r0, [sl, #16]
   1d390:	ldrh	r0, [r0, #8]
   1d394:	cmp	r0, #4
   1d398:	bhi	1d67c <__flatcc_fb_gen_c_verifier@@Base+0xa78>
   1d39c:	add	r1, pc, #0
   1d3a0:	ldr	pc, [r1, r0, lsl #2]
   1d3a4:	andeq	sp, r1, ip, lsr #10
   1d3a8:			; <UNDEFINED> instruction: 0x0001d3b8
   1d3ac:	andeq	sp, r1, ip, ror r6
   1d3b0:			; <UNDEFINED> instruction: 0x0001d3b8
   1d3b4:	andeq	sp, r1, r8, asr #10
   1d3b8:	ldm	r9, {r5, r7}
   1d3bc:	orrs	r3, r5, r7
   1d3c0:	mov	r2, r5
   1d3c4:	movweq	r2, #1
   1d3c8:	movne	r3, r7
   1d3cc:	mvn	r0, #0
   1d3d0:	mov	r1, #0
   1d3d4:	bl	349cc <fb_value_set_visit@@Base+0x6c0>
   1d3d8:	ldm	r6, {r6, r9}
   1d3dc:	ldr	r2, [r4, #204]	; 0xcc
   1d3e0:	ldrh	r3, [sl, #74]	; 0x4a
   1d3e4:	str	r5, [sp, #8]
   1d3e8:	add	r5, sp, #32
   1d3ec:	str	r7, [sp, #12]
   1d3f0:	movw	r7, #38679	; 0x9717
   1d3f4:	movt	r7, #4
   1d3f8:	str	r3, [sp, #16]
   1d3fc:	str	r8, [sp]
   1d400:	str	r0, [sp, #24]
   1d404:	str	r1, [sp, #28]
   1d408:	mov	r0, r2
   1d40c:	movw	r1, #35237	; 0x89a5
   1d410:	movt	r1, #4
   1d414:	mov	r2, r6
   1d418:	mov	r3, r9
   1d41c:	b	1d274 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1d420:	ldrd	r2, [r6]
   1d424:	ldr	r0, [r4, #204]	; 0xcc
   1d428:	ldr	r6, [r9]
   1d42c:	ldr	r1, [r9, #4]
   1d430:	ldrh	r7, [sl, #74]	; 0x4a
   1d434:	str	r6, [sp]
   1d438:	stmib	sp, {r1, r7}
   1d43c:	movw	r7, #38679	; 0x9717
   1d440:	movt	r7, #4
   1d444:	b	1d4b8 <__flatcc_fb_gen_c_verifier@@Base+0x8b4>
   1d448:	ldrd	r2, [r6]
   1d44c:	ldr	r0, [r4, #204]	; 0xcc
   1d450:	str	r8, [sp]
   1d454:	movw	r1, #35303	; 0x89e7
   1d458:	movt	r1, #4
   1d45c:	b	1d274 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1d460:	ldr	r0, [sl, #16]
   1d464:	mov	r1, r5
   1d468:	bl	1cec0 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1d46c:	ldr	r0, [sl, #16]
   1d470:	ldrh	r0, [r0, #8]
   1d474:	cmp	r0, #4
   1d478:	bhi	1d6cc <__flatcc_fb_gen_c_verifier@@Base+0xac8>
   1d47c:	add	r1, pc, #0
   1d480:	ldr	pc, [r1, r0, lsl #2]
   1d484:	andeq	sp, r1, r4, ror #10
   1d488:	muleq	r1, r8, r4
   1d48c:	andeq	sp, r1, ip, asr #13
   1d490:	muleq	r1, r8, r4
   1d494:	andeq	sp, r1, r0, lsl #11
   1d498:	ldrd	r2, [r6]
   1d49c:	ldr	r0, [r4, #204]	; 0xcc
   1d4a0:	ldrd	r6, [r9]
   1d4a4:	ldrh	r1, [sl, #74]	; 0x4a
   1d4a8:	stm	sp, {r6, r7}
   1d4ac:	movw	r7, #38679	; 0x9717
   1d4b0:	movt	r7, #4
   1d4b4:	str	r1, [sp, #8]
   1d4b8:	movw	r1, #35060	; 0x88f4
   1d4bc:	movt	r1, #4
   1d4c0:	b	1d274 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1d4c4:	ldm	r9, {r7, r9}
   1d4c8:	orrs	r3, r7, r9
   1d4cc:	mov	r2, r7
   1d4d0:	movweq	r2, #1
   1d4d4:	movne	r3, r9
   1d4d8:	mvn	r0, #0
   1d4dc:	mov	r1, #0
   1d4e0:	bl	349cc <fb_value_set_visit@@Base+0x6c0>
   1d4e4:	ldr	r3, [r6, #4]
   1d4e8:	ldr	r6, [r6]
   1d4ec:	ldr	r2, [r4, #204]	; 0xcc
   1d4f0:	ldrh	r5, [sl, #74]	; 0x4a
   1d4f4:	str	r7, [sp, #8]
   1d4f8:	movw	r7, #38679	; 0x9717
   1d4fc:	movt	r7, #4
   1d500:	str	r9, [sp, #12]
   1d504:	str	r5, [sp, #16]
   1d508:	add	r5, sp, #32
   1d50c:	str	r8, [sp]
   1d510:	str	r0, [sp, #24]
   1d514:	str	r1, [sp, #28]
   1d518:	mov	r0, r2
   1d51c:	movw	r1, #35237	; 0x89a5
   1d520:	movt	r1, #4
   1d524:	mov	r2, r6
   1d528:	b	1d274 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1d52c:	ldrd	r2, [r6]
   1d530:	ldr	r0, [r4, #204]	; 0xcc
   1d534:	str	r8, [sp]
   1d538:	str	r5, [sp, #4]
   1d53c:	movw	r1, #35630	; 0x8b2e
   1d540:	movt	r1, #4
   1d544:	b	1d274 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1d548:	ldrd	r2, [r6]
   1d54c:	ldr	r0, [r4, #204]	; 0xcc
   1d550:	str	r8, [sp]
   1d554:	str	r5, [sp, #4]
   1d558:	movw	r1, #35695	; 0x8b6f
   1d55c:	movt	r1, #4
   1d560:	b	1d274 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1d564:	ldrd	r2, [r6]
   1d568:	ldr	r0, [r4, #204]	; 0xcc
   1d56c:	str	r8, [sp]
   1d570:	str	r5, [sp, #4]
   1d574:	movw	r1, #35392	; 0x8a40
   1d578:	movt	r1, #4
   1d57c:	b	1d274 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1d580:	ldrd	r2, [r6]
   1d584:	ldr	r0, [r4, #204]	; 0xcc
   1d588:	str	r8, [sp]
   1d58c:	str	r5, [sp, #4]
   1d590:	movw	r1, #35450	; 0x8a7a
   1d594:	movt	r1, #4
   1d598:	b	1d274 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1d59c:	ldrh	r1, [sl, #74]	; 0x4a
   1d5a0:	str	r8, [sp]
   1d5a4:	stmib	sp, {r1, r5}
   1d5a8:	movw	r1, #35100	; 0x891c
   1d5ac:	movt	r1, #4
   1d5b0:	b	1d274 <__flatcc_fb_gen_c_verifier@@Base+0x670>
   1d5b4:	cmp	r0, #0
   1d5b8:	bne	1d5d4 <__flatcc_fb_gen_c_verifier@@Base+0x9d0>
   1d5bc:	ldr	r3, [r4, #204]	; 0xcc
   1d5c0:	movw	r0, #35829	; 0x8bf5
   1d5c4:	movt	r0, #4
   1d5c8:	mov	r1, #15
   1d5cc:	mov	r2, #1
   1d5d0:	bl	1497c <fwrite@plt>
   1d5d4:	ldr	r3, [r4, #204]	; 0xcc
   1d5d8:	movw	r0, #35845	; 0x8c05
   1d5dc:	movt	r0, #4
   1d5e0:	mov	r1, #29
   1d5e4:	mov	r2, #1
   1d5e8:	bl	1497c <fwrite@plt>
   1d5ec:	ldr	r3, [r4, #204]	; 0xcc
   1d5f0:	movw	r0, #52404	; 0xccb4
   1d5f4:	movt	r0, #4
   1d5f8:	mov	r1, #3
   1d5fc:	mov	r2, #1
   1d600:	bl	1497c <fwrite@plt>
   1d604:	ldr	r0, [r4, #204]	; 0xcc
   1d608:	add	r5, sp, #256	; 0x100
   1d60c:	str	r5, [sp]
   1d610:	movw	r1, #35875	; 0x8c23
   1d614:	movt	r1, #4
   1d618:	mov	r2, r5
   1d61c:	mov	r3, r5
   1d620:	bl	149f4 <fprintf@plt>
   1d624:	ldr	r0, [r4, #204]	; 0xcc
   1d628:	str	r5, [sp]
   1d62c:	movw	r1, #36035	; 0x8cc3
   1d630:	movt	r1, #4
   1d634:	mov	r2, r5
   1d638:	mov	r3, r5
   1d63c:	bl	149f4 <fprintf@plt>
   1d640:	ldr	r0, [r4, #204]	; 0xcc
   1d644:	movw	r1, #36206	; 0x8d6e
   1d648:	movt	r1, #4
   1d64c:	mov	r2, r5
   1d650:	mov	r3, r5
   1d654:	bl	149f4 <fprintf@plt>
   1d658:	ldr	r0, [r4, #204]	; 0xcc
   1d65c:	str	r5, [sp]
   1d660:	movw	r1, #36389	; 0x8e25
   1d664:	movt	r1, #4
   1d668:	mov	r2, r5
   1d66c:	mov	r3, r4
   1d670:	bl	149f4 <fprintf@plt>
   1d674:	sub	sp, fp, #28
   1d678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d67c:	movw	r0, #8368	; 0x20b0
   1d680:	movt	r0, #6
   1d684:	ldr	r0, [r0]
   1d688:	movw	r1, #35762	; 0x8bb2
   1d68c:	movt	r1, #4
   1d690:	str	r1, [sp]
   1d694:	movw	r1, #26331	; 0x66db
   1d698:	movt	r1, #3
   1d69c:	movw	r4, #33889	; 0x8461
   1d6a0:	movt	r4, #4
   1d6a4:	mov	r2, r4
   1d6a8:	mov	r3, #202	; 0xca
   1d6ac:	bl	149f4 <fprintf@plt>
   1d6b0:	movw	r0, #30217	; 0x7609
   1d6b4:	movt	r0, #4
   1d6b8:	movw	r3, #35570	; 0x8af2
   1d6bc:	movt	r3, #4
   1d6c0:	mov	r1, r4
   1d6c4:	mov	r2, #202	; 0xca
   1d6c8:	bl	14ab4 <__assert_fail@plt>
   1d6cc:	movw	r0, #8368	; 0x20b0
   1d6d0:	movt	r0, #6
   1d6d4:	ldr	r0, [r0]
   1d6d8:	movw	r1, #35510	; 0x8ab6
   1d6dc:	movt	r1, #4
   1d6e0:	str	r1, [sp]
   1d6e4:	movw	r1, #26331	; 0x66db
   1d6e8:	movt	r1, #3
   1d6ec:	movw	r4, #33889	; 0x8461
   1d6f0:	movt	r4, #4
   1d6f4:	mov	r2, r4
   1d6f8:	mov	r3, #178	; 0xb2
   1d6fc:	bl	149f4 <fprintf@plt>
   1d700:	movw	r0, #30217	; 0x7609
   1d704:	movt	r0, #4
   1d708:	movw	r3, #35570	; 0x8af2
   1d70c:	movt	r3, #4
   1d710:	mov	r1, r4
   1d714:	mov	r2, #178	; 0xb2
   1d718:	bl	14ab4 <__assert_fail@plt>
   1d71c:	ldr	r1, [r0, #212]	; 0xd4
   1d720:	ldr	r1, [r1, #140]	; 0x8c
   1d724:	cmp	r1, #0
   1d728:	bxeq	lr
   1d72c:	ldr	r3, [r0, #204]	; 0xcc
   1d730:	movw	r0, #50552	; 0xc578
   1d734:	movt	r0, #3
   1d738:	mov	r1, #36	; 0x24
   1d73c:	mov	r2, #1
   1d740:	b	1497c <fwrite@plt>

0001d744 <__flatcc_fb_gen_c_json_parser@@Base>:
   1d744:	push	{r4, sl, fp, lr}
   1d748:	add	fp, sp, #8
   1d74c:	mov	r4, r0
   1d750:	bl	1d774 <__flatcc_fb_gen_c_json_parser@@Base+0x30>
   1d754:	mov	r0, r4
   1d758:	bl	1d820 <__flatcc_fb_gen_c_json_parser@@Base+0xdc>
   1d75c:	mov	r0, r4
   1d760:	bl	1dbdc <__flatcc_fb_gen_c_json_parser@@Base+0x498>
   1d764:	mov	r0, r4
   1d768:	bl	1dcc0 <__flatcc_fb_gen_c_json_parser@@Base+0x57c>
   1d76c:	mov	r0, #0
   1d770:	pop	{r4, sl, fp, pc}
   1d774:	push	{r4, r5, fp, lr}
   1d778:	add	fp, sp, #8
   1d77c:	mov	r4, r0
   1d780:	ldr	r0, [r0, #208]	; 0xd0
   1d784:	ldr	r2, [r0, #164]	; 0xa4
   1d788:	movw	r1, #36607	; 0x8eff
   1d78c:	movt	r1, #4
   1d790:	mov	r0, r4
   1d794:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d798:	ldr	r0, [r4, #208]	; 0xd0
   1d79c:	ldr	r2, [r0, #164]	; 0xa4
   1d7a0:	movw	r1, #36632	; 0x8f18
   1d7a4:	movt	r1, #4
   1d7a8:	mov	r0, r4
   1d7ac:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d7b0:	movw	r5, #26588	; 0x67dc
   1d7b4:	movt	r5, #3
   1d7b8:	mov	r0, r4
   1d7bc:	mov	r1, r5
   1d7c0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d7c4:	movw	r1, #36657	; 0x8f31
   1d7c8:	movt	r1, #4
   1d7cc:	mov	r0, r4
   1d7d0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d7d4:	mov	r0, r4
   1d7d8:	mov	r1, r5
   1d7dc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d7e0:	movw	r1, #36736	; 0x8f80
   1d7e4:	movt	r1, #4
   1d7e8:	mov	r0, r4
   1d7ec:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d7f0:	movw	r1, #25948	; 0x655c
   1d7f4:	movt	r1, #3
   1d7f8:	movw	r2, #36642	; 0x8f22
   1d7fc:	movt	r2, #4
   1d800:	mov	r0, r4
   1d804:	bl	16650 <__flatcc_fb_gen_c_includes@@Base>
   1d808:	mov	r0, r4
   1d80c:	bl	1dde8 <__flatcc_fb_gen_c_json_parser@@Base+0x6a4>
   1d810:	mov	r0, r4
   1d814:	mov	r1, r5
   1d818:	pop	{r4, r5, fp, lr}
   1d81c:	b	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d824:	add	fp, sp, #28
   1d828:	sub	sp, sp, #228	; 0xe4
   1d82c:	mov	r4, r0
   1d830:	ldr	r0, [r0, #208]	; 0xd0
   1d834:	ldr	r5, [r0, #52]	; 0x34
   1d838:	mov	r0, sp
   1d83c:	mov	r1, #0
   1d840:	mov	r2, #220	; 0xdc
   1d844:	bl	14a0c <memset@plt>
   1d848:	cmp	r5, #0
   1d84c:	beq	1d950 <__flatcc_fb_gen_c_json_parser@@Base+0x20c>
   1d850:	ldrh	r0, [r5, #8]
   1d854:	cmp	r0, #1
   1d858:	bhi	1d950 <__flatcc_fb_gen_c_json_parser@@Base+0x20c>
   1d85c:	movw	r1, #36775	; 0x8fa7
   1d860:	movt	r1, #4
   1d864:	mov	r0, r4
   1d868:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d86c:	movw	r1, #36778	; 0x8faa
   1d870:	movt	r1, #4
   1d874:	mov	r0, r4
   1d878:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d87c:	movw	r1, #36864	; 0x9000
   1d880:	movt	r1, #4
   1d884:	mov	r0, r4
   1d888:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d88c:	movw	r1, #36867	; 0x9003
   1d890:	movt	r1, #4
   1d894:	mov	r0, r4
   1d898:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d89c:	movw	r1, #36935	; 0x9047
   1d8a0:	movt	r1, #4
   1d8a4:	mov	r0, r4
   1d8a8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d8ac:	movw	r1, #36989	; 0x907d
   1d8b0:	movt	r1, #4
   1d8b4:	mov	r0, r4
   1d8b8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d8bc:	movw	r1, #37029	; 0x90a5
   1d8c0:	movt	r1, #4
   1d8c4:	mov	r0, r4
   1d8c8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d8cc:	movw	r1, #37101	; 0x90ed
   1d8d0:	movt	r1, #4
   1d8d4:	mov	r0, r4
   1d8d8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d8dc:	movw	r1, #40686	; 0x9eee
   1d8e0:	movt	r1, #4
   1d8e4:	mov	r0, r4
   1d8e8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d8ec:	ldr	r0, [r4, #208]	; 0xd0
   1d8f0:	ldr	r2, [r0, #160]	; 0xa0
   1d8f4:	movw	r1, #37163	; 0x912b
   1d8f8:	movt	r1, #4
   1d8fc:	mov	r0, r4
   1d900:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d904:	ldr	r0, [r4, #220]	; 0xdc
   1d908:	add	r0, r0, #2
   1d90c:	str	r0, [r4, #220]	; 0xdc
   1d910:	movw	r1, #37236	; 0x9174
   1d914:	movt	r1, #4
   1d918:	mov	r0, r4
   1d91c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d920:	ldr	r0, [r4, #220]	; 0xdc
   1d924:	cmp	r0, #0
   1d928:	beq	1dbbc <__flatcc_fb_gen_c_json_parser@@Base+0x478>
   1d92c:	subs	r1, r0, #1
   1d930:	str	r1, [r4, #220]	; 0xdc
   1d934:	beq	1dbbc <__flatcc_fb_gen_c_json_parser@@Base+0x478>
   1d938:	sub	r0, r0, #2
   1d93c:	str	r0, [r4, #220]	; 0xdc
   1d940:	movw	r1, #26588	; 0x67dc
   1d944:	movt	r1, #3
   1d948:	mov	r0, r4
   1d94c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d950:	ldr	r0, [r4, #208]	; 0xd0
   1d954:	ldr	r5, [r0, #40]	; 0x28
   1d958:	cmp	r5, #0
   1d95c:	beq	1dad8 <__flatcc_fb_gen_c_json_parser@@Base+0x394>
   1d960:	mov	r6, sp
   1d964:	movw	r7, #37618	; 0x92f2
   1d968:	movt	r7, #4
   1d96c:	movw	r8, #37717	; 0x9355
   1d970:	movt	r8, #4
   1d974:	movw	r9, #37423	; 0x922f
   1d978:	movt	r9, #4
   1d97c:	movw	sl, #37566	; 0x92be
   1d980:	movt	sl, #4
   1d984:	b	1d9b4 <__flatcc_fb_gen_c_json_parser@@Base+0x270>
   1d988:	mov	r0, r5
   1d98c:	mov	r1, r6
   1d990:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1d994:	mov	r0, r4
   1d998:	movw	r1, #38028	; 0x948c
   1d99c:	movt	r1, #4
   1d9a0:	mov	r2, r6
   1d9a4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d9a8:	ldr	r5, [r5]
   1d9ac:	cmp	r5, #0
   1d9b0:	beq	1dad8 <__flatcc_fb_gen_c_json_parser@@Base+0x394>
   1d9b4:	ldrh	r0, [r5, #8]
   1d9b8:	cmp	r0, #4
   1d9bc:	bhi	1d9a8 <__flatcc_fb_gen_c_json_parser@@Base+0x264>
   1d9c0:	add	r1, pc, #0
   1d9c4:	ldr	pc, [r1, r0, lsl #2]
   1d9c8:	andeq	sp, r1, r8, lsl #19
   1d9cc:	ldrdeq	sp, [r1], -ip
   1d9d0:	andeq	sp, r1, r8, lsr #19
   1d9d4:	andeq	sp, r1, ip, lsl #20
   1d9d8:	andeq	sp, r1, r0, ror #20
   1d9dc:	mov	r0, r5
   1d9e0:	mov	r1, r6
   1d9e4:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1d9e8:	mov	r0, r4
   1d9ec:	movw	r1, #37768	; 0x9388
   1d9f0:	movt	r1, #4
   1d9f4:	mov	r2, r6
   1d9f8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1d9fc:	mov	r0, r4
   1da00:	movw	r1, #37896	; 0x9408
   1da04:	movt	r1, #4
   1da08:	b	1d9a0 <__flatcc_fb_gen_c_json_parser@@Base+0x25c>
   1da0c:	mov	r0, r5
   1da10:	mov	r1, r6
   1da14:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1da18:	mov	r0, r4
   1da1c:	mov	r1, r7
   1da20:	mov	r2, r6
   1da24:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1da28:	ldr	r0, [r4, #220]	; 0xdc
   1da2c:	add	r0, r0, #2
   1da30:	str	r0, [r4, #220]	; 0xdc
   1da34:	mov	r0, r4
   1da38:	mov	r1, r8
   1da3c:	mov	r2, r6
   1da40:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1da44:	ldr	r0, [r4, #220]	; 0xdc
   1da48:	cmp	r0, #0
   1da4c:	beq	1db5c <__flatcc_fb_gen_c_json_parser@@Base+0x418>
   1da50:	subs	r1, r0, #1
   1da54:	str	r1, [r4, #220]	; 0xdc
   1da58:	bne	1dacc <__flatcc_fb_gen_c_json_parser@@Base+0x388>
   1da5c:	b	1db5c <__flatcc_fb_gen_c_json_parser@@Base+0x418>
   1da60:	mov	r0, r5
   1da64:	mov	r1, r6
   1da68:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1da6c:	mov	r0, r4
   1da70:	mov	r1, r9
   1da74:	mov	r2, r6
   1da78:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1da7c:	mov	r0, r4
   1da80:	mov	r1, sl
   1da84:	mov	r2, r6
   1da88:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1da8c:	mov	r0, r4
   1da90:	mov	r1, r7
   1da94:	mov	r2, r6
   1da98:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1da9c:	ldr	r0, [r4, #220]	; 0xdc
   1daa0:	add	r0, r0, #2
   1daa4:	str	r0, [r4, #220]	; 0xdc
   1daa8:	mov	r0, r4
   1daac:	mov	r1, r8
   1dab0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dab4:	ldr	r0, [r4, #220]	; 0xdc
   1dab8:	cmp	r0, #0
   1dabc:	beq	1db7c <__flatcc_fb_gen_c_json_parser@@Base+0x438>
   1dac0:	subs	r1, r0, #1
   1dac4:	str	r1, [r4, #220]	; 0xdc
   1dac8:	beq	1db7c <__flatcc_fb_gen_c_json_parser@@Base+0x438>
   1dacc:	sub	r0, r0, #2
   1dad0:	str	r0, [r4, #220]	; 0xdc
   1dad4:	b	1d9a8 <__flatcc_fb_gen_c_json_parser@@Base+0x264>
   1dad8:	ldr	r0, [r4, #208]	; 0xd0
   1dadc:	ldr	r0, [r0, #60]	; 0x3c
   1dae0:	movw	r1, #56864	; 0xde20
   1dae4:	movt	r1, #1
   1dae8:	mov	r2, r4
   1daec:	bl	27274 <fb_scope_table_visit@@Base>
   1daf0:	ldr	r0, [r4, #208]	; 0xd0
   1daf4:	ldr	r2, [r0, #160]	; 0xa0
   1daf8:	movw	r1, #38159	; 0x950f
   1dafc:	movt	r1, #4
   1db00:	mov	r0, r4
   1db04:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1db08:	ldr	r0, [r4, #220]	; 0xdc
   1db0c:	add	r0, r0, #2
   1db10:	str	r0, [r4, #220]	; 0xdc
   1db14:	movw	r1, #37717	; 0x9355
   1db18:	movt	r1, #4
   1db1c:	mov	r0, r4
   1db20:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1db24:	ldr	r0, [r4, #220]	; 0xdc
   1db28:	cmp	r0, #0
   1db2c:	beq	1db9c <__flatcc_fb_gen_c_json_parser@@Base+0x458>
   1db30:	subs	r1, r0, #1
   1db34:	str	r1, [r4, #220]	; 0xdc
   1db38:	beq	1db9c <__flatcc_fb_gen_c_json_parser@@Base+0x458>
   1db3c:	sub	r0, r0, #2
   1db40:	str	r0, [r4, #220]	; 0xdc
   1db44:	movw	r1, #26588	; 0x67dc
   1db48:	movt	r1, #3
   1db4c:	mov	r0, r4
   1db50:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1db54:	sub	sp, fp, #28
   1db58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db5c:	movw	r0, #37280	; 0x91a0
   1db60:	movt	r0, #4
   1db64:	movw	r1, #37292	; 0x91ac
   1db68:	movt	r1, #4
   1db6c:	movw	r3, #37377	; 0x9201
   1db70:	movt	r3, #4
   1db74:	movw	r2, #1747	; 0x6d3
   1db78:	bl	14ab4 <__assert_fail@plt>
   1db7c:	movw	r0, #37280	; 0x91a0
   1db80:	movt	r0, #4
   1db84:	movw	r1, #37292	; 0x91ac
   1db88:	movt	r1, #4
   1db8c:	movw	r3, #37377	; 0x9201
   1db90:	movt	r3, #4
   1db94:	movw	r2, #1731	; 0x6c3
   1db98:	bl	14ab4 <__assert_fail@plt>
   1db9c:	movw	r0, #37280	; 0x91a0
   1dba0:	movt	r0, #4
   1dba4:	movw	r1, #37292	; 0x91ac
   1dba8:	movt	r1, #4
   1dbac:	movw	r3, #37377	; 0x9201
   1dbb0:	movt	r3, #4
   1dbb4:	movw	r2, #1755	; 0x6db
   1dbb8:	bl	14ab4 <__assert_fail@plt>
   1dbbc:	movw	r0, #37280	; 0x91a0
   1dbc0:	movt	r0, #4
   1dbc4:	movw	r1, #37292	; 0x91ac
   1dbc8:	movt	r1, #4
   1dbcc:	movw	r3, #37377	; 0x9201
   1dbd0:	movt	r3, #4
   1dbd4:	movw	r2, #1716	; 0x6b4
   1dbd8:	bl	14ab4 <__assert_fail@plt>
   1dbdc:	push	{r4, r5, fp, lr}
   1dbe0:	add	fp, sp, #8
   1dbe4:	mov	r4, r0
   1dbe8:	ldr	r0, [r0, #208]	; 0xd0
   1dbec:	ldr	r5, [r0, #40]	; 0x28
   1dbf0:	cmp	r5, #0
   1dbf4:	bne	1dc2c <__flatcc_fb_gen_c_json_parser@@Base+0x4e8>
   1dbf8:	b	1dc94 <__flatcc_fb_gen_c_json_parser@@Base+0x550>
   1dbfc:	mov	r0, r4
   1dc00:	mov	r1, r5
   1dc04:	bl	1de74 <__flatcc_fb_gen_c_json_parser@@Base+0x730>
   1dc08:	mov	r0, r4
   1dc0c:	mov	r1, r5
   1dc10:	bl	1e3b0 <__flatcc_fb_gen_c_json_parser@@Base+0xc6c>
   1dc14:	mov	r0, r4
   1dc18:	mov	r1, r5
   1dc1c:	bl	1e550 <__flatcc_fb_gen_c_json_parser@@Base+0xe0c>
   1dc20:	ldr	r5, [r5]
   1dc24:	cmp	r5, #0
   1dc28:	beq	1dc94 <__flatcc_fb_gen_c_json_parser@@Base+0x550>
   1dc2c:	ldrh	r0, [r5, #8]
   1dc30:	cmp	r0, #4
   1dc34:	bhi	1dc20 <__flatcc_fb_gen_c_json_parser@@Base+0x4dc>
   1dc38:	add	r1, pc, #0
   1dc3c:	ldr	pc, [r1, r0, lsl #2]
   1dc40:	andeq	sp, r1, r4, asr ip
   1dc44:	andeq	sp, r1, r0, ror ip
   1dc48:	andeq	sp, r1, r0, lsr #24
   1dc4c:	andeq	sp, r1, r4, lsl ip
   1dc50:	strdeq	sp, [r1], -ip
   1dc54:	mov	r0, r4
   1dc58:	mov	r1, r5
   1dc5c:	bl	1edbc <__flatcc_fb_gen_c_json_parser@@Base+0x1678>
   1dc60:	ldr	r5, [r5]
   1dc64:	cmp	r5, #0
   1dc68:	bne	1dc2c <__flatcc_fb_gen_c_json_parser@@Base+0x4e8>
   1dc6c:	b	1dc94 <__flatcc_fb_gen_c_json_parser@@Base+0x550>
   1dc70:	mov	r0, r4
   1dc74:	mov	r1, r5
   1dc78:	bl	1e83c <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   1dc7c:	mov	r0, r4
   1dc80:	mov	r1, r5
   1dc84:	bl	1eb7c <__flatcc_fb_gen_c_json_parser@@Base+0x1438>
   1dc88:	ldr	r5, [r5]
   1dc8c:	cmp	r5, #0
   1dc90:	bne	1dc2c <__flatcc_fb_gen_c_json_parser@@Base+0x4e8>
   1dc94:	ldr	r0, [r4, #208]	; 0xd0
   1dc98:	ldr	r0, [r0, #60]	; 0x3c
   1dc9c:	movw	r1, #62376	; 0xf3a8
   1dca0:	movt	r1, #1
   1dca4:	mov	r2, r4
   1dca8:	bl	27274 <fb_scope_table_visit@@Base>
   1dcac:	mov	r0, r4
   1dcb0:	bl	1f64c <__flatcc_fb_gen_c_json_parser@@Base+0x1f08>
   1dcb4:	mov	r0, r4
   1dcb8:	pop	{r4, r5, fp, lr}
   1dcbc:	b	1f908 <__flatcc_fb_gen_c_json_parser@@Base+0x21c4>
   1dcc0:	push	{r4, sl, fp, lr}
   1dcc4:	add	fp, sp, #8
   1dcc8:	mov	r4, r0
   1dccc:	bl	2237c <__flatcc_fb_gen_c_json_parser@@Base+0x4c38>
   1dcd0:	ldr	r0, [r4, #208]	; 0xd0
   1dcd4:	ldr	r2, [r0, #164]	; 0xa4
   1dcd8:	movw	r1, #46825	; 0xb6e9
   1dcdc:	movt	r1, #4
   1dce0:	mov	r0, r4
   1dce4:	pop	{r4, sl, fp, lr}
   1dce8:	b	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dcec:	sub	sp, sp, #8
   1dcf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dcf4:	add	fp, sp, #28
   1dcf8:	sub	sp, sp, #4
   1dcfc:	mov	r8, r1
   1dd00:	mov	r4, r0
   1dd04:	str	r2, [fp, #8]
   1dd08:	str	r3, [fp, #12]
   1dd0c:	ldr	r0, [r0, #212]	; 0xd4
   1dd10:	ldr	r5, [r4, #220]	; 0xdc
   1dd14:	ldr	r6, [r0, #176]	; 0xb0
   1dd18:	movw	r0, #8384	; 0x20c0
   1dd1c:	movt	r0, #6
   1dd20:	ldrb	r0, [r0]
   1dd24:	cmp	r0, #0
   1dd28:	bne	1dd40 <__flatcc_fb_gen_c_json_parser@@Base+0x5fc>
   1dd2c:	movw	r0, #8384	; 0x20c0
   1dd30:	movt	r0, #6
   1dd34:	mov	r1, #32
   1dd38:	mov	r2, #64	; 0x40
   1dd3c:	bl	14a0c <memset@plt>
   1dd40:	ldrb	r0, [r8]
   1dd44:	cmp	r0, #0
   1dd48:	beq	1ddcc <__flatcc_fb_gen_c_json_parser@@Base+0x688>
   1dd4c:	mul	sl, r6, r5
   1dd50:	ldr	r0, [r4, #204]	; 0xcc
   1dd54:	cmp	sl, #65	; 0x41
   1dd58:	blt	1dda0 <__flatcc_fb_gen_c_json_parser@@Base+0x65c>
   1dd5c:	sub	r1, sl, #65	; 0x41
   1dd60:	bic	r9, r1, #63	; 0x3f
   1dd64:	movw	r7, #30233	; 0x7619
   1dd68:	movt	r7, #4
   1dd6c:	movw	r5, #8384	; 0x20c0
   1dd70:	movt	r5, #6
   1dd74:	mov	r6, sl
   1dd78:	mov	r1, r7
   1dd7c:	mov	r2, #64	; 0x40
   1dd80:	mov	r3, r5
   1dd84:	bl	149f4 <fprintf@plt>
   1dd88:	sub	r6, r6, #64	; 0x40
   1dd8c:	ldr	r0, [r4, #204]	; 0xcc
   1dd90:	cmp	r6, #64	; 0x40
   1dd94:	bgt	1dd78 <__flatcc_fb_gen_c_json_parser@@Base+0x634>
   1dd98:	sub	r1, sl, r9
   1dd9c:	sub	sl, r1, #64	; 0x40
   1dda0:	movw	r1, #30233	; 0x7619
   1dda4:	movt	r1, #4
   1dda8:	movw	r3, #8384	; 0x20c0
   1ddac:	movt	r3, #6
   1ddb0:	mov	r2, sl
   1ddb4:	bl	149f4 <fprintf@plt>
   1ddb8:	add	r2, fp, #8
   1ddbc:	str	r2, [sp]
   1ddc0:	ldr	r0, [r4, #204]	; 0xcc
   1ddc4:	mov	r1, r8
   1ddc8:	bl	14a48 <vfprintf@plt>
   1ddcc:	ldr	r1, [r4, #204]	; 0xcc
   1ddd0:	mov	r0, #10
   1ddd4:	bl	14a54 <fputc@plt>
   1ddd8:	sub	sp, fp, #28
   1dddc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dde0:	add	sp, sp, #8
   1dde4:	bx	lr
   1dde8:	ldr	r1, [r0, #212]	; 0xd4
   1ddec:	ldr	r1, [r1, #140]	; 0x8c
   1ddf0:	cmp	r1, #0
   1ddf4:	bxeq	lr
   1ddf8:	ldr	r3, [r0, #204]	; 0xcc
   1ddfc:	movw	r0, #26510	; 0x678e
   1de00:	movt	r0, #3
   1de04:	mov	r1, #36	; 0x24
   1de08:	mov	r2, #1
   1de0c:	b	1497c <fwrite@plt>
   1de10:	mov	r2, r1
   1de14:	mov	r1, r0
   1de18:	ldr	r0, [r0, #12]
   1de1c:	b	16838 <__flatcc_fb_scoped_symbol_name@@Base>
   1de20:	push	{r4, r5, fp, lr}
   1de24:	add	fp, sp, #8
   1de28:	sub	sp, sp, #208	; 0xd0
   1de2c:	mov	r4, r0
   1de30:	add	r5, sp, #4
   1de34:	mov	r0, r1
   1de38:	mov	r1, r5
   1de3c:	bl	16780 <__flatcc_fb_copy_scope@@Base>
   1de40:	ldr	r0, [r4, #208]	; 0xd0
   1de44:	ldr	r2, [r0, #160]	; 0xa0
   1de48:	movw	r1, #38266	; 0x957a
   1de4c:	movt	r1, #4
   1de50:	mov	r0, r4
   1de54:	mov	r3, r5
   1de58:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1de5c:	movw	r1, #37717	; 0x9355
   1de60:	movt	r1, #4
   1de64:	mov	r0, r4
   1de68:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1de6c:	sub	sp, fp, #8
   1de70:	pop	{r4, r5, fp, pc}
   1de74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de78:	add	fp, sp, #28
   1de7c:	sub	sp, sp, #468	; 0x1d4
   1de80:	mov	r5, r1
   1de84:	mov	r4, r0
   1de88:	add	r6, sp, #240	; 0xf0
   1de8c:	mov	r0, r6
   1de90:	mov	r1, #0
   1de94:	mov	r2, #220	; 0xdc
   1de98:	bl	14a0c <memset@plt>
   1de9c:	add	r0, sp, #16
   1dea0:	mov	r1, #0
   1dea4:	mov	r2, #220	; 0xdc
   1dea8:	bl	14a0c <memset@plt>
   1deac:	mov	r0, r5
   1deb0:	mov	r1, r6
   1deb4:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1deb8:	movw	r1, #38374	; 0x95e6
   1debc:	movt	r1, #4
   1dec0:	mov	r0, r4
   1dec4:	mov	r2, r6
   1dec8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1decc:	movw	r1, #50495	; 0xc53f
   1ded0:	movt	r1, #4
   1ded4:	mov	r0, r4
   1ded8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dedc:	ldr	r0, [r4, #220]	; 0xdc
   1dee0:	add	r0, r0, #1
   1dee4:	str	r0, [r4, #220]	; 0xdc
   1dee8:	movw	r1, #26588	; 0x67dc
   1deec:	movt	r1, #3
   1def0:	mov	r0, r4
   1def4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1def8:	movw	r1, #38518	; 0x9676
   1defc:	movt	r1, #4
   1df00:	mov	r0, r4
   1df04:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1df08:	movw	r1, #38531	; 0x9683
   1df0c:	movt	r1, #4
   1df10:	mov	r0, r4
   1df14:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1df18:	movw	r1, #38547	; 0x9693
   1df1c:	movt	r1, #4
   1df20:	mov	r0, r4
   1df24:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1df28:	ldr	r0, [r4, #220]	; 0xdc
   1df2c:	add	r0, r0, #1
   1df30:	str	r0, [r4, #220]	; 0xdc
   1df34:	movw	r1, #38566	; 0x96a6
   1df38:	movt	r1, #4
   1df3c:	mov	r0, r4
   1df40:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1df44:	ldr	r0, [r4, #220]	; 0xdc
   1df48:	cmp	r0, #0
   1df4c:	beq	1e2f0 <__flatcc_fb_gen_c_json_parser@@Base+0xbac>
   1df50:	sub	r0, r0, #1
   1df54:	str	r0, [r4, #220]	; 0xdc
   1df58:	ldr	r5, [r5, #20]
   1df5c:	cmp	r5, #0
   1df60:	beq	1e0b4 <__flatcc_fb_gen_c_json_parser@@Base+0x970>
   1df64:	add	r6, sp, #12
   1df68:	add	r7, sp, #8
   1df6c:	movw	r8, #38671	; 0x970f
   1df70:	movt	r8, #4
   1df74:	movw	sl, #38847	; 0x97bf
   1df78:	movt	sl, #4
   1df7c:	add	r9, sp, #16
   1df80:	b	1dfe8 <__flatcc_fb_gen_c_json_parser@@Base+0x8a4>
   1df84:	ldr	r2, [r5, #48]	; 0x30
   1df88:	ldr	r3, [sp, #12]
   1df8c:	ldr	r0, [sp, #8]
   1df90:	str	r0, [sp]
   1df94:	mov	r0, r4
   1df98:	mov	r1, r8
   1df9c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dfa0:	ldr	r0, [r4, #220]	; 0xdc
   1dfa4:	add	r0, r0, #1
   1dfa8:	str	r0, [r4, #220]	; 0xdc
   1dfac:	mov	r0, r4
   1dfb0:	movw	r1, #38854	; 0x97c6
   1dfb4:	movt	r1, #4
   1dfb8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dfbc:	mov	r0, r4
   1dfc0:	mov	r1, sl
   1dfc4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1dfc8:	ldr	r0, [r4, #220]	; 0xdc
   1dfcc:	cmp	r0, #0
   1dfd0:	beq	1e2d0 <__flatcc_fb_gen_c_json_parser@@Base+0xb8c>
   1dfd4:	sub	r0, r0, #1
   1dfd8:	str	r0, [r4, #220]	; 0xdc
   1dfdc:	ldr	r5, [r5]
   1dfe0:	cmp	r5, #0
   1dfe4:	beq	1e0b4 <__flatcc_fb_gen_c_json_parser@@Base+0x970>
   1dfe8:	mov	r0, r5
   1dfec:	mov	r1, r6
   1dff0:	mov	r2, r7
   1dff4:	bl	1f938 <__flatcc_fb_gen_c_json_parser@@Base+0x21f4>
   1dff8:	ldrh	r0, [r5, #24]
   1dffc:	cmp	r0, #0
   1e000:	beq	1dfdc <__flatcc_fb_gen_c_json_parser@@Base+0x898>
   1e004:	cmp	r0, #10
   1e008:	beq	1df84 <__flatcc_fb_gen_c_json_parser@@Base+0x840>
   1e00c:	cmp	r0, #14
   1e010:	bne	1e230 <__flatcc_fb_gen_c_json_parser@@Base+0xaec>
   1e014:	ldr	r0, [r5, #16]
   1e018:	mov	r1, r9
   1e01c:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1e020:	ldr	r2, [r5, #48]	; 0x30
   1e024:	ldr	r3, [sp, #12]
   1e028:	ldr	r0, [sp, #8]
   1e02c:	str	r0, [sp]
   1e030:	mov	r0, r4
   1e034:	mov	r1, r8
   1e038:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e03c:	ldr	r0, [r4, #220]	; 0xdc
   1e040:	add	r0, r0, #1
   1e044:	str	r0, [r4, #220]	; 0xdc
   1e048:	ldr	r0, [r5, #16]
   1e04c:	ldrh	r0, [r0, #8]
   1e050:	cmp	r0, #0
   1e054:	movw	r1, #38691	; 0x9723
   1e058:	movt	r1, #4
   1e05c:	beq	1e070 <__flatcc_fb_gen_c_json_parser@@Base+0x92c>
   1e060:	cmp	r0, #1
   1e064:	bne	1e280 <__flatcc_fb_gen_c_json_parser@@Base+0xb3c>
   1e068:	movw	r1, #38741	; 0x9755
   1e06c:	movt	r1, #4
   1e070:	mov	r0, r4
   1e074:	mov	r2, r9
   1e078:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e07c:	mov	r0, r4
   1e080:	mov	r1, sl
   1e084:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e088:	ldr	r0, [r4, #220]	; 0xdc
   1e08c:	cmp	r0, #0
   1e090:	bne	1dfd4 <__flatcc_fb_gen_c_json_parser@@Base+0x890>
   1e094:	movw	r0, #37280	; 0x91a0
   1e098:	movt	r0, #4
   1e09c:	movw	r1, #37292	; 0x91ac
   1e0a0:	movt	r1, #4
   1e0a4:	movw	r3, #38613	; 0x96d5
   1e0a8:	movt	r3, #4
   1e0ac:	movw	r2, #1526	; 0x5f6
   1e0b0:	bl	14ab4 <__assert_fail@plt>
   1e0b4:	movw	r1, #38962	; 0x9832
   1e0b8:	movt	r1, #4
   1e0bc:	mov	r0, r4
   1e0c0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e0c4:	ldr	r0, [r4, #220]	; 0xdc
   1e0c8:	add	r0, r0, #1
   1e0cc:	str	r0, [r4, #220]	; 0xdc
   1e0d0:	movw	r1, #38971	; 0x983b
   1e0d4:	movt	r1, #4
   1e0d8:	mov	r0, r4
   1e0dc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e0e0:	ldr	r0, [r4, #220]	; 0xdc
   1e0e4:	add	r0, r0, #1
   1e0e8:	str	r0, [r4, #220]	; 0xdc
   1e0ec:	movw	r1, #39028	; 0x9874
   1e0f0:	movt	r1, #4
   1e0f4:	mov	r0, r4
   1e0f8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e0fc:	ldr	r0, [r4, #220]	; 0xdc
   1e100:	cmp	r0, #0
   1e104:	beq	1e310 <__flatcc_fb_gen_c_json_parser@@Base+0xbcc>
   1e108:	sub	r0, r0, #1
   1e10c:	str	r0, [r4, #220]	; 0xdc
   1e110:	movw	r1, #39120	; 0x98d0
   1e114:	movt	r1, #4
   1e118:	mov	r0, r4
   1e11c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e120:	ldr	r0, [r4, #220]	; 0xdc
   1e124:	add	r0, r0, #1
   1e128:	str	r0, [r4, #220]	; 0xdc
   1e12c:	movw	r1, #39129	; 0x98d9
   1e130:	movt	r1, #4
   1e134:	mov	r0, r4
   1e138:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e13c:	ldr	r0, [r4, #220]	; 0xdc
   1e140:	cmp	r0, #0
   1e144:	beq	1e330 <__flatcc_fb_gen_c_json_parser@@Base+0xbec>
   1e148:	sub	r0, r0, #1
   1e14c:	str	r0, [r4, #220]	; 0xdc
   1e150:	movw	r1, #35669	; 0x8b55
   1e154:	movt	r1, #3
   1e158:	mov	r0, r4
   1e15c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e160:	ldr	r0, [r4, #220]	; 0xdc
   1e164:	cmp	r0, #0
   1e168:	beq	1e350 <__flatcc_fb_gen_c_json_parser@@Base+0xc0c>
   1e16c:	sub	r0, r0, #1
   1e170:	str	r0, [r4, #220]	; 0xdc
   1e174:	movw	r1, #35669	; 0x8b55
   1e178:	movt	r1, #3
   1e17c:	mov	r0, r4
   1e180:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e184:	movw	r1, #39184	; 0x9910
   1e188:	movt	r1, #4
   1e18c:	mov	r0, r4
   1e190:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e194:	movw	r1, #39212	; 0x992c
   1e198:	movt	r1, #4
   1e19c:	mov	r0, r4
   1e1a0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e1a4:	ldr	r0, [r4, #220]	; 0xdc
   1e1a8:	add	r0, r0, #1
   1e1ac:	str	r0, [r4, #220]	; 0xdc
   1e1b0:	movw	r1, #39228	; 0x993c
   1e1b4:	movt	r1, #4
   1e1b8:	mov	r0, r4
   1e1bc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e1c0:	ldr	r0, [r4, #220]	; 0xdc
   1e1c4:	cmp	r0, #0
   1e1c8:	beq	1e370 <__flatcc_fb_gen_c_json_parser@@Base+0xc2c>
   1e1cc:	sub	r0, r0, #1
   1e1d0:	str	r0, [r4, #220]	; 0xdc
   1e1d4:	movw	r1, #35669	; 0x8b55
   1e1d8:	movt	r1, #3
   1e1dc:	mov	r0, r4
   1e1e0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e1e4:	movw	r1, #39200	; 0x9920
   1e1e8:	movt	r1, #4
   1e1ec:	mov	r0, r4
   1e1f0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e1f4:	ldr	r0, [r4, #220]	; 0xdc
   1e1f8:	cmp	r0, #0
   1e1fc:	beq	1e390 <__flatcc_fb_gen_c_json_parser@@Base+0xc4c>
   1e200:	sub	r0, r0, #1
   1e204:	str	r0, [r4, #220]	; 0xdc
   1e208:	movw	r1, #35669	; 0x8b55
   1e20c:	movt	r1, #3
   1e210:	mov	r0, r4
   1e214:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e218:	movw	r1, #26588	; 0x67dc
   1e21c:	movt	r1, #3
   1e220:	mov	r0, r4
   1e224:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e228:	sub	sp, fp, #28
   1e22c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e230:	movw	r0, #8368	; 0x20b0
   1e234:	movt	r0, #6
   1e238:	ldr	r0, [r0]
   1e23c:	movw	r1, #38916	; 0x9804
   1e240:	movt	r1, #4
   1e244:	str	r1, [sp]
   1e248:	movw	r1, #26331	; 0x66db
   1e24c:	movt	r1, #3
   1e250:	movw	r4, #37292	; 0x91ac
   1e254:	movt	r4, #4
   1e258:	mov	r2, r4
   1e25c:	movw	r3, #1535	; 0x5ff
   1e260:	bl	149f4 <fprintf@plt>
   1e264:	movw	r0, #30217	; 0x7609
   1e268:	movt	r0, #4
   1e26c:	movw	r3, #38613	; 0x96d5
   1e270:	movt	r3, #4
   1e274:	mov	r1, r4
   1e278:	movw	r2, #1535	; 0x5ff
   1e27c:	bl	14ab4 <__assert_fail@plt>
   1e280:	movw	r0, #8368	; 0x20b0
   1e284:	movt	r0, #6
   1e288:	ldr	r0, [r0]
   1e28c:	movw	r1, #38792	; 0x9788
   1e290:	movt	r1, #4
   1e294:	str	r1, [sp]
   1e298:	movw	r1, #26331	; 0x66db
   1e29c:	movt	r1, #3
   1e2a0:	movw	r4, #37292	; 0x91ac
   1e2a4:	movt	r4, #4
   1e2a8:	mov	r2, r4
   1e2ac:	movw	r3, #1522	; 0x5f2
   1e2b0:	bl	149f4 <fprintf@plt>
   1e2b4:	movw	r0, #30217	; 0x7609
   1e2b8:	movt	r0, #4
   1e2bc:	movw	r3, #38613	; 0x96d5
   1e2c0:	movt	r3, #4
   1e2c4:	mov	r1, r4
   1e2c8:	movw	r2, #1522	; 0x5f2
   1e2cc:	bl	14ab4 <__assert_fail@plt>
   1e2d0:	movw	r0, #37280	; 0x91a0
   1e2d4:	movt	r0, #4
   1e2d8:	movw	r1, #37292	; 0x91ac
   1e2dc:	movt	r1, #4
   1e2e0:	movw	r3, #38613	; 0x96d5
   1e2e4:	movt	r3, #4
   1e2e8:	movw	r2, #1532	; 0x5fc
   1e2ec:	bl	14ab4 <__assert_fail@plt>
   1e2f0:	movw	r0, #37280	; 0x91a0
   1e2f4:	movt	r0, #4
   1e2f8:	movw	r1, #37292	; 0x91ac
   1e2fc:	movt	r1, #4
   1e300:	movw	r3, #38613	; 0x96d5
   1e304:	movt	r3, #4
   1e308:	movw	r2, #1503	; 0x5df
   1e30c:	bl	14ab4 <__assert_fail@plt>
   1e310:	movw	r0, #37280	; 0x91a0
   1e314:	movt	r0, #4
   1e318:	movw	r1, #37292	; 0x91ac
   1e31c:	movt	r1, #4
   1e320:	movw	r3, #38613	; 0x96d5
   1e324:	movt	r3, #4
   1e328:	movw	r2, #1543	; 0x607
   1e32c:	bl	14ab4 <__assert_fail@plt>
   1e330:	movw	r0, #37280	; 0x91a0
   1e334:	movt	r0, #4
   1e338:	movw	r1, #37292	; 0x91ac
   1e33c:	movt	r1, #4
   1e340:	movw	r3, #38613	; 0x96d5
   1e344:	movt	r3, #4
   1e348:	movw	r2, #1545	; 0x609
   1e34c:	bl	14ab4 <__assert_fail@plt>
   1e350:	movw	r0, #37280	; 0x91a0
   1e354:	movt	r0, #4
   1e358:	movw	r1, #37292	; 0x91ac
   1e35c:	movt	r1, #4
   1e360:	movw	r3, #38613	; 0x96d5
   1e364:	movt	r3, #4
   1e368:	movw	r2, #1546	; 0x60a
   1e36c:	bl	14ab4 <__assert_fail@plt>
   1e370:	movw	r0, #37280	; 0x91a0
   1e374:	movt	r0, #4
   1e378:	movw	r1, #37292	; 0x91ac
   1e37c:	movt	r1, #4
   1e380:	movw	r3, #38613	; 0x96d5
   1e384:	movt	r3, #4
   1e388:	movw	r2, #1550	; 0x60e
   1e38c:	bl	14ab4 <__assert_fail@plt>
   1e390:	movw	r0, #37280	; 0x91a0
   1e394:	movt	r0, #4
   1e398:	movw	r1, #37292	; 0x91ac
   1e39c:	movt	r1, #4
   1e3a0:	movw	r3, #38613	; 0x96d5
   1e3a4:	movt	r3, #4
   1e3a8:	mov	r2, #1552	; 0x610
   1e3ac:	bl	14ab4 <__assert_fail@plt>
   1e3b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e3b4:	add	fp, sp, #24
   1e3b8:	sub	sp, sp, #240	; 0xf0
   1e3bc:	mov	r5, r1
   1e3c0:	mov	r4, r0
   1e3c4:	add	r6, sp, #16
   1e3c8:	mov	r0, r6
   1e3cc:	mov	r1, #0
   1e3d0:	mov	r2, #220	; 0xdc
   1e3d4:	bl	14a0c <memset@plt>
   1e3d8:	mov	r0, r5
   1e3dc:	mov	r1, r6
   1e3e0:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1e3e4:	movw	r1, #39314	; 0x9992
   1e3e8:	movt	r1, #4
   1e3ec:	mov	r0, r4
   1e3f0:	mov	r2, r6
   1e3f4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e3f8:	movw	r1, #50495	; 0xc53f
   1e3fc:	movt	r1, #4
   1e400:	mov	r0, r4
   1e404:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e408:	ldr	r0, [r4, #220]	; 0xdc
   1e40c:	add	r0, r0, #1
   1e410:	str	r0, [r4, #220]	; 0xdc
   1e414:	movw	r1, #38531	; 0x9683
   1e418:	movt	r1, #4
   1e41c:	mov	r0, r4
   1e420:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e424:	ldr	r5, [r5, #20]
   1e428:	cmp	r5, #0
   1e42c:	beq	1e4a0 <__flatcc_fb_gen_c_json_parser@@Base+0xd5c>
   1e430:	add	r6, sp, #12
   1e434:	add	r7, sp, #8
   1e438:	movw	r8, #39365	; 0x99c5
   1e43c:	movt	r8, #4
   1e440:	movw	r9, #39394	; 0x99e2
   1e444:	movt	r9, #4
   1e448:	b	1e474 <__flatcc_fb_gen_c_json_parser@@Base+0xd30>
   1e44c:	ldr	r2, [r5, #48]	; 0x30
   1e450:	ldr	r3, [sp, #12]
   1e454:	ldr	r0, [sp, #8]
   1e458:	str	r0, [sp]
   1e45c:	mov	r0, r4
   1e460:	mov	r1, r9
   1e464:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e468:	ldr	r5, [r5]
   1e46c:	cmp	r5, #0
   1e470:	beq	1e4a0 <__flatcc_fb_gen_c_json_parser@@Base+0xd5c>
   1e474:	mov	r0, r5
   1e478:	mov	r1, r6
   1e47c:	mov	r2, r7
   1e480:	bl	1f938 <__flatcc_fb_gen_c_json_parser@@Base+0x21f4>
   1e484:	ldrh	r0, [r5, #24]
   1e488:	cmp	r0, #0
   1e48c:	bne	1e44c <__flatcc_fb_gen_c_json_parser@@Base+0xd08>
   1e490:	mov	r0, r4
   1e494:	mov	r1, r8
   1e498:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e49c:	b	1e468 <__flatcc_fb_gen_c_json_parser@@Base+0xd24>
   1e4a0:	movw	r1, #39424	; 0x9a00
   1e4a4:	movt	r1, #4
   1e4a8:	mov	r0, r4
   1e4ac:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e4b0:	ldr	r0, [r4, #220]	; 0xdc
   1e4b4:	adds	r1, r0, #1
   1e4b8:	str	r1, [r4, #220]	; 0xdc
   1e4bc:	bcs	1e510 <__flatcc_fb_gen_c_json_parser@@Base+0xdcc>
   1e4c0:	str	r0, [r4, #220]	; 0xdc
   1e4c4:	movw	r1, #35669	; 0x8b55
   1e4c8:	movt	r1, #3
   1e4cc:	mov	r0, r4
   1e4d0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e4d4:	ldr	r0, [r4, #220]	; 0xdc
   1e4d8:	cmp	r0, #0
   1e4dc:	beq	1e530 <__flatcc_fb_gen_c_json_parser@@Base+0xdec>
   1e4e0:	sub	r0, r0, #1
   1e4e4:	str	r0, [r4, #220]	; 0xdc
   1e4e8:	movw	r1, #35669	; 0x8b55
   1e4ec:	movt	r1, #3
   1e4f0:	mov	r0, r4
   1e4f4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e4f8:	movw	r1, #26588	; 0x67dc
   1e4fc:	movt	r1, #3
   1e500:	mov	r0, r4
   1e504:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e508:	sub	sp, fp, #24
   1e50c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e510:	movw	r0, #37280	; 0x91a0
   1e514:	movt	r0, #4
   1e518:	movw	r1, #37292	; 0x91ac
   1e51c:	movt	r1, #4
   1e520:	movw	r3, #39443	; 0x9a13
   1e524:	movt	r3, #4
   1e528:	movw	r2, #1582	; 0x62e
   1e52c:	bl	14ab4 <__assert_fail@plt>
   1e530:	movw	r0, #37280	; 0x91a0
   1e534:	movt	r0, #4
   1e538:	movw	r1, #37292	; 0x91ac
   1e53c:	movt	r1, #4
   1e540:	movw	r3, #39443	; 0x9a13
   1e544:	movt	r3, #4
   1e548:	movw	r2, #1583	; 0x62f
   1e54c:	bl	14ab4 <__assert_fail@plt>
   1e550:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e554:	add	fp, sp, #24
   1e558:	sub	sp, sp, #264	; 0x108
   1e55c:	mov	r5, r1
   1e560:	mov	r4, r0
   1e564:	mov	r0, #0
   1e568:	str	r0, [sp, #36]	; 0x24
   1e56c:	vmov.i32	q8, #0	; 0x00000000
   1e570:	mov	r0, #12
   1e574:	add	r1, sp, #8
   1e578:	vst1.64	{d16-d17}, [r1], r0
   1e57c:	vst1.32	{d16-d17}, [r1]
   1e580:	ldrh	r0, [r5, #8]
   1e584:	sub	r0, r0, #3
   1e588:	uxth	r0, r0
   1e58c:	cmp	r0, #2
   1e590:	bcs	1e7ac <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   1e594:	add	r1, sp, #36	; 0x24
   1e598:	mov	r0, r5
   1e59c:	bl	1f954 <__flatcc_fb_gen_c_json_parser@@Base+0x2210>
   1e5a0:	str	r0, [sp, #8]
   1e5a4:	ldr	r7, [sp, #36]	; 0x24
   1e5a8:	cmp	r0, #0
   1e5ac:	bne	1e5b8 <__flatcc_fb_gen_c_json_parser@@Base+0xe74>
   1e5b0:	cmp	r7, #1
   1e5b4:	bge	1e7cc <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1e5b8:	mov	r0, #2
   1e5bc:	str	r0, [sp, #24]
   1e5c0:	str	r5, [sp, #20]
   1e5c4:	movw	r0, #64388	; 0xfb84
   1e5c8:	movt	r0, #1
   1e5cc:	str	r0, [sp, #16]
   1e5d0:	movw	r0, #64224	; 0xfae0
   1e5d4:	movt	r0, #1
   1e5d8:	str	r0, [sp, #12]
   1e5dc:	add	r6, sp, #40	; 0x28
   1e5e0:	mov	r0, r6
   1e5e4:	mov	r1, #0
   1e5e8:	mov	r2, #220	; 0xdc
   1e5ec:	bl	14a0c <memset@plt>
   1e5f0:	mov	r0, r5
   1e5f4:	mov	r1, r6
   1e5f8:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1e5fc:	movw	r1, #37618	; 0x92f2
   1e600:	movt	r1, #4
   1e604:	mov	r0, r4
   1e608:	mov	r2, r6
   1e60c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e610:	ldr	r0, [r4, #220]	; 0xdc
   1e614:	add	r0, r0, #2
   1e618:	str	r0, [r4, #220]	; 0xdc
   1e61c:	movw	r1, #39623	; 0x9ac7
   1e620:	movt	r1, #4
   1e624:	mov	r0, r4
   1e628:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e62c:	ldr	r0, [r4, #220]	; 0xdc
   1e630:	cmp	r0, #0
   1e634:	beq	1e78c <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1e638:	subs	r1, r0, #1
   1e63c:	str	r1, [r4, #220]	; 0xdc
   1e640:	beq	1e78c <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1e644:	sub	r0, r0, #2
   1e648:	str	r0, [r4, #220]	; 0xdc
   1e64c:	movw	r1, #50495	; 0xc53f
   1e650:	movt	r1, #4
   1e654:	mov	r0, r4
   1e658:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e65c:	ldr	r0, [r4, #220]	; 0xdc
   1e660:	add	r0, r0, #1
   1e664:	str	r0, [r4, #220]	; 0xdc
   1e668:	cmp	r7, #0
   1e66c:	beq	1e718 <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   1e670:	movw	r1, #39744	; 0x9b40
   1e674:	movt	r1, #4
   1e678:	mov	r0, r4
   1e67c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e680:	movw	r1, #39773	; 0x9b5d
   1e684:	movt	r1, #4
   1e688:	mov	r0, r4
   1e68c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e690:	movw	r1, #39791	; 0x9b6f
   1e694:	movt	r1, #4
   1e698:	mov	r0, r4
   1e69c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e6a0:	movw	r1, #26588	; 0x67dc
   1e6a4:	movt	r1, #3
   1e6a8:	mov	r0, r4
   1e6ac:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e6b0:	movw	r1, #39803	; 0x9b7b
   1e6b4:	movt	r1, #4
   1e6b8:	mov	r0, r4
   1e6bc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e6c0:	mov	r0, #0
   1e6c4:	str	r0, [sp]
   1e6c8:	sub	r3, r7, #1
   1e6cc:	add	r1, sp, #8
   1e6d0:	mov	r0, r4
   1e6d4:	mov	r2, #0
   1e6d8:	bl	1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1e6dc:	movw	r1, #39200	; 0x9920
   1e6e0:	movt	r1, #4
   1e6e4:	mov	r0, r4
   1e6e8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e6ec:	ldr	r0, [r4, #220]	; 0xdc
   1e6f0:	cmp	r0, #0
   1e6f4:	bne	1e754 <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   1e6f8:	movw	r0, #37280	; 0x91a0
   1e6fc:	movt	r0, #4
   1e700:	movw	r1, #37292	; 0x91ac
   1e704:	movt	r1, #4
   1e708:	movw	r3, #39506	; 0x9a52
   1e70c:	movt	r3, #4
   1e710:	movw	r2, #1278	; 0x4fe
   1e714:	bl	14ab4 <__assert_fail@plt>
   1e718:	movw	r1, #39673	; 0x9af9
   1e71c:	movt	r1, #4
   1e720:	mov	r0, r4
   1e724:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e728:	movw	r1, #39699	; 0x9b13
   1e72c:	movt	r1, #4
   1e730:	mov	r0, r4
   1e734:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e738:	movw	r1, #39715	; 0x9b23
   1e73c:	movt	r1, #4
   1e740:	mov	r0, r4
   1e744:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e748:	ldr	r0, [r4, #220]	; 0xdc
   1e74c:	cmp	r0, #0
   1e750:	beq	1e81c <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   1e754:	sub	r0, r0, #1
   1e758:	str	r0, [r4, #220]	; 0xdc
   1e75c:	movw	r1, #35669	; 0x8b55
   1e760:	movt	r1, #3
   1e764:	mov	r0, r4
   1e768:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e76c:	movw	r1, #26588	; 0x67dc
   1e770:	movt	r1, #3
   1e774:	mov	r0, r4
   1e778:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e77c:	ldr	r0, [sp, #8]
   1e780:	bl	20180 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1e784:	sub	sp, fp, #24
   1e788:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e78c:	movw	r0, #37280	; 0x91a0
   1e790:	movt	r0, #4
   1e794:	movw	r1, #37292	; 0x91ac
   1e798:	movt	r1, #4
   1e79c:	movw	r3, #39506	; 0x9a52
   1e7a0:	movt	r3, #4
   1e7a4:	movw	r2, #1263	; 0x4ef
   1e7a8:	bl	14ab4 <__assert_fail@plt>
   1e7ac:	movw	r0, #52033	; 0xcb41
   1e7b0:	movt	r0, #3
   1e7b4:	movw	r1, #37292	; 0x91ac
   1e7b8:	movt	r1, #4
   1e7bc:	movw	r3, #39506	; 0x9a52
   1e7c0:	movt	r3, #4
   1e7c4:	movw	r2, #1246	; 0x4de
   1e7c8:	bl	14ab4 <__assert_fail@plt>
   1e7cc:	movw	r0, #8368	; 0x20b0
   1e7d0:	movt	r0, #6
   1e7d4:	ldr	r0, [r0]
   1e7d8:	movw	r1, #39563	; 0x9a8b
   1e7dc:	movt	r1, #4
   1e7e0:	str	r1, [sp]
   1e7e4:	movw	r1, #26331	; 0x66db
   1e7e8:	movt	r1, #3
   1e7ec:	movw	r4, #37292	; 0x91ac
   1e7f0:	movt	r4, #4
   1e7f4:	mov	r2, r4
   1e7f8:	movw	r3, #1249	; 0x4e1
   1e7fc:	bl	149f4 <fprintf@plt>
   1e800:	movw	r0, #30217	; 0x7609
   1e804:	movt	r0, #4
   1e808:	movw	r3, #39506	; 0x9a52
   1e80c:	movt	r3, #4
   1e810:	mov	r1, r4
   1e814:	movw	r2, #1249	; 0x4e1
   1e818:	bl	14ab4 <__assert_fail@plt>
   1e81c:	movw	r0, #37280	; 0x91a0
   1e820:	movt	r0, #4
   1e824:	movw	r1, #37292	; 0x91ac
   1e828:	movt	r1, #4
   1e82c:	movw	r3, #39506	; 0x9a52
   1e830:	movt	r3, #4
   1e834:	movw	r2, #1269	; 0x4f5
   1e838:	bl	14ab4 <__assert_fail@plt>
   1e83c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e840:	add	fp, sp, #24
   1e844:	sub	sp, sp, #264	; 0x108
   1e848:	mov	r5, r1
   1e84c:	mov	r4, r0
   1e850:	vmov.i32	q8, #0	; 0x00000000
   1e854:	mov	r0, #12
   1e858:	add	r1, sp, #8
   1e85c:	vst1.64	{d16-d17}, [r1], r0
   1e860:	vst1.32	{d16-d17}, [r1]
   1e864:	ldrh	r0, [r5, #8]
   1e868:	cmp	r0, #1
   1e86c:	bne	1eacc <__flatcc_fb_gen_c_json_parser@@Base+0x1388>
   1e870:	add	r1, sp, #36	; 0x24
   1e874:	mov	r0, r5
   1e878:	bl	1f954 <__flatcc_fb_gen_c_json_parser@@Base+0x2210>
   1e87c:	str	r0, [sp, #8]
   1e880:	ldr	r7, [sp, #36]	; 0x24
   1e884:	cmp	r0, #0
   1e888:	bne	1e894 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1e88c:	cmp	r7, #1
   1e890:	bge	1eaec <__flatcc_fb_gen_c_json_parser@@Base+0x13a8>
   1e894:	mov	r0, #1
   1e898:	str	r0, [sp, #24]
   1e89c:	str	r5, [sp, #20]
   1e8a0:	movw	r0, #2564	; 0xa04
   1e8a4:	movt	r0, #2
   1e8a8:	str	r0, [sp, #16]
   1e8ac:	movw	r0, #2392	; 0x958
   1e8b0:	movt	r0, #2
   1e8b4:	str	r0, [sp, #12]
   1e8b8:	add	r6, sp, #40	; 0x28
   1e8bc:	mov	r0, r6
   1e8c0:	mov	r1, #0
   1e8c4:	mov	r2, #220	; 0xdc
   1e8c8:	bl	14a0c <memset@plt>
   1e8cc:	mov	r0, r5
   1e8d0:	mov	r1, r6
   1e8d4:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1e8d8:	movw	r1, #40875	; 0x9fab
   1e8dc:	movt	r1, #4
   1e8e0:	mov	r0, r4
   1e8e4:	mov	r2, r6
   1e8e8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e8ec:	movw	r1, #50495	; 0xc53f
   1e8f0:	movt	r1, #4
   1e8f4:	mov	r0, r4
   1e8f8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e8fc:	ldr	r0, [r4, #220]	; 0xdc
   1e900:	add	r0, r0, #1
   1e904:	str	r0, [r4, #220]	; 0xdc
   1e908:	movw	r1, #41002	; 0xa02a
   1e90c:	movt	r1, #4
   1e910:	mov	r0, r4
   1e914:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e918:	cmp	r7, #1
   1e91c:	blt	1e960 <__flatcc_fb_gen_c_json_parser@@Base+0x121c>
   1e920:	movw	r1, #41012	; 0xa034
   1e924:	movt	r1, #4
   1e928:	mov	r0, r4
   1e92c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e930:	movw	r1, #41038	; 0xa04e
   1e934:	movt	r1, #4
   1e938:	mov	r0, r4
   1e93c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e940:	movw	r1, #39773	; 0x9b5d
   1e944:	movt	r1, #4
   1e948:	mov	r0, r4
   1e94c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e950:	movw	r1, #39791	; 0x9b6f
   1e954:	movt	r1, #4
   1e958:	mov	r0, r4
   1e95c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e960:	movw	r1, #26588	; 0x67dc
   1e964:	movt	r1, #3
   1e968:	mov	r0, r4
   1e96c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e970:	movw	r1, #41050	; 0xa05a
   1e974:	movt	r1, #4
   1e978:	mov	r0, r4
   1e97c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e980:	movw	r1, #41111	; 0xa097
   1e984:	movt	r1, #4
   1e988:	mov	r0, r4
   1e98c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e990:	ldr	r0, [r4, #220]	; 0xdc
   1e994:	add	r0, r0, #1
   1e998:	str	r0, [r4, #220]	; 0xdc
   1e99c:	cmp	r7, #0
   1e9a0:	beq	1e9e4 <__flatcc_fb_gen_c_json_parser@@Base+0x12a0>
   1e9a4:	movw	r1, #41204	; 0xa0f4
   1e9a8:	movt	r1, #4
   1e9ac:	mov	r0, r4
   1e9b0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e9b4:	movw	r1, #39803	; 0x9b7b
   1e9b8:	movt	r1, #4
   1e9bc:	mov	r0, r4
   1e9c0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e9c4:	mov	r0, #0
   1e9c8:	str	r0, [sp]
   1e9cc:	sub	r3, r7, #1
   1e9d0:	add	r1, sp, #8
   1e9d4:	mov	r0, r4
   1e9d8:	mov	r2, #0
   1e9dc:	bl	1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1e9e0:	b	1ea04 <__flatcc_fb_gen_c_json_parser@@Base+0x12c0>
   1e9e4:	movw	r1, #41126	; 0xa0a6
   1e9e8:	movt	r1, #4
   1e9ec:	mov	r0, r4
   1e9f0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1e9f4:	movw	r1, #41146	; 0xa0ba
   1e9f8:	movt	r1, #4
   1e9fc:	mov	r0, r4
   1ea00:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ea04:	movw	r1, #41258	; 0xa12a
   1ea08:	movt	r1, #4
   1ea0c:	mov	r0, r4
   1ea10:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ea14:	ldr	r0, [r4, #220]	; 0xdc
   1ea18:	cmp	r0, #0
   1ea1c:	beq	1eb3c <__flatcc_fb_gen_c_json_parser@@Base+0x13f8>
   1ea20:	sub	r0, r0, #1
   1ea24:	str	r0, [r4, #220]	; 0xdc
   1ea28:	movw	r1, #35669	; 0x8b55
   1ea2c:	movt	r1, #3
   1ea30:	mov	r0, r4
   1ea34:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ea38:	movw	r1, #39200	; 0x9920
   1ea3c:	movt	r1, #4
   1ea40:	mov	r0, r4
   1ea44:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ea48:	cmp	r7, #1
   1ea4c:	blt	1ea88 <__flatcc_fb_gen_c_json_parser@@Base+0x1344>
   1ea50:	ldr	r0, [r4, #220]	; 0xdc
   1ea54:	mov	r1, #0
   1ea58:	str	r1, [r4, #220]	; 0xdc
   1ea5c:	str	r0, [r4, #228]	; 0xe4
   1ea60:	movw	r1, #41318	; 0xa166
   1ea64:	movt	r1, #4
   1ea68:	mov	r0, r4
   1ea6c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ea70:	ldr	r0, [r4, #228]	; 0xe4
   1ea74:	str	r0, [r4, #220]	; 0xdc
   1ea78:	movw	r1, #39228	; 0x993c
   1ea7c:	movt	r1, #4
   1ea80:	mov	r0, r4
   1ea84:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ea88:	ldr	r0, [r4, #220]	; 0xdc
   1ea8c:	cmp	r0, #0
   1ea90:	beq	1eb5c <__flatcc_fb_gen_c_json_parser@@Base+0x1418>
   1ea94:	sub	r0, r0, #1
   1ea98:	str	r0, [r4, #220]	; 0xdc
   1ea9c:	movw	r1, #35669	; 0x8b55
   1eaa0:	movt	r1, #3
   1eaa4:	mov	r0, r4
   1eaa8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eaac:	movw	r1, #26588	; 0x67dc
   1eab0:	movt	r1, #3
   1eab4:	mov	r0, r4
   1eab8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eabc:	ldr	r0, [sp, #8]
   1eac0:	bl	20180 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1eac4:	sub	sp, fp, #24
   1eac8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1eacc:	movw	r0, #53217	; 0xcfe1
   1ead0:	movt	r0, #3
   1ead4:	movw	r1, #37292	; 0x91ac
   1ead8:	movt	r1, #4
   1eadc:	movw	r3, #40809	; 0x9f69
   1eae0:	movt	r3, #4
   1eae4:	movw	r2, #1301	; 0x515
   1eae8:	bl	14ab4 <__assert_fail@plt>
   1eaec:	movw	r0, #8368	; 0x20b0
   1eaf0:	movt	r0, #6
   1eaf4:	ldr	r0, [r0]
   1eaf8:	movw	r1, #39563	; 0x9a8b
   1eafc:	movt	r1, #4
   1eb00:	str	r1, [sp]
   1eb04:	movw	r1, #26331	; 0x66db
   1eb08:	movt	r1, #3
   1eb0c:	movw	r4, #37292	; 0x91ac
   1eb10:	movt	r4, #4
   1eb14:	mov	r2, r4
   1eb18:	movw	r3, #1303	; 0x517
   1eb1c:	bl	149f4 <fprintf@plt>
   1eb20:	movw	r0, #30217	; 0x7609
   1eb24:	movt	r0, #4
   1eb28:	movw	r3, #40809	; 0x9f69
   1eb2c:	movt	r3, #4
   1eb30:	mov	r1, r4
   1eb34:	movw	r2, #1303	; 0x517
   1eb38:	bl	14ab4 <__assert_fail@plt>
   1eb3c:	movw	r0, #37280	; 0x91a0
   1eb40:	movt	r0, #4
   1eb44:	movw	r1, #37292	; 0x91ac
   1eb48:	movt	r1, #4
   1eb4c:	movw	r3, #40809	; 0x9f69
   1eb50:	movt	r3, #4
   1eb54:	movw	r2, #1334	; 0x536
   1eb58:	bl	14ab4 <__assert_fail@plt>
   1eb5c:	movw	r0, #37280	; 0x91a0
   1eb60:	movt	r0, #4
   1eb64:	movw	r1, #37292	; 0x91ac
   1eb68:	movt	r1, #4
   1eb6c:	movw	r3, #40809	; 0x9f69
   1eb70:	movt	r3, #4
   1eb74:	movw	r2, #1343	; 0x53f
   1eb78:	bl	14ab4 <__assert_fail@plt>
   1eb7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1eb80:	add	fp, sp, #24
   1eb84:	sub	sp, sp, #232	; 0xe8
   1eb88:	mov	r4, r0
   1eb8c:	ldrh	r0, [r1, #8]
   1eb90:	cmp	r0, #1
   1eb94:	bne	1ed5c <__flatcc_fb_gen_c_json_parser@@Base+0x1618>
   1eb98:	mov	r6, r1
   1eb9c:	add	r5, sp, #8
   1eba0:	mov	r7, #0
   1eba4:	mov	r0, r5
   1eba8:	mov	r1, #0
   1ebac:	mov	r2, #220	; 0xdc
   1ebb0:	bl	14a0c <memset@plt>
   1ebb4:	mov	r0, r6
   1ebb8:	mov	r1, r5
   1ebbc:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1ebc0:	movw	r1, #44116	; 0xac54
   1ebc4:	movt	r1, #4
   1ebc8:	mov	r0, r4
   1ebcc:	mov	r2, r5
   1ebd0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ebd4:	movw	r1, #50495	; 0xc53f
   1ebd8:	movt	r1, #4
   1ebdc:	mov	r0, r4
   1ebe0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ebe4:	ldr	r0, [r4, #220]	; 0xdc
   1ebe8:	add	r0, r0, #1
   1ebec:	str	r0, [r4, #220]	; 0xdc
   1ebf0:	movw	r1, #41038	; 0xa04e
   1ebf4:	movt	r1, #4
   1ebf8:	mov	r0, r4
   1ebfc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ec00:	movw	r1, #26588	; 0x67dc
   1ec04:	movt	r1, #3
   1ec08:	mov	r0, r4
   1ec0c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ec10:	movw	r1, #38518	; 0x9676
   1ec14:	movt	r1, #4
   1ec18:	mov	r0, r4
   1ec1c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ec20:	ldrd	r2, [r6, #112]	; 0x70
   1ec24:	ldrh	r0, [r6, #104]	; 0x68
   1ec28:	str	r0, [sp]
   1ec2c:	movw	r1, #44247	; 0xacd7
   1ec30:	movt	r1, #4
   1ec34:	mov	r0, r4
   1ec38:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ec3c:	movw	r1, #42897	; 0xa791
   1ec40:	movt	r1, #4
   1ec44:	mov	r0, r4
   1ec48:	mov	r2, r5
   1ec4c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ec50:	movw	r1, #44323	; 0xad23
   1ec54:	movt	r1, #4
   1ec58:	mov	r0, r4
   1ec5c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ec60:	movw	r1, #39200	; 0x9920
   1ec64:	movt	r1, #4
   1ec68:	mov	r0, r4
   1ec6c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ec70:	ldr	r0, [r4, #220]	; 0xdc
   1ec74:	str	r7, [r4, #220]	; 0xdc
   1ec78:	str	r0, [r4, #228]	; 0xe4
   1ec7c:	movw	r1, #41318	; 0xa166
   1ec80:	movt	r1, #4
   1ec84:	mov	r0, r4
   1ec88:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ec8c:	ldr	r0, [r4, #228]	; 0xe4
   1ec90:	str	r0, [r4, #220]	; 0xdc
   1ec94:	movw	r1, #39228	; 0x993c
   1ec98:	movt	r1, #4
   1ec9c:	mov	r0, r4
   1eca0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eca4:	ldr	r0, [r4, #220]	; 0xdc
   1eca8:	cmp	r0, #0
   1ecac:	beq	1ed7c <__flatcc_fb_gen_c_json_parser@@Base+0x1638>
   1ecb0:	sub	r0, r0, #1
   1ecb4:	str	r0, [r4, #220]	; 0xdc
   1ecb8:	movw	r1, #35669	; 0x8b55
   1ecbc:	movt	r1, #3
   1ecc0:	mov	r0, r4
   1ecc4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ecc8:	movw	r1, #26588	; 0x67dc
   1eccc:	movt	r1, #3
   1ecd0:	mov	r0, r4
   1ecd4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ecd8:	movw	r1, #44404	; 0xad74
   1ecdc:	movt	r1, #4
   1ece0:	add	r5, sp, #8
   1ece4:	mov	r0, r4
   1ece8:	mov	r2, r5
   1ecec:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ecf0:	movw	r1, #50495	; 0xc53f
   1ecf4:	movt	r1, #4
   1ecf8:	mov	r0, r4
   1ecfc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ed00:	ldr	r0, [r4, #220]	; 0xdc
   1ed04:	add	r0, r0, #1
   1ed08:	str	r0, [r4, #220]	; 0xdc
   1ed0c:	movw	r1, #44552	; 0xae08
   1ed10:	movt	r1, #4
   1ed14:	mov	r0, r4
   1ed18:	mov	r2, r5
   1ed1c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ed20:	ldr	r0, [r4, #220]	; 0xdc
   1ed24:	cmp	r0, #0
   1ed28:	beq	1ed9c <__flatcc_fb_gen_c_json_parser@@Base+0x1658>
   1ed2c:	sub	r0, r0, #1
   1ed30:	str	r0, [r4, #220]	; 0xdc
   1ed34:	movw	r1, #35669	; 0x8b55
   1ed38:	movt	r1, #3
   1ed3c:	mov	r0, r4
   1ed40:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ed44:	movw	r1, #26588	; 0x67dc
   1ed48:	movt	r1, #3
   1ed4c:	mov	r0, r4
   1ed50:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ed54:	sub	sp, fp, #24
   1ed58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ed5c:	movw	r0, #53217	; 0xcfe1
   1ed60:	movt	r0, #3
   1ed64:	movw	r1, #37292	; 0x91ac
   1ed68:	movt	r1, #4
   1ed6c:	movw	r3, #44057	; 0xac19
   1ed70:	movt	r3, #4
   1ed74:	movw	r2, #1353	; 0x549
   1ed78:	bl	14ab4 <__assert_fail@plt>
   1ed7c:	movw	r0, #37280	; 0x91a0
   1ed80:	movt	r0, #4
   1ed84:	movw	r1, #37292	; 0x91ac
   1ed88:	movt	r1, #4
   1ed8c:	movw	r3, #44057	; 0xac19
   1ed90:	movt	r3, #4
   1ed94:	movw	r2, #1370	; 0x55a
   1ed98:	bl	14ab4 <__assert_fail@plt>
   1ed9c:	movw	r0, #37280	; 0x91a0
   1eda0:	movt	r0, #4
   1eda4:	movw	r1, #37292	; 0x91ac
   1eda8:	movt	r1, #4
   1edac:	movw	r3, #44057	; 0xac19
   1edb0:	movt	r3, #4
   1edb4:	mov	r2, #1376	; 0x560
   1edb8:	bl	14ab4 <__assert_fail@plt>
   1edbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1edc0:	add	fp, sp, #28
   1edc4:	sub	sp, sp, #268	; 0x10c
   1edc8:	mov	r7, r1
   1edcc:	mov	r4, r0
   1edd0:	vmov.i32	q8, #0	; 0x00000000
   1edd4:	mov	r0, #12
   1edd8:	add	r1, sp, #8
   1eddc:	vst1.64	{d16-d17}, [r1], r0
   1ede0:	vst1.32	{d16-d17}, [r1]
   1ede4:	ldrh	r0, [r7, #8]
   1ede8:	cmp	r0, #0
   1edec:	bne	1f298 <__flatcc_fb_gen_c_json_parser@@Base+0x1b54>
   1edf0:	add	r1, sp, #36	; 0x24
   1edf4:	mov	r0, r7
   1edf8:	bl	1f954 <__flatcc_fb_gen_c_json_parser@@Base+0x2210>
   1edfc:	str	r0, [sp, #8]
   1ee00:	ldr	sl, [sp, #36]	; 0x24
   1ee04:	cmp	r0, #0
   1ee08:	bne	1ee14 <__flatcc_fb_gen_c_json_parser@@Base+0x16d0>
   1ee0c:	cmp	sl, #1
   1ee10:	bge	1f2b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b74>
   1ee14:	mov	r1, #0
   1ee18:	str	r1, [sp, #24]
   1ee1c:	str	r7, [sp, #20]
   1ee20:	str	r1, [sp, #28]
   1ee24:	movw	r1, #2564	; 0xa04
   1ee28:	movt	r1, #2
   1ee2c:	str	r1, [sp, #16]
   1ee30:	movw	r1, #2392	; 0x958
   1ee34:	movt	r1, #2
   1ee38:	str	r1, [sp, #12]
   1ee3c:	cmp	sl, #1
   1ee40:	blt	1ee68 <__flatcc_fb_gen_c_json_parser@@Base+0x1724>
   1ee44:	add	r1, r0, #12
   1ee48:	ldr	r0, [sp, #28]
   1ee4c:	mov	r2, sl
   1ee50:	ldr	r3, [r1], #16
   1ee54:	cmp	r3, #0
   1ee58:	addne	r0, r0, #1
   1ee5c:	subs	r2, r2, #1
   1ee60:	bne	1ee50 <__flatcc_fb_gen_c_json_parser@@Base+0x170c>
   1ee64:	str	r0, [sp, #28]
   1ee68:	add	r6, sp, #40	; 0x28
   1ee6c:	mov	r0, r6
   1ee70:	mov	r1, #0
   1ee74:	mov	r2, #220	; 0xdc
   1ee78:	bl	14a0c <memset@plt>
   1ee7c:	mov	r0, r7
   1ee80:	mov	r1, r6
   1ee84:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   1ee88:	movw	r1, #44707	; 0xaea3
   1ee8c:	movt	r1, #4
   1ee90:	mov	r0, r4
   1ee94:	mov	r2, r6
   1ee98:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ee9c:	movw	r1, #50495	; 0xc53f
   1eea0:	movt	r1, #4
   1eea4:	mov	r0, r4
   1eea8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eeac:	ldr	r0, [r4, #220]	; 0xdc
   1eeb0:	add	r0, r0, #1
   1eeb4:	str	r0, [r4, #220]	; 0xdc
   1eeb8:	movw	r1, #41002	; 0xa02a
   1eebc:	movt	r1, #4
   1eec0:	mov	r0, r4
   1eec4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eec8:	cmp	sl, #1
   1eecc:	blt	1ef10 <__flatcc_fb_gen_c_json_parser@@Base+0x17cc>
   1eed0:	movw	r1, #41038	; 0xa04e
   1eed4:	movt	r1, #4
   1eed8:	mov	r0, r4
   1eedc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eee0:	movw	r1, #44837	; 0xaf25
   1eee4:	movt	r1, #4
   1eee8:	mov	r0, r4
   1eeec:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1eef0:	movw	r1, #39773	; 0x9b5d
   1eef4:	movt	r1, #4
   1eef8:	mov	r0, r4
   1eefc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ef00:	movw	r1, #39791	; 0x9b6f
   1ef04:	movt	r1, #4
   1ef08:	mov	r0, r4
   1ef0c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ef10:	ldr	r0, [sp, #28]
   1ef14:	cmp	r0, #0
   1ef18:	beq	1ef2c <__flatcc_fb_gen_c_json_parser@@Base+0x17e8>
   1ef1c:	movw	r1, #44870	; 0xaf46
   1ef20:	movt	r1, #4
   1ef24:	mov	r0, r4
   1ef28:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ef2c:	movw	r1, #26588	; 0x67dc
   1ef30:	movt	r1, #3
   1ef34:	mov	r0, r4
   1ef38:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ef3c:	movw	r1, #38518	; 0x9676
   1ef40:	movt	r1, #4
   1ef44:	mov	r0, r4
   1ef48:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ef4c:	ldrd	r2, [r7, #96]	; 0x60
   1ef50:	movw	r1, #44887	; 0xaf57
   1ef54:	movt	r1, #4
   1ef58:	mov	r0, r4
   1ef5c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ef60:	ldr	r2, [sp, #28]
   1ef64:	cmp	r2, #0
   1ef68:	beq	1ef80 <__flatcc_fb_gen_c_json_parser@@Base+0x183c>
   1ef6c:	asr	r3, r2, #31
   1ef70:	movw	r1, #44948	; 0xaf94
   1ef74:	movt	r1, #4
   1ef78:	mov	r0, r4
   1ef7c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ef80:	movw	r1, #41050	; 0xa05a
   1ef84:	movt	r1, #4
   1ef88:	mov	r0, r4
   1ef8c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ef90:	movw	r1, #41111	; 0xa097
   1ef94:	movt	r1, #4
   1ef98:	mov	r0, r4
   1ef9c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1efa0:	ldr	r0, [r4, #220]	; 0xdc
   1efa4:	add	r0, r0, #1
   1efa8:	str	r0, [r4, #220]	; 0xdc
   1efac:	movw	r1, #41204	; 0xa0f4
   1efb0:	movt	r1, #4
   1efb4:	mov	r0, r4
   1efb8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1efbc:	cmp	sl, #1
   1efc0:	blt	1eff4 <__flatcc_fb_gen_c_json_parser@@Base+0x18b0>
   1efc4:	movw	r1, #39803	; 0x9b7b
   1efc8:	movt	r1, #4
   1efcc:	mov	r0, r4
   1efd0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1efd4:	mov	r0, #0
   1efd8:	str	r0, [sp]
   1efdc:	sub	r3, sl, #1
   1efe0:	add	r1, sp, #8
   1efe4:	mov	r0, r4
   1efe8:	mov	r2, #0
   1efec:	bl	1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1eff0:	b	1f014 <__flatcc_fb_gen_c_json_parser@@Base+0x18d0>
   1eff4:	movw	r1, #45039	; 0xafef
   1eff8:	movt	r1, #4
   1effc:	mov	r0, r4
   1f000:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f004:	movw	r1, #41146	; 0xa0ba
   1f008:	movt	r1, #4
   1f00c:	mov	r0, r4
   1f010:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f014:	movw	r1, #45066	; 0xb00a
   1f018:	movt	r1, #4
   1f01c:	mov	r0, r4
   1f020:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f024:	ldr	r0, [r4, #220]	; 0xdc
   1f028:	cmp	r0, #0
   1f02c:	beq	1f308 <__flatcc_fb_gen_c_json_parser@@Base+0x1bc4>
   1f030:	sub	r0, r0, #1
   1f034:	str	r0, [r4, #220]	; 0xdc
   1f038:	movw	r1, #35669	; 0x8b55
   1f03c:	movt	r1, #3
   1f040:	mov	r0, r4
   1f044:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f048:	movw	r1, #45125	; 0xb045
   1f04c:	movt	r1, #4
   1f050:	mov	r0, r4
   1f054:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f058:	cmp	sl, #1
   1f05c:	blt	1f164 <__flatcc_fb_gen_c_json_parser@@Base+0x1a20>
   1f060:	mov	r6, #0
   1f064:	mov	r5, #1
   1f068:	movw	r9, #45211	; 0xb09b
   1f06c:	movt	r9, #4
   1f070:	movw	r8, #45154	; 0xb062
   1f074:	movt	r8, #4
   1f078:	b	1f094 <__flatcc_fb_gen_c_json_parser@@Base+0x1950>
   1f07c:	mov	r1, r9
   1f080:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f084:	mov	r5, #0
   1f088:	add	r6, r6, #1
   1f08c:	cmp	sl, r6
   1f090:	beq	1f0e8 <__flatcc_fb_gen_c_json_parser@@Base+0x19a4>
   1f094:	ldr	r0, [sp, #8]
   1f098:	add	r0, r0, r6, lsl #4
   1f09c:	ldr	r7, [r0, #8]
   1f0a0:	ldrh	r0, [r7, #72]	; 0x48
   1f0a4:	and	r0, r0, #260	; 0x104
   1f0a8:	cmp	r0, #256	; 0x100
   1f0ac:	bne	1f088 <__flatcc_fb_gen_c_json_parser@@Base+0x1944>
   1f0b0:	mov	r0, r7
   1f0b4:	bl	2018c <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1f0b8:	ldrd	r2, [r7, #96]	; 0x60
   1f0bc:	subs	r2, r2, r0
   1f0c0:	sbc	r3, r3, r0, asr #31
   1f0c4:	mov	r0, r4
   1f0c8:	cmp	r5, #0
   1f0cc:	beq	1f07c <__flatcc_fb_gen_c_json_parser@@Base+0x1938>
   1f0d0:	mov	r1, r8
   1f0d4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f0d8:	ldr	r0, [r4, #220]	; 0xdc
   1f0dc:	add	r0, r0, #1
   1f0e0:	str	r0, [r4, #220]	; 0xdc
   1f0e4:	b	1f084 <__flatcc_fb_gen_c_json_parser@@Base+0x1940>
   1f0e8:	cmp	r5, #0
   1f0ec:	bne	1f164 <__flatcc_fb_gen_c_json_parser@@Base+0x1a20>
   1f0f0:	ldr	r0, [r4, #220]	; 0xdc
   1f0f4:	cmp	r0, #0
   1f0f8:	beq	1f368 <__flatcc_fb_gen_c_json_parser@@Base+0x1c24>
   1f0fc:	sub	r0, r0, #1
   1f100:	str	r0, [r4, #220]	; 0xdc
   1f104:	movw	r1, #42670	; 0xa6ae
   1f108:	movt	r1, #4
   1f10c:	mov	r0, r4
   1f110:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f114:	ldr	r0, [r4, #220]	; 0xdc
   1f118:	add	r0, r0, #1
   1f11c:	str	r0, [r4, #220]	; 0xdc
   1f120:	movw	r1, #45268	; 0xb0d4
   1f124:	movt	r1, #4
   1f128:	mov	r0, r4
   1f12c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f130:	movw	r1, #42193	; 0xa4d1
   1f134:	movt	r1, #4
   1f138:	mov	r0, r4
   1f13c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f140:	ldr	r0, [r4, #220]	; 0xdc
   1f144:	cmp	r0, #0
   1f148:	beq	1f388 <__flatcc_fb_gen_c_json_parser@@Base+0x1c44>
   1f14c:	sub	r0, r0, #1
   1f150:	str	r0, [r4, #220]	; 0xdc
   1f154:	movw	r1, #35669	; 0x8b55
   1f158:	movt	r1, #3
   1f15c:	mov	r0, r4
   1f160:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f164:	ldr	r0, [sp, #28]
   1f168:	cmp	r0, #0
   1f16c:	beq	1f180 <__flatcc_fb_gen_c_json_parser@@Base+0x1a3c>
   1f170:	movw	r1, #45354	; 0xb12a
   1f174:	movt	r1, #4
   1f178:	mov	r0, r4
   1f17c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f180:	movw	r1, #45421	; 0xb16d
   1f184:	movt	r1, #4
   1f188:	mov	r0, r4
   1f18c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f190:	movw	r1, #39200	; 0x9920
   1f194:	movt	r1, #4
   1f198:	mov	r0, r4
   1f19c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f1a0:	ldr	r0, [r4, #220]	; 0xdc
   1f1a4:	mov	r1, #0
   1f1a8:	str	r1, [r4, #220]	; 0xdc
   1f1ac:	str	r0, [r4, #228]	; 0xe4
   1f1b0:	movw	r1, #41318	; 0xa166
   1f1b4:	movt	r1, #4
   1f1b8:	mov	r0, r4
   1f1bc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f1c0:	ldr	r0, [r4, #228]	; 0xe4
   1f1c4:	str	r0, [r4, #220]	; 0xdc
   1f1c8:	movw	r1, #39228	; 0x993c
   1f1cc:	movt	r1, #4
   1f1d0:	mov	r0, r4
   1f1d4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f1d8:	ldr	r0, [r4, #220]	; 0xdc
   1f1dc:	cmp	r0, #0
   1f1e0:	beq	1f328 <__flatcc_fb_gen_c_json_parser@@Base+0x1be4>
   1f1e4:	sub	r0, r0, #1
   1f1e8:	str	r0, [r4, #220]	; 0xdc
   1f1ec:	movw	r1, #35669	; 0x8b55
   1f1f0:	movt	r1, #3
   1f1f4:	mov	r0, r4
   1f1f8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f1fc:	movw	r1, #26588	; 0x67dc
   1f200:	movt	r1, #3
   1f204:	mov	r0, r4
   1f208:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f20c:	movw	r1, #44404	; 0xad74
   1f210:	movt	r1, #4
   1f214:	add	r5, sp, #40	; 0x28
   1f218:	mov	r0, r4
   1f21c:	mov	r2, r5
   1f220:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f224:	movw	r1, #50495	; 0xc53f
   1f228:	movt	r1, #4
   1f22c:	mov	r0, r4
   1f230:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f234:	ldr	r0, [r4, #220]	; 0xdc
   1f238:	add	r0, r0, #1
   1f23c:	str	r0, [r4, #220]	; 0xdc
   1f240:	movw	r1, #45487	; 0xb1af
   1f244:	movt	r1, #4
   1f248:	mov	r0, r4
   1f24c:	mov	r2, r5
   1f250:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f254:	ldr	r0, [r4, #220]	; 0xdc
   1f258:	cmp	r0, #0
   1f25c:	beq	1f348 <__flatcc_fb_gen_c_json_parser@@Base+0x1c04>
   1f260:	sub	r0, r0, #1
   1f264:	str	r0, [r4, #220]	; 0xdc
   1f268:	movw	r1, #35669	; 0x8b55
   1f26c:	movt	r1, #3
   1f270:	mov	r0, r4
   1f274:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f278:	movw	r1, #26588	; 0x67dc
   1f27c:	movt	r1, #3
   1f280:	mov	r0, r4
   1f284:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f288:	ldr	r0, [sp, #8]
   1f28c:	bl	20180 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1f290:	sub	sp, fp, #28
   1f294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f298:	movw	r0, #51484	; 0xc91c
   1f29c:	movt	r0, #3
   1f2a0:	movw	r1, #37292	; 0x91ac
   1f2a4:	movt	r1, #4
   1f2a8:	movw	r3, #44649	; 0xae69
   1f2ac:	movt	r3, #4
   1f2b0:	movw	r2, #1390	; 0x56e
   1f2b4:	bl	14ab4 <__assert_fail@plt>
   1f2b8:	movw	r0, #8368	; 0x20b0
   1f2bc:	movt	r0, #6
   1f2c0:	ldr	r0, [r0]
   1f2c4:	movw	r1, #39563	; 0x9a8b
   1f2c8:	movt	r1, #4
   1f2cc:	str	r1, [sp]
   1f2d0:	movw	r1, #26331	; 0x66db
   1f2d4:	movt	r1, #3
   1f2d8:	movw	r4, #37292	; 0x91ac
   1f2dc:	movt	r4, #4
   1f2e0:	mov	r2, r4
   1f2e4:	mov	r3, #1392	; 0x570
   1f2e8:	bl	149f4 <fprintf@plt>
   1f2ec:	movw	r0, #30217	; 0x7609
   1f2f0:	movt	r0, #4
   1f2f4:	movw	r3, #44649	; 0xae69
   1f2f8:	movt	r3, #4
   1f2fc:	mov	r1, r4
   1f300:	mov	r2, #1392	; 0x570
   1f304:	bl	14ab4 <__assert_fail@plt>
   1f308:	movw	r0, #37280	; 0x91a0
   1f30c:	movt	r0, #4
   1f310:	movw	r1, #37292	; 0x91ac
   1f314:	movt	r1, #4
   1f318:	movw	r3, #44649	; 0xae69
   1f31c:	movt	r3, #4
   1f320:	movw	r2, #1438	; 0x59e
   1f324:	bl	14ab4 <__assert_fail@plt>
   1f328:	movw	r0, #37280	; 0x91a0
   1f32c:	movt	r0, #4
   1f330:	movw	r1, #37292	; 0x91ac
   1f334:	movt	r1, #4
   1f338:	movw	r3, #44649	; 0xae69
   1f33c:	movt	r3, #4
   1f340:	movw	r2, #1473	; 0x5c1
   1f344:	bl	14ab4 <__assert_fail@plt>
   1f348:	movw	r0, #37280	; 0x91a0
   1f34c:	movt	r0, #4
   1f350:	movw	r1, #37292	; 0x91ac
   1f354:	movt	r1, #4
   1f358:	movw	r3, #44649	; 0xae69
   1f35c:	movt	r3, #4
   1f360:	movw	r2, #1479	; 0x5c7
   1f364:	bl	14ab4 <__assert_fail@plt>
   1f368:	movw	r0, #37280	; 0x91a0
   1f36c:	movt	r0, #4
   1f370:	movw	r1, #37292	; 0x91ac
   1f374:	movt	r1, #4
   1f378:	movw	r3, #44649	; 0xae69
   1f37c:	movt	r3, #4
   1f380:	movw	r2, #1458	; 0x5b2
   1f384:	bl	14ab4 <__assert_fail@plt>
   1f388:	movw	r0, #37280	; 0x91a0
   1f38c:	movt	r0, #4
   1f390:	movw	r1, #37292	; 0x91ac
   1f394:	movt	r1, #4
   1f398:	movw	r3, #44649	; 0xae69
   1f39c:	movt	r3, #4
   1f3a0:	movw	r2, #1461	; 0x5b5
   1f3a4:	bl	14ab4 <__assert_fail@plt>
   1f3a8:	push	{r4, r5, r6, sl, fp, lr}
   1f3ac:	add	fp, sp, #16
   1f3b0:	sub	sp, sp, #240	; 0xf0
   1f3b4:	mov	r5, r1
   1f3b8:	mov	r4, r0
   1f3bc:	mov	r6, #0
   1f3c0:	str	r6, [fp, #-20]	; 0xffffffec
   1f3c4:	vmov.i32	q8, #0	; 0x00000000
   1f3c8:	sub	r0, fp, #48	; 0x30
   1f3cc:	add	r0, r0, #4
   1f3d0:	vst1.32	{d16-d17}, [r0]
   1f3d4:	str	r6, [fp, #-24]	; 0xffffffe8
   1f3d8:	str	r6, [fp, #-28]	; 0xffffffe4
   1f3dc:	add	r1, sp, #4
   1f3e0:	mov	r0, r5
   1f3e4:	bl	16780 <__flatcc_fb_copy_scope@@Base>
   1f3e8:	ldr	r0, [r4, #208]	; 0xd0
   1f3ec:	sub	r2, fp, #20
   1f3f0:	mov	r1, r5
   1f3f4:	bl	217ac <__flatcc_fb_gen_c_json_parser@@Base+0x4068>
   1f3f8:	str	r0, [fp, #-48]	; 0xffffffd0
   1f3fc:	ldr	r5, [fp, #-20]	; 0xffffffec
   1f400:	cmp	r0, #0
   1f404:	bne	1f410 <__flatcc_fb_gen_c_json_parser@@Base+0x1ccc>
   1f408:	cmp	r5, #1
   1f40c:	bge	1f5dc <__flatcc_fb_gen_c_json_parser@@Base+0x1e98>
   1f410:	mov	r0, #3
   1f414:	str	r0, [fp, #-32]	; 0xffffffe0
   1f418:	str	r6, [fp, #-36]	; 0xffffffdc
   1f41c:	movw	r0, #6368	; 0x18e0
   1f420:	movt	r0, #2
   1f424:	str	r0, [fp, #-40]	; 0xffffffd8
   1f428:	movw	r0, #6212	; 0x1844
   1f42c:	movt	r0, #2
   1f430:	str	r0, [fp, #-44]	; 0xffffffd4
   1f434:	ldr	r0, [r4, #208]	; 0xd0
   1f438:	ldr	r2, [r0, #160]	; 0xa0
   1f43c:	movw	r1, #38266	; 0x957a
   1f440:	movt	r1, #4
   1f444:	add	r3, sp, #4
   1f448:	mov	r0, r4
   1f44c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f450:	ldr	r0, [r4, #220]	; 0xdc
   1f454:	add	r0, r0, #2
   1f458:	str	r0, [r4, #220]	; 0xdc
   1f45c:	movw	r1, #45632	; 0xb240
   1f460:	movt	r1, #4
   1f464:	mov	r0, r4
   1f468:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f46c:	ldr	r0, [r4, #220]	; 0xdc
   1f470:	cmp	r0, #0
   1f474:	beq	1f5bc <__flatcc_fb_gen_c_json_parser@@Base+0x1e78>
   1f478:	subs	r1, r0, #1
   1f47c:	str	r1, [r4, #220]	; 0xdc
   1f480:	beq	1f5bc <__flatcc_fb_gen_c_json_parser@@Base+0x1e78>
   1f484:	sub	r0, r0, #2
   1f488:	str	r0, [r4, #220]	; 0xdc
   1f48c:	movw	r1, #50495	; 0xc53f
   1f490:	movt	r1, #4
   1f494:	mov	r0, r4
   1f498:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f49c:	ldr	r0, [r4, #220]	; 0xdc
   1f4a0:	add	r0, r0, #1
   1f4a4:	str	r0, [r4, #220]	; 0xdc
   1f4a8:	cmp	r5, #0
   1f4ac:	beq	1f558 <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   1f4b0:	movw	r1, #39744	; 0x9b40
   1f4b4:	movt	r1, #4
   1f4b8:	mov	r0, r4
   1f4bc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f4c0:	movw	r1, #39773	; 0x9b5d
   1f4c4:	movt	r1, #4
   1f4c8:	mov	r0, r4
   1f4cc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f4d0:	movw	r1, #39791	; 0x9b6f
   1f4d4:	movt	r1, #4
   1f4d8:	mov	r0, r4
   1f4dc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f4e0:	movw	r1, #26588	; 0x67dc
   1f4e4:	movt	r1, #3
   1f4e8:	mov	r0, r4
   1f4ec:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f4f0:	movw	r1, #39803	; 0x9b7b
   1f4f4:	movt	r1, #4
   1f4f8:	mov	r0, r4
   1f4fc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f500:	mov	r0, #0
   1f504:	str	r0, [sp]
   1f508:	sub	r3, r5, #1
   1f50c:	sub	r1, fp, #48	; 0x30
   1f510:	mov	r0, r4
   1f514:	mov	r2, #0
   1f518:	bl	1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1f51c:	movw	r1, #39200	; 0x9920
   1f520:	movt	r1, #4
   1f524:	mov	r0, r4
   1f528:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f52c:	ldr	r0, [r4, #220]	; 0xdc
   1f530:	cmp	r0, #0
   1f534:	bne	1f584 <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   1f538:	movw	r0, #37280	; 0x91a0
   1f53c:	movt	r0, #4
   1f540:	movw	r1, #37292	; 0x91ac
   1f544:	movt	r1, #4
   1f548:	movw	r3, #45582	; 0xb20e
   1f54c:	movt	r3, #4
   1f550:	movw	r2, #1166	; 0x48e
   1f554:	bl	14ab4 <__assert_fail@plt>
   1f558:	movw	r1, #45682	; 0xb272
   1f55c:	movt	r1, #4
   1f560:	mov	r0, r4
   1f564:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f568:	movw	r1, #39715	; 0x9b23
   1f56c:	movt	r1, #4
   1f570:	mov	r0, r4
   1f574:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f578:	ldr	r0, [r4, #220]	; 0xdc
   1f57c:	cmp	r0, #0
   1f580:	beq	1f62c <__flatcc_fb_gen_c_json_parser@@Base+0x1ee8>
   1f584:	sub	r0, r0, #1
   1f588:	str	r0, [r4, #220]	; 0xdc
   1f58c:	movw	r1, #35669	; 0x8b55
   1f590:	movt	r1, #3
   1f594:	mov	r0, r4
   1f598:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f59c:	movw	r1, #26588	; 0x67dc
   1f5a0:	movt	r1, #3
   1f5a4:	mov	r0, r4
   1f5a8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f5ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f5b0:	bl	20180 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1f5b4:	sub	sp, fp, #16
   1f5b8:	pop	{r4, r5, r6, sl, fp, pc}
   1f5bc:	movw	r0, #37280	; 0x91a0
   1f5c0:	movt	r0, #4
   1f5c4:	movw	r1, #37292	; 0x91ac
   1f5c8:	movt	r1, #4
   1f5cc:	movw	r3, #45582	; 0xb20e
   1f5d0:	movt	r3, #4
   1f5d4:	mov	r2, #1152	; 0x480
   1f5d8:	bl	14ab4 <__assert_fail@plt>
   1f5dc:	movw	r0, #8368	; 0x20b0
   1f5e0:	movt	r0, #6
   1f5e4:	ldr	r0, [r0]
   1f5e8:	movw	r1, #39563	; 0x9a8b
   1f5ec:	movt	r1, #4
   1f5f0:	str	r1, [sp]
   1f5f4:	movw	r1, #26331	; 0x66db
   1f5f8:	movt	r1, #3
   1f5fc:	movw	r4, #37292	; 0x91ac
   1f600:	movt	r4, #4
   1f604:	mov	r2, r4
   1f608:	movw	r3, #1140	; 0x474
   1f60c:	bl	149f4 <fprintf@plt>
   1f610:	movw	r0, #30217	; 0x7609
   1f614:	movt	r0, #4
   1f618:	movw	r3, #45582	; 0xb20e
   1f61c:	movt	r3, #4
   1f620:	mov	r1, r4
   1f624:	movw	r2, #1140	; 0x474
   1f628:	bl	14ab4 <__assert_fail@plt>
   1f62c:	movw	r0, #37280	; 0x91a0
   1f630:	movt	r0, #4
   1f634:	movw	r1, #37292	; 0x91ac
   1f638:	movt	r1, #4
   1f63c:	movw	r3, #45582	; 0xb20e
   1f640:	movt	r3, #4
   1f644:	movw	r2, #1157	; 0x485
   1f648:	bl	14ab4 <__assert_fail@plt>
   1f64c:	push	{r4, r5, fp, lr}
   1f650:	add	fp, sp, #8
   1f654:	sub	sp, sp, #80	; 0x50
   1f658:	mov	r4, r0
   1f65c:	mov	r0, #0
   1f660:	str	r0, [fp, #-12]
   1f664:	vmov.i32	q8, #0	; 0x00000000
   1f668:	mov	r0, #12
   1f66c:	sub	r1, fp, #40	; 0x28
   1f670:	vst1.64	{d16-d17}, [r1], r0
   1f674:	vst1.32	{d16-d17}, [r1]
   1f678:	ldr	r1, [r4, #208]	; 0xd0
   1f67c:	ldr	r2, [r1, #60]	; 0x3c
   1f680:	add	r0, sp, #4
   1f684:	bl	21a38 <__flatcc_fb_gen_c_json_parser@@Base+0x42f4>
   1f688:	cmp	r0, #0
   1f68c:	beq	1f698 <__flatcc_fb_gen_c_json_parser@@Base+0x1f54>
   1f690:	sub	sp, fp, #8
   1f694:	pop	{r4, r5, fp, pc}
   1f698:	add	r0, sp, #4
   1f69c:	sub	r1, fp, #12
   1f6a0:	bl	21b44 <__flatcc_fb_gen_c_json_parser@@Base+0x4400>
   1f6a4:	str	r0, [fp, #-40]	; 0xffffffd8
   1f6a8:	ldr	r5, [fp, #-12]
   1f6ac:	cmp	r0, #0
   1f6b0:	bne	1f6bc <__flatcc_fb_gen_c_json_parser@@Base+0x1f78>
   1f6b4:	cmp	r5, #1
   1f6b8:	bge	1f890 <__flatcc_fb_gen_c_json_parser@@Base+0x214c>
   1f6bc:	mov	r0, #4
   1f6c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1f6c4:	mov	r0, #0
   1f6c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1f6cc:	movw	r0, #6368	; 0x18e0
   1f6d0:	movt	r0, #2
   1f6d4:	str	r0, [fp, #-32]	; 0xffffffe0
   1f6d8:	movw	r0, #6212	; 0x1844
   1f6dc:	movt	r0, #2
   1f6e0:	str	r0, [fp, #-36]	; 0xffffffdc
   1f6e4:	ldr	r0, [r4, #208]	; 0xd0
   1f6e8:	ldr	r2, [r0, #160]	; 0xa0
   1f6ec:	movw	r1, #38159	; 0x950f
   1f6f0:	movt	r1, #4
   1f6f4:	mov	r0, r4
   1f6f8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f6fc:	ldr	r0, [r4, #220]	; 0xdc
   1f700:	add	r0, r0, #2
   1f704:	str	r0, [r4, #220]	; 0xdc
   1f708:	movw	r1, #45632	; 0xb240
   1f70c:	movt	r1, #4
   1f710:	mov	r0, r4
   1f714:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f718:	ldr	r0, [r4, #220]	; 0xdc
   1f71c:	cmp	r0, #0
   1f720:	beq	1f870 <__flatcc_fb_gen_c_json_parser@@Base+0x212c>
   1f724:	subs	r1, r0, #1
   1f728:	str	r1, [r4, #220]	; 0xdc
   1f72c:	beq	1f870 <__flatcc_fb_gen_c_json_parser@@Base+0x212c>
   1f730:	sub	r0, r0, #2
   1f734:	str	r0, [r4, #220]	; 0xdc
   1f738:	movw	r1, #50495	; 0xc53f
   1f73c:	movt	r1, #4
   1f740:	mov	r0, r4
   1f744:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f748:	ldr	r0, [r4, #220]	; 0xdc
   1f74c:	add	r0, r0, #1
   1f750:	str	r0, [r4, #220]	; 0xdc
   1f754:	cmp	r5, #0
   1f758:	beq	1f804 <__flatcc_fb_gen_c_json_parser@@Base+0x20c0>
   1f75c:	movw	r1, #39744	; 0x9b40
   1f760:	movt	r1, #4
   1f764:	mov	r0, r4
   1f768:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f76c:	movw	r1, #39773	; 0x9b5d
   1f770:	movt	r1, #4
   1f774:	mov	r0, r4
   1f778:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f77c:	movw	r1, #39791	; 0x9b6f
   1f780:	movt	r1, #4
   1f784:	mov	r0, r4
   1f788:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f78c:	movw	r1, #26588	; 0x67dc
   1f790:	movt	r1, #3
   1f794:	mov	r0, r4
   1f798:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f79c:	movw	r1, #39803	; 0x9b7b
   1f7a0:	movt	r1, #4
   1f7a4:	mov	r0, r4
   1f7a8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f7ac:	mov	r0, #0
   1f7b0:	str	r0, [sp]
   1f7b4:	sub	r3, r5, #1
   1f7b8:	sub	r1, fp, #40	; 0x28
   1f7bc:	mov	r0, r4
   1f7c0:	mov	r2, #0
   1f7c4:	bl	1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1f7c8:	movw	r1, #39200	; 0x9920
   1f7cc:	movt	r1, #4
   1f7d0:	mov	r0, r4
   1f7d4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f7d8:	ldr	r0, [r4, #220]	; 0xdc
   1f7dc:	cmp	r0, #0
   1f7e0:	bne	1f830 <__flatcc_fb_gen_c_json_parser@@Base+0x20ec>
   1f7e4:	movw	r0, #37280	; 0x91a0
   1f7e8:	movt	r0, #4
   1f7ec:	movw	r1, #37292	; 0x91ac
   1f7f0:	movt	r1, #4
   1f7f4:	movw	r3, #46024	; 0xb3c8
   1f7f8:	movt	r3, #4
   1f7fc:	movw	r2, #1219	; 0x4c3
   1f800:	bl	14ab4 <__assert_fail@plt>
   1f804:	movw	r1, #46067	; 0xb3f3
   1f808:	movt	r1, #4
   1f80c:	mov	r0, r4
   1f810:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f814:	movw	r1, #39715	; 0x9b23
   1f818:	movt	r1, #4
   1f81c:	mov	r0, r4
   1f820:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f824:	ldr	r0, [r4, #220]	; 0xdc
   1f828:	cmp	r0, #0
   1f82c:	beq	1f8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x21a4>
   1f830:	sub	r0, r0, #1
   1f834:	str	r0, [r4, #220]	; 0xdc
   1f838:	movw	r1, #35669	; 0x8b55
   1f83c:	movt	r1, #3
   1f840:	mov	r0, r4
   1f844:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f848:	movw	r1, #26588	; 0x67dc
   1f84c:	movt	r1, #3
   1f850:	mov	r0, r4
   1f854:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1f858:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f85c:	bl	20180 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1f860:	add	r0, sp, #4
   1f864:	bl	21bfc <__flatcc_fb_gen_c_json_parser@@Base+0x44b8>
   1f868:	sub	sp, fp, #8
   1f86c:	pop	{r4, r5, fp, pc}
   1f870:	movw	r0, #37280	; 0x91a0
   1f874:	movt	r0, #4
   1f878:	movw	r1, #37292	; 0x91ac
   1f87c:	movt	r1, #4
   1f880:	movw	r3, #46024	; 0xb3c8
   1f884:	movt	r3, #4
   1f888:	movw	r2, #1205	; 0x4b5
   1f88c:	bl	14ab4 <__assert_fail@plt>
   1f890:	add	r0, sp, #4
   1f894:	bl	21bfc <__flatcc_fb_gen_c_json_parser@@Base+0x44b8>
   1f898:	movw	r0, #8368	; 0x20b0
   1f89c:	movt	r0, #6
   1f8a0:	ldr	r0, [r0]
   1f8a4:	movw	r1, #39563	; 0x9a8b
   1f8a8:	movt	r1, #4
   1f8ac:	str	r1, [sp]
   1f8b0:	movw	r1, #26331	; 0x66db
   1f8b4:	movt	r1, #3
   1f8b8:	movw	r4, #37292	; 0x91ac
   1f8bc:	movt	r4, #4
   1f8c0:	mov	r2, r4
   1f8c4:	movw	r3, #1194	; 0x4aa
   1f8c8:	bl	149f4 <fprintf@plt>
   1f8cc:	movw	r0, #30217	; 0x7609
   1f8d0:	movt	r0, #4
   1f8d4:	movw	r3, #46024	; 0xb3c8
   1f8d8:	movt	r3, #4
   1f8dc:	mov	r1, r4
   1f8e0:	movw	r2, #1194	; 0x4aa
   1f8e4:	bl	14ab4 <__assert_fail@plt>
   1f8e8:	movw	r0, #37280	; 0x91a0
   1f8ec:	movt	r0, #4
   1f8f0:	movw	r1, #37292	; 0x91ac
   1f8f4:	movt	r1, #4
   1f8f8:	movw	r3, #46024	; 0xb3c8
   1f8fc:	movt	r3, #4
   1f900:	movw	r2, #1210	; 0x4ba
   1f904:	bl	14ab4 <__assert_fail@plt>
   1f908:	ldr	r1, [r0, #208]	; 0xd0
   1f90c:	ldr	r1, [r1, #52]	; 0x34
   1f910:	cmp	r1, #0
   1f914:	beq	1f930 <__flatcc_fb_gen_c_json_parser@@Base+0x21ec>
   1f918:	ldrh	r2, [r1, #8]
   1f91c:	cmp	r2, #1
   1f920:	beq	1f934 <__flatcc_fb_gen_c_json_parser@@Base+0x21f0>
   1f924:	cmp	r2, #0
   1f928:	bxne	lr
   1f92c:	b	21eb4 <__flatcc_fb_gen_c_json_parser@@Base+0x4770>
   1f930:	bx	lr
   1f934:	b	22118 <__flatcc_fb_gen_c_json_parser@@Base+0x49d4>
   1f938:	ldr	r0, [r0, #4]
   1f93c:	b	1f940 <__flatcc_fb_gen_c_json_parser@@Base+0x21fc>
   1f940:	ldr	r3, [r0, #4]
   1f944:	str	r3, [r1]
   1f948:	ldr	r0, [r0]
   1f94c:	str	r0, [r2]
   1f950:	bx	lr
   1f954:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f958:	add	fp, sp, #28
   1f95c:	sub	sp, sp, #4
   1f960:	mov	r5, r1
   1f964:	ldr	r7, [r0, #20]
   1f968:	cmp	r7, #0
   1f96c:	beq	1faac <__flatcc_fb_gen_c_json_parser@@Base+0x2368>
   1f970:	mov	r8, r0
   1f974:	mov	r6, #0
   1f978:	mov	r4, #0
   1f97c:	b	1f990 <__flatcc_fb_gen_c_json_parser@@Base+0x224c>
   1f980:	add	r4, r4, #1
   1f984:	ldr	r7, [r7]
   1f988:	cmp	r7, #0
   1f98c:	beq	1f9c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2280>
   1f990:	ldrb	r0, [r7, #72]	; 0x48
   1f994:	tst	r0, #4
   1f998:	bne	1f984 <__flatcc_fb_gen_c_json_parser@@Base+0x2240>
   1f99c:	mov	r0, r7
   1f9a0:	bl	2018c <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1f9a4:	cmp	r0, #0
   1f9a8:	beq	1f980 <__flatcc_fb_gen_c_json_parser@@Base+0x223c>
   1f9ac:	ldr	r0, [r7, #4]
   1f9b0:	ldr	r0, [r0, #4]
   1f9b4:	add	r0, r6, r0
   1f9b8:	add	r6, r0, #6
   1f9bc:	add	r4, r4, #1
   1f9c0:	b	1f980 <__flatcc_fb_gen_c_json_parser@@Base+0x223c>
   1f9c4:	str	r4, [r5]
   1f9c8:	mov	r7, #0
   1f9cc:	cmp	r4, #0
   1f9d0:	beq	1fad4 <__flatcc_fb_gen_c_json_parser@@Base+0x2390>
   1f9d4:	add	r0, r6, r4, lsl #4
   1f9d8:	bl	14994 <malloc@plt>
   1f9dc:	str	r0, [sp]
   1f9e0:	cmp	r0, #0
   1f9e4:	beq	1fad4 <__flatcc_fb_gen_c_json_parser@@Base+0x2390>
   1f9e8:	ldr	r6, [r8, #20]
   1f9ec:	cmp	r6, #0
   1f9f0:	beq	1fab8 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   1f9f4:	lsl	r0, r4, #4
   1f9f8:	ldr	r8, [sp]
   1f9fc:	add	r7, r8, r0
   1fa00:	mov	sl, #0
   1fa04:	b	1fa68 <__flatcc_fb_gen_c_json_parser@@Base+0x2324>
   1fa08:	str	sl, [r6, #112]	; 0x70
   1fa0c:	add	r0, r5, #5
   1fa10:	str	r7, [r8, #16]
   1fa14:	str	r0, [r8, #20]
   1fa18:	ldr	r1, [r9]
   1fa1c:	mov	r0, r7
   1fa20:	mov	r2, r5
   1fa24:	bl	14934 <memcpy@plt>
   1fa28:	ldr	r0, [r6, #4]
   1fa2c:	ldr	r0, [r0, #4]
   1fa30:	movw	r1, #29791	; 0x745f
   1fa34:	movt	r1, #28793	; 0x7079
   1fa38:	str	r1, [r7, r0]!
   1fa3c:	mov	r0, #101	; 0x65
   1fa40:	strh	r0, [r7, #4]
   1fa44:	str	r6, [r8, #24]
   1fa48:	mov	r0, #1
   1fa4c:	str	r0, [r8, #28]
   1fa50:	add	r7, r7, #6
   1fa54:	add	r8, r8, #32
   1fa58:	add	sl, sl, #1
   1fa5c:	ldr	r6, [r6]
   1fa60:	cmp	r6, #0
   1fa64:	beq	1fab8 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   1fa68:	ldrb	r0, [r6, #72]	; 0x48
   1fa6c:	tst	r0, #4
   1fa70:	bne	1fa5c <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   1fa74:	ldr	r0, [r6, #4]
   1fa78:	ldr	r0, [r0]
   1fa7c:	str	r0, [r8]
   1fa80:	ldr	r9, [r6, #4]
   1fa84:	ldr	r5, [r9, #4]
   1fa88:	stmib	r8, {r5, r6}
   1fa8c:	mov	r0, #0
   1fa90:	str	r0, [r8, #12]
   1fa94:	mov	r0, r6
   1fa98:	bl	2018c <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1fa9c:	cmp	r0, #0
   1faa0:	bne	1fa08 <__flatcc_fb_gen_c_json_parser@@Base+0x22c4>
   1faa4:	add	r8, r8, #16
   1faa8:	b	1fa5c <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
   1faac:	mov	r7, #0
   1fab0:	str	r7, [r5]
   1fab4:	b	1fad4 <__flatcc_fb_gen_c_json_parser@@Base+0x2390>
   1fab8:	movw	r3, #444	; 0x1bc
   1fabc:	movt	r3, #2
   1fac0:	ldr	r7, [sp]
   1fac4:	mov	r0, r7
   1fac8:	mov	r1, r4
   1facc:	mov	r2, #16
   1fad0:	bl	14a78 <qsort@plt>
   1fad4:	mov	r0, r7
   1fad8:	sub	sp, fp, #28
   1fadc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fae0:	push	{r4, r5, r6, sl, fp, lr}
   1fae4:	add	fp, sp, #16
   1fae8:	mov	r5, r2
   1faec:	mov	r6, r1
   1faf0:	mov	r4, r0
   1faf4:	ldr	r2, [fp, #8]
   1faf8:	movw	r1, #39849	; 0x9ba9
   1fafc:	movt	r1, #4
   1fb00:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fb04:	movw	r1, #39929	; 0x9bf9
   1fb08:	movt	r1, #4
   1fb0c:	mov	r0, r4
   1fb10:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fb14:	ldr	r0, [r4, #220]	; 0xdc
   1fb18:	add	r0, r0, #1
   1fb1c:	str	r0, [r4, #220]	; 0xdc
   1fb20:	mov	r0, r4
   1fb24:	mov	r1, r6
   1fb28:	mov	r2, r5
   1fb2c:	bl	201f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2aac>
   1fb30:	ldr	r0, [r4, #220]	; 0xdc
   1fb34:	cmp	r0, #0
   1fb38:	beq	1fb64 <__flatcc_fb_gen_c_json_parser@@Base+0x2420>
   1fb3c:	sub	r0, r0, #1
   1fb40:	str	r0, [r4, #220]	; 0xdc
   1fb44:	movw	r1, #39120	; 0x98d0
   1fb48:	movt	r1, #4
   1fb4c:	mov	r0, r4
   1fb50:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fb54:	ldr	r0, [r4, #220]	; 0xdc
   1fb58:	add	r0, r0, #1
   1fb5c:	str	r0, [r4, #220]	; 0xdc
   1fb60:	pop	{r4, r5, r6, sl, fp, pc}
   1fb64:	movw	r0, #37280	; 0x91a0
   1fb68:	movt	r0, #4
   1fb6c:	movw	r1, #37292	; 0x91ac
   1fb70:	movt	r1, #4
   1fb74:	movw	r3, #39948	; 0x9c0c
   1fb78:	movt	r3, #4
   1fb7c:	movw	r2, #719	; 0x2cf
   1fb80:	bl	14ab4 <__assert_fail@plt>
   1fb84:	movw	r1, #40220	; 0x9d1c
   1fb88:	movt	r1, #4
   1fb8c:	b	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fb90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb94:	add	fp, sp, #28
   1fb98:	sub	sp, sp, #52	; 0x34
   1fb9c:	mov	r7, r3
   1fba0:	mov	sl, r2
   1fba4:	mov	r8, r1
   1fba8:	mov	r4, r0
   1fbac:	mov	r0, #0
   1fbb0:	str	r0, [sp, #44]	; 0x2c
   1fbb4:	str	r0, [sp, #40]	; 0x28
   1fbb8:	str	r0, [sp, #36]	; 0x24
   1fbbc:	str	r0, [sp, #32]
   1fbc0:	movw	r1, #26588	; 0x67dc
   1fbc4:	movt	r1, #3
   1fbc8:	str	r1, [sp, #28]
   1fbcc:	str	r0, [sp, #24]
   1fbd0:	ldr	r5, [r8]
   1fbd4:	add	r0, r5, r2, lsl #4
   1fbd8:	ldr	r9, [fp, #8]
   1fbdc:	mov	r1, r9
   1fbe0:	bl	2029c <__flatcc_fb_gen_c_json_parser@@Base+0x2b58>
   1fbe4:	cmp	r0, #0
   1fbe8:	beq	1fe90 <__flatcc_fb_gen_c_json_parser@@Base+0x274c>
   1fbec:	mov	r0, r5
   1fbf0:	mov	r1, sl
   1fbf4:	mov	r2, r7
   1fbf8:	mov	r3, r9
   1fbfc:	bl	20658 <__flatcc_fb_gen_c_json_parser@@Base+0x2f14>
   1fc00:	mov	r5, r0
   1fc04:	ldr	r0, [r8]
   1fc08:	cmp	r5, sl
   1fc0c:	ble	1fcf4 <__flatcc_fb_gen_c_json_parser@@Base+0x25b0>
   1fc10:	add	r1, sp, #24
   1fc14:	add	r2, sp, #28
   1fc18:	str	r2, [sp]
   1fc1c:	str	r1, [sp, #4]
   1fc20:	add	r0, r0, r5, lsl #4
   1fc24:	add	r2, sp, #40	; 0x28
   1fc28:	add	r3, sp, #32
   1fc2c:	mov	r1, r9
   1fc30:	bl	2072c <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   1fc34:	ldr	r2, [sp, #40]	; 0x28
   1fc38:	ldr	r3, [sp, #44]	; 0x2c
   1fc3c:	ldr	r0, [sp, #24]
   1fc40:	ldr	r1, [sp, #28]
   1fc44:	stm	sp, {r0, r1}
   1fc48:	movw	r1, #40238	; 0x9d2e
   1fc4c:	movt	r1, #4
   1fc50:	mov	r0, r4
   1fc54:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fc58:	ldr	r0, [r4, #220]	; 0xdc
   1fc5c:	add	r0, r0, #1
   1fc60:	str	r0, [r4, #220]	; 0xdc
   1fc64:	str	r9, [sp]
   1fc68:	sub	r3, r5, #1
   1fc6c:	mov	r0, r4
   1fc70:	mov	r1, r8
   1fc74:	mov	r2, sl
   1fc78:	bl	1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1fc7c:	ldr	r0, [r4, #220]	; 0xdc
   1fc80:	cmp	r0, #0
   1fc84:	beq	200e0 <__flatcc_fb_gen_c_json_parser@@Base+0x299c>
   1fc88:	sub	r0, r0, #1
   1fc8c:	str	r0, [r4, #220]	; 0xdc
   1fc90:	ldr	r3, [sp, #28]
   1fc94:	ldr	r2, [sp, #24]
   1fc98:	movw	r1, #40330	; 0x9d8a
   1fc9c:	movt	r1, #4
   1fca0:	mov	r0, r4
   1fca4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fca8:	ldr	r0, [r4, #220]	; 0xdc
   1fcac:	add	r0, r0, #1
   1fcb0:	str	r0, [r4, #220]	; 0xdc
   1fcb4:	str	r9, [sp]
   1fcb8:	mov	r0, r4
   1fcbc:	mov	r1, r8
   1fcc0:	mov	r2, r5
   1fcc4:	mov	r3, r7
   1fcc8:	bl	1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1fccc:	ldr	r0, [r4, #220]	; 0xdc
   1fcd0:	cmp	r0, #0
   1fcd4:	beq	20100 <__flatcc_fb_gen_c_json_parser@@Base+0x29bc>
   1fcd8:	sub	r0, r0, #1
   1fcdc:	str	r0, [r4, #220]	; 0xdc
   1fce0:	ldr	r3, [sp, #28]
   1fce4:	ldr	r2, [sp, #24]
   1fce8:	movw	r1, #40359	; 0x9da7
   1fcec:	movt	r1, #4
   1fcf0:	b	200d0 <__flatcc_fb_gen_c_json_parser@@Base+0x298c>
   1fcf4:	mov	r1, sl
   1fcf8:	mov	r2, r7
   1fcfc:	mov	r3, r9
   1fd00:	bl	20814 <__flatcc_fb_gen_c_json_parser@@Base+0x30d0>
   1fd04:	mov	r6, r0
   1fd08:	sub	r2, r0, #1
   1fd0c:	ldr	r5, [r8]
   1fd10:	mov	r0, r5
   1fd14:	mov	r1, sl
   1fd18:	str	r2, [sp, #12]
   1fd1c:	mov	r3, r9
   1fd20:	bl	208ec <__flatcc_fb_gen_c_json_parser@@Base+0x31a8>
   1fd24:	mov	r3, r0
   1fd28:	cmp	r0, r6
   1fd2c:	str	r6, [sp, #20]
   1fd30:	str	r0, [sp, #16]
   1fd34:	bge	1fec0 <__flatcc_fb_gen_c_json_parser@@Base+0x277c>
   1fd38:	mov	r6, #0
   1fd3c:	cmp	r3, sl
   1fd40:	ble	1fd68 <__flatcc_fb_gen_c_json_parser@@Base+0x2624>
   1fd44:	add	r0, r5, r3, lsl #4
   1fd48:	sub	r0, r0, #16
   1fd4c:	mov	r1, r9
   1fd50:	mov	r6, r3
   1fd54:	bl	20940 <__flatcc_fb_gen_c_json_parser@@Base+0x31fc>
   1fd58:	mov	r3, r6
   1fd5c:	sub	r0, r0, #8
   1fd60:	clz	r0, r0
   1fd64:	lsr	r6, r0, #5
   1fd68:	add	r0, sp, #24
   1fd6c:	add	r1, sp, #28
   1fd70:	str	r1, [sp]
   1fd74:	str	r0, [sp, #4]
   1fd78:	add	r0, r5, r3, lsl #4
   1fd7c:	add	r2, sp, #40	; 0x28
   1fd80:	mov	r5, r3
   1fd84:	add	r3, sp, #32
   1fd88:	mov	r1, r9
   1fd8c:	bl	2072c <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   1fd90:	ldr	r2, [sp, #40]	; 0x28
   1fd94:	ldr	r3, [sp, #44]	; 0x2c
   1fd98:	ldr	r0, [sp, #24]
   1fd9c:	ldr	r1, [sp, #28]
   1fda0:	stm	sp, {r0, r1}
   1fda4:	movw	r1, #40381	; 0x9dbd
   1fda8:	movt	r1, #4
   1fdac:	mov	r0, r4
   1fdb0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fdb4:	ldr	r0, [r4, #220]	; 0xdc
   1fdb8:	add	r0, r0, #1
   1fdbc:	str	r0, [r4, #220]	; 0xdc
   1fdc0:	cmp	r6, #0
   1fdc4:	beq	1fef0 <__flatcc_fb_gen_c_json_parser@@Base+0x27ac>
   1fdc8:	ldr	r3, [sp, #28]
   1fdcc:	ldr	r2, [sp, #24]
   1fdd0:	movw	r1, #40421	; 0x9de5
   1fdd4:	movt	r1, #4
   1fdd8:	mov	r0, r4
   1fddc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fde0:	ldm	r8, {r0, ip}
   1fde4:	ldr	r1, [r8, #12]
   1fde8:	sub	r2, r5, #1
   1fdec:	mov	r6, r2
   1fdf0:	add	r0, r0, r2, lsl #4
   1fdf4:	ldr	r2, [r0, #8]
   1fdf8:	ldr	r3, [r0, #12]
   1fdfc:	mov	r0, #8
   1fe00:	str	r0, [sp]
   1fe04:	mov	r0, r4
   1fe08:	blx	ip
   1fe0c:	ldr	r3, [sp, #28]
   1fe10:	ldr	r2, [sp, #24]
   1fe14:	movw	r1, #40453	; 0x9e05
   1fe18:	movt	r1, #4
   1fe1c:	mov	r0, r4
   1fe20:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fe24:	movw	r1, #40481	; 0x9e21
   1fe28:	movt	r1, #4
   1fe2c:	mov	r0, r4
   1fe30:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fe34:	movw	r1, #39803	; 0x9b7b
   1fe38:	movt	r1, #4
   1fe3c:	mov	r0, r4
   1fe40:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fe44:	add	r0, r9, #8
   1fe48:	str	r0, [sp]
   1fe4c:	mov	r0, r4
   1fe50:	mov	r1, r8
   1fe54:	mov	r2, r5
   1fe58:	ldr	r3, [sp, #12]
   1fe5c:	bl	1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1fe60:	ldr	r0, [r4, #220]	; 0xdc
   1fe64:	cmp	r0, #0
   1fe68:	beq	20160 <__flatcc_fb_gen_c_json_parser@@Base+0x2a1c>
   1fe6c:	sub	r0, r0, #1
   1fe70:	str	r0, [r4, #220]	; 0xdc
   1fe74:	ldr	r3, [sp, #28]
   1fe78:	ldr	r2, [sp, #24]
   1fe7c:	movw	r1, #40491	; 0x9e2b
   1fe80:	movt	r1, #4
   1fe84:	mov	r0, r4
   1fe88:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1fe8c:	b	1ff30 <__flatcc_fb_gen_c_json_parser@@Base+0x27ec>
   1fe90:	cmp	r7, sl
   1fe94:	bne	1fecc <__flatcc_fb_gen_c_json_parser@@Base+0x2788>
   1fe98:	mov	r0, #0
   1fe9c:	str	r9, [sp]
   1fea0:	str	r0, [sp, #4]
   1fea4:	mov	r0, r4
   1fea8:	mov	r1, r8
   1feac:	mov	r2, sl
   1feb0:	mov	r3, r7
   1feb4:	bl	202b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1feb8:	sub	sp, fp, #28
   1febc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fec0:	mov	r2, r6
   1fec4:	mov	r6, r3
   1fec8:	b	1ff6c <__flatcc_fb_gen_c_json_parser@@Base+0x2828>
   1fecc:	add	r0, sl, #1
   1fed0:	cmp	r0, r7
   1fed4:	bne	1fbec <__flatcc_fb_gen_c_json_parser@@Base+0x24a8>
   1fed8:	add	r0, r5, r7, lsl #4
   1fedc:	mov	r1, r9
   1fee0:	bl	2029c <__flatcc_fb_gen_c_json_parser@@Base+0x2b58>
   1fee4:	cmp	r0, #0
   1fee8:	bne	1fbec <__flatcc_fb_gen_c_json_parser@@Base+0x24a8>
   1feec:	b	1fe98 <__flatcc_fb_gen_c_json_parser@@Base+0x2754>
   1fef0:	movw	r1, #40481	; 0x9e21
   1fef4:	movt	r1, #4
   1fef8:	mov	r0, r4
   1fefc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ff00:	movw	r1, #39803	; 0x9b7b
   1ff04:	movt	r1, #4
   1ff08:	mov	r0, r4
   1ff0c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ff10:	add	r0, r9, #8
   1ff14:	str	r0, [sp]
   1ff18:	mov	r0, r4
   1ff1c:	mov	r1, r8
   1ff20:	mov	r2, r5
   1ff24:	ldr	r3, [sp, #12]
   1ff28:	bl	1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1ff2c:	mov	r6, r5
   1ff30:	ldr	r0, [r4, #220]	; 0xdc
   1ff34:	cmp	r0, #0
   1ff38:	beq	20120 <__flatcc_fb_gen_c_json_parser@@Base+0x29dc>
   1ff3c:	sub	r0, r0, #1
   1ff40:	str	r0, [r4, #220]	; 0xdc
   1ff44:	ldr	r3, [sp, #28]
   1ff48:	ldr	r2, [sp, #24]
   1ff4c:	movw	r1, #40520	; 0x9e48
   1ff50:	movt	r1, #4
   1ff54:	mov	r0, r4
   1ff58:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ff5c:	ldr	r0, [r4, #220]	; 0xdc
   1ff60:	add	r0, r0, #1
   1ff64:	str	r0, [r4, #220]	; 0xdc
   1ff68:	ldr	r2, [sp, #20]
   1ff6c:	mov	r5, #0
   1ff70:	cmp	r6, sl
   1ff74:	mov	r0, #0
   1ff78:	movwgt	r0, #1
   1ff7c:	str	r7, [sp, #12]
   1ff80:	cmp	r2, r7
   1ff84:	mov	r1, #0
   1ff88:	movwle	r1, #1
   1ff8c:	and	r9, r1, r0
   1ff90:	cmp	r9, #1
   1ff94:	bne	1ffa4 <__flatcc_fb_gen_c_json_parser@@Base+0x2860>
   1ff98:	ldr	r0, [r8, #24]
   1ff9c:	add	r5, r0, #1
   1ffa0:	str	r5, [r8, #24]
   1ffa4:	cmp	r6, sl
   1ffa8:	ble	20020 <__flatcc_fb_gen_c_json_parser@@Base+0x28dc>
   1ffac:	ldr	r0, [fp, #8]
   1ffb0:	stm	sp, {r0, r5}
   1ffb4:	sub	r3, r6, #1
   1ffb8:	mov	r0, r4
   1ffbc:	mov	r1, r8
   1ffc0:	mov	r2, sl
   1ffc4:	mov	r7, r6
   1ffc8:	bl	202b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1ffcc:	ldr	r2, [sp, #20]
   1ffd0:	cmp	r9, #0
   1ffd4:	beq	20020 <__flatcc_fb_gen_c_json_parser@@Base+0x28dc>
   1ffd8:	movw	r1, #40550	; 0x9e66
   1ffdc:	movt	r1, #4
   1ffe0:	mov	r0, r4
   1ffe4:	mov	r2, r5
   1ffe8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   1ffec:	ldr	r0, [r4, #220]	; 0xdc
   1fff0:	mov	r1, #0
   1fff4:	str	r1, [r4, #220]	; 0xdc
   1fff8:	str	r0, [r4, #228]	; 0xe4
   1fffc:	movw	r1, #40572	; 0x9e7c
   20000:	movt	r1, #4
   20004:	mov	r0, r4
   20008:	mov	r2, r5
   2000c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20010:	mov	r6, r7
   20014:	ldr	r2, [sp, #20]
   20018:	ldr	r0, [r4, #228]	; 0xe4
   2001c:	str	r0, [r4, #220]	; 0xdc
   20020:	ldr	r3, [sp, #12]
   20024:	cmp	r2, r3
   20028:	ble	20044 <__flatcc_fb_gen_c_json_parser@@Base+0x2900>
   2002c:	cmp	r6, sl
   20030:	bgt	20058 <__flatcc_fb_gen_c_json_parser@@Base+0x2914>
   20034:	ldr	r1, [r8, #8]
   20038:	mov	r0, r4
   2003c:	blx	r1
   20040:	b	2009c <__flatcc_fb_gen_c_json_parser@@Base+0x2958>
   20044:	ldr	r0, [fp, #8]
   20048:	str	r0, [sp]
   2004c:	mov	r0, r4
   20050:	mov	r1, r8
   20054:	bl	1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   20058:	cmp	r9, #0
   2005c:	beq	2009c <__flatcc_fb_gen_c_json_parser@@Base+0x2958>
   20060:	ldr	r0, [r4, #220]	; 0xdc
   20064:	mov	r1, #0
   20068:	str	r1, [r4, #220]	; 0xdc
   2006c:	str	r0, [r4, #228]	; 0xe4
   20070:	movw	r1, #40569	; 0x9e79
   20074:	movt	r1, #4
   20078:	mov	r0, r4
   2007c:	mov	r2, r5
   20080:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20084:	ldr	r0, [r4, #228]	; 0xe4
   20088:	str	r0, [r4, #220]	; 0xdc
   2008c:	movw	r1, #40583	; 0x9e87
   20090:	movt	r1, #4
   20094:	mov	r0, r4
   20098:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2009c:	ldr	r0, [sp, #20]
   200a0:	ldr	r1, [sp, #16]
   200a4:	cmp	r1, r0
   200a8:	bge	200d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2994>
   200ac:	ldr	r0, [r4, #220]	; 0xdc
   200b0:	cmp	r0, #0
   200b4:	beq	20140 <__flatcc_fb_gen_c_json_parser@@Base+0x29fc>
   200b8:	sub	r0, r0, #1
   200bc:	str	r0, [r4, #220]	; 0xdc
   200c0:	ldr	r3, [sp, #28]
   200c4:	ldr	r2, [sp, #24]
   200c8:	movw	r1, #40592	; 0x9e90
   200cc:	movt	r1, #4
   200d0:	mov	r0, r4
   200d4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   200d8:	sub	sp, fp, #28
   200dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   200e0:	movw	r0, #37280	; 0x91a0
   200e4:	movt	r0, #4
   200e8:	movw	r1, #37292	; 0x91ac
   200ec:	movt	r1, #4
   200f0:	movw	r3, #40276	; 0x9d54
   200f4:	movt	r3, #4
   200f8:	movw	r2, #973	; 0x3cd
   200fc:	bl	14ab4 <__assert_fail@plt>
   20100:	movw	r0, #37280	; 0x91a0
   20104:	movt	r0, #4
   20108:	movw	r1, #37292	; 0x91ac
   2010c:	movt	r1, #4
   20110:	movw	r3, #40276	; 0x9d54
   20114:	movt	r3, #4
   20118:	movw	r2, #975	; 0x3cf
   2011c:	bl	14ab4 <__assert_fail@plt>
   20120:	movw	r0, #37280	; 0x91a0
   20124:	movt	r0, #4
   20128:	movw	r1, #37292	; 0x91ac
   2012c:	movt	r1, #4
   20130:	movw	r3, #40276	; 0x9d54
   20134:	movt	r3, #4
   20138:	movw	r2, #1044	; 0x414
   2013c:	bl	14ab4 <__assert_fail@plt>
   20140:	movw	r0, #37280	; 0x91a0
   20144:	movt	r0, #4
   20148:	movw	r1, #37292	; 0x91ac
   2014c:	movt	r1, #4
   20150:	movw	r3, #40276	; 0x9d54
   20154:	movt	r3, #4
   20158:	mov	r2, #1072	; 0x430
   2015c:	bl	14ab4 <__assert_fail@plt>
   20160:	movw	r0, #37280	; 0x91a0
   20164:	movt	r0, #4
   20168:	movw	r1, #37292	; 0x91ac
   2016c:	movt	r1, #4
   20170:	movw	r3, #40276	; 0x9d54
   20174:	movt	r3, #4
   20178:	mov	r2, #1040	; 0x410
   2017c:	bl	14ab4 <__assert_fail@plt>
   20180:	cmp	r0, #0
   20184:	bxeq	lr
   20188:	b	14928 <free@plt>
   2018c:	ldrh	r1, [r0, #24]
   20190:	bic	r2, r1, #1
   20194:	mov	r1, #0
   20198:	cmp	r2, #14
   2019c:	bne	201b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2a70>
   201a0:	ldr	r0, [r0, #16]
   201a4:	ldrh	r0, [r0, #8]
   201a8:	sub	r0, r0, #4
   201ac:	clz	r0, r0
   201b0:	lsr	r1, r0, #5
   201b4:	mov	r0, r1
   201b8:	bx	lr
   201bc:	push	{r4, r5, fp, lr}
   201c0:	add	fp, sp, #8
   201c4:	ldm	r1, {r3, r4}
   201c8:	ldm	r0, {r1, r5}
   201cc:	cmp	r5, r4
   201d0:	mov	r2, r5
   201d4:	movgt	r2, r4
   201d8:	mov	r0, r1
   201dc:	mov	r1, r3
   201e0:	bl	1494c <memcmp@plt>
   201e4:	cmp	r0, #0
   201e8:	subeq	r0, r5, r4
   201ec:	pop	{r4, r5, fp, pc}
   201f0:	push	{r4, sl, fp, lr}
   201f4:	add	fp, sp, #8
   201f8:	sub	sp, sp, #8
   201fc:	ldr	r1, [r1, #40]	; 0x28
   20200:	sub	r3, r1, #1
   20204:	cmp	r3, #5
   20208:	bcs	20214 <__flatcc_fb_gen_c_json_parser@@Base+0x2ad0>
   2020c:	ldrd	r2, [r2, #48]	; 0x30
   20210:	b	2022c <__flatcc_fb_gen_c_json_parser@@Base+0x2ae8>
   20214:	sub	r1, r1, #6
   20218:	cmp	r1, #4
   2021c:	bcs	2024c <__flatcc_fb_gen_c_json_parser@@Base+0x2b08>
   20220:	ldrd	r2, [r2, #48]	; 0x30
   20224:	cmn	r3, #1
   20228:	ble	20240 <__flatcc_fb_gen_c_json_parser@@Base+0x2afc>
   2022c:	movw	r1, #40023	; 0x9c57
   20230:	movt	r1, #4
   20234:	sub	sp, fp, #8
   20238:	pop	{r4, sl, fp, lr}
   2023c:	b	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20240:	movw	r1, #40065	; 0x9c81
   20244:	movt	r1, #4
   20248:	b	20234 <__flatcc_fb_gen_c_json_parser@@Base+0x2af0>
   2024c:	movw	r0, #8368	; 0x20b0
   20250:	movt	r0, #6
   20254:	ldr	r0, [r0]
   20258:	movw	r1, #40107	; 0x9cab
   2025c:	movt	r1, #4
   20260:	str	r1, [sp]
   20264:	movw	r1, #26331	; 0x66db
   20268:	movt	r1, #3
   2026c:	movw	r4, #37292	; 0x91ac
   20270:	movt	r4, #4
   20274:	mov	r2, r4
   20278:	movw	r3, #710	; 0x2c6
   2027c:	bl	149f4 <fprintf@plt>
   20280:	movw	r0, #30217	; 0x7609
   20284:	movt	r0, #4
   20288:	movw	r3, #40142	; 0x9cce
   2028c:	movt	r3, #4
   20290:	mov	r1, r4
   20294:	movw	r2, #710	; 0x2c6
   20298:	bl	14ab4 <__assert_fail@plt>
   2029c:	ldr	r2, [r0, #4]
   202a0:	sub	r0, r2, r1
   202a4:	sub	r0, r0, #8
   202a8:	add	r1, r1, #8
   202ac:	cmp	r1, r2
   202b0:	movwgt	r0, #0
   202b4:	bx	lr
   202b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   202bc:	add	fp, sp, #28
   202c0:	sub	sp, sp, #52	; 0x34
   202c4:	mov	sl, r3
   202c8:	mov	r5, r1
   202cc:	mov	r4, r0
   202d0:	mov	r0, #0
   202d4:	str	r0, [sp, #44]	; 0x2c
   202d8:	str	r0, [sp, #40]	; 0x28
   202dc:	str	r0, [sp, #36]	; 0x24
   202e0:	str	r0, [sp, #32]
   202e4:	ldr	r0, [r1]
   202e8:	add	r1, sp, #24
   202ec:	add	r3, sp, #28
   202f0:	str	r3, [sp]
   202f4:	str	r1, [sp, #4]
   202f8:	sub	r8, sl, r2
   202fc:	add	r1, r8, #1
   20300:	add	r1, r1, r1, lsr #31
   20304:	str	r2, [sp, #16]
   20308:	add	r1, r2, r1, asr #1
   2030c:	str	r1, [sp, #20]
   20310:	add	r0, r0, r1, lsl #4
   20314:	ldr	r1, [fp, #8]
   20318:	add	r2, sp, #40	; 0x28
   2031c:	add	r3, sp, #32
   20320:	bl	2072c <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   20324:	mov	r9, r0
   20328:	cmp	r0, #8
   2032c:	bne	20350 <__flatcc_fb_gen_c_json_parser@@Base+0x2c0c>
   20330:	ldr	r2, [sp, #40]	; 0x28
   20334:	ldr	r3, [sp, #44]	; 0x2c
   20338:	ldr	r0, [sp, #24]
   2033c:	ldr	r1, [sp, #28]
   20340:	stm	sp, {r0, r1}
   20344:	movw	r1, #40615	; 0x9ea7
   20348:	movt	r1, #4
   2034c:	b	20380 <__flatcc_fb_gen_c_json_parser@@Base+0x2c3c>
   20350:	ldr	r2, [sp, #32]
   20354:	ldr	r3, [sp, #36]	; 0x24
   20358:	ldr	r0, [sp, #40]	; 0x28
   2035c:	ldr	r1, [sp, #44]	; 0x2c
   20360:	mov	r7, r5
   20364:	ldr	r5, [sp, #24]
   20368:	ldr	r6, [sp, #28]
   2036c:	stm	sp, {r0, r1, r5}
   20370:	mov	r5, r7
   20374:	str	r6, [sp, #12]
   20378:	movw	r1, #40647	; 0x9ec7
   2037c:	movt	r1, #4
   20380:	mov	r0, r4
   20384:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20388:	ldr	r7, [fp, #12]
   2038c:	ldr	r0, [r4, #220]	; 0xdc
   20390:	add	r0, r0, #1
   20394:	str	r0, [r4, #220]	; 0xdc
   20398:	add	r0, r8, #2
   2039c:	cmp	r0, #2
   203a0:	bhi	203f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2cac>
   203a4:	ldr	r0, [r5]
   203a8:	mov	r6, r7
   203ac:	ldr	r7, [r5, #4]
   203b0:	ldr	r1, [r5, #12]
   203b4:	ldr	r2, [sp, #20]
   203b8:	add	r0, r0, r2, lsl #4
   203bc:	ldr	r2, [r0, #8]
   203c0:	ldr	r3, [r0, #12]
   203c4:	str	r9, [sp]
   203c8:	mov	r0, r4
   203cc:	blx	r7
   203d0:	cmp	r6, #1
   203d4:	blt	20468 <__flatcc_fb_gen_c_json_parser@@Base+0x2d24>
   203d8:	movw	r1, #40690	; 0x9ef2
   203dc:	movt	r1, #4
   203e0:	mov	r0, r4
   203e4:	mov	r2, r6
   203e8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   203ec:	b	20474 <__flatcc_fb_gen_c_json_parser@@Base+0x2d30>
   203f0:	ldr	r8, [sp, #20]
   203f4:	cmp	r8, sl
   203f8:	bne	20448 <__flatcc_fb_gen_c_json_parser@@Base+0x2d04>
   203fc:	ldr	r0, [r5]
   20400:	mov	r6, r7
   20404:	ldr	r7, [r5, #4]
   20408:	ldr	r1, [r5, #12]
   2040c:	add	r0, r0, r8, lsl #4
   20410:	ldr	r2, [r0, #8]
   20414:	ldr	r3, [r0, #12]
   20418:	str	r9, [sp]
   2041c:	mov	r0, r4
   20420:	blx	r7
   20424:	mov	r7, r6
   20428:	cmp	r6, #1
   2042c:	blt	20500 <__flatcc_fb_gen_c_json_parser@@Base+0x2dbc>
   20430:	movw	r1, #40690	; 0x9ef2
   20434:	movt	r1, #4
   20438:	mov	r0, r4
   2043c:	mov	r2, r7
   20440:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20444:	b	2050c <__flatcc_fb_gen_c_json_parser@@Base+0x2dc8>
   20448:	ldr	r6, [fp, #8]
   2044c:	stm	sp, {r6, r7}
   20450:	mov	r0, r4
   20454:	mov	r1, r5
   20458:	mov	r2, r8
   2045c:	mov	r3, sl
   20460:	bl	202b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   20464:	b	20534 <__flatcc_fb_gen_c_json_parser@@Base+0x2df0>
   20468:	ldr	r1, [r5, #8]
   2046c:	mov	r0, r4
   20470:	blx	r1
   20474:	ldr	r0, [r4, #220]	; 0xdc
   20478:	cmp	r0, #0
   2047c:	beq	205d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e94>
   20480:	sub	r0, r0, #1
   20484:	str	r0, [r4, #220]	; 0xdc
   20488:	movw	r1, #35669	; 0x8b55
   2048c:	movt	r1, #3
   20490:	mov	r0, r4
   20494:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20498:	ldr	r0, [r4, #220]	; 0xdc
   2049c:	cmp	r0, #0
   204a0:	beq	205f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2eb4>
   204a4:	sub	r0, r0, #1
   204a8:	str	r0, [r4, #220]	; 0xdc
   204ac:	ldr	r3, [sp, #28]
   204b0:	ldr	r2, [sp, #24]
   204b4:	movw	r1, #40772	; 0x9f44
   204b8:	movt	r1, #4
   204bc:	mov	r0, r4
   204c0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   204c4:	ldr	r0, [r4, #220]	; 0xdc
   204c8:	add	r0, r0, #1
   204cc:	str	r0, [r4, #220]	; 0xdc
   204d0:	cmp	r6, #1
   204d4:	blt	204f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2dac>
   204d8:	movw	r1, #40690	; 0x9ef2
   204dc:	movt	r1, #4
   204e0:	mov	r0, r4
   204e4:	mov	r2, r6
   204e8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   204ec:	b	20584 <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   204f0:	ldr	r1, [r5, #8]
   204f4:	mov	r0, r4
   204f8:	blx	r1
   204fc:	b	20584 <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   20500:	ldr	r1, [r5, #8]
   20504:	mov	r0, r4
   20508:	blx	r1
   2050c:	ldr	r0, [r4, #220]	; 0xdc
   20510:	cmp	r0, #0
   20514:	ldr	r6, [fp, #8]
   20518:	beq	20638 <__flatcc_fb_gen_c_json_parser@@Base+0x2ef4>
   2051c:	sub	r0, r0, #1
   20520:	str	r0, [r4, #220]	; 0xdc
   20524:	movw	r1, #35669	; 0x8b55
   20528:	movt	r1, #3
   2052c:	mov	r0, r4
   20530:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20534:	ldr	r0, [r4, #220]	; 0xdc
   20538:	cmp	r0, #0
   2053c:	beq	20618 <__flatcc_fb_gen_c_json_parser@@Base+0x2ed4>
   20540:	sub	r0, r0, #1
   20544:	str	r0, [r4, #220]	; 0xdc
   20548:	ldr	r3, [sp, #28]
   2054c:	ldr	r2, [sp, #24]
   20550:	movw	r1, #40772	; 0x9f44
   20554:	movt	r1, #4
   20558:	mov	r0, r4
   2055c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20560:	ldr	r0, [r4, #220]	; 0xdc
   20564:	add	r0, r0, #1
   20568:	str	r0, [r4, #220]	; 0xdc
   2056c:	stm	sp, {r6, r7}
   20570:	sub	r3, r8, #1
   20574:	mov	r0, r4
   20578:	mov	r1, r5
   2057c:	ldr	r2, [sp, #16]
   20580:	bl	202b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   20584:	ldr	r0, [r4, #220]	; 0xdc
   20588:	cmp	r0, #0
   2058c:	beq	205b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e74>
   20590:	sub	r0, r0, #1
   20594:	str	r0, [r4, #220]	; 0xdc
   20598:	ldr	r3, [sp, #28]
   2059c:	ldr	r2, [sp, #24]
   205a0:	movw	r1, #40794	; 0x9f5a
   205a4:	movt	r1, #4
   205a8:	mov	r0, r4
   205ac:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   205b0:	sub	sp, fp, #28
   205b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   205b8:	movw	r0, #37280	; 0x91a0
   205bc:	movt	r0, #4
   205c0:	movw	r1, #37292	; 0x91ac
   205c4:	movt	r1, #4
   205c8:	movw	r3, #40706	; 0x9f02
   205cc:	movt	r3, #4
   205d0:	movw	r2, #910	; 0x38e
   205d4:	bl	14ab4 <__assert_fail@plt>
   205d8:	movw	r0, #37280	; 0x91a0
   205dc:	movt	r0, #4
   205e0:	movw	r1, #37292	; 0x91ac
   205e4:	movt	r1, #4
   205e8:	movw	r3, #40706	; 0x9f02
   205ec:	movt	r3, #4
   205f0:	mov	r2, #888	; 0x378
   205f4:	bl	14ab4 <__assert_fail@plt>
   205f8:	movw	r0, #37280	; 0x91a0
   205fc:	movt	r0, #4
   20600:	movw	r1, #37292	; 0x91ac
   20604:	movt	r1, #4
   20608:	movw	r3, #40706	; 0x9f02
   2060c:	movt	r3, #4
   20610:	movw	r2, #889	; 0x379
   20614:	bl	14ab4 <__assert_fail@plt>
   20618:	movw	r0, #37280	; 0x91a0
   2061c:	movt	r0, #4
   20620:	movw	r1, #37292	; 0x91ac
   20624:	movt	r1, #4
   20628:	movw	r3, #40706	; 0x9f02
   2062c:	movt	r3, #4
   20630:	movw	r2, #907	; 0x38b
   20634:	bl	14ab4 <__assert_fail@plt>
   20638:	movw	r0, #37280	; 0x91a0
   2063c:	movt	r0, #4
   20640:	movw	r1, #37292	; 0x91ac
   20644:	movt	r1, #4
   20648:	movw	r3, #40706	; 0x9f02
   2064c:	movt	r3, #4
   20650:	movw	r2, #903	; 0x387
   20654:	bl	14ab4 <__assert_fail@plt>
   20658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2065c:	add	fp, sp, #28
   20660:	sub	sp, sp, #44	; 0x2c
   20664:	mov	r4, r3
   20668:	mov	r5, r1
   2066c:	mov	sl, #0
   20670:	str	sl, [sp, #36]	; 0x24
   20674:	str	sl, [sp, #32]
   20678:	str	sl, [sp, #28]
   2067c:	str	sl, [sp, #24]
   20680:	str	sl, [sp, #20]
   20684:	str	sl, [sp, #16]
   20688:	str	sl, [sp, #12]
   2068c:	str	sl, [sp, #8]
   20690:	sub	r1, r2, r1
   20694:	add	r1, r1, r1, lsr #31
   20698:	add	r1, r5, r1, asr #1
   2069c:	add	r8, r0, r1, lsl #4
   206a0:	mov	r6, r1
   206a4:	cmp	r1, r5
   206a8:	ble	20720 <__flatcc_fb_gen_c_json_parser@@Base+0x2fdc>
   206ac:	str	sl, [sp]
   206b0:	str	sl, [sp, #4]
   206b4:	sub	r9, r8, #16
   206b8:	mov	r0, r9
   206bc:	mov	r1, r4
   206c0:	add	r2, sp, #32
   206c4:	add	r3, sp, #16
   206c8:	bl	2072c <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   206cc:	str	sl, [sp]
   206d0:	str	sl, [sp, #4]
   206d4:	mov	r0, r8
   206d8:	mov	r1, r4
   206dc:	add	r2, sp, #24
   206e0:	add	r3, sp, #8
   206e4:	bl	2072c <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   206e8:	ldr	r0, [sp, #32]
   206ec:	ldr	r1, [sp, #36]	; 0x24
   206f0:	ldr	r2, [sp, #24]
   206f4:	ldr	r3, [sp, #28]
   206f8:	eor	r1, r3, r1
   206fc:	ldr	r3, [sp, #16]
   20700:	ldr	r7, [sp, #20]
   20704:	and	r1, r1, r7
   20708:	eor	r0, r2, r0
   2070c:	and	r0, r0, r3
   20710:	orrs	r0, r0, r1
   20714:	sub	r1, r6, #1
   20718:	mov	r8, r9
   2071c:	beq	206a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f5c>
   20720:	mov	r0, r6
   20724:	sub	sp, fp, #28
   20728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2072c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20730:	add	fp, sp, #28
   20734:	mov	ip, r0
   20738:	ldr	r4, [r0, #4]
   2073c:	mov	r0, #0
   20740:	ldr	r7, [fp, #8]
   20744:	cmp	r4, r1
   20748:	mov	r5, #0
   2074c:	blt	207fc <__flatcc_fb_gen_c_json_parser@@Base+0x30b8>
   20750:	sub	r0, r4, r1
   20754:	cmp	r0, #8
   20758:	movge	r0, #8
   2075c:	ldr	ip, [ip]
   20760:	cmp	r0, #0
   20764:	beq	207b8 <__flatcc_fb_gen_c_json_parser@@Base+0x3074>
   20768:	mov	r4, #64	; 0x40
   2076c:	sub	r5, r4, r0, lsl #3
   20770:	add	r4, ip, r1
   20774:	sub	r8, r4, #1
   20778:	mov	r9, #0
   2077c:	mov	r6, r0
   20780:	mov	sl, #0
   20784:	ldrb	r4, [r8, r6]
   20788:	rsb	r7, r5, #32
   2078c:	lsr	r7, r4, r7
   20790:	subs	lr, r5, #32
   20794:	lslpl	r7, r4, lr
   20798:	orr	sl, r7, sl
   2079c:	lsl	r7, r4, r5
   207a0:	movwpl	r7, #0
   207a4:	orr	r9, r7, r9
   207a8:	add	r5, r5, #8
   207ac:	subs	r6, r6, #1
   207b0:	bne	20784 <__flatcc_fb_gen_c_json_parser@@Base+0x3040>
   207b4:	b	207c0 <__flatcc_fb_gen_c_json_parser@@Base+0x307c>
   207b8:	mov	r9, #0
   207bc:	mov	sl, #0
   207c0:	add	r5, ip, r1
   207c4:	stm	r2, {r9, sl}
   207c8:	mov	r1, #32
   207cc:	sub	r1, r1, r0, lsl #3
   207d0:	mov	r2, #64	; 0x40
   207d4:	sub	r2, r2, r0, lsl #3
   207d8:	mvn	r7, #0
   207dc:	lsl	r4, r7, r2
   207e0:	cmp	r1, #0
   207e4:	movwpl	r4, #0
   207e8:	rsb	r2, r2, #32
   207ec:	ror	r9, r7, r2
   207f0:	lslpl	r9, r7, r1
   207f4:	stm	r3, {r4, r9}
   207f8:	ldr	r7, [fp, #8]
   207fc:	ldr	r1, [fp, #12]
   20800:	cmp	r7, #0
   20804:	strne	r5, [r7]
   20808:	cmp	r1, #0
   2080c:	strne	r0, [r1]
   20810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20818:	add	fp, sp, #28
   2081c:	sub	sp, sp, #44	; 0x2c
   20820:	mov	r4, r3
   20824:	mov	sl, r2
   20828:	mov	r9, #0
   2082c:	str	r9, [sp, #36]	; 0x24
   20830:	str	r9, [sp, #32]
   20834:	str	r9, [sp, #28]
   20838:	str	r9, [sp, #24]
   2083c:	str	r9, [sp, #20]
   20840:	str	r9, [sp, #16]
   20844:	str	r9, [sp, #12]
   20848:	str	r9, [sp, #8]
   2084c:	sub	r2, r2, r1
   20850:	add	r2, r2, r2, lsr #31
   20854:	add	r6, r1, r2, asr #1
   20858:	add	r7, r0, r6, lsl #4
   2085c:	add	r8, sp, #8
   20860:	cmp	r6, sl
   20864:	bge	208dc <__flatcc_fb_gen_c_json_parser@@Base+0x3198>
   20868:	str	r9, [sp]
   2086c:	str	r9, [sp, #4]
   20870:	mov	r0, r7
   20874:	mov	r1, r4
   20878:	add	r2, sp, #32
   2087c:	add	r3, sp, #16
   20880:	bl	2072c <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   20884:	str	r9, [sp]
   20888:	str	r9, [sp, #4]
   2088c:	add	r7, r7, #16
   20890:	mov	r0, r7
   20894:	mov	r1, r4
   20898:	add	r2, sp, #24
   2089c:	mov	r3, r8
   208a0:	bl	2072c <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   208a4:	ldr	r0, [sp, #32]
   208a8:	ldr	r1, [sp, #36]	; 0x24
   208ac:	ldr	r2, [sp, #24]
   208b0:	ldr	r3, [sp, #28]
   208b4:	eor	r1, r3, r1
   208b8:	ldr	r3, [sp, #16]
   208bc:	ldr	r5, [sp, #20]
   208c0:	and	r1, r1, r5
   208c4:	eor	r0, r2, r0
   208c8:	and	r0, r0, r3
   208cc:	orrs	r0, r0, r1
   208d0:	add	r6, r6, #1
   208d4:	beq	20860 <__flatcc_fb_gen_c_json_parser@@Base+0x311c>
   208d8:	b	208e0 <__flatcc_fb_gen_c_json_parser@@Base+0x319c>
   208dc:	add	r6, r6, #1
   208e0:	mov	r0, r6
   208e4:	sub	sp, fp, #28
   208e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   208ec:	push	{r4, r5, r6, r7, fp, lr}
   208f0:	add	fp, sp, #16
   208f4:	mov	r6, r1
   208f8:	cmp	r1, r2
   208fc:	bgt	20938 <__flatcc_fb_gen_c_json_parser@@Base+0x31f4>
   20900:	mov	r4, r3
   20904:	mov	r5, r2
   20908:	add	r7, r0, r6, lsl #4
   2090c:	mov	r0, r7
   20910:	mov	r1, r4
   20914:	bl	2029c <__flatcc_fb_gen_c_json_parser@@Base+0x2b58>
   20918:	cmp	r0, #0
   2091c:	bgt	20938 <__flatcc_fb_gen_c_json_parser@@Base+0x31f4>
   20920:	add	r7, r7, #16
   20924:	add	r0, r6, #1
   20928:	cmp	r6, r5
   2092c:	mov	r6, r0
   20930:	blt	2090c <__flatcc_fb_gen_c_json_parser@@Base+0x31c8>
   20934:	pop	{r4, r5, r6, r7, fp, pc}
   20938:	mov	r0, r6
   2093c:	pop	{r4, r5, r6, r7, fp, pc}
   20940:	ldr	r2, [r0, #4]
   20944:	sub	r0, r2, r1
   20948:	add	r1, r1, #8
   2094c:	cmp	r1, r2
   20950:	movwlt	r0, #0
   20954:	bx	lr
   20958:	push	{r4, r5, r6, r7, fp, lr}
   2095c:	add	fp, sp, #16
   20960:	mov	r5, r3
   20964:	mov	r6, r2
   20968:	mov	r7, r1
   2096c:	mov	r4, r0
   20970:	ldr	r2, [fp, #8]
   20974:	movw	r1, #41326	; 0xa16e
   20978:	movt	r1, #4
   2097c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20980:	movw	r1, #41393	; 0xa1b1
   20984:	movt	r1, #4
   20988:	mov	r0, r4
   2098c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20990:	ldr	r0, [r4, #220]	; 0xdc
   20994:	add	r0, r0, #1
   20998:	str	r0, [r4, #220]	; 0xdc
   2099c:	mov	r0, r4
   209a0:	mov	r1, r7
   209a4:	mov	r2, r6
   209a8:	mov	r3, r5
   209ac:	bl	20a10 <__flatcc_fb_gen_c_json_parser@@Base+0x32cc>
   209b0:	ldr	r0, [r4, #220]	; 0xdc
   209b4:	cmp	r0, #0
   209b8:	beq	209e4 <__flatcc_fb_gen_c_json_parser@@Base+0x32a0>
   209bc:	sub	r0, r0, #1
   209c0:	str	r0, [r4, #220]	; 0xdc
   209c4:	movw	r1, #39120	; 0x98d0
   209c8:	movt	r1, #4
   209cc:	mov	r0, r4
   209d0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   209d4:	ldr	r0, [r4, #220]	; 0xdc
   209d8:	add	r0, r0, #1
   209dc:	str	r0, [r4, #220]	; 0xdc
   209e0:	pop	{r4, r5, r6, r7, fp, pc}
   209e4:	movw	r0, #37280	; 0x91a0
   209e8:	movt	r0, #4
   209ec:	movw	r1, #37292	; 0x91ac
   209f0:	movt	r1, #4
   209f4:	movw	r3, #41412	; 0xa1c4
   209f8:	movt	r3, #4
   209fc:	movw	r2, #675	; 0x2a3
   20a00:	bl	14ab4 <__assert_fail@plt>
   20a04:	movw	r1, #41146	; 0xa0ba
   20a08:	movt	r1, #4
   20a0c:	b	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a14:	add	fp, sp, #28
   20a18:	sub	sp, sp, #540	; 0x21c
   20a1c:	mov	r9, r3
   20a20:	mov	r6, r2
   20a24:	mov	r5, r1
   20a28:	mov	r4, r0
   20a2c:	sub	r0, fp, #256	; 0x100
   20a30:	mov	r1, #0
   20a34:	str	r1, [sp, #104]	; 0x68
   20a38:	mov	r1, #0
   20a3c:	mov	r2, #220	; 0xdc
   20a40:	bl	14a0c <memset@plt>
   20a44:	ldr	r0, [r5, #12]
   20a48:	add	r1, sp, #108	; 0x6c
   20a4c:	bl	16780 <__flatcc_fb_copy_scope@@Base>
   20a50:	str	r6, [sp, #84]	; 0x54
   20a54:	ldrh	r0, [r6, #24]
   20a58:	ldrh	r1, [r5, #8]
   20a5c:	str	r1, [sp, #88]	; 0x58
   20a60:	cmp	r0, #15
   20a64:	mov	r6, #0
   20a68:	bhi	20a80 <__flatcc_fb_gen_c_json_parser@@Base+0x333c>
   20a6c:	mov	r1, #1
   20a70:	movw	r2, #33408	; 0x8280
   20a74:	tst	r2, r1, lsl r0
   20a78:	mov	r6, #0
   20a7c:	movne	r6, #1
   20a80:	sub	r5, r0, #7
   20a84:	cmp	r5, #8
   20a88:	bhi	21534 <__flatcc_fb_gen_c_json_parser@@Base+0x3df0>
   20a8c:	add	r0, pc, #68	; 0x44
   20a90:	mov	lr, #0
   20a94:	mov	ip, #0
   20a98:	mov	sl, #0
   20a9c:	mov	r2, #0
   20aa0:	str	r2, [sp, #44]	; 0x2c
   20aa4:	mov	r2, #0
   20aa8:	str	r2, [sp, #36]	; 0x24
   20aac:	mov	r8, #0
   20ab0:	mov	r2, #0
   20ab4:	str	r2, [sp, #80]	; 0x50
   20ab8:	mov	r2, #0
   20abc:	str	r2, [sp, #92]	; 0x5c
   20ac0:	mov	r3, #0
   20ac4:	mov	r2, #0
   20ac8:	mov	r7, #0
   20acc:	mov	r1, #0
   20ad0:	str	r1, [sp, #48]	; 0x30
   20ad4:	ldr	pc, [r0, r5, lsl #2]
   20ad8:	andeq	r0, r2, r4, asr #23
   20adc:	andeq	r0, r2, r0, ror #23
   20ae0:	strdeq	r0, [r2], -ip
   20ae4:	strdeq	r0, [r2], -ip
   20ae8:	andeq	r0, r2, r0, lsr #24
   20aec:	andeq	r0, r2, r0, lsr #24
   20af0:	andeq	r0, r2, r0, lsr #24
   20af4:	andeq	r0, r2, r8, lsr #22
   20af8:	andeq	r0, r2, r8, lsr #22
   20afc:	mov	r0, #1
   20b00:	str	r0, [sp, #44]	; 0x2c
   20b04:	mov	r0, #0
   20b08:	str	r0, [sp, #36]	; 0x24
   20b0c:	mov	r8, #0
   20b10:	mov	r0, #0
   20b14:	str	r0, [sp, #80]	; 0x50
   20b18:	mov	r0, #0
   20b1c:	str	r0, [sp, #92]	; 0x5c
   20b20:	mov	r3, #0
   20b24:	b	20bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x346c>
   20b28:	ldr	r5, [sp, #84]	; 0x54
   20b2c:	ldr	r0, [r5, #16]
   20b30:	sub	r1, fp, #256	; 0x100
   20b34:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   20b38:	ldr	r0, [r5, #16]
   20b3c:	ldrh	r1, [r0, #8]
   20b40:	eor	r2, r1, #4
   20b44:	orr	r2, r9, r2
   20b48:	clz	r2, r2
   20b4c:	lsr	r3, r2, #5
   20b50:	clz	r2, r1
   20b54:	lsr	r2, r2, #5
   20b58:	str	r2, [sp, #80]	; 0x50
   20b5c:	sub	r2, r1, #1
   20b60:	clz	r2, r2
   20b64:	lsr	r2, r2, #5
   20b68:	str	r2, [sp, #92]	; 0x5c
   20b6c:	cmp	r1, #3
   20b70:	bne	20b9c <__flatcc_fb_gen_c_json_parser@@Base+0x3458>
   20b74:	ldr	r0, [r0, #40]	; 0x28
   20b78:	str	r0, [sp, #48]	; 0x30
   20b7c:	mov	r0, #1
   20b80:	str	r0, [sp, #36]	; 0x24
   20b84:	mov	r0, #0
   20b88:	str	r0, [sp, #44]	; 0x2c
   20b8c:	mov	r8, #1
   20b90:	mov	r2, #0
   20b94:	mov	r7, #0
   20b98:	b	20c20 <__flatcc_fb_gen_c_json_parser@@Base+0x34dc>
   20b9c:	mov	r0, #0
   20ba0:	str	r0, [sp, #44]	; 0x2c
   20ba4:	mov	r0, #0
   20ba8:	str	r0, [sp, #36]	; 0x24
   20bac:	mov	r8, #0
   20bb0:	mov	r2, #0
   20bb4:	mov	r7, #0
   20bb8:	mov	r0, #0
   20bbc:	str	r0, [sp, #48]	; 0x30
   20bc0:	b	20c20 <__flatcc_fb_gen_c_json_parser@@Base+0x34dc>
   20bc4:	ldr	r2, [sp, #84]	; 0x54
   20bc8:	ldrh	r1, [r2, #72]	; 0x48
   20bcc:	and	ip, r1, #2048	; 0x800
   20bd0:	and	lr, r1, #1024	; 0x400
   20bd4:	ldr	sl, [r2, #104]	; 0x68
   20bd8:	cmp	sl, #0
   20bdc:	movwne	sl, #1
   20be0:	ldr	r2, [sp, #84]	; 0x54
   20be4:	ldr	r0, [r2, #16]
   20be8:	str	r0, [sp, #48]	; 0x30
   20bec:	mov	r8, #1
   20bf0:	mov	r0, #0
   20bf4:	str	r0, [sp, #44]	; 0x2c
   20bf8:	mov	r0, #0
   20bfc:	str	r0, [sp, #36]	; 0x24
   20c00:	mov	r0, #0
   20c04:	str	r0, [sp, #80]	; 0x50
   20c08:	mov	r0, #0
   20c0c:	str	r0, [sp, #92]	; 0x5c
   20c10:	mov	r3, #0
   20c14:	str	lr, [sp, #104]	; 0x68
   20c18:	mov	r2, ip
   20c1c:	mov	r7, sl
   20c20:	ldr	r5, [sp, #104]	; 0x68
   20c24:	orrs	r0, r2, r5
   20c28:	str	r0, [sp, #64]	; 0x40
   20c2c:	beq	20ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x355c>
   20c30:	cmp	r6, #0
   20c34:	beq	20c50 <__flatcc_fb_gen_c_json_parser@@Base+0x350c>
   20c38:	mov	r6, #0
   20c3c:	ldr	r0, [sp, #48]	; 0x30
   20c40:	cmp	r0, #4
   20c44:	mov	sl, #0
   20c48:	mov	r7, #0
   20c4c:	beq	20ca4 <__flatcc_fb_gen_c_json_parser@@Base+0x3560>
   20c50:	movw	r0, #8368	; 0x20b0
   20c54:	movt	r0, #6
   20c58:	ldr	r0, [r0]
   20c5c:	movw	r1, #41492	; 0xa214
   20c60:	movt	r1, #4
   20c64:	str	r1, [sp]
   20c68:	movw	r1, #26331	; 0x66db
   20c6c:	movt	r1, #3
   20c70:	movw	r4, #37292	; 0x91ac
   20c74:	movt	r4, #4
   20c78:	mov	r2, r4
   20c7c:	movw	r3, #466	; 0x1d2
   20c80:	bl	149f4 <fprintf@plt>
   20c84:	movw	r0, #30217	; 0x7609
   20c88:	movt	r0, #4
   20c8c:	movw	r3, #41551	; 0xa24f
   20c90:	movt	r3, #4
   20c94:	mov	r1, r4
   20c98:	movw	r2, #466	; 0x1d2
   20c9c:	bl	14ab4 <__assert_fail@plt>
   20ca0:	mov	sl, r8
   20ca4:	ldr	r0, [sp, #84]	; 0x54
   20ca8:	add	r0, r0, #48	; 0x30
   20cac:	str	r0, [sp, #40]	; 0x28
   20cb0:	cmp	r6, #0
   20cb4:	mov	r0, r6
   20cb8:	movwne	r0, #1
   20cbc:	cmp	r9, #0
   20cc0:	mov	r1, r9
   20cc4:	movwne	r1, #1
   20cc8:	ands	r0, r1, r0
   20ccc:	str	r0, [sp, #16]
   20cd0:	movwne	r6, #0
   20cd4:	cmp	r6, #0
   20cd8:	mov	r0, r6
   20cdc:	movwne	r0, #1
   20ce0:	cmp	r3, #0
   20ce4:	str	r3, [sp, #28]
   20ce8:	mov	r1, r3
   20cec:	movwne	r1, #1
   20cf0:	ands	r0, r1, r0
   20cf4:	str	r0, [sp, #24]
   20cf8:	movwne	r6, #0
   20cfc:	str	r6, [sp, #96]	; 0x60
   20d00:	cmp	r9, #0
   20d04:	movwne	sl, #0
   20d08:	cmp	r7, #0
   20d0c:	beq	20d2c <__flatcc_fb_gen_c_json_parser@@Base+0x35e8>
   20d10:	movw	r1, #41629	; 0xa29d
   20d14:	movt	r1, #4
   20d18:	mov	r0, r4
   20d1c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20d20:	ldr	r0, [r4, #220]	; 0xdc
   20d24:	add	r0, r0, #1
   20d28:	str	r0, [r4, #220]	; 0xdc
   20d2c:	ldr	r0, [sp, #40]	; 0x28
   20d30:	add	r1, r0, #40	; 0x28
   20d34:	str	r1, [sp, #68]	; 0x44
   20d38:	add	r1, r0, #48	; 0x30
   20d3c:	str	r1, [sp, #56]	; 0x38
   20d40:	add	r0, r0, #32
   20d44:	str	r0, [sp, #52]	; 0x34
   20d48:	clz	r0, r5
   20d4c:	lsr	r0, r0, #5
   20d50:	str	r0, [sp, #32]
   20d54:	str	r9, [sp, #20]
   20d58:	clz	r0, r9
   20d5c:	lsr	r0, r0, #5
   20d60:	str	r0, [sp, #76]	; 0x4c
   20d64:	movw	r8, #41488	; 0xa210
   20d68:	movt	r8, #4
   20d6c:	str	r8, [sp, #60]	; 0x3c
   20d70:	b	20d8c <__flatcc_fb_gen_c_json_parser@@Base+0x3648>
   20d74:	movw	r1, #43840	; 0xab40
   20d78:	movt	r1, #4
   20d7c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20d80:	mov	r7, #2
   20d84:	cmp	r5, #1
   20d88:	bne	21494 <__flatcc_fb_gen_c_json_parser@@Base+0x3d50>
   20d8c:	cmp	r7, #2
   20d90:	str	r7, [sp, #104]	; 0x68
   20d94:	bne	20e38 <__flatcc_fb_gen_c_json_parser@@Base+0x36f4>
   20d98:	ldr	r0, [r4, #220]	; 0xdc
   20d9c:	cmp	r0, #0
   20da0:	beq	2153c <__flatcc_fb_gen_c_json_parser@@Base+0x3df8>
   20da4:	sub	r0, r0, #1
   20da8:	str	r0, [r4, #220]	; 0xdc
   20dac:	mov	r0, r4
   20db0:	movw	r1, #41681	; 0xa2d1
   20db4:	movt	r1, #4
   20db8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20dbc:	ldr	r0, [r4, #220]	; 0xdc
   20dc0:	add	r0, r0, #1
   20dc4:	str	r0, [r4, #220]	; 0xdc
   20dc8:	ldr	r5, [sp, #84]	; 0x54
   20dcc:	ldr	r0, [r5, #104]	; 0x68
   20dd0:	sub	r1, fp, #256	; 0x100
   20dd4:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   20dd8:	ldr	r0, [r5, #104]	; 0x68
   20ddc:	ldrh	r5, [r0, #8]
   20de0:	mov	r0, r4
   20de4:	movw	r1, #41703	; 0xa2e7
   20de8:	movt	r1, #4
   20dec:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20df0:	cmp	r5, #0
   20df4:	ldr	r0, [sp, #92]	; 0x5c
   20df8:	movne	r0, #1
   20dfc:	str	r0, [sp, #92]	; 0x5c
   20e00:	clz	r0, r0
   20e04:	lsr	r6, r0, #5
   20e08:	ldr	r0, [sp, #76]	; 0x4c
   20e0c:	and	r0, r6, r0
   20e10:	str	r0, [sp, #100]	; 0x64
   20e14:	ldr	r0, [sp, #80]	; 0x50
   20e18:	movweq	r0, #1
   20e1c:	str	r0, [sp, #80]	; 0x50
   20e20:	mov	r9, #0
   20e24:	mov	r0, #0
   20e28:	str	r0, [sp, #96]	; 0x60
   20e2c:	mov	sl, #0
   20e30:	mov	r7, #0
   20e34:	b	2104c <__flatcc_fb_gen_c_json_parser@@Base+0x3908>
   20e38:	ldr	r1, [sp, #92]	; 0x5c
   20e3c:	orr	r0, r1, sl
   20e40:	clz	r0, r0
   20e44:	lsr	r6, r0, #5
   20e48:	clz	r9, r1
   20e4c:	str	sl, [sp, #72]	; 0x48
   20e50:	cmp	sl, #0
   20e54:	beq	20e80 <__flatcc_fb_gen_c_json_parser@@Base+0x373c>
   20e58:	ldr	r5, [sp, #48]	; 0x30
   20e5c:	mov	r0, r5
   20e60:	bl	216bc <__flatcc_fb_gen_c_json_parser@@Base+0x3f78>
   20e64:	mov	r8, r0
   20e68:	mov	sl, #1
   20e6c:	cmp	r5, #5
   20e70:	bne	20e88 <__flatcc_fb_gen_c_json_parser@@Base+0x3744>
   20e74:	movw	r0, #52823	; 0xce57
   20e78:	movt	r0, #3
   20e7c:	b	20e90 <__flatcc_fb_gen_c_json_parser@@Base+0x374c>
   20e80:	mov	sl, #0
   20e84:	b	20e94 <__flatcc_fb_gen_c_json_parser@@Base+0x3750>
   20e88:	mov	r0, r5
   20e8c:	bl	21734 <__flatcc_fb_gen_c_json_parser@@Base+0x3ff0>
   20e90:	str	r0, [sp, #60]	; 0x3c
   20e94:	ldr	r0, [sp, #76]	; 0x4c
   20e98:	and	r1, r6, r0
   20e9c:	lsr	r6, r9, #5
   20ea0:	ldr	r0, [sp, #96]	; 0x60
   20ea4:	cmp	r0, #0
   20ea8:	str	r1, [sp, #100]	; 0x64
   20eac:	beq	20ecc <__flatcc_fb_gen_c_json_parser@@Base+0x3788>
   20eb0:	cmp	r1, #0
   20eb4:	beq	20eec <__flatcc_fb_gen_c_json_parser@@Base+0x37a8>
   20eb8:	mov	r0, r4
   20ebc:	movw	r1, #41768	; 0xa328
   20ec0:	movt	r1, #4
   20ec4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20ec8:	b	20f3c <__flatcc_fb_gen_c_json_parser@@Base+0x37f8>
   20ecc:	mov	r9, #0
   20ed0:	cmp	sl, #0
   20ed4:	ldr	sl, [sp, #72]	; 0x48
   20ed8:	bne	20f7c <__flatcc_fb_gen_c_json_parser@@Base+0x3838>
   20edc:	mov	r0, #0
   20ee0:	str	r0, [sp, #96]	; 0x60
   20ee4:	mov	r7, #0
   20ee8:	b	2104c <__flatcc_fb_gen_c_json_parser@@Base+0x3908>
   20eec:	ldr	r0, [sp, #68]	; 0x44
   20ef0:	ldm	r0, {r7, r9}
   20ef4:	orrs	r3, r7, r9
   20ef8:	mov	r2, r7
   20efc:	movweq	r2, #1
   20f00:	movne	r3, r9
   20f04:	mvn	r0, #0
   20f08:	mov	r1, #0
   20f0c:	bl	349cc <fb_value_set_visit@@Base+0x6c0>
   20f10:	ldr	r2, [sp, #84]	; 0x54
   20f14:	ldrsh	r2, [r2, #74]	; 0x4a
   20f18:	str	r2, [sp]
   20f1c:	str	r0, [sp, #8]
   20f20:	str	r1, [sp, #12]
   20f24:	mov	r0, r4
   20f28:	movw	r1, #41831	; 0xa367
   20f2c:	movt	r1, #4
   20f30:	mov	r2, r7
   20f34:	mov	r3, r9
   20f38:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20f3c:	mov	r0, r4
   20f40:	movw	r1, #41914	; 0xa3ba
   20f44:	movt	r1, #4
   20f48:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20f4c:	mov	r0, r4
   20f50:	movw	r1, #41111	; 0xa097
   20f54:	movt	r1, #4
   20f58:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20f5c:	ldr	r0, [r4, #220]	; 0xdc
   20f60:	add	r0, r0, #1
   20f64:	str	r0, [r4, #220]	; 0xdc
   20f68:	mov	r7, #0
   20f6c:	mov	r9, #1
   20f70:	cmp	sl, #0
   20f74:	ldr	sl, [sp, #72]	; 0x48
   20f78:	beq	21024 <__flatcc_fb_gen_c_json_parser@@Base+0x38e0>
   20f7c:	mov	r0, r4
   20f80:	movw	r1, #41974	; 0xa3f6
   20f84:	movt	r1, #4
   20f88:	ldr	r2, [sp, #60]	; 0x3c
   20f8c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20f90:	mov	r0, r4
   20f94:	movw	r1, #41986	; 0xa402
   20f98:	movt	r1, #4
   20f9c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20fa0:	ldr	r0, [r4, #220]	; 0xdc
   20fa4:	add	r0, r0, #2
   20fa8:	str	r0, [r4, #220]	; 0xdc
   20fac:	ldr	r0, [sp, #36]	; 0x24
   20fb0:	cmp	r0, #0
   20fb4:	beq	20fcc <__flatcc_fb_gen_c_json_parser@@Base+0x3888>
   20fb8:	mov	r0, r4
   20fbc:	movw	r1, #42054	; 0xa446
   20fc0:	movt	r1, #4
   20fc4:	sub	r2, fp, #256	; 0x100
   20fc8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20fcc:	ldr	r0, [r4, #208]	; 0xd0
   20fd0:	ldr	r2, [r0, #160]	; 0xa0
   20fd4:	mov	r0, r4
   20fd8:	movw	r1, #42074	; 0xa45a
   20fdc:	movt	r1, #4
   20fe0:	add	r3, sp, #108	; 0x6c
   20fe4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   20fe8:	ldr	r0, [r4, #208]	; 0xd0
   20fec:	ldr	r2, [r0, #160]	; 0xa0
   20ff0:	mov	r0, r4
   20ff4:	movw	r1, #42103	; 0xa477
   20ff8:	movt	r1, #4
   20ffc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21000:	ldr	r0, [r4, #220]	; 0xdc
   21004:	cmp	r0, #0
   21008:	beq	2155c <__flatcc_fb_gen_c_json_parser@@Base+0x3e18>
   2100c:	subs	r1, r0, #1
   21010:	str	r1, [r4, #220]	; 0xdc
   21014:	beq	2155c <__flatcc_fb_gen_c_json_parser@@Base+0x3e18>
   21018:	sub	r0, r0, #2
   2101c:	str	r0, [r4, #220]	; 0xdc
   21020:	mov	r7, #1
   21024:	ldr	r0, [sp, #96]	; 0x60
   21028:	clz	r0, r0
   2102c:	lsr	r0, r0, #5
   21030:	ldr	r1, [sp, #100]	; 0x64
   21034:	orrs	r0, r1, r0
   21038:	bne	2104c <__flatcc_fb_gen_c_json_parser@@Base+0x3908>
   2103c:	mov	r0, r4
   21040:	movw	r1, #42136	; 0xa498
   21044:	movt	r1, #4
   21048:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2104c:	ldr	r0, [sp, #88]	; 0x58
   21050:	cmp	r0, #1
   21054:	bne	21070 <__flatcc_fb_gen_c_json_parser@@Base+0x392c>
   21058:	ldr	r0, [sp, #52]	; 0x34
   2105c:	ldrd	r2, [r0]
   21060:	mov	r0, r4
   21064:	movw	r1, #42206	; 0xa4de
   21068:	movt	r1, #4
   2106c:	b	210a0 <__flatcc_fb_gen_c_json_parser@@Base+0x395c>
   21070:	orrs	r0, r9, r6
   21074:	bne	210a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3960>
   21078:	ldr	r0, [sp, #56]	; 0x38
   2107c:	ldrd	r2, [r0]
   21080:	ldr	r0, [sp, #68]	; 0x44
   21084:	ldrd	r0, [r0]
   21088:	ldr	r5, [sp, #84]	; 0x54
   2108c:	ldrh	r5, [r5, #74]	; 0x4a
   21090:	stm	sp, {r0, r1, r5}
   21094:	mov	r0, r4
   21098:	movw	r1, #42251	; 0xa50b
   2109c:	movt	r1, #4
   210a0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   210a4:	cmp	r7, #0
   210a8:	beq	21184 <__flatcc_fb_gen_c_json_parser@@Base+0x3a40>
   210ac:	mov	r0, r4
   210b0:	movw	r1, #42330	; 0xa55a
   210b4:	movt	r1, #4
   210b8:	mov	r2, r8
   210bc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   210c0:	mov	r0, r4
   210c4:	movw	r1, #42389	; 0xa595
   210c8:	movt	r1, #4
   210cc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   210d0:	ldr	r0, [r4, #220]	; 0xdc
   210d4:	add	r0, r0, #1
   210d8:	str	r0, [r4, #220]	; 0xdc
   210dc:	mov	r0, r4
   210e0:	movw	r1, #42408	; 0xa5a8
   210e4:	movt	r1, #4
   210e8:	mov	r2, r8
   210ec:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   210f0:	mov	r0, r4
   210f4:	movw	r1, #42494	; 0xa5fe
   210f8:	movt	r1, #4
   210fc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21100:	ldr	r0, [r4, #220]	; 0xdc
   21104:	cmp	r0, #0
   21108:	beq	2157c <__flatcc_fb_gen_c_json_parser@@Base+0x3e38>
   2110c:	sub	r0, r0, #1
   21110:	str	r0, [r4, #220]	; 0xdc
   21114:	mov	r0, r4
   21118:	movw	r1, #35669	; 0x8b55
   2111c:	movt	r1, #3
   21120:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21124:	ldr	r0, [sp, #88]	; 0x58
   21128:	sub	r0, r0, #1
   2112c:	clz	r0, r0
   21130:	lsr	r0, r0, #5
   21134:	orr	r5, r0, r9
   21138:	ldr	r0, [sp, #64]	; 0x40
   2113c:	cmp	r0, #0
   21140:	cmpeq	r5, #0
   21144:	bne	21250 <__flatcc_fb_gen_c_json_parser@@Base+0x3b0c>
   21148:	ldr	r0, [sp, #84]	; 0x54
   2114c:	ldrh	r0, [r0, #56]	; 0x38
   21150:	sub	r1, r0, #5
   21154:	cmp	r1, #2
   21158:	bcc	211e4 <__flatcc_fb_gen_c_json_parser@@Base+0x3aa0>
   2115c:	cmp	r0, #3
   21160:	beq	211fc <__flatcc_fb_gen_c_json_parser@@Base+0x3ab8>
   21164:	cmp	r0, #4
   21168:	bne	215dc <__flatcc_fb_gen_c_json_parser@@Base+0x3e98>
   2116c:	ldr	r0, [sp, #40]	; 0x28
   21170:	ldrd	r2, [r0]
   21174:	mov	r0, r4
   21178:	movw	r1, #42606	; 0xa66e
   2117c:	movt	r1, #4
   21180:	b	21214 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad0>
   21184:	cmp	r6, #0
   21188:	beq	211a8 <__flatcc_fb_gen_c_json_parser@@Base+0x3a64>
   2118c:	ldr	r0, [sp, #44]	; 0x2c
   21190:	cmp	r0, #0
   21194:	beq	211c0 <__flatcc_fb_gen_c_json_parser@@Base+0x3a7c>
   21198:	mov	r0, r4
   2119c:	movw	r1, #42953	; 0xa7c9
   211a0:	movt	r1, #4
   211a4:	b	21290 <__flatcc_fb_gen_c_json_parser@@Base+0x3b4c>
   211a8:	mov	r0, r4
   211ac:	movw	r1, #42897	; 0xa791
   211b0:	movt	r1, #4
   211b4:	sub	r2, fp, #256	; 0x100
   211b8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   211bc:	b	21294 <__flatcc_fb_gen_c_json_parser@@Base+0x3b50>
   211c0:	ldr	r0, [sp, #64]	; 0x40
   211c4:	cmp	r0, #0
   211c8:	beq	21318 <__flatcc_fb_gen_c_json_parser@@Base+0x3bd4>
   211cc:	mov	r0, r4
   211d0:	movw	r1, #43013	; 0xa805
   211d4:	movt	r1, #4
   211d8:	ldr	r2, [sp, #32]
   211dc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   211e0:	b	21294 <__flatcc_fb_gen_c_json_parser@@Base+0x3b50>
   211e4:	ldr	r0, [sp, #40]	; 0x28
   211e8:	ldrd	r2, [r0]
   211ec:	mov	r0, r4
   211f0:	movw	r1, #42538	; 0xa62a
   211f4:	movt	r1, #4
   211f8:	b	21214 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad0>
   211fc:	ldr	r0, [sp, #40]	; 0x28
   21200:	vldr	d16, [r0]
   21204:	vmov	r2, r3, d16
   21208:	mov	r0, r4
   2120c:	movw	r1, #42674	; 0xa6b2
   21210:	movt	r1, #4
   21214:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21218:	ldr	r0, [r4, #220]	; 0xdc
   2121c:	add	r0, r0, #1
   21220:	str	r0, [r4, #220]	; 0xdc
   21224:	ldr	r0, [sp, #56]	; 0x38
   21228:	ldrd	r2, [r0]
   2122c:	ldr	r0, [sp, #68]	; 0x44
   21230:	ldrd	r0, [r0]
   21234:	ldr	r7, [sp, #84]	; 0x54
   21238:	ldrsh	r7, [r7, #74]	; 0x4a
   2123c:	stm	sp, {r0, r1, r7}
   21240:	mov	r0, r4
   21244:	movw	r1, #42788	; 0xa724
   21248:	movt	r1, #4
   2124c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21250:	mov	r0, r4
   21254:	movw	r1, #42868	; 0xa774
   21258:	movt	r1, #4
   2125c:	mov	r2, r4
   21260:	mov	r3, r8
   21264:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21268:	cmp	r5, #0
   2126c:	bne	21294 <__flatcc_fb_gen_c_json_parser@@Base+0x3b50>
   21270:	ldr	r0, [r4, #220]	; 0xdc
   21274:	cmp	r0, #0
   21278:	beq	215bc <__flatcc_fb_gen_c_json_parser@@Base+0x3e78>
   2127c:	sub	r0, r0, #1
   21280:	str	r0, [r4, #220]	; 0xdc
   21284:	mov	r0, r4
   21288:	movw	r1, #35669	; 0x8b55
   2128c:	movt	r1, #3
   21290:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21294:	cmp	r9, #0
   21298:	ldr	r5, [sp, #104]	; 0x68
   2129c:	beq	20d80 <__flatcc_fb_gen_c_json_parser@@Base+0x363c>
   212a0:	ldr	r6, [sp, #100]	; 0x64
   212a4:	cmp	r6, #0
   212a8:	beq	212cc <__flatcc_fb_gen_c_json_parser@@Base+0x3b88>
   212ac:	mov	r0, r4
   212b0:	movw	r1, #43634	; 0xaa72
   212b4:	movt	r1, #4
   212b8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   212bc:	mov	r0, r4
   212c0:	movw	r1, #43719	; 0xaac7
   212c4:	movt	r1, #4
   212c8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   212cc:	mov	r0, r4
   212d0:	movw	r1, #43732	; 0xaad4
   212d4:	movt	r1, #4
   212d8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   212dc:	ldr	r0, [r4, #220]	; 0xdc
   212e0:	cmp	r0, #0
   212e4:	beq	2159c <__flatcc_fb_gen_c_json_parser@@Base+0x3e58>
   212e8:	sub	r0, r0, #1
   212ec:	str	r0, [r4, #220]	; 0xdc
   212f0:	mov	r0, r4
   212f4:	movw	r1, #35669	; 0x8b55
   212f8:	movt	r1, #3
   212fc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21300:	mov	r0, r4
   21304:	cmp	r6, #0
   21308:	beq	20d74 <__flatcc_fb_gen_c_json_parser@@Base+0x3630>
   2130c:	movw	r1, #43790	; 0xab0e
   21310:	movt	r1, #4
   21314:	b	20d7c <__flatcc_fb_gen_c_json_parser@@Base+0x3638>
   21318:	ldr	r0, [sp, #80]	; 0x50
   2131c:	cmp	r0, #0
   21320:	beq	21334 <__flatcc_fb_gen_c_json_parser@@Base+0x3bf0>
   21324:	mov	r0, r4
   21328:	movw	r1, #43090	; 0xa852
   2132c:	movt	r1, #4
   21330:	b	211b4 <__flatcc_fb_gen_c_json_parser@@Base+0x3a70>
   21334:	ldr	r0, [sp, #28]
   21338:	cmp	r0, #0
   2133c:	beq	21378 <__flatcc_fb_gen_c_json_parser@@Base+0x3c34>
   21340:	ldr	r0, [sp, #56]	; 0x38
   21344:	ldrd	r0, [r0]
   21348:	ldr	r2, [sp, #84]	; 0x54
   2134c:	ldr	r2, [r2, #112]	; 0x70
   21350:	ldr	r3, [sp, #24]
   21354:	cmp	r3, #0
   21358:	beq	21444 <__flatcc_fb_gen_c_json_parser@@Base+0x3d00>
   2135c:	stm	sp, {r0, r1}
   21360:	sub	r0, fp, #256	; 0x100
   21364:	str	r0, [sp, #8]
   21368:	mov	r0, r4
   2136c:	movw	r1, #43138	; 0xa882
   21370:	movt	r1, #4
   21374:	b	21488 <__flatcc_fb_gen_c_json_parser@@Base+0x3d44>
   21378:	ldr	r0, [sp, #20]
   2137c:	cmp	r0, #0
   21380:	beq	21460 <__flatcc_fb_gen_c_json_parser@@Base+0x3d1c>
   21384:	mov	r0, r4
   21388:	movw	r1, #41986	; 0xa402
   2138c:	movt	r1, #4
   21390:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21394:	ldr	r0, [r4, #220]	; 0xdc
   21398:	add	r0, r0, #2
   2139c:	str	r0, [r4, #220]	; 0xdc
   213a0:	mov	r0, r4
   213a4:	movw	r1, #42054	; 0xa446
   213a8:	movt	r1, #4
   213ac:	sub	r2, fp, #256	; 0x100
   213b0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   213b4:	ldr	r0, [r4, #208]	; 0xd0
   213b8:	ldr	r2, [r0, #160]	; 0xa0
   213bc:	mov	r0, r4
   213c0:	movw	r1, #42074	; 0xa45a
   213c4:	movt	r1, #4
   213c8:	add	r3, sp, #108	; 0x6c
   213cc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   213d0:	ldr	r0, [r4, #208]	; 0xd0
   213d4:	ldr	r2, [r0, #160]	; 0xa0
   213d8:	mov	r0, r4
   213dc:	movw	r1, #42103	; 0xa477
   213e0:	movt	r1, #4
   213e4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   213e8:	ldr	r0, [r4, #220]	; 0xdc
   213ec:	cmp	r0, #0
   213f0:	beq	2162c <__flatcc_fb_gen_c_json_parser@@Base+0x3ee8>
   213f4:	subs	r1, r0, #1
   213f8:	str	r1, [r4, #220]	; 0xdc
   213fc:	beq	2162c <__flatcc_fb_gen_c_json_parser@@Base+0x3ee8>
   21400:	sub	r0, r0, #2
   21404:	str	r0, [r4, #220]	; 0xdc
   21408:	ldr	r0, [sp, #56]	; 0x38
   2140c:	ldrd	r0, [r0]
   21410:	ldr	r2, [sp, #84]	; 0x54
   21414:	ldr	r2, [r2, #112]	; 0x70
   21418:	ldr	r3, [sp, #16]
   2141c:	cmp	r3, #0
   21420:	beq	21470 <__flatcc_fb_gen_c_json_parser@@Base+0x3d2c>
   21424:	stm	sp, {r0, r1}
   21428:	sub	r0, fp, #256	; 0x100
   2142c:	str	r0, [sp, #8]
   21430:	str	r0, [sp, #12]
   21434:	mov	r0, r4
   21438:	movw	r1, #43325	; 0xa93d
   2143c:	movt	r1, #4
   21440:	b	21488 <__flatcc_fb_gen_c_json_parser@@Base+0x3d44>
   21444:	stm	sp, {r0, r1}
   21448:	sub	r0, fp, #256	; 0x100
   2144c:	str	r0, [sp, #8]
   21450:	mov	r0, r4
   21454:	movw	r1, #43235	; 0xa8e3
   21458:	movt	r1, #4
   2145c:	b	21488 <__flatcc_fb_gen_c_json_parser@@Base+0x3d44>
   21460:	cmp	r9, #0
   21464:	ldr	r5, [sp, #104]	; 0x68
   21468:	bne	212a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3b5c>
   2146c:	b	2164c <__flatcc_fb_gen_c_json_parser@@Base+0x3f08>
   21470:	stm	sp, {r0, r1}
   21474:	sub	r0, fp, #256	; 0x100
   21478:	str	r0, [sp, #8]
   2147c:	mov	r0, r4
   21480:	movw	r1, #43472	; 0xa9d0
   21484:	movt	r1, #4
   21488:	mov	r3, #0
   2148c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21490:	b	21294 <__flatcc_fb_gen_c_json_parser@@Base+0x3b50>
   21494:	cmp	r5, #2
   21498:	bne	214e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3d9c>
   2149c:	movw	r1, #43883	; 0xab6b
   214a0:	movt	r1, #4
   214a4:	mov	r0, r4
   214a8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   214ac:	movw	r1, #43906	; 0xab82
   214b0:	movt	r1, #4
   214b4:	mov	r0, r4
   214b8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   214bc:	ldr	r0, [r4, #220]	; 0xdc
   214c0:	cmp	r0, #0
   214c4:	beq	2169c <__flatcc_fb_gen_c_json_parser@@Base+0x3f58>
   214c8:	sub	r0, r0, #1
   214cc:	str	r0, [r4, #220]	; 0xdc
   214d0:	movw	r1, #43954	; 0xabb2
   214d4:	movt	r1, #4
   214d8:	mov	r0, r4
   214dc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   214e0:	ldr	r0, [sp, #44]	; 0x2c
   214e4:	ldr	r1, [sp, #64]	; 0x40
   214e8:	orr	r0, r1, r0
   214ec:	orr	r0, r0, r5
   214f0:	ldr	r1, [sp, #96]	; 0x60
   214f4:	orr	r0, r0, r1
   214f8:	ldr	r1, [sp, #80]	; 0x50
   214fc:	orrs	r0, r0, r1
   21500:	beq	2152c <__flatcc_fb_gen_c_json_parser@@Base+0x3de8>
   21504:	ldr	r0, [sp, #40]	; 0x28
   21508:	ldrd	r2, [r0, #48]	; 0x30
   2150c:	movw	r1, #43973	; 0xabc5
   21510:	movt	r1, #4
   21514:	mov	r0, r4
   21518:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2151c:	movw	r1, #43719	; 0xaac7
   21520:	movt	r1, #4
   21524:	mov	r0, r4
   21528:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2152c:	sub	sp, fp, #28
   21530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21534:	mov	r0, #0
   21538:	b	20b00 <__flatcc_fb_gen_c_json_parser@@Base+0x33bc>
   2153c:	movw	r0, #37280	; 0x91a0
   21540:	movt	r0, #4
   21544:	movw	r1, #37292	; 0x91ac
   21548:	movt	r1, #4
   2154c:	movw	r3, #41551	; 0xa24f
   21550:	movt	r3, #4
   21554:	movw	r2, #490	; 0x1ea
   21558:	bl	14ab4 <__assert_fail@plt>
   2155c:	movw	r0, #37280	; 0x91a0
   21560:	movt	r0, #4
   21564:	movw	r1, #37292	; 0x91ac
   21568:	movt	r1, #4
   2156c:	movw	r3, #41551	; 0xa24f
   21570:	movt	r3, #4
   21574:	movw	r2, #539	; 0x21b
   21578:	bl	14ab4 <__assert_fail@plt>
   2157c:	movw	r0, #37280	; 0x91a0
   21580:	movt	r0, #4
   21584:	movw	r1, #37292	; 0x91ac
   21588:	movt	r1, #4
   2158c:	movw	r3, #41551	; 0xa24f
   21590:	movt	r3, #4
   21594:	movw	r2, #559	; 0x22f
   21598:	bl	14ab4 <__assert_fail@plt>
   2159c:	movw	r0, #37280	; 0x91a0
   215a0:	movt	r0, #4
   215a4:	movw	r1, #37292	; 0x91ac
   215a8:	movt	r1, #4
   215ac:	movw	r3, #41551	; 0xa24f
   215b0:	movt	r3, #4
   215b4:	movw	r2, #647	; 0x287
   215b8:	bl	14ab4 <__assert_fail@plt>
   215bc:	movw	r0, #37280	; 0x91a0
   215c0:	movt	r0, #4
   215c4:	movw	r1, #37292	; 0x91ac
   215c8:	movt	r1, #4
   215cc:	movw	r3, #41551	; 0xa24f
   215d0:	movt	r3, #4
   215d4:	movw	r2, #602	; 0x25a
   215d8:	bl	14ab4 <__assert_fail@plt>
   215dc:	movw	r0, #8368	; 0x20b0
   215e0:	movt	r0, #6
   215e4:	ldr	r0, [r0]
   215e8:	movw	r1, #42741	; 0xa6f5
   215ec:	movt	r1, #4
   215f0:	str	r1, [sp]
   215f4:	movw	r1, #26331	; 0x66db
   215f8:	movt	r1, #3
   215fc:	movw	r4, #37292	; 0x91ac
   21600:	movt	r4, #4
   21604:	mov	r2, r4
   21608:	movw	r3, #590	; 0x24e
   2160c:	bl	149f4 <fprintf@plt>
   21610:	movw	r0, #30217	; 0x7609
   21614:	movt	r0, #4
   21618:	movw	r3, #41551	; 0xa24f
   2161c:	movt	r3, #4
   21620:	mov	r1, r4
   21624:	movw	r2, #590	; 0x24e
   21628:	bl	14ab4 <__assert_fail@plt>
   2162c:	movw	r0, #37280	; 0x91a0
   21630:	movt	r0, #4
   21634:	movw	r1, #37292	; 0x91ac
   21638:	movt	r1, #4
   2163c:	movw	r3, #41551	; 0xa24f
   21640:	movt	r3, #4
   21644:	movw	r2, #627	; 0x273
   21648:	bl	14ab4 <__assert_fail@plt>
   2164c:	movw	r0, #8368	; 0x20b0
   21650:	movt	r0, #6
   21654:	ldr	r0, [r0]
   21658:	movw	r1, #43585	; 0xaa41
   2165c:	movt	r1, #4
   21660:	str	r1, [sp]
   21664:	movw	r1, #26331	; 0x66db
   21668:	movt	r1, #3
   2166c:	movw	r4, #37292	; 0x91ac
   21670:	movt	r4, #4
   21674:	mov	r2, r4
   21678:	mov	r3, #636	; 0x27c
   2167c:	bl	149f4 <fprintf@plt>
   21680:	movw	r0, #30217	; 0x7609
   21684:	movt	r0, #4
   21688:	movw	r3, #41551	; 0xa24f
   2168c:	movt	r3, #4
   21690:	mov	r1, r4
   21694:	mov	r2, #636	; 0x27c
   21698:	bl	14ab4 <__assert_fail@plt>
   2169c:	movw	r0, #37280	; 0x91a0
   216a0:	movt	r0, #4
   216a4:	movw	r1, #37292	; 0x91ac
   216a8:	movt	r1, #4
   216ac:	movw	r3, #41551	; 0xa24f
   216b0:	movt	r3, #4
   216b4:	movw	r2, #661	; 0x295
   216b8:	bl	14ab4 <__assert_fail@plt>
   216bc:	push	{r4, sl, fp, lr}
   216c0:	add	fp, sp, #8
   216c4:	sub	sp, sp, #8
   216c8:	sub	r0, r0, #1
   216cc:	cmp	r0, #11
   216d0:	movwcc	r1, #46856	; 0xb708
   216d4:	movtcc	r1, #4
   216d8:	ldrcc	r0, [r1, r0, lsl #2]
   216dc:	subcc	sp, fp, #8
   216e0:	popcc	{r4, sl, fp, pc}
   216e4:	movw	r0, #8368	; 0x20b0
   216e8:	movt	r0, #6
   216ec:	ldr	r0, [r0]
   216f0:	movw	r1, #52924	; 0xcebc
   216f4:	movt	r1, #3
   216f8:	str	r1, [sp]
   216fc:	movw	r1, #26331	; 0x66db
   21700:	movt	r1, #3
   21704:	movw	r4, #52851	; 0xce73
   21708:	movt	r4, #3
   2170c:	mov	r2, r4
   21710:	mov	r3, #96	; 0x60
   21714:	bl	149f4 <fprintf@plt>
   21718:	movw	r0, #30217	; 0x7609
   2171c:	movt	r0, #4
   21720:	movw	r3, #55276	; 0xd7ec
   21724:	movt	r3, #3
   21728:	mov	r1, r4
   2172c:	mov	r2, #96	; 0x60
   21730:	bl	14ab4 <__assert_fail@plt>
   21734:	push	{r4, sl, fp, lr}
   21738:	add	fp, sp, #8
   2173c:	sub	sp, sp, #8
   21740:	sub	r0, r0, #1
   21744:	cmp	r0, #11
   21748:	movwcc	r1, #46900	; 0xb734
   2174c:	movtcc	r1, #4
   21750:	ldrcc	r0, [r1, r0, lsl #2]
   21754:	subcc	sp, fp, #8
   21758:	popcc	{r4, sl, fp, pc}
   2175c:	movw	r0, #8368	; 0x20b0
   21760:	movt	r0, #6
   21764:	ldr	r0, [r0]
   21768:	movw	r1, #52924	; 0xcebc
   2176c:	movt	r1, #3
   21770:	str	r1, [sp]
   21774:	movw	r1, #26331	; 0x66db
   21778:	movt	r1, #3
   2177c:	movw	r4, #52851	; 0xce73
   21780:	movt	r4, #3
   21784:	mov	r2, r4
   21788:	mov	r3, #141	; 0x8d
   2178c:	bl	149f4 <fprintf@plt>
   21790:	movw	r0, #30217	; 0x7609
   21794:	movt	r0, #4
   21798:	movw	r3, #52979	; 0xcef3
   2179c:	movt	r3, #3
   217a0:	mov	r1, r4
   217a4:	mov	r2, #141	; 0x8d
   217a8:	bl	14ab4 <__assert_fail@plt>
   217ac:	push	{r4, r5, r6, sl, fp, lr}
   217b0:	add	fp, sp, #16
   217b4:	sub	sp, sp, #16
   217b8:	mov	r6, r2
   217bc:	mov	r4, #0
   217c0:	str	r4, [sp]
   217c4:	stmib	sp, {r0, r4}
   217c8:	add	r5, r1, #4
   217cc:	movw	r1, #6380	; 0x18ec
   217d0:	movt	r1, #2
   217d4:	mov	r2, sp
   217d8:	mov	r0, r5
   217dc:	bl	26c7c <fb_symbol_table_visit@@Base>
   217e0:	ldr	r0, [sp]
   217e4:	str	r0, [r6]
   217e8:	cmp	r0, #0
   217ec:	beq	21838 <__flatcc_fb_gen_c_json_parser@@Base+0x40f4>
   217f0:	lsl	r0, r0, #4
   217f4:	bl	14994 <malloc@plt>
   217f8:	cmp	r0, #0
   217fc:	beq	21838 <__flatcc_fb_gen_c_json_parser@@Base+0x40f4>
   21800:	mov	r6, r0
   21804:	str	r0, [sp, #8]
   21808:	movw	r1, #6420	; 0x1914
   2180c:	movt	r1, #2
   21810:	mov	r2, sp
   21814:	mov	r0, r5
   21818:	bl	26c7c <fb_symbol_table_visit@@Base>
   2181c:	ldr	r1, [sp]
   21820:	movw	r3, #444	; 0x1bc
   21824:	movt	r3, #2
   21828:	mov	r0, r6
   2182c:	mov	r2, #16
   21830:	bl	14a78 <qsort@plt>
   21834:	mov	r4, r6
   21838:	mov	r0, r4
   2183c:	sub	sp, fp, #16
   21840:	pop	{r4, r5, r6, sl, fp, pc}
   21844:	push	{r4, r5, fp, lr}
   21848:	add	fp, sp, #8
   2184c:	mov	r5, r2
   21850:	mov	r4, r0
   21854:	ldr	r2, [fp, #8]
   21858:	movw	r1, #45732	; 0xb2a4
   2185c:	movt	r1, #4
   21860:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21864:	movw	r1, #39929	; 0x9bf9
   21868:	movt	r1, #4
   2186c:	mov	r0, r4
   21870:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21874:	ldr	r0, [r4, #220]	; 0xdc
   21878:	add	r0, r0, #1
   2187c:	str	r0, [r4, #220]	; 0xdc
   21880:	mov	r0, r4
   21884:	mov	r1, r5
   21888:	bl	219b4 <__flatcc_fb_gen_c_json_parser@@Base+0x4270>
   2188c:	ldr	r0, [r4, #220]	; 0xdc
   21890:	cmp	r0, #0
   21894:	beq	218c0 <__flatcc_fb_gen_c_json_parser@@Base+0x417c>
   21898:	sub	r0, r0, #1
   2189c:	str	r0, [r4, #220]	; 0xdc
   218a0:	movw	r1, #39120	; 0x98d0
   218a4:	movt	r1, #4
   218a8:	mov	r0, r4
   218ac:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   218b0:	ldr	r0, [r4, #220]	; 0xdc
   218b4:	add	r0, r0, #1
   218b8:	str	r0, [r4, #220]	; 0xdc
   218bc:	pop	{r4, r5, fp, pc}
   218c0:	movw	r0, #37280	; 0x91a0
   218c4:	movt	r0, #4
   218c8:	movw	r1, #37292	; 0x91ac
   218cc:	movt	r1, #4
   218d0:	movw	r3, #45798	; 0xb2e6
   218d4:	movt	r3, #4
   218d8:	movw	r2, #742	; 0x2e6
   218dc:	bl	14ab4 <__assert_fail@plt>
   218e0:	movw	r1, #40220	; 0x9d1c
   218e4:	movt	r1, #4
   218e8:	b	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   218ec:	push	{r4, sl, fp, lr}
   218f0:	add	fp, sp, #8
   218f4:	mov	r4, r0
   218f8:	ldr	r0, [r0, #4]
   218fc:	bl	21960 <__flatcc_fb_gen_c_json_parser@@Base+0x421c>
   21900:	cmp	r0, #0
   21904:	ldrne	r0, [r4]
   21908:	addne	r0, r0, #1
   2190c:	strne	r0, [r4]
   21910:	pop	{r4, sl, fp, pc}
   21914:	push	{r4, r5, fp, lr}
   21918:	add	fp, sp, #8
   2191c:	mov	r5, r1
   21920:	mov	r4, r0
   21924:	ldr	r0, [r0, #4]
   21928:	bl	21960 <__flatcc_fb_gen_c_json_parser@@Base+0x421c>
   2192c:	cmp	r0, #0
   21930:	popeq	{r4, r5, fp, pc}
   21934:	ldr	r0, [r4, #8]
   21938:	ldr	r1, [r5, #4]
   2193c:	ldr	r1, [r1]
   21940:	str	r1, [r0]
   21944:	ldr	r0, [r5, #4]
   21948:	ldr	r0, [r0, #4]
   2194c:	ldr	r1, [r4, #8]
   21950:	stmib	r1, {r0, r5}
   21954:	add	r0, r1, #16
   21958:	str	r0, [r4, #8]
   2195c:	pop	{r4, r5, fp, pc}
   21960:	push	{r4, sl, fp, lr}
   21964:	add	fp, sp, #8
   21968:	mov	r4, r1
   2196c:	ldrh	r1, [r1, #8]
   21970:	sub	r1, r1, #3
   21974:	cmp	r1, #1
   21978:	bhi	21994 <__flatcc_fb_gen_c_json_parser@@Base+0x4250>
   2197c:	ldr	r1, [r4, #16]
   21980:	add	r0, r0, #172	; 0xac
   21984:	bl	2199c <__flatcc_fb_gen_c_json_parser@@Base+0x4258>
   21988:	cmp	r0, #0
   2198c:	movne	r0, r4
   21990:	pop	{r4, sl, fp, pc}
   21994:	mov	r0, #0
   21998:	pop	{r4, sl, fp, pc}
   2199c:	push	{fp, lr}
   219a0:	mov	fp, sp
   219a4:	bl	26574 <ptr_set_find_item@@Base>
   219a8:	cmp	r0, #0
   219ac:	movwne	r0, #1
   219b0:	pop	{fp, pc}
   219b4:	push	{r4, r5, r6, sl, fp, lr}
   219b8:	add	fp, sp, #16
   219bc:	sub	sp, sp, #224	; 0xe0
   219c0:	mov	r4, r0
   219c4:	ldrh	r0, [r1, #8]
   219c8:	sub	r0, r0, #3
   219cc:	uxth	r0, r0
   219d0:	cmp	r0, #2
   219d4:	bcs	21a18 <__flatcc_fb_gen_c_json_parser@@Base+0x42d4>
   219d8:	mov	r5, r1
   219dc:	mov	r6, sp
   219e0:	mov	r0, r6
   219e4:	mov	r1, #0
   219e8:	mov	r2, #220	; 0xdc
   219ec:	bl	14a0c <memset@plt>
   219f0:	mov	r0, r5
   219f4:	mov	r1, r6
   219f8:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   219fc:	movw	r1, #45953	; 0xb381
   21a00:	movt	r1, #4
   21a04:	mov	r0, r4
   21a08:	mov	r2, r6
   21a0c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21a10:	sub	sp, fp, #16
   21a14:	pop	{r4, r5, r6, sl, fp, pc}
   21a18:	movw	r0, #52033	; 0xcb41
   21a1c:	movt	r0, #3
   21a20:	movw	r1, #37292	; 0x91ac
   21a24:	movt	r1, #4
   21a28:	movw	r3, #45874	; 0xb332
   21a2c:	movt	r3, #4
   21a30:	movw	r2, #729	; 0x2d9
   21a34:	bl	14ab4 <__assert_fail@plt>
   21a38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21a3c:	add	fp, sp, #24
   21a40:	mov	r8, r2
   21a44:	mov	r4, r0
   21a48:	mov	r0, #0
   21a4c:	vmov.i32	q8, #0	; 0x00000000
   21a50:	str	r0, [r4, #36]	; 0x24
   21a54:	str	r1, [r4, #40]	; 0x28
   21a58:	mov	r0, #1
   21a5c:	str	r0, [r4]
   21a60:	add	r0, r4, #20
   21a64:	vst1.32	{d16-d17}, [r0]
   21a68:	add	r0, r4, #4
   21a6c:	vst1.32	{d16-d17}, [r0]
   21a70:	movw	r1, #7252	; 0x1c54
   21a74:	movt	r1, #2
   21a78:	mov	r0, r2
   21a7c:	mov	r2, r4
   21a80:	bl	27274 <fb_scope_table_visit@@Base>
   21a84:	ldr	r5, [r4, #4]
   21a88:	mov	r0, r5
   21a8c:	mov	r1, #8
   21a90:	bl	148f8 <calloc@plt>
   21a94:	str	r0, [r4, #16]
   21a98:	ldr	r7, [r4, #8]
   21a9c:	mov	r0, r7
   21aa0:	mov	r1, #8
   21aa4:	bl	148f8 <calloc@plt>
   21aa8:	str	r0, [r4, #20]
   21aac:	ldr	r6, [r4, #12]
   21ab0:	mov	r0, r6
   21ab4:	bl	14994 <malloc@plt>
   21ab8:	ldr	r1, [r4, #16]
   21abc:	ldr	r2, [r4, #20]
   21ac0:	add	r3, r4, #24
   21ac4:	stm	r3, {r0, r1, r2}
   21ac8:	str	r0, [r4, #36]	; 0x24
   21acc:	cmp	r5, #1
   21ad0:	blt	21adc <__flatcc_fb_gen_c_json_parser@@Base+0x4398>
   21ad4:	cmp	r1, #0
   21ad8:	beq	21b00 <__flatcc_fb_gen_c_json_parser@@Base+0x43bc>
   21adc:	cmp	r7, #1
   21ae0:	blt	21af0 <__flatcc_fb_gen_c_json_parser@@Base+0x43ac>
   21ae4:	ldr	r1, [r4, #20]
   21ae8:	cmp	r1, #0
   21aec:	beq	21b00 <__flatcc_fb_gen_c_json_parser@@Base+0x43bc>
   21af0:	cmp	r6, #0
   21af4:	beq	21b10 <__flatcc_fb_gen_c_json_parser@@Base+0x43cc>
   21af8:	cmp	r0, #0
   21afc:	bne	21b10 <__flatcc_fb_gen_c_json_parser@@Base+0x43cc>
   21b00:	mov	r0, r4
   21b04:	bl	21bfc <__flatcc_fb_gen_c_json_parser@@Base+0x44b8>
   21b08:	mvn	r0, #0
   21b0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21b10:	movw	r1, #7272	; 0x1c68
   21b14:	movt	r1, #2
   21b18:	mov	r0, r8
   21b1c:	mov	r2, r4
   21b20:	bl	27274 <fb_scope_table_visit@@Base>
   21b24:	ldr	r1, [r4, #4]
   21b28:	ldr	r0, [r4, #16]
   21b2c:	bl	21c7c <__flatcc_fb_gen_c_json_parser@@Base+0x4538>
   21b30:	ldr	r1, [r4, #8]
   21b34:	ldr	r0, [r4, #20]
   21b38:	bl	21c7c <__flatcc_fb_gen_c_json_parser@@Base+0x4538>
   21b3c:	mov	r0, #0
   21b40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21b44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21b48:	add	fp, sp, #28
   21b4c:	sub	sp, sp, #4
   21b50:	mov	r5, r0
   21b54:	ldr	r0, [r0, #8]
   21b58:	str	r0, [r1]
   21b5c:	mov	r7, #0
   21b60:	cmp	r0, #0
   21b64:	beq	21bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x44ac>
   21b68:	mov	r8, r1
   21b6c:	lsl	r0, r0, #4
   21b70:	bl	14994 <malloc@plt>
   21b74:	cmp	r0, #0
   21b78:	beq	21bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x44ac>
   21b7c:	mov	r9, r0
   21b80:	ldr	r1, [r5, #8]
   21b84:	cmp	r1, #1
   21b88:	blt	21bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x448c>
   21b8c:	add	r7, r9, #8
   21b90:	mov	sl, #0
   21b94:	mov	r6, #0
   21b98:	ldr	r4, [r5, #20]
   21b9c:	add	r0, r4, r6, lsl #3
   21ba0:	ldr	r1, [r0, #4]
   21ba4:	str	r1, [r7, #-8]
   21ba8:	ldr	r0, [r0, #4]
   21bac:	bl	149dc <strlen@plt>
   21bb0:	str	r0, [r7, #-4]
   21bb4:	ldr	r0, [r4, r6, lsl #3]
   21bb8:	stm	r7, {r0, sl}
   21bbc:	add	r7, r7, #16
   21bc0:	add	r6, r6, #1
   21bc4:	ldr	r1, [r5, #8]
   21bc8:	cmp	r6, r1
   21bcc:	blt	21b98 <__flatcc_fb_gen_c_json_parser@@Base+0x4454>
   21bd0:	movw	r3, #444	; 0x1bc
   21bd4:	movt	r3, #2
   21bd8:	mov	r0, r9
   21bdc:	mov	r2, #16
   21be0:	bl	14a78 <qsort@plt>
   21be4:	ldr	r0, [r5, #8]
   21be8:	str	r0, [r8]
   21bec:	mov	r7, r9
   21bf0:	mov	r0, r7
   21bf4:	sub	sp, fp, #28
   21bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21bfc:	push	{r4, sl, fp, lr}
   21c00:	add	fp, sp, #8
   21c04:	mov	r4, r0
   21c08:	ldr	r0, [r0, #16]
   21c0c:	cmp	r0, #0
   21c10:	beq	21c18 <__flatcc_fb_gen_c_json_parser@@Base+0x44d4>
   21c14:	bl	14928 <free@plt>
   21c18:	ldr	r0, [r4, #20]
   21c1c:	cmp	r0, #0
   21c20:	beq	21c28 <__flatcc_fb_gen_c_json_parser@@Base+0x44e4>
   21c24:	bl	14928 <free@plt>
   21c28:	ldr	r0, [r4, #24]
   21c2c:	cmp	r0, #0
   21c30:	beq	21c38 <__flatcc_fb_gen_c_json_parser@@Base+0x44f4>
   21c34:	bl	14928 <free@plt>
   21c38:	vmov.i32	q8, #0	; 0x00000000
   21c3c:	mov	r0, #28
   21c40:	add	r1, r4, #16
   21c44:	vst1.32	{d16-d17}, [r4], r0
   21c48:	vst1.32	{d16-d17}, [r4]
   21c4c:	vst1.32	{d16-d17}, [r1]
   21c50:	pop	{r4, sl, fp, pc}
   21c54:	mov	r2, r0
   21c58:	add	r0, r1, #4
   21c5c:	movw	r1, #7360	; 0x1cc0
   21c60:	movt	r1, #2
   21c64:	b	26c7c <fb_symbol_table_visit@@Base>
   21c68:	mov	r2, r0
   21c6c:	add	r0, r1, #4
   21c70:	movw	r1, #7600	; 0x1db0
   21c74:	movt	r1, #2
   21c78:	b	26c7c <fb_symbol_table_visit@@Base>
   21c7c:	push	{r4, r5, fp, lr}
   21c80:	add	fp, sp, #8
   21c84:	mov	r4, r1
   21c88:	mov	r5, r0
   21c8c:	movw	r3, #7848	; 0x1ea8
   21c90:	movt	r3, #2
   21c94:	mov	r2, #8
   21c98:	bl	14a78 <qsort@plt>
   21c9c:	cmp	r4, #1
   21ca0:	poplt	{r4, r5, fp, pc}
   21ca4:	mov	r0, #0
   21ca8:	ldr	r1, [r5, r0, lsl #3]
   21cac:	str	r0, [r1, #124]	; 0x7c
   21cb0:	add	r0, r0, #1
   21cb4:	cmp	r4, r0
   21cb8:	bne	21ca8 <__flatcc_fb_gen_c_json_parser@@Base+0x4564>
   21cbc:	pop	{r4, r5, fp, pc}
   21cc0:	push	{r4, r5, fp, lr}
   21cc4:	add	fp, sp, #8
   21cc8:	mov	r5, r1
   21ccc:	mov	r4, r0
   21cd0:	ldr	r0, [r0, #40]	; 0x28
   21cd4:	bl	21d78 <__flatcc_fb_gen_c_json_parser@@Base+0x4634>
   21cd8:	cmp	r0, #0
   21cdc:	popeq	{r4, r5, fp, pc}
   21ce0:	ldr	r2, [r4]
   21ce4:	mov	r1, #1
   21ce8:	cmp	r2, #0
   21cec:	beq	21d28 <__flatcc_fb_gen_c_json_parser@@Base+0x45e4>
   21cf0:	ldr	r0, [r0, #12]
   21cf4:	ldr	r0, [r0]
   21cf8:	cmp	r0, #0
   21cfc:	beq	21d28 <__flatcc_fb_gen_c_json_parser@@Base+0x45e4>
   21d00:	mov	r1, #0
   21d04:	ldr	r2, [r0]
   21d08:	ldr	r0, [r0, #4]
   21d0c:	ldr	r0, [r0, #4]
   21d10:	add	r0, r1, r0
   21d14:	add	r1, r0, #1
   21d18:	cmp	r2, #0
   21d1c:	mov	r0, r2
   21d20:	bne	21d04 <__flatcc_fb_gen_c_json_parser@@Base+0x45c0>
   21d24:	add	r1, r1, #1
   21d28:	ldr	r0, [r5, #4]
   21d2c:	ldr	r0, [r0, #4]
   21d30:	add	r0, r1, r0
   21d34:	ldr	r1, [r4, #12]
   21d38:	add	r0, r0, r1
   21d3c:	str	r0, [r4, #12]
   21d40:	ldrh	r0, [r5, #8]
   21d44:	sub	r1, r0, #3
   21d48:	cmp	r1, #2
   21d4c:	bcc	21d68 <__flatcc_fb_gen_c_json_parser@@Base+0x4624>
   21d50:	cmp	r0, #1
   21d54:	bhi	21d74 <__flatcc_fb_gen_c_json_parser@@Base+0x4630>
   21d58:	ldr	r0, [r4, #4]
   21d5c:	add	r0, r0, #1
   21d60:	str	r0, [r4, #4]
   21d64:	pop	{r4, r5, fp, pc}
   21d68:	ldr	r0, [r4, #8]
   21d6c:	add	r0, r0, #1
   21d70:	str	r0, [r4, #8]
   21d74:	pop	{r4, r5, fp, pc}
   21d78:	push	{r4, sl, fp, lr}
   21d7c:	add	fp, sp, #8
   21d80:	mov	r4, r1
   21d84:	ldrh	r1, [r1, #8]
   21d88:	cmp	r1, #4
   21d8c:	bhi	21da8 <__flatcc_fb_gen_c_json_parser@@Base+0x4664>
   21d90:	ldr	r1, [r4, #16]
   21d94:	add	r0, r0, #172	; 0xac
   21d98:	bl	2199c <__flatcc_fb_gen_c_json_parser@@Base+0x4258>
   21d9c:	cmp	r0, #0
   21da0:	movne	r0, r4
   21da4:	pop	{r4, sl, fp, pc}
   21da8:	mov	r0, #0
   21dac:	pop	{r4, sl, fp, pc}
   21db0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21db4:	add	fp, sp, #28
   21db8:	sub	sp, sp, #4
   21dbc:	mov	r9, r1
   21dc0:	mov	sl, r0
   21dc4:	ldr	r0, [r0, #40]	; 0x28
   21dc8:	bl	21d78 <__flatcc_fb_gen_c_json_parser@@Base+0x4634>
   21dcc:	cmp	r0, #0
   21dd0:	beq	21ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x475c>
   21dd4:	ldr	r1, [sl]
   21dd8:	ldr	r8, [sl, #36]	; 0x24
   21ddc:	cmp	r1, #0
   21de0:	mov	r6, r8
   21de4:	beq	21e2c <__flatcc_fb_gen_c_json_parser@@Base+0x46e8>
   21de8:	ldr	r0, [r0, #12]
   21dec:	ldr	r5, [r0]
   21df0:	cmp	r5, #0
   21df4:	mov	r6, r8
   21df8:	beq	21e2c <__flatcc_fb_gen_c_json_parser@@Base+0x46e8>
   21dfc:	mov	r4, #46	; 0x2e
   21e00:	mov	r6, r8
   21e04:	ldr	r0, [r5, #4]
   21e08:	ldm	r0, {r1, r7}
   21e0c:	mov	r0, r6
   21e10:	mov	r2, r7
   21e14:	bl	14934 <memcpy@plt>
   21e18:	strb	r4, [r6, r7]!
   21e1c:	add	r6, r6, #1
   21e20:	ldr	r5, [r5]
   21e24:	cmp	r5, #0
   21e28:	bne	21e04 <__flatcc_fb_gen_c_json_parser@@Base+0x46c0>
   21e2c:	ldr	r0, [r9, #4]
   21e30:	ldm	r0, {r1, r7}
   21e34:	mov	r0, r6
   21e38:	mov	r2, r7
   21e3c:	bl	14934 <memcpy@plt>
   21e40:	mov	r0, #0
   21e44:	strb	r0, [r6, r7]!
   21e48:	add	r0, r6, #1
   21e4c:	str	r0, [sl, #36]	; 0x24
   21e50:	ldrh	r0, [r9, #8]
   21e54:	sub	r1, r0, #3
   21e58:	cmp	r1, #2
   21e5c:	bcc	21e88 <__flatcc_fb_gen_c_json_parser@@Base+0x4744>
   21e60:	cmp	r0, #1
   21e64:	bhi	21ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x475c>
   21e68:	ldr	r0, [sl, #28]
   21e6c:	str	r9, [r0]
   21e70:	ldr	r0, [sl, #28]
   21e74:	str	r8, [r0, #4]
   21e78:	add	r0, r0, #8
   21e7c:	str	r0, [sl, #28]
   21e80:	sub	sp, fp, #28
   21e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e88:	ldr	r0, [sl, #32]
   21e8c:	str	r9, [r0]
   21e90:	ldr	r0, [sl, #32]
   21e94:	str	r8, [r0, #4]
   21e98:	add	r0, r0, #8
   21e9c:	str	r0, [sl, #32]
   21ea0:	sub	sp, fp, #28
   21ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21ea8:	ldr	r1, [r1, #4]
   21eac:	ldr	r0, [r0, #4]
   21eb0:	b	14910 <strcmp@plt>
   21eb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21eb8:	add	fp, sp, #24
   21ebc:	sub	sp, sp, #224	; 0xe0
   21ec0:	mov	r5, r1
   21ec4:	mov	r4, r0
   21ec8:	mov	r6, sp
   21ecc:	mov	r0, r6
   21ed0:	mov	r1, #0
   21ed4:	mov	r2, #220	; 0xdc
   21ed8:	bl	14a0c <memset@plt>
   21edc:	mov	r0, r5
   21ee0:	mov	r1, r6
   21ee4:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   21ee8:	ldr	r0, [r4, #208]	; 0xd0
   21eec:	ldr	r2, [r0, #160]	; 0xa0
   21ef0:	movw	r1, #37163	; 0x912b
   21ef4:	movt	r1, #4
   21ef8:	mov	r0, r4
   21efc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21f00:	ldr	r0, [r4, #220]	; 0xdc
   21f04:	add	r0, r0, #2
   21f08:	str	r0, [r4, #220]	; 0xdc
   21f0c:	movw	r1, #46124	; 0xb42c
   21f10:	movt	r1, #4
   21f14:	mov	r0, r4
   21f18:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21f1c:	ldr	r0, [r4, #220]	; 0xdc
   21f20:	cmp	r0, #0
   21f24:	beq	220b8 <__flatcc_fb_gen_c_json_parser@@Base+0x4974>
   21f28:	subs	r1, r0, #1
   21f2c:	str	r1, [r4, #220]	; 0xdc
   21f30:	beq	220b8 <__flatcc_fb_gen_c_json_parser@@Base+0x4974>
   21f34:	sub	r0, r0, #2
   21f38:	str	r0, [r4, #220]	; 0xdc
   21f3c:	movw	r1, #50495	; 0xc53f
   21f40:	movt	r1, #4
   21f44:	mov	r0, r4
   21f48:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21f4c:	ldr	r0, [r4, #220]	; 0xdc
   21f50:	add	r0, r0, #1
   21f54:	str	r0, [r4, #220]	; 0xdc
   21f58:	movw	r1, #46230	; 0xb496
   21f5c:	movt	r1, #4
   21f60:	mov	r0, r4
   21f64:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21f68:	movw	r1, #46259	; 0xb4b3
   21f6c:	movt	r1, #4
   21f70:	mov	r0, r4
   21f74:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21f78:	movw	r1, #26588	; 0x67dc
   21f7c:	movt	r1, #3
   21f80:	mov	r0, r4
   21f84:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21f88:	movw	r1, #46286	; 0xb4ce
   21f8c:	movt	r1, #4
   21f90:	mov	r0, r4
   21f94:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21f98:	movw	r1, #46313	; 0xb4e9
   21f9c:	movt	r1, #4
   21fa0:	mov	r0, r4
   21fa4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21fa8:	ldr	r0, [r4, #208]	; 0xd0
   21fac:	ldrh	r1, [r0, #16]
   21fb0:	cmp	r1, #2
   21fb4:	bne	21fd8 <__flatcc_fb_gen_c_json_parser@@Base+0x4894>
   21fb8:	ldrd	r6, [r0, #8]
   21fbc:	movw	r1, #46372	; 0xb524
   21fc0:	movt	r1, #4
   21fc4:	mov	r0, r4
   21fc8:	mov	r2, r7
   21fcc:	mov	r3, r6
   21fd0:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21fd4:	b	21fe8 <__flatcc_fb_gen_c_json_parser@@Base+0x48a4>
   21fd8:	movw	r1, #46433	; 0xb561
   21fdc:	movt	r1, #4
   21fe0:	mov	r0, r4
   21fe4:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21fe8:	movw	r1, #46489	; 0xb599
   21fec:	movt	r1, #4
   21ff0:	mov	r2, sp
   21ff4:	mov	r0, r4
   21ff8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   21ffc:	movw	r1, #46541	; 0xb5cd
   22000:	movt	r1, #4
   22004:	mov	r0, r4
   22008:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2200c:	ldr	r0, [r4, #220]	; 0xdc
   22010:	add	r0, r0, #1
   22014:	str	r0, [r4, #220]	; 0xdc
   22018:	movw	r1, #46559	; 0xb5df
   2201c:	movt	r1, #4
   22020:	mov	r0, r4
   22024:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   22028:	ldr	r0, [r4, #220]	; 0xdc
   2202c:	cmp	r0, #0
   22030:	beq	220d8 <__flatcc_fb_gen_c_json_parser@@Base+0x4994>
   22034:	sub	r0, r0, #1
   22038:	str	r0, [r4, #220]	; 0xdc
   2203c:	movw	r1, #35669	; 0x8b55
   22040:	movt	r1, #3
   22044:	mov	r0, r4
   22048:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2204c:	movw	r1, #46578	; 0xb5f2
   22050:	movt	r1, #4
   22054:	mov	r0, r4
   22058:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2205c:	movw	r1, #46630	; 0xb626
   22060:	movt	r1, #4
   22064:	mov	r0, r4
   22068:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2206c:	movw	r1, #39433	; 0x9a09
   22070:	movt	r1, #4
   22074:	mov	r0, r4
   22078:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2207c:	ldr	r0, [r4, #220]	; 0xdc
   22080:	cmp	r0, #0
   22084:	beq	220f8 <__flatcc_fb_gen_c_json_parser@@Base+0x49b4>
   22088:	sub	r0, r0, #1
   2208c:	str	r0, [r4, #220]	; 0xdc
   22090:	movw	r1, #35669	; 0x8b55
   22094:	movt	r1, #3
   22098:	mov	r0, r4
   2209c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   220a0:	movw	r1, #26588	; 0x67dc
   220a4:	movt	r1, #3
   220a8:	mov	r0, r4
   220ac:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   220b0:	sub	sp, fp, #24
   220b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   220b8:	movw	r0, #37280	; 0x91a0
   220bc:	movt	r0, #4
   220c0:	movw	r1, #37292	; 0x91ac
   220c4:	movt	r1, #4
   220c8:	movw	r3, #46167	; 0xb457
   220cc:	movt	r3, #4
   220d0:	movw	r2, #1610	; 0x64a
   220d4:	bl	14ab4 <__assert_fail@plt>
   220d8:	movw	r0, #37280	; 0x91a0
   220dc:	movt	r0, #4
   220e0:	movw	r1, #37292	; 0x91ac
   220e4:	movt	r1, #4
   220e8:	movw	r3, #46167	; 0xb457
   220ec:	movt	r3, #4
   220f0:	movw	r2, #1626	; 0x65a
   220f4:	bl	14ab4 <__assert_fail@plt>
   220f8:	movw	r0, #37280	; 0x91a0
   220fc:	movt	r0, #4
   22100:	movw	r1, #37292	; 0x91ac
   22104:	movt	r1, #4
   22108:	movw	r3, #46167	; 0xb457
   2210c:	movt	r3, #4
   22110:	movw	r2, #1630	; 0x65e
   22114:	bl	14ab4 <__assert_fail@plt>
   22118:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2211c:	add	fp, sp, #24
   22120:	sub	sp, sp, #224	; 0xe0
   22124:	mov	r5, r1
   22128:	mov	r4, r0
   2212c:	mov	r6, sp
   22130:	mov	r0, r6
   22134:	mov	r1, #0
   22138:	mov	r2, #220	; 0xdc
   2213c:	bl	14a0c <memset@plt>
   22140:	mov	r0, r5
   22144:	mov	r1, r6
   22148:	bl	1de10 <__flatcc_fb_gen_c_json_parser@@Base+0x6cc>
   2214c:	ldr	r0, [r4, #208]	; 0xd0
   22150:	ldr	r2, [r0, #160]	; 0xa0
   22154:	movw	r1, #37163	; 0x912b
   22158:	movt	r1, #4
   2215c:	mov	r0, r4
   22160:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   22164:	ldr	r0, [r4, #220]	; 0xdc
   22168:	add	r0, r0, #2
   2216c:	str	r0, [r4, #220]	; 0xdc
   22170:	movw	r1, #46124	; 0xb42c
   22174:	movt	r1, #4
   22178:	mov	r0, r4
   2217c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   22180:	ldr	r0, [r4, #220]	; 0xdc
   22184:	cmp	r0, #0
   22188:	beq	2231c <__flatcc_fb_gen_c_json_parser@@Base+0x4bd8>
   2218c:	subs	r1, r0, #1
   22190:	str	r1, [r4, #220]	; 0xdc
   22194:	beq	2231c <__flatcc_fb_gen_c_json_parser@@Base+0x4bd8>
   22198:	sub	r0, r0, #2
   2219c:	str	r0, [r4, #220]	; 0xdc
   221a0:	movw	r1, #50495	; 0xc53f
   221a4:	movt	r1, #4
   221a8:	mov	r0, r4
   221ac:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   221b0:	ldr	r0, [r4, #220]	; 0xdc
   221b4:	add	r0, r0, #1
   221b8:	str	r0, [r4, #220]	; 0xdc
   221bc:	movw	r1, #46714	; 0xb67a
   221c0:	movt	r1, #4
   221c4:	mov	r0, r4
   221c8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   221cc:	movw	r1, #46259	; 0xb4b3
   221d0:	movt	r1, #4
   221d4:	mov	r0, r4
   221d8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   221dc:	movw	r1, #26588	; 0x67dc
   221e0:	movt	r1, #3
   221e4:	mov	r0, r4
   221e8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   221ec:	movw	r1, #46741	; 0xb695
   221f0:	movt	r1, #4
   221f4:	mov	r0, r4
   221f8:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   221fc:	movw	r1, #46313	; 0xb4e9
   22200:	movt	r1, #4
   22204:	mov	r0, r4
   22208:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2220c:	ldr	r0, [r4, #208]	; 0xd0
   22210:	ldrh	r1, [r0, #16]
   22214:	cmp	r1, #2
   22218:	bne	2223c <__flatcc_fb_gen_c_json_parser@@Base+0x4af8>
   2221c:	ldrd	r6, [r0, #8]
   22220:	movw	r1, #46372	; 0xb524
   22224:	movt	r1, #4
   22228:	mov	r0, r4
   2222c:	mov	r2, r7
   22230:	mov	r3, r6
   22234:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   22238:	b	2224c <__flatcc_fb_gen_c_json_parser@@Base+0x4b08>
   2223c:	movw	r1, #46433	; 0xb561
   22240:	movt	r1, #4
   22244:	mov	r0, r4
   22248:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2224c:	movw	r1, #46766	; 0xb6ae
   22250:	movt	r1, #4
   22254:	mov	r2, sp
   22258:	mov	r0, r4
   2225c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   22260:	movw	r1, #46541	; 0xb5cd
   22264:	movt	r1, #4
   22268:	mov	r0, r4
   2226c:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   22270:	ldr	r0, [r4, #220]	; 0xdc
   22274:	add	r0, r0, #1
   22278:	str	r0, [r4, #220]	; 0xdc
   2227c:	movw	r1, #46559	; 0xb5df
   22280:	movt	r1, #4
   22284:	mov	r0, r4
   22288:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   2228c:	ldr	r0, [r4, #220]	; 0xdc
   22290:	cmp	r0, #0
   22294:	beq	2233c <__flatcc_fb_gen_c_json_parser@@Base+0x4bf8>
   22298:	sub	r0, r0, #1
   2229c:	str	r0, [r4, #220]	; 0xdc
   222a0:	movw	r1, #35669	; 0x8b55
   222a4:	movt	r1, #3
   222a8:	mov	r0, r4
   222ac:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   222b0:	movw	r1, #46578	; 0xb5f2
   222b4:	movt	r1, #4
   222b8:	mov	r0, r4
   222bc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   222c0:	movw	r1, #46630	; 0xb626
   222c4:	movt	r1, #4
   222c8:	mov	r0, r4
   222cc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   222d0:	movw	r1, #39433	; 0x9a09
   222d4:	movt	r1, #4
   222d8:	mov	r0, r4
   222dc:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   222e0:	ldr	r0, [r4, #220]	; 0xdc
   222e4:	cmp	r0, #0
   222e8:	beq	2235c <__flatcc_fb_gen_c_json_parser@@Base+0x4c18>
   222ec:	sub	r0, r0, #1
   222f0:	str	r0, [r4, #220]	; 0xdc
   222f4:	movw	r1, #35669	; 0x8b55
   222f8:	movt	r1, #3
   222fc:	mov	r0, r4
   22300:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   22304:	movw	r1, #26588	; 0x67dc
   22308:	movt	r1, #3
   2230c:	mov	r0, r4
   22310:	bl	1dcec <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   22314:	sub	sp, fp, #24
   22318:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2231c:	movw	r0, #37280	; 0x91a0
   22320:	movt	r0, #4
   22324:	movw	r1, #37292	; 0x91ac
   22328:	movt	r1, #4
   2232c:	movw	r3, #46650	; 0xb63a
   22330:	movt	r3, #4
   22334:	movw	r2, #1645	; 0x66d
   22338:	bl	14ab4 <__assert_fail@plt>
   2233c:	movw	r0, #37280	; 0x91a0
   22340:	movt	r0, #4
   22344:	movw	r1, #37292	; 0x91ac
   22348:	movt	r1, #4
   2234c:	movw	r3, #46650	; 0xb63a
   22350:	movt	r3, #4
   22354:	movw	r2, #1661	; 0x67d
   22358:	bl	14ab4 <__assert_fail@plt>
   2235c:	movw	r0, #37280	; 0x91a0
   22360:	movt	r0, #4
   22364:	movw	r1, #37292	; 0x91ac
   22368:	movt	r1, #4
   2236c:	movw	r3, #46650	; 0xb63a
   22370:	movt	r3, #4
   22374:	movw	r2, #1665	; 0x681
   22378:	bl	14ab4 <__assert_fail@plt>
   2237c:	ldr	r1, [r0, #212]	; 0xd4
   22380:	ldr	r1, [r1, #140]	; 0x8c
   22384:	cmp	r1, #0
   22388:	bxeq	lr
   2238c:	ldr	r3, [r0, #204]	; 0xcc
   22390:	movw	r0, #50552	; 0xc578
   22394:	movt	r0, #3
   22398:	mov	r1, #36	; 0x24
   2239c:	mov	r2, #1
   223a0:	b	1497c <fwrite@plt>

000223a4 <__flatcc_fb_gen_c_json_printer@@Base>:
   223a4:	push	{r4, sl, fp, lr}
   223a8:	add	fp, sp, #8
   223ac:	mov	r4, r0
   223b0:	bl	223f4 <__flatcc_fb_gen_c_json_printer@@Base+0x50>
   223b4:	mov	r0, r4
   223b8:	bl	2247c <__flatcc_fb_gen_c_json_printer@@Base+0xd8>
   223bc:	mov	r0, r4
   223c0:	bl	225ac <__flatcc_fb_gen_c_json_printer@@Base+0x208>
   223c4:	mov	r0, r4
   223c8:	bl	225ec <__flatcc_fb_gen_c_json_printer@@Base+0x248>
   223cc:	mov	r0, r4
   223d0:	bl	2262c <__flatcc_fb_gen_c_json_printer@@Base+0x288>
   223d4:	mov	r0, r4
   223d8:	bl	2266c <__flatcc_fb_gen_c_json_printer@@Base+0x2c8>
   223dc:	mov	r0, r4
   223e0:	bl	226b8 <__flatcc_fb_gen_c_json_printer@@Base+0x314>
   223e4:	mov	r0, r4
   223e8:	bl	226dc <__flatcc_fb_gen_c_json_printer@@Base+0x338>
   223ec:	mov	r0, #0
   223f0:	pop	{r4, sl, fp, pc}
   223f4:	push	{r4, sl, fp, lr}
   223f8:	add	fp, sp, #8
   223fc:	mov	r4, r0
   22400:	ldr	r0, [r0, #204]	; 0xcc
   22404:	ldr	r1, [r4, #208]	; 0xd0
   22408:	ldr	r2, [r1, #164]	; 0xa4
   2240c:	movw	r1, #46944	; 0xb760
   22410:	movt	r1, #4
   22414:	mov	r3, r2
   22418:	bl	149f4 <fprintf@plt>
   2241c:	ldr	r3, [r4, #204]	; 0xcc
   22420:	movw	r0, #26034	; 0x65b2
   22424:	movt	r0, #3
   22428:	mov	r1, #81	; 0x51
   2242c:	mov	r2, #1
   22430:	bl	1497c <fwrite@plt>
   22434:	ldr	r3, [r4, #204]	; 0xcc
   22438:	movw	r0, #46997	; 0xb795
   2243c:	movt	r0, #4
   22440:	mov	r1, #40	; 0x28
   22444:	mov	r2, #1
   22448:	bl	1497c <fwrite@plt>
   2244c:	movw	r1, #25963	; 0x656b
   22450:	movt	r1, #3
   22454:	movw	r2, #47038	; 0xb7be
   22458:	movt	r2, #4
   2245c:	mov	r0, r4
   22460:	bl	16650 <__flatcc_fb_gen_c_includes@@Base>
   22464:	mov	r0, r4
   22468:	bl	22708 <__flatcc_fb_gen_c_json_printer@@Base+0x364>
   2246c:	ldr	r1, [r4, #204]	; 0xcc
   22470:	mov	r0, #10
   22474:	pop	{r4, sl, fp, lr}
   22478:	b	14a54 <fputc@plt>
   2247c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22480:	add	fp, sp, #24
   22484:	sub	sp, sp, #224	; 0xe0
   22488:	mov	r4, r0
   2248c:	ldr	r0, [r0, #208]	; 0xd0
   22490:	ldr	r5, [r0, #52]	; 0x34
   22494:	mov	r0, sp
   22498:	mov	r1, #0
   2249c:	mov	r2, #220	; 0xdc
   224a0:	bl	14a0c <memset@plt>
   224a4:	cmp	r5, #0
   224a8:	beq	224e8 <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   224ac:	ldrh	r0, [r5, #8]
   224b0:	cmp	r0, #1
   224b4:	bhi	224e8 <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   224b8:	ldr	r3, [r4, #204]	; 0xcc
   224bc:	movw	r0, #47054	; 0xb7ce
   224c0:	movt	r0, #4
   224c4:	movw	r1, #482	; 0x1e2
   224c8:	mov	r2, #1
   224cc:	bl	1497c <fwrite@plt>
   224d0:	ldr	r0, [r4, #204]	; 0xcc
   224d4:	ldr	r1, [r4, #208]	; 0xd0
   224d8:	ldr	r2, [r1, #160]	; 0xa0
   224dc:	movw	r1, #47537	; 0xb9b1
   224e0:	movt	r1, #4
   224e4:	bl	149f4 <fprintf@plt>
   224e8:	ldr	r0, [r4, #208]	; 0xd0
   224ec:	ldr	r5, [r0, #40]	; 0x28
   224f0:	cmp	r5, #0
   224f4:	beq	22598 <__flatcc_fb_gen_c_json_printer@@Base+0x1f4>
   224f8:	mov	r6, sp
   224fc:	movw	r8, #47823	; 0xbacf
   22500:	movt	r8, #4
   22504:	movw	r9, #47929	; 0xbb39
   22508:	movt	r9, #4
   2250c:	movw	r7, #47625	; 0xba09
   22510:	movt	r7, #4
   22514:	b	22540 <__flatcc_fb_gen_c_json_printer@@Base+0x19c>
   22518:	mov	r0, r5
   2251c:	mov	r1, r6
   22520:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   22524:	ldr	r0, [r4, #204]	; 0xcc
   22528:	mov	r1, r9
   2252c:	mov	r2, r6
   22530:	bl	149f4 <fprintf@plt>
   22534:	ldr	r5, [r5]
   22538:	cmp	r5, #0
   2253c:	beq	22598 <__flatcc_fb_gen_c_json_printer@@Base+0x1f4>
   22540:	ldrh	r0, [r5, #8]
   22544:	cmp	r0, #0
   22548:	beq	22580 <__flatcc_fb_gen_c_json_printer@@Base+0x1dc>
   2254c:	cmp	r0, #1
   22550:	beq	22518 <__flatcc_fb_gen_c_json_printer@@Base+0x174>
   22554:	cmp	r0, #4
   22558:	bne	22534 <__flatcc_fb_gen_c_json_printer@@Base+0x190>
   2255c:	mov	r0, r5
   22560:	mov	r1, r6
   22564:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   22568:	ldr	r0, [r4, #204]	; 0xcc
   2256c:	mov	r1, r7
   22570:	mov	r2, r6
   22574:	mov	r3, r6
   22578:	bl	149f4 <fprintf@plt>
   2257c:	b	22534 <__flatcc_fb_gen_c_json_printer@@Base+0x190>
   22580:	mov	r0, r5
   22584:	mov	r1, r6
   22588:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   2258c:	ldr	r0, [r4, #204]	; 0xcc
   22590:	mov	r1, r8
   22594:	b	2252c <__flatcc_fb_gen_c_json_printer@@Base+0x188>
   22598:	ldr	r1, [r4, #204]	; 0xcc
   2259c:	mov	r0, #10
   225a0:	bl	14a54 <fputc@plt>
   225a4:	sub	sp, fp, #24
   225a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   225ac:	push	{r4, r5, fp, lr}
   225b0:	add	fp, sp, #8
   225b4:	mov	r4, r0
   225b8:	ldr	r0, [r0, #208]	; 0xd0
   225bc:	ldr	r5, [r0, #40]	; 0x28
   225c0:	cmp	r5, #0
   225c4:	beq	225e8 <__flatcc_fb_gen_c_json_printer@@Base+0x244>
   225c8:	ldrh	r0, [r5, #8]
   225cc:	cmp	r0, #3
   225d0:	moveq	r0, r4
   225d4:	moveq	r1, r5
   225d8:	bleq	22740 <__flatcc_fb_gen_c_json_printer@@Base+0x39c>
   225dc:	ldr	r5, [r5]
   225e0:	cmp	r5, #0
   225e4:	bne	225c8 <__flatcc_fb_gen_c_json_printer@@Base+0x224>
   225e8:	pop	{r4, r5, fp, pc}
   225ec:	push	{r4, r5, fp, lr}
   225f0:	add	fp, sp, #8
   225f4:	mov	r4, r0
   225f8:	ldr	r0, [r0, #208]	; 0xd0
   225fc:	ldr	r5, [r0, #40]	; 0x28
   22600:	cmp	r5, #0
   22604:	beq	22628 <__flatcc_fb_gen_c_json_printer@@Base+0x284>
   22608:	ldrh	r0, [r5, #8]
   2260c:	cmp	r0, #4
   22610:	moveq	r0, r4
   22614:	moveq	r1, r5
   22618:	bleq	22d04 <__flatcc_fb_gen_c_json_printer@@Base+0x960>
   2261c:	ldr	r5, [r5]
   22620:	cmp	r5, #0
   22624:	bne	22608 <__flatcc_fb_gen_c_json_printer@@Base+0x264>
   22628:	pop	{r4, r5, fp, pc}
   2262c:	push	{r4, r5, fp, lr}
   22630:	add	fp, sp, #8
   22634:	mov	r4, r0
   22638:	ldr	r0, [r0, #208]	; 0xd0
   2263c:	ldr	r5, [r0, #40]	; 0x28
   22640:	cmp	r5, #0
   22644:	beq	22668 <__flatcc_fb_gen_c_json_printer@@Base+0x2c4>
   22648:	ldrh	r0, [r5, #8]
   2264c:	cmp	r0, #1
   22650:	moveq	r0, r4
   22654:	moveq	r1, r5
   22658:	bleq	22fe0 <__flatcc_fb_gen_c_json_printer@@Base+0xc3c>
   2265c:	ldr	r5, [r5]
   22660:	cmp	r5, #0
   22664:	bne	22648 <__flatcc_fb_gen_c_json_printer@@Base+0x2a4>
   22668:	pop	{r4, r5, fp, pc}
   2266c:	push	{r4, r5, fp, lr}
   22670:	add	fp, sp, #8
   22674:	mov	r4, r0
   22678:	ldr	r0, [r0, #208]	; 0xd0
   2267c:	ldr	r5, [r0, #40]	; 0x28
   22680:	cmp	r5, #0
   22684:	bne	22698 <__flatcc_fb_gen_c_json_printer@@Base+0x2f4>
   22688:	b	226b4 <__flatcc_fb_gen_c_json_printer@@Base+0x310>
   2268c:	ldr	r5, [r5]
   22690:	cmp	r5, #0
   22694:	beq	226b4 <__flatcc_fb_gen_c_json_printer@@Base+0x310>
   22698:	ldrh	r0, [r5, #8]
   2269c:	cmp	r0, #0
   226a0:	bne	2268c <__flatcc_fb_gen_c_json_printer@@Base+0x2e8>
   226a4:	mov	r0, r4
   226a8:	mov	r1, r5
   226ac:	bl	231a8 <__flatcc_fb_gen_c_json_printer@@Base+0xe04>
   226b0:	b	2268c <__flatcc_fb_gen_c_json_printer@@Base+0x2e8>
   226b4:	pop	{r4, r5, fp, pc}
   226b8:	ldr	r1, [r0, #208]	; 0xd0
   226bc:	ldr	r1, [r1, #52]	; 0x34
   226c0:	cmp	r1, #0
   226c4:	bxeq	lr
   226c8:	ldrh	r2, [r1, #8]
   226cc:	cmp	r2, #1
   226d0:	bhi	226d8 <__flatcc_fb_gen_c_json_printer@@Base+0x334>
   226d4:	b	239d0 <__flatcc_fb_gen_c_json_printer@@Base+0x162c>
   226d8:	bx	lr
   226dc:	push	{r4, sl, fp, lr}
   226e0:	add	fp, sp, #8
   226e4:	mov	r4, r0
   226e8:	bl	23a98 <__flatcc_fb_gen_c_json_printer@@Base+0x16f4>
   226ec:	ldr	r0, [r4, #204]	; 0xcc
   226f0:	ldr	r1, [r4, #208]	; 0xd0
   226f4:	ldr	r2, [r1, #164]	; 0xa4
   226f8:	movw	r1, #52690	; 0xcdd2
   226fc:	movt	r1, #4
   22700:	pop	{r4, sl, fp, lr}
   22704:	b	149f4 <fprintf@plt>
   22708:	ldr	r1, [r0, #212]	; 0xd4
   2270c:	ldr	r1, [r1, #140]	; 0x8c
   22710:	cmp	r1, #0
   22714:	bxeq	lr
   22718:	ldr	r3, [r0, #204]	; 0xcc
   2271c:	movw	r0, #26510	; 0x678e
   22720:	movt	r0, #3
   22724:	mov	r1, #36	; 0x24
   22728:	mov	r2, #1
   2272c:	b	1497c <fwrite@plt>
   22730:	mov	r2, r1
   22734:	mov	r1, r0
   22738:	ldr	r0, [r0, #12]
   2273c:	b	16838 <__flatcc_fb_scoped_symbol_name@@Base>
   22740:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22744:	add	fp, sp, #28
   22748:	sub	sp, sp, #252	; 0xfc
   2274c:	mov	sl, r1
   22750:	mov	r4, r0
   22754:	add	r5, sp, #24
   22758:	mov	r7, #0
   2275c:	mov	r0, r5
   22760:	mov	r1, #0
   22764:	mov	r2, #220	; 0xdc
   22768:	bl	14a0c <memset@plt>
   2276c:	mov	r0, sl
   22770:	mov	r1, r5
   22774:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   22778:	ldr	r0, [sl, #40]	; 0x28
   2277c:	bl	22bfc <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   22780:	mov	r5, r0
   22784:	ldr	r0, [sl, #40]	; 0x28
   22788:	bl	22c74 <__flatcc_fb_gen_c_json_printer@@Base+0x8d0>
   2278c:	mov	r9, r0
   22790:	ldr	r0, [sl, #40]	; 0x28
   22794:	mov	r1, r4
   22798:	bl	22cec <__flatcc_fb_gen_c_json_printer@@Base+0x948>
   2279c:	mov	r3, r0
   227a0:	ldrh	r0, [sl, #92]	; 0x5c
   227a4:	ands	r6, r0, #32
   227a8:	str	r5, [sp, #20]
   227ac:	beq	227f4 <__flatcc_fb_gen_c_json_printer@@Base+0x450>
   227b0:	ldrd	r0, [sl, #112]	; 0x70
   227b4:	eor	r2, r0, #1
   227b8:	orrs	r2, r2, r1
   227bc:	movw	r8, #48007	; 0xbb87
   227c0:	movt	r8, #4
   227c4:	beq	2282c <__flatcc_fb_gen_c_json_printer@@Base+0x488>
   227c8:	eor	r2, r0, #4
   227cc:	orrs	r2, r2, r1
   227d0:	beq	22810 <__flatcc_fb_gen_c_json_printer@@Base+0x46c>
   227d4:	eor	r0, r0, #2
   227d8:	orrs	r0, r0, r1
   227dc:	bne	22840 <__flatcc_fb_gen_c_json_printer@@Base+0x49c>
   227e0:	movw	r5, #65535	; 0xffff
   227e4:	movw	r0, #52814	; 0xce4e
   227e8:	movt	r0, #3
   227ec:	str	r0, [sp, #16]
   227f0:	b	2285c <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   227f4:	ldr	r0, [r4, #204]!	; 0xcc
   227f8:	str	r9, [sp]
   227fc:	movw	r1, #48016	; 0xbb90
   22800:	movt	r1, #4
   22804:	add	r2, sp, #24
   22808:	bl	149f4 <fprintf@plt>
   2280c:	b	22928 <__flatcc_fb_gen_c_json_printer@@Base+0x584>
   22810:	mvn	r5, #0
   22814:	movw	r0, #52805	; 0xce45
   22818:	movt	r0, #3
   2281c:	str	r0, [sp, #16]
   22820:	movw	r8, #48009	; 0xbb89
   22824:	movt	r8, #4
   22828:	b	2285c <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   2282c:	mov	r5, #255	; 0xff
   22830:	movw	r0, #52823	; 0xce57
   22834:	movt	r0, #3
   22838:	str	r0, [sp, #16]
   2283c:	b	2285c <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   22840:	mvn	r5, #0
   22844:	movw	r0, #52796	; 0xce3c
   22848:	movt	r0, #3
   2284c:	str	r0, [sp, #16]
   22850:	movw	r8, #48012	; 0xbb8c
   22854:	movt	r8, #4
   22858:	mvn	r7, #0
   2285c:	ldr	r0, [sl, #20]
   22860:	cmp	r0, #0
   22864:	bne	228a0 <__flatcc_fb_gen_c_json_printer@@Base+0x4fc>
   22868:	ldr	r0, [r4, #204]!	; 0xcc
   2286c:	str	r9, [sp]
   22870:	movw	r1, #48016	; 0xbb90
   22874:	movt	r1, #4
   22878:	add	r2, sp, #24
   2287c:	bl	149f4 <fprintf@plt>
   22880:	b	228f0 <__flatcc_fb_gen_c_json_printer@@Base+0x54c>
   22884:	ldr	r2, [r1]
   22888:	ldr	r1, [r1, #4]
   2288c:	bic	r7, r7, r1
   22890:	bic	r5, r5, r2
   22894:	ldr	r0, [r0]
   22898:	cmp	r0, #0
   2289c:	beq	228d0 <__flatcc_fb_gen_c_json_printer@@Base+0x52c>
   228a0:	add	r1, r0, #48	; 0x30
   228a4:	ldrh	r2, [r0, #56]	; 0x38
   228a8:	cmp	r2, #4
   228ac:	beq	22884 <__flatcc_fb_gen_c_json_printer@@Base+0x4e0>
   228b0:	cmp	r2, #6
   228b4:	beq	228c4 <__flatcc_fb_gen_c_json_printer@@Base+0x520>
   228b8:	cmp	r2, #5
   228bc:	beq	22884 <__flatcc_fb_gen_c_json_printer@@Base+0x4e0>
   228c0:	b	22894 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   228c4:	ldrb	r1, [r1]
   228c8:	bic	r5, r5, r1
   228cc:	b	22894 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   228d0:	ldr	r0, [r4, #204]!	; 0xcc
   228d4:	str	r9, [sp]
   228d8:	movw	r1, #48016	; 0xbb90
   228dc:	movt	r1, #4
   228e0:	add	r2, sp, #24
   228e4:	bl	149f4 <fprintf@plt>
   228e8:	cmp	r6, #0
   228ec:	beq	22928 <__flatcc_fb_gen_c_json_printer@@Base+0x584>
   228f0:	ldr	r6, [sp, #16]
   228f4:	mov	r0, r6
   228f8:	mov	r1, r9
   228fc:	bl	14910 <strcmp@plt>
   22900:	mov	r1, r0
   22904:	ldr	r0, [r4]
   22908:	cmp	r1, #0
   2290c:	beq	22a18 <__flatcc_fb_gen_c_json_printer@@Base+0x674>
   22910:	movw	r1, #48086	; 0xbbd6
   22914:	movt	r1, #4
   22918:	mov	r2, r6
   2291c:	mov	r3, r6
   22920:	bl	149f4 <fprintf@plt>
   22924:	b	22a28 <__flatcc_fb_gen_c_json_printer@@Base+0x684>
   22928:	ldr	r3, [r4]
   2292c:	movw	r0, #48616	; 0xbde8
   22930:	movt	r0, #4
   22934:	mov	r1, #18
   22938:	mov	r2, #1
   2293c:	bl	1497c <fwrite@plt>
   22940:	ldr	r5, [sl, #20]
   22944:	cmp	r5, #0
   22948:	beq	22a00 <__flatcc_fb_gen_c_json_printer@@Base+0x65c>
   2294c:	movw	r8, #48702	; 0xbe3e
   22950:	movt	r8, #4
   22954:	movw	r9, #48769	; 0xbe81
   22958:	movt	r9, #4
   2295c:	movw	r7, #48635	; 0xbdfb
   22960:	movt	r7, #4
   22964:	b	22998 <__flatcc_fb_gen_c_json_printer@@Base+0x5f4>
   22968:	ldrb	r2, [r5, #48]	; 0x30
   2296c:	ldr	r0, [r4]
   22970:	ldr	r1, [r5, #4]
   22974:	ldr	r6, [r1]
   22978:	ldr	r3, [r1, #4]
   2297c:	str	r6, [sp]
   22980:	str	r3, [sp, #4]
   22984:	mov	r1, r9
   22988:	bl	149f4 <fprintf@plt>
   2298c:	ldr	r5, [r5]
   22990:	cmp	r5, #0
   22994:	beq	22a00 <__flatcc_fb_gen_c_json_printer@@Base+0x65c>
   22998:	add	r0, r5, #48	; 0x30
   2299c:	ldrh	r1, [r5, #56]	; 0x38
   229a0:	cmp	r1, #4
   229a4:	beq	229dc <__flatcc_fb_gen_c_json_printer@@Base+0x638>
   229a8:	cmp	r1, #6
   229ac:	beq	22968 <__flatcc_fb_gen_c_json_printer@@Base+0x5c4>
   229b0:	cmp	r1, #5
   229b4:	bne	22b5c <__flatcc_fb_gen_c_json_printer@@Base+0x7b8>
   229b8:	ldrd	r2, [r0]
   229bc:	ldr	r0, [r4]
   229c0:	ldr	r1, [r5, #4]
   229c4:	ldr	r6, [r1]
   229c8:	ldr	r1, [r1, #4]
   229cc:	stm	sp, {r1, r6}
   229d0:	str	r1, [sp, #8]
   229d4:	mov	r1, r7
   229d8:	b	22988 <__flatcc_fb_gen_c_json_printer@@Base+0x5e4>
   229dc:	ldrd	r2, [r0]
   229e0:	ldr	r0, [r4]
   229e4:	ldr	r1, [r5, #4]
   229e8:	ldr	r6, [r1]
   229ec:	ldr	r1, [r1, #4]
   229f0:	stm	sp, {r1, r6}
   229f4:	str	r1, [sp, #8]
   229f8:	mov	r1, r8
   229fc:	b	22988 <__flatcc_fb_gen_c_json_printer@@Base+0x5e4>
   22a00:	ldr	r0, [r4]
   22a04:	movw	r1, #48834	; 0xbec2
   22a08:	movt	r1, #4
   22a0c:	ldr	r2, [sp, #20]
   22a10:	bl	149f4 <fprintf@plt>
   22a14:	b	22b3c <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   22a18:	movw	r1, #48105	; 0xbbe9
   22a1c:	movt	r1, #4
   22a20:	mov	r2, r6
   22a24:	bl	149f4 <fprintf@plt>
   22a28:	ldr	r3, [r4]
   22a2c:	movw	r0, #48120	; 0xbbf8
   22a30:	movt	r0, #4
   22a34:	mov	r1, #54	; 0x36
   22a38:	mov	r2, #1
   22a3c:	bl	1497c <fwrite@plt>
   22a40:	ldr	r1, [r4]
   22a44:	mov	r0, #10
   22a48:	bl	14a54 <fputc@plt>
   22a4c:	orrs	r0, r5, r7
   22a50:	beq	22a74 <__flatcc_fb_gen_c_json_printer@@Base+0x6d0>
   22a54:	ldr	r0, [r4]
   22a58:	ldr	r1, [sp, #20]
   22a5c:	str	r1, [sp]
   22a60:	movw	r1, #48175	; 0xbc2f
   22a64:	movt	r1, #4
   22a68:	mov	r2, r5
   22a6c:	mov	r3, r7
   22a70:	bl	149f4 <fprintf@plt>
   22a74:	ldr	r3, [r4]
   22a78:	movw	r0, #48272	; 0xbc90
   22a7c:	movt	r0, #4
   22a80:	mov	r1, #59	; 0x3b
   22a84:	mov	r2, #1
   22a88:	bl	1497c <fwrite@plt>
   22a8c:	ldr	r6, [sl, #20]
   22a90:	cmp	r6, #0
   22a94:	beq	22b24 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
   22a98:	movw	r5, #48332	; 0xbccc
   22a9c:	movt	r5, #4
   22aa0:	b	22adc <__flatcc_fb_gen_c_json_printer@@Base+0x738>
   22aa4:	ldrb	r2, [r6, #48]	; 0x30
   22aa8:	ldr	r0, [r4]
   22aac:	ldr	r1, [r6, #4]
   22ab0:	ldr	r3, [r1]
   22ab4:	ldr	r1, [r1, #4]
   22ab8:	str	r8, [sp]
   22abc:	stmib	sp, {r1, r3}
   22ac0:	str	r1, [sp, #12]
   22ac4:	mov	r1, r5
   22ac8:	mov	r3, #0
   22acc:	bl	149f4 <fprintf@plt>
   22ad0:	ldr	r6, [r6]
   22ad4:	cmp	r6, #0
   22ad8:	beq	22b24 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
   22adc:	add	r0, r6, #48	; 0x30
   22ae0:	ldrh	r1, [r6, #56]	; 0x38
   22ae4:	cmp	r1, #4
   22ae8:	beq	22afc <__flatcc_fb_gen_c_json_printer@@Base+0x758>
   22aec:	cmp	r1, #6
   22af0:	beq	22aa4 <__flatcc_fb_gen_c_json_printer@@Base+0x700>
   22af4:	cmp	r1, #5
   22af8:	bne	22bac <__flatcc_fb_gen_c_json_printer@@Base+0x808>
   22afc:	ldrd	r2, [r0]
   22b00:	ldr	r0, [r4]
   22b04:	ldr	r1, [r6, #4]
   22b08:	ldr	r7, [r1]
   22b0c:	ldr	r1, [r1, #4]
   22b10:	str	r8, [sp]
   22b14:	stmib	sp, {r1, r7}
   22b18:	str	r1, [sp, #12]
   22b1c:	mov	r1, r5
   22b20:	b	22acc <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   22b24:	ldr	r3, [r4]
   22b28:	movw	r0, #48272	; 0xbc90
   22b2c:	movt	r0, #4
   22b30:	mov	r1, #59	; 0x3b
   22b34:	mov	r2, #1
   22b38:	bl	1497c <fwrite@plt>
   22b3c:	ldr	r3, [r4]
   22b40:	movw	r0, #52404	; 0xccb4
   22b44:	movt	r0, #4
   22b48:	mov	r1, #3
   22b4c:	mov	r2, #1
   22b50:	bl	1497c <fwrite@plt>
   22b54:	sub	sp, fp, #28
   22b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b5c:	movw	r0, #8368	; 0x20b0
   22b60:	movt	r0, #6
   22b64:	ldr	r0, [r0]
   22b68:	movw	r1, #48495	; 0xbd6f
   22b6c:	movt	r1, #4
   22b70:	str	r1, [sp]
   22b74:	movw	r1, #26331	; 0x66db
   22b78:	movt	r1, #3
   22b7c:	movw	r4, #48409	; 0xbd19
   22b80:	movt	r4, #4
   22b84:	mov	r2, r4
   22b88:	mov	r3, #157	; 0x9d
   22b8c:	bl	149f4 <fprintf@plt>
   22b90:	movw	r0, #30217	; 0x7609
   22b94:	movt	r0, #4
   22b98:	movw	r3, #48553	; 0xbda9
   22b9c:	movt	r3, #4
   22ba0:	mov	r1, r4
   22ba4:	mov	r2, #157	; 0x9d
   22ba8:	bl	14ab4 <__assert_fail@plt>
   22bac:	movw	r0, #8368	; 0x20b0
   22bb0:	movt	r0, #6
   22bb4:	ldr	r0, [r0]
   22bb8:	movw	r1, #48495	; 0xbd6f
   22bbc:	movt	r1, #4
   22bc0:	str	r1, [sp]
   22bc4:	movw	r1, #26331	; 0x66db
   22bc8:	movt	r1, #3
   22bcc:	movw	r4, #48409	; 0xbd19
   22bd0:	movt	r4, #4
   22bd4:	mov	r2, r4
   22bd8:	mov	r3, #134	; 0x86
   22bdc:	bl	149f4 <fprintf@plt>
   22be0:	movw	r0, #30217	; 0x7609
   22be4:	movt	r0, #4
   22be8:	movw	r3, #48553	; 0xbda9
   22bec:	movt	r3, #4
   22bf0:	mov	r1, r4
   22bf4:	mov	r2, #134	; 0x86
   22bf8:	bl	14ab4 <__assert_fail@plt>
   22bfc:	push	{r4, sl, fp, lr}
   22c00:	add	fp, sp, #8
   22c04:	sub	sp, sp, #8
   22c08:	sub	r0, r0, #1
   22c0c:	cmp	r0, #11
   22c10:	movwcc	r1, #52724	; 0xcdf4
   22c14:	movtcc	r1, #4
   22c18:	ldrcc	r0, [r1, r0, lsl #2]
   22c1c:	subcc	sp, fp, #8
   22c20:	popcc	{r4, sl, fp, pc}
   22c24:	movw	r0, #8368	; 0x20b0
   22c28:	movt	r0, #6
   22c2c:	ldr	r0, [r0]
   22c30:	movw	r1, #52924	; 0xcebc
   22c34:	movt	r1, #3
   22c38:	str	r1, [sp]
   22c3c:	movw	r1, #26331	; 0x66db
   22c40:	movt	r1, #3
   22c44:	movw	r4, #52851	; 0xce73
   22c48:	movt	r4, #3
   22c4c:	mov	r2, r4
   22c50:	mov	r3, #96	; 0x60
   22c54:	bl	149f4 <fprintf@plt>
   22c58:	movw	r0, #30217	; 0x7609
   22c5c:	movt	r0, #4
   22c60:	movw	r3, #55276	; 0xd7ec
   22c64:	movt	r3, #3
   22c68:	mov	r1, r4
   22c6c:	mov	r2, #96	; 0x60
   22c70:	bl	14ab4 <__assert_fail@plt>
   22c74:	push	{r4, sl, fp, lr}
   22c78:	add	fp, sp, #8
   22c7c:	sub	sp, sp, #8
   22c80:	sub	r0, r0, #1
   22c84:	cmp	r0, #11
   22c88:	movwcc	r1, #52768	; 0xce20
   22c8c:	movtcc	r1, #4
   22c90:	ldrcc	r0, [r1, r0, lsl #2]
   22c94:	subcc	sp, fp, #8
   22c98:	popcc	{r4, sl, fp, pc}
   22c9c:	movw	r0, #8368	; 0x20b0
   22ca0:	movt	r0, #6
   22ca4:	ldr	r0, [r0]
   22ca8:	movw	r1, #52924	; 0xcebc
   22cac:	movt	r1, #3
   22cb0:	str	r1, [sp]
   22cb4:	movw	r1, #26331	; 0x66db
   22cb8:	movt	r1, #3
   22cbc:	movw	r4, #52851	; 0xce73
   22cc0:	movt	r4, #3
   22cc4:	mov	r2, r4
   22cc8:	mov	r3, #141	; 0x8d
   22ccc:	bl	149f4 <fprintf@plt>
   22cd0:	movw	r0, #30217	; 0x7609
   22cd4:	movt	r0, #4
   22cd8:	movw	r3, #52979	; 0xcef3
   22cdc:	movt	r3, #3
   22ce0:	mov	r1, r4
   22ce4:	mov	r2, #141	; 0x8d
   22ce8:	bl	14ab4 <__assert_fail@plt>
   22cec:	movw	r2, #26588	; 0x67dc
   22cf0:	movt	r2, #3
   22cf4:	cmp	r0, #5
   22cf8:	moveq	r2, r1
   22cfc:	mov	r0, r2
   22d00:	bx	lr
   22d04:	push	{r4, r5, fp, lr}
   22d08:	add	fp, sp, #8
   22d0c:	mov	r4, r1
   22d10:	mov	r5, r0
   22d14:	bl	22d28 <__flatcc_fb_gen_c_json_printer@@Base+0x984>
   22d18:	mov	r0, r5
   22d1c:	mov	r1, r4
   22d20:	pop	{r4, r5, fp, lr}
   22d24:	b	22e00 <__flatcc_fb_gen_c_json_printer@@Base+0xa5c>
   22d28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22d2c:	add	fp, sp, #24
   22d30:	sub	sp, sp, #232	; 0xe8
   22d34:	mov	r5, r1
   22d38:	mov	r4, r0
   22d3c:	add	r6, sp, #8
   22d40:	mov	r0, r6
   22d44:	mov	r1, #0
   22d48:	mov	r2, #220	; 0xdc
   22d4c:	bl	14a0c <memset@plt>
   22d50:	mov	r0, r5
   22d54:	mov	r1, r6
   22d58:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   22d5c:	ldr	r0, [r4, #204]	; 0xcc
   22d60:	movw	r1, #48893	; 0xbefd
   22d64:	movt	r1, #4
   22d68:	mov	r2, r6
   22d6c:	bl	149f4 <fprintf@plt>
   22d70:	ldr	r6, [r5, #20]
   22d74:	cmp	r6, #0
   22d78:	beq	22dc8 <__flatcc_fb_gen_c_json_printer@@Base+0xa24>
   22d7c:	movw	r7, #49007	; 0xbf6f
   22d80:	movt	r7, #4
   22d84:	b	22d94 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
   22d88:	ldr	r6, [r6]
   22d8c:	cmp	r6, #0
   22d90:	beq	22dc8 <__flatcc_fb_gen_c_json_printer@@Base+0xa24>
   22d94:	ldrh	r0, [r6, #24]
   22d98:	cmp	r0, #0
   22d9c:	beq	22d88 <__flatcc_fb_gen_c_json_printer@@Base+0x9e4>
   22da0:	ldr	r0, [r4, #204]	; 0xcc
   22da4:	ldr	r1, [r6, #4]
   22da8:	ldr	r2, [r6, #48]	; 0x30
   22dac:	ldr	r5, [r1]
   22db0:	ldr	r3, [r1, #4]
   22db4:	str	r5, [sp]
   22db8:	str	r3, [sp, #4]
   22dbc:	mov	r1, r7
   22dc0:	bl	149f4 <fprintf@plt>
   22dc4:	b	22d88 <__flatcc_fb_gen_c_json_printer@@Base+0x9e4>
   22dc8:	ldr	r3, [r4, #204]	; 0xcc
   22dcc:	movw	r0, #49088	; 0xbfc0
   22dd0:	movt	r0, #4
   22dd4:	mov	r1, #78	; 0x4e
   22dd8:	mov	r2, #1
   22ddc:	bl	1497c <fwrite@plt>
   22de0:	ldr	r3, [r4, #204]	; 0xcc
   22de4:	movw	r0, #34244	; 0x85c4
   22de8:	movt	r0, #4
   22dec:	mov	r1, #9
   22df0:	mov	r2, #1
   22df4:	bl	1497c <fwrite@plt>
   22df8:	sub	sp, fp, #24
   22dfc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22e00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22e04:	add	fp, sp, #24
   22e08:	sub	sp, sp, #456	; 0x1c8
   22e0c:	mov	r5, r1
   22e10:	mov	r4, r0
   22e14:	add	r6, sp, #232	; 0xe8
   22e18:	mov	r0, r6
   22e1c:	mov	r1, #0
   22e20:	mov	r2, #220	; 0xdc
   22e24:	bl	14a0c <memset@plt>
   22e28:	add	r0, sp, #8
   22e2c:	mov	r1, #0
   22e30:	mov	r2, #220	; 0xdc
   22e34:	bl	14a0c <memset@plt>
   22e38:	mov	r0, r5
   22e3c:	mov	r1, r6
   22e40:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   22e44:	ldr	r0, [r4, #204]	; 0xcc
   22e48:	movw	r1, #49167	; 0xc00f
   22e4c:	movt	r1, #4
   22e50:	mov	r2, r6
   22e54:	bl	149f4 <fprintf@plt>
   22e58:	ldr	r7, [r5, #20]
   22e5c:	cmp	r7, #0
   22e60:	beq	22f08 <__flatcc_fb_gen_c_json_printer@@Base+0xb64>
   22e64:	movw	r5, #49610	; 0xc1ca
   22e68:	movt	r5, #4
   22e6c:	add	r6, sp, #8
   22e70:	movw	r8, #49398	; 0xc0f6
   22e74:	movt	r8, #4
   22e78:	movw	r9, #49298	; 0xc092
   22e7c:	movt	r9, #4
   22e80:	b	22ea0 <__flatcc_fb_gen_c_json_printer@@Base+0xafc>
   22e84:	ldr	r2, [r7, #48]	; 0x30
   22e88:	ldr	r0, [r4, #204]	; 0xcc
   22e8c:	mov	r1, r5
   22e90:	bl	149f4 <fprintf@plt>
   22e94:	ldr	r7, [r7]
   22e98:	cmp	r7, #0
   22e9c:	beq	22f08 <__flatcc_fb_gen_c_json_printer@@Base+0xb64>
   22ea0:	ldrh	r0, [r7, #24]
   22ea4:	cmp	r0, #0
   22ea8:	beq	22e94 <__flatcc_fb_gen_c_json_printer@@Base+0xaf0>
   22eac:	cmp	r0, #10
   22eb0:	beq	22e84 <__flatcc_fb_gen_c_json_printer@@Base+0xae0>
   22eb4:	cmp	r0, #14
   22eb8:	bne	22f40 <__flatcc_fb_gen_c_json_printer@@Base+0xb9c>
   22ebc:	ldr	r0, [r7, #16]
   22ec0:	mov	r1, r6
   22ec4:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   22ec8:	ldr	r0, [r7, #16]
   22ecc:	ldrh	r0, [r0, #8]
   22ed0:	cmp	r0, #1
   22ed4:	beq	22ef0 <__flatcc_fb_gen_c_json_printer@@Base+0xb4c>
   22ed8:	cmp	r0, #0
   22edc:	bne	22f90 <__flatcc_fb_gen_c_json_printer@@Base+0xbec>
   22ee0:	ldr	r2, [r7, #48]	; 0x30
   22ee4:	ldr	r0, [r4, #204]	; 0xcc
   22ee8:	mov	r1, r9
   22eec:	b	22efc <__flatcc_fb_gen_c_json_printer@@Base+0xb58>
   22ef0:	ldr	r2, [r7, #48]	; 0x30
   22ef4:	ldr	r0, [r4, #204]	; 0xcc
   22ef8:	mov	r1, r8
   22efc:	mov	r3, r6
   22f00:	bl	149f4 <fprintf@plt>
   22f04:	b	22e94 <__flatcc_fb_gen_c_json_printer@@Base+0xaf0>
   22f08:	ldr	r3, [r4, #204]	; 0xcc
   22f0c:	movw	r0, #49690	; 0xc21a
   22f10:	movt	r0, #4
   22f14:	mov	r1, #28
   22f18:	mov	r2, #1
   22f1c:	bl	1497c <fwrite@plt>
   22f20:	ldr	r3, [r4, #204]	; 0xcc
   22f24:	movw	r0, #34244	; 0x85c4
   22f28:	movt	r0, #4
   22f2c:	mov	r1, #9
   22f30:	mov	r2, #1
   22f34:	bl	1497c <fwrite@plt>
   22f38:	sub	sp, fp, #24
   22f3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22f40:	movw	r0, #8368	; 0x20b0
   22f44:	movt	r0, #6
   22f48:	ldr	r0, [r0]
   22f4c:	movw	r1, #49500	; 0xc15c
   22f50:	movt	r1, #4
   22f54:	str	r1, [sp]
   22f58:	movw	r1, #26331	; 0x66db
   22f5c:	movt	r1, #3
   22f60:	movw	r4, #48409	; 0xbd19
   22f64:	movt	r4, #4
   22f68:	mov	r2, r4
   22f6c:	mov	r3, #251	; 0xfb
   22f70:	bl	149f4 <fprintf@plt>
   22f74:	movw	r0, #30217	; 0x7609
   22f78:	movt	r0, #4
   22f7c:	movw	r3, #49539	; 0xc183
   22f80:	movt	r3, #4
   22f84:	mov	r1, r4
   22f88:	mov	r2, #251	; 0xfb
   22f8c:	bl	14ab4 <__assert_fail@plt>
   22f90:	movw	r0, #8368	; 0x20b0
   22f94:	movt	r0, #6
   22f98:	ldr	r0, [r0]
   22f9c:	movw	r1, #49500	; 0xc15c
   22fa0:	movt	r1, #4
   22fa4:	str	r1, [sp]
   22fa8:	movw	r1, #26331	; 0x66db
   22fac:	movt	r1, #3
   22fb0:	movw	r4, #48409	; 0xbd19
   22fb4:	movt	r4, #4
   22fb8:	mov	r2, r4
   22fbc:	mov	r3, #240	; 0xf0
   22fc0:	bl	149f4 <fprintf@plt>
   22fc4:	movw	r0, #30217	; 0x7609
   22fc8:	movt	r0, #4
   22fcc:	movw	r3, #49539	; 0xc183
   22fd0:	movt	r3, #4
   22fd4:	mov	r1, r4
   22fd8:	mov	r2, #240	; 0xf0
   22fdc:	bl	14ab4 <__assert_fail@plt>
   22fe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22fe4:	add	fp, sp, #28
   22fe8:	sub	sp, sp, #476	; 0x1dc
   22fec:	mov	r7, r1
   22ff0:	mov	r9, r0
   22ff4:	add	r6, sp, #248	; 0xf8
   22ff8:	mov	r5, #0
   22ffc:	mov	r0, r6
   23000:	mov	r1, #0
   23004:	mov	r2, #220	; 0xdc
   23008:	bl	14a0c <memset@plt>
   2300c:	add	sl, sp, #24
   23010:	mov	r0, sl
   23014:	mov	r1, #0
   23018:	mov	r2, #220	; 0xdc
   2301c:	bl	14a0c <memset@plt>
   23020:	mov	r0, r7
   23024:	mov	r1, r6
   23028:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   2302c:	ldr	r0, [r9, #204]	; 0xcc
   23030:	movw	r1, #49719	; 0xc237
   23034:	movt	r1, #4
   23038:	mov	r2, r6
   2303c:	bl	149f4 <fprintf@plt>
   23040:	ldr	r6, [r7, #20]
   23044:	cmp	r6, #0
   23048:	beq	23170 <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   2304c:	movw	r8, #49798	; 0xc286
   23050:	movt	r8, #4
   23054:	b	230a0 <__flatcc_fb_gen_c_json_printer@@Base+0xcfc>
   23058:	ldr	r0, [r9, #204]	; 0xcc
   2305c:	ldr	r1, [r6, #4]
   23060:	ldrd	r2, [r6, #80]	; 0x50
   23064:	ldr	r7, [r1]
   23068:	ldr	r1, [r1, #4]
   2306c:	stm	sp, {r2, r3}
   23070:	str	r1, [sp, #8]
   23074:	str	r7, [sp, #12]
   23078:	str	r1, [sp, #16]
   2307c:	str	sl, [sp, #20]
   23080:	movw	r1, #49969	; 0xc331
   23084:	movt	r1, #4
   23088:	mov	r2, r5
   2308c:	bl	149f4 <fprintf@plt>
   23090:	add	r5, r5, #1
   23094:	ldr	r6, [r6]
   23098:	cmp	r6, #0
   2309c:	beq	23170 <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   230a0:	ldrb	r0, [r6, #72]	; 0x48
   230a4:	tst	r0, #4
   230a8:	bne	23090 <__flatcc_fb_gen_c_json_printer@@Base+0xcec>
   230ac:	ldrh	r0, [r6, #24]
   230b0:	cmp	r0, #14
   230b4:	beq	230fc <__flatcc_fb_gen_c_json_printer@@Base+0xd58>
   230b8:	cmp	r0, #8
   230bc:	bne	23090 <__flatcc_fb_gen_c_json_printer@@Base+0xcec>
   230c0:	ldr	r0, [r6, #16]
   230c4:	bl	22bfc <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   230c8:	mov	r2, r0
   230cc:	ldr	r0, [r9, #204]	; 0xcc
   230d0:	ldr	r1, [r6, #4]
   230d4:	ldr	r3, [r6, #80]	; 0x50
   230d8:	ldr	r7, [r6, #84]	; 0x54
   230dc:	ldr	r4, [r1]
   230e0:	ldr	r1, [r1, #4]
   230e4:	stm	sp, {r3, r7}
   230e8:	str	r1, [sp, #8]
   230ec:	str	r4, [sp, #12]
   230f0:	str	r1, [sp, #16]
   230f4:	mov	r1, r8
   230f8:	b	23164 <__flatcc_fb_gen_c_json_printer@@Base+0xdc0>
   230fc:	ldr	r0, [r6, #16]
   23100:	mov	r1, sl
   23104:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   23108:	ldr	r0, [r6, #16]
   2310c:	ldrh	r1, [r0, #8]
   23110:	cmp	r1, #1
   23114:	beq	23058 <__flatcc_fb_gen_c_json_printer@@Base+0xcb4>
   23118:	cmp	r1, #3
   2311c:	bne	23090 <__flatcc_fb_gen_c_json_printer@@Base+0xcec>
   23120:	ldr	r0, [r0, #40]	; 0x28
   23124:	bl	22bfc <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   23128:	mov	r2, r0
   2312c:	ldr	r0, [r9, #204]	; 0xcc
   23130:	ldr	r1, [r6, #4]
   23134:	ldr	r4, [r6, #80]	; 0x50
   23138:	ldr	r3, [r6, #84]	; 0x54
   2313c:	ldr	r7, [r1]
   23140:	ldr	r1, [r1, #4]
   23144:	str	r4, [sp]
   23148:	str	r3, [sp, #4]
   2314c:	str	r1, [sp, #8]
   23150:	str	r7, [sp, #12]
   23154:	str	r1, [sp, #16]
   23158:	str	sl, [sp, #20]
   2315c:	movw	r1, #49871	; 0xc2cf
   23160:	movt	r1, #4
   23164:	mov	r3, r5
   23168:	bl	149f4 <fprintf@plt>
   2316c:	b	23090 <__flatcc_fb_gen_c_json_printer@@Base+0xcec>
   23170:	ldr	r3, [r9, #204]	; 0xcc
   23174:	movw	r0, #52404	; 0xccb4
   23178:	movt	r0, #4
   2317c:	mov	r1, #3
   23180:	mov	r2, #1
   23184:	bl	1497c <fwrite@plt>
   23188:	ldr	r0, [r9, #204]	; 0xcc
   2318c:	movw	r1, #50070	; 0xc396
   23190:	movt	r1, #4
   23194:	add	r2, sp, #248	; 0xf8
   23198:	mov	r3, r2
   2319c:	bl	149f4 <fprintf@plt>
   231a0:	sub	sp, fp, #28
   231a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   231a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   231ac:	add	fp, sp, #28
   231b0:	sub	sp, sp, #500	; 0x1f4
   231b4:	mov	r7, r1
   231b8:	str	r0, [sp, #44]	; 0x2c
   231bc:	sub	r5, fp, #256	; 0x100
   231c0:	mov	r0, r5
   231c4:	mov	r1, #0
   231c8:	mov	r2, #220	; 0xdc
   231cc:	bl	14a0c <memset@plt>
   231d0:	add	r0, sp, #48	; 0x30
   231d4:	mov	r1, #0
   231d8:	mov	r2, #220	; 0xdc
   231dc:	bl	14a0c <memset@plt>
   231e0:	mov	r0, r7
   231e4:	mov	r1, r5
   231e8:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   231ec:	mov	sl, r7
   231f0:	ldr	r6, [sl, #96]!	; 0x60
   231f4:	ldr	r4, [sl, #4]
   231f8:	mov	r0, r6
   231fc:	mov	r1, #4
   23200:	bl	148f8 <calloc@plt>
   23204:	mov	r5, r0
   23208:	orrs	r0, r6, r4
   2320c:	beq	23218 <__flatcc_fb_gen_c_json_printer@@Base+0xe74>
   23210:	cmp	r5, #0
   23214:	beq	23980 <__flatcc_fb_gen_c_json_printer@@Base+0x15dc>
   23218:	ldr	r0, [r7, #20]
   2321c:	cmp	r0, #0
   23220:	beq	23238 <__flatcc_fb_gen_c_json_printer@@Base+0xe94>
   23224:	ldr	r1, [r0, #96]	; 0x60
   23228:	str	r0, [r5, r1, lsl #2]
   2322c:	ldr	r0, [r0]
   23230:	cmp	r0, #0
   23234:	bne	23224 <__flatcc_fb_gen_c_json_printer@@Base+0xe80>
   23238:	ldr	r1, [sp, #44]	; 0x2c
   2323c:	ldr	r0, [r1, #204]!	; 0xcc
   23240:	str	r1, [sp, #44]	; 0x2c
   23244:	movw	r1, #50391	; 0xc4d7
   23248:	movt	r1, #4
   2324c:	sub	r2, fp, #256	; 0x100
   23250:	bl	149f4 <fprintf@plt>
   23254:	ldrd	r0, [sl]
   23258:	orrs	r0, r0, r1
   2325c:	beq	237f4 <__flatcc_fb_gen_c_json_printer@@Base+0x1450>
   23260:	add	r0, sl, #16
   23264:	str	r0, [sp, #40]	; 0x28
   23268:	mov	r8, #0
   2326c:	mov	r6, #0
   23270:	b	232b8 <__flatcc_fb_gen_c_json_printer@@Base+0xf14>
   23274:	ldrd	r2, [r7]
   23278:	ldr	r0, [sp, #44]	; 0x2c
   2327c:	ldr	r0, [r0]
   23280:	ldr	r1, [r9, #4]
   23284:	ldr	r7, [r1]
   23288:	ldr	r1, [r1, #4]
   2328c:	stm	sp, {r1, r7}
   23290:	str	r1, [sp, #8]
   23294:	movw	r1, #51090	; 0xc792
   23298:	movt	r1, #4
   2329c:	bl	149f4 <fprintf@plt>
   232a0:	adds	r8, r8, #1
   232a4:	adc	r6, r6, #0
   232a8:	ldrd	r0, [sl]
   232ac:	subs	r0, r8, r0
   232b0:	sbcs	r0, r6, r1
   232b4:	bcs	237f4 <__flatcc_fb_gen_c_json_printer@@Base+0x1450>
   232b8:	ldr	r9, [r5, r8, lsl #2]
   232bc:	cmp	r9, #0
   232c0:	beq	232a0 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   232c4:	ldrb	r0, [r9, #72]	; 0x48
   232c8:	tst	r0, #4
   232cc:	bne	232a0 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   232d0:	ldr	r0, [sp, #44]	; 0x2c
   232d4:	ldr	r3, [r0]
   232d8:	movw	r0, #50497	; 0xc541
   232dc:	movt	r0, #4
   232e0:	mov	r1, #5
   232e4:	mov	r2, #1
   232e8:	bl	1497c <fwrite@plt>
   232ec:	ldrh	r0, [r9, #24]
   232f0:	sub	r0, r0, #7
   232f4:	cmp	r0, #8
   232f8:	bhi	232a0 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   232fc:	add	r4, r9, #48	; 0x30
   23300:	add	r7, r9, #96	; 0x60
   23304:	add	r1, pc, #0
   23308:	ldr	pc, [r1, r0, lsl #2]
   2330c:	andeq	r3, r2, r0, lsr r3
   23310:	ldrdeq	r3, [r2], -ip
   23314:	andeq	r3, r2, r4, ror r2
   23318:	andeq	r3, r2, r8, asr #8
   2331c:	andeq	r3, r2, r0, lsr #5
   23320:	andeq	r3, r2, r0, lsr #5
   23324:	andeq	r3, r2, r0, lsr #5
   23328:	andeq	r3, r2, r4, ror r4
   2332c:	andeq	r3, r2, r0, ror r3
   23330:	ldrh	r0, [r9, #72]	; 0x48
   23334:	tst	r0, #3072	; 0xc00
   23338:	beq	23518 <__flatcc_fb_gen_c_json_printer@@Base+0x1174>
   2333c:	mov	r1, #1
   23340:	bic	r1, r1, r0, lsr #10
   23344:	ldrd	r2, [r7]
   23348:	ldr	r0, [sp, #44]	; 0x2c
   2334c:	ldr	r0, [r0]
   23350:	ldr	r7, [r9, #4]
   23354:	ldm	r7, {r4, r7}
   23358:	str	r7, [sp]
   2335c:	stmib	sp, {r4, r7}
   23360:	str	r1, [sp, #12]
   23364:	movw	r1, #50694	; 0xc606
   23368:	movt	r1, #4
   2336c:	b	2329c <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   23370:	ldr	r0, [r9, #16]
   23374:	add	r4, sp, #48	; 0x30
   23378:	mov	r1, r4
   2337c:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   23380:	ldr	r0, [r9, #16]
   23384:	ldrh	r0, [r0, #8]
   23388:	cmp	r0, #4
   2338c:	bhi	23840 <__flatcc_fb_gen_c_json_printer@@Base+0x149c>
   23390:	add	r1, pc, #0
   23394:	ldr	pc, [r1, r0, lsl #2]
   23398:	andeq	r3, r2, ip, lsr #7
   2339c:	andeq	r3, r2, r4, lsr #11
   233a0:	andeq	r3, r2, r0, asr #16
   233a4:	andeq	r3, r2, ip, lsl r6
   233a8:	andeq	r3, r2, r0, ror r5
   233ac:	ldrd	r2, [r7]
   233b0:	ldr	r0, [sp, #44]	; 0x2c
   233b4:	ldr	r0, [r0]
   233b8:	ldr	r1, [r9, #4]
   233bc:	ldr	r7, [r1]
   233c0:	ldr	r1, [r1, #4]
   233c4:	stm	sp, {r1, r7}
   233c8:	str	r1, [sp, #8]
   233cc:	str	r4, [sp, #12]
   233d0:	movw	r1, #51729	; 0xca11
   233d4:	movt	r1, #4
   233d8:	b	2329c <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   233dc:	ldr	r0, [r9, #16]
   233e0:	bl	22bfc <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   233e4:	mov	ip, r0
   233e8:	ldrh	r0, [r9, #56]	; 0x38
   233ec:	sub	r1, r0, #5
   233f0:	cmp	r1, #2
   233f4:	bcc	234e0 <__flatcc_fb_gen_c_json_printer@@Base+0x113c>
   233f8:	cmp	r0, #3
   233fc:	beq	235e0 <__flatcc_fb_gen_c_json_printer@@Base+0x123c>
   23400:	cmp	r0, #4
   23404:	bne	23890 <__flatcc_fb_gen_c_json_printer@@Base+0x14ec>
   23408:	ldr	r0, [sp, #44]	; 0x2c
   2340c:	ldr	r0, [r0]
   23410:	ldrd	r2, [r7]
   23414:	ldr	r1, [r9, #4]
   23418:	ldr	r7, [r1]
   2341c:	ldr	r1, [r1, #4]
   23420:	ldm	r4, {r4, r9}
   23424:	str	r4, [sp, #24]
   23428:	str	r9, [sp, #28]
   2342c:	stm	sp, {r2, r3}
   23430:	str	r1, [sp, #8]
   23434:	str	r7, [sp, #12]
   23438:	str	r1, [sp, #16]
   2343c:	movw	r1, #50567	; 0xc587
   23440:	movt	r1, #4
   23444:	b	237e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   23448:	ldrd	r2, [r7]
   2344c:	ldr	r0, [sp, #44]	; 0x2c
   23450:	ldr	r0, [r0]
   23454:	ldr	r1, [r9, #4]
   23458:	ldr	r7, [r1]
   2345c:	ldr	r1, [r1, #4]
   23460:	stm	sp, {r1, r7}
   23464:	str	r1, [sp, #8]
   23468:	movw	r1, #51028	; 0xc754
   2346c:	movt	r1, #4
   23470:	b	2329c <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   23474:	ldr	r0, [r9, #16]
   23478:	add	r1, sp, #48	; 0x30
   2347c:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   23480:	ldr	r0, [r9, #16]
   23484:	ldrh	r1, [r0, #8]
   23488:	cmp	r1, #4
   2348c:	bhi	238e0 <__flatcc_fb_gen_c_json_printer@@Base+0x153c>
   23490:	add	r2, pc, #0
   23494:	ldr	pc, [r2, r1, lsl #2]
   23498:	andeq	r3, r2, ip, lsr #9
   2349c:	andeq	r3, r2, ip, lsr #13
   234a0:	andeq	r3, r2, r0, ror #17
   234a4:	andeq	r3, r2, r0, ror #13
   234a8:	andeq	r3, r2, r4, ror r6
   234ac:	ldrd	r2, [r7]
   234b0:	ldr	r0, [sp, #44]	; 0x2c
   234b4:	ldr	r0, [r0]
   234b8:	ldr	r1, [r9, #4]
   234bc:	ldr	r7, [r1]
   234c0:	ldr	r1, [r1, #4]
   234c4:	stm	sp, {r1, r7}
   234c8:	str	r1, [sp, #8]
   234cc:	add	r1, sp, #48	; 0x30
   234d0:	str	r1, [sp, #12]
   234d4:	movw	r1, #51477	; 0xc915
   234d8:	movt	r1, #4
   234dc:	b	2329c <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   234e0:	ldr	r0, [sp, #44]	; 0x2c
   234e4:	ldr	r0, [r0]
   234e8:	ldm	r7, {r1, r3}
   234ec:	ldr	r7, [r9, #4]
   234f0:	ldm	r7, {r2, r7}
   234f4:	ldm	r4, {r4, r9}
   234f8:	str	r4, [sp, #24]
   234fc:	str	r9, [sp, #28]
   23500:	stm	sp, {r1, r3, r7}
   23504:	str	r2, [sp, #12]
   23508:	str	r7, [sp, #16]
   2350c:	movw	r1, #50503	; 0xc547
   23510:	movt	r1, #4
   23514:	b	237e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   23518:	ldr	r0, [r9, #104]	; 0x68
   2351c:	cmp	r0, #0
   23520:	beq	2373c <__flatcc_fb_gen_c_json_printer@@Base+0x1398>
   23524:	add	r1, sp, #48	; 0x30
   23528:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   2352c:	ldrd	r2, [r7]
   23530:	ldr	r0, [sp, #44]	; 0x2c
   23534:	ldr	r0, [r0]
   23538:	ldr	r1, [r9, #4]
   2353c:	ldr	r4, [r9, #104]	; 0x68
   23540:	ldr	r7, [r1]
   23544:	ldr	r1, [r1, #4]
   23548:	ldrh	r4, [r4, #8]
   2354c:	cmp	r4, #0
   23550:	beq	23780 <__flatcc_fb_gen_c_json_printer@@Base+0x13dc>
   23554:	stm	sp, {r1, r7}
   23558:	str	r1, [sp, #8]
   2355c:	add	r1, sp, #48	; 0x30
   23560:	str	r1, [sp, #12]
   23564:	movw	r1, #50867	; 0xc6b3
   23568:	movt	r1, #4
   2356c:	b	2329c <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   23570:	ldrd	r2, [r7]
   23574:	ldr	r0, [sp, #44]	; 0x2c
   23578:	ldr	r0, [r0]
   2357c:	ldr	r1, [r9, #4]
   23580:	ldr	r7, [r1]
   23584:	ldr	r1, [r1, #4]
   23588:	stm	sp, {r1, r7}
   2358c:	str	r1, [sp, #8]
   23590:	str	r4, [sp, #12]
   23594:	str	r4, [sp, #16]
   23598:	movw	r1, #52011	; 0xcb2b
   2359c:	movt	r1, #4
   235a0:	b	2329c <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   235a4:	add	r1, r9, #88	; 0x58
   235a8:	ldrd	r2, [r7]
   235ac:	ldr	r0, [sp, #44]	; 0x2c
   235b0:	ldr	r0, [r0]
   235b4:	ldr	r7, [r9, #4]
   235b8:	mov	ip, r4
   235bc:	ldm	r7, {r4, r7}
   235c0:	ldm	r1, {r1, r9}
   235c4:	add	lr, sp, #16
   235c8:	stm	lr, {r1, r9, ip}
   235cc:	str	r7, [sp]
   235d0:	stmib	sp, {r4, r7}
   235d4:	movw	r1, #51914	; 0xcaca
   235d8:	movt	r1, #4
   235dc:	b	2329c <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   235e0:	ldr	r0, [sp, #44]	; 0x2c
   235e4:	ldr	r0, [r0]
   235e8:	ldrd	r2, [r7]
   235ec:	ldr	r1, [r9, #4]
   235f0:	vldr	d16, [r9, #48]	; 0x30
   235f4:	ldr	r7, [r1]
   235f8:	ldr	r1, [r1, #4]
   235fc:	vstr	d16, [sp, #24]
   23600:	stm	sp, {r2, r3}
   23604:	str	r1, [sp, #8]
   23608:	str	r7, [sp, #12]
   2360c:	str	r1, [sp, #16]
   23610:	movw	r1, #50631	; 0xc5c7
   23614:	movt	r1, #4
   23618:	b	237e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   2361c:	ldr	r0, [r9, #16]
   23620:	bl	22bfc <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   23624:	mov	ip, r0
   23628:	ldr	r0, [sp, #44]	; 0x2c
   2362c:	ldr	r0, [r0]
   23630:	mov	lr, r4
   23634:	ldr	r4, [r7]
   23638:	ldr	r1, [r7, #4]
   2363c:	ldr	r3, [r9, #4]
   23640:	ldr	r7, [r3]
   23644:	ldr	r3, [r3, #4]
   23648:	ldr	r2, [sp, #40]	; 0x28
   2364c:	ldm	r2, {r2, r9}
   23650:	str	r2, [sp, #24]
   23654:	str	r9, [sp, #28]
   23658:	str	lr, [sp, #32]
   2365c:	str	r4, [sp]
   23660:	stmib	sp, {r1, r3, r7}
   23664:	str	r3, [sp, #16]
   23668:	movw	r1, #51818	; 0xca6a
   2366c:	movt	r1, #4
   23670:	b	237e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   23674:	ldrd	r2, [r7]
   23678:	ldr	r0, [sp, #44]	; 0x2c
   2367c:	ldr	r0, [r0]
   23680:	ldr	r1, [r9, #4]
   23684:	ldr	r7, [r1]
   23688:	ldr	r1, [r1, #4]
   2368c:	stm	sp, {r1, r7}
   23690:	str	r1, [sp, #8]
   23694:	add	r1, sp, #48	; 0x30
   23698:	str	r1, [sp, #12]
   2369c:	str	r1, [sp, #16]
   236a0:	movw	r1, #51559	; 0xc967
   236a4:	movt	r1, #4
   236a8:	b	2329c <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   236ac:	ldrd	r2, [r7]
   236b0:	ldr	r0, [sp, #44]	; 0x2c
   236b4:	ldr	r0, [r0]
   236b8:	ldr	r1, [r9, #4]
   236bc:	ldr	r7, [r1]
   236c0:	ldr	r1, [r1, #4]
   236c4:	stm	sp, {r1, r7}
   236c8:	str	r1, [sp, #8]
   236cc:	add	r1, sp, #48	; 0x30
   236d0:	str	r1, [sp, #12]
   236d4:	movw	r1, #51393	; 0xc8c1
   236d8:	movt	r1, #4
   236dc:	b	2329c <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   236e0:	ldr	r0, [r0, #40]	; 0x28
   236e4:	bl	22bfc <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   236e8:	mov	ip, r0
   236ec:	ldrh	r0, [r9, #56]	; 0x38
   236f0:	sub	r1, r0, #5
   236f4:	cmp	r1, #2
   236f8:	bcs	2379c <__flatcc_fb_gen_c_json_printer@@Base+0x13f8>
   236fc:	ldr	r0, [sp, #44]	; 0x2c
   23700:	ldr	r0, [r0]
   23704:	ldm	r7, {r1, r3}
   23708:	ldr	r7, [r9, #4]
   2370c:	ldm	r7, {r2, r7}
   23710:	ldm	r4, {r4, r9}
   23714:	str	r4, [sp, #24]
   23718:	str	r9, [sp, #28]
   2371c:	add	r4, sp, #48	; 0x30
   23720:	str	r4, [sp, #32]
   23724:	stm	sp, {r1, r3, r7}
   23728:	str	r2, [sp, #12]
   2372c:	str	r7, [sp, #16]
   23730:	movw	r1, #51159	; 0xc7d7
   23734:	movt	r1, #4
   23738:	b	237e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   2373c:	ldr	r0, [r9, #16]
   23740:	bl	22bfc <__flatcc_fb_gen_c_json_printer@@Base+0x858>
   23744:	mov	r2, r0
   23748:	ldr	r0, [sp, #44]	; 0x2c
   2374c:	ldr	r0, [r0]
   23750:	ldr	r4, [r7]
   23754:	ldr	r1, [r7, #4]
   23758:	ldr	r3, [r9, #4]
   2375c:	ldr	r7, [r3]
   23760:	ldr	r3, [r3, #4]
   23764:	str	r4, [sp]
   23768:	stmib	sp, {r1, r3, r7}
   2376c:	str	r3, [sp, #16]
   23770:	movw	r1, #50963	; 0xc713
   23774:	movt	r1, #4
   23778:	bl	149f4 <fprintf@plt>
   2377c:	b	232a0 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   23780:	stm	sp, {r1, r7}
   23784:	str	r1, [sp, #8]
   23788:	add	r1, sp, #48	; 0x30
   2378c:	str	r1, [sp, #12]
   23790:	movw	r1, #50773	; 0xc655
   23794:	movt	r1, #4
   23798:	b	2329c <__flatcc_fb_gen_c_json_printer@@Base+0xef8>
   2379c:	cmp	r0, #4
   237a0:	bne	23930 <__flatcc_fb_gen_c_json_printer@@Base+0x158c>
   237a4:	ldr	r0, [sp, #44]	; 0x2c
   237a8:	ldr	r0, [r0]
   237ac:	ldrd	r2, [r7]
   237b0:	ldr	r1, [r9, #4]
   237b4:	ldr	r7, [r1]
   237b8:	ldr	r1, [r1, #4]
   237bc:	ldm	r4, {r4, r9}
   237c0:	str	r4, [sp, #24]
   237c4:	str	r9, [sp, #28]
   237c8:	add	r4, sp, #48	; 0x30
   237cc:	str	r4, [sp, #32]
   237d0:	stm	sp, {r2, r3}
   237d4:	str	r1, [sp, #8]
   237d8:	str	r7, [sp, #12]
   237dc:	str	r1, [sp, #16]
   237e0:	movw	r1, #51248	; 0xc830
   237e4:	movt	r1, #4
   237e8:	mov	r2, ip
   237ec:	bl	149f4 <fprintf@plt>
   237f0:	b	232a0 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   237f4:	ldr	r4, [sp, #44]	; 0x2c
   237f8:	ldr	r3, [r4]
   237fc:	movw	r0, #52403	; 0xccb3
   23800:	movt	r0, #4
   23804:	mov	r1, #4
   23808:	mov	r2, #1
   2380c:	bl	1497c <fwrite@plt>
   23810:	ldr	r0, [r4]
   23814:	movw	r1, #52195	; 0xcbe3
   23818:	movt	r1, #4
   2381c:	sub	r2, fp, #256	; 0x100
   23820:	mov	r3, r2
   23824:	bl	149f4 <fprintf@plt>
   23828:	cmp	r5, #0
   2382c:	beq	23838 <__flatcc_fb_gen_c_json_printer@@Base+0x1494>
   23830:	mov	r0, r5
   23834:	bl	14928 <free@plt>
   23838:	sub	sp, fp, #28
   2383c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23840:	movw	r0, #8368	; 0x20b0
   23844:	movt	r0, #6
   23848:	ldr	r0, [r0]
   2384c:	movw	r1, #52126	; 0xcb9e
   23850:	movt	r1, #4
   23854:	str	r1, [sp]
   23858:	movw	r1, #26331	; 0x66db
   2385c:	movt	r1, #3
   23860:	movw	r4, #48409	; 0xbd19
   23864:	movt	r4, #4
   23868:	mov	r2, r4
   2386c:	movw	r3, #543	; 0x21f
   23870:	bl	149f4 <fprintf@plt>
   23874:	movw	r0, #30217	; 0x7609
   23878:	movt	r0, #4
   2387c:	movw	r3, #50327	; 0xc497
   23880:	movt	r3, #4
   23884:	mov	r1, r4
   23888:	movw	r2, #543	; 0x21f
   2388c:	bl	14ab4 <__assert_fail@plt>
   23890:	movw	r0, #8368	; 0x20b0
   23894:	movt	r0, #6
   23898:	ldr	r0, [r0]
   2389c:	movw	r1, #42741	; 0xa6f5
   238a0:	movt	r1, #4
   238a4:	str	r1, [sp]
   238a8:	movw	r1, #26331	; 0x66db
   238ac:	movt	r1, #3
   238b0:	movw	r4, #48409	; 0xbd19
   238b4:	movt	r4, #4
   238b8:	mov	r2, r4
   238bc:	movw	r3, #406	; 0x196
   238c0:	bl	149f4 <fprintf@plt>
   238c4:	movw	r0, #30217	; 0x7609
   238c8:	movt	r0, #4
   238cc:	movw	r3, #50327	; 0xc497
   238d0:	movt	r3, #4
   238d4:	mov	r1, r4
   238d8:	movw	r2, #406	; 0x196
   238dc:	bl	14ab4 <__assert_fail@plt>
   238e0:	movw	r0, #8368	; 0x20b0
   238e4:	movt	r0, #6
   238e8:	ldr	r0, [r0]
   238ec:	movw	r1, #51667	; 0xc9d3
   238f0:	movt	r1, #4
   238f4:	str	r1, [sp]
   238f8:	movw	r1, #26331	; 0x66db
   238fc:	movt	r1, #3
   23900:	movw	r4, #48409	; 0xbd19
   23904:	movt	r4, #4
   23908:	mov	r2, r4
   2390c:	mov	r3, #504	; 0x1f8
   23910:	bl	149f4 <fprintf@plt>
   23914:	movw	r0, #30217	; 0x7609
   23918:	movt	r0, #4
   2391c:	movw	r3, #50327	; 0xc497
   23920:	movt	r3, #4
   23924:	mov	r1, r4
   23928:	mov	r2, #504	; 0x1f8
   2392c:	bl	14ab4 <__assert_fail@plt>
   23930:	movw	r0, #8368	; 0x20b0
   23934:	movt	r0, #6
   23938:	ldr	r0, [r0]
   2393c:	movw	r1, #51337	; 0xc889
   23940:	movt	r1, #4
   23944:	str	r1, [sp]
   23948:	movw	r1, #26331	; 0x66db
   2394c:	movt	r1, #3
   23950:	movw	r4, #48409	; 0xbd19
   23954:	movt	r4, #4
   23958:	mov	r2, r4
   2395c:	movw	r3, #483	; 0x1e3
   23960:	bl	149f4 <fprintf@plt>
   23964:	movw	r0, #30217	; 0x7609
   23968:	movt	r0, #4
   2396c:	movw	r3, #50327	; 0xc497
   23970:	movt	r3, #4
   23974:	mov	r1, r4
   23978:	movw	r2, #483	; 0x1e3
   2397c:	bl	14ab4 <__assert_fail@plt>
   23980:	movw	r0, #8368	; 0x20b0
   23984:	movt	r0, #6
   23988:	ldr	r0, [r0]
   2398c:	movw	r1, #50285	; 0xc46d
   23990:	movt	r1, #4
   23994:	str	r1, [sp]
   23998:	movw	r1, #26331	; 0x66db
   2399c:	movt	r1, #3
   239a0:	movw	r4, #48409	; 0xbd19
   239a4:	movt	r4, #4
   239a8:	mov	r2, r4
   239ac:	movw	r3, #361	; 0x169
   239b0:	bl	149f4 <fprintf@plt>
   239b4:	movw	r0, #30217	; 0x7609
   239b8:	movt	r0, #4
   239bc:	movw	r3, #50327	; 0xc497
   239c0:	movt	r3, #4
   239c4:	mov	r1, r4
   239c8:	movw	r2, #361	; 0x169
   239cc:	bl	14ab4 <__assert_fail@plt>
   239d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   239d4:	add	fp, sp, #24
   239d8:	sub	sp, sp, #224	; 0xe0
   239dc:	mov	r5, r1
   239e0:	mov	r4, r0
   239e4:	mov	r6, sp
   239e8:	mov	r0, r6
   239ec:	mov	r1, #0
   239f0:	mov	r2, #220	; 0xdc
   239f4:	bl	14a0c <memset@plt>
   239f8:	mov	r0, r5
   239fc:	mov	r1, r6
   23a00:	bl	22730 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   23a04:	ldr	r0, [r4, #204]	; 0xcc
   23a08:	ldr	r1, [r4, #208]	; 0xd0
   23a0c:	ldr	r2, [r1, #160]	; 0xa0
   23a10:	movw	r1, #52408	; 0xccb8
   23a14:	movt	r1, #4
   23a18:	bl	149f4 <fprintf@plt>
   23a1c:	ldr	r0, [r4, #204]	; 0xcc
   23a20:	movw	r1, #52494	; 0xcd0e
   23a24:	movt	r1, #4
   23a28:	mov	r2, r6
   23a2c:	bl	149f4 <fprintf@plt>
   23a30:	ldr	r3, [r4, #204]	; 0xcc
   23a34:	ldr	r0, [r4, #208]	; 0xd0
   23a38:	ldrh	r1, [r0, #16]
   23a3c:	cmp	r1, #2
   23a40:	bne	23a64 <__flatcc_fb_gen_c_json_printer@@Base+0x16c0>
   23a44:	ldrd	r6, [r0, #8]
   23a48:	movw	r1, #52676	; 0xcdc4
   23a4c:	movt	r1, #4
   23a50:	mov	r0, r3
   23a54:	mov	r2, r7
   23a58:	mov	r3, r6
   23a5c:	bl	149f4 <fprintf@plt>
   23a60:	b	23a78 <__flatcc_fb_gen_c_json_printer@@Base+0x16d4>
   23a64:	movw	r0, #52686	; 0xcdce
   23a68:	movt	r0, #4
   23a6c:	mov	r1, #3
   23a70:	mov	r2, #1
   23a74:	bl	1497c <fwrite@plt>
   23a78:	ldr	r3, [r4, #204]	; 0xcc
   23a7c:	movw	r0, #52404	; 0xccb4
   23a80:	movt	r0, #4
   23a84:	mov	r1, #3
   23a88:	mov	r2, #1
   23a8c:	bl	1497c <fwrite@plt>
   23a90:	sub	sp, fp, #24
   23a94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   23a98:	ldr	r1, [r0, #212]	; 0xd4
   23a9c:	ldr	r1, [r1, #140]	; 0x8c
   23aa0:	cmp	r1, #0
   23aa4:	bxeq	lr
   23aa8:	ldr	r3, [r0, #204]	; 0xcc
   23aac:	movw	r0, #50552	; 0xc578
   23ab0:	movt	r0, #3
   23ab4:	mov	r1, #36	; 0x24
   23ab8:	mov	r2, #1
   23abc:	b	1497c <fwrite@plt>

00023ac0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   23ac0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23ac4:	add	fp, sp, #24
   23ac8:	sub	sp, sp, #232	; 0xe8
   23acc:	mov	r8, r3
   23ad0:	mov	r4, r2
   23ad4:	mov	r6, r1
   23ad8:	mov	r7, r0
   23adc:	mov	r5, sp
   23ae0:	mov	r0, r5
   23ae4:	bl	2f328 <flatcc_builder_init@@Base>
   23ae8:	mov	r0, r5
   23aec:	mov	r1, r7
   23af0:	mov	r2, r6
   23af4:	bl	23b38 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   23af8:	ldr	r2, [r8]
   23afc:	mov	r0, r5
   23b00:	mov	r1, r4
   23b04:	bl	321f4 <flatcc_builder_copy_buffer@@Base>
   23b08:	cmp	r0, #0
   23b0c:	movne	r0, r4
   23b10:	blne	23c6c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1ac>
   23b14:	mov	r5, sp
   23b18:	mov	r0, r5
   23b1c:	bl	32110 <flatcc_builder_get_buffer_size@@Base>
   23b20:	str	r0, [r8]
   23b24:	mov	r0, r5
   23b28:	bl	2f4ac <flatcc_builder_clear@@Base>
   23b2c:	mov	r0, r4
   23b30:	sub	sp, fp, #24
   23b34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23b38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23b3c:	add	fp, sp, #24
   23b40:	sub	sp, sp, #48	; 0x30
   23b44:	mov	r5, r2
   23b48:	mov	r7, r1
   23b4c:	mov	r4, r0
   23b50:	ldr	r3, [r2, #60]	; 0x3c
   23b54:	ldr	r2, [r1, #184]	; 0xb8
   23b58:	add	r0, sp, #4
   23b5c:	mov	r1, r5
   23b60:	bl	23ee8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b8>
   23b64:	mvn	r6, #0
   23b68:	cmp	r0, #0
   23b6c:	bne	23c60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   23b70:	ldr	r0, [sp, #8]
   23b74:	cmp	r0, #1
   23b78:	blt	23b94 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd4>
   23b7c:	lsl	r0, r0, #2
   23b80:	bl	14994 <malloc@plt>
   23b84:	cmp	r0, #0
   23b88:	beq	23c58 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x198>
   23b8c:	mov	r8, r0
   23b90:	b	23b98 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd8>
   23b94:	mov	r8, #0
   23b98:	ldr	r0, [r7, #188]	; 0xbc
   23b9c:	cmp	r0, #0
   23ba0:	beq	23bb0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf0>
   23ba4:	mov	r0, r4
   23ba8:	bl	24048 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x318>
   23bac:	b	23bb8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf8>
   23bb0:	mov	r0, r4
   23bb4:	bl	2406c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x33c>
   23bb8:	ldrh	r0, [r5, #16]
   23bbc:	cmp	r0, #2
   23bc0:	bne	23bd8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x118>
   23bc4:	ldrd	r2, [r5, #8]
   23bc8:	mov	r0, r4
   23bcc:	mov	r1, r2
   23bd0:	mov	r2, r3
   23bd4:	bl	24090 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x360>
   23bd8:	ldrh	r0, [r5, #32]
   23bdc:	cmp	r0, #2
   23be0:	bne	23bf8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x138>
   23be4:	ldrd	r2, [r5, #24]
   23be8:	mov	r0, r4
   23bec:	mov	r1, r2
   23bf0:	mov	r2, r3
   23bf4:	bl	240b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x380>
   23bf8:	ldr	r2, [sp, #8]
   23bfc:	ldr	r1, [sp, #20]
   23c00:	mov	r0, r4
   23c04:	mov	r3, r8
   23c08:	bl	240d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a0>
   23c0c:	ldr	r2, [sp, #12]
   23c10:	ldr	r1, [sp, #24]
   23c14:	mov	r0, r4
   23c18:	mov	r3, r8
   23c1c:	bl	2419c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x46c>
   23c20:	ldr	r1, [r5, #52]	; 0x34
   23c24:	mov	r0, r4
   23c28:	mov	r2, r8
   23c2c:	bl	24298 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x568>
   23c30:	mov	r0, r4
   23c34:	bl	242bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x58c>
   23c38:	add	r0, sp, #4
   23c3c:	bl	23ff0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c0>
   23c40:	mov	r6, #0
   23c44:	cmp	r8, #0
   23c48:	beq	23c60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   23c4c:	mov	r0, r8
   23c50:	bl	14928 <free@plt>
   23c54:	b	23c60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   23c58:	add	r0, sp, #4
   23c5c:	bl	23ff0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c0>
   23c60:	mov	r0, r6
   23c64:	sub	sp, fp, #24
   23c68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23c6c:	push	{r4, r5, fp, lr}
   23c70:	add	fp, sp, #8
   23c74:	bl	255a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1878>
   23c78:	bl	255e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18b0>
   23c7c:	mov	r4, r0
   23c80:	bl	25660 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1930>
   23c84:	cmp	r0, #0
   23c88:	popeq	{r4, r5, fp, pc}
   23c8c:	mov	r5, #0
   23c90:	mov	r0, r4
   23c94:	mov	r1, r5
   23c98:	bl	25674 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1944>
   23c9c:	bl	256c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1994>
   23ca0:	bl	25744 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a14>
   23ca4:	add	r5, r5, #1
   23ca8:	mov	r0, r4
   23cac:	bl	25660 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1930>
   23cb0:	cmp	r5, r0
   23cb4:	bcc	23c90 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1d0>
   23cb8:	pop	{r4, r5, fp, pc}

00023cbc <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   23cbc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   23cc0:	add	fp, sp, #24
   23cc4:	sub	sp, sp, #232	; 0xe8
   23cc8:	mov	r5, r2
   23ccc:	mov	r4, r1
   23cd0:	mov	r6, r0
   23cd4:	mov	r7, sp
   23cd8:	mov	r0, r7
   23cdc:	bl	2f328 <flatcc_builder_init@@Base>
   23ce0:	mov	r0, r7
   23ce4:	mov	r1, r6
   23ce8:	mov	r2, r4
   23cec:	bl	23b38 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   23cf0:	mov	r4, #0
   23cf4:	cmp	r0, #0
   23cf8:	bne	23d1c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   23cfc:	mov	r0, sp
   23d00:	mov	r1, r5
   23d04:	bl	32240 <flatcc_builder_finalize_buffer@@Base>
   23d08:	cmp	r0, #0
   23d0c:	beq	23d1c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   23d10:	mov	r5, r0
   23d14:	bl	23c6c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1ac>
   23d18:	mov	r4, r5
   23d1c:	mov	r0, sp
   23d20:	bl	2f4ac <flatcc_builder_clear@@Base>
   23d24:	mov	r0, r4
   23d28:	sub	sp, fp, #24
   23d2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00023d30 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   23d30:	push	{r4, r5, r6, r7, fp, lr}
   23d34:	add	fp, sp, #16
   23d38:	sub	sp, sp, #8
   23d3c:	mov	r5, r1
   23d40:	mov	r6, r0
   23d44:	bl	23df0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc0>
   23d48:	cmp	r0, #0
   23d4c:	beq	23d9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6c>
   23d50:	mov	r4, r0
   23d54:	add	r2, sp, #4
   23d58:	mov	r0, r6
   23d5c:	mov	r1, r5
   23d60:	bl	23cbc <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   23d64:	cmp	r0, #0
   23d68:	beq	23da4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x74>
   23d6c:	mov	r5, r0
   23d70:	ldr	r7, [sp, #4]
   23d74:	mov	r1, #1
   23d78:	mov	r2, r7
   23d7c:	mov	r3, r4
   23d80:	bl	1497c <fwrite@plt>
   23d84:	mov	r6, #0
   23d88:	cmp	r7, r0
   23d8c:	bne	23dc8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x98>
   23d90:	mov	r0, r5
   23d94:	bl	14928 <free@plt>
   23d98:	b	23db4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x84>
   23d9c:	mvn	r6, #0
   23da0:	b	23dbc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8c>
   23da4:	movw	r0, #54895	; 0xd66f
   23da8:	movt	r0, #4
   23dac:	bl	14988 <puts@plt>
   23db0:	mvn	r6, #0
   23db4:	mov	r0, r4
   23db8:	bl	23ec4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x194>
   23dbc:	mov	r0, r6
   23dc0:	sub	sp, fp, #16
   23dc4:	pop	{r4, r5, r6, r7, fp, pc}
   23dc8:	movw	r0, #8368	; 0x20b0
   23dcc:	movt	r0, #6
   23dd0:	ldr	r3, [r0]
   23dd4:	movw	r0, #52812	; 0xce4c
   23dd8:	movt	r0, #4
   23ddc:	mov	r1, #38	; 0x26
   23de0:	mov	r2, #1
   23de4:	bl	1497c <fwrite@plt>
   23de8:	mvn	r6, #0
   23dec:	b	23d90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x60>
   23df0:	push	{r4, r5, r6, sl, fp, lr}
   23df4:	add	fp, sp, #16
   23df8:	sub	sp, sp, #8
   23dfc:	ldr	r2, [r0, #108]	; 0x6c
   23e00:	ldr	r0, [r0, #216]	; 0xd8
   23e04:	movw	r4, #26588	; 0x67dc
   23e08:	movt	r4, #3
   23e0c:	cmp	r0, #0
   23e10:	movne	r4, r0
   23e14:	cmp	r2, #0
   23e18:	beq	23e2c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc>
   23e1c:	movw	r0, #8372	; 0x20b4
   23e20:	movt	r0, #6
   23e24:	ldr	r5, [r0]
   23e28:	b	23e98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x168>
   23e2c:	ldr	r5, [r1, #160]	; 0xa0
   23e30:	mov	r0, r5
   23e34:	bl	149dc <strlen@plt>
   23e38:	mov	r6, r0
   23e3c:	mov	r0, r4
   23e40:	bl	149dc <strlen@plt>
   23e44:	mov	r1, r0
   23e48:	mov	r0, #1
   23e4c:	movw	r2, #25308	; 0x62dc
   23e50:	movt	r2, #3
   23e54:	str	r2, [sp]
   23e58:	str	r0, [sp, #4]
   23e5c:	mov	r0, r4
   23e60:	mov	r2, r5
   23e64:	mov	r3, r6
   23e68:	bl	27bd4 <__flatcc_fb_create_join_path_n@@Base>
   23e6c:	mov	r4, r0
   23e70:	bl	25afc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1dcc>
   23e74:	movw	r1, #25635	; 0x6423
   23e78:	movt	r1, #3
   23e7c:	mov	r0, r4
   23e80:	bl	1491c <fopen@plt>
   23e84:	mov	r5, r0
   23e88:	cmp	r0, #0
   23e8c:	beq	23ea4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x174>
   23e90:	mov	r0, r4
   23e94:	bl	14928 <free@plt>
   23e98:	mov	r0, r5
   23e9c:	sub	sp, fp, #16
   23ea0:	pop	{r4, r5, r6, sl, fp, pc}
   23ea4:	movw	r0, #8368	; 0x20b0
   23ea8:	movt	r0, #6
   23eac:	ldr	r0, [r0]
   23eb0:	movw	r1, #54845	; 0xd63d
   23eb4:	movt	r1, #4
   23eb8:	mov	r2, r4
   23ebc:	bl	149f4 <fprintf@plt>
   23ec0:	b	23e90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160>
   23ec4:	cmp	r0, #0
   23ec8:	bxeq	lr
   23ecc:	movw	r1, #8372	; 0x20b4
   23ed0:	movt	r1, #6
   23ed4:	ldr	r1, [r1]
   23ed8:	cmp	r1, r0
   23edc:	beq	23ee4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   23ee0:	b	14a3c <fclose@plt>
   23ee4:	bx	lr
   23ee8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23eec:	add	fp, sp, #24
   23ef0:	mov	r8, r3
   23ef4:	mov	r4, r0
   23ef8:	mov	r0, #0
   23efc:	vmov.i32	q8, #0	; 0x00000000
   23f00:	str	r0, [r4, #36]	; 0x24
   23f04:	str	r1, [r4, #40]	; 0x28
   23f08:	str	r2, [r4]
   23f0c:	add	r0, r4, #20
   23f10:	vst1.32	{d16-d17}, [r0]
   23f14:	add	r0, r4, #4
   23f18:	vst1.32	{d16-d17}, [r0]
   23f1c:	movw	r1, #17116	; 0x42dc
   23f20:	movt	r1, #2
   23f24:	mov	r0, r3
   23f28:	mov	r2, r4
   23f2c:	bl	27274 <fb_scope_table_visit@@Base>
   23f30:	ldr	r5, [r4, #4]
   23f34:	mov	r0, r5
   23f38:	mov	r1, #8
   23f3c:	bl	148f8 <calloc@plt>
   23f40:	str	r0, [r4, #16]
   23f44:	ldr	r7, [r4, #8]
   23f48:	mov	r0, r7
   23f4c:	mov	r1, #8
   23f50:	bl	148f8 <calloc@plt>
   23f54:	str	r0, [r4, #20]
   23f58:	ldr	r6, [r4, #12]
   23f5c:	mov	r0, r6
   23f60:	bl	14994 <malloc@plt>
   23f64:	ldr	r1, [r4, #16]
   23f68:	ldr	r2, [r4, #20]
   23f6c:	add	r3, r4, #24
   23f70:	stm	r3, {r0, r1, r2}
   23f74:	str	r0, [r4, #36]	; 0x24
   23f78:	cmp	r5, #1
   23f7c:	blt	23f88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x258>
   23f80:	cmp	r1, #0
   23f84:	beq	23fac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x27c>
   23f88:	cmp	r7, #1
   23f8c:	blt	23f9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x26c>
   23f90:	ldr	r1, [r4, #20]
   23f94:	cmp	r1, #0
   23f98:	beq	23fac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x27c>
   23f9c:	cmp	r6, #0
   23fa0:	beq	23fbc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x28c>
   23fa4:	cmp	r0, #0
   23fa8:	bne	23fbc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x28c>
   23fac:	mov	r0, r4
   23fb0:	bl	23ff0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c0>
   23fb4:	mvn	r0, #0
   23fb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23fbc:	movw	r1, #17136	; 0x42f0
   23fc0:	movt	r1, #2
   23fc4:	mov	r0, r8
   23fc8:	mov	r2, r4
   23fcc:	bl	27274 <fb_scope_table_visit@@Base>
   23fd0:	ldr	r1, [r4, #4]
   23fd4:	ldr	r0, [r4, #16]
   23fd8:	bl	24304 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5d4>
   23fdc:	ldr	r1, [r4, #8]
   23fe0:	ldr	r0, [r4, #20]
   23fe4:	bl	24304 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5d4>
   23fe8:	mov	r0, #0
   23fec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23ff0:	push	{r4, sl, fp, lr}
   23ff4:	add	fp, sp, #8
   23ff8:	mov	r4, r0
   23ffc:	ldr	r0, [r0, #16]
   24000:	cmp	r0, #0
   24004:	beq	2400c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2dc>
   24008:	bl	14928 <free@plt>
   2400c:	ldr	r0, [r4, #20]
   24010:	cmp	r0, #0
   24014:	beq	2401c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2ec>
   24018:	bl	14928 <free@plt>
   2401c:	ldr	r0, [r4, #24]
   24020:	cmp	r0, #0
   24024:	beq	2402c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2fc>
   24028:	bl	14928 <free@plt>
   2402c:	vmov.i32	q8, #0	; 0x00000000
   24030:	mov	r0, #28
   24034:	add	r1, r4, #16
   24038:	vst1.32	{d16-d17}, [r4], r0
   2403c:	vst1.32	{d16-d17}, [r4]
   24040:	vst1.32	{d16-d17}, [r1]
   24044:	pop	{r4, sl, fp, pc}
   24048:	push	{r4, sl, fp, lr}
   2404c:	add	fp, sp, #8
   24050:	mov	r4, r0
   24054:	bl	24554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x824>
   24058:	cmp	r0, #0
   2405c:	popne	{r4, sl, fp, pc}
   24060:	mov	r0, r4
   24064:	pop	{r4, sl, fp, lr}
   24068:	b	24568 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x838>
   2406c:	push	{r4, sl, fp, lr}
   24070:	add	fp, sp, #8
   24074:	mov	r4, r0
   24078:	bl	24570 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x840>
   2407c:	cmp	r0, #0
   24080:	popne	{r4, sl, fp, pc}
   24084:	mov	r0, r4
   24088:	pop	{r4, sl, fp, lr}
   2408c:	b	24568 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x838>
   24090:	push	{r4, sl, fp, lr}
   24094:	add	fp, sp, #8
   24098:	mov	r4, r0
   2409c:	bl	31d70 <flatcc_builder_create_string@@Base>
   240a0:	mov	r1, r0
   240a4:	mov	r0, r4
   240a8:	pop	{r4, sl, fp, lr}
   240ac:	b	24584 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x854>
   240b0:	push	{r4, sl, fp, lr}
   240b4:	add	fp, sp, #8
   240b8:	mov	r4, r0
   240bc:	bl	31d70 <flatcc_builder_create_string@@Base>
   240c0:	mov	r1, r0
   240c4:	mov	r0, r4
   240c8:	pop	{r4, sl, fp, lr}
   240cc:	b	245ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x87c>
   240d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   240d4:	add	fp, sp, #28
   240d8:	push	{r3}		; (str r3, [sp, #-4]!)
   240dc:	mov	r9, r2
   240e0:	mov	r6, r0
   240e4:	cmp	r2, #1
   240e8:	blt	24184 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x454>
   240ec:	add	r5, r1, #4
   240f0:	ldr	sl, [sp]
   240f4:	mov	r4, r9
   240f8:	b	24134 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x404>
   240fc:	sub	r0, r8, #1
   24100:	clz	r0, r0
   24104:	lsr	r1, r0, #5
   24108:	mov	r0, r6
   2410c:	bl	248c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb90>
   24110:	ldrh	r1, [r7, #104]	; 0x68
   24114:	mov	r0, r6
   24118:	bl	248fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbcc>
   2411c:	mov	r0, r6
   24120:	bl	24938 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc08>
   24124:	str	r0, [sl], #4
   24128:	add	r5, r5, #8
   2412c:	subs	r4, r4, #1
   24130:	beq	24184 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x454>
   24134:	ldr	r7, [r5, #-4]
   24138:	mov	r0, r6
   2413c:	bl	245d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8a4>
   24140:	ldr	r1, [r5]
   24144:	mov	r0, r6
   24148:	bl	245dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8ac>
   2414c:	mov	r0, r6
   24150:	bl	245fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8cc>
   24154:	mov	r0, r6
   24158:	mov	r1, r7
   2415c:	bl	24600 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8d0>
   24160:	mov	r0, r6
   24164:	bl	24864 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb34>
   24168:	ldrh	r8, [r7, #8]
   2416c:	cmp	r8, #1
   24170:	bne	240fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3cc>
   24174:	ldr	r1, [r7, #112]	; 0x70
   24178:	mov	r0, r6
   2417c:	bl	24884 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb54>
   24180:	b	240fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3cc>
   24184:	mov	r0, r6
   24188:	ldr	r1, [sp]
   2418c:	mov	r2, r9
   24190:	sub	sp, fp, #28
   24194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24198:	b	24988 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc58>
   2419c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   241a0:	add	fp, sp, #28
   241a4:	sub	sp, sp, #20
   241a8:	str	r3, [sp, #12]
   241ac:	mov	sl, r2
   241b0:	str	r1, [sp, #16]
   241b4:	mov	r6, r0
   241b8:	bl	251bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x148c>
   241bc:	cmp	sl, #1
   241c0:	blt	24288 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x558>
   241c4:	mov	r5, #0
   241c8:	b	24220 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4f0>
   241cc:	mov	r0, r6
   241d0:	bl	25250 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1520>
   241d4:	sub	r0, r8, #4
   241d8:	clz	r0, r0
   241dc:	lsr	r1, r0, #5
   241e0:	mov	r0, r6
   241e4:	bl	25270 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1540>
   241e8:	ldm	r9, {r2, r3}
   241ec:	ldr	r0, [r9, #8]
   241f0:	ldr	r1, [r9, #12]
   241f4:	stm	sp, {r0, r1}
   241f8:	mov	r0, r6
   241fc:	bl	24b44 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe14>
   24200:	mov	r1, r0
   24204:	mov	r0, r6
   24208:	bl	252ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x157c>
   2420c:	mov	r0, r6
   24210:	bl	252d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15a4>
   24214:	add	r5, r5, #1
   24218:	cmp	r5, sl
   2421c:	beq	24288 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x558>
   24220:	ldr	r4, [sp, #16]
   24224:	ldr	r7, [r4, r5, lsl #3]!
   24228:	ldrh	r8, [r7, #8]
   2422c:	mov	r0, r6
   24230:	bl	251c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1490>
   24234:	ldr	r1, [r4, #4]
   24238:	mov	r0, r6
   2423c:	bl	251c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1494>
   24240:	mov	r0, r6
   24244:	bl	251e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14b4>
   24248:	add	r9, r7, #40	; 0x28
   2424c:	ldr	r4, [r7, #20]
   24250:	cmp	r4, #0
   24254:	beq	241cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x49c>
   24258:	cmp	r8, #4
   2425c:	mov	r7, #0
   24260:	ldr	r0, [sp, #12]
   24264:	moveq	r7, r0
   24268:	mov	r0, r6
   2426c:	mov	r1, r4
   24270:	mov	r2, r7
   24274:	bl	251e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14b8>
   24278:	ldr	r4, [r4]
   2427c:	cmp	r4, #0
   24280:	bne	24268 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x538>
   24284:	b	241cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x49c>
   24288:	mov	r0, r6
   2428c:	sub	sp, fp, #28
   24290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24294:	b	252f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c4>
   24298:	cmp	r1, #0
   2429c:	bxeq	lr
   242a0:	ldrh	r3, [r1, #8]
   242a4:	cmp	r3, #0
   242a8:	beq	242b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   242ac:	bx	lr
   242b0:	ldr	r1, [r1, #124]	; 0x7c
   242b4:	ldr	r1, [r2, r1, lsl #2]
   242b8:	b	2552c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17fc>
   242bc:	push	{r4, sl, fp, lr}
   242c0:	add	fp, sp, #8
   242c4:	mov	r4, r0
   242c8:	bl	25558 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1828>
   242cc:	mov	r1, r0
   242d0:	mov	r0, r4
   242d4:	pop	{r4, sl, fp, lr}
   242d8:	b	25554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1824>
   242dc:	mov	r2, r0
   242e0:	add	r0, r1, #4
   242e4:	movw	r1, #17224	; 0x4348
   242e8:	movt	r1, #2
   242ec:	b	26c7c <fb_symbol_table_visit@@Base>
   242f0:	mov	r2, r0
   242f4:	add	r0, r1, #4
   242f8:	movw	r1, #17488	; 0x4450
   242fc:	movt	r1, #2
   24300:	b	26c7c <fb_symbol_table_visit@@Base>
   24304:	push	{r4, r5, fp, lr}
   24308:	add	fp, sp, #8
   2430c:	mov	r4, r1
   24310:	mov	r5, r0
   24314:	movw	r3, #17736	; 0x4548
   24318:	movt	r3, #2
   2431c:	mov	r2, #8
   24320:	bl	14a78 <qsort@plt>
   24324:	cmp	r4, #1
   24328:	poplt	{r4, r5, fp, pc}
   2432c:	mov	r0, #0
   24330:	ldr	r1, [r5, r0, lsl #3]
   24334:	str	r0, [r1, #124]	; 0x7c
   24338:	add	r0, r0, #1
   2433c:	cmp	r4, r0
   24340:	bne	24330 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x600>
   24344:	pop	{r4, r5, fp, pc}
   24348:	push	{r4, r5, fp, lr}
   2434c:	add	fp, sp, #8
   24350:	mov	r5, r1
   24354:	mov	r4, r0
   24358:	ldr	r0, [r0, #40]	; 0x28
   2435c:	bl	24400 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d0>
   24360:	cmp	r0, #0
   24364:	popeq	{r4, r5, fp, pc}
   24368:	ldr	r2, [r4]
   2436c:	mov	r1, #1
   24370:	cmp	r2, #0
   24374:	beq	243b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x680>
   24378:	ldr	r0, [r0, #12]
   2437c:	ldr	r0, [r0]
   24380:	cmp	r0, #0
   24384:	beq	243b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x680>
   24388:	mov	r1, #0
   2438c:	ldr	r2, [r0]
   24390:	ldr	r0, [r0, #4]
   24394:	ldr	r0, [r0, #4]
   24398:	add	r0, r1, r0
   2439c:	add	r1, r0, #1
   243a0:	cmp	r2, #0
   243a4:	mov	r0, r2
   243a8:	bne	2438c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x65c>
   243ac:	add	r1, r1, #1
   243b0:	ldr	r0, [r5, #4]
   243b4:	ldr	r0, [r0, #4]
   243b8:	add	r0, r1, r0
   243bc:	ldr	r1, [r4, #12]
   243c0:	add	r0, r0, r1
   243c4:	str	r0, [r4, #12]
   243c8:	ldrh	r0, [r5, #8]
   243cc:	sub	r1, r0, #3
   243d0:	cmp	r1, #2
   243d4:	bcc	243f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6c0>
   243d8:	cmp	r0, #1
   243dc:	bhi	243fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6cc>
   243e0:	ldr	r0, [r4, #4]
   243e4:	add	r0, r0, #1
   243e8:	str	r0, [r4, #4]
   243ec:	pop	{r4, r5, fp, pc}
   243f0:	ldr	r0, [r4, #8]
   243f4:	add	r0, r0, #1
   243f8:	str	r0, [r4, #8]
   243fc:	pop	{r4, r5, fp, pc}
   24400:	push	{r4, sl, fp, lr}
   24404:	add	fp, sp, #8
   24408:	mov	r4, r1
   2440c:	ldrh	r1, [r1, #8]
   24410:	cmp	r1, #4
   24414:	bhi	24430 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x700>
   24418:	ldr	r1, [r4, #16]
   2441c:	add	r0, r0, #172	; 0xac
   24420:	bl	24438 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x708>
   24424:	cmp	r0, #0
   24428:	movne	r0, r4
   2442c:	pop	{r4, sl, fp, pc}
   24430:	mov	r0, #0
   24434:	pop	{r4, sl, fp, pc}
   24438:	push	{fp, lr}
   2443c:	mov	fp, sp
   24440:	bl	26574 <ptr_set_find_item@@Base>
   24444:	cmp	r0, #0
   24448:	movwne	r0, #1
   2444c:	pop	{fp, pc}
   24450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24454:	add	fp, sp, #28
   24458:	sub	sp, sp, #4
   2445c:	mov	r9, r1
   24460:	mov	sl, r0
   24464:	ldr	r0, [r0, #40]	; 0x28
   24468:	bl	24400 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d0>
   2446c:	cmp	r0, #0
   24470:	beq	24540 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x810>
   24474:	ldr	r1, [sl]
   24478:	ldr	r8, [sl, #36]	; 0x24
   2447c:	cmp	r1, #0
   24480:	mov	r6, r8
   24484:	beq	244cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x79c>
   24488:	ldr	r0, [r0, #12]
   2448c:	ldr	r5, [r0]
   24490:	cmp	r5, #0
   24494:	mov	r6, r8
   24498:	beq	244cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x79c>
   2449c:	mov	r4, #46	; 0x2e
   244a0:	mov	r6, r8
   244a4:	ldr	r0, [r5, #4]
   244a8:	ldm	r0, {r1, r7}
   244ac:	mov	r0, r6
   244b0:	mov	r2, r7
   244b4:	bl	14934 <memcpy@plt>
   244b8:	strb	r4, [r6, r7]!
   244bc:	add	r6, r6, #1
   244c0:	ldr	r5, [r5]
   244c4:	cmp	r5, #0
   244c8:	bne	244a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x774>
   244cc:	ldr	r0, [r9, #4]
   244d0:	ldm	r0, {r1, r7}
   244d4:	mov	r0, r6
   244d8:	mov	r2, r7
   244dc:	bl	14934 <memcpy@plt>
   244e0:	mov	r0, #0
   244e4:	strb	r0, [r6, r7]!
   244e8:	add	r0, r6, #1
   244ec:	str	r0, [sl, #36]	; 0x24
   244f0:	ldrh	r0, [r9, #8]
   244f4:	sub	r1, r0, #3
   244f8:	cmp	r1, #2
   244fc:	bcc	24528 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7f8>
   24500:	cmp	r0, #1
   24504:	bhi	24540 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x810>
   24508:	ldr	r0, [sl, #28]
   2450c:	str	r9, [r0]
   24510:	ldr	r0, [sl, #28]
   24514:	str	r8, [r0, #4]
   24518:	add	r0, r0, #8
   2451c:	str	r0, [sl, #28]
   24520:	sub	sp, fp, #28
   24524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24528:	ldr	r0, [sl, #32]
   2452c:	str	r9, [r0]
   24530:	ldr	r0, [sl, #32]
   24534:	str	r8, [r0, #4]
   24538:	add	r0, r0, #8
   2453c:	str	r0, [sl, #32]
   24540:	sub	sp, fp, #28
   24544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24548:	ldr	r1, [r1, #4]
   2454c:	ldr	r0, [r0, #4]
   24550:	b	14910 <strcmp@plt>
   24554:	movw	r1, #52851	; 0xce73
   24558:	movt	r1, #4
   2455c:	mov	r2, #0
   24560:	mov	r3, #2
   24564:	b	2fc44 <flatcc_builder_start_buffer@@Base>
   24568:	mov	r1, #5
   2456c:	b	30930 <flatcc_builder_start_table@@Base>
   24570:	movw	r1, #52851	; 0xce73
   24574:	movt	r1, #4
   24578:	mov	r2, #0
   2457c:	mov	r3, #0
   24580:	b	2fc44 <flatcc_builder_start_buffer@@Base>
   24584:	push	{r4, sl, fp, lr}
   24588:	add	fp, sp, #8
   2458c:	cmp	r1, #0
   24590:	popeq	{r4, sl, fp, pc}
   24594:	mov	r4, r1
   24598:	mov	r1, #2
   2459c:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   245a0:	cmp	r0, #0
   245a4:	strne	r4, [r0]
   245a8:	pop	{r4, sl, fp, pc}
   245ac:	push	{r4, sl, fp, lr}
   245b0:	add	fp, sp, #8
   245b4:	cmp	r1, #0
   245b8:	popeq	{r4, sl, fp, pc}
   245bc:	mov	r4, r1
   245c0:	mov	r1, #3
   245c4:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   245c8:	cmp	r0, #0
   245cc:	strne	r4, [r0]
   245d0:	pop	{r4, sl, fp, pc}
   245d4:	mov	r1, #5
   245d8:	b	30930 <flatcc_builder_start_table@@Base>
   245dc:	push	{r4, sl, fp, lr}
   245e0:	add	fp, sp, #8
   245e4:	mov	r4, r0
   245e8:	bl	31e28 <flatcc_builder_create_string_str@@Base>
   245ec:	mov	r1, r0
   245f0:	mov	r0, r4
   245f4:	pop	{r4, sl, fp, lr}
   245f8:	b	249a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc78>
   245fc:	b	306ec <flatcc_builder_start_offset_vector@@Base>
   24600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24604:	add	fp, sp, #28
   24608:	sub	sp, sp, #4
   2460c:	vpush	{d8}
   24610:	sub	sp, sp, #32
   24614:	str	r1, [sp, #8]
   24618:	ldr	r4, [r1, #20]
   2461c:	cmp	r4, #0
   24620:	beq	24854 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb24>
   24624:	mov	r5, r0
   24628:	mov	r8, #0
   2462c:	b	24664 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x934>
   24630:	ldrh	r1, [r9, #32]
   24634:	mov	r0, r5
   24638:	bl	24a28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcf8>
   2463c:	ldr	r6, [sp, #28]
   24640:	mov	r0, r5
   24644:	ldr	r1, [sp, #24]
   24648:	bl	24aa0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd70>
   2464c:	mov	r0, r5
   24650:	bl	24adc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdac>
   24654:	orr	r8, r8, r6
   24658:	ldr	r4, [r4]
   2465c:	cmp	r4, #0
   24660:	beq	24854 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb24>
   24664:	add	sl, r4, #16
   24668:	tst	r8, #255	; 0xff
   2466c:	mov	r0, #0
   24670:	bne	2467c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x94c>
   24674:	ldrb	r0, [r4, #72]	; 0x48
   24678:	lsr	r0, r0, #7
   2467c:	str	r0, [sp, #28]
   24680:	add	r6, r4, #96	; 0x60
   24684:	add	r0, sl, #8
   24688:	str	r0, [sp, #20]
   2468c:	ldrh	r0, [r4, #72]	; 0x48
   24690:	ubfx	r7, r0, #2, #1
   24694:	ldrh	r1, [r4, #24]
   24698:	ubfx	r0, r0, #8, #1
   2469c:	str	r0, [sp, #16]
   246a0:	cmp	r1, #14
   246a4:	bne	2473c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa0c>
   246a8:	ldr	r0, [sl]
   246ac:	ldrh	r0, [r0, #8]
   246b0:	cmp	r0, #4
   246b4:	bne	2473c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa0c>
   246b8:	mov	r0, r5
   246bc:	bl	249d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xca0>
   246c0:	mov	r0, r5
   246c4:	bl	249d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xca4>
   246c8:	ldr	r0, [r4, #4]
   246cc:	ldm	r0, {r1, r2}
   246d0:	mov	r0, r5
   246d4:	bl	249d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xca8>
   246d8:	mov	r0, r5
   246dc:	movw	r1, #52185	; 0xcbd9
   246e0:	movt	r1, #3
   246e4:	mov	r2, #5
   246e8:	bl	249d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xca8>
   246ec:	mov	r0, r5
   246f0:	bl	249dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcac>
   246f4:	mov	r0, r5
   246f8:	bl	249fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xccc>
   246fc:	ldrh	r0, [r6]
   24700:	mov	r1, #2
   24704:	add	r0, r1, r0, lsl #1
   24708:	uxth	r1, r0
   2470c:	mov	r0, r5
   24710:	bl	24a28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcf8>
   24714:	ldrh	r0, [r6]
   24718:	sub	r0, r0, #1
   2471c:	uxth	r1, r0
   24720:	mov	r0, r5
   24724:	bl	24a64 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd34>
   24728:	mov	r0, r5
   2472c:	mov	r1, r7
   24730:	bl	24aa0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd70>
   24734:	mov	r0, r5
   24738:	bl	24adc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdac>
   2473c:	str	r6, [sp, #12]
   24740:	str	r7, [sp, #24]
   24744:	add	r9, r4, #48	; 0x30
   24748:	mov	r0, r5
   2474c:	bl	249d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xca0>
   24750:	ldr	r0, [r4, #4]
   24754:	ldm	r0, {r1, r2}
   24758:	mov	r0, r5
   2475c:	bl	24afc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdcc>
   24760:	ldrd	r2, [sl]
   24764:	ldr	r0, [sp, #20]
   24768:	ldrd	r0, [r0]
   2476c:	stm	sp, {r0, r1}
   24770:	mov	r0, r5
   24774:	bl	24b44 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe14>
   24778:	mov	r1, r0
   2477c:	mov	r0, r5
   24780:	bl	24b1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdec>
   24784:	ldr	r0, [sp, #8]
   24788:	ldrh	r0, [r0, #8]
   2478c:	cmp	r0, #1
   24790:	beq	24630 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x900>
   24794:	cmp	r0, #0
   24798:	ldr	r6, [sp, #28]
   2479c:	bne	24640 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x910>
   247a0:	ldrh	r0, [r4, #56]	; 0x38
   247a4:	vmov.i32	d8, #0	; 0x00000000
   247a8:	sub	r0, r0, #3
   247ac:	mov	r1, #0
   247b0:	cmp	r0, #3
   247b4:	bhi	247dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xaac>
   247b8:	add	r2, pc, #0
   247bc:	ldr	pc, [r2, r0, lsl #2]
   247c0:	andeq	r4, r2, r4, ror #15
   247c4:	ldrdeq	r4, [r2], -r0
   247c8:	ldrdeq	r4, [r2], -r0
   247cc:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   247d0:	ldr	r2, [r9]
   247d4:	ldr	r1, [r9, #4]
   247d8:	b	247f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xac8>
   247dc:	mov	r2, #0
   247e0:	b	247f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xac8>
   247e4:	mov	r2, #0
   247e8:	vldr	d8, [r9]
   247ec:	mov	r1, #0
   247f0:	b	247f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xac8>
   247f4:	ldrb	r2, [r9]
   247f8:	mov	r0, r5
   247fc:	mov	r3, r1
   24800:	bl	24d50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1020>
   24804:	mov	r0, r5
   24808:	vorr	d0, d8, d8
   2480c:	bl	24d94 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1064>
   24810:	ldr	r7, [sp, #12]
   24814:	ldrh	r1, [r7]
   24818:	mov	r0, r5
   2481c:	bl	24a64 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd34>
   24820:	ldrh	r0, [r7]
   24824:	mov	r1, #4
   24828:	add	r0, r1, r0, lsl #1
   2482c:	uxth	r1, r0
   24830:	mov	r0, r5
   24834:	bl	24a28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcf8>
   24838:	mov	r0, r5
   2483c:	mov	r1, r6
   24840:	bl	24de0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10b0>
   24844:	mov	r0, r5
   24848:	ldr	r1, [sp, #16]
   2484c:	bl	24e1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10ec>
   24850:	b	24640 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x910>
   24854:	sub	sp, fp, #40	; 0x28
   24858:	vpop	{d8}
   2485c:	add	sp, sp, #4
   24860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24864:	push	{r4, sl, fp, lr}
   24868:	add	fp, sp, #8
   2486c:	mov	r4, r0
   24870:	bl	307a0 <flatcc_builder_end_offset_vector@@Base>
   24874:	mov	r1, r0
   24878:	mov	r0, r4
   2487c:	pop	{r4, sl, fp, lr}
   24880:	b	2516c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x143c>
   24884:	push	{r4, sl, fp, lr}
   24888:	add	fp, sp, #8
   2488c:	cmp	r1, #0
   24890:	popeq	{r4, sl, fp, pc}
   24894:	mov	r4, r1
   24898:	mov	r1, #4
   2489c:	mov	r2, #4
   248a0:	mov	r3, #4
   248a4:	bl	3172c <flatcc_builder_table_add@@Base>
   248a8:	cmp	r0, #0
   248ac:	beq	248bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb8c>
   248b0:	mov	r1, r4
   248b4:	pop	{r4, sl, fp, lr}
   248b8:	b	25038 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1308>
   248bc:	pop	{r4, sl, fp, pc}
   248c0:	push	{r4, sl, fp, lr}
   248c4:	add	fp, sp, #8
   248c8:	cmp	r1, #0
   248cc:	popeq	{r4, sl, fp, pc}
   248d0:	mov	r4, r1
   248d4:	mov	r1, #2
   248d8:	mov	r2, #1
   248dc:	mov	r3, #1
   248e0:	bl	3172c <flatcc_builder_table_add@@Base>
   248e4:	cmp	r0, #0
   248e8:	beq	248f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbc8>
   248ec:	mov	r1, r4
   248f0:	pop	{r4, sl, fp, lr}
   248f4:	b	250a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1374>
   248f8:	pop	{r4, sl, fp, pc}
   248fc:	push	{r4, sl, fp, lr}
   24900:	add	fp, sp, #8
   24904:	cmp	r1, #0
   24908:	popeq	{r4, sl, fp, pc}
   2490c:	mov	r4, r1
   24910:	mov	r1, #3
   24914:	mov	r2, #4
   24918:	mov	r3, #4
   2491c:	bl	3172c <flatcc_builder_table_add@@Base>
   24920:	cmp	r0, #0
   24924:	beq	24934 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc04>
   24928:	mov	r1, r4
   2492c:	pop	{r4, sl, fp, lr}
   24930:	b	25038 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1308>
   24934:	pop	{r4, sl, fp, pc}
   24938:	push	{r4, sl, fp, lr}
   2493c:	add	fp, sp, #8
   24940:	mov	r4, r0
   24944:	movw	r1, #54936	; 0xd698
   24948:	movt	r1, #4
   2494c:	mov	r2, #2
   24950:	bl	30fbc <flatcc_builder_check_required@@Base>
   24954:	cmp	r0, #0
   24958:	beq	24968 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc38>
   2495c:	mov	r0, r4
   24960:	pop	{r4, sl, fp, lr}
   24964:	b	3103c <flatcc_builder_end_table@@Base>
   24968:	movw	r0, #53372	; 0xd07c
   2496c:	movt	r0, #4
   24970:	movw	r1, #52997	; 0xcf05
   24974:	movt	r1, #4
   24978:	movw	r3, #53519	; 0xd10f
   2497c:	movt	r3, #4
   24980:	mov	r2, #31
   24984:	bl	14ab4 <__assert_fail@plt>
   24988:	push	{r4, sl, fp, lr}
   2498c:	add	fp, sp, #8
   24990:	mov	r4, r0
   24994:	bl	3074c <flatcc_builder_create_offset_vector@@Base>
   24998:	mov	r1, r0
   2499c:	mov	r0, r4
   249a0:	pop	{r4, sl, fp, lr}
   249a4:	b	25194 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1464>
   249a8:	push	{r4, sl, fp, lr}
   249ac:	add	fp, sp, #8
   249b0:	cmp	r1, #0
   249b4:	popeq	{r4, sl, fp, pc}
   249b8:	mov	r4, r1
   249bc:	mov	r1, #0
   249c0:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   249c4:	cmp	r0, #0
   249c8:	strne	r4, [r0]
   249cc:	pop	{r4, sl, fp, pc}
   249d0:	b	24e58 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1128>
   249d4:	b	30804 <flatcc_builder_start_string@@Base>
   249d8:	b	303bc <flatcc_builder_append_string@@Base>
   249dc:	push	{r4, sl, fp, lr}
   249e0:	add	fp, sp, #8
   249e4:	mov	r4, r0
   249e8:	bl	31e84 <flatcc_builder_end_string@@Base>
   249ec:	mov	r1, r0
   249f0:	mov	r0, r4
   249f4:	pop	{r4, sl, fp, lr}
   249f8:	b	24e60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1130>
   249fc:	push	{r4, sl, fp, lr}
   24a00:	add	fp, sp, #8
   24a04:	mov	r4, r0
   24a08:	mov	r1, #1
   24a0c:	mov	r2, #0
   24a10:	mvn	r3, #0
   24a14:	bl	24e88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1158>
   24a18:	mov	r1, r0
   24a1c:	mov	r0, r4
   24a20:	pop	{r4, sl, fp, lr}
   24a24:	b	24b1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdec>
   24a28:	push	{r4, sl, fp, lr}
   24a2c:	add	fp, sp, #8
   24a30:	cmp	r1, #0
   24a34:	popeq	{r4, sl, fp, pc}
   24a38:	mov	r4, r1
   24a3c:	mov	r1, #3
   24a40:	mov	r2, #2
   24a44:	mov	r3, #2
   24a48:	bl	3172c <flatcc_builder_table_add@@Base>
   24a4c:	cmp	r0, #0
   24a50:	beq	24a60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd30>
   24a54:	mov	r1, r4
   24a58:	pop	{r4, sl, fp, lr}
   24a5c:	b	25080 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1350>
   24a60:	pop	{r4, sl, fp, pc}
   24a64:	push	{r4, sl, fp, lr}
   24a68:	add	fp, sp, #8
   24a6c:	cmp	r1, #0
   24a70:	popeq	{r4, sl, fp, pc}
   24a74:	mov	r4, r1
   24a78:	mov	r1, #2
   24a7c:	mov	r2, #2
   24a80:	mov	r3, #2
   24a84:	bl	3172c <flatcc_builder_table_add@@Base>
   24a88:	cmp	r0, #0
   24a8c:	beq	24a9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd6c>
   24a90:	mov	r1, r4
   24a94:	pop	{r4, sl, fp, lr}
   24a98:	b	25080 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1350>
   24a9c:	pop	{r4, sl, fp, pc}
   24aa0:	push	{r4, sl, fp, lr}
   24aa4:	add	fp, sp, #8
   24aa8:	cmp	r1, #0
   24aac:	popeq	{r4, sl, fp, pc}
   24ab0:	mov	r4, r1
   24ab4:	mov	r1, #6
   24ab8:	mov	r2, #1
   24abc:	mov	r3, #1
   24ac0:	bl	3172c <flatcc_builder_table_add@@Base>
   24ac4:	cmp	r0, #0
   24ac8:	beq	24ad8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xda8>
   24acc:	mov	r1, r4
   24ad0:	pop	{r4, sl, fp, lr}
   24ad4:	b	250a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1374>
   24ad8:	pop	{r4, sl, fp, pc}
   24adc:	push	{r4, sl, fp, lr}
   24ae0:	add	fp, sp, #8
   24ae4:	mov	r4, r0
   24ae8:	bl	250d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13a4>
   24aec:	mov	r1, r0
   24af0:	mov	r0, r4
   24af4:	pop	{r4, sl, fp, lr}
   24af8:	b	250c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1398>
   24afc:	push	{r4, sl, fp, lr}
   24b00:	add	fp, sp, #8
   24b04:	mov	r4, r0
   24b08:	bl	31d70 <flatcc_builder_create_string@@Base>
   24b0c:	mov	r1, r0
   24b10:	mov	r0, r4
   24b14:	pop	{r4, sl, fp, lr}
   24b18:	b	24e60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1130>
   24b1c:	push	{r4, sl, fp, lr}
   24b20:	add	fp, sp, #8
   24b24:	cmp	r1, #0
   24b28:	popeq	{r4, sl, fp, pc}
   24b2c:	mov	r4, r1
   24b30:	mov	r1, #1
   24b34:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   24b38:	cmp	r0, #0
   24b3c:	strne	r4, [r0]
   24b40:	pop	{r4, sl, fp, pc}
   24b44:	push	{r4, r5, r6, r7, fp, lr}
   24b48:	add	fp, sp, #16
   24b4c:	mov	ip, r2
   24b50:	ldrh	r1, [fp, #8]
   24b54:	sub	r6, r1, #2
   24b58:	mov	r2, #0
   24b5c:	mvn	r3, #0
   24b60:	cmp	r6, #13
   24b64:	bhi	24c64 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf34>
   24b68:	mov	r4, #13
   24b6c:	add	r7, pc, #12
   24b70:	mov	lr, #0
   24b74:	mov	r5, #13
   24b78:	mov	r1, #0
   24b7c:	ldr	pc, [r7, r6, lsl #2]
   24b80:	andeq	r4, r2, r4, lsr sp
   24b84:	andeq	r4, r2, r8, lsr sp
   24b88:	andeq	r4, r2, r8, lsr sp
   24b8c:	andeq	r4, r2, r8, lsr sp
   24b90:	andeq	r4, r2, r8, lsr sp
   24b94:	andeq	r4, r2, ip, lsl #24
   24b98:	andeq	r4, r2, r0, lsl ip
   24b9c:	andeq	r4, r2, r4, lsr #26
   24ba0:	andeq	r4, r2, r8, lsr sp
   24ba4:	andeq	r4, r2, r8, lsr sp
   24ba8:	andeq	r4, r2, r8, lsr sp
   24bac:	andeq	r4, r2, r8, lsr sp
   24bb0:			; <UNDEFINED> instruction: 0x00024bb8
   24bb4:	andeq	r4, r2, ip, ror #23
   24bb8:	ldrh	r6, [ip, #8]
   24bbc:	ldr	r1, [ip, #124]	; 0x7c
   24bc0:	mov	r5, #15
   24bc4:	cmp	r6, #2
   24bc8:	bcc	24c74 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf44>
   24bcc:	cmp	r6, #4
   24bd0:	beq	24c70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf40>
   24bd4:	cmp	r6, #3
   24bd8:	bne	24c64 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf34>
   24bdc:	ldr	ip, [ip, #40]	; 0x28
   24be0:	mov	r3, r1
   24be4:	mov	lr, #0
   24be8:	b	24c10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xee0>
   24bec:	ldrh	r1, [ip, #8]
   24bf0:	ldr	r3, [ip, #124]	; 0x7c
   24bf4:	mov	r4, #15
   24bf8:	cmp	r1, #2
   24bfc:	bcc	24d24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xff4>
   24c00:	cmp	r1, #3
   24c04:	bne	24c64 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf34>
   24c08:	ldr	ip, [ip, #40]	; 0x28
   24c0c:	mov	lr, #14
   24c10:	sub	r1, ip, #1
   24c14:	cmp	r1, #10
   24c18:	mov	r4, #0
   24c1c:	bhi	24d10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe0>
   24c20:	add	r7, pc, #0
   24c24:	ldr	pc, [r7, r1, lsl #2]
   24c28:	andeq	r4, r2, r4, asr ip
   24c2c:	andeq	r4, r2, ip, ror ip
   24c30:	andeq	r4, r2, ip, lsl #25
   24c34:	muleq	r2, ip, ip
   24c38:	andeq	r4, r2, ip, lsr #25
   24c3c:			; <UNDEFINED> instruction: 0x00024cbc
   24c40:	andeq	r4, r2, ip, asr #25
   24c44:	ldrdeq	r4, [r2], -ip
   24c48:	andeq	r4, r2, ip, ror #25
   24c4c:	strdeq	r4, [r2], -ip
   24c50:	andeq	r4, r2, ip, lsl #26
   24c54:	mov	r4, #10
   24c58:	cmp	lr, #0
   24c5c:	bne	24d18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   24c60:	b	24d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24c64:	mov	r1, #0
   24c68:	pop	{r4, r5, r6, r7, fp, lr}
   24c6c:	b	24e88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1158>
   24c70:	mov	r5, #16
   24c74:	mov	r3, r1
   24c78:	b	24d34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1004>
   24c7c:	mov	r4, #8
   24c80:	cmp	lr, #0
   24c84:	bne	24d18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   24c88:	b	24d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24c8c:	mov	r4, #6
   24c90:	cmp	lr, #0
   24c94:	bne	24d18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   24c98:	b	24d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24c9c:	mov	r4, #4
   24ca0:	cmp	lr, #0
   24ca4:	bne	24d18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   24ca8:	b	24d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24cac:	mov	r4, #2
   24cb0:	cmp	lr, #0
   24cb4:	bne	24d18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   24cb8:	b	24d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24cbc:	mov	r4, #9
   24cc0:	cmp	lr, #0
   24cc4:	bne	24d18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   24cc8:	b	24d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24ccc:	mov	r4, #7
   24cd0:	cmp	lr, #0
   24cd4:	bne	24d18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   24cd8:	b	24d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24cdc:	mov	r4, #5
   24ce0:	cmp	lr, #0
   24ce4:	bne	24d18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   24ce8:	b	24d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24cec:	mov	r4, #3
   24cf0:	cmp	lr, #0
   24cf4:	bne	24d18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   24cf8:	b	24d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24cfc:	mov	r4, #12
   24d00:	cmp	lr, #0
   24d04:	bne	24d18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfe8>
   24d08:	b	24d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24d0c:	mov	r4, #11
   24d10:	cmp	lr, #0
   24d14:	beq	24d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1010>
   24d18:	cmp	lr, #14
   24d1c:	mov	r5, lr
   24d20:	bne	24d34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1004>
   24d24:	mov	r1, #14
   24d28:	mov	r2, r4
   24d2c:	pop	{r4, r5, r6, r7, fp, lr}
   24d30:	b	24e88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1158>
   24d34:	mov	r1, r5
   24d38:	pop	{r4, r5, r6, r7, fp, lr}
   24d3c:	b	24e88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1158>
   24d40:	mov	r1, r4
   24d44:	mov	r2, #0
   24d48:	pop	{r4, r5, r6, r7, fp, lr}
   24d4c:	b	24e88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1158>
   24d50:	push	{r4, r5, fp, lr}
   24d54:	add	fp, sp, #8
   24d58:	orrs	r1, r2, r3
   24d5c:	popeq	{r4, r5, fp, pc}
   24d60:	mov	r4, r3
   24d64:	mov	r5, r2
   24d68:	mov	r1, #4
   24d6c:	mov	r2, #8
   24d70:	mov	r3, #8
   24d74:	bl	3172c <flatcc_builder_table_add@@Base>
   24d78:	cmp	r0, #0
   24d7c:	beq	24d90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1060>
   24d80:	mov	r2, r5
   24d84:	mov	r3, r4
   24d88:	pop	{r4, r5, fp, lr}
   24d8c:	b	25124 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13f4>
   24d90:	pop	{r4, r5, fp, pc}
   24d94:	push	{fp, lr}
   24d98:	mov	fp, sp
   24d9c:	vpush	{d8}
   24da0:	vcmp.f64	d0, #0.0
   24da4:	vmrs	APSR_nzcv, fpscr
   24da8:	bne	24db4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1084>
   24dac:	vpop	{d8}
   24db0:	pop	{fp, pc}
   24db4:	vmov.f64	d8, d0
   24db8:	mov	r1, #5
   24dbc:	mov	r2, #8
   24dc0:	mov	r3, #8
   24dc4:	bl	3172c <flatcc_builder_table_add@@Base>
   24dc8:	cmp	r0, #0
   24dcc:	beq	24dac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x107c>
   24dd0:	vmov.f64	d0, d8
   24dd4:	vpop	{d8}
   24dd8:	pop	{fp, lr}
   24ddc:	b	25150 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1420>
   24de0:	push	{r4, sl, fp, lr}
   24de4:	add	fp, sp, #8
   24de8:	cmp	r1, #0
   24dec:	popeq	{r4, sl, fp, pc}
   24df0:	mov	r4, r1
   24df4:	mov	r1, #8
   24df8:	mov	r2, #1
   24dfc:	mov	r3, #1
   24e00:	bl	3172c <flatcc_builder_table_add@@Base>
   24e04:	cmp	r0, #0
   24e08:	beq	24e18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10e8>
   24e0c:	mov	r1, r4
   24e10:	pop	{r4, sl, fp, lr}
   24e14:	b	250a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1374>
   24e18:	pop	{r4, sl, fp, pc}
   24e1c:	push	{r4, sl, fp, lr}
   24e20:	add	fp, sp, #8
   24e24:	cmp	r1, #0
   24e28:	popeq	{r4, sl, fp, pc}
   24e2c:	mov	r4, r1
   24e30:	mov	r1, #7
   24e34:	mov	r2, #1
   24e38:	mov	r3, #1
   24e3c:	bl	3172c <flatcc_builder_table_add@@Base>
   24e40:	cmp	r0, #0
   24e44:	beq	24e54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1124>
   24e48:	mov	r1, r4
   24e4c:	pop	{r4, sl, fp, lr}
   24e50:	b	250a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1374>
   24e54:	pop	{r4, sl, fp, pc}
   24e58:	mov	r1, #9
   24e5c:	b	30930 <flatcc_builder_start_table@@Base>
   24e60:	push	{r4, sl, fp, lr}
   24e64:	add	fp, sp, #8
   24e68:	cmp	r1, #0
   24e6c:	popeq	{r4, sl, fp, pc}
   24e70:	mov	r4, r1
   24e74:	mov	r1, #0
   24e78:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   24e7c:	cmp	r0, #0
   24e80:	strne	r4, [r0]
   24e84:	pop	{r4, sl, fp, pc}
   24e88:	push	{r4, r5, r6, r7, fp, lr}
   24e8c:	add	fp, sp, #16
   24e90:	mov	r7, r3
   24e94:	mov	r5, r2
   24e98:	mov	r6, r1
   24e9c:	mov	r4, r0
   24ea0:	bl	24efc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11cc>
   24ea4:	cmp	r0, #0
   24ea8:	bne	24ee8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11b8>
   24eac:	mov	r0, r4
   24eb0:	mov	r1, r7
   24eb4:	bl	24f04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11d4>
   24eb8:	cmp	r0, #0
   24ebc:	bne	24ee8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11b8>
   24ec0:	mov	r0, r4
   24ec4:	mov	r1, r6
   24ec8:	bl	24f50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1220>
   24ecc:	cmp	r0, #0
   24ed0:	bne	24ee8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11b8>
   24ed4:	mov	r0, r4
   24ed8:	mov	r1, r5
   24edc:	bl	24f9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x126c>
   24ee0:	cmp	r0, #0
   24ee4:	beq	24ef0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11c0>
   24ee8:	mov	r0, #0
   24eec:	pop	{r4, r5, r6, r7, fp, pc}
   24ef0:	mov	r0, r4
   24ef4:	pop	{r4, r5, r6, r7, fp, lr}
   24ef8:	b	24fe8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12b8>
   24efc:	mov	r1, #3
   24f00:	b	30930 <flatcc_builder_start_table@@Base>
   24f04:	push	{r4, r5, fp, lr}
   24f08:	add	fp, sp, #8
   24f0c:	mov	r4, #0
   24f10:	cmn	r1, #1
   24f14:	beq	24f3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x120c>
   24f18:	mov	r5, r1
   24f1c:	mov	r1, #2
   24f20:	mov	r2, #4
   24f24:	mov	r3, #4
   24f28:	bl	3172c <flatcc_builder_table_add@@Base>
   24f2c:	cmp	r0, #0
   24f30:	beq	24f44 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1214>
   24f34:	mov	r1, r5
   24f38:	bl	25038 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1308>
   24f3c:	mov	r0, r4
   24f40:	pop	{r4, r5, fp, pc}
   24f44:	mvn	r4, #0
   24f48:	mov	r0, r4
   24f4c:	pop	{r4, r5, fp, pc}
   24f50:	push	{r4, r5, fp, lr}
   24f54:	add	fp, sp, #8
   24f58:	cmp	r1, #0
   24f5c:	beq	24f90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1260>
   24f60:	mov	r5, r1
   24f64:	mov	r4, #0
   24f68:	mov	r1, #0
   24f6c:	mov	r2, #1
   24f70:	mov	r3, #1
   24f74:	bl	3172c <flatcc_builder_table_add@@Base>
   24f78:	cmp	r0, #0
   24f7c:	mvneq	r4, #0
   24f80:	movne	r1, r5
   24f84:	blne	2505c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x132c>
   24f88:	mov	r0, r4
   24f8c:	pop	{r4, r5, fp, pc}
   24f90:	mov	r4, #0
   24f94:	mov	r0, r4
   24f98:	pop	{r4, r5, fp, pc}
   24f9c:	push	{r4, r5, fp, lr}
   24fa0:	add	fp, sp, #8
   24fa4:	mov	r4, #0
   24fa8:	cmp	r1, #0
   24fac:	beq	24fd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12a4>
   24fb0:	mov	r5, r1
   24fb4:	mov	r1, #1
   24fb8:	mov	r2, #1
   24fbc:	mov	r3, #1
   24fc0:	bl	3172c <flatcc_builder_table_add@@Base>
   24fc4:	cmp	r0, #0
   24fc8:	beq	24fdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12ac>
   24fcc:	mov	r1, r5
   24fd0:	bl	2505c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x132c>
   24fd4:	mov	r0, r4
   24fd8:	pop	{r4, r5, fp, pc}
   24fdc:	mvn	r4, #0
   24fe0:	mov	r0, r4
   24fe4:	pop	{r4, r5, fp, pc}
   24fe8:	push	{r4, sl, fp, lr}
   24fec:	add	fp, sp, #8
   24ff0:	mov	r4, r0
   24ff4:	movw	r1, #54928	; 0xd690
   24ff8:	movt	r1, #4
   24ffc:	mov	r2, #0
   25000:	bl	30fbc <flatcc_builder_check_required@@Base>
   25004:	cmp	r0, #0
   25008:	beq	25018 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12e8>
   2500c:	mov	r0, r4
   25010:	pop	{r4, sl, fp, lr}
   25014:	b	3103c <flatcc_builder_end_table@@Base>
   25018:	movw	r0, #52856	; 0xce78
   2501c:	movt	r0, #4
   25020:	movw	r1, #52997	; 0xcf05
   25024:	movt	r1, #4
   25028:	movw	r3, #53092	; 0xcf64
   2502c:	movt	r3, #4
   25030:	mov	r2, #23
   25034:	bl	14ab4 <__assert_fail@plt>
   25038:	push	{r4, r5, fp, lr}
   2503c:	add	fp, sp, #8
   25040:	mov	r4, r1
   25044:	mov	r5, r0
   25048:	mov	r0, r1
   2504c:	bl	25058 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1328>
   25050:	str	r4, [r5]
   25054:	pop	{r4, r5, fp, pc}
   25058:	bx	lr
   2505c:	push	{r4, r5, fp, lr}
   25060:	add	fp, sp, #8
   25064:	mov	r4, r1
   25068:	mov	r5, r0
   2506c:	mov	r0, r1
   25070:	bl	2507c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x134c>
   25074:	strb	r4, [r5]
   25078:	pop	{r4, r5, fp, pc}
   2507c:	bx	lr
   25080:	push	{r4, r5, fp, lr}
   25084:	add	fp, sp, #8
   25088:	mov	r4, r1
   2508c:	mov	r5, r0
   25090:	mov	r0, r1
   25094:	bl	250a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1370>
   25098:	strh	r4, [r5]
   2509c:	pop	{r4, r5, fp, pc}
   250a0:	bx	lr
   250a4:	push	{r4, r5, fp, lr}
   250a8:	add	fp, sp, #8
   250ac:	mov	r4, r1
   250b0:	mov	r5, r0
   250b4:	mov	r0, r1
   250b8:	bl	250c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1394>
   250bc:	strb	r4, [r5]
   250c0:	pop	{r4, r5, fp, pc}
   250c4:	bx	lr
   250c8:	cmp	r1, #0
   250cc:	bxeq	lr
   250d0:	b	3026c <flatcc_builder_offset_vector_push@@Base>
   250d4:	push	{r4, sl, fp, lr}
   250d8:	add	fp, sp, #8
   250dc:	mov	r4, r0
   250e0:	movw	r1, #54930	; 0xd692
   250e4:	movt	r1, #4
   250e8:	mov	r2, #2
   250ec:	bl	30fbc <flatcc_builder_check_required@@Base>
   250f0:	cmp	r0, #0
   250f4:	beq	25104 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13d4>
   250f8:	mov	r0, r4
   250fc:	pop	{r4, sl, fp, lr}
   25100:	b	3103c <flatcc_builder_end_table@@Base>
   25104:	movw	r0, #53159	; 0xcfa7
   25108:	movt	r0, #4
   2510c:	movw	r1, #52997	; 0xcf05
   25110:	movt	r1, #4
   25114:	movw	r3, #53303	; 0xd037
   25118:	movt	r3, #4
   2511c:	mov	r2, #29
   25120:	bl	14ab4 <__assert_fail@plt>
   25124:	push	{r4, r6, r7, sl, fp, lr}
   25128:	add	fp, sp, #16
   2512c:	mov	r1, r3
   25130:	mov	r6, r2
   25134:	mov	r4, r0
   25138:	mov	r0, r2
   2513c:	bl	2514c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x141c>
   25140:	mov	r7, r1
   25144:	strd	r6, [r4]
   25148:	pop	{r4, r6, r7, sl, fp, pc}
   2514c:	bx	lr
   25150:	push	{r4, sl, fp, lr}
   25154:	add	fp, sp, #8
   25158:	mov	r4, r0
   2515c:	bl	25168 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1438>
   25160:	vstr	d0, [r4]
   25164:	pop	{r4, sl, fp, pc}
   25168:	bx	lr
   2516c:	push	{r4, sl, fp, lr}
   25170:	add	fp, sp, #8
   25174:	cmp	r1, #0
   25178:	popeq	{r4, sl, fp, pc}
   2517c:	mov	r4, r1
   25180:	mov	r1, #1
   25184:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   25188:	cmp	r0, #0
   2518c:	strne	r4, [r0]
   25190:	pop	{r4, sl, fp, pc}
   25194:	push	{r4, sl, fp, lr}
   25198:	add	fp, sp, #8
   2519c:	cmp	r1, #0
   251a0:	popeq	{r4, sl, fp, pc}
   251a4:	mov	r4, r1
   251a8:	mov	r1, #0
   251ac:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   251b0:	cmp	r0, #0
   251b4:	strne	r4, [r0]
   251b8:	pop	{r4, sl, fp, pc}
   251bc:	b	306ec <flatcc_builder_start_offset_vector@@Base>
   251c0:	b	25314 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15e4>
   251c4:	push	{r4, sl, fp, lr}
   251c8:	add	fp, sp, #8
   251cc:	mov	r4, r0
   251d0:	bl	31e28 <flatcc_builder_create_string_str@@Base>
   251d4:	mov	r1, r0
   251d8:	mov	r0, r4
   251dc:	pop	{r4, sl, fp, lr}
   251e0:	b	2531c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15ec>
   251e4:	b	306ec <flatcc_builder_start_offset_vector@@Base>
   251e8:	push	{r4, r5, r6, sl, fp, lr}
   251ec:	add	fp, sp, #16
   251f0:	mov	r6, r2
   251f4:	mov	r5, r1
   251f8:	mov	r4, r0
   251fc:	bl	25344 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1614>
   25200:	ldr	r0, [r5, #4]
   25204:	ldm	r0, {r1, r2}
   25208:	mov	r0, r4
   2520c:	bl	25348 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1618>
   25210:	cmp	r6, #0
   25214:	beq	25238 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1508>
   25218:	ldrh	r0, [r5, #24]
   2521c:	cmp	r0, #14
   25220:	bne	25238 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1508>
   25224:	ldr	r0, [r5, #16]
   25228:	ldr	r0, [r0, #124]	; 0x7c
   2522c:	ldr	r1, [r6, r0, lsl #2]
   25230:	mov	r0, r4
   25234:	bl	25368 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1638>
   25238:	ldrd	r2, [r5, #48]	; 0x30
   2523c:	mov	r0, r4
   25240:	bl	25390 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1660>
   25244:	mov	r0, r4
   25248:	pop	{r4, r5, r6, sl, fp, lr}
   2524c:	b	253d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16a4>
   25250:	push	{r4, sl, fp, lr}
   25254:	add	fp, sp, #8
   25258:	mov	r4, r0
   2525c:	bl	307a0 <flatcc_builder_end_offset_vector@@Base>
   25260:	mov	r1, r0
   25264:	mov	r0, r4
   25268:	pop	{r4, sl, fp, lr}
   2526c:	b	25480 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1750>
   25270:	push	{r4, sl, fp, lr}
   25274:	add	fp, sp, #8
   25278:	cmp	r1, #0
   2527c:	popeq	{r4, sl, fp, pc}
   25280:	mov	r4, r1
   25284:	mov	r1, #2
   25288:	mov	r2, #1
   2528c:	mov	r3, #1
   25290:	bl	3172c <flatcc_builder_table_add@@Base>
   25294:	cmp	r0, #0
   25298:	beq	252a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1578>
   2529c:	mov	r1, r4
   252a0:	pop	{r4, sl, fp, lr}
   252a4:	b	250a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1374>
   252a8:	pop	{r4, sl, fp, pc}
   252ac:	push	{r4, sl, fp, lr}
   252b0:	add	fp, sp, #8
   252b4:	cmp	r1, #0
   252b8:	popeq	{r4, sl, fp, pc}
   252bc:	mov	r4, r1
   252c0:	mov	r1, #3
   252c4:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   252c8:	cmp	r0, #0
   252cc:	strne	r4, [r0]
   252d0:	pop	{r4, sl, fp, pc}
   252d4:	push	{r4, sl, fp, lr}
   252d8:	add	fp, sp, #8
   252dc:	mov	r4, r0
   252e0:	bl	254b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1784>
   252e4:	mov	r1, r0
   252e8:	mov	r0, r4
   252ec:	pop	{r4, sl, fp, lr}
   252f0:	b	254a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1778>
   252f4:	push	{r4, sl, fp, lr}
   252f8:	add	fp, sp, #8
   252fc:	mov	r4, r0
   25300:	bl	307a0 <flatcc_builder_end_offset_vector@@Base>
   25304:	mov	r1, r0
   25308:	mov	r0, r4
   2530c:	pop	{r4, sl, fp, lr}
   25310:	b	25504 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17d4>
   25314:	mov	r1, #4
   25318:	b	30930 <flatcc_builder_start_table@@Base>
   2531c:	push	{r4, sl, fp, lr}
   25320:	add	fp, sp, #8
   25324:	cmp	r1, #0
   25328:	popeq	{r4, sl, fp, pc}
   2532c:	mov	r4, r1
   25330:	mov	r1, #0
   25334:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   25338:	cmp	r0, #0
   2533c:	strne	r4, [r0]
   25340:	pop	{r4, sl, fp, pc}
   25344:	b	253f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16c4>
   25348:	push	{r4, sl, fp, lr}
   2534c:	add	fp, sp, #8
   25350:	mov	r4, r0
   25354:	bl	31d70 <flatcc_builder_create_string@@Base>
   25358:	mov	r1, r0
   2535c:	mov	r0, r4
   25360:	pop	{r4, sl, fp, lr}
   25364:	b	253fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16cc>
   25368:	push	{r4, sl, fp, lr}
   2536c:	add	fp, sp, #8
   25370:	cmp	r1, #0
   25374:	popeq	{r4, sl, fp, pc}
   25378:	mov	r4, r1
   2537c:	mov	r1, #2
   25380:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   25384:	cmp	r0, #0
   25388:	strne	r4, [r0]
   2538c:	pop	{r4, sl, fp, pc}
   25390:	push	{r4, r5, fp, lr}
   25394:	add	fp, sp, #8
   25398:	orrs	r1, r2, r3
   2539c:	popeq	{r4, r5, fp, pc}
   253a0:	mov	r4, r3
   253a4:	mov	r5, r2
   253a8:	mov	r1, #1
   253ac:	mov	r2, #8
   253b0:	mov	r3, #8
   253b4:	bl	3172c <flatcc_builder_table_add@@Base>
   253b8:	cmp	r0, #0
   253bc:	beq	253d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16a0>
   253c0:	mov	r2, r5
   253c4:	mov	r3, r4
   253c8:	pop	{r4, r5, fp, lr}
   253cc:	b	25124 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13f4>
   253d0:	pop	{r4, r5, fp, pc}
   253d4:	push	{r4, sl, fp, lr}
   253d8:	add	fp, sp, #8
   253dc:	mov	r4, r0
   253e0:	bl	25430 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1700>
   253e4:	mov	r1, r0
   253e8:	mov	r0, r4
   253ec:	pop	{r4, sl, fp, lr}
   253f0:	b	25424 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16f4>
   253f4:	mov	r1, #3
   253f8:	b	30930 <flatcc_builder_start_table@@Base>
   253fc:	push	{r4, sl, fp, lr}
   25400:	add	fp, sp, #8
   25404:	cmp	r1, #0
   25408:	popeq	{r4, sl, fp, pc}
   2540c:	mov	r4, r1
   25410:	mov	r1, #0
   25414:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   25418:	cmp	r0, #0
   2541c:	strne	r4, [r0]
   25420:	pop	{r4, sl, fp, pc}
   25424:	cmp	r1, #0
   25428:	bxeq	lr
   2542c:	b	3026c <flatcc_builder_offset_vector_push@@Base>
   25430:	push	{r4, sl, fp, lr}
   25434:	add	fp, sp, #8
   25438:	mov	r4, r0
   2543c:	movw	r1, #54942	; 0xd69e
   25440:	movt	r1, #4
   25444:	mov	r2, #1
   25448:	bl	30fbc <flatcc_builder_check_required@@Base>
   2544c:	cmp	r0, #0
   25450:	beq	25460 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1730>
   25454:	mov	r0, r4
   25458:	pop	{r4, sl, fp, lr}
   2545c:	b	3103c <flatcc_builder_end_table@@Base>
   25460:	movw	r0, #53590	; 0xd156
   25464:	movt	r0, #4
   25468:	movw	r1, #52997	; 0xcf05
   2546c:	movt	r1, #4
   25470:	movw	r3, #53740	; 0xd1ec
   25474:	movt	r3, #4
   25478:	mov	r2, #25
   2547c:	bl	14ab4 <__assert_fail@plt>
   25480:	push	{r4, sl, fp, lr}
   25484:	add	fp, sp, #8
   25488:	cmp	r1, #0
   2548c:	popeq	{r4, sl, fp, pc}
   25490:	mov	r4, r1
   25494:	mov	r1, #1
   25498:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   2549c:	cmp	r0, #0
   254a0:	strne	r4, [r0]
   254a4:	pop	{r4, sl, fp, pc}
   254a8:	cmp	r1, #0
   254ac:	bxeq	lr
   254b0:	b	3026c <flatcc_builder_offset_vector_push@@Base>
   254b4:	push	{r4, sl, fp, lr}
   254b8:	add	fp, sp, #8
   254bc:	mov	r4, r0
   254c0:	movw	r1, #54946	; 0xd6a2
   254c4:	movt	r1, #4
   254c8:	mov	r2, #3
   254cc:	bl	30fbc <flatcc_builder_check_required@@Base>
   254d0:	cmp	r0, #0
   254d4:	beq	254e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17b4>
   254d8:	mov	r0, r4
   254dc:	pop	{r4, sl, fp, lr}
   254e0:	b	3103c <flatcc_builder_end_table@@Base>
   254e4:	movw	r0, #53813	; 0xd235
   254e8:	movt	r0, #4
   254ec:	movw	r1, #52997	; 0xcf05
   254f0:	movt	r1, #4
   254f4:	movw	r3, #53954	; 0xd2c2
   254f8:	movt	r3, #4
   254fc:	mov	r2, #27
   25500:	bl	14ab4 <__assert_fail@plt>
   25504:	push	{r4, sl, fp, lr}
   25508:	add	fp, sp, #8
   2550c:	cmp	r1, #0
   25510:	popeq	{r4, sl, fp, pc}
   25514:	mov	r4, r1
   25518:	mov	r1, #1
   2551c:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   25520:	cmp	r0, #0
   25524:	strne	r4, [r0]
   25528:	pop	{r4, sl, fp, pc}
   2552c:	push	{r4, sl, fp, lr}
   25530:	add	fp, sp, #8
   25534:	cmp	r1, #0
   25538:	popeq	{r4, sl, fp, pc}
   2553c:	mov	r4, r1
   25540:	mov	r1, #4
   25544:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   25548:	cmp	r0, #0
   2554c:	strne	r4, [r0]
   25550:	pop	{r4, sl, fp, pc}
   25554:	b	2fdf8 <flatcc_builder_end_buffer@@Base>
   25558:	push	{r4, sl, fp, lr}
   2555c:	add	fp, sp, #8
   25560:	mov	r4, r0
   25564:	movw	r1, #54954	; 0xd6aa
   25568:	movt	r1, #4
   2556c:	mov	r2, #2
   25570:	bl	30fbc <flatcc_builder_check_required@@Base>
   25574:	cmp	r0, #0
   25578:	beq	25588 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1858>
   2557c:	mov	r0, r4
   25580:	pop	{r4, sl, fp, lr}
   25584:	b	3103c <flatcc_builder_end_table@@Base>
   25588:	movw	r0, #54021	; 0xd305
   2558c:	movt	r0, #4
   25590:	movw	r1, #52997	; 0xcf05
   25594:	movt	r1, #4
   25598:	movw	r3, #54168	; 0xd398
   2559c:	movt	r3, #4
   255a0:	mov	r2, #33	; 0x21
   255a4:	bl	14ab4 <__assert_fail@plt>
   255a8:	push	{r4, r5, fp, lr}
   255ac:	add	fp, sp, #8
   255b0:	mov	r5, #0
   255b4:	cmp	r0, #0
   255b8:	beq	255d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18a8>
   255bc:	mov	r4, r0
   255c0:	bl	25748 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a18>
   255c4:	cmp	r0, #0
   255c8:	beq	255d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18a8>
   255cc:	mov	r0, r4
   255d0:	bl	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   255d4:	add	r5, r4, r0
   255d8:	mov	r0, r5
   255dc:	pop	{r4, r5, fp, pc}
   255e0:	push	{r4, r5, fp, lr}
   255e4:	add	fp, sp, #8
   255e8:	cmp	r0, #0
   255ec:	beq	25640 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1910>
   255f0:	mov	r4, r0
   255f4:	bl	25788 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a58>
   255f8:	sub	r5, r4, r0
   255fc:	mov	r0, r5
   25600:	bl	25790 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   25604:	cmp	r0, #6
   25608:	bcc	25634 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1904>
   2560c:	add	r0, r5, #4
   25610:	bl	25790 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   25614:	cmp	r0, #0
   25618:	beq	25634 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1904>
   2561c:	add	r4, r4, r0
   25620:	mov	r0, r4
   25624:	bl	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   25628:	add	r0, r4, r0
   2562c:	add	r0, r0, #4
   25630:	pop	{r4, r5, fp, pc}
   25634:	movw	r0, #54448	; 0xd4b0
   25638:	movt	r0, #4
   2563c:	b	25648 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1918>
   25640:	movw	r0, #54239	; 0xd3df
   25644:	movt	r0, #4
   25648:	movw	r1, #54277	; 0xd405
   2564c:	movt	r1, #4
   25650:	movw	r3, #54371	; 0xd463
   25654:	movt	r3, #4
   25658:	mov	r2, #237	; 0xed
   2565c:	bl	14ab4 <__assert_fail@plt>
   25660:	cmp	r0, #0
   25664:	moveq	r0, #0
   25668:	bxeq	lr
   2566c:	sub	r0, r0, #4
   25670:	b	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   25674:	push	{r4, r5, fp, lr}
   25678:	add	fp, sp, #8
   2567c:	mov	r4, r1
   25680:	mov	r5, r0
   25684:	bl	257a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a70>
   25688:	cmp	r0, r4
   2568c:	bls	256a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1974>
   25690:	add	r4, r5, r4, lsl #2
   25694:	mov	r0, r4
   25698:	bl	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   2569c:	add	r0, r4, r0
   256a0:	pop	{r4, r5, fp, pc}
   256a4:	movw	r0, #54481	; 0xd4d1
   256a8:	movt	r0, #4
   256ac:	movw	r1, #54277	; 0xd405
   256b0:	movt	r1, #4
   256b4:	movw	r3, #54536	; 0xd508
   256b8:	movt	r3, #4
   256bc:	mov	r2, #215	; 0xd7
   256c0:	bl	14ab4 <__assert_fail@plt>
   256c4:	push	{r4, r5, fp, lr}
   256c8:	add	fp, sp, #8
   256cc:	cmp	r0, #0
   256d0:	beq	25724 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19f4>
   256d4:	mov	r4, r0
   256d8:	bl	25788 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a58>
   256dc:	sub	r5, r4, r0
   256e0:	mov	r0, r5
   256e4:	bl	25790 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   256e8:	cmp	r0, #8
   256ec:	bcc	25718 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19e8>
   256f0:	add	r0, r5, #6
   256f4:	bl	25790 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   256f8:	cmp	r0, #0
   256fc:	beq	25718 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19e8>
   25700:	add	r4, r4, r0
   25704:	mov	r0, r4
   25708:	bl	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   2570c:	add	r0, r4, r0
   25710:	add	r0, r0, #4
   25714:	pop	{r4, r5, fp, pc}
   25718:	movw	r0, #54448	; 0xd4b0
   2571c:	movt	r0, #4
   25720:	b	2572c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19fc>
   25724:	movw	r0, #54239	; 0xd3df
   25728:	movt	r0, #4
   2572c:	movw	r1, #54277	; 0xd405
   25730:	movt	r1, #4
   25734:	movw	r3, #54620	; 0xd55c
   25738:	movt	r3, #4
   2573c:	mov	r2, #224	; 0xe0
   25740:	bl	14ab4 <__assert_fail@plt>
   25744:	b	257b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a84>
   25748:	push	{fp, lr}
   2574c:	mov	fp, sp
   25750:	add	r0, r0, #4
   25754:	bl	25778 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a48>
   25758:	movw	r1, #47550	; 0xb9be
   2575c:	movt	r1, #44221	; 0xacbd
   25760:	add	r0, r0, r1
   25764:	clz	r0, r0
   25768:	lsr	r0, r0, #5
   2576c:	pop	{fp, pc}
   25770:	ldr	r0, [r0]
   25774:	b	25784 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a54>
   25778:	ldr	r0, [r0]
   2577c:	b	25780 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a50>
   25780:	bx	lr
   25784:	bx	lr
   25788:	ldr	r0, [r0]
   2578c:	b	25798 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a68>
   25790:	ldrh	r0, [r0]
   25794:	b	2579c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a6c>
   25798:	bx	lr
   2579c:	bx	lr
   257a0:	cmp	r0, #0
   257a4:	moveq	r0, #0
   257a8:	bxeq	lr
   257ac:	sub	r0, r0, #4
   257b0:	b	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   257b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   257b8:	add	fp, sp, #28
   257bc:	sub	sp, sp, #4
   257c0:	mov	r8, r0
   257c4:	bl	25874 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b44>
   257c8:	cmp	r0, #0
   257cc:	beq	2586c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b3c>
   257d0:	mov	r5, r0
   257d4:	lsr	r7, r0, #1
   257d8:	sub	r6, r0, #1
   257dc:	mov	r0, r8
   257e0:	mov	r1, r7
   257e4:	mov	r2, r6
   257e8:	bl	25888 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b58>
   257ec:	sub	r7, r7, #1
   257f0:	cmn	r7, #1
   257f4:	bne	257dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1aac>
   257f8:	cmp	r6, #0
   257fc:	beq	2586c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b3c>
   25800:	mov	r0, #4
   25804:	sub	r7, r0, r5, lsl #2
   25808:	mvn	r0, #3
   2580c:	add	r4, r0, r5, lsl #2
   25810:	sub	r5, r5, #2
   25814:	add	r6, r8, r4
   25818:	mov	r0, r6
   2581c:	bl	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   25820:	add	r9, r0, r4
   25824:	mov	r0, r8
   25828:	bl	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   2582c:	mov	sl, r0
   25830:	mov	r0, r8
   25834:	mov	r1, r9
   25838:	bl	259a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c70>
   2583c:	add	r1, sl, r7
   25840:	mov	r0, r6
   25844:	bl	259a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c70>
   25848:	mov	r0, r8
   2584c:	mov	r1, #0
   25850:	mov	r2, r5
   25854:	bl	25888 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b58>
   25858:	add	r7, r7, #4
   2585c:	sub	r4, r4, #4
   25860:	sub	r5, r5, #1
   25864:	cmn	r5, #1
   25868:	bne	25814 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ae4>
   2586c:	sub	sp, fp, #28
   25870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25874:	cmp	r0, #0
   25878:	moveq	r0, #0
   2587c:	bxeq	lr
   25880:	sub	r0, r0, #4
   25884:	b	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   25888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2588c:	add	fp, sp, #28
   25890:	sub	sp, sp, #4
   25894:	cmp	r2, r1, lsl #1
   25898:	bcc	25998 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c68>
   2589c:	mov	r4, r2
   258a0:	mov	sl, r1
   258a4:	mov	r8, r0
   258a8:	lsl	r7, r1, #1
   258ac:	str	r2, [sp]
   258b0:	cmp	r7, r4
   258b4:	bcs	25900 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bd0>
   258b8:	mov	r0, r8
   258bc:	mov	r1, r7
   258c0:	bl	25a40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d10>
   258c4:	bl	259c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   258c8:	mov	r9, r0
   258cc:	orr	r4, r7, #1
   258d0:	mov	r0, r8
   258d4:	mov	r1, r4
   258d8:	bl	25a40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d10>
   258dc:	bl	259c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   258e0:	mov	r6, r0
   258e4:	bl	25ae4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1db4>
   258e8:	mov	r2, r0
   258ec:	mov	r0, r9
   258f0:	mov	r1, r6
   258f4:	bl	25a90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d60>
   258f8:	cmp	r0, #0
   258fc:	movmi	r7, r4
   25900:	mov	r6, r7
   25904:	mov	r0, r8
   25908:	mov	r1, sl
   2590c:	bl	25a40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d10>
   25910:	bl	259c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   25914:	mov	r7, r0
   25918:	mov	r0, r8
   2591c:	mov	r1, r6
   25920:	bl	25a40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d10>
   25924:	bl	259c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   25928:	mov	r5, r0
   2592c:	bl	25ae4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1db4>
   25930:	mov	r2, r0
   25934:	mov	r0, r7
   25938:	mov	r1, r5
   2593c:	bl	25a90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d60>
   25940:	cmn	r0, #1
   25944:	bgt	25998 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c68>
   25948:	sub	r7, sl, r6
   2594c:	add	r5, r8, r6, lsl #2
   25950:	mov	r0, r5
   25954:	bl	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   25958:	sub	r9, r0, r7, lsl #2
   2595c:	add	r4, r8, sl, lsl #2
   25960:	mov	r0, r4
   25964:	bl	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   25968:	mov	sl, r0
   2596c:	mov	r0, r4
   25970:	mov	r1, r9
   25974:	ldr	r4, [sp]
   25978:	bl	259a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c70>
   2597c:	add	r1, sl, r7, lsl #2
   25980:	mov	r0, r5
   25984:	bl	259a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c70>
   25988:	lsl	r7, r6, #1
   2598c:	cmp	r4, r6, lsl #1
   25990:	mov	sl, r6
   25994:	bcs	258b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b80>
   25998:	sub	sp, fp, #28
   2599c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   259a0:	push	{r4, r5, fp, lr}
   259a4:	add	fp, sp, #8
   259a8:	mov	r4, r1
   259ac:	mov	r5, r0
   259b0:	mov	r0, r1
   259b4:	bl	25af8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1dc8>
   259b8:	str	r4, [r5]
   259bc:	pop	{r4, r5, fp, pc}
   259c0:	push	{r4, r5, fp, lr}
   259c4:	add	fp, sp, #8
   259c8:	cmp	r0, #0
   259cc:	beq	25a20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cf0>
   259d0:	mov	r4, r0
   259d4:	bl	25788 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a58>
   259d8:	sub	r5, r4, r0
   259dc:	mov	r0, r5
   259e0:	bl	25790 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   259e4:	cmp	r0, #6
   259e8:	bcc	25a14 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ce4>
   259ec:	add	r0, r5, #4
   259f0:	bl	25790 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a60>
   259f4:	cmp	r0, #0
   259f8:	beq	25a14 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ce4>
   259fc:	add	r4, r4, r0
   25a00:	mov	r0, r4
   25a04:	bl	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   25a08:	add	r0, r4, r0
   25a0c:	add	r0, r0, #4
   25a10:	pop	{r4, r5, fp, pc}
   25a14:	movw	r0, #54448	; 0xd4b0
   25a18:	movt	r0, #4
   25a1c:	b	25a28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cf8>
   25a20:	movw	r0, #54239	; 0xd3df
   25a24:	movt	r0, #4
   25a28:	movw	r1, #54277	; 0xd405
   25a2c:	movt	r1, #4
   25a30:	movw	r3, #54695	; 0xd5a7
   25a34:	movt	r3, #4
   25a38:	mov	r2, #195	; 0xc3
   25a3c:	bl	14ab4 <__assert_fail@plt>
   25a40:	push	{r4, r5, fp, lr}
   25a44:	add	fp, sp, #8
   25a48:	mov	r4, r1
   25a4c:	mov	r5, r0
   25a50:	bl	257a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a70>
   25a54:	cmp	r0, r4
   25a58:	bls	25a70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d40>
   25a5c:	add	r4, r5, r4, lsl #2
   25a60:	mov	r0, r4
   25a64:	bl	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   25a68:	add	r0, r4, r0
   25a6c:	pop	{r4, r5, fp, pc}
   25a70:	movw	r0, #54481	; 0xd4d1
   25a74:	movt	r0, #4
   25a78:	movw	r1, #54277	; 0xd405
   25a7c:	movt	r1, #4
   25a80:	movw	r3, #54764	; 0xd5ec
   25a84:	movt	r3, #4
   25a88:	mov	r2, #192	; 0xc0
   25a8c:	bl	14ab4 <__assert_fail@plt>
   25a90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25a94:	add	fp, sp, #24
   25a98:	mov	r4, r2
   25a9c:	mov	r8, r1
   25aa0:	mov	r6, r0
   25aa4:	bl	25ae4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1db4>
   25aa8:	mov	r7, r0
   25aac:	mov	r5, #0
   25ab0:	cmp	r0, r4
   25ab4:	movwhi	r5, #1
   25ab8:	mov	r2, r4
   25abc:	movcc	r2, r0
   25ac0:	mov	r0, r6
   25ac4:	mov	r1, r8
   25ac8:	bl	14a9c <strncmp@plt>
   25acc:	cmp	r0, #0
   25ad0:	mvneq	r0, #0
   25ad4:	movne	r5, r0
   25ad8:	cmp	r7, r4
   25adc:	movcs	r0, r5
   25ae0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25ae4:	cmp	r0, #0
   25ae8:	moveq	r0, #0
   25aec:	bxeq	lr
   25af0:	sub	r0, r0, #4
   25af4:	b	25770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a40>
   25af8:	bx	lr
   25afc:	cmp	r0, #0
   25b00:	bxne	lr
   25b04:	push	{fp, lr}
   25b08:	mov	fp, sp
   25b0c:	movw	r0, #8368	; 0x20b0
   25b10:	movt	r0, #6
   25b14:	ldr	r3, [r0]
   25b18:	movw	r0, #25395	; 0x6333
   25b1c:	movt	r0, #3
   25b20:	mov	r1, #34	; 0x22
   25b24:	mov	r2, #1
   25b28:	bl	1497c <fwrite@plt>
   25b2c:	mov	r0, #1
   25b30:	bl	149c4 <exit@plt>

00025b34 <str_set_clear@@Base>:
   25b34:	b	25b38 <str_set_clear@@Base+0x4>
   25b38:	push	{r4, sl, fp, lr}
   25b3c:	add	fp, sp, #8
   25b40:	mov	r4, r0
   25b44:	ldr	r0, [r0]
   25b48:	cmp	r0, #0
   25b4c:	beq	25b54 <str_set_clear@@Base+0x20>
   25b50:	bl	14928 <free@plt>
   25b54:	vmov.i32	q8, #0	; 0x00000000
   25b58:	vst1.32	{d16-d17}, [r4]
   25b5c:	pop	{r4, sl, fp, pc}

00025b60 <str_set_destroy@@Base>:
   25b60:	push	{r4, sl, fp, lr}
   25b64:	add	fp, sp, #8
   25b68:	mov	r4, r0
   25b6c:	cmp	r1, #0
   25b70:	movne	r0, r4
   25b74:	blne	25b84 <str_set_destroy@@Base+0x24>
   25b78:	mov	r0, r4
   25b7c:	pop	{r4, sl, fp, lr}
   25b80:	b	25b38 <str_set_clear@@Base+0x4>
   25b84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25b88:	add	fp, sp, #24
   25b8c:	mov	r6, r0
   25b90:	ldr	r0, [r0, #12]
   25b94:	cmp	r0, #0
   25b98:	beq	25bdc <str_set_destroy@@Base+0x7c>
   25b9c:	mov	r8, r2
   25ba0:	mov	r5, r1
   25ba4:	ldr	r7, [r6]
   25ba8:	mov	r4, #0
   25bac:	b	25bc0 <str_set_destroy@@Base+0x60>
   25bb0:	ldr	r0, [r6, #12]
   25bb4:	add	r4, r4, #1
   25bb8:	cmp	r4, r0
   25bbc:	bcs	25bdc <str_set_destroy@@Base+0x7c>
   25bc0:	ldr	r1, [r7, r4, lsl #2]
   25bc4:	orr	r0, r1, #2
   25bc8:	cmp	r0, #2
   25bcc:	beq	25bb0 <str_set_destroy@@Base+0x50>
   25bd0:	mov	r0, r8
   25bd4:	blx	r5
   25bd8:	b	25bb0 <str_set_destroy@@Base+0x50>
   25bdc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025be0 <str_set_init@@Base>:
   25be0:	b	25be4 <str_set_init@@Base+0x4>
   25be4:	push	{r4, r5, fp, lr}
   25be8:	add	fp, sp, #8
   25bec:	mov	r4, r0
   25bf0:	mov	r2, #4
   25bf4:	mov	r0, #179	; 0xb3
   25bf8:	mov	r5, r2
   25bfc:	mul	r3, r2, r0
   25c00:	lsl	r2, r2, #1
   25c04:	cmp	r1, r3, lsr #8
   25c08:	bhi	25bf8 <str_set_init@@Base+0x18>
   25c0c:	mov	r0, r5
   25c10:	mov	r1, #4
   25c14:	bl	148f8 <calloc@plt>
   25c18:	str	r0, [r4]
   25c1c:	cmp	r0, #0
   25c20:	mvneq	r0, #0
   25c24:	movne	r0, #0
   25c28:	strne	r0, [r4, #4]
   25c2c:	strne	r0, [r4, #8]
   25c30:	strne	r5, [r4, #12]
   25c34:	pop	{r4, r5, fp, pc}

00025c38 <str_set_resize@@Base>:
   25c38:	b	25c3c <str_set_resize@@Base+0x4>
   25c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25c40:	add	fp, sp, #28
   25c44:	sub	sp, sp, #28
   25c48:	mov	r4, r0
   25c4c:	ldr	r5, [r0]
   25c50:	ldr	r0, [r0, #8]
   25c54:	cmp	r0, r1
   25c58:	movhi	r1, r0
   25c5c:	add	r8, sp, #8
   25c60:	mov	r0, r8
   25c64:	bl	25be4 <str_set_init@@Base+0x4>
   25c68:	mov	r1, r0
   25c6c:	mvn	r0, #0
   25c70:	cmp	r1, #0
   25c74:	beq	25c80 <str_set_resize@@Base+0x48>
   25c78:	sub	sp, fp, #28
   25c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25c80:	ldr	r0, [r4, #12]
   25c84:	cmp	r0, #0
   25c88:	beq	25ce4 <str_set_resize@@Base+0xac>
   25c8c:	mov	r6, #0
   25c90:	mov	sl, #3
   25c94:	add	r9, sp, #8
   25c98:	b	25cac <str_set_resize@@Base+0x74>
   25c9c:	ldr	r0, [r4, #12]
   25ca0:	add	r6, r6, #1
   25ca4:	cmp	r6, r0
   25ca8:	bcs	25ce4 <str_set_resize@@Base+0xac>
   25cac:	ldr	r7, [r5, r6, lsl #2]
   25cb0:	orr	r0, r7, #2
   25cb4:	cmp	r0, #2
   25cb8:	beq	25c9c <str_set_resize@@Base+0x64>
   25cbc:	mov	r0, r7
   25cc0:	bl	25f28 <str_set_insert_item@@Base+0x48>
   25cc4:	bl	25f2c <str_set_insert_item@@Base+0x4c>
   25cc8:	mov	r2, r0
   25ccc:	str	sl, [sp]
   25cd0:	mov	r0, r9
   25cd4:	mov	r1, r7
   25cd8:	mov	r3, r7
   25cdc:	bl	25d04 <str_set_insert@@Base+0x4>
   25ce0:	b	25c9c <str_set_resize@@Base+0x64>
   25ce4:	mov	r0, r4
   25ce8:	bl	25b38 <str_set_clear@@Base+0x4>
   25cec:	vld1.64	{d16-d17}, [r8]
   25cf0:	vst1.32	{d16-d17}, [r4]
   25cf4:	mov	r0, #0
   25cf8:	sub	sp, fp, #28
   25cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025d00 <str_set_insert@@Base>:
   25d00:	b	25d04 <str_set_insert@@Base+0x4>
   25d04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25d08:	add	fp, sp, #28
   25d0c:	sub	sp, sp, #12
   25d10:	str	r2, [sp, #8]
   25d14:	cmp	r3, #2
   25d18:	beq	25e58 <str_set_insert@@Base+0x158>
   25d1c:	mov	r9, r3
   25d20:	cmp	r3, #1
   25d24:	beq	25e78 <str_set_insert@@Base+0x178>
   25d28:	cmp	r9, #0
   25d2c:	beq	25e98 <str_set_insert@@Base+0x198>
   25d30:	mov	r7, r1
   25d34:	mov	r5, r0
   25d38:	ldr	r0, [r0, #8]
   25d3c:	ldr	r1, [r5, #12]
   25d40:	mov	r2, #179	; 0xb3
   25d44:	mul	r1, r1, r2
   25d48:	cmp	r0, r1, lsr #8
   25d4c:	bcc	25d64 <str_set_insert@@Base+0x64>
   25d50:	lsl	r1, r0, #1
   25d54:	mov	r0, r5
   25d58:	bl	25c3c <str_set_resize@@Base+0x4>
   25d5c:	cmp	r0, #0
   25d60:	bne	25eb8 <str_set_insert@@Base+0x1b8>
   25d64:	ldr	sl, [fp, #8]
   25d68:	ldr	r8, [r5]
   25d6c:	ldr	r4, [r5, #12]
   25d70:	mov	r0, r7
   25d74:	ldr	r1, [sp, #8]
   25d78:	bl	260c8 <str_set_visit@@Base+0x4>
   25d7c:	sub	r6, r4, #1
   25d80:	and	r1, r0, r6
   25d84:	orr	r2, sl, #1
   25d88:	cmp	r2, #3
   25d8c:	bne	25dbc <str_set_insert@@Base+0xbc>
   25d90:	ldr	r2, [r5, #8]
   25d94:	add	r2, r2, #1
   25d98:	str	r2, [r5, #8]
   25d9c:	add	r0, r0, #1
   25da0:	mov	r5, r8
   25da4:	ldr	r1, [r5, r1, lsl #2]!
   25da8:	orr	r1, r1, #2
   25dac:	cmp	r1, #2
   25db0:	beq	25e20 <str_set_insert@@Base+0x120>
   25db4:	and	r1, r0, r6
   25db8:	b	25d9c <str_set_insert@@Base+0x9c>
   25dbc:	stm	sp, {r5, r9}
   25dc0:	add	sl, r0, #1
   25dc4:	mov	r9, #0
   25dc8:	b	25ddc <str_set_insert@@Base+0xdc>
   25dcc:	cmp	r9, #0
   25dd0:	moveq	r9, r5
   25dd4:	and	r1, sl, r6
   25dd8:	add	sl, sl, #1
   25ddc:	mov	r5, r8
   25de0:	ldr	r4, [r5, r1, lsl #2]!
   25de4:	cmp	r4, #2
   25de8:	beq	25dcc <str_set_insert@@Base+0xcc>
   25dec:	cmp	r4, #0
   25df0:	beq	25e28 <str_set_insert@@Base+0x128>
   25df4:	mov	r0, r7
   25df8:	ldr	r1, [sp, #8]
   25dfc:	mov	r2, r4
   25e00:	bl	26100 <str_set_visit@@Base+0x3c>
   25e04:	cmp	r0, #0
   25e08:	beq	25dd4 <str_set_insert@@Base+0xd4>
   25e0c:	ldr	r0, [fp, #8]
   25e10:	cmp	r0, #0
   25e14:	ldr	r9, [sp, #4]
   25e18:	streq	r9, [r5]
   25e1c:	b	25e4c <str_set_insert@@Base+0x14c>
   25e20:	mov	r4, #0
   25e24:	b	25e48 <str_set_insert@@Base+0x148>
   25e28:	ldr	r1, [sp]
   25e2c:	ldr	r0, [r1, #8]
   25e30:	add	r0, r0, #1
   25e34:	str	r0, [r1, #8]
   25e38:	cmp	r9, #0
   25e3c:	movne	r5, r9
   25e40:	mov	r4, #0
   25e44:	ldr	r9, [sp, #4]
   25e48:	str	r9, [r5]
   25e4c:	mov	r0, r4
   25e50:	sub	sp, fp, #28
   25e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e58:	movw	r0, #55149	; 0xd76d
   25e5c:	movt	r0, #4
   25e60:	movw	r1, #54995	; 0xd6d3
   25e64:	movt	r1, #4
   25e68:	movw	r3, #55075	; 0xd723
   25e6c:	movt	r3, #4
   25e70:	mov	r2, #115	; 0x73
   25e74:	bl	14ab4 <__assert_fail@plt>
   25e78:	movw	r0, #55172	; 0xd784
   25e7c:	movt	r0, #4
   25e80:	movw	r1, #54995	; 0xd6d3
   25e84:	movt	r1, #4
   25e88:	movw	r3, #55075	; 0xd723
   25e8c:	movt	r3, #4
   25e90:	mov	r2, #116	; 0x74
   25e94:	bl	14ab4 <__assert_fail@plt>
   25e98:	movw	r0, #54972	; 0xd6bc
   25e9c:	movt	r0, #4
   25ea0:	movw	r1, #54995	; 0xd6d3
   25ea4:	movt	r1, #4
   25ea8:	movw	r3, #55075	; 0xd723
   25eac:	movt	r3, #4
   25eb0:	mov	r2, #114	; 0x72
   25eb4:	bl	14ab4 <__assert_fail@plt>
   25eb8:	movw	r0, #8368	; 0x20b0
   25ebc:	movt	r0, #6
   25ec0:	ldr	r0, [r0]
   25ec4:	movw	r1, #55193	; 0xd799
   25ec8:	movt	r1, #4
   25ecc:	movw	r2, #55216	; 0xd7b0
   25ed0:	movt	r2, #4
   25ed4:	bl	149f4 <fprintf@plt>
   25ed8:	mov	r0, #1
   25edc:	bl	149c4 <exit@plt>

00025ee0 <str_set_insert_item@@Base>:
   25ee0:	push	{r4, r5, r6, sl, fp, lr}
   25ee4:	add	fp, sp, #16
   25ee8:	sub	sp, sp, #8
   25eec:	mov	r4, r2
   25ef0:	mov	r5, r1
   25ef4:	mov	r6, r0
   25ef8:	mov	r0, r1
   25efc:	bl	25f28 <str_set_insert_item@@Base+0x48>
   25f00:	mov	r0, r5
   25f04:	bl	25f2c <str_set_insert_item@@Base+0x4c>
   25f08:	mov	r2, r0
   25f0c:	str	r4, [sp]
   25f10:	mov	r0, r6
   25f14:	mov	r1, r5
   25f18:	mov	r3, r5
   25f1c:	bl	25d04 <str_set_insert@@Base+0x4>
   25f20:	sub	sp, fp, #16
   25f24:	pop	{r4, r5, r6, sl, fp, pc}
   25f28:	bx	lr
   25f2c:	b	149dc <strlen@plt>

00025f30 <str_set_find@@Base>:
   25f30:	b	25f34 <str_set_find@@Base+0x4>
   25f34:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   25f38:	add	fp, sp, #24
   25f3c:	ldr	r4, [r0]
   25f40:	cmp	r4, #0
   25f44:	beq	25fa8 <str_set_find@@Base+0x78>
   25f48:	mov	r8, r2
   25f4c:	mov	r9, r1
   25f50:	ldr	r5, [r0, #12]
   25f54:	mov	r0, r1
   25f58:	mov	r1, r2
   25f5c:	bl	260c8 <str_set_visit@@Base+0x4>
   25f60:	mov	r6, r0
   25f64:	sub	r5, r5, #1
   25f68:	b	25f70 <str_set_find@@Base+0x40>
   25f6c:	add	r6, r6, #1
   25f70:	and	r0, r6, r5
   25f74:	ldr	r7, [r4, r0, lsl #2]
   25f78:	cmp	r7, #2
   25f7c:	beq	25f6c <str_set_find@@Base+0x3c>
   25f80:	cmp	r7, #0
   25f84:	beq	25fa8 <str_set_find@@Base+0x78>
   25f88:	mov	r0, r9
   25f8c:	mov	r1, r8
   25f90:	mov	r2, r7
   25f94:	bl	26100 <str_set_visit@@Base+0x3c>
   25f98:	cmp	r0, #0
   25f9c:	beq	25f6c <str_set_find@@Base+0x3c>
   25fa0:	mov	r0, r7
   25fa4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   25fa8:	mov	r7, #0
   25fac:	mov	r0, r7
   25fb0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00025fb4 <str_set_find_item@@Base>:
   25fb4:	push	{r4, r5, fp, lr}
   25fb8:	add	fp, sp, #8
   25fbc:	mov	r4, r1
   25fc0:	mov	r5, r0
   25fc4:	mov	r0, r1
   25fc8:	bl	25f28 <str_set_insert_item@@Base+0x48>
   25fcc:	mov	r0, r4
   25fd0:	bl	25f2c <str_set_insert_item@@Base+0x4c>
   25fd4:	mov	r2, r0
   25fd8:	mov	r0, r5
   25fdc:	mov	r1, r4
   25fe0:	pop	{r4, r5, fp, lr}
   25fe4:	b	25f34 <str_set_find@@Base+0x4>

00025fe8 <str_set_remove@@Base>:
   25fe8:	b	25fec <str_set_remove@@Base+0x4>
   25fec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25ff0:	add	fp, sp, #28
   25ff4:	sub	sp, sp, #4
   25ff8:	ldr	r5, [r0]
   25ffc:	mov	r7, #0
   26000:	cmp	r5, #0
   26004:	beq	26084 <str_set_remove@@Base+0x9c>
   26008:	mov	r9, r2
   2600c:	mov	sl, r1
   26010:	str	r0, [sp]
   26014:	ldr	r6, [r0, #12]
   26018:	mov	r0, r1
   2601c:	mov	r1, r2
   26020:	bl	260c8 <str_set_visit@@Base+0x4>
   26024:	mov	r4, r0
   26028:	sub	r6, r6, #1
   2602c:	b	26034 <str_set_remove@@Base+0x4c>
   26030:	add	r4, r4, #1
   26034:	and	r8, r4, r6
   26038:	ldr	r7, [r5, r8, lsl #2]
   2603c:	cmp	r7, #2
   26040:	beq	26030 <str_set_remove@@Base+0x48>
   26044:	cmp	r7, #0
   26048:	beq	26080 <str_set_remove@@Base+0x98>
   2604c:	mov	r0, sl
   26050:	mov	r1, r9
   26054:	mov	r2, r7
   26058:	bl	26100 <str_set_visit@@Base+0x3c>
   2605c:	cmp	r0, #0
   26060:	beq	26030 <str_set_remove@@Base+0x48>
   26064:	mov	r0, #2
   26068:	str	r0, [r5, r8, lsl #2]
   2606c:	ldr	r1, [sp]
   26070:	ldr	r0, [r1, #8]
   26074:	sub	r0, r0, #1
   26078:	str	r0, [r1, #8]
   2607c:	b	26084 <str_set_remove@@Base+0x9c>
   26080:	mov	r7, #0
   26084:	mov	r0, r7
   26088:	sub	sp, fp, #28
   2608c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026090 <str_set_remove_item@@Base>:
   26090:	push	{r4, r5, fp, lr}
   26094:	add	fp, sp, #8
   26098:	mov	r4, r1
   2609c:	mov	r5, r0
   260a0:	mov	r0, r1
   260a4:	bl	25f28 <str_set_insert_item@@Base+0x48>
   260a8:	mov	r0, r4
   260ac:	bl	25f2c <str_set_insert_item@@Base+0x4c>
   260b0:	mov	r2, r0
   260b4:	mov	r0, r5
   260b8:	mov	r1, r4
   260bc:	pop	{r4, r5, fp, lr}
   260c0:	b	25fec <str_set_remove@@Base+0x4>

000260c4 <str_set_visit@@Base>:
   260c4:	b	25b84 <str_set_destroy@@Base+0x24>
   260c8:	push	{fp, lr}
   260cc:	mov	fp, sp
   260d0:	sub	sp, sp, #16
   260d4:	add	r2, sp, #8
   260d8:	movw	r3, #15186	; 0x3b52
   260dc:	movt	r3, #12137	; 0x2f69
   260e0:	str	r3, [sp]
   260e4:	str	r2, [sp, #4]
   260e8:	mov	r2, r1
   260ec:	mov	r3, #0
   260f0:	bl	32b84 <cmetrohash64_1@@Base>
   260f4:	ldr	r0, [sp, #8]
   260f8:	mov	sp, fp
   260fc:	pop	{fp, pc}
   26100:	push	{fp, lr}
   26104:	mov	fp, sp
   26108:	mov	r3, r1
   2610c:	mov	r1, r2
   26110:	mov	r2, r3
   26114:	bl	14a9c <strncmp@plt>
   26118:	clz	r0, r0
   2611c:	lsr	r0, r0, #5
   26120:	pop	{fp, pc}

00026124 <ptr_set_clear@@Base>:
   26124:	b	26128 <ptr_set_clear@@Base+0x4>
   26128:	push	{r4, sl, fp, lr}
   2612c:	add	fp, sp, #8
   26130:	mov	r4, r0
   26134:	ldr	r0, [r0]
   26138:	cmp	r0, #0
   2613c:	beq	26144 <ptr_set_clear@@Base+0x20>
   26140:	bl	14928 <free@plt>
   26144:	vmov.i32	q8, #0	; 0x00000000
   26148:	vst1.32	{d16-d17}, [r4]
   2614c:	pop	{r4, sl, fp, pc}

00026150 <ptr_set_destroy@@Base>:
   26150:	push	{r4, sl, fp, lr}
   26154:	add	fp, sp, #8
   26158:	mov	r4, r0
   2615c:	cmp	r1, #0
   26160:	movne	r0, r4
   26164:	blne	26174 <ptr_set_destroy@@Base+0x24>
   26168:	mov	r0, r4
   2616c:	pop	{r4, sl, fp, lr}
   26170:	b	26128 <ptr_set_clear@@Base+0x4>
   26174:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26178:	add	fp, sp, #24
   2617c:	mov	r6, r0
   26180:	ldr	r0, [r0, #12]
   26184:	cmp	r0, #0
   26188:	beq	261cc <ptr_set_destroy@@Base+0x7c>
   2618c:	mov	r8, r2
   26190:	mov	r5, r1
   26194:	ldr	r7, [r6]
   26198:	mov	r4, #0
   2619c:	b	261b0 <ptr_set_destroy@@Base+0x60>
   261a0:	ldr	r0, [r6, #12]
   261a4:	add	r4, r4, #1
   261a8:	cmp	r4, r0
   261ac:	bcs	261cc <ptr_set_destroy@@Base+0x7c>
   261b0:	ldr	r1, [r7, r4, lsl #2]
   261b4:	orr	r0, r1, #2
   261b8:	cmp	r0, #2
   261bc:	beq	261a0 <ptr_set_destroy@@Base+0x50>
   261c0:	mov	r0, r8
   261c4:	blx	r5
   261c8:	b	261a0 <ptr_set_destroy@@Base+0x50>
   261cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000261d0 <ptr_set_init@@Base>:
   261d0:	b	261d4 <ptr_set_init@@Base+0x4>
   261d4:	push	{r4, r5, fp, lr}
   261d8:	add	fp, sp, #8
   261dc:	mov	r4, r0
   261e0:	mov	r2, #4
   261e4:	mov	r0, #179	; 0xb3
   261e8:	mov	r5, r2
   261ec:	mul	r3, r2, r0
   261f0:	lsl	r2, r2, #1
   261f4:	cmp	r1, r3, lsr #8
   261f8:	bhi	261e8 <ptr_set_init@@Base+0x18>
   261fc:	mov	r0, r5
   26200:	mov	r1, #4
   26204:	bl	148f8 <calloc@plt>
   26208:	str	r0, [r4]
   2620c:	cmp	r0, #0
   26210:	mvneq	r0, #0
   26214:	movne	r0, #0
   26218:	strne	r0, [r4, #4]
   2621c:	strne	r0, [r4, #8]
   26220:	strne	r5, [r4, #12]
   26224:	pop	{r4, r5, fp, pc}

00026228 <ptr_set_resize@@Base>:
   26228:	b	2622c <ptr_set_resize@@Base+0x4>
   2622c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26230:	add	fp, sp, #24
   26234:	sub	sp, sp, #16
   26238:	mov	r4, r0
   2623c:	ldr	r5, [r0]
   26240:	ldr	r0, [r0, #8]
   26244:	cmp	r0, r1
   26248:	movhi	r1, r0
   2624c:	mov	r8, sp
   26250:	mov	r0, r8
   26254:	bl	261d4 <ptr_set_init@@Base+0x4>
   26258:	mov	r1, r0
   2625c:	mvn	r0, #0
   26260:	cmp	r1, #0
   26264:	beq	26270 <ptr_set_resize@@Base+0x48>
   26268:	sub	sp, fp, #24
   2626c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26270:	ldr	r0, [r4, #12]
   26274:	cmp	r0, #0
   26278:	beq	262c8 <ptr_set_resize@@Base+0xa0>
   2627c:	mov	r6, #0
   26280:	mov	r9, sp
   26284:	b	26298 <ptr_set_resize@@Base+0x70>
   26288:	ldr	r0, [r4, #12]
   2628c:	add	r6, r6, #1
   26290:	cmp	r6, r0
   26294:	bcs	262c8 <ptr_set_resize@@Base+0xa0>
   26298:	ldr	r7, [r5, r6, lsl #2]
   2629c:	orr	r0, r7, #2
   262a0:	cmp	r0, #2
   262a4:	beq	26288 <ptr_set_resize@@Base+0x60>
   262a8:	mov	r0, r7
   262ac:	bl	264f8 <ptr_set_insert_item@@Base+0x34>
   262b0:	mov	r0, r9
   262b4:	mov	r1, r7
   262b8:	mov	r2, r7
   262bc:	mov	r3, #3
   262c0:	bl	262f0 <ptr_set_insert@@Base+0xc>
   262c4:	b	26288 <ptr_set_resize@@Base+0x60>
   262c8:	mov	r0, r4
   262cc:	bl	26128 <ptr_set_clear@@Base+0x4>
   262d0:	vld1.64	{d16-d17}, [r8]
   262d4:	vst1.32	{d16-d17}, [r4]
   262d8:	mov	r0, #0
   262dc:	sub	sp, fp, #24
   262e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000262e4 <ptr_set_insert@@Base>:
   262e4:	mov	r2, r3
   262e8:	ldr	r3, [sp]
   262ec:	b	262f0 <ptr_set_insert@@Base+0xc>
   262f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   262f4:	add	fp, sp, #28
   262f8:	sub	sp, sp, #12
   262fc:	cmp	r2, #2
   26300:	beq	2643c <ptr_set_insert@@Base+0x158>
   26304:	mov	r9, r2
   26308:	cmp	r2, #1
   2630c:	beq	2645c <ptr_set_insert@@Base+0x178>
   26310:	cmp	r9, #0
   26314:	beq	2647c <ptr_set_insert@@Base+0x198>
   26318:	mov	r6, r3
   2631c:	mov	r7, r1
   26320:	mov	r4, r0
   26324:	ldr	r0, [r0, #8]
   26328:	ldr	r1, [r4, #12]
   2632c:	mov	r2, #179	; 0xb3
   26330:	mul	r1, r1, r2
   26334:	cmp	r0, r1, lsr #8
   26338:	bcc	26350 <ptr_set_insert@@Base+0x6c>
   2633c:	lsl	r1, r0, #1
   26340:	mov	r0, r4
   26344:	bl	2622c <ptr_set_resize@@Base+0x4>
   26348:	cmp	r0, #0
   2634c:	bne	2649c <ptr_set_insert@@Base+0x1b8>
   26350:	ldr	r8, [r4]
   26354:	ldr	r0, [r4, #12]
   26358:	sub	r5, r0, #1
   2635c:	mov	r0, r7
   26360:	bl	26660 <ptr_set_visit@@Base+0x4>
   26364:	and	r1, r0, r5
   26368:	orr	r2, r6, #1
   2636c:	cmp	r2, #3
   26370:	bne	263a0 <ptr_set_insert@@Base+0xbc>
   26374:	ldr	r2, [r4, #8]
   26378:	add	r2, r2, #1
   2637c:	str	r2, [r4, #8]
   26380:	add	r0, r0, #1
   26384:	mov	r4, r8
   26388:	ldr	r1, [r4, r1, lsl #2]!
   2638c:	orr	r1, r1, #2
   26390:	cmp	r1, #2
   26394:	beq	26404 <ptr_set_insert@@Base+0x120>
   26398:	and	r1, r0, r5
   2639c:	b	26380 <ptr_set_insert@@Base+0x9c>
   263a0:	str	r6, [sp]
   263a4:	stmib	sp, {r4, r9}
   263a8:	add	sl, r0, #1
   263ac:	mov	r9, #0
   263b0:	b	263c4 <ptr_set_insert@@Base+0xe0>
   263b4:	cmp	r9, #0
   263b8:	moveq	r9, r4
   263bc:	and	r1, sl, r5
   263c0:	add	sl, sl, #1
   263c4:	mov	r4, r8
   263c8:	ldr	r6, [r4, r1, lsl #2]!
   263cc:	cmp	r6, #2
   263d0:	beq	263b4 <ptr_set_insert@@Base+0xd0>
   263d4:	cmp	r6, #0
   263d8:	beq	2640c <ptr_set_insert@@Base+0x128>
   263dc:	mov	r0, r7
   263e0:	mov	r1, r6
   263e4:	bl	26680 <ptr_set_visit@@Base+0x24>
   263e8:	cmp	r0, #0
   263ec:	beq	263bc <ptr_set_insert@@Base+0xd8>
   263f0:	ldr	r0, [sp]
   263f4:	cmp	r0, #0
   263f8:	ldr	r9, [sp, #8]
   263fc:	streq	r9, [r4]
   26400:	b	26430 <ptr_set_insert@@Base+0x14c>
   26404:	mov	r6, #0
   26408:	b	2642c <ptr_set_insert@@Base+0x148>
   2640c:	ldr	r1, [sp, #4]
   26410:	ldr	r0, [r1, #8]
   26414:	add	r0, r0, #1
   26418:	str	r0, [r1, #8]
   2641c:	cmp	r9, #0
   26420:	movne	r4, r9
   26424:	mov	r6, #0
   26428:	ldr	r9, [sp, #8]
   2642c:	str	r9, [r4]
   26430:	mov	r0, r6
   26434:	sub	sp, fp, #28
   26438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2643c:	movw	r0, #55149	; 0xd76d
   26440:	movt	r0, #4
   26444:	movw	r1, #54995	; 0xd6d3
   26448:	movt	r1, #4
   2644c:	movw	r3, #55075	; 0xd723
   26450:	movt	r3, #4
   26454:	mov	r2, #115	; 0x73
   26458:	bl	14ab4 <__assert_fail@plt>
   2645c:	movw	r0, #55172	; 0xd784
   26460:	movt	r0, #4
   26464:	movw	r1, #54995	; 0xd6d3
   26468:	movt	r1, #4
   2646c:	movw	r3, #55075	; 0xd723
   26470:	movt	r3, #4
   26474:	mov	r2, #116	; 0x74
   26478:	bl	14ab4 <__assert_fail@plt>
   2647c:	movw	r0, #54972	; 0xd6bc
   26480:	movt	r0, #4
   26484:	movw	r1, #54995	; 0xd6d3
   26488:	movt	r1, #4
   2648c:	movw	r3, #55075	; 0xd723
   26490:	movt	r3, #4
   26494:	mov	r2, #114	; 0x72
   26498:	bl	14ab4 <__assert_fail@plt>
   2649c:	movw	r0, #8368	; 0x20b0
   264a0:	movt	r0, #6
   264a4:	ldr	r0, [r0]
   264a8:	movw	r1, #55193	; 0xd799
   264ac:	movt	r1, #4
   264b0:	movw	r2, #55216	; 0xd7b0
   264b4:	movt	r2, #4
   264b8:	bl	149f4 <fprintf@plt>
   264bc:	mov	r0, #1
   264c0:	bl	149c4 <exit@plt>

000264c4 <ptr_set_insert_item@@Base>:
   264c4:	push	{r4, r5, r6, sl, fp, lr}
   264c8:	add	fp, sp, #16
   264cc:	mov	r4, r2
   264d0:	mov	r5, r1
   264d4:	mov	r6, r0
   264d8:	mov	r0, r1
   264dc:	bl	264f8 <ptr_set_insert_item@@Base+0x34>
   264e0:	mov	r0, r6
   264e4:	mov	r1, r5
   264e8:	mov	r2, r5
   264ec:	mov	r3, r4
   264f0:	pop	{r4, r5, r6, sl, fp, lr}
   264f4:	b	262f0 <ptr_set_insert@@Base+0xc>
   264f8:	bx	lr

000264fc <ptr_set_find@@Base>:
   264fc:	b	26500 <ptr_set_find@@Base+0x4>
   26500:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26504:	add	fp, sp, #24
   26508:	ldr	r7, [r0]
   2650c:	cmp	r7, #0
   26510:	beq	26568 <ptr_set_find@@Base+0x6c>
   26514:	mov	r8, r1
   26518:	ldr	r0, [r0, #12]
   2651c:	sub	r4, r0, #1
   26520:	mov	r0, r1
   26524:	bl	26660 <ptr_set_visit@@Base+0x4>
   26528:	mov	r5, r0
   2652c:	b	26534 <ptr_set_find@@Base+0x38>
   26530:	add	r5, r5, #1
   26534:	and	r0, r5, r4
   26538:	ldr	r6, [r7, r0, lsl #2]
   2653c:	cmp	r6, #2
   26540:	beq	26530 <ptr_set_find@@Base+0x34>
   26544:	cmp	r6, #0
   26548:	beq	26568 <ptr_set_find@@Base+0x6c>
   2654c:	mov	r0, r8
   26550:	mov	r1, r6
   26554:	bl	26680 <ptr_set_visit@@Base+0x24>
   26558:	cmp	r0, #0
   2655c:	beq	26530 <ptr_set_find@@Base+0x34>
   26560:	mov	r0, r6
   26564:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26568:	mov	r6, #0
   2656c:	mov	r0, r6
   26570:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026574 <ptr_set_find_item@@Base>:
   26574:	push	{r4, r5, fp, lr}
   26578:	add	fp, sp, #8
   2657c:	mov	r4, r1
   26580:	mov	r5, r0
   26584:	mov	r0, r1
   26588:	bl	264f8 <ptr_set_insert_item@@Base+0x34>
   2658c:	mov	r0, r5
   26590:	mov	r1, r4
   26594:	pop	{r4, r5, fp, lr}
   26598:	b	26500 <ptr_set_find@@Base+0x4>

0002659c <ptr_set_remove@@Base>:
   2659c:	b	265a0 <ptr_set_remove@@Base+0x4>
   265a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   265a4:	add	fp, sp, #28
   265a8:	sub	sp, sp, #4
   265ac:	ldr	sl, [r0]
   265b0:	mov	r6, #0
   265b4:	cmp	sl, #0
   265b8:	beq	26628 <ptr_set_remove@@Base+0x8c>
   265bc:	mov	r9, r1
   265c0:	mov	r8, r0
   265c4:	ldr	r0, [r0, #12]
   265c8:	sub	r5, r0, #1
   265cc:	mov	r0, r1
   265d0:	bl	26660 <ptr_set_visit@@Base+0x4>
   265d4:	mov	r7, r0
   265d8:	b	265e0 <ptr_set_remove@@Base+0x44>
   265dc:	add	r7, r7, #1
   265e0:	and	r4, r7, r5
   265e4:	ldr	r6, [sl, r4, lsl #2]
   265e8:	cmp	r6, #2
   265ec:	beq	265dc <ptr_set_remove@@Base+0x40>
   265f0:	cmp	r6, #0
   265f4:	beq	26624 <ptr_set_remove@@Base+0x88>
   265f8:	mov	r0, r9
   265fc:	mov	r1, r6
   26600:	bl	26680 <ptr_set_visit@@Base+0x24>
   26604:	cmp	r0, #0
   26608:	beq	265dc <ptr_set_remove@@Base+0x40>
   2660c:	mov	r0, #2
   26610:	str	r0, [sl, r4, lsl #2]
   26614:	ldr	r0, [r8, #8]
   26618:	sub	r0, r0, #1
   2661c:	str	r0, [r8, #8]
   26620:	b	26628 <ptr_set_remove@@Base+0x8c>
   26624:	mov	r6, #0
   26628:	mov	r0, r6
   2662c:	sub	sp, fp, #28
   26630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026634 <ptr_set_remove_item@@Base>:
   26634:	push	{r4, r5, fp, lr}
   26638:	add	fp, sp, #8
   2663c:	mov	r4, r1
   26640:	mov	r5, r0
   26644:	mov	r0, r1
   26648:	bl	264f8 <ptr_set_insert_item@@Base+0x34>
   2664c:	mov	r0, r5
   26650:	mov	r1, r4
   26654:	pop	{r4, r5, fp, lr}
   26658:	b	265a0 <ptr_set_remove@@Base+0x4>

0002665c <ptr_set_visit@@Base>:
   2665c:	b	26174 <ptr_set_destroy@@Base+0x24>
   26660:	push	{fp, lr}
   26664:	mov	fp, sp
   26668:	sub	sp, sp, #8
   2666c:	str	r0, [sp, #4]
   26670:	add	r0, sp, #4
   26674:	bl	26690 <ptr_set_visit@@Base+0x34>
   26678:	mov	sp, fp
   2667c:	pop	{fp, pc}
   26680:	sub	r0, r0, r1
   26684:	clz	r0, r0
   26688:	lsr	r0, r0, #5
   2668c:	bx	lr
   26690:	push	{fp, lr}
   26694:	mov	fp, sp
   26698:	sub	sp, sp, #16
   2669c:	add	r1, sp, #8
   266a0:	movw	r2, #15186	; 0x3b52
   266a4:	movt	r2, #12137	; 0x2f69
   266a8:	str	r2, [sp]
   266ac:	str	r1, [sp, #4]
   266b0:	mov	r2, #4
   266b4:	mov	r3, #0
   266b8:	bl	32b84 <cmetrohash64_1@@Base>
   266bc:	ldr	r0, [sp, #8]
   266c0:	mov	sp, fp
   266c4:	pop	{fp, pc}

000266c8 <fb_symbol_table_clear@@Base>:
   266c8:	b	266cc <fb_symbol_table_clear@@Base+0x4>
   266cc:	push	{r4, sl, fp, lr}
   266d0:	add	fp, sp, #8
   266d4:	mov	r4, r0
   266d8:	ldr	r0, [r0]
   266dc:	cmp	r0, #0
   266e0:	beq	266e8 <fb_symbol_table_clear@@Base+0x20>
   266e4:	bl	14928 <free@plt>
   266e8:	vmov.i32	q8, #0	; 0x00000000
   266ec:	vst1.32	{d16-d17}, [r4]
   266f0:	pop	{r4, sl, fp, pc}

000266f4 <fb_symbol_table_destroy@@Base>:
   266f4:	push	{r4, sl, fp, lr}
   266f8:	add	fp, sp, #8
   266fc:	mov	r4, r0
   26700:	cmp	r1, #0
   26704:	movne	r0, r4
   26708:	blne	26718 <fb_symbol_table_destroy@@Base+0x24>
   2670c:	mov	r0, r4
   26710:	pop	{r4, sl, fp, lr}
   26714:	b	266cc <fb_symbol_table_clear@@Base+0x4>
   26718:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2671c:	add	fp, sp, #24
   26720:	mov	r6, r0
   26724:	ldr	r0, [r0, #12]
   26728:	cmp	r0, #0
   2672c:	beq	26770 <fb_symbol_table_destroy@@Base+0x7c>
   26730:	mov	r8, r2
   26734:	mov	r5, r1
   26738:	ldr	r7, [r6]
   2673c:	mov	r4, #0
   26740:	b	26754 <fb_symbol_table_destroy@@Base+0x60>
   26744:	ldr	r0, [r6, #12]
   26748:	add	r4, r4, #1
   2674c:	cmp	r4, r0
   26750:	bcs	26770 <fb_symbol_table_destroy@@Base+0x7c>
   26754:	ldr	r1, [r7, r4, lsl #2]
   26758:	orr	r0, r1, #2
   2675c:	cmp	r0, #2
   26760:	beq	26744 <fb_symbol_table_destroy@@Base+0x50>
   26764:	mov	r0, r8
   26768:	blx	r5
   2676c:	b	26744 <fb_symbol_table_destroy@@Base+0x50>
   26770:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026774 <fb_symbol_table_init@@Base>:
   26774:	b	26778 <fb_symbol_table_init@@Base+0x4>
   26778:	push	{r4, r5, fp, lr}
   2677c:	add	fp, sp, #8
   26780:	mov	r4, r0
   26784:	mov	r2, #4
   26788:	mov	r0, #179	; 0xb3
   2678c:	mov	r5, r2
   26790:	mul	r3, r2, r0
   26794:	lsl	r2, r2, #1
   26798:	cmp	r1, r3, lsr #8
   2679c:	bhi	2678c <fb_symbol_table_init@@Base+0x18>
   267a0:	mov	r0, r5
   267a4:	mov	r1, #4
   267a8:	bl	148f8 <calloc@plt>
   267ac:	str	r0, [r4]
   267b0:	cmp	r0, #0
   267b4:	mvneq	r0, #0
   267b8:	movne	r0, #0
   267bc:	strne	r0, [r4, #4]
   267c0:	strne	r0, [r4, #8]
   267c4:	strne	r5, [r4, #12]
   267c8:	pop	{r4, r5, fp, pc}

000267cc <fb_symbol_table_resize@@Base>:
   267cc:	b	267d0 <fb_symbol_table_resize@@Base+0x4>
   267d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   267d4:	add	fp, sp, #28
   267d8:	sub	sp, sp, #28
   267dc:	mov	r4, r0
   267e0:	ldr	sl, [r0]
   267e4:	ldr	r0, [r0, #8]
   267e8:	cmp	r0, r1
   267ec:	movhi	r1, r0
   267f0:	add	r0, sp, #8
   267f4:	bl	26778 <fb_symbol_table_init@@Base+0x4>
   267f8:	mov	r1, r0
   267fc:	mvn	r0, #0
   26800:	cmp	r1, #0
   26804:	beq	26810 <fb_symbol_table_resize@@Base+0x44>
   26808:	sub	sp, fp, #28
   2680c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26810:	ldr	r0, [r4, #12]
   26814:	cmp	r0, #0
   26818:	beq	2687c <fb_symbol_table_resize@@Base+0xb0>
   2681c:	mov	r6, #0
   26820:	mov	r8, #3
   26824:	add	r9, sp, #8
   26828:	b	2683c <fb_symbol_table_resize@@Base+0x70>
   2682c:	ldr	r0, [r4, #12]
   26830:	add	r6, r6, #1
   26834:	cmp	r6, r0
   26838:	bcs	2687c <fb_symbol_table_resize@@Base+0xb0>
   2683c:	ldr	r7, [sl, r6, lsl #2]
   26840:	orr	r0, r7, #2
   26844:	cmp	r0, #2
   26848:	beq	2682c <fb_symbol_table_resize@@Base+0x60>
   2684c:	mov	r0, r7
   26850:	bl	26ac8 <fb_symbol_table_insert_item@@Base+0x4c>
   26854:	mov	r5, r0
   26858:	mov	r0, r7
   2685c:	bl	26ad4 <fb_symbol_table_insert_item@@Base+0x58>
   26860:	mov	r2, r0
   26864:	str	r8, [sp]
   26868:	mov	r0, r9
   2686c:	mov	r1, r5
   26870:	mov	r3, r7
   26874:	bl	268a0 <fb_symbol_table_insert@@Base+0x4>
   26878:	b	2682c <fb_symbol_table_resize@@Base+0x60>
   2687c:	mov	r0, r4
   26880:	bl	266cc <fb_symbol_table_clear@@Base+0x4>
   26884:	add	r0, sp, #8
   26888:	vld1.64	{d16-d17}, [r0]
   2688c:	vst1.32	{d16-d17}, [r4]
   26890:	mov	r0, #0
   26894:	sub	sp, fp, #28
   26898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002689c <fb_symbol_table_insert@@Base>:
   2689c:	b	268a0 <fb_symbol_table_insert@@Base+0x4>
   268a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   268a4:	add	fp, sp, #28
   268a8:	sub	sp, sp, #12
   268ac:	str	r2, [sp, #8]
   268b0:	cmp	r3, #2
   268b4:	beq	269f4 <fb_symbol_table_insert@@Base+0x158>
   268b8:	mov	r9, r3
   268bc:	cmp	r3, #1
   268c0:	beq	26a14 <fb_symbol_table_insert@@Base+0x178>
   268c4:	cmp	r9, #0
   268c8:	beq	26a34 <fb_symbol_table_insert@@Base+0x198>
   268cc:	mov	r7, r1
   268d0:	mov	r5, r0
   268d4:	ldr	r0, [r0, #8]
   268d8:	ldr	r1, [r5, #12]
   268dc:	mov	r2, #179	; 0xb3
   268e0:	mul	r1, r1, r2
   268e4:	cmp	r0, r1, lsr #8
   268e8:	bcc	26900 <fb_symbol_table_insert@@Base+0x64>
   268ec:	lsl	r1, r0, #1
   268f0:	mov	r0, r5
   268f4:	bl	267d0 <fb_symbol_table_resize@@Base+0x4>
   268f8:	cmp	r0, #0
   268fc:	bne	26a54 <fb_symbol_table_insert@@Base+0x1b8>
   26900:	ldr	sl, [fp, #8]
   26904:	ldr	r8, [r5]
   26908:	ldr	r4, [r5, #12]
   2690c:	mov	r0, r7
   26910:	ldr	r1, [sp, #8]
   26914:	bl	26c80 <fb_symbol_table_visit@@Base+0x4>
   26918:	sub	r6, r4, #1
   2691c:	and	r1, r0, r6
   26920:	orr	r2, sl, #1
   26924:	cmp	r2, #3
   26928:	bne	26958 <fb_symbol_table_insert@@Base+0xbc>
   2692c:	ldr	r2, [r5, #8]
   26930:	add	r2, r2, #1
   26934:	str	r2, [r5, #8]
   26938:	add	r0, r0, #1
   2693c:	mov	r5, r8
   26940:	ldr	r1, [r5, r1, lsl #2]!
   26944:	orr	r1, r1, #2
   26948:	cmp	r1, #2
   2694c:	beq	269bc <fb_symbol_table_insert@@Base+0x120>
   26950:	and	r1, r0, r6
   26954:	b	26938 <fb_symbol_table_insert@@Base+0x9c>
   26958:	stm	sp, {r5, r9}
   2695c:	add	sl, r0, #1
   26960:	mov	r9, #0
   26964:	b	26978 <fb_symbol_table_insert@@Base+0xdc>
   26968:	cmp	r9, #0
   2696c:	moveq	r9, r5
   26970:	and	r1, sl, r6
   26974:	add	sl, sl, #1
   26978:	mov	r5, r8
   2697c:	ldr	r4, [r5, r1, lsl #2]!
   26980:	cmp	r4, #2
   26984:	beq	26968 <fb_symbol_table_insert@@Base+0xcc>
   26988:	cmp	r4, #0
   2698c:	beq	269c4 <fb_symbol_table_insert@@Base+0x128>
   26990:	mov	r0, r7
   26994:	ldr	r1, [sp, #8]
   26998:	mov	r2, r4
   2699c:	bl	26cb8 <fb_symbol_table_visit@@Base+0x3c>
   269a0:	cmp	r0, #0
   269a4:	beq	26970 <fb_symbol_table_insert@@Base+0xd4>
   269a8:	ldr	r0, [fp, #8]
   269ac:	cmp	r0, #0
   269b0:	ldr	r9, [sp, #4]
   269b4:	streq	r9, [r5]
   269b8:	b	269e8 <fb_symbol_table_insert@@Base+0x14c>
   269bc:	mov	r4, #0
   269c0:	b	269e4 <fb_symbol_table_insert@@Base+0x148>
   269c4:	ldr	r1, [sp]
   269c8:	ldr	r0, [r1, #8]
   269cc:	add	r0, r0, #1
   269d0:	str	r0, [r1, #8]
   269d4:	cmp	r9, #0
   269d8:	movne	r5, r9
   269dc:	mov	r4, #0
   269e0:	ldr	r9, [sp, #4]
   269e4:	str	r9, [r5]
   269e8:	mov	r0, r4
   269ec:	sub	sp, fp, #28
   269f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   269f4:	movw	r0, #55149	; 0xd76d
   269f8:	movt	r0, #4
   269fc:	movw	r1, #54995	; 0xd6d3
   26a00:	movt	r1, #4
   26a04:	movw	r3, #55075	; 0xd723
   26a08:	movt	r3, #4
   26a0c:	mov	r2, #115	; 0x73
   26a10:	bl	14ab4 <__assert_fail@plt>
   26a14:	movw	r0, #55172	; 0xd784
   26a18:	movt	r0, #4
   26a1c:	movw	r1, #54995	; 0xd6d3
   26a20:	movt	r1, #4
   26a24:	movw	r3, #55075	; 0xd723
   26a28:	movt	r3, #4
   26a2c:	mov	r2, #116	; 0x74
   26a30:	bl	14ab4 <__assert_fail@plt>
   26a34:	movw	r0, #54972	; 0xd6bc
   26a38:	movt	r0, #4
   26a3c:	movw	r1, #54995	; 0xd6d3
   26a40:	movt	r1, #4
   26a44:	movw	r3, #55075	; 0xd723
   26a48:	movt	r3, #4
   26a4c:	mov	r2, #114	; 0x72
   26a50:	bl	14ab4 <__assert_fail@plt>
   26a54:	movw	r0, #8368	; 0x20b0
   26a58:	movt	r0, #6
   26a5c:	ldr	r0, [r0]
   26a60:	movw	r1, #55193	; 0xd799
   26a64:	movt	r1, #4
   26a68:	movw	r2, #55216	; 0xd7b0
   26a6c:	movt	r2, #4
   26a70:	bl	149f4 <fprintf@plt>
   26a74:	mov	r0, #1
   26a78:	bl	149c4 <exit@plt>

00026a7c <fb_symbol_table_insert_item@@Base>:
   26a7c:	push	{r4, r5, r6, r7, fp, lr}
   26a80:	add	fp, sp, #16
   26a84:	sub	sp, sp, #8
   26a88:	mov	r4, r2
   26a8c:	mov	r5, r1
   26a90:	mov	r6, r0
   26a94:	mov	r0, r1
   26a98:	bl	26ac8 <fb_symbol_table_insert_item@@Base+0x4c>
   26a9c:	mov	r7, r0
   26aa0:	mov	r0, r5
   26aa4:	bl	26ad4 <fb_symbol_table_insert_item@@Base+0x58>
   26aa8:	mov	r2, r0
   26aac:	str	r4, [sp]
   26ab0:	mov	r0, r6
   26ab4:	mov	r1, r7
   26ab8:	mov	r3, r5
   26abc:	bl	268a0 <fb_symbol_table_insert@@Base+0x4>
   26ac0:	sub	sp, fp, #16
   26ac4:	pop	{r4, r5, r6, r7, fp, pc}
   26ac8:	ldr	r0, [r0, #4]
   26acc:	ldr	r0, [r0]
   26ad0:	bx	lr
   26ad4:	ldr	r0, [r0, #4]
   26ad8:	ldr	r0, [r0, #4]
   26adc:	bx	lr

00026ae0 <fb_symbol_table_find@@Base>:
   26ae0:	b	26ae4 <fb_symbol_table_find@@Base+0x4>
   26ae4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26ae8:	add	fp, sp, #24
   26aec:	ldr	r4, [r0]
   26af0:	cmp	r4, #0
   26af4:	beq	26b58 <fb_symbol_table_find@@Base+0x78>
   26af8:	mov	r8, r2
   26afc:	mov	r9, r1
   26b00:	ldr	r5, [r0, #12]
   26b04:	mov	r0, r1
   26b08:	mov	r1, r2
   26b0c:	bl	26c80 <fb_symbol_table_visit@@Base+0x4>
   26b10:	mov	r6, r0
   26b14:	sub	r5, r5, #1
   26b18:	b	26b20 <fb_symbol_table_find@@Base+0x40>
   26b1c:	add	r6, r6, #1
   26b20:	and	r0, r6, r5
   26b24:	ldr	r7, [r4, r0, lsl #2]
   26b28:	cmp	r7, #2
   26b2c:	beq	26b1c <fb_symbol_table_find@@Base+0x3c>
   26b30:	cmp	r7, #0
   26b34:	beq	26b58 <fb_symbol_table_find@@Base+0x78>
   26b38:	mov	r0, r9
   26b3c:	mov	r1, r8
   26b40:	mov	r2, r7
   26b44:	bl	26cb8 <fb_symbol_table_visit@@Base+0x3c>
   26b48:	cmp	r0, #0
   26b4c:	beq	26b1c <fb_symbol_table_find@@Base+0x3c>
   26b50:	mov	r0, r7
   26b54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26b58:	mov	r7, #0
   26b5c:	mov	r0, r7
   26b60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026b64 <fb_symbol_table_find_item@@Base>:
   26b64:	push	{r4, r5, r6, sl, fp, lr}
   26b68:	add	fp, sp, #16
   26b6c:	mov	r4, r1
   26b70:	mov	r5, r0
   26b74:	mov	r0, r1
   26b78:	bl	26ac8 <fb_symbol_table_insert_item@@Base+0x4c>
   26b7c:	mov	r6, r0
   26b80:	mov	r0, r4
   26b84:	bl	26ad4 <fb_symbol_table_insert_item@@Base+0x58>
   26b88:	mov	r2, r0
   26b8c:	mov	r0, r5
   26b90:	mov	r1, r6
   26b94:	pop	{r4, r5, r6, sl, fp, lr}
   26b98:	b	26ae4 <fb_symbol_table_find@@Base+0x4>

00026b9c <fb_symbol_table_remove@@Base>:
   26b9c:	b	26ba0 <fb_symbol_table_remove@@Base+0x4>
   26ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ba4:	add	fp, sp, #28
   26ba8:	sub	sp, sp, #4
   26bac:	ldr	r5, [r0]
   26bb0:	mov	r7, #0
   26bb4:	cmp	r5, #0
   26bb8:	beq	26c38 <fb_symbol_table_remove@@Base+0x9c>
   26bbc:	mov	r9, r2
   26bc0:	mov	sl, r1
   26bc4:	str	r0, [sp]
   26bc8:	ldr	r6, [r0, #12]
   26bcc:	mov	r0, r1
   26bd0:	mov	r1, r2
   26bd4:	bl	26c80 <fb_symbol_table_visit@@Base+0x4>
   26bd8:	mov	r4, r0
   26bdc:	sub	r6, r6, #1
   26be0:	b	26be8 <fb_symbol_table_remove@@Base+0x4c>
   26be4:	add	r4, r4, #1
   26be8:	and	r8, r4, r6
   26bec:	ldr	r7, [r5, r8, lsl #2]
   26bf0:	cmp	r7, #2
   26bf4:	beq	26be4 <fb_symbol_table_remove@@Base+0x48>
   26bf8:	cmp	r7, #0
   26bfc:	beq	26c34 <fb_symbol_table_remove@@Base+0x98>
   26c00:	mov	r0, sl
   26c04:	mov	r1, r9
   26c08:	mov	r2, r7
   26c0c:	bl	26cb8 <fb_symbol_table_visit@@Base+0x3c>
   26c10:	cmp	r0, #0
   26c14:	beq	26be4 <fb_symbol_table_remove@@Base+0x48>
   26c18:	mov	r0, #2
   26c1c:	str	r0, [r5, r8, lsl #2]
   26c20:	ldr	r1, [sp]
   26c24:	ldr	r0, [r1, #8]
   26c28:	sub	r0, r0, #1
   26c2c:	str	r0, [r1, #8]
   26c30:	b	26c38 <fb_symbol_table_remove@@Base+0x9c>
   26c34:	mov	r7, #0
   26c38:	mov	r0, r7
   26c3c:	sub	sp, fp, #28
   26c40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026c44 <fb_symbol_table_remove_item@@Base>:
   26c44:	push	{r4, r5, r6, sl, fp, lr}
   26c48:	add	fp, sp, #16
   26c4c:	mov	r4, r1
   26c50:	mov	r5, r0
   26c54:	mov	r0, r1
   26c58:	bl	26ac8 <fb_symbol_table_insert_item@@Base+0x4c>
   26c5c:	mov	r6, r0
   26c60:	mov	r0, r4
   26c64:	bl	26ad4 <fb_symbol_table_insert_item@@Base+0x58>
   26c68:	mov	r2, r0
   26c6c:	mov	r0, r5
   26c70:	mov	r1, r6
   26c74:	pop	{r4, r5, r6, sl, fp, lr}
   26c78:	b	26ba0 <fb_symbol_table_remove@@Base+0x4>

00026c7c <fb_symbol_table_visit@@Base>:
   26c7c:	b	26718 <fb_symbol_table_destroy@@Base+0x24>
   26c80:	push	{fp, lr}
   26c84:	mov	fp, sp
   26c88:	sub	sp, sp, #16
   26c8c:	add	r2, sp, #8
   26c90:	movw	r3, #15186	; 0x3b52
   26c94:	movt	r3, #12137	; 0x2f69
   26c98:	str	r3, [sp]
   26c9c:	str	r2, [sp, #4]
   26ca0:	mov	r2, r1
   26ca4:	mov	r3, #0
   26ca8:	bl	32b84 <cmetrohash64_1@@Base>
   26cac:	ldr	r0, [sp, #8]
   26cb0:	mov	sp, fp
   26cb4:	pop	{fp, pc}
   26cb8:	push	{r4, r5, r6, sl, fp, lr}
   26cbc:	add	fp, sp, #16
   26cc0:	mov	r6, r2
   26cc4:	mov	r4, r1
   26cc8:	mov	r5, r0
   26ccc:	mov	r0, r2
   26cd0:	bl	26ad4 <fb_symbol_table_insert_item@@Base+0x58>
   26cd4:	mov	r1, r0
   26cd8:	mov	r0, #0
   26cdc:	cmp	r1, r4
   26ce0:	bne	26d04 <fb_symbol_table_visit@@Base+0x88>
   26ce4:	mov	r0, r6
   26ce8:	bl	26ac8 <fb_symbol_table_insert_item@@Base+0x4c>
   26cec:	mov	r1, r0
   26cf0:	mov	r0, r5
   26cf4:	mov	r2, r4
   26cf8:	bl	149d0 <bcmp@plt>
   26cfc:	clz	r0, r0
   26d00:	lsr	r0, r0, #5
   26d04:	pop	{r4, r5, r6, sl, fp, pc}

00026d08 <fb_scope_table_clear@@Base>:
   26d08:	b	26d0c <fb_scope_table_clear@@Base+0x4>
   26d0c:	push	{r4, sl, fp, lr}
   26d10:	add	fp, sp, #8
   26d14:	mov	r4, r0
   26d18:	ldr	r0, [r0]
   26d1c:	cmp	r0, #0
   26d20:	beq	26d28 <fb_scope_table_clear@@Base+0x20>
   26d24:	bl	14928 <free@plt>
   26d28:	vmov.i32	q8, #0	; 0x00000000
   26d2c:	vst1.32	{d16-d17}, [r4]
   26d30:	pop	{r4, sl, fp, pc}

00026d34 <fb_scope_table_destroy@@Base>:
   26d34:	push	{r4, sl, fp, lr}
   26d38:	add	fp, sp, #8
   26d3c:	mov	r4, r0
   26d40:	cmp	r1, #0
   26d44:	movne	r0, r4
   26d48:	blne	26d58 <fb_scope_table_destroy@@Base+0x24>
   26d4c:	mov	r0, r4
   26d50:	pop	{r4, sl, fp, lr}
   26d54:	b	26d0c <fb_scope_table_clear@@Base+0x4>
   26d58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26d5c:	add	fp, sp, #24
   26d60:	mov	r6, r0
   26d64:	ldr	r0, [r0, #12]
   26d68:	cmp	r0, #0
   26d6c:	beq	26db0 <fb_scope_table_destroy@@Base+0x7c>
   26d70:	mov	r8, r2
   26d74:	mov	r5, r1
   26d78:	ldr	r7, [r6]
   26d7c:	mov	r4, #0
   26d80:	b	26d94 <fb_scope_table_destroy@@Base+0x60>
   26d84:	ldr	r0, [r6, #12]
   26d88:	add	r4, r4, #1
   26d8c:	cmp	r4, r0
   26d90:	bcs	26db0 <fb_scope_table_destroy@@Base+0x7c>
   26d94:	ldr	r1, [r7, r4, lsl #2]
   26d98:	orr	r0, r1, #2
   26d9c:	cmp	r0, #2
   26da0:	beq	26d84 <fb_scope_table_destroy@@Base+0x50>
   26da4:	mov	r0, r8
   26da8:	blx	r5
   26dac:	b	26d84 <fb_scope_table_destroy@@Base+0x50>
   26db0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026db4 <fb_scope_table_init@@Base>:
   26db4:	b	26db8 <fb_scope_table_init@@Base+0x4>
   26db8:	push	{r4, r5, fp, lr}
   26dbc:	add	fp, sp, #8
   26dc0:	mov	r4, r0
   26dc4:	mov	r2, #4
   26dc8:	mov	r0, #179	; 0xb3
   26dcc:	mov	r5, r2
   26dd0:	mul	r3, r2, r0
   26dd4:	lsl	r2, r2, #1
   26dd8:	cmp	r1, r3, lsr #8
   26ddc:	bhi	26dcc <fb_scope_table_init@@Base+0x18>
   26de0:	mov	r0, r5
   26de4:	mov	r1, #4
   26de8:	bl	148f8 <calloc@plt>
   26dec:	str	r0, [r4]
   26df0:	cmp	r0, #0
   26df4:	mvneq	r0, #0
   26df8:	movne	r0, #0
   26dfc:	strne	r0, [r4, #4]
   26e00:	strne	r0, [r4, #8]
   26e04:	strne	r5, [r4, #12]
   26e08:	pop	{r4, r5, fp, pc}

00026e0c <fb_scope_table_resize@@Base>:
   26e0c:	b	26e10 <fb_scope_table_resize@@Base+0x4>
   26e10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26e14:	add	fp, sp, #28
   26e18:	sub	sp, sp, #28
   26e1c:	mov	r4, r0
   26e20:	ldr	r5, [r0]
   26e24:	ldr	r0, [r0, #8]
   26e28:	cmp	r0, r1
   26e2c:	movhi	r1, r0
   26e30:	add	r8, sp, #8
   26e34:	mov	r0, r8
   26e38:	bl	26db8 <fb_scope_table_init@@Base+0x4>
   26e3c:	mov	r1, r0
   26e40:	mvn	r0, #0
   26e44:	cmp	r1, #0
   26e48:	beq	26e54 <fb_scope_table_resize@@Base+0x48>
   26e4c:	sub	sp, fp, #28
   26e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26e54:	ldr	r0, [r4, #12]
   26e58:	cmp	r0, #0
   26e5c:	beq	26eb4 <fb_scope_table_resize@@Base+0xa8>
   26e60:	mov	r6, #0
   26e64:	mov	sl, #3
   26e68:	add	r9, sp, #8
   26e6c:	b	26e80 <fb_scope_table_resize@@Base+0x74>
   26e70:	ldr	r0, [r4, #12]
   26e74:	add	r6, r6, #1
   26e78:	cmp	r6, r0
   26e7c:	bcs	26eb4 <fb_scope_table_resize@@Base+0xa8>
   26e80:	ldr	r7, [r5, r6, lsl #2]
   26e84:	orr	r0, r7, #2
   26e88:	cmp	r0, #2
   26e8c:	beq	26e70 <fb_scope_table_resize@@Base+0x64>
   26e90:	mov	r0, r7
   26e94:	bl	270f0 <fb_scope_table_insert_item@@Base+0x40>
   26e98:	mov	r1, r0
   26e9c:	str	sl, [sp]
   26ea0:	mov	r0, r9
   26ea4:	mov	r2, #0
   26ea8:	mov	r3, r7
   26eac:	bl	26ed4 <fb_scope_table_insert@@Base+0x4>
   26eb0:	b	26e70 <fb_scope_table_resize@@Base+0x64>
   26eb4:	mov	r0, r4
   26eb8:	bl	26d0c <fb_scope_table_clear@@Base+0x4>
   26ebc:	vld1.64	{d16-d17}, [r8]
   26ec0:	vst1.32	{d16-d17}, [r4]
   26ec4:	mov	r0, #0
   26ec8:	sub	sp, fp, #28
   26ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026ed0 <fb_scope_table_insert@@Base>:
   26ed0:	b	26ed4 <fb_scope_table_insert@@Base+0x4>
   26ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ed8:	add	fp, sp, #28
   26edc:	sub	sp, sp, #12
   26ee0:	str	r2, [sp, #8]
   26ee4:	cmp	r3, #2
   26ee8:	beq	27028 <fb_scope_table_insert@@Base+0x158>
   26eec:	mov	r9, r3
   26ef0:	cmp	r3, #1
   26ef4:	beq	27048 <fb_scope_table_insert@@Base+0x178>
   26ef8:	cmp	r9, #0
   26efc:	beq	27068 <fb_scope_table_insert@@Base+0x198>
   26f00:	mov	r7, r1
   26f04:	mov	r5, r0
   26f08:	ldr	r0, [r0, #8]
   26f0c:	ldr	r1, [r5, #12]
   26f10:	mov	r2, #179	; 0xb3
   26f14:	mul	r1, r1, r2
   26f18:	cmp	r0, r1, lsr #8
   26f1c:	bcc	26f34 <fb_scope_table_insert@@Base+0x64>
   26f20:	lsl	r1, r0, #1
   26f24:	mov	r0, r5
   26f28:	bl	26e10 <fb_scope_table_resize@@Base+0x4>
   26f2c:	cmp	r0, #0
   26f30:	bne	27088 <fb_scope_table_insert@@Base+0x1b8>
   26f34:	ldr	sl, [fp, #8]
   26f38:	ldr	r8, [r5]
   26f3c:	ldr	r4, [r5, #12]
   26f40:	mov	r0, r7
   26f44:	ldr	r1, [sp, #8]
   26f48:	bl	27278 <fb_scope_table_visit@@Base+0x4>
   26f4c:	sub	r6, r4, #1
   26f50:	and	r1, r0, r6
   26f54:	orr	r2, sl, #1
   26f58:	cmp	r2, #3
   26f5c:	bne	26f8c <fb_scope_table_insert@@Base+0xbc>
   26f60:	ldr	r2, [r5, #8]
   26f64:	add	r2, r2, #1
   26f68:	str	r2, [r5, #8]
   26f6c:	add	r0, r0, #1
   26f70:	mov	r5, r8
   26f74:	ldr	r1, [r5, r1, lsl #2]!
   26f78:	orr	r1, r1, #2
   26f7c:	cmp	r1, #2
   26f80:	beq	26ff0 <fb_scope_table_insert@@Base+0x120>
   26f84:	and	r1, r0, r6
   26f88:	b	26f6c <fb_scope_table_insert@@Base+0x9c>
   26f8c:	stm	sp, {r5, r9}
   26f90:	add	sl, r0, #1
   26f94:	mov	r9, #0
   26f98:	b	26fac <fb_scope_table_insert@@Base+0xdc>
   26f9c:	cmp	r9, #0
   26fa0:	moveq	r9, r5
   26fa4:	and	r1, sl, r6
   26fa8:	add	sl, sl, #1
   26fac:	mov	r5, r8
   26fb0:	ldr	r4, [r5, r1, lsl #2]!
   26fb4:	cmp	r4, #2
   26fb8:	beq	26f9c <fb_scope_table_insert@@Base+0xcc>
   26fbc:	cmp	r4, #0
   26fc0:	beq	26ff8 <fb_scope_table_insert@@Base+0x128>
   26fc4:	mov	r0, r7
   26fc8:	ldr	r1, [sp, #8]
   26fcc:	mov	r2, r4
   26fd0:	bl	2731c <fb_scope_table_visit@@Base+0xa8>
   26fd4:	cmp	r0, #0
   26fd8:	beq	26fa4 <fb_scope_table_insert@@Base+0xd4>
   26fdc:	ldr	r0, [fp, #8]
   26fe0:	cmp	r0, #0
   26fe4:	ldr	r9, [sp, #4]
   26fe8:	streq	r9, [r5]
   26fec:	b	2701c <fb_scope_table_insert@@Base+0x14c>
   26ff0:	mov	r4, #0
   26ff4:	b	27018 <fb_scope_table_insert@@Base+0x148>
   26ff8:	ldr	r1, [sp]
   26ffc:	ldr	r0, [r1, #8]
   27000:	add	r0, r0, #1
   27004:	str	r0, [r1, #8]
   27008:	cmp	r9, #0
   2700c:	movne	r5, r9
   27010:	mov	r4, #0
   27014:	ldr	r9, [sp, #4]
   27018:	str	r9, [r5]
   2701c:	mov	r0, r4
   27020:	sub	sp, fp, #28
   27024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27028:	movw	r0, #55149	; 0xd76d
   2702c:	movt	r0, #4
   27030:	movw	r1, #54995	; 0xd6d3
   27034:	movt	r1, #4
   27038:	movw	r3, #55075	; 0xd723
   2703c:	movt	r3, #4
   27040:	mov	r2, #115	; 0x73
   27044:	bl	14ab4 <__assert_fail@plt>
   27048:	movw	r0, #55172	; 0xd784
   2704c:	movt	r0, #4
   27050:	movw	r1, #54995	; 0xd6d3
   27054:	movt	r1, #4
   27058:	movw	r3, #55075	; 0xd723
   2705c:	movt	r3, #4
   27060:	mov	r2, #116	; 0x74
   27064:	bl	14ab4 <__assert_fail@plt>
   27068:	movw	r0, #54972	; 0xd6bc
   2706c:	movt	r0, #4
   27070:	movw	r1, #54995	; 0xd6d3
   27074:	movt	r1, #4
   27078:	movw	r3, #55075	; 0xd723
   2707c:	movt	r3, #4
   27080:	mov	r2, #114	; 0x72
   27084:	bl	14ab4 <__assert_fail@plt>
   27088:	movw	r0, #8368	; 0x20b0
   2708c:	movt	r0, #6
   27090:	ldr	r0, [r0]
   27094:	movw	r1, #55193	; 0xd799
   27098:	movt	r1, #4
   2709c:	movw	r2, #55216	; 0xd7b0
   270a0:	movt	r2, #4
   270a4:	bl	149f4 <fprintf@plt>
   270a8:	mov	r0, #1
   270ac:	bl	149c4 <exit@plt>

000270b0 <fb_scope_table_insert_item@@Base>:
   270b0:	push	{r4, r5, r6, sl, fp, lr}
   270b4:	add	fp, sp, #16
   270b8:	sub	sp, sp, #8
   270bc:	mov	r4, r2
   270c0:	mov	r5, r1
   270c4:	mov	r6, r0
   270c8:	mov	r0, r1
   270cc:	bl	270f0 <fb_scope_table_insert_item@@Base+0x40>
   270d0:	mov	r1, r0
   270d4:	str	r4, [sp]
   270d8:	mov	r0, r6
   270dc:	mov	r2, #0
   270e0:	mov	r3, r5
   270e4:	bl	26ed4 <fb_scope_table_insert@@Base+0x4>
   270e8:	sub	sp, fp, #16
   270ec:	pop	{r4, r5, r6, sl, fp, pc}
   270f0:	ldr	r0, [r0]
   270f4:	bx	lr

000270f8 <fb_scope_table_find@@Base>:
   270f8:	b	270fc <fb_scope_table_find@@Base+0x4>
   270fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27100:	add	fp, sp, #24
   27104:	ldr	r4, [r0]
   27108:	cmp	r4, #0
   2710c:	beq	27170 <fb_scope_table_find@@Base+0x78>
   27110:	mov	r8, r2
   27114:	mov	r9, r1
   27118:	ldr	r5, [r0, #12]
   2711c:	mov	r0, r1
   27120:	mov	r1, r2
   27124:	bl	27278 <fb_scope_table_visit@@Base+0x4>
   27128:	mov	r6, r0
   2712c:	sub	r5, r5, #1
   27130:	b	27138 <fb_scope_table_find@@Base+0x40>
   27134:	add	r6, r6, #1
   27138:	and	r0, r6, r5
   2713c:	ldr	r7, [r4, r0, lsl #2]
   27140:	cmp	r7, #2
   27144:	beq	27134 <fb_scope_table_find@@Base+0x3c>
   27148:	cmp	r7, #0
   2714c:	beq	27170 <fb_scope_table_find@@Base+0x78>
   27150:	mov	r0, r9
   27154:	mov	r1, r8
   27158:	mov	r2, r7
   2715c:	bl	2731c <fb_scope_table_visit@@Base+0xa8>
   27160:	cmp	r0, #0
   27164:	beq	27134 <fb_scope_table_find@@Base+0x3c>
   27168:	mov	r0, r7
   2716c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   27170:	mov	r7, #0
   27174:	mov	r0, r7
   27178:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002717c <fb_scope_table_find_item@@Base>:
   2717c:	push	{r4, sl, fp, lr}
   27180:	add	fp, sp, #8
   27184:	mov	r4, r0
   27188:	mov	r0, r1
   2718c:	bl	270f0 <fb_scope_table_insert_item@@Base+0x40>
   27190:	mov	r1, r0
   27194:	mov	r0, r4
   27198:	mov	r2, #0
   2719c:	pop	{r4, sl, fp, lr}
   271a0:	b	270fc <fb_scope_table_find@@Base+0x4>

000271a4 <fb_scope_table_remove@@Base>:
   271a4:	b	271a8 <fb_scope_table_remove@@Base+0x4>
   271a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   271ac:	add	fp, sp, #28
   271b0:	sub	sp, sp, #4
   271b4:	ldr	r5, [r0]
   271b8:	mov	r7, #0
   271bc:	cmp	r5, #0
   271c0:	beq	27240 <fb_scope_table_remove@@Base+0x9c>
   271c4:	mov	r9, r2
   271c8:	mov	sl, r1
   271cc:	str	r0, [sp]
   271d0:	ldr	r6, [r0, #12]
   271d4:	mov	r0, r1
   271d8:	mov	r1, r2
   271dc:	bl	27278 <fb_scope_table_visit@@Base+0x4>
   271e0:	mov	r4, r0
   271e4:	sub	r6, r6, #1
   271e8:	b	271f0 <fb_scope_table_remove@@Base+0x4c>
   271ec:	add	r4, r4, #1
   271f0:	and	r8, r4, r6
   271f4:	ldr	r7, [r5, r8, lsl #2]
   271f8:	cmp	r7, #2
   271fc:	beq	271ec <fb_scope_table_remove@@Base+0x48>
   27200:	cmp	r7, #0
   27204:	beq	2723c <fb_scope_table_remove@@Base+0x98>
   27208:	mov	r0, sl
   2720c:	mov	r1, r9
   27210:	mov	r2, r7
   27214:	bl	2731c <fb_scope_table_visit@@Base+0xa8>
   27218:	cmp	r0, #0
   2721c:	beq	271ec <fb_scope_table_remove@@Base+0x48>
   27220:	mov	r0, #2
   27224:	str	r0, [r5, r8, lsl #2]
   27228:	ldr	r1, [sp]
   2722c:	ldr	r0, [r1, #8]
   27230:	sub	r0, r0, #1
   27234:	str	r0, [r1, #8]
   27238:	b	27240 <fb_scope_table_remove@@Base+0x9c>
   2723c:	mov	r7, #0
   27240:	mov	r0, r7
   27244:	sub	sp, fp, #28
   27248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002724c <fb_scope_table_remove_item@@Base>:
   2724c:	push	{r4, sl, fp, lr}
   27250:	add	fp, sp, #8
   27254:	mov	r4, r0
   27258:	mov	r0, r1
   2725c:	bl	270f0 <fb_scope_table_insert_item@@Base+0x40>
   27260:	mov	r1, r0
   27264:	mov	r0, r4
   27268:	mov	r2, #0
   2726c:	pop	{r4, sl, fp, lr}
   27270:	b	271a8 <fb_scope_table_remove@@Base+0x4>

00027274 <fb_scope_table_visit@@Base>:
   27274:	b	26d58 <fb_scope_table_destroy@@Base+0x24>
   27278:	push	{r4, r5, r6, r7, fp, lr}
   2727c:	add	fp, sp, #16
   27280:	mov	r4, r1
   27284:	mov	r5, r0
   27288:	mov	r6, #0
   2728c:	cmp	r1, #1
   27290:	blt	272e8 <fb_scope_table_visit@@Base+0x74>
   27294:	cmp	r4, #0
   27298:	mov	r7, #0
   2729c:	beq	272b8 <fb_scope_table_visit@@Base+0x44>
   272a0:	mov	r7, #0
   272a4:	ldrb	r0, [r5, r7]
   272a8:	cmp	r0, #46	; 0x2e
   272ac:	addne	r7, r7, #1
   272b0:	cmpne	r4, r7
   272b4:	bne	272a4 <fb_scope_table_visit@@Base+0x30>
   272b8:	mov	r0, r5
   272bc:	mov	r1, r7
   272c0:	bl	27440 <fb_scope_table_visit@@Base+0x1cc>
   272c4:	eor	r0, r0, r6
   272c8:	bl	27478 <fb_scope_table_visit@@Base+0x204>
   272cc:	mov	r6, r0
   272d0:	cmp	r7, r4
   272d4:	beq	27314 <fb_scope_table_visit@@Base+0xa0>
   272d8:	add	r0, r7, #1
   272dc:	add	r5, r5, r0
   272e0:	sub	r4, r4, r0
   272e4:	b	27294 <fb_scope_table_visit@@Base+0x20>
   272e8:	cmp	r5, #0
   272ec:	beq	27314 <fb_scope_table_visit@@Base+0xa0>
   272f0:	ldr	r1, [r5, #4]
   272f4:	ldm	r1, {r0, r1}
   272f8:	bl	27440 <fb_scope_table_visit@@Base+0x1cc>
   272fc:	eor	r0, r0, r6
   27300:	bl	27478 <fb_scope_table_visit@@Base+0x204>
   27304:	mov	r6, r0
   27308:	adds	r4, r4, #1
   2730c:	ldr	r5, [r5]
   27310:	bcc	272e8 <fb_scope_table_visit@@Base+0x74>
   27314:	mov	r0, r6
   27318:	pop	{r4, r5, r6, r7, fp, pc}
   2731c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27320:	add	fp, sp, #24
   27324:	mov	r5, r1
   27328:	mov	r4, r0
   2732c:	ldr	r7, [r2]
   27330:	cmp	r1, #1
   27334:	blt	273bc <fb_scope_table_visit@@Base+0x148>
   27338:	cmp	r7, #0
   2733c:	beq	2742c <fb_scope_table_visit@@Base+0x1b8>
   27340:	ldr	r1, [r7, #4]
   27344:	ldr	r0, [r1, #4]
   27348:	cmp	r0, r5
   2734c:	bhi	2742c <fb_scope_table_visit@@Base+0x1b8>
   27350:	cmp	r0, #0
   27354:	beq	27384 <fb_scope_table_visit@@Base+0x110>
   27358:	ldr	r2, [r1]
   2735c:	mov	r8, #0
   27360:	mov	r1, #0
   27364:	ldrb	r3, [r4, r1]
   27368:	ldrb	r6, [r2, r1]
   2736c:	cmp	r6, r3
   27370:	bne	27410 <fb_scope_table_visit@@Base+0x19c>
   27374:	add	r1, r1, #1
   27378:	cmp	r0, r1
   2737c:	bne	27364 <fb_scope_table_visit@@Base+0xf0>
   27380:	b	27388 <fb_scope_table_visit@@Base+0x114>
   27384:	mov	r1, #0
   27388:	cmp	r0, r5
   2738c:	beq	27438 <fb_scope_table_visit@@Base+0x1c4>
   27390:	ldrb	r1, [r4, r1]
   27394:	mov	r8, #0
   27398:	cmp	r1, #46	; 0x2e
   2739c:	bne	27410 <fb_scope_table_visit@@Base+0x19c>
   273a0:	add	r0, r0, #1
   273a4:	add	r4, r4, r0
   273a8:	sub	r5, r5, r0
   273ac:	ldr	r7, [r7]
   273b0:	cmp	r7, #0
   273b4:	bne	27340 <fb_scope_table_visit@@Base+0xcc>
   273b8:	b	27410 <fb_scope_table_visit@@Base+0x19c>
   273bc:	mov	r8, #0
   273c0:	cmp	r7, #0
   273c4:	cmpne	r4, #0
   273c8:	beq	27418 <fb_scope_table_visit@@Base+0x1a4>
   273cc:	ldr	r0, [r7, #4]
   273d0:	ldr	r2, [r0, #4]
   273d4:	ldr	r1, [r4, #4]
   273d8:	ldr	r3, [r1, #4]
   273dc:	cmp	r2, r3
   273e0:	bne	27410 <fb_scope_table_visit@@Base+0x19c>
   273e4:	ldr	r1, [r1]
   273e8:	ldr	r0, [r0]
   273ec:	bl	14a9c <strncmp@plt>
   273f0:	cmp	r0, #0
   273f4:	bne	27410 <fb_scope_table_visit@@Base+0x19c>
   273f8:	adds	r5, r5, #1
   273fc:	ldr	r4, [r4]
   27400:	ldr	r7, [r7]
   27404:	bcc	273c0 <fb_scope_table_visit@@Base+0x14c>
   27408:	clz	r0, r7
   2740c:	b	27420 <fb_scope_table_visit@@Base+0x1ac>
   27410:	mov	r0, r8
   27414:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27418:	orr	r0, r7, r4
   2741c:	clz	r0, r0
   27420:	lsr	r8, r0, #5
   27424:	mov	r0, r8
   27428:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2742c:	mov	r8, #0
   27430:	mov	r0, r8
   27434:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27438:	ldr	r0, [r7]
   2743c:	b	2741c <fb_scope_table_visit@@Base+0x1a8>
   27440:	mov	r2, r0
   27444:	subs	r1, r1, #1
   27448:	movw	r0, #11863	; 0x2e57
   2744c:	movt	r0, #12137	; 0x2f69
   27450:	beq	27474 <fb_scope_table_visit@@Base+0x200>
   27454:	ldrb	r3, [r2]
   27458:	cmp	r3, #0
   2745c:	bxeq	lr
   27460:	add	r0, r0, r0, lsl #5
   27464:	eor	r0, r0, r3
   27468:	subs	r1, r1, #1
   2746c:	add	r2, r2, #1
   27470:	bne	27454 <fb_scope_table_visit@@Base+0x1e0>
   27474:	bx	lr
   27478:	movw	r1, #15186	; 0x3b52
   2747c:	movt	r1, #12137	; 0x2f69
   27480:	eor	r0, r0, r1
   27484:	movw	r1, #31153	; 0x79b1
   27488:	movt	r1, #40503	; 0x9e37
   2748c:	mul	r0, r0, r1
   27490:	bx	lr

00027494 <fb_schema_table_clear@@Base>:
   27494:	b	27498 <fb_schema_table_clear@@Base+0x4>
   27498:	push	{r4, sl, fp, lr}
   2749c:	add	fp, sp, #8
   274a0:	mov	r4, r0
   274a4:	ldr	r0, [r0]
   274a8:	cmp	r0, #0
   274ac:	beq	274b4 <fb_schema_table_clear@@Base+0x20>
   274b0:	bl	14928 <free@plt>
   274b4:	vmov.i32	q8, #0	; 0x00000000
   274b8:	vst1.32	{d16-d17}, [r4]
   274bc:	pop	{r4, sl, fp, pc}

000274c0 <fb_schema_table_destroy@@Base>:
   274c0:	push	{r4, sl, fp, lr}
   274c4:	add	fp, sp, #8
   274c8:	mov	r4, r0
   274cc:	cmp	r1, #0
   274d0:	movne	r0, r4
   274d4:	blne	274e4 <fb_schema_table_destroy@@Base+0x24>
   274d8:	mov	r0, r4
   274dc:	pop	{r4, sl, fp, lr}
   274e0:	b	27498 <fb_schema_table_clear@@Base+0x4>
   274e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   274e8:	add	fp, sp, #24
   274ec:	mov	r6, r0
   274f0:	ldr	r0, [r0, #12]
   274f4:	cmp	r0, #0
   274f8:	beq	2753c <fb_schema_table_destroy@@Base+0x7c>
   274fc:	mov	r8, r2
   27500:	mov	r5, r1
   27504:	ldr	r7, [r6]
   27508:	mov	r4, #0
   2750c:	b	27520 <fb_schema_table_destroy@@Base+0x60>
   27510:	ldr	r0, [r6, #12]
   27514:	add	r4, r4, #1
   27518:	cmp	r4, r0
   2751c:	bcs	2753c <fb_schema_table_destroy@@Base+0x7c>
   27520:	ldr	r1, [r7, r4, lsl #2]
   27524:	orr	r0, r1, #2
   27528:	cmp	r0, #2
   2752c:	beq	27510 <fb_schema_table_destroy@@Base+0x50>
   27530:	mov	r0, r8
   27534:	blx	r5
   27538:	b	27510 <fb_schema_table_destroy@@Base+0x50>
   2753c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00027540 <fb_schema_table_init@@Base>:
   27540:	b	27544 <fb_schema_table_init@@Base+0x4>
   27544:	push	{r4, r5, fp, lr}
   27548:	add	fp, sp, #8
   2754c:	mov	r4, r0
   27550:	mov	r2, #4
   27554:	mov	r0, #179	; 0xb3
   27558:	mov	r5, r2
   2755c:	mul	r3, r2, r0
   27560:	lsl	r2, r2, #1
   27564:	cmp	r1, r3, lsr #8
   27568:	bhi	27558 <fb_schema_table_init@@Base+0x18>
   2756c:	mov	r0, r5
   27570:	mov	r1, #4
   27574:	bl	148f8 <calloc@plt>
   27578:	str	r0, [r4]
   2757c:	cmp	r0, #0
   27580:	mvneq	r0, #0
   27584:	movne	r0, #0
   27588:	strne	r0, [r4, #4]
   2758c:	strne	r0, [r4, #8]
   27590:	strne	r5, [r4, #12]
   27594:	pop	{r4, r5, fp, pc}

00027598 <fb_schema_table_resize@@Base>:
   27598:	b	2759c <fb_schema_table_resize@@Base+0x4>
   2759c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   275a0:	add	fp, sp, #28
   275a4:	sub	sp, sp, #28
   275a8:	mov	r4, r0
   275ac:	ldr	sl, [r0]
   275b0:	ldr	r0, [r0, #8]
   275b4:	cmp	r0, r1
   275b8:	movhi	r1, r0
   275bc:	add	r0, sp, #8
   275c0:	bl	27544 <fb_schema_table_init@@Base+0x4>
   275c4:	mov	r1, r0
   275c8:	mvn	r0, #0
   275cc:	cmp	r1, #0
   275d0:	beq	275dc <fb_schema_table_resize@@Base+0x44>
   275d4:	sub	sp, fp, #28
   275d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   275dc:	ldr	r0, [r4, #12]
   275e0:	cmp	r0, #0
   275e4:	beq	27648 <fb_schema_table_resize@@Base+0xb0>
   275e8:	mov	r6, #0
   275ec:	mov	r8, #3
   275f0:	add	r9, sp, #8
   275f4:	b	27608 <fb_schema_table_resize@@Base+0x70>
   275f8:	ldr	r0, [r4, #12]
   275fc:	add	r6, r6, #1
   27600:	cmp	r6, r0
   27604:	bcs	27648 <fb_schema_table_resize@@Base+0xb0>
   27608:	ldr	r7, [sl, r6, lsl #2]
   2760c:	orr	r0, r7, #2
   27610:	cmp	r0, #2
   27614:	beq	275f8 <fb_schema_table_resize@@Base+0x60>
   27618:	mov	r0, r7
   2761c:	bl	27894 <fb_schema_table_insert_item@@Base+0x4c>
   27620:	mov	r5, r0
   27624:	mov	r0, r7
   27628:	bl	2789c <fb_schema_table_insert_item@@Base+0x54>
   2762c:	mov	r2, r0
   27630:	str	r8, [sp]
   27634:	mov	r0, r9
   27638:	mov	r1, r5
   2763c:	mov	r3, r7
   27640:	bl	2766c <fb_schema_table_insert@@Base+0x4>
   27644:	b	275f8 <fb_schema_table_resize@@Base+0x60>
   27648:	mov	r0, r4
   2764c:	bl	27498 <fb_schema_table_clear@@Base+0x4>
   27650:	add	r0, sp, #8
   27654:	vld1.64	{d16-d17}, [r0]
   27658:	vst1.32	{d16-d17}, [r4]
   2765c:	mov	r0, #0
   27660:	sub	sp, fp, #28
   27664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00027668 <fb_schema_table_insert@@Base>:
   27668:	b	2766c <fb_schema_table_insert@@Base+0x4>
   2766c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27670:	add	fp, sp, #28
   27674:	sub	sp, sp, #12
   27678:	str	r2, [sp, #8]
   2767c:	cmp	r3, #2
   27680:	beq	277c0 <fb_schema_table_insert@@Base+0x158>
   27684:	mov	r9, r3
   27688:	cmp	r3, #1
   2768c:	beq	277e0 <fb_schema_table_insert@@Base+0x178>
   27690:	cmp	r9, #0
   27694:	beq	27800 <fb_schema_table_insert@@Base+0x198>
   27698:	mov	r7, r1
   2769c:	mov	r5, r0
   276a0:	ldr	r0, [r0, #8]
   276a4:	ldr	r1, [r5, #12]
   276a8:	mov	r2, #179	; 0xb3
   276ac:	mul	r1, r1, r2
   276b0:	cmp	r0, r1, lsr #8
   276b4:	bcc	276cc <fb_schema_table_insert@@Base+0x64>
   276b8:	lsl	r1, r0, #1
   276bc:	mov	r0, r5
   276c0:	bl	2759c <fb_schema_table_resize@@Base+0x4>
   276c4:	cmp	r0, #0
   276c8:	bne	27820 <fb_schema_table_insert@@Base+0x1b8>
   276cc:	ldr	sl, [fp, #8]
   276d0:	ldr	r8, [r5]
   276d4:	ldr	r4, [r5, #12]
   276d8:	mov	r0, r7
   276dc:	ldr	r1, [sp, #8]
   276e0:	bl	27a44 <fb_schema_table_visit@@Base+0x4>
   276e4:	sub	r6, r4, #1
   276e8:	and	r1, r0, r6
   276ec:	orr	r2, sl, #1
   276f0:	cmp	r2, #3
   276f4:	bne	27724 <fb_schema_table_insert@@Base+0xbc>
   276f8:	ldr	r2, [r5, #8]
   276fc:	add	r2, r2, #1
   27700:	str	r2, [r5, #8]
   27704:	add	r0, r0, #1
   27708:	mov	r5, r8
   2770c:	ldr	r1, [r5, r1, lsl #2]!
   27710:	orr	r1, r1, #2
   27714:	cmp	r1, #2
   27718:	beq	27788 <fb_schema_table_insert@@Base+0x120>
   2771c:	and	r1, r0, r6
   27720:	b	27704 <fb_schema_table_insert@@Base+0x9c>
   27724:	stm	sp, {r5, r9}
   27728:	add	sl, r0, #1
   2772c:	mov	r9, #0
   27730:	b	27744 <fb_schema_table_insert@@Base+0xdc>
   27734:	cmp	r9, #0
   27738:	moveq	r9, r5
   2773c:	and	r1, sl, r6
   27740:	add	sl, sl, #1
   27744:	mov	r5, r8
   27748:	ldr	r4, [r5, r1, lsl #2]!
   2774c:	cmp	r4, #2
   27750:	beq	27734 <fb_schema_table_insert@@Base+0xcc>
   27754:	cmp	r4, #0
   27758:	beq	27790 <fb_schema_table_insert@@Base+0x128>
   2775c:	mov	r0, r7
   27760:	ldr	r1, [sp, #8]
   27764:	mov	r2, r4
   27768:	bl	27a7c <fb_schema_table_visit@@Base+0x3c>
   2776c:	cmp	r0, #0
   27770:	beq	2773c <fb_schema_table_insert@@Base+0xd4>
   27774:	ldr	r0, [fp, #8]
   27778:	cmp	r0, #0
   2777c:	ldr	r9, [sp, #4]
   27780:	streq	r9, [r5]
   27784:	b	277b4 <fb_schema_table_insert@@Base+0x14c>
   27788:	mov	r4, #0
   2778c:	b	277b0 <fb_schema_table_insert@@Base+0x148>
   27790:	ldr	r1, [sp]
   27794:	ldr	r0, [r1, #8]
   27798:	add	r0, r0, #1
   2779c:	str	r0, [r1, #8]
   277a0:	cmp	r9, #0
   277a4:	movne	r5, r9
   277a8:	mov	r4, #0
   277ac:	ldr	r9, [sp, #4]
   277b0:	str	r9, [r5]
   277b4:	mov	r0, r4
   277b8:	sub	sp, fp, #28
   277bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277c0:	movw	r0, #55149	; 0xd76d
   277c4:	movt	r0, #4
   277c8:	movw	r1, #54995	; 0xd6d3
   277cc:	movt	r1, #4
   277d0:	movw	r3, #55075	; 0xd723
   277d4:	movt	r3, #4
   277d8:	mov	r2, #115	; 0x73
   277dc:	bl	14ab4 <__assert_fail@plt>
   277e0:	movw	r0, #55172	; 0xd784
   277e4:	movt	r0, #4
   277e8:	movw	r1, #54995	; 0xd6d3
   277ec:	movt	r1, #4
   277f0:	movw	r3, #55075	; 0xd723
   277f4:	movt	r3, #4
   277f8:	mov	r2, #116	; 0x74
   277fc:	bl	14ab4 <__assert_fail@plt>
   27800:	movw	r0, #54972	; 0xd6bc
   27804:	movt	r0, #4
   27808:	movw	r1, #54995	; 0xd6d3
   2780c:	movt	r1, #4
   27810:	movw	r3, #55075	; 0xd723
   27814:	movt	r3, #4
   27818:	mov	r2, #114	; 0x72
   2781c:	bl	14ab4 <__assert_fail@plt>
   27820:	movw	r0, #8368	; 0x20b0
   27824:	movt	r0, #6
   27828:	ldr	r0, [r0]
   2782c:	movw	r1, #55193	; 0xd799
   27830:	movt	r1, #4
   27834:	movw	r2, #55216	; 0xd7b0
   27838:	movt	r2, #4
   2783c:	bl	149f4 <fprintf@plt>
   27840:	mov	r0, #1
   27844:	bl	149c4 <exit@plt>

00027848 <fb_schema_table_insert_item@@Base>:
   27848:	push	{r4, r5, r6, r7, fp, lr}
   2784c:	add	fp, sp, #16
   27850:	sub	sp, sp, #8
   27854:	mov	r4, r2
   27858:	mov	r5, r1
   2785c:	mov	r6, r0
   27860:	mov	r0, r1
   27864:	bl	27894 <fb_schema_table_insert_item@@Base+0x4c>
   27868:	mov	r7, r0
   2786c:	mov	r0, r5
   27870:	bl	2789c <fb_schema_table_insert_item@@Base+0x54>
   27874:	mov	r2, r0
   27878:	str	r4, [sp]
   2787c:	mov	r0, r6
   27880:	mov	r1, r7
   27884:	mov	r3, r5
   27888:	bl	2766c <fb_schema_table_insert@@Base+0x4>
   2788c:	sub	sp, fp, #16
   27890:	pop	{r4, r5, r6, r7, fp, pc}
   27894:	ldr	r0, [r0, #144]	; 0x90
   27898:	bx	lr
   2789c:	ldr	r0, [r0, #148]	; 0x94
   278a0:	bx	lr

000278a4 <fb_schema_table_find@@Base>:
   278a4:	b	278a8 <fb_schema_table_find@@Base+0x4>
   278a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   278ac:	add	fp, sp, #24
   278b0:	ldr	r4, [r0]
   278b4:	cmp	r4, #0
   278b8:	beq	2791c <fb_schema_table_find@@Base+0x78>
   278bc:	mov	r8, r2
   278c0:	mov	r9, r1
   278c4:	ldr	r5, [r0, #12]
   278c8:	mov	r0, r1
   278cc:	mov	r1, r2
   278d0:	bl	27a44 <fb_schema_table_visit@@Base+0x4>
   278d4:	mov	r6, r0
   278d8:	sub	r5, r5, #1
   278dc:	b	278e4 <fb_schema_table_find@@Base+0x40>
   278e0:	add	r6, r6, #1
   278e4:	and	r0, r6, r5
   278e8:	ldr	r7, [r4, r0, lsl #2]
   278ec:	cmp	r7, #2
   278f0:	beq	278e0 <fb_schema_table_find@@Base+0x3c>
   278f4:	cmp	r7, #0
   278f8:	beq	2791c <fb_schema_table_find@@Base+0x78>
   278fc:	mov	r0, r9
   27900:	mov	r1, r8
   27904:	mov	r2, r7
   27908:	bl	27a7c <fb_schema_table_visit@@Base+0x3c>
   2790c:	cmp	r0, #0
   27910:	beq	278e0 <fb_schema_table_find@@Base+0x3c>
   27914:	mov	r0, r7
   27918:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2791c:	mov	r7, #0
   27920:	mov	r0, r7
   27924:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027928 <fb_schema_table_find_item@@Base>:
   27928:	push	{r4, r5, r6, sl, fp, lr}
   2792c:	add	fp, sp, #16
   27930:	mov	r4, r1
   27934:	mov	r5, r0
   27938:	mov	r0, r1
   2793c:	bl	27894 <fb_schema_table_insert_item@@Base+0x4c>
   27940:	mov	r6, r0
   27944:	mov	r0, r4
   27948:	bl	2789c <fb_schema_table_insert_item@@Base+0x54>
   2794c:	mov	r2, r0
   27950:	mov	r0, r5
   27954:	mov	r1, r6
   27958:	pop	{r4, r5, r6, sl, fp, lr}
   2795c:	b	278a8 <fb_schema_table_find@@Base+0x4>

00027960 <fb_schema_table_remove@@Base>:
   27960:	b	27964 <fb_schema_table_remove@@Base+0x4>
   27964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27968:	add	fp, sp, #28
   2796c:	sub	sp, sp, #4
   27970:	ldr	r5, [r0]
   27974:	mov	r7, #0
   27978:	cmp	r5, #0
   2797c:	beq	279fc <fb_schema_table_remove@@Base+0x9c>
   27980:	mov	r9, r2
   27984:	mov	sl, r1
   27988:	str	r0, [sp]
   2798c:	ldr	r6, [r0, #12]
   27990:	mov	r0, r1
   27994:	mov	r1, r2
   27998:	bl	27a44 <fb_schema_table_visit@@Base+0x4>
   2799c:	mov	r4, r0
   279a0:	sub	r6, r6, #1
   279a4:	b	279ac <fb_schema_table_remove@@Base+0x4c>
   279a8:	add	r4, r4, #1
   279ac:	and	r8, r4, r6
   279b0:	ldr	r7, [r5, r8, lsl #2]
   279b4:	cmp	r7, #2
   279b8:	beq	279a8 <fb_schema_table_remove@@Base+0x48>
   279bc:	cmp	r7, #0
   279c0:	beq	279f8 <fb_schema_table_remove@@Base+0x98>
   279c4:	mov	r0, sl
   279c8:	mov	r1, r9
   279cc:	mov	r2, r7
   279d0:	bl	27a7c <fb_schema_table_visit@@Base+0x3c>
   279d4:	cmp	r0, #0
   279d8:	beq	279a8 <fb_schema_table_remove@@Base+0x48>
   279dc:	mov	r0, #2
   279e0:	str	r0, [r5, r8, lsl #2]
   279e4:	ldr	r1, [sp]
   279e8:	ldr	r0, [r1, #8]
   279ec:	sub	r0, r0, #1
   279f0:	str	r0, [r1, #8]
   279f4:	b	279fc <fb_schema_table_remove@@Base+0x9c>
   279f8:	mov	r7, #0
   279fc:	mov	r0, r7
   27a00:	sub	sp, fp, #28
   27a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00027a08 <fb_schema_table_remove_item@@Base>:
   27a08:	push	{r4, r5, r6, sl, fp, lr}
   27a0c:	add	fp, sp, #16
   27a10:	mov	r4, r1
   27a14:	mov	r5, r0
   27a18:	mov	r0, r1
   27a1c:	bl	27894 <fb_schema_table_insert_item@@Base+0x4c>
   27a20:	mov	r6, r0
   27a24:	mov	r0, r4
   27a28:	bl	2789c <fb_schema_table_insert_item@@Base+0x54>
   27a2c:	mov	r2, r0
   27a30:	mov	r0, r5
   27a34:	mov	r1, r6
   27a38:	pop	{r4, r5, r6, sl, fp, lr}
   27a3c:	b	27964 <fb_schema_table_remove@@Base+0x4>

00027a40 <fb_schema_table_visit@@Base>:
   27a40:	b	274e4 <fb_schema_table_destroy@@Base+0x24>
   27a44:	push	{fp, lr}
   27a48:	mov	fp, sp
   27a4c:	sub	sp, sp, #16
   27a50:	add	r2, sp, #8
   27a54:	movw	r3, #15186	; 0x3b52
   27a58:	movt	r3, #12137	; 0x2f69
   27a5c:	str	r3, [sp]
   27a60:	str	r2, [sp, #4]
   27a64:	mov	r2, r1
   27a68:	mov	r3, #0
   27a6c:	bl	32b84 <cmetrohash64_1@@Base>
   27a70:	ldr	r0, [sp, #8]
   27a74:	mov	sp, fp
   27a78:	pop	{fp, pc}
   27a7c:	push	{fp, lr}
   27a80:	mov	fp, sp
   27a84:	mov	ip, r1
   27a88:	ldr	r3, [r2, #148]	; 0x94
   27a8c:	mov	r1, #0
   27a90:	cmp	r3, ip
   27a94:	bne	27aac <fb_schema_table_visit@@Base+0x6c>
   27a98:	ldr	r1, [r2, #144]	; 0x90
   27a9c:	mov	r2, ip
   27aa0:	bl	149d0 <bcmp@plt>
   27aa4:	clz	r0, r0
   27aa8:	lsr	r1, r0, #5
   27aac:	mov	r0, r1
   27ab0:	pop	{fp, pc}

00027ab4 <__flatcc_fb_copy_path_n@@Base>:
   27ab4:	push	{r4, r5, r6, sl, fp, lr}
   27ab8:	add	fp, sp, #16
   27abc:	mov	r4, r0
   27ac0:	bl	27afc <__flatcc_fb_copy_path_n@@Base+0x48>
   27ac4:	mov	r5, r0
   27ac8:	add	r0, r0, #1
   27acc:	bl	14994 <malloc@plt>
   27ad0:	mov	r6, r0
   27ad4:	cmp	r0, #0
   27ad8:	beq	27af4 <__flatcc_fb_copy_path_n@@Base+0x40>
   27adc:	mov	r0, r6
   27ae0:	mov	r1, r4
   27ae4:	mov	r2, r5
   27ae8:	bl	14934 <memcpy@plt>
   27aec:	mov	r0, #0
   27af0:	strb	r0, [r6, r5]
   27af4:	mov	r0, r6
   27af8:	pop	{r4, r5, r6, sl, fp, pc}
   27afc:	push	{r4, r5, fp, lr}
   27b00:	add	fp, sp, #8
   27b04:	mov	r4, r1
   27b08:	mov	r5, r0
   27b0c:	mov	r1, #0
   27b10:	mov	r2, r4
   27b14:	bl	14a30 <memchr@plt>
   27b18:	cmp	r0, #0
   27b1c:	subne	r4, r0, r5
   27b20:	mov	r0, r4
   27b24:	pop	{r4, r5, fp, pc}

00027b28 <__flatcc_fb_copy_path@@Base>:
   27b28:	push	{r4, r5, r6, sl, fp, lr}
   27b2c:	add	fp, sp, #16
   27b30:	mov	r5, r0
   27b34:	bl	149dc <strlen@plt>
   27b38:	mov	r4, r0
   27b3c:	add	r0, r0, #1
   27b40:	bl	14994 <malloc@plt>
   27b44:	mov	r6, r0
   27b48:	cmp	r0, #0
   27b4c:	beq	27b68 <__flatcc_fb_copy_path@@Base+0x40>
   27b50:	mov	r0, r6
   27b54:	mov	r1, r5
   27b58:	mov	r2, r4
   27b5c:	bl	14934 <memcpy@plt>
   27b60:	mov	r0, #0
   27b64:	strb	r0, [r6, r4]
   27b68:	mov	r0, r6
   27b6c:	pop	{r4, r5, r6, sl, fp, pc}

00027b70 <__flatcc_fb_chomp@@Base>:
   27b70:	push	{r4, r5, r6, r7, fp, lr}
   27b74:	add	fp, sp, #16
   27b78:	mov	r5, r2
   27b7c:	mov	r4, r1
   27b80:	mov	r7, r0
   27b84:	cmp	r2, #0
   27b88:	beq	27bc4 <__flatcc_fb_chomp@@Base+0x54>
   27b8c:	mov	r0, r5
   27b90:	bl	149dc <strlen@plt>
   27b94:	mov	r6, r0
   27b98:	cmp	r6, r4
   27b9c:	bcs	27bbc <__flatcc_fb_chomp@@Base+0x4c>
   27ba0:	add	r0, r7, r4
   27ba4:	sub	r0, r0, r6
   27ba8:	mov	r1, r5
   27bac:	mov	r2, r6
   27bb0:	bl	14a9c <strncmp@plt>
   27bb4:	cmp	r0, #0
   27bb8:	subeq	r4, r4, r6
   27bbc:	mov	r0, r4
   27bc0:	pop	{r4, r5, r6, r7, fp, pc}
   27bc4:	mov	r6, #0
   27bc8:	cmp	r6, r4
   27bcc:	bcc	27ba0 <__flatcc_fb_chomp@@Base+0x30>
   27bd0:	b	27bbc <__flatcc_fb_chomp@@Base+0x4c>

00027bd4 <__flatcc_fb_create_join_path_n@@Base>:
   27bd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27bd8:	add	fp, sp, #28
   27bdc:	sub	sp, sp, #4
   27be0:	mov	r4, r3
   27be4:	mov	r9, r2
   27be8:	mov	r6, r1
   27bec:	mov	r7, r0
   27bf0:	ldr	r0, [fp, #8]
   27bf4:	cmp	r0, #0
   27bf8:	beq	27c08 <__flatcc_fb_create_join_path_n@@Base+0x34>
   27bfc:	bl	149dc <strlen@plt>
   27c00:	mov	sl, r0
   27c04:	b	27c0c <__flatcc_fb_create_join_path_n@@Base+0x38>
   27c08:	mov	sl, #0
   27c0c:	ldr	r8, [fp, #12]
   27c10:	cmp	r7, #0
   27c14:	beq	27c30 <__flatcc_fb_create_join_path_n@@Base+0x5c>
   27c18:	cmp	r4, #0
   27c1c:	beq	27c34 <__flatcc_fb_create_join_path_n@@Base+0x60>
   27c20:	ldrb	r0, [r9]
   27c24:	cmp	r0, #47	; 0x2f
   27c28:	cmpne	r0, #92	; 0x5c
   27c2c:	bne	27cd8 <__flatcc_fb_create_join_path_n@@Base+0x104>
   27c30:	mov	r6, #0
   27c34:	cmp	r8, #0
   27c38:	cmpne	r6, #0
   27c3c:	bne	27c48 <__flatcc_fb_create_join_path_n@@Base+0x74>
   27c40:	mov	r8, #0
   27c44:	b	27c5c <__flatcc_fb_create_join_path_n@@Base+0x88>
   27c48:	add	r0, r6, r7
   27c4c:	ldrb	r0, [r0, #-1]
   27c50:	cmp	r0, #92	; 0x5c
   27c54:	cmpne	r0, #47	; 0x2f
   27c58:	moveq	r8, #0
   27c5c:	add	r0, r6, r4
   27c60:	add	r0, r0, sl
   27c64:	add	r0, r0, r8
   27c68:	add	r0, r0, #1
   27c6c:	bl	14994 <malloc@plt>
   27c70:	mov	r5, r0
   27c74:	cmp	r0, #0
   27c78:	beq	27ccc <__flatcc_fb_create_join_path_n@@Base+0xf8>
   27c7c:	mov	r0, r5
   27c80:	mov	r1, r7
   27c84:	mov	r2, r6
   27c88:	bl	14934 <memcpy@plt>
   27c8c:	cmp	r8, #0
   27c90:	movne	r0, #47	; 0x2f
   27c94:	strbne	r0, [r5, r6]
   27c98:	addne	r6, r6, #1
   27c9c:	add	r0, r5, r6
   27ca0:	mov	r1, r9
   27ca4:	mov	r2, r4
   27ca8:	bl	14934 <memcpy@plt>
   27cac:	add	r4, r6, r4
   27cb0:	add	r0, r5, r4
   27cb4:	ldr	r1, [fp, #8]
   27cb8:	mov	r2, sl
   27cbc:	bl	14934 <memcpy@plt>
   27cc0:	add	r0, r4, sl
   27cc4:	mov	r1, #0
   27cc8:	strb	r1, [r5, r0]
   27ccc:	mov	r0, r5
   27cd0:	sub	sp, fp, #28
   27cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cd8:	cmp	r4, #2
   27cdc:	bcc	27c34 <__flatcc_fb_create_join_path_n@@Base+0x60>
   27ce0:	ldrb	r0, [r9, #1]
   27ce4:	cmp	r0, #58	; 0x3a
   27ce8:	moveq	r6, #0
   27cec:	b	27c34 <__flatcc_fb_create_join_path_n@@Base+0x60>

00027cf0 <__flatcc_fb_create_join_path@@Base>:
   27cf0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27cf4:	add	fp, sp, #24
   27cf8:	sub	sp, sp, #8
   27cfc:	mov	r8, r3
   27d00:	mov	r9, r2
   27d04:	mov	r4, r1
   27d08:	mov	r6, r0
   27d0c:	mov	r5, #0
   27d10:	cmp	r0, #0
   27d14:	mov	r7, #0
   27d18:	beq	27d28 <__flatcc_fb_create_join_path@@Base+0x38>
   27d1c:	mov	r0, r6
   27d20:	bl	149dc <strlen@plt>
   27d24:	mov	r7, r0
   27d28:	cmp	r4, #0
   27d2c:	beq	27d3c <__flatcc_fb_create_join_path@@Base+0x4c>
   27d30:	mov	r0, r4
   27d34:	bl	149dc <strlen@plt>
   27d38:	mov	r5, r0
   27d3c:	str	r9, [sp]
   27d40:	str	r8, [sp, #4]
   27d44:	mov	r0, r6
   27d48:	mov	r1, r7
   27d4c:	mov	r2, r4
   27d50:	mov	r3, r5
   27d54:	bl	27bd4 <__flatcc_fb_create_join_path_n@@Base>
   27d58:	sub	sp, fp, #24
   27d5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027d60 <__flatcc_fb_create_path_ext_n@@Base>:
   27d60:	push	{fp, lr}
   27d64:	mov	fp, sp
   27d68:	sub	sp, sp, #8
   27d6c:	mov	ip, r1
   27d70:	mov	r3, r0
   27d74:	mov	r0, #0
   27d78:	str	r2, [sp]
   27d7c:	str	r0, [sp, #4]
   27d80:	mov	r0, #0
   27d84:	mov	r1, #0
   27d88:	mov	r2, r3
   27d8c:	mov	r3, ip
   27d90:	bl	27bd4 <__flatcc_fb_create_join_path_n@@Base>
   27d94:	mov	sp, fp
   27d98:	pop	{fp, pc}

00027d9c <__flatcc_fb_create_path_ext@@Base>:
   27d9c:	mov	r2, r1
   27da0:	mov	r1, r0
   27da4:	mov	r0, #0
   27da8:	mov	r3, #0
   27dac:	b	27cf0 <__flatcc_fb_create_join_path@@Base>

00027db0 <__flatcc_fb_create_make_path_n@@Base>:
   27db0:	push	{r4, r5, r6, sl, fp, lr}
   27db4:	add	fp, sp, #16
   27db8:	mov	r6, r0
   27dbc:	cmp	r1, #0
   27dc0:	beq	27e04 <__flatcc_fb_create_make_path_n@@Base+0x54>
   27dc4:	cmp	r1, #1
   27dc8:	bne	27e10 <__flatcc_fb_create_make_path_n@@Base+0x60>
   27dcc:	ldrb	r5, [r6]
   27dd0:	cmp	r5, #92	; 0x5c
   27dd4:	cmpne	r5, #32
   27dd8:	bne	27e04 <__flatcc_fb_create_make_path_n@@Base+0x54>
   27ddc:	mov	r0, #3
   27de0:	bl	14994 <malloc@plt>
   27de4:	cmp	r0, #0
   27de8:	moveq	r0, #0
   27dec:	movne	r1, #0
   27df0:	strbne	r1, [r0, #2]
   27df4:	strbne	r5, [r0, #1]
   27df8:	movne	r1, #92	; 0x5c
   27dfc:	strbne	r1, [r0]
   27e00:	pop	{r4, r5, r6, sl, fp, pc}
   27e04:	mov	r0, r6
   27e08:	pop	{r4, r5, r6, sl, fp, lr}
   27e0c:	b	27ab4 <__flatcc_fb_copy_path_n@@Base>
   27e10:	sub	r5, r1, #1
   27e14:	ldrb	r3, [r6]
   27e18:	mov	r2, #1
   27e1c:	mov	r0, r1
   27e20:	b	27e3c <__flatcc_fb_create_make_path_n@@Base+0x8c>
   27e24:	cmp	r3, #32
   27e28:	addeq	r0, r0, #1
   27e2c:	ldrb	r3, [r6, r2]
   27e30:	add	r2, r2, #1
   27e34:	cmp	r1, r2
   27e38:	beq	27e58 <__flatcc_fb_create_make_path_n@@Base+0xa8>
   27e3c:	uxtb	r3, r3
   27e40:	cmp	r3, #92	; 0x5c
   27e44:	bne	27e24 <__flatcc_fb_create_make_path_n@@Base+0x74>
   27e48:	ldrb	r4, [r6, r2]
   27e4c:	cmp	r4, #32
   27e50:	addeq	r0, r0, #1
   27e54:	b	27e24 <__flatcc_fb_create_make_path_n@@Base+0x74>
   27e58:	cmp	r3, #32
   27e5c:	addeq	r0, r0, #1
   27e60:	add	r0, r0, #1
   27e64:	bl	14994 <malloc@plt>
   27e68:	cmp	r0, #0
   27e6c:	beq	27ecc <__flatcc_fb_create_make_path_n@@Base+0x11c>
   27e70:	ldrb	r1, [r6]
   27e74:	cmp	r5, #0
   27e78:	beq	27ed4 <__flatcc_fb_create_make_path_n@@Base+0x124>
   27e7c:	add	r3, r6, #1
   27e80:	mov	r2, #0
   27e84:	mov	ip, #92	; 0x5c
   27e88:	b	27ea8 <__flatcc_fb_create_make_path_n@@Base+0xf8>
   27e8c:	strb	ip, [r0, r2]
   27e90:	add	r2, r2, #1
   27e94:	strb	r1, [r0, r2]
   27e98:	subs	r5, r5, #1
   27e9c:	add	r2, r2, #1
   27ea0:	ldrb	r1, [r3], #1
   27ea4:	beq	27ed8 <__flatcc_fb_create_make_path_n@@Base+0x128>
   27ea8:	uxtb	r4, r1
   27eac:	cmp	r4, #32
   27eb0:	beq	27e8c <__flatcc_fb_create_make_path_n@@Base+0xdc>
   27eb4:	cmp	r4, #92	; 0x5c
   27eb8:	bne	27e94 <__flatcc_fb_create_make_path_n@@Base+0xe4>
   27ebc:	ldrb	r6, [r3]
   27ec0:	cmp	r6, #32
   27ec4:	beq	27e8c <__flatcc_fb_create_make_path_n@@Base+0xdc>
   27ec8:	b	27e94 <__flatcc_fb_create_make_path_n@@Base+0xe4>
   27ecc:	mov	r0, #0
   27ed0:	pop	{r4, r5, r6, sl, fp, pc}
   27ed4:	mov	r2, #0
   27ed8:	cmp	r1, #32
   27edc:	moveq	r3, #92	; 0x5c
   27ee0:	strbeq	r3, [r0, r2]
   27ee4:	addeq	r2, r2, #1
   27ee8:	mov	r3, r0
   27eec:	strb	r1, [r3, r2]!
   27ef0:	mov	r1, #0
   27ef4:	strb	r1, [r3, #1]
   27ef8:	pop	{r4, r5, r6, sl, fp, pc}

00027efc <__flatcc_fb_create_make_path@@Base>:
   27efc:	push	{r4, sl, fp, lr}
   27f00:	add	fp, sp, #8
   27f04:	mov	r4, r0
   27f08:	bl	149dc <strlen@plt>
   27f0c:	mov	r1, r0
   27f10:	mov	r0, r4
   27f14:	pop	{r4, sl, fp, lr}
   27f18:	b	27db0 <__flatcc_fb_create_make_path_n@@Base>

00027f1c <__flatcc_fb_find_basename@@Base>:
   27f1c:	mov	r2, r1
   27f20:	cmp	r1, #0
   27f24:	addne	r1, r0, r2
   27f28:	ldrbne	r3, [r1, #-1]
   27f2c:	cmpne	r3, #92	; 0x5c
   27f30:	beq	27f40 <__flatcc_fb_find_basename@@Base+0x24>
   27f34:	sub	r1, r2, #1
   27f38:	cmp	r3, #47	; 0x2f
   27f3c:	bne	27f1c <__flatcc_fb_find_basename@@Base>
   27f40:	mov	r0, r2
   27f44:	bx	lr

00027f48 <__flatcc_fb_create_basename@@Base>:
   27f48:	push	{r4, r5, r6, sl, fp, lr}
   27f4c:	add	fp, sp, #16
   27f50:	mov	r5, r2
   27f54:	mov	r6, r1
   27f58:	mov	r4, r0
   27f5c:	bl	27f1c <__flatcc_fb_find_basename@@Base>
   27f60:	add	r4, r4, r0
   27f64:	sub	r1, r6, r0
   27f68:	mov	r0, r4
   27f6c:	mov	r2, r5
   27f70:	bl	27b70 <__flatcc_fb_chomp@@Base>
   27f74:	mov	r5, r0
   27f78:	add	r0, r0, #1
   27f7c:	bl	14994 <malloc@plt>
   27f80:	mov	r6, r0
   27f84:	cmp	r0, #0
   27f88:	beq	27fa4 <__flatcc_fb_create_basename@@Base+0x5c>
   27f8c:	mov	r0, r6
   27f90:	mov	r1, r4
   27f94:	mov	r2, r5
   27f98:	bl	14934 <memcpy@plt>
   27f9c:	mov	r0, #0
   27fa0:	strb	r0, [r6, r5]
   27fa4:	mov	r0, r6
   27fa8:	pop	{r4, r5, r6, sl, fp, pc}

00027fac <__flatcc_fb_read_file@@Base>:
   27fac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27fb0:	add	fp, sp, #24
   27fb4:	sub	sp, sp, #8
   27fb8:	mov	r7, r1
   27fbc:	add	r9, sp, #4
   27fc0:	cmp	r2, #0
   27fc4:	movne	r9, r2
   27fc8:	movw	r1, #55316	; 0xd814
   27fcc:	movt	r1, #4
   27fd0:	bl	1491c <fopen@plt>
   27fd4:	cmp	r0, #0
   27fd8:	beq	28070 <__flatcc_fb_read_file@@Base+0xc4>
   27fdc:	mov	r6, r0
   27fe0:	mov	r8, #0
   27fe4:	mov	r1, #0
   27fe8:	mov	r2, #2
   27fec:	bl	14a90 <fseek@plt>
   27ff0:	mov	r0, r6
   27ff4:	bl	14940 <ftell@plt>
   27ff8:	mov	r5, r0
   27ffc:	str	r0, [r9]
   28000:	cmp	r7, #0
   28004:	cmpne	r5, r7
   28008:	bhi	28080 <__flatcc_fb_read_file@@Base+0xd4>
   2800c:	mov	r0, r6
   28010:	bl	14964 <rewind@plt>
   28014:	cmp	r5, #0
   28018:	mov	r0, r5
   2801c:	movweq	r0, #1
   28020:	bl	14994 <malloc@plt>
   28024:	cmp	r0, #0
   28028:	beq	28080 <__flatcc_fb_read_file@@Base+0xd4>
   2802c:	mov	r7, r0
   28030:	mov	r8, r0
   28034:	mov	r1, #0
   28038:	mov	r4, r1
   2803c:	add	r0, r7, r1
   28040:	sub	r2, r5, r1
   28044:	mov	r1, #1
   28048:	mov	r3, r6
   2804c:	bl	14a84 <fread_unlocked@plt>
   28050:	add	r1, r0, r4
   28054:	cmp	r0, #0
   28058:	bne	28038 <__flatcc_fb_read_file@@Base+0x8c>
   2805c:	cmp	r5, r4
   28060:	bne	28078 <__flatcc_fb_read_file@@Base+0xcc>
   28064:	mov	r0, r6
   28068:	bl	14a3c <fclose@plt>
   2806c:	b	2809c <__flatcc_fb_read_file@@Base+0xf0>
   28070:	mov	r5, #0
   28074:	b	28098 <__flatcc_fb_read_file@@Base+0xec>
   28078:	cmp	r6, #0
   2807c:	beq	28088 <__flatcc_fb_read_file@@Base+0xdc>
   28080:	mov	r0, r6
   28084:	bl	14a3c <fclose@plt>
   28088:	cmp	r8, #0
   2808c:	beq	28098 <__flatcc_fb_read_file@@Base+0xec>
   28090:	mov	r0, r8
   28094:	bl	14928 <free@plt>
   28098:	mov	r8, #0
   2809c:	str	r5, [r9]
   280a0:	mov	r0, r8
   280a4:	sub	sp, fp, #24
   280a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000280ac <__flatcc_fb_default_error_out@@Base>:
   280ac:	mov	r0, r1
   280b0:	movw	r1, #8368	; 0x20b0
   280b4:	movt	r1, #6
   280b8:	ldr	r3, [r1]
   280bc:	mov	r1, #1
   280c0:	b	1497c <fwrite@plt>

000280c4 <__flatcc_fb_print_error@@Base>:
   280c4:	sub	sp, sp, #8
   280c8:	push	{r4, r5, fp, lr}
   280cc:	add	fp, sp, #8
   280d0:	sub	sp, sp, #208	; 0xd0
   280d4:	mov	r5, r1
   280d8:	mov	r4, r0
   280dc:	str	r2, [fp, #8]
   280e0:	str	r3, [fp, #12]
   280e4:	add	r3, fp, #8
   280e8:	str	r3, [fp, #-12]
   280ec:	add	r0, sp, #4
   280f0:	mov	r1, #200	; 0xc8
   280f4:	mov	r2, r5
   280f8:	bl	14a6c <vsnprintf@plt>
   280fc:	mov	r5, r0
   28100:	cmp	r0, #200	; 0xc8
   28104:	blt	28120 <__flatcc_fb_print_error@@Base+0x5c>
   28108:	mov	r0, #0
   2810c:	strb	r0, [sp, #203]	; 0xcb
   28110:	movw	r0, #11822	; 0x2e2e
   28114:	movt	r0, #2606	; 0xa2e
   28118:	str	r0, [sp, #199]	; 0xc7
   2811c:	mov	r5, #199	; 0xc7
   28120:	ldr	r3, [r4, #12]
   28124:	ldr	r4, [r4, #8]
   28128:	add	r1, sp, #4
   2812c:	mov	r0, r3
   28130:	mov	r2, r5
   28134:	blx	r4
   28138:	mov	r0, r5
   2813c:	sub	sp, fp, #8
   28140:	pop	{r4, r5, fp, lr}
   28144:	add	sp, sp, #8
   28148:	bx	lr

0002814c <__flatcc_error_find_file_of_token@@Base>:
   2814c:	mov	r2, r0
   28150:	movw	r0, #26588	; 0x67dc
   28154:	movt	r0, #3
   28158:	b	28160 <__flatcc_error_find_file_of_token@@Base+0x14>
   2815c:	ldr	r2, [r2]
   28160:	cmp	r2, #0
   28164:	bxeq	lr
   28168:	ldr	r3, [r2, #20]
   2816c:	cmp	r3, r1
   28170:	bhi	2815c <__flatcc_error_find_file_of_token@@Base+0x10>
   28174:	ldr	r3, [r2, #24]
   28178:	cmp	r3, r1
   2817c:	bls	2815c <__flatcc_error_find_file_of_token@@Base+0x10>
   28180:	ldr	r0, [r2, #520]	; 0x208
   28184:	bx	lr

00028188 <__flatcc_error_report@@Base>:
   28188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2818c:	add	fp, sp, #28
   28190:	sub	sp, sp, #36	; 0x24
   28194:	mov	r6, r3
   28198:	mov	sl, r2
   2819c:	mov	r7, r1
   281a0:	mov	r9, r0
   281a4:	ldr	r5, [fp, #12]
   281a8:	ldr	r4, [fp, #8]
   281ac:	cmp	r1, #0
   281b0:	beq	281bc <__flatcc_error_report@@Base+0x34>
   281b4:	cmp	r4, #0
   281b8:	ldmeq	r7, {r4, r5}
   281bc:	cmp	r4, #0
   281c0:	moveq	r5, r4
   281c4:	movw	r0, #26588	; 0x67dc
   281c8:	movt	r0, #3
   281cc:	moveq	r4, r0
   281d0:	cmp	sl, #0
   281d4:	moveq	sl, r0
   281d8:	cmp	r7, #0
   281dc:	beq	28220 <__flatcc_error_report@@Base+0x98>
   281e0:	cmp	r6, #0
   281e4:	bne	28220 <__flatcc_error_report@@Base+0x98>
   281e8:	mov	r0, r9
   281ec:	mov	r1, r7
   281f0:	bl	2814c <__flatcc_error_find_file_of_token@@Base>
   281f4:	mov	r2, r0
   281f8:	ldr	r3, [r7, #8]
   281fc:	ldr	r0, [r7, #12]
   28200:	stm	sp, {r0, r5}
   28204:	str	r4, [sp, #8]
   28208:	str	sl, [sp, #12]
   2820c:	movw	r1, #55319	; 0xd817
   28210:	movt	r1, #4
   28214:	mov	r0, r9
   28218:	bl	280c4 <__flatcc_fb_print_error@@Base>
   2821c:	b	28304 <__flatcc_error_report@@Base+0x17c>
   28220:	cmp	r7, #0
   28224:	cmpne	r6, #0
   28228:	bne	28274 <__flatcc_error_report@@Base+0xec>
   2822c:	orrs	r0, r7, r6
   28230:	beq	282dc <__flatcc_error_report@@Base+0x154>
   28234:	cmp	r6, #0
   28238:	beq	282f4 <__flatcc_error_report@@Base+0x16c>
   2823c:	mov	r0, r9
   28240:	mov	r1, r6
   28244:	bl	2814c <__flatcc_error_find_file_of_token@@Base>
   28248:	mov	r3, r0
   2824c:	ldm	r6, {r0, r1, r2, r7}
   28250:	stm	sp, {r2, r7}
   28254:	str	r1, [sp, #8]
   28258:	str	r0, [sp, #12]
   2825c:	movw	r1, #55412	; 0xd874
   28260:	movt	r1, #4
   28264:	mov	r0, r9
   28268:	mov	r2, sl
   2826c:	bl	280c4 <__flatcc_fb_print_error@@Base>
   28270:	b	28304 <__flatcc_error_report@@Base+0x17c>
   28274:	mov	r0, r9
   28278:	mov	r1, r7
   2827c:	bl	2814c <__flatcc_error_find_file_of_token@@Base>
   28280:	mov	r8, r0
   28284:	mov	r0, r9
   28288:	mov	r1, r6
   2828c:	bl	2814c <__flatcc_error_find_file_of_token@@Base>
   28290:	ldr	r3, [r7, #8]
   28294:	ldr	r1, [r7, #12]
   28298:	ldm	r6, {r2, ip}
   2829c:	ldr	r7, [r6, #8]
   282a0:	ldr	r6, [r6, #12]
   282a4:	str	r2, [sp, #32]
   282a8:	stm	sp, {r1, r5}
   282ac:	str	r4, [sp, #8]
   282b0:	str	sl, [sp, #12]
   282b4:	str	r0, [sp, #16]
   282b8:	str	r7, [sp, #20]
   282bc:	str	r6, [sp, #24]
   282c0:	str	ip, [sp, #28]
   282c4:	movw	r1, #55350	; 0xd836
   282c8:	movt	r1, #4
   282cc:	mov	r0, r9
   282d0:	mov	r2, r8
   282d4:	bl	280c4 <__flatcc_fb_print_error@@Base>
   282d8:	b	28304 <__flatcc_error_report@@Base+0x17c>
   282dc:	movw	r1, #55401	; 0xd869
   282e0:	movt	r1, #4
   282e4:	mov	r0, r9
   282e8:	mov	r2, sl
   282ec:	bl	280c4 <__flatcc_fb_print_error@@Base>
   282f0:	b	28304 <__flatcc_error_report@@Base+0x17c>
   282f4:	movw	r1, #55443	; 0xd893
   282f8:	movt	r1, #4
   282fc:	mov	r0, r9
   28300:	bl	280c4 <__flatcc_fb_print_error@@Base>
   28304:	ldr	r0, [r9, #108]	; 0x6c
   28308:	add	r0, r0, #1
   2830c:	str	r0, [r9, #108]	; 0x6c
   28310:	sub	sp, fp, #28
   28314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028318 <error_ref_sym@@Base>:
   28318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2831c:	add	fp, sp, #28
   28320:	sub	sp, sp, #76	; 0x4c
   28324:	mov	sl, r1
   28328:	cmp	r1, #0
   2832c:	beq	283b0 <error_ref_sym@@Base+0x98>
   28330:	str	r3, [sp, #12]
   28334:	str	r0, [sp, #16]
   28338:	str	r2, [sp, #20]
   2833c:	mov	r5, #50	; 0x32
   28340:	mov	r6, #0
   28344:	add	r8, sp, #25
   28348:	mov	r9, #46	; 0x2e
   2834c:	mov	r7, sl
   28350:	add	r0, r8, r6
   28354:	ldr	r2, [r7, #4]
   28358:	ldm	r2, {r1, r4}
   2835c:	cmp	r5, r4
   28360:	movlt	r4, r5
   28364:	mov	r2, r4
   28368:	bl	14934 <memcpy@plt>
   2836c:	add	r0, r4, r6
   28370:	strb	r9, [r8, r0]
   28374:	mvn	r1, r4
   28378:	add	r5, r5, r1
   2837c:	add	r6, r0, #1
   28380:	ldr	r7, [r7]
   28384:	cmp	r7, #0
   28388:	beq	28394 <error_ref_sym@@Base+0x7c>
   2838c:	cmp	r5, #0
   28390:	bgt	28350 <error_ref_sym@@Base+0x38>
   28394:	mov	r1, #0
   28398:	strb	r1, [r8, r6]
   2839c:	cmp	r5, #0
   283a0:	ble	283bc <error_ref_sym@@Base+0xa4>
   283a4:	mvn	r0, r0
   283a8:	add	r6, r6, r0, asr #31
   283ac:	b	283cc <error_ref_sym@@Base+0xb4>
   283b0:	mov	r6, #0
   283b4:	strb	r6, [sp, #25]
   283b8:	b	283d8 <error_ref_sym@@Base+0xc0>
   283bc:	movw	r0, #11822	; 0x2e2e
   283c0:	movt	r0, #46	; 0x2e
   283c4:	str	r0, [sp, #72]	; 0x48
   283c8:	mov	r6, #50	; 0x32
   283cc:	ldr	r2, [sp, #20]
   283d0:	ldr	r0, [sp, #16]
   283d4:	ldr	r3, [sp, #12]
   283d8:	ldr	r1, [sl, #4]
   283dc:	cmp	r3, #0
   283e0:	beq	283ec <error_ref_sym@@Base+0xd4>
   283e4:	ldr	r3, [r3, #4]
   283e8:	b	283f0 <error_ref_sym@@Base+0xd8>
   283ec:	mov	r3, #0
   283f0:	add	r7, sp, #25
   283f4:	str	r7, [sp]
   283f8:	str	r6, [sp, #4]
   283fc:	bl	28188 <__flatcc_error_report@@Base>
   28400:	sub	sp, fp, #28
   28404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028408 <__flatcc_fb_init_parser@@Base>:
   28408:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2840c:	add	fp, sp, #24
   28410:	mov	r5, r3
   28414:	mov	r6, r2
   28418:	mov	r8, r1
   2841c:	mov	r4, r0
   28420:	mov	r1, #0
   28424:	mov	r2, #560	; 0x230
   28428:	bl	14a0c <memset@plt>
   2842c:	cmp	r5, #0
   28430:	beq	28444 <__flatcc_fb_init_parser@@Base+0x3c>
   28434:	ldr	r1, [fp, #8]
   28438:	str	r5, [r4, #8]
   2843c:	str	r1, [r4, #12]
   28440:	b	28450 <__flatcc_fb_init_parser@@Base+0x48>
   28444:	movw	r0, #32940	; 0x80ac
   28448:	movt	r0, #2
   2844c:	str	r0, [r4, #8]
   28450:	ldr	r5, [fp, #12]
   28454:	add	r0, r4, #128	; 0x80
   28458:	cmp	r8, #0
   2845c:	beq	28470 <__flatcc_fb_init_parser@@Base+0x68>
   28460:	mov	r1, r8
   28464:	mov	r2, #224	; 0xe0
   28468:	bl	14934 <memcpy@plt>
   2846c:	b	28474 <__flatcc_fb_init_parser@@Base+0x6c>
   28470:	bl	1586c <flatcc_init_options@@Base>
   28474:	cmp	r5, #0
   28478:	addeq	r5, r4, #416	; 0x1a0
   2847c:	str	r5, [r4, #412]	; 0x19c
   28480:	ldr	r0, [r4, #192]	; 0xc0
   28484:	movw	r1, #55477	; 0xd8b5
   28488:	movt	r1, #4
   2848c:	cmp	r0, #8
   28490:	bhi	285a4 <__flatcc_fb_init_parser@@Base+0x19c>
   28494:	mov	r2, #1
   28498:	mov	r3, #276	; 0x114
   2849c:	tst	r3, r2, lsl r0
   284a0:	beq	285a4 <__flatcc_fb_init_parser@@Base+0x19c>
   284a4:	ldr	r0, [r4, #196]	; 0xc4
   284a8:	movw	r1, #55533	; 0xd8ed
   284ac:	movt	r1, #4
   284b0:	cmp	r0, #8
   284b4:	bhi	285a4 <__flatcc_fb_init_parser@@Base+0x19c>
   284b8:	mov	r2, #1
   284bc:	mov	r3, #276	; 0x114
   284c0:	tst	r3, r2, lsl r0
   284c4:	beq	285a4 <__flatcc_fb_init_parser@@Base+0x19c>
   284c8:	movw	r7, #55590	; 0xd926
   284cc:	movt	r7, #4
   284d0:	cmp	r6, #0
   284d4:	movne	r7, r6
   284d8:	mov	r0, r7
   284dc:	bl	149dc <strlen@plt>
   284e0:	mov	r9, r0
   284e4:	ldr	r2, [r8, #96]	; 0x60
   284e8:	mov	r0, r7
   284ec:	mov	r1, r9
   284f0:	bl	27f48 <__flatcc_fb_create_basename@@Base>
   284f4:	str	r0, [r4, #512]	; 0x200
   284f8:	bl	285e4 <__flatcc_fb_init_parser@@Base+0x1dc>
   284fc:	ldr	r5, [r4, #512]	; 0x200
   28500:	mov	r0, r5
   28504:	bl	149dc <strlen@plt>
   28508:	mov	r6, r0
   2850c:	mov	r0, r5
   28510:	mov	r1, r6
   28514:	bl	27ab4 <__flatcc_fb_copy_path_n@@Base>
   28518:	mov	r5, r0
   2851c:	bl	285e4 <__flatcc_fb_init_parser@@Base+0x1dc>
   28520:	mov	r0, r5
   28524:	mov	r1, r6
   28528:	bl	2861c <__flatcc_fb_init_parser@@Base+0x214>
   2852c:	str	r5, [r4, #496]	; 0x1f0
   28530:	str	r6, [r4, #500]	; 0x1f4
   28534:	str	r5, [r4, #516]	; 0x204
   28538:	movw	r2, #26588	; 0x67dc
   2853c:	movt	r2, #3
   28540:	mov	r0, r7
   28544:	mov	r1, r9
   28548:	bl	27f48 <__flatcc_fb_create_basename@@Base>
   2854c:	str	r0, [r4, #520]	; 0x208
   28550:	bl	285e4 <__flatcc_fb_init_parser@@Base+0x1dc>
   28554:	ldr	r0, [r8, #192]	; 0xc0
   28558:	cmp	r0, #0
   2855c:	beq	2856c <__flatcc_fb_init_parser@@Base+0x164>
   28560:	str	r0, [r4, #476]	; 0x1dc
   28564:	bl	149dc <strlen@plt>
   28568:	str	r0, [r4, #480]	; 0x1e0
   2856c:	mov	r5, #0
   28570:	mov	r0, r4
   28574:	mov	r1, #0
   28578:	bl	2865c <__flatcc_fb_init_parser@@Base+0x254>
   2857c:	mov	r6, r0
   28580:	str	r0, [r4, #544]	; 0x220
   28584:	ldr	r0, [r4, #412]	; 0x19c
   28588:	mov	r1, #0
   2858c:	mov	r2, #0
   28590:	bl	270f8 <fb_scope_table_find@@Base>
   28594:	cmp	r6, r0
   28598:	bne	285b8 <__flatcc_fb_init_parser@@Base+0x1b0>
   2859c:	mov	r0, r5
   285a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   285a4:	mov	r0, r4
   285a8:	bl	285d8 <__flatcc_fb_init_parser@@Base+0x1d0>
   285ac:	mvn	r5, #0
   285b0:	mov	r0, r5
   285b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   285b8:	movw	r0, #55595	; 0xd92b
   285bc:	movt	r0, #4
   285c0:	movw	r1, #55678	; 0xd97e
   285c4:	movt	r1, #4
   285c8:	movw	r3, #55748	; 0xd9c4
   285cc:	movt	r3, #4
   285d0:	movw	r2, #1331	; 0x533
   285d4:	bl	14ab4 <__assert_fail@plt>
   285d8:	mov	r2, r1
   285dc:	mov	r1, #0
   285e0:	b	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   285e4:	cmp	r0, #0
   285e8:	bxne	lr
   285ec:	push	{fp, lr}
   285f0:	mov	fp, sp
   285f4:	movw	r0, #8368	; 0x20b0
   285f8:	movt	r0, #6
   285fc:	ldr	r3, [r0]
   28600:	movw	r0, #25395	; 0x6333
   28604:	movt	r0, #3
   28608:	mov	r1, #34	; 0x22
   2860c:	mov	r2, #1
   28610:	bl	1497c <fwrite@plt>
   28614:	mov	r0, #1
   28618:	bl	149c4 <exit@plt>
   2861c:	push	{r4, r5, r6, sl, fp, lr}
   28620:	add	fp, sp, #16
   28624:	cmp	r1, #0
   28628:	beq	28658 <__flatcc_fb_init_parser@@Base+0x250>
   2862c:	mov	r4, r1
   28630:	mov	r5, r0
   28634:	ldrb	r6, [r5]
   28638:	cmp	r6, #0
   2863c:	beq	28658 <__flatcc_fb_init_parser@@Base+0x250>
   28640:	bl	149ac <__ctype_toupper_loc@plt>
   28644:	ldr	r0, [r0]
   28648:	ldr	r0, [r0, r6, lsl #2]
   2864c:	strb	r0, [r5], #1
   28650:	subs	r4, r4, #1
   28654:	bne	28634 <__flatcc_fb_init_parser@@Base+0x22c>
   28658:	pop	{r4, r5, r6, sl, fp, pc}
   2865c:	push	{r4, r5, r6, sl, fp, lr}
   28660:	add	fp, sp, #16
   28664:	mov	r5, r1
   28668:	mov	r4, r0
   2866c:	ldr	r0, [r0, #412]	; 0x19c
   28670:	mov	r2, #0
   28674:	bl	270f8 <fb_scope_table_find@@Base>
   28678:	mov	r6, r0
   2867c:	cmp	r0, #0
   28680:	beq	2868c <__flatcc_fb_init_parser@@Base+0x284>
   28684:	mov	r0, r6
   28688:	pop	{r4, r5, r6, sl, fp, pc}
   2868c:	mov	r0, r4
   28690:	mov	r1, #28
   28694:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   28698:	mov	r6, r0
   2869c:	str	r5, [r0]
   286a0:	ldr	r0, [r4, #476]	; 0x1dc
   286a4:	ldr	r1, [r4, #480]	; 0x1e0
   286a8:	str	r0, [r6, #20]
   286ac:	str	r1, [r6, #24]
   286b0:	ldr	r0, [r4, #412]	; 0x19c
   286b4:	mov	r1, r6
   286b8:	mov	r2, #1
   286bc:	bl	270b0 <fb_scope_table_insert_item@@Base>
   286c0:	mov	r0, r6
   286c4:	pop	{r4, r5, r6, sl, fp, pc}

000286c8 <__flatcc_fb_parse@@Base>:
   286c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   286cc:	add	fp, sp, #24
   286d0:	mov	r5, r3
   286d4:	mov	r6, r2
   286d8:	mov	r7, r1
   286dc:	mov	r4, r0
   286e0:	mov	r0, #1
   286e4:	str	r1, [r4, #60]	; 0x3c
   286e8:	str	r0, [r4, #64]	; 0x40
   286ec:	add	r0, r4, #68	; 0x44
   286f0:	movw	r1, #55863	; 0xda37
   286f4:	movt	r1, #4
   286f8:	mov	r2, #9
   286fc:	bl	2877c <__flatcc_fb_parse@@Base+0xb4>
   28700:	add	r0, r4, #88	; 0x58
   28704:	movw	r1, #61792	; 0xf160
   28708:	movt	r1, #4
   2870c:	movw	r8, #64554	; 0xfc2a
   28710:	movt	r8, #65535	; 0xffff
   28714:	mov	r2, r8
   28718:	bl	2877c <__flatcc_fb_parse@@Base+0xb4>
   2871c:	cmp	r5, #0
   28720:	strne	r7, [r4, #16]
   28724:	mov	r0, r7
   28728:	mov	r1, r6
   2872c:	mov	r2, r4
   28730:	bl	287a8 <__flatcc_fb_parse@@Base+0xe0>
   28734:	ldr	r1, [r4, #20]
   28738:	ldr	r2, [r4, #40]	; 0x28
   2873c:	ldr	r0, [r4, #216]	; 0xd8
   28740:	str	r2, [r4, #24]
   28744:	str	r1, [r4, #40]	; 0x28
   28748:	bl	14994 <malloc@plt>
   2874c:	str	r0, [r4, #112]	; 0x70
   28750:	bl	285e4 <__flatcc_fb_init_parser@@Base+0x1dc>
   28754:	ldr	r0, [r4, #40]	; 0x28
   28758:	ldr	r0, [r0, #16]
   2875c:	add	r1, r8, #18
   28760:	cmp	r0, r1
   28764:	moveq	r0, r4
   28768:	bleq	29708 <__flatcc_fb_parse@@Base+0x1040>
   2876c:	mov	r0, r4
   28770:	bl	29778 <__flatcc_fb_parse@@Base+0x10b0>
   28774:	ldr	r0, [r4, #108]	; 0x6c
   28778:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2877c:	push	{r4, sl, fp, lr}
   28780:	add	fp, sp, #8
   28784:	mov	r4, r0
   28788:	str	r1, [r0]
   2878c:	str	r2, [r0, #16]
   28790:	mov	r0, r1
   28794:	bl	149dc <strlen@plt>
   28798:	mov	r1, #0
   2879c:	stmib	r4, {r0, r1}
   287a0:	str	r1, [r4, #12]
   287a4:	pop	{r4, sl, fp, pc}
   287a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   287ac:	add	fp, sp, #28
   287b0:	sub	sp, sp, #20
   287b4:	mov	r4, r2
   287b8:	mov	r5, r0
   287bc:	add	r8, r0, r1
   287c0:	cmp	r1, #0
   287c4:	beq	29688 <__flatcc_fb_parse@@Base+0xfc0>
   287c8:	sub	r0, r8, #1
   287cc:	str	r0, [sp, #16]
   287d0:	sub	r0, r8, #2
   287d4:	str	r0, [sp, #12]
   287d8:	movw	r0, #15934	; 0x3e3e
   287dc:	movt	r0, #61	; 0x3d
   287e0:	add	r0, r0, #65536	; 0x10000
   287e4:	str	r0, [sp, #8]
   287e8:	mov	sl, #48	; 0x30
   287ec:	movw	r9, #58405	; 0xe425
   287f0:	movt	r9, #4
   287f4:	mov	r6, r5
   287f8:	ldrb	r1, [r5]
   287fc:	cmp	r1, #126	; 0x7e
   28800:	bhi	28b98 <__flatcc_fb_parse@@Base+0x4d0>
   28804:	add	r0, pc, #0
   28808:	ldr	pc, [r0, r1, lsl #2]
   2880c:			; <UNDEFINED> instruction: 0x000296b0
   28810:	muleq	r2, r8, fp
   28814:	muleq	r2, r8, fp
   28818:	muleq	r2, r8, fp
   2881c:	muleq	r2, r8, fp
   28820:	muleq	r2, r8, fp
   28824:	muleq	r2, r8, fp
   28828:	muleq	r2, r8, fp
   2882c:	muleq	r2, r8, fp
   28830:	andeq	r8, r2, ip, ror #22
   28834:	andeq	r8, r2, r4, asr #23
   28838:	muleq	r2, r8, fp
   2883c:	muleq	r2, r8, fp
   28840:	ldrdeq	r8, [r2], -ip
   28844:	muleq	r2, r8, fp
   28848:	muleq	r2, r8, fp
   2884c:	muleq	r2, r8, fp
   28850:	muleq	r2, r8, fp
   28854:	muleq	r2, r8, fp
   28858:	muleq	r2, r8, fp
   2885c:	muleq	r2, r8, fp
   28860:	muleq	r2, r8, fp
   28864:	muleq	r2, r8, fp
   28868:	muleq	r2, r8, fp
   2886c:	muleq	r2, r8, fp
   28870:	muleq	r2, r8, fp
   28874:	muleq	r2, r8, fp
   28878:	muleq	r2, r8, fp
   2887c:	muleq	r2, r8, fp
   28880:	muleq	r2, r8, fp
   28884:	muleq	r2, r8, fp
   28888:	muleq	r2, r8, fp
   2888c:	andeq	r8, r2, ip, ror #22
   28890:	andeq	r8, r2, ip, asr #22
   28894:	andeq	r8, r2, r8, lsl #24
   28898:	muleq	r2, r8, fp
   2889c:	muleq	r2, r8, fp
   288a0:	andeq	r8, r2, ip, asr #22
   288a4:	andeq	r8, r2, ip, lsl #28
   288a8:	muleq	r2, r8, fp
   288ac:	andeq	r8, r2, r8, lsl #21
   288b0:	andeq	r8, r2, r8, lsl #21
   288b4:	andeq	r8, r2, ip, lsr lr
   288b8:	andeq	r8, r2, r8, ror #28
   288bc:	andeq	r8, r2, r8, lsl #21
   288c0:	muleq	r2, r8, lr
   288c4:	ldrdeq	r8, [r2], -r0
   288c8:	strdeq	r8, [r2], -r4
   288cc:	andeq	r8, r2, ip, asr #30
   288d0:	muleq	r2, r0, sl
   288d4:	muleq	r2, r0, sl
   288d8:	muleq	r2, r0, sl
   288dc:	muleq	r2, r0, sl
   288e0:	muleq	r2, r0, sl
   288e4:	muleq	r2, r0, sl
   288e8:	muleq	r2, r0, sl
   288ec:	muleq	r2, r0, sl
   288f0:	muleq	r2, r0, sl
   288f4:	andeq	r8, r2, r0, asr #31
   288f8:	andeq	r8, r2, r8, lsl #21
   288fc:	strdeq	r8, [r2], -r0
   28900:	andeq	r9, r2, r8, lsr #32
   28904:	andeq	r9, r2, r8, asr r0
   28908:	andeq	r8, r2, r8, lsl #21
   2890c:	muleq	r2, r8, fp
   28910:	andeq	r8, r2, r8, lsl #20
   28914:	andeq	r8, r2, r8, lsl #20
   28918:	andeq	r8, r2, r8, lsl #20
   2891c:	andeq	r8, r2, r8, lsl #20
   28920:	andeq	r8, r2, r8, lsl #20
   28924:	andeq	r8, r2, r8, lsl #20
   28928:	andeq	r8, r2, r8, lsl #20
   2892c:	andeq	r8, r2, r8, lsl #20
   28930:	andeq	r8, r2, r8, lsl #20
   28934:	andeq	r8, r2, r8, lsl #20
   28938:	andeq	r8, r2, r8, lsl #20
   2893c:	andeq	r8, r2, r8, lsl #20
   28940:	andeq	r8, r2, r8, lsl #20
   28944:	andeq	r8, r2, r8, lsl #20
   28948:	andeq	r8, r2, r8, lsl #20
   2894c:	andeq	r8, r2, r8, lsl #20
   28950:	andeq	r8, r2, r8, lsl #20
   28954:	andeq	r8, r2, r8, lsl #20
   28958:	andeq	r8, r2, r8, lsl #20
   2895c:	andeq	r8, r2, r8, lsl #20
   28960:	andeq	r8, r2, r8, lsl #20
   28964:	andeq	r8, r2, r8, lsl #20
   28968:	andeq	r8, r2, r8, lsl #20
   2896c:	andeq	r8, r2, r8, lsl #20
   28970:	andeq	r8, r2, r8, lsl #20
   28974:	andeq	r8, r2, r8, lsl #20
   28978:	andeq	r8, r2, r8, lsl #21
   2897c:	andeq	r8, r2, r8, lsl #21
   28980:	andeq	r8, r2, r8, lsl #21
   28984:	andeq	r8, r2, ip, asr #22
   28988:	andeq	r8, r2, r8, lsl #20
   2898c:	muleq	r2, r8, fp
   28990:	andeq	r8, r2, r8, lsl #20
   28994:	andeq	r8, r2, r8, lsl #20
   28998:	andeq	r8, r2, r8, lsl #20
   2899c:	andeq	r8, r2, r8, lsl #20
   289a0:	andeq	r8, r2, r8, lsl #20
   289a4:	andeq	r8, r2, r8, lsl #20
   289a8:	andeq	r8, r2, r8, lsl #20
   289ac:	andeq	r8, r2, r8, lsl #20
   289b0:	andeq	r8, r2, r8, lsl #20
   289b4:	andeq	r8, r2, r8, lsl #20
   289b8:	andeq	r8, r2, r8, lsl #20
   289bc:	andeq	r8, r2, r8, lsl #20
   289c0:	andeq	r8, r2, r8, lsl #20
   289c4:	andeq	r8, r2, r8, lsl #20
   289c8:	andeq	r8, r2, r8, lsl #20
   289cc:	andeq	r8, r2, r8, lsl #20
   289d0:	andeq	r8, r2, r8, lsl #20
   289d4:	andeq	r8, r2, r8, lsl #20
   289d8:	andeq	r8, r2, r8, lsl #20
   289dc:	andeq	r8, r2, r8, lsl #20
   289e0:	andeq	r8, r2, r8, lsl #20
   289e4:	andeq	r8, r2, r8, lsl #20
   289e8:	andeq	r8, r2, r8, lsl #20
   289ec:	andeq	r8, r2, r8, lsl #20
   289f0:	andeq	r8, r2, r8, lsl #20
   289f4:	andeq	r8, r2, r8, lsl #20
   289f8:	andeq	r8, r2, r8, lsl #21
   289fc:	andeq	r9, r2, r8, lsl #1
   28a00:	andeq	r8, r2, r8, lsl #21
   28a04:	andeq	r8, r2, ip, asr #22
   28a08:	add	r5, r6, #1
   28a0c:	lsl	r0, r1, #8
   28a10:	cmp	r5, r8
   28a14:	beq	28a4c <__flatcc_fb_parse@@Base+0x384>
   28a18:	ldrb	r1, [r5]
   28a1c:	ldrb	r2, [r9, r1]
   28a20:	cmp	r2, #0
   28a24:	beq	28a4c <__flatcc_fb_parse@@Base+0x384>
   28a28:	orr	r0, r0, r1, lsl #16
   28a2c:	add	r1, r6, #2
   28a30:	mov	r5, r1
   28a34:	cmp	r8, r1
   28a38:	movne	r1, r5
   28a3c:	ldrbne	r2, [r1], #1
   28a40:	ldrbne	r2, [r9, r2]
   28a44:	cmpne	r2, #0
   28a48:	bne	28a30 <__flatcc_fb_parse@@Base+0x368>
   28a4c:	sub	r1, r5, r6
   28a50:	uxtab	r1, sl, r1
   28a54:	ldrb	r2, [r5, #-1]
   28a58:	orr	r0, r0, r2, lsl #24
   28a5c:	orr	r0, r0, r1
   28a60:	mov	r1, r6
   28a64:	bl	29aa0 <__flatcc_fb_clear_parser@@Base+0x2a8>
   28a68:	mov	r1, r0
   28a6c:	mov	r0, r4
   28a70:	mov	r2, r6
   28a74:	mov	r3, r5
   28a78:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28a7c:	cmp	r5, r8
   28a80:	bne	287f4 <__flatcc_fb_parse@@Base+0x12c>
   28a84:	b	2968c <__flatcc_fb_parse@@Base+0xfc4>
   28a88:	add	r5, r6, #1
   28a8c:	b	28a6c <__flatcc_fb_parse@@Base+0x3a4>
   28a90:	mov	r5, r6
   28a94:	ldrb	r0, [r5, #1]!
   28a98:	sub	r1, r0, #48	; 0x30
   28a9c:	uxtb	r1, r1
   28aa0:	cmp	r1, #10
   28aa4:	bcc	28a94 <__flatcc_fb_parse@@Base+0x3cc>
   28aa8:	cmp	r0, #46	; 0x2e
   28aac:	mov	r0, r5
   28ab0:	bne	28adc <__flatcc_fb_parse@@Base+0x414>
   28ab4:	add	r1, r5, #1
   28ab8:	mov	r5, r1
   28abc:	cmp	r8, r1
   28ac0:	beq	28adc <__flatcc_fb_parse@@Base+0x414>
   28ac4:	mov	r1, r5
   28ac8:	ldrb	r2, [r1], #1
   28acc:	sub	r2, r2, #48	; 0x30
   28ad0:	uxtb	r2, r2
   28ad4:	cmp	r2, #10
   28ad8:	bcc	28ab8 <__flatcc_fb_parse@@Base+0x3f0>
   28adc:	cmp	r5, r8
   28ae0:	beq	28b38 <__flatcc_fb_parse@@Base+0x470>
   28ae4:	ldrb	r1, [r5]
   28ae8:	orr	r1, r1, #32
   28aec:	cmp	r1, #101	; 0x65
   28af0:	bne	28b38 <__flatcc_fb_parse@@Base+0x470>
   28af4:	add	r1, r5, #1
   28af8:	cmp	r1, r8
   28afc:	beq	28b10 <__flatcc_fb_parse@@Base+0x448>
   28b00:	ldrb	r2, [r1]
   28b04:	cmp	r2, #43	; 0x2b
   28b08:	cmpne	r2, #45	; 0x2d
   28b0c:	movne	r1, r5
   28b10:	add	r1, r1, #1
   28b14:	mov	r5, r1
   28b18:	cmp	r8, r1
   28b1c:	beq	28b38 <__flatcc_fb_parse@@Base+0x470>
   28b20:	mov	r1, r5
   28b24:	ldrb	r2, [r1], #1
   28b28:	sub	r2, r2, #48	; 0x30
   28b2c:	uxtb	r2, r2
   28b30:	cmp	r2, #10
   28b34:	bcc	28b14 <__flatcc_fb_parse@@Base+0x44c>
   28b38:	cmp	r0, r5
   28b3c:	mov	r0, r4
   28b40:	moveq	r1, #10
   28b44:	movne	r1, #11
   28b48:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   28b4c:	add	r5, r6, #1
   28b50:	cmp	r5, r8
   28b54:	beq	28a6c <__flatcc_fb_parse@@Base+0x3a4>
   28b58:	ldrb	r0, [r5]
   28b5c:	cmp	r0, #61	; 0x3d
   28b60:	orreq	r1, r1, #15616	; 0x3d00
   28b64:	addeq	r5, r6, #2
   28b68:	b	28a6c <__flatcc_fb_parse@@Base+0x3a4>
   28b6c:	add	r5, r6, #1
   28b70:	cmp	r5, r8
   28b74:	beq	28a7c <__flatcc_fb_parse@@Base+0x3b4>
   28b78:	ldrb	r0, [r5]
   28b7c:	cmp	r0, #32
   28b80:	cmpne	r0, #9
   28b84:	bne	28a7c <__flatcc_fb_parse@@Base+0x3b4>
   28b88:	add	r5, r5, #1
   28b8c:	cmp	r8, r5
   28b90:	bne	28b78 <__flatcc_fb_parse@@Base+0x4b0>
   28b94:	b	28a7c <__flatcc_fb_parse@@Base+0x3b4>
   28b98:	add	r5, r6, #1
   28b9c:	cmp	r1, #32
   28ba0:	bcc	28bac <__flatcc_fb_parse@@Base+0x4e4>
   28ba4:	cmp	r1, #127	; 0x7f
   28ba8:	bne	28bb8 <__flatcc_fb_parse@@Base+0x4f0>
   28bac:	cmp	r1, #9
   28bb0:	cmpne	r1, #32
   28bb4:	bne	29330 <__flatcc_fb_parse@@Base+0xc68>
   28bb8:	mov	r0, r4
   28bbc:	mov	r1, #8
   28bc0:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   28bc4:	add	r5, r6, #1
   28bc8:	cmp	r5, r8
   28bcc:	beq	28bf4 <__flatcc_fb_parse@@Base+0x52c>
   28bd0:	ldrb	r0, [r6, #1]
   28bd4:	cmp	r0, #13
   28bd8:	b	28bf0 <__flatcc_fb_parse@@Base+0x528>
   28bdc:	add	r5, r6, #1
   28be0:	cmp	r5, r8
   28be4:	beq	28bf4 <__flatcc_fb_parse@@Base+0x52c>
   28be8:	ldrb	r0, [r6, #1]
   28bec:	cmp	r0, #10
   28bf0:	addeq	r5, r6, #2
   28bf4:	str	r5, [r4, #60]	; 0x3c
   28bf8:	ldr	r0, [r4, #64]	; 0x40
   28bfc:	add	r0, r0, #1
   28c00:	str	r0, [r4, #64]	; 0x40
   28c04:	b	28a7c <__flatcc_fb_parse@@Base+0x3b4>
   28c08:	add	r7, r6, #1
   28c0c:	mov	r0, r4
   28c10:	mov	r1, #19
   28c14:	mov	r2, r6
   28c18:	mov	r3, r7
   28c1c:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28c20:	mov	sl, r7
   28c24:	mov	r5, r7
   28c28:	cmp	r8, r7
   28c2c:	beq	28c40 <__flatcc_fb_parse@@Base+0x578>
   28c30:	ldrb	r0, [r5]
   28c34:	cmp	r0, #34	; 0x22
   28c38:	cmpne	r0, #92	; 0x5c
   28c3c:	bne	28c64 <__flatcc_fb_parse@@Base+0x59c>
   28c40:	cmp	sl, r5
   28c44:	beq	28c7c <__flatcc_fb_parse@@Base+0x5b4>
   28c48:	mov	r0, r4
   28c4c:	mov	r1, #20
   28c50:	mov	r2, sl
   28c54:	mov	r3, r5
   28c58:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28c5c:	mov	r6, r5
   28c60:	b	28c80 <__flatcc_fb_parse@@Base+0x5b8>
   28c64:	cmp	r0, #32
   28c68:	bcc	28c40 <__flatcc_fb_parse@@Base+0x578>
   28c6c:	add	r7, r5, #1
   28c70:	cmp	r0, #127	; 0x7f
   28c74:	bne	28c24 <__flatcc_fb_parse@@Base+0x55c>
   28c78:	b	28c40 <__flatcc_fb_parse@@Base+0x578>
   28c7c:	mov	r6, sl
   28c80:	ldrb	r0, [r5]
   28c84:	cmp	r0, #34	; 0x22
   28c88:	mov	sl, #48	; 0x30
   28c8c:	beq	2910c <__flatcc_fb_parse@@Base+0xa44>
   28c90:	cmp	r8, r5
   28c94:	cmpne	r0, #0
   28c98:	beq	2911c <__flatcc_fb_parse@@Base+0xa54>
   28c9c:	cmp	r0, #92	; 0x5c
   28ca0:	bne	28d68 <__flatcc_fb_parse@@Base+0x6a0>
   28ca4:	add	sl, r5, #1
   28ca8:	mov	r0, r4
   28cac:	mov	r1, #21
   28cb0:	mov	r2, r6
   28cb4:	mov	r3, sl
   28cb8:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28cbc:	ldr	r0, [sp, #16]
   28cc0:	cmp	r0, r5
   28cc4:	beq	2912c <__flatcc_fb_parse@@Base+0xa64>
   28cc8:	ldrb	r0, [sl]
   28ccc:	cmp	r0, #34	; 0x22
   28cd0:	bhi	28d9c <__flatcc_fb_parse@@Base+0x6d4>
   28cd4:	add	r1, pc, #0
   28cd8:	ldr	pc, [r1, r0, lsl #2]
   28cdc:	andeq	r9, r2, ip, lsr #2
   28ce0:	andeq	r8, r2, ip, lsr #27
   28ce4:	andeq	r8, r2, ip, lsr #27
   28ce8:	andeq	r8, r2, ip, lsr #27
   28cec:	andeq	r8, r2, ip, lsr #27
   28cf0:	andeq	r8, r2, ip, lsr #27
   28cf4:	andeq	r8, r2, ip, lsr #27
   28cf8:	andeq	r8, r2, ip, lsr #27
   28cfc:	andeq	r8, r2, ip, lsr #27
   28d00:	andeq	r8, r2, ip, lsr #27
   28d04:			; <UNDEFINED> instruction: 0x00028db4
   28d08:	andeq	r8, r2, ip, lsr #27
   28d0c:	andeq	r8, r2, ip, lsr #27
   28d10:	ldrdeq	r8, [r2], -r0
   28d14:	andeq	r8, r2, ip, lsr #27
   28d18:	andeq	r8, r2, ip, lsr #27
   28d1c:	andeq	r8, r2, ip, lsr #27
   28d20:	andeq	r8, r2, ip, lsr #27
   28d24:	andeq	r8, r2, ip, lsr #27
   28d28:	andeq	r8, r2, ip, lsr #27
   28d2c:	andeq	r8, r2, ip, lsr #27
   28d30:	andeq	r8, r2, ip, lsr #27
   28d34:	andeq	r8, r2, ip, lsr #27
   28d38:	andeq	r8, r2, ip, lsr #27
   28d3c:	andeq	r8, r2, ip, lsr #27
   28d40:	andeq	r8, r2, ip, lsr #27
   28d44:	andeq	r8, r2, ip, lsr #27
   28d48:	andeq	r8, r2, ip, lsr #27
   28d4c:	andeq	r8, r2, ip, lsr #27
   28d50:	andeq	r8, r2, ip, lsr #27
   28d54:	andeq	r8, r2, ip, lsr #27
   28d58:	andeq	r8, r2, ip, lsr #27
   28d5c:	andeq	r8, r2, ip, lsr #27
   28d60:	andeq	r8, r2, ip, lsr #27
   28d64:	andeq	r8, r2, r4, lsr #27
   28d68:	ldrb	r0, [r5]
   28d6c:	mov	sl, r5
   28d70:	cmp	r0, #13
   28d74:	cmpne	r0, #10
   28d78:	beq	29240 <__flatcc_fb_parse@@Base+0xb78>
   28d7c:	add	r3, r6, #1
   28d80:	mov	r0, r4
   28d84:	mov	r1, #6
   28d88:	mov	r2, r6
   28d8c:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   28d90:	add	r7, sl, #1
   28d94:	mov	sl, r7
   28d98:	b	28c24 <__flatcc_fb_parse@@Base+0x55c>
   28d9c:	cmp	r0, #92	; 0x5c
   28da0:	bne	28dac <__flatcc_fb_parse@@Base+0x6e4>
   28da4:	add	r7, r5, #2
   28da8:	b	28c24 <__flatcc_fb_parse@@Base+0x55c>
   28dac:	mov	r6, sl
   28db0:	b	28d70 <__flatcc_fb_parse@@Base+0x6a8>
   28db4:	add	r7, r5, #2
   28db8:	ldr	r0, [sp, #12]
   28dbc:	cmp	r0, r5
   28dc0:	beq	28dec <__flatcc_fb_parse@@Base+0x724>
   28dc4:	ldrb	r0, [r5, #2]
   28dc8:	cmp	r0, #13
   28dcc:	b	28de8 <__flatcc_fb_parse@@Base+0x720>
   28dd0:	add	r7, r5, #2
   28dd4:	ldr	r0, [sp, #12]
   28dd8:	cmp	r0, r5
   28ddc:	beq	28dec <__flatcc_fb_parse@@Base+0x724>
   28de0:	ldrb	r0, [r5, #2]
   28de4:	cmp	r0, #10
   28de8:	addeq	r7, r5, #3
   28dec:	str	r7, [r4, #60]	; 0x3c
   28df0:	ldr	r0, [r4, #64]	; 0x40
   28df4:	add	r0, r0, #1
   28df8:	str	r0, [r4, #64]	; 0x40
   28dfc:	mov	r0, r4
   28e00:	mov	r1, #18
   28e04:	mov	r2, sl
   28e08:	b	28c18 <__flatcc_fb_parse@@Base+0x550>
   28e0c:	add	r5, r6, #1
   28e10:	cmp	r5, r8
   28e14:	beq	29168 <__flatcc_fb_parse@@Base+0xaa0>
   28e18:	ldrb	r0, [r5]
   28e1c:	cmp	r0, #38	; 0x26
   28e20:	beq	29150 <__flatcc_fb_parse@@Base+0xa88>
   28e24:	cmp	r0, #61	; 0x3d
   28e28:	bne	29168 <__flatcc_fb_parse@@Base+0xaa0>
   28e2c:	add	r5, r6, #2
   28e30:	mov	r0, r4
   28e34:	movw	r1, #15654	; 0x3d26
   28e38:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   28e3c:	add	r5, r6, #1
   28e40:	cmp	r5, r8
   28e44:	beq	290b8 <__flatcc_fb_parse@@Base+0x9f0>
   28e48:	ldrb	r0, [r5]
   28e4c:	cmp	r0, #42	; 0x2a
   28e50:	beq	29174 <__flatcc_fb_parse@@Base+0xaac>
   28e54:	cmp	r0, #61	; 0x3d
   28e58:	bne	290b8 <__flatcc_fb_parse@@Base+0x9f0>
   28e5c:	mov	r0, r4
   28e60:	movw	r1, #15658	; 0x3d2a
   28e64:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   28e68:	add	r5, r6, #1
   28e6c:	cmp	r5, r8
   28e70:	beq	290c4 <__flatcc_fb_parse@@Base+0x9fc>
   28e74:	ldrb	r0, [r5]
   28e78:	cmp	r0, #43	; 0x2b
   28e7c:	beq	29180 <__flatcc_fb_parse@@Base+0xab8>
   28e80:	cmp	r0, #61	; 0x3d
   28e84:	bne	290c4 <__flatcc_fb_parse@@Base+0x9fc>
   28e88:	add	r5, r6, #2
   28e8c:	mov	r0, r4
   28e90:	movw	r1, #15659	; 0x3d2b
   28e94:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   28e98:	add	r5, r6, #1
   28e9c:	cmp	r5, r8
   28ea0:	beq	290e8 <__flatcc_fb_parse@@Base+0xa20>
   28ea4:	ldrb	r0, [r5]
   28ea8:	cmp	r0, #45	; 0x2d
   28eac:	beq	29260 <__flatcc_fb_parse@@Base+0xb98>
   28eb0:	cmp	r0, #62	; 0x3e
   28eb4:	beq	29270 <__flatcc_fb_parse@@Base+0xba8>
   28eb8:	cmp	r0, #61	; 0x3d
   28ebc:	bne	290e8 <__flatcc_fb_parse@@Base+0xa20>
   28ec0:	add	r5, r6, #2
   28ec4:	mov	r0, r4
   28ec8:	movw	r1, #15661	; 0x3d2d
   28ecc:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   28ed0:	add	r5, r6, #1
   28ed4:	cmp	r5, r8
   28ed8:	beq	2937c <__flatcc_fb_parse@@Base+0xcb4>
   28edc:	ldrb	r0, [r5]
   28ee0:	sub	r1, r0, #48	; 0x30
   28ee4:	cmp	r1, #10
   28ee8:	bcs	29348 <__flatcc_fb_parse@@Base+0xc80>
   28eec:	mov	r0, r6
   28ef0:	b	28ab4 <__flatcc_fb_parse@@Base+0x3ec>
   28ef4:	add	r5, r6, #1
   28ef8:	cmp	r5, r8
   28efc:	beq	290f4 <__flatcc_fb_parse@@Base+0xa2c>
   28f00:	ldrb	r0, [r5]
   28f04:	cmp	r0, #42	; 0x2a
   28f08:	beq	29280 <__flatcc_fb_parse@@Base+0xbb8>
   28f0c:	cmp	r0, #61	; 0x3d
   28f10:	beq	292b0 <__flatcc_fb_parse@@Base+0xbe8>
   28f14:	cmp	r0, #47	; 0x2f
   28f18:	bne	290f4 <__flatcc_fb_parse@@Base+0xa2c>
   28f1c:	add	r0, r6, #2
   28f20:	cmp	r0, r8
   28f24:	beq	29394 <__flatcc_fb_parse@@Base+0xccc>
   28f28:	ldrb	r1, [r0]
   28f2c:	sub	r2, r1, #33	; 0x21
   28f30:	clz	r2, r2
   28f34:	lsr	r2, r2, #5
   28f38:	sub	r1, r1, #47	; 0x2f
   28f3c:	clz	r1, r1
   28f40:	lsr	r1, r1, #5
   28f44:	orr	r1, r1, r2
   28f48:	b	29398 <__flatcc_fb_parse@@Base+0xcd0>
   28f4c:	add	r0, r6, #1
   28f50:	cmp	r0, r8
   28f54:	mov	r5, r6
   28f58:	beq	28a94 <__flatcc_fb_parse@@Base+0x3cc>
   28f5c:	ldrb	r0, [r0]
   28f60:	orr	r0, r0, #32
   28f64:	cmp	r0, #120	; 0x78
   28f68:	mov	r5, r6
   28f6c:	bne	28a94 <__flatcc_fb_parse@@Base+0x3cc>
   28f70:	add	r5, r6, #2
   28f74:	cmp	r5, r8
   28f78:	bne	28f8c <__flatcc_fb_parse@@Base+0x8c4>
   28f7c:	b	28fb4 <__flatcc_fb_parse@@Base+0x8ec>
   28f80:	add	r5, r5, #1
   28f84:	cmp	r8, r5
   28f88:	beq	28fb4 <__flatcc_fb_parse@@Base+0x8ec>
   28f8c:	ldrb	r0, [r5]
   28f90:	sub	r1, r0, #48	; 0x30
   28f94:	uxtb	r1, r1
   28f98:	cmp	r1, #10
   28f9c:	bcc	28f80 <__flatcc_fb_parse@@Base+0x8b8>
   28fa0:	orr	r0, r0, #32
   28fa4:	sub	r0, r0, #97	; 0x61
   28fa8:	uxtb	r0, r0
   28fac:	cmp	r0, #5
   28fb0:	bls	28f80 <__flatcc_fb_parse@@Base+0x8b8>
   28fb4:	mov	r0, r4
   28fb8:	mov	r1, #14
   28fbc:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   28fc0:	add	r5, r6, #1
   28fc4:	cmp	r5, r8
   28fc8:	beq	290d0 <__flatcc_fb_parse@@Base+0xa08>
   28fcc:	ldrb	r0, [r5]
   28fd0:	cmp	r0, #58	; 0x3a
   28fd4:	beq	29190 <__flatcc_fb_parse@@Base+0xac8>
   28fd8:	cmp	r0, #61	; 0x3d
   28fdc:	bne	290d0 <__flatcc_fb_parse@@Base+0xa08>
   28fe0:	add	r5, r6, #2
   28fe4:	mov	r0, r4
   28fe8:	movw	r1, #15674	; 0x3d3a
   28fec:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   28ff0:	add	r5, r6, #1
   28ff4:	cmp	r5, r8
   28ff8:	beq	29100 <__flatcc_fb_parse@@Base+0xa38>
   28ffc:	ldrb	r0, [r5]
   29000:	cmp	r0, #61	; 0x3d
   29004:	beq	292c0 <__flatcc_fb_parse@@Base+0xbf8>
   29008:	cmp	r0, #60	; 0x3c
   2900c:	beq	292d0 <__flatcc_fb_parse@@Base+0xc08>
   29010:	cmp	r0, #45	; 0x2d
   29014:	bne	29100 <__flatcc_fb_parse@@Base+0xa38>
   29018:	add	r5, r6, #2
   2901c:	mov	r0, r4
   29020:	movw	r1, #11580	; 0x2d3c
   29024:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29028:	add	r5, r6, #1
   2902c:	cmp	r5, r8
   29030:	beq	29324 <__flatcc_fb_parse@@Base+0xc5c>
   29034:	ldrb	r0, [r5]
   29038:	cmp	r0, #61	; 0x3d
   2903c:	beq	291bc <__flatcc_fb_parse@@Base+0xaf4>
   29040:	cmp	r0, #62	; 0x3e
   29044:	bne	29324 <__flatcc_fb_parse@@Base+0xc5c>
   29048:	add	r5, r6, #2
   2904c:	mov	r0, r4
   29050:	movw	r1, #15933	; 0x3e3d
   29054:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29058:	add	r5, r6, #1
   2905c:	cmp	r5, r8
   29060:	beq	290dc <__flatcc_fb_parse@@Base+0xa14>
   29064:	ldrb	r0, [r5]
   29068:	cmp	r0, #62	; 0x3e
   2906c:	beq	291e8 <__flatcc_fb_parse@@Base+0xb20>
   29070:	cmp	r0, #61	; 0x3d
   29074:	bne	290dc <__flatcc_fb_parse@@Base+0xa14>
   29078:	add	r5, r6, #2
   2907c:	mov	r0, r4
   29080:	movw	r1, #15678	; 0x3d3e
   29084:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29088:	add	r5, r6, #1
   2908c:	cmp	r5, r8
   29090:	beq	29234 <__flatcc_fb_parse@@Base+0xb6c>
   29094:	ldrb	r0, [r5]
   29098:	cmp	r0, #124	; 0x7c
   2909c:	beq	2921c <__flatcc_fb_parse@@Base+0xb54>
   290a0:	cmp	r0, #61	; 0x3d
   290a4:	bne	29234 <__flatcc_fb_parse@@Base+0xb6c>
   290a8:	add	r5, r6, #2
   290ac:	mov	r0, r4
   290b0:	movw	r1, #15740	; 0x3d7c
   290b4:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   290b8:	mov	r0, r4
   290bc:	mov	r1, #42	; 0x2a
   290c0:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   290c4:	mov	r0, r4
   290c8:	mov	r1, #43	; 0x2b
   290cc:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   290d0:	mov	r0, r4
   290d4:	mov	r1, #58	; 0x3a
   290d8:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   290dc:	mov	r0, r4
   290e0:	mov	r1, #62	; 0x3e
   290e4:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   290e8:	mov	r0, r4
   290ec:	mov	r1, #45	; 0x2d
   290f0:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   290f4:	mov	r0, r4
   290f8:	mov	r1, #47	; 0x2f
   290fc:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29100:	mov	r0, r4
   29104:	mov	r1, #60	; 0x3c
   29108:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   2910c:	add	r5, r5, #1
   29110:	mov	r0, r4
   29114:	mov	r1, #22
   29118:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   2911c:	mov	r0, r4
   29120:	mov	r1, #23
   29124:	mov	r2, r5
   29128:	b	28a74 <__flatcc_fb_parse@@Base+0x3ac>
   2912c:	add	r5, r5, #1
   29130:	mov	r0, r4
   29134:	mov	r1, #23
   29138:	mov	r2, r5
   2913c:	mov	r3, r5
   29140:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29144:	mov	r6, r5
   29148:	mov	sl, #48	; 0x30
   2914c:	b	28a7c <__flatcc_fb_parse@@Base+0x3b4>
   29150:	add	r5, r6, #2
   29154:	mov	r0, r4
   29158:	movw	r1, #9766	; 0x2626
   2915c:	mov	r2, r6
   29160:	mov	r3, r5
   29164:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29168:	mov	r0, r4
   2916c:	mov	r1, #38	; 0x26
   29170:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29174:	mov	r0, r4
   29178:	movw	r1, #10794	; 0x2a2a
   2917c:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29180:	add	r5, r6, #2
   29184:	mov	r0, r4
   29188:	movw	r1, #11051	; 0x2b2b
   2918c:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29190:	add	r5, r6, #2
   29194:	cmp	r5, r8
   29198:	beq	29304 <__flatcc_fb_parse@@Base+0xc3c>
   2919c:	ldrb	r0, [r5]
   291a0:	cmp	r0, #61	; 0x3d
   291a4:	bne	29304 <__flatcc_fb_parse@@Base+0xc3c>
   291a8:	add	r5, r6, #3
   291ac:	mov	r0, r4
   291b0:	movw	r1, #14906	; 0x3a3a
   291b4:	movt	r1, #61	; 0x3d
   291b8:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   291bc:	add	r5, r6, #2
   291c0:	cmp	r5, r8
   291c4:	beq	29310 <__flatcc_fb_parse@@Base+0xc48>
   291c8:	ldrb	r0, [r5]
   291cc:	cmp	r0, #61	; 0x3d
   291d0:	bne	29310 <__flatcc_fb_parse@@Base+0xc48>
   291d4:	add	r5, r6, #3
   291d8:	mov	r0, r4
   291dc:	movw	r1, #15677	; 0x3d3d
   291e0:	movt	r1, #61	; 0x3d
   291e4:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   291e8:	add	r5, r6, #2
   291ec:	cmp	r5, r8
   291f0:	beq	2933c <__flatcc_fb_parse@@Base+0xc74>
   291f4:	ldrb	r0, [r5]
   291f8:	cmp	r0, #62	; 0x3e
   291fc:	beq	295f4 <__flatcc_fb_parse@@Base+0xf2c>
   29200:	cmp	r0, #61	; 0x3d
   29204:	bne	2933c <__flatcc_fb_parse@@Base+0xc74>
   29208:	add	r5, r6, #3
   2920c:	mov	r0, r4
   29210:	movw	r1, #15934	; 0x3e3e
   29214:	movt	r1, #61	; 0x3d
   29218:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   2921c:	add	r5, r6, #2
   29220:	mov	r0, r4
   29224:	movw	r1, #31868	; 0x7c7c
   29228:	mov	r2, r6
   2922c:	mov	r3, r5
   29230:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29234:	mov	r0, r4
   29238:	mov	r1, #124	; 0x7c
   2923c:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29240:	mov	r0, r4
   29244:	mov	r1, #23
   29248:	mov	r2, sl
   2924c:	mov	r3, sl
   29250:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29254:	mov	r5, sl
   29258:	mov	sl, #48	; 0x30
   2925c:	b	28a7c <__flatcc_fb_parse@@Base+0x3b4>
   29260:	add	r5, r6, #2
   29264:	mov	r0, r4
   29268:	movw	r1, #11565	; 0x2d2d
   2926c:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29270:	add	r5, r6, #2
   29274:	mov	r0, r4
   29278:	movw	r1, #15917	; 0x3e2d
   2927c:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29280:	add	r0, r6, #2
   29284:	cmp	r0, r8
   29288:	beq	29494 <__flatcc_fb_parse@@Base+0xdcc>
   2928c:	ldrb	r1, [r0]
   29290:	sub	r2, r1, #33	; 0x21
   29294:	clz	r2, r2
   29298:	lsr	r2, r2, #5
   2929c:	sub	r1, r1, #42	; 0x2a
   292a0:	clz	r1, r1
   292a4:	lsr	r1, r1, #5
   292a8:	orr	r1, r1, r2
   292ac:	b	29498 <__flatcc_fb_parse@@Base+0xdd0>
   292b0:	add	r5, r6, #2
   292b4:	mov	r0, r4
   292b8:	movw	r1, #15663	; 0x3d2f
   292bc:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   292c0:	add	r5, r6, #2
   292c4:	mov	r0, r4
   292c8:	movw	r1, #15676	; 0x3d3c
   292cc:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   292d0:	add	r5, r6, #2
   292d4:	cmp	r5, r8
   292d8:	beq	29388 <__flatcc_fb_parse@@Base+0xcc0>
   292dc:	ldrb	r0, [r5]
   292e0:	cmp	r0, #60	; 0x3c
   292e4:	beq	2962c <__flatcc_fb_parse@@Base+0xf64>
   292e8:	cmp	r0, #61	; 0x3d
   292ec:	bne	29388 <__flatcc_fb_parse@@Base+0xcc0>
   292f0:	add	r5, r6, #3
   292f4:	mov	r0, r4
   292f8:	movw	r1, #15420	; 0x3c3c
   292fc:	movt	r1, #61	; 0x3d
   29300:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29304:	mov	r0, r4
   29308:	movw	r1, #14906	; 0x3a3a
   2930c:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29310:	mov	r0, r4
   29314:	movw	r1, #15677	; 0x3d3d
   29318:	mov	r2, r6
   2931c:	mov	r3, r5
   29320:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29324:	mov	r0, r4
   29328:	mov	r1, #61	; 0x3d
   2932c:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29330:	mov	r0, r4
   29334:	mov	r1, #5
   29338:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   2933c:	mov	r0, r4
   29340:	movw	r1, #15934	; 0x3e3e
   29344:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29348:	cmp	r0, #46	; 0x2e
   2934c:	bne	2937c <__flatcc_fb_parse@@Base+0xcb4>
   29350:	add	r5, r6, #2
   29354:	cmp	r5, r8
   29358:	beq	29620 <__flatcc_fb_parse@@Base+0xf58>
   2935c:	ldrb	r0, [r5]
   29360:	cmp	r0, #46	; 0x2e
   29364:	bne	29620 <__flatcc_fb_parse@@Base+0xf58>
   29368:	add	r5, r6, #3
   2936c:	mov	r0, r4
   29370:	movw	r1, #11822	; 0x2e2e
   29374:	movt	r1, #46	; 0x2e
   29378:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   2937c:	mov	r0, r4
   29380:	mov	r1, #46	; 0x2e
   29384:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29388:	mov	r0, r4
   2938c:	movw	r1, #15420	; 0x3c3c
   29390:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29394:	mov	r1, #0
   29398:	add	r5, r0, r1
   2939c:	sub	r0, r5, r6
   293a0:	sub	r0, r0, #3
   293a4:	clz	r0, r0
   293a8:	lsr	r0, r0, #5
   293ac:	str	r0, [r4, #32]
   293b0:	str	r4, [sp, #4]
   293b4:	mov	r0, r4
   293b8:	mov	r1, r5
   293bc:	mov	r2, r5
   293c0:	bl	29a80 <__flatcc_fb_clear_parser@@Base+0x288>
   293c4:	b	29410 <__flatcc_fb_parse@@Base+0xd48>
   293c8:	cmp	r0, #0
   293cc:	beq	296e0 <__flatcc_fb_parse@@Base+0x1018>
   293d0:	sub	r0, r5, r4
   293d4:	add	r5, r0, #1
   293d8:	ldrb	r0, [r6]
   293dc:	cmp	r0, #32
   293e0:	cmpne	r0, #9
   293e4:	bne	293fc <__flatcc_fb_parse@@Base+0xd34>
   293e8:	add	r2, r6, #1
   293ec:	ldr	r0, [sp, #4]
   293f0:	mov	r1, r6
   293f4:	bl	29a80 <__flatcc_fb_clear_parser@@Base+0x288>
   293f8:	b	29410 <__flatcc_fb_parse@@Base+0xd48>
   293fc:	add	r3, r6, #1
   29400:	ldr	r0, [sp, #4]
   29404:	mov	r1, #7
   29408:	mov	r2, r6
   2940c:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29410:	sub	r0, r8, r5
   29414:	mov	r1, #0
   29418:	mov	r4, r1
   2941c:	adds	r7, r0, r1
   29420:	beq	2943c <__flatcc_fb_parse@@Base+0xd74>
   29424:	ldrb	r2, [r5, -r4]
   29428:	cmp	r2, #32
   2942c:	bcc	2943c <__flatcc_fb_parse@@Base+0xd74>
   29430:	sub	r1, r4, #1
   29434:	cmp	r2, #127	; 0x7f
   29438:	bne	29418 <__flatcc_fb_parse@@Base+0xd50>
   2943c:	sub	sl, r5, r4
   29440:	cmp	r4, #0
   29444:	mov	r6, r5
   29448:	beq	29460 <__flatcc_fb_parse@@Base+0xd98>
   2944c:	ldr	r0, [sp, #4]
   29450:	mov	r1, r5
   29454:	mov	r2, sl
   29458:	bl	29a80 <__flatcc_fb_clear_parser@@Base+0x288>
   2945c:	mov	r6, sl
   29460:	cmp	r7, #0
   29464:	beq	296e0 <__flatcc_fb_parse@@Base+0x1018>
   29468:	ldrb	r0, [sl]
   2946c:	cmp	r0, #13
   29470:	cmpne	r0, #10
   29474:	bne	293c8 <__flatcc_fb_parse@@Base+0xd00>
   29478:	ldr	r0, [sp, #4]
   2947c:	mov	r1, #0
   29480:	str	r1, [r0, #32]
   29484:	sub	r5, r5, r4
   29488:	mov	r4, r0
   2948c:	mov	sl, #48	; 0x30
   29490:	b	28a7c <__flatcc_fb_parse@@Base+0x3b4>
   29494:	mov	r1, #0
   29498:	add	r7, r0, r1
   2949c:	sub	r0, r7, r6
   294a0:	sub	r0, r0, #3
   294a4:	clz	r0, r0
   294a8:	lsr	r0, r0, #5
   294ac:	str	r0, [r4, #32]
   294b0:	mov	r0, r4
   294b4:	mov	r1, r7
   294b8:	mov	r2, r7
   294bc:	bl	29a80 <__flatcc_fb_clear_parser@@Base+0x288>
   294c0:	b	294d8 <__flatcc_fb_parse@@Base+0xe10>
   294c4:	addeq	r7, r5, #2
   294c8:	str	r7, [r4, #60]	; 0x3c
   294cc:	ldr	r0, [r4, #64]	; 0x40
   294d0:	add	r0, r0, #1
   294d4:	str	r0, [r4, #64]	; 0x40
   294d8:	cmp	r7, r8
   294dc:	mov	r5, r7
   294e0:	beq	29524 <__flatcc_fb_parse@@Base+0xe5c>
   294e4:	mov	r5, r7
   294e8:	b	294f8 <__flatcc_fb_parse@@Base+0xe30>
   294ec:	add	r5, r5, #1
   294f0:	cmp	r8, r5
   294f4:	beq	29524 <__flatcc_fb_parse@@Base+0xe5c>
   294f8:	ldrb	r0, [r5]
   294fc:	cmp	r0, #32
   29500:	bcc	29524 <__flatcc_fb_parse@@Base+0xe5c>
   29504:	cmp	r0, #127	; 0x7f
   29508:	beq	29524 <__flatcc_fb_parse@@Base+0xe5c>
   2950c:	cmp	r0, #47	; 0x2f
   29510:	bne	294ec <__flatcc_fb_parse@@Base+0xe24>
   29514:	ldrb	r0, [r5, #-1]
   29518:	cmp	r0, #42	; 0x2a
   2951c:	bne	294ec <__flatcc_fb_parse@@Base+0xe24>
   29520:	sub	r5, r5, #1
   29524:	cmp	r7, r5
   29528:	beq	2954c <__flatcc_fb_parse@@Base+0xe84>
   2952c:	mov	r0, r4
   29530:	mov	r1, r7
   29534:	mov	r2, r5
   29538:	bl	29a80 <__flatcc_fb_clear_parser@@Base+0x288>
   2953c:	mov	r6, r5
   29540:	cmp	r5, r8
   29544:	bne	29558 <__flatcc_fb_parse@@Base+0xe90>
   29548:	b	296e8 <__flatcc_fb_parse@@Base+0x1020>
   2954c:	mov	r6, r7
   29550:	cmp	r5, r8
   29554:	beq	296e8 <__flatcc_fb_parse@@Base+0x1020>
   29558:	ldrb	r0, [r5]
   2955c:	cmp	r0, #10
   29560:	beq	295ac <__flatcc_fb_parse@@Base+0xee4>
   29564:	cmp	r0, #13
   29568:	beq	295c4 <__flatcc_fb_parse@@Base+0xefc>
   2956c:	cmp	r0, #0
   29570:	beq	296e8 <__flatcc_fb_parse@@Base+0x1020>
   29574:	cmp	r0, #32
   29578:	bcc	29584 <__flatcc_fb_parse@@Base+0xebc>
   2957c:	cmp	r0, #127	; 0x7f
   29580:	bne	29674 <__flatcc_fb_parse@@Base+0xfac>
   29584:	add	r7, r5, #1
   29588:	ldrb	r0, [r6]
   2958c:	cmp	r0, #32
   29590:	cmpne	r0, #9
   29594:	bne	295dc <__flatcc_fb_parse@@Base+0xf14>
   29598:	add	r2, r6, #1
   2959c:	mov	r0, r4
   295a0:	mov	r1, r6
   295a4:	bl	29a80 <__flatcc_fb_clear_parser@@Base+0x288>
   295a8:	b	294d8 <__flatcc_fb_parse@@Base+0xe10>
   295ac:	add	r7, r5, #1
   295b0:	cmp	r7, r8
   295b4:	beq	294c8 <__flatcc_fb_parse@@Base+0xe00>
   295b8:	ldrb	r0, [r5, #1]
   295bc:	cmp	r0, #13
   295c0:	b	294c4 <__flatcc_fb_parse@@Base+0xdfc>
   295c4:	add	r7, r5, #1
   295c8:	cmp	r7, r8
   295cc:	beq	294c8 <__flatcc_fb_parse@@Base+0xe00>
   295d0:	ldrb	r0, [r5, #1]
   295d4:	cmp	r0, #10
   295d8:	b	294c4 <__flatcc_fb_parse@@Base+0xdfc>
   295dc:	add	r3, r6, #1
   295e0:	mov	r0, r4
   295e4:	mov	r1, #7
   295e8:	mov	r2, r6
   295ec:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   295f0:	b	294d8 <__flatcc_fb_parse@@Base+0xe10>
   295f4:	add	r5, r6, #3
   295f8:	cmp	r5, r8
   295fc:	beq	29658 <__flatcc_fb_parse@@Base+0xf90>
   29600:	ldrb	r0, [r5]
   29604:	cmp	r0, #61	; 0x3d
   29608:	bne	29658 <__flatcc_fb_parse@@Base+0xf90>
   2960c:	add	r5, r6, #4
   29610:	mov	r0, r4
   29614:	movw	r1, #15934	; 0x3e3e
   29618:	movt	r1, #15678	; 0x3d3e
   2961c:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29620:	mov	r0, r4
   29624:	movw	r1, #11822	; 0x2e2e
   29628:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   2962c:	add	r5, r6, #3
   29630:	cmp	r5, r8
   29634:	beq	29664 <__flatcc_fb_parse@@Base+0xf9c>
   29638:	ldrb	r0, [r5]
   2963c:	cmp	r0, #61	; 0x3d
   29640:	bne	29664 <__flatcc_fb_parse@@Base+0xf9c>
   29644:	add	r5, r6, #4
   29648:	mov	r0, r4
   2964c:	movw	r1, #15420	; 0x3c3c
   29650:	movt	r1, #15676	; 0x3d3c
   29654:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29658:	mov	r0, r4
   2965c:	ldr	r1, [sp, #8]
   29660:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29664:	mov	r0, r4
   29668:	movw	r1, #15420	; 0x3c3c
   2966c:	movt	r1, #60	; 0x3c
   29670:	b	28a70 <__flatcc_fb_parse@@Base+0x3a8>
   29674:	mov	r0, #0
   29678:	str	r0, [r4, #32]
   2967c:	add	r5, r5, #2
   29680:	mov	r6, r5
   29684:	b	28a7c <__flatcc_fb_parse@@Base+0x3b4>
   29688:	mov	r6, r5
   2968c:	cmp	r5, r8
   29690:	beq	296a0 <__flatcc_fb_parse@@Base+0xfd8>
   29694:	ldrb	r0, [r5]
   29698:	cmp	r0, #0
   2969c:	beq	296c4 <__flatcc_fb_parse@@Base+0xffc>
   296a0:	mov	r0, r4
   296a4:	mov	r1, #0
   296a8:	mov	r2, r5
   296ac:	b	296d0 <__flatcc_fb_parse@@Base+0x1008>
   296b0:	mov	r0, r4
   296b4:	mov	r1, #0
   296b8:	mov	r2, r6
   296bc:	mov	r3, r6
   296c0:	b	296d4 <__flatcc_fb_parse@@Base+0x100c>
   296c4:	mov	r0, r4
   296c8:	mov	r1, #0
   296cc:	mov	r2, r6
   296d0:	mov	r3, r5
   296d4:	sub	sp, fp, #28
   296d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   296dc:	b	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   296e0:	sub	r5, r5, r4
   296e4:	ldr	r4, [sp, #4]
   296e8:	mov	r0, r4
   296ec:	mov	r1, #27
   296f0:	mov	r2, r5
   296f4:	mov	r3, r5
   296f8:	bl	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   296fc:	cmp	r5, r8
   29700:	bne	29694 <__flatcc_fb_parse@@Base+0xfcc>
   29704:	b	296a0 <__flatcc_fb_parse@@Base+0xfd8>
   29708:	push	{r4, sl, fp, lr}
   2970c:	add	fp, sp, #8
   29710:	mov	r4, r0
   29714:	ldr	r2, [r0, #24]
   29718:	ldr	r0, [r0, #40]	; 0x28
   2971c:	add	r1, r0, #20
   29720:	str	r1, [r4, #40]	; 0x28
   29724:	cmp	r1, r2
   29728:	beq	29754 <__flatcc_fb_parse@@Base+0x108c>
   2972c:	ldr	r0, [r0, #36]	; 0x24
   29730:	cmn	r0, #964	; 0x3c4
   29734:	bne	2974c <__flatcc_fb_parse@@Base+0x1084>
   29738:	mov	r0, r4
   2973c:	bl	2a2fc <__flatcc_fb_clear_parser@@Base+0xb04>
   29740:	ldr	r2, [r4, #24]
   29744:	ldr	r0, [r4, #40]	; 0x28
   29748:	b	2971c <__flatcc_fb_parse@@Base+0x1054>
   2974c:	mov	r0, r1
   29750:	pop	{r4, sl, fp, pc}
   29754:	str	r0, [r4, #40]	; 0x28
   29758:	movw	r0, #30217	; 0x7609
   2975c:	movt	r0, #4
   29760:	movw	r1, #55678	; 0xd97e
   29764:	movt	r1, #4
   29768:	movw	r3, #55967	; 0xda9f
   2976c:	movt	r3, #4
   29770:	movw	r2, #341	; 0x155
   29774:	bl	14ab4 <__assert_fail@plt>
   29778:	push	{r4, r5, fp, lr}
   2977c:	add	fp, sp, #8
   29780:	mov	r4, r0
   29784:	bl	2a328 <__flatcc_fb_clear_parser@@Base+0xb30>
   29788:	ldr	r5, [r4, #40]	; 0x28
   2978c:	mov	r0, r5
   29790:	bl	2a3f4 <__flatcc_fb_clear_parser@@Base+0xbfc>
   29794:	cmp	r0, #0
   29798:	bne	297e0 <__flatcc_fb_parse@@Base+0x1118>
   2979c:	ldr	r0, [r4, #108]	; 0x6c
   297a0:	cmp	r0, #9
   297a4:	bgt	297f4 <__flatcc_fb_parse@@Base+0x112c>
   297a8:	mov	r0, r4
   297ac:	bl	2a404 <__flatcc_fb_clear_parser@@Base+0xc0c>
   297b0:	ldr	r1, [r4, #40]	; 0x28
   297b4:	cmp	r1, r5
   297b8:	mov	r5, r1
   297bc:	bne	2978c <__flatcc_fb_parse@@Base+0x10c4>
   297c0:	ldr	r0, [r4, #108]	; 0x6c
   297c4:	cmp	r0, #0
   297c8:	popne	{r4, r5, fp, pc}
   297cc:	movw	r2, #55999	; 0xdabf
   297d0:	movt	r2, #4
   297d4:	mov	r0, r4
   297d8:	pop	{r4, r5, fp, lr}
   297dc:	b	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   297e0:	add	r0, r4, #356	; 0x164
   297e4:	bl	2a6b8 <__flatcc_fb_clear_parser@@Base+0xec0>
   297e8:	add	r0, r4, #392	; 0x188
   297ec:	pop	{r4, r5, fp, lr}
   297f0:	b	2a6f0 <__flatcc_fb_clear_parser@@Base+0xef8>
   297f4:	pop	{r4, r5, fp, pc}

000297f8 <__flatcc_fb_clear_parser@@Base>:
   297f8:	push	{r4, r5, fp, lr}
   297fc:	add	fp, sp, #8
   29800:	mov	r4, r0
   29804:	ldr	r5, [r0, #392]	; 0x188
   29808:	cmp	r5, #0
   2980c:	bne	29820 <__flatcc_fb_clear_parser@@Base+0x28>
   29810:	b	29840 <__flatcc_fb_clear_parser@@Base+0x48>
   29814:	ldr	r5, [r5]
   29818:	cmp	r5, #0
   2981c:	beq	29840 <__flatcc_fb_clear_parser@@Base+0x48>
   29820:	ldrh	r0, [r5, #8]
   29824:	cmp	r0, #4
   29828:	bhi	29814 <__flatcc_fb_clear_parser@@Base+0x1c>
   2982c:	add	r0, r5, #56	; 0x38
   29830:	bl	266c8 <fb_symbol_table_clear@@Base>
   29834:	add	r0, r5, #72	; 0x48
   29838:	bl	33ddc <fb_value_set_clear@@Base>
   2983c:	b	29814 <__flatcc_fb_clear_parser@@Base+0x1c>
   29840:	add	r0, r4, #448	; 0x1c0
   29844:	bl	27494 <fb_schema_table_clear@@Base>
   29848:	add	r0, r4, #432	; 0x1b0
   2984c:	bl	337bc <fb_name_table_clear@@Base>
   29850:	add	r0, r4, #524	; 0x20c
   29854:	bl	26124 <ptr_set_clear@@Base>
   29858:	ldr	r0, [r4, #112]	; 0x70
   2985c:	cmp	r0, #0
   29860:	beq	29868 <__flatcc_fb_clear_parser@@Base+0x70>
   29864:	bl	14928 <free@plt>
   29868:	ldr	r0, [r4, #20]
   2986c:	cmp	r0, #0
   29870:	beq	29878 <__flatcc_fb_clear_parser@@Base+0x80>
   29874:	bl	14928 <free@plt>
   29878:	ldr	r0, [r4, #512]	; 0x200
   2987c:	cmp	r0, #0
   29880:	beq	29888 <__flatcc_fb_clear_parser@@Base+0x90>
   29884:	bl	14928 <free@plt>
   29888:	ldr	r0, [r4, #516]	; 0x204
   2988c:	cmp	r0, #0
   29890:	beq	29898 <__flatcc_fb_clear_parser@@Base+0xa0>
   29894:	bl	14928 <free@plt>
   29898:	ldr	r0, [r4, #520]	; 0x208
   2989c:	cmp	r0, #0
   298a0:	beq	298a8 <__flatcc_fb_clear_parser@@Base+0xb0>
   298a4:	bl	14928 <free@plt>
   298a8:	ldr	r0, [r4, #548]	; 0x224
   298ac:	cmp	r0, #0
   298b0:	beq	298b8 <__flatcc_fb_clear_parser@@Base+0xc0>
   298b4:	bl	14928 <free@plt>
   298b8:	add	r0, r4, #416	; 0x1a0
   298bc:	movw	r1, #39160	; 0x98f8
   298c0:	movt	r1, #2
   298c4:	mov	r2, #0
   298c8:	bl	26d34 <fb_scope_table_destroy@@Base>
   298cc:	mov	r0, r4
   298d0:	bl	29900 <__flatcc_fb_clear_parser@@Base+0x108>
   298d4:	ldr	r0, [r4, #16]
   298d8:	cmp	r0, #0
   298dc:	beq	298e4 <__flatcc_fb_clear_parser@@Base+0xec>
   298e0:	bl	14928 <free@plt>
   298e4:	mov	r0, r4
   298e8:	mov	r1, #0
   298ec:	mov	r2, #560	; 0x230
   298f0:	pop	{r4, r5, fp, lr}
   298f4:	b	14a0c <memset@plt>
   298f8:	add	r0, r1, #4
   298fc:	b	266c8 <fb_symbol_table_clear@@Base>
   29900:	push	{r4, sl, fp, lr}
   29904:	add	fp, sp, #8
   29908:	ldr	r0, [r0, #48]	; 0x30
   2990c:	cmp	r0, #0
   29910:	popeq	{r4, sl, fp, pc}
   29914:	ldr	r4, [r0]
   29918:	bl	14928 <free@plt>
   2991c:	cmp	r4, #0
   29920:	mov	r0, r4
   29924:	bne	29914 <__flatcc_fb_clear_parser@@Base+0x11c>
   29928:	pop	{r4, sl, fp, pc}
   2992c:	mov	r3, #0
   29930:	b	29934 <__flatcc_fb_clear_parser@@Base+0x13c>
   29934:	push	{fp, lr}
   29938:	mov	fp, sp
   2993c:	sub	sp, sp, #8
   29940:	mov	ip, #0
   29944:	str	ip, [sp]
   29948:	str	ip, [sp, #4]
   2994c:	bl	28188 <__flatcc_error_report@@Base>
   29950:	mov	sp, fp
   29954:	pop	{fp, pc}
   29958:	push	{r4, r5, r6, r7, fp, lr}
   2995c:	add	fp, sp, #16
   29960:	mov	r4, r0
   29964:	ldr	r2, [r0, #44]	; 0x2c
   29968:	ldr	r0, [r0, #52]	; 0x34
   2996c:	add	r1, r1, #15
   29970:	bic	r6, r1, #15
   29974:	add	r1, r0, r6
   29978:	cmp	r1, r2
   2997c:	bls	299b4 <__flatcc_fb_clear_parser@@Base+0x1bc>
   29980:	mov	r7, #65536	; 0x10000
   29984:	mov	r0, #65536	; 0x10000
   29988:	mov	r1, #1
   2998c:	bl	148f8 <calloc@plt>
   29990:	mov	r5, r0
   29994:	bl	285e4 <__flatcc_fb_init_parser@@Base+0x1dc>
   29998:	ldr	r0, [r4, #48]	; 0x30
   2999c:	mov	r1, r5
   299a0:	str	r0, [r1], r7
   299a4:	add	r0, r5, #16
   299a8:	str	r1, [r4, #44]	; 0x2c
   299ac:	str	r5, [r4, #48]	; 0x30
   299b0:	str	r0, [r4, #52]	; 0x34
   299b4:	ldr	r1, [r4, #52]	; 0x34
   299b8:	add	r1, r1, r6
   299bc:	str	r1, [r4, #52]	; 0x34
   299c0:	pop	{r4, r5, r6, r7, fp, pc}
   299c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   299c8:	add	fp, sp, #24
   299cc:	mov	r9, r3
   299d0:	mov	r5, r2
   299d4:	mov	r8, r1
   299d8:	mov	r4, r0
   299dc:	ldr	r1, [r0, #20]
   299e0:	ldr	r0, [r0, #28]
   299e4:	ldr	r7, [r4, #40]	; 0x28
   299e8:	add	r2, r0, r0, lsl #2
   299ec:	add	r1, r1, r2, lsl #2
   299f0:	str	r1, [r4, #24]
   299f4:	cmp	r7, r1
   299f8:	bne	29a48 <__flatcc_fb_clear_parser@@Base+0x250>
   299fc:	lsl	r1, r0, #1
   29a00:	cmp	r0, #0
   29a04:	movweq	r1, #1024	; 0x400
   29a08:	str	r1, [r4, #28]
   29a0c:	add	r0, r1, r1, lsl #2
   29a10:	lsl	r1, r0, #2
   29a14:	ldr	r6, [r4, #20]
   29a18:	mov	r0, r6
   29a1c:	bl	14970 <realloc@plt>
   29a20:	str	r0, [r4, #20]
   29a24:	bl	285e4 <__flatcc_fb_init_parser@@Base+0x1dc>
   29a28:	sub	r0, r7, r6
   29a2c:	ldr	r1, [r4, #20]
   29a30:	ldr	r2, [r4, #28]
   29a34:	add	r0, r1, r0
   29a38:	str	r0, [r4, #40]	; 0x28
   29a3c:	add	r0, r2, r2, lsl #2
   29a40:	add	r0, r1, r0, lsl #2
   29a44:	str	r0, [r4, #24]
   29a48:	sub	r0, r9, r5
   29a4c:	ldr	r1, [r4, #40]	; 0x28
   29a50:	str	r0, [r1, #4]
   29a54:	str	r5, [r1]
   29a58:	str	r8, [r1, #16]
   29a5c:	ldr	r0, [r4, #64]	; 0x40
   29a60:	str	r0, [r1, #8]
   29a64:	ldr	r0, [r4, #60]	; 0x3c
   29a68:	sub	r0, r5, r0
   29a6c:	add	r0, r0, #1
   29a70:	str	r0, [r1, #12]
   29a74:	add	r0, r1, #20
   29a78:	str	r0, [r4, #40]	; 0x28
   29a7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   29a80:	mov	r3, r2
   29a84:	mov	r2, r1
   29a88:	ldr	r1, [r0, #32]
   29a8c:	cmp	r1, #0
   29a90:	bxeq	lr
   29a94:	movw	r1, #64572	; 0xfc3c
   29a98:	movt	r1, #65535	; 0xffff
   29a9c:	b	299c4 <__flatcc_fb_clear_parser@@Base+0x1cc>
   29aa0:	push	{fp, lr}
   29aa4:	mov	fp, sp
   29aa8:	movw	r2, #29242	; 0x723a
   29aac:	movt	r2, #25968	; 0x6570
   29ab0:	cmp	r0, r2
   29ab4:	ble	29b38 <__flatcc_fb_clear_parser@@Base+0x340>
   29ab8:	movw	r2, #26173	; 0x663d
   29abc:	movt	r2, #28265	; 0x6e69
   29ac0:	cmp	r0, r2
   29ac4:	bgt	29bc0 <__flatcc_fb_clear_parser@@Base+0x3c8>
   29ac8:	movw	r2, #30004	; 0x7534
   29acc:	movt	r2, #26476	; 0x676c
   29ad0:	cmp	r0, r2
   29ad4:	ble	29ca0 <__flatcc_fb_clear_parser@@Base+0x4a8>
   29ad8:	movw	r2, #29493	; 0x7335
   29adc:	movt	r2, #26484	; 0x6774
   29ae0:	cmp	r0, r2
   29ae4:	ble	29df8 <__flatcc_fb_clear_parser@@Base+0x600>
   29ae8:	movw	r2, #29494	; 0x7336
   29aec:	movt	r2, #26484	; 0x6774
   29af0:	cmp	r0, r2
   29af4:	beq	2a020 <__flatcc_fb_clear_parser@@Base+0x828>
   29af8:	movw	r2, #25140	; 0x6234
   29afc:	movt	r2, #27759	; 0x6c6f
   29b00:	cmp	r0, r2
   29b04:	beq	2a048 <__flatcc_fb_clear_parser@@Base+0x850>
   29b08:	movw	r2, #25908	; 0x6534
   29b0c:	movt	r2, #28014	; 0x6d6e
   29b10:	cmp	r0, r2
   29b14:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29b18:	movw	r0, #63933	; 0xf9bd
   29b1c:	movt	r0, #4
   29b20:	mov	r2, #4
   29b24:	bl	149d0 <bcmp@plt>
   29b28:	cmp	r0, #0
   29b2c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29b30:	mvn	r0, #996	; 0x3e4
   29b34:	pop	{fp, pc}
   29b38:	movw	r2, #30004	; 0x7534
   29b3c:	movt	r2, #14441	; 0x3869
   29b40:	cmp	r0, r2
   29b44:	ble	29c38 <__flatcc_fb_clear_parser@@Base+0x440>
   29b48:	movw	r2, #29748	; 0x7434
   29b4c:	movt	r2, #25953	; 0x6561
   29b50:	cmp	r0, r2
   29b54:	ble	29cf8 <__flatcc_fb_clear_parser@@Base+0x500>
   29b58:	movw	r2, #26934	; 0x6936
   29b5c:	movt	r2, #25966	; 0x656e
   29b60:	cmp	r0, r2
   29b64:	ble	29e38 <__flatcc_fb_clear_parser@@Base+0x640>
   29b68:	movw	r2, #26935	; 0x6937
   29b6c:	movt	r2, #25966	; 0x656e
   29b70:	cmp	r0, r2
   29b74:	beq	2a06c <__flatcc_fb_clear_parser@@Base+0x874>
   29b78:	movw	r2, #25654	; 0x6436
   29b7c:	movt	r2, #25967	; 0x656f
   29b80:	cmp	r0, r2
   29b84:	beq	2a094 <__flatcc_fb_clear_parser@@Base+0x89c>
   29b88:	movw	r2, #29241	; 0x7239
   29b8c:	movt	r2, #25967	; 0x656f
   29b90:	cmp	r0, r2
   29b94:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29b98:	movw	r0, #55926	; 0xda76
   29b9c:	movt	r0, #4
   29ba0:	mov	r2, #9
   29ba4:	bl	149d0 <bcmp@plt>
   29ba8:	cmp	r0, #0
   29bac:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29bb0:	movw	r0, #64537	; 0xfc19
   29bb4:	movt	r0, #65535	; 0xffff
   29bb8:	add	r0, r0, #31
   29bbc:	pop	{fp, pc}
   29bc0:	movw	r2, #30003	; 0x7533
   29bc4:	movt	r2, #29801	; 0x7469
   29bc8:	cmp	r0, r2
   29bcc:	ble	29d48 <__flatcc_fb_clear_parser@@Base+0x550>
   29bd0:	movw	r2, #26930	; 0x6932
   29bd4:	movt	r2, #29806	; 0x746e
   29bd8:	cmp	r0, r2
   29bdc:	ble	29e80 <__flatcc_fb_clear_parser@@Base+0x688>
   29be0:	movw	r2, #29494	; 0x7336
   29be4:	movt	r2, #29812	; 0x7474
   29be8:	cmp	r0, r2
   29bec:	beq	2a0bc <__flatcc_fb_clear_parser@@Base+0x8c4>
   29bf0:	movw	r2, #30006	; 0x7536
   29bf4:	movt	r2, #29811	; 0x7473
   29bf8:	cmp	r0, r2
   29bfc:	beq	2a0dc <__flatcc_fb_clear_parser@@Base+0x8e4>
   29c00:	movw	r2, #26931	; 0x6933
   29c04:	movt	r2, #29806	; 0x746e
   29c08:	cmp	r0, r2
   29c0c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29c10:	movw	r0, #51725	; 0xca0d
   29c14:	movt	r0, #4
   29c18:	mov	r2, #3
   29c1c:	bl	149d0 <bcmp@plt>
   29c20:	cmp	r0, #0
   29c24:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29c28:	movw	r0, #64537	; 0xfc19
   29c2c:	movt	r0, #65535	; 0xffff
   29c30:	add	r0, r0, #5
   29c34:	pop	{fp, pc}
   29c38:	movw	r2, #26166	; 0x6636
   29c3c:	movt	r2, #13420	; 0x346c
   29c40:	cmp	r0, r2
   29c44:	bgt	29da0 <__flatcc_fb_clear_parser@@Base+0x5a8>
   29c48:	movw	r2, #26932	; 0x6934
   29c4c:	movt	r2, #12910	; 0x326e
   29c50:	cmp	r0, r2
   29c54:	bgt	29ec0 <__flatcc_fb_clear_parser@@Base+0x6c8>
   29c58:	movw	r2, #30006	; 0x7536
   29c5c:	movt	r2, #12905	; 0x3269
   29c60:	cmp	r0, r2
   29c64:	beq	2a104 <__flatcc_fb_clear_parser@@Base+0x90c>
   29c68:	movw	r2, #26167	; 0x6637
   29c6c:	movt	r2, #12908	; 0x326c
   29c70:	cmp	r0, r2
   29c74:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29c78:	movw	r0, #55892	; 0xda54
   29c7c:	movt	r0, #4
   29c80:	mov	r2, #7
   29c84:	bl	149d0 <bcmp@plt>
   29c88:	cmp	r0, #0
   29c8c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29c90:	movw	r0, #64537	; 0xfc19
   29c94:	movt	r0, #65535	; 0xffff
   29c98:	add	r0, r0, #3
   29c9c:	pop	{fp, pc}
   29ca0:	movw	r2, #24888	; 0x6138
   29ca4:	movt	r2, #25972	; 0x6574
   29ca8:	cmp	r0, r2
   29cac:	bgt	29f08 <__flatcc_fb_clear_parser@@Base+0x710>
   29cb0:	movw	r2, #29243	; 0x723b
   29cb4:	movt	r2, #25968	; 0x6570
   29cb8:	cmp	r0, r2
   29cbc:	beq	2a12c <__flatcc_fb_clear_parser@@Base+0x934>
   29cc0:	movw	r2, #29748	; 0x7434
   29cc4:	movt	r2, #25970	; 0x6572
   29cc8:	cmp	r0, r2
   29ccc:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29cd0:	movw	r0, #59799	; 0xe997
   29cd4:	movt	r0, #4
   29cd8:	mov	r2, #4
   29cdc:	bl	149d0 <bcmp@plt>
   29ce0:	cmp	r0, #0
   29ce4:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29ce8:	movw	r0, #64537	; 0xfc19
   29cec:	movt	r0, #65535	; 0xffff
   29cf0:	add	r0, r0, #11
   29cf4:	pop	{fp, pc}
   29cf8:	movw	r2, #26164	; 0x6634
   29cfc:	movt	r2, #25953	; 0x6561
   29d00:	cmp	r0, r2
   29d04:	bgt	29f50 <__flatcc_fb_clear_parser@@Base+0x758>
   29d08:	movw	r2, #30005	; 0x7535
   29d0c:	movt	r2, #14441	; 0x3869
   29d10:	cmp	r0, r2
   29d14:	beq	2a154 <__flatcc_fb_clear_parser@@Base+0x95c>
   29d18:	movw	r2, #26932	; 0x6934
   29d1c:	movt	r2, #14446	; 0x386e
   29d20:	cmp	r0, r2
   29d24:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29d28:	movw	r0, #55271	; 0xd7e7
   29d2c:	movt	r0, #3
   29d30:	mov	r2, #4
   29d34:	bl	149d0 <bcmp@plt>
   29d38:	cmp	r0, #0
   29d3c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29d40:	mvn	r0, #992	; 0x3e0
   29d44:	pop	{fp, pc}
   29d48:	movw	r2, #26174	; 0x663e
   29d4c:	movt	r2, #29289	; 0x7269
   29d50:	cmp	r0, r2
   29d54:	bgt	29f90 <__flatcc_fb_clear_parser@@Base+0x798>
   29d58:	movw	r2, #26174	; 0x663e
   29d5c:	movt	r2, #28265	; 0x6e69
   29d60:	cmp	r0, r2
   29d64:	beq	2a174 <__flatcc_fb_clear_parser@@Base+0x97c>
   29d68:	movw	r2, #30005	; 0x7535
   29d6c:	movt	r2, #28270	; 0x6e6e
   29d70:	cmp	r0, r2
   29d74:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29d78:	movw	r0, #52091	; 0xcb7b
   29d7c:	movt	r0, #3
   29d80:	mov	r2, #5
   29d84:	bl	149d0 <bcmp@plt>
   29d88:	cmp	r0, #0
   29d8c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29d90:	movw	r0, #64537	; 0xfc19
   29d94:	movt	r0, #65535	; 0xffff
   29d98:	add	r0, r0, #23
   29d9c:	pop	{fp, pc}
   29da0:	movw	r2, #30005	; 0x7535
   29da4:	movt	r2, #13929	; 0x3669
   29da8:	cmp	r0, r2
   29dac:	bgt	29fd8 <__flatcc_fb_clear_parser@@Base+0x7e0>
   29db0:	movw	r2, #26167	; 0x6637
   29db4:	movt	r2, #13420	; 0x346c
   29db8:	cmp	r0, r2
   29dbc:	beq	2a19c <__flatcc_fb_clear_parser@@Base+0x9a4>
   29dc0:	movw	r2, #26933	; 0x6935
   29dc4:	movt	r2, #13422	; 0x346e
   29dc8:	cmp	r0, r2
   29dcc:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29dd0:	movw	r0, #55250	; 0xd7d2
   29dd4:	movt	r0, #3
   29dd8:	mov	r2, #5
   29ddc:	bl	149d0 <bcmp@plt>
   29de0:	cmp	r0, #0
   29de4:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29de8:	movw	r0, #64537	; 0xfc19
   29dec:	movt	r0, #65535	; 0xffff
   29df0:	add	r0, r0, #9
   29df4:	pop	{fp, pc}
   29df8:	movw	r2, #30005	; 0x7535
   29dfc:	movt	r2, #26476	; 0x676c
   29e00:	cmp	r0, r2
   29e04:	beq	2a1c4 <__flatcc_fb_clear_parser@@Base+0x9cc>
   29e08:	movw	r2, #27700	; 0x6c34
   29e0c:	movt	r2, #26479	; 0x676f
   29e10:	cmp	r0, r2
   29e14:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29e18:	movw	r0, #55880	; 0xda48
   29e1c:	movt	r0, #4
   29e20:	mov	r2, #4
   29e24:	bl	149d0 <bcmp@plt>
   29e28:	cmp	r0, #0
   29e2c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29e30:	mvn	r0, #988	; 0x3dc
   29e34:	pop	{fp, pc}
   29e38:	movw	r2, #29749	; 0x7435
   29e3c:	movt	r2, #25953	; 0x6561
   29e40:	cmp	r0, r2
   29e44:	beq	2a1e4 <__flatcc_fb_clear_parser@@Base+0x9ec>
   29e48:	movw	r2, #30005	; 0x7535
   29e4c:	movt	r2, #25954	; 0x6562
   29e50:	cmp	r0, r2
   29e54:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29e58:	movw	r0, #61792	; 0xf160
   29e5c:	movt	r0, #4
   29e60:	mov	r2, #5
   29e64:	bl	149d0 <bcmp@plt>
   29e68:	cmp	r0, #0
   29e6c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29e70:	movw	r0, #64537	; 0xfc19
   29e74:	movt	r0, #65535	; 0xffff
   29e78:	add	r0, r0, #17
   29e7c:	pop	{fp, pc}
   29e80:	movw	r2, #30004	; 0x7534
   29e84:	movt	r2, #29801	; 0x7469
   29e88:	cmp	r0, r2
   29e8c:	beq	2a20c <__flatcc_fb_clear_parser@@Base+0xa14>
   29e90:	movw	r2, #26165	; 0x6635
   29e94:	movt	r2, #29804	; 0x746c
   29e98:	cmp	r0, r2
   29e9c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29ea0:	movw	r0, #52838	; 0xce66
   29ea4:	movt	r0, #3
   29ea8:	mov	r2, #5
   29eac:	bl	149d0 <bcmp@plt>
   29eb0:	cmp	r0, #0
   29eb4:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29eb8:	mvn	r0, #984	; 0x3d8
   29ebc:	pop	{fp, pc}
   29ec0:	movw	r2, #26933	; 0x6935
   29ec4:	movt	r2, #12910	; 0x326e
   29ec8:	cmp	r0, r2
   29ecc:	beq	2a234 <__flatcc_fb_clear_parser@@Base+0xa3c>
   29ed0:	movw	r2, #30006	; 0x7536
   29ed4:	movt	r2, #13417	; 0x3469
   29ed8:	cmp	r0, r2
   29edc:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29ee0:	movw	r0, #55249	; 0xd7d1
   29ee4:	movt	r0, #3
   29ee8:	mov	r2, #6
   29eec:	bl	149d0 <bcmp@plt>
   29ef0:	cmp	r0, #0
   29ef4:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29ef8:	movw	r0, #64537	; 0xfc19
   29efc:	movt	r0, #65535	; 0xffff
   29f00:	add	r0, r0, #21
   29f04:	pop	{fp, pc}
   29f08:	movw	r2, #24889	; 0x6139
   29f0c:	movt	r2, #25972	; 0x6574
   29f10:	cmp	r0, r2
   29f14:	beq	2a25c <__flatcc_fb_clear_parser@@Base+0xa64>
   29f18:	movw	r2, #25140	; 0x6234
   29f1c:	movt	r2, #25977	; 0x6579
   29f20:	cmp	r0, r2
   29f24:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29f28:	movw	r0, #61793	; 0xf161
   29f2c:	movt	r0, #4
   29f30:	mov	r2, #4
   29f34:	bl	149d0 <bcmp@plt>
   29f38:	cmp	r0, #0
   29f3c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29f40:	movw	r0, #64537	; 0xfc19
   29f44:	movt	r0, #65535	; 0xffff
   29f48:	add	r0, r0, #1
   29f4c:	pop	{fp, pc}
   29f50:	movw	r2, #26165	; 0x6635
   29f54:	movt	r2, #25953	; 0x6561
   29f58:	cmp	r0, r2
   29f5c:	beq	2a284 <__flatcc_fb_clear_parser@@Base+0xa8c>
   29f60:	movw	r2, #28217	; 0x6e39
   29f64:	movt	r2, #25953	; 0x6561
   29f68:	cmp	r0, r2
   29f6c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29f70:	movw	r0, #24388	; 0x5f44
   29f74:	movt	r0, #3
   29f78:	mov	r2, #9
   29f7c:	bl	149d0 <bcmp@plt>
   29f80:	cmp	r0, #0
   29f84:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29f88:	mvn	r0, #968	; 0x3c8
   29f8c:	pop	{fp, pc}
   29f90:	movw	r2, #26175	; 0x663f
   29f94:	movt	r2, #29289	; 0x7269
   29f98:	cmp	r0, r2
   29f9c:	beq	2a2ac <__flatcc_fb_clear_parser@@Base+0xab4>
   29fa0:	movw	r2, #29493	; 0x7335
   29fa4:	movt	r2, #29800	; 0x7468
   29fa8:	cmp	r0, r2
   29fac:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29fb0:	movw	r0, #55886	; 0xda4e
   29fb4:	movt	r0, #4
   29fb8:	mov	r2, #5
   29fbc:	bl	149d0 <bcmp@plt>
   29fc0:	cmp	r0, #0
   29fc4:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29fc8:	movw	r0, #64537	; 0xfc19
   29fcc:	movt	r0, #65535	; 0xffff
   29fd0:	add	r0, r0, #15
   29fd4:	pop	{fp, pc}
   29fd8:	movw	r2, #30006	; 0x7536
   29fdc:	movt	r2, #13929	; 0x3669
   29fe0:	cmp	r0, r2
   29fe4:	beq	2a2cc <__flatcc_fb_clear_parser@@Base+0xad4>
   29fe8:	movw	r2, #26933	; 0x6935
   29fec:	movt	r2, #13934	; 0x366e
   29ff0:	cmp	r0, r2
   29ff4:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   29ff8:	movw	r0, #55264	; 0xd7e0
   29ffc:	movt	r0, #3
   2a000:	mov	r2, #5
   2a004:	bl	149d0 <bcmp@plt>
   2a008:	cmp	r0, #0
   2a00c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a010:	movw	r0, #64537	; 0xfc19
   2a014:	movt	r0, #65535	; 0xffff
   2a018:	add	r0, r0, #7
   2a01c:	pop	{fp, pc}
   2a020:	movw	r0, #60371	; 0xebd3
   2a024:	movt	r0, #4
   2a028:	mov	r2, #6
   2a02c:	bl	149d0 <bcmp@plt>
   2a030:	cmp	r0, #0
   2a034:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a038:	movw	r0, #64537	; 0xfc19
   2a03c:	movt	r0, #65535	; 0xffff
   2a040:	add	r0, r0, #25
   2a044:	pop	{fp, pc}
   2a048:	movw	r0, #59267	; 0xe783
   2a04c:	movt	r0, #4
   2a050:	mov	r2, #4
   2a054:	bl	149d0 <bcmp@plt>
   2a058:	cmp	r0, #0
   2a05c:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a060:	movw	r0, #64537	; 0xfc19
   2a064:	movt	r0, #65535	; 0xffff
   2a068:	pop	{fp, pc}
   2a06c:	movw	r0, #55908	; 0xda64
   2a070:	movt	r0, #4
   2a074:	mov	r2, #7
   2a078:	bl	149d0 <bcmp@plt>
   2a07c:	cmp	r0, #0
   2a080:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a084:	movw	r0, #64537	; 0xfc19
   2a088:	movt	r0, #65535	; 0xffff
   2a08c:	add	r0, r0, #28
   2a090:	pop	{fp, pc}
   2a094:	movw	r0, #52844	; 0xce6c
   2a098:	movt	r0, #3
   2a09c:	mov	r2, #6
   2a0a0:	bl	149d0 <bcmp@plt>
   2a0a4:	cmp	r0, #0
   2a0a8:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a0ac:	movw	r0, #64537	; 0xfc19
   2a0b0:	movt	r0, #65535	; 0xffff
   2a0b4:	add	r0, r0, #24
   2a0b8:	pop	{fp, pc}
   2a0bc:	movw	r0, #59580	; 0xe8bc
   2a0c0:	movt	r0, #4
   2a0c4:	mov	r2, #6
   2a0c8:	bl	149d0 <bcmp@plt>
   2a0cc:	cmp	r0, #0
   2a0d0:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a0d4:	mvn	r0, #972	; 0x3cc
   2a0d8:	pop	{fp, pc}
   2a0dc:	movw	r0, #55885	; 0xda4d
   2a0e0:	movt	r0, #4
   2a0e4:	mov	r2, #6
   2a0e8:	bl	149d0 <bcmp@plt>
   2a0ec:	cmp	r0, #0
   2a0f0:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a0f4:	movw	r0, #64537	; 0xfc19
   2a0f8:	movt	r0, #65535	; 0xffff
   2a0fc:	add	r0, r0, #27
   2a100:	pop	{fp, pc}
   2a104:	movw	r0, #55256	; 0xd7d8
   2a108:	movt	r0, #3
   2a10c:	mov	r2, #6
   2a110:	bl	149d0 <bcmp@plt>
   2a114:	cmp	r0, #0
   2a118:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a11c:	movw	r0, #64537	; 0xfc19
   2a120:	movt	r0, #65535	; 0xffff
   2a124:	add	r0, r0, #20
   2a128:	pop	{fp, pc}
   2a12c:	movw	r0, #63963	; 0xf9db
   2a130:	movt	r0, #4
   2a134:	mov	r2, #11
   2a138:	bl	149d0 <bcmp@plt>
   2a13c:	cmp	r0, #0
   2a140:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a144:	movw	r0, #64537	; 0xfc19
   2a148:	movt	r0, #65535	; 0xffff
   2a14c:	orr	r0, r0, #32
   2a150:	pop	{fp, pc}
   2a154:	movw	r0, #55270	; 0xd7e6
   2a158:	movt	r0, #3
   2a15c:	mov	r2, #5
   2a160:	bl	149d0 <bcmp@plt>
   2a164:	cmp	r0, #0
   2a168:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a16c:	mvn	r0, #980	; 0x3d4
   2a170:	pop	{fp, pc}
   2a174:	movw	r0, #55936	; 0xda80
   2a178:	movt	r0, #4
   2a17c:	mov	r2, #14
   2a180:	bl	149d0 <bcmp@plt>
   2a184:	cmp	r0, #0
   2a188:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a18c:	movw	r0, #64537	; 0xfc19
   2a190:	movt	r0, #65535	; 0xffff
   2a194:	add	r0, r0, #33	; 0x21
   2a198:	pop	{fp, pc}
   2a19c:	movw	r0, #55900	; 0xda5c
   2a1a0:	movt	r0, #4
   2a1a4:	mov	r2, #7
   2a1a8:	bl	149d0 <bcmp@plt>
   2a1ac:	cmp	r0, #0
   2a1b0:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a1b4:	movw	r0, #64537	; 0xfc19
   2a1b8:	movt	r0, #65535	; 0xffff
   2a1bc:	orr	r0, r0, #4
   2a1c0:	pop	{fp, pc}
   2a1c4:	movw	r0, #55879	; 0xda47
   2a1c8:	movt	r0, #4
   2a1cc:	mov	r2, #5
   2a1d0:	bl	149d0 <bcmp@plt>
   2a1d4:	cmp	r0, #0
   2a1d8:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a1dc:	mvn	r0, #976	; 0x3d0
   2a1e0:	pop	{fp, pc}
   2a1e4:	movw	r0, #59037	; 0xe69d
   2a1e8:	movt	r0, #4
   2a1ec:	mov	r2, #5
   2a1f0:	bl	149d0 <bcmp@plt>
   2a1f4:	cmp	r0, #0
   2a1f8:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a1fc:	movw	r0, #64537	; 0xfc19
   2a200:	movt	r0, #65535	; 0xffff
   2a204:	add	r0, r0, #16
   2a208:	pop	{fp, pc}
   2a20c:	movw	r0, #55868	; 0xda3c
   2a210:	movt	r0, #4
   2a214:	mov	r2, #4
   2a218:	bl	149d0 <bcmp@plt>
   2a21c:	cmp	r0, #0
   2a220:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a224:	movw	r0, #64537	; 0xfc19
   2a228:	movt	r0, #65535	; 0xffff
   2a22c:	add	r0, r0, #12
   2a230:	pop	{fp, pc}
   2a234:	movw	r0, #55257	; 0xd7d9
   2a238:	movt	r0, #3
   2a23c:	mov	r2, #5
   2a240:	bl	149d0 <bcmp@plt>
   2a244:	cmp	r0, #0
   2a248:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a24c:	movw	r0, #64537	; 0xfc19
   2a250:	movt	r0, #65535	; 0xffff
   2a254:	add	r0, r0, #8
   2a258:	pop	{fp, pc}
   2a25c:	movw	r0, #55916	; 0xda6c
   2a260:	movt	r0, #4
   2a264:	mov	r2, #9
   2a268:	bl	149d0 <bcmp@plt>
   2a26c:	cmp	r0, #0
   2a270:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a274:	movw	r0, #64537	; 0xfc19
   2a278:	movt	r0, #65535	; 0xffff
   2a27c:	add	r0, r0, #29
   2a280:	pop	{fp, pc}
   2a284:	movw	r0, #55873	; 0xda41
   2a288:	movt	r0, #4
   2a28c:	mov	r2, #5
   2a290:	bl	149d0 <bcmp@plt>
   2a294:	cmp	r0, #0
   2a298:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a29c:	movw	r0, #64537	; 0xfc19
   2a2a0:	movt	r0, #65535	; 0xffff
   2a2a4:	add	r0, r0, #13
   2a2a8:	pop	{fp, pc}
   2a2ac:	movw	r0, #55951	; 0xda8f
   2a2b0:	movt	r0, #4
   2a2b4:	mov	r2, #15
   2a2b8:	bl	149d0 <bcmp@plt>
   2a2bc:	cmp	r0, #0
   2a2c0:	bne	2a2e4 <__flatcc_fb_clear_parser@@Base+0xaec>
   2a2c4:	mvn	r0, #964	; 0x3c4
   2a2c8:	pop	{fp, pc}
   2a2cc:	movw	r0, #55263	; 0xd7df
   2a2d0:	movt	r0, #3
   2a2d4:	mov	r2, #6
   2a2d8:	bl	149d0 <bcmp@plt>
   2a2dc:	cmp	r0, #0
   2a2e0:	beq	2a2ec <__flatcc_fb_clear_parser@@Base+0xaf4>
   2a2e4:	mov	r0, #9
   2a2e8:	pop	{fp, pc}
   2a2ec:	movw	r0, #64537	; 0xfc19
   2a2f0:	movt	r0, #65535	; 0xffff
   2a2f4:	add	r0, r0, #19
   2a2f8:	pop	{fp, pc}
   2a2fc:	push	{r4, r5, fp, lr}
   2a300:	add	fp, sp, #8
   2a304:	mov	r4, r1
   2a308:	mov	r5, r0
   2a30c:	mov	r1, #12
   2a310:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   2a314:	str	r4, [r0, #4]
   2a318:	ldr	r1, [r5, #36]	; 0x24
   2a31c:	str	r1, [r0]
   2a320:	str	r0, [r5, #36]	; 0x24
   2a324:	pop	{r4, r5, fp, pc}
   2a328:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a32c:	add	fp, sp, #24
   2a330:	mov	r4, r0
   2a334:	ldr	r5, [r0, #40]	; 0x28
   2a338:	movw	r8, #64565	; 0xfc35
   2a33c:	movt	r8, #65535	; 0xffff
   2a340:	mov	r1, r8
   2a344:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2a348:	cmp	r0, #0
   2a34c:	beq	2a3f0 <__flatcc_fb_clear_parser@@Base+0xbf8>
   2a350:	movw	r7, #56077	; 0xdb0d
   2a354:	movt	r7, #4
   2a358:	movw	r6, #56123	; 0xdb3b
   2a35c:	movt	r6, #4
   2a360:	movw	r9, #56021	; 0xdad5
   2a364:	movt	r9, #4
   2a368:	b	2a3a4 <__flatcc_fb_clear_parser@@Base+0xbac>
   2a36c:	mov	r0, r4
   2a370:	bl	2a93c <__flatcc_fb_clear_parser@@Base+0x1144>
   2a374:	add	r1, r0, #8
   2a378:	mov	r0, r4
   2a37c:	bl	2a7d0 <__flatcc_fb_clear_parser@@Base+0xfd8>
   2a380:	mov	r0, r4
   2a384:	mov	r1, #59	; 0x3b
   2a388:	mov	r2, r6
   2a38c:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a390:	mov	r0, r4
   2a394:	mov	r1, r8
   2a398:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2a39c:	cmp	r0, #0
   2a3a0:	beq	2a3f0 <__flatcc_fb_clear_parser@@Base+0xbf8>
   2a3a4:	ldr	r0, [r4, #140]	; 0x8c
   2a3a8:	cmp	r0, #0
   2a3ac:	movne	r0, r4
   2a3b0:	movne	r1, r5
   2a3b4:	movne	r2, r9
   2a3b8:	blne	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2a3bc:	ldr	r0, [r4, #108]	; 0x6c
   2a3c0:	cmp	r0, #9
   2a3c4:	bgt	2a3f0 <__flatcc_fb_clear_parser@@Base+0xbf8>
   2a3c8:	mov	r0, r4
   2a3cc:	mov	r1, #19
   2a3d0:	mov	r2, r7
   2a3d4:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a3d8:	cmp	r0, #0
   2a3dc:	bne	2a36c <__flatcc_fb_clear_parser@@Base+0xb74>
   2a3e0:	mov	r0, r4
   2a3e4:	mov	r1, #59	; 0x3b
   2a3e8:	bl	2a78c <__flatcc_fb_clear_parser@@Base+0xf94>
   2a3ec:	b	2a36c <__flatcc_fb_clear_parser@@Base+0xb74>
   2a3f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a3f4:	ldr	r0, [r0, #16]
   2a3f8:	clz	r0, r0
   2a3fc:	lsr	r0, r0, #5
   2a400:	bx	lr
   2a404:	push	{r4, sl, fp, lr}
   2a408:	add	fp, sp, #8
   2a40c:	sub	sp, sp, #8
   2a410:	mov	r4, r0
   2a414:	ldr	r1, [r0, #40]	; 0x28
   2a418:	ldr	r0, [r1, #16]
   2a41c:	cmp	r0, #4
   2a420:	bgt	2a4e4 <__flatcc_fb_clear_parser@@Base+0xcec>
   2a424:	movw	r2, #997	; 0x3e5
   2a428:	add	r0, r0, r2
   2a42c:	cmp	r0, #32
   2a430:	bhi	2a6a0 <__flatcc_fb_clear_parser@@Base+0xea8>
   2a434:	add	r2, pc, #0
   2a438:	ldr	pc, [r2, r0, lsl #2]
   2a43c:	andeq	sl, r2, r0, asr #9
   2a440:	andeq	sl, r2, r0, lsr #13
   2a444:	andeq	sl, r2, r0, lsr #13
   2a448:	andeq	sl, r2, r0, lsr #13
   2a44c:	andeq	sl, r2, r0, lsr #13
   2a450:	andeq	sl, r2, r0, lsr #13
   2a454:	andeq	sl, r2, r0, lsr #13
   2a458:	andeq	sl, r2, r0, lsr #13
   2a45c:	andeq	sl, r2, r0, lsr #13
   2a460:	andeq	sl, r2, r0, lsr #13
   2a464:	andeq	sl, r2, r0, lsr #13
   2a468:	andeq	sl, r2, r0, lsr #13
   2a46c:	andeq	sl, r2, r0, lsr #13
   2a470:	andeq	sl, r2, r0, lsr #13
   2a474:	andeq	sl, r2, ip, lsr #10
   2a478:	andeq	sl, r2, r0, lsr #13
   2a47c:	andeq	sl, r2, r0, lsr #13
   2a480:	andeq	sl, r2, r0, lsr #13
   2a484:	andeq	sl, r2, r0, lsr #13
   2a488:	andeq	sl, r2, r0, lsr #13
   2a48c:	andeq	sl, r2, r0, lsr #13
   2a490:	andeq	sl, r2, ip, asr #10
   2a494:	andeq	sl, r2, r0, lsr #13
   2a498:	andeq	sl, r2, r0, lsr #13
   2a49c:	andeq	sl, r2, r0, ror r5
   2a4a0:	andeq	sl, r2, r0, lsr #13
   2a4a4:	muleq	r2, r0, r5
   2a4a8:	muleq	r2, ip, r5
   2a4ac:	andeq	sl, r2, r0, asr #11
   2a4b0:	ldrdeq	sl, [r2], -r8
   2a4b4:	strdeq	sl, [r2], -r4
   2a4b8:	andeq	sl, r2, r4, lsr #12
   2a4bc:	andeq	sl, r2, r0, asr #12
   2a4c0:	mov	r0, r4
   2a4c4:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a4c8:	mov	r0, r4
   2a4cc:	bl	2b058 <__flatcc_fb_clear_parser@@Base+0x1860>
   2a4d0:	mov	r1, r0
   2a4d4:	mov	r0, r4
   2a4d8:	sub	sp, fp, #8
   2a4dc:	pop	{r4, sl, fp, lr}
   2a4e0:	b	2aea0 <__flatcc_fb_clear_parser@@Base+0x16a8>
   2a4e4:	cmp	r0, #26
   2a4e8:	bgt	2a510 <__flatcc_fb_clear_parser@@Base+0xd18>
   2a4ec:	cmp	r0, #5
   2a4f0:	beq	2a65c <__flatcc_fb_clear_parser@@Base+0xe64>
   2a4f4:	cmp	r0, #7
   2a4f8:	bne	2a6a0 <__flatcc_fb_clear_parser@@Base+0xea8>
   2a4fc:	mov	r0, #1
   2a500:	str	r0, [sp]
   2a504:	movw	r2, #56524	; 0xdccc
   2a508:	movt	r2, #4
   2a50c:	b	2a66c <__flatcc_fb_clear_parser@@Base+0xe74>
   2a510:	cmp	r0, #27
   2a514:	beq	2a678 <__flatcc_fb_clear_parser@@Base+0xe80>
   2a518:	cmp	r0, #123	; 0x7b
   2a51c:	bne	2a6a0 <__flatcc_fb_clear_parser@@Base+0xea8>
   2a520:	movw	r2, #56376	; 0xdc38
   2a524:	movt	r2, #4
   2a528:	b	2a6a8 <__flatcc_fb_clear_parser@@Base+0xeb0>
   2a52c:	mov	r0, r4
   2a530:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a534:	mov	r0, r4
   2a538:	bl	2adfc <__flatcc_fb_clear_parser@@Base+0x1604>
   2a53c:	mov	r1, r0
   2a540:	movw	r2, #64553	; 0xfc29
   2a544:	movt	r2, #65535	; 0xffff
   2a548:	b	2a614 <__flatcc_fb_clear_parser@@Base+0xe1c>
   2a54c:	mov	r0, r4
   2a550:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a554:	mov	r0, r4
   2a558:	bl	2b290 <__flatcc_fb_clear_parser@@Base+0x1a98>
   2a55c:	mov	r1, r0
   2a560:	mov	r0, r4
   2a564:	sub	sp, fp, #8
   2a568:	pop	{r4, sl, fp, lr}
   2a56c:	b	2b0ac <__flatcc_fb_clear_parser@@Base+0x18b4>
   2a570:	mov	r0, r4
   2a574:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a578:	mov	r0, r4
   2a57c:	bl	2ada8 <__flatcc_fb_clear_parser@@Base+0x15b0>
   2a580:	mov	r1, r0
   2a584:	mov	r0, r4
   2a588:	mvn	r2, #972	; 0x3cc
   2a58c:	b	2a618 <__flatcc_fb_clear_parser@@Base+0xe20>
   2a590:	movw	r2, #56322	; 0xdc02
   2a594:	movt	r2, #4
   2a598:	b	2a6a8 <__flatcc_fb_clear_parser@@Base+0xeb0>
   2a59c:	mov	r0, r4
   2a5a0:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a5a4:	mov	r0, r4
   2a5a8:	bl	2ac84 <__flatcc_fb_clear_parser@@Base+0x148c>
   2a5ac:	mov	r1, r0
   2a5b0:	mov	r0, r4
   2a5b4:	sub	sp, fp, #8
   2a5b8:	pop	{r4, sl, fp, lr}
   2a5bc:	b	2ac00 <__flatcc_fb_clear_parser@@Base+0x1408>
   2a5c0:	mov	r0, r4
   2a5c4:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a5c8:	mov	r0, r4
   2a5cc:	sub	sp, fp, #8
   2a5d0:	pop	{r4, sl, fp, lr}
   2a5d4:	b	2a988 <__flatcc_fb_clear_parser@@Base+0x1190>
   2a5d8:	mov	r0, r4
   2a5dc:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a5e0:	add	r1, r4, #400	; 0x190
   2a5e4:	mov	r0, r4
   2a5e8:	sub	sp, fp, #8
   2a5ec:	pop	{r4, sl, fp, lr}
   2a5f0:	b	2ab9c <__flatcc_fb_clear_parser@@Base+0x13a4>
   2a5f4:	mov	r0, r4
   2a5f8:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a5fc:	mov	r0, r4
   2a600:	bl	2ae4c <__flatcc_fb_clear_parser@@Base+0x1654>
   2a604:	mov	r1, r0
   2a608:	movw	r0, #64553	; 0xfc29
   2a60c:	movt	r0, #65535	; 0xffff
   2a610:	orr	r2, r0, #16
   2a614:	mov	r0, r4
   2a618:	sub	sp, fp, #8
   2a61c:	pop	{r4, sl, fp, lr}
   2a620:	b	2aca8 <__flatcc_fb_clear_parser@@Base+0x14b0>
   2a624:	mov	r0, r4
   2a628:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a62c:	add	r1, r4, #376	; 0x178
   2a630:	mov	r0, r4
   2a634:	sub	sp, fp, #8
   2a638:	pop	{r4, sl, fp, lr}
   2a63c:	b	2aa34 <__flatcc_fb_clear_parser@@Base+0x123c>
   2a640:	mov	r0, r4
   2a644:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a648:	add	r1, r4, #360	; 0x168
   2a64c:	mov	r0, r4
   2a650:	sub	sp, fp, #8
   2a654:	pop	{r4, sl, fp, lr}
   2a658:	b	2aacc <__flatcc_fb_clear_parser@@Base+0x12d4>
   2a65c:	mov	r0, #1
   2a660:	str	r0, [sp]
   2a664:	movw	r2, #56474	; 0xdc9a
   2a668:	movt	r2, #4
   2a66c:	movw	r3, #56226	; 0xdba2
   2a670:	movt	r3, #4
   2a674:	b	2a690 <__flatcc_fb_clear_parser@@Base+0xe98>
   2a678:	mov	r0, #5
   2a67c:	str	r0, [sp]
   2a680:	movw	r2, #56564	; 0xdcf4
   2a684:	movt	r2, #4
   2a688:	movw	r3, #56585	; 0xdd09
   2a68c:	movt	r3, #4
   2a690:	mov	r0, r4
   2a694:	bl	2a960 <__flatcc_fb_clear_parser@@Base+0x1168>
   2a698:	sub	sp, fp, #8
   2a69c:	pop	{r4, sl, fp, pc}
   2a6a0:	movw	r2, #56591	; 0xdd0f
   2a6a4:	movt	r2, #4
   2a6a8:	mov	r0, r4
   2a6ac:	sub	sp, fp, #8
   2a6b0:	pop	{r4, sl, fp, lr}
   2a6b4:	b	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2a6b8:	ldr	r1, [r0]
   2a6bc:	cmp	r1, #0
   2a6c0:	moveq	r2, #0
   2a6c4:	streq	r2, [r0]
   2a6c8:	bxeq	lr
   2a6cc:	mov	r3, #0
   2a6d0:	mov	r2, r1
   2a6d4:	ldr	r1, [r1]
   2a6d8:	str	r3, [r2]
   2a6dc:	cmp	r1, #0
   2a6e0:	mov	r3, r2
   2a6e4:	bne	2a6d0 <__flatcc_fb_clear_parser@@Base+0xed8>
   2a6e8:	str	r2, [r0]
   2a6ec:	bx	lr
   2a6f0:	ldr	r1, [r0]
   2a6f4:	cmp	r1, #0
   2a6f8:	moveq	r2, #0
   2a6fc:	streq	r2, [r0]
   2a700:	bxeq	lr
   2a704:	mov	r3, #0
   2a708:	mov	r2, r1
   2a70c:	ldr	r1, [r1]
   2a710:	str	r3, [r2]
   2a714:	cmp	r1, #0
   2a718:	mov	r3, r2
   2a71c:	bne	2a708 <__flatcc_fb_clear_parser@@Base+0xf10>
   2a720:	str	r2, [r0]
   2a724:	bx	lr
   2a728:	push	{r4, sl, fp, lr}
   2a72c:	add	fp, sp, #8
   2a730:	ldr	r4, [r0, #40]	; 0x28
   2a734:	ldr	r3, [r4, #16]
   2a738:	mov	r2, #0
   2a73c:	cmp	r3, r1
   2a740:	bne	2a74c <__flatcc_fb_clear_parser@@Base+0xf54>
   2a744:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a748:	mov	r2, r4
   2a74c:	mov	r0, r2
   2a750:	pop	{r4, sl, fp, pc}
   2a754:	push	{r4, sl, fp, lr}
   2a758:	add	fp, sp, #8
   2a75c:	ldr	r4, [r0, #40]	; 0x28
   2a760:	ldr	r3, [r4, #16]
   2a764:	cmp	r3, r1
   2a768:	bne	2a778 <__flatcc_fb_clear_parser@@Base+0xf80>
   2a76c:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a770:	mov	r0, r4
   2a774:	pop	{r4, sl, fp, pc}
   2a778:	mov	r1, r4
   2a77c:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2a780:	mov	r4, #0
   2a784:	mov	r0, r4
   2a788:	pop	{r4, sl, fp, pc}
   2a78c:	push	{r4, r5, r6, sl, fp, lr}
   2a790:	add	fp, sp, #16
   2a794:	mov	r5, r1
   2a798:	mov	r4, r0
   2a79c:	ldr	r6, [r4, #40]	; 0x28
   2a7a0:	mov	r0, r6
   2a7a4:	bl	2a3f4 <__flatcc_fb_clear_parser@@Base+0xbfc>
   2a7a8:	cmp	r0, #0
   2a7ac:	bne	2a7cc <__flatcc_fb_clear_parser@@Base+0xfd4>
   2a7b0:	ldr	r6, [r6, #16]
   2a7b4:	mov	r0, r4
   2a7b8:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a7bc:	cmp	r6, r5
   2a7c0:	bne	2a79c <__flatcc_fb_clear_parser@@Base+0xfa4>
   2a7c4:	mov	r0, #0
   2a7c8:	str	r0, [r4, #36]	; 0x24
   2a7cc:	pop	{r4, r5, r6, sl, fp, pc}
   2a7d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a7d4:	add	fp, sp, #28
   2a7d8:	sub	sp, sp, #4
   2a7dc:	mov	r4, r1
   2a7e0:	mov	r5, r0
   2a7e4:	mov	r0, #0
   2a7e8:	str	r0, [r1]
   2a7ec:	str	r0, [r1, #4]
   2a7f0:	mov	r0, #2
   2a7f4:	strh	r0, [r1, #8]
   2a7f8:	mov	r6, #1
   2a7fc:	movw	r8, #56184	; 0xdb78
   2a800:	movt	r8, #4
   2a804:	movw	r9, #56226	; 0xdba2
   2a808:	movt	r9, #4
   2a80c:	movw	sl, #56228	; 0xdba4
   2a810:	movt	sl, #4
   2a814:	movw	r7, #56154	; 0xdb5a
   2a818:	movt	r7, #4
   2a81c:	b	2a838 <__flatcc_fb_clear_parser@@Base+0x1040>
   2a820:	strh	r6, [r4, #8]
   2a824:	mov	r0, r5
   2a828:	mov	r2, r7
   2a82c:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2a830:	mov	r0, r5
   2a834:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2a838:	ldr	r1, [r5, #40]	; 0x28
   2a83c:	ldr	r0, [r1, #16]
   2a840:	sub	r0, r0, #6
   2a844:	cmp	r0, #17
   2a848:	bhi	2a8e0 <__flatcc_fb_clear_parser@@Base+0x10e8>
   2a84c:	add	r2, pc, #0
   2a850:	ldr	pc, [r2, r0, lsl #2]
   2a854:	muleq	r2, ip, r8
   2a858:	andeq	sl, r2, r0, ror #17
   2a85c:	andeq	sl, r2, r0, ror #17
   2a860:	andeq	sl, r2, r0, ror #17
   2a864:	andeq	sl, r2, r0, ror #17
   2a868:	andeq	sl, r2, r0, ror #17
   2a86c:	andeq	sl, r2, r0, ror #17
   2a870:	andeq	sl, r2, r0, ror #17
   2a874:	andeq	sl, r2, r0, ror #17
   2a878:	andeq	sl, r2, r0, ror #17
   2a87c:	andeq	sl, r2, r0, ror #17
   2a880:	andeq	sl, r2, r0, ror #17
   2a884:			; <UNDEFINED> instruction: 0x0002a8b8
   2a888:	andeq	sl, r2, r0, ror #17
   2a88c:	andeq	sl, r2, r8, asr #17
   2a890:	andeq	sl, r2, r0, lsr #16
   2a894:	strdeq	sl, [r2], -r8
   2a898:	strdeq	sl, [r2], -r8
   2a89c:	strh	r6, [r4, #8]
   2a8a0:	str	r6, [sp]
   2a8a4:	mov	r0, r5
   2a8a8:	mov	r2, r8
   2a8ac:	mov	r3, r9
   2a8b0:	bl	2a960 <__flatcc_fb_clear_parser@@Base+0x1168>
   2a8b4:	b	2a830 <__flatcc_fb_clear_parser@@Base+0x1038>
   2a8b8:	strh	r6, [r4, #8]
   2a8bc:	mov	r0, r5
   2a8c0:	mov	r2, sl
   2a8c4:	b	2a82c <__flatcc_fb_clear_parser@@Base+0x1034>
   2a8c8:	ldr	r0, [r4]
   2a8cc:	cmp	r0, #0
   2a8d0:	bne	2a830 <__flatcc_fb_clear_parser@@Base+0x1038>
   2a8d4:	ldr	r0, [r1]
   2a8d8:	str	r0, [r4]
   2a8dc:	b	2a830 <__flatcc_fb_clear_parser@@Base+0x1038>
   2a8e0:	movw	r2, #56259	; 0xdbc3
   2a8e4:	movt	r2, #4
   2a8e8:	mov	r0, r5
   2a8ec:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2a8f0:	mov	r0, #1
   2a8f4:	strh	r0, [r4, #8]
   2a8f8:	ldr	r0, [r4]
   2a8fc:	cmp	r0, #0
   2a900:	beq	2a914 <__flatcc_fb_clear_parser@@Base+0x111c>
   2a904:	ldr	r1, [r5, #40]	; 0x28
   2a908:	ldr	r1, [r1]
   2a90c:	sub	r0, r1, r0
   2a910:	str	r0, [r4, #4]
   2a914:	movw	r2, #56302	; 0xdbee
   2a918:	movt	r2, #4
   2a91c:	mov	r0, r5
   2a920:	mov	r1, #22
   2a924:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2a928:	cmp	r0, #0
   2a92c:	moveq	r0, #1
   2a930:	strheq	r0, [r4, #8]
   2a934:	sub	sp, fp, #28
   2a938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a93c:	push	{r4, sl, fp, lr}
   2a940:	add	fp, sp, #8
   2a944:	mov	r4, r0
   2a948:	mov	r1, #24
   2a94c:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   2a950:	ldr	r1, [r4, #352]	; 0x160
   2a954:	str	r1, [r0]
   2a958:	str	r0, [r4, #352]	; 0x160
   2a95c:	pop	{r4, sl, fp, pc}
   2a960:	push	{fp, lr}
   2a964:	mov	fp, sp
   2a968:	sub	sp, sp, #8
   2a96c:	str	r3, [sp]
   2a970:	ldr	r3, [fp, #8]
   2a974:	str	r3, [sp, #4]
   2a978:	mov	r3, #0
   2a97c:	bl	28188 <__flatcc_error_report@@Base>
   2a980:	mov	sp, fp
   2a984:	pop	{fp, pc}
   2a988:	push	{r4, r5, fp, lr}
   2a98c:	add	fp, sp, #8
   2a990:	sub	sp, sp, #8
   2a994:	mov	r4, r0
   2a998:	mov	r0, #0
   2a99c:	str	r0, [sp, #4]
   2a9a0:	ldr	r5, [r4, #40]	; 0x28
   2a9a4:	mov	r0, r4
   2a9a8:	mov	r1, #59	; 0x3b
   2a9ac:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2a9b0:	cmp	r5, #0
   2a9b4:	cmpne	r0, #0
   2a9b8:	bne	2aa00 <__flatcc_fb_clear_parser@@Base+0x1208>
   2a9bc:	ldr	r1, [r4, #40]	; 0x28
   2a9c0:	ldr	r0, [r1, #16]
   2a9c4:	cmp	r0, #9
   2a9c8:	bne	2aa10 <__flatcc_fb_clear_parser@@Base+0x1218>
   2a9cc:	add	r1, sp, #4
   2a9d0:	mov	r0, r4
   2a9d4:	bl	2b2e4 <__flatcc_fb_clear_parser@@Base+0x1aec>
   2a9d8:	movw	r2, #56661	; 0xdd55
   2a9dc:	movt	r2, #4
   2a9e0:	mov	r0, r4
   2a9e4:	mov	r1, #59	; 0x3b
   2a9e8:	mov	r3, r5
   2a9ec:	bl	2b378 <__flatcc_fb_clear_parser@@Base+0x1b80>
   2a9f0:	ldr	r1, [sp, #4]
   2a9f4:	mov	r0, r4
   2a9f8:	bl	2865c <__flatcc_fb_init_parser@@Base+0x254>
   2a9fc:	b	2aa04 <__flatcc_fb_clear_parser@@Base+0x120c>
   2aa00:	mov	r0, #0
   2aa04:	str	r0, [r4, #544]	; 0x220
   2aa08:	sub	sp, fp, #8
   2aa0c:	pop	{r4, r5, fp, pc}
   2aa10:	movw	r2, #56629	; 0xdd35
   2aa14:	movt	r2, #4
   2aa18:	mov	r0, r4
   2aa1c:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2aa20:	mov	r0, r4
   2aa24:	mov	r1, #59	; 0x3b
   2aa28:	bl	2a78c <__flatcc_fb_clear_parser@@Base+0xf94>
   2aa2c:	sub	sp, fp, #8
   2aa30:	pop	{r4, r5, fp, pc}
   2aa34:	push	{r4, r5, r6, r7, fp, lr}
   2aa38:	add	fp, sp, #16
   2aa3c:	sub	sp, sp, #8
   2aa40:	mov	r5, r1
   2aa44:	mov	r4, r0
   2aa48:	ldrh	r0, [r1, #8]
   2aa4c:	cmp	r0, #2
   2aa50:	bne	2aa74 <__flatcc_fb_clear_parser@@Base+0x127c>
   2aa54:	ldr	r1, [r4, #40]	; 0x28
   2aa58:	ldrd	r6, [r5]
   2aa5c:	str	r7, [sp]
   2aa60:	movw	r2, #56735	; 0xdd9f
   2aa64:	movt	r2, #4
   2aa68:	mov	r0, r4
   2aa6c:	mov	r3, r6
   2aa70:	bl	2a960 <__flatcc_fb_clear_parser@@Base+0x1168>
   2aa74:	movw	r2, #56762	; 0xddba
   2aa78:	movt	r2, #4
   2aa7c:	mov	r0, r4
   2aa80:	mov	r1, #19
   2aa84:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2aa88:	cmp	r0, #0
   2aa8c:	beq	2aab8 <__flatcc_fb_clear_parser@@Base+0x12c0>
   2aa90:	mov	r0, r4
   2aa94:	mov	r1, r5
   2aa98:	bl	2a7d0 <__flatcc_fb_clear_parser@@Base+0xfd8>
   2aa9c:	movw	r2, #56801	; 0xdde1
   2aaa0:	movt	r2, #4
   2aaa4:	mov	r0, r4
   2aaa8:	mov	r1, #59	; 0x3b
   2aaac:	sub	sp, fp, #16
   2aab0:	pop	{r4, r5, r6, r7, fp, lr}
   2aab4:	b	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2aab8:	mov	r0, r4
   2aabc:	mov	r1, #59	; 0x3b
   2aac0:	sub	sp, fp, #16
   2aac4:	pop	{r4, r5, r6, r7, fp, lr}
   2aac8:	b	2a78c <__flatcc_fb_clear_parser@@Base+0xf94>
   2aacc:	push	{r4, r5, r6, r7, fp, lr}
   2aad0:	add	fp, sp, #16
   2aad4:	sub	sp, sp, #8
   2aad8:	mov	r5, r1
   2aadc:	mov	r4, r0
   2aae0:	ldrh	r0, [r1, #8]
   2aae4:	cmp	r0, #0
   2aae8:	beq	2ab0c <__flatcc_fb_clear_parser@@Base+0x1314>
   2aaec:	ldr	r1, [r4, #40]	; 0x28
   2aaf0:	ldrd	r6, [r5]
   2aaf4:	str	r7, [sp]
   2aaf8:	movw	r2, #56829	; 0xddfd
   2aafc:	movt	r2, #4
   2ab00:	mov	r0, r4
   2ab04:	mov	r3, r6
   2ab08:	bl	2a960 <__flatcc_fb_clear_parser@@Base+0x1168>
   2ab0c:	movw	r2, #56857	; 0xde19
   2ab10:	movt	r2, #4
   2ab14:	mov	r0, r4
   2ab18:	mov	r1, #19
   2ab1c:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2ab20:	cmp	r0, #0
   2ab24:	beq	2ab88 <__flatcc_fb_clear_parser@@Base+0x1390>
   2ab28:	ldr	r6, [r4, #40]	; 0x28
   2ab2c:	mov	r0, r4
   2ab30:	mov	r1, r5
   2ab34:	bl	2a7d0 <__flatcc_fb_clear_parser@@Base+0xfd8>
   2ab38:	ldr	r0, [r5]
   2ab3c:	cmp	r0, #0
   2ab40:	beq	2ab6c <__flatcc_fb_clear_parser@@Base+0x1374>
   2ab44:	ldr	r0, [r5, #4]
   2ab48:	cmp	r0, #4
   2ab4c:	beq	2ab6c <__flatcc_fb_clear_parser@@Base+0x1374>
   2ab50:	mov	r0, #1
   2ab54:	strh	r0, [r5, #8]
   2ab58:	movw	r2, #56897	; 0xde41
   2ab5c:	movt	r2, #4
   2ab60:	mov	r0, r4
   2ab64:	mov	r1, r6
   2ab68:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2ab6c:	movw	r2, #56934	; 0xde66
   2ab70:	movt	r2, #4
   2ab74:	mov	r0, r4
   2ab78:	mov	r1, #59	; 0x3b
   2ab7c:	sub	sp, fp, #16
   2ab80:	pop	{r4, r5, r6, r7, fp, lr}
   2ab84:	b	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2ab88:	mov	r0, r4
   2ab8c:	mov	r1, #59	; 0x3b
   2ab90:	sub	sp, fp, #16
   2ab94:	pop	{r4, r5, r6, r7, fp, lr}
   2ab98:	b	2a78c <__flatcc_fb_clear_parser@@Base+0xf94>
   2ab9c:	push	{r4, r5, r6, sl, fp, lr}
   2aba0:	add	fp, sp, #16
   2aba4:	mov	r6, r1
   2aba8:	mov	r5, r0
   2abac:	ldr	r4, [r0, #40]	; 0x28
   2abb0:	ldr	r0, [r1]
   2abb4:	cmp	r0, #0
   2abb8:	beq	2abd0 <__flatcc_fb_clear_parser@@Base+0x13d8>
   2abbc:	movw	r2, #56963	; 0xde83
   2abc0:	movt	r2, #4
   2abc4:	mov	r0, r5
   2abc8:	mov	r1, r4
   2abcc:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2abd0:	mov	r0, r5
   2abd4:	mov	r1, r6
   2abd8:	bl	2b2e4 <__flatcc_fb_clear_parser@@Base+0x1aec>
   2abdc:	ldr	r0, [r5, #544]	; 0x220
   2abe0:	str	r0, [r6, #8]
   2abe4:	movw	r2, #56985	; 0xde99
   2abe8:	movt	r2, #4
   2abec:	mov	r0, r5
   2abf0:	mov	r1, #59	; 0x3b
   2abf4:	mov	r3, r4
   2abf8:	pop	{r4, r5, r6, sl, fp, lr}
   2abfc:	b	2b378 <__flatcc_fb_clear_parser@@Base+0x1b80>
   2ac00:	push	{r4, r5, r6, sl, fp, lr}
   2ac04:	add	fp, sp, #16
   2ac08:	sub	sp, sp, #8
   2ac0c:	mov	r6, r1
   2ac10:	mov	r4, r0
   2ac14:	ldr	r5, [r0, #40]	; 0x28
   2ac18:	movw	r2, #57022	; 0xdebe
   2ac1c:	movt	r2, #4
   2ac20:	mov	r1, #19
   2ac24:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2ac28:	cmp	r0, #0
   2ac2c:	beq	2ac68 <__flatcc_fb_clear_parser@@Base+0x1470>
   2ac30:	add	r1, r6, #8
   2ac34:	mov	r0, r4
   2ac38:	bl	2a7d0 <__flatcc_fb_clear_parser@@Base+0xfd8>
   2ac3c:	ldr	r0, [r6, #12]
   2ac40:	cmp	r0, #0
   2ac44:	bne	2ac68 <__flatcc_fb_clear_parser@@Base+0x1470>
   2ac48:	mov	r0, #0
   2ac4c:	str	r0, [sp]
   2ac50:	movw	r2, #57056	; 0xdee0
   2ac54:	movt	r2, #4
   2ac58:	mov	r0, r4
   2ac5c:	mov	r1, r5
   2ac60:	mov	r3, #0
   2ac64:	bl	2a960 <__flatcc_fb_clear_parser@@Base+0x1168>
   2ac68:	movw	r2, #57087	; 0xdeff
   2ac6c:	movt	r2, #4
   2ac70:	mov	r0, r4
   2ac74:	mov	r1, #59	; 0x3b
   2ac78:	sub	sp, fp, #16
   2ac7c:	pop	{r4, r5, r6, sl, fp, lr}
   2ac80:	b	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2ac84:	push	{r4, sl, fp, lr}
   2ac88:	add	fp, sp, #8
   2ac8c:	mov	r4, r0
   2ac90:	mov	r1, #32
   2ac94:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   2ac98:	ldr	r1, [r4, #356]	; 0x164
   2ac9c:	str	r1, [r0]
   2aca0:	str	r0, [r4, #356]	; 0x164
   2aca4:	pop	{r4, sl, fp, pc}
   2aca8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2acac:	add	fp, sp, #24
   2acb0:	mov	r5, r2
   2acb4:	mov	r6, r1
   2acb8:	mov	r4, r0
   2acbc:	movw	r2, #57110	; 0xdf16
   2acc0:	movt	r2, #4
   2acc4:	mov	r1, #9
   2acc8:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2accc:	cmp	r0, #0
   2acd0:	beq	2ad58 <__flatcc_fb_clear_parser@@Base+0x1560>
   2acd4:	str	r0, [r6, #4]
   2acd8:	mov	r0, r4
   2acdc:	bl	2b3c8 <__flatcc_fb_clear_parser@@Base+0x1bd0>
   2ace0:	str	r0, [r6, #28]
   2ace4:	movw	r2, #57145	; 0xdf39
   2ace8:	movt	r2, #4
   2acec:	mov	r0, r4
   2acf0:	mov	r1, #123	; 0x7b
   2acf4:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2acf8:	cmp	r0, #0
   2acfc:	beq	2ad58 <__flatcc_fb_clear_parser@@Base+0x1560>
   2ad00:	add	r6, r6, #20
   2ad04:	ldr	r8, [r4, #40]	; 0x28
   2ad08:	movw	r7, #64569	; 0xfc39
   2ad0c:	movt	r7, #65535	; 0xffff
   2ad10:	b	2ad24 <__flatcc_fb_clear_parser@@Base+0x152c>
   2ad14:	bl	2b60c <__flatcc_fb_clear_parser@@Base+0x1e14>
   2ad18:	ldr	r0, [r4, #108]	; 0x6c
   2ad1c:	cmp	r0, #9
   2ad20:	bgt	2ad58 <__flatcc_fb_clear_parser@@Base+0x1560>
   2ad24:	ldr	r0, [r4, #40]	; 0x28
   2ad28:	ldr	r0, [r0, #16]
   2ad2c:	cmp	r0, #125	; 0x7d
   2ad30:	beq	2ad68 <__flatcc_fb_clear_parser@@Base+0x1570>
   2ad34:	mov	r0, r4
   2ad38:	mov	r1, r6
   2ad3c:	bl	2b5bc <__flatcc_fb_clear_parser@@Base+0x1dc4>
   2ad40:	mov	r1, r0
   2ad44:	mov	r0, r4
   2ad48:	cmp	r5, r7
   2ad4c:	bne	2ad14 <__flatcc_fb_clear_parser@@Base+0x151c>
   2ad50:	bl	2b4c8 <__flatcc_fb_clear_parser@@Base+0x1cd0>
   2ad54:	b	2ad18 <__flatcc_fb_clear_parser@@Base+0x1520>
   2ad58:	mov	r0, r4
   2ad5c:	mov	r1, #125	; 0x7d
   2ad60:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ad64:	b	2a78c <__flatcc_fb_clear_parser@@Base+0xf94>
   2ad68:	mov	r0, r4
   2ad6c:	mov	r1, #125	; 0x7d
   2ad70:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2ad74:	cmp	r8, #0
   2ad78:	beq	2ad9c <__flatcc_fb_clear_parser@@Base+0x15a4>
   2ad7c:	cmp	r0, #0
   2ad80:	bne	2ad9c <__flatcc_fb_clear_parser@@Base+0x15a4>
   2ad84:	ldr	r1, [r4, #40]	; 0x28
   2ad88:	movw	r2, #57170	; 0xdf52
   2ad8c:	movt	r2, #4
   2ad90:	mov	r0, r4
   2ad94:	mov	r3, r8
   2ad98:	bl	29934 <__flatcc_fb_clear_parser@@Base+0x13c>
   2ad9c:	mov	r0, r6
   2ada0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ada4:	b	2a6f0 <__flatcc_fb_clear_parser@@Base+0xef8>
   2ada8:	push	{r4, r5, fp, lr}
   2adac:	add	fp, sp, #8
   2adb0:	mov	r4, r0
   2adb4:	mov	r1, #128	; 0x80
   2adb8:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   2adbc:	mov	r5, r0
   2adc0:	ldr	r0, [r4, #392]	; 0x188
   2adc4:	mov	r1, #1
   2adc8:	strh	r1, [r5, #8]
   2adcc:	str	r0, [r5]
   2add0:	str	r5, [r4, #392]	; 0x188
   2add4:	ldr	r0, [r4, #544]	; 0x220
   2add8:	str	r0, [r5, #12]
   2addc:	add	r0, r4, #36	; 0x24
   2ade0:	bl	2a6f0 <__flatcc_fb_clear_parser@@Base+0xef8>
   2ade4:	ldr	r0, [r4, #36]	; 0x24
   2ade8:	str	r0, [r5, #32]
   2adec:	mov	r0, #0
   2adf0:	str	r0, [r4, #36]	; 0x24
   2adf4:	mov	r0, r5
   2adf8:	pop	{r4, r5, fp, pc}
   2adfc:	push	{r4, r5, r6, sl, fp, lr}
   2ae00:	add	fp, sp, #16
   2ae04:	mov	r4, r0
   2ae08:	mov	r1, #128	; 0x80
   2ae0c:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   2ae10:	mov	r5, r0
   2ae14:	ldr	r0, [r4, #392]	; 0x188
   2ae18:	mov	r6, #0
   2ae1c:	strh	r6, [r5, #8]
   2ae20:	str	r0, [r5]
   2ae24:	str	r5, [r4, #392]	; 0x188
   2ae28:	ldr	r0, [r4, #544]	; 0x220
   2ae2c:	str	r0, [r5, #12]
   2ae30:	add	r0, r4, #36	; 0x24
   2ae34:	bl	2a6f0 <__flatcc_fb_clear_parser@@Base+0xef8>
   2ae38:	ldr	r0, [r4, #36]	; 0x24
   2ae3c:	str	r0, [r5, #32]
   2ae40:	str	r6, [r4, #36]	; 0x24
   2ae44:	mov	r0, r5
   2ae48:	pop	{r4, r5, r6, sl, fp, pc}
   2ae4c:	push	{r4, r5, fp, lr}
   2ae50:	add	fp, sp, #8
   2ae54:	mov	r4, r0
   2ae58:	mov	r1, #128	; 0x80
   2ae5c:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   2ae60:	mov	r5, r0
   2ae64:	ldr	r0, [r4, #392]	; 0x188
   2ae68:	mov	r1, #2
   2ae6c:	strh	r1, [r5, #8]
   2ae70:	str	r0, [r5]
   2ae74:	str	r5, [r4, #392]	; 0x188
   2ae78:	ldr	r0, [r4, #544]	; 0x220
   2ae7c:	str	r0, [r5, #12]
   2ae80:	add	r0, r4, #36	; 0x24
   2ae84:	bl	2a6f0 <__flatcc_fb_clear_parser@@Base+0xef8>
   2ae88:	ldr	r0, [r4, #36]	; 0x24
   2ae8c:	str	r0, [r5, #32]
   2ae90:	mov	r0, #0
   2ae94:	str	r0, [r4, #36]	; 0x24
   2ae98:	mov	r0, r5
   2ae9c:	pop	{r4, r5, fp, pc}
   2aea0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aea4:	add	fp, sp, #28
   2aea8:	sub	sp, sp, #4
   2aeac:	mov	r5, r1
   2aeb0:	mov	r4, r0
   2aeb4:	movw	r2, #58038	; 0xe2b6
   2aeb8:	movt	r2, #4
   2aebc:	mov	r1, #9
   2aec0:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2aec4:	str	r0, [r5, #4]
   2aec8:	cmp	r0, #0
   2aecc:	beq	2b01c <__flatcc_fb_clear_parser@@Base+0x1824>
   2aed0:	mov	r0, r4
   2aed4:	mov	r1, #58	; 0x3a
   2aed8:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2aedc:	cmp	r0, #0
   2aee0:	beq	2af34 <__flatcc_fb_clear_parser@@Base+0x173c>
   2aee4:	add	r1, r5, #40	; 0x28
   2aee8:	mov	r0, r4
   2aeec:	bl	2bda8 <__flatcc_fb_clear_parser@@Base+0x25b0>
   2aef0:	ldr	r1, [r5, #40]	; 0x28
   2aef4:	ldrh	r0, [r5, #48]	; 0x30
   2aef8:	cmp	r0, #8
   2aefc:	bne	2af24 <__flatcc_fb_clear_parser@@Base+0x172c>
   2af00:	ldr	r0, [r1, #16]
   2af04:	add	r0, r0, #996	; 0x3e4
   2af08:	cmp	r0, #21
   2af0c:	bhi	2af34 <__flatcc_fb_clear_parser@@Base+0x173c>
   2af10:	mov	r2, #1
   2af14:	movw	r3, #2051	; 0x803
   2af18:	movt	r3, #32
   2af1c:	tst	r3, r2, lsl r0
   2af20:	beq	2af34 <__flatcc_fb_clear_parser@@Base+0x173c>
   2af24:	movw	r2, #58075	; 0xe2db
   2af28:	movt	r2, #4
   2af2c:	mov	r0, r4
   2af30:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2af34:	mov	r0, r4
   2af38:	bl	2b3c8 <__flatcc_fb_clear_parser@@Base+0x1bd0>
   2af3c:	str	r0, [r5, #28]
   2af40:	movw	r2, #58098	; 0xe2f2
   2af44:	movt	r2, #4
   2af48:	mov	r0, r4
   2af4c:	mov	r1, #123	; 0x7b
   2af50:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2af54:	cmp	r0, #0
   2af58:	beq	2b01c <__flatcc_fb_clear_parser@@Base+0x1824>
   2af5c:	mov	r9, r0
   2af60:	movw	r2, #58128	; 0xe310
   2af64:	movt	r2, #4
   2af68:	mov	r0, r4
   2af6c:	mov	r1, #9
   2af70:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2af74:	cmp	r0, #0
   2af78:	beq	2b01c <__flatcc_fb_clear_parser@@Base+0x1824>
   2af7c:	mov	r6, r0
   2af80:	add	r5, r5, #20
   2af84:	mov	r8, #0
   2af88:	movw	sl, #58128	; 0xe310
   2af8c:	movt	sl, #4
   2af90:	ldr	r0, [r4, #108]	; 0x6c
   2af94:	cmp	r0, #9
   2af98:	bgt	2b01c <__flatcc_fb_clear_parser@@Base+0x1824>
   2af9c:	mov	r0, r4
   2afa0:	mov	r1, r5
   2afa4:	bl	2b5bc <__flatcc_fb_clear_parser@@Base+0x1dc4>
   2afa8:	mov	r7, r0
   2afac:	str	r6, [r0, #4]
   2afb0:	mov	r0, r4
   2afb4:	mov	r1, #61	; 0x3d
   2afb8:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2afbc:	cmp	r0, #0
   2afc0:	beq	2afdc <__flatcc_fb_clear_parser@@Base+0x17e4>
   2afc4:	add	r1, r7, #48	; 0x30
   2afc8:	mov	r0, r4
   2afcc:	mov	r2, #0
   2afd0:	movw	r3, #58155	; 0xe32b
   2afd4:	movt	r3, #4
   2afd8:	bl	2b6e4 <__flatcc_fb_clear_parser@@Base+0x1eec>
   2afdc:	mov	r0, r4
   2afe0:	mov	r1, #44	; 0x2c
   2afe4:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2afe8:	cmp	r0, #0
   2afec:	ldrne	r0, [r4, #40]	; 0x28
   2aff0:	ldrne	r0, [r0, #16]
   2aff4:	cmpne	r0, #125	; 0x7d
   2aff8:	beq	2b030 <__flatcc_fb_clear_parser@@Base+0x1838>
   2affc:	str	r8, [r4, #36]	; 0x24
   2b000:	mov	r0, r4
   2b004:	mov	r1, #9
   2b008:	mov	r2, sl
   2b00c:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2b010:	mov	r6, r0
   2b014:	cmp	r0, #0
   2b018:	bne	2af90 <__flatcc_fb_clear_parser@@Base+0x1798>
   2b01c:	mov	r0, r4
   2b020:	mov	r1, #125	; 0x7d
   2b024:	sub	sp, fp, #28
   2b028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b02c:	b	2a78c <__flatcc_fb_clear_parser@@Base+0xf94>
   2b030:	movw	r2, #58182	; 0xe346
   2b034:	movt	r2, #4
   2b038:	mov	r0, r4
   2b03c:	mov	r1, #125	; 0x7d
   2b040:	mov	r3, r9
   2b044:	bl	2b378 <__flatcc_fb_clear_parser@@Base+0x1b80>
   2b048:	mov	r0, r5
   2b04c:	sub	sp, fp, #28
   2b050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b054:	b	2a6f0 <__flatcc_fb_clear_parser@@Base+0xef8>
   2b058:	push	{r4, r5, fp, lr}
   2b05c:	add	fp, sp, #8
   2b060:	mov	r4, r0
   2b064:	mov	r1, #128	; 0x80
   2b068:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   2b06c:	mov	r5, r0
   2b070:	ldr	r0, [r4, #392]	; 0x188
   2b074:	mov	r1, #3
   2b078:	strh	r1, [r5, #8]
   2b07c:	str	r0, [r5]
   2b080:	str	r5, [r4, #392]	; 0x188
   2b084:	ldr	r0, [r4, #544]	; 0x220
   2b088:	str	r0, [r5, #12]
   2b08c:	add	r0, r4, #36	; 0x24
   2b090:	bl	2a6f0 <__flatcc_fb_clear_parser@@Base+0xef8>
   2b094:	ldr	r0, [r4, #36]	; 0x24
   2b098:	str	r0, [r5, #32]
   2b09c:	mov	r0, #0
   2b0a0:	str	r0, [r4, #36]	; 0x24
   2b0a4:	mov	r0, r5
   2b0a8:	pop	{r4, r5, fp, pc}
   2b0ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b0b0:	add	fp, sp, #28
   2b0b4:	sub	sp, sp, #4
   2b0b8:	mov	r6, r1
   2b0bc:	mov	r4, r0
   2b0c0:	movw	r2, #58216	; 0xe368
   2b0c4:	movt	r2, #4
   2b0c8:	mov	r1, #9
   2b0cc:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2b0d0:	str	r0, [r6, #4]
   2b0d4:	cmp	r0, #0
   2b0d8:	beq	2b244 <__flatcc_fb_clear_parser@@Base+0x1a4c>
   2b0dc:	mov	r0, r4
   2b0e0:	bl	2b3c8 <__flatcc_fb_clear_parser@@Base+0x1bd0>
   2b0e4:	str	r0, [r6, #28]
   2b0e8:	movw	r2, #58254	; 0xe38e
   2b0ec:	movt	r2, #4
   2b0f0:	mov	r0, r4
   2b0f4:	mov	r1, #123	; 0x7b
   2b0f8:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2b0fc:	cmp	r0, #0
   2b100:	beq	2b244 <__flatcc_fb_clear_parser@@Base+0x1a4c>
   2b104:	mov	r5, r0
   2b108:	ldr	r7, [r4, #40]	; 0x28
   2b10c:	ldr	r0, [r7, #16]
   2b110:	cmp	r0, #9
   2b114:	bne	2b230 <__flatcc_fb_clear_parser@@Base+0x1a38>
   2b118:	add	r6, r6, #20
   2b11c:	mov	sl, sp
   2b120:	ldr	r0, [r4, #108]	; 0x6c
   2b124:	cmp	r0, #9
   2b128:	bgt	2b244 <__flatcc_fb_clear_parser@@Base+0x1a4c>
   2b12c:	mov	r0, r4
   2b130:	mov	r1, r6
   2b134:	bl	2b5bc <__flatcc_fb_clear_parser@@Base+0x1dc4>
   2b138:	mov	r8, r0
   2b13c:	mov	r0, r4
   2b140:	mov	r1, sl
   2b144:	bl	2b2e4 <__flatcc_fb_clear_parser@@Base+0x1aec>
   2b148:	ldr	r0, [sp]
   2b14c:	mov	r1, #12
   2b150:	strh	r1, [r8, #24]
   2b154:	mov	r9, r8
   2b158:	str	r0, [r9, #16]!
   2b15c:	ldr	r0, [sp]
   2b160:	ldr	r1, [r0]
   2b164:	cmp	r1, #0
   2b168:	beq	2b180 <__flatcc_fb_clear_parser@@Base+0x1988>
   2b16c:	mov	r0, r1
   2b170:	ldr	r1, [r1]
   2b174:	cmp	r1, #0
   2b178:	bne	2b16c <__flatcc_fb_clear_parser@@Base+0x1974>
   2b17c:	str	r0, [sp]
   2b180:	ldr	r0, [r0, #4]
   2b184:	str	r0, [r8, #4]
   2b188:	mov	r0, r4
   2b18c:	mov	r1, #58	; 0x3a
   2b190:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b194:	cmp	r0, #0
   2b198:	beq	2b1cc <__flatcc_fb_clear_parser@@Base+0x19d4>
   2b19c:	ldr	r0, [r9]
   2b1a0:	ldr	r0, [r0]
   2b1a4:	cmp	r0, #0
   2b1a8:	beq	2b1c0 <__flatcc_fb_clear_parser@@Base+0x19c8>
   2b1ac:	mov	r0, r4
   2b1b0:	mov	r1, r7
   2b1b4:	movw	r2, #58313	; 0xe3c9
   2b1b8:	movt	r2, #4
   2b1bc:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2b1c0:	mov	r0, r4
   2b1c4:	mov	r1, r9
   2b1c8:	bl	2bda8 <__flatcc_fb_clear_parser@@Base+0x25b0>
   2b1cc:	mov	r0, r4
   2b1d0:	mov	r1, #61	; 0x3d
   2b1d4:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b1d8:	cmp	r0, #0
   2b1dc:	beq	2b1f8 <__flatcc_fb_clear_parser@@Base+0x1a00>
   2b1e0:	add	r1, r8, #48	; 0x30
   2b1e4:	mov	r0, r4
   2b1e8:	mov	r2, #0
   2b1ec:	movw	r3, #58155	; 0xe32b
   2b1f0:	movt	r3, #4
   2b1f4:	bl	2b6e4 <__flatcc_fb_clear_parser@@Base+0x1eec>
   2b1f8:	mov	r0, r4
   2b1fc:	mov	r1, #44	; 0x2c
   2b200:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b204:	cmp	r0, #0
   2b208:	ldrne	r0, [r4, #40]	; 0x28
   2b20c:	ldrne	r0, [r0, #16]
   2b210:	cmpne	r0, #125	; 0x7d
   2b214:	beq	2b254 <__flatcc_fb_clear_parser@@Base+0x1a5c>
   2b218:	mov	r0, #0
   2b21c:	str	r0, [r4, #36]	; 0x24
   2b220:	ldr	r7, [r4, #40]	; 0x28
   2b224:	ldr	r0, [r7, #16]
   2b228:	cmp	r0, #9
   2b22c:	beq	2b120 <__flatcc_fb_clear_parser@@Base+0x1928>
   2b230:	movw	r2, #58285	; 0xe3ad
   2b234:	movt	r2, #4
   2b238:	mov	r0, r4
   2b23c:	mov	r1, r7
   2b240:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2b244:	mov	r0, r4
   2b248:	bl	2bf44 <__flatcc_fb_clear_parser@@Base+0x274c>
   2b24c:	sub	sp, fp, #28
   2b250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b254:	movw	r2, #58370	; 0xe402
   2b258:	movt	r2, #4
   2b25c:	mov	r0, r4
   2b260:	mov	r1, #125	; 0x7d
   2b264:	mov	r3, r5
   2b268:	bl	2b378 <__flatcc_fb_clear_parser@@Base+0x1b80>
   2b26c:	mov	r0, r6
   2b270:	bl	2a6f0 <__flatcc_fb_clear_parser@@Base+0xef8>
   2b274:	mov	r0, r4
   2b278:	mov	r1, r6
   2b27c:	bl	2b5bc <__flatcc_fb_clear_parser@@Base+0x1dc4>
   2b280:	add	r1, r4, #68	; 0x44
   2b284:	str	r1, [r0, #4]
   2b288:	sub	sp, fp, #28
   2b28c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b290:	push	{r4, r5, fp, lr}
   2b294:	add	fp, sp, #8
   2b298:	mov	r4, r0
   2b29c:	mov	r1, #128	; 0x80
   2b2a0:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   2b2a4:	mov	r5, r0
   2b2a8:	ldr	r0, [r4, #392]	; 0x188
   2b2ac:	mov	r1, #4
   2b2b0:	strh	r1, [r5, #8]
   2b2b4:	str	r0, [r5]
   2b2b8:	str	r5, [r4, #392]	; 0x188
   2b2bc:	ldr	r0, [r4, #544]	; 0x220
   2b2c0:	str	r0, [r5, #12]
   2b2c4:	add	r0, r4, #36	; 0x24
   2b2c8:	bl	2a6f0 <__flatcc_fb_clear_parser@@Base+0xef8>
   2b2cc:	ldr	r0, [r4, #36]	; 0x24
   2b2d0:	str	r0, [r5, #32]
   2b2d4:	mov	r0, #0
   2b2d8:	str	r0, [r4, #36]	; 0x24
   2b2dc:	mov	r0, r5
   2b2e0:	pop	{r4, r5, fp, pc}
   2b2e4:	push	{r4, r5, r6, sl, fp, lr}
   2b2e8:	add	fp, sp, #16
   2b2ec:	mov	r5, r1
   2b2f0:	mov	r4, r0
   2b2f4:	ldr	r1, [r0, #40]	; 0x28
   2b2f8:	bl	2b3ac <__flatcc_fb_clear_parser@@Base+0x1bb4>
   2b2fc:	str	r0, [r5]
   2b300:	mov	r0, r4
   2b304:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2b308:	ldr	r6, [r5]
   2b30c:	mov	r0, r4
   2b310:	mov	r1, #46	; 0x2e
   2b314:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b318:	cmp	r0, #0
   2b31c:	beq	2b360 <__flatcc_fb_clear_parser@@Base+0x1b68>
   2b320:	ldr	r1, [r4, #40]	; 0x28
   2b324:	ldr	r0, [r1, #16]
   2b328:	cmp	r0, #9
   2b32c:	bne	2b364 <__flatcc_fb_clear_parser@@Base+0x1b6c>
   2b330:	mov	r0, r4
   2b334:	bl	2b3ac <__flatcc_fb_clear_parser@@Base+0x1bb4>
   2b338:	mov	r5, r0
   2b33c:	str	r0, [r6]
   2b340:	mov	r0, r4
   2b344:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2b348:	mov	r0, r4
   2b34c:	mov	r1, #46	; 0x2e
   2b350:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b354:	cmp	r0, #0
   2b358:	mov	r6, r5
   2b35c:	bne	2b320 <__flatcc_fb_clear_parser@@Base+0x1b28>
   2b360:	pop	{r4, r5, r6, sl, fp, pc}
   2b364:	movw	r2, #56698	; 0xdd7a
   2b368:	movt	r2, #4
   2b36c:	mov	r0, r4
   2b370:	pop	{r4, r5, r6, sl, fp, lr}
   2b374:	b	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2b378:	push	{fp, lr}
   2b37c:	mov	fp, sp
   2b380:	mov	ip, r1
   2b384:	mov	r1, #0
   2b388:	str	r1, [r0, #36]	; 0x24
   2b38c:	ldr	r1, [r0, #40]	; 0x28
   2b390:	ldr	lr, [r1, #16]
   2b394:	cmp	lr, ip
   2b398:	bne	2b3a4 <__flatcc_fb_clear_parser@@Base+0x1bac>
   2b39c:	pop	{fp, lr}
   2b3a0:	b	29708 <__flatcc_fb_parse@@Base+0x1040>
   2b3a4:	pop	{fp, lr}
   2b3a8:	b	29934 <__flatcc_fb_clear_parser@@Base+0x13c>
   2b3ac:	push	{r4, sl, fp, lr}
   2b3b0:	add	fp, sp, #8
   2b3b4:	mov	r4, r1
   2b3b8:	mov	r1, #12
   2b3bc:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   2b3c0:	str	r4, [r0, #4]
   2b3c4:	pop	{r4, sl, fp, pc}
   2b3c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b3cc:	add	fp, sp, #28
   2b3d0:	sub	sp, sp, #4
   2b3d4:	mov	r4, r0
   2b3d8:	mov	r5, #0
   2b3dc:	str	r5, [sp]
   2b3e0:	mov	r1, #40	; 0x28
   2b3e4:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b3e8:	cmp	r0, #0
   2b3ec:	beq	2b4bc <__flatcc_fb_clear_parser@@Base+0x1cc4>
   2b3f0:	mov	r9, r0
   2b3f4:	mov	r0, r4
   2b3f8:	mov	r1, #9
   2b3fc:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b400:	cmp	r0, #0
   2b404:	beq	2b498 <__flatcc_fb_clear_parser@@Base+0x1ca0>
   2b408:	mov	r7, r0
   2b40c:	mov	r6, sp
   2b410:	movw	sl, #57243	; 0xdf9b
   2b414:	movt	sl, #4
   2b418:	movw	r8, #57211	; 0xdf7b
   2b41c:	movt	r8, #4
   2b420:	mov	r0, r4
   2b424:	mov	r1, r6
   2b428:	bl	2b6c0 <__flatcc_fb_clear_parser@@Base+0x1ec8>
   2b42c:	ldr	r5, [sp]
   2b430:	str	r7, [r5, #4]
   2b434:	mov	r0, r4
   2b438:	mov	r1, #58	; 0x3a
   2b43c:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b440:	cmp	r0, #0
   2b444:	beq	2b45c <__flatcc_fb_clear_parser@@Base+0x1c64>
   2b448:	add	r1, r5, #8
   2b44c:	mov	r0, r4
   2b450:	mov	r2, #1
   2b454:	mov	r3, r8
   2b458:	bl	2b6e4 <__flatcc_fb_clear_parser@@Base+0x1eec>
   2b45c:	ldr	r0, [r4, #108]	; 0x6c
   2b460:	cmp	r0, #9
   2b464:	bgt	2b4bc <__flatcc_fb_clear_parser@@Base+0x1cc4>
   2b468:	mov	r0, r4
   2b46c:	mov	r1, #44	; 0x2c
   2b470:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b474:	cmp	r0, #0
   2b478:	beq	2b498 <__flatcc_fb_clear_parser@@Base+0x1ca0>
   2b47c:	mov	r0, r4
   2b480:	mov	r1, #9
   2b484:	mov	r2, sl
   2b488:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2b48c:	mov	r7, r0
   2b490:	cmp	r0, #0
   2b494:	bne	2b420 <__flatcc_fb_clear_parser@@Base+0x1c28>
   2b498:	movw	r2, #57288	; 0xdfc8
   2b49c:	movt	r2, #4
   2b4a0:	mov	r0, r4
   2b4a4:	mov	r1, #41	; 0x29
   2b4a8:	mov	r3, r9
   2b4ac:	bl	2b378 <__flatcc_fb_clear_parser@@Base+0x1b80>
   2b4b0:	mov	r0, sp
   2b4b4:	bl	2b8d0 <__flatcc_fb_clear_parser@@Base+0x20d8>
   2b4b8:	ldr	r5, [sp]
   2b4bc:	mov	r0, r5
   2b4c0:	sub	sp, fp, #28
   2b4c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b4c8:	push	{r4, r5, fp, lr}
   2b4cc:	add	fp, sp, #8
   2b4d0:	mov	r5, r1
   2b4d4:	mov	r4, r0
   2b4d8:	movw	r2, #57528	; 0xe0b8
   2b4dc:	movt	r2, #4
   2b4e0:	mov	r1, #9
   2b4e4:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2b4e8:	cmp	r0, #0
   2b4ec:	beq	2b588 <__flatcc_fb_clear_parser@@Base+0x1d90>
   2b4f0:	str	r0, [r5, #4]
   2b4f4:	movw	r2, #57555	; 0xe0d3
   2b4f8:	movt	r2, #4
   2b4fc:	mov	r0, r4
   2b500:	mov	r1, #40	; 0x28
   2b504:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2b508:	cmp	r0, #0
   2b50c:	beq	2b588 <__flatcc_fb_clear_parser@@Base+0x1d90>
   2b510:	add	r1, r5, #32
   2b514:	mov	r0, r4
   2b518:	bl	2bda8 <__flatcc_fb_clear_parser@@Base+0x25b0>
   2b51c:	movw	r2, #57592	; 0xe0f8
   2b520:	movt	r2, #4
   2b524:	mov	r0, r4
   2b528:	mov	r1, #41	; 0x29
   2b52c:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2b530:	cmp	r0, #0
   2b534:	beq	2b588 <__flatcc_fb_clear_parser@@Base+0x1d90>
   2b538:	movw	r2, #57631	; 0xe11f
   2b53c:	movt	r2, #4
   2b540:	mov	r0, r4
   2b544:	mov	r1, #58	; 0x3a
   2b548:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2b54c:	cmp	r0, #0
   2b550:	beq	2b588 <__flatcc_fb_clear_parser@@Base+0x1d90>
   2b554:	add	r1, r5, #16
   2b558:	mov	r0, r4
   2b55c:	bl	2bda8 <__flatcc_fb_clear_parser@@Base+0x25b0>
   2b560:	mov	r0, r4
   2b564:	mov	r1, #61	; 0x3d
   2b568:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b56c:	cmp	r0, #0
   2b570:	beq	2b594 <__flatcc_fb_clear_parser@@Base+0x1d9c>
   2b574:	mov	r1, r0
   2b578:	movw	r2, #57682	; 0xe152
   2b57c:	movt	r2, #4
   2b580:	mov	r0, r4
   2b584:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2b588:	mov	r0, r4
   2b58c:	pop	{r4, r5, fp, lr}
   2b590:	b	2bf44 <__flatcc_fb_clear_parser@@Base+0x274c>
   2b594:	mov	r0, r4
   2b598:	bl	2b3c8 <__flatcc_fb_clear_parser@@Base+0x1bd0>
   2b59c:	str	r0, [r5, #64]	; 0x40
   2b5a0:	movw	r2, #57720	; 0xe178
   2b5a4:	movt	r2, #4
   2b5a8:	mov	r0, r4
   2b5ac:	mov	r1, #59	; 0x3b
   2b5b0:	mov	r3, #0
   2b5b4:	pop	{r4, r5, fp, lr}
   2b5b8:	b	2b378 <__flatcc_fb_clear_parser@@Base+0x1b80>
   2b5bc:	push	{r4, r5, r6, sl, fp, lr}
   2b5c0:	add	fp, sp, #16
   2b5c4:	mov	r4, r1
   2b5c8:	mov	r5, r0
   2b5cc:	mov	r1, #120	; 0x78
   2b5d0:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   2b5d4:	mov	r6, r0
   2b5d8:	ldr	r0, [r4]
   2b5dc:	mov	r1, #5
   2b5e0:	strh	r1, [r6, #8]
   2b5e4:	str	r0, [r6]
   2b5e8:	str	r6, [r4]
   2b5ec:	add	r0, r5, #36	; 0x24
   2b5f0:	bl	2a6f0 <__flatcc_fb_clear_parser@@Base+0xef8>
   2b5f4:	ldr	r0, [r5, #36]	; 0x24
   2b5f8:	str	r0, [r6, #68]	; 0x44
   2b5fc:	mov	r0, #0
   2b600:	str	r0, [r5, #36]	; 0x24
   2b604:	mov	r0, r6
   2b608:	pop	{r4, r5, r6, sl, fp, pc}
   2b60c:	push	{r4, r5, fp, lr}
   2b610:	add	fp, sp, #8
   2b614:	mov	r5, r1
   2b618:	mov	r4, r0
   2b61c:	movw	r2, #57902	; 0xe22e
   2b620:	movt	r2, #4
   2b624:	mov	r1, #9
   2b628:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2b62c:	cmp	r0, #0
   2b630:	beq	2b6b4 <__flatcc_fb_clear_parser@@Base+0x1ebc>
   2b634:	str	r0, [r5, #4]
   2b638:	movw	r2, #57928	; 0xe248
   2b63c:	movt	r2, #4
   2b640:	mov	r0, r4
   2b644:	mov	r1, #58	; 0x3a
   2b648:	bl	2a754 <__flatcc_fb_clear_parser@@Base+0xf5c>
   2b64c:	cmp	r0, #0
   2b650:	beq	2b6b4 <__flatcc_fb_clear_parser@@Base+0x1ebc>
   2b654:	add	r1, r5, #16
   2b658:	mov	r0, r4
   2b65c:	bl	2bda8 <__flatcc_fb_clear_parser@@Base+0x25b0>
   2b660:	mov	r0, r4
   2b664:	mov	r1, #61	; 0x3d
   2b668:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b66c:	cmp	r0, #0
   2b670:	beq	2b68c <__flatcc_fb_clear_parser@@Base+0x1e94>
   2b674:	add	r1, r5, #48	; 0x30
   2b678:	movw	r3, #57969	; 0xe271
   2b67c:	movt	r3, #4
   2b680:	mov	r0, r4
   2b684:	mov	r2, #2
   2b688:	bl	2b6e4 <__flatcc_fb_clear_parser@@Base+0x1eec>
   2b68c:	mov	r0, r4
   2b690:	bl	2b3c8 <__flatcc_fb_clear_parser@@Base+0x1bd0>
   2b694:	str	r0, [r5, #64]	; 0x40
   2b698:	movw	r2, #58004	; 0xe294
   2b69c:	movt	r2, #4
   2b6a0:	mov	r0, r4
   2b6a4:	mov	r1, #59	; 0x3b
   2b6a8:	mov	r3, #0
   2b6ac:	pop	{r4, r5, fp, lr}
   2b6b0:	b	2b378 <__flatcc_fb_clear_parser@@Base+0x1b80>
   2b6b4:	mov	r0, r4
   2b6b8:	pop	{r4, r5, fp, lr}
   2b6bc:	b	2bf44 <__flatcc_fb_clear_parser@@Base+0x274c>
   2b6c0:	push	{r4, sl, fp, lr}
   2b6c4:	add	fp, sp, #8
   2b6c8:	mov	r4, r1
   2b6cc:	mov	r1, #24
   2b6d0:	bl	29958 <__flatcc_fb_clear_parser@@Base+0x160>
   2b6d4:	ldr	r1, [r4]
   2b6d8:	str	r1, [r0]
   2b6dc:	str	r0, [r4]
   2b6e0:	pop	{r4, sl, fp, pc}
   2b6e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b6e8:	add	fp, sp, #24
   2b6ec:	mov	r8, r3
   2b6f0:	mov	r5, r2
   2b6f4:	mov	r6, r1
   2b6f8:	mov	r4, r0
   2b6fc:	mov	r1, #45	; 0x2d
   2b700:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2b704:	mov	r7, r0
   2b708:	ldr	r9, [r4, #40]	; 0x28
   2b70c:	ldr	r0, [r9, #16]
   2b710:	sub	r1, r0, #9
   2b714:	cmp	r1, #10
   2b718:	bhi	2b780 <__flatcc_fb_clear_parser@@Base+0x1f88>
   2b71c:	add	r0, pc, #0
   2b720:	ldr	pc, [r0, r1, lsl #2]
   2b724:	andeq	fp, r2, r0, asr r7
   2b728:	andeq	fp, r2, r8, lsr #15
   2b72c:	ldrdeq	fp, [r2], -r0
   2b730:	andeq	fp, r2, r4, asr #16
   2b734:	andeq	fp, r2, r4, asr #16
   2b738:	strdeq	fp, [r2], -r8
   2b73c:	andeq	fp, r2, r4, asr #16
   2b740:	andeq	fp, r2, r4, asr #16
   2b744:	andeq	fp, r2, r4, asr #16
   2b748:	andeq	fp, r2, r4, asr #16
   2b74c:	andeq	fp, r2, r0, lsr #16
   2b750:	mov	r0, r4
   2b754:	mov	r1, r6
   2b758:	bl	2b2e4 <__flatcc_fb_clear_parser@@Base+0x1aec>
   2b75c:	mov	r0, #13
   2b760:	strh	r0, [r6, #8]
   2b764:	cmp	r7, #0
   2b768:	beq	2b8cc <__flatcc_fb_clear_parser@@Base+0x20d4>
   2b76c:	mov	r0, #1
   2b770:	strh	r0, [r6, #8]
   2b774:	movw	r2, #57353	; 0xe009
   2b778:	movt	r2, #4
   2b77c:	b	2b8bc <__flatcc_fb_clear_parser@@Base+0x20c4>
   2b780:	cmn	r0, #988	; 0x3dc
   2b784:	beq	2b858 <__flatcc_fb_clear_parser@@Base+0x2060>
   2b788:	movw	r1, #64550	; 0xfc26
   2b78c:	movt	r1, #65535	; 0xffff
   2b790:	cmp	r0, r1
   2b794:	bne	2b844 <__flatcc_fb_clear_parser@@Base+0x204c>
   2b798:	mov	r0, #6
   2b79c:	strh	r0, [r6, #8]
   2b7a0:	mov	r0, #0
   2b7a4:	b	2b864 <__flatcc_fb_clear_parser@@Base+0x206c>
   2b7a8:	cmp	r7, #0
   2b7ac:	mov	r3, r7
   2b7b0:	movwne	r3, #1
   2b7b4:	mov	r0, r4
   2b7b8:	mov	r1, r9
   2b7bc:	mov	r2, r6
   2b7c0:	bl	2b988 <__flatcc_fb_clear_parser@@Base+0x2190>
   2b7c4:	cmp	r7, #0
   2b7c8:	bne	2b870 <__flatcc_fb_clear_parser@@Base+0x2078>
   2b7cc:	b	2b898 <__flatcc_fb_clear_parser@@Base+0x20a0>
   2b7d0:	cmp	r7, #0
   2b7d4:	mov	r3, r7
   2b7d8:	movwne	r3, #1
   2b7dc:	mov	r0, r4
   2b7e0:	mov	r1, r9
   2b7e4:	mov	r2, r6
   2b7e8:	bl	2ba08 <__flatcc_fb_clear_parser@@Base+0x2210>
   2b7ec:	cmp	r7, #0
   2b7f0:	bne	2b870 <__flatcc_fb_clear_parser@@Base+0x2078>
   2b7f4:	b	2b898 <__flatcc_fb_clear_parser@@Base+0x20a0>
   2b7f8:	cmp	r7, #0
   2b7fc:	mov	r3, r7
   2b800:	movwne	r3, #1
   2b804:	mov	r0, r4
   2b808:	mov	r1, r9
   2b80c:	mov	r2, r6
   2b810:	bl	2b908 <__flatcc_fb_clear_parser@@Base+0x2110>
   2b814:	cmp	r7, #0
   2b818:	bne	2b870 <__flatcc_fb_clear_parser@@Base+0x2078>
   2b81c:	b	2b898 <__flatcc_fb_clear_parser@@Base+0x20a0>
   2b820:	mov	r0, r4
   2b824:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2b828:	mov	r0, r4
   2b82c:	mov	r1, r6
   2b830:	bl	2a7d0 <__flatcc_fb_clear_parser@@Base+0xfd8>
   2b834:	tst	r5, #1
   2b838:	bne	2b8a4 <__flatcc_fb_clear_parser@@Base+0x20ac>
   2b83c:	mov	r0, #1
   2b840:	strh	r0, [r6, #8]
   2b844:	mov	r0, r4
   2b848:	mov	r1, r9
   2b84c:	mov	r2, r8
   2b850:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b854:	b	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2b858:	mov	r0, #6
   2b85c:	strh	r0, [r6, #8]
   2b860:	mov	r0, #1
   2b864:	strb	r0, [r6]
   2b868:	cmp	r7, #0
   2b86c:	beq	2b898 <__flatcc_fb_clear_parser@@Base+0x20a0>
   2b870:	ldrh	r0, [r6, #8]
   2b874:	cmp	r0, #6
   2b878:	bne	2b898 <__flatcc_fb_clear_parser@@Base+0x20a0>
   2b87c:	mov	r0, #1
   2b880:	strh	r0, [r6, #8]
   2b884:	movw	r2, #57383	; 0xe027
   2b888:	movt	r2, #4
   2b88c:	mov	r0, r4
   2b890:	mov	r1, r9
   2b894:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2b898:	mov	r0, r4
   2b89c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b8a0:	b	29708 <__flatcc_fb_parse@@Base+0x1040>
   2b8a4:	cmp	r7, #0
   2b8a8:	beq	2b8cc <__flatcc_fb_clear_parser@@Base+0x20d4>
   2b8ac:	mov	r0, #1
   2b8b0:	strh	r0, [r6, #8]
   2b8b4:	movw	r2, #57319	; 0xdfe7
   2b8b8:	movt	r2, #4
   2b8bc:	mov	r0, r4
   2b8c0:	mov	r1, r9
   2b8c4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b8c8:	b	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2b8cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b8d0:	ldr	r1, [r0]
   2b8d4:	cmp	r1, #0
   2b8d8:	moveq	r2, #0
   2b8dc:	streq	r2, [r0]
   2b8e0:	bxeq	lr
   2b8e4:	mov	r3, #0
   2b8e8:	mov	r2, r1
   2b8ec:	ldr	r1, [r1]
   2b8f0:	str	r3, [r2]
   2b8f4:	cmp	r1, #0
   2b8f8:	mov	r3, r2
   2b8fc:	bne	2b8e8 <__flatcc_fb_clear_parser@@Base+0x20f0>
   2b900:	str	r2, [r0]
   2b904:	bx	lr
   2b908:	push	{r4, r5, r6, r7, fp, lr}
   2b90c:	add	fp, sp, #16
   2b910:	sub	sp, sp, #8
   2b914:	mov	r5, r3
   2b918:	mov	r4, r2
   2b91c:	mov	r6, r1
   2b920:	mov	r7, r0
   2b924:	mov	r0, #5
   2b928:	strh	r0, [r2, #8]
   2b92c:	ldm	r1, {r0, r1}
   2b930:	add	r3, sp, #4
   2b934:	bl	2baa8 <__flatcc_fb_clear_parser@@Base+0x22b0>
   2b938:	ldr	r0, [sp, #4]
   2b93c:	cmp	r0, #0
   2b940:	beq	2b960 <__flatcc_fb_clear_parser@@Base+0x2168>
   2b944:	mov	r0, #1
   2b948:	strh	r0, [r4, #8]
   2b94c:	movw	r2, #57418	; 0xe04a
   2b950:	movt	r2, #4
   2b954:	mov	r0, r7
   2b958:	mov	r1, r6
   2b95c:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2b960:	cmp	r5, #0
   2b964:	beq	2b980 <__flatcc_fb_clear_parser@@Base+0x2188>
   2b968:	mov	r0, #4
   2b96c:	strh	r0, [r4, #8]
   2b970:	ldrd	r0, [r4]
   2b974:	rsbs	r0, r0, #0
   2b978:	rsc	r1, r1, #0
   2b97c:	strd	r0, [r4]
   2b980:	sub	sp, fp, #16
   2b984:	pop	{r4, r5, r6, r7, fp, pc}
   2b988:	push	{r4, r5, r6, r7, fp, lr}
   2b98c:	add	fp, sp, #16
   2b990:	sub	sp, sp, #8
   2b994:	mov	r5, r3
   2b998:	mov	r4, r2
   2b99c:	mov	r6, r1
   2b9a0:	mov	r7, r0
   2b9a4:	mov	r0, #5
   2b9a8:	strh	r0, [r2, #8]
   2b9ac:	ldm	r1, {r0, r1}
   2b9b0:	add	r3, sp, #4
   2b9b4:	bl	2bc54 <__flatcc_fb_clear_parser@@Base+0x245c>
   2b9b8:	ldr	r0, [sp, #4]
   2b9bc:	cmp	r0, #0
   2b9c0:	beq	2b9e0 <__flatcc_fb_clear_parser@@Base+0x21e8>
   2b9c4:	mov	r0, #1
   2b9c8:	strh	r0, [r4, #8]
   2b9cc:	movw	r2, #57445	; 0xe065
   2b9d0:	movt	r2, #4
   2b9d4:	mov	r0, r7
   2b9d8:	mov	r1, r6
   2b9dc:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2b9e0:	cmp	r5, #0
   2b9e4:	beq	2ba00 <__flatcc_fb_clear_parser@@Base+0x2208>
   2b9e8:	mov	r0, #4
   2b9ec:	strh	r0, [r4, #8]
   2b9f0:	ldrd	r0, [r4]
   2b9f4:	rsbs	r0, r0, #0
   2b9f8:	rsc	r1, r1, #0
   2b9fc:	strd	r0, [r4]
   2ba00:	sub	sp, fp, #16
   2ba04:	pop	{r4, r5, r6, r7, fp, pc}
   2ba08:	push	{r4, r5, r6, r7, fp, lr}
   2ba0c:	add	fp, sp, #16
   2ba10:	sub	sp, sp, #8
   2ba14:	mov	r7, r3
   2ba18:	mov	r5, r2
   2ba1c:	mov	r4, r1
   2ba20:	mov	r6, r0
   2ba24:	mov	r0, #3
   2ba28:	strh	r0, [r2, #8]
   2ba2c:	ldr	r0, [r1]
   2ba30:	add	r1, sp, #4
   2ba34:	bl	14a24 <strtod@plt>
   2ba38:	vstr	d0, [r5]
   2ba3c:	ldm	r4, {r0, r1}
   2ba40:	add	r1, r0, r1
   2ba44:	ldr	r2, [sp, #4]
   2ba48:	cmp	r2, r1
   2ba4c:	beq	2ba64 <__flatcc_fb_clear_parser@@Base+0x226c>
   2ba50:	mov	r0, #1
   2ba54:	strh	r0, [r5, #8]
   2ba58:	movw	r2, #57468	; 0xe07c
   2ba5c:	movt	r2, #4
   2ba60:	b	2ba80 <__flatcc_fb_clear_parser@@Base+0x2288>
   2ba64:	ldrb	r0, [r0]
   2ba68:	cmp	r0, #46	; 0x2e
   2ba6c:	bne	2ba94 <__flatcc_fb_clear_parser@@Base+0x229c>
   2ba70:	mov	r0, #1
   2ba74:	strh	r0, [r5, #8]
   2ba78:	movw	r2, #57489	; 0xe091
   2ba7c:	movt	r2, #4
   2ba80:	mov	r0, r6
   2ba84:	mov	r1, r4
   2ba88:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2ba8c:	sub	sp, fp, #16
   2ba90:	pop	{r4, r5, r6, r7, fp, pc}
   2ba94:	cmp	r7, #0
   2ba98:	vnegne.f64	d16, d0
   2ba9c:	vstrne	d16, [r5]
   2baa0:	sub	sp, fp, #16
   2baa4:	pop	{r4, r5, r6, r7, fp, pc}
   2baa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2baac:	add	fp, sp, #28
   2bab0:	sub	sp, sp, #12
   2bab4:	add	ip, sp, #8
   2bab8:	cmp	r3, #0
   2babc:	movne	ip, r3
   2bac0:	cmp	r1, #0
   2bac4:	beq	2bbb4 <__flatcc_fb_clear_parser@@Base+0x23bc>
   2bac8:	add	r9, r0, r1
   2bacc:	ldrb	sl, [r0]
   2bad0:	sub	r1, sl, #45	; 0x2d
   2bad4:	clz	r1, r1
   2bad8:	lsr	r3, r1, #5
   2badc:	add	r4, r0, r3
   2bae0:	sub	r0, r9, r4
   2bae4:	mvn	r6, #3
   2bae8:	cmp	r0, #2
   2baec:	blt	2bbb8 <__flatcc_fb_clear_parser@@Base+0x23c0>
   2baf0:	ldrb	r0, [r4]
   2baf4:	cmp	r0, #48	; 0x30
   2baf8:	bne	2bbb8 <__flatcc_fb_clear_parser@@Base+0x23c0>
   2bafc:	ldrb	r0, [r4, #1]
   2bb00:	orr	r0, r0, #32
   2bb04:	cmp	r0, #120	; 0x78
   2bb08:	bne	2bbb8 <__flatcc_fb_clear_parser@@Base+0x23c0>
   2bb0c:	add	r1, r4, #2
   2bb10:	sub	r0, r9, r1
   2bb14:	cmp	r0, #16
   2bb18:	mov	r0, r9
   2bb1c:	addgt	r0, r4, #18
   2bb20:	cmp	r1, r0
   2bb24:	beq	2bbd8 <__flatcc_fb_clear_parser@@Base+0x23e0>
   2bb28:	str	r3, [sp]
   2bb2c:	str	r2, [sp, #4]
   2bb30:	sub	r7, r0, r4
   2bb34:	mov	r0, #0
   2bb38:	mov	r6, #2
   2bb3c:	mov	r5, #0
   2bb40:	b	2bb68 <__flatcc_fb_clear_parser@@Base+0x2370>
   2bb44:	lsl	r1, r5, #4
   2bb48:	orr	r1, r1, r0, lsr #28
   2bb4c:	adds	r0, r8, r0, lsl #4
   2bb50:	adc	r1, r1, r2
   2bb54:	adds	r0, r0, r3
   2bb58:	adc	r5, r1, #0
   2bb5c:	add	r6, r6, #1
   2bb60:	cmp	r7, r6
   2bb64:	beq	2bbc4 <__flatcc_fb_clear_parser@@Base+0x23cc>
   2bb68:	mvn	r1, #86	; 0x56
   2bb6c:	adds	r8, r1, #39	; 0x27
   2bb70:	mvn	r1, #0
   2bb74:	adc	r2, r1, #0
   2bb78:	ldrb	r3, [r4, r6]
   2bb7c:	sub	lr, r3, #48	; 0x30
   2bb80:	uxtb	r1, lr
   2bb84:	cmp	r1, #10
   2bb88:	bcc	2bb44 <__flatcc_fb_clear_parser@@Base+0x234c>
   2bb8c:	orr	r3, r3, #32
   2bb90:	sub	r1, r3, #97	; 0x61
   2bb94:	uxtb	r1, r1
   2bb98:	cmp	r1, #5
   2bb9c:	mvn	r8, #86	; 0x56
   2bba0:	mvn	r2, #0
   2bba4:	bls	2bb44 <__flatcc_fb_clear_parser@@Base+0x234c>
   2bba8:	add	r3, r4, r6
   2bbac:	mov	r7, #0
   2bbb0:	b	2bbcc <__flatcc_fb_clear_parser@@Base+0x23d4>
   2bbb4:	mvn	r6, #4
   2bbb8:	str	r6, [ip]
   2bbbc:	sub	sp, fp, #28
   2bbc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bbc4:	add	r3, r4, r6
   2bbc8:	mov	r7, #1
   2bbcc:	ldm	sp, {r8, lr}
   2bbd0:	cmp	r6, #2
   2bbd4:	bne	2bbe8 <__flatcc_fb_clear_parser@@Base+0x23f0>
   2bbd8:	mvn	r6, #3
   2bbdc:	cmp	sl, #45	; 0x2d
   2bbe0:	mvneq	r6, #2
   2bbe4:	b	2bbb8 <__flatcc_fb_clear_parser@@Base+0x23c0>
   2bbe8:	cmp	r3, r9
   2bbec:	beq	2bc48 <__flatcc_fb_clear_parser@@Base+0x2450>
   2bbf0:	ldrb	r1, [r4, r6]
   2bbf4:	cmp	r7, #0
   2bbf8:	beq	2bc30 <__flatcc_fb_clear_parser@@Base+0x2438>
   2bbfc:	sub	r2, r1, #48	; 0x30
   2bc00:	uxtb	r2, r2
   2bc04:	cmp	r2, #9
   2bc08:	bls	2bc20 <__flatcc_fb_clear_parser@@Base+0x2428>
   2bc0c:	orr	r1, r1, #32
   2bc10:	sub	r2, r1, #97	; 0x61
   2bc14:	uxtb	r2, r2
   2bc18:	cmp	r2, #5
   2bc1c:	bhi	2bc30 <__flatcc_fb_clear_parser@@Base+0x2438>
   2bc20:	mvn	r6, #0
   2bc24:	cmp	sl, #45	; 0x2d
   2bc28:	mvneq	r6, #1
   2bc2c:	b	2bbb8 <__flatcc_fb_clear_parser@@Base+0x23c0>
   2bc30:	mvn	r6, #2
   2bc34:	cmp	r1, #46	; 0x2e
   2bc38:	beq	2bbb8 <__flatcc_fb_clear_parser@@Base+0x23c0>
   2bc3c:	cmp	r1, #80	; 0x50
   2bc40:	cmpne	r1, #112	; 0x70
   2bc44:	beq	2bbb8 <__flatcc_fb_clear_parser@@Base+0x23c0>
   2bc48:	stm	lr, {r0, r5}
   2bc4c:	mov	r6, r8
   2bc50:	b	2bbb8 <__flatcc_fb_clear_parser@@Base+0x23c0>
   2bc54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bc58:	add	fp, sp, #28
   2bc5c:	sub	sp, sp, #4
   2bc60:	mov	ip, sp
   2bc64:	cmp	r3, #0
   2bc68:	movne	ip, r3
   2bc6c:	cmp	r1, #0
   2bc70:	beq	2bce0 <__flatcc_fb_clear_parser@@Base+0x24e8>
   2bc74:	ldrb	r9, [r0]
   2bc78:	sub	r3, r9, #45	; 0x2d
   2bc7c:	clz	r3, r3
   2bc80:	lsr	r8, r3, #5
   2bc84:	add	lr, r0, r8
   2bc88:	cmp	r8, r1
   2bc8c:	bne	2bce8 <__flatcc_fb_clear_parser@@Base+0x24f0>
   2bc90:	mov	r6, #0
   2bc94:	mov	r3, #0
   2bc98:	mov	r1, lr
   2bc9c:	mov	r7, #0
   2bca0:	cmp	r1, r0
   2bca4:	beq	2bd68 <__flatcc_fb_clear_parser@@Base+0x2570>
   2bca8:	mvn	r0, #2
   2bcac:	cmp	r1, lr
   2bcb0:	beq	2bd9c <__flatcc_fb_clear_parser@@Base+0x25a4>
   2bcb4:	cmp	r7, #0
   2bcb8:	beq	2bd90 <__flatcc_fb_clear_parser@@Base+0x2598>
   2bcbc:	ldrb	r1, [r1]
   2bcc0:	cmp	r1, #79	; 0x4f
   2bcc4:	ble	2bd80 <__flatcc_fb_clear_parser@@Base+0x2588>
   2bcc8:	cmp	r1, #80	; 0x50
   2bccc:	beq	2bd9c <__flatcc_fb_clear_parser@@Base+0x25a4>
   2bcd0:	cmp	r1, #101	; 0x65
   2bcd4:	cmpne	r1, #112	; 0x70
   2bcd8:	beq	2bd9c <__flatcc_fb_clear_parser@@Base+0x25a4>
   2bcdc:	b	2bd90 <__flatcc_fb_clear_parser@@Base+0x2598>
   2bce0:	mvn	r0, #4
   2bce4:	b	2bd9c <__flatcc_fb_clear_parser@@Base+0x25a4>
   2bce8:	sub	r7, r1, r8
   2bcec:	mov	r6, #0
   2bcf0:	mov	sl, #10
   2bcf4:	mov	r1, lr
   2bcf8:	mov	r3, #0
   2bcfc:	ldrb	r4, [r1]
   2bd00:	sub	r5, r4, #48	; 0x30
   2bd04:	uxtb	r5, r5
   2bd08:	cmp	r5, #9
   2bd0c:	bhi	2bd5c <__flatcc_fb_clear_parser@@Base+0x2564>
   2bd10:	add	r5, r3, r3, lsl #2
   2bd14:	lsl	r5, r5, #1
   2bd18:	umlal	r4, r5, r6, sl
   2bd1c:	subs	r4, r4, #48	; 0x30
   2bd20:	sbc	r5, r5, #0
   2bd24:	subs	r6, r4, r6
   2bd28:	sbcs	r3, r5, r3
   2bd2c:	bcc	2bd70 <__flatcc_fb_clear_parser@@Base+0x2578>
   2bd30:	subs	r7, r7, #1
   2bd34:	add	r1, r1, #1
   2bd38:	mov	r6, r4
   2bd3c:	mov	r3, r5
   2bd40:	bne	2bcfc <__flatcc_fb_clear_parser@@Base+0x2504>
   2bd44:	mov	r7, #0
   2bd48:	mov	r6, r4
   2bd4c:	mov	r3, r5
   2bd50:	cmp	r1, r0
   2bd54:	bne	2bca8 <__flatcc_fb_clear_parser@@Base+0x24b0>
   2bd58:	b	2bd68 <__flatcc_fb_clear_parser@@Base+0x2570>
   2bd5c:	mov	r7, #1
   2bd60:	cmp	r1, r0
   2bd64:	bne	2bca8 <__flatcc_fb_clear_parser@@Base+0x24b0>
   2bd68:	mvn	r0, #3
   2bd6c:	b	2bd9c <__flatcc_fb_clear_parser@@Base+0x25a4>
   2bd70:	mvn	r0, #0
   2bd74:	cmp	r9, #45	; 0x2d
   2bd78:	mvneq	r0, #1
   2bd7c:	b	2bd9c <__flatcc_fb_clear_parser@@Base+0x25a4>
   2bd80:	cmp	r1, #46	; 0x2e
   2bd84:	beq	2bd9c <__flatcc_fb_clear_parser@@Base+0x25a4>
   2bd88:	cmp	r1, #69	; 0x45
   2bd8c:	beq	2bd9c <__flatcc_fb_clear_parser@@Base+0x25a4>
   2bd90:	str	r6, [r2]
   2bd94:	str	r3, [r2, #4]
   2bd98:	mov	r0, r8
   2bd9c:	str	r0, [ip]
   2bda0:	sub	sp, fp, #28
   2bda4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bda8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2bdac:	add	fp, sp, #24
   2bdb0:	mov	r6, r1
   2bdb4:	mov	r4, r0
   2bdb8:	ldr	r8, [r0, #40]	; 0x28
   2bdbc:	mov	r7, #1
   2bdc0:	strh	r7, [r1, #8]
   2bdc4:	mov	r0, r4
   2bdc8:	mov	r1, #91	; 0x5b
   2bdcc:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2bdd0:	sub	r7, r7, #1
   2bdd4:	cmp	r0, #0
   2bdd8:	bne	2bdc4 <__flatcc_fb_clear_parser@@Base+0x25cc>
   2bddc:	rsb	r0, r7, #0
   2bde0:	cmp	r0, #2
   2bde4:	bcc	2bdfc <__flatcc_fb_clear_parser@@Base+0x2604>
   2bde8:	movw	r2, #57755	; 0xe19b
   2bdec:	movt	r2, #4
   2bdf0:	mov	r0, r4
   2bdf4:	mov	r1, r8
   2bdf8:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2bdfc:	ldr	r1, [r4, #40]	; 0x28
   2be00:	ldr	r0, [r1, #16]
   2be04:	movw	r2, #999	; 0x3e7
   2be08:	add	r2, r0, r2
   2be0c:	cmp	r2, #27
   2be10:	bhi	2bef0 <__flatcc_fb_clear_parser@@Base+0x26f8>
   2be14:	mov	r3, #1
   2be18:	movw	r5, #55291	; 0xd7fb
   2be1c:	movt	r5, #2430	; 0x97e
   2be20:	tst	r5, r3, lsl r2
   2be24:	beq	2bed0 <__flatcc_fb_clear_parser@@Base+0x26d8>
   2be28:	mov	r0, #7
   2be2c:	cmp	r7, #0
   2be30:	movweq	r0, #8
   2be34:	ldr	r1, [r4, #40]	; 0x28
   2be38:	strh	r0, [r6, #8]
   2be3c:	str	r1, [r6]
   2be40:	mov	r0, r4
   2be44:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2be48:	mov	r0, r4
   2be4c:	mov	r1, #93	; 0x5d
   2be50:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2be54:	cmp	r0, #0
   2be58:	beq	2be6c <__flatcc_fb_clear_parser@@Base+0x2674>
   2be5c:	add	r7, r7, #1
   2be60:	cmp	r7, #1
   2be64:	bne	2be48 <__flatcc_fb_clear_parser@@Base+0x2650>
   2be68:	b	2be74 <__flatcc_fb_clear_parser@@Base+0x267c>
   2be6c:	cmp	r7, #0
   2be70:	beq	2be8c <__flatcc_fb_clear_parser@@Base+0x2694>
   2be74:	movw	r2, #57846	; 0xe1f6
   2be78:	movt	r2, #4
   2be7c:	mov	r0, r4
   2be80:	mov	r1, #0
   2be84:	mov	r3, r8
   2be88:	bl	29934 <__flatcc_fb_clear_parser@@Base+0x13c>
   2be8c:	mov	r0, r4
   2be90:	mov	r1, #93	; 0x5d
   2be94:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2be98:	cmp	r0, #0
   2be9c:	beq	2becc <__flatcc_fb_clear_parser@@Base+0x26d4>
   2bea0:	mov	r1, r0
   2bea4:	movw	r2, #57879	; 0xe217
   2bea8:	movt	r2, #4
   2beac:	mov	r0, r4
   2beb0:	mov	r3, r8
   2beb4:	bl	29934 <__flatcc_fb_clear_parser@@Base+0x13c>
   2beb8:	mov	r0, r4
   2bebc:	mov	r1, #93	; 0x5d
   2bec0:	bl	2a728 <__flatcc_fb_clear_parser@@Base+0xf30>
   2bec4:	cmp	r0, #0
   2bec8:	bne	2beb8 <__flatcc_fb_clear_parser@@Base+0x26c0>
   2becc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bed0:	cmp	r2, #25
   2bed4:	bne	2bef0 <__flatcc_fb_clear_parser@@Base+0x26f8>
   2bed8:	str	r1, [r6]
   2bedc:	mov	r0, #9
   2bee0:	cmp	r7, #0
   2bee4:	movweq	r0, #10
   2bee8:	strh	r0, [r6, #8]
   2beec:	b	2be40 <__flatcc_fb_clear_parser@@Base+0x2648>
   2bef0:	cmp	r0, #9
   2bef4:	beq	2bf0c <__flatcc_fb_clear_parser@@Base+0x2714>
   2bef8:	cmp	r0, #93	; 0x5d
   2befc:	bne	2bf2c <__flatcc_fb_clear_parser@@Base+0x2734>
   2bf00:	movw	r2, #57795	; 0xe1c3
   2bf04:	movt	r2, #4
   2bf08:	b	2bf34 <__flatcc_fb_clear_parser@@Base+0x273c>
   2bf0c:	mov	r0, r4
   2bf10:	mov	r1, r6
   2bf14:	bl	2b2e4 <__flatcc_fb_clear_parser@@Base+0x1aec>
   2bf18:	mov	r0, #11
   2bf1c:	cmp	r7, #0
   2bf20:	movweq	r0, #12
   2bf24:	strh	r0, [r6, #8]
   2bf28:	b	2be48 <__flatcc_fb_clear_parser@@Base+0x2650>
   2bf2c:	movw	r2, #57823	; 0xe1df
   2bf30:	movt	r2, #4
   2bf34:	mov	r0, r4
   2bf38:	mov	r1, #0
   2bf3c:	bl	2992c <__flatcc_fb_clear_parser@@Base+0x134>
   2bf40:	b	2be48 <__flatcc_fb_clear_parser@@Base+0x2650>
   2bf44:	push	{r4, r5, fp, lr}
   2bf48:	add	fp, sp, #8
   2bf4c:	mov	r4, r0
   2bf50:	ldr	r5, [r0, #40]	; 0x28
   2bf54:	mov	r0, r5
   2bf58:	bl	2a3f4 <__flatcc_fb_clear_parser@@Base+0xbfc>
   2bf5c:	cmp	r0, #0
   2bf60:	bne	2bf98 <__flatcc_fb_clear_parser@@Base+0x27a0>
   2bf64:	ldr	r0, [r5, #16]
   2bf68:	cmp	r0, #125	; 0x7d
   2bf6c:	beq	2bf90 <__flatcc_fb_clear_parser@@Base+0x2798>
   2bf70:	cmp	r0, #59	; 0x3b
   2bf74:	beq	2bf88 <__flatcc_fb_clear_parser@@Base+0x2790>
   2bf78:	mov	r0, r4
   2bf7c:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2bf80:	ldr	r5, [r4, #40]	; 0x28
   2bf84:	b	2bf54 <__flatcc_fb_clear_parser@@Base+0x275c>
   2bf88:	mov	r0, r4
   2bf8c:	bl	29708 <__flatcc_fb_parse@@Base+0x1040>
   2bf90:	mov	r0, #0
   2bf94:	str	r0, [r4, #36]	; 0x24
   2bf98:	pop	{r4, r5, fp, pc}

0002bf9c <__flatcc_fb_build_schema@@Base>:
   2bf9c:	push	{r4, r5, r6, r7, fp, lr}
   2bfa0:	add	fp, sp, #16
   2bfa4:	mov	r4, r0
   2bfa8:	add	r0, r0, #524	; 0x20c
   2bfac:	add	r5, r4, #352	; 0x160
   2bfb0:	mov	r1, r5
   2bfb4:	bl	2c360 <__flatcc_fb_build_schema@@Base+0x3c4>
   2bfb8:	cmp	r0, #0
   2bfbc:	beq	2c340 <__flatcc_fb_build_schema@@Base+0x3a4>
   2bfc0:	ldr	r6, [r4, #392]	; 0x188
   2bfc4:	cmp	r6, #0
   2bfc8:	beq	2c034 <__flatcc_fb_build_schema@@Base+0x98>
   2bfcc:	movw	r7, #58832	; 0xe5d0
   2bfd0:	movt	r7, #4
   2bfd4:	b	2bfe4 <__flatcc_fb_build_schema@@Base+0x48>
   2bfd8:	ldr	r6, [r6]
   2bfdc:	cmp	r6, #0
   2bfe0:	beq	2c034 <__flatcc_fb_build_schema@@Base+0x98>
   2bfe4:	ldrh	r0, [r6, #8]
   2bfe8:	cmp	r0, #4
   2bfec:	bhi	2bfd8 <__flatcc_fb_build_schema@@Base+0x3c>
   2bff0:	mov	r0, r6
   2bff4:	bl	2c378 <__flatcc_fb_build_schema@@Base+0x3dc>
   2bff8:	str	r5, [r6, #16]
   2bffc:	ldr	r0, [r6, #12]
   2c000:	cmp	r0, #0
   2c004:	beq	2bfd8 <__flatcc_fb_build_schema@@Base+0x3c>
   2c008:	add	r0, r0, #4
   2c00c:	mov	r1, r6
   2c010:	bl	2c3f8 <__flatcc_fb_build_schema@@Base+0x45c>
   2c014:	cmp	r0, #0
   2c018:	beq	2bfd8 <__flatcc_fb_build_schema@@Base+0x3c>
   2c01c:	mov	r3, r0
   2c020:	mov	r0, r4
   2c024:	mov	r1, r6
   2c028:	mov	r2, r7
   2c02c:	bl	2c400 <__flatcc_fb_build_schema@@Base+0x464>
   2c030:	b	2bfd8 <__flatcc_fb_build_schema@@Base+0x3c>
   2c034:	ldr	r5, [r4, #356]	; 0x164
   2c038:	cmp	r5, #0
   2c03c:	beq	2c06c <__flatcc_fb_build_schema@@Base+0xd0>
   2c040:	ldr	r0, [r4, #412]	; 0x19c
   2c044:	add	r0, r0, #16
   2c048:	mov	r1, r5
   2c04c:	bl	2c40c <__flatcc_fb_build_schema@@Base+0x470>
   2c050:	cmp	r0, #0
   2c054:	movne	r0, r4
   2c058:	movne	r1, r5
   2c05c:	blne	2c414 <__flatcc_fb_build_schema@@Base+0x478>
   2c060:	ldr	r5, [r5]
   2c064:	cmp	r5, #0
   2c068:	bne	2c040 <__flatcc_fb_build_schema@@Base+0xa4>
   2c06c:	mov	r0, r4
   2c070:	bl	2c458 <__flatcc_fb_build_schema@@Base+0x4bc>
   2c074:	ldr	r0, [r4, #184]	; 0xb8
   2c078:	cmp	r0, #0
   2c07c:	bne	2c0c4 <__flatcc_fb_build_schema@@Base+0x128>
   2c080:	ldr	r5, [r4, #392]	; 0x188
   2c084:	cmp	r5, #0
   2c088:	beq	2c22c <__flatcc_fb_build_schema@@Base+0x290>
   2c08c:	mov	r6, #1
   2c090:	b	2c0a0 <__flatcc_fb_build_schema@@Base+0x104>
   2c094:	ldr	r5, [r5]
   2c098:	cmp	r5, #0
   2c09c:	beq	2c0c4 <__flatcc_fb_build_schema@@Base+0x128>
   2c0a0:	ldrh	r0, [r5, #8]
   2c0a4:	cmp	r0, #3
   2c0a8:	bne	2c094 <__flatcc_fb_build_schema@@Base+0xf8>
   2c0ac:	mov	r0, r4
   2c0b0:	mov	r1, r5
   2c0b4:	bl	2c4c8 <__flatcc_fb_build_schema@@Base+0x52c>
   2c0b8:	cmp	r0, #0
   2c0bc:	strhne	r6, [r5, #48]	; 0x30
   2c0c0:	b	2c094 <__flatcc_fb_build_schema@@Base+0xf8>
   2c0c4:	ldr	r5, [r4, #392]	; 0x188
   2c0c8:	cmp	r5, #0
   2c0cc:	beq	2c22c <__flatcc_fb_build_schema@@Base+0x290>
   2c0d0:	mov	r6, #1
   2c0d4:	b	2c0f8 <__flatcc_fb_build_schema@@Base+0x15c>
   2c0d8:	mov	r0, r4
   2c0dc:	mov	r1, r5
   2c0e0:	bl	2ce7c <__flatcc_fb_build_schema@@Base+0xee0>
   2c0e4:	cmp	r0, #0
   2c0e8:	strhne	r6, [r5, #48]	; 0x30
   2c0ec:	ldr	r5, [r5]
   2c0f0:	cmp	r5, #0
   2c0f4:	beq	2c168 <__flatcc_fb_build_schema@@Base+0x1cc>
   2c0f8:	ldrh	r0, [r5, #8]
   2c0fc:	cmp	r0, #4
   2c100:	bhi	2c14c <__flatcc_fb_build_schema@@Base+0x1b0>
   2c104:	add	r1, pc, #0
   2c108:	ldr	pc, [r1, r0, lsl #2]
   2c10c:	andeq	ip, r2, ip, ror #1
   2c110:	andeq	ip, r2, r0, lsr #2
   2c114:	andeq	ip, r2, ip, ror #1
   2c118:	andeq	ip, r2, r0, lsr r1
   2c11c:	ldrdeq	ip, [r2], -r8
   2c120:	mov	r0, r4
   2c124:	mov	r1, r5
   2c128:	bl	2cbcc <__flatcc_fb_build_schema@@Base+0xc30>
   2c12c:	b	2c0e4 <__flatcc_fb_build_schema@@Base+0x148>
   2c130:	ldr	r0, [r4, #184]	; 0xb8
   2c134:	cmp	r0, #0
   2c138:	beq	2c0ec <__flatcc_fb_build_schema@@Base+0x150>
   2c13c:	mov	r0, r4
   2c140:	mov	r1, r5
   2c144:	bl	2c4c8 <__flatcc_fb_build_schema@@Base+0x52c>
   2c148:	b	2c0e4 <__flatcc_fb_build_schema@@Base+0x148>
   2c14c:	movw	r2, #58886	; 0xe606
   2c150:	movt	r2, #4
   2c154:	mov	r0, r4
   2c158:	mov	r1, r5
   2c15c:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2c160:	mvn	r0, #0
   2c164:	pop	{r4, r5, r6, r7, fp, pc}
   2c168:	ldr	r5, [r4, #392]	; 0x188
   2c16c:	cmp	r5, #0
   2c170:	beq	2c22c <__flatcc_fb_build_schema@@Base+0x290>
   2c174:	mov	r6, #1
   2c178:	b	2c188 <__flatcc_fb_build_schema@@Base+0x1ec>
   2c17c:	ldr	r5, [r5]
   2c180:	cmp	r5, #0
   2c184:	beq	2c1b8 <__flatcc_fb_build_schema@@Base+0x21c>
   2c188:	ldrh	r0, [r5, #8]
   2c18c:	cmp	r0, #1
   2c190:	bne	2c17c <__flatcc_fb_build_schema@@Base+0x1e0>
   2c194:	ldrh	r0, [r5, #48]	; 0x30
   2c198:	cmp	r0, #1
   2c19c:	beq	2c17c <__flatcc_fb_build_schema@@Base+0x1e0>
   2c1a0:	mov	r0, r4
   2c1a4:	mov	r1, r5
   2c1a8:	bl	2ce88 <__flatcc_fb_build_schema@@Base+0xeec>
   2c1ac:	cmp	r0, #0
   2c1b0:	strhne	r6, [r5, #48]	; 0x30
   2c1b4:	b	2c17c <__flatcc_fb_build_schema@@Base+0x1e0>
   2c1b8:	ldr	r5, [r4, #392]	; 0x188
   2c1bc:	cmp	r5, #0
   2c1c0:	beq	2c22c <__flatcc_fb_build_schema@@Base+0x290>
   2c1c4:	mov	r6, #1
   2c1c8:	b	2c1e0 <__flatcc_fb_build_schema@@Base+0x244>
   2c1cc:	cmp	r0, #0
   2c1d0:	strhne	r6, [r5, #48]	; 0x30
   2c1d4:	ldr	r5, [r5]
   2c1d8:	cmp	r5, #0
   2c1dc:	beq	2c22c <__flatcc_fb_build_schema@@Base+0x290>
   2c1e0:	ldrh	r0, [r5, #8]
   2c1e4:	cmp	r0, #2
   2c1e8:	beq	2c210 <__flatcc_fb_build_schema@@Base+0x274>
   2c1ec:	cmp	r0, #0
   2c1f0:	bne	2c1d4 <__flatcc_fb_build_schema@@Base+0x238>
   2c1f4:	ldrh	r0, [r5, #48]	; 0x30
   2c1f8:	cmp	r0, #1
   2c1fc:	beq	2c1d4 <__flatcc_fb_build_schema@@Base+0x238>
   2c200:	mov	r0, r4
   2c204:	mov	r1, r5
   2c208:	bl	2d1e4 <__flatcc_fb_build_schema@@Base+0x1248>
   2c20c:	b	2c1cc <__flatcc_fb_build_schema@@Base+0x230>
   2c210:	ldrh	r0, [r5, #48]	; 0x30
   2c214:	cmp	r0, #1
   2c218:	beq	2c1d4 <__flatcc_fb_build_schema@@Base+0x238>
   2c21c:	mov	r0, r4
   2c220:	mov	r1, r5
   2c224:	bl	2def4 <__flatcc_fb_build_schema@@Base+0x1f58>
   2c228:	b	2c1cc <__flatcc_fb_build_schema@@Base+0x230>
   2c22c:	add	r0, r4, #396	; 0x18c
   2c230:	bl	2e148 <__flatcc_fb_build_schema@@Base+0x21ac>
   2c234:	ldr	r5, [r4, #392]	; 0x188
   2c238:	cmp	r5, #0
   2c23c:	bne	2c25c <__flatcc_fb_build_schema@@Base+0x2c0>
   2c240:	b	2c284 <__flatcc_fb_build_schema@@Base+0x2e8>
   2c244:	mov	r0, r4
   2c248:	bl	2e1b8 <__flatcc_fb_build_schema@@Base+0x221c>
   2c24c:	str	r0, [r5, #24]
   2c250:	ldr	r5, [r5]
   2c254:	cmp	r5, #0
   2c258:	beq	2c284 <__flatcc_fb_build_schema@@Base+0x2e8>
   2c25c:	ldrh	r0, [r5, #8]
   2c260:	cmp	r0, #0
   2c264:	bne	2c250 <__flatcc_fb_build_schema@@Base+0x2b4>
   2c268:	ldr	r1, [r5, #20]
   2c26c:	ldrb	r0, [r5, #92]	; 0x5c
   2c270:	tst	r0, #8
   2c274:	beq	2c244 <__flatcc_fb_build_schema@@Base+0x2a8>
   2c278:	mov	r0, r1
   2c27c:	bl	2e180 <__flatcc_fb_build_schema@@Base+0x21e4>
   2c280:	b	2c24c <__flatcc_fb_build_schema@@Base+0x2b0>
   2c284:	ldr	r2, [r4, #400]	; 0x190
   2c288:	cmp	r2, #0
   2c28c:	beq	2c2d0 <__flatcc_fb_build_schema@@Base+0x334>
   2c290:	ldr	r1, [r4, #408]	; 0x198
   2c294:	mov	r0, r4
   2c298:	bl	2e374 <__flatcc_fb_build_schema@@Base+0x23d8>
   2c29c:	str	r0, [r4, #404]	; 0x194
   2c2a0:	cmp	r0, #0
   2c2a4:	beq	2c2f0 <__flatcc_fb_build_schema@@Base+0x354>
   2c2a8:	ldrh	r1, [r0, #8]
   2c2ac:	ldr	r2, [r4, #176]	; 0xb0
   2c2b0:	cmp	r2, #0
   2c2b4:	beq	2c300 <__flatcc_fb_build_schema@@Base+0x364>
   2c2b8:	cmp	r1, #2
   2c2bc:	bcc	2c320 <__flatcc_fb_build_schema@@Base+0x384>
   2c2c0:	ldr	r1, [r4, #400]	; 0x190
   2c2c4:	movw	r2, #58979	; 0xe663
   2c2c8:	movt	r2, #4
   2c2cc:	b	2c314 <__flatcc_fb_build_schema@@Base+0x378>
   2c2d0:	ldr	r0, [r4, #208]	; 0xd0
   2c2d4:	cmp	r0, #0
   2c2d8:	beq	2c32c <__flatcc_fb_build_schema@@Base+0x390>
   2c2dc:	movw	r1, #58936	; 0xe638
   2c2e0:	movt	r1, #4
   2c2e4:	mov	r0, r4
   2c2e8:	bl	2e368 <__flatcc_fb_build_schema@@Base+0x23cc>
   2c2ec:	b	2c32c <__flatcc_fb_build_schema@@Base+0x390>
   2c2f0:	ldr	r1, [r4, #400]	; 0x190
   2c2f4:	movw	r2, #58959	; 0xe64f
   2c2f8:	movt	r2, #4
   2c2fc:	b	2c314 <__flatcc_fb_build_schema@@Base+0x378>
   2c300:	cmp	r1, #0
   2c304:	beq	2c320 <__flatcc_fb_build_schema@@Base+0x384>
   2c308:	ldr	r1, [r4, #400]	; 0x190
   2c30c:	movw	r2, #59017	; 0xe689
   2c310:	movt	r2, #4
   2c314:	mov	r0, r4
   2c318:	bl	2e37c <__flatcc_fb_build_schema@@Base+0x23e0>
   2c31c:	b	2c324 <__flatcc_fb_build_schema@@Base+0x388>
   2c320:	str	r0, [r4, #404]	; 0x194
   2c324:	mov	r0, #0
   2c328:	str	r0, [r4, #400]	; 0x190
   2c32c:	ldr	r0, [r4, #108]	; 0x6c
   2c330:	clz	r1, r0
   2c334:	lsr	r1, r1, #5
   2c338:	str	r1, [r4, #120]	; 0x78
   2c33c:	pop	{r4, r5, r6, r7, fp, pc}
   2c340:	movw	r0, #58661	; 0xe525
   2c344:	movt	r0, #4
   2c348:	movw	r1, #58715	; 0xe55b
   2c34c:	movt	r1, #4
   2c350:	movw	r3, #58788	; 0xe5a4
   2c354:	movt	r3, #4
   2c358:	movw	r2, #1558	; 0x616
   2c35c:	bl	14ab4 <__assert_fail@plt>
   2c360:	push	{fp, lr}
   2c364:	mov	fp, sp
   2c368:	bl	26574 <ptr_set_find_item@@Base>
   2c36c:	cmp	r0, #0
   2c370:	movwne	r0, #1
   2c374:	pop	{fp, pc}
   2c378:	push	{r4, r5, r6, r7, fp, lr}
   2c37c:	add	fp, sp, #16
   2c380:	mov	r4, r0
   2c384:	ldr	r1, [r0, #12]
   2c388:	movw	r6, #40389	; 0x9dc5
   2c38c:	movt	r6, #33052	; 0x811c
   2c390:	cmp	r1, #0
   2c394:	mov	r0, r6
   2c398:	beq	2c3dc <__flatcc_fb_build_schema@@Base+0x440>
   2c39c:	ldr	r7, [r1]
   2c3a0:	cmp	r7, #0
   2c3a4:	mov	r0, r6
   2c3a8:	beq	2c3dc <__flatcc_fb_build_schema@@Base+0x440>
   2c3ac:	movw	r5, #37027	; 0x90a3
   2c3b0:	movt	r5, #4
   2c3b4:	mov	r0, r6
   2c3b8:	ldr	r2, [r7, #4]
   2c3bc:	ldm	r2, {r1, r2}
   2c3c0:	bl	2e384 <__flatcc_fb_build_schema@@Base+0x23e8>
   2c3c4:	mov	r1, r5
   2c3c8:	mov	r2, #1
   2c3cc:	bl	2e384 <__flatcc_fb_build_schema@@Base+0x23e8>
   2c3d0:	ldr	r7, [r7]
   2c3d4:	cmp	r7, #0
   2c3d8:	bne	2c3b8 <__flatcc_fb_build_schema@@Base+0x41c>
   2c3dc:	ldr	r2, [r4, #4]
   2c3e0:	ldm	r2, {r1, r2}
   2c3e4:	bl	2e384 <__flatcc_fb_build_schema@@Base+0x23e8>
   2c3e8:	cmp	r0, #0
   2c3ec:	movne	r6, r0
   2c3f0:	str	r6, [r4, #88]	; 0x58
   2c3f4:	pop	{r4, r5, r6, r7, fp, pc}
   2c3f8:	mov	r2, #1
   2c3fc:	b	26a7c <fb_symbol_table_insert_item@@Base>
   2c400:	ldr	r3, [r3, #4]
   2c404:	ldr	r1, [r1, #4]
   2c408:	b	2e3ac <__flatcc_fb_build_schema@@Base+0x2410>
   2c40c:	mov	r2, #1
   2c410:	b	33b70 <fb_name_table_insert_item@@Base>
   2c414:	cmp	r1, #0
   2c418:	beq	2c44c <__flatcc_fb_build_schema@@Base+0x4b0>
   2c41c:	push	{fp, lr}
   2c420:	mov	fp, sp
   2c424:	sub	sp, sp, #8
   2c428:	ldrd	r2, [r1, #8]
   2c42c:	stm	sp, {r2, r3}
   2c430:	movw	r2, #58860	; 0xe5ec
   2c434:	movt	r2, #4
   2c438:	mov	r1, #0
   2c43c:	mov	r3, #0
   2c440:	bl	28188 <__flatcc_error_report@@Base>
   2c444:	mov	sp, fp
   2c448:	pop	{fp, pc}
   2c44c:	movw	r1, #58860	; 0xe5ec
   2c450:	movt	r1, #4
   2c454:	b	2e368 <__flatcc_fb_build_schema@@Base+0x23cc>
   2c458:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2c45c:	add	fp, sp, #24
   2c460:	mov	r4, r0
   2c464:	mov	r8, #0
   2c468:	movw	r9, #64508	; 0xfbfc
   2c46c:	movt	r9, #4
   2c470:	mov	r6, #2
   2c474:	mov	r7, #0
   2c478:	mov	r0, r4
   2c47c:	bl	2e3d0 <__flatcc_fb_build_schema@@Base+0x2434>
   2c480:	mov	r5, r0
   2c484:	str	r7, [r0, #24]
   2c488:	ldr	r0, [r9, r7, lsl #2]
   2c48c:	str	r0, [r5, #8]
   2c490:	bl	149dc <strlen@plt>
   2c494:	strh	r6, [r5, #16]
   2c498:	str	r0, [r5, #12]
   2c49c:	str	r8, [r5]
   2c4a0:	ldr	r0, [r4, #412]	; 0x19c
   2c4a4:	add	r0, r0, #16
   2c4a8:	mov	r1, r5
   2c4ac:	bl	2c40c <__flatcc_fb_build_schema@@Base+0x470>
   2c4b0:	cmp	r0, #0
   2c4b4:	strne	r7, [r0, #24]
   2c4b8:	add	r7, r7, #1
   2c4bc:	cmp	r7, #12
   2c4c0:	bne	2c478 <__flatcc_fb_build_schema@@Base+0x4dc>
   2c4c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c4c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c4cc:	add	fp, sp, #28
   2c4d0:	sub	sp, sp, #108	; 0x6c
   2c4d4:	mov	r8, r0
   2c4d8:	str	r1, [sp, #36]	; 0x24
   2c4dc:	ldrh	r4, [r1, #8]
   2c4e0:	cmp	r4, #4
   2c4e4:	bne	2c504 <__flatcc_fb_build_schema@@Base+0x568>
   2c4e8:	ldr	r0, [sp, #36]	; 0x24
   2c4ec:	ldrh	r0, [r0, #48]	; 0x30
   2c4f0:	cmp	r0, #0
   2c4f4:	beq	2c540 <__flatcc_fb_build_schema@@Base+0x5a4>
   2c4f8:	movw	r2, #59272	; 0xe788
   2c4fc:	movt	r2, #4
   2c500:	b	2cacc <__flatcc_fb_build_schema@@Base+0xb30>
   2c504:	cmp	r4, #3
   2c508:	bne	2cbac <__flatcc_fb_build_schema@@Base+0xc10>
   2c50c:	ldr	r0, [sp, #36]	; 0x24
   2c510:	ldrh	r0, [r0, #48]	; 0x30
   2c514:	cmp	r0, #8
   2c518:	beq	2c558 <__flatcc_fb_build_schema@@Base+0x5bc>
   2c51c:	cmp	r0, #0
   2c520:	bne	2cac4 <__flatcc_fb_build_schema@@Base+0xb28>
   2c524:	mov	r0, #1
   2c528:	ldr	r1, [sp, #36]	; 0x24
   2c52c:	strh	r0, [r1, #48]	; 0x30
   2c530:	movw	r2, #59201	; 0xe741
   2c534:	movt	r2, #4
   2c538:	mov	r0, r8
   2c53c:	b	2cad4 <__flatcc_fb_build_schema@@Base+0xb38>
   2c540:	mov	r0, #4
   2c544:	ldr	r2, [sp, #36]	; 0x24
   2c548:	str	r0, [r2, #40]	; 0x28
   2c54c:	mov	r1, #8
   2c550:	strh	r1, [r2, #48]	; 0x30
   2c554:	b	2c568 <__flatcc_fb_build_schema@@Base+0x5cc>
   2c558:	ldr	r5, [sp, #36]	; 0x24
   2c55c:	ldr	r0, [r5, #40]	; 0x28
   2c560:	bl	2e46c <__flatcc_fb_build_schema@@Base+0x24d0>
   2c564:	str	r0, [r5, #40]	; 0x28
   2c568:	bl	2e494 <__flatcc_fb_build_schema@@Base+0x24f8>
   2c56c:	mov	r2, #0
   2c570:	ldr	r5, [sp, #36]	; 0x24
   2c574:	mov	r1, #0
   2c578:	str	r1, [sp, #28]
   2c57c:	str	r0, [r5, #112]	; 0x70
   2c580:	str	r2, [r5, #116]	; 0x74
   2c584:	strh	r0, [r5, #104]	; 0x68
   2c588:	ldr	r1, [r5, #28]
   2c58c:	add	r3, sp, #60	; 0x3c
   2c590:	mov	r0, r8
   2c594:	mov	r2, #32
   2c598:	bl	2e4a4 <__flatcc_fb_build_schema@@Base+0x2508>
   2c59c:	strh	r0, [r5, #92]	; 0x5c
   2c5a0:	tst	r0, #32
   2c5a4:	beq	2c5c4 <__flatcc_fb_build_schema@@Base+0x628>
   2c5a8:	mov	r0, #0
   2c5ac:	str	r0, [sp, #44]	; 0x2c
   2c5b0:	str	r0, [sp, #40]	; 0x28
   2c5b4:	mov	r0, #5
   2c5b8:	strh	r0, [sp, #48]	; 0x30
   2c5bc:	mov	r0, #1
   2c5c0:	str	r0, [sp, #28]
   2c5c4:	ldr	r0, [sp, #36]	; 0x24
   2c5c8:	ldr	r2, [r0, #40]	; 0x28
   2c5cc:	cmp	r2, #5
   2c5d0:	bne	2c5e8 <__flatcc_fb_build_schema@@Base+0x64c>
   2c5d4:	mov	r0, #6
   2c5d8:	strh	r0, [sp, #48]	; 0x30
   2c5dc:	mov	r0, #0
   2c5e0:	strb	r0, [sp, #40]	; 0x28
   2c5e4:	b	2c628 <__flatcc_fb_build_schema@@Base+0x68c>
   2c5e8:	mov	r0, #0
   2c5ec:	str	r0, [sp, #44]	; 0x2c
   2c5f0:	str	r0, [sp, #40]	; 0x28
   2c5f4:	mov	r0, #4
   2c5f8:	strh	r0, [sp, #48]	; 0x30
   2c5fc:	add	r3, sp, #40	; 0x28
   2c600:	mov	r0, r8
   2c604:	ldr	r1, [sp, #36]	; 0x24
   2c608:	bl	2ec90 <__flatcc_fb_coerce_scalar_type@@Base>
   2c60c:	cmp	r0, #0
   2c610:	beq	2c628 <__flatcc_fb_build_schema@@Base+0x68c>
   2c614:	movw	r1, #59335	; 0xe7c7
   2c618:	movt	r1, #4
   2c61c:	mov	r0, r8
   2c620:	bl	2e368 <__flatcc_fb_build_schema@@Base+0x23cc>
   2c624:	b	2cad8 <__flatcc_fb_build_schema@@Base+0xb3c>
   2c628:	ldr	r0, [sp, #36]	; 0x24
   2c62c:	ldr	r6, [r0, #20]
   2c630:	cmp	r6, #0
   2c634:	beq	2cae8 <__flatcc_fb_build_schema@@Base+0xb4c>
   2c638:	ldr	r2, [sp, #40]	; 0x28
   2c63c:	ldr	r0, [sp, #44]	; 0x2c
   2c640:	mov	r1, r2
   2c644:	str	r2, [sp, #24]
   2c648:	lsr	r1, r2, #8
   2c64c:	orr	r1, r1, r0, lsl #24
   2c650:	str	r1, [sp, #20]
   2c654:	ldr	r1, [sp, #36]	; 0x24
   2c658:	add	r2, r1, #72	; 0x48
   2c65c:	str	r2, [sp, #8]
   2c660:	add	r2, r8, #68	; 0x44
   2c664:	str	r2, [sp, #32]
   2c668:	add	r5, r1, #56	; 0x38
   2c66c:	lsr	r0, r0, #8
   2c670:	str	r0, [sp, #16]
   2c674:	add	r7, sp, #40	; 0x28
   2c678:	mov	sl, #1
   2c67c:	str	r5, [sp, #4]
   2c680:	b	2c6b0 <__flatcc_fb_build_schema@@Base+0x714>
   2c684:	mov	r0, r8
   2c688:	mov	r1, r6
   2c68c:	movw	r2, #59397	; 0xe805
   2c690:	movt	r2, #4
   2c694:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2c698:	mov	r0, #1
   2c69c:	strh	r0, [r6, #24]
   2c6a0:	ldr	r6, [r6]
   2c6a4:	mov	sl, #0
   2c6a8:	cmp	r6, #0
   2c6ac:	beq	2cadc <__flatcc_fb_build_schema@@Base+0xb40>
   2c6b0:	mov	r0, r5
   2c6b4:	mov	r1, r6
   2c6b8:	bl	2c3f8 <__flatcc_fb_build_schema@@Base+0x45c>
   2c6bc:	cmp	r0, #0
   2c6c0:	beq	2c6f0 <__flatcc_fb_build_schema@@Base+0x754>
   2c6c4:	mov	r3, r0
   2c6c8:	ldr	r0, [r0, #4]
   2c6cc:	ldr	r1, [sp, #32]
   2c6d0:	cmp	r0, r1
   2c6d4:	beq	2c684 <__flatcc_fb_build_schema@@Base+0x6e8>
   2c6d8:	mov	r0, r8
   2c6dc:	mov	r1, r6
   2c6e0:	movw	r2, #59426	; 0xe822
   2c6e4:	movt	r2, #4
   2c6e8:	bl	2c400 <__flatcc_fb_build_schema@@Base+0x464>
   2c6ec:	b	2c698 <__flatcc_fb_build_schema@@Base+0x6fc>
   2c6f0:	ldrh	r0, [r6, #8]
   2c6f4:	cmp	r0, #5
   2c6f8:	bne	2caf0 <__flatcc_fb_build_schema@@Base+0xb54>
   2c6fc:	ldr	r0, [r6, #64]	; 0x40
   2c700:	cmp	r0, #0
   2c704:	bne	2cb8c <__flatcc_fb_build_schema@@Base+0xbf0>
   2c708:	add	r9, r6, #48	; 0x30
   2c70c:	cmp	r4, #4
   2c710:	bne	2c7a0 <__flatcc_fb_build_schema@@Base+0x804>
   2c714:	ldr	r0, [r6, #4]
   2c718:	ldr	r1, [sp, #32]
   2c71c:	cmp	r0, r1
   2c720:	beq	2c748 <__flatcc_fb_build_schema@@Base+0x7ac>
   2c724:	ldrh	r0, [r6, #24]
   2c728:	cmp	r0, #1
   2c72c:	beq	2c6a0 <__flatcc_fb_build_schema@@Base+0x704>
   2c730:	cmp	r0, #12
   2c734:	beq	2c754 <__flatcc_fb_build_schema@@Base+0x7b8>
   2c738:	cmp	r0, #10
   2c73c:	bne	2c804 <__flatcc_fb_build_schema@@Base+0x868>
   2c740:	mov	r0, #0
   2c744:	b	2c798 <__flatcc_fb_build_schema@@Base+0x7fc>
   2c748:	mov	r0, #0
   2c74c:	strh	r0, [r6, #24]
   2c750:	b	2c7a0 <__flatcc_fb_build_schema@@Base+0x804>
   2c754:	str	r9, [sp, #12]
   2c758:	ldr	r2, [r6, #16]
   2c75c:	ldr	r0, [sp, #36]	; 0x24
   2c760:	ldr	r1, [r0, #12]
   2c764:	mov	r0, r8
   2c768:	bl	2e374 <__flatcc_fb_build_schema@@Base+0x23d8>
   2c76c:	cmp	r0, #0
   2c770:	beq	2ca94 <__flatcc_fb_build_schema@@Base+0xaf8>
   2c774:	mov	r3, r0
   2c778:	ldrh	r0, [r0, #8]
   2c77c:	cmp	r0, #2
   2c780:	bcs	2cab0 <__flatcc_fb_build_schema@@Base+0xb14>
   2c784:	str	r3, [r6, #16]
   2c788:	mov	r0, #14
   2c78c:	strh	r0, [r6, #24]
   2c790:	mov	r0, #0
   2c794:	ldr	r9, [sp, #12]
   2c798:	str	r0, [r9, #40]	; 0x28
   2c79c:	str	r0, [r9, #44]	; 0x2c
   2c7a0:	ldrh	r0, [r6, #56]	; 0x38
   2c7a4:	cmp	sl, #0
   2c7a8:	cmpeq	r0, #0
   2c7ac:	bne	2c8a0 <__flatcc_fb_build_schema@@Base+0x904>
   2c7b0:	ldrh	r0, [sp, #48]	; 0x30
   2c7b4:	cmp	r0, #4
   2c7b8:	beq	2c844 <__flatcc_fb_build_schema@@Base+0x8a8>
   2c7bc:	cmp	r0, #6
   2c7c0:	beq	2c818 <__flatcc_fb_build_schema@@Base+0x87c>
   2c7c4:	cmp	r0, #5
   2c7c8:	bne	2c89c <__flatcc_fb_build_schema@@Base+0x900>
   2c7cc:	ldr	r0, [sp, #36]	; 0x24
   2c7d0:	ldr	r0, [r0, #40]	; 0x28
   2c7d4:	cmp	r0, #6
   2c7d8:	bne	2c884 <__flatcc_fb_build_schema@@Base+0x8e8>
   2c7dc:	ldr	r0, [sp, #40]	; 0x28
   2c7e0:	ldr	r1, [sp, #44]	; 0x2c
   2c7e4:	and	r0, r0, r1
   2c7e8:	cmn	r0, #1
   2c7ec:	bne	2c884 <__flatcc_fb_build_schema@@Base+0x8e8>
   2c7f0:	mov	r0, r8
   2c7f4:	mov	r1, r6
   2c7f8:	movw	r2, #59703	; 0xe937
   2c7fc:	movt	r2, #4
   2c800:	b	2c880 <__flatcc_fb_build_schema@@Base+0x8e4>
   2c804:	mov	r0, r8
   2c808:	mov	r1, r6
   2c80c:	movw	r2, #59516	; 0xe87c
   2c810:	movt	r2, #4
   2c814:	b	2c694 <__flatcc_fb_build_schema@@Base+0x6f8>
   2c818:	ldrb	r0, [sp, #40]	; 0x28
   2c81c:	cmp	r0, #1
   2c820:	bne	2c838 <__flatcc_fb_build_schema@@Base+0x89c>
   2c824:	mov	r0, r8
   2c828:	mov	r1, r6
   2c82c:	movw	r2, #59759	; 0xe96f
   2c830:	movt	r2, #4
   2c834:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2c838:	mov	r0, #1
   2c83c:	strb	r0, [sp, #40]	; 0x28
   2c840:	b	2c89c <__flatcc_fb_build_schema@@Base+0x900>
   2c844:	ldr	r0, [sp, #36]	; 0x24
   2c848:	ldr	r0, [r0, #40]	; 0x28
   2c84c:	cmp	r0, #6
   2c850:	bne	2c884 <__flatcc_fb_build_schema@@Base+0x8e8>
   2c854:	ldr	r0, [sp, #40]	; 0x28
   2c858:	ldr	r1, [sp, #44]	; 0x2c
   2c85c:	mvn	r2, #-2147483648	; 0x80000000
   2c860:	eor	r1, r1, r2
   2c864:	mvn	r0, r0
   2c868:	orrs	r0, r0, r1
   2c86c:	bne	2c884 <__flatcc_fb_build_schema@@Base+0x8e8>
   2c870:	mov	r0, r8
   2c874:	mov	r1, r6
   2c878:	movw	r2, #59732	; 0xe954
   2c87c:	movt	r2, #4
   2c880:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2c884:	ldr	r0, [sp, #40]	; 0x28
   2c888:	ldr	r1, [sp, #44]	; 0x2c
   2c88c:	adds	r0, r0, #1
   2c890:	str	r0, [sp, #40]	; 0x28
   2c894:	adc	r0, r1, #0
   2c898:	str	r0, [sp, #44]	; 0x2c
   2c89c:	ldrh	r0, [r6, #56]	; 0x38
   2c8a0:	ldr	r1, [sp, #28]
   2c8a4:	cmp	r1, #0
   2c8a8:	beq	2c93c <__flatcc_fb_build_schema@@Base+0x9a0>
   2c8ac:	cmp	r0, #0
   2c8b0:	beq	2c8c4 <__flatcc_fb_build_schema@@Base+0x928>
   2c8b4:	cmp	r0, #5
   2c8b8:	bne	2cb28 <__flatcc_fb_build_schema@@Base+0xb8c>
   2c8bc:	vld1.64	{d16-d17}, [r9]
   2c8c0:	vst1.64	{d16-d17}, [r7]
   2c8c4:	ldr	r5, [sp, #36]	; 0x24
   2c8c8:	ldr	r0, [r5, #40]	; 0x28
   2c8cc:	ldr	r7, [sp, #40]	; 0x28
   2c8d0:	ldr	r1, [sp, #44]	; 0x2c
   2c8d4:	str	r1, [sp, #12]
   2c8d8:	bl	2e494 <__flatcc_fb_build_schema@@Base+0x24f8>
   2c8dc:	subs	r0, r7, r0, lsl #3
   2c8e0:	ldr	r0, [sp, #12]
   2c8e4:	sbcs	r0, r0, #0
   2c8e8:	bcs	2cafc <__flatcc_fb_build_schema@@Base+0xb60>
   2c8ec:	mov	ip, #1
   2c8f0:	lsl	r0, ip, r7
   2c8f4:	subs	r1, r7, #32
   2c8f8:	movwpl	r0, #0
   2c8fc:	rsb	r2, r7, #32
   2c900:	lsr	r3, ip, r2
   2c904:	lslpl	r3, ip, r1
   2c908:	stm	r9, {r0, r3}
   2c90c:	mov	r0, #5
   2c910:	strh	r0, [r6, #56]	; 0x38
   2c914:	ldr	r2, [r5, #40]	; 0x28
   2c918:	mov	r0, r8
   2c91c:	mov	r1, r6
   2c920:	mov	r3, r9
   2c924:	bl	2ec90 <__flatcc_fb_coerce_scalar_type@@Base>
   2c928:	cmp	r0, #0
   2c92c:	bne	2cafc <__flatcc_fb_build_schema@@Base+0xb60>
   2c930:	cmp	sl, #0
   2c934:	bne	2ca20 <__flatcc_fb_build_schema@@Base+0xa84>
   2c938:	b	2c97c <__flatcc_fb_build_schema@@Base+0x9e0>
   2c93c:	cmp	r0, #0
   2c940:	beq	2c96c <__flatcc_fb_build_schema@@Base+0x9d0>
   2c944:	vld1.64	{d16-d17}, [r9]
   2c948:	vst1.64	{d16-d17}, [r7]
   2c94c:	ldr	r0, [sp, #36]	; 0x24
   2c950:	ldr	r2, [r0, #40]	; 0x28
   2c954:	mov	r0, r8
   2c958:	mov	r1, r6
   2c95c:	mov	r3, r7
   2c960:	bl	2ec90 <__flatcc_fb_coerce_scalar_type@@Base>
   2c964:	cmp	r0, #0
   2c968:	bne	2cad8 <__flatcc_fb_build_schema@@Base+0xb3c>
   2c96c:	vld1.64	{d16-d17}, [r7]
   2c970:	vst1.64	{d16-d17}, [r9]
   2c974:	cmp	sl, #0
   2c978:	bne	2ca20 <__flatcc_fb_build_schema@@Base+0xa84>
   2c97c:	ldr	r0, [r8, #180]	; 0xb4
   2c980:	cmp	r0, #0
   2c984:	beq	2ca20 <__flatcc_fb_build_schema@@Base+0xa84>
   2c988:	ldrh	r0, [sp, #48]	; 0x30
   2c98c:	cmp	r0, #4
   2c990:	beq	2c9d8 <__flatcc_fb_build_schema@@Base+0xa3c>
   2c994:	cmp	r0, #6
   2c998:	beq	2ca0c <__flatcc_fb_build_schema@@Base+0xa70>
   2c99c:	cmp	r0, #5
   2c9a0:	bne	2ca20 <__flatcc_fb_build_schema@@Base+0xa84>
   2c9a4:	ldr	r0, [sp, #16]
   2c9a8:	lsl	r0, r0, #8
   2c9ac:	ldr	r2, [sp, #20]
   2c9b0:	orr	r0, r0, r2, lsr #24
   2c9b4:	ldr	r1, [sp, #24]
   2c9b8:	uxtb	r1, r1
   2c9bc:	orr	r1, r1, r2, lsl #8
   2c9c0:	ldr	r2, [sp, #40]	; 0x28
   2c9c4:	ldr	r3, [sp, #44]	; 0x2c
   2c9c8:	subs	r1, r1, r2
   2c9cc:	sbcs	r0, r0, r3
   2c9d0:	bcc	2ca20 <__flatcc_fb_build_schema@@Base+0xa84>
   2c9d4:	b	2cb3c <__flatcc_fb_build_schema@@Base+0xba0>
   2c9d8:	ldr	r0, [sp, #16]
   2c9dc:	lsl	r0, r0, #8
   2c9e0:	ldr	r2, [sp, #20]
   2c9e4:	orr	r0, r0, r2, lsr #24
   2c9e8:	ldr	r1, [sp, #24]
   2c9ec:	uxtb	r1, r1
   2c9f0:	orr	r1, r1, r2, lsl #8
   2c9f4:	ldr	r2, [sp, #40]	; 0x28
   2c9f8:	ldr	r3, [sp, #44]	; 0x2c
   2c9fc:	subs	r1, r1, r2
   2ca00:	sbcs	r0, r0, r3
   2ca04:	blt	2ca20 <__flatcc_fb_build_schema@@Base+0xa84>
   2ca08:	b	2cb3c <__flatcc_fb_build_schema@@Base+0xba0>
   2ca0c:	ldr	r0, [sp, #24]
   2ca10:	uxtb	r0, r0
   2ca14:	ldrb	r1, [sp, #40]	; 0x28
   2ca18:	cmp	r1, r0
   2ca1c:	bls	2cb74 <__flatcc_fb_build_schema@@Base+0xbd8>
   2ca20:	ldr	r5, [sp, #40]	; 0x28
   2ca24:	ldr	r7, [sp, #44]	; 0x2c
   2ca28:	ldr	r0, [sp, #8]
   2ca2c:	mov	r1, r9
   2ca30:	bl	2e65c <__flatcc_fb_build_schema@@Base+0x26c0>
   2ca34:	cmp	r0, #0
   2ca38:	beq	2ca50 <__flatcc_fb_build_schema@@Base+0xab4>
   2ca3c:	cmp	r4, #4
   2ca40:	beq	2cb08 <__flatcc_fb_build_schema@@Base+0xb6c>
   2ca44:	ldrh	r0, [r6, #10]
   2ca48:	orr	r0, r0, #4
   2ca4c:	strh	r0, [r6, #10]
   2ca50:	lsr	r0, r5, #8
   2ca54:	orr	r0, r0, r7, lsl #24
   2ca58:	str	r0, [sp, #20]
   2ca5c:	lsr	r0, r7, #8
   2ca60:	str	r0, [sp, #16]
   2ca64:	ldr	r0, [r6, #64]	; 0x40
   2ca68:	cmp	r0, #0
   2ca6c:	str	r5, [sp, #24]
   2ca70:	beq	2ca88 <__flatcc_fb_build_schema@@Base+0xaec>
   2ca74:	mov	r0, r8
   2ca78:	mov	r1, r6
   2ca7c:	movw	r2, #60156	; 0xeafc
   2ca80:	movt	r2, #4
   2ca84:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2ca88:	ldr	r5, [sp, #4]
   2ca8c:	add	r7, sp, #40	; 0x28
   2ca90:	b	2c6a0 <__flatcc_fb_build_schema@@Base+0x704>
   2ca94:	ldr	r1, [r6, #16]
   2ca98:	mov	r0, r8
   2ca9c:	movw	r2, #59587	; 0xe8c3
   2caa0:	movt	r2, #4
   2caa4:	mov	r3, r6
   2caa8:	bl	28318 <error_ref_sym@@Base>
   2caac:	b	2c698 <__flatcc_fb_build_schema@@Base+0x6fc>
   2cab0:	mov	r0, r8
   2cab4:	mov	r1, r6
   2cab8:	movw	r2, #59633	; 0xe8f1
   2cabc:	movt	r2, #4
   2cac0:	b	2c6e8 <__flatcc_fb_build_schema@@Base+0x74c>
   2cac4:	movw	r2, #59223	; 0xe757
   2cac8:	movt	r2, #4
   2cacc:	mov	r0, r8
   2cad0:	ldr	r1, [sp, #36]	; 0x24
   2cad4:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2cad8:	mvn	sl, #0
   2cadc:	mov	r0, sl
   2cae0:	sub	sp, fp, #28
   2cae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cae8:	mov	sl, #0
   2caec:	b	2cadc <__flatcc_fb_build_schema@@Base+0xb40>
   2caf0:	movw	r2, #59453	; 0xe83d
   2caf4:	movt	r2, #4
   2caf8:	b	2cb30 <__flatcc_fb_build_schema@@Base+0xb94>
   2cafc:	movw	r2, #59863	; 0xe9d7
   2cb00:	movt	r2, #4
   2cb04:	b	2cb30 <__flatcc_fb_build_schema@@Base+0xb94>
   2cb08:	movw	r2, #60082	; 0xeab2
   2cb0c:	movt	r2, #4
   2cb10:	mov	r0, r8
   2cb14:	mov	r1, r6
   2cb18:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2cb1c:	mov	r0, #1
   2cb20:	strh	r0, [r6, #56]	; 0x38
   2cb24:	b	2cad8 <__flatcc_fb_build_schema@@Base+0xb3c>
   2cb28:	movw	r2, #59804	; 0xe99c
   2cb2c:	movt	r2, #4
   2cb30:	mov	r0, r8
   2cb34:	mov	r1, r6
   2cb38:	b	2cad4 <__flatcc_fb_build_schema@@Base+0xb38>
   2cb3c:	cmp	r4, #4
   2cb40:	bne	2cb68 <__flatcc_fb_build_schema@@Base+0xbcc>
   2cb44:	ldr	r0, [sp, #24]
   2cb48:	uxtb	r0, r0
   2cb4c:	ldr	r2, [sp, #20]
   2cb50:	orr	r0, r0, r2, lsl #8
   2cb54:	ldr	r1, [sp, #16]
   2cb58:	lsl	r1, r1, #8
   2cb5c:	orr	r1, r1, r2, lsr #24
   2cb60:	orrs	r0, r0, r1
   2cb64:	beq	2cb80 <__flatcc_fb_build_schema@@Base+0xbe4>
   2cb68:	movw	r2, #59979	; 0xea4b
   2cb6c:	movt	r2, #4
   2cb70:	b	2cb10 <__flatcc_fb_build_schema@@Base+0xb74>
   2cb74:	movw	r2, #60018	; 0xea72
   2cb78:	movt	r2, #4
   2cb7c:	b	2cb10 <__flatcc_fb_build_schema@@Base+0xb74>
   2cb80:	movw	r2, #59914	; 0xea0a
   2cb84:	movt	r2, #4
   2cb88:	b	2cb10 <__flatcc_fb_build_schema@@Base+0xb74>
   2cb8c:	movw	r0, #59494	; 0xe866
   2cb90:	movt	r0, #4
   2cb94:	movw	r1, #58715	; 0xe55b
   2cb98:	movt	r1, #4
   2cb9c:	movw	r3, #59147	; 0xe70b
   2cba0:	movt	r3, #4
   2cba4:	movw	r2, #1315	; 0x523
   2cba8:	bl	14ab4 <__assert_fail@plt>
   2cbac:	movw	r0, #63908	; 0xf9a4
   2cbb0:	movt	r0, #4
   2cbb4:	movw	r1, #58715	; 0xe55b
   2cbb8:	movt	r1, #4
   2cbbc:	movw	r3, #59147	; 0xe70b
   2cbc0:	movt	r3, #4
   2cbc4:	movw	r2, #1229	; 0x4cd
   2cbc8:	bl	14ab4 <__assert_fail@plt>
   2cbcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cbd0:	add	fp, sp, #28
   2cbd4:	sub	sp, sp, #52	; 0x34
   2cbd8:	mov	r5, r1
   2cbdc:	mov	r4, r0
   2cbe0:	ldrh	r0, [r1, #48]	; 0x30
   2cbe4:	cmp	r0, #0
   2cbe8:	beq	2cc0c <__flatcc_fb_build_schema@@Base+0xc70>
   2cbec:	movw	r2, #60442	; 0xec1a
   2cbf0:	movt	r2, #4
   2cbf4:	mov	r0, r4
   2cbf8:	mov	r1, r5
   2cbfc:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2cc00:	mvn	r0, #0
   2cc04:	sub	sp, fp, #28
   2cc08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cc0c:	ldr	r1, [r5, #28]
   2cc10:	add	r3, sp, #4
   2cc14:	mov	r0, r4
   2cc18:	mov	r2, #16
   2cc1c:	bl	2e4a4 <__flatcc_fb_build_schema@@Base+0x2508>
   2cc20:	strh	r0, [r5, #92]	; 0x5c
   2cc24:	ldr	r0, [sp, #20]
   2cc28:	cmp	r0, #0
   2cc2c:	beq	2cc64 <__flatcc_fb_build_schema@@Base+0xcc8>
   2cc30:	ldrd	r6, [r0, #8]
   2cc34:	mov	r0, r6
   2cc38:	mov	r1, r7
   2cc3c:	bl	2e690 <__flatcc_fb_build_schema@@Base+0x26f4>
   2cc40:	cmp	r0, #0
   2cc44:	beq	2cc50 <__flatcc_fb_build_schema@@Base+0xcb4>
   2cc48:	strh	r6, [r5, #104]	; 0x68
   2cc4c:	b	2cc64 <__flatcc_fb_build_schema@@Base+0xcc8>
   2cc50:	movw	r2, #60484	; 0xec44
   2cc54:	movt	r2, #4
   2cc58:	mov	r0, r4
   2cc5c:	mov	r1, r5
   2cc60:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2cc64:	ldr	r6, [r5, #20]
   2cc68:	cmp	r6, #0
   2cc6c:	beq	2cdd4 <__flatcc_fb_build_schema@@Base+0xe38>
   2cc70:	add	r7, r5, #56	; 0x38
   2cc74:	mov	r9, #0
   2cc78:	add	r8, sp, #4
   2cc7c:	movw	sl, #60557	; 0xec8d
   2cc80:	movt	sl, #4
   2cc84:	b	2cca8 <__flatcc_fb_build_schema@@Base+0xd0c>
   2cc88:	mov	r3, r0
   2cc8c:	mov	r0, r4
   2cc90:	mov	r1, r6
   2cc94:	mov	r2, sl
   2cc98:	bl	2c400 <__flatcc_fb_build_schema@@Base+0x464>
   2cc9c:	ldr	r6, [r6]
   2cca0:	cmp	r6, #0
   2cca4:	beq	2cde0 <__flatcc_fb_build_schema@@Base+0xe44>
   2cca8:	mov	r0, r7
   2ccac:	mov	r1, r6
   2ccb0:	bl	2c3f8 <__flatcc_fb_build_schema@@Base+0x45c>
   2ccb4:	cmp	r0, #0
   2ccb8:	bne	2cc88 <__flatcc_fb_build_schema@@Base+0xcec>
   2ccbc:	ldrh	r0, [r6, #8]
   2ccc0:	cmp	r0, #5
   2ccc4:	bne	2ce18 <__flatcc_fb_build_schema@@Base+0xe7c>
   2ccc8:	ldrd	r0, [r4, #168]	; 0xa8
   2cccc:	cmp	r1, #0
   2ccd0:	movwne	r1, #1
   2ccd4:	mov	r2, #4
   2ccd8:	orr	r2, r2, r1, lsl #7
   2ccdc:	cmp	r0, #0
   2cce0:	lsleq	r2, r1, #7
   2cce4:	ldr	r1, [r6, #64]	; 0x40
   2cce8:	mov	r0, r4
   2ccec:	mov	r3, r8
   2ccf0:	bl	2e4a4 <__flatcc_fb_build_schema@@Base+0x2508>
   2ccf4:	strh	r0, [r6, #72]	; 0x48
   2ccf8:	ldrh	r1, [r6, #24]
   2ccfc:	cmp	r1, #8
   2cd00:	beq	2cd50 <__flatcc_fb_build_schema@@Base+0xdb4>
   2cd04:	cmp	r1, #12
   2cd08:	bne	2ce24 <__flatcc_fb_build_schema@@Base+0xe88>
   2cd0c:	ldr	r2, [r6, #16]
   2cd10:	ldr	r1, [r5, #12]
   2cd14:	mov	r0, r4
   2cd18:	bl	2e374 <__flatcc_fb_build_schema@@Base+0x23d8>
   2cd1c:	cmp	r0, #0
   2cd20:	beq	2cd7c <__flatcc_fb_build_schema@@Base+0xde0>
   2cd24:	mov	r3, r0
   2cd28:	mov	r0, #14
   2cd2c:	strh	r0, [r6, #24]
   2cd30:	str	r3, [r6, #16]
   2cd34:	ldrh	r0, [r3, #8]
   2cd38:	cmp	r0, #1
   2cd3c:	bne	2cda0 <__flatcc_fb_build_schema@@Base+0xe04>
   2cd40:	ldrb	r0, [r6, #72]	; 0x48
   2cd44:	tst	r0, #128	; 0x80
   2cd48:	beq	2cd58 <__flatcc_fb_build_schema@@Base+0xdbc>
   2cd4c:	b	2ce38 <__flatcc_fb_build_schema@@Base+0xe9c>
   2cd50:	ubfx	r0, r0, #7, #1
   2cd54:	add	r9, r9, r0
   2cd58:	ldrh	r0, [r6, #56]	; 0x38
   2cd5c:	cmp	r0, #0
   2cd60:	beq	2cc9c <__flatcc_fb_build_schema@@Base+0xd00>
   2cd64:	mov	r0, r4
   2cd68:	mov	r1, r6
   2cd6c:	movw	r2, #60908	; 0xedec
   2cd70:	movt	r2, #4
   2cd74:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2cd78:	b	2cc9c <__flatcc_fb_build_schema@@Base+0xd00>
   2cd7c:	ldr	r1, [r6, #16]
   2cd80:	mov	r0, r4
   2cd84:	movw	r2, #60627	; 0xecd3
   2cd88:	movt	r2, #4
   2cd8c:	mov	r3, r6
   2cd90:	bl	28318 <error_ref_sym@@Base>
   2cd94:	mov	r0, #1
   2cd98:	strh	r0, [r6, #24]
   2cd9c:	b	2cc9c <__flatcc_fb_build_schema@@Base+0xd00>
   2cda0:	ldr	r1, [r4, #152]	; 0x98
   2cda4:	cmp	r1, #0
   2cda8:	beq	2ce50 <__flatcc_fb_build_schema@@Base+0xeb4>
   2cdac:	cmp	r0, #3
   2cdb0:	bne	2ce5c <__flatcc_fb_build_schema@@Base+0xec0>
   2cdb4:	ldrb	r0, [r6, #72]	; 0x48
   2cdb8:	tst	r0, #128	; 0x80
   2cdbc:	beq	2cd58 <__flatcc_fb_build_schema@@Base+0xdbc>
   2cdc0:	ldr	r0, [r4, #148]	; 0x94
   2cdc4:	cmp	r0, #0
   2cdc8:	beq	2ce38 <__flatcc_fb_build_schema@@Base+0xe9c>
   2cdcc:	add	r9, r9, #1
   2cdd0:	b	2cd58 <__flatcc_fb_build_schema@@Base+0xdbc>
   2cdd4:	mov	r0, #0
   2cdd8:	sub	sp, fp, #28
   2cddc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cde0:	mov	r0, #0
   2cde4:	cmp	r9, #0
   2cde8:	beq	2cc04 <__flatcc_fb_build_schema@@Base+0xc68>
   2cdec:	ldrh	r1, [r5, #10]
   2cdf0:	orr	r1, r1, #8
   2cdf4:	strh	r1, [r5, #10]
   2cdf8:	cmp	r9, #2
   2cdfc:	blt	2cc04 <__flatcc_fb_build_schema@@Base+0xc68>
   2ce00:	ldr	r1, [r4, #156]	; 0x9c
   2ce04:	cmp	r1, #0
   2ce08:	bne	2cc04 <__flatcc_fb_build_schema@@Base+0xc68>
   2ce0c:	movw	r2, #60957	; 0xee1d
   2ce10:	movt	r2, #4
   2ce14:	b	2cbf4 <__flatcc_fb_build_schema@@Base+0xc58>
   2ce18:	movw	r2, #60591	; 0xecaf
   2ce1c:	movt	r2, #4
   2ce20:	b	2ce2c <__flatcc_fb_build_schema@@Base+0xe90>
   2ce24:	movw	r2, #60850	; 0xedb2
   2ce28:	movt	r2, #4
   2ce2c:	mov	r0, r4
   2ce30:	mov	r1, r6
   2ce34:	b	2cbfc <__flatcc_fb_build_schema@@Base+0xc60>
   2ce38:	movw	r2, #60741	; 0xed45
   2ce3c:	movt	r2, #4
   2ce40:	mov	r0, r4
   2ce44:	mov	r1, r6
   2ce48:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2ce4c:	b	2ce70 <__flatcc_fb_build_schema@@Base+0xed4>
   2ce50:	movw	r2, #60790	; 0xed76
   2ce54:	movt	r2, #4
   2ce58:	b	2ce64 <__flatcc_fb_build_schema@@Base+0xec8>
   2ce5c:	movw	r2, #60673	; 0xed01
   2ce60:	movt	r2, #4
   2ce64:	mov	r0, r4
   2ce68:	mov	r1, r6
   2ce6c:	bl	2c400 <__flatcc_fb_build_schema@@Base+0x464>
   2ce70:	mov	r0, #1
   2ce74:	strh	r0, [r6, #24]
   2ce78:	b	2cc00 <__flatcc_fb_build_schema@@Base+0xc64>
   2ce7c:	b	2c4c8 <__flatcc_fb_build_schema@@Base+0x52c>
   2ce80:	ldr	r1, [r1, #4]
   2ce84:	b	2e688 <__flatcc_fb_build_schema@@Base+0x26ec>
   2ce88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ce8c:	add	fp, sp, #28
   2ce90:	sub	sp, sp, #4
   2ce94:	mov	r4, r0
   2ce98:	ldrh	r0, [r1, #8]
   2ce9c:	cmp	r0, #1
   2cea0:	bne	2d184 <__flatcc_fb_build_schema@@Base+0x11e8>
   2cea4:	mov	r5, r1
   2cea8:	ldrh	r0, [r1, #10]
   2ceac:	tst	r0, #1
   2ceb0:	bne	2d1a4 <__flatcc_fb_build_schema@@Base+0x1208>
   2ceb4:	mov	r7, #0
   2ceb8:	tst	r0, #2
   2cebc:	bne	2d178 <__flatcc_fb_build_schema@@Base+0x11dc>
   2cec0:	ldr	r1, [r5, #120]	; 0x78
   2cec4:	cmp	r1, #0
   2cec8:	bne	2d1c4 <__flatcc_fb_build_schema@@Base+0x1228>
   2cecc:	orr	r0, r0, #1
   2ced0:	strh	r0, [r5, #10]
   2ced4:	ldr	sl, [r5, #20]
   2ced8:	cmp	sl, #0
   2cedc:	beq	2d06c <__flatcc_fb_build_schema@@Base+0x10d0>
   2cee0:	add	r8, r5, #112	; 0x70
   2cee4:	mov	r9, #1
   2cee8:	b	2cf20 <__flatcc_fb_build_schema@@Base+0xf84>
   2ceec:	mov	r0, r4
   2cef0:	mov	r1, sl
   2cef4:	movw	r2, #61371	; 0xefbb
   2cef8:	movt	r2, #4
   2cefc:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2cf00:	strd	r6, [r8]
   2cf04:	ldrh	r0, [sl, #74]	; 0x4a
   2cf08:	uxth	r1, r9
   2cf0c:	cmp	r1, r0
   2cf10:	movcc	r9, r0
   2cf14:	ldr	sl, [sl]
   2cf18:	cmp	sl, #0
   2cf1c:	beq	2d070 <__flatcc_fb_build_schema@@Base+0x10d4>
   2cf20:	ldr	r0, [r4, #116]	; 0x74
   2cf24:	cmp	r0, #100	; 0x64
   2cf28:	bge	2d0f8 <__flatcc_fb_build_schema@@Base+0x115c>
   2cf2c:	ldrh	r0, [sl, #24]
   2cf30:	mvn	r7, #0
   2cf34:	cmp	r0, #8
   2cf38:	beq	2cf68 <__flatcc_fb_build_schema@@Base+0xfcc>
   2cf3c:	cmp	r0, #14
   2cf40:	bne	2d110 <__flatcc_fb_build_schema@@Base+0x1174>
   2cf44:	ldr	r6, [sl, #16]
   2cf48:	ldrh	r0, [r6, #8]
   2cf4c:	cmp	r0, #1
   2cf50:	beq	2cf90 <__flatcc_fb_build_schema@@Base+0xff4>
   2cf54:	cmp	r0, #3
   2cf58:	bne	2d124 <__flatcc_fb_build_schema@@Base+0x1188>
   2cf5c:	ldrd	r0, [r6, #112]	; 0x70
   2cf60:	strh	r0, [sl, #74]	; 0x4a
   2cf64:	b	2d000 <__flatcc_fb_build_schema@@Base+0x1064>
   2cf68:	ldr	r6, [sl, #16]
   2cf6c:	mov	r0, r6
   2cf70:	bl	2e46c <__flatcc_fb_build_schema@@Base+0x24d0>
   2cf74:	str	r0, [sl, #16]
   2cf78:	bl	2e494 <__flatcc_fb_build_schema@@Base+0x24f8>
   2cf7c:	cmp	r0, #0
   2cf80:	beq	2d13c <__flatcc_fb_build_schema@@Base+0x11a0>
   2cf84:	strh	r0, [sl, #74]	; 0x4a
   2cf88:	mov	r1, #0
   2cf8c:	b	2d000 <__flatcc_fb_build_schema@@Base+0x1064>
   2cf90:	ldrh	r0, [r6, #10]
   2cf94:	tst	r0, #1
   2cf98:	bne	2d158 <__flatcc_fb_build_schema@@Base+0x11bc>
   2cf9c:	tst	r0, #2
   2cfa0:	bne	2cff4 <__flatcc_fb_build_schema@@Base+0x1058>
   2cfa4:	ldr	r0, [r4, #188]	; 0xbc
   2cfa8:	cmp	r0, #0
   2cfac:	beq	2cfc8 <__flatcc_fb_build_schema@@Base+0x102c>
   2cfb0:	mov	r0, r4
   2cfb4:	mov	r1, sl
   2cfb8:	movw	r2, #61244	; 0xef3c
   2cfbc:	movt	r2, #4
   2cfc0:	mov	r3, r6
   2cfc4:	bl	2c400 <__flatcc_fb_build_schema@@Base+0x464>
   2cfc8:	ldr	r0, [r4, #116]	; 0x74
   2cfcc:	add	r0, r0, #1
   2cfd0:	str	r0, [r4, #116]	; 0x74
   2cfd4:	mov	r0, r4
   2cfd8:	mov	r1, r6
   2cfdc:	bl	2ce88 <__flatcc_fb_build_schema@@Base+0xeec>
   2cfe0:	ldr	r1, [r4, #116]	; 0x74
   2cfe4:	sub	r1, r1, #1
   2cfe8:	str	r1, [r4, #116]	; 0x74
   2cfec:	cmp	r0, #0
   2cff0:	bne	2d174 <__flatcc_fb_build_schema@@Base+0x11d8>
   2cff4:	ldrh	r0, [r6, #104]	; 0x68
   2cff8:	strh	r0, [sl, #74]	; 0x4a
   2cffc:	ldrd	r0, [r6, #112]	; 0x70
   2d000:	add	r6, sl, #80	; 0x50
   2d004:	strd	r0, [r6, #8]
   2d008:	ldrd	r0, [r8]
   2d00c:	ldrh	r2, [sl, #74]	; 0x4a
   2d010:	mov	r3, #0
   2d014:	bl	2e700 <__flatcc_fb_build_schema@@Base+0x2764>
   2d018:	mov	r2, r0
   2d01c:	mov	r3, r1
   2d020:	strd	r2, [r6]
   2d024:	ldrd	r0, [r8]
   2d028:	subs	r7, r2, r0
   2d02c:	sbcs	r7, r3, r1
   2d030:	bcc	2d0dc <__flatcc_fb_build_schema@@Base+0x1140>
   2d034:	ldrd	r6, [r6, #8]
   2d038:	adds	r6, r6, r2
   2d03c:	adcs	r7, r7, r3
   2d040:	mov	r2, #0
   2d044:	adc	r2, r2, #0
   2d048:	cmp	r2, #1
   2d04c:	beq	2d0dc <__flatcc_fb_build_schema@@Base+0x1140>
   2d050:	subs	r0, r6, r0
   2d054:	sbcs	r0, r7, r1
   2d058:	bcc	2ceec <__flatcc_fb_build_schema@@Base+0xf50>
   2d05c:	subs	r0, r6, #65536	; 0x10000
   2d060:	sbcs	r0, r7, #0
   2d064:	bcc	2cf00 <__flatcc_fb_build_schema@@Base+0xf64>
   2d068:	b	2ceec <__flatcc_fb_build_schema@@Base+0xf50>
   2d06c:	mov	r9, #1
   2d070:	ldrh	r0, [r5, #104]	; 0x68
   2d074:	cmp	r0, #0
   2d078:	beq	2d09c <__flatcc_fb_build_schema@@Base+0x1100>
   2d07c:	uxth	r1, r9
   2d080:	cmp	r1, r0
   2d084:	bls	2d0a0 <__flatcc_fb_build_schema@@Base+0x1104>
   2d088:	movw	r2, #61422	; 0xefee
   2d08c:	movt	r2, #4
   2d090:	mov	r0, r4
   2d094:	mov	r1, r5
   2d098:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d09c:	strh	r9, [r5, #104]	; 0x68
   2d0a0:	ldrd	r0, [r5, #112]	; 0x70
   2d0a4:	ldrh	r2, [r5, #104]	; 0x68
   2d0a8:	mov	r7, #0
   2d0ac:	mov	r3, #0
   2d0b0:	bl	2e700 <__flatcc_fb_build_schema@@Base+0x2764>
   2d0b4:	str	r1, [r5, #116]	; 0x74
   2d0b8:	str	r0, [r5, #112]	; 0x70
   2d0bc:	ldrh	r0, [r5, #10]
   2d0c0:	orr	r0, r0, #2
   2d0c4:	bic	r0, r0, #1
   2d0c8:	strh	r0, [r5, #10]
   2d0cc:	ldr	r0, [r4, #396]	; 0x18c
   2d0d0:	str	r0, [r5, #120]	; 0x78
   2d0d4:	str	r5, [r4, #396]	; 0x18c
   2d0d8:	b	2d178 <__flatcc_fb_build_schema@@Base+0x11dc>
   2d0dc:	movw	r2, #61350	; 0xefa6
   2d0e0:	movt	r2, #4
   2d0e4:	mov	r0, r4
   2d0e8:	mov	r1, sl
   2d0ec:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d0f0:	mvn	r7, #0
   2d0f4:	b	2d178 <__flatcc_fb_build_schema@@Base+0x11dc>
   2d0f8:	movw	r1, #61123	; 0xeec3
   2d0fc:	movt	r1, #4
   2d100:	mov	r0, r4
   2d104:	bl	2e368 <__flatcc_fb_build_schema@@Base+0x23cc>
   2d108:	mvn	r7, #0
   2d10c:	b	2d178 <__flatcc_fb_build_schema@@Base+0x11dc>
   2d110:	cmp	r0, #1
   2d114:	beq	2d178 <__flatcc_fb_build_schema@@Base+0x11dc>
   2d118:	movw	r2, #61196	; 0xef0c
   2d11c:	movt	r2, #4
   2d120:	b	2d12c <__flatcc_fb_build_schema@@Base+0x1190>
   2d124:	movw	r2, #61315	; 0xef83
   2d128:	movt	r2, #4
   2d12c:	mov	r0, r4
   2d130:	mov	r1, sl
   2d134:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d138:	b	2d178 <__flatcc_fb_build_schema@@Base+0x11dc>
   2d13c:	movw	r2, #61196	; 0xef0c
   2d140:	movt	r2, #4
   2d144:	mov	r0, r4
   2d148:	mov	r1, sl
   2d14c:	mov	r3, r6
   2d150:	bl	2e6f8 <__flatcc_fb_build_schema@@Base+0x275c>
   2d154:	b	2d178 <__flatcc_fb_build_schema@@Base+0x11dc>
   2d158:	movw	r2, #61212	; 0xef1c
   2d15c:	movt	r2, #4
   2d160:	mov	r0, r4
   2d164:	mov	r1, sl
   2d168:	mov	r3, r6
   2d16c:	bl	2c400 <__flatcc_fb_build_schema@@Base+0x464>
   2d170:	b	2d178 <__flatcc_fb_build_schema@@Base+0x11dc>
   2d174:	mov	r7, r0
   2d178:	mov	r0, r7
   2d17c:	sub	sp, fp, #28
   2d180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d184:	movw	r0, #53217	; 0xcfe1
   2d188:	movt	r0, #3
   2d18c:	movw	r1, #58715	; 0xe55b
   2d190:	movt	r1, #4
   2d194:	movw	r3, #61017	; 0xee59
   2d198:	movt	r3, #4
   2d19c:	movw	r2, #502	; 0x1f6
   2d1a0:	bl	14ab4 <__assert_fail@plt>
   2d1a4:	movw	r0, #61073	; 0xee91
   2d1a8:	movt	r0, #4
   2d1ac:	movw	r1, #58715	; 0xe55b
   2d1b0:	movt	r1, #4
   2d1b4:	movw	r3, #61017	; 0xee59
   2d1b8:	movt	r3, #4
   2d1bc:	mov	r2, #504	; 0x1f8
   2d1c0:	bl	14ab4 <__assert_fail@plt>
   2d1c4:	movw	r0, #61112	; 0xeeb8
   2d1c8:	movt	r0, #4
   2d1cc:	movw	r1, #58715	; 0xe55b
   2d1d0:	movt	r1, #4
   2d1d4:	movw	r3, #61017	; 0xee59
   2d1d8:	movt	r3, #4
   2d1dc:	mov	r2, #508	; 0x1fc
   2d1e0:	bl	14ab4 <__assert_fail@plt>
   2d1e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d1e8:	add	fp, sp, #28
   2d1ec:	sub	sp, sp, #212	; 0xd4
   2d1f0:	mov	sl, r0
   2d1f4:	ldrh	r0, [r1, #8]
   2d1f8:	cmp	r0, #0
   2d1fc:	bne	2deb4 <__flatcc_fb_build_schema@@Base+0x1f18>
   2d200:	mov	r8, r1
   2d204:	ldrh	r0, [r1, #48]	; 0x30
   2d208:	cmp	r0, #0
   2d20c:	bne	2ded4 <__flatcc_fb_build_schema@@Base+0x1f38>
   2d210:	ldr	r1, [r8, #28]
   2d214:	add	r3, sp, #60	; 0x3c
   2d218:	mov	r0, sl
   2d21c:	mov	r2, #8
   2d220:	bl	2e4a4 <__flatcc_fb_build_schema@@Base+0x2508>
   2d224:	strh	r0, [r8, #92]	; 0x5c
   2d228:	ldr	r7, [r8, #20]
   2d22c:	mov	r9, #0
   2d230:	cmp	r7, #0
   2d234:	beq	2dd18 <__flatcc_fb_build_schema@@Base+0x1d7c>
   2d238:	add	r0, sl, #216	; 0xd8
   2d23c:	str	r0, [sp, #24]
   2d240:	add	r4, r8, #56	; 0x38
   2d244:	movw	r9, #61611	; 0xf0ab
   2d248:	movt	r9, #4
   2d24c:	mov	r0, #0
   2d250:	str	r0, [sp, #16]
   2d254:	mov	r0, #0
   2d258:	str	r0, [sp, #12]
   2d25c:	mov	r0, #0
   2d260:	str	r0, [sp, #52]	; 0x34
   2d264:	mov	r0, #0
   2d268:	str	r0, [sp, #48]	; 0x30
   2d26c:	mov	r5, #0
   2d270:	mov	r0, #0
   2d274:	str	r0, [sp, #32]
   2d278:	mov	r0, #0
   2d27c:	str	r0, [sp, #56]	; 0x38
   2d280:	mov	r6, #0
   2d284:	str	r4, [sp, #20]
   2d288:	b	2d2ac <__flatcc_fb_build_schema@@Base+0x1310>
   2d28c:	mov	r3, r0
   2d290:	mov	r0, sl
   2d294:	mov	r1, r7
   2d298:	mov	r2, r9
   2d29c:	bl	2c400 <__flatcc_fb_build_schema@@Base+0x464>
   2d2a0:	ldr	r7, [r7]
   2d2a4:	cmp	r7, #0
   2d2a8:	beq	2dd00 <__flatcc_fb_build_schema@@Base+0x1d64>
   2d2ac:	mov	r0, r4
   2d2b0:	mov	r1, r7
   2d2b4:	bl	2c3f8 <__flatcc_fb_build_schema@@Base+0x45c>
   2d2b8:	cmp	r0, #0
   2d2bc:	bne	2d28c <__flatcc_fb_build_schema@@Base+0x12f0>
   2d2c0:	ldrh	r0, [r7, #8]
   2d2c4:	cmp	r0, #5
   2d2c8:	bne	2de18 <__flatcc_fb_build_schema@@Base+0x1e7c>
   2d2cc:	ldrh	r0, [r7, #24]
   2d2d0:	sub	r1, r0, #7
   2d2d4:	cmp	r1, #2
   2d2d8:	bcs	2d2ec <__flatcc_fb_build_schema@@Base+0x1350>
   2d2dc:	ldr	r0, [r7, #16]
   2d2e0:	bl	2e46c <__flatcc_fb_build_schema@@Base+0x24d0>
   2d2e4:	str	r0, [r7, #16]
   2d2e8:	b	2d2f4 <__flatcc_fb_build_schema@@Base+0x1358>
   2d2ec:	cmp	r0, #1
   2d2f0:	beq	2d2a0 <__flatcc_fb_build_schema@@Base+0x1304>
   2d2f4:	ldr	r1, [r7, #64]	; 0x40
   2d2f8:	mov	r0, sl
   2d2fc:	movw	r2, #4038	; 0xfc6
   2d300:	add	r3, sp, #60	; 0x3c
   2d304:	bl	2e4a4 <__flatcc_fb_build_schema@@Base+0x2508>
   2d308:	strh	r0, [r7, #72]	; 0x48
   2d30c:	ldr	r3, [sp, #84]	; 0x54
   2d310:	cmp	r3, #0
   2d314:	beq	2d328 <__flatcc_fb_build_schema@@Base+0x138c>
   2d318:	ldr	r1, [r8, #12]
   2d31c:	mov	r0, sl
   2d320:	mov	r2, r7
   2d324:	bl	2e770 <__flatcc_fb_build_schema@@Base+0x27d4>
   2d328:	ldrb	r0, [r7, #73]	; 0x49
   2d32c:	tst	r0, #1
   2d330:	beq	2d354 <__flatcc_fb_build_schema@@Base+0x13b8>
   2d334:	ldrh	r0, [r7, #24]
   2d338:	cmp	r0, #8
   2d33c:	bne	2d354 <__flatcc_fb_build_schema@@Base+0x13b8>
   2d340:	mov	r0, sl
   2d344:	mov	r1, r7
   2d348:	movw	r2, #61682	; 0xf0f2
   2d34c:	movt	r2, #4
   2d350:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d354:	ldrb	r0, [r7, #73]	; 0x49
   2d358:	tst	r0, #4
   2d35c:	beq	2d38c <__flatcc_fb_build_schema@@Base+0x13f0>
   2d360:	ldrh	r0, [r7, #24]
   2d364:	cmp	r0, #7
   2d368:	bne	2d378 <__flatcc_fb_build_schema@@Base+0x13dc>
   2d36c:	ldr	r0, [r7, #16]
   2d370:	cmp	r0, #4
   2d374:	beq	2d38c <__flatcc_fb_build_schema@@Base+0x13f0>
   2d378:	mov	r0, sl
   2d37c:	mov	r1, r7
   2d380:	movw	r2, #61738	; 0xf12a
   2d384:	movt	r2, #4
   2d388:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d38c:	ldrb	r0, [r7, #73]	; 0x49
   2d390:	tst	r0, #8
   2d394:	beq	2d3c4 <__flatcc_fb_build_schema@@Base+0x1428>
   2d398:	ldrh	r0, [r7, #24]
   2d39c:	cmp	r0, #7
   2d3a0:	bne	2d3b0 <__flatcc_fb_build_schema@@Base+0x1414>
   2d3a4:	ldr	r0, [r7, #16]
   2d3a8:	cmp	r0, #4
   2d3ac:	beq	2d3c4 <__flatcc_fb_build_schema@@Base+0x1428>
   2d3b0:	mov	r0, sl
   2d3b4:	mov	r1, r7
   2d3b8:	movw	r2, #61798	; 0xf166
   2d3bc:	movt	r2, #4
   2d3c0:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d3c4:	ldrh	r0, [r7, #72]	; 0x48
   2d3c8:	and	r0, r0, #3072	; 0xc00
   2d3cc:	cmp	r0, #3072	; 0xc00
   2d3d0:	bne	2d3e8 <__flatcc_fb_build_schema@@Base+0x144c>
   2d3d4:	mov	r0, sl
   2d3d8:	mov	r1, r7
   2d3dc:	movw	r2, #61861	; 0xf1a5
   2d3e0:	movt	r2, #4
   2d3e4:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d3e8:	ldr	r0, [sp, #56]	; 0x38
   2d3ec:	orrs	r0, r0, r6
   2d3f0:	ldr	r0, [sp, #64]	; 0x40
   2d3f4:	str	r0, [sp, #36]	; 0x24
   2d3f8:	bne	2d424 <__flatcc_fb_build_schema@@Base+0x1488>
   2d3fc:	cmp	r0, #0
   2d400:	beq	2d424 <__flatcc_fb_build_schema@@Base+0x1488>
   2d404:	ldr	r0, [sp, #24]
   2d408:	ldr	r2, [r0]
   2d40c:	ldr	r0, [sl, #112]	; 0x70
   2d410:	str	r0, [sp, #16]
   2d414:	mov	r1, #0
   2d418:	bl	14a0c <memset@plt>
   2d41c:	mov	r0, #1
   2d420:	str	r0, [sp, #32]
   2d424:	add	r0, r7, #96	; 0x60
   2d428:	str	r0, [sp, #28]
   2d42c:	cmp	r5, #0
   2d430:	bne	2d49c <__flatcc_fb_build_schema@@Base+0x1500>
   2d434:	ldr	r0, [sp, #24]
   2d438:	ldrd	r0, [r0]
   2d43c:	ldr	r2, [sp, #56]	; 0x38
   2d440:	subs	r0, r2, r0
   2d444:	sbcs	r0, r6, r1
   2d448:	bcs	2d474 <__flatcc_fb_build_schema@@Base+0x14d8>
   2d44c:	mov	r5, #0
   2d450:	ldr	r0, [sp, #32]
   2d454:	cmp	r0, #0
   2d458:	bne	2d48c <__flatcc_fb_build_schema@@Base+0x14f0>
   2d45c:	mov	r5, #0
   2d460:	ldr	r0, [sp, #56]	; 0x38
   2d464:	uxth	r0, r0
   2d468:	ldr	r1, [sp, #28]
   2d46c:	stm	r1, {r0, r5}
   2d470:	b	2d48c <__flatcc_fb_build_schema@@Base+0x14f0>
   2d474:	mov	r0, sl
   2d478:	mov	r1, r7
   2d47c:	movw	r2, #61916	; 0xf1dc
   2d480:	movt	r2, #4
   2d484:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d488:	mov	r5, #1
   2d48c:	ldr	r0, [sp, #56]	; 0x38
   2d490:	adds	r0, r0, #1
   2d494:	str	r0, [sp, #56]	; 0x38
   2d498:	adc	r6, r6, #0
   2d49c:	ldrh	r0, [r7, #24]
   2d4a0:	sub	r0, r0, #7
   2d4a4:	cmp	r0, #5
   2d4a8:	bhi	2d6ec <__flatcc_fb_build_schema@@Base+0x1750>
   2d4ac:	str	r5, [sp, #40]	; 0x28
   2d4b0:	str	r6, [sp, #44]	; 0x2c
   2d4b4:	add	r9, r7, #48	; 0x30
   2d4b8:	add	r1, pc, #0
   2d4bc:	ldr	pc, [r1, r0, lsl #2]
   2d4c0:	ldrdeq	sp, [r2], -r8
   2d4c4:	andeq	sp, r2, r0, asr r6
   2d4c8:	andeq	sp, r2, r4, ror #11
   2d4cc:	andeq	sp, r2, r0, lsl r6
   2d4d0:	andeq	sp, r2, r8, lsl r5
   2d4d4:	muleq	r2, r0, r6
   2d4d8:	ldr	r0, [r7, #16]
   2d4dc:	bl	2e494 <__flatcc_fb_build_schema@@Base+0x24f8>
   2d4e0:	mov	r4, r0
   2d4e4:	mov	lr, #0
   2d4e8:	str	r4, [r9, #40]	; 0x28
   2d4ec:	str	lr, [r9, #44]	; 0x2c
   2d4f0:	strh	r0, [r7, #74]	; 0x4a
   2d4f4:	ldrh	r0, [r7, #56]	; 0x38
   2d4f8:	cmp	r0, #0
   2d4fc:	beq	2d748 <__flatcc_fb_build_schema@@Base+0x17ac>
   2d500:	mov	r0, sl
   2d504:	mov	r1, r7
   2d508:	movw	r2, #61998	; 0xf22e
   2d50c:	movt	r2, #4
   2d510:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d514:	b	2db20 <__flatcc_fb_build_schema@@Base+0x1b84>
   2d518:	ldr	r2, [r7, #16]
   2d51c:	ldr	r1, [r8, #12]
   2d520:	mov	r0, sl
   2d524:	bl	2e374 <__flatcc_fb_build_schema@@Base+0x23d8>
   2d528:	cmp	r0, #0
   2d52c:	beq	2d70c <__flatcc_fb_build_schema@@Base+0x1770>
   2d530:	mov	lr, r0
   2d534:	ldrh	r0, [r0, #8]
   2d538:	cmp	r0, #4
   2d53c:	bhi	2d7e8 <__flatcc_fb_build_schema@@Base+0x184c>
   2d540:	cmp	r0, #2
   2d544:	beq	2d7e8 <__flatcc_fb_build_schema@@Base+0x184c>
   2d548:	ldrh	r0, [r7, #56]	; 0x38
   2d54c:	cmp	r0, #0
   2d550:	bne	2d8f4 <__flatcc_fb_build_schema@@Base+0x1958>
   2d554:	str	lr, [r7, #16]
   2d558:	mov	r0, #15
   2d55c:	strh	r0, [r7, #24]
   2d560:	ldrd	r0, [lr, #112]	; 0x70
   2d564:	strd	r0, [r9, #40]	; 0x28
   2d568:	ldr	r0, [r7, #16]
   2d56c:	ldrh	r0, [r0, #104]	; 0x68
   2d570:	strh	r0, [r7, #74]	; 0x4a
   2d574:	mov	ip, #0
   2d578:	ldr	r0, [sp, #40]	; 0x28
   2d57c:	cmp	r0, #0
   2d580:	bne	2d98c <__flatcc_fb_build_schema@@Base+0x19f0>
   2d584:	ldrh	r0, [lr, #8]
   2d588:	cmp	r0, #4
   2d58c:	ldr	r6, [sp, #44]	; 0x2c
   2d590:	bne	2d990 <__flatcc_fb_build_schema@@Base+0x19f4>
   2d594:	ldr	r0, [sp, #32]
   2d598:	cmp	r0, #0
   2d59c:	ldr	r4, [sp, #20]
   2d5a0:	movw	r9, #61611	; 0xf0ab
   2d5a4:	movt	r9, #4
   2d5a8:	bne	2d5c0 <__flatcc_fb_build_schema@@Base+0x1624>
   2d5ac:	ldr	r0, [sp, #56]	; 0x38
   2d5b0:	uxth	r0, r0
   2d5b4:	mov	r1, #0
   2d5b8:	ldr	r2, [sp, #28]
   2d5bc:	strd	r0, [r2]
   2d5c0:	ldr	r0, [sp, #56]	; 0x38
   2d5c4:	adds	r0, r0, #1
   2d5c8:	str	r0, [sp, #56]	; 0x38
   2d5cc:	adc	r6, r6, #0
   2d5d0:	mov	ip, #0
   2d5d4:	ldr	r0, [sp, #36]	; 0x24
   2d5d8:	cmp	r0, #0
   2d5dc:	bne	2d9b4 <__flatcc_fb_build_schema@@Base+0x1a18>
   2d5e0:	b	2d9e4 <__flatcc_fb_build_schema@@Base+0x1a48>
   2d5e4:	ldrh	r0, [r7, #56]	; 0x38
   2d5e8:	cmp	r0, #0
   2d5ec:	ldr	r4, [sp, #20]
   2d5f0:	movw	r9, #61611	; 0xf0ab
   2d5f4:	movt	r9, #4
   2d5f8:	beq	2d728 <__flatcc_fb_build_schema@@Base+0x178c>
   2d5fc:	mov	r0, sl
   2d600:	mov	r1, r7
   2d604:	movw	r2, #62075	; 0xf27b
   2d608:	movt	r2, #4
   2d60c:	b	2d638 <__flatcc_fb_build_schema@@Base+0x169c>
   2d610:	ldrh	r0, [r7, #56]	; 0x38
   2d614:	cmp	r0, #0
   2d618:	ldr	r4, [sp, #20]
   2d61c:	movw	r9, #61611	; 0xf0ab
   2d620:	movt	r9, #4
   2d624:	beq	2d738 <__flatcc_fb_build_schema@@Base+0x179c>
   2d628:	mov	r0, sl
   2d62c:	mov	r1, r7
   2d630:	movw	r2, #62040	; 0xf258
   2d634:	movt	r2, #4
   2d638:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d63c:	mov	r0, #1
   2d640:	strh	r0, [r7, #24]
   2d644:	ldr	r6, [sp, #44]	; 0x2c
   2d648:	ldr	r5, [sp, #40]	; 0x28
   2d64c:	b	2d2a0 <__flatcc_fb_build_schema@@Base+0x1304>
   2d650:	ldrh	r0, [r7, #56]	; 0x38
   2d654:	cmp	r0, #13
   2d658:	bne	2d78c <__flatcc_fb_build_schema@@Base+0x17f0>
   2d65c:	ldr	r3, [r9]
   2d660:	ldr	r1, [r8, #12]
   2d664:	str	r9, [sp]
   2d668:	mov	r0, sl
   2d66c:	mov	r2, #0
   2d670:	bl	2e83c <__flatcc_fb_build_schema@@Base+0x28a0>
   2d674:	cmp	r0, #0
   2d678:	beq	2d788 <__flatcc_fb_build_schema@@Base+0x17ec>
   2d67c:	ldr	r1, [r7, #48]	; 0x30
   2d680:	mov	r0, sl
   2d684:	movw	r2, #61948	; 0xf1fc
   2d688:	movt	r2, #4
   2d68c:	b	2d71c <__flatcc_fb_build_schema@@Base+0x1780>
   2d690:	ldr	r2, [r7, #16]
   2d694:	ldr	r1, [r8, #12]
   2d698:	mov	r0, sl
   2d69c:	bl	2e374 <__flatcc_fb_build_schema@@Base+0x23d8>
   2d6a0:	cmp	r0, #0
   2d6a4:	beq	2d750 <__flatcc_fb_build_schema@@Base+0x17b4>
   2d6a8:	mov	lr, r0
   2d6ac:	ldrh	r0, [r0, #8]
   2d6b0:	cmp	r0, #4
   2d6b4:	bhi	2db08 <__flatcc_fb_build_schema@@Base+0x1b6c>
   2d6b8:	mov	ip, #0
   2d6bc:	add	r1, pc, #0
   2d6c0:	ldr	pc, [r1, r0, lsl #2]
   2d6c4:	andeq	sp, r2, r0, lsr r8
   2d6c8:	andeq	sp, r2, r0, lsr r8
   2d6cc:	ldrdeq	sp, [r2], -r8
   2d6d0:	andeq	sp, r2, r4, lsl #16
   2d6d4:	andeq	sp, r2, r0, lsr r8
   2d6d8:	mov	r0, sl
   2d6dc:	mov	r1, r7
   2d6e0:	movw	r2, #62216	; 0xf308
   2d6e4:	movt	r2, #4
   2d6e8:	b	2db18 <__flatcc_fb_build_schema@@Base+0x1b7c>
   2d6ec:	mov	r0, sl
   2d6f0:	mov	r1, r7
   2d6f4:	movw	r2, #62634	; 0xf4aa
   2d6f8:	movt	r2, #4
   2d6fc:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d700:	mov	r0, #1
   2d704:	strh	r0, [r7, #24]
   2d708:	b	2d2a0 <__flatcc_fb_build_schema@@Base+0x1304>
   2d70c:	ldr	r1, [r7, #16]
   2d710:	mov	r0, sl
   2d714:	movw	r2, #62507	; 0xf42b
   2d718:	movt	r2, #4
   2d71c:	mov	r3, r7
   2d720:	bl	28318 <error_ref_sym@@Base>
   2d724:	b	2db20 <__flatcc_fb_build_schema@@Base+0x1b84>
   2d728:	mov	lr, #0
   2d72c:	mov	ip, #0
   2d730:	ldr	r6, [sp, #44]	; 0x2c
   2d734:	b	2d99c <__flatcc_fb_build_schema@@Base+0x1a00>
   2d738:	ldr	ip, [sl, #164]	; 0xa4
   2d73c:	mov	lr, #0
   2d740:	ldr	r6, [sp, #44]	; 0x2c
   2d744:	b	2d99c <__flatcc_fb_build_schema@@Base+0x1a00>
   2d748:	mov	ip, #0
   2d74c:	b	2d98c <__flatcc_fb_build_schema@@Base+0x19f0>
   2d750:	ldr	r1, [r7, #16]
   2d754:	mov	r0, sl
   2d758:	movw	r2, #62117	; 0xf2a5
   2d75c:	movt	r2, #4
   2d760:	mov	r3, r7
   2d764:	bl	28318 <error_ref_sym@@Base>
   2d768:	mov	r0, #1
   2d76c:	strh	r0, [r7, #24]
   2d770:	ldr	r6, [sp, #44]	; 0x2c
   2d774:	ldr	r4, [sp, #20]
   2d778:	movw	r9, #61611	; 0xf0ab
   2d77c:	movt	r9, #4
   2d780:	mov	r5, #1
   2d784:	b	2d2a0 <__flatcc_fb_build_schema@@Base+0x1304>
   2d788:	ldrh	r0, [r7, #56]	; 0x38
   2d78c:	cmp	r0, #0
   2d790:	bne	2d7a8 <__flatcc_fb_build_schema@@Base+0x180c>
   2d794:	mov	r0, #5
   2d798:	strh	r0, [r7, #56]	; 0x38
   2d79c:	mov	r0, #0
   2d7a0:	str	r0, [r9]
   2d7a4:	str	r0, [r9, #4]
   2d7a8:	ldr	r2, [r7, #16]
   2d7ac:	mov	r0, sl
   2d7b0:	mov	r1, r7
   2d7b4:	mov	r3, r9
   2d7b8:	bl	2ec90 <__flatcc_fb_coerce_scalar_type@@Base>
   2d7bc:	cmp	r0, #0
   2d7c0:	bne	2db20 <__flatcc_fb_build_schema@@Base+0x1b84>
   2d7c4:	ldr	r0, [r7, #16]
   2d7c8:	bl	2e494 <__flatcc_fb_build_schema@@Base+0x24f8>
   2d7cc:	mov	r4, r0
   2d7d0:	mov	lr, #0
   2d7d4:	str	r4, [r9, #40]	; 0x28
   2d7d8:	str	lr, [r9, #44]	; 0x2c
   2d7dc:	strh	r0, [r7, #74]	; 0x4a
   2d7e0:	mov	ip, #1
   2d7e4:	b	2d98c <__flatcc_fb_build_schema@@Base+0x19f0>
   2d7e8:	ldr	r3, [r7, #16]
   2d7ec:	mov	r0, sl
   2d7f0:	mov	r1, r7
   2d7f4:	movw	r2, #62559	; 0xf45f
   2d7f8:	movt	r2, #4
   2d7fc:	bl	2e6f8 <__flatcc_fb_build_schema@@Base+0x275c>
   2d800:	b	2db20 <__flatcc_fb_build_schema@@Base+0x1b84>
   2d804:	ldrb	r0, [r7, #73]	; 0x49
   2d808:	tst	r0, #1
   2d80c:	beq	2d82c <__flatcc_fb_build_schema@@Base+0x1890>
   2d810:	mov	r0, sl
   2d814:	mov	r1, r7
   2d818:	movw	r2, #62162	; 0xf2d2
   2d81c:	movt	r2, #4
   2d820:	mov	r4, lr
   2d824:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d828:	mov	lr, r4
   2d82c:	ldr	ip, [sl, #148]	; 0x94
   2d830:	str	lr, [r7, #16]
   2d834:	mov	r0, #14
   2d838:	strh	r0, [r7, #24]
   2d83c:	ldrd	r0, [lr, #112]	; 0x70
   2d840:	strd	r0, [r9, #40]	; 0x28
   2d844:	ldr	r2, [r7, #16]
   2d848:	ldrh	r0, [r2, #104]	; 0x68
   2d84c:	strh	r0, [r7, #74]	; 0x4a
   2d850:	ldrh	r0, [lr, #8]
   2d854:	ldr	r1, [sp, #40]	; 0x28
   2d858:	cmp	r1, #0
   2d85c:	cmpeq	r0, #4
   2d860:	bne	2d8a0 <__flatcc_fb_build_schema@@Base+0x1904>
   2d864:	ldr	r1, [sp, #32]
   2d868:	cmp	r1, #0
   2d86c:	bne	2d888 <__flatcc_fb_build_schema@@Base+0x18ec>
   2d870:	ldr	r3, [sp, #56]	; 0x38
   2d874:	uxth	r4, r3
   2d878:	mov	r3, #0
   2d87c:	ldr	r6, [sp, #28]
   2d880:	str	r4, [r6]
   2d884:	str	r3, [r6, #4]
   2d888:	ldr	r1, [sp, #56]	; 0x38
   2d88c:	adds	r1, r1, #1
   2d890:	str	r1, [sp, #56]	; 0x38
   2d894:	ldr	r1, [sp, #44]	; 0x2c
   2d898:	adc	r1, r1, #0
   2d89c:	str	r1, [sp, #44]	; 0x2c
   2d8a0:	ldrh	r1, [r7, #56]	; 0x38
   2d8a4:	cmp	r1, #0
   2d8a8:	beq	2d90c <__flatcc_fb_build_schema@@Base+0x1970>
   2d8ac:	cmp	r0, #3
   2d8b0:	bne	2d8f4 <__flatcc_fb_build_schema@@Base+0x1958>
   2d8b4:	str	ip, [sp, #8]
   2d8b8:	cmp	r1, #13
   2d8bc:	bne	2db40 <__flatcc_fb_build_schema@@Base+0x1ba4>
   2d8c0:	str	lr, [sp, #4]
   2d8c4:	ldr	r3, [r9]
   2d8c8:	ldr	r1, [r8, #12]
   2d8cc:	str	r9, [sp]
   2d8d0:	mov	r0, sl
   2d8d4:	bl	2e83c <__flatcc_fb_build_schema@@Base+0x28a0>
   2d8d8:	cmp	r0, #0
   2d8dc:	beq	2db88 <__flatcc_fb_build_schema@@Base+0x1bec>
   2d8e0:	ldr	r1, [r7, #48]	; 0x30
   2d8e4:	mov	r0, sl
   2d8e8:	movw	r2, #62342	; 0xf386
   2d8ec:	movt	r2, #4
   2d8f0:	b	2d71c <__flatcc_fb_build_schema@@Base+0x1780>
   2d8f4:	mov	r0, sl
   2d8f8:	mov	r1, r7
   2d8fc:	movw	r2, #62298	; 0xf35a
   2d900:	movt	r2, #4
   2d904:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2d908:	b	2db20 <__flatcc_fb_build_schema@@Base+0x1b84>
   2d90c:	cmp	r0, #3
   2d910:	bne	2d98c <__flatcc_fb_build_schema@@Base+0x19f0>
   2d914:	str	ip, [sp, #8]
   2d918:	mov	r0, #5
   2d91c:	strh	r0, [r7, #56]	; 0x38
   2d920:	mov	r0, #0
   2d924:	str	r0, [r9]
   2d928:	str	r0, [r9, #4]
   2d92c:	ldr	r2, [lr, #40]	; 0x28
   2d930:	mov	r0, sl
   2d934:	mov	r1, lr
   2d938:	mov	r3, r9
   2d93c:	mov	r4, lr
   2d940:	bl	2ec90 <__flatcc_fb_coerce_scalar_type@@Base>
   2d944:	cmp	r0, #0
   2d948:	bne	2db20 <__flatcc_fb_build_schema@@Base+0x1b84>
   2d94c:	str	r4, [sp, #4]
   2d950:	ldr	r0, [sl, #212]	; 0xd4
   2d954:	cmp	r0, #0
   2d958:	beq	2db88 <__flatcc_fb_build_schema@@Base+0x1bec>
   2d95c:	ldr	r0, [r7, #16]
   2d960:	add	r0, r0, #72	; 0x48
   2d964:	mov	r1, r9
   2d968:	bl	2e930 <__flatcc_fb_build_schema@@Base+0x2994>
   2d96c:	cmp	r0, #0
   2d970:	bne	2db88 <__flatcc_fb_build_schema@@Base+0x1bec>
   2d974:	mov	r0, sl
   2d978:	mov	r1, r7
   2d97c:	movw	r2, #62438	; 0xf3e6
   2d980:	movt	r2, #4
   2d984:	ldr	r3, [sp, #4]
   2d988:	b	2db1c <__flatcc_fb_build_schema@@Base+0x1b80>
   2d98c:	ldr	r6, [sp, #44]	; 0x2c
   2d990:	ldr	r4, [sp, #20]
   2d994:	movw	r9, #61611	; 0xf0ab
   2d998:	movt	r9, #4
   2d99c:	ldr	r5, [sp, #40]	; 0x28
   2d9a0:	cmp	r5, #0
   2d9a4:	ldr	r0, [sp, #36]	; 0x24
   2d9a8:	bne	2da18 <__flatcc_fb_build_schema@@Base+0x1a7c>
   2d9ac:	cmp	r0, #0
   2d9b0:	beq	2d9e4 <__flatcc_fb_build_schema@@Base+0x1a48>
   2d9b4:	mov	r1, r0
   2d9b8:	ldr	r0, [sp, #32]
   2d9bc:	cmp	r0, #0
   2d9c0:	mov	r0, r1
   2d9c4:	bne	2d9e4 <__flatcc_fb_build_schema@@Base+0x1a48>
   2d9c8:	ldr	r1, [r0, #4]
   2d9cc:	mov	r0, sl
   2d9d0:	movw	r2, #62674	; 0xf4d2
   2d9d4:	movt	r2, #4
   2d9d8:	mov	r5, ip
   2d9dc:	bl	2e688 <__flatcc_fb_build_schema@@Base+0x26ec>
   2d9e0:	b	2da10 <__flatcc_fb_build_schema@@Base+0x1a74>
   2d9e4:	cmp	r0, #0
   2d9e8:	bne	2da50 <__flatcc_fb_build_schema@@Base+0x1ab4>
   2d9ec:	ldr	r0, [sp, #32]
   2d9f0:	cmp	r0, #0
   2d9f4:	beq	2da50 <__flatcc_fb_build_schema@@Base+0x1ab4>
   2d9f8:	mov	r0, sl
   2d9fc:	mov	r1, r7
   2da00:	movw	r2, #62735	; 0xf50f
   2da04:	movt	r2, #4
   2da08:	mov	r5, ip
   2da0c:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2da10:	mov	ip, r5
   2da14:	mov	r5, #1
   2da18:	ldrb	r0, [r7, #72]	; 0x48
   2da1c:	tst	r0, #128	; 0x80
   2da20:	beq	2d2a0 <__flatcc_fb_build_schema@@Base+0x1304>
   2da24:	ldr	r0, [sp, #12]
   2da28:	add	r0, r0, #1
   2da2c:	str	r0, [sp, #12]
   2da30:	cmp	ip, #0
   2da34:	bne	2d2a0 <__flatcc_fb_build_schema@@Base+0x1304>
   2da38:	mov	r0, sl
   2da3c:	mov	r1, r7
   2da40:	movw	r2, #63488	; 0xf800
   2da44:	movt	r2, #4
   2da48:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2da4c:	b	2d2a0 <__flatcc_fb_build_schema@@Base+0x1304>
   2da50:	ldr	r1, [sp, #36]	; 0x24
   2da54:	cmp	r1, #0
   2da58:	beq	2dabc <__flatcc_fb_build_schema@@Base+0x1b20>
   2da5c:	ldrh	r0, [r1, #16]
   2da60:	cmp	r0, #5
   2da64:	bne	2dba8 <__flatcc_fb_build_schema@@Base+0x1c0c>
   2da68:	ldrd	r0, [r1, #8]
   2da6c:	ldr	r2, [sp, #24]
   2da70:	ldrd	r2, [r2]
   2da74:	subs	r2, r0, r2
   2da78:	sbcs	r1, r1, r3
   2da7c:	bcs	2dbc8 <__flatcc_fb_build_schema@@Base+0x1c2c>
   2da80:	uxth	r0, r0
   2da84:	mov	r1, #0
   2da88:	ldr	r2, [sp, #28]
   2da8c:	strd	r0, [r2]
   2da90:	ldr	r2, [sp, #52]	; 0x34
   2da94:	subs	r1, r2, r0
   2da98:	ldr	r3, [sp, #48]	; 0x30
   2da9c:	sbcs	r1, r3, #0
   2daa0:	mov	r1, #0
   2daa4:	movwcc	r1, #1
   2daa8:	cmp	r1, #0
   2daac:	movne	r2, r0
   2dab0:	str	r2, [sp, #52]	; 0x34
   2dab4:	movwne	r3, #0
   2dab8:	str	r3, [sp, #48]	; 0x30
   2dabc:	mov	r5, #0
   2dac0:	ldr	r0, [sp, #32]
   2dac4:	cmp	r0, #0
   2dac8:	beq	2da18 <__flatcc_fb_build_schema@@Base+0x1a7c>
   2dacc:	ldr	r0, [sp, #28]
   2dad0:	ldr	r0, [r0]
   2dad4:	ldr	r1, [sp, #16]
   2dad8:	ldrb	r1, [r1, r0]
   2dadc:	cmp	r1, #0
   2dae0:	beq	2dbec <__flatcc_fb_build_schema@@Base+0x1c50>
   2dae4:	str	ip, [sp, #8]
   2dae8:	cmp	r1, #2
   2daec:	bne	2dc04 <__flatcc_fb_build_schema@@Base+0x1c68>
   2daf0:	ldr	r0, [sp, #36]	; 0x24
   2daf4:	ldr	r1, [r0, #4]
   2daf8:	mov	r0, sl
   2dafc:	movw	r2, #62883	; 0xf5a3
   2db00:	movt	r2, #4
   2db04:	b	2dcf0 <__flatcc_fb_build_schema@@Base+0x1d54>
   2db08:	mov	r0, sl
   2db0c:	mov	r1, r7
   2db10:	movw	r2, #62260	; 0xf334
   2db14:	movt	r2, #4
   2db18:	mov	r3, lr
   2db1c:	bl	2c400 <__flatcc_fb_build_schema@@Base+0x464>
   2db20:	mov	r0, #1
   2db24:	strh	r0, [r7, #24]
   2db28:	ldr	r6, [sp, #44]	; 0x2c
   2db2c:	ldr	r4, [sp, #20]
   2db30:	movw	r9, #61611	; 0xf0ab
   2db34:	movt	r9, #4
   2db38:	ldr	r5, [sp, #40]	; 0x28
   2db3c:	b	2d2a0 <__flatcc_fb_build_schema@@Base+0x1304>
   2db40:	ldr	r2, [lr, #40]	; 0x28
   2db44:	mov	r0, sl
   2db48:	mov	r1, r7
   2db4c:	mov	r3, r9
   2db50:	mov	r4, lr
   2db54:	bl	2ec90 <__flatcc_fb_coerce_scalar_type@@Base>
   2db58:	cmp	r0, #0
   2db5c:	bne	2db20 <__flatcc_fb_build_schema@@Base+0x1b84>
   2db60:	str	r4, [sp, #4]
   2db64:	ldr	r0, [sl, #212]	; 0xd4
   2db68:	cmp	r0, #0
   2db6c:	beq	2db88 <__flatcc_fb_build_schema@@Base+0x1bec>
   2db70:	ldr	r0, [r7, #16]
   2db74:	add	r0, r0, #72	; 0x48
   2db78:	mov	r1, r9
   2db7c:	bl	2e930 <__flatcc_fb_build_schema@@Base+0x2994>
   2db80:	cmp	r0, #0
   2db84:	beq	2dca4 <__flatcc_fb_build_schema@@Base+0x1d08>
   2db88:	ldr	r6, [sp, #44]	; 0x2c
   2db8c:	ldr	r4, [sp, #20]
   2db90:	movw	r9, #61611	; 0xf0ab
   2db94:	movt	r9, #4
   2db98:	ldr	r5, [sp, #40]	; 0x28
   2db9c:	ldr	ip, [sp, #8]
   2dba0:	ldr	lr, [sp, #4]
   2dba4:	b	2d9a0 <__flatcc_fb_build_schema@@Base+0x1a04>
   2dba8:	str	ip, [sp, #8]
   2dbac:	ldr	r1, [r1, #4]
   2dbb0:	cmp	r0, #4
   2dbb4:	bne	2dbdc <__flatcc_fb_build_schema@@Base+0x1c40>
   2dbb8:	mov	r0, sl
   2dbbc:	movw	r2, #62823	; 0xf567
   2dbc0:	movt	r2, #4
   2dbc4:	b	2dcf0 <__flatcc_fb_build_schema@@Base+0x1d54>
   2dbc8:	mov	r0, sl
   2dbcc:	mov	r1, r7
   2dbd0:	movw	r2, #62793	; 0xf549
   2dbd4:	movt	r2, #4
   2dbd8:	b	2da08 <__flatcc_fb_build_schema@@Base+0x1a6c>
   2dbdc:	mov	r0, sl
   2dbe0:	movw	r2, #62855	; 0xf587
   2dbe4:	movt	r2, #4
   2dbe8:	b	2dcf0 <__flatcc_fb_build_schema@@Base+0x1d54>
   2dbec:	ldr	r1, [sp, #16]
   2dbf0:	mov	r2, #1
   2dbf4:	strb	r2, [r1, r0]
   2dbf8:	cmp	lr, #0
   2dbfc:	bne	2dc30 <__flatcc_fb_build_schema@@Base+0x1c94>
   2dc00:	b	2da18 <__flatcc_fb_build_schema@@Base+0x1a7c>
   2dc04:	ldr	r0, [sp, #36]	; 0x24
   2dc08:	ldr	r1, [r0, #4]
   2dc0c:	mov	r0, sl
   2dc10:	movw	r2, #62937	; 0xf5d9
   2dc14:	movt	r2, #4
   2dc18:	str	lr, [sp, #4]
   2dc1c:	bl	2e688 <__flatcc_fb_build_schema@@Base+0x26ec>
   2dc20:	ldr	lr, [sp, #4]
   2dc24:	ldr	ip, [sp, #8]
   2dc28:	cmp	lr, #0
   2dc2c:	beq	2da18 <__flatcc_fb_build_schema@@Base+0x1a7c>
   2dc30:	ldrh	r0, [lr, #8]
   2dc34:	cmp	r0, #4
   2dc38:	bne	2da18 <__flatcc_fb_build_schema@@Base+0x1a7c>
   2dc3c:	str	ip, [sp, #8]
   2dc40:	ldrh	r0, [r7, #24]
   2dc44:	ldr	r1, [sp, #28]
   2dc48:	ldrd	r2, [r1]
   2dc4c:	rsbs	r1, r2, #1
   2dc50:	rscs	r1, r3, #0
   2dc54:	bcc	2dc70 <__flatcc_fb_build_schema@@Base+0x1cd4>
   2dc58:	cmp	r0, #11
   2dc5c:	movw	r2, #63065	; 0xf659
   2dc60:	movt	r2, #4
   2dc64:	movw	r0, #62985	; 0xf609
   2dc68:	movt	r0, #4
   2dc6c:	b	2dce0 <__flatcc_fb_build_schema@@Base+0x1d44>
   2dc70:	sub	r1, r2, #1
   2dc74:	ldr	r2, [sp, #16]
   2dc78:	ldrb	r2, [r2, r1]
   2dc7c:	cmp	r2, #0
   2dc80:	beq	2dcbc <__flatcc_fb_build_schema@@Base+0x1d20>
   2dc84:	cmp	r2, #2
   2dc88:	bne	2dccc <__flatcc_fb_build_schema@@Base+0x1d30>
   2dc8c:	cmp	r0, #11
   2dc90:	movw	r2, #63235	; 0xf703
   2dc94:	movt	r2, #4
   2dc98:	movw	r0, #63138	; 0xf6a2
   2dc9c:	movt	r0, #4
   2dca0:	b	2dce0 <__flatcc_fb_build_schema@@Base+0x1d44>
   2dca4:	mov	r0, sl
   2dca8:	mov	r1, r7
   2dcac:	movw	r2, #62390	; 0xf3b6
   2dcb0:	movt	r2, #4
   2dcb4:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2dcb8:	b	2db20 <__flatcc_fb_build_schema@@Base+0x1b84>
   2dcbc:	ldr	r0, [sp, #16]
   2dcc0:	mov	r2, #2
   2dcc4:	strb	r2, [r0, r1]
   2dcc8:	b	2dcf8 <__flatcc_fb_build_schema@@Base+0x1d5c>
   2dccc:	cmp	r0, #11
   2dcd0:	movw	r2, #63410	; 0xf7b2
   2dcd4:	movt	r2, #4
   2dcd8:	movw	r0, #63325	; 0xf75d
   2dcdc:	movt	r0, #4
   2dce0:	moveq	r2, r0
   2dce4:	ldr	r0, [sp, #36]	; 0x24
   2dce8:	ldr	r1, [r0, #4]
   2dcec:	mov	r0, sl
   2dcf0:	bl	2e688 <__flatcc_fb_build_schema@@Base+0x26ec>
   2dcf4:	mov	r5, #1
   2dcf8:	ldr	ip, [sp, #8]
   2dcfc:	b	2da18 <__flatcc_fb_build_schema@@Base+0x1a7c>
   2dd00:	mov	r0, #0
   2dd04:	cmp	r5, #0
   2dd08:	ldr	r2, [sp, #12]
   2dd0c:	ldr	r9, [sp, #16]
   2dd10:	bne	2dd54 <__flatcc_fb_build_schema@@Base+0x1db8>
   2dd14:	b	2dd40 <__flatcc_fb_build_schema@@Base+0x1da4>
   2dd18:	mov	r2, #0
   2dd1c:	mov	r0, #0
   2dd20:	str	r0, [sp, #52]	; 0x34
   2dd24:	mov	r0, #0
   2dd28:	str	r0, [sp, #48]	; 0x30
   2dd2c:	mov	r0, #0
   2dd30:	str	r0, [sp, #32]
   2dd34:	mov	r0, #0
   2dd38:	str	r0, [sp, #56]	; 0x38
   2dd3c:	mov	r6, #0
   2dd40:	ldr	r0, [sp, #56]	; 0x38
   2dd44:	str	r0, [r8, #96]	; 0x60
   2dd48:	str	r6, [r8, #100]	; 0x64
   2dd4c:	mov	r0, #1
   2dd50:	mov	r5, #0
   2dd54:	ldr	r1, [sp, #52]	; 0x34
   2dd58:	ldr	r3, [sp, #56]	; 0x38
   2dd5c:	subs	r1, r1, r3
   2dd60:	ldr	r1, [sp, #48]	; 0x30
   2dd64:	sbcs	r1, r1, r6
   2dd68:	bcc	2de60 <__flatcc_fb_build_schema@@Base+0x1ec4>
   2dd6c:	ldr	r1, [sp, #56]	; 0x38
   2dd70:	orrs	r1, r1, r6
   2dd74:	beq	2de60 <__flatcc_fb_build_schema@@Base+0x1ec4>
   2dd78:	ldr	r1, [sp, #32]
   2dd7c:	cmp	r1, #0
   2dd80:	cmpne	r0, #0
   2dd84:	beq	2de60 <__flatcc_fb_build_schema@@Base+0x1ec4>
   2dd88:	ldr	r0, [sp, #52]	; 0x34
   2dd8c:	ldr	r1, [sp, #48]	; 0x30
   2dd90:	orrs	r0, r0, r1
   2dd94:	mov	r5, #1
   2dd98:	beq	2de60 <__flatcc_fb_build_schema@@Base+0x1ec4>
   2dd9c:	str	r2, [sp, #12]
   2dda0:	mov	r7, r8
   2dda4:	mov	r6, #0
   2dda8:	mov	r4, #10
   2ddac:	add	r8, sp, #108	; 0x6c
   2ddb0:	mov	r5, #0
   2ddb4:	b	2ddd4 <__flatcc_fb_build_schema@@Base+0x1e38>
   2ddb8:	adds	r6, r6, #1
   2ddbc:	adc	r5, r5, #0
   2ddc0:	ldr	r0, [sp, #52]	; 0x34
   2ddc4:	subs	r0, r6, r0
   2ddc8:	ldr	r0, [sp, #48]	; 0x30
   2ddcc:	sbcs	r0, r5, r0
   2ddd0:	bcs	2de38 <__flatcc_fb_build_schema@@Base+0x1e9c>
   2ddd4:	ldrb	r0, [r9, r6]
   2ddd8:	cmp	r0, #0
   2dddc:	bne	2ddb8 <__flatcc_fb_build_schema@@Base+0x1e1c>
   2dde0:	cmp	r4, #0
   2dde4:	beq	2de40 <__flatcc_fb_build_schema@@Base+0x1ea4>
   2dde8:	mov	r0, r8
   2ddec:	movw	r1, #63559	; 0xf847
   2ddf0:	movt	r1, #4
   2ddf4:	mov	r2, r6
   2ddf8:	mov	r3, r5
   2ddfc:	bl	14a60 <sprintf@plt>
   2de00:	mov	r0, sl
   2de04:	mov	r1, r7
   2de08:	mov	r2, r8
   2de0c:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2de10:	sub	r4, r4, #1
   2de14:	b	2ddb8 <__flatcc_fb_build_schema@@Base+0x1e1c>
   2de18:	movw	r2, #61645	; 0xf0cd
   2de1c:	movt	r2, #4
   2de20:	mov	r0, sl
   2de24:	mov	r1, r7
   2de28:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2de2c:	mvn	r0, #0
   2de30:	sub	sp, fp, #28
   2de34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2de38:	mov	r8, r7
   2de3c:	b	2de58 <__flatcc_fb_build_schema@@Base+0x1ebc>
   2de40:	movw	r2, #63537	; 0xf831
   2de44:	movt	r2, #4
   2de48:	mov	r0, sl
   2de4c:	mov	r8, r7
   2de50:	mov	r1, r7
   2de54:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2de58:	ldr	r2, [sp, #12]
   2de5c:	mov	r5, #1
   2de60:	mov	r0, #0
   2de64:	cmp	r2, #0
   2de68:	beq	2dea4 <__flatcc_fb_build_schema@@Base+0x1f08>
   2de6c:	ldrh	r1, [r8, #10]
   2de70:	orr	r1, r1, #8
   2de74:	strh	r1, [r8, #10]
   2de78:	cmp	r2, #2
   2de7c:	blt	2dea4 <__flatcc_fb_build_schema@@Base+0x1f08>
   2de80:	ldr	r1, [sl, #156]	; 0x9c
   2de84:	cmp	r1, #0
   2de88:	bne	2dea4 <__flatcc_fb_build_schema@@Base+0x1f08>
   2de8c:	movw	r2, #60957	; 0xee1d
   2de90:	movt	r2, #4
   2de94:	mov	r0, sl
   2de98:	mov	r1, r8
   2de9c:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2dea0:	mvn	r0, #0
   2dea4:	cmp	r5, #0
   2dea8:	mvnne	r0, #0
   2deac:	sub	sp, fp, #28
   2deb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2deb4:	movw	r0, #51484	; 0xc91c
   2deb8:	movt	r0, #3
   2debc:	movw	r1, #58715	; 0xe55b
   2dec0:	movt	r1, #4
   2dec4:	movw	r3, #61541	; 0xf065
   2dec8:	movt	r3, #4
   2decc:	movw	r2, #769	; 0x301
   2ded0:	bl	14ab4 <__assert_fail@plt>
   2ded4:	movw	r0, #61596	; 0xf09c
   2ded8:	movt	r0, #4
   2dedc:	movw	r1, #58715	; 0xe55b
   2dee0:	movt	r1, #4
   2dee4:	movw	r3, #61541	; 0xf065
   2dee8:	movt	r3, #4
   2deec:	movw	r2, #770	; 0x302
   2def0:	bl	14ab4 <__assert_fail@plt>
   2def4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2def8:	add	fp, sp, #28
   2defc:	sub	sp, sp, #52	; 0x34
   2df00:	mov	r4, r0
   2df04:	ldrh	r0, [r1, #8]
   2df08:	cmp	r0, #2
   2df0c:	bne	2e108 <__flatcc_fb_build_schema@@Base+0x216c>
   2df10:	mov	r5, r1
   2df14:	ldrh	r0, [r1, #48]	; 0x30
   2df18:	cmp	r0, #0
   2df1c:	bne	2e128 <__flatcc_fb_build_schema@@Base+0x218c>
   2df20:	ldr	r0, [r5, #28]
   2df24:	cmp	r0, #0
   2df28:	beq	2df40 <__flatcc_fb_build_schema@@Base+0x1fa4>
   2df2c:	movw	r2, #64036	; 0xfa24
   2df30:	movt	r2, #4
   2df34:	mov	r0, r4
   2df38:	mov	r1, r5
   2df3c:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2df40:	ldr	r6, [r5, #20]
   2df44:	cmp	r6, #0
   2df48:	beq	2e0dc <__flatcc_fb_build_schema@@Base+0x2140>
   2df4c:	add	r7, r5, #56	; 0x38
   2df50:	mov	sl, #1
   2df54:	movw	r8, #64104	; 0xfa68
   2df58:	movt	r8, #4
   2df5c:	movw	r9, #64072	; 0xfa48
   2df60:	movt	r9, #4
   2df64:	b	2df88 <__flatcc_fb_build_schema@@Base+0x1fec>
   2df68:	mov	r3, r0
   2df6c:	mov	r0, r4
   2df70:	mov	r1, r6
   2df74:	mov	r2, r9
   2df78:	bl	2c400 <__flatcc_fb_build_schema@@Base+0x464>
   2df7c:	ldr	r6, [r6]
   2df80:	cmp	r6, #0
   2df84:	beq	2e0dc <__flatcc_fb_build_schema@@Base+0x2140>
   2df88:	mov	r0, r7
   2df8c:	mov	r1, r6
   2df90:	bl	2c3f8 <__flatcc_fb_build_schema@@Base+0x45c>
   2df94:	cmp	r0, #0
   2df98:	bne	2df68 <__flatcc_fb_build_schema@@Base+0x1fcc>
   2df9c:	ldrh	r0, [r6, #8]
   2dfa0:	cmp	r0, #5
   2dfa4:	bne	2e0e8 <__flatcc_fb_build_schema@@Base+0x214c>
   2dfa8:	ldrh	r0, [r6, #56]	; 0x38
   2dfac:	cmp	r0, #0
   2dfb0:	movne	r0, r4
   2dfb4:	movne	r1, r6
   2dfb8:	movne	r2, r8
   2dfbc:	blne	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2dfc0:	ldrh	r0, [r6, #24]
   2dfc4:	cmp	r0, #1
   2dfc8:	beq	2df7c <__flatcc_fb_build_schema@@Base+0x1fe0>
   2dfcc:	cmp	r0, #12
   2dfd0:	beq	2dfe8 <__flatcc_fb_build_schema@@Base+0x204c>
   2dfd4:	mov	r0, r4
   2dfd8:	mov	r1, r6
   2dfdc:	movw	r2, #64168	; 0xfaa8
   2dfe0:	movt	r2, #4
   2dfe4:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2dfe8:	ldr	r2, [r6, #32]
   2dfec:	ldr	r1, [r5, #12]
   2dff0:	mov	r0, r4
   2dff4:	bl	2e374 <__flatcc_fb_build_schema@@Base+0x23d8>
   2dff8:	cmp	r0, #0
   2dffc:	beq	2e02c <__flatcc_fb_build_schema@@Base+0x2090>
   2e000:	mov	r3, r0
   2e004:	ldrh	r0, [r0, #8]
   2e008:	cmp	r0, #0
   2e00c:	beq	2e04c <__flatcc_fb_build_schema@@Base+0x20b0>
   2e010:	mov	r0, r4
   2e014:	mov	r1, r6
   2e018:	movw	r2, #64279	; 0xfb17
   2e01c:	movt	r2, #4
   2e020:	bl	2c400 <__flatcc_fb_build_schema@@Base+0x464>
   2e024:	strh	sl, [r6, #24]
   2e028:	b	2df7c <__flatcc_fb_build_schema@@Base+0x1fe0>
   2e02c:	ldr	r1, [r6, #32]
   2e030:	mov	r0, r4
   2e034:	movw	r2, #64229	; 0xfae5
   2e038:	movt	r2, #4
   2e03c:	mov	r3, r6
   2e040:	bl	28318 <error_ref_sym@@Base>
   2e044:	strh	sl, [r6, #24]
   2e048:	b	2df7c <__flatcc_fb_build_schema@@Base+0x1fe0>
   2e04c:	str	r3, [r6, #32]
   2e050:	mov	r0, #14
   2e054:	strh	r0, [r6, #40]	; 0x28
   2e058:	ldr	r2, [r6, #16]
   2e05c:	ldr	r1, [r5, #12]
   2e060:	mov	r0, r4
   2e064:	bl	2e374 <__flatcc_fb_build_schema@@Base+0x23d8>
   2e068:	cmp	r0, #0
   2e06c:	beq	2e094 <__flatcc_fb_build_schema@@Base+0x20f8>
   2e070:	mov	r3, r0
   2e074:	ldrh	r0, [r0, #8]
   2e078:	cmp	r0, #0
   2e07c:	beq	2e0a8 <__flatcc_fb_build_schema@@Base+0x210c>
   2e080:	mov	r0, r4
   2e084:	mov	r1, r6
   2e088:	movw	r2, #64384	; 0xfb80
   2e08c:	movt	r2, #4
   2e090:	b	2e020 <__flatcc_fb_build_schema@@Base+0x2084>
   2e094:	ldr	r1, [r6, #16]
   2e098:	mov	r0, r4
   2e09c:	movw	r2, #64333	; 0xfb4d
   2e0a0:	movt	r2, #4
   2e0a4:	b	2e03c <__flatcc_fb_build_schema@@Base+0x20a0>
   2e0a8:	mov	r0, #0
   2e0ac:	str	r0, [r6, #88]	; 0x58
   2e0b0:	str	r0, [r6, #92]	; 0x5c
   2e0b4:	str	r3, [r6, #16]
   2e0b8:	mov	r0, #14
   2e0bc:	strh	r0, [r6, #24]
   2e0c0:	ldr	r1, [r6, #64]	; 0x40
   2e0c4:	mov	r0, r4
   2e0c8:	mov	r2, #4
   2e0cc:	add	r3, sp, #4
   2e0d0:	bl	2e4a4 <__flatcc_fb_build_schema@@Base+0x2508>
   2e0d4:	strh	r0, [r6, #72]	; 0x48
   2e0d8:	b	2df7c <__flatcc_fb_build_schema@@Base+0x1fe0>
   2e0dc:	mov	r0, #0
   2e0e0:	sub	sp, fp, #28
   2e0e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e0e8:	movw	r2, #61645	; 0xf0cd
   2e0ec:	movt	r2, #4
   2e0f0:	mov	r0, r4
   2e0f4:	mov	r1, r6
   2e0f8:	bl	2ce80 <__flatcc_fb_build_schema@@Base+0xee4>
   2e0fc:	mvn	r0, #0
   2e100:	sub	sp, fp, #28
   2e104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e108:	movw	r0, #63938	; 0xf9c2
   2e10c:	movt	r0, #4
   2e110:	movw	r1, #58715	; 0xe55b
   2e114:	movt	r1, #4
   2e118:	movw	r3, #63975	; 0xf9e7
   2e11c:	movt	r3, #4
   2e120:	movw	r2, #1128	; 0x468
   2e124:	bl	14ab4 <__assert_fail@plt>
   2e128:	movw	r0, #61596	; 0xf09c
   2e12c:	movt	r0, #4
   2e130:	movw	r1, #58715	; 0xe55b
   2e134:	movt	r1, #4
   2e138:	movw	r3, #63975	; 0xf9e7
   2e13c:	movt	r3, #4
   2e140:	movw	r2, #1129	; 0x469
   2e144:	bl	14ab4 <__assert_fail@plt>
   2e148:	ldr	r1, [r0]
   2e14c:	cmp	r1, #0
   2e150:	moveq	r2, #0
   2e154:	streq	r2, [r0]
   2e158:	bxeq	lr
   2e15c:	mov	r3, #0
   2e160:	mov	r2, r1
   2e164:	ldr	r1, [r1, #120]	; 0x78
   2e168:	str	r3, [r2, #120]	; 0x78
   2e16c:	cmp	r1, #0
   2e170:	mov	r3, r2
   2e174:	bne	2e160 <__flatcc_fb_build_schema@@Base+0x21c4>
   2e178:	str	r2, [r0]
   2e17c:	bx	lr
   2e180:	sub	sp, sp, #4
   2e184:	mov	r1, #0
   2e188:	str	r1, [sp]
   2e18c:	mov	r2, sp
   2e190:	cmp	r0, #0
   2e194:	beq	2e1ac <__flatcc_fb_build_schema@@Base+0x2210>
   2e198:	str	r0, [r2]
   2e19c:	mov	r2, r0
   2e1a0:	ldr	r0, [r2], #108	; 0x6c
   2e1a4:	cmp	r0, #0
   2e1a8:	bne	2e198 <__flatcc_fb_build_schema@@Base+0x21fc>
   2e1ac:	str	r1, [r2]
   2e1b0:	pop	{r0}		; (ldr r0, [sp], #4)
   2e1b4:	bx	lr
   2e1b8:	push	{r4, r5, r6, r7, fp, lr}
   2e1bc:	add	fp, sp, #16
   2e1c0:	sub	sp, sp, #80	; 0x50
   2e1c4:	vmov.i32	q8, #0	; 0x00000000
   2e1c8:	mov	r7, #32
   2e1cc:	add	r2, sp, #40	; 0x28
   2e1d0:	mov	r3, r2
   2e1d4:	vst1.64	{d16-d17}, [r3], r7
   2e1d8:	mov	r6, #0
   2e1dc:	str	r6, [r3]
   2e1e0:	add	r3, r2, #16
   2e1e4:	vst1.64	{d16-d17}, [r3]
   2e1e8:	mov	r4, sp
   2e1ec:	add	r5, r4, #16
   2e1f0:	vst1.64	{d16-d17}, [r5]
   2e1f4:	mov	r3, r4
   2e1f8:	vst1.64	{d16-d17}, [r3], r7
   2e1fc:	str	r6, [r3]
   2e200:	cmp	r1, #0
   2e204:	beq	2e2f8 <__flatcc_fb_build_schema@@Base+0x235c>
   2e208:	movw	ip, #65535	; 0xffff
   2e20c:	mov	lr, #1
   2e210:	movw	r3, #34432	; 0x8680
   2e214:	mov	r5, r1
   2e218:	b	2e238 <__flatcc_fb_build_schema@@Base+0x229c>
   2e21c:	add	r7, r2, r6, lsl #2
   2e220:	str	r5, [r7]
   2e224:	add	r7, r5, #108	; 0x6c
   2e228:	str	r7, [r4, r6, lsl #2]
   2e22c:	ldr	r5, [r5]
   2e230:	cmp	r5, #0
   2e234:	beq	2e2f8 <__flatcc_fb_build_schema@@Base+0x235c>
   2e238:	ldrh	r6, [r5, #24]
   2e23c:	cmp	r6, #15
   2e240:	bhi	2e2cc <__flatcc_fb_build_schema@@Base+0x2330>
   2e244:	tst	r3, lr, lsl r6
   2e248:	beq	2e28c <__flatcc_fb_build_schema@@Base+0x22f0>
   2e24c:	ldr	r6, [r0, #192]	; 0xc0
   2e250:	tst	r6, ip
   2e254:	beq	2e2d8 <__flatcc_fb_build_schema@@Base+0x233c>
   2e258:	uxth	r6, r6
   2e25c:	lsr	r6, r6, #1
   2e260:	clz	r6, r6
   2e264:	rsb	r6, r6, #32
   2e268:	uxth	r7, r6
   2e26c:	cmp	r7, #7
   2e270:	movcs	r6, #7
   2e274:	uxth	r6, r6
   2e278:	ldr	r7, [r2, r6, lsl #2]
   2e27c:	cmp	r7, #0
   2e280:	beq	2e21c <__flatcc_fb_build_schema@@Base+0x2280>
   2e284:	ldr	r7, [r4, r6, lsl #2]
   2e288:	b	2e220 <__flatcc_fb_build_schema@@Base+0x2284>
   2e28c:	cmp	r6, #14
   2e290:	bne	2e2c4 <__flatcc_fb_build_schema@@Base+0x2328>
   2e294:	ldr	r6, [r5, #16]
   2e298:	ldrh	r7, [r6, #8]
   2e29c:	cmp	r7, #1
   2e2a0:	beq	2e2b4 <__flatcc_fb_build_schema@@Base+0x2318>
   2e2a4:	cmp	r7, #4
   2e2a8:	beq	2e24c <__flatcc_fb_build_schema@@Base+0x22b0>
   2e2ac:	cmp	r7, #3
   2e2b0:	bne	2e24c <__flatcc_fb_build_schema@@Base+0x22b0>
   2e2b4:	ldrh	r6, [r6, #104]	; 0x68
   2e2b8:	tst	r6, ip
   2e2bc:	bne	2e258 <__flatcc_fb_build_schema@@Base+0x22bc>
   2e2c0:	b	2e2d8 <__flatcc_fb_build_schema@@Base+0x233c>
   2e2c4:	cmp	r6, #1
   2e2c8:	beq	2e358 <__flatcc_fb_build_schema@@Base+0x23bc>
   2e2cc:	ldrh	r6, [r5, #74]	; 0x4a
   2e2d0:	tst	r6, ip
   2e2d4:	bne	2e258 <__flatcc_fb_build_schema@@Base+0x22bc>
   2e2d8:	movw	r0, #64439	; 0xfbb7
   2e2dc:	movt	r0, #4
   2e2e0:	movw	r1, #58715	; 0xe55b
   2e2e4:	movt	r1, #4
   2e2e8:	movw	r3, #64445	; 0xfbbd
   2e2ec:	movt	r3, #4
   2e2f0:	movw	r2, #1521	; 0x5f1
   2e2f4:	bl	14ab4 <__assert_fail@plt>
   2e2f8:	add	r0, r2, #32
   2e2fc:	str	r0, [sp, #32]
   2e300:	mov	r0, #8
   2e304:	b	2e324 <__flatcc_fb_build_schema@@Base+0x2388>
   2e308:	mov	r0, #0
   2e30c:	ldr	r1, [r4, r1, lsl #2]
   2e310:	uxth	r3, r0
   2e314:	ldr	r7, [r2, r3, lsl #2]
   2e318:	str	r7, [r1]
   2e31c:	cmp	r3, #0
   2e320:	beq	2e34c <__flatcc_fb_build_schema@@Base+0x23b0>
   2e324:	uxth	r1, r0
   2e328:	mov	r0, r1
   2e32c:	cmp	r0, #0
   2e330:	beq	2e308 <__flatcc_fb_build_schema@@Base+0x236c>
   2e334:	sub	r0, r0, #1
   2e338:	uxth	r3, r0
   2e33c:	ldr	r3, [r2, r3, lsl #2]
   2e340:	cmp	r3, #0
   2e344:	beq	2e32c <__flatcc_fb_build_schema@@Base+0x2390>
   2e348:	b	2e30c <__flatcc_fb_build_schema@@Base+0x2370>
   2e34c:	ldr	r0, [sp, #72]	; 0x48
   2e350:	sub	sp, fp, #16
   2e354:	pop	{r4, r5, r6, r7, fp, pc}
   2e358:	mov	r0, r1
   2e35c:	bl	2e180 <__flatcc_fb_build_schema@@Base+0x21e4>
   2e360:	sub	sp, fp, #16
   2e364:	pop	{r4, r5, r6, r7, fp, pc}
   2e368:	mov	r2, r1
   2e36c:	mov	r1, #0
   2e370:	b	2e688 <__flatcc_fb_build_schema@@Base+0x26ec>
   2e374:	mov	r3, #0
   2e378:	b	2eb58 <__flatcc_fb_build_schema@@Base+0x2bbc>
   2e37c:	mov	r3, #0
   2e380:	b	28318 <error_ref_sym@@Base>
   2e384:	cmp	r2, #0
   2e388:	bxeq	lr
   2e38c:	movw	ip, #403	; 0x193
   2e390:	movt	ip, #256	; 0x100
   2e394:	ldrb	r3, [r1], #1
   2e398:	eor	r0, r0, r3
   2e39c:	mul	r0, r0, ip
   2e3a0:	subs	r2, r2, #1
   2e3a4:	bne	2e394 <__flatcc_fb_build_schema@@Base+0x23f8>
   2e3a8:	bx	lr
   2e3ac:	push	{fp, lr}
   2e3b0:	mov	fp, sp
   2e3b4:	sub	sp, sp, #8
   2e3b8:	mov	ip, #0
   2e3bc:	str	ip, [sp]
   2e3c0:	str	ip, [sp, #4]
   2e3c4:	bl	28188 <__flatcc_error_report@@Base>
   2e3c8:	mov	sp, fp
   2e3cc:	pop	{fp, pc}
   2e3d0:	push	{r4, r5, r6, sl, fp, lr}
   2e3d4:	add	fp, sp, #16
   2e3d8:	mov	r4, r0
   2e3dc:	ldr	r1, [r0, #44]	; 0x2c
   2e3e0:	ldr	r0, [r0, #52]	; 0x34
   2e3e4:	add	r2, r0, #32
   2e3e8:	cmp	r2, r1
   2e3ec:	bls	2e424 <__flatcc_fb_build_schema@@Base+0x2488>
   2e3f0:	mov	r6, #65536	; 0x10000
   2e3f4:	mov	r0, #65536	; 0x10000
   2e3f8:	mov	r1, #1
   2e3fc:	bl	148f8 <calloc@plt>
   2e400:	mov	r5, r0
   2e404:	bl	2e434 <__flatcc_fb_build_schema@@Base+0x2498>
   2e408:	ldr	r0, [r4, #48]	; 0x30
   2e40c:	mov	r1, r5
   2e410:	str	r0, [r1], r6
   2e414:	add	r0, r5, #16
   2e418:	str	r1, [r4, #44]	; 0x2c
   2e41c:	str	r5, [r4, #48]	; 0x30
   2e420:	str	r0, [r4, #52]	; 0x34
   2e424:	ldr	r1, [r4, #52]	; 0x34
   2e428:	add	r1, r1, #32
   2e42c:	str	r1, [r4, #52]	; 0x34
   2e430:	pop	{r4, r5, r6, sl, fp, pc}
   2e434:	cmp	r0, #0
   2e438:	bxne	lr
   2e43c:	push	{fp, lr}
   2e440:	mov	fp, sp
   2e444:	movw	r0, #8368	; 0x20b0
   2e448:	movt	r0, #6
   2e44c:	ldr	r3, [r0]
   2e450:	movw	r0, #25395	; 0x6333
   2e454:	movt	r0, #3
   2e458:	mov	r1, #34	; 0x22
   2e45c:	mov	r2, #1
   2e460:	bl	1497c <fwrite@plt>
   2e464:	mov	r0, #1
   2e468:	bl	149c4 <exit@plt>
   2e46c:	ldr	r0, [r0, #16]
   2e470:	movw	r1, #999	; 0x3e7
   2e474:	add	r0, r0, r1
   2e478:	cmp	r0, #27
   2e47c:	movhi	r0, #0
   2e480:	bxhi	lr
   2e484:	movw	r1, #64604	; 0xfc5c
   2e488:	movt	r1, #4
   2e48c:	ldr	r0, [r1, r0, lsl #2]
   2e490:	bx	lr
   2e494:	movw	r1, #64556	; 0xfc2c
   2e498:	movt	r1, #4
   2e49c:	ldr	r0, [r1, r0, lsl #2]
   2e4a0:	bx	lr
   2e4a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e4a8:	add	fp, sp, #28
   2e4ac:	sub	sp, sp, #4
   2e4b0:	mov	r5, r1
   2e4b4:	mov	r4, r0
   2e4b8:	vmov.i32	q8, #0	; 0x00000000
   2e4bc:	mov	r0, #32
   2e4c0:	mov	r1, r3
   2e4c4:	vst1.32	{d16-d17}, [r1], r0
   2e4c8:	vst1.32	{d16-d17}, [r1]
   2e4cc:	add	r0, r3, #16
   2e4d0:	vst1.32	{d16-d17}, [r0]
   2e4d4:	cmp	r5, #0
   2e4d8:	beq	2e64c <__flatcc_fb_build_schema@@Base+0x26b0>
   2e4dc:	mov	r6, r3
   2e4e0:	mov	r7, r2
   2e4e4:	mov	r9, #0
   2e4e8:	mvn	sl, #98	; 0x62
   2e4ec:	mov	r8, #1
   2e4f0:	b	2e51c <__flatcc_fb_build_schema@@Base+0x2580>
   2e4f4:	ldr	r1, [r5, #4]
   2e4f8:	mov	r0, r4
   2e4fc:	movw	r2, #60191	; 0xeb1f
   2e500:	movt	r2, #4
   2e504:	bl	2e688 <__flatcc_fb_build_schema@@Base+0x26ec>
   2e508:	ldr	r5, [r5]
   2e50c:	cmp	sl, #0
   2e510:	addne	sl, sl, #1
   2e514:	cmpne	r5, #0
   2e518:	beq	2e62c <__flatcc_fb_build_schema@@Base+0x2690>
   2e51c:	ldr	r1, [r5, #4]
   2e520:	ldr	r0, [r4, #412]	; 0x19c
   2e524:	add	r0, r0, #16
   2e528:	bl	2e678 <__flatcc_fb_build_schema@@Base+0x26dc>
   2e52c:	cmp	r0, #0
   2e530:	beq	2e4f4 <__flatcc_fb_build_schema@@Base+0x2558>
   2e534:	ldr	r0, [r0, #24]
   2e538:	cmp	r0, #0
   2e53c:	beq	2e508 <__flatcc_fb_build_schema@@Base+0x256c>
   2e540:	tst	r7, r8, lsl r0
   2e544:	beq	2e570 <__flatcc_fb_build_schema@@Base+0x25d4>
   2e548:	lsl	r1, r8, r0
   2e54c:	ldr	r2, [r6, r0, lsl #2]
   2e550:	orr	r9, r9, r1
   2e554:	cmp	r2, #0
   2e558:	beq	2e584 <__flatcc_fb_build_schema@@Base+0x25e8>
   2e55c:	ldr	r1, [r5, #4]
   2e560:	mov	r0, r4
   2e564:	movw	r2, #60267	; 0xeb6b
   2e568:	movt	r2, #4
   2e56c:	b	2e504 <__flatcc_fb_build_schema@@Base+0x2568>
   2e570:	ldr	r1, [r5, #4]
   2e574:	mov	r0, r4
   2e578:	movw	r2, #60222	; 0xeb3e
   2e57c:	movt	r2, #4
   2e580:	b	2e504 <__flatcc_fb_build_schema@@Base+0x2568>
   2e584:	str	r5, [r6, r0, lsl #2]
   2e588:	movw	r1, #3500	; 0xdac
   2e58c:	tst	r8, r1, lsr r0
   2e590:	beq	2e5b4 <__flatcc_fb_build_schema@@Base+0x2618>
   2e594:	ldrh	r1, [r5, #16]
   2e598:	cmp	r1, #0
   2e59c:	beq	2e5b4 <__flatcc_fb_build_schema@@Base+0x2618>
   2e5a0:	ldr	r1, [r5, #4]
   2e5a4:	mov	r0, r4
   2e5a8:	movw	r2, #60305	; 0xeb91
   2e5ac:	movt	r2, #4
   2e5b0:	b	2e504 <__flatcc_fb_build_schema@@Base+0x2568>
   2e5b4:	sub	r0, r0, #1
   2e5b8:	cmp	r0, #8
   2e5bc:	bhi	2e508 <__flatcc_fb_build_schema@@Base+0x256c>
   2e5c0:	add	r1, pc, #0
   2e5c4:	ldr	pc, [r1, r0, lsl #2]
   2e5c8:	andeq	lr, r2, ip, ror #11
   2e5cc:	andeq	lr, r2, r8, lsl #10
   2e5d0:	andeq	lr, r2, r8, lsl #10
   2e5d4:	andeq	lr, r2, ip, ror #11
   2e5d8:	andeq	lr, r2, r8, lsl #10
   2e5dc:	andeq	lr, r2, ip, lsl #12
   2e5e0:	andeq	lr, r2, r8, lsl #10
   2e5e4:	andeq	lr, r2, r8, lsl #10
   2e5e8:	andeq	lr, r2, ip, lsl #12
   2e5ec:	ldrh	r0, [r5, #16]
   2e5f0:	cmp	r0, #5
   2e5f4:	beq	2e508 <__flatcc_fb_build_schema@@Base+0x256c>
   2e5f8:	ldr	r1, [r5, #4]
   2e5fc:	mov	r0, r4
   2e600:	movw	r2, #60378	; 0xebda
   2e604:	movt	r2, #4
   2e608:	b	2e504 <__flatcc_fb_build_schema@@Base+0x2568>
   2e60c:	ldrh	r0, [r5, #16]
   2e610:	cmp	r0, #2
   2e614:	beq	2e508 <__flatcc_fb_build_schema@@Base+0x256c>
   2e618:	ldr	r1, [r5, #4]
   2e61c:	mov	r0, r4
   2e620:	movw	r2, #60345	; 0xebb9
   2e624:	movt	r2, #4
   2e628:	b	2e504 <__flatcc_fb_build_schema@@Base+0x2568>
   2e62c:	cmp	r5, #0
   2e630:	beq	2e650 <__flatcc_fb_build_schema@@Base+0x26b4>
   2e634:	ldr	r1, [r5, #4]
   2e638:	movw	r2, #60422	; 0xec06
   2e63c:	movt	r2, #4
   2e640:	mov	r0, r4
   2e644:	bl	2e688 <__flatcc_fb_build_schema@@Base+0x26ec>
   2e648:	b	2e650 <__flatcc_fb_build_schema@@Base+0x26b4>
   2e64c:	mov	r9, #0
   2e650:	uxth	r0, r9
   2e654:	sub	sp, fp, #28
   2e658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e65c:	push	{fp, lr}
   2e660:	mov	fp, sp
   2e664:	mov	r2, #1
   2e668:	bl	3417c <fb_value_set_insert_item@@Base>
   2e66c:	cmp	r0, #0
   2e670:	movwne	r0, #1
   2e674:	pop	{fp, pc}
   2e678:	ldr	r3, [r1]
   2e67c:	ldr	r2, [r1, #4]
   2e680:	mov	r1, r3
   2e684:	b	33bcc <fb_name_table_find@@Base>
   2e688:	mov	r3, #0
   2e68c:	b	2e3ac <__flatcc_fb_build_schema@@Base+0x2410>
   2e690:	push	{r4, sl, fp, lr}
   2e694:	add	fp, sp, #8
   2e698:	mov	ip, r0
   2e69c:	subs	r2, r0, #1
   2e6a0:	sbc	r3, r1, #0
   2e6a4:	mov	r0, #0
   2e6a8:	rsbs	r2, r2, #255	; 0xff
   2e6ac:	rscs	r2, r3, #0
   2e6b0:	bcc	2e6f4 <__flatcc_fb_build_schema@@Base+0x2758>
   2e6b4:	orrs	r2, ip, r1
   2e6b8:	beq	2e6f4 <__flatcc_fb_build_schema@@Base+0x2758>
   2e6bc:	mov	lr, #0
   2e6c0:	mov	r0, #1
   2e6c4:	mov	r2, #1
   2e6c8:	eor	r3, r2, ip
   2e6cc:	eor	r4, lr, r1
   2e6d0:	orrs	r3, r3, r4
   2e6d4:	beq	2e6f4 <__flatcc_fb_build_schema@@Base+0x2758>
   2e6d8:	lsl	r3, lr, #1
   2e6dc:	orr	lr, r3, r2, lsr #31
   2e6e0:	lsl	r2, r2, #1
   2e6e4:	subs	r3, ip, r2
   2e6e8:	sbcs	r3, r1, lr
   2e6ec:	bcs	2e6c8 <__flatcc_fb_build_schema@@Base+0x272c>
   2e6f0:	mov	r0, #0
   2e6f4:	pop	{r4, sl, fp, pc}
   2e6f8:	ldr	r1, [r1, #4]
   2e6fc:	b	2e3ac <__flatcc_fb_build_schema@@Base+0x2410>
   2e700:	push	{r4, r5, r6, r7, fp, lr}
   2e704:	add	fp, sp, #16
   2e708:	mov	r4, r3
   2e70c:	mov	r5, r2
   2e710:	mov	r6, r1
   2e714:	mov	r7, r0
   2e718:	mov	r0, r2
   2e71c:	mov	r1, r3
   2e720:	bl	2e690 <__flatcc_fb_build_schema@@Base+0x26f4>
   2e724:	cmp	r0, #0
   2e728:	beq	2e750 <__flatcc_fb_build_schema@@Base+0x27b4>
   2e72c:	adds	r0, r7, r5
   2e730:	adc	r1, r6, r4
   2e734:	subs	r0, r0, #1
   2e738:	sbc	r1, r1, #0
   2e73c:	rsbs	r2, r5, #0
   2e740:	rsc	r3, r4, #0
   2e744:	and	r1, r1, r3
   2e748:	and	r0, r0, r2
   2e74c:	pop	{r4, r5, r6, r7, fp, pc}
   2e750:	movw	r0, #61481	; 0xf029
   2e754:	movt	r0, #4
   2e758:	movw	r1, #58715	; 0xe55b
   2e75c:	movt	r1, #4
   2e760:	movw	r3, #61503	; 0xf03f
   2e764:	movt	r3, #4
   2e768:	mov	r2, #108	; 0x6c
   2e76c:	bl	14ab4 <__assert_fail@plt>
   2e770:	push	{r4, r5, r6, sl, fp, lr}
   2e774:	add	fp, sp, #16
   2e778:	mov	r5, r3
   2e77c:	mov	r4, r0
   2e780:	ldrh	r0, [r2, #24]
   2e784:	cmp	r0, #7
   2e788:	bne	2e7e4 <__flatcc_fb_build_schema@@Base+0x2848>
   2e78c:	mov	r6, r2
   2e790:	ldr	r0, [r2, #16]
   2e794:	cmp	r0, #4
   2e798:	bne	2e7e4 <__flatcc_fb_build_schema@@Base+0x2848>
   2e79c:	ldrh	r0, [r5, #16]
   2e7a0:	cmp	r0, #2
   2e7a4:	popne	{r4, r5, r6, sl, fp, pc}
   2e7a8:	ldrd	r2, [r5, #8]
   2e7ac:	mov	r0, r4
   2e7b0:	bl	2e948 <__flatcc_fb_build_schema@@Base+0x29ac>
   2e7b4:	cmp	r0, #0
   2e7b8:	beq	2e7fc <__flatcc_fb_build_schema@@Base+0x2860>
   2e7bc:	ldrh	r1, [r0, #8]
   2e7c0:	cmp	r1, #0
   2e7c4:	beq	2e7dc <__flatcc_fb_build_schema@@Base+0x2840>
   2e7c8:	ldr	r2, [r4, #176]	; 0xb0
   2e7cc:	cmp	r2, #0
   2e7d0:	beq	2e80c <__flatcc_fb_build_schema@@Base+0x2870>
   2e7d4:	cmp	r1, #1
   2e7d8:	bne	2e820 <__flatcc_fb_build_schema@@Base+0x2884>
   2e7dc:	str	r0, [r6, #104]	; 0x68
   2e7e0:	pop	{r4, r5, r6, sl, fp, pc}
   2e7e4:	ldr	r1, [r5, #4]
   2e7e8:	movw	r2, #63609	; 0xf879
   2e7ec:	movt	r2, #4
   2e7f0:	mov	r0, r4
   2e7f4:	pop	{r4, r5, r6, sl, fp, lr}
   2e7f8:	b	2e688 <__flatcc_fb_build_schema@@Base+0x26ec>
   2e7fc:	ldmib	r5, {r1, r2, r3}
   2e800:	mov	r0, r4
   2e804:	pop	{r4, r5, r6, sl, fp, lr}
   2e808:	b	2ea30 <__flatcc_fb_build_schema@@Base+0x2a94>
   2e80c:	ldr	r3, [r0, #4]
   2e810:	ldr	r1, [r5, #4]
   2e814:	movw	r2, #63697	; 0xf8d1
   2e818:	movt	r2, #4
   2e81c:	b	2e830 <__flatcc_fb_build_schema@@Base+0x2894>
   2e820:	ldr	r3, [r0, #4]
   2e824:	ldr	r1, [r5, #4]
   2e828:	movw	r2, #63740	; 0xf8fc
   2e82c:	movt	r2, #4
   2e830:	mov	r0, r4
   2e834:	pop	{r4, r5, r6, sl, fp, lr}
   2e838:	b	2e3ac <__flatcc_fb_build_schema@@Base+0x2410>
   2e83c:	push	{r4, r5, fp, lr}
   2e840:	add	fp, sp, #8
   2e844:	sub	sp, sp, #8
   2e848:	mov	r4, r2
   2e84c:	mov	r2, #0
   2e850:	str	r2, [sp, #4]
   2e854:	cmp	r3, #0
   2e858:	beq	2e8f0 <__flatcc_fb_build_schema@@Base+0x2954>
   2e85c:	mov	r5, r3
   2e860:	cmp	r4, #0
   2e864:	beq	2e874 <__flatcc_fb_build_schema@@Base+0x28d8>
   2e868:	ldrh	r2, [r4, #8]
   2e86c:	cmp	r2, #3
   2e870:	bne	2e910 <__flatcc_fb_build_schema@@Base+0x2974>
   2e874:	add	r3, sp, #4
   2e878:	mov	r2, r5
   2e87c:	bl	2eb58 <__flatcc_fb_build_schema@@Base+0x2bbc>
   2e880:	cmp	r0, #0
   2e884:	beq	2e89c <__flatcc_fb_build_schema@@Base+0x2900>
   2e888:	ldrh	r1, [r0, #8]
   2e88c:	cmp	r1, #3
   2e890:	bne	2e89c <__flatcc_fb_build_schema@@Base+0x2900>
   2e894:	mov	r4, r0
   2e898:	b	2e8ac <__flatcc_fb_build_schema@@Base+0x2910>
   2e89c:	ldr	r0, [r5]
   2e8a0:	mvn	r5, #0
   2e8a4:	cmp	r0, #0
   2e8a8:	bne	2e8e4 <__flatcc_fb_build_schema@@Base+0x2948>
   2e8ac:	mvn	r5, #0
   2e8b0:	cmp	r4, #0
   2e8b4:	beq	2e8e4 <__flatcc_fb_build_schema@@Base+0x2948>
   2e8b8:	ldr	r0, [sp, #4]
   2e8bc:	ldr	r1, [r0, #4]
   2e8c0:	add	r0, r4, #56	; 0x38
   2e8c4:	bl	2ec80 <__flatcc_fb_build_schema@@Base+0x2ce4>
   2e8c8:	cmp	r0, #0
   2e8cc:	beq	2e8e4 <__flatcc_fb_build_schema@@Base+0x2948>
   2e8d0:	ldr	r1, [fp, #8]
   2e8d4:	add	r0, r0, #48	; 0x30
   2e8d8:	vld1.64	{d16-d17}, [r0]
   2e8dc:	vst1.64	{d16-d17}, [r1]
   2e8e0:	mov	r5, #0
   2e8e4:	mov	r0, r5
   2e8e8:	sub	sp, fp, #8
   2e8ec:	pop	{r4, r5, fp, pc}
   2e8f0:	movw	r0, #63795	; 0xf933
   2e8f4:	movt	r0, #4
   2e8f8:	movw	r1, #58715	; 0xe55b
   2e8fc:	movt	r1, #4
   2e900:	movw	r3, #63799	; 0xf937
   2e904:	movt	r3, #4
   2e908:	movw	r2, #347	; 0x15b
   2e90c:	bl	14ab4 <__assert_fail@plt>
   2e910:	movw	r0, #63897	; 0xf999
   2e914:	movt	r0, #4
   2e918:	movw	r1, #58715	; 0xe55b
   2e91c:	movt	r1, #4
   2e920:	movw	r3, #63799	; 0xf937
   2e924:	movt	r3, #4
   2e928:	mov	r2, #348	; 0x15c
   2e92c:	bl	14ab4 <__assert_fail@plt>
   2e930:	push	{fp, lr}
   2e934:	mov	fp, sp
   2e938:	bl	3422c <fb_value_set_find_item@@Base>
   2e93c:	cmp	r0, #0
   2e940:	movwne	r0, #1
   2e944:	pop	{fp, pc}
   2e948:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e94c:	add	fp, sp, #24
   2e950:	mov	r5, r1
   2e954:	mov	r9, r0
   2e958:	sub	r0, r3, #1
   2e95c:	add	r4, r0, #1
   2e960:	cmp	r4, #1
   2e964:	blt	2e98c <__flatcc_fb_build_schema@@Base+0x29f0>
   2e968:	ldrb	r1, [r2, r0]
   2e96c:	sub	r0, r0, #1
   2e970:	cmp	r1, #46	; 0x2e
   2e974:	bne	2e95c <__flatcc_fb_build_schema@@Base+0x29c0>
   2e978:	add	r1, r2, r0
   2e97c:	add	r6, r1, #2
   2e980:	add	r4, r0, #1
   2e984:	sub	r3, r3, #1
   2e988:	b	2e990 <__flatcc_fb_build_schema@@Base+0x29f4>
   2e98c:	mov	r6, r2
   2e990:	sub	r7, r3, r4
   2e994:	add	r8, r9, #352	; 0x160
   2e998:	cmp	r5, #0
   2e99c:	beq	2e9a8 <__flatcc_fb_build_schema@@Base+0x2a0c>
   2e9a0:	cmp	r4, #0
   2e9a4:	beq	2e9ec <__flatcc_fb_build_schema@@Base+0x2a50>
   2e9a8:	mov	r0, r8
   2e9ac:	mov	r1, r2
   2e9b0:	mov	r2, r4
   2e9b4:	bl	2eb0c <__flatcc_fb_build_schema@@Base+0x2b70>
   2e9b8:	cmp	r0, #0
   2e9bc:	beq	2ea24 <__flatcc_fb_build_schema@@Base+0x2a88>
   2e9c0:	add	r0, r0, #4
   2e9c4:	mov	r1, r6
   2e9c8:	mov	r2, r7
   2e9cc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e9d0:	b	26ae0 <fb_symbol_table_find@@Base>
   2e9d4:	mov	r0, r9
   2e9d8:	mov	r1, r5
   2e9dc:	bl	2ea8c <__flatcc_fb_build_schema@@Base+0x2af0>
   2e9e0:	mov	r5, r0
   2e9e4:	cmp	r0, #0
   2e9e8:	beq	2ea24 <__flatcc_fb_build_schema@@Base+0x2a88>
   2e9ec:	add	r0, r5, #4
   2e9f0:	mov	r1, r6
   2e9f4:	mov	r2, r7
   2e9f8:	bl	26ae0 <fb_symbol_table_find@@Base>
   2e9fc:	cmp	r0, #0
   2ea00:	beq	2e9d4 <__flatcc_fb_build_schema@@Base+0x2a38>
   2ea04:	mov	r4, r0
   2ea08:	mov	r0, r8
   2ea0c:	mov	r1, r4
   2ea10:	bl	2ea54 <__flatcc_fb_build_schema@@Base+0x2ab8>
   2ea14:	cmp	r0, #0
   2ea18:	beq	2e9d4 <__flatcc_fb_build_schema@@Base+0x2a38>
   2ea1c:	mov	r0, r4
   2ea20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ea24:	mov	r4, #0
   2ea28:	mov	r0, r4
   2ea2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ea30:	push	{fp, lr}
   2ea34:	mov	fp, sp
   2ea38:	push	{r2, r3}
   2ea3c:	movw	r2, #63670	; 0xf8b6
   2ea40:	movt	r2, #4
   2ea44:	mov	r3, #0
   2ea48:	bl	28188 <__flatcc_error_report@@Base>
   2ea4c:	mov	sp, fp
   2ea50:	pop	{fp, pc}
   2ea54:	push	{r4, sl, fp, lr}
   2ea58:	add	fp, sp, #8
   2ea5c:	mov	r4, r1
   2ea60:	ldrh	r1, [r1, #8]
   2ea64:	cmp	r1, #4
   2ea68:	bhi	2ea84 <__flatcc_fb_build_schema@@Base+0x2ae8>
   2ea6c:	ldr	r1, [r4, #16]
   2ea70:	add	r0, r0, #172	; 0xac
   2ea74:	bl	2c360 <__flatcc_fb_build_schema@@Base+0x3c4>
   2ea78:	cmp	r0, #0
   2ea7c:	movne	r0, r4
   2ea80:	pop	{r4, sl, fp, pc}
   2ea84:	mov	r0, #0
   2ea88:	pop	{r4, sl, fp, pc}
   2ea8c:	push	{r4, r5, r6, sl, fp, lr}
   2ea90:	add	fp, sp, #16
   2ea94:	mov	r4, r1
   2ea98:	mov	r1, #0
   2ea9c:	cmp	r4, #0
   2eaa0:	beq	2eaf0 <__flatcc_fb_build_schema@@Base+0x2b54>
   2eaa4:	ldr	r2, [r4]
   2eaa8:	cmp	r2, #0
   2eaac:	beq	2eaf0 <__flatcc_fb_build_schema@@Base+0x2b54>
   2eab0:	mov	r5, #0
   2eab4:	add	r5, r5, #1
   2eab8:	ldr	r2, [r2]
   2eabc:	cmp	r2, #0
   2eac0:	bne	2eab4 <__flatcc_fb_build_schema@@Base+0x2b18>
   2eac4:	add	r6, r0, #352	; 0x160
   2eac8:	cmp	r5, #2
   2eacc:	blt	2eaf8 <__flatcc_fb_build_schema@@Base+0x2b5c>
   2ead0:	sub	r5, r5, #1
   2ead4:	ldr	r1, [r4]
   2ead8:	mov	r0, r6
   2eadc:	mov	r2, r5
   2eae0:	bl	2eb34 <__flatcc_fb_build_schema@@Base+0x2b98>
   2eae4:	cmp	r0, #0
   2eae8:	beq	2eac8 <__flatcc_fb_build_schema@@Base+0x2b2c>
   2eaec:	mov	r1, r0
   2eaf0:	mov	r0, r1
   2eaf4:	pop	{r4, r5, r6, sl, fp, pc}
   2eaf8:	mov	r0, r6
   2eafc:	mov	r1, #0
   2eb00:	mov	r2, #0
   2eb04:	pop	{r4, r5, r6, sl, fp, lr}
   2eb08:	b	2eb34 <__flatcc_fb_build_schema@@Base+0x2b98>
   2eb0c:	cmp	r0, #0
   2eb10:	beq	2eb2c <__flatcc_fb_build_schema@@Base+0x2b90>
   2eb14:	ldr	r0, [r0, #60]	; 0x3c
   2eb18:	cmp	r0, #0
   2eb1c:	beq	2eb2c <__flatcc_fb_build_schema@@Base+0x2b90>
   2eb20:	cmp	r2, #0
   2eb24:	moveq	r1, r2
   2eb28:	b	270f8 <fb_scope_table_find@@Base>
   2eb2c:	mov	r0, #0
   2eb30:	bx	lr
   2eb34:	cmp	r0, #0
   2eb38:	beq	2eb50 <__flatcc_fb_build_schema@@Base+0x2bb4>
   2eb3c:	ldr	r0, [r0, #60]	; 0x3c
   2eb40:	cmp	r0, #0
   2eb44:	beq	2eb50 <__flatcc_fb_build_schema@@Base+0x2bb4>
   2eb48:	rsb	r2, r2, #0
   2eb4c:	b	270f8 <fb_scope_table_find@@Base>
   2eb50:	mov	r0, #0
   2eb54:	bx	lr
   2eb58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2eb5c:	add	fp, sp, #24
   2eb60:	mov	r5, r1
   2eb64:	mov	r8, r0
   2eb68:	cmp	r2, #0
   2eb6c:	beq	2eb98 <__flatcc_fb_build_schema@@Base+0x2bfc>
   2eb70:	mov	r0, #0
   2eb74:	mov	r1, r2
   2eb78:	mov	r4, #0
   2eb7c:	mov	r7, r4
   2eb80:	mov	r4, r1
   2eb84:	add	r0, r0, #1
   2eb88:	ldr	r1, [r1]
   2eb8c:	cmp	r1, #0
   2eb90:	bne	2eb7c <__flatcc_fb_build_schema@@Base+0x2be0>
   2eb94:	b	2eba4 <__flatcc_fb_build_schema@@Base+0x2c08>
   2eb98:	mov	r7, #0
   2eb9c:	mov	r4, #0
   2eba0:	mov	r0, #0
   2eba4:	cmp	r3, #0
   2eba8:	strne	r4, [r3]
   2ebac:	subne	r0, r0, #1
   2ebb0:	moveq	r7, r4
   2ebb4:	cmp	r7, #0
   2ebb8:	beq	2ec74 <__flatcc_fb_build_schema@@Base+0x2cd8>
   2ebbc:	cmp	r5, #0
   2ebc0:	beq	2ec20 <__flatcc_fb_build_schema@@Base+0x2c84>
   2ebc4:	cmp	r0, #1
   2ebc8:	bne	2ec20 <__flatcc_fb_build_schema@@Base+0x2c84>
   2ebcc:	add	r4, r8, #352	; 0x160
   2ebd0:	b	2ebec <__flatcc_fb_build_schema@@Base+0x2c50>
   2ebd4:	mov	r0, r8
   2ebd8:	mov	r1, r5
   2ebdc:	bl	2ea8c <__flatcc_fb_build_schema@@Base+0x2af0>
   2ebe0:	mov	r5, r0
   2ebe4:	cmp	r0, #0
   2ebe8:	beq	2ec74 <__flatcc_fb_build_schema@@Base+0x2cd8>
   2ebec:	ldr	r1, [r7, #4]
   2ebf0:	add	r0, r5, #4
   2ebf4:	bl	2ec80 <__flatcc_fb_build_schema@@Base+0x2ce4>
   2ebf8:	cmp	r0, #0
   2ebfc:	beq	2ebd4 <__flatcc_fb_build_schema@@Base+0x2c38>
   2ec00:	mov	r6, r0
   2ec04:	mov	r0, r4
   2ec08:	mov	r1, r6
   2ec0c:	bl	2ea54 <__flatcc_fb_build_schema@@Base+0x2ab8>
   2ec10:	cmp	r0, #0
   2ec14:	beq	2ebd4 <__flatcc_fb_build_schema@@Base+0x2c38>
   2ec18:	mov	r0, r6
   2ec1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ec20:	subs	r1, r0, #1
   2ec24:	movne	r1, r2
   2ec28:	add	r5, r8, #352	; 0x160
   2ec2c:	sub	r2, r0, #1
   2ec30:	mov	r0, r5
   2ec34:	bl	2eb34 <__flatcc_fb_build_schema@@Base+0x2b98>
   2ec38:	cmp	r0, #0
   2ec3c:	beq	2ec74 <__flatcc_fb_build_schema@@Base+0x2cd8>
   2ec40:	ldr	r1, [r7, #4]
   2ec44:	add	r0, r0, #4
   2ec48:	bl	2ec80 <__flatcc_fb_build_schema@@Base+0x2ce4>
   2ec4c:	cmp	r0, #0
   2ec50:	beq	2ec74 <__flatcc_fb_build_schema@@Base+0x2cd8>
   2ec54:	mov	r6, r0
   2ec58:	mov	r0, r5
   2ec5c:	mov	r1, r6
   2ec60:	bl	2ea54 <__flatcc_fb_build_schema@@Base+0x2ab8>
   2ec64:	cmp	r0, #0
   2ec68:	moveq	r6, #0
   2ec6c:	mov	r0, r6
   2ec70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ec74:	mov	r6, #0
   2ec78:	mov	r0, r6
   2ec7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ec80:	ldr	r3, [r1]
   2ec84:	ldr	r2, [r1, #4]
   2ec88:	mov	r1, r3
   2ec8c:	b	26ae0 <fb_symbol_table_find@@Base>

0002ec90 <__flatcc_fb_coerce_scalar_type@@Base>:
   2ec90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ec94:	add	fp, sp, #28
   2ec98:	sub	sp, sp, #12
   2ec9c:	mov	r9, r0
   2eca0:	mov	r5, r3
   2eca4:	ldrh	r0, [r5, #8]!
   2eca8:	mov	r4, #0
   2ecac:	cmp	r0, #2
   2ecb0:	bcc	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ecb4:	mov	r7, r3
   2ecb8:	mov	sl, r1
   2ecbc:	cmp	r0, #4
   2ecc0:	bne	2ece8 <__flatcc_fb_coerce_scalar_type@@Base+0x58>
   2ecc4:	ldrd	r0, [r7]
   2ecc8:	mvn	r3, #127	; 0x7f
   2eccc:	orr	r3, r3, #127	; 0x7f
   2ecd0:	mvn	r6, #0
   2ecd4:	subs	r0, r3, r0
   2ecd8:	sbcs	r0, r6, r1
   2ecdc:	movlt	r0, #5
   2ece0:	strhlt	r0, [r5]
   2ece4:	b	2ed24 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2ece8:	cmp	r2, #5
   2ecec:	beq	2ed24 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2ecf0:	cmp	r0, #6
   2ecf4:	bne	2ed24 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2ecf8:	ldr	r0, [r9, #144]	; 0x90
   2ecfc:	cmp	r0, #0
   2ed00:	beq	2ed24 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2ed04:	mov	r0, #0
   2ed08:	str	r0, [r7, #4]
   2ed0c:	mov	r0, #5
   2ed10:	strh	r0, [r7, #8]
   2ed14:	ldrb	r0, [r7]
   2ed18:	str	r0, [r7]
   2ed1c:	cmp	r0, #2
   2ed20:	bcs	2f114 <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   2ed24:	sub	r0, r2, #1
   2ed28:	cmp	r0, #10
   2ed2c:	bhi	2ef74 <__flatcc_fb_coerce_scalar_type@@Base+0x2e4>
   2ed30:	add	r1, pc, #0
   2ed34:	ldr	pc, [r1, r0, lsl #2]
   2ed38:	andeq	lr, r2, r4, ror #26
   2ed3c:	andeq	lr, r2, ip, ror lr
   2ed40:	strdeq	lr, [r2], -r4
   2ed44:	andeq	lr, r2, ip, lsl lr
   2ed48:	andeq	lr, r2, ip, ror sp
   2ed4c:	andeq	lr, r2, r0, lsr #29
   2ed50:	andeq	lr, r2, ip, asr #29
   2ed54:	andeq	lr, r2, r4, asr #28
   2ed58:	andeq	lr, r2, r4, lsl #30
   2ed5c:			; <UNDEFINED> instruction: 0x0002edb8
   2ed60:	andeq	lr, r2, ip, lsr pc
   2ed64:	ldrh	r0, [r5]
   2ed68:	cmp	r0, #5
   2ed6c:	beq	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ed70:	movw	r2, #64914	; 0xfd92
   2ed74:	movt	r2, #4
   2ed78:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ed7c:	ldrh	r0, [r5]
   2ed80:	cmp	r0, #6
   2ed84:	beq	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ed88:	cmp	r0, #5
   2ed8c:	bne	2efa4 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   2ed90:	ldr	r0, [r9, #144]	; 0x90
   2ed94:	cmp	r0, #0
   2ed98:	beq	2efa4 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   2ed9c:	ldrd	r0, [r7]
   2eda0:	subs	r0, r0, #2
   2eda4:	sbcs	r0, r1, #0
   2eda8:	bcc	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2edac:	movw	r2, #68	; 0x44
   2edb0:	movt	r2, #5
   2edb4:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2edb8:	ldrh	r0, [r5]
   2edbc:	cmp	r0, #3
   2edc0:	beq	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2edc4:	cmp	r0, #5
   2edc8:	beq	2f040 <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
   2edcc:	cmp	r0, #4
   2edd0:	bne	2f08c <__flatcc_fb_coerce_scalar_type@@Base+0x3fc>
   2edd4:	ldm	r7, {r6, r8}
   2edd8:	mov	r0, r6
   2eddc:	mov	r1, r8
   2ede0:	bl	3471c <fb_value_set_visit@@Base+0x410>
   2ede4:	str	r0, [sp, #8]
   2ede8:	str	r1, [sp, #4]
   2edec:	bl	34a44 <fb_value_set_visit@@Base+0x738>
   2edf0:	b	2f05c <__flatcc_fb_coerce_scalar_type@@Base+0x3cc>
   2edf4:	ldrh	r0, [r5]
   2edf8:	cmp	r0, #5
   2edfc:	bne	2ef80 <__flatcc_fb_coerce_scalar_type@@Base+0x2f0>
   2ee00:	ldrd	r0, [r7]
   2ee04:	subs	r0, r0, #65536	; 0x10000
   2ee08:	sbcs	r0, r1, #0
   2ee0c:	bcc	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ee10:	movw	r2, #65109	; 0xfe55
   2ee14:	movt	r2, #4
   2ee18:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ee1c:	ldrh	r0, [r5]
   2ee20:	cmp	r0, #5
   2ee24:	bne	2ef8c <__flatcc_fb_coerce_scalar_type@@Base+0x2fc>
   2ee28:	ldrd	r0, [r7]
   2ee2c:	subs	r0, r0, #256	; 0x100
   2ee30:	sbcs	r0, r1, #0
   2ee34:	bcc	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ee38:	movw	r2, #65196	; 0xfeac
   2ee3c:	movt	r2, #4
   2ee40:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ee44:	ldrh	r0, [r5]
   2ee48:	cmp	r0, #5
   2ee4c:	beq	2efb0 <__flatcc_fb_coerce_scalar_type@@Base+0x320>
   2ee50:	cmp	r0, #4
   2ee54:	bne	2f010 <__flatcc_fb_coerce_scalar_type@@Base+0x380>
   2ee58:	ldrd	r0, [r7]
   2ee5c:	mvn	r2, #0
   2ee60:	mvn	r3, #32768	; 0x8000
   2ee64:	subs	r0, r3, r0
   2ee68:	sbcs	r0, r2, r1
   2ee6c:	blt	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ee70:	movw	r2, #65398	; 0xff76
   2ee74:	movt	r2, #4
   2ee78:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ee7c:	ldrh	r0, [r5]
   2ee80:	cmp	r0, #5
   2ee84:	bne	2ef98 <__flatcc_fb_coerce_scalar_type@@Base+0x308>
   2ee88:	ldr	r0, [r7, #4]
   2ee8c:	cmp	r0, #0
   2ee90:	beq	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ee94:	movw	r2, #65022	; 0xfdfe
   2ee98:	movt	r2, #4
   2ee9c:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2eea0:	ldrh	r0, [r5]
   2eea4:	cmp	r0, #4
   2eea8:	beq	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2eeac:	cmp	r0, #5
   2eeb0:	bne	2f01c <__flatcc_fb_coerce_scalar_type@@Base+0x38c>
   2eeb4:	ldr	r0, [r7, #4]
   2eeb8:	cmn	r0, #1
   2eebc:	bgt	2f004 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2eec0:	movw	r2, #65225	; 0xfec9
   2eec4:	movt	r2, #4
   2eec8:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2eecc:	ldrh	r0, [r5]
   2eed0:	cmp	r0, #5
   2eed4:	beq	2efcc <__flatcc_fb_coerce_scalar_type@@Base+0x33c>
   2eed8:	cmp	r0, #4
   2eedc:	bne	2f028 <__flatcc_fb_coerce_scalar_type@@Base+0x398>
   2eee0:	ldrd	r0, [r7]
   2eee4:	mvn	r2, #0
   2eee8:	mvn	r3, #-2147483648	; 0x80000000
   2eeec:	subs	r0, r3, r0
   2eef0:	sbcs	r0, r2, r1
   2eef4:	blt	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2eef8:	movw	r2, #65298	; 0xff12
   2eefc:	movt	r2, #4
   2ef00:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ef04:	ldrh	r0, [r5]
   2ef08:	cmp	r0, #5
   2ef0c:	beq	2efe8 <__flatcc_fb_coerce_scalar_type@@Base+0x358>
   2ef10:	cmp	r0, #4
   2ef14:	bne	2f034 <__flatcc_fb_coerce_scalar_type@@Base+0x3a4>
   2ef18:	ldrd	r0, [r7]
   2ef1c:	mvn	r2, #0
   2ef20:	mvn	r3, #128	; 0x80
   2ef24:	subs	r0, r3, r0
   2ef28:	sbcs	r0, r2, r1
   2ef2c:	blt	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ef30:	movw	r2, #65504	; 0xffe0
   2ef34:	movt	r2, #4
   2ef38:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ef3c:	ldrh	r0, [r5]
   2ef40:	cmp	r0, #3
   2ef44:	beq	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2ef48:	cmp	r0, #5
   2ef4c:	beq	2f098 <__flatcc_fb_coerce_scalar_type@@Base+0x408>
   2ef50:	cmp	r0, #4
   2ef54:	bne	2f0e8 <__flatcc_fb_coerce_scalar_type@@Base+0x458>
   2ef58:	ldm	r7, {r6, r8}
   2ef5c:	mov	r0, r6
   2ef60:	mov	r1, r8
   2ef64:	bl	34950 <fb_value_set_visit@@Base+0x644>
   2ef68:	str	r0, [sp, #8]
   2ef6c:	bl	34a18 <fb_value_set_visit@@Base+0x70c>
   2ef70:	b	2f0b0 <__flatcc_fb_coerce_scalar_type@@Base+0x420>
   2ef74:	movw	r2, #392	; 0x188
   2ef78:	movt	r2, #5
   2ef7c:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ef80:	movw	r2, #65051	; 0xfe1b
   2ef84:	movt	r2, #4
   2ef88:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ef8c:	movw	r2, #65140	; 0xfe74
   2ef90:	movt	r2, #4
   2ef94:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2ef98:	movw	r2, #64966	; 0xfdc6
   2ef9c:	movt	r2, #4
   2efa0:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2efa4:	movw	r2, #130	; 0x82
   2efa8:	movt	r2, #5
   2efac:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2efb0:	ldrd	r0, [r7]
   2efb4:	subs	r0, r0, #32768	; 0x8000
   2efb8:	sbcs	r0, r1, #0
   2efbc:	blt	2f004 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2efc0:	movw	r2, #65428	; 0xff94
   2efc4:	movt	r2, #4
   2efc8:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2efcc:	ldrd	r0, [r7]
   2efd0:	subs	r0, r0, #-2147483648	; 0x80000000
   2efd4:	sbcs	r0, r1, #0
   2efd8:	blt	2f004 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2efdc:	movw	r2, #65326	; 0xff2e
   2efe0:	movt	r2, #4
   2efe4:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2efe8:	ldrd	r0, [r7]
   2efec:	subs	r0, r0, #128	; 0x80
   2eff0:	sbcs	r0, r1, #0
   2eff4:	blt	2f004 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2eff8:	movw	r2, #65532	; 0xfffc
   2effc:	movt	r2, #4
   2f000:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2f004:	mov	r0, #4
   2f008:	strh	r0, [r5]
   2f00c:	b	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2f010:	movw	r2, #65457	; 0xffb1
   2f014:	movt	r2, #4
   2f018:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2f01c:	movw	r2, #65256	; 0xfee8
   2f020:	movt	r2, #4
   2f024:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2f028:	movw	r2, #65353	; 0xff49
   2f02c:	movt	r2, #4
   2f030:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2f034:	movw	r2, #23
   2f038:	movt	r2, #5
   2f03c:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2f040:	ldm	r7, {r6, r8}
   2f044:	mov	r0, r6
   2f048:	mov	r1, r8
   2f04c:	bl	34708 <fb_value_set_visit@@Base+0x3fc>
   2f050:	str	r0, [sp, #8]
   2f054:	str	r1, [sp, #4]
   2f058:	bl	34ab0 <fb_value_set_visit@@Base+0x7a4>
   2f05c:	eor	r1, r8, r1
   2f060:	eor	r0, r6, r0
   2f064:	orrs	r0, r0, r1
   2f068:	bne	2f080 <__flatcc_fb_coerce_scalar_type@@Base+0x3f0>
   2f06c:	ldr	r0, [sp, #8]
   2f070:	ldr	r1, [sp, #4]
   2f074:	vmov	d16, r0, r1
   2f078:	mov	r0, #3
   2f07c:	b	2f0d0 <__flatcc_fb_coerce_scalar_type@@Base+0x440>
   2f080:	movw	r2, #184	; 0xb8
   2f084:	movt	r2, #5
   2f088:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2f08c:	movw	r2, #232	; 0xe8
   2f090:	movt	r2, #5
   2f094:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2f098:	ldm	r7, {r6, r8}
   2f09c:	mov	r0, r6
   2f0a0:	mov	r1, r8
   2f0a4:	bl	34940 <fb_value_set_visit@@Base+0x634>
   2f0a8:	str	r0, [sp, #8]
   2f0ac:	bl	34a70 <fb_value_set_visit@@Base+0x764>
   2f0b0:	eor	r1, r8, r1
   2f0b4:	eor	r0, r6, r0
   2f0b8:	orrs	r0, r0, r1
   2f0bc:	bne	2f0dc <__flatcc_fb_coerce_scalar_type@@Base+0x44c>
   2f0c0:	ldr	r0, [sp, #8]
   2f0c4:	vmov	s0, r0
   2f0c8:	mov	r0, #3
   2f0cc:	vcvt.f64.f32	d16, s0
   2f0d0:	strh	r0, [r7, #8]
   2f0d4:	vstr	d16, [r7]
   2f0d8:	b	2f108 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2f0dc:	movw	r2, #289	; 0x121
   2f0e0:	movt	r2, #5
   2f0e4:	b	2f0f0 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2f0e8:	movw	r2, #336	; 0x150
   2f0ec:	movt	r2, #5
   2f0f0:	mov	r0, r9
   2f0f4:	mov	r1, sl
   2f0f8:	bl	2f134 <__flatcc_fb_coerce_scalar_type@@Base+0x4a4>
   2f0fc:	mov	r0, #1
   2f100:	strh	r0, [r5]
   2f104:	mvn	r4, #0
   2f108:	mov	r0, r4
   2f10c:	sub	sp, fp, #28
   2f110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f114:	movw	r0, #64716	; 0xfccc
   2f118:	movt	r0, #4
   2f11c:	movw	r1, #64747	; 0xfceb
   2f120:	movt	r1, #4
   2f124:	movw	r3, #64817	; 0xfd31
   2f128:	movt	r3, #4
   2f12c:	mov	r2, #52	; 0x34
   2f130:	bl	14ab4 <__assert_fail@plt>
   2f134:	ldr	r1, [r1, #4]
   2f138:	b	2f13c <__flatcc_fb_coerce_scalar_type@@Base+0x4ac>
   2f13c:	b	2f140 <__flatcc_fb_coerce_scalar_type@@Base+0x4b0>
   2f140:	push	{fp, lr}
   2f144:	mov	fp, sp
   2f148:	sub	sp, sp, #8
   2f14c:	mov	r3, #0
   2f150:	str	r3, [sp]
   2f154:	str	r3, [sp, #4]
   2f158:	mov	r3, #0
   2f15c:	bl	28188 <__flatcc_error_report@@Base>
   2f160:	mov	sp, fp
   2f164:	pop	{fp, pc}

0002f168 <flatcc_builder_default_alloc@@Base>:
   2f168:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f16c:	add	fp, sp, #24
   2f170:	mov	r4, r1
   2f174:	cmp	r2, #0
   2f178:	beq	2f1c0 <flatcc_builder_default_alloc@@Base+0x58>
   2f17c:	mov	r8, r3
   2f180:	ldr	r0, [fp, #8]
   2f184:	sub	r1, r0, #1
   2f188:	cmp	r1, #6
   2f18c:	bhi	2f1f0 <flatcc_builder_default_alloc@@Base+0x88>
   2f190:	mov	r0, #256	; 0x100
   2f194:	add	r3, pc, #0
   2f198:	ldr	pc, [r3, r1, lsl #2]
   2f19c:	andeq	pc, r2, r4, lsl #4
   2f1a0:	strdeq	pc, [r2], -r0
   2f1a4:	strdeq	pc, [r2], -r0
   2f1a8:			; <UNDEFINED> instruction: 0x0002f1b8
   2f1ac:	strdeq	pc, [r2], -r8
   2f1b0:	strdeq	pc, [r2], -r0
   2f1b4:	andeq	pc, r2, r0, lsl #4
   2f1b8:	mov	r0, #288	; 0x120
   2f1bc:	b	2f204 <flatcc_builder_default_alloc@@Base+0x9c>
   2f1c0:	ldr	r0, [r4]
   2f1c4:	cmp	r0, #0
   2f1c8:	beq	2f1e4 <flatcc_builder_default_alloc@@Base+0x7c>
   2f1cc:	bl	14928 <free@plt>
   2f1d0:	mov	r6, #0
   2f1d4:	str	r6, [r4]
   2f1d8:	str	r6, [r4, #4]
   2f1dc:	mov	r0, r6
   2f1e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f1e4:	mov	r6, #0
   2f1e8:	mov	r0, r6
   2f1ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f1f0:	mov	r0, #32
   2f1f4:	b	2f204 <flatcc_builder_default_alloc@@Base+0x9c>
   2f1f8:	mov	r0, r2
   2f1fc:	b	2f204 <flatcc_builder_default_alloc@@Base+0x9c>
   2f200:	mov	r0, #64	; 0x40
   2f204:	mov	r7, r0
   2f208:	lsl	r0, r0, #1
   2f20c:	cmp	r7, r2
   2f210:	bcc	2f204 <flatcc_builder_default_alloc@@Base+0x9c>
   2f214:	ldr	r0, [r4, #4]
   2f218:	mov	r6, #0
   2f21c:	cmp	r0, r2
   2f220:	lsrcs	r0, r0, #1
   2f224:	cmpcs	r0, r7
   2f228:	bcs	2f26c <flatcc_builder_default_alloc@@Base+0x104>
   2f22c:	ldr	r0, [r4]
   2f230:	mov	r1, r7
   2f234:	bl	14970 <realloc@plt>
   2f238:	cmp	r0, #0
   2f23c:	beq	2f274 <flatcc_builder_default_alloc@@Base+0x10c>
   2f240:	mov	r5, r0
   2f244:	cmp	r8, #0
   2f248:	beq	2f268 <flatcc_builder_default_alloc@@Base+0x100>
   2f24c:	ldr	r1, [r4, #4]
   2f250:	cmp	r7, r1
   2f254:	bls	2f268 <flatcc_builder_default_alloc@@Base+0x100>
   2f258:	add	r0, r5, r1
   2f25c:	sub	r2, r7, r1
   2f260:	mov	r1, #0
   2f264:	bl	14a0c <memset@plt>
   2f268:	stm	r4, {r5, r7}
   2f26c:	mov	r0, r6
   2f270:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f274:	mvn	r6, #0
   2f278:	mov	r0, r6
   2f27c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002f280 <flatcc_builder_flush_vtable_cache@@Base>:
   2f280:	push	{r4, r5, fp, lr}
   2f284:	add	fp, sp, #8
   2f288:	mov	r4, r0
   2f28c:	ldr	r0, [r0, #116]	; 0x74
   2f290:	cmp	r0, #0
   2f294:	popeq	{r4, r5, fp, pc}
   2f298:	ldr	r0, [r4, #92]	; 0x5c
   2f29c:	ldr	r2, [r4, #96]	; 0x60
   2f2a0:	mov	r5, #0
   2f2a4:	mov	r1, #0
   2f2a8:	bl	14a0c <memset@plt>
   2f2ac:	mov	r0, #16
   2f2b0:	str	r5, [r4, #120]	; 0x78
   2f2b4:	str	r0, [r4, #124]	; 0x7c
   2f2b8:	pop	{r4, r5, fp, pc}

0002f2bc <flatcc_builder_custom_init@@Base>:
   2f2bc:	push	{r4, r5, r6, r7, fp, lr}
   2f2c0:	add	fp, sp, #16
   2f2c4:	mov	r5, r3
   2f2c8:	mov	r6, r2
   2f2cc:	mov	r7, r1
   2f2d0:	mov	r4, r0
   2f2d4:	mov	r1, #0
   2f2d8:	mov	r2, #232	; 0xe8
   2f2dc:	bl	14a0c <memset@plt>
   2f2e0:	ldr	r0, [fp, #8]
   2f2e4:	cmp	r7, #0
   2f2e8:	bne	2f300 <flatcc_builder_custom_init@@Base+0x44>
   2f2ec:	mov	r1, #1
   2f2f0:	str	r1, [r4, #184]	; 0xb8
   2f2f4:	add	r6, r4, #188	; 0xbc
   2f2f8:	movw	r7, #9868	; 0x268c
   2f2fc:	movt	r7, #3
   2f300:	movw	r1, #61800	; 0xf168
   2f304:	movt	r1, #2
   2f308:	cmp	r5, #0
   2f30c:	movne	r1, r5
   2f310:	str	r6, [r4, #36]	; 0x24
   2f314:	str	r0, [r4, #40]	; 0x28
   2f318:	str	r7, [r4, #44]	; 0x2c
   2f31c:	str	r1, [r4, #48]	; 0x30
   2f320:	mov	r0, #0
   2f324:	pop	{r4, r5, r6, r7, fp, pc}

0002f328 <flatcc_builder_init@@Base>:
   2f328:	push	{fp, lr}
   2f32c:	mov	fp, sp
   2f330:	sub	sp, sp, #8
   2f334:	mov	r1, #0
   2f338:	str	r1, [sp]
   2f33c:	mov	r1, #0
   2f340:	mov	r2, #0
   2f344:	mov	r3, #0
   2f348:	bl	2f2bc <flatcc_builder_custom_init@@Base>
   2f34c:	mov	r0, #0
   2f350:	mov	sp, fp
   2f354:	pop	{fp, pc}

0002f358 <flatcc_builder_custom_reset@@Base>:
   2f358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f35c:	add	fp, sp, #28
   2f360:	sub	sp, sp, #4
   2f364:	mov	r9, r2
   2f368:	mov	r8, r1
   2f36c:	mov	sl, r0
   2f370:	add	r7, r0, #52	; 0x34
   2f374:	mov	r5, #0
   2f378:	b	2f398 <flatcc_builder_custom_reset@@Base+0x40>
   2f37c:	ldr	r0, [r6, #56]	; 0x38
   2f380:	cmp	r0, #0
   2f384:	bne	2f480 <flatcc_builder_custom_reset@@Base+0x128>
   2f388:	add	r7, r7, #8
   2f38c:	add	r5, r5, #1
   2f390:	cmp	r5, #8
   2f394:	beq	2f3ec <flatcc_builder_custom_reset@@Base+0x94>
   2f398:	add	r6, sl, r5, lsl #3
   2f39c:	ldr	r0, [r6, #52]	; 0x34
   2f3a0:	cmp	r0, #0
   2f3a4:	beq	2f37c <flatcc_builder_custom_reset@@Base+0x24>
   2f3a8:	cmp	r9, #0
   2f3ac:	cmpne	r5, #5
   2f3b0:	beq	2f3d8 <flatcc_builder_custom_reset@@Base+0x80>
   2f3b4:	ldr	r0, [sl, #40]	; 0x28
   2f3b8:	ldr	r4, [sl, #48]	; 0x30
   2f3bc:	str	r5, [sp]
   2f3c0:	mov	r1, r7
   2f3c4:	mov	r2, #1
   2f3c8:	mov	r3, #1
   2f3cc:	blx	r4
   2f3d0:	cmp	r0, #0
   2f3d4:	bne	2f470 <flatcc_builder_custom_reset@@Base+0x118>
   2f3d8:	ldr	r0, [r6, #52]	; 0x34
   2f3dc:	ldr	r2, [r6, #56]	; 0x38
   2f3e0:	mov	r1, #0
   2f3e4:	bl	14a0c <memset@plt>
   2f3e8:	b	2f388 <flatcc_builder_custom_reset@@Base+0x30>
   2f3ec:	mov	r0, #0
   2f3f0:	str	r0, [sl, #120]	; 0x78
   2f3f4:	ldr	r1, [sl, #124]	; 0x7c
   2f3f8:	cmp	r1, #0
   2f3fc:	movne	r1, #16
   2f400:	strne	r1, [sl, #124]	; 0x7c
   2f404:	vmov.i32	q8, #0	; 0x00000000
   2f408:	str	r0, [sl, #136]	; 0x88
   2f40c:	str	r0, [sl, #140]	; 0x8c
   2f410:	strh	r0, [sl, #128]	; 0x80
   2f414:	str	r0, [sl, #32]
   2f418:	add	r1, sl, #148	; 0x94
   2f41c:	vst1.32	{d16-d17}, [r1]
   2f420:	ldr	r1, [sl, #52]	; 0x34
   2f424:	ldr	r2, [sl, #60]	; 0x3c
   2f428:	ldr	r3, [sl, #76]	; 0x4c
   2f42c:	str	r2, [sl, #16]
   2f430:	str	r0, [sl, #20]
   2f434:	str	r0, [sl, #24]
   2f438:	str	r3, [sl]
   2f43c:	str	r1, [sl, #4]
   2f440:	cmp	r8, #0
   2f444:	movne	r0, #0
   2f448:	strne	r0, [sl, #172]	; 0xac
   2f44c:	strne	r0, [sl, #176]	; 0xb0
   2f450:	strne	r0, [sl, #180]	; 0xb4
   2f454:	ldr	r0, [sl, #184]	; 0xb8
   2f458:	mov	r5, #0
   2f45c:	cmp	r0, #0
   2f460:	beq	2f474 <flatcc_builder_custom_reset@@Base+0x11c>
   2f464:	add	r0, sl, #188	; 0xbc
   2f468:	bl	32568 <flatcc_emitter_reset@@Base>
   2f46c:	b	2f474 <flatcc_builder_custom_reset@@Base+0x11c>
   2f470:	mvn	r5, #0
   2f474:	mov	r0, r5
   2f478:	sub	sp, fp, #28
   2f47c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f480:	movw	r0, #925	; 0x39d
   2f484:	movt	r0, #5
   2f488:	movw	r1, #943	; 0x3af
   2f48c:	movt	r1, #5
   2f490:	movw	r3, #1013	; 0x3f5
   2f494:	movt	r3, #5
   2f498:	movw	r2, #434	; 0x1b2
   2f49c:	bl	14ab4 <__assert_fail@plt>

0002f4a0 <flatcc_builder_reset@@Base>:
   2f4a0:	mov	r1, #0
   2f4a4:	mov	r2, #0
   2f4a8:	b	2f358 <flatcc_builder_custom_reset@@Base>

0002f4ac <flatcc_builder_clear@@Base>:
   2f4ac:	push	{r4, r5, r6, r7, fp, lr}
   2f4b0:	add	fp, sp, #16
   2f4b4:	sub	sp, sp, #8
   2f4b8:	mov	r7, r0
   2f4bc:	add	r5, r0, #52	; 0x34
   2f4c0:	mov	r6, #0
   2f4c4:	ldr	r0, [r7, #40]	; 0x28
   2f4c8:	ldr	r4, [r7, #48]	; 0x30
   2f4cc:	str	r6, [sp]
   2f4d0:	mov	r1, r5
   2f4d4:	mov	r2, #0
   2f4d8:	mov	r3, #0
   2f4dc:	blx	r4
   2f4e0:	add	r5, r5, #8
   2f4e4:	add	r6, r6, #1
   2f4e8:	cmp	r6, #8
   2f4ec:	bne	2f4c4 <flatcc_builder_clear@@Base+0x18>
   2f4f0:	ldr	r0, [r7, #184]	; 0xb8
   2f4f4:	cmp	r0, #0
   2f4f8:	beq	2f504 <flatcc_builder_clear@@Base+0x58>
   2f4fc:	add	r0, r7, #188	; 0xbc
   2f500:	bl	32628 <flatcc_emitter_clear@@Base>
   2f504:	mov	r0, r7
   2f508:	mov	r1, #0
   2f50c:	mov	r2, #232	; 0xe8
   2f510:	sub	sp, fp, #16
   2f514:	pop	{r4, r5, r6, r7, fp, lr}
   2f518:	b	14a0c <memset@plt>

0002f51c <flatcc_builder_enter_user_frame_ptr@@Base>:
   2f51c:	push	{r4, r5, r6, r7, fp, lr}
   2f520:	add	fp, sp, #16
   2f524:	sub	sp, sp, #8
   2f528:	mov	r4, r0
   2f52c:	ldr	r2, [r0, #228]	; 0xe4
   2f530:	mov	r7, #0
   2f534:	str	r7, [sp]
   2f538:	add	r0, r1, #7
   2f53c:	bic	r5, r0, #3
   2f540:	mov	r0, r4
   2f544:	mov	r1, #7
   2f548:	mov	r3, r5
   2f54c:	bl	2f594 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2f550:	cmp	r0, #0
   2f554:	beq	2f588 <flatcc_builder_enter_user_frame_ptr@@Base+0x6c>
   2f558:	mov	r6, r0
   2f55c:	mov	r1, #0
   2f560:	mov	r2, r5
   2f564:	bl	14a0c <memset@plt>
   2f568:	ldr	r0, [r4, #224]	; 0xe0
   2f56c:	str	r0, [r6], #4
   2f570:	ldr	r0, [r4, #228]	; 0xe4
   2f574:	add	r1, r0, #4
   2f578:	add	r0, r0, r5
   2f57c:	str	r1, [r4, #224]	; 0xe0
   2f580:	str	r0, [r4, #228]	; 0xe4
   2f584:	mov	r7, r6
   2f588:	mov	r0, r7
   2f58c:	sub	sp, fp, #16
   2f590:	pop	{r4, r5, r6, r7, fp, pc}
   2f594:	push	{r4, r5, fp, lr}
   2f598:	add	fp, sp, #8
   2f59c:	sub	sp, sp, #8
   2f5a0:	mov	r4, r2
   2f5a4:	add	r2, r3, r2
   2f5a8:	add	r3, r0, r1, lsl #3
   2f5ac:	add	r5, r3, #52	; 0x34
   2f5b0:	ldr	r3, [r3, #56]	; 0x38
   2f5b4:	cmp	r2, r3
   2f5b8:	bls	2f5e0 <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   2f5bc:	ldr	r3, [fp, #8]
   2f5c0:	ldr	ip, [r0, #40]	; 0x28
   2f5c4:	ldr	lr, [r0, #48]	; 0x30
   2f5c8:	str	r1, [sp]
   2f5cc:	mov	r0, ip
   2f5d0:	mov	r1, r5
   2f5d4:	blx	lr
   2f5d8:	cmp	r0, #0
   2f5dc:	bne	2f5f0 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2f5e0:	ldr	r0, [r5]
   2f5e4:	add	r0, r0, r4
   2f5e8:	sub	sp, fp, #8
   2f5ec:	pop	{r4, r5, fp, pc}
   2f5f0:	movw	r0, #30217	; 0x7609
   2f5f4:	movt	r0, #4
   2f5f8:	movw	r1, #943	; 0x3af
   2f5fc:	movt	r1, #5
   2f600:	movw	r3, #5007	; 0x138f
   2f604:	movt	r3, #5
   2f608:	mov	r2, #308	; 0x134
   2f60c:	bl	14ab4 <__assert_fail@plt>

0002f610 <flatcc_builder_enter_user_frame@@Base>:
   2f610:	push	{r4, r5, r6, r7, fp, lr}
   2f614:	add	fp, sp, #16
   2f618:	sub	sp, sp, #8
   2f61c:	mov	r4, r0
   2f620:	ldr	r2, [r0, #228]	; 0xe4
   2f624:	mov	r6, #0
   2f628:	str	r6, [sp]
   2f62c:	add	r0, r1, #7
   2f630:	bic	r5, r0, #3
   2f634:	mov	r0, r4
   2f638:	mov	r1, #7
   2f63c:	mov	r3, r5
   2f640:	bl	2f594 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2f644:	cmp	r0, #0
   2f648:	beq	2f678 <flatcc_builder_enter_user_frame@@Base+0x68>
   2f64c:	mov	r7, r0
   2f650:	mov	r1, #0
   2f654:	mov	r2, r5
   2f658:	bl	14a0c <memset@plt>
   2f65c:	ldr	r0, [r4, #224]	; 0xe0
   2f660:	str	r0, [r7]
   2f664:	ldr	r0, [r4, #228]	; 0xe4
   2f668:	add	r6, r0, #4
   2f66c:	add	r0, r0, r5
   2f670:	str	r6, [r4, #224]	; 0xe0
   2f674:	str	r0, [r4, #228]	; 0xe4
   2f678:	mov	r0, r6
   2f67c:	sub	sp, fp, #16
   2f680:	pop	{r4, r5, r6, r7, fp, pc}

0002f684 <flatcc_builder_exit_user_frame@@Base>:
   2f684:	push	{fp, lr}
   2f688:	mov	fp, sp
   2f68c:	ldr	r1, [r0, #224]	; 0xe0
   2f690:	cmp	r1, #0
   2f694:	subne	r2, r1, #4
   2f698:	strne	r2, [r0, #228]	; 0xe4
   2f69c:	ldrne	r2, [r0, #108]	; 0x6c
   2f6a0:	addne	r1, r2, r1
   2f6a4:	ldrne	r1, [r1, #-4]
   2f6a8:	strne	r1, [r0, #224]	; 0xe0
   2f6ac:	movne	r0, r1
   2f6b0:	popne	{fp, pc}
   2f6b4:	movw	r0, #1075	; 0x433
   2f6b8:	movt	r0, #5
   2f6bc:	movw	r1, #943	; 0x3af
   2f6c0:	movt	r1, #5
   2f6c4:	movw	r3, #1100	; 0x44c
   2f6c8:	movt	r3, #5
   2f6cc:	movw	r2, #542	; 0x21e
   2f6d0:	bl	14ab4 <__assert_fail@plt>

0002f6d4 <flatcc_builder_exit_user_frame_at@@Base>:
   2f6d4:	push	{fp, lr}
   2f6d8:	mov	fp, sp
   2f6dc:	ldr	r2, [r0, #224]	; 0xe0
   2f6e0:	cmp	r2, r1
   2f6e4:	bcc	2f6f4 <flatcc_builder_exit_user_frame_at@@Base+0x20>
   2f6e8:	str	r1, [r0, #224]	; 0xe0
   2f6ec:	pop	{fp, lr}
   2f6f0:	b	2f684 <flatcc_builder_exit_user_frame@@Base>
   2f6f4:	movw	r0, #1158	; 0x486
   2f6f8:	movt	r0, #5
   2f6fc:	movw	r1, #943	; 0x3af
   2f700:	movt	r1, #5
   2f704:	movw	r3, #1189	; 0x4a5
   2f708:	movt	r3, #5
   2f70c:	movw	r2, #551	; 0x227
   2f710:	bl	14ab4 <__assert_fail@plt>

0002f714 <flatcc_builder_get_current_user_frame@@Base>:
   2f714:	ldr	r0, [r0, #224]	; 0xe0
   2f718:	bx	lr

0002f71c <flatcc_builder_get_user_frame_ptr@@Base>:
   2f71c:	ldr	r0, [r0, #108]	; 0x6c
   2f720:	add	r0, r0, r1
   2f724:	bx	lr

0002f728 <flatcc_builder_embed_buffer@@Base>:
   2f728:	push	{r4, r5, r6, r7, fp, lr}
   2f72c:	add	fp, sp, #16
   2f730:	sub	sp, sp, #80	; 0x50
   2f734:	mov	r5, r3
   2f738:	mov	r6, r2
   2f73c:	mov	r2, r1
   2f740:	mov	r4, r0
   2f744:	ldr	r0, [fp, #8]
   2f748:	strh	r0, [fp, #-18]	; 0xffffffee
   2f74c:	ldr	r3, [r4, #152]	; 0x98
   2f750:	cmp	r3, #0
   2f754:	movwne	r3, #1
   2f758:	sub	r1, fp, #18
   2f75c:	mov	r0, r4
   2f760:	bl	2f834 <flatcc_builder_embed_buffer@@Base+0x10c>
   2f764:	ldr	r0, [fp, #12]
   2f768:	and	r0, r0, #2
   2f76c:	add	r1, r5, r0, lsl #1
   2f770:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2f774:	mov	r0, r4
   2f778:	bl	2f8f0 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2f77c:	mov	r7, r0
   2f780:	add	r0, r0, r5
   2f784:	bl	2f904 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2f788:	mov	r1, #0
   2f78c:	str	r1, [sp, #4]
   2f790:	str	r1, [sp]
   2f794:	str	r0, [fp, #-24]	; 0xffffffe8
   2f798:	ldr	r0, [r4, #152]	; 0x98
   2f79c:	cmp	r0, #0
   2f7a0:	beq	2f7c0 <flatcc_builder_embed_buffer@@Base+0x98>
   2f7a4:	mov	r0, #4
   2f7a8:	str	r0, [sp, #12]
   2f7ac:	sub	r1, fp, #24
   2f7b0:	str	r1, [sp, #8]
   2f7b4:	str	r0, [sp]
   2f7b8:	mov	r0, #1
   2f7bc:	str	r0, [sp, #4]
   2f7c0:	cmp	r5, #0
   2f7c4:	beq	2f7ec <flatcc_builder_embed_buffer@@Base+0xc4>
   2f7c8:	ldm	sp, {r0, r1}
   2f7cc:	add	r0, r0, r5
   2f7d0:	str	r0, [sp]
   2f7d4:	mov	r0, sp
   2f7d8:	add	r0, r0, r1, lsl #3
   2f7dc:	str	r6, [r0, #8]
   2f7e0:	str	r5, [r0, #12]
   2f7e4:	add	r0, r1, #1
   2f7e8:	str	r0, [sp, #4]
   2f7ec:	cmp	r7, #0
   2f7f0:	beq	2f820 <flatcc_builder_embed_buffer@@Base+0xf8>
   2f7f4:	ldm	sp, {r0, r1}
   2f7f8:	add	r0, r0, r7
   2f7fc:	str	r0, [sp]
   2f800:	mov	r0, sp
   2f804:	add	r0, r0, r1, lsl #3
   2f808:	movw	r2, #413	; 0x19d
   2f80c:	movt	r2, #5
   2f810:	str	r2, [r0, #8]
   2f814:	str	r7, [r0, #12]
   2f818:	add	r0, r1, #1
   2f81c:	str	r0, [sp, #4]
   2f820:	mov	r1, sp
   2f824:	mov	r0, r4
   2f828:	bl	2f908 <flatcc_builder_embed_buffer@@Base+0x1e0>
   2f82c:	sub	sp, fp, #16
   2f830:	pop	{r4, r5, r6, r7, fp, pc}
   2f834:	push	{r4, r5, r6, r7, fp, lr}
   2f838:	add	fp, sp, #16
   2f83c:	sub	sp, sp, #72	; 0x48
   2f840:	mov	r6, r3
   2f844:	mov	r5, r2
   2f848:	mov	r7, r1
   2f84c:	mov	r4, r0
   2f850:	cmp	r2, #0
   2f854:	bne	2f864 <flatcc_builder_embed_buffer@@Base+0x13c>
   2f858:	ldrh	r5, [r4, #132]	; 0x84
   2f85c:	cmp	r5, #0
   2f860:	movweq	r5, #1
   2f864:	mov	r0, r7
   2f868:	mov	r1, #4
   2f86c:	bl	306dc <flatcc_builder_start_vector@@Base+0x80>
   2f870:	mov	r0, r7
   2f874:	mov	r1, r5
   2f878:	bl	306dc <flatcc_builder_start_vector@@Base+0x80>
   2f87c:	cmp	r6, #0
   2f880:	bne	2f8c8 <flatcc_builder_embed_buffer@@Base+0x1a0>
   2f884:	mov	r0, r4
   2f888:	mov	r1, r5
   2f88c:	bl	323bc <flatcc_builder_get_emit_context@@Base+0x8>
   2f890:	cmp	r0, #0
   2f894:	beq	2f8c8 <flatcc_builder_embed_buffer@@Base+0x1a0>
   2f898:	str	r0, [sp, #12]
   2f89c:	movw	r1, #413	; 0x19d
   2f8a0:	movt	r1, #5
   2f8a4:	str	r1, [sp, #8]
   2f8a8:	str	r0, [sp]
   2f8ac:	mov	r0, #1
   2f8b0:	str	r0, [sp, #4]
   2f8b4:	mov	r1, sp
   2f8b8:	mov	r0, r4
   2f8bc:	bl	30a68 <flatcc_builder_create_vtable@@Base+0x80>
   2f8c0:	cmp	r0, #0
   2f8c4:	beq	2f8d0 <flatcc_builder_embed_buffer@@Base+0x1a8>
   2f8c8:	sub	sp, fp, #16
   2f8cc:	pop	{r4, r5, r6, r7, fp, pc}
   2f8d0:	movw	r0, #30217	; 0x7609
   2f8d4:	movt	r0, #4
   2f8d8:	movw	r1, #943	; 0x3af
   2f8dc:	movt	r1, #5
   2f8e0:	movw	r3, #5074	; 0x13d2
   2f8e4:	movt	r3, #5
   2f8e8:	movw	r2, #702	; 0x2be
   2f8ec:	bl	14ab4 <__assert_fail@plt>
   2f8f0:	ldr	r0, [r0, #136]	; 0x88
   2f8f4:	sub	r0, r0, r1
   2f8f8:	sub	r1, r2, #1
   2f8fc:	and	r0, r0, r1
   2f900:	bx	lr
   2f904:	bx	lr
   2f908:	push	{r4, r5, fp, lr}
   2f90c:	add	fp, sp, #8
   2f910:	sub	sp, sp, #8
   2f914:	ldr	r3, [r1]
   2f918:	cmp	r3, #0
   2f91c:	ble	2f97c <flatcc_builder_embed_buffer@@Base+0x254>
   2f920:	mov	r4, r0
   2f924:	ldr	r0, [r0, #136]	; 0x88
   2f928:	sub	r5, r0, r3
   2f92c:	ldr	r2, [r1, #4]
   2f930:	ldr	r0, [r4, #36]	; 0x24
   2f934:	ldr	ip, [r4, #44]	; 0x2c
   2f938:	str	r3, [sp]
   2f93c:	add	r1, r1, #8
   2f940:	mov	r3, r5
   2f944:	blx	ip
   2f948:	cmp	r0, #0
   2f94c:	streq	r5, [r4, #136]	; 0x88
   2f950:	moveq	r0, r5
   2f954:	subeq	sp, fp, #8
   2f958:	popeq	{r4, r5, fp, pc}
   2f95c:	movw	r0, #30217	; 0x7609
   2f960:	movt	r0, #4
   2f964:	movw	r1, #943	; 0x3af
   2f968:	movt	r1, #5
   2f96c:	movw	r3, #5140	; 0x1414
   2f970:	movt	r3, #5
   2f974:	movw	r2, #651	; 0x28b
   2f978:	bl	14ab4 <__assert_fail@plt>
   2f97c:	movw	r0, #30217	; 0x7609
   2f980:	movt	r0, #4
   2f984:	movw	r1, #943	; 0x3af
   2f988:	movt	r1, #5
   2f98c:	movw	r3, #5140	; 0x1414
   2f990:	movt	r3, #5
   2f994:	movw	r2, #647	; 0x287
   2f998:	bl	14ab4 <__assert_fail@plt>

0002f99c <flatcc_builder_create_buffer@@Base>:
   2f99c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f9a0:	add	fp, sp, #28
   2f9a4:	sub	sp, sp, #92	; 0x5c
   2f9a8:	mov	r6, r3
   2f9ac:	mov	r7, r1
   2f9b0:	mov	r4, r0
   2f9b4:	ldr	r0, [fp, #8]
   2f9b8:	strh	r0, [fp, #-30]	; 0xffffffe2
   2f9bc:	mov	r0, #0
   2f9c0:	str	r0, [sp, #4]
   2f9c4:	ldr	sl, [fp, #12]
   2f9c8:	and	r9, sl, #1
   2f9cc:	sub	r1, fp, #30
   2f9d0:	mov	r0, r4
   2f9d4:	mov	r3, r9
   2f9d8:	bl	2f834 <flatcc_builder_embed_buffer@@Base+0x10c>
   2f9dc:	ldrh	r5, [fp, #-30]	; 0xffffffe2
   2f9e0:	mov	r0, r4
   2f9e4:	mov	r1, r5
   2f9e8:	bl	2fb68 <flatcc_builder_create_buffer@@Base+0x1cc>
   2f9ec:	cmp	r7, #0
   2f9f0:	str	r6, [sp]
   2f9f4:	beq	2fa10 <flatcc_builder_create_buffer@@Base+0x74>
   2f9f8:	ldr	r7, [r7]
   2f9fc:	mov	r0, r7
   2fa00:	bl	2fb78 <flatcc_builder_create_buffer@@Base+0x1dc>
   2fa04:	bl	2f904 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2fa08:	str	r7, [sp, #4]
   2fa0c:	b	2fa14 <flatcc_builder_create_buffer@@Base+0x78>
   2fa10:	ldr	r7, [sp, #4]
   2fa14:	mov	r8, #4
   2fa18:	and	r0, r8, sl, lsl #1
   2fa1c:	cmp	r7, #0
   2fa20:	mov	r6, r7
   2fa24:	movwne	r6, #1
   2fa28:	add	r0, r0, r6, lsl #2
   2fa2c:	add	r1, r0, #4
   2fa30:	mov	r0, r4
   2fa34:	mov	r2, r5
   2fa38:	bl	2f8f0 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2fa3c:	mov	r1, #0
   2fa40:	str	r1, [sp, #12]
   2fa44:	str	r1, [sp, #8]
   2fa48:	ands	ip, sl, #3
   2fa4c:	strne	r8, [sp, #20]
   2fa50:	subne	r1, fp, #40	; 0x28
   2fa54:	strne	r1, [sp, #16]
   2fa58:	strne	r8, [sp, #8]
   2fa5c:	movne	r1, #1
   2fa60:	strne	r1, [sp, #12]
   2fa64:	ldr	r1, [sp, #8]
   2fa68:	ldr	r3, [sp, #12]
   2fa6c:	add	r5, r1, #4
   2fa70:	str	r5, [sp, #8]
   2fa74:	add	lr, sp, #8
   2fa78:	add	r1, lr, r3, lsl #3
   2fa7c:	sub	r2, fp, #36	; 0x24
   2fa80:	str	r2, [r1, #8]
   2fa84:	str	r8, [r1, #12]
   2fa88:	add	r1, r3, #1
   2fa8c:	str	r1, [sp, #12]
   2fa90:	cmp	r7, #0
   2fa94:	beq	2fabc <flatcc_builder_create_buffer@@Base+0x120>
   2fa98:	lsl	r2, r6, #2
   2fa9c:	add	r5, r5, r2
   2faa0:	str	r5, [sp, #8]
   2faa4:	add	r1, lr, r1, lsl #3
   2faa8:	add	r5, sp, #4
   2faac:	str	r5, [r1, #8]
   2fab0:	str	r2, [r1, #12]
   2fab4:	add	r1, r3, #2
   2fab8:	str	r1, [sp, #12]
   2fabc:	cmp	r0, #0
   2fac0:	beq	2faf0 <flatcc_builder_create_buffer@@Base+0x154>
   2fac4:	ldr	r1, [sp, #8]
   2fac8:	ldr	r2, [sp, #12]
   2facc:	add	r1, r1, r0
   2fad0:	str	r1, [sp, #8]
   2fad4:	add	r1, lr, r2, lsl #3
   2fad8:	movw	r3, #413	; 0x19d
   2fadc:	movt	r3, #5
   2fae0:	str	r3, [r1, #8]
   2fae4:	str	r0, [r1, #12]
   2fae8:	add	r0, r2, #1
   2faec:	str	r0, [sp, #12]
   2faf0:	ldr	r0, [r4, #136]	; 0x88
   2faf4:	ldr	r1, [sp, #8]
   2faf8:	sub	r5, r0, r1
   2fafc:	cmp	ip, #0
   2fb00:	addne	r5, r5, #4
   2fb04:	mov	r0, #144	; 0x90
   2fb08:	cmp	r9, #0
   2fb0c:	movweq	r0, #140	; 0x8c
   2fb10:	ldr	r0, [r4, r0]
   2fb14:	sub	r0, r0, r5
   2fb18:	bl	2f904 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2fb1c:	str	r0, [fp, #-40]	; 0xffffffd8
   2fb20:	ldr	r0, [sp]
   2fb24:	sub	r0, r0, r5
   2fb28:	bl	2f904 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2fb2c:	str	r0, [fp, #-36]	; 0xffffffdc
   2fb30:	add	r1, sp, #8
   2fb34:	mov	r0, r4
   2fb38:	bl	2f908 <flatcc_builder_embed_buffer@@Base+0x1e0>
   2fb3c:	cmp	r0, #0
   2fb40:	subne	sp, fp, #28
   2fb44:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fb48:	movw	r0, #30217	; 0x7609
   2fb4c:	movt	r0, #4
   2fb50:	movw	r1, #943	; 0x3af
   2fb54:	movt	r1, #5
   2fb58:	movw	r3, #1258	; 0x4ea
   2fb5c:	movt	r3, #5
   2fb60:	mov	r2, #772	; 0x304
   2fb64:	bl	14ab4 <__assert_fail@plt>
   2fb68:	ldrh	r2, [r0, #128]	; 0x80
   2fb6c:	cmp	r2, r1
   2fb70:	strhcc	r1, [r0, #128]	; 0x80
   2fb74:	bx	lr
   2fb78:	bx	lr

0002fb7c <flatcc_builder_create_struct@@Base>:
   2fb7c:	push	{r4, r5, r6, r7, fp, lr}
   2fb80:	add	fp, sp, #16
   2fb84:	sub	sp, sp, #72	; 0x48
   2fb88:	cmp	r3, #0
   2fb8c:	beq	2fc24 <flatcc_builder_create_struct@@Base+0xa8>
   2fb90:	mov	r7, r3
   2fb94:	mov	r5, r2
   2fb98:	mov	r6, r1
   2fb9c:	mov	r4, r0
   2fba0:	mov	r1, r3
   2fba4:	bl	2fb68 <flatcc_builder_create_buffer@@Base+0x1cc>
   2fba8:	mov	r0, r4
   2fbac:	mov	r1, r5
   2fbb0:	mov	r2, r7
   2fbb4:	bl	2f8f0 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2fbb8:	mov	r1, #0
   2fbbc:	str	r1, [sp, #4]
   2fbc0:	str	r1, [sp]
   2fbc4:	cmp	r5, #0
   2fbc8:	strne	r5, [sp, #12]
   2fbcc:	strne	r6, [sp, #8]
   2fbd0:	strne	r5, [sp]
   2fbd4:	movne	r1, #1
   2fbd8:	strne	r1, [sp, #4]
   2fbdc:	cmp	r0, #0
   2fbe0:	beq	2fc10 <flatcc_builder_create_struct@@Base+0x94>
   2fbe4:	ldm	sp, {r1, r2}
   2fbe8:	add	r1, r1, r0
   2fbec:	str	r1, [sp]
   2fbf0:	mov	r1, sp
   2fbf4:	add	r1, r1, r2, lsl #3
   2fbf8:	movw	r3, #413	; 0x19d
   2fbfc:	movt	r3, #5
   2fc00:	str	r3, [r1, #8]
   2fc04:	str	r0, [r1, #12]
   2fc08:	add	r0, r2, #1
   2fc0c:	str	r0, [sp, #4]
   2fc10:	mov	r1, sp
   2fc14:	mov	r0, r4
   2fc18:	bl	2f908 <flatcc_builder_embed_buffer@@Base+0x1e0>
   2fc1c:	sub	sp, fp, #16
   2fc20:	pop	{r4, r5, r6, r7, fp, pc}
   2fc24:	movw	r0, #1389	; 0x56d
   2fc28:	movt	r0, #5
   2fc2c:	movw	r1, #943	; 0x3af
   2fc30:	movt	r1, #5
   2fc34:	movw	r3, #1400	; 0x578
   2fc38:	movt	r3, #5
   2fc3c:	movw	r2, #783	; 0x30f
   2fc40:	bl	14ab4 <__assert_fail@plt>

0002fc44 <flatcc_builder_start_buffer@@Base>:
   2fc44:	push	{r4, r5, r6, r7, fp, lr}
   2fc48:	add	fp, sp, #16
   2fc4c:	mov	r6, r3
   2fc50:	mov	r7, r2
   2fc54:	mov	r5, r1
   2fc58:	mov	r4, r0
   2fc5c:	ldrh	r1, [r0, #128]	; 0x80
   2fc60:	bl	2fd00 <flatcc_builder_start_buffer@@Base+0xbc>
   2fc64:	mov	r1, r0
   2fc68:	mvn	r0, #0
   2fc6c:	cmp	r1, #0
   2fc70:	popne	{r4, r5, r6, r7, fp, pc}
   2fc74:	mov	r0, #1
   2fc78:	strh	r0, [r4, #128]	; 0x80
   2fc7c:	ldrh	r1, [r4, #132]	; 0x84
   2fc80:	ldr	r2, [r4, #32]
   2fc84:	strh	r1, [r2, #34]	; 0x22
   2fc88:	strh	r7, [r4, #132]	; 0x84
   2fc8c:	ldrh	r1, [r4, #164]	; 0xa4
   2fc90:	ldr	r2, [r4, #32]
   2fc94:	strh	r1, [r2, #32]
   2fc98:	strh	r6, [r4, #164]	; 0xa4
   2fc9c:	ldr	r1, [r4, #32]
   2fca0:	ldr	r2, [r4, #144]	; 0x90
   2fca4:	str	r2, [r1, #20]
   2fca8:	ldr	r1, [r4, #32]
   2fcac:	ldr	r2, [r4, #152]	; 0x98
   2fcb0:	str	r2, [r1, #28]
   2fcb4:	ldr	r1, [r4, #32]
   2fcb8:	ldr	r2, [r4, #136]	; 0x88
   2fcbc:	ldr	r3, [r4, #148]	; 0x94
   2fcc0:	ldr	r7, [r4, #168]	; 0xa8
   2fcc4:	add	r6, r3, #1
   2fcc8:	str	r2, [r4, #144]	; 0x90
   2fccc:	str	r6, [r4, #148]	; 0x94
   2fcd0:	str	r3, [r4, #152]	; 0x98
   2fcd4:	str	r7, [r1, #16]
   2fcd8:	movw	r1, #413	; 0x19d
   2fcdc:	movt	r1, #5
   2fce0:	cmp	r5, #0
   2fce4:	movne	r1, r5
   2fce8:	ldr	r1, [r1]
   2fcec:	str	r1, [r4, #168]	; 0xa8
   2fcf0:	ldr	r1, [r4, #32]
   2fcf4:	strh	r0, [r1, #14]
   2fcf8:	mov	r0, #0
   2fcfc:	pop	{r4, r5, r6, r7, fp, pc}
   2fd00:	push	{r4, r5, r6, sl, fp, lr}
   2fd04:	add	fp, sp, #16
   2fd08:	sub	sp, sp, #8
   2fd0c:	mov	r5, r1
   2fd10:	mov	r4, r0
   2fd14:	ldr	r1, [r0, #156]	; 0x9c
   2fd18:	ldr	r2, [r0, #160]	; 0xa0
   2fd1c:	add	r0, r1, #1
   2fd20:	str	r0, [r4, #156]	; 0x9c
   2fd24:	cmp	r1, r2
   2fd28:	bge	2fd3c <flatcc_builder_start_buffer@@Base+0xf8>
   2fd2c:	ldr	r0, [r4, #32]
   2fd30:	add	r0, r0, #36	; 0x24
   2fd34:	str	r0, [r4, #32]
   2fd38:	b	2fdb0 <flatcc_builder_start_buffer@@Base+0x16c>
   2fd3c:	ldr	r2, [r4, #176]	; 0xb0
   2fd40:	mvn	r6, #0
   2fd44:	cmp	r2, #1
   2fd48:	cmpge	r1, r2
   2fd4c:	bge	2fdec <flatcc_builder_start_buffer@@Base+0x1a8>
   2fd50:	mov	r1, #0
   2fd54:	str	r1, [sp]
   2fd58:	add	r0, r0, r0, lsl #3
   2fd5c:	mvn	r1, #35	; 0x23
   2fd60:	add	r2, r1, r0, lsl #2
   2fd64:	mov	r0, r4
   2fd68:	mov	r1, #4
   2fd6c:	mov	r3, #36	; 0x24
   2fd70:	bl	2f594 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2fd74:	str	r0, [r4, #32]
   2fd78:	cmp	r0, #0
   2fd7c:	beq	2fdec <flatcc_builder_start_buffer@@Base+0x1a8>
   2fd80:	ldr	r0, [r4, #88]	; 0x58
   2fd84:	ldr	r1, [r4, #176]	; 0xb0
   2fd88:	movw	r2, #36409	; 0x8e39
   2fd8c:	movt	r2, #14563	; 0x38e3
   2fd90:	umull	r0, r2, r0, r2
   2fd94:	lsr	r0, r2, #3
   2fd98:	cmp	r1, r2, lsr #3
   2fd9c:	mov	r2, r0
   2fda0:	movlt	r2, r1
   2fda4:	cmp	r1, #0
   2fda8:	movle	r2, r0
   2fdac:	str	r2, [r4, #160]	; 0xa0
   2fdb0:	ldr	r0, [r4, #20]
   2fdb4:	ldr	r1, [r4, #32]
   2fdb8:	str	r0, [r1, #8]
   2fdbc:	ldrh	r2, [r4, #130]	; 0x82
   2fdc0:	strh	r2, [r1, #12]
   2fdc4:	strh	r5, [r4, #130]	; 0x82
   2fdc8:	ldr	r2, [r4, #28]
   2fdcc:	mvn	r3, #3
   2fdd0:	stm	r1, {r2, r3}
   2fdd4:	mov	r6, #0
   2fdd8:	str	r6, [r4, #20]
   2fddc:	add	r0, r0, r2
   2fde0:	add	r0, r0, #7
   2fde4:	bic	r0, r0, #7
   2fde8:	str	r0, [r4, #28]
   2fdec:	mov	r0, r6
   2fdf0:	sub	sp, fp, #16
   2fdf4:	pop	{r4, r5, r6, sl, fp, pc}

0002fdf8 <flatcc_builder_end_buffer@@Base>:
   2fdf8:	push	{r4, r5, r6, r7, fp, lr}
   2fdfc:	add	fp, sp, #16
   2fe00:	sub	sp, sp, #8
   2fe04:	mov	r4, r0
   2fe08:	ldr	r0, [r0, #32]
   2fe0c:	ldrh	r0, [r0, #14]
   2fe10:	cmp	r0, #1
   2fe14:	bne	2fea0 <flatcc_builder_end_buffer@@Base+0xa8>
   2fe18:	mov	r5, r1
   2fe1c:	ldr	r6, [r4, #152]	; 0x98
   2fe20:	ldrh	r7, [r4, #164]	; 0xa4
   2fe24:	ldrh	r1, [r4, #132]	; 0x84
   2fe28:	mov	r0, r4
   2fe2c:	bl	2fb68 <flatcc_builder_create_buffer@@Base+0x1cc>
   2fe30:	and	r0, r7, #2
   2fe34:	cmp	r6, #0
   2fe38:	orrne	r0, r0, #1
   2fe3c:	ldrh	r2, [r4, #132]	; 0x84
   2fe40:	ldrh	r1, [r4, #128]	; 0x80
   2fe44:	str	r1, [sp]
   2fe48:	str	r0, [sp, #4]
   2fe4c:	add	r1, r4, #168	; 0xa8
   2fe50:	mov	r0, r4
   2fe54:	mov	r3, r5
   2fe58:	bl	2f99c <flatcc_builder_create_buffer@@Base>
   2fe5c:	mov	r5, r0
   2fe60:	cmp	r0, #0
   2fe64:	beq	2fe94 <flatcc_builder_end_buffer@@Base+0x9c>
   2fe68:	ldr	r0, [r4, #32]
   2fe6c:	ldr	r1, [r0, #20]
   2fe70:	str	r1, [r4, #144]	; 0x90
   2fe74:	ldr	r1, [r0, #28]
   2fe78:	str	r1, [r4, #152]	; 0x98
   2fe7c:	ldr	r1, [r0, #16]
   2fe80:	str	r1, [r4, #168]	; 0xa8
   2fe84:	ldrh	r0, [r0, #32]
   2fe88:	strh	r0, [r4, #164]	; 0xa4
   2fe8c:	mov	r0, r4
   2fe90:	bl	2fec0 <flatcc_builder_end_buffer@@Base+0xc8>
   2fe94:	mov	r0, r5
   2fe98:	sub	sp, fp, #16
   2fe9c:	pop	{r4, r5, r6, r7, fp, pc}
   2fea0:	movw	r0, #1502	; 0x5de
   2fea4:	movt	r0, #5
   2fea8:	movw	r1, #943	; 0x3af
   2feac:	movt	r1, #5
   2feb0:	movw	r3, #1546	; 0x60a
   2feb4:	movt	r3, #5
   2feb8:	movw	r2, #838	; 0x346
   2febc:	bl	14ab4 <__assert_fail@plt>
   2fec0:	push	{r4, sl, fp, lr}
   2fec4:	add	fp, sp, #8
   2fec8:	mov	r4, r0
   2fecc:	ldr	r0, [r0, #16]
   2fed0:	ldr	r2, [r4, #20]
   2fed4:	mov	r1, #0
   2fed8:	bl	14a0c <memset@plt>
   2fedc:	ldr	r0, [r4, #32]
   2fee0:	ldr	r1, [r0, #8]
   2fee4:	str	r1, [r4, #20]
   2fee8:	ldr	r1, [r0]
   2feec:	str	r1, [r4, #28]
   2fef0:	ldr	r1, [r0, #4]
   2fef4:	mov	r0, r4
   2fef8:	bl	2ff78 <flatcc_builder_start_struct@@Base+0x4c>
   2fefc:	ldrh	r1, [r4, #130]	; 0x82
   2ff00:	mov	r0, r4
   2ff04:	bl	2fb68 <flatcc_builder_create_buffer@@Base+0x1cc>
   2ff08:	ldr	r0, [r4, #32]
   2ff0c:	ldr	r1, [r4, #156]	; 0x9c
   2ff10:	ldrh	r2, [r0, #12]
   2ff14:	sub	r0, r0, #36	; 0x24
   2ff18:	str	r0, [r4, #32]
   2ff1c:	sub	r0, r1, #1
   2ff20:	str	r0, [r4, #156]	; 0x9c
   2ff24:	strh	r2, [r4, #130]	; 0x82
   2ff28:	pop	{r4, sl, fp, pc}

0002ff2c <flatcc_builder_start_struct@@Base>:
   2ff2c:	push	{r4, r5, fp, lr}
   2ff30:	add	fp, sp, #8
   2ff34:	mov	r4, r1
   2ff38:	mov	r5, r0
   2ff3c:	mov	r1, r2
   2ff40:	bl	2fd00 <flatcc_builder_start_buffer@@Base+0xbc>
   2ff44:	cmp	r0, #0
   2ff48:	movne	r0, #0
   2ff4c:	popne	{r4, r5, fp, pc}
   2ff50:	ldr	r0, [r5, #32]
   2ff54:	mov	r1, #2
   2ff58:	strh	r1, [r0, #14]
   2ff5c:	mov	r0, r5
   2ff60:	mvn	r1, #3
   2ff64:	bl	2ff78 <flatcc_builder_start_struct@@Base+0x4c>
   2ff68:	mov	r0, r5
   2ff6c:	mov	r1, r4
   2ff70:	pop	{r4, r5, fp, lr}
   2ff74:	b	2ffb0 <flatcc_builder_start_struct@@Base+0x84>
   2ff78:	push	{fp, lr}
   2ff7c:	mov	fp, sp
   2ff80:	ldr	r2, [r0, #28]
   2ff84:	ldr	ip, [r0, #32]
   2ff88:	ldr	r3, [r0, #60]	; 0x3c
   2ff8c:	ldr	lr, [r0, #64]	; 0x40
   2ff90:	add	r3, r3, r2
   2ff94:	str	r3, [r0, #16]
   2ff98:	sub	r2, lr, r2
   2ff9c:	cmp	r2, r1
   2ffa0:	movhi	r2, r1
   2ffa4:	str	r2, [r0, #24]
   2ffa8:	str	r1, [ip, #4]
   2ffac:	pop	{fp, pc}
   2ffb0:	push	{r4, r5, fp, lr}
   2ffb4:	add	fp, sp, #8
   2ffb8:	mov	r4, r0
   2ffbc:	ldr	r5, [r0, #20]
   2ffc0:	ldr	r2, [r0, #24]
   2ffc4:	add	r0, r5, r1
   2ffc8:	str	r0, [r4, #20]
   2ffcc:	cmp	r0, r2
   2ffd0:	bcc	2fff4 <flatcc_builder_start_struct@@Base+0xc8>
   2ffd4:	add	r1, r0, #1
   2ffd8:	mov	r0, r4
   2ffdc:	mvn	r2, #3
   2ffe0:	bl	323cc <flatcc_builder_get_emit_context@@Base+0x18>
   2ffe4:	mov	r1, r0
   2ffe8:	mov	r0, #0
   2ffec:	cmp	r1, #0
   2fff0:	popne	{r4, r5, fp, pc}
   2fff4:	ldr	r0, [r4, #16]
   2fff8:	add	r0, r0, r5
   2fffc:	pop	{r4, r5, fp, pc}

00030000 <flatcc_builder_struct_edit@@Base>:
   30000:	ldr	r0, [r0, #16]
   30004:	bx	lr

00030008 <flatcc_builder_end_struct@@Base>:
   30008:	push	{r4, r5, fp, lr}
   3000c:	add	fp, sp, #8
   30010:	mov	r4, r0
   30014:	ldr	r0, [r0, #32]
   30018:	ldrh	r0, [r0, #14]
   3001c:	cmp	r0, #2
   30020:	bne	30050 <flatcc_builder_end_struct@@Base+0x48>
   30024:	ldrh	r3, [r4, #130]	; 0x82
   30028:	ldr	r1, [r4, #16]
   3002c:	ldr	r2, [r4, #20]
   30030:	mov	r0, r4
   30034:	bl	2fb7c <flatcc_builder_create_struct@@Base>
   30038:	mov	r5, r0
   3003c:	cmp	r0, #0
   30040:	movne	r0, r4
   30044:	blne	2fec0 <flatcc_builder_end_buffer@@Base+0xc8>
   30048:	mov	r0, r5
   3004c:	pop	{r4, r5, fp, pc}
   30050:	movw	r0, #1635	; 0x663
   30054:	movt	r0, #5
   30058:	movw	r1, #943	; 0x3af
   3005c:	movt	r1, #5
   30060:	movw	r3, #1679	; 0x68f
   30064:	movt	r3, #5
   30068:	mov	r2, #872	; 0x368
   3006c:	bl	14ab4 <__assert_fail@plt>

00030070 <flatcc_builder_extend_vector@@Base>:
   30070:	push	{r4, r5, fp, lr}
   30074:	add	fp, sp, #8
   30078:	mov	r5, r1
   3007c:	mov	r4, r0
   30080:	ldr	r0, [r0, #32]
   30084:	ldr	r2, [r0, #24]
   30088:	mov	r0, r4
   3008c:	bl	300b4 <flatcc_builder_extend_vector@@Base+0x44>
   30090:	cmp	r0, #0
   30094:	movne	r0, #0
   30098:	popne	{r4, r5, fp, pc}
   3009c:	ldr	r0, [r4, #32]
   300a0:	ldr	r0, [r0, #16]
   300a4:	mul	r1, r0, r5
   300a8:	mov	r0, r4
   300ac:	pop	{r4, r5, fp, lr}
   300b0:	b	2ffb0 <flatcc_builder_start_struct@@Base+0x84>
   300b4:	push	{fp, lr}
   300b8:	mov	fp, sp
   300bc:	ldr	r0, [r0, #32]
   300c0:	ldr	r3, [r0, #20]
   300c4:	adds	r1, r3, r1
   300c8:	bcs	300dc <flatcc_builder_extend_vector@@Base+0x6c>
   300cc:	cmp	r1, r2
   300d0:	strls	r1, [r0, #20]
   300d4:	movls	r0, #0
   300d8:	popls	{fp, pc}
   300dc:	movw	r0, #5214	; 0x145e
   300e0:	movt	r0, #5
   300e4:	movw	r1, #943	; 0x3af
   300e8:	movt	r1, #5
   300ec:	movw	r3, #5241	; 0x1479
   300f0:	movt	r3, #5
   300f4:	mov	r2, #892	; 0x37c
   300f8:	bl	14ab4 <__assert_fail@plt>

000300fc <flatcc_builder_vector_push@@Base>:
   300fc:	push	{fp, lr}
   30100:	mov	fp, sp
   30104:	ldr	r2, [r0, #32]
   30108:	ldrh	r3, [r2, #14]
   3010c:	cmp	r3, #4
   30110:	bne	3013c <flatcc_builder_vector_push@@Base+0x40>
   30114:	ldr	ip, [r2, #20]
   30118:	ldr	r3, [r2, #24]
   3011c:	cmp	ip, r3
   30120:	bhi	3015c <flatcc_builder_vector_push@@Base+0x60>
   30124:	add	r3, ip, #1
   30128:	str	r3, [r2, #20]
   3012c:	ldr	r2, [r0, #32]
   30130:	ldr	r2, [r2, #16]
   30134:	pop	{fp, lr}
   30138:	b	3017c <flatcc_builder_vector_push@@Base+0x80>
   3013c:	movw	r0, #1746	; 0x6d2
   30140:	movt	r0, #5
   30144:	movw	r1, #943	; 0x3af
   30148:	movt	r1, #5
   3014c:	movw	r3, #1790	; 0x6fe
   30150:	movt	r3, #5
   30154:	movw	r2, #907	; 0x38b
   30158:	bl	14ab4 <__assert_fail@plt>
   3015c:	movw	r0, #1857	; 0x741
   30160:	movt	r0, #5
   30164:	movw	r1, #943	; 0x3af
   30168:	movt	r1, #5
   3016c:	movw	r3, #1790	; 0x6fe
   30170:	movt	r3, #5
   30174:	mov	r2, #908	; 0x38c
   30178:	bl	14ab4 <__assert_fail@plt>
   3017c:	push	{r4, r5, r6, sl, fp, lr}
   30180:	add	fp, sp, #16
   30184:	mov	r4, r2
   30188:	mov	r5, r1
   3018c:	mov	r1, r2
   30190:	bl	2ffb0 <flatcc_builder_start_struct@@Base+0x84>
   30194:	mov	r6, r0
   30198:	cmp	r0, #0
   3019c:	beq	301b0 <flatcc_builder_vector_push@@Base+0xb4>
   301a0:	mov	r0, r6
   301a4:	mov	r1, r5
   301a8:	mov	r2, r4
   301ac:	bl	14934 <memcpy@plt>
   301b0:	mov	r0, r6
   301b4:	pop	{r4, r5, r6, sl, fp, pc}

000301b8 <flatcc_builder_append_vector@@Base>:
   301b8:	push	{r4, r5, r6, sl, fp, lr}
   301bc:	add	fp, sp, #16
   301c0:	mov	r4, r1
   301c4:	mov	r6, r0
   301c8:	ldr	r0, [r0, #32]
   301cc:	ldrh	r1, [r0, #14]
   301d0:	cmp	r1, #4
   301d4:	bne	30218 <flatcc_builder_append_vector@@Base+0x60>
   301d8:	mov	r5, r2
   301dc:	ldr	r2, [r0, #24]
   301e0:	mov	r0, r6
   301e4:	mov	r1, r5
   301e8:	bl	300b4 <flatcc_builder_extend_vector@@Base+0x44>
   301ec:	cmp	r0, #0
   301f0:	beq	301fc <flatcc_builder_append_vector@@Base+0x44>
   301f4:	mov	r0, #0
   301f8:	pop	{r4, r5, r6, sl, fp, pc}
   301fc:	ldr	r0, [r6, #32]
   30200:	ldr	r0, [r0, #16]
   30204:	mul	r2, r0, r5
   30208:	mov	r0, r6
   3020c:	mov	r1, r4
   30210:	pop	{r4, r5, r6, sl, fp, lr}
   30214:	b	3017c <flatcc_builder_vector_push@@Base+0x80>
   30218:	movw	r0, #1746	; 0x6d2
   3021c:	movt	r0, #5
   30220:	movw	r1, #943	; 0x3af
   30224:	movt	r1, #5
   30228:	movw	r3, #1918	; 0x77e
   3022c:	movt	r3, #5
   30230:	movw	r2, #915	; 0x393
   30234:	bl	14ab4 <__assert_fail@plt>

00030238 <flatcc_builder_extend_offset_vector@@Base>:
   30238:	push	{r4, r5, fp, lr}
   3023c:	add	fp, sp, #8
   30240:	mov	r5, r1
   30244:	mov	r4, r0
   30248:	mvn	r2, #-1073741824	; 0xc0000000
   3024c:	bl	300b4 <flatcc_builder_extend_vector@@Base+0x44>
   30250:	cmp	r0, #0
   30254:	movne	r0, #0
   30258:	popne	{r4, r5, fp, pc}
   3025c:	lsl	r1, r5, #2
   30260:	mov	r0, r4
   30264:	pop	{r4, r5, fp, lr}
   30268:	b	2ffb0 <flatcc_builder_start_struct@@Base+0x84>

0003026c <flatcc_builder_offset_vector_push@@Base>:
   3026c:	push	{r4, r5, fp, lr}
   30270:	add	fp, sp, #8
   30274:	mov	r4, r1
   30278:	ldr	r1, [r0, #32]
   3027c:	ldrh	r2, [r1, #14]
   30280:	cmp	r2, #5
   30284:	bne	302bc <flatcc_builder_offset_vector_push@@Base+0x50>
   30288:	ldr	r2, [r1, #20]
   3028c:	mov	r5, #0
   30290:	cmn	r2, #-1073741823	; 0xc0000001
   30294:	beq	302b4 <flatcc_builder_offset_vector_push@@Base+0x48>
   30298:	add	r2, r2, #1
   3029c:	str	r2, [r1, #20]
   302a0:	mov	r1, #4
   302a4:	bl	2ffb0 <flatcc_builder_start_struct@@Base+0x84>
   302a8:	cmp	r0, #0
   302ac:	strne	r4, [r0]
   302b0:	movne	r5, r0
   302b4:	mov	r0, r5
   302b8:	pop	{r4, r5, fp, pc}
   302bc:	movw	r0, #1995	; 0x7cb
   302c0:	movt	r0, #5
   302c4:	movw	r1, #943	; 0x3af
   302c8:	movt	r1, #5
   302cc:	movw	r3, #2046	; 0x7fe
   302d0:	movt	r3, #5
   302d4:	movw	r2, #934	; 0x3a6
   302d8:	bl	14ab4 <__assert_fail@plt>

000302dc <flatcc_builder_append_offset_vector@@Base>:
   302dc:	push	{r4, r5, r6, sl, fp, lr}
   302e0:	add	fp, sp, #16
   302e4:	mov	r6, r0
   302e8:	ldr	r0, [r0, #32]
   302ec:	ldrh	r0, [r0, #14]
   302f0:	cmp	r0, #5
   302f4:	bne	30334 <flatcc_builder_append_offset_vector@@Base+0x58>
   302f8:	mov	r5, r2
   302fc:	mov	r4, r1
   30300:	mov	r0, r6
   30304:	mov	r1, r2
   30308:	mvn	r2, #-1073741824	; 0xc0000000
   3030c:	bl	300b4 <flatcc_builder_extend_vector@@Base+0x44>
   30310:	cmp	r0, #0
   30314:	beq	30320 <flatcc_builder_append_offset_vector@@Base+0x44>
   30318:	mov	r0, #0
   3031c:	pop	{r4, r5, r6, sl, fp, pc}
   30320:	lsl	r2, r5, #2
   30324:	mov	r0, r6
   30328:	mov	r1, r4
   3032c:	pop	{r4, r5, r6, sl, fp, lr}
   30330:	b	3017c <flatcc_builder_vector_push@@Base+0x80>
   30334:	movw	r0, #1995	; 0x7cb
   30338:	movt	r0, #5
   3033c:	movw	r1, #943	; 0x3af
   30340:	movt	r1, #5
   30344:	movw	r3, #2144	; 0x860
   30348:	movt	r3, #5
   3034c:	mov	r2, #948	; 0x3b4
   30350:	bl	14ab4 <__assert_fail@plt>

00030354 <flatcc_builder_extend_string@@Base>:
   30354:	push	{r4, r5, fp, lr}
   30358:	add	fp, sp, #8
   3035c:	mov	r5, r0
   30360:	ldr	r0, [r0, #32]
   30364:	ldrh	r0, [r0, #14]
   30368:	cmp	r0, #6
   3036c:	bne	3039c <flatcc_builder_extend_string@@Base+0x48>
   30370:	mov	r4, r1
   30374:	mov	r0, r5
   30378:	mvn	r2, #0
   3037c:	bl	300b4 <flatcc_builder_extend_vector@@Base+0x44>
   30380:	cmp	r0, #0
   30384:	movne	r0, #0
   30388:	popne	{r4, r5, fp, pc}
   3038c:	mov	r0, r5
   30390:	mov	r1, r4
   30394:	pop	{r4, r5, fp, lr}
   30398:	b	2ffb0 <flatcc_builder_start_struct@@Base+0x84>
   3039c:	movw	r0, #2260	; 0x8d4
   303a0:	movt	r0, #5
   303a4:	movw	r1, #943	; 0x3af
   303a8:	movt	r1, #5
   303ac:	movw	r3, #2304	; 0x900
   303b0:	movt	r3, #5
   303b4:	movw	r2, #957	; 0x3bd
   303b8:	bl	14ab4 <__assert_fail@plt>

000303bc <flatcc_builder_append_string@@Base>:
   303bc:	push	{r4, r5, r6, sl, fp, lr}
   303c0:	add	fp, sp, #16
   303c4:	mov	r6, r0
   303c8:	ldr	r0, [r0, #32]
   303cc:	ldrh	r0, [r0, #14]
   303d0:	cmp	r0, #6
   303d4:	bne	30414 <flatcc_builder_append_string@@Base+0x58>
   303d8:	mov	r4, r2
   303dc:	mov	r5, r1
   303e0:	mov	r0, r6
   303e4:	mov	r1, r2
   303e8:	mvn	r2, #0
   303ec:	bl	300b4 <flatcc_builder_extend_vector@@Base+0x44>
   303f0:	cmp	r0, #0
   303f4:	beq	30400 <flatcc_builder_append_string@@Base+0x44>
   303f8:	mov	r0, #0
   303fc:	pop	{r4, r5, r6, sl, fp, pc}
   30400:	mov	r0, r6
   30404:	mov	r1, r5
   30408:	mov	r2, r4
   3040c:	pop	{r4, r5, r6, sl, fp, lr}
   30410:	b	3017c <flatcc_builder_vector_push@@Base+0x80>
   30414:	movw	r0, #2260	; 0x8d4
   30418:	movt	r0, #5
   3041c:	movw	r1, #943	; 0x3af
   30420:	movt	r1, #5
   30424:	movw	r3, #2367	; 0x93f
   30428:	movt	r3, #5
   3042c:	movw	r2, #966	; 0x3c6
   30430:	bl	14ab4 <__assert_fail@plt>

00030434 <flatcc_builder_append_string_str@@Base>:
   30434:	push	{r4, r5, fp, lr}
   30438:	add	fp, sp, #8
   3043c:	mov	r4, r1
   30440:	mov	r5, r0
   30444:	mov	r0, r1
   30448:	bl	149dc <strlen@plt>
   3044c:	mov	r2, r0
   30450:	mov	r0, r5
   30454:	mov	r1, r4
   30458:	pop	{r4, r5, fp, lr}
   3045c:	b	303bc <flatcc_builder_append_string@@Base>

00030460 <flatcc_builder_append_string_strn@@Base>:
   30460:	push	{r4, r5, fp, lr}
   30464:	add	fp, sp, #8
   30468:	mov	r4, r1
   3046c:	mov	r5, r0
   30470:	mov	r0, r1
   30474:	mov	r1, r2
   30478:	bl	30490 <flatcc_builder_append_string_strn@@Base+0x30>
   3047c:	mov	r2, r0
   30480:	mov	r0, r5
   30484:	mov	r1, r4
   30488:	pop	{r4, r5, fp, lr}
   3048c:	b	303bc <flatcc_builder_append_string@@Base>
   30490:	push	{r4, r5, fp, lr}
   30494:	add	fp, sp, #8
   30498:	mov	r4, r1
   3049c:	mov	r5, r0
   304a0:	mov	r1, #0
   304a4:	mov	r2, r4
   304a8:	bl	14a30 <memchr@plt>
   304ac:	cmp	r0, #0
   304b0:	subne	r4, r0, r5
   304b4:	mov	r0, r4
   304b8:	pop	{r4, r5, fp, pc}

000304bc <flatcc_builder_truncate_vector@@Base>:
   304bc:	push	{fp, lr}
   304c0:	mov	fp, sp
   304c4:	ldr	r2, [r0, #32]
   304c8:	ldrh	r3, [r2, #14]
   304cc:	cmp	r3, #4
   304d0:	bne	30500 <flatcc_builder_truncate_vector@@Base+0x44>
   304d4:	ldr	r3, [r2, #20]
   304d8:	cmp	r3, r1
   304dc:	bcc	30520 <flatcc_builder_truncate_vector@@Base+0x64>
   304e0:	sub	r3, r3, r1
   304e4:	str	r3, [r2, #20]
   304e8:	ldr	r2, [r0, #32]
   304ec:	ldr	r2, [r2, #16]
   304f0:	mul	r1, r2, r1
   304f4:	bl	30540 <flatcc_builder_truncate_vector@@Base+0x84>
   304f8:	mov	r0, #0
   304fc:	pop	{fp, pc}
   30500:	movw	r0, #1746	; 0x6d2
   30504:	movt	r0, #5
   30508:	movw	r1, #943	; 0x3af
   3050c:	movt	r1, #5
   30510:	movw	r3, #2444	; 0x98c
   30514:	movt	r3, #5
   30518:	movw	r2, #985	; 0x3d9
   3051c:	bl	14ab4 <__assert_fail@plt>
   30520:	movw	r0, #2507	; 0x9cb
   30524:	movt	r0, #5
   30528:	movw	r1, #943	; 0x3af
   3052c:	movt	r1, #5
   30530:	movw	r3, #2444	; 0x98c
   30534:	movt	r3, #5
   30538:	movw	r2, #986	; 0x3da
   3053c:	bl	14ab4 <__assert_fail@plt>
   30540:	mov	r2, r1
   30544:	ldr	r1, [r0, #16]
   30548:	ldr	r3, [r0, #20]
   3054c:	sub	r3, r3, r2
   30550:	str	r3, [r0, #20]
   30554:	add	r0, r1, r3
   30558:	mov	r1, #0
   3055c:	b	14a0c <memset@plt>

00030560 <flatcc_builder_truncate_offset_vector@@Base>:
   30560:	push	{fp, lr}
   30564:	mov	fp, sp
   30568:	ldr	r2, [r0, #32]
   3056c:	ldrh	r3, [r2, #14]
   30570:	cmp	r3, #5
   30574:	bne	305a4 <flatcc_builder_truncate_offset_vector@@Base+0x44>
   30578:	ldr	r3, [r2, #20]
   3057c:	cmp	r3, r1
   30580:	bcc	305c4 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   30584:	sub	r3, r3, r1
   30588:	str	r3, [r2, #20]
   3058c:	ldr	r2, [r0, #32]
   30590:	ldr	r2, [r2, #16]
   30594:	mul	r1, r2, r1
   30598:	bl	30540 <flatcc_builder_truncate_vector@@Base+0x84>
   3059c:	mov	r0, #0
   305a0:	pop	{fp, pc}
   305a4:	movw	r0, #1995	; 0x7cb
   305a8:	movt	r0, #5
   305ac:	movw	r1, #943	; 0x3af
   305b0:	movt	r1, #5
   305b4:	movw	r3, #2543	; 0x9ef
   305b8:	movt	r3, #5
   305bc:	movw	r2, #994	; 0x3e2
   305c0:	bl	14ab4 <__assert_fail@plt>
   305c4:	movw	r0, #2613	; 0xa35
   305c8:	movt	r0, #5
   305cc:	movw	r1, #943	; 0x3af
   305d0:	movt	r1, #5
   305d4:	movw	r3, #2543	; 0x9ef
   305d8:	movt	r3, #5
   305dc:	movw	r2, #995	; 0x3e3
   305e0:	bl	14ab4 <__assert_fail@plt>

000305e4 <flatcc_builder_truncate_string@@Base>:
   305e4:	push	{fp, lr}
   305e8:	mov	fp, sp
   305ec:	ldr	r2, [r0, #32]
   305f0:	ldrh	r3, [r2, #14]
   305f4:	cmp	r3, #6
   305f8:	bne	3061c <flatcc_builder_truncate_string@@Base+0x38>
   305fc:	ldr	r3, [r2, #20]
   30600:	cmp	r3, r1
   30604:	bcc	3063c <flatcc_builder_truncate_string@@Base+0x58>
   30608:	sub	r3, r3, r1
   3060c:	str	r3, [r2, #20]
   30610:	bl	30540 <flatcc_builder_truncate_vector@@Base+0x84>
   30614:	mov	r0, #0
   30618:	pop	{fp, pc}
   3061c:	movw	r0, #2260	; 0x8d4
   30620:	movt	r0, #5
   30624:	movw	r1, #943	; 0x3af
   30628:	movt	r1, #5
   3062c:	movw	r3, #2672	; 0xa70
   30630:	movt	r3, #5
   30634:	movw	r2, #1003	; 0x3eb
   30638:	bl	14ab4 <__assert_fail@plt>
   3063c:	movw	r0, #2735	; 0xaaf
   30640:	movt	r0, #5
   30644:	movw	r1, #943	; 0x3af
   30648:	movt	r1, #5
   3064c:	movw	r3, #2672	; 0xa70
   30650:	movt	r3, #5
   30654:	mov	r2, #1004	; 0x3ec
   30658:	bl	14ab4 <__assert_fail@plt>

0003065c <flatcc_builder_start_vector@@Base>:
   3065c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30660:	add	fp, sp, #24
   30664:	sub	sp, sp, #8
   30668:	mov	r5, r3
   3066c:	mov	r6, r1
   30670:	mov	r4, r0
   30674:	strh	r2, [sp, #6]
   30678:	add	r0, sp, #6
   3067c:	mov	r8, #4
   30680:	mov	r1, #4
   30684:	bl	306dc <flatcc_builder_start_vector@@Base+0x80>
   30688:	ldrh	r1, [sp, #6]
   3068c:	mov	r0, r4
   30690:	bl	2fd00 <flatcc_builder_start_buffer@@Base+0xbc>
   30694:	mvn	r7, #0
   30698:	cmp	r0, #0
   3069c:	bne	306d0 <flatcc_builder_start_vector@@Base+0x74>
   306a0:	ldr	r0, [r4, #32]
   306a4:	str	r6, [r0, #16]
   306a8:	ldr	r0, [r4, #32]
   306ac:	mov	r7, #0
   306b0:	str	r7, [r0, #20]
   306b4:	ldr	r0, [r4, #32]
   306b8:	str	r5, [r0, #24]
   306bc:	ldr	r0, [r4, #32]
   306c0:	strh	r8, [r0, #14]
   306c4:	mov	r0, r4
   306c8:	mvn	r1, #3
   306cc:	bl	2ff78 <flatcc_builder_start_struct@@Base+0x4c>
   306d0:	mov	r0, r7
   306d4:	sub	sp, fp, #24
   306d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   306dc:	ldrh	r2, [r0]
   306e0:	cmp	r2, r1
   306e4:	strhcc	r1, [r0]
   306e8:	bx	lr

000306ec <flatcc_builder_start_offset_vector@@Base>:
   306ec:	push	{r4, r5, r6, sl, fp, lr}
   306f0:	add	fp, sp, #16
   306f4:	mov	r4, r0
   306f8:	mov	r6, #4
   306fc:	mov	r1, #4
   30700:	bl	2fd00 <flatcc_builder_start_buffer@@Base+0xbc>
   30704:	mvn	r5, #0
   30708:	cmp	r0, #0
   3070c:	beq	30718 <flatcc_builder_start_offset_vector@@Base+0x2c>
   30710:	mov	r0, r5
   30714:	pop	{r4, r5, r6, sl, fp, pc}
   30718:	ldr	r0, [r4, #32]
   3071c:	str	r6, [r0, #16]
   30720:	ldr	r0, [r4, #32]
   30724:	mov	r5, #0
   30728:	str	r5, [r0, #20]
   3072c:	ldr	r0, [r4, #32]
   30730:	mov	r1, #5
   30734:	strh	r1, [r0, #14]
   30738:	mov	r0, r4
   3073c:	mvn	r1, #3
   30740:	bl	2ff78 <flatcc_builder_start_struct@@Base+0x4c>
   30744:	mov	r0, r5
   30748:	pop	{r4, r5, r6, sl, fp, pc}

0003074c <flatcc_builder_create_offset_vector@@Base>:
   3074c:	push	{r4, r5, r6, sl, fp, lr}
   30750:	add	fp, sp, #16
   30754:	mov	r6, r2
   30758:	mov	r5, r1
   3075c:	mov	r4, r0
   30760:	bl	306ec <flatcc_builder_start_offset_vector@@Base>
   30764:	cmp	r0, #0
   30768:	beq	30774 <flatcc_builder_create_offset_vector@@Base+0x28>
   3076c:	mov	r0, #0
   30770:	pop	{r4, r5, r6, sl, fp, pc}
   30774:	mov	r0, r4
   30778:	mov	r1, r6
   3077c:	bl	30238 <flatcc_builder_extend_offset_vector@@Base>
   30780:	cmp	r0, #0
   30784:	beq	3076c <flatcc_builder_create_offset_vector@@Base+0x20>
   30788:	lsl	r2, r6, #2
   3078c:	mov	r1, r5
   30790:	bl	14934 <memcpy@plt>
   30794:	mov	r0, r4
   30798:	pop	{r4, r5, r6, sl, fp, lr}
   3079c:	b	307a0 <flatcc_builder_end_offset_vector@@Base>

000307a0 <flatcc_builder_end_offset_vector@@Base>:
   307a0:	push	{r4, r5, fp, lr}
   307a4:	add	fp, sp, #8
   307a8:	mov	r4, r0
   307ac:	ldr	r0, [r0, #32]
   307b0:	ldrh	r1, [r0, #14]
   307b4:	cmp	r1, #5
   307b8:	bne	307e4 <flatcc_builder_end_offset_vector@@Base+0x44>
   307bc:	ldr	r2, [r0, #20]
   307c0:	ldr	r1, [r4, #16]
   307c4:	mov	r0, r4
   307c8:	bl	31328 <flatcc_builder_create_offset_vector_direct@@Base>
   307cc:	mov	r5, r0
   307d0:	cmp	r0, #0
   307d4:	movne	r0, r4
   307d8:	blne	2fec0 <flatcc_builder_end_buffer@@Base+0xc8>
   307dc:	mov	r0, r5
   307e0:	pop	{r4, r5, fp, pc}
   307e4:	movw	r0, #1995	; 0x7cb
   307e8:	movt	r0, #5
   307ec:	movw	r1, #943	; 0x3af
   307f0:	movt	r1, #5
   307f4:	movw	r3, #3578	; 0xdfa
   307f8:	movt	r3, #5
   307fc:	movw	r2, #1480	; 0x5c8
   30800:	bl	14ab4 <__assert_fail@plt>

00030804 <flatcc_builder_start_string@@Base>:
   30804:	push	{r4, r5, r6, sl, fp, lr}
   30808:	add	fp, sp, #16
   3080c:	mov	r4, r0
   30810:	mov	r6, #1
   30814:	mov	r1, #1
   30818:	bl	2fd00 <flatcc_builder_start_buffer@@Base+0xbc>
   3081c:	mvn	r5, #0
   30820:	cmp	r0, #0
   30824:	beq	30830 <flatcc_builder_start_string@@Base+0x2c>
   30828:	mov	r0, r5
   3082c:	pop	{r4, r5, r6, sl, fp, pc}
   30830:	ldr	r0, [r4, #32]
   30834:	str	r6, [r0, #16]
   30838:	ldr	r0, [r4, #32]
   3083c:	mov	r5, #0
   30840:	str	r5, [r0, #20]
   30844:	ldr	r0, [r4, #32]
   30848:	mov	r1, #6
   3084c:	strh	r1, [r0, #14]
   30850:	mov	r0, r4
   30854:	mvn	r1, #3
   30858:	bl	2ff78 <flatcc_builder_start_struct@@Base+0x4c>
   3085c:	mov	r0, r5
   30860:	pop	{r4, r5, r6, sl, fp, pc}

00030864 <flatcc_builder_reserve_table@@Base>:
   30864:	cmn	r1, #1
   30868:	ble	30870 <flatcc_builder_reserve_table@@Base+0xc>
   3086c:	b	30898 <flatcc_builder_reserve_table@@Base+0x34>
   30870:	push	{fp, lr}
   30874:	mov	fp, sp
   30878:	movw	r0, #2834	; 0xb12
   3087c:	movt	r0, #5
   30880:	movw	r1, #943	; 0x3af
   30884:	movt	r1, #5
   30888:	movw	r3, #2769	; 0xad1
   3088c:	movt	r3, #5
   30890:	movw	r2, #1065	; 0x429
   30894:	bl	14ab4 <__assert_fail@plt>
   30898:	push	{r4, r5, r6, sl, fp, lr}
   3089c:	add	fp, sp, #16
   308a0:	sub	sp, sp, #8
   308a4:	mov	r6, r1
   308a8:	mov	r4, r0
   308ac:	ldr	r0, [r0, #32]
   308b0:	ldrh	r1, [r0, #28]
   308b4:	ldr	r0, [r0, #16]
   308b8:	mov	r2, #1
   308bc:	str	r2, [sp]
   308c0:	mov	r2, #4
   308c4:	add	r3, r2, r6, lsl #1
   308c8:	add	r2, r0, r1, lsl #1
   308cc:	mov	r5, #0
   308d0:	mov	r0, r4
   308d4:	mov	r1, #0
   308d8:	bl	2f594 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   308dc:	str	r0, [r4, #4]
   308e0:	cmp	r0, #0
   308e4:	beq	30920 <flatcc_builder_reserve_table@@Base+0xbc>
   308e8:	lsl	r1, r6, #1
   308ec:	add	r0, r0, #4
   308f0:	str	r0, [r4, #4]
   308f4:	ldr	r0, [r4, #32]
   308f8:	ldr	r2, [r0, #20]
   308fc:	str	r5, [sp]
   30900:	orr	r3, r1, #1
   30904:	mov	r0, r4
   30908:	mov	r1, #3
   3090c:	bl	2f594 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   30910:	str	r0, [r4]
   30914:	cmp	r0, #0
   30918:	mvneq	r5, #0
   3091c:	b	30924 <flatcc_builder_reserve_table@@Base+0xc0>
   30920:	mvn	r5, #0
   30924:	mov	r0, r5
   30928:	sub	sp, fp, #16
   3092c:	pop	{r4, r5, r6, sl, fp, pc}

00030930 <flatcc_builder_start_table@@Base>:
   30930:	push	{r4, r5, r6, sl, fp, lr}
   30934:	add	fp, sp, #16
   30938:	mov	r6, r1
   3093c:	mov	r4, r0
   30940:	mov	r1, #4
   30944:	bl	2fd00 <flatcc_builder_start_buffer@@Base+0xbc>
   30948:	mvn	r5, #0
   3094c:	cmp	r0, #0
   30950:	bne	309c8 <flatcc_builder_start_table@@Base+0x98>
   30954:	ldr	r0, [r4, #4]
   30958:	ldr	r1, [r4, #32]
   3095c:	ldr	r2, [r4, #52]	; 0x34
   30960:	sub	r0, r0, r2
   30964:	str	r0, [r1, #16]
   30968:	ldr	r0, [r4]
   3096c:	ldr	r1, [r4, #32]
   30970:	ldr	r2, [r4, #76]	; 0x4c
   30974:	sub	r0, r0, r2
   30978:	str	r0, [r1, #20]
   3097c:	ldr	r0, [r4, #12]
   30980:	ldr	r1, [r4, #32]
   30984:	str	r0, [r1, #24]
   30988:	ldr	r0, [r4, #32]
   3098c:	ldrh	r1, [r4, #8]
   30990:	strh	r1, [r0, #28]
   30994:	mov	r0, #0
   30998:	strh	r0, [r4, #8]
   3099c:	movw	r0, #15186	; 0x3b52
   309a0:	movt	r0, #12137	; 0x2f69
   309a4:	str	r0, [r4, #12]
   309a8:	ldr	r0, [r4, #32]
   309ac:	mov	r1, #3
   309b0:	strh	r1, [r0, #14]
   309b4:	mov	r0, r4
   309b8:	mov	r1, r6
   309bc:	bl	30898 <flatcc_builder_reserve_table@@Base+0x34>
   309c0:	cmp	r0, #0
   309c4:	beq	309d0 <flatcc_builder_start_table@@Base+0xa0>
   309c8:	mov	r0, r5
   309cc:	pop	{r4, r5, r6, sl, fp, pc}
   309d0:	mov	r0, r4
   309d4:	movw	r1, #65532	; 0xfffc
   309d8:	bl	2ff78 <flatcc_builder_start_struct@@Base+0x4c>
   309dc:	mov	r5, #0
   309e0:	mov	r0, r5
   309e4:	pop	{r4, r5, r6, sl, fp, pc}

000309e8 <flatcc_builder_create_vtable@@Base>:
   309e8:	push	{fp, lr}
   309ec:	mov	fp, sp
   309f0:	sub	sp, sp, #72	; 0x48
   309f4:	mov	r3, #0
   309f8:	str	r3, [sp, #4]
   309fc:	str	r3, [sp]
   30a00:	cmp	r2, #0
   30a04:	strne	r2, [sp, #12]
   30a08:	strne	r1, [sp, #8]
   30a0c:	strne	r2, [sp]
   30a10:	movne	r1, #1
   30a14:	strne	r1, [sp, #4]
   30a18:	ldr	r1, [r0, #152]	; 0x98
   30a1c:	cmp	r1, #0
   30a20:	bne	30a30 <flatcc_builder_create_vtable@@Base+0x48>
   30a24:	ldr	r1, [r0, #180]	; 0xb4
   30a28:	cmp	r1, #0
   30a2c:	beq	30a4c <flatcc_builder_create_vtable@@Base+0x64>
   30a30:	mov	r1, sp
   30a34:	bl	2f908 <flatcc_builder_embed_buffer@@Base+0x1e0>
   30a38:	cmp	r0, #0
   30a3c:	beq	30a5c <flatcc_builder_create_vtable@@Base+0x74>
   30a40:	add	r0, r0, #1
   30a44:	mov	sp, fp
   30a48:	pop	{fp, pc}
   30a4c:	mov	r1, sp
   30a50:	bl	30a68 <flatcc_builder_create_vtable@@Base+0x80>
   30a54:	cmp	r0, #0
   30a58:	bne	30a44 <flatcc_builder_create_vtable@@Base+0x5c>
   30a5c:	mov	r0, #0
   30a60:	mov	sp, fp
   30a64:	pop	{fp, pc}
   30a68:	push	{r4, sl, fp, lr}
   30a6c:	add	fp, sp, #8
   30a70:	sub	sp, sp, #8
   30a74:	ldr	r4, [r0, #140]	; 0x8c
   30a78:	ldr	r3, [r1]
   30a7c:	add	r2, r3, r4
   30a80:	str	r2, [r0, #140]	; 0x8c
   30a84:	cmn	r3, #1
   30a88:	ble	30adc <flatcc_builder_create_vtable@@Base+0xf4>
   30a8c:	ldr	r2, [r1, #4]
   30a90:	ldr	ip, [r0, #36]	; 0x24
   30a94:	ldr	lr, [r0, #44]	; 0x2c
   30a98:	str	r3, [sp]
   30a9c:	add	r1, r1, #8
   30aa0:	mov	r0, ip
   30aa4:	mov	r3, r4
   30aa8:	blx	lr
   30aac:	cmp	r0, #0
   30ab0:	addeq	r0, r4, #1
   30ab4:	subeq	sp, fp, #8
   30ab8:	popeq	{r4, sl, fp, pc}
   30abc:	movw	r0, #30217	; 0x7609
   30ac0:	movt	r0, #4
   30ac4:	movw	r1, #943	; 0x3af
   30ac8:	movt	r1, #5
   30acc:	movw	r3, #5328	; 0x14d0
   30ad0:	movt	r3, #5
   30ad4:	movw	r2, #677	; 0x2a5
   30ad8:	bl	14ab4 <__assert_fail@plt>
   30adc:	movw	r0, #30217	; 0x7609
   30ae0:	movt	r0, #4
   30ae4:	movw	r1, #943	; 0x3af
   30ae8:	movt	r1, #5
   30aec:	movw	r3, #5328	; 0x14d0
   30af0:	movt	r3, #5
   30af4:	movw	r2, #673	; 0x2a1
   30af8:	bl	14ab4 <__assert_fail@plt>

00030afc <flatcc_builder_create_cached_vtable@@Base>:
   30afc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30b00:	add	fp, sp, #28
   30b04:	sub	sp, sp, #20
   30b08:	mov	r4, r2
   30b0c:	mov	r9, r1
   30b10:	mov	sl, r0
   30b14:	mov	r1, r3
   30b18:	bl	30cf4 <flatcc_builder_create_cached_vtable@@Base+0x1f8>
   30b1c:	cmp	r0, #0
   30b20:	beq	30c44 <flatcc_builder_create_cached_vtable@@Base+0x148>
   30b24:	mov	r7, r0
   30b28:	ldr	r6, [r0]
   30b2c:	mov	r5, #0
   30b30:	cmp	r6, #0
   30b34:	mov	r8, #0
   30b38:	beq	30bd0 <flatcc_builder_create_cached_vtable@@Base+0xd4>
   30b3c:	ldr	r5, [sl, #68]	; 0x44
   30b40:	str	sl, [sp, #16]
   30b44:	ldr	sl, [sl, #100]	; 0x64
   30b48:	mov	r0, #0
   30b4c:	str	r7, [sp, #8]
   30b50:	str	r0, [sp, #12]
   30b54:	b	30b68 <flatcc_builder_create_cached_vtable@@Base+0x6c>
   30b58:	ldr	r6, [r8, #12]!
   30b5c:	cmp	r6, #0
   30b60:	mov	r7, r8
   30b64:	beq	30bc0 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   30b68:	add	r8, sl, r6
   30b6c:	ldr	r0, [r8, #8]
   30b70:	mov	r1, r5
   30b74:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   30b78:	cmp	r0, r4
   30b7c:	bne	30b58 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   30b80:	mov	r0, r9
   30b84:	mov	r2, r4
   30b88:	bl	149d0 <bcmp@plt>
   30b8c:	cmp	r0, #0
   30b90:	bne	30b58 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   30b94:	ldr	r0, [sp, #16]
   30b98:	ldr	r0, [r0, #152]	; 0x98
   30b9c:	ldr	r1, [r8, #4]
   30ba0:	cmp	r1, r0
   30ba4:	beq	30ccc <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   30ba8:	mov	r7, r8
   30bac:	ldr	r6, [r7, #12]!
   30bb0:	cmp	r6, #0
   30bb4:	mov	r0, r8
   30bb8:	bne	30b50 <flatcc_builder_create_cached_vtable@@Base+0x54>
   30bbc:	b	30bc4 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   30bc0:	ldr	r8, [sp, #12]
   30bc4:	ldr	sl, [sp, #16]
   30bc8:	mov	r5, #0
   30bcc:	ldr	r7, [sp, #8]
   30bd0:	ldr	r2, [sl, #124]	; 0x7c
   30bd4:	str	r5, [sp]
   30bd8:	mov	r0, sl
   30bdc:	mov	r1, #6
   30be0:	mov	r3, #16
   30be4:	bl	2f594 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   30be8:	cmp	r0, #0
   30bec:	beq	30cb8 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30bf0:	mov	r6, r0
   30bf4:	ldr	r0, [sl, #124]	; 0x7c
   30bf8:	ldr	r1, [sl, #152]	; 0x98
   30bfc:	add	r2, r0, #16
   30c00:	str	r2, [sl, #124]	; 0x7c
   30c04:	str	r1, [r6, #4]
   30c08:	ldr	r1, [r7]
   30c0c:	str	r1, [r6, #12]
   30c10:	str	r0, [r7]
   30c14:	mov	r0, sl
   30c18:	mov	r1, r9
   30c1c:	mov	r2, r4
   30c20:	bl	309e8 <flatcc_builder_create_vtable@@Base>
   30c24:	str	r0, [r6]
   30c28:	cmp	r0, #0
   30c2c:	beq	30cb8 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30c30:	cmp	r8, #0
   30c34:	beq	30c4c <flatcc_builder_create_cached_vtable@@Base+0x150>
   30c38:	ldr	r0, [r8, #8]
   30c3c:	str	r0, [r6, #8]
   30c40:	b	30cb4 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   30c44:	mov	r5, #0
   30c48:	b	30cb8 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30c4c:	ldr	r0, [sl, #172]	; 0xac
   30c50:	cmp	r0, #0
   30c54:	beq	30c74 <flatcc_builder_create_cached_vtable@@Base+0x178>
   30c58:	ldr	r1, [sl, #120]	; 0x78
   30c5c:	add	r1, r1, r4
   30c60:	cmp	r0, r1
   30c64:	bcs	30c74 <flatcc_builder_create_cached_vtable@@Base+0x178>
   30c68:	mov	r0, sl
   30c6c:	bl	2f280 <flatcc_builder_flush_vtable_cache@@Base>
   30c70:	b	30cb4 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   30c74:	ldr	r2, [sl, #120]	; 0x78
   30c78:	mov	r0, #0
   30c7c:	str	r0, [sp]
   30c80:	mov	r0, sl
   30c84:	mov	r1, #2
   30c88:	mov	r3, r4
   30c8c:	bl	2f594 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   30c90:	cmp	r0, #0
   30c94:	beq	30cc4 <flatcc_builder_create_cached_vtable@@Base+0x1c8>
   30c98:	ldr	r1, [sl, #120]	; 0x78
   30c9c:	str	r1, [r6, #8]
   30ca0:	add	r1, r1, r4
   30ca4:	str	r1, [sl, #120]	; 0x78
   30ca8:	mov	r1, r9
   30cac:	mov	r2, r4
   30cb0:	bl	14934 <memcpy@plt>
   30cb4:	ldr	r5, [r6]
   30cb8:	mov	r0, r5
   30cbc:	sub	sp, fp, #28
   30cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30cc4:	mvn	r5, #0
   30cc8:	b	30cb8 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30ccc:	ldr	r1, [sp, #8]
   30cd0:	cmp	r7, r1
   30cd4:	beq	30cec <flatcc_builder_create_cached_vtable@@Base+0x1f0>
   30cd8:	ldr	r0, [r8, #12]
   30cdc:	str	r0, [r7]
   30ce0:	ldr	r0, [r1]
   30ce4:	str	r0, [r8, #12]
   30ce8:	str	r6, [r1]
   30cec:	ldr	r5, [r8]
   30cf0:	b	30cb8 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   30cf4:	push	{r4, r5, fp, lr}
   30cf8:	add	fp, sp, #8
   30cfc:	mov	r4, r1
   30d00:	mov	r5, r0
   30d04:	ldr	r0, [r0, #116]	; 0x74
   30d08:	cmp	r0, #0
   30d0c:	bne	30d28 <flatcc_builder_create_cached_vtable@@Base+0x22c>
   30d10:	mov	r0, r5
   30d14:	bl	32434 <flatcc_builder_get_emit_context@@Base+0x80>
   30d18:	mov	r1, r0
   30d1c:	mov	r0, #0
   30d20:	cmp	r1, #0
   30d24:	popne	{r4, r5, fp, pc}
   30d28:	ldr	r0, [r5, #92]	; 0x5c
   30d2c:	ldr	r1, [r5, #116]	; 0x74
   30d30:	rsb	r1, r1, #32
   30d34:	lsr	r1, r4, r1
   30d38:	add	r0, r0, r1, lsl #2
   30d3c:	pop	{r4, r5, fp, pc}

00030d40 <flatcc_builder_create_table@@Base>:
   30d40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30d44:	add	fp, sp, #28
   30d48:	sub	sp, sp, #84	; 0x54
   30d4c:	strh	r3, [fp, #-30]	; 0xffffffe2
   30d50:	ldr	r4, [fp, #12]
   30d54:	cmn	r4, #1
   30d58:	ble	30e80 <flatcc_builder_create_table@@Base+0x140>
   30d5c:	ldr	r8, [fp, #16]
   30d60:	tst	r8, #1
   30d64:	beq	30ea0 <flatcc_builder_create_table@@Base+0x160>
   30d68:	mov	sl, r2
   30d6c:	mov	r6, r1
   30d70:	mov	r5, r0
   30d74:	sub	r0, fp, #30
   30d78:	mov	r1, #4
   30d7c:	bl	306dc <flatcc_builder_start_vector@@Base+0x80>
   30d80:	ldrh	r7, [fp, #-30]	; 0xffffffe2
   30d84:	mov	r0, r5
   30d88:	mov	r1, r7
   30d8c:	bl	2fb68 <flatcc_builder_create_buffer@@Base+0x1cc>
   30d90:	mov	r0, r5
   30d94:	mov	r1, sl
   30d98:	mov	r2, r7
   30d9c:	bl	2f8f0 <flatcc_builder_embed_buffer@@Base+0x1c8>
   30da0:	mov	r9, r0
   30da4:	add	r0, sl, r0
   30da8:	str	r5, [sp]
   30dac:	ldr	r1, [r5, #136]	; 0x88
   30db0:	sub	r0, r1, r0
   30db4:	sub	r5, r0, #4
   30db8:	sub	r0, r5, r8
   30dbc:	add	r0, r0, #1
   30dc0:	bl	2f904 <flatcc_builder_embed_buffer@@Base+0x1dc>
   30dc4:	str	r0, [fp, #-36]	; 0xffffffdc
   30dc8:	cmp	r4, #1
   30dcc:	blt	30dfc <flatcc_builder_create_table@@Base+0xbc>
   30dd0:	ldr	r7, [fp, #8]
   30dd4:	mvn	r0, #3
   30dd8:	sub	r5, r0, r5
   30ddc:	ldrh	r8, [r7], #2
   30de0:	ldr	r0, [r8, r6]
   30de4:	add	r0, r5, r0
   30de8:	sub	r0, r0, r8
   30dec:	bl	2f904 <flatcc_builder_embed_buffer@@Base+0x1dc>
   30df0:	str	r0, [r8, r6]
   30df4:	subs	r4, r4, #1
   30df8:	bne	30ddc <flatcc_builder_create_table@@Base+0x9c>
   30dfc:	mov	r1, #4
   30e00:	str	r1, [sp, #16]
   30e04:	sub	r0, fp, #36	; 0x24
   30e08:	str	r0, [sp, #12]
   30e0c:	str	r1, [sp, #4]
   30e10:	mov	r0, #1
   30e14:	str	r0, [sp, #8]
   30e18:	cmp	sl, #0
   30e1c:	strne	sl, [sp, #24]
   30e20:	strne	r6, [sp, #20]
   30e24:	movne	r0, #2
   30e28:	strne	r0, [sp, #8]
   30e2c:	addne	r0, sl, #4
   30e30:	strne	r0, [sp, #4]
   30e34:	cmp	r9, #0
   30e38:	ldr	r0, [sp]
   30e3c:	beq	30e70 <flatcc_builder_create_table@@Base+0x130>
   30e40:	ldr	r2, [sp, #4]
   30e44:	ldr	r1, [sp, #8]
   30e48:	add	r2, r2, r9
   30e4c:	str	r2, [sp, #4]
   30e50:	add	r2, sp, #4
   30e54:	add	r3, r2, r1, lsl #3
   30e58:	movw	r2, #413	; 0x19d
   30e5c:	movt	r2, #5
   30e60:	str	r2, [r3, #8]
   30e64:	str	r9, [r3, #12]
   30e68:	add	r1, r1, #1
   30e6c:	str	r1, [sp, #8]
   30e70:	add	r1, sp, #4
   30e74:	bl	2f908 <flatcc_builder_embed_buffer@@Base+0x1e0>
   30e78:	sub	sp, fp, #28
   30e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30e80:	movw	r0, #2827	; 0xb0b
   30e84:	movt	r0, #5
   30e88:	movw	r1, #943	; 0x3af
   30e8c:	movt	r1, #5
   30e90:	movw	r3, #2845	; 0xb1d
   30e94:	movt	r3, #5
   30e98:	movw	r2, #1237	; 0x4d5
   30e9c:	bl	14ab4 <__assert_fail@plt>
   30ea0:	movw	r0, #3001	; 0xbb9
   30ea4:	movt	r0, #5
   30ea8:	movw	r1, #943	; 0x3af
   30eac:	movt	r1, #5
   30eb0:	movw	r3, #2845	; 0xb1d
   30eb4:	movt	r3, #5
   30eb8:	movw	r2, #1243	; 0x4db
   30ebc:	bl	14ab4 <__assert_fail@plt>

00030ec0 <flatcc_builder_check_required_field@@Base>:
   30ec0:	push	{fp, lr}
   30ec4:	mov	fp, sp
   30ec8:	ldr	r2, [r0, #32]
   30ecc:	ldrh	r2, [r2, #14]
   30ed0:	cmp	r2, #3
   30ed4:	bne	30f04 <flatcc_builder_check_required_field@@Base+0x44>
   30ed8:	ldrh	r3, [r0, #8]
   30edc:	mov	r2, #0
   30ee0:	cmp	r3, r1
   30ee4:	bls	30efc <flatcc_builder_check_required_field@@Base+0x3c>
   30ee8:	ldr	r0, [r0, #4]
   30eec:	add	r0, r0, r1, lsl #1
   30ef0:	ldrh	r2, [r0]
   30ef4:	cmp	r2, #0
   30ef8:	movwne	r2, #1
   30efc:	mov	r0, r2
   30f00:	pop	{fp, pc}
   30f04:	movw	r0, #3012	; 0xbc4
   30f08:	movt	r0, #5
   30f0c:	movw	r1, #943	; 0x3af
   30f10:	movt	r1, #5
   30f14:	movw	r3, #3055	; 0xbef
   30f18:	movt	r3, #5
   30f1c:	movw	r2, #1272	; 0x4f8
   30f20:	bl	14ab4 <__assert_fail@plt>

00030f24 <flatcc_builder_check_union_field@@Base>:
   30f24:	push	{fp, lr}
   30f28:	mov	fp, sp
   30f2c:	mov	r2, r0
   30f30:	ldr	r0, [r0, #32]
   30f34:	ldrh	r0, [r0, #14]
   30f38:	cmp	r0, #3
   30f3c:	bne	30f9c <flatcc_builder_check_union_field@@Base+0x78>
   30f40:	mov	r0, #0
   30f44:	cmp	r1, #0
   30f48:	beq	30f88 <flatcc_builder_check_union_field@@Base+0x64>
   30f4c:	ldrh	r3, [r2, #8]
   30f50:	cmp	r3, r1
   30f54:	popls	{fp, pc}
   30f58:	ldr	r0, [r2, #4]
   30f5c:	add	r0, r0, r1, lsl #1
   30f60:	ldrh	r1, [r0, #-2]
   30f64:	cmp	r1, #0
   30f68:	beq	30f8c <flatcc_builder_check_union_field@@Base+0x68>
   30f6c:	ldr	r2, [r2, #16]
   30f70:	ldrb	r1, [r2, r1]
   30f74:	ldrh	r0, [r0]
   30f78:	cmp	r1, #0
   30f7c:	beq	30f90 <flatcc_builder_check_union_field@@Base+0x6c>
   30f80:	cmp	r0, #0
   30f84:	movwne	r0, #1
   30f88:	pop	{fp, pc}
   30f8c:	ldrh	r0, [r0]
   30f90:	clz	r0, r0
   30f94:	lsr	r0, r0, #5
   30f98:	pop	{fp, pc}
   30f9c:	movw	r0, #3012	; 0xbc4
   30fa0:	movt	r0, #5
   30fa4:	movw	r1, #943	; 0x3af
   30fa8:	movt	r1, #5
   30fac:	movw	r3, #3138	; 0xc42
   30fb0:	movt	r3, #5
   30fb4:	movw	r2, #1279	; 0x4ff
   30fb8:	bl	14ab4 <__assert_fail@plt>

00030fbc <flatcc_builder_check_required@@Base>:
   30fbc:	push	{fp, lr}
   30fc0:	mov	fp, sp
   30fc4:	mov	r3, r0
   30fc8:	ldr	r0, [r0, #32]
   30fcc:	ldrh	r0, [r0, #14]
   30fd0:	cmp	r0, #3
   30fd4:	bne	3101c <flatcc_builder_check_required@@Base+0x60>
   30fd8:	ldrh	ip, [r3, #8]
   30fdc:	mov	r0, #0
   30fe0:	cmp	ip, r2
   30fe4:	poplt	{fp, pc}
   30fe8:	cmp	r2, #1
   30fec:	blt	31014 <flatcc_builder_check_required@@Base+0x58>
   30ff0:	ldr	ip, [r3, #4]
   30ff4:	ldrh	r3, [r1]
   30ff8:	add	r3, ip, r3, lsl #1
   30ffc:	ldrh	r3, [r3]
   31000:	cmp	r3, #0
   31004:	beq	31018 <flatcc_builder_check_required@@Base+0x5c>
   31008:	add	r1, r1, #2
   3100c:	subs	r2, r2, #1
   31010:	bne	30ff4 <flatcc_builder_check_required@@Base+0x38>
   31014:	mov	r0, #1
   31018:	pop	{fp, pc}
   3101c:	movw	r0, #3012	; 0xbc4
   31020:	movt	r0, #5
   31024:	movw	r1, #943	; 0x3af
   31028:	movt	r1, #5
   3102c:	movw	r3, #3218	; 0xc92
   31030:	movt	r3, #5
   31034:	movw	r2, #1297	; 0x511
   31038:	bl	14ab4 <__assert_fail@plt>

0003103c <flatcc_builder_end_table@@Base>:
   3103c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31040:	add	fp, sp, #24
   31044:	sub	sp, sp, #16
   31048:	mov	r4, r0
   3104c:	ldr	r0, [r0, #32]
   31050:	ldrh	r0, [r0, #14]
   31054:	cmp	r0, #3
   31058:	bne	31168 <flatcc_builder_end_table@@Base+0x12c>
   3105c:	ldrh	r0, [r4, #8]
   31060:	mov	r1, #4
   31064:	add	r0, r1, r0, lsl #1
   31068:	ldr	r6, [r4, #4]
   3106c:	strh	r0, [r6, #-4]!
   31070:	ldrh	r1, [r4, #20]
   31074:	add	r1, r1, #4
   31078:	strh	r1, [r6, #2]
   3107c:	uxth	r5, r0
   31080:	ldr	r0, [r4, #12]
   31084:	eor	r0, r0, r5
   31088:	movw	r2, #31153	; 0x79b1
   3108c:	movt	r2, #40503	; 0x9e37
   31090:	mul	r0, r0, r2
   31094:	uxth	r1, r1
   31098:	eor	r0, r0, r1
   3109c:	mul	r3, r0, r2
   310a0:	str	r3, [r4, #12]
   310a4:	mov	r0, r4
   310a8:	mov	r1, r6
   310ac:	mov	r2, r5
   310b0:	bl	30afc <flatcc_builder_create_cached_vtable@@Base>
   310b4:	cmp	r0, #0
   310b8:	beq	31158 <flatcc_builder_end_table@@Base+0x11c>
   310bc:	mov	r7, r0
   310c0:	mov	r8, #0
   310c4:	mov	r0, r6
   310c8:	mov	r1, #0
   310cc:	mov	r2, r5
   310d0:	bl	14a0c <memset@plt>
   310d4:	ldrh	r3, [r4, #130]	; 0x82
   310d8:	ldr	r0, [r4, #76]	; 0x4c
   310dc:	ldr	r6, [r4]
   310e0:	ldr	r1, [r4, #16]
   310e4:	ldr	r2, [r4, #20]
   310e8:	ldr	r5, [r4, #32]
   310ec:	ldr	r5, [r5, #20]
   310f0:	add	r0, r0, r5
   310f4:	sub	r6, r6, r0
   310f8:	asr	r6, r6, #1
   310fc:	stm	sp, {r0, r6, r7}
   31100:	mov	r0, r4
   31104:	bl	30d40 <flatcc_builder_create_table@@Base>
   31108:	cmp	r0, #0
   3110c:	beq	3115c <flatcc_builder_end_table@@Base+0x120>
   31110:	mov	r5, r0
   31114:	ldr	r0, [r4, #32]
   31118:	ldr	r1, [r4, #52]	; 0x34
   3111c:	ldr	r2, [r4, #76]	; 0x4c
   31120:	ldr	r3, [r0, #24]
   31124:	str	r3, [r4, #12]
   31128:	ldrh	r3, [r0, #28]
   3112c:	strh	r3, [r4, #8]
   31130:	ldr	r3, [r0, #16]
   31134:	add	r1, r1, r3
   31138:	str	r1, [r4, #4]
   3113c:	ldr	r0, [r0, #20]
   31140:	add	r0, r2, r0
   31144:	str	r0, [r4]
   31148:	mov	r0, r4
   3114c:	bl	2fec0 <flatcc_builder_end_buffer@@Base+0xc8>
   31150:	mov	r8, r5
   31154:	b	3115c <flatcc_builder_end_table@@Base+0x120>
   31158:	mov	r8, #0
   3115c:	mov	r0, r8
   31160:	sub	sp, fp, #24
   31164:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31168:	movw	r0, #3012	; 0xbc4
   3116c:	movt	r0, #5
   31170:	movw	r1, #943	; 0x3af
   31174:	movt	r1, #5
   31178:	movw	r3, #3308	; 0xcec
   3117c:	movt	r3, #5
   31180:	movw	r2, #1317	; 0x525
   31184:	bl	14ab4 <__assert_fail@plt>

00031188 <flatcc_builder_create_vector@@Base>:
   31188:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3118c:	add	fp, sp, #24
   31190:	sub	sp, sp, #80	; 0x50
   31194:	mov	r4, r0
   31198:	ldr	r0, [fp, #8]
   3119c:	strh	r0, [fp, #-26]	; 0xffffffe6
   311a0:	ldr	r0, [fp, #12]
   311a4:	cmp	r2, r0
   311a8:	bhi	31274 <flatcc_builder_create_vector@@Base+0xec>
   311ac:	mov	r6, r3
   311b0:	mov	r7, r2
   311b4:	mov	r8, r1
   311b8:	sub	r0, fp, #26
   311bc:	mov	r9, #4
   311c0:	mov	r1, #4
   311c4:	bl	306dc <flatcc_builder_start_vector@@Base+0x80>
   311c8:	ldrh	r5, [fp, #-26]	; 0xffffffe6
   311cc:	mov	r0, r4
   311d0:	mov	r1, r5
   311d4:	bl	2fb68 <flatcc_builder_create_buffer@@Base+0x1cc>
   311d8:	mov	r0, r7
   311dc:	bl	2f904 <flatcc_builder_embed_buffer@@Base+0x1dc>
   311e0:	str	r7, [fp, #-32]	; 0xffffffe0
   311e4:	mul	r6, r6, r7
   311e8:	mov	r0, r4
   311ec:	mov	r1, r6
   311f0:	mov	r2, r5
   311f4:	bl	2f8f0 <flatcc_builder_embed_buffer@@Base+0x1c8>
   311f8:	str	r9, [sp, #12]
   311fc:	sub	r1, fp, #32
   31200:	str	r1, [sp, #8]
   31204:	str	r9, [sp]
   31208:	mov	r1, #1
   3120c:	str	r1, [sp, #4]
   31210:	cmp	r6, #0
   31214:	strne	r6, [sp, #20]
   31218:	strne	r8, [sp, #16]
   3121c:	movne	r1, #2
   31220:	strne	r1, [sp, #4]
   31224:	addne	r1, r6, #4
   31228:	strne	r1, [sp]
   3122c:	cmp	r0, #0
   31230:	beq	31260 <flatcc_builder_create_vector@@Base+0xd8>
   31234:	ldm	sp, {r1, r2}
   31238:	add	r1, r1, r0
   3123c:	str	r1, [sp]
   31240:	mov	r1, sp
   31244:	add	r1, r1, r2, lsl #3
   31248:	movw	r3, #413	; 0x19d
   3124c:	movt	r3, #5
   31250:	str	r3, [r1, #8]
   31254:	str	r0, [r1, #12]
   31258:	add	r0, r2, #1
   3125c:	str	r0, [sp, #4]
   31260:	mov	r1, sp
   31264:	mov	r0, r4
   31268:	bl	2f908 <flatcc_builder_embed_buffer@@Base+0x1e0>
   3126c:	sub	sp, fp, #24
   31270:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31274:	movw	r0, #3374	; 0xd2e
   31278:	movt	r0, #5
   3127c:	movw	r1, #943	; 0x3af
   31280:	movt	r1, #5
   31284:	movw	r3, #3393	; 0xd41
   31288:	movt	r3, #5
   3128c:	movw	r2, #1365	; 0x555
   31290:	bl	14ab4 <__assert_fail@plt>

00031294 <flatcc_builder_end_vector@@Base>:
   31294:	push	{r4, r5, fp, lr}
   31298:	add	fp, sp, #8
   3129c:	sub	sp, sp, #8
   312a0:	mov	r4, r0
   312a4:	ldr	r0, [r0, #32]
   312a8:	ldrh	r1, [r0, #14]
   312ac:	cmp	r1, #4
   312b0:	bne	312f4 <flatcc_builder_end_vector@@Base+0x60>
   312b4:	ldr	r1, [r4, #16]
   312b8:	ldrh	r5, [r4, #130]	; 0x82
   312bc:	ldr	r3, [r0, #16]
   312c0:	ldr	r2, [r0, #20]
   312c4:	ldr	r0, [r0, #24]
   312c8:	str	r5, [sp]
   312cc:	str	r0, [sp, #4]
   312d0:	mov	r0, r4
   312d4:	bl	31188 <flatcc_builder_create_vector@@Base>
   312d8:	mov	r5, r0
   312dc:	cmp	r0, #0
   312e0:	movne	r0, r4
   312e4:	blne	2fec0 <flatcc_builder_end_buffer@@Base+0xc8>
   312e8:	mov	r0, r5
   312ec:	sub	sp, fp, #8
   312f0:	pop	{r4, r5, fp, pc}
   312f4:	movw	r0, #1746	; 0x6d2
   312f8:	movt	r0, #5
   312fc:	movw	r1, #943	; 0x3af
   31300:	movt	r1, #5
   31304:	movw	r3, #3511	; 0xdb7
   31308:	movt	r3, #5
   3130c:	movw	r2, #1400	; 0x578
   31310:	bl	14ab4 <__assert_fail@plt>

00031314 <flatcc_builder_vector_count@@Base>:
   31314:	ldr	r0, [r0, #32]
   31318:	ldr	r0, [r0, #20]
   3131c:	bx	lr

00031320 <flatcc_builder_vector_edit@@Base>:
   31320:	ldr	r0, [r0, #16]
   31324:	bx	lr

00031328 <flatcc_builder_create_offset_vector_direct@@Base>:
   31328:	mov	r3, #0
   3132c:	b	31330 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   31330:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31334:	add	fp, sp, #24
   31338:	sub	sp, sp, #80	; 0x50
   3133c:	mov	r8, r0
   31340:	mov	r0, #0
   31344:	cmn	r2, #-1073741823	; 0xc0000001
   31348:	bhi	31498 <flatcc_builder_create_offset_vector_direct@@Base+0x170>
   3134c:	mov	r9, r3
   31350:	mov	r6, r2
   31354:	mov	r7, r1
   31358:	mov	r5, #4
   3135c:	mov	r0, r8
   31360:	mov	r1, #4
   31364:	bl	2fb68 <flatcc_builder_create_buffer@@Base+0x1cc>
   31368:	mov	r0, r6
   3136c:	bl	2f904 <flatcc_builder_embed_buffer@@Base+0x1dc>
   31370:	str	r6, [fp, #-28]	; 0xffffffe4
   31374:	lsl	r4, r6, #2
   31378:	mov	r0, r8
   3137c:	mov	r1, r4
   31380:	mov	r2, #4
   31384:	bl	2f8f0 <flatcc_builder_embed_buffer@@Base+0x1c8>
   31388:	str	r5, [sp, #16]
   3138c:	sub	r1, fp, #28
   31390:	str	r1, [sp, #12]
   31394:	str	r5, [sp, #4]
   31398:	mov	r1, #1
   3139c:	str	r1, [sp, #8]
   313a0:	mov	r1, #0
   313a4:	cmp	r1, r6, lsl #2
   313a8:	strne	r4, [sp, #24]
   313ac:	strne	r7, [sp, #20]
   313b0:	movne	r1, #2
   313b4:	strne	r1, [sp, #8]
   313b8:	addne	r1, r4, #4
   313bc:	strne	r1, [sp, #4]
   313c0:	cmp	r0, #0
   313c4:	beq	313f4 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   313c8:	ldmib	sp, {r1, r2}
   313cc:	add	r1, r1, r0
   313d0:	str	r1, [sp, #4]
   313d4:	add	r1, sp, #4
   313d8:	add	r1, r1, r2, lsl #3
   313dc:	movw	r3, #413	; 0x19d
   313e0:	movt	r3, #5
   313e4:	str	r3, [r1, #8]
   313e8:	str	r0, [r1, #12]
   313ec:	add	r0, r2, #1
   313f0:	str	r0, [sp, #8]
   313f4:	cmp	r6, #0
   313f8:	beq	3148c <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   313fc:	ldr	r0, [r8, #136]	; 0x88
   31400:	ldr	r1, [sp, #4]
   31404:	sub	r0, r1, r0
   31408:	sub	r4, r0, #4
   3140c:	mov	r5, r9
   31410:	b	31428 <flatcc_builder_create_offset_vector_direct@@Base+0x100>
   31414:	sub	r4, r4, #4
   31418:	add	r7, r7, #4
   3141c:	add	r5, r5, #1
   31420:	subs	r6, r6, #1
   31424:	beq	3148c <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   31428:	ldr	r0, [r7]
   3142c:	cmp	r0, #0
   31430:	beq	31458 <flatcc_builder_create_offset_vector_direct@@Base+0x130>
   31434:	add	r0, r4, r0
   31438:	bl	2f904 <flatcc_builder_embed_buffer@@Base+0x1dc>
   3143c:	str	r0, [r7]
   31440:	cmp	r9, #0
   31444:	beq	31414 <flatcc_builder_create_offset_vector_direct@@Base+0xec>
   31448:	ldrb	r0, [r5]
   3144c:	cmp	r0, #0
   31450:	bne	31414 <flatcc_builder_create_offset_vector_direct@@Base+0xec>
   31454:	b	314a0 <flatcc_builder_create_offset_vector_direct@@Base+0x178>
   31458:	cmp	r9, #0
   3145c:	beq	314c0 <flatcc_builder_create_offset_vector_direct@@Base+0x198>
   31460:	ldrb	r0, [r5]
   31464:	cmp	r0, #0
   31468:	beq	31414 <flatcc_builder_create_offset_vector_direct@@Base+0xec>
   3146c:	movw	r0, #5594	; 0x15da
   31470:	movt	r0, #5
   31474:	movw	r1, #943	; 0x3af
   31478:	movt	r1, #5
   3147c:	movw	r3, #5463	; 0x1557
   31480:	movt	r3, #5
   31484:	movw	r2, #1461	; 0x5b5
   31488:	bl	14ab4 <__assert_fail@plt>
   3148c:	add	r1, sp, #4
   31490:	mov	r0, r8
   31494:	bl	2f908 <flatcc_builder_embed_buffer@@Base+0x1e0>
   31498:	sub	sp, fp, #24
   3149c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   314a0:	movw	r0, #5449	; 0x1549
   314a4:	movt	r0, #5
   314a8:	movw	r1, #943	; 0x3af
   314ac:	movt	r1, #5
   314b0:	movw	r3, #5463	; 0x1557
   314b4:	movt	r3, #5
   314b8:	movw	r2, #1457	; 0x5b1
   314bc:	bl	14ab4 <__assert_fail@plt>
   314c0:	movw	r0, #30217	; 0x7609
   314c4:	movt	r0, #4
   314c8:	movw	r1, #943	; 0x3af
   314cc:	movt	r1, #5
   314d0:	movw	r3, #5463	; 0x1557
   314d4:	movt	r3, #5
   314d8:	movw	r2, #1463	; 0x5b7
   314dc:	bl	14ab4 <__assert_fail@plt>

000314e0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   314e0:	push	{r4, r5, fp, lr}
   314e4:	add	fp, sp, #8
   314e8:	mov	r3, r1
   314ec:	mov	r4, r0
   314f0:	ldr	r0, [r0, #32]
   314f4:	ldrh	r1, [r0, #14]
   314f8:	cmp	r1, #5
   314fc:	bne	31528 <flatcc_builder_end_offset_vector_for_unions@@Base+0x48>
   31500:	ldr	r2, [r0, #20]
   31504:	ldr	r1, [r4, #16]
   31508:	mov	r0, r4
   3150c:	bl	31330 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   31510:	mov	r5, r0
   31514:	cmp	r0, #0
   31518:	movne	r0, r4
   3151c:	blne	2fec0 <flatcc_builder_end_buffer@@Base+0xc8>
   31520:	mov	r0, r5
   31524:	pop	{r4, r5, fp, pc}
   31528:	movw	r0, #1995	; 0x7cb
   3152c:	movt	r0, #5
   31530:	movw	r1, #943	; 0x3af
   31534:	movt	r1, #5
   31538:	movw	r3, #3652	; 0xe44
   3153c:	movt	r3, #5
   31540:	movw	r2, #1493	; 0x5d5
   31544:	bl	14ab4 <__assert_fail@plt>

00031548 <flatcc_builder_offset_vector_edit@@Base>:
   31548:	ldr	r0, [r0, #16]
   3154c:	bx	lr

00031550 <flatcc_builder_offset_vector_count@@Base>:
   31550:	ldr	r0, [r0, #32]
   31554:	ldr	r0, [r0, #20]
   31558:	bx	lr

0003155c <flatcc_builder_table_add_union@@Base>:
   3155c:	push	{r4, r5, r6, r7, fp, lr}
   31560:	add	fp, sp, #16
   31564:	mov	r5, r0
   31568:	ldr	r0, [r0, #32]
   3156c:	ldrh	r0, [r0, #14]
   31570:	cmp	r0, #3
   31574:	bne	315e8 <flatcc_builder_table_add_union@@Base+0x8c>
   31578:	mov	r7, r3
   3157c:	mov	r6, r1
   31580:	uxtb	r4, r2
   31584:	cmp	r3, #0
   31588:	beq	31594 <flatcc_builder_table_add_union@@Base+0x38>
   3158c:	cmp	r4, #0
   31590:	beq	31608 <flatcc_builder_table_add_union@@Base+0xac>
   31594:	cmp	r7, #0
   31598:	beq	315b4 <flatcc_builder_table_add_union@@Base+0x58>
   3159c:	mov	r0, r5
   315a0:	mov	r1, r6
   315a4:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   315a8:	cmp	r0, #0
   315ac:	beq	31648 <flatcc_builder_table_add_union@@Base+0xec>
   315b0:	str	r7, [r0]
   315b4:	sub	r1, r6, #1
   315b8:	mov	r0, r5
   315bc:	mov	r2, #1
   315c0:	mov	r3, #1
   315c4:	bl	3172c <flatcc_builder_table_add@@Base>
   315c8:	cmp	r0, #0
   315cc:	beq	31628 <flatcc_builder_table_add_union@@Base+0xcc>
   315d0:	mov	r5, r0
   315d4:	mov	r0, r4
   315d8:	bl	3180c <flatcc_builder_table_add@@Base+0xe0>
   315dc:	strb	r4, [r5]
   315e0:	mov	r0, #0
   315e4:	pop	{r4, r5, r6, r7, fp, pc}
   315e8:	movw	r0, #3012	; 0xbc4
   315ec:	movt	r0, #5
   315f0:	movw	r1, #943	; 0x3af
   315f4:	movt	r1, #5
   315f8:	movw	r3, #3766	; 0xeb6
   315fc:	movt	r3, #5
   31600:	movw	r2, #1518	; 0x5ee
   31604:	bl	14ab4 <__assert_fail@plt>
   31608:	movw	r0, #3854	; 0xf0e
   3160c:	movt	r0, #5
   31610:	movw	r1, #943	; 0x3af
   31614:	movt	r1, #5
   31618:	movw	r3, #3766	; 0xeb6
   3161c:	movt	r3, #5
   31620:	movw	r2, #1519	; 0x5ef
   31624:	bl	14ab4 <__assert_fail@plt>
   31628:	movw	r0, #3898	; 0xf3a
   3162c:	movt	r0, #5
   31630:	movw	r1, #943	; 0x3af
   31634:	movt	r1, #5
   31638:	movw	r3, #3766	; 0xeb6
   3163c:	movt	r3, #5
   31640:	movw	r2, #1526	; 0x5f6
   31644:	bl	14ab4 <__assert_fail@plt>
   31648:	movw	r0, #3888	; 0xf30
   3164c:	movt	r0, #5
   31650:	movw	r1, #943	; 0x3af
   31654:	movt	r1, #5
   31658:	movw	r3, #3766	; 0xeb6
   3165c:	movt	r3, #5
   31660:	movw	r2, #1522	; 0x5f2
   31664:	bl	14ab4 <__assert_fail@plt>

00031668 <flatcc_builder_table_add_offset@@Base>:
   31668:	push	{fp, lr}
   3166c:	mov	fp, sp
   31670:	ldr	r2, [r0, #32]
   31674:	ldrh	r2, [r2, #14]
   31678:	cmp	r2, #3
   3167c:	bne	316cc <flatcc_builder_table_add_offset@@Base+0x64>
   31680:	movw	r2, #32765	; 0x7ffd
   31684:	cmp	r1, r2
   31688:	bcs	316ec <flatcc_builder_table_add_offset@@Base+0x84>
   3168c:	ldr	r2, [r0, #4]
   31690:	add	r2, r2, r1, lsl #1
   31694:	ldrh	r2, [r2]
   31698:	cmp	r2, #0
   3169c:	bne	3170c <flatcc_builder_table_add_offset@@Base+0xa4>
   316a0:	ldr	r2, [r0, #12]
   316a4:	eor	r2, r2, r1
   316a8:	movw	r3, #31153	; 0x79b1
   316ac:	movt	r3, #40503	; 0x9e37
   316b0:	mul	r2, r2, r3
   316b4:	eor	r2, r2, #4
   316b8:	mul	r2, r2, r3
   316bc:	str	r2, [r0, #12]
   316c0:	uxth	r1, r1
   316c4:	pop	{fp, lr}
   316c8:	b	32034 <flatcc_builder_table_add_copy@@Base+0x40>
   316cc:	movw	r0, #3012	; 0xbc4
   316d0:	movt	r0, #5
   316d4:	movw	r1, #943	; 0x3af
   316d8:	movt	r1, #5
   316dc:	movw	r3, #4792	; 0x12b8
   316e0:	movt	r3, #5
   316e4:	movw	r2, #1811	; 0x713
   316e8:	bl	14ab4 <__assert_fail@plt>
   316ec:	movw	r0, #4664	; 0x1238
   316f0:	movt	r0, #5
   316f4:	movw	r1, #943	; 0x3af
   316f8:	movt	r1, #5
   316fc:	movw	r3, #4792	; 0x12b8
   31700:	movt	r3, #5
   31704:	movw	r2, #1812	; 0x714
   31708:	bl	14ab4 <__assert_fail@plt>
   3170c:	movw	r0, #30217	; 0x7609
   31710:	movt	r0, #4
   31714:	movw	r1, #943	; 0x3af
   31718:	movt	r1, #5
   3171c:	movw	r3, #4792	; 0x12b8
   31720:	movt	r3, #5
   31724:	movw	r2, #1819	; 0x71b
   31728:	bl	14ab4 <__assert_fail@plt>

0003172c <flatcc_builder_table_add@@Base>:
   3172c:	push	{fp, lr}
   31730:	mov	fp, sp
   31734:	mov	ip, r3
   31738:	ldr	r3, [r0, #32]
   3173c:	ldrh	r3, [r3, #14]
   31740:	cmp	r3, #3
   31744:	bne	317ac <flatcc_builder_table_add@@Base+0x80>
   31748:	movw	r3, #32765	; 0x7ffd
   3174c:	cmp	r1, r3
   31750:	bcs	317cc <flatcc_builder_table_add@@Base+0xa0>
   31754:	mov	lr, r2
   31758:	ldrh	r3, [r0, #130]	; 0x82
   3175c:	cmp	r3, ip
   31760:	strhcc	ip, [r0, #130]	; 0x82
   31764:	ldr	r3, [r0, #4]
   31768:	add	r3, r3, r1, lsl #1
   3176c:	ldrh	r3, [r3]
   31770:	cmp	r3, #0
   31774:	bne	317ec <flatcc_builder_table_add@@Base+0xc0>
   31778:	ldr	r3, [r0, #12]
   3177c:	eor	r3, r3, r1
   31780:	movw	r2, #31153	; 0x79b1
   31784:	movt	r2, #40503	; 0x9e37
   31788:	mul	r3, r3, r2
   3178c:	eor	r3, r3, lr
   31790:	mul	r2, r3, r2
   31794:	str	r2, [r0, #12]
   31798:	uxth	r3, r1
   3179c:	mov	r1, lr
   317a0:	mov	r2, ip
   317a4:	pop	{fp, lr}
   317a8:	b	31f28 <flatcc_builder_string_len@@Base+0xc>
   317ac:	movw	r0, #3012	; 0xbc4
   317b0:	movt	r0, #5
   317b4:	movw	r1, #943	; 0x3af
   317b8:	movt	r1, #5
   317bc:	movw	r3, #4590	; 0x11ee
   317c0:	movt	r3, #5
   317c4:	movw	r2, #1773	; 0x6ed
   317c8:	bl	14ab4 <__assert_fail@plt>
   317cc:	movw	r0, #4664	; 0x1238
   317d0:	movt	r0, #5
   317d4:	movw	r1, #943	; 0x3af
   317d8:	movt	r1, #5
   317dc:	movw	r3, #4590	; 0x11ee
   317e0:	movt	r3, #5
   317e4:	movw	r2, #1774	; 0x6ee
   317e8:	bl	14ab4 <__assert_fail@plt>
   317ec:	movw	r0, #30217	; 0x7609
   317f0:	movt	r0, #4
   317f4:	movw	r1, #943	; 0x3af
   317f8:	movt	r1, #5
   317fc:	movw	r3, #4590	; 0x11ee
   31800:	movt	r3, #5
   31804:	movw	r2, #1784	; 0x6f8
   31808:	bl	14ab4 <__assert_fail@plt>
   3180c:	bx	lr

00031810 <flatcc_builder_table_add_union_vector@@Base>:
   31810:	push	{r4, r5, r6, r7, fp, lr}
   31814:	add	fp, sp, #16
   31818:	mov	r6, r0
   3181c:	ldr	r0, [r0, #32]
   31820:	ldrh	r0, [r0, #14]
   31824:	cmp	r0, #3
   31828:	bne	31894 <flatcc_builder_table_add_union_vector@@Base+0x84>
   3182c:	mov	r4, r3
   31830:	mov	r7, r2
   31834:	mov	r5, r1
   31838:	cmp	r2, #0
   3183c:	mov	r0, r2
   31840:	movwne	r0, #1
   31844:	clz	r1, r3
   31848:	lsr	r1, r1, #5
   3184c:	teq	r1, r0
   31850:	beq	318b4 <flatcc_builder_table_add_union_vector@@Base+0xa4>
   31854:	cmp	r7, #0
   31858:	beq	3188c <flatcc_builder_table_add_union_vector@@Base+0x7c>
   3185c:	sub	r1, r5, #1
   31860:	mov	r0, r6
   31864:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   31868:	cmp	r0, #0
   3186c:	beq	318d4 <flatcc_builder_table_add_union_vector@@Base+0xc4>
   31870:	str	r7, [r0]
   31874:	mov	r0, r6
   31878:	mov	r1, r5
   3187c:	bl	31668 <flatcc_builder_table_add_offset@@Base>
   31880:	cmp	r0, #0
   31884:	beq	318f4 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   31888:	str	r4, [r0]
   3188c:	mov	r0, #0
   31890:	pop	{r4, r5, r6, r7, fp, pc}
   31894:	movw	r0, #3012	; 0xbc4
   31898:	movt	r0, #5
   3189c:	movw	r1, #943	; 0x3af
   318a0:	movt	r1, #5
   318a4:	movw	r3, #3910	; 0xf46
   318a8:	movt	r3, #5
   318ac:	mov	r2, #1536	; 0x600
   318b0:	bl	14ab4 <__assert_fail@plt>
   318b4:	movw	r0, #4009	; 0xfa9
   318b8:	movt	r0, #5
   318bc:	movw	r1, #943	; 0x3af
   318c0:	movt	r1, #5
   318c4:	movw	r3, #3910	; 0xf46
   318c8:	movt	r3, #5
   318cc:	movw	r2, #1537	; 0x601
   318d0:	bl	14ab4 <__assert_fail@plt>
   318d4:	movw	r0, #3888	; 0xf30
   318d8:	movt	r0, #5
   318dc:	movw	r1, #943	; 0x3af
   318e0:	movt	r1, #5
   318e4:	movw	r3, #3910	; 0xf46
   318e8:	movt	r3, #5
   318ec:	movw	r2, #1540	; 0x604
   318f0:	bl	14ab4 <__assert_fail@plt>
   318f4:	movw	r0, #3888	; 0xf30
   318f8:	movt	r0, #5
   318fc:	movw	r1, #943	; 0x3af
   31900:	movt	r1, #5
   31904:	movw	r3, #3910	; 0xf46
   31908:	movt	r3, #5
   3190c:	movw	r2, #1544	; 0x608
   31910:	bl	14ab4 <__assert_fail@plt>

00031914 <flatcc_builder_create_union_vector@@Base>:
   31914:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31918:	add	fp, sp, #24
   3191c:	sub	sp, sp, #16
   31920:	mov	r7, r3
   31924:	mov	r6, r2
   31928:	mov	r4, r1
   3192c:	mov	r5, r0
   31930:	mov	r0, #0
   31934:	str	r0, [r5]
   31938:	str	r0, [r5, #4]
   3193c:	mov	r0, r1
   31940:	bl	306ec <flatcc_builder_start_offset_vector@@Base>
   31944:	cmp	r0, #0
   31948:	beq	31954 <flatcc_builder_create_union_vector@@Base+0x40>
   3194c:	sub	sp, fp, #24
   31950:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31954:	mov	r0, r4
   31958:	mov	r1, r7
   3195c:	bl	30238 <flatcc_builder_extend_offset_vector@@Base>
   31960:	cmp	r0, #0
   31964:	beq	3194c <flatcc_builder_create_union_vector@@Base+0x38>
   31968:	mov	r0, r4
   3196c:	mov	r1, r7
   31970:	bl	2ffb0 <flatcc_builder_start_struct@@Base+0x84>
   31974:	cmp	r0, #0
   31978:	beq	3194c <flatcc_builder_create_union_vector@@Base+0x38>
   3197c:	mov	r8, r0
   31980:	mov	r0, r4
   31984:	bl	31548 <flatcc_builder_offset_vector_edit@@Base>
   31988:	mov	ip, r0
   3198c:	cmp	r7, #0
   31990:	beq	319c0 <flatcc_builder_create_union_vector@@Base+0xac>
   31994:	add	r0, r6, #4
   31998:	mov	r1, r8
   3199c:	mov	r2, ip
   319a0:	mov	r6, r7
   319a4:	ldrb	r3, [r0, #-4]
   319a8:	strb	r3, [r1], #1
   319ac:	ldr	r3, [r0]
   319b0:	str	r3, [r2], #4
   319b4:	add	r0, r0, #8
   319b8:	subs	r6, r6, #1
   319bc:	bne	319a4 <flatcc_builder_create_union_vector@@Base+0x90>
   319c0:	str	r7, [sp]
   319c4:	add	r0, sp, #8
   319c8:	mov	r1, r4
   319cc:	mov	r2, r8
   319d0:	mov	r3, ip
   319d4:	bl	319f4 <flatcc_builder_create_union_vector_direct@@Base>
   319d8:	ldr	r0, [sp, #8]
   319dc:	ldr	r1, [sp, #12]
   319e0:	stm	r5, {r0, r1}
   319e4:	mov	r0, r4
   319e8:	bl	2fec0 <flatcc_builder_end_buffer@@Base+0xc8>
   319ec:	sub	sp, fp, #24
   319f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000319f4 <flatcc_builder_create_union_vector_direct@@Base>:
   319f4:	push	{r4, r5, r6, r7, fp, lr}
   319f8:	add	fp, sp, #16
   319fc:	sub	sp, sp, #8
   31a00:	mov	r5, r2
   31a04:	mov	r6, r1
   31a08:	mov	r4, r0
   31a0c:	mov	r0, #0
   31a10:	str	r0, [r4]
   31a14:	str	r0, [r4, #4]
   31a18:	ldr	r7, [fp, #8]
   31a1c:	mov	r0, r1
   31a20:	mov	r1, r3
   31a24:	mov	r2, r7
   31a28:	mov	r3, r5
   31a2c:	bl	31330 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   31a30:	str	r0, [r4, #4]
   31a34:	cmp	r0, #0
   31a38:	beq	31a64 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   31a3c:	mvn	r0, #0
   31a40:	mov	r1, #1
   31a44:	str	r1, [sp]
   31a48:	str	r0, [sp, #4]
   31a4c:	mov	r0, r6
   31a50:	mov	r1, r5
   31a54:	mov	r2, r7
   31a58:	mov	r3, #1
   31a5c:	bl	31188 <flatcc_builder_create_vector@@Base>
   31a60:	str	r0, [r4]
   31a64:	sub	sp, fp, #16
   31a68:	pop	{r4, r5, r6, r7, fp, pc}

00031a6c <flatcc_builder_start_union_vector@@Base>:
   31a6c:	push	{r4, r5, fp, lr}
   31a70:	add	fp, sp, #8
   31a74:	mov	r4, r0
   31a78:	mov	r1, #4
   31a7c:	bl	2fd00 <flatcc_builder_start_buffer@@Base+0xbc>
   31a80:	mvn	r5, #0
   31a84:	cmp	r0, #0
   31a88:	beq	31a94 <flatcc_builder_start_union_vector@@Base+0x28>
   31a8c:	mov	r0, r5
   31a90:	pop	{r4, r5, fp, pc}
   31a94:	ldr	r0, [r4, #32]
   31a98:	mov	r1, #8
   31a9c:	str	r1, [r0, #16]
   31aa0:	ldr	r0, [r4, #32]
   31aa4:	mov	r5, #0
   31aa8:	str	r5, [r0, #20]
   31aac:	ldr	r0, [r4, #32]
   31ab0:	mov	r1, #7
   31ab4:	strh	r1, [r0, #14]
   31ab8:	mov	r0, r4
   31abc:	mvn	r1, #3
   31ac0:	bl	2ff78 <flatcc_builder_start_struct@@Base+0x4c>
   31ac4:	mov	r0, r5
   31ac8:	pop	{r4, r5, fp, pc}

00031acc <flatcc_builder_end_union_vector@@Base>:
   31acc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31ad0:	add	fp, sp, #24
   31ad4:	sub	sp, sp, #16
   31ad8:	mov	r9, r0
   31adc:	mov	r0, #0
   31ae0:	str	r0, [r9]
   31ae4:	str	r0, [r9, #4]
   31ae8:	ldr	r0, [r1, #32]
   31aec:	ldrh	r0, [r0, #14]
   31af0:	cmp	r0, #7
   31af4:	bne	31b94 <flatcc_builder_end_union_vector@@Base+0xc8>
   31af8:	mov	r4, r1
   31afc:	mov	r0, r1
   31b00:	bl	31bb4 <flatcc_builder_union_vector_count@@Base>
   31b04:	mov	r6, r0
   31b08:	add	r1, r0, r0, lsl #2
   31b0c:	mov	r0, r4
   31b10:	bl	2ffb0 <flatcc_builder_start_struct@@Base+0x84>
   31b14:	cmp	r0, #0
   31b18:	beq	31b8c <flatcc_builder_end_union_vector@@Base+0xc0>
   31b1c:	mov	r7, r0
   31b20:	add	r8, r0, r6, lsl #2
   31b24:	mov	r0, r4
   31b28:	bl	31bc0 <flatcc_builder_union_vector_edit@@Base>
   31b2c:	cmp	r6, #0
   31b30:	beq	31b60 <flatcc_builder_end_union_vector@@Base+0x94>
   31b34:	add	r0, r0, #4
   31b38:	mov	r1, r8
   31b3c:	mov	r2, r7
   31b40:	mov	r3, r6
   31b44:	ldrb	r5, [r0, #-4]
   31b48:	strb	r5, [r1], #1
   31b4c:	ldr	r5, [r0]
   31b50:	str	r5, [r2], #4
   31b54:	add	r0, r0, #8
   31b58:	subs	r3, r3, #1
   31b5c:	bne	31b44 <flatcc_builder_end_union_vector@@Base+0x78>
   31b60:	str	r6, [sp]
   31b64:	add	r0, sp, #8
   31b68:	mov	r1, r4
   31b6c:	mov	r2, r8
   31b70:	mov	r3, r7
   31b74:	bl	319f4 <flatcc_builder_create_union_vector_direct@@Base>
   31b78:	ldr	r0, [sp, #8]
   31b7c:	ldr	r1, [sp, #12]
   31b80:	stm	r9, {r0, r1}
   31b84:	mov	r0, r4
   31b88:	bl	2fec0 <flatcc_builder_end_buffer@@Base+0xc8>
   31b8c:	sub	sp, fp, #24
   31b90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31b94:	movw	r0, #4049	; 0xfd1
   31b98:	movt	r0, #5
   31b9c:	movw	r1, #943	; 0x3af
   31ba0:	movt	r1, #5
   31ba4:	movw	r3, #4099	; 0x1003
   31ba8:	movt	r3, #5
   31bac:	movw	r2, #1617	; 0x651
   31bb0:	bl	14ab4 <__assert_fail@plt>

00031bb4 <flatcc_builder_union_vector_count@@Base>:
   31bb4:	ldr	r0, [r0, #32]
   31bb8:	ldr	r0, [r0, #20]
   31bbc:	bx	lr

00031bc0 <flatcc_builder_union_vector_edit@@Base>:
   31bc0:	ldr	r0, [r0, #16]
   31bc4:	bx	lr

00031bc8 <flatcc_builder_extend_union_vector@@Base>:
   31bc8:	push	{r4, r5, fp, lr}
   31bcc:	add	fp, sp, #8
   31bd0:	mov	r5, r1
   31bd4:	mov	r4, r0
   31bd8:	mvn	r2, #-536870912	; 0xe0000000
   31bdc:	bl	300b4 <flatcc_builder_extend_vector@@Base+0x44>
   31be0:	cmp	r0, #0
   31be4:	movne	r0, #0
   31be8:	popne	{r4, r5, fp, pc}
   31bec:	lsl	r1, r5, #3
   31bf0:	mov	r0, r4
   31bf4:	pop	{r4, r5, fp, lr}
   31bf8:	b	2ffb0 <flatcc_builder_start_struct@@Base+0x84>

00031bfc <flatcc_builder_truncate_union_vector@@Base>:
   31bfc:	push	{fp, lr}
   31c00:	mov	fp, sp
   31c04:	ldr	r2, [r0, #32]
   31c08:	ldrh	r3, [r2, #14]
   31c0c:	cmp	r3, #7
   31c10:	bne	31c40 <flatcc_builder_truncate_union_vector@@Base+0x44>
   31c14:	ldr	r3, [r2, #20]
   31c18:	cmp	r3, r1
   31c1c:	bcc	31c60 <flatcc_builder_truncate_union_vector@@Base+0x64>
   31c20:	sub	r3, r3, r1
   31c24:	str	r3, [r2, #20]
   31c28:	ldr	r2, [r0, #32]
   31c2c:	ldr	r2, [r2, #16]
   31c30:	mul	r1, r2, r1
   31c34:	bl	30540 <flatcc_builder_truncate_vector@@Base+0x84>
   31c38:	mov	r0, #0
   31c3c:	pop	{fp, pc}
   31c40:	movw	r0, #4049	; 0xfd1
   31c44:	movt	r0, #5
   31c48:	movw	r1, #943	; 0x3af
   31c4c:	movt	r1, #5
   31c50:	movw	r3, #4182	; 0x1056
   31c54:	movt	r3, #5
   31c58:	movw	r2, #1665	; 0x681
   31c5c:	bl	14ab4 <__assert_fail@plt>
   31c60:	movw	r0, #2613	; 0xa35
   31c64:	movt	r0, #5
   31c68:	movw	r1, #943	; 0x3af
   31c6c:	movt	r1, #5
   31c70:	movw	r3, #4182	; 0x1056
   31c74:	movt	r3, #5
   31c78:	movw	r2, #1666	; 0x682
   31c7c:	bl	14ab4 <__assert_fail@plt>

00031c80 <flatcc_builder_union_vector_push@@Base>:
   31c80:	push	{r4, r5, r6, sl, fp, lr}
   31c84:	add	fp, sp, #16
   31c88:	mov	r4, r2
   31c8c:	mov	r5, r1
   31c90:	ldr	r1, [r0, #32]
   31c94:	ldrh	r2, [r1, #14]
   31c98:	cmp	r2, #7
   31c9c:	bne	31cd8 <flatcc_builder_union_vector_push@@Base+0x58>
   31ca0:	ldr	r2, [r1, #20]
   31ca4:	mov	r6, #0
   31ca8:	cmn	r2, #-536870911	; 0xe0000001
   31cac:	beq	31cd0 <flatcc_builder_union_vector_push@@Base+0x50>
   31cb0:	add	r2, r2, #1
   31cb4:	str	r2, [r1, #20]
   31cb8:	mov	r1, #8
   31cbc:	bl	2ffb0 <flatcc_builder_start_struct@@Base+0x84>
   31cc0:	cmp	r0, #0
   31cc4:	strne	r5, [r0]
   31cc8:	strne	r4, [r0, #4]
   31ccc:	movne	r6, r0
   31cd0:	mov	r0, r6
   31cd4:	pop	{r4, r5, r6, sl, fp, pc}
   31cd8:	movw	r0, #4049	; 0xfd1
   31cdc:	movt	r0, #5
   31ce0:	movw	r1, #943	; 0x3af
   31ce4:	movt	r1, #5
   31ce8:	movw	r3, #4251	; 0x109b
   31cec:	movt	r3, #5
   31cf0:	movw	r2, #1677	; 0x68d
   31cf4:	bl	14ab4 <__assert_fail@plt>

00031cf8 <flatcc_builder_append_union_vector@@Base>:
   31cf8:	push	{r4, r5, r6, sl, fp, lr}
   31cfc:	add	fp, sp, #16
   31d00:	mov	r6, r0
   31d04:	ldr	r0, [r0, #32]
   31d08:	ldrh	r0, [r0, #14]
   31d0c:	cmp	r0, #7
   31d10:	bne	31d50 <flatcc_builder_append_union_vector@@Base+0x58>
   31d14:	mov	r5, r2
   31d18:	mov	r4, r1
   31d1c:	mov	r0, r6
   31d20:	mov	r1, r2
   31d24:	mvn	r2, #-536870912	; 0xe0000000
   31d28:	bl	300b4 <flatcc_builder_extend_vector@@Base+0x44>
   31d2c:	cmp	r0, #0
   31d30:	beq	31d3c <flatcc_builder_append_union_vector@@Base+0x44>
   31d34:	mov	r0, #0
   31d38:	pop	{r4, r5, r6, sl, fp, pc}
   31d3c:	lsl	r2, r5, #3
   31d40:	mov	r0, r6
   31d44:	mov	r1, r4
   31d48:	pop	{r4, r5, r6, sl, fp, lr}
   31d4c:	b	3017c <flatcc_builder_vector_push@@Base+0x80>
   31d50:	movw	r0, #4049	; 0xfd1
   31d54:	movt	r0, #5
   31d58:	movw	r1, #943	; 0x3af
   31d5c:	movt	r1, #5
   31d60:	movw	r3, #4360	; 0x1108
   31d64:	movt	r3, #5
   31d68:	movw	r2, #1692	; 0x69c
   31d6c:	bl	14ab4 <__assert_fail@plt>

00031d70 <flatcc_builder_create_string@@Base>:
   31d70:	push	{r4, r5, r6, r7, fp, lr}
   31d74:	add	fp, sp, #16
   31d78:	sub	sp, sp, #80	; 0x50
   31d7c:	mov	r5, r2
   31d80:	mov	r6, r1
   31d84:	mov	r4, r0
   31d88:	mov	r0, r2
   31d8c:	bl	2f904 <flatcc_builder_embed_buffer@@Base+0x1dc>
   31d90:	str	r5, [fp, #-20]	; 0xffffffec
   31d94:	add	r1, r5, #1
   31d98:	mov	r7, #4
   31d9c:	mov	r0, r4
   31da0:	mov	r2, #4
   31da4:	bl	2f8f0 <flatcc_builder_embed_buffer@@Base+0x1c8>
   31da8:	str	r7, [sp, #16]
   31dac:	sub	r1, fp, #20
   31db0:	str	r1, [sp, #12]
   31db4:	str	r7, [sp, #4]
   31db8:	mov	r1, #1
   31dbc:	str	r1, [sp, #8]
   31dc0:	add	r0, r0, #1
   31dc4:	cmp	r5, #0
   31dc8:	strne	r5, [sp, #24]
   31dcc:	strne	r6, [sp, #20]
   31dd0:	movne	r1, #2
   31dd4:	strne	r1, [sp, #8]
   31dd8:	addne	r1, r5, #4
   31ddc:	strne	r1, [sp, #4]
   31de0:	cmp	r0, #0
   31de4:	beq	31e14 <flatcc_builder_create_string@@Base+0xa4>
   31de8:	ldmib	sp, {r1, r2}
   31dec:	add	r1, r1, r0
   31df0:	str	r1, [sp, #4]
   31df4:	add	r1, sp, #4
   31df8:	add	r1, r1, r2, lsl #3
   31dfc:	movw	r3, #413	; 0x19d
   31e00:	movt	r3, #5
   31e04:	str	r3, [r1, #8]
   31e08:	str	r0, [r1, #12]
   31e0c:	add	r0, r2, #1
   31e10:	str	r0, [sp, #8]
   31e14:	add	r1, sp, #4
   31e18:	mov	r0, r4
   31e1c:	bl	2f908 <flatcc_builder_embed_buffer@@Base+0x1e0>
   31e20:	sub	sp, fp, #16
   31e24:	pop	{r4, r5, r6, r7, fp, pc}

00031e28 <flatcc_builder_create_string_str@@Base>:
   31e28:	push	{r4, r5, fp, lr}
   31e2c:	add	fp, sp, #8
   31e30:	mov	r4, r1
   31e34:	mov	r5, r0
   31e38:	mov	r0, r1
   31e3c:	bl	149dc <strlen@plt>
   31e40:	mov	r2, r0
   31e44:	mov	r0, r5
   31e48:	mov	r1, r4
   31e4c:	pop	{r4, r5, fp, lr}
   31e50:	b	31d70 <flatcc_builder_create_string@@Base>

00031e54 <flatcc_builder_create_string_strn@@Base>:
   31e54:	push	{r4, r5, fp, lr}
   31e58:	add	fp, sp, #8
   31e5c:	mov	r4, r1
   31e60:	mov	r5, r0
   31e64:	mov	r0, r1
   31e68:	mov	r1, r2
   31e6c:	bl	30490 <flatcc_builder_append_string_strn@@Base+0x30>
   31e70:	mov	r2, r0
   31e74:	mov	r0, r5
   31e78:	mov	r1, r4
   31e7c:	pop	{r4, r5, fp, lr}
   31e80:	b	31d70 <flatcc_builder_create_string@@Base>

00031e84 <flatcc_builder_end_string@@Base>:
   31e84:	push	{r4, r5, fp, lr}
   31e88:	add	fp, sp, #8
   31e8c:	mov	r4, r0
   31e90:	ldr	r0, [r0, #32]
   31e94:	ldrh	r1, [r0, #14]
   31e98:	cmp	r1, #6
   31e9c:	bne	31ed4 <flatcc_builder_end_string@@Base+0x50>
   31ea0:	ldr	r2, [r4, #20]
   31ea4:	ldr	r0, [r0, #20]
   31ea8:	cmp	r0, r2
   31eac:	bne	31ef4 <flatcc_builder_end_string@@Base+0x70>
   31eb0:	ldr	r1, [r4, #16]
   31eb4:	mov	r0, r4
   31eb8:	bl	31d70 <flatcc_builder_create_string@@Base>
   31ebc:	mov	r5, r0
   31ec0:	cmp	r0, #0
   31ec4:	movne	r0, r4
   31ec8:	blne	2fec0 <flatcc_builder_end_buffer@@Base+0xc8>
   31ecc:	mov	r0, r5
   31ed0:	pop	{r4, r5, fp, pc}
   31ed4:	movw	r0, #2260	; 0x8d4
   31ed8:	movt	r0, #5
   31edc:	movw	r1, #943	; 0x3af
   31ee0:	movt	r1, #5
   31ee4:	movw	r3, #4487	; 0x1187
   31ee8:	movt	r3, #5
   31eec:	movw	r2, #1732	; 0x6c4
   31ef0:	bl	14ab4 <__assert_fail@plt>
   31ef4:	movw	r0, #4554	; 0x11ca
   31ef8:	movt	r0, #5
   31efc:	movw	r1, #943	; 0x3af
   31f00:	movt	r1, #5
   31f04:	movw	r3, #4487	; 0x1187
   31f08:	movt	r3, #5
   31f0c:	movw	r2, #1733	; 0x6c5
   31f10:	bl	14ab4 <__assert_fail@plt>

00031f14 <flatcc_builder_string_edit@@Base>:
   31f14:	ldr	r0, [r0, #16]
   31f18:	bx	lr

00031f1c <flatcc_builder_string_len@@Base>:
   31f1c:	ldr	r0, [r0, #32]
   31f20:	ldr	r0, [r0, #20]
   31f24:	bx	lr
   31f28:	push	{r4, r5, r6, sl, fp, lr}
   31f2c:	add	fp, sp, #16
   31f30:	mov	r5, r3
   31f34:	mov	r4, r0
   31f38:	ldr	r0, [r0, #20]
   31f3c:	ldr	r3, [r4, #24]
   31f40:	add	r0, r2, r0
   31f44:	sub	r0, r0, #1
   31f48:	rsb	r2, r2, #0
   31f4c:	and	r6, r0, r2
   31f50:	add	r0, r6, r1
   31f54:	str	r0, [r4, #20]
   31f58:	cmp	r0, r3
   31f5c:	bcc	31f80 <flatcc_builder_string_len@@Base+0x64>
   31f60:	add	r1, r0, #1
   31f64:	mov	r0, r4
   31f68:	movw	r2, #65532	; 0xfffc
   31f6c:	bl	323cc <flatcc_builder_get_emit_context@@Base+0x18>
   31f70:	mov	r1, r0
   31f74:	mov	r0, #0
   31f78:	cmp	r1, #0
   31f7c:	popne	{r4, r5, r6, sl, fp, pc}
   31f80:	ldr	r0, [r4, #4]
   31f84:	add	r0, r0, r5, lsl #1
   31f88:	add	r1, r6, #4
   31f8c:	strh	r1, [r0]
   31f90:	ldrh	r0, [r4, #8]
   31f94:	cmp	r0, r5
   31f98:	addls	r0, r5, #1
   31f9c:	strhls	r0, [r4, #8]
   31fa0:	ldr	r0, [r4, #16]
   31fa4:	add	r0, r0, r6
   31fa8:	pop	{r4, r5, r6, sl, fp, pc}

00031fac <flatcc_builder_table_edit@@Base>:
   31fac:	push	{fp, lr}
   31fb0:	mov	fp, sp
   31fb4:	ldr	r2, [r0, #32]
   31fb8:	ldrh	r2, [r2, #14]
   31fbc:	cmp	r2, #3
   31fc0:	ldreq	r2, [r0, #16]
   31fc4:	ldreq	r0, [r0, #20]
   31fc8:	addeq	r0, r2, r0
   31fcc:	subeq	r0, r0, r1
   31fd0:	popeq	{fp, pc}
   31fd4:	movw	r0, #3012	; 0xbc4
   31fd8:	movt	r0, #5
   31fdc:	movw	r1, #943	; 0x3af
   31fe0:	movt	r1, #5
   31fe4:	movw	r3, #4732	; 0x127c
   31fe8:	movt	r3, #5
   31fec:	movw	r2, #1794	; 0x702
   31ff0:	bl	14ab4 <__assert_fail@plt>

00031ff4 <flatcc_builder_table_add_copy@@Base>:
   31ff4:	push	{r4, r5, r6, sl, fp, lr}
   31ff8:	add	fp, sp, #16
   31ffc:	mov	r4, r3
   32000:	mov	r5, r2
   32004:	ldr	r3, [fp, #8]
   32008:	mov	r2, r4
   3200c:	bl	3172c <flatcc_builder_table_add@@Base>
   32010:	mov	r6, r0
   32014:	cmp	r0, #0
   32018:	beq	3202c <flatcc_builder_table_add_copy@@Base+0x38>
   3201c:	mov	r0, r6
   32020:	mov	r1, r5
   32024:	mov	r2, r4
   32028:	bl	14934 <memcpy@plt>
   3202c:	mov	r0, r6
   32030:	pop	{r4, r5, r6, sl, fp, pc}
   32034:	push	{r4, r5, r6, r7, fp, lr}
   32038:	add	fp, sp, #16
   3203c:	mov	r5, r1
   32040:	mov	r4, r0
   32044:	ldr	r0, [r0, #20]
   32048:	ldr	r1, [r4, #24]
   3204c:	add	r0, r0, #3
   32050:	bic	r7, r0, #3
   32054:	add	r6, r7, #4
   32058:	str	r6, [r4, #20]
   3205c:	cmp	r6, r1
   32060:	bls	32084 <flatcc_builder_table_add_copy@@Base+0x90>
   32064:	mov	r0, r4
   32068:	mov	r1, r6
   3206c:	movw	r2, #65532	; 0xfffc
   32070:	bl	323cc <flatcc_builder_get_emit_context@@Base+0x18>
   32074:	mov	r1, r0
   32078:	mov	r0, #0
   3207c:	cmp	r1, #0
   32080:	popne	{r4, r5, r6, r7, fp, pc}
   32084:	ldr	r0, [r4, #4]
   32088:	add	r0, r0, r5, lsl #1
   3208c:	strh	r6, [r0]
   32090:	ldrh	r0, [r4, #8]
   32094:	cmp	r0, r5
   32098:	addls	r0, r5, #1
   3209c:	strhls	r0, [r4, #8]
   320a0:	ldr	r0, [r4]
   320a4:	add	r1, r0, #2
   320a8:	str	r1, [r4]
   320ac:	strh	r7, [r0]
   320b0:	ldr	r0, [r4, #16]
   320b4:	add	r0, r0, r7
   320b8:	pop	{r4, r5, r6, r7, fp, pc}

000320bc <flatcc_builder_push_buffer_alignment@@Base>:
   320bc:	ldrh	r1, [r0, #128]	; 0x80
   320c0:	mov	r2, #4
   320c4:	strh	r2, [r0, #128]	; 0x80
   320c8:	mov	r0, r1
   320cc:	bx	lr

000320d0 <flatcc_builder_pop_buffer_alignment@@Base>:
   320d0:	b	2fb68 <flatcc_builder_create_buffer@@Base+0x1cc>

000320d4 <flatcc_builder_get_buffer_alignment@@Base>:
   320d4:	ldrh	r0, [r0, #128]	; 0x80
   320d8:	bx	lr

000320dc <flatcc_builder_set_vtable_clustering@@Base>:
   320dc:	clz	r1, r1
   320e0:	lsr	r1, r1, #5
   320e4:	str	r1, [r0, #180]	; 0xb4
   320e8:	bx	lr

000320ec <flatcc_builder_set_block_align@@Base>:
   320ec:	strh	r1, [r0, #132]	; 0x84
   320f0:	bx	lr

000320f4 <flatcc_builder_get_level@@Base>:
   320f4:	ldr	r0, [r0, #156]	; 0x9c
   320f8:	bx	lr

000320fc <flatcc_builder_set_max_level@@Base>:
   320fc:	str	r1, [r0, #176]	; 0xb0
   32100:	ldr	r2, [r0, #160]	; 0xa0
   32104:	cmp	r2, r1
   32108:	strlt	r1, [r0, #160]	; 0xa0
   3210c:	bx	lr

00032110 <flatcc_builder_get_buffer_size@@Base>:
   32110:	ldr	r1, [r0, #136]	; 0x88
   32114:	ldr	r0, [r0, #140]	; 0x8c
   32118:	sub	r0, r0, r1
   3211c:	bx	lr

00032120 <flatcc_builder_get_buffer_start@@Base>:
   32120:	ldr	r0, [r0, #136]	; 0x88
   32124:	bx	lr

00032128 <flatcc_builder_get_buffer_end@@Base>:
   32128:	ldr	r0, [r0, #140]	; 0x8c
   3212c:	bx	lr

00032130 <flatcc_builder_set_vtable_cache_limit@@Base>:
   32130:	str	r1, [r0, #172]	; 0xac
   32134:	bx	lr

00032138 <flatcc_builder_set_identifier@@Base>:
   32138:	movw	r2, #413	; 0x19d
   3213c:	movt	r2, #5
   32140:	cmp	r1, #0
   32144:	movne	r2, r1
   32148:	ldr	r1, [r2]
   3214c:	str	r1, [r0, #168]	; 0xa8
   32150:	bx	lr

00032154 <flatcc_builder_get_type@@Base>:
   32154:	ldr	r0, [r0, #32]
   32158:	cmp	r0, #0
   3215c:	ldrhne	r0, [r0, #14]
   32160:	moveq	r0, #0
   32164:	bx	lr

00032168 <flatcc_builder_get_type_at@@Base>:
   32168:	mov	r2, r0
   3216c:	mov	r0, #0
   32170:	cmp	r1, #1
   32174:	blt	32198 <flatcc_builder_get_type_at@@Base+0x30>
   32178:	ldr	r3, [r2, #156]	; 0x9c
   3217c:	cmp	r3, r1
   32180:	bxlt	lr
   32184:	sub	r0, r1, r3
   32188:	add	r0, r0, r0, lsl #3
   3218c:	ldr	r1, [r2, #32]
   32190:	add	r0, r1, r0, lsl #2
   32194:	ldrh	r0, [r0, #14]
   32198:	bx	lr

0003219c <flatcc_builder_get_direct_buffer@@Base>:
   3219c:	ldr	r2, [r0, #184]	; 0xb8
   321a0:	cmp	r2, #0
   321a4:	beq	321b0 <flatcc_builder_get_direct_buffer@@Base+0x14>
   321a8:	add	r0, r0, #188	; 0xbc
   321ac:	b	321c4 <flatcc_builder_get_direct_buffer@@Base+0x28>
   321b0:	cmp	r1, #0
   321b4:	movne	r0, #0
   321b8:	strne	r0, [r1]
   321bc:	mov	r0, #0
   321c0:	bx	lr
   321c4:	ldm	r0, {r2, r3}
   321c8:	cmp	r2, r3
   321cc:	beq	321e0 <flatcc_builder_get_direct_buffer@@Base+0x44>
   321d0:	mov	r0, #0
   321d4:	cmp	r1, #0
   321d8:	strne	r0, [r1]
   321dc:	bx	lr
   321e0:	cmp	r1, #0
   321e4:	ldrne	r2, [r0, #24]
   321e8:	strne	r2, [r1]
   321ec:	ldr	r0, [r0, #8]
   321f0:	bx	lr

000321f4 <flatcc_builder_copy_buffer@@Base>:
   321f4:	push	{fp, lr}
   321f8:	mov	fp, sp
   321fc:	ldr	r3, [r0, #184]	; 0xb8
   32200:	cmp	r3, #0
   32204:	beq	32238 <flatcc_builder_copy_buffer@@Base+0x44>
   32208:	add	r0, r0, #188	; 0xbc
   3220c:	bl	32904 <flatcc_emitter_copy_buffer@@Base>
   32210:	cmp	r0, #0
   32214:	popne	{fp, pc}
   32218:	movw	r0, #1539	; 0x603
   3221c:	movt	r0, #5
   32220:	movw	r1, #943	; 0x3af
   32224:	movt	r1, #5
   32228:	movw	r3, #4871	; 0x1307
   3222c:	movt	r3, #5
   32230:	movw	r2, #1926	; 0x786
   32234:	bl	14ab4 <__assert_fail@plt>
   32238:	mov	r0, #0
   3223c:	pop	{fp, pc}

00032240 <flatcc_builder_finalize_buffer@@Base>:
   32240:	push	{r4, r5, r6, sl, fp, lr}
   32244:	add	fp, sp, #16
   32248:	mov	r6, r1
   3224c:	mov	r4, r0
   32250:	bl	32110 <flatcc_builder_get_buffer_size@@Base>
   32254:	mov	r5, r0
   32258:	cmp	r6, #0
   3225c:	strne	r5, [r6]
   32260:	mov	r0, r5
   32264:	bl	14994 <malloc@plt>
   32268:	cmp	r0, #0
   3226c:	beq	322b0 <flatcc_builder_finalize_buffer@@Base+0x70>
   32270:	mov	r6, r0
   32274:	mov	r0, r4
   32278:	mov	r1, r6
   3227c:	mov	r2, r5
   32280:	bl	321f4 <flatcc_builder_copy_buffer@@Base>
   32284:	cmp	r0, #0
   32288:	movne	r0, r6
   3228c:	popne	{r4, r5, r6, sl, fp, pc}
   32290:	movw	r0, #30217	; 0x7609
   32294:	movt	r0, #4
   32298:	movw	r1, #943	; 0x3af
   3229c:	movt	r1, #5
   322a0:	movw	r3, #4940	; 0x134c
   322a4:	movt	r3, #5
   322a8:	movw	r2, #1948	; 0x79c
   322ac:	bl	14ab4 <__assert_fail@plt>
   322b0:	movw	r0, #30217	; 0x7609
   322b4:	movt	r0, #4
   322b8:	movw	r1, #943	; 0x3af
   322bc:	movt	r1, #5
   322c0:	movw	r3, #4940	; 0x134c
   322c4:	movt	r3, #5
   322c8:	movw	r2, #1944	; 0x798
   322cc:	bl	14ab4 <__assert_fail@plt>

000322d0 <flatcc_builder_finalize_aligned_buffer@@Base>:
   322d0:	push	{r4, r5, r6, r7, fp, lr}
   322d4:	add	fp, sp, #16
   322d8:	mov	r4, r1
   322dc:	mov	r5, r0
   322e0:	bl	32110 <flatcc_builder_get_buffer_size@@Base>
   322e4:	mov	r6, r0
   322e8:	cmp	r4, #0
   322ec:	strne	r6, [r4]
   322f0:	mov	r0, r5
   322f4:	bl	320d4 <flatcc_builder_get_buffer_alignment@@Base>
   322f8:	add	r1, r6, r0
   322fc:	sub	r1, r1, #1
   32300:	rsb	r2, r0, #0
   32304:	and	r7, r1, r2
   32308:	mov	r1, r7
   3230c:	bl	32358 <flatcc_builder_finalize_aligned_buffer@@Base+0x88>
   32310:	cmp	r0, #0
   32314:	beq	32344 <flatcc_builder_finalize_aligned_buffer@@Base+0x74>
   32318:	mov	r6, r0
   3231c:	mov	r0, r5
   32320:	mov	r1, r6
   32324:	mov	r2, r7
   32328:	bl	321f4 <flatcc_builder_copy_buffer@@Base>
   3232c:	cmp	r0, #0
   32330:	beq	3233c <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
   32334:	mov	r0, r6
   32338:	pop	{r4, r5, r6, r7, fp, pc}
   3233c:	mov	r0, r6
   32340:	bl	14928 <free@plt>
   32344:	mov	r6, #0
   32348:	cmp	r4, #0
   3234c:	strne	r6, [r4]
   32350:	mov	r0, r6
   32354:	pop	{r4, r5, r6, r7, fp, pc}
   32358:	push	{fp, lr}
   3235c:	mov	fp, sp
   32360:	sub	sp, sp, #8
   32364:	mov	r2, r1
   32368:	mov	r1, r0
   3236c:	mov	r0, #0
   32370:	str	r0, [sp, #4]
   32374:	cmp	r1, #4
   32378:	movls	r1, #4
   3237c:	add	r0, sp, #4
   32380:	bl	14a00 <posix_memalign@plt>
   32384:	cmp	r0, #0
   32388:	ldrne	r0, [sp, #4]
   3238c:	cmpne	r0, #0
   32390:	beq	323a0 <flatcc_builder_finalize_aligned_buffer@@Base+0xd0>
   32394:	bl	14928 <free@plt>
   32398:	mov	r0, #0
   3239c:	str	r0, [sp, #4]
   323a0:	ldr	r0, [sp, #4]
   323a4:	mov	sp, fp
   323a8:	pop	{fp, pc}

000323ac <flatcc_builder_aligned_alloc@@Base>:
   323ac:	b	32358 <flatcc_builder_finalize_aligned_buffer@@Base+0x88>

000323b0 <flatcc_builder_aligned_free@@Base>:
   323b0:	b	14928 <free@plt>

000323b4 <flatcc_builder_get_emit_context@@Base>:
   323b4:	ldr	r0, [r0, #36]	; 0x24
   323b8:	bx	lr
   323bc:	ldr	r0, [r0, #140]	; 0x8c
   323c0:	sub	r1, r1, #1
   323c4:	and	r0, r0, r1
   323c8:	bx	lr
   323cc:	push	{r4, r5, r6, sl, fp, lr}
   323d0:	add	fp, sp, #16
   323d4:	sub	sp, sp, #8
   323d8:	mov	r6, r2
   323dc:	mov	r5, r0
   323e0:	ldr	r2, [r0, #28]
   323e4:	ldr	r0, [r0, #40]	; 0x28
   323e8:	ldr	r4, [r5, #48]	; 0x30
   323ec:	mov	r3, #1
   323f0:	str	r3, [sp]
   323f4:	add	r2, r2, r1
   323f8:	add	r1, r5, #60	; 0x3c
   323fc:	mov	r3, #1
   32400:	blx	r4
   32404:	mov	r1, r0
   32408:	mvn	r0, #0
   3240c:	cmp	r1, #0
   32410:	beq	3241c <flatcc_builder_get_emit_context@@Base+0x68>
   32414:	sub	sp, fp, #16
   32418:	pop	{r4, r5, r6, sl, fp, pc}
   3241c:	mov	r0, r5
   32420:	mov	r1, r6
   32424:	bl	2ff78 <flatcc_builder_start_struct@@Base+0x4c>
   32428:	mov	r0, #0
   3242c:	sub	sp, fp, #16
   32430:	pop	{r4, r5, r6, sl, fp, pc}
   32434:	push	{r4, r5, r6, sl, fp, lr}
   32438:	add	fp, sp, #16
   3243c:	sub	sp, sp, #8
   32440:	mov	r4, r0
   32444:	ldr	r0, [r0, #124]	; 0x7c
   32448:	cmp	r0, #0
   3244c:	bne	324ec <flatcc_builder_get_emit_context@@Base+0x138>
   32450:	mov	r0, #0
   32454:	str	r0, [sp]
   32458:	mov	r6, #16
   3245c:	mov	r0, r4
   32460:	mov	r1, #6
   32464:	mov	r2, #0
   32468:	mov	r3, #16
   3246c:	bl	2f594 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   32470:	mvn	r5, #0
   32474:	cmp	r0, #0
   32478:	beq	324e0 <flatcc_builder_get_emit_context@@Base+0x12c>
   3247c:	add	r1, r4, #92	; 0x5c
   32480:	str	r6, [r4, #124]	; 0x7c
   32484:	ldr	r0, [r4, #40]	; 0x28
   32488:	ldr	ip, [r4, #48]	; 0x30
   3248c:	mov	r2, #5
   32490:	str	r2, [sp]
   32494:	mov	r6, #256	; 0x100
   32498:	mov	r2, #256	; 0x100
   3249c:	mov	r3, #1
   324a0:	blx	ip
   324a4:	cmp	r0, #0
   324a8:	bne	324e0 <flatcc_builder_get_emit_context@@Base+0x12c>
   324ac:	ldr	r0, [r4, #96]	; 0x60
   324b0:	mov	r1, r6
   324b4:	lsl	r6, r6, #1
   324b8:	cmp	r0, r1, lsl #1
   324bc:	bcs	324b0 <flatcc_builder_get_emit_context@@Base+0xfc>
   324c0:	lsr	r1, r1, #2
   324c4:	mvn	r0, #0
   324c8:	mov	r2, #1
   324cc:	add	r0, r0, #1
   324d0:	cmp	r1, r2, lsl r0
   324d4:	bhi	324cc <flatcc_builder_get_emit_context@@Base+0x118>
   324d8:	str	r0, [r4, #116]	; 0x74
   324dc:	mov	r5, #0
   324e0:	mov	r0, r5
   324e4:	sub	sp, fp, #16
   324e8:	pop	{r4, r5, r6, sl, fp, pc}
   324ec:	movw	r0, #5401	; 0x1519
   324f0:	movt	r0, #5
   324f4:	movw	r1, #943	; 0x3af
   324f8:	movt	r1, #5
   324fc:	movw	r3, #5416	; 0x1528
   32500:	movt	r3, #5
   32504:	movw	r2, #342	; 0x156
   32508:	bl	14ab4 <__assert_fail@plt>

0003250c <flatcc_emitter_recycle_page@@Base>:
   3250c:	ldr	ip, [r0]
   32510:	mvn	r2, #0
   32514:	cmp	ip, r1
   32518:	beq	32560 <flatcc_emitter_recycle_page@@Base+0x54>
   3251c:	ldr	r3, [r0, #4]
   32520:	cmp	r3, r1
   32524:	beq	32560 <flatcc_emitter_recycle_page@@Base+0x54>
   32528:	ldr	r2, [r1, #2944]	; 0xb80
   3252c:	ldr	r3, [r1, #2948]	; 0xb84
   32530:	str	r3, [r2, #2948]	; 0xb84
   32534:	ldr	r2, [r1, #2944]	; 0xb80
   32538:	ldr	r3, [r1, #2948]	; 0xb84
   3253c:	str	r2, [r3, #2944]	; 0xb80
   32540:	ldr	r2, [ip, #2948]	; 0xb84
   32544:	str	r2, [r1, #2948]	; 0xb84
   32548:	ldr	r0, [r0]
   3254c:	str	r0, [r1, #2944]	; 0xb80
   32550:	str	r1, [r2, #2944]	; 0xb80
   32554:	ldr	r0, [r1, #2944]	; 0xb80
   32558:	str	r1, [r0, #2948]	; 0xb84
   3255c:	mov	r2, #0
   32560:	mov	r0, r2
   32564:	bx	lr

00032568 <flatcc_emitter_reset@@Base>:
   32568:	push	{r4, sl, fp, lr}
   3256c:	add	fp, sp, #8
   32570:	mov	r4, r0
   32574:	ldr	r0, [r0]
   32578:	cmp	r0, #0
   3257c:	beq	32624 <flatcc_emitter_reset@@Base+0xbc>
   32580:	mov	r1, #1472	; 0x5c0
   32584:	add	r2, r0, #1472	; 0x5c0
   32588:	stmib	r4, {r0, r2}
   3258c:	str	r1, [r4, #12]
   32590:	str	r2, [r4, #16]
   32594:	str	r1, [r4, #20]
   32598:	movw	r1, #64064	; 0xfa40
   3259c:	movt	r1, #65535	; 0xffff
   325a0:	str	r1, [r0, #2952]	; 0xb88
   325a4:	ldr	r0, [r4, #32]
   325a8:	cmp	r0, #0
   325ac:	bne	325b8 <flatcc_emitter_reset@@Base+0x50>
   325b0:	ldr	r0, [r4, #24]
   325b4:	str	r0, [r4, #32]
   325b8:	add	r2, r4, #24
   325bc:	ldm	r2, {r0, r1, r2}
   325c0:	mov	r3, #0
   325c4:	str	r3, [r4, #24]
   325c8:	add	r2, r2, r2, lsl #1
   325cc:	lsr	r2, r2, #2
   325d0:	add	r0, r2, r0, lsr #2
   325d4:	str	r0, [r4, #32]
   325d8:	cmp	r1, r0, lsl #1
   325dc:	popls	{r4, sl, fp, pc}
   325e0:	ldr	r2, [r4]
   325e4:	ldr	r1, [r4, #4]
   325e8:	ldr	r0, [r1, #2944]	; 0xb80
   325ec:	cmp	r0, r2
   325f0:	beq	32624 <flatcc_emitter_reset@@Base+0xbc>
   325f4:	ldr	r2, [r0, #2944]	; 0xb80
   325f8:	str	r2, [r1, #2944]	; 0xb80
   325fc:	ldr	r1, [r0, #2944]	; 0xb80
   32600:	ldr	r2, [r4, #4]
   32604:	str	r2, [r1, #2948]	; 0xb84
   32608:	bl	14928 <free@plt>
   3260c:	ldr	r0, [r4, #28]
   32610:	ldr	r1, [r4, #32]
   32614:	sub	r0, r0, #2944	; 0xb80
   32618:	str	r0, [r4, #28]
   3261c:	cmp	r0, r1, lsl #1
   32620:	bhi	325e0 <flatcc_emitter_reset@@Base+0x78>
   32624:	pop	{r4, sl, fp, pc}

00032628 <flatcc_emitter_clear@@Base>:
   32628:	push	{r4, r5, r6, sl, fp, lr}
   3262c:	add	fp, sp, #16
   32630:	ldr	r5, [r0]
   32634:	cmp	r5, #0
   32638:	beq	32688 <flatcc_emitter_clear@@Base+0x60>
   3263c:	mov	r4, r0
   32640:	ldr	r0, [r5, #2948]	; 0xb84
   32644:	mov	r6, #0
   32648:	str	r6, [r0, #2944]	; 0xb80
   3264c:	ldr	r0, [r5, #2944]	; 0xb80
   32650:	cmp	r0, #0
   32654:	beq	32668 <flatcc_emitter_clear@@Base+0x40>
   32658:	mov	r5, r0
   3265c:	ldr	r0, [r0, #2948]	; 0xb84
   32660:	bl	14928 <free@plt>
   32664:	b	3264c <flatcc_emitter_clear@@Base+0x24>
   32668:	mov	r0, r5
   3266c:	bl	14928 <free@plt>
   32670:	vmov.i32	q8, #0	; 0x00000000
   32674:	add	r0, r4, #16
   32678:	vst1.32	{d16-d17}, [r0]
   3267c:	mov	r0, #32
   32680:	vst1.32	{d16-d17}, [r4], r0
   32684:	str	r6, [r4]
   32688:	pop	{r4, r5, r6, sl, fp, pc}

0003268c <flatcc_emitter@@Base>:
   3268c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32690:	add	fp, sp, #24
   32694:	mov	r4, r2
   32698:	mov	r5, r1
   3269c:	mov	r6, r0
   326a0:	ldr	r1, [r0, #24]
   326a4:	ldr	r0, [fp, #8]
   326a8:	add	r1, r1, r0
   326ac:	str	r1, [r6, #24]
   326b0:	mov	r1, r6
   326b4:	cmn	r3, #1
   326b8:	ble	326f8 <flatcc_emitter@@Base+0x6c>
   326bc:	ldr	r2, [r1, #20]!
   326c0:	cmp	r2, r0
   326c4:	bcs	32740 <flatcc_emitter@@Base+0xb4>
   326c8:	mov	r8, #0
   326cc:	cmp	r4, #0
   326d0:	beq	32790 <flatcc_emitter@@Base+0x104>
   326d4:	ldm	r5, {r1, r2}
   326d8:	mov	r0, r6
   326dc:	bl	32854 <flatcc_emitter@@Base+0x1c8>
   326e0:	cmp	r0, #0
   326e4:	bne	32734 <flatcc_emitter@@Base+0xa8>
   326e8:	subs	r4, r4, #1
   326ec:	add	r5, r5, #8
   326f0:	bne	326d4 <flatcc_emitter@@Base+0x48>
   326f4:	b	32790 <flatcc_emitter@@Base+0x104>
   326f8:	ldr	r2, [r1, #12]!
   326fc:	cmp	r2, r0
   32700:	bcs	32750 <flatcc_emitter@@Base+0xc4>
   32704:	add	r0, r5, r4, lsl #3
   32708:	sub	r5, r0, #4
   3270c:	rsb	r4, r4, #1
   32710:	cmp	r4, #1
   32714:	beq	32798 <flatcc_emitter@@Base+0x10c>
   32718:	ldmda	r5, {r1, r2}
   3271c:	mov	r0, r6
   32720:	bl	327a4 <flatcc_emitter@@Base+0x118>
   32724:	sub	r5, r5, #8
   32728:	add	r4, r4, #1
   3272c:	cmp	r0, #0
   32730:	beq	32710 <flatcc_emitter@@Base+0x84>
   32734:	mvn	r8, #0
   32738:	mov	r0, r8
   3273c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32740:	ldr	r7, [r6, #16]
   32744:	add	r3, r7, r0
   32748:	str	r3, [r6, #16]
   3274c:	b	3275c <flatcc_emitter@@Base+0xd0>
   32750:	ldr	r3, [r6, #8]
   32754:	sub	r7, r3, r0
   32758:	str	r7, [r6, #8]
   3275c:	sub	r0, r2, r0
   32760:	str	r0, [r1]
   32764:	mov	r8, #0
   32768:	cmp	r4, #0
   3276c:	beq	32790 <flatcc_emitter@@Base+0x104>
   32770:	ldm	r5, {r1, r2}
   32774:	mov	r0, r7
   32778:	bl	14934 <memcpy@plt>
   3277c:	ldr	r0, [r5, #4]
   32780:	add	r7, r7, r0
   32784:	add	r5, r5, #8
   32788:	subs	r4, r4, #1
   3278c:	bne	32770 <flatcc_emitter@@Base+0xe4>
   32790:	mov	r0, r8
   32794:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32798:	mov	r8, #0
   3279c:	mov	r0, r8
   327a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   327a4:	push	{r4, r5, r6, r7, fp, lr}
   327a8:	add	fp, sp, #16
   327ac:	cmp	r2, #0
   327b0:	beq	32840 <flatcc_emitter@@Base+0x1b4>
   327b4:	mov	r4, r2
   327b8:	mov	r5, r0
   327bc:	clz	r0, r2
   327c0:	lsr	r7, r0, #5
   327c4:	add	r6, r1, r2
   327c8:	ldr	r0, [r5, #12]
   327cc:	cmp	r4, r0
   327d0:	bls	32800 <flatcc_emitter@@Base+0x174>
   327d4:	cmp	r0, #0
   327d8:	bne	32808 <flatcc_emitter@@Base+0x17c>
   327dc:	mov	r0, r5
   327e0:	bl	329c0 <flatcc_emitter_copy_buffer@@Base+0xbc>
   327e4:	cmp	r0, #0
   327e8:	mov	r1, r0
   327ec:	movwne	r1, #1
   327f0:	orr	r1, r1, r7
   327f4:	tst	r1, #1
   327f8:	beq	327c8 <flatcc_emitter@@Base+0x13c>
   327fc:	b	32848 <flatcc_emitter@@Base+0x1bc>
   32800:	mov	r7, r4
   32804:	b	3280c <flatcc_emitter@@Base+0x180>
   32808:	mov	r7, r0
   3280c:	sub	r0, r0, r7
   32810:	str	r0, [r5, #12]
   32814:	ldr	r0, [r5, #8]
   32818:	sub	r0, r0, r7
   3281c:	str	r0, [r5, #8]
   32820:	sub	r6, r6, r7
   32824:	mov	r1, r6
   32828:	mov	r2, r7
   3282c:	bl	14934 <memcpy@plt>
   32830:	subs	r4, r4, r7
   32834:	clz	r0, r4
   32838:	lsr	r7, r0, #5
   3283c:	bne	327c8 <flatcc_emitter@@Base+0x13c>
   32840:	mov	r0, #0
   32844:	pop	{r4, r5, r6, r7, fp, pc}
   32848:	cmp	r0, #0
   3284c:	mvnne	r0, #0
   32850:	pop	{r4, r5, r6, r7, fp, pc}
   32854:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32858:	add	fp, sp, #24
   3285c:	cmp	r2, #0
   32860:	beq	328f0 <flatcc_emitter@@Base+0x264>
   32864:	mov	r4, r2
   32868:	mov	r8, r1
   3286c:	mov	r6, r0
   32870:	clz	r0, r2
   32874:	lsr	r5, r0, #5
   32878:	ldr	r7, [r6, #20]
   3287c:	cmp	r4, r7
   32880:	bls	328b0 <flatcc_emitter@@Base+0x224>
   32884:	cmp	r7, #0
   32888:	bne	328b4 <flatcc_emitter@@Base+0x228>
   3288c:	mov	r0, r6
   32890:	bl	32ab0 <flatcc_emitter_copy_buffer@@Base+0x1ac>
   32894:	cmp	r0, #0
   32898:	mov	r1, r0
   3289c:	movwne	r1, #1
   328a0:	orr	r1, r1, r5
   328a4:	tst	r1, #1
   328a8:	beq	32878 <flatcc_emitter@@Base+0x1ec>
   328ac:	b	328f8 <flatcc_emitter@@Base+0x26c>
   328b0:	mov	r7, r4
   328b4:	ldr	r0, [r6, #16]
   328b8:	mov	r1, r8
   328bc:	mov	r2, r7
   328c0:	bl	14934 <memcpy@plt>
   328c4:	ldr	r0, [r6, #16]
   328c8:	ldr	r1, [r6, #20]
   328cc:	add	r0, r0, r7
   328d0:	sub	r1, r1, r7
   328d4:	str	r0, [r6, #16]
   328d8:	str	r1, [r6, #20]
   328dc:	add	r8, r8, r7
   328e0:	subs	r4, r4, r7
   328e4:	clz	r0, r4
   328e8:	lsr	r5, r0, #5
   328ec:	bne	32878 <flatcc_emitter@@Base+0x1ec>
   328f0:	mov	r0, #0
   328f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   328f8:	cmp	r0, #0
   328fc:	mvnne	r0, #0
   32900:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00032904 <flatcc_emitter_copy_buffer@@Base>:
   32904:	push	{r4, r5, r6, sl, fp, lr}
   32908:	add	fp, sp, #16
   3290c:	mov	r3, r2
   32910:	ldr	r2, [r0, #24]
   32914:	mov	r5, #0
   32918:	cmp	r2, r3
   3291c:	bhi	329a4 <flatcc_emitter_copy_buffer@@Base+0xa0>
   32920:	mov	r4, r0
   32924:	ldr	r0, [r0]
   32928:	cmp	r0, #0
   3292c:	beq	329a4 <flatcc_emitter_copy_buffer@@Base+0xa0>
   32930:	mov	r6, r1
   32934:	ldr	r1, [r4, #4]
   32938:	cmp	r0, r1
   3293c:	beq	329ac <flatcc_emitter_copy_buffer@@Base+0xa8>
   32940:	ldr	r1, [r4, #8]
   32944:	ldr	r0, [r4, #12]
   32948:	rsb	r5, r0, #2944	; 0xb80
   3294c:	mov	r0, r6
   32950:	mov	r2, r5
   32954:	bl	14934 <memcpy@plt>
   32958:	add	r5, r6, r5
   3295c:	ldm	r4, {r0, r1}
   32960:	ldr	r6, [r0, #2944]	; 0xb80
   32964:	cmp	r6, r1
   32968:	beq	32990 <flatcc_emitter_copy_buffer@@Base+0x8c>
   3296c:	mov	r0, r5
   32970:	mov	r1, r6
   32974:	mov	r2, #2944	; 0xb80
   32978:	bl	14934 <memcpy@plt>
   3297c:	add	r5, r5, #2944	; 0xb80
   32980:	ldr	r6, [r6, #2944]	; 0xb80
   32984:	ldr	r0, [r4, #4]
   32988:	cmp	r6, r0
   3298c:	bne	3296c <flatcc_emitter_copy_buffer@@Base+0x68>
   32990:	ldr	r0, [r4, #20]
   32994:	rsb	r2, r0, #2944	; 0xb80
   32998:	mov	r0, r5
   3299c:	mov	r1, r6
   329a0:	bl	14934 <memcpy@plt>
   329a4:	mov	r0, r5
   329a8:	pop	{r4, r5, r6, sl, fp, pc}
   329ac:	ldr	r1, [r4, #8]
   329b0:	mov	r0, r6
   329b4:	bl	14934 <memcpy@plt>
   329b8:	mov	r0, r6
   329bc:	pop	{r4, r5, r6, sl, fp, pc}
   329c0:	push	{r4, r5, fp, lr}
   329c4:	add	fp, sp, #8
   329c8:	mov	r4, r0
   329cc:	ldr	r5, [r0]
   329d0:	cmp	r5, #0
   329d4:	beq	329fc <flatcc_emitter_copy_buffer@@Base+0xf8>
   329d8:	ldr	r0, [r5, #2948]	; 0xb84
   329dc:	ldr	r1, [r4, #4]
   329e0:	cmp	r0, r1
   329e4:	beq	329fc <flatcc_emitter_copy_buffer@@Base+0xf8>
   329e8:	ldr	r1, [r5, #2952]	; 0xb88
   329ec:	sub	r1, r1, #2944	; 0xb80
   329f0:	str	r1, [r0, #2952]	; 0xb88
   329f4:	ldr	r0, [r5, #2948]	; 0xb84
   329f8:	b	32a38 <flatcc_emitter_copy_buffer@@Base+0x134>
   329fc:	movw	r0, #2956	; 0xb8c
   32a00:	bl	14994 <malloc@plt>
   32a04:	cmp	r0, #0
   32a08:	beq	32a68 <flatcc_emitter_copy_buffer@@Base+0x164>
   32a0c:	ldr	r1, [r4, #28]
   32a10:	add	r1, r1, #2944	; 0xb80
   32a14:	str	r1, [r4, #28]
   32a18:	cmp	r5, #0
   32a1c:	beq	32a70 <flatcc_emitter_copy_buffer@@Base+0x16c>
   32a20:	ldm	r4, {r1, r2}
   32a24:	str	r1, [r0, #2944]	; 0xb80
   32a28:	str	r2, [r0, #2948]	; 0xb84
   32a2c:	str	r0, [r1, #2948]	; 0xb84
   32a30:	ldr	r1, [r4, #4]
   32a34:	str	r0, [r1, #2944]	; 0xb80
   32a38:	str	r0, [r4]
   32a3c:	mov	r0, #2944	; 0xb80
   32a40:	ldr	r1, [r4]
   32a44:	add	r2, r1, #2944	; 0xb80
   32a48:	str	r2, [r4, #8]
   32a4c:	str	r0, [r4, #12]
   32a50:	ldr	r0, [r1, #2944]	; 0xb80
   32a54:	ldr	r0, [r0, #2952]	; 0xb88
   32a58:	sub	r0, r0, #2944	; 0xb80
   32a5c:	str	r0, [r1, #2952]	; 0xb88
   32a60:	mov	r0, #0
   32a64:	pop	{r4, r5, fp, pc}
   32a68:	mvn	r0, #0
   32a6c:	pop	{r4, r5, fp, pc}
   32a70:	str	r0, [r4, #4]
   32a74:	str	r0, [r4]
   32a78:	mov	r1, #1472	; 0x5c0
   32a7c:	str	r1, [r4, #20]
   32a80:	str	r1, [r4, #12]
   32a84:	ldr	r1, [r4]
   32a88:	add	r1, r1, #1472	; 0x5c0
   32a8c:	str	r1, [r4, #16]
   32a90:	str	r1, [r4, #8]
   32a94:	movw	r1, #64064	; 0xfa40
   32a98:	movt	r1, #65535	; 0xffff
   32a9c:	str	r0, [r0, #2944]	; 0xb80
   32aa0:	str	r0, [r0, #2948]	; 0xb84
   32aa4:	str	r1, [r0, #2952]	; 0xb88
   32aa8:	mov	r0, #0
   32aac:	pop	{r4, r5, fp, pc}
   32ab0:	push	{r4, r5, fp, lr}
   32ab4:	add	fp, sp, #8
   32ab8:	mov	r4, r0
   32abc:	ldr	r5, [r0, #4]
   32ac0:	cmp	r5, #0
   32ac4:	beq	32ad8 <flatcc_emitter_copy_buffer@@Base+0x1d4>
   32ac8:	ldr	r0, [r5, #2944]	; 0xb80
   32acc:	ldr	r1, [r4]
   32ad0:	cmp	r0, r1
   32ad4:	bne	32b10 <flatcc_emitter_copy_buffer@@Base+0x20c>
   32ad8:	movw	r0, #2956	; 0xb8c
   32adc:	bl	14994 <malloc@plt>
   32ae0:	cmp	r0, #0
   32ae4:	beq	32b3c <flatcc_emitter_copy_buffer@@Base+0x238>
   32ae8:	ldr	r1, [r4, #28]
   32aec:	add	r1, r1, #2944	; 0xb80
   32af0:	str	r1, [r4, #28]
   32af4:	cmp	r5, #0
   32af8:	beq	32b44 <flatcc_emitter_copy_buffer@@Base+0x240>
   32afc:	ldr	r1, [r4]
   32b00:	str	r1, [r0, #2944]	; 0xb80
   32b04:	str	r5, [r0, #2948]	; 0xb84
   32b08:	str	r0, [r1, #2948]	; 0xb84
   32b0c:	str	r0, [r5, #2944]	; 0xb80
   32b10:	str	r0, [r4, #4]
   32b14:	mov	r0, #2944	; 0xb80
   32b18:	ldr	r1, [r4, #4]
   32b1c:	str	r1, [r4, #16]
   32b20:	str	r0, [r4, #20]
   32b24:	ldr	r0, [r1, #2948]	; 0xb84
   32b28:	ldr	r0, [r0, #2952]	; 0xb88
   32b2c:	add	r0, r0, #2944	; 0xb80
   32b30:	str	r0, [r1, #2952]	; 0xb88
   32b34:	mov	r0, #0
   32b38:	pop	{r4, r5, fp, pc}
   32b3c:	mvn	r0, #0
   32b40:	pop	{r4, r5, fp, pc}
   32b44:	str	r0, [r4, #4]
   32b48:	str	r0, [r4]
   32b4c:	mov	r1, #1472	; 0x5c0
   32b50:	str	r1, [r4, #20]
   32b54:	str	r1, [r4, #12]
   32b58:	ldr	r1, [r4]
   32b5c:	add	r1, r1, #1472	; 0x5c0
   32b60:	str	r1, [r4, #16]
   32b64:	str	r1, [r4, #8]
   32b68:	movw	r1, #64064	; 0xfa40
   32b6c:	movt	r1, #65535	; 0xffff
   32b70:	str	r0, [r0, #2944]	; 0xb80
   32b74:	str	r0, [r0, #2948]	; 0xb84
   32b78:	str	r1, [r0, #2952]	; 0xb88
   32b7c:	mov	r0, #0
   32b80:	pop	{r4, r5, fp, pc}

00032b84 <cmetrohash64_1@@Base>:
   32b84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32b88:	add	fp, sp, #28
   32b8c:	sub	sp, sp, #52	; 0x34
   32b90:	mov	r4, r0
   32b94:	ldr	r0, [fp, #8]
   32b98:	movw	r5, #37345	; 0x91e1
   32b9c:	movt	r5, #51258	; 0xc83a
   32ba0:	mov	r1, r2
   32ba4:	mov	r7, r3
   32ba8:	umlal	r1, r7, r0, r5
   32bac:	movw	r0, #23867	; 0x5d3b
   32bb0:	movt	r0, #24802	; 0x60e2
   32bb4:	movw	r6, #24283	; 0x5edb
   32bb8:	movt	r6, #44806	; 0xaf06
   32bbc:	adds	r9, r1, r6
   32bc0:	adc	r6, r7, r0
   32bc4:	add	sl, r4, r2
   32bc8:	movw	r7, #49211	; 0xc03b
   32bcc:	movt	r7, #31710	; 0x7bde
   32bd0:	movw	r8, #56283	; 0xdbdb
   32bd4:	movt	r8, #34376	; 0x8648
   32bd8:	subs	r0, r2, #32
   32bdc:	sbcs	r0, r3, #0
   32be0:	bcc	32ea4 <cmetrohash64_1@@Base+0x320>
   32be4:	str	sl, [sp, #12]
   32be8:	sub	r0, sl, #32
   32bec:	str	r0, [sp, #24]
   32bf0:	mov	r5, r6
   32bf4:	mov	r3, r9
   32bf8:	mov	r7, r6
   32bfc:	mov	r6, r9
   32c00:	str	r5, [fp, #-36]	; 0xffffffdc
   32c04:	str	r9, [fp, #-32]	; 0xffffffe0
   32c08:	mov	r8, r5
   32c0c:	str	r9, [sp, #20]
   32c10:	str	r5, [sp, #8]
   32c14:	str	r3, [sp, #40]	; 0x28
   32c18:	str	r7, [sp, #36]	; 0x24
   32c1c:	mov	r0, r4
   32c20:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   32c24:	movw	r2, #37345	; 0x91e1
   32c28:	movt	r2, #51258	; 0xc83a
   32c2c:	mov	r3, r2
   32c30:	umull	r0, r2, r0, r2
   32c34:	mla	r1, r1, r3, r2
   32c38:	adds	r0, r0, r9
   32c3c:	adc	r1, r1, r5
   32c40:	mov	r2, #29
   32c44:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32c48:	mov	r5, r6
   32c4c:	adds	r6, r0, r6
   32c50:	ldr	r7, [fp, #-36]	; 0xffffffdc
   32c54:	adc	r0, r1, r7
   32c58:	str	r0, [sp, #32]
   32c5c:	add	r0, r4, #8
   32c60:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   32c64:	movw	r2, #56283	; 0xdbdb
   32c68:	movt	r2, #34376	; 0x8648
   32c6c:	mov	r3, r2
   32c70:	umull	r0, r2, r0, r2
   32c74:	mla	r1, r1, r3, r2
   32c78:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32c7c:	adds	r0, r0, r2
   32c80:	adc	r1, r1, r8
   32c84:	mov	r2, #29
   32c88:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32c8c:	str	r0, [fp, #-32]	; 0xffffffe0
   32c90:	mov	sl, r1
   32c94:	add	r0, r4, #16
   32c98:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   32c9c:	movw	r2, #49211	; 0xc03b
   32ca0:	movt	r2, #31710	; 0x7bde
   32ca4:	mov	r3, r2
   32ca8:	umull	r0, r2, r0, r2
   32cac:	mla	r1, r1, r3, r2
   32cb0:	adds	r0, r0, r5
   32cb4:	adc	r1, r1, r7
   32cb8:	mov	r2, #29
   32cbc:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32cc0:	mov	r9, r6
   32cc4:	adds	r0, r0, r6
   32cc8:	str	r0, [sp, #28]
   32ccc:	ldr	r0, [sp, #32]
   32cd0:	mov	r5, r0
   32cd4:	adc	r0, r1, r0
   32cd8:	str	r0, [fp, #-36]	; 0xffffffdc
   32cdc:	ldr	r8, [sp, #40]	; 0x28
   32ce0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32ce4:	adds	r7, r0, r8
   32ce8:	ldr	r6, [sp, #36]	; 0x24
   32cec:	adc	sl, sl, r6
   32cf0:	add	r0, r4, #24
   32cf4:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   32cf8:	movw	r2, #28837	; 0x70a5
   32cfc:	movt	r2, #12120	; 0x2f58
   32d00:	mov	r3, r2
   32d04:	umull	r0, r2, r0, r2
   32d08:	mla	r1, r1, r3, r2
   32d0c:	adds	r0, r0, r8
   32d10:	adc	r1, r1, r6
   32d14:	mov	r2, #29
   32d18:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32d1c:	str	r7, [fp, #-32]	; 0xffffffe0
   32d20:	adds	r3, r0, r7
   32d24:	mov	r8, sl
   32d28:	adc	r7, r1, sl
   32d2c:	ldr	r6, [sp, #28]
   32d30:	add	r4, r4, #32
   32d34:	ldr	r0, [sp, #24]
   32d38:	cmp	r4, r0
   32d3c:	bls	32c14 <cmetrohash64_1@@Base+0x90>
   32d40:	str	r9, [sp, #16]
   32d44:	adds	r0, r3, r9
   32d48:	mov	sl, r5
   32d4c:	adc	r1, r7, r5
   32d50:	movw	r2, #37345	; 0x91e1
   32d54:	movt	r2, #51258	; 0xc83a
   32d58:	mov	r5, r2
   32d5c:	umull	r0, r2, r0, r2
   32d60:	mla	r1, r1, r5, r2
   32d64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32d68:	adds	r0, r0, r2
   32d6c:	mov	r9, r2
   32d70:	adc	r1, r1, r8
   32d74:	mov	r5, r8
   32d78:	str	r8, [sp, #4]
   32d7c:	mov	r2, #33	; 0x21
   32d80:	str	r3, [sp, #40]	; 0x28
   32d84:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32d88:	movw	r2, #56283	; 0xdbdb
   32d8c:	movt	r2, #34376	; 0x8648
   32d90:	mov	r3, r2
   32d94:	umull	r0, r2, r0, r2
   32d98:	mla	r1, r1, r3, r2
   32d9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32da0:	eor	r2, r1, r2
   32da4:	eor	r8, r0, r6
   32da8:	adds	r0, r8, r9
   32dac:	adc	r1, r2, r5
   32db0:	mov	r9, r2
   32db4:	umull	r0, r2, r0, r3
   32db8:	mla	r1, r1, r3, r2
   32dbc:	ldr	r6, [sp, #16]
   32dc0:	adds	r0, r0, r6
   32dc4:	adc	r1, r1, sl
   32dc8:	mov	r2, #33	; 0x21
   32dcc:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32dd0:	movw	r5, #37345	; 0x91e1
   32dd4:	movt	r5, #51258	; 0xc83a
   32dd8:	umull	r0, r2, r0, r5
   32ddc:	mla	r1, r1, r5, r2
   32de0:	eor	r7, r1, r7
   32de4:	adds	r1, r8, r6
   32de8:	adc	r2, r9, sl
   32dec:	umull	r1, r3, r1, r5
   32df0:	mla	r2, r2, r5, r3
   32df4:	ldr	r3, [sp, #40]	; 0x28
   32df8:	eor	r6, r0, r3
   32dfc:	adds	r0, r1, r6
   32e00:	adc	r1, r2, r7
   32e04:	mov	r2, #33	; 0x21
   32e08:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32e0c:	str	r0, [fp, #-36]	; 0xffffffdc
   32e10:	str	r1, [sp, #40]	; 0x28
   32e14:	ldr	r5, [fp, #-32]	; 0xffffffe0
   32e18:	adds	r0, r6, r5
   32e1c:	ldr	r6, [sp, #4]
   32e20:	adc	r1, r7, r6
   32e24:	movw	r7, #56283	; 0xdbdb
   32e28:	movt	r7, #34376	; 0x8648
   32e2c:	umull	r0, r2, r0, r7
   32e30:	mla	r1, r1, r7, r2
   32e34:	adds	r0, r0, r8
   32e38:	adc	r1, r1, r9
   32e3c:	mov	r2, #33	; 0x21
   32e40:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32e44:	movw	ip, #37345	; 0x91e1
   32e48:	movt	ip, #51258	; 0xc83a
   32e4c:	umull	lr, r2, r0, ip
   32e50:	mla	r1, r1, ip, r2
   32e54:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32e58:	umull	r2, r3, r2, r7
   32e5c:	mov	r8, r7
   32e60:	ldr	r0, [sp, #40]	; 0x28
   32e64:	mla	r3, r0, r7, r3
   32e68:	eor	r6, r6, sl
   32e6c:	eor	r3, r6, r3
   32e70:	eor	r1, r3, r1
   32e74:	ldr	r3, [sp, #16]
   32e78:	eor	r3, r5, r3
   32e7c:	eor	r2, r3, r2
   32e80:	eor	r0, r2, lr
   32e84:	ldr	r9, [sp, #20]
   32e88:	adds	r9, r0, r9
   32e8c:	ldr	r6, [sp, #8]
   32e90:	adc	r6, r1, r6
   32e94:	mov	r5, ip
   32e98:	ldr	sl, [sp, #12]
   32e9c:	movw	r7, #49211	; 0xc03b
   32ea0:	movt	r7, #31710	; 0x7bde
   32ea4:	sub	r0, sl, r4
   32ea8:	cmp	r0, #16
   32eac:	blt	32fc4 <cmetrohash64_1@@Base+0x440>
   32eb0:	mov	r0, r4
   32eb4:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   32eb8:	umull	r0, r2, r0, r5
   32ebc:	mla	r1, r1, r5, r2
   32ec0:	adds	r0, r0, r9
   32ec4:	adc	r1, r1, r6
   32ec8:	mov	r2, #33	; 0x21
   32ecc:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32ed0:	str	r4, [fp, #-32]	; 0xffffffe0
   32ed4:	str	r0, [fp, #-36]	; 0xffffffdc
   32ed8:	str	r1, [sp, #40]	; 0x28
   32edc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32ee0:	add	r0, r0, #8
   32ee4:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   32ee8:	umull	r0, r2, r0, r8
   32eec:	mla	r1, r1, r8, r2
   32ef0:	adds	r0, r0, r9
   32ef4:	adc	r1, r1, r6
   32ef8:	mov	r2, #33	; 0x21
   32efc:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32f00:	str	r9, [sp, #20]
   32f04:	mov	r5, r0
   32f08:	str	r1, [sp, #36]	; 0x24
   32f0c:	umull	r4, r0, r0, r7
   32f10:	str	r4, [sp, #32]
   32f14:	mla	r9, r1, r7, r0
   32f18:	movw	r1, #18043	; 0x467b
   32f1c:	movt	r1, #12846	; 0x322e
   32f20:	ldr	r7, [fp, #-36]	; 0xffffffdc
   32f24:	umull	r0, r2, r7, r1
   32f28:	movw	r3, #42186	; 0xa4ca
   32f2c:	movt	r3, #26887	; 0x6907
   32f30:	mla	r2, r7, r3, r2
   32f34:	ldr	r7, [sp, #40]	; 0x28
   32f38:	mla	r1, r7, r1, r2
   32f3c:	mov	r2, #35	; 0x23
   32f40:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32f44:	adds	r0, r0, r4
   32f48:	adc	r1, r1, r9
   32f4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32f50:	umull	r2, r3, r2, r8
   32f54:	mla	r3, r7, r8, r3
   32f58:	mov	r7, sl
   32f5c:	eor	sl, r1, r3
   32f60:	eor	r4, r0, r2
   32f64:	movw	r1, #46599	; 0xb607
   32f68:	movt	r1, #13299	; 0x33f3
   32f6c:	umull	r0, r2, r5, r1
   32f70:	movw	r3, #45150	; 0xb05e
   32f74:	movt	r3, #5864	; 0x16e8
   32f78:	mla	r2, r5, r3, r2
   32f7c:	ldr	r5, [sp, #20]
   32f80:	ldr	r3, [sp, #36]	; 0x24
   32f84:	mla	r1, r3, r1, r2
   32f88:	mov	r2, #35	; 0x23
   32f8c:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   32f90:	adds	r0, r4, r0
   32f94:	ldr	r4, [fp, #-32]	; 0xffffffe0
   32f98:	adc	r1, sl, r1
   32f9c:	mov	sl, r7
   32fa0:	eor	r1, r1, r9
   32fa4:	ldr	r2, [sp, #32]
   32fa8:	eor	r0, r0, r2
   32fac:	adds	r5, r0, r5
   32fb0:	adc	r6, r1, r6
   32fb4:	add	r4, r4, #16
   32fb8:	movw	r7, #28837	; 0x70a5
   32fbc:	movt	r7, #12120	; 0x2f58
   32fc0:	b	32fd0 <cmetrohash64_1@@Base+0x44c>
   32fc4:	movw	r7, #28837	; 0x70a5
   32fc8:	movt	r7, #12120	; 0x2f58
   32fcc:	mov	r5, r9
   32fd0:	sub	r0, sl, r4
   32fd4:	cmp	r0, #8
   32fd8:	blt	33018 <cmetrohash64_1@@Base+0x494>
   32fdc:	mov	r0, r4
   32fe0:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   32fe4:	umull	r0, r2, r0, r7
   32fe8:	mla	r1, r1, r7, r2
   32fec:	adds	r5, r0, r5
   32ff0:	adc	r6, r1, r6
   32ff4:	mov	r0, r5
   32ff8:	mov	r1, r6
   32ffc:	mov	r2, #33	; 0x21
   33000:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   33004:	umull	r0, r2, r0, r8
   33008:	mla	r1, r1, r8, r2
   3300c:	eor	r6, r6, r1
   33010:	eor	r5, r5, r0
   33014:	add	r4, r4, #8
   33018:	sub	r0, sl, r4
   3301c:	cmp	r0, #4
   33020:	blt	33060 <cmetrohash64_1@@Base+0x4dc>
   33024:	mov	r0, r4
   33028:	bl	331ac <cmetrohash64_1@@Base+0x628>
   3302c:	umull	r0, r2, r0, r7
   33030:	mla	r1, r1, r7, r2
   33034:	adds	r5, r0, r5
   33038:	adc	r6, r1, r6
   3303c:	mov	r0, r5
   33040:	mov	r1, r6
   33044:	mov	r2, #15
   33048:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   3304c:	umull	r0, r2, r0, r8
   33050:	mla	r1, r1, r8, r2
   33054:	eor	r6, r6, r1
   33058:	eor	r5, r5, r0
   3305c:	add	r4, r4, #4
   33060:	sub	r0, sl, r4
   33064:	cmp	r0, #2
   33068:	blt	330a8 <cmetrohash64_1@@Base+0x524>
   3306c:	mov	r0, r4
   33070:	bl	331b8 <cmetrohash64_1@@Base+0x634>
   33074:	umull	r0, r2, r0, r7
   33078:	mla	r1, r1, r7, r2
   3307c:	adds	r5, r0, r5
   33080:	adc	r6, r1, r6
   33084:	mov	r0, r5
   33088:	mov	r1, r6
   3308c:	mov	r2, #13
   33090:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   33094:	umull	r0, r2, r0, r8
   33098:	mla	r1, r1, r8, r2
   3309c:	eor	r6, r6, r1
   330a0:	eor	r5, r5, r0
   330a4:	add	r4, r4, #2
   330a8:	ldr	r9, [fp, #12]
   330ac:	sub	r0, sl, r4
   330b0:	cmp	r0, #1
   330b4:	blt	330f0 <cmetrohash64_1@@Base+0x56c>
   330b8:	mov	r0, r4
   330bc:	bl	331cc <cmetrohash64_1@@Base+0x648>
   330c0:	umull	r0, r2, r0, r7
   330c4:	mla	r1, r1, r7, r2
   330c8:	adds	r4, r0, r5
   330cc:	adc	r5, r1, r6
   330d0:	mov	r0, r4
   330d4:	mov	r1, r5
   330d8:	mov	r2, #25
   330dc:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   330e0:	umull	r0, r2, r0, r8
   330e4:	mla	r1, r1, r8, r2
   330e8:	eor	r6, r5, r1
   330ec:	eor	r5, r4, r0
   330f0:	mov	r0, r5
   330f4:	mov	r1, r6
   330f8:	mov	r2, #33	; 0x21
   330fc:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   33100:	eor	r1, r1, r6
   33104:	eor	r0, r0, r5
   33108:	movw	r2, #37345	; 0x91e1
   3310c:	movt	r2, #51258	; 0xc83a
   33110:	umull	r4, r0, r0, r2
   33114:	mla	r5, r1, r2, r0
   33118:	mov	r0, r4
   3311c:	mov	r1, r5
   33120:	mov	r2, #33	; 0x21
   33124:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   33128:	eor	r1, r5, r1
   3312c:	str	r1, [r9, #4]
   33130:	eor	r0, r4, r0
   33134:	str	r0, [r9]
   33138:	sub	sp, fp, #28
   3313c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33140:	ldr	r2, [r0]
   33144:	ldr	r1, [r0, #4]
   33148:	mov	r0, r2
   3314c:	bx	lr
   33150:	push	{r4, r5, fp, lr}
   33154:	add	fp, sp, #8
   33158:	lsr	ip, r0, r2
   3315c:	rsb	r3, r2, #32
   33160:	orr	ip, ip, r1, lsl r3
   33164:	subs	lr, r2, #32
   33168:	lsrpl	ip, r1, lr
   3316c:	rsb	r4, r2, #64	; 0x40
   33170:	lsl	r5, r0, r4
   33174:	cmp	r3, #0
   33178:	movwpl	r5, #0
   3317c:	orr	ip, r5, ip
   33180:	rsb	r5, r4, #32
   33184:	lsr	r5, r0, r5
   33188:	orr	r4, r5, r1, lsl r4
   3318c:	cmp	r3, #0
   33190:	lslpl	r4, r0, r3
   33194:	lsr	r0, r1, r2
   33198:	cmp	lr, #0
   3319c:	movwpl	r0, #0
   331a0:	orr	r1, r4, r0
   331a4:	mov	r0, ip
   331a8:	pop	{r4, r5, fp, pc}
   331ac:	ldr	r0, [r0]
   331b0:	mov	r1, #0
   331b4:	bx	lr
   331b8:	ldrb	r1, [r0]
   331bc:	ldrb	r0, [r0, #1]
   331c0:	orr	r0, r1, r0, lsl #8
   331c4:	mov	r1, #0
   331c8:	bx	lr
   331cc:	ldrb	r0, [r0]
   331d0:	mov	r1, #0
   331d4:	bx	lr

000331d8 <cmetrohash64_2@@Base>:
   331d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   331dc:	add	fp, sp, #28
   331e0:	sub	sp, sp, #44	; 0x2c
   331e4:	mov	r4, r0
   331e8:	ldr	r0, [fp, #8]
   331ec:	movw	r6, #6389	; 0x18f5
   331f0:	movt	r6, #54992	; 0xd6d0
   331f4:	mov	r1, r2
   331f8:	mov	r7, r3
   331fc:	umlal	r1, r7, r0, r6
   33200:	movw	r0, #13310	; 0x33fe
   33204:	movt	r0, #21180	; 0x52bc
   33208:	movw	r6, #52149	; 0xcbb5
   3320c:	movt	r6, #56292	; 0xdbe4
   33210:	adds	r5, r1, r6
   33214:	adc	sl, r7, r0
   33218:	add	r6, r4, r2
   3321c:	movw	r8, #23337	; 0x5b29
   33220:	movt	r8, #12476	; 0x30bc
   33224:	movw	r7, #12225	; 0x2fc1
   33228:	movt	r7, #25241	; 0x6299
   3322c:	movw	r1, #827	; 0x33b
   33230:	movt	r1, #41642	; 0xa2aa
   33234:	subs	r0, r2, #32
   33238:	sbcs	r0, r3, #0
   3323c:	str	r6, [sp, #12]
   33240:	bcc	33500 <cmetrohash64_2@@Base+0x328>
   33244:	sub	r0, r6, #32
   33248:	str	r0, [sp, #24]
   3324c:	mov	r2, r5
   33250:	mov	r3, sl
   33254:	mov	r0, sl
   33258:	mov	r6, r5
   3325c:	mov	r8, sl
   33260:	mov	sl, r5
   33264:	mov	r7, r0
   33268:	str	r5, [sp, #16]
   3326c:	str	r5, [sp, #36]	; 0x24
   33270:	str	r0, [sp, #20]
   33274:	str	r0, [fp, #-32]	; 0xffffffe0
   33278:	str	r3, [sp, #32]
   3327c:	mov	r0, r4
   33280:	mov	r9, r2
   33284:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   33288:	movw	r2, #6389	; 0x18f5
   3328c:	movt	r2, #54992	; 0xd6d0
   33290:	mov	r3, r2
   33294:	umull	r0, r2, r0, r2
   33298:	mla	r1, r1, r3, r2
   3329c:	ldr	r2, [sp, #36]	; 0x24
   332a0:	adds	r0, r0, r2
   332a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   332a8:	adc	r1, r1, r2
   332ac:	mov	r2, #29
   332b0:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   332b4:	mov	r5, r6
   332b8:	adds	r6, r0, r6
   332bc:	adc	r0, r1, r8
   332c0:	str	r0, [fp, #-32]	; 0xffffffe0
   332c4:	add	r0, r4, #8
   332c8:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   332cc:	movw	r2, #827	; 0x33b
   332d0:	movt	r2, #41642	; 0xa2aa
   332d4:	mov	r3, r2
   332d8:	umull	r0, r2, r0, r2
   332dc:	mla	r1, r1, r3, r2
   332e0:	adds	r0, r0, sl
   332e4:	adc	r1, r1, r7
   332e8:	mov	r2, #29
   332ec:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   332f0:	mov	r7, r0
   332f4:	str	r1, [sp, #28]
   332f8:	add	r0, r4, #16
   332fc:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   33300:	movw	r2, #12225	; 0x2fc1
   33304:	movt	r2, #25241	; 0x6299
   33308:	mov	r3, r2
   3330c:	umull	r0, r2, r0, r2
   33310:	mla	r1, r1, r3, r2
   33314:	adds	r0, r0, r5
   33318:	adc	r1, r1, r8
   3331c:	mov	r2, #29
   33320:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   33324:	str	r6, [sp, #36]	; 0x24
   33328:	adds	r6, r0, r6
   3332c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33330:	adc	r8, r1, r0
   33334:	adds	sl, r7, r9
   33338:	ldr	r7, [sp, #32]
   3333c:	ldr	r0, [sp, #28]
   33340:	adc	r5, r0, r7
   33344:	add	r0, r4, #24
   33348:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   3334c:	movw	r2, #23337	; 0x5b29
   33350:	movt	r2, #12476	; 0x30bc
   33354:	mov	r3, r2
   33358:	umull	r0, r2, r0, r2
   3335c:	mla	r1, r1, r3, r2
   33360:	adds	r0, r0, r9
   33364:	adc	r1, r1, r7
   33368:	mov	r7, sl
   3336c:	mov	r2, #29
   33370:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   33374:	adds	r2, r0, sl
   33378:	mov	r7, r5
   3337c:	adc	r3, r1, r5
   33380:	add	r4, r4, #32
   33384:	ldr	r0, [sp, #24]
   33388:	cmp	r4, r0
   3338c:	bls	33278 <cmetrohash64_2@@Base+0xa0>
   33390:	ldr	r0, [sp, #36]	; 0x24
   33394:	adds	r0, r2, r0
   33398:	ldr	r9, [fp, #-32]	; 0xffffffe0
   3339c:	adc	r1, r3, r9
   333a0:	str	r2, [sp, #28]
   333a4:	movw	r2, #6389	; 0x18f5
   333a8:	movt	r2, #54992	; 0xd6d0
   333ac:	mov	r5, r2
   333b0:	umull	r0, r2, r0, r2
   333b4:	mla	r1, r1, r5, r2
   333b8:	adds	r0, r0, sl
   333bc:	str	sl, [sp, #4]
   333c0:	adc	r1, r1, r7
   333c4:	mov	r5, r7
   333c8:	str	r7, [sp, #8]
   333cc:	mov	r2, #30
   333d0:	str	r3, [sp, #32]
   333d4:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   333d8:	movw	r2, #827	; 0x33b
   333dc:	movt	r2, #41642	; 0xa2aa
   333e0:	mov	r3, r2
   333e4:	umull	r0, r2, r0, r2
   333e8:	mla	r1, r1, r3, r2
   333ec:	eor	r8, r1, r8
   333f0:	eor	r1, r0, r6
   333f4:	adds	r0, r1, sl
   333f8:	mov	r7, r1
   333fc:	str	r1, [sp, #24]
   33400:	adc	r1, r8, r5
   33404:	umull	r0, r2, r0, r3
   33408:	mla	r1, r1, r3, r2
   3340c:	ldr	r6, [sp, #36]	; 0x24
   33410:	adds	r0, r0, r6
   33414:	adc	r1, r1, r9
   33418:	mov	r2, #30
   3341c:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   33420:	movw	r5, #6389	; 0x18f5
   33424:	movt	r5, #54992	; 0xd6d0
   33428:	umull	r0, r2, r0, r5
   3342c:	mla	r1, r1, r5, r2
   33430:	ldr	r2, [sp, #32]
   33434:	eor	sl, r1, r2
   33438:	adds	r1, r7, r6
   3343c:	adc	r2, r8, r9
   33440:	umull	r1, r3, r1, r5
   33444:	mla	r2, r2, r5, r3
   33448:	ldr	r3, [sp, #28]
   3344c:	eor	r6, r0, r3
   33450:	adds	r0, r1, r6
   33454:	adc	r1, r2, sl
   33458:	mov	r2, #30
   3345c:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   33460:	str	r0, [sp, #32]
   33464:	str	r1, [sp, #28]
   33468:	ldr	r9, [sp, #4]
   3346c:	adds	r0, r6, r9
   33470:	ldr	r7, [sp, #8]
   33474:	adc	r1, sl, r7
   33478:	movw	r6, #827	; 0x33b
   3347c:	movt	r6, #41642	; 0xa2aa
   33480:	umull	r0, r2, r0, r6
   33484:	mla	r1, r1, r6, r2
   33488:	ldr	r2, [sp, #24]
   3348c:	adds	r0, r0, r2
   33490:	adc	r1, r1, r8
   33494:	mov	r2, #30
   33498:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   3349c:	umull	r0, r2, r0, r5
   334a0:	mla	r1, r1, r5, r2
   334a4:	ldr	r2, [sp, #32]
   334a8:	umull	r2, r3, r2, r6
   334ac:	ldr	r5, [sp, #28]
   334b0:	mla	r3, r5, r6, r3
   334b4:	mov	ip, r6
   334b8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   334bc:	eor	r6, r7, r6
   334c0:	eor	r3, r6, r3
   334c4:	eor	r1, r3, r1
   334c8:	ldr	r3, [sp, #36]	; 0x24
   334cc:	eor	r3, r9, r3
   334d0:	eor	r2, r3, r2
   334d4:	eor	r0, r2, r0
   334d8:	ldr	r5, [sp, #16]
   334dc:	adds	r5, r0, r5
   334e0:	ldr	sl, [sp, #20]
   334e4:	adc	sl, r1, sl
   334e8:	mov	r1, ip
   334ec:	movw	r8, #23337	; 0x5b29
   334f0:	movt	r8, #12476	; 0x30bc
   334f4:	ldr	r6, [sp, #12]
   334f8:	movw	r7, #12225	; 0x2fc1
   334fc:	movt	r7, #25241	; 0x6299
   33500:	sub	r0, r6, r4
   33504:	cmp	r0, #16
   33508:	blt	33644 <cmetrohash64_2@@Base+0x46c>
   3350c:	mov	r0, r4
   33510:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   33514:	umull	r0, r2, r0, r7
   33518:	mla	r1, r1, r7, r2
   3351c:	adds	r0, r0, r5
   33520:	adc	r1, r1, sl
   33524:	mov	r2, #29
   33528:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   3352c:	str	r4, [fp, #-32]	; 0xffffffe0
   33530:	mov	r9, r0
   33534:	mov	r4, r1
   33538:	movw	r0, #5693	; 0x163d
   3353c:	movt	r0, #42015	; 0xa41f
   33540:	umull	r1, r0, r9, r0
   33544:	str	r1, [sp, #36]	; 0x24
   33548:	movw	r1, #4606	; 0x11fe
   3354c:	movt	r1, #10469	; 0x28e5
   33550:	str	sl, [sp, #20]
   33554:	str	r5, [sp, #16]
   33558:	mla	r0, r9, r1, r0
   3355c:	str	r0, [sp, #32]
   33560:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33564:	add	r0, r0, #8
   33568:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   3356c:	umull	r0, r2, r0, r7
   33570:	mla	r1, r1, r7, r2
   33574:	ldr	r2, [sp, #16]
   33578:	adds	r0, r0, r2
   3357c:	ldr	r2, [sp, #20]
   33580:	adc	r1, r1, r2
   33584:	mov	r2, #29
   33588:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   3358c:	mov	r5, r0
   33590:	mov	r6, r1
   33594:	mov	sl, r4
   33598:	movw	r0, #5693	; 0x163d
   3359c:	movt	r0, #42015	; 0xa41f
   335a0:	ldr	r1, [sp, #32]
   335a4:	mla	r1, r4, r0, r1
   335a8:	umull	r4, r0, r5, r8
   335ac:	str	r4, [sp, #32]
   335b0:	mov	r7, r8
   335b4:	mla	r8, r6, r8, r0
   335b8:	ldr	r0, [sp, #36]	; 0x24
   335bc:	mov	r2, #34	; 0x22
   335c0:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   335c4:	adds	r0, r0, r4
   335c8:	adc	r1, r1, r8
   335cc:	umull	r2, r3, r9, r7
   335d0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   335d4:	mov	r9, r7
   335d8:	mla	r3, sl, r7, r3
   335dc:	eor	sl, r1, r3
   335e0:	eor	r7, r0, r2
   335e4:	movw	r1, #11409	; 0x2c91
   335e8:	movt	r1, #25774	; 0x64ae
   335ec:	umull	r0, r2, r5, r1
   335f0:	movw	r3, #11461	; 0x2cc5
   335f4:	movt	r3, #2375	; 0x947
   335f8:	mla	r2, r5, r3, r2
   335fc:	mla	r1, r6, r1, r2
   33600:	mov	r2, #34	; 0x22
   33604:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   33608:	adds	r0, r7, r0
   3360c:	adc	r1, sl, r1
   33610:	eor	r1, r1, r8
   33614:	ldr	r5, [sp, #16]
   33618:	ldr	sl, [sp, #20]
   3361c:	ldr	r6, [sp, #12]
   33620:	ldr	r2, [sp, #32]
   33624:	eor	r0, r0, r2
   33628:	movw	r7, #827	; 0x33b
   3362c:	movt	r7, #41642	; 0xa2aa
   33630:	mov	r8, r7
   33634:	adds	r5, r0, r5
   33638:	adc	sl, r1, sl
   3363c:	add	r4, r4, #16
   33640:	b	3364c <cmetrohash64_2@@Base+0x474>
   33644:	mov	r9, r8
   33648:	mov	r8, r1
   3364c:	sub	r0, r6, r4
   33650:	cmp	r0, #8
   33654:	blt	33694 <cmetrohash64_2@@Base+0x4bc>
   33658:	mov	r0, r4
   3365c:	bl	33140 <cmetrohash64_1@@Base+0x5bc>
   33660:	umull	r0, r2, r0, r9
   33664:	mla	r1, r1, r9, r2
   33668:	adds	r7, r0, r5
   3366c:	adc	r5, r1, sl
   33670:	mov	r0, r7
   33674:	mov	r1, r5
   33678:	mov	r2, #36	; 0x24
   3367c:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   33680:	umull	r0, r2, r0, r8
   33684:	mla	r1, r1, r8, r2
   33688:	eor	sl, r5, r1
   3368c:	eor	r5, r7, r0
   33690:	add	r4, r4, #8
   33694:	sub	r0, r6, r4
   33698:	cmp	r0, #4
   3369c:	blt	336dc <cmetrohash64_2@@Base+0x504>
   336a0:	mov	r0, r4
   336a4:	bl	331ac <cmetrohash64_1@@Base+0x628>
   336a8:	umull	r0, r2, r0, r9
   336ac:	mla	r1, r1, r9, r2
   336b0:	adds	r7, r0, r5
   336b4:	adc	r5, r1, sl
   336b8:	mov	r0, r7
   336bc:	mov	r1, r5
   336c0:	mov	r2, #15
   336c4:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   336c8:	umull	r0, r2, r0, r8
   336cc:	mla	r1, r1, r8, r2
   336d0:	eor	sl, r5, r1
   336d4:	eor	r5, r7, r0
   336d8:	add	r4, r4, #4
   336dc:	sub	r0, r6, r4
   336e0:	cmp	r0, #2
   336e4:	blt	33724 <cmetrohash64_2@@Base+0x54c>
   336e8:	mov	r0, r4
   336ec:	bl	331b8 <cmetrohash64_1@@Base+0x634>
   336f0:	umull	r0, r2, r0, r9
   336f4:	mla	r1, r1, r9, r2
   336f8:	adds	r7, r0, r5
   336fc:	adc	r5, r1, sl
   33700:	mov	r0, r7
   33704:	mov	r1, r5
   33708:	mov	r2, #15
   3370c:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   33710:	umull	r0, r2, r0, r8
   33714:	mla	r1, r1, r8, r2
   33718:	eor	sl, r5, r1
   3371c:	eor	r5, r7, r0
   33720:	add	r4, r4, #2
   33724:	ldr	r7, [fp, #12]
   33728:	sub	r0, r6, r4
   3372c:	cmp	r0, #1
   33730:	blt	3376c <cmetrohash64_2@@Base+0x594>
   33734:	mov	r0, r4
   33738:	bl	331cc <cmetrohash64_1@@Base+0x648>
   3373c:	umull	r0, r2, r0, r9
   33740:	mla	r1, r1, r9, r2
   33744:	adds	r4, r0, r5
   33748:	adc	r5, r1, sl
   3374c:	mov	r0, r4
   33750:	mov	r1, r5
   33754:	mov	r2, #23
   33758:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   3375c:	umull	r0, r2, r0, r8
   33760:	mla	r1, r1, r8, r2
   33764:	eor	sl, r5, r1
   33768:	eor	r5, r4, r0
   3376c:	mov	r0, r5
   33770:	mov	r1, sl
   33774:	mov	r2, #28
   33778:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   3377c:	eor	r1, r1, sl
   33780:	eor	r0, r0, r5
   33784:	movw	r2, #6389	; 0x18f5
   33788:	movt	r2, #54992	; 0xd6d0
   3378c:	umull	r4, r0, r0, r2
   33790:	mla	r5, r1, r2, r0
   33794:	mov	r0, r4
   33798:	mov	r1, r5
   3379c:	mov	r2, #29
   337a0:	bl	33150 <cmetrohash64_1@@Base+0x5cc>
   337a4:	eor	r1, r5, r1
   337a8:	str	r1, [r7, #4]
   337ac:	eor	r0, r4, r0
   337b0:	str	r0, [r7]
   337b4:	sub	sp, fp, #28
   337b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000337bc <fb_name_table_clear@@Base>:
   337bc:	b	337c0 <fb_name_table_clear@@Base+0x4>
   337c0:	push	{r4, sl, fp, lr}
   337c4:	add	fp, sp, #8
   337c8:	mov	r4, r0
   337cc:	ldr	r0, [r0]
   337d0:	cmp	r0, #0
   337d4:	beq	337dc <fb_name_table_clear@@Base+0x20>
   337d8:	bl	14928 <free@plt>
   337dc:	vmov.i32	q8, #0	; 0x00000000
   337e0:	vst1.32	{d16-d17}, [r4]
   337e4:	pop	{r4, sl, fp, pc}

000337e8 <fb_name_table_destroy@@Base>:
   337e8:	push	{r4, sl, fp, lr}
   337ec:	add	fp, sp, #8
   337f0:	mov	r4, r0
   337f4:	cmp	r1, #0
   337f8:	movne	r0, r4
   337fc:	blne	3380c <fb_name_table_destroy@@Base+0x24>
   33800:	mov	r0, r4
   33804:	pop	{r4, sl, fp, lr}
   33808:	b	337c0 <fb_name_table_clear@@Base+0x4>
   3380c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33810:	add	fp, sp, #24
   33814:	mov	r6, r0
   33818:	ldr	r0, [r0, #12]
   3381c:	cmp	r0, #0
   33820:	beq	33864 <fb_name_table_destroy@@Base+0x7c>
   33824:	mov	r8, r2
   33828:	mov	r5, r1
   3382c:	ldr	r7, [r6]
   33830:	mov	r4, #0
   33834:	b	33848 <fb_name_table_destroy@@Base+0x60>
   33838:	ldr	r0, [r6, #12]
   3383c:	add	r4, r4, #1
   33840:	cmp	r4, r0
   33844:	bcs	33864 <fb_name_table_destroy@@Base+0x7c>
   33848:	ldr	r1, [r7, r4, lsl #2]
   3384c:	orr	r0, r1, #2
   33850:	cmp	r0, #2
   33854:	beq	33838 <fb_name_table_destroy@@Base+0x50>
   33858:	mov	r0, r8
   3385c:	blx	r5
   33860:	b	33838 <fb_name_table_destroy@@Base+0x50>
   33864:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00033868 <fb_name_table_init@@Base>:
   33868:	b	3386c <fb_name_table_init@@Base+0x4>
   3386c:	push	{r4, r5, fp, lr}
   33870:	add	fp, sp, #8
   33874:	mov	r4, r0
   33878:	mov	r2, #4
   3387c:	mov	r0, #179	; 0xb3
   33880:	mov	r5, r2
   33884:	mul	r3, r2, r0
   33888:	lsl	r2, r2, #1
   3388c:	cmp	r1, r3, lsr #8
   33890:	bhi	33880 <fb_name_table_init@@Base+0x18>
   33894:	mov	r0, r5
   33898:	mov	r1, #4
   3389c:	bl	148f8 <calloc@plt>
   338a0:	str	r0, [r4]
   338a4:	cmp	r0, #0
   338a8:	mvneq	r0, #0
   338ac:	movne	r0, #0
   338b0:	strne	r0, [r4, #4]
   338b4:	strne	r0, [r4, #8]
   338b8:	strne	r5, [r4, #12]
   338bc:	pop	{r4, r5, fp, pc}

000338c0 <fb_name_table_resize@@Base>:
   338c0:	b	338c4 <fb_name_table_resize@@Base+0x4>
   338c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   338c8:	add	fp, sp, #28
   338cc:	sub	sp, sp, #28
   338d0:	mov	r4, r0
   338d4:	ldr	sl, [r0]
   338d8:	ldr	r0, [r0, #8]
   338dc:	cmp	r0, r1
   338e0:	movhi	r1, r0
   338e4:	add	r0, sp, #8
   338e8:	bl	3386c <fb_name_table_init@@Base+0x4>
   338ec:	mov	r1, r0
   338f0:	mvn	r0, #0
   338f4:	cmp	r1, #0
   338f8:	beq	33904 <fb_name_table_resize@@Base+0x44>
   338fc:	sub	sp, fp, #28
   33900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33904:	ldr	r0, [r4, #12]
   33908:	cmp	r0, #0
   3390c:	beq	33970 <fb_name_table_resize@@Base+0xb0>
   33910:	mov	r6, #0
   33914:	mov	r8, #3
   33918:	add	r9, sp, #8
   3391c:	b	33930 <fb_name_table_resize@@Base+0x70>
   33920:	ldr	r0, [r4, #12]
   33924:	add	r6, r6, #1
   33928:	cmp	r6, r0
   3392c:	bcs	33970 <fb_name_table_resize@@Base+0xb0>
   33930:	ldr	r7, [sl, r6, lsl #2]
   33934:	orr	r0, r7, #2
   33938:	cmp	r0, #2
   3393c:	beq	33920 <fb_name_table_resize@@Base+0x60>
   33940:	mov	r0, r7
   33944:	bl	33bbc <fb_name_table_insert_item@@Base+0x4c>
   33948:	mov	r5, r0
   3394c:	mov	r0, r7
   33950:	bl	33bc4 <fb_name_table_insert_item@@Base+0x54>
   33954:	mov	r2, r0
   33958:	str	r8, [sp]
   3395c:	mov	r0, r9
   33960:	mov	r1, r5
   33964:	mov	r3, r7
   33968:	bl	33994 <fb_name_table_insert@@Base+0x4>
   3396c:	b	33920 <fb_name_table_resize@@Base+0x60>
   33970:	mov	r0, r4
   33974:	bl	337c0 <fb_name_table_clear@@Base+0x4>
   33978:	add	r0, sp, #8
   3397c:	vld1.64	{d16-d17}, [r0]
   33980:	vst1.32	{d16-d17}, [r4]
   33984:	mov	r0, #0
   33988:	sub	sp, fp, #28
   3398c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033990 <fb_name_table_insert@@Base>:
   33990:	b	33994 <fb_name_table_insert@@Base+0x4>
   33994:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33998:	add	fp, sp, #28
   3399c:	sub	sp, sp, #12
   339a0:	str	r2, [sp, #8]
   339a4:	cmp	r3, #2
   339a8:	beq	33ae8 <fb_name_table_insert@@Base+0x158>
   339ac:	mov	r9, r3
   339b0:	cmp	r3, #1
   339b4:	beq	33b08 <fb_name_table_insert@@Base+0x178>
   339b8:	cmp	r9, #0
   339bc:	beq	33b28 <fb_name_table_insert@@Base+0x198>
   339c0:	mov	r7, r1
   339c4:	mov	r5, r0
   339c8:	ldr	r0, [r0, #8]
   339cc:	ldr	r1, [r5, #12]
   339d0:	mov	r2, #179	; 0xb3
   339d4:	mul	r1, r1, r2
   339d8:	cmp	r0, r1, lsr #8
   339dc:	bcc	339f4 <fb_name_table_insert@@Base+0x64>
   339e0:	lsl	r1, r0, #1
   339e4:	mov	r0, r5
   339e8:	bl	338c4 <fb_name_table_resize@@Base+0x4>
   339ec:	cmp	r0, #0
   339f0:	bne	33b48 <fb_name_table_insert@@Base+0x1b8>
   339f4:	ldr	sl, [fp, #8]
   339f8:	ldr	r8, [r5]
   339fc:	ldr	r4, [r5, #12]
   33a00:	mov	r0, r7
   33a04:	ldr	r1, [sp, #8]
   33a08:	bl	33d6c <fb_name_table_visit@@Base+0x4>
   33a0c:	sub	r6, r4, #1
   33a10:	and	r1, r0, r6
   33a14:	orr	r2, sl, #1
   33a18:	cmp	r2, #3
   33a1c:	bne	33a4c <fb_name_table_insert@@Base+0xbc>
   33a20:	ldr	r2, [r5, #8]
   33a24:	add	r2, r2, #1
   33a28:	str	r2, [r5, #8]
   33a2c:	add	r0, r0, #1
   33a30:	mov	r5, r8
   33a34:	ldr	r1, [r5, r1, lsl #2]!
   33a38:	orr	r1, r1, #2
   33a3c:	cmp	r1, #2
   33a40:	beq	33ab0 <fb_name_table_insert@@Base+0x120>
   33a44:	and	r1, r0, r6
   33a48:	b	33a2c <fb_name_table_insert@@Base+0x9c>
   33a4c:	stm	sp, {r5, r9}
   33a50:	add	sl, r0, #1
   33a54:	mov	r9, #0
   33a58:	b	33a6c <fb_name_table_insert@@Base+0xdc>
   33a5c:	cmp	r9, #0
   33a60:	moveq	r9, r5
   33a64:	and	r1, sl, r6
   33a68:	add	sl, sl, #1
   33a6c:	mov	r5, r8
   33a70:	ldr	r4, [r5, r1, lsl #2]!
   33a74:	cmp	r4, #2
   33a78:	beq	33a5c <fb_name_table_insert@@Base+0xcc>
   33a7c:	cmp	r4, #0
   33a80:	beq	33ab8 <fb_name_table_insert@@Base+0x128>
   33a84:	mov	r0, r7
   33a88:	ldr	r1, [sp, #8]
   33a8c:	mov	r2, r4
   33a90:	bl	33da4 <fb_name_table_visit@@Base+0x3c>
   33a94:	cmp	r0, #0
   33a98:	beq	33a64 <fb_name_table_insert@@Base+0xd4>
   33a9c:	ldr	r0, [fp, #8]
   33aa0:	cmp	r0, #0
   33aa4:	ldr	r9, [sp, #4]
   33aa8:	streq	r9, [r5]
   33aac:	b	33adc <fb_name_table_insert@@Base+0x14c>
   33ab0:	mov	r4, #0
   33ab4:	b	33ad8 <fb_name_table_insert@@Base+0x148>
   33ab8:	ldr	r1, [sp]
   33abc:	ldr	r0, [r1, #8]
   33ac0:	add	r0, r0, #1
   33ac4:	str	r0, [r1, #8]
   33ac8:	cmp	r9, #0
   33acc:	movne	r5, r9
   33ad0:	mov	r4, #0
   33ad4:	ldr	r9, [sp, #4]
   33ad8:	str	r9, [r5]
   33adc:	mov	r0, r4
   33ae0:	sub	sp, fp, #28
   33ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33ae8:	movw	r0, #55149	; 0xd76d
   33aec:	movt	r0, #4
   33af0:	movw	r1, #54995	; 0xd6d3
   33af4:	movt	r1, #4
   33af8:	movw	r3, #55075	; 0xd723
   33afc:	movt	r3, #4
   33b00:	mov	r2, #115	; 0x73
   33b04:	bl	14ab4 <__assert_fail@plt>
   33b08:	movw	r0, #55172	; 0xd784
   33b0c:	movt	r0, #4
   33b10:	movw	r1, #54995	; 0xd6d3
   33b14:	movt	r1, #4
   33b18:	movw	r3, #55075	; 0xd723
   33b1c:	movt	r3, #4
   33b20:	mov	r2, #116	; 0x74
   33b24:	bl	14ab4 <__assert_fail@plt>
   33b28:	movw	r0, #54972	; 0xd6bc
   33b2c:	movt	r0, #4
   33b30:	movw	r1, #54995	; 0xd6d3
   33b34:	movt	r1, #4
   33b38:	movw	r3, #55075	; 0xd723
   33b3c:	movt	r3, #4
   33b40:	mov	r2, #114	; 0x72
   33b44:	bl	14ab4 <__assert_fail@plt>
   33b48:	movw	r0, #8368	; 0x20b0
   33b4c:	movt	r0, #6
   33b50:	ldr	r0, [r0]
   33b54:	movw	r1, #55193	; 0xd799
   33b58:	movt	r1, #4
   33b5c:	movw	r2, #55216	; 0xd7b0
   33b60:	movt	r2, #4
   33b64:	bl	149f4 <fprintf@plt>
   33b68:	mov	r0, #1
   33b6c:	bl	149c4 <exit@plt>

00033b70 <fb_name_table_insert_item@@Base>:
   33b70:	push	{r4, r5, r6, r7, fp, lr}
   33b74:	add	fp, sp, #16
   33b78:	sub	sp, sp, #8
   33b7c:	mov	r4, r2
   33b80:	mov	r5, r1
   33b84:	mov	r6, r0
   33b88:	mov	r0, r1
   33b8c:	bl	33bbc <fb_name_table_insert_item@@Base+0x4c>
   33b90:	mov	r7, r0
   33b94:	mov	r0, r5
   33b98:	bl	33bc4 <fb_name_table_insert_item@@Base+0x54>
   33b9c:	mov	r2, r0
   33ba0:	str	r4, [sp]
   33ba4:	mov	r0, r6
   33ba8:	mov	r1, r7
   33bac:	mov	r3, r5
   33bb0:	bl	33994 <fb_name_table_insert@@Base+0x4>
   33bb4:	sub	sp, fp, #16
   33bb8:	pop	{r4, r5, r6, r7, fp, pc}
   33bbc:	ldr	r0, [r0, #8]
   33bc0:	bx	lr
   33bc4:	ldr	r0, [r0, #12]
   33bc8:	bx	lr

00033bcc <fb_name_table_find@@Base>:
   33bcc:	b	33bd0 <fb_name_table_find@@Base+0x4>
   33bd0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   33bd4:	add	fp, sp, #24
   33bd8:	ldr	r4, [r0]
   33bdc:	cmp	r4, #0
   33be0:	beq	33c44 <fb_name_table_find@@Base+0x78>
   33be4:	mov	r8, r2
   33be8:	mov	r9, r1
   33bec:	ldr	r5, [r0, #12]
   33bf0:	mov	r0, r1
   33bf4:	mov	r1, r2
   33bf8:	bl	33d6c <fb_name_table_visit@@Base+0x4>
   33bfc:	mov	r6, r0
   33c00:	sub	r5, r5, #1
   33c04:	b	33c0c <fb_name_table_find@@Base+0x40>
   33c08:	add	r6, r6, #1
   33c0c:	and	r0, r6, r5
   33c10:	ldr	r7, [r4, r0, lsl #2]
   33c14:	cmp	r7, #2
   33c18:	beq	33c08 <fb_name_table_find@@Base+0x3c>
   33c1c:	cmp	r7, #0
   33c20:	beq	33c44 <fb_name_table_find@@Base+0x78>
   33c24:	mov	r0, r9
   33c28:	mov	r1, r8
   33c2c:	mov	r2, r7
   33c30:	bl	33da4 <fb_name_table_visit@@Base+0x3c>
   33c34:	cmp	r0, #0
   33c38:	beq	33c08 <fb_name_table_find@@Base+0x3c>
   33c3c:	mov	r0, r7
   33c40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33c44:	mov	r7, #0
   33c48:	mov	r0, r7
   33c4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00033c50 <fb_name_table_find_item@@Base>:
   33c50:	push	{r4, r5, r6, sl, fp, lr}
   33c54:	add	fp, sp, #16
   33c58:	mov	r4, r1
   33c5c:	mov	r5, r0
   33c60:	mov	r0, r1
   33c64:	bl	33bbc <fb_name_table_insert_item@@Base+0x4c>
   33c68:	mov	r6, r0
   33c6c:	mov	r0, r4
   33c70:	bl	33bc4 <fb_name_table_insert_item@@Base+0x54>
   33c74:	mov	r2, r0
   33c78:	mov	r0, r5
   33c7c:	mov	r1, r6
   33c80:	pop	{r4, r5, r6, sl, fp, lr}
   33c84:	b	33bd0 <fb_name_table_find@@Base+0x4>

00033c88 <fb_name_table_remove@@Base>:
   33c88:	b	33c8c <fb_name_table_remove@@Base+0x4>
   33c8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33c90:	add	fp, sp, #28
   33c94:	sub	sp, sp, #4
   33c98:	ldr	r5, [r0]
   33c9c:	mov	r7, #0
   33ca0:	cmp	r5, #0
   33ca4:	beq	33d24 <fb_name_table_remove@@Base+0x9c>
   33ca8:	mov	r9, r2
   33cac:	mov	sl, r1
   33cb0:	str	r0, [sp]
   33cb4:	ldr	r6, [r0, #12]
   33cb8:	mov	r0, r1
   33cbc:	mov	r1, r2
   33cc0:	bl	33d6c <fb_name_table_visit@@Base+0x4>
   33cc4:	mov	r4, r0
   33cc8:	sub	r6, r6, #1
   33ccc:	b	33cd4 <fb_name_table_remove@@Base+0x4c>
   33cd0:	add	r4, r4, #1
   33cd4:	and	r8, r4, r6
   33cd8:	ldr	r7, [r5, r8, lsl #2]
   33cdc:	cmp	r7, #2
   33ce0:	beq	33cd0 <fb_name_table_remove@@Base+0x48>
   33ce4:	cmp	r7, #0
   33ce8:	beq	33d20 <fb_name_table_remove@@Base+0x98>
   33cec:	mov	r0, sl
   33cf0:	mov	r1, r9
   33cf4:	mov	r2, r7
   33cf8:	bl	33da4 <fb_name_table_visit@@Base+0x3c>
   33cfc:	cmp	r0, #0
   33d00:	beq	33cd0 <fb_name_table_remove@@Base+0x48>
   33d04:	mov	r0, #2
   33d08:	str	r0, [r5, r8, lsl #2]
   33d0c:	ldr	r1, [sp]
   33d10:	ldr	r0, [r1, #8]
   33d14:	sub	r0, r0, #1
   33d18:	str	r0, [r1, #8]
   33d1c:	b	33d24 <fb_name_table_remove@@Base+0x9c>
   33d20:	mov	r7, #0
   33d24:	mov	r0, r7
   33d28:	sub	sp, fp, #28
   33d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033d30 <fb_name_table_remove_item@@Base>:
   33d30:	push	{r4, r5, r6, sl, fp, lr}
   33d34:	add	fp, sp, #16
   33d38:	mov	r4, r1
   33d3c:	mov	r5, r0
   33d40:	mov	r0, r1
   33d44:	bl	33bbc <fb_name_table_insert_item@@Base+0x4c>
   33d48:	mov	r6, r0
   33d4c:	mov	r0, r4
   33d50:	bl	33bc4 <fb_name_table_insert_item@@Base+0x54>
   33d54:	mov	r2, r0
   33d58:	mov	r0, r5
   33d5c:	mov	r1, r6
   33d60:	pop	{r4, r5, r6, sl, fp, lr}
   33d64:	b	33c8c <fb_name_table_remove@@Base+0x4>

00033d68 <fb_name_table_visit@@Base>:
   33d68:	b	3380c <fb_name_table_destroy@@Base+0x24>
   33d6c:	push	{fp, lr}
   33d70:	mov	fp, sp
   33d74:	sub	sp, sp, #16
   33d78:	add	r2, sp, #8
   33d7c:	movw	r3, #15186	; 0x3b52
   33d80:	movt	r3, #12137	; 0x2f69
   33d84:	str	r3, [sp]
   33d88:	str	r2, [sp, #4]
   33d8c:	mov	r2, r1
   33d90:	mov	r3, #0
   33d94:	bl	32b84 <cmetrohash64_1@@Base>
   33d98:	ldr	r0, [sp, #8]
   33d9c:	mov	sp, fp
   33da0:	pop	{fp, pc}
   33da4:	push	{fp, lr}
   33da8:	mov	fp, sp
   33dac:	mov	ip, r1
   33db0:	ldr	r3, [r2, #12]
   33db4:	mov	r1, #0
   33db8:	cmp	r3, ip
   33dbc:	bne	33dd4 <fb_name_table_visit@@Base+0x6c>
   33dc0:	ldr	r1, [r2, #8]
   33dc4:	mov	r2, ip
   33dc8:	bl	149d0 <bcmp@plt>
   33dcc:	clz	r0, r0
   33dd0:	lsr	r1, r0, #5
   33dd4:	mov	r0, r1
   33dd8:	pop	{fp, pc}

00033ddc <fb_value_set_clear@@Base>:
   33ddc:	b	33de0 <fb_value_set_clear@@Base+0x4>
   33de0:	push	{r4, sl, fp, lr}
   33de4:	add	fp, sp, #8
   33de8:	mov	r4, r0
   33dec:	ldr	r0, [r0]
   33df0:	cmp	r0, #0
   33df4:	beq	33dfc <fb_value_set_clear@@Base+0x20>
   33df8:	bl	14928 <free@plt>
   33dfc:	vmov.i32	q8, #0	; 0x00000000
   33e00:	vst1.32	{d16-d17}, [r4]
   33e04:	pop	{r4, sl, fp, pc}

00033e08 <fb_value_set_destroy@@Base>:
   33e08:	push	{r4, sl, fp, lr}
   33e0c:	add	fp, sp, #8
   33e10:	mov	r4, r0
   33e14:	cmp	r1, #0
   33e18:	movne	r0, r4
   33e1c:	blne	33e2c <fb_value_set_destroy@@Base+0x24>
   33e20:	mov	r0, r4
   33e24:	pop	{r4, sl, fp, lr}
   33e28:	b	33de0 <fb_value_set_clear@@Base+0x4>
   33e2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33e30:	add	fp, sp, #24
   33e34:	mov	r6, r0
   33e38:	ldr	r0, [r0, #12]
   33e3c:	cmp	r0, #0
   33e40:	beq	33e84 <fb_value_set_destroy@@Base+0x7c>
   33e44:	mov	r8, r2
   33e48:	mov	r5, r1
   33e4c:	ldr	r7, [r6]
   33e50:	mov	r4, #0
   33e54:	b	33e68 <fb_value_set_destroy@@Base+0x60>
   33e58:	ldr	r0, [r6, #12]
   33e5c:	add	r4, r4, #1
   33e60:	cmp	r4, r0
   33e64:	bcs	33e84 <fb_value_set_destroy@@Base+0x7c>
   33e68:	ldr	r1, [r7, r4, lsl #2]
   33e6c:	orr	r0, r1, #2
   33e70:	cmp	r0, #2
   33e74:	beq	33e58 <fb_value_set_destroy@@Base+0x50>
   33e78:	mov	r0, r8
   33e7c:	blx	r5
   33e80:	b	33e58 <fb_value_set_destroy@@Base+0x50>
   33e84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00033e88 <fb_value_set_init@@Base>:
   33e88:	b	33e8c <fb_value_set_init@@Base+0x4>
   33e8c:	push	{r4, r5, fp, lr}
   33e90:	add	fp, sp, #8
   33e94:	mov	r4, r0
   33e98:	mov	r2, #4
   33e9c:	mov	r0, #179	; 0xb3
   33ea0:	mov	r5, r2
   33ea4:	mul	r3, r2, r0
   33ea8:	lsl	r2, r2, #1
   33eac:	cmp	r1, r3, lsr #8
   33eb0:	bhi	33ea0 <fb_value_set_init@@Base+0x18>
   33eb4:	mov	r0, r5
   33eb8:	mov	r1, #4
   33ebc:	bl	148f8 <calloc@plt>
   33ec0:	str	r0, [r4]
   33ec4:	cmp	r0, #0
   33ec8:	mvneq	r0, #0
   33ecc:	movne	r0, #0
   33ed0:	strne	r0, [r4, #4]
   33ed4:	strne	r0, [r4, #8]
   33ed8:	strne	r5, [r4, #12]
   33edc:	pop	{r4, r5, fp, pc}

00033ee0 <fb_value_set_resize@@Base>:
   33ee0:	b	33ee4 <fb_value_set_resize@@Base+0x4>
   33ee4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   33ee8:	add	fp, sp, #24
   33eec:	sub	sp, sp, #16
   33ef0:	mov	r4, r0
   33ef4:	ldr	r5, [r0]
   33ef8:	ldr	r0, [r0, #8]
   33efc:	cmp	r0, r1
   33f00:	movhi	r1, r0
   33f04:	mov	r8, sp
   33f08:	mov	r0, r8
   33f0c:	bl	33e8c <fb_value_set_init@@Base+0x4>
   33f10:	mov	r1, r0
   33f14:	mvn	r0, #0
   33f18:	cmp	r1, #0
   33f1c:	beq	33f28 <fb_value_set_resize@@Base+0x48>
   33f20:	sub	sp, fp, #24
   33f24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33f28:	ldr	r0, [r4, #12]
   33f2c:	cmp	r0, #0
   33f30:	beq	33f80 <fb_value_set_resize@@Base+0xa0>
   33f34:	mov	r6, #0
   33f38:	mov	r9, sp
   33f3c:	b	33f50 <fb_value_set_resize@@Base+0x70>
   33f40:	ldr	r0, [r4, #12]
   33f44:	add	r6, r6, #1
   33f48:	cmp	r6, r0
   33f4c:	bcs	33f80 <fb_value_set_resize@@Base+0xa0>
   33f50:	ldr	r7, [r5, r6, lsl #2]
   33f54:	orr	r0, r7, #2
   33f58:	cmp	r0, #2
   33f5c:	beq	33f40 <fb_value_set_resize@@Base+0x60>
   33f60:	mov	r0, r7
   33f64:	bl	341b0 <fb_value_set_insert_item@@Base+0x34>
   33f68:	mov	r1, r0
   33f6c:	mov	r0, r9
   33f70:	mov	r2, r7
   33f74:	mov	r3, #3
   33f78:	bl	33fa8 <fb_value_set_insert@@Base+0xc>
   33f7c:	b	33f40 <fb_value_set_resize@@Base+0x60>
   33f80:	mov	r0, r4
   33f84:	bl	33de0 <fb_value_set_clear@@Base+0x4>
   33f88:	vld1.64	{d16-d17}, [r8]
   33f8c:	vst1.32	{d16-d17}, [r4]
   33f90:	mov	r0, #0
   33f94:	sub	sp, fp, #24
   33f98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00033f9c <fb_value_set_insert@@Base>:
   33f9c:	mov	r2, r3
   33fa0:	ldr	r3, [sp]
   33fa4:	b	33fa8 <fb_value_set_insert@@Base+0xc>
   33fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33fac:	add	fp, sp, #28
   33fb0:	sub	sp, sp, #12
   33fb4:	cmp	r2, #2
   33fb8:	beq	340f4 <fb_value_set_insert@@Base+0x158>
   33fbc:	mov	r9, r2
   33fc0:	cmp	r2, #1
   33fc4:	beq	34114 <fb_value_set_insert@@Base+0x178>
   33fc8:	cmp	r9, #0
   33fcc:	beq	34134 <fb_value_set_insert@@Base+0x198>
   33fd0:	mov	r6, r3
   33fd4:	mov	r7, r1
   33fd8:	mov	r4, r0
   33fdc:	ldr	r0, [r0, #8]
   33fe0:	ldr	r1, [r4, #12]
   33fe4:	mov	r2, #179	; 0xb3
   33fe8:	mul	r1, r1, r2
   33fec:	cmp	r0, r1, lsr #8
   33ff0:	bcc	34008 <fb_value_set_insert@@Base+0x6c>
   33ff4:	lsl	r1, r0, #1
   33ff8:	mov	r0, r4
   33ffc:	bl	33ee4 <fb_value_set_resize@@Base+0x4>
   34000:	cmp	r0, #0
   34004:	bne	34154 <fb_value_set_insert@@Base+0x1b8>
   34008:	ldr	r8, [r4]
   3400c:	ldr	r0, [r4, #12]
   34010:	sub	r5, r0, #1
   34014:	mov	r0, r7
   34018:	bl	34310 <fb_value_set_visit@@Base+0x4>
   3401c:	and	r1, r0, r5
   34020:	orr	r2, r6, #1
   34024:	cmp	r2, #3
   34028:	bne	34058 <fb_value_set_insert@@Base+0xbc>
   3402c:	ldr	r2, [r4, #8]
   34030:	add	r2, r2, #1
   34034:	str	r2, [r4, #8]
   34038:	add	r0, r0, #1
   3403c:	mov	r4, r8
   34040:	ldr	r1, [r4, r1, lsl #2]!
   34044:	orr	r1, r1, #2
   34048:	cmp	r1, #2
   3404c:	beq	340bc <fb_value_set_insert@@Base+0x120>
   34050:	and	r1, r0, r5
   34054:	b	34038 <fb_value_set_insert@@Base+0x9c>
   34058:	str	r6, [sp]
   3405c:	stmib	sp, {r4, r9}
   34060:	add	sl, r0, #1
   34064:	mov	r9, #0
   34068:	b	3407c <fb_value_set_insert@@Base+0xe0>
   3406c:	cmp	r9, #0
   34070:	moveq	r9, r4
   34074:	and	r1, sl, r5
   34078:	add	sl, sl, #1
   3407c:	mov	r4, r8
   34080:	ldr	r6, [r4, r1, lsl #2]!
   34084:	cmp	r6, #2
   34088:	beq	3406c <fb_value_set_insert@@Base+0xd0>
   3408c:	cmp	r6, #0
   34090:	beq	340c4 <fb_value_set_insert@@Base+0x128>
   34094:	mov	r0, r7
   34098:	mov	r1, r6
   3409c:	bl	34344 <fb_value_set_visit@@Base+0x38>
   340a0:	cmp	r0, #0
   340a4:	beq	34074 <fb_value_set_insert@@Base+0xd8>
   340a8:	ldr	r0, [sp]
   340ac:	cmp	r0, #0
   340b0:	ldr	r9, [sp, #8]
   340b4:	streq	r9, [r4]
   340b8:	b	340e8 <fb_value_set_insert@@Base+0x14c>
   340bc:	mov	r6, #0
   340c0:	b	340e4 <fb_value_set_insert@@Base+0x148>
   340c4:	ldr	r1, [sp, #4]
   340c8:	ldr	r0, [r1, #8]
   340cc:	add	r0, r0, #1
   340d0:	str	r0, [r1, #8]
   340d4:	cmp	r9, #0
   340d8:	movne	r4, r9
   340dc:	mov	r6, #0
   340e0:	ldr	r9, [sp, #8]
   340e4:	str	r9, [r4]
   340e8:	mov	r0, r6
   340ec:	sub	sp, fp, #28
   340f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   340f4:	movw	r0, #55149	; 0xd76d
   340f8:	movt	r0, #4
   340fc:	movw	r1, #54995	; 0xd6d3
   34100:	movt	r1, #4
   34104:	movw	r3, #55075	; 0xd723
   34108:	movt	r3, #4
   3410c:	mov	r2, #115	; 0x73
   34110:	bl	14ab4 <__assert_fail@plt>
   34114:	movw	r0, #55172	; 0xd784
   34118:	movt	r0, #4
   3411c:	movw	r1, #54995	; 0xd6d3
   34120:	movt	r1, #4
   34124:	movw	r3, #55075	; 0xd723
   34128:	movt	r3, #4
   3412c:	mov	r2, #116	; 0x74
   34130:	bl	14ab4 <__assert_fail@plt>
   34134:	movw	r0, #54972	; 0xd6bc
   34138:	movt	r0, #4
   3413c:	movw	r1, #54995	; 0xd6d3
   34140:	movt	r1, #4
   34144:	movw	r3, #55075	; 0xd723
   34148:	movt	r3, #4
   3414c:	mov	r2, #114	; 0x72
   34150:	bl	14ab4 <__assert_fail@plt>
   34154:	movw	r0, #8368	; 0x20b0
   34158:	movt	r0, #6
   3415c:	ldr	r0, [r0]
   34160:	movw	r1, #55193	; 0xd799
   34164:	movt	r1, #4
   34168:	movw	r2, #55216	; 0xd7b0
   3416c:	movt	r2, #4
   34170:	bl	149f4 <fprintf@plt>
   34174:	mov	r0, #1
   34178:	bl	149c4 <exit@plt>

0003417c <fb_value_set_insert_item@@Base>:
   3417c:	push	{r4, r5, r6, sl, fp, lr}
   34180:	add	fp, sp, #16
   34184:	mov	r4, r2
   34188:	mov	r5, r1
   3418c:	mov	r6, r0
   34190:	mov	r0, r1
   34194:	bl	341b0 <fb_value_set_insert_item@@Base+0x34>
   34198:	mov	r1, r0
   3419c:	mov	r0, r6
   341a0:	mov	r2, r5
   341a4:	mov	r3, r4
   341a8:	pop	{r4, r5, r6, sl, fp, lr}
   341ac:	b	33fa8 <fb_value_set_insert@@Base+0xc>
   341b0:	bx	lr

000341b4 <fb_value_set_find@@Base>:
   341b4:	b	341b8 <fb_value_set_find@@Base+0x4>
   341b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   341bc:	add	fp, sp, #24
   341c0:	ldr	r7, [r0]
   341c4:	cmp	r7, #0
   341c8:	beq	34220 <fb_value_set_find@@Base+0x6c>
   341cc:	mov	r8, r1
   341d0:	ldr	r0, [r0, #12]
   341d4:	sub	r4, r0, #1
   341d8:	mov	r0, r1
   341dc:	bl	34310 <fb_value_set_visit@@Base+0x4>
   341e0:	mov	r5, r0
   341e4:	b	341ec <fb_value_set_find@@Base+0x38>
   341e8:	add	r5, r5, #1
   341ec:	and	r0, r5, r4
   341f0:	ldr	r6, [r7, r0, lsl #2]
   341f4:	cmp	r6, #2
   341f8:	beq	341e8 <fb_value_set_find@@Base+0x34>
   341fc:	cmp	r6, #0
   34200:	beq	34220 <fb_value_set_find@@Base+0x6c>
   34204:	mov	r0, r8
   34208:	mov	r1, r6
   3420c:	bl	34344 <fb_value_set_visit@@Base+0x38>
   34210:	cmp	r0, #0
   34214:	beq	341e8 <fb_value_set_find@@Base+0x34>
   34218:	mov	r0, r6
   3421c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   34220:	mov	r6, #0
   34224:	mov	r0, r6
   34228:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003422c <fb_value_set_find_item@@Base>:
   3422c:	push	{r4, sl, fp, lr}
   34230:	add	fp, sp, #8
   34234:	mov	r4, r0
   34238:	mov	r0, r1
   3423c:	bl	341b0 <fb_value_set_insert_item@@Base+0x34>
   34240:	mov	r1, r0
   34244:	mov	r0, r4
   34248:	pop	{r4, sl, fp, lr}
   3424c:	b	341b8 <fb_value_set_find@@Base+0x4>

00034250 <fb_value_set_remove@@Base>:
   34250:	b	34254 <fb_value_set_remove@@Base+0x4>
   34254:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34258:	add	fp, sp, #28
   3425c:	sub	sp, sp, #4
   34260:	ldr	sl, [r0]
   34264:	mov	r6, #0
   34268:	cmp	sl, #0
   3426c:	beq	342dc <fb_value_set_remove@@Base+0x8c>
   34270:	mov	r9, r1
   34274:	mov	r8, r0
   34278:	ldr	r0, [r0, #12]
   3427c:	sub	r5, r0, #1
   34280:	mov	r0, r1
   34284:	bl	34310 <fb_value_set_visit@@Base+0x4>
   34288:	mov	r7, r0
   3428c:	b	34294 <fb_value_set_remove@@Base+0x44>
   34290:	add	r7, r7, #1
   34294:	and	r4, r7, r5
   34298:	ldr	r6, [sl, r4, lsl #2]
   3429c:	cmp	r6, #2
   342a0:	beq	34290 <fb_value_set_remove@@Base+0x40>
   342a4:	cmp	r6, #0
   342a8:	beq	342d8 <fb_value_set_remove@@Base+0x88>
   342ac:	mov	r0, r9
   342b0:	mov	r1, r6
   342b4:	bl	34344 <fb_value_set_visit@@Base+0x38>
   342b8:	cmp	r0, #0
   342bc:	beq	34290 <fb_value_set_remove@@Base+0x40>
   342c0:	mov	r0, #2
   342c4:	str	r0, [sl, r4, lsl #2]
   342c8:	ldr	r0, [r8, #8]
   342cc:	sub	r0, r0, #1
   342d0:	str	r0, [r8, #8]
   342d4:	b	342dc <fb_value_set_remove@@Base+0x8c>
   342d8:	mov	r6, #0
   342dc:	mov	r0, r6
   342e0:	sub	sp, fp, #28
   342e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000342e8 <fb_value_set_remove_item@@Base>:
   342e8:	push	{r4, sl, fp, lr}
   342ec:	add	fp, sp, #8
   342f0:	mov	r4, r0
   342f4:	mov	r0, r1
   342f8:	bl	341b0 <fb_value_set_insert_item@@Base+0x34>
   342fc:	mov	r1, r0
   34300:	mov	r0, r4
   34304:	pop	{r4, sl, fp, lr}
   34308:	b	34254 <fb_value_set_remove@@Base+0x4>

0003430c <fb_value_set_visit@@Base>:
   3430c:	b	33e2c <fb_value_set_destroy@@Base+0x24>
   34310:	ldrh	r1, [r0, #8]
   34314:	cmp	r1, #6
   34318:	beq	34338 <fb_value_set_visit@@Base+0x2c>
   3431c:	cmp	r1, #5
   34320:	cmpne	r1, #4
   34324:	movne	r0, #0
   34328:	bxne	lr
   3432c:	ldr	r0, [r0]
   34330:	eor	r0, r0, r1
   34334:	b	343a0 <fb_value_set_visit@@Base+0x94>
   34338:	ldrb	r0, [r0]
   3433c:	eor	r0, r0, r1
   34340:	b	343a0 <fb_value_set_visit@@Base+0x94>
   34344:	mov	ip, r0
   34348:	ldrh	r3, [r0, #8]
   3434c:	ldrh	r2, [r1, #8]
   34350:	mov	r0, #0
   34354:	cmp	r3, r2
   34358:	bxne	lr
   3435c:	cmp	r3, #6
   34360:	beq	34388 <fb_value_set_visit@@Base+0x7c>
   34364:	cmp	r3, #5
   34368:	cmpne	r3, #4
   3436c:	bne	3439c <fb_value_set_visit@@Base+0x90>
   34370:	ldrd	r0, [r1]
   34374:	ldrd	r2, [ip]
   34378:	eor	r1, r3, r1
   3437c:	eor	r0, r2, r0
   34380:	orr	r0, r0, r1
   34384:	b	34394 <fb_value_set_visit@@Base+0x88>
   34388:	ldrb	r0, [r1]
   3438c:	ldrb	r1, [ip]
   34390:	sub	r0, r1, r0
   34394:	clz	r0, r0
   34398:	lsr	r0, r0, #5
   3439c:	bx	lr
   343a0:	movw	r1, #15186	; 0x3b52
   343a4:	movt	r1, #12137	; 0x2f69
   343a8:	eor	r0, r0, r1
   343ac:	movw	r1, #31153	; 0x79b1
   343b0:	movt	r1, #40503	; 0x9e37
   343b4:	mul	r0, r0, r1
   343b8:	bx	lr
   343bc:	eor	r1, r1, #-2147483648	; 0x80000000
   343c0:	b	343c8 <fb_value_set_visit@@Base+0xbc>
   343c4:	eor	r3, r3, #-2147483648	; 0x80000000
   343c8:	push	{r4, r5, lr}
   343cc:	lsl	r4, r1, #1
   343d0:	lsl	r5, r3, #1
   343d4:	teq	r4, r5
   343d8:	teqeq	r0, r2
   343dc:	orrsne	ip, r4, r0
   343e0:	orrsne	ip, r5, r2
   343e4:	mvnsne	ip, r4, asr #21
   343e8:	mvnsne	ip, r5, asr #21
   343ec:	beq	345d8 <fb_value_set_visit@@Base+0x2cc>
   343f0:	lsr	r4, r4, #21
   343f4:	rsbs	r5, r4, r5, lsr #21
   343f8:	rsblt	r5, r5, #0
   343fc:	ble	3441c <fb_value_set_visit@@Base+0x110>
   34400:	add	r4, r4, r5
   34404:	eor	r2, r0, r2
   34408:	eor	r3, r1, r3
   3440c:	eor	r0, r2, r0
   34410:	eor	r1, r3, r1
   34414:	eor	r2, r0, r2
   34418:	eor	r3, r1, r3
   3441c:	cmp	r5, #54	; 0x36
   34420:	pophi	{r4, r5, pc}
   34424:	tst	r1, #-2147483648	; 0x80000000
   34428:	lsl	r1, r1, #12
   3442c:	mov	ip, #1048576	; 0x100000
   34430:	orr	r1, ip, r1, lsr #12
   34434:	beq	34440 <fb_value_set_visit@@Base+0x134>
   34438:	rsbs	r0, r0, #0
   3443c:	rsc	r1, r1, #0
   34440:	tst	r3, #-2147483648	; 0x80000000
   34444:	lsl	r3, r3, #12
   34448:	orr	r3, ip, r3, lsr #12
   3444c:	beq	34458 <fb_value_set_visit@@Base+0x14c>
   34450:	rsbs	r2, r2, #0
   34454:	rsc	r3, r3, #0
   34458:	teq	r4, r5
   3445c:	beq	345c0 <fb_value_set_visit@@Base+0x2b4>
   34460:	sub	r4, r4, #1
   34464:	rsbs	lr, r5, #32
   34468:	blt	34484 <fb_value_set_visit@@Base+0x178>
   3446c:	lsl	ip, r2, lr
   34470:	adds	r0, r0, r2, lsr r5
   34474:	adc	r1, r1, #0
   34478:	adds	r0, r0, r3, lsl lr
   3447c:	adcs	r1, r1, r3, asr r5
   34480:	b	344a0 <fb_value_set_visit@@Base+0x194>
   34484:	sub	r5, r5, #32
   34488:	add	lr, lr, #32
   3448c:	cmp	r2, #1
   34490:	lsl	ip, r3, lr
   34494:	orrcs	ip, ip, #2
   34498:	adds	r0, r0, r3, asr r5
   3449c:	adcs	r1, r1, r3, asr #31
   344a0:	and	r5, r1, #-2147483648	; 0x80000000
   344a4:	bpl	344b4 <fb_value_set_visit@@Base+0x1a8>
   344a8:	rsbs	ip, ip, #0
   344ac:	rscs	r0, r0, #0
   344b0:	rsc	r1, r1, #0
   344b4:	cmp	r1, #1048576	; 0x100000
   344b8:	bcc	344f8 <fb_value_set_visit@@Base+0x1ec>
   344bc:	cmp	r1, #2097152	; 0x200000
   344c0:	bcc	344e0 <fb_value_set_visit@@Base+0x1d4>
   344c4:	lsrs	r1, r1, #1
   344c8:	rrxs	r0, r0
   344cc:	rrx	ip, ip
   344d0:	add	r4, r4, #1
   344d4:	lsl	r2, r4, #21
   344d8:	cmn	r2, #4194304	; 0x400000
   344dc:	bcs	34638 <fb_value_set_visit@@Base+0x32c>
   344e0:	cmp	ip, #-2147483648	; 0x80000000
   344e4:	lsrseq	ip, r0, #1
   344e8:	adcs	r0, r0, #0
   344ec:	adc	r1, r1, r4, lsl #20
   344f0:	orr	r1, r1, r5
   344f4:	pop	{r4, r5, pc}
   344f8:	lsls	ip, ip, #1
   344fc:	adcs	r0, r0, r0
   34500:	adc	r1, r1, r1
   34504:	tst	r1, #1048576	; 0x100000
   34508:	sub	r4, r4, #1
   3450c:	bne	344e0 <fb_value_set_visit@@Base+0x1d4>
   34510:	teq	r1, #0
   34514:	moveq	r1, r0
   34518:	moveq	r0, #0
   3451c:	clz	r3, r1
   34520:	addeq	r3, r3, #32
   34524:	sub	r3, r3, #11
   34528:	subs	r2, r3, #32
   3452c:	bge	34550 <fb_value_set_visit@@Base+0x244>
   34530:	adds	r2, r2, #12
   34534:	ble	3454c <fb_value_set_visit@@Base+0x240>
   34538:	add	ip, r2, #20
   3453c:	rsb	r2, r2, #12
   34540:	lsl	r0, r1, ip
   34544:	lsr	r1, r1, r2
   34548:	b	34560 <fb_value_set_visit@@Base+0x254>
   3454c:	add	r2, r2, #20
   34550:	rsble	ip, r2, #32
   34554:	lsl	r1, r1, r2
   34558:	orrle	r1, r1, r0, lsr ip
   3455c:	lslle	r0, r0, r2
   34560:	subs	r4, r4, r3
   34564:	addge	r1, r1, r4, lsl #20
   34568:	orrge	r1, r1, r5
   3456c:	popge	{r4, r5, pc}
   34570:	mvn	r4, r4
   34574:	subs	r4, r4, #31
   34578:	bge	345b4 <fb_value_set_visit@@Base+0x2a8>
   3457c:	adds	r4, r4, #12
   34580:	bgt	3459c <fb_value_set_visit@@Base+0x290>
   34584:	add	r4, r4, #20
   34588:	rsb	r2, r4, #32
   3458c:	lsr	r0, r0, r4
   34590:	orr	r0, r0, r1, lsl r2
   34594:	orr	r1, r5, r1, lsr r4
   34598:	pop	{r4, r5, pc}
   3459c:	rsb	r4, r4, #12
   345a0:	rsb	r2, r4, #32
   345a4:	lsr	r0, r0, r2
   345a8:	orr	r0, r0, r1, lsl r4
   345ac:	mov	r1, r5
   345b0:	pop	{r4, r5, pc}
   345b4:	lsr	r0, r1, r4
   345b8:	mov	r1, r5
   345bc:	pop	{r4, r5, pc}
   345c0:	teq	r4, #0
   345c4:	eor	r3, r3, #1048576	; 0x100000
   345c8:	eoreq	r1, r1, #1048576	; 0x100000
   345cc:	addeq	r4, r4, #1
   345d0:	subne	r5, r5, #1
   345d4:	b	34460 <fb_value_set_visit@@Base+0x154>
   345d8:	mvns	ip, r4, asr #21
   345dc:	mvnsne	ip, r5, asr #21
   345e0:	beq	34648 <fb_value_set_visit@@Base+0x33c>
   345e4:	teq	r4, r5
   345e8:	teqeq	r0, r2
   345ec:	beq	34600 <fb_value_set_visit@@Base+0x2f4>
   345f0:	orrs	ip, r4, r0
   345f4:	moveq	r1, r3
   345f8:	moveq	r0, r2
   345fc:	pop	{r4, r5, pc}
   34600:	teq	r1, r3
   34604:	movne	r1, #0
   34608:	movne	r0, #0
   3460c:	popne	{r4, r5, pc}
   34610:	lsrs	ip, r4, #21
   34614:	bne	34628 <fb_value_set_visit@@Base+0x31c>
   34618:	lsls	r0, r0, #1
   3461c:	adcs	r1, r1, r1
   34620:	orrcs	r1, r1, #-2147483648	; 0x80000000
   34624:	pop	{r4, r5, pc}
   34628:	adds	r4, r4, #4194304	; 0x400000
   3462c:	addcc	r1, r1, #1048576	; 0x100000
   34630:	popcc	{r4, r5, pc}
   34634:	and	r5, r1, #-2147483648	; 0x80000000
   34638:	orr	r1, r5, #2130706432	; 0x7f000000
   3463c:	orr	r1, r1, #15728640	; 0xf00000
   34640:	mov	r0, #0
   34644:	pop	{r4, r5, pc}
   34648:	mvns	ip, r4, asr #21
   3464c:	movne	r1, r3
   34650:	movne	r0, r2
   34654:	mvnseq	ip, r5, asr #21
   34658:	movne	r3, r1
   3465c:	movne	r2, r0
   34660:	orrs	r4, r0, r1, lsl #12
   34664:	orrseq	r5, r2, r3, lsl #12
   34668:	teqeq	r1, r3
   3466c:	orrne	r1, r1, #524288	; 0x80000
   34670:	pop	{r4, r5, pc}
   34674:	teq	r0, #0
   34678:	moveq	r1, #0
   3467c:	bxeq	lr
   34680:	push	{r4, r5, lr}
   34684:	mov	r4, #1024	; 0x400
   34688:	add	r4, r4, #50	; 0x32
   3468c:	mov	r5, #0
   34690:	mov	r1, #0
   34694:	b	34510 <fb_value_set_visit@@Base+0x204>
   34698:	teq	r0, #0
   3469c:	moveq	r1, #0
   346a0:	bxeq	lr
   346a4:	push	{r4, r5, lr}
   346a8:	mov	r4, #1024	; 0x400
   346ac:	add	r4, r4, #50	; 0x32
   346b0:	ands	r5, r0, #-2147483648	; 0x80000000
   346b4:	rsbmi	r0, r0, #0
   346b8:	mov	r1, #0
   346bc:	b	34510 <fb_value_set_visit@@Base+0x204>
   346c0:	lsls	r2, r0, #1
   346c4:	asr	r1, r2, #3
   346c8:	rrx	r1, r1
   346cc:	lsl	r0, r2, #28
   346d0:	andsne	r3, r2, #-16777216	; 0xff000000
   346d4:	teqne	r3, #-16777216	; 0xff000000
   346d8:	eorne	r1, r1, #939524096	; 0x38000000
   346dc:	bxne	lr
   346e0:	bics	r2, r2, #-16777216	; 0xff000000
   346e4:	bxeq	lr
   346e8:	teq	r3, #-16777216	; 0xff000000
   346ec:	orreq	r1, r1, #524288	; 0x80000
   346f0:	bxeq	lr
   346f4:	push	{r4, r5, lr}
   346f8:	mov	r4, #896	; 0x380
   346fc:	and	r5, r1, #-2147483648	; 0x80000000
   34700:	bic	r1, r1, #-2147483648	; 0x80000000
   34704:	b	34510 <fb_value_set_visit@@Base+0x204>
   34708:	orrs	r2, r0, r1
   3470c:	bxeq	lr
   34710:	push	{r4, r5, lr}
   34714:	mov	r5, #0
   34718:	b	34738 <fb_value_set_visit@@Base+0x42c>
   3471c:	orrs	r2, r0, r1
   34720:	bxeq	lr
   34724:	push	{r4, r5, lr}
   34728:	ands	r5, r1, #-2147483648	; 0x80000000
   3472c:	bpl	34738 <fb_value_set_visit@@Base+0x42c>
   34730:	rsbs	r0, r0, #0
   34734:	rsc	r1, r1, #0
   34738:	mov	r4, #1024	; 0x400
   3473c:	add	r4, r4, #50	; 0x32
   34740:	lsrs	ip, r1, #22
   34744:	beq	344b4 <fb_value_set_visit@@Base+0x1a8>
   34748:	mov	r2, #3
   3474c:	lsrs	ip, ip, #3
   34750:	addne	r2, r2, #3
   34754:	lsrs	ip, ip, #3
   34758:	addne	r2, r2, #3
   3475c:	add	r2, r2, ip, lsr #3
   34760:	rsb	r3, r2, #32
   34764:	lsl	ip, r0, r3
   34768:	lsr	r0, r0, r2
   3476c:	orr	r0, r0, r1, lsl r3
   34770:	lsr	r1, r1, r2
   34774:	add	r4, r4, r2
   34778:	b	344b4 <fb_value_set_visit@@Base+0x1a8>
   3477c:	eor	r0, r0, #-2147483648	; 0x80000000
   34780:	b	34788 <fb_value_set_visit@@Base+0x47c>
   34784:	eor	r1, r1, #-2147483648	; 0x80000000
   34788:	lsls	r2, r0, #1
   3478c:	lslsne	r3, r1, #1
   34790:	teqne	r2, r3
   34794:	mvnsne	ip, r2, asr #24
   34798:	mvnsne	ip, r3, asr #24
   3479c:	beq	34894 <fb_value_set_visit@@Base+0x588>
   347a0:	lsr	r2, r2, #24
   347a4:	rsbs	r3, r2, r3, lsr #24
   347a8:	addgt	r2, r2, r3
   347ac:	eorgt	r1, r0, r1
   347b0:	eorgt	r0, r1, r0
   347b4:	eorgt	r1, r0, r1
   347b8:	rsblt	r3, r3, #0
   347bc:	cmp	r3, #25
   347c0:	bxhi	lr
   347c4:	tst	r0, #-2147483648	; 0x80000000
   347c8:	orr	r0, r0, #8388608	; 0x800000
   347cc:	bic	r0, r0, #-16777216	; 0xff000000
   347d0:	rsbne	r0, r0, #0
   347d4:	tst	r1, #-2147483648	; 0x80000000
   347d8:	orr	r1, r1, #8388608	; 0x800000
   347dc:	bic	r1, r1, #-16777216	; 0xff000000
   347e0:	rsbne	r1, r1, #0
   347e4:	teq	r2, r3
   347e8:	beq	3487c <fb_value_set_visit@@Base+0x570>
   347ec:	sub	r2, r2, #1
   347f0:	adds	r0, r0, r1, asr r3
   347f4:	rsb	r3, r3, #32
   347f8:	lsl	r1, r1, r3
   347fc:	and	r3, r0, #-2147483648	; 0x80000000
   34800:	bpl	3480c <fb_value_set_visit@@Base+0x500>
   34804:	rsbs	r1, r1, #0
   34808:	rsc	r0, r0, #0
   3480c:	cmp	r0, #8388608	; 0x800000
   34810:	bcc	34844 <fb_value_set_visit@@Base+0x538>
   34814:	cmp	r0, #16777216	; 0x1000000
   34818:	bcc	34830 <fb_value_set_visit@@Base+0x524>
   3481c:	lsrs	r0, r0, #1
   34820:	rrx	r1, r1
   34824:	add	r2, r2, #1
   34828:	cmp	r2, #254	; 0xfe
   3482c:	bcs	348e8 <fb_value_set_visit@@Base+0x5dc>
   34830:	cmp	r1, #-2147483648	; 0x80000000
   34834:	adc	r0, r0, r2, lsl #23
   34838:	biceq	r0, r0, #1
   3483c:	orr	r0, r0, r3
   34840:	bx	lr
   34844:	lsls	r1, r1, #1
   34848:	adc	r0, r0, r0
   3484c:	tst	r0, #8388608	; 0x800000
   34850:	sub	r2, r2, #1
   34854:	bne	34830 <fb_value_set_visit@@Base+0x524>
   34858:	clz	ip, r0
   3485c:	sub	ip, ip, #8
   34860:	subs	r2, r2, ip
   34864:	lsl	r0, r0, ip
   34868:	addge	r0, r0, r2, lsl #23
   3486c:	rsblt	r2, r2, #0
   34870:	orrge	r0, r0, r3
   34874:	orrlt	r0, r3, r0, lsr r2
   34878:	bx	lr
   3487c:	teq	r2, #0
   34880:	eor	r1, r1, #8388608	; 0x800000
   34884:	eoreq	r0, r0, #8388608	; 0x800000
   34888:	addeq	r2, r2, #1
   3488c:	subne	r3, r3, #1
   34890:	b	347ec <fb_value_set_visit@@Base+0x4e0>
   34894:	lsl	r3, r1, #1
   34898:	mvns	ip, r2, asr #24
   3489c:	mvnsne	ip, r3, asr #24
   348a0:	beq	348f4 <fb_value_set_visit@@Base+0x5e8>
   348a4:	teq	r2, r3
   348a8:	beq	348b8 <fb_value_set_visit@@Base+0x5ac>
   348ac:	teq	r2, #0
   348b0:	moveq	r0, r1
   348b4:	bx	lr
   348b8:	teq	r0, r1
   348bc:	movne	r0, #0
   348c0:	bxne	lr
   348c4:	tst	r2, #-16777216	; 0xff000000
   348c8:	bne	348d8 <fb_value_set_visit@@Base+0x5cc>
   348cc:	lsls	r0, r0, #1
   348d0:	orrcs	r0, r0, #-2147483648	; 0x80000000
   348d4:	bx	lr
   348d8:	adds	r2, r2, #33554432	; 0x2000000
   348dc:	addcc	r0, r0, #8388608	; 0x800000
   348e0:	bxcc	lr
   348e4:	and	r3, r0, #-2147483648	; 0x80000000
   348e8:	orr	r0, r3, #2130706432	; 0x7f000000
   348ec:	orr	r0, r0, #8388608	; 0x800000
   348f0:	bx	lr
   348f4:	mvns	r2, r2, asr #24
   348f8:	movne	r0, r1
   348fc:	mvnseq	r3, r3, asr #24
   34900:	movne	r1, r0
   34904:	lsls	r2, r0, #9
   34908:	lslseq	r3, r1, #9
   3490c:	teqeq	r0, r1
   34910:	orrne	r0, r0, #4194304	; 0x400000
   34914:	bx	lr
   34918:	mov	r3, #0
   3491c:	b	34928 <fb_value_set_visit@@Base+0x61c>
   34920:	ands	r3, r0, #-2147483648	; 0x80000000
   34924:	rsbmi	r0, r0, #0
   34928:	movs	ip, r0
   3492c:	bxeq	lr
   34930:	orr	r3, r3, #1258291200	; 0x4b000000
   34934:	mov	r1, r0
   34938:	mov	r0, #0
   3493c:	b	34980 <fb_value_set_visit@@Base+0x674>
   34940:	orrs	r2, r0, r1
   34944:	bxeq	lr
   34948:	mov	r3, #0
   3494c:	b	34968 <fb_value_set_visit@@Base+0x65c>
   34950:	orrs	r2, r0, r1
   34954:	bxeq	lr
   34958:	ands	r3, r1, #-2147483648	; 0x80000000
   3495c:	bpl	34968 <fb_value_set_visit@@Base+0x65c>
   34960:	rsbs	r0, r0, #0
   34964:	rsc	r1, r1, #0
   34968:	movs	ip, r1
   3496c:	moveq	ip, r0
   34970:	moveq	r1, r0
   34974:	moveq	r0, #0
   34978:	orr	r3, r3, #1526726656	; 0x5b000000
   3497c:	subeq	r3, r3, #268435456	; 0x10000000
   34980:	sub	r3, r3, #8388608	; 0x800000
   34984:	clz	r2, ip
   34988:	subs	r2, r2, #8
   3498c:	sub	r3, r3, r2, lsl #23
   34990:	blt	349b0 <fb_value_set_visit@@Base+0x6a4>
   34994:	add	r3, r3, r1, lsl r2
   34998:	lsl	ip, r0, r2
   3499c:	rsb	r2, r2, #32
   349a0:	cmp	ip, #-2147483648	; 0x80000000
   349a4:	adc	r0, r3, r0, lsr r2
   349a8:	biceq	r0, r0, #1
   349ac:	bx	lr
   349b0:	add	r2, r2, #32
   349b4:	lsl	ip, r1, r2
   349b8:	rsb	r2, r2, #32
   349bc:	orrs	r0, r0, ip, lsl #1
   349c0:	adc	r0, r3, r1, lsr r2
   349c4:	biceq	r0, r0, ip, lsr #31
   349c8:	bx	lr
   349cc:	cmp	r3, #0
   349d0:	cmpeq	r2, #0
   349d4:	bne	349ec <fb_value_set_visit@@Base+0x6e0>
   349d8:	cmp	r1, #0
   349dc:	cmpeq	r0, #0
   349e0:	mvnne	r1, #0
   349e4:	mvnne	r0, #0
   349e8:	b	34a08 <fb_value_set_visit@@Base+0x6fc>
   349ec:	sub	sp, sp, #8
   349f0:	push	{sp, lr}
   349f4:	bl	34af0 <fb_value_set_visit@@Base+0x7e4>
   349f8:	ldr	lr, [sp, #4]
   349fc:	add	sp, sp, #8
   34a00:	pop	{r2, r3}
   34a04:	bx	lr
   34a08:	push	{r1, lr}
   34a0c:	mov	r0, #8
   34a10:	bl	14904 <raise@plt>
   34a14:	pop	{r1, pc}
   34a18:	vmov	s15, r0
   34a1c:	vcmpe.f32	s15, #0.0
   34a20:	vmrs	APSR_nzcv, fpscr
   34a24:	bmi	34a2c <fb_value_set_visit@@Base+0x720>
   34a28:	b	34a70 <fb_value_set_visit@@Base+0x764>
   34a2c:	push	{r4, lr}
   34a30:	eor	r0, r0, #-2147483648	; 0x80000000
   34a34:	bl	34a70 <fb_value_set_visit@@Base+0x764>
   34a38:	rsbs	r0, r0, #0
   34a3c:	rsc	r1, r1, #0
   34a40:	pop	{r4, pc}
   34a44:	vmov	d7, r0, r1
   34a48:	vcmpe.f64	d7, #0.0
   34a4c:	vmrs	APSR_nzcv, fpscr
   34a50:	bmi	34a58 <fb_value_set_visit@@Base+0x74c>
   34a54:	b	34ab0 <fb_value_set_visit@@Base+0x7a4>
   34a58:	push	{r4, lr}
   34a5c:	eor	r1, r1, #-2147483648	; 0x80000000
   34a60:	bl	34ab0 <fb_value_set_visit@@Base+0x7a4>
   34a64:	rsbs	r0, r0, #0
   34a68:	rsc	r1, r1, #0
   34a6c:	pop	{r4, pc}
   34a70:	vmov	s15, r0
   34a74:	vldr	d5, [pc, #36]	; 34aa0 <fb_value_set_visit@@Base+0x794>
   34a78:	vcvt.f64.f32	d6, s15
   34a7c:	vldr	d7, [pc, #36]	; 34aa8 <fb_value_set_visit@@Base+0x79c>
   34a80:	vmul.f64	d7, d6, d7
   34a84:	vcvt.u32.f64	s14, d7
   34a88:	vcvt.f64.u32	d4, s14
   34a8c:	vmov	r1, s14
   34a90:	vmls.f64	d6, d4, d5
   34a94:	vcvt.u32.f64	s15, d6
   34a98:	vmov	r0, s15
   34a9c:	bx	lr
   34aa0:	andeq	r0, r0, r0
   34aa4:	mvnsmi	r0, r0
   34aa8:	andeq	r0, r0, r0
   34aac:	ldclcc	0, cr0, [r0]
   34ab0:	vmov	d6, r0, r1
   34ab4:	vldr	d7, [pc, #36]	; 34ae0 <fb_value_set_visit@@Base+0x7d4>
   34ab8:	vldr	d5, [pc, #40]	; 34ae8 <fb_value_set_visit@@Base+0x7dc>
   34abc:	vmul.f64	d7, d6, d7
   34ac0:	vcvt.u32.f64	s14, d7
   34ac4:	vcvt.f64.u32	d4, s14
   34ac8:	vmov	r1, s14
   34acc:	vmls.f64	d6, d4, d5
   34ad0:	vcvt.u32.f64	s15, d6
   34ad4:	vmov	r0, s15
   34ad8:	bx	lr
   34adc:	nop			; (mov r0, r0)
   34ae0:	andeq	r0, r0, r0
   34ae4:	ldclcc	0, cr0, [r0]
   34ae8:	andeq	r0, r0, r0
   34aec:	mvnsmi	r0, r0
   34af0:	cmp	r1, r3
   34af4:	cmpeq	r0, r2
   34af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34afc:	mov	r4, r0
   34b00:	movcc	r0, #0
   34b04:	mov	r5, r1
   34b08:	ldr	lr, [sp, #36]	; 0x24
   34b0c:	movcc	r1, r0
   34b10:	bcc	34c0c <fb_value_set_visit@@Base+0x900>
   34b14:	cmp	r3, #0
   34b18:	clzeq	ip, r2
   34b1c:	clzne	ip, r3
   34b20:	addeq	ip, ip, #32
   34b24:	cmp	r5, #0
   34b28:	clzeq	r1, r4
   34b2c:	addeq	r1, r1, #32
   34b30:	clzne	r1, r5
   34b34:	sub	ip, ip, r1
   34b38:	sub	sl, ip, #32
   34b3c:	lsl	r9, r3, ip
   34b40:	rsb	fp, ip, #32
   34b44:	orr	r9, r9, r2, lsl sl
   34b48:	orr	r9, r9, r2, lsr fp
   34b4c:	lsl	r8, r2, ip
   34b50:	cmp	r5, r9
   34b54:	cmpeq	r4, r8
   34b58:	movcc	r0, #0
   34b5c:	movcc	r1, r0
   34b60:	bcc	34b7c <fb_value_set_visit@@Base+0x870>
   34b64:	mov	r0, #1
   34b68:	subs	r4, r4, r8
   34b6c:	lsl	r1, r0, sl
   34b70:	orr	r1, r1, r0, lsr fp
   34b74:	lsl	r0, r0, ip
   34b78:	sbc	r5, r5, r9
   34b7c:	cmp	ip, #0
   34b80:	beq	34c0c <fb_value_set_visit@@Base+0x900>
   34b84:	lsr	r6, r8, #1
   34b88:	orr	r6, r6, r9, lsl #31
   34b8c:	lsr	r7, r9, #1
   34b90:	mov	r2, ip
   34b94:	b	34bb8 <fb_value_set_visit@@Base+0x8ac>
   34b98:	subs	r3, r4, r6
   34b9c:	sbc	r8, r5, r7
   34ba0:	adds	r3, r3, r3
   34ba4:	adc	r8, r8, r8
   34ba8:	adds	r4, r3, #1
   34bac:	adc	r5, r8, #0
   34bb0:	subs	r2, r2, #1
   34bb4:	beq	34bd4 <fb_value_set_visit@@Base+0x8c8>
   34bb8:	cmp	r5, r7
   34bbc:	cmpeq	r4, r6
   34bc0:	bcs	34b98 <fb_value_set_visit@@Base+0x88c>
   34bc4:	adds	r4, r4, r4
   34bc8:	adc	r5, r5, r5
   34bcc:	subs	r2, r2, #1
   34bd0:	bne	34bb8 <fb_value_set_visit@@Base+0x8ac>
   34bd4:	lsr	r3, r4, ip
   34bd8:	orr	r3, r3, r5, lsl fp
   34bdc:	lsr	r2, r5, ip
   34be0:	orr	r3, r3, r5, lsr sl
   34be4:	adds	r0, r0, r4
   34be8:	mov	r4, r3
   34bec:	lsl	r3, r2, ip
   34bf0:	orr	r3, r3, r4, lsl sl
   34bf4:	lsl	ip, r4, ip
   34bf8:	orr	r3, r3, r4, lsr fp
   34bfc:	adc	r1, r1, r5
   34c00:	subs	r0, r0, ip
   34c04:	mov	r5, r2
   34c08:	sbc	r1, r1, r3
   34c0c:	cmp	lr, #0
   34c10:	strdne	r4, [lr]
   34c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00034c18 <__libc_csu_init@@Base>:
   34c18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   34c1c:	mov	r7, r0
   34c20:	ldr	r6, [pc, #72]	; 34c70 <__libc_csu_init@@Base+0x58>
   34c24:	ldr	r5, [pc, #72]	; 34c74 <__libc_csu_init@@Base+0x5c>
   34c28:	add	r6, pc, r6
   34c2c:	add	r5, pc, r5
   34c30:	sub	r6, r6, r5
   34c34:	mov	r8, r1
   34c38:	mov	r9, r2
   34c3c:	bl	148d8 <calloc@plt-0x20>
   34c40:	asrs	r6, r6, #2
   34c44:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   34c48:	mov	r4, #0
   34c4c:	add	r4, r4, #1
   34c50:	ldr	r3, [r5], #4
   34c54:	mov	r2, r9
   34c58:	mov	r1, r8
   34c5c:	mov	r0, r7
   34c60:	blx	r3
   34c64:	cmp	r6, r4
   34c68:	bne	34c4c <__libc_csu_init@@Base+0x34>
   34c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34c70:	ldrdeq	sp, [r2], -ip
   34c74:	ldrdeq	sp, [r2], -r4

00034c78 <__libc_csu_fini@@Base>:
   34c78:	bx	lr

Disassembly of section .fini:

00034c7c <.fini>:
   34c7c:	push	{r3, lr}
   34c80:	pop	{r3, pc}
