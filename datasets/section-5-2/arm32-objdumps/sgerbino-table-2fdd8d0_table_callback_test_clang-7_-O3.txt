
../repos/sgerbino-table-2fdd8d0/bin/table_callback_test:     file format elf32-littlearm


Disassembly of section .init:

00011e98 <.init>:
   11e98:	push	{r3, lr}
   11e9c:	bl	11f90 <_start@@Base+0x3c>
   11ea0:	pop	{r3, pc}

Disassembly of section .plt:

00011ea4 <strcmp@plt-0x14>:
   11ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   11ea8:	ldr	lr, [pc, #4]	; 11eb4 <strcmp@plt-0x4>
   11eac:	add	lr, pc, lr
   11eb0:	ldr	pc, [lr, #8]!
   11eb4:	andeq	r4, r1, ip, asr #2

00011eb8 <strcmp@plt>:
   11eb8:	add	ip, pc, #0, 12
   11ebc:	add	ip, ip, #20, 20	; 0x14000
   11ec0:	ldr	pc, [ip, #332]!	; 0x14c

00011ec4 <printf@plt>:
   11ec4:	add	ip, pc, #0, 12
   11ec8:	add	ip, ip, #20, 20	; 0x14000
   11ecc:	ldr	pc, [ip, #324]!	; 0x144

00011ed0 <free@plt>:
   11ed0:	add	ip, pc, #0, 12
   11ed4:	add	ip, ip, #20, 20	; 0x14000
   11ed8:	ldr	pc, [ip, #316]!	; 0x13c

00011edc <realloc@plt>:
   11edc:	add	ip, pc, #0, 12
   11ee0:	add	ip, ip, #20, 20	; 0x14000
   11ee4:	ldr	pc, [ip, #308]!	; 0x134

00011ee8 <strcpy@plt>:
   11ee8:	add	ip, pc, #0, 12
   11eec:	add	ip, ip, #20, 20	; 0x14000
   11ef0:	ldr	pc, [ip, #300]!	; 0x12c

00011ef4 <puts@plt>:
   11ef4:	add	ip, pc, #0, 12
   11ef8:	add	ip, ip, #20, 20	; 0x14000
   11efc:	ldr	pc, [ip, #292]!	; 0x124

00011f00 <malloc@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #20, 20	; 0x14000
   11f08:	ldr	pc, [ip, #284]!	; 0x11c

00011f0c <__libc_start_main@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #20, 20	; 0x14000
   11f14:	ldr	pc, [ip, #276]!	; 0x114

00011f18 <__gmon_start__@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #20, 20	; 0x14000
   11f20:	ldr	pc, [ip, #268]!	; 0x10c

00011f24 <strlen@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #20, 20	; 0x14000
   11f2c:	ldr	pc, [ip, #260]!	; 0x104

00011f30 <snprintf@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #20, 20	; 0x14000
   11f38:	ldr	pc, [ip, #252]!	; 0xfc

00011f3c <__isoc99_sscanf@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #20, 20	; 0x14000
   11f44:	ldr	pc, [ip, #244]!	; 0xf4

00011f48 <abort@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #20, 20	; 0x14000
   11f50:	ldr	pc, [ip, #236]!	; 0xec

Disassembly of section .text:

00011f54 <_start@@Base>:
   11f54:	mov	fp, #0
   11f58:	mov	lr, #0
   11f5c:	pop	{r1}		; (ldr r1, [sp], #4)
   11f60:	mov	r2, sp
   11f64:	push	{r2}		; (str r2, [sp, #-4]!)
   11f68:	push	{r0}		; (str r0, [sp, #-4]!)
   11f6c:	ldr	ip, [pc, #16]	; 11f84 <_start@@Base+0x30>
   11f70:	push	{ip}		; (str ip, [sp, #-4]!)
   11f74:	ldr	r0, [pc, #12]	; 11f88 <_start@@Base+0x34>
   11f78:	ldr	r3, [pc, #12]	; 11f8c <_start@@Base+0x38>
   11f7c:	bl	11f0c <__libc_start_main@plt>
   11f80:	bl	11f48 <abort@plt>
   11f84:	ldrdeq	r5, [r1], -r4
   11f88:	andeq	r2, r1, r4, asr #32
   11f8c:	andeq	r5, r1, r4, ror r5
   11f90:	ldr	r3, [pc, #20]	; 11fac <_start@@Base+0x58>
   11f94:	ldr	r2, [pc, #20]	; 11fb0 <_start@@Base+0x5c>
   11f98:	add	r3, pc, r3
   11f9c:	ldr	r2, [r3, r2]
   11fa0:	cmp	r2, #0
   11fa4:	bxeq	lr
   11fa8:	b	11f18 <__gmon_start__@plt>
   11fac:	andeq	r4, r1, r0, rrx
   11fb0:	andeq	r0, r0, r0, asr #32
   11fb4:	ldr	r0, [pc, #24]	; 11fd4 <_start@@Base+0x80>
   11fb8:	ldr	r3, [pc, #24]	; 11fd8 <_start@@Base+0x84>
   11fbc:	cmp	r3, r0
   11fc0:	bxeq	lr
   11fc4:	ldr	r3, [pc, #16]	; 11fdc <_start@@Base+0x88>
   11fc8:	cmp	r3, #0
   11fcc:	bxeq	lr
   11fd0:	bx	r3
   11fd4:	andeq	r6, r2, ip, asr #32
   11fd8:	andeq	r6, r2, ip, asr #32
   11fdc:	andeq	r0, r0, r0
   11fe0:	ldr	r0, [pc, #36]	; 1200c <_start@@Base+0xb8>
   11fe4:	ldr	r1, [pc, #36]	; 12010 <_start@@Base+0xbc>
   11fe8:	sub	r1, r1, r0
   11fec:	asr	r1, r1, #2
   11ff0:	add	r1, r1, r1, lsr #31
   11ff4:	asrs	r1, r1, #1
   11ff8:	bxeq	lr
   11ffc:	ldr	r3, [pc, #16]	; 12014 <_start@@Base+0xc0>
   12000:	cmp	r3, #0
   12004:	bxeq	lr
   12008:	bx	r3
   1200c:	andeq	r6, r2, ip, asr #32
   12010:	andeq	r6, r2, ip, asr #32
   12014:	andeq	r0, r0, r0
   12018:	push	{r4, lr}
   1201c:	ldr	r4, [pc, #24]	; 1203c <_start@@Base+0xe8>
   12020:	ldrb	r3, [r4]
   12024:	cmp	r3, #0
   12028:	popne	{r4, pc}
   1202c:	bl	11fb4 <_start@@Base+0x60>
   12030:	mov	r3, #1
   12034:	strb	r3, [r4]
   12038:	pop	{r4, pc}
   1203c:	andeq	r6, r2, ip, asr #32
   12040:	b	11fe0 <_start@@Base+0x8c>

00012044 <main@@Base>:
   12044:	push	{r4, r5, r6, sl, fp, lr}
   12048:	add	fp, sp, #16
   1204c:	sub	sp, sp, #64	; 0x40
   12050:	add	r5, sp, #8
   12054:	mov	r4, #0
   12058:	mov	r0, r5
   1205c:	str	r4, [sp, #4]
   12060:	bl	121ec <table_init@@Base>
   12064:	movw	r1, #8584	; 0x2188
   12068:	add	r2, sp, #4
   1206c:	mov	r0, r5
   12070:	mvn	r3, #0
   12074:	movt	r1, #1
   12078:	bl	1298c <table_register_callback@@Base>
   1207c:	mov	r0, r5
   12080:	bl	13a44 <table_add_row@@Base>
   12084:	mov	r5, r0
   12088:	ldrb	r0, [sp, #4]
   1208c:	tst	r0, #2
   12090:	bne	120a4 <main@@Base+0x60>
   12094:	movw	r0, #22176	; 0x56a0
   12098:	movt	r0, #1
   1209c:	bl	11ef4 <puts@plt>
   120a0:	mvn	r4, #0
   120a4:	movw	r1, #21988	; 0x55e4
   120a8:	add	r0, sp, #8
   120ac:	mov	r2, #0
   120b0:	movt	r1, #1
   120b4:	bl	12d78 <table_add_column@@Base>
   120b8:	mov	r6, r0
   120bc:	ldrb	r0, [sp, #4]
   120c0:	tst	r0, #8
   120c4:	bne	120d8 <main@@Base+0x94>
   120c8:	movw	r0, #22224	; 0x56d0
   120cc:	movt	r0, #1
   120d0:	bl	11ef4 <puts@plt>
   120d4:	mvn	r4, #0
   120d8:	add	r0, sp, #8
   120dc:	mov	r1, r5
   120e0:	mov	r2, r6
   120e4:	mov	r3, #42	; 0x2a
   120e8:	bl	13f9c <table_set_int@@Base>
   120ec:	ldrb	r0, [sp, #4]
   120f0:	tst	r0, #1
   120f4:	bne	12108 <main@@Base+0xc4>
   120f8:	movw	r0, #21991	; 0x55e7
   120fc:	movt	r0, #1
   12100:	bl	11ec4 <printf@plt>
   12104:	mvn	r4, #0
   12108:	add	r0, sp, #8
   1210c:	mov	r1, r5
   12110:	bl	13af4 <table_remove_row@@Base>
   12114:	ldrb	r0, [sp, #4]
   12118:	tst	r0, #4
   1211c:	bne	12130 <main@@Base+0xec>
   12120:	movw	r0, #22035	; 0x5613
   12124:	movt	r0, #1
   12128:	bl	11ec4 <printf@plt>
   1212c:	mvn	r4, #0
   12130:	add	r0, sp, #8
   12134:	mov	r1, r6
   12138:	bl	12eb0 <table_remove_column@@Base>
   1213c:	ldrb	r0, [sp, #4]
   12140:	tst	r0, #16
   12144:	bne	12158 <main@@Base+0x114>
   12148:	movw	r0, #22077	; 0x563d
   1214c:	movt	r0, #1
   12150:	bl	11ec4 <printf@plt>
   12154:	mvn	r4, #0
   12158:	add	r0, sp, #8
   1215c:	bl	12248 <table_destroy@@Base>
   12160:	ldrb	r0, [sp, #4]
   12164:	tst	r0, #64	; 0x40
   12168:	bne	1217c <main@@Base+0x138>
   1216c:	movw	r0, #22122	; 0x566a
   12170:	movt	r0, #1
   12174:	bl	11ec4 <printf@plt>
   12178:	mvn	r4, #0
   1217c:	mov	r0, r4
   12180:	sub	sp, fp, #16
   12184:	pop	{r4, r5, r6, sl, fp, pc}
   12188:	ldr	r0, [sp]
   1218c:	ldr	r1, [r0]
   12190:	orr	r1, r1, r3
   12194:	str	r1, [r0]
   12198:	bx	lr

0001219c <table_new@@Base>:
   1219c:	push	{fp, lr}
   121a0:	mov	fp, sp
   121a4:	mov	r0, #56	; 0x38
   121a8:	bl	11f00 <malloc@plt>
   121ac:	mov	r1, #0
   121b0:	mov	r2, #10
   121b4:	mov	r3, #20
   121b8:	vmov.i32	q8, #0	; 0x00000000
   121bc:	str	r1, [r0]
   121c0:	stmib	r0, {r1, r2}
   121c4:	str	r1, [r0, #12]
   121c8:	str	r1, [r0, #16]
   121cc:	str	r1, [r0, #20]
   121d0:	str	r3, [r0, #24]
   121d4:	str	r1, [r0, #28]
   121d8:	str	r2, [r0, #48]	; 0x30
   121dc:	str	r1, [r0, #52]	; 0x34
   121e0:	add	r1, r0, #32
   121e4:	vst1.32	{d16-d17}, [r1]
   121e8:	pop	{fp, pc}

000121ec <table_init@@Base>:
   121ec:	mov	r1, #0
   121f0:	mov	r2, #10
   121f4:	mov	r3, #20
   121f8:	vmov.i32	q8, #0	; 0x00000000
   121fc:	str	r1, [r0]
   12200:	stmib	r0, {r1, r2}
   12204:	str	r1, [r0, #12]
   12208:	str	r1, [r0, #16]
   1220c:	str	r1, [r0, #20]
   12210:	str	r3, [r0, #24]
   12214:	str	r1, [r0, #28]
   12218:	str	r2, [r0, #48]	; 0x30
   1221c:	str	r1, [r0, #52]	; 0x34
   12220:	add	r0, r0, #32
   12224:	vst1.32	{d16-d17}, [r0]
   12228:	bx	lr

0001222c <table_delete@@Base>:
   1222c:	push	{r4, sl, fp, lr}
   12230:	add	fp, sp, #8
   12234:	mov	r4, r0
   12238:	bl	12248 <table_destroy@@Base>
   1223c:	mov	r0, r4
   12240:	pop	{r4, sl, fp, lr}
   12244:	b	11ed0 <free@plt>

00012248 <table_destroy@@Base>:
   12248:	cmp	r0, #0
   1224c:	bxeq	lr
   12250:	push	{r4, r5, r6, sl, fp, lr}
   12254:	add	fp, sp, #16
   12258:	mvn	r1, #0
   1225c:	mvn	r2, #0
   12260:	mov	r3, #64	; 0x40
   12264:	mov	r4, r0
   12268:	bl	12bf0 <table_notify@@Base>
   1226c:	mov	r0, r4
   12270:	bl	13a3c <table_get_row_length@@Base>
   12274:	cmp	r0, #1
   12278:	blt	1229c <table_destroy@@Base+0x54>
   1227c:	mov	r5, r0
   12280:	mov	r6, #0
   12284:	mov	r0, r4
   12288:	mov	r1, r6
   1228c:	bl	139e4 <table_row_destroy@@Base>
   12290:	add	r6, r6, #1
   12294:	cmp	r5, r6
   12298:	bne	12284 <table_destroy@@Base+0x3c>
   1229c:	ldr	r0, [r4, #16]
   122a0:	cmp	r0, #0
   122a4:	beq	122ac <table_destroy@@Base+0x64>
   122a8:	bl	11ed0 <free@plt>
   122ac:	mov	r0, r4
   122b0:	bl	12ce4 <table_get_column_length@@Base>
   122b4:	cmp	r0, #1
   122b8:	blt	122dc <table_destroy@@Base+0x94>
   122bc:	mov	r5, r0
   122c0:	mov	r6, #0
   122c4:	mov	r0, r4
   122c8:	mov	r1, r6
   122cc:	bl	12ccc <table_column_destroy@@Base>
   122d0:	add	r6, r6, #1
   122d4:	cmp	r5, r6
   122d8:	bne	122c4 <table_destroy@@Base+0x7c>
   122dc:	ldr	r0, [r4]
   122e0:	cmp	r0, #0
   122e4:	beq	122ec <table_destroy@@Base+0xa4>
   122e8:	bl	11ed0 <free@plt>
   122ec:	ldr	r0, [r4, #36]	; 0x24
   122f0:	cmp	r0, #0
   122f4:	beq	122fc <table_destroy@@Base+0xb4>
   122f8:	bl	11ed0 <free@plt>
   122fc:	ldr	r0, [r4, #40]	; 0x28
   12300:	cmp	r0, #0
   12304:	beq	1230c <table_destroy@@Base+0xc4>
   12308:	bl	11ed0 <free@plt>
   1230c:	ldr	r0, [r4, #44]	; 0x2c
   12310:	cmp	r0, #0
   12314:	pop	{r4, r5, r6, sl, fp, lr}
   12318:	beq	12320 <table_destroy@@Base+0xd8>
   1231c:	b	11ed0 <free@plt>
   12320:	bx	lr

00012324 <table_dupe@@Base>:
   12324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12328:	add	fp, sp, #28
   1232c:	sub	sp, sp, #12
   12330:	mov	r4, r0
   12334:	bl	13a3c <table_get_row_length@@Base>
   12338:	mov	r8, r0
   1233c:	mov	r0, r4
   12340:	bl	12ce4 <table_get_column_length@@Base>
   12344:	mov	r6, r0
   12348:	mov	r0, #56	; 0x38
   1234c:	bl	11f00 <malloc@plt>
   12350:	mov	sl, r0
   12354:	mov	r5, #0
   12358:	mov	r0, #10
   1235c:	mov	r1, #20
   12360:	cmp	r6, #1
   12364:	vmov.i32	q8, #0	; 0x00000000
   12368:	str	r5, [sl]
   1236c:	str	r5, [sl, #4]
   12370:	str	r0, [sl, #8]
   12374:	str	r5, [sl, #12]
   12378:	str	r5, [sl, #16]
   1237c:	str	r5, [sl, #20]
   12380:	str	r1, [sl, #24]
   12384:	str	r5, [sl, #28]
   12388:	str	r0, [sl, #48]	; 0x30
   1238c:	add	r0, sl, #32
   12390:	str	r5, [sl, #52]	; 0x34
   12394:	vst1.32	{d16-d17}, [r0]
   12398:	blt	123d4 <table_dupe@@Base+0xb0>
   1239c:	mov	r0, r4
   123a0:	mov	r1, r5
   123a4:	bl	12d54 <table_get_column_name@@Base>
   123a8:	mov	r7, r0
   123ac:	mov	r0, r4
   123b0:	mov	r1, r5
   123b4:	bl	12d64 <table_get_column_data_type@@Base>
   123b8:	mov	r2, r0
   123bc:	mov	r0, sl
   123c0:	mov	r1, r7
   123c4:	bl	12d78 <table_add_column@@Base>
   123c8:	add	r5, r5, #1
   123cc:	cmp	r6, r5
   123d0:	bne	1239c <table_dupe@@Base+0x78>
   123d4:	cmp	r8, #1
   123d8:	blt	12954 <table_dupe@@Base+0x630>
   123dc:	mov	r5, #0
   123e0:	add	r9, sp, #8
   123e4:	mov	r0, sl
   123e8:	bl	13a44 <table_add_row@@Base>
   123ec:	cmp	r6, #1
   123f0:	blt	12948 <table_dupe@@Base+0x624>
   123f4:	mov	r7, #0
   123f8:	mov	r0, r4
   123fc:	mov	r1, r7
   12400:	bl	12d64 <table_get_column_data_type@@Base>
   12404:	cmp	r0, #23
   12408:	bhi	12498 <table_dupe@@Base+0x174>
   1240c:	add	r1, pc, #0
   12410:	ldr	pc, [r1, r0, lsl #2]
   12414:	andeq	r2, r1, r4, ror r4
   12418:	andeq	r2, r1, r8, lsr #9
   1241c:	ldrdeq	r2, [r1], -ip
   12420:	andeq	r2, r1, r0, lsl r5
   12424:	andeq	r2, r1, r4, asr #10
   12428:	andeq	r2, r1, r8, ror r5
   1242c:	andeq	r2, r1, ip, lsr #11
   12430:	andeq	r2, r1, r0, ror #11
   12434:	andeq	r2, r1, r4, lsl r6
   12438:	andeq	r2, r1, r8, asr #12
   1243c:	andeq	r2, r1, ip, ror r6
   12440:			; <UNDEFINED> instruction: 0x000126b0
   12444:	andeq	r2, r1, r4, ror #13
   12448:	andeq	r2, r1, r8, lsl r7
   1244c:	andeq	r2, r1, ip, asr #14
   12450:	andeq	r2, r1, r0, lsl #15
   12454:			; <UNDEFINED> instruction: 0x000127b4
   12458:	andeq	r2, r1, r4, ror #15
   1245c:	andeq	r2, r1, r4, lsl r8
   12460:	andeq	r2, r1, r4, asr #16
   12464:	andeq	r2, r1, r8, ror r8
   12468:	andeq	r2, r1, ip, lsr #17
   1246c:	andeq	r2, r1, r0, ror #17
   12470:	andeq	r2, r1, r4, lsl r9
   12474:	mov	r0, r4
   12478:	mov	r1, r5
   1247c:	mov	r2, r7
   12480:	bl	13794 <table_get_int@@Base>
   12484:	mov	r3, r0
   12488:	mov	r0, sl
   1248c:	mov	r1, r5
   12490:	mov	r2, r7
   12494:	bl	13f9c <table_set_int@@Base>
   12498:	add	r7, r7, #1
   1249c:	cmp	r6, r7
   124a0:	bne	123f8 <table_dupe@@Base+0xd4>
   124a4:	b	12948 <table_dupe@@Base+0x624>
   124a8:	mov	r0, r4
   124ac:	mov	r1, r5
   124b0:	mov	r2, r7
   124b4:	bl	137ac <table_get_uint@@Base>
   124b8:	mov	r3, r0
   124bc:	mov	r0, sl
   124c0:	mov	r1, r5
   124c4:	mov	r2, r7
   124c8:	bl	1401c <table_set_uint@@Base>
   124cc:	add	r7, r7, #1
   124d0:	cmp	r6, r7
   124d4:	bne	123f8 <table_dupe@@Base+0xd4>
   124d8:	b	12948 <table_dupe@@Base+0x624>
   124dc:	mov	r0, r4
   124e0:	mov	r1, r5
   124e4:	mov	r2, r7
   124e8:	bl	137c4 <table_get_int8@@Base>
   124ec:	mov	r3, r0
   124f0:	mov	r0, sl
   124f4:	mov	r1, r5
   124f8:	mov	r2, r7
   124fc:	bl	1409c <table_set_int8@@Base>
   12500:	add	r7, r7, #1
   12504:	cmp	r6, r7
   12508:	bne	123f8 <table_dupe@@Base+0xd4>
   1250c:	b	12948 <table_dupe@@Base+0x624>
   12510:	mov	r0, r4
   12514:	mov	r1, r5
   12518:	mov	r2, r7
   1251c:	bl	137dc <table_get_uint8@@Base>
   12520:	mov	r3, r0
   12524:	mov	r0, sl
   12528:	mov	r1, r5
   1252c:	mov	r2, r7
   12530:	bl	1411c <table_set_uint8@@Base>
   12534:	add	r7, r7, #1
   12538:	cmp	r6, r7
   1253c:	bne	123f8 <table_dupe@@Base+0xd4>
   12540:	b	12948 <table_dupe@@Base+0x624>
   12544:	mov	r0, r4
   12548:	mov	r1, r5
   1254c:	mov	r2, r7
   12550:	bl	137f4 <table_get_int16@@Base>
   12554:	mov	r3, r0
   12558:	mov	r0, sl
   1255c:	mov	r1, r5
   12560:	mov	r2, r7
   12564:	bl	1419c <table_set_int16@@Base>
   12568:	add	r7, r7, #1
   1256c:	cmp	r6, r7
   12570:	bne	123f8 <table_dupe@@Base+0xd4>
   12574:	b	12948 <table_dupe@@Base+0x624>
   12578:	mov	r0, r4
   1257c:	mov	r1, r5
   12580:	mov	r2, r7
   12584:	bl	1380c <table_get_uint16@@Base>
   12588:	mov	r3, r0
   1258c:	mov	r0, sl
   12590:	mov	r1, r5
   12594:	mov	r2, r7
   12598:	bl	1421c <table_set_uint16@@Base>
   1259c:	add	r7, r7, #1
   125a0:	cmp	r6, r7
   125a4:	bne	123f8 <table_dupe@@Base+0xd4>
   125a8:	b	12948 <table_dupe@@Base+0x624>
   125ac:	mov	r0, r4
   125b0:	mov	r1, r5
   125b4:	mov	r2, r7
   125b8:	bl	13824 <table_get_int32@@Base>
   125bc:	mov	r3, r0
   125c0:	mov	r0, sl
   125c4:	mov	r1, r5
   125c8:	mov	r2, r7
   125cc:	bl	1429c <table_set_int32@@Base>
   125d0:	add	r7, r7, #1
   125d4:	cmp	r6, r7
   125d8:	bne	123f8 <table_dupe@@Base+0xd4>
   125dc:	b	12948 <table_dupe@@Base+0x624>
   125e0:	mov	r0, r4
   125e4:	mov	r1, r5
   125e8:	mov	r2, r7
   125ec:	bl	1383c <table_get_uint32@@Base>
   125f0:	mov	r3, r0
   125f4:	mov	r0, sl
   125f8:	mov	r1, r5
   125fc:	mov	r2, r7
   12600:	bl	1431c <table_set_uint32@@Base>
   12604:	add	r7, r7, #1
   12608:	cmp	r6, r7
   1260c:	bne	123f8 <table_dupe@@Base+0xd4>
   12610:	b	12948 <table_dupe@@Base+0x624>
   12614:	mov	r0, r4
   12618:	mov	r1, r5
   1261c:	mov	r2, r7
   12620:	bl	13854 <table_get_int64@@Base>
   12624:	stm	sp, {r0, r1}
   12628:	mov	r0, sl
   1262c:	mov	r1, r5
   12630:	mov	r2, r7
   12634:	bl	1439c <table_set_int64@@Base>
   12638:	add	r7, r7, #1
   1263c:	cmp	r6, r7
   12640:	bne	123f8 <table_dupe@@Base+0xd4>
   12644:	b	12948 <table_dupe@@Base+0x624>
   12648:	mov	r0, r4
   1264c:	mov	r1, r5
   12650:	mov	r2, r7
   12654:	bl	1386c <table_get_uint64@@Base>
   12658:	stm	sp, {r0, r1}
   1265c:	mov	r0, sl
   12660:	mov	r1, r5
   12664:	mov	r2, r7
   12668:	bl	14424 <table_set_uint64@@Base>
   1266c:	add	r7, r7, #1
   12670:	cmp	r6, r7
   12674:	bne	123f8 <table_dupe@@Base+0xd4>
   12678:	b	12948 <table_dupe@@Base+0x624>
   1267c:	mov	r0, r4
   12680:	mov	r1, r5
   12684:	mov	r2, r7
   12688:	bl	13884 <table_get_short@@Base>
   1268c:	mov	r3, r0
   12690:	mov	r0, sl
   12694:	mov	r1, r5
   12698:	mov	r2, r7
   1269c:	bl	144ac <table_set_short@@Base>
   126a0:	add	r7, r7, #1
   126a4:	cmp	r6, r7
   126a8:	bne	123f8 <table_dupe@@Base+0xd4>
   126ac:	b	12948 <table_dupe@@Base+0x624>
   126b0:	mov	r0, r4
   126b4:	mov	r1, r5
   126b8:	mov	r2, r7
   126bc:	bl	1389c <table_get_ushort@@Base>
   126c0:	mov	r3, r0
   126c4:	mov	r0, sl
   126c8:	mov	r1, r5
   126cc:	mov	r2, r7
   126d0:	bl	1452c <table_set_ushort@@Base>
   126d4:	add	r7, r7, #1
   126d8:	cmp	r6, r7
   126dc:	bne	123f8 <table_dupe@@Base+0xd4>
   126e0:	b	12948 <table_dupe@@Base+0x624>
   126e4:	mov	r0, r4
   126e8:	mov	r1, r5
   126ec:	mov	r2, r7
   126f0:	bl	138b4 <table_get_long@@Base>
   126f4:	mov	r3, r0
   126f8:	mov	r0, sl
   126fc:	mov	r1, r5
   12700:	mov	r2, r7
   12704:	bl	145ac <table_set_long@@Base>
   12708:	add	r7, r7, #1
   1270c:	cmp	r6, r7
   12710:	bne	123f8 <table_dupe@@Base+0xd4>
   12714:	b	12948 <table_dupe@@Base+0x624>
   12718:	mov	r0, r4
   1271c:	mov	r1, r5
   12720:	mov	r2, r7
   12724:	bl	138cc <table_get_ulong@@Base>
   12728:	mov	r3, r0
   1272c:	mov	r0, sl
   12730:	mov	r1, r5
   12734:	mov	r2, r7
   12738:	bl	1462c <table_set_ulong@@Base>
   1273c:	add	r7, r7, #1
   12740:	cmp	r6, r7
   12744:	bne	123f8 <table_dupe@@Base+0xd4>
   12748:	b	12948 <table_dupe@@Base+0x624>
   1274c:	mov	r0, r4
   12750:	mov	r1, r5
   12754:	mov	r2, r7
   12758:	bl	138e4 <table_get_llong@@Base>
   1275c:	stm	sp, {r0, r1}
   12760:	mov	r0, sl
   12764:	mov	r1, r5
   12768:	mov	r2, r7
   1276c:	bl	146ac <table_set_llong@@Base>
   12770:	add	r7, r7, #1
   12774:	cmp	r6, r7
   12778:	bne	123f8 <table_dupe@@Base+0xd4>
   1277c:	b	12948 <table_dupe@@Base+0x624>
   12780:	mov	r0, r4
   12784:	mov	r1, r5
   12788:	mov	r2, r7
   1278c:	bl	138fc <table_get_ullong@@Base>
   12790:	stm	sp, {r0, r1}
   12794:	mov	r0, sl
   12798:	mov	r1, r5
   1279c:	mov	r2, r7
   127a0:	bl	14734 <table_set_ullong@@Base>
   127a4:	add	r7, r7, #1
   127a8:	cmp	r6, r7
   127ac:	bne	123f8 <table_dupe@@Base+0xd4>
   127b0:	b	12948 <table_dupe@@Base+0x624>
   127b4:	mov	r0, r4
   127b8:	mov	r1, r5
   127bc:	mov	r2, r7
   127c0:	bl	13914 <table_get_float@@Base>
   127c4:	mov	r0, sl
   127c8:	mov	r1, r5
   127cc:	mov	r2, r7
   127d0:	bl	147bc <table_set_float@@Base>
   127d4:	add	r7, r7, #1
   127d8:	cmp	r6, r7
   127dc:	bne	123f8 <table_dupe@@Base+0xd4>
   127e0:	b	12948 <table_dupe@@Base+0x624>
   127e4:	mov	r0, r4
   127e8:	mov	r1, r5
   127ec:	mov	r2, r7
   127f0:	bl	1392c <table_get_double@@Base>
   127f4:	mov	r0, sl
   127f8:	mov	r1, r5
   127fc:	mov	r2, r7
   12800:	bl	14848 <table_set_double@@Base>
   12804:	add	r7, r7, #1
   12808:	cmp	r6, r7
   1280c:	bne	123f8 <table_dupe@@Base+0xd4>
   12810:	b	12948 <table_dupe@@Base+0x624>
   12814:	mov	r0, r4
   12818:	mov	r1, r5
   1281c:	mov	r2, r7
   12820:	bl	13944 <table_get_ldouble@@Base>
   12824:	mov	r0, sl
   12828:	mov	r1, r5
   1282c:	mov	r2, r7
   12830:	bl	148d0 <table_set_ldouble@@Base>
   12834:	add	r7, r7, #1
   12838:	cmp	r6, r7
   1283c:	bne	123f8 <table_dupe@@Base+0xd4>
   12840:	b	12948 <table_dupe@@Base+0x624>
   12844:	mov	r0, r4
   12848:	mov	r1, r5
   1284c:	mov	r2, r7
   12850:	bl	1395c <table_get_char@@Base>
   12854:	mov	r3, r0
   12858:	mov	r0, sl
   1285c:	mov	r1, r5
   12860:	mov	r2, r7
   12864:	bl	149e0 <table_set_char@@Base>
   12868:	add	r7, r7, #1
   1286c:	cmp	r6, r7
   12870:	bne	123f8 <table_dupe@@Base+0xd4>
   12874:	b	12948 <table_dupe@@Base+0x624>
   12878:	mov	r0, r4
   1287c:	mov	r1, r5
   12880:	mov	r2, r7
   12884:	bl	13974 <table_get_uchar@@Base>
   12888:	mov	r3, r0
   1288c:	mov	r0, sl
   12890:	mov	r1, r5
   12894:	mov	r2, r7
   12898:	bl	14a60 <table_set_uchar@@Base>
   1289c:	add	r7, r7, #1
   128a0:	cmp	r6, r7
   128a4:	bne	123f8 <table_dupe@@Base+0xd4>
   128a8:	b	12948 <table_dupe@@Base+0x624>
   128ac:	mov	r0, r4
   128b0:	mov	r1, r5
   128b4:	mov	r2, r7
   128b8:	bl	1398c <table_get_string@@Base>
   128bc:	mov	r3, r0
   128c0:	mov	r0, sl
   128c4:	mov	r1, r5
   128c8:	mov	r2, r7
   128cc:	bl	14958 <table_set_string@@Base>
   128d0:	add	r7, r7, #1
   128d4:	cmp	r6, r7
   128d8:	bne	123f8 <table_dupe@@Base+0xd4>
   128dc:	b	12948 <table_dupe@@Base+0x624>
   128e0:	mov	r0, r4
   128e4:	mov	r1, r5
   128e8:	mov	r2, r7
   128ec:	bl	1377c <table_get_bool@@Base>
   128f0:	mov	r3, r0
   128f4:	mov	r0, sl
   128f8:	mov	r1, r5
   128fc:	mov	r2, r7
   12900:	bl	13f1c <table_set_bool@@Base>
   12904:	add	r7, r7, #1
   12908:	cmp	r6, r7
   1290c:	bne	123f8 <table_dupe@@Base+0xd4>
   12910:	b	12948 <table_dupe@@Base+0x624>
   12914:	mov	r0, r4
   12918:	mov	r1, r5
   1291c:	mov	r2, r7
   12920:	bl	139a0 <table_get_ptr@@Base>
   12924:	str	r0, [sp, #8]
   12928:	mov	r0, sl
   1292c:	mov	r1, r5
   12930:	mov	r2, r7
   12934:	mov	r3, r9
   12938:	bl	14ae0 <table_set_ptr@@Base>
   1293c:	add	r7, r7, #1
   12940:	cmp	r6, r7
   12944:	bne	123f8 <table_dupe@@Base+0xd4>
   12948:	add	r5, r5, #1
   1294c:	cmp	r5, r8
   12950:	bne	123e4 <table_dupe@@Base+0xc0>
   12954:	mov	r0, sl
   12958:	sub	sp, fp, #28
   1295c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012960 <table_get_major_version@@Base>:
   12960:	mov	r0, #0
   12964:	bx	lr

00012968 <table_get_minor_version@@Base>:
   12968:	mov	r0, #0
   1296c:	bx	lr

00012970 <table_get_patch_version@@Base>:
   12970:	mov	r0, #0
   12974:	bx	lr

00012978 <table_get_version@@Base>:
   12978:	movw	r0, #22416	; 0x5790
   1297c:	movt	r0, #1
   12980:	bx	lr

00012984 <table_get_callback_length@@Base>:
   12984:	ldr	r0, [r0, #32]
   12988:	bx	lr

0001298c <table_register_callback@@Base>:
   1298c:	push	{r4, r5, r6, r7, fp, lr}
   12990:	add	fp, sp, #16
   12994:	mov	r5, r0
   12998:	ldr	r0, [r0, #32]
   1299c:	mov	r4, r3
   129a0:	mov	r6, r2
   129a4:	mov	r7, r1
   129a8:	cmp	r0, #1
   129ac:	blt	129e0 <table_register_callback@@Base+0x54>
   129b0:	ldr	r2, [r5, #36]	; 0x24
   129b4:	mov	r1, #0
   129b8:	ldr	r3, [r2, r1, lsl #2]
   129bc:	cmp	r3, r7
   129c0:	bne	129d4 <table_register_callback@@Base+0x48>
   129c4:	ldr	r3, [r5, #40]	; 0x28
   129c8:	ldr	r3, [r3, r1, lsl #2]
   129cc:	cmp	r3, r6
   129d0:	beq	12a64 <table_register_callback@@Base+0xd8>
   129d4:	add	r1, r1, #1
   129d8:	cmp	r1, r0
   129dc:	blt	129b8 <table_register_callback@@Base+0x2c>
   129e0:	ldr	r1, [r5, #48]	; 0x30
   129e4:	udiv	r2, r0, r1
   129e8:	mls	r2, r2, r1, r0
   129ec:	cmp	r2, #0
   129f0:	bne	12a3c <table_register_callback@@Base+0xb0>
   129f4:	ldr	r2, [r5, #52]	; 0x34
   129f8:	ldr	r0, [r5, #36]	; 0x24
   129fc:	add	r1, r2, r1
   12a00:	str	r1, [r5, #52]	; 0x34
   12a04:	lsl	r1, r1, #2
   12a08:	bl	11edc <realloc@plt>
   12a0c:	str	r0, [r5, #36]	; 0x24
   12a10:	ldr	r1, [r5, #52]	; 0x34
   12a14:	ldr	r0, [r5, #40]	; 0x28
   12a18:	lsl	r1, r1, #2
   12a1c:	bl	11edc <realloc@plt>
   12a20:	str	r0, [r5, #40]	; 0x28
   12a24:	ldr	r1, [r5, #52]	; 0x34
   12a28:	ldr	r0, [r5, #44]	; 0x2c
   12a2c:	lsl	r1, r1, #2
   12a30:	bl	11edc <realloc@plt>
   12a34:	str	r0, [r5, #44]	; 0x2c
   12a38:	ldr	r0, [r5, #32]
   12a3c:	ldr	r1, [r5, #36]	; 0x24
   12a40:	str	r7, [r1, r0, lsl #2]
   12a44:	ldr	r1, [r5, #40]	; 0x28
   12a48:	str	r6, [r1, r0, lsl #2]
   12a4c:	ldr	r1, [r5, #44]	; 0x2c
   12a50:	str	r4, [r1, r0, lsl #2]
   12a54:	ldr	r0, [r5, #32]
   12a58:	add	r0, r0, #1
   12a5c:	str	r0, [r5, #32]
   12a60:	pop	{r4, r5, r6, r7, fp, pc}
   12a64:	cmp	r1, #0
   12a68:	ldrne	r0, [r5, #44]	; 0x2c
   12a6c:	ldrne	r2, [r0, r1, lsl #2]
   12a70:	orrne	r2, r2, r4
   12a74:	strne	r2, [r0, r1, lsl #2]
   12a78:	popne	{r4, r5, r6, r7, fp, pc}
   12a7c:	b	129e0 <table_register_callback@@Base+0x54>

00012a80 <table_unregister_callback@@Base>:
   12a80:	push	{r4, r5, r6, sl, fp, lr}
   12a84:	add	fp, sp, #16
   12a88:	ldr	r4, [r0, #32]
   12a8c:	cmp	r4, #1
   12a90:	blt	12ac8 <table_unregister_callback@@Base+0x48>
   12a94:	ldr	r3, [r0, #36]	; 0x24
   12a98:	mov	r6, r0
   12a9c:	mov	r0, #0
   12aa0:	ldr	r5, [r3, r0, lsl #2]
   12aa4:	cmp	r5, r1
   12aa8:	bne	12abc <table_unregister_callback@@Base+0x3c>
   12aac:	ldr	r5, [r6, #40]	; 0x28
   12ab0:	ldr	r5, [r5, r0, lsl #2]
   12ab4:	cmp	r5, r2
   12ab8:	beq	12acc <table_unregister_callback@@Base+0x4c>
   12abc:	add	r0, r0, #1
   12ac0:	cmp	r0, r4
   12ac4:	blt	12aa0 <table_unregister_callback@@Base+0x20>
   12ac8:	pop	{r4, r5, r6, sl, fp, pc}
   12acc:	sub	r1, r4, #1
   12ad0:	cmp	r0, r1
   12ad4:	bge	12b64 <table_unregister_callback@@Base+0xe4>
   12ad8:	add	r1, r3, r0, lsl #2
   12adc:	ldr	r1, [r1, #4]
   12ae0:	str	r1, [r3, r0, lsl #2]
   12ae4:	ldr	r1, [r6, #40]	; 0x28
   12ae8:	add	r2, r1, r0, lsl #2
   12aec:	ldr	r2, [r2, #4]
   12af0:	str	r2, [r1, r0, lsl #2]
   12af4:	ldr	r1, [r6, #44]	; 0x2c
   12af8:	add	r2, r1, r0, lsl #2
   12afc:	ldr	r2, [r2, #4]
   12b00:	str	r2, [r1, r0, lsl #2]
   12b04:	add	r2, r0, #1
   12b08:	ldr	r1, [r6, #32]
   12b0c:	sub	r1, r1, #1
   12b10:	cmp	r2, r1
   12b14:	bge	12b64 <table_unregister_callback@@Base+0xe4>
   12b18:	ldr	r1, [r6, #36]	; 0x24
   12b1c:	add	r1, r1, r0, lsl #2
   12b20:	ldr	r2, [r1, #8]
   12b24:	str	r2, [r1, #4]
   12b28:	ldr	r1, [r6, #40]	; 0x28
   12b2c:	add	r1, r1, r0, lsl #2
   12b30:	ldr	r2, [r1, #8]
   12b34:	str	r2, [r1, #4]
   12b38:	ldr	r1, [r6, #44]	; 0x2c
   12b3c:	add	r1, r1, r0, lsl #2
   12b40:	ldr	r2, [r1, #8]
   12b44:	str	r2, [r1, #4]
   12b48:	add	r2, r0, #1
   12b4c:	add	r0, r0, #2
   12b50:	ldr	r1, [r6, #32]
   12b54:	sub	r1, r1, #1
   12b58:	cmp	r0, r1
   12b5c:	mov	r0, r2
   12b60:	blt	12b18 <table_unregister_callback@@Base+0x98>
   12b64:	str	r1, [r6, #32]
   12b68:	ldr	r2, [r6, #48]	; 0x30
   12b6c:	udiv	r0, r1, r2
   12b70:	mls	r0, r0, r2, r1
   12b74:	cmp	r0, #0
   12b78:	popne	{r4, r5, r6, sl, fp, pc}
   12b7c:	ldr	r1, [r6, #52]	; 0x34
   12b80:	ldr	r0, [r6, #36]	; 0x24
   12b84:	subs	r1, r1, r2
   12b88:	str	r1, [r6, #52]	; 0x34
   12b8c:	beq	12bc8 <table_unregister_callback@@Base+0x148>
   12b90:	lsl	r1, r1, #2
   12b94:	bl	11edc <realloc@plt>
   12b98:	str	r0, [r6, #36]	; 0x24
   12b9c:	ldr	r1, [r6, #52]	; 0x34
   12ba0:	ldr	r0, [r6, #40]	; 0x28
   12ba4:	lsl	r1, r1, #2
   12ba8:	bl	11edc <realloc@plt>
   12bac:	str	r0, [r6, #40]	; 0x28
   12bb0:	ldr	r1, [r6, #52]	; 0x34
   12bb4:	ldr	r0, [r6, #44]	; 0x2c
   12bb8:	lsl	r1, r1, #2
   12bbc:	bl	11edc <realloc@plt>
   12bc0:	str	r0, [r6, #44]	; 0x2c
   12bc4:	pop	{r4, r5, r6, sl, fp, pc}
   12bc8:	bl	11ed0 <free@plt>
   12bcc:	ldr	r0, [r6, #40]	; 0x28
   12bd0:	bl	11ed0 <free@plt>
   12bd4:	ldr	r0, [r6, #44]	; 0x2c
   12bd8:	bl	11ed0 <free@plt>
   12bdc:	mov	r0, #0
   12be0:	str	r0, [r6, #36]	; 0x24
   12be4:	str	r0, [r6, #40]	; 0x28
   12be8:	str	r0, [r6, #44]	; 0x2c
   12bec:	pop	{r4, r5, r6, sl, fp, pc}

00012bf0 <table_notify@@Base>:
   12bf0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12bf4:	add	fp, sp, #24
   12bf8:	sub	sp, sp, #8
   12bfc:	mov	r7, r0
   12c00:	ldr	r0, [r0, #32]
   12c04:	cmp	r0, #1
   12c08:	blt	12c64 <table_notify@@Base+0x74>
   12c0c:	mov	r4, r3
   12c10:	mov	r8, r2
   12c14:	mov	r9, r1
   12c18:	mov	r5, #0
   12c1c:	ldr	r1, [r7, #44]	; 0x2c
   12c20:	ldr	r1, [r1, r5, lsl #2]
   12c24:	tst	r1, r4
   12c28:	beq	12c58 <table_notify@@Base+0x68>
   12c2c:	ldr	r0, [r7, #36]	; 0x24
   12c30:	ldr	r1, [r7, #40]	; 0x28
   12c34:	mov	r2, r8
   12c38:	mov	r3, r4
   12c3c:	ldr	r6, [r0, r5, lsl #2]
   12c40:	ldr	r0, [r1, r5, lsl #2]
   12c44:	mov	r1, r9
   12c48:	str	r0, [sp]
   12c4c:	mov	r0, r7
   12c50:	blx	r6
   12c54:	ldr	r0, [r7, #32]
   12c58:	add	r5, r5, #1
   12c5c:	cmp	r5, r0
   12c60:	blt	12c1c <table_notify@@Base+0x2c>
   12c64:	sub	sp, fp, #24
   12c68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012c6c <table_column_init@@Base>:
   12c6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c70:	add	fp, sp, #24
   12c74:	ldr	r7, [r0]
   12c78:	mov	r0, r2
   12c7c:	mov	r4, r3
   12c80:	mov	r5, r2
   12c84:	mov	r6, r1
   12c88:	bl	11f24 <strlen@plt>
   12c8c:	add	r0, r0, #1
   12c90:	bl	11f00 <malloc@plt>
   12c94:	ldr	r8, [fp, #8]
   12c98:	add	r6, r6, r6, lsl #1
   12c9c:	cmp	r0, #0
   12ca0:	str	r0, [r7, r6, lsl #2]
   12ca4:	beq	12cb0 <table_column_init@@Base+0x44>
   12ca8:	mov	r1, r5
   12cac:	bl	11ee8 <strcpy@plt>
   12cb0:	add	r0, r7, r6, lsl #2
   12cb4:	stmib	r0, {r4, r8}
   12cb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012cbc <table_get_col_ptr@@Base>:
   12cbc:	ldr	r0, [r0]
   12cc0:	add	r1, r1, r1, lsl #1
   12cc4:	add	r0, r0, r1, lsl #2
   12cc8:	bx	lr

00012ccc <table_column_destroy@@Base>:
   12ccc:	ldr	r0, [r0]
   12cd0:	add	r1, r1, r1, lsl #1
   12cd4:	ldr	r0, [r0, r1, lsl #2]
   12cd8:	cmp	r0, #0
   12cdc:	bxeq	lr
   12ce0:	b	11ed0 <free@plt>

00012ce4 <table_get_column_length@@Base>:
   12ce4:	ldr	r0, [r0, #4]
   12ce8:	bx	lr

00012cec <table_get_column@@Base>:
   12cec:	push	{r4, r5, r6, r7, fp, lr}
   12cf0:	add	fp, sp, #16
   12cf4:	ldr	r6, [r0, #4]
   12cf8:	cmp	r6, #1
   12cfc:	blt	12d40 <table_get_column@@Base+0x54>
   12d00:	ldr	r7, [r0]
   12d04:	mov	r5, r1
   12d08:	mov	r4, #0
   12d0c:	ldr	r0, [r7]
   12d10:	mov	r1, r5
   12d14:	bl	11eb8 <strcmp@plt>
   12d18:	cmp	r0, #0
   12d1c:	beq	12d30 <table_get_column@@Base+0x44>
   12d20:	add	r4, r4, #1
   12d24:	add	r7, r7, #12
   12d28:	cmp	r4, r6
   12d2c:	blt	12d0c <table_get_column@@Base+0x20>
   12d30:	cmp	r4, r6
   12d34:	mvneq	r4, #0
   12d38:	mov	r0, r4
   12d3c:	pop	{r4, r5, r6, r7, fp, pc}
   12d40:	mov	r4, #0
   12d44:	cmp	r4, r6
   12d48:	mvneq	r4, #0
   12d4c:	mov	r0, r4
   12d50:	pop	{r4, r5, r6, r7, fp, pc}

00012d54 <table_get_column_name@@Base>:
   12d54:	ldr	r0, [r0]
   12d58:	add	r1, r1, r1, lsl #1
   12d5c:	ldr	r0, [r0, r1, lsl #2]
   12d60:	bx	lr

00012d64 <table_get_column_data_type@@Base>:
   12d64:	ldr	r0, [r0]
   12d68:	add	r1, r1, r1, lsl #1
   12d6c:	add	r0, r0, r1, lsl #2
   12d70:	ldr	r0, [r0, #4]
   12d74:	bx	lr

00012d78 <table_add_column@@Base>:
   12d78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d7c:	add	fp, sp, #28
   12d80:	sub	sp, sp, #4
   12d84:	mov	r4, r0
   12d88:	mov	r8, r1
   12d8c:	ldr	r0, [r0, #4]
   12d90:	mov	r9, r2
   12d94:	ldr	r1, [r4, #8]
   12d98:	udiv	r2, r0, r1
   12d9c:	mls	r0, r2, r1, r0
   12da0:	cmp	r0, #0
   12da4:	bne	12e10 <table_add_column@@Base+0x98>
   12da8:	ldr	r2, [r4, #12]
   12dac:	ldr	r0, [r4]
   12db0:	add	r1, r2, r1
   12db4:	str	r1, [r4, #12]
   12db8:	add	r1, r1, r1, lsl #1
   12dbc:	lsl	r1, r1, #2
   12dc0:	bl	11edc <realloc@plt>
   12dc4:	str	r0, [r4]
   12dc8:	mov	r0, r4
   12dcc:	bl	13a3c <table_get_row_length@@Base>
   12dd0:	cmp	r0, #1
   12dd4:	blt	12e10 <table_add_column@@Base+0x98>
   12dd8:	mov	r6, r0
   12ddc:	mov	r5, #0
   12de0:	mov	r0, r4
   12de4:	mov	r1, r5
   12de8:	bl	139d8 <table_get_row_ptr@@Base>
   12dec:	ldr	r1, [r4, #12]
   12df0:	mov	r7, r0
   12df4:	ldr	r0, [r0]
   12df8:	lsl	r1, r1, #2
   12dfc:	bl	11edc <realloc@plt>
   12e00:	add	r5, r5, #1
   12e04:	str	r0, [r7]
   12e08:	cmp	r6, r5
   12e0c:	bne	12de0 <table_add_column@@Base+0x68>
   12e10:	mov	r0, r4
   12e14:	bl	13a3c <table_get_row_length@@Base>
   12e18:	ldr	r6, [r4, #4]
   12e1c:	mov	r7, r0
   12e20:	mov	r0, r9
   12e24:	bl	13750 <table_get_default_compare_function_for_data_type@@Base>
   12e28:	ldr	r5, [r4]
   12e2c:	mov	sl, r0
   12e30:	mov	r0, r8
   12e34:	bl	11f24 <strlen@plt>
   12e38:	add	r0, r0, #1
   12e3c:	bl	11f00 <malloc@plt>
   12e40:	mov	r1, r8
   12e44:	add	r8, r6, r6, lsl #1
   12e48:	cmp	r0, #0
   12e4c:	str	r0, [r5, r8, lsl #2]
   12e50:	beq	12e58 <table_add_column@@Base+0xe0>
   12e54:	bl	11ee8 <strcpy@plt>
   12e58:	add	r0, r5, r8, lsl #2
   12e5c:	cmp	r7, #1
   12e60:	stmib	r0, {r9, sl}
   12e64:	blt	12e88 <table_add_column@@Base+0x110>
   12e68:	mov	r5, #0
   12e6c:	mov	r0, r4
   12e70:	mov	r1, r5
   12e74:	mov	r2, r6
   12e78:	bl	14b3c <table_cell_init@@Base>
   12e7c:	add	r5, r5, #1
   12e80:	cmp	r7, r5
   12e84:	bne	12e6c <table_add_column@@Base+0xf4>
   12e88:	ldr	r2, [r4, #4]
   12e8c:	mov	r0, r4
   12e90:	mvn	r1, #0
   12e94:	mov	r3, #8
   12e98:	bl	12bf0 <table_notify@@Base>
   12e9c:	ldr	r0, [r4, #4]
   12ea0:	add	r1, r0, #1
   12ea4:	str	r1, [r4, #4]
   12ea8:	sub	sp, fp, #28
   12eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012eb0 <table_remove_column@@Base>:
   12eb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12eb4:	add	fp, sp, #24
   12eb8:	mov	r5, r0
   12ebc:	ldr	r0, [r0]
   12ec0:	add	r6, r1, r1, lsl #1
   12ec4:	mov	r9, r1
   12ec8:	ldr	r0, [r0, r6, lsl #2]
   12ecc:	cmp	r0, #0
   12ed0:	beq	12ed8 <table_remove_column@@Base+0x28>
   12ed4:	bl	11ed0 <free@plt>
   12ed8:	ldr	r0, [r5, #4]
   12edc:	sub	r4, r0, #1
   12ee0:	cmp	r4, r9
   12ee4:	ble	12f14 <table_remove_column@@Base+0x64>
   12ee8:	sub	r0, r4, r9
   12eec:	lsl	r1, r6, #2
   12ef0:	ldr	r2, [r5]
   12ef4:	subs	r0, r0, #1
   12ef8:	add	r2, r2, r1
   12efc:	add	r1, r1, #12
   12f00:	vldr	d16, [r2, #12]
   12f04:	ldr	r3, [r2, #20]
   12f08:	str	r3, [r2, #8]
   12f0c:	vstr	d16, [r2]
   12f10:	bne	12ef0 <table_remove_column@@Base+0x40>
   12f14:	mov	r0, r5
   12f18:	bl	13a3c <table_get_row_length@@Base>
   12f1c:	cmp	r0, #1
   12f20:	blt	12fa8 <table_remove_column@@Base+0xf8>
   12f24:	mov	r6, r0
   12f28:	mov	r7, #0
   12f2c:	cmp	r4, r9
   12f30:	ble	12f80 <table_remove_column@@Base+0xd0>
   12f34:	mov	r0, r5
   12f38:	mov	r1, r7
   12f3c:	mov	r2, r9
   12f40:	bl	14b78 <table_cell_destroy@@Base>
   12f44:	mov	r0, r5
   12f48:	mov	r1, r7
   12f4c:	bl	139d8 <table_get_row_ptr@@Base>
   12f50:	mov	r1, r9
   12f54:	ldr	r2, [r0]
   12f58:	add	r3, r2, r1, lsl #2
   12f5c:	ldr	r3, [r3, #4]
   12f60:	str	r3, [r2, r1, lsl #2]
   12f64:	add	r1, r1, #1
   12f68:	cmp	r4, r1
   12f6c:	bne	12f54 <table_remove_column@@Base+0xa4>
   12f70:	add	r7, r7, #1
   12f74:	cmp	r7, r6
   12f78:	bne	12f34 <table_remove_column@@Base+0x84>
   12f7c:	b	12fa8 <table_remove_column@@Base+0xf8>
   12f80:	mov	r0, r5
   12f84:	mov	r1, r7
   12f88:	mov	r2, r9
   12f8c:	bl	14b78 <table_cell_destroy@@Base>
   12f90:	mov	r0, r5
   12f94:	mov	r1, r7
   12f98:	bl	139d8 <table_get_row_ptr@@Base>
   12f9c:	add	r7, r7, #1
   12fa0:	cmp	r6, r7
   12fa4:	bne	12f80 <table_remove_column@@Base+0xd0>
   12fa8:	ldmib	r5, {r0, r1}
   12fac:	sub	r0, r0, #1
   12fb0:	udiv	r2, r0, r1
   12fb4:	str	r0, [r5, #4]
   12fb8:	mls	r0, r2, r1, r0
   12fbc:	cmp	r0, #0
   12fc0:	bne	1302c <table_remove_column@@Base+0x17c>
   12fc4:	ldr	r2, [r5, #12]
   12fc8:	ldr	r0, [r5]
   12fcc:	sub	r1, r2, r1
   12fd0:	str	r1, [r5, #12]
   12fd4:	add	r1, r1, r1, lsl #1
   12fd8:	lsl	r1, r1, #2
   12fdc:	bl	11edc <realloc@plt>
   12fe0:	str	r0, [r5]
   12fe4:	mov	r0, r5
   12fe8:	bl	13a3c <table_get_row_length@@Base>
   12fec:	cmp	r0, #1
   12ff0:	blt	1302c <table_remove_column@@Base+0x17c>
   12ff4:	mov	r8, r0
   12ff8:	mov	r7, #0
   12ffc:	mov	r0, r5
   13000:	mov	r1, r7
   13004:	bl	139d8 <table_get_row_ptr@@Base>
   13008:	ldr	r1, [r5, #12]
   1300c:	mov	r6, r0
   13010:	ldr	r0, [r0]
   13014:	lsl	r1, r1, #2
   13018:	bl	11edc <realloc@plt>
   1301c:	add	r7, r7, #1
   13020:	str	r0, [r6]
   13024:	cmp	r8, r7
   13028:	bne	12ffc <table_remove_column@@Base+0x14c>
   1302c:	mov	r0, r5
   13030:	mvn	r1, #0
   13034:	mov	r2, r9
   13038:	mov	r3, #16
   1303c:	bl	12bf0 <table_notify@@Base>
   13040:	mov	r0, #0
   13044:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013048 <table_get_column_compare_function@@Base>:
   13048:	ldr	r0, [r0]
   1304c:	add	r1, r1, r1, lsl #1
   13050:	add	r0, r0, r1, lsl #2
   13054:	ldr	r0, [r0, #8]
   13058:	bx	lr

0001305c <table_set_column_compare_function@@Base>:
   1305c:	ldr	r0, [r0]
   13060:	add	r1, r1, r1, lsl #1
   13064:	add	r0, r0, r1, lsl #2
   13068:	str	r2, [r0, #8]
   1306c:	bx	lr

00013070 <table_compare_bool@@Base>:
   13070:	cmp	r0, #0
   13074:	beq	130a8 <table_compare_bool@@Base+0x38>
   13078:	cmp	r1, #0
   1307c:	moveq	r1, #1
   13080:	moveq	r0, r1
   13084:	bxeq	lr
   13088:	ldrb	r2, [r1]
   1308c:	ldrb	r0, [r0]
   13090:	mov	r1, #0
   13094:	cmp	r0, r2
   13098:	mvncc	r1, #0
   1309c:	movwhi	r1, #1
   130a0:	mov	r0, r1
   130a4:	bx	lr
   130a8:	cmp	r1, #0
   130ac:	mvnne	r1, #0
   130b0:	mov	r0, r1
   130b4:	bx	lr

000130b8 <table_compare_int@@Base>:
   130b8:	cmp	r0, #0
   130bc:	beq	130f0 <table_compare_int@@Base+0x38>
   130c0:	cmp	r1, #0
   130c4:	moveq	r1, #1
   130c8:	moveq	r0, r1
   130cc:	bxeq	lr
   130d0:	ldr	r2, [r1]
   130d4:	ldr	r0, [r0]
   130d8:	mov	r1, #0
   130dc:	cmp	r0, r2
   130e0:	mvnlt	r1, #0
   130e4:	movwgt	r1, #1
   130e8:	mov	r0, r1
   130ec:	bx	lr
   130f0:	cmp	r1, #0
   130f4:	mvnne	r1, #0
   130f8:	mov	r0, r1
   130fc:	bx	lr

00013100 <table_compare_uint@@Base>:
   13100:	cmp	r0, #0
   13104:	beq	13138 <table_compare_uint@@Base+0x38>
   13108:	cmp	r1, #0
   1310c:	moveq	r1, #1
   13110:	moveq	r0, r1
   13114:	bxeq	lr
   13118:	ldr	r2, [r1]
   1311c:	ldr	r0, [r0]
   13120:	mov	r1, #0
   13124:	cmp	r0, r2
   13128:	mvncc	r1, #0
   1312c:	movwhi	r1, #1
   13130:	mov	r0, r1
   13134:	bx	lr
   13138:	cmp	r1, #0
   1313c:	mvnne	r1, #0
   13140:	mov	r0, r1
   13144:	bx	lr

00013148 <table_compare_int8@@Base>:
   13148:	cmp	r0, #0
   1314c:	beq	13180 <table_compare_int8@@Base+0x38>
   13150:	cmp	r1, #0
   13154:	moveq	r1, #1
   13158:	moveq	r0, r1
   1315c:	bxeq	lr
   13160:	ldrsb	r2, [r1]
   13164:	ldrsb	r0, [r0]
   13168:	mov	r1, #0
   1316c:	cmp	r0, r2
   13170:	mvnlt	r1, #0
   13174:	movwgt	r1, #1
   13178:	mov	r0, r1
   1317c:	bx	lr
   13180:	cmp	r1, #0
   13184:	mvnne	r1, #0
   13188:	mov	r0, r1
   1318c:	bx	lr

00013190 <table_compare_uint8@@Base>:
   13190:	cmp	r0, #0
   13194:	beq	131c8 <table_compare_uint8@@Base+0x38>
   13198:	cmp	r1, #0
   1319c:	moveq	r1, #1
   131a0:	moveq	r0, r1
   131a4:	bxeq	lr
   131a8:	ldrb	r2, [r1]
   131ac:	ldrb	r0, [r0]
   131b0:	mov	r1, #0
   131b4:	cmp	r0, r2
   131b8:	mvncc	r1, #0
   131bc:	movwhi	r1, #1
   131c0:	mov	r0, r1
   131c4:	bx	lr
   131c8:	cmp	r1, #0
   131cc:	mvnne	r1, #0
   131d0:	mov	r0, r1
   131d4:	bx	lr

000131d8 <table_compare_int16@@Base>:
   131d8:	cmp	r0, #0
   131dc:	beq	13210 <table_compare_int16@@Base+0x38>
   131e0:	cmp	r1, #0
   131e4:	moveq	r1, #1
   131e8:	moveq	r0, r1
   131ec:	bxeq	lr
   131f0:	ldrsh	r2, [r1]
   131f4:	ldrsh	r0, [r0]
   131f8:	mov	r1, #0
   131fc:	cmp	r0, r2
   13200:	mvnlt	r1, #0
   13204:	movwgt	r1, #1
   13208:	mov	r0, r1
   1320c:	bx	lr
   13210:	cmp	r1, #0
   13214:	mvnne	r1, #0
   13218:	mov	r0, r1
   1321c:	bx	lr

00013220 <table_compare_uint16@@Base>:
   13220:	cmp	r0, #0
   13224:	beq	13258 <table_compare_uint16@@Base+0x38>
   13228:	cmp	r1, #0
   1322c:	moveq	r1, #1
   13230:	moveq	r0, r1
   13234:	bxeq	lr
   13238:	ldrh	r2, [r1]
   1323c:	ldrh	r0, [r0]
   13240:	mov	r1, #0
   13244:	cmp	r0, r2
   13248:	mvncc	r1, #0
   1324c:	movwhi	r1, #1
   13250:	mov	r0, r1
   13254:	bx	lr
   13258:	cmp	r1, #0
   1325c:	mvnne	r1, #0
   13260:	mov	r0, r1
   13264:	bx	lr

00013268 <table_compare_int32@@Base>:
   13268:	cmp	r0, #0
   1326c:	beq	132a0 <table_compare_int32@@Base+0x38>
   13270:	cmp	r1, #0
   13274:	moveq	r1, #1
   13278:	moveq	r0, r1
   1327c:	bxeq	lr
   13280:	ldr	r2, [r1]
   13284:	ldr	r0, [r0]
   13288:	mov	r1, #0
   1328c:	cmp	r0, r2
   13290:	mvnlt	r1, #0
   13294:	movwgt	r1, #1
   13298:	mov	r0, r1
   1329c:	bx	lr
   132a0:	cmp	r1, #0
   132a4:	mvnne	r1, #0
   132a8:	mov	r0, r1
   132ac:	bx	lr

000132b0 <table_compare_uint32@@Base>:
   132b0:	cmp	r0, #0
   132b4:	beq	132e8 <table_compare_uint32@@Base+0x38>
   132b8:	cmp	r1, #0
   132bc:	moveq	r1, #1
   132c0:	moveq	r0, r1
   132c4:	bxeq	lr
   132c8:	ldr	r2, [r1]
   132cc:	ldr	r0, [r0]
   132d0:	mov	r1, #0
   132d4:	cmp	r0, r2
   132d8:	mvncc	r1, #0
   132dc:	movwhi	r1, #1
   132e0:	mov	r0, r1
   132e4:	bx	lr
   132e8:	cmp	r1, #0
   132ec:	mvnne	r1, #0
   132f0:	mov	r0, r1
   132f4:	bx	lr

000132f8 <table_compare_int64@@Base>:
   132f8:	cmp	r0, #0
   132fc:	beq	13350 <table_compare_int64@@Base+0x58>
   13300:	cmp	r1, #0
   13304:	moveq	r1, #1
   13308:	moveq	r0, r1
   1330c:	bxeq	lr
   13310:	push	{r5, r7, fp, lr}
   13314:	add	fp, sp, #8
   13318:	ldm	r1, {r2, r7}
   1331c:	ldm	r0, {r0, r5}
   13320:	mov	r1, #0
   13324:	subs	r3, r0, r2
   13328:	sbcs	r3, r5, r7
   1332c:	movwlt	r1, #1
   13330:	cmp	r1, #0
   13334:	mvnne	r1, #0
   13338:	subs	r0, r2, r0
   1333c:	sbcs	r0, r7, r5
   13340:	movwlt	r1, #1
   13344:	pop	{r5, r7, fp, lr}
   13348:	mov	r0, r1
   1334c:	bx	lr
   13350:	cmp	r1, #0
   13354:	mvnne	r1, #0
   13358:	mov	r0, r1
   1335c:	bx	lr

00013360 <table_compare_uint64@@Base>:
   13360:	cmp	r0, #0
   13364:	beq	133b8 <table_compare_uint64@@Base+0x58>
   13368:	cmp	r1, #0
   1336c:	moveq	r1, #1
   13370:	moveq	r0, r1
   13374:	bxeq	lr
   13378:	push	{r5, r7, fp, lr}
   1337c:	add	fp, sp, #8
   13380:	ldm	r1, {r2, r7}
   13384:	ldm	r0, {r0, r5}
   13388:	mov	r1, #0
   1338c:	subs	r3, r0, r2
   13390:	sbcs	r3, r5, r7
   13394:	movwcc	r1, #1
   13398:	cmp	r1, #0
   1339c:	mvnne	r1, #0
   133a0:	subs	r0, r2, r0
   133a4:	sbcs	r0, r7, r5
   133a8:	movwcc	r1, #1
   133ac:	pop	{r5, r7, fp, lr}
   133b0:	mov	r0, r1
   133b4:	bx	lr
   133b8:	cmp	r1, #0
   133bc:	mvnne	r1, #0
   133c0:	mov	r0, r1
   133c4:	bx	lr

000133c8 <table_compare_short@@Base>:
   133c8:	cmp	r0, #0
   133cc:	beq	13400 <table_compare_short@@Base+0x38>
   133d0:	cmp	r1, #0
   133d4:	moveq	r1, #1
   133d8:	moveq	r0, r1
   133dc:	bxeq	lr
   133e0:	ldrsh	r2, [r1]
   133e4:	ldrsh	r0, [r0]
   133e8:	mov	r1, #0
   133ec:	cmp	r0, r2
   133f0:	mvnlt	r1, #0
   133f4:	movwgt	r1, #1
   133f8:	mov	r0, r1
   133fc:	bx	lr
   13400:	cmp	r1, #0
   13404:	mvnne	r1, #0
   13408:	mov	r0, r1
   1340c:	bx	lr

00013410 <table_compare_ushort@@Base>:
   13410:	cmp	r0, #0
   13414:	beq	13448 <table_compare_ushort@@Base+0x38>
   13418:	cmp	r1, #0
   1341c:	moveq	r1, #1
   13420:	moveq	r0, r1
   13424:	bxeq	lr
   13428:	ldrh	r2, [r1]
   1342c:	ldrh	r0, [r0]
   13430:	mov	r1, #0
   13434:	cmp	r0, r2
   13438:	mvncc	r1, #0
   1343c:	movwhi	r1, #1
   13440:	mov	r0, r1
   13444:	bx	lr
   13448:	cmp	r1, #0
   1344c:	mvnne	r1, #0
   13450:	mov	r0, r1
   13454:	bx	lr

00013458 <table_compare_long@@Base>:
   13458:	cmp	r0, #0
   1345c:	beq	13490 <table_compare_long@@Base+0x38>
   13460:	cmp	r1, #0
   13464:	moveq	r1, #1
   13468:	moveq	r0, r1
   1346c:	bxeq	lr
   13470:	ldr	r2, [r1]
   13474:	ldr	r0, [r0]
   13478:	mov	r1, #0
   1347c:	cmp	r0, r2
   13480:	mvnlt	r1, #0
   13484:	movwgt	r1, #1
   13488:	mov	r0, r1
   1348c:	bx	lr
   13490:	cmp	r1, #0
   13494:	mvnne	r1, #0
   13498:	mov	r0, r1
   1349c:	bx	lr

000134a0 <table_compare_ulong@@Base>:
   134a0:	cmp	r0, #0
   134a4:	beq	134d8 <table_compare_ulong@@Base+0x38>
   134a8:	cmp	r1, #0
   134ac:	moveq	r1, #1
   134b0:	moveq	r0, r1
   134b4:	bxeq	lr
   134b8:	ldr	r2, [r1]
   134bc:	ldr	r0, [r0]
   134c0:	mov	r1, #0
   134c4:	cmp	r0, r2
   134c8:	mvncc	r1, #0
   134cc:	movwhi	r1, #1
   134d0:	mov	r0, r1
   134d4:	bx	lr
   134d8:	cmp	r1, #0
   134dc:	mvnne	r1, #0
   134e0:	mov	r0, r1
   134e4:	bx	lr

000134e8 <table_compare_llong@@Base>:
   134e8:	cmp	r0, #0
   134ec:	beq	13540 <table_compare_llong@@Base+0x58>
   134f0:	cmp	r1, #0
   134f4:	moveq	r1, #1
   134f8:	moveq	r0, r1
   134fc:	bxeq	lr
   13500:	push	{r5, r7, fp, lr}
   13504:	add	fp, sp, #8
   13508:	ldm	r1, {r2, r7}
   1350c:	ldm	r0, {r0, r5}
   13510:	mov	r1, #0
   13514:	subs	r3, r0, r2
   13518:	sbcs	r3, r5, r7
   1351c:	movwlt	r1, #1
   13520:	cmp	r1, #0
   13524:	mvnne	r1, #0
   13528:	subs	r0, r2, r0
   1352c:	sbcs	r0, r7, r5
   13530:	movwlt	r1, #1
   13534:	pop	{r5, r7, fp, lr}
   13538:	mov	r0, r1
   1353c:	bx	lr
   13540:	cmp	r1, #0
   13544:	mvnne	r1, #0
   13548:	mov	r0, r1
   1354c:	bx	lr

00013550 <table_compare_ullong@@Base>:
   13550:	cmp	r0, #0
   13554:	beq	13588 <table_compare_ullong@@Base+0x38>
   13558:	cmp	r1, #0
   1355c:	moveq	r1, #1
   13560:	moveq	r0, r1
   13564:	bxeq	lr
   13568:	ldr	r2, [r1]
   1356c:	ldr	r0, [r0]
   13570:	mov	r1, #0
   13574:	cmp	r0, r2
   13578:	mvncc	r1, #0
   1357c:	movwhi	r1, #1
   13580:	mov	r0, r1
   13584:	bx	lr
   13588:	cmp	r1, #0
   1358c:	mvnne	r1, #0
   13590:	mov	r0, r1
   13594:	bx	lr

00013598 <table_compare_float@@Base>:
   13598:	cmp	r0, #0
   1359c:	beq	135d4 <table_compare_float@@Base+0x3c>
   135a0:	cmp	r1, #0
   135a4:	moveq	r1, #1
   135a8:	moveq	r0, r1
   135ac:	bxeq	lr
   135b0:	vldr	s0, [r1]
   135b4:	vldr	s2, [r0]
   135b8:	mov	r1, #0
   135bc:	vcmpe.f32	s2, s0
   135c0:	vmrs	APSR_nzcv, fpscr
   135c4:	mvnmi	r1, #0
   135c8:	movwgt	r1, #1
   135cc:	mov	r0, r1
   135d0:	bx	lr
   135d4:	cmp	r1, #0
   135d8:	mvnne	r1, #0
   135dc:	mov	r0, r1
   135e0:	bx	lr

000135e4 <table_compare_double@@Base>:
   135e4:	cmp	r0, #0
   135e8:	beq	13620 <table_compare_double@@Base+0x3c>
   135ec:	cmp	r1, #0
   135f0:	moveq	r1, #1
   135f4:	moveq	r0, r1
   135f8:	bxeq	lr
   135fc:	vldr	d16, [r1]
   13600:	vldr	d17, [r0]
   13604:	mov	r1, #0
   13608:	vcmpe.f64	d17, d16
   1360c:	vmrs	APSR_nzcv, fpscr
   13610:	mvnmi	r1, #0
   13614:	movwgt	r1, #1
   13618:	mov	r0, r1
   1361c:	bx	lr
   13620:	cmp	r1, #0
   13624:	mvnne	r1, #0
   13628:	mov	r0, r1
   1362c:	bx	lr

00013630 <table_compare_ldouble@@Base>:
   13630:	cmp	r0, #0
   13634:	beq	1366c <table_compare_ldouble@@Base+0x3c>
   13638:	cmp	r1, #0
   1363c:	moveq	r1, #1
   13640:	moveq	r0, r1
   13644:	bxeq	lr
   13648:	vldr	d16, [r1]
   1364c:	vldr	d17, [r0]
   13650:	mov	r1, #0
   13654:	vcmpe.f64	d17, d16
   13658:	vmrs	APSR_nzcv, fpscr
   1365c:	mvnmi	r1, #0
   13660:	movwgt	r1, #1
   13664:	mov	r0, r1
   13668:	bx	lr
   1366c:	cmp	r1, #0
   13670:	mvnne	r1, #0
   13674:	mov	r0, r1
   13678:	bx	lr

0001367c <table_compare_char@@Base>:
   1367c:	cmp	r0, #0
   13680:	beq	136b4 <table_compare_char@@Base+0x38>
   13684:	cmp	r1, #0
   13688:	moveq	r1, #1
   1368c:	moveq	r0, r1
   13690:	bxeq	lr
   13694:	ldrb	r2, [r1]
   13698:	ldrb	r0, [r0]
   1369c:	mov	r1, #0
   136a0:	cmp	r0, r2
   136a4:	mvncc	r1, #0
   136a8:	movwhi	r1, #1
   136ac:	mov	r0, r1
   136b0:	bx	lr
   136b4:	cmp	r1, #0
   136b8:	mvnne	r1, #0
   136bc:	mov	r0, r1
   136c0:	bx	lr

000136c4 <table_compare_uchar@@Base>:
   136c4:	cmp	r0, #0
   136c8:	beq	136fc <table_compare_uchar@@Base+0x38>
   136cc:	cmp	r1, #0
   136d0:	moveq	r1, #1
   136d4:	moveq	r0, r1
   136d8:	bxeq	lr
   136dc:	ldrb	r2, [r1]
   136e0:	ldrb	r0, [r0]
   136e4:	mov	r1, #0
   136e8:	cmp	r0, r2
   136ec:	mvncc	r1, #0
   136f0:	movwhi	r1, #1
   136f4:	mov	r0, r1
   136f8:	bx	lr
   136fc:	cmp	r1, #0
   13700:	mvnne	r1, #0
   13704:	mov	r0, r1
   13708:	bx	lr

0001370c <table_compare_string@@Base>:
   1370c:	cmp	r0, #0
   13710:	beq	13728 <table_compare_string@@Base+0x1c>
   13714:	cmp	r1, #0
   13718:	moveq	r1, #1
   1371c:	moveq	r0, r1
   13720:	bxeq	lr
   13724:	b	11eb8 <strcmp@plt>
   13728:	cmp	r1, #0
   1372c:	mvnne	r1, #0
   13730:	mov	r0, r1
   13734:	bx	lr

00013738 <table_compare_ptr@@Base>:
   13738:	mov	r2, #0
   1373c:	cmp	r0, r1
   13740:	mvncc	r2, #0
   13744:	movwhi	r2, #1
   13748:	mov	r0, r2
   1374c:	bx	lr

00013750 <table_get_default_compare_function_for_data_type@@Base>:
   13750:	cmp	r0, #23
   13754:	movwls	r1, #22272	; 0x5700
   13758:	movhi	r0, #0
   1375c:	movtls	r1, #1
   13760:	ldrls	r0, [r1, r0, lsl #2]
   13764:	bx	lr

00013768 <table_get@@Base>:
   13768:	push	{fp, lr}
   1376c:	mov	fp, sp
   13770:	bl	14b5c <table_get_cell_ptr@@Base>
   13774:	ldr	r0, [r0]
   13778:	pop	{fp, pc}

0001377c <table_get_bool@@Base>:
   1377c:	push	{fp, lr}
   13780:	mov	fp, sp
   13784:	bl	14b5c <table_get_cell_ptr@@Base>
   13788:	ldr	r0, [r0]
   1378c:	ldrb	r0, [r0]
   13790:	pop	{fp, pc}

00013794 <table_get_int@@Base>:
   13794:	push	{fp, lr}
   13798:	mov	fp, sp
   1379c:	bl	14b5c <table_get_cell_ptr@@Base>
   137a0:	ldr	r0, [r0]
   137a4:	ldr	r0, [r0]
   137a8:	pop	{fp, pc}

000137ac <table_get_uint@@Base>:
   137ac:	push	{fp, lr}
   137b0:	mov	fp, sp
   137b4:	bl	14b5c <table_get_cell_ptr@@Base>
   137b8:	ldr	r0, [r0]
   137bc:	ldr	r0, [r0]
   137c0:	pop	{fp, pc}

000137c4 <table_get_int8@@Base>:
   137c4:	push	{fp, lr}
   137c8:	mov	fp, sp
   137cc:	bl	14b5c <table_get_cell_ptr@@Base>
   137d0:	ldr	r0, [r0]
   137d4:	ldrsb	r0, [r0]
   137d8:	pop	{fp, pc}

000137dc <table_get_uint8@@Base>:
   137dc:	push	{fp, lr}
   137e0:	mov	fp, sp
   137e4:	bl	14b5c <table_get_cell_ptr@@Base>
   137e8:	ldr	r0, [r0]
   137ec:	ldrb	r0, [r0]
   137f0:	pop	{fp, pc}

000137f4 <table_get_int16@@Base>:
   137f4:	push	{fp, lr}
   137f8:	mov	fp, sp
   137fc:	bl	14b5c <table_get_cell_ptr@@Base>
   13800:	ldr	r0, [r0]
   13804:	ldrsh	r0, [r0]
   13808:	pop	{fp, pc}

0001380c <table_get_uint16@@Base>:
   1380c:	push	{fp, lr}
   13810:	mov	fp, sp
   13814:	bl	14b5c <table_get_cell_ptr@@Base>
   13818:	ldr	r0, [r0]
   1381c:	ldrh	r0, [r0]
   13820:	pop	{fp, pc}

00013824 <table_get_int32@@Base>:
   13824:	push	{fp, lr}
   13828:	mov	fp, sp
   1382c:	bl	14b5c <table_get_cell_ptr@@Base>
   13830:	ldr	r0, [r0]
   13834:	ldr	r0, [r0]
   13838:	pop	{fp, pc}

0001383c <table_get_uint32@@Base>:
   1383c:	push	{fp, lr}
   13840:	mov	fp, sp
   13844:	bl	14b5c <table_get_cell_ptr@@Base>
   13848:	ldr	r0, [r0]
   1384c:	ldr	r0, [r0]
   13850:	pop	{fp, pc}

00013854 <table_get_int64@@Base>:
   13854:	push	{fp, lr}
   13858:	mov	fp, sp
   1385c:	bl	14b5c <table_get_cell_ptr@@Base>
   13860:	ldr	r0, [r0]
   13864:	ldrd	r0, [r0]
   13868:	pop	{fp, pc}

0001386c <table_get_uint64@@Base>:
   1386c:	push	{fp, lr}
   13870:	mov	fp, sp
   13874:	bl	14b5c <table_get_cell_ptr@@Base>
   13878:	ldr	r0, [r0]
   1387c:	ldrd	r0, [r0]
   13880:	pop	{fp, pc}

00013884 <table_get_short@@Base>:
   13884:	push	{fp, lr}
   13888:	mov	fp, sp
   1388c:	bl	14b5c <table_get_cell_ptr@@Base>
   13890:	ldr	r0, [r0]
   13894:	ldrsh	r0, [r0]
   13898:	pop	{fp, pc}

0001389c <table_get_ushort@@Base>:
   1389c:	push	{fp, lr}
   138a0:	mov	fp, sp
   138a4:	bl	14b5c <table_get_cell_ptr@@Base>
   138a8:	ldr	r0, [r0]
   138ac:	ldrh	r0, [r0]
   138b0:	pop	{fp, pc}

000138b4 <table_get_long@@Base>:
   138b4:	push	{fp, lr}
   138b8:	mov	fp, sp
   138bc:	bl	14b5c <table_get_cell_ptr@@Base>
   138c0:	ldr	r0, [r0]
   138c4:	ldr	r0, [r0]
   138c8:	pop	{fp, pc}

000138cc <table_get_ulong@@Base>:
   138cc:	push	{fp, lr}
   138d0:	mov	fp, sp
   138d4:	bl	14b5c <table_get_cell_ptr@@Base>
   138d8:	ldr	r0, [r0]
   138dc:	ldr	r0, [r0]
   138e0:	pop	{fp, pc}

000138e4 <table_get_llong@@Base>:
   138e4:	push	{fp, lr}
   138e8:	mov	fp, sp
   138ec:	bl	14b5c <table_get_cell_ptr@@Base>
   138f0:	ldr	r0, [r0]
   138f4:	ldrd	r0, [r0]
   138f8:	pop	{fp, pc}

000138fc <table_get_ullong@@Base>:
   138fc:	push	{fp, lr}
   13900:	mov	fp, sp
   13904:	bl	14b5c <table_get_cell_ptr@@Base>
   13908:	ldr	r0, [r0]
   1390c:	ldrd	r0, [r0]
   13910:	pop	{fp, pc}

00013914 <table_get_float@@Base>:
   13914:	push	{fp, lr}
   13918:	mov	fp, sp
   1391c:	bl	14b5c <table_get_cell_ptr@@Base>
   13920:	ldr	r0, [r0]
   13924:	vldr	s0, [r0]
   13928:	pop	{fp, pc}

0001392c <table_get_double@@Base>:
   1392c:	push	{fp, lr}
   13930:	mov	fp, sp
   13934:	bl	14b5c <table_get_cell_ptr@@Base>
   13938:	ldr	r0, [r0]
   1393c:	vldr	d0, [r0]
   13940:	pop	{fp, pc}

00013944 <table_get_ldouble@@Base>:
   13944:	push	{fp, lr}
   13948:	mov	fp, sp
   1394c:	bl	14b5c <table_get_cell_ptr@@Base>
   13950:	ldr	r0, [r0]
   13954:	vldr	d0, [r0]
   13958:	pop	{fp, pc}

0001395c <table_get_char@@Base>:
   1395c:	push	{fp, lr}
   13960:	mov	fp, sp
   13964:	bl	14b5c <table_get_cell_ptr@@Base>
   13968:	ldr	r0, [r0]
   1396c:	ldrb	r0, [r0]
   13970:	pop	{fp, pc}

00013974 <table_get_uchar@@Base>:
   13974:	push	{fp, lr}
   13978:	mov	fp, sp
   1397c:	bl	14b5c <table_get_cell_ptr@@Base>
   13980:	ldr	r0, [r0]
   13984:	ldrb	r0, [r0]
   13988:	pop	{fp, pc}

0001398c <table_get_string@@Base>:
   1398c:	push	{fp, lr}
   13990:	mov	fp, sp
   13994:	bl	14b5c <table_get_cell_ptr@@Base>
   13998:	ldr	r0, [r0]
   1399c:	pop	{fp, pc}

000139a0 <table_get_ptr@@Base>:
   139a0:	push	{fp, lr}
   139a4:	mov	fp, sp
   139a8:	bl	14b5c <table_get_cell_ptr@@Base>
   139ac:	ldr	r0, [r0]
   139b0:	pop	{fp, pc}

000139b4 <table_row_init@@Base>:
   139b4:	push	{r4, r5, fp, lr}
   139b8:	add	fp, sp, #8
   139bc:	mov	r4, r1
   139c0:	ldr	r1, [r0, #12]
   139c4:	ldr	r5, [r0, #16]
   139c8:	lsl	r0, r1, #2
   139cc:	bl	11f00 <malloc@plt>
   139d0:	str	r0, [r5, r4, lsl #2]
   139d4:	pop	{r4, r5, fp, pc}

000139d8 <table_get_row_ptr@@Base>:
   139d8:	ldr	r0, [r0, #16]
   139dc:	add	r0, r0, r1, lsl #2
   139e0:	bx	lr

000139e4 <table_row_destroy@@Base>:
   139e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139e8:	add	fp, sp, #24
   139ec:	mov	r4, r1
   139f0:	mov	r5, r0
   139f4:	bl	12ce4 <table_get_column_length@@Base>
   139f8:	ldr	r8, [r5, #16]
   139fc:	cmp	r0, #1
   13a00:	blt	13a28 <table_row_destroy@@Base+0x44>
   13a04:	mov	r6, r0
   13a08:	mov	r7, #0
   13a0c:	mov	r0, r5
   13a10:	mov	r1, r4
   13a14:	mov	r2, r7
   13a18:	bl	14b78 <table_cell_destroy@@Base>
   13a1c:	add	r7, r7, #1
   13a20:	cmp	r6, r7
   13a24:	bne	13a0c <table_row_destroy@@Base+0x28>
   13a28:	ldr	r0, [r8, r4, lsl #2]
   13a2c:	cmp	r0, #0
   13a30:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a34:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a38:	b	11ed0 <free@plt>

00013a3c <table_get_row_length@@Base>:
   13a3c:	ldr	r0, [r0, #20]
   13a40:	bx	lr

00013a44 <table_add_row@@Base>:
   13a44:	push	{r4, r5, r6, r7, fp, lr}
   13a48:	add	fp, sp, #16
   13a4c:	ldr	r5, [r0, #20]
   13a50:	ldr	r1, [r0, #24]
   13a54:	mov	r4, r0
   13a58:	udiv	r0, r5, r1
   13a5c:	mls	r0, r0, r1, r5
   13a60:	cmp	r0, #0
   13a64:	bne	13a88 <table_add_row@@Base+0x44>
   13a68:	ldr	r2, [r4, #28]
   13a6c:	ldr	r0, [r4, #16]
   13a70:	add	r1, r2, r1
   13a74:	str	r1, [r4, #28]
   13a78:	lsl	r1, r1, #2
   13a7c:	bl	11edc <realloc@plt>
   13a80:	str	r0, [r4, #16]
   13a84:	ldr	r5, [r4, #20]
   13a88:	mov	r0, r4
   13a8c:	bl	12ce4 <table_get_column_length@@Base>
   13a90:	mov	r6, r0
   13a94:	ldr	r0, [r4, #12]
   13a98:	ldr	r7, [r4, #16]
   13a9c:	lsl	r0, r0, #2
   13aa0:	bl	11f00 <malloc@plt>
   13aa4:	cmp	r6, #1
   13aa8:	str	r0, [r7, r5, lsl #2]
   13aac:	blt	13ad0 <table_add_row@@Base+0x8c>
   13ab0:	mov	r7, #0
   13ab4:	mov	r0, r4
   13ab8:	mov	r1, r5
   13abc:	mov	r2, r7
   13ac0:	bl	14b3c <table_cell_init@@Base>
   13ac4:	add	r7, r7, #1
   13ac8:	cmp	r6, r7
   13acc:	bne	13ab4 <table_add_row@@Base+0x70>
   13ad0:	ldr	r1, [r4, #20]
   13ad4:	mov	r0, r4
   13ad8:	mvn	r2, #0
   13adc:	mov	r3, #2
   13ae0:	bl	12bf0 <table_notify@@Base>
   13ae4:	ldr	r0, [r4, #20]
   13ae8:	add	r1, r0, #1
   13aec:	str	r1, [r4, #20]
   13af0:	pop	{r4, r5, r6, r7, fp, pc}

00013af4 <table_remove_row@@Base>:
   13af4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13af8:	add	fp, sp, #24
   13afc:	ldr	r8, [r0, #20]
   13b00:	mov	r4, r1
   13b04:	mov	r5, r0
   13b08:	bl	12ce4 <table_get_column_length@@Base>
   13b0c:	cmp	r0, #1
   13b10:	blt	13b5c <table_remove_row@@Base+0x68>
   13b14:	mov	r6, r0
   13b18:	mov	r7, #0
   13b1c:	mov	r0, r5
   13b20:	mov	r1, r7
   13b24:	bl	12d64 <table_get_column_data_type@@Base>
   13b28:	cmp	r0, #23
   13b2c:	beq	13b50 <table_remove_row@@Base+0x5c>
   13b30:	mov	r0, r5
   13b34:	mov	r1, r4
   13b38:	mov	r2, r7
   13b3c:	bl	14b5c <table_get_cell_ptr@@Base>
   13b40:	ldr	r0, [r0]
   13b44:	cmp	r0, #0
   13b48:	beq	13b50 <table_remove_row@@Base+0x5c>
   13b4c:	bl	11ed0 <free@plt>
   13b50:	add	r7, r7, #1
   13b54:	cmp	r6, r7
   13b58:	bne	13b1c <table_remove_row@@Base+0x28>
   13b5c:	ldr	r0, [r5, #16]
   13b60:	ldr	r0, [r0, r4, lsl #2]
   13b64:	cmp	r0, #0
   13b68:	beq	13b70 <table_remove_row@@Base+0x7c>
   13b6c:	bl	11ed0 <free@plt>
   13b70:	sub	r0, r8, #1
   13b74:	cmp	r0, r4
   13b78:	ble	13b9c <table_remove_row@@Base+0xa8>
   13b7c:	mov	r1, r4
   13b80:	ldr	r2, [r5, #16]
   13b84:	add	r3, r2, r1, lsl #2
   13b88:	ldr	r3, [r3, #4]
   13b8c:	str	r3, [r2, r1, lsl #2]
   13b90:	add	r1, r1, #1
   13b94:	cmp	r0, r1
   13b98:	bne	13b80 <table_remove_row@@Base+0x8c>
   13b9c:	ldr	r0, [r5, #20]
   13ba0:	ldr	r1, [r5, #24]
   13ba4:	sub	r0, r0, #1
   13ba8:	udiv	r2, r0, r1
   13bac:	str	r0, [r5, #20]
   13bb0:	mls	r0, r2, r1, r0
   13bb4:	cmp	r0, #0
   13bb8:	bne	13bd8 <table_remove_row@@Base+0xe4>
   13bbc:	ldr	r2, [r5, #28]
   13bc0:	ldr	r0, [r5, #16]
   13bc4:	sub	r1, r2, r1
   13bc8:	str	r1, [r5, #28]
   13bcc:	lsl	r1, r1, #2
   13bd0:	bl	11edc <realloc@plt>
   13bd4:	str	r0, [r5, #16]
   13bd8:	mov	r0, r5
   13bdc:	mov	r1, r4
   13be0:	mvn	r2, #0
   13be4:	mov	r3, #4
   13be8:	bl	12bf0 <table_notify@@Base>
   13bec:	mov	r0, #0
   13bf0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013bf4 <table_set_row_ptr@@Base>:
   13bf4:	ldr	r2, [r2]
   13bf8:	ldr	r0, [r0, #16]
   13bfc:	str	r2, [r0, r1, lsl #2]
   13c00:	bx	lr

00013c04 <table_set@@Base>:
   13c04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c08:	add	fp, sp, #24
   13c0c:	mov	r8, r3
   13c10:	mov	r4, r2
   13c14:	mov	r9, r1
   13c18:	mov	r6, r0
   13c1c:	bl	14b5c <table_get_cell_ptr@@Base>
   13c20:	mov	r5, r0
   13c24:	mov	r0, r6
   13c28:	mov	r1, r4
   13c2c:	bl	12cbc <table_get_col_ptr@@Base>
   13c30:	ldr	r1, [fp, #8]
   13c34:	mvn	r7, #0
   13c38:	cmp	r1, #23
   13c3c:	bhi	13f00 <table_set@@Base+0x2fc>
   13c40:	add	r2, pc, #0
   13c44:	ldr	pc, [r2, r1, lsl #2]
   13c48:	andeq	r3, r1, r8, lsr #25
   13c4c:			; <UNDEFINED> instruction: 0x00013cb8
   13c50:	andeq	r3, r1, r8, asr #25
   13c54:	ldrdeq	r3, [r1], -r8
   13c58:	andeq	r3, r1, r8, ror #25
   13c5c:	strdeq	r3, [r1], -r8
   13c60:	andeq	r3, r1, r8, lsl #26
   13c64:	andeq	r3, r1, r8, lsl sp
   13c68:	andeq	r3, r1, r8, lsr #26
   13c6c:	andeq	r3, r1, r8, lsr sp
   13c70:	andeq	r3, r1, r8, asr #26
   13c74:	andeq	r3, r1, r8, asr sp
   13c78:	muleq	r1, r0, sp
   13c7c:	andeq	r3, r1, r0, lsr #27
   13c80:			; <UNDEFINED> instruction: 0x00013db0
   13c84:	andeq	r3, r1, r0, asr #27
   13c88:	ldrdeq	r3, [r1], -r0
   13c8c:	andeq	r3, r1, r8, lsl #28
   13c90:	andeq	r3, r1, r8, lsl lr
   13c94:	andeq	r3, r1, r8, asr lr
   13c98:	andeq	r3, r1, r8, ror #28
   13c9c:	andeq	r3, r1, r8, ror lr
   13ca0:			; <UNDEFINED> instruction: 0x00013eb4
   13ca4:	andeq	r3, r1, r8, lsl #30
   13ca8:	ldr	r0, [r0, #4]
   13cac:	cmp	r0, #0
   13cb0:	bne	13f00 <table_set@@Base+0x2fc>
   13cb4:	b	13ddc <table_set@@Base+0x1d8>
   13cb8:	ldr	r0, [r0, #4]
   13cbc:	cmp	r0, #1
   13cc0:	beq	13ddc <table_set@@Base+0x1d8>
   13cc4:	b	13f00 <table_set@@Base+0x2fc>
   13cc8:	ldr	r0, [r0, #4]
   13ccc:	cmp	r0, #2
   13cd0:	beq	13ec0 <table_set@@Base+0x2bc>
   13cd4:	b	13f00 <table_set@@Base+0x2fc>
   13cd8:	ldr	r0, [r0, #4]
   13cdc:	cmp	r0, #3
   13ce0:	beq	13ec0 <table_set@@Base+0x2bc>
   13ce4:	b	13f00 <table_set@@Base+0x2fc>
   13ce8:	ldr	r0, [r0, #4]
   13cec:	cmp	r0, #4
   13cf0:	beq	13d64 <table_set@@Base+0x160>
   13cf4:	b	13f00 <table_set@@Base+0x2fc>
   13cf8:	ldr	r0, [r0, #4]
   13cfc:	cmp	r0, #5
   13d00:	beq	13d64 <table_set@@Base+0x160>
   13d04:	b	13f00 <table_set@@Base+0x2fc>
   13d08:	ldr	r0, [r0, #4]
   13d0c:	cmp	r0, #6
   13d10:	beq	13ddc <table_set@@Base+0x1d8>
   13d14:	b	13f00 <table_set@@Base+0x2fc>
   13d18:	ldr	r0, [r0, #4]
   13d1c:	cmp	r0, #7
   13d20:	beq	13ddc <table_set@@Base+0x1d8>
   13d24:	b	13f00 <table_set@@Base+0x2fc>
   13d28:	ldr	r0, [r0, #4]
   13d2c:	cmp	r0, #8
   13d30:	beq	13e24 <table_set@@Base+0x220>
   13d34:	b	13f00 <table_set@@Base+0x2fc>
   13d38:	ldr	r0, [r0, #4]
   13d3c:	cmp	r0, #9
   13d40:	beq	13e24 <table_set@@Base+0x220>
   13d44:	b	13f00 <table_set@@Base+0x2fc>
   13d48:	ldr	r0, [r0, #4]
   13d4c:	cmp	r0, #10
   13d50:	beq	13d64 <table_set@@Base+0x160>
   13d54:	b	13f00 <table_set@@Base+0x2fc>
   13d58:	ldr	r0, [r0, #4]
   13d5c:	cmp	r0, #11
   13d60:	bne	13f00 <table_set@@Base+0x2fc>
   13d64:	ldr	r0, [r5]
   13d68:	cmp	r0, #0
   13d6c:	bne	13d84 <table_set@@Base+0x180>
   13d70:	mov	r0, #2
   13d74:	bl	11f00 <malloc@plt>
   13d78:	cmp	r0, #0
   13d7c:	str	r0, [r5]
   13d80:	beq	13f00 <table_set@@Base+0x2fc>
   13d84:	ldrh	r1, [r8]
   13d88:	strh	r1, [r0]
   13d8c:	b	13ee8 <table_set@@Base+0x2e4>
   13d90:	ldr	r0, [r0, #4]
   13d94:	cmp	r0, #12
   13d98:	beq	13ddc <table_set@@Base+0x1d8>
   13d9c:	b	13f00 <table_set@@Base+0x2fc>
   13da0:	ldr	r0, [r0, #4]
   13da4:	cmp	r0, #13
   13da8:	beq	13ddc <table_set@@Base+0x1d8>
   13dac:	b	13f00 <table_set@@Base+0x2fc>
   13db0:	ldr	r0, [r0, #4]
   13db4:	cmp	r0, #14
   13db8:	beq	13e24 <table_set@@Base+0x220>
   13dbc:	b	13f00 <table_set@@Base+0x2fc>
   13dc0:	ldr	r0, [r0, #4]
   13dc4:	cmp	r0, #15
   13dc8:	beq	13e24 <table_set@@Base+0x220>
   13dcc:	b	13f00 <table_set@@Base+0x2fc>
   13dd0:	ldr	r0, [r0, #4]
   13dd4:	cmp	r0, #16
   13dd8:	bne	13f00 <table_set@@Base+0x2fc>
   13ddc:	ldr	r0, [r5]
   13de0:	cmp	r0, #0
   13de4:	bne	13dfc <table_set@@Base+0x1f8>
   13de8:	mov	r0, #4
   13dec:	bl	11f00 <malloc@plt>
   13df0:	cmp	r0, #0
   13df4:	str	r0, [r5]
   13df8:	beq	13f00 <table_set@@Base+0x2fc>
   13dfc:	ldr	r1, [r8]
   13e00:	str	r1, [r0]
   13e04:	b	13ee8 <table_set@@Base+0x2e4>
   13e08:	ldr	r0, [r0, #4]
   13e0c:	cmp	r0, #17
   13e10:	beq	13e24 <table_set@@Base+0x220>
   13e14:	b	13f00 <table_set@@Base+0x2fc>
   13e18:	ldr	r0, [r0, #4]
   13e1c:	cmp	r0, #18
   13e20:	bne	13f00 <table_set@@Base+0x2fc>
   13e24:	ldr	r0, [r5]
   13e28:	cmp	r0, #0
   13e2c:	bne	13e44 <table_set@@Base+0x240>
   13e30:	mov	r0, #8
   13e34:	bl	11f00 <malloc@plt>
   13e38:	cmp	r0, #0
   13e3c:	str	r0, [r5]
   13e40:	beq	13f00 <table_set@@Base+0x2fc>
   13e44:	ldr	r1, [r8]
   13e48:	ldr	r2, [r8, #4]
   13e4c:	str	r2, [r0, #4]
   13e50:	str	r1, [r0]
   13e54:	b	13ee8 <table_set@@Base+0x2e4>
   13e58:	ldr	r0, [r0, #4]
   13e5c:	cmp	r0, #19
   13e60:	beq	13ec0 <table_set@@Base+0x2bc>
   13e64:	b	13f00 <table_set@@Base+0x2fc>
   13e68:	ldr	r0, [r0, #4]
   13e6c:	cmp	r0, #20
   13e70:	beq	13ec0 <table_set@@Base+0x2bc>
   13e74:	b	13f00 <table_set@@Base+0x2fc>
   13e78:	ldr	r0, [r0, #4]
   13e7c:	cmp	r0, #21
   13e80:	bne	13f00 <table_set@@Base+0x2fc>
   13e84:	mov	r0, r8
   13e88:	bl	11f24 <strlen@plt>
   13e8c:	ldr	r2, [r5]
   13e90:	add	r1, r0, #1
   13e94:	mov	r0, r2
   13e98:	bl	11edc <realloc@plt>
   13e9c:	cmp	r0, #0
   13ea0:	str	r0, [r5]
   13ea4:	beq	13f00 <table_set@@Base+0x2fc>
   13ea8:	mov	r1, r8
   13eac:	bl	11ee8 <strcpy@plt>
   13eb0:	b	13ee8 <table_set@@Base+0x2e4>
   13eb4:	ldr	r0, [r0, #4]
   13eb8:	cmp	r0, #22
   13ebc:	bne	13f00 <table_set@@Base+0x2fc>
   13ec0:	ldr	r0, [r5]
   13ec4:	cmp	r0, #0
   13ec8:	bne	13ee0 <table_set@@Base+0x2dc>
   13ecc:	mov	r0, #1
   13ed0:	bl	11f00 <malloc@plt>
   13ed4:	cmp	r0, #0
   13ed8:	str	r0, [r5]
   13edc:	beq	13f00 <table_set@@Base+0x2fc>
   13ee0:	ldrb	r1, [r8]
   13ee4:	strb	r1, [r0]
   13ee8:	mov	r0, r6
   13eec:	mov	r1, r9
   13ef0:	mov	r2, r4
   13ef4:	mov	r3, #1
   13ef8:	bl	12bf0 <table_notify@@Base>
   13efc:	mov	r7, #0
   13f00:	mov	r0, r7
   13f04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13f08:	ldr	r0, [r0, #4]
   13f0c:	cmp	r0, #23
   13f10:	bne	13f00 <table_set@@Base+0x2fc>
   13f14:	str	r8, [r5]
   13f18:	b	13ee8 <table_set@@Base+0x2e4>

00013f1c <table_set_bool@@Base>:
   13f1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f20:	add	fp, sp, #24
   13f24:	mov	r8, r3
   13f28:	mov	r4, r2
   13f2c:	mov	r9, r1
   13f30:	mov	r6, r0
   13f34:	bl	14b5c <table_get_cell_ptr@@Base>
   13f38:	mov	r5, r0
   13f3c:	mov	r0, r6
   13f40:	mov	r1, r4
   13f44:	bl	12cbc <table_get_col_ptr@@Base>
   13f48:	ldr	r0, [r0, #4]
   13f4c:	mvn	r7, #0
   13f50:	cmp	r0, #22
   13f54:	bne	13f94 <table_set_bool@@Base+0x78>
   13f58:	ldr	r0, [r5]
   13f5c:	cmp	r0, #0
   13f60:	bne	13f78 <table_set_bool@@Base+0x5c>
   13f64:	mov	r0, #1
   13f68:	bl	11f00 <malloc@plt>
   13f6c:	cmp	r0, #0
   13f70:	str	r0, [r5]
   13f74:	beq	13f94 <table_set_bool@@Base+0x78>
   13f78:	strb	r8, [r0]
   13f7c:	mov	r0, r6
   13f80:	mov	r1, r9
   13f84:	mov	r2, r4
   13f88:	mov	r3, #1
   13f8c:	bl	12bf0 <table_notify@@Base>
   13f90:	mov	r7, #0
   13f94:	mov	r0, r7
   13f98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f9c <table_set_int@@Base>:
   13f9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13fa0:	add	fp, sp, #24
   13fa4:	mov	r8, r3
   13fa8:	mov	r4, r2
   13fac:	mov	r5, r1
   13fb0:	mov	r6, r0
   13fb4:	bl	14b5c <table_get_cell_ptr@@Base>
   13fb8:	mov	r9, r0
   13fbc:	mov	r0, r6
   13fc0:	mov	r1, r4
   13fc4:	bl	12cbc <table_get_col_ptr@@Base>
   13fc8:	ldr	r0, [r0, #4]
   13fcc:	mvn	r7, #0
   13fd0:	cmp	r0, #0
   13fd4:	bne	14014 <table_set_int@@Base+0x78>
   13fd8:	ldr	r0, [r9]
   13fdc:	cmp	r0, #0
   13fe0:	bne	13ff8 <table_set_int@@Base+0x5c>
   13fe4:	mov	r0, #4
   13fe8:	bl	11f00 <malloc@plt>
   13fec:	cmp	r0, #0
   13ff0:	str	r0, [r9]
   13ff4:	beq	14014 <table_set_int@@Base+0x78>
   13ff8:	str	r8, [r0]
   13ffc:	mov	r0, r6
   14000:	mov	r1, r5
   14004:	mov	r2, r4
   14008:	mov	r3, #1
   1400c:	bl	12bf0 <table_notify@@Base>
   14010:	mov	r7, #0
   14014:	mov	r0, r7
   14018:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001401c <table_set_uint@@Base>:
   1401c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14020:	add	fp, sp, #24
   14024:	mov	r8, r3
   14028:	mov	r4, r2
   1402c:	mov	r5, r1
   14030:	mov	r6, r0
   14034:	bl	14b5c <table_get_cell_ptr@@Base>
   14038:	mov	r9, r0
   1403c:	mov	r0, r6
   14040:	mov	r1, r4
   14044:	bl	12cbc <table_get_col_ptr@@Base>
   14048:	ldr	r0, [r0, #4]
   1404c:	mvn	r7, #0
   14050:	cmp	r0, #1
   14054:	bne	14094 <table_set_uint@@Base+0x78>
   14058:	ldr	r0, [r9]
   1405c:	cmp	r0, #0
   14060:	bne	14078 <table_set_uint@@Base+0x5c>
   14064:	mov	r0, #4
   14068:	bl	11f00 <malloc@plt>
   1406c:	cmp	r0, #0
   14070:	str	r0, [r9]
   14074:	beq	14094 <table_set_uint@@Base+0x78>
   14078:	str	r8, [r0]
   1407c:	mov	r0, r6
   14080:	mov	r1, r5
   14084:	mov	r2, r4
   14088:	mov	r3, #1
   1408c:	bl	12bf0 <table_notify@@Base>
   14090:	mov	r7, #0
   14094:	mov	r0, r7
   14098:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001409c <table_set_int8@@Base>:
   1409c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140a0:	add	fp, sp, #24
   140a4:	mov	r8, r3
   140a8:	mov	r4, r2
   140ac:	mov	r9, r1
   140b0:	mov	r6, r0
   140b4:	bl	14b5c <table_get_cell_ptr@@Base>
   140b8:	mov	r5, r0
   140bc:	mov	r0, r6
   140c0:	mov	r1, r4
   140c4:	bl	12cbc <table_get_col_ptr@@Base>
   140c8:	ldr	r0, [r0, #4]
   140cc:	mvn	r7, #0
   140d0:	cmp	r0, #2
   140d4:	bne	14114 <table_set_int8@@Base+0x78>
   140d8:	ldr	r0, [r5]
   140dc:	cmp	r0, #0
   140e0:	bne	140f8 <table_set_int8@@Base+0x5c>
   140e4:	mov	r0, #1
   140e8:	bl	11f00 <malloc@plt>
   140ec:	cmp	r0, #0
   140f0:	str	r0, [r5]
   140f4:	beq	14114 <table_set_int8@@Base+0x78>
   140f8:	strb	r8, [r0]
   140fc:	mov	r0, r6
   14100:	mov	r1, r9
   14104:	mov	r2, r4
   14108:	mov	r3, #1
   1410c:	bl	12bf0 <table_notify@@Base>
   14110:	mov	r7, #0
   14114:	mov	r0, r7
   14118:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001411c <table_set_uint8@@Base>:
   1411c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14120:	add	fp, sp, #24
   14124:	mov	r8, r3
   14128:	mov	r4, r2
   1412c:	mov	r9, r1
   14130:	mov	r6, r0
   14134:	bl	14b5c <table_get_cell_ptr@@Base>
   14138:	mov	r5, r0
   1413c:	mov	r0, r6
   14140:	mov	r1, r4
   14144:	bl	12cbc <table_get_col_ptr@@Base>
   14148:	ldr	r0, [r0, #4]
   1414c:	mvn	r7, #0
   14150:	cmp	r0, #3
   14154:	bne	14194 <table_set_uint8@@Base+0x78>
   14158:	ldr	r0, [r5]
   1415c:	cmp	r0, #0
   14160:	bne	14178 <table_set_uint8@@Base+0x5c>
   14164:	mov	r0, #1
   14168:	bl	11f00 <malloc@plt>
   1416c:	cmp	r0, #0
   14170:	str	r0, [r5]
   14174:	beq	14194 <table_set_uint8@@Base+0x78>
   14178:	strb	r8, [r0]
   1417c:	mov	r0, r6
   14180:	mov	r1, r9
   14184:	mov	r2, r4
   14188:	mov	r3, #1
   1418c:	bl	12bf0 <table_notify@@Base>
   14190:	mov	r7, #0
   14194:	mov	r0, r7
   14198:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001419c <table_set_int16@@Base>:
   1419c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141a0:	add	fp, sp, #24
   141a4:	mov	r8, r3
   141a8:	mov	r4, r2
   141ac:	mov	r9, r1
   141b0:	mov	r6, r0
   141b4:	bl	14b5c <table_get_cell_ptr@@Base>
   141b8:	mov	r5, r0
   141bc:	mov	r0, r6
   141c0:	mov	r1, r4
   141c4:	bl	12cbc <table_get_col_ptr@@Base>
   141c8:	ldr	r0, [r0, #4]
   141cc:	mvn	r7, #0
   141d0:	cmp	r0, #4
   141d4:	bne	14214 <table_set_int16@@Base+0x78>
   141d8:	ldr	r0, [r5]
   141dc:	cmp	r0, #0
   141e0:	bne	141f8 <table_set_int16@@Base+0x5c>
   141e4:	mov	r0, #2
   141e8:	bl	11f00 <malloc@plt>
   141ec:	cmp	r0, #0
   141f0:	str	r0, [r5]
   141f4:	beq	14214 <table_set_int16@@Base+0x78>
   141f8:	strh	r8, [r0]
   141fc:	mov	r0, r6
   14200:	mov	r1, r9
   14204:	mov	r2, r4
   14208:	mov	r3, #1
   1420c:	bl	12bf0 <table_notify@@Base>
   14210:	mov	r7, #0
   14214:	mov	r0, r7
   14218:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001421c <table_set_uint16@@Base>:
   1421c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14220:	add	fp, sp, #24
   14224:	mov	r8, r3
   14228:	mov	r4, r2
   1422c:	mov	r9, r1
   14230:	mov	r6, r0
   14234:	bl	14b5c <table_get_cell_ptr@@Base>
   14238:	mov	r5, r0
   1423c:	mov	r0, r6
   14240:	mov	r1, r4
   14244:	bl	12cbc <table_get_col_ptr@@Base>
   14248:	ldr	r0, [r0, #4]
   1424c:	mvn	r7, #0
   14250:	cmp	r0, #5
   14254:	bne	14294 <table_set_uint16@@Base+0x78>
   14258:	ldr	r0, [r5]
   1425c:	cmp	r0, #0
   14260:	bne	14278 <table_set_uint16@@Base+0x5c>
   14264:	mov	r0, #2
   14268:	bl	11f00 <malloc@plt>
   1426c:	cmp	r0, #0
   14270:	str	r0, [r5]
   14274:	beq	14294 <table_set_uint16@@Base+0x78>
   14278:	strh	r8, [r0]
   1427c:	mov	r0, r6
   14280:	mov	r1, r9
   14284:	mov	r2, r4
   14288:	mov	r3, #1
   1428c:	bl	12bf0 <table_notify@@Base>
   14290:	mov	r7, #0
   14294:	mov	r0, r7
   14298:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001429c <table_set_int32@@Base>:
   1429c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142a0:	add	fp, sp, #24
   142a4:	mov	r8, r3
   142a8:	mov	r4, r2
   142ac:	mov	r5, r1
   142b0:	mov	r6, r0
   142b4:	bl	14b5c <table_get_cell_ptr@@Base>
   142b8:	mov	r9, r0
   142bc:	mov	r0, r6
   142c0:	mov	r1, r4
   142c4:	bl	12cbc <table_get_col_ptr@@Base>
   142c8:	ldr	r0, [r0, #4]
   142cc:	mvn	r7, #0
   142d0:	cmp	r0, #6
   142d4:	bne	14314 <table_set_int32@@Base+0x78>
   142d8:	ldr	r0, [r9]
   142dc:	cmp	r0, #0
   142e0:	bne	142f8 <table_set_int32@@Base+0x5c>
   142e4:	mov	r0, #4
   142e8:	bl	11f00 <malloc@plt>
   142ec:	cmp	r0, #0
   142f0:	str	r0, [r9]
   142f4:	beq	14314 <table_set_int32@@Base+0x78>
   142f8:	str	r8, [r0]
   142fc:	mov	r0, r6
   14300:	mov	r1, r5
   14304:	mov	r2, r4
   14308:	mov	r3, #1
   1430c:	bl	12bf0 <table_notify@@Base>
   14310:	mov	r7, #0
   14314:	mov	r0, r7
   14318:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001431c <table_set_uint32@@Base>:
   1431c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14320:	add	fp, sp, #24
   14324:	mov	r8, r3
   14328:	mov	r4, r2
   1432c:	mov	r5, r1
   14330:	mov	r6, r0
   14334:	bl	14b5c <table_get_cell_ptr@@Base>
   14338:	mov	r9, r0
   1433c:	mov	r0, r6
   14340:	mov	r1, r4
   14344:	bl	12cbc <table_get_col_ptr@@Base>
   14348:	ldr	r0, [r0, #4]
   1434c:	mvn	r7, #0
   14350:	cmp	r0, #7
   14354:	bne	14394 <table_set_uint32@@Base+0x78>
   14358:	ldr	r0, [r9]
   1435c:	cmp	r0, #0
   14360:	bne	14378 <table_set_uint32@@Base+0x5c>
   14364:	mov	r0, #4
   14368:	bl	11f00 <malloc@plt>
   1436c:	cmp	r0, #0
   14370:	str	r0, [r9]
   14374:	beq	14394 <table_set_uint32@@Base+0x78>
   14378:	str	r8, [r0]
   1437c:	mov	r0, r6
   14380:	mov	r1, r5
   14384:	mov	r2, r4
   14388:	mov	r3, #1
   1438c:	bl	12bf0 <table_notify@@Base>
   14390:	mov	r7, #0
   14394:	mov	r0, r7
   14398:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001439c <table_set_int64@@Base>:
   1439c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   143a0:	add	fp, sp, #24
   143a4:	mov	r4, r2
   143a8:	mov	r8, r1
   143ac:	mov	r6, r0
   143b0:	bl	14b5c <table_get_cell_ptr@@Base>
   143b4:	mov	r5, r0
   143b8:	mov	r0, r6
   143bc:	mov	r1, r4
   143c0:	bl	12cbc <table_get_col_ptr@@Base>
   143c4:	ldr	r0, [r0, #4]
   143c8:	mvn	r7, #0
   143cc:	cmp	r0, #8
   143d0:	bne	1441c <table_set_int64@@Base+0x80>
   143d4:	ldr	r0, [r5]
   143d8:	cmp	r0, #0
   143dc:	bne	143f4 <table_set_int64@@Base+0x58>
   143e0:	mov	r0, #8
   143e4:	bl	11f00 <malloc@plt>
   143e8:	cmp	r0, #0
   143ec:	str	r0, [r5]
   143f0:	beq	1441c <table_set_int64@@Base+0x80>
   143f4:	ldr	r1, [fp, #12]
   143f8:	ldr	r2, [fp, #8]
   143fc:	mov	r3, #1
   14400:	str	r2, [r0]
   14404:	str	r1, [r0, #4]
   14408:	mov	r0, r6
   1440c:	mov	r1, r8
   14410:	mov	r2, r4
   14414:	bl	12bf0 <table_notify@@Base>
   14418:	mov	r7, #0
   1441c:	mov	r0, r7
   14420:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014424 <table_set_uint64@@Base>:
   14424:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14428:	add	fp, sp, #24
   1442c:	mov	r4, r2
   14430:	mov	r8, r1
   14434:	mov	r6, r0
   14438:	bl	14b5c <table_get_cell_ptr@@Base>
   1443c:	mov	r5, r0
   14440:	mov	r0, r6
   14444:	mov	r1, r4
   14448:	bl	12cbc <table_get_col_ptr@@Base>
   1444c:	ldr	r0, [r0, #4]
   14450:	mvn	r7, #0
   14454:	cmp	r0, #9
   14458:	bne	144a4 <table_set_uint64@@Base+0x80>
   1445c:	ldr	r0, [r5]
   14460:	cmp	r0, #0
   14464:	bne	1447c <table_set_uint64@@Base+0x58>
   14468:	mov	r0, #8
   1446c:	bl	11f00 <malloc@plt>
   14470:	cmp	r0, #0
   14474:	str	r0, [r5]
   14478:	beq	144a4 <table_set_uint64@@Base+0x80>
   1447c:	ldr	r1, [fp, #12]
   14480:	ldr	r2, [fp, #8]
   14484:	mov	r3, #1
   14488:	str	r2, [r0]
   1448c:	str	r1, [r0, #4]
   14490:	mov	r0, r6
   14494:	mov	r1, r8
   14498:	mov	r2, r4
   1449c:	bl	12bf0 <table_notify@@Base>
   144a0:	mov	r7, #0
   144a4:	mov	r0, r7
   144a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000144ac <table_set_short@@Base>:
   144ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144b0:	add	fp, sp, #24
   144b4:	mov	r8, r3
   144b8:	mov	r4, r2
   144bc:	mov	r9, r1
   144c0:	mov	r6, r0
   144c4:	bl	14b5c <table_get_cell_ptr@@Base>
   144c8:	mov	r5, r0
   144cc:	mov	r0, r6
   144d0:	mov	r1, r4
   144d4:	bl	12cbc <table_get_col_ptr@@Base>
   144d8:	ldr	r0, [r0, #4]
   144dc:	mvn	r7, #0
   144e0:	cmp	r0, #10
   144e4:	bne	14524 <table_set_short@@Base+0x78>
   144e8:	ldr	r0, [r5]
   144ec:	cmp	r0, #0
   144f0:	bne	14508 <table_set_short@@Base+0x5c>
   144f4:	mov	r0, #2
   144f8:	bl	11f00 <malloc@plt>
   144fc:	cmp	r0, #0
   14500:	str	r0, [r5]
   14504:	beq	14524 <table_set_short@@Base+0x78>
   14508:	strh	r8, [r0]
   1450c:	mov	r0, r6
   14510:	mov	r1, r9
   14514:	mov	r2, r4
   14518:	mov	r3, #1
   1451c:	bl	12bf0 <table_notify@@Base>
   14520:	mov	r7, #0
   14524:	mov	r0, r7
   14528:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001452c <table_set_ushort@@Base>:
   1452c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14530:	add	fp, sp, #24
   14534:	mov	r8, r3
   14538:	mov	r4, r2
   1453c:	mov	r9, r1
   14540:	mov	r6, r0
   14544:	bl	14b5c <table_get_cell_ptr@@Base>
   14548:	mov	r5, r0
   1454c:	mov	r0, r6
   14550:	mov	r1, r4
   14554:	bl	12cbc <table_get_col_ptr@@Base>
   14558:	ldr	r0, [r0, #4]
   1455c:	mvn	r7, #0
   14560:	cmp	r0, #11
   14564:	bne	145a4 <table_set_ushort@@Base+0x78>
   14568:	ldr	r0, [r5]
   1456c:	cmp	r0, #0
   14570:	bne	14588 <table_set_ushort@@Base+0x5c>
   14574:	mov	r0, #2
   14578:	bl	11f00 <malloc@plt>
   1457c:	cmp	r0, #0
   14580:	str	r0, [r5]
   14584:	beq	145a4 <table_set_ushort@@Base+0x78>
   14588:	strh	r8, [r0]
   1458c:	mov	r0, r6
   14590:	mov	r1, r9
   14594:	mov	r2, r4
   14598:	mov	r3, #1
   1459c:	bl	12bf0 <table_notify@@Base>
   145a0:	mov	r7, #0
   145a4:	mov	r0, r7
   145a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000145ac <table_set_long@@Base>:
   145ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   145b0:	add	fp, sp, #24
   145b4:	mov	r8, r3
   145b8:	mov	r4, r2
   145bc:	mov	r5, r1
   145c0:	mov	r6, r0
   145c4:	bl	14b5c <table_get_cell_ptr@@Base>
   145c8:	mov	r9, r0
   145cc:	mov	r0, r6
   145d0:	mov	r1, r4
   145d4:	bl	12cbc <table_get_col_ptr@@Base>
   145d8:	ldr	r0, [r0, #4]
   145dc:	mvn	r7, #0
   145e0:	cmp	r0, #12
   145e4:	bne	14624 <table_set_long@@Base+0x78>
   145e8:	ldr	r0, [r9]
   145ec:	cmp	r0, #0
   145f0:	bne	14608 <table_set_long@@Base+0x5c>
   145f4:	mov	r0, #4
   145f8:	bl	11f00 <malloc@plt>
   145fc:	cmp	r0, #0
   14600:	str	r0, [r9]
   14604:	beq	14624 <table_set_long@@Base+0x78>
   14608:	str	r8, [r0]
   1460c:	mov	r0, r6
   14610:	mov	r1, r5
   14614:	mov	r2, r4
   14618:	mov	r3, #1
   1461c:	bl	12bf0 <table_notify@@Base>
   14620:	mov	r7, #0
   14624:	mov	r0, r7
   14628:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001462c <table_set_ulong@@Base>:
   1462c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14630:	add	fp, sp, #24
   14634:	mov	r8, r3
   14638:	mov	r4, r2
   1463c:	mov	r5, r1
   14640:	mov	r6, r0
   14644:	bl	14b5c <table_get_cell_ptr@@Base>
   14648:	mov	r9, r0
   1464c:	mov	r0, r6
   14650:	mov	r1, r4
   14654:	bl	12cbc <table_get_col_ptr@@Base>
   14658:	ldr	r0, [r0, #4]
   1465c:	mvn	r7, #0
   14660:	cmp	r0, #13
   14664:	bne	146a4 <table_set_ulong@@Base+0x78>
   14668:	ldr	r0, [r9]
   1466c:	cmp	r0, #0
   14670:	bne	14688 <table_set_ulong@@Base+0x5c>
   14674:	mov	r0, #4
   14678:	bl	11f00 <malloc@plt>
   1467c:	cmp	r0, #0
   14680:	str	r0, [r9]
   14684:	beq	146a4 <table_set_ulong@@Base+0x78>
   14688:	str	r8, [r0]
   1468c:	mov	r0, r6
   14690:	mov	r1, r5
   14694:	mov	r2, r4
   14698:	mov	r3, #1
   1469c:	bl	12bf0 <table_notify@@Base>
   146a0:	mov	r7, #0
   146a4:	mov	r0, r7
   146a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000146ac <table_set_llong@@Base>:
   146ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   146b0:	add	fp, sp, #24
   146b4:	mov	r4, r2
   146b8:	mov	r8, r1
   146bc:	mov	r6, r0
   146c0:	bl	14b5c <table_get_cell_ptr@@Base>
   146c4:	mov	r5, r0
   146c8:	mov	r0, r6
   146cc:	mov	r1, r4
   146d0:	bl	12cbc <table_get_col_ptr@@Base>
   146d4:	ldr	r0, [r0, #4]
   146d8:	mvn	r7, #0
   146dc:	cmp	r0, #14
   146e0:	bne	1472c <table_set_llong@@Base+0x80>
   146e4:	ldr	r0, [r5]
   146e8:	cmp	r0, #0
   146ec:	bne	14704 <table_set_llong@@Base+0x58>
   146f0:	mov	r0, #8
   146f4:	bl	11f00 <malloc@plt>
   146f8:	cmp	r0, #0
   146fc:	str	r0, [r5]
   14700:	beq	1472c <table_set_llong@@Base+0x80>
   14704:	ldr	r1, [fp, #12]
   14708:	ldr	r2, [fp, #8]
   1470c:	mov	r3, #1
   14710:	str	r2, [r0]
   14714:	str	r1, [r0, #4]
   14718:	mov	r0, r6
   1471c:	mov	r1, r8
   14720:	mov	r2, r4
   14724:	bl	12bf0 <table_notify@@Base>
   14728:	mov	r7, #0
   1472c:	mov	r0, r7
   14730:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014734 <table_set_ullong@@Base>:
   14734:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14738:	add	fp, sp, #24
   1473c:	mov	r4, r2
   14740:	mov	r8, r1
   14744:	mov	r6, r0
   14748:	bl	14b5c <table_get_cell_ptr@@Base>
   1474c:	mov	r5, r0
   14750:	mov	r0, r6
   14754:	mov	r1, r4
   14758:	bl	12cbc <table_get_col_ptr@@Base>
   1475c:	ldr	r0, [r0, #4]
   14760:	mvn	r7, #0
   14764:	cmp	r0, #15
   14768:	bne	147b4 <table_set_ullong@@Base+0x80>
   1476c:	ldr	r0, [r5]
   14770:	cmp	r0, #0
   14774:	bne	1478c <table_set_ullong@@Base+0x58>
   14778:	mov	r0, #8
   1477c:	bl	11f00 <malloc@plt>
   14780:	cmp	r0, #0
   14784:	str	r0, [r5]
   14788:	beq	147b4 <table_set_ullong@@Base+0x80>
   1478c:	ldr	r1, [fp, #12]
   14790:	ldr	r2, [fp, #8]
   14794:	mov	r3, #1
   14798:	str	r2, [r0]
   1479c:	str	r1, [r0, #4]
   147a0:	mov	r0, r6
   147a4:	mov	r1, r8
   147a8:	mov	r2, r4
   147ac:	bl	12bf0 <table_notify@@Base>
   147b0:	mov	r7, #0
   147b4:	mov	r0, r7
   147b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147bc <table_set_float@@Base>:
   147bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147c0:	add	fp, sp, #24
   147c4:	vpush	{d8}
   147c8:	vmov.f32	s16, s0
   147cc:	mov	r4, r2
   147d0:	mov	r8, r1
   147d4:	mov	r6, r0
   147d8:	bl	14b5c <table_get_cell_ptr@@Base>
   147dc:	mov	r5, r0
   147e0:	mov	r0, r6
   147e4:	mov	r1, r4
   147e8:	bl	12cbc <table_get_col_ptr@@Base>
   147ec:	ldr	r0, [r0, #4]
   147f0:	mvn	r7, #0
   147f4:	cmp	r0, #16
   147f8:	bne	1483c <table_set_float@@Base+0x80>
   147fc:	ldr	r0, [r5]
   14800:	cmp	r0, #0
   14804:	bne	1481c <table_set_float@@Base+0x60>
   14808:	mov	r0, #4
   1480c:	bl	11f00 <malloc@plt>
   14810:	cmp	r0, #0
   14814:	str	r0, [r5]
   14818:	beq	1483c <table_set_float@@Base+0x80>
   1481c:	vmov	r1, s16
   14820:	mov	r2, r4
   14824:	mov	r3, #1
   14828:	str	r1, [r0]
   1482c:	mov	r0, r6
   14830:	mov	r1, r8
   14834:	bl	12bf0 <table_notify@@Base>
   14838:	mov	r7, #0
   1483c:	mov	r0, r7
   14840:	vpop	{d8}
   14844:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014848 <table_set_double@@Base>:
   14848:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1484c:	add	fp, sp, #24
   14850:	vpush	{d8}
   14854:	vorr	d8, d0, d0
   14858:	mov	r4, r2
   1485c:	mov	r5, r1
   14860:	mov	r6, r0
   14864:	bl	14b5c <table_get_cell_ptr@@Base>
   14868:	mov	r8, r0
   1486c:	mov	r0, r6
   14870:	mov	r1, r4
   14874:	bl	12cbc <table_get_col_ptr@@Base>
   14878:	ldr	r0, [r0, #4]
   1487c:	mvn	r7, #0
   14880:	cmp	r0, #17
   14884:	bne	148c4 <table_set_double@@Base+0x7c>
   14888:	ldr	r0, [r8]
   1488c:	cmp	r0, #0
   14890:	bne	148a8 <table_set_double@@Base+0x60>
   14894:	mov	r0, #8
   14898:	bl	11f00 <malloc@plt>
   1489c:	cmp	r0, #0
   148a0:	str	r0, [r8]
   148a4:	beq	148c4 <table_set_double@@Base+0x7c>
   148a8:	vst1.8	{d8}, [r0]
   148ac:	mov	r0, r6
   148b0:	mov	r1, r5
   148b4:	mov	r2, r4
   148b8:	mov	r3, #1
   148bc:	bl	12bf0 <table_notify@@Base>
   148c0:	mov	r7, #0
   148c4:	mov	r0, r7
   148c8:	vpop	{d8}
   148cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000148d0 <table_set_ldouble@@Base>:
   148d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148d4:	add	fp, sp, #24
   148d8:	vpush	{d8}
   148dc:	vorr	d8, d0, d0
   148e0:	mov	r4, r2
   148e4:	mov	r5, r1
   148e8:	mov	r6, r0
   148ec:	bl	14b5c <table_get_cell_ptr@@Base>
   148f0:	mov	r8, r0
   148f4:	mov	r0, r6
   148f8:	mov	r1, r4
   148fc:	bl	12cbc <table_get_col_ptr@@Base>
   14900:	ldr	r0, [r0, #4]
   14904:	mvn	r7, #0
   14908:	cmp	r0, #18
   1490c:	bne	1494c <table_set_ldouble@@Base+0x7c>
   14910:	ldr	r0, [r8]
   14914:	cmp	r0, #0
   14918:	bne	14930 <table_set_ldouble@@Base+0x60>
   1491c:	mov	r0, #8
   14920:	bl	11f00 <malloc@plt>
   14924:	cmp	r0, #0
   14928:	str	r0, [r8]
   1492c:	beq	1494c <table_set_ldouble@@Base+0x7c>
   14930:	vst1.8	{d8}, [r0]
   14934:	mov	r0, r6
   14938:	mov	r1, r5
   1493c:	mov	r2, r4
   14940:	mov	r3, #1
   14944:	bl	12bf0 <table_notify@@Base>
   14948:	mov	r7, #0
   1494c:	mov	r0, r7
   14950:	vpop	{d8}
   14954:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014958 <table_set_string@@Base>:
   14958:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1495c:	add	fp, sp, #24
   14960:	mov	r8, r3
   14964:	mov	r4, r2
   14968:	mov	r9, r1
   1496c:	mov	r6, r0
   14970:	bl	14b5c <table_get_cell_ptr@@Base>
   14974:	mov	r5, r0
   14978:	mov	r0, r6
   1497c:	mov	r1, r4
   14980:	bl	12cbc <table_get_col_ptr@@Base>
   14984:	ldr	r0, [r0, #4]
   14988:	mvn	r7, #0
   1498c:	cmp	r0, #21
   14990:	bne	149d8 <table_set_string@@Base+0x80>
   14994:	mov	r0, r8
   14998:	bl	11f24 <strlen@plt>
   1499c:	ldr	r2, [r5]
   149a0:	add	r1, r0, #1
   149a4:	mov	r0, r2
   149a8:	bl	11edc <realloc@plt>
   149ac:	cmp	r0, #0
   149b0:	str	r0, [r5]
   149b4:	beq	149d8 <table_set_string@@Base+0x80>
   149b8:	mov	r1, r8
   149bc:	bl	11ee8 <strcpy@plt>
   149c0:	mov	r0, r6
   149c4:	mov	r1, r9
   149c8:	mov	r2, r4
   149cc:	mov	r3, #1
   149d0:	bl	12bf0 <table_notify@@Base>
   149d4:	mov	r7, #0
   149d8:	mov	r0, r7
   149dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000149e0 <table_set_char@@Base>:
   149e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   149e4:	add	fp, sp, #24
   149e8:	mov	r8, r3
   149ec:	mov	r4, r2
   149f0:	mov	r9, r1
   149f4:	mov	r6, r0
   149f8:	bl	14b5c <table_get_cell_ptr@@Base>
   149fc:	mov	r5, r0
   14a00:	mov	r0, r6
   14a04:	mov	r1, r4
   14a08:	bl	12cbc <table_get_col_ptr@@Base>
   14a0c:	ldr	r0, [r0, #4]
   14a10:	mvn	r7, #0
   14a14:	cmp	r0, #19
   14a18:	bne	14a58 <table_set_char@@Base+0x78>
   14a1c:	ldr	r0, [r5]
   14a20:	cmp	r0, #0
   14a24:	bne	14a3c <table_set_char@@Base+0x5c>
   14a28:	mov	r0, #1
   14a2c:	bl	11f00 <malloc@plt>
   14a30:	cmp	r0, #0
   14a34:	str	r0, [r5]
   14a38:	beq	14a58 <table_set_char@@Base+0x78>
   14a3c:	strb	r8, [r0]
   14a40:	mov	r0, r6
   14a44:	mov	r1, r9
   14a48:	mov	r2, r4
   14a4c:	mov	r3, #1
   14a50:	bl	12bf0 <table_notify@@Base>
   14a54:	mov	r7, #0
   14a58:	mov	r0, r7
   14a5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a60 <table_set_uchar@@Base>:
   14a60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a64:	add	fp, sp, #24
   14a68:	mov	r8, r3
   14a6c:	mov	r4, r2
   14a70:	mov	r9, r1
   14a74:	mov	r6, r0
   14a78:	bl	14b5c <table_get_cell_ptr@@Base>
   14a7c:	mov	r5, r0
   14a80:	mov	r0, r6
   14a84:	mov	r1, r4
   14a88:	bl	12cbc <table_get_col_ptr@@Base>
   14a8c:	ldr	r0, [r0, #4]
   14a90:	mvn	r7, #0
   14a94:	cmp	r0, #20
   14a98:	bne	14ad8 <table_set_uchar@@Base+0x78>
   14a9c:	ldr	r0, [r5]
   14aa0:	cmp	r0, #0
   14aa4:	bne	14abc <table_set_uchar@@Base+0x5c>
   14aa8:	mov	r0, #1
   14aac:	bl	11f00 <malloc@plt>
   14ab0:	cmp	r0, #0
   14ab4:	str	r0, [r5]
   14ab8:	beq	14ad8 <table_set_uchar@@Base+0x78>
   14abc:	strb	r8, [r0]
   14ac0:	mov	r0, r6
   14ac4:	mov	r1, r9
   14ac8:	mov	r2, r4
   14acc:	mov	r3, #1
   14ad0:	bl	12bf0 <table_notify@@Base>
   14ad4:	mov	r7, #0
   14ad8:	mov	r0, r7
   14adc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014ae0 <table_set_ptr@@Base>:
   14ae0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ae4:	add	fp, sp, #24
   14ae8:	mov	r8, r3
   14aec:	mov	r4, r2
   14af0:	mov	r5, r1
   14af4:	mov	r6, r0
   14af8:	bl	14b5c <table_get_cell_ptr@@Base>
   14afc:	mov	r7, r0
   14b00:	mov	r0, r6
   14b04:	mov	r1, r4
   14b08:	bl	12cbc <table_get_col_ptr@@Base>
   14b0c:	ldr	r1, [r0, #4]
   14b10:	mvn	r0, #0
   14b14:	cmp	r1, #23
   14b18:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14b1c:	mov	r0, r6
   14b20:	mov	r1, r5
   14b24:	mov	r2, r4
   14b28:	mov	r3, #1
   14b2c:	str	r8, [r7]
   14b30:	bl	12bf0 <table_notify@@Base>
   14b34:	mov	r0, #0
   14b38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014b3c <table_cell_init@@Base>:
   14b3c:	push	{r4, sl, fp, lr}
   14b40:	add	fp, sp, #8
   14b44:	mov	r4, r2
   14b48:	bl	139d8 <table_get_row_ptr@@Base>
   14b4c:	ldr	r0, [r0]
   14b50:	mov	r1, #0
   14b54:	str	r1, [r0, r4, lsl #2]
   14b58:	pop	{r4, sl, fp, pc}

00014b5c <table_get_cell_ptr@@Base>:
   14b5c:	push	{r4, sl, fp, lr}
   14b60:	add	fp, sp, #8
   14b64:	mov	r4, r2
   14b68:	bl	139d8 <table_get_row_ptr@@Base>
   14b6c:	ldr	r0, [r0]
   14b70:	add	r0, r0, r4, lsl #2
   14b74:	pop	{r4, sl, fp, pc}

00014b78 <table_cell_destroy@@Base>:
   14b78:	push	{r4, r5, r6, sl, fp, lr}
   14b7c:	add	fp, sp, #16
   14b80:	mov	r5, r1
   14b84:	mov	r1, r2
   14b88:	mov	r4, r2
   14b8c:	mov	r6, r0
   14b90:	bl	12d64 <table_get_column_data_type@@Base>
   14b94:	cmp	r0, #23
   14b98:	popeq	{r4, r5, r6, sl, fp, pc}
   14b9c:	mov	r0, r6
   14ba0:	mov	r1, r5
   14ba4:	bl	139d8 <table_get_row_ptr@@Base>
   14ba8:	ldr	r0, [r0]
   14bac:	ldr	r0, [r0, r4, lsl #2]
   14bb0:	cmp	r0, #0
   14bb4:	beq	14bc0 <table_cell_destroy@@Base+0x48>
   14bb8:	pop	{r4, r5, r6, sl, fp, lr}
   14bbc:	b	11ed0 <free@plt>
   14bc0:	pop	{r4, r5, r6, sl, fp, pc}

00014bc4 <table_cell_to_buffer@@Base>:
   14bc4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14bc8:	add	fp, sp, #24
   14bcc:	sub	sp, sp, #8
   14bd0:	mov	r7, r1
   14bd4:	mov	r1, r2
   14bd8:	mov	r5, r3
   14bdc:	mov	r6, r2
   14be0:	mov	r4, r0
   14be4:	bl	12d64 <table_get_column_data_type@@Base>
   14be8:	cmp	r0, #23
   14bec:	bhi	14e5c <table_cell_to_buffer@@Base+0x298>
   14bf0:	ldr	r8, [fp, #8]
   14bf4:	add	r1, pc, #0
   14bf8:	ldr	pc, [r1, r0, lsl #2]
   14bfc:	andeq	r4, r1, ip, asr ip
   14c00:	andeq	r4, r1, r0, ror ip
   14c04:	andeq	r4, r1, r4, lsl #25
   14c08:	muleq	r1, r8, ip
   14c0c:	andeq	r4, r1, ip, lsr #25
   14c10:	andeq	r4, r1, r0, asr #25
   14c14:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14c18:	andeq	r4, r1, r8, ror #25
   14c1c:	andeq	r4, r1, r8, lsl #26
   14c20:	andeq	r4, r1, ip, lsl sp
   14c24:	andeq	r4, r1, r0, lsr sp
   14c28:	andeq	r4, r1, r0, asr sp
   14c2c:	andeq	r4, r1, r0, ror sp
   14c30:	muleq	r1, r0, sp
   14c34:			; <UNDEFINED> instruction: 0x00014db0
   14c38:	ldrdeq	r4, [r1], -r0
   14c3c:	strdeq	r4, [r1], -r0
   14c40:	andeq	r4, r1, r4, lsl lr
   14c44:	andeq	r4, r1, r4, lsr lr
   14c48:	andeq	r4, r1, r8, ror #28
   14c4c:	andeq	r4, r1, ip, ror lr
   14c50:	muleq	r1, ip, lr
   14c54:			; <UNDEFINED> instruction: 0x00014ebc
   14c58:	strdeq	r4, [r1], -r0
   14c5c:	mov	r0, r4
   14c60:	mov	r1, r7
   14c64:	mov	r2, r6
   14c68:	bl	13794 <table_get_int@@Base>
   14c6c:	b	14ecc <table_cell_to_buffer@@Base+0x308>
   14c70:	mov	r0, r4
   14c74:	mov	r1, r7
   14c78:	mov	r2, r6
   14c7c:	bl	137ac <table_get_uint@@Base>
   14c80:	b	14cf8 <table_cell_to_buffer@@Base+0x134>
   14c84:	mov	r0, r4
   14c88:	mov	r1, r7
   14c8c:	mov	r2, r6
   14c90:	bl	137c4 <table_get_int8@@Base>
   14c94:	b	14ecc <table_cell_to_buffer@@Base+0x308>
   14c98:	mov	r0, r4
   14c9c:	mov	r1, r7
   14ca0:	mov	r2, r6
   14ca4:	bl	137dc <table_get_uint8@@Base>
   14ca8:	b	14cf8 <table_cell_to_buffer@@Base+0x134>
   14cac:	mov	r0, r4
   14cb0:	mov	r1, r7
   14cb4:	mov	r2, r6
   14cb8:	bl	137f4 <table_get_int16@@Base>
   14cbc:	b	14ecc <table_cell_to_buffer@@Base+0x308>
   14cc0:	mov	r0, r4
   14cc4:	mov	r1, r7
   14cc8:	mov	r2, r6
   14ccc:	bl	1380c <table_get_uint16@@Base>
   14cd0:	b	14cf8 <table_cell_to_buffer@@Base+0x134>
   14cd4:	mov	r0, r4
   14cd8:	mov	r1, r7
   14cdc:	mov	r2, r6
   14ce0:	bl	13824 <table_get_int32@@Base>
   14ce4:	b	14ecc <table_cell_to_buffer@@Base+0x308>
   14ce8:	mov	r0, r4
   14cec:	mov	r1, r7
   14cf0:	mov	r2, r6
   14cf4:	bl	1383c <table_get_uint32@@Base>
   14cf8:	movw	r2, #22371	; 0x5763
   14cfc:	mov	r3, r0
   14d00:	movt	r2, #1
   14d04:	b	14ed8 <table_cell_to_buffer@@Base+0x314>
   14d08:	mov	r0, r4
   14d0c:	mov	r1, r7
   14d10:	mov	r2, r6
   14d14:	bl	13854 <table_get_int64@@Base>
   14d18:	b	14dc0 <table_cell_to_buffer@@Base+0x1fc>
   14d1c:	mov	r0, r4
   14d20:	mov	r1, r7
   14d24:	mov	r2, r6
   14d28:	bl	1386c <table_get_uint64@@Base>
   14d2c:	b	14de0 <table_cell_to_buffer@@Base+0x21c>
   14d30:	mov	r0, r4
   14d34:	mov	r1, r7
   14d38:	mov	r2, r6
   14d3c:	bl	13884 <table_get_short@@Base>
   14d40:	movw	r2, #22384	; 0x5770
   14d44:	mov	r3, r0
   14d48:	movt	r2, #1
   14d4c:	b	14ed8 <table_cell_to_buffer@@Base+0x314>
   14d50:	mov	r0, r4
   14d54:	mov	r1, r7
   14d58:	mov	r2, r6
   14d5c:	bl	1389c <table_get_ushort@@Base>
   14d60:	movw	r2, #22388	; 0x5774
   14d64:	mov	r3, r0
   14d68:	movt	r2, #1
   14d6c:	b	14ed8 <table_cell_to_buffer@@Base+0x314>
   14d70:	mov	r0, r4
   14d74:	mov	r1, r7
   14d78:	mov	r2, r6
   14d7c:	bl	138b4 <table_get_long@@Base>
   14d80:	movw	r2, #22392	; 0x5778
   14d84:	mov	r3, r0
   14d88:	movt	r2, #1
   14d8c:	b	14ed8 <table_cell_to_buffer@@Base+0x314>
   14d90:	mov	r0, r4
   14d94:	mov	r1, r7
   14d98:	mov	r2, r6
   14d9c:	bl	138cc <table_get_ulong@@Base>
   14da0:	movw	r2, #22396	; 0x577c
   14da4:	mov	r3, r0
   14da8:	movt	r2, #1
   14dac:	b	14ed8 <table_cell_to_buffer@@Base+0x314>
   14db0:	mov	r0, r4
   14db4:	mov	r1, r7
   14db8:	mov	r2, r6
   14dbc:	bl	138e4 <table_get_llong@@Base>
   14dc0:	movw	r2, #22374	; 0x5766
   14dc4:	stm	sp, {r0, r1}
   14dc8:	movt	r2, #1
   14dcc:	b	14e50 <table_cell_to_buffer@@Base+0x28c>
   14dd0:	mov	r0, r4
   14dd4:	mov	r1, r7
   14dd8:	mov	r2, r6
   14ddc:	bl	138fc <table_get_ullong@@Base>
   14de0:	movw	r2, #22379	; 0x576b
   14de4:	stm	sp, {r0, r1}
   14de8:	movt	r2, #1
   14dec:	b	14e50 <table_cell_to_buffer@@Base+0x28c>
   14df0:	mov	r0, r4
   14df4:	mov	r1, r7
   14df8:	mov	r2, r6
   14dfc:	bl	13914 <table_get_float@@Base>
   14e00:	movw	r2, #22403	; 0x5783
   14e04:	vcvt.f64.f32	d16, s0
   14e08:	vstr	d16, [sp]
   14e0c:	movt	r2, #1
   14e10:	b	14e50 <table_cell_to_buffer@@Base+0x28c>
   14e14:	mov	r0, r4
   14e18:	mov	r1, r7
   14e1c:	mov	r2, r6
   14e20:	bl	1392c <table_get_double@@Base>
   14e24:	movw	r2, #22406	; 0x5786
   14e28:	vstr	d0, [sp]
   14e2c:	movt	r2, #1
   14e30:	b	14e50 <table_cell_to_buffer@@Base+0x28c>
   14e34:	mov	r0, r4
   14e38:	mov	r1, r7
   14e3c:	mov	r2, r6
   14e40:	bl	13944 <table_get_ldouble@@Base>
   14e44:	movw	r2, #22410	; 0x578a
   14e48:	vstr	d0, [sp]
   14e4c:	movt	r2, #1
   14e50:	mov	r0, r5
   14e54:	mov	r1, r8
   14e58:	bl	11f30 <snprintf@plt>
   14e5c:	mov	r0, #0
   14e60:	sub	sp, fp, #24
   14e64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14e68:	mov	r0, r4
   14e6c:	mov	r1, r7
   14e70:	mov	r2, r6
   14e74:	bl	1395c <table_get_char@@Base>
   14e78:	b	14e8c <table_cell_to_buffer@@Base+0x2c8>
   14e7c:	mov	r0, r4
   14e80:	mov	r1, r7
   14e84:	mov	r2, r6
   14e88:	bl	13974 <table_get_uchar@@Base>
   14e8c:	movw	r2, #22414	; 0x578e
   14e90:	mov	r3, r0
   14e94:	movt	r2, #1
   14e98:	b	14ed8 <table_cell_to_buffer@@Base+0x314>
   14e9c:	mov	r0, r4
   14ea0:	mov	r1, r7
   14ea4:	mov	r2, r6
   14ea8:	bl	1398c <table_get_string@@Base>
   14eac:	movw	r2, #22400	; 0x5780
   14eb0:	mov	r3, r0
   14eb4:	movt	r2, #1
   14eb8:	b	14ed8 <table_cell_to_buffer@@Base+0x314>
   14ebc:	mov	r0, r4
   14ec0:	mov	r1, r7
   14ec4:	mov	r2, r6
   14ec8:	bl	1377c <table_get_bool@@Base>
   14ecc:	movw	r2, #22368	; 0x5760
   14ed0:	mov	r3, r0
   14ed4:	movt	r2, #1
   14ed8:	mov	r0, r5
   14edc:	mov	r1, r8
   14ee0:	bl	11f30 <snprintf@plt>
   14ee4:	mov	r0, #0
   14ee8:	sub	sp, fp, #24
   14eec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ef0:	mov	r0, r4
   14ef4:	mov	r1, r7
   14ef8:	mov	r2, r6
   14efc:	bl	139a0 <table_get_ptr@@Base>
   14f00:	movw	r2, #22417	; 0x5791
   14f04:	mov	r3, r0
   14f08:	movt	r2, #1
   14f0c:	b	14ed8 <table_cell_to_buffer@@Base+0x314>

00014f10 <table_cell_from_buffer@@Base>:
   14f10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14f14:	add	fp, sp, #24
   14f18:	sub	sp, sp, #264	; 0x108
   14f1c:	mov	r5, r1
   14f20:	mov	r1, r2
   14f24:	mov	r7, r3
   14f28:	mov	r4, r2
   14f2c:	mov	r6, r0
   14f30:	bl	12d64 <table_get_column_data_type@@Base>
   14f34:	cmp	r0, #23
   14f38:	bhi	1550c <table_cell_from_buffer@@Base+0x5fc>
   14f3c:	add	r1, pc, #0
   14f40:	ldr	pc, [r1, r0, lsl #2]
   14f44:	andeq	r4, r1, r4, lsr #31
   14f48:	ldrdeq	r4, [r1], -ip
   14f4c:	andeq	r5, r1, r4, lsl r0
   14f50:	andeq	r5, r1, ip, asr #32
   14f54:	andeq	r5, r1, r4, lsl #1
   14f58:	strheq	r5, [r1], -ip
   14f5c:	strdeq	r5, [r1], -r4
   14f60:	andeq	r5, r1, ip, lsr #2
   14f64:	andeq	r5, r1, r4, ror #2
   14f68:	andeq	r5, r1, r4, lsr #3
   14f6c:	andeq	r5, r1, r4, ror #3
   14f70:	andeq	r5, r1, ip, lsl r2
   14f74:	andeq	r5, r1, r4, asr r2
   14f78:	andeq	r5, r1, ip, lsl #5
   14f7c:	andeq	r5, r1, r4, asr #5
   14f80:	andeq	r5, r1, r4, lsl #6
   14f84:	andeq	r5, r1, r4, asr #6
   14f88:	andeq	r5, r1, ip, ror r3
   14f8c:			; <UNDEFINED> instruction: 0x000153b4
   14f90:	andeq	r5, r1, ip, ror #7
   14f94:	andeq	r5, r1, r4, lsr #8
   14f98:	andeq	r5, r1, ip, asr r4
   14f9c:	muleq	r1, r4, r4
   14fa0:	ldrdeq	r5, [r1], -r8
   14fa4:	movw	r1, #22368	; 0x5760
   14fa8:	add	r2, sp, #8
   14fac:	mov	r0, r7
   14fb0:	movt	r1, #1
   14fb4:	bl	11f3c <__isoc99_sscanf@plt>
   14fb8:	mvn	r7, #0
   14fbc:	cmp	r0, #1
   14fc0:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   14fc4:	ldr	r3, [sp, #8]
   14fc8:	mov	r0, r6
   14fcc:	mov	r1, r5
   14fd0:	mov	r2, r4
   14fd4:	bl	13f9c <table_set_int@@Base>
   14fd8:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   14fdc:	movw	r1, #22371	; 0x5763
   14fe0:	add	r2, sp, #8
   14fe4:	mov	r0, r7
   14fe8:	movt	r1, #1
   14fec:	bl	11f3c <__isoc99_sscanf@plt>
   14ff0:	mvn	r7, #0
   14ff4:	cmp	r0, #1
   14ff8:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   14ffc:	ldr	r3, [sp, #8]
   15000:	mov	r0, r6
   15004:	mov	r1, r5
   15008:	mov	r2, r4
   1500c:	bl	1401c <table_set_uint@@Base>
   15010:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   15014:	movw	r1, #22420	; 0x5794
   15018:	add	r2, sp, #8
   1501c:	mov	r0, r7
   15020:	movt	r1, #1
   15024:	bl	11f3c <__isoc99_sscanf@plt>
   15028:	mvn	r7, #0
   1502c:	cmp	r0, #1
   15030:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   15034:	ldrsb	r3, [sp, #8]
   15038:	mov	r0, r6
   1503c:	mov	r1, r5
   15040:	mov	r2, r4
   15044:	bl	1409c <table_set_int8@@Base>
   15048:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   1504c:	movw	r1, #22425	; 0x5799
   15050:	add	r2, sp, #8
   15054:	mov	r0, r7
   15058:	movt	r1, #1
   1505c:	bl	11f3c <__isoc99_sscanf@plt>
   15060:	mvn	r7, #0
   15064:	cmp	r0, #1
   15068:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   1506c:	ldrb	r3, [sp, #8]
   15070:	mov	r0, r6
   15074:	mov	r1, r5
   15078:	mov	r2, r4
   1507c:	bl	1411c <table_set_uint8@@Base>
   15080:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   15084:	movw	r1, #22384	; 0x5770
   15088:	add	r2, sp, #8
   1508c:	mov	r0, r7
   15090:	movt	r1, #1
   15094:	bl	11f3c <__isoc99_sscanf@plt>
   15098:	mvn	r7, #0
   1509c:	cmp	r0, #1
   150a0:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   150a4:	ldrsh	r3, [sp, #8]
   150a8:	mov	r0, r6
   150ac:	mov	r1, r5
   150b0:	mov	r2, r4
   150b4:	bl	1419c <table_set_int16@@Base>
   150b8:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   150bc:	movw	r1, #22388	; 0x5774
   150c0:	add	r2, sp, #8
   150c4:	mov	r0, r7
   150c8:	movt	r1, #1
   150cc:	bl	11f3c <__isoc99_sscanf@plt>
   150d0:	mvn	r7, #0
   150d4:	cmp	r0, #1
   150d8:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   150dc:	ldrh	r3, [sp, #8]
   150e0:	mov	r0, r6
   150e4:	mov	r1, r5
   150e8:	mov	r2, r4
   150ec:	bl	1421c <table_set_uint16@@Base>
   150f0:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   150f4:	movw	r1, #22368	; 0x5760
   150f8:	add	r2, sp, #8
   150fc:	mov	r0, r7
   15100:	movt	r1, #1
   15104:	bl	11f3c <__isoc99_sscanf@plt>
   15108:	mvn	r7, #0
   1510c:	cmp	r0, #1
   15110:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   15114:	ldr	r3, [sp, #8]
   15118:	mov	r0, r6
   1511c:	mov	r1, r5
   15120:	mov	r2, r4
   15124:	bl	1429c <table_set_int32@@Base>
   15128:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   1512c:	movw	r1, #22371	; 0x5763
   15130:	add	r2, sp, #8
   15134:	mov	r0, r7
   15138:	movt	r1, #1
   1513c:	bl	11f3c <__isoc99_sscanf@plt>
   15140:	mvn	r7, #0
   15144:	cmp	r0, #1
   15148:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   1514c:	ldr	r3, [sp, #8]
   15150:	mov	r0, r6
   15154:	mov	r1, r5
   15158:	mov	r2, r4
   1515c:	bl	1431c <table_set_uint32@@Base>
   15160:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   15164:	movw	r1, #22374	; 0x5766
   15168:	add	r2, sp, #8
   1516c:	mov	r0, r7
   15170:	movt	r1, #1
   15174:	bl	11f3c <__isoc99_sscanf@plt>
   15178:	mvn	r7, #0
   1517c:	cmp	r0, #1
   15180:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   15184:	ldr	r0, [sp, #8]
   15188:	ldr	r1, [sp, #12]
   1518c:	mov	r2, r4
   15190:	stm	sp, {r0, r1}
   15194:	mov	r0, r6
   15198:	mov	r1, r5
   1519c:	bl	1439c <table_set_int64@@Base>
   151a0:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   151a4:	movw	r1, #22379	; 0x576b
   151a8:	add	r2, sp, #8
   151ac:	mov	r0, r7
   151b0:	movt	r1, #1
   151b4:	bl	11f3c <__isoc99_sscanf@plt>
   151b8:	mvn	r7, #0
   151bc:	cmp	r0, #1
   151c0:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   151c4:	ldr	r0, [sp, #8]
   151c8:	ldr	r1, [sp, #12]
   151cc:	mov	r2, r4
   151d0:	stm	sp, {r0, r1}
   151d4:	mov	r0, r6
   151d8:	mov	r1, r5
   151dc:	bl	14424 <table_set_uint64@@Base>
   151e0:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   151e4:	movw	r1, #22384	; 0x5770
   151e8:	add	r2, sp, #8
   151ec:	mov	r0, r7
   151f0:	movt	r1, #1
   151f4:	bl	11f3c <__isoc99_sscanf@plt>
   151f8:	mvn	r7, #0
   151fc:	cmp	r0, #1
   15200:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   15204:	ldrsh	r3, [sp, #8]
   15208:	mov	r0, r6
   1520c:	mov	r1, r5
   15210:	mov	r2, r4
   15214:	bl	144ac <table_set_short@@Base>
   15218:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   1521c:	movw	r1, #22388	; 0x5774
   15220:	add	r2, sp, #8
   15224:	mov	r0, r7
   15228:	movt	r1, #1
   1522c:	bl	11f3c <__isoc99_sscanf@plt>
   15230:	mvn	r7, #0
   15234:	cmp	r0, #1
   15238:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   1523c:	ldrh	r3, [sp, #8]
   15240:	mov	r0, r6
   15244:	mov	r1, r5
   15248:	mov	r2, r4
   1524c:	bl	1452c <table_set_ushort@@Base>
   15250:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   15254:	movw	r1, #22392	; 0x5778
   15258:	add	r2, sp, #8
   1525c:	mov	r0, r7
   15260:	movt	r1, #1
   15264:	bl	11f3c <__isoc99_sscanf@plt>
   15268:	mvn	r7, #0
   1526c:	cmp	r0, #1
   15270:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   15274:	ldr	r3, [sp, #8]
   15278:	mov	r0, r6
   1527c:	mov	r1, r5
   15280:	mov	r2, r4
   15284:	bl	145ac <table_set_long@@Base>
   15288:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   1528c:	movw	r1, #22396	; 0x577c
   15290:	add	r2, sp, #8
   15294:	mov	r0, r7
   15298:	movt	r1, #1
   1529c:	bl	11f3c <__isoc99_sscanf@plt>
   152a0:	mvn	r7, #0
   152a4:	cmp	r0, #1
   152a8:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   152ac:	ldr	r3, [sp, #8]
   152b0:	mov	r0, r6
   152b4:	mov	r1, r5
   152b8:	mov	r2, r4
   152bc:	bl	1462c <table_set_ulong@@Base>
   152c0:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   152c4:	movw	r1, #22374	; 0x5766
   152c8:	add	r2, sp, #8
   152cc:	mov	r0, r7
   152d0:	movt	r1, #1
   152d4:	bl	11f3c <__isoc99_sscanf@plt>
   152d8:	mvn	r7, #0
   152dc:	cmp	r0, #1
   152e0:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   152e4:	ldr	r0, [sp, #8]
   152e8:	ldr	r1, [sp, #12]
   152ec:	mov	r2, r4
   152f0:	stm	sp, {r0, r1}
   152f4:	mov	r0, r6
   152f8:	mov	r1, r5
   152fc:	bl	146ac <table_set_llong@@Base>
   15300:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   15304:	movw	r1, #22379	; 0x576b
   15308:	add	r2, sp, #8
   1530c:	mov	r0, r7
   15310:	movt	r1, #1
   15314:	bl	11f3c <__isoc99_sscanf@plt>
   15318:	mvn	r7, #0
   1531c:	cmp	r0, #1
   15320:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   15324:	ldr	r0, [sp, #8]
   15328:	ldr	r1, [sp, #12]
   1532c:	mov	r2, r4
   15330:	stm	sp, {r0, r1}
   15334:	mov	r0, r6
   15338:	mov	r1, r5
   1533c:	bl	14734 <table_set_ullong@@Base>
   15340:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   15344:	movw	r1, #22403	; 0x5783
   15348:	add	r2, sp, #8
   1534c:	mov	r0, r7
   15350:	movt	r1, #1
   15354:	bl	11f3c <__isoc99_sscanf@plt>
   15358:	mvn	r7, #0
   1535c:	cmp	r0, #1
   15360:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   15364:	vldr	s0, [sp, #8]
   15368:	mov	r0, r6
   1536c:	mov	r1, r5
   15370:	mov	r2, r4
   15374:	bl	147bc <table_set_float@@Base>
   15378:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   1537c:	movw	r1, #22406	; 0x5786
   15380:	add	r2, sp, #8
   15384:	mov	r0, r7
   15388:	movt	r1, #1
   1538c:	bl	11f3c <__isoc99_sscanf@plt>
   15390:	mvn	r7, #0
   15394:	cmp	r0, #1
   15398:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   1539c:	vldr	d0, [sp, #8]
   153a0:	mov	r0, r6
   153a4:	mov	r1, r5
   153a8:	mov	r2, r4
   153ac:	bl	14848 <table_set_double@@Base>
   153b0:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   153b4:	movw	r1, #22410	; 0x578a
   153b8:	add	r2, sp, #8
   153bc:	mov	r0, r7
   153c0:	movt	r1, #1
   153c4:	bl	11f3c <__isoc99_sscanf@plt>
   153c8:	mvn	r7, #0
   153cc:	cmp	r0, #1
   153d0:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   153d4:	vldr	d0, [sp, #8]
   153d8:	mov	r0, r6
   153dc:	mov	r1, r5
   153e0:	mov	r2, r4
   153e4:	bl	148d0 <table_set_ldouble@@Base>
   153e8:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   153ec:	movw	r1, #22414	; 0x578e
   153f0:	add	r2, sp, #8
   153f4:	mov	r0, r7
   153f8:	movt	r1, #1
   153fc:	bl	11f3c <__isoc99_sscanf@plt>
   15400:	mvn	r7, #0
   15404:	cmp	r0, #1
   15408:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   1540c:	ldrb	r3, [sp, #8]
   15410:	mov	r0, r6
   15414:	mov	r1, r5
   15418:	mov	r2, r4
   1541c:	bl	149e0 <table_set_char@@Base>
   15420:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   15424:	movw	r1, #22414	; 0x578e
   15428:	add	r2, sp, #8
   1542c:	mov	r0, r7
   15430:	movt	r1, #1
   15434:	bl	11f3c <__isoc99_sscanf@plt>
   15438:	mvn	r7, #0
   1543c:	cmp	r0, #1
   15440:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   15444:	ldrb	r3, [sp, #8]
   15448:	mov	r0, r6
   1544c:	mov	r1, r5
   15450:	mov	r2, r4
   15454:	bl	14a60 <table_set_uchar@@Base>
   15458:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   1545c:	movw	r1, #22400	; 0x5780
   15460:	add	r2, sp, #8
   15464:	mov	r0, r7
   15468:	movt	r1, #1
   1546c:	bl	11f3c <__isoc99_sscanf@plt>
   15470:	mvn	r7, #0
   15474:	cmp	r0, #1
   15478:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   1547c:	add	r3, sp, #8
   15480:	mov	r0, r6
   15484:	mov	r1, r5
   15488:	mov	r2, r4
   1548c:	bl	14958 <table_set_string@@Base>
   15490:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   15494:	movw	r1, #22368	; 0x5760
   15498:	add	r2, sp, #8
   1549c:	mov	r0, r7
   154a0:	movt	r1, #1
   154a4:	bl	11f3c <__isoc99_sscanf@plt>
   154a8:	mvn	r7, #0
   154ac:	cmp	r0, #1
   154b0:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   154b4:	ldr	r0, [sp, #8]
   154b8:	cmp	r0, #0
   154bc:	beq	1551c <table_cell_from_buffer@@Base+0x60c>
   154c0:	mov	r0, r6
   154c4:	mov	r1, r5
   154c8:	mov	r2, r4
   154cc:	mov	r3, #1
   154d0:	bl	13f1c <table_set_bool@@Base>
   154d4:	b	1550c <table_cell_from_buffer@@Base+0x5fc>
   154d8:	movw	r1, #22417	; 0x5791
   154dc:	add	r2, sp, #8
   154e0:	mov	r0, r7
   154e4:	movt	r1, #1
   154e8:	bl	11f3c <__isoc99_sscanf@plt>
   154ec:	mvn	r7, #0
   154f0:	cmp	r0, #1
   154f4:	bne	15510 <table_cell_from_buffer@@Base+0x600>
   154f8:	ldr	r3, [sp, #8]
   154fc:	mov	r0, r6
   15500:	mov	r1, r5
   15504:	mov	r2, r4
   15508:	bl	14ae0 <table_set_ptr@@Base>
   1550c:	mov	r7, #0
   15510:	mov	r0, r7
   15514:	sub	sp, fp, #24
   15518:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1551c:	mov	r0, r6
   15520:	mov	r1, r5
   15524:	mov	r2, r4
   15528:	mov	r3, #0
   1552c:	mov	r7, #0
   15530:	bl	13f1c <table_set_bool@@Base>
   15534:	mov	r0, r7
   15538:	sub	sp, fp, #24
   1553c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015540 <table_cell_nullify@@Base>:
   15540:	push	{r4, r5, fp, lr}
   15544:	add	fp, sp, #8
   15548:	mov	r4, r2
   1554c:	bl	139d8 <table_get_row_ptr@@Base>
   15550:	ldr	r5, [r0]
   15554:	ldr	r0, [r5, r4, lsl #2]
   15558:	cmp	r0, #0
   1555c:	beq	1556c <table_cell_nullify@@Base+0x2c>
   15560:	bl	11ed0 <free@plt>
   15564:	mov	r0, #0
   15568:	str	r0, [r5, r4, lsl #2]
   1556c:	mov	r0, #0
   15570:	pop	{r4, r5, fp, pc}

00015574 <__libc_csu_init@@Base>:
   15574:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15578:	mov	r7, r0
   1557c:	ldr	r6, [pc, #72]	; 155cc <__libc_csu_init@@Base+0x58>
   15580:	ldr	r5, [pc, #72]	; 155d0 <__libc_csu_init@@Base+0x5c>
   15584:	add	r6, pc, r6
   15588:	add	r5, pc, r5
   1558c:	sub	r6, r6, r5
   15590:	mov	r8, r1
   15594:	mov	r9, r2
   15598:	bl	11e98 <strcmp@plt-0x20>
   1559c:	asrs	r6, r6, #2
   155a0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   155a4:	mov	r4, #0
   155a8:	add	r4, r4, #1
   155ac:	ldr	r3, [r5], #4
   155b0:	mov	r2, r9
   155b4:	mov	r1, r8
   155b8:	mov	r0, r7
   155bc:	blx	r3
   155c0:	cmp	r6, r4
   155c4:	bne	155a8 <__libc_csu_init@@Base+0x34>
   155c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155cc:	andeq	r0, r1, r0, lsl #19
   155d0:	andeq	r0, r1, r8, ror r9

000155d4 <__libc_csu_fini@@Base>:
   155d4:	bx	lr

Disassembly of section .fini:

000155d8 <.fini>:
   155d8:	push	{r3, lr}
   155dc:	pop	{r3, pc}
