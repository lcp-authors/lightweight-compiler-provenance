
../repos/coreutils/src/groups:     file format elf32-littlearm


Disassembly of section .init:

00010c44 <.init>:
   10c44:	push	{r3, lr}
   10c48:	bl	11200 <putchar_unlocked@plt+0x32c>
   10c4c:	pop	{r3, pc}

Disassembly of section .plt:

00010c50 <calloc@plt-0x14>:
   10c50:	push	{lr}		; (str lr, [sp, #-4]!)
   10c54:	ldr	lr, [pc, #4]	; 10c60 <calloc@plt-0x4>
   10c58:	add	lr, pc, lr
   10c5c:	ldr	pc, [lr, #8]!
   10c60:	andeq	r4, r1, r0, lsr #7

00010c64 <calloc@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #928]!	; 0x3a0

00010c70 <fputs_unlocked@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #920]!	; 0x398

00010c7c <raise@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #912]!	; 0x390

00010c88 <getpwnam@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #904]!	; 0x388

00010c94 <strcmp@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #896]!	; 0x380

00010ca0 <getpwuid@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #888]!	; 0x378

00010cac <fflush@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #880]!	; 0x370

00010cb8 <getuid@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #872]!	; 0x368

00010cc4 <free@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #864]!	; 0x360

00010cd0 <_exit@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #856]!	; 0x358

00010cdc <memcpy@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #848]!	; 0x350

00010ce8 <mbsinit@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #840]!	; 0x348

00010cf4 <memcmp@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #832]!	; 0x340

00010d00 <fputc_unlocked@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #824]!	; 0x338

00010d0c <dcgettext@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #816]!	; 0x330

00010d18 <realloc@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #808]!	; 0x328

00010d24 <textdomain@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #800]!	; 0x320

00010d30 <iswprint@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #792]!	; 0x318

00010d3c <getegid@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #784]!	; 0x310

00010d48 <lseek64@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #776]!	; 0x308

00010d54 <__ctype_get_mb_cur_max@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #768]!	; 0x300

00010d60 <__fpending@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #760]!	; 0x2f8

00010d6c <ferror_unlocked@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #752]!	; 0x2f0

00010d78 <mbrtowc@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #744]!	; 0x2e8

00010d84 <error@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #736]!	; 0x2e0

00010d90 <malloc@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #728]!	; 0x2d8

00010d9c <__libc_start_main@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #720]!	; 0x2d0

00010da8 <__freading@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #712]!	; 0x2c8

00010db4 <__gmon_start__@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #704]!	; 0x2c0

00010dc0 <getopt_long@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #696]!	; 0x2b8

00010dcc <__ctype_b_loc@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd8 <exit@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #20, 20	; 0x14000
   10de0:	ldr	pc, [ip, #680]!	; 0x2a8

00010de4 <strlen@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #20, 20	; 0x14000
   10dec:	ldr	pc, [ip, #672]!	; 0x2a0

00010df0 <__errno_location@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #20, 20	; 0x14000
   10df8:	ldr	pc, [ip, #664]!	; 0x298

00010dfc <__cxa_atexit@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #20, 20	; 0x14000
   10e04:	ldr	pc, [ip, #656]!	; 0x290

00010e08 <getgid@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #20, 20	; 0x14000
   10e10:	ldr	pc, [ip, #648]!	; 0x288

00010e14 <getgrouplist@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #20, 20	; 0x14000
   10e1c:	ldr	pc, [ip, #640]!	; 0x280

00010e20 <memset@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #20, 20	; 0x14000
   10e28:	ldr	pc, [ip, #632]!	; 0x278

00010e2c <__printf_chk@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #20, 20	; 0x14000
   10e34:	ldr	pc, [ip, #624]!	; 0x270

00010e38 <fileno@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #20, 20	; 0x14000
   10e40:	ldr	pc, [ip, #616]!	; 0x268

00010e44 <__fprintf_chk@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #20, 20	; 0x14000
   10e4c:	ldr	pc, [ip, #608]!	; 0x260

00010e50 <fclose@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #20, 20	; 0x14000
   10e58:	ldr	pc, [ip, #600]!	; 0x258

00010e5c <fseeko64@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #20, 20	; 0x14000
   10e64:	ldr	pc, [ip, #592]!	; 0x250

00010e68 <setlocale@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #20, 20	; 0x14000
   10e70:	ldr	pc, [ip, #584]!	; 0x248

00010e74 <strrchr@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #20, 20	; 0x14000
   10e7c:	ldr	pc, [ip, #576]!	; 0x240

00010e80 <nl_langinfo@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #20, 20	; 0x14000
   10e88:	ldr	pc, [ip, #568]!	; 0x238

00010e8c <getgroups@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #20, 20	; 0x14000
   10e94:	ldr	pc, [ip, #560]!	; 0x230

00010e98 <bindtextdomain@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #20, 20	; 0x14000
   10ea0:	ldr	pc, [ip, #552]!	; 0x228

00010ea4 <fputs@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #20, 20	; 0x14000
   10eac:	ldr	pc, [ip, #544]!	; 0x220

00010eb0 <strncmp@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #536]!	; 0x218

00010ebc <abort@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #528]!	; 0x210

00010ec8 <getgrgid@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #520]!	; 0x208

00010ed4 <putchar_unlocked@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #20, 20	; 0x14000
   10edc:	ldr	pc, [ip, #512]!	; 0x200

Disassembly of section .text:

00010ee0 <.text>:
   10ee0:	push	{r4, lr}
   10ee4:	bl	10df0 <__errno_location@plt>
   10ee8:	mov	r3, #12
   10eec:	str	r3, [r0]
   10ef0:	mov	r0, #0
   10ef4:	pop	{r4, pc}
   10ef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10efc:	mov	r8, r0
   10f00:	sub	sp, sp, #20
   10f04:	mov	r6, r1
   10f08:	mov	r5, #0
   10f0c:	ldr	r0, [r1]
   10f10:	bl	11850 <putchar_unlocked@plt+0x97c>
   10f14:	ldr	r1, [pc, #612]	; 11180 <putchar_unlocked@plt+0x2ac>
   10f18:	mov	r0, #6
   10f1c:	bl	10e68 <setlocale@plt>
   10f20:	ldr	r1, [pc, #604]	; 11184 <putchar_unlocked@plt+0x2b0>
   10f24:	ldr	r0, [pc, #604]	; 11188 <putchar_unlocked@plt+0x2b4>
   10f28:	bl	10e98 <bindtextdomain@plt>
   10f2c:	ldr	r0, [pc, #596]	; 11188 <putchar_unlocked@plt+0x2b4>
   10f30:	bl	10d24 <textdomain@plt>
   10f34:	ldr	r0, [pc, #592]	; 1118c <putchar_unlocked@plt+0x2b8>
   10f38:	bl	13eb0 <putchar_unlocked@plt+0x2fdc>
   10f3c:	ldr	r3, [pc, #588]	; 11190 <putchar_unlocked@plt+0x2bc>
   10f40:	mov	r1, r6
   10f44:	mov	r0, r8
   10f48:	str	r5, [sp]
   10f4c:	ldr	r2, [pc, #556]	; 11180 <putchar_unlocked@plt+0x2ac>
   10f50:	bl	10dc0 <getopt_long@plt>
   10f54:	cmn	r0, #1
   10f58:	beq	10fa8 <putchar_unlocked@plt+0xd4>
   10f5c:	cmn	r0, #3
   10f60:	beq	10f74 <putchar_unlocked@plt+0xa0>
   10f64:	cmn	r0, #2
   10f68:	moveq	r0, r5
   10f6c:	movne	r0, #1
   10f70:	bl	112b4 <putchar_unlocked@plt+0x3e0>
   10f74:	ldr	r3, [pc, #536]	; 11194 <putchar_unlocked@plt+0x2c0>
   10f78:	ldr	r0, [pc, #536]	; 11198 <putchar_unlocked@plt+0x2c4>
   10f7c:	ldr	r2, [pc, #536]	; 1119c <putchar_unlocked@plt+0x2c8>
   10f80:	stmib	sp, {r3, r5}
   10f84:	ldr	r3, [pc, #532]	; 111a0 <putchar_unlocked@plt+0x2cc>
   10f88:	ldr	r1, [pc, #532]	; 111a4 <putchar_unlocked@plt+0x2d0>
   10f8c:	str	r3, [sp]
   10f90:	ldr	r3, [pc, #528]	; 111a8 <putchar_unlocked@plt+0x2d4>
   10f94:	ldr	r0, [r0]
   10f98:	ldr	r3, [r3]
   10f9c:	bl	1329c <putchar_unlocked@plt+0x23c8>
   10fa0:	mov	r0, r5
   10fa4:	bl	10dd8 <exit@plt>
   10fa8:	ldr	r4, [pc, #508]	; 111ac <putchar_unlocked@plt+0x2d8>
   10fac:	ldr	r3, [r4]
   10fb0:	cmp	r3, r8
   10fb4:	bne	11170 <putchar_unlocked@plt+0x29c>
   10fb8:	bl	10df0 <__errno_location@plt>
   10fbc:	str	r5, [r0]
   10fc0:	mov	r4, r0
   10fc4:	bl	10cb8 <getuid@plt>
   10fc8:	cmn	r0, #1
   10fcc:	mov	r6, r0
   10fd0:	bne	11000 <putchar_unlocked@plt+0x12c>
   10fd4:	ldr	r7, [r4]
   10fd8:	cmp	r7, #0
   10fdc:	beq	11000 <putchar_unlocked@plt+0x12c>
   10fe0:	mov	r2, #5
   10fe4:	ldr	r1, [pc, #452]	; 111b0 <putchar_unlocked@plt+0x2dc>
   10fe8:	mov	r0, r5
   10fec:	bl	10d0c <dcgettext@plt>
   10ff0:	mov	r2, r0
   10ff4:	mov	r1, r7
   10ff8:	mov	r0, #1
   10ffc:	bl	10d84 <error@plt>
   11000:	mov	r5, #0
   11004:	str	r5, [r4]
   11008:	bl	10d3c <getegid@plt>
   1100c:	cmn	r0, #1
   11010:	mov	r7, r0
   11014:	mov	r3, r5
   11018:	bne	11044 <putchar_unlocked@plt+0x170>
   1101c:	ldr	r8, [r4]
   11020:	cmp	r8, r5
   11024:	beq	11044 <putchar_unlocked@plt+0x170>
   11028:	mov	r2, #5
   1102c:	ldr	r1, [pc, #384]	; 111b4 <putchar_unlocked@plt+0x2e0>
   11030:	mov	r0, r5
   11034:	bl	10d0c <dcgettext@plt>
   11038:	mov	r2, r0
   1103c:	mov	r1, r8
   11040:	b	10ff8 <putchar_unlocked@plt+0x124>
   11044:	str	r3, [r4]
   11048:	bl	10e08 <getgid@plt>
   1104c:	cmn	r0, #1
   11050:	mov	r2, r0
   11054:	bne	11080 <putchar_unlocked@plt+0x1ac>
   11058:	ldr	r4, [r4]
   1105c:	cmp	r4, #0
   11060:	beq	11080 <putchar_unlocked@plt+0x1ac>
   11064:	mov	r2, #5
   11068:	ldr	r1, [pc, #328]	; 111b8 <putchar_unlocked@plt+0x2e4>
   1106c:	mov	r0, #0
   11070:	bl	10d0c <dcgettext@plt>
   11074:	mov	r2, r0
   11078:	mov	r1, r4
   1107c:	b	10ff8 <putchar_unlocked@plt+0x124>
   11080:	mov	r3, #32
   11084:	mov	r1, r6
   11088:	mov	r0, #0
   1108c:	str	r3, [sp, #4]
   11090:	mov	r3, #1
   11094:	str	r3, [sp]
   11098:	mov	r3, r7
   1109c:	bl	11550 <putchar_unlocked@plt+0x67c>
   110a0:	mov	r5, r0
   110a4:	mov	r0, #10
   110a8:	bl	10ed4 <putchar_unlocked@plt>
   110ac:	eor	r0, r5, #1
   110b0:	uxtb	r0, r0
   110b4:	add	sp, sp, #20
   110b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110bc:	ldr	r0, [r6, r3, lsl #2]
   110c0:	bl	10c88 <getpwnam@plt>
   110c4:	subs	r7, r0, #0
   110c8:	bne	1111c <putchar_unlocked@plt+0x248>
   110cc:	mov	r2, #5
   110d0:	mov	r1, sl
   110d4:	bl	10d0c <dcgettext@plt>
   110d8:	ldr	r3, [r4]
   110dc:	mov	r5, r0
   110e0:	ldr	r0, [r6, r3, lsl #2]
   110e4:	bl	12e50 <putchar_unlocked@plt+0x1f7c>
   110e8:	mov	r3, r0
   110ec:	mov	r2, r5
   110f0:	mov	r1, r7
   110f4:	mov	r0, r7
   110f8:	mov	r5, r7
   110fc:	bl	10d84 <error@plt>
   11100:	ldr	r3, [r4]
   11104:	add	r3, r3, #1
   11108:	str	r3, [r4]
   1110c:	ldr	r3, [r4]
   11110:	cmp	r3, r8
   11114:	blt	110bc <putchar_unlocked@plt+0x1e8>
   11118:	b	110ac <putchar_unlocked@plt+0x1d8>
   1111c:	ldr	r3, [r4]
   11120:	mov	r0, #1
   11124:	ldr	r1, [pc, #144]	; 111bc <putchar_unlocked@plt+0x2e8>
   11128:	ldr	fp, [r7, #8]
   1112c:	ldr	r2, [r6, r3, lsl #2]
   11130:	ldr	r7, [r7, #12]
   11134:	bl	10e2c <__printf_chk@plt>
   11138:	ldr	r0, [r4]
   1113c:	mov	r3, #32
   11140:	mov	r1, fp
   11144:	str	r9, [sp]
   11148:	str	r3, [sp, #4]
   1114c:	mov	r2, r7
   11150:	mov	r3, r7
   11154:	ldr	r0, [r6, r0, lsl #2]
   11158:	bl	11550 <putchar_unlocked@plt+0x67c>
   1115c:	cmp	r0, #0
   11160:	mov	r0, #10
   11164:	moveq	r5, #0
   11168:	bl	10ed4 <putchar_unlocked@plt>
   1116c:	b	11100 <putchar_unlocked@plt+0x22c>
   11170:	mov	r5, #1
   11174:	ldr	sl, [pc, #68]	; 111c0 <putchar_unlocked@plt+0x2ec>
   11178:	mov	r9, r5
   1117c:	b	1110c <putchar_unlocked@plt+0x238>
   11180:	andeq	r4, r1, r2, ror r1
   11184:	andeq	r4, r1, r3, ror r1
   11188:	ldrdeq	r4, [r1], -r0
   1118c:	andeq	r1, r1, r4, asr #13
   11190:	andeq	r3, r1, ip, lsl #30
   11194:	andeq	r4, r1, fp, lsl #3
   11198:	andeq	r5, r2, ip, asr #2
   1119c:	andeq	r4, r1, ip, asr #1
   111a0:	muleq	r1, sl, r1
   111a4:	andeq	r3, r1, ip, lsr pc
   111a8:	andeq	r5, r2, ip, ror #1
   111ac:	andeq	r5, r2, r0, asr #2
   111b0:	andeq	r4, r1, sl, lsr #3
   111b4:			; <UNDEFINED> instruction: 0x000141be
   111b8:	ldrdeq	r4, [r1], -r7
   111bc:	strdeq	r4, [r1], -ip
   111c0:	andeq	r4, r1, fp, ror #3
   111c4:	mov	fp, #0
   111c8:	mov	lr, #0
   111cc:	pop	{r1}		; (ldr r1, [sp], #4)
   111d0:	mov	r2, sp
   111d4:	push	{r2}		; (str r2, [sp, #-4]!)
   111d8:	push	{r0}		; (str r0, [sp, #-4]!)
   111dc:	ldr	ip, [pc, #16]	; 111f4 <putchar_unlocked@plt+0x320>
   111e0:	push	{ip}		; (str ip, [sp, #-4]!)
   111e4:	ldr	r0, [pc, #12]	; 111f8 <putchar_unlocked@plt+0x324>
   111e8:	ldr	r3, [pc, #12]	; 111fc <putchar_unlocked@plt+0x328>
   111ec:	bl	10d9c <__libc_start_main@plt>
   111f0:	bl	10ebc <abort@plt>
   111f4:	andeq	r3, r1, ip, lsr #29
   111f8:	strdeq	r0, [r1], -r8
   111fc:	andeq	r3, r1, ip, asr #28
   11200:	ldr	r3, [pc, #20]	; 1121c <putchar_unlocked@plt+0x348>
   11204:	ldr	r2, [pc, #20]	; 11220 <putchar_unlocked@plt+0x34c>
   11208:	add	r3, pc, r3
   1120c:	ldr	r2, [r3, r2]
   11210:	cmp	r2, #0
   11214:	bxeq	lr
   11218:	b	10db4 <__gmon_start__@plt>
   1121c:	strdeq	r3, [r1], -r0
   11220:	andeq	r0, r0, r0, ror #1
   11224:	ldr	r0, [pc, #24]	; 11244 <putchar_unlocked@plt+0x370>
   11228:	ldr	r3, [pc, #24]	; 11248 <putchar_unlocked@plt+0x374>
   1122c:	cmp	r3, r0
   11230:	bxeq	lr
   11234:	ldr	r3, [pc, #16]	; 1124c <putchar_unlocked@plt+0x378>
   11238:	cmp	r3, #0
   1123c:	bxeq	lr
   11240:	bx	r3
   11244:	andeq	r5, r2, r4, lsr r1
   11248:	andeq	r5, r2, r4, lsr r1
   1124c:	andeq	r0, r0, r0
   11250:	ldr	r0, [pc, #36]	; 1127c <putchar_unlocked@plt+0x3a8>
   11254:	ldr	r1, [pc, #36]	; 11280 <putchar_unlocked@plt+0x3ac>
   11258:	sub	r1, r1, r0
   1125c:	asr	r1, r1, #2
   11260:	add	r1, r1, r1, lsr #31
   11264:	asrs	r1, r1, #1
   11268:	bxeq	lr
   1126c:	ldr	r3, [pc, #16]	; 11284 <putchar_unlocked@plt+0x3b0>
   11270:	cmp	r3, #0
   11274:	bxeq	lr
   11278:	bx	r3
   1127c:	andeq	r5, r2, r4, lsr r1
   11280:	andeq	r5, r2, r4, lsr r1
   11284:	andeq	r0, r0, r0
   11288:	push	{r4, lr}
   1128c:	ldr	r4, [pc, #24]	; 112ac <putchar_unlocked@plt+0x3d8>
   11290:	ldrb	r3, [r4]
   11294:	cmp	r3, #0
   11298:	popne	{r4, pc}
   1129c:	bl	11224 <putchar_unlocked@plt+0x350>
   112a0:	mov	r3, #1
   112a4:	strb	r3, [r4]
   112a8:	pop	{r4, pc}
   112ac:	andeq	r5, r2, r0, asr r1
   112b0:	b	11250 <putchar_unlocked@plt+0x37c>
   112b4:	subs	r6, r0, #0
   112b8:	push	{r7, lr}
   112bc:	sub	sp, sp, #56	; 0x38
   112c0:	ldr	r4, [pc, #448]	; 11488 <putchar_unlocked@plt+0x5b4>
   112c4:	beq	112fc <putchar_unlocked@plt+0x428>
   112c8:	mov	r2, #5
   112cc:	mov	r0, #0
   112d0:	ldr	r3, [pc, #436]	; 1148c <putchar_unlocked@plt+0x5b8>
   112d4:	ldr	r1, [pc, #436]	; 11490 <putchar_unlocked@plt+0x5bc>
   112d8:	ldr	r5, [r3]
   112dc:	bl	10d0c <dcgettext@plt>
   112e0:	mov	r2, r0
   112e4:	mov	r1, #1
   112e8:	ldr	r3, [r4]
   112ec:	mov	r0, r5
   112f0:	bl	10e44 <__fprintf_chk@plt>
   112f4:	mov	r0, r6
   112f8:	bl	10dd8 <exit@plt>
   112fc:	mov	r2, #5
   11300:	ldr	r1, [pc, #396]	; 11494 <putchar_unlocked@plt+0x5c0>
   11304:	mov	r5, sp
   11308:	bl	10d0c <dcgettext@plt>
   1130c:	ldr	r2, [r4]
   11310:	mov	r1, r0
   11314:	mov	r0, #1
   11318:	bl	10e2c <__printf_chk@plt>
   1131c:	ldr	r4, [pc, #372]	; 11498 <putchar_unlocked@plt+0x5c4>
   11320:	mov	r2, #5
   11324:	mov	r0, r6
   11328:	ldr	r1, [pc, #364]	; 1149c <putchar_unlocked@plt+0x5c8>
   1132c:	bl	10d0c <dcgettext@plt>
   11330:	ldr	r7, [pc, #360]	; 114a0 <putchar_unlocked@plt+0x5cc>
   11334:	ldr	r1, [r4]
   11338:	bl	10c70 <fputs_unlocked@plt>
   1133c:	mov	r2, #5
   11340:	ldr	r1, [pc, #348]	; 114a4 <putchar_unlocked@plt+0x5d0>
   11344:	mov	r0, r6
   11348:	bl	10d0c <dcgettext@plt>
   1134c:	ldr	r1, [r4]
   11350:	bl	10c70 <fputs_unlocked@plt>
   11354:	mov	r2, #5
   11358:	ldr	r1, [pc, #328]	; 114a8 <putchar_unlocked@plt+0x5d4>
   1135c:	mov	r0, r6
   11360:	bl	10d0c <dcgettext@plt>
   11364:	ldr	r1, [r4]
   11368:	bl	10c70 <fputs_unlocked@plt>
   1136c:	ldr	lr, [pc, #312]	; 114ac <putchar_unlocked@plt+0x5d8>
   11370:	mov	ip, sp
   11374:	ldm	lr!, {r0, r1, r2, r3}
   11378:	stmia	ip!, {r0, r1, r2, r3}
   1137c:	ldm	lr!, {r0, r1, r2, r3}
   11380:	stmia	ip!, {r0, r1, r2, r3}
   11384:	ldm	lr!, {r0, r1, r2, r3}
   11388:	stmia	ip!, {r0, r1, r2, r3}
   1138c:	ldm	lr, {r0, r1}
   11390:	stm	ip, {r0, r1}
   11394:	ldr	r1, [r5]
   11398:	cmp	r1, #0
   1139c:	bne	11440 <putchar_unlocked@plt+0x56c>
   113a0:	ldr	r5, [r5, #4]
   113a4:	mov	r2, #5
   113a8:	mov	r0, #0
   113ac:	ldr	r7, [pc, #236]	; 114a0 <putchar_unlocked@plt+0x5cc>
   113b0:	ldr	r1, [pc, #248]	; 114b0 <putchar_unlocked@plt+0x5dc>
   113b4:	cmp	r5, #0
   113b8:	moveq	r5, r7
   113bc:	bl	10d0c <dcgettext@plt>
   113c0:	mov	r1, r0
   113c4:	ldr	r3, [pc, #232]	; 114b4 <putchar_unlocked@plt+0x5e0>
   113c8:	mov	r0, #1
   113cc:	ldr	r2, [pc, #228]	; 114b8 <putchar_unlocked@plt+0x5e4>
   113d0:	bl	10e2c <__printf_chk@plt>
   113d4:	mov	r1, #0
   113d8:	mov	r0, #5
   113dc:	bl	10e68 <setlocale@plt>
   113e0:	cmp	r0, #0
   113e4:	bne	11458 <putchar_unlocked@plt+0x584>
   113e8:	mov	r2, #5
   113ec:	ldr	r1, [pc, #200]	; 114bc <putchar_unlocked@plt+0x5e8>
   113f0:	mov	r0, #0
   113f4:	bl	10d0c <dcgettext@plt>
   113f8:	mov	r1, r0
   113fc:	ldr	r3, [pc, #156]	; 114a0 <putchar_unlocked@plt+0x5cc>
   11400:	mov	r0, #1
   11404:	ldr	r2, [pc, #168]	; 114b4 <putchar_unlocked@plt+0x5e0>
   11408:	bl	10e2c <__printf_chk@plt>
   1140c:	mov	r2, #5
   11410:	ldr	r1, [pc, #168]	; 114c0 <putchar_unlocked@plt+0x5ec>
   11414:	mov	r0, #0
   11418:	bl	10d0c <dcgettext@plt>
   1141c:	ldr	r2, [pc, #160]	; 114c4 <putchar_unlocked@plt+0x5f0>
   11420:	cmp	r5, r7
   11424:	mov	r1, r0
   11428:	mov	r0, #1
   1142c:	ldr	r3, [pc, #148]	; 114c8 <putchar_unlocked@plt+0x5f4>
   11430:	moveq	r3, r2
   11434:	mov	r2, r5
   11438:	bl	10e2c <__printf_chk@plt>
   1143c:	b	112f4 <putchar_unlocked@plt+0x420>
   11440:	mov	r0, r7
   11444:	bl	10c94 <strcmp@plt>
   11448:	cmp	r0, #0
   1144c:	beq	113a0 <putchar_unlocked@plt+0x4cc>
   11450:	add	r5, r5, #8
   11454:	b	11394 <putchar_unlocked@plt+0x4c0>
   11458:	mov	r2, #3
   1145c:	ldr	r1, [pc, #104]	; 114cc <putchar_unlocked@plt+0x5f8>
   11460:	bl	10eb0 <strncmp@plt>
   11464:	cmp	r0, #0
   11468:	beq	113e8 <putchar_unlocked@plt+0x514>
   1146c:	mov	r2, #5
   11470:	ldr	r1, [pc, #88]	; 114d0 <putchar_unlocked@plt+0x5fc>
   11474:	mov	r0, #0
   11478:	bl	10d0c <dcgettext@plt>
   1147c:	ldr	r1, [r4]
   11480:	bl	10c70 <fputs_unlocked@plt>
   11484:	b	113e8 <putchar_unlocked@plt+0x514>
   11488:	andeq	r5, r2, r0, ror r1
   1148c:	andeq	r5, r2, r8, asr #2
   11490:	andeq	r3, r1, r3, asr #30
   11494:	andeq	r3, r1, sl, ror #30
   11498:	andeq	r5, r2, ip, asr #2
   1149c:	andeq	r3, r1, pc, lsl #31
   114a0:	andeq	r3, r1, ip, lsr pc
   114a4:	andeq	r4, r1, sl, lsr #32
   114a8:	andeq	r4, r1, r7, asr r0
   114ac:	ldrdeq	r3, [r1], -r4
   114b0:	andeq	r4, r1, sp, lsl #1
   114b4:	andeq	r4, r1, r4, lsr #1
   114b8:	andeq	r4, r1, ip, asr #1
   114bc:	andeq	r4, r1, r5, lsr #2
   114c0:	andeq	r4, r1, r0, asr #2
   114c4:	andeq	r4, r1, lr, lsl r2
   114c8:	andeq	r4, r1, r2, ror r1
   114cc:	ldrdeq	r4, [r1], -sl
   114d0:	ldrdeq	r4, [r1], -lr
   114d4:	push	{r4, r5, r6, lr}
   114d8:	subs	r5, r1, #0
   114dc:	mov	r6, r0
   114e0:	beq	1153c <putchar_unlocked@plt+0x668>
   114e4:	bl	10ec8 <getgrgid@plt>
   114e8:	subs	r4, r0, #0
   114ec:	ldrne	r0, [r4]
   114f0:	bne	11528 <putchar_unlocked@plt+0x654>
   114f4:	mov	r2, #5
   114f8:	mov	r5, r4
   114fc:	ldr	r1, [pc, #64]	; 11544 <putchar_unlocked@plt+0x670>
   11500:	bl	10d0c <dcgettext@plt>
   11504:	mov	r2, r0
   11508:	mov	r3, r6
   1150c:	mov	r1, r4
   11510:	mov	r0, r4
   11514:	bl	10d84 <error@plt>
   11518:	ldr	r2, [pc, #40]	; 11548 <putchar_unlocked@plt+0x674>
   1151c:	mov	r0, r6
   11520:	mov	r1, #0
   11524:	bl	117e8 <putchar_unlocked@plt+0x914>
   11528:	ldr	r3, [pc, #28]	; 1154c <putchar_unlocked@plt+0x678>
   1152c:	ldr	r1, [r3]
   11530:	bl	10c70 <fputs_unlocked@plt>
   11534:	mov	r0, r5
   11538:	pop	{r4, r5, r6, pc}
   1153c:	mov	r5, #1
   11540:	b	11518 <putchar_unlocked@plt+0x644>
   11544:	andeq	r4, r1, lr, ror #4
   11548:	andeq	r5, r2, r1, asr r1
   1154c:	andeq	r5, r2, ip, asr #2
   11550:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   11554:	subs	r5, r0, #0
   11558:	mov	r8, r2
   1155c:	mov	r6, r3
   11560:	moveq	r7, r5
   11564:	moveq	r4, #1
   11568:	ldrb	r9, [sp, #40]	; 0x28
   1156c:	ldrb	sl, [sp, #44]	; 0x2c
   11570:	beq	11588 <putchar_unlocked@plt+0x6b4>
   11574:	mov	r0, r1
   11578:	bl	10ca0 <getpwuid@plt>
   1157c:	adds	r4, r0, #0
   11580:	mov	r7, r0
   11584:	movne	r4, #1
   11588:	mov	r1, r9
   1158c:	mov	r0, r8
   11590:	bl	114d4 <putchar_unlocked@plt+0x600>
   11594:	cmp	r0, #0
   11598:	moveq	r4, #0
   1159c:	cmp	r8, r6
   115a0:	beq	115c0 <putchar_unlocked@plt+0x6ec>
   115a4:	mov	r0, sl
   115a8:	bl	10ed4 <putchar_unlocked@plt>
   115ac:	mov	r1, r9
   115b0:	mov	r0, r6
   115b4:	bl	114d4 <putchar_unlocked@plt+0x600>
   115b8:	cmp	r0, #0
   115bc:	moveq	r4, #0
   115c0:	cmp	r7, #0
   115c4:	mov	r0, r5
   115c8:	ldrne	r1, [r7, #12]
   115cc:	moveq	r1, r6
   115d0:	add	r2, sp, #4
   115d4:	bl	1365c <putchar_unlocked@plt+0x2788>
   115d8:	subs	r7, r0, #0
   115dc:	movge	r5, #0
   115e0:	bge	11688 <putchar_unlocked@plt+0x7b4>
   115e4:	bl	10df0 <__errno_location@plt>
   115e8:	cmp	r5, #0
   115ec:	mov	r2, #5
   115f0:	ldr	r4, [r0]
   115f4:	beq	11634 <putchar_unlocked@plt+0x760>
   115f8:	ldr	r1, [pc, #156]	; 1169c <putchar_unlocked@plt+0x7c8>
   115fc:	mov	r0, #0
   11600:	bl	10d0c <dcgettext@plt>
   11604:	mov	r6, r0
   11608:	mov	r0, r5
   1160c:	bl	12e50 <putchar_unlocked@plt+0x1f7c>
   11610:	mov	r3, r0
   11614:	mov	r2, r6
   11618:	mov	r1, r4
   1161c:	mov	r0, #0
   11620:	bl	10d84 <error@plt>
   11624:	mov	r4, #0
   11628:	mov	r0, r4
   1162c:	add	sp, sp, #8
   11630:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11634:	ldr	r1, [pc, #100]	; 116a0 <putchar_unlocked@plt+0x7cc>
   11638:	mov	r0, r5
   1163c:	bl	10d0c <dcgettext@plt>
   11640:	mov	r2, r0
   11644:	mov	r1, r4
   11648:	mov	r0, r5
   1164c:	bl	10d84 <error@plt>
   11650:	b	11624 <putchar_unlocked@plt+0x750>
   11654:	ldr	r3, [r0, r5, lsl #2]
   11658:	cmp	r3, r6
   1165c:	cmpne	r3, r8
   11660:	beq	11684 <putchar_unlocked@plt+0x7b0>
   11664:	mov	r0, sl
   11668:	bl	10ed4 <putchar_unlocked@plt>
   1166c:	ldr	r3, [sp, #4]
   11670:	mov	r1, r9
   11674:	ldr	r0, [r3, r5, lsl #2]
   11678:	bl	114d4 <putchar_unlocked@plt+0x600>
   1167c:	cmp	r0, #0
   11680:	moveq	r4, #0
   11684:	add	r5, r5, #1
   11688:	cmp	r5, r7
   1168c:	ldr	r0, [sp, #4]
   11690:	bne	11654 <putchar_unlocked@plt+0x780>
   11694:	bl	11798 <putchar_unlocked@plt+0x8c4>
   11698:	b	11628 <putchar_unlocked@plt+0x754>
   1169c:	muleq	r1, r0, r2
   116a0:			; <UNDEFINED> instruction: 0x000142b1
   116a4:	ldr	r3, [pc, #4]	; 116b0 <putchar_unlocked@plt+0x7dc>
   116a8:	str	r0, [r3]
   116ac:	bx	lr
   116b0:	andeq	r5, r2, r8, ror #2
   116b4:	ldr	r3, [pc, #4]	; 116c0 <putchar_unlocked@plt+0x7ec>
   116b8:	strb	r0, [r3, #4]
   116bc:	bx	lr
   116c0:	andeq	r5, r2, r8, ror #2
   116c4:	ldr	r3, [pc, #176]	; 1177c <putchar_unlocked@plt+0x8a8>
   116c8:	push	{r0, r1, r4, r5, r6, lr}
   116cc:	ldr	r0, [r3]
   116d0:	bl	13750 <putchar_unlocked@plt+0x287c>
   116d4:	cmp	r0, #0
   116d8:	beq	11760 <putchar_unlocked@plt+0x88c>
   116dc:	ldr	r4, [pc, #156]	; 11780 <putchar_unlocked@plt+0x8ac>
   116e0:	bl	10df0 <__errno_location@plt>
   116e4:	mov	r5, r0
   116e8:	ldrb	r6, [r4, #4]
   116ec:	cmp	r6, #0
   116f0:	beq	11700 <putchar_unlocked@plt+0x82c>
   116f4:	ldr	r3, [r0]
   116f8:	cmp	r3, #32
   116fc:	beq	11760 <putchar_unlocked@plt+0x88c>
   11700:	mov	r2, #5
   11704:	ldr	r1, [pc, #120]	; 11784 <putchar_unlocked@plt+0x8b0>
   11708:	mov	r0, #0
   1170c:	bl	10d0c <dcgettext@plt>
   11710:	mov	r6, r0
   11714:	ldr	r0, [r4]
   11718:	cmp	r0, #0
   1171c:	beq	1174c <putchar_unlocked@plt+0x878>
   11720:	ldr	r4, [r5]
   11724:	bl	12d00 <putchar_unlocked@plt+0x1e2c>
   11728:	mov	r3, r0
   1172c:	ldr	r2, [pc, #84]	; 11788 <putchar_unlocked@plt+0x8b4>
   11730:	mov	r0, #0
   11734:	str	r6, [sp]
   11738:	mov	r1, r4
   1173c:	bl	10d84 <error@plt>
   11740:	ldr	r3, [pc, #68]	; 1178c <putchar_unlocked@plt+0x8b8>
   11744:	ldr	r0, [r3]
   11748:	bl	10cd0 <_exit@plt>
   1174c:	mov	r3, r6
   11750:	ldr	r2, [pc, #56]	; 11790 <putchar_unlocked@plt+0x8bc>
   11754:	ldr	r1, [r5]
   11758:	bl	10d84 <error@plt>
   1175c:	b	11740 <putchar_unlocked@plt+0x86c>
   11760:	ldr	r3, [pc, #44]	; 11794 <putchar_unlocked@plt+0x8c0>
   11764:	ldr	r0, [r3]
   11768:	bl	13750 <putchar_unlocked@plt+0x287c>
   1176c:	cmp	r0, #0
   11770:	bne	11740 <putchar_unlocked@plt+0x86c>
   11774:	add	sp, sp, #8
   11778:	pop	{r4, r5, r6, pc}
   1177c:	andeq	r5, r2, ip, asr #2
   11780:	andeq	r5, r2, r8, ror #2
   11784:	andeq	r4, r1, sp, ror #5
   11788:	strdeq	r4, [r1], -r9
   1178c:	strdeq	r5, [r2], -r0
   11790:	strdeq	r4, [r1], -sp
   11794:	andeq	r5, r2, r8, asr #2
   11798:	push	{r0, r1, r2, r4, r5, lr}
   1179c:	mov	r5, r0
   117a0:	bl	10df0 <__errno_location@plt>
   117a4:	mov	r4, r0
   117a8:	mov	r0, r5
   117ac:	ldr	r3, [r4]
   117b0:	str	r3, [sp]
   117b4:	str	r3, [sp, #4]
   117b8:	mov	r3, #0
   117bc:	str	r3, [r4]
   117c0:	bl	10cc4 <free@plt>
   117c4:	ldr	r3, [r4]
   117c8:	add	r2, sp, #8
   117cc:	clz	r3, r3
   117d0:	lsr	r3, r3, #5
   117d4:	add	r3, r2, r3, lsl #2
   117d8:	ldr	r3, [r3, #-8]
   117dc:	str	r3, [r4]
   117e0:	add	sp, sp, #12
   117e4:	pop	{r4, r5, pc}
   117e8:	push	{r4, r5, r6, lr}
   117ec:	mov	r3, #0
   117f0:	mov	r4, r0
   117f4:	mov	r5, r1
   117f8:	add	r6, r2, #20
   117fc:	strb	r3, [r2, #20]
   11800:	mov	r2, #10
   11804:	mov	r3, #0
   11808:	mov	r0, r4
   1180c:	mov	r1, r5
   11810:	bl	13cd8 <putchar_unlocked@plt+0x2e04>
   11814:	add	r2, r2, #48	; 0x30
   11818:	mov	r3, #0
   1181c:	mov	r0, r4
   11820:	mov	r1, r5
   11824:	strb	r2, [r6, #-1]!
   11828:	mov	r2, #10
   1182c:	bl	13cd8 <putchar_unlocked@plt+0x2e04>
   11830:	cmp	r5, #0
   11834:	cmpeq	r4, #9
   11838:	bhi	11844 <putchar_unlocked@plt+0x970>
   1183c:	mov	r0, r6
   11840:	pop	{r4, r5, r6, pc}
   11844:	mov	r4, r0
   11848:	mov	r5, r1
   1184c:	b	11800 <putchar_unlocked@plt+0x92c>
   11850:	push	{r4, r5, r6, lr}
   11854:	subs	r4, r0, #0
   11858:	bne	11870 <putchar_unlocked@plt+0x99c>
   1185c:	ldr	r3, [pc, #124]	; 118e0 <putchar_unlocked@plt+0xa0c>
   11860:	ldr	r0, [pc, #124]	; 118e4 <putchar_unlocked@plt+0xa10>
   11864:	ldr	r1, [r3]
   11868:	bl	10ea4 <fputs@plt>
   1186c:	bl	10ebc <abort@plt>
   11870:	mov	r1, #47	; 0x2f
   11874:	bl	10e74 <strrchr@plt>
   11878:	subs	r6, r0, #0
   1187c:	beq	118cc <putchar_unlocked@plt+0x9f8>
   11880:	add	r5, r6, #1
   11884:	sub	r3, r5, r4
   11888:	cmp	r3, #6
   1188c:	ble	118cc <putchar_unlocked@plt+0x9f8>
   11890:	mov	r2, #7
   11894:	ldr	r1, [pc, #76]	; 118e8 <putchar_unlocked@plt+0xa14>
   11898:	sub	r0, r6, #6
   1189c:	bl	10eb0 <strncmp@plt>
   118a0:	cmp	r0, #0
   118a4:	bne	118cc <putchar_unlocked@plt+0x9f8>
   118a8:	mov	r2, #3
   118ac:	ldr	r1, [pc, #56]	; 118ec <putchar_unlocked@plt+0xa18>
   118b0:	mov	r0, r5
   118b4:	bl	10eb0 <strncmp@plt>
   118b8:	cmp	r0, #0
   118bc:	ldreq	r3, [pc, #44]	; 118f0 <putchar_unlocked@plt+0xa1c>
   118c0:	addeq	r4, r6, #4
   118c4:	movne	r4, r5
   118c8:	streq	r4, [r3]
   118cc:	ldr	r3, [pc, #32]	; 118f4 <putchar_unlocked@plt+0xa20>
   118d0:	str	r4, [r3]
   118d4:	ldr	r3, [pc, #28]	; 118f8 <putchar_unlocked@plt+0xa24>
   118d8:	str	r4, [r3]
   118dc:	pop	{r4, r5, r6, pc}
   118e0:	andeq	r5, r2, r8, asr #2
   118e4:	andeq	r4, r1, r0, lsl #6
   118e8:	andeq	r4, r1, r8, lsr r3
   118ec:	andeq	r4, r1, r0, asr #6
   118f0:	andeq	r5, r2, r8, lsr r1
   118f4:	andeq	r5, r2, r0, ror r1
   118f8:	andeq	r5, r2, ip, lsr r1
   118fc:	push	{r4, lr}
   11900:	mov	r2, #48	; 0x30
   11904:	mov	r4, r1
   11908:	mov	r1, #0
   1190c:	bl	10e20 <memset@plt>
   11910:	cmp	r4, #10
   11914:	bne	1191c <putchar_unlocked@plt+0xa48>
   11918:	bl	10ebc <abort@plt>
   1191c:	str	r4, [r0]
   11920:	pop	{r4, pc}
   11924:	push	{r4, r5, r6, lr}
   11928:	mov	r2, #5
   1192c:	mov	r6, r0
   11930:	mov	r5, r1
   11934:	mov	r1, r0
   11938:	mov	r0, #0
   1193c:	bl	10d0c <dcgettext@plt>
   11940:	cmp	r6, r0
   11944:	mov	r4, r0
   11948:	bne	119b8 <putchar_unlocked@plt+0xae4>
   1194c:	bl	13978 <putchar_unlocked@plt+0x2aa4>
   11950:	ldrb	r3, [r0]
   11954:	bic	r3, r3, #32
   11958:	cmp	r3, #85	; 0x55
   1195c:	bne	119c0 <putchar_unlocked@plt+0xaec>
   11960:	ldrb	r3, [r0, #1]
   11964:	bic	r3, r3, #32
   11968:	cmp	r3, #84	; 0x54
   1196c:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   11970:	ldrb	r3, [r0, #2]
   11974:	bic	r3, r3, #32
   11978:	cmp	r3, #70	; 0x46
   1197c:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   11980:	ldrb	r3, [r0, #3]
   11984:	cmp	r3, #45	; 0x2d
   11988:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   1198c:	ldrb	r3, [r0, #4]
   11990:	cmp	r3, #56	; 0x38
   11994:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   11998:	ldrb	r3, [r0, #5]
   1199c:	cmp	r3, #0
   119a0:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   119a4:	ldrb	r2, [r4]
   119a8:	ldr	r3, [pc, #144]	; 11a40 <putchar_unlocked@plt+0xb6c>
   119ac:	ldr	r4, [pc, #144]	; 11a44 <putchar_unlocked@plt+0xb70>
   119b0:	cmp	r2, #96	; 0x60
   119b4:	movne	r4, r3
   119b8:	mov	r0, r4
   119bc:	pop	{r4, r5, r6, pc}
   119c0:	cmp	r3, #71	; 0x47
   119c4:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   119c8:	ldrb	r3, [r0, #1]
   119cc:	bic	r3, r3, #32
   119d0:	cmp	r3, #66	; 0x42
   119d4:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   119d8:	ldrb	r3, [r0, #2]
   119dc:	cmp	r3, #49	; 0x31
   119e0:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   119e4:	ldrb	r3, [r0, #3]
   119e8:	cmp	r3, #56	; 0x38
   119ec:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   119f0:	ldrb	r3, [r0, #4]
   119f4:	cmp	r3, #48	; 0x30
   119f8:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   119fc:	ldrb	r3, [r0, #5]
   11a00:	cmp	r3, #51	; 0x33
   11a04:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   11a08:	ldrb	r3, [r0, #6]
   11a0c:	cmp	r3, #48	; 0x30
   11a10:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   11a14:	ldrb	r3, [r0, #7]
   11a18:	cmp	r3, #0
   11a1c:	bne	11a30 <putchar_unlocked@plt+0xb5c>
   11a20:	ldrb	r2, [r4]
   11a24:	ldr	r3, [pc, #28]	; 11a48 <putchar_unlocked@plt+0xb74>
   11a28:	ldr	r4, [pc, #28]	; 11a4c <putchar_unlocked@plt+0xb78>
   11a2c:	b	119b0 <putchar_unlocked@plt+0xadc>
   11a30:	ldr	r4, [pc, #24]	; 11a50 <putchar_unlocked@plt+0xb7c>
   11a34:	cmp	r5, #9
   11a38:	ldr	r3, [pc, #20]	; 11a54 <putchar_unlocked@plt+0xb80>
   11a3c:	b	119b4 <putchar_unlocked@plt+0xae0>
   11a40:	muleq	r1, sl, r3
   11a44:	andeq	r4, r1, r5, lsr #7
   11a48:	muleq	r1, lr, r3
   11a4c:	andeq	r4, r1, r1, lsr #7
   11a50:	muleq	r1, r8, r3
   11a54:	andeq	r4, r1, r9, lsr #7
   11a58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a5c:	sub	sp, sp, #108	; 0x6c
   11a60:	mov	r8, r0
   11a64:	mov	r5, r1
   11a68:	mov	r6, #0
   11a6c:	str	r3, [sp, #40]	; 0x28
   11a70:	str	r2, [sp, #48]	; 0x30
   11a74:	ldr	sl, [sp, #144]	; 0x90
   11a78:	bl	10d54 <__ctype_get_mb_cur_max@plt>
   11a7c:	ldr	r3, [sp, #148]	; 0x94
   11a80:	str	r6, [sp, #24]
   11a84:	str	r6, [sp, #32]
   11a88:	str	r6, [sp, #44]	; 0x2c
   11a8c:	str	r6, [sp, #52]	; 0x34
   11a90:	ubfx	r7, r3, #1, #1
   11a94:	mov	r3, #1
   11a98:	str	r6, [sp, #60]	; 0x3c
   11a9c:	str	r3, [sp, #72]	; 0x48
   11aa0:	str	r0, [sp, #76]	; 0x4c
   11aa4:	cmp	sl, #10
   11aa8:	ldrls	pc, [pc, sl, lsl #2]
   11aac:	b	11cf0 <putchar_unlocked@plt+0xe1c>
   11ab0:	ldrdeq	r1, [r1], -ip
   11ab4:	andeq	r1, r1, r8, lsl #26
   11ab8:	andeq	r1, r1, ip, lsl #25
   11abc:	andeq	r1, r1, r4, lsr #25
   11ac0:	andeq	r1, r1, r4, ror ip
   11ac4:	andeq	r1, r1, ip, asr #23
   11ac8:	andeq	r1, r1, ip, lsr #23
   11acc:	strdeq	r1, [r1], -r4
   11ad0:	strdeq	r1, [r1], -ip
   11ad4:	strdeq	r1, [r1], -ip
   11ad8:	strdeq	r1, [r1], -ip
   11adc:	mov	r4, sl
   11ae0:	mov	r7, #0
   11ae4:	mov	r9, r5
   11ae8:	mov	r3, #0
   11aec:	str	r6, [sp, #68]	; 0x44
   11af0:	str	r3, [sp, #28]
   11af4:	ldr	r3, [sp, #40]	; 0x28
   11af8:	cmn	r3, #1
   11afc:	bne	1269c <putchar_unlocked@plt+0x17c8>
   11b00:	ldr	r2, [sp, #28]
   11b04:	ldr	r3, [sp, #48]	; 0x30
   11b08:	ldrb	r3, [r3, r2]
   11b0c:	adds	r3, r3, #0
   11b10:	movne	r3, #1
   11b14:	str	r3, [sp, #36]	; 0x24
   11b18:	ldr	r3, [sp, #36]	; 0x24
   11b1c:	cmp	r3, #0
   11b20:	bne	11d2c <putchar_unlocked@plt+0xe58>
   11b24:	sub	r3, sl, #2
   11b28:	cmp	r4, #0
   11b2c:	clz	r3, r3
   11b30:	movne	r2, #0
   11b34:	lsr	r3, r3, #5
   11b38:	andeq	r2, r3, r7
   11b3c:	cmp	r2, #0
   11b40:	bne	11ef0 <putchar_unlocked@plt+0x101c>
   11b44:	eor	r7, r7, #1
   11b48:	ands	r3, r3, r7
   11b4c:	beq	12714 <putchar_unlocked@plt+0x1840>
   11b50:	ldr	r2, [sp, #68]	; 0x44
   11b54:	cmp	r2, #0
   11b58:	beq	126dc <putchar_unlocked@plt+0x1808>
   11b5c:	ldr	r3, [sp, #72]	; 0x48
   11b60:	cmp	r3, #0
   11b64:	beq	126b0 <putchar_unlocked@plt+0x17dc>
   11b68:	ldr	r2, [sp, #48]	; 0x30
   11b6c:	ldr	r3, [sp, #160]	; 0xa0
   11b70:	ldr	r1, [sp, #60]	; 0x3c
   11b74:	str	r3, [sp, #16]
   11b78:	ldr	r3, [sp, #156]	; 0x9c
   11b7c:	str	r3, [sp, #12]
   11b80:	ldr	r3, [sp, #152]	; 0x98
   11b84:	str	r3, [sp, #8]
   11b88:	ldr	r3, [sp, #148]	; 0x94
   11b8c:	str	r3, [sp, #4]
   11b90:	mov	r3, #5
   11b94:	str	r3, [sp]
   11b98:	ldr	r3, [sp, #40]	; 0x28
   11b9c:	mov	r0, r8
   11ba0:	bl	11a58 <putchar_unlocked@plt+0xb84>
   11ba4:	mov	r4, r0
   11ba8:	b	12708 <putchar_unlocked@plt+0x1834>
   11bac:	ldr	r3, [pc, #2948]	; 12738 <putchar_unlocked@plt+0x1864>
   11bb0:	mov	r7, #1
   11bb4:	mov	r4, #0
   11bb8:	mov	sl, #5
   11bbc:	str	r7, [sp, #24]
   11bc0:	str	r7, [sp, #32]
   11bc4:	str	r3, [sp, #44]	; 0x2c
   11bc8:	b	11ae4 <putchar_unlocked@plt+0xc10>
   11bcc:	cmp	r7, #0
   11bd0:	bne	11d14 <putchar_unlocked@plt+0xe40>
   11bd4:	cmp	r5, #0
   11bd8:	mov	r4, #1
   11bdc:	movne	r3, #34	; 0x22
   11be0:	strbne	r3, [r8]
   11be4:	mov	r3, #1
   11be8:	str	r3, [sp, #24]
   11bec:	str	r3, [sp, #32]
   11bf0:	ldr	r3, [pc, #2880]	; 12738 <putchar_unlocked@plt+0x1864>
   11bf4:	str	r3, [sp, #44]	; 0x2c
   11bf8:	b	11ae4 <putchar_unlocked@plt+0xc10>
   11bfc:	cmp	sl, #10
   11c00:	beq	11c24 <putchar_unlocked@plt+0xd50>
   11c04:	mov	r1, sl
   11c08:	ldr	r0, [pc, #2860]	; 1273c <putchar_unlocked@plt+0x1868>
   11c0c:	bl	11924 <putchar_unlocked@plt+0xa50>
   11c10:	mov	r1, sl
   11c14:	str	r0, [sp, #156]	; 0x9c
   11c18:	ldr	r0, [pc, #2848]	; 12740 <putchar_unlocked@plt+0x186c>
   11c1c:	bl	11924 <putchar_unlocked@plt+0xa50>
   11c20:	str	r0, [sp, #160]	; 0xa0
   11c24:	cmp	r7, #0
   11c28:	moveq	r4, r7
   11c2c:	beq	11c44 <putchar_unlocked@plt+0xd70>
   11c30:	mov	r4, #0
   11c34:	b	11c54 <putchar_unlocked@plt+0xd80>
   11c38:	cmp	r5, r4
   11c3c:	strbhi	r3, [r8, r4]
   11c40:	add	r4, r4, #1
   11c44:	ldr	r3, [sp, #156]	; 0x9c
   11c48:	ldrb	r3, [r3, r4]
   11c4c:	cmp	r3, #0
   11c50:	bne	11c38 <putchar_unlocked@plt+0xd64>
   11c54:	ldr	r0, [sp, #160]	; 0xa0
   11c58:	bl	10de4 <strlen@plt>
   11c5c:	ldr	r3, [sp, #160]	; 0xa0
   11c60:	str	r0, [sp, #32]
   11c64:	str	r3, [sp, #44]	; 0x2c
   11c68:	mov	r3, #1
   11c6c:	str	r3, [sp, #24]
   11c70:	b	11ae4 <putchar_unlocked@plt+0xc10>
   11c74:	mov	r3, #1
   11c78:	cmp	r7, #0
   11c7c:	streq	r3, [sp, #24]
   11c80:	beq	11cc4 <putchar_unlocked@plt+0xdf0>
   11c84:	str	r3, [sp, #32]
   11c88:	b	11cb0 <putchar_unlocked@plt+0xddc>
   11c8c:	cmp	r7, #0
   11c90:	beq	11cc4 <putchar_unlocked@plt+0xdf0>
   11c94:	mov	r3, #1
   11c98:	str	r3, [sp, #32]
   11c9c:	ldr	r3, [pc, #2716]	; 12740 <putchar_unlocked@plt+0x186c>
   11ca0:	b	11d24 <putchar_unlocked@plt+0xe50>
   11ca4:	mov	r7, #1
   11ca8:	str	r7, [sp, #24]
   11cac:	str	r7, [sp, #32]
   11cb0:	ldr	r3, [pc, #2696]	; 12740 <putchar_unlocked@plt+0x186c>
   11cb4:	mov	r4, #0
   11cb8:	str	r3, [sp, #44]	; 0x2c
   11cbc:	mov	sl, #2
   11cc0:	b	11ae4 <putchar_unlocked@plt+0xc10>
   11cc4:	cmp	r5, #0
   11cc8:	movne	r3, #39	; 0x27
   11ccc:	movne	r7, #0
   11cd0:	strbne	r3, [r8]
   11cd4:	moveq	r7, r5
   11cd8:	mov	r3, #1
   11cdc:	mov	r4, #1
   11ce0:	str	r3, [sp, #32]
   11ce4:	ldr	r3, [pc, #2644]	; 12740 <putchar_unlocked@plt+0x186c>
   11ce8:	str	r3, [sp, #44]	; 0x2c
   11cec:	b	11cbc <putchar_unlocked@plt+0xde8>
   11cf0:	bl	10ebc <abort@plt>
   11cf4:	mov	r3, #1
   11cf8:	mov	r7, #0
   11cfc:	str	r3, [sp, #24]
   11d00:	mov	r4, #0
   11d04:	b	11ae4 <putchar_unlocked@plt+0xc10>
   11d08:	mov	r7, #1
   11d0c:	str	sl, [sp, #32]
   11d10:	b	11cb0 <putchar_unlocked@plt+0xddc>
   11d14:	mov	r3, #1
   11d18:	str	r7, [sp, #24]
   11d1c:	str	r3, [sp, #32]
   11d20:	ldr	r3, [pc, #2576]	; 12738 <putchar_unlocked@plt+0x1864>
   11d24:	str	r3, [sp, #44]	; 0x2c
   11d28:	b	11d00 <putchar_unlocked@plt+0xe2c>
   11d2c:	ldr	fp, [sp, #24]
   11d30:	ldr	r3, [sp, #32]
   11d34:	cmp	sl, #2
   11d38:	moveq	fp, #0
   11d3c:	andne	fp, fp, #1
   11d40:	adds	r5, r3, #0
   11d44:	movne	r5, #1
   11d48:	ands	r3, fp, r5
   11d4c:	str	r3, [sp, #64]	; 0x40
   11d50:	beq	11e20 <putchar_unlocked@plt+0xf4c>
   11d54:	ldr	r3, [sp, #28]
   11d58:	ldr	r2, [sp, #32]
   11d5c:	cmp	r2, #1
   11d60:	add	r6, r3, r2
   11d64:	mov	r3, r2
   11d68:	ldr	r2, [sp, #40]	; 0x28
   11d6c:	movls	r3, #0
   11d70:	movhi	r3, #1
   11d74:	cmn	r2, #1
   11d78:	movne	r3, #0
   11d7c:	cmp	r3, #0
   11d80:	beq	11d90 <putchar_unlocked@plt+0xebc>
   11d84:	ldr	r0, [sp, #48]	; 0x30
   11d88:	bl	10de4 <strlen@plt>
   11d8c:	str	r0, [sp, #40]	; 0x28
   11d90:	ldr	r3, [sp, #40]	; 0x28
   11d94:	cmp	r6, r3
   11d98:	bhi	11e18 <putchar_unlocked@plt+0xf44>
   11d9c:	ldr	r0, [sp, #28]
   11da0:	ldr	r2, [sp, #32]
   11da4:	ldr	r3, [sp, #48]	; 0x30
   11da8:	ldr	r1, [sp, #44]	; 0x2c
   11dac:	add	r0, r3, r0
   11db0:	bl	10cf4 <memcmp@plt>
   11db4:	cmp	r0, #0
   11db8:	bne	11e18 <putchar_unlocked@plt+0xf44>
   11dbc:	cmp	r7, #0
   11dc0:	beq	11e20 <putchar_unlocked@plt+0xf4c>
   11dc4:	str	r7, [sp, #24]
   11dc8:	ldr	r3, [sp, #24]
   11dcc:	mov	r1, r9
   11dd0:	ldr	r2, [sp, #48]	; 0x30
   11dd4:	cmp	sl, #2
   11dd8:	movne	r3, #0
   11ddc:	andeq	r3, r3, #1
   11de0:	cmp	r3, #0
   11de4:	ldr	r3, [sp, #160]	; 0xa0
   11de8:	movne	sl, #4
   11dec:	str	sl, [sp]
   11df0:	str	r3, [sp, #16]
   11df4:	ldr	r3, [sp, #156]	; 0x9c
   11df8:	str	r3, [sp, #12]
   11dfc:	mov	r3, #0
   11e00:	str	r3, [sp, #8]
   11e04:	ldr	r3, [sp, #148]	; 0x94
   11e08:	bic	r3, r3, #2
   11e0c:	str	r3, [sp, #4]
   11e10:	ldr	r3, [sp, #40]	; 0x28
   11e14:	b	11b9c <putchar_unlocked@plt+0xcc8>
   11e18:	mov	r3, #0
   11e1c:	str	r3, [sp, #64]	; 0x40
   11e20:	ldr	r2, [sp, #28]
   11e24:	ldr	r3, [sp, #48]	; 0x30
   11e28:	add	r3, r3, r2
   11e2c:	str	r3, [sp, #80]	; 0x50
   11e30:	ldr	r3, [sp, #48]	; 0x30
   11e34:	ldrb	r6, [r3, r2]
   11e38:	cmp	r6, #58	; 0x3a
   11e3c:	bhi	11fa0 <putchar_unlocked@plt+0x10cc>
   11e40:	cmp	r6, #43	; 0x2b
   11e44:	bcs	12160 <putchar_unlocked@plt+0x128c>
   11e48:	cmp	r6, #32
   11e4c:	beq	121b4 <putchar_unlocked@plt+0x12e0>
   11e50:	bhi	11ef8 <putchar_unlocked@plt+0x1024>
   11e54:	cmp	r6, #9
   11e58:	beq	1235c <putchar_unlocked@plt+0x1488>
   11e5c:	bhi	11ebc <putchar_unlocked@plt+0xfe8>
   11e60:	cmp	r6, #7
   11e64:	beq	1236c <putchar_unlocked@plt+0x1498>
   11e68:	bhi	12388 <putchar_unlocked@plt+0x14b4>
   11e6c:	cmp	r6, #0
   11e70:	beq	121d0 <putchar_unlocked@plt+0x12fc>
   11e74:	ldr	r3, [sp, #76]	; 0x4c
   11e78:	cmp	r3, #1
   11e7c:	bne	123d4 <putchar_unlocked@plt+0x1500>
   11e80:	bl	10dcc <__ctype_b_loc@plt>
   11e84:	ldr	r2, [r0]
   11e88:	sxth	r3, r6
   11e8c:	lsl	r3, r3, #1
   11e90:	ldrh	r5, [r2, r3]
   11e94:	ldr	r3, [sp, #76]	; 0x4c
   11e98:	ubfx	r5, r5, #14, #1
   11e9c:	str	r3, [sp, #56]	; 0x38
   11ea0:	ldr	r3, [sp, #24]
   11ea4:	eor	fp, r5, #1
   11ea8:	and	fp, fp, r3
   11eac:	ands	fp, fp, #255	; 0xff
   11eb0:	beq	12090 <putchar_unlocked@plt+0x11bc>
   11eb4:	mov	r5, #0
   11eb8:	b	12480 <putchar_unlocked@plt+0x15ac>
   11ebc:	cmp	r6, #11
   11ec0:	beq	12390 <putchar_unlocked@plt+0x14bc>
   11ec4:	bcc	12364 <putchar_unlocked@plt+0x1490>
   11ec8:	cmp	r6, #12
   11ecc:	beq	12398 <putchar_unlocked@plt+0x14c4>
   11ed0:	cmp	r6, #13
   11ed4:	moveq	r3, #114	; 0x72
   11ed8:	bne	11e74 <putchar_unlocked@plt+0xfa0>
   11edc:	cmp	sl, #2
   11ee0:	movne	r2, #0
   11ee4:	andeq	r2, r7, #1
   11ee8:	cmp	r2, #0
   11eec:	beq	12370 <putchar_unlocked@plt+0x149c>
   11ef0:	mov	sl, #2
   11ef4:	b	11dc8 <putchar_unlocked@plt+0xef4>
   11ef8:	cmp	r6, #37	; 0x25
   11efc:	beq	12160 <putchar_unlocked@plt+0x128c>
   11f00:	bhi	11f14 <putchar_unlocked@plt+0x1040>
   11f04:	cmp	r6, #35	; 0x23
   11f08:	beq	121a8 <putchar_unlocked@plt+0x12d4>
   11f0c:	mov	r5, #0
   11f10:	b	121b8 <putchar_unlocked@plt+0x12e4>
   11f14:	cmp	r6, #39	; 0x27
   11f18:	bne	11f0c <putchar_unlocked@plt+0x1038>
   11f1c:	cmp	sl, #2
   11f20:	ldrne	r5, [sp, #36]	; 0x24
   11f24:	movne	r3, r5
   11f28:	strne	r3, [sp, #68]	; 0x44
   11f2c:	bne	122ac <putchar_unlocked@plt+0x13d8>
   11f30:	cmp	r7, #0
   11f34:	bne	11dc8 <putchar_unlocked@plt+0xef4>
   11f38:	ldr	r3, [sp, #60]	; 0x3c
   11f3c:	cmp	r9, #0
   11f40:	clz	r3, r3
   11f44:	lsr	r3, r3, #5
   11f48:	moveq	r3, #0
   11f4c:	cmp	r3, #0
   11f50:	strne	r9, [sp, #60]	; 0x3c
   11f54:	movne	r9, #0
   11f58:	bne	11f68 <putchar_unlocked@plt+0x1094>
   11f5c:	cmp	r9, r4
   11f60:	movhi	r3, #39	; 0x27
   11f64:	strbhi	r3, [r8, r4]
   11f68:	add	r3, r4, #1
   11f6c:	ldr	r5, [sp, #36]	; 0x24
   11f70:	mov	fp, #0
   11f74:	cmp	r3, r9
   11f78:	movcc	r2, #92	; 0x5c
   11f7c:	str	fp, [sp, #52]	; 0x34
   11f80:	strbcc	r2, [r8, r3]
   11f84:	add	r3, r4, #2
   11f88:	add	r4, r4, #3
   11f8c:	cmp	r3, r9
   11f90:	str	r5, [sp, #68]	; 0x44
   11f94:	movcc	r2, #39	; 0x27
   11f98:	strbcc	r2, [r8, r3]
   11f9c:	b	12090 <putchar_unlocked@plt+0x11bc>
   11fa0:	cmp	r6, #94	; 0x5e
   11fa4:	beq	11f0c <putchar_unlocked@plt+0x1038>
   11fa8:	bhi	12168 <putchar_unlocked@plt+0x1294>
   11fac:	cmp	r6, #90	; 0x5a
   11fb0:	bhi	12154 <putchar_unlocked@plt+0x1280>
   11fb4:	cmp	r6, #65	; 0x41
   11fb8:	bcs	12160 <putchar_unlocked@plt+0x128c>
   11fbc:	cmp	r6, #62	; 0x3e
   11fc0:	bls	11f0c <putchar_unlocked@plt+0x1038>
   11fc4:	cmp	r6, #63	; 0x3f
   11fc8:	bne	11e74 <putchar_unlocked@plt+0xfa0>
   11fcc:	cmp	sl, #2
   11fd0:	beq	122b4 <putchar_unlocked@plt+0x13e0>
   11fd4:	cmp	sl, #5
   11fd8:	movne	fp, #0
   11fdc:	bne	12684 <putchar_unlocked@plt+0x17b0>
   11fe0:	ldr	r3, [sp, #148]	; 0x94
   11fe4:	tst	r3, #4
   11fe8:	beq	122bc <putchar_unlocked@plt+0x13e8>
   11fec:	ldr	r3, [sp, #28]
   11ff0:	add	r2, r3, #2
   11ff4:	ldr	r3, [sp, #40]	; 0x28
   11ff8:	cmp	r2, r3
   11ffc:	bcs	122bc <putchar_unlocked@plt+0x13e8>
   12000:	ldr	r1, [sp, #28]
   12004:	ldr	r3, [sp, #48]	; 0x30
   12008:	add	r3, r3, r1
   1200c:	ldrb	r1, [r3, #1]
   12010:	cmp	r1, #63	; 0x3f
   12014:	bne	122bc <putchar_unlocked@plt+0x13e8>
   12018:	ldr	r3, [sp, #48]	; 0x30
   1201c:	ldrb	r6, [r3, r2]
   12020:	sub	r3, r6, #33	; 0x21
   12024:	uxtb	r3, r3
   12028:	cmp	r3, #29
   1202c:	bhi	1268c <putchar_unlocked@plt+0x17b8>
   12030:	ldr	r0, [pc, #1804]	; 12744 <putchar_unlocked@plt+0x1870>
   12034:	mov	r5, #1
   12038:	ands	r5, r0, r5, lsl r3
   1203c:	beq	12694 <putchar_unlocked@plt+0x17c0>
   12040:	cmp	r7, #0
   12044:	bne	11dc8 <putchar_unlocked@plt+0xef4>
   12048:	cmp	r9, r4
   1204c:	add	r3, r4, #1
   12050:	str	r2, [sp, #28]
   12054:	mov	r5, #0
   12058:	strbhi	r1, [r8, r4]
   1205c:	cmp	r9, r3
   12060:	mov	fp, r5
   12064:	movhi	r1, #34	; 0x22
   12068:	strbhi	r1, [r8, r3]
   1206c:	add	r3, r4, #2
   12070:	cmp	r9, r3
   12074:	movhi	r1, #34	; 0x22
   12078:	strbhi	r1, [r8, r3]
   1207c:	add	r3, r4, #3
   12080:	add	r4, r4, #4
   12084:	cmp	r9, r3
   12088:	movhi	r1, #63	; 0x3f
   1208c:	strbhi	r1, [r8, r3]
   12090:	ldr	r3, [sp, #24]
   12094:	eor	r3, r3, #1
   12098:	cmp	sl, #2
   1209c:	orreq	r3, r3, #1
   120a0:	eor	r3, r3, #1
   120a4:	orr	r3, r7, r3
   120a8:	tst	r3, #255	; 0xff
   120ac:	beq	120d8 <putchar_unlocked@plt+0x1204>
   120b0:	ldr	r3, [sp, #152]	; 0x98
   120b4:	cmp	r3, #0
   120b8:	beq	120d8 <putchar_unlocked@plt+0x1204>
   120bc:	ldr	r1, [sp, #152]	; 0x98
   120c0:	ubfx	r2, r6, #5, #8
   120c4:	and	r3, r6, #31
   120c8:	ldr	r2, [r1, r2, lsl #2]
   120cc:	lsr	r3, r2, r3
   120d0:	tst	r3, #1
   120d4:	bne	120e4 <putchar_unlocked@plt+0x1210>
   120d8:	ldr	r3, [sp, #64]	; 0x40
   120dc:	cmp	r3, #0
   120e0:	beq	122dc <putchar_unlocked@plt+0x1408>
   120e4:	sub	r3, sl, #2
   120e8:	cmp	r7, #0
   120ec:	clz	r3, r3
   120f0:	lsr	r3, r3, #5
   120f4:	bne	11dc8 <putchar_unlocked@plt+0xef4>
   120f8:	ldr	r2, [sp, #52]	; 0x34
   120fc:	eor	r2, r2, #1
   12100:	ands	r3, r3, r2
   12104:	beq	1213c <putchar_unlocked@plt+0x1268>
   12108:	cmp	r9, r4
   1210c:	str	r3, [sp, #52]	; 0x34
   12110:	movhi	r2, #39	; 0x27
   12114:	strbhi	r2, [r8, r4]
   12118:	add	r2, r4, #1
   1211c:	cmp	r9, r2
   12120:	movhi	r1, #36	; 0x24
   12124:	strbhi	r1, [r8, r2]
   12128:	add	r2, r4, #2
   1212c:	add	r4, r4, #3
   12130:	cmp	r9, r2
   12134:	movhi	r1, #39	; 0x27
   12138:	strbhi	r1, [r8, r2]
   1213c:	cmp	r9, r4
   12140:	ldr	fp, [sp, #36]	; 0x24
   12144:	movhi	r3, #92	; 0x5c
   12148:	strbhi	r3, [r8, r4]
   1214c:	add	r4, r4, #1
   12150:	b	122dc <putchar_unlocked@plt+0x1408>
   12154:	cmp	r6, #92	; 0x5c
   12158:	beq	122c4 <putchar_unlocked@plt+0x13f0>
   1215c:	bls	11f0c <putchar_unlocked@plt+0x1038>
   12160:	ldr	r5, [sp, #36]	; 0x24
   12164:	b	122ac <putchar_unlocked@plt+0x13d8>
   12168:	cmp	r6, #122	; 0x7a
   1216c:	bhi	1218c <putchar_unlocked@plt+0x12b8>
   12170:	cmp	r6, #97	; 0x61
   12174:	bcs	12160 <putchar_unlocked@plt+0x128c>
   12178:	cmp	r6, #95	; 0x5f
   1217c:	beq	12160 <putchar_unlocked@plt+0x128c>
   12180:	cmp	r6, #96	; 0x60
   12184:	bne	11e74 <putchar_unlocked@plt+0xfa0>
   12188:	b	11f0c <putchar_unlocked@plt+0x1038>
   1218c:	cmp	r6, #124	; 0x7c
   12190:	beq	11f0c <putchar_unlocked@plt+0x1038>
   12194:	bcc	123a0 <putchar_unlocked@plt+0x14cc>
   12198:	cmp	r6, #125	; 0x7d
   1219c:	beq	123a0 <putchar_unlocked@plt+0x14cc>
   121a0:	cmp	r6, #126	; 0x7e
   121a4:	bne	11e74 <putchar_unlocked@plt+0xfa0>
   121a8:	ldr	r3, [sp, #28]
   121ac:	cmp	r3, #0
   121b0:	bne	122bc <putchar_unlocked@plt+0x13e8>
   121b4:	ldr	r5, [sp, #36]	; 0x24
   121b8:	cmp	sl, #2
   121bc:	movne	fp, #0
   121c0:	andeq	fp, r7, #1
   121c4:	cmp	fp, #0
   121c8:	beq	12090 <putchar_unlocked@plt+0x11bc>
   121cc:	b	11ef0 <putchar_unlocked@plt+0x101c>
   121d0:	ldr	r3, [sp, #24]
   121d4:	cmp	r3, #0
   121d8:	beq	122a0 <putchar_unlocked@plt+0x13cc>
   121dc:	sub	r2, sl, #2
   121e0:	cmp	r7, #0
   121e4:	clz	r2, r2
   121e8:	lsr	r2, r2, #5
   121ec:	bne	11dc4 <putchar_unlocked@plt+0xef0>
   121f0:	ldr	r3, [sp, #52]	; 0x34
   121f4:	eor	r3, r3, #1
   121f8:	ands	r2, r2, r3
   121fc:	moveq	r3, r4
   12200:	beq	12238 <putchar_unlocked@plt+0x1364>
   12204:	cmp	r9, r4
   12208:	str	r2, [sp, #52]	; 0x34
   1220c:	movhi	r3, #39	; 0x27
   12210:	strbhi	r3, [r8, r4]
   12214:	add	r3, r4, #1
   12218:	cmp	r9, r3
   1221c:	movhi	r1, #36	; 0x24
   12220:	strbhi	r1, [r8, r3]
   12224:	add	r3, r4, #2
   12228:	cmp	r9, r3
   1222c:	movhi	r1, #39	; 0x27
   12230:	strbhi	r1, [r8, r3]
   12234:	add	r3, r4, #3
   12238:	cmp	r9, r3
   1223c:	add	r4, r3, #1
   12240:	movhi	r2, #92	; 0x5c
   12244:	strbhi	r2, [r8, r3]
   12248:	cmp	fp, #0
   1224c:	beq	12674 <putchar_unlocked@plt+0x17a0>
   12250:	ldr	r2, [sp, #28]
   12254:	ldr	r1, [sp, #40]	; 0x28
   12258:	add	r2, r2, #1
   1225c:	cmp	r2, r1
   12260:	bcs	12298 <putchar_unlocked@plt+0x13c4>
   12264:	ldr	r1, [sp, #48]	; 0x30
   12268:	mov	r6, #48	; 0x30
   1226c:	ldrb	r2, [r1, r2]
   12270:	sub	r2, r2, #48	; 0x30
   12274:	cmp	r2, #9
   12278:	bhi	12684 <putchar_unlocked@plt+0x17b0>
   1227c:	cmp	r9, r4
   12280:	add	r2, r3, #2
   12284:	strbhi	r6, [r8, r4]
   12288:	cmp	r9, r2
   1228c:	add	r4, r3, #3
   12290:	movhi	r1, #48	; 0x30
   12294:	strbhi	r1, [r8, r2]
   12298:	mov	r5, #0
   1229c:	b	1267c <putchar_unlocked@plt+0x17a8>
   122a0:	ldr	r3, [sp, #148]	; 0x94
   122a4:	ands	r5, r3, #1
   122a8:	bne	12330 <putchar_unlocked@plt+0x145c>
   122ac:	mov	fp, #0
   122b0:	b	12090 <putchar_unlocked@plt+0x11bc>
   122b4:	cmp	r7, #0
   122b8:	bne	11dc8 <putchar_unlocked@plt+0xef4>
   122bc:	mov	r5, #0
   122c0:	b	122ac <putchar_unlocked@plt+0x13d8>
   122c4:	cmp	sl, #2
   122c8:	bne	1233c <putchar_unlocked@plt+0x1468>
   122cc:	cmp	r7, #0
   122d0:	bne	11dc8 <putchar_unlocked@plt+0xef4>
   122d4:	mov	r5, r7
   122d8:	mov	fp, r7
   122dc:	ldr	r3, [sp, #52]	; 0x34
   122e0:	eor	fp, fp, #1
   122e4:	tst	r3, fp
   122e8:	beq	12314 <putchar_unlocked@plt+0x1440>
   122ec:	cmp	r9, r4
   122f0:	movhi	r3, #39	; 0x27
   122f4:	strbhi	r3, [r8, r4]
   122f8:	add	r3, r4, #1
   122fc:	add	r4, r4, #2
   12300:	cmp	r9, r3
   12304:	movhi	r2, #39	; 0x27
   12308:	strbhi	r2, [r8, r3]
   1230c:	mov	r3, #0
   12310:	str	r3, [sp, #52]	; 0x34
   12314:	cmp	r9, r4
   12318:	ldr	r3, [sp, #72]	; 0x48
   1231c:	strbhi	r6, [r8, r4]
   12320:	cmp	r5, #0
   12324:	add	r4, r4, #1
   12328:	moveq	r3, #0
   1232c:	str	r3, [sp, #72]	; 0x48
   12330:	ldr	r3, [sp, #28]
   12334:	add	r3, r3, #1
   12338:	b	11af0 <putchar_unlocked@plt+0xc1c>
   1233c:	ldr	r3, [sp, #24]
   12340:	and	r3, r3, r7
   12344:	tst	r5, r3
   12348:	moveq	r3, r6
   1234c:	beq	11edc <putchar_unlocked@plt+0x1008>
   12350:	mov	fp, #0
   12354:	mov	r5, fp
   12358:	b	122dc <putchar_unlocked@plt+0x1408>
   1235c:	mov	r3, #116	; 0x74
   12360:	b	11edc <putchar_unlocked@plt+0x1008>
   12364:	mov	r3, #110	; 0x6e
   12368:	b	11edc <putchar_unlocked@plt+0x1008>
   1236c:	mov	r3, #97	; 0x61
   12370:	ldr	r2, [sp, #24]
   12374:	cmp	r2, #0
   12378:	beq	122bc <putchar_unlocked@plt+0x13e8>
   1237c:	mov	r6, r3
   12380:	mov	r5, #0
   12384:	b	120e4 <putchar_unlocked@plt+0x1210>
   12388:	mov	r3, #98	; 0x62
   1238c:	b	12370 <putchar_unlocked@plt+0x149c>
   12390:	mov	r3, #118	; 0x76
   12394:	b	12370 <putchar_unlocked@plt+0x149c>
   12398:	mov	r3, #102	; 0x66
   1239c:	b	12370 <putchar_unlocked@plt+0x149c>
   123a0:	ldr	r3, [sp, #40]	; 0x28
   123a4:	cmn	r3, #1
   123a8:	bne	123c8 <putchar_unlocked@plt+0x14f4>
   123ac:	ldr	r3, [sp, #48]	; 0x30
   123b0:	ldrb	r3, [r3, #1]
   123b4:	adds	r3, r3, #0
   123b8:	movne	r3, #1
   123bc:	cmp	r3, #0
   123c0:	bne	122bc <putchar_unlocked@plt+0x13e8>
   123c4:	b	121a8 <putchar_unlocked@plt+0x12d4>
   123c8:	ldr	r3, [sp, #40]	; 0x28
   123cc:	subs	r3, r3, #1
   123d0:	b	123b8 <putchar_unlocked@plt+0x14e4>
   123d4:	mov	r3, #0
   123d8:	mov	r2, #0
   123dc:	strd	r2, [sp, #96]	; 0x60
   123e0:	ldr	r3, [sp, #40]	; 0x28
   123e4:	cmn	r3, #1
   123e8:	bne	123f8 <putchar_unlocked@plt+0x1524>
   123ec:	ldr	r0, [sp, #48]	; 0x30
   123f0:	bl	10de4 <strlen@plt>
   123f4:	str	r0, [sp, #40]	; 0x28
   123f8:	ldr	r5, [sp, #36]	; 0x24
   123fc:	mov	r3, #0
   12400:	str	r3, [sp, #56]	; 0x38
   12404:	ldr	r3, [sp, #28]
   12408:	add	r0, sp, #92	; 0x5c
   1240c:	ldr	r1, [sp, #40]	; 0x28
   12410:	ldr	r2, [sp, #56]	; 0x38
   12414:	add	r2, r3, r2
   12418:	ldr	r3, [sp, #48]	; 0x30
   1241c:	add	fp, r3, r2
   12420:	sub	r2, r1, r2
   12424:	add	r3, sp, #96	; 0x60
   12428:	mov	r1, fp
   1242c:	bl	139ac <putchar_unlocked@plt+0x2ad8>
   12430:	subs	r2, r0, #0
   12434:	beq	12474 <putchar_unlocked@plt+0x15a0>
   12438:	cmn	r2, #1
   1243c:	beq	12648 <putchar_unlocked@plt+0x1774>
   12440:	cmn	r2, #2
   12444:	bne	125b8 <putchar_unlocked@plt+0x16e4>
   12448:	ldr	r3, [sp, #28]
   1244c:	ldr	r2, [sp, #56]	; 0x38
   12450:	add	r3, r3, r2
   12454:	ldr	r2, [sp, #40]	; 0x28
   12458:	cmp	r2, r3
   1245c:	bls	12648 <putchar_unlocked@plt+0x1774>
   12460:	ldr	r2, [sp, #56]	; 0x38
   12464:	ldr	r3, [sp, #80]	; 0x50
   12468:	ldrb	r5, [r3, r2]
   1246c:	cmp	r5, #0
   12470:	bne	125a8 <putchar_unlocked@plt+0x16d4>
   12474:	ldr	r3, [sp, #56]	; 0x38
   12478:	cmp	r3, #1
   1247c:	bls	11ea0 <putchar_unlocked@plt+0xfcc>
   12480:	ldr	r3, [sp, #28]
   12484:	mov	fp, #0
   12488:	mov	ip, #92	; 0x5c
   1248c:	ldr	r2, [sp, #56]	; 0x38
   12490:	add	r3, r3, r2
   12494:	ldr	r2, [sp, #24]
   12498:	str	r3, [sp, #36]	; 0x24
   1249c:	eor	r3, r5, #1
   124a0:	and	r3, r3, r2
   124a4:	mov	r2, #39	; 0x27
   124a8:	uxtb	r3, r3
   124ac:	cmp	r3, #0
   124b0:	beq	12650 <putchar_unlocked@plt+0x177c>
   124b4:	sub	r0, sl, #2
   124b8:	cmp	r7, #0
   124bc:	clz	r0, r0
   124c0:	lsr	r0, r0, #5
   124c4:	bne	11dc4 <putchar_unlocked@plt+0xef0>
   124c8:	ldr	r1, [sp, #52]	; 0x34
   124cc:	eor	r1, r1, #1
   124d0:	ands	r1, r0, r1
   124d4:	beq	12504 <putchar_unlocked@plt+0x1630>
   124d8:	cmp	r9, r4
   124dc:	add	r0, r4, #1
   124e0:	str	r1, [sp, #52]	; 0x34
   124e4:	strbhi	r2, [r8, r4]
   124e8:	cmp	r9, r0
   124ec:	movhi	lr, #36	; 0x24
   124f0:	strbhi	lr, [r8, r0]
   124f4:	add	r0, r4, #2
   124f8:	add	r4, r4, #3
   124fc:	cmp	r9, r0
   12500:	strbhi	r2, [r8, r0]
   12504:	cmp	r9, r4
   12508:	add	r0, r4, #1
   1250c:	mov	fp, r3
   12510:	strbhi	ip, [r8, r4]
   12514:	cmp	r9, r0
   12518:	lsrhi	r1, r6, #6
   1251c:	addhi	r1, r1, #48	; 0x30
   12520:	strbhi	r1, [r8, r0]
   12524:	add	r0, r4, #2
   12528:	add	r4, r4, #3
   1252c:	cmp	r9, r0
   12530:	ubfxhi	r1, r6, #3, #3
   12534:	and	r6, r6, #7
   12538:	add	r6, r6, #48	; 0x30
   1253c:	addhi	r1, r1, #48	; 0x30
   12540:	strbhi	r1, [r8, r0]
   12544:	eor	r0, fp, #1
   12548:	ldr	r1, [sp, #28]
   1254c:	ldr	lr, [sp, #52]	; 0x34
   12550:	add	r1, r1, #1
   12554:	and	r0, r0, lr
   12558:	ldr	lr, [sp, #36]	; 0x24
   1255c:	cmp	r1, lr
   12560:	bcs	122dc <putchar_unlocked@plt+0x1408>
   12564:	cmp	r0, #0
   12568:	beq	1258c <putchar_unlocked@plt+0x16b8>
   1256c:	cmp	r9, r4
   12570:	add	r0, r4, #1
   12574:	strbhi	r2, [r8, r4]
   12578:	cmp	r9, r0
   1257c:	add	r4, r4, #2
   12580:	strbhi	r2, [r8, r0]
   12584:	mov	r0, #0
   12588:	str	r0, [sp, #52]	; 0x34
   1258c:	ldr	r0, [sp, #48]	; 0x30
   12590:	cmp	r9, r4
   12594:	str	r1, [sp, #28]
   12598:	strbhi	r6, [r8, r4]
   1259c:	add	r4, r4, #1
   125a0:	ldrb	r6, [r0, r1]
   125a4:	b	124ac <putchar_unlocked@plt+0x15d8>
   125a8:	ldr	r3, [sp, #56]	; 0x38
   125ac:	add	r3, r3, #1
   125b0:	str	r3, [sp, #56]	; 0x38
   125b4:	b	12448 <putchar_unlocked@plt+0x1574>
   125b8:	cmp	sl, #2
   125bc:	movne	r3, #0
   125c0:	andeq	r3, r7, #1
   125c4:	cmp	r3, #0
   125c8:	movne	r1, #1
   125cc:	bne	12628 <putchar_unlocked@plt+0x1754>
   125d0:	ldr	r0, [sp, #92]	; 0x5c
   125d4:	str	r2, [sp, #84]	; 0x54
   125d8:	bl	10d30 <iswprint@plt>
   125dc:	ldr	r3, [sp, #56]	; 0x38
   125e0:	cmp	r0, #0
   125e4:	add	r0, sp, #96	; 0x60
   125e8:	moveq	r5, #0
   125ec:	ldr	r2, [sp, #84]	; 0x54
   125f0:	add	r3, r3, r2
   125f4:	str	r3, [sp, #56]	; 0x38
   125f8:	bl	10ce8 <mbsinit@plt>
   125fc:	cmp	r0, #0
   12600:	beq	12404 <putchar_unlocked@plt+0x1530>
   12604:	b	12474 <putchar_unlocked@plt+0x15a0>
   12608:	ldrb	r3, [fp, #1]!
   1260c:	cmp	r3, #94	; 0x5e
   12610:	beq	11ef0 <putchar_unlocked@plt+0x101c>
   12614:	bhi	12634 <putchar_unlocked@plt+0x1760>
   12618:	sub	r3, r3, #91	; 0x5b
   1261c:	cmp	r3, #1
   12620:	bls	11ef0 <putchar_unlocked@plt+0x101c>
   12624:	add	r1, r1, #1
   12628:	cmp	r1, r2
   1262c:	bne	12608 <putchar_unlocked@plt+0x1734>
   12630:	b	125d0 <putchar_unlocked@plt+0x16fc>
   12634:	cmp	r3, #96	; 0x60
   12638:	beq	11ef0 <putchar_unlocked@plt+0x101c>
   1263c:	cmp	r3, #124	; 0x7c
   12640:	bne	12624 <putchar_unlocked@plt+0x1750>
   12644:	b	11ef0 <putchar_unlocked@plt+0x101c>
   12648:	mov	r5, #0
   1264c:	b	12474 <putchar_unlocked@plt+0x15a0>
   12650:	ldr	r1, [sp, #64]	; 0x40
   12654:	cmp	r1, #0
   12658:	beq	12544 <putchar_unlocked@plt+0x1670>
   1265c:	cmp	r9, r4
   12660:	mov	r1, #0
   12664:	strbhi	ip, [r8, r4]
   12668:	add	r4, r4, #1
   1266c:	str	r1, [sp, #64]	; 0x40
   12670:	b	12544 <putchar_unlocked@plt+0x1670>
   12674:	mov	r5, fp
   12678:	ldr	fp, [sp, #24]
   1267c:	mov	r6, #48	; 0x30
   12680:	b	12090 <putchar_unlocked@plt+0x11bc>
   12684:	mov	r5, #0
   12688:	b	12090 <putchar_unlocked@plt+0x11bc>
   1268c:	mov	r6, r1
   12690:	b	122bc <putchar_unlocked@plt+0x13e8>
   12694:	mov	r6, r1
   12698:	b	122ac <putchar_unlocked@plt+0x13d8>
   1269c:	ldr	r2, [sp, #28]
   126a0:	ldr	r3, [sp, #40]	; 0x28
   126a4:	subs	r3, r3, r2
   126a8:	movne	r3, #1
   126ac:	b	11b14 <putchar_unlocked@plt+0xc40>
   126b0:	ldr	r3, [sp, #60]	; 0x3c
   126b4:	mov	sl, #2
   126b8:	ldr	r7, [sp, #72]	; 0x48
   126bc:	adds	r6, r3, #0
   126c0:	mov	r5, r3
   126c4:	movne	r6, #1
   126c8:	cmp	r9, #0
   126cc:	movne	r6, #0
   126d0:	cmp	r6, #0
   126d4:	bne	11aa4 <putchar_unlocked@plt+0xbd0>
   126d8:	ldr	r3, [sp, #68]	; 0x44
   126dc:	ldr	r2, [sp, #44]	; 0x2c
   126e0:	cmp	r2, #0
   126e4:	moveq	r3, #0
   126e8:	andne	r3, r3, #1
   126ec:	cmp	r3, #0
   126f0:	movne	r3, r2
   126f4:	subne	r3, r3, #1
   126f8:	bne	12728 <putchar_unlocked@plt+0x1854>
   126fc:	cmp	r9, r4
   12700:	movhi	r3, #0
   12704:	strbhi	r3, [r8, r4]
   12708:	mov	r0, r4
   1270c:	add	sp, sp, #108	; 0x6c
   12710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12714:	mov	r3, r7
   12718:	b	126dc <putchar_unlocked@plt+0x1808>
   1271c:	cmp	r9, r4
   12720:	strbhi	r2, [r8, r4]
   12724:	add	r4, r4, #1
   12728:	ldrb	r2, [r3, #1]!
   1272c:	cmp	r2, #0
   12730:	bne	1271c <putchar_unlocked@plt+0x1848>
   12734:	b	126fc <putchar_unlocked@plt+0x1828>
   12738:	muleq	r1, r8, r3
   1273c:	andeq	r4, r1, fp, lsr #7
   12740:	andeq	r4, r1, r9, lsr #7
   12744:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1274c:	sub	sp, sp, #52	; 0x34
   12750:	mov	r6, r0
   12754:	mov	r5, r3
   12758:	mov	r8, r1
   1275c:	mov	r9, r2
   12760:	bl	10df0 <__errno_location@plt>
   12764:	ldr	r3, [r0]
   12768:	cmn	r6, #-2147483647	; 0x80000001
   1276c:	str	r0, [sp, #24]
   12770:	ldr	r7, [pc, #368]	; 128e8 <putchar_unlocked@plt+0x1a14>
   12774:	str	r3, [sp, #32]
   12778:	movne	r3, #0
   1277c:	moveq	r3, #1
   12780:	orrs	r3, r3, r6, lsr #31
   12784:	ldr	r4, [r7]
   12788:	beq	12790 <putchar_unlocked@plt+0x18bc>
   1278c:	bl	10ebc <abort@plt>
   12790:	ldr	r2, [r7, #4]
   12794:	cmp	r2, r6
   12798:	bgt	12808 <putchar_unlocked@plt+0x1934>
   1279c:	add	sl, r7, #8
   127a0:	mov	r3, #8
   127a4:	cmp	r4, sl
   127a8:	add	r1, sp, #44	; 0x2c
   127ac:	str	r2, [sp, #44]	; 0x2c
   127b0:	sub	r2, r6, r2
   127b4:	movne	r0, r4
   127b8:	moveq	r0, #0
   127bc:	add	r2, r2, #1
   127c0:	str	r3, [sp]
   127c4:	mvn	r3, #-2147483648	; 0x80000000
   127c8:	bl	1349c <putchar_unlocked@plt+0x25c8>
   127cc:	cmp	r4, sl
   127d0:	mov	fp, r0
   127d4:	str	r0, [r7]
   127d8:	ldmeq	r4, {r0, r1}
   127dc:	mov	r4, fp
   127e0:	ldr	r2, [sp, #44]	; 0x2c
   127e4:	stmeq	fp, {r0, r1}
   127e8:	mov	r1, #0
   127ec:	ldr	r0, [r7, #4]
   127f0:	sub	r2, r2, r0
   127f4:	add	r0, fp, r0, lsl #3
   127f8:	lsl	r2, r2, #3
   127fc:	bl	10e20 <memset@plt>
   12800:	ldr	r3, [sp, #44]	; 0x2c
   12804:	str	r3, [r7, #4]
   12808:	ldr	r3, [r5, #4]
   1280c:	add	sl, r4, r6, lsl #3
   12810:	mov	r2, r8
   12814:	ldr	fp, [r4, r6, lsl #3]
   12818:	ldr	r7, [sl, #4]
   1281c:	orr	r3, r3, #1
   12820:	str	r3, [sp, #28]
   12824:	add	r3, r5, #8
   12828:	mov	r1, fp
   1282c:	str	r3, [sp, #36]	; 0x24
   12830:	mov	r0, r7
   12834:	ldr	r3, [r5, #44]	; 0x2c
   12838:	str	r3, [sp, #16]
   1283c:	ldr	r3, [r5, #40]	; 0x28
   12840:	str	r3, [sp, #12]
   12844:	add	r3, r5, #8
   12848:	str	r3, [sp, #8]
   1284c:	ldr	r3, [sp, #28]
   12850:	str	r3, [sp, #4]
   12854:	ldr	r3, [r5]
   12858:	str	r3, [sp]
   1285c:	mov	r3, r9
   12860:	bl	11a58 <putchar_unlocked@plt+0xb84>
   12864:	cmp	fp, r0
   12868:	bhi	128d0 <putchar_unlocked@plt+0x19fc>
   1286c:	ldr	r3, [pc, #120]	; 128ec <putchar_unlocked@plt+0x1a18>
   12870:	add	fp, r0, #1
   12874:	str	fp, [r4, r6, lsl #3]
   12878:	cmp	r7, r3
   1287c:	beq	12888 <putchar_unlocked@plt+0x19b4>
   12880:	mov	r0, r7
   12884:	bl	11798 <putchar_unlocked@plt+0x8c4>
   12888:	mov	r0, fp
   1288c:	bl	1338c <putchar_unlocked@plt+0x24b8>
   12890:	ldr	r3, [r5, #44]	; 0x2c
   12894:	mov	r2, r8
   12898:	mov	r1, fp
   1289c:	str	r0, [sl, #4]
   128a0:	mov	r7, r0
   128a4:	str	r3, [sp, #16]
   128a8:	ldr	r3, [r5, #40]	; 0x28
   128ac:	str	r3, [sp, #12]
   128b0:	add	r3, r5, #8
   128b4:	str	r3, [sp, #8]
   128b8:	ldr	r3, [sp, #28]
   128bc:	str	r3, [sp, #4]
   128c0:	ldr	r3, [r5]
   128c4:	str	r3, [sp]
   128c8:	mov	r3, r9
   128cc:	bl	11a58 <putchar_unlocked@plt+0xb84>
   128d0:	ldr	r3, [sp, #24]
   128d4:	mov	r0, r7
   128d8:	ldr	r2, [sp, #32]
   128dc:	str	r2, [r3]
   128e0:	add	sp, sp, #52	; 0x34
   128e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128e8:	strdeq	r5, [r2], -r4
   128ec:	andeq	r5, r2, r4, ror r1
   128f0:	push	{r4, r5, r6, lr}
   128f4:	mov	r5, r0
   128f8:	bl	10df0 <__errno_location@plt>
   128fc:	mov	r4, r0
   12900:	cmp	r5, #0
   12904:	ldr	r0, [pc, #20]	; 12920 <putchar_unlocked@plt+0x1a4c>
   12908:	mov	r1, #48	; 0x30
   1290c:	movne	r0, r5
   12910:	ldr	r6, [r4]
   12914:	bl	1358c <putchar_unlocked@plt+0x26b8>
   12918:	str	r6, [r4]
   1291c:	pop	{r4, r5, r6, pc}
   12920:	andeq	r5, r2, r4, ror r2
   12924:	ldr	r3, [pc, #12]	; 12938 <putchar_unlocked@plt+0x1a64>
   12928:	cmp	r0, #0
   1292c:	moveq	r0, r3
   12930:	ldr	r0, [r0]
   12934:	bx	lr
   12938:	andeq	r5, r2, r4, ror r2
   1293c:	ldr	r3, [pc, #12]	; 12950 <putchar_unlocked@plt+0x1a7c>
   12940:	cmp	r0, #0
   12944:	moveq	r0, r3
   12948:	str	r1, [r0]
   1294c:	bx	lr
   12950:	andeq	r5, r2, r4, ror r2
   12954:	ldr	r3, [pc, #52]	; 12990 <putchar_unlocked@plt+0x1abc>
   12958:	cmp	r0, #0
   1295c:	push	{lr}		; (str lr, [sp, #-4]!)
   12960:	lsr	lr, r1, #5
   12964:	and	r1, r1, #31
   12968:	moveq	r0, r3
   1296c:	add	r3, r0, #8
   12970:	ldr	ip, [r3, lr, lsl #2]
   12974:	lsr	r0, ip, r1
   12978:	eor	r2, r2, r0
   1297c:	and	r0, r0, #1
   12980:	and	r2, r2, #1
   12984:	eor	r1, ip, r2, lsl r1
   12988:	str	r1, [r3, lr, lsl #2]
   1298c:	pop	{pc}		; (ldr pc, [sp], #4)
   12990:	andeq	r5, r2, r4, ror r2
   12994:	ldr	r3, [pc, #16]	; 129ac <putchar_unlocked@plt+0x1ad8>
   12998:	cmp	r0, #0
   1299c:	movne	r3, r0
   129a0:	ldr	r0, [r3, #4]
   129a4:	str	r1, [r3, #4]
   129a8:	bx	lr
   129ac:	andeq	r5, r2, r4, ror r2
   129b0:	ldr	r3, [pc, #44]	; 129e4 <putchar_unlocked@plt+0x1b10>
   129b4:	cmp	r0, #0
   129b8:	moveq	r0, r3
   129bc:	mov	r3, #10
   129c0:	cmp	r2, #0
   129c4:	cmpne	r1, #0
   129c8:	str	r3, [r0]
   129cc:	bne	129d8 <putchar_unlocked@plt+0x1b04>
   129d0:	push	{r4, lr}
   129d4:	bl	10ebc <abort@plt>
   129d8:	str	r1, [r0, #40]	; 0x28
   129dc:	str	r2, [r0, #44]	; 0x2c
   129e0:	bx	lr
   129e4:	andeq	r5, r2, r4, ror r2
   129e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   129ec:	sub	sp, sp, #24
   129f0:	mov	sl, r3
   129f4:	mov	r7, r0
   129f8:	mov	r8, r1
   129fc:	mov	r9, r2
   12a00:	ldr	r4, [sp, #56]	; 0x38
   12a04:	ldr	r3, [pc, #88]	; 12a64 <putchar_unlocked@plt+0x1b90>
   12a08:	cmp	r4, #0
   12a0c:	moveq	r4, r3
   12a10:	bl	10df0 <__errno_location@plt>
   12a14:	ldr	r3, [r4, #44]	; 0x2c
   12a18:	mov	r5, r0
   12a1c:	mov	r2, r9
   12a20:	mov	r1, r8
   12a24:	mov	r0, r7
   12a28:	ldr	r6, [r5]
   12a2c:	str	r3, [sp, #16]
   12a30:	ldr	r3, [r4, #40]	; 0x28
   12a34:	str	r3, [sp, #12]
   12a38:	add	r3, r4, #8
   12a3c:	str	r3, [sp, #8]
   12a40:	ldr	r3, [r4, #4]
   12a44:	str	r3, [sp, #4]
   12a48:	ldr	r3, [r4]
   12a4c:	str	r3, [sp]
   12a50:	mov	r3, sl
   12a54:	bl	11a58 <putchar_unlocked@plt+0xb84>
   12a58:	str	r6, [r5]
   12a5c:	add	sp, sp, #24
   12a60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a64:	andeq	r5, r2, r4, ror r2
   12a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a6c:	cmp	r3, #0
   12a70:	sub	sp, sp, #44	; 0x2c
   12a74:	mov	r6, r2
   12a78:	mov	sl, r1
   12a7c:	mov	r9, r0
   12a80:	ldr	r4, [pc, #176]	; 12b38 <putchar_unlocked@plt+0x1c64>
   12a84:	movne	r4, r3
   12a88:	bl	10df0 <__errno_location@plt>
   12a8c:	ldr	r3, [r0]
   12a90:	mov	r1, #0
   12a94:	mov	r2, r9
   12a98:	mov	r8, r0
   12a9c:	mov	r0, r1
   12aa0:	ldr	r5, [r4, #4]
   12aa4:	add	fp, r4, #8
   12aa8:	str	r3, [sp, #28]
   12aac:	ldr	r3, [r4, #44]	; 0x2c
   12ab0:	cmp	r6, #0
   12ab4:	orreq	r5, r5, #1
   12ab8:	str	r3, [sp, #16]
   12abc:	ldr	r3, [r4, #40]	; 0x28
   12ac0:	stmib	sp, {r5, fp}
   12ac4:	str	r3, [sp, #12]
   12ac8:	ldr	r3, [r4]
   12acc:	str	r3, [sp]
   12ad0:	mov	r3, sl
   12ad4:	bl	11a58 <putchar_unlocked@plt+0xb84>
   12ad8:	add	r1, r0, #1
   12adc:	mov	r7, r0
   12ae0:	mov	r0, r1
   12ae4:	str	r1, [sp, #36]	; 0x24
   12ae8:	bl	1338c <putchar_unlocked@plt+0x24b8>
   12aec:	ldr	r3, [r4, #44]	; 0x2c
   12af0:	mov	r2, r9
   12af4:	ldr	r1, [sp, #36]	; 0x24
   12af8:	str	r3, [sp, #16]
   12afc:	ldr	r3, [r4, #40]	; 0x28
   12b00:	stmib	sp, {r5, fp}
   12b04:	str	r0, [sp, #32]
   12b08:	str	r3, [sp, #12]
   12b0c:	ldr	r3, [r4]
   12b10:	str	r3, [sp]
   12b14:	mov	r3, sl
   12b18:	bl	11a58 <putchar_unlocked@plt+0xb84>
   12b1c:	ldr	r3, [sp, #28]
   12b20:	cmp	r6, #0
   12b24:	ldr	r0, [sp, #32]
   12b28:	str	r3, [r8]
   12b2c:	strne	r7, [r6]
   12b30:	add	sp, sp, #44	; 0x2c
   12b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b38:	andeq	r5, r2, r4, ror r2
   12b3c:	mov	r3, r2
   12b40:	mov	r2, #0
   12b44:	b	12a68 <putchar_unlocked@plt+0x1b94>
   12b48:	push	{r4, r5, r6, r7, r8, lr}
   12b4c:	mov	r6, #1
   12b50:	ldr	r4, [pc, #100]	; 12bbc <putchar_unlocked@plt+0x1ce8>
   12b54:	ldr	r5, [r4]
   12b58:	add	r7, r5, #4
   12b5c:	ldr	r3, [r4, #4]
   12b60:	cmp	r3, r6
   12b64:	bgt	12bac <putchar_unlocked@plt+0x1cd8>
   12b68:	ldr	r6, [pc, #80]	; 12bc0 <putchar_unlocked@plt+0x1cec>
   12b6c:	ldr	r0, [r5, #4]
   12b70:	cmp	r0, r6
   12b74:	beq	12b88 <putchar_unlocked@plt+0x1cb4>
   12b78:	bl	11798 <putchar_unlocked@plt+0x8c4>
   12b7c:	mov	r3, #256	; 0x100
   12b80:	str	r3, [r4, #8]
   12b84:	str	r6, [r4, #12]
   12b88:	ldr	r6, [pc, #52]	; 12bc4 <putchar_unlocked@plt+0x1cf0>
   12b8c:	cmp	r5, r6
   12b90:	beq	12ba0 <putchar_unlocked@plt+0x1ccc>
   12b94:	mov	r0, r5
   12b98:	bl	11798 <putchar_unlocked@plt+0x8c4>
   12b9c:	str	r6, [r4]
   12ba0:	mov	r3, #1
   12ba4:	str	r3, [r4, #4]
   12ba8:	pop	{r4, r5, r6, r7, r8, pc}
   12bac:	ldr	r0, [r7, r6, lsl #3]
   12bb0:	add	r6, r6, #1
   12bb4:	bl	11798 <putchar_unlocked@plt+0x8c4>
   12bb8:	b	12b5c <putchar_unlocked@plt+0x1c88>
   12bbc:	strdeq	r5, [r2], -r4
   12bc0:	andeq	r5, r2, r4, ror r1
   12bc4:	strdeq	r5, [r2], -ip
   12bc8:	ldr	r3, [pc, #4]	; 12bd4 <putchar_unlocked@plt+0x1d00>
   12bcc:	mvn	r2, #0
   12bd0:	b	12748 <putchar_unlocked@plt+0x1874>
   12bd4:	andeq	r5, r2, r4, ror r2
   12bd8:	ldr	r3, [pc]	; 12be0 <putchar_unlocked@plt+0x1d0c>
   12bdc:	b	12748 <putchar_unlocked@plt+0x1874>
   12be0:	andeq	r5, r2, r4, ror r2
   12be4:	mov	r1, r0
   12be8:	mov	r0, #0
   12bec:	b	12bc8 <putchar_unlocked@plt+0x1cf4>
   12bf0:	mov	r2, r1
   12bf4:	mov	r1, r0
   12bf8:	mov	r0, #0
   12bfc:	b	12bd8 <putchar_unlocked@plt+0x1d04>
   12c00:	push	{r4, r5, lr}
   12c04:	sub	sp, sp, #52	; 0x34
   12c08:	mov	r5, r2
   12c0c:	mov	r4, r0
   12c10:	mov	r0, sp
   12c14:	bl	118fc <putchar_unlocked@plt+0xa28>
   12c18:	mov	r3, sp
   12c1c:	mvn	r2, #0
   12c20:	mov	r1, r5
   12c24:	mov	r0, r4
   12c28:	bl	12748 <putchar_unlocked@plt+0x1874>
   12c2c:	add	sp, sp, #52	; 0x34
   12c30:	pop	{r4, r5, pc}
   12c34:	push	{r4, r5, r6, lr}
   12c38:	sub	sp, sp, #48	; 0x30
   12c3c:	mov	r5, r2
   12c40:	mov	r6, r3
   12c44:	mov	r4, r0
   12c48:	mov	r0, sp
   12c4c:	bl	118fc <putchar_unlocked@plt+0xa28>
   12c50:	mov	r3, sp
   12c54:	mov	r2, r6
   12c58:	mov	r1, r5
   12c5c:	mov	r0, r4
   12c60:	bl	12748 <putchar_unlocked@plt+0x1874>
   12c64:	add	sp, sp, #48	; 0x30
   12c68:	pop	{r4, r5, r6, pc}
   12c6c:	mov	r2, r1
   12c70:	mov	r1, r0
   12c74:	mov	r0, #0
   12c78:	b	12c00 <putchar_unlocked@plt+0x1d2c>
   12c7c:	mov	r3, r2
   12c80:	mov	r2, r1
   12c84:	mov	r1, r0
   12c88:	mov	r0, #0
   12c8c:	b	12c34 <putchar_unlocked@plt+0x1d60>
   12c90:	push	{r4, r5, r6, lr}
   12c94:	mov	r4, r0
   12c98:	mov	r5, r1
   12c9c:	mov	r6, r2
   12ca0:	sub	sp, sp, #48	; 0x30
   12ca4:	mov	ip, sp
   12ca8:	ldr	lr, [pc, #64]	; 12cf0 <putchar_unlocked@plt+0x1e1c>
   12cac:	ldm	lr!, {r0, r1, r2, r3}
   12cb0:	stmia	ip!, {r0, r1, r2, r3}
   12cb4:	ldm	lr!, {r0, r1, r2, r3}
   12cb8:	stmia	ip!, {r0, r1, r2, r3}
   12cbc:	ldm	lr, {r0, r1, r2, r3}
   12cc0:	stm	ip, {r0, r1, r2, r3}
   12cc4:	mov	r1, r6
   12cc8:	mov	r2, #1
   12ccc:	mov	r0, sp
   12cd0:	bl	12954 <putchar_unlocked@plt+0x1a80>
   12cd4:	mov	r3, sp
   12cd8:	mov	r2, r5
   12cdc:	mov	r1, r4
   12ce0:	mov	r0, #0
   12ce4:	bl	12748 <putchar_unlocked@plt+0x1874>
   12ce8:	add	sp, sp, #48	; 0x30
   12cec:	pop	{r4, r5, r6, pc}
   12cf0:	andeq	r5, r2, r4, ror r2
   12cf4:	mov	r2, r1
   12cf8:	mvn	r1, #0
   12cfc:	b	12c90 <putchar_unlocked@plt+0x1dbc>
   12d00:	mov	r1, #58	; 0x3a
   12d04:	b	12cf4 <putchar_unlocked@plt+0x1e20>
   12d08:	mov	r2, #58	; 0x3a
   12d0c:	b	12c90 <putchar_unlocked@plt+0x1dbc>
   12d10:	push	{r4, r5, lr}
   12d14:	sub	sp, sp, #100	; 0x64
   12d18:	mov	r4, r0
   12d1c:	mov	r0, sp
   12d20:	mov	r5, r2
   12d24:	bl	118fc <putchar_unlocked@plt+0xa28>
   12d28:	mov	ip, sp
   12d2c:	add	lr, sp, #48	; 0x30
   12d30:	ldm	ip!, {r0, r1, r2, r3}
   12d34:	stmia	lr!, {r0, r1, r2, r3}
   12d38:	ldm	ip!, {r0, r1, r2, r3}
   12d3c:	stmia	lr!, {r0, r1, r2, r3}
   12d40:	ldm	ip, {r0, r1, r2, r3}
   12d44:	stm	lr, {r0, r1, r2, r3}
   12d48:	mov	r2, #1
   12d4c:	mov	r1, #58	; 0x3a
   12d50:	add	r0, sp, #48	; 0x30
   12d54:	bl	12954 <putchar_unlocked@plt+0x1a80>
   12d58:	add	r3, sp, #48	; 0x30
   12d5c:	mvn	r2, #0
   12d60:	mov	r1, r5
   12d64:	mov	r0, r4
   12d68:	bl	12748 <putchar_unlocked@plt+0x1874>
   12d6c:	add	sp, sp, #100	; 0x64
   12d70:	pop	{r4, r5, pc}
   12d74:	push	{r4, r5, r6, r7, lr}
   12d78:	mov	r4, r0
   12d7c:	mov	r6, r1
   12d80:	mov	r7, r2
   12d84:	mov	r5, r3
   12d88:	sub	sp, sp, #52	; 0x34
   12d8c:	ldr	lr, [pc, #68]	; 12dd8 <putchar_unlocked@plt+0x1f04>
   12d90:	mov	ip, sp
   12d94:	ldm	lr!, {r0, r1, r2, r3}
   12d98:	stmia	ip!, {r0, r1, r2, r3}
   12d9c:	ldm	lr!, {r0, r1, r2, r3}
   12da0:	stmia	ip!, {r0, r1, r2, r3}
   12da4:	ldm	lr, {r0, r1, r2, r3}
   12da8:	stm	ip, {r0, r1, r2, r3}
   12dac:	mov	r2, r7
   12db0:	mov	r1, r6
   12db4:	mov	r0, sp
   12db8:	bl	129b0 <putchar_unlocked@plt+0x1adc>
   12dbc:	ldr	r2, [sp, #72]	; 0x48
   12dc0:	mov	r3, sp
   12dc4:	mov	r1, r5
   12dc8:	mov	r0, r4
   12dcc:	bl	12748 <putchar_unlocked@plt+0x1874>
   12dd0:	add	sp, sp, #52	; 0x34
   12dd4:	pop	{r4, r5, r6, r7, pc}
   12dd8:	andeq	r5, r2, r4, ror r2
   12ddc:	mvn	ip, #0
   12de0:	push	{r0, r1, r2, lr}
   12de4:	str	ip, [sp]
   12de8:	bl	12d74 <putchar_unlocked@plt+0x1ea0>
   12dec:	add	sp, sp, #12
   12df0:	pop	{pc}		; (ldr pc, [sp], #4)
   12df4:	mov	r3, r2
   12df8:	mov	r2, r1
   12dfc:	mov	r1, r0
   12e00:	mov	r0, #0
   12e04:	b	12ddc <putchar_unlocked@plt+0x1f08>
   12e08:	push	{r0, r1, r2, lr}
   12e0c:	str	r3, [sp]
   12e10:	mov	r3, r2
   12e14:	mov	r2, r1
   12e18:	mov	r1, r0
   12e1c:	mov	r0, #0
   12e20:	bl	12d74 <putchar_unlocked@plt+0x1ea0>
   12e24:	add	sp, sp, #12
   12e28:	pop	{pc}		; (ldr pc, [sp], #4)
   12e2c:	ldr	r3, [pc]	; 12e34 <putchar_unlocked@plt+0x1f60>
   12e30:	b	12748 <putchar_unlocked@plt+0x1874>
   12e34:	andeq	r5, r2, r4, lsl #2
   12e38:	mov	r2, r1
   12e3c:	mov	r1, r0
   12e40:	mov	r0, #0
   12e44:	b	12e2c <putchar_unlocked@plt+0x1f58>
   12e48:	mvn	r2, #0
   12e4c:	b	12e2c <putchar_unlocked@plt+0x1f58>
   12e50:	mov	r1, r0
   12e54:	mov	r0, #0
   12e58:	b	12e48 <putchar_unlocked@plt+0x1f74>
   12e5c:	push	{r4, r5, r6, lr}
   12e60:	cmp	r1, #0
   12e64:	sub	sp, sp, #32
   12e68:	mov	r5, r0
   12e6c:	ldr	r4, [sp, #48]	; 0x30
   12e70:	ldr	r6, [sp, #52]	; 0x34
   12e74:	beq	12f28 <putchar_unlocked@plt+0x2054>
   12e78:	strd	r2, [sp]
   12e7c:	mov	r3, r1
   12e80:	mov	r1, #1
   12e84:	ldr	r2, [pc, #856]	; 131e4 <putchar_unlocked@plt+0x2310>
   12e88:	bl	10e44 <__fprintf_chk@plt>
   12e8c:	mov	r2, #5
   12e90:	ldr	r1, [pc, #848]	; 131e8 <putchar_unlocked@plt+0x2314>
   12e94:	mov	r0, #0
   12e98:	bl	10d0c <dcgettext@plt>
   12e9c:	movw	r3, #2022	; 0x7e6
   12ea0:	ldr	r2, [pc, #836]	; 131ec <putchar_unlocked@plt+0x2318>
   12ea4:	mov	r1, #1
   12ea8:	str	r3, [sp]
   12eac:	mov	r3, r0
   12eb0:	mov	r0, r5
   12eb4:	bl	10e44 <__fprintf_chk@plt>
   12eb8:	mov	r1, r5
   12ebc:	mov	r0, #10
   12ec0:	bl	10d00 <fputc_unlocked@plt>
   12ec4:	mov	r2, #5
   12ec8:	ldr	r1, [pc, #800]	; 131f0 <putchar_unlocked@plt+0x231c>
   12ecc:	mov	r0, #0
   12ed0:	bl	10d0c <dcgettext@plt>
   12ed4:	mov	r2, r0
   12ed8:	mov	r1, #1
   12edc:	ldr	r3, [pc, #784]	; 131f4 <putchar_unlocked@plt+0x2320>
   12ee0:	mov	r0, r5
   12ee4:	bl	10e44 <__fprintf_chk@plt>
   12ee8:	mov	r1, r5
   12eec:	mov	r0, #10
   12ef0:	bl	10d00 <fputc_unlocked@plt>
   12ef4:	cmp	r6, #9
   12ef8:	ldrls	pc, [pc, r6, lsl #2]
   12efc:	b	131d8 <putchar_unlocked@plt+0x2304>
   12f00:	andeq	r3, r1, r8, lsl r0
   12f04:	andeq	r2, r1, r0, asr #30
   12f08:	andeq	r2, r1, ip, ror #30
   12f0c:	andeq	r2, r1, r0, lsr #31
   12f10:	ldrdeq	r2, [r1], -ip
   12f14:	andeq	r3, r1, r0, lsr #32
   12f18:	andeq	r3, r1, r8, rrx
   12f1c:	strheq	r3, [r1], -r8
   12f20:	andeq	r3, r1, r0, lsl r1
   12f24:	andeq	r3, r1, r0, ror r1
   12f28:	mov	r1, #1
   12f2c:	str	r3, [sp]
   12f30:	mov	r3, r2
   12f34:	ldr	r2, [pc, #700]	; 131f8 <putchar_unlocked@plt+0x2324>
   12f38:	bl	10e44 <__fprintf_chk@plt>
   12f3c:	b	12e8c <putchar_unlocked@plt+0x1fb8>
   12f40:	mov	r2, #5
   12f44:	ldr	r1, [pc, #688]	; 131fc <putchar_unlocked@plt+0x2328>
   12f48:	mov	r0, #0
   12f4c:	bl	10d0c <dcgettext@plt>
   12f50:	ldr	r3, [r4]
   12f54:	mov	r2, r0
   12f58:	mov	r1, #1
   12f5c:	mov	r0, r5
   12f60:	add	sp, sp, #32
   12f64:	pop	{r4, r5, r6, lr}
   12f68:	b	10e44 <__fprintf_chk@plt>
   12f6c:	mov	r2, #5
   12f70:	ldr	r1, [pc, #648]	; 13200 <putchar_unlocked@plt+0x232c>
   12f74:	mov	r0, #0
   12f78:	bl	10d0c <dcgettext@plt>
   12f7c:	ldr	r3, [r4, #4]
   12f80:	mov	r2, r0
   12f84:	mov	r1, #1
   12f88:	mov	r0, r5
   12f8c:	str	r3, [sp, #48]	; 0x30
   12f90:	ldr	r3, [r4]
   12f94:	add	sp, sp, #32
   12f98:	pop	{r4, r5, r6, lr}
   12f9c:	b	10e44 <__fprintf_chk@plt>
   12fa0:	mov	r2, #5
   12fa4:	ldr	r1, [pc, #600]	; 13204 <putchar_unlocked@plt+0x2330>
   12fa8:	mov	r0, #0
   12fac:	bl	10d0c <dcgettext@plt>
   12fb0:	ldr	r3, [r4, #8]
   12fb4:	mov	r2, r0
   12fb8:	mov	r1, #1
   12fbc:	mov	r0, r5
   12fc0:	str	r3, [sp, #52]	; 0x34
   12fc4:	ldr	r3, [r4, #4]
   12fc8:	str	r3, [sp, #48]	; 0x30
   12fcc:	ldr	r3, [r4]
   12fd0:	add	sp, sp, #32
   12fd4:	pop	{r4, r5, r6, lr}
   12fd8:	b	10e44 <__fprintf_chk@plt>
   12fdc:	mov	r2, #5
   12fe0:	ldr	r1, [pc, #544]	; 13208 <putchar_unlocked@plt+0x2334>
   12fe4:	mov	r0, #0
   12fe8:	bl	10d0c <dcgettext@plt>
   12fec:	ldr	r3, [r4, #12]
   12ff0:	mov	r2, r0
   12ff4:	mov	r1, #1
   12ff8:	mov	r0, r5
   12ffc:	str	r3, [sp, #8]
   13000:	ldr	r3, [r4, #8]
   13004:	str	r3, [sp, #4]
   13008:	ldr	r3, [r4, #4]
   1300c:	str	r3, [sp]
   13010:	ldr	r3, [r4]
   13014:	bl	10e44 <__fprintf_chk@plt>
   13018:	add	sp, sp, #32
   1301c:	pop	{r4, r5, r6, pc}
   13020:	mov	r2, #5
   13024:	ldr	r1, [pc, #480]	; 1320c <putchar_unlocked@plt+0x2338>
   13028:	mov	r0, #0
   1302c:	bl	10d0c <dcgettext@plt>
   13030:	ldr	r3, [r4, #16]
   13034:	mov	r2, r0
   13038:	mov	r1, #1
   1303c:	mov	r0, r5
   13040:	str	r3, [sp, #12]
   13044:	ldr	r3, [r4, #12]
   13048:	str	r3, [sp, #8]
   1304c:	ldr	r3, [r4, #8]
   13050:	str	r3, [sp, #4]
   13054:	ldr	r3, [r4, #4]
   13058:	str	r3, [sp]
   1305c:	ldr	r3, [r4]
   13060:	bl	10e44 <__fprintf_chk@plt>
   13064:	b	13018 <putchar_unlocked@plt+0x2144>
   13068:	mov	r2, #5
   1306c:	ldr	r1, [pc, #412]	; 13210 <putchar_unlocked@plt+0x233c>
   13070:	mov	r0, #0
   13074:	bl	10d0c <dcgettext@plt>
   13078:	ldr	r3, [r4, #20]
   1307c:	mov	r2, r0
   13080:	mov	r1, #1
   13084:	mov	r0, r5
   13088:	str	r3, [sp, #16]
   1308c:	ldr	r3, [r4, #16]
   13090:	str	r3, [sp, #12]
   13094:	ldr	r3, [r4, #12]
   13098:	str	r3, [sp, #8]
   1309c:	ldr	r3, [r4, #8]
   130a0:	str	r3, [sp, #4]
   130a4:	ldr	r3, [r4, #4]
   130a8:	str	r3, [sp]
   130ac:	ldr	r3, [r4]
   130b0:	bl	10e44 <__fprintf_chk@plt>
   130b4:	b	13018 <putchar_unlocked@plt+0x2144>
   130b8:	mov	r2, #5
   130bc:	ldr	r1, [pc, #336]	; 13214 <putchar_unlocked@plt+0x2340>
   130c0:	mov	r0, #0
   130c4:	bl	10d0c <dcgettext@plt>
   130c8:	ldr	r3, [r4, #24]
   130cc:	mov	r2, r0
   130d0:	mov	r1, #1
   130d4:	mov	r0, r5
   130d8:	str	r3, [sp, #20]
   130dc:	ldr	r3, [r4, #20]
   130e0:	str	r3, [sp, #16]
   130e4:	ldr	r3, [r4, #16]
   130e8:	str	r3, [sp, #12]
   130ec:	ldr	r3, [r4, #12]
   130f0:	str	r3, [sp, #8]
   130f4:	ldr	r3, [r4, #8]
   130f8:	str	r3, [sp, #4]
   130fc:	ldr	r3, [r4, #4]
   13100:	str	r3, [sp]
   13104:	ldr	r3, [r4]
   13108:	bl	10e44 <__fprintf_chk@plt>
   1310c:	b	13018 <putchar_unlocked@plt+0x2144>
   13110:	mov	r2, #5
   13114:	ldr	r1, [pc, #252]	; 13218 <putchar_unlocked@plt+0x2344>
   13118:	mov	r0, #0
   1311c:	bl	10d0c <dcgettext@plt>
   13120:	ldr	r3, [r4, #28]
   13124:	mov	r2, r0
   13128:	mov	r1, #1
   1312c:	mov	r0, r5
   13130:	str	r3, [sp, #24]
   13134:	ldr	r3, [r4, #24]
   13138:	str	r3, [sp, #20]
   1313c:	ldr	r3, [r4, #20]
   13140:	str	r3, [sp, #16]
   13144:	ldr	r3, [r4, #16]
   13148:	str	r3, [sp, #12]
   1314c:	ldr	r3, [r4, #12]
   13150:	str	r3, [sp, #8]
   13154:	ldr	r3, [r4, #8]
   13158:	str	r3, [sp, #4]
   1315c:	ldr	r3, [r4, #4]
   13160:	str	r3, [sp]
   13164:	ldr	r3, [r4]
   13168:	bl	10e44 <__fprintf_chk@plt>
   1316c:	b	13018 <putchar_unlocked@plt+0x2144>
   13170:	ldr	r1, [pc, #164]	; 1321c <putchar_unlocked@plt+0x2348>
   13174:	mov	r2, #5
   13178:	mov	r0, #0
   1317c:	bl	10d0c <dcgettext@plt>
   13180:	ldr	r3, [r4, #32]
   13184:	mov	r2, r0
   13188:	mov	r1, #1
   1318c:	mov	r0, r5
   13190:	str	r3, [sp, #28]
   13194:	ldr	r3, [r4, #28]
   13198:	str	r3, [sp, #24]
   1319c:	ldr	r3, [r4, #24]
   131a0:	str	r3, [sp, #20]
   131a4:	ldr	r3, [r4, #20]
   131a8:	str	r3, [sp, #16]
   131ac:	ldr	r3, [r4, #16]
   131b0:	str	r3, [sp, #12]
   131b4:	ldr	r3, [r4, #12]
   131b8:	str	r3, [sp, #8]
   131bc:	ldr	r3, [r4, #8]
   131c0:	str	r3, [sp, #4]
   131c4:	ldr	r3, [r4, #4]
   131c8:	str	r3, [sp]
   131cc:	ldr	r3, [r4]
   131d0:	bl	10e44 <__fprintf_chk@plt>
   131d4:	b	13018 <putchar_unlocked@plt+0x2144>
   131d8:	mov	r2, #5
   131dc:	ldr	r1, [pc, #60]	; 13220 <putchar_unlocked@plt+0x234c>
   131e0:	b	13178 <putchar_unlocked@plt+0x22a4>
   131e4:	strdeq	r4, [r1], -fp
   131e8:	andeq	r4, r1, lr, lsl #8
   131ec:	ldrdeq	r4, [r1], -ip
   131f0:	andeq	r4, r1, r2, lsl r4
   131f4:			; <UNDEFINED> instruction: 0x000144bd
   131f8:	andeq	r4, r1, r7, lsl #8
   131fc:	ldrdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   13200:	andeq	r4, r1, pc, ror #9
   13204:	andeq	r4, r1, r6, lsl #10
   13208:	andeq	r4, r1, r2, lsr #10
   1320c:	andeq	r4, r1, r2, asr #10
   13210:	andeq	r4, r1, r6, ror #10
   13214:	andeq	r4, r1, lr, lsl #11
   13218:			; <UNDEFINED> instruction: 0x000145ba
   1321c:	andeq	r4, r1, sl, ror #11
   13220:	andeq	r4, r1, lr, lsl r6
   13224:	push	{r0, r1, r4, lr}
   13228:	mov	ip, #0
   1322c:	ldr	lr, [sp, #16]
   13230:	ldr	r4, [lr, ip, lsl #2]
   13234:	cmp	r4, #0
   13238:	bne	13250 <putchar_unlocked@plt+0x237c>
   1323c:	str	lr, [sp]
   13240:	str	ip, [sp, #4]
   13244:	bl	12e5c <putchar_unlocked@plt+0x1f88>
   13248:	add	sp, sp, #8
   1324c:	pop	{r4, pc}
   13250:	add	ip, ip, #1
   13254:	b	13230 <putchar_unlocked@plt+0x235c>
   13258:	push	{r4, r5, r6, lr}
   1325c:	sub	sp, sp, #48	; 0x30
   13260:	mov	ip, #0
   13264:	add	lr, sp, #8
   13268:	mov	r5, lr
   1326c:	ldr	r6, [sp, #64]	; 0x40
   13270:	ldr	r4, [r6, ip, lsl #2]
   13274:	cmp	r4, #0
   13278:	str	r4, [lr], #4
   1327c:	beq	1328c <putchar_unlocked@plt+0x23b8>
   13280:	add	ip, ip, #1
   13284:	cmp	ip, #10
   13288:	bne	13270 <putchar_unlocked@plt+0x239c>
   1328c:	stm	sp, {r5, ip}
   13290:	bl	12e5c <putchar_unlocked@plt+0x1f88>
   13294:	add	sp, sp, #48	; 0x30
   13298:	pop	{r4, r5, r6, pc}
   1329c:	push	{r3}		; (str r3, [sp, #-4]!)
   132a0:	push	{r0, r1, r2, r3, lr}
   132a4:	add	r3, sp, #24
   132a8:	str	r3, [sp]
   132ac:	str	r3, [sp, #12]
   132b0:	ldr	r3, [sp, #20]
   132b4:	bl	13258 <putchar_unlocked@plt+0x2384>
   132b8:	add	sp, sp, #16
   132bc:	pop	{lr}		; (ldr lr, [sp], #4)
   132c0:	add	sp, sp, #4
   132c4:	bx	lr
   132c8:	ldr	r3, [pc, #116]	; 13344 <putchar_unlocked@plt+0x2470>
   132cc:	mov	r0, #10
   132d0:	push	{r4, lr}
   132d4:	ldr	r1, [r3]
   132d8:	bl	10d00 <fputc_unlocked@plt>
   132dc:	mov	r2, #5
   132e0:	ldr	r1, [pc, #96]	; 13348 <putchar_unlocked@plt+0x2474>
   132e4:	mov	r0, #0
   132e8:	bl	10d0c <dcgettext@plt>
   132ec:	mov	r1, r0
   132f0:	ldr	r2, [pc, #84]	; 1334c <putchar_unlocked@plt+0x2478>
   132f4:	mov	r0, #1
   132f8:	bl	10e2c <__printf_chk@plt>
   132fc:	mov	r2, #5
   13300:	ldr	r1, [pc, #72]	; 13350 <putchar_unlocked@plt+0x247c>
   13304:	mov	r0, #0
   13308:	bl	10d0c <dcgettext@plt>
   1330c:	mov	r1, r0
   13310:	ldr	r3, [pc, #60]	; 13354 <putchar_unlocked@plt+0x2480>
   13314:	mov	r0, #1
   13318:	ldr	r2, [pc, #56]	; 13358 <putchar_unlocked@plt+0x2484>
   1331c:	bl	10e2c <__printf_chk@plt>
   13320:	mov	r2, #5
   13324:	ldr	r1, [pc, #48]	; 1335c <putchar_unlocked@plt+0x2488>
   13328:	mov	r0, #0
   1332c:	bl	10d0c <dcgettext@plt>
   13330:	mov	r1, r0
   13334:	ldr	r2, [pc, #36]	; 13360 <putchar_unlocked@plt+0x248c>
   13338:	mov	r0, #1
   1333c:	pop	{r4, lr}
   13340:	b	10e2c <__printf_chk@plt>
   13344:	andeq	r5, r2, ip, asr #2
   13348:	andeq	r4, r1, sl, asr r6
   1334c:	andeq	r4, r1, lr, ror #12
   13350:	andeq	r4, r1, r4, lsl #13
   13354:	andeq	r4, r1, r4, lsr #1
   13358:	andeq	r4, r1, ip, asr #1
   1335c:	muleq	r1, r8, r6
   13360:			; <UNDEFINED> instruction: 0x000146bf
   13364:	push	{r4, lr}
   13368:	bl	136e0 <putchar_unlocked@plt+0x280c>
   1336c:	cmp	r0, #0
   13370:	popne	{r4, pc}
   13374:	bl	1361c <putchar_unlocked@plt+0x2748>
   13378:	push	{r4, lr}
   1337c:	bl	136e0 <putchar_unlocked@plt+0x280c>
   13380:	cmp	r0, #0
   13384:	popne	{r4, pc}
   13388:	bl	1361c <putchar_unlocked@plt+0x2748>
   1338c:	b	13364 <putchar_unlocked@plt+0x2490>
   13390:	push	{r4, r5, r6, lr}
   13394:	mov	r5, r0
   13398:	mov	r4, r1
   1339c:	bl	1370c <putchar_unlocked@plt+0x2838>
   133a0:	cmp	r0, #0
   133a4:	popne	{r4, r5, r6, pc}
   133a8:	adds	r4, r4, #0
   133ac:	movne	r4, #1
   133b0:	cmp	r5, #0
   133b4:	moveq	r4, #1
   133b8:	cmp	r4, #0
   133bc:	popeq	{r4, r5, r6, pc}
   133c0:	bl	1361c <putchar_unlocked@plt+0x2748>
   133c4:	push	{r4, lr}
   133c8:	bl	13954 <putchar_unlocked@plt+0x2a80>
   133cc:	cmp	r0, #0
   133d0:	popne	{r4, pc}
   133d4:	bl	1361c <putchar_unlocked@plt+0x2748>
   133d8:	push	{r4, r5, r6, lr}
   133dc:	mov	r6, r0
   133e0:	mov	r5, r1
   133e4:	mov	r4, r2
   133e8:	bl	13bcc <putchar_unlocked@plt+0x2cf8>
   133ec:	cmp	r0, #0
   133f0:	popne	{r4, r5, r6, pc}
   133f4:	cmp	r6, #0
   133f8:	beq	13408 <putchar_unlocked@plt+0x2534>
   133fc:	cmp	r5, #0
   13400:	cmpne	r4, #0
   13404:	popeq	{r4, r5, r6, pc}
   13408:	bl	1361c <putchar_unlocked@plt+0x2748>
   1340c:	b	133d8 <putchar_unlocked@plt+0x2504>
   13410:	push	{r4, lr}
   13414:	bl	13964 <putchar_unlocked@plt+0x2a90>
   13418:	cmp	r0, #0
   1341c:	popne	{r4, pc}
   13420:	bl	1361c <putchar_unlocked@plt+0x2748>
   13424:	mov	r2, r1
   13428:	mov	r1, r0
   1342c:	mov	r0, #0
   13430:	b	133d8 <putchar_unlocked@plt+0x2504>
   13434:	mov	r2, r1
   13438:	mov	r1, r0
   1343c:	mov	r0, #0
   13440:	b	13410 <putchar_unlocked@plt+0x253c>
   13444:	cmp	r0, #0
   13448:	push	{r4, r5, r6, lr}
   1344c:	mov	r5, r1
   13450:	ldr	r4, [r1]
   13454:	bne	13480 <putchar_unlocked@plt+0x25ac>
   13458:	cmp	r4, #0
   1345c:	bne	13470 <putchar_unlocked@plt+0x259c>
   13460:	mov	r4, #64	; 0x40
   13464:	udiv	r4, r4, r2
   13468:	cmp	r2, #64	; 0x40
   1346c:	addhi	r4, r4, #1
   13470:	mov	r1, r4
   13474:	bl	133d8 <putchar_unlocked@plt+0x2504>
   13478:	str	r4, [r5]
   1347c:	pop	{r4, r5, r6, pc}
   13480:	lsr	r3, r4, #1
   13484:	add	r3, r3, #1
   13488:	adds	r4, r4, r3
   1348c:	bcc	13470 <putchar_unlocked@plt+0x259c>
   13490:	bl	1361c <putchar_unlocked@plt+0x2748>
   13494:	mov	r2, #1
   13498:	b	13444 <putchar_unlocked@plt+0x2570>
   1349c:	ldr	ip, [r1]
   134a0:	push	{r4, r5, r6, r7, r8, lr}
   134a4:	mov	r5, r1
   134a8:	mvn	r8, r3
   134ac:	lsr	r8, r8, #31
   134b0:	ldr	lr, [sp, #24]
   134b4:	asr	r1, ip, #1
   134b8:	adds	r4, ip, r1
   134bc:	mvnvs	r4, #-2147483648	; 0x80000000
   134c0:	cmp	r3, r4
   134c4:	movge	r1, #0
   134c8:	andlt	r1, r8, #1
   134cc:	cmp	r1, #0
   134d0:	movne	r4, r3
   134d4:	smull	r6, r7, r4, lr
   134d8:	cmp	r7, r6, asr #31
   134dc:	bne	134f4 <putchar_unlocked@plt+0x2620>
   134e0:	cmp	r6, #63	; 0x3f
   134e4:	mov	r1, r6
   134e8:	bgt	13504 <putchar_unlocked@plt+0x2630>
   134ec:	mov	r1, #64	; 0x40
   134f0:	b	134f8 <putchar_unlocked@plt+0x2624>
   134f4:	mvn	r1, #-2147483648	; 0x80000000
   134f8:	sdiv	r4, r1, lr
   134fc:	mls	r6, lr, r4, r1
   13500:	sub	r1, r1, r6
   13504:	cmp	r0, #0
   13508:	sub	r6, r4, ip
   1350c:	streq	r0, [r5]
   13510:	cmp	r6, r2
   13514:	bge	13548 <putchar_unlocked@plt+0x2674>
   13518:	adds	r4, ip, r2
   1351c:	bvs	13544 <putchar_unlocked@plt+0x2670>
   13520:	cmp	r4, r3
   13524:	movle	r3, #0
   13528:	andgt	r3, r8, #1
   1352c:	cmp	r3, #0
   13530:	bne	13544 <putchar_unlocked@plt+0x2670>
   13534:	smull	r2, r3, r4, lr
   13538:	cmp	r3, r2, asr #31
   1353c:	mov	r1, r2
   13540:	beq	13548 <putchar_unlocked@plt+0x2674>
   13544:	bl	1361c <putchar_unlocked@plt+0x2748>
   13548:	bl	13390 <putchar_unlocked@plt+0x24bc>
   1354c:	str	r4, [r5]
   13550:	pop	{r4, r5, r6, r7, r8, pc}
   13554:	push	{r4, lr}
   13558:	bl	1368c <putchar_unlocked@plt+0x27b8>
   1355c:	cmp	r0, #0
   13560:	popne	{r4, pc}
   13564:	bl	1361c <putchar_unlocked@plt+0x2748>
   13568:	mov	r1, #1
   1356c:	b	13554 <putchar_unlocked@plt+0x2680>
   13570:	push	{r4, lr}
   13574:	bl	1368c <putchar_unlocked@plt+0x27b8>
   13578:	cmp	r0, #0
   1357c:	popne	{r4, pc}
   13580:	bl	1361c <putchar_unlocked@plt+0x2748>
   13584:	mov	r1, #1
   13588:	b	13570 <putchar_unlocked@plt+0x269c>
   1358c:	push	{r4, r5, r6, lr}
   13590:	mov	r4, r1
   13594:	mov	r5, r0
   13598:	mov	r0, r1
   1359c:	bl	13364 <putchar_unlocked@plt+0x2490>
   135a0:	mov	r2, r4
   135a4:	mov	r1, r5
   135a8:	pop	{r4, r5, r6, lr}
   135ac:	b	10cdc <memcpy@plt>
   135b0:	push	{r4, r5, r6, lr}
   135b4:	mov	r4, r1
   135b8:	mov	r5, r0
   135bc:	mov	r0, r1
   135c0:	bl	13378 <putchar_unlocked@plt+0x24a4>
   135c4:	mov	r2, r4
   135c8:	mov	r1, r5
   135cc:	pop	{r4, r5, r6, lr}
   135d0:	b	10cdc <memcpy@plt>
   135d4:	push	{r4, r5, r6, lr}
   135d8:	mov	r5, r0
   135dc:	add	r0, r1, #1
   135e0:	mov	r4, r1
   135e4:	bl	13378 <putchar_unlocked@plt+0x24a4>
   135e8:	mov	r2, #0
   135ec:	mov	r1, r5
   135f0:	strb	r2, [r0, r4]
   135f4:	mov	r2, r4
   135f8:	pop	{r4, r5, r6, lr}
   135fc:	b	10cdc <memcpy@plt>
   13600:	push	{r4, lr}
   13604:	mov	r4, r0
   13608:	bl	10de4 <strlen@plt>
   1360c:	add	r1, r0, #1
   13610:	mov	r0, r4
   13614:	pop	{r4, lr}
   13618:	b	1358c <putchar_unlocked@plt+0x26b8>
   1361c:	ldr	r3, [pc, #44]	; 13650 <putchar_unlocked@plt+0x277c>
   13620:	mov	r2, #5
   13624:	mov	r0, #0
   13628:	push	{r4, lr}
   1362c:	ldr	r1, [pc, #32]	; 13654 <putchar_unlocked@plt+0x2780>
   13630:	ldr	r4, [r3]
   13634:	bl	10d0c <dcgettext@plt>
   13638:	mov	r3, r0
   1363c:	ldr	r2, [pc, #20]	; 13658 <putchar_unlocked@plt+0x2784>
   13640:	mov	r1, #0
   13644:	mov	r0, r4
   13648:	bl	10d84 <error@plt>
   1364c:	bl	10ebc <abort@plt>
   13650:	strdeq	r5, [r2], -r0
   13654:	andeq	r4, r1, fp, lsl #14
   13658:	strdeq	r4, [r1], -sp
   1365c:	push	{r4, lr}
   13660:	bl	13a34 <putchar_unlocked@plt+0x2b60>
   13664:	cmn	r0, #1
   13668:	mov	r4, r0
   1366c:	bne	13684 <putchar_unlocked@plt+0x27b0>
   13670:	bl	10df0 <__errno_location@plt>
   13674:	ldr	r3, [r0]
   13678:	cmp	r3, #12
   1367c:	bne	13684 <putchar_unlocked@plt+0x27b0>
   13680:	bl	1361c <putchar_unlocked@plt+0x2748>
   13684:	mov	r0, r4
   13688:	pop	{r4, pc}
   1368c:	cmp	r1, #0
   13690:	cmpne	r0, #0
   13694:	beq	136cc <putchar_unlocked@plt+0x27f8>
   13698:	push	{r4, r5, r6, lr}
   1369c:	umull	r4, r5, r0, r1
   136a0:	adds	r3, r5, #0
   136a4:	movne	r3, #1
   136a8:	cmp	r4, #0
   136ac:	blt	136b8 <putchar_unlocked@plt+0x27e4>
   136b0:	cmp	r3, #0
   136b4:	beq	136d8 <putchar_unlocked@plt+0x2804>
   136b8:	bl	10df0 <__errno_location@plt>
   136bc:	mov	r3, #12
   136c0:	str	r3, [r0]
   136c4:	mov	r0, #0
   136c8:	pop	{r4, r5, r6, pc}
   136cc:	mov	r1, #1
   136d0:	mov	r0, r1
   136d4:	b	10c64 <calloc@plt>
   136d8:	pop	{r4, r5, r6, lr}
   136dc:	b	136d4 <putchar_unlocked@plt+0x2800>
   136e0:	cmp	r0, #0
   136e4:	beq	13704 <putchar_unlocked@plt+0x2830>
   136e8:	bge	13708 <putchar_unlocked@plt+0x2834>
   136ec:	push	{r4, lr}
   136f0:	bl	10df0 <__errno_location@plt>
   136f4:	mov	r3, #12
   136f8:	str	r3, [r0]
   136fc:	mov	r0, #0
   13700:	pop	{r4, pc}
   13704:	mov	r0, #1
   13708:	b	10d90 <malloc@plt>
   1370c:	cmp	r0, #0
   13710:	bne	1371c <putchar_unlocked@plt+0x2848>
   13714:	mov	r0, r1
   13718:	b	136e0 <putchar_unlocked@plt+0x280c>
   1371c:	cmp	r1, #0
   13720:	push	{r4, lr}
   13724:	bne	13734 <putchar_unlocked@plt+0x2860>
   13728:	bl	11798 <putchar_unlocked@plt+0x8c4>
   1372c:	mov	r0, #0
   13730:	pop	{r4, pc}
   13734:	blt	13740 <putchar_unlocked@plt+0x286c>
   13738:	pop	{r4, lr}
   1373c:	b	10d18 <realloc@plt>
   13740:	bl	10df0 <__errno_location@plt>
   13744:	mov	r3, #12
   13748:	str	r3, [r0]
   1374c:	b	1372c <putchar_unlocked@plt+0x2858>
   13750:	push	{r4, r5, r6, lr}
   13754:	mov	r4, r0
   13758:	bl	10d60 <__fpending@plt>
   1375c:	mov	r5, r0
   13760:	mov	r0, r4
   13764:	bl	10d6c <ferror_unlocked@plt>
   13768:	mov	r6, r0
   1376c:	mov	r0, r4
   13770:	bl	137c0 <putchar_unlocked@plt+0x28ec>
   13774:	cmp	r6, #0
   13778:	mov	r4, r0
   1377c:	bne	137a8 <putchar_unlocked@plt+0x28d4>
   13780:	cmp	r0, #0
   13784:	beq	137a0 <putchar_unlocked@plt+0x28cc>
   13788:	cmp	r5, #0
   1378c:	bne	137b8 <putchar_unlocked@plt+0x28e4>
   13790:	bl	10df0 <__errno_location@plt>
   13794:	ldr	r4, [r0]
   13798:	subs	r4, r4, #9
   1379c:	mvnne	r4, #0
   137a0:	mov	r0, r4
   137a4:	pop	{r4, r5, r6, pc}
   137a8:	cmp	r0, #0
   137ac:	bne	137b8 <putchar_unlocked@plt+0x28e4>
   137b0:	bl	10df0 <__errno_location@plt>
   137b4:	str	r4, [r0]
   137b8:	mvn	r4, #0
   137bc:	b	137a0 <putchar_unlocked@plt+0x28cc>
   137c0:	push	{r0, r1, r2, r4, r5, lr}
   137c4:	mov	r4, r0
   137c8:	bl	10e38 <fileno@plt>
   137cc:	cmp	r0, #0
   137d0:	mov	r0, r4
   137d4:	bge	137e4 <putchar_unlocked@plt+0x2910>
   137d8:	add	sp, sp, #12
   137dc:	pop	{r4, r5, lr}
   137e0:	b	10e50 <fclose@plt>
   137e4:	bl	10da8 <__freading@plt>
   137e8:	cmp	r0, #0
   137ec:	bne	13828 <putchar_unlocked@plt+0x2954>
   137f0:	mov	r0, r4
   137f4:	bl	13868 <putchar_unlocked@plt+0x2994>
   137f8:	cmp	r0, #0
   137fc:	bne	1385c <putchar_unlocked@plt+0x2988>
   13800:	mov	r5, #0
   13804:	mov	r0, r4
   13808:	bl	10e50 <fclose@plt>
   1380c:	cmp	r5, #0
   13810:	beq	13820 <putchar_unlocked@plt+0x294c>
   13814:	bl	10df0 <__errno_location@plt>
   13818:	str	r5, [r0]
   1381c:	mvn	r0, #0
   13820:	add	sp, sp, #12
   13824:	pop	{r4, r5, pc}
   13828:	mov	r0, r4
   1382c:	bl	10e38 <fileno@plt>
   13830:	mov	r3, #1
   13834:	mov	r2, #0
   13838:	str	r3, [sp]
   1383c:	mov	r3, #0
   13840:	bl	10d48 <lseek64@plt>
   13844:	mvn	r3, #0
   13848:	mvn	r2, #0
   1384c:	cmp	r1, r3
   13850:	cmpeq	r0, r2
   13854:	bne	137f0 <putchar_unlocked@plt+0x291c>
   13858:	b	13800 <putchar_unlocked@plt+0x292c>
   1385c:	bl	10df0 <__errno_location@plt>
   13860:	ldr	r5, [r0]
   13864:	b	13804 <putchar_unlocked@plt+0x2930>
   13868:	push	{r0, r1, r4, lr}
   1386c:	subs	r4, r0, #0
   13870:	bne	13884 <putchar_unlocked@plt+0x29b0>
   13874:	mov	r0, r4
   13878:	add	sp, sp, #8
   1387c:	pop	{r4, lr}
   13880:	b	10cac <fflush@plt>
   13884:	bl	10da8 <__freading@plt>
   13888:	cmp	r0, #0
   1388c:	beq	13874 <putchar_unlocked@plt+0x29a0>
   13890:	ldr	r3, [r4]
   13894:	tst	r3, #256	; 0x100
   13898:	beq	13874 <putchar_unlocked@plt+0x29a0>
   1389c:	mov	r3, #1
   138a0:	mov	r2, #0
   138a4:	mov	r0, r4
   138a8:	str	r3, [sp]
   138ac:	mov	r3, #0
   138b0:	bl	138b8 <putchar_unlocked@plt+0x29e4>
   138b4:	b	13874 <putchar_unlocked@plt+0x29a0>
   138b8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   138bc:	mov	r4, r0
   138c0:	ldmib	r0, {ip, lr}
   138c4:	ldr	r8, [sp, #32]
   138c8:	cmp	lr, ip
   138cc:	bne	1393c <putchar_unlocked@plt+0x2a68>
   138d0:	ldr	ip, [r0, #16]
   138d4:	ldr	lr, [r0, #20]
   138d8:	cmp	lr, ip
   138dc:	bne	1393c <putchar_unlocked@plt+0x2a68>
   138e0:	ldr	r5, [r0, #36]	; 0x24
   138e4:	cmp	r5, #0
   138e8:	bne	1393c <putchar_unlocked@plt+0x2a68>
   138ec:	mov	r6, r2
   138f0:	mov	r7, r3
   138f4:	bl	10e38 <fileno@plt>
   138f8:	mov	r2, r6
   138fc:	mov	r3, r7
   13900:	str	r8, [sp]
   13904:	bl	10d48 <lseek64@plt>
   13908:	mvn	r3, #0
   1390c:	mvn	r2, #0
   13910:	cmp	r1, r3
   13914:	cmpeq	r0, r2
   13918:	mvneq	r0, #0
   1391c:	beq	13934 <putchar_unlocked@plt+0x2a60>
   13920:	ldr	r3, [r4]
   13924:	strd	r0, [r4, #80]	; 0x50
   13928:	mov	r0, r5
   1392c:	bic	r3, r3, #16
   13930:	str	r3, [r4]
   13934:	add	sp, sp, #8
   13938:	pop	{r4, r5, r6, r7, r8, pc}
   1393c:	mov	r0, r4
   13940:	str	r8, [sp, #32]
   13944:	add	sp, sp, #8
   13948:	pop	{r4, r5, r6, r7, r8, lr}
   1394c:	b	10e5c <fseeko64@plt>
   13950:	b	136e0 <putchar_unlocked@plt+0x280c>
   13954:	cmp	r1, #0
   13958:	orreq	r1, r1, #1
   1395c:	b	1370c <putchar_unlocked@plt+0x2838>
   13960:	b	1368c <putchar_unlocked@plt+0x27b8>
   13964:	cmp	r2, #0
   13968:	cmpne	r1, #0
   1396c:	moveq	r2, #1
   13970:	moveq	r1, r2
   13974:	b	13bcc <putchar_unlocked@plt+0x2cf8>
   13978:	push	{r4, lr}
   1397c:	mov	r0, #14
   13980:	bl	10e80 <nl_langinfo@plt>
   13984:	cmp	r0, #0
   13988:	beq	139a0 <putchar_unlocked@plt+0x2acc>
   1398c:	ldrb	r2, [r0]
   13990:	ldr	r3, [pc, #16]	; 139a8 <putchar_unlocked@plt+0x2ad4>
   13994:	cmp	r2, #0
   13998:	moveq	r0, r3
   1399c:	pop	{r4, pc}
   139a0:	ldr	r0, [pc]	; 139a8 <putchar_unlocked@plt+0x2ad4>
   139a4:	pop	{r4, pc}
   139a8:	andeq	r4, r1, ip, lsl r7
   139ac:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   139b0:	subs	r5, r0, #0
   139b4:	mov	r7, r2
   139b8:	addeq	r5, sp, #4
   139bc:	mov	r6, r1
   139c0:	mov	r0, r5
   139c4:	bl	10d78 <mbrtowc@plt>
   139c8:	cmp	r7, #0
   139cc:	cmnne	r0, #3
   139d0:	mov	r4, r0
   139d4:	bls	139f0 <putchar_unlocked@plt+0x2b1c>
   139d8:	mov	r0, #0
   139dc:	bl	13bf8 <putchar_unlocked@plt+0x2d24>
   139e0:	cmp	r0, #0
   139e4:	ldrbeq	r3, [r6]
   139e8:	moveq	r4, #1
   139ec:	streq	r3, [r5]
   139f0:	mov	r0, r4
   139f4:	add	sp, sp, #12
   139f8:	pop	{r4, r5, r6, r7, pc}
   139fc:	lsrs	r3, r1, #30
   13a00:	movne	r3, #1
   13a04:	moveq	r3, #0
   13a08:	lsls	r1, r1, #2
   13a0c:	bmi	13a1c <putchar_unlocked@plt+0x2b48>
   13a10:	cmp	r3, #0
   13a14:	bne	13a1c <putchar_unlocked@plt+0x2b48>
   13a18:	b	1370c <putchar_unlocked@plt+0x2838>
   13a1c:	push	{r4, lr}
   13a20:	bl	10df0 <__errno_location@plt>
   13a24:	mov	r3, #12
   13a28:	str	r3, [r0]
   13a2c:	mov	r0, #0
   13a30:	pop	{r4, pc}
   13a34:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   13a38:	subs	r7, r0, #0
   13a3c:	mov	r5, r1
   13a40:	mov	r6, r2
   13a44:	beq	13ad4 <putchar_unlocked@plt+0x2c00>
   13a48:	mov	r1, #10
   13a4c:	mov	r0, #0
   13a50:	str	r1, [sp, #4]
   13a54:	bl	139fc <putchar_unlocked@plt+0x2b28>
   13a58:	subs	r4, r0, #0
   13a5c:	bne	13a6c <putchar_unlocked@plt+0x2b98>
   13a60:	mvn	r0, #0
   13a64:	add	sp, sp, #12
   13a68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13a6c:	add	r3, sp, #4
   13a70:	mov	r2, r4
   13a74:	ldr	r9, [sp, #4]
   13a78:	mov	r1, r5
   13a7c:	mov	r0, r7
   13a80:	bl	10e14 <getgrouplist@plt>
   13a84:	subs	r8, r0, #0
   13a88:	bge	13a9c <putchar_unlocked@plt+0x2bc8>
   13a8c:	ldr	r3, [sp, #4]
   13a90:	cmp	r3, r9
   13a94:	lsleq	r3, r3, #1
   13a98:	streq	r3, [sp, #4]
   13a9c:	mov	r0, r4
   13aa0:	ldr	r1, [sp, #4]
   13aa4:	bl	139fc <putchar_unlocked@plt+0x2b28>
   13aa8:	cmp	r0, #0
   13aac:	bne	13abc <putchar_unlocked@plt+0x2be8>
   13ab0:	mov	r0, r4
   13ab4:	bl	11798 <putchar_unlocked@plt+0x8c4>
   13ab8:	b	13a60 <putchar_unlocked@plt+0x2b8c>
   13abc:	cmp	r8, #0
   13ac0:	mov	r4, r0
   13ac4:	blt	13a6c <putchar_unlocked@plt+0x2b98>
   13ac8:	str	r4, [r6]
   13acc:	ldr	r0, [sp, #4]
   13ad0:	b	13a64 <putchar_unlocked@plt+0x2b90>
   13ad4:	mov	r1, r7
   13ad8:	bl	10e8c <getgroups@plt>
   13adc:	cmp	r0, #0
   13ae0:	str	r0, [sp, #4]
   13ae4:	bge	13b20 <putchar_unlocked@plt+0x2c4c>
   13ae8:	bl	10df0 <__errno_location@plt>
   13aec:	ldr	r3, [r0]
   13af0:	cmp	r3, #38	; 0x26
   13af4:	bne	13a60 <putchar_unlocked@plt+0x2b8c>
   13af8:	mov	r1, #1
   13afc:	mov	r0, r7
   13b00:	bl	139fc <putchar_unlocked@plt+0x2b28>
   13b04:	cmp	r0, #0
   13b08:	beq	13a60 <putchar_unlocked@plt+0x2b8c>
   13b0c:	str	r0, [r6]
   13b10:	str	r5, [r0]
   13b14:	adds	r0, r5, #1
   13b18:	movne	r0, #1
   13b1c:	b	13a64 <putchar_unlocked@plt+0x2b90>
   13b20:	adds	r7, r5, #1
   13b24:	movne	r7, #1
   13b28:	cmp	r0, #0
   13b2c:	movne	r3, r7
   13b30:	moveq	r3, #1
   13b34:	cmp	r3, #0
   13b38:	addne	r0, r0, #1
   13b3c:	strne	r0, [sp, #4]
   13b40:	mov	r0, #0
   13b44:	ldr	r1, [sp, #4]
   13b48:	bl	139fc <putchar_unlocked@plt+0x2b28>
   13b4c:	subs	r4, r0, #0
   13b50:	beq	13a60 <putchar_unlocked@plt+0x2b8c>
   13b54:	ldr	r0, [sp, #4]
   13b58:	cmn	r5, #1
   13b5c:	movne	r1, #4
   13b60:	moveq	r1, #0
   13b64:	add	r1, r4, r1
   13b68:	sub	r0, r0, r7
   13b6c:	bl	10e8c <getgroups@plt>
   13b70:	cmp	r0, #0
   13b74:	blt	13ab0 <putchar_unlocked@plt+0x2bdc>
   13b78:	cmn	r5, #1
   13b7c:	addne	r0, r0, #1
   13b80:	strne	r5, [r4]
   13b84:	cmp	r0, #1
   13b88:	addgt	r1, r4, r0, lsl #2
   13b8c:	addgt	r3, r4, #4
   13b90:	ldrgt	ip, [r4]
   13b94:	str	r4, [r6]
   13b98:	ble	13a64 <putchar_unlocked@plt+0x2b90>
   13b9c:	cmp	r1, r3
   13ba0:	bls	13a64 <putchar_unlocked@plt+0x2b90>
   13ba4:	ldr	r2, [r3], #4
   13ba8:	cmp	r2, ip
   13bac:	beq	13bc4 <putchar_unlocked@plt+0x2cf0>
   13bb0:	ldr	lr, [r4]
   13bb4:	cmp	r2, lr
   13bb8:	strne	r2, [r4, #4]
   13bbc:	addne	r4, r4, #4
   13bc0:	bne	13b9c <putchar_unlocked@plt+0x2cc8>
   13bc4:	sub	r0, r0, #1
   13bc8:	b	13b9c <putchar_unlocked@plt+0x2cc8>
   13bcc:	umull	r2, r3, r1, r2
   13bd0:	cmp	r3, #0
   13bd4:	bne	13be0 <putchar_unlocked@plt+0x2d0c>
   13bd8:	mov	r1, r2
   13bdc:	b	1370c <putchar_unlocked@plt+0x2838>
   13be0:	push	{r4, lr}
   13be4:	bl	10df0 <__errno_location@plt>
   13be8:	mov	r3, #12
   13bec:	str	r3, [r0]
   13bf0:	mov	r0, #0
   13bf4:	pop	{r4, pc}
   13bf8:	push	{lr}		; (str lr, [sp, #-4]!)
   13bfc:	sub	sp, sp, #268	; 0x10c
   13c00:	movw	r2, #257	; 0x101
   13c04:	add	r1, sp, #4
   13c08:	bl	13c54 <putchar_unlocked@plt+0x2d80>
   13c0c:	cmp	r0, #0
   13c10:	movne	r0, #0
   13c14:	bne	13c44 <putchar_unlocked@plt+0x2d70>
   13c18:	ldr	r1, [pc, #44]	; 13c4c <putchar_unlocked@plt+0x2d78>
   13c1c:	add	r0, sp, #4
   13c20:	bl	10c94 <strcmp@plt>
   13c24:	cmp	r0, #0
   13c28:	beq	13c40 <putchar_unlocked@plt+0x2d6c>
   13c2c:	ldr	r1, [pc, #28]	; 13c50 <putchar_unlocked@plt+0x2d7c>
   13c30:	add	r0, sp, #4
   13c34:	bl	10c94 <strcmp@plt>
   13c38:	adds	r0, r0, #0
   13c3c:	movne	r0, #1
   13c40:	and	r0, r0, #1
   13c44:	add	sp, sp, #268	; 0x10c
   13c48:	pop	{pc}		; (ldr pc, [sp], #4)
   13c4c:	andeq	r4, r1, r2, lsr #14
   13c50:	andeq	r4, r1, r4, lsr #14
   13c54:	push	{r4, r5, r6, lr}
   13c58:	mov	r5, r1
   13c5c:	mov	r1, #0
   13c60:	mov	r4, r2
   13c64:	bl	10e68 <setlocale@plt>
   13c68:	subs	r6, r0, #0
   13c6c:	bne	13c80 <putchar_unlocked@plt+0x2dac>
   13c70:	cmp	r4, #0
   13c74:	mov	r0, #22
   13c78:	strbne	r6, [r5]
   13c7c:	pop	{r4, r5, r6, pc}
   13c80:	bl	10de4 <strlen@plt>
   13c84:	cmp	r4, r0
   13c88:	bls	13ca4 <putchar_unlocked@plt+0x2dd0>
   13c8c:	add	r2, r0, #1
   13c90:	mov	r1, r6
   13c94:	mov	r0, r5
   13c98:	bl	10cdc <memcpy@plt>
   13c9c:	mov	r0, #0
   13ca0:	pop	{r4, r5, r6, pc}
   13ca4:	cmp	r4, #0
   13ca8:	beq	13cc8 <putchar_unlocked@plt+0x2df4>
   13cac:	sub	r4, r4, #1
   13cb0:	mov	r1, r6
   13cb4:	mov	r2, r4
   13cb8:	mov	r0, r5
   13cbc:	bl	10cdc <memcpy@plt>
   13cc0:	mov	r3, #0
   13cc4:	strb	r3, [r5, r4]
   13cc8:	mov	r0, #34	; 0x22
   13ccc:	pop	{r4, r5, r6, pc}
   13cd0:	mov	r1, #0
   13cd4:	b	10e68 <setlocale@plt>
   13cd8:	cmp	r3, #0
   13cdc:	cmpeq	r2, #0
   13ce0:	bne	13cf8 <putchar_unlocked@plt+0x2e24>
   13ce4:	cmp	r1, #0
   13ce8:	cmpeq	r0, #0
   13cec:	mvnne	r1, #0
   13cf0:	mvnne	r0, #0
   13cf4:	b	13d14 <putchar_unlocked@plt+0x2e40>
   13cf8:	sub	sp, sp, #8
   13cfc:	push	{sp, lr}
   13d00:	bl	13d24 <putchar_unlocked@plt+0x2e50>
   13d04:	ldr	lr, [sp, #4]
   13d08:	add	sp, sp, #8
   13d0c:	pop	{r2, r3}
   13d10:	bx	lr
   13d14:	push	{r1, lr}
   13d18:	mov	r0, #8
   13d1c:	bl	10c7c <raise@plt>
   13d20:	pop	{r1, pc}
   13d24:	cmp	r1, r3
   13d28:	cmpeq	r0, r2
   13d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d30:	mov	r4, r0
   13d34:	movcc	r0, #0
   13d38:	mov	r5, r1
   13d3c:	ldr	lr, [sp, #36]	; 0x24
   13d40:	movcc	r1, r0
   13d44:	bcc	13e40 <putchar_unlocked@plt+0x2f6c>
   13d48:	cmp	r3, #0
   13d4c:	clzeq	ip, r2
   13d50:	clzne	ip, r3
   13d54:	addeq	ip, ip, #32
   13d58:	cmp	r5, #0
   13d5c:	clzeq	r1, r4
   13d60:	addeq	r1, r1, #32
   13d64:	clzne	r1, r5
   13d68:	sub	ip, ip, r1
   13d6c:	sub	sl, ip, #32
   13d70:	lsl	r9, r3, ip
   13d74:	rsb	fp, ip, #32
   13d78:	orr	r9, r9, r2, lsl sl
   13d7c:	orr	r9, r9, r2, lsr fp
   13d80:	lsl	r8, r2, ip
   13d84:	cmp	r5, r9
   13d88:	cmpeq	r4, r8
   13d8c:	movcc	r0, #0
   13d90:	movcc	r1, r0
   13d94:	bcc	13db0 <putchar_unlocked@plt+0x2edc>
   13d98:	mov	r0, #1
   13d9c:	subs	r4, r4, r8
   13da0:	lsl	r1, r0, sl
   13da4:	orr	r1, r1, r0, lsr fp
   13da8:	lsl	r0, r0, ip
   13dac:	sbc	r5, r5, r9
   13db0:	cmp	ip, #0
   13db4:	beq	13e40 <putchar_unlocked@plt+0x2f6c>
   13db8:	lsr	r6, r8, #1
   13dbc:	orr	r6, r6, r9, lsl #31
   13dc0:	lsr	r7, r9, #1
   13dc4:	mov	r2, ip
   13dc8:	b	13dec <putchar_unlocked@plt+0x2f18>
   13dcc:	subs	r3, r4, r6
   13dd0:	sbc	r8, r5, r7
   13dd4:	adds	r3, r3, r3
   13dd8:	adc	r8, r8, r8
   13ddc:	adds	r4, r3, #1
   13de0:	adc	r5, r8, #0
   13de4:	subs	r2, r2, #1
   13de8:	beq	13e08 <putchar_unlocked@plt+0x2f34>
   13dec:	cmp	r5, r7
   13df0:	cmpeq	r4, r6
   13df4:	bcs	13dcc <putchar_unlocked@plt+0x2ef8>
   13df8:	adds	r4, r4, r4
   13dfc:	adc	r5, r5, r5
   13e00:	subs	r2, r2, #1
   13e04:	bne	13dec <putchar_unlocked@plt+0x2f18>
   13e08:	lsr	r3, r4, ip
   13e0c:	orr	r3, r3, r5, lsl fp
   13e10:	lsr	r2, r5, ip
   13e14:	orr	r3, r3, r5, lsr sl
   13e18:	adds	r0, r0, r4
   13e1c:	mov	r4, r3
   13e20:	lsl	r3, r2, ip
   13e24:	orr	r3, r3, r4, lsl sl
   13e28:	lsl	ip, r4, ip
   13e2c:	orr	r3, r3, r4, lsr fp
   13e30:	adc	r1, r1, r5
   13e34:	subs	r0, r0, ip
   13e38:	mov	r5, r2
   13e3c:	sbc	r1, r1, r3
   13e40:	cmp	lr, #0
   13e44:	strdne	r4, [lr]
   13e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13e50:	mov	r7, r0
   13e54:	ldr	r6, [pc, #72]	; 13ea4 <putchar_unlocked@plt+0x2fd0>
   13e58:	ldr	r5, [pc, #72]	; 13ea8 <putchar_unlocked@plt+0x2fd4>
   13e5c:	add	r6, pc, r6
   13e60:	add	r5, pc, r5
   13e64:	sub	r6, r6, r5
   13e68:	mov	r8, r1
   13e6c:	mov	r9, r2
   13e70:	bl	10c44 <calloc@plt-0x20>
   13e74:	asrs	r6, r6, #2
   13e78:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e7c:	mov	r4, #0
   13e80:	add	r4, r4, #1
   13e84:	ldr	r3, [r5], #4
   13e88:	mov	r2, r9
   13e8c:	mov	r1, r8
   13e90:	mov	r0, r7
   13e94:	blx	r3
   13e98:	cmp	r6, r4
   13e9c:	bne	13e80 <putchar_unlocked@plt+0x2fac>
   13ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ea4:	strheq	r1, [r1], -r0
   13ea8:	andeq	r1, r1, r8, lsr #1
   13eac:	bx	lr
   13eb0:	ldr	r3, [pc, #12]	; 13ec4 <putchar_unlocked@plt+0x2ff0>
   13eb4:	mov	r1, #0
   13eb8:	add	r3, pc, r3
   13ebc:	ldr	r2, [r3]
   13ec0:	b	10dfc <__cxa_atexit@plt>
   13ec4:	andeq	r1, r1, r8, lsr #4

Disassembly of section .fini:

00013ec8 <.fini>:
   13ec8:	push	{r3, lr}
   13ecc:	pop	{r3, pc}
