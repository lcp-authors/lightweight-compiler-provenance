
../repos/coreutils/src/cat:     file format elf32-littlearm


Disassembly of section .init:

00010ce8 <.init>:
   10ce8:	push	{r3, lr}
   10cec:	bl	11c74 <close@plt+0xcd8>
   10cf0:	pop	{r3, pc}

Disassembly of section .plt:

00010cf4 <calloc@plt-0x14>:
   10cf4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cf8:	ldr	lr, [pc, #4]	; 10d04 <calloc@plt-0x4>
   10cfc:	add	lr, pc, lr
   10d00:	ldr	pc, [lr, #8]!
   10d04:	strdeq	r5, [r1], -ip

00010d08 <calloc@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #764]!	; 0x2fc

00010d14 <fputs_unlocked@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d20 <raise@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #748]!	; 0x2ec

00010d2c <strcmp@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #740]!	; 0x2e4

00010d38 <posix_fadvise64@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #732]!	; 0x2dc

00010d44 <read@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d50 <fflush@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #716]!	; 0x2cc

00010d5c <memmove@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #708]!	; 0x2c4

00010d68 <free@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #700]!	; 0x2bc

00010d74 <_exit@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #692]!	; 0x2b4

00010d80 <memcpy@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #684]!	; 0x2ac

00010d8c <mbsinit@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #676]!	; 0x2a4

00010d98 <memcmp@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #668]!	; 0x29c

00010da4 <stpcpy@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #660]!	; 0x294

00010db0 <fputc_unlocked@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #652]!	; 0x28c

00010dbc <dcgettext@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #644]!	; 0x284

00010dc8 <realloc@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #636]!	; 0x27c

00010dd4 <textdomain@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #628]!	; 0x274

00010de0 <iswprint@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #620]!	; 0x26c

00010dec <__fxstat64@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #612]!	; 0x264

00010df8 <copy_file_range@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #604]!	; 0x25c

00010e04 <ioctl@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #596]!	; 0x254

00010e10 <lseek64@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #588]!	; 0x24c

00010e1c <__ctype_get_mb_cur_max@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #580]!	; 0x244

00010e28 <__fpending@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #572]!	; 0x23c

00010e34 <ferror_unlocked@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #564]!	; 0x234

00010e40 <mbrtowc@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #556]!	; 0x22c

00010e4c <error@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #548]!	; 0x224

00010e58 <open64@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #540]!	; 0x21c

00010e64 <malloc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #532]!	; 0x214

00010e70 <__libc_start_main@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #524]!	; 0x20c

00010e7c <__freading@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #516]!	; 0x204

00010e88 <__gmon_start__@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #508]!	; 0x1fc

00010e94 <getopt_long@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #500]!	; 0x1f4

00010ea0 <__ctype_b_loc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #492]!	; 0x1ec

00010eac <exit@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #484]!	; 0x1e4

00010eb8 <strlen@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #476]!	; 0x1dc

00010ec4 <getpagesize@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #468]!	; 0x1d4

00010ed0 <__errno_location@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #460]!	; 0x1cc

00010edc <__cxa_atexit@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #452]!	; 0x1c4

00010ee8 <memset@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #444]!	; 0x1bc

00010ef4 <__printf_chk@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #436]!	; 0x1b4

00010f00 <write@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #428]!	; 0x1ac

00010f0c <fileno@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #420]!	; 0x1a4

00010f18 <__fprintf_chk@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #412]!	; 0x19c

00010f24 <fclose@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #404]!	; 0x194

00010f30 <fseeko64@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #396]!	; 0x18c

00010f3c <setlocale@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #388]!	; 0x184

00010f48 <strrchr@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #380]!	; 0x17c

00010f54 <nl_langinfo@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #372]!	; 0x174

00010f60 <bindtextdomain@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #364]!	; 0x16c

00010f6c <aligned_alloc@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #356]!	; 0x164

00010f78 <fputs@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #348]!	; 0x15c

00010f84 <strncmp@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #340]!	; 0x154

00010f90 <abort@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #332]!	; 0x14c

00010f9c <close@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #324]!	; 0x144

Disassembly of section .text:

00010fa8 <.text>:
   10fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fac:	sub	sp, sp, #228	; 0xe4
   10fb0:	mov	r8, #0
   10fb4:	str	r0, [sp, #64]	; 0x40
   10fb8:	ldr	r0, [r1]
   10fbc:	str	r1, [sp, #68]	; 0x44
   10fc0:	bl	122c8 <close@plt+0x132c>
   10fc4:	ldr	r1, [pc, #3072]	; 11bcc <close@plt+0xc30>
   10fc8:	mov	r0, #6
   10fcc:	bl	10f3c <setlocale@plt>
   10fd0:	ldr	r1, [pc, #3064]	; 11bd0 <close@plt+0xc34>
   10fd4:	ldr	r0, [pc, #3064]	; 11bd4 <close@plt+0xc38>
   10fd8:	bl	10f60 <bindtextdomain@plt>
   10fdc:	mov	r5, r8
   10fe0:	ldr	r0, [pc, #3052]	; 11bd4 <close@plt+0xc38>
   10fe4:	mov	r7, r8
   10fe8:	mov	r6, #1
   10fec:	bl	10dd4 <textdomain@plt>
   10ff0:	ldr	r0, [pc, #3040]	; 11bd8 <close@plt+0xc3c>
   10ff4:	bl	14d20 <close@plt+0x3d84>
   10ff8:	str	r8, [sp, #28]
   10ffc:	str	r8, [sp, #36]	; 0x24
   11000:	str	r8, [sp, #52]	; 0x34
   11004:	str	r8, [sp, #40]	; 0x28
   11008:	str	r7, [sp]
   1100c:	ldr	r3, [pc, #3016]	; 11bdc <close@plt+0xc40>
   11010:	ldr	r2, [pc, #3016]	; 11be0 <close@plt+0xc44>
   11014:	ldr	r1, [sp, #68]	; 0x44
   11018:	ldr	r0, [sp, #64]	; 0x40
   1101c:	bl	10e94 <getopt_long@plt>
   11020:	cmn	r0, #1
   11024:	mov	r4, r0
   11028:	bne	11068 <close@plt+0xcc>
   1102c:	add	r1, sp, #120	; 0x78
   11030:	mov	r0, #1
   11034:	bl	14d38 <close@plt+0x3d9c>
   11038:	cmp	r0, #0
   1103c:	bge	11154 <close@plt+0x1b8>
   11040:	bl	10ed0 <__errno_location@plt>
   11044:	ldr	r1, [pc, #2968]	; 11be4 <close@plt+0xc48>
   11048:	mov	r2, #5
   1104c:	ldr	r4, [r0]
   11050:	mov	r0, #0
   11054:	bl	10dbc <dcgettext@plt>
   11058:	mov	r1, r4
   1105c:	mov	r2, r0
   11060:	mov	r0, #1
   11064:	bl	10e4c <error@plt>
   11068:	cmp	r4, #98	; 0x62
   1106c:	beq	1114c <close@plt+0x1b0>
   11070:	bgt	110b4 <close@plt+0x118>
   11074:	cmp	r4, #65	; 0x41
   11078:	beq	11104 <close@plt+0x168>
   1107c:	bgt	1109c <close@plt+0x100>
   11080:	cmn	r4, #3
   11084:	beq	11114 <close@plt+0x178>
   11088:	cmn	r4, #2
   1108c:	moveq	r0, #0
   11090:	beq	11098 <close@plt+0xfc>
   11094:	mov	r0, #1
   11098:	bl	11e34 <close@plt+0xe98>
   1109c:	cmp	r4, #69	; 0x45
   110a0:	beq	1110c <close@plt+0x170>
   110a4:	cmp	r4, #84	; 0x54
   110a8:	bne	11094 <close@plt+0xf8>
   110ac:	mov	r8, r6
   110b0:	b	11008 <close@plt+0x6c>
   110b4:	cmp	r4, #115	; 0x73
   110b8:	beq	110f4 <close@plt+0x158>
   110bc:	bgt	110d8 <close@plt+0x13c>
   110c0:	cmp	r4, #101	; 0x65
   110c4:	beq	11108 <close@plt+0x16c>
   110c8:	cmp	r4, #110	; 0x6e
   110cc:	bne	11094 <close@plt+0xf8>
   110d0:	str	r6, [sp, #40]	; 0x28
   110d4:	b	11008 <close@plt+0x6c>
   110d8:	cmp	r4, #117	; 0x75
   110dc:	beq	11008 <close@plt+0x6c>
   110e0:	blt	110fc <close@plt+0x160>
   110e4:	cmp	r4, #118	; 0x76
   110e8:	bne	11094 <close@plt+0xf8>
   110ec:	str	r6, [sp, #28]
   110f0:	b	11008 <close@plt+0x6c>
   110f4:	str	r6, [sp, #52]	; 0x34
   110f8:	b	11008 <close@plt+0x6c>
   110fc:	mov	r8, r6
   11100:	b	110ec <close@plt+0x150>
   11104:	mov	r8, r6
   11108:	str	r6, [sp, #28]
   1110c:	str	r6, [sp, #36]	; 0x24
   11110:	b	11008 <close@plt+0x6c>
   11114:	ldr	r3, [pc, #2764]	; 11be8 <close@plt+0xc4c>
   11118:	ldr	r0, [pc, #2764]	; 11bec <close@plt+0xc50>
   1111c:	str	r3, [sp, #4]
   11120:	ldr	r3, [pc, #2760]	; 11bf0 <close@plt+0xc54>
   11124:	str	r7, [sp, #8]
   11128:	str	r3, [sp]
   1112c:	ldr	r3, [pc, #2752]	; 11bf4 <close@plt+0xc58>
   11130:	ldr	r0, [r0]
   11134:	ldr	r2, [pc, #2748]	; 11bf8 <close@plt+0xc5c>
   11138:	ldr	r3, [r3]
   1113c:	ldr	r1, [pc, #2744]	; 11bfc <close@plt+0xc60>
   11140:	bl	13e20 <close@plt+0x2e84>
   11144:	mov	r0, #0
   11148:	bl	10eac <exit@plt>
   1114c:	mov	r5, r6
   11150:	b	110d0 <close@plt+0x134>
   11154:	ldr	r3, [sp, #176]	; 0xb0
   11158:	ldr	r2, [pc, #2720]	; 11c00 <close@plt+0xc64>
   1115c:	sub	r1, r3, #131072	; 0x20000
   11160:	cmp	r1, r2
   11164:	movhi	r3, #131072	; 0x20000
   11168:	str	r3, [sp, #24]
   1116c:	ldrd	r2, [sp, #120]	; 0x78
   11170:	eor	r5, r5, #1
   11174:	strd	r2, [sp, #88]	; 0x58
   11178:	ldrd	r2, [sp, #216]	; 0xd8
   1117c:	strd	r2, [sp, #96]	; 0x60
   11180:	ldr	r3, [sp, #136]	; 0x88
   11184:	ldr	r2, [sp, #36]	; 0x24
   11188:	and	r3, r3, #61440	; 0xf000
   1118c:	str	r3, [sp, #76]	; 0x4c
   11190:	ldr	r3, [sp, #40]	; 0x28
   11194:	orr	r3, r3, r2
   11198:	str	r3, [sp, #56]	; 0x38
   1119c:	ldr	r3, [pc, #2656]	; 11c04 <close@plt+0xc68>
   111a0:	ldr	r2, [pc, #2656]	; 11c08 <close@plt+0xc6c>
   111a4:	str	r2, [r3]
   111a8:	ldr	r3, [pc, #2652]	; 11c0c <close@plt+0xc70>
   111ac:	ldr	r3, [r3]
   111b0:	str	r3, [sp, #44]	; 0x2c
   111b4:	bl	10ec4 <getpagesize@plt>
   111b8:	mov	r3, #1
   111bc:	str	r3, [sp, #20]
   111c0:	mov	r3, #0
   111c4:	str	r3, [sp, #72]	; 0x48
   111c8:	ldr	r3, [sp, #40]	; 0x28
   111cc:	and	r3, r3, r5
   111d0:	str	r3, [sp, #104]	; 0x68
   111d4:	str	r0, [sp, #48]	; 0x30
   111d8:	ldr	r3, [sp, #44]	; 0x2c
   111dc:	ldr	r2, [sp, #64]	; 0x40
   111e0:	ldr	r6, [pc, #2588]	; 11c04 <close@plt+0xc68>
   111e4:	cmp	r3, r2
   111e8:	ldr	r1, [pc, #2584]	; 11c08 <close@plt+0xc6c>
   111ec:	ldrlt	r3, [sp, #68]	; 0x44
   111f0:	ldrlt	r2, [sp, #44]	; 0x2c
   111f4:	ldrlt	r3, [r3, r2, lsl #2]
   111f8:	strlt	r3, [r6]
   111fc:	ldr	r5, [r6]
   11200:	mov	r0, r5
   11204:	bl	10d2c <strcmp@plt>
   11208:	subs	r3, r0, #0
   1120c:	str	r3, [sp, #80]	; 0x50
   11210:	streq	r3, [r6, #4]
   11214:	moveq	r3, #1
   11218:	streq	r3, [sp, #72]	; 0x48
   1121c:	beq	112e0 <close@plt+0x344>
   11220:	mov	r1, #0
   11224:	mov	r0, r5
   11228:	bl	10e58 <open64@plt>
   1122c:	cmp	r0, #0
   11230:	str	r0, [r6, #4]
   11234:	bge	112e0 <close@plt+0x344>
   11238:	bl	10ed0 <__errno_location@plt>
   1123c:	ldr	r2, [r6]
   11240:	mov	r1, #3
   11244:	ldr	r5, [r0]
   11248:	mov	r0, #0
   1124c:	bl	137b8 <close@plt+0x281c>
   11250:	ldr	r2, [pc, #2488]	; 11c10 <close@plt+0xc74>
   11254:	mov	r1, r5
   11258:	mov	r3, r0
   1125c:	mov	r0, #0
   11260:	bl	10e4c <error@plt>
   11264:	mov	r3, #0
   11268:	str	r3, [sp, #20]
   1126c:	ldr	r3, [sp, #44]	; 0x2c
   11270:	add	r3, r3, #1
   11274:	str	r3, [sp, #44]	; 0x2c
   11278:	ldr	r2, [sp, #44]	; 0x2c
   1127c:	ldr	r3, [sp, #64]	; 0x40
   11280:	cmp	r3, r2
   11284:	bgt	111d8 <close@plt+0x23c>
   11288:	ldr	r3, [pc, #2420]	; 11c04 <close@plt+0xc68>
   1128c:	ldrb	r3, [r3, #12]
   11290:	cmp	r3, #0
   11294:	beq	112b0 <close@plt+0x314>
   11298:	mov	r2, #1
   1129c:	ldr	r1, [pc, #2416]	; 11c14 <close@plt+0xc78>
   112a0:	mov	r0, r2
   112a4:	bl	12268 <close@plt+0x12cc>
   112a8:	cmp	r0, #1
   112ac:	bne	115f0 <close@plt+0x654>
   112b0:	ldr	r3, [sp, #72]	; 0x48
   112b4:	cmp	r3, #0
   112b8:	beq	11bbc <close@plt+0xc20>
   112bc:	mov	r0, #0
   112c0:	bl	10f9c <close@plt>
   112c4:	cmp	r0, #0
   112c8:	bge	11bbc <close@plt+0xc20>
   112cc:	bl	10ed0 <__errno_location@plt>
   112d0:	mov	r2, #5
   112d4:	ldr	r1, [pc, #2364]	; 11c18 <close@plt+0xc7c>
   112d8:	ldr	r4, [r0]
   112dc:	b	11050 <close@plt+0xb4>
   112e0:	ldr	r5, [pc, #2332]	; 11c04 <close@plt+0xc68>
   112e4:	add	r1, sp, #120	; 0x78
   112e8:	ldr	r9, [r5, #4]
   112ec:	mov	r0, r9
   112f0:	bl	14d38 <close@plt+0x3d9c>
   112f4:	cmp	r0, #0
   112f8:	bge	11378 <close@plt+0x3dc>
   112fc:	bl	10ed0 <__errno_location@plt>
   11300:	ldr	r2, [r5]
   11304:	mov	r1, #3
   11308:	ldr	r6, [r0]
   1130c:	mov	r0, #0
   11310:	bl	137b8 <close@plt+0x281c>
   11314:	ldr	r2, [pc, #2292]	; 11c10 <close@plt+0xc74>
   11318:	mov	r1, r6
   1131c:	mov	r3, r0
   11320:	mov	r0, #0
   11324:	bl	10e4c <error@plt>
   11328:	mov	r3, #0
   1132c:	str	r3, [sp, #20]
   11330:	ldr	r3, [sp, #80]	; 0x50
   11334:	cmp	r3, #0
   11338:	beq	1126c <close@plt+0x2d0>
   1133c:	ldr	r5, [pc, #2240]	; 11c04 <close@plt+0xc68>
   11340:	ldr	r0, [r5, #4]
   11344:	bl	10f9c <close@plt>
   11348:	cmp	r0, #0
   1134c:	bge	1126c <close@plt+0x2d0>
   11350:	bl	10ed0 <__errno_location@plt>
   11354:	ldr	r2, [r5]
   11358:	mov	r1, #3
   1135c:	ldr	r6, [r0]
   11360:	mov	r0, #0
   11364:	bl	137b8 <close@plt+0x281c>
   11368:	ldr	r2, [pc, #2208]	; 11c10 <close@plt+0xc74>
   1136c:	mov	r1, r6
   11370:	mov	r3, r0
   11374:	b	1125c <close@plt+0x2c0>
   11378:	ldr	r3, [sp, #176]	; 0xb0
   1137c:	ldr	r2, [pc, #2172]	; 11c00 <close@plt+0xc64>
   11380:	sub	r1, r3, #131072	; 0x20000
   11384:	cmp	r1, r2
   11388:	movhi	r3, #131072	; 0x20000
   1138c:	mov	r6, #0
   11390:	mov	r7, #0
   11394:	str	r3, [sp, #32]
   11398:	mov	r3, #2
   1139c:	str	r3, [sp, #8]
   113a0:	strd	r6, [sp]
   113a4:	mov	r3, r7
   113a8:	mov	r2, r6
   113ac:	mov	r0, r9
   113b0:	bl	121d8 <close@plt+0x123c>
   113b4:	ldr	r3, [sp, #76]	; 0x4c
   113b8:	cmp	r3, #32768	; 0x8000
   113bc:	bne	119ec <close@plt+0xa50>
   113c0:	ldrd	r2, [sp, #120]	; 0x78
   113c4:	ldrd	r0, [sp, #88]	; 0x58
   113c8:	cmp	r1, r3
   113cc:	cmpeq	r0, r2
   113d0:	bne	119ec <close@plt+0xa50>
   113d4:	ldrd	r2, [sp, #216]	; 0xd8
   113d8:	ldrd	r0, [sp, #96]	; 0x60
   113dc:	cmp	r1, r3
   113e0:	cmpeq	r0, r2
   113e4:	bne	119ec <close@plt+0xa50>
   113e8:	mov	r3, #1
   113ec:	str	r3, [sp]
   113f0:	mov	r2, r6
   113f4:	mov	r3, r7
   113f8:	ldr	r0, [r5, #4]
   113fc:	bl	10e10 <lseek64@plt>
   11400:	ldrd	r2, [sp, #168]	; 0xa8
   11404:	cmp	r0, r2
   11408:	sbcs	r3, r1, r3
   1140c:	bge	119ec <close@plt+0xa50>
   11410:	mov	r2, #5
   11414:	ldr	r1, [pc, #2048]	; 11c1c <close@plt+0xc80>
   11418:	mov	r0, #0
   1141c:	bl	10dbc <dcgettext@plt>
   11420:	ldr	r2, [r5]
   11424:	mov	r1, #3
   11428:	mov	r6, r0
   1142c:	mov	r0, #0
   11430:	bl	137b8 <close@plt+0x281c>
   11434:	mov	r2, r6
   11438:	mov	r1, #0
   1143c:	mov	r3, r0
   11440:	b	11320 <close@plt+0x384>
   11444:	ldr	r3, [sp, #28]
   11448:	orr	r5, r3, r8
   1144c:	ldr	r3, [sp, #52]	; 0x34
   11450:	orrs	r5, r3, r5
   11454:	bne	119f8 <close@plt+0xa5c>
   11458:	ldr	r3, [sp, #76]	; 0x4c
   1145c:	cmp	r3, #32768	; 0x8000
   11460:	bne	114c0 <close@plt+0x524>
   11464:	ldr	r3, [sp, #136]	; 0x88
   11468:	and	r3, r3, #61440	; 0xf000
   1146c:	cmp	r3, #32768	; 0x8000
   11470:	bne	114c0 <close@plt+0x524>
   11474:	ldr	r7, [sp, #56]	; 0x38
   11478:	ldr	r9, [pc, #1924]	; 11c04 <close@plt+0xc68>
   1147c:	mov	sl, r7
   11480:	mov	fp, #1073741824	; 0x40000000
   11484:	mov	r3, #0
   11488:	str	sl, [sp, #4]
   1148c:	str	fp, [sp]
   11490:	mov	r2, #1
   11494:	mov	r1, r3
   11498:	ldr	r0, [r9, #4]
   1149c:	bl	10df8 <copy_file_range@plt>
   114a0:	cmn	r0, #1
   114a4:	mov	r6, r0
   114a8:	beq	1154c <close@plt+0x5b0>
   114ac:	cmp	r0, #0
   114b0:	bne	11544 <close@plt+0x5a8>
   114b4:	cmp	r7, #0
   114b8:	movne	r6, #1
   114bc:	bne	115ac <close@plt+0x610>
   114c0:	ldr	r3, [sp, #24]
   114c4:	ldr	r2, [sp, #32]
   114c8:	ldr	r0, [sp, #48]	; 0x30
   114cc:	cmp	r3, r2
   114d0:	movge	r6, r3
   114d4:	movlt	r6, r2
   114d8:	mov	r1, r6
   114dc:	bl	13ee8 <close@plt+0x2f4c>
   114e0:	ldr	r9, [pc, #1820]	; 11c04 <close@plt+0xc68>
   114e4:	mov	sl, #1
   114e8:	mov	r7, r0
   114ec:	mov	r2, r6
   114f0:	mov	r1, r7
   114f4:	ldr	r0, [r9, #4]
   114f8:	bl	13904 <close@plt+0x2968>
   114fc:	cmn	r0, #1
   11500:	mov	fp, r0
   11504:	bne	115d0 <close@plt+0x634>
   11508:	bl	10ed0 <__errno_location@plt>
   1150c:	ldr	r2, [r9]
   11510:	mov	r1, #3
   11514:	ldr	r6, [r0]
   11518:	mov	r0, #0
   1151c:	bl	137b8 <close@plt+0x281c>
   11520:	ldr	r2, [pc, #1768]	; 11c10 <close@plt+0xc74>
   11524:	mov	r1, r6
   11528:	mov	r3, r0
   1152c:	mov	r0, #0
   11530:	bl	10e4c <error@plt>
   11534:	ldr	r3, [sp, #20]
   11538:	and	r3, r3, r5
   1153c:	str	r3, [sp, #20]
   11540:	b	115c4 <close@plt+0x628>
   11544:	mov	r7, #1
   11548:	b	11484 <close@plt+0x4e8>
   1154c:	bl	10ed0 <__errno_location@plt>
   11550:	ldr	r9, [r0]
   11554:	cmp	r9, #38	; 0x26
   11558:	cmpne	r9, #95	; 0x5f
   1155c:	moveq	r7, #1
   11560:	movne	r7, #0
   11564:	cmp	r9, #26
   11568:	movhi	r3, #1
   1156c:	ldrls	r3, [pc, #1708]	; 11c20 <close@plt+0xc84>
   11570:	mvnls	r3, r3, lsr r9
   11574:	and	r3, r3, #1
   11578:	eor	r3, r3, #1
   1157c:	orrs	r7, r7, r3
   11580:	bne	114c0 <close@plt+0x524>
   11584:	ldr	r3, [pc, #1656]	; 11c04 <close@plt+0xc68>
   11588:	mov	r1, #3
   1158c:	mov	r0, r7
   11590:	ldr	r2, [r3]
   11594:	bl	137b8 <close@plt+0x281c>
   11598:	ldr	r2, [pc, #1648]	; 11c10 <close@plt+0xc74>
   1159c:	mov	r1, r9
   115a0:	mov	r3, r0
   115a4:	mov	r0, r7
   115a8:	bl	10e4c <error@plt>
   115ac:	ldr	r3, [sp, #20]
   115b0:	mov	r7, #0
   115b4:	cmp	r6, #0
   115b8:	movle	r3, #0
   115bc:	andgt	r3, r3, #1
   115c0:	str	r3, [sp, #20]
   115c4:	mov	r0, r7
   115c8:	bl	12214 <close@plt+0x1278>
   115cc:	b	11330 <close@plt+0x394>
   115d0:	cmp	r0, #0
   115d4:	beq	11604 <close@plt+0x668>
   115d8:	mov	r2, r0
   115dc:	mov	r1, r7
   115e0:	mov	r0, sl
   115e4:	bl	12268 <close@plt+0x12cc>
   115e8:	cmp	fp, r0
   115ec:	beq	114ec <close@plt+0x550>
   115f0:	bl	10ed0 <__errno_location@plt>
   115f4:	mov	r2, #5
   115f8:	ldr	r1, [pc, #1572]	; 11c24 <close@plt+0xc88>
   115fc:	ldr	r4, [r0]
   11600:	b	11050 <close@plt+0xb4>
   11604:	mov	r5, #1
   11608:	b	11534 <close@plt+0x598>
   1160c:	mov	r3, #0
   11610:	str	r3, [sp, #84]	; 0x54
   11614:	ldr	r3, [sp, #116]	; 0x74
   11618:	cmp	r3, #0
   1161c:	beq	11a1c <close@plt+0xa80>
   11620:	ldr	r5, [pc, #1500]	; 11c04 <close@plt+0xc68>
   11624:	ldr	r2, [sp, #32]
   11628:	mov	r1, r7
   1162c:	ldr	r0, [r5, #4]
   11630:	bl	13904 <close@plt+0x2968>
   11634:	cmn	r0, #1
   11638:	bne	11680 <close@plt+0x6e4>
   1163c:	bl	10ed0 <__errno_location@plt>
   11640:	ldr	r2, [r5]
   11644:	mov	r1, #3
   11648:	ldr	sl, [r0]
   1164c:	mov	r0, #0
   11650:	bl	137b8 <close@plt+0x281c>
   11654:	ldr	r2, [pc, #1460]	; 11c10 <close@plt+0xc74>
   11658:	mov	r1, sl
   1165c:	mov	r3, r0
   11660:	mov	r0, #0
   11664:	bl	10e4c <error@plt>
   11668:	add	r1, sp, #112	; 0x70
   1166c:	mov	r0, r9
   11670:	bl	11dcc <close@plt+0xe30>
   11674:	str	r6, [r5, #8]
   11678:	mov	r5, #0
   1167c:	b	11ba4 <close@plt+0xc08>
   11680:	cmp	r0, #0
   11684:	bne	116a0 <close@plt+0x704>
   11688:	add	r1, sp, #112	; 0x70
   1168c:	mov	r0, r9
   11690:	bl	11dcc <close@plt+0xe30>
   11694:	str	r6, [r5, #8]
   11698:	mov	r5, #1
   1169c:	b	11ba4 <close@plt+0xc08>
   116a0:	add	r3, r7, r0
   116a4:	mov	r5, r7
   116a8:	str	r3, [sp, #60]	; 0x3c
   116ac:	mov	r3, #10
   116b0:	strb	r3, [r7, r0]
   116b4:	add	sl, r5, #1
   116b8:	ldrb	r5, [r5]
   116bc:	cmp	r5, #10
   116c0:	beq	11974 <close@plt+0x9d8>
   116c4:	ldr	r3, [pc, #1336]	; 11c04 <close@plt+0xc68>
   116c8:	ldrb	r2, [r3, #12]
   116cc:	cmp	r2, #0
   116d0:	beq	116f0 <close@plt+0x754>
   116d4:	ldr	r2, [sp, #112]	; 0x70
   116d8:	add	r1, r2, #1
   116dc:	str	r1, [sp, #112]	; 0x70
   116e0:	mov	r1, #13
   116e4:	strb	r1, [r2]
   116e8:	mov	r2, #0
   116ec:	strb	r2, [r3, #12]
   116f0:	ldr	r3, [sp, #40]	; 0x28
   116f4:	cmp	r6, #0
   116f8:	movlt	r3, #0
   116fc:	andge	r3, r3, #1
   11700:	cmp	r3, #0
   11704:	beq	11720 <close@plt+0x784>
   11708:	bl	11d60 <close@plt+0xdc4>
   1170c:	ldr	r3, [pc, #1300]	; 11c28 <close@plt+0xc8c>
   11710:	ldr	r0, [sp, #112]	; 0x70
   11714:	ldr	r1, [r3, #24]
   11718:	bl	10da4 <stpcpy@plt>
   1171c:	str	r0, [sp, #112]	; 0x70
   11720:	ldr	r3, [sp, #28]
   11724:	cmp	r3, #0
   11728:	beq	11858 <close@plt+0x8bc>
   1172c:	eor	r0, r8, #1
   11730:	mov	r2, #94	; 0x5e
   11734:	mov	ip, #9
   11738:	mov	lr, #77	; 0x4d
   1173c:	mov	r6, #45	; 0x2d
   11740:	mov	r1, #63	; 0x3f
   11744:	cmp	r5, #31
   11748:	bls	11910 <close@plt+0x974>
   1174c:	ldr	r3, [sp, #112]	; 0x70
   11750:	cmp	r5, #126	; 0x7e
   11754:	addls	fp, r3, #1
   11758:	strls	fp, [sp, #112]	; 0x70
   1175c:	bls	118e8 <close@plt+0x94c>
   11760:	cmp	r5, #127	; 0x7f
   11764:	bne	118ac <close@plt+0x910>
   11768:	add	r5, r3, #1
   1176c:	str	r5, [sp, #112]	; 0x70
   11770:	strb	r2, [r3]
   11774:	ldr	r3, [sp, #112]	; 0x70
   11778:	add	r5, r3, #1
   1177c:	str	r5, [sp, #112]	; 0x70
   11780:	strb	r1, [r3]
   11784:	ldrb	r5, [sl], #1
   11788:	b	11744 <close@plt+0x7a8>
   1178c:	add	r6, r6, #1
   11790:	cmp	r6, #0
   11794:	ble	117e0 <close@plt+0x844>
   11798:	cmp	r6, #1
   1179c:	beq	117bc <close@plt+0x820>
   117a0:	ldr	r3, [sp, #52]	; 0x34
   117a4:	cmp	r3, #0
   117a8:	addne	sl, r5, #1
   117ac:	movne	r6, #2
   117b0:	ldrbne	r5, [r5]
   117b4:	bne	116bc <close@plt+0x720>
   117b8:	mov	r6, #2
   117bc:	ldr	r3, [sp, #104]	; 0x68
   117c0:	cmp	r3, #0
   117c4:	beq	117e0 <close@plt+0x844>
   117c8:	bl	11d60 <close@plt+0xdc4>
   117cc:	ldr	r3, [pc, #1108]	; 11c28 <close@plt+0xc8c>
   117d0:	ldr	r0, [sp, #112]	; 0x70
   117d4:	ldr	r1, [r3, #24]
   117d8:	bl	10da4 <stpcpy@plt>
   117dc:	str	r0, [sp, #112]	; 0x70
   117e0:	ldr	r3, [sp, #36]	; 0x24
   117e4:	cmp	r3, #0
   117e8:	beq	11840 <close@plt+0x8a4>
   117ec:	ldr	r3, [pc, #1040]	; 11c04 <close@plt+0xc68>
   117f0:	ldrb	r2, [r3, #12]
   117f4:	cmp	r2, #0
   117f8:	beq	1182c <close@plt+0x890>
   117fc:	ldr	r2, [sp, #112]	; 0x70
   11800:	add	r1, r2, #1
   11804:	str	r1, [sp, #112]	; 0x70
   11808:	mov	r1, #94	; 0x5e
   1180c:	strb	r1, [r2]
   11810:	ldr	r2, [sp, #112]	; 0x70
   11814:	add	r1, r2, #1
   11818:	str	r1, [sp, #112]	; 0x70
   1181c:	mov	r1, #77	; 0x4d
   11820:	strb	r1, [r2]
   11824:	mov	r2, #0
   11828:	strb	r2, [r3, #12]
   1182c:	ldr	r3, [sp, #112]	; 0x70
   11830:	add	r2, r3, #1
   11834:	str	r2, [sp, #112]	; 0x70
   11838:	mov	r2, #36	; 0x24
   1183c:	strb	r2, [r3]
   11840:	ldr	r3, [sp, #112]	; 0x70
   11844:	add	r2, r3, #1
   11848:	str	r2, [sp, #112]	; 0x70
   1184c:	mov	r2, #10
   11850:	strb	r2, [r3]
   11854:	b	116b4 <close@plt+0x718>
   11858:	ldr	r3, [pc, #932]	; 11c04 <close@plt+0xc68>
   1185c:	mov	r1, #94	; 0x5e
   11860:	mov	ip, #77	; 0x4d
   11864:	ldrb	r2, [r3, #12]
   11868:	ldr	r3, [sp, #28]
   1186c:	mov	lr, #73	; 0x49
   11870:	cmp	r5, #9
   11874:	movne	r0, #0
   11878:	andeq	r0, r8, #1
   1187c:	cmp	r0, #0
   11880:	beq	1195c <close@plt+0x9c0>
   11884:	ldr	r0, [sp, #112]	; 0x70
   11888:	add	r5, r0, #1
   1188c:	str	r5, [sp, #112]	; 0x70
   11890:	strb	r1, [r0]
   11894:	ldr	r0, [sp, #112]	; 0x70
   11898:	add	r5, r0, #1
   1189c:	str	r5, [sp, #112]	; 0x70
   118a0:	strb	lr, [r0]
   118a4:	ldrb	r5, [sl], #1
   118a8:	b	11870 <close@plt+0x8d4>
   118ac:	add	fp, r3, #1
   118b0:	str	fp, [sp, #112]	; 0x70
   118b4:	strb	lr, [r3]
   118b8:	ldr	r3, [sp, #112]	; 0x70
   118bc:	cmp	r5, #159	; 0x9f
   118c0:	add	fp, r3, #1
   118c4:	str	fp, [sp, #112]	; 0x70
   118c8:	strb	r6, [r3]
   118cc:	ldr	r3, [sp, #112]	; 0x70
   118d0:	bls	118f0 <close@plt+0x954>
   118d4:	cmp	r5, #255	; 0xff
   118d8:	beq	11768 <close@plt+0x7cc>
   118dc:	sub	r5, r5, #128	; 0x80
   118e0:	add	fp, r3, #1
   118e4:	str	fp, [sp, #112]	; 0x70
   118e8:	strb	r5, [r3]
   118ec:	b	11784 <close@plt+0x7e8>
   118f0:	add	fp, r3, #1
   118f4:	str	fp, [sp, #112]	; 0x70
   118f8:	strb	r2, [r3]
   118fc:	ldr	r3, [sp, #112]	; 0x70
   11900:	sub	r5, r5, #64	; 0x40
   11904:	add	fp, r3, #1
   11908:	str	fp, [sp, #112]	; 0x70
   1190c:	b	118e8 <close@plt+0x94c>
   11910:	cmp	r5, #9
   11914:	movne	r3, #0
   11918:	andeq	r3, r0, #1
   1191c:	cmp	r3, #0
   11920:	ldr	r3, [sp, #112]	; 0x70
   11924:	addne	r5, r3, #1
   11928:	strne	r5, [sp, #112]	; 0x70
   1192c:	strbne	ip, [r3]
   11930:	bne	11784 <close@plt+0x7e8>
   11934:	cmp	r5, #10
   11938:	beq	11970 <close@plt+0x9d4>
   1193c:	add	fp, r3, #1
   11940:	str	fp, [sp, #112]	; 0x70
   11944:	strb	r2, [r3]
   11948:	ldr	r3, [sp, #112]	; 0x70
   1194c:	add	r5, r5, #64	; 0x40
   11950:	add	fp, r3, #1
   11954:	str	fp, [sp, #112]	; 0x70
   11958:	b	118e8 <close@plt+0x94c>
   1195c:	cmp	r5, #10
   11960:	bne	1197c <close@plt+0x9e0>
   11964:	cmp	r3, #0
   11968:	ldrne	r3, [pc, #660]	; 11c04 <close@plt+0xc68>
   1196c:	strbne	r2, [r3, #12]
   11970:	mov	r6, r4
   11974:	mov	r5, sl
   11978:	b	11a84 <close@plt+0xae8>
   1197c:	cmp	r5, #13
   11980:	bne	119d8 <close@plt+0xa3c>
   11984:	ldrb	r0, [sl]
   11988:	ldr	r6, [sp, #36]	; 0x24
   1198c:	cmp	r0, #10
   11990:	movne	r6, #0
   11994:	andeq	r6, r6, #1
   11998:	cmp	r6, #0
   1199c:	beq	119d8 <close@plt+0xa3c>
   119a0:	ldr	r5, [sp, #60]	; 0x3c
   119a4:	cmp	sl, r5
   119a8:	moveq	r3, r6
   119ac:	moveq	r2, r3
   119b0:	beq	118a4 <close@plt+0x908>
   119b4:	ldr	r0, [sp, #112]	; 0x70
   119b8:	add	r5, r0, #1
   119bc:	str	r5, [sp, #112]	; 0x70
   119c0:	strb	r1, [r0]
   119c4:	ldr	r0, [sp, #112]	; 0x70
   119c8:	add	r5, r0, #1
   119cc:	str	r5, [sp, #112]	; 0x70
   119d0:	strb	ip, [r0]
   119d4:	b	118a4 <close@plt+0x908>
   119d8:	ldr	r0, [sp, #112]	; 0x70
   119dc:	add	r6, r0, #1
   119e0:	str	r6, [sp, #112]	; 0x70
   119e4:	strb	r5, [r0]
   119e8:	b	118a4 <close@plt+0x908>
   119ec:	ldr	r3, [sp, #56]	; 0x38
   119f0:	cmp	r3, #0
   119f4:	beq	11444 <close@plt+0x4a8>
   119f8:	ldr	r3, [sp, #32]
   119fc:	ldr	r0, [sp, #48]	; 0x30
   11a00:	add	r1, r3, #1
   11a04:	bl	13ee8 <close@plt+0x2f4c>
   11a08:	ldr	r3, [sp, #32]
   11a0c:	cmp	r3, #536870912	; 0x20000000
   11a10:	mov	r7, r0
   11a14:	bne	11a2c <close@plt+0xa90>
   11a18:	bl	14390 <close@plt+0x33f4>
   11a1c:	add	r1, sp, #112	; 0x70
   11a20:	mov	r0, r9
   11a24:	bl	11dcc <close@plt+0xe30>
   11a28:	b	11620 <close@plt+0x684>
   11a2c:	ldr	r3, [sp, #32]
   11a30:	ldr	r2, [sp, #24]
   11a34:	lsl	r1, r3, #2
   11a38:	mvn	r3, #-2147483648	; 0x80000000
   11a3c:	sub	r3, r3, r2
   11a40:	cmp	r3, r1
   11a44:	blt	11a18 <close@plt+0xa7c>
   11a48:	ldr	r3, [sp, #24]
   11a4c:	add	r1, r3, r1
   11a50:	cmn	r1, #-2147483628	; 0x80000014
   11a54:	bgt	11a18 <close@plt+0xa7c>
   11a58:	add	r1, r1, #19
   11a5c:	ldr	r0, [sp, #48]	; 0x30
   11a60:	bl	13ee8 <close@plt+0x2f4c>
   11a64:	ldr	r3, [pc, #408]	; 11c04 <close@plt+0xc68>
   11a68:	add	r5, r7, #1
   11a6c:	str	r7, [sp, #60]	; 0x3c
   11a70:	ldr	r6, [r3, #8]
   11a74:	mov	r3, #1
   11a78:	str	r3, [sp, #84]	; 0x54
   11a7c:	mov	r9, r0
   11a80:	str	r0, [sp, #112]	; 0x70
   11a84:	ldr	r3, [sp, #24]
   11a88:	ldr	r2, [sp, #112]	; 0x70
   11a8c:	add	r3, r9, r3
   11a90:	cmp	r2, r3
   11a94:	bcc	11af4 <close@plt+0xb58>
   11a98:	mov	fp, r9
   11a9c:	mov	r3, #1
   11aa0:	mov	r0, r3
   11aa4:	ldr	r2, [sp, #24]
   11aa8:	mov	r1, fp
   11aac:	str	r3, [sp, #108]	; 0x6c
   11ab0:	bl	12268 <close@plt+0x12cc>
   11ab4:	ldr	r3, [sp, #24]
   11ab8:	cmp	r3, r0
   11abc:	ldr	r3, [sp, #108]	; 0x6c
   11ac0:	bne	115f0 <close@plt+0x654>
   11ac4:	ldr	r2, [sp, #24]
   11ac8:	ldr	sl, [sp, #112]	; 0x70
   11acc:	add	fp, fp, r2
   11ad0:	sub	sl, sl, fp
   11ad4:	cmp	r2, sl
   11ad8:	ble	11aa0 <close@plt+0xb04>
   11adc:	mov	r2, sl
   11ae0:	mov	r1, fp
   11ae4:	mov	r0, r9
   11ae8:	add	sl, r9, sl
   11aec:	bl	10d5c <memmove@plt>
   11af0:	str	sl, [sp, #112]	; 0x70
   11af4:	ldr	r3, [sp, #60]	; 0x3c
   11af8:	cmp	r3, r5
   11afc:	bcs	1178c <close@plt+0x7f0>
   11b00:	mov	r3, #0
   11b04:	str	r3, [sp, #116]	; 0x74
   11b08:	ldr	r3, [sp, #84]	; 0x54
   11b0c:	cmp	r3, #0
   11b10:	beq	11a1c <close@plt+0xa80>
   11b14:	ldr	r3, [pc, #232]	; 11c04 <close@plt+0xc68>
   11b18:	add	r2, sp, #116	; 0x74
   11b1c:	ldr	r1, [pc, #264]	; 11c2c <close@plt+0xc90>
   11b20:	ldr	r0, [r3, #4]
   11b24:	bl	10e04 <ioctl@plt>
   11b28:	cmp	r0, #0
   11b2c:	bge	11614 <close@plt+0x678>
   11b30:	bl	10ed0 <__errno_location@plt>
   11b34:	ldr	sl, [r0]
   11b38:	sub	r2, sl, #19
   11b3c:	cmp	r2, #19
   11b40:	movhi	r3, #1
   11b44:	ldrls	r3, [pc, #228]	; 11c30 <close@plt+0xc94>
   11b48:	sub	r5, sl, #95	; 0x5f
   11b4c:	clz	r5, r5
   11b50:	mvnls	r3, r3, lsr r2
   11b54:	and	r3, r3, #1
   11b58:	lsr	r5, r5, #5
   11b5c:	eor	r3, r3, #1
   11b60:	orrs	r5, r5, r3
   11b64:	bne	1160c <close@plt+0x670>
   11b68:	mov	r2, #5
   11b6c:	ldr	r1, [pc, #192]	; 11c34 <close@plt+0xc98>
   11b70:	mov	r0, r5
   11b74:	bl	10dbc <dcgettext@plt>
   11b78:	ldr	fp, [pc, #132]	; 11c04 <close@plt+0xc68>
   11b7c:	ldr	r1, [fp]
   11b80:	str	r0, [sp, #32]
   11b84:	mov	r0, #4
   11b88:	bl	13714 <close@plt+0x2778>
   11b8c:	ldr	r2, [sp, #32]
   11b90:	mov	r1, sl
   11b94:	mov	r3, r0
   11b98:	mov	r0, r5
   11b9c:	bl	10e4c <error@plt>
   11ba0:	str	r6, [fp, #8]
   11ba4:	ldr	r3, [sp, #20]
   11ba8:	mov	r0, r9
   11bac:	and	r3, r3, r5
   11bb0:	str	r3, [sp, #20]
   11bb4:	bl	12214 <close@plt+0x1278>
   11bb8:	b	115c4 <close@plt+0x628>
   11bbc:	ldr	r3, [sp, #20]
   11bc0:	eor	r0, r3, #1
   11bc4:	add	sp, sp, #228	; 0xe4
   11bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bcc:	ldrdeq	r5, [r1], -r9
   11bd0:	ldrdeq	r5, [r1], -sl
   11bd4:	andeq	r5, r1, r7, lsr r2
   11bd8:	strdeq	r2, [r1], -r4
   11bdc:	andeq	r4, r1, ip, lsl #27
   11be0:	andeq	r5, r1, r8, lsl r3
   11be4:	andeq	r5, r1, r3, lsr #6
   11be8:	strdeq	r5, [r1], -r2
   11bec:	andeq	r6, r2, r4, ror r1
   11bf0:	andeq	r5, r1, r6, lsl #6
   11bf4:	andeq	r6, r2, r4, lsl r1
   11bf8:	andeq	r5, r1, r3, lsr r2
   11bfc:	andeq	r4, r1, r8, lsr lr
   11c00:	svcne	0x00fe0000
   11c04:	andeq	r6, r2, ip, ror r1
   11c08:	muleq	r1, r7, r4
   11c0c:	andeq	r6, r2, r8, ror #2
   11c10:	andeq	r5, r1, r2, asr r4
   11c14:	andeq	r5, r1, r7, ror #6
   11c18:	andeq	r5, r1, r9, ror #6
   11c1c:	andeq	r5, r1, r3, lsr r3
   11c20:	strbeq	r0, [r4], #-514	; 0xfffffdfe
   11c24:	andeq	r4, r1, ip, lsr #28
   11c28:	strdeq	r6, [r2], -r8
   11c2c:	andeq	r5, r0, fp, lsl r4
   11c30:	andeq	r0, r8, r9, asr #32
   11c34:	andeq	r5, r1, r1, asr r3
   11c38:	mov	fp, #0
   11c3c:	mov	lr, #0
   11c40:	pop	{r1}		; (ldr r1, [sp], #4)
   11c44:	mov	r2, sp
   11c48:	push	{r2}		; (str r2, [sp, #-4]!)
   11c4c:	push	{r0}		; (str r0, [sp, #-4]!)
   11c50:	ldr	ip, [pc, #16]	; 11c68 <close@plt+0xccc>
   11c54:	push	{ip}		; (str ip, [sp, #-4]!)
   11c58:	ldr	r0, [pc, #12]	; 11c6c <close@plt+0xcd0>
   11c5c:	ldr	r3, [pc, #12]	; 11c70 <close@plt+0xcd4>
   11c60:	bl	10e70 <__libc_start_main@plt>
   11c64:	bl	10f90 <abort@plt>
   11c68:	andeq	r4, r1, ip, lsl sp
   11c6c:	andeq	r0, r1, r8, lsr #31
   11c70:			; <UNDEFINED> instruction: 0x00014cbc
   11c74:	ldr	r3, [pc, #20]	; 11c90 <close@plt+0xcf4>
   11c78:	ldr	r2, [pc, #20]	; 11c94 <close@plt+0xcf8>
   11c7c:	add	r3, pc, r3
   11c80:	ldr	r2, [r3, r2]
   11c84:	cmp	r2, #0
   11c88:	bxeq	lr
   11c8c:	b	10e88 <__gmon_start__@plt>
   11c90:	andeq	r4, r1, ip, ror r3
   11c94:	andeq	r0, r0, ip, ror #1
   11c98:	ldr	r3, [pc, #28]	; 11cbc <close@plt+0xd20>
   11c9c:	ldr	r0, [pc, #28]	; 11cc0 <close@plt+0xd24>
   11ca0:	sub	r3, r3, r0
   11ca4:	cmp	r3, #6
   11ca8:	bxls	lr
   11cac:	ldr	r3, [pc, #16]	; 11cc4 <close@plt+0xd28>
   11cb0:	cmp	r3, #0
   11cb4:	bxeq	lr
   11cb8:	bx	r3
   11cbc:	andeq	r6, r2, pc, asr r1
   11cc0:	andeq	r6, r2, ip, asr r1
   11cc4:	andeq	r0, r0, r0
   11cc8:	ldr	r1, [pc, #36]	; 11cf4 <close@plt+0xd58>
   11ccc:	ldr	r0, [pc, #36]	; 11cf8 <close@plt+0xd5c>
   11cd0:	sub	r1, r1, r0
   11cd4:	asr	r1, r1, #2
   11cd8:	add	r1, r1, r1, lsr #31
   11cdc:	asrs	r1, r1, #1
   11ce0:	bxeq	lr
   11ce4:	ldr	r3, [pc, #16]	; 11cfc <close@plt+0xd60>
   11ce8:	cmp	r3, #0
   11cec:	bxeq	lr
   11cf0:	bx	r3
   11cf4:	andeq	r6, r2, ip, asr r1
   11cf8:	andeq	r6, r2, ip, asr r1
   11cfc:	andeq	r0, r0, r0
   11d00:	push	{r4, lr}
   11d04:	ldr	r4, [pc, #24]	; 11d24 <close@plt+0xd88>
   11d08:	ldrb	r3, [r4]
   11d0c:	cmp	r3, #0
   11d10:	popne	{r4, pc}
   11d14:	bl	11c98 <close@plt+0xcfc>
   11d18:	mov	r3, #1
   11d1c:	strb	r3, [r4]
   11d20:	pop	{r4, pc}
   11d24:	andeq	r6, r2, r8, ror r1
   11d28:	ldr	r0, [pc, #40]	; 11d58 <close@plt+0xdbc>
   11d2c:	ldr	r3, [r0]
   11d30:	cmp	r3, #0
   11d34:	bne	11d3c <close@plt+0xda0>
   11d38:	b	11cc8 <close@plt+0xd2c>
   11d3c:	ldr	r3, [pc, #24]	; 11d5c <close@plt+0xdc0>
   11d40:	cmp	r3, #0
   11d44:	beq	11d38 <close@plt+0xd9c>
   11d48:	push	{r4, lr}
   11d4c:	blx	r3
   11d50:	pop	{r4, lr}
   11d54:	b	11cc8 <close@plt+0xd2c>
   11d58:	andeq	r5, r2, r4, lsl pc
   11d5c:	andeq	r0, r0, r0
   11d60:	ldr	r3, [pc, #96]	; 11dc8 <close@plt+0xe2c>
   11d64:	mov	ip, #48	; 0x30
   11d68:	add	r2, r3, #17
   11d6c:	ldr	r1, [r3, #20]
   11d70:	ldrb	r0, [r2]
   11d74:	cmp	r0, #56	; 0x38
   11d78:	bhi	11d88 <close@plt+0xdec>
   11d7c:	add	r0, r0, #1
   11d80:	strb	r0, [r2]
   11d84:	bx	lr
   11d88:	strb	ip, [r2], #-1
   11d8c:	cmp	r2, r1
   11d90:	bcs	11d70 <close@plt+0xdd4>
   11d94:	cmp	r1, r3
   11d98:	subhi	r2, r1, #1
   11d9c:	strhi	r2, [r3, #20]
   11da0:	movls	r2, #62	; 0x3e
   11da4:	movhi	r2, #49	; 0x31
   11da8:	strbhi	r2, [r1, #-1]
   11dac:	strbls	r2, [r3]
   11db0:	ldr	r1, [r3, #20]
   11db4:	ldr	r2, [r3, #24]
   11db8:	cmp	r1, r2
   11dbc:	subcc	r2, r2, #1
   11dc0:	strcc	r2, [r3, #24]
   11dc4:	bx	lr
   11dc8:	strdeq	r6, [r2], -r8
   11dcc:	push	{r4, r5, r6, lr}
   11dd0:	ldr	r5, [r1]
   11dd4:	sub	r5, r5, r0
   11dd8:	cmp	r5, #0
   11ddc:	pople	{r4, r5, r6, pc}
   11de0:	mov	r6, r1
   11de4:	mov	r4, r0
   11de8:	mov	r1, r0
   11dec:	mov	r2, r5
   11df0:	mov	r0, #1
   11df4:	bl	12268 <close@plt+0x12cc>
   11df8:	cmp	r5, r0
   11dfc:	beq	11e28 <close@plt+0xe8c>
   11e00:	bl	10ed0 <__errno_location@plt>
   11e04:	mov	r2, #5
   11e08:	ldr	r1, [pc, #32]	; 11e30 <close@plt+0xe94>
   11e0c:	ldr	r4, [r0]
   11e10:	mov	r0, #0
   11e14:	bl	10dbc <dcgettext@plt>
   11e18:	mov	r1, r4
   11e1c:	mov	r2, r0
   11e20:	mov	r0, #1
   11e24:	bl	10e4c <error@plt>
   11e28:	str	r4, [r6]
   11e2c:	pop	{r4, r5, r6, pc}
   11e30:	andeq	r4, r1, ip, lsr #28
   11e34:	subs	r4, r0, #0
   11e38:	push	{r7, lr}
   11e3c:	sub	sp, sp, #56	; 0x38
   11e40:	ldr	r6, [pc, #560]	; 12078 <close@plt+0x10dc>
   11e44:	beq	11e7c <close@plt+0xee0>
   11e48:	ldr	r3, [pc, #556]	; 1207c <close@plt+0x10e0>
   11e4c:	mov	r2, #5
   11e50:	ldr	r1, [pc, #552]	; 12080 <close@plt+0x10e4>
   11e54:	mov	r0, #0
   11e58:	ldr	r5, [r3]
   11e5c:	bl	10dbc <dcgettext@plt>
   11e60:	ldr	r3, [r6]
   11e64:	mov	r1, #1
   11e68:	mov	r2, r0
   11e6c:	mov	r0, r5
   11e70:	bl	10f18 <__fprintf_chk@plt>
   11e74:	mov	r0, r4
   11e78:	bl	10eac <exit@plt>
   11e7c:	mov	r2, #5
   11e80:	ldr	r1, [pc, #508]	; 12084 <close@plt+0x10e8>
   11e84:	bl	10dbc <dcgettext@plt>
   11e88:	ldr	r5, [pc, #504]	; 12088 <close@plt+0x10ec>
   11e8c:	ldr	r2, [r6]
   11e90:	ldr	r8, [pc, #500]	; 1208c <close@plt+0x10f0>
   11e94:	mov	r1, r0
   11e98:	mov	r0, #1
   11e9c:	bl	10ef4 <__printf_chk@plt>
   11ea0:	mov	r2, #5
   11ea4:	ldr	r1, [pc, #484]	; 12090 <close@plt+0x10f4>
   11ea8:	mov	r0, r4
   11eac:	bl	10dbc <dcgettext@plt>
   11eb0:	ldr	r1, [r5]
   11eb4:	bl	10d14 <fputs_unlocked@plt>
   11eb8:	mov	r2, #5
   11ebc:	ldr	r1, [pc, #464]	; 12094 <close@plt+0x10f8>
   11ec0:	mov	r0, r4
   11ec4:	bl	10dbc <dcgettext@plt>
   11ec8:	ldr	r1, [r5]
   11ecc:	bl	10d14 <fputs_unlocked@plt>
   11ed0:	mov	r2, #5
   11ed4:	ldr	r1, [pc, #444]	; 12098 <close@plt+0x10fc>
   11ed8:	mov	r0, r4
   11edc:	bl	10dbc <dcgettext@plt>
   11ee0:	ldr	r1, [r5]
   11ee4:	bl	10d14 <fputs_unlocked@plt>
   11ee8:	mov	r2, #5
   11eec:	ldr	r1, [pc, #424]	; 1209c <close@plt+0x1100>
   11ef0:	mov	r0, r4
   11ef4:	bl	10dbc <dcgettext@plt>
   11ef8:	ldr	r1, [r5]
   11efc:	bl	10d14 <fputs_unlocked@plt>
   11f00:	mov	r2, #5
   11f04:	ldr	r1, [pc, #404]	; 120a0 <close@plt+0x1104>
   11f08:	mov	r0, r4
   11f0c:	bl	10dbc <dcgettext@plt>
   11f10:	ldr	r1, [r5]
   11f14:	bl	10d14 <fputs_unlocked@plt>
   11f18:	mov	r2, #5
   11f1c:	ldr	r1, [pc, #384]	; 120a4 <close@plt+0x1108>
   11f20:	mov	r0, r4
   11f24:	bl	10dbc <dcgettext@plt>
   11f28:	ldr	r1, [r5]
   11f2c:	bl	10d14 <fputs_unlocked@plt>
   11f30:	mov	r2, #5
   11f34:	ldr	r1, [pc, #364]	; 120a8 <close@plt+0x110c>
   11f38:	mov	r0, r4
   11f3c:	bl	10dbc <dcgettext@plt>
   11f40:	ldr	r3, [r6]
   11f44:	mov	r6, r4
   11f48:	mov	r2, r3
   11f4c:	mov	r1, r0
   11f50:	mov	r0, #1
   11f54:	bl	10ef4 <__printf_chk@plt>
   11f58:	ldr	lr, [pc, #332]	; 120ac <close@plt+0x1110>
   11f5c:	mov	ip, sp
   11f60:	ldm	lr!, {r0, r1, r2, r3}
   11f64:	stmia	ip!, {r0, r1, r2, r3}
   11f68:	ldm	lr!, {r0, r1, r2, r3}
   11f6c:	stmia	ip!, {r0, r1, r2, r3}
   11f70:	ldm	lr!, {r0, r1, r2, r3}
   11f74:	stmia	ip!, {r0, r1, r2, r3}
   11f78:	ldm	lr, {r0, r1}
   11f7c:	stm	ip, {r0, r1}
   11f80:	ldr	r1, [sp, r6]
   11f84:	add	r7, sp, r6
   11f88:	cmp	r1, #0
   11f8c:	bne	12030 <close@plt+0x1094>
   11f90:	ldr	r6, [r7, #4]
   11f94:	ldr	r7, [pc, #240]	; 1208c <close@plt+0x10f0>
   11f98:	cmp	r6, #0
   11f9c:	mov	r2, #5
   11fa0:	ldr	r1, [pc, #264]	; 120b0 <close@plt+0x1114>
   11fa4:	mov	r0, #0
   11fa8:	moveq	r6, r7
   11fac:	bl	10dbc <dcgettext@plt>
   11fb0:	ldr	r3, [pc, #252]	; 120b4 <close@plt+0x1118>
   11fb4:	ldr	r2, [pc, #252]	; 120b8 <close@plt+0x111c>
   11fb8:	mov	r1, r0
   11fbc:	mov	r0, #1
   11fc0:	bl	10ef4 <__printf_chk@plt>
   11fc4:	mov	r1, #0
   11fc8:	mov	r0, #5
   11fcc:	bl	10f3c <setlocale@plt>
   11fd0:	cmp	r0, #0
   11fd4:	bne	12048 <close@plt+0x10ac>
   11fd8:	mov	r2, #5
   11fdc:	ldr	r1, [pc, #216]	; 120bc <close@plt+0x1120>
   11fe0:	mov	r0, #0
   11fe4:	bl	10dbc <dcgettext@plt>
   11fe8:	ldr	r3, [pc, #156]	; 1208c <close@plt+0x10f0>
   11fec:	ldr	r2, [pc, #192]	; 120b4 <close@plt+0x1118>
   11ff0:	mov	r1, r0
   11ff4:	mov	r0, #1
   11ff8:	bl	10ef4 <__printf_chk@plt>
   11ffc:	mov	r2, #5
   12000:	ldr	r1, [pc, #184]	; 120c0 <close@plt+0x1124>
   12004:	mov	r0, #0
   12008:	bl	10dbc <dcgettext@plt>
   1200c:	ldr	r2, [pc, #176]	; 120c4 <close@plt+0x1128>
   12010:	cmp	r6, r7
   12014:	ldr	r3, [pc, #172]	; 120c8 <close@plt+0x112c>
   12018:	moveq	r3, r2
   1201c:	mov	r2, r6
   12020:	mov	r1, r0
   12024:	mov	r0, #1
   12028:	bl	10ef4 <__printf_chk@plt>
   1202c:	b	11e74 <close@plt+0xed8>
   12030:	mov	r0, r8
   12034:	bl	10d2c <strcmp@plt>
   12038:	add	r6, r6, #8
   1203c:	cmp	r0, #0
   12040:	bne	11f80 <close@plt+0xfe4>
   12044:	b	11f90 <close@plt+0xff4>
   12048:	mov	r2, #3
   1204c:	ldr	r1, [pc, #120]	; 120cc <close@plt+0x1130>
   12050:	bl	10f84 <strncmp@plt>
   12054:	cmp	r0, #0
   12058:	beq	11fd8 <close@plt+0x103c>
   1205c:	mov	r2, #5
   12060:	ldr	r1, [pc, #104]	; 120d0 <close@plt+0x1134>
   12064:	mov	r0, #0
   12068:	bl	10dbc <dcgettext@plt>
   1206c:	ldr	r1, [r5]
   12070:	bl	10d14 <fputs_unlocked@plt>
   12074:	b	11fd8 <close@plt+0x103c>
   12078:	muleq	r2, r4, r1
   1207c:	andeq	r6, r2, r0, ror r1
   12080:	andeq	r4, r1, ip, lsr lr
   12084:	andeq	r4, r1, r3, ror #28
   12088:	andeq	r6, r2, r4, ror r1
   1208c:	andeq	r4, r1, r8, lsr lr
   12090:	andeq	r4, r1, r4, lsl #29
   12094:	andeq	r4, r1, sp, lsr #29
   12098:	andeq	r4, r1, r5, ror #29
   1209c:	andeq	r5, r1, r4, lsr r0
   120a0:	andeq	r5, r1, r8, lsl #2
   120a4:	andeq	r5, r1, r5, lsr r1
   120a8:	andeq	r5, r1, fp, ror #2
   120ac:	andeq	r4, r1, r4, asr sp
   120b0:	strdeq	r5, [r1], -r4
   120b4:	andeq	r5, r1, fp, lsl #4
   120b8:	andeq	r5, r1, r3, lsr r2
   120bc:	andeq	r5, r1, ip, lsl #5
   120c0:	andeq	r5, r1, r7, lsr #5
   120c4:	strdeq	r5, [r1], -ip
   120c8:	ldrdeq	r5, [r1], -r9
   120cc:	andeq	r5, r1, r1, asr #4
   120d0:	andeq	r5, r1, r5, asr #4
   120d4:	ldr	r3, [pc, #4]	; 120e0 <close@plt+0x1144>
   120d8:	str	r0, [r3]
   120dc:	bx	lr
   120e0:	andeq	r6, r2, ip, lsl #3
   120e4:	ldr	r3, [pc, #4]	; 120f0 <close@plt+0x1154>
   120e8:	strb	r0, [r3, #4]
   120ec:	bx	lr
   120f0:	andeq	r6, r2, ip, lsl #3
   120f4:	ldr	r3, [pc, #192]	; 121bc <close@plt+0x1220>
   120f8:	push	{r0, r1, r4, r5, r6, lr}
   120fc:	ldr	r0, [r3]
   12100:	bl	144b4 <close@plt+0x3518>
   12104:	cmp	r0, #0
   12108:	beq	121a0 <close@plt+0x1204>
   1210c:	ldr	r3, [pc, #172]	; 121c0 <close@plt+0x1224>
   12110:	mov	r4, r3
   12114:	ldrb	r2, [r3, #4]
   12118:	cmp	r2, #0
   1211c:	beq	12130 <close@plt+0x1194>
   12120:	bl	10ed0 <__errno_location@plt>
   12124:	ldr	r3, [r0]
   12128:	cmp	r3, #32
   1212c:	beq	121a0 <close@plt+0x1204>
   12130:	mov	r2, #5
   12134:	ldr	r1, [pc, #136]	; 121c4 <close@plt+0x1228>
   12138:	mov	r0, #0
   1213c:	bl	10dbc <dcgettext@plt>
   12140:	ldr	r4, [r4]
   12144:	cmp	r4, #0
   12148:	mov	r5, r0
   1214c:	beq	12184 <close@plt+0x11e8>
   12150:	bl	10ed0 <__errno_location@plt>
   12154:	ldr	r6, [r0]
   12158:	mov	r0, r4
   1215c:	bl	137a8 <close@plt+0x280c>
   12160:	str	r5, [sp]
   12164:	ldr	r2, [pc, #92]	; 121c8 <close@plt+0x122c>
   12168:	mov	r1, r6
   1216c:	mov	r3, r0
   12170:	mov	r0, #0
   12174:	bl	10e4c <error@plt>
   12178:	ldr	r3, [pc, #76]	; 121cc <close@plt+0x1230>
   1217c:	ldr	r0, [r3]
   12180:	bl	10d74 <_exit@plt>
   12184:	bl	10ed0 <__errno_location@plt>
   12188:	mov	r3, r5
   1218c:	ldr	r2, [pc, #60]	; 121d0 <close@plt+0x1234>
   12190:	ldr	r1, [r0]
   12194:	mov	r0, r4
   12198:	bl	10e4c <error@plt>
   1219c:	b	12178 <close@plt+0x11dc>
   121a0:	ldr	r3, [pc, #44]	; 121d4 <close@plt+0x1238>
   121a4:	ldr	r0, [r3]
   121a8:	bl	144b4 <close@plt+0x3518>
   121ac:	cmp	r0, #0
   121b0:	bne	12178 <close@plt+0x11dc>
   121b4:	add	sp, sp, #8
   121b8:	pop	{r4, r5, r6, pc}
   121bc:	andeq	r6, r2, r4, ror r1
   121c0:	andeq	r6, r2, ip, lsl #3
   121c4:	andeq	r4, r1, ip, lsr #28
   121c8:	andeq	r5, r1, lr, asr #8
   121cc:	andeq	r6, r2, r8, lsl r1
   121d0:	andeq	r5, r1, r2, asr r4
   121d4:	andeq	r6, r2, r0, ror r1
   121d8:	push	{r4, r5}
   121dc:	pop	{r4, r5}
   121e0:	b	10d38 <posix_fadvise64@plt>
   121e4:	cmp	r0, #0
   121e8:	bxeq	lr
   121ec:	push	{r0, r1, r2, r3, r4, lr}
   121f0:	mov	r4, r1
   121f4:	bl	10f0c <fileno@plt>
   121f8:	mov	r2, #0
   121fc:	mov	r3, #0
   12200:	str	r4, [sp, #8]
   12204:	strd	r2, [sp]
   12208:	bl	10d38 <posix_fadvise64@plt>
   1220c:	add	sp, sp, #16
   12210:	pop	{r4, pc}
   12214:	push	{r0, r1, r2, r4, r5, lr}
   12218:	mov	r5, r0
   1221c:	bl	10ed0 <__errno_location@plt>
   12220:	ldr	r3, [r0]
   12224:	mov	r4, r0
   12228:	str	r3, [sp]
   1222c:	str	r3, [sp, #4]
   12230:	mov	r3, #0
   12234:	str	r3, [r0]
   12238:	mov	r0, r5
   1223c:	bl	10d68 <free@plt>
   12240:	ldr	r3, [r4]
   12244:	add	r2, sp, #8
   12248:	cmp	r3, #0
   1224c:	moveq	r3, #4
   12250:	movne	r3, #0
   12254:	add	r3, r2, r3
   12258:	ldr	r3, [r3, #-8]
   1225c:	str	r3, [r4]
   12260:	add	sp, sp, #12
   12264:	pop	{r4, r5, pc}
   12268:	push	{r4, r5, r6, r7, r8, lr}
   1226c:	mov	r7, r0
   12270:	mov	r4, r2
   12274:	mov	r6, r1
   12278:	mov	r5, #0
   1227c:	cmp	r4, #0
   12280:	beq	122b0 <close@plt+0x1314>
   12284:	mov	r2, r4
   12288:	mov	r1, r6
   1228c:	mov	r0, r7
   12290:	bl	13970 <close@plt+0x29d4>
   12294:	cmn	r0, #1
   12298:	beq	122b0 <close@plt+0x1314>
   1229c:	cmp	r0, #0
   122a0:	bne	122b8 <close@plt+0x131c>
   122a4:	bl	10ed0 <__errno_location@plt>
   122a8:	mov	r3, #28
   122ac:	str	r3, [r0]
   122b0:	mov	r0, r5
   122b4:	pop	{r4, r5, r6, r7, r8, pc}
   122b8:	add	r5, r5, r0
   122bc:	add	r6, r6, r0
   122c0:	sub	r4, r4, r0
   122c4:	b	1227c <close@plt+0x12e0>
   122c8:	push	{r4, r5, r6, lr}
   122cc:	subs	r5, r0, #0
   122d0:	bne	122e8 <close@plt+0x134c>
   122d4:	ldr	r3, [pc, #124]	; 12358 <close@plt+0x13bc>
   122d8:	ldr	r0, [pc, #124]	; 1235c <close@plt+0x13c0>
   122dc:	ldr	r1, [r3]
   122e0:	bl	10f78 <fputs@plt>
   122e4:	bl	10f90 <abort@plt>
   122e8:	mov	r1, #47	; 0x2f
   122ec:	bl	10f48 <strrchr@plt>
   122f0:	cmp	r0, #0
   122f4:	addne	r4, r0, #1
   122f8:	moveq	r4, r5
   122fc:	sub	r3, r4, r5
   12300:	cmp	r3, #6
   12304:	ble	12344 <close@plt+0x13a8>
   12308:	mov	r2, #7
   1230c:	ldr	r1, [pc, #76]	; 12360 <close@plt+0x13c4>
   12310:	sub	r0, r4, #7
   12314:	bl	10f84 <strncmp@plt>
   12318:	cmp	r0, #0
   1231c:	bne	12344 <close@plt+0x13a8>
   12320:	mov	r2, #3
   12324:	ldr	r1, [pc, #56]	; 12364 <close@plt+0x13c8>
   12328:	mov	r0, r4
   1232c:	bl	10f84 <strncmp@plt>
   12330:	cmp	r0, #0
   12334:	movne	r5, r4
   12338:	ldreq	r3, [pc, #40]	; 12368 <close@plt+0x13cc>
   1233c:	addeq	r5, r4, #3
   12340:	streq	r5, [r3]
   12344:	ldr	r3, [pc, #32]	; 1236c <close@plt+0x13d0>
   12348:	str	r5, [r3]
   1234c:	ldr	r3, [pc, #28]	; 12370 <close@plt+0x13d4>
   12350:	str	r5, [r3]
   12354:	pop	{r4, r5, r6, pc}
   12358:	andeq	r6, r2, r0, ror r1
   1235c:	andeq	r5, r1, r5, asr r4
   12360:	andeq	r5, r1, sp, lsl #9
   12364:	muleq	r1, r5, r4
   12368:	andeq	r6, r2, r0, ror #2
   1236c:	muleq	r2, r4, r1
   12370:	andeq	r6, r2, r4, ror #2
   12374:	push	{r4, r5, r6, lr}
   12378:	mov	r2, #48	; 0x30
   1237c:	mov	r5, r1
   12380:	mov	r1, #0
   12384:	mov	r4, r0
   12388:	bl	10ee8 <memset@plt>
   1238c:	cmp	r5, #10
   12390:	bne	12398 <close@plt+0x13fc>
   12394:	bl	10f90 <abort@plt>
   12398:	str	r5, [r4]
   1239c:	mov	r0, r4
   123a0:	pop	{r4, r5, r6, pc}
   123a4:	push	{r4, r5, r6, lr}
   123a8:	mov	r4, r0
   123ac:	mov	r5, r1
   123b0:	bl	146b0 <close@plt+0x3714>
   123b4:	ldrb	r3, [r0]
   123b8:	bic	r3, r3, #32
   123bc:	cmp	r3, #85	; 0x55
   123c0:	bne	12430 <close@plt+0x1494>
   123c4:	ldrb	r3, [r0, #1]
   123c8:	bic	r3, r3, #32
   123cc:	cmp	r3, #84	; 0x54
   123d0:	bne	12408 <close@plt+0x146c>
   123d4:	ldrb	r3, [r0, #2]
   123d8:	bic	r3, r3, #32
   123dc:	cmp	r3, #70	; 0x46
   123e0:	bne	12408 <close@plt+0x146c>
   123e4:	ldrb	r3, [r0, #3]
   123e8:	cmp	r3, #45	; 0x2d
   123ec:	bne	12408 <close@plt+0x146c>
   123f0:	ldrb	r3, [r0, #4]
   123f4:	cmp	r3, #56	; 0x38
   123f8:	bne	12408 <close@plt+0x146c>
   123fc:	ldrb	r3, [r0, #5]
   12400:	cmp	r3, #0
   12404:	beq	1241c <close@plt+0x1480>
   12408:	ldr	r1, [pc, #144]	; 124a0 <close@plt+0x1504>
   1240c:	ldr	r0, [pc, #144]	; 124a4 <close@plt+0x1508>
   12410:	cmp	r5, #9
   12414:	movne	r0, r1
   12418:	pop	{r4, r5, r6, pc}
   1241c:	ldrb	r3, [r4]
   12420:	ldr	r1, [pc, #128]	; 124a8 <close@plt+0x150c>
   12424:	ldr	r0, [pc, #128]	; 124ac <close@plt+0x1510>
   12428:	cmp	r3, #96	; 0x60
   1242c:	b	12414 <close@plt+0x1478>
   12430:	cmp	r3, #71	; 0x47
   12434:	bne	12408 <close@plt+0x146c>
   12438:	ldrb	r3, [r0, #1]
   1243c:	bic	r3, r3, #32
   12440:	cmp	r3, #66	; 0x42
   12444:	bne	12408 <close@plt+0x146c>
   12448:	ldrb	r3, [r0, #2]
   1244c:	cmp	r3, #49	; 0x31
   12450:	bne	12408 <close@plt+0x146c>
   12454:	ldrb	r3, [r0, #3]
   12458:	cmp	r3, #56	; 0x38
   1245c:	bne	12408 <close@plt+0x146c>
   12460:	ldrb	r3, [r0, #4]
   12464:	cmp	r3, #48	; 0x30
   12468:	bne	12408 <close@plt+0x146c>
   1246c:	ldrb	r3, [r0, #5]
   12470:	cmp	r3, #51	; 0x33
   12474:	bne	12408 <close@plt+0x146c>
   12478:	ldrb	r3, [r0, #6]
   1247c:	cmp	r3, #48	; 0x30
   12480:	bne	12408 <close@plt+0x146c>
   12484:	ldrb	r3, [r0, #7]
   12488:	cmp	r3, #0
   1248c:	bne	12408 <close@plt+0x146c>
   12490:	ldrb	r3, [r4]
   12494:	ldr	r1, [pc, #20]	; 124b0 <close@plt+0x1514>
   12498:	ldr	r0, [pc, #20]	; 124b4 <close@plt+0x1518>
   1249c:	b	12428 <close@plt+0x148c>
   124a0:	andeq	r5, r1, r1, lsl #10
   124a4:	strdeq	r5, [r1], -pc	; <UNPREDICTABLE>
   124a8:	strdeq	r5, [r1], -r4
   124ac:	strdeq	r5, [r1], -r0
   124b0:	strdeq	r5, [r1], -ip
   124b4:	strdeq	r5, [r1], -r8
   124b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124bc:	sub	sp, sp, #108	; 0x6c
   124c0:	mov	r8, r0
   124c4:	str	r3, [sp, #36]	; 0x24
   124c8:	mov	r5, r1
   124cc:	str	r2, [sp, #44]	; 0x2c
   124d0:	ldr	sl, [sp, #144]	; 0x90
   124d4:	bl	10e1c <__ctype_get_mb_cur_max@plt>
   124d8:	ldr	r3, [sp, #148]	; 0x94
   124dc:	mov	r7, #0
   124e0:	str	r7, [sp, #48]	; 0x30
   124e4:	lsr	r6, r3, #1
   124e8:	and	r6, r6, #1
   124ec:	mov	r3, #1
   124f0:	str	r3, [sp, #72]	; 0x48
   124f4:	str	r7, [sp, #24]
   124f8:	str	r7, [sp, #32]
   124fc:	str	r7, [sp, #40]	; 0x28
   12500:	str	r7, [sp, #60]	; 0x3c
   12504:	str	r0, [sp, #76]	; 0x4c
   12508:	cmp	sl, #10
   1250c:	ldrls	pc, [pc, sl, lsl #2]
   12510:	b	1274c <close@plt+0x17b0>
   12514:	andeq	r2, r1, r0, asr #10
   12518:	ldrdeq	r3, [r1], -r4
   1251c:	andeq	r2, r1, r8, lsl r7
   12520:	andeq	r2, r1, r4, ror #14
   12524:	strdeq	r2, [r1], -r4
   12528:	andeq	r2, r1, ip, asr #10
   1252c:			; <UNDEFINED> instruction: 0x000131b4
   12530:	andeq	r2, r1, r0, asr r7
   12534:	andeq	r2, r1, r4, asr #12
   12538:	andeq	r2, r1, r4, asr #12
   1253c:	andeq	r2, r1, r4, asr #12
   12540:	mov	r6, #0
   12544:	mov	r4, #0
   12548:	b	12578 <close@plt+0x15dc>
   1254c:	cmp	r6, #0
   12550:	bne	12774 <close@plt+0x17d8>
   12554:	cmp	r5, #0
   12558:	movne	r3, #34	; 0x22
   1255c:	strbne	r3, [r8]
   12560:	mov	r3, #1
   12564:	str	r3, [sp, #24]
   12568:	str	r3, [sp, #32]
   1256c:	mov	r4, #1
   12570:	ldr	r3, [pc, #3172]	; 131dc <close@plt+0x2240>
   12574:	str	r3, [sp, #40]	; 0x28
   12578:	mov	r9, r5
   1257c:	mov	r3, #0
   12580:	str	r7, [sp, #68]	; 0x44
   12584:	str	r3, [sp, #28]
   12588:	ldr	r3, [sp, #36]	; 0x24
   1258c:	cmn	r3, #1
   12590:	bne	13120 <close@plt+0x2184>
   12594:	ldr	r3, [sp, #44]	; 0x2c
   12598:	ldr	r2, [sp, #28]
   1259c:	ldrb	r3, [r3, r2]
   125a0:	adds	r3, r3, #0
   125a4:	movne	r3, #1
   125a8:	str	r3, [sp, #52]	; 0x34
   125ac:	ldr	r3, [sp, #52]	; 0x34
   125b0:	cmp	r3, #0
   125b4:	bne	1279c <close@plt+0x1800>
   125b8:	sub	r2, sl, #2
   125bc:	clz	r2, r2
   125c0:	lsr	r2, r2, #5
   125c4:	and	r3, r6, r2
   125c8:	cmp	r4, #0
   125cc:	movne	r3, #0
   125d0:	andeq	r3, r3, #1
   125d4:	cmp	r3, #0
   125d8:	bne	12964 <close@plt+0x19c8>
   125dc:	eor	r3, r6, #1
   125e0:	ands	r2, r2, r3
   125e4:	beq	13158 <close@plt+0x21bc>
   125e8:	ldr	r3, [sp, #68]	; 0x44
   125ec:	cmp	r3, #0
   125f0:	beq	13190 <close@plt+0x21f4>
   125f4:	ldr	r3, [sp, #72]	; 0x48
   125f8:	cmp	r3, #0
   125fc:	beq	13134 <close@plt+0x2198>
   12600:	ldr	r3, [sp, #160]	; 0xa0
   12604:	ldr	r2, [sp, #44]	; 0x2c
   12608:	str	r3, [sp, #16]
   1260c:	ldr	r3, [sp, #156]	; 0x9c
   12610:	ldr	r1, [sp, #60]	; 0x3c
   12614:	str	r3, [sp, #12]
   12618:	ldr	r3, [sp, #152]	; 0x98
   1261c:	str	r3, [sp, #8]
   12620:	ldr	r3, [sp, #148]	; 0x94
   12624:	str	r3, [sp, #4]
   12628:	mov	r3, #5
   1262c:	str	r3, [sp]
   12630:	ldr	r3, [sp, #36]	; 0x24
   12634:	mov	r0, r8
   12638:	bl	124b8 <close@plt+0x151c>
   1263c:	mov	r4, r0
   12640:	b	13184 <close@plt+0x21e8>
   12644:	cmp	sl, #10
   12648:	beq	126a4 <close@plt+0x1708>
   1264c:	ldr	r4, [pc, #2956]	; 131e0 <close@plt+0x2244>
   12650:	mov	r2, #5
   12654:	mov	r1, r4
   12658:	mov	r0, #0
   1265c:	bl	10dbc <dcgettext@plt>
   12660:	cmp	r0, r4
   12664:	str	r0, [sp, #156]	; 0x9c
   12668:	bne	12678 <close@plt+0x16dc>
   1266c:	mov	r1, sl
   12670:	bl	123a4 <close@plt+0x1408>
   12674:	str	r0, [sp, #156]	; 0x9c
   12678:	ldr	r4, [pc, #2916]	; 131e4 <close@plt+0x2248>
   1267c:	mov	r2, #5
   12680:	mov	r1, r4
   12684:	mov	r0, #0
   12688:	bl	10dbc <dcgettext@plt>
   1268c:	cmp	r0, r4
   12690:	str	r0, [sp, #160]	; 0xa0
   12694:	bne	126a4 <close@plt+0x1708>
   12698:	mov	r1, sl
   1269c:	bl	123a4 <close@plt+0x1408>
   126a0:	str	r0, [sp, #160]	; 0xa0
   126a4:	cmp	r6, #0
   126a8:	moveq	r4, r6
   126ac:	beq	126c4 <close@plt+0x1728>
   126b0:	mov	r4, #0
   126b4:	b	126d4 <close@plt+0x1738>
   126b8:	cmp	r5, r4
   126bc:	strbhi	r3, [r8, r4]
   126c0:	add	r4, r4, #1
   126c4:	ldr	r3, [sp, #156]	; 0x9c
   126c8:	ldrb	r3, [r3, r4]
   126cc:	cmp	r3, #0
   126d0:	bne	126b8 <close@plt+0x171c>
   126d4:	ldr	r0, [sp, #160]	; 0xa0
   126d8:	bl	10eb8 <strlen@plt>
   126dc:	ldr	r3, [sp, #160]	; 0xa0
   126e0:	str	r3, [sp, #40]	; 0x28
   126e4:	mov	r3, #1
   126e8:	str	r3, [sp, #24]
   126ec:	str	r0, [sp, #32]
   126f0:	b	12578 <close@plt+0x15dc>
   126f4:	mov	r3, #1
   126f8:	cmp	r6, #0
   126fc:	streq	r3, [sp, #24]
   12700:	beq	12720 <close@plt+0x1784>
   12704:	str	r3, [sp, #32]
   12708:	ldr	r3, [pc, #2772]	; 131e4 <close@plt+0x2248>
   1270c:	mov	r4, #0
   12710:	str	r3, [sp, #40]	; 0x28
   12714:	b	12744 <close@plt+0x17a8>
   12718:	cmp	r6, #0
   1271c:	bne	1278c <close@plt+0x17f0>
   12720:	cmp	r5, #0
   12724:	movne	r3, #39	; 0x27
   12728:	strbne	r3, [r8]
   1272c:	mov	r3, #1
   12730:	str	r3, [sp, #32]
   12734:	mov	r6, #0
   12738:	ldr	r3, [pc, #2724]	; 131e4 <close@plt+0x2248>
   1273c:	mov	r4, #1
   12740:	str	r3, [sp, #40]	; 0x28
   12744:	mov	sl, #2
   12748:	b	12578 <close@plt+0x15dc>
   1274c:	bl	10f90 <abort@plt>
   12750:	mov	r6, #0
   12754:	mov	r3, #1
   12758:	str	r3, [sp, #24]
   1275c:	mov	r4, r6
   12760:	b	12578 <close@plt+0x15dc>
   12764:	mov	r6, #1
   12768:	str	r6, [sp, #24]
   1276c:	str	r6, [sp, #32]
   12770:	b	12708 <close@plt+0x176c>
   12774:	mov	r3, #1
   12778:	str	r3, [sp, #32]
   1277c:	ldr	r3, [pc, #2648]	; 131dc <close@plt+0x2240>
   12780:	str	r6, [sp, #24]
   12784:	str	r3, [sp, #40]	; 0x28
   12788:	b	12544 <close@plt+0x15a8>
   1278c:	mov	r3, #1
   12790:	str	r3, [sp, #32]
   12794:	ldr	r3, [pc, #2632]	; 131e4 <close@plt+0x2248>
   12798:	b	12784 <close@plt+0x17e8>
   1279c:	ldr	r3, [sp, #32]
   127a0:	ldr	fp, [sp, #24]
   127a4:	cmp	sl, #2
   127a8:	moveq	fp, #0
   127ac:	andne	fp, fp, #1
   127b0:	adds	r5, r3, #0
   127b4:	movne	r5, #1
   127b8:	ands	r3, r5, fp
   127bc:	str	r3, [sp, #64]	; 0x40
   127c0:	beq	12890 <close@plt+0x18f4>
   127c4:	ldr	r2, [sp, #32]
   127c8:	ldr	r3, [sp, #28]
   127cc:	add	r7, r3, r2
   127d0:	mov	r3, r2
   127d4:	ldr	r2, [sp, #36]	; 0x24
   127d8:	cmp	r3, #1
   127dc:	movls	r3, #0
   127e0:	movhi	r3, #1
   127e4:	cmn	r2, #1
   127e8:	movne	r3, #0
   127ec:	cmp	r3, #0
   127f0:	beq	12800 <close@plt+0x1864>
   127f4:	ldr	r0, [sp, #44]	; 0x2c
   127f8:	bl	10eb8 <strlen@plt>
   127fc:	str	r0, [sp, #36]	; 0x24
   12800:	ldr	r3, [sp, #36]	; 0x24
   12804:	cmp	r3, r7
   12808:	bcc	12888 <close@plt+0x18ec>
   1280c:	ldr	r3, [sp, #44]	; 0x2c
   12810:	ldr	r0, [sp, #28]
   12814:	ldr	r2, [sp, #32]
   12818:	ldr	r1, [sp, #40]	; 0x28
   1281c:	add	r0, r3, r0
   12820:	bl	10d98 <memcmp@plt>
   12824:	cmp	r0, #0
   12828:	bne	12888 <close@plt+0x18ec>
   1282c:	cmp	r6, #0
   12830:	beq	12890 <close@plt+0x18f4>
   12834:	str	r6, [sp, #24]
   12838:	ldr	r3, [sp, #24]
   1283c:	ldr	r2, [sp, #44]	; 0x2c
   12840:	cmp	sl, #2
   12844:	movne	r3, #0
   12848:	andeq	r3, r3, #1
   1284c:	cmp	r3, #0
   12850:	ldr	r3, [sp, #160]	; 0xa0
   12854:	movne	sl, #4
   12858:	str	r3, [sp, #16]
   1285c:	ldr	r3, [sp, #156]	; 0x9c
   12860:	str	sl, [sp]
   12864:	str	r3, [sp, #12]
   12868:	mov	r3, #0
   1286c:	str	r3, [sp, #8]
   12870:	ldr	r3, [sp, #148]	; 0x94
   12874:	mov	r1, r9
   12878:	bic	r3, r3, #2
   1287c:	str	r3, [sp, #4]
   12880:	ldr	r3, [sp, #36]	; 0x24
   12884:	b	12634 <close@plt+0x1698>
   12888:	mov	r3, #0
   1288c:	str	r3, [sp, #64]	; 0x40
   12890:	ldr	r2, [sp, #28]
   12894:	ldr	r3, [sp, #44]	; 0x2c
   12898:	add	r3, r3, r2
   1289c:	str	r3, [sp, #80]	; 0x50
   128a0:	ldr	r3, [sp, #44]	; 0x2c
   128a4:	ldrb	r7, [r3, r2]
   128a8:	cmp	r7, #58	; 0x3a
   128ac:	bhi	12a14 <close@plt+0x1a78>
   128b0:	cmp	r7, #43	; 0x2b
   128b4:	bcs	12a68 <close@plt+0x1acc>
   128b8:	cmp	r7, #32
   128bc:	beq	12ac0 <close@plt+0x1b24>
   128c0:	bhi	1296c <close@plt+0x19d0>
   128c4:	cmp	r7, #9
   128c8:	beq	12d74 <close@plt+0x1dd8>
   128cc:	bhi	12930 <close@plt+0x1994>
   128d0:	cmp	r7, #7
   128d4:	beq	12e20 <close@plt+0x1e84>
   128d8:	bhi	12adc <close@plt+0x1b40>
   128dc:	cmp	r7, #0
   128e0:	beq	12af8 <close@plt+0x1b5c>
   128e4:	ldr	r3, [sp, #76]	; 0x4c
   128e8:	cmp	r3, #1
   128ec:	bne	12e64 <close@plt+0x1ec8>
   128f0:	bl	10ea0 <__ctype_b_loc@plt>
   128f4:	sxth	r3, r7
   128f8:	lsl	r3, r3, #1
   128fc:	ldr	r2, [r0]
   12900:	ldrh	r5, [r2, r3]
   12904:	ldr	r3, [sp, #76]	; 0x4c
   12908:	str	r3, [sp, #56]	; 0x38
   1290c:	lsr	r5, r5, #14
   12910:	and	r5, r5, #1
   12914:	ldr	r3, [sp, #24]
   12918:	eor	fp, r5, #1
   1291c:	and	fp, fp, r3
   12920:	ands	fp, fp, #255	; 0xff
   12924:	beq	12cac <close@plt+0x1d10>
   12928:	mov	r5, #0
   1292c:	b	12f10 <close@plt+0x1f74>
   12930:	cmp	r7, #11
   12934:	beq	12d7c <close@plt+0x1de0>
   12938:	bcc	12e18 <close@plt+0x1e7c>
   1293c:	cmp	r7, #12
   12940:	beq	12e28 <close@plt+0x1e8c>
   12944:	cmp	r7, #13
   12948:	moveq	r3, #114	; 0x72
   1294c:	bne	128e4 <close@plt+0x1948>
   12950:	cmp	sl, #2
   12954:	movne	r2, #0
   12958:	andeq	r2, r6, #1
   1295c:	cmp	r2, #0
   12960:	beq	12ae0 <close@plt+0x1b44>
   12964:	mov	sl, #2
   12968:	b	12838 <close@plt+0x189c>
   1296c:	cmp	r7, #37	; 0x25
   12970:	beq	12a68 <close@plt+0x1acc>
   12974:	bhi	12988 <close@plt+0x19ec>
   12978:	cmp	r7, #35	; 0x23
   1297c:	beq	12ab4 <close@plt+0x1b18>
   12980:	mov	r5, #0
   12984:	b	12ac4 <close@plt+0x1b28>
   12988:	cmp	r7, #39	; 0x27
   1298c:	bne	12980 <close@plt+0x19e4>
   12990:	cmp	sl, #2
   12994:	ldrne	r5, [sp, #52]	; 0x34
   12998:	movne	r3, r5
   1299c:	strne	r3, [sp, #68]	; 0x44
   129a0:	bne	12a6c <close@plt+0x1ad0>
   129a4:	cmp	r6, #0
   129a8:	bne	12838 <close@plt+0x189c>
   129ac:	ldr	r2, [sp, #60]	; 0x3c
   129b0:	adds	r3, r9, #0
   129b4:	movne	r3, #1
   129b8:	cmp	r2, #0
   129bc:	movne	r3, #0
   129c0:	cmp	r3, #0
   129c4:	strne	r9, [sp, #60]	; 0x3c
   129c8:	movne	r9, #0
   129cc:	bne	129dc <close@plt+0x1a40>
   129d0:	cmp	r9, r4
   129d4:	movhi	r3, #39	; 0x27
   129d8:	strbhi	r3, [r8, r4]
   129dc:	add	r3, r4, #1
   129e0:	cmp	r3, r9
   129e4:	movcc	r2, #92	; 0x5c
   129e8:	strbcc	r2, [r8, r3]
   129ec:	add	r3, r4, #2
   129f0:	cmp	r3, r9
   129f4:	ldr	r5, [sp, #52]	; 0x34
   129f8:	movcc	r2, #39	; 0x27
   129fc:	strbcc	r2, [r8, r3]
   12a00:	add	r4, r4, #3
   12a04:	mov	fp, r6
   12a08:	str	r5, [sp, #68]	; 0x44
   12a0c:	str	r6, [sp, #48]	; 0x30
   12a10:	b	12cac <close@plt+0x1d10>
   12a14:	cmp	r7, #94	; 0x5e
   12a18:	beq	12980 <close@plt+0x19e4>
   12a1c:	bhi	12a74 <close@plt+0x1ad8>
   12a20:	cmp	r7, #90	; 0x5a
   12a24:	bhi	12a5c <close@plt+0x1ac0>
   12a28:	cmp	r7, #65	; 0x41
   12a2c:	bcs	12a68 <close@plt+0x1acc>
   12a30:	cmp	r7, #62	; 0x3e
   12a34:	bls	12980 <close@plt+0x19e4>
   12a38:	cmp	r7, #63	; 0x3f
   12a3c:	bne	128e4 <close@plt+0x1948>
   12a40:	cmp	sl, #2
   12a44:	beq	12be8 <close@plt+0x1c4c>
   12a48:	cmp	sl, #5
   12a4c:	beq	12bf8 <close@plt+0x1c5c>
   12a50:	mov	fp, #0
   12a54:	mov	r5, fp
   12a58:	b	12cac <close@plt+0x1d10>
   12a5c:	cmp	r7, #92	; 0x5c
   12a60:	beq	12d84 <close@plt+0x1de8>
   12a64:	bls	12980 <close@plt+0x19e4>
   12a68:	ldr	r5, [sp, #52]	; 0x34
   12a6c:	mov	fp, #0
   12a70:	b	12cac <close@plt+0x1d10>
   12a74:	cmp	r7, #122	; 0x7a
   12a78:	bhi	12a98 <close@plt+0x1afc>
   12a7c:	cmp	r7, #97	; 0x61
   12a80:	bcs	12a68 <close@plt+0x1acc>
   12a84:	cmp	r7, #95	; 0x5f
   12a88:	beq	12a68 <close@plt+0x1acc>
   12a8c:	cmp	r7, #96	; 0x60
   12a90:	bne	128e4 <close@plt+0x1948>
   12a94:	b	12980 <close@plt+0x19e4>
   12a98:	cmp	r7, #124	; 0x7c
   12a9c:	beq	12980 <close@plt+0x19e4>
   12aa0:	bcc	12e30 <close@plt+0x1e94>
   12aa4:	cmp	r7, #125	; 0x7d
   12aa8:	beq	12e30 <close@plt+0x1e94>
   12aac:	cmp	r7, #126	; 0x7e
   12ab0:	bne	128e4 <close@plt+0x1948>
   12ab4:	ldr	r3, [sp, #28]
   12ab8:	cmp	r3, #0
   12abc:	bne	12bf0 <close@plt+0x1c54>
   12ac0:	ldr	r5, [sp, #52]	; 0x34
   12ac4:	cmp	sl, #2
   12ac8:	movne	fp, #0
   12acc:	andeq	fp, r6, #1
   12ad0:	cmp	fp, #0
   12ad4:	beq	12cac <close@plt+0x1d10>
   12ad8:	b	12964 <close@plt+0x19c8>
   12adc:	mov	r3, #98	; 0x62
   12ae0:	ldr	r2, [sp, #24]
   12ae4:	cmp	r2, #0
   12ae8:	beq	12bf0 <close@plt+0x1c54>
   12aec:	mov	r7, r3
   12af0:	mov	r5, #0
   12af4:	b	12d04 <close@plt+0x1d68>
   12af8:	ldr	r3, [sp, #24]
   12afc:	cmp	r3, #0
   12b00:	beq	12bcc <close@plt+0x1c30>
   12b04:	cmp	r6, #0
   12b08:	bne	12834 <close@plt+0x1898>
   12b0c:	ldr	r3, [sp, #48]	; 0x30
   12b10:	eor	r2, r3, #1
   12b14:	cmp	sl, #2
   12b18:	movne	r2, #0
   12b1c:	andeq	r2, r2, #1
   12b20:	cmp	r2, #0
   12b24:	moveq	r3, r4
   12b28:	beq	12b60 <close@plt+0x1bc4>
   12b2c:	cmp	r9, r4
   12b30:	movhi	r3, #39	; 0x27
   12b34:	strbhi	r3, [r8, r4]
   12b38:	add	r3, r4, #1
   12b3c:	cmp	r9, r3
   12b40:	movhi	r1, #36	; 0x24
   12b44:	strbhi	r1, [r8, r3]
   12b48:	add	r3, r4, #2
   12b4c:	cmp	r9, r3
   12b50:	movhi	r1, #39	; 0x27
   12b54:	strbhi	r1, [r8, r3]
   12b58:	add	r3, r4, #3
   12b5c:	str	r2, [sp, #48]	; 0x30
   12b60:	cmp	r9, r3
   12b64:	movhi	r2, #92	; 0x5c
   12b68:	strbhi	r2, [r8, r3]
   12b6c:	cmp	fp, #0
   12b70:	add	r4, r3, #1
   12b74:	beq	13104 <close@plt+0x2168>
   12b78:	ldr	r2, [sp, #28]
   12b7c:	ldr	r1, [sp, #36]	; 0x24
   12b80:	add	r2, r2, #1
   12b84:	cmp	r1, r2
   12b88:	bls	12bc4 <close@plt+0x1c28>
   12b8c:	ldr	r1, [sp, #44]	; 0x2c
   12b90:	mov	r7, #48	; 0x30
   12b94:	ldrb	r2, [r1, r2]
   12b98:	sub	r2, r2, #48	; 0x30
   12b9c:	cmp	r2, #9
   12ba0:	movhi	r5, r6
   12ba4:	bhi	12cac <close@plt+0x1d10>
   12ba8:	cmp	r9, r4
   12bac:	add	r2, r3, #2
   12bb0:	strbhi	r7, [r8, r4]
   12bb4:	cmp	r9, r2
   12bb8:	add	r4, r3, #3
   12bbc:	movhi	r1, #48	; 0x30
   12bc0:	strbhi	r1, [r8, r2]
   12bc4:	mov	r5, r6
   12bc8:	b	1310c <close@plt+0x2170>
   12bcc:	ldr	r3, [sp, #148]	; 0x94
   12bd0:	tst	r3, #1
   12bd4:	ldreq	r5, [sp, #24]
   12bd8:	beq	13118 <close@plt+0x217c>
   12bdc:	ldr	r3, [sp, #28]
   12be0:	add	r3, r3, #1
   12be4:	b	12584 <close@plt+0x15e8>
   12be8:	cmp	r6, #0
   12bec:	bne	12838 <close@plt+0x189c>
   12bf0:	mov	r5, #0
   12bf4:	b	12a6c <close@plt+0x1ad0>
   12bf8:	ldr	r3, [sp, #148]	; 0x94
   12bfc:	tst	r3, #4
   12c00:	beq	12bf0 <close@plt+0x1c54>
   12c04:	ldr	r3, [sp, #28]
   12c08:	add	r2, r3, #2
   12c0c:	ldr	r3, [sp, #36]	; 0x24
   12c10:	cmp	r3, r2
   12c14:	bls	12bf0 <close@plt+0x1c54>
   12c18:	ldr	r3, [sp, #44]	; 0x2c
   12c1c:	ldr	r1, [sp, #28]
   12c20:	add	r3, r3, r1
   12c24:	ldrb	r0, [r3, #1]
   12c28:	cmp	r0, #63	; 0x3f
   12c2c:	bne	12bf0 <close@plt+0x1c54>
   12c30:	ldr	r3, [sp, #44]	; 0x2c
   12c34:	ldrb	r1, [r3, r2]
   12c38:	sub	r3, r1, #33	; 0x21
   12c3c:	uxtb	r3, r3
   12c40:	cmp	r3, #29
   12c44:	bhi	13114 <close@plt+0x2178>
   12c48:	mov	ip, #1
   12c4c:	ldr	r5, [pc, #1428]	; 131e8 <close@plt+0x224c>
   12c50:	ands	r5, r5, ip, lsl r3
   12c54:	beq	12a6c <close@plt+0x1ad0>
   12c58:	cmp	r6, #0
   12c5c:	bne	12838 <close@plt+0x189c>
   12c60:	add	r3, r4, #1
   12c64:	cmp	r9, r4
   12c68:	strbhi	r0, [r8, r4]
   12c6c:	cmp	r9, r3
   12c70:	movhi	r0, #34	; 0x22
   12c74:	strbhi	r0, [r8, r3]
   12c78:	add	r3, r4, #2
   12c7c:	cmp	r9, r3
   12c80:	movhi	r0, #34	; 0x22
   12c84:	strbhi	r0, [r8, r3]
   12c88:	add	r3, r4, #3
   12c8c:	cmp	r9, r3
   12c90:	add	r4, r4, #4
   12c94:	mov	r5, r6
   12c98:	mov	fp, r6
   12c9c:	mov	r7, r1
   12ca0:	movhi	r0, #63	; 0x3f
   12ca4:	strbhi	r0, [r8, r3]
   12ca8:	str	r2, [sp, #28]
   12cac:	ldr	r3, [sp, #24]
   12cb0:	eor	r3, r3, #1
   12cb4:	cmp	sl, #2
   12cb8:	orreq	r3, r3, #1
   12cbc:	eor	r3, r3, #1
   12cc0:	orr	r3, r6, r3
   12cc4:	tst	r3, #255	; 0xff
   12cc8:	beq	12cf8 <close@plt+0x1d5c>
   12ccc:	ldr	r3, [sp, #152]	; 0x98
   12cd0:	cmp	r3, #0
   12cd4:	beq	12cf8 <close@plt+0x1d5c>
   12cd8:	lsr	r2, r7, #5
   12cdc:	ldr	r1, [sp, #152]	; 0x98
   12ce0:	uxtb	r2, r2
   12ce4:	and	r3, r7, #31
   12ce8:	ldr	r2, [r1, r2, lsl #2]
   12cec:	lsr	r3, r2, r3
   12cf0:	tst	r3, #1
   12cf4:	bne	12d04 <close@plt+0x1d68>
   12cf8:	ldr	r3, [sp, #64]	; 0x40
   12cfc:	cmp	r3, #0
   12d00:	beq	12d9c <close@plt+0x1e00>
   12d04:	cmp	r6, #0
   12d08:	bne	12838 <close@plt+0x189c>
   12d0c:	ldr	r3, [sp, #48]	; 0x30
   12d10:	eor	r3, r3, #1
   12d14:	cmp	sl, #2
   12d18:	movne	r3, #0
   12d1c:	andeq	r3, r3, #1
   12d20:	cmp	r3, #0
   12d24:	beq	12d5c <close@plt+0x1dc0>
   12d28:	cmp	r9, r4
   12d2c:	movhi	r2, #39	; 0x27
   12d30:	strbhi	r2, [r8, r4]
   12d34:	add	r2, r4, #1
   12d38:	cmp	r9, r2
   12d3c:	movhi	r1, #36	; 0x24
   12d40:	strbhi	r1, [r8, r2]
   12d44:	add	r2, r4, #2
   12d48:	cmp	r9, r2
   12d4c:	add	r4, r4, #3
   12d50:	movhi	r1, #39	; 0x27
   12d54:	strbhi	r1, [r8, r2]
   12d58:	str	r3, [sp, #48]	; 0x30
   12d5c:	cmp	r9, r4
   12d60:	movhi	r3, #92	; 0x5c
   12d64:	strbhi	r3, [r8, r4]
   12d68:	ldr	fp, [sp, #52]	; 0x34
   12d6c:	add	r4, r4, #1
   12d70:	b	12d9c <close@plt+0x1e00>
   12d74:	mov	r3, #116	; 0x74
   12d78:	b	12950 <close@plt+0x19b4>
   12d7c:	mov	r3, #118	; 0x76
   12d80:	b	12ae0 <close@plt+0x1b44>
   12d84:	cmp	sl, #2
   12d88:	bne	12df8 <close@plt+0x1e5c>
   12d8c:	cmp	r6, #0
   12d90:	bne	12838 <close@plt+0x189c>
   12d94:	mov	r5, r6
   12d98:	mov	fp, r6
   12d9c:	ldr	r3, [sp, #48]	; 0x30
   12da0:	eor	fp, fp, #1
   12da4:	and	fp, fp, r3
   12da8:	tst	fp, #255	; 0xff
   12dac:	beq	12dd8 <close@plt+0x1e3c>
   12db0:	cmp	r9, r4
   12db4:	movhi	r3, #39	; 0x27
   12db8:	strbhi	r3, [r8, r4]
   12dbc:	add	r3, r4, #1
   12dc0:	cmp	r9, r3
   12dc4:	movhi	r2, #39	; 0x27
   12dc8:	add	r4, r4, #2
   12dcc:	strbhi	r2, [r8, r3]
   12dd0:	mov	r3, #0
   12dd4:	str	r3, [sp, #48]	; 0x30
   12dd8:	cmp	r9, r4
   12ddc:	strbhi	r7, [r8, r4]
   12de0:	ldr	r3, [sp, #72]	; 0x48
   12de4:	cmp	r5, #0
   12de8:	moveq	r3, #0
   12dec:	add	r4, r4, #1
   12df0:	str	r3, [sp, #72]	; 0x48
   12df4:	b	12bdc <close@plt+0x1c40>
   12df8:	ldr	r3, [sp, #24]
   12dfc:	and	r3, r3, r6
   12e00:	tst	r5, r3
   12e04:	moveq	r3, r7
   12e08:	beq	12950 <close@plt+0x19b4>
   12e0c:	mov	fp, #0
   12e10:	mov	r5, fp
   12e14:	b	12d9c <close@plt+0x1e00>
   12e18:	mov	r3, #110	; 0x6e
   12e1c:	b	12950 <close@plt+0x19b4>
   12e20:	mov	r3, #97	; 0x61
   12e24:	b	12ae0 <close@plt+0x1b44>
   12e28:	mov	r3, #102	; 0x66
   12e2c:	b	12ae0 <close@plt+0x1b44>
   12e30:	ldr	r3, [sp, #36]	; 0x24
   12e34:	cmn	r3, #1
   12e38:	bne	12e58 <close@plt+0x1ebc>
   12e3c:	ldr	r3, [sp, #44]	; 0x2c
   12e40:	ldrb	r3, [r3, #1]
   12e44:	adds	r3, r3, #0
   12e48:	movne	r3, #1
   12e4c:	cmp	r3, #0
   12e50:	bne	12bf0 <close@plt+0x1c54>
   12e54:	b	12ab4 <close@plt+0x1b18>
   12e58:	ldr	r3, [sp, #36]	; 0x24
   12e5c:	subs	r3, r3, #1
   12e60:	b	12e48 <close@plt+0x1eac>
   12e64:	mov	r3, #0
   12e68:	str	r3, [sp, #96]	; 0x60
   12e6c:	str	r3, [sp, #100]	; 0x64
   12e70:	ldr	r3, [sp, #36]	; 0x24
   12e74:	cmn	r3, #1
   12e78:	bne	12e88 <close@plt+0x1eec>
   12e7c:	ldr	r0, [sp, #44]	; 0x2c
   12e80:	bl	10eb8 <strlen@plt>
   12e84:	str	r0, [sp, #36]	; 0x24
   12e88:	ldr	r5, [sp, #52]	; 0x34
   12e8c:	mov	r3, #0
   12e90:	str	r3, [sp, #56]	; 0x38
   12e94:	ldr	r3, [sp, #28]
   12e98:	ldr	r2, [sp, #56]	; 0x38
   12e9c:	ldr	r1, [sp, #36]	; 0x24
   12ea0:	add	r2, r3, r2
   12ea4:	ldr	r3, [sp, #44]	; 0x2c
   12ea8:	add	r0, sp, #92	; 0x5c
   12eac:	add	fp, r3, r2
   12eb0:	sub	r2, r1, r2
   12eb4:	add	r3, sp, #96	; 0x60
   12eb8:	mov	r1, fp
   12ebc:	bl	146e4 <close@plt+0x3748>
   12ec0:	subs	r2, r0, #0
   12ec4:	beq	12f04 <close@plt+0x1f68>
   12ec8:	cmn	r2, #1
   12ecc:	beq	130dc <close@plt+0x2140>
   12ed0:	cmn	r2, #2
   12ed4:	bne	1304c <close@plt+0x20b0>
   12ed8:	ldr	r2, [sp, #56]	; 0x38
   12edc:	ldr	r3, [sp, #28]
   12ee0:	add	r3, r3, r2
   12ee4:	ldr	r2, [sp, #36]	; 0x24
   12ee8:	cmp	r2, r3
   12eec:	bls	130dc <close@plt+0x2140>
   12ef0:	ldr	r3, [sp, #80]	; 0x50
   12ef4:	ldr	r2, [sp, #56]	; 0x38
   12ef8:	ldrb	r5, [r3, r2]
   12efc:	cmp	r5, #0
   12f00:	bne	1303c <close@plt+0x20a0>
   12f04:	ldr	r3, [sp, #56]	; 0x38
   12f08:	cmp	r3, #1
   12f0c:	bls	12914 <close@plt+0x1978>
   12f10:	ldr	r2, [sp, #56]	; 0x38
   12f14:	ldr	r3, [sp, #28]
   12f18:	mov	fp, #0
   12f1c:	add	r3, r3, r2
   12f20:	ldr	r2, [sp, #24]
   12f24:	str	r3, [sp, #52]	; 0x34
   12f28:	eor	r3, r5, #1
   12f2c:	and	r3, r3, r2
   12f30:	mov	ip, #92	; 0x5c
   12f34:	uxtb	r3, r3
   12f38:	mov	r2, #39	; 0x27
   12f3c:	cmp	r3, #0
   12f40:	beq	130e4 <close@plt+0x2148>
   12f44:	cmp	r6, #0
   12f48:	bne	12834 <close@plt+0x1898>
   12f4c:	ldr	r1, [sp, #48]	; 0x30
   12f50:	eor	r1, r1, #1
   12f54:	cmp	sl, #2
   12f58:	movne	r1, #0
   12f5c:	andeq	r1, r1, #1
   12f60:	cmp	r1, #0
   12f64:	beq	12f94 <close@plt+0x1ff8>
   12f68:	add	r0, r4, #1
   12f6c:	cmp	r9, r4
   12f70:	strbhi	r2, [r8, r4]
   12f74:	cmp	r9, r0
   12f78:	movhi	lr, #36	; 0x24
   12f7c:	strbhi	lr, [r8, r0]
   12f80:	add	r0, r4, #2
   12f84:	add	r4, r4, #3
   12f88:	cmp	r9, r0
   12f8c:	strbhi	r2, [r8, r0]
   12f90:	str	r1, [sp, #48]	; 0x30
   12f94:	add	r0, r4, #1
   12f98:	cmp	r9, r4
   12f9c:	strbhi	ip, [r8, r4]
   12fa0:	cmp	r9, r0
   12fa4:	lsrhi	r1, r7, #6
   12fa8:	addhi	r1, r1, #48	; 0x30
   12fac:	strbhi	r1, [r8, r0]
   12fb0:	add	r0, r4, #2
   12fb4:	cmp	r9, r0
   12fb8:	lsrhi	r1, r7, #3
   12fbc:	and	r7, r7, #7
   12fc0:	andhi	r1, r1, #7
   12fc4:	add	r4, r4, #3
   12fc8:	add	r7, r7, #48	; 0x30
   12fcc:	mov	fp, r3
   12fd0:	addhi	r1, r1, #48	; 0x30
   12fd4:	strbhi	r1, [r8, r0]
   12fd8:	ldr	r1, [sp, #28]
   12fdc:	ldr	r0, [sp, #52]	; 0x34
   12fe0:	add	r1, r1, #1
   12fe4:	cmp	r0, r1
   12fe8:	bls	12d9c <close@plt+0x1e00>
   12fec:	ldr	lr, [sp, #48]	; 0x30
   12ff0:	eor	r0, fp, #1
   12ff4:	and	r0, r0, lr
   12ff8:	tst	r0, #255	; 0xff
   12ffc:	beq	13020 <close@plt+0x2084>
   13000:	add	r0, r4, #1
   13004:	cmp	r9, r4
   13008:	strbhi	r2, [r8, r4]
   1300c:	cmp	r9, r0
   13010:	add	r4, r4, #2
   13014:	strbhi	r2, [r8, r0]
   13018:	mov	r0, #0
   1301c:	str	r0, [sp, #48]	; 0x30
   13020:	ldr	r0, [sp, #44]	; 0x2c
   13024:	cmp	r9, r4
   13028:	strbhi	r7, [r8, r4]
   1302c:	str	r1, [sp, #28]
   13030:	add	r4, r4, #1
   13034:	ldrb	r7, [r0, r1]
   13038:	b	12f3c <close@plt+0x1fa0>
   1303c:	ldr	r3, [sp, #56]	; 0x38
   13040:	add	r3, r3, #1
   13044:	str	r3, [sp, #56]	; 0x38
   13048:	b	12ed8 <close@plt+0x1f3c>
   1304c:	cmp	sl, #2
   13050:	movne	r3, #0
   13054:	andeq	r3, r6, #1
   13058:	cmp	r3, #0
   1305c:	movne	r1, #1
   13060:	bne	130bc <close@plt+0x2120>
   13064:	ldr	r0, [sp, #92]	; 0x5c
   13068:	str	r2, [sp, #84]	; 0x54
   1306c:	bl	10de0 <iswprint@plt>
   13070:	ldr	r3, [sp, #56]	; 0x38
   13074:	ldr	r2, [sp, #84]	; 0x54
   13078:	add	r3, r3, r2
   1307c:	str	r3, [sp, #56]	; 0x38
   13080:	cmp	r0, #0
   13084:	add	r0, sp, #96	; 0x60
   13088:	moveq	r5, #0
   1308c:	bl	10d8c <mbsinit@plt>
   13090:	cmp	r0, #0
   13094:	beq	12e94 <close@plt+0x1ef8>
   13098:	b	12f04 <close@plt+0x1f68>
   1309c:	ldrb	r3, [fp, r1]
   130a0:	cmp	r3, #94	; 0x5e
   130a4:	beq	12964 <close@plt+0x19c8>
   130a8:	bhi	130c8 <close@plt+0x212c>
   130ac:	sub	r3, r3, #91	; 0x5b
   130b0:	cmp	r3, #1
   130b4:	bls	12964 <close@plt+0x19c8>
   130b8:	add	r1, r1, #1
   130bc:	cmp	r1, r2
   130c0:	bne	1309c <close@plt+0x2100>
   130c4:	b	13064 <close@plt+0x20c8>
   130c8:	cmp	r3, #96	; 0x60
   130cc:	beq	12964 <close@plt+0x19c8>
   130d0:	cmp	r3, #124	; 0x7c
   130d4:	bne	130b8 <close@plt+0x211c>
   130d8:	b	12964 <close@plt+0x19c8>
   130dc:	mov	r5, #0
   130e0:	b	12f04 <close@plt+0x1f68>
   130e4:	ldr	r1, [sp, #64]	; 0x40
   130e8:	cmp	r1, #0
   130ec:	beq	12fd8 <close@plt+0x203c>
   130f0:	cmp	r9, r4
   130f4:	strbhi	ip, [r8, r4]
   130f8:	str	r3, [sp, #64]	; 0x40
   130fc:	add	r4, r4, #1
   13100:	b	12fd8 <close@plt+0x203c>
   13104:	mov	r5, fp
   13108:	ldr	fp, [sp, #24]
   1310c:	mov	r7, #48	; 0x30
   13110:	b	12cac <close@plt+0x1d10>
   13114:	mov	r5, #0
   13118:	mov	fp, r5
   1311c:	b	12cac <close@plt+0x1d10>
   13120:	ldr	r3, [sp, #36]	; 0x24
   13124:	ldr	r2, [sp, #28]
   13128:	subs	r3, r3, r2
   1312c:	movne	r3, #1
   13130:	b	125a8 <close@plt+0x160c>
   13134:	ldr	r3, [sp, #60]	; 0x3c
   13138:	clz	r7, r9
   1313c:	cmp	r3, #0
   13140:	lsr	r7, r7, #5
   13144:	moveq	r7, #0
   13148:	cmp	r7, #0
   1314c:	mov	r5, r3
   13150:	bne	12508 <close@plt+0x156c>
   13154:	ldr	r3, [sp, #68]	; 0x44
   13158:	ldr	r2, [sp, #40]	; 0x28
   1315c:	cmp	r2, #0
   13160:	moveq	r3, #0
   13164:	andne	r3, r3, #1
   13168:	cmp	r3, #0
   1316c:	movne	r3, r2
   13170:	subne	r2, r3, #1
   13174:	bne	131a4 <close@plt+0x2208>
   13178:	cmp	r9, r4
   1317c:	movhi	r3, #0
   13180:	strbhi	r3, [r8, r4]
   13184:	mov	r0, r4
   13188:	add	sp, sp, #108	; 0x6c
   1318c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13190:	mov	r3, r2
   13194:	b	13158 <close@plt+0x21bc>
   13198:	cmp	r9, r4
   1319c:	strbhi	r3, [r8, r4]
   131a0:	add	r4, r4, #1
   131a4:	ldrb	r3, [r2, #1]!
   131a8:	cmp	r3, #0
   131ac:	bne	13198 <close@plt+0x21fc>
   131b0:	b	13178 <close@plt+0x21dc>
   131b4:	ldr	r3, [pc, #32]	; 131dc <close@plt+0x2240>
   131b8:	mov	r6, #1
   131bc:	str	r6, [sp, #24]
   131c0:	str	r6, [sp, #32]
   131c4:	str	r3, [sp, #40]	; 0x28
   131c8:	mov	r4, #0
   131cc:	mov	sl, #5
   131d0:	b	12578 <close@plt+0x15dc>
   131d4:	mov	r6, #1
   131d8:	b	1276c <close@plt+0x17d0>
   131dc:	strdeq	r5, [r1], -pc	; <UNPREDICTABLE>
   131e0:	andeq	r5, r1, r3, lsl #10
   131e4:	andeq	r5, r1, r1, lsl #10
   131e8:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   131ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131f0:	sub	sp, sp, #52	; 0x34
   131f4:	mov	r6, r0
   131f8:	mov	r5, r3
   131fc:	mov	r8, r1
   13200:	mov	r9, r2
   13204:	bl	10ed0 <__errno_location@plt>
   13208:	ldr	r7, [pc, #380]	; 1338c <close@plt+0x23f0>
   1320c:	cmn	r6, #-2147483647	; 0x80000001
   13210:	ldr	r4, [r7]
   13214:	ldr	r3, [r0]
   13218:	str	r0, [sp, #24]
   1321c:	str	r3, [sp, #32]
   13220:	movne	r3, #0
   13224:	moveq	r3, #1
   13228:	orrs	r3, r3, r6, lsr #31
   1322c:	beq	13234 <close@plt+0x2298>
   13230:	bl	10f90 <abort@plt>
   13234:	ldr	r2, [r7, #4]
   13238:	cmp	r6, r2
   1323c:	blt	132ac <close@plt+0x2310>
   13240:	add	r1, sp, #48	; 0x30
   13244:	add	sl, r7, #8
   13248:	str	r2, [r1, #-4]!
   1324c:	cmp	r4, sl
   13250:	mov	r3, #8
   13254:	sub	r2, r6, r2
   13258:	movne	r0, r4
   1325c:	str	r3, [sp]
   13260:	add	r2, r2, #1
   13264:	mvn	r3, #-2147483648	; 0x80000000
   13268:	moveq	r0, #0
   1326c:	bl	1406c <close@plt+0x30d0>
   13270:	cmp	r4, sl
   13274:	ldr	r2, [sp, #44]	; 0x2c
   13278:	mov	fp, r0
   1327c:	str	r0, [r7]
   13280:	ldmeq	r4, {r0, r1}
   13284:	mov	r4, fp
   13288:	stmeq	fp, {r0, r1}
   1328c:	ldr	r0, [r7, #4]
   13290:	mov	r1, #0
   13294:	sub	r2, r2, r0
   13298:	add	r0, fp, r0, lsl #3
   1329c:	lsl	r2, r2, #3
   132a0:	bl	10ee8 <memset@plt>
   132a4:	ldr	r3, [sp, #44]	; 0x2c
   132a8:	str	r3, [r7, #4]
   132ac:	ldr	r3, [r5, #4]
   132b0:	add	sl, r4, r6, lsl #3
   132b4:	orr	r3, r3, #1
   132b8:	str	r3, [sp, #28]
   132bc:	add	r3, r5, #8
   132c0:	str	r3, [sp, #36]	; 0x24
   132c4:	ldr	r3, [r5, #44]	; 0x2c
   132c8:	ldr	fp, [r4, r6, lsl #3]
   132cc:	ldr	r7, [sl, #4]
   132d0:	str	r3, [sp, #16]
   132d4:	ldr	r3, [r5, #40]	; 0x28
   132d8:	mov	r2, r8
   132dc:	str	r3, [sp, #12]
   132e0:	add	r3, r5, #8
   132e4:	str	r3, [sp, #8]
   132e8:	ldr	r3, [sp, #28]
   132ec:	mov	r1, fp
   132f0:	str	r3, [sp, #4]
   132f4:	ldr	r3, [r5]
   132f8:	mov	r0, r7
   132fc:	str	r3, [sp]
   13300:	mov	r3, r9
   13304:	bl	124b8 <close@plt+0x151c>
   13308:	cmp	fp, r0
   1330c:	bhi	13374 <close@plt+0x23d8>
   13310:	ldr	r3, [pc, #120]	; 13390 <close@plt+0x23f4>
   13314:	add	fp, r0, #1
   13318:	cmp	r7, r3
   1331c:	str	fp, [r4, r6, lsl #3]
   13320:	beq	1332c <close@plt+0x2390>
   13324:	mov	r0, r7
   13328:	bl	12214 <close@plt+0x1278>
   1332c:	mov	r0, fp
   13330:	bl	13f24 <close@plt+0x2f88>
   13334:	ldr	r3, [r5, #44]	; 0x2c
   13338:	mov	r2, r8
   1333c:	mov	r1, fp
   13340:	str	r0, [sl, #4]
   13344:	str	r3, [sp, #16]
   13348:	ldr	r3, [r5, #40]	; 0x28
   1334c:	mov	r7, r0
   13350:	str	r3, [sp, #12]
   13354:	add	r3, r5, #8
   13358:	str	r3, [sp, #8]
   1335c:	ldr	r3, [sp, #28]
   13360:	str	r3, [sp, #4]
   13364:	ldr	r3, [r5]
   13368:	str	r3, [sp]
   1336c:	mov	r3, r9
   13370:	bl	124b8 <close@plt+0x151c>
   13374:	ldr	r3, [sp, #24]
   13378:	ldr	r2, [sp, #32]
   1337c:	mov	r0, r7
   13380:	str	r2, [r3]
   13384:	add	sp, sp, #52	; 0x34
   13388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1338c:	andeq	r6, r2, ip, lsl r1
   13390:	muleq	r2, r8, r1
   13394:	push	{r4, r5, r6, lr}
   13398:	mov	r5, r0
   1339c:	bl	10ed0 <__errno_location@plt>
   133a0:	cmp	r5, #0
   133a4:	mov	r1, #48	; 0x30
   133a8:	ldr	r6, [r0]
   133ac:	mov	r4, r0
   133b0:	ldr	r0, [pc, #12]	; 133c4 <close@plt+0x2428>
   133b4:	movne	r0, r5
   133b8:	bl	14300 <close@plt+0x3364>
   133bc:	str	r6, [r4]
   133c0:	pop	{r4, r5, r6, pc}
   133c4:	muleq	r2, r8, r2
   133c8:	ldr	r3, [pc, #12]	; 133dc <close@plt+0x2440>
   133cc:	cmp	r0, #0
   133d0:	moveq	r0, r3
   133d4:	ldr	r0, [r0]
   133d8:	bx	lr
   133dc:	muleq	r2, r8, r2
   133e0:	ldr	r3, [pc, #12]	; 133f4 <close@plt+0x2458>
   133e4:	cmp	r0, #0
   133e8:	moveq	r0, r3
   133ec:	str	r1, [r0]
   133f0:	bx	lr
   133f4:	muleq	r2, r8, r2
   133f8:	ldr	r3, [pc, #52]	; 13434 <close@plt+0x2498>
   133fc:	cmp	r0, #0
   13400:	moveq	r0, r3
   13404:	add	r3, r0, #8
   13408:	push	{lr}		; (str lr, [sp, #-4]!)
   1340c:	lsr	lr, r1, #5
   13410:	and	r1, r1, #31
   13414:	ldr	ip, [r3, lr, lsl #2]
   13418:	lsr	r0, ip, r1
   1341c:	eor	r2, r2, r0
   13420:	and	r2, r2, #1
   13424:	and	r0, r0, #1
   13428:	eor	r1, ip, r2, lsl r1
   1342c:	str	r1, [r3, lr, lsl #2]
   13430:	pop	{pc}		; (ldr pc, [sp], #4)
   13434:	muleq	r2, r8, r2
   13438:	ldr	r3, [pc, #16]	; 13450 <close@plt+0x24b4>
   1343c:	cmp	r0, #0
   13440:	movne	r3, r0
   13444:	ldr	r0, [r3, #4]
   13448:	str	r1, [r3, #4]
   1344c:	bx	lr
   13450:	muleq	r2, r8, r2
   13454:	ldr	r3, [pc, #44]	; 13488 <close@plt+0x24ec>
   13458:	cmp	r0, #0
   1345c:	moveq	r0, r3
   13460:	mov	r3, #10
   13464:	cmp	r2, #0
   13468:	cmpne	r1, #0
   1346c:	str	r3, [r0]
   13470:	bne	1347c <close@plt+0x24e0>
   13474:	push	{r4, lr}
   13478:	bl	10f90 <abort@plt>
   1347c:	str	r1, [r0, #40]	; 0x28
   13480:	str	r2, [r0, #44]	; 0x2c
   13484:	bx	lr
   13488:	muleq	r2, r8, r2
   1348c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13490:	sub	sp, sp, #24
   13494:	mov	sl, r3
   13498:	ldr	r4, [sp, #56]	; 0x38
   1349c:	ldr	r3, [pc, #100]	; 13508 <close@plt+0x256c>
   134a0:	cmp	r4, #0
   134a4:	moveq	r4, r3
   134a8:	mov	r7, r0
   134ac:	mov	r8, r1
   134b0:	mov	r9, r2
   134b4:	bl	10ed0 <__errno_location@plt>
   134b8:	ldr	r3, [r4, #44]	; 0x2c
   134bc:	mov	r2, r9
   134c0:	mov	r1, r8
   134c4:	ldr	r6, [r0]
   134c8:	str	r3, [sp, #16]
   134cc:	ldr	r3, [r4, #40]	; 0x28
   134d0:	mov	r5, r0
   134d4:	str	r3, [sp, #12]
   134d8:	add	r3, r4, #8
   134dc:	str	r3, [sp, #8]
   134e0:	ldr	r3, [r4, #4]
   134e4:	mov	r0, r7
   134e8:	str	r3, [sp, #4]
   134ec:	ldr	r3, [r4]
   134f0:	str	r3, [sp]
   134f4:	mov	r3, sl
   134f8:	bl	124b8 <close@plt+0x151c>
   134fc:	str	r6, [r5]
   13500:	add	sp, sp, #24
   13504:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13508:	muleq	r2, r8, r2
   1350c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13510:	cmp	r3, #0
   13514:	sub	sp, sp, #44	; 0x2c
   13518:	ldr	r4, [pc, #188]	; 135dc <close@plt+0x2640>
   1351c:	mov	r6, r2
   13520:	movne	r4, r3
   13524:	mov	sl, r1
   13528:	mov	r9, r0
   1352c:	bl	10ed0 <__errno_location@plt>
   13530:	ldr	r5, [r4, #4]
   13534:	add	fp, r4, #8
   13538:	cmp	r6, #0
   1353c:	orreq	r5, r5, #1
   13540:	mov	r1, #0
   13544:	mov	r2, r9
   13548:	ldr	r3, [r0]
   1354c:	mov	r8, r0
   13550:	str	r3, [sp, #28]
   13554:	ldr	r3, [r4, #44]	; 0x2c
   13558:	mov	r0, r1
   1355c:	str	r3, [sp, #16]
   13560:	ldr	r3, [r4, #40]	; 0x28
   13564:	stmib	sp, {r5, fp}
   13568:	str	r3, [sp, #12]
   1356c:	ldr	r3, [r4]
   13570:	str	r3, [sp]
   13574:	mov	r3, sl
   13578:	bl	124b8 <close@plt+0x151c>
   1357c:	add	r1, r0, #1
   13580:	mov	r7, r0
   13584:	mov	r0, r1
   13588:	str	r1, [sp, #36]	; 0x24
   1358c:	bl	13f24 <close@plt+0x2f88>
   13590:	ldr	r3, [r4, #44]	; 0x2c
   13594:	mov	r2, r9
   13598:	str	r3, [sp, #16]
   1359c:	ldr	r3, [r4, #40]	; 0x28
   135a0:	stmib	sp, {r5, fp}
   135a4:	str	r3, [sp, #12]
   135a8:	ldr	r3, [r4]
   135ac:	ldr	r1, [sp, #36]	; 0x24
   135b0:	str	r3, [sp]
   135b4:	mov	r3, sl
   135b8:	str	r0, [sp, #32]
   135bc:	bl	124b8 <close@plt+0x151c>
   135c0:	ldr	r3, [sp, #28]
   135c4:	cmp	r6, #0
   135c8:	str	r3, [r8]
   135cc:	ldr	r0, [sp, #32]
   135d0:	strne	r7, [r6]
   135d4:	add	sp, sp, #44	; 0x2c
   135d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135dc:	muleq	r2, r8, r2
   135e0:	mov	r3, r2
   135e4:	mov	r2, #0
   135e8:	b	1350c <close@plt+0x2570>
   135ec:	push	{r4, r5, r6, r7, r8, lr}
   135f0:	mov	r6, #1
   135f4:	ldr	r4, [pc, #104]	; 13664 <close@plt+0x26c8>
   135f8:	ldr	r5, [r4]
   135fc:	add	r7, r5, #12
   13600:	ldr	r3, [r4, #4]
   13604:	add	r7, r7, #8
   13608:	cmp	r6, r3
   1360c:	blt	13654 <close@plt+0x26b8>
   13610:	ldr	r0, [r5, #4]
   13614:	ldr	r6, [pc, #76]	; 13668 <close@plt+0x26cc>
   13618:	cmp	r0, r6
   1361c:	beq	13630 <close@plt+0x2694>
   13620:	bl	12214 <close@plt+0x1278>
   13624:	mov	r3, #256	; 0x100
   13628:	str	r3, [r4, #8]
   1362c:	str	r6, [r4, #12]
   13630:	ldr	r6, [pc, #52]	; 1366c <close@plt+0x26d0>
   13634:	cmp	r5, r6
   13638:	beq	13648 <close@plt+0x26ac>
   1363c:	mov	r0, r5
   13640:	bl	12214 <close@plt+0x1278>
   13644:	str	r6, [r4]
   13648:	mov	r3, #1
   1364c:	str	r3, [r4, #4]
   13650:	pop	{r4, r5, r6, r7, r8, pc}
   13654:	ldr	r0, [r7, #-8]
   13658:	bl	12214 <close@plt+0x1278>
   1365c:	add	r6, r6, #1
   13660:	b	13600 <close@plt+0x2664>
   13664:	andeq	r6, r2, ip, lsl r1
   13668:	muleq	r2, r8, r1
   1366c:	andeq	r6, r2, r4, lsr #2
   13670:	ldr	r3, [pc, #4]	; 1367c <close@plt+0x26e0>
   13674:	mvn	r2, #0
   13678:	b	131ec <close@plt+0x2250>
   1367c:	muleq	r2, r8, r2
   13680:	ldr	r3, [pc]	; 13688 <close@plt+0x26ec>
   13684:	b	131ec <close@plt+0x2250>
   13688:	muleq	r2, r8, r2
   1368c:	mov	r1, r0
   13690:	mov	r0, #0
   13694:	b	13670 <close@plt+0x26d4>
   13698:	mov	r2, r1
   1369c:	mov	r1, r0
   136a0:	mov	r0, #0
   136a4:	b	13680 <close@plt+0x26e4>
   136a8:	push	{r4, r5, lr}
   136ac:	sub	sp, sp, #52	; 0x34
   136b0:	mov	r5, r2
   136b4:	mov	r4, r0
   136b8:	mov	r0, sp
   136bc:	bl	12374 <close@plt+0x13d8>
   136c0:	mov	r3, sp
   136c4:	mvn	r2, #0
   136c8:	mov	r1, r5
   136cc:	mov	r0, r4
   136d0:	bl	131ec <close@plt+0x2250>
   136d4:	add	sp, sp, #52	; 0x34
   136d8:	pop	{r4, r5, pc}
   136dc:	push	{r4, r5, r6, lr}
   136e0:	sub	sp, sp, #48	; 0x30
   136e4:	mov	r5, r2
   136e8:	mov	r6, r3
   136ec:	mov	r4, r0
   136f0:	mov	r0, sp
   136f4:	bl	12374 <close@plt+0x13d8>
   136f8:	mov	r3, sp
   136fc:	mov	r2, r6
   13700:	mov	r1, r5
   13704:	mov	r0, r4
   13708:	bl	131ec <close@plt+0x2250>
   1370c:	add	sp, sp, #48	; 0x30
   13710:	pop	{r4, r5, r6, pc}
   13714:	mov	r2, r1
   13718:	mov	r1, r0
   1371c:	mov	r0, #0
   13720:	b	136a8 <close@plt+0x270c>
   13724:	mov	r3, r2
   13728:	mov	r2, r1
   1372c:	mov	r1, r0
   13730:	mov	r0, #0
   13734:	b	136dc <close@plt+0x2740>
   13738:	push	{r4, r5, r6, lr}
   1373c:	mov	r4, r0
   13740:	ldr	lr, [pc, #80]	; 13798 <close@plt+0x27fc>
   13744:	mov	r5, r1
   13748:	mov	r6, r2
   1374c:	ldm	lr!, {r0, r1, r2, r3}
   13750:	sub	sp, sp, #48	; 0x30
   13754:	mov	ip, sp
   13758:	stmia	ip!, {r0, r1, r2, r3}
   1375c:	ldm	lr!, {r0, r1, r2, r3}
   13760:	stmia	ip!, {r0, r1, r2, r3}
   13764:	ldm	lr, {r0, r1, r2, r3}
   13768:	stm	ip, {r0, r1, r2, r3}
   1376c:	mov	r1, r6
   13770:	mov	r2, #1
   13774:	mov	r0, sp
   13778:	bl	133f8 <close@plt+0x245c>
   1377c:	mov	r3, sp
   13780:	mov	r2, r5
   13784:	mov	r1, r4
   13788:	mov	r0, #0
   1378c:	bl	131ec <close@plt+0x2250>
   13790:	add	sp, sp, #48	; 0x30
   13794:	pop	{r4, r5, r6, pc}
   13798:	muleq	r2, r8, r2
   1379c:	mov	r2, r1
   137a0:	mvn	r1, #0
   137a4:	b	13738 <close@plt+0x279c>
   137a8:	mov	r1, #58	; 0x3a
   137ac:	b	1379c <close@plt+0x2800>
   137b0:	mov	r2, #58	; 0x3a
   137b4:	b	13738 <close@plt+0x279c>
   137b8:	push	{r4, r5, lr}
   137bc:	sub	sp, sp, #100	; 0x64
   137c0:	mov	r4, r0
   137c4:	mov	r0, sp
   137c8:	mov	r5, r2
   137cc:	bl	12374 <close@plt+0x13d8>
   137d0:	mov	ip, sp
   137d4:	add	lr, sp, #48	; 0x30
   137d8:	ldm	ip!, {r0, r1, r2, r3}
   137dc:	stmia	lr!, {r0, r1, r2, r3}
   137e0:	ldm	ip!, {r0, r1, r2, r3}
   137e4:	stmia	lr!, {r0, r1, r2, r3}
   137e8:	ldm	ip, {r0, r1, r2, r3}
   137ec:	stm	lr, {r0, r1, r2, r3}
   137f0:	mov	r2, #1
   137f4:	mov	r1, #58	; 0x3a
   137f8:	add	r0, sp, #48	; 0x30
   137fc:	bl	133f8 <close@plt+0x245c>
   13800:	add	r3, sp, #48	; 0x30
   13804:	mvn	r2, #0
   13808:	mov	r1, r5
   1380c:	mov	r0, r4
   13810:	bl	131ec <close@plt+0x2250>
   13814:	add	sp, sp, #100	; 0x64
   13818:	pop	{r4, r5, pc}
   1381c:	push	{r4, r5, r6, r7, lr}
   13820:	mov	r4, r0
   13824:	ldr	lr, [pc, #84]	; 13880 <close@plt+0x28e4>
   13828:	mov	r6, r1
   1382c:	mov	r7, r2
   13830:	mov	r5, r3
   13834:	ldm	lr!, {r0, r1, r2, r3}
   13838:	sub	sp, sp, #52	; 0x34
   1383c:	mov	ip, sp
   13840:	stmia	ip!, {r0, r1, r2, r3}
   13844:	ldm	lr!, {r0, r1, r2, r3}
   13848:	stmia	ip!, {r0, r1, r2, r3}
   1384c:	ldm	lr, {r0, r1, r2, r3}
   13850:	stm	ip, {r0, r1, r2, r3}
   13854:	mov	r2, r7
   13858:	mov	r1, r6
   1385c:	mov	r0, sp
   13860:	bl	13454 <close@plt+0x24b8>
   13864:	mov	r3, sp
   13868:	ldr	r2, [sp, #72]	; 0x48
   1386c:	mov	r1, r5
   13870:	mov	r0, r4
   13874:	bl	131ec <close@plt+0x2250>
   13878:	add	sp, sp, #52	; 0x34
   1387c:	pop	{r4, r5, r6, r7, pc}
   13880:	muleq	r2, r8, r2
   13884:	mvn	ip, #0
   13888:	push	{r0, r1, r2, lr}
   1388c:	str	ip, [sp]
   13890:	bl	1381c <close@plt+0x2880>
   13894:	add	sp, sp, #12
   13898:	pop	{pc}		; (ldr pc, [sp], #4)
   1389c:	mov	r3, r2
   138a0:	mov	r2, r1
   138a4:	mov	r1, r0
   138a8:	mov	r0, #0
   138ac:	b	13884 <close@plt+0x28e8>
   138b0:	push	{r0, r1, r2, lr}
   138b4:	str	r3, [sp]
   138b8:	mov	r3, r2
   138bc:	mov	r2, r1
   138c0:	mov	r1, r0
   138c4:	mov	r0, #0
   138c8:	bl	1381c <close@plt+0x2880>
   138cc:	add	sp, sp, #12
   138d0:	pop	{pc}		; (ldr pc, [sp], #4)
   138d4:	ldr	r3, [pc]	; 138dc <close@plt+0x2940>
   138d8:	b	131ec <close@plt+0x2250>
   138dc:	andeq	r6, r2, ip, lsr #2
   138e0:	mov	r2, r1
   138e4:	mov	r1, r0
   138e8:	mov	r0, #0
   138ec:	b	138d4 <close@plt+0x2938>
   138f0:	mvn	r2, #0
   138f4:	b	138d4 <close@plt+0x2938>
   138f8:	mov	r1, r0
   138fc:	mov	r0, #0
   13900:	b	138f0 <close@plt+0x2954>
   13904:	push	{r4, r5, r6, r7, r8, lr}
   13908:	mov	r7, r0
   1390c:	ldr	r5, [pc, #88]	; 1396c <close@plt+0x29d0>
   13910:	mov	r8, r1
   13914:	mov	r4, r2
   13918:	mov	r2, r4
   1391c:	mov	r1, r8
   13920:	mov	r0, r7
   13924:	bl	10d44 <read@plt>
   13928:	subs	r6, r0, #0
   1392c:	bge	1395c <close@plt+0x29c0>
   13930:	bl	10ed0 <__errno_location@plt>
   13934:	ldr	r3, [r0]
   13938:	cmp	r3, #4
   1393c:	beq	13918 <close@plt+0x297c>
   13940:	cmp	r4, r5
   13944:	movls	r4, #0
   13948:	movhi	r4, #1
   1394c:	cmp	r3, #22
   13950:	movne	r4, #0
   13954:	cmp	r4, #0
   13958:	bne	13964 <close@plt+0x29c8>
   1395c:	mov	r0, r6
   13960:	pop	{r4, r5, r6, r7, r8, pc}
   13964:	mov	r4, r5
   13968:	b	13918 <close@plt+0x297c>
   1396c:	svcvc	0x00f00000	; IMB
   13970:	push	{r4, r5, r6, r7, r8, lr}
   13974:	mov	r7, r0
   13978:	ldr	r5, [pc, #88]	; 139d8 <close@plt+0x2a3c>
   1397c:	mov	r8, r1
   13980:	mov	r4, r2
   13984:	mov	r2, r4
   13988:	mov	r1, r8
   1398c:	mov	r0, r7
   13990:	bl	10f00 <write@plt>
   13994:	subs	r6, r0, #0
   13998:	bge	139c8 <close@plt+0x2a2c>
   1399c:	bl	10ed0 <__errno_location@plt>
   139a0:	ldr	r3, [r0]
   139a4:	cmp	r3, #4
   139a8:	beq	13984 <close@plt+0x29e8>
   139ac:	cmp	r4, r5
   139b0:	sub	r3, r3, #22
   139b4:	clz	r3, r3
   139b8:	lsr	r3, r3, #5
   139bc:	movls	r3, #0
   139c0:	cmp	r3, #0
   139c4:	bne	139d0 <close@plt+0x2a34>
   139c8:	mov	r0, r6
   139cc:	pop	{r4, r5, r6, r7, r8, pc}
   139d0:	mov	r4, r5
   139d4:	b	13984 <close@plt+0x29e8>
   139d8:	svcvc	0x00f00000	; IMB
   139dc:	push	{r4, r5, r6, lr}
   139e0:	sub	sp, sp, #32
   139e4:	cmp	r1, #0
   139e8:	mov	r5, r0
   139ec:	ldr	r4, [sp, #48]	; 0x30
   139f0:	ldr	r6, [sp, #52]	; 0x34
   139f4:	beq	13aa8 <close@plt+0x2b0c>
   139f8:	stm	sp, {r2, r3}
   139fc:	mov	r3, r1
   13a00:	ldr	r2, [pc, #860]	; 13d64 <close@plt+0x2dc8>
   13a04:	mov	r1, #1
   13a08:	bl	10f18 <__fprintf_chk@plt>
   13a0c:	mov	r2, #5
   13a10:	ldr	r1, [pc, #848]	; 13d68 <close@plt+0x2dcc>
   13a14:	mov	r0, #0
   13a18:	bl	10dbc <dcgettext@plt>
   13a1c:	ldr	r3, [pc, #840]	; 13d6c <close@plt+0x2dd0>
   13a20:	ldr	r2, [pc, #840]	; 13d70 <close@plt+0x2dd4>
   13a24:	str	r3, [sp]
   13a28:	mov	r1, #1
   13a2c:	mov	r3, r0
   13a30:	mov	r0, r5
   13a34:	bl	10f18 <__fprintf_chk@plt>
   13a38:	mov	r1, r5
   13a3c:	mov	r0, #10
   13a40:	bl	10db0 <fputc_unlocked@plt>
   13a44:	mov	r2, #5
   13a48:	ldr	r1, [pc, #804]	; 13d74 <close@plt+0x2dd8>
   13a4c:	mov	r0, #0
   13a50:	bl	10dbc <dcgettext@plt>
   13a54:	mov	r1, #1
   13a58:	ldr	r3, [pc, #792]	; 13d78 <close@plt+0x2ddc>
   13a5c:	mov	r2, r0
   13a60:	mov	r0, r5
   13a64:	bl	10f18 <__fprintf_chk@plt>
   13a68:	mov	r1, r5
   13a6c:	mov	r0, #10
   13a70:	bl	10db0 <fputc_unlocked@plt>
   13a74:	cmp	r6, #9
   13a78:	ldrls	pc, [pc, r6, lsl #2]
   13a7c:	b	13d58 <close@plt+0x2dbc>
   13a80:	muleq	r1, r8, fp
   13a84:	andeq	r3, r1, r0, asr #21
   13a88:	andeq	r3, r1, ip, ror #21
   13a8c:	andeq	r3, r1, r0, lsr #22
   13a90:	andeq	r3, r1, ip, asr fp
   13a94:	andeq	r3, r1, r0, lsr #23
   13a98:	andeq	r3, r1, r8, ror #23
   13a9c:	andeq	r3, r1, r8, lsr ip
   13aa0:	muleq	r1, r0, ip
   13aa4:	strdeq	r3, [r1], -r0
   13aa8:	str	r3, [sp]
   13aac:	mov	r1, #1
   13ab0:	mov	r3, r2
   13ab4:	ldr	r2, [pc, #704]	; 13d7c <close@plt+0x2de0>
   13ab8:	bl	10f18 <__fprintf_chk@plt>
   13abc:	b	13a0c <close@plt+0x2a70>
   13ac0:	mov	r2, #5
   13ac4:	ldr	r1, [pc, #692]	; 13d80 <close@plt+0x2de4>
   13ac8:	mov	r0, #0
   13acc:	bl	10dbc <dcgettext@plt>
   13ad0:	ldr	r3, [r4]
   13ad4:	mov	r1, #1
   13ad8:	mov	r2, r0
   13adc:	mov	r0, r5
   13ae0:	add	sp, sp, #32
   13ae4:	pop	{r4, r5, r6, lr}
   13ae8:	b	10f18 <__fprintf_chk@plt>
   13aec:	mov	r2, #5
   13af0:	ldr	r1, [pc, #652]	; 13d84 <close@plt+0x2de8>
   13af4:	mov	r0, #0
   13af8:	bl	10dbc <dcgettext@plt>
   13afc:	ldr	r3, [r4, #4]
   13b00:	mov	r1, #1
   13b04:	str	r3, [sp, #48]	; 0x30
   13b08:	ldr	r3, [r4]
   13b0c:	mov	r2, r0
   13b10:	mov	r0, r5
   13b14:	add	sp, sp, #32
   13b18:	pop	{r4, r5, r6, lr}
   13b1c:	b	10f18 <__fprintf_chk@plt>
   13b20:	mov	r2, #5
   13b24:	ldr	r1, [pc, #604]	; 13d88 <close@plt+0x2dec>
   13b28:	mov	r0, #0
   13b2c:	bl	10dbc <dcgettext@plt>
   13b30:	ldr	r3, [r4, #8]
   13b34:	mov	r1, #1
   13b38:	str	r3, [sp, #52]	; 0x34
   13b3c:	ldr	r3, [r4, #4]
   13b40:	str	r3, [sp, #48]	; 0x30
   13b44:	ldr	r3, [r4]
   13b48:	mov	r2, r0
   13b4c:	mov	r0, r5
   13b50:	add	sp, sp, #32
   13b54:	pop	{r4, r5, r6, lr}
   13b58:	b	10f18 <__fprintf_chk@plt>
   13b5c:	mov	r2, #5
   13b60:	ldr	r1, [pc, #548]	; 13d8c <close@plt+0x2df0>
   13b64:	mov	r0, #0
   13b68:	bl	10dbc <dcgettext@plt>
   13b6c:	ldr	r3, [r4, #12]
   13b70:	mov	r1, #1
   13b74:	str	r3, [sp, #8]
   13b78:	ldr	r3, [r4, #8]
   13b7c:	str	r3, [sp, #4]
   13b80:	ldr	r3, [r4, #4]
   13b84:	str	r3, [sp]
   13b88:	ldr	r3, [r4]
   13b8c:	mov	r2, r0
   13b90:	mov	r0, r5
   13b94:	bl	10f18 <__fprintf_chk@plt>
   13b98:	add	sp, sp, #32
   13b9c:	pop	{r4, r5, r6, pc}
   13ba0:	mov	r2, #5
   13ba4:	ldr	r1, [pc, #484]	; 13d90 <close@plt+0x2df4>
   13ba8:	mov	r0, #0
   13bac:	bl	10dbc <dcgettext@plt>
   13bb0:	ldr	r3, [r4, #16]
   13bb4:	mov	r1, #1
   13bb8:	str	r3, [sp, #12]
   13bbc:	ldr	r3, [r4, #12]
   13bc0:	str	r3, [sp, #8]
   13bc4:	ldr	r3, [r4, #8]
   13bc8:	str	r3, [sp, #4]
   13bcc:	ldr	r3, [r4, #4]
   13bd0:	str	r3, [sp]
   13bd4:	ldr	r3, [r4]
   13bd8:	mov	r2, r0
   13bdc:	mov	r0, r5
   13be0:	bl	10f18 <__fprintf_chk@plt>
   13be4:	b	13b98 <close@plt+0x2bfc>
   13be8:	mov	r2, #5
   13bec:	ldr	r1, [pc, #416]	; 13d94 <close@plt+0x2df8>
   13bf0:	mov	r0, #0
   13bf4:	bl	10dbc <dcgettext@plt>
   13bf8:	ldr	r3, [r4, #20]
   13bfc:	mov	r1, #1
   13c00:	str	r3, [sp, #16]
   13c04:	ldr	r3, [r4, #16]
   13c08:	str	r3, [sp, #12]
   13c0c:	ldr	r3, [r4, #12]
   13c10:	str	r3, [sp, #8]
   13c14:	ldr	r3, [r4, #8]
   13c18:	str	r3, [sp, #4]
   13c1c:	ldr	r3, [r4, #4]
   13c20:	str	r3, [sp]
   13c24:	ldr	r3, [r4]
   13c28:	mov	r2, r0
   13c2c:	mov	r0, r5
   13c30:	bl	10f18 <__fprintf_chk@plt>
   13c34:	b	13b98 <close@plt+0x2bfc>
   13c38:	mov	r2, #5
   13c3c:	ldr	r1, [pc, #340]	; 13d98 <close@plt+0x2dfc>
   13c40:	mov	r0, #0
   13c44:	bl	10dbc <dcgettext@plt>
   13c48:	ldr	r3, [r4, #24]
   13c4c:	mov	r1, #1
   13c50:	str	r3, [sp, #20]
   13c54:	ldr	r3, [r4, #20]
   13c58:	str	r3, [sp, #16]
   13c5c:	ldr	r3, [r4, #16]
   13c60:	str	r3, [sp, #12]
   13c64:	ldr	r3, [r4, #12]
   13c68:	str	r3, [sp, #8]
   13c6c:	ldr	r3, [r4, #8]
   13c70:	str	r3, [sp, #4]
   13c74:	ldr	r3, [r4, #4]
   13c78:	str	r3, [sp]
   13c7c:	ldr	r3, [r4]
   13c80:	mov	r2, r0
   13c84:	mov	r0, r5
   13c88:	bl	10f18 <__fprintf_chk@plt>
   13c8c:	b	13b98 <close@plt+0x2bfc>
   13c90:	mov	r2, #5
   13c94:	ldr	r1, [pc, #256]	; 13d9c <close@plt+0x2e00>
   13c98:	mov	r0, #0
   13c9c:	bl	10dbc <dcgettext@plt>
   13ca0:	ldr	r3, [r4, #28]
   13ca4:	mov	r1, #1
   13ca8:	str	r3, [sp, #24]
   13cac:	ldr	r3, [r4, #24]
   13cb0:	str	r3, [sp, #20]
   13cb4:	ldr	r3, [r4, #20]
   13cb8:	str	r3, [sp, #16]
   13cbc:	ldr	r3, [r4, #16]
   13cc0:	str	r3, [sp, #12]
   13cc4:	ldr	r3, [r4, #12]
   13cc8:	str	r3, [sp, #8]
   13ccc:	ldr	r3, [r4, #8]
   13cd0:	str	r3, [sp, #4]
   13cd4:	ldr	r3, [r4, #4]
   13cd8:	str	r3, [sp]
   13cdc:	ldr	r3, [r4]
   13ce0:	mov	r2, r0
   13ce4:	mov	r0, r5
   13ce8:	bl	10f18 <__fprintf_chk@plt>
   13cec:	b	13b98 <close@plt+0x2bfc>
   13cf0:	ldr	r1, [pc, #168]	; 13da0 <close@plt+0x2e04>
   13cf4:	mov	r2, #5
   13cf8:	mov	r0, #0
   13cfc:	bl	10dbc <dcgettext@plt>
   13d00:	ldr	r3, [r4, #32]
   13d04:	mov	r1, #1
   13d08:	str	r3, [sp, #28]
   13d0c:	ldr	r3, [r4, #28]
   13d10:	str	r3, [sp, #24]
   13d14:	ldr	r3, [r4, #24]
   13d18:	str	r3, [sp, #20]
   13d1c:	ldr	r3, [r4, #20]
   13d20:	str	r3, [sp, #16]
   13d24:	ldr	r3, [r4, #16]
   13d28:	str	r3, [sp, #12]
   13d2c:	ldr	r3, [r4, #12]
   13d30:	str	r3, [sp, #8]
   13d34:	ldr	r3, [r4, #8]
   13d38:	str	r3, [sp, #4]
   13d3c:	ldr	r3, [r4, #4]
   13d40:	str	r3, [sp]
   13d44:	ldr	r3, [r4]
   13d48:	mov	r2, r0
   13d4c:	mov	r0, r5
   13d50:	bl	10f18 <__fprintf_chk@plt>
   13d54:	b	13b98 <close@plt+0x2bfc>
   13d58:	mov	r2, #5
   13d5c:	ldr	r1, [pc, #64]	; 13da4 <close@plt+0x2e08>
   13d60:	b	13cf8 <close@plt+0x2d5c>
   13d64:	andeq	r5, r1, r3, asr r5
   13d68:	andeq	r5, r1, r6, ror #10
   13d6c:	andeq	r0, r0, r6, ror #15
   13d70:	andeq	r5, r1, r4, lsr r8
   13d74:	andeq	r5, r1, sl, ror #10
   13d78:	andeq	r5, r1, r5, lsl r6
   13d7c:	andeq	r5, r1, pc, asr r5
   13d80:	andeq	r5, r1, r7, lsr r6
   13d84:	andeq	r5, r1, r7, asr #12
   13d88:	andeq	r5, r1, lr, asr r6
   13d8c:	andeq	r5, r1, sl, ror r6
   13d90:	muleq	r1, sl, r6
   13d94:			; <UNDEFINED> instruction: 0x000156be
   13d98:	andeq	r5, r1, r6, ror #13
   13d9c:	andeq	r5, r1, r2, lsl r7
   13da0:	andeq	r5, r1, r2, asr #14
   13da4:	andeq	r5, r1, r6, ror r7
   13da8:	push	{r0, r1, r4, lr}
   13dac:	mov	ip, #0
   13db0:	ldr	lr, [sp, #16]
   13db4:	ldr	r4, [lr, ip, lsl #2]
   13db8:	cmp	r4, #0
   13dbc:	bne	13dd4 <close@plt+0x2e38>
   13dc0:	str	ip, [sp, #4]
   13dc4:	str	lr, [sp]
   13dc8:	bl	139dc <close@plt+0x2a40>
   13dcc:	add	sp, sp, #8
   13dd0:	pop	{r4, pc}
   13dd4:	add	ip, ip, #1
   13dd8:	b	13db4 <close@plt+0x2e18>
   13ddc:	push	{r4, r5, lr}
   13de0:	sub	sp, sp, #52	; 0x34
   13de4:	mov	ip, #0
   13de8:	ldr	r5, [sp, #64]	; 0x40
   13dec:	add	lr, sp, #8
   13df0:	ldr	r4, [r5, ip, lsl #2]
   13df4:	cmp	r4, #0
   13df8:	str	r4, [lr, ip, lsl #2]
   13dfc:	beq	13e0c <close@plt+0x2e70>
   13e00:	add	ip, ip, #1
   13e04:	cmp	ip, #10
   13e08:	bne	13df0 <close@plt+0x2e54>
   13e0c:	str	ip, [sp, #4]
   13e10:	str	lr, [sp]
   13e14:	bl	139dc <close@plt+0x2a40>
   13e18:	add	sp, sp, #52	; 0x34
   13e1c:	pop	{r4, r5, pc}
   13e20:	push	{r3}		; (str r3, [sp, #-4]!)
   13e24:	push	{r0, r1, r2, r3, lr}
   13e28:	add	r3, sp, #24
   13e2c:	str	r3, [sp, #12]
   13e30:	str	r3, [sp]
   13e34:	ldr	r3, [sp, #20]
   13e38:	bl	13ddc <close@plt+0x2e40>
   13e3c:	add	sp, sp, #16
   13e40:	pop	{lr}		; (ldr lr, [sp], #4)
   13e44:	add	sp, sp, #4
   13e48:	bx	lr
   13e4c:	ldr	r3, [pc, #116]	; 13ec8 <close@plt+0x2f2c>
   13e50:	push	{r4, lr}
   13e54:	mov	r0, #10
   13e58:	ldr	r1, [r3]
   13e5c:	bl	10db0 <fputc_unlocked@plt>
   13e60:	mov	r2, #5
   13e64:	ldr	r1, [pc, #96]	; 13ecc <close@plt+0x2f30>
   13e68:	mov	r0, #0
   13e6c:	bl	10dbc <dcgettext@plt>
   13e70:	ldr	r2, [pc, #88]	; 13ed0 <close@plt+0x2f34>
   13e74:	mov	r1, r0
   13e78:	mov	r0, #1
   13e7c:	bl	10ef4 <__printf_chk@plt>
   13e80:	mov	r2, #5
   13e84:	ldr	r1, [pc, #72]	; 13ed4 <close@plt+0x2f38>
   13e88:	mov	r0, #0
   13e8c:	bl	10dbc <dcgettext@plt>
   13e90:	ldr	r3, [pc, #64]	; 13ed8 <close@plt+0x2f3c>
   13e94:	ldr	r2, [pc, #64]	; 13edc <close@plt+0x2f40>
   13e98:	mov	r1, r0
   13e9c:	mov	r0, #1
   13ea0:	bl	10ef4 <__printf_chk@plt>
   13ea4:	mov	r2, #5
   13ea8:	ldr	r1, [pc, #48]	; 13ee0 <close@plt+0x2f44>
   13eac:	mov	r0, #0
   13eb0:	bl	10dbc <dcgettext@plt>
   13eb4:	ldr	r2, [pc, #40]	; 13ee4 <close@plt+0x2f48>
   13eb8:	pop	{r4, lr}
   13ebc:	mov	r1, r0
   13ec0:	mov	r0, #1
   13ec4:	b	10ef4 <__printf_chk@plt>
   13ec8:	andeq	r6, r2, r4, ror r1
   13ecc:			; <UNDEFINED> instruction: 0x000157b2
   13ed0:	andeq	r5, r1, r6, asr #15
   13ed4:	ldrdeq	r5, [r1], -ip
   13ed8:	andeq	r5, r1, fp, lsl #4
   13edc:	andeq	r5, r1, r3, lsr r2
   13ee0:	strdeq	r5, [r1], -r0
   13ee4:	andeq	r5, r1, r7, lsl r8
   13ee8:	push	{r4, lr}
   13eec:	bl	10f6c <aligned_alloc@plt>
   13ef0:	cmp	r0, #0
   13ef4:	popne	{r4, pc}
   13ef8:	bl	14390 <close@plt+0x33f4>
   13efc:	push	{r4, lr}
   13f00:	bl	14418 <close@plt+0x347c>
   13f04:	cmp	r0, #0
   13f08:	popne	{r4, pc}
   13f0c:	bl	14390 <close@plt+0x33f4>
   13f10:	push	{r4, lr}
   13f14:	bl	14418 <close@plt+0x347c>
   13f18:	cmp	r0, #0
   13f1c:	popne	{r4, pc}
   13f20:	bl	14390 <close@plt+0x33f4>
   13f24:	b	13efc <close@plt+0x2f60>
   13f28:	push	{r4, r5, r6, lr}
   13f2c:	mov	r5, r0
   13f30:	mov	r4, r1
   13f34:	bl	14458 <close@plt+0x34bc>
   13f38:	cmp	r0, #0
   13f3c:	popne	{r4, r5, r6, pc}
   13f40:	adds	r4, r4, #0
   13f44:	movne	r4, #1
   13f48:	cmp	r5, #0
   13f4c:	orreq	r4, r4, #1
   13f50:	cmp	r4, #0
   13f54:	popeq	{r4, r5, r6, pc}
   13f58:	bl	14390 <close@plt+0x33f4>
   13f5c:	push	{r4, lr}
   13f60:	cmp	r1, #0
   13f64:	orreq	r1, r1, #1
   13f68:	bl	14458 <close@plt+0x34bc>
   13f6c:	cmp	r0, #0
   13f70:	popne	{r4, pc}
   13f74:	bl	14390 <close@plt+0x33f4>
   13f78:	push	{r4, r5, r6, lr}
   13f7c:	mov	r6, r0
   13f80:	mov	r5, r1
   13f84:	mov	r4, r2
   13f88:	bl	14734 <close@plt+0x3798>
   13f8c:	cmp	r0, #0
   13f90:	popne	{r4, r5, r6, pc}
   13f94:	cmp	r6, #0
   13f98:	beq	13fa8 <close@plt+0x300c>
   13f9c:	cmp	r5, #0
   13fa0:	cmpne	r4, #0
   13fa4:	popeq	{r4, r5, r6, pc}
   13fa8:	bl	14390 <close@plt+0x33f4>
   13fac:	b	13f78 <close@plt+0x2fdc>
   13fb0:	cmp	r2, #0
   13fb4:	cmpne	r1, #0
   13fb8:	moveq	r2, #1
   13fbc:	moveq	r1, r2
   13fc0:	push	{r4, lr}
   13fc4:	bl	14734 <close@plt+0x3798>
   13fc8:	cmp	r0, #0
   13fcc:	popne	{r4, pc}
   13fd0:	bl	14390 <close@plt+0x33f4>
   13fd4:	mov	r2, r1
   13fd8:	mov	r1, r0
   13fdc:	mov	r0, #0
   13fe0:	b	13f78 <close@plt+0x2fdc>
   13fe4:	mov	r2, r1
   13fe8:	mov	r1, r0
   13fec:	mov	r0, #0
   13ff0:	b	13fb0 <close@plt+0x3014>
   13ff4:	push	{r4, r5, r6, r7, r8, lr}
   13ff8:	subs	r7, r0, #0
   13ffc:	mov	r5, r1
   14000:	mov	r6, r2
   14004:	ldr	r4, [r1]
   14008:	bne	14044 <close@plt+0x30a8>
   1400c:	cmp	r4, #0
   14010:	bne	1402c <close@plt+0x3090>
   14014:	mov	r1, r2
   14018:	mov	r0, #64	; 0x40
   1401c:	bl	14860 <close@plt+0x38c4>
   14020:	cmp	r0, #0
   14024:	movne	r4, r0
   14028:	addeq	r4, r0, #1
   1402c:	mov	r2, r6
   14030:	mov	r1, r4
   14034:	mov	r0, r7
   14038:	bl	13f78 <close@plt+0x2fdc>
   1403c:	str	r4, [r5]
   14040:	pop	{r4, r5, r6, r7, r8, pc}
   14044:	lsr	r2, r4, #1
   14048:	add	r3, r2, #1
   1404c:	mvn	r3, r3
   14050:	cmp	r4, r3
   14054:	addls	r4, r4, #1
   14058:	addls	r4, r4, r2
   1405c:	bls	1402c <close@plt+0x3090>
   14060:	bl	14390 <close@plt+0x33f4>
   14064:	mov	r2, #1
   14068:	b	13ff4 <close@plt+0x3058>
   1406c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14070:	mov	sl, r0
   14074:	ldr	r8, [r1]
   14078:	mov	fp, r1
   1407c:	mov	r5, r2
   14080:	asrs	r4, r8, #1
   14084:	mov	r9, r3
   14088:	ldr	r7, [sp, #48]	; 0x30
   1408c:	bpl	14128 <close@plt+0x318c>
   14090:	rsb	r2, r4, #-2147483648	; 0x80000000
   14094:	cmp	r8, r2
   14098:	movge	r2, #0
   1409c:	movlt	r2, #1
   140a0:	mvn	r3, r9
   140a4:	cmp	r2, #0
   140a8:	lsr	r3, r3, #31
   140ac:	addeq	r4, r4, r8
   140b0:	mvnne	r4, #-2147483648	; 0x80000000
   140b4:	mov	r0, r3
   140b8:	cmp	r9, r4
   140bc:	movge	r0, #0
   140c0:	andlt	r0, r0, #1
   140c4:	cmp	r0, #0
   140c8:	str	r3, [sp, #4]
   140cc:	bne	1429c <close@plt+0x3300>
   140d0:	cmp	r7, #0
   140d4:	bge	141e8 <close@plt+0x324c>
   140d8:	cmp	r4, #0
   140dc:	bge	14140 <close@plt+0x31a4>
   140e0:	mov	r1, r7
   140e4:	mvn	r0, #-2147483648	; 0x80000000
   140e8:	bl	14a6c <close@plt+0x3ad0>
   140ec:	cmp	r0, r4
   140f0:	movle	r0, #0
   140f4:	movgt	r0, #1
   140f8:	cmp	r0, #0
   140fc:	mvnne	r6, #-2147483648	; 0x80000000
   14100:	beq	14150 <close@plt+0x31b4>
   14104:	mov	r1, r7
   14108:	mov	r0, r6
   1410c:	bl	14a6c <close@plt+0x3ad0>
   14110:	mov	r1, r7
   14114:	mov	r4, r0
   14118:	mov	r0, r6
   1411c:	bl	14c8c <close@plt+0x3cf0>
   14120:	sub	r1, r6, r1
   14124:	b	14160 <close@plt+0x31c4>
   14128:	mvn	r2, #-2147483648	; 0x80000000
   1412c:	sub	r2, r2, r4
   14130:	cmp	r8, r2
   14134:	movle	r2, #0
   14138:	movgt	r2, #1
   1413c:	b	140a0 <close@plt+0x3104>
   14140:	cmn	r7, #1
   14144:	movne	r1, r7
   14148:	movne	r0, #-2147483648	; 0x80000000
   1414c:	bne	142b4 <close@plt+0x3318>
   14150:	mul	r1, r7, r4
   14154:	cmp	r1, #63	; 0x3f
   14158:	movle	r6, #64	; 0x40
   1415c:	ble	14104 <close@plt+0x3168>
   14160:	cmp	sl, #0
   14164:	sub	r2, r4, r8
   14168:	streq	sl, [fp]
   1416c:	cmp	r2, r5
   14170:	bge	14244 <close@plt+0x32a8>
   14174:	cmp	r5, #0
   14178:	bge	14210 <close@plt+0x3274>
   1417c:	rsb	r2, r5, #-2147483648	; 0x80000000
   14180:	cmp	r8, r2
   14184:	movge	r2, #0
   14188:	movlt	r2, #1
   1418c:	cmp	r2, #0
   14190:	bne	141e4 <close@plt+0x3248>
   14194:	ldr	r0, [sp, #4]
   14198:	add	r5, r8, r5
   1419c:	cmp	r9, r5
   141a0:	movge	r0, #0
   141a4:	andlt	r0, r0, #1
   141a8:	cmp	r0, #0
   141ac:	mov	r4, r5
   141b0:	bne	141e4 <close@plt+0x3248>
   141b4:	cmp	r7, #0
   141b8:	bge	14258 <close@plt+0x32bc>
   141bc:	cmp	r5, #0
   141c0:	bge	14230 <close@plt+0x3294>
   141c4:	mov	r1, r7
   141c8:	mvn	r0, #-2147483648	; 0x80000000
   141cc:	bl	14a6c <close@plt+0x3ad0>
   141d0:	cmp	r5, r0
   141d4:	movge	r0, #0
   141d8:	movlt	r0, #1
   141dc:	cmp	r0, #0
   141e0:	beq	14240 <close@plt+0x32a4>
   141e4:	bl	14390 <close@plt+0x33f4>
   141e8:	beq	14150 <close@plt+0x31b4>
   141ec:	cmp	r4, #0
   141f0:	bge	142ac <close@plt+0x3310>
   141f4:	cmn	r4, #1
   141f8:	beq	14150 <close@plt+0x31b4>
   141fc:	mov	r1, r4
   14200:	mov	r0, #-2147483648	; 0x80000000
   14204:	bl	14a6c <close@plt+0x3ad0>
   14208:	cmp	r7, r0
   1420c:	b	140f0 <close@plt+0x3154>
   14210:	cmp	r8, #0
   14214:	blt	14194 <close@plt+0x31f8>
   14218:	mvn	r2, #-2147483648	; 0x80000000
   1421c:	sub	r2, r2, r5
   14220:	cmp	r8, r2
   14224:	movle	r2, #0
   14228:	movgt	r2, #1
   1422c:	b	1418c <close@plt+0x31f0>
   14230:	cmn	r7, #1
   14234:	movne	r1, r7
   14238:	movne	r0, #-2147483648	; 0x80000000
   1423c:	bne	14290 <close@plt+0x32f4>
   14240:	mul	r1, r5, r7
   14244:	mov	r0, sl
   14248:	bl	13f28 <close@plt+0x2f8c>
   1424c:	str	r4, [fp]
   14250:	add	sp, sp, #12
   14254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14258:	beq	14240 <close@plt+0x32a4>
   1425c:	cmp	r5, #0
   14260:	movge	r1, r7
   14264:	mvnge	r0, #-2147483648	; 0x80000000
   14268:	bge	14290 <close@plt+0x32f4>
   1426c:	cmn	r5, #1
   14270:	beq	14240 <close@plt+0x32a4>
   14274:	mov	r1, r5
   14278:	mov	r0, #-2147483648	; 0x80000000
   1427c:	bl	14a6c <close@plt+0x3ad0>
   14280:	cmp	r7, r0
   14284:	movle	r0, #0
   14288:	movgt	r0, #1
   1428c:	b	141dc <close@plt+0x3240>
   14290:	bl	14a6c <close@plt+0x3ad0>
   14294:	cmp	r5, r0
   14298:	b	14284 <close@plt+0x32e8>
   1429c:	cmp	r7, #0
   142a0:	mov	r4, r9
   142a4:	blt	14140 <close@plt+0x31a4>
   142a8:	beq	14150 <close@plt+0x31b4>
   142ac:	mov	r1, r7
   142b0:	mvn	r0, #-2147483648	; 0x80000000
   142b4:	bl	14a6c <close@plt+0x3ad0>
   142b8:	cmp	r0, r4
   142bc:	movge	r0, #0
   142c0:	movlt	r0, #1
   142c4:	b	140f8 <close@plt+0x315c>
   142c8:	push	{r4, lr}
   142cc:	bl	143d0 <close@plt+0x3434>
   142d0:	cmp	r0, #0
   142d4:	popne	{r4, pc}
   142d8:	bl	14390 <close@plt+0x33f4>
   142dc:	mov	r1, #1
   142e0:	b	142c8 <close@plt+0x332c>
   142e4:	push	{r4, lr}
   142e8:	bl	143d0 <close@plt+0x3434>
   142ec:	cmp	r0, #0
   142f0:	popne	{r4, pc}
   142f4:	bl	14390 <close@plt+0x33f4>
   142f8:	mov	r1, #1
   142fc:	b	142e4 <close@plt+0x3348>
   14300:	push	{r4, r5, r6, lr}
   14304:	mov	r4, r1
   14308:	mov	r5, r0
   1430c:	mov	r0, r1
   14310:	bl	13efc <close@plt+0x2f60>
   14314:	mov	r2, r4
   14318:	mov	r1, r5
   1431c:	pop	{r4, r5, r6, lr}
   14320:	b	10d80 <memcpy@plt>
   14324:	push	{r4, r5, r6, lr}
   14328:	mov	r4, r1
   1432c:	mov	r5, r0
   14330:	mov	r0, r1
   14334:	bl	13f10 <close@plt+0x2f74>
   14338:	mov	r2, r4
   1433c:	mov	r1, r5
   14340:	pop	{r4, r5, r6, lr}
   14344:	b	10d80 <memcpy@plt>
   14348:	push	{r4, r5, r6, lr}
   1434c:	mov	r5, r0
   14350:	add	r0, r1, #1
   14354:	mov	r4, r1
   14358:	bl	13f10 <close@plt+0x2f74>
   1435c:	mov	r2, #0
   14360:	mov	r1, r5
   14364:	strb	r2, [r0, r4]
   14368:	mov	r2, r4
   1436c:	pop	{r4, r5, r6, lr}
   14370:	b	10d80 <memcpy@plt>
   14374:	push	{r4, lr}
   14378:	mov	r4, r0
   1437c:	bl	10eb8 <strlen@plt>
   14380:	add	r1, r0, #1
   14384:	mov	r0, r4
   14388:	pop	{r4, lr}
   1438c:	b	14300 <close@plt+0x3364>
   14390:	ldr	r3, [pc, #44]	; 143c4 <close@plt+0x3428>
   14394:	push	{r4, lr}
   14398:	mov	r2, #5
   1439c:	ldr	r1, [pc, #36]	; 143c8 <close@plt+0x342c>
   143a0:	mov	r0, #0
   143a4:	ldr	r4, [r3]
   143a8:	bl	10dbc <dcgettext@plt>
   143ac:	ldr	r2, [pc, #24]	; 143cc <close@plt+0x3430>
   143b0:	mov	r1, #0
   143b4:	mov	r3, r0
   143b8:	mov	r0, r4
   143bc:	bl	10e4c <error@plt>
   143c0:	bl	10f90 <abort@plt>
   143c4:	andeq	r6, r2, r8, lsl r1
   143c8:	andeq	r5, r1, r3, ror #16
   143cc:	andeq	r5, r1, r2, asr r4
   143d0:	cmp	r1, #0
   143d4:	cmpne	r0, #0
   143d8:	moveq	r1, #1
   143dc:	moveq	r0, r1
   143e0:	umull	r2, r3, r0, r1
   143e4:	adds	r3, r3, #0
   143e8:	movne	r3, #1
   143ec:	cmp	r2, #0
   143f0:	blt	14400 <close@plt+0x3464>
   143f4:	cmp	r3, #0
   143f8:	bne	14400 <close@plt+0x3464>
   143fc:	b	10d08 <calloc@plt>
   14400:	push	{r4, lr}
   14404:	bl	10ed0 <__errno_location@plt>
   14408:	mov	r3, #12
   1440c:	str	r3, [r0]
   14410:	mov	r0, #0
   14414:	pop	{r4, pc}
   14418:	cmp	r0, #0
   1441c:	mov	r3, #0
   14420:	moveq	r0, #1
   14424:	adds	r3, r3, #0
   14428:	movne	r3, #1
   1442c:	cmp	r0, #0
   14430:	blt	14440 <close@plt+0x34a4>
   14434:	cmp	r3, #0
   14438:	bne	14440 <close@plt+0x34a4>
   1443c:	b	10e64 <malloc@plt>
   14440:	push	{r4, lr}
   14444:	bl	10ed0 <__errno_location@plt>
   14448:	mov	r3, #12
   1444c:	str	r3, [r0]
   14450:	mov	r0, #0
   14454:	pop	{r4, pc}
   14458:	cmp	r0, #0
   1445c:	push	{r4, lr}
   14460:	mov	r4, r1
   14464:	bne	14474 <close@plt+0x34d8>
   14468:	mov	r0, r1
   1446c:	pop	{r4, lr}
   14470:	b	14418 <close@plt+0x347c>
   14474:	cmp	r1, #0
   14478:	bne	14488 <close@plt+0x34ec>
   1447c:	bl	12214 <close@plt+0x1278>
   14480:	mov	r0, #0
   14484:	pop	{r4, pc}
   14488:	cmp	r1, #0
   1448c:	blt	1449c <close@plt+0x3500>
   14490:	mov	r3, #0
   14494:	cmp	r3, r3
   14498:	beq	144ac <close@plt+0x3510>
   1449c:	bl	10ed0 <__errno_location@plt>
   144a0:	mov	r3, #12
   144a4:	str	r3, [r0]
   144a8:	b	14480 <close@plt+0x34e4>
   144ac:	pop	{r4, lr}
   144b0:	b	10dc8 <realloc@plt>
   144b4:	push	{r4, r5, r6, lr}
   144b8:	mov	r4, r0
   144bc:	bl	10e28 <__fpending@plt>
   144c0:	mov	r5, r0
   144c4:	mov	r0, r4
   144c8:	bl	10e34 <ferror_unlocked@plt>
   144cc:	mov	r6, r0
   144d0:	mov	r0, r4
   144d4:	bl	14524 <close@plt+0x3588>
   144d8:	cmp	r6, #0
   144dc:	mov	r4, r0
   144e0:	bne	1450c <close@plt+0x3570>
   144e4:	cmp	r0, #0
   144e8:	beq	14504 <close@plt+0x3568>
   144ec:	cmp	r5, #0
   144f0:	bne	1451c <close@plt+0x3580>
   144f4:	bl	10ed0 <__errno_location@plt>
   144f8:	ldr	r4, [r0]
   144fc:	subs	r4, r4, #9
   14500:	mvnne	r4, #0
   14504:	mov	r0, r4
   14508:	pop	{r4, r5, r6, pc}
   1450c:	cmp	r0, #0
   14510:	bne	1451c <close@plt+0x3580>
   14514:	bl	10ed0 <__errno_location@plt>
   14518:	str	r4, [r0]
   1451c:	mvn	r4, #0
   14520:	b	14504 <close@plt+0x3568>
   14524:	push	{r0, r1, r2, r4, r5, lr}
   14528:	mov	r4, r0
   1452c:	bl	10f0c <fileno@plt>
   14530:	cmp	r0, #0
   14534:	mov	r0, r4
   14538:	bge	14548 <close@plt+0x35ac>
   1453c:	add	sp, sp, #12
   14540:	pop	{r4, r5, lr}
   14544:	b	10f24 <fclose@plt>
   14548:	bl	10e7c <__freading@plt>
   1454c:	cmp	r0, #0
   14550:	bne	1458c <close@plt+0x35f0>
   14554:	mov	r0, r4
   14558:	bl	145cc <close@plt+0x3630>
   1455c:	cmp	r0, #0
   14560:	bne	145c0 <close@plt+0x3624>
   14564:	mov	r5, #0
   14568:	mov	r0, r4
   1456c:	bl	10f24 <fclose@plt>
   14570:	cmp	r5, #0
   14574:	beq	14584 <close@plt+0x35e8>
   14578:	bl	10ed0 <__errno_location@plt>
   1457c:	str	r5, [r0]
   14580:	mvn	r0, #0
   14584:	add	sp, sp, #12
   14588:	pop	{r4, r5, pc}
   1458c:	mov	r0, r4
   14590:	bl	10f0c <fileno@plt>
   14594:	mov	r3, #1
   14598:	str	r3, [sp]
   1459c:	mov	r2, #0
   145a0:	mov	r3, #0
   145a4:	bl	10e10 <lseek64@plt>
   145a8:	mvn	r3, #0
   145ac:	mvn	r2, #0
   145b0:	cmp	r1, r3
   145b4:	cmpeq	r0, r2
   145b8:	bne	14554 <close@plt+0x35b8>
   145bc:	b	14564 <close@plt+0x35c8>
   145c0:	bl	10ed0 <__errno_location@plt>
   145c4:	ldr	r5, [r0]
   145c8:	b	14568 <close@plt+0x35cc>
   145cc:	push	{r0, r1, r4, lr}
   145d0:	subs	r4, r0, #0
   145d4:	bne	145e8 <close@plt+0x364c>
   145d8:	mov	r0, r4
   145dc:	add	sp, sp, #8
   145e0:	pop	{r4, lr}
   145e4:	b	10d50 <fflush@plt>
   145e8:	bl	10e7c <__freading@plt>
   145ec:	cmp	r0, #0
   145f0:	beq	145d8 <close@plt+0x363c>
   145f4:	ldr	r3, [r4]
   145f8:	tst	r3, #256	; 0x100
   145fc:	beq	145d8 <close@plt+0x363c>
   14600:	mov	r3, #1
   14604:	str	r3, [sp]
   14608:	mov	r2, #0
   1460c:	mov	r3, #0
   14610:	mov	r0, r4
   14614:	bl	1461c <close@plt+0x3680>
   14618:	b	145d8 <close@plt+0x363c>
   1461c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14620:	mov	r4, r0
   14624:	ldmib	r0, {ip, lr}
   14628:	ldr	r8, [sp, #32]
   1462c:	cmp	lr, ip
   14630:	bne	1469c <close@plt+0x3700>
   14634:	ldr	lr, [r0, #20]
   14638:	ldr	ip, [r0, #16]
   1463c:	cmp	lr, ip
   14640:	bne	1469c <close@plt+0x3700>
   14644:	ldr	r5, [r0, #36]	; 0x24
   14648:	cmp	r5, #0
   1464c:	bne	1469c <close@plt+0x3700>
   14650:	mov	r6, r2
   14654:	mov	r7, r3
   14658:	bl	10f0c <fileno@plt>
   1465c:	mov	r2, r6
   14660:	mov	r3, r7
   14664:	str	r8, [sp]
   14668:	bl	10e10 <lseek64@plt>
   1466c:	mvn	r3, #0
   14670:	mvn	r2, #0
   14674:	cmp	r1, r3
   14678:	cmpeq	r0, r2
   1467c:	mvneq	r0, #0
   14680:	ldrne	r3, [r4]
   14684:	strdne	r0, [r4, #80]	; 0x50
   14688:	movne	r0, r5
   1468c:	bicne	r3, r3, #16
   14690:	strne	r3, [r4]
   14694:	add	sp, sp, #8
   14698:	pop	{r4, r5, r6, r7, r8, pc}
   1469c:	str	r8, [sp, #32]
   146a0:	mov	r0, r4
   146a4:	add	sp, sp, #8
   146a8:	pop	{r4, r5, r6, r7, r8, lr}
   146ac:	b	10f30 <fseeko64@plt>
   146b0:	push	{r4, lr}
   146b4:	mov	r0, #14
   146b8:	bl	10f54 <nl_langinfo@plt>
   146bc:	ldr	r3, [pc, #24]	; 146dc <close@plt+0x3740>
   146c0:	cmp	r0, #0
   146c4:	moveq	r0, r3
   146c8:	ldr	r3, [pc, #16]	; 146e0 <close@plt+0x3744>
   146cc:	ldrb	r2, [r0]
   146d0:	cmp	r2, #0
   146d4:	moveq	r0, r3
   146d8:	pop	{r4, pc}
   146dc:	ldrdeq	r5, [r1], -r9
   146e0:	andeq	r5, r1, r4, ror r8
   146e4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   146e8:	subs	r5, r0, #0
   146ec:	addeq	r5, sp, #4
   146f0:	mov	r0, r5
   146f4:	mov	r7, r2
   146f8:	mov	r6, r1
   146fc:	bl	10e40 <mbrtowc@plt>
   14700:	cmp	r7, #0
   14704:	cmnne	r0, #3
   14708:	mov	r4, r0
   1470c:	bls	14728 <close@plt+0x378c>
   14710:	mov	r0, #0
   14714:	bl	14780 <close@plt+0x37e4>
   14718:	cmp	r0, #0
   1471c:	moveq	r4, #1
   14720:	ldrbeq	r3, [r6]
   14724:	streq	r3, [r5]
   14728:	mov	r0, r4
   1472c:	add	sp, sp, #12
   14730:	pop	{r4, r5, r6, r7, pc}
   14734:	push	{r4, r5, r6, lr}
   14738:	subs	r4, r2, #0
   1473c:	mov	r6, r0
   14740:	mov	r5, r1
   14744:	beq	1475c <close@plt+0x37c0>
   14748:	mov	r1, r4
   1474c:	mvn	r0, #0
   14750:	bl	14860 <close@plt+0x38c4>
   14754:	cmp	r0, r5
   14758:	bcc	1476c <close@plt+0x37d0>
   1475c:	mul	r1, r5, r4
   14760:	mov	r0, r6
   14764:	pop	{r4, r5, r6, lr}
   14768:	b	14458 <close@plt+0x34bc>
   1476c:	bl	10ed0 <__errno_location@plt>
   14770:	mov	r3, #12
   14774:	str	r3, [r0]
   14778:	mov	r0, #0
   1477c:	pop	{r4, r5, r6, pc}
   14780:	push	{lr}		; (str lr, [sp, #-4]!)
   14784:	sub	sp, sp, #268	; 0x10c
   14788:	ldr	r2, [pc, #64]	; 147d0 <close@plt+0x3834>
   1478c:	add	r1, sp, #4
   14790:	bl	147dc <close@plt+0x3840>
   14794:	cmp	r0, #0
   14798:	movne	r0, #0
   1479c:	bne	147c8 <close@plt+0x382c>
   147a0:	ldr	r1, [pc, #44]	; 147d4 <close@plt+0x3838>
   147a4:	add	r0, sp, #4
   147a8:	bl	10d2c <strcmp@plt>
   147ac:	cmp	r0, #0
   147b0:	beq	147c8 <close@plt+0x382c>
   147b4:	ldr	r1, [pc, #28]	; 147d8 <close@plt+0x383c>
   147b8:	add	r0, sp, #4
   147bc:	bl	10d2c <strcmp@plt>
   147c0:	adds	r0, r0, #0
   147c4:	movne	r0, #1
   147c8:	add	sp, sp, #268	; 0x10c
   147cc:	pop	{pc}		; (ldr pc, [sp], #4)
   147d0:	andeq	r0, r0, r1, lsl #2
   147d4:	andeq	r5, r1, sl, ror r8
   147d8:	andeq	r5, r1, ip, ror r8
   147dc:	push	{r4, r5, r6, lr}
   147e0:	mov	r5, r1
   147e4:	mov	r1, #0
   147e8:	mov	r4, r2
   147ec:	bl	10f3c <setlocale@plt>
   147f0:	subs	r6, r0, #0
   147f4:	bne	14808 <close@plt+0x386c>
   147f8:	cmp	r4, #0
   147fc:	strbne	r6, [r5]
   14800:	mov	r0, #22
   14804:	pop	{r4, r5, r6, pc}
   14808:	bl	10eb8 <strlen@plt>
   1480c:	cmp	r4, r0
   14810:	bls	1482c <close@plt+0x3890>
   14814:	add	r2, r0, #1
   14818:	mov	r1, r6
   1481c:	mov	r0, r5
   14820:	bl	10d80 <memcpy@plt>
   14824:	mov	r0, #0
   14828:	pop	{r4, r5, r6, pc}
   1482c:	cmp	r4, #0
   14830:	beq	14850 <close@plt+0x38b4>
   14834:	sub	r4, r4, #1
   14838:	mov	r2, r4
   1483c:	mov	r1, r6
   14840:	mov	r0, r5
   14844:	bl	10d80 <memcpy@plt>
   14848:	mov	r3, #0
   1484c:	strb	r3, [r5, r4]
   14850:	mov	r0, #34	; 0x22
   14854:	pop	{r4, r5, r6, pc}
   14858:	mov	r1, #0
   1485c:	b	10f3c <setlocale@plt>
   14860:	subs	r2, r1, #1
   14864:	bxeq	lr
   14868:	bcc	14a40 <close@plt+0x3aa4>
   1486c:	cmp	r0, r1
   14870:	bls	14a24 <close@plt+0x3a88>
   14874:	tst	r1, r2
   14878:	beq	14a30 <close@plt+0x3a94>
   1487c:	clz	r3, r0
   14880:	clz	r2, r1
   14884:	sub	r3, r2, r3
   14888:	rsbs	r3, r3, #31
   1488c:	addne	r3, r3, r3, lsl #1
   14890:	mov	r2, #0
   14894:	addne	pc, pc, r3, lsl #2
   14898:	nop			; (mov r0, r0)
   1489c:	cmp	r0, r1, lsl #31
   148a0:	adc	r2, r2, r2
   148a4:	subcs	r0, r0, r1, lsl #31
   148a8:	cmp	r0, r1, lsl #30
   148ac:	adc	r2, r2, r2
   148b0:	subcs	r0, r0, r1, lsl #30
   148b4:	cmp	r0, r1, lsl #29
   148b8:	adc	r2, r2, r2
   148bc:	subcs	r0, r0, r1, lsl #29
   148c0:	cmp	r0, r1, lsl #28
   148c4:	adc	r2, r2, r2
   148c8:	subcs	r0, r0, r1, lsl #28
   148cc:	cmp	r0, r1, lsl #27
   148d0:	adc	r2, r2, r2
   148d4:	subcs	r0, r0, r1, lsl #27
   148d8:	cmp	r0, r1, lsl #26
   148dc:	adc	r2, r2, r2
   148e0:	subcs	r0, r0, r1, lsl #26
   148e4:	cmp	r0, r1, lsl #25
   148e8:	adc	r2, r2, r2
   148ec:	subcs	r0, r0, r1, lsl #25
   148f0:	cmp	r0, r1, lsl #24
   148f4:	adc	r2, r2, r2
   148f8:	subcs	r0, r0, r1, lsl #24
   148fc:	cmp	r0, r1, lsl #23
   14900:	adc	r2, r2, r2
   14904:	subcs	r0, r0, r1, lsl #23
   14908:	cmp	r0, r1, lsl #22
   1490c:	adc	r2, r2, r2
   14910:	subcs	r0, r0, r1, lsl #22
   14914:	cmp	r0, r1, lsl #21
   14918:	adc	r2, r2, r2
   1491c:	subcs	r0, r0, r1, lsl #21
   14920:	cmp	r0, r1, lsl #20
   14924:	adc	r2, r2, r2
   14928:	subcs	r0, r0, r1, lsl #20
   1492c:	cmp	r0, r1, lsl #19
   14930:	adc	r2, r2, r2
   14934:	subcs	r0, r0, r1, lsl #19
   14938:	cmp	r0, r1, lsl #18
   1493c:	adc	r2, r2, r2
   14940:	subcs	r0, r0, r1, lsl #18
   14944:	cmp	r0, r1, lsl #17
   14948:	adc	r2, r2, r2
   1494c:	subcs	r0, r0, r1, lsl #17
   14950:	cmp	r0, r1, lsl #16
   14954:	adc	r2, r2, r2
   14958:	subcs	r0, r0, r1, lsl #16
   1495c:	cmp	r0, r1, lsl #15
   14960:	adc	r2, r2, r2
   14964:	subcs	r0, r0, r1, lsl #15
   14968:	cmp	r0, r1, lsl #14
   1496c:	adc	r2, r2, r2
   14970:	subcs	r0, r0, r1, lsl #14
   14974:	cmp	r0, r1, lsl #13
   14978:	adc	r2, r2, r2
   1497c:	subcs	r0, r0, r1, lsl #13
   14980:	cmp	r0, r1, lsl #12
   14984:	adc	r2, r2, r2
   14988:	subcs	r0, r0, r1, lsl #12
   1498c:	cmp	r0, r1, lsl #11
   14990:	adc	r2, r2, r2
   14994:	subcs	r0, r0, r1, lsl #11
   14998:	cmp	r0, r1, lsl #10
   1499c:	adc	r2, r2, r2
   149a0:	subcs	r0, r0, r1, lsl #10
   149a4:	cmp	r0, r1, lsl #9
   149a8:	adc	r2, r2, r2
   149ac:	subcs	r0, r0, r1, lsl #9
   149b0:	cmp	r0, r1, lsl #8
   149b4:	adc	r2, r2, r2
   149b8:	subcs	r0, r0, r1, lsl #8
   149bc:	cmp	r0, r1, lsl #7
   149c0:	adc	r2, r2, r2
   149c4:	subcs	r0, r0, r1, lsl #7
   149c8:	cmp	r0, r1, lsl #6
   149cc:	adc	r2, r2, r2
   149d0:	subcs	r0, r0, r1, lsl #6
   149d4:	cmp	r0, r1, lsl #5
   149d8:	adc	r2, r2, r2
   149dc:	subcs	r0, r0, r1, lsl #5
   149e0:	cmp	r0, r1, lsl #4
   149e4:	adc	r2, r2, r2
   149e8:	subcs	r0, r0, r1, lsl #4
   149ec:	cmp	r0, r1, lsl #3
   149f0:	adc	r2, r2, r2
   149f4:	subcs	r0, r0, r1, lsl #3
   149f8:	cmp	r0, r1, lsl #2
   149fc:	adc	r2, r2, r2
   14a00:	subcs	r0, r0, r1, lsl #2
   14a04:	cmp	r0, r1, lsl #1
   14a08:	adc	r2, r2, r2
   14a0c:	subcs	r0, r0, r1, lsl #1
   14a10:	cmp	r0, r1
   14a14:	adc	r2, r2, r2
   14a18:	subcs	r0, r0, r1
   14a1c:	mov	r0, r2
   14a20:	bx	lr
   14a24:	moveq	r0, #1
   14a28:	movne	r0, #0
   14a2c:	bx	lr
   14a30:	clz	r2, r1
   14a34:	rsb	r2, r2, #31
   14a38:	lsr	r0, r0, r2
   14a3c:	bx	lr
   14a40:	cmp	r0, #0
   14a44:	mvnne	r0, #0
   14a48:	b	14cac <close@plt+0x3d10>
   14a4c:	cmp	r1, #0
   14a50:	beq	14a40 <close@plt+0x3aa4>
   14a54:	push	{r0, r1, lr}
   14a58:	bl	14860 <close@plt+0x38c4>
   14a5c:	pop	{r1, r2, lr}
   14a60:	mul	r3, r2, r0
   14a64:	sub	r1, r1, r3
   14a68:	bx	lr
   14a6c:	cmp	r1, #0
   14a70:	beq	14c7c <close@plt+0x3ce0>
   14a74:	eor	ip, r0, r1
   14a78:	rsbmi	r1, r1, #0
   14a7c:	subs	r2, r1, #1
   14a80:	beq	14c48 <close@plt+0x3cac>
   14a84:	movs	r3, r0
   14a88:	rsbmi	r3, r0, #0
   14a8c:	cmp	r3, r1
   14a90:	bls	14c54 <close@plt+0x3cb8>
   14a94:	tst	r1, r2
   14a98:	beq	14c64 <close@plt+0x3cc8>
   14a9c:	clz	r2, r3
   14aa0:	clz	r0, r1
   14aa4:	sub	r2, r0, r2
   14aa8:	rsbs	r2, r2, #31
   14aac:	addne	r2, r2, r2, lsl #1
   14ab0:	mov	r0, #0
   14ab4:	addne	pc, pc, r2, lsl #2
   14ab8:	nop			; (mov r0, r0)
   14abc:	cmp	r3, r1, lsl #31
   14ac0:	adc	r0, r0, r0
   14ac4:	subcs	r3, r3, r1, lsl #31
   14ac8:	cmp	r3, r1, lsl #30
   14acc:	adc	r0, r0, r0
   14ad0:	subcs	r3, r3, r1, lsl #30
   14ad4:	cmp	r3, r1, lsl #29
   14ad8:	adc	r0, r0, r0
   14adc:	subcs	r3, r3, r1, lsl #29
   14ae0:	cmp	r3, r1, lsl #28
   14ae4:	adc	r0, r0, r0
   14ae8:	subcs	r3, r3, r1, lsl #28
   14aec:	cmp	r3, r1, lsl #27
   14af0:	adc	r0, r0, r0
   14af4:	subcs	r3, r3, r1, lsl #27
   14af8:	cmp	r3, r1, lsl #26
   14afc:	adc	r0, r0, r0
   14b00:	subcs	r3, r3, r1, lsl #26
   14b04:	cmp	r3, r1, lsl #25
   14b08:	adc	r0, r0, r0
   14b0c:	subcs	r3, r3, r1, lsl #25
   14b10:	cmp	r3, r1, lsl #24
   14b14:	adc	r0, r0, r0
   14b18:	subcs	r3, r3, r1, lsl #24
   14b1c:	cmp	r3, r1, lsl #23
   14b20:	adc	r0, r0, r0
   14b24:	subcs	r3, r3, r1, lsl #23
   14b28:	cmp	r3, r1, lsl #22
   14b2c:	adc	r0, r0, r0
   14b30:	subcs	r3, r3, r1, lsl #22
   14b34:	cmp	r3, r1, lsl #21
   14b38:	adc	r0, r0, r0
   14b3c:	subcs	r3, r3, r1, lsl #21
   14b40:	cmp	r3, r1, lsl #20
   14b44:	adc	r0, r0, r0
   14b48:	subcs	r3, r3, r1, lsl #20
   14b4c:	cmp	r3, r1, lsl #19
   14b50:	adc	r0, r0, r0
   14b54:	subcs	r3, r3, r1, lsl #19
   14b58:	cmp	r3, r1, lsl #18
   14b5c:	adc	r0, r0, r0
   14b60:	subcs	r3, r3, r1, lsl #18
   14b64:	cmp	r3, r1, lsl #17
   14b68:	adc	r0, r0, r0
   14b6c:	subcs	r3, r3, r1, lsl #17
   14b70:	cmp	r3, r1, lsl #16
   14b74:	adc	r0, r0, r0
   14b78:	subcs	r3, r3, r1, lsl #16
   14b7c:	cmp	r3, r1, lsl #15
   14b80:	adc	r0, r0, r0
   14b84:	subcs	r3, r3, r1, lsl #15
   14b88:	cmp	r3, r1, lsl #14
   14b8c:	adc	r0, r0, r0
   14b90:	subcs	r3, r3, r1, lsl #14
   14b94:	cmp	r3, r1, lsl #13
   14b98:	adc	r0, r0, r0
   14b9c:	subcs	r3, r3, r1, lsl #13
   14ba0:	cmp	r3, r1, lsl #12
   14ba4:	adc	r0, r0, r0
   14ba8:	subcs	r3, r3, r1, lsl #12
   14bac:	cmp	r3, r1, lsl #11
   14bb0:	adc	r0, r0, r0
   14bb4:	subcs	r3, r3, r1, lsl #11
   14bb8:	cmp	r3, r1, lsl #10
   14bbc:	adc	r0, r0, r0
   14bc0:	subcs	r3, r3, r1, lsl #10
   14bc4:	cmp	r3, r1, lsl #9
   14bc8:	adc	r0, r0, r0
   14bcc:	subcs	r3, r3, r1, lsl #9
   14bd0:	cmp	r3, r1, lsl #8
   14bd4:	adc	r0, r0, r0
   14bd8:	subcs	r3, r3, r1, lsl #8
   14bdc:	cmp	r3, r1, lsl #7
   14be0:	adc	r0, r0, r0
   14be4:	subcs	r3, r3, r1, lsl #7
   14be8:	cmp	r3, r1, lsl #6
   14bec:	adc	r0, r0, r0
   14bf0:	subcs	r3, r3, r1, lsl #6
   14bf4:	cmp	r3, r1, lsl #5
   14bf8:	adc	r0, r0, r0
   14bfc:	subcs	r3, r3, r1, lsl #5
   14c00:	cmp	r3, r1, lsl #4
   14c04:	adc	r0, r0, r0
   14c08:	subcs	r3, r3, r1, lsl #4
   14c0c:	cmp	r3, r1, lsl #3
   14c10:	adc	r0, r0, r0
   14c14:	subcs	r3, r3, r1, lsl #3
   14c18:	cmp	r3, r1, lsl #2
   14c1c:	adc	r0, r0, r0
   14c20:	subcs	r3, r3, r1, lsl #2
   14c24:	cmp	r3, r1, lsl #1
   14c28:	adc	r0, r0, r0
   14c2c:	subcs	r3, r3, r1, lsl #1
   14c30:	cmp	r3, r1
   14c34:	adc	r0, r0, r0
   14c38:	subcs	r3, r3, r1
   14c3c:	cmp	ip, #0
   14c40:	rsbmi	r0, r0, #0
   14c44:	bx	lr
   14c48:	teq	ip, r0
   14c4c:	rsbmi	r0, r0, #0
   14c50:	bx	lr
   14c54:	movcc	r0, #0
   14c58:	asreq	r0, ip, #31
   14c5c:	orreq	r0, r0, #1
   14c60:	bx	lr
   14c64:	clz	r2, r1
   14c68:	rsb	r2, r2, #31
   14c6c:	cmp	ip, #0
   14c70:	lsr	r0, r3, r2
   14c74:	rsbmi	r0, r0, #0
   14c78:	bx	lr
   14c7c:	cmp	r0, #0
   14c80:	mvngt	r0, #-2147483648	; 0x80000000
   14c84:	movlt	r0, #-2147483648	; 0x80000000
   14c88:	b	14cac <close@plt+0x3d10>
   14c8c:	cmp	r1, #0
   14c90:	beq	14c7c <close@plt+0x3ce0>
   14c94:	push	{r0, r1, lr}
   14c98:	bl	14a74 <close@plt+0x3ad8>
   14c9c:	pop	{r1, r2, lr}
   14ca0:	mul	r3, r2, r0
   14ca4:	sub	r1, r1, r3
   14ca8:	bx	lr
   14cac:	push	{r1, lr}
   14cb0:	mov	r0, #8
   14cb4:	bl	10d20 <raise@plt>
   14cb8:	pop	{r1, pc}
   14cbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14cc0:	mov	r7, r0
   14cc4:	ldr	r6, [pc, #72]	; 14d14 <close@plt+0x3d78>
   14cc8:	ldr	r5, [pc, #72]	; 14d18 <close@plt+0x3d7c>
   14ccc:	add	r6, pc, r6
   14cd0:	add	r5, pc, r5
   14cd4:	sub	r6, r6, r5
   14cd8:	mov	r8, r1
   14cdc:	mov	r9, r2
   14ce0:	bl	10ce8 <calloc@plt-0x20>
   14ce4:	asrs	r6, r6, #2
   14ce8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14cec:	mov	r4, #0
   14cf0:	add	r4, r4, #1
   14cf4:	ldr	r3, [r5], #4
   14cf8:	mov	r2, r9
   14cfc:	mov	r1, r8
   14d00:	mov	r0, r7
   14d04:	blx	r3
   14d08:	cmp	r6, r4
   14d0c:	bne	14cf0 <close@plt+0x3d54>
   14d10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d14:	andeq	r1, r1, ip, lsr r2
   14d18:	andeq	r1, r1, r4, lsr r2
   14d1c:	bx	lr
   14d20:	ldr	r3, [pc, #12]	; 14d34 <close@plt+0x3d98>
   14d24:	mov	r1, #0
   14d28:	add	r3, pc, r3
   14d2c:	ldr	r2, [r3]
   14d30:	b	10edc <__cxa_atexit@plt>
   14d34:	andeq	r1, r1, r4, asr #7
   14d38:	mov	r2, r1
   14d3c:	mov	r1, r0
   14d40:	mov	r0, #3
   14d44:	b	10dec <__fxstat64@plt>

Disassembly of section .fini:

00014d48 <.fini>:
   14d48:	push	{r3, lr}
   14d4c:	pop	{r3, pc}
