
../repos/charybdis/extensions/.libs/ip_cloaking_3.0.so:     file format elf32-littlearm


Disassembly of section .init:

00000610 <_init>:
 610:	push	{r3, lr}
 614:	bl	6fc <call_weak_fn>
 618:	pop	{r3, pc}

Disassembly of section .plt:

0000061c <.plt>:
 61c:	push	{lr}		; (str lr, [sp, #-4]!)
 620:	ldr	lr, [pc, #4]	; 62c <.plt+0x10>
 624:	add	lr, pc, lr
 628:	ldr	pc, [lr, #8]!
 62c:	.word	0x000119d4

00000630 <calloc@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #69632	; 0x11000
 638:	ldr	pc, [ip, #2516]!	; 0x9d4

0000063c <strcmp@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #69632	; 0x11000
 644:	ldr	pc, [ip, #2508]!	; 0x9cc

00000648 <__cxa_finalize@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #69632	; 0x11000
 650:	ldr	pc, [ip, #2500]!	; 0x9c4

00000654 <rb_outofmemory@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #69632	; 0x11000
 65c:	ldr	pc, [ip, #2492]!	; 0x9bc

00000660 <find_umode_slot@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #69632	; 0x11000
 668:	ldr	pc, [ip, #2484]!	; 0x9b4

0000066c <sendto_server@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #69632	; 0x11000
 674:	ldr	pc, [ip, #2476]!	; 0x9ac

00000678 <__gmon_start__@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #69632	; 0x11000
 680:	ldr	pc, [ip, #2468]!	; 0x9a4

00000684 <__ctype_b_loc@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #69632	; 0x11000
 68c:	ldr	pc, [ip, #2460]!	; 0x99c

00000690 <sendto_one_numeric@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #69632	; 0x11000
 698:	ldr	pc, [ip, #2452]!	; 0x994

0000069c <snprintf@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #69632	; 0x11000
 6a4:	ldr	pc, [ip, #2444]!	; 0x98c

000006a8 <memset@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #69632	; 0x11000
 6b0:	ldr	pc, [ip, #2436]!	; 0x984

000006b4 <strncpy@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #69632	; 0x11000
 6bc:	ldr	pc, [ip, #2428]!	; 0x97c

000006c0 <strrchr@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #69632	; 0x11000
 6c8:	ldr	pc, [ip, #2420]!	; 0x974

000006cc <change_nick_user_host@plt>:
 6cc:	add	ip, pc, #0, 12
 6d0:	add	ip, ip, #69632	; 0x11000
 6d4:	ldr	pc, [ip, #2412]!	; 0x96c

000006d8 <rb_strlcpy@plt>:
 6d8:	add	ip, pc, #0, 12
 6dc:	add	ip, ip, #69632	; 0x11000
 6e0:	ldr	pc, [ip, #2404]!	; 0x964

000006e4 <irccmp@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2396]!	; 0x95c

000006f0 <construct_umodebuf@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2388]!	; 0x954

Disassembly of section .text:

000006fc <call_weak_fn>:
 6fc:	ldr	r3, [pc, #20]	; 718 <call_weak_fn+0x1c>
 700:	ldr	r2, [pc, #20]	; 71c <call_weak_fn+0x20>
 704:	add	r3, pc, r3
 708:	ldr	r2, [r3, r2]
 70c:	cmp	r2, #0
 710:	bxeq	lr
 714:	b	678 <__gmon_start__@plt>
 718:	.word	0x000118f4
 71c:	.word	0x00000060

00000720 <deregister_tm_clones>:
 720:	ldr	r0, [pc, #44]	; 754 <deregister_tm_clones+0x34>
 724:	ldr	r3, [pc, #44]	; 758 <deregister_tm_clones+0x38>
 728:	add	r0, pc, r0
 72c:	add	r3, pc, r3
 730:	cmp	r3, r0
 734:	ldr	r3, [pc, #32]	; 75c <deregister_tm_clones+0x3c>
 738:	add	r3, pc, r3
 73c:	bxeq	lr
 740:	ldr	r2, [pc, #24]	; 760 <deregister_tm_clones+0x40>
 744:	ldr	r3, [r3, r2]
 748:	cmp	r3, #0
 74c:	bxeq	lr
 750:	bx	r3
 754:	.word	0x00011990
 758:	.word	0x0001198c
 75c:	.word	0x000118c0
 760:	.word	0x00000054

00000764 <register_tm_clones>:
 764:	ldr	r0, [pc, #56]	; 7a4 <register_tm_clones+0x40>
 768:	ldr	r3, [pc, #56]	; 7a8 <register_tm_clones+0x44>
 76c:	add	r0, pc, r0
 770:	add	r3, pc, r3
 774:	sub	r1, r3, r0
 778:	ldr	r3, [pc, #44]	; 7ac <register_tm_clones+0x48>
 77c:	asr	r1, r1, #2
 780:	add	r3, pc, r3
 784:	add	r1, r1, r1, lsr #31
 788:	asrs	r1, r1, #1
 78c:	bxeq	lr
 790:	ldr	r2, [pc, #24]	; 7b0 <register_tm_clones+0x4c>
 794:	ldr	r3, [r3, r2]
 798:	cmp	r3, #0
 79c:	bxeq	lr
 7a0:	bx	r3
 7a4:	.word	0x0001194c
 7a8:	.word	0x00011948
 7ac:	.word	0x00011878
 7b0:	.word	0x00000068

000007b4 <__do_global_dtors_aux>:
 7b4:	ldr	r3, [pc, #76]	; 808 <__do_global_dtors_aux+0x54>
 7b8:	ldr	r2, [pc, #76]	; 80c <__do_global_dtors_aux+0x58>
 7bc:	add	r3, pc, r3
 7c0:	add	r2, pc, r2
 7c4:	ldrb	r3, [r3]
 7c8:	cmp	r3, #0
 7cc:	bxne	lr
 7d0:	ldr	r3, [pc, #56]	; 810 <__do_global_dtors_aux+0x5c>
 7d4:	push	{r4, lr}
 7d8:	ldr	r3, [r2, r3]
 7dc:	cmp	r3, #0
 7e0:	beq	7f0 <__do_global_dtors_aux+0x3c>
 7e4:	ldr	r3, [pc, #40]	; 814 <__do_global_dtors_aux+0x60>
 7e8:	ldr	r0, [pc, r3]
 7ec:	bl	648 <__cxa_finalize@plt>
 7f0:	bl	720 <deregister_tm_clones>
 7f4:	ldr	r3, [pc, #28]	; 818 <__do_global_dtors_aux+0x64>
 7f8:	mov	r2, #1
 7fc:	add	r3, pc, r3
 800:	strb	r2, [r3]
 804:	pop	{r4, pc}
 808:	.word	0x000118fc
 80c:	.word	0x00011838
 810:	.word	0x00000050
 814:	.word	0x00011880
 818:	.word	0x000118bc

0000081c <frame_dummy>:
 81c:	b	764 <register_tm_clones>

00000820 <check_new_user>:
 820:	strd	r4, [sp, #-28]!	; 0xffffffe4
 824:	strd	r6, [sp, #8]
 828:	strd	r8, [sp, #16]
 82c:	str	lr, [sp, #24]
 830:	sub	sp, sp, #76	; 0x4c
 834:	ldr	r8, [pc, #1000]	; c24 <check_new_user+0x404>
 838:	add	r8, pc, r8
 83c:	ldr	r1, [r0, #64]	; 0x40
 840:	and	r2, r1, #16777216	; 0x1000000
 844:	mov	r3, #0
 848:	orrs	r3, r2, r3
 84c:	beq	880 <check_new_user+0x60>
 850:	ldr	r3, [pc, #976]	; c28 <check_new_user+0x408>
 854:	ldr	r3, [r8, r3]
 858:	ldr	r2, [r3, #416]	; 0x1a0
 85c:	ldr	r3, [r0, #56]	; 0x38
 860:	bic	r3, r3, r2
 864:	str	r3, [r0, #56]	; 0x38
 868:	add	sp, sp, #76	; 0x4c
 86c:	ldrd	r4, [sp]
 870:	ldrd	r6, [sp, #8]
 874:	ldrd	r8, [sp, #16]
 878:	add	sp, sp, #24
 87c:	pop	{pc}		; (ldr pc, [sp], #4)
 880:	mov	r5, r0
 884:	ldr	r4, [r0, #432]	; 0x1b0
 888:	mov	r1, #64	; 0x40
 88c:	mov	r0, #1
 890:	bl	630 <calloc@plt>
 894:	cmp	r0, #0
 898:	beq	a20 <check_new_user+0x200>
 89c:	str	r0, [r4, #432]	; 0x1b0
 8a0:	add	r9, r5, #227	; 0xe3
 8a4:	add	r1, r5, #288	; 0x120
 8a8:	add	r1, r1, #3
 8ac:	mov	r0, r9
 8b0:	bl	6e4 <irccmp@plt>
 8b4:	cmp	r0, #0
 8b8:	bne	a7c <check_new_user+0x25c>
 8bc:	ldr	r3, [r5, #432]	; 0x1b0
 8c0:	ldr	r4, [r3, #432]	; 0x1b0
 8c4:	ldrb	r3, [r5, #227]	; 0xe3
 8c8:	cmp	r3, #0
 8cc:	beq	a24 <check_new_user+0x204>
 8d0:	mov	r1, r9
 8d4:	mov	r2, #1
 8d8:	add	r2, r2, r3
 8dc:	ldrb	r3, [r1, #1]!
 8e0:	cmp	r3, #0
 8e4:	bne	8d8 <check_new_user+0xb8>
 8e8:	ldr	r3, [pc, #828]	; c2c <check_new_user+0x40c>
 8ec:	add	r3, pc, r3
 8f0:	ldr	r3, [r3]
 8f4:	cmp	r3, #0
 8f8:	bne	928 <check_new_user+0x108>
 8fc:	mov	r1, #1
 900:	mov	r3, #57	; 0x39
 904:	ldr	r0, [pc, #804]	; c30 <check_new_user+0x410>
 908:	add	r0, pc, r0
 90c:	add	r1, r1, r3
 910:	ldrb	r3, [r0, #1]!
 914:	cmp	r3, #0
 918:	bne	90c <check_new_user+0xec>
 91c:	ldr	r3, [pc, #784]	; c34 <check_new_user+0x414>
 920:	add	r3, pc, r3
 924:	str	r1, [r3]
 928:	movw	r3, #18604	; 0x48ac
 92c:	movt	r3, #35898	; 0x8c3a
 930:	mul	r2, r3, r2
 934:	ldr	r3, [pc, #764]	; c38 <check_new_user+0x418>
 938:	add	r3, pc, r3
 93c:	ldr	r7, [r3]
 940:	eor	r7, r7, r2
 944:	mov	r2, #64	; 0x40
 948:	mov	r1, #0
 94c:	add	r6, sp, #8
 950:	mov	r0, r6
 954:	bl	6a8 <memset@plt>
 958:	mov	r2, #63	; 0x3f
 95c:	mov	r1, r9
 960:	mov	r0, r6
 964:	bl	6b4 <strncpy@plt>
 968:	mov	r1, #46	; 0x2e
 96c:	mov	r0, r6
 970:	bl	6c0 <strrchr@plt>
 974:	cmp	r0, #0
 978:	beq	a2c <check_new_user+0x20c>
 97c:	mov	r3, #0
 980:	strb	r3, [r0]
 984:	str	r7, [sp]
 988:	add	r3, sp, #8
 98c:	ldr	r2, [pc, #680]	; c3c <check_new_user+0x41c>
 990:	add	r2, pc, r2
 994:	mov	r1, #63	; 0x3f
 998:	mov	r0, r4
 99c:	bl	69c <snprintf@plt>
 9a0:	ldr	r1, [r5, #64]	; 0x40
 9a4:	and	r2, r1, #131072	; 0x20000
 9a8:	mov	r3, #0
 9ac:	orrs	r3, r2, r3
 9b0:	beq	9cc <check_new_user+0x1ac>
 9b4:	ldr	r3, [pc, #620]	; c28 <check_new_user+0x408>
 9b8:	ldr	r3, [r8, r3]
 9bc:	ldr	r2, [r3, #416]	; 0x1a0
 9c0:	ldr	r3, [r5, #56]	; 0x38
 9c4:	bic	r3, r3, r2
 9c8:	str	r3, [r5, #56]	; 0x38
 9cc:	ldr	r3, [pc, #596]	; c28 <check_new_user+0x408>
 9d0:	ldr	r3, [r8, r3]
 9d4:	ldr	r2, [r5, #56]	; 0x38
 9d8:	ldr	r3, [r3, #416]	; 0x1a0
 9dc:	tst	r2, r3
 9e0:	beq	868 <check_new_user+0x48>
 9e4:	add	r4, r5, #163	; 0xa3
 9e8:	ldr	r3, [r5, #432]	; 0x1b0
 9ec:	mov	r2, #64	; 0x40
 9f0:	ldr	r1, [r3, #432]	; 0x1b0
 9f4:	mov	r0, r4
 9f8:	bl	6d8 <rb_strlcpy@plt>
 9fc:	mov	r1, r9
 a00:	mov	r0, r4
 a04:	bl	6e4 <irccmp@plt>
 a08:	cmp	r0, #0
 a0c:	beq	868 <check_new_user+0x48>
 a10:	ldr	r3, [r5, #64]	; 0x40
 a14:	orr	r3, r3, #131072	; 0x20000
 a18:	str	r3, [r5, #64]	; 0x40
 a1c:	b	868 <check_new_user+0x48>
 a20:	bl	654 <rb_outofmemory@plt>
 a24:	mov	r2, #1
 a28:	b	8e8 <check_new_user+0xc8>
 a2c:	mov	r1, #58	; 0x3a
 a30:	add	r0, sp, #8
 a34:	bl	6c0 <strrchr@plt>
 a38:	cmp	r0, #0
 a3c:	beq	a68 <check_new_user+0x248>
 a40:	mov	r3, #0
 a44:	strb	r3, [r0]
 a48:	str	r7, [sp]
 a4c:	add	r3, sp, #8
 a50:	ldr	r2, [pc, #488]	; c40 <check_new_user+0x420>
 a54:	add	r2, pc, r2
 a58:	mov	r1, #63	; 0x3f
 a5c:	mov	r0, r4
 a60:	bl	69c <snprintf@plt>
 a64:	b	9a0 <check_new_user+0x180>
 a68:	mov	r2, #63	; 0x3f
 a6c:	mov	r1, r9
 a70:	mov	r0, r4
 a74:	bl	6b4 <strncpy@plt>
 a78:	b	9a0 <check_new_user+0x180>
 a7c:	ldr	r3, [r5, #432]	; 0x1b0
 a80:	ldr	r6, [r3, #432]	; 0x1b0
 a84:	ldr	r0, [pc, #440]	; c44 <check_new_user+0x424>
 a88:	add	r0, pc, r0
 a8c:	ldrd	r2, [r0]
 a90:	strd	r2, [sp, #8]
 a94:	ldrd	r2, [r0, #8]
 a98:	strd	r2, [sp, #16]
 a9c:	ldrd	r2, [r0, #16]
 aa0:	strd	r2, [sp, #24]
 aa4:	ldrh	r3, [r0, #24]
 aa8:	strh	r3, [sp, #32]
 aac:	ldrb	r3, [r0, #26]
 ab0:	strb	r3, [sp, #34]	; 0x22
 ab4:	ldrb	r3, [r5, #227]	; 0xe3
 ab8:	cmp	r3, #0
 abc:	beq	b6c <check_new_user+0x34c>
 ac0:	mov	r1, r9
 ac4:	mov	r2, #1
 ac8:	add	r2, r2, r3
 acc:	ldrb	r3, [r1, #1]!
 ad0:	cmp	r3, #0
 ad4:	bne	ac8 <check_new_user+0x2a8>
 ad8:	ldr	r3, [pc, #360]	; c48 <check_new_user+0x428>
 adc:	add	r3, pc, r3
 ae0:	ldr	r3, [r3]
 ae4:	cmp	r3, #0
 ae8:	bne	b18 <check_new_user+0x2f8>
 aec:	mov	r1, #1
 af0:	mov	r3, #57	; 0x39
 af4:	ldr	r0, [pc, #336]	; c4c <check_new_user+0x42c>
 af8:	add	r0, pc, r0
 afc:	add	r1, r1, r3
 b00:	ldrb	r3, [r0, #1]!
 b04:	cmp	r3, #0
 b08:	bne	afc <check_new_user+0x2dc>
 b0c:	ldr	r3, [pc, #316]	; c50 <check_new_user+0x430>
 b10:	add	r3, pc, r3
 b14:	str	r1, [r3]
 b18:	movw	r7, #18604	; 0x48ac
 b1c:	movt	r7, #35898	; 0x8c3a
 b20:	mul	r7, r7, r2
 b24:	ldr	r3, [pc, #296]	; c54 <check_new_user+0x434>
 b28:	add	r3, pc, r3
 b2c:	ldr	r3, [r3]
 b30:	eor	r7, r7, r3
 b34:	mov	r2, #63	; 0x3f
 b38:	mov	r1, r9
 b3c:	mov	r0, r6
 b40:	bl	6b4 <strncpy@plt>
 b44:	ldrb	r4, [r6]
 b48:	cmp	r4, #0
 b4c:	cmpne	r4, #46	; 0x2e
 b50:	beq	bc8 <check_new_user+0x3a8>
 b54:	bl	684 <__ctype_b_loc@plt>
 b58:	mov	r2, r6
 b5c:	movw	r1, #60495	; 0xec4f
 b60:	movt	r1, #20164	; 0x4ec4
 b64:	mov	ip, #26
 b68:	b	b84 <check_new_user+0x364>
 b6c:	mov	r2, #1
 b70:	b	ad8 <check_new_user+0x2b8>
 b74:	ldrb	r4, [r2, #1]!
 b78:	cmp	r4, #46	; 0x2e
 b7c:	cmpne	r4, #0
 b80:	beq	bc8 <check_new_user+0x3a8>
 b84:	ldr	lr, [r0]
 b88:	lsl	r3, r4, #1
 b8c:	ldrh	r3, [lr, r3]
 b90:	ubfx	r3, r3, #11, #1
 b94:	cmp	r4, #45	; 0x2d
 b98:	orreq	r3, r3, #1
 b9c:	cmp	r3, #0
 ba0:	bne	b74 <check_new_user+0x354>
 ba4:	mul	r4, r4, r7
 ba8:	umull	lr, r3, r1, r4
 bac:	lsr	r3, r3, #3
 bb0:	mls	r3, ip, r3, r4
 bb4:	add	lr, sp, #72	; 0x48
 bb8:	add	r3, lr, r3
 bbc:	ldrb	r3, [r3, #-64]	; 0xffffffc0
 bc0:	strb	r3, [r2]
 bc4:	b	b74 <check_new_user+0x354>
 bc8:	ldrb	r4, [r6]
 bcc:	cmp	r4, #0
 bd0:	beq	9a0 <check_new_user+0x180>
 bd4:	bl	684 <__ctype_b_loc@plt>
 bd8:	movw	r2, #52429	; 0xcccd
 bdc:	movt	r2, #52428	; 0xcccc
 be0:	b	bf0 <check_new_user+0x3d0>
 be4:	ldrb	r4, [r6, #1]!
 be8:	cmp	r4, #0
 bec:	beq	9a0 <check_new_user+0x180>
 bf0:	ldr	r1, [r0]
 bf4:	lsl	r3, r4, #1
 bf8:	ldrh	r3, [r1, r3]
 bfc:	tst	r3, #2048	; 0x800
 c00:	beq	be4 <check_new_user+0x3c4>
 c04:	mul	r4, r4, r7
 c08:	umull	r1, r3, r2, r4
 c0c:	lsr	r3, r3, #3
 c10:	add	r3, r3, r3, lsl #2
 c14:	sub	r4, r4, r3, lsl #1
 c18:	add	r4, r4, #48	; 0x30
 c1c:	strb	r4, [r6]
 c20:	b	be4 <check_new_user+0x3c4>
 c24:	.word	0x000117c0
 c28:	.word	0x0000005c
 c2c:	.word	0x000117d0
 c30:	.word	0x000006ec
 c34:	.word	0x0001179c
 c38:	.word	0x00011784
 c3c:	.word	0x00000690
 c40:	.word	0x000005d8
 c44:	.word	0x000005b0
 c48:	.word	0x000115e0
 c4c:	.word	0x000004fc
 c50:	.word	0x000115ac
 c54:	.word	0x00011594

00000c58 <distribute_hostchange>:
 c58:	strd	r4, [sp, #-20]!	; 0xffffffec
 c5c:	strd	r6, [sp, #8]
 c60:	str	lr, [sp, #16]
 c64:	sub	sp, sp, #20
 c68:	mov	r4, r0
 c6c:	mov	r6, r1
 c70:	ldr	r5, [pc, #368]	; de8 <distribute_hostchange+0x190>
 c74:	add	r5, pc, r5
 c78:	add	r7, r0, #227	; 0xe3
 c7c:	cmp	r7, r1
 c80:	beq	dd0 <distribute_hostchange+0x178>
 c84:	mov	r3, r1
 c88:	ldr	r2, [pc, #348]	; dec <distribute_hostchange+0x194>
 c8c:	add	r2, pc, r2
 c90:	mov	r1, #396	; 0x18c
 c94:	bl	690 <sendto_one_numeric@plt>
 c98:	ldr	r3, [pc, #336]	; df0 <distribute_hostchange+0x198>
 c9c:	ldr	r3, [r5, r3]
 ca0:	ldr	r2, [pc, #332]	; df4 <distribute_hostchange+0x19c>
 ca4:	ldr	r2, [r5, r2]
 ca8:	ldr	r3, [r3]
 cac:	ldr	r2, [r2]
 cb0:	orr	r2, r3, r2
 cb4:	ldr	r3, [pc, #316]	; df8 <distribute_hostchange+0x1a0>
 cb8:	ldr	r3, [r5, r3]
 cbc:	ldrb	r3, [r3, #396]	; 0x18c
 cc0:	cmp	r3, #0
 cc4:	ldr	r3, [pc, #300]	; df8 <distribute_hostchange+0x1a0>
 cc8:	ldr	r3, [r5, r3]
 ccc:	addeq	r3, r3, #88	; 0x58
 cd0:	addne	r3, r3, #396	; 0x18c
 cd4:	ldrb	r1, [r4, #396]	; 0x18c
 cd8:	cmp	r1, #0
 cdc:	addne	r1, r4, #396	; 0x18c
 ce0:	addeq	r1, r4, #88	; 0x58
 ce4:	str	r6, [sp, #12]
 ce8:	str	r1, [sp, #8]
 cec:	str	r3, [sp, #4]
 cf0:	ldr	r3, [pc, #260]	; dfc <distribute_hostchange+0x1a4>
 cf4:	add	r3, pc, r3
 cf8:	str	r3, [sp]
 cfc:	mov	r3, #0
 d00:	mov	r1, r3
 d04:	mov	r0, r3
 d08:	bl	66c <sendto_server@plt>
 d0c:	ldr	r3, [pc, #224]	; df4 <distribute_hostchange+0x19c>
 d10:	ldr	r3, [r5, r3]
 d14:	ldr	r2, [r3]
 d18:	ldr	r3, [pc, #208]	; df0 <distribute_hostchange+0x198>
 d1c:	ldr	r3, [r5, r3]
 d20:	ldr	r3, [r3]
 d24:	ldr	r1, [pc, #204]	; df8 <distribute_hostchange+0x1a0>
 d28:	ldr	r1, [r5, r1]
 d2c:	ldrb	r1, [r1, #396]	; 0x18c
 d30:	cmp	r1, #0
 d34:	ldr	r1, [pc, #188]	; df8 <distribute_hostchange+0x1a0>
 d38:	ldr	r1, [r5, r1]
 d3c:	addeq	r1, r1, #88	; 0x58
 d40:	addne	r1, r1, #396	; 0x18c
 d44:	ldrb	r0, [r4, #396]	; 0x18c
 d48:	cmp	r0, #0
 d4c:	addne	r0, r4, #396	; 0x18c
 d50:	addeq	r0, r4, #88	; 0x58
 d54:	str	r6, [sp, #12]
 d58:	str	r0, [sp, #8]
 d5c:	str	r1, [sp, #4]
 d60:	ldr	r1, [pc, #152]	; e00 <distribute_hostchange+0x1a8>
 d64:	add	r1, pc, r1
 d68:	str	r1, [sp]
 d6c:	mov	r1, #0
 d70:	mov	r0, r1
 d74:	bl	66c <sendto_server@plt>
 d78:	ldr	r3, [pc, #132]	; e04 <distribute_hostchange+0x1ac>
 d7c:	add	r3, pc, r3
 d80:	str	r3, [sp, #4]
 d84:	mov	r3, #0
 d88:	str	r3, [sp]
 d8c:	mov	r3, r6
 d90:	add	r2, r4, #152	; 0x98
 d94:	add	r1, r4, #88	; 0x58
 d98:	mov	r0, r4
 d9c:	bl	6cc <change_nick_user_host@plt>
 da0:	cmp	r7, r6
 da4:	ldr	r3, [r4, #64]	; 0x40
 da8:	orrne	r3, r3, #131072	; 0x20000
 dac:	biceq	r3, r3, #131072	; 0x20000
 db0:	ldr	r2, [r4, #68]	; 0x44
 db4:	str	r3, [r4, #64]	; 0x40
 db8:	str	r2, [r4, #68]	; 0x44
 dbc:	add	sp, sp, #20
 dc0:	ldrd	r4, [sp]
 dc4:	ldrd	r6, [sp, #8]
 dc8:	add	sp, sp, #16
 dcc:	pop	{pc}		; (ldr pc, [sp], #4)
 dd0:	mov	r3, r1
 dd4:	ldr	r2, [pc, #44]	; e08 <distribute_hostchange+0x1b0>
 dd8:	add	r2, pc, r2
 ddc:	mov	r1, #396	; 0x18c
 de0:	bl	690 <sendto_one_numeric@plt>
 de4:	b	c98 <distribute_hostchange+0x40>
 de8:	.word	0x00011384
 dec:	.word	0x000003c8
 df0:	.word	0x00000064
 df4:	.word	0x00000058
 df8:	.word	0x0000006c
 dfc:	.word	0x00000390
 e00:	.word	0x00000334
 e04:	.word	0x00000338
 e08:	.word	0x00000298

00000e0c <check_umode_change>:
 e0c:	strd	r4, [sp, #-24]!	; 0xffffffe8
 e10:	strd	r6, [sp, #8]
 e14:	str	r8, [sp, #16]
 e18:	str	lr, [sp, #20]
 e1c:	ldr	r1, [pc, #292]	; f48 <check_umode_change+0x13c>
 e20:	add	r1, pc, r1
 e24:	ldr	r4, [r0]
 e28:	ldr	ip, [r4, #64]	; 0x40
 e2c:	and	r2, ip, #8192	; 0x2000
 e30:	mov	r3, #0
 e34:	orrs	r3, r2, r3
 e38:	beq	edc <check_umode_change+0xd0>
 e3c:	ldrh	r3, [r4, #80]	; 0x50
 e40:	cmp	r3, #64	; 0x40
 e44:	bne	edc <check_umode_change+0xd0>
 e48:	ldr	r5, [r4, #56]	; 0x38
 e4c:	ldr	r3, [pc, #248]	; f4c <check_umode_change+0x140>
 e50:	ldr	r3, [r1, r3]
 e54:	ldr	r6, [r3, #416]	; 0x1a0
 e58:	ldr	r3, [r0, #4]
 e5c:	eor	r3, r3, r5
 e60:	tst	r3, r6
 e64:	beq	edc <check_umode_change+0xd0>
 e68:	tst	r5, r6
 e6c:	beq	f18 <check_umode_change+0x10c>
 e70:	and	r2, ip, #16777216	; 0x1000000
 e74:	mov	r3, #0
 e78:	orrs	r3, r2, r3
 e7c:	bne	ed4 <check_umode_change+0xc8>
 e80:	ldr	r3, [r4, #432]	; 0x1b0
 e84:	ldr	r7, [r3, #432]	; 0x1b0
 e88:	cmp	r7, #0
 e8c:	beq	ed4 <check_umode_change+0xc8>
 e90:	and	r2, ip, #131072	; 0x20000
 e94:	mov	r3, #0
 e98:	orrs	r3, r2, r3
 e9c:	beq	ef0 <check_umode_change+0xe4>
 ea0:	add	r8, r4, #163	; 0xa3
 ea4:	mov	r1, r7
 ea8:	mov	r0, r8
 eac:	bl	63c <strcmp@plt>
 eb0:	cmp	r0, #0
 eb4:	bne	ed4 <check_umode_change+0xc8>
 eb8:	mov	r3, r8
 ebc:	ldr	r2, [pc, #140]	; f50 <check_umode_change+0x144>
 ec0:	add	r2, pc, r2
 ec4:	mov	r1, #396	; 0x18c
 ec8:	mov	r0, r4
 ecc:	bl	690 <sendto_one_numeric@plt>
 ed0:	b	edc <check_umode_change+0xd0>
 ed4:	bic	r5, r5, r6
 ed8:	str	r5, [r4, #56]	; 0x38
 edc:	ldrd	r4, [sp]
 ee0:	ldrd	r6, [sp, #8]
 ee4:	ldr	r8, [sp, #16]
 ee8:	add	sp, sp, #20
 eec:	pop	{pc}		; (ldr pc, [sp], #4)
 ef0:	add	r8, r4, #163	; 0xa3
 ef4:	mov	r1, r7
 ef8:	mov	r0, r8
 efc:	bl	63c <strcmp@plt>
 f00:	cmp	r0, #0
 f04:	beq	eb8 <check_umode_change+0xac>
 f08:	mov	r1, r7
 f0c:	mov	r0, r4
 f10:	bl	c58 <distribute_hostchange>
 f14:	b	edc <check_umode_change+0xd0>
 f18:	ldr	r3, [r4, #432]	; 0x1b0
 f1c:	ldr	r1, [r3, #432]	; 0x1b0
 f20:	cmp	r1, #0
 f24:	beq	edc <check_umode_change+0xd0>
 f28:	add	r0, r4, #163	; 0xa3
 f2c:	bl	63c <strcmp@plt>
 f30:	cmp	r0, #0
 f34:	bne	edc <check_umode_change+0xd0>
 f38:	add	r1, r4, #227	; 0xe3
 f3c:	mov	r0, r4
 f40:	bl	c58 <distribute_hostchange>
 f44:	b	edc <check_umode_change+0xd0>
 f48:	.word	0x000111d8
 f4c:	.word	0x0000005c
 f50:	.word	0x00000194

00000f54 <_moddeinit>:
 f54:	str	r4, [sp, #-8]!
 f58:	str	lr, [sp, #4]
 f5c:	ldr	r3, [pc, #32]	; f84 <_moddeinit+0x30>
 f60:	add	r3, pc, r3
 f64:	ldr	r2, [pc, #28]	; f88 <_moddeinit+0x34>
 f68:	ldr	r3, [r3, r2]
 f6c:	mov	r2, #0
 f70:	str	r2, [r3, #416]	; 0x1a0
 f74:	bl	6f0 <construct_umodebuf@plt>
 f78:	ldr	r4, [sp]
 f7c:	add	sp, sp, #4
 f80:	pop	{pc}		; (ldr pc, [sp], #4)
 f84:	.word	0x00011098
 f88:	.word	0x0000005c

00000f8c <_modinit>:
 f8c:	str	r4, [sp, #-8]!
 f90:	str	lr, [sp, #4]
 f94:	ldr	r4, [pc, #36]	; fc0 <_modinit+0x34>
 f98:	add	r4, pc, r4
 f9c:	bl	660 <find_umode_slot@plt>
 fa0:	ldr	r3, [pc, #28]	; fc4 <_modinit+0x38>
 fa4:	ldr	r3, [r4, r3]
 fa8:	str	r0, [r3, #416]	; 0x1a0
 fac:	bl	6f0 <construct_umodebuf@plt>
 fb0:	mov	r0, #0
 fb4:	ldr	r4, [sp]
 fb8:	add	sp, sp, #4
 fbc:	pop	{pc}		; (ldr pc, [sp], #4)
 fc0:	.word	0x00011060
 fc4:	.word	0x0000005c

Disassembly of section .fini:

00000fc8 <_fini>:
 fc8:	push	{r3, lr}
 fcc:	pop	{r3, pc}
