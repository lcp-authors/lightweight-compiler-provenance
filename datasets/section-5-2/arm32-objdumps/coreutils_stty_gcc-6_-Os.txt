
../repos/coreutils/src/stty:     file format elf32-littlearm


Disassembly of section .init:

00010ec4 <.init>:
   10ec4:	push	{r3, lr}
   10ec8:	bl	11ad0 <tcgetattr@plt+0x904>
   10ecc:	pop	{r3, pc}

Disassembly of section .plt:

00010ed0 <calloc@plt-0x14>:
   10ed0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ed4:	ldr	lr, [pc, #4]	; 10ee0 <calloc@plt-0x4>
   10ed8:	add	lr, pc, lr
   10edc:	ldr	pc, [lr, #8]!
   10ee0:	andeq	sl, r1, r0, lsr #2

00010ee4 <calloc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #106496	; 0x1a000
   10eec:	ldr	pc, [ip, #288]!	; 0x120

00010ef0 <fputs_unlocked@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #106496	; 0x1a000
   10ef8:	ldr	pc, [ip, #280]!	; 0x118

00010efc <raise@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #106496	; 0x1a000
   10f04:	ldr	pc, [ip, #272]!	; 0x110

00010f08 <strcmp@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #106496	; 0x1a000
   10f10:	ldr	pc, [ip, #264]!	; 0x108

00010f14 <strtol@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #106496	; 0x1a000
   10f1c:	ldr	pc, [ip, #256]!	; 0x100

00010f20 <fflush@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #106496	; 0x1a000
   10f28:	ldr	pc, [ip, #248]!	; 0xf8

00010f2c <free@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #106496	; 0x1a000
   10f34:	ldr	pc, [ip, #240]!	; 0xf0

00010f38 <_exit@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #106496	; 0x1a000
   10f40:	ldr	pc, [ip, #232]!	; 0xe8

00010f44 <memcpy@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #106496	; 0x1a000
   10f4c:	ldr	pc, [ip, #224]!	; 0xe0

00010f50 <mbsinit@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #106496	; 0x1a000
   10f58:	ldr	pc, [ip, #216]!	; 0xd8

00010f5c <memcmp@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #106496	; 0x1a000
   10f64:	ldr	pc, [ip, #208]!	; 0xd0

00010f68 <fputc_unlocked@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #106496	; 0x1a000
   10f70:	ldr	pc, [ip, #200]!	; 0xc8

00010f74 <dcgettext@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #106496	; 0x1a000
   10f7c:	ldr	pc, [ip, #192]!	; 0xc0

00010f80 <cfgetispeed@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #106496	; 0x1a000
   10f88:	ldr	pc, [ip, #184]!	; 0xb8

00010f8c <dup2@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #106496	; 0x1a000
   10f94:	ldr	pc, [ip, #176]!	; 0xb0

00010f98 <realloc@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #106496	; 0x1a000
   10fa0:	ldr	pc, [ip, #168]!	; 0xa8

00010fa4 <textdomain@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #106496	; 0x1a000
   10fac:	ldr	pc, [ip, #160]!	; 0xa0

00010fb0 <iswprint@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #106496	; 0x1a000
   10fb8:	ldr	pc, [ip, #152]!	; 0x98

00010fbc <cfsetospeed@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #106496	; 0x1a000
   10fc4:	ldr	pc, [ip, #144]!	; 0x90

00010fc8 <ioctl@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #106496	; 0x1a000
   10fd0:	ldr	pc, [ip, #136]!	; 0x88

00010fd4 <lseek64@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #106496	; 0x1a000
   10fdc:	ldr	pc, [ip, #128]!	; 0x80

00010fe0 <__ctype_get_mb_cur_max@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #106496	; 0x1a000
   10fe8:	ldr	pc, [ip, #120]!	; 0x78

00010fec <tcsetattr@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #106496	; 0x1a000
   10ff4:	ldr	pc, [ip, #112]!	; 0x70

00010ff8 <__fpending@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #106496	; 0x1a000
   11000:	ldr	pc, [ip, #104]!	; 0x68

00011004 <ferror_unlocked@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #106496	; 0x1a000
   1100c:	ldr	pc, [ip, #96]!	; 0x60

00011010 <mbrtowc@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #106496	; 0x1a000
   11018:	ldr	pc, [ip, #88]!	; 0x58

0001101c <error@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #106496	; 0x1a000
   11024:	ldr	pc, [ip, #80]!	; 0x50

00011028 <open64@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #106496	; 0x1a000
   11030:	ldr	pc, [ip, #72]!	; 0x48

00011034 <getenv@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #106496	; 0x1a000
   1103c:	ldr	pc, [ip, #64]!	; 0x40

00011040 <malloc@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #106496	; 0x1a000
   11048:	ldr	pc, [ip, #56]!	; 0x38

0001104c <__libc_start_main@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #106496	; 0x1a000
   11054:	ldr	pc, [ip, #48]!	; 0x30

00011058 <__freading@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #106496	; 0x1a000
   11060:	ldr	pc, [ip, #40]!	; 0x28

00011064 <__gmon_start__@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #106496	; 0x1a000
   1106c:	ldr	pc, [ip, #32]!

00011070 <getopt_long@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #106496	; 0x1a000
   11078:	ldr	pc, [ip, #24]!

0001107c <__ctype_b_loc@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #106496	; 0x1a000
   11084:	ldr	pc, [ip, #16]!

00011088 <exit@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #106496	; 0x1a000
   11090:	ldr	pc, [ip, #8]!

00011094 <strtoul@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #106496	; 0x1a000
   1109c:	ldr	pc, [ip, #0]!

000110a0 <strlen@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #102400	; 0x19000
   110a8:	ldr	pc, [ip, #4088]!	; 0xff8

000110ac <strchr@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #102400	; 0x19000
   110b4:	ldr	pc, [ip, #4080]!	; 0xff0

000110b8 <cfsetispeed@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #102400	; 0x19000
   110c0:	ldr	pc, [ip, #4072]!	; 0xfe8

000110c4 <cfgetospeed@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #102400	; 0x19000
   110cc:	ldr	pc, [ip, #4064]!	; 0xfe0

000110d0 <__errno_location@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #102400	; 0x19000
   110d8:	ldr	pc, [ip, #4056]!	; 0xfd8

000110dc <__cxa_atexit@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #102400	; 0x19000
   110e4:	ldr	pc, [ip, #4048]!	; 0xfd0

000110e8 <__vasprintf_chk@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #102400	; 0x19000
   110f0:	ldr	pc, [ip, #4040]!	; 0xfc8

000110f4 <memset@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #102400	; 0x19000
   110fc:	ldr	pc, [ip, #4032]!	; 0xfc0

00011100 <__printf_chk@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #102400	; 0x19000
   11108:	ldr	pc, [ip, #4024]!	; 0xfb8

0001110c <fileno@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #102400	; 0x19000
   11114:	ldr	pc, [ip, #4016]!	; 0xfb0

00011118 <strtoumax@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #102400	; 0x19000
   11120:	ldr	pc, [ip, #4008]!	; 0xfa8

00011124 <__fprintf_chk@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #102400	; 0x19000
   1112c:	ldr	pc, [ip, #4000]!	; 0xfa0

00011130 <fclose@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #102400	; 0x19000
   11138:	ldr	pc, [ip, #3992]!	; 0xf98

0001113c <fseeko64@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #102400	; 0x19000
   11144:	ldr	pc, [ip, #3984]!	; 0xf90

00011148 <fcntl64@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #102400	; 0x19000
   11150:	ldr	pc, [ip, #3976]!	; 0xf88

00011154 <setlocale@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #102400	; 0x19000
   1115c:	ldr	pc, [ip, #3968]!	; 0xf80

00011160 <strrchr@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #102400	; 0x19000
   11168:	ldr	pc, [ip, #3960]!	; 0xf78

0001116c <nl_langinfo@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #102400	; 0x19000
   11174:	ldr	pc, [ip, #3952]!	; 0xf70

00011178 <bindtextdomain@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #102400	; 0x19000
   11180:	ldr	pc, [ip, #3944]!	; 0xf68

00011184 <fputs@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #102400	; 0x19000
   1118c:	ldr	pc, [ip, #3936]!	; 0xf60

00011190 <strncmp@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #102400	; 0x19000
   11198:	ldr	pc, [ip, #3928]!	; 0xf58

0001119c <abort@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #102400	; 0x19000
   111a4:	ldr	pc, [ip, #3920]!	; 0xf50

000111a8 <close@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #102400	; 0x19000
   111b0:	ldr	pc, [ip, #3912]!	; 0xf48

000111b4 <putchar_unlocked@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #102400	; 0x19000
   111bc:	ldr	pc, [ip, #3904]!	; 0xf40

000111c0 <__assert_fail@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #102400	; 0x19000
   111c8:	ldr	pc, [ip, #3896]!	; 0xf38

000111cc <tcgetattr@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #102400	; 0x19000
   111d4:	ldr	pc, [ip, #3888]!	; 0xf30

Disassembly of section .text:

000111d8 <.text>:
   111d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111dc:	sub	sp, sp, #36	; 0x24
   111e0:	mov	fp, r1
   111e4:	str	r0, [sp, #20]
   111e8:	ldr	r0, [r1]
   111ec:	bl	13c94 <tcgetattr@plt+0x2ac8>
   111f0:	ldr	r1, [pc, #2024]	; 119e0 <tcgetattr@plt+0x814>
   111f4:	mov	r0, #6
   111f8:	bl	11154 <setlocale@plt>
   111fc:	ldr	r1, [pc, #2016]	; 119e4 <tcgetattr@plt+0x818>
   11200:	ldr	r0, [pc, #2016]	; 119e8 <tcgetattr@plt+0x81c>
   11204:	bl	11178 <bindtextdomain@plt>
   11208:	ldr	r0, [pc, #2008]	; 119e8 <tcgetattr@plt+0x81c>
   1120c:	bl	10fa4 <textdomain@plt>
   11210:	ldr	r0, [pc, #2004]	; 119ec <tcgetattr@plt+0x820>
   11214:	mov	r4, #0
   11218:	bl	17080 <tcgetattr@plt+0x5eb4>
   1121c:	mov	r8, #1
   11220:	ldr	r3, [pc, #1992]	; 119f0 <tcgetattr@plt+0x824>
   11224:	mov	sl, r4
   11228:	mov	r5, r4
   1122c:	mov	r9, r8
   11230:	mov	r7, r4
   11234:	str	r4, [r3]
   11238:	str	r4, [sp, #16]
   1123c:	ldr	r0, [sp, #20]
   11240:	mov	r6, #0
   11244:	str	r6, [sp]
   11248:	ldr	r3, [pc, #1956]	; 119f4 <tcgetattr@plt+0x828>
   1124c:	ldr	r2, [pc, #1956]	; 119f8 <tcgetattr@plt+0x82c>
   11250:	add	r1, fp, r7, lsl #2
   11254:	sub	r0, r0, r7
   11258:	bl	11070 <getopt_long@plt>
   1125c:	cmn	r0, #1
   11260:	bne	11278 <tcgetattr@plt+0xac>
   11264:	ands	r7, r5, sl
   11268:	beq	11394 <tcgetattr@plt+0x1c8>
   1126c:	mov	r2, #5
   11270:	ldr	r1, [pc, #1924]	; 119fc <tcgetattr@plt+0x830>
   11274:	b	11338 <tcgetattr@plt+0x16c>
   11278:	cmp	r0, #70	; 0x46
   1127c:	beq	11328 <tcgetattr@plt+0x15c>
   11280:	bgt	112d8 <tcgetattr@plt+0x10c>
   11284:	cmn	r0, #3
   11288:	beq	11364 <tcgetattr@plt+0x198>
   1128c:	cmn	r0, #2
   11290:	beq	1135c <tcgetattr@plt+0x190>
   11294:	add	r7, r7, r9
   11298:	ldr	r1, [pc, #1888]	; 11a00 <tcgetattr@plt+0x834>
   1129c:	ldr	r6, [fp, r7, lsl #2]
   112a0:	mov	r0, r6
   112a4:	bl	10f08 <strcmp@plt>
   112a8:	cmp	r0, #0
   112ac:	beq	112c4 <tcgetattr@plt+0xf8>
   112b0:	ldr	r1, [pc, #1868]	; 11a04 <tcgetattr@plt+0x838>
   112b4:	mov	r0, r6
   112b8:	bl	10f08 <strcmp@plt>
   112bc:	cmp	r0, #0
   112c0:	movne	r8, #0
   112c4:	ldr	r2, [pc, #1852]	; 11a08 <tcgetattr@plt+0x83c>
   112c8:	mov	r3, #0
   112cc:	mov	r9, #1
   112d0:	str	r3, [r2]
   112d4:	b	112fc <tcgetattr@plt+0x130>
   112d8:	cmp	r0, #97	; 0x61
   112dc:	moveq	r5, #1
   112e0:	streq	r5, [sp, #16]
   112e4:	beq	112fc <tcgetattr@plt+0x130>
   112e8:	cmp	r0, #103	; 0x67
   112ec:	moveq	r3, #2
   112f0:	moveq	sl, #1
   112f4:	streq	r3, [sp, #16]
   112f8:	bne	11294 <tcgetattr@plt+0xc8>
   112fc:	ldr	r3, [pc, #1796]	; 11a08 <tcgetattr@plt+0x83c>
   11300:	add	r1, fp, r7, lsl #2
   11304:	mov	r0, #0
   11308:	ldr	r2, [r3]
   1130c:	mov	r3, r9
   11310:	cmp	r3, r2
   11314:	mov	r9, r3
   11318:	bge	1123c <tcgetattr@plt+0x70>
   1131c:	str	r0, [r1, r3, lsl #2]
   11320:	add	r3, r3, #1
   11324:	b	11310 <tcgetattr@plt+0x144>
   11328:	cmp	r4, #0
   1132c:	beq	11350 <tcgetattr@plt+0x184>
   11330:	ldr	r1, [pc, #1748]	; 11a0c <tcgetattr@plt+0x840>
   11334:	mov	r2, #5
   11338:	mov	r0, r6
   1133c:	bl	10f74 <dcgettext@plt>
   11340:	mov	r1, r6
   11344:	mov	r2, r0
   11348:	mov	r0, #1
   1134c:	bl	1101c <error@plt>
   11350:	ldr	r3, [pc, #1720]	; 11a10 <tcgetattr@plt+0x844>
   11354:	ldr	r4, [r3]
   11358:	b	112fc <tcgetattr@plt+0x130>
   1135c:	mov	r0, r6
   11360:	bl	12168 <tcgetattr@plt+0xf9c>
   11364:	ldr	r3, [pc, #1704]	; 11a14 <tcgetattr@plt+0x848>
   11368:	ldr	r0, [pc, #1704]	; 11a18 <tcgetattr@plt+0x84c>
   1136c:	str	r3, [sp]
   11370:	ldr	r3, [pc, #1700]	; 11a1c <tcgetattr@plt+0x850>
   11374:	str	r6, [sp, #4]
   11378:	ldr	r2, [pc, #1696]	; 11a20 <tcgetattr@plt+0x854>
   1137c:	ldr	r0, [r0]
   11380:	ldr	r3, [r3]
   11384:	ldr	r1, [pc, #1688]	; 11a24 <tcgetattr@plt+0x858>
   11388:	bl	15714 <tcgetattr@plt+0x4548>
   1138c:	mov	r0, r6
   11390:	bl	11088 <exit@plt>
   11394:	cmp	r8, #0
   11398:	bne	113c0 <tcgetattr@plt+0x1f4>
   1139c:	orrs	r3, r5, sl
   113a0:	beq	113c0 <tcgetattr@plt+0x1f4>
   113a4:	mov	r2, #5
   113a8:	ldr	r1, [pc, #1656]	; 11a28 <tcgetattr@plt+0x85c>
   113ac:	mov	r0, r8
   113b0:	bl	10f74 <dcgettext@plt>
   113b4:	mov	r1, r8
   113b8:	mov	r2, r0
   113bc:	b	11348 <tcgetattr@plt+0x17c>
   113c0:	cmp	r4, #0
   113c4:	movne	r6, r4
   113c8:	bne	113e0 <tcgetattr@plt+0x214>
   113cc:	mov	r2, #5
   113d0:	ldr	r1, [pc, #1620]	; 11a2c <tcgetattr@plt+0x860>
   113d4:	mov	r0, r4
   113d8:	bl	10f74 <dcgettext@plt>
   113dc:	mov	r6, r0
   113e0:	orr	r8, sl, r8
   113e4:	orr	r5, r5, r8
   113e8:	ands	r5, r5, #255	; 0xff
   113ec:	bne	1141c <tcgetattr@plt+0x250>
   113f0:	add	r3, sp, #30
   113f4:	str	r3, [sp, #8]
   113f8:	add	r3, sp, #31
   113fc:	str	r3, [sp, #4]
   11400:	ldr	r3, [pc, #1576]	; 11a30 <tcgetattr@plt+0x864>
   11404:	mov	r2, fp
   11408:	str	r3, [sp]
   1140c:	mov	r1, r6
   11410:	ldr	r3, [sp, #20]
   11414:	mov	r0, #1
   11418:	bl	12cf4 <tcgetattr@plt+0x1b28>
   1141c:	cmp	r4, #0
   11420:	beq	114d0 <tcgetattr@plt+0x304>
   11424:	mov	r3, #0
   11428:	mov	r2, #2048	; 0x800
   1142c:	mov	r1, r6
   11430:	mov	r0, r3
   11434:	bl	13be0 <tcgetattr@plt+0x2a14>
   11438:	cmp	r0, #0
   1143c:	bge	11464 <tcgetattr@plt+0x298>
   11440:	bl	110d0 <__errno_location@plt>
   11444:	mov	r2, r6
   11448:	mov	r1, #3
   1144c:	ldr	r4, [r0]
   11450:	mov	r0, #0
   11454:	bl	15184 <tcgetattr@plt+0x3fb8>
   11458:	ldr	r2, [pc, #1492]	; 11a34 <tcgetattr@plt+0x868>
   1145c:	mov	r3, r0
   11460:	b	114ac <tcgetattr@plt+0x2e0>
   11464:	mov	r1, #3
   11468:	mov	r0, #0
   1146c:	bl	13a1c <tcgetattr@plt+0x2850>
   11470:	cmn	r0, #1
   11474:	bne	114b8 <tcgetattr@plt+0x2ec>
   11478:	bl	110d0 <__errno_location@plt>
   1147c:	mov	r2, #5
   11480:	ldr	r1, [pc, #1456]	; 11a38 <tcgetattr@plt+0x86c>
   11484:	ldr	r4, [r0]
   11488:	mov	r0, #0
   1148c:	bl	10f74 <dcgettext@plt>
   11490:	mov	r2, r6
   11494:	mov	r1, #3
   11498:	mov	r5, r0
   1149c:	mov	r0, #0
   114a0:	bl	15184 <tcgetattr@plt+0x3fb8>
   114a4:	mov	r2, r5
   114a8:	mov	r3, r0
   114ac:	mov	r1, r4
   114b0:	mov	r0, #1
   114b4:	bl	1101c <error@plt>
   114b8:	bic	r2, r0, #2048	; 0x800
   114bc:	mov	r1, #4
   114c0:	mov	r0, #0
   114c4:	bl	13a1c <tcgetattr@plt+0x2850>
   114c8:	cmp	r0, #0
   114cc:	blt	11478 <tcgetattr@plt+0x2ac>
   114d0:	ldr	r8, [pc, #1380]	; 11a3c <tcgetattr@plt+0x870>
   114d4:	mov	r0, #0
   114d8:	add	sl, r8, #80	; 0x50
   114dc:	mov	r1, sl
   114e0:	bl	111cc <tcgetattr@plt>
   114e4:	mov	r4, r8
   114e8:	subs	r9, r0, #0
   114ec:	bne	11440 <tcgetattr@plt+0x274>
   114f0:	cmp	r5, #0
   114f4:	beq	118e4 <tcgetattr@plt+0x718>
   114f8:	bl	12004 <tcgetattr@plt+0xe38>
   114fc:	ldr	r3, [sp, #16]
   11500:	str	r9, [r8]
   11504:	cmp	r3, #1
   11508:	str	r0, [r8, #4]
   1150c:	beq	116f8 <tcgetattr@plt+0x52c>
   11510:	cmp	r3, #2
   11514:	beq	11888 <tcgetattr@plt+0x6bc>
   11518:	mov	r0, sl
   1151c:	mov	r1, #1
   11520:	bl	11d58 <tcgetattr@plt+0xb8c>
   11524:	ldrb	r1, [r8, #96]	; 0x60
   11528:	ldr	r0, [pc, #1296]	; 11a40 <tcgetattr@plt+0x874>
   1152c:	bl	11cac <tcgetattr@plt+0xae0>
   11530:	ldr	r6, [pc, #1292]	; 11a44 <tcgetattr@plt+0x878>
   11534:	mov	r0, #10
   11538:	ldr	sl, [pc, #1288]	; 11a48 <tcgetattr@plt+0x87c>
   1153c:	ldr	fp, [pc, #1288]	; 11a4c <tcgetattr@plt+0x880>
   11540:	bl	111b4 <putchar_unlocked@plt>
   11544:	str	r9, [r8]
   11548:	mov	r9, r5
   1154c:	ldr	r8, [r6]
   11550:	ldr	r1, [pc, #1272]	; 11a50 <tcgetattr@plt+0x884>
   11554:	mov	r0, r8
   11558:	bl	10f08 <strcmp@plt>
   1155c:	cmp	r0, #0
   11560:	bne	115c0 <tcgetattr@plt+0x3f4>
   11564:	ldr	r3, [r4, #92]	; 0x5c
   11568:	tst	r3, #2
   1156c:	bne	11624 <tcgetattr@plt+0x458>
   11570:	ldrb	r2, [r4, #102]	; 0x66
   11574:	ldrb	r1, [r4, #103]	; 0x67
   11578:	ldr	r0, [pc, #1236]	; 11a54 <tcgetattr@plt+0x888>
   1157c:	bl	11cac <tcgetattr@plt+0xae0>
   11580:	ldr	r6, [pc, #1232]	; 11a58 <tcgetattr@plt+0x88c>
   11584:	mov	r8, r5
   11588:	mov	r9, #0
   1158c:	str	r9, [r4]
   11590:	ldr	fp, [r6]
   11594:	cmp	fp, #0
   11598:	bne	11638 <tcgetattr@plt+0x46c>
   1159c:	cmp	r8, #0
   115a0:	bne	115ac <tcgetattr@plt+0x3e0>
   115a4:	mov	r0, #10
   115a8:	bl	111b4 <putchar_unlocked@plt>
   115ac:	mov	r3, #0
   115b0:	str	r3, [r4]
   115b4:	mov	r0, #0
   115b8:	add	sp, sp, #36	; 0x24
   115bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115c0:	ldr	r3, [r6, #8]
   115c4:	ldrb	r2, [r6, #4]
   115c8:	add	r3, r4, r3
   115cc:	ldrb	r3, [r3, #97]	; 0x61
   115d0:	cmp	r2, r3
   115d4:	str	r3, [sp, #16]
   115d8:	beq	1161c <tcgetattr@plt+0x450>
   115dc:	mov	r1, sl
   115e0:	mov	r0, r8
   115e4:	bl	10f08 <strcmp@plt>
   115e8:	ldr	r3, [sp, #16]
   115ec:	cmp	r0, #0
   115f0:	beq	1161c <tcgetattr@plt+0x450>
   115f4:	cmp	r3, #0
   115f8:	moveq	r2, fp
   115fc:	beq	1160c <tcgetattr@plt+0x440>
   11600:	mov	r0, r3
   11604:	bl	11e78 <tcgetattr@plt+0xcac>
   11608:	mov	r2, r0
   1160c:	mov	r1, r8
   11610:	ldr	r0, [pc, #1092]	; 11a5c <tcgetattr@plt+0x890>
   11614:	bl	11cac <tcgetattr@plt+0xae0>
   11618:	mov	r9, r7
   1161c:	add	r6, r6, #12
   11620:	b	1154c <tcgetattr@plt+0x380>
   11624:	cmp	r9, #0
   11628:	bne	11580 <tcgetattr@plt+0x3b4>
   1162c:	mov	r0, #10
   11630:	bl	111b4 <putchar_unlocked@plt>
   11634:	b	11580 <tcgetattr@plt+0x3b4>
   11638:	ldrb	sl, [r6, #8]
   1163c:	tst	sl, #8
   11640:	bne	116d0 <tcgetattr@plt+0x504>
   11644:	ldr	r3, [r6, #4]
   11648:	cmp	r3, r9
   1164c:	beq	11678 <tcgetattr@plt+0x4ac>
   11650:	cmp	r8, #0
   11654:	movne	r9, r3
   11658:	bne	11678 <tcgetattr@plt+0x4ac>
   1165c:	mov	r0, #10
   11660:	str	r3, [sp, #16]
   11664:	bl	111b4 <putchar_unlocked@plt>
   11668:	ldr	r3, [sp, #16]
   1166c:	str	r8, [r4]
   11670:	mov	r9, r3
   11674:	mov	r8, r5
   11678:	mov	r0, r3
   1167c:	ldr	r1, [pc, #988]	; 11a60 <tcgetattr@plt+0x894>
   11680:	bl	11c5c <tcgetattr@plt+0xa90>
   11684:	ldr	r3, [r6, #16]
   11688:	cmp	r3, #0
   1168c:	ldreq	r3, [r6, #12]
   11690:	cmp	r0, #0
   11694:	bne	116ac <tcgetattr@plt+0x4e0>
   11698:	ldr	r3, [pc, #964]	; 11a64 <tcgetattr@plt+0x898>
   1169c:	ldr	r2, [pc, #964]	; 11a68 <tcgetattr@plt+0x89c>
   116a0:	ldr	r1, [pc, #964]	; 11a6c <tcgetattr@plt+0x8a0>
   116a4:	ldr	r0, [pc, #964]	; 11a70 <tcgetattr@plt+0x8a4>
   116a8:	bl	111c0 <__assert_fail@plt>
   116ac:	ldr	r1, [r0]
   116b0:	and	r3, r3, r1
   116b4:	ldr	r1, [r6, #12]
   116b8:	cmp	r3, r1
   116bc:	bne	116d8 <tcgetattr@plt+0x50c>
   116c0:	tst	sl, #2
   116c4:	movne	r1, fp
   116c8:	ldrne	r0, [pc, #868]	; 11a34 <tcgetattr@plt+0x868>
   116cc:	bne	116ec <tcgetattr@plt+0x520>
   116d0:	add	r6, r6, #20
   116d4:	b	11590 <tcgetattr@plt+0x3c4>
   116d8:	and	sl, sl, #5
   116dc:	cmp	sl, #5
   116e0:	bne	116d0 <tcgetattr@plt+0x504>
   116e4:	ldr	r0, [pc, #904]	; 11a74 <tcgetattr@plt+0x8a8>
   116e8:	mov	r1, fp
   116ec:	bl	11cac <tcgetattr@plt+0xae0>
   116f0:	mov	r8, r7
   116f4:	b	116d0 <tcgetattr@plt+0x504>
   116f8:	ldr	r1, [sp, #16]
   116fc:	mov	r0, sl
   11700:	bl	11d58 <tcgetattr@plt+0xb8c>
   11704:	mov	r1, r6
   11708:	ldr	r0, [sp, #16]
   1170c:	bl	1208c <tcgetattr@plt+0xec0>
   11710:	ldrb	r1, [r8, #96]	; 0x60
   11714:	ldr	r0, [pc, #804]	; 11a40 <tcgetattr@plt+0x874>
   11718:	bl	11cac <tcgetattr@plt+0xae0>
   1171c:	mov	r0, #10
   11720:	bl	111b4 <putchar_unlocked@plt>
   11724:	ldr	r5, [pc, #792]	; 11a44 <tcgetattr@plt+0x878>
   11728:	str	r9, [r8]
   1172c:	ldr	r7, [pc, #796]	; 11a50 <tcgetattr@plt+0x884>
   11730:	ldr	r8, [pc, #784]	; 11a48 <tcgetattr@plt+0x87c>
   11734:	ldr	r9, [pc, #784]	; 11a4c <tcgetattr@plt+0x880>
   11738:	ldr	r6, [r5]
   1173c:	mov	r1, r7
   11740:	mov	r0, r6
   11744:	bl	10f08 <strcmp@plt>
   11748:	cmp	r0, #0
   1174c:	bne	117a8 <tcgetattr@plt+0x5dc>
   11750:	ldrb	r2, [r4, #102]	; 0x66
   11754:	ldrb	r1, [r4, #103]	; 0x67
   11758:	ldr	r0, [pc, #792]	; 11a78 <tcgetattr@plt+0x8ac>
   1175c:	bl	11cac <tcgetattr@plt+0xae0>
   11760:	ldr	r3, [r4]
   11764:	cmp	r3, #0
   11768:	beq	11774 <tcgetattr@plt+0x5a8>
   1176c:	mov	r0, #10
   11770:	bl	111b4 <putchar_unlocked@plt>
   11774:	ldr	r5, [pc, #732]	; 11a58 <tcgetattr@plt+0x88c>
   11778:	ldr	r9, [pc, #736]	; 11a60 <tcgetattr@plt+0x894>
   1177c:	ldr	sl, [pc, #752]	; 11a74 <tcgetattr@plt+0x8a8>
   11780:	ldr	fp, [pc, #684]	; 11a34 <tcgetattr@plt+0x868>
   11784:	mov	r3, #0
   11788:	str	r3, [r4]
   1178c:	ldr	r6, [r5]
   11790:	cmp	r6, #0
   11794:	bne	117f0 <tcgetattr@plt+0x624>
   11798:	mov	r0, #10
   1179c:	bl	111b4 <putchar_unlocked@plt>
   117a0:	str	r6, [r4]
   117a4:	b	115b4 <tcgetattr@plt+0x3e8>
   117a8:	mov	r1, r8
   117ac:	mov	r0, r6
   117b0:	bl	10f08 <strcmp@plt>
   117b4:	cmp	r0, #0
   117b8:	beq	117e8 <tcgetattr@plt+0x61c>
   117bc:	ldr	r3, [r5, #8]
   117c0:	add	r3, r4, r3
   117c4:	ldrb	r0, [r3, #97]	; 0x61
   117c8:	cmp	r0, #0
   117cc:	moveq	r2, r9
   117d0:	beq	117dc <tcgetattr@plt+0x610>
   117d4:	bl	11e78 <tcgetattr@plt+0xcac>
   117d8:	mov	r2, r0
   117dc:	mov	r1, r6
   117e0:	ldr	r0, [pc, #628]	; 11a5c <tcgetattr@plt+0x890>
   117e4:	bl	11cac <tcgetattr@plt+0xae0>
   117e8:	add	r5, r5, #12
   117ec:	b	11738 <tcgetattr@plt+0x56c>
   117f0:	ldrb	r8, [r5, #8]
   117f4:	ands	r2, r8, #8
   117f8:	str	r2, [sp, #16]
   117fc:	bne	11880 <tcgetattr@plt+0x6b4>
   11800:	ldr	r7, [r5, #4]
   11804:	cmp	r7, r3
   11808:	beq	1181c <tcgetattr@plt+0x650>
   1180c:	mov	r0, #10
   11810:	bl	111b4 <putchar_unlocked@plt>
   11814:	ldr	r2, [sp, #16]
   11818:	str	r2, [r4]
   1181c:	mov	r1, r9
   11820:	mov	r0, r7
   11824:	bl	11c5c <tcgetattr@plt+0xa90>
   11828:	ldr	r3, [r5, #16]
   1182c:	cmp	r3, #0
   11830:	ldreq	r3, [r5, #12]
   11834:	cmp	r0, #0
   11838:	ldreq	r3, [pc, #572]	; 11a7c <tcgetattr@plt+0x8b0>
   1183c:	ldreq	r2, [pc, #572]	; 11a80 <tcgetattr@plt+0x8b4>
   11840:	beq	116a0 <tcgetattr@plt+0x4d4>
   11844:	ldr	r2, [r0]
   11848:	and	r3, r3, r2
   1184c:	ldr	r2, [r5, #12]
   11850:	cmp	r3, r2
   11854:	moveq	r1, r6
   11858:	moveq	r0, fp
   1185c:	beq	11870 <tcgetattr@plt+0x6a4>
   11860:	tst	r8, #4
   11864:	beq	11874 <tcgetattr@plt+0x6a8>
   11868:	mov	r1, r6
   1186c:	mov	r0, sl
   11870:	bl	11cac <tcgetattr@plt+0xae0>
   11874:	add	r5, r5, #20
   11878:	mov	r3, r7
   1187c:	b	1178c <tcgetattr@plt+0x5c0>
   11880:	mov	r7, r3
   11884:	b	11874 <tcgetattr@plt+0x6a8>
   11888:	ldr	r3, [r8, #92]	; 0x5c
   1188c:	ldr	r1, [pc, #496]	; 11a84 <tcgetattr@plt+0x8b8>
   11890:	str	r3, [sp, #4]
   11894:	ldr	r3, [r8, #88]	; 0x58
   11898:	mov	r0, #1
   1189c:	str	r3, [sp]
   118a0:	ldr	r3, [r8, #84]	; 0x54
   118a4:	ldr	r2, [r8, #80]	; 0x50
   118a8:	bl	11100 <__printf_chk@plt>
   118ac:	ldr	r5, [pc, #468]	; 11a88 <tcgetattr@plt+0x8bc>
   118b0:	mov	r4, #1
   118b4:	ldr	r3, [pc, #420]	; 11a60 <tcgetattr@plt+0x894>
   118b8:	mov	r1, r5
   118bc:	add	r3, r3, r9
   118c0:	mov	r0, r4
   118c4:	ldrb	r2, [r3, #17]
   118c8:	add	r9, r9, #1
   118cc:	bl	11100 <__printf_chk@plt>
   118d0:	cmp	r9, #32
   118d4:	bne	118b4 <tcgetattr@plt+0x6e8>
   118d8:	mov	r0, #10
   118dc:	bl	111b4 <putchar_unlocked@plt>
   118e0:	b	115b4 <tcgetattr@plt+0x3e8>
   118e4:	add	r3, sp, #32
   118e8:	mov	r2, fp
   118ec:	strb	r5, [r3, #-2]!
   118f0:	str	r3, [sp, #8]
   118f4:	add	r3, sp, #31
   118f8:	str	r3, [sp, #4]
   118fc:	str	sl, [sp]
   11900:	ldr	r3, [sp, #20]
   11904:	mov	r1, r6
   11908:	strb	r5, [sp, #31]
   1190c:	bl	12cf4 <tcgetattr@plt+0x1b28>
   11910:	ldrb	r3, [sp, #30]
   11914:	cmp	r3, #0
   11918:	beq	115b4 <tcgetattr@plt+0x3e8>
   1191c:	ldr	r3, [pc, #360]	; 11a8c <tcgetattr@plt+0x8c0>
   11920:	mov	r2, sl
   11924:	mov	r0, r5
   11928:	ldr	r1, [r3]
   1192c:	bl	10fec <tcsetattr@plt>
   11930:	cmp	r0, #0
   11934:	beq	11950 <tcgetattr@plt+0x784>
   11938:	bl	110d0 <__errno_location@plt>
   1193c:	mov	r2, r6
   11940:	mov	r1, #3
   11944:	ldr	r4, [r0]
   11948:	mov	r0, r5
   1194c:	b	11454 <tcgetattr@plt+0x288>
   11950:	add	r1, r8, #140	; 0x8c
   11954:	bl	111cc <tcgetattr@plt>
   11958:	cmp	r0, #0
   1195c:	bne	11938 <tcgetattr@plt+0x76c>
   11960:	mov	r2, #60	; 0x3c
   11964:	add	r1, r8, #140	; 0x8c
   11968:	mov	r0, sl
   1196c:	bl	10f5c <memcmp@plt>
   11970:	cmp	r0, #0
   11974:	beq	115b4 <tcgetattr@plt+0x3e8>
   11978:	ldr	r3, [r8, #148]	; 0x94
   1197c:	bic	r3, r3, #268435456	; 0x10000000
   11980:	bic	r3, r3, #983040	; 0xf0000
   11984:	str	r3, [r8, #148]	; 0x94
   11988:	ldrb	r3, [sp, #31]
   1198c:	cmp	r3, #0
   11990:	bne	119ac <tcgetattr@plt+0x7e0>
   11994:	mov	r2, #60	; 0x3c
   11998:	add	r1, r8, #140	; 0x8c
   1199c:	mov	r0, sl
   119a0:	bl	10f5c <memcmp@plt>
   119a4:	cmp	r0, #0
   119a8:	beq	115b4 <tcgetattr@plt+0x3e8>
   119ac:	mov	r2, #5
   119b0:	ldr	r1, [pc, #216]	; 11a90 <tcgetattr@plt+0x8c4>
   119b4:	mov	r0, #0
   119b8:	bl	10f74 <dcgettext@plt>
   119bc:	mov	r2, r6
   119c0:	mov	r1, #3
   119c4:	mov	r4, r0
   119c8:	mov	r0, #0
   119cc:	bl	15184 <tcgetattr@plt+0x3fb8>
   119d0:	mov	r2, r4
   119d4:	mov	r1, #0
   119d8:	mov	r3, r0
   119dc:	b	114b0 <tcgetattr@plt+0x2e4>
   119e0:	andeq	r9, r1, r5, rrx
   119e4:	andeq	r9, r1, ip, ror #24
   119e8:	ldrdeq	r9, [r1], -r4
   119ec:	andeq	r3, r1, r8, lsr r9
   119f0:	andeq	fp, r2, r8, ror r1
   119f4:	andeq	r7, r1, r8, ror sl
   119f8:			; <UNDEFINED> instruction: 0x00019cbc
   119fc:	andeq	r9, r1, r2, asr #25
   11a00:			; <UNDEFINED> instruction: 0x00019cb5
   11a04:			; <UNDEFINED> instruction: 0x00019cb6
   11a08:	andeq	fp, r2, r8, ror #2
   11a0c:	andeq	r9, r1, r4, lsl #25
   11a10:	andeq	fp, r2, r0, lsl #3
   11a14:	andeq	r9, r1, r5, lsr #25
   11a18:	andeq	fp, r2, r4, ror r1
   11a1c:	andeq	fp, r2, r8, lsl r1
   11a20:	ldrdeq	r9, [r1], -r0
   11a24:	andeq	r7, r1, r7, lsl #23
   11a28:	andeq	r9, r1, r1, lsl sp
   11a2c:	andeq	r9, r1, r7, asr #26
   11a30:	muleq	r2, ip, r1
   11a34:	andeq	sl, r1, r6, lsl #2
   11a38:	andeq	r9, r1, r6, asr sp
   11a3c:	andeq	fp, r2, r8, lsl #3
   11a40:	andeq	r9, r1, fp, ror sp
   11a44:	andeq	r7, r1, r8, lsl #19
   11a48:	andeq	r9, r1, r6, lsl #27
   11a4c:	andeq	r9, r1, r4, ror #24
   11a50:	andeq	r9, r1, sp, lsl #24
   11a54:	muleq	r1, r5, sp
   11a58:	andeq	r7, r1, r0, lsl #5
   11a5c:	andeq	r9, r1, ip, lsl #27
   11a60:	ldrdeq	fp, [r2], -r8
   11a64:	ldrdeq	r7, [r1], -r8
   11a68:	andeq	r0, r0, r1, lsr #15
   11a6c:	muleq	r1, r1, fp
   11a70:	muleq	r1, ip, fp
   11a74:	andeq	r9, r1, sp, lsr #27
   11a78:			; <UNDEFINED> instruction: 0x00019db1
   11a7c:	andeq	r7, r1, r8, ror #21
   11a80:	strdeq	r0, [r0], -r5
   11a84:	andeq	r9, r1, r8, asr #27
   11a88:	ldrdeq	r9, [r1], -r3
   11a8c:	andeq	fp, r2, r4, lsl r1
   11a90:	ldrdeq	r9, [r1], -r8
   11a94:	mov	fp, #0
   11a98:	mov	lr, #0
   11a9c:	pop	{r1}		; (ldr r1, [sp], #4)
   11aa0:	mov	r2, sp
   11aa4:	push	{r2}		; (str r2, [sp, #-4]!)
   11aa8:	push	{r0}		; (str r0, [sp, #-4]!)
   11aac:	ldr	ip, [pc, #16]	; 11ac4 <tcgetattr@plt+0x8f8>
   11ab0:	push	{ip}		; (str ip, [sp, #-4]!)
   11ab4:	ldr	r0, [pc, #12]	; 11ac8 <tcgetattr@plt+0x8fc>
   11ab8:	ldr	r3, [pc, #12]	; 11acc <tcgetattr@plt+0x900>
   11abc:	bl	1104c <__libc_start_main@plt>
   11ac0:	bl	1119c <abort@plt>
   11ac4:	andeq	r7, r1, ip, ror r0
   11ac8:	ldrdeq	r1, [r1], -r8
   11acc:	andeq	r7, r1, ip, lsl r0
   11ad0:	ldr	r3, [pc, #20]	; 11aec <tcgetattr@plt+0x920>
   11ad4:	ldr	r2, [pc, #20]	; 11af0 <tcgetattr@plt+0x924>
   11ad8:	add	r3, pc, r3
   11adc:	ldr	r2, [r3, r2]
   11ae0:	cmp	r2, #0
   11ae4:	bxeq	lr
   11ae8:	b	11064 <__gmon_start__@plt>
   11aec:	andeq	r9, r1, r0, lsr #10
   11af0:	andeq	r0, r0, r8, lsl #2
   11af4:	ldr	r3, [pc, #28]	; 11b18 <tcgetattr@plt+0x94c>
   11af8:	ldr	r0, [pc, #28]	; 11b1c <tcgetattr@plt+0x950>
   11afc:	sub	r3, r3, r0
   11b00:	cmp	r3, #6
   11b04:	bxls	lr
   11b08:	ldr	r3, [pc, #16]	; 11b20 <tcgetattr@plt+0x954>
   11b0c:	cmp	r3, #0
   11b10:	bxeq	lr
   11b14:	bx	r3
   11b18:	andeq	fp, r2, r3, ror #2
   11b1c:	andeq	fp, r2, r0, ror #2
   11b20:	andeq	r0, r0, r0
   11b24:	ldr	r1, [pc, #36]	; 11b50 <tcgetattr@plt+0x984>
   11b28:	ldr	r0, [pc, #36]	; 11b54 <tcgetattr@plt+0x988>
   11b2c:	sub	r1, r1, r0
   11b30:	asr	r1, r1, #2
   11b34:	add	r1, r1, r1, lsr #31
   11b38:	asrs	r1, r1, #1
   11b3c:	bxeq	lr
   11b40:	ldr	r3, [pc, #16]	; 11b58 <tcgetattr@plt+0x98c>
   11b44:	cmp	r3, #0
   11b48:	bxeq	lr
   11b4c:	bx	r3
   11b50:	andeq	fp, r2, r0, ror #2
   11b54:	andeq	fp, r2, r0, ror #2
   11b58:	andeq	r0, r0, r0
   11b5c:	push	{r4, lr}
   11b60:	ldr	r4, [pc, #24]	; 11b80 <tcgetattr@plt+0x9b4>
   11b64:	ldrb	r3, [r4]
   11b68:	cmp	r3, #0
   11b6c:	popne	{r4, pc}
   11b70:	bl	11af4 <tcgetattr@plt+0x928>
   11b74:	mov	r3, #1
   11b78:	strb	r3, [r4]
   11b7c:	pop	{r4, pc}
   11b80:	andeq	fp, r2, r4, lsl #3
   11b84:	ldr	r0, [pc, #40]	; 11bb4 <tcgetattr@plt+0x9e8>
   11b88:	ldr	r3, [r0]
   11b8c:	cmp	r3, #0
   11b90:	bne	11b98 <tcgetattr@plt+0x9cc>
   11b94:	b	11b24 <tcgetattr@plt+0x958>
   11b98:	ldr	r3, [pc, #24]	; 11bb8 <tcgetattr@plt+0x9ec>
   11b9c:	cmp	r3, #0
   11ba0:	beq	11b94 <tcgetattr@plt+0x9c8>
   11ba4:	push	{r4, lr}
   11ba8:	blx	r3
   11bac:	pop	{r4, lr}
   11bb0:	b	11b24 <tcgetattr@plt+0x958>
   11bb4:	andeq	sl, r2, r4, lsl pc
   11bb8:	andeq	r0, r0, r0
   11bbc:	ldr	r2, [pc, #64]	; 11c04 <tcgetattr@plt+0xa38>
   11bc0:	mov	r1, #0
   11bc4:	mov	ip, r2
   11bc8:	ldr	r3, [r2]
   11bcc:	cmp	r3, #0
   11bd0:	bne	11bdc <tcgetattr@plt+0xa10>
   11bd4:	mov	r0, r3
   11bd8:	bx	lr
   11bdc:	add	r2, r2, #12
   11be0:	ldr	r3, [r2, #-8]
   11be4:	cmp	r3, r0
   11be8:	bne	11bfc <tcgetattr@plt+0xa30>
   11bec:	mov	r3, #12
   11bf0:	mla	r1, r3, r1, ip
   11bf4:	ldr	r0, [r1, #8]
   11bf8:	bx	lr
   11bfc:	add	r1, r1, #1
   11c00:	b	11bc8 <tcgetattr@plt+0x9fc>
   11c04:	andeq	r7, r1, r4, lsr #1
   11c08:	push	{r4, r5, r6, r7, r8, lr}
   11c0c:	mov	r8, r0
   11c10:	ldr	r4, [pc, #64]	; 11c58 <tcgetattr@plt+0xa8c>
   11c14:	mov	r5, #0
   11c18:	mov	r7, #12
   11c1c:	mul	r6, r7, r5
   11c20:	ldr	r1, [r6, r4]
   11c24:	cmp	r1, #0
   11c28:	bne	11c34 <tcgetattr@plt+0xa68>
   11c2c:	mvn	r0, #0
   11c30:	pop	{r4, r5, r6, r7, r8, pc}
   11c34:	mov	r0, r8
   11c38:	bl	10f08 <strcmp@plt>
   11c3c:	cmp	r0, #0
   11c40:	bne	11c50 <tcgetattr@plt+0xa84>
   11c44:	add	r4, r4, r6
   11c48:	ldr	r0, [r4, #4]
   11c4c:	pop	{r4, r5, r6, r7, r8, pc}
   11c50:	add	r5, r5, #1
   11c54:	b	11c1c <tcgetattr@plt+0xa50>
   11c58:	andeq	r7, r1, r4, lsr #1
   11c5c:	cmp	r0, #4
   11c60:	ldrls	pc, [pc, r0, lsl #2]
   11c64:	b	11c9c <tcgetattr@plt+0xad0>
   11c68:	andeq	r1, r1, ip, ror ip
   11c6c:	andeq	r1, r1, r4, lsl #25
   11c70:	andeq	r1, r1, ip, lsl #25
   11c74:	muleq	r1, r4, ip
   11c78:	andeq	r1, r1, r4, lsr #25
   11c7c:	add	r0, r1, #8
   11c80:	bx	lr
   11c84:	mov	r0, r1
   11c88:	b	11c80 <tcgetattr@plt+0xab4>
   11c8c:	add	r0, r1, #4
   11c90:	b	11c80 <tcgetattr@plt+0xab4>
   11c94:	add	r0, r1, #12
   11c98:	b	11c80 <tcgetattr@plt+0xab4>
   11c9c:	push	{r4, lr}
   11ca0:	bl	1119c <abort@plt>
   11ca4:	mov	r0, #0
   11ca8:	b	11c80 <tcgetattr@plt+0xab4>
   11cac:	push	{r0, r1, r2, r3}
   11cb0:	push	{r0, r1, r2, r4, r5, lr}
   11cb4:	mov	r1, #1
   11cb8:	add	r3, sp, #28
   11cbc:	ldr	r2, [sp, #24]
   11cc0:	add	r0, sp, #4
   11cc4:	str	r3, [sp]
   11cc8:	bl	110e8 <__vasprintf_chk@plt>
   11ccc:	subs	r5, r0, #0
   11cd0:	bge	11cd8 <tcgetattr@plt+0xb0c>
   11cd4:	bl	15c70 <tcgetattr@plt+0x4aa4>
   11cd8:	ldr	r4, [pc, #112]	; 11d50 <tcgetattr@plt+0xb84>
   11cdc:	ldr	r2, [r4]
   11ce0:	cmp	r2, #0
   11ce4:	ble	11d08 <tcgetattr@plt+0xb3c>
   11ce8:	ldr	r3, [r4, #4]
   11cec:	sub	r3, r3, r2
   11cf0:	cmp	r3, r5
   11cf4:	bge	11d3c <tcgetattr@plt+0xb70>
   11cf8:	mov	r0, #10
   11cfc:	bl	111b4 <putchar_unlocked@plt>
   11d00:	mov	r3, #0
   11d04:	str	r3, [r4]
   11d08:	ldr	r3, [pc, #68]	; 11d54 <tcgetattr@plt+0xb88>
   11d0c:	ldr	r0, [sp, #4]
   11d10:	ldr	r1, [r3]
   11d14:	bl	10ef0 <fputs_unlocked@plt>
   11d18:	ldr	r0, [sp, #4]
   11d1c:	bl	13c40 <tcgetattr@plt+0x2a74>
   11d20:	ldr	r0, [r4]
   11d24:	add	r0, r0, r5
   11d28:	str	r0, [r4]
   11d2c:	add	sp, sp, #12
   11d30:	pop	{r4, r5, lr}
   11d34:	add	sp, sp, #16
   11d38:	bx	lr
   11d3c:	mov	r0, #32
   11d40:	bl	111b4 <putchar_unlocked@plt>
   11d44:	ldr	r3, [r4]
   11d48:	add	r3, r3, #1
   11d4c:	b	11d04 <tcgetattr@plt+0xb38>
   11d50:	andeq	fp, r2, r8, lsl #3
   11d54:	andeq	fp, r2, r4, ror r1
   11d58:	push	{r4, r5, r6, r7, r8, lr}
   11d5c:	mov	r4, r0
   11d60:	mov	r5, r1
   11d64:	bl	10f80 <cfgetispeed@plt>
   11d68:	cmp	r0, #0
   11d6c:	bne	11da8 <tcgetattr@plt+0xbdc>
   11d70:	ldr	r3, [pc, #140]	; 11e04 <tcgetattr@plt+0xc38>
   11d74:	cmp	r5, #0
   11d78:	mov	r0, r4
   11d7c:	ldr	r6, [pc, #132]	; 11e08 <tcgetattr@plt+0xc3c>
   11d80:	moveq	r6, r3
   11d84:	bl	110c4 <cfgetospeed@plt>
   11d88:	bl	11bbc <tcgetattr@plt+0x9f0>
   11d8c:	mov	r1, r0
   11d90:	mov	r0, r6
   11d94:	bl	11cac <tcgetattr@plt+0xae0>
   11d98:	cmp	r5, #0
   11d9c:	ldreq	r3, [pc, #104]	; 11e0c <tcgetattr@plt+0xc40>
   11da0:	streq	r5, [r3]
   11da4:	pop	{r4, r5, r6, r7, r8, pc}
   11da8:	mov	r0, r4
   11dac:	bl	10f80 <cfgetispeed@plt>
   11db0:	mov	r6, r0
   11db4:	mov	r0, r4
   11db8:	bl	110c4 <cfgetospeed@plt>
   11dbc:	cmp	r6, r0
   11dc0:	beq	11d70 <tcgetattr@plt+0xba4>
   11dc4:	ldr	r3, [pc, #68]	; 11e10 <tcgetattr@plt+0xc44>
   11dc8:	cmp	r5, #0
   11dcc:	mov	r0, r4
   11dd0:	ldr	r6, [pc, #60]	; 11e14 <tcgetattr@plt+0xc48>
   11dd4:	moveq	r6, r3
   11dd8:	bl	10f80 <cfgetispeed@plt>
   11ddc:	bl	11bbc <tcgetattr@plt+0x9f0>
   11de0:	mov	r7, r0
   11de4:	mov	r0, r4
   11de8:	bl	110c4 <cfgetospeed@plt>
   11dec:	bl	11bbc <tcgetattr@plt+0x9f0>
   11df0:	mov	r1, r7
   11df4:	mov	r2, r0
   11df8:	mov	r0, r6
   11dfc:	bl	11cac <tcgetattr@plt+0xae0>
   11e00:	b	11d98 <tcgetattr@plt+0xbcc>
   11e04:	andeq	r7, r1, sl, lsl fp
   11e08:	andeq	r7, r1, r6, lsl #22
   11e0c:	andeq	fp, r2, r8, lsl #3
   11e10:	andeq	r7, r1, r6, lsl fp
   11e14:	strdeq	r7, [r1], -r4
   11e18:	push	{r4, r5, lr}
   11e1c:	mov	r2, #5
   11e20:	sub	sp, sp, #28
   11e24:	mov	r5, r0
   11e28:	mov	r4, r1
   11e2c:	mov	r0, #0
   11e30:	ldr	r1, [pc, #56]	; 11e70 <tcgetattr@plt+0xca4>
   11e34:	bl	10f74 <dcgettext@plt>
   11e38:	ldr	r3, [pc, #52]	; 11e74 <tcgetattr@plt+0xca8>
   11e3c:	mov	r2, r4
   11e40:	str	r3, [sp, #8]
   11e44:	mov	r3, #0
   11e48:	mov	r1, #0
   11e4c:	strd	r2, [sp]
   11e50:	str	r1, [sp, #16]
   11e54:	mov	r2, #0
   11e58:	mov	r3, #0
   11e5c:	str	r0, [sp, #12]
   11e60:	mov	r0, r5
   11e64:	bl	15cb0 <tcgetattr@plt+0x4ae4>
   11e68:	add	sp, sp, #28
   11e6c:	pop	{r4, r5, pc}
   11e70:	andeq	r7, r1, pc, lsl fp
   11e74:	andeq	r7, r1, r8, lsr fp
   11e78:	cmp	r0, #31
   11e7c:	ldr	r3, [pc, #172]	; 11f30 <tcgetattr@plt+0xd64>
   11e80:	bls	11f1c <tcgetattr@plt+0xd50>
   11e84:	cmp	r0, #126	; 0x7e
   11e88:	strbls	r0, [r3, #8]
   11e8c:	addls	r3, r3, #9
   11e90:	bls	11ee0 <tcgetattr@plt+0xd14>
   11e94:	cmp	r0, #127	; 0x7f
   11e98:	bne	11eb4 <tcgetattr@plt+0xce8>
   11e9c:	mov	r2, #94	; 0x5e
   11ea0:	strb	r2, [r3, #8]
   11ea4:	mov	r2, #63	; 0x3f
   11ea8:	strb	r2, [r3, #9]
   11eac:	add	r3, r3, #10
   11eb0:	b	11ee0 <tcgetattr@plt+0xd14>
   11eb4:	mov	r2, #77	; 0x4d
   11eb8:	strb	r2, [r3, #8]
   11ebc:	cmp	r0, #159	; 0x9f
   11ec0:	mov	r2, #45	; 0x2d
   11ec4:	strb	r2, [r3, #9]
   11ec8:	bls	11f08 <tcgetattr@plt+0xd3c>
   11ecc:	cmp	r0, #255	; 0xff
   11ed0:	beq	11ef0 <tcgetattr@plt+0xd24>
   11ed4:	sub	r0, r0, #128	; 0x80
   11ed8:	strb	r0, [r3, #10]
   11edc:	add	r3, r3, #11
   11ee0:	mov	r2, #0
   11ee4:	strb	r2, [r3]
   11ee8:	ldr	r0, [pc, #68]	; 11f34 <tcgetattr@plt+0xd68>
   11eec:	bx	lr
   11ef0:	mov	r2, #94	; 0x5e
   11ef4:	strb	r2, [r3, #10]
   11ef8:	mov	r2, #63	; 0x3f
   11efc:	strb	r2, [r3, #11]
   11f00:	add	r3, r3, #12
   11f04:	b	11ee0 <tcgetattr@plt+0xd14>
   11f08:	mov	r2, #94	; 0x5e
   11f0c:	sub	r0, r0, #64	; 0x40
   11f10:	strb	r2, [r3, #10]
   11f14:	strb	r0, [r3, #11]
   11f18:	b	11f00 <tcgetattr@plt+0xd34>
   11f1c:	mov	r2, #94	; 0x5e
   11f20:	add	r0, r0, #64	; 0x40
   11f24:	strb	r2, [r3, #8]
   11f28:	strb	r0, [r3, #9]
   11f2c:	b	11eac <tcgetattr@plt+0xce0>
   11f30:	andeq	fp, r2, r8, lsl #3
   11f34:	muleq	r2, r0, r1
   11f38:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11f3c:	mov	r6, r0
   11f40:	mov	r5, r1
   11f44:	mov	r4, r2
   11f48:	ldr	r1, [pc, #168]	; 11ff8 <tcgetattr@plt+0xe2c>
   11f4c:	mov	r2, sp
   11f50:	mov	r0, #0
   11f54:	bl	10fc8 <ioctl@plt>
   11f58:	cmp	r0, #0
   11f5c:	beq	11fa0 <tcgetattr@plt+0xdd4>
   11f60:	bl	110d0 <__errno_location@plt>
   11f64:	ldr	r7, [r0]
   11f68:	cmp	r7, #22
   11f6c:	moveq	r3, #0
   11f70:	streq	r3, [sp]
   11f74:	streq	r3, [sp, #4]
   11f78:	beq	11fa0 <tcgetattr@plt+0xdd4>
   11f7c:	mov	r2, r4
   11f80:	mov	r1, #3
   11f84:	mov	r0, #0
   11f88:	bl	15184 <tcgetattr@plt+0x3fb8>
   11f8c:	ldr	r2, [pc, #104]	; 11ffc <tcgetattr@plt+0xe30>
   11f90:	mov	r1, r7
   11f94:	mov	r3, r0
   11f98:	mov	r0, #1
   11f9c:	bl	1101c <error@plt>
   11fa0:	cmp	r6, #0
   11fa4:	strhge	r6, [sp]
   11fa8:	mov	r2, sp
   11fac:	cmp	r5, #0
   11fb0:	ldr	r1, [pc, #72]	; 12000 <tcgetattr@plt+0xe34>
   11fb4:	mov	r0, #0
   11fb8:	strhge	r5, [sp, #2]
   11fbc:	bl	10fc8 <ioctl@plt>
   11fc0:	cmp	r0, #0
   11fc4:	beq	11ff0 <tcgetattr@plt+0xe24>
   11fc8:	bl	110d0 <__errno_location@plt>
   11fcc:	mov	r2, r4
   11fd0:	mov	r1, #3
   11fd4:	ldr	r5, [r0]
   11fd8:	mov	r0, #0
   11fdc:	bl	15184 <tcgetattr@plt+0x3fb8>
   11fe0:	ldr	r2, [pc, #20]	; 11ffc <tcgetattr@plt+0xe30>
   11fe4:	mov	r1, r5
   11fe8:	mov	r3, r0
   11fec:	b	11f98 <tcgetattr@plt+0xdcc>
   11ff0:	add	sp, sp, #12
   11ff4:	pop	{r4, r5, r6, r7, pc}
   11ff8:	andeq	r5, r0, r3, lsl r4
   11ffc:	andeq	sl, r1, r6, lsl #2
   12000:	andeq	r5, r0, r4, lsl r4
   12004:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   12008:	mov	r0, #1
   1200c:	add	r2, sp, #16
   12010:	ldr	r1, [pc, #104]	; 12080 <tcgetattr@plt+0xeb4>
   12014:	bl	10fc8 <ioctl@plt>
   12018:	cmp	r0, #0
   1201c:	bne	1202c <tcgetattr@plt+0xe60>
   12020:	ldrh	r0, [sp, #18]
   12024:	cmp	r0, #0
   12028:	bne	1206c <tcgetattr@plt+0xea0>
   1202c:	ldr	r0, [pc, #80]	; 12084 <tcgetattr@plt+0xeb8>
   12030:	bl	11034 <getenv@plt>
   12034:	cmp	r0, #0
   12038:	beq	12074 <tcgetattr@plt+0xea8>
   1203c:	ldr	r3, [pc, #68]	; 12088 <tcgetattr@plt+0xebc>
   12040:	mov	r2, #0
   12044:	str	r3, [sp]
   12048:	mov	r1, r2
   1204c:	add	r3, sp, #12
   12050:	bl	15ee0 <tcgetattr@plt+0x4d14>
   12054:	cmp	r0, #0
   12058:	bne	12074 <tcgetattr@plt+0xea8>
   1205c:	ldr	r3, [sp, #12]
   12060:	cmp	r3, #0
   12064:	ble	12074 <tcgetattr@plt+0xea8>
   12068:	ldr	r0, [sp, #12]
   1206c:	add	sp, sp, #28
   12070:	pop	{pc}		; (ldr pc, [sp], #4)
   12074:	mov	r3, #80	; 0x50
   12078:	str	r3, [sp, #12]
   1207c:	b	12068 <tcgetattr@plt+0xe9c>
   12080:	andeq	r5, r0, r3, lsl r4
   12084:	andeq	r7, r1, fp, lsr fp
   12088:	andeq	r9, r1, r5, rrx
   1208c:	push	{r0, r1, r4, r5, r6, lr}
   12090:	mov	r4, r0
   12094:	mov	r5, r1
   12098:	mov	r2, sp
   1209c:	ldr	r1, [pc, #172]	; 12150 <tcgetattr@plt+0xf84>
   120a0:	mov	r0, #0
   120a4:	bl	10fc8 <ioctl@plt>
   120a8:	cmp	r0, #0
   120ac:	beq	12120 <tcgetattr@plt+0xf54>
   120b0:	bl	110d0 <__errno_location@plt>
   120b4:	ldr	r6, [r0]
   120b8:	cmp	r6, #22
   120bc:	beq	120e4 <tcgetattr@plt+0xf18>
   120c0:	mov	r2, r5
   120c4:	mov	r1, #3
   120c8:	mov	r0, #0
   120cc:	bl	15184 <tcgetattr@plt+0x3fb8>
   120d0:	ldr	r2, [pc, #124]	; 12154 <tcgetattr@plt+0xf88>
   120d4:	mov	r1, r6
   120d8:	mov	r3, r0
   120dc:	mov	r0, #1
   120e0:	bl	1101c <error@plt>
   120e4:	cmp	r4, #0
   120e8:	bne	12148 <tcgetattr@plt+0xf7c>
   120ec:	mov	r2, #5
   120f0:	ldr	r1, [pc, #96]	; 12158 <tcgetattr@plt+0xf8c>
   120f4:	mov	r0, r4
   120f8:	bl	10f74 <dcgettext@plt>
   120fc:	mov	r2, r5
   12100:	mov	r1, #3
   12104:	mov	r6, r0
   12108:	mov	r0, r4
   1210c:	bl	15184 <tcgetattr@plt+0x3fb8>
   12110:	mov	r2, r6
   12114:	mov	r1, r4
   12118:	mov	r3, r0
   1211c:	b	120dc <tcgetattr@plt+0xf10>
   12120:	ldr	r3, [pc, #52]	; 1215c <tcgetattr@plt+0xf90>
   12124:	cmp	r4, #0
   12128:	ldr	r0, [pc, #48]	; 12160 <tcgetattr@plt+0xf94>
   1212c:	ldrh	r2, [sp, #2]
   12130:	moveq	r0, r3
   12134:	ldrh	r1, [sp]
   12138:	bl	11cac <tcgetattr@plt+0xae0>
   1213c:	cmp	r4, #0
   12140:	ldreq	r3, [pc, #28]	; 12164 <tcgetattr@plt+0xf98>
   12144:	streq	r4, [r3]
   12148:	add	sp, sp, #8
   1214c:	pop	{r4, r5, r6, pc}
   12150:	andeq	r5, r0, r3, lsl r4
   12154:	andeq	sl, r1, r6, lsl #2
   12158:	andeq	r7, r1, pc, asr fp
   1215c:	andeq	r7, r1, r8, asr fp
   12160:	andeq	r7, r1, r3, asr #22
   12164:	andeq	fp, r2, r8, lsl #3
   12168:	subs	r5, r0, #0
   1216c:	push	{r7, lr}
   12170:	sub	sp, sp, #64	; 0x40
   12174:	ldr	r4, [pc, #2492]	; 12b38 <tcgetattr@plt+0x196c>
   12178:	beq	121b0 <tcgetattr@plt+0xfe4>
   1217c:	ldr	r3, [pc, #2488]	; 12b3c <tcgetattr@plt+0x1970>
   12180:	mov	r2, #5
   12184:	ldr	r1, [pc, #2484]	; 12b40 <tcgetattr@plt+0x1974>
   12188:	mov	r0, #0
   1218c:	ldr	r6, [r3]
   12190:	bl	10f74 <dcgettext@plt>
   12194:	ldr	r3, [r4]
   12198:	mov	r1, #1
   1219c:	mov	r2, r0
   121a0:	mov	r0, r6
   121a4:	bl	11124 <__fprintf_chk@plt>
   121a8:	mov	r0, r5
   121ac:	bl	11088 <exit@plt>
   121b0:	mov	r2, #5
   121b4:	ldr	r1, [pc, #2440]	; 12b44 <tcgetattr@plt+0x1978>
   121b8:	bl	10f74 <dcgettext@plt>
   121bc:	ldr	r3, [r4]
   121c0:	ldr	r4, [pc, #2432]	; 12b48 <tcgetattr@plt+0x197c>
   121c4:	mov	r2, r3
   121c8:	str	r3, [sp]
   121cc:	ldr	r9, [pc, #2424]	; 12b4c <tcgetattr@plt+0x1980>
   121d0:	add	r7, sp, #8
   121d4:	mov	r1, r0
   121d8:	mov	r0, #1
   121dc:	bl	11100 <__printf_chk@plt>
   121e0:	mov	r2, #5
   121e4:	ldr	r1, [pc, #2404]	; 12b50 <tcgetattr@plt+0x1984>
   121e8:	mov	r0, r5
   121ec:	bl	10f74 <dcgettext@plt>
   121f0:	ldr	r1, [r4]
   121f4:	bl	10ef0 <fputs_unlocked@plt>
   121f8:	mov	r2, #5
   121fc:	ldr	r1, [pc, #2384]	; 12b54 <tcgetattr@plt+0x1988>
   12200:	mov	r0, r5
   12204:	bl	10f74 <dcgettext@plt>
   12208:	ldr	r1, [r4]
   1220c:	bl	10ef0 <fputs_unlocked@plt>
   12210:	mov	r2, #5
   12214:	ldr	r1, [pc, #2364]	; 12b58 <tcgetattr@plt+0x198c>
   12218:	mov	r0, r5
   1221c:	bl	10f74 <dcgettext@plt>
   12220:	ldr	r1, [r4]
   12224:	bl	10ef0 <fputs_unlocked@plt>
   12228:	mov	r2, #5
   1222c:	ldr	r1, [pc, #2344]	; 12b5c <tcgetattr@plt+0x1990>
   12230:	mov	r0, r5
   12234:	bl	10f74 <dcgettext@plt>
   12238:	ldr	r1, [r4]
   1223c:	bl	10ef0 <fputs_unlocked@plt>
   12240:	mov	r2, #5
   12244:	ldr	r1, [pc, #2324]	; 12b60 <tcgetattr@plt+0x1994>
   12248:	mov	r0, r5
   1224c:	bl	10f74 <dcgettext@plt>
   12250:	ldr	r1, [r4]
   12254:	bl	10ef0 <fputs_unlocked@plt>
   12258:	mov	r2, #5
   1225c:	ldr	r1, [pc, #2304]	; 12b64 <tcgetattr@plt+0x1998>
   12260:	mov	r0, r5
   12264:	bl	10f74 <dcgettext@plt>
   12268:	ldr	r1, [r4]
   1226c:	bl	10ef0 <fputs_unlocked@plt>
   12270:	mov	r2, #5
   12274:	ldr	r1, [pc, #2284]	; 12b68 <tcgetattr@plt+0x199c>
   12278:	mov	r0, r5
   1227c:	bl	10f74 <dcgettext@plt>
   12280:	ldr	r1, [r4]
   12284:	bl	10ef0 <fputs_unlocked@plt>
   12288:	mov	r2, #5
   1228c:	ldr	r1, [pc, #2264]	; 12b6c <tcgetattr@plt+0x19a0>
   12290:	mov	r0, r5
   12294:	bl	10f74 <dcgettext@plt>
   12298:	ldr	r1, [r4]
   1229c:	bl	10ef0 <fputs_unlocked@plt>
   122a0:	mov	r2, #5
   122a4:	ldr	r1, [pc, #2244]	; 12b70 <tcgetattr@plt+0x19a4>
   122a8:	mov	r0, r5
   122ac:	bl	10f74 <dcgettext@plt>
   122b0:	ldr	r1, [r4]
   122b4:	bl	10ef0 <fputs_unlocked@plt>
   122b8:	mov	r2, #5
   122bc:	ldr	r1, [pc, #2224]	; 12b74 <tcgetattr@plt+0x19a8>
   122c0:	mov	r0, r5
   122c4:	bl	10f74 <dcgettext@plt>
   122c8:	ldr	r1, [r4]
   122cc:	bl	10ef0 <fputs_unlocked@plt>
   122d0:	mov	r2, #5
   122d4:	ldr	r1, [pc, #2204]	; 12b78 <tcgetattr@plt+0x19ac>
   122d8:	mov	r0, r5
   122dc:	bl	10f74 <dcgettext@plt>
   122e0:	ldr	r1, [r4]
   122e4:	bl	10ef0 <fputs_unlocked@plt>
   122e8:	mov	r2, #5
   122ec:	ldr	r1, [pc, #2184]	; 12b7c <tcgetattr@plt+0x19b0>
   122f0:	mov	r0, r5
   122f4:	bl	10f74 <dcgettext@plt>
   122f8:	ldr	r1, [r4]
   122fc:	bl	10ef0 <fputs_unlocked@plt>
   12300:	mov	r2, #5
   12304:	ldr	r1, [pc, #2164]	; 12b80 <tcgetattr@plt+0x19b4>
   12308:	mov	r0, r5
   1230c:	bl	10f74 <dcgettext@plt>
   12310:	ldr	r1, [r4]
   12314:	bl	10ef0 <fputs_unlocked@plt>
   12318:	mov	r2, #5
   1231c:	ldr	r1, [pc, #2144]	; 12b84 <tcgetattr@plt+0x19b8>
   12320:	mov	r0, r5
   12324:	bl	10f74 <dcgettext@plt>
   12328:	ldr	r1, [r4]
   1232c:	bl	10ef0 <fputs_unlocked@plt>
   12330:	mov	r2, #5
   12334:	ldr	r1, [pc, #2124]	; 12b88 <tcgetattr@plt+0x19bc>
   12338:	mov	r0, r5
   1233c:	bl	10f74 <dcgettext@plt>
   12340:	ldr	r1, [r4]
   12344:	bl	10ef0 <fputs_unlocked@plt>
   12348:	mov	r2, #5
   1234c:	ldr	r1, [pc, #2104]	; 12b8c <tcgetattr@plt+0x19c0>
   12350:	mov	r0, r5
   12354:	bl	10f74 <dcgettext@plt>
   12358:	ldr	r1, [r4]
   1235c:	bl	10ef0 <fputs_unlocked@plt>
   12360:	mov	r2, #5
   12364:	ldr	r1, [pc, #2084]	; 12b90 <tcgetattr@plt+0x19c4>
   12368:	mov	r0, r5
   1236c:	bl	10f74 <dcgettext@plt>
   12370:	ldr	r1, [r4]
   12374:	bl	10ef0 <fputs_unlocked@plt>
   12378:	mov	r2, #5
   1237c:	ldr	r1, [pc, #2064]	; 12b94 <tcgetattr@plt+0x19c8>
   12380:	mov	r0, r5
   12384:	bl	10f74 <dcgettext@plt>
   12388:	ldr	r1, [r4]
   1238c:	bl	10ef0 <fputs_unlocked@plt>
   12390:	mov	r2, #5
   12394:	ldr	r1, [pc, #2044]	; 12b98 <tcgetattr@plt+0x19cc>
   12398:	mov	r0, r5
   1239c:	bl	10f74 <dcgettext@plt>
   123a0:	ldr	r1, [r4]
   123a4:	bl	10ef0 <fputs_unlocked@plt>
   123a8:	ldr	r1, [pc, #2028]	; 12b9c <tcgetattr@plt+0x19d0>
   123ac:	mov	r2, #5
   123b0:	mov	r0, r5
   123b4:	bl	10f74 <dcgettext@plt>
   123b8:	ldr	r3, [pc, #2016]	; 12ba0 <tcgetattr@plt+0x19d4>
   123bc:	mov	r2, #5
   123c0:	ldr	r3, [r3]
   123c4:	cmp	r3, #1
   123c8:	ldreq	r1, [pc, #2004]	; 12ba4 <tcgetattr@plt+0x19d8>
   123cc:	ldrne	r1, [pc, #2004]	; 12ba8 <tcgetattr@plt+0x19dc>
   123d0:	mov	r6, r0
   123d4:	mov	r0, r5
   123d8:	bl	10f74 <dcgettext@plt>
   123dc:	mov	r1, r6
   123e0:	mov	r6, #0
   123e4:	mov	r2, r0
   123e8:	mov	r0, #1
   123ec:	bl	11100 <__printf_chk@plt>
   123f0:	mov	r2, #5
   123f4:	ldr	r1, [pc, #1968]	; 12bac <tcgetattr@plt+0x19e0>
   123f8:	mov	r0, #0
   123fc:	bl	10f74 <dcgettext@plt>
   12400:	ldr	r1, [r4]
   12404:	bl	10ef0 <fputs_unlocked@plt>
   12408:	mov	r2, #5
   1240c:	ldr	r1, [pc, #1948]	; 12bb0 <tcgetattr@plt+0x19e4>
   12410:	mov	r0, #0
   12414:	bl	10f74 <dcgettext@plt>
   12418:	ldr	r1, [r4]
   1241c:	bl	10ef0 <fputs_unlocked@plt>
   12420:	mov	r2, #5
   12424:	ldr	r1, [pc, #1928]	; 12bb4 <tcgetattr@plt+0x19e8>
   12428:	mov	r0, #0
   1242c:	bl	10f74 <dcgettext@plt>
   12430:	ldr	r1, [r4]
   12434:	bl	10ef0 <fputs_unlocked@plt>
   12438:	mov	r2, #5
   1243c:	ldr	r1, [pc, #1908]	; 12bb8 <tcgetattr@plt+0x19ec>
   12440:	mov	r0, #0
   12444:	bl	10f74 <dcgettext@plt>
   12448:	ldr	r1, [r4]
   1244c:	bl	10ef0 <fputs_unlocked@plt>
   12450:	mov	r2, #5
   12454:	ldr	r1, [pc, #1888]	; 12bbc <tcgetattr@plt+0x19f0>
   12458:	mov	r0, #0
   1245c:	bl	10f74 <dcgettext@plt>
   12460:	ldr	r1, [r4]
   12464:	bl	10ef0 <fputs_unlocked@plt>
   12468:	mov	r2, #5
   1246c:	ldr	r1, [pc, #1868]	; 12bc0 <tcgetattr@plt+0x19f4>
   12470:	mov	r0, #0
   12474:	bl	10f74 <dcgettext@plt>
   12478:	ldr	r1, [r4]
   1247c:	bl	10ef0 <fputs_unlocked@plt>
   12480:	mov	r2, #5
   12484:	ldr	r1, [pc, #1848]	; 12bc4 <tcgetattr@plt+0x19f8>
   12488:	mov	r0, #0
   1248c:	bl	10f74 <dcgettext@plt>
   12490:	ldr	r1, [r4]
   12494:	bl	10ef0 <fputs_unlocked@plt>
   12498:	mov	r2, #5
   1249c:	ldr	r1, [pc, #1828]	; 12bc8 <tcgetattr@plt+0x19fc>
   124a0:	mov	r0, #0
   124a4:	bl	10f74 <dcgettext@plt>
   124a8:	ldr	r1, [r4]
   124ac:	bl	10ef0 <fputs_unlocked@plt>
   124b0:	mov	r2, #5
   124b4:	ldr	r1, [pc, #1808]	; 12bcc <tcgetattr@plt+0x1a00>
   124b8:	mov	r0, #0
   124bc:	bl	10f74 <dcgettext@plt>
   124c0:	ldr	r1, [r4]
   124c4:	bl	10ef0 <fputs_unlocked@plt>
   124c8:	mov	r2, #5
   124cc:	ldr	r1, [pc, #1788]	; 12bd0 <tcgetattr@plt+0x1a04>
   124d0:	mov	r0, #0
   124d4:	bl	10f74 <dcgettext@plt>
   124d8:	ldr	r1, [r4]
   124dc:	bl	10ef0 <fputs_unlocked@plt>
   124e0:	mov	r2, #5
   124e4:	ldr	r1, [pc, #1768]	; 12bd4 <tcgetattr@plt+0x1a08>
   124e8:	mov	r0, #0
   124ec:	bl	10f74 <dcgettext@plt>
   124f0:	ldr	r1, [r4]
   124f4:	bl	10ef0 <fputs_unlocked@plt>
   124f8:	mov	r2, #5
   124fc:	ldr	r1, [pc, #1748]	; 12bd8 <tcgetattr@plt+0x1a0c>
   12500:	mov	r0, #0
   12504:	bl	10f74 <dcgettext@plt>
   12508:	ldr	r1, [r4]
   1250c:	bl	10ef0 <fputs_unlocked@plt>
   12510:	mov	r2, #5
   12514:	ldr	r1, [pc, #1728]	; 12bdc <tcgetattr@plt+0x1a10>
   12518:	mov	r0, #0
   1251c:	bl	10f74 <dcgettext@plt>
   12520:	ldr	r1, [r4]
   12524:	bl	10ef0 <fputs_unlocked@plt>
   12528:	mov	r2, #5
   1252c:	ldr	r1, [pc, #1708]	; 12be0 <tcgetattr@plt+0x1a14>
   12530:	mov	r0, #0
   12534:	bl	10f74 <dcgettext@plt>
   12538:	ldr	r1, [r4]
   1253c:	bl	10ef0 <fputs_unlocked@plt>
   12540:	mov	r2, #5
   12544:	ldr	r1, [pc, #1688]	; 12be4 <tcgetattr@plt+0x1a18>
   12548:	mov	r0, #0
   1254c:	bl	10f74 <dcgettext@plt>
   12550:	ldr	r1, [r4]
   12554:	bl	10ef0 <fputs_unlocked@plt>
   12558:	mov	r2, #5
   1255c:	ldr	r1, [pc, #1668]	; 12be8 <tcgetattr@plt+0x1a1c>
   12560:	mov	r0, #0
   12564:	bl	10f74 <dcgettext@plt>
   12568:	ldr	r1, [r4]
   1256c:	bl	10ef0 <fputs_unlocked@plt>
   12570:	mov	r2, #5
   12574:	ldr	r1, [pc, #1648]	; 12bec <tcgetattr@plt+0x1a20>
   12578:	mov	r0, #0
   1257c:	bl	10f74 <dcgettext@plt>
   12580:	ldr	r1, [r4]
   12584:	bl	10ef0 <fputs_unlocked@plt>
   12588:	mov	r2, #5
   1258c:	ldr	r1, [pc, #1628]	; 12bf0 <tcgetattr@plt+0x1a24>
   12590:	mov	r0, #0
   12594:	bl	10f74 <dcgettext@plt>
   12598:	ldr	r1, [r4]
   1259c:	bl	10ef0 <fputs_unlocked@plt>
   125a0:	mov	r2, #5
   125a4:	ldr	r1, [pc, #1608]	; 12bf4 <tcgetattr@plt+0x1a28>
   125a8:	mov	r0, #0
   125ac:	bl	10f74 <dcgettext@plt>
   125b0:	ldr	r1, [r4]
   125b4:	bl	10ef0 <fputs_unlocked@plt>
   125b8:	mov	r2, #5
   125bc:	ldr	r1, [pc, #1588]	; 12bf8 <tcgetattr@plt+0x1a2c>
   125c0:	mov	r0, #0
   125c4:	bl	10f74 <dcgettext@plt>
   125c8:	ldr	r1, [r4]
   125cc:	bl	10ef0 <fputs_unlocked@plt>
   125d0:	mov	r2, #5
   125d4:	ldr	r1, [pc, #1568]	; 12bfc <tcgetattr@plt+0x1a30>
   125d8:	mov	r0, #0
   125dc:	bl	10f74 <dcgettext@plt>
   125e0:	ldr	r1, [r4]
   125e4:	bl	10ef0 <fputs_unlocked@plt>
   125e8:	mov	r2, #5
   125ec:	ldr	r1, [pc, #1548]	; 12c00 <tcgetattr@plt+0x1a34>
   125f0:	mov	r0, #0
   125f4:	bl	10f74 <dcgettext@plt>
   125f8:	ldr	r1, [r4]
   125fc:	bl	10ef0 <fputs_unlocked@plt>
   12600:	mov	r2, #5
   12604:	ldr	r1, [pc, #1528]	; 12c04 <tcgetattr@plt+0x1a38>
   12608:	mov	r0, #0
   1260c:	bl	10f74 <dcgettext@plt>
   12610:	ldr	r1, [r4]
   12614:	bl	10ef0 <fputs_unlocked@plt>
   12618:	mov	r2, #5
   1261c:	ldr	r1, [pc, #1508]	; 12c08 <tcgetattr@plt+0x1a3c>
   12620:	mov	r0, #0
   12624:	bl	10f74 <dcgettext@plt>
   12628:	ldr	r1, [r4]
   1262c:	bl	10ef0 <fputs_unlocked@plt>
   12630:	mov	r2, #5
   12634:	ldr	r1, [pc, #1488]	; 12c0c <tcgetattr@plt+0x1a40>
   12638:	mov	r0, #0
   1263c:	bl	10f74 <dcgettext@plt>
   12640:	ldr	r1, [r4]
   12644:	bl	10ef0 <fputs_unlocked@plt>
   12648:	mov	r2, #5
   1264c:	ldr	r1, [pc, #1468]	; 12c10 <tcgetattr@plt+0x1a44>
   12650:	mov	r0, #0
   12654:	bl	10f74 <dcgettext@plt>
   12658:	ldr	r1, [r4]
   1265c:	bl	10ef0 <fputs_unlocked@plt>
   12660:	mov	r2, #5
   12664:	ldr	r1, [pc, #1448]	; 12c14 <tcgetattr@plt+0x1a48>
   12668:	mov	r0, #0
   1266c:	bl	10f74 <dcgettext@plt>
   12670:	ldr	r1, [r4]
   12674:	bl	10ef0 <fputs_unlocked@plt>
   12678:	mov	r2, #5
   1267c:	ldr	r1, [pc, #1428]	; 12c18 <tcgetattr@plt+0x1a4c>
   12680:	mov	r0, #0
   12684:	bl	10f74 <dcgettext@plt>
   12688:	ldr	r1, [r4]
   1268c:	bl	10ef0 <fputs_unlocked@plt>
   12690:	mov	r2, #5
   12694:	ldr	r1, [pc, #1408]	; 12c1c <tcgetattr@plt+0x1a50>
   12698:	mov	r0, #0
   1269c:	bl	10f74 <dcgettext@plt>
   126a0:	ldr	r1, [r4]
   126a4:	bl	10ef0 <fputs_unlocked@plt>
   126a8:	mov	r2, #5
   126ac:	ldr	r1, [pc, #1388]	; 12c20 <tcgetattr@plt+0x1a54>
   126b0:	mov	r0, #0
   126b4:	bl	10f74 <dcgettext@plt>
   126b8:	ldr	r1, [r4]
   126bc:	bl	10ef0 <fputs_unlocked@plt>
   126c0:	mov	r2, #5
   126c4:	ldr	r1, [pc, #1368]	; 12c24 <tcgetattr@plt+0x1a58>
   126c8:	mov	r0, #0
   126cc:	bl	10f74 <dcgettext@plt>
   126d0:	ldr	r1, [r4]
   126d4:	bl	10ef0 <fputs_unlocked@plt>
   126d8:	mov	r2, #5
   126dc:	ldr	r1, [pc, #1348]	; 12c28 <tcgetattr@plt+0x1a5c>
   126e0:	mov	r0, #0
   126e4:	bl	10f74 <dcgettext@plt>
   126e8:	ldr	r1, [r4]
   126ec:	bl	10ef0 <fputs_unlocked@plt>
   126f0:	mov	r2, #5
   126f4:	ldr	r1, [pc, #1328]	; 12c2c <tcgetattr@plt+0x1a60>
   126f8:	mov	r0, #0
   126fc:	bl	10f74 <dcgettext@plt>
   12700:	ldr	r1, [r4]
   12704:	bl	10ef0 <fputs_unlocked@plt>
   12708:	mov	r2, #5
   1270c:	ldr	r1, [pc, #1308]	; 12c30 <tcgetattr@plt+0x1a64>
   12710:	mov	r0, #0
   12714:	bl	10f74 <dcgettext@plt>
   12718:	ldr	r1, [r4]
   1271c:	bl	10ef0 <fputs_unlocked@plt>
   12720:	mov	r2, #5
   12724:	ldr	r1, [pc, #1288]	; 12c34 <tcgetattr@plt+0x1a68>
   12728:	mov	r0, #0
   1272c:	bl	10f74 <dcgettext@plt>
   12730:	ldr	r1, [r4]
   12734:	bl	10ef0 <fputs_unlocked@plt>
   12738:	mov	r2, #5
   1273c:	ldr	r1, [pc, #1268]	; 12c38 <tcgetattr@plt+0x1a6c>
   12740:	mov	r0, #0
   12744:	bl	10f74 <dcgettext@plt>
   12748:	ldr	r1, [r4]
   1274c:	bl	10ef0 <fputs_unlocked@plt>
   12750:	mov	r2, #5
   12754:	ldr	r1, [pc, #1248]	; 12c3c <tcgetattr@plt+0x1a70>
   12758:	mov	r0, #0
   1275c:	bl	10f74 <dcgettext@plt>
   12760:	ldr	r1, [r4]
   12764:	bl	10ef0 <fputs_unlocked@plt>
   12768:	mov	r2, #5
   1276c:	ldr	r1, [pc, #1228]	; 12c40 <tcgetattr@plt+0x1a74>
   12770:	mov	r0, #0
   12774:	bl	10f74 <dcgettext@plt>
   12778:	ldr	r1, [r4]
   1277c:	bl	10ef0 <fputs_unlocked@plt>
   12780:	mov	r2, #5
   12784:	ldr	r1, [pc, #1208]	; 12c44 <tcgetattr@plt+0x1a78>
   12788:	mov	r0, #0
   1278c:	bl	10f74 <dcgettext@plt>
   12790:	ldr	r1, [r4]
   12794:	bl	10ef0 <fputs_unlocked@plt>
   12798:	mov	r2, #5
   1279c:	ldr	r1, [pc, #1188]	; 12c48 <tcgetattr@plt+0x1a7c>
   127a0:	mov	r0, #0
   127a4:	bl	10f74 <dcgettext@plt>
   127a8:	ldr	r1, [r4]
   127ac:	bl	10ef0 <fputs_unlocked@plt>
   127b0:	mov	r2, #5
   127b4:	ldr	r1, [pc, #1168]	; 12c4c <tcgetattr@plt+0x1a80>
   127b8:	mov	r0, #0
   127bc:	bl	10f74 <dcgettext@plt>
   127c0:	ldr	r1, [r4]
   127c4:	bl	10ef0 <fputs_unlocked@plt>
   127c8:	mov	r2, #5
   127cc:	ldr	r1, [pc, #1148]	; 12c50 <tcgetattr@plt+0x1a84>
   127d0:	mov	r0, #0
   127d4:	bl	10f74 <dcgettext@plt>
   127d8:	ldr	r1, [r4]
   127dc:	bl	10ef0 <fputs_unlocked@plt>
   127e0:	mov	r2, #5
   127e4:	ldr	r1, [pc, #1128]	; 12c54 <tcgetattr@plt+0x1a88>
   127e8:	mov	r0, #0
   127ec:	bl	10f74 <dcgettext@plt>
   127f0:	ldr	r1, [r4]
   127f4:	bl	10ef0 <fputs_unlocked@plt>
   127f8:	mov	r2, #5
   127fc:	ldr	r1, [pc, #1108]	; 12c58 <tcgetattr@plt+0x1a8c>
   12800:	mov	r0, #0
   12804:	bl	10f74 <dcgettext@plt>
   12808:	ldr	r2, [pc, #1100]	; 12c5c <tcgetattr@plt+0x1a90>
   1280c:	mov	r1, r0
   12810:	mov	r0, #1
   12814:	bl	11100 <__printf_chk@plt>
   12818:	mov	r2, #5
   1281c:	ldr	r1, [pc, #1084]	; 12c60 <tcgetattr@plt+0x1a94>
   12820:	mov	r0, #0
   12824:	bl	10f74 <dcgettext@plt>
   12828:	ldr	r1, [r4]
   1282c:	bl	10ef0 <fputs_unlocked@plt>
   12830:	mov	r2, #5
   12834:	ldr	r1, [pc, #1064]	; 12c64 <tcgetattr@plt+0x1a98>
   12838:	mov	r0, #0
   1283c:	bl	10f74 <dcgettext@plt>
   12840:	ldr	r1, [r4]
   12844:	bl	10ef0 <fputs_unlocked@plt>
   12848:	mov	r2, #5
   1284c:	ldr	r1, [pc, #1044]	; 12c68 <tcgetattr@plt+0x1a9c>
   12850:	mov	r0, #0
   12854:	bl	10f74 <dcgettext@plt>
   12858:	ldr	r1, [r4]
   1285c:	bl	10ef0 <fputs_unlocked@plt>
   12860:	mov	r2, #5
   12864:	ldr	r1, [pc, #1024]	; 12c6c <tcgetattr@plt+0x1aa0>
   12868:	mov	r0, #0
   1286c:	bl	10f74 <dcgettext@plt>
   12870:	ldr	r1, [r4]
   12874:	bl	10ef0 <fputs_unlocked@plt>
   12878:	mov	r2, #5
   1287c:	ldr	r1, [pc, #1004]	; 12c70 <tcgetattr@plt+0x1aa4>
   12880:	mov	r0, #0
   12884:	bl	10f74 <dcgettext@plt>
   12888:	ldr	r1, [r4]
   1288c:	bl	10ef0 <fputs_unlocked@plt>
   12890:	mov	r2, #5
   12894:	ldr	r1, [pc, #984]	; 12c74 <tcgetattr@plt+0x1aa8>
   12898:	mov	r0, #0
   1289c:	bl	10f74 <dcgettext@plt>
   128a0:	ldr	r1, [r4]
   128a4:	bl	10ef0 <fputs_unlocked@plt>
   128a8:	mov	r2, #5
   128ac:	ldr	r1, [pc, #964]	; 12c78 <tcgetattr@plt+0x1aac>
   128b0:	mov	r0, #0
   128b4:	bl	10f74 <dcgettext@plt>
   128b8:	ldr	r1, [r4]
   128bc:	bl	10ef0 <fputs_unlocked@plt>
   128c0:	mov	r2, #5
   128c4:	ldr	r1, [pc, #944]	; 12c7c <tcgetattr@plt+0x1ab0>
   128c8:	mov	r0, #0
   128cc:	bl	10f74 <dcgettext@plt>
   128d0:	ldr	r1, [r4]
   128d4:	bl	10ef0 <fputs_unlocked@plt>
   128d8:	mov	r2, #5
   128dc:	ldr	r1, [pc, #924]	; 12c80 <tcgetattr@plt+0x1ab4>
   128e0:	mov	r0, #0
   128e4:	bl	10f74 <dcgettext@plt>
   128e8:	ldr	r2, [pc, #916]	; 12c84 <tcgetattr@plt+0x1ab8>
   128ec:	mov	r1, r0
   128f0:	mov	r0, #1
   128f4:	bl	11100 <__printf_chk@plt>
   128f8:	mov	r2, #5
   128fc:	ldr	r1, [pc, #900]	; 12c88 <tcgetattr@plt+0x1abc>
   12900:	mov	r0, #0
   12904:	bl	10f74 <dcgettext@plt>
   12908:	ldr	r2, [pc, #892]	; 12c8c <tcgetattr@plt+0x1ac0>
   1290c:	mov	r1, r0
   12910:	mov	r0, #1
   12914:	bl	11100 <__printf_chk@plt>
   12918:	mov	r2, #5
   1291c:	ldr	r1, [pc, #876]	; 12c90 <tcgetattr@plt+0x1ac4>
   12920:	mov	r0, #0
   12924:	bl	10f74 <dcgettext@plt>
   12928:	ldr	r1, [r4]
   1292c:	bl	10ef0 <fputs_unlocked@plt>
   12930:	mov	r2, #5
   12934:	ldr	r1, [pc, #856]	; 12c94 <tcgetattr@plt+0x1ac8>
   12938:	mov	r0, #0
   1293c:	bl	10f74 <dcgettext@plt>
   12940:	ldr	r1, [r4]
   12944:	bl	10ef0 <fputs_unlocked@plt>
   12948:	mov	r2, #5
   1294c:	ldr	r1, [pc, #836]	; 12c98 <tcgetattr@plt+0x1acc>
   12950:	mov	r0, #0
   12954:	bl	10f74 <dcgettext@plt>
   12958:	ldr	r1, [r4]
   1295c:	bl	10ef0 <fputs_unlocked@plt>
   12960:	mov	r2, #5
   12964:	ldr	r1, [pc, #816]	; 12c9c <tcgetattr@plt+0x1ad0>
   12968:	mov	r0, #0
   1296c:	bl	10f74 <dcgettext@plt>
   12970:	ldr	r1, [r4]
   12974:	bl	10ef0 <fputs_unlocked@plt>
   12978:	mov	r2, #5
   1297c:	ldr	r1, [pc, #796]	; 12ca0 <tcgetattr@plt+0x1ad4>
   12980:	mov	r0, #0
   12984:	bl	10f74 <dcgettext@plt>
   12988:	ldr	r3, [pc, #788]	; 12ca4 <tcgetattr@plt+0x1ad8>
   1298c:	ldr	r2, [pc, #788]	; 12ca8 <tcgetattr@plt+0x1adc>
   12990:	mov	r1, r0
   12994:	mov	r0, #1
   12998:	bl	11100 <__printf_chk@plt>
   1299c:	mov	r2, #5
   129a0:	ldr	r1, [pc, #772]	; 12cac <tcgetattr@plt+0x1ae0>
   129a4:	mov	r0, #0
   129a8:	bl	10f74 <dcgettext@plt>
   129ac:	ldr	r1, [r4]
   129b0:	bl	10ef0 <fputs_unlocked@plt>
   129b4:	mov	r2, #5
   129b8:	ldr	r1, [pc, #752]	; 12cb0 <tcgetattr@plt+0x1ae4>
   129bc:	mov	r0, #0
   129c0:	bl	10f74 <dcgettext@plt>
   129c4:	ldr	r2, [pc, #744]	; 12cb4 <tcgetattr@plt+0x1ae8>
   129c8:	mov	r1, r0
   129cc:	mov	r0, #1
   129d0:	bl	11100 <__printf_chk@plt>
   129d4:	mov	r2, #5
   129d8:	ldr	r1, [pc, #728]	; 12cb8 <tcgetattr@plt+0x1aec>
   129dc:	mov	r0, #0
   129e0:	bl	10f74 <dcgettext@plt>
   129e4:	ldr	r3, [pc, #720]	; 12cbc <tcgetattr@plt+0x1af0>
   129e8:	ldr	r2, [pc, #720]	; 12cc0 <tcgetattr@plt+0x1af4>
   129ec:	str	r3, [sp]
   129f0:	ldr	r3, [pc, #716]	; 12cc4 <tcgetattr@plt+0x1af8>
   129f4:	mov	r1, r0
   129f8:	mov	r0, #1
   129fc:	bl	11100 <__printf_chk@plt>
   12a00:	mov	r2, #5
   12a04:	ldr	r1, [pc, #700]	; 12cc8 <tcgetattr@plt+0x1afc>
   12a08:	mov	r0, #0
   12a0c:	bl	10f74 <dcgettext@plt>
   12a10:	ldr	r1, [r4]
   12a14:	bl	10ef0 <fputs_unlocked@plt>
   12a18:	ldr	lr, [pc, #684]	; 12ccc <tcgetattr@plt+0x1b00>
   12a1c:	add	ip, sp, #8
   12a20:	ldm	lr!, {r0, r1, r2, r3}
   12a24:	stmia	ip!, {r0, r1, r2, r3}
   12a28:	ldm	lr!, {r0, r1, r2, r3}
   12a2c:	stmia	ip!, {r0, r1, r2, r3}
   12a30:	ldm	lr!, {r0, r1, r2, r3}
   12a34:	stmia	ip!, {r0, r1, r2, r3}
   12a38:	ldm	lr, {r0, r1}
   12a3c:	stm	ip, {r0, r1}
   12a40:	ldr	r1, [r7, r6]
   12a44:	add	r8, r7, r6
   12a48:	cmp	r1, #0
   12a4c:	bne	12af0 <tcgetattr@plt+0x1924>
   12a50:	ldr	r6, [r8, #4]
   12a54:	ldr	r7, [pc, #240]	; 12b4c <tcgetattr@plt+0x1980>
   12a58:	cmp	r6, #0
   12a5c:	mov	r2, #5
   12a60:	ldr	r1, [pc, #616]	; 12cd0 <tcgetattr@plt+0x1b04>
   12a64:	mov	r0, #0
   12a68:	moveq	r6, r7
   12a6c:	bl	10f74 <dcgettext@plt>
   12a70:	ldr	r3, [pc, #604]	; 12cd4 <tcgetattr@plt+0x1b08>
   12a74:	ldr	r2, [pc, #604]	; 12cd8 <tcgetattr@plt+0x1b0c>
   12a78:	mov	r1, r0
   12a7c:	mov	r0, #1
   12a80:	bl	11100 <__printf_chk@plt>
   12a84:	mov	r1, #0
   12a88:	mov	r0, #5
   12a8c:	bl	11154 <setlocale@plt>
   12a90:	cmp	r0, #0
   12a94:	bne	12b08 <tcgetattr@plt+0x193c>
   12a98:	mov	r2, #5
   12a9c:	ldr	r1, [pc, #568]	; 12cdc <tcgetattr@plt+0x1b10>
   12aa0:	mov	r0, #0
   12aa4:	bl	10f74 <dcgettext@plt>
   12aa8:	ldr	r3, [pc, #156]	; 12b4c <tcgetattr@plt+0x1980>
   12aac:	ldr	r2, [pc, #544]	; 12cd4 <tcgetattr@plt+0x1b08>
   12ab0:	mov	r1, r0
   12ab4:	mov	r0, #1
   12ab8:	bl	11100 <__printf_chk@plt>
   12abc:	mov	r2, #5
   12ac0:	ldr	r1, [pc, #536]	; 12ce0 <tcgetattr@plt+0x1b14>
   12ac4:	mov	r0, #0
   12ac8:	bl	10f74 <dcgettext@plt>
   12acc:	ldr	r2, [pc, #528]	; 12ce4 <tcgetattr@plt+0x1b18>
   12ad0:	cmp	r6, r7
   12ad4:	ldr	r3, [pc, #524]	; 12ce8 <tcgetattr@plt+0x1b1c>
   12ad8:	moveq	r3, r2
   12adc:	mov	r2, r6
   12ae0:	mov	r1, r0
   12ae4:	mov	r0, #1
   12ae8:	bl	11100 <__printf_chk@plt>
   12aec:	b	121a8 <tcgetattr@plt+0xfdc>
   12af0:	mov	r0, r9
   12af4:	bl	10f08 <strcmp@plt>
   12af8:	add	r6, r6, #8
   12afc:	cmp	r0, #0
   12b00:	bne	12a40 <tcgetattr@plt+0x1874>
   12b04:	b	12a50 <tcgetattr@plt+0x1884>
   12b08:	mov	r2, #3
   12b0c:	ldr	r1, [pc, #472]	; 12cec <tcgetattr@plt+0x1b20>
   12b10:	bl	11190 <strncmp@plt>
   12b14:	cmp	r0, #0
   12b18:	beq	12a98 <tcgetattr@plt+0x18cc>
   12b1c:	mov	r2, #5
   12b20:	ldr	r1, [pc, #456]	; 12cf0 <tcgetattr@plt+0x1b24>
   12b24:	mov	r0, #0
   12b28:	bl	10f74 <dcgettext@plt>
   12b2c:	ldr	r1, [r4]
   12b30:	bl	10ef0 <fputs_unlocked@plt>
   12b34:	b	12a98 <tcgetattr@plt+0x18cc>
   12b38:	andeq	fp, r2, ip, asr r2
   12b3c:	andeq	fp, r2, r0, ror r1
   12b40:	andeq	r7, r1, ip, lsl #23
   12b44:			; <UNDEFINED> instruction: 0x00017bb3
   12b48:	andeq	fp, r2, r4, ror r1
   12b4c:	andeq	r7, r1, r7, lsl #23
   12b50:	andeq	r7, r1, sl, asr #24
   12b54:	andeq	r7, r1, r5, ror ip
   12b58:	andeq	r7, r1, r0, asr #25
   12b5c:	muleq	r1, r8, sp
   12b60:	andeq	r7, r1, r5, asr #27
   12b64:	strdeq	r7, [r1], -fp
   12b68:	andeq	r7, r1, r8, lsl #29
   12b6c:	muleq	r1, lr, lr
   12b70:	ldrdeq	r7, [r1], -r6
   12b74:	andeq	r7, r1, r4, asr #30
   12b78:	andeq	r7, r1, r9, ror pc
   12b7c:	andeq	r8, r1, sl, lsl r0
   12b80:	andeq	r8, r1, r6, asr r0
   12b84:	andeq	r8, r1, r5, lsl #1
   12b88:	strheq	r8, [r1], -r9
   12b8c:	andeq	r8, r1, ip, asr r1
   12b90:	muleq	r1, sl, r1
   12b94:	ldrdeq	r8, [r1], -r0
   12b98:	andeq	r8, r1, r0, lsr #4
   12b9c:	andeq	r8, r1, r2, lsl #5
   12ba0:	andeq	fp, r2, r4, lsl r1
   12ba4:	andeq	r9, r1, pc, lsr #30
   12ba8:	strdeq	r9, [r1], -ip
   12bac:	ldrdeq	r8, [r1], -r3
   12bb0:	strdeq	r8, [r1], -lr
   12bb4:	andeq	r8, r1, r6, lsr #6
   12bb8:	muleq	r1, pc, r3	; <UNPREDICTABLE>
   12bbc:	andeq	r8, r1, ip, lsr #8
   12bc0:	muleq	r1, pc, r4	; <UNPREDICTABLE>
   12bc4:	andeq	r8, r1, lr, lsl #10
   12bc8:	andeq	r8, r1, fp, lsr r5
   12bcc:	andeq	r8, r1, r7, ror r5
   12bd0:	andeq	r8, r1, fp, lsr #13
   12bd4:	ldrdeq	r8, [r1], -sp
   12bd8:	ldrdeq	r8, [r1], -lr
   12bdc:	andeq	r8, r1, r9, lsr #16
   12be0:	andeq	r8, r1, r8, asr #17
   12be4:	andeq	r8, r1, r4, lsl #18
   12be8:	andeq	r8, r1, r2, asr #18
   12bec:	andeq	r8, r1, pc, lsl #19
   12bf0:	andeq	r8, r1, pc, asr sl
   12bf4:	andeq	r8, r1, r2, ror sl
   12bf8:	andeq	r8, r1, r7, lsr #21
   12bfc:	andeq	r8, r1, r2, ror #21
   12c00:	andeq	r8, r1, r7, lsl fp
   12c04:	andeq	r8, r1, sl, asr #22
   12c08:	andeq	r8, r1, r1, lsl #23
   12c0c:	andeq	r8, r1, ip, asr #23
   12c10:	andeq	r8, r1, r9, lsl ip
   12c14:	andeq	r8, r1, r7, asr ip
   12c18:	muleq	r1, r6, ip
   12c1c:	andeq	r8, r1, fp, asr #25
   12c20:	andeq	r8, r1, pc, lsl #26
   12c24:	andeq	r8, r1, r4, lsr sp
   12c28:	andeq	r8, r1, sl, lsr #27
   12c2c:	andeq	r8, r1, r2, ror #27
   12c30:	andeq	r8, r1, r8, lsr lr
   12c34:	andeq	r8, r1, fp, asr #29
   12c38:	andeq	r8, r1, ip, lsl #30
   12c3c:	andeq	r8, r1, r4, lsr pc
   12c40:	andeq	r8, r1, r9, asr pc
   12c44:			; <UNDEFINED> instruction: 0x00018fb6
   12c48:	ldrdeq	r8, [r1], -fp
   12c4c:	andeq	r9, r1, pc, lsl r0
   12c50:	andeq	r9, r1, r6, rrx
   12c54:	andeq	r9, r1, sl, lsr #1
   12c58:	andeq	r9, r1, fp, asr #1
   12c5c:	andeq	r9, r1, r0, lsr r1
   12c60:	andeq	r9, r1, fp, asr #2
   12c64:	andeq	r9, r1, r2, ror #3
   12c68:	andeq	r9, r1, r7, lsl #4
   12c6c:	andeq	r9, r1, r0, asr r2
   12c70:	muleq	r1, r8, r2
   12c74:			; <UNDEFINED> instruction: 0x000192b0
   12c78:	ldrdeq	r9, [r1], -r3
   12c7c:	andeq	r9, r1, r5, lsl r3
   12c80:			; <UNDEFINED> instruction: 0x000193bf
   12c84:	ldrdeq	r9, [r1], -ip
   12c88:	strdeq	r9, [r1], -r1
   12c8c:	andeq	r9, r1, sl, lsr r4
   12c90:	andeq	r9, r1, r6, asr r4
   12c94:	andeq	r9, r1, r9, ror r4
   12c98:	andeq	r9, r1, lr, lsl #10
   12c9c:	andeq	r9, r1, sl, lsr r5
   12ca0:	andeq	r9, r1, r0, lsr #11
   12ca4:	ldrdeq	r9, [r1], -r9	; <UNPREDICTABLE>
   12ca8:	andeq	r9, r1, r2, lsl #12
   12cac:	andeq	r9, r1, r0, lsl r6
   12cb0:	ldrdeq	r9, [r1], -fp
   12cb4:	andeq	r9, r1, ip, lsr #15
   12cb8:	andeq	r9, r1, fp, asr #15
   12cbc:	andeq	r9, r1, pc, lsr r9
   12cc0:	andeq	r9, r1, r6, lsl #18
   12cc4:	andeq	r9, r1, fp, asr #17
   12cc8:	andeq	r9, r1, ip, ror r9
   12ccc:	andeq	r7, r1, r8, asr #4
   12cd0:	muleq	r1, r1, sl
   12cd4:	andeq	r9, r1, r8, lsr #21
   12cd8:	ldrdeq	r9, [r1], -r0
   12cdc:	andeq	r9, r1, r9, lsr #22
   12ce0:	andeq	r9, r1, r4, asr #22
   12ce4:	andeq	r9, r1, r3, lsr #28
   12ce8:	andeq	r9, r1, r5, rrx
   12cec:	ldrdeq	r9, [r1], -lr
   12cf0:	andeq	r9, r1, r2, ror #21
   12cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cf8:	sub	sp, sp, #52	; 0x34
   12cfc:	mov	fp, #1
   12d00:	ldr	r4, [sp, #88]	; 0x58
   12d04:	str	r0, [sp]
   12d08:	str	r1, [sp, #12]
   12d0c:	stmib	sp, {r2, r3}
   12d10:	ldr	r3, [sp, #8]
   12d14:	cmp	fp, r3
   12d18:	blt	12d24 <tcgetattr@plt+0x1b58>
   12d1c:	add	sp, sp, #52	; 0x34
   12d20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d24:	lsl	r3, fp, #2
   12d28:	str	r3, [sp, #16]
   12d2c:	ldr	r3, [sp, #4]
   12d30:	ldr	sl, [r3, fp, lsl #2]
   12d34:	cmp	sl, #0
   12d38:	beq	12d78 <tcgetattr@plt+0x1bac>
   12d3c:	ldrb	r3, [sl]
   12d40:	ldr	r1, [pc, #2852]	; 1386c <tcgetattr@plt+0x26a0>
   12d44:	cmp	r3, #45	; 0x2d
   12d48:	addeq	sl, sl, #1
   12d4c:	mov	r0, sl
   12d50:	moveq	r7, #1
   12d54:	movne	r7, #0
   12d58:	bl	10f08 <strcmp@plt>
   12d5c:	cmp	r0, #0
   12d60:	movne	r8, #0
   12d64:	movne	r9, #20
   12d68:	bne	132ec <tcgetattr@plt+0x2120>
   12d6c:	ldr	r3, [pc, #2812]	; 13870 <tcgetattr@plt+0x26a4>
   12d70:	eor	r7, r7, #1
   12d74:	str	r7, [r3]
   12d78:	add	fp, fp, #1
   12d7c:	b	12d10 <tcgetattr@plt+0x1b44>
   12d80:	mov	r1, r6
   12d84:	mov	r0, sl
   12d88:	bl	10f08 <strcmp@plt>
   12d8c:	cmp	r0, #0
   12d90:	bne	132e8 <tcgetattr@plt+0x211c>
   12d94:	ldr	r3, [pc, #2776]	; 13874 <tcgetattr@plt+0x26a8>
   12d98:	add	r5, r3, r5
   12d9c:	ldrb	r5, [r5, #484]	; 0x1e4
   12da0:	tst	r5, #16
   12da4:	movne	r6, #1
   12da8:	bne	13300 <tcgetattr@plt+0x2134>
   12dac:	cmp	r7, #0
   12db0:	beq	12dbc <tcgetattr@plt+0x1bf0>
   12db4:	ands	r5, r5, #4
   12db8:	beq	13130 <tcgetattr@plt+0x1f64>
   12dbc:	mov	r3, #20
   12dc0:	ldr	r2, [pc, #2732]	; 13874 <tcgetattr@plt+0x26a8>
   12dc4:	mov	r1, r4
   12dc8:	mla	r8, r3, r8, r2
   12dcc:	ldr	r0, [r8, #480]	; 0x1e0
   12dd0:	bl	11c5c <tcgetattr@plt+0xa90>
   12dd4:	cmp	r0, #0
   12dd8:	bne	132a8 <tcgetattr@plt+0x20dc>
   12ddc:	ldr	r1, [pc, #2708]	; 13878 <tcgetattr@plt+0x26ac>
   12de0:	mov	r0, r6
   12de4:	bl	10f08 <strcmp@plt>
   12de8:	cmp	r0, #0
   12dec:	beq	12e04 <tcgetattr@plt+0x1c38>
   12df0:	ldr	r1, [pc, #2692]	; 1387c <tcgetattr@plt+0x26b0>
   12df4:	mov	r0, r6
   12df8:	bl	10f08 <strcmp@plt>
   12dfc:	cmp	r0, #0
   12e00:	bne	12e30 <tcgetattr@plt+0x1c64>
   12e04:	cmp	r7, #0
   12e08:	ldreq	r3, [r4, #8]
   12e0c:	biceq	r3, r3, #816	; 0x330
   12e10:	orreq	r3, r3, #288	; 0x120
   12e14:	beq	12e24 <tcgetattr@plt+0x1c58>
   12e18:	ldr	r3, [r4, #8]
   12e1c:	bic	r3, r3, #304	; 0x130
   12e20:	orr	r3, r3, #48	; 0x30
   12e24:	str	r3, [r4, #8]
   12e28:	mov	r5, #1
   12e2c:	b	13130 <tcgetattr@plt+0x1f64>
   12e30:	ldr	r1, [pc, #2632]	; 13880 <tcgetattr@plt+0x26b4>
   12e34:	mov	r0, r6
   12e38:	bl	10f08 <strcmp@plt>
   12e3c:	cmp	r0, #0
   12e40:	bne	12e5c <tcgetattr@plt+0x1c90>
   12e44:	cmp	r7, #0
   12e48:	ldreq	r3, [r4, #8]
   12e4c:	biceq	r3, r3, #816	; 0x330
   12e50:	orreq	r3, r3, #800	; 0x320
   12e54:	beq	12e24 <tcgetattr@plt+0x1c58>
   12e58:	b	12e18 <tcgetattr@plt+0x1c4c>
   12e5c:	ldr	r1, [pc, #2592]	; 13884 <tcgetattr@plt+0x26b8>
   12e60:	mov	r0, r6
   12e64:	bl	10f08 <strcmp@plt>
   12e68:	cmp	r0, #0
   12e6c:	bne	12eac <tcgetattr@plt+0x1ce0>
   12e70:	cmp	r7, #0
   12e74:	ldm	r4, {r2, r3}
   12e78:	beq	12e98 <tcgetattr@plt+0x1ccc>
   12e7c:	bic	r3, r3, #44	; 0x2c
   12e80:	bic	r2, r2, #448	; 0x1c0
   12e84:	orr	r3, r3, #4
   12e88:	orr	r2, r2, #256	; 0x100
   12e8c:	str	r2, [r4]
   12e90:	str	r3, [r4, #4]
   12e94:	b	12f14 <tcgetattr@plt+0x1d48>
   12e98:	bic	r3, r3, #4
   12e9c:	bic	r2, r2, #256	; 0x100
   12ea0:	str	r2, [r4]
   12ea4:	str	r3, [r4, #4]
   12ea8:	b	12e28 <tcgetattr@plt+0x1c5c>
   12eac:	ldr	r1, [pc, #2516]	; 13888 <tcgetattr@plt+0x26bc>
   12eb0:	mov	r0, r6
   12eb4:	bl	10f08 <strcmp@plt>
   12eb8:	cmp	r0, #0
   12ebc:	moveq	r3, #127	; 0x7f
   12ec0:	strbeq	r3, [r4, #19]
   12ec4:	moveq	r3, #21
   12ec8:	strbeq	r3, [r4, #20]
   12ecc:	beq	12e28 <tcgetattr@plt+0x1c5c>
   12ed0:	ldr	r1, [pc, #2484]	; 1388c <tcgetattr@plt+0x26c0>
   12ed4:	mov	r0, r6
   12ed8:	bl	10f08 <strcmp@plt>
   12edc:	cmp	r0, #0
   12ee0:	ldreq	r3, [pc, #2472]	; 13890 <tcgetattr@plt+0x26c4>
   12ee4:	beq	12f2c <tcgetattr@plt+0x1d60>
   12ee8:	ldr	r1, [pc, #2468]	; 13894 <tcgetattr@plt+0x26c8>
   12eec:	mov	r0, r6
   12ef0:	bl	10f08 <strcmp@plt>
   12ef4:	cmp	r0, #0
   12ef8:	bne	12fe0 <tcgetattr@plt+0x1e14>
   12efc:	ldr	r3, [r4, #12]
   12f00:	cmp	r7, #0
   12f04:	orrne	r3, r3, #2
   12f08:	strne	r3, [r4, #12]
   12f0c:	biceq	r3, r3, #2
   12f10:	beq	130ec <tcgetattr@plt+0x1f20>
   12f14:	mov	r5, r7
   12f18:	b	13130 <tcgetattr@plt+0x1f64>
   12f1c:	ldr	r2, [r3, #-4]
   12f20:	ldrb	r1, [r3, #-8]
   12f24:	add	r2, r4, r2
   12f28:	strb	r1, [r2, #17]
   12f2c:	ldr	r2, [r3], #12
   12f30:	cmp	r2, #0
   12f34:	bne	12f1c <tcgetattr@plt+0x1d50>
   12f38:	ldr	r5, [pc, #2392]	; 13898 <tcgetattr@plt+0x26cc>
   12f3c:	ldr	r3, [r5]
   12f40:	cmp	r3, #0
   12f44:	beq	12e28 <tcgetattr@plt+0x1c5c>
   12f48:	ldrb	r3, [r5, #8]
   12f4c:	tst	r3, #16
   12f50:	bne	12f9c <tcgetattr@plt+0x1dd0>
   12f54:	tst	r3, #1
   12f58:	beq	12fa4 <tcgetattr@plt+0x1dd8>
   12f5c:	mov	r1, r4
   12f60:	ldr	r0, [r5, #4]
   12f64:	bl	11c5c <tcgetattr@plt+0xa90>
   12f68:	cmp	r0, #0
   12f6c:	bne	12f84 <tcgetattr@plt+0x1db8>
   12f70:	ldr	r3, [pc, #2340]	; 1389c <tcgetattr@plt+0x26d0>
   12f74:	ldr	r2, [pc, #2340]	; 138a0 <tcgetattr@plt+0x26d4>
   12f78:	ldr	r1, [pc, #2340]	; 138a4 <tcgetattr@plt+0x26d8>
   12f7c:	ldr	r0, [pc, #2340]	; 138a8 <tcgetattr@plt+0x26dc>
   12f80:	bl	111c0 <__assert_fail@plt>
   12f84:	ldr	r2, [r5, #16]
   12f88:	ldr	r3, [r0]
   12f8c:	bic	r3, r3, r2
   12f90:	ldr	r2, [r5, #12]
   12f94:	orr	r3, r3, r2
   12f98:	str	r3, [r0]
   12f9c:	add	r5, r5, #20
   12fa0:	b	12f3c <tcgetattr@plt+0x1d70>
   12fa4:	tst	r3, #2
   12fa8:	beq	12f9c <tcgetattr@plt+0x1dd0>
   12fac:	mov	r1, r4
   12fb0:	ldr	r0, [r5, #4]
   12fb4:	bl	11c5c <tcgetattr@plt+0xa90>
   12fb8:	cmp	r0, #0
   12fbc:	ldreq	r3, [pc, #2264]	; 1389c <tcgetattr@plt+0x26d0>
   12fc0:	ldreq	r2, [pc, #2276]	; 138ac <tcgetattr@plt+0x26e0>
   12fc4:	beq	12f78 <tcgetattr@plt+0x1dac>
   12fc8:	ldr	r3, [r5, #16]
   12fcc:	ldr	r2, [r5, #12]
   12fd0:	orr	r2, r3, r2
   12fd4:	ldr	r3, [r0]
   12fd8:	bic	r3, r3, r2
   12fdc:	b	12f98 <tcgetattr@plt+0x1dcc>
   12fe0:	ldr	r1, [pc, #2248]	; 138b0 <tcgetattr@plt+0x26e4>
   12fe4:	mov	r0, r6
   12fe8:	bl	10f08 <strcmp@plt>
   12fec:	cmp	r0, #0
   12ff0:	bne	1302c <tcgetattr@plt+0x1e60>
   12ff4:	ldr	r3, [r4, #8]
   12ff8:	cmp	r7, #0
   12ffc:	ldr	r2, [r4]
   13000:	bic	r3, r3, #304	; 0x130
   13004:	orrne	r3, r3, #288	; 0x120
   13008:	orrne	r2, r2, #32
   1300c:	strne	r3, [r4, #8]
   13010:	strne	r2, [r4]
   13014:	bne	12f14 <tcgetattr@plt+0x1d48>
   13018:	orr	r3, r3, #48	; 0x30
   1301c:	bic	r2, r2, #32
   13020:	str	r3, [r4, #8]
   13024:	str	r2, [r4]
   13028:	b	12e28 <tcgetattr@plt+0x1c5c>
   1302c:	ldr	r1, [pc, #2176]	; 138b4 <tcgetattr@plt+0x26e8>
   13030:	mov	r0, r6
   13034:	bl	10f08 <strcmp@plt>
   13038:	cmp	r0, #0
   1303c:	bne	1308c <tcgetattr@plt+0x1ec0>
   13040:	ldr	r3, [r4, #8]
   13044:	cmp	r7, #0
   13048:	ldr	r2, [r4]
   1304c:	bic	r3, r3, #304	; 0x130
   13050:	beq	13070 <tcgetattr@plt+0x1ea4>
   13054:	orr	r3, r3, #288	; 0x120
   13058:	str	r3, [r4, #8]
   1305c:	ldr	r3, [r4, #4]
   13060:	orr	r2, r2, #32
   13064:	str	r2, [r4]
   13068:	orr	r3, r3, #1
   1306c:	b	12e90 <tcgetattr@plt+0x1cc4>
   13070:	orr	r3, r3, #48	; 0x30
   13074:	str	r3, [r4, #8]
   13078:	ldr	r3, [r4, #4]
   1307c:	bic	r2, r2, #32
   13080:	str	r2, [r4]
   13084:	bic	r3, r3, #1
   13088:	b	12ea4 <tcgetattr@plt+0x1cd8>
   1308c:	ldr	r1, [pc, #2084]	; 138b8 <tcgetattr@plt+0x26ec>
   13090:	mov	r0, r6
   13094:	bl	10f08 <strcmp@plt>
   13098:	cmp	r0, #0
   1309c:	beq	130b4 <tcgetattr@plt+0x1ee8>
   130a0:	ldr	r1, [pc, #2068]	; 138bc <tcgetattr@plt+0x26f0>
   130a4:	mov	r0, r6
   130a8:	bl	10f08 <strcmp@plt>
   130ac:	cmp	r0, #0
   130b0:	bne	13184 <tcgetattr@plt+0x1fb8>
   130b4:	ldrb	r2, [r6]
   130b8:	ldr	r3, [r4, #4]
   130bc:	cmp	r2, #114	; 0x72
   130c0:	bne	130f4 <tcgetattr@plt+0x1f28>
   130c4:	cmp	r7, #0
   130c8:	beq	13108 <tcgetattr@plt+0x1f3c>
   130cc:	orr	r3, r3, #1
   130d0:	ldr	r2, [r4]
   130d4:	str	r3, [r4, #4]
   130d8:	ldr	r3, [r4, #12]
   130dc:	orr	r2, r2, #1312	; 0x520
   130e0:	orr	r3, r3, #3
   130e4:	orr	r2, r2, #6
   130e8:	str	r2, [r4]
   130ec:	str	r3, [r4, #12]
   130f0:	b	12e28 <tcgetattr@plt+0x1c5c>
   130f4:	cmp	r2, #99	; 0x63
   130f8:	moveq	r2, r7
   130fc:	orrne	r2, r7, #1
   13100:	cmp	r2, #0
   13104:	beq	130cc <tcgetattr@plt+0x1f00>
   13108:	bic	r3, r3, #1
   1310c:	str	r3, [r4, #4]
   13110:	ldr	r3, [r4, #12]
   13114:	mov	r2, #0
   13118:	bic	r3, r3, #7
   1311c:	mov	r5, #1
   13120:	str	r2, [r4]
   13124:	str	r3, [r4, #12]
   13128:	strb	r5, [r4, #23]
   1312c:	strb	r2, [r4, #22]
   13130:	ldr	r2, [sp, #96]	; 0x60
   13134:	mov	r6, #0
   13138:	mov	r3, #1
   1313c:	strb	r3, [r2]
   13140:	eor	r3, r5, #1
   13144:	tst	r7, r3
   13148:	beq	13308 <tcgetattr@plt+0x213c>
   1314c:	mov	r2, #5
   13150:	ldr	r1, [pc, #1896]	; 138c0 <tcgetattr@plt+0x26f4>
   13154:	mov	r0, #0
   13158:	bl	10f74 <dcgettext@plt>
   1315c:	mov	r4, r0
   13160:	sub	r0, sl, #1
   13164:	bl	152c4 <tcgetattr@plt+0x40f8>
   13168:	mov	r1, #0
   1316c:	mov	r2, r4
   13170:	mov	r3, r0
   13174:	mov	r0, r1
   13178:	bl	1101c <error@plt>
   1317c:	mov	r0, #1
   13180:	bl	12168 <tcgetattr@plt+0xf9c>
   13184:	ldr	r1, [pc, #1848]	; 138c4 <tcgetattr@plt+0x26f8>
   13188:	mov	r0, r6
   1318c:	bl	10f08 <strcmp@plt>
   13190:	cmp	r0, #0
   13194:	bne	131b8 <tcgetattr@plt+0x1fec>
   13198:	ldr	r3, [r4]
   1319c:	cmp	r7, #0
   131a0:	orrne	r3, r3, #2048	; 0x800
   131a4:	strne	r3, [r4]
   131a8:	bne	12f14 <tcgetattr@plt+0x1d48>
   131ac:	bic	r3, r3, #2048	; 0x800
   131b0:	str	r3, [r4]
   131b4:	b	12e28 <tcgetattr@plt+0x1c5c>
   131b8:	ldr	r1, [pc, #1800]	; 138c8 <tcgetattr@plt+0x26fc>
   131bc:	mov	r0, r6
   131c0:	bl	10f08 <strcmp@plt>
   131c4:	cmp	r0, #0
   131c8:	bne	131e4 <tcgetattr@plt+0x2018>
   131cc:	ldr	r3, [r4, #4]
   131d0:	cmp	r7, #0
   131d4:	orrne	r3, r3, #6144	; 0x1800
   131d8:	biceq	r3, r3, #6144	; 0x1800
   131dc:	beq	12ea4 <tcgetattr@plt+0x1cd8>
   131e0:	b	12e90 <tcgetattr@plt+0x1cc4>
   131e4:	ldr	r1, [pc, #1760]	; 138cc <tcgetattr@plt+0x2700>
   131e8:	mov	r0, r6
   131ec:	bl	10f08 <strcmp@plt>
   131f0:	cmp	r0, #0
   131f4:	beq	1320c <tcgetattr@plt+0x2040>
   131f8:	ldr	r1, [pc, #1744]	; 138d0 <tcgetattr@plt+0x2704>
   131fc:	mov	r0, r6
   13200:	bl	10f08 <strcmp@plt>
   13204:	cmp	r0, #0
   13208:	bne	1324c <tcgetattr@plt+0x2080>
   1320c:	cmp	r7, #0
   13210:	ldm	r4, {r2, r3}
   13214:	ldr	r1, [r4, #12]
   13218:	beq	13234 <tcgetattr@plt+0x2068>
   1321c:	bic	r1, r1, #4
   13220:	bic	r2, r2, #512	; 0x200
   13224:	str	r1, [r4, #12]
   13228:	str	r2, [r4]
   1322c:	bic	r3, r3, #2
   13230:	b	12e90 <tcgetattr@plt+0x1cc4>
   13234:	orr	r1, r1, #4
   13238:	orr	r2, r2, #512	; 0x200
   1323c:	str	r1, [r4, #12]
   13240:	str	r2, [r4]
   13244:	orr	r3, r3, #2
   13248:	b	12ea4 <tcgetattr@plt+0x1cd8>
   1324c:	ldr	r1, [pc, #1664]	; 138d4 <tcgetattr@plt+0x2708>
   13250:	mov	r0, r6
   13254:	bl	10f08 <strcmp@plt>
   13258:	cmp	r0, #0
   1325c:	ldreq	r3, [r4, #12]
   13260:	orreq	r3, r3, #2576	; 0xa10
   13264:	beq	130ec <tcgetattr@plt+0x1f20>
   13268:	ldr	r1, [pc, #1640]	; 138d8 <tcgetattr@plt+0x270c>
   1326c:	mov	r0, r6
   13270:	bl	10f08 <strcmp@plt>
   13274:	cmp	r0, #0
   13278:	bne	12e28 <tcgetattr@plt+0x1c5c>
   1327c:	mov	r3, #3
   13280:	strb	r3, [r4, #17]
   13284:	mov	r3, #127	; 0x7f
   13288:	strb	r3, [r4, #19]
   1328c:	mov	r3, #21
   13290:	strb	r3, [r4, #20]
   13294:	ldr	r3, [r4, #12]
   13298:	orr	r3, r3, #2576	; 0xa10
   1329c:	str	r3, [r4, #12]
   132a0:	ldr	r3, [r4]
   132a4:	b	131ac <tcgetattr@plt+0x1fe0>
   132a8:	cmp	r7, #0
   132ac:	beq	132cc <tcgetattr@plt+0x2100>
   132b0:	ldr	r3, [r8, #492]	; 0x1ec
   132b4:	ldr	r2, [r8, #488]	; 0x1e8
   132b8:	orr	r2, r3, r2
   132bc:	ldr	r3, [r0]
   132c0:	bic	r3, r3, r2
   132c4:	str	r3, [r0]
   132c8:	b	12f14 <tcgetattr@plt+0x1d48>
   132cc:	ldr	r2, [r8, #492]	; 0x1ec
   132d0:	ldr	r3, [r0]
   132d4:	bic	r3, r3, r2
   132d8:	ldr	r2, [r8, #488]	; 0x1e8
   132dc:	orr	r3, r3, r2
   132e0:	str	r3, [r0]
   132e4:	b	12e28 <tcgetattr@plt+0x1c5c>
   132e8:	add	r8, r8, #1
   132ec:	mul	r5, r9, r8
   132f0:	ldr	r3, [pc, #1440]	; 13898 <tcgetattr@plt+0x26cc>
   132f4:	ldr	r6, [r5, r3]
   132f8:	cmp	r6, #0
   132fc:	bne	12d80 <tcgetattr@plt+0x1bb4>
   13300:	mov	r5, r6
   13304:	b	13140 <tcgetattr@plt+0x1f74>
   13308:	cmp	r5, #0
   1330c:	bne	13408 <tcgetattr@plt+0x223c>
   13310:	ldr	r9, [pc, #1400]	; 13890 <tcgetattr@plt+0x26c4>
   13314:	mov	r8, r5
   13318:	mov	r2, #12
   1331c:	mul	r3, r2, r8
   13320:	ldr	r7, [r3, r9]
   13324:	cmp	r7, #0
   13328:	beq	13408 <tcgetattr@plt+0x223c>
   1332c:	mov	r1, r7
   13330:	mov	r0, sl
   13334:	str	r2, [sp, #20]
   13338:	bl	10f08 <strcmp@plt>
   1333c:	ldr	r2, [sp, #20]
   13340:	cmp	r0, #0
   13344:	bne	134cc <tcgetattr@plt+0x2300>
   13348:	ldr	r3, [sp, #8]
   1334c:	sub	r3, r3, #1
   13350:	cmp	fp, r3
   13354:	bne	13374 <tcgetattr@plt+0x21a8>
   13358:	ldr	r1, [pc, #1404]	; 138dc <tcgetattr@plt+0x2710>
   1335c:	mov	r2, #5
   13360:	mov	r0, #0
   13364:	bl	10f74 <dcgettext@plt>
   13368:	mov	r4, r0
   1336c:	mov	r0, sl
   13370:	b	13164 <tcgetattr@plt+0x1f98>
   13374:	ldr	r3, [sp, #4]
   13378:	ldr	r2, [sp, #16]
   1337c:	add	r3, r3, r2
   13380:	ldr	r5, [r3, #4]
   13384:	cmp	r5, #0
   13388:	beq	13358 <tcgetattr@plt+0x218c>
   1338c:	ldr	r1, [pc, #1356]	; 138e0 <tcgetattr@plt+0x2714>
   13390:	mov	r0, r7
   13394:	bl	10f08 <strcmp@plt>
   13398:	add	fp, fp, #1
   1339c:	cmp	r0, #0
   133a0:	beq	133b8 <tcgetattr@plt+0x21ec>
   133a4:	ldr	r1, [pc, #1336]	; 138e4 <tcgetattr@plt+0x2718>
   133a8:	mov	r0, r7
   133ac:	bl	10f08 <strcmp@plt>
   133b0:	cmp	r0, #0
   133b4:	bne	133c8 <tcgetattr@plt+0x21fc>
   133b8:	mov	r1, #255	; 0xff
   133bc:	mov	r0, r5
   133c0:	bl	11e18 <tcgetattr@plt+0xc4c>
   133c4:	b	133e4 <tcgetattr@plt+0x2218>
   133c8:	ldrb	r9, [r5]
   133cc:	cmp	r9, #0
   133d0:	beq	133e0 <tcgetattr@plt+0x2214>
   133d4:	ldrb	r7, [r5, #1]
   133d8:	cmp	r7, #0
   133dc:	bne	13488 <tcgetattr@plt+0x22bc>
   133e0:	mov	r0, r9
   133e4:	mov	r3, #12
   133e8:	ldr	r2, [pc, #1156]	; 13874 <tcgetattr@plt+0x26a8>
   133ec:	mov	r5, #1
   133f0:	mla	r8, r3, r8, r2
   133f4:	ldr	r3, [r8, #2284]	; 0x8ec
   133f8:	add	r3, r4, r3
   133fc:	strb	r0, [r3, #17]
   13400:	ldr	r3, [sp, #96]	; 0x60
   13404:	strb	r5, [r3]
   13408:	eor	r5, r5, #1
   1340c:	orr	r5, r6, r5
   13410:	tst	r5, #255	; 0xff
   13414:	beq	12d78 <tcgetattr@plt+0x1bac>
   13418:	ldr	r1, [pc, #1224]	; 138e8 <tcgetattr@plt+0x271c>
   1341c:	mov	r0, sl
   13420:	bl	10f08 <strcmp@plt>
   13424:	cmp	r0, #0
   13428:	bne	134d4 <tcgetattr@plt+0x2308>
   1342c:	ldr	r3, [sp, #8]
   13430:	sub	r3, r3, #1
   13434:	cmp	fp, r3
   13438:	beq	13358 <tcgetattr@plt+0x218c>
   1343c:	ldr	r2, [sp, #4]
   13440:	add	r3, fp, #1
   13444:	ldr	r0, [r2, r3, lsl #2]
   13448:	cmp	r0, #0
   1344c:	beq	13358 <tcgetattr@plt+0x218c>
   13450:	mov	fp, r3
   13454:	ldr	r3, [sp]
   13458:	cmp	r3, #0
   1345c:	bne	12d78 <tcgetattr@plt+0x1bac>
   13460:	bl	11c08 <tcgetattr@plt+0xa3c>
   13464:	mov	r1, r0
   13468:	mov	r0, r4
   1346c:	bl	110b8 <cfsetispeed@plt>
   13470:	ldr	r2, [sp, #92]	; 0x5c
   13474:	mov	r3, #1
   13478:	strb	r3, [r2]
   1347c:	ldr	r2, [sp, #96]	; 0x60
   13480:	strb	r3, [r2]
   13484:	b	12d78 <tcgetattr@plt+0x1bac>
   13488:	ldr	r1, [pc, #1116]	; 138ec <tcgetattr@plt+0x2720>
   1348c:	mov	r0, r5
   13490:	bl	10f08 <strcmp@plt>
   13494:	cmp	r0, #0
   13498:	beq	133e4 <tcgetattr@plt+0x2218>
   1349c:	ldr	r1, [pc, #1100]	; 138f0 <tcgetattr@plt+0x2724>
   134a0:	mov	r0, r5
   134a4:	bl	10f08 <strcmp@plt>
   134a8:	cmp	r0, #0
   134ac:	moveq	r0, #0
   134b0:	beq	133e4 <tcgetattr@plt+0x2218>
   134b4:	cmp	r9, #94	; 0x5e
   134b8:	bne	133b8 <tcgetattr@plt+0x21ec>
   134bc:	cmp	r7, #63	; 0x3f
   134c0:	bicne	r0, r7, #96	; 0x60
   134c4:	moveq	r0, #127	; 0x7f
   134c8:	b	133e4 <tcgetattr@plt+0x2218>
   134cc:	add	r8, r8, #1
   134d0:	b	1331c <tcgetattr@plt+0x2150>
   134d4:	ldr	r1, [pc, #1048]	; 138f4 <tcgetattr@plt+0x2728>
   134d8:	mov	r0, sl
   134dc:	bl	10f08 <strcmp@plt>
   134e0:	cmp	r0, #0
   134e4:	bne	13530 <tcgetattr@plt+0x2364>
   134e8:	ldr	r3, [sp, #8]
   134ec:	sub	r3, r3, #1
   134f0:	cmp	fp, r3
   134f4:	beq	13358 <tcgetattr@plt+0x218c>
   134f8:	ldr	r2, [sp, #4]
   134fc:	add	r3, fp, #1
   13500:	ldr	r0, [r2, r3, lsl #2]
   13504:	cmp	r0, #0
   13508:	beq	13358 <tcgetattr@plt+0x218c>
   1350c:	mov	fp, r3
   13510:	ldr	r3, [sp]
   13514:	cmp	r3, #0
   13518:	bne	12d78 <tcgetattr@plt+0x1bac>
   1351c:	bl	11c08 <tcgetattr@plt+0xa3c>
   13520:	mov	r1, r0
   13524:	mov	r0, r4
   13528:	bl	10fbc <cfsetospeed@plt>
   1352c:	b	13470 <tcgetattr@plt+0x22a4>
   13530:	ldr	r1, [pc, #960]	; 138f8 <tcgetattr@plt+0x272c>
   13534:	mov	r0, sl
   13538:	bl	10f08 <strcmp@plt>
   1353c:	cmp	r0, #0
   13540:	bne	13590 <tcgetattr@plt+0x23c4>
   13544:	ldr	r3, [sp, #8]
   13548:	sub	r3, r3, #1
   1354c:	cmp	fp, r3
   13550:	beq	13358 <tcgetattr@plt+0x218c>
   13554:	ldr	r2, [sp, #4]
   13558:	add	r3, fp, #1
   1355c:	ldr	r0, [r2, r3, lsl #2]
   13560:	cmp	r0, #0
   13564:	beq	13358 <tcgetattr@plt+0x218c>
   13568:	mov	fp, r3
   1356c:	ldr	r3, [sp]
   13570:	cmp	r3, #0
   13574:	bne	12d78 <tcgetattr@plt+0x1bac>
   13578:	mvn	r1, #-2147483648	; 0x80000000
   1357c:	bl	11e18 <tcgetattr@plt+0xc4c>
   13580:	ldr	r2, [sp, #12]
   13584:	mvn	r1, #0
   13588:	bl	11f38 <tcgetattr@plt+0xd6c>
   1358c:	b	12d78 <tcgetattr@plt+0x1bac>
   13590:	ldr	r1, [pc, #868]	; 138fc <tcgetattr@plt+0x2730>
   13594:	mov	r0, sl
   13598:	bl	10f08 <strcmp@plt>
   1359c:	cmp	r0, #0
   135a0:	beq	135b8 <tcgetattr@plt+0x23ec>
   135a4:	ldr	r1, [pc, #852]	; 13900 <tcgetattr@plt+0x2734>
   135a8:	mov	r0, sl
   135ac:	bl	10f08 <strcmp@plt>
   135b0:	cmp	r0, #0
   135b4:	bne	13604 <tcgetattr@plt+0x2438>
   135b8:	ldr	r3, [sp, #8]
   135bc:	sub	r3, r3, #1
   135c0:	cmp	fp, r3
   135c4:	beq	13358 <tcgetattr@plt+0x218c>
   135c8:	ldr	r2, [sp, #4]
   135cc:	add	r3, fp, #1
   135d0:	ldr	r0, [r2, r3, lsl #2]
   135d4:	cmp	r0, #0
   135d8:	beq	13358 <tcgetattr@plt+0x218c>
   135dc:	mov	fp, r3
   135e0:	ldr	r3, [sp]
   135e4:	cmp	r3, #0
   135e8:	bne	12d78 <tcgetattr@plt+0x1bac>
   135ec:	mvn	r1, #-2147483648	; 0x80000000
   135f0:	bl	11e18 <tcgetattr@plt+0xc4c>
   135f4:	ldr	r2, [sp, #12]
   135f8:	mov	r1, r0
   135fc:	mvn	r0, #0
   13600:	b	13588 <tcgetattr@plt+0x23bc>
   13604:	ldr	r1, [pc, #760]	; 13904 <tcgetattr@plt+0x2738>
   13608:	mov	r0, sl
   1360c:	bl	10f08 <strcmp@plt>
   13610:	cmp	r0, #0
   13614:	bne	13648 <tcgetattr@plt+0x247c>
   13618:	ldr	r3, [sp]
   1361c:	cmp	r3, #0
   13620:	bne	12d78 <tcgetattr@plt+0x1bac>
   13624:	bl	12004 <tcgetattr@plt+0xe38>
   13628:	ldr	r3, [pc, #728]	; 13908 <tcgetattr@plt+0x273c>
   1362c:	ldr	r2, [sp]
   13630:	ldr	r1, [sp, #12]
   13634:	str	r2, [r3]
   13638:	str	r0, [r3, #4]
   1363c:	mov	r0, r2
   13640:	bl	1208c <tcgetattr@plt+0xec0>
   13644:	b	12d78 <tcgetattr@plt+0x1bac>
   13648:	ldr	r1, [pc, #700]	; 1390c <tcgetattr@plt+0x2740>
   1364c:	mov	r0, sl
   13650:	bl	10f08 <strcmp@plt>
   13654:	cmp	r0, #0
   13658:	bne	136d4 <tcgetattr@plt+0x2508>
   1365c:	ldr	r3, [sp, #8]
   13660:	sub	r3, r3, #1
   13664:	cmp	fp, r3
   13668:	beq	13358 <tcgetattr@plt+0x218c>
   1366c:	ldr	r3, [sp, #4]
   13670:	add	r5, fp, #1
   13674:	ldr	r0, [r3, r5, lsl #2]
   13678:	cmp	r0, #0
   1367c:	beq	13358 <tcgetattr@plt+0x218c>
   13680:	mvn	r1, #0
   13684:	bl	11e18 <tcgetattr@plt+0xc4c>
   13688:	mov	fp, r5
   1368c:	bics	r3, r0, #255	; 0xff
   13690:	strb	r0, [r4, #16]
   13694:	beq	136cc <tcgetattr@plt+0x2500>
   13698:	mov	r2, #5
   1369c:	ldr	r1, [pc, #620]	; 13910 <tcgetattr@plt+0x2744>
   136a0:	mov	r0, #0
   136a4:	bl	10f74 <dcgettext@plt>
   136a8:	ldr	r3, [sp, #4]
   136ac:	mov	r6, r0
   136b0:	ldr	r0, [r3, r5, lsl #2]
   136b4:	bl	152c4 <tcgetattr@plt+0x40f8>
   136b8:	mov	r1, #0
   136bc:	mov	r2, r6
   136c0:	mov	r3, r0
   136c4:	mov	r0, r1
   136c8:	bl	1101c <error@plt>
   136cc:	mov	r3, #1
   136d0:	b	1347c <tcgetattr@plt+0x22b0>
   136d4:	ldr	r1, [pc, #568]	; 13914 <tcgetattr@plt+0x2748>
   136d8:	mov	r0, sl
   136dc:	bl	10f08 <strcmp@plt>
   136e0:	cmp	r0, #0
   136e4:	bne	13710 <tcgetattr@plt+0x2544>
   136e8:	ldr	r3, [sp]
   136ec:	cmp	r3, #0
   136f0:	bne	12d78 <tcgetattr@plt+0x1bac>
   136f4:	bl	12004 <tcgetattr@plt+0xe38>
   136f8:	ldr	r3, [pc, #520]	; 13908 <tcgetattr@plt+0x273c>
   136fc:	mov	r1, #0
   13700:	str	r0, [r3, #4]
   13704:	mov	r0, r4
   13708:	bl	11d58 <tcgetattr@plt+0xb8c>
   1370c:	b	12d78 <tcgetattr@plt+0x1bac>
   13710:	mov	r0, sl
   13714:	bl	11c08 <tcgetattr@plt+0xa3c>
   13718:	cmn	r0, #1
   1371c:	mov	r5, r0
   13720:	beq	13744 <tcgetattr@plt+0x2578>
   13724:	ldr	r3, [sp]
   13728:	cmp	r3, #0
   1372c:	bne	12d78 <tcgetattr@plt+0x1bac>
   13730:	mov	r1, r0
   13734:	mov	r0, r4
   13738:	bl	110b8 <cfsetispeed@plt>
   1373c:	mov	r1, r5
   13740:	b	13524 <tcgetattr@plt+0x2358>
   13744:	bl	110d0 <__errno_location@plt>
   13748:	mov	r6, sl
   1374c:	mov	r9, #0
   13750:	add	r8, sp, #28
   13754:	mov	r7, r0
   13758:	mov	r3, #0
   1375c:	str	r3, [r7]
   13760:	mov	r2, #16
   13764:	mov	r1, r8
   13768:	mov	r0, r6
   1376c:	bl	11094 <strtoul@plt>
   13770:	ldr	r3, [r7]
   13774:	cmp	r3, #0
   13778:	bne	13860 <tcgetattr@plt+0x2694>
   1377c:	ldr	r3, [sp, #28]
   13780:	sub	r5, r3, r6
   13784:	ldrb	r2, [r3]
   13788:	clz	r5, r5
   1378c:	lsr	r5, r5, #5
   13790:	cmp	r2, #58	; 0x3a
   13794:	orrne	r5, r5, #1
   13798:	cmp	r5, #0
   1379c:	bne	13860 <tcgetattr@plt+0x2694>
   137a0:	add	r2, sp, #32
   137a4:	add	r6, r3, #1
   137a8:	str	r0, [r2, r9, lsl #2]
   137ac:	add	r9, r9, #1
   137b0:	cmp	r9, #4
   137b4:	bne	13758 <tcgetattr@plt+0x258c>
   137b8:	ldr	r3, [sp, #32]
   137bc:	add	r9, r4, #16
   137c0:	str	r3, [r4]
   137c4:	ldr	r3, [sp, #36]	; 0x24
   137c8:	str	r3, [r4, #4]
   137cc:	ldr	r3, [sp, #40]	; 0x28
   137d0:	str	r3, [r4, #8]
   137d4:	ldr	r3, [sp, #44]	; 0x2c
   137d8:	str	r3, [r4, #12]
   137dc:	mov	r3, #58	; 0x3a
   137e0:	str	r3, [sp, #16]
   137e4:	mov	r3, #0
   137e8:	mov	r2, #16
   137ec:	str	r3, [r7]
   137f0:	mov	r1, r8
   137f4:	mov	r0, r6
   137f8:	bl	11094 <strtoul@plt>
   137fc:	ldr	r2, [r7]
   13800:	cmp	r2, #0
   13804:	bne	13860 <tcgetattr@plt+0x2694>
   13808:	ldr	r2, [sp, #28]
   1380c:	ldr	r3, [sp, #16]
   13810:	sub	r6, r6, r2
   13814:	ldrb	r1, [r2]
   13818:	clz	r6, r6
   1381c:	lsr	r6, r6, #5
   13820:	cmp	r1, r3
   13824:	moveq	r3, r6
   13828:	orrne	r3, r6, #1
   1382c:	cmp	r3, #0
   13830:	bne	13860 <tcgetattr@plt+0x2694>
   13834:	bics	r3, r0, #255	; 0xff
   13838:	bne	13860 <tcgetattr@plt+0x2694>
   1383c:	add	r5, r5, #1
   13840:	cmp	r5, #32
   13844:	strb	r0, [r9, #1]!
   13848:	add	r6, r2, #1
   1384c:	beq	136cc <tcgetattr@plt+0x2500>
   13850:	cmp	r5, #31
   13854:	movne	r3, #58	; 0x3a
   13858:	moveq	r3, #0
   1385c:	b	137e0 <tcgetattr@plt+0x2614>
   13860:	mov	r2, #5
   13864:	ldr	r1, [pc, #84]	; 138c0 <tcgetattr@plt+0x26f4>
   13868:	b	13360 <tcgetattr@plt+0x2194>
   1386c:			; <UNDEFINED> instruction: 0x00019cb6
   13870:	andeq	fp, r2, r4, lsl r1
   13874:	andeq	r7, r1, r4, lsr #1
   13878:	andeq	r9, r1, r7, ror fp
   1387c:	andeq	r9, r1, sp, ror fp
   13880:	andeq	r9, r1, r4, lsl #23
   13884:	andeq	sl, r1, r5, lsr #1
   13888:	andeq	r9, r1, r9, lsl #23
   1388c:	andeq	r9, r1, ip, lsl #23
   13890:	andeq	r7, r1, r8, lsl #19
   13894:	andeq	r9, r1, r2, lsr #23
   13898:	andeq	r7, r1, r0, lsl #5
   1389c:	andeq	r7, r1, ip, ror #20
   138a0:	andeq	r0, r0, ip, asr #17
   138a4:	muleq	r1, r1, fp
   138a8:	muleq	r1, ip, fp
   138ac:	ldrdeq	r0, [r0], -r2
   138b0:	andeq	r9, r1, r9, lsr #23
   138b4:	andeq	r9, r1, pc, lsr #23
   138b8:			; <UNDEFINED> instruction: 0x00019bb6
   138bc:			; <UNDEFINED> instruction: 0x00019bba
   138c0:	andeq	r9, r1, r2, ror #23
   138c4:	andeq	r9, r1, r1, asr #23
   138c8:	andeq	r9, r1, r9, asr #23
   138cc:	andeq	r9, r1, lr, asr #23
   138d0:	ldrdeq	r9, [r1], -r4
   138d4:	ldrdeq	r9, [r1], -sl
   138d8:	ldrdeq	r9, [r1], -lr
   138dc:	strdeq	r9, [r1], -r6
   138e0:	andeq	r9, r1, sp, lsl #24
   138e4:	andeq	r9, r1, r1, lsl ip
   138e8:	andeq	r9, r1, pc, lsl ip
   138ec:	andeq	r9, r1, r6, lsl ip
   138f0:	andeq	r9, r1, r9, lsl ip
   138f4:	andeq	r9, r1, r6, lsr #24
   138f8:	andeq	r9, r1, sp, lsr #24
   138fc:	andeq	r9, r1, r2, lsr ip
   13900:	andeq	r9, r1, r7, lsr ip
   13904:	andeq	r9, r1, pc, lsr ip
   13908:	andeq	fp, r2, r8, lsl #3
   1390c:	andeq	r9, r1, r4, asr #24
   13910:	andeq	r9, r1, r9, asr #24
   13914:	andeq	r9, r1, r0, lsr #24
   13918:	ldr	r3, [pc, #4]	; 13924 <tcgetattr@plt+0x2758>
   1391c:	str	r0, [r3]
   13920:	bx	lr
   13924:	andeq	fp, r2, r0, asr r2
   13928:	ldr	r3, [pc, #4]	; 13934 <tcgetattr@plt+0x2768>
   1392c:	strb	r0, [r3, #4]
   13930:	bx	lr
   13934:	andeq	fp, r2, r0, asr r2
   13938:	ldr	r3, [pc, #192]	; 13a00 <tcgetattr@plt+0x2834>
   1393c:	push	{r0, r1, r4, r5, r6, lr}
   13940:	ldr	r0, [r3]
   13944:	bl	166b0 <tcgetattr@plt+0x54e4>
   13948:	cmp	r0, #0
   1394c:	beq	139e4 <tcgetattr@plt+0x2818>
   13950:	ldr	r3, [pc, #172]	; 13a04 <tcgetattr@plt+0x2838>
   13954:	mov	r4, r3
   13958:	ldrb	r2, [r3, #4]
   1395c:	cmp	r2, #0
   13960:	beq	13974 <tcgetattr@plt+0x27a8>
   13964:	bl	110d0 <__errno_location@plt>
   13968:	ldr	r3, [r0]
   1396c:	cmp	r3, #32
   13970:	beq	139e4 <tcgetattr@plt+0x2818>
   13974:	mov	r2, #5
   13978:	ldr	r1, [pc, #136]	; 13a08 <tcgetattr@plt+0x283c>
   1397c:	mov	r0, #0
   13980:	bl	10f74 <dcgettext@plt>
   13984:	ldr	r4, [r4]
   13988:	cmp	r4, #0
   1398c:	mov	r5, r0
   13990:	beq	139c8 <tcgetattr@plt+0x27fc>
   13994:	bl	110d0 <__errno_location@plt>
   13998:	ldr	r6, [r0]
   1399c:	mov	r0, r4
   139a0:	bl	15174 <tcgetattr@plt+0x3fa8>
   139a4:	str	r5, [sp]
   139a8:	ldr	r2, [pc, #92]	; 13a0c <tcgetattr@plt+0x2840>
   139ac:	mov	r1, r6
   139b0:	mov	r3, r0
   139b4:	mov	r0, #0
   139b8:	bl	1101c <error@plt>
   139bc:	ldr	r3, [pc, #76]	; 13a10 <tcgetattr@plt+0x2844>
   139c0:	ldr	r0, [r3]
   139c4:	bl	10f38 <_exit@plt>
   139c8:	bl	110d0 <__errno_location@plt>
   139cc:	mov	r3, r5
   139d0:	ldr	r2, [pc, #60]	; 13a14 <tcgetattr@plt+0x2848>
   139d4:	ldr	r1, [r0]
   139d8:	mov	r0, r4
   139dc:	bl	1101c <error@plt>
   139e0:	b	139bc <tcgetattr@plt+0x27f0>
   139e4:	ldr	r3, [pc, #44]	; 13a18 <tcgetattr@plt+0x284c>
   139e8:	ldr	r0, [r3]
   139ec:	bl	166b0 <tcgetattr@plt+0x54e4>
   139f0:	cmp	r0, #0
   139f4:	bne	139bc <tcgetattr@plt+0x27f0>
   139f8:	add	sp, sp, #8
   139fc:	pop	{r4, r5, r6, pc}
   13a00:	andeq	fp, r2, r4, ror r1
   13a04:	andeq	fp, r2, r0, asr r2
   13a08:	strdeq	sl, [r1], -r6
   13a0c:	andeq	sl, r1, r2, lsl #2
   13a10:	andeq	fp, r2, ip, lsl r1
   13a14:	andeq	sl, r1, r6, lsl #2
   13a18:	andeq	fp, r2, r0, ror r1
   13a1c:	push	{r1, r2, r3}
   13a20:	push	{r0, r1, r4, r5, r6, r7, lr}
   13a24:	add	r2, sp, #32
   13a28:	ldr	r1, [sp, #28]
   13a2c:	str	r2, [sp, #4]
   13a30:	cmp	r1, #0
   13a34:	beq	13a78 <tcgetattr@plt+0x28ac>
   13a38:	ldr	r3, [pc, #396]	; 13bcc <tcgetattr@plt+0x2a00>
   13a3c:	mov	r6, r0
   13a40:	cmp	r1, r3
   13a44:	beq	13a84 <tcgetattr@plt+0x28b8>
   13a48:	cmp	r1, #11
   13a4c:	beq	13a68 <tcgetattr@plt+0x289c>
   13a50:	bgt	13b94 <tcgetattr@plt+0x29c8>
   13a54:	cmp	r1, #3
   13a58:	beq	13a68 <tcgetattr@plt+0x289c>
   13a5c:	bgt	13b70 <tcgetattr@plt+0x29a4>
   13a60:	cmp	r1, #1
   13a64:	bne	13b7c <tcgetattr@plt+0x29b0>
   13a68:	mov	r0, r6
   13a6c:	bl	11148 <fcntl64@plt>
   13a70:	mov	r4, r0
   13a74:	b	13b30 <tcgetattr@plt+0x2964>
   13a78:	ldr	r2, [sp, #32]
   13a7c:	bl	11148 <fcntl64@plt>
   13a80:	b	13a70 <tcgetattr@plt+0x28a4>
   13a84:	ldr	r5, [pc, #324]	; 13bd0 <tcgetattr@plt+0x2a04>
   13a88:	add	r3, sp, #36	; 0x24
   13a8c:	str	r3, [sp, #4]
   13a90:	ldr	r3, [r5]
   13a94:	ldr	r7, [r2]
   13a98:	cmp	r3, #0
   13a9c:	mov	r2, r7
   13aa0:	blt	13b44 <tcgetattr@plt+0x2978>
   13aa4:	bl	11148 <fcntl64@plt>
   13aa8:	subs	r4, r0, #0
   13aac:	bge	13ac0 <tcgetattr@plt+0x28f4>
   13ab0:	bl	110d0 <__errno_location@plt>
   13ab4:	ldr	r3, [r0]
   13ab8:	cmp	r3, #22
   13abc:	beq	13b10 <tcgetattr@plt+0x2944>
   13ac0:	mov	r3, #1
   13ac4:	str	r3, [r5]
   13ac8:	cmp	r4, #0
   13acc:	blt	13b30 <tcgetattr@plt+0x2964>
   13ad0:	ldr	r5, [r5]
   13ad4:	cmn	r5, #1
   13ad8:	bne	13b30 <tcgetattr@plt+0x2964>
   13adc:	mov	r1, #1
   13ae0:	mov	r0, r4
   13ae4:	bl	11148 <fcntl64@plt>
   13ae8:	subs	r2, r0, #0
   13aec:	bge	13b54 <tcgetattr@plt+0x2988>
   13af0:	bl	110d0 <__errno_location@plt>
   13af4:	ldr	r7, [r0]
   13af8:	mov	r6, r0
   13afc:	mov	r0, r4
   13b00:	bl	111a8 <close@plt>
   13b04:	mov	r4, r5
   13b08:	str	r7, [r6]
   13b0c:	b	13b30 <tcgetattr@plt+0x2964>
   13b10:	mov	r2, r7
   13b14:	mov	r1, #0
   13b18:	mov	r0, r6
   13b1c:	bl	11148 <fcntl64@plt>
   13b20:	subs	r4, r0, #0
   13b24:	mvnge	r3, #0
   13b28:	strge	r3, [r5]
   13b2c:	bge	13ad0 <tcgetattr@plt+0x2904>
   13b30:	mov	r0, r4
   13b34:	add	sp, sp, #8
   13b38:	pop	{r4, r5, r6, r7, lr}
   13b3c:	add	sp, sp, #12
   13b40:	bx	lr
   13b44:	mov	r1, #0
   13b48:	bl	11148 <fcntl64@plt>
   13b4c:	mov	r4, r0
   13b50:	b	13ac8 <tcgetattr@plt+0x28fc>
   13b54:	orr	r2, r2, #1
   13b58:	mov	r1, #2
   13b5c:	mov	r0, r4
   13b60:	bl	11148 <fcntl64@plt>
   13b64:	cmn	r0, #1
   13b68:	bne	13b30 <tcgetattr@plt+0x2964>
   13b6c:	b	13af0 <tcgetattr@plt+0x2924>
   13b70:	cmp	r1, #8
   13b74:	beq	13b7c <tcgetattr@plt+0x29b0>
   13b78:	bgt	13b8c <tcgetattr@plt+0x29c0>
   13b7c:	ldr	r3, [sp, #4]
   13b80:	mov	r0, r6
   13b84:	ldr	r2, [r3]
   13b88:	b	13a7c <tcgetattr@plt+0x28b0>
   13b8c:	cmp	r1, #9
   13b90:	b	13a64 <tcgetattr@plt+0x2898>
   13b94:	ldr	r2, [pc, #56]	; 13bd4 <tcgetattr@plt+0x2a08>
   13b98:	cmp	r1, r2
   13b9c:	bgt	13bb4 <tcgetattr@plt+0x29e8>
   13ba0:	cmp	r1, r3
   13ba4:	ldrlt	r3, [pc, #44]	; 13bd8 <tcgetattr@plt+0x2a0c>
   13ba8:	bge	13b7c <tcgetattr@plt+0x29b0>
   13bac:	cmp	r1, r3
   13bb0:	b	13a64 <tcgetattr@plt+0x2898>
   13bb4:	ldr	r3, [pc, #32]	; 13bdc <tcgetattr@plt+0x2a10>
   13bb8:	cmp	r1, r3
   13bbc:	beq	13b7c <tcgetattr@plt+0x29b0>
   13bc0:	blt	13a68 <tcgetattr@plt+0x289c>
   13bc4:	add	r3, r3, #1
   13bc8:	b	13bac <tcgetattr@plt+0x29e0>
   13bcc:	andeq	r0, r0, r6, lsl #8
   13bd0:	andeq	fp, r2, r8, asr r2
   13bd4:	andeq	r0, r0, r7, lsl #8
   13bd8:	andeq	r0, r0, r1, lsl #8
   13bdc:	andeq	r0, r0, r9, lsl #8
   13be0:	push	{r4, r5, r6, r7, r8, lr}
   13be4:	mov	r5, r0
   13be8:	mov	r0, r1
   13bec:	mov	r1, r2
   13bf0:	mov	r2, r3
   13bf4:	bl	11028 <open64@plt>
   13bf8:	sub	r3, r5, r0
   13bfc:	clz	r3, r3
   13c00:	lsr	r3, r3, #5
   13c04:	orrs	r3, r3, r0, lsr #31
   13c08:	mov	r4, r0
   13c0c:	bne	13c38 <tcgetattr@plt+0x2a6c>
   13c10:	mov	r1, r5
   13c14:	bl	10f8c <dup2@plt>
   13c18:	mov	r6, r0
   13c1c:	bl	110d0 <__errno_location@plt>
   13c20:	ldr	r7, [r0]
   13c24:	mov	r5, r0
   13c28:	mov	r0, r4
   13c2c:	mov	r4, r6
   13c30:	bl	111a8 <close@plt>
   13c34:	str	r7, [r5]
   13c38:	mov	r0, r4
   13c3c:	pop	{r4, r5, r6, r7, r8, pc}
   13c40:	push	{r0, r1, r2, r4, r5, lr}
   13c44:	mov	r5, r0
   13c48:	bl	110d0 <__errno_location@plt>
   13c4c:	ldr	r3, [r0]
   13c50:	mov	r4, r0
   13c54:	str	r3, [sp]
   13c58:	str	r3, [sp, #4]
   13c5c:	mov	r3, #0
   13c60:	str	r3, [r0]
   13c64:	mov	r0, r5
   13c68:	bl	10f2c <free@plt>
   13c6c:	ldr	r3, [r4]
   13c70:	add	r2, sp, #8
   13c74:	cmp	r3, #0
   13c78:	moveq	r3, #4
   13c7c:	movne	r3, #0
   13c80:	add	r3, r2, r3
   13c84:	ldr	r3, [r3, #-8]
   13c88:	str	r3, [r4]
   13c8c:	add	sp, sp, #12
   13c90:	pop	{r4, r5, pc}
   13c94:	push	{r4, r5, r6, lr}
   13c98:	subs	r5, r0, #0
   13c9c:	bne	13cb4 <tcgetattr@plt+0x2ae8>
   13ca0:	ldr	r3, [pc, #124]	; 13d24 <tcgetattr@plt+0x2b58>
   13ca4:	ldr	r0, [pc, #124]	; 13d28 <tcgetattr@plt+0x2b5c>
   13ca8:	ldr	r1, [r3]
   13cac:	bl	11184 <fputs@plt>
   13cb0:	bl	1119c <abort@plt>
   13cb4:	mov	r1, #47	; 0x2f
   13cb8:	bl	11160 <strrchr@plt>
   13cbc:	cmp	r0, #0
   13cc0:	addne	r4, r0, #1
   13cc4:	moveq	r4, r5
   13cc8:	sub	r3, r4, r5
   13ccc:	cmp	r3, #6
   13cd0:	ble	13d10 <tcgetattr@plt+0x2b44>
   13cd4:	mov	r2, #7
   13cd8:	ldr	r1, [pc, #76]	; 13d2c <tcgetattr@plt+0x2b60>
   13cdc:	sub	r0, r4, #7
   13ce0:	bl	11190 <strncmp@plt>
   13ce4:	cmp	r0, #0
   13ce8:	bne	13d10 <tcgetattr@plt+0x2b44>
   13cec:	mov	r2, #3
   13cf0:	ldr	r1, [pc, #56]	; 13d30 <tcgetattr@plt+0x2b64>
   13cf4:	mov	r0, r4
   13cf8:	bl	11190 <strncmp@plt>
   13cfc:	cmp	r0, #0
   13d00:	movne	r5, r4
   13d04:	ldreq	r3, [pc, #40]	; 13d34 <tcgetattr@plt+0x2b68>
   13d08:	addeq	r5, r4, #3
   13d0c:	streq	r5, [r3]
   13d10:	ldr	r3, [pc, #32]	; 13d38 <tcgetattr@plt+0x2b6c>
   13d14:	str	r5, [r3]
   13d18:	ldr	r3, [pc, #28]	; 13d3c <tcgetattr@plt+0x2b70>
   13d1c:	str	r5, [r3]
   13d20:	pop	{r4, r5, r6, pc}
   13d24:	andeq	fp, r2, r0, ror r1
   13d28:	andeq	sl, r1, r9, lsl #2
   13d2c:	andeq	sl, r1, r1, asr #2
   13d30:	andeq	sl, r1, r9, asr #2
   13d34:	andeq	fp, r2, r0, ror #2
   13d38:	andeq	fp, r2, ip, asr r2
   13d3c:	andeq	fp, r2, r4, ror #2
   13d40:	push	{r4, r5, r6, lr}
   13d44:	mov	r2, #48	; 0x30
   13d48:	mov	r5, r1
   13d4c:	mov	r1, #0
   13d50:	mov	r4, r0
   13d54:	bl	110f4 <memset@plt>
   13d58:	cmp	r5, #10
   13d5c:	bne	13d64 <tcgetattr@plt+0x2b98>
   13d60:	bl	1119c <abort@plt>
   13d64:	str	r5, [r4]
   13d68:	mov	r0, r4
   13d6c:	pop	{r4, r5, r6, pc}
   13d70:	push	{r4, r5, r6, lr}
   13d74:	mov	r4, r0
   13d78:	mov	r5, r1
   13d7c:	bl	168ac <tcgetattr@plt+0x56e0>
   13d80:	ldrb	r3, [r0]
   13d84:	bic	r3, r3, #32
   13d88:	cmp	r3, #85	; 0x55
   13d8c:	bne	13dfc <tcgetattr@plt+0x2c30>
   13d90:	ldrb	r3, [r0, #1]
   13d94:	bic	r3, r3, #32
   13d98:	cmp	r3, #84	; 0x54
   13d9c:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13da0:	ldrb	r3, [r0, #2]
   13da4:	bic	r3, r3, #32
   13da8:	cmp	r3, #70	; 0x46
   13dac:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13db0:	ldrb	r3, [r0, #3]
   13db4:	cmp	r3, #45	; 0x2d
   13db8:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13dbc:	ldrb	r3, [r0, #4]
   13dc0:	cmp	r3, #56	; 0x38
   13dc4:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13dc8:	ldrb	r3, [r0, #5]
   13dcc:	cmp	r3, #0
   13dd0:	beq	13de8 <tcgetattr@plt+0x2c1c>
   13dd4:	ldr	r1, [pc, #144]	; 13e6c <tcgetattr@plt+0x2ca0>
   13dd8:	ldr	r0, [pc, #144]	; 13e70 <tcgetattr@plt+0x2ca4>
   13ddc:	cmp	r5, #9
   13de0:	movne	r0, r1
   13de4:	pop	{r4, r5, r6, pc}
   13de8:	ldrb	r3, [r4]
   13dec:	ldr	r1, [pc, #128]	; 13e74 <tcgetattr@plt+0x2ca8>
   13df0:	ldr	r0, [pc, #128]	; 13e78 <tcgetattr@plt+0x2cac>
   13df4:	cmp	r3, #96	; 0x60
   13df8:	b	13de0 <tcgetattr@plt+0x2c14>
   13dfc:	cmp	r3, #71	; 0x47
   13e00:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13e04:	ldrb	r3, [r0, #1]
   13e08:	bic	r3, r3, #32
   13e0c:	cmp	r3, #66	; 0x42
   13e10:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13e14:	ldrb	r3, [r0, #2]
   13e18:	cmp	r3, #49	; 0x31
   13e1c:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13e20:	ldrb	r3, [r0, #3]
   13e24:	cmp	r3, #56	; 0x38
   13e28:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13e2c:	ldrb	r3, [r0, #4]
   13e30:	cmp	r3, #48	; 0x30
   13e34:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13e38:	ldrb	r3, [r0, #5]
   13e3c:	cmp	r3, #51	; 0x33
   13e40:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13e44:	ldrb	r3, [r0, #6]
   13e48:	cmp	r3, #48	; 0x30
   13e4c:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13e50:	ldrb	r3, [r0, #7]
   13e54:	cmp	r3, #0
   13e58:	bne	13dd4 <tcgetattr@plt+0x2c08>
   13e5c:	ldrb	r3, [r4]
   13e60:	ldr	r1, [pc, #20]	; 13e7c <tcgetattr@plt+0x2cb0>
   13e64:	ldr	r0, [pc, #20]	; 13e80 <tcgetattr@plt+0x2cb4>
   13e68:	b	13df4 <tcgetattr@plt+0x2c28>
   13e6c:			; <UNDEFINED> instruction: 0x0001a1b5
   13e70:			; <UNDEFINED> instruction: 0x0001a1b3
   13e74:	andeq	sl, r1, r8, lsr #3
   13e78:	andeq	sl, r1, r4, lsr #3
   13e7c:			; <UNDEFINED> instruction: 0x0001a1b0
   13e80:	andeq	sl, r1, ip, lsr #3
   13e84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e88:	sub	sp, sp, #108	; 0x6c
   13e8c:	mov	r8, r0
   13e90:	str	r3, [sp, #36]	; 0x24
   13e94:	mov	r5, r1
   13e98:	str	r2, [sp, #44]	; 0x2c
   13e9c:	ldr	sl, [sp, #144]	; 0x90
   13ea0:	bl	10fe0 <__ctype_get_mb_cur_max@plt>
   13ea4:	ldr	r3, [sp, #148]	; 0x94
   13ea8:	mov	r7, #0
   13eac:	str	r7, [sp, #48]	; 0x30
   13eb0:	lsr	r6, r3, #1
   13eb4:	and	r6, r6, #1
   13eb8:	mov	r3, #1
   13ebc:	str	r3, [sp, #72]	; 0x48
   13ec0:	str	r7, [sp, #24]
   13ec4:	str	r7, [sp, #32]
   13ec8:	str	r7, [sp, #40]	; 0x28
   13ecc:	str	r7, [sp, #60]	; 0x3c
   13ed0:	str	r0, [sp, #76]	; 0x4c
   13ed4:	cmp	sl, #10
   13ed8:	ldrls	pc, [pc, sl, lsl #2]
   13edc:	b	14118 <tcgetattr@plt+0x2f4c>
   13ee0:	andeq	r3, r1, ip, lsl #30
   13ee4:	andeq	r4, r1, r0, lsr #23
   13ee8:	andeq	r4, r1, r4, ror #1
   13eec:	andeq	r4, r1, r0, lsr r1
   13ef0:	andeq	r4, r1, r0, asr #1
   13ef4:	andeq	r3, r1, r8, lsl pc
   13ef8:	andeq	r4, r1, r0, lsl #23
   13efc:	andeq	r4, r1, ip, lsl r1
   13f00:	andeq	r4, r1, r0, lsl r0
   13f04:	andeq	r4, r1, r0, lsl r0
   13f08:	andeq	r4, r1, r0, lsl r0
   13f0c:	mov	r6, #0
   13f10:	mov	r4, #0
   13f14:	b	13f44 <tcgetattr@plt+0x2d78>
   13f18:	cmp	r6, #0
   13f1c:	bne	14140 <tcgetattr@plt+0x2f74>
   13f20:	cmp	r5, #0
   13f24:	movne	r3, #34	; 0x22
   13f28:	strbne	r3, [r8]
   13f2c:	mov	r3, #1
   13f30:	str	r3, [sp, #24]
   13f34:	str	r3, [sp, #32]
   13f38:	mov	r4, #1
   13f3c:	ldr	r3, [pc, #3172]	; 14ba8 <tcgetattr@plt+0x39dc>
   13f40:	str	r3, [sp, #40]	; 0x28
   13f44:	mov	r9, r5
   13f48:	mov	r3, #0
   13f4c:	str	r7, [sp, #68]	; 0x44
   13f50:	str	r3, [sp, #28]
   13f54:	ldr	r3, [sp, #36]	; 0x24
   13f58:	cmn	r3, #1
   13f5c:	bne	14aec <tcgetattr@plt+0x3920>
   13f60:	ldr	r3, [sp, #44]	; 0x2c
   13f64:	ldr	r2, [sp, #28]
   13f68:	ldrb	r3, [r3, r2]
   13f6c:	adds	r3, r3, #0
   13f70:	movne	r3, #1
   13f74:	str	r3, [sp, #52]	; 0x34
   13f78:	ldr	r3, [sp, #52]	; 0x34
   13f7c:	cmp	r3, #0
   13f80:	bne	14168 <tcgetattr@plt+0x2f9c>
   13f84:	sub	r2, sl, #2
   13f88:	clz	r2, r2
   13f8c:	lsr	r2, r2, #5
   13f90:	and	r3, r6, r2
   13f94:	cmp	r4, #0
   13f98:	movne	r3, #0
   13f9c:	andeq	r3, r3, #1
   13fa0:	cmp	r3, #0
   13fa4:	bne	14330 <tcgetattr@plt+0x3164>
   13fa8:	eor	r3, r6, #1
   13fac:	ands	r2, r2, r3
   13fb0:	beq	14b24 <tcgetattr@plt+0x3958>
   13fb4:	ldr	r3, [sp, #68]	; 0x44
   13fb8:	cmp	r3, #0
   13fbc:	beq	14b5c <tcgetattr@plt+0x3990>
   13fc0:	ldr	r3, [sp, #72]	; 0x48
   13fc4:	cmp	r3, #0
   13fc8:	beq	14b00 <tcgetattr@plt+0x3934>
   13fcc:	ldr	r3, [sp, #160]	; 0xa0
   13fd0:	ldr	r2, [sp, #44]	; 0x2c
   13fd4:	str	r3, [sp, #16]
   13fd8:	ldr	r3, [sp, #156]	; 0x9c
   13fdc:	ldr	r1, [sp, #60]	; 0x3c
   13fe0:	str	r3, [sp, #12]
   13fe4:	ldr	r3, [sp, #152]	; 0x98
   13fe8:	str	r3, [sp, #8]
   13fec:	ldr	r3, [sp, #148]	; 0x94
   13ff0:	str	r3, [sp, #4]
   13ff4:	mov	r3, #5
   13ff8:	str	r3, [sp]
   13ffc:	ldr	r3, [sp, #36]	; 0x24
   14000:	mov	r0, r8
   14004:	bl	13e84 <tcgetattr@plt+0x2cb8>
   14008:	mov	r4, r0
   1400c:	b	14b50 <tcgetattr@plt+0x3984>
   14010:	cmp	sl, #10
   14014:	beq	14070 <tcgetattr@plt+0x2ea4>
   14018:	ldr	r4, [pc, #2956]	; 14bac <tcgetattr@plt+0x39e0>
   1401c:	mov	r2, #5
   14020:	mov	r1, r4
   14024:	mov	r0, #0
   14028:	bl	10f74 <dcgettext@plt>
   1402c:	cmp	r0, r4
   14030:	str	r0, [sp, #156]	; 0x9c
   14034:	bne	14044 <tcgetattr@plt+0x2e78>
   14038:	mov	r1, sl
   1403c:	bl	13d70 <tcgetattr@plt+0x2ba4>
   14040:	str	r0, [sp, #156]	; 0x9c
   14044:	ldr	r4, [pc, #2916]	; 14bb0 <tcgetattr@plt+0x39e4>
   14048:	mov	r2, #5
   1404c:	mov	r1, r4
   14050:	mov	r0, #0
   14054:	bl	10f74 <dcgettext@plt>
   14058:	cmp	r0, r4
   1405c:	str	r0, [sp, #160]	; 0xa0
   14060:	bne	14070 <tcgetattr@plt+0x2ea4>
   14064:	mov	r1, sl
   14068:	bl	13d70 <tcgetattr@plt+0x2ba4>
   1406c:	str	r0, [sp, #160]	; 0xa0
   14070:	cmp	r6, #0
   14074:	moveq	r4, r6
   14078:	beq	14090 <tcgetattr@plt+0x2ec4>
   1407c:	mov	r4, #0
   14080:	b	140a0 <tcgetattr@plt+0x2ed4>
   14084:	cmp	r5, r4
   14088:	strbhi	r3, [r8, r4]
   1408c:	add	r4, r4, #1
   14090:	ldr	r3, [sp, #156]	; 0x9c
   14094:	ldrb	r3, [r3, r4]
   14098:	cmp	r3, #0
   1409c:	bne	14084 <tcgetattr@plt+0x2eb8>
   140a0:	ldr	r0, [sp, #160]	; 0xa0
   140a4:	bl	110a0 <strlen@plt>
   140a8:	ldr	r3, [sp, #160]	; 0xa0
   140ac:	str	r3, [sp, #40]	; 0x28
   140b0:	mov	r3, #1
   140b4:	str	r3, [sp, #24]
   140b8:	str	r0, [sp, #32]
   140bc:	b	13f44 <tcgetattr@plt+0x2d78>
   140c0:	mov	r3, #1
   140c4:	cmp	r6, #0
   140c8:	streq	r3, [sp, #24]
   140cc:	beq	140ec <tcgetattr@plt+0x2f20>
   140d0:	str	r3, [sp, #32]
   140d4:	ldr	r3, [pc, #2772]	; 14bb0 <tcgetattr@plt+0x39e4>
   140d8:	mov	r4, #0
   140dc:	str	r3, [sp, #40]	; 0x28
   140e0:	b	14110 <tcgetattr@plt+0x2f44>
   140e4:	cmp	r6, #0
   140e8:	bne	14158 <tcgetattr@plt+0x2f8c>
   140ec:	cmp	r5, #0
   140f0:	movne	r3, #39	; 0x27
   140f4:	strbne	r3, [r8]
   140f8:	mov	r3, #1
   140fc:	str	r3, [sp, #32]
   14100:	mov	r6, #0
   14104:	ldr	r3, [pc, #2724]	; 14bb0 <tcgetattr@plt+0x39e4>
   14108:	mov	r4, #1
   1410c:	str	r3, [sp, #40]	; 0x28
   14110:	mov	sl, #2
   14114:	b	13f44 <tcgetattr@plt+0x2d78>
   14118:	bl	1119c <abort@plt>
   1411c:	mov	r6, #0
   14120:	mov	r3, #1
   14124:	str	r3, [sp, #24]
   14128:	mov	r4, r6
   1412c:	b	13f44 <tcgetattr@plt+0x2d78>
   14130:	mov	r6, #1
   14134:	str	r6, [sp, #24]
   14138:	str	r6, [sp, #32]
   1413c:	b	140d4 <tcgetattr@plt+0x2f08>
   14140:	mov	r3, #1
   14144:	str	r3, [sp, #32]
   14148:	ldr	r3, [pc, #2648]	; 14ba8 <tcgetattr@plt+0x39dc>
   1414c:	str	r6, [sp, #24]
   14150:	str	r3, [sp, #40]	; 0x28
   14154:	b	13f10 <tcgetattr@plt+0x2d44>
   14158:	mov	r3, #1
   1415c:	str	r3, [sp, #32]
   14160:	ldr	r3, [pc, #2632]	; 14bb0 <tcgetattr@plt+0x39e4>
   14164:	b	14150 <tcgetattr@plt+0x2f84>
   14168:	ldr	r3, [sp, #32]
   1416c:	ldr	fp, [sp, #24]
   14170:	cmp	sl, #2
   14174:	moveq	fp, #0
   14178:	andne	fp, fp, #1
   1417c:	adds	r5, r3, #0
   14180:	movne	r5, #1
   14184:	ands	r3, r5, fp
   14188:	str	r3, [sp, #64]	; 0x40
   1418c:	beq	1425c <tcgetattr@plt+0x3090>
   14190:	ldr	r2, [sp, #32]
   14194:	ldr	r3, [sp, #28]
   14198:	add	r7, r3, r2
   1419c:	mov	r3, r2
   141a0:	ldr	r2, [sp, #36]	; 0x24
   141a4:	cmp	r3, #1
   141a8:	movls	r3, #0
   141ac:	movhi	r3, #1
   141b0:	cmn	r2, #1
   141b4:	movne	r3, #0
   141b8:	cmp	r3, #0
   141bc:	beq	141cc <tcgetattr@plt+0x3000>
   141c0:	ldr	r0, [sp, #44]	; 0x2c
   141c4:	bl	110a0 <strlen@plt>
   141c8:	str	r0, [sp, #36]	; 0x24
   141cc:	ldr	r3, [sp, #36]	; 0x24
   141d0:	cmp	r3, r7
   141d4:	bcc	14254 <tcgetattr@plt+0x3088>
   141d8:	ldr	r3, [sp, #44]	; 0x2c
   141dc:	ldr	r0, [sp, #28]
   141e0:	ldr	r2, [sp, #32]
   141e4:	ldr	r1, [sp, #40]	; 0x28
   141e8:	add	r0, r3, r0
   141ec:	bl	10f5c <memcmp@plt>
   141f0:	cmp	r0, #0
   141f4:	bne	14254 <tcgetattr@plt+0x3088>
   141f8:	cmp	r6, #0
   141fc:	beq	1425c <tcgetattr@plt+0x3090>
   14200:	str	r6, [sp, #24]
   14204:	ldr	r3, [sp, #24]
   14208:	ldr	r2, [sp, #44]	; 0x2c
   1420c:	cmp	sl, #2
   14210:	movne	r3, #0
   14214:	andeq	r3, r3, #1
   14218:	cmp	r3, #0
   1421c:	ldr	r3, [sp, #160]	; 0xa0
   14220:	movne	sl, #4
   14224:	str	r3, [sp, #16]
   14228:	ldr	r3, [sp, #156]	; 0x9c
   1422c:	str	sl, [sp]
   14230:	str	r3, [sp, #12]
   14234:	mov	r3, #0
   14238:	str	r3, [sp, #8]
   1423c:	ldr	r3, [sp, #148]	; 0x94
   14240:	mov	r1, r9
   14244:	bic	r3, r3, #2
   14248:	str	r3, [sp, #4]
   1424c:	ldr	r3, [sp, #36]	; 0x24
   14250:	b	14000 <tcgetattr@plt+0x2e34>
   14254:	mov	r3, #0
   14258:	str	r3, [sp, #64]	; 0x40
   1425c:	ldr	r2, [sp, #28]
   14260:	ldr	r3, [sp, #44]	; 0x2c
   14264:	add	r3, r3, r2
   14268:	str	r3, [sp, #80]	; 0x50
   1426c:	ldr	r3, [sp, #44]	; 0x2c
   14270:	ldrb	r7, [r3, r2]
   14274:	cmp	r7, #58	; 0x3a
   14278:	bhi	143e0 <tcgetattr@plt+0x3214>
   1427c:	cmp	r7, #43	; 0x2b
   14280:	bcs	14434 <tcgetattr@plt+0x3268>
   14284:	cmp	r7, #32
   14288:	beq	1448c <tcgetattr@plt+0x32c0>
   1428c:	bhi	14338 <tcgetattr@plt+0x316c>
   14290:	cmp	r7, #9
   14294:	beq	14740 <tcgetattr@plt+0x3574>
   14298:	bhi	142fc <tcgetattr@plt+0x3130>
   1429c:	cmp	r7, #7
   142a0:	beq	147ec <tcgetattr@plt+0x3620>
   142a4:	bhi	144a8 <tcgetattr@plt+0x32dc>
   142a8:	cmp	r7, #0
   142ac:	beq	144c4 <tcgetattr@plt+0x32f8>
   142b0:	ldr	r3, [sp, #76]	; 0x4c
   142b4:	cmp	r3, #1
   142b8:	bne	14830 <tcgetattr@plt+0x3664>
   142bc:	bl	1107c <__ctype_b_loc@plt>
   142c0:	sxth	r3, r7
   142c4:	lsl	r3, r3, #1
   142c8:	ldr	r2, [r0]
   142cc:	ldrh	r5, [r2, r3]
   142d0:	ldr	r3, [sp, #76]	; 0x4c
   142d4:	str	r3, [sp, #56]	; 0x38
   142d8:	lsr	r5, r5, #14
   142dc:	and	r5, r5, #1
   142e0:	ldr	r3, [sp, #24]
   142e4:	eor	fp, r5, #1
   142e8:	and	fp, fp, r3
   142ec:	ands	fp, fp, #255	; 0xff
   142f0:	beq	14678 <tcgetattr@plt+0x34ac>
   142f4:	mov	r5, #0
   142f8:	b	148dc <tcgetattr@plt+0x3710>
   142fc:	cmp	r7, #11
   14300:	beq	14748 <tcgetattr@plt+0x357c>
   14304:	bcc	147e4 <tcgetattr@plt+0x3618>
   14308:	cmp	r7, #12
   1430c:	beq	147f4 <tcgetattr@plt+0x3628>
   14310:	cmp	r7, #13
   14314:	moveq	r3, #114	; 0x72
   14318:	bne	142b0 <tcgetattr@plt+0x30e4>
   1431c:	cmp	sl, #2
   14320:	movne	r2, #0
   14324:	andeq	r2, r6, #1
   14328:	cmp	r2, #0
   1432c:	beq	144ac <tcgetattr@plt+0x32e0>
   14330:	mov	sl, #2
   14334:	b	14204 <tcgetattr@plt+0x3038>
   14338:	cmp	r7, #37	; 0x25
   1433c:	beq	14434 <tcgetattr@plt+0x3268>
   14340:	bhi	14354 <tcgetattr@plt+0x3188>
   14344:	cmp	r7, #35	; 0x23
   14348:	beq	14480 <tcgetattr@plt+0x32b4>
   1434c:	mov	r5, #0
   14350:	b	14490 <tcgetattr@plt+0x32c4>
   14354:	cmp	r7, #39	; 0x27
   14358:	bne	1434c <tcgetattr@plt+0x3180>
   1435c:	cmp	sl, #2
   14360:	ldrne	r5, [sp, #52]	; 0x34
   14364:	movne	r3, r5
   14368:	strne	r3, [sp, #68]	; 0x44
   1436c:	bne	14438 <tcgetattr@plt+0x326c>
   14370:	cmp	r6, #0
   14374:	bne	14204 <tcgetattr@plt+0x3038>
   14378:	ldr	r2, [sp, #60]	; 0x3c
   1437c:	adds	r3, r9, #0
   14380:	movne	r3, #1
   14384:	cmp	r2, #0
   14388:	movne	r3, #0
   1438c:	cmp	r3, #0
   14390:	strne	r9, [sp, #60]	; 0x3c
   14394:	movne	r9, #0
   14398:	bne	143a8 <tcgetattr@plt+0x31dc>
   1439c:	cmp	r9, r4
   143a0:	movhi	r3, #39	; 0x27
   143a4:	strbhi	r3, [r8, r4]
   143a8:	add	r3, r4, #1
   143ac:	cmp	r3, r9
   143b0:	movcc	r2, #92	; 0x5c
   143b4:	strbcc	r2, [r8, r3]
   143b8:	add	r3, r4, #2
   143bc:	cmp	r3, r9
   143c0:	ldr	r5, [sp, #52]	; 0x34
   143c4:	movcc	r2, #39	; 0x27
   143c8:	strbcc	r2, [r8, r3]
   143cc:	add	r4, r4, #3
   143d0:	mov	fp, r6
   143d4:	str	r5, [sp, #68]	; 0x44
   143d8:	str	r6, [sp, #48]	; 0x30
   143dc:	b	14678 <tcgetattr@plt+0x34ac>
   143e0:	cmp	r7, #94	; 0x5e
   143e4:	beq	1434c <tcgetattr@plt+0x3180>
   143e8:	bhi	14440 <tcgetattr@plt+0x3274>
   143ec:	cmp	r7, #90	; 0x5a
   143f0:	bhi	14428 <tcgetattr@plt+0x325c>
   143f4:	cmp	r7, #65	; 0x41
   143f8:	bcs	14434 <tcgetattr@plt+0x3268>
   143fc:	cmp	r7, #62	; 0x3e
   14400:	bls	1434c <tcgetattr@plt+0x3180>
   14404:	cmp	r7, #63	; 0x3f
   14408:	bne	142b0 <tcgetattr@plt+0x30e4>
   1440c:	cmp	sl, #2
   14410:	beq	145b4 <tcgetattr@plt+0x33e8>
   14414:	cmp	sl, #5
   14418:	beq	145c4 <tcgetattr@plt+0x33f8>
   1441c:	mov	fp, #0
   14420:	mov	r5, fp
   14424:	b	14678 <tcgetattr@plt+0x34ac>
   14428:	cmp	r7, #92	; 0x5c
   1442c:	beq	14750 <tcgetattr@plt+0x3584>
   14430:	bls	1434c <tcgetattr@plt+0x3180>
   14434:	ldr	r5, [sp, #52]	; 0x34
   14438:	mov	fp, #0
   1443c:	b	14678 <tcgetattr@plt+0x34ac>
   14440:	cmp	r7, #122	; 0x7a
   14444:	bhi	14464 <tcgetattr@plt+0x3298>
   14448:	cmp	r7, #97	; 0x61
   1444c:	bcs	14434 <tcgetattr@plt+0x3268>
   14450:	cmp	r7, #95	; 0x5f
   14454:	beq	14434 <tcgetattr@plt+0x3268>
   14458:	cmp	r7, #96	; 0x60
   1445c:	bne	142b0 <tcgetattr@plt+0x30e4>
   14460:	b	1434c <tcgetattr@plt+0x3180>
   14464:	cmp	r7, #124	; 0x7c
   14468:	beq	1434c <tcgetattr@plt+0x3180>
   1446c:	bcc	147fc <tcgetattr@plt+0x3630>
   14470:	cmp	r7, #125	; 0x7d
   14474:	beq	147fc <tcgetattr@plt+0x3630>
   14478:	cmp	r7, #126	; 0x7e
   1447c:	bne	142b0 <tcgetattr@plt+0x30e4>
   14480:	ldr	r3, [sp, #28]
   14484:	cmp	r3, #0
   14488:	bne	145bc <tcgetattr@plt+0x33f0>
   1448c:	ldr	r5, [sp, #52]	; 0x34
   14490:	cmp	sl, #2
   14494:	movne	fp, #0
   14498:	andeq	fp, r6, #1
   1449c:	cmp	fp, #0
   144a0:	beq	14678 <tcgetattr@plt+0x34ac>
   144a4:	b	14330 <tcgetattr@plt+0x3164>
   144a8:	mov	r3, #98	; 0x62
   144ac:	ldr	r2, [sp, #24]
   144b0:	cmp	r2, #0
   144b4:	beq	145bc <tcgetattr@plt+0x33f0>
   144b8:	mov	r7, r3
   144bc:	mov	r5, #0
   144c0:	b	146d0 <tcgetattr@plt+0x3504>
   144c4:	ldr	r3, [sp, #24]
   144c8:	cmp	r3, #0
   144cc:	beq	14598 <tcgetattr@plt+0x33cc>
   144d0:	cmp	r6, #0
   144d4:	bne	14200 <tcgetattr@plt+0x3034>
   144d8:	ldr	r3, [sp, #48]	; 0x30
   144dc:	eor	r2, r3, #1
   144e0:	cmp	sl, #2
   144e4:	movne	r2, #0
   144e8:	andeq	r2, r2, #1
   144ec:	cmp	r2, #0
   144f0:	moveq	r3, r4
   144f4:	beq	1452c <tcgetattr@plt+0x3360>
   144f8:	cmp	r9, r4
   144fc:	movhi	r3, #39	; 0x27
   14500:	strbhi	r3, [r8, r4]
   14504:	add	r3, r4, #1
   14508:	cmp	r9, r3
   1450c:	movhi	r1, #36	; 0x24
   14510:	strbhi	r1, [r8, r3]
   14514:	add	r3, r4, #2
   14518:	cmp	r9, r3
   1451c:	movhi	r1, #39	; 0x27
   14520:	strbhi	r1, [r8, r3]
   14524:	add	r3, r4, #3
   14528:	str	r2, [sp, #48]	; 0x30
   1452c:	cmp	r9, r3
   14530:	movhi	r2, #92	; 0x5c
   14534:	strbhi	r2, [r8, r3]
   14538:	cmp	fp, #0
   1453c:	add	r4, r3, #1
   14540:	beq	14ad0 <tcgetattr@plt+0x3904>
   14544:	ldr	r2, [sp, #28]
   14548:	ldr	r1, [sp, #36]	; 0x24
   1454c:	add	r2, r2, #1
   14550:	cmp	r1, r2
   14554:	bls	14590 <tcgetattr@plt+0x33c4>
   14558:	ldr	r1, [sp, #44]	; 0x2c
   1455c:	mov	r7, #48	; 0x30
   14560:	ldrb	r2, [r1, r2]
   14564:	sub	r2, r2, #48	; 0x30
   14568:	cmp	r2, #9
   1456c:	movhi	r5, r6
   14570:	bhi	14678 <tcgetattr@plt+0x34ac>
   14574:	cmp	r9, r4
   14578:	add	r2, r3, #2
   1457c:	strbhi	r7, [r8, r4]
   14580:	cmp	r9, r2
   14584:	add	r4, r3, #3
   14588:	movhi	r1, #48	; 0x30
   1458c:	strbhi	r1, [r8, r2]
   14590:	mov	r5, r6
   14594:	b	14ad8 <tcgetattr@plt+0x390c>
   14598:	ldr	r3, [sp, #148]	; 0x94
   1459c:	tst	r3, #1
   145a0:	ldreq	r5, [sp, #24]
   145a4:	beq	14ae4 <tcgetattr@plt+0x3918>
   145a8:	ldr	r3, [sp, #28]
   145ac:	add	r3, r3, #1
   145b0:	b	13f50 <tcgetattr@plt+0x2d84>
   145b4:	cmp	r6, #0
   145b8:	bne	14204 <tcgetattr@plt+0x3038>
   145bc:	mov	r5, #0
   145c0:	b	14438 <tcgetattr@plt+0x326c>
   145c4:	ldr	r3, [sp, #148]	; 0x94
   145c8:	tst	r3, #4
   145cc:	beq	145bc <tcgetattr@plt+0x33f0>
   145d0:	ldr	r3, [sp, #28]
   145d4:	add	r2, r3, #2
   145d8:	ldr	r3, [sp, #36]	; 0x24
   145dc:	cmp	r3, r2
   145e0:	bls	145bc <tcgetattr@plt+0x33f0>
   145e4:	ldr	r3, [sp, #44]	; 0x2c
   145e8:	ldr	r1, [sp, #28]
   145ec:	add	r3, r3, r1
   145f0:	ldrb	r0, [r3, #1]
   145f4:	cmp	r0, #63	; 0x3f
   145f8:	bne	145bc <tcgetattr@plt+0x33f0>
   145fc:	ldr	r3, [sp, #44]	; 0x2c
   14600:	ldrb	r1, [r3, r2]
   14604:	sub	r3, r1, #33	; 0x21
   14608:	uxtb	r3, r3
   1460c:	cmp	r3, #29
   14610:	bhi	14ae0 <tcgetattr@plt+0x3914>
   14614:	mov	ip, #1
   14618:	ldr	r5, [pc, #1428]	; 14bb4 <tcgetattr@plt+0x39e8>
   1461c:	ands	r5, r5, ip, lsl r3
   14620:	beq	14438 <tcgetattr@plt+0x326c>
   14624:	cmp	r6, #0
   14628:	bne	14204 <tcgetattr@plt+0x3038>
   1462c:	add	r3, r4, #1
   14630:	cmp	r9, r4
   14634:	strbhi	r0, [r8, r4]
   14638:	cmp	r9, r3
   1463c:	movhi	r0, #34	; 0x22
   14640:	strbhi	r0, [r8, r3]
   14644:	add	r3, r4, #2
   14648:	cmp	r9, r3
   1464c:	movhi	r0, #34	; 0x22
   14650:	strbhi	r0, [r8, r3]
   14654:	add	r3, r4, #3
   14658:	cmp	r9, r3
   1465c:	add	r4, r4, #4
   14660:	mov	r5, r6
   14664:	mov	fp, r6
   14668:	mov	r7, r1
   1466c:	movhi	r0, #63	; 0x3f
   14670:	strbhi	r0, [r8, r3]
   14674:	str	r2, [sp, #28]
   14678:	ldr	r3, [sp, #24]
   1467c:	eor	r3, r3, #1
   14680:	cmp	sl, #2
   14684:	orreq	r3, r3, #1
   14688:	eor	r3, r3, #1
   1468c:	orr	r3, r6, r3
   14690:	tst	r3, #255	; 0xff
   14694:	beq	146c4 <tcgetattr@plt+0x34f8>
   14698:	ldr	r3, [sp, #152]	; 0x98
   1469c:	cmp	r3, #0
   146a0:	beq	146c4 <tcgetattr@plt+0x34f8>
   146a4:	lsr	r2, r7, #5
   146a8:	ldr	r1, [sp, #152]	; 0x98
   146ac:	uxtb	r2, r2
   146b0:	and	r3, r7, #31
   146b4:	ldr	r2, [r1, r2, lsl #2]
   146b8:	lsr	r3, r2, r3
   146bc:	tst	r3, #1
   146c0:	bne	146d0 <tcgetattr@plt+0x3504>
   146c4:	ldr	r3, [sp, #64]	; 0x40
   146c8:	cmp	r3, #0
   146cc:	beq	14768 <tcgetattr@plt+0x359c>
   146d0:	cmp	r6, #0
   146d4:	bne	14204 <tcgetattr@plt+0x3038>
   146d8:	ldr	r3, [sp, #48]	; 0x30
   146dc:	eor	r3, r3, #1
   146e0:	cmp	sl, #2
   146e4:	movne	r3, #0
   146e8:	andeq	r3, r3, #1
   146ec:	cmp	r3, #0
   146f0:	beq	14728 <tcgetattr@plt+0x355c>
   146f4:	cmp	r9, r4
   146f8:	movhi	r2, #39	; 0x27
   146fc:	strbhi	r2, [r8, r4]
   14700:	add	r2, r4, #1
   14704:	cmp	r9, r2
   14708:	movhi	r1, #36	; 0x24
   1470c:	strbhi	r1, [r8, r2]
   14710:	add	r2, r4, #2
   14714:	cmp	r9, r2
   14718:	add	r4, r4, #3
   1471c:	movhi	r1, #39	; 0x27
   14720:	strbhi	r1, [r8, r2]
   14724:	str	r3, [sp, #48]	; 0x30
   14728:	cmp	r9, r4
   1472c:	movhi	r3, #92	; 0x5c
   14730:	strbhi	r3, [r8, r4]
   14734:	ldr	fp, [sp, #52]	; 0x34
   14738:	add	r4, r4, #1
   1473c:	b	14768 <tcgetattr@plt+0x359c>
   14740:	mov	r3, #116	; 0x74
   14744:	b	1431c <tcgetattr@plt+0x3150>
   14748:	mov	r3, #118	; 0x76
   1474c:	b	144ac <tcgetattr@plt+0x32e0>
   14750:	cmp	sl, #2
   14754:	bne	147c4 <tcgetattr@plt+0x35f8>
   14758:	cmp	r6, #0
   1475c:	bne	14204 <tcgetattr@plt+0x3038>
   14760:	mov	r5, r6
   14764:	mov	fp, r6
   14768:	ldr	r3, [sp, #48]	; 0x30
   1476c:	eor	fp, fp, #1
   14770:	and	fp, fp, r3
   14774:	tst	fp, #255	; 0xff
   14778:	beq	147a4 <tcgetattr@plt+0x35d8>
   1477c:	cmp	r9, r4
   14780:	movhi	r3, #39	; 0x27
   14784:	strbhi	r3, [r8, r4]
   14788:	add	r3, r4, #1
   1478c:	cmp	r9, r3
   14790:	movhi	r2, #39	; 0x27
   14794:	add	r4, r4, #2
   14798:	strbhi	r2, [r8, r3]
   1479c:	mov	r3, #0
   147a0:	str	r3, [sp, #48]	; 0x30
   147a4:	cmp	r9, r4
   147a8:	strbhi	r7, [r8, r4]
   147ac:	ldr	r3, [sp, #72]	; 0x48
   147b0:	cmp	r5, #0
   147b4:	moveq	r3, #0
   147b8:	add	r4, r4, #1
   147bc:	str	r3, [sp, #72]	; 0x48
   147c0:	b	145a8 <tcgetattr@plt+0x33dc>
   147c4:	ldr	r3, [sp, #24]
   147c8:	and	r3, r3, r6
   147cc:	tst	r5, r3
   147d0:	moveq	r3, r7
   147d4:	beq	1431c <tcgetattr@plt+0x3150>
   147d8:	mov	fp, #0
   147dc:	mov	r5, fp
   147e0:	b	14768 <tcgetattr@plt+0x359c>
   147e4:	mov	r3, #110	; 0x6e
   147e8:	b	1431c <tcgetattr@plt+0x3150>
   147ec:	mov	r3, #97	; 0x61
   147f0:	b	144ac <tcgetattr@plt+0x32e0>
   147f4:	mov	r3, #102	; 0x66
   147f8:	b	144ac <tcgetattr@plt+0x32e0>
   147fc:	ldr	r3, [sp, #36]	; 0x24
   14800:	cmn	r3, #1
   14804:	bne	14824 <tcgetattr@plt+0x3658>
   14808:	ldr	r3, [sp, #44]	; 0x2c
   1480c:	ldrb	r3, [r3, #1]
   14810:	adds	r3, r3, #0
   14814:	movne	r3, #1
   14818:	cmp	r3, #0
   1481c:	bne	145bc <tcgetattr@plt+0x33f0>
   14820:	b	14480 <tcgetattr@plt+0x32b4>
   14824:	ldr	r3, [sp, #36]	; 0x24
   14828:	subs	r3, r3, #1
   1482c:	b	14814 <tcgetattr@plt+0x3648>
   14830:	mov	r3, #0
   14834:	str	r3, [sp, #96]	; 0x60
   14838:	str	r3, [sp, #100]	; 0x64
   1483c:	ldr	r3, [sp, #36]	; 0x24
   14840:	cmn	r3, #1
   14844:	bne	14854 <tcgetattr@plt+0x3688>
   14848:	ldr	r0, [sp, #44]	; 0x2c
   1484c:	bl	110a0 <strlen@plt>
   14850:	str	r0, [sp, #36]	; 0x24
   14854:	ldr	r5, [sp, #52]	; 0x34
   14858:	mov	r3, #0
   1485c:	str	r3, [sp, #56]	; 0x38
   14860:	ldr	r3, [sp, #28]
   14864:	ldr	r2, [sp, #56]	; 0x38
   14868:	ldr	r1, [sp, #36]	; 0x24
   1486c:	add	r2, r3, r2
   14870:	ldr	r3, [sp, #44]	; 0x2c
   14874:	add	r0, sp, #92	; 0x5c
   14878:	add	fp, r3, r2
   1487c:	sub	r2, r1, r2
   14880:	add	r3, sp, #96	; 0x60
   14884:	mov	r1, fp
   14888:	bl	168e0 <tcgetattr@plt+0x5714>
   1488c:	subs	r2, r0, #0
   14890:	beq	148d0 <tcgetattr@plt+0x3704>
   14894:	cmn	r2, #1
   14898:	beq	14aa8 <tcgetattr@plt+0x38dc>
   1489c:	cmn	r2, #2
   148a0:	bne	14a18 <tcgetattr@plt+0x384c>
   148a4:	ldr	r2, [sp, #56]	; 0x38
   148a8:	ldr	r3, [sp, #28]
   148ac:	add	r3, r3, r2
   148b0:	ldr	r2, [sp, #36]	; 0x24
   148b4:	cmp	r2, r3
   148b8:	bls	14aa8 <tcgetattr@plt+0x38dc>
   148bc:	ldr	r3, [sp, #80]	; 0x50
   148c0:	ldr	r2, [sp, #56]	; 0x38
   148c4:	ldrb	r5, [r3, r2]
   148c8:	cmp	r5, #0
   148cc:	bne	14a08 <tcgetattr@plt+0x383c>
   148d0:	ldr	r3, [sp, #56]	; 0x38
   148d4:	cmp	r3, #1
   148d8:	bls	142e0 <tcgetattr@plt+0x3114>
   148dc:	ldr	r2, [sp, #56]	; 0x38
   148e0:	ldr	r3, [sp, #28]
   148e4:	mov	fp, #0
   148e8:	add	r3, r3, r2
   148ec:	ldr	r2, [sp, #24]
   148f0:	str	r3, [sp, #52]	; 0x34
   148f4:	eor	r3, r5, #1
   148f8:	and	r3, r3, r2
   148fc:	mov	ip, #92	; 0x5c
   14900:	uxtb	r3, r3
   14904:	mov	r2, #39	; 0x27
   14908:	cmp	r3, #0
   1490c:	beq	14ab0 <tcgetattr@plt+0x38e4>
   14910:	cmp	r6, #0
   14914:	bne	14200 <tcgetattr@plt+0x3034>
   14918:	ldr	r1, [sp, #48]	; 0x30
   1491c:	eor	r1, r1, #1
   14920:	cmp	sl, #2
   14924:	movne	r1, #0
   14928:	andeq	r1, r1, #1
   1492c:	cmp	r1, #0
   14930:	beq	14960 <tcgetattr@plt+0x3794>
   14934:	add	r0, r4, #1
   14938:	cmp	r9, r4
   1493c:	strbhi	r2, [r8, r4]
   14940:	cmp	r9, r0
   14944:	movhi	lr, #36	; 0x24
   14948:	strbhi	lr, [r8, r0]
   1494c:	add	r0, r4, #2
   14950:	add	r4, r4, #3
   14954:	cmp	r9, r0
   14958:	strbhi	r2, [r8, r0]
   1495c:	str	r1, [sp, #48]	; 0x30
   14960:	add	r0, r4, #1
   14964:	cmp	r9, r4
   14968:	strbhi	ip, [r8, r4]
   1496c:	cmp	r9, r0
   14970:	lsrhi	r1, r7, #6
   14974:	addhi	r1, r1, #48	; 0x30
   14978:	strbhi	r1, [r8, r0]
   1497c:	add	r0, r4, #2
   14980:	cmp	r9, r0
   14984:	lsrhi	r1, r7, #3
   14988:	and	r7, r7, #7
   1498c:	andhi	r1, r1, #7
   14990:	add	r4, r4, #3
   14994:	add	r7, r7, #48	; 0x30
   14998:	mov	fp, r3
   1499c:	addhi	r1, r1, #48	; 0x30
   149a0:	strbhi	r1, [r8, r0]
   149a4:	ldr	r1, [sp, #28]
   149a8:	ldr	r0, [sp, #52]	; 0x34
   149ac:	add	r1, r1, #1
   149b0:	cmp	r0, r1
   149b4:	bls	14768 <tcgetattr@plt+0x359c>
   149b8:	ldr	lr, [sp, #48]	; 0x30
   149bc:	eor	r0, fp, #1
   149c0:	and	r0, r0, lr
   149c4:	tst	r0, #255	; 0xff
   149c8:	beq	149ec <tcgetattr@plt+0x3820>
   149cc:	add	r0, r4, #1
   149d0:	cmp	r9, r4
   149d4:	strbhi	r2, [r8, r4]
   149d8:	cmp	r9, r0
   149dc:	add	r4, r4, #2
   149e0:	strbhi	r2, [r8, r0]
   149e4:	mov	r0, #0
   149e8:	str	r0, [sp, #48]	; 0x30
   149ec:	ldr	r0, [sp, #44]	; 0x2c
   149f0:	cmp	r9, r4
   149f4:	strbhi	r7, [r8, r4]
   149f8:	str	r1, [sp, #28]
   149fc:	add	r4, r4, #1
   14a00:	ldrb	r7, [r0, r1]
   14a04:	b	14908 <tcgetattr@plt+0x373c>
   14a08:	ldr	r3, [sp, #56]	; 0x38
   14a0c:	add	r3, r3, #1
   14a10:	str	r3, [sp, #56]	; 0x38
   14a14:	b	148a4 <tcgetattr@plt+0x36d8>
   14a18:	cmp	sl, #2
   14a1c:	movne	r3, #0
   14a20:	andeq	r3, r6, #1
   14a24:	cmp	r3, #0
   14a28:	movne	r1, #1
   14a2c:	bne	14a88 <tcgetattr@plt+0x38bc>
   14a30:	ldr	r0, [sp, #92]	; 0x5c
   14a34:	str	r2, [sp, #84]	; 0x54
   14a38:	bl	10fb0 <iswprint@plt>
   14a3c:	ldr	r3, [sp, #56]	; 0x38
   14a40:	ldr	r2, [sp, #84]	; 0x54
   14a44:	add	r3, r3, r2
   14a48:	str	r3, [sp, #56]	; 0x38
   14a4c:	cmp	r0, #0
   14a50:	add	r0, sp, #96	; 0x60
   14a54:	moveq	r5, #0
   14a58:	bl	10f50 <mbsinit@plt>
   14a5c:	cmp	r0, #0
   14a60:	beq	14860 <tcgetattr@plt+0x3694>
   14a64:	b	148d0 <tcgetattr@plt+0x3704>
   14a68:	ldrb	r3, [fp, r1]
   14a6c:	cmp	r3, #94	; 0x5e
   14a70:	beq	14330 <tcgetattr@plt+0x3164>
   14a74:	bhi	14a94 <tcgetattr@plt+0x38c8>
   14a78:	sub	r3, r3, #91	; 0x5b
   14a7c:	cmp	r3, #1
   14a80:	bls	14330 <tcgetattr@plt+0x3164>
   14a84:	add	r1, r1, #1
   14a88:	cmp	r1, r2
   14a8c:	bne	14a68 <tcgetattr@plt+0x389c>
   14a90:	b	14a30 <tcgetattr@plt+0x3864>
   14a94:	cmp	r3, #96	; 0x60
   14a98:	beq	14330 <tcgetattr@plt+0x3164>
   14a9c:	cmp	r3, #124	; 0x7c
   14aa0:	bne	14a84 <tcgetattr@plt+0x38b8>
   14aa4:	b	14330 <tcgetattr@plt+0x3164>
   14aa8:	mov	r5, #0
   14aac:	b	148d0 <tcgetattr@plt+0x3704>
   14ab0:	ldr	r1, [sp, #64]	; 0x40
   14ab4:	cmp	r1, #0
   14ab8:	beq	149a4 <tcgetattr@plt+0x37d8>
   14abc:	cmp	r9, r4
   14ac0:	strbhi	ip, [r8, r4]
   14ac4:	str	r3, [sp, #64]	; 0x40
   14ac8:	add	r4, r4, #1
   14acc:	b	149a4 <tcgetattr@plt+0x37d8>
   14ad0:	mov	r5, fp
   14ad4:	ldr	fp, [sp, #24]
   14ad8:	mov	r7, #48	; 0x30
   14adc:	b	14678 <tcgetattr@plt+0x34ac>
   14ae0:	mov	r5, #0
   14ae4:	mov	fp, r5
   14ae8:	b	14678 <tcgetattr@plt+0x34ac>
   14aec:	ldr	r3, [sp, #36]	; 0x24
   14af0:	ldr	r2, [sp, #28]
   14af4:	subs	r3, r3, r2
   14af8:	movne	r3, #1
   14afc:	b	13f74 <tcgetattr@plt+0x2da8>
   14b00:	ldr	r3, [sp, #60]	; 0x3c
   14b04:	clz	r7, r9
   14b08:	cmp	r3, #0
   14b0c:	lsr	r7, r7, #5
   14b10:	moveq	r7, #0
   14b14:	cmp	r7, #0
   14b18:	mov	r5, r3
   14b1c:	bne	13ed4 <tcgetattr@plt+0x2d08>
   14b20:	ldr	r3, [sp, #68]	; 0x44
   14b24:	ldr	r2, [sp, #40]	; 0x28
   14b28:	cmp	r2, #0
   14b2c:	moveq	r3, #0
   14b30:	andne	r3, r3, #1
   14b34:	cmp	r3, #0
   14b38:	movne	r3, r2
   14b3c:	subne	r2, r3, #1
   14b40:	bne	14b70 <tcgetattr@plt+0x39a4>
   14b44:	cmp	r9, r4
   14b48:	movhi	r3, #0
   14b4c:	strbhi	r3, [r8, r4]
   14b50:	mov	r0, r4
   14b54:	add	sp, sp, #108	; 0x6c
   14b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b5c:	mov	r3, r2
   14b60:	b	14b24 <tcgetattr@plt+0x3958>
   14b64:	cmp	r9, r4
   14b68:	strbhi	r3, [r8, r4]
   14b6c:	add	r4, r4, #1
   14b70:	ldrb	r3, [r2, #1]!
   14b74:	cmp	r3, #0
   14b78:	bne	14b64 <tcgetattr@plt+0x3998>
   14b7c:	b	14b44 <tcgetattr@plt+0x3978>
   14b80:	ldr	r3, [pc, #32]	; 14ba8 <tcgetattr@plt+0x39dc>
   14b84:	mov	r6, #1
   14b88:	str	r6, [sp, #24]
   14b8c:	str	r6, [sp, #32]
   14b90:	str	r3, [sp, #40]	; 0x28
   14b94:	mov	r4, #0
   14b98:	mov	sl, #5
   14b9c:	b	13f44 <tcgetattr@plt+0x2d78>
   14ba0:	mov	r6, #1
   14ba4:	b	14138 <tcgetattr@plt+0x2f6c>
   14ba8:			; <UNDEFINED> instruction: 0x0001a1b3
   14bac:			; <UNDEFINED> instruction: 0x0001a1b7
   14bb0:			; <UNDEFINED> instruction: 0x0001a1b5
   14bb4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   14bb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bbc:	sub	sp, sp, #52	; 0x34
   14bc0:	mov	r6, r0
   14bc4:	mov	r5, r3
   14bc8:	mov	r8, r1
   14bcc:	mov	r9, r2
   14bd0:	bl	110d0 <__errno_location@plt>
   14bd4:	ldr	r7, [pc, #380]	; 14d58 <tcgetattr@plt+0x3b8c>
   14bd8:	cmn	r6, #-2147483647	; 0x80000001
   14bdc:	ldr	r4, [r7]
   14be0:	ldr	r3, [r0]
   14be4:	str	r0, [sp, #24]
   14be8:	str	r3, [sp, #32]
   14bec:	movne	r3, #0
   14bf0:	moveq	r3, #1
   14bf4:	orrs	r3, r3, r6, lsr #31
   14bf8:	beq	14c00 <tcgetattr@plt+0x3a34>
   14bfc:	bl	1119c <abort@plt>
   14c00:	ldr	r2, [r7, #4]
   14c04:	cmp	r6, r2
   14c08:	blt	14c78 <tcgetattr@plt+0x3aac>
   14c0c:	add	r1, sp, #48	; 0x30
   14c10:	add	sl, r7, #8
   14c14:	str	r2, [r1, #-4]!
   14c18:	cmp	r4, sl
   14c1c:	mov	r3, #8
   14c20:	sub	r2, r6, r2
   14c24:	movne	r0, r4
   14c28:	str	r3, [sp]
   14c2c:	add	r2, r2, #1
   14c30:	mvn	r3, #-2147483648	; 0x80000000
   14c34:	moveq	r0, #0
   14c38:	bl	1594c <tcgetattr@plt+0x4780>
   14c3c:	cmp	r4, sl
   14c40:	ldr	r2, [sp, #44]	; 0x2c
   14c44:	mov	fp, r0
   14c48:	str	r0, [r7]
   14c4c:	ldmeq	r4, {r0, r1}
   14c50:	mov	r4, fp
   14c54:	stmeq	fp, {r0, r1}
   14c58:	ldr	r0, [r7, #4]
   14c5c:	mov	r1, #0
   14c60:	sub	r2, r2, r0
   14c64:	add	r0, fp, r0, lsl #3
   14c68:	lsl	r2, r2, #3
   14c6c:	bl	110f4 <memset@plt>
   14c70:	ldr	r3, [sp, #44]	; 0x2c
   14c74:	str	r3, [r7, #4]
   14c78:	ldr	r3, [r5, #4]
   14c7c:	add	sl, r4, r6, lsl #3
   14c80:	orr	r3, r3, #1
   14c84:	str	r3, [sp, #28]
   14c88:	add	r3, r5, #8
   14c8c:	str	r3, [sp, #36]	; 0x24
   14c90:	ldr	r3, [r5, #44]	; 0x2c
   14c94:	ldr	fp, [r4, r6, lsl #3]
   14c98:	ldr	r7, [sl, #4]
   14c9c:	str	r3, [sp, #16]
   14ca0:	ldr	r3, [r5, #40]	; 0x28
   14ca4:	mov	r2, r8
   14ca8:	str	r3, [sp, #12]
   14cac:	add	r3, r5, #8
   14cb0:	str	r3, [sp, #8]
   14cb4:	ldr	r3, [sp, #28]
   14cb8:	mov	r1, fp
   14cbc:	str	r3, [sp, #4]
   14cc0:	ldr	r3, [r5]
   14cc4:	mov	r0, r7
   14cc8:	str	r3, [sp]
   14ccc:	mov	r3, r9
   14cd0:	bl	13e84 <tcgetattr@plt+0x2cb8>
   14cd4:	cmp	fp, r0
   14cd8:	bhi	14d40 <tcgetattr@plt+0x3b74>
   14cdc:	ldr	r3, [pc, #120]	; 14d5c <tcgetattr@plt+0x3b90>
   14ce0:	add	fp, r0, #1
   14ce4:	cmp	r7, r3
   14ce8:	str	fp, [r4, r6, lsl #3]
   14cec:	beq	14cf8 <tcgetattr@plt+0x3b2c>
   14cf0:	mov	r0, r7
   14cf4:	bl	13c40 <tcgetattr@plt+0x2a74>
   14cf8:	mov	r0, fp
   14cfc:	bl	15804 <tcgetattr@plt+0x4638>
   14d00:	ldr	r3, [r5, #44]	; 0x2c
   14d04:	mov	r2, r8
   14d08:	mov	r1, fp
   14d0c:	str	r0, [sl, #4]
   14d10:	str	r3, [sp, #16]
   14d14:	ldr	r3, [r5, #40]	; 0x28
   14d18:	mov	r7, r0
   14d1c:	str	r3, [sp, #12]
   14d20:	add	r3, r5, #8
   14d24:	str	r3, [sp, #8]
   14d28:	ldr	r3, [sp, #28]
   14d2c:	str	r3, [sp, #4]
   14d30:	ldr	r3, [r5]
   14d34:	str	r3, [sp]
   14d38:	mov	r3, r9
   14d3c:	bl	13e84 <tcgetattr@plt+0x2cb8>
   14d40:	ldr	r3, [sp, #24]
   14d44:	ldr	r2, [sp, #32]
   14d48:	mov	r0, r7
   14d4c:	str	r2, [r3]
   14d50:	add	sp, sp, #52	; 0x34
   14d54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d58:	andeq	fp, r2, r0, lsr #2
   14d5c:	andeq	fp, r2, r0, ror #4
   14d60:	push	{r4, r5, r6, lr}
   14d64:	mov	r5, r0
   14d68:	bl	110d0 <__errno_location@plt>
   14d6c:	cmp	r5, #0
   14d70:	mov	r1, #48	; 0x30
   14d74:	ldr	r6, [r0]
   14d78:	mov	r4, r0
   14d7c:	ldr	r0, [pc, #12]	; 14d90 <tcgetattr@plt+0x3bc4>
   14d80:	movne	r0, r5
   14d84:	bl	15be0 <tcgetattr@plt+0x4a14>
   14d88:	str	r6, [r4]
   14d8c:	pop	{r4, r5, r6, pc}
   14d90:	andeq	fp, r2, r0, ror #6
   14d94:	ldr	r3, [pc, #12]	; 14da8 <tcgetattr@plt+0x3bdc>
   14d98:	cmp	r0, #0
   14d9c:	moveq	r0, r3
   14da0:	ldr	r0, [r0]
   14da4:	bx	lr
   14da8:	andeq	fp, r2, r0, ror #6
   14dac:	ldr	r3, [pc, #12]	; 14dc0 <tcgetattr@plt+0x3bf4>
   14db0:	cmp	r0, #0
   14db4:	moveq	r0, r3
   14db8:	str	r1, [r0]
   14dbc:	bx	lr
   14dc0:	andeq	fp, r2, r0, ror #6
   14dc4:	ldr	r3, [pc, #52]	; 14e00 <tcgetattr@plt+0x3c34>
   14dc8:	cmp	r0, #0
   14dcc:	moveq	r0, r3
   14dd0:	add	r3, r0, #8
   14dd4:	push	{lr}		; (str lr, [sp, #-4]!)
   14dd8:	lsr	lr, r1, #5
   14ddc:	and	r1, r1, #31
   14de0:	ldr	ip, [r3, lr, lsl #2]
   14de4:	lsr	r0, ip, r1
   14de8:	eor	r2, r2, r0
   14dec:	and	r2, r2, #1
   14df0:	and	r0, r0, #1
   14df4:	eor	r1, ip, r2, lsl r1
   14df8:	str	r1, [r3, lr, lsl #2]
   14dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   14e00:	andeq	fp, r2, r0, ror #6
   14e04:	ldr	r3, [pc, #16]	; 14e1c <tcgetattr@plt+0x3c50>
   14e08:	cmp	r0, #0
   14e0c:	movne	r3, r0
   14e10:	ldr	r0, [r3, #4]
   14e14:	str	r1, [r3, #4]
   14e18:	bx	lr
   14e1c:	andeq	fp, r2, r0, ror #6
   14e20:	ldr	r3, [pc, #44]	; 14e54 <tcgetattr@plt+0x3c88>
   14e24:	cmp	r0, #0
   14e28:	moveq	r0, r3
   14e2c:	mov	r3, #10
   14e30:	cmp	r2, #0
   14e34:	cmpne	r1, #0
   14e38:	str	r3, [r0]
   14e3c:	bne	14e48 <tcgetattr@plt+0x3c7c>
   14e40:	push	{r4, lr}
   14e44:	bl	1119c <abort@plt>
   14e48:	str	r1, [r0, #40]	; 0x28
   14e4c:	str	r2, [r0, #44]	; 0x2c
   14e50:	bx	lr
   14e54:	andeq	fp, r2, r0, ror #6
   14e58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14e5c:	sub	sp, sp, #24
   14e60:	mov	sl, r3
   14e64:	ldr	r4, [sp, #56]	; 0x38
   14e68:	ldr	r3, [pc, #100]	; 14ed4 <tcgetattr@plt+0x3d08>
   14e6c:	cmp	r4, #0
   14e70:	moveq	r4, r3
   14e74:	mov	r7, r0
   14e78:	mov	r8, r1
   14e7c:	mov	r9, r2
   14e80:	bl	110d0 <__errno_location@plt>
   14e84:	ldr	r3, [r4, #44]	; 0x2c
   14e88:	mov	r2, r9
   14e8c:	mov	r1, r8
   14e90:	ldr	r6, [r0]
   14e94:	str	r3, [sp, #16]
   14e98:	ldr	r3, [r4, #40]	; 0x28
   14e9c:	mov	r5, r0
   14ea0:	str	r3, [sp, #12]
   14ea4:	add	r3, r4, #8
   14ea8:	str	r3, [sp, #8]
   14eac:	ldr	r3, [r4, #4]
   14eb0:	mov	r0, r7
   14eb4:	str	r3, [sp, #4]
   14eb8:	ldr	r3, [r4]
   14ebc:	str	r3, [sp]
   14ec0:	mov	r3, sl
   14ec4:	bl	13e84 <tcgetattr@plt+0x2cb8>
   14ec8:	str	r6, [r5]
   14ecc:	add	sp, sp, #24
   14ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ed4:	andeq	fp, r2, r0, ror #6
   14ed8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14edc:	cmp	r3, #0
   14ee0:	sub	sp, sp, #44	; 0x2c
   14ee4:	ldr	r4, [pc, #188]	; 14fa8 <tcgetattr@plt+0x3ddc>
   14ee8:	mov	r6, r2
   14eec:	movne	r4, r3
   14ef0:	mov	sl, r1
   14ef4:	mov	r9, r0
   14ef8:	bl	110d0 <__errno_location@plt>
   14efc:	ldr	r5, [r4, #4]
   14f00:	add	fp, r4, #8
   14f04:	cmp	r6, #0
   14f08:	orreq	r5, r5, #1
   14f0c:	mov	r1, #0
   14f10:	mov	r2, r9
   14f14:	ldr	r3, [r0]
   14f18:	mov	r8, r0
   14f1c:	str	r3, [sp, #28]
   14f20:	ldr	r3, [r4, #44]	; 0x2c
   14f24:	mov	r0, r1
   14f28:	str	r3, [sp, #16]
   14f2c:	ldr	r3, [r4, #40]	; 0x28
   14f30:	stmib	sp, {r5, fp}
   14f34:	str	r3, [sp, #12]
   14f38:	ldr	r3, [r4]
   14f3c:	str	r3, [sp]
   14f40:	mov	r3, sl
   14f44:	bl	13e84 <tcgetattr@plt+0x2cb8>
   14f48:	add	r1, r0, #1
   14f4c:	mov	r7, r0
   14f50:	mov	r0, r1
   14f54:	str	r1, [sp, #36]	; 0x24
   14f58:	bl	15804 <tcgetattr@plt+0x4638>
   14f5c:	ldr	r3, [r4, #44]	; 0x2c
   14f60:	mov	r2, r9
   14f64:	str	r3, [sp, #16]
   14f68:	ldr	r3, [r4, #40]	; 0x28
   14f6c:	stmib	sp, {r5, fp}
   14f70:	str	r3, [sp, #12]
   14f74:	ldr	r3, [r4]
   14f78:	ldr	r1, [sp, #36]	; 0x24
   14f7c:	str	r3, [sp]
   14f80:	mov	r3, sl
   14f84:	str	r0, [sp, #32]
   14f88:	bl	13e84 <tcgetattr@plt+0x2cb8>
   14f8c:	ldr	r3, [sp, #28]
   14f90:	cmp	r6, #0
   14f94:	str	r3, [r8]
   14f98:	ldr	r0, [sp, #32]
   14f9c:	strne	r7, [r6]
   14fa0:	add	sp, sp, #44	; 0x2c
   14fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fa8:	andeq	fp, r2, r0, ror #6
   14fac:	mov	r3, r2
   14fb0:	mov	r2, #0
   14fb4:	b	14ed8 <tcgetattr@plt+0x3d0c>
   14fb8:	push	{r4, r5, r6, r7, r8, lr}
   14fbc:	mov	r6, #1
   14fc0:	ldr	r4, [pc, #104]	; 15030 <tcgetattr@plt+0x3e64>
   14fc4:	ldr	r5, [r4]
   14fc8:	add	r7, r5, #12
   14fcc:	ldr	r3, [r4, #4]
   14fd0:	add	r7, r7, #8
   14fd4:	cmp	r6, r3
   14fd8:	blt	15020 <tcgetattr@plt+0x3e54>
   14fdc:	ldr	r0, [r5, #4]
   14fe0:	ldr	r6, [pc, #76]	; 15034 <tcgetattr@plt+0x3e68>
   14fe4:	cmp	r0, r6
   14fe8:	beq	14ffc <tcgetattr@plt+0x3e30>
   14fec:	bl	13c40 <tcgetattr@plt+0x2a74>
   14ff0:	mov	r3, #256	; 0x100
   14ff4:	str	r3, [r4, #8]
   14ff8:	str	r6, [r4, #12]
   14ffc:	ldr	r6, [pc, #52]	; 15038 <tcgetattr@plt+0x3e6c>
   15000:	cmp	r5, r6
   15004:	beq	15014 <tcgetattr@plt+0x3e48>
   15008:	mov	r0, r5
   1500c:	bl	13c40 <tcgetattr@plt+0x2a74>
   15010:	str	r6, [r4]
   15014:	mov	r3, #1
   15018:	str	r3, [r4, #4]
   1501c:	pop	{r4, r5, r6, r7, r8, pc}
   15020:	ldr	r0, [r7, #-8]
   15024:	bl	13c40 <tcgetattr@plt+0x2a74>
   15028:	add	r6, r6, #1
   1502c:	b	14fcc <tcgetattr@plt+0x3e00>
   15030:	andeq	fp, r2, r0, lsr #2
   15034:	andeq	fp, r2, r0, ror #4
   15038:	andeq	fp, r2, r8, lsr #2
   1503c:	ldr	r3, [pc, #4]	; 15048 <tcgetattr@plt+0x3e7c>
   15040:	mvn	r2, #0
   15044:	b	14bb8 <tcgetattr@plt+0x39ec>
   15048:	andeq	fp, r2, r0, ror #6
   1504c:	ldr	r3, [pc]	; 15054 <tcgetattr@plt+0x3e88>
   15050:	b	14bb8 <tcgetattr@plt+0x39ec>
   15054:	andeq	fp, r2, r0, ror #6
   15058:	mov	r1, r0
   1505c:	mov	r0, #0
   15060:	b	1503c <tcgetattr@plt+0x3e70>
   15064:	mov	r2, r1
   15068:	mov	r1, r0
   1506c:	mov	r0, #0
   15070:	b	1504c <tcgetattr@plt+0x3e80>
   15074:	push	{r4, r5, lr}
   15078:	sub	sp, sp, #52	; 0x34
   1507c:	mov	r5, r2
   15080:	mov	r4, r0
   15084:	mov	r0, sp
   15088:	bl	13d40 <tcgetattr@plt+0x2b74>
   1508c:	mov	r3, sp
   15090:	mvn	r2, #0
   15094:	mov	r1, r5
   15098:	mov	r0, r4
   1509c:	bl	14bb8 <tcgetattr@plt+0x39ec>
   150a0:	add	sp, sp, #52	; 0x34
   150a4:	pop	{r4, r5, pc}
   150a8:	push	{r4, r5, r6, lr}
   150ac:	sub	sp, sp, #48	; 0x30
   150b0:	mov	r5, r2
   150b4:	mov	r6, r3
   150b8:	mov	r4, r0
   150bc:	mov	r0, sp
   150c0:	bl	13d40 <tcgetattr@plt+0x2b74>
   150c4:	mov	r3, sp
   150c8:	mov	r2, r6
   150cc:	mov	r1, r5
   150d0:	mov	r0, r4
   150d4:	bl	14bb8 <tcgetattr@plt+0x39ec>
   150d8:	add	sp, sp, #48	; 0x30
   150dc:	pop	{r4, r5, r6, pc}
   150e0:	mov	r2, r1
   150e4:	mov	r1, r0
   150e8:	mov	r0, #0
   150ec:	b	15074 <tcgetattr@plt+0x3ea8>
   150f0:	mov	r3, r2
   150f4:	mov	r2, r1
   150f8:	mov	r1, r0
   150fc:	mov	r0, #0
   15100:	b	150a8 <tcgetattr@plt+0x3edc>
   15104:	push	{r4, r5, r6, lr}
   15108:	mov	r4, r0
   1510c:	ldr	lr, [pc, #80]	; 15164 <tcgetattr@plt+0x3f98>
   15110:	mov	r5, r1
   15114:	mov	r6, r2
   15118:	ldm	lr!, {r0, r1, r2, r3}
   1511c:	sub	sp, sp, #48	; 0x30
   15120:	mov	ip, sp
   15124:	stmia	ip!, {r0, r1, r2, r3}
   15128:	ldm	lr!, {r0, r1, r2, r3}
   1512c:	stmia	ip!, {r0, r1, r2, r3}
   15130:	ldm	lr, {r0, r1, r2, r3}
   15134:	stm	ip, {r0, r1, r2, r3}
   15138:	mov	r1, r6
   1513c:	mov	r2, #1
   15140:	mov	r0, sp
   15144:	bl	14dc4 <tcgetattr@plt+0x3bf8>
   15148:	mov	r3, sp
   1514c:	mov	r2, r5
   15150:	mov	r1, r4
   15154:	mov	r0, #0
   15158:	bl	14bb8 <tcgetattr@plt+0x39ec>
   1515c:	add	sp, sp, #48	; 0x30
   15160:	pop	{r4, r5, r6, pc}
   15164:	andeq	fp, r2, r0, ror #6
   15168:	mov	r2, r1
   1516c:	mvn	r1, #0
   15170:	b	15104 <tcgetattr@plt+0x3f38>
   15174:	mov	r1, #58	; 0x3a
   15178:	b	15168 <tcgetattr@plt+0x3f9c>
   1517c:	mov	r2, #58	; 0x3a
   15180:	b	15104 <tcgetattr@plt+0x3f38>
   15184:	push	{r4, r5, lr}
   15188:	sub	sp, sp, #100	; 0x64
   1518c:	mov	r4, r0
   15190:	mov	r0, sp
   15194:	mov	r5, r2
   15198:	bl	13d40 <tcgetattr@plt+0x2b74>
   1519c:	mov	ip, sp
   151a0:	add	lr, sp, #48	; 0x30
   151a4:	ldm	ip!, {r0, r1, r2, r3}
   151a8:	stmia	lr!, {r0, r1, r2, r3}
   151ac:	ldm	ip!, {r0, r1, r2, r3}
   151b0:	stmia	lr!, {r0, r1, r2, r3}
   151b4:	ldm	ip, {r0, r1, r2, r3}
   151b8:	stm	lr, {r0, r1, r2, r3}
   151bc:	mov	r2, #1
   151c0:	mov	r1, #58	; 0x3a
   151c4:	add	r0, sp, #48	; 0x30
   151c8:	bl	14dc4 <tcgetattr@plt+0x3bf8>
   151cc:	add	r3, sp, #48	; 0x30
   151d0:	mvn	r2, #0
   151d4:	mov	r1, r5
   151d8:	mov	r0, r4
   151dc:	bl	14bb8 <tcgetattr@plt+0x39ec>
   151e0:	add	sp, sp, #100	; 0x64
   151e4:	pop	{r4, r5, pc}
   151e8:	push	{r4, r5, r6, r7, lr}
   151ec:	mov	r4, r0
   151f0:	ldr	lr, [pc, #84]	; 1524c <tcgetattr@plt+0x4080>
   151f4:	mov	r6, r1
   151f8:	mov	r7, r2
   151fc:	mov	r5, r3
   15200:	ldm	lr!, {r0, r1, r2, r3}
   15204:	sub	sp, sp, #52	; 0x34
   15208:	mov	ip, sp
   1520c:	stmia	ip!, {r0, r1, r2, r3}
   15210:	ldm	lr!, {r0, r1, r2, r3}
   15214:	stmia	ip!, {r0, r1, r2, r3}
   15218:	ldm	lr, {r0, r1, r2, r3}
   1521c:	stm	ip, {r0, r1, r2, r3}
   15220:	mov	r2, r7
   15224:	mov	r1, r6
   15228:	mov	r0, sp
   1522c:	bl	14e20 <tcgetattr@plt+0x3c54>
   15230:	mov	r3, sp
   15234:	ldr	r2, [sp, #72]	; 0x48
   15238:	mov	r1, r5
   1523c:	mov	r0, r4
   15240:	bl	14bb8 <tcgetattr@plt+0x39ec>
   15244:	add	sp, sp, #52	; 0x34
   15248:	pop	{r4, r5, r6, r7, pc}
   1524c:	andeq	fp, r2, r0, ror #6
   15250:	mvn	ip, #0
   15254:	push	{r0, r1, r2, lr}
   15258:	str	ip, [sp]
   1525c:	bl	151e8 <tcgetattr@plt+0x401c>
   15260:	add	sp, sp, #12
   15264:	pop	{pc}		; (ldr pc, [sp], #4)
   15268:	mov	r3, r2
   1526c:	mov	r2, r1
   15270:	mov	r1, r0
   15274:	mov	r0, #0
   15278:	b	15250 <tcgetattr@plt+0x4084>
   1527c:	push	{r0, r1, r2, lr}
   15280:	str	r3, [sp]
   15284:	mov	r3, r2
   15288:	mov	r2, r1
   1528c:	mov	r1, r0
   15290:	mov	r0, #0
   15294:	bl	151e8 <tcgetattr@plt+0x401c>
   15298:	add	sp, sp, #12
   1529c:	pop	{pc}		; (ldr pc, [sp], #4)
   152a0:	ldr	r3, [pc]	; 152a8 <tcgetattr@plt+0x40dc>
   152a4:	b	14bb8 <tcgetattr@plt+0x39ec>
   152a8:	andeq	fp, r2, r0, lsr r1
   152ac:	mov	r2, r1
   152b0:	mov	r1, r0
   152b4:	mov	r0, #0
   152b8:	b	152a0 <tcgetattr@plt+0x40d4>
   152bc:	mvn	r2, #0
   152c0:	b	152a0 <tcgetattr@plt+0x40d4>
   152c4:	mov	r1, r0
   152c8:	mov	r0, #0
   152cc:	b	152bc <tcgetattr@plt+0x40f0>
   152d0:	push	{r4, r5, r6, lr}
   152d4:	sub	sp, sp, #32
   152d8:	cmp	r1, #0
   152dc:	mov	r5, r0
   152e0:	ldr	r4, [sp, #48]	; 0x30
   152e4:	ldr	r6, [sp, #52]	; 0x34
   152e8:	beq	1539c <tcgetattr@plt+0x41d0>
   152ec:	stm	sp, {r2, r3}
   152f0:	mov	r3, r1
   152f4:	ldr	r2, [pc, #860]	; 15658 <tcgetattr@plt+0x448c>
   152f8:	mov	r1, #1
   152fc:	bl	11124 <__fprintf_chk@plt>
   15300:	mov	r2, #5
   15304:	ldr	r1, [pc, #848]	; 1565c <tcgetattr@plt+0x4490>
   15308:	mov	r0, #0
   1530c:	bl	10f74 <dcgettext@plt>
   15310:	ldr	r3, [pc, #840]	; 15660 <tcgetattr@plt+0x4494>
   15314:	ldr	r2, [pc, #840]	; 15664 <tcgetattr@plt+0x4498>
   15318:	str	r3, [sp]
   1531c:	mov	r1, #1
   15320:	mov	r3, r0
   15324:	mov	r0, r5
   15328:	bl	11124 <__fprintf_chk@plt>
   1532c:	mov	r1, r5
   15330:	mov	r0, #10
   15334:	bl	10f68 <fputc_unlocked@plt>
   15338:	mov	r2, #5
   1533c:	ldr	r1, [pc, #804]	; 15668 <tcgetattr@plt+0x449c>
   15340:	mov	r0, #0
   15344:	bl	10f74 <dcgettext@plt>
   15348:	mov	r1, #1
   1534c:	ldr	r3, [pc, #792]	; 1566c <tcgetattr@plt+0x44a0>
   15350:	mov	r2, r0
   15354:	mov	r0, r5
   15358:	bl	11124 <__fprintf_chk@plt>
   1535c:	mov	r1, r5
   15360:	mov	r0, #10
   15364:	bl	10f68 <fputc_unlocked@plt>
   15368:	cmp	r6, #9
   1536c:	ldrls	pc, [pc, r6, lsl #2]
   15370:	b	1564c <tcgetattr@plt+0x4480>
   15374:	andeq	r5, r1, ip, lsl #9
   15378:			; <UNDEFINED> instruction: 0x000153b4
   1537c:	andeq	r5, r1, r0, ror #7
   15380:	andeq	r5, r1, r4, lsl r4
   15384:	andeq	r5, r1, r0, asr r4
   15388:	muleq	r1, r4, r4
   1538c:	ldrdeq	r5, [r1], -ip
   15390:	andeq	r5, r1, ip, lsr #10
   15394:	andeq	r5, r1, r4, lsl #11
   15398:	andeq	r5, r1, r4, ror #11
   1539c:	str	r3, [sp]
   153a0:	mov	r1, #1
   153a4:	mov	r3, r2
   153a8:	ldr	r2, [pc, #704]	; 15670 <tcgetattr@plt+0x44a4>
   153ac:	bl	11124 <__fprintf_chk@plt>
   153b0:	b	15300 <tcgetattr@plt+0x4134>
   153b4:	mov	r2, #5
   153b8:	ldr	r1, [pc, #692]	; 15674 <tcgetattr@plt+0x44a8>
   153bc:	mov	r0, #0
   153c0:	bl	10f74 <dcgettext@plt>
   153c4:	ldr	r3, [r4]
   153c8:	mov	r1, #1
   153cc:	mov	r2, r0
   153d0:	mov	r0, r5
   153d4:	add	sp, sp, #32
   153d8:	pop	{r4, r5, r6, lr}
   153dc:	b	11124 <__fprintf_chk@plt>
   153e0:	mov	r2, #5
   153e4:	ldr	r1, [pc, #652]	; 15678 <tcgetattr@plt+0x44ac>
   153e8:	mov	r0, #0
   153ec:	bl	10f74 <dcgettext@plt>
   153f0:	ldr	r3, [r4, #4]
   153f4:	mov	r1, #1
   153f8:	str	r3, [sp, #48]	; 0x30
   153fc:	ldr	r3, [r4]
   15400:	mov	r2, r0
   15404:	mov	r0, r5
   15408:	add	sp, sp, #32
   1540c:	pop	{r4, r5, r6, lr}
   15410:	b	11124 <__fprintf_chk@plt>
   15414:	mov	r2, #5
   15418:	ldr	r1, [pc, #604]	; 1567c <tcgetattr@plt+0x44b0>
   1541c:	mov	r0, #0
   15420:	bl	10f74 <dcgettext@plt>
   15424:	ldr	r3, [r4, #8]
   15428:	mov	r1, #1
   1542c:	str	r3, [sp, #52]	; 0x34
   15430:	ldr	r3, [r4, #4]
   15434:	str	r3, [sp, #48]	; 0x30
   15438:	ldr	r3, [r4]
   1543c:	mov	r2, r0
   15440:	mov	r0, r5
   15444:	add	sp, sp, #32
   15448:	pop	{r4, r5, r6, lr}
   1544c:	b	11124 <__fprintf_chk@plt>
   15450:	mov	r2, #5
   15454:	ldr	r1, [pc, #548]	; 15680 <tcgetattr@plt+0x44b4>
   15458:	mov	r0, #0
   1545c:	bl	10f74 <dcgettext@plt>
   15460:	ldr	r3, [r4, #12]
   15464:	mov	r1, #1
   15468:	str	r3, [sp, #8]
   1546c:	ldr	r3, [r4, #8]
   15470:	str	r3, [sp, #4]
   15474:	ldr	r3, [r4, #4]
   15478:	str	r3, [sp]
   1547c:	ldr	r3, [r4]
   15480:	mov	r2, r0
   15484:	mov	r0, r5
   15488:	bl	11124 <__fprintf_chk@plt>
   1548c:	add	sp, sp, #32
   15490:	pop	{r4, r5, r6, pc}
   15494:	mov	r2, #5
   15498:	ldr	r1, [pc, #484]	; 15684 <tcgetattr@plt+0x44b8>
   1549c:	mov	r0, #0
   154a0:	bl	10f74 <dcgettext@plt>
   154a4:	ldr	r3, [r4, #16]
   154a8:	mov	r1, #1
   154ac:	str	r3, [sp, #12]
   154b0:	ldr	r3, [r4, #12]
   154b4:	str	r3, [sp, #8]
   154b8:	ldr	r3, [r4, #8]
   154bc:	str	r3, [sp, #4]
   154c0:	ldr	r3, [r4, #4]
   154c4:	str	r3, [sp]
   154c8:	ldr	r3, [r4]
   154cc:	mov	r2, r0
   154d0:	mov	r0, r5
   154d4:	bl	11124 <__fprintf_chk@plt>
   154d8:	b	1548c <tcgetattr@plt+0x42c0>
   154dc:	mov	r2, #5
   154e0:	ldr	r1, [pc, #416]	; 15688 <tcgetattr@plt+0x44bc>
   154e4:	mov	r0, #0
   154e8:	bl	10f74 <dcgettext@plt>
   154ec:	ldr	r3, [r4, #20]
   154f0:	mov	r1, #1
   154f4:	str	r3, [sp, #16]
   154f8:	ldr	r3, [r4, #16]
   154fc:	str	r3, [sp, #12]
   15500:	ldr	r3, [r4, #12]
   15504:	str	r3, [sp, #8]
   15508:	ldr	r3, [r4, #8]
   1550c:	str	r3, [sp, #4]
   15510:	ldr	r3, [r4, #4]
   15514:	str	r3, [sp]
   15518:	ldr	r3, [r4]
   1551c:	mov	r2, r0
   15520:	mov	r0, r5
   15524:	bl	11124 <__fprintf_chk@plt>
   15528:	b	1548c <tcgetattr@plt+0x42c0>
   1552c:	mov	r2, #5
   15530:	ldr	r1, [pc, #340]	; 1568c <tcgetattr@plt+0x44c0>
   15534:	mov	r0, #0
   15538:	bl	10f74 <dcgettext@plt>
   1553c:	ldr	r3, [r4, #24]
   15540:	mov	r1, #1
   15544:	str	r3, [sp, #20]
   15548:	ldr	r3, [r4, #20]
   1554c:	str	r3, [sp, #16]
   15550:	ldr	r3, [r4, #16]
   15554:	str	r3, [sp, #12]
   15558:	ldr	r3, [r4, #12]
   1555c:	str	r3, [sp, #8]
   15560:	ldr	r3, [r4, #8]
   15564:	str	r3, [sp, #4]
   15568:	ldr	r3, [r4, #4]
   1556c:	str	r3, [sp]
   15570:	ldr	r3, [r4]
   15574:	mov	r2, r0
   15578:	mov	r0, r5
   1557c:	bl	11124 <__fprintf_chk@plt>
   15580:	b	1548c <tcgetattr@plt+0x42c0>
   15584:	mov	r2, #5
   15588:	ldr	r1, [pc, #256]	; 15690 <tcgetattr@plt+0x44c4>
   1558c:	mov	r0, #0
   15590:	bl	10f74 <dcgettext@plt>
   15594:	ldr	r3, [r4, #28]
   15598:	mov	r1, #1
   1559c:	str	r3, [sp, #24]
   155a0:	ldr	r3, [r4, #24]
   155a4:	str	r3, [sp, #20]
   155a8:	ldr	r3, [r4, #20]
   155ac:	str	r3, [sp, #16]
   155b0:	ldr	r3, [r4, #16]
   155b4:	str	r3, [sp, #12]
   155b8:	ldr	r3, [r4, #12]
   155bc:	str	r3, [sp, #8]
   155c0:	ldr	r3, [r4, #8]
   155c4:	str	r3, [sp, #4]
   155c8:	ldr	r3, [r4, #4]
   155cc:	str	r3, [sp]
   155d0:	ldr	r3, [r4]
   155d4:	mov	r2, r0
   155d8:	mov	r0, r5
   155dc:	bl	11124 <__fprintf_chk@plt>
   155e0:	b	1548c <tcgetattr@plt+0x42c0>
   155e4:	ldr	r1, [pc, #168]	; 15694 <tcgetattr@plt+0x44c8>
   155e8:	mov	r2, #5
   155ec:	mov	r0, #0
   155f0:	bl	10f74 <dcgettext@plt>
   155f4:	ldr	r3, [r4, #32]
   155f8:	mov	r1, #1
   155fc:	str	r3, [sp, #28]
   15600:	ldr	r3, [r4, #28]
   15604:	str	r3, [sp, #24]
   15608:	ldr	r3, [r4, #24]
   1560c:	str	r3, [sp, #20]
   15610:	ldr	r3, [r4, #20]
   15614:	str	r3, [sp, #16]
   15618:	ldr	r3, [r4, #16]
   1561c:	str	r3, [sp, #12]
   15620:	ldr	r3, [r4, #12]
   15624:	str	r3, [sp, #8]
   15628:	ldr	r3, [r4, #8]
   1562c:	str	r3, [sp, #4]
   15630:	ldr	r3, [r4, #4]
   15634:	str	r3, [sp]
   15638:	ldr	r3, [r4]
   1563c:	mov	r2, r0
   15640:	mov	r0, r5
   15644:	bl	11124 <__fprintf_chk@plt>
   15648:	b	1548c <tcgetattr@plt+0x42c0>
   1564c:	mov	r2, #5
   15650:	ldr	r1, [pc, #64]	; 15698 <tcgetattr@plt+0x44cc>
   15654:	b	155ec <tcgetattr@plt+0x4420>
   15658:	andeq	sl, r1, r5, lsl #4
   1565c:	andeq	sl, r1, r8, lsl r2
   15660:	andeq	r0, r0, r6, ror #15
   15664:	andeq	sl, r1, r6, ror #9
   15668:	andeq	sl, r1, ip, lsl r2
   1566c:	andeq	sl, r1, r7, asr #5
   15670:	andeq	sl, r1, r1, lsl r2
   15674:	andeq	sl, r1, r9, ror #5
   15678:	strdeq	sl, [r1], -r9
   1567c:	andeq	sl, r1, r0, lsl r3
   15680:	andeq	sl, r1, ip, lsr #6
   15684:	andeq	sl, r1, ip, asr #6
   15688:	andeq	sl, r1, r0, ror r3
   1568c:	muleq	r1, r8, r3
   15690:	andeq	sl, r1, r4, asr #7
   15694:	strdeq	sl, [r1], -r4
   15698:	andeq	sl, r1, r8, lsr #8
   1569c:	push	{r0, r1, r4, lr}
   156a0:	mov	ip, #0
   156a4:	ldr	lr, [sp, #16]
   156a8:	ldr	r4, [lr, ip, lsl #2]
   156ac:	cmp	r4, #0
   156b0:	bne	156c8 <tcgetattr@plt+0x44fc>
   156b4:	str	ip, [sp, #4]
   156b8:	str	lr, [sp]
   156bc:	bl	152d0 <tcgetattr@plt+0x4104>
   156c0:	add	sp, sp, #8
   156c4:	pop	{r4, pc}
   156c8:	add	ip, ip, #1
   156cc:	b	156a8 <tcgetattr@plt+0x44dc>
   156d0:	push	{r4, r5, lr}
   156d4:	sub	sp, sp, #52	; 0x34
   156d8:	mov	ip, #0
   156dc:	ldr	r5, [sp, #64]	; 0x40
   156e0:	add	lr, sp, #8
   156e4:	ldr	r4, [r5, ip, lsl #2]
   156e8:	cmp	r4, #0
   156ec:	str	r4, [lr, ip, lsl #2]
   156f0:	beq	15700 <tcgetattr@plt+0x4534>
   156f4:	add	ip, ip, #1
   156f8:	cmp	ip, #10
   156fc:	bne	156e4 <tcgetattr@plt+0x4518>
   15700:	str	ip, [sp, #4]
   15704:	str	lr, [sp]
   15708:	bl	152d0 <tcgetattr@plt+0x4104>
   1570c:	add	sp, sp, #52	; 0x34
   15710:	pop	{r4, r5, pc}
   15714:	push	{r3}		; (str r3, [sp, #-4]!)
   15718:	push	{r0, r1, r2, r3, lr}
   1571c:	add	r3, sp, #24
   15720:	str	r3, [sp, #12]
   15724:	str	r3, [sp]
   15728:	ldr	r3, [sp, #20]
   1572c:	bl	156d0 <tcgetattr@plt+0x4504>
   15730:	add	sp, sp, #16
   15734:	pop	{lr}		; (ldr lr, [sp], #4)
   15738:	add	sp, sp, #4
   1573c:	bx	lr
   15740:	ldr	r3, [pc, #116]	; 157bc <tcgetattr@plt+0x45f0>
   15744:	push	{r4, lr}
   15748:	mov	r0, #10
   1574c:	ldr	r1, [r3]
   15750:	bl	10f68 <fputc_unlocked@plt>
   15754:	mov	r2, #5
   15758:	ldr	r1, [pc, #96]	; 157c0 <tcgetattr@plt+0x45f4>
   1575c:	mov	r0, #0
   15760:	bl	10f74 <dcgettext@plt>
   15764:	ldr	r2, [pc, #88]	; 157c4 <tcgetattr@plt+0x45f8>
   15768:	mov	r1, r0
   1576c:	mov	r0, #1
   15770:	bl	11100 <__printf_chk@plt>
   15774:	mov	r2, #5
   15778:	ldr	r1, [pc, #72]	; 157c8 <tcgetattr@plt+0x45fc>
   1577c:	mov	r0, #0
   15780:	bl	10f74 <dcgettext@plt>
   15784:	ldr	r3, [pc, #64]	; 157cc <tcgetattr@plt+0x4600>
   15788:	ldr	r2, [pc, #64]	; 157d0 <tcgetattr@plt+0x4604>
   1578c:	mov	r1, r0
   15790:	mov	r0, #1
   15794:	bl	11100 <__printf_chk@plt>
   15798:	mov	r2, #5
   1579c:	ldr	r1, [pc, #48]	; 157d4 <tcgetattr@plt+0x4608>
   157a0:	mov	r0, #0
   157a4:	bl	10f74 <dcgettext@plt>
   157a8:	ldr	r2, [pc, #40]	; 157d8 <tcgetattr@plt+0x460c>
   157ac:	pop	{r4, lr}
   157b0:	mov	r1, r0
   157b4:	mov	r0, #1
   157b8:	b	11100 <__printf_chk@plt>
   157bc:	andeq	fp, r2, r4, ror r1
   157c0:	andeq	sl, r1, r4, ror #8
   157c4:	andeq	sl, r1, r8, ror r4
   157c8:	andeq	sl, r1, lr, lsl #9
   157cc:	andeq	r9, r1, r8, lsr #21
   157d0:	ldrdeq	r9, [r1], -r0
   157d4:	andeq	sl, r1, r2, lsr #9
   157d8:	andeq	sl, r1, r9, asr #9
   157dc:	push	{r4, lr}
   157e0:	bl	16614 <tcgetattr@plt+0x5448>
   157e4:	cmp	r0, #0
   157e8:	popne	{r4, pc}
   157ec:	bl	15c70 <tcgetattr@plt+0x4aa4>
   157f0:	push	{r4, lr}
   157f4:	bl	16614 <tcgetattr@plt+0x5448>
   157f8:	cmp	r0, #0
   157fc:	popne	{r4, pc}
   15800:	bl	15c70 <tcgetattr@plt+0x4aa4>
   15804:	b	157dc <tcgetattr@plt+0x4610>
   15808:	push	{r4, r5, r6, lr}
   1580c:	mov	r5, r0
   15810:	mov	r4, r1
   15814:	bl	16654 <tcgetattr@plt+0x5488>
   15818:	cmp	r0, #0
   1581c:	popne	{r4, r5, r6, pc}
   15820:	adds	r4, r4, #0
   15824:	movne	r4, #1
   15828:	cmp	r5, #0
   1582c:	orreq	r4, r4, #1
   15830:	cmp	r4, #0
   15834:	popeq	{r4, r5, r6, pc}
   15838:	bl	15c70 <tcgetattr@plt+0x4aa4>
   1583c:	push	{r4, lr}
   15840:	cmp	r1, #0
   15844:	orreq	r1, r1, #1
   15848:	bl	16654 <tcgetattr@plt+0x5488>
   1584c:	cmp	r0, #0
   15850:	popne	{r4, pc}
   15854:	bl	15c70 <tcgetattr@plt+0x4aa4>
   15858:	push	{r4, r5, r6, lr}
   1585c:	mov	r6, r0
   15860:	mov	r5, r1
   15864:	mov	r4, r2
   15868:	bl	16930 <tcgetattr@plt+0x5764>
   1586c:	cmp	r0, #0
   15870:	popne	{r4, r5, r6, pc}
   15874:	cmp	r6, #0
   15878:	beq	15888 <tcgetattr@plt+0x46bc>
   1587c:	cmp	r5, #0
   15880:	cmpne	r4, #0
   15884:	popeq	{r4, r5, r6, pc}
   15888:	bl	15c70 <tcgetattr@plt+0x4aa4>
   1588c:	b	15858 <tcgetattr@plt+0x468c>
   15890:	cmp	r2, #0
   15894:	cmpne	r1, #0
   15898:	moveq	r2, #1
   1589c:	moveq	r1, r2
   158a0:	push	{r4, lr}
   158a4:	bl	16930 <tcgetattr@plt+0x5764>
   158a8:	cmp	r0, #0
   158ac:	popne	{r4, pc}
   158b0:	bl	15c70 <tcgetattr@plt+0x4aa4>
   158b4:	mov	r2, r1
   158b8:	mov	r1, r0
   158bc:	mov	r0, #0
   158c0:	b	15858 <tcgetattr@plt+0x468c>
   158c4:	mov	r2, r1
   158c8:	mov	r1, r0
   158cc:	mov	r0, #0
   158d0:	b	15890 <tcgetattr@plt+0x46c4>
   158d4:	push	{r4, r5, r6, r7, r8, lr}
   158d8:	subs	r7, r0, #0
   158dc:	mov	r5, r1
   158e0:	mov	r6, r2
   158e4:	ldr	r4, [r1]
   158e8:	bne	15924 <tcgetattr@plt+0x4758>
   158ec:	cmp	r4, #0
   158f0:	bne	1590c <tcgetattr@plt+0x4740>
   158f4:	mov	r1, r2
   158f8:	mov	r0, #64	; 0x40
   158fc:	bl	16a5c <tcgetattr@plt+0x5890>
   15900:	cmp	r0, #0
   15904:	movne	r4, r0
   15908:	addeq	r4, r0, #1
   1590c:	mov	r2, r6
   15910:	mov	r1, r4
   15914:	mov	r0, r7
   15918:	bl	15858 <tcgetattr@plt+0x468c>
   1591c:	str	r4, [r5]
   15920:	pop	{r4, r5, r6, r7, r8, pc}
   15924:	lsr	r2, r4, #1
   15928:	add	r3, r2, #1
   1592c:	mvn	r3, r3
   15930:	cmp	r4, r3
   15934:	addls	r4, r4, #1
   15938:	addls	r4, r4, r2
   1593c:	bls	1590c <tcgetattr@plt+0x4740>
   15940:	bl	15c70 <tcgetattr@plt+0x4aa4>
   15944:	mov	r2, #1
   15948:	b	158d4 <tcgetattr@plt+0x4708>
   1594c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15950:	mov	sl, r0
   15954:	ldr	r8, [r1]
   15958:	mov	fp, r1
   1595c:	mov	r5, r2
   15960:	asrs	r4, r8, #1
   15964:	mov	r9, r3
   15968:	ldr	r7, [sp, #48]	; 0x30
   1596c:	bpl	15a08 <tcgetattr@plt+0x483c>
   15970:	rsb	r2, r4, #-2147483648	; 0x80000000
   15974:	cmp	r8, r2
   15978:	movge	r2, #0
   1597c:	movlt	r2, #1
   15980:	mvn	r3, r9
   15984:	cmp	r2, #0
   15988:	lsr	r3, r3, #31
   1598c:	addeq	r4, r4, r8
   15990:	mvnne	r4, #-2147483648	; 0x80000000
   15994:	mov	r0, r3
   15998:	cmp	r9, r4
   1599c:	movge	r0, #0
   159a0:	andlt	r0, r0, #1
   159a4:	cmp	r0, #0
   159a8:	str	r3, [sp, #4]
   159ac:	bne	15b7c <tcgetattr@plt+0x49b0>
   159b0:	cmp	r7, #0
   159b4:	bge	15ac8 <tcgetattr@plt+0x48fc>
   159b8:	cmp	r4, #0
   159bc:	bge	15a20 <tcgetattr@plt+0x4854>
   159c0:	mov	r1, r7
   159c4:	mvn	r0, #-2147483648	; 0x80000000
   159c8:	bl	16c68 <tcgetattr@plt+0x5a9c>
   159cc:	cmp	r0, r4
   159d0:	movle	r0, #0
   159d4:	movgt	r0, #1
   159d8:	cmp	r0, #0
   159dc:	mvnne	r6, #-2147483648	; 0x80000000
   159e0:	beq	15a30 <tcgetattr@plt+0x4864>
   159e4:	mov	r1, r7
   159e8:	mov	r0, r6
   159ec:	bl	16c68 <tcgetattr@plt+0x5a9c>
   159f0:	mov	r1, r7
   159f4:	mov	r4, r0
   159f8:	mov	r0, r6
   159fc:	bl	16e88 <tcgetattr@plt+0x5cbc>
   15a00:	sub	r1, r6, r1
   15a04:	b	15a40 <tcgetattr@plt+0x4874>
   15a08:	mvn	r2, #-2147483648	; 0x80000000
   15a0c:	sub	r2, r2, r4
   15a10:	cmp	r8, r2
   15a14:	movle	r2, #0
   15a18:	movgt	r2, #1
   15a1c:	b	15980 <tcgetattr@plt+0x47b4>
   15a20:	cmn	r7, #1
   15a24:	movne	r1, r7
   15a28:	movne	r0, #-2147483648	; 0x80000000
   15a2c:	bne	15b94 <tcgetattr@plt+0x49c8>
   15a30:	mul	r1, r7, r4
   15a34:	cmp	r1, #63	; 0x3f
   15a38:	movle	r6, #64	; 0x40
   15a3c:	ble	159e4 <tcgetattr@plt+0x4818>
   15a40:	cmp	sl, #0
   15a44:	sub	r2, r4, r8
   15a48:	streq	sl, [fp]
   15a4c:	cmp	r2, r5
   15a50:	bge	15b24 <tcgetattr@plt+0x4958>
   15a54:	cmp	r5, #0
   15a58:	bge	15af0 <tcgetattr@plt+0x4924>
   15a5c:	rsb	r2, r5, #-2147483648	; 0x80000000
   15a60:	cmp	r8, r2
   15a64:	movge	r2, #0
   15a68:	movlt	r2, #1
   15a6c:	cmp	r2, #0
   15a70:	bne	15ac4 <tcgetattr@plt+0x48f8>
   15a74:	ldr	r0, [sp, #4]
   15a78:	add	r5, r8, r5
   15a7c:	cmp	r9, r5
   15a80:	movge	r0, #0
   15a84:	andlt	r0, r0, #1
   15a88:	cmp	r0, #0
   15a8c:	mov	r4, r5
   15a90:	bne	15ac4 <tcgetattr@plt+0x48f8>
   15a94:	cmp	r7, #0
   15a98:	bge	15b38 <tcgetattr@plt+0x496c>
   15a9c:	cmp	r5, #0
   15aa0:	bge	15b10 <tcgetattr@plt+0x4944>
   15aa4:	mov	r1, r7
   15aa8:	mvn	r0, #-2147483648	; 0x80000000
   15aac:	bl	16c68 <tcgetattr@plt+0x5a9c>
   15ab0:	cmp	r5, r0
   15ab4:	movge	r0, #0
   15ab8:	movlt	r0, #1
   15abc:	cmp	r0, #0
   15ac0:	beq	15b20 <tcgetattr@plt+0x4954>
   15ac4:	bl	15c70 <tcgetattr@plt+0x4aa4>
   15ac8:	beq	15a30 <tcgetattr@plt+0x4864>
   15acc:	cmp	r4, #0
   15ad0:	bge	15b8c <tcgetattr@plt+0x49c0>
   15ad4:	cmn	r4, #1
   15ad8:	beq	15a30 <tcgetattr@plt+0x4864>
   15adc:	mov	r1, r4
   15ae0:	mov	r0, #-2147483648	; 0x80000000
   15ae4:	bl	16c68 <tcgetattr@plt+0x5a9c>
   15ae8:	cmp	r7, r0
   15aec:	b	159d0 <tcgetattr@plt+0x4804>
   15af0:	cmp	r8, #0
   15af4:	blt	15a74 <tcgetattr@plt+0x48a8>
   15af8:	mvn	r2, #-2147483648	; 0x80000000
   15afc:	sub	r2, r2, r5
   15b00:	cmp	r8, r2
   15b04:	movle	r2, #0
   15b08:	movgt	r2, #1
   15b0c:	b	15a6c <tcgetattr@plt+0x48a0>
   15b10:	cmn	r7, #1
   15b14:	movne	r1, r7
   15b18:	movne	r0, #-2147483648	; 0x80000000
   15b1c:	bne	15b70 <tcgetattr@plt+0x49a4>
   15b20:	mul	r1, r5, r7
   15b24:	mov	r0, sl
   15b28:	bl	15808 <tcgetattr@plt+0x463c>
   15b2c:	str	r4, [fp]
   15b30:	add	sp, sp, #12
   15b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b38:	beq	15b20 <tcgetattr@plt+0x4954>
   15b3c:	cmp	r5, #0
   15b40:	movge	r1, r7
   15b44:	mvnge	r0, #-2147483648	; 0x80000000
   15b48:	bge	15b70 <tcgetattr@plt+0x49a4>
   15b4c:	cmn	r5, #1
   15b50:	beq	15b20 <tcgetattr@plt+0x4954>
   15b54:	mov	r1, r5
   15b58:	mov	r0, #-2147483648	; 0x80000000
   15b5c:	bl	16c68 <tcgetattr@plt+0x5a9c>
   15b60:	cmp	r7, r0
   15b64:	movle	r0, #0
   15b68:	movgt	r0, #1
   15b6c:	b	15abc <tcgetattr@plt+0x48f0>
   15b70:	bl	16c68 <tcgetattr@plt+0x5a9c>
   15b74:	cmp	r5, r0
   15b78:	b	15b64 <tcgetattr@plt+0x4998>
   15b7c:	cmp	r7, #0
   15b80:	mov	r4, r9
   15b84:	blt	15a20 <tcgetattr@plt+0x4854>
   15b88:	beq	15a30 <tcgetattr@plt+0x4864>
   15b8c:	mov	r1, r7
   15b90:	mvn	r0, #-2147483648	; 0x80000000
   15b94:	bl	16c68 <tcgetattr@plt+0x5a9c>
   15b98:	cmp	r0, r4
   15b9c:	movge	r0, #0
   15ba0:	movlt	r0, #1
   15ba4:	b	159d8 <tcgetattr@plt+0x480c>
   15ba8:	push	{r4, lr}
   15bac:	bl	165cc <tcgetattr@plt+0x5400>
   15bb0:	cmp	r0, #0
   15bb4:	popne	{r4, pc}
   15bb8:	bl	15c70 <tcgetattr@plt+0x4aa4>
   15bbc:	mov	r1, #1
   15bc0:	b	15ba8 <tcgetattr@plt+0x49dc>
   15bc4:	push	{r4, lr}
   15bc8:	bl	165cc <tcgetattr@plt+0x5400>
   15bcc:	cmp	r0, #0
   15bd0:	popne	{r4, pc}
   15bd4:	bl	15c70 <tcgetattr@plt+0x4aa4>
   15bd8:	mov	r1, #1
   15bdc:	b	15bc4 <tcgetattr@plt+0x49f8>
   15be0:	push	{r4, r5, r6, lr}
   15be4:	mov	r4, r1
   15be8:	mov	r5, r0
   15bec:	mov	r0, r1
   15bf0:	bl	157dc <tcgetattr@plt+0x4610>
   15bf4:	mov	r2, r4
   15bf8:	mov	r1, r5
   15bfc:	pop	{r4, r5, r6, lr}
   15c00:	b	10f44 <memcpy@plt>
   15c04:	push	{r4, r5, r6, lr}
   15c08:	mov	r4, r1
   15c0c:	mov	r5, r0
   15c10:	mov	r0, r1
   15c14:	bl	157f0 <tcgetattr@plt+0x4624>
   15c18:	mov	r2, r4
   15c1c:	mov	r1, r5
   15c20:	pop	{r4, r5, r6, lr}
   15c24:	b	10f44 <memcpy@plt>
   15c28:	push	{r4, r5, r6, lr}
   15c2c:	mov	r5, r0
   15c30:	add	r0, r1, #1
   15c34:	mov	r4, r1
   15c38:	bl	157f0 <tcgetattr@plt+0x4624>
   15c3c:	mov	r2, #0
   15c40:	mov	r1, r5
   15c44:	strb	r2, [r0, r4]
   15c48:	mov	r2, r4
   15c4c:	pop	{r4, r5, r6, lr}
   15c50:	b	10f44 <memcpy@plt>
   15c54:	push	{r4, lr}
   15c58:	mov	r4, r0
   15c5c:	bl	110a0 <strlen@plt>
   15c60:	add	r1, r0, #1
   15c64:	mov	r0, r4
   15c68:	pop	{r4, lr}
   15c6c:	b	15be0 <tcgetattr@plt+0x4a14>
   15c70:	ldr	r3, [pc, #44]	; 15ca4 <tcgetattr@plt+0x4ad8>
   15c74:	push	{r4, lr}
   15c78:	mov	r2, #5
   15c7c:	ldr	r1, [pc, #36]	; 15ca8 <tcgetattr@plt+0x4adc>
   15c80:	mov	r0, #0
   15c84:	ldr	r4, [r3]
   15c88:	bl	10f74 <dcgettext@plt>
   15c8c:	ldr	r2, [pc, #24]	; 15cac <tcgetattr@plt+0x4ae0>
   15c90:	mov	r1, #0
   15c94:	mov	r3, r0
   15c98:	mov	r0, r4
   15c9c:	bl	1101c <error@plt>
   15ca0:	bl	1119c <abort@plt>
   15ca4:	andeq	fp, r2, ip, lsl r1
   15ca8:	andeq	sl, r1, r5, lsl r5
   15cac:	andeq	sl, r1, r6, lsl #2
   15cb0:	push	{r0, r1, r2, r3, r4, r5, r6, r8, r9, lr}
   15cb4:	mov	r9, r3
   15cb8:	ldr	r3, [sp, #48]	; 0x30
   15cbc:	mov	r8, r2
   15cc0:	str	r3, [sp]
   15cc4:	mov	r2, r1
   15cc8:	add	r3, sp, #8
   15ccc:	mov	r1, #0
   15cd0:	mov	r6, r0
   15cd4:	ldr	r4, [sp, #56]	; 0x38
   15cd8:	bl	162a0 <tcgetattr@plt+0x50d4>
   15cdc:	cmp	r0, #0
   15ce0:	bne	15d54 <tcgetattr@plt+0x4b88>
   15ce4:	ldrd	r0, [sp, #8]
   15ce8:	ldrd	r2, [sp, #40]	; 0x28
   15cec:	cmp	r1, r9
   15cf0:	cmpeq	r0, r8
   15cf4:	movcc	ip, #1
   15cf8:	movcs	ip, #0
   15cfc:	cmp	r1, r3
   15d00:	cmpeq	r0, r2
   15d04:	movls	r3, ip
   15d08:	orrhi	r3, ip, #1
   15d0c:	cmp	r3, #0
   15d10:	beq	15dd0 <tcgetattr@plt+0x4c04>
   15d14:	mov	r3, #0
   15d18:	mvn	r2, #-1073741824	; 0xc0000000
   15d1c:	cmp	r1, r3
   15d20:	cmpeq	r0, r2
   15d24:	bls	15d48 <tcgetattr@plt+0x4b7c>
   15d28:	bl	110d0 <__errno_location@plt>
   15d2c:	mov	r3, #75	; 0x4b
   15d30:	cmp	r4, #0
   15d34:	str	r3, [r0]
   15d38:	beq	15d9c <tcgetattr@plt+0x4bd0>
   15d3c:	bl	110d0 <__errno_location@plt>
   15d40:	ldr	r5, [r0]
   15d44:	b	15db0 <tcgetattr@plt+0x4be4>
   15d48:	bl	110d0 <__errno_location@plt>
   15d4c:	mov	r3, #34	; 0x22
   15d50:	b	15d30 <tcgetattr@plt+0x4b64>
   15d54:	cmp	r0, #1
   15d58:	bne	15d80 <tcgetattr@plt+0x4bb4>
   15d5c:	bl	110d0 <__errno_location@plt>
   15d60:	mov	r3, #75	; 0x4b
   15d64:	cmp	r4, #0
   15d68:	str	r3, [r0]
   15d6c:	bne	15da0 <tcgetattr@plt+0x4bd4>
   15d70:	bl	110d0 <__errno_location@plt>
   15d74:	mov	r4, #1
   15d78:	ldr	r5, [r0]
   15d7c:	b	15db0 <tcgetattr@plt+0x4be4>
   15d80:	cmp	r0, #3
   15d84:	bne	15d94 <tcgetattr@plt+0x4bc8>
   15d88:	bl	110d0 <__errno_location@plt>
   15d8c:	mov	r3, #0
   15d90:	b	15d64 <tcgetattr@plt+0x4b98>
   15d94:	cmp	r4, #0
   15d98:	bne	15da0 <tcgetattr@plt+0x4bd4>
   15d9c:	mov	r4, #1
   15da0:	bl	110d0 <__errno_location@plt>
   15da4:	ldr	r5, [r0]
   15da8:	cmp	r5, #22
   15dac:	moveq	r5, #0
   15db0:	mov	r0, r6
   15db4:	bl	152c4 <tcgetattr@plt+0x40f8>
   15db8:	ldr	r3, [sp, #52]	; 0x34
   15dbc:	ldr	r2, [pc, #20]	; 15dd8 <tcgetattr@plt+0x4c0c>
   15dc0:	mov	r1, r5
   15dc4:	str	r0, [sp]
   15dc8:	mov	r0, r4
   15dcc:	bl	1101c <error@plt>
   15dd0:	add	sp, sp, #16
   15dd4:	pop	{r4, r5, r6, r8, r9, pc}
   15dd8:	andeq	sl, r1, r2, lsl #2
   15ddc:	push	{r4, r5}
   15de0:	mov	r1, #10
   15de4:	pop	{r4, r5}
   15de8:	b	15cb0 <tcgetattr@plt+0x4ae4>
   15dec:	push	{r4, r5, r6, lr}
   15df0:	subs	r5, r1, #0
   15df4:	mov	r6, r0
   15df8:	ldr	r4, [r0]
   15dfc:	bge	15e70 <tcgetattr@plt+0x4ca4>
   15e00:	cmp	r4, #0
   15e04:	bge	15e38 <tcgetattr@plt+0x4c6c>
   15e08:	mvn	r0, #-2147483648	; 0x80000000
   15e0c:	bl	16c68 <tcgetattr@plt+0x5a9c>
   15e10:	cmp	r4, r0
   15e14:	movge	r0, #0
   15e18:	movlt	r0, #1
   15e1c:	cmp	r0, #0
   15e20:	movne	r3, #-2147483648	; 0x80000000
   15e24:	bne	15e64 <tcgetattr@plt+0x4c98>
   15e28:	mul	r4, r5, r4
   15e2c:	mov	r0, #0
   15e30:	str	r4, [r6]
   15e34:	pop	{r4, r5, r6, pc}
   15e38:	cmn	r5, #1
   15e3c:	movne	r0, #-2147483648	; 0x80000000
   15e40:	moveq	r0, #0
   15e44:	beq	15e58 <tcgetattr@plt+0x4c8c>
   15e48:	bl	16c68 <tcgetattr@plt+0x5a9c>
   15e4c:	cmp	r4, r0
   15e50:	movle	r0, #0
   15e54:	movgt	r0, #1
   15e58:	cmp	r0, #0
   15e5c:	mvnne	r3, #-2147483648	; 0x80000000
   15e60:	beq	15e28 <tcgetattr@plt+0x4c5c>
   15e64:	str	r3, [r6]
   15e68:	mov	r0, #1
   15e6c:	pop	{r4, r5, r6, pc}
   15e70:	beq	15e28 <tcgetattr@plt+0x4c5c>
   15e74:	cmp	r4, #0
   15e78:	mvnge	r0, #-2147483648	; 0x80000000
   15e7c:	bge	15e48 <tcgetattr@plt+0x4c7c>
   15e80:	cmn	r4, #1
   15e84:	beq	15e28 <tcgetattr@plt+0x4c5c>
   15e88:	mov	r1, r4
   15e8c:	mov	r0, #-2147483648	; 0x80000000
   15e90:	bl	16c68 <tcgetattr@plt+0x5a9c>
   15e94:	cmp	r5, r0
   15e98:	movle	r0, #0
   15e9c:	movgt	r0, #1
   15ea0:	b	15e1c <tcgetattr@plt+0x4c50>
   15ea4:	push	{r4, r5, r6, r7, r8, lr}
   15ea8:	mov	r6, r0
   15eac:	mov	r7, r1
   15eb0:	mov	r5, r2
   15eb4:	mov	r4, #0
   15eb8:	cmp	r5, #0
   15ebc:	bne	15ec8 <tcgetattr@plt+0x4cfc>
   15ec0:	mov	r0, r4
   15ec4:	pop	{r4, r5, r6, r7, r8, pc}
   15ec8:	mov	r1, r7
   15ecc:	mov	r0, r6
   15ed0:	bl	15dec <tcgetattr@plt+0x4c20>
   15ed4:	sub	r5, r5, #1
   15ed8:	orr	r4, r4, r0
   15edc:	b	15eb8 <tcgetattr@plt+0x4cec>
   15ee0:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   15ee4:	cmp	r2, #36	; 0x24
   15ee8:	ldr	r9, [sp, #40]	; 0x28
   15eec:	bls	15f04 <tcgetattr@plt+0x4d38>
   15ef0:	ldr	r3, [pc, #716]	; 161c4 <tcgetattr@plt+0x4ff8>
   15ef4:	mov	r2, #85	; 0x55
   15ef8:	ldr	r1, [pc, #712]	; 161c8 <tcgetattr@plt+0x4ffc>
   15efc:	ldr	r0, [pc, #712]	; 161cc <tcgetattr@plt+0x5000>
   15f00:	bl	111c0 <__assert_fail@plt>
   15f04:	cmp	r1, #0
   15f08:	mov	r7, r1
   15f0c:	mov	sl, r0
   15f10:	moveq	r7, sp
   15f14:	mov	r6, r2
   15f18:	mov	r8, r3
   15f1c:	bl	110d0 <__errno_location@plt>
   15f20:	mov	r5, #0
   15f24:	mov	r2, r6
   15f28:	mov	r1, r7
   15f2c:	str	r5, [r0]
   15f30:	mov	r4, r0
   15f34:	mov	r0, sl
   15f38:	bl	10f14 <strtol@plt>
   15f3c:	ldr	r6, [r7]
   15f40:	cmp	sl, r6
   15f44:	str	r0, [sp, #4]
   15f48:	bne	15f80 <tcgetattr@plt+0x4db4>
   15f4c:	cmp	r9, r5
   15f50:	beq	15f78 <tcgetattr@plt+0x4dac>
   15f54:	ldrb	r1, [r6]
   15f58:	cmp	r1, r5
   15f5c:	beq	15f78 <tcgetattr@plt+0x4dac>
   15f60:	mov	r0, r9
   15f64:	bl	110ac <strchr@plt>
   15f68:	cmp	r0, r5
   15f6c:	movne	r3, #1
   15f70:	strne	r3, [sp, #4]
   15f74:	bne	15fa4 <tcgetattr@plt+0x4dd8>
   15f78:	mov	r5, #4
   15f7c:	b	15fd0 <tcgetattr@plt+0x4e04>
   15f80:	ldr	r5, [r4]
   15f84:	cmp	r5, #0
   15f88:	beq	15f98 <tcgetattr@plt+0x4dcc>
   15f8c:	cmp	r5, #34	; 0x22
   15f90:	bne	15f78 <tcgetattr@plt+0x4dac>
   15f94:	mov	r5, #1
   15f98:	cmp	r9, #0
   15f9c:	streq	r0, [r8]
   15fa0:	beq	15fd0 <tcgetattr@plt+0x4e04>
   15fa4:	ldrb	r4, [r6]
   15fa8:	cmp	r4, #0
   15fac:	beq	160c4 <tcgetattr@plt+0x4ef8>
   15fb0:	mov	r1, r4
   15fb4:	mov	r0, r9
   15fb8:	bl	110ac <strchr@plt>
   15fbc:	cmp	r0, #0
   15fc0:	bne	15fdc <tcgetattr@plt+0x4e10>
   15fc4:	ldr	r3, [sp, #4]
   15fc8:	orr	r5, r5, #2
   15fcc:	str	r3, [r8]
   15fd0:	mov	r0, r5
   15fd4:	add	sp, sp, #8
   15fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15fdc:	cmp	r4, #84	; 0x54
   15fe0:	beq	16034 <tcgetattr@plt+0x4e68>
   15fe4:	bhi	1601c <tcgetattr@plt+0x4e50>
   15fe8:	cmp	r4, #75	; 0x4b
   15fec:	beq	16034 <tcgetattr@plt+0x4e68>
   15ff0:	bhi	1600c <tcgetattr@plt+0x4e40>
   15ff4:	cmp	r4, #69	; 0x45
   15ff8:	beq	16034 <tcgetattr@plt+0x4e68>
   15ffc:	cmp	r4, #71	; 0x47
   16000:	beq	16034 <tcgetattr@plt+0x4e68>
   16004:	mov	r6, #1
   16008:	b	160f8 <tcgetattr@plt+0x4f2c>
   1600c:	cmp	r4, #77	; 0x4d
   16010:	beq	16034 <tcgetattr@plt+0x4e68>
   16014:	cmp	r4, #80	; 0x50
   16018:	b	16000 <tcgetattr@plt+0x4e34>
   1601c:	cmp	r4, #103	; 0x67
   16020:	beq	16034 <tcgetattr@plt+0x4e68>
   16024:	bhi	160d0 <tcgetattr@plt+0x4f04>
   16028:	sub	r3, r4, #89	; 0x59
   1602c:	cmp	r3, #1
   16030:	bhi	16004 <tcgetattr@plt+0x4e38>
   16034:	mov	r1, #48	; 0x30
   16038:	mov	r0, r9
   1603c:	bl	110ac <strchr@plt>
   16040:	cmp	r0, #0
   16044:	beq	16004 <tcgetattr@plt+0x4e38>
   16048:	ldrb	r3, [r6, #1]
   1604c:	cmp	r3, #68	; 0x44
   16050:	beq	16064 <tcgetattr@plt+0x4e98>
   16054:	cmp	r3, #105	; 0x69
   16058:	beq	160e8 <tcgetattr@plt+0x4f1c>
   1605c:	cmp	r3, #66	; 0x42
   16060:	bne	16004 <tcgetattr@plt+0x4e38>
   16064:	mov	r6, #2
   16068:	mov	r1, #1000	; 0x3e8
   1606c:	cmp	r4, #89	; 0x59
   16070:	beq	161b4 <tcgetattr@plt+0x4fe8>
   16074:	bhi	16120 <tcgetattr@plt+0x4f54>
   16078:	cmp	r4, #75	; 0x4b
   1607c:	beq	16160 <tcgetattr@plt+0x4f94>
   16080:	bhi	16100 <tcgetattr@plt+0x4f34>
   16084:	cmp	r4, #69	; 0x45
   16088:	beq	16188 <tcgetattr@plt+0x4fbc>
   1608c:	cmp	r4, #71	; 0x47
   16090:	beq	16194 <tcgetattr@plt+0x4fc8>
   16094:	cmp	r4, #66	; 0x42
   16098:	moveq	r1, #1024	; 0x400
   1609c:	bne	15fc4 <tcgetattr@plt+0x4df8>
   160a0:	add	r0, sp, #4
   160a4:	bl	15dec <tcgetattr@plt+0x4c20>
   160a8:	ldr	r3, [r7]
   160ac:	orr	r5, r5, r0
   160b0:	add	r2, r3, r6
   160b4:	str	r2, [r7]
   160b8:	ldrb	r3, [r3, r6]
   160bc:	cmp	r3, #0
   160c0:	orrne	r5, r5, #2
   160c4:	ldr	r3, [sp, #4]
   160c8:	str	r3, [r8]
   160cc:	b	15fd0 <tcgetattr@plt+0x4e04>
   160d0:	cmp	r4, #109	; 0x6d
   160d4:	beq	16034 <tcgetattr@plt+0x4e68>
   160d8:	cmp	r4, #116	; 0x74
   160dc:	beq	16034 <tcgetattr@plt+0x4e68>
   160e0:	cmp	r4, #107	; 0x6b
   160e4:	b	16000 <tcgetattr@plt+0x4e34>
   160e8:	ldrb	r6, [r6, #2]
   160ec:	cmp	r6, #66	; 0x42
   160f0:	movne	r6, #1
   160f4:	moveq	r6, #3
   160f8:	mov	r1, #1024	; 0x400
   160fc:	b	1606c <tcgetattr@plt+0x4ea0>
   16100:	cmp	r4, #80	; 0x50
   16104:	beq	1619c <tcgetattr@plt+0x4fd0>
   16108:	cmp	r4, #84	; 0x54
   1610c:	beq	161a4 <tcgetattr@plt+0x4fd8>
   16110:	cmp	r4, #77	; 0x4d
   16114:	bne	15fc4 <tcgetattr@plt+0x4df8>
   16118:	mov	r2, #2
   1611c:	b	1618c <tcgetattr@plt+0x4fc0>
   16120:	cmp	r4, #103	; 0x67
   16124:	beq	16194 <tcgetattr@plt+0x4fc8>
   16128:	bhi	1614c <tcgetattr@plt+0x4f80>
   1612c:	cmp	r4, #98	; 0x62
   16130:	beq	16180 <tcgetattr@plt+0x4fb4>
   16134:	cmp	r4, #99	; 0x63
   16138:	beq	161bc <tcgetattr@plt+0x4ff0>
   1613c:	cmp	r4, #90	; 0x5a
   16140:	bne	15fc4 <tcgetattr@plt+0x4df8>
   16144:	mov	r2, #7
   16148:	b	1618c <tcgetattr@plt+0x4fc0>
   1614c:	cmp	r4, #109	; 0x6d
   16150:	beq	16118 <tcgetattr@plt+0x4f4c>
   16154:	bhi	16168 <tcgetattr@plt+0x4f9c>
   16158:	cmp	r4, #107	; 0x6b
   1615c:	bne	15fc4 <tcgetattr@plt+0x4df8>
   16160:	mov	r2, #1
   16164:	b	1618c <tcgetattr@plt+0x4fc0>
   16168:	cmp	r4, #116	; 0x74
   1616c:	beq	161a4 <tcgetattr@plt+0x4fd8>
   16170:	cmp	r4, #119	; 0x77
   16174:	moveq	r1, #2
   16178:	beq	160a0 <tcgetattr@plt+0x4ed4>
   1617c:	b	15fc4 <tcgetattr@plt+0x4df8>
   16180:	mov	r1, #512	; 0x200
   16184:	b	160a0 <tcgetattr@plt+0x4ed4>
   16188:	mov	r2, #6
   1618c:	add	r0, sp, #4
   16190:	b	161ac <tcgetattr@plt+0x4fe0>
   16194:	mov	r2, #3
   16198:	b	1618c <tcgetattr@plt+0x4fc0>
   1619c:	mov	r2, #5
   161a0:	b	1618c <tcgetattr@plt+0x4fc0>
   161a4:	mov	r2, #4
   161a8:	add	r0, sp, r2
   161ac:	bl	15ea4 <tcgetattr@plt+0x4cd8>
   161b0:	b	160a8 <tcgetattr@plt+0x4edc>
   161b4:	mov	r2, #8
   161b8:	b	1618c <tcgetattr@plt+0x4fc0>
   161bc:	mov	r0, #0
   161c0:	b	160a8 <tcgetattr@plt+0x4edc>
   161c4:	andeq	sl, r1, r6, lsr #10
   161c8:	andeq	sl, r1, lr, lsr #10
   161cc:	andeq	sl, r1, ip, lsr r5
   161d0:	push	{r4, r5, r6, lr}
   161d4:	subs	r5, r1, #0
   161d8:	mov	r4, r0
   161dc:	bge	1621c <tcgetattr@plt+0x5050>
   161e0:	ldm	r0, {r0, r3}
   161e4:	orr	r0, r0, r3
   161e8:	adds	r0, r0, #0
   161ec:	movne	r0, #1
   161f0:	cmp	r0, #0
   161f4:	bne	16250 <tcgetattr@plt+0x5084>
   161f8:	ldr	r2, [r4]
   161fc:	asr	r3, r5, #31
   16200:	ldr	r1, [r4, #4]
   16204:	mul	r3, r3, r2
   16208:	mla	r1, r5, r1, r3
   1620c:	umull	r2, r3, r2, r5
   16210:	add	r3, r1, r3
   16214:	strd	r2, [r4]
   16218:	pop	{r4, r5, r6, pc}
   1621c:	moveq	r0, r5
   16220:	beq	161f0 <tcgetattr@plt+0x5024>
   16224:	mov	r2, r5
   16228:	asr	r3, r5, #31
   1622c:	mvn	r0, #0
   16230:	mvn	r1, #0
   16234:	bl	16ea8 <tcgetattr@plt+0x5cdc>
   16238:	ldrd	r2, [r4]
   1623c:	cmp	r1, r3
   16240:	cmpeq	r0, r2
   16244:	movcc	r0, #1
   16248:	movcs	r0, #0
   1624c:	b	161f0 <tcgetattr@plt+0x5024>
   16250:	mvn	r2, #0
   16254:	mvn	r3, #0
   16258:	mov	r0, #1
   1625c:	strd	r2, [r4]
   16260:	pop	{r4, r5, r6, pc}
   16264:	push	{r4, r5, r6, r7, r8, lr}
   16268:	mov	r6, r0
   1626c:	mov	r7, r1
   16270:	mov	r5, r2
   16274:	mov	r4, #0
   16278:	cmp	r5, #0
   1627c:	bne	16288 <tcgetattr@plt+0x50bc>
   16280:	mov	r0, r4
   16284:	pop	{r4, r5, r6, r7, r8, pc}
   16288:	mov	r1, r7
   1628c:	mov	r0, r6
   16290:	bl	161d0 <tcgetattr@plt+0x5004>
   16294:	sub	r5, r5, #1
   16298:	orr	r4, r4, r0
   1629c:	b	16278 <tcgetattr@plt+0x50ac>
   162a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162a4:	sub	sp, sp, #20
   162a8:	cmp	r2, #36	; 0x24
   162ac:	ldr	r9, [sp, #56]	; 0x38
   162b0:	bls	162c8 <tcgetattr@plt+0x50fc>
   162b4:	ldr	r3, [pc, #772]	; 165c0 <tcgetattr@plt+0x53f4>
   162b8:	mov	r2, #85	; 0x55
   162bc:	ldr	r1, [pc, #768]	; 165c4 <tcgetattr@plt+0x53f8>
   162c0:	ldr	r0, [pc, #768]	; 165c8 <tcgetattr@plt+0x53fc>
   162c4:	bl	111c0 <__assert_fail@plt>
   162c8:	cmp	r1, #0
   162cc:	mov	r7, r1
   162d0:	mov	r4, r0
   162d4:	mov	fp, r2
   162d8:	mov	r8, r3
   162dc:	addeq	r7, sp, #4
   162e0:	bl	110d0 <__errno_location@plt>
   162e4:	mov	r3, #0
   162e8:	str	r3, [r0]
   162ec:	mov	sl, r0
   162f0:	bl	1107c <__ctype_b_loc@plt>
   162f4:	ldrb	r6, [r4]
   162f8:	mov	r3, r4
   162fc:	ldr	r1, [r0]
   16300:	lsl	r2, r6, #1
   16304:	ldrh	r5, [r1, r2]
   16308:	ands	r5, r5, #8192	; 0x2000
   1630c:	bne	16328 <tcgetattr@plt+0x515c>
   16310:	cmp	r6, #45	; 0x2d
   16314:	bne	16330 <tcgetattr@plt+0x5164>
   16318:	mov	r5, #4
   1631c:	mov	r0, r5
   16320:	add	sp, sp, #20
   16324:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16328:	ldrb	r6, [r3, #1]!
   1632c:	b	16300 <tcgetattr@plt+0x5134>
   16330:	mov	r2, fp
   16334:	mov	r1, r7
   16338:	mov	r0, r4
   1633c:	bl	11118 <strtoumax@plt>
   16340:	ldr	r6, [r7]
   16344:	cmp	r4, r6
   16348:	strd	r0, [sp, #8]
   1634c:	bne	163b0 <tcgetattr@plt+0x51e4>
   16350:	cmp	r9, #0
   16354:	beq	16318 <tcgetattr@plt+0x514c>
   16358:	ldrb	r1, [r6]
   1635c:	cmp	r1, #0
   16360:	beq	16318 <tcgetattr@plt+0x514c>
   16364:	mov	r0, r9
   16368:	bl	110ac <strchr@plt>
   1636c:	cmp	r0, #0
   16370:	beq	16318 <tcgetattr@plt+0x514c>
   16374:	mov	r2, #1
   16378:	mov	r3, #0
   1637c:	strd	r2, [sp, #8]
   16380:	ldrb	r4, [r6]
   16384:	cmp	r4, #0
   16388:	beq	164c0 <tcgetattr@plt+0x52f4>
   1638c:	mov	r1, r4
   16390:	mov	r0, r9
   16394:	bl	110ac <strchr@plt>
   16398:	cmp	r0, #0
   1639c:	bne	163d8 <tcgetattr@plt+0x520c>
   163a0:	ldrd	r2, [sp, #8]
   163a4:	orr	r5, r5, #2
   163a8:	strd	r2, [r8]
   163ac:	b	1631c <tcgetattr@plt+0x5150>
   163b0:	ldr	r5, [sl]
   163b4:	cmp	r5, #0
   163b8:	beq	163c8 <tcgetattr@plt+0x51fc>
   163bc:	cmp	r5, #34	; 0x22
   163c0:	bne	16318 <tcgetattr@plt+0x514c>
   163c4:	mov	r5, #1
   163c8:	cmp	r9, #0
   163cc:	bne	16380 <tcgetattr@plt+0x51b4>
   163d0:	strd	r0, [r8]
   163d4:	b	1631c <tcgetattr@plt+0x5150>
   163d8:	cmp	r4, #84	; 0x54
   163dc:	beq	16430 <tcgetattr@plt+0x5264>
   163e0:	bhi	16418 <tcgetattr@plt+0x524c>
   163e4:	cmp	r4, #75	; 0x4b
   163e8:	beq	16430 <tcgetattr@plt+0x5264>
   163ec:	bhi	16408 <tcgetattr@plt+0x523c>
   163f0:	cmp	r4, #69	; 0x45
   163f4:	beq	16430 <tcgetattr@plt+0x5264>
   163f8:	cmp	r4, #71	; 0x47
   163fc:	beq	16430 <tcgetattr@plt+0x5264>
   16400:	mov	r6, #1
   16404:	b	164f4 <tcgetattr@plt+0x5328>
   16408:	cmp	r4, #77	; 0x4d
   1640c:	beq	16430 <tcgetattr@plt+0x5264>
   16410:	cmp	r4, #80	; 0x50
   16414:	b	163fc <tcgetattr@plt+0x5230>
   16418:	cmp	r4, #103	; 0x67
   1641c:	beq	16430 <tcgetattr@plt+0x5264>
   16420:	bhi	164cc <tcgetattr@plt+0x5300>
   16424:	sub	r3, r4, #89	; 0x59
   16428:	cmp	r3, #1
   1642c:	bhi	16400 <tcgetattr@plt+0x5234>
   16430:	mov	r1, #48	; 0x30
   16434:	mov	r0, r9
   16438:	bl	110ac <strchr@plt>
   1643c:	cmp	r0, #0
   16440:	beq	16400 <tcgetattr@plt+0x5234>
   16444:	ldrb	r3, [r6, #1]
   16448:	cmp	r3, #68	; 0x44
   1644c:	beq	16460 <tcgetattr@plt+0x5294>
   16450:	cmp	r3, #105	; 0x69
   16454:	beq	164e4 <tcgetattr@plt+0x5318>
   16458:	cmp	r3, #66	; 0x42
   1645c:	bne	16400 <tcgetattr@plt+0x5234>
   16460:	mov	r6, #2
   16464:	mov	r1, #1000	; 0x3e8
   16468:	cmp	r4, #89	; 0x59
   1646c:	beq	165a8 <tcgetattr@plt+0x53dc>
   16470:	bhi	1651c <tcgetattr@plt+0x5350>
   16474:	cmp	r4, #75	; 0x4b
   16478:	beq	1655c <tcgetattr@plt+0x5390>
   1647c:	bhi	164fc <tcgetattr@plt+0x5330>
   16480:	cmp	r4, #69	; 0x45
   16484:	beq	16584 <tcgetattr@plt+0x53b8>
   16488:	cmp	r4, #71	; 0x47
   1648c:	beq	16590 <tcgetattr@plt+0x53c4>
   16490:	cmp	r4, #66	; 0x42
   16494:	moveq	r1, #1024	; 0x400
   16498:	bne	163a0 <tcgetattr@plt+0x51d4>
   1649c:	add	r0, sp, #8
   164a0:	bl	161d0 <tcgetattr@plt+0x5004>
   164a4:	ldr	r3, [r7]
   164a8:	orr	r5, r5, r0
   164ac:	add	r2, r3, r6
   164b0:	str	r2, [r7]
   164b4:	ldrb	r3, [r3, r6]
   164b8:	cmp	r3, #0
   164bc:	orrne	r5, r5, #2
   164c0:	ldrd	r2, [sp, #8]
   164c4:	strd	r2, [r8]
   164c8:	b	1631c <tcgetattr@plt+0x5150>
   164cc:	cmp	r4, #109	; 0x6d
   164d0:	beq	16430 <tcgetattr@plt+0x5264>
   164d4:	cmp	r4, #116	; 0x74
   164d8:	beq	16430 <tcgetattr@plt+0x5264>
   164dc:	cmp	r4, #107	; 0x6b
   164e0:	b	163fc <tcgetattr@plt+0x5230>
   164e4:	ldrb	r6, [r6, #2]
   164e8:	cmp	r6, #66	; 0x42
   164ec:	movne	r6, #1
   164f0:	moveq	r6, #3
   164f4:	mov	r1, #1024	; 0x400
   164f8:	b	16468 <tcgetattr@plt+0x529c>
   164fc:	cmp	r4, #80	; 0x50
   16500:	beq	16598 <tcgetattr@plt+0x53cc>
   16504:	cmp	r4, #84	; 0x54
   16508:	beq	165a0 <tcgetattr@plt+0x53d4>
   1650c:	cmp	r4, #77	; 0x4d
   16510:	bne	163a0 <tcgetattr@plt+0x51d4>
   16514:	mov	r2, #2
   16518:	b	16588 <tcgetattr@plt+0x53bc>
   1651c:	cmp	r4, #103	; 0x67
   16520:	beq	16590 <tcgetattr@plt+0x53c4>
   16524:	bhi	16548 <tcgetattr@plt+0x537c>
   16528:	cmp	r4, #98	; 0x62
   1652c:	beq	1657c <tcgetattr@plt+0x53b0>
   16530:	cmp	r4, #99	; 0x63
   16534:	beq	165b8 <tcgetattr@plt+0x53ec>
   16538:	cmp	r4, #90	; 0x5a
   1653c:	bne	163a0 <tcgetattr@plt+0x51d4>
   16540:	mov	r2, #7
   16544:	b	16588 <tcgetattr@plt+0x53bc>
   16548:	cmp	r4, #109	; 0x6d
   1654c:	beq	16514 <tcgetattr@plt+0x5348>
   16550:	bhi	16564 <tcgetattr@plt+0x5398>
   16554:	cmp	r4, #107	; 0x6b
   16558:	bne	163a0 <tcgetattr@plt+0x51d4>
   1655c:	mov	r2, #1
   16560:	b	16588 <tcgetattr@plt+0x53bc>
   16564:	cmp	r4, #116	; 0x74
   16568:	beq	165a0 <tcgetattr@plt+0x53d4>
   1656c:	cmp	r4, #119	; 0x77
   16570:	moveq	r1, #2
   16574:	beq	1649c <tcgetattr@plt+0x52d0>
   16578:	b	163a0 <tcgetattr@plt+0x51d4>
   1657c:	mov	r1, #512	; 0x200
   16580:	b	1649c <tcgetattr@plt+0x52d0>
   16584:	mov	r2, #6
   16588:	add	r0, sp, #8
   1658c:	b	165b0 <tcgetattr@plt+0x53e4>
   16590:	mov	r2, #3
   16594:	b	16588 <tcgetattr@plt+0x53bc>
   16598:	mov	r2, #5
   1659c:	b	16588 <tcgetattr@plt+0x53bc>
   165a0:	mov	r2, #4
   165a4:	b	16588 <tcgetattr@plt+0x53bc>
   165a8:	mov	r2, #8
   165ac:	add	r0, sp, r2
   165b0:	bl	16264 <tcgetattr@plt+0x5098>
   165b4:	b	164a4 <tcgetattr@plt+0x52d8>
   165b8:	mov	r0, #0
   165bc:	b	164a4 <tcgetattr@plt+0x52d8>
   165c0:	andeq	sl, r1, r2, ror #10
   165c4:	andeq	sl, r1, lr, lsr #10
   165c8:	andeq	sl, r1, ip, lsr r5
   165cc:	cmp	r1, #0
   165d0:	cmpne	r0, #0
   165d4:	moveq	r1, #1
   165d8:	moveq	r0, r1
   165dc:	umull	r2, r3, r0, r1
   165e0:	adds	r3, r3, #0
   165e4:	movne	r3, #1
   165e8:	cmp	r2, #0
   165ec:	blt	165fc <tcgetattr@plt+0x5430>
   165f0:	cmp	r3, #0
   165f4:	bne	165fc <tcgetattr@plt+0x5430>
   165f8:	b	10ee4 <calloc@plt>
   165fc:	push	{r4, lr}
   16600:	bl	110d0 <__errno_location@plt>
   16604:	mov	r3, #12
   16608:	str	r3, [r0]
   1660c:	mov	r0, #0
   16610:	pop	{r4, pc}
   16614:	cmp	r0, #0
   16618:	mov	r3, #0
   1661c:	moveq	r0, #1
   16620:	adds	r3, r3, #0
   16624:	movne	r3, #1
   16628:	cmp	r0, #0
   1662c:	blt	1663c <tcgetattr@plt+0x5470>
   16630:	cmp	r3, #0
   16634:	bne	1663c <tcgetattr@plt+0x5470>
   16638:	b	11040 <malloc@plt>
   1663c:	push	{r4, lr}
   16640:	bl	110d0 <__errno_location@plt>
   16644:	mov	r3, #12
   16648:	str	r3, [r0]
   1664c:	mov	r0, #0
   16650:	pop	{r4, pc}
   16654:	cmp	r0, #0
   16658:	push	{r4, lr}
   1665c:	mov	r4, r1
   16660:	bne	16670 <tcgetattr@plt+0x54a4>
   16664:	mov	r0, r1
   16668:	pop	{r4, lr}
   1666c:	b	16614 <tcgetattr@plt+0x5448>
   16670:	cmp	r1, #0
   16674:	bne	16684 <tcgetattr@plt+0x54b8>
   16678:	bl	13c40 <tcgetattr@plt+0x2a74>
   1667c:	mov	r0, #0
   16680:	pop	{r4, pc}
   16684:	cmp	r1, #0
   16688:	blt	16698 <tcgetattr@plt+0x54cc>
   1668c:	mov	r3, #0
   16690:	cmp	r3, r3
   16694:	beq	166a8 <tcgetattr@plt+0x54dc>
   16698:	bl	110d0 <__errno_location@plt>
   1669c:	mov	r3, #12
   166a0:	str	r3, [r0]
   166a4:	b	1667c <tcgetattr@plt+0x54b0>
   166a8:	pop	{r4, lr}
   166ac:	b	10f98 <realloc@plt>
   166b0:	push	{r4, r5, r6, lr}
   166b4:	mov	r4, r0
   166b8:	bl	10ff8 <__fpending@plt>
   166bc:	mov	r5, r0
   166c0:	mov	r0, r4
   166c4:	bl	11004 <ferror_unlocked@plt>
   166c8:	mov	r6, r0
   166cc:	mov	r0, r4
   166d0:	bl	16720 <tcgetattr@plt+0x5554>
   166d4:	cmp	r6, #0
   166d8:	mov	r4, r0
   166dc:	bne	16708 <tcgetattr@plt+0x553c>
   166e0:	cmp	r0, #0
   166e4:	beq	16700 <tcgetattr@plt+0x5534>
   166e8:	cmp	r5, #0
   166ec:	bne	16718 <tcgetattr@plt+0x554c>
   166f0:	bl	110d0 <__errno_location@plt>
   166f4:	ldr	r4, [r0]
   166f8:	subs	r4, r4, #9
   166fc:	mvnne	r4, #0
   16700:	mov	r0, r4
   16704:	pop	{r4, r5, r6, pc}
   16708:	cmp	r0, #0
   1670c:	bne	16718 <tcgetattr@plt+0x554c>
   16710:	bl	110d0 <__errno_location@plt>
   16714:	str	r4, [r0]
   16718:	mvn	r4, #0
   1671c:	b	16700 <tcgetattr@plt+0x5534>
   16720:	push	{r0, r1, r2, r4, r5, lr}
   16724:	mov	r4, r0
   16728:	bl	1110c <fileno@plt>
   1672c:	cmp	r0, #0
   16730:	mov	r0, r4
   16734:	bge	16744 <tcgetattr@plt+0x5578>
   16738:	add	sp, sp, #12
   1673c:	pop	{r4, r5, lr}
   16740:	b	11130 <fclose@plt>
   16744:	bl	11058 <__freading@plt>
   16748:	cmp	r0, #0
   1674c:	bne	16788 <tcgetattr@plt+0x55bc>
   16750:	mov	r0, r4
   16754:	bl	167c8 <tcgetattr@plt+0x55fc>
   16758:	cmp	r0, #0
   1675c:	bne	167bc <tcgetattr@plt+0x55f0>
   16760:	mov	r5, #0
   16764:	mov	r0, r4
   16768:	bl	11130 <fclose@plt>
   1676c:	cmp	r5, #0
   16770:	beq	16780 <tcgetattr@plt+0x55b4>
   16774:	bl	110d0 <__errno_location@plt>
   16778:	str	r5, [r0]
   1677c:	mvn	r0, #0
   16780:	add	sp, sp, #12
   16784:	pop	{r4, r5, pc}
   16788:	mov	r0, r4
   1678c:	bl	1110c <fileno@plt>
   16790:	mov	r3, #1
   16794:	str	r3, [sp]
   16798:	mov	r2, #0
   1679c:	mov	r3, #0
   167a0:	bl	10fd4 <lseek64@plt>
   167a4:	mvn	r3, #0
   167a8:	mvn	r2, #0
   167ac:	cmp	r1, r3
   167b0:	cmpeq	r0, r2
   167b4:	bne	16750 <tcgetattr@plt+0x5584>
   167b8:	b	16760 <tcgetattr@plt+0x5594>
   167bc:	bl	110d0 <__errno_location@plt>
   167c0:	ldr	r5, [r0]
   167c4:	b	16764 <tcgetattr@plt+0x5598>
   167c8:	push	{r0, r1, r4, lr}
   167cc:	subs	r4, r0, #0
   167d0:	bne	167e4 <tcgetattr@plt+0x5618>
   167d4:	mov	r0, r4
   167d8:	add	sp, sp, #8
   167dc:	pop	{r4, lr}
   167e0:	b	10f20 <fflush@plt>
   167e4:	bl	11058 <__freading@plt>
   167e8:	cmp	r0, #0
   167ec:	beq	167d4 <tcgetattr@plt+0x5608>
   167f0:	ldr	r3, [r4]
   167f4:	tst	r3, #256	; 0x100
   167f8:	beq	167d4 <tcgetattr@plt+0x5608>
   167fc:	mov	r3, #1
   16800:	str	r3, [sp]
   16804:	mov	r2, #0
   16808:	mov	r3, #0
   1680c:	mov	r0, r4
   16810:	bl	16818 <tcgetattr@plt+0x564c>
   16814:	b	167d4 <tcgetattr@plt+0x5608>
   16818:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1681c:	mov	r4, r0
   16820:	ldmib	r0, {ip, lr}
   16824:	ldr	r8, [sp, #32]
   16828:	cmp	lr, ip
   1682c:	bne	16898 <tcgetattr@plt+0x56cc>
   16830:	ldr	lr, [r0, #20]
   16834:	ldr	ip, [r0, #16]
   16838:	cmp	lr, ip
   1683c:	bne	16898 <tcgetattr@plt+0x56cc>
   16840:	ldr	r5, [r0, #36]	; 0x24
   16844:	cmp	r5, #0
   16848:	bne	16898 <tcgetattr@plt+0x56cc>
   1684c:	mov	r6, r2
   16850:	mov	r7, r3
   16854:	bl	1110c <fileno@plt>
   16858:	mov	r2, r6
   1685c:	mov	r3, r7
   16860:	str	r8, [sp]
   16864:	bl	10fd4 <lseek64@plt>
   16868:	mvn	r3, #0
   1686c:	mvn	r2, #0
   16870:	cmp	r1, r3
   16874:	cmpeq	r0, r2
   16878:	mvneq	r0, #0
   1687c:	ldrne	r3, [r4]
   16880:	strdne	r0, [r4, #80]	; 0x50
   16884:	movne	r0, r5
   16888:	bicne	r3, r3, #16
   1688c:	strne	r3, [r4]
   16890:	add	sp, sp, #8
   16894:	pop	{r4, r5, r6, r7, r8, pc}
   16898:	str	r8, [sp, #32]
   1689c:	mov	r0, r4
   168a0:	add	sp, sp, #8
   168a4:	pop	{r4, r5, r6, r7, r8, lr}
   168a8:	b	1113c <fseeko64@plt>
   168ac:	push	{r4, lr}
   168b0:	mov	r0, #14
   168b4:	bl	1116c <nl_langinfo@plt>
   168b8:	ldr	r3, [pc, #24]	; 168d8 <tcgetattr@plt+0x570c>
   168bc:	cmp	r0, #0
   168c0:	moveq	r0, r3
   168c4:	ldr	r3, [pc, #16]	; 168dc <tcgetattr@plt+0x5710>
   168c8:	ldrb	r2, [r0]
   168cc:	cmp	r2, #0
   168d0:	moveq	r0, r3
   168d4:	pop	{r4, pc}
   168d8:	andeq	r9, r1, r5, rrx
   168dc:	andeq	sl, r1, sp, ror #10
   168e0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   168e4:	subs	r5, r0, #0
   168e8:	addeq	r5, sp, #4
   168ec:	mov	r0, r5
   168f0:	mov	r7, r2
   168f4:	mov	r6, r1
   168f8:	bl	11010 <mbrtowc@plt>
   168fc:	cmp	r7, #0
   16900:	cmnne	r0, #3
   16904:	mov	r4, r0
   16908:	bls	16924 <tcgetattr@plt+0x5758>
   1690c:	mov	r0, #0
   16910:	bl	1697c <tcgetattr@plt+0x57b0>
   16914:	cmp	r0, #0
   16918:	moveq	r4, #1
   1691c:	ldrbeq	r3, [r6]
   16920:	streq	r3, [r5]
   16924:	mov	r0, r4
   16928:	add	sp, sp, #12
   1692c:	pop	{r4, r5, r6, r7, pc}
   16930:	push	{r4, r5, r6, lr}
   16934:	subs	r4, r2, #0
   16938:	mov	r6, r0
   1693c:	mov	r5, r1
   16940:	beq	16958 <tcgetattr@plt+0x578c>
   16944:	mov	r1, r4
   16948:	mvn	r0, #0
   1694c:	bl	16a5c <tcgetattr@plt+0x5890>
   16950:	cmp	r0, r5
   16954:	bcc	16968 <tcgetattr@plt+0x579c>
   16958:	mul	r1, r5, r4
   1695c:	mov	r0, r6
   16960:	pop	{r4, r5, r6, lr}
   16964:	b	16654 <tcgetattr@plt+0x5488>
   16968:	bl	110d0 <__errno_location@plt>
   1696c:	mov	r3, #12
   16970:	str	r3, [r0]
   16974:	mov	r0, #0
   16978:	pop	{r4, r5, r6, pc}
   1697c:	push	{lr}		; (str lr, [sp, #-4]!)
   16980:	sub	sp, sp, #268	; 0x10c
   16984:	ldr	r2, [pc, #64]	; 169cc <tcgetattr@plt+0x5800>
   16988:	add	r1, sp, #4
   1698c:	bl	169d8 <tcgetattr@plt+0x580c>
   16990:	cmp	r0, #0
   16994:	movne	r0, #0
   16998:	bne	169c4 <tcgetattr@plt+0x57f8>
   1699c:	ldr	r1, [pc, #44]	; 169d0 <tcgetattr@plt+0x5804>
   169a0:	add	r0, sp, #4
   169a4:	bl	10f08 <strcmp@plt>
   169a8:	cmp	r0, #0
   169ac:	beq	169c4 <tcgetattr@plt+0x57f8>
   169b0:	ldr	r1, [pc, #28]	; 169d4 <tcgetattr@plt+0x5808>
   169b4:	add	r0, sp, #4
   169b8:	bl	10f08 <strcmp@plt>
   169bc:	adds	r0, r0, #0
   169c0:	movne	r0, #1
   169c4:	add	sp, sp, #268	; 0x10c
   169c8:	pop	{pc}		; (ldr pc, [sp], #4)
   169cc:	andeq	r0, r0, r1, lsl #2
   169d0:	andeq	sl, r1, r3, ror r5
   169d4:	andeq	sl, r1, r5, ror r5
   169d8:	push	{r4, r5, r6, lr}
   169dc:	mov	r5, r1
   169e0:	mov	r1, #0
   169e4:	mov	r4, r2
   169e8:	bl	11154 <setlocale@plt>
   169ec:	subs	r6, r0, #0
   169f0:	bne	16a04 <tcgetattr@plt+0x5838>
   169f4:	cmp	r4, #0
   169f8:	strbne	r6, [r5]
   169fc:	mov	r0, #22
   16a00:	pop	{r4, r5, r6, pc}
   16a04:	bl	110a0 <strlen@plt>
   16a08:	cmp	r4, r0
   16a0c:	bls	16a28 <tcgetattr@plt+0x585c>
   16a10:	add	r2, r0, #1
   16a14:	mov	r1, r6
   16a18:	mov	r0, r5
   16a1c:	bl	10f44 <memcpy@plt>
   16a20:	mov	r0, #0
   16a24:	pop	{r4, r5, r6, pc}
   16a28:	cmp	r4, #0
   16a2c:	beq	16a4c <tcgetattr@plt+0x5880>
   16a30:	sub	r4, r4, #1
   16a34:	mov	r2, r4
   16a38:	mov	r1, r6
   16a3c:	mov	r0, r5
   16a40:	bl	10f44 <memcpy@plt>
   16a44:	mov	r3, #0
   16a48:	strb	r3, [r5, r4]
   16a4c:	mov	r0, #34	; 0x22
   16a50:	pop	{r4, r5, r6, pc}
   16a54:	mov	r1, #0
   16a58:	b	11154 <setlocale@plt>
   16a5c:	subs	r2, r1, #1
   16a60:	bxeq	lr
   16a64:	bcc	16c3c <tcgetattr@plt+0x5a70>
   16a68:	cmp	r0, r1
   16a6c:	bls	16c20 <tcgetattr@plt+0x5a54>
   16a70:	tst	r1, r2
   16a74:	beq	16c2c <tcgetattr@plt+0x5a60>
   16a78:	clz	r3, r0
   16a7c:	clz	r2, r1
   16a80:	sub	r3, r2, r3
   16a84:	rsbs	r3, r3, #31
   16a88:	addne	r3, r3, r3, lsl #1
   16a8c:	mov	r2, #0
   16a90:	addne	pc, pc, r3, lsl #2
   16a94:	nop			; (mov r0, r0)
   16a98:	cmp	r0, r1, lsl #31
   16a9c:	adc	r2, r2, r2
   16aa0:	subcs	r0, r0, r1, lsl #31
   16aa4:	cmp	r0, r1, lsl #30
   16aa8:	adc	r2, r2, r2
   16aac:	subcs	r0, r0, r1, lsl #30
   16ab0:	cmp	r0, r1, lsl #29
   16ab4:	adc	r2, r2, r2
   16ab8:	subcs	r0, r0, r1, lsl #29
   16abc:	cmp	r0, r1, lsl #28
   16ac0:	adc	r2, r2, r2
   16ac4:	subcs	r0, r0, r1, lsl #28
   16ac8:	cmp	r0, r1, lsl #27
   16acc:	adc	r2, r2, r2
   16ad0:	subcs	r0, r0, r1, lsl #27
   16ad4:	cmp	r0, r1, lsl #26
   16ad8:	adc	r2, r2, r2
   16adc:	subcs	r0, r0, r1, lsl #26
   16ae0:	cmp	r0, r1, lsl #25
   16ae4:	adc	r2, r2, r2
   16ae8:	subcs	r0, r0, r1, lsl #25
   16aec:	cmp	r0, r1, lsl #24
   16af0:	adc	r2, r2, r2
   16af4:	subcs	r0, r0, r1, lsl #24
   16af8:	cmp	r0, r1, lsl #23
   16afc:	adc	r2, r2, r2
   16b00:	subcs	r0, r0, r1, lsl #23
   16b04:	cmp	r0, r1, lsl #22
   16b08:	adc	r2, r2, r2
   16b0c:	subcs	r0, r0, r1, lsl #22
   16b10:	cmp	r0, r1, lsl #21
   16b14:	adc	r2, r2, r2
   16b18:	subcs	r0, r0, r1, lsl #21
   16b1c:	cmp	r0, r1, lsl #20
   16b20:	adc	r2, r2, r2
   16b24:	subcs	r0, r0, r1, lsl #20
   16b28:	cmp	r0, r1, lsl #19
   16b2c:	adc	r2, r2, r2
   16b30:	subcs	r0, r0, r1, lsl #19
   16b34:	cmp	r0, r1, lsl #18
   16b38:	adc	r2, r2, r2
   16b3c:	subcs	r0, r0, r1, lsl #18
   16b40:	cmp	r0, r1, lsl #17
   16b44:	adc	r2, r2, r2
   16b48:	subcs	r0, r0, r1, lsl #17
   16b4c:	cmp	r0, r1, lsl #16
   16b50:	adc	r2, r2, r2
   16b54:	subcs	r0, r0, r1, lsl #16
   16b58:	cmp	r0, r1, lsl #15
   16b5c:	adc	r2, r2, r2
   16b60:	subcs	r0, r0, r1, lsl #15
   16b64:	cmp	r0, r1, lsl #14
   16b68:	adc	r2, r2, r2
   16b6c:	subcs	r0, r0, r1, lsl #14
   16b70:	cmp	r0, r1, lsl #13
   16b74:	adc	r2, r2, r2
   16b78:	subcs	r0, r0, r1, lsl #13
   16b7c:	cmp	r0, r1, lsl #12
   16b80:	adc	r2, r2, r2
   16b84:	subcs	r0, r0, r1, lsl #12
   16b88:	cmp	r0, r1, lsl #11
   16b8c:	adc	r2, r2, r2
   16b90:	subcs	r0, r0, r1, lsl #11
   16b94:	cmp	r0, r1, lsl #10
   16b98:	adc	r2, r2, r2
   16b9c:	subcs	r0, r0, r1, lsl #10
   16ba0:	cmp	r0, r1, lsl #9
   16ba4:	adc	r2, r2, r2
   16ba8:	subcs	r0, r0, r1, lsl #9
   16bac:	cmp	r0, r1, lsl #8
   16bb0:	adc	r2, r2, r2
   16bb4:	subcs	r0, r0, r1, lsl #8
   16bb8:	cmp	r0, r1, lsl #7
   16bbc:	adc	r2, r2, r2
   16bc0:	subcs	r0, r0, r1, lsl #7
   16bc4:	cmp	r0, r1, lsl #6
   16bc8:	adc	r2, r2, r2
   16bcc:	subcs	r0, r0, r1, lsl #6
   16bd0:	cmp	r0, r1, lsl #5
   16bd4:	adc	r2, r2, r2
   16bd8:	subcs	r0, r0, r1, lsl #5
   16bdc:	cmp	r0, r1, lsl #4
   16be0:	adc	r2, r2, r2
   16be4:	subcs	r0, r0, r1, lsl #4
   16be8:	cmp	r0, r1, lsl #3
   16bec:	adc	r2, r2, r2
   16bf0:	subcs	r0, r0, r1, lsl #3
   16bf4:	cmp	r0, r1, lsl #2
   16bf8:	adc	r2, r2, r2
   16bfc:	subcs	r0, r0, r1, lsl #2
   16c00:	cmp	r0, r1, lsl #1
   16c04:	adc	r2, r2, r2
   16c08:	subcs	r0, r0, r1, lsl #1
   16c0c:	cmp	r0, r1
   16c10:	adc	r2, r2, r2
   16c14:	subcs	r0, r0, r1
   16c18:	mov	r0, r2
   16c1c:	bx	lr
   16c20:	moveq	r0, #1
   16c24:	movne	r0, #0
   16c28:	bx	lr
   16c2c:	clz	r2, r1
   16c30:	rsb	r2, r2, #31
   16c34:	lsr	r0, r0, r2
   16c38:	bx	lr
   16c3c:	cmp	r0, #0
   16c40:	mvnne	r0, #0
   16c44:	b	16ee4 <tcgetattr@plt+0x5d18>
   16c48:	cmp	r1, #0
   16c4c:	beq	16c3c <tcgetattr@plt+0x5a70>
   16c50:	push	{r0, r1, lr}
   16c54:	bl	16a5c <tcgetattr@plt+0x5890>
   16c58:	pop	{r1, r2, lr}
   16c5c:	mul	r3, r2, r0
   16c60:	sub	r1, r1, r3
   16c64:	bx	lr
   16c68:	cmp	r1, #0
   16c6c:	beq	16e78 <tcgetattr@plt+0x5cac>
   16c70:	eor	ip, r0, r1
   16c74:	rsbmi	r1, r1, #0
   16c78:	subs	r2, r1, #1
   16c7c:	beq	16e44 <tcgetattr@plt+0x5c78>
   16c80:	movs	r3, r0
   16c84:	rsbmi	r3, r0, #0
   16c88:	cmp	r3, r1
   16c8c:	bls	16e50 <tcgetattr@plt+0x5c84>
   16c90:	tst	r1, r2
   16c94:	beq	16e60 <tcgetattr@plt+0x5c94>
   16c98:	clz	r2, r3
   16c9c:	clz	r0, r1
   16ca0:	sub	r2, r0, r2
   16ca4:	rsbs	r2, r2, #31
   16ca8:	addne	r2, r2, r2, lsl #1
   16cac:	mov	r0, #0
   16cb0:	addne	pc, pc, r2, lsl #2
   16cb4:	nop			; (mov r0, r0)
   16cb8:	cmp	r3, r1, lsl #31
   16cbc:	adc	r0, r0, r0
   16cc0:	subcs	r3, r3, r1, lsl #31
   16cc4:	cmp	r3, r1, lsl #30
   16cc8:	adc	r0, r0, r0
   16ccc:	subcs	r3, r3, r1, lsl #30
   16cd0:	cmp	r3, r1, lsl #29
   16cd4:	adc	r0, r0, r0
   16cd8:	subcs	r3, r3, r1, lsl #29
   16cdc:	cmp	r3, r1, lsl #28
   16ce0:	adc	r0, r0, r0
   16ce4:	subcs	r3, r3, r1, lsl #28
   16ce8:	cmp	r3, r1, lsl #27
   16cec:	adc	r0, r0, r0
   16cf0:	subcs	r3, r3, r1, lsl #27
   16cf4:	cmp	r3, r1, lsl #26
   16cf8:	adc	r0, r0, r0
   16cfc:	subcs	r3, r3, r1, lsl #26
   16d00:	cmp	r3, r1, lsl #25
   16d04:	adc	r0, r0, r0
   16d08:	subcs	r3, r3, r1, lsl #25
   16d0c:	cmp	r3, r1, lsl #24
   16d10:	adc	r0, r0, r0
   16d14:	subcs	r3, r3, r1, lsl #24
   16d18:	cmp	r3, r1, lsl #23
   16d1c:	adc	r0, r0, r0
   16d20:	subcs	r3, r3, r1, lsl #23
   16d24:	cmp	r3, r1, lsl #22
   16d28:	adc	r0, r0, r0
   16d2c:	subcs	r3, r3, r1, lsl #22
   16d30:	cmp	r3, r1, lsl #21
   16d34:	adc	r0, r0, r0
   16d38:	subcs	r3, r3, r1, lsl #21
   16d3c:	cmp	r3, r1, lsl #20
   16d40:	adc	r0, r0, r0
   16d44:	subcs	r3, r3, r1, lsl #20
   16d48:	cmp	r3, r1, lsl #19
   16d4c:	adc	r0, r0, r0
   16d50:	subcs	r3, r3, r1, lsl #19
   16d54:	cmp	r3, r1, lsl #18
   16d58:	adc	r0, r0, r0
   16d5c:	subcs	r3, r3, r1, lsl #18
   16d60:	cmp	r3, r1, lsl #17
   16d64:	adc	r0, r0, r0
   16d68:	subcs	r3, r3, r1, lsl #17
   16d6c:	cmp	r3, r1, lsl #16
   16d70:	adc	r0, r0, r0
   16d74:	subcs	r3, r3, r1, lsl #16
   16d78:	cmp	r3, r1, lsl #15
   16d7c:	adc	r0, r0, r0
   16d80:	subcs	r3, r3, r1, lsl #15
   16d84:	cmp	r3, r1, lsl #14
   16d88:	adc	r0, r0, r0
   16d8c:	subcs	r3, r3, r1, lsl #14
   16d90:	cmp	r3, r1, lsl #13
   16d94:	adc	r0, r0, r0
   16d98:	subcs	r3, r3, r1, lsl #13
   16d9c:	cmp	r3, r1, lsl #12
   16da0:	adc	r0, r0, r0
   16da4:	subcs	r3, r3, r1, lsl #12
   16da8:	cmp	r3, r1, lsl #11
   16dac:	adc	r0, r0, r0
   16db0:	subcs	r3, r3, r1, lsl #11
   16db4:	cmp	r3, r1, lsl #10
   16db8:	adc	r0, r0, r0
   16dbc:	subcs	r3, r3, r1, lsl #10
   16dc0:	cmp	r3, r1, lsl #9
   16dc4:	adc	r0, r0, r0
   16dc8:	subcs	r3, r3, r1, lsl #9
   16dcc:	cmp	r3, r1, lsl #8
   16dd0:	adc	r0, r0, r0
   16dd4:	subcs	r3, r3, r1, lsl #8
   16dd8:	cmp	r3, r1, lsl #7
   16ddc:	adc	r0, r0, r0
   16de0:	subcs	r3, r3, r1, lsl #7
   16de4:	cmp	r3, r1, lsl #6
   16de8:	adc	r0, r0, r0
   16dec:	subcs	r3, r3, r1, lsl #6
   16df0:	cmp	r3, r1, lsl #5
   16df4:	adc	r0, r0, r0
   16df8:	subcs	r3, r3, r1, lsl #5
   16dfc:	cmp	r3, r1, lsl #4
   16e00:	adc	r0, r0, r0
   16e04:	subcs	r3, r3, r1, lsl #4
   16e08:	cmp	r3, r1, lsl #3
   16e0c:	adc	r0, r0, r0
   16e10:	subcs	r3, r3, r1, lsl #3
   16e14:	cmp	r3, r1, lsl #2
   16e18:	adc	r0, r0, r0
   16e1c:	subcs	r3, r3, r1, lsl #2
   16e20:	cmp	r3, r1, lsl #1
   16e24:	adc	r0, r0, r0
   16e28:	subcs	r3, r3, r1, lsl #1
   16e2c:	cmp	r3, r1
   16e30:	adc	r0, r0, r0
   16e34:	subcs	r3, r3, r1
   16e38:	cmp	ip, #0
   16e3c:	rsbmi	r0, r0, #0
   16e40:	bx	lr
   16e44:	teq	ip, r0
   16e48:	rsbmi	r0, r0, #0
   16e4c:	bx	lr
   16e50:	movcc	r0, #0
   16e54:	asreq	r0, ip, #31
   16e58:	orreq	r0, r0, #1
   16e5c:	bx	lr
   16e60:	clz	r2, r1
   16e64:	rsb	r2, r2, #31
   16e68:	cmp	ip, #0
   16e6c:	lsr	r0, r3, r2
   16e70:	rsbmi	r0, r0, #0
   16e74:	bx	lr
   16e78:	cmp	r0, #0
   16e7c:	mvngt	r0, #-2147483648	; 0x80000000
   16e80:	movlt	r0, #-2147483648	; 0x80000000
   16e84:	b	16ee4 <tcgetattr@plt+0x5d18>
   16e88:	cmp	r1, #0
   16e8c:	beq	16e78 <tcgetattr@plt+0x5cac>
   16e90:	push	{r0, r1, lr}
   16e94:	bl	16c70 <tcgetattr@plt+0x5aa4>
   16e98:	pop	{r1, r2, lr}
   16e9c:	mul	r3, r2, r0
   16ea0:	sub	r1, r1, r3
   16ea4:	bx	lr
   16ea8:	cmp	r3, #0
   16eac:	cmpeq	r2, #0
   16eb0:	bne	16ec8 <tcgetattr@plt+0x5cfc>
   16eb4:	cmp	r1, #0
   16eb8:	cmpeq	r0, #0
   16ebc:	mvnne	r1, #0
   16ec0:	mvnne	r0, #0
   16ec4:	b	16ee4 <tcgetattr@plt+0x5d18>
   16ec8:	sub	sp, sp, #8
   16ecc:	push	{sp, lr}
   16ed0:	bl	16ef4 <tcgetattr@plt+0x5d28>
   16ed4:	ldr	lr, [sp, #4]
   16ed8:	add	sp, sp, #8
   16edc:	pop	{r2, r3}
   16ee0:	bx	lr
   16ee4:	push	{r1, lr}
   16ee8:	mov	r0, #8
   16eec:	bl	10efc <raise@plt>
   16ef0:	pop	{r1, pc}
   16ef4:	cmp	r1, r3
   16ef8:	push	{r4, r5, r6, r7, r8, r9, lr}
   16efc:	cmpeq	r0, r2
   16f00:	mov	r4, r0
   16f04:	mov	r5, r1
   16f08:	ldr	r9, [sp, #28]
   16f0c:	movcc	r0, #0
   16f10:	movcc	r1, #0
   16f14:	bcc	1700c <tcgetattr@plt+0x5e40>
   16f18:	cmp	r3, #0
   16f1c:	clzeq	ip, r2
   16f20:	clzne	ip, r3
   16f24:	addeq	ip, ip, #32
   16f28:	cmp	r5, #0
   16f2c:	clzeq	r1, r4
   16f30:	addeq	r1, r1, #32
   16f34:	clzne	r1, r5
   16f38:	sub	ip, ip, r1
   16f3c:	sub	lr, ip, #32
   16f40:	lsl	r7, r3, ip
   16f44:	rsb	r8, ip, #32
   16f48:	orr	r7, r7, r2, lsl lr
   16f4c:	orr	r7, r7, r2, lsr r8
   16f50:	lsl	r6, r2, ip
   16f54:	cmp	r5, r7
   16f58:	cmpeq	r4, r6
   16f5c:	movcc	r0, #0
   16f60:	movcc	r1, #0
   16f64:	bcc	16f80 <tcgetattr@plt+0x5db4>
   16f68:	mov	r3, #1
   16f6c:	subs	r4, r4, r6
   16f70:	lsl	r1, r3, lr
   16f74:	lsl	r0, r3, ip
   16f78:	orr	r1, r1, r3, lsr r8
   16f7c:	sbc	r5, r5, r7
   16f80:	cmp	ip, #0
   16f84:	beq	1700c <tcgetattr@plt+0x5e40>
   16f88:	lsrs	r3, r7, #1
   16f8c:	rrx	r2, r6
   16f90:	mov	r6, ip
   16f94:	b	16fb8 <tcgetattr@plt+0x5dec>
   16f98:	subs	r4, r4, r2
   16f9c:	sbc	r5, r5, r3
   16fa0:	adds	r4, r4, r4
   16fa4:	adc	r5, r5, r5
   16fa8:	adds	r4, r4, #1
   16fac:	adc	r5, r5, #0
   16fb0:	subs	r6, r6, #1
   16fb4:	beq	16fd4 <tcgetattr@plt+0x5e08>
   16fb8:	cmp	r5, r3
   16fbc:	cmpeq	r4, r2
   16fc0:	bcs	16f98 <tcgetattr@plt+0x5dcc>
   16fc4:	adds	r4, r4, r4
   16fc8:	adc	r5, r5, r5
   16fcc:	subs	r6, r6, #1
   16fd0:	bne	16fb8 <tcgetattr@plt+0x5dec>
   16fd4:	lsr	r6, r4, ip
   16fd8:	lsr	r7, r5, ip
   16fdc:	orr	r6, r6, r5, lsl r8
   16fe0:	adds	r2, r0, r4
   16fe4:	orr	r6, r6, r5, lsr lr
   16fe8:	adc	r3, r1, r5
   16fec:	lsl	r1, r7, ip
   16ff0:	orr	r1, r1, r6, lsl lr
   16ff4:	lsl	r0, r6, ip
   16ff8:	orr	r1, r1, r6, lsr r8
   16ffc:	subs	r0, r2, r0
   17000:	mov	r4, r6
   17004:	mov	r5, r7
   17008:	sbc	r1, r3, r1
   1700c:	cmp	r9, #0
   17010:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   17014:	strd	r4, [r9]
   17018:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1701c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17020:	mov	r7, r0
   17024:	ldr	r6, [pc, #72]	; 17074 <tcgetattr@plt+0x5ea8>
   17028:	ldr	r5, [pc, #72]	; 17078 <tcgetattr@plt+0x5eac>
   1702c:	add	r6, pc, r6
   17030:	add	r5, pc, r5
   17034:	sub	r6, r6, r5
   17038:	mov	r8, r1
   1703c:	mov	r9, r2
   17040:	bl	10ec4 <calloc@plt-0x20>
   17044:	asrs	r6, r6, #2
   17048:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1704c:	mov	r4, #0
   17050:	add	r4, r4, #1
   17054:	ldr	r3, [r5], #4
   17058:	mov	r2, r9
   1705c:	mov	r1, r8
   17060:	mov	r0, r7
   17064:	blx	r3
   17068:	cmp	r6, r4
   1706c:	bne	17050 <tcgetattr@plt+0x5e84>
   17070:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17074:	ldrdeq	r3, [r1], -ip
   17078:	ldrdeq	r3, [r1], -r4
   1707c:	bx	lr
   17080:	ldr	r3, [pc, #12]	; 17094 <tcgetattr@plt+0x5ec8>
   17084:	mov	r1, #0
   17088:	add	r3, pc, r3
   1708c:	ldr	r2, [r3]
   17090:	b	110dc <__cxa_atexit@plt>
   17094:	andeq	r4, r1, r0, lsl #1

Disassembly of section .fini:

00017098 <.fini>:
   17098:	push	{r3, lr}
   1709c:	pop	{r3, pc}
