
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

00000550 <_init>:
 550:	push	{r3, lr}
 554:	bl	630 <call_weak_fn>
 558:	pop	{r3, pc}

Disassembly of section .plt:

0000055c <.plt>:
 55c:	push	{lr}		; (str lr, [sp, #-4]!)
 560:	ldr	lr, [pc, #4]	; 56c <.plt+0x10>
 564:	add	lr, pc, lr
 568:	ldr	pc, [lr, #8]!
 56c:	.word	0x00011a94

00000570 <calloc@plt>:
 570:	add	ip, pc, #0, 12
 574:	add	ip, ip, #69632	; 0x11000
 578:	ldr	pc, [ip, #2708]!	; 0xa94

0000057c <strcmp@plt>:
 57c:	add	ip, pc, #0, 12
 580:	add	ip, ip, #69632	; 0x11000
 584:	ldr	pc, [ip, #2700]!	; 0xa8c

00000588 <__cxa_finalize@plt>:
 588:	add	ip, pc, #0, 12
 58c:	add	ip, ip, #69632	; 0x11000
 590:	ldr	pc, [ip, #2692]!	; 0xa84

00000594 <free@plt>:
 594:	add	ip, pc, #0, 12
 598:	add	ip, ip, #69632	; 0x11000
 59c:	ldr	pc, [ip, #2684]!	; 0xa7c

000005a0 <ferror@plt>:
 5a0:	add	ip, pc, #0, 12
 5a4:	add	ip, ip, #69632	; 0x11000
 5a8:	ldr	pc, [ip, #2676]!	; 0xa74

000005ac <strdup@plt>:
 5ac:	add	ip, pc, #0, 12
 5b0:	add	ip, ip, #69632	; 0x11000
 5b4:	ldr	pc, [ip, #2668]!	; 0xa6c

000005b8 <pcap_close@plt>:
 5b8:	add	ip, pc, #0, 12
 5bc:	add	ip, ip, #69632	; 0x11000
 5c0:	ldr	pc, [ip, #2660]!	; 0xa64

000005c4 <strcasecmp@plt>:
 5c4:	add	ip, pc, #0, 12
 5c8:	add	ip, ip, #69632	; 0x11000
 5cc:	ldr	pc, [ip, #2652]!	; 0xa5c

000005d0 <pcap_open_dead@plt>:
 5d0:	add	ip, pc, #0, 12
 5d4:	add	ip, ip, #69632	; 0x11000
 5d8:	ldr	pc, [ip, #2644]!	; 0xa54

000005dc <pcap_dump@plt>:
 5dc:	add	ip, pc, #0, 12
 5e0:	add	ip, ip, #69632	; 0x11000
 5e4:	ldr	pc, [ip, #2636]!	; 0xa4c

000005e8 <__gmon_start__@plt>:
 5e8:	add	ip, pc, #0, 12
 5ec:	add	ip, ip, #69632	; 0x11000
 5f0:	ldr	pc, [ip, #2628]!	; 0xa44

000005f4 <snprintf@plt>:
 5f4:	add	ip, pc, #0, 12
 5f8:	add	ip, ip, #69632	; 0x11000
 5fc:	ldr	pc, [ip, #2620]!	; 0xa3c

00000600 <pcap_dump_file@plt>:
 600:	add	ip, pc, #0, 12
 604:	add	ip, ip, #69632	; 0x11000
 608:	ldr	pc, [ip, #2612]!	; 0xa34

0000060c <memset@plt>:
 60c:	add	ip, pc, #0, 12
 610:	add	ip, ip, #69632	; 0x11000
 614:	ldr	pc, [ip, #2604]!	; 0xa2c

00000618 <pcap_dump_close@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #69632	; 0x11000
 620:	ldr	pc, [ip, #2596]!	; 0xa24

00000624 <pcap_dump_open@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #69632	; 0x11000
 62c:	ldr	pc, [ip, #2588]!	; 0xa1c

Disassembly of section .text:

00000630 <call_weak_fn>:
     630:	ldr	r3, [pc, #20]	; 64c <call_weak_fn+0x1c>
     634:	ldr	r2, [pc, #20]	; 650 <call_weak_fn+0x20>
     638:	add	r3, pc, r3
     63c:	ldr	r2, [r3, r2]
     640:	cmp	r2, #0
     644:	bxeq	lr
     648:	b	5e8 <__gmon_start__@plt>
     64c:	.word	0x000119c0
     650:	.word	0x00000054

00000654 <deregister_tm_clones>:
     654:	ldr	r0, [pc, #44]	; 688 <deregister_tm_clones+0x34>
     658:	ldr	r3, [pc, #44]	; 68c <deregister_tm_clones+0x38>
     65c:	add	r0, pc, r0
     660:	add	r3, pc, r3
     664:	cmp	r3, r0
     668:	ldr	r3, [pc, #32]	; 690 <deregister_tm_clones+0x3c>
     66c:	add	r3, pc, r3
     670:	bxeq	lr
     674:	ldr	r2, [pc, #24]	; 694 <deregister_tm_clones+0x40>
     678:	ldr	r3, [r3, r2]
     67c:	cmp	r3, #0
     680:	bxeq	lr
     684:	bx	r3
     688:	.word	0x00011a64
     68c:	.word	0x00011a60
     690:	.word	0x0001198c
     694:	.word	0x00000050

00000698 <register_tm_clones>:
     698:	ldr	r0, [pc, #56]	; 6d8 <register_tm_clones+0x40>
     69c:	ldr	r3, [pc, #56]	; 6dc <register_tm_clones+0x44>
     6a0:	add	r0, pc, r0
     6a4:	add	r3, pc, r3
     6a8:	sub	r1, r3, r0
     6ac:	ldr	r3, [pc, #44]	; 6e0 <register_tm_clones+0x48>
     6b0:	asr	r1, r1, #2
     6b4:	add	r3, pc, r3
     6b8:	add	r1, r1, r1, lsr #31
     6bc:	asrs	r1, r1, #1
     6c0:	bxeq	lr
     6c4:	ldr	r2, [pc, #24]	; 6e4 <register_tm_clones+0x4c>
     6c8:	ldr	r3, [r3, r2]
     6cc:	cmp	r3, #0
     6d0:	bxeq	lr
     6d4:	bx	r3
     6d8:	.word	0x00011a20
     6dc:	.word	0x00011a1c
     6e0:	.word	0x00011944
     6e4:	.word	0x00000058

000006e8 <__do_global_dtors_aux>:
     6e8:	ldr	r3, [pc, #76]	; 73c <__do_global_dtors_aux+0x54>
     6ec:	ldr	r2, [pc, #76]	; 740 <__do_global_dtors_aux+0x58>
     6f0:	add	r3, pc, r3
     6f4:	add	r2, pc, r2
     6f8:	ldrb	r3, [r3]
     6fc:	cmp	r3, #0
     700:	bxne	lr
     704:	ldr	r3, [pc, #56]	; 744 <__do_global_dtors_aux+0x5c>
     708:	push	{r4, lr}
     70c:	ldr	r3, [r2, r3]
     710:	cmp	r3, #0
     714:	beq	724 <__do_global_dtors_aux+0x3c>
     718:	ldr	r3, [pc, #40]	; 748 <__do_global_dtors_aux+0x60>
     71c:	ldr	r0, [pc, r3]
     720:	bl	588 <__cxa_finalize@plt>
     724:	bl	654 <deregister_tm_clones>
     728:	ldr	r3, [pc, #28]	; 74c <__do_global_dtors_aux+0x64>
     72c:	mov	r2, #1
     730:	add	r3, pc, r3
     734:	strb	r2, [r3]
     738:	pop	{r4, pc}
     73c:	.word	0x000119d0
     740:	.word	0x00011904
     744:	.word	0x0000004c
     748:	.word	0x00011938
     74c:	.word	0x00011990

00000750 <frame_dummy>:
     750:	b	698 <register_tm_clones>

00000754 <daq_dump_get_vars>:
     754:	str	fp, [sp, #-8]!
     758:	str	lr, [sp, #4]
     75c:	add	fp, sp, #4
     760:	sub	sp, sp, #24
     764:	str	r0, [fp, #-16]
     768:	str	r1, [fp, #-20]	; 0xffffffec
     76c:	str	r2, [fp, #-24]	; 0xffffffe8
     770:	str	r3, [fp, #-28]	; 0xffffffe4
     774:	mov	r3, #0
     778:	str	r3, [fp, #-8]
     77c:	ldr	r3, [fp, #-20]	; 0xffffffec
     780:	ldr	r3, [r3, #20]
     784:	str	r3, [fp, #-12]
     788:	b	818 <daq_dump_get_vars+0xc4>
     78c:	ldr	r3, [fp, #-12]
     790:	ldr	r3, [r3]
     794:	ldr	r2, [pc, #360]	; 904 <daq_dump_get_vars+0x1b0>
     798:	add	r2, pc, r2
     79c:	mov	r1, r2
     7a0:	mov	r0, r3
     7a4:	bl	57c <strcmp@plt>
     7a8:	mov	r3, r0
     7ac:	cmp	r3, #0
     7b0:	bne	7c4 <daq_dump_get_vars+0x70>
     7b4:	ldr	r3, [fp, #-12]
     7b8:	ldr	r3, [r3, #4]
     7bc:	str	r3, [fp, #-8]
     7c0:	b	80c <daq_dump_get_vars+0xb8>
     7c4:	ldr	r3, [fp, #-12]
     7c8:	ldr	r3, [r3]
     7cc:	ldr	r2, [pc, #308]	; 908 <daq_dump_get_vars+0x1b4>
     7d0:	add	r2, pc, r2
     7d4:	mov	r1, r2
     7d8:	mov	r0, r3
     7dc:	bl	57c <strcmp@plt>
     7e0:	mov	r3, r0
     7e4:	cmp	r3, #0
     7e8:	bne	80c <daq_dump_get_vars+0xb8>
     7ec:	ldr	r3, [fp, #-12]
     7f0:	ldr	r3, [r3, #4]
     7f4:	mov	r0, r3
     7f8:	bl	5ac <strdup@plt>
     7fc:	mov	r3, r0
     800:	mov	r2, r3
     804:	ldr	r3, [fp, #-16]
     808:	str	r2, [r3, #12]
     80c:	ldr	r3, [fp, #-12]
     810:	ldr	r3, [r3, #8]
     814:	str	r3, [fp, #-12]
     818:	ldr	r3, [fp, #-12]
     81c:	cmp	r3, #0
     820:	bne	78c <daq_dump_get_vars+0x38>
     824:	ldr	r3, [fp, #-8]
     828:	cmp	r3, #0
     82c:	bne	838 <daq_dump_get_vars+0xe4>
     830:	mov	r3, #1
     834:	b	8f0 <daq_dump_get_vars+0x19c>
     838:	ldr	r3, [pc, #204]	; 90c <daq_dump_get_vars+0x1b8>
     83c:	add	r3, pc, r3
     840:	mov	r1, r3
     844:	ldr	r0, [fp, #-8]
     848:	bl	5c4 <strcasecmp@plt>
     84c:	mov	r3, r0
     850:	cmp	r3, #0
     854:	bne	86c <daq_dump_get_vars+0x118>
     858:	ldr	r3, [fp, #-20]	; 0xffffffec
     85c:	mov	r2, #2
     860:	str	r2, [r3, #12]
     864:	mov	r3, #1
     868:	b	8f0 <daq_dump_get_vars+0x19c>
     86c:	ldr	r3, [pc, #156]	; 910 <daq_dump_get_vars+0x1bc>
     870:	add	r3, pc, r3
     874:	mov	r1, r3
     878:	ldr	r0, [fp, #-8]
     87c:	bl	5c4 <strcasecmp@plt>
     880:	mov	r3, r0
     884:	cmp	r3, #0
     888:	bne	8a0 <daq_dump_get_vars+0x14c>
     88c:	ldr	r3, [fp, #-20]	; 0xffffffec
     890:	mov	r2, #0
     894:	str	r2, [r3, #12]
     898:	mov	r3, #1
     89c:	b	8f0 <daq_dump_get_vars+0x19c>
     8a0:	ldr	r3, [pc, #108]	; 914 <daq_dump_get_vars+0x1c0>
     8a4:	add	r3, pc, r3
     8a8:	mov	r1, r3
     8ac:	ldr	r0, [fp, #-8]
     8b0:	bl	5c4 <strcasecmp@plt>
     8b4:	mov	r3, r0
     8b8:	cmp	r3, #0
     8bc:	bne	8d4 <daq_dump_get_vars+0x180>
     8c0:	ldr	r3, [fp, #-20]	; 0xffffffec
     8c4:	mov	r2, #1
     8c8:	str	r2, [r3, #12]
     8cc:	mov	r3, #1
     8d0:	b	8f0 <daq_dump_get_vars+0x19c>
     8d4:	ldr	r3, [fp, #-8]
     8d8:	ldr	r2, [pc, #56]	; 918 <daq_dump_get_vars+0x1c4>
     8dc:	add	r2, pc, r2
     8e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     8e8:	bl	5f4 <snprintf@plt>
     8ec:	mov	r3, #0
     8f0:	mov	r0, r3
     8f4:	sub	sp, fp, #4
     8f8:	ldr	fp, [sp]
     8fc:	add	sp, sp, #4
     900:	pop	{pc}		; (ldr pc, [sp], #4)
     904:	.word	0x00000c68
     908:	.word	0x00000c3c
     90c:	.word	0x00000bd8
     910:	.word	0x00000bb0
     914:	.word	0x00000b84
     918:	.word	0x00000b54

0000091c <dump_daq_initialize>:
     91c:	str	r4, [sp, #-12]!
     920:	str	fp, [sp, #4]
     924:	str	lr, [sp, #8]
     928:	add	fp, sp, #8
     92c:	sub	sp, sp, #60	; 0x3c
     930:	str	r0, [fp, #-56]	; 0xffffffc8
     934:	str	r1, [fp, #-60]	; 0xffffffc4
     938:	str	r2, [fp, #-64]	; 0xffffffc0
     93c:	str	r3, [fp, #-68]	; 0xffffffbc
     940:	mov	r1, #120	; 0x78
     944:	mov	r0, #1
     948:	bl	570 <calloc@plt>
     94c:	mov	r3, r0
     950:	str	r3, [fp, #-16]
     954:	ldr	r3, [fp, #-56]	; 0xffffffc8
     958:	ldr	r3, [r3, #24]
     95c:	str	r3, [fp, #-20]	; 0xffffffec
     960:	ldr	r2, [fp, #-56]	; 0xffffffc8
     964:	sub	r3, fp, #52	; 0x34
     968:	ldrd	r0, [r2]
     96c:	strd	r0, [r3]
     970:	ldrd	r0, [r2, #8]
     974:	strd	r0, [r3, #8]
     978:	ldrd	r0, [r2, #16]
     97c:	strd	r0, [r3, #16]
     980:	ldr	r2, [r2, #24]
     984:	str	r2, [r3, #24]
     988:	ldr	r3, [fp, #-16]
     98c:	cmp	r3, #0
     990:	bne	9b8 <dump_daq_initialize+0x9c>
     994:	ldr	r3, [pc, #268]	; aa8 <dump_daq_initialize+0x18c>
     998:	add	r3, pc, r3
     99c:	ldr	r2, [pc, #264]	; aac <dump_daq_initialize+0x190>
     9a0:	add	r2, pc, r2
     9a4:	ldr	r1, [fp, #-68]	; 0xffffffbc
     9a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
     9ac:	bl	5f4 <snprintf@plt>
     9b0:	mvn	r3, #1
     9b4:	b	a90 <dump_daq_initialize+0x174>
     9b8:	ldr	r3, [fp, #-20]	; 0xffffffec
     9bc:	cmp	r3, #0
     9c0:	beq	9d8 <dump_daq_initialize+0xbc>
     9c4:	ldr	r3, [fp, #-20]	; 0xffffffec
     9c8:	ldr	r3, [r3, #12]
     9cc:	and	r3, r3, #1
     9d0:	cmp	r3, #0
     9d4:	bne	a04 <dump_daq_initialize+0xe8>
     9d8:	ldr	r3, [pc, #208]	; ab0 <dump_daq_initialize+0x194>
     9dc:	add	r3, pc, r3
     9e0:	ldr	r2, [pc, #204]	; ab4 <dump_daq_initialize+0x198>
     9e4:	add	r2, pc, r2
     9e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
     9ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
     9f0:	bl	5f4 <snprintf@plt>
     9f4:	ldr	r0, [fp, #-16]
     9f8:	bl	594 <free@plt>
     9fc:	mvn	r3, #0
     a00:	b	a90 <dump_daq_initialize+0x174>
     a04:	sub	r1, fp, #52	; 0x34
     a08:	ldr	r3, [fp, #-68]	; 0xffffffbc
     a0c:	ldr	r2, [fp, #-64]	; 0xffffffc0
     a10:	ldr	r0, [fp, #-16]
     a14:	bl	754 <daq_dump_get_vars>
     a18:	mov	r3, r0
     a1c:	cmp	r3, #0
     a20:	bne	a34 <dump_daq_initialize+0x118>
     a24:	ldr	r0, [fp, #-16]
     a28:	bl	594 <free@plt>
     a2c:	mvn	r3, #0
     a30:	b	a90 <dump_daq_initialize+0x174>
     a34:	ldr	r3, [fp, #-20]	; 0xffffffec
     a38:	ldr	r4, [r3, #16]
     a3c:	ldr	r3, [fp, #-16]
     a40:	add	r1, r3, #4
     a44:	sub	r0, fp, #52	; 0x34
     a48:	ldr	r3, [fp, #-68]	; 0xffffffbc
     a4c:	ldr	r2, [fp, #-64]	; 0xffffffc0
     a50:	blx	r4
     a54:	str	r0, [fp, #-24]	; 0xffffffe8
     a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a5c:	cmp	r3, #0
     a60:	beq	a74 <dump_daq_initialize+0x158>
     a64:	ldr	r0, [fp, #-16]
     a68:	bl	594 <free@plt>
     a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a70:	b	a90 <dump_daq_initialize+0x174>
     a74:	ldr	r3, [fp, #-16]
     a78:	ldr	r2, [fp, #-20]	; 0xffffffec
     a7c:	str	r2, [r3]
     a80:	ldr	r3, [fp, #-60]	; 0xffffffc4
     a84:	ldr	r2, [fp, #-16]
     a88:	str	r2, [r3]
     a8c:	mov	r3, #0
     a90:	mov	r0, r3
     a94:	sub	sp, fp, #8
     a98:	ldr	r4, [sp]
     a9c:	ldr	fp, [sp, #4]
     aa0:	add	sp, sp, #8
     aa4:	pop	{pc}		; (ldr pc, [sp], #4)
     aa8:	.word	0x00000b78
     aac:	.word	0x00000aa8
     ab0:	.word	0x00000b34
     ab4:	.word	0x00000a98

00000ab8 <dump_daq_shutdown>:
     ab8:	str	fp, [sp, #-8]!
     abc:	str	lr, [sp, #4]
     ac0:	add	fp, sp, #4
     ac4:	sub	sp, sp, #16
     ac8:	str	r0, [fp, #-16]
     acc:	ldr	r3, [fp, #-16]
     ad0:	str	r3, [fp, #-8]
     ad4:	ldr	r3, [fp, #-8]
     ad8:	ldr	r3, [r3]
     adc:	ldr	r3, [r3, #44]	; 0x2c
     ae0:	ldr	r2, [fp, #-8]
     ae4:	ldr	r2, [r2, #4]
     ae8:	mov	r0, r2
     aec:	blx	r3
     af0:	ldr	r3, [fp, #-8]
     af4:	ldr	r3, [r3, #12]
     af8:	cmp	r3, #0
     afc:	beq	b10 <dump_daq_shutdown+0x58>
     b00:	ldr	r3, [fp, #-8]
     b04:	ldr	r3, [r3, #12]
     b08:	mov	r0, r3
     b0c:	bl	594 <free@plt>
     b10:	ldr	r0, [fp, #-8]
     b14:	bl	594 <free@plt>
     b18:	nop	{0}
     b1c:	sub	sp, fp, #4
     b20:	ldr	fp, [sp]
     b24:	add	sp, sp, #4
     b28:	pop	{pc}		; (ldr pc, [sp], #4)

00000b2c <daq_dump_capture>:
     b2c:	strd	r4, [sp, #-16]!
     b30:	str	fp, [sp, #8]
     b34:	str	lr, [sp, #12]
     b38:	add	fp, sp, #12
     b3c:	sub	sp, sp, #24
     b40:	str	r0, [fp, #-24]	; 0xffffffe8
     b44:	str	r1, [fp, #-28]	; 0xffffffe4
     b48:	str	r2, [fp, #-32]	; 0xffffffe0
     b4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b50:	str	r3, [fp, #-20]	; 0xffffffec
     b54:	ldr	r3, [fp, #-20]	; 0xffffffec
     b58:	ldr	r3, [r3, #16]
     b5c:	ldr	r2, [fp, #-20]	; 0xffffffec
     b60:	ldr	r0, [r2, #20]
     b64:	ldr	r2, [fp, #-32]	; 0xffffffe0
     b68:	ldr	r1, [fp, #-28]	; 0xffffffe4
     b6c:	blx	r3
     b70:	str	r0, [fp, #-16]
     b74:	ldr	r3, [fp, #-16]
     b78:	cmp	r3, #6
     b7c:	bls	b88 <daq_dump_capture+0x5c>
     b80:	mov	r3, #1
     b84:	str	r3, [fp, #-16]
     b88:	ldr	r2, [fp, #-20]	; 0xffffffec
     b8c:	ldr	r3, [fp, #-16]
     b90:	add	r3, r3, #8
     b94:	lsl	r3, r3, #3
     b98:	add	r3, r2, r3
     b9c:	ldrd	r2, [r3]
     ba0:	adds	r4, r2, #1
     ba4:	adc	r5, r3, #0
     ba8:	ldr	r2, [fp, #-20]	; 0xffffffec
     bac:	ldr	r3, [fp, #-16]
     bb0:	add	r3, r3, #8
     bb4:	lsl	r3, r3, #3
     bb8:	add	r3, r2, r3
     bbc:	strd	r4, [r3]
     bc0:	ldr	r3, [pc, #68]	; c0c <daq_dump_capture+0xe0>
     bc4:	add	r3, pc, r3
     bc8:	ldr	r2, [fp, #-16]
     bcc:	ldr	r3, [r3, r2, lsl #2]
     bd0:	cmp	r3, #0
     bd4:	beq	bf0 <daq_dump_capture+0xc4>
     bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
     bdc:	ldr	r3, [r3, #8]
     be0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     be4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     be8:	mov	r0, r3
     bec:	bl	5dc <pcap_dump@plt>
     bf0:	ldr	r3, [fp, #-16]
     bf4:	mov	r0, r3
     bf8:	sub	sp, fp, #12
     bfc:	ldrd	r4, [sp]
     c00:	ldr	fp, [sp, #8]
     c04:	add	sp, sp, #12
     c08:	pop	{pc}		; (ldr pc, [sp], #4)
     c0c:	.word	0x000008dc

00000c10 <dump_daq_acquire>:
     c10:	str	r4, [sp, #-12]!
     c14:	str	fp, [sp, #4]
     c18:	str	lr, [sp, #8]
     c1c:	add	fp, sp, #8
     c20:	sub	sp, sp, #36	; 0x24
     c24:	str	r0, [fp, #-24]	; 0xffffffe8
     c28:	str	r1, [fp, #-28]	; 0xffffffe4
     c2c:	str	r2, [fp, #-32]	; 0xffffffe0
     c30:	str	r3, [fp, #-36]	; 0xffffffdc
     c34:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c38:	str	r3, [fp, #-16]
     c3c:	ldr	r3, [fp, #-16]
     c40:	ldr	r2, [fp, #-32]	; 0xffffffe0
     c44:	str	r2, [r3, #16]
     c48:	ldr	r3, [fp, #-16]
     c4c:	ldr	r2, [fp, #4]
     c50:	str	r2, [r3, #20]
     c54:	ldr	r3, [fp, #-16]
     c58:	ldr	r3, [r3]
     c5c:	ldr	r4, [r3, #28]
     c60:	ldr	r3, [fp, #-16]
     c64:	ldr	r0, [r3, #4]
     c68:	ldr	r3, [fp, #-16]
     c6c:	str	r3, [sp]
     c70:	ldr	r3, [fp, #-36]	; 0xffffffdc
     c74:	ldr	r2, [pc, #36]	; ca0 <dump_daq_acquire+0x90>
     c78:	add	r2, pc, r2
     c7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     c80:	blx	r4
     c84:	mov	r3, r0
     c88:	mov	r0, r3
     c8c:	sub	sp, fp, #8
     c90:	ldr	r4, [sp]
     c94:	ldr	fp, [sp, #4]
     c98:	add	sp, sp, #8
     c9c:	pop	{pc}		; (ldr pc, [sp], #4)
     ca0:	.word	0xfffffeac

00000ca4 <dump_daq_inject>:
     ca4:	strd	r4, [sp, #-16]!
     ca8:	str	fp, [sp, #8]
     cac:	str	lr, [sp, #12]
     cb0:	add	fp, sp, #12
     cb4:	sub	sp, sp, #72	; 0x48
     cb8:	str	r0, [fp, #-72]	; 0xffffffb8
     cbc:	str	r1, [fp, #-76]	; 0xffffffb4
     cc0:	str	r2, [fp, #-80]	; 0xffffffb0
     cc4:	str	r3, [fp, #-84]	; 0xffffffac
     cc8:	ldr	r3, [fp, #-72]	; 0xffffffb8
     ccc:	str	r3, [fp, #-16]
     cd0:	ldr	r2, [fp, #-76]	; 0xffffffb4
     cd4:	sub	r3, fp, #68	; 0x44
     cd8:	ldrd	r0, [r2]
     cdc:	strd	r0, [r3]
     ce0:	ldrd	r0, [r2, #8]
     ce4:	strd	r0, [r3, #8]
     ce8:	ldrd	r0, [r2, #16]
     cec:	strd	r0, [r3, #16]
     cf0:	ldrd	r0, [r2, #24]
     cf4:	strd	r0, [r3, #24]
     cf8:	ldrd	r0, [r2, #32]
     cfc:	strd	r0, [r3, #32]
     d00:	ldrd	r0, [r2, #40]	; 0x28
     d04:	strd	r0, [r3, #40]	; 0x28
     d08:	ldr	r2, [r2, #48]	; 0x30
     d0c:	str	r2, [r3, #48]	; 0x30
     d10:	ldr	r3, [fp, #-84]	; 0xffffffac
     d14:	str	r3, [fp, #-60]	; 0xffffffc4
     d18:	ldr	r3, [fp, #-60]	; 0xffffffc4
     d1c:	str	r3, [fp, #-56]	; 0xffffffc8
     d20:	ldr	r3, [fp, #-16]
     d24:	ldr	r3, [r3, #8]
     d28:	sub	r1, fp, #68	; 0x44
     d2c:	ldr	r2, [fp, #-80]	; 0xffffffb0
     d30:	mov	r0, r3
     d34:	bl	5dc <pcap_dump@plt>
     d38:	ldr	r3, [fp, #-16]
     d3c:	ldr	r3, [r3, #8]
     d40:	mov	r0, r3
     d44:	bl	600 <pcap_dump_file@plt>
     d48:	mov	r3, r0
     d4c:	mov	r0, r3
     d50:	bl	5a0 <ferror@plt>
     d54:	mov	r3, r0
     d58:	cmp	r3, #0
     d5c:	beq	d8c <dump_daq_inject+0xe8>
     d60:	ldr	r3, [fp, #-16]
     d64:	ldr	r3, [r3]
     d68:	ldr	r3, [r3, #76]	; 0x4c
     d6c:	ldr	r2, [fp, #-16]
     d70:	ldr	r2, [r2, #4]
     d74:	ldr	r1, [pc, #68]	; dc0 <dump_daq_inject+0x11c>
     d78:	add	r1, pc, r1
     d7c:	mov	r0, r2
     d80:	blx	r3
     d84:	mvn	r3, #0
     d88:	b	da8 <dump_daq_inject+0x104>
     d8c:	ldr	r3, [fp, #-16]
     d90:	ldrd	r2, [r3, #56]	; 0x38
     d94:	adds	r4, r2, #1
     d98:	adc	r5, r3, #0
     d9c:	ldr	r3, [fp, #-16]
     da0:	strd	r4, [r3, #56]	; 0x38
     da4:	mov	r3, #0
     da8:	mov	r0, r3
     dac:	sub	sp, fp, #12
     db0:	ldrd	r4, [sp]
     db4:	ldr	fp, [sp, #8]
     db8:	add	sp, sp, #12
     dbc:	pop	{pc}		; (ldr pc, [sp], #4)
     dc0:	.word	0x00000744

00000dc4 <dump_daq_start>:
     dc4:	str	fp, [sp, #-8]!
     dc8:	str	lr, [sp, #4]
     dcc:	add	fp, sp, #4
     dd0:	sub	sp, sp, #32
     dd4:	str	r0, [fp, #-32]	; 0xffffffe0
     dd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ddc:	str	r3, [fp, #-8]
     de0:	ldr	r3, [fp, #-8]
     de4:	ldr	r3, [r3, #12]
     de8:	cmp	r3, #0
     dec:	beq	dfc <dump_daq_start+0x38>
     df0:	ldr	r3, [fp, #-8]
     df4:	ldr	r3, [r3, #12]
     df8:	b	e04 <dump_daq_start+0x40>
     dfc:	ldr	r3, [pc, #300]	; f30 <dump_daq_start+0x16c>
     e00:	add	r3, pc, r3
     e04:	str	r3, [fp, #-12]
     e08:	ldr	r3, [fp, #-8]
     e0c:	ldr	r3, [r3]
     e10:	ldr	r3, [r3, #24]
     e14:	ldr	r2, [fp, #-8]
     e18:	ldr	r2, [r2, #4]
     e1c:	mov	r0, r2
     e20:	blx	r3
     e24:	str	r0, [fp, #-16]
     e28:	ldr	r3, [fp, #-16]
     e2c:	cmp	r3, #0
     e30:	beq	e3c <dump_daq_start+0x78>
     e34:	ldr	r3, [fp, #-16]
     e38:	b	f1c <dump_daq_start+0x158>
     e3c:	ldr	r3, [fp, #-8]
     e40:	ldr	r3, [r3]
     e44:	ldr	r3, [r3, #68]	; 0x44
     e48:	ldr	r2, [fp, #-8]
     e4c:	ldr	r2, [r2, #4]
     e50:	mov	r0, r2
     e54:	blx	r3
     e58:	str	r0, [fp, #-20]	; 0xffffffec
     e5c:	ldr	r3, [fp, #-8]
     e60:	ldr	r3, [r3]
     e64:	ldr	r3, [r3, #60]	; 0x3c
     e68:	ldr	r2, [fp, #-8]
     e6c:	ldr	r2, [r2, #4]
     e70:	mov	r0, r2
     e74:	blx	r3
     e78:	str	r0, [fp, #-24]	; 0xffffffe8
     e7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     e80:	ldr	r0, [fp, #-20]	; 0xffffffec
     e84:	bl	5d0 <pcap_open_dead@plt>
     e88:	str	r0, [fp, #-28]	; 0xffffffe4
     e8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e90:	cmp	r3, #0
     e94:	beq	eac <dump_daq_start+0xe8>
     e98:	ldr	r1, [fp, #-12]
     e9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     ea0:	bl	624 <pcap_dump_open@plt>
     ea4:	mov	r2, r0
     ea8:	b	eb0 <dump_daq_start+0xec>
     eac:	mov	r2, #0
     eb0:	ldr	r3, [fp, #-8]
     eb4:	str	r2, [r3, #8]
     eb8:	ldr	r3, [fp, #-8]
     ebc:	ldr	r3, [r3, #8]
     ec0:	cmp	r3, #0
     ec4:	bne	f10 <dump_daq_start+0x14c>
     ec8:	ldr	r3, [fp, #-8]
     ecc:	ldr	r3, [r3]
     ed0:	ldr	r3, [r3, #40]	; 0x28
     ed4:	ldr	r2, [fp, #-8]
     ed8:	ldr	r2, [r2, #4]
     edc:	mov	r0, r2
     ee0:	blx	r3
     ee4:	ldr	r3, [fp, #-8]
     ee8:	ldr	r3, [r3]
     eec:	ldr	r3, [r3, #76]	; 0x4c
     ef0:	ldr	r2, [fp, #-8]
     ef4:	ldr	r2, [r2, #4]
     ef8:	ldr	r1, [pc, #52]	; f34 <dump_daq_start+0x170>
     efc:	add	r1, pc, r1
     f00:	mov	r0, r2
     f04:	blx	r3
     f08:	mvn	r3, #0
     f0c:	b	f1c <dump_daq_start+0x158>
     f10:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f14:	bl	5b8 <pcap_close@plt>
     f18:	mov	r3, #0
     f1c:	mov	r0, r3
     f20:	sub	sp, fp, #4
     f24:	ldr	fp, [sp]
     f28:	add	sp, sp, #4
     f2c:	pop	{pc}		; (ldr pc, [sp], #4)
     f30:	.word	0x000006dc
     f34:	.word	0x000005f0

00000f38 <dump_daq_stop>:
     f38:	str	fp, [sp, #-8]!
     f3c:	str	lr, [sp, #4]
     f40:	add	fp, sp, #4
     f44:	sub	sp, sp, #16
     f48:	str	r0, [fp, #-16]
     f4c:	ldr	r3, [fp, #-16]
     f50:	str	r3, [fp, #-8]
     f54:	ldr	r3, [fp, #-8]
     f58:	ldr	r3, [r3]
     f5c:	ldr	r3, [r3, #40]	; 0x28
     f60:	ldr	r2, [fp, #-8]
     f64:	ldr	r2, [r2, #4]
     f68:	mov	r0, r2
     f6c:	blx	r3
     f70:	str	r0, [fp, #-12]
     f74:	ldr	r3, [fp, #-12]
     f78:	cmp	r3, #0
     f7c:	beq	f88 <dump_daq_stop+0x50>
     f80:	ldr	r3, [fp, #-12]
     f84:	b	fb8 <dump_daq_stop+0x80>
     f88:	ldr	r3, [fp, #-8]
     f8c:	ldr	r3, [r3, #8]
     f90:	cmp	r3, #0
     f94:	beq	fb4 <dump_daq_stop+0x7c>
     f98:	ldr	r3, [fp, #-8]
     f9c:	ldr	r3, [r3, #8]
     fa0:	mov	r0, r3
     fa4:	bl	618 <pcap_dump_close@plt>
     fa8:	ldr	r3, [fp, #-8]
     fac:	mov	r2, #0
     fb0:	str	r2, [r3, #8]
     fb4:	mov	r3, #0
     fb8:	mov	r0, r3
     fbc:	sub	sp, fp, #4
     fc0:	ldr	fp, [sp]
     fc4:	add	sp, sp, #4
     fc8:	pop	{pc}		; (ldr pc, [sp], #4)

00000fcc <dump_daq_set_filter>:
     fcc:	str	fp, [sp, #-8]!
     fd0:	str	lr, [sp, #4]
     fd4:	add	fp, sp, #4
     fd8:	sub	sp, sp, #16
     fdc:	str	r0, [fp, #-16]
     fe0:	str	r1, [fp, #-20]	; 0xffffffec
     fe4:	ldr	r3, [fp, #-16]
     fe8:	str	r3, [fp, #-8]
     fec:	ldr	r3, [fp, #-8]
     ff0:	ldr	r3, [r3]
     ff4:	ldr	r3, [r3, #20]
     ff8:	ldr	r2, [fp, #-8]
     ffc:	ldr	r2, [r2, #4]
    1000:	ldr	r1, [fp, #-20]	; 0xffffffec
    1004:	mov	r0, r2
    1008:	blx	r3
    100c:	mov	r3, r0
    1010:	mov	r0, r3
    1014:	sub	sp, fp, #4
    1018:	ldr	fp, [sp]
    101c:	add	sp, sp, #4
    1020:	pop	{pc}		; (ldr pc, [sp], #4)

00001024 <dump_daq_breakloop>:
    1024:	str	fp, [sp, #-8]!
    1028:	str	lr, [sp, #4]
    102c:	add	fp, sp, #4
    1030:	sub	sp, sp, #16
    1034:	str	r0, [fp, #-16]
    1038:	ldr	r3, [fp, #-16]
    103c:	str	r3, [fp, #-8]
    1040:	ldr	r3, [fp, #-8]
    1044:	ldr	r3, [r3]
    1048:	ldr	r3, [r3, #36]	; 0x24
    104c:	ldr	r2, [fp, #-8]
    1050:	ldr	r2, [r2, #4]
    1054:	mov	r0, r2
    1058:	blx	r3
    105c:	mov	r3, r0
    1060:	mov	r0, r3
    1064:	sub	sp, fp, #4
    1068:	ldr	fp, [sp]
    106c:	add	sp, sp, #4
    1070:	pop	{pc}		; (ldr pc, [sp], #4)

00001074 <dump_daq_check_status>:
    1074:	str	fp, [sp, #-8]!
    1078:	str	lr, [sp, #4]
    107c:	add	fp, sp, #4
    1080:	sub	sp, sp, #16
    1084:	str	r0, [fp, #-16]
    1088:	ldr	r3, [fp, #-16]
    108c:	str	r3, [fp, #-8]
    1090:	ldr	r3, [fp, #-8]
    1094:	ldr	r3, [r3]
    1098:	ldr	r3, [r3, #48]	; 0x30
    109c:	ldr	r2, [fp, #-8]
    10a0:	ldr	r2, [r2, #4]
    10a4:	mov	r0, r2
    10a8:	blx	r3
    10ac:	mov	r3, r0
    10b0:	mov	r0, r3
    10b4:	sub	sp, fp, #4
    10b8:	ldr	fp, [sp]
    10bc:	add	sp, sp, #4
    10c0:	pop	{pc}		; (ldr pc, [sp], #4)

000010c4 <dump_daq_get_stats>:
    10c4:	str	fp, [sp, #-8]!
    10c8:	str	lr, [sp, #4]
    10cc:	add	fp, sp, #4
    10d0:	sub	sp, sp, #24
    10d4:	str	r0, [fp, #-24]	; 0xffffffe8
    10d8:	str	r1, [fp, #-28]	; 0xffffffe4
    10dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10e0:	str	r3, [fp, #-12]
    10e4:	ldr	r3, [fp, #-12]
    10e8:	ldr	r3, [r3]
    10ec:	ldr	r3, [r3, #52]	; 0x34
    10f0:	ldr	r2, [fp, #-12]
    10f4:	ldr	r2, [r2, #4]
    10f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    10fc:	mov	r0, r2
    1100:	blx	r3
    1104:	str	r0, [fp, #-16]
    1108:	mov	r3, #0
    110c:	str	r3, [fp, #-8]
    1110:	b	1150 <dump_daq_get_stats+0x8c>
    1114:	ldr	r2, [fp, #-12]
    1118:	ldr	r3, [fp, #-8]
    111c:	add	r3, r3, #8
    1120:	lsl	r3, r3, #3
    1124:	add	r3, r2, r3
    1128:	ldrd	r2, [r3]
    112c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1130:	ldr	r1, [fp, #-8]
    1134:	add	r1, r1, #5
    1138:	lsl	r1, r1, #3
    113c:	add	r1, r0, r1
    1140:	strd	r2, [r1]
    1144:	ldr	r3, [fp, #-8]
    1148:	add	r3, r3, #1
    114c:	str	r3, [fp, #-8]
    1150:	ldr	r3, [fp, #-8]
    1154:	cmp	r3, #6
    1158:	ble	1114 <dump_daq_get_stats+0x50>
    115c:	ldr	r3, [fp, #-12]
    1160:	ldrd	r2, [r3, #56]	; 0x38
    1164:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1168:	strd	r2, [r1, #32]
    116c:	ldr	r3, [fp, #-16]
    1170:	mov	r0, r3
    1174:	sub	sp, fp, #4
    1178:	ldr	fp, [sp]
    117c:	add	sp, sp, #4
    1180:	pop	{pc}		; (ldr pc, [sp], #4)

00001184 <dump_daq_reset_stats>:
    1184:	str	fp, [sp, #-8]!
    1188:	str	lr, [sp, #4]
    118c:	add	fp, sp, #4
    1190:	sub	sp, sp, #16
    1194:	str	r0, [fp, #-16]
    1198:	ldr	r3, [fp, #-16]
    119c:	str	r3, [fp, #-8]
    11a0:	ldr	r3, [fp, #-8]
    11a4:	ldr	r3, [r3]
    11a8:	ldr	r3, [r3, #56]	; 0x38
    11ac:	ldr	r2, [fp, #-8]
    11b0:	ldr	r2, [r2, #4]
    11b4:	mov	r0, r2
    11b8:	blx	r3
    11bc:	ldr	r3, [fp, #-8]
    11c0:	add	r3, r3, #24
    11c4:	mov	r2, #96	; 0x60
    11c8:	mov	r1, #0
    11cc:	mov	r0, r3
    11d0:	bl	60c <memset@plt>
    11d4:	nop	{0}
    11d8:	sub	sp, fp, #4
    11dc:	ldr	fp, [sp]
    11e0:	add	sp, sp, #4
    11e4:	pop	{pc}		; (ldr pc, [sp], #4)

000011e8 <dump_daq_get_snaplen>:
    11e8:	str	fp, [sp, #-8]!
    11ec:	str	lr, [sp, #4]
    11f0:	add	fp, sp, #4
    11f4:	sub	sp, sp, #16
    11f8:	str	r0, [fp, #-16]
    11fc:	ldr	r3, [fp, #-16]
    1200:	str	r3, [fp, #-8]
    1204:	ldr	r3, [fp, #-8]
    1208:	ldr	r3, [r3]
    120c:	ldr	r3, [r3, #60]	; 0x3c
    1210:	ldr	r2, [fp, #-8]
    1214:	ldr	r2, [r2, #4]
    1218:	mov	r0, r2
    121c:	blx	r3
    1220:	mov	r3, r0
    1224:	mov	r0, r3
    1228:	sub	sp, fp, #4
    122c:	ldr	fp, [sp]
    1230:	add	sp, sp, #4
    1234:	pop	{pc}		; (ldr pc, [sp], #4)

00001238 <dump_daq_get_capabilities>:
    1238:	str	fp, [sp, #-8]!
    123c:	str	lr, [sp, #4]
    1240:	add	fp, sp, #4
    1244:	sub	sp, sp, #16
    1248:	str	r0, [fp, #-16]
    124c:	ldr	r3, [fp, #-16]
    1250:	str	r3, [fp, #-8]
    1254:	ldr	r3, [fp, #-8]
    1258:	ldr	r3, [r3]
    125c:	ldr	r3, [r3, #64]	; 0x40
    1260:	ldr	r2, [fp, #-8]
    1264:	ldr	r2, [r2, #4]
    1268:	mov	r0, r2
    126c:	blx	r3
    1270:	str	r0, [fp, #-12]
    1274:	ldr	r3, [fp, #-12]
    1278:	orr	r3, r3, #7
    127c:	str	r3, [fp, #-12]
    1280:	ldr	r3, [fp, #-12]
    1284:	mov	r0, r3
    1288:	sub	sp, fp, #4
    128c:	ldr	fp, [sp]
    1290:	add	sp, sp, #4
    1294:	pop	{pc}		; (ldr pc, [sp], #4)

00001298 <dump_daq_get_datalink_type>:
    1298:	str	fp, [sp, #-8]!
    129c:	str	lr, [sp, #4]
    12a0:	add	fp, sp, #4
    12a4:	sub	sp, sp, #16
    12a8:	str	r0, [fp, #-16]
    12ac:	ldr	r3, [fp, #-16]
    12b0:	str	r3, [fp, #-8]
    12b4:	ldr	r3, [fp, #-8]
    12b8:	ldr	r3, [r3]
    12bc:	ldr	r3, [r3, #68]	; 0x44
    12c0:	ldr	r2, [fp, #-8]
    12c4:	ldr	r2, [r2, #4]
    12c8:	mov	r0, r2
    12cc:	blx	r3
    12d0:	mov	r3, r0
    12d4:	mov	r0, r3
    12d8:	sub	sp, fp, #4
    12dc:	ldr	fp, [sp]
    12e0:	add	sp, sp, #4
    12e4:	pop	{pc}		; (ldr pc, [sp], #4)

000012e8 <dump_daq_get_errbuf>:
    12e8:	str	fp, [sp, #-8]!
    12ec:	str	lr, [sp, #4]
    12f0:	add	fp, sp, #4
    12f4:	sub	sp, sp, #16
    12f8:	str	r0, [fp, #-16]
    12fc:	ldr	r3, [fp, #-16]
    1300:	str	r3, [fp, #-8]
    1304:	ldr	r3, [fp, #-8]
    1308:	ldr	r3, [r3]
    130c:	ldr	r3, [r3, #72]	; 0x48
    1310:	ldr	r2, [fp, #-8]
    1314:	ldr	r2, [r2, #4]
    1318:	mov	r0, r2
    131c:	blx	r3
    1320:	mov	r3, r0
    1324:	mov	r0, r3
    1328:	sub	sp, fp, #4
    132c:	ldr	fp, [sp]
    1330:	add	sp, sp, #4
    1334:	pop	{pc}		; (ldr pc, [sp], #4)

00001338 <dump_daq_set_errbuf>:
    1338:	str	fp, [sp, #-8]!
    133c:	str	lr, [sp, #4]
    1340:	add	fp, sp, #4
    1344:	sub	sp, sp, #16
    1348:	str	r0, [fp, #-16]
    134c:	str	r1, [fp, #-20]	; 0xffffffec
    1350:	ldr	r3, [fp, #-16]
    1354:	str	r3, [fp, #-8]
    1358:	ldr	r3, [fp, #-8]
    135c:	ldr	r3, [r3]
    1360:	ldr	r3, [r3, #76]	; 0x4c
    1364:	ldr	r2, [fp, #-8]
    1368:	ldr	r0, [r2, #4]
    136c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1370:	cmp	r2, #0
    1374:	beq	1380 <dump_daq_set_errbuf+0x48>
    1378:	ldr	r2, [fp, #-20]	; 0xffffffec
    137c:	b	1388 <dump_daq_set_errbuf+0x50>
    1380:	ldr	r2, [pc, #28]	; 13a4 <dump_daq_set_errbuf+0x6c>
    1384:	add	r2, pc, r2
    1388:	mov	r1, r2
    138c:	blx	r3
    1390:	nop	{0}
    1394:	sub	sp, fp, #4
    1398:	ldr	fp, [sp]
    139c:	add	sp, sp, #4
    13a0:	pop	{pc}		; (ldr pc, [sp], #4)
    13a4:	.word	0x00000180

000013a8 <dump_daq_get_device_index>:
    13a8:	str	fp, [sp, #-8]!
    13ac:	str	lr, [sp, #4]
    13b0:	add	fp, sp, #4
    13b4:	sub	sp, sp, #16
    13b8:	str	r0, [fp, #-16]
    13bc:	str	r1, [fp, #-20]	; 0xffffffec
    13c0:	ldr	r3, [fp, #-16]
    13c4:	str	r3, [fp, #-8]
    13c8:	ldr	r3, [fp, #-8]
    13cc:	ldr	r3, [r3]
    13d0:	ldr	r3, [r3, #80]	; 0x50
    13d4:	ldr	r2, [fp, #-8]
    13d8:	ldr	r2, [r2, #4]
    13dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    13e0:	mov	r0, r2
    13e4:	blx	r3
    13e8:	mov	r3, r0
    13ec:	mov	r0, r3
    13f0:	sub	sp, fp, #4
    13f4:	ldr	fp, [sp]
    13f8:	add	sp, sp, #4
    13fc:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00001400 <_fini>:
    1400:	push	{r3, lr}
    1404:	pop	{r3, pc}
