
../repos/coreutils/src/truncate:     file format elf32-littlearm


Disassembly of section .init:

00010d84 <.init>:
   10d84:	push	{r3, lr}
   10d88:	bl	11044 <__assert_fail@plt+0x48>
   10d8c:	pop	{r3, pc}

Disassembly of section .plt:

00010d90 <calloc@plt-0x14>:
   10d90:	push	{lr}		; (str lr, [sp, #-4]!)
   10d94:	ldr	lr, [pc, #4]	; 10da0 <calloc@plt-0x4>
   10d98:	add	lr, pc, lr
   10d9c:	ldr	pc, [lr, #8]!
   10da0:	andeq	pc, r1, r0, ror #4

00010da4 <calloc@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #126976	; 0x1f000
   10dac:	ldr	pc, [ip, #608]!	; 0x260

00010db0 <fputs_unlocked@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #126976	; 0x1f000
   10db8:	ldr	pc, [ip, #600]!	; 0x258

00010dbc <raise@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #126976	; 0x1f000
   10dc4:	ldr	pc, [ip, #592]!	; 0x250

00010dc8 <strcmp@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #126976	; 0x1f000
   10dd0:	ldr	pc, [ip, #584]!	; 0x248

00010dd4 <printf@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #126976	; 0x1f000
   10ddc:	ldr	pc, [ip, #576]!	; 0x240

00010de0 <fflush@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #126976	; 0x1f000
   10de8:	ldr	pc, [ip, #568]!	; 0x238

00010dec <free@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #126976	; 0x1f000
   10df4:	ldr	pc, [ip, #560]!	; 0x230

00010df8 <_exit@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #126976	; 0x1f000
   10e00:	ldr	pc, [ip, #552]!	; 0x228

00010e04 <memcpy@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #126976	; 0x1f000
   10e0c:	ldr	pc, [ip, #544]!	; 0x220

00010e10 <mbsinit@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #126976	; 0x1f000
   10e18:	ldr	pc, [ip, #536]!	; 0x218

00010e1c <ftruncate64@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #126976	; 0x1f000
   10e24:	ldr	pc, [ip, #528]!	; 0x210

00010e28 <memcmp@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #126976	; 0x1f000
   10e30:	ldr	pc, [ip, #520]!	; 0x208

00010e34 <realloc@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #126976	; 0x1f000
   10e3c:	ldr	pc, [ip, #512]!	; 0x200

00010e40 <textdomain@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #126976	; 0x1f000
   10e48:	ldr	pc, [ip, #504]!	; 0x1f8

00010e4c <iswprint@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #126976	; 0x1f000
   10e54:	ldr	pc, [ip, #496]!	; 0x1f0

00010e58 <__fxstat64@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #126976	; 0x1f000
   10e60:	ldr	pc, [ip, #488]!	; 0x1e8

00010e64 <lseek64@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #126976	; 0x1f000
   10e6c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e70 <__ctype_get_mb_cur_max@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #126976	; 0x1f000
   10e78:	ldr	pc, [ip, #472]!	; 0x1d8

00010e7c <__fpending@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #126976	; 0x1f000
   10e84:	ldr	pc, [ip, #464]!	; 0x1d0

00010e88 <ferror_unlocked@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #126976	; 0x1f000
   10e90:	ldr	pc, [ip, #456]!	; 0x1c8

00010e94 <mbrtowc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #126976	; 0x1f000
   10e9c:	ldr	pc, [ip, #448]!	; 0x1c0

00010ea0 <error@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #126976	; 0x1f000
   10ea8:	ldr	pc, [ip, #440]!	; 0x1b8

00010eac <open64@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #126976	; 0x1f000
   10eb4:	ldr	pc, [ip, #432]!	; 0x1b0

00010eb8 <malloc@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #126976	; 0x1f000
   10ec0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ec4 <__libc_start_main@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #126976	; 0x1f000
   10ecc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ed0 <__freading@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #126976	; 0x1f000
   10ed8:	ldr	pc, [ip, #408]!	; 0x198

00010edc <__gmon_start__@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #126976	; 0x1f000
   10ee4:	ldr	pc, [ip, #400]!	; 0x190

00010ee8 <getopt_long@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #126976	; 0x1f000
   10ef0:	ldr	pc, [ip, #392]!	; 0x188

00010ef4 <__ctype_b_loc@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #126976	; 0x1f000
   10efc:	ldr	pc, [ip, #384]!	; 0x180

00010f00 <exit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #126976	; 0x1f000
   10f08:	ldr	pc, [ip, #376]!	; 0x178

00010f0c <gettext@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #126976	; 0x1f000
   10f14:	ldr	pc, [ip, #368]!	; 0x170

00010f18 <strlen@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #126976	; 0x1f000
   10f20:	ldr	pc, [ip, #360]!	; 0x168

00010f24 <strchr@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #126976	; 0x1f000
   10f2c:	ldr	pc, [ip, #352]!	; 0x160

00010f30 <fprintf@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #126976	; 0x1f000
   10f38:	ldr	pc, [ip, #344]!	; 0x158

00010f3c <__errno_location@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #126976	; 0x1f000
   10f44:	ldr	pc, [ip, #336]!	; 0x150

00010f48 <__cxa_atexit@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #126976	; 0x1f000
   10f50:	ldr	pc, [ip, #328]!	; 0x148

00010f54 <memset@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #126976	; 0x1f000
   10f5c:	ldr	pc, [ip, #320]!	; 0x140

00010f60 <fileno@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #126976	; 0x1f000
   10f68:	ldr	pc, [ip, #312]!	; 0x138

00010f6c <strtoimax@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #126976	; 0x1f000
   10f74:	ldr	pc, [ip, #304]!	; 0x130

00010f78 <fclose@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #126976	; 0x1f000
   10f80:	ldr	pc, [ip, #296]!	; 0x128

00010f84 <fseeko64@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #126976	; 0x1f000
   10f8c:	ldr	pc, [ip, #288]!	; 0x120

00010f90 <setlocale@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #126976	; 0x1f000
   10f98:	ldr	pc, [ip, #280]!	; 0x118

00010f9c <strrchr@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #126976	; 0x1f000
   10fa4:	ldr	pc, [ip, #272]!	; 0x110

00010fa8 <nl_langinfo@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #126976	; 0x1f000
   10fb0:	ldr	pc, [ip, #264]!	; 0x108

00010fb4 <bindtextdomain@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #126976	; 0x1f000
   10fbc:	ldr	pc, [ip, #256]!	; 0x100

00010fc0 <__xstat64@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #126976	; 0x1f000
   10fc8:	ldr	pc, [ip, #248]!	; 0xf8

00010fcc <fputs@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #126976	; 0x1f000
   10fd4:	ldr	pc, [ip, #240]!	; 0xf0

00010fd8 <strncmp@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #126976	; 0x1f000
   10fe0:	ldr	pc, [ip, #232]!	; 0xe8

00010fe4 <abort@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #126976	; 0x1f000
   10fec:	ldr	pc, [ip, #224]!	; 0xe0

00010ff0 <close@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #126976	; 0x1f000
   10ff8:	ldr	pc, [ip, #216]!	; 0xd8

00010ffc <__assert_fail@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #126976	; 0x1f000
   11004:	ldr	pc, [ip, #208]!	; 0xd0

Disassembly of section .text:

00011008 <.text>:
   11008:	mov	fp, #0
   1100c:	mov	lr, #0
   11010:	pop	{r1}		; (ldr r1, [sp], #4)
   11014:	mov	r2, sp
   11018:	push	{r2}		; (str r2, [sp, #-4]!)
   1101c:	push	{r0}		; (str r0, [sp, #-4]!)
   11020:	ldr	ip, [pc, #16]	; 11038 <__assert_fail@plt+0x3c>
   11024:	push	{ip}		; (str ip, [sp, #-4]!)
   11028:	ldr	r0, [pc, #12]	; 1103c <__assert_fail@plt+0x40>
   1102c:	ldr	r3, [pc, #12]	; 11040 <__assert_fail@plt+0x44>
   11030:	bl	10ec4 <__libc_start_main@plt>
   11034:	bl	10fe4 <abort@plt>
   11038:	andeq	lr, r1, r8, lsl #28
   1103c:			; <UNDEFINED> instruction: 0x000114b0
   11040:	andeq	lr, r1, r8, lsr #27
   11044:	ldr	r3, [pc, #20]	; 11060 <__assert_fail@plt+0x64>
   11048:	ldr	r2, [pc, #20]	; 11064 <__assert_fail@plt+0x68>
   1104c:	add	r3, pc, r3
   11050:	ldr	r2, [r3, r2]
   11054:	cmp	r2, #0
   11058:	bxeq	lr
   1105c:	b	10edc <__gmon_start__@plt>
   11060:	andeq	lr, r1, ip, lsr #31
   11064:	ldrdeq	r0, [r0], -r8
   11068:	ldr	r0, [pc, #24]	; 11088 <__assert_fail@plt+0x8c>
   1106c:	ldr	r3, [pc, #24]	; 1108c <__assert_fail@plt+0x90>
   11070:	cmp	r3, r0
   11074:	bxeq	lr
   11078:	ldr	r3, [pc, #16]	; 11090 <__assert_fail@plt+0x94>
   1107c:	cmp	r3, #0
   11080:	bxeq	lr
   11084:	bx	r3
   11088:	andeq	r0, r3, ip, lsr #2
   1108c:	andeq	r0, r3, ip, lsr #2
   11090:	andeq	r0, r0, r0
   11094:	ldr	r0, [pc, #36]	; 110c0 <__assert_fail@plt+0xc4>
   11098:	ldr	r1, [pc, #36]	; 110c4 <__assert_fail@plt+0xc8>
   1109c:	sub	r1, r1, r0
   110a0:	asr	r1, r1, #2
   110a4:	add	r1, r1, r1, lsr #31
   110a8:	asrs	r1, r1, #1
   110ac:	bxeq	lr
   110b0:	ldr	r3, [pc, #16]	; 110c8 <__assert_fail@plt+0xcc>
   110b4:	cmp	r3, #0
   110b8:	bxeq	lr
   110bc:	bx	r3
   110c0:	andeq	r0, r3, ip, lsr #2
   110c4:	andeq	r0, r3, ip, lsr #2
   110c8:	andeq	r0, r0, r0
   110cc:	push	{r4, lr}
   110d0:	ldr	r4, [pc, #24]	; 110f0 <__assert_fail@plt+0xf4>
   110d4:	ldrb	r3, [r4]
   110d8:	cmp	r3, #0
   110dc:	popne	{r4, pc}
   110e0:	bl	11068 <__assert_fail@plt+0x6c>
   110e4:	mov	r3, #1
   110e8:	strb	r3, [r4]
   110ec:	pop	{r4, pc}
   110f0:	andeq	r0, r3, ip, asr #2
   110f4:	b	11094 <__assert_fail@plt+0x98>
   110f8:	push	{fp, lr}
   110fc:	mov	fp, sp
   11100:	sub	sp, sp, #48	; 0x30
   11104:	str	r0, [fp, #-4]
   11108:	ldr	r0, [fp, #-4]
   1110c:	cmp	r0, #0
   11110:	beq	11160 <__assert_fail@plt+0x164>
   11114:	b	11118 <__assert_fail@plt+0x11c>
   11118:	movw	r0, #320	; 0x140
   1111c:	movt	r0, #3
   11120:	ldr	r0, [r0]
   11124:	movw	r1, #61008	; 0xee50
   11128:	movt	r1, #1
   1112c:	str	r0, [fp, #-8]
   11130:	mov	r0, r1
   11134:	bl	10f0c <gettext@plt>
   11138:	movw	r1, #352	; 0x160
   1113c:	movt	r1, #3
   11140:	ldr	r2, [r1]
   11144:	ldr	r1, [fp, #-8]
   11148:	str	r0, [fp, #-12]
   1114c:	mov	r0, r1
   11150:	ldr	r1, [fp, #-12]
   11154:	bl	10f30 <fprintf@plt>
   11158:	str	r0, [fp, #-16]
   1115c:	b	1128c <__assert_fail@plt+0x290>
   11160:	movw	r0, #61047	; 0xee77
   11164:	movt	r0, #1
   11168:	bl	10f0c <gettext@plt>
   1116c:	movw	lr, #352	; 0x160
   11170:	movt	lr, #3
   11174:	ldr	r1, [lr]
   11178:	bl	10dd4 <printf@plt>
   1117c:	movw	r1, #61076	; 0xee94
   11180:	movt	r1, #1
   11184:	str	r0, [fp, #-20]	; 0xffffffec
   11188:	mov	r0, r1
   1118c:	bl	10f0c <gettext@plt>
   11190:	movw	r1, #324	; 0x144
   11194:	movt	r1, #3
   11198:	ldr	r1, [r1]
   1119c:	bl	10db0 <fputs_unlocked@plt>
   111a0:	str	r0, [sp, #24]
   111a4:	bl	11294 <__assert_fail@plt+0x298>
   111a8:	movw	r0, #61351	; 0xefa7
   111ac:	movt	r0, #1
   111b0:	bl	10f0c <gettext@plt>
   111b4:	movw	r1, #324	; 0x144
   111b8:	movt	r1, #3
   111bc:	ldr	r1, [r1]
   111c0:	bl	10db0 <fputs_unlocked@plt>
   111c4:	movw	r1, #61401	; 0xefd9
   111c8:	movt	r1, #1
   111cc:	str	r0, [sp, #20]
   111d0:	mov	r0, r1
   111d4:	bl	10f0c <gettext@plt>
   111d8:	movw	r1, #324	; 0x144
   111dc:	movt	r1, #3
   111e0:	ldr	r1, [r1]
   111e4:	bl	10db0 <fputs_unlocked@plt>
   111e8:	movw	r1, #61478	; 0xf026
   111ec:	movt	r1, #1
   111f0:	str	r0, [sp, #16]
   111f4:	mov	r0, r1
   111f8:	bl	10f0c <gettext@plt>
   111fc:	movw	r1, #324	; 0x144
   11200:	movt	r1, #3
   11204:	ldr	r1, [r1]
   11208:	bl	10db0 <fputs_unlocked@plt>
   1120c:	movw	r1, #61590	; 0xf096
   11210:	movt	r1, #1
   11214:	str	r0, [sp, #12]
   11218:	mov	r0, r1
   1121c:	bl	10f0c <gettext@plt>
   11220:	movw	r1, #324	; 0x144
   11224:	movt	r1, #3
   11228:	ldr	r1, [r1]
   1122c:	bl	10db0 <fputs_unlocked@plt>
   11230:	movw	r1, #61635	; 0xf0c3
   11234:	movt	r1, #1
   11238:	str	r0, [sp, #8]
   1123c:	mov	r0, r1
   11240:	bl	10f0c <gettext@plt>
   11244:	movw	r1, #324	; 0x144
   11248:	movt	r1, #3
   1124c:	ldr	r1, [r1]
   11250:	bl	10db0 <fputs_unlocked@plt>
   11254:	str	r0, [sp, #4]
   11258:	bl	112c8 <__assert_fail@plt+0x2cc>
   1125c:	movw	r0, #61689	; 0xf0f9
   11260:	movt	r0, #1
   11264:	bl	10f0c <gettext@plt>
   11268:	movw	r1, #324	; 0x144
   1126c:	movt	r1, #3
   11270:	ldr	r1, [r1]
   11274:	bl	10db0 <fputs_unlocked@plt>
   11278:	movw	r1, #61880	; 0xf1b8
   1127c:	movt	r1, #1
   11280:	str	r0, [sp]
   11284:	mov	r0, r1
   11288:	bl	112fc <__assert_fail@plt+0x300>
   1128c:	ldr	r0, [fp, #-4]
   11290:	bl	10f00 <exit@plt>
   11294:	push	{fp, lr}
   11298:	mov	fp, sp
   1129c:	sub	sp, sp, #8
   112a0:	movw	r0, #62275	; 0xf343
   112a4:	movt	r0, #1
   112a8:	bl	10f0c <gettext@plt>
   112ac:	movw	lr, #324	; 0x144
   112b0:	movt	lr, #3
   112b4:	ldr	r1, [lr]
   112b8:	bl	10db0 <fputs_unlocked@plt>
   112bc:	str	r0, [sp, #4]
   112c0:	mov	sp, fp
   112c4:	pop	{fp, pc}
   112c8:	push	{fp, lr}
   112cc:	mov	fp, sp
   112d0:	sub	sp, sp, #8
   112d4:	movw	r0, #62350	; 0xf38e
   112d8:	movt	r0, #1
   112dc:	bl	10f0c <gettext@plt>
   112e0:	movw	lr, #324	; 0x144
   112e4:	movt	lr, #3
   112e8:	ldr	r1, [lr]
   112ec:	bl	10db0 <fputs_unlocked@plt>
   112f0:	str	r0, [sp, #4]
   112f4:	mov	sp, fp
   112f8:	pop	{fp, pc}
   112fc:	push	{fp, lr}
   11300:	mov	fp, sp
   11304:	sub	sp, sp, #96	; 0x60
   11308:	add	r1, sp, #36	; 0x24
   1130c:	movw	r2, #63184	; 0xf6d0
   11310:	movt	r2, #1
   11314:	str	r0, [fp, #-4]
   11318:	mov	r0, r1
   1131c:	str	r1, [sp, #20]
   11320:	mov	r1, r2
   11324:	movw	r2, #56	; 0x38
   11328:	bl	10e04 <memcpy@plt>
   1132c:	ldr	r0, [fp, #-4]
   11330:	str	r0, [sp, #32]
   11334:	ldr	r0, [sp, #20]
   11338:	str	r0, [sp, #28]
   1133c:	ldr	r0, [sp, #28]
   11340:	ldr	r0, [r0]
   11344:	movw	r1, #0
   11348:	cmp	r0, r1
   1134c:	movw	r0, #0
   11350:	str	r0, [sp, #16]
   11354:	beq	11380 <__assert_fail@plt+0x384>
   11358:	ldr	r0, [fp, #-4]
   1135c:	ldr	r1, [sp, #28]
   11360:	ldr	r1, [r1]
   11364:	bl	10dc8 <strcmp@plt>
   11368:	cmp	r0, #0
   1136c:	movw	r0, #0
   11370:	moveq	r0, #1
   11374:	mvn	r1, #0
   11378:	eor	r0, r0, r1
   1137c:	str	r0, [sp, #16]
   11380:	ldr	r0, [sp, #16]
   11384:	tst	r0, #1
   11388:	beq	1139c <__assert_fail@plt+0x3a0>
   1138c:	ldr	r0, [sp, #28]
   11390:	add	r0, r0, #8
   11394:	str	r0, [sp, #28]
   11398:	b	1133c <__assert_fail@plt+0x340>
   1139c:	ldr	r0, [sp, #28]
   113a0:	ldr	r0, [r0, #4]
   113a4:	movw	r1, #0
   113a8:	cmp	r0, r1
   113ac:	beq	113bc <__assert_fail@plt+0x3c0>
   113b0:	ldr	r0, [sp, #28]
   113b4:	ldr	r0, [r0, #4]
   113b8:	str	r0, [sp, #32]
   113bc:	movw	r0, #62657	; 0xf4c1
   113c0:	movt	r0, #1
   113c4:	bl	10f0c <gettext@plt>
   113c8:	movw	r1, #62004	; 0xf234
   113cc:	movt	r1, #1
   113d0:	movw	r2, #62680	; 0xf4d8
   113d4:	movt	r2, #1
   113d8:	bl	10dd4 <printf@plt>
   113dc:	movw	r1, #5
   113e0:	str	r0, [sp, #12]
   113e4:	mov	r0, r1
   113e8:	movw	r1, #0
   113ec:	bl	10f90 <setlocale@plt>
   113f0:	str	r0, [sp, #24]
   113f4:	ldr	r0, [sp, #24]
   113f8:	movw	r1, #0
   113fc:	cmp	r0, r1
   11400:	beq	11440 <__assert_fail@plt+0x444>
   11404:	ldr	r0, [sp, #24]
   11408:	movw	r1, #62720	; 0xf500
   1140c:	movt	r1, #1
   11410:	movw	r2, #3
   11414:	bl	10fd8 <strncmp@plt>
   11418:	cmp	r0, #0
   1141c:	beq	11440 <__assert_fail@plt+0x444>
   11420:	movw	r0, #62724	; 0xf504
   11424:	movt	r0, #1
   11428:	bl	10f0c <gettext@plt>
   1142c:	movw	lr, #324	; 0x144
   11430:	movt	lr, #3
   11434:	ldr	r1, [lr]
   11438:	bl	10db0 <fputs_unlocked@plt>
   1143c:	str	r0, [sp, #8]
   11440:	movw	r0, #62795	; 0xf54b
   11444:	movt	r0, #1
   11448:	bl	10f0c <gettext@plt>
   1144c:	ldr	r2, [fp, #-4]
   11450:	movw	r1, #62680	; 0xf4d8
   11454:	movt	r1, #1
   11458:	bl	10dd4 <printf@plt>
   1145c:	movw	r1, #62822	; 0xf566
   11460:	movt	r1, #1
   11464:	str	r0, [sp, #4]
   11468:	mov	r0, r1
   1146c:	bl	10f0c <gettext@plt>
   11470:	ldr	r1, [sp, #32]
   11474:	ldr	r2, [sp, #32]
   11478:	ldr	lr, [fp, #-4]
   1147c:	cmp	r2, lr
   11480:	movw	r2, #0
   11484:	moveq	r2, #1
   11488:	tst	r2, #1
   1148c:	movw	r2, #62872	; 0xf598
   11490:	movt	r2, #1
   11494:	movw	lr, #62590	; 0xf47e
   11498:	movt	lr, #1
   1149c:	movne	r2, lr
   114a0:	bl	10dd4 <printf@plt>
   114a4:	str	r0, [sp]
   114a8:	mov	sp, fp
   114ac:	pop	{fp, pc}
   114b0:	push	{r4, r5, r6, r7, fp, lr}
   114b4:	add	fp, sp, #16
   114b8:	sub	sp, sp, #360	; 0x168
   114bc:	mov	r2, #0
   114c0:	str	r2, [fp, #-20]	; 0xffffffec
   114c4:	str	r0, [fp, #-24]	; 0xffffffe8
   114c8:	str	r1, [fp, #-28]	; 0xffffffe4
   114cc:	strb	r2, [fp, #-29]	; 0xffffffe3
   114d0:	mvn	r0, #0
   114d4:	str	r0, [fp, #-44]	; 0xffffffd4
   114d8:	str	r0, [fp, #-48]	; 0xffffffd0
   114dc:	movw	r0, #0
   114e0:	str	r0, [fp, #-52]	; 0xffffffcc
   114e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   114e8:	ldr	r0, [r0]
   114ec:	bl	141c4 <__assert_fail@plt+0x31c8>
   114f0:	movw	r0, #6
   114f4:	movw	r1, #62872	; 0xf598
   114f8:	movt	r1, #1
   114fc:	bl	10f90 <setlocale@plt>
   11500:	movw	r1, #62008	; 0xf238
   11504:	movt	r1, #1
   11508:	str	r0, [sp, #168]	; 0xa8
   1150c:	mov	r0, r1
   11510:	movw	r1, #61889	; 0xf1c1
   11514:	movt	r1, #1
   11518:	bl	10fb4 <bindtextdomain@plt>
   1151c:	movw	r1, #62008	; 0xf238
   11520:	movt	r1, #1
   11524:	str	r0, [sp, #164]	; 0xa4
   11528:	mov	r0, r1
   1152c:	bl	10e40 <textdomain@plt>
   11530:	movw	r1, #16548	; 0x40a4
   11534:	movt	r1, #1
   11538:	str	r0, [sp, #160]	; 0xa0
   1153c:	mov	r0, r1
   11540:	bl	1ee0c <__assert_fail@plt+0xde10>
   11544:	str	r0, [sp, #156]	; 0x9c
   11548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1154c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11550:	movw	r2, #61913	; 0xf1d9
   11554:	movt	r2, #1
   11558:	movw	r3, #63072	; 0xf660
   1155c:	movt	r3, #1
   11560:	movw	ip, #0
   11564:	str	ip, [sp]
   11568:	bl	10ee8 <getopt_long@plt>
   1156c:	str	r0, [fp, #-56]	; 0xffffffc8
   11570:	cmn	r0, #1
   11574:	beq	11984 <__assert_fail@plt+0x988>
   11578:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1157c:	cmn	r0, #3
   11580:	str	r0, [sp, #152]	; 0x98
   11584:	beq	11930 <__assert_fail@plt+0x934>
   11588:	b	1158c <__assert_fail@plt+0x590>
   1158c:	ldr	r0, [sp, #152]	; 0x98
   11590:	cmn	r0, #2
   11594:	beq	11928 <__assert_fail@plt+0x92c>
   11598:	b	1159c <__assert_fail@plt+0x5a0>
   1159c:	ldr	r0, [sp, #152]	; 0x98
   115a0:	cmp	r0, #99	; 0x63
   115a4:	beq	115dc <__assert_fail@plt+0x5e0>
   115a8:	b	115ac <__assert_fail@plt+0x5b0>
   115ac:	ldr	r0, [sp, #152]	; 0x98
   115b0:	cmp	r0, #111	; 0x6f
   115b4:	beq	115f0 <__assert_fail@plt+0x5f4>
   115b8:	b	115bc <__assert_fail@plt+0x5c0>
   115bc:	ldr	r0, [sp, #152]	; 0x98
   115c0:	cmp	r0, #114	; 0x72
   115c4:	beq	11604 <__assert_fail@plt+0x608>
   115c8:	b	115cc <__assert_fail@plt+0x5d0>
   115cc:	ldr	r0, [sp, #152]	; 0x98
   115d0:	cmp	r0, #115	; 0x73
   115d4:	beq	11620 <__assert_fail@plt+0x624>
   115d8:	b	11978 <__assert_fail@plt+0x97c>
   115dc:	movw	r0, #336	; 0x150
   115e0:	movt	r0, #3
   115e4:	movw	r1, #1
   115e8:	strb	r1, [r0]
   115ec:	b	11980 <__assert_fail@plt+0x984>
   115f0:	movw	r0, #337	; 0x151
   115f4:	movt	r0, #3
   115f8:	movw	r1, #1
   115fc:	strb	r1, [r0]
   11600:	b	11980 <__assert_fail@plt+0x984>
   11604:	movw	r0, #328	; 0x148
   11608:	movt	r0, #3
   1160c:	ldr	r0, [r0]
   11610:	movw	r1, #340	; 0x154
   11614:	movt	r1, #3
   11618:	str	r0, [r1]
   1161c:	b	11980 <__assert_fail@plt+0x984>
   11620:	b	11624 <__assert_fail@plt+0x628>
   11624:	bl	10ef4 <__ctype_b_loc@plt>
   11628:	ldr	r0, [r0]
   1162c:	movw	lr, #328	; 0x148
   11630:	movt	lr, #3
   11634:	ldr	lr, [lr]
   11638:	ldrb	lr, [lr]
   1163c:	str	r0, [sp, #148]	; 0x94
   11640:	mov	r0, lr
   11644:	bl	11f44 <__assert_fail@plt+0xf48>
   11648:	mov	lr, r0
   1164c:	ldr	r1, [sp, #148]	; 0x94
   11650:	add	r0, r1, r0, lsl #1
   11654:	ldrh	r0, [r0]
   11658:	and	r0, r0, #8192	; 0x2000
   1165c:	cmp	r0, #0
   11660:	str	lr, [sp, #144]	; 0x90
   11664:	beq	11680 <__assert_fail@plt+0x684>
   11668:	movw	r0, #328	; 0x148
   1166c:	movt	r0, #3
   11670:	ldr	r1, [r0]
   11674:	add	r1, r1, #1
   11678:	str	r1, [r0]
   1167c:	b	11624 <__assert_fail@plt+0x628>
   11680:	movw	r0, #328	; 0x148
   11684:	movt	r0, #3
   11688:	ldr	r0, [r0]
   1168c:	ldrb	r0, [r0]
   11690:	sub	r0, r0, #37	; 0x25
   11694:	cmp	r0, #25
   11698:	str	r0, [sp, #140]	; 0x8c
   1169c:	bhi	11794 <__assert_fail@plt+0x798>
   116a0:	add	r0, pc, #8
   116a4:	ldr	r1, [sp, #140]	; 0x8c
   116a8:	ldr	r0, [r0, r1, lsl #2]
   116ac:	mov	pc, r0
   116b0:	andeq	r1, r1, r8, ror r7
   116b4:	muleq	r1, r4, r7
   116b8:	muleq	r1, r4, r7
   116bc:	muleq	r1, r4, r7
   116c0:	muleq	r1, r4, r7
   116c4:	muleq	r1, r4, r7
   116c8:	muleq	r1, r4, r7
   116cc:	muleq	r1, r4, r7
   116d0:	muleq	r1, r4, r7
   116d4:	muleq	r1, r4, r7
   116d8:	andeq	r1, r1, r8, asr r7
   116dc:	muleq	r1, r4, r7
   116e0:	muleq	r1, r4, r7
   116e4:	muleq	r1, r4, r7
   116e8:	muleq	r1, r4, r7
   116ec:	muleq	r1, r4, r7
   116f0:	muleq	r1, r4, r7
   116f4:	muleq	r1, r4, r7
   116f8:	muleq	r1, r4, r7
   116fc:	muleq	r1, r4, r7
   11700:	muleq	r1, r4, r7
   11704:	muleq	r1, r4, r7
   11708:	muleq	r1, r4, r7
   1170c:	andeq	r1, r1, r8, lsl r7
   11710:	muleq	r1, r4, r7
   11714:	andeq	r1, r1, r8, lsr r7
   11718:	movw	r0, #3
   1171c:	str	r0, [fp, #-52]	; 0xffffffcc
   11720:	movw	r0, #328	; 0x148
   11724:	movt	r0, #3
   11728:	ldr	r1, [r0]
   1172c:	add	r1, r1, #1
   11730:	str	r1, [r0]
   11734:	b	11794 <__assert_fail@plt+0x798>
   11738:	movw	r0, #2
   1173c:	str	r0, [fp, #-52]	; 0xffffffcc
   11740:	movw	r0, #328	; 0x148
   11744:	movt	r0, #3
   11748:	ldr	r1, [r0]
   1174c:	add	r1, r1, #1
   11750:	str	r1, [r0]
   11754:	b	11794 <__assert_fail@plt+0x798>
   11758:	movw	r0, #4
   1175c:	str	r0, [fp, #-52]	; 0xffffffcc
   11760:	movw	r0, #328	; 0x148
   11764:	movt	r0, #3
   11768:	ldr	r1, [r0]
   1176c:	add	r1, r1, #1
   11770:	str	r1, [r0]
   11774:	b	11794 <__assert_fail@plt+0x798>
   11778:	movw	r0, #5
   1177c:	str	r0, [fp, #-52]	; 0xffffffcc
   11780:	movw	r0, #328	; 0x148
   11784:	movt	r0, #3
   11788:	ldr	r1, [r0]
   1178c:	add	r1, r1, #1
   11790:	str	r1, [r0]
   11794:	b	11798 <__assert_fail@plt+0x79c>
   11798:	bl	10ef4 <__ctype_b_loc@plt>
   1179c:	ldr	r0, [r0]
   117a0:	movw	lr, #328	; 0x148
   117a4:	movt	lr, #3
   117a8:	ldr	lr, [lr]
   117ac:	ldrb	lr, [lr]
   117b0:	str	r0, [sp, #136]	; 0x88
   117b4:	mov	r0, lr
   117b8:	bl	11f44 <__assert_fail@plt+0xf48>
   117bc:	mov	lr, r0
   117c0:	ldr	r1, [sp, #136]	; 0x88
   117c4:	add	r0, r1, r0, lsl #1
   117c8:	ldrh	r0, [r0]
   117cc:	and	r0, r0, #8192	; 0x2000
   117d0:	cmp	r0, #0
   117d4:	str	lr, [sp, #132]	; 0x84
   117d8:	beq	117f4 <__assert_fail@plt+0x7f8>
   117dc:	movw	r0, #328	; 0x148
   117e0:	movt	r0, #3
   117e4:	ldr	r1, [r0]
   117e8:	add	r1, r1, #1
   117ec:	str	r1, [r0]
   117f0:	b	11798 <__assert_fail@plt+0x79c>
   117f4:	movw	r0, #328	; 0x148
   117f8:	movt	r0, #3
   117fc:	ldr	r0, [r0]
   11800:	ldrb	r0, [r0]
   11804:	cmp	r0, #43	; 0x2b
   11808:	beq	11824 <__assert_fail@plt+0x828>
   1180c:	movw	r0, #328	; 0x148
   11810:	movt	r0, #3
   11814:	ldr	r0, [r0]
   11818:	ldrb	r0, [r0]
   1181c:	cmp	r0, #45	; 0x2d
   11820:	bne	11864 <__assert_fail@plt+0x868>
   11824:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11828:	cmp	r0, #0
   1182c:	beq	1185c <__assert_fail@plt+0x860>
   11830:	movw	r0, #61920	; 0xf1e0
   11834:	movt	r0, #1
   11838:	bl	10f0c <gettext@plt>
   1183c:	movw	lr, #0
   11840:	str	r0, [sp, #128]	; 0x80
   11844:	mov	r0, lr
   11848:	mov	r1, lr
   1184c:	ldr	r2, [sp, #128]	; 0x80
   11850:	bl	10ea0 <error@plt>
   11854:	movw	r0, #1
   11858:	bl	110f8 <__assert_fail@plt+0xfc>
   1185c:	movw	r0, #1
   11860:	str	r0, [fp, #-52]	; 0xffffffcc
   11864:	movw	r0, #328	; 0x148
   11868:	movt	r0, #3
   1186c:	ldr	r0, [r0]
   11870:	movw	r1, #61972	; 0xf214
   11874:	movt	r1, #1
   11878:	str	r0, [sp, #124]	; 0x7c
   1187c:	mov	r0, r1
   11880:	bl	10f0c <gettext@plt>
   11884:	mov	r1, sp
   11888:	mov	lr, #0
   1188c:	str	lr, [r1, #16]
   11890:	str	r0, [r1, #12]
   11894:	movw	r0, #61958	; 0xf206
   11898:	movt	r0, #1
   1189c:	str	r0, [r1, #8]
   118a0:	mvn	r0, #-2147483648	; 0x80000000
   118a4:	str	r0, [r1, #4]
   118a8:	mvn	r0, #0
   118ac:	str	r0, [r1]
   118b0:	mov	r3, #-2147483648	; 0x80000000
   118b4:	ldr	r0, [sp, #124]	; 0x7c
   118b8:	mov	r2, lr
   118bc:	bl	1a2dc <__assert_fail@plt+0x92e0>
   118c0:	str	r1, [fp, #-36]	; 0xffffffdc
   118c4:	str	r0, [fp, #-40]	; 0xffffffd8
   118c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   118cc:	cmp	r0, #5
   118d0:	beq	118e0 <__assert_fail@plt+0x8e4>
   118d4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   118d8:	cmp	r0, #4
   118dc:	bne	1191c <__assert_fail@plt+0x920>
   118e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   118e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   118e8:	orr	r0, r0, r1
   118ec:	cmp	r0, #0
   118f0:	bne	1191c <__assert_fail@plt+0x920>
   118f4:	b	118f8 <__assert_fail@plt+0x8fc>
   118f8:	movw	r0, #61987	; 0xf223
   118fc:	movt	r0, #1
   11900:	bl	10f0c <gettext@plt>
   11904:	movw	lr, #1
   11908:	str	r0, [sp, #120]	; 0x78
   1190c:	mov	r0, lr
   11910:	movw	r1, #0
   11914:	ldr	r2, [sp, #120]	; 0x78
   11918:	bl	10ea0 <error@plt>
   1191c:	movw	r0, #1
   11920:	strb	r0, [fp, #-29]	; 0xffffffe3
   11924:	b	11980 <__assert_fail@plt+0x984>
   11928:	movw	r0, #0
   1192c:	bl	110f8 <__assert_fail@plt+0xfc>
   11930:	movw	r0, #324	; 0x144
   11934:	movt	r0, #3
   11938:	ldr	r0, [r0]
   1193c:	movw	r1, #228	; 0xe4
   11940:	movt	r1, #3
   11944:	ldr	r3, [r1]
   11948:	movw	r1, #61880	; 0xf1b8
   1194c:	movt	r1, #1
   11950:	movw	r2, #62004	; 0xf234
   11954:	movt	r2, #1
   11958:	movw	ip, #62018	; 0xf242
   1195c:	movt	ip, #1
   11960:	str	ip, [sp]
   11964:	movw	ip, #0
   11968:	str	ip, [sp, #4]
   1196c:	bl	170dc <__assert_fail@plt+0x60e0>
   11970:	movw	r0, #0
   11974:	bl	10f00 <exit@plt>
   11978:	movw	r0, #1
   1197c:	bl	110f8 <__assert_fail@plt+0xfc>
   11980:	b	11548 <__assert_fail@plt+0x54c>
   11984:	movw	r0, #312	; 0x138
   11988:	movt	r0, #3
   1198c:	ldr	r0, [r0]
   11990:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11994:	add	r0, r1, r0, lsl #2
   11998:	str	r0, [fp, #-28]	; 0xffffffe4
   1199c:	movw	r0, #312	; 0x138
   119a0:	movt	r0, #3
   119a4:	ldr	r0, [r0]
   119a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   119ac:	sub	r0, r1, r0
   119b0:	str	r0, [fp, #-24]	; 0xffffffe8
   119b4:	movw	r0, #340	; 0x154
   119b8:	movt	r0, #3
   119bc:	ldr	r0, [r0]
   119c0:	movw	r1, #0
   119c4:	cmp	r0, r1
   119c8:	bne	11a3c <__assert_fail@plt+0xa40>
   119cc:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   119d0:	tst	r0, #1
   119d4:	bne	11a3c <__assert_fail@plt+0xa40>
   119d8:	movw	r0, #62032	; 0xf250
   119dc:	movt	r0, #1
   119e0:	bl	10f0c <gettext@plt>
   119e4:	movw	lr, #0
   119e8:	str	r0, [sp, #116]	; 0x74
   119ec:	mov	r0, lr
   119f0:	movw	r1, #62065	; 0xf271
   119f4:	movt	r1, #1
   119f8:	bl	167f4 <__assert_fail@plt+0x57f8>
   119fc:	movw	r1, #1
   11a00:	str	r0, [sp, #112]	; 0x70
   11a04:	mov	r0, r1
   11a08:	movw	r1, #62072	; 0xf278
   11a0c:	movt	r1, #1
   11a10:	bl	167f4 <__assert_fail@plt+0x57f8>
   11a14:	movw	r1, #0
   11a18:	str	r0, [sp, #108]	; 0x6c
   11a1c:	mov	r0, r1
   11a20:	ldr	r2, [sp, #116]	; 0x74
   11a24:	ldr	r3, [sp, #112]	; 0x70
   11a28:	ldr	lr, [sp, #108]	; 0x6c
   11a2c:	str	lr, [sp]
   11a30:	bl	10ea0 <error@plt>
   11a34:	movw	r0, #1
   11a38:	bl	110f8 <__assert_fail@plt+0xfc>
   11a3c:	movw	r0, #340	; 0x154
   11a40:	movt	r0, #3
   11a44:	ldr	r0, [r0]
   11a48:	movw	r1, #0
   11a4c:	cmp	r0, r1
   11a50:	beq	11ad0 <__assert_fail@plt+0xad4>
   11a54:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11a58:	tst	r0, #1
   11a5c:	beq	11ad0 <__assert_fail@plt+0xad4>
   11a60:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11a64:	cmp	r0, #0
   11a68:	bne	11ad0 <__assert_fail@plt+0xad4>
   11a6c:	movw	r0, #62084	; 0xf284
   11a70:	movt	r0, #1
   11a74:	bl	10f0c <gettext@plt>
   11a78:	movw	lr, #0
   11a7c:	str	r0, [sp, #104]	; 0x68
   11a80:	mov	r0, lr
   11a84:	movw	r1, #62065	; 0xf271
   11a88:	movt	r1, #1
   11a8c:	bl	167f4 <__assert_fail@plt+0x57f8>
   11a90:	movw	r1, #1
   11a94:	str	r0, [sp, #100]	; 0x64
   11a98:	mov	r0, r1
   11a9c:	movw	r1, #62072	; 0xf278
   11aa0:	movt	r1, #1
   11aa4:	bl	167f4 <__assert_fail@plt+0x57f8>
   11aa8:	movw	r1, #0
   11aac:	str	r0, [sp, #96]	; 0x60
   11ab0:	mov	r0, r1
   11ab4:	ldr	r2, [sp, #104]	; 0x68
   11ab8:	ldr	r3, [sp, #100]	; 0x64
   11abc:	ldr	lr, [sp, #96]	; 0x60
   11ac0:	str	lr, [sp]
   11ac4:	bl	10ea0 <error@plt>
   11ac8:	movw	r0, #1
   11acc:	bl	110f8 <__assert_fail@plt+0xfc>
   11ad0:	movw	r0, #337	; 0x151
   11ad4:	movt	r0, #3
   11ad8:	ldrb	r0, [r0]
   11adc:	tst	r0, #1
   11ae0:	beq	11b54 <__assert_fail@plt+0xb58>
   11ae4:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11ae8:	tst	r0, #1
   11aec:	bne	11b54 <__assert_fail@plt+0xb58>
   11af0:	movw	r0, #62123	; 0xf2ab
   11af4:	movt	r0, #1
   11af8:	bl	10f0c <gettext@plt>
   11afc:	movw	lr, #0
   11b00:	str	r0, [sp, #92]	; 0x5c
   11b04:	mov	r0, lr
   11b08:	movw	r1, #62155	; 0xf2cb
   11b0c:	movt	r1, #1
   11b10:	bl	167f4 <__assert_fail@plt+0x57f8>
   11b14:	movw	r1, #1
   11b18:	str	r0, [sp, #88]	; 0x58
   11b1c:	mov	r0, r1
   11b20:	movw	r1, #62065	; 0xf271
   11b24:	movt	r1, #1
   11b28:	bl	167f4 <__assert_fail@plt+0x57f8>
   11b2c:	movw	r1, #0
   11b30:	str	r0, [sp, #84]	; 0x54
   11b34:	mov	r0, r1
   11b38:	ldr	r2, [sp, #92]	; 0x5c
   11b3c:	ldr	r3, [sp, #88]	; 0x58
   11b40:	ldr	lr, [sp, #84]	; 0x54
   11b44:	str	lr, [sp]
   11b48:	bl	10ea0 <error@plt>
   11b4c:	movw	r0, #1
   11b50:	bl	110f8 <__assert_fail@plt+0xfc>
   11b54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b58:	cmp	r0, #1
   11b5c:	bge	11b8c <__assert_fail@plt+0xb90>
   11b60:	movw	r0, #62167	; 0xf2d7
   11b64:	movt	r0, #1
   11b68:	bl	10f0c <gettext@plt>
   11b6c:	movw	lr, #0
   11b70:	str	r0, [sp, #80]	; 0x50
   11b74:	mov	r0, lr
   11b78:	mov	r1, lr
   11b7c:	ldr	r2, [sp, #80]	; 0x50
   11b80:	bl	10ea0 <error@plt>
   11b84:	movw	r0, #1
   11b88:	bl	110f8 <__assert_fail@plt+0xfc>
   11b8c:	movw	r0, #340	; 0x154
   11b90:	movt	r0, #3
   11b94:	ldr	r0, [r0]
   11b98:	movw	r1, #0
   11b9c:	cmp	r0, r1
   11ba0:	beq	11d7c <__assert_fail@plt+0xd80>
   11ba4:	mvn	r0, #0
   11ba8:	str	r0, [fp, #-164]	; 0xffffff5c
   11bac:	str	r0, [fp, #-168]	; 0xffffff58
   11bb0:	movw	r0, #340	; 0x154
   11bb4:	movt	r0, #3
   11bb8:	ldr	r0, [r0]
   11bbc:	sub	r1, fp, #160	; 0xa0
   11bc0:	bl	1ee24 <__assert_fail@plt+0xde28>
   11bc4:	cmp	r0, #0
   11bc8:	beq	11c1c <__assert_fail@plt+0xc20>
   11bcc:	bl	10f3c <__errno_location@plt>
   11bd0:	ldr	r1, [r0]
   11bd4:	movw	r0, #62188	; 0xf2ec
   11bd8:	movt	r0, #1
   11bdc:	str	r1, [sp, #76]	; 0x4c
   11be0:	bl	10f0c <gettext@plt>
   11be4:	movw	r1, #340	; 0x154
   11be8:	movt	r1, #3
   11bec:	ldr	r1, [r1]
   11bf0:	movw	lr, #4
   11bf4:	str	r0, [sp, #72]	; 0x48
   11bf8:	mov	r0, lr
   11bfc:	bl	16488 <__assert_fail@plt+0x548c>
   11c00:	movw	r1, #1
   11c04:	str	r0, [sp, #68]	; 0x44
   11c08:	mov	r0, r1
   11c0c:	ldr	r1, [sp, #76]	; 0x4c
   11c10:	ldr	r2, [sp, #72]	; 0x48
   11c14:	ldr	r3, [sp, #68]	; 0x44
   11c18:	bl	10ea0 <error@plt>
   11c1c:	sub	r0, fp, #160	; 0xa0
   11c20:	bl	11f58 <__assert_fail@plt+0xf5c>
   11c24:	tst	r0, #1
   11c28:	beq	11c40 <__assert_fail@plt+0xc44>
   11c2c:	ldr	r0, [fp, #-112]	; 0xffffff90
   11c30:	ldr	r1, [fp, #-108]	; 0xffffff94
   11c34:	str	r1, [fp, #-164]	; 0xffffff5c
   11c38:	str	r0, [fp, #-168]	; 0xffffff58
   11c3c:	b	11ce8 <__assert_fail@plt+0xcec>
   11c40:	movw	r0, #340	; 0x154
   11c44:	movt	r0, #3
   11c48:	ldr	r0, [r0]
   11c4c:	movw	r1, #0
   11c50:	bl	10eac <open64@plt>
   11c54:	str	r0, [fp, #-172]	; 0xffffff54
   11c58:	ldr	r0, [fp, #-172]	; 0xffffff54
   11c5c:	movw	r1, #0
   11c60:	cmp	r1, r0
   11c64:	bgt	11ce4 <__assert_fail@plt+0xce8>
   11c68:	ldr	r0, [fp, #-172]	; 0xffffff54
   11c6c:	mov	r1, sp
   11c70:	mov	r2, #2
   11c74:	str	r2, [r1]
   11c78:	mov	r1, #0
   11c7c:	mov	r2, r1
   11c80:	mov	r3, r1
   11c84:	bl	10e64 <lseek64@plt>
   11c88:	str	r1, [fp, #-180]	; 0xffffff4c
   11c8c:	str	r0, [fp, #-184]	; 0xffffff48
   11c90:	bl	10f3c <__errno_location@plt>
   11c94:	ldr	r0, [r0]
   11c98:	str	r0, [sp, #188]	; 0xbc
   11c9c:	ldr	r0, [fp, #-172]	; 0xffffff54
   11ca0:	bl	10ff0 <close@plt>
   11ca4:	ldr	r1, [fp, #-180]	; 0xffffff4c
   11ca8:	cmp	r1, #0
   11cac:	str	r0, [sp, #64]	; 0x40
   11cb0:	blt	11ccc <__assert_fail@plt+0xcd0>
   11cb4:	b	11cb8 <__assert_fail@plt+0xcbc>
   11cb8:	ldr	r0, [fp, #-184]	; 0xffffff48
   11cbc:	ldr	r1, [fp, #-180]	; 0xffffff4c
   11cc0:	str	r1, [fp, #-164]	; 0xffffff5c
   11cc4:	str	r0, [fp, #-168]	; 0xffffff58
   11cc8:	b	11ce0 <__assert_fail@plt+0xce4>
   11ccc:	ldr	r0, [sp, #188]	; 0xbc
   11cd0:	str	r0, [sp, #60]	; 0x3c
   11cd4:	bl	10f3c <__errno_location@plt>
   11cd8:	ldr	lr, [sp, #60]	; 0x3c
   11cdc:	str	lr, [r0]
   11ce0:	b	11ce4 <__assert_fail@plt+0xce8>
   11ce4:	b	11ce8 <__assert_fail@plt+0xcec>
   11ce8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   11cec:	cmn	r0, #1
   11cf0:	bgt	11d48 <__assert_fail@plt+0xd4c>
   11cf4:	b	11cf8 <__assert_fail@plt+0xcfc>
   11cf8:	bl	10f3c <__errno_location@plt>
   11cfc:	ldr	r1, [r0]
   11d00:	movw	r0, #62203	; 0xf2fb
   11d04:	movt	r0, #1
   11d08:	str	r1, [sp, #56]	; 0x38
   11d0c:	bl	10f0c <gettext@plt>
   11d10:	movw	r1, #340	; 0x154
   11d14:	movt	r1, #3
   11d18:	ldr	r1, [r1]
   11d1c:	movw	lr, #4
   11d20:	str	r0, [sp, #52]	; 0x34
   11d24:	mov	r0, lr
   11d28:	bl	16488 <__assert_fail@plt+0x548c>
   11d2c:	movw	r1, #1
   11d30:	str	r0, [sp, #48]	; 0x30
   11d34:	mov	r0, r1
   11d38:	ldr	r1, [sp, #56]	; 0x38
   11d3c:	ldr	r2, [sp, #52]	; 0x34
   11d40:	ldr	r3, [sp, #48]	; 0x30
   11d44:	bl	10ea0 <error@plt>
   11d48:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11d4c:	tst	r0, #1
   11d50:	bne	11d68 <__assert_fail@plt+0xd6c>
   11d54:	ldr	r0, [fp, #-168]	; 0xffffff58
   11d58:	ldr	r1, [fp, #-164]	; 0xffffff5c
   11d5c:	str	r1, [fp, #-36]	; 0xffffffdc
   11d60:	str	r0, [fp, #-40]	; 0xffffffd8
   11d64:	b	11d78 <__assert_fail@plt+0xd7c>
   11d68:	ldr	r0, [fp, #-168]	; 0xffffff58
   11d6c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   11d70:	str	r1, [fp, #-44]	; 0xffffffd4
   11d74:	str	r0, [fp, #-48]	; 0xffffffd0
   11d78:	b	11d7c <__assert_fail@plt+0xd80>
   11d7c:	movw	r0, #336	; 0x150
   11d80:	movt	r0, #3
   11d84:	ldrb	r0, [r0]
   11d88:	tst	r0, #1
   11d8c:	movw	r0, #0
   11d90:	moveq	r0, #64	; 0x40
   11d94:	orr	r0, r0, #1
   11d98:	orr	r0, r0, #2048	; 0x800
   11d9c:	str	r0, [sp, #184]	; 0xb8
   11da0:	movw	r0, #0
   11da4:	strb	r0, [sp, #183]	; 0xb7
   11da8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11dac:	ldr	r0, [r0]
   11db0:	str	r0, [sp, #176]	; 0xb0
   11db4:	movw	r1, #0
   11db8:	cmp	r0, r1
   11dbc:	beq	11f2c <__assert_fail@plt+0xf30>
   11dc0:	ldr	r0, [sp, #176]	; 0xb0
   11dc4:	ldr	r1, [sp, #184]	; 0xb8
   11dc8:	movw	r2, #438	; 0x1b6
   11dcc:	bl	10eac <open64@plt>
   11dd0:	str	r0, [sp, #172]	; 0xac
   11dd4:	ldr	r0, [sp, #172]	; 0xac
   11dd8:	cmp	r0, #0
   11ddc:	bge	11e58 <__assert_fail@plt+0xe5c>
   11de0:	movw	r0, #336	; 0x150
   11de4:	movt	r0, #3
   11de8:	ldrb	r0, [r0]
   11dec:	tst	r0, #1
   11df0:	beq	11e04 <__assert_fail@plt+0xe08>
   11df4:	bl	10f3c <__errno_location@plt>
   11df8:	ldr	r0, [r0]
   11dfc:	cmp	r0, #2
   11e00:	beq	11e54 <__assert_fail@plt+0xe58>
   11e04:	bl	10f3c <__errno_location@plt>
   11e08:	ldr	r1, [r0]
   11e0c:	movw	r0, #62229	; 0xf315
   11e10:	movt	r0, #1
   11e14:	str	r1, [sp, #44]	; 0x2c
   11e18:	bl	10f0c <gettext@plt>
   11e1c:	ldr	r1, [sp, #176]	; 0xb0
   11e20:	movw	lr, #4
   11e24:	str	r0, [sp, #40]	; 0x28
   11e28:	mov	r0, lr
   11e2c:	bl	16488 <__assert_fail@plt+0x548c>
   11e30:	movw	r1, #0
   11e34:	str	r0, [sp, #36]	; 0x24
   11e38:	mov	r0, r1
   11e3c:	ldr	r1, [sp, #44]	; 0x2c
   11e40:	ldr	r2, [sp, #40]	; 0x28
   11e44:	ldr	r3, [sp, #36]	; 0x24
   11e48:	bl	10ea0 <error@plt>
   11e4c:	movw	r0, #1
   11e50:	strb	r0, [sp, #183]	; 0xb7
   11e54:	b	11f18 <__assert_fail@plt+0xf1c>
   11e58:	ldr	r0, [sp, #172]	; 0xac
   11e5c:	ldr	r1, [sp, #176]	; 0xb0
   11e60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11e64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11e68:	ldr	ip, [fp, #-48]	; 0xffffffd0
   11e6c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   11e70:	ldr	r4, [fp, #-52]	; 0xffffffcc
   11e74:	mov	r5, sp
   11e78:	str	r4, [r5, #8]
   11e7c:	str	lr, [r5, #4]
   11e80:	str	ip, [r5]
   11e84:	bl	11fd8 <__assert_fail@plt+0xfdc>
   11e88:	mvn	r1, #0
   11e8c:	eor	r0, r0, r1
   11e90:	and	r0, r0, #1
   11e94:	ldrb	r1, [sp, #183]	; 0xb7
   11e98:	and	r1, r1, #1
   11e9c:	orr	r0, r1, r0
   11ea0:	cmp	r0, #0
   11ea4:	movw	r0, #0
   11ea8:	movne	r0, #1
   11eac:	and	r0, r0, #1
   11eb0:	strb	r0, [sp, #183]	; 0xb7
   11eb4:	ldr	r0, [sp, #172]	; 0xac
   11eb8:	bl	10ff0 <close@plt>
   11ebc:	cmp	r0, #0
   11ec0:	beq	11f14 <__assert_fail@plt+0xf18>
   11ec4:	bl	10f3c <__errno_location@plt>
   11ec8:	ldr	r1, [r0]
   11ecc:	movw	r0, #62256	; 0xf330
   11ed0:	movt	r0, #1
   11ed4:	str	r1, [sp, #32]
   11ed8:	bl	10f0c <gettext@plt>
   11edc:	ldr	r1, [sp, #176]	; 0xb0
   11ee0:	movw	lr, #4
   11ee4:	str	r0, [sp, #28]
   11ee8:	mov	r0, lr
   11eec:	bl	16488 <__assert_fail@plt+0x548c>
   11ef0:	movw	r1, #0
   11ef4:	str	r0, [sp, #24]
   11ef8:	mov	r0, r1
   11efc:	ldr	r1, [sp, #32]
   11f00:	ldr	r2, [sp, #28]
   11f04:	ldr	r3, [sp, #24]
   11f08:	bl	10ea0 <error@plt>
   11f0c:	movw	r0, #1
   11f10:	strb	r0, [sp, #183]	; 0xb7
   11f14:	b	11f18 <__assert_fail@plt+0xf1c>
   11f18:	b	11f1c <__assert_fail@plt+0xf20>
   11f1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f20:	add	r0, r0, #4
   11f24:	str	r0, [fp, #-28]	; 0xffffffe4
   11f28:	b	11da8 <__assert_fail@plt+0xdac>
   11f2c:	ldrb	r0, [sp, #183]	; 0xb7
   11f30:	tst	r0, #1
   11f34:	movw	r0, #1
   11f38:	moveq	r0, #0
   11f3c:	sub	sp, fp, #16
   11f40:	pop	{r4, r5, r6, r7, fp, pc}
   11f44:	sub	sp, sp, #4
   11f48:	strb	r0, [sp, #3]
   11f4c:	ldrb	r0, [sp, #3]
   11f50:	add	sp, sp, #4
   11f54:	bx	lr
   11f58:	sub	sp, sp, #8
   11f5c:	str	r0, [sp, #4]
   11f60:	ldr	r0, [sp, #4]
   11f64:	ldr	r0, [r0, #16]
   11f68:	and	r0, r0, #61440	; 0xf000
   11f6c:	cmp	r0, #32768	; 0x8000
   11f70:	movw	r0, #1
   11f74:	str	r0, [sp]
   11f78:	beq	11fc8 <__assert_fail@plt+0xfcc>
   11f7c:	ldr	r0, [sp, #4]
   11f80:	ldr	r0, [r0, #16]
   11f84:	and	r0, r0, #61440	; 0xf000
   11f88:	cmp	r0, #40960	; 0xa000
   11f8c:	movw	r0, #1
   11f90:	str	r0, [sp]
   11f94:	beq	11fc8 <__assert_fail@plt+0xfcc>
   11f98:	ldr	r0, [sp, #4]
   11f9c:	ldr	r0, [r0, #16]
   11fa0:	ldr	r1, [sp, #4]
   11fa4:	ldr	r1, [r1, #16]
   11fa8:	sub	r0, r0, r1
   11fac:	cmp	r0, #0
   11fb0:	movw	r0, #1
   11fb4:	str	r0, [sp]
   11fb8:	bne	11fc8 <__assert_fail@plt+0xfcc>
   11fbc:	movw	r0, #0
   11fc0:	str	r0, [sp]
   11fc4:	b	11fc8 <__assert_fail@plt+0xfcc>
   11fc8:	ldr	r0, [sp]
   11fcc:	and	r0, r0, #1
   11fd0:	add	sp, sp, #8
   11fd4:	bx	lr
   11fd8:	push	{r4, sl, fp, lr}
   11fdc:	add	fp, sp, #8
   11fe0:	sub	sp, sp, #40	; 0x28
   11fe4:	sub	sp, sp, #1024	; 0x400
   11fe8:	ldr	ip, [fp, #12]
   11fec:	ldr	lr, [fp, #8]
   11ff0:	ldr	r4, [fp, #16]
   11ff4:	str	r0, [fp, #-16]
   11ff8:	str	r1, [fp, #-20]	; 0xffffffec
   11ffc:	str	r3, [fp, #-28]	; 0xffffffe4
   12000:	str	r2, [fp, #-32]	; 0xffffffe0
   12004:	str	ip, [fp, #-36]	; 0xffffffdc
   12008:	str	lr, [fp, #-40]	; 0xffffffd8
   1200c:	movw	r0, #337	; 0x151
   12010:	movt	r0, #3
   12014:	ldrb	r0, [r0]
   12018:	tst	r0, #1
   1201c:	str	r4, [fp, #-196]	; 0xffffff3c
   12020:	bne	12040 <__assert_fail@plt+0x1044>
   12024:	ldr	r0, [fp, #16]
   12028:	cmp	r0, #0
   1202c:	beq	120ac <__assert_fail@plt+0x10b0>
   12030:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12034:	cmn	r0, #1
   12038:	bgt	120ac <__assert_fail@plt+0x10b0>
   1203c:	b	12040 <__assert_fail@plt+0x1044>
   12040:	ldr	r0, [fp, #-16]
   12044:	sub	r1, fp, #144	; 0x90
   12048:	bl	1ee34 <__assert_fail@plt+0xde38>
   1204c:	cmp	r0, #0
   12050:	beq	120ac <__assert_fail@plt+0x10b0>
   12054:	bl	10f3c <__errno_location@plt>
   12058:	ldr	r1, [r0]
   1205c:	movw	r0, #62896	; 0xf5b0
   12060:	movt	r0, #1
   12064:	str	r1, [fp, #-200]	; 0xffffff38
   12068:	bl	10f0c <gettext@plt>
   1206c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12070:	movw	lr, #4
   12074:	str	r0, [fp, #-204]	; 0xffffff34
   12078:	mov	r0, lr
   1207c:	bl	16488 <__assert_fail@plt+0x548c>
   12080:	movw	r1, #0
   12084:	str	r0, [fp, #-208]	; 0xffffff30
   12088:	mov	r0, r1
   1208c:	ldr	r1, [fp, #-200]	; 0xffffff38
   12090:	ldr	r2, [fp, #-204]	; 0xffffff34
   12094:	ldr	r3, [fp, #-208]	; 0xffffff30
   12098:	bl	10ea0 <error@plt>
   1209c:	movw	r0, #0
   120a0:	and	r0, r0, #1
   120a4:	strb	r0, [fp, #-9]
   120a8:	b	14044 <__assert_fail@plt+0x3048>
   120ac:	movw	r0, #337	; 0x151
   120b0:	movt	r0, #3
   120b4:	ldrb	r0, [r0]
   120b8:	tst	r0, #1
   120bc:	beq	13bb4 <__assert_fail@plt+0x2bb8>
   120c0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   120c4:	movw	r1, #0
   120c8:	cmp	r1, r0
   120cc:	bge	120e8 <__assert_fail@plt+0x10ec>
   120d0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   120d4:	cmp	r0, #536870912	; 0x20000000
   120d8:	bhi	120e8 <__assert_fail@plt+0x10ec>
   120dc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   120e0:	str	r0, [fp, #-212]	; 0xffffff2c
   120e4:	b	120f4 <__assert_fail@plt+0x10f8>
   120e8:	movw	r0, #512	; 0x200
   120ec:	str	r0, [fp, #-212]	; 0xffffff2c
   120f0:	b	120f4 <__assert_fail@plt+0x10f8>
   120f4:	ldr	r0, [fp, #-212]	; 0xffffff2c
   120f8:	str	r0, [fp, #-156]	; 0xffffff64
   120fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12100:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12104:	str	r1, [fp, #-164]	; 0xffffff5c
   12108:	str	r0, [fp, #-168]	; 0xffffff58
   1210c:	b	1262c <__assert_fail@plt+0x1630>
   12110:	b	12114 <__assert_fail@plt+0x1118>
   12114:	ldr	r0, [fp, #-156]	; 0xffffff64
   12118:	cmp	r0, #0
   1211c:	bge	12290 <__assert_fail@plt+0x1294>
   12120:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12124:	cmn	r0, #1
   12128:	bgt	121d8 <__assert_fail@plt+0x11dc>
   1212c:	b	12130 <__assert_fail@plt+0x1134>
   12130:	b	12134 <__assert_fail@plt+0x1138>
   12134:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12138:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1213c:	ldr	r2, [fp, #-156]	; 0xffffff64
   12140:	mov	r3, #127	; 0x7f
   12144:	sdiv	r2, r3, r2
   12148:	subs	r0, r0, r2
   1214c:	sbcs	r1, r1, r2, asr #31
   12150:	str	r0, [fp, #-216]	; 0xffffff28
   12154:	str	r1, [fp, #-220]	; 0xffffff24
   12158:	blt	12368 <__assert_fail@plt+0x136c>
   1215c:	b	12388 <__assert_fail@plt+0x138c>
   12160:	b	12164 <__assert_fail@plt+0x1168>
   12164:	ldr	r0, [pc, #4084]	; 13160 <__assert_fail@plt+0x2164>
   12168:	ldr	r1, [fp, #-156]	; 0xffffff64
   1216c:	cmp	r1, r0
   12170:	blt	12188 <__assert_fail@plt+0x118c>
   12174:	b	12194 <__assert_fail@plt+0x1198>
   12178:	ldr	r0, [fp, #-156]	; 0xffffff64
   1217c:	movw	r1, #0
   12180:	cmp	r1, r0
   12184:	bge	12194 <__assert_fail@plt+0x1198>
   12188:	movw	r0, #0
   1218c:	str	r0, [fp, #-224]	; 0xffffff20
   12190:	b	121ac <__assert_fail@plt+0x11b0>
   12194:	ldr	r0, [fp, #-156]	; 0xffffff64
   12198:	movw	r1, #0
   1219c:	sub	r0, r1, r0
   121a0:	movw	r1, #127	; 0x7f
   121a4:	sdiv	r0, r1, r0
   121a8:	str	r0, [fp, #-224]	; 0xffffff20
   121ac:	ldr	r0, [fp, #-224]	; 0xffffff20
   121b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   121b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   121b8:	mvn	r2, r2
   121bc:	mvn	r1, r1
   121c0:	subs	r1, r1, r0
   121c4:	sbcs	r0, r2, r0, asr #31
   121c8:	str	r1, [fp, #-228]	; 0xffffff1c
   121cc:	str	r0, [fp, #-232]	; 0xffffff18
   121d0:	bge	12368 <__assert_fail@plt+0x136c>
   121d4:	b	12388 <__assert_fail@plt+0x138c>
   121d8:	b	121dc <__assert_fail@plt+0x11e0>
   121dc:	b	12264 <__assert_fail@plt+0x1268>
   121e0:	b	12264 <__assert_fail@plt+0x1268>
   121e4:	ldr	r0, [fp, #-156]	; 0xffffff64
   121e8:	cmn	r0, #1
   121ec:	bne	12264 <__assert_fail@plt+0x1268>
   121f0:	b	121f4 <__assert_fail@plt+0x11f8>
   121f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   121f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   121fc:	subs	r0, r0, #128	; 0x80
   12200:	sbc	r1, r1, #0
   12204:	rsbs	r0, r0, #0
   12208:	rscs	r1, r1, #0
   1220c:	str	r0, [fp, #-236]	; 0xffffff14
   12210:	str	r1, [fp, #-240]	; 0xffffff10
   12214:	blt	12368 <__assert_fail@plt+0x136c>
   12218:	b	12388 <__assert_fail@plt+0x138c>
   1221c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12220:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12224:	subs	r0, r0, #1
   12228:	sbcs	r1, r1, #0
   1222c:	str	r0, [fp, #-244]	; 0xffffff0c
   12230:	str	r1, [fp, #-248]	; 0xffffff08
   12234:	blt	12388 <__assert_fail@plt+0x138c>
   12238:	b	1223c <__assert_fail@plt+0x1240>
   1223c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12240:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12244:	subs	r0, r0, #1
   12248:	sbc	r1, r1, #0
   1224c:	rsbs	r0, r0, #127	; 0x7f
   12250:	rscs	r1, r1, #0
   12254:	str	r0, [fp, #-252]	; 0xffffff04
   12258:	str	r1, [fp, #-256]	; 0xffffff00
   1225c:	blt	12368 <__assert_fail@plt+0x136c>
   12260:	b	12388 <__assert_fail@plt+0x138c>
   12264:	ldr	r0, [fp, #-156]	; 0xffffff64
   12268:	mvn	r1, #127	; 0x7f
   1226c:	sdiv	r0, r1, r0
   12270:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12274:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12278:	subs	r1, r0, r1
   1227c:	rscs	r0, r2, r0, asr #31
   12280:	str	r1, [fp, #-260]	; 0xfffffefc
   12284:	str	r0, [fp, #-264]	; 0xfffffef8
   12288:	blt	12368 <__assert_fail@plt+0x136c>
   1228c:	b	12388 <__assert_fail@plt+0x138c>
   12290:	ldr	r0, [fp, #-156]	; 0xffffff64
   12294:	cmp	r0, #0
   12298:	bne	122a0 <__assert_fail@plt+0x12a4>
   1229c:	b	12388 <__assert_fail@plt+0x138c>
   122a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   122a4:	cmn	r0, #1
   122a8:	bgt	1233c <__assert_fail@plt+0x1340>
   122ac:	b	122b0 <__assert_fail@plt+0x12b4>
   122b0:	b	122b4 <__assert_fail@plt+0x12b8>
   122b4:	b	1230c <__assert_fail@plt+0x1310>
   122b8:	b	1230c <__assert_fail@plt+0x1310>
   122bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   122c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   122c4:	and	r0, r0, r1
   122c8:	cmn	r0, #1
   122cc:	bne	1230c <__assert_fail@plt+0x1310>
   122d0:	b	122d4 <__assert_fail@plt+0x12d8>
   122d4:	b	122d8 <__assert_fail@plt+0x12dc>
   122d8:	ldr	r0, [fp, #-156]	; 0xffffff64
   122dc:	mvn	r1, #127	; 0x7f
   122e0:	add	r0, r0, r1
   122e4:	movw	r1, #0
   122e8:	cmp	r1, r0
   122ec:	blt	12368 <__assert_fail@plt+0x136c>
   122f0:	b	12388 <__assert_fail@plt+0x138c>
   122f4:	ldr	r0, [fp, #-156]	; 0xffffff64
   122f8:	sub	r0, r0, #1
   122fc:	movw	r1, #127	; 0x7f
   12300:	cmp	r1, r0
   12304:	blt	12368 <__assert_fail@plt+0x136c>
   12308:	b	12388 <__assert_fail@plt+0x138c>
   1230c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12310:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12314:	mvn	r0, #127	; 0x7f
   12318:	mvn	r1, #0
   1231c:	bl	1eb60 <__assert_fail@plt+0xdb64>
   12320:	ldr	r2, [fp, #-156]	; 0xffffff64
   12324:	subs	r0, r0, r2
   12328:	sbcs	r1, r1, r2, asr #31
   1232c:	str	r0, [fp, #-268]	; 0xfffffef4
   12330:	str	r1, [fp, #-272]	; 0xfffffef0
   12334:	blt	12368 <__assert_fail@plt+0x136c>
   12338:	b	12388 <__assert_fail@plt+0x138c>
   1233c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12340:	mov	r1, #127	; 0x7f
   12344:	sdiv	r0, r1, r0
   12348:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1234c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12350:	subs	r1, r0, r1
   12354:	rscs	r0, r2, r0, asr #31
   12358:	str	r1, [fp, #-276]	; 0xfffffeec
   1235c:	str	r0, [fp, #-280]	; 0xfffffee8
   12360:	bge	12388 <__assert_fail@plt+0x138c>
   12364:	b	12368 <__assert_fail@plt+0x136c>
   12368:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1236c:	ldr	r1, [fp, #-156]	; 0xffffff64
   12370:	mul	r0, r0, r1
   12374:	sxtb	r0, r0
   12378:	asr	r1, r0, #31
   1237c:	str	r0, [fp, #-32]	; 0xffffffe0
   12380:	str	r1, [fp, #-28]	; 0xffffffe4
   12384:	b	13b34 <__assert_fail@plt+0x2b38>
   12388:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1238c:	ldr	r1, [fp, #-156]	; 0xffffff64
   12390:	mul	r0, r0, r1
   12394:	sxtb	r0, r0
   12398:	asr	r1, r0, #31
   1239c:	str	r0, [fp, #-32]	; 0xffffffe0
   123a0:	str	r1, [fp, #-28]	; 0xffffffe4
   123a4:	b	13bb0 <__assert_fail@plt+0x2bb4>
   123a8:	ldr	r0, [fp, #-156]	; 0xffffff64
   123ac:	cmp	r0, #0
   123b0:	bge	12514 <__assert_fail@plt+0x1518>
   123b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   123b8:	cmn	r0, #1
   123bc:	bgt	1246c <__assert_fail@plt+0x1470>
   123c0:	b	123c4 <__assert_fail@plt+0x13c8>
   123c4:	b	123c8 <__assert_fail@plt+0x13cc>
   123c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   123cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   123d0:	ldr	r2, [fp, #-156]	; 0xffffff64
   123d4:	mov	r3, #255	; 0xff
   123d8:	sdiv	r2, r3, r2
   123dc:	subs	r0, r0, r2
   123e0:	sbcs	r1, r1, r2, asr #31
   123e4:	str	r0, [fp, #-284]	; 0xfffffee4
   123e8:	str	r1, [fp, #-288]	; 0xfffffee0
   123ec:	blt	125ec <__assert_fail@plt+0x15f0>
   123f0:	b	1260c <__assert_fail@plt+0x1610>
   123f4:	b	123f8 <__assert_fail@plt+0x13fc>
   123f8:	ldr	r0, [pc, #3424]	; 13160 <__assert_fail@plt+0x2164>
   123fc:	ldr	r1, [fp, #-156]	; 0xffffff64
   12400:	cmp	r1, r0
   12404:	blt	1241c <__assert_fail@plt+0x1420>
   12408:	b	12428 <__assert_fail@plt+0x142c>
   1240c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12410:	movw	r1, #0
   12414:	cmp	r1, r0
   12418:	bge	12428 <__assert_fail@plt+0x142c>
   1241c:	movw	r0, #0
   12420:	str	r0, [fp, #-292]	; 0xfffffedc
   12424:	b	12440 <__assert_fail@plt+0x1444>
   12428:	ldr	r0, [fp, #-156]	; 0xffffff64
   1242c:	movw	r1, #0
   12430:	sub	r0, r1, r0
   12434:	movw	r1, #255	; 0xff
   12438:	sdiv	r0, r1, r0
   1243c:	str	r0, [fp, #-292]	; 0xfffffedc
   12440:	ldr	r0, [fp, #-292]	; 0xfffffedc
   12444:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12448:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1244c:	mvn	r2, r2
   12450:	mvn	r1, r1
   12454:	subs	r1, r1, r0
   12458:	sbcs	r0, r2, r0, asr #31
   1245c:	str	r1, [fp, #-296]	; 0xfffffed8
   12460:	str	r0, [fp, #-300]	; 0xfffffed4
   12464:	bge	125ec <__assert_fail@plt+0x15f0>
   12468:	b	1260c <__assert_fail@plt+0x1610>
   1246c:	b	12470 <__assert_fail@plt+0x1474>
   12470:	b	124e8 <__assert_fail@plt+0x14ec>
   12474:	b	124e8 <__assert_fail@plt+0x14ec>
   12478:	ldr	r0, [fp, #-156]	; 0xffffff64
   1247c:	cmn	r0, #1
   12480:	bne	124e8 <__assert_fail@plt+0x14ec>
   12484:	b	12488 <__assert_fail@plt+0x148c>
   12488:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1248c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12490:	rsbs	r0, r0, #0
   12494:	rscs	r1, r1, #0
   12498:	str	r0, [fp, #-304]	; 0xfffffed0
   1249c:	str	r1, [fp, #-308]	; 0xfffffecc
   124a0:	blt	125ec <__assert_fail@plt+0x15f0>
   124a4:	b	1260c <__assert_fail@plt+0x1610>
   124a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   124ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   124b0:	subs	r0, r0, #1
   124b4:	sbcs	r1, r1, #0
   124b8:	str	r0, [fp, #-312]	; 0xfffffec8
   124bc:	str	r1, [fp, #-316]	; 0xfffffec4
   124c0:	blt	1260c <__assert_fail@plt+0x1610>
   124c4:	b	124c8 <__assert_fail@plt+0x14cc>
   124c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   124cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   124d0:	subs	r0, r0, #1
   124d4:	sbc	r1, r1, #0
   124d8:	cmn	r1, #1
   124dc:	str	r0, [fp, #-320]	; 0xfffffec0
   124e0:	bgt	125ec <__assert_fail@plt+0x15f0>
   124e4:	b	1260c <__assert_fail@plt+0x1610>
   124e8:	ldr	r0, [fp, #-156]	; 0xffffff64
   124ec:	mov	r1, #0
   124f0:	sdiv	r0, r1, r0
   124f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   124f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   124fc:	subs	r1, r0, r1
   12500:	rscs	r0, r2, r0, asr #31
   12504:	str	r1, [fp, #-324]	; 0xfffffebc
   12508:	str	r0, [fp, #-328]	; 0xfffffeb8
   1250c:	blt	125ec <__assert_fail@plt+0x15f0>
   12510:	b	1260c <__assert_fail@plt+0x1610>
   12514:	ldr	r0, [fp, #-156]	; 0xffffff64
   12518:	cmp	r0, #0
   1251c:	bne	12524 <__assert_fail@plt+0x1528>
   12520:	b	1260c <__assert_fail@plt+0x1610>
   12524:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12528:	cmn	r0, #1
   1252c:	bgt	125c0 <__assert_fail@plt+0x15c4>
   12530:	b	12534 <__assert_fail@plt+0x1538>
   12534:	b	12538 <__assert_fail@plt+0x153c>
   12538:	b	1258c <__assert_fail@plt+0x1590>
   1253c:	b	1258c <__assert_fail@plt+0x1590>
   12540:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12544:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12548:	and	r0, r0, r1
   1254c:	cmn	r0, #1
   12550:	bne	1258c <__assert_fail@plt+0x1590>
   12554:	b	12558 <__assert_fail@plt+0x155c>
   12558:	b	1255c <__assert_fail@plt+0x1560>
   1255c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12560:	add	r0, r0, #0
   12564:	movw	r1, #0
   12568:	cmp	r1, r0
   1256c:	blt	125ec <__assert_fail@plt+0x15f0>
   12570:	b	1260c <__assert_fail@plt+0x1610>
   12574:	ldr	r0, [fp, #-156]	; 0xffffff64
   12578:	sub	r0, r0, #1
   1257c:	mvn	r1, #0
   12580:	cmp	r1, r0
   12584:	blt	125ec <__assert_fail@plt+0x15f0>
   12588:	b	1260c <__assert_fail@plt+0x1610>
   1258c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12590:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12594:	mov	r0, #0
   12598:	str	r0, [fp, #-332]	; 0xfffffeb4
   1259c:	ldr	r1, [fp, #-332]	; 0xfffffeb4
   125a0:	bl	1eb60 <__assert_fail@plt+0xdb64>
   125a4:	ldr	r2, [fp, #-156]	; 0xffffff64
   125a8:	subs	r0, r0, r2
   125ac:	sbcs	r1, r1, r2, asr #31
   125b0:	str	r0, [fp, #-336]	; 0xfffffeb0
   125b4:	str	r1, [fp, #-340]	; 0xfffffeac
   125b8:	blt	125ec <__assert_fail@plt+0x15f0>
   125bc:	b	1260c <__assert_fail@plt+0x1610>
   125c0:	ldr	r0, [fp, #-156]	; 0xffffff64
   125c4:	mov	r1, #255	; 0xff
   125c8:	sdiv	r0, r1, r0
   125cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   125d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   125d4:	subs	r1, r0, r1
   125d8:	rscs	r0, r2, r0, asr #31
   125dc:	str	r1, [fp, #-344]	; 0xfffffea8
   125e0:	str	r0, [fp, #-348]	; 0xfffffea4
   125e4:	bge	1260c <__assert_fail@plt+0x1610>
   125e8:	b	125ec <__assert_fail@plt+0x15f0>
   125ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   125f0:	ldr	r1, [fp, #-156]	; 0xffffff64
   125f4:	mul	r0, r0, r1
   125f8:	uxtb	r0, r0
   125fc:	mov	r1, #0
   12600:	str	r1, [fp, #-28]	; 0xffffffe4
   12604:	str	r0, [fp, #-32]	; 0xffffffe0
   12608:	b	13b34 <__assert_fail@plt+0x2b38>
   1260c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12610:	ldr	r1, [fp, #-156]	; 0xffffff64
   12614:	mul	r0, r0, r1
   12618:	uxtb	r0, r0
   1261c:	mov	r1, #0
   12620:	str	r1, [fp, #-28]	; 0xffffffe4
   12624:	str	r0, [fp, #-32]	; 0xffffffe0
   12628:	b	13bb0 <__assert_fail@plt+0x2bb4>
   1262c:	b	12b58 <__assert_fail@plt+0x1b5c>
   12630:	b	12634 <__assert_fail@plt+0x1638>
   12634:	ldr	r0, [fp, #-156]	; 0xffffff64
   12638:	cmp	r0, #0
   1263c:	bge	127b8 <__assert_fail@plt+0x17bc>
   12640:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12644:	cmn	r0, #1
   12648:	bgt	126f8 <__assert_fail@plt+0x16fc>
   1264c:	b	12650 <__assert_fail@plt+0x1654>
   12650:	b	12654 <__assert_fail@plt+0x1658>
   12654:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12658:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1265c:	ldr	r2, [fp, #-156]	; 0xffffff64
   12660:	movw	r3, #32767	; 0x7fff
   12664:	sdiv	r2, r3, r2
   12668:	subs	r0, r0, r2
   1266c:	sbcs	r1, r1, r2, asr #31
   12670:	str	r0, [fp, #-352]	; 0xfffffea0
   12674:	str	r1, [fp, #-356]	; 0xfffffe9c
   12678:	blt	12894 <__assert_fail@plt+0x1898>
   1267c:	b	128b4 <__assert_fail@plt+0x18b8>
   12680:	b	12684 <__assert_fail@plt+0x1688>
   12684:	ldr	r0, [pc, #2772]	; 13160 <__assert_fail@plt+0x2164>
   12688:	ldr	r1, [fp, #-156]	; 0xffffff64
   1268c:	cmp	r1, r0
   12690:	blt	126a8 <__assert_fail@plt+0x16ac>
   12694:	b	126b4 <__assert_fail@plt+0x16b8>
   12698:	ldr	r0, [fp, #-156]	; 0xffffff64
   1269c:	movw	r1, #0
   126a0:	cmp	r1, r0
   126a4:	bge	126b4 <__assert_fail@plt+0x16b8>
   126a8:	movw	r0, #0
   126ac:	str	r0, [fp, #-360]	; 0xfffffe98
   126b0:	b	126cc <__assert_fail@plt+0x16d0>
   126b4:	ldr	r0, [fp, #-156]	; 0xffffff64
   126b8:	movw	r1, #0
   126bc:	sub	r0, r1, r0
   126c0:	movw	r1, #32767	; 0x7fff
   126c4:	sdiv	r0, r1, r0
   126c8:	str	r0, [fp, #-360]	; 0xfffffe98
   126cc:	ldr	r0, [fp, #-360]	; 0xfffffe98
   126d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   126d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   126d8:	mvn	r2, r2
   126dc:	mvn	r1, r1
   126e0:	subs	r1, r1, r0
   126e4:	sbcs	r0, r2, r0, asr #31
   126e8:	str	r1, [fp, #-364]	; 0xfffffe94
   126ec:	str	r0, [fp, #-368]	; 0xfffffe90
   126f0:	bge	12894 <__assert_fail@plt+0x1898>
   126f4:	b	128b4 <__assert_fail@plt+0x18b8>
   126f8:	b	126fc <__assert_fail@plt+0x1700>
   126fc:	b	12788 <__assert_fail@plt+0x178c>
   12700:	b	12788 <__assert_fail@plt+0x178c>
   12704:	ldr	r0, [fp, #-156]	; 0xffffff64
   12708:	cmn	r0, #1
   1270c:	bne	12788 <__assert_fail@plt+0x178c>
   12710:	b	12714 <__assert_fail@plt+0x1718>
   12714:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12718:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1271c:	subs	r0, r0, #32768	; 0x8000
   12720:	sbc	r1, r1, #0
   12724:	rsbs	r0, r0, #0
   12728:	rscs	r1, r1, #0
   1272c:	str	r0, [fp, #-372]	; 0xfffffe8c
   12730:	str	r1, [fp, #-376]	; 0xfffffe88
   12734:	blt	12894 <__assert_fail@plt+0x1898>
   12738:	b	128b4 <__assert_fail@plt+0x18b8>
   1273c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12740:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12744:	subs	r0, r0, #1
   12748:	sbcs	r1, r1, #0
   1274c:	str	r0, [fp, #-380]	; 0xfffffe84
   12750:	str	r1, [fp, #-384]	; 0xfffffe80
   12754:	blt	128b4 <__assert_fail@plt+0x18b8>
   12758:	b	1275c <__assert_fail@plt+0x1760>
   1275c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12760:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12764:	subs	r0, r0, #1
   12768:	sbc	r1, r1, #0
   1276c:	movw	r2, #32767	; 0x7fff
   12770:	subs	r0, r2, r0
   12774:	rscs	r1, r1, #0
   12778:	str	r0, [fp, #-388]	; 0xfffffe7c
   1277c:	str	r1, [fp, #-392]	; 0xfffffe78
   12780:	blt	12894 <__assert_fail@plt+0x1898>
   12784:	b	128b4 <__assert_fail@plt+0x18b8>
   12788:	ldr	r0, [fp, #-156]	; 0xffffff64
   1278c:	movw	r1, #32768	; 0x8000
   12790:	movt	r1, #65535	; 0xffff
   12794:	sdiv	r0, r1, r0
   12798:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1279c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   127a0:	subs	r1, r0, r1
   127a4:	rscs	r0, r2, r0, asr #31
   127a8:	str	r1, [fp, #-396]	; 0xfffffe74
   127ac:	str	r0, [fp, #-400]	; 0xfffffe70
   127b0:	blt	12894 <__assert_fail@plt+0x1898>
   127b4:	b	128b4 <__assert_fail@plt+0x18b8>
   127b8:	ldr	r0, [fp, #-156]	; 0xffffff64
   127bc:	cmp	r0, #0
   127c0:	bne	127c8 <__assert_fail@plt+0x17cc>
   127c4:	b	128b4 <__assert_fail@plt+0x18b8>
   127c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   127cc:	cmn	r0, #1
   127d0:	bgt	12868 <__assert_fail@plt+0x186c>
   127d4:	b	127d8 <__assert_fail@plt+0x17dc>
   127d8:	b	127dc <__assert_fail@plt+0x17e0>
   127dc:	b	12834 <__assert_fail@plt+0x1838>
   127e0:	b	12834 <__assert_fail@plt+0x1838>
   127e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   127ec:	and	r0, r0, r1
   127f0:	cmn	r0, #1
   127f4:	bne	12834 <__assert_fail@plt+0x1838>
   127f8:	b	127fc <__assert_fail@plt+0x1800>
   127fc:	b	12800 <__assert_fail@plt+0x1804>
   12800:	ldr	r0, [pc, #4088]	; 13800 <__assert_fail@plt+0x2804>
   12804:	ldr	r1, [fp, #-156]	; 0xffffff64
   12808:	add	r0, r1, r0
   1280c:	movw	r1, #0
   12810:	cmp	r1, r0
   12814:	blt	12894 <__assert_fail@plt+0x1898>
   12818:	b	128b4 <__assert_fail@plt+0x18b8>
   1281c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12820:	sub	r0, r0, #1
   12824:	movw	r1, #32767	; 0x7fff
   12828:	cmp	r1, r0
   1282c:	blt	12894 <__assert_fail@plt+0x1898>
   12830:	b	128b4 <__assert_fail@plt+0x18b8>
   12834:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12838:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1283c:	movw	r0, #32768	; 0x8000
   12840:	movt	r0, #65535	; 0xffff
   12844:	mvn	r1, #0
   12848:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1284c:	ldr	r2, [fp, #-156]	; 0xffffff64
   12850:	subs	r0, r0, r2
   12854:	sbcs	r1, r1, r2, asr #31
   12858:	str	r0, [fp, #-404]	; 0xfffffe6c
   1285c:	str	r1, [fp, #-408]	; 0xfffffe68
   12860:	blt	12894 <__assert_fail@plt+0x1898>
   12864:	b	128b4 <__assert_fail@plt+0x18b8>
   12868:	ldr	r0, [fp, #-156]	; 0xffffff64
   1286c:	movw	r1, #32767	; 0x7fff
   12870:	sdiv	r0, r1, r0
   12874:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12878:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1287c:	subs	r1, r0, r1
   12880:	rscs	r0, r2, r0, asr #31
   12884:	str	r1, [fp, #-412]	; 0xfffffe64
   12888:	str	r0, [fp, #-416]	; 0xfffffe60
   1288c:	bge	128b4 <__assert_fail@plt+0x18b8>
   12890:	b	12894 <__assert_fail@plt+0x1898>
   12894:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12898:	ldr	r1, [fp, #-156]	; 0xffffff64
   1289c:	mul	r0, r0, r1
   128a0:	sxth	r0, r0
   128a4:	asr	r1, r0, #31
   128a8:	str	r0, [fp, #-32]	; 0xffffffe0
   128ac:	str	r1, [fp, #-28]	; 0xffffffe4
   128b0:	b	13b34 <__assert_fail@plt+0x2b38>
   128b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128b8:	ldr	r1, [fp, #-156]	; 0xffffff64
   128bc:	mul	r0, r0, r1
   128c0:	sxth	r0, r0
   128c4:	asr	r1, r0, #31
   128c8:	str	r0, [fp, #-32]	; 0xffffffe0
   128cc:	str	r1, [fp, #-28]	; 0xffffffe4
   128d0:	b	13bb0 <__assert_fail@plt+0x2bb4>
   128d4:	ldr	r0, [fp, #-156]	; 0xffffff64
   128d8:	cmp	r0, #0
   128dc:	bge	12a40 <__assert_fail@plt+0x1a44>
   128e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   128e4:	cmn	r0, #1
   128e8:	bgt	12998 <__assert_fail@plt+0x199c>
   128ec:	b	128f0 <__assert_fail@plt+0x18f4>
   128f0:	b	128f4 <__assert_fail@plt+0x18f8>
   128f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128fc:	ldr	r2, [fp, #-156]	; 0xffffff64
   12900:	movw	r3, #65535	; 0xffff
   12904:	sdiv	r2, r3, r2
   12908:	subs	r0, r0, r2
   1290c:	sbcs	r1, r1, r2, asr #31
   12910:	str	r0, [fp, #-420]	; 0xfffffe5c
   12914:	str	r1, [fp, #-424]	; 0xfffffe58
   12918:	blt	12b18 <__assert_fail@plt+0x1b1c>
   1291c:	b	12b38 <__assert_fail@plt+0x1b3c>
   12920:	b	12924 <__assert_fail@plt+0x1928>
   12924:	ldr	r0, [pc, #2100]	; 13160 <__assert_fail@plt+0x2164>
   12928:	ldr	r1, [fp, #-156]	; 0xffffff64
   1292c:	cmp	r1, r0
   12930:	blt	12948 <__assert_fail@plt+0x194c>
   12934:	b	12954 <__assert_fail@plt+0x1958>
   12938:	ldr	r0, [fp, #-156]	; 0xffffff64
   1293c:	movw	r1, #0
   12940:	cmp	r1, r0
   12944:	bge	12954 <__assert_fail@plt+0x1958>
   12948:	movw	r0, #0
   1294c:	str	r0, [fp, #-428]	; 0xfffffe54
   12950:	b	1296c <__assert_fail@plt+0x1970>
   12954:	ldr	r0, [fp, #-156]	; 0xffffff64
   12958:	movw	r1, #0
   1295c:	sub	r0, r1, r0
   12960:	movw	r1, #65535	; 0xffff
   12964:	sdiv	r0, r1, r0
   12968:	str	r0, [fp, #-428]	; 0xfffffe54
   1296c:	ldr	r0, [fp, #-428]	; 0xfffffe54
   12970:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12974:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12978:	mvn	r2, r2
   1297c:	mvn	r1, r1
   12980:	subs	r1, r1, r0
   12984:	sbcs	r0, r2, r0, asr #31
   12988:	str	r1, [fp, #-432]	; 0xfffffe50
   1298c:	str	r0, [fp, #-436]	; 0xfffffe4c
   12990:	bge	12b18 <__assert_fail@plt+0x1b1c>
   12994:	b	12b38 <__assert_fail@plt+0x1b3c>
   12998:	b	1299c <__assert_fail@plt+0x19a0>
   1299c:	b	12a14 <__assert_fail@plt+0x1a18>
   129a0:	b	12a14 <__assert_fail@plt+0x1a18>
   129a4:	ldr	r0, [fp, #-156]	; 0xffffff64
   129a8:	cmn	r0, #1
   129ac:	bne	12a14 <__assert_fail@plt+0x1a18>
   129b0:	b	129b4 <__assert_fail@plt+0x19b8>
   129b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129bc:	rsbs	r0, r0, #0
   129c0:	rscs	r1, r1, #0
   129c4:	str	r0, [fp, #-440]	; 0xfffffe48
   129c8:	str	r1, [fp, #-444]	; 0xfffffe44
   129cc:	blt	12b18 <__assert_fail@plt+0x1b1c>
   129d0:	b	12b38 <__assert_fail@plt+0x1b3c>
   129d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129dc:	subs	r0, r0, #1
   129e0:	sbcs	r1, r1, #0
   129e4:	str	r0, [fp, #-448]	; 0xfffffe40
   129e8:	str	r1, [fp, #-452]	; 0xfffffe3c
   129ec:	blt	12b38 <__assert_fail@plt+0x1b3c>
   129f0:	b	129f4 <__assert_fail@plt+0x19f8>
   129f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129fc:	subs	r0, r0, #1
   12a00:	sbc	r1, r1, #0
   12a04:	cmn	r1, #1
   12a08:	str	r0, [fp, #-456]	; 0xfffffe38
   12a0c:	bgt	12b18 <__assert_fail@plt+0x1b1c>
   12a10:	b	12b38 <__assert_fail@plt+0x1b3c>
   12a14:	ldr	r0, [fp, #-156]	; 0xffffff64
   12a18:	mov	r1, #0
   12a1c:	sdiv	r0, r1, r0
   12a20:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12a24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12a28:	subs	r1, r0, r1
   12a2c:	rscs	r0, r2, r0, asr #31
   12a30:	str	r1, [fp, #-460]	; 0xfffffe34
   12a34:	str	r0, [fp, #-464]	; 0xfffffe30
   12a38:	blt	12b18 <__assert_fail@plt+0x1b1c>
   12a3c:	b	12b38 <__assert_fail@plt+0x1b3c>
   12a40:	ldr	r0, [fp, #-156]	; 0xffffff64
   12a44:	cmp	r0, #0
   12a48:	bne	12a50 <__assert_fail@plt+0x1a54>
   12a4c:	b	12b38 <__assert_fail@plt+0x1b3c>
   12a50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12a54:	cmn	r0, #1
   12a58:	bgt	12aec <__assert_fail@plt+0x1af0>
   12a5c:	b	12a60 <__assert_fail@plt+0x1a64>
   12a60:	b	12a64 <__assert_fail@plt+0x1a68>
   12a64:	b	12ab8 <__assert_fail@plt+0x1abc>
   12a68:	b	12ab8 <__assert_fail@plt+0x1abc>
   12a6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a74:	and	r0, r0, r1
   12a78:	cmn	r0, #1
   12a7c:	bne	12ab8 <__assert_fail@plt+0x1abc>
   12a80:	b	12a84 <__assert_fail@plt+0x1a88>
   12a84:	b	12a88 <__assert_fail@plt+0x1a8c>
   12a88:	ldr	r0, [fp, #-156]	; 0xffffff64
   12a8c:	add	r0, r0, #0
   12a90:	movw	r1, #0
   12a94:	cmp	r1, r0
   12a98:	blt	12b18 <__assert_fail@plt+0x1b1c>
   12a9c:	b	12b38 <__assert_fail@plt+0x1b3c>
   12aa0:	ldr	r0, [fp, #-156]	; 0xffffff64
   12aa4:	sub	r0, r0, #1
   12aa8:	mvn	r1, #0
   12aac:	cmp	r1, r0
   12ab0:	blt	12b18 <__assert_fail@plt+0x1b1c>
   12ab4:	b	12b38 <__assert_fail@plt+0x1b3c>
   12ab8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12abc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12ac0:	mov	r0, #0
   12ac4:	str	r0, [fp, #-468]	; 0xfffffe2c
   12ac8:	ldr	r1, [fp, #-468]	; 0xfffffe2c
   12acc:	bl	1eb60 <__assert_fail@plt+0xdb64>
   12ad0:	ldr	r2, [fp, #-156]	; 0xffffff64
   12ad4:	subs	r0, r0, r2
   12ad8:	sbcs	r1, r1, r2, asr #31
   12adc:	str	r0, [fp, #-472]	; 0xfffffe28
   12ae0:	str	r1, [fp, #-476]	; 0xfffffe24
   12ae4:	blt	12b18 <__assert_fail@plt+0x1b1c>
   12ae8:	b	12b38 <__assert_fail@plt+0x1b3c>
   12aec:	ldr	r0, [fp, #-156]	; 0xffffff64
   12af0:	movw	r1, #65535	; 0xffff
   12af4:	sdiv	r0, r1, r0
   12af8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12afc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12b00:	subs	r1, r0, r1
   12b04:	rscs	r0, r2, r0, asr #31
   12b08:	str	r1, [fp, #-480]	; 0xfffffe20
   12b0c:	str	r0, [fp, #-484]	; 0xfffffe1c
   12b10:	bge	12b38 <__assert_fail@plt+0x1b3c>
   12b14:	b	12b18 <__assert_fail@plt+0x1b1c>
   12b18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b1c:	ldr	r1, [fp, #-156]	; 0xffffff64
   12b20:	mul	r0, r0, r1
   12b24:	uxth	r0, r0
   12b28:	mov	r1, #0
   12b2c:	str	r1, [fp, #-28]	; 0xffffffe4
   12b30:	str	r0, [fp, #-32]	; 0xffffffe0
   12b34:	b	13b34 <__assert_fail@plt+0x2b38>
   12b38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b3c:	ldr	r1, [fp, #-156]	; 0xffffff64
   12b40:	mul	r0, r0, r1
   12b44:	uxth	r0, r0
   12b48:	mov	r1, #0
   12b4c:	str	r1, [fp, #-28]	; 0xffffffe4
   12b50:	str	r0, [fp, #-32]	; 0xffffffe0
   12b54:	b	13bb0 <__assert_fail@plt+0x2bb4>
   12b58:	b	1305c <__assert_fail@plt+0x2060>
   12b5c:	b	12b60 <__assert_fail@plt+0x1b64>
   12b60:	ldr	r0, [fp, #-156]	; 0xffffff64
   12b64:	cmp	r0, #0
   12b68:	bge	12cd4 <__assert_fail@plt+0x1cd8>
   12b6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b70:	cmn	r0, #1
   12b74:	bgt	12c24 <__assert_fail@plt+0x1c28>
   12b78:	b	12b7c <__assert_fail@plt+0x1b80>
   12b7c:	b	12b80 <__assert_fail@plt+0x1b84>
   12b80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12b88:	ldr	r2, [fp, #-156]	; 0xffffff64
   12b8c:	mvn	r3, #-2147483648	; 0x80000000
   12b90:	sdiv	r2, r3, r2
   12b94:	subs	r0, r0, r2
   12b98:	sbcs	r1, r1, r2, asr #31
   12b9c:	str	r0, [fp, #-488]	; 0xfffffe18
   12ba0:	str	r1, [fp, #-492]	; 0xfffffe14
   12ba4:	blt	12da8 <__assert_fail@plt+0x1dac>
   12ba8:	b	12dc4 <__assert_fail@plt+0x1dc8>
   12bac:	b	12bb0 <__assert_fail@plt+0x1bb4>
   12bb0:	ldr	r0, [pc, #1448]	; 13160 <__assert_fail@plt+0x2164>
   12bb4:	ldr	r1, [fp, #-156]	; 0xffffff64
   12bb8:	cmp	r1, r0
   12bbc:	blt	12bd4 <__assert_fail@plt+0x1bd8>
   12bc0:	b	12be0 <__assert_fail@plt+0x1be4>
   12bc4:	ldr	r0, [fp, #-156]	; 0xffffff64
   12bc8:	movw	r1, #0
   12bcc:	cmp	r1, r0
   12bd0:	bge	12be0 <__assert_fail@plt+0x1be4>
   12bd4:	movw	r0, #0
   12bd8:	str	r0, [fp, #-496]	; 0xfffffe10
   12bdc:	b	12bf8 <__assert_fail@plt+0x1bfc>
   12be0:	ldr	r0, [pc, #4092]	; 13be4 <__assert_fail@plt+0x2be8>
   12be4:	ldr	r1, [fp, #-156]	; 0xffffff64
   12be8:	movw	r2, #0
   12bec:	sub	r1, r2, r1
   12bf0:	sdiv	r0, r0, r1
   12bf4:	str	r0, [fp, #-496]	; 0xfffffe10
   12bf8:	ldr	r0, [fp, #-496]	; 0xfffffe10
   12bfc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12c00:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12c04:	mvn	r2, r2
   12c08:	mvn	r1, r1
   12c0c:	subs	r1, r1, r0
   12c10:	sbcs	r0, r2, r0, asr #31
   12c14:	str	r1, [fp, #-500]	; 0xfffffe0c
   12c18:	str	r0, [fp, #-504]	; 0xfffffe08
   12c1c:	bge	12da8 <__assert_fail@plt+0x1dac>
   12c20:	b	12dc4 <__assert_fail@plt+0x1dc8>
   12c24:	ldr	r0, [fp, #-156]	; 0xffffff64
   12c28:	cmn	r0, #1
   12c2c:	bne	12ca8 <__assert_fail@plt+0x1cac>
   12c30:	b	12c34 <__assert_fail@plt+0x1c38>
   12c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c3c:	adds	r0, r0, #-2147483648	; 0x80000000
   12c40:	sbc	r1, r1, #0
   12c44:	rsbs	r0, r0, #0
   12c48:	rscs	r1, r1, #0
   12c4c:	str	r0, [fp, #-508]	; 0xfffffe04
   12c50:	str	r1, [fp, #-512]	; 0xfffffe00
   12c54:	blt	12da8 <__assert_fail@plt+0x1dac>
   12c58:	b	12dc4 <__assert_fail@plt+0x1dc8>
   12c5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c64:	subs	r0, r0, #1
   12c68:	sbcs	r1, r1, #0
   12c6c:	str	r0, [fp, #-516]	; 0xfffffdfc
   12c70:	str	r1, [fp, #-520]	; 0xfffffdf8
   12c74:	blt	12dc4 <__assert_fail@plt+0x1dc8>
   12c78:	b	12c7c <__assert_fail@plt+0x1c80>
   12c7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c84:	subs	r0, r0, #1
   12c88:	sbc	r1, r1, #0
   12c8c:	mvn	r2, #-2147483648	; 0x80000000
   12c90:	subs	r0, r2, r0
   12c94:	rscs	r1, r1, #0
   12c98:	str	r0, [fp, #-524]	; 0xfffffdf4
   12c9c:	str	r1, [fp, #-528]	; 0xfffffdf0
   12ca0:	blt	12da8 <__assert_fail@plt+0x1dac>
   12ca4:	b	12dc4 <__assert_fail@plt+0x1dc8>
   12ca8:	ldr	r0, [fp, #-156]	; 0xffffff64
   12cac:	mov	r1, #-2147483648	; 0x80000000
   12cb0:	sdiv	r0, r1, r0
   12cb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12cb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12cbc:	subs	r1, r0, r1
   12cc0:	rscs	r0, r2, r0, asr #31
   12cc4:	str	r1, [fp, #-532]	; 0xfffffdec
   12cc8:	str	r0, [sp, #536]	; 0x218
   12ccc:	blt	12da8 <__assert_fail@plt+0x1dac>
   12cd0:	b	12dc4 <__assert_fail@plt+0x1dc8>
   12cd4:	ldr	r0, [fp, #-156]	; 0xffffff64
   12cd8:	cmp	r0, #0
   12cdc:	bne	12ce4 <__assert_fail@plt+0x1ce8>
   12ce0:	b	12dc4 <__assert_fail@plt+0x1dc8>
   12ce4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12ce8:	cmn	r0, #1
   12cec:	bgt	12d7c <__assert_fail@plt+0x1d80>
   12cf0:	b	12cf4 <__assert_fail@plt+0x1cf8>
   12cf4:	b	12cf8 <__assert_fail@plt+0x1cfc>
   12cf8:	b	12d4c <__assert_fail@plt+0x1d50>
   12cfc:	b	12d4c <__assert_fail@plt+0x1d50>
   12d00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d08:	and	r0, r0, r1
   12d0c:	cmn	r0, #1
   12d10:	bne	12d4c <__assert_fail@plt+0x1d50>
   12d14:	b	12d18 <__assert_fail@plt+0x1d1c>
   12d18:	b	12d1c <__assert_fail@plt+0x1d20>
   12d1c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12d20:	add	r0, r0, #-2147483648	; 0x80000000
   12d24:	movw	r1, #0
   12d28:	cmp	r1, r0
   12d2c:	blt	12da8 <__assert_fail@plt+0x1dac>
   12d30:	b	12dc4 <__assert_fail@plt+0x1dc8>
   12d34:	ldr	r0, [pc, #3752]	; 13be4 <__assert_fail@plt+0x2be8>
   12d38:	ldr	r1, [fp, #-156]	; 0xffffff64
   12d3c:	sub	r1, r1, #1
   12d40:	cmp	r0, r1
   12d44:	blt	12da8 <__assert_fail@plt+0x1dac>
   12d48:	b	12dc4 <__assert_fail@plt+0x1dc8>
   12d4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12d50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12d54:	mov	r0, #-2147483648	; 0x80000000
   12d58:	mvn	r1, #0
   12d5c:	bl	1eb60 <__assert_fail@plt+0xdb64>
   12d60:	ldr	r2, [fp, #-156]	; 0xffffff64
   12d64:	subs	r0, r0, r2
   12d68:	sbcs	r1, r1, r2, asr #31
   12d6c:	str	r0, [sp, #532]	; 0x214
   12d70:	str	r1, [sp, #528]	; 0x210
   12d74:	blt	12da8 <__assert_fail@plt+0x1dac>
   12d78:	b	12dc4 <__assert_fail@plt+0x1dc8>
   12d7c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12d80:	mvn	r1, #-2147483648	; 0x80000000
   12d84:	sdiv	r0, r1, r0
   12d88:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12d8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12d90:	subs	r1, r0, r1
   12d94:	rscs	r0, r2, r0, asr #31
   12d98:	str	r1, [sp, #524]	; 0x20c
   12d9c:	str	r0, [sp, #520]	; 0x208
   12da0:	bge	12dc4 <__assert_fail@plt+0x1dc8>
   12da4:	b	12da8 <__assert_fail@plt+0x1dac>
   12da8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dac:	ldr	r1, [fp, #-156]	; 0xffffff64
   12db0:	mul	r0, r0, r1
   12db4:	asr	r1, r0, #31
   12db8:	str	r0, [fp, #-32]	; 0xffffffe0
   12dbc:	str	r1, [fp, #-28]	; 0xffffffe4
   12dc0:	b	13b34 <__assert_fail@plt+0x2b38>
   12dc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dc8:	ldr	r1, [fp, #-156]	; 0xffffff64
   12dcc:	mul	r0, r0, r1
   12dd0:	asr	r1, r0, #31
   12dd4:	str	r0, [fp, #-32]	; 0xffffffe0
   12dd8:	str	r1, [fp, #-28]	; 0xffffffe4
   12ddc:	b	13bb0 <__assert_fail@plt+0x2bb4>
   12de0:	ldr	r0, [fp, #-156]	; 0xffffff64
   12de4:	cmp	r0, #0
   12de8:	bge	12f4c <__assert_fail@plt+0x1f50>
   12dec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12df0:	cmn	r0, #1
   12df4:	bgt	12ea4 <__assert_fail@plt+0x1ea8>
   12df8:	b	12dfc <__assert_fail@plt+0x1e00>
   12dfc:	b	12e2c <__assert_fail@plt+0x1e30>
   12e00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e08:	ldr	r2, [fp, #-156]	; 0xffffff64
   12e0c:	mvn	r3, #0
   12e10:	udiv	r2, r3, r2
   12e14:	subs	r0, r0, r2
   12e18:	sbcs	r1, r1, #0
   12e1c:	str	r0, [sp, #516]	; 0x204
   12e20:	str	r1, [sp, #512]	; 0x200
   12e24:	blt	13024 <__assert_fail@plt+0x2028>
   12e28:	b	13040 <__assert_fail@plt+0x2044>
   12e2c:	b	12e30 <__assert_fail@plt+0x1e34>
   12e30:	ldr	r0, [pc, #808]	; 13160 <__assert_fail@plt+0x2164>
   12e34:	ldr	r1, [fp, #-156]	; 0xffffff64
   12e38:	cmp	r1, r0
   12e3c:	blt	12e54 <__assert_fail@plt+0x1e58>
   12e40:	b	12e60 <__assert_fail@plt+0x1e64>
   12e44:	ldr	r0, [fp, #-156]	; 0xffffff64
   12e48:	movw	r1, #0
   12e4c:	cmp	r1, r0
   12e50:	bge	12e60 <__assert_fail@plt+0x1e64>
   12e54:	movw	r0, #1
   12e58:	str	r0, [sp, #508]	; 0x1fc
   12e5c:	b	12e78 <__assert_fail@plt+0x1e7c>
   12e60:	ldr	r0, [fp, #-156]	; 0xffffff64
   12e64:	movw	r1, #0
   12e68:	sub	r0, r1, r0
   12e6c:	mvn	r1, #0
   12e70:	udiv	r0, r1, r0
   12e74:	str	r0, [sp, #508]	; 0x1fc
   12e78:	ldr	r0, [sp, #508]	; 0x1fc
   12e7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12e80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12e84:	mvn	r2, r2
   12e88:	mvn	r1, r1
   12e8c:	subs	r0, r1, r0
   12e90:	sbcs	r1, r2, #0
   12e94:	str	r0, [sp, #504]	; 0x1f8
   12e98:	str	r1, [sp, #500]	; 0x1f4
   12e9c:	bge	13024 <__assert_fail@plt+0x2028>
   12ea0:	b	13040 <__assert_fail@plt+0x2044>
   12ea4:	b	12ea8 <__assert_fail@plt+0x1eac>
   12ea8:	b	12f20 <__assert_fail@plt+0x1f24>
   12eac:	b	12f20 <__assert_fail@plt+0x1f24>
   12eb0:	ldr	r0, [fp, #-156]	; 0xffffff64
   12eb4:	cmn	r0, #1
   12eb8:	bne	12f20 <__assert_fail@plt+0x1f24>
   12ebc:	b	12ec0 <__assert_fail@plt+0x1ec4>
   12ec0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ec4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ec8:	rsbs	r0, r0, #0
   12ecc:	rscs	r1, r1, #0
   12ed0:	str	r0, [sp, #496]	; 0x1f0
   12ed4:	str	r1, [sp, #492]	; 0x1ec
   12ed8:	blt	13024 <__assert_fail@plt+0x2028>
   12edc:	b	13040 <__assert_fail@plt+0x2044>
   12ee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ee4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ee8:	subs	r0, r0, #1
   12eec:	sbcs	r1, r1, #0
   12ef0:	str	r0, [sp, #488]	; 0x1e8
   12ef4:	str	r1, [sp, #484]	; 0x1e4
   12ef8:	blt	13040 <__assert_fail@plt+0x2044>
   12efc:	b	12f00 <__assert_fail@plt+0x1f04>
   12f00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12f08:	subs	r0, r0, #1
   12f0c:	sbc	r1, r1, #0
   12f10:	cmn	r1, #1
   12f14:	str	r0, [sp, #480]	; 0x1e0
   12f18:	bgt	13024 <__assert_fail@plt+0x2028>
   12f1c:	b	13040 <__assert_fail@plt+0x2044>
   12f20:	ldr	r0, [fp, #-156]	; 0xffffff64
   12f24:	mov	r1, #0
   12f28:	sdiv	r0, r1, r0
   12f2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12f30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12f34:	subs	r1, r0, r1
   12f38:	rscs	r0, r2, r0, asr #31
   12f3c:	str	r1, [sp, #476]	; 0x1dc
   12f40:	str	r0, [sp, #472]	; 0x1d8
   12f44:	blt	13024 <__assert_fail@plt+0x2028>
   12f48:	b	13040 <__assert_fail@plt+0x2044>
   12f4c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12f50:	cmp	r0, #0
   12f54:	bne	12f5c <__assert_fail@plt+0x1f60>
   12f58:	b	13040 <__assert_fail@plt+0x2044>
   12f5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12f60:	cmn	r0, #1
   12f64:	bgt	12ff8 <__assert_fail@plt+0x1ffc>
   12f68:	b	12f6c <__assert_fail@plt+0x1f70>
   12f6c:	b	12f70 <__assert_fail@plt+0x1f74>
   12f70:	b	12fc4 <__assert_fail@plt+0x1fc8>
   12f74:	b	12fc4 <__assert_fail@plt+0x1fc8>
   12f78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12f80:	and	r0, r0, r1
   12f84:	cmn	r0, #1
   12f88:	bne	12fc4 <__assert_fail@plt+0x1fc8>
   12f8c:	b	12f90 <__assert_fail@plt+0x1f94>
   12f90:	b	12f94 <__assert_fail@plt+0x1f98>
   12f94:	ldr	r0, [fp, #-156]	; 0xffffff64
   12f98:	add	r0, r0, #0
   12f9c:	movw	r1, #0
   12fa0:	cmp	r1, r0
   12fa4:	blt	13024 <__assert_fail@plt+0x2028>
   12fa8:	b	13040 <__assert_fail@plt+0x2044>
   12fac:	ldr	r0, [fp, #-156]	; 0xffffff64
   12fb0:	sub	r0, r0, #1
   12fb4:	mvn	r1, #0
   12fb8:	cmp	r1, r0
   12fbc:	blt	13024 <__assert_fail@plt+0x2028>
   12fc0:	b	13040 <__assert_fail@plt+0x2044>
   12fc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12fc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12fcc:	mov	r0, #0
   12fd0:	str	r0, [sp, #468]	; 0x1d4
   12fd4:	ldr	r1, [sp, #468]	; 0x1d4
   12fd8:	bl	1eb60 <__assert_fail@plt+0xdb64>
   12fdc:	ldr	r2, [fp, #-156]	; 0xffffff64
   12fe0:	subs	r0, r0, r2
   12fe4:	sbcs	r1, r1, r2, asr #31
   12fe8:	str	r0, [sp, #464]	; 0x1d0
   12fec:	str	r1, [sp, #460]	; 0x1cc
   12ff0:	blt	13024 <__assert_fail@plt+0x2028>
   12ff4:	b	13040 <__assert_fail@plt+0x2044>
   12ff8:	ldr	r0, [fp, #-156]	; 0xffffff64
   12ffc:	mvn	r1, #0
   13000:	udiv	r0, r1, r0
   13004:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13008:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1300c:	subs	r0, r0, r1
   13010:	rscs	r1, r2, #0
   13014:	str	r0, [sp, #456]	; 0x1c8
   13018:	str	r1, [sp, #452]	; 0x1c4
   1301c:	bge	13040 <__assert_fail@plt+0x2044>
   13020:	b	13024 <__assert_fail@plt+0x2028>
   13024:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13028:	ldr	r1, [fp, #-156]	; 0xffffff64
   1302c:	mul	r0, r0, r1
   13030:	mov	r1, #0
   13034:	str	r1, [fp, #-28]	; 0xffffffe4
   13038:	str	r0, [fp, #-32]	; 0xffffffe0
   1303c:	b	13b34 <__assert_fail@plt+0x2b38>
   13040:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13044:	ldr	r1, [fp, #-156]	; 0xffffff64
   13048:	mul	r0, r0, r1
   1304c:	mov	r1, #0
   13050:	str	r1, [fp, #-28]	; 0xffffffe4
   13054:	str	r0, [fp, #-32]	; 0xffffffe0
   13058:	b	13bb0 <__assert_fail@plt+0x2bb4>
   1305c:	b	13564 <__assert_fail@plt+0x2568>
   13060:	b	13064 <__assert_fail@plt+0x2068>
   13064:	ldr	r0, [fp, #-156]	; 0xffffff64
   13068:	cmp	r0, #0
   1306c:	bge	131dc <__assert_fail@plt+0x21e0>
   13070:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13074:	cmn	r0, #1
   13078:	bgt	13128 <__assert_fail@plt+0x212c>
   1307c:	b	13080 <__assert_fail@plt+0x2084>
   13080:	b	13084 <__assert_fail@plt+0x2088>
   13084:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13088:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1308c:	ldr	r2, [fp, #-156]	; 0xffffff64
   13090:	mvn	r3, #-2147483648	; 0x80000000
   13094:	sdiv	r2, r3, r2
   13098:	subs	r0, r0, r2
   1309c:	sbcs	r1, r1, r2, asr #31
   130a0:	str	r0, [sp, #448]	; 0x1c0
   130a4:	str	r1, [sp, #444]	; 0x1bc
   130a8:	blt	132b0 <__assert_fail@plt+0x22b4>
   130ac:	b	132cc <__assert_fail@plt+0x22d0>
   130b0:	b	130b4 <__assert_fail@plt+0x20b8>
   130b4:	ldr	r0, [pc, #3992]	; 14054 <__assert_fail@plt+0x3058>
   130b8:	ldr	r1, [fp, #-156]	; 0xffffff64
   130bc:	cmp	r1, r0
   130c0:	blt	130d8 <__assert_fail@plt+0x20dc>
   130c4:	b	130e4 <__assert_fail@plt+0x20e8>
   130c8:	ldr	r0, [fp, #-156]	; 0xffffff64
   130cc:	movw	r1, #0
   130d0:	cmp	r1, r0
   130d4:	bge	130e4 <__assert_fail@plt+0x20e8>
   130d8:	movw	r0, #0
   130dc:	str	r0, [sp, #440]	; 0x1b8
   130e0:	b	130fc <__assert_fail@plt+0x2100>
   130e4:	ldr	r0, [pc, #3948]	; 14058 <__assert_fail@plt+0x305c>
   130e8:	ldr	r1, [fp, #-156]	; 0xffffff64
   130ec:	movw	r2, #0
   130f0:	sub	r1, r2, r1
   130f4:	sdiv	r0, r0, r1
   130f8:	str	r0, [sp, #440]	; 0x1b8
   130fc:	ldr	r0, [sp, #440]	; 0x1b8
   13100:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13104:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13108:	mvn	r2, r2
   1310c:	mvn	r1, r1
   13110:	subs	r1, r1, r0
   13114:	sbcs	r0, r2, r0, asr #31
   13118:	str	r1, [sp, #436]	; 0x1b4
   1311c:	str	r0, [sp, #432]	; 0x1b0
   13120:	bge	132b0 <__assert_fail@plt+0x22b4>
   13124:	b	132cc <__assert_fail@plt+0x22d0>
   13128:	ldr	r0, [fp, #-156]	; 0xffffff64
   1312c:	cmn	r0, #1
   13130:	bne	131b0 <__assert_fail@plt+0x21b4>
   13134:	b	13138 <__assert_fail@plt+0x213c>
   13138:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1313c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13140:	adds	r0, r0, #-2147483648	; 0x80000000
   13144:	sbc	r1, r1, #0
   13148:	rsbs	r0, r0, #0
   1314c:	rscs	r1, r1, #0
   13150:	str	r0, [sp, #428]	; 0x1ac
   13154:	str	r1, [sp, #424]	; 0x1a8
   13158:	blt	132b0 <__assert_fail@plt+0x22b4>
   1315c:	b	132cc <__assert_fail@plt+0x22d0>
   13160:	andhi	r0, r0, r1
   13164:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13168:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1316c:	subs	r0, r0, #1
   13170:	sbcs	r1, r1, #0
   13174:	str	r0, [sp, #420]	; 0x1a4
   13178:	str	r1, [sp, #416]	; 0x1a0
   1317c:	blt	132cc <__assert_fail@plt+0x22d0>
   13180:	b	13184 <__assert_fail@plt+0x2188>
   13184:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13188:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1318c:	subs	r0, r0, #1
   13190:	sbc	r1, r1, #0
   13194:	mvn	r2, #-2147483648	; 0x80000000
   13198:	subs	r0, r2, r0
   1319c:	rscs	r1, r1, #0
   131a0:	str	r0, [sp, #412]	; 0x19c
   131a4:	str	r1, [sp, #408]	; 0x198
   131a8:	blt	132b0 <__assert_fail@plt+0x22b4>
   131ac:	b	132cc <__assert_fail@plt+0x22d0>
   131b0:	ldr	r0, [fp, #-156]	; 0xffffff64
   131b4:	mov	r1, #-2147483648	; 0x80000000
   131b8:	sdiv	r0, r1, r0
   131bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   131c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   131c4:	subs	r1, r0, r1
   131c8:	rscs	r0, r2, r0, asr #31
   131cc:	str	r1, [sp, #404]	; 0x194
   131d0:	str	r0, [sp, #400]	; 0x190
   131d4:	blt	132b0 <__assert_fail@plt+0x22b4>
   131d8:	b	132cc <__assert_fail@plt+0x22d0>
   131dc:	ldr	r0, [fp, #-156]	; 0xffffff64
   131e0:	cmp	r0, #0
   131e4:	bne	131ec <__assert_fail@plt+0x21f0>
   131e8:	b	132cc <__assert_fail@plt+0x22d0>
   131ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   131f0:	cmn	r0, #1
   131f4:	bgt	13284 <__assert_fail@plt+0x2288>
   131f8:	b	131fc <__assert_fail@plt+0x2200>
   131fc:	b	13200 <__assert_fail@plt+0x2204>
   13200:	b	13254 <__assert_fail@plt+0x2258>
   13204:	b	13254 <__assert_fail@plt+0x2258>
   13208:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1320c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13210:	and	r0, r0, r1
   13214:	cmn	r0, #1
   13218:	bne	13254 <__assert_fail@plt+0x2258>
   1321c:	b	13220 <__assert_fail@plt+0x2224>
   13220:	b	13224 <__assert_fail@plt+0x2228>
   13224:	ldr	r0, [fp, #-156]	; 0xffffff64
   13228:	add	r0, r0, #-2147483648	; 0x80000000
   1322c:	movw	r1, #0
   13230:	cmp	r1, r0
   13234:	blt	132b0 <__assert_fail@plt+0x22b4>
   13238:	b	132cc <__assert_fail@plt+0x22d0>
   1323c:	ldr	r0, [pc, #3604]	; 14058 <__assert_fail@plt+0x305c>
   13240:	ldr	r1, [fp, #-156]	; 0xffffff64
   13244:	sub	r1, r1, #1
   13248:	cmp	r0, r1
   1324c:	blt	132b0 <__assert_fail@plt+0x22b4>
   13250:	b	132cc <__assert_fail@plt+0x22d0>
   13254:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13258:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1325c:	mov	r0, #-2147483648	; 0x80000000
   13260:	mvn	r1, #0
   13264:	bl	1eb60 <__assert_fail@plt+0xdb64>
   13268:	ldr	r2, [fp, #-156]	; 0xffffff64
   1326c:	subs	r0, r0, r2
   13270:	sbcs	r1, r1, r2, asr #31
   13274:	str	r0, [sp, #396]	; 0x18c
   13278:	str	r1, [sp, #392]	; 0x188
   1327c:	blt	132b0 <__assert_fail@plt+0x22b4>
   13280:	b	132cc <__assert_fail@plt+0x22d0>
   13284:	ldr	r0, [fp, #-156]	; 0xffffff64
   13288:	mvn	r1, #-2147483648	; 0x80000000
   1328c:	sdiv	r0, r1, r0
   13290:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13294:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13298:	subs	r1, r0, r1
   1329c:	rscs	r0, r2, r0, asr #31
   132a0:	str	r1, [sp, #388]	; 0x184
   132a4:	str	r0, [sp, #384]	; 0x180
   132a8:	bge	132cc <__assert_fail@plt+0x22d0>
   132ac:	b	132b0 <__assert_fail@plt+0x22b4>
   132b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132b4:	ldr	r1, [fp, #-156]	; 0xffffff64
   132b8:	mul	r0, r0, r1
   132bc:	asr	r1, r0, #31
   132c0:	str	r0, [fp, #-32]	; 0xffffffe0
   132c4:	str	r1, [fp, #-28]	; 0xffffffe4
   132c8:	b	13b34 <__assert_fail@plt+0x2b38>
   132cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132d0:	ldr	r1, [fp, #-156]	; 0xffffff64
   132d4:	mul	r0, r0, r1
   132d8:	asr	r1, r0, #31
   132dc:	str	r0, [fp, #-32]	; 0xffffffe0
   132e0:	str	r1, [fp, #-28]	; 0xffffffe4
   132e4:	b	13bb0 <__assert_fail@plt+0x2bb4>
   132e8:	ldr	r0, [fp, #-156]	; 0xffffff64
   132ec:	cmp	r0, #0
   132f0:	bge	13454 <__assert_fail@plt+0x2458>
   132f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   132f8:	cmn	r0, #1
   132fc:	bgt	133ac <__assert_fail@plt+0x23b0>
   13300:	b	13304 <__assert_fail@plt+0x2308>
   13304:	b	13334 <__assert_fail@plt+0x2338>
   13308:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1330c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13310:	ldr	r2, [fp, #-156]	; 0xffffff64
   13314:	mvn	r3, #0
   13318:	udiv	r2, r3, r2
   1331c:	subs	r0, r0, r2
   13320:	sbcs	r1, r1, #0
   13324:	str	r0, [sp, #380]	; 0x17c
   13328:	str	r1, [sp, #376]	; 0x178
   1332c:	blt	1352c <__assert_fail@plt+0x2530>
   13330:	b	13548 <__assert_fail@plt+0x254c>
   13334:	b	13338 <__assert_fail@plt+0x233c>
   13338:	ldr	r0, [pc, #3348]	; 14054 <__assert_fail@plt+0x3058>
   1333c:	ldr	r1, [fp, #-156]	; 0xffffff64
   13340:	cmp	r1, r0
   13344:	blt	1335c <__assert_fail@plt+0x2360>
   13348:	b	13368 <__assert_fail@plt+0x236c>
   1334c:	ldr	r0, [fp, #-156]	; 0xffffff64
   13350:	movw	r1, #0
   13354:	cmp	r1, r0
   13358:	bge	13368 <__assert_fail@plt+0x236c>
   1335c:	movw	r0, #1
   13360:	str	r0, [sp, #372]	; 0x174
   13364:	b	13380 <__assert_fail@plt+0x2384>
   13368:	ldr	r0, [fp, #-156]	; 0xffffff64
   1336c:	movw	r1, #0
   13370:	sub	r0, r1, r0
   13374:	mvn	r1, #0
   13378:	udiv	r0, r1, r0
   1337c:	str	r0, [sp, #372]	; 0x174
   13380:	ldr	r0, [sp, #372]	; 0x174
   13384:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13388:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1338c:	mvn	r2, r2
   13390:	mvn	r1, r1
   13394:	subs	r0, r1, r0
   13398:	sbcs	r1, r2, #0
   1339c:	str	r0, [sp, #368]	; 0x170
   133a0:	str	r1, [sp, #364]	; 0x16c
   133a4:	bge	1352c <__assert_fail@plt+0x2530>
   133a8:	b	13548 <__assert_fail@plt+0x254c>
   133ac:	b	133b0 <__assert_fail@plt+0x23b4>
   133b0:	b	13428 <__assert_fail@plt+0x242c>
   133b4:	b	13428 <__assert_fail@plt+0x242c>
   133b8:	ldr	r0, [fp, #-156]	; 0xffffff64
   133bc:	cmn	r0, #1
   133c0:	bne	13428 <__assert_fail@plt+0x242c>
   133c4:	b	133c8 <__assert_fail@plt+0x23cc>
   133c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133d0:	rsbs	r0, r0, #0
   133d4:	rscs	r1, r1, #0
   133d8:	str	r0, [sp, #360]	; 0x168
   133dc:	str	r1, [sp, #356]	; 0x164
   133e0:	blt	1352c <__assert_fail@plt+0x2530>
   133e4:	b	13548 <__assert_fail@plt+0x254c>
   133e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133f0:	subs	r0, r0, #1
   133f4:	sbcs	r1, r1, #0
   133f8:	str	r0, [sp, #352]	; 0x160
   133fc:	str	r1, [sp, #348]	; 0x15c
   13400:	blt	13548 <__assert_fail@plt+0x254c>
   13404:	b	13408 <__assert_fail@plt+0x240c>
   13408:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1340c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13410:	subs	r0, r0, #1
   13414:	sbc	r1, r1, #0
   13418:	cmn	r1, #1
   1341c:	str	r0, [sp, #344]	; 0x158
   13420:	bgt	1352c <__assert_fail@plt+0x2530>
   13424:	b	13548 <__assert_fail@plt+0x254c>
   13428:	ldr	r0, [fp, #-156]	; 0xffffff64
   1342c:	mov	r1, #0
   13430:	sdiv	r0, r1, r0
   13434:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13438:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1343c:	subs	r1, r0, r1
   13440:	rscs	r0, r2, r0, asr #31
   13444:	str	r1, [sp, #340]	; 0x154
   13448:	str	r0, [sp, #336]	; 0x150
   1344c:	blt	1352c <__assert_fail@plt+0x2530>
   13450:	b	13548 <__assert_fail@plt+0x254c>
   13454:	ldr	r0, [fp, #-156]	; 0xffffff64
   13458:	cmp	r0, #0
   1345c:	bne	13464 <__assert_fail@plt+0x2468>
   13460:	b	13548 <__assert_fail@plt+0x254c>
   13464:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13468:	cmn	r0, #1
   1346c:	bgt	13500 <__assert_fail@plt+0x2504>
   13470:	b	13474 <__assert_fail@plt+0x2478>
   13474:	b	13478 <__assert_fail@plt+0x247c>
   13478:	b	134cc <__assert_fail@plt+0x24d0>
   1347c:	b	134cc <__assert_fail@plt+0x24d0>
   13480:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13488:	and	r0, r0, r1
   1348c:	cmn	r0, #1
   13490:	bne	134cc <__assert_fail@plt+0x24d0>
   13494:	b	13498 <__assert_fail@plt+0x249c>
   13498:	b	1349c <__assert_fail@plt+0x24a0>
   1349c:	ldr	r0, [fp, #-156]	; 0xffffff64
   134a0:	add	r0, r0, #0
   134a4:	movw	r1, #0
   134a8:	cmp	r1, r0
   134ac:	blt	1352c <__assert_fail@plt+0x2530>
   134b0:	b	13548 <__assert_fail@plt+0x254c>
   134b4:	ldr	r0, [fp, #-156]	; 0xffffff64
   134b8:	sub	r0, r0, #1
   134bc:	mvn	r1, #0
   134c0:	cmp	r1, r0
   134c4:	blt	1352c <__assert_fail@plt+0x2530>
   134c8:	b	13548 <__assert_fail@plt+0x254c>
   134cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   134d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134d4:	mov	r0, #0
   134d8:	str	r0, [sp, #332]	; 0x14c
   134dc:	ldr	r1, [sp, #332]	; 0x14c
   134e0:	bl	1eb60 <__assert_fail@plt+0xdb64>
   134e4:	ldr	r2, [fp, #-156]	; 0xffffff64
   134e8:	subs	r0, r0, r2
   134ec:	sbcs	r1, r1, r2, asr #31
   134f0:	str	r0, [sp, #328]	; 0x148
   134f4:	str	r1, [sp, #324]	; 0x144
   134f8:	blt	1352c <__assert_fail@plt+0x2530>
   134fc:	b	13548 <__assert_fail@plt+0x254c>
   13500:	ldr	r0, [fp, #-156]	; 0xffffff64
   13504:	mvn	r1, #0
   13508:	udiv	r0, r1, r0
   1350c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13510:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13514:	subs	r0, r0, r1
   13518:	rscs	r1, r2, #0
   1351c:	str	r0, [sp, #320]	; 0x140
   13520:	str	r1, [sp, #316]	; 0x13c
   13524:	bge	13548 <__assert_fail@plt+0x254c>
   13528:	b	1352c <__assert_fail@plt+0x2530>
   1352c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13530:	ldr	r1, [fp, #-156]	; 0xffffff64
   13534:	mul	r0, r0, r1
   13538:	mov	r1, #0
   1353c:	str	r1, [fp, #-28]	; 0xffffffe4
   13540:	str	r0, [fp, #-32]	; 0xffffffe0
   13544:	b	13b34 <__assert_fail@plt+0x2b38>
   13548:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1354c:	ldr	r1, [fp, #-156]	; 0xffffff64
   13550:	mul	r0, r0, r1
   13554:	mov	r1, #0
   13558:	str	r1, [fp, #-28]	; 0xffffffe4
   1355c:	str	r0, [fp, #-32]	; 0xffffffe0
   13560:	b	13bb0 <__assert_fail@plt+0x2bb4>
   13564:	b	13568 <__assert_fail@plt+0x256c>
   13568:	ldr	r0, [fp, #-156]	; 0xffffff64
   1356c:	cmp	r0, #0
   13570:	bge	1371c <__assert_fail@plt+0x2720>
   13574:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13578:	cmn	r0, #1
   1357c:	bgt	13674 <__assert_fail@plt+0x2678>
   13580:	b	13584 <__assert_fail@plt+0x2588>
   13584:	b	13588 <__assert_fail@plt+0x258c>
   13588:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1358c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13590:	ldr	r2, [fp, #-156]	; 0xffffff64
   13594:	asr	r3, r2, #31
   13598:	mvn	ip, #0
   1359c:	mvn	lr, #-2147483648	; 0x80000000
   135a0:	str	r0, [sp, #312]	; 0x138
   135a4:	mov	r0, ip
   135a8:	str	r1, [sp, #308]	; 0x134
   135ac:	mov	r1, lr
   135b0:	bl	1eb60 <__assert_fail@plt+0xdb64>
   135b4:	ldr	r2, [sp, #312]	; 0x138
   135b8:	subs	r0, r2, r0
   135bc:	ldr	r2, [sp, #308]	; 0x134
   135c0:	sbcs	r1, r2, r1
   135c4:	str	r0, [sp, #304]	; 0x130
   135c8:	str	r1, [sp, #300]	; 0x12c
   135cc:	blt	13804 <__assert_fail@plt+0x2808>
   135d0:	b	1382c <__assert_fail@plt+0x2830>
   135d4:	b	135d8 <__assert_fail@plt+0x25dc>
   135d8:	ldr	r0, [pc, #2676]	; 14054 <__assert_fail@plt+0x3058>
   135dc:	ldr	r1, [fp, #-156]	; 0xffffff64
   135e0:	cmp	r1, r0
   135e4:	blt	135fc <__assert_fail@plt+0x2600>
   135e8:	b	13610 <__assert_fail@plt+0x2614>
   135ec:	ldr	r0, [fp, #-156]	; 0xffffff64
   135f0:	movw	r1, #0
   135f4:	cmp	r1, r0
   135f8:	bge	13610 <__assert_fail@plt+0x2614>
   135fc:	mov	r0, #0
   13600:	mvn	r1, #0
   13604:	str	r1, [sp, #296]	; 0x128
   13608:	str	r0, [sp, #292]	; 0x124
   1360c:	b	13644 <__assert_fail@plt+0x2648>
   13610:	ldr	r0, [fp, #-156]	; 0xffffff64
   13614:	rsb	r0, r0, #0
   13618:	asr	r3, r0, #31
   1361c:	mvn	r1, #0
   13620:	mvn	r2, #-2147483648	; 0x80000000
   13624:	str	r0, [sp, #288]	; 0x120
   13628:	mov	r0, r1
   1362c:	mov	r1, r2
   13630:	ldr	r2, [sp, #288]	; 0x120
   13634:	bl	1eb60 <__assert_fail@plt+0xdb64>
   13638:	str	r0, [sp, #296]	; 0x128
   1363c:	str	r1, [sp, #292]	; 0x124
   13640:	b	13644 <__assert_fail@plt+0x2648>
   13644:	ldr	r0, [sp, #292]	; 0x124
   13648:	ldr	r1, [sp, #296]	; 0x128
   1364c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13650:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13654:	mvn	r3, r3
   13658:	mvn	r2, r2
   1365c:	subs	r1, r2, r1
   13660:	sbcs	r0, r3, r0
   13664:	str	r1, [sp, #284]	; 0x11c
   13668:	str	r0, [sp, #280]	; 0x118
   1366c:	bge	13804 <__assert_fail@plt+0x2808>
   13670:	b	1382c <__assert_fail@plt+0x2830>
   13674:	ldr	r0, [fp, #-156]	; 0xffffff64
   13678:	cmn	r0, #1
   1367c:	bne	136d8 <__assert_fail@plt+0x26dc>
   13680:	b	13684 <__assert_fail@plt+0x2688>
   13684:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13688:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1368c:	add	r1, r1, #-2147483648	; 0x80000000
   13690:	rsbs	r0, r0, #0
   13694:	rscs	r1, r1, #0
   13698:	str	r0, [sp, #276]	; 0x114
   1369c:	str	r1, [sp, #272]	; 0x110
   136a0:	blt	13804 <__assert_fail@plt+0x2808>
   136a4:	b	1382c <__assert_fail@plt+0x2830>
   136a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   136ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136b0:	subs	r0, r0, #1
   136b4:	sbcs	r1, r1, #0
   136b8:	str	r0, [sp, #268]	; 0x10c
   136bc:	str	r1, [sp, #264]	; 0x108
   136c0:	blt	1382c <__assert_fail@plt+0x2830>
   136c4:	b	136c8 <__assert_fail@plt+0x26cc>
   136c8:	mov	r0, #0
   136cc:	cmp	r0, #0
   136d0:	bne	13804 <__assert_fail@plt+0x2808>
   136d4:	b	1382c <__assert_fail@plt+0x2830>
   136d8:	ldr	r0, [fp, #-156]	; 0xffffff64
   136dc:	asr	r3, r0, #31
   136e0:	mov	r1, #0
   136e4:	mov	r2, #-2147483648	; 0x80000000
   136e8:	str	r0, [sp, #260]	; 0x104
   136ec:	mov	r0, r1
   136f0:	mov	r1, r2
   136f4:	ldr	r2, [sp, #260]	; 0x104
   136f8:	bl	1eb60 <__assert_fail@plt+0xdb64>
   136fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13700:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13704:	subs	r0, r0, r2
   13708:	sbcs	r1, r1, r3
   1370c:	str	r0, [sp, #256]	; 0x100
   13710:	str	r1, [sp, #252]	; 0xfc
   13714:	blt	13804 <__assert_fail@plt+0x2808>
   13718:	b	1382c <__assert_fail@plt+0x2830>
   1371c:	ldr	r0, [fp, #-156]	; 0xffffff64
   13720:	cmp	r0, #0
   13724:	bne	1372c <__assert_fail@plt+0x2730>
   13728:	b	1382c <__assert_fail@plt+0x2830>
   1372c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13730:	cmn	r0, #1
   13734:	bgt	137bc <__assert_fail@plt+0x27c0>
   13738:	b	1373c <__assert_fail@plt+0x2740>
   1373c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13740:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13744:	and	r0, r0, r1
   13748:	cmn	r0, #1
   1374c:	bne	1378c <__assert_fail@plt+0x2790>
   13750:	b	13754 <__assert_fail@plt+0x2758>
   13754:	b	13758 <__assert_fail@plt+0x275c>
   13758:	ldr	r0, [fp, #-156]	; 0xffffff64
   1375c:	mov	r1, #-2147483648	; 0x80000000
   13760:	add	r1, r1, r0, asr #31
   13764:	rsbs	r0, r0, #0
   13768:	rscs	r1, r1, #0
   1376c:	str	r0, [sp, #248]	; 0xf8
   13770:	str	r1, [sp, #244]	; 0xf4
   13774:	blt	13804 <__assert_fail@plt+0x2808>
   13778:	b	1382c <__assert_fail@plt+0x2830>
   1377c:	mov	r0, #0
   13780:	cmp	r0, #0
   13784:	bne	13804 <__assert_fail@plt+0x2808>
   13788:	b	1382c <__assert_fail@plt+0x2830>
   1378c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13790:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13794:	mov	r0, #0
   13798:	mov	r1, #-2147483648	; 0x80000000
   1379c:	bl	1eb60 <__assert_fail@plt+0xdb64>
   137a0:	ldr	r2, [fp, #-156]	; 0xffffff64
   137a4:	subs	r0, r0, r2
   137a8:	sbcs	r1, r1, r2, asr #31
   137ac:	str	r0, [sp, #240]	; 0xf0
   137b0:	str	r1, [sp, #236]	; 0xec
   137b4:	blt	13804 <__assert_fail@plt+0x2808>
   137b8:	b	1382c <__assert_fail@plt+0x2830>
   137bc:	ldr	r0, [fp, #-156]	; 0xffffff64
   137c0:	asr	r3, r0, #31
   137c4:	mvn	r1, #0
   137c8:	mvn	r2, #-2147483648	; 0x80000000
   137cc:	str	r0, [sp, #232]	; 0xe8
   137d0:	mov	r0, r1
   137d4:	mov	r1, r2
   137d8:	ldr	r2, [sp, #232]	; 0xe8
   137dc:	bl	1eb60 <__assert_fail@plt+0xdb64>
   137e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   137e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   137e8:	subs	r0, r0, r2
   137ec:	sbcs	r1, r1, r3
   137f0:	str	r0, [sp, #228]	; 0xe4
   137f4:	str	r1, [sp, #224]	; 0xe0
   137f8:	bge	1382c <__assert_fail@plt+0x2830>
   137fc:	b	13804 <__assert_fail@plt+0x2808>
   13800:			; <UNDEFINED> instruction: 0xffff8000
   13804:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13808:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1380c:	ldr	r2, [fp, #-156]	; 0xffffff64
   13810:	asr	r3, r2, #31
   13814:	umull	ip, lr, r0, r2
   13818:	mla	r0, r0, r3, lr
   1381c:	mla	r0, r1, r2, r0
   13820:	str	ip, [fp, #-32]	; 0xffffffe0
   13824:	str	r0, [fp, #-28]	; 0xffffffe4
   13828:	b	13b34 <__assert_fail@plt+0x2b38>
   1382c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13830:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13834:	ldr	r2, [fp, #-156]	; 0xffffff64
   13838:	asr	r3, r2, #31
   1383c:	umull	ip, lr, r0, r2
   13840:	mla	r0, r0, r3, lr
   13844:	mla	r0, r1, r2, r0
   13848:	str	ip, [fp, #-32]	; 0xffffffe0
   1384c:	str	r0, [fp, #-28]	; 0xffffffe4
   13850:	b	13bb0 <__assert_fail@plt+0x2bb4>
   13854:	ldr	r0, [fp, #-156]	; 0xffffff64
   13858:	cmp	r0, #0
   1385c:	bge	139fc <__assert_fail@plt+0x2a00>
   13860:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13864:	cmn	r0, #1
   13868:	bgt	13954 <__assert_fail@plt+0x2958>
   1386c:	b	13870 <__assert_fail@plt+0x2874>
   13870:	b	138bc <__assert_fail@plt+0x28c0>
   13874:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13878:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1387c:	ldr	r2, [fp, #-156]	; 0xffffff64
   13880:	asr	r3, r2, #31
   13884:	mvn	ip, #0
   13888:	str	r0, [sp, #220]	; 0xdc
   1388c:	mov	r0, ip
   13890:	str	r1, [sp, #216]	; 0xd8
   13894:	mov	r1, ip
   13898:	bl	1ec34 <__assert_fail@plt+0xdc38>
   1389c:	ldr	r2, [sp, #220]	; 0xdc
   138a0:	subs	r0, r2, r0
   138a4:	ldr	r2, [sp, #216]	; 0xd8
   138a8:	sbcs	r1, r2, r1
   138ac:	str	r0, [sp, #212]	; 0xd4
   138b0:	str	r1, [sp, #208]	; 0xd0
   138b4:	bcc	13ae4 <__assert_fail@plt+0x2ae8>
   138b8:	b	13b0c <__assert_fail@plt+0x2b10>
   138bc:	b	138c0 <__assert_fail@plt+0x28c4>
   138c0:	ldr	r0, [pc, #1932]	; 14054 <__assert_fail@plt+0x3058>
   138c4:	ldr	r1, [fp, #-156]	; 0xffffff64
   138c8:	cmp	r1, r0
   138cc:	blt	138e4 <__assert_fail@plt+0x28e8>
   138d0:	b	138f8 <__assert_fail@plt+0x28fc>
   138d4:	ldr	r0, [fp, #-156]	; 0xffffff64
   138d8:	movw	r1, #0
   138dc:	cmp	r1, r0
   138e0:	bge	138f8 <__assert_fail@plt+0x28fc>
   138e4:	mov	r0, #1
   138e8:	mvn	r1, #0
   138ec:	str	r1, [sp, #204]	; 0xcc
   138f0:	str	r0, [sp, #200]	; 0xc8
   138f4:	b	13924 <__assert_fail@plt+0x2928>
   138f8:	ldr	r0, [fp, #-156]	; 0xffffff64
   138fc:	rsb	r0, r0, #0
   13900:	asr	r3, r0, #31
   13904:	mvn	r1, #0
   13908:	str	r0, [sp, #196]	; 0xc4
   1390c:	mov	r0, r1
   13910:	ldr	r2, [sp, #196]	; 0xc4
   13914:	bl	1ec34 <__assert_fail@plt+0xdc38>
   13918:	str	r0, [sp, #204]	; 0xcc
   1391c:	str	r1, [sp, #200]	; 0xc8
   13920:	b	13924 <__assert_fail@plt+0x2928>
   13924:	ldr	r0, [sp, #200]	; 0xc8
   13928:	ldr	r1, [sp, #204]	; 0xcc
   1392c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13930:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13934:	mvn	r3, r3
   13938:	mvn	r2, r2
   1393c:	subs	r1, r2, r1
   13940:	sbcs	r0, r3, r0
   13944:	str	r1, [sp, #192]	; 0xc0
   13948:	str	r0, [sp, #188]	; 0xbc
   1394c:	bcs	13ae4 <__assert_fail@plt+0x2ae8>
   13950:	b	13b0c <__assert_fail@plt+0x2b10>
   13954:	b	13958 <__assert_fail@plt+0x295c>
   13958:	b	139d0 <__assert_fail@plt+0x29d4>
   1395c:	b	139d0 <__assert_fail@plt+0x29d4>
   13960:	ldr	r0, [fp, #-156]	; 0xffffff64
   13964:	cmn	r0, #1
   13968:	bne	139d0 <__assert_fail@plt+0x29d4>
   1396c:	b	13970 <__assert_fail@plt+0x2974>
   13970:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13978:	rsbs	r0, r0, #0
   1397c:	rscs	r1, r1, #0
   13980:	str	r0, [sp, #184]	; 0xb8
   13984:	str	r1, [sp, #180]	; 0xb4
   13988:	blt	13ae4 <__assert_fail@plt+0x2ae8>
   1398c:	b	13b0c <__assert_fail@plt+0x2b10>
   13990:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13994:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13998:	subs	r0, r0, #1
   1399c:	sbcs	r1, r1, #0
   139a0:	str	r0, [sp, #176]	; 0xb0
   139a4:	str	r1, [sp, #172]	; 0xac
   139a8:	blt	13b0c <__assert_fail@plt+0x2b10>
   139ac:	b	139b0 <__assert_fail@plt+0x29b4>
   139b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   139b8:	subs	r0, r0, #1
   139bc:	sbc	r1, r1, #0
   139c0:	cmn	r1, #1
   139c4:	str	r0, [sp, #168]	; 0xa8
   139c8:	bgt	13ae4 <__assert_fail@plt+0x2ae8>
   139cc:	b	13b0c <__assert_fail@plt+0x2b10>
   139d0:	ldr	r0, [fp, #-156]	; 0xffffff64
   139d4:	mov	r1, #0
   139d8:	sdiv	r0, r1, r0
   139dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   139e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   139e4:	subs	r1, r0, r1
   139e8:	rscs	r0, r2, r0, asr #31
   139ec:	str	r1, [sp, #164]	; 0xa4
   139f0:	str	r0, [sp, #160]	; 0xa0
   139f4:	blt	13ae4 <__assert_fail@plt+0x2ae8>
   139f8:	b	13b0c <__assert_fail@plt+0x2b10>
   139fc:	ldr	r0, [fp, #-156]	; 0xffffff64
   13a00:	cmp	r0, #0
   13a04:	bne	13a0c <__assert_fail@plt+0x2a10>
   13a08:	b	13b0c <__assert_fail@plt+0x2b10>
   13a0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a10:	cmn	r0, #1
   13a14:	bgt	13aa8 <__assert_fail@plt+0x2aac>
   13a18:	b	13a1c <__assert_fail@plt+0x2a20>
   13a1c:	b	13a20 <__assert_fail@plt+0x2a24>
   13a20:	b	13a74 <__assert_fail@plt+0x2a78>
   13a24:	b	13a74 <__assert_fail@plt+0x2a78>
   13a28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a30:	and	r0, r0, r1
   13a34:	cmn	r0, #1
   13a38:	bne	13a74 <__assert_fail@plt+0x2a78>
   13a3c:	b	13a40 <__assert_fail@plt+0x2a44>
   13a40:	b	13a44 <__assert_fail@plt+0x2a48>
   13a44:	ldr	r0, [fp, #-156]	; 0xffffff64
   13a48:	add	r0, r0, #0
   13a4c:	movw	r1, #0
   13a50:	cmp	r1, r0
   13a54:	blt	13ae4 <__assert_fail@plt+0x2ae8>
   13a58:	b	13b0c <__assert_fail@plt+0x2b10>
   13a5c:	ldr	r0, [fp, #-156]	; 0xffffff64
   13a60:	sub	r0, r0, #1
   13a64:	mvn	r1, #0
   13a68:	cmp	r1, r0
   13a6c:	blt	13ae4 <__assert_fail@plt+0x2ae8>
   13a70:	b	13b0c <__assert_fail@plt+0x2b10>
   13a74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13a78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a7c:	mov	r0, #0
   13a80:	str	r0, [sp, #156]	; 0x9c
   13a84:	ldr	r1, [sp, #156]	; 0x9c
   13a88:	bl	1eb60 <__assert_fail@plt+0xdb64>
   13a8c:	ldr	r2, [fp, #-156]	; 0xffffff64
   13a90:	subs	r0, r0, r2
   13a94:	sbcs	r1, r1, r2, asr #31
   13a98:	str	r0, [sp, #152]	; 0x98
   13a9c:	str	r1, [sp, #148]	; 0x94
   13aa0:	blt	13ae4 <__assert_fail@plt+0x2ae8>
   13aa4:	b	13b0c <__assert_fail@plt+0x2b10>
   13aa8:	ldr	r0, [fp, #-156]	; 0xffffff64
   13aac:	asr	r3, r0, #31
   13ab0:	mvn	r1, #0
   13ab4:	str	r0, [sp, #144]	; 0x90
   13ab8:	mov	r0, r1
   13abc:	ldr	r2, [sp, #144]	; 0x90
   13ac0:	bl	1ec34 <__assert_fail@plt+0xdc38>
   13ac4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13ac8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13acc:	subs	r0, r0, r2
   13ad0:	sbcs	r1, r1, r3
   13ad4:	str	r0, [sp, #140]	; 0x8c
   13ad8:	str	r1, [sp, #136]	; 0x88
   13adc:	bcs	13b0c <__assert_fail@plt+0x2b10>
   13ae0:	b	13ae4 <__assert_fail@plt+0x2ae8>
   13ae4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13aec:	ldr	r2, [fp, #-156]	; 0xffffff64
   13af0:	asr	r3, r2, #31
   13af4:	umull	ip, lr, r0, r2
   13af8:	mla	r0, r0, r3, lr
   13afc:	mla	r0, r1, r2, r0
   13b00:	str	ip, [fp, #-32]	; 0xffffffe0
   13b04:	str	r0, [fp, #-28]	; 0xffffffe4
   13b08:	b	13b34 <__assert_fail@plt+0x2b38>
   13b0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b14:	ldr	r2, [fp, #-156]	; 0xffffff64
   13b18:	asr	r3, r2, #31
   13b1c:	umull	ip, lr, r0, r2
   13b20:	mla	r0, r0, r3, lr
   13b24:	mla	r0, r1, r2, r0
   13b28:	str	ip, [fp, #-32]	; 0xffffffe0
   13b2c:	str	r0, [fp, #-28]	; 0xffffffe4
   13b30:	b	13bb0 <__assert_fail@plt+0x2bb4>
   13b34:	movw	r0, #62912	; 0xf5c0
   13b38:	movt	r0, #1
   13b3c:	bl	10f0c <gettext@plt>
   13b40:	ldr	lr, [fp, #-168]	; 0xffffff58
   13b44:	ldr	r1, [fp, #-164]	; 0xffffff5c
   13b48:	ldr	r2, [fp, #-156]	; 0xffffff64
   13b4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b50:	movw	ip, #4
   13b54:	str	r0, [sp, #132]	; 0x84
   13b58:	mov	r0, ip
   13b5c:	str	r1, [sp, #128]	; 0x80
   13b60:	mov	r1, r3
   13b64:	str	r2, [sp, #124]	; 0x7c
   13b68:	str	lr, [sp, #120]	; 0x78
   13b6c:	bl	16488 <__assert_fail@plt+0x548c>
   13b70:	mov	r1, sp
   13b74:	str	r0, [r1, #12]
   13b78:	ldr	r0, [sp, #124]	; 0x7c
   13b7c:	str	r0, [r1, #8]
   13b80:	ldr	r2, [sp, #128]	; 0x80
   13b84:	str	r2, [r1, #4]
   13b88:	ldr	r3, [sp, #120]	; 0x78
   13b8c:	str	r3, [r1]
   13b90:	mov	r1, #0
   13b94:	mov	r0, r1
   13b98:	ldr	r2, [sp, #132]	; 0x84
   13b9c:	bl	10ea0 <error@plt>
   13ba0:	movw	r0, #0
   13ba4:	and	r0, r0, #1
   13ba8:	strb	r0, [fp, #-9]
   13bac:	b	14044 <__assert_fail@plt+0x3048>
   13bb0:	b	13bb4 <__assert_fail@plt+0x2bb8>
   13bb4:	ldr	r0, [fp, #16]
   13bb8:	cmp	r0, #0
   13bbc:	beq	13f78 <__assert_fail@plt+0x2f7c>
   13bc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13bc4:	cmp	r0, #0
   13bc8:	blt	13be8 <__assert_fail@plt+0x2bec>
   13bcc:	b	13bd0 <__assert_fail@plt+0x2bd4>
   13bd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13bd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13bd8:	str	r1, [fp, #-172]	; 0xffffff54
   13bdc:	str	r0, [fp, #-176]	; 0xffffff50
   13be0:	b	13cfc <__assert_fail@plt+0x2d00>
   13be4:	svcvc	0x00ffffff
   13be8:	sub	r0, fp, #144	; 0x90
   13bec:	bl	11f58 <__assert_fail@plt+0xf5c>
   13bf0:	tst	r0, #1
   13bf4:	beq	13c64 <__assert_fail@plt+0x2c68>
   13bf8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13bfc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   13c00:	str	r1, [fp, #-172]	; 0xffffff54
   13c04:	str	r0, [fp, #-176]	; 0xffffff50
   13c08:	ldr	r0, [fp, #-172]	; 0xffffff54
   13c0c:	cmn	r0, #1
   13c10:	bgt	13c60 <__assert_fail@plt+0x2c64>
   13c14:	b	13c18 <__assert_fail@plt+0x2c1c>
   13c18:	movw	r0, #62958	; 0xf5ee
   13c1c:	movt	r0, #1
   13c20:	bl	10f0c <gettext@plt>
   13c24:	ldr	r1, [fp, #-20]	; 0xffffffec
   13c28:	movw	lr, #4
   13c2c:	str	r0, [sp, #116]	; 0x74
   13c30:	mov	r0, lr
   13c34:	bl	16488 <__assert_fail@plt+0x548c>
   13c38:	movw	r1, #0
   13c3c:	str	r0, [sp, #112]	; 0x70
   13c40:	mov	r0, r1
   13c44:	ldr	r2, [sp, #116]	; 0x74
   13c48:	ldr	r3, [sp, #112]	; 0x70
   13c4c:	bl	10ea0 <error@plt>
   13c50:	movw	r0, #0
   13c54:	and	r0, r0, #1
   13c58:	strb	r0, [fp, #-9]
   13c5c:	b	14044 <__assert_fail@plt+0x3048>
   13c60:	b	13cf8 <__assert_fail@plt+0x2cfc>
   13c64:	ldr	r0, [fp, #-16]
   13c68:	mov	r1, sp
   13c6c:	mov	r2, #2
   13c70:	str	r2, [r1]
   13c74:	mov	r1, #0
   13c78:	mov	r2, r1
   13c7c:	mov	r3, r1
   13c80:	bl	10e64 <lseek64@plt>
   13c84:	str	r1, [fp, #-172]	; 0xffffff54
   13c88:	str	r0, [fp, #-176]	; 0xffffff50
   13c8c:	ldr	r0, [fp, #-172]	; 0xffffff54
   13c90:	cmn	r0, #1
   13c94:	bgt	13cf4 <__assert_fail@plt+0x2cf8>
   13c98:	b	13c9c <__assert_fail@plt+0x2ca0>
   13c9c:	bl	10f3c <__errno_location@plt>
   13ca0:	ldr	r1, [r0]
   13ca4:	movw	r0, #62203	; 0xf2fb
   13ca8:	movt	r0, #1
   13cac:	str	r1, [sp, #108]	; 0x6c
   13cb0:	bl	10f0c <gettext@plt>
   13cb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13cb8:	movw	lr, #4
   13cbc:	str	r0, [sp, #104]	; 0x68
   13cc0:	mov	r0, lr
   13cc4:	bl	16488 <__assert_fail@plt+0x548c>
   13cc8:	movw	r1, #0
   13ccc:	str	r0, [sp, #100]	; 0x64
   13cd0:	mov	r0, r1
   13cd4:	ldr	r1, [sp, #108]	; 0x6c
   13cd8:	ldr	r2, [sp, #104]	; 0x68
   13cdc:	ldr	r3, [sp, #100]	; 0x64
   13ce0:	bl	10ea0 <error@plt>
   13ce4:	movw	r0, #0
   13ce8:	and	r0, r0, #1
   13cec:	strb	r0, [fp, #-9]
   13cf0:	b	14044 <__assert_fail@plt+0x3048>
   13cf4:	b	13cf8 <__assert_fail@plt+0x2cfc>
   13cf8:	b	13cfc <__assert_fail@plt+0x2d00>
   13cfc:	ldr	r0, [fp, #16]
   13d00:	cmp	r0, #2
   13d04:	bne	13d6c <__assert_fail@plt+0x2d70>
   13d08:	ldr	r0, [fp, #-176]	; 0xffffff50
   13d0c:	ldr	r1, [fp, #-172]	; 0xffffff54
   13d10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13d14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13d18:	subs	r0, r2, r0
   13d1c:	sbcs	r1, r3, r1
   13d20:	str	r0, [sp, #96]	; 0x60
   13d24:	str	r1, [sp, #92]	; 0x5c
   13d28:	bge	13d44 <__assert_fail@plt+0x2d48>
   13d2c:	b	13d30 <__assert_fail@plt+0x2d34>
   13d30:	ldr	r0, [fp, #-176]	; 0xffffff50
   13d34:	ldr	r1, [fp, #-172]	; 0xffffff54
   13d38:	str	r0, [sp, #88]	; 0x58
   13d3c:	str	r1, [sp, #84]	; 0x54
   13d40:	b	13d58 <__assert_fail@plt+0x2d5c>
   13d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d4c:	str	r0, [sp, #88]	; 0x58
   13d50:	str	r1, [sp, #84]	; 0x54
   13d54:	b	13d58 <__assert_fail@plt+0x2d5c>
   13d58:	ldr	r0, [sp, #84]	; 0x54
   13d5c:	ldr	r1, [sp, #88]	; 0x58
   13d60:	str	r1, [fp, #-152]	; 0xffffff68
   13d64:	str	r0, [fp, #-148]	; 0xffffff6c
   13d68:	b	13f74 <__assert_fail@plt+0x2f78>
   13d6c:	ldr	r0, [fp, #16]
   13d70:	cmp	r0, #3
   13d74:	bne	13ddc <__assert_fail@plt+0x2de0>
   13d78:	ldr	r0, [fp, #-176]	; 0xffffff50
   13d7c:	ldr	r1, [fp, #-172]	; 0xffffff54
   13d80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13d84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13d88:	subs	r0, r0, r2
   13d8c:	sbcs	r1, r1, r3
   13d90:	str	r0, [sp, #80]	; 0x50
   13d94:	str	r1, [sp, #76]	; 0x4c
   13d98:	bge	13db4 <__assert_fail@plt+0x2db8>
   13d9c:	b	13da0 <__assert_fail@plt+0x2da4>
   13da0:	ldr	r0, [fp, #-176]	; 0xffffff50
   13da4:	ldr	r1, [fp, #-172]	; 0xffffff54
   13da8:	str	r0, [sp, #72]	; 0x48
   13dac:	str	r1, [sp, #68]	; 0x44
   13db0:	b	13dc8 <__assert_fail@plt+0x2dcc>
   13db4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13db8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13dbc:	str	r0, [sp, #72]	; 0x48
   13dc0:	str	r1, [sp, #68]	; 0x44
   13dc4:	b	13dc8 <__assert_fail@plt+0x2dcc>
   13dc8:	ldr	r0, [sp, #68]	; 0x44
   13dcc:	ldr	r1, [sp, #72]	; 0x48
   13dd0:	str	r1, [fp, #-152]	; 0xffffff68
   13dd4:	str	r0, [fp, #-148]	; 0xffffff6c
   13dd8:	b	13f70 <__assert_fail@plt+0x2f74>
   13ddc:	ldr	r0, [fp, #16]
   13de0:	cmp	r0, #4
   13de4:	bne	13e28 <__assert_fail@plt+0x2e2c>
   13de8:	ldr	r0, [fp, #-176]	; 0xffffff50
   13dec:	ldr	r1, [fp, #-172]	; 0xffffff54
   13df0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13df4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13df8:	str	r0, [sp, #64]	; 0x40
   13dfc:	str	r1, [sp, #60]	; 0x3c
   13e00:	bl	1eb60 <__assert_fail@plt+0xdb64>
   13e04:	ldr	lr, [sp, #64]	; 0x40
   13e08:	subs	r2, lr, r2
   13e0c:	ldr	ip, [sp, #60]	; 0x3c
   13e10:	sbc	r3, ip, r3
   13e14:	str	r2, [fp, #-152]	; 0xffffff68
   13e18:	str	r3, [fp, #-148]	; 0xffffff6c
   13e1c:	str	r0, [sp, #56]	; 0x38
   13e20:	str	r1, [sp, #52]	; 0x34
   13e24:	b	13f6c <__assert_fail@plt+0x2f70>
   13e28:	ldr	r0, [fp, #16]
   13e2c:	cmp	r0, #5
   13e30:	bne	13eb8 <__assert_fail@plt+0x2ebc>
   13e34:	ldr	r0, [fp, #-176]	; 0xffffff50
   13e38:	ldr	r1, [fp, #-172]	; 0xffffff54
   13e3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e44:	bl	1eb60 <__assert_fail@plt+0xdb64>
   13e48:	str	r3, [fp, #-180]	; 0xffffff4c
   13e4c:	str	r2, [fp, #-184]	; 0xffffff48
   13e50:	ldr	r2, [fp, #-184]	; 0xffffff48
   13e54:	ldr	r3, [fp, #-180]	; 0xffffff4c
   13e58:	orr	r2, r2, r3
   13e5c:	cmp	r2, #0
   13e60:	str	r0, [sp, #48]	; 0x30
   13e64:	str	r1, [sp, #44]	; 0x2c
   13e68:	bne	13e84 <__assert_fail@plt+0x2e88>
   13e6c:	b	13e70 <__assert_fail@plt+0x2e74>
   13e70:	mov	r0, #0
   13e74:	mov	r1, r0
   13e78:	str	r1, [sp, #40]	; 0x28
   13e7c:	str	r0, [sp, #36]	; 0x24
   13e80:	b	13ea8 <__assert_fail@plt+0x2eac>
   13e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e8c:	ldr	r2, [fp, #-184]	; 0xffffff48
   13e90:	ldr	r3, [fp, #-180]	; 0xffffff4c
   13e94:	subs	r0, r0, r2
   13e98:	sbc	r1, r1, r3
   13e9c:	str	r0, [sp, #40]	; 0x28
   13ea0:	str	r1, [sp, #36]	; 0x24
   13ea4:	b	13ea8 <__assert_fail@plt+0x2eac>
   13ea8:	ldr	r0, [sp, #36]	; 0x24
   13eac:	ldr	r1, [sp, #40]	; 0x28
   13eb0:	str	r1, [fp, #-32]	; 0xffffffe0
   13eb4:	str	r0, [fp, #-28]	; 0xffffffe4
   13eb8:	ldr	r0, [fp, #-176]	; 0xffffff50
   13ebc:	ldr	r1, [fp, #-172]	; 0xffffff54
   13ec0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13ec4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ec8:	mov	ip, #0
   13ecc:	cmn	r1, #1
   13ed0:	mov	lr, ip
   13ed4:	movwgt	lr, #1
   13ed8:	adds	r0, r0, r2
   13edc:	adc	r1, r1, r3
   13ee0:	cmn	r1, #1
   13ee4:	mov	r2, ip
   13ee8:	movwgt	r2, #1
   13eec:	sub	r4, lr, r2
   13ef0:	cmp	lr, r2
   13ef4:	movwne	r4, #1
   13ef8:	cmn	r3, #1
   13efc:	movwgt	ip, #1
   13f00:	sub	r2, lr, ip
   13f04:	clz	r2, r2
   13f08:	lsr	r2, r2, #5
   13f0c:	and	r2, r2, r4
   13f10:	str	r0, [fp, #-152]	; 0xffffff68
   13f14:	str	r1, [fp, #-148]	; 0xffffff6c
   13f18:	tst	r2, #1
   13f1c:	beq	13f68 <__assert_fail@plt+0x2f6c>
   13f20:	movw	r0, #63000	; 0xf618
   13f24:	movt	r0, #1
   13f28:	bl	10f0c <gettext@plt>
   13f2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13f30:	movw	lr, #4
   13f34:	str	r0, [sp, #32]
   13f38:	mov	r0, lr
   13f3c:	bl	16488 <__assert_fail@plt+0x548c>
   13f40:	movw	r1, #0
   13f44:	str	r0, [sp, #28]
   13f48:	mov	r0, r1
   13f4c:	ldr	r2, [sp, #32]
   13f50:	ldr	r3, [sp, #28]
   13f54:	bl	10ea0 <error@plt>
   13f58:	movw	r0, #0
   13f5c:	and	r0, r0, #1
   13f60:	strb	r0, [fp, #-9]
   13f64:	b	14044 <__assert_fail@plt+0x3048>
   13f68:	b	13f6c <__assert_fail@plt+0x2f70>
   13f6c:	b	13f70 <__assert_fail@plt+0x2f74>
   13f70:	b	13f74 <__assert_fail@plt+0x2f78>
   13f74:	b	13f88 <__assert_fail@plt+0x2f8c>
   13f78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f80:	str	r1, [fp, #-148]	; 0xffffff6c
   13f84:	str	r0, [fp, #-152]	; 0xffffff68
   13f88:	ldr	r0, [fp, #-148]	; 0xffffff6c
   13f8c:	cmn	r0, #1
   13f90:	bgt	13fa4 <__assert_fail@plt+0x2fa8>
   13f94:	b	13f98 <__assert_fail@plt+0x2f9c>
   13f98:	mov	r0, #0
   13f9c:	str	r0, [fp, #-148]	; 0xffffff6c
   13fa0:	str	r0, [fp, #-152]	; 0xffffff68
   13fa4:	ldr	r0, [fp, #-16]
   13fa8:	ldr	r2, [fp, #-152]	; 0xffffff68
   13fac:	ldr	r3, [fp, #-148]	; 0xffffff6c
   13fb0:	bl	10e1c <ftruncate64@plt>
   13fb4:	cmp	r0, #0
   13fb8:	beq	14038 <__assert_fail@plt+0x303c>
   13fbc:	ldr	r0, [fp, #-152]	; 0xffffff68
   13fc0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   13fc4:	str	r1, [fp, #-188]	; 0xffffff44
   13fc8:	str	r0, [fp, #-192]	; 0xffffff40
   13fcc:	bl	10f3c <__errno_location@plt>
   13fd0:	ldr	r1, [r0]
   13fd4:	movw	r0, #63035	; 0xf63b
   13fd8:	movt	r0, #1
   13fdc:	str	r1, [sp, #24]
   13fe0:	bl	10f0c <gettext@plt>
   13fe4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13fe8:	mov	lr, #4
   13fec:	str	r0, [sp, #20]
   13ff0:	mov	r0, lr
   13ff4:	bl	16488 <__assert_fail@plt+0x548c>
   13ff8:	ldr	r1, [fp, #-192]	; 0xffffff40
   13ffc:	ldr	lr, [fp, #-188]	; 0xffffff44
   14000:	mov	r2, sp
   14004:	str	lr, [r2, #4]
   14008:	str	r1, [r2]
   1400c:	mov	r1, #0
   14010:	str	r0, [sp, #16]
   14014:	mov	r0, r1
   14018:	ldr	r1, [sp, #24]
   1401c:	ldr	r2, [sp, #20]
   14020:	ldr	r3, [sp, #16]
   14024:	bl	10ea0 <error@plt>
   14028:	movw	r0, #0
   1402c:	and	r0, r0, #1
   14030:	strb	r0, [fp, #-9]
   14034:	b	14044 <__assert_fail@plt+0x3048>
   14038:	movw	r0, #1
   1403c:	and	r0, r0, #1
   14040:	strb	r0, [fp, #-9]
   14044:	ldrb	r0, [fp, #-9]
   14048:	and	r0, r0, #1
   1404c:	sub	sp, fp, #8
   14050:	pop	{r4, sl, fp, pc}
   14054:	andhi	r0, r0, r1
   14058:	svcvc	0x00ffffff
   1405c:	sub	sp, sp, #4
   14060:	str	r0, [sp]
   14064:	ldr	r0, [sp]
   14068:	movw	r1, #344	; 0x158
   1406c:	movt	r1, #3
   14070:	str	r0, [r1]
   14074:	add	sp, sp, #4
   14078:	bx	lr
   1407c:	sub	sp, sp, #4
   14080:	and	r0, r0, #1
   14084:	strb	r0, [sp, #3]
   14088:	ldrb	r0, [sp, #3]
   1408c:	and	r0, r0, #1
   14090:	movw	r1, #348	; 0x15c
   14094:	movt	r1, #3
   14098:	strb	r0, [r1]
   1409c:	add	sp, sp, #4
   140a0:	bx	lr
   140a4:	push	{fp, lr}
   140a8:	mov	fp, sp
   140ac:	sub	sp, sp, #24
   140b0:	movw	r0, #324	; 0x144
   140b4:	movt	r0, #3
   140b8:	ldr	r0, [r0]
   140bc:	bl	1c900 <__assert_fail@plt+0xb904>
   140c0:	cmp	r0, #0
   140c4:	beq	14194 <__assert_fail@plt+0x3198>
   140c8:	movw	r0, #348	; 0x15c
   140cc:	movt	r0, #3
   140d0:	ldrb	r0, [r0]
   140d4:	tst	r0, #1
   140d8:	beq	140ec <__assert_fail@plt+0x30f0>
   140dc:	bl	10f3c <__errno_location@plt>
   140e0:	ldr	r0, [r0]
   140e4:	cmp	r0, #32
   140e8:	beq	14194 <__assert_fail@plt+0x3198>
   140ec:	movw	r0, #63255	; 0xf717
   140f0:	movt	r0, #1
   140f4:	bl	10f0c <gettext@plt>
   140f8:	str	r0, [fp, #-4]
   140fc:	movw	r0, #344	; 0x158
   14100:	movt	r0, #3
   14104:	ldr	r0, [r0]
   14108:	movw	lr, #0
   1410c:	cmp	r0, lr
   14110:	beq	14168 <__assert_fail@plt+0x316c>
   14114:	bl	10f3c <__errno_location@plt>
   14118:	ldr	r1, [r0]
   1411c:	movw	r0, #344	; 0x158
   14120:	movt	r0, #3
   14124:	ldr	r0, [r0]
   14128:	str	r1, [fp, #-8]
   1412c:	bl	16584 <__assert_fail@plt+0x5588>
   14130:	ldr	r1, [fp, #-4]
   14134:	movw	lr, #0
   14138:	str	r0, [sp, #12]
   1413c:	mov	r0, lr
   14140:	ldr	lr, [fp, #-8]
   14144:	str	r1, [sp, #8]
   14148:	mov	r1, lr
   1414c:	movw	r2, #63267	; 0xf723
   14150:	movt	r2, #1
   14154:	ldr	r3, [sp, #12]
   14158:	ldr	ip, [sp, #8]
   1415c:	str	ip, [sp]
   14160:	bl	10ea0 <error@plt>
   14164:	b	14184 <__assert_fail@plt+0x3188>
   14168:	bl	10f3c <__errno_location@plt>
   1416c:	ldr	r1, [r0]
   14170:	ldr	r3, [fp, #-4]
   14174:	movw	r0, #0
   14178:	movw	r2, #63271	; 0xf727
   1417c:	movt	r2, #1
   14180:	bl	10ea0 <error@plt>
   14184:	movw	r0, #232	; 0xe8
   14188:	movt	r0, #3
   1418c:	ldr	r0, [r0]
   14190:	bl	10df8 <_exit@plt>
   14194:	movw	r0, #320	; 0x140
   14198:	movt	r0, #3
   1419c:	ldr	r0, [r0]
   141a0:	bl	1c900 <__assert_fail@plt+0xb904>
   141a4:	cmp	r0, #0
   141a8:	beq	141bc <__assert_fail@plt+0x31c0>
   141ac:	movw	r0, #232	; 0xe8
   141b0:	movt	r0, #3
   141b4:	ldr	r0, [r0]
   141b8:	bl	10df8 <_exit@plt>
   141bc:	mov	sp, fp
   141c0:	pop	{fp, pc}
   141c4:	push	{fp, lr}
   141c8:	mov	fp, sp
   141cc:	sub	sp, sp, #24
   141d0:	str	r0, [fp, #-4]
   141d4:	ldr	r0, [fp, #-4]
   141d8:	movw	r1, #0
   141dc:	cmp	r0, r1
   141e0:	bne	14204 <__assert_fail@plt+0x3208>
   141e4:	movw	r0, #320	; 0x140
   141e8:	movt	r0, #3
   141ec:	ldr	r1, [r0]
   141f0:	movw	r0, #63274	; 0xf72a
   141f4:	movt	r0, #1
   141f8:	bl	10fcc <fputs@plt>
   141fc:	str	r0, [sp, #8]
   14200:	bl	10fe4 <abort@plt>
   14204:	ldr	r0, [fp, #-4]
   14208:	movw	r1, #47	; 0x2f
   1420c:	bl	10f9c <strrchr@plt>
   14210:	str	r0, [fp, #-8]
   14214:	ldr	r0, [fp, #-8]
   14218:	movw	r1, #0
   1421c:	cmp	r0, r1
   14220:	beq	14234 <__assert_fail@plt+0x3238>
   14224:	ldr	r0, [fp, #-8]
   14228:	add	r0, r0, #1
   1422c:	str	r0, [sp, #4]
   14230:	b	1423c <__assert_fail@plt+0x3240>
   14234:	ldr	r0, [fp, #-4]
   14238:	str	r0, [sp, #4]
   1423c:	ldr	r0, [sp, #4]
   14240:	str	r0, [sp, #12]
   14244:	ldr	r0, [sp, #12]
   14248:	ldr	r1, [fp, #-4]
   1424c:	sub	r0, r0, r1
   14250:	cmp	r0, #7
   14254:	blt	142c0 <__assert_fail@plt+0x32c4>
   14258:	ldr	r0, [sp, #12]
   1425c:	mvn	r1, #6
   14260:	add	r0, r0, r1
   14264:	movw	r1, #63330	; 0xf762
   14268:	movt	r1, #1
   1426c:	movw	r2, #7
   14270:	bl	10fd8 <strncmp@plt>
   14274:	cmp	r0, #0
   14278:	bne	142c0 <__assert_fail@plt+0x32c4>
   1427c:	ldr	r0, [sp, #12]
   14280:	str	r0, [fp, #-4]
   14284:	ldr	r0, [sp, #12]
   14288:	movw	r1, #63338	; 0xf76a
   1428c:	movt	r1, #1
   14290:	movw	r2, #3
   14294:	bl	10fd8 <strncmp@plt>
   14298:	cmp	r0, #0
   1429c:	bne	142bc <__assert_fail@plt+0x32c0>
   142a0:	ldr	r0, [sp, #12]
   142a4:	add	r0, r0, #3
   142a8:	str	r0, [fp, #-4]
   142ac:	ldr	r0, [fp, #-4]
   142b0:	movw	r1, #304	; 0x130
   142b4:	movt	r1, #3
   142b8:	str	r0, [r1]
   142bc:	b	142c0 <__assert_fail@plt+0x32c4>
   142c0:	ldr	r0, [fp, #-4]
   142c4:	movw	r1, #352	; 0x160
   142c8:	movt	r1, #3
   142cc:	str	r0, [r1]
   142d0:	ldr	r0, [fp, #-4]
   142d4:	movw	r1, #308	; 0x134
   142d8:	movt	r1, #3
   142dc:	str	r0, [r1]
   142e0:	mov	sp, fp
   142e4:	pop	{fp, pc}
   142e8:	push	{fp, lr}
   142ec:	mov	fp, sp
   142f0:	sub	sp, sp, #24
   142f4:	str	r0, [fp, #-4]
   142f8:	bl	10f3c <__errno_location@plt>
   142fc:	ldr	r0, [r0]
   14300:	str	r0, [fp, #-8]
   14304:	ldr	r0, [fp, #-4]
   14308:	movw	lr, #0
   1430c:	cmp	r0, lr
   14310:	beq	14320 <__assert_fail@plt+0x3324>
   14314:	ldr	r0, [fp, #-4]
   14318:	str	r0, [sp, #8]
   1431c:	b	14330 <__assert_fail@plt+0x3334>
   14320:	movw	r0, #356	; 0x164
   14324:	movt	r0, #3
   14328:	str	r0, [sp, #8]
   1432c:	b	14330 <__assert_fail@plt+0x3334>
   14330:	ldr	r0, [sp, #8]
   14334:	movw	r1, #48	; 0x30
   14338:	bl	19f48 <__assert_fail@plt+0x8f4c>
   1433c:	str	r0, [sp, #12]
   14340:	ldr	r0, [fp, #-8]
   14344:	str	r0, [sp, #4]
   14348:	bl	10f3c <__errno_location@plt>
   1434c:	ldr	r1, [sp, #4]
   14350:	str	r1, [r0]
   14354:	ldr	r0, [sp, #12]
   14358:	mov	sp, fp
   1435c:	pop	{fp, pc}
   14360:	sub	sp, sp, #8
   14364:	str	r0, [sp, #4]
   14368:	ldr	r0, [sp, #4]
   1436c:	movw	r1, #0
   14370:	cmp	r0, r1
   14374:	beq	14384 <__assert_fail@plt+0x3388>
   14378:	ldr	r0, [sp, #4]
   1437c:	str	r0, [sp]
   14380:	b	14394 <__assert_fail@plt+0x3398>
   14384:	movw	r0, #356	; 0x164
   14388:	movt	r0, #3
   1438c:	str	r0, [sp]
   14390:	b	14394 <__assert_fail@plt+0x3398>
   14394:	ldr	r0, [sp]
   14398:	ldr	r0, [r0]
   1439c:	add	sp, sp, #8
   143a0:	bx	lr
   143a4:	sub	sp, sp, #16
   143a8:	str	r0, [sp, #12]
   143ac:	str	r1, [sp, #8]
   143b0:	ldr	r0, [sp, #8]
   143b4:	ldr	r1, [sp, #12]
   143b8:	movw	r2, #0
   143bc:	cmp	r1, r2
   143c0:	str	r0, [sp, #4]
   143c4:	beq	143d4 <__assert_fail@plt+0x33d8>
   143c8:	ldr	r0, [sp, #12]
   143cc:	str	r0, [sp]
   143d0:	b	143e4 <__assert_fail@plt+0x33e8>
   143d4:	movw	r0, #356	; 0x164
   143d8:	movt	r0, #3
   143dc:	str	r0, [sp]
   143e0:	b	143e4 <__assert_fail@plt+0x33e8>
   143e4:	ldr	r0, [sp]
   143e8:	ldr	r1, [sp, #4]
   143ec:	str	r1, [r0]
   143f0:	add	sp, sp, #16
   143f4:	bx	lr
   143f8:	sub	sp, sp, #32
   143fc:	str	r0, [sp, #28]
   14400:	strb	r1, [sp, #27]
   14404:	str	r2, [sp, #20]
   14408:	ldrb	r0, [sp, #27]
   1440c:	strb	r0, [sp, #19]
   14410:	ldr	r0, [sp, #28]
   14414:	movw	r1, #0
   14418:	cmp	r0, r1
   1441c:	beq	1442c <__assert_fail@plt+0x3430>
   14420:	ldr	r0, [sp, #28]
   14424:	str	r0, [sp]
   14428:	b	1443c <__assert_fail@plt+0x3440>
   1442c:	movw	r0, #356	; 0x164
   14430:	movt	r0, #3
   14434:	str	r0, [sp]
   14438:	b	1443c <__assert_fail@plt+0x3440>
   1443c:	ldr	r0, [sp]
   14440:	add	r0, r0, #8
   14444:	ldrb	r1, [sp, #19]
   14448:	lsr	r1, r1, #5
   1444c:	add	r0, r0, r1, lsl #2
   14450:	str	r0, [sp, #12]
   14454:	ldrb	r0, [sp, #19]
   14458:	and	r0, r0, #31
   1445c:	str	r0, [sp, #8]
   14460:	ldr	r0, [sp, #12]
   14464:	ldr	r0, [r0]
   14468:	ldr	r1, [sp, #8]
   1446c:	lsr	r0, r0, r1
   14470:	and	r0, r0, #1
   14474:	str	r0, [sp, #4]
   14478:	ldr	r0, [sp, #20]
   1447c:	and	r0, r0, #1
   14480:	ldr	r1, [sp, #4]
   14484:	eor	r0, r0, r1
   14488:	ldr	r1, [sp, #8]
   1448c:	lsl	r0, r0, r1
   14490:	ldr	r1, [sp, #12]
   14494:	ldr	r2, [r1]
   14498:	eor	r0, r2, r0
   1449c:	str	r0, [r1]
   144a0:	ldr	r0, [sp, #4]
   144a4:	add	sp, sp, #32
   144a8:	bx	lr
   144ac:	sub	sp, sp, #12
   144b0:	str	r0, [sp, #8]
   144b4:	str	r1, [sp, #4]
   144b8:	ldr	r0, [sp, #8]
   144bc:	movw	r1, #0
   144c0:	cmp	r0, r1
   144c4:	bne	144d4 <__assert_fail@plt+0x34d8>
   144c8:	movw	r0, #356	; 0x164
   144cc:	movt	r0, #3
   144d0:	str	r0, [sp, #8]
   144d4:	ldr	r0, [sp, #8]
   144d8:	ldr	r0, [r0, #4]
   144dc:	str	r0, [sp]
   144e0:	ldr	r0, [sp, #4]
   144e4:	ldr	r1, [sp, #8]
   144e8:	str	r0, [r1, #4]
   144ec:	ldr	r0, [sp]
   144f0:	add	sp, sp, #12
   144f4:	bx	lr
   144f8:	push	{fp, lr}
   144fc:	mov	fp, sp
   14500:	sub	sp, sp, #16
   14504:	str	r0, [fp, #-4]
   14508:	str	r1, [sp, #8]
   1450c:	str	r2, [sp, #4]
   14510:	ldr	r0, [fp, #-4]
   14514:	movw	r1, #0
   14518:	cmp	r0, r1
   1451c:	bne	1452c <__assert_fail@plt+0x3530>
   14520:	movw	r0, #356	; 0x164
   14524:	movt	r0, #3
   14528:	str	r0, [fp, #-4]
   1452c:	ldr	r0, [fp, #-4]
   14530:	movw	r1, #10
   14534:	str	r1, [r0]
   14538:	ldr	r0, [sp, #8]
   1453c:	movw	r1, #0
   14540:	cmp	r0, r1
   14544:	beq	14558 <__assert_fail@plt+0x355c>
   14548:	ldr	r0, [sp, #4]
   1454c:	movw	r1, #0
   14550:	cmp	r0, r1
   14554:	bne	1455c <__assert_fail@plt+0x3560>
   14558:	bl	10fe4 <abort@plt>
   1455c:	ldr	r0, [sp, #8]
   14560:	ldr	r1, [fp, #-4]
   14564:	str	r0, [r1, #40]	; 0x28
   14568:	ldr	r0, [sp, #4]
   1456c:	ldr	r1, [fp, #-4]
   14570:	str	r0, [r1, #44]	; 0x2c
   14574:	mov	sp, fp
   14578:	pop	{fp, pc}
   1457c:	push	{r4, r5, r6, sl, fp, lr}
   14580:	add	fp, sp, #16
   14584:	sub	sp, sp, #64	; 0x40
   14588:	ldr	ip, [fp, #8]
   1458c:	str	r0, [fp, #-20]	; 0xffffffec
   14590:	str	r1, [fp, #-24]	; 0xffffffe8
   14594:	str	r2, [fp, #-28]	; 0xffffffe4
   14598:	str	r3, [fp, #-32]	; 0xffffffe0
   1459c:	ldr	r0, [fp, #8]
   145a0:	movw	r1, #0
   145a4:	cmp	r0, r1
   145a8:	str	ip, [sp, #32]
   145ac:	beq	145bc <__assert_fail@plt+0x35c0>
   145b0:	ldr	r0, [fp, #8]
   145b4:	str	r0, [sp, #28]
   145b8:	b	145cc <__assert_fail@plt+0x35d0>
   145bc:	movw	r0, #356	; 0x164
   145c0:	movt	r0, #3
   145c4:	str	r0, [sp, #28]
   145c8:	b	145cc <__assert_fail@plt+0x35d0>
   145cc:	ldr	r0, [sp, #28]
   145d0:	str	r0, [fp, #-36]	; 0xffffffdc
   145d4:	bl	10f3c <__errno_location@plt>
   145d8:	ldr	r0, [r0]
   145dc:	str	r0, [sp, #40]	; 0x28
   145e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   145e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   145e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   145ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   145f0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   145f4:	ldr	lr, [lr]
   145f8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   145fc:	ldr	ip, [ip, #4]
   14600:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14604:	add	r4, r4, #8
   14608:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1460c:	ldr	r5, [r5, #40]	; 0x28
   14610:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14614:	ldr	r6, [r6, #44]	; 0x2c
   14618:	str	lr, [sp]
   1461c:	str	ip, [sp, #4]
   14620:	str	r4, [sp, #8]
   14624:	str	r5, [sp, #12]
   14628:	str	r6, [sp, #16]
   1462c:	bl	14654 <__assert_fail@plt+0x3658>
   14630:	str	r0, [sp, #36]	; 0x24
   14634:	ldr	r0, [sp, #40]	; 0x28
   14638:	str	r0, [sp, #24]
   1463c:	bl	10f3c <__errno_location@plt>
   14640:	ldr	r1, [sp, #24]
   14644:	str	r1, [r0]
   14648:	ldr	r0, [sp, #36]	; 0x24
   1464c:	sub	sp, fp, #16
   14650:	pop	{r4, r5, r6, sl, fp, pc}
   14654:	push	{r4, r5, r6, sl, fp, lr}
   14658:	add	fp, sp, #16
   1465c:	sub	sp, sp, #168	; 0xa8
   14660:	ldr	ip, [fp, #24]
   14664:	ldr	lr, [fp, #20]
   14668:	ldr	r4, [fp, #16]
   1466c:	ldr	r5, [fp, #12]
   14670:	ldr	r6, [fp, #8]
   14674:	str	r0, [fp, #-24]	; 0xffffffe8
   14678:	str	r1, [fp, #-28]	; 0xffffffe4
   1467c:	str	r2, [fp, #-32]	; 0xffffffe0
   14680:	str	r3, [fp, #-36]	; 0xffffffdc
   14684:	movw	r0, #0
   14688:	str	r0, [fp, #-44]	; 0xffffffd4
   1468c:	str	r0, [fp, #-48]	; 0xffffffd0
   14690:	str	r0, [fp, #-52]	; 0xffffffcc
   14694:	str	r0, [fp, #-56]	; 0xffffffc8
   14698:	movw	r0, #0
   1469c:	strb	r0, [fp, #-57]	; 0xffffffc7
   146a0:	str	r6, [sp, #80]	; 0x50
   146a4:	str	lr, [sp, #76]	; 0x4c
   146a8:	str	r4, [sp, #72]	; 0x48
   146ac:	str	r5, [sp, #68]	; 0x44
   146b0:	str	ip, [sp, #64]	; 0x40
   146b4:	bl	10e70 <__ctype_get_mb_cur_max@plt>
   146b8:	cmp	r0, #1
   146bc:	movw	r0, #0
   146c0:	moveq	r0, #1
   146c4:	and	r0, r0, #1
   146c8:	strb	r0, [fp, #-58]	; 0xffffffc6
   146cc:	ldr	r0, [fp, #12]
   146d0:	and	r0, r0, #2
   146d4:	cmp	r0, #0
   146d8:	movw	r0, #0
   146dc:	movne	r0, #1
   146e0:	and	r0, r0, #1
   146e4:	strb	r0, [fp, #-59]	; 0xffffffc5
   146e8:	movw	r0, #0
   146ec:	strb	r0, [fp, #-60]	; 0xffffffc4
   146f0:	strb	r0, [fp, #-61]	; 0xffffffc3
   146f4:	movw	r0, #1
   146f8:	strb	r0, [fp, #-62]	; 0xffffffc2
   146fc:	ldr	r0, [fp, #8]
   14700:	cmp	r0, #10
   14704:	str	r0, [sp, #60]	; 0x3c
   14708:	bhi	14930 <__assert_fail@plt+0x3934>
   1470c:	add	r0, pc, #8
   14710:	ldr	r1, [sp, #60]	; 0x3c
   14714:	ldr	r0, [r0, r1, lsl #2]
   14718:	mov	pc, r0
   1471c:	andeq	r4, r1, r4, lsr #18
   14720:	andeq	r4, r1, r0, lsr #17
   14724:	andeq	r4, r1, r0, asr #17
   14728:	muleq	r1, r8, r8
   1472c:	andeq	r4, r1, r8, lsr #17
   14730:	andeq	r4, r1, r8, asr r7
   14734:	andeq	r4, r1, r8, asr #14
   14738:			; <UNDEFINED> instruction: 0x000147bc
   1473c:	ldrdeq	r4, [r1], -r0
   14740:	ldrdeq	r4, [r1], -r0
   14744:	ldrdeq	r4, [r1], -r0
   14748:	movw	r0, #5
   1474c:	str	r0, [fp, #8]
   14750:	movw	r0, #1
   14754:	strb	r0, [fp, #-59]	; 0xffffffc5
   14758:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1475c:	tst	r0, #1
   14760:	bne	1479c <__assert_fail@plt+0x37a0>
   14764:	b	14768 <__assert_fail@plt+0x376c>
   14768:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1476c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14770:	cmp	r0, r1
   14774:	bcs	1478c <__assert_fail@plt+0x3790>
   14778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1477c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14780:	add	r0, r0, r1
   14784:	movw	r1, #34	; 0x22
   14788:	strb	r1, [r0]
   1478c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14790:	add	r0, r0, #1
   14794:	str	r0, [fp, #-44]	; 0xffffffd4
   14798:	b	1479c <__assert_fail@plt+0x37a0>
   1479c:	movw	r0, #1
   147a0:	strb	r0, [fp, #-57]	; 0xffffffc7
   147a4:	movw	r0, #63418	; 0xf7ba
   147a8:	movt	r0, #1
   147ac:	str	r0, [fp, #-52]	; 0xffffffcc
   147b0:	movw	r0, #1
   147b4:	str	r0, [fp, #-56]	; 0xffffffc8
   147b8:	b	14934 <__assert_fail@plt+0x3938>
   147bc:	movw	r0, #1
   147c0:	strb	r0, [fp, #-57]	; 0xffffffc7
   147c4:	movw	r0, #0
   147c8:	strb	r0, [fp, #-59]	; 0xffffffc5
   147cc:	b	14934 <__assert_fail@plt+0x3938>
   147d0:	ldr	r0, [fp, #8]
   147d4:	cmp	r0, #10
   147d8:	beq	14804 <__assert_fail@plt+0x3808>
   147dc:	ldr	r1, [fp, #8]
   147e0:	movw	r0, #63420	; 0xf7bc
   147e4:	movt	r0, #1
   147e8:	bl	16844 <__assert_fail@plt+0x5848>
   147ec:	str	r0, [fp, #20]
   147f0:	ldr	r1, [fp, #8]
   147f4:	movw	r0, #63422	; 0xf7be
   147f8:	movt	r0, #1
   147fc:	bl	16844 <__assert_fail@plt+0x5848>
   14800:	str	r0, [fp, #24]
   14804:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14808:	tst	r0, #1
   1480c:	bne	14878 <__assert_fail@plt+0x387c>
   14810:	ldr	r0, [fp, #20]
   14814:	str	r0, [fp, #-52]	; 0xffffffcc
   14818:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1481c:	ldrsb	r0, [r0]
   14820:	cmp	r0, #0
   14824:	beq	14874 <__assert_fail@plt+0x3878>
   14828:	b	1482c <__assert_fail@plt+0x3830>
   1482c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14830:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14834:	cmp	r0, r1
   14838:	bcs	14854 <__assert_fail@plt+0x3858>
   1483c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14840:	ldrb	r0, [r0]
   14844:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14848:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1484c:	add	r1, r1, r2
   14850:	strb	r0, [r1]
   14854:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14858:	add	r0, r0, #1
   1485c:	str	r0, [fp, #-44]	; 0xffffffd4
   14860:	b	14864 <__assert_fail@plt+0x3868>
   14864:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14868:	add	r0, r0, #1
   1486c:	str	r0, [fp, #-52]	; 0xffffffcc
   14870:	b	14818 <__assert_fail@plt+0x381c>
   14874:	b	14878 <__assert_fail@plt+0x387c>
   14878:	movw	r0, #1
   1487c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14880:	ldr	r0, [fp, #24]
   14884:	str	r0, [fp, #-52]	; 0xffffffcc
   14888:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1488c:	bl	10f18 <strlen@plt>
   14890:	str	r0, [fp, #-56]	; 0xffffffc8
   14894:	b	14934 <__assert_fail@plt+0x3938>
   14898:	movw	r0, #1
   1489c:	strb	r0, [fp, #-57]	; 0xffffffc7
   148a0:	movw	r0, #1
   148a4:	strb	r0, [fp, #-59]	; 0xffffffc5
   148a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   148ac:	tst	r0, #1
   148b0:	bne	148bc <__assert_fail@plt+0x38c0>
   148b4:	movw	r0, #1
   148b8:	strb	r0, [fp, #-57]	; 0xffffffc7
   148bc:	b	148c0 <__assert_fail@plt+0x38c4>
   148c0:	movw	r0, #2
   148c4:	str	r0, [fp, #8]
   148c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   148cc:	tst	r0, #1
   148d0:	bne	1490c <__assert_fail@plt+0x3910>
   148d4:	b	148d8 <__assert_fail@plt+0x38dc>
   148d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   148e0:	cmp	r0, r1
   148e4:	bcs	148fc <__assert_fail@plt+0x3900>
   148e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   148ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   148f0:	add	r0, r0, r1
   148f4:	movw	r1, #39	; 0x27
   148f8:	strb	r1, [r0]
   148fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14900:	add	r0, r0, #1
   14904:	str	r0, [fp, #-44]	; 0xffffffd4
   14908:	b	1490c <__assert_fail@plt+0x3910>
   1490c:	movw	r0, #63422	; 0xf7be
   14910:	movt	r0, #1
   14914:	str	r0, [fp, #-52]	; 0xffffffcc
   14918:	movw	r0, #1
   1491c:	str	r0, [fp, #-56]	; 0xffffffc8
   14920:	b	14934 <__assert_fail@plt+0x3938>
   14924:	movw	r0, #0
   14928:	strb	r0, [fp, #-59]	; 0xffffffc5
   1492c:	b	14934 <__assert_fail@plt+0x3938>
   14930:	bl	10fe4 <abort@plt>
   14934:	movw	r0, #0
   14938:	str	r0, [fp, #-40]	; 0xffffffd8
   1493c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14940:	cmn	r0, #1
   14944:	bne	14970 <__assert_fail@plt+0x3974>
   14948:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1494c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14950:	add	r0, r0, r1
   14954:	ldrb	r0, [r0]
   14958:	cmp	r0, #0
   1495c:	movw	r0, #0
   14960:	moveq	r0, #1
   14964:	and	r0, r0, #1
   14968:	str	r0, [sp, #56]	; 0x38
   1496c:	b	1498c <__assert_fail@plt+0x3990>
   14970:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14974:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14978:	cmp	r0, r1
   1497c:	movw	r0, #0
   14980:	moveq	r0, #1
   14984:	and	r0, r0, #1
   14988:	str	r0, [sp, #56]	; 0x38
   1498c:	ldr	r0, [sp, #56]	; 0x38
   14990:	cmp	r0, #0
   14994:	movw	r0, #0
   14998:	movne	r0, #1
   1499c:	mvn	r1, #0
   149a0:	eor	r0, r0, r1
   149a4:	tst	r0, #1
   149a8:	beq	15b98 <__assert_fail@plt+0x4b9c>
   149ac:	movw	r0, #0
   149b0:	strb	r0, [fp, #-65]	; 0xffffffbf
   149b4:	strb	r0, [fp, #-66]	; 0xffffffbe
   149b8:	strb	r0, [fp, #-67]	; 0xffffffbd
   149bc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   149c0:	tst	r0, #1
   149c4:	beq	14a70 <__assert_fail@plt+0x3a74>
   149c8:	ldr	r0, [fp, #8]
   149cc:	cmp	r0, #2
   149d0:	beq	14a70 <__assert_fail@plt+0x3a74>
   149d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   149d8:	cmp	r0, #0
   149dc:	beq	14a70 <__assert_fail@plt+0x3a74>
   149e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   149e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   149e8:	add	r0, r0, r1
   149ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   149f0:	cmn	r1, #1
   149f4:	str	r0, [sp, #52]	; 0x34
   149f8:	bne	14a20 <__assert_fail@plt+0x3a24>
   149fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14a00:	movw	r1, #1
   14a04:	cmp	r1, r0
   14a08:	bcs	14a20 <__assert_fail@plt+0x3a24>
   14a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a10:	bl	10f18 <strlen@plt>
   14a14:	str	r0, [fp, #-36]	; 0xffffffdc
   14a18:	str	r0, [sp, #48]	; 0x30
   14a1c:	b	14a28 <__assert_fail@plt+0x3a2c>
   14a20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14a24:	str	r0, [sp, #48]	; 0x30
   14a28:	ldr	r0, [sp, #48]	; 0x30
   14a2c:	ldr	r1, [sp, #52]	; 0x34
   14a30:	cmp	r1, r0
   14a34:	bhi	14a70 <__assert_fail@plt+0x3a74>
   14a38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14a40:	add	r0, r0, r1
   14a44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14a48:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14a4c:	bl	10e28 <memcmp@plt>
   14a50:	cmp	r0, #0
   14a54:	bne	14a70 <__assert_fail@plt+0x3a74>
   14a58:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14a5c:	tst	r0, #1
   14a60:	beq	14a68 <__assert_fail@plt+0x3a6c>
   14a64:	b	15d18 <__assert_fail@plt+0x4d1c>
   14a68:	movw	r0, #1
   14a6c:	strb	r0, [fp, #-65]	; 0xffffffbf
   14a70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14a78:	ldrb	r0, [r0, r1]
   14a7c:	strb	r0, [fp, #-63]	; 0xffffffc1
   14a80:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14a84:	mov	r1, r0
   14a88:	cmp	r0, #126	; 0x7e
   14a8c:	str	r1, [sp, #44]	; 0x2c
   14a90:	bhi	15300 <__assert_fail@plt+0x4304>
   14a94:	add	r0, pc, #8
   14a98:	ldr	r1, [sp, #44]	; 0x2c
   14a9c:	ldr	r0, [r0, r1, lsl #2]
   14aa0:	mov	pc, r0
   14aa4:	andeq	r4, r1, r0, lsr #25
   14aa8:	andeq	r5, r1, r0, lsl #6
   14aac:	andeq	r5, r1, r0, lsl #6
   14ab0:	andeq	r5, r1, r0, lsl #6
   14ab4:	andeq	r5, r1, r0, lsl #6
   14ab8:	andeq	r5, r1, r0, lsl #6
   14abc:	andeq	r5, r1, r0, lsl #6
   14ac0:	andeq	r5, r1, r8, lsr #1
   14ac4:	strheq	r5, [r1], -r4
   14ac8:	andeq	r5, r1, r4, ror #1
   14acc:	andeq	r5, r1, ip, asr #1
   14ad0:	strdeq	r5, [r1], -r0
   14ad4:	andeq	r5, r1, r0, asr #1
   14ad8:	ldrdeq	r5, [r1], -r8
   14adc:	andeq	r5, r1, r0, lsl #6
   14ae0:	andeq	r5, r1, r0, lsl #6
   14ae4:	andeq	r5, r1, r0, lsl #6
   14ae8:	andeq	r5, r1, r0, lsl #6
   14aec:	andeq	r5, r1, r0, lsl #6
   14af0:	andeq	r5, r1, r0, lsl #6
   14af4:	andeq	r5, r1, r0, lsl #6
   14af8:	andeq	r5, r1, r0, lsl #6
   14afc:	andeq	r5, r1, r0, lsl #6
   14b00:	andeq	r5, r1, r0, lsl #6
   14b04:	andeq	r5, r1, r0, lsl #6
   14b08:	andeq	r5, r1, r0, lsl #6
   14b0c:	andeq	r5, r1, r0, lsl #6
   14b10:	andeq	r5, r1, r0, lsl #6
   14b14:	andeq	r5, r1, r0, lsl #6
   14b18:	andeq	r5, r1, r0, lsl #6
   14b1c:	andeq	r5, r1, r0, lsl #6
   14b20:	andeq	r5, r1, r0, lsl #6
   14b24:	ldrdeq	r5, [r1], -r4
   14b28:	ldrdeq	r5, [r1], -ip
   14b2c:	ldrdeq	r5, [r1], -ip
   14b30:	andeq	r5, r1, r0, asr #3
   14b34:	ldrdeq	r5, [r1], -ip
   14b38:	strdeq	r5, [r1], -r4
   14b3c:	ldrdeq	r5, [r1], -ip
   14b40:	strdeq	r5, [r1], -ip
   14b44:	ldrdeq	r5, [r1], -ip
   14b48:	ldrdeq	r5, [r1], -ip
   14b4c:	ldrdeq	r5, [r1], -ip
   14b50:	strdeq	r5, [r1], -r4
   14b54:	strdeq	r5, [r1], -r4
   14b58:	strdeq	r5, [r1], -r4
   14b5c:	strdeq	r5, [r1], -r4
   14b60:	strdeq	r5, [r1], -r4
   14b64:	strdeq	r5, [r1], -r4
   14b68:	strdeq	r5, [r1], -r4
   14b6c:	strdeq	r5, [r1], -r4
   14b70:	strdeq	r5, [r1], -r4
   14b74:	strdeq	r5, [r1], -r4
   14b78:	strdeq	r5, [r1], -r4
   14b7c:	strdeq	r5, [r1], -r4
   14b80:	strdeq	r5, [r1], -r4
   14b84:	strdeq	r5, [r1], -r4
   14b88:	strdeq	r5, [r1], -r4
   14b8c:	strdeq	r5, [r1], -r4
   14b90:	ldrdeq	r5, [r1], -ip
   14b94:	ldrdeq	r5, [r1], -ip
   14b98:	ldrdeq	r5, [r1], -ip
   14b9c:	ldrdeq	r5, [r1], -ip
   14ba0:	andeq	r4, r1, ip, lsr #29
   14ba4:	andeq	r5, r1, r0, lsl #6
   14ba8:	strdeq	r5, [r1], -r4
   14bac:	strdeq	r5, [r1], -r4
   14bb0:	strdeq	r5, [r1], -r4
   14bb4:	strdeq	r5, [r1], -r4
   14bb8:	strdeq	r5, [r1], -r4
   14bbc:	strdeq	r5, [r1], -r4
   14bc0:	strdeq	r5, [r1], -r4
   14bc4:	strdeq	r5, [r1], -r4
   14bc8:	strdeq	r5, [r1], -r4
   14bcc:	strdeq	r5, [r1], -r4
   14bd0:	strdeq	r5, [r1], -r4
   14bd4:	strdeq	r5, [r1], -r4
   14bd8:	strdeq	r5, [r1], -r4
   14bdc:	strdeq	r5, [r1], -r4
   14be0:	strdeq	r5, [r1], -r4
   14be4:	strdeq	r5, [r1], -r4
   14be8:	strdeq	r5, [r1], -r4
   14bec:	strdeq	r5, [r1], -r4
   14bf0:	strdeq	r5, [r1], -r4
   14bf4:	strdeq	r5, [r1], -r4
   14bf8:	strdeq	r5, [r1], -r4
   14bfc:	strdeq	r5, [r1], -r4
   14c00:	strdeq	r5, [r1], -r4
   14c04:	strdeq	r5, [r1], -r4
   14c08:	strdeq	r5, [r1], -r4
   14c0c:	strdeq	r5, [r1], -r4
   14c10:	ldrdeq	r5, [r1], -ip
   14c14:	strdeq	r5, [r1], -ip
   14c18:	strdeq	r5, [r1], -r4
   14c1c:	ldrdeq	r5, [r1], -ip
   14c20:	strdeq	r5, [r1], -r4
   14c24:	ldrdeq	r5, [r1], -ip
   14c28:	strdeq	r5, [r1], -r4
   14c2c:	strdeq	r5, [r1], -r4
   14c30:	strdeq	r5, [r1], -r4
   14c34:	strdeq	r5, [r1], -r4
   14c38:	strdeq	r5, [r1], -r4
   14c3c:	strdeq	r5, [r1], -r4
   14c40:	strdeq	r5, [r1], -r4
   14c44:	strdeq	r5, [r1], -r4
   14c48:	strdeq	r5, [r1], -r4
   14c4c:	strdeq	r5, [r1], -r4
   14c50:	strdeq	r5, [r1], -r4
   14c54:	strdeq	r5, [r1], -r4
   14c58:	strdeq	r5, [r1], -r4
   14c5c:	strdeq	r5, [r1], -r4
   14c60:	strdeq	r5, [r1], -r4
   14c64:	strdeq	r5, [r1], -r4
   14c68:	strdeq	r5, [r1], -r4
   14c6c:	strdeq	r5, [r1], -r4
   14c70:	strdeq	r5, [r1], -r4
   14c74:	strdeq	r5, [r1], -r4
   14c78:	strdeq	r5, [r1], -r4
   14c7c:	strdeq	r5, [r1], -r4
   14c80:	strdeq	r5, [r1], -r4
   14c84:	strdeq	r5, [r1], -r4
   14c88:	strdeq	r5, [r1], -r4
   14c8c:	strdeq	r5, [r1], -r4
   14c90:	andeq	r5, r1, ip, lsl #3
   14c94:	ldrdeq	r5, [r1], -ip
   14c98:	andeq	r5, r1, ip, lsl #3
   14c9c:	andeq	r5, r1, r0, asr #3
   14ca0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14ca4:	tst	r0, #1
   14ca8:	beq	14e90 <__assert_fail@plt+0x3e94>
   14cac:	b	14cb0 <__assert_fail@plt+0x3cb4>
   14cb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14cb4:	tst	r0, #1
   14cb8:	beq	14cc0 <__assert_fail@plt+0x3cc4>
   14cbc:	b	15d18 <__assert_fail@plt+0x4d1c>
   14cc0:	movw	r0, #1
   14cc4:	strb	r0, [fp, #-66]	; 0xffffffbe
   14cc8:	ldr	r0, [fp, #8]
   14ccc:	cmp	r0, #2
   14cd0:	bne	14d84 <__assert_fail@plt+0x3d88>
   14cd4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14cd8:	tst	r0, #1
   14cdc:	bne	14d84 <__assert_fail@plt+0x3d88>
   14ce0:	b	14ce4 <__assert_fail@plt+0x3ce8>
   14ce4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ce8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cec:	cmp	r0, r1
   14cf0:	bcs	14d08 <__assert_fail@plt+0x3d0c>
   14cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14cf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14cfc:	add	r0, r0, r1
   14d00:	movw	r1, #39	; 0x27
   14d04:	strb	r1, [r0]
   14d08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d0c:	add	r0, r0, #1
   14d10:	str	r0, [fp, #-44]	; 0xffffffd4
   14d14:	b	14d18 <__assert_fail@plt+0x3d1c>
   14d18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d20:	cmp	r0, r1
   14d24:	bcs	14d3c <__assert_fail@plt+0x3d40>
   14d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d30:	add	r0, r0, r1
   14d34:	movw	r1, #36	; 0x24
   14d38:	strb	r1, [r0]
   14d3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d40:	add	r0, r0, #1
   14d44:	str	r0, [fp, #-44]	; 0xffffffd4
   14d48:	b	14d4c <__assert_fail@plt+0x3d50>
   14d4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d54:	cmp	r0, r1
   14d58:	bcs	14d70 <__assert_fail@plt+0x3d74>
   14d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d64:	add	r0, r0, r1
   14d68:	movw	r1, #39	; 0x27
   14d6c:	strb	r1, [r0]
   14d70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d74:	add	r0, r0, #1
   14d78:	str	r0, [fp, #-44]	; 0xffffffd4
   14d7c:	movw	r0, #1
   14d80:	strb	r0, [fp, #-60]	; 0xffffffc4
   14d84:	b	14d88 <__assert_fail@plt+0x3d8c>
   14d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d90:	cmp	r0, r1
   14d94:	bcs	14dac <__assert_fail@plt+0x3db0>
   14d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14da0:	add	r0, r0, r1
   14da4:	movw	r1, #92	; 0x5c
   14da8:	strb	r1, [r0]
   14dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14db0:	add	r0, r0, #1
   14db4:	str	r0, [fp, #-44]	; 0xffffffd4
   14db8:	b	14dbc <__assert_fail@plt+0x3dc0>
   14dbc:	ldr	r0, [fp, #8]
   14dc0:	cmp	r0, #2
   14dc4:	beq	14e84 <__assert_fail@plt+0x3e88>
   14dc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14dcc:	add	r0, r0, #1
   14dd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14dd4:	cmp	r0, r1
   14dd8:	bcs	14e84 <__assert_fail@plt+0x3e88>
   14ddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14de0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14de4:	add	r1, r1, #1
   14de8:	add	r0, r0, r1
   14dec:	ldrb	r0, [r0]
   14df0:	movw	r1, #48	; 0x30
   14df4:	cmp	r1, r0
   14df8:	bgt	14e84 <__assert_fail@plt+0x3e88>
   14dfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e04:	add	r1, r1, #1
   14e08:	add	r0, r0, r1
   14e0c:	ldrb	r0, [r0]
   14e10:	cmp	r0, #57	; 0x39
   14e14:	bgt	14e84 <__assert_fail@plt+0x3e88>
   14e18:	b	14e1c <__assert_fail@plt+0x3e20>
   14e1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e24:	cmp	r0, r1
   14e28:	bcs	14e40 <__assert_fail@plt+0x3e44>
   14e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e34:	add	r0, r0, r1
   14e38:	movw	r1, #48	; 0x30
   14e3c:	strb	r1, [r0]
   14e40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e44:	add	r0, r0, #1
   14e48:	str	r0, [fp, #-44]	; 0xffffffd4
   14e4c:	b	14e50 <__assert_fail@plt+0x3e54>
   14e50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e58:	cmp	r0, r1
   14e5c:	bcs	14e74 <__assert_fail@plt+0x3e78>
   14e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e68:	add	r0, r0, r1
   14e6c:	movw	r1, #48	; 0x30
   14e70:	strb	r1, [r0]
   14e74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e78:	add	r0, r0, #1
   14e7c:	str	r0, [fp, #-44]	; 0xffffffd4
   14e80:	b	14e84 <__assert_fail@plt+0x3e88>
   14e84:	movw	r0, #48	; 0x30
   14e88:	strb	r0, [fp, #-63]	; 0xffffffc1
   14e8c:	b	14ea8 <__assert_fail@plt+0x3eac>
   14e90:	ldr	r0, [fp, #12]
   14e94:	and	r0, r0, #1
   14e98:	cmp	r0, #0
   14e9c:	beq	14ea4 <__assert_fail@plt+0x3ea8>
   14ea0:	b	15b88 <__assert_fail@plt+0x4b8c>
   14ea4:	b	14ea8 <__assert_fail@plt+0x3eac>
   14ea8:	b	15924 <__assert_fail@plt+0x4928>
   14eac:	ldr	r0, [fp, #8]
   14eb0:	cmp	r0, #2
   14eb4:	str	r0, [sp, #40]	; 0x28
   14eb8:	beq	14ed0 <__assert_fail@plt+0x3ed4>
   14ebc:	b	14ec0 <__assert_fail@plt+0x3ec4>
   14ec0:	ldr	r0, [sp, #40]	; 0x28
   14ec4:	cmp	r0, #5
   14ec8:	beq	14ee4 <__assert_fail@plt+0x3ee8>
   14ecc:	b	150a0 <__assert_fail@plt+0x40a4>
   14ed0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ed4:	tst	r0, #1
   14ed8:	beq	14ee0 <__assert_fail@plt+0x3ee4>
   14edc:	b	15d18 <__assert_fail@plt+0x4d1c>
   14ee0:	b	150a4 <__assert_fail@plt+0x40a8>
   14ee4:	ldr	r0, [fp, #12]
   14ee8:	and	r0, r0, #4
   14eec:	cmp	r0, #0
   14ef0:	beq	1509c <__assert_fail@plt+0x40a0>
   14ef4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ef8:	add	r0, r0, #2
   14efc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14f00:	cmp	r0, r1
   14f04:	bcs	1509c <__assert_fail@plt+0x40a0>
   14f08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14f10:	add	r1, r1, #1
   14f14:	add	r0, r0, r1
   14f18:	ldrb	r0, [r0]
   14f1c:	cmp	r0, #63	; 0x3f
   14f20:	bne	1509c <__assert_fail@plt+0x40a0>
   14f24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14f2c:	add	r0, r0, r1
   14f30:	ldrb	r0, [r0, #2]
   14f34:	mov	r1, r0
   14f38:	cmp	r0, #33	; 0x21
   14f3c:	str	r1, [sp, #36]	; 0x24
   14f40:	beq	14f90 <__assert_fail@plt+0x3f94>
   14f44:	b	14f48 <__assert_fail@plt+0x3f4c>
   14f48:	ldr	r0, [sp, #36]	; 0x24
   14f4c:	sub	r1, r0, #39	; 0x27
   14f50:	cmp	r1, #3
   14f54:	bcc	14f90 <__assert_fail@plt+0x3f94>
   14f58:	b	14f5c <__assert_fail@plt+0x3f60>
   14f5c:	ldr	r0, [sp, #36]	; 0x24
   14f60:	cmp	r0, #45	; 0x2d
   14f64:	beq	14f90 <__assert_fail@plt+0x3f94>
   14f68:	b	14f6c <__assert_fail@plt+0x3f70>
   14f6c:	ldr	r0, [sp, #36]	; 0x24
   14f70:	cmp	r0, #47	; 0x2f
   14f74:	beq	14f90 <__assert_fail@plt+0x3f94>
   14f78:	b	14f7c <__assert_fail@plt+0x3f80>
   14f7c:	ldr	r0, [sp, #36]	; 0x24
   14f80:	sub	r1, r0, #60	; 0x3c
   14f84:	cmp	r1, #2
   14f88:	bhi	15094 <__assert_fail@plt+0x4098>
   14f8c:	b	14f90 <__assert_fail@plt+0x3f94>
   14f90:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14f94:	tst	r0, #1
   14f98:	beq	14fa0 <__assert_fail@plt+0x3fa4>
   14f9c:	b	15d18 <__assert_fail@plt+0x4d1c>
   14fa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14fa4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14fa8:	add	r1, r1, #2
   14fac:	add	r0, r0, r1
   14fb0:	ldrb	r0, [r0]
   14fb4:	strb	r0, [fp, #-63]	; 0xffffffc1
   14fb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14fbc:	add	r0, r0, #2
   14fc0:	str	r0, [fp, #-40]	; 0xffffffd8
   14fc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14fcc:	cmp	r0, r1
   14fd0:	bcs	14fe8 <__assert_fail@plt+0x3fec>
   14fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14fdc:	add	r0, r0, r1
   14fe0:	movw	r1, #63	; 0x3f
   14fe4:	strb	r1, [r0]
   14fe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fec:	add	r0, r0, #1
   14ff0:	str	r0, [fp, #-44]	; 0xffffffd4
   14ff4:	b	14ff8 <__assert_fail@plt+0x3ffc>
   14ff8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ffc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15000:	cmp	r0, r1
   15004:	bcs	1501c <__assert_fail@plt+0x4020>
   15008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1500c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15010:	add	r0, r0, r1
   15014:	movw	r1, #34	; 0x22
   15018:	strb	r1, [r0]
   1501c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15020:	add	r0, r0, #1
   15024:	str	r0, [fp, #-44]	; 0xffffffd4
   15028:	b	1502c <__assert_fail@plt+0x4030>
   1502c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15030:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15034:	cmp	r0, r1
   15038:	bcs	15050 <__assert_fail@plt+0x4054>
   1503c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15040:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15044:	add	r0, r0, r1
   15048:	movw	r1, #34	; 0x22
   1504c:	strb	r1, [r0]
   15050:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15054:	add	r0, r0, #1
   15058:	str	r0, [fp, #-44]	; 0xffffffd4
   1505c:	b	15060 <__assert_fail@plt+0x4064>
   15060:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15064:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15068:	cmp	r0, r1
   1506c:	bcs	15084 <__assert_fail@plt+0x4088>
   15070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15074:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15078:	add	r0, r0, r1
   1507c:	movw	r1, #63	; 0x3f
   15080:	strb	r1, [r0]
   15084:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15088:	add	r0, r0, #1
   1508c:	str	r0, [fp, #-44]	; 0xffffffd4
   15090:	b	15098 <__assert_fail@plt+0x409c>
   15094:	b	15098 <__assert_fail@plt+0x409c>
   15098:	b	1509c <__assert_fail@plt+0x40a0>
   1509c:	b	150a4 <__assert_fail@plt+0x40a8>
   150a0:	b	150a4 <__assert_fail@plt+0x40a8>
   150a4:	b	15924 <__assert_fail@plt+0x4928>
   150a8:	movw	r0, #97	; 0x61
   150ac:	strb	r0, [fp, #-64]	; 0xffffffc0
   150b0:	b	15170 <__assert_fail@plt+0x4174>
   150b4:	movw	r0, #98	; 0x62
   150b8:	strb	r0, [fp, #-64]	; 0xffffffc0
   150bc:	b	15170 <__assert_fail@plt+0x4174>
   150c0:	movw	r0, #102	; 0x66
   150c4:	strb	r0, [fp, #-64]	; 0xffffffc0
   150c8:	b	15170 <__assert_fail@plt+0x4174>
   150cc:	movw	r0, #110	; 0x6e
   150d0:	strb	r0, [fp, #-64]	; 0xffffffc0
   150d4:	b	15150 <__assert_fail@plt+0x4154>
   150d8:	movw	r0, #114	; 0x72
   150dc:	strb	r0, [fp, #-64]	; 0xffffffc0
   150e0:	b	15150 <__assert_fail@plt+0x4154>
   150e4:	movw	r0, #116	; 0x74
   150e8:	strb	r0, [fp, #-64]	; 0xffffffc0
   150ec:	b	15150 <__assert_fail@plt+0x4154>
   150f0:	movw	r0, #118	; 0x76
   150f4:	strb	r0, [fp, #-64]	; 0xffffffc0
   150f8:	b	15170 <__assert_fail@plt+0x4174>
   150fc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15100:	strb	r0, [fp, #-64]	; 0xffffffc0
   15104:	ldr	r0, [fp, #8]
   15108:	cmp	r0, #2
   1510c:	bne	15124 <__assert_fail@plt+0x4128>
   15110:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15114:	tst	r0, #1
   15118:	beq	15120 <__assert_fail@plt+0x4124>
   1511c:	b	15d18 <__assert_fail@plt+0x4d1c>
   15120:	b	15aac <__assert_fail@plt+0x4ab0>
   15124:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15128:	tst	r0, #1
   1512c:	beq	1514c <__assert_fail@plt+0x4150>
   15130:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15134:	tst	r0, #1
   15138:	beq	1514c <__assert_fail@plt+0x4150>
   1513c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15140:	cmp	r0, #0
   15144:	beq	1514c <__assert_fail@plt+0x4150>
   15148:	b	15aac <__assert_fail@plt+0x4ab0>
   1514c:	b	15150 <__assert_fail@plt+0x4154>
   15150:	ldr	r0, [fp, #8]
   15154:	cmp	r0, #2
   15158:	bne	1516c <__assert_fail@plt+0x4170>
   1515c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15160:	tst	r0, #1
   15164:	beq	1516c <__assert_fail@plt+0x4170>
   15168:	b	15d18 <__assert_fail@plt+0x4d1c>
   1516c:	b	15170 <__assert_fail@plt+0x4174>
   15170:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15174:	tst	r0, #1
   15178:	beq	15188 <__assert_fail@plt+0x418c>
   1517c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   15180:	strb	r0, [fp, #-63]	; 0xffffffc1
   15184:	b	15998 <__assert_fail@plt+0x499c>
   15188:	b	15924 <__assert_fail@plt+0x4928>
   1518c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15190:	cmn	r0, #1
   15194:	bne	151ac <__assert_fail@plt+0x41b0>
   15198:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1519c:	ldrb	r0, [r0, #1]
   151a0:	cmp	r0, #0
   151a4:	beq	151bc <__assert_fail@plt+0x41c0>
   151a8:	b	151b8 <__assert_fail@plt+0x41bc>
   151ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   151b0:	cmp	r0, #1
   151b4:	beq	151bc <__assert_fail@plt+0x41c0>
   151b8:	b	15924 <__assert_fail@plt+0x4928>
   151bc:	b	151c0 <__assert_fail@plt+0x41c4>
   151c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151c4:	cmp	r0, #0
   151c8:	beq	151d0 <__assert_fail@plt+0x41d4>
   151cc:	b	15924 <__assert_fail@plt+0x4928>
   151d0:	b	151d4 <__assert_fail@plt+0x41d8>
   151d4:	movw	r0, #1
   151d8:	strb	r0, [fp, #-67]	; 0xffffffbd
   151dc:	ldr	r0, [fp, #8]
   151e0:	cmp	r0, #2
   151e4:	bne	151f8 <__assert_fail@plt+0x41fc>
   151e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   151ec:	tst	r0, #1
   151f0:	beq	151f8 <__assert_fail@plt+0x41fc>
   151f4:	b	15d18 <__assert_fail@plt+0x4d1c>
   151f8:	b	15924 <__assert_fail@plt+0x4928>
   151fc:	movw	r0, #1
   15200:	strb	r0, [fp, #-61]	; 0xffffffc3
   15204:	strb	r0, [fp, #-67]	; 0xffffffbd
   15208:	ldr	r0, [fp, #8]
   1520c:	cmp	r0, #2
   15210:	bne	152f0 <__assert_fail@plt+0x42f4>
   15214:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15218:	tst	r0, #1
   1521c:	beq	15224 <__assert_fail@plt+0x4228>
   15220:	b	15d18 <__assert_fail@plt+0x4d1c>
   15224:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15228:	cmp	r0, #0
   1522c:	beq	1524c <__assert_fail@plt+0x4250>
   15230:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15234:	cmp	r0, #0
   15238:	bne	1524c <__assert_fail@plt+0x4250>
   1523c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15240:	str	r0, [fp, #-48]	; 0xffffffd0
   15244:	movw	r0, #0
   15248:	str	r0, [fp, #-28]	; 0xffffffe4
   1524c:	b	15250 <__assert_fail@plt+0x4254>
   15250:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15254:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15258:	cmp	r0, r1
   1525c:	bcs	15274 <__assert_fail@plt+0x4278>
   15260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15264:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15268:	add	r0, r0, r1
   1526c:	movw	r1, #39	; 0x27
   15270:	strb	r1, [r0]
   15274:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15278:	add	r0, r0, #1
   1527c:	str	r0, [fp, #-44]	; 0xffffffd4
   15280:	b	15284 <__assert_fail@plt+0x4288>
   15284:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15288:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1528c:	cmp	r0, r1
   15290:	bcs	152a8 <__assert_fail@plt+0x42ac>
   15294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15298:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1529c:	add	r0, r0, r1
   152a0:	movw	r1, #92	; 0x5c
   152a4:	strb	r1, [r0]
   152a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152ac:	add	r0, r0, #1
   152b0:	str	r0, [fp, #-44]	; 0xffffffd4
   152b4:	b	152b8 <__assert_fail@plt+0x42bc>
   152b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152c0:	cmp	r0, r1
   152c4:	bcs	152dc <__assert_fail@plt+0x42e0>
   152c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   152d0:	add	r0, r0, r1
   152d4:	movw	r1, #39	; 0x27
   152d8:	strb	r1, [r0]
   152dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152e0:	add	r0, r0, #1
   152e4:	str	r0, [fp, #-44]	; 0xffffffd4
   152e8:	movw	r0, #0
   152ec:	strb	r0, [fp, #-60]	; 0xffffffc4
   152f0:	b	15924 <__assert_fail@plt+0x4928>
   152f4:	movw	r0, #1
   152f8:	strb	r0, [fp, #-67]	; 0xffffffbd
   152fc:	b	15924 <__assert_fail@plt+0x4928>
   15300:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   15304:	tst	r0, #1
   15308:	beq	1534c <__assert_fail@plt+0x4350>
   1530c:	mov	r0, #1
   15310:	str	r0, [fp, #-72]	; 0xffffffb8
   15314:	bl	10ef4 <__ctype_b_loc@plt>
   15318:	ldr	r0, [r0]
   1531c:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   15320:	mov	r1, lr
   15324:	add	r0, r0, lr, lsl #1
   15328:	ldrh	r0, [r0]
   1532c:	and	r0, r0, #16384	; 0x4000
   15330:	cmp	r0, #0
   15334:	movw	r0, #0
   15338:	movne	r0, #1
   1533c:	and	r0, r0, #1
   15340:	strb	r0, [fp, #-73]	; 0xffffffb7
   15344:	str	r1, [sp, #32]
   15348:	b	155d8 <__assert_fail@plt+0x45dc>
   1534c:	sub	r0, fp, #84	; 0x54
   15350:	movw	r1, #0
   15354:	and	r1, r1, #255	; 0xff
   15358:	movw	r2, #8
   1535c:	bl	10f54 <memset@plt>
   15360:	movw	r0, #0
   15364:	str	r0, [fp, #-72]	; 0xffffffb8
   15368:	movw	r0, #1
   1536c:	strb	r0, [fp, #-73]	; 0xffffffb7
   15370:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15374:	cmn	r0, #1
   15378:	bne	15388 <__assert_fail@plt+0x438c>
   1537c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15380:	bl	10f18 <strlen@plt>
   15384:	str	r0, [fp, #-36]	; 0xffffffdc
   15388:	b	1538c <__assert_fail@plt+0x4390>
   1538c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15390:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15394:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15398:	add	r1, r1, r2
   1539c:	add	r1, r0, r1
   153a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   153a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   153ac:	add	r2, r2, r3
   153b0:	sub	r2, r0, r2
   153b4:	sub	r0, fp, #88	; 0x58
   153b8:	sub	r3, fp, #84	; 0x54
   153bc:	bl	1cee8 <__assert_fail@plt+0xbeec>
   153c0:	str	r0, [sp, #92]	; 0x5c
   153c4:	ldr	r0, [sp, #92]	; 0x5c
   153c8:	cmp	r0, #0
   153cc:	bne	153d4 <__assert_fail@plt+0x43d8>
   153d0:	b	155d4 <__assert_fail@plt+0x45d8>
   153d4:	ldr	r0, [sp, #92]	; 0x5c
   153d8:	cmn	r0, #1
   153dc:	bne	153ec <__assert_fail@plt+0x43f0>
   153e0:	movw	r0, #0
   153e4:	strb	r0, [fp, #-73]	; 0xffffffb7
   153e8:	b	155d4 <__assert_fail@plt+0x45d8>
   153ec:	ldr	r0, [sp, #92]	; 0x5c
   153f0:	cmn	r0, #2
   153f4:	bne	15468 <__assert_fail@plt+0x446c>
   153f8:	movw	r0, #0
   153fc:	strb	r0, [fp, #-73]	; 0xffffffb7
   15400:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15404:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15408:	add	r0, r0, r1
   1540c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15410:	cmp	r0, r1
   15414:	movw	r0, #0
   15418:	str	r0, [sp, #28]
   1541c:	bcs	15448 <__assert_fail@plt+0x444c>
   15420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15424:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15428:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1542c:	add	r1, r1, r2
   15430:	add	r0, r0, r1
   15434:	ldrb	r0, [r0]
   15438:	cmp	r0, #0
   1543c:	movw	r0, #0
   15440:	movne	r0, #1
   15444:	str	r0, [sp, #28]
   15448:	ldr	r0, [sp, #28]
   1544c:	tst	r0, #1
   15450:	beq	15464 <__assert_fail@plt+0x4468>
   15454:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15458:	add	r0, r0, #1
   1545c:	str	r0, [fp, #-72]	; 0xffffffb8
   15460:	b	15400 <__assert_fail@plt+0x4404>
   15464:	b	155d4 <__assert_fail@plt+0x45d8>
   15468:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1546c:	tst	r0, #1
   15470:	beq	1557c <__assert_fail@plt+0x4580>
   15474:	ldr	r0, [fp, #8]
   15478:	cmp	r0, #2
   1547c:	bne	1557c <__assert_fail@plt+0x4580>
   15480:	movw	r0, #1
   15484:	str	r0, [sp, #88]	; 0x58
   15488:	ldr	r0, [sp, #88]	; 0x58
   1548c:	ldr	r1, [sp, #92]	; 0x5c
   15490:	cmp	r0, r1
   15494:	bcs	15578 <__assert_fail@plt+0x457c>
   15498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1549c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   154a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   154a4:	add	r1, r1, r2
   154a8:	ldr	r2, [sp, #88]	; 0x58
   154ac:	add	r1, r1, r2
   154b0:	ldrb	r0, [r0, r1]
   154b4:	sub	r0, r0, #91	; 0x5b
   154b8:	cmp	r0, #33	; 0x21
   154bc:	str	r0, [sp, #24]
   154c0:	bhi	15560 <__assert_fail@plt+0x4564>
   154c4:	add	r0, pc, #8
   154c8:	ldr	r1, [sp, #24]
   154cc:	ldr	r0, [r0, r1, lsl #2]
   154d0:	mov	pc, r0
   154d4:	andeq	r5, r1, ip, asr r5
   154d8:	andeq	r5, r1, ip, asr r5
   154dc:	andeq	r5, r1, r0, ror #10
   154e0:	andeq	r5, r1, ip, asr r5
   154e4:	andeq	r5, r1, r0, ror #10
   154e8:	andeq	r5, r1, ip, asr r5
   154ec:	andeq	r5, r1, r0, ror #10
   154f0:	andeq	r5, r1, r0, ror #10
   154f4:	andeq	r5, r1, r0, ror #10
   154f8:	andeq	r5, r1, r0, ror #10
   154fc:	andeq	r5, r1, r0, ror #10
   15500:	andeq	r5, r1, r0, ror #10
   15504:	andeq	r5, r1, r0, ror #10
   15508:	andeq	r5, r1, r0, ror #10
   1550c:	andeq	r5, r1, r0, ror #10
   15510:	andeq	r5, r1, r0, ror #10
   15514:	andeq	r5, r1, r0, ror #10
   15518:	andeq	r5, r1, r0, ror #10
   1551c:	andeq	r5, r1, r0, ror #10
   15520:	andeq	r5, r1, r0, ror #10
   15524:	andeq	r5, r1, r0, ror #10
   15528:	andeq	r5, r1, r0, ror #10
   1552c:	andeq	r5, r1, r0, ror #10
   15530:	andeq	r5, r1, r0, ror #10
   15534:	andeq	r5, r1, r0, ror #10
   15538:	andeq	r5, r1, r0, ror #10
   1553c:	andeq	r5, r1, r0, ror #10
   15540:	andeq	r5, r1, r0, ror #10
   15544:	andeq	r5, r1, r0, ror #10
   15548:	andeq	r5, r1, r0, ror #10
   1554c:	andeq	r5, r1, r0, ror #10
   15550:	andeq	r5, r1, r0, ror #10
   15554:	andeq	r5, r1, r0, ror #10
   15558:	andeq	r5, r1, ip, asr r5
   1555c:	b	15d18 <__assert_fail@plt+0x4d1c>
   15560:	b	15564 <__assert_fail@plt+0x4568>
   15564:	b	15568 <__assert_fail@plt+0x456c>
   15568:	ldr	r0, [sp, #88]	; 0x58
   1556c:	add	r0, r0, #1
   15570:	str	r0, [sp, #88]	; 0x58
   15574:	b	15488 <__assert_fail@plt+0x448c>
   15578:	b	1557c <__assert_fail@plt+0x4580>
   1557c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15580:	bl	10e4c <iswprint@plt>
   15584:	cmp	r0, #0
   15588:	bne	15594 <__assert_fail@plt+0x4598>
   1558c:	movw	r0, #0
   15590:	strb	r0, [fp, #-73]	; 0xffffffb7
   15594:	ldr	r0, [sp, #92]	; 0x5c
   15598:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1559c:	add	r0, r1, r0
   155a0:	str	r0, [fp, #-72]	; 0xffffffb8
   155a4:	b	155a8 <__assert_fail@plt+0x45ac>
   155a8:	b	155ac <__assert_fail@plt+0x45b0>
   155ac:	b	155b0 <__assert_fail@plt+0x45b4>
   155b0:	sub	r0, fp, #84	; 0x54
   155b4:	bl	10e10 <mbsinit@plt>
   155b8:	cmp	r0, #0
   155bc:	movw	r0, #0
   155c0:	movne	r0, #1
   155c4:	mvn	lr, #0
   155c8:	eor	r0, r0, lr
   155cc:	tst	r0, #1
   155d0:	bne	1538c <__assert_fail@plt+0x4390>
   155d4:	b	155d8 <__assert_fail@plt+0x45dc>
   155d8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   155dc:	and	r0, r0, #1
   155e0:	strb	r0, [fp, #-67]	; 0xffffffbd
   155e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   155e8:	movw	r1, #1
   155ec:	cmp	r1, r0
   155f0:	bcc	1560c <__assert_fail@plt+0x4610>
   155f4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   155f8:	tst	r0, #1
   155fc:	beq	15920 <__assert_fail@plt+0x4924>
   15600:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15604:	tst	r0, #1
   15608:	bne	15920 <__assert_fail@plt+0x4924>
   1560c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15610:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15614:	add	r0, r0, r1
   15618:	str	r0, [sp, #84]	; 0x54
   1561c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15620:	tst	r0, #1
   15624:	beq	157d4 <__assert_fail@plt+0x47d8>
   15628:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1562c:	tst	r0, #1
   15630:	bne	157d4 <__assert_fail@plt+0x47d8>
   15634:	b	15638 <__assert_fail@plt+0x463c>
   15638:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1563c:	tst	r0, #1
   15640:	beq	15648 <__assert_fail@plt+0x464c>
   15644:	b	15d18 <__assert_fail@plt+0x4d1c>
   15648:	movw	r0, #1
   1564c:	strb	r0, [fp, #-66]	; 0xffffffbe
   15650:	ldr	r0, [fp, #8]
   15654:	cmp	r0, #2
   15658:	bne	1570c <__assert_fail@plt+0x4710>
   1565c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15660:	tst	r0, #1
   15664:	bne	1570c <__assert_fail@plt+0x4710>
   15668:	b	1566c <__assert_fail@plt+0x4670>
   1566c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15670:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15674:	cmp	r0, r1
   15678:	bcs	15690 <__assert_fail@plt+0x4694>
   1567c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15680:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15684:	add	r0, r0, r1
   15688:	movw	r1, #39	; 0x27
   1568c:	strb	r1, [r0]
   15690:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15694:	add	r0, r0, #1
   15698:	str	r0, [fp, #-44]	; 0xffffffd4
   1569c:	b	156a0 <__assert_fail@plt+0x46a4>
   156a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156a8:	cmp	r0, r1
   156ac:	bcs	156c4 <__assert_fail@plt+0x46c8>
   156b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156b8:	add	r0, r0, r1
   156bc:	movw	r1, #36	; 0x24
   156c0:	strb	r1, [r0]
   156c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156c8:	add	r0, r0, #1
   156cc:	str	r0, [fp, #-44]	; 0xffffffd4
   156d0:	b	156d4 <__assert_fail@plt+0x46d8>
   156d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156dc:	cmp	r0, r1
   156e0:	bcs	156f8 <__assert_fail@plt+0x46fc>
   156e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156ec:	add	r0, r0, r1
   156f0:	movw	r1, #39	; 0x27
   156f4:	strb	r1, [r0]
   156f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156fc:	add	r0, r0, #1
   15700:	str	r0, [fp, #-44]	; 0xffffffd4
   15704:	movw	r0, #1
   15708:	strb	r0, [fp, #-60]	; 0xffffffc4
   1570c:	b	15710 <__assert_fail@plt+0x4714>
   15710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15714:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15718:	cmp	r0, r1
   1571c:	bcs	15734 <__assert_fail@plt+0x4738>
   15720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15724:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15728:	add	r0, r0, r1
   1572c:	movw	r1, #92	; 0x5c
   15730:	strb	r1, [r0]
   15734:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15738:	add	r0, r0, #1
   1573c:	str	r0, [fp, #-44]	; 0xffffffd4
   15740:	b	15744 <__assert_fail@plt+0x4748>
   15744:	b	15748 <__assert_fail@plt+0x474c>
   15748:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1574c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15750:	cmp	r0, r1
   15754:	bcs	15774 <__assert_fail@plt+0x4778>
   15758:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1575c:	asr	r0, r0, #6
   15760:	add	r0, r0, #48	; 0x30
   15764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15768:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1576c:	add	r1, r1, r2
   15770:	strb	r0, [r1]
   15774:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15778:	add	r0, r0, #1
   1577c:	str	r0, [fp, #-44]	; 0xffffffd4
   15780:	b	15784 <__assert_fail@plt+0x4788>
   15784:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15788:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1578c:	cmp	r0, r1
   15790:	bcs	157b4 <__assert_fail@plt+0x47b8>
   15794:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15798:	asr	r0, r0, #3
   1579c:	and	r0, r0, #7
   157a0:	add	r0, r0, #48	; 0x30
   157a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   157ac:	add	r1, r1, r2
   157b0:	strb	r0, [r1]
   157b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157b8:	add	r0, r0, #1
   157bc:	str	r0, [fp, #-44]	; 0xffffffd4
   157c0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   157c4:	and	r0, r0, #7
   157c8:	add	r0, r0, #48	; 0x30
   157cc:	strb	r0, [fp, #-63]	; 0xffffffc1
   157d0:	b	15820 <__assert_fail@plt+0x4824>
   157d4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   157d8:	tst	r0, #1
   157dc:	beq	1581c <__assert_fail@plt+0x4820>
   157e0:	b	157e4 <__assert_fail@plt+0x47e8>
   157e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157ec:	cmp	r0, r1
   157f0:	bcs	15808 <__assert_fail@plt+0x480c>
   157f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   157fc:	add	r0, r0, r1
   15800:	movw	r1, #92	; 0x5c
   15804:	strb	r1, [r0]
   15808:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1580c:	add	r0, r0, #1
   15810:	str	r0, [fp, #-44]	; 0xffffffd4
   15814:	movw	r0, #0
   15818:	strb	r0, [fp, #-65]	; 0xffffffbf
   1581c:	b	15820 <__assert_fail@plt+0x4824>
   15820:	ldr	r0, [sp, #84]	; 0x54
   15824:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15828:	add	r1, r1, #1
   1582c:	cmp	r0, r1
   15830:	bhi	15838 <__assert_fail@plt+0x483c>
   15834:	b	1591c <__assert_fail@plt+0x4920>
   15838:	b	1583c <__assert_fail@plt+0x4840>
   1583c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15840:	tst	r0, #1
   15844:	beq	158c4 <__assert_fail@plt+0x48c8>
   15848:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1584c:	tst	r0, #1
   15850:	bne	158c4 <__assert_fail@plt+0x48c8>
   15854:	b	15858 <__assert_fail@plt+0x485c>
   15858:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1585c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15860:	cmp	r0, r1
   15864:	bcs	1587c <__assert_fail@plt+0x4880>
   15868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1586c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15870:	add	r0, r0, r1
   15874:	movw	r1, #39	; 0x27
   15878:	strb	r1, [r0]
   1587c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15880:	add	r0, r0, #1
   15884:	str	r0, [fp, #-44]	; 0xffffffd4
   15888:	b	1588c <__assert_fail@plt+0x4890>
   1588c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15890:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15894:	cmp	r0, r1
   15898:	bcs	158b0 <__assert_fail@plt+0x48b4>
   1589c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158a4:	add	r0, r0, r1
   158a8:	movw	r1, #39	; 0x27
   158ac:	strb	r1, [r0]
   158b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158b4:	add	r0, r0, #1
   158b8:	str	r0, [fp, #-44]	; 0xffffffd4
   158bc:	movw	r0, #0
   158c0:	strb	r0, [fp, #-60]	; 0xffffffc4
   158c4:	b	158c8 <__assert_fail@plt+0x48cc>
   158c8:	b	158cc <__assert_fail@plt+0x48d0>
   158cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158d4:	cmp	r0, r1
   158d8:	bcs	158f0 <__assert_fail@plt+0x48f4>
   158dc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   158e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   158e8:	add	r1, r1, r2
   158ec:	strb	r0, [r1]
   158f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158f4:	add	r0, r0, #1
   158f8:	str	r0, [fp, #-44]	; 0xffffffd4
   158fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15900:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15904:	add	r1, r1, #1
   15908:	str	r1, [fp, #-40]	; 0xffffffd8
   1590c:	add	r0, r0, r1
   15910:	ldrb	r0, [r0]
   15914:	strb	r0, [fp, #-63]	; 0xffffffc1
   15918:	b	1561c <__assert_fail@plt+0x4620>
   1591c:	b	15aac <__assert_fail@plt+0x4ab0>
   15920:	b	15924 <__assert_fail@plt+0x4928>
   15924:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15928:	tst	r0, #1
   1592c:	beq	1593c <__assert_fail@plt+0x4940>
   15930:	ldr	r0, [fp, #8]
   15934:	cmp	r0, #2
   15938:	bne	15948 <__assert_fail@plt+0x494c>
   1593c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15940:	tst	r0, #1
   15944:	beq	15984 <__assert_fail@plt+0x4988>
   15948:	ldr	r0, [fp, #16]
   1594c:	movw	r1, #0
   15950:	cmp	r0, r1
   15954:	beq	15984 <__assert_fail@plt+0x4988>
   15958:	ldr	r0, [fp, #16]
   1595c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15960:	lsr	r1, r1, #5
   15964:	add	r0, r0, r1, lsl #2
   15968:	ldr	r0, [r0]
   1596c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15970:	and	r1, r1, #31
   15974:	lsr	r0, r0, r1
   15978:	and	r0, r0, #1
   1597c:	cmp	r0, #0
   15980:	bne	15994 <__assert_fail@plt+0x4998>
   15984:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15988:	tst	r0, #1
   1598c:	bne	15994 <__assert_fail@plt+0x4998>
   15990:	b	15aac <__assert_fail@plt+0x4ab0>
   15994:	b	15998 <__assert_fail@plt+0x499c>
   15998:	b	1599c <__assert_fail@plt+0x49a0>
   1599c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   159a0:	tst	r0, #1
   159a4:	beq	159ac <__assert_fail@plt+0x49b0>
   159a8:	b	15d18 <__assert_fail@plt+0x4d1c>
   159ac:	movw	r0, #1
   159b0:	strb	r0, [fp, #-66]	; 0xffffffbe
   159b4:	ldr	r0, [fp, #8]
   159b8:	cmp	r0, #2
   159bc:	bne	15a70 <__assert_fail@plt+0x4a74>
   159c0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   159c4:	tst	r0, #1
   159c8:	bne	15a70 <__assert_fail@plt+0x4a74>
   159cc:	b	159d0 <__assert_fail@plt+0x49d4>
   159d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159d8:	cmp	r0, r1
   159dc:	bcs	159f4 <__assert_fail@plt+0x49f8>
   159e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159e8:	add	r0, r0, r1
   159ec:	movw	r1, #39	; 0x27
   159f0:	strb	r1, [r0]
   159f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159f8:	add	r0, r0, #1
   159fc:	str	r0, [fp, #-44]	; 0xffffffd4
   15a00:	b	15a04 <__assert_fail@plt+0x4a08>
   15a04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a0c:	cmp	r0, r1
   15a10:	bcs	15a28 <__assert_fail@plt+0x4a2c>
   15a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a1c:	add	r0, r0, r1
   15a20:	movw	r1, #36	; 0x24
   15a24:	strb	r1, [r0]
   15a28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a2c:	add	r0, r0, #1
   15a30:	str	r0, [fp, #-44]	; 0xffffffd4
   15a34:	b	15a38 <__assert_fail@plt+0x4a3c>
   15a38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a40:	cmp	r0, r1
   15a44:	bcs	15a5c <__assert_fail@plt+0x4a60>
   15a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a50:	add	r0, r0, r1
   15a54:	movw	r1, #39	; 0x27
   15a58:	strb	r1, [r0]
   15a5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a60:	add	r0, r0, #1
   15a64:	str	r0, [fp, #-44]	; 0xffffffd4
   15a68:	movw	r0, #1
   15a6c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15a70:	b	15a74 <__assert_fail@plt+0x4a78>
   15a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a7c:	cmp	r0, r1
   15a80:	bcs	15a98 <__assert_fail@plt+0x4a9c>
   15a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a8c:	add	r0, r0, r1
   15a90:	movw	r1, #92	; 0x5c
   15a94:	strb	r1, [r0]
   15a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a9c:	add	r0, r0, #1
   15aa0:	str	r0, [fp, #-44]	; 0xffffffd4
   15aa4:	b	15aa8 <__assert_fail@plt+0x4aac>
   15aa8:	b	15aac <__assert_fail@plt+0x4ab0>
   15aac:	b	15ab0 <__assert_fail@plt+0x4ab4>
   15ab0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15ab4:	tst	r0, #1
   15ab8:	beq	15b38 <__assert_fail@plt+0x4b3c>
   15abc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15ac0:	tst	r0, #1
   15ac4:	bne	15b38 <__assert_fail@plt+0x4b3c>
   15ac8:	b	15acc <__assert_fail@plt+0x4ad0>
   15acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ad0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ad4:	cmp	r0, r1
   15ad8:	bcs	15af0 <__assert_fail@plt+0x4af4>
   15adc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ae0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ae4:	add	r0, r0, r1
   15ae8:	movw	r1, #39	; 0x27
   15aec:	strb	r1, [r0]
   15af0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15af4:	add	r0, r0, #1
   15af8:	str	r0, [fp, #-44]	; 0xffffffd4
   15afc:	b	15b00 <__assert_fail@plt+0x4b04>
   15b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b08:	cmp	r0, r1
   15b0c:	bcs	15b24 <__assert_fail@plt+0x4b28>
   15b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b18:	add	r0, r0, r1
   15b1c:	movw	r1, #39	; 0x27
   15b20:	strb	r1, [r0]
   15b24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b28:	add	r0, r0, #1
   15b2c:	str	r0, [fp, #-44]	; 0xffffffd4
   15b30:	movw	r0, #0
   15b34:	strb	r0, [fp, #-60]	; 0xffffffc4
   15b38:	b	15b3c <__assert_fail@plt+0x4b40>
   15b3c:	b	15b40 <__assert_fail@plt+0x4b44>
   15b40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b48:	cmp	r0, r1
   15b4c:	bcs	15b64 <__assert_fail@plt+0x4b68>
   15b50:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15b54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15b5c:	add	r1, r1, r2
   15b60:	strb	r0, [r1]
   15b64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b68:	add	r0, r0, #1
   15b6c:	str	r0, [fp, #-44]	; 0xffffffd4
   15b70:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   15b74:	tst	r0, #1
   15b78:	bne	15b84 <__assert_fail@plt+0x4b88>
   15b7c:	movw	r0, #0
   15b80:	strb	r0, [fp, #-62]	; 0xffffffc2
   15b84:	b	15b88 <__assert_fail@plt+0x4b8c>
   15b88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b8c:	add	r0, r0, #1
   15b90:	str	r0, [fp, #-40]	; 0xffffffd8
   15b94:	b	1493c <__assert_fail@plt+0x3940>
   15b98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b9c:	cmp	r0, #0
   15ba0:	bne	15bc0 <__assert_fail@plt+0x4bc4>
   15ba4:	ldr	r0, [fp, #8]
   15ba8:	cmp	r0, #2
   15bac:	bne	15bc0 <__assert_fail@plt+0x4bc4>
   15bb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15bb4:	tst	r0, #1
   15bb8:	beq	15bc0 <__assert_fail@plt+0x4bc4>
   15bbc:	b	15d18 <__assert_fail@plt+0x4d1c>
   15bc0:	ldr	r0, [fp, #8]
   15bc4:	cmp	r0, #2
   15bc8:	bne	15c68 <__assert_fail@plt+0x4c6c>
   15bcc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15bd0:	tst	r0, #1
   15bd4:	bne	15c68 <__assert_fail@plt+0x4c6c>
   15bd8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   15bdc:	tst	r0, #1
   15be0:	beq	15c68 <__assert_fail@plt+0x4c6c>
   15be4:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   15be8:	tst	r0, #1
   15bec:	beq	15c34 <__assert_fail@plt+0x4c38>
   15bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15bf8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15bfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15c00:	ldr	ip, [fp, #12]
   15c04:	ldr	lr, [fp, #16]
   15c08:	ldr	r4, [fp, #20]
   15c0c:	ldr	r5, [fp, #24]
   15c10:	movw	r6, #5
   15c14:	str	r6, [sp]
   15c18:	str	ip, [sp, #4]
   15c1c:	str	lr, [sp, #8]
   15c20:	str	r4, [sp, #12]
   15c24:	str	r5, [sp, #16]
   15c28:	bl	14654 <__assert_fail@plt+0x3658>
   15c2c:	str	r0, [fp, #-20]	; 0xffffffec
   15c30:	b	15d80 <__assert_fail@plt+0x4d84>
   15c34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15c38:	cmp	r0, #0
   15c3c:	bne	15c60 <__assert_fail@plt+0x4c64>
   15c40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c44:	cmp	r0, #0
   15c48:	beq	15c60 <__assert_fail@plt+0x4c64>
   15c4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c50:	str	r0, [fp, #-28]	; 0xffffffe4
   15c54:	movw	r0, #0
   15c58:	str	r0, [fp, #-44]	; 0xffffffd4
   15c5c:	b	146fc <__assert_fail@plt+0x3700>
   15c60:	b	15c64 <__assert_fail@plt+0x4c68>
   15c64:	b	15c68 <__assert_fail@plt+0x4c6c>
   15c68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15c6c:	movw	r1, #0
   15c70:	cmp	r0, r1
   15c74:	beq	15ce8 <__assert_fail@plt+0x4cec>
   15c78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c7c:	tst	r0, #1
   15c80:	bne	15ce8 <__assert_fail@plt+0x4cec>
   15c84:	b	15c88 <__assert_fail@plt+0x4c8c>
   15c88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15c8c:	ldrsb	r0, [r0]
   15c90:	cmp	r0, #0
   15c94:	beq	15ce4 <__assert_fail@plt+0x4ce8>
   15c98:	b	15c9c <__assert_fail@plt+0x4ca0>
   15c9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ca0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ca4:	cmp	r0, r1
   15ca8:	bcs	15cc4 <__assert_fail@plt+0x4cc8>
   15cac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15cb0:	ldrb	r0, [r0]
   15cb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15cb8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15cbc:	add	r1, r1, r2
   15cc0:	strb	r0, [r1]
   15cc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cc8:	add	r0, r0, #1
   15ccc:	str	r0, [fp, #-44]	; 0xffffffd4
   15cd0:	b	15cd4 <__assert_fail@plt+0x4cd8>
   15cd4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15cd8:	add	r0, r0, #1
   15cdc:	str	r0, [fp, #-52]	; 0xffffffcc
   15ce0:	b	15c88 <__assert_fail@plt+0x4c8c>
   15ce4:	b	15ce8 <__assert_fail@plt+0x4cec>
   15ce8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15cf0:	cmp	r0, r1
   15cf4:	bcs	15d0c <__assert_fail@plt+0x4d10>
   15cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d00:	add	r0, r0, r1
   15d04:	movw	r1, #0
   15d08:	strb	r1, [r0]
   15d0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d10:	str	r0, [fp, #-20]	; 0xffffffec
   15d14:	b	15d80 <__assert_fail@plt+0x4d84>
   15d18:	ldr	r0, [fp, #8]
   15d1c:	cmp	r0, #2
   15d20:	bne	15d38 <__assert_fail@plt+0x4d3c>
   15d24:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15d28:	tst	r0, #1
   15d2c:	beq	15d38 <__assert_fail@plt+0x4d3c>
   15d30:	movw	r0, #4
   15d34:	str	r0, [fp, #8]
   15d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15d44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d48:	ldr	ip, [fp, #8]
   15d4c:	ldr	lr, [fp, #12]
   15d50:	mvn	r4, #2
   15d54:	and	lr, lr, r4
   15d58:	ldr	r4, [fp, #20]
   15d5c:	ldr	r5, [fp, #24]
   15d60:	str	ip, [sp]
   15d64:	str	lr, [sp, #4]
   15d68:	movw	ip, #0
   15d6c:	str	ip, [sp, #8]
   15d70:	str	r4, [sp, #12]
   15d74:	str	r5, [sp, #16]
   15d78:	bl	14654 <__assert_fail@plt+0x3658>
   15d7c:	str	r0, [fp, #-20]	; 0xffffffec
   15d80:	ldr	r0, [fp, #-20]	; 0xffffffec
   15d84:	sub	sp, fp, #16
   15d88:	pop	{r4, r5, r6, sl, fp, pc}
   15d8c:	push	{fp, lr}
   15d90:	mov	fp, sp
   15d94:	sub	sp, sp, #16
   15d98:	str	r0, [fp, #-4]
   15d9c:	str	r1, [sp, #8]
   15da0:	str	r2, [sp, #4]
   15da4:	ldr	r0, [fp, #-4]
   15da8:	ldr	r1, [sp, #8]
   15dac:	ldr	r3, [sp, #4]
   15db0:	movw	r2, #0
   15db4:	bl	15dc0 <__assert_fail@plt+0x4dc4>
   15db8:	mov	sp, fp
   15dbc:	pop	{fp, pc}
   15dc0:	push	{r4, r5, r6, sl, fp, lr}
   15dc4:	add	fp, sp, #16
   15dc8:	sub	sp, sp, #72	; 0x48
   15dcc:	str	r0, [fp, #-20]	; 0xffffffec
   15dd0:	str	r1, [fp, #-24]	; 0xffffffe8
   15dd4:	str	r2, [fp, #-28]	; 0xffffffe4
   15dd8:	str	r3, [fp, #-32]	; 0xffffffe0
   15ddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15de0:	movw	r1, #0
   15de4:	cmp	r0, r1
   15de8:	beq	15df8 <__assert_fail@plt+0x4dfc>
   15dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15df0:	str	r0, [sp, #32]
   15df4:	b	15e08 <__assert_fail@plt+0x4e0c>
   15df8:	movw	r0, #356	; 0x164
   15dfc:	movt	r0, #3
   15e00:	str	r0, [sp, #32]
   15e04:	b	15e08 <__assert_fail@plt+0x4e0c>
   15e08:	ldr	r0, [sp, #32]
   15e0c:	str	r0, [fp, #-36]	; 0xffffffdc
   15e10:	bl	10f3c <__errno_location@plt>
   15e14:	ldr	r0, [r0]
   15e18:	str	r0, [fp, #-40]	; 0xffffffd8
   15e1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e20:	ldr	r0, [r0, #4]
   15e24:	ldr	lr, [fp, #-28]	; 0xffffffe4
   15e28:	movw	r1, #0
   15e2c:	cmp	lr, r1
   15e30:	movw	lr, #0
   15e34:	movne	lr, #1
   15e38:	tst	lr, #1
   15e3c:	mov	lr, r1
   15e40:	moveq	lr, #1
   15e44:	orr	r0, r0, lr
   15e48:	str	r0, [sp, #44]	; 0x2c
   15e4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e58:	ldr	r0, [r0]
   15e5c:	ldr	lr, [sp, #44]	; 0x2c
   15e60:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15e64:	add	ip, ip, #8
   15e68:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15e6c:	ldr	r4, [r4, #40]	; 0x28
   15e70:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15e74:	ldr	r5, [r5, #44]	; 0x2c
   15e78:	str	r0, [sp, #28]
   15e7c:	mov	r0, r1
   15e80:	ldr	r6, [sp, #28]
   15e84:	str	r6, [sp]
   15e88:	str	lr, [sp, #4]
   15e8c:	str	ip, [sp, #8]
   15e90:	str	r4, [sp, #12]
   15e94:	str	r5, [sp, #16]
   15e98:	bl	14654 <__assert_fail@plt+0x3658>
   15e9c:	add	r0, r0, #1
   15ea0:	str	r0, [sp, #40]	; 0x28
   15ea4:	ldr	r0, [sp, #40]	; 0x28
   15ea8:	bl	172e4 <__assert_fail@plt+0x62e8>
   15eac:	str	r0, [sp, #36]	; 0x24
   15eb0:	ldr	r0, [sp, #36]	; 0x24
   15eb4:	ldr	r1, [sp, #40]	; 0x28
   15eb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15ec0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15ec4:	ldr	ip, [ip]
   15ec8:	ldr	lr, [sp, #44]	; 0x2c
   15ecc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15ed0:	add	r4, r4, #8
   15ed4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15ed8:	ldr	r5, [r5, #40]	; 0x28
   15edc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   15ee0:	ldr	r6, [r6, #44]	; 0x2c
   15ee4:	str	ip, [sp]
   15ee8:	str	lr, [sp, #4]
   15eec:	str	r4, [sp, #8]
   15ef0:	str	r5, [sp, #12]
   15ef4:	str	r6, [sp, #16]
   15ef8:	bl	14654 <__assert_fail@plt+0x3658>
   15efc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15f00:	str	r0, [sp, #24]
   15f04:	str	r1, [sp, #20]
   15f08:	bl	10f3c <__errno_location@plt>
   15f0c:	ldr	r1, [sp, #20]
   15f10:	str	r1, [r0]
   15f14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15f18:	movw	r2, #0
   15f1c:	cmp	r0, r2
   15f20:	beq	15f34 <__assert_fail@plt+0x4f38>
   15f24:	ldr	r0, [sp, #40]	; 0x28
   15f28:	sub	r0, r0, #1
   15f2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f30:	str	r0, [r1]
   15f34:	ldr	r0, [sp, #36]	; 0x24
   15f38:	sub	sp, fp, #16
   15f3c:	pop	{r4, r5, r6, sl, fp, pc}
   15f40:	push	{fp, lr}
   15f44:	mov	fp, sp
   15f48:	sub	sp, sp, #8
   15f4c:	movw	r0, #236	; 0xec
   15f50:	movt	r0, #3
   15f54:	ldr	r0, [r0]
   15f58:	str	r0, [sp, #4]
   15f5c:	movw	r0, #1
   15f60:	str	r0, [sp]
   15f64:	ldr	r0, [sp]
   15f68:	movw	r1, #240	; 0xf0
   15f6c:	movt	r1, #3
   15f70:	ldr	r1, [r1]
   15f74:	cmp	r0, r1
   15f78:	bge	15fa0 <__assert_fail@plt+0x4fa4>
   15f7c:	ldr	r0, [sp, #4]
   15f80:	ldr	r1, [sp]
   15f84:	add	r0, r0, r1, lsl #3
   15f88:	ldr	r0, [r0, #4]
   15f8c:	bl	1cb6c <__assert_fail@plt+0xbb70>
   15f90:	ldr	r0, [sp]
   15f94:	add	r0, r0, #1
   15f98:	str	r0, [sp]
   15f9c:	b	15f64 <__assert_fail@plt+0x4f68>
   15fa0:	ldr	r0, [sp, #4]
   15fa4:	ldr	r0, [r0, #4]
   15fa8:	movw	r1, #404	; 0x194
   15fac:	movt	r1, #3
   15fb0:	cmp	r0, r1
   15fb4:	beq	15fe0 <__assert_fail@plt+0x4fe4>
   15fb8:	ldr	r0, [sp, #4]
   15fbc:	ldr	r0, [r0, #4]
   15fc0:	bl	1cb6c <__assert_fail@plt+0xbb70>
   15fc4:	movw	r0, #256	; 0x100
   15fc8:	movw	lr, #244	; 0xf4
   15fcc:	movt	lr, #3
   15fd0:	str	r0, [lr]
   15fd4:	movw	r0, #404	; 0x194
   15fd8:	movt	r0, #3
   15fdc:	str	r0, [lr, #4]
   15fe0:	ldr	r0, [sp, #4]
   15fe4:	movw	r1, #244	; 0xf4
   15fe8:	movt	r1, #3
   15fec:	cmp	r0, r1
   15ff0:	beq	16010 <__assert_fail@plt+0x5014>
   15ff4:	ldr	r0, [sp, #4]
   15ff8:	bl	1cb6c <__assert_fail@plt+0xbb70>
   15ffc:	movw	r0, #236	; 0xec
   16000:	movt	r0, #3
   16004:	movw	lr, #244	; 0xf4
   16008:	movt	lr, #3
   1600c:	str	lr, [r0]
   16010:	movw	r0, #240	; 0xf0
   16014:	movt	r0, #3
   16018:	movw	r1, #1
   1601c:	str	r1, [r0]
   16020:	mov	sp, fp
   16024:	pop	{fp, pc}
   16028:	push	{fp, lr}
   1602c:	mov	fp, sp
   16030:	sub	sp, sp, #8
   16034:	str	r0, [sp, #4]
   16038:	str	r1, [sp]
   1603c:	ldr	r0, [sp, #4]
   16040:	ldr	r1, [sp]
   16044:	mvn	r2, #0
   16048:	movw	r3, #356	; 0x164
   1604c:	movt	r3, #3
   16050:	bl	1605c <__assert_fail@plt+0x5060>
   16054:	mov	sp, fp
   16058:	pop	{fp, pc}
   1605c:	push	{r4, r5, r6, sl, fp, lr}
   16060:	add	fp, sp, #16
   16064:	sub	sp, sp, #88	; 0x58
   16068:	str	r0, [fp, #-20]	; 0xffffffec
   1606c:	str	r1, [fp, #-24]	; 0xffffffe8
   16070:	str	r2, [fp, #-28]	; 0xffffffe4
   16074:	str	r3, [fp, #-32]	; 0xffffffe0
   16078:	bl	10f3c <__errno_location@plt>
   1607c:	ldr	r1, [pc, #676]	; 16328 <__assert_fail@plt+0x532c>
   16080:	ldr	r0, [r0]
   16084:	str	r0, [fp, #-36]	; 0xffffffdc
   16088:	movw	r0, #236	; 0xec
   1608c:	movt	r0, #3
   16090:	ldr	r0, [r0]
   16094:	str	r0, [fp, #-40]	; 0xffffffd8
   16098:	str	r1, [fp, #-44]	; 0xffffffd4
   1609c:	ldr	r0, [fp, #-20]	; 0xffffffec
   160a0:	movw	r1, #0
   160a4:	cmp	r1, r0
   160a8:	bgt	160bc <__assert_fail@plt+0x50c0>
   160ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   160b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   160b4:	cmp	r0, r1
   160b8:	blt	160c0 <__assert_fail@plt+0x50c4>
   160bc:	bl	10fe4 <abort@plt>
   160c0:	movw	r0, #240	; 0xf0
   160c4:	movt	r0, #3
   160c8:	ldr	r0, [r0]
   160cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   160d0:	cmp	r0, r1
   160d4:	bgt	161cc <__assert_fail@plt+0x51d0>
   160d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160dc:	movw	r1, #244	; 0xf4
   160e0:	movt	r1, #3
   160e4:	cmp	r0, r1
   160e8:	movw	r0, #0
   160ec:	moveq	r0, #1
   160f0:	and	r0, r0, #1
   160f4:	strb	r0, [fp, #-45]	; 0xffffffd3
   160f8:	movw	r0, #240	; 0xf0
   160fc:	movt	r0, #3
   16100:	ldr	r0, [r0]
   16104:	str	r0, [sp, #52]	; 0x34
   16108:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1610c:	tst	r0, #1
   16110:	beq	16120 <__assert_fail@plt+0x5124>
   16114:	movw	r0, #0
   16118:	str	r0, [sp, #32]
   1611c:	b	16128 <__assert_fail@plt+0x512c>
   16120:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16124:	str	r0, [sp, #32]
   16128:	ldr	r0, [sp, #32]
   1612c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16130:	movw	r2, #240	; 0xf0
   16134:	movt	r2, #3
   16138:	ldr	r2, [r2]
   1613c:	sub	r1, r1, r2
   16140:	add	r2, r1, #1
   16144:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16148:	add	r1, sp, #52	; 0x34
   1614c:	movw	ip, #8
   16150:	str	ip, [sp]
   16154:	bl	17520 <__assert_fail@plt+0x6524>
   16158:	str	r0, [fp, #-40]	; 0xffffffd8
   1615c:	movw	r1, #236	; 0xec
   16160:	movt	r1, #3
   16164:	str	r0, [r1]
   16168:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1616c:	tst	r0, #1
   16170:	beq	16190 <__assert_fail@plt+0x5194>
   16174:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16178:	movw	r1, #244	; 0xf4
   1617c:	movt	r1, #3
   16180:	ldr	r2, [r1]
   16184:	str	r2, [r0]
   16188:	ldr	r1, [r1, #4]
   1618c:	str	r1, [r0, #4]
   16190:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16194:	movw	r1, #240	; 0xf0
   16198:	movt	r1, #3
   1619c:	ldr	r1, [r1]
   161a0:	add	r0, r0, r1, lsl #3
   161a4:	ldr	r2, [sp, #52]	; 0x34
   161a8:	sub	r1, r2, r1
   161ac:	lsl	r2, r1, #3
   161b0:	movw	r1, #0
   161b4:	and	r1, r1, #255	; 0xff
   161b8:	bl	10f54 <memset@plt>
   161bc:	ldr	r0, [sp, #52]	; 0x34
   161c0:	movw	r1, #240	; 0xf0
   161c4:	movt	r1, #3
   161c8:	str	r0, [r1]
   161cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   161d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   161d4:	ldr	r0, [r0, r1, lsl #3]
   161d8:	str	r0, [sp, #48]	; 0x30
   161dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   161e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   161e4:	add	r0, r0, r1, lsl #3
   161e8:	ldr	r0, [r0, #4]
   161ec:	str	r0, [sp, #44]	; 0x2c
   161f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   161f4:	ldr	r0, [r0, #4]
   161f8:	orr	r0, r0, #1
   161fc:	str	r0, [sp, #40]	; 0x28
   16200:	ldr	r0, [sp, #44]	; 0x2c
   16204:	ldr	r1, [sp, #48]	; 0x30
   16208:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1620c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16210:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16214:	ldr	ip, [ip]
   16218:	ldr	lr, [sp, #40]	; 0x28
   1621c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16220:	add	r4, r4, #8
   16224:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16228:	ldr	r5, [r5, #40]	; 0x28
   1622c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16230:	ldr	r6, [r6, #44]	; 0x2c
   16234:	str	ip, [sp]
   16238:	str	lr, [sp, #4]
   1623c:	str	r4, [sp, #8]
   16240:	str	r5, [sp, #12]
   16244:	str	r6, [sp, #16]
   16248:	bl	14654 <__assert_fail@plt+0x3658>
   1624c:	str	r0, [sp, #36]	; 0x24
   16250:	ldr	r0, [sp, #48]	; 0x30
   16254:	ldr	r1, [sp, #36]	; 0x24
   16258:	cmp	r0, r1
   1625c:	bhi	16308 <__assert_fail@plt+0x530c>
   16260:	ldr	r0, [sp, #36]	; 0x24
   16264:	add	r0, r0, #1
   16268:	str	r0, [sp, #48]	; 0x30
   1626c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16270:	ldr	r2, [fp, #-20]	; 0xffffffec
   16274:	add	r1, r1, r2, lsl #3
   16278:	str	r0, [r1]
   1627c:	ldr	r0, [sp, #44]	; 0x2c
   16280:	movw	r1, #404	; 0x194
   16284:	movt	r1, #3
   16288:	cmp	r0, r1
   1628c:	beq	16298 <__assert_fail@plt+0x529c>
   16290:	ldr	r0, [sp, #44]	; 0x2c
   16294:	bl	1cb6c <__assert_fail@plt+0xbb70>
   16298:	ldr	r0, [sp, #48]	; 0x30
   1629c:	bl	172e4 <__assert_fail@plt+0x62e8>
   162a0:	mov	lr, r0
   162a4:	str	r0, [sp, #44]	; 0x2c
   162a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   162ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   162b0:	add	r0, r0, r1, lsl #3
   162b4:	str	lr, [r0, #4]
   162b8:	ldr	r0, [sp, #44]	; 0x2c
   162bc:	ldr	r1, [sp, #48]	; 0x30
   162c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   162c8:	ldr	lr, [fp, #-32]	; 0xffffffe0
   162cc:	ldr	lr, [lr]
   162d0:	ldr	ip, [sp, #40]	; 0x28
   162d4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   162d8:	add	r4, r4, #8
   162dc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   162e0:	ldr	r5, [r5, #40]	; 0x28
   162e4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   162e8:	ldr	r6, [r6, #44]	; 0x2c
   162ec:	str	lr, [sp]
   162f0:	str	ip, [sp, #4]
   162f4:	str	r4, [sp, #8]
   162f8:	str	r5, [sp, #12]
   162fc:	str	r6, [sp, #16]
   16300:	bl	14654 <__assert_fail@plt+0x3658>
   16304:	str	r0, [sp, #28]
   16308:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1630c:	str	r0, [sp, #24]
   16310:	bl	10f3c <__errno_location@plt>
   16314:	ldr	lr, [sp, #24]
   16318:	str	lr, [r0]
   1631c:	ldr	r0, [sp, #44]	; 0x2c
   16320:	sub	sp, fp, #16
   16324:	pop	{r4, r5, r6, sl, fp, pc}
   16328:	svcvc	0x00ffffff
   1632c:	push	{fp, lr}
   16330:	mov	fp, sp
   16334:	sub	sp, sp, #16
   16338:	str	r0, [fp, #-4]
   1633c:	str	r1, [sp, #8]
   16340:	str	r2, [sp, #4]
   16344:	ldr	r0, [fp, #-4]
   16348:	ldr	r1, [sp, #8]
   1634c:	ldr	r2, [sp, #4]
   16350:	movw	r3, #356	; 0x164
   16354:	movt	r3, #3
   16358:	bl	1605c <__assert_fail@plt+0x5060>
   1635c:	mov	sp, fp
   16360:	pop	{fp, pc}
   16364:	push	{fp, lr}
   16368:	mov	fp, sp
   1636c:	sub	sp, sp, #8
   16370:	str	r0, [sp, #4]
   16374:	ldr	r1, [sp, #4]
   16378:	movw	r0, #0
   1637c:	bl	16028 <__assert_fail@plt+0x502c>
   16380:	mov	sp, fp
   16384:	pop	{fp, pc}
   16388:	push	{fp, lr}
   1638c:	mov	fp, sp
   16390:	sub	sp, sp, #8
   16394:	str	r0, [sp, #4]
   16398:	str	r1, [sp]
   1639c:	ldr	r1, [sp, #4]
   163a0:	ldr	r2, [sp]
   163a4:	movw	r0, #0
   163a8:	bl	1632c <__assert_fail@plt+0x5330>
   163ac:	mov	sp, fp
   163b0:	pop	{fp, pc}
   163b4:	push	{fp, lr}
   163b8:	mov	fp, sp
   163bc:	sub	sp, sp, #64	; 0x40
   163c0:	str	r0, [fp, #-4]
   163c4:	str	r1, [fp, #-8]
   163c8:	str	r2, [fp, #-12]
   163cc:	ldr	r1, [fp, #-8]
   163d0:	add	r0, sp, #4
   163d4:	bl	163f4 <__assert_fail@plt+0x53f8>
   163d8:	ldr	r0, [fp, #-4]
   163dc:	ldr	r1, [fp, #-12]
   163e0:	mvn	r2, #0
   163e4:	add	r3, sp, #4
   163e8:	bl	1605c <__assert_fail@plt+0x5060>
   163ec:	mov	sp, fp
   163f0:	pop	{fp, pc}
   163f4:	push	{fp, lr}
   163f8:	mov	fp, sp
   163fc:	sub	sp, sp, #8
   16400:	str	r1, [sp, #4]
   16404:	mov	r1, r0
   16408:	str	r0, [sp]
   1640c:	mov	r0, r1
   16410:	movw	r1, #0
   16414:	and	r1, r1, #255	; 0xff
   16418:	movw	r2, #48	; 0x30
   1641c:	bl	10f54 <memset@plt>
   16420:	ldr	r0, [sp, #4]
   16424:	cmp	r0, #10
   16428:	bne	16430 <__assert_fail@plt+0x5434>
   1642c:	bl	10fe4 <abort@plt>
   16430:	ldr	r0, [sp, #4]
   16434:	ldr	r1, [sp]
   16438:	str	r0, [r1]
   1643c:	mov	sp, fp
   16440:	pop	{fp, pc}
   16444:	push	{fp, lr}
   16448:	mov	fp, sp
   1644c:	sub	sp, sp, #64	; 0x40
   16450:	str	r0, [fp, #-4]
   16454:	str	r1, [fp, #-8]
   16458:	str	r2, [fp, #-12]
   1645c:	str	r3, [fp, #-16]
   16460:	ldr	r1, [fp, #-8]
   16464:	mov	r0, sp
   16468:	bl	163f4 <__assert_fail@plt+0x53f8>
   1646c:	ldr	r0, [fp, #-4]
   16470:	ldr	r1, [fp, #-12]
   16474:	ldr	r2, [fp, #-16]
   16478:	mov	r3, sp
   1647c:	bl	1605c <__assert_fail@plt+0x5060>
   16480:	mov	sp, fp
   16484:	pop	{fp, pc}
   16488:	push	{fp, lr}
   1648c:	mov	fp, sp
   16490:	sub	sp, sp, #8
   16494:	str	r0, [sp, #4]
   16498:	str	r1, [sp]
   1649c:	ldr	r1, [sp, #4]
   164a0:	ldr	r2, [sp]
   164a4:	movw	r0, #0
   164a8:	bl	163b4 <__assert_fail@plt+0x53b8>
   164ac:	mov	sp, fp
   164b0:	pop	{fp, pc}
   164b4:	push	{fp, lr}
   164b8:	mov	fp, sp
   164bc:	sub	sp, sp, #16
   164c0:	str	r0, [fp, #-4]
   164c4:	str	r1, [sp, #8]
   164c8:	str	r2, [sp, #4]
   164cc:	ldr	r1, [fp, #-4]
   164d0:	ldr	r2, [sp, #8]
   164d4:	ldr	r3, [sp, #4]
   164d8:	movw	r0, #0
   164dc:	bl	16444 <__assert_fail@plt+0x5448>
   164e0:	mov	sp, fp
   164e4:	pop	{fp, pc}
   164e8:	push	{fp, lr}
   164ec:	mov	fp, sp
   164f0:	sub	sp, sp, #72	; 0x48
   164f4:	movw	r3, #356	; 0x164
   164f8:	movt	r3, #3
   164fc:	str	r0, [fp, #-4]
   16500:	str	r1, [fp, #-8]
   16504:	strb	r2, [fp, #-9]
   16508:	add	r0, sp, #12
   1650c:	mov	r1, r0
   16510:	str	r0, [sp, #8]
   16514:	mov	r0, r1
   16518:	mov	r1, r3
   1651c:	movw	r2, #48	; 0x30
   16520:	bl	10e04 <memcpy@plt>
   16524:	ldr	r0, [sp, #8]
   16528:	ldrb	r1, [fp, #-9]
   1652c:	movw	r2, #1
   16530:	bl	143f8 <__assert_fail@plt+0x33fc>
   16534:	ldr	r1, [fp, #-4]
   16538:	ldr	r2, [fp, #-8]
   1653c:	movw	r3, #0
   16540:	str	r0, [sp, #4]
   16544:	mov	r0, r3
   16548:	add	r3, sp, #12
   1654c:	bl	1605c <__assert_fail@plt+0x5060>
   16550:	mov	sp, fp
   16554:	pop	{fp, pc}
   16558:	push	{fp, lr}
   1655c:	mov	fp, sp
   16560:	sub	sp, sp, #8
   16564:	str	r0, [sp, #4]
   16568:	strb	r1, [sp, #3]
   1656c:	ldr	r0, [sp, #4]
   16570:	mvn	r1, #0
   16574:	ldrb	r2, [sp, #3]
   16578:	bl	164e8 <__assert_fail@plt+0x54ec>
   1657c:	mov	sp, fp
   16580:	pop	{fp, pc}
   16584:	push	{fp, lr}
   16588:	mov	fp, sp
   1658c:	sub	sp, sp, #8
   16590:	str	r0, [sp, #4]
   16594:	ldr	r0, [sp, #4]
   16598:	movw	r1, #58	; 0x3a
   1659c:	and	r1, r1, #255	; 0xff
   165a0:	bl	16558 <__assert_fail@plt+0x555c>
   165a4:	mov	sp, fp
   165a8:	pop	{fp, pc}
   165ac:	push	{fp, lr}
   165b0:	mov	fp, sp
   165b4:	sub	sp, sp, #8
   165b8:	str	r0, [sp, #4]
   165bc:	str	r1, [sp]
   165c0:	ldr	r0, [sp, #4]
   165c4:	ldr	r1, [sp]
   165c8:	movw	r2, #58	; 0x3a
   165cc:	and	r2, r2, #255	; 0xff
   165d0:	bl	164e8 <__assert_fail@plt+0x54ec>
   165d4:	mov	sp, fp
   165d8:	pop	{fp, pc}
   165dc:	push	{fp, lr}
   165e0:	mov	fp, sp
   165e4:	sub	sp, sp, #120	; 0x78
   165e8:	str	r0, [fp, #-4]
   165ec:	str	r1, [fp, #-8]
   165f0:	str	r2, [fp, #-12]
   165f4:	ldr	r1, [fp, #-8]
   165f8:	add	r0, sp, #12
   165fc:	bl	163f4 <__assert_fail@plt+0x53f8>
   16600:	add	r0, sp, #60	; 0x3c
   16604:	mov	r1, r0
   16608:	add	r2, sp, #12
   1660c:	str	r0, [sp, #8]
   16610:	mov	r0, r1
   16614:	mov	r1, r2
   16618:	movw	r2, #48	; 0x30
   1661c:	bl	10e04 <memcpy@plt>
   16620:	ldr	r0, [sp, #8]
   16624:	movw	r1, #58	; 0x3a
   16628:	and	r1, r1, #255	; 0xff
   1662c:	movw	r2, #1
   16630:	bl	143f8 <__assert_fail@plt+0x33fc>
   16634:	ldr	r1, [fp, #-4]
   16638:	ldr	r2, [fp, #-12]
   1663c:	str	r0, [sp, #4]
   16640:	mov	r0, r1
   16644:	mov	r1, r2
   16648:	mvn	r2, #0
   1664c:	add	r3, sp, #60	; 0x3c
   16650:	bl	1605c <__assert_fail@plt+0x5060>
   16654:	mov	sp, fp
   16658:	pop	{fp, pc}
   1665c:	push	{fp, lr}
   16660:	mov	fp, sp
   16664:	sub	sp, sp, #24
   16668:	str	r0, [fp, #-4]
   1666c:	str	r1, [fp, #-8]
   16670:	str	r2, [sp, #12]
   16674:	str	r3, [sp, #8]
   16678:	ldr	r0, [fp, #-4]
   1667c:	ldr	r1, [fp, #-8]
   16680:	ldr	r2, [sp, #12]
   16684:	ldr	r3, [sp, #8]
   16688:	mvn	ip, #0
   1668c:	str	ip, [sp]
   16690:	bl	1669c <__assert_fail@plt+0x56a0>
   16694:	mov	sp, fp
   16698:	pop	{fp, pc}
   1669c:	push	{fp, lr}
   166a0:	mov	fp, sp
   166a4:	sub	sp, sp, #72	; 0x48
   166a8:	ldr	ip, [fp, #8]
   166ac:	movw	lr, #356	; 0x164
   166b0:	movt	lr, #3
   166b4:	str	r0, [fp, #-4]
   166b8:	str	r1, [fp, #-8]
   166bc:	str	r2, [fp, #-12]
   166c0:	str	r3, [fp, #-16]
   166c4:	add	r0, sp, #8
   166c8:	mov	r1, r0
   166cc:	str	r0, [sp, #4]
   166d0:	mov	r0, r1
   166d4:	mov	r1, lr
   166d8:	movw	r2, #48	; 0x30
   166dc:	str	ip, [sp]
   166e0:	bl	10e04 <memcpy@plt>
   166e4:	ldr	r1, [fp, #-8]
   166e8:	ldr	r2, [fp, #-12]
   166ec:	ldr	r0, [sp, #4]
   166f0:	bl	144f8 <__assert_fail@plt+0x34fc>
   166f4:	ldr	r0, [fp, #-4]
   166f8:	ldr	r1, [fp, #-16]
   166fc:	ldr	r2, [fp, #8]
   16700:	add	r3, sp, #8
   16704:	bl	1605c <__assert_fail@plt+0x5060>
   16708:	mov	sp, fp
   1670c:	pop	{fp, pc}
   16710:	push	{fp, lr}
   16714:	mov	fp, sp
   16718:	sub	sp, sp, #16
   1671c:	str	r0, [fp, #-4]
   16720:	str	r1, [sp, #8]
   16724:	str	r2, [sp, #4]
   16728:	ldr	r1, [fp, #-4]
   1672c:	ldr	r2, [sp, #8]
   16730:	ldr	r3, [sp, #4]
   16734:	movw	r0, #0
   16738:	bl	1665c <__assert_fail@plt+0x5660>
   1673c:	mov	sp, fp
   16740:	pop	{fp, pc}
   16744:	push	{fp, lr}
   16748:	mov	fp, sp
   1674c:	sub	sp, sp, #24
   16750:	str	r0, [fp, #-4]
   16754:	str	r1, [fp, #-8]
   16758:	str	r2, [sp, #12]
   1675c:	str	r3, [sp, #8]
   16760:	ldr	r1, [fp, #-4]
   16764:	ldr	r2, [fp, #-8]
   16768:	ldr	r3, [sp, #12]
   1676c:	ldr	r0, [sp, #8]
   16770:	movw	ip, #0
   16774:	str	r0, [sp, #4]
   16778:	mov	r0, ip
   1677c:	ldr	ip, [sp, #4]
   16780:	str	ip, [sp]
   16784:	bl	1669c <__assert_fail@plt+0x56a0>
   16788:	mov	sp, fp
   1678c:	pop	{fp, pc}
   16790:	push	{fp, lr}
   16794:	mov	fp, sp
   16798:	sub	sp, sp, #16
   1679c:	str	r0, [fp, #-4]
   167a0:	str	r1, [sp, #8]
   167a4:	str	r2, [sp, #4]
   167a8:	ldr	r0, [fp, #-4]
   167ac:	ldr	r1, [sp, #8]
   167b0:	ldr	r2, [sp, #4]
   167b4:	movw	r3, #252	; 0xfc
   167b8:	movt	r3, #3
   167bc:	bl	1605c <__assert_fail@plt+0x5060>
   167c0:	mov	sp, fp
   167c4:	pop	{fp, pc}
   167c8:	push	{fp, lr}
   167cc:	mov	fp, sp
   167d0:	sub	sp, sp, #8
   167d4:	str	r0, [sp, #4]
   167d8:	str	r1, [sp]
   167dc:	ldr	r1, [sp, #4]
   167e0:	ldr	r2, [sp]
   167e4:	movw	r0, #0
   167e8:	bl	16790 <__assert_fail@plt+0x5794>
   167ec:	mov	sp, fp
   167f0:	pop	{fp, pc}
   167f4:	push	{fp, lr}
   167f8:	mov	fp, sp
   167fc:	sub	sp, sp, #8
   16800:	str	r0, [sp, #4]
   16804:	str	r1, [sp]
   16808:	ldr	r0, [sp, #4]
   1680c:	ldr	r1, [sp]
   16810:	mvn	r2, #0
   16814:	bl	16790 <__assert_fail@plt+0x5794>
   16818:	mov	sp, fp
   1681c:	pop	{fp, pc}
   16820:	push	{fp, lr}
   16824:	mov	fp, sp
   16828:	sub	sp, sp, #8
   1682c:	str	r0, [sp, #4]
   16830:	ldr	r1, [sp, #4]
   16834:	movw	r0, #0
   16838:	bl	167f4 <__assert_fail@plt+0x57f8>
   1683c:	mov	sp, fp
   16840:	pop	{fp, pc}
   16844:	push	{fp, lr}
   16848:	mov	fp, sp
   1684c:	sub	sp, sp, #24
   16850:	str	r0, [fp, #-8]
   16854:	str	r1, [sp, #12]
   16858:	ldr	r0, [fp, #-8]
   1685c:	bl	10f0c <gettext@plt>
   16860:	str	r0, [sp, #8]
   16864:	ldr	r0, [sp, #8]
   16868:	ldr	r1, [fp, #-8]
   1686c:	cmp	r0, r1
   16870:	beq	16880 <__assert_fail@plt+0x5884>
   16874:	ldr	r0, [sp, #8]
   16878:	str	r0, [fp, #-4]
   1687c:	b	1694c <__assert_fail@plt+0x5950>
   16880:	bl	1ce8c <__assert_fail@plt+0xbe90>
   16884:	str	r0, [sp, #4]
   16888:	ldr	r0, [sp, #4]
   1688c:	movw	r1, #63424	; 0xf7c0
   16890:	movt	r1, #1
   16894:	bl	1c848 <__assert_fail@plt+0xb84c>
   16898:	cmp	r0, #0
   1689c:	bne	168d4 <__assert_fail@plt+0x58d8>
   168a0:	ldr	r0, [fp, #-8]
   168a4:	ldrb	r0, [r0]
   168a8:	cmp	r0, #96	; 0x60
   168ac:	movw	r0, #0
   168b0:	moveq	r0, #1
   168b4:	tst	r0, #1
   168b8:	movw	r0, #63434	; 0xf7ca
   168bc:	movt	r0, #1
   168c0:	movw	r1, #63430	; 0xf7c6
   168c4:	movt	r1, #1
   168c8:	movne	r0, r1
   168cc:	str	r0, [fp, #-4]
   168d0:	b	1694c <__assert_fail@plt+0x5950>
   168d4:	ldr	r0, [sp, #4]
   168d8:	movw	r1, #63438	; 0xf7ce
   168dc:	movt	r1, #1
   168e0:	bl	1c848 <__assert_fail@plt+0xb84c>
   168e4:	cmp	r0, #0
   168e8:	bne	16920 <__assert_fail@plt+0x5924>
   168ec:	ldr	r0, [fp, #-8]
   168f0:	ldrb	r0, [r0]
   168f4:	cmp	r0, #96	; 0x60
   168f8:	movw	r0, #0
   168fc:	moveq	r0, #1
   16900:	tst	r0, #1
   16904:	movw	r0, #63450	; 0xf7da
   16908:	movt	r0, #1
   1690c:	movw	r1, #63446	; 0xf7d6
   16910:	movt	r1, #1
   16914:	movne	r0, r1
   16918:	str	r0, [fp, #-4]
   1691c:	b	1694c <__assert_fail@plt+0x5950>
   16920:	ldr	r0, [sp, #12]
   16924:	cmp	r0, #9
   16928:	movw	r0, #0
   1692c:	moveq	r0, #1
   16930:	tst	r0, #1
   16934:	movw	r0, #63422	; 0xf7be
   16938:	movt	r0, #1
   1693c:	movw	r1, #63418	; 0xf7ba
   16940:	movt	r1, #1
   16944:	movne	r0, r1
   16948:	str	r0, [fp, #-4]
   1694c:	ldr	r0, [fp, #-4]
   16950:	mov	sp, fp
   16954:	pop	{fp, pc}
   16958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1695c:	add	fp, sp, #28
   16960:	sub	sp, sp, #260	; 0x104
   16964:	ldr	ip, [fp, #12]
   16968:	ldr	lr, [fp, #8]
   1696c:	str	r0, [fp, #-32]	; 0xffffffe0
   16970:	str	r1, [fp, #-36]	; 0xffffffdc
   16974:	str	r2, [fp, #-40]	; 0xffffffd8
   16978:	str	r3, [fp, #-44]	; 0xffffffd4
   1697c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16980:	movw	r1, #0
   16984:	cmp	r0, r1
   16988:	str	lr, [fp, #-48]	; 0xffffffd0
   1698c:	str	ip, [fp, #-52]	; 0xffffffcc
   16990:	beq	169c8 <__assert_fail@plt+0x59cc>
   16994:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16998:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1699c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   169a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   169a4:	movw	ip, #63540	; 0xf834
   169a8:	movt	ip, #1
   169ac:	str	r1, [fp, #-56]	; 0xffffffc8
   169b0:	mov	r1, ip
   169b4:	ldr	ip, [fp, #-56]	; 0xffffffc8
   169b8:	str	ip, [sp]
   169bc:	bl	10f30 <fprintf@plt>
   169c0:	str	r0, [fp, #-60]	; 0xffffffc4
   169c4:	b	169e4 <__assert_fail@plt+0x59e8>
   169c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   169cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   169d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   169d4:	movw	r1, #63552	; 0xf840
   169d8:	movt	r1, #1
   169dc:	bl	10f30 <fprintf@plt>
   169e0:	str	r0, [fp, #-64]	; 0xffffffc0
   169e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   169e8:	movw	r1, #63559	; 0xf847
   169ec:	movt	r1, #1
   169f0:	str	r0, [fp, #-68]	; 0xffffffbc
   169f4:	mov	r0, r1
   169f8:	bl	10f0c <gettext@plt>
   169fc:	movw	r1, #64277	; 0xfb15
   16a00:	movt	r1, #1
   16a04:	movw	r3, #2022	; 0x7e6
   16a08:	ldr	lr, [fp, #-68]	; 0xffffffbc
   16a0c:	str	r0, [fp, #-72]	; 0xffffffb8
   16a10:	mov	r0, lr
   16a14:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16a18:	bl	10f30 <fprintf@plt>
   16a1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16a20:	movw	r2, #62871	; 0xf597
   16a24:	movt	r2, #1
   16a28:	str	r0, [fp, #-76]	; 0xffffffb4
   16a2c:	mov	r0, r2
   16a30:	str	r2, [fp, #-80]	; 0xffffffb0
   16a34:	bl	10db0 <fputs_unlocked@plt>
   16a38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16a3c:	movw	r2, #63563	; 0xf84b
   16a40:	movt	r2, #1
   16a44:	str	r0, [fp, #-84]	; 0xffffffac
   16a48:	mov	r0, r2
   16a4c:	str	r1, [fp, #-88]	; 0xffffffa8
   16a50:	bl	10f0c <gettext@plt>
   16a54:	movw	r2, #63734	; 0xf8f6
   16a58:	movt	r2, #1
   16a5c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16a60:	str	r0, [fp, #-92]	; 0xffffffa4
   16a64:	mov	r0, r1
   16a68:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16a6c:	bl	10f30 <fprintf@plt>
   16a70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16a74:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16a78:	str	r0, [fp, #-96]	; 0xffffffa0
   16a7c:	mov	r0, r2
   16a80:	bl	10db0 <fputs_unlocked@plt>
   16a84:	ldr	r1, [fp, #12]
   16a88:	cmp	r1, #9
   16a8c:	str	r0, [fp, #-100]	; 0xffffff9c
   16a90:	str	r1, [fp, #-104]	; 0xffffff98
   16a94:	bhi	16ed4 <__assert_fail@plt+0x5ed8>
   16a98:	add	r0, pc, #8
   16a9c:	ldr	r1, [fp, #-104]	; 0xffffff98
   16aa0:	ldr	r0, [r0, r1, lsl #2]
   16aa4:	mov	pc, r0
   16aa8:	ldrdeq	r6, [r1], -r0
   16aac:	ldrdeq	r6, [r1], -r4
   16ab0:	andeq	r6, r1, r0, lsl fp
   16ab4:	andeq	r6, r1, r4, asr fp
   16ab8:			; <UNDEFINED> instruction: 0x00016bb0
   16abc:	andeq	r6, r1, r8, lsl ip
   16ac0:	andeq	r6, r1, ip, lsl #25
   16ac4:	andeq	r6, r1, ip, lsl #26
   16ac8:	muleq	r1, r8, sp
   16acc:	andeq	r6, r1, r0, lsr lr
   16ad0:	b	16f74 <__assert_fail@plt+0x5f78>
   16ad4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ad8:	movw	r1, #63768	; 0xf918
   16adc:	movt	r1, #1
   16ae0:	str	r0, [fp, #-108]	; 0xffffff94
   16ae4:	mov	r0, r1
   16ae8:	bl	10f0c <gettext@plt>
   16aec:	ldr	r1, [fp, #8]
   16af0:	ldr	r2, [r1]
   16af4:	ldr	r1, [fp, #-108]	; 0xffffff94
   16af8:	str	r0, [fp, #-112]	; 0xffffff90
   16afc:	mov	r0, r1
   16b00:	ldr	r1, [fp, #-112]	; 0xffffff90
   16b04:	bl	10f30 <fprintf@plt>
   16b08:	str	r0, [fp, #-116]	; 0xffffff8c
   16b0c:	b	16f74 <__assert_fail@plt+0x5f78>
   16b10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b14:	movw	r1, #63784	; 0xf928
   16b18:	movt	r1, #1
   16b1c:	str	r0, [fp, #-120]	; 0xffffff88
   16b20:	mov	r0, r1
   16b24:	bl	10f0c <gettext@plt>
   16b28:	ldr	r1, [fp, #8]
   16b2c:	ldr	r2, [r1]
   16b30:	ldr	r1, [fp, #8]
   16b34:	ldr	r3, [r1, #4]
   16b38:	ldr	r1, [fp, #-120]	; 0xffffff88
   16b3c:	str	r0, [fp, #-124]	; 0xffffff84
   16b40:	mov	r0, r1
   16b44:	ldr	r1, [fp, #-124]	; 0xffffff84
   16b48:	bl	10f30 <fprintf@plt>
   16b4c:	str	r0, [fp, #-128]	; 0xffffff80
   16b50:	b	16f74 <__assert_fail@plt+0x5f78>
   16b54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b58:	movw	r1, #63807	; 0xf93f
   16b5c:	movt	r1, #1
   16b60:	str	r0, [fp, #-132]	; 0xffffff7c
   16b64:	mov	r0, r1
   16b68:	bl	10f0c <gettext@plt>
   16b6c:	ldr	r1, [fp, #8]
   16b70:	ldr	r2, [r1]
   16b74:	ldr	r1, [fp, #8]
   16b78:	ldr	r3, [r1, #4]
   16b7c:	ldr	r1, [fp, #8]
   16b80:	ldr	r1, [r1, #8]
   16b84:	ldr	lr, [fp, #-132]	; 0xffffff7c
   16b88:	str	r0, [fp, #-136]	; 0xffffff78
   16b8c:	mov	r0, lr
   16b90:	ldr	ip, [fp, #-136]	; 0xffffff78
   16b94:	str	r1, [fp, #-140]	; 0xffffff74
   16b98:	mov	r1, ip
   16b9c:	ldr	r4, [fp, #-140]	; 0xffffff74
   16ba0:	str	r4, [sp]
   16ba4:	bl	10f30 <fprintf@plt>
   16ba8:	str	r0, [sp, #144]	; 0x90
   16bac:	b	16f74 <__assert_fail@plt+0x5f78>
   16bb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16bb4:	movw	r1, #63835	; 0xf95b
   16bb8:	movt	r1, #1
   16bbc:	str	r0, [sp, #140]	; 0x8c
   16bc0:	mov	r0, r1
   16bc4:	bl	10f0c <gettext@plt>
   16bc8:	ldr	r1, [fp, #8]
   16bcc:	ldr	r2, [r1]
   16bd0:	ldr	r1, [fp, #8]
   16bd4:	ldr	r3, [r1, #4]
   16bd8:	ldr	r1, [fp, #8]
   16bdc:	ldr	r1, [r1, #8]
   16be0:	ldr	lr, [fp, #8]
   16be4:	ldr	lr, [lr, #12]
   16be8:	ldr	ip, [sp, #140]	; 0x8c
   16bec:	str	r0, [sp, #136]	; 0x88
   16bf0:	mov	r0, ip
   16bf4:	ldr	r4, [sp, #136]	; 0x88
   16bf8:	str	r1, [sp, #132]	; 0x84
   16bfc:	mov	r1, r4
   16c00:	ldr	r5, [sp, #132]	; 0x84
   16c04:	str	r5, [sp]
   16c08:	str	lr, [sp, #4]
   16c0c:	bl	10f30 <fprintf@plt>
   16c10:	str	r0, [sp, #128]	; 0x80
   16c14:	b	16f74 <__assert_fail@plt+0x5f78>
   16c18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c1c:	movw	r1, #63867	; 0xf97b
   16c20:	movt	r1, #1
   16c24:	str	r0, [sp, #124]	; 0x7c
   16c28:	mov	r0, r1
   16c2c:	bl	10f0c <gettext@plt>
   16c30:	ldr	r1, [fp, #8]
   16c34:	ldr	r2, [r1]
   16c38:	ldr	r1, [fp, #8]
   16c3c:	ldr	r3, [r1, #4]
   16c40:	ldr	r1, [fp, #8]
   16c44:	ldr	r1, [r1, #8]
   16c48:	ldr	lr, [fp, #8]
   16c4c:	ldr	lr, [lr, #12]
   16c50:	ldr	ip, [fp, #8]
   16c54:	ldr	ip, [ip, #16]
   16c58:	ldr	r4, [sp, #124]	; 0x7c
   16c5c:	str	r0, [sp, #120]	; 0x78
   16c60:	mov	r0, r4
   16c64:	ldr	r5, [sp, #120]	; 0x78
   16c68:	str	r1, [sp, #116]	; 0x74
   16c6c:	mov	r1, r5
   16c70:	ldr	r6, [sp, #116]	; 0x74
   16c74:	str	r6, [sp]
   16c78:	str	lr, [sp, #4]
   16c7c:	str	ip, [sp, #8]
   16c80:	bl	10f30 <fprintf@plt>
   16c84:	str	r0, [sp, #112]	; 0x70
   16c88:	b	16f74 <__assert_fail@plt+0x5f78>
   16c8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c90:	movw	r1, #63903	; 0xf99f
   16c94:	movt	r1, #1
   16c98:	str	r0, [sp, #108]	; 0x6c
   16c9c:	mov	r0, r1
   16ca0:	bl	10f0c <gettext@plt>
   16ca4:	ldr	r1, [fp, #8]
   16ca8:	ldr	r2, [r1]
   16cac:	ldr	r1, [fp, #8]
   16cb0:	ldr	r3, [r1, #4]
   16cb4:	ldr	r1, [fp, #8]
   16cb8:	ldr	r1, [r1, #8]
   16cbc:	ldr	lr, [fp, #8]
   16cc0:	ldr	lr, [lr, #12]
   16cc4:	ldr	ip, [fp, #8]
   16cc8:	ldr	ip, [ip, #16]
   16ccc:	ldr	r4, [fp, #8]
   16cd0:	ldr	r4, [r4, #20]
   16cd4:	ldr	r5, [sp, #108]	; 0x6c
   16cd8:	str	r0, [sp, #104]	; 0x68
   16cdc:	mov	r0, r5
   16ce0:	ldr	r6, [sp, #104]	; 0x68
   16ce4:	str	r1, [sp, #100]	; 0x64
   16ce8:	mov	r1, r6
   16cec:	ldr	r7, [sp, #100]	; 0x64
   16cf0:	str	r7, [sp]
   16cf4:	str	lr, [sp, #4]
   16cf8:	str	ip, [sp, #8]
   16cfc:	str	r4, [sp, #12]
   16d00:	bl	10f30 <fprintf@plt>
   16d04:	str	r0, [sp, #96]	; 0x60
   16d08:	b	16f74 <__assert_fail@plt+0x5f78>
   16d0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d10:	movw	r1, #63943	; 0xf9c7
   16d14:	movt	r1, #1
   16d18:	str	r0, [sp, #92]	; 0x5c
   16d1c:	mov	r0, r1
   16d20:	bl	10f0c <gettext@plt>
   16d24:	ldr	r1, [fp, #8]
   16d28:	ldr	r2, [r1]
   16d2c:	ldr	r1, [fp, #8]
   16d30:	ldr	r3, [r1, #4]
   16d34:	ldr	r1, [fp, #8]
   16d38:	ldr	r1, [r1, #8]
   16d3c:	ldr	lr, [fp, #8]
   16d40:	ldr	lr, [lr, #12]
   16d44:	ldr	ip, [fp, #8]
   16d48:	ldr	ip, [ip, #16]
   16d4c:	ldr	r4, [fp, #8]
   16d50:	ldr	r4, [r4, #20]
   16d54:	ldr	r5, [fp, #8]
   16d58:	ldr	r5, [r5, #24]
   16d5c:	ldr	r6, [sp, #92]	; 0x5c
   16d60:	str	r0, [sp, #88]	; 0x58
   16d64:	mov	r0, r6
   16d68:	ldr	r7, [sp, #88]	; 0x58
   16d6c:	str	r1, [sp, #84]	; 0x54
   16d70:	mov	r1, r7
   16d74:	ldr	r8, [sp, #84]	; 0x54
   16d78:	str	r8, [sp]
   16d7c:	str	lr, [sp, #4]
   16d80:	str	ip, [sp, #8]
   16d84:	str	r4, [sp, #12]
   16d88:	str	r5, [sp, #16]
   16d8c:	bl	10f30 <fprintf@plt>
   16d90:	str	r0, [sp, #80]	; 0x50
   16d94:	b	16f74 <__assert_fail@plt+0x5f78>
   16d98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d9c:	movw	r1, #63987	; 0xf9f3
   16da0:	movt	r1, #1
   16da4:	str	r0, [sp, #76]	; 0x4c
   16da8:	mov	r0, r1
   16dac:	bl	10f0c <gettext@plt>
   16db0:	ldr	r1, [fp, #8]
   16db4:	ldr	r2, [r1]
   16db8:	ldr	r1, [fp, #8]
   16dbc:	ldr	r3, [r1, #4]
   16dc0:	ldr	r1, [fp, #8]
   16dc4:	ldr	r1, [r1, #8]
   16dc8:	ldr	lr, [fp, #8]
   16dcc:	ldr	lr, [lr, #12]
   16dd0:	ldr	ip, [fp, #8]
   16dd4:	ldr	ip, [ip, #16]
   16dd8:	ldr	r4, [fp, #8]
   16ddc:	ldr	r4, [r4, #20]
   16de0:	ldr	r5, [fp, #8]
   16de4:	ldr	r5, [r5, #24]
   16de8:	ldr	r6, [fp, #8]
   16dec:	ldr	r6, [r6, #28]
   16df0:	ldr	r7, [sp, #76]	; 0x4c
   16df4:	str	r0, [sp, #72]	; 0x48
   16df8:	mov	r0, r7
   16dfc:	ldr	r8, [sp, #72]	; 0x48
   16e00:	str	r1, [sp, #68]	; 0x44
   16e04:	mov	r1, r8
   16e08:	ldr	r9, [sp, #68]	; 0x44
   16e0c:	str	r9, [sp]
   16e10:	str	lr, [sp, #4]
   16e14:	str	ip, [sp, #8]
   16e18:	str	r4, [sp, #12]
   16e1c:	str	r5, [sp, #16]
   16e20:	str	r6, [sp, #20]
   16e24:	bl	10f30 <fprintf@plt>
   16e28:	str	r0, [sp, #64]	; 0x40
   16e2c:	b	16f74 <__assert_fail@plt+0x5f78>
   16e30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16e34:	movw	r1, #64035	; 0xfa23
   16e38:	movt	r1, #1
   16e3c:	str	r0, [sp, #60]	; 0x3c
   16e40:	mov	r0, r1
   16e44:	bl	10f0c <gettext@plt>
   16e48:	ldr	r1, [fp, #8]
   16e4c:	ldr	r2, [r1]
   16e50:	ldr	r1, [fp, #8]
   16e54:	ldr	r3, [r1, #4]
   16e58:	ldr	r1, [fp, #8]
   16e5c:	ldr	r1, [r1, #8]
   16e60:	ldr	lr, [fp, #8]
   16e64:	ldr	lr, [lr, #12]
   16e68:	ldr	ip, [fp, #8]
   16e6c:	ldr	ip, [ip, #16]
   16e70:	ldr	r4, [fp, #8]
   16e74:	ldr	r4, [r4, #20]
   16e78:	ldr	r5, [fp, #8]
   16e7c:	ldr	r5, [r5, #24]
   16e80:	ldr	r6, [fp, #8]
   16e84:	ldr	r6, [r6, #28]
   16e88:	ldr	r7, [fp, #8]
   16e8c:	ldr	r7, [r7, #32]
   16e90:	ldr	r8, [sp, #60]	; 0x3c
   16e94:	str	r0, [sp, #56]	; 0x38
   16e98:	mov	r0, r8
   16e9c:	ldr	r9, [sp, #56]	; 0x38
   16ea0:	str	r1, [sp, #52]	; 0x34
   16ea4:	mov	r1, r9
   16ea8:	ldr	sl, [sp, #52]	; 0x34
   16eac:	str	sl, [sp]
   16eb0:	str	lr, [sp, #4]
   16eb4:	str	ip, [sp, #8]
   16eb8:	str	r4, [sp, #12]
   16ebc:	str	r5, [sp, #16]
   16ec0:	str	r6, [sp, #20]
   16ec4:	str	r7, [sp, #24]
   16ec8:	bl	10f30 <fprintf@plt>
   16ecc:	str	r0, [sp, #48]	; 0x30
   16ed0:	b	16f74 <__assert_fail@plt+0x5f78>
   16ed4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ed8:	movw	r1, #64087	; 0xfa57
   16edc:	movt	r1, #1
   16ee0:	str	r0, [sp, #44]	; 0x2c
   16ee4:	mov	r0, r1
   16ee8:	bl	10f0c <gettext@plt>
   16eec:	ldr	r1, [fp, #8]
   16ef0:	ldr	r2, [r1]
   16ef4:	ldr	r1, [fp, #8]
   16ef8:	ldr	r3, [r1, #4]
   16efc:	ldr	r1, [fp, #8]
   16f00:	ldr	r1, [r1, #8]
   16f04:	ldr	lr, [fp, #8]
   16f08:	ldr	lr, [lr, #12]
   16f0c:	ldr	ip, [fp, #8]
   16f10:	ldr	ip, [ip, #16]
   16f14:	ldr	r4, [fp, #8]
   16f18:	ldr	r4, [r4, #20]
   16f1c:	ldr	r5, [fp, #8]
   16f20:	ldr	r5, [r5, #24]
   16f24:	ldr	r6, [fp, #8]
   16f28:	ldr	r6, [r6, #28]
   16f2c:	ldr	r7, [fp, #8]
   16f30:	ldr	r7, [r7, #32]
   16f34:	ldr	r8, [sp, #44]	; 0x2c
   16f38:	str	r0, [sp, #40]	; 0x28
   16f3c:	mov	r0, r8
   16f40:	ldr	r9, [sp, #40]	; 0x28
   16f44:	str	r1, [sp, #36]	; 0x24
   16f48:	mov	r1, r9
   16f4c:	ldr	sl, [sp, #36]	; 0x24
   16f50:	str	sl, [sp]
   16f54:	str	lr, [sp, #4]
   16f58:	str	ip, [sp, #8]
   16f5c:	str	r4, [sp, #12]
   16f60:	str	r5, [sp, #16]
   16f64:	str	r6, [sp, #20]
   16f68:	str	r7, [sp, #24]
   16f6c:	bl	10f30 <fprintf@plt>
   16f70:	str	r0, [sp, #32]
   16f74:	sub	sp, fp, #28
   16f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f7c:	push	{fp, lr}
   16f80:	mov	fp, sp
   16f84:	sub	sp, sp, #32
   16f88:	ldr	ip, [fp, #8]
   16f8c:	str	r0, [fp, #-4]
   16f90:	str	r1, [fp, #-8]
   16f94:	str	r2, [fp, #-12]
   16f98:	str	r3, [sp, #16]
   16f9c:	movw	r0, #0
   16fa0:	str	r0, [sp, #12]
   16fa4:	str	ip, [sp, #8]
   16fa8:	ldr	r0, [fp, #8]
   16fac:	ldr	r1, [sp, #12]
   16fb0:	add	r0, r0, r1, lsl #2
   16fb4:	ldr	r0, [r0]
   16fb8:	movw	r1, #0
   16fbc:	cmp	r0, r1
   16fc0:	beq	16fd8 <__assert_fail@plt+0x5fdc>
   16fc4:	b	16fc8 <__assert_fail@plt+0x5fcc>
   16fc8:	ldr	r0, [sp, #12]
   16fcc:	add	r0, r0, #1
   16fd0:	str	r0, [sp, #12]
   16fd4:	b	16fa8 <__assert_fail@plt+0x5fac>
   16fd8:	ldr	r0, [fp, #-4]
   16fdc:	ldr	r1, [fp, #-8]
   16fe0:	ldr	r2, [fp, #-12]
   16fe4:	ldr	r3, [sp, #16]
   16fe8:	ldr	ip, [fp, #8]
   16fec:	ldr	lr, [sp, #12]
   16ff0:	str	ip, [sp]
   16ff4:	str	lr, [sp, #4]
   16ff8:	bl	16958 <__assert_fail@plt+0x595c>
   16ffc:	mov	sp, fp
   17000:	pop	{fp, pc}
   17004:	push	{fp, lr}
   17008:	mov	fp, sp
   1700c:	sub	sp, sp, #80	; 0x50
   17010:	ldr	ip, [fp, #8]
   17014:	str	ip, [fp, #-4]
   17018:	str	r0, [fp, #-8]
   1701c:	str	r1, [fp, #-12]
   17020:	str	r2, [fp, #-16]
   17024:	str	r3, [fp, #-20]	; 0xffffffec
   17028:	movw	r0, #0
   1702c:	str	r0, [fp, #-24]	; 0xffffffe8
   17030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17034:	cmp	r0, #10
   17038:	movw	r0, #0
   1703c:	str	r0, [sp, #12]
   17040:	bcs	17078 <__assert_fail@plt+0x607c>
   17044:	ldr	r0, [fp, #-4]
   17048:	add	r1, r0, #4
   1704c:	str	r1, [fp, #-4]
   17050:	ldr	r0, [r0]
   17054:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17058:	add	r2, sp, #16
   1705c:	add	r1, r2, r1, lsl #2
   17060:	str	r0, [r1]
   17064:	movw	r1, #0
   17068:	cmp	r0, r1
   1706c:	movw	r0, #0
   17070:	movne	r0, #1
   17074:	str	r0, [sp, #12]
   17078:	ldr	r0, [sp, #12]
   1707c:	tst	r0, #1
   17080:	beq	17098 <__assert_fail@plt+0x609c>
   17084:	b	17088 <__assert_fail@plt+0x608c>
   17088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1708c:	add	r0, r0, #1
   17090:	str	r0, [fp, #-24]	; 0xffffffe8
   17094:	b	17030 <__assert_fail@plt+0x6034>
   17098:	add	r0, sp, #16
   1709c:	ldr	r1, [fp, #-8]
   170a0:	ldr	r2, [fp, #-12]
   170a4:	ldr	r3, [fp, #-16]
   170a8:	ldr	ip, [fp, #-20]	; 0xffffffec
   170ac:	ldr	lr, [fp, #-24]	; 0xffffffe8
   170b0:	str	r0, [sp, #8]
   170b4:	mov	r0, r1
   170b8:	mov	r1, r2
   170bc:	mov	r2, r3
   170c0:	mov	r3, ip
   170c4:	ldr	ip, [sp, #8]
   170c8:	str	ip, [sp]
   170cc:	str	lr, [sp, #4]
   170d0:	bl	16958 <__assert_fail@plt+0x595c>
   170d4:	mov	sp, fp
   170d8:	pop	{fp, pc}
   170dc:	push	{fp, lr}
   170e0:	mov	fp, sp
   170e4:	sub	sp, sp, #32
   170e8:	str	r0, [fp, #-4]
   170ec:	str	r1, [fp, #-8]
   170f0:	str	r2, [fp, #-12]
   170f4:	str	r3, [sp, #16]
   170f8:	add	r0, fp, #8
   170fc:	str	r0, [sp, #12]
   17100:	ldr	r0, [fp, #-4]
   17104:	ldr	r1, [fp, #-8]
   17108:	ldr	r2, [fp, #-12]
   1710c:	ldr	r3, [sp, #16]
   17110:	ldr	ip, [sp, #12]
   17114:	mov	lr, sp
   17118:	str	ip, [lr]
   1711c:	bl	17004 <__assert_fail@plt+0x6008>
   17120:	add	r0, sp, #12
   17124:	str	r0, [sp, #8]
   17128:	mov	sp, fp
   1712c:	pop	{fp, pc}
   17130:	push	{fp, lr}
   17134:	mov	fp, sp
   17138:	sub	sp, sp, #16
   1713c:	movw	r0, #324	; 0x144
   17140:	movt	r0, #3
   17144:	ldr	r1, [r0]
   17148:	movw	r0, #62871	; 0xf597
   1714c:	movt	r0, #1
   17150:	bl	10db0 <fputs_unlocked@plt>
   17154:	movw	r1, #64147	; 0xfa93
   17158:	movt	r1, #1
   1715c:	str	r0, [fp, #-4]
   17160:	mov	r0, r1
   17164:	bl	10f0c <gettext@plt>
   17168:	movw	r1, #64167	; 0xfaa7
   1716c:	movt	r1, #1
   17170:	bl	10dd4 <printf@plt>
   17174:	movw	r1, #64189	; 0xfabd
   17178:	movt	r1, #1
   1717c:	str	r0, [sp, #8]
   17180:	mov	r0, r1
   17184:	bl	10f0c <gettext@plt>
   17188:	movw	r1, #62004	; 0xf234
   1718c:	movt	r1, #1
   17190:	movw	r2, #62680	; 0xf4d8
   17194:	movt	r2, #1
   17198:	bl	10dd4 <printf@plt>
   1719c:	movw	r1, #64209	; 0xfad1
   171a0:	movt	r1, #1
   171a4:	str	r0, [sp, #4]
   171a8:	mov	r0, r1
   171ac:	bl	10f0c <gettext@plt>
   171b0:	movw	r1, #64248	; 0xfaf8
   171b4:	movt	r1, #1
   171b8:	bl	10dd4 <printf@plt>
   171bc:	str	r0, [sp]
   171c0:	mov	sp, fp
   171c4:	pop	{fp, pc}
   171c8:	push	{fp, lr}
   171cc:	mov	fp, sp
   171d0:	sub	sp, sp, #16
   171d4:	str	r0, [fp, #-4]
   171d8:	str	r1, [sp, #8]
   171dc:	str	r2, [sp, #4]
   171e0:	ldr	r0, [fp, #-4]
   171e4:	ldr	r1, [sp, #8]
   171e8:	ldr	r2, [sp, #4]
   171ec:	bl	171f8 <__assert_fail@plt+0x61fc>
   171f0:	mov	sp, fp
   171f4:	pop	{fp, pc}
   171f8:	push	{fp, lr}
   171fc:	mov	fp, sp
   17200:	sub	sp, sp, #16
   17204:	str	r0, [fp, #-4]
   17208:	str	r1, [sp, #8]
   1720c:	str	r2, [sp, #4]
   17210:	ldr	r0, [fp, #-4]
   17214:	ldr	r1, [sp, #8]
   17218:	ldr	r2, [sp, #4]
   1721c:	bl	1cf98 <__assert_fail@plt+0xbf9c>
   17220:	str	r0, [sp]
   17224:	ldr	r0, [sp]
   17228:	movw	r1, #0
   1722c:	cmp	r0, r1
   17230:	bne	17260 <__assert_fail@plt+0x6264>
   17234:	ldr	r0, [fp, #-4]
   17238:	movw	r1, #0
   1723c:	cmp	r0, r1
   17240:	beq	1725c <__assert_fail@plt+0x6260>
   17244:	ldr	r0, [sp, #8]
   17248:	cmp	r0, #0
   1724c:	beq	17260 <__assert_fail@plt+0x6264>
   17250:	ldr	r0, [sp, #4]
   17254:	cmp	r0, #0
   17258:	beq	17260 <__assert_fail@plt+0x6264>
   1725c:	bl	1a048 <__assert_fail@plt+0x904c>
   17260:	ldr	r0, [sp]
   17264:	mov	sp, fp
   17268:	pop	{fp, pc}
   1726c:	push	{fp, lr}
   17270:	mov	fp, sp
   17274:	sub	sp, sp, #8
   17278:	str	r0, [sp, #4]
   1727c:	ldr	r0, [sp, #4]
   17280:	bl	1c734 <__assert_fail@plt+0xb738>
   17284:	bl	17290 <__assert_fail@plt+0x6294>
   17288:	mov	sp, fp
   1728c:	pop	{fp, pc}
   17290:	push	{fp, lr}
   17294:	mov	fp, sp
   17298:	sub	sp, sp, #8
   1729c:	str	r0, [sp, #4]
   172a0:	ldr	r0, [sp, #4]
   172a4:	movw	r1, #0
   172a8:	cmp	r0, r1
   172ac:	bne	172b4 <__assert_fail@plt+0x62b8>
   172b0:	bl	1a048 <__assert_fail@plt+0x904c>
   172b4:	ldr	r0, [sp, #4]
   172b8:	mov	sp, fp
   172bc:	pop	{fp, pc}
   172c0:	push	{fp, lr}
   172c4:	mov	fp, sp
   172c8:	sub	sp, sp, #8
   172cc:	str	r0, [sp, #4]
   172d0:	ldr	r0, [sp, #4]
   172d4:	bl	1ccd4 <__assert_fail@plt+0xbcd8>
   172d8:	bl	17290 <__assert_fail@plt+0x6294>
   172dc:	mov	sp, fp
   172e0:	pop	{fp, pc}
   172e4:	push	{fp, lr}
   172e8:	mov	fp, sp
   172ec:	sub	sp, sp, #8
   172f0:	str	r0, [sp, #4]
   172f4:	ldr	r0, [sp, #4]
   172f8:	bl	1726c <__assert_fail@plt+0x6270>
   172fc:	mov	sp, fp
   17300:	pop	{fp, pc}
   17304:	push	{fp, lr}
   17308:	mov	fp, sp
   1730c:	sub	sp, sp, #16
   17310:	str	r0, [fp, #-4]
   17314:	str	r1, [sp, #8]
   17318:	ldr	r0, [fp, #-4]
   1731c:	ldr	r1, [sp, #8]
   17320:	bl	1c7a4 <__assert_fail@plt+0xb7a8>
   17324:	str	r0, [sp, #4]
   17328:	ldr	r0, [sp, #4]
   1732c:	movw	r1, #0
   17330:	cmp	r0, r1
   17334:	bne	17358 <__assert_fail@plt+0x635c>
   17338:	ldr	r0, [fp, #-4]
   1733c:	movw	r1, #0
   17340:	cmp	r0, r1
   17344:	beq	17354 <__assert_fail@plt+0x6358>
   17348:	ldr	r0, [sp, #8]
   1734c:	cmp	r0, #0
   17350:	beq	17358 <__assert_fail@plt+0x635c>
   17354:	bl	1a048 <__assert_fail@plt+0x904c>
   17358:	ldr	r0, [sp, #4]
   1735c:	mov	sp, fp
   17360:	pop	{fp, pc}
   17364:	push	{fp, lr}
   17368:	mov	fp, sp
   1736c:	sub	sp, sp, #8
   17370:	str	r0, [sp, #4]
   17374:	str	r1, [sp]
   17378:	ldr	r0, [sp, #4]
   1737c:	ldr	r1, [sp]
   17380:	bl	1cd14 <__assert_fail@plt+0xbd18>
   17384:	bl	17290 <__assert_fail@plt+0x6294>
   17388:	mov	sp, fp
   1738c:	pop	{fp, pc}
   17390:	push	{fp, lr}
   17394:	mov	fp, sp
   17398:	sub	sp, sp, #16
   1739c:	str	r0, [fp, #-4]
   173a0:	str	r1, [sp, #8]
   173a4:	str	r2, [sp, #4]
   173a8:	ldr	r0, [fp, #-4]
   173ac:	ldr	r1, [sp, #8]
   173b0:	ldr	r2, [sp, #4]
   173b4:	bl	1ce0c <__assert_fail@plt+0xbe10>
   173b8:	bl	17290 <__assert_fail@plt+0x6294>
   173bc:	mov	sp, fp
   173c0:	pop	{fp, pc}
   173c4:	push	{fp, lr}
   173c8:	mov	fp, sp
   173cc:	sub	sp, sp, #8
   173d0:	str	r0, [sp, #4]
   173d4:	str	r1, [sp]
   173d8:	ldr	r1, [sp, #4]
   173dc:	ldr	r2, [sp]
   173e0:	movw	r0, #0
   173e4:	bl	171f8 <__assert_fail@plt+0x61fc>
   173e8:	mov	sp, fp
   173ec:	pop	{fp, pc}
   173f0:	push	{fp, lr}
   173f4:	mov	fp, sp
   173f8:	sub	sp, sp, #8
   173fc:	str	r0, [sp, #4]
   17400:	str	r1, [sp]
   17404:	ldr	r1, [sp, #4]
   17408:	ldr	r2, [sp]
   1740c:	movw	r0, #0
   17410:	bl	17390 <__assert_fail@plt+0x6394>
   17414:	mov	sp, fp
   17418:	pop	{fp, pc}
   1741c:	push	{fp, lr}
   17420:	mov	fp, sp
   17424:	sub	sp, sp, #8
   17428:	str	r0, [sp, #4]
   1742c:	str	r1, [sp]
   17430:	ldr	r0, [sp, #4]
   17434:	ldr	r1, [sp]
   17438:	movw	r2, #1
   1743c:	bl	17448 <__assert_fail@plt+0x644c>
   17440:	mov	sp, fp
   17444:	pop	{fp, pc}
   17448:	push	{fp, lr}
   1744c:	mov	fp, sp
   17450:	sub	sp, sp, #16
   17454:	str	r0, [fp, #-4]
   17458:	str	r1, [sp, #8]
   1745c:	str	r2, [sp, #4]
   17460:	ldr	r0, [sp, #8]
   17464:	ldr	r0, [r0]
   17468:	str	r0, [sp]
   1746c:	ldr	r0, [fp, #-4]
   17470:	movw	r1, #0
   17474:	cmp	r0, r1
   17478:	bne	174c4 <__assert_fail@plt+0x64c8>
   1747c:	ldr	r0, [sp]
   17480:	cmp	r0, #0
   17484:	bne	174c0 <__assert_fail@plt+0x64c4>
   17488:	ldr	r0, [sp, #4]
   1748c:	movw	r1, #64	; 0x40
   17490:	udiv	r0, r1, r0
   17494:	str	r0, [sp]
   17498:	ldr	r0, [sp]
   1749c:	cmp	r0, #0
   174a0:	movw	r0, #0
   174a4:	movne	r0, #1
   174a8:	mvn	r1, #0
   174ac:	eor	r0, r0, r1
   174b0:	and	r0, r0, #1
   174b4:	ldr	r1, [sp]
   174b8:	add	r0, r1, r0
   174bc:	str	r0, [sp]
   174c0:	b	174f4 <__assert_fail@plt+0x64f8>
   174c4:	ldr	r0, [sp]
   174c8:	ldr	r1, [sp]
   174cc:	lsr	r1, r1, #1
   174d0:	add	r1, r1, #1
   174d4:	adds	r0, r0, r1
   174d8:	mov	r1, #0
   174dc:	adc	r1, r1, #0
   174e0:	str	r0, [sp]
   174e4:	tst	r1, #1
   174e8:	beq	174f0 <__assert_fail@plt+0x64f4>
   174ec:	bl	1a048 <__assert_fail@plt+0x904c>
   174f0:	b	174f4 <__assert_fail@plt+0x64f8>
   174f4:	ldr	r0, [fp, #-4]
   174f8:	ldr	r1, [sp]
   174fc:	ldr	r2, [sp, #4]
   17500:	bl	171f8 <__assert_fail@plt+0x61fc>
   17504:	str	r0, [fp, #-4]
   17508:	ldr	r0, [sp]
   1750c:	ldr	r1, [sp, #8]
   17510:	str	r0, [r1]
   17514:	ldr	r0, [fp, #-4]
   17518:	mov	sp, fp
   1751c:	pop	{fp, pc}
   17520:	push	{fp, lr}
   17524:	mov	fp, sp
   17528:	sub	sp, sp, #376	; 0x178
   1752c:	ldr	ip, [fp, #8]
   17530:	str	r0, [fp, #-4]
   17534:	str	r1, [fp, #-8]
   17538:	str	r2, [fp, #-12]
   1753c:	str	r3, [fp, #-16]
   17540:	ldr	r0, [fp, #-8]
   17544:	ldr	r0, [r0]
   17548:	str	r0, [fp, #-20]	; 0xffffffec
   1754c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17550:	ldr	r1, [fp, #-20]	; 0xffffffec
   17554:	asr	r1, r1, #1
   17558:	add	r1, r0, r1
   1755c:	mov	r2, #1
   17560:	cmp	r1, r0
   17564:	movwvc	r2, #0
   17568:	str	r1, [fp, #-24]	; 0xffffffe8
   1756c:	tst	r2, #1
   17570:	str	ip, [fp, #-36]	; 0xffffffdc
   17574:	beq	17580 <__assert_fail@plt+0x6584>
   17578:	ldr	r0, [pc, #4044]	; 1854c <__assert_fail@plt+0x7550>
   1757c:	str	r0, [fp, #-24]	; 0xffffffe8
   17580:	ldr	r0, [fp, #-16]
   17584:	movw	r1, #0
   17588:	cmp	r1, r0
   1758c:	bgt	175a8 <__assert_fail@plt+0x65ac>
   17590:	ldr	r0, [fp, #-16]
   17594:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17598:	cmp	r0, r1
   1759c:	bge	175a8 <__assert_fail@plt+0x65ac>
   175a0:	ldr	r0, [fp, #-16]
   175a4:	str	r0, [fp, #-24]	; 0xffffffe8
   175a8:	b	17980 <__assert_fail@plt+0x6984>
   175ac:	b	175b0 <__assert_fail@plt+0x65b4>
   175b0:	ldr	r0, [fp, #8]
   175b4:	cmp	r0, #0
   175b8:	bge	176cc <__assert_fail@plt+0x66d0>
   175bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175c0:	cmp	r0, #0
   175c4:	bge	17650 <__assert_fail@plt+0x6654>
   175c8:	b	175cc <__assert_fail@plt+0x65d0>
   175cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175d0:	ldr	r1, [fp, #8]
   175d4:	movw	r2, #127	; 0x7f
   175d8:	sdiv	r1, r2, r1
   175dc:	cmp	r0, r1
   175e0:	blt	1776c <__assert_fail@plt+0x6770>
   175e4:	b	17784 <__assert_fail@plt+0x6788>
   175e8:	b	175ec <__assert_fail@plt+0x65f0>
   175ec:	ldr	r0, [pc, #4076]	; 185e0 <__assert_fail@plt+0x75e4>
   175f0:	ldr	r1, [fp, #8]
   175f4:	cmp	r1, r0
   175f8:	blt	17610 <__assert_fail@plt+0x6614>
   175fc:	b	1761c <__assert_fail@plt+0x6620>
   17600:	ldr	r0, [fp, #8]
   17604:	movw	r1, #0
   17608:	cmp	r1, r0
   1760c:	bge	1761c <__assert_fail@plt+0x6620>
   17610:	movw	r0, #0
   17614:	str	r0, [fp, #-40]	; 0xffffffd8
   17618:	b	17634 <__assert_fail@plt+0x6638>
   1761c:	ldr	r0, [fp, #8]
   17620:	movw	r1, #0
   17624:	sub	r0, r1, r0
   17628:	movw	r1, #127	; 0x7f
   1762c:	sdiv	r0, r1, r0
   17630:	str	r0, [fp, #-40]	; 0xffffffd8
   17634:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17638:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1763c:	mvn	r2, #0
   17640:	sub	r1, r2, r1
   17644:	cmp	r0, r1
   17648:	ble	1776c <__assert_fail@plt+0x6770>
   1764c:	b	17784 <__assert_fail@plt+0x6788>
   17650:	b	17654 <__assert_fail@plt+0x6658>
   17654:	b	176b0 <__assert_fail@plt+0x66b4>
   17658:	b	176b0 <__assert_fail@plt+0x66b4>
   1765c:	ldr	r0, [fp, #8]
   17660:	cmn	r0, #1
   17664:	bne	176b0 <__assert_fail@plt+0x66b4>
   17668:	b	1766c <__assert_fail@plt+0x6670>
   1766c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17670:	mvn	r1, #127	; 0x7f
   17674:	add	r0, r0, r1
   17678:	movw	r1, #0
   1767c:	cmp	r1, r0
   17680:	blt	1776c <__assert_fail@plt+0x6770>
   17684:	b	17784 <__assert_fail@plt+0x6788>
   17688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1768c:	movw	r1, #0
   17690:	cmp	r1, r0
   17694:	bge	17784 <__assert_fail@plt+0x6788>
   17698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1769c:	sub	r0, r0, #1
   176a0:	movw	r1, #127	; 0x7f
   176a4:	cmp	r1, r0
   176a8:	blt	1776c <__assert_fail@plt+0x6770>
   176ac:	b	17784 <__assert_fail@plt+0x6788>
   176b0:	ldr	r0, [fp, #8]
   176b4:	mvn	r1, #127	; 0x7f
   176b8:	sdiv	r0, r1, r0
   176bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176c0:	cmp	r0, r1
   176c4:	blt	1776c <__assert_fail@plt+0x6770>
   176c8:	b	17784 <__assert_fail@plt+0x6788>
   176cc:	ldr	r0, [fp, #8]
   176d0:	cmp	r0, #0
   176d4:	bne	176dc <__assert_fail@plt+0x66e0>
   176d8:	b	17784 <__assert_fail@plt+0x6788>
   176dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176e0:	cmp	r0, #0
   176e4:	bge	17754 <__assert_fail@plt+0x6758>
   176e8:	b	176ec <__assert_fail@plt+0x66f0>
   176ec:	b	17738 <__assert_fail@plt+0x673c>
   176f0:	b	17738 <__assert_fail@plt+0x673c>
   176f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176f8:	cmn	r0, #1
   176fc:	bne	17738 <__assert_fail@plt+0x673c>
   17700:	b	17704 <__assert_fail@plt+0x6708>
   17704:	ldr	r0, [fp, #8]
   17708:	mvn	r1, #127	; 0x7f
   1770c:	add	r0, r0, r1
   17710:	movw	r1, #0
   17714:	cmp	r1, r0
   17718:	blt	1776c <__assert_fail@plt+0x6770>
   1771c:	b	17784 <__assert_fail@plt+0x6788>
   17720:	ldr	r0, [fp, #8]
   17724:	sub	r0, r0, #1
   17728:	movw	r1, #127	; 0x7f
   1772c:	cmp	r1, r0
   17730:	blt	1776c <__assert_fail@plt+0x6770>
   17734:	b	17784 <__assert_fail@plt+0x6788>
   17738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1773c:	mvn	r1, #127	; 0x7f
   17740:	sdiv	r0, r1, r0
   17744:	ldr	r1, [fp, #8]
   17748:	cmp	r0, r1
   1774c:	blt	1776c <__assert_fail@plt+0x6770>
   17750:	b	17784 <__assert_fail@plt+0x6788>
   17754:	ldr	r0, [fp, #8]
   17758:	movw	r1, #127	; 0x7f
   1775c:	sdiv	r0, r1, r0
   17760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17764:	cmp	r0, r1
   17768:	bge	17784 <__assert_fail@plt+0x6788>
   1776c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17770:	ldr	r1, [fp, #8]
   17774:	mul	r0, r0, r1
   17778:	sxtb	r0, r0
   1777c:	str	r0, [fp, #-28]	; 0xffffffe4
   17780:	b	18998 <__assert_fail@plt+0x799c>
   17784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17788:	ldr	r1, [fp, #8]
   1778c:	mul	r0, r0, r1
   17790:	sxtb	r0, r0
   17794:	str	r0, [fp, #-28]	; 0xffffffe4
   17798:	b	189a8 <__assert_fail@plt+0x79ac>
   1779c:	ldr	r0, [fp, #8]
   177a0:	cmp	r0, #0
   177a4:	bge	178b4 <__assert_fail@plt+0x68b8>
   177a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177ac:	cmp	r0, #0
   177b0:	bge	1783c <__assert_fail@plt+0x6840>
   177b4:	b	177b8 <__assert_fail@plt+0x67bc>
   177b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177bc:	ldr	r1, [fp, #8]
   177c0:	movw	r2, #255	; 0xff
   177c4:	sdiv	r1, r2, r1
   177c8:	cmp	r0, r1
   177cc:	blt	17950 <__assert_fail@plt+0x6954>
   177d0:	b	17968 <__assert_fail@plt+0x696c>
   177d4:	b	177d8 <__assert_fail@plt+0x67dc>
   177d8:	ldr	r0, [pc, #3584]	; 185e0 <__assert_fail@plt+0x75e4>
   177dc:	ldr	r1, [fp, #8]
   177e0:	cmp	r1, r0
   177e4:	blt	177fc <__assert_fail@plt+0x6800>
   177e8:	b	17808 <__assert_fail@plt+0x680c>
   177ec:	ldr	r0, [fp, #8]
   177f0:	movw	r1, #0
   177f4:	cmp	r1, r0
   177f8:	bge	17808 <__assert_fail@plt+0x680c>
   177fc:	movw	r0, #0
   17800:	str	r0, [fp, #-44]	; 0xffffffd4
   17804:	b	17820 <__assert_fail@plt+0x6824>
   17808:	ldr	r0, [fp, #8]
   1780c:	movw	r1, #0
   17810:	sub	r0, r1, r0
   17814:	movw	r1, #255	; 0xff
   17818:	sdiv	r0, r1, r0
   1781c:	str	r0, [fp, #-44]	; 0xffffffd4
   17820:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17828:	mvn	r2, #0
   1782c:	sub	r1, r2, r1
   17830:	cmp	r0, r1
   17834:	ble	17950 <__assert_fail@plt+0x6954>
   17838:	b	17968 <__assert_fail@plt+0x696c>
   1783c:	b	17840 <__assert_fail@plt+0x6844>
   17840:	b	17898 <__assert_fail@plt+0x689c>
   17844:	b	17898 <__assert_fail@plt+0x689c>
   17848:	ldr	r0, [fp, #8]
   1784c:	cmn	r0, #1
   17850:	bne	17898 <__assert_fail@plt+0x689c>
   17854:	b	17858 <__assert_fail@plt+0x685c>
   17858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1785c:	add	r0, r0, #0
   17860:	movw	r1, #0
   17864:	cmp	r1, r0
   17868:	blt	17950 <__assert_fail@plt+0x6954>
   1786c:	b	17968 <__assert_fail@plt+0x696c>
   17870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17874:	movw	r1, #0
   17878:	cmp	r1, r0
   1787c:	bge	17968 <__assert_fail@plt+0x696c>
   17880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17884:	sub	r0, r0, #1
   17888:	mvn	r1, #0
   1788c:	cmp	r1, r0
   17890:	blt	17950 <__assert_fail@plt+0x6954>
   17894:	b	17968 <__assert_fail@plt+0x696c>
   17898:	ldr	r0, [fp, #8]
   1789c:	movw	r1, #0
   178a0:	sdiv	r0, r1, r0
   178a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178a8:	cmp	r0, r1
   178ac:	blt	17950 <__assert_fail@plt+0x6954>
   178b0:	b	17968 <__assert_fail@plt+0x696c>
   178b4:	ldr	r0, [fp, #8]
   178b8:	cmp	r0, #0
   178bc:	bne	178c4 <__assert_fail@plt+0x68c8>
   178c0:	b	17968 <__assert_fail@plt+0x696c>
   178c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178c8:	cmp	r0, #0
   178cc:	bge	17938 <__assert_fail@plt+0x693c>
   178d0:	b	178d4 <__assert_fail@plt+0x68d8>
   178d4:	b	1791c <__assert_fail@plt+0x6920>
   178d8:	b	1791c <__assert_fail@plt+0x6920>
   178dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178e0:	cmn	r0, #1
   178e4:	bne	1791c <__assert_fail@plt+0x6920>
   178e8:	b	178ec <__assert_fail@plt+0x68f0>
   178ec:	ldr	r0, [fp, #8]
   178f0:	add	r0, r0, #0
   178f4:	movw	r1, #0
   178f8:	cmp	r1, r0
   178fc:	blt	17950 <__assert_fail@plt+0x6954>
   17900:	b	17968 <__assert_fail@plt+0x696c>
   17904:	ldr	r0, [fp, #8]
   17908:	sub	r0, r0, #1
   1790c:	mvn	r1, #0
   17910:	cmp	r1, r0
   17914:	blt	17950 <__assert_fail@plt+0x6954>
   17918:	b	17968 <__assert_fail@plt+0x696c>
   1791c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17920:	movw	r1, #0
   17924:	sdiv	r0, r1, r0
   17928:	ldr	r1, [fp, #8]
   1792c:	cmp	r0, r1
   17930:	blt	17950 <__assert_fail@plt+0x6954>
   17934:	b	17968 <__assert_fail@plt+0x696c>
   17938:	ldr	r0, [fp, #8]
   1793c:	movw	r1, #255	; 0xff
   17940:	sdiv	r0, r1, r0
   17944:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17948:	cmp	r0, r1
   1794c:	bge	17968 <__assert_fail@plt+0x696c>
   17950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17954:	ldr	r1, [fp, #8]
   17958:	mul	r0, r0, r1
   1795c:	and	r0, r0, #255	; 0xff
   17960:	str	r0, [fp, #-28]	; 0xffffffe4
   17964:	b	18998 <__assert_fail@plt+0x799c>
   17968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1796c:	ldr	r1, [fp, #8]
   17970:	mul	r0, r0, r1
   17974:	and	r0, r0, #255	; 0xff
   17978:	str	r0, [fp, #-28]	; 0xffffffe4
   1797c:	b	189a8 <__assert_fail@plt+0x79ac>
   17980:	b	17d58 <__assert_fail@plt+0x6d5c>
   17984:	b	17988 <__assert_fail@plt+0x698c>
   17988:	ldr	r0, [fp, #8]
   1798c:	cmp	r0, #0
   17990:	bge	17aa4 <__assert_fail@plt+0x6aa8>
   17994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17998:	cmp	r0, #0
   1799c:	bge	17a28 <__assert_fail@plt+0x6a2c>
   179a0:	b	179a4 <__assert_fail@plt+0x69a8>
   179a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179a8:	ldr	r1, [fp, #8]
   179ac:	movw	r2, #32767	; 0x7fff
   179b0:	sdiv	r1, r2, r1
   179b4:	cmp	r0, r1
   179b8:	blt	17b44 <__assert_fail@plt+0x6b48>
   179bc:	b	17b5c <__assert_fail@plt+0x6b60>
   179c0:	b	179c4 <__assert_fail@plt+0x69c8>
   179c4:	ldr	r0, [pc, #3092]	; 185e0 <__assert_fail@plt+0x75e4>
   179c8:	ldr	r1, [fp, #8]
   179cc:	cmp	r1, r0
   179d0:	blt	179e8 <__assert_fail@plt+0x69ec>
   179d4:	b	179f4 <__assert_fail@plt+0x69f8>
   179d8:	ldr	r0, [fp, #8]
   179dc:	movw	r1, #0
   179e0:	cmp	r1, r0
   179e4:	bge	179f4 <__assert_fail@plt+0x69f8>
   179e8:	movw	r0, #0
   179ec:	str	r0, [fp, #-48]	; 0xffffffd0
   179f0:	b	17a0c <__assert_fail@plt+0x6a10>
   179f4:	ldr	r0, [fp, #8]
   179f8:	movw	r1, #0
   179fc:	sub	r0, r1, r0
   17a00:	movw	r1, #32767	; 0x7fff
   17a04:	sdiv	r0, r1, r0
   17a08:	str	r0, [fp, #-48]	; 0xffffffd0
   17a0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17a10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a14:	mvn	r2, #0
   17a18:	sub	r1, r2, r1
   17a1c:	cmp	r0, r1
   17a20:	ble	17b44 <__assert_fail@plt+0x6b48>
   17a24:	b	17b5c <__assert_fail@plt+0x6b60>
   17a28:	b	17a2c <__assert_fail@plt+0x6a30>
   17a2c:	b	17a88 <__assert_fail@plt+0x6a8c>
   17a30:	b	17a88 <__assert_fail@plt+0x6a8c>
   17a34:	ldr	r0, [fp, #8]
   17a38:	cmn	r0, #1
   17a3c:	bne	17a88 <__assert_fail@plt+0x6a8c>
   17a40:	b	17a44 <__assert_fail@plt+0x6a48>
   17a44:	ldr	r0, [pc, #3928]	; 189a4 <__assert_fail@plt+0x79a8>
   17a48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a4c:	add	r0, r1, r0
   17a50:	movw	r1, #0
   17a54:	cmp	r1, r0
   17a58:	blt	17b44 <__assert_fail@plt+0x6b48>
   17a5c:	b	17b5c <__assert_fail@plt+0x6b60>
   17a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a64:	movw	r1, #0
   17a68:	cmp	r1, r0
   17a6c:	bge	17b5c <__assert_fail@plt+0x6b60>
   17a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a74:	sub	r0, r0, #1
   17a78:	movw	r1, #32767	; 0x7fff
   17a7c:	cmp	r1, r0
   17a80:	blt	17b44 <__assert_fail@plt+0x6b48>
   17a84:	b	17b5c <__assert_fail@plt+0x6b60>
   17a88:	ldr	r0, [pc, #3860]	; 189a4 <__assert_fail@plt+0x79a8>
   17a8c:	ldr	r1, [fp, #8]
   17a90:	sdiv	r0, r0, r1
   17a94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a98:	cmp	r0, r1
   17a9c:	blt	17b44 <__assert_fail@plt+0x6b48>
   17aa0:	b	17b5c <__assert_fail@plt+0x6b60>
   17aa4:	ldr	r0, [fp, #8]
   17aa8:	cmp	r0, #0
   17aac:	bne	17ab4 <__assert_fail@plt+0x6ab8>
   17ab0:	b	17b5c <__assert_fail@plt+0x6b60>
   17ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ab8:	cmp	r0, #0
   17abc:	bge	17b2c <__assert_fail@plt+0x6b30>
   17ac0:	b	17ac4 <__assert_fail@plt+0x6ac8>
   17ac4:	b	17b10 <__assert_fail@plt+0x6b14>
   17ac8:	b	17b10 <__assert_fail@plt+0x6b14>
   17acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ad0:	cmn	r0, #1
   17ad4:	bne	17b10 <__assert_fail@plt+0x6b14>
   17ad8:	b	17adc <__assert_fail@plt+0x6ae0>
   17adc:	ldr	r0, [pc, #3776]	; 189a4 <__assert_fail@plt+0x79a8>
   17ae0:	ldr	r1, [fp, #8]
   17ae4:	add	r0, r1, r0
   17ae8:	movw	r1, #0
   17aec:	cmp	r1, r0
   17af0:	blt	17b44 <__assert_fail@plt+0x6b48>
   17af4:	b	17b5c <__assert_fail@plt+0x6b60>
   17af8:	ldr	r0, [fp, #8]
   17afc:	sub	r0, r0, #1
   17b00:	movw	r1, #32767	; 0x7fff
   17b04:	cmp	r1, r0
   17b08:	blt	17b44 <__assert_fail@plt+0x6b48>
   17b0c:	b	17b5c <__assert_fail@plt+0x6b60>
   17b10:	ldr	r0, [pc, #3724]	; 189a4 <__assert_fail@plt+0x79a8>
   17b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b18:	sdiv	r0, r0, r1
   17b1c:	ldr	r1, [fp, #8]
   17b20:	cmp	r0, r1
   17b24:	blt	17b44 <__assert_fail@plt+0x6b48>
   17b28:	b	17b5c <__assert_fail@plt+0x6b60>
   17b2c:	ldr	r0, [fp, #8]
   17b30:	movw	r1, #32767	; 0x7fff
   17b34:	sdiv	r0, r1, r0
   17b38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b3c:	cmp	r0, r1
   17b40:	bge	17b5c <__assert_fail@plt+0x6b60>
   17b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b48:	ldr	r1, [fp, #8]
   17b4c:	mul	r0, r0, r1
   17b50:	sxth	r0, r0
   17b54:	str	r0, [fp, #-28]	; 0xffffffe4
   17b58:	b	18998 <__assert_fail@plt+0x799c>
   17b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b60:	ldr	r1, [fp, #8]
   17b64:	mul	r0, r0, r1
   17b68:	sxth	r0, r0
   17b6c:	str	r0, [fp, #-28]	; 0xffffffe4
   17b70:	b	189a8 <__assert_fail@plt+0x79ac>
   17b74:	ldr	r0, [fp, #8]
   17b78:	cmp	r0, #0
   17b7c:	bge	17c8c <__assert_fail@plt+0x6c90>
   17b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b84:	cmp	r0, #0
   17b88:	bge	17c14 <__assert_fail@plt+0x6c18>
   17b8c:	b	17b90 <__assert_fail@plt+0x6b94>
   17b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b94:	ldr	r1, [fp, #8]
   17b98:	movw	r2, #65535	; 0xffff
   17b9c:	sdiv	r1, r2, r1
   17ba0:	cmp	r0, r1
   17ba4:	blt	17d28 <__assert_fail@plt+0x6d2c>
   17ba8:	b	17d40 <__assert_fail@plt+0x6d44>
   17bac:	b	17bb0 <__assert_fail@plt+0x6bb4>
   17bb0:	ldr	r0, [pc, #2600]	; 185e0 <__assert_fail@plt+0x75e4>
   17bb4:	ldr	r1, [fp, #8]
   17bb8:	cmp	r1, r0
   17bbc:	blt	17bd4 <__assert_fail@plt+0x6bd8>
   17bc0:	b	17be0 <__assert_fail@plt+0x6be4>
   17bc4:	ldr	r0, [fp, #8]
   17bc8:	movw	r1, #0
   17bcc:	cmp	r1, r0
   17bd0:	bge	17be0 <__assert_fail@plt+0x6be4>
   17bd4:	movw	r0, #0
   17bd8:	str	r0, [fp, #-52]	; 0xffffffcc
   17bdc:	b	17bf8 <__assert_fail@plt+0x6bfc>
   17be0:	ldr	r0, [fp, #8]
   17be4:	movw	r1, #0
   17be8:	sub	r0, r1, r0
   17bec:	movw	r1, #65535	; 0xffff
   17bf0:	sdiv	r0, r1, r0
   17bf4:	str	r0, [fp, #-52]	; 0xffffffcc
   17bf8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17bfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c00:	mvn	r2, #0
   17c04:	sub	r1, r2, r1
   17c08:	cmp	r0, r1
   17c0c:	ble	17d28 <__assert_fail@plt+0x6d2c>
   17c10:	b	17d40 <__assert_fail@plt+0x6d44>
   17c14:	b	17c18 <__assert_fail@plt+0x6c1c>
   17c18:	b	17c70 <__assert_fail@plt+0x6c74>
   17c1c:	b	17c70 <__assert_fail@plt+0x6c74>
   17c20:	ldr	r0, [fp, #8]
   17c24:	cmn	r0, #1
   17c28:	bne	17c70 <__assert_fail@plt+0x6c74>
   17c2c:	b	17c30 <__assert_fail@plt+0x6c34>
   17c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c34:	add	r0, r0, #0
   17c38:	movw	r1, #0
   17c3c:	cmp	r1, r0
   17c40:	blt	17d28 <__assert_fail@plt+0x6d2c>
   17c44:	b	17d40 <__assert_fail@plt+0x6d44>
   17c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c4c:	movw	r1, #0
   17c50:	cmp	r1, r0
   17c54:	bge	17d40 <__assert_fail@plt+0x6d44>
   17c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c5c:	sub	r0, r0, #1
   17c60:	mvn	r1, #0
   17c64:	cmp	r1, r0
   17c68:	blt	17d28 <__assert_fail@plt+0x6d2c>
   17c6c:	b	17d40 <__assert_fail@plt+0x6d44>
   17c70:	ldr	r0, [fp, #8]
   17c74:	movw	r1, #0
   17c78:	sdiv	r0, r1, r0
   17c7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c80:	cmp	r0, r1
   17c84:	blt	17d28 <__assert_fail@plt+0x6d2c>
   17c88:	b	17d40 <__assert_fail@plt+0x6d44>
   17c8c:	ldr	r0, [fp, #8]
   17c90:	cmp	r0, #0
   17c94:	bne	17c9c <__assert_fail@plt+0x6ca0>
   17c98:	b	17d40 <__assert_fail@plt+0x6d44>
   17c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ca0:	cmp	r0, #0
   17ca4:	bge	17d10 <__assert_fail@plt+0x6d14>
   17ca8:	b	17cac <__assert_fail@plt+0x6cb0>
   17cac:	b	17cf4 <__assert_fail@plt+0x6cf8>
   17cb0:	b	17cf4 <__assert_fail@plt+0x6cf8>
   17cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cb8:	cmn	r0, #1
   17cbc:	bne	17cf4 <__assert_fail@plt+0x6cf8>
   17cc0:	b	17cc4 <__assert_fail@plt+0x6cc8>
   17cc4:	ldr	r0, [fp, #8]
   17cc8:	add	r0, r0, #0
   17ccc:	movw	r1, #0
   17cd0:	cmp	r1, r0
   17cd4:	blt	17d28 <__assert_fail@plt+0x6d2c>
   17cd8:	b	17d40 <__assert_fail@plt+0x6d44>
   17cdc:	ldr	r0, [fp, #8]
   17ce0:	sub	r0, r0, #1
   17ce4:	mvn	r1, #0
   17ce8:	cmp	r1, r0
   17cec:	blt	17d28 <__assert_fail@plt+0x6d2c>
   17cf0:	b	17d40 <__assert_fail@plt+0x6d44>
   17cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf8:	movw	r1, #0
   17cfc:	sdiv	r0, r1, r0
   17d00:	ldr	r1, [fp, #8]
   17d04:	cmp	r0, r1
   17d08:	blt	17d28 <__assert_fail@plt+0x6d2c>
   17d0c:	b	17d40 <__assert_fail@plt+0x6d44>
   17d10:	ldr	r0, [fp, #8]
   17d14:	movw	r1, #65535	; 0xffff
   17d18:	sdiv	r0, r1, r0
   17d1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d20:	cmp	r0, r1
   17d24:	bge	17d40 <__assert_fail@plt+0x6d44>
   17d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d2c:	ldr	r1, [fp, #8]
   17d30:	mul	r0, r0, r1
   17d34:	uxth	r0, r0
   17d38:	str	r0, [fp, #-28]	; 0xffffffe4
   17d3c:	b	18998 <__assert_fail@plt+0x799c>
   17d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d44:	ldr	r1, [fp, #8]
   17d48:	mul	r0, r0, r1
   17d4c:	uxth	r0, r0
   17d50:	str	r0, [fp, #-28]	; 0xffffffe4
   17d54:	b	189a8 <__assert_fail@plt+0x79ac>
   17d58:	b	17d5c <__assert_fail@plt+0x6d60>
   17d5c:	b	17d60 <__assert_fail@plt+0x6d64>
   17d60:	ldr	r0, [fp, #8]
   17d64:	cmp	r0, #0
   17d68:	bge	17e6c <__assert_fail@plt+0x6e70>
   17d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d70:	cmp	r0, #0
   17d74:	bge	17e00 <__assert_fail@plt+0x6e04>
   17d78:	b	17d7c <__assert_fail@plt+0x6d80>
   17d7c:	ldr	r0, [pc, #1992]	; 1854c <__assert_fail@plt+0x7550>
   17d80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d84:	ldr	r2, [fp, #8]
   17d88:	sdiv	r0, r0, r2
   17d8c:	cmp	r1, r0
   17d90:	blt	17efc <__assert_fail@plt+0x6f00>
   17d94:	b	17f10 <__assert_fail@plt+0x6f14>
   17d98:	b	17d9c <__assert_fail@plt+0x6da0>
   17d9c:	ldr	r0, [pc, #2108]	; 185e0 <__assert_fail@plt+0x75e4>
   17da0:	ldr	r1, [fp, #8]
   17da4:	cmp	r1, r0
   17da8:	blt	17dc0 <__assert_fail@plt+0x6dc4>
   17dac:	b	17dcc <__assert_fail@plt+0x6dd0>
   17db0:	ldr	r0, [fp, #8]
   17db4:	movw	r1, #0
   17db8:	cmp	r1, r0
   17dbc:	bge	17dcc <__assert_fail@plt+0x6dd0>
   17dc0:	movw	r0, #0
   17dc4:	str	r0, [fp, #-56]	; 0xffffffc8
   17dc8:	b	17de4 <__assert_fail@plt+0x6de8>
   17dcc:	ldr	r0, [pc, #1912]	; 1854c <__assert_fail@plt+0x7550>
   17dd0:	ldr	r1, [fp, #8]
   17dd4:	movw	r2, #0
   17dd8:	sub	r1, r2, r1
   17ddc:	sdiv	r0, r0, r1
   17de0:	str	r0, [fp, #-56]	; 0xffffffc8
   17de4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17dec:	mvn	r2, #0
   17df0:	sub	r1, r2, r1
   17df4:	cmp	r0, r1
   17df8:	ble	17efc <__assert_fail@plt+0x6f00>
   17dfc:	b	17f10 <__assert_fail@plt+0x6f14>
   17e00:	ldr	r0, [fp, #8]
   17e04:	cmn	r0, #1
   17e08:	bne	17e50 <__assert_fail@plt+0x6e54>
   17e0c:	b	17e10 <__assert_fail@plt+0x6e14>
   17e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e14:	add	r0, r0, #-2147483648	; 0x80000000
   17e18:	movw	r1, #0
   17e1c:	cmp	r1, r0
   17e20:	blt	17efc <__assert_fail@plt+0x6f00>
   17e24:	b	17f10 <__assert_fail@plt+0x6f14>
   17e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e2c:	movw	r1, #0
   17e30:	cmp	r1, r0
   17e34:	bge	17f10 <__assert_fail@plt+0x6f14>
   17e38:	ldr	r0, [pc, #1804]	; 1854c <__assert_fail@plt+0x7550>
   17e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e40:	sub	r1, r1, #1
   17e44:	cmp	r0, r1
   17e48:	blt	17efc <__assert_fail@plt+0x6f00>
   17e4c:	b	17f10 <__assert_fail@plt+0x6f14>
   17e50:	ldr	r0, [pc, #4072]	; 18e40 <__assert_fail@plt+0x7e44>
   17e54:	ldr	r1, [fp, #8]
   17e58:	sdiv	r0, r0, r1
   17e5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e60:	cmp	r0, r1
   17e64:	blt	17efc <__assert_fail@plt+0x6f00>
   17e68:	b	17f10 <__assert_fail@plt+0x6f14>
   17e6c:	ldr	r0, [fp, #8]
   17e70:	cmp	r0, #0
   17e74:	bne	17e7c <__assert_fail@plt+0x6e80>
   17e78:	b	17f10 <__assert_fail@plt+0x6f14>
   17e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e80:	cmp	r0, #0
   17e84:	bge	17ee4 <__assert_fail@plt+0x6ee8>
   17e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e8c:	cmn	r0, #1
   17e90:	bne	17ec8 <__assert_fail@plt+0x6ecc>
   17e94:	b	17e98 <__assert_fail@plt+0x6e9c>
   17e98:	ldr	r0, [fp, #8]
   17e9c:	add	r0, r0, #-2147483648	; 0x80000000
   17ea0:	movw	r1, #0
   17ea4:	cmp	r1, r0
   17ea8:	blt	17efc <__assert_fail@plt+0x6f00>
   17eac:	b	17f10 <__assert_fail@plt+0x6f14>
   17eb0:	ldr	r0, [pc, #1684]	; 1854c <__assert_fail@plt+0x7550>
   17eb4:	ldr	r1, [fp, #8]
   17eb8:	sub	r1, r1, #1
   17ebc:	cmp	r0, r1
   17ec0:	blt	17efc <__assert_fail@plt+0x6f00>
   17ec4:	b	17f10 <__assert_fail@plt+0x6f14>
   17ec8:	ldr	r0, [pc, #3952]	; 18e40 <__assert_fail@plt+0x7e44>
   17ecc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ed0:	sdiv	r0, r0, r1
   17ed4:	ldr	r1, [fp, #8]
   17ed8:	cmp	r0, r1
   17edc:	blt	17efc <__assert_fail@plt+0x6f00>
   17ee0:	b	17f10 <__assert_fail@plt+0x6f14>
   17ee4:	ldr	r0, [pc, #1632]	; 1854c <__assert_fail@plt+0x7550>
   17ee8:	ldr	r1, [fp, #8]
   17eec:	sdiv	r0, r0, r1
   17ef0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ef4:	cmp	r0, r1
   17ef8:	bge	17f10 <__assert_fail@plt+0x6f14>
   17efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f00:	ldr	r1, [fp, #8]
   17f04:	mul	r0, r0, r1
   17f08:	str	r0, [fp, #-28]	; 0xffffffe4
   17f0c:	b	18998 <__assert_fail@plt+0x799c>
   17f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f14:	ldr	r1, [fp, #8]
   17f18:	mul	r0, r0, r1
   17f1c:	str	r0, [fp, #-28]	; 0xffffffe4
   17f20:	b	189a8 <__assert_fail@plt+0x79ac>
   17f24:	ldr	r0, [fp, #8]
   17f28:	cmp	r0, #0
   17f2c:	bge	1803c <__assert_fail@plt+0x7040>
   17f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f34:	cmp	r0, #0
   17f38:	bge	17fc4 <__assert_fail@plt+0x6fc8>
   17f3c:	b	17f5c <__assert_fail@plt+0x6f60>
   17f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f44:	ldr	r1, [fp, #8]
   17f48:	mvn	r2, #0
   17f4c:	udiv	r1, r2, r1
   17f50:	cmp	r0, r1
   17f54:	bcc	180d8 <__assert_fail@plt+0x70dc>
   17f58:	b	180ec <__assert_fail@plt+0x70f0>
   17f5c:	b	17f60 <__assert_fail@plt+0x6f64>
   17f60:	ldr	r0, [pc, #1656]	; 185e0 <__assert_fail@plt+0x75e4>
   17f64:	ldr	r1, [fp, #8]
   17f68:	cmp	r1, r0
   17f6c:	blt	17f84 <__assert_fail@plt+0x6f88>
   17f70:	b	17f90 <__assert_fail@plt+0x6f94>
   17f74:	ldr	r0, [fp, #8]
   17f78:	movw	r1, #0
   17f7c:	cmp	r1, r0
   17f80:	bge	17f90 <__assert_fail@plt+0x6f94>
   17f84:	movw	r0, #1
   17f88:	str	r0, [fp, #-60]	; 0xffffffc4
   17f8c:	b	17fa8 <__assert_fail@plt+0x6fac>
   17f90:	ldr	r0, [fp, #8]
   17f94:	movw	r1, #0
   17f98:	sub	r0, r1, r0
   17f9c:	mvn	r1, #0
   17fa0:	udiv	r0, r1, r0
   17fa4:	str	r0, [fp, #-60]	; 0xffffffc4
   17fa8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17fac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fb0:	mvn	r2, #0
   17fb4:	sub	r1, r2, r1
   17fb8:	cmp	r0, r1
   17fbc:	bls	180d8 <__assert_fail@plt+0x70dc>
   17fc0:	b	180ec <__assert_fail@plt+0x70f0>
   17fc4:	b	17fc8 <__assert_fail@plt+0x6fcc>
   17fc8:	b	18020 <__assert_fail@plt+0x7024>
   17fcc:	b	18020 <__assert_fail@plt+0x7024>
   17fd0:	ldr	r0, [fp, #8]
   17fd4:	cmn	r0, #1
   17fd8:	bne	18020 <__assert_fail@plt+0x7024>
   17fdc:	b	17fe0 <__assert_fail@plt+0x6fe4>
   17fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fe4:	add	r0, r0, #0
   17fe8:	movw	r1, #0
   17fec:	cmp	r1, r0
   17ff0:	blt	180d8 <__assert_fail@plt+0x70dc>
   17ff4:	b	180ec <__assert_fail@plt+0x70f0>
   17ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ffc:	movw	r1, #0
   18000:	cmp	r1, r0
   18004:	bge	180ec <__assert_fail@plt+0x70f0>
   18008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1800c:	sub	r0, r0, #1
   18010:	mvn	r1, #0
   18014:	cmp	r1, r0
   18018:	blt	180d8 <__assert_fail@plt+0x70dc>
   1801c:	b	180ec <__assert_fail@plt+0x70f0>
   18020:	ldr	r0, [fp, #8]
   18024:	movw	r1, #0
   18028:	sdiv	r0, r1, r0
   1802c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18030:	cmp	r0, r1
   18034:	blt	180d8 <__assert_fail@plt+0x70dc>
   18038:	b	180ec <__assert_fail@plt+0x70f0>
   1803c:	ldr	r0, [fp, #8]
   18040:	cmp	r0, #0
   18044:	bne	1804c <__assert_fail@plt+0x7050>
   18048:	b	180ec <__assert_fail@plt+0x70f0>
   1804c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18050:	cmp	r0, #0
   18054:	bge	180c0 <__assert_fail@plt+0x70c4>
   18058:	b	1805c <__assert_fail@plt+0x7060>
   1805c:	b	180a4 <__assert_fail@plt+0x70a8>
   18060:	b	180a4 <__assert_fail@plt+0x70a8>
   18064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18068:	cmn	r0, #1
   1806c:	bne	180a4 <__assert_fail@plt+0x70a8>
   18070:	b	18074 <__assert_fail@plt+0x7078>
   18074:	ldr	r0, [fp, #8]
   18078:	add	r0, r0, #0
   1807c:	movw	r1, #0
   18080:	cmp	r1, r0
   18084:	blt	180d8 <__assert_fail@plt+0x70dc>
   18088:	b	180ec <__assert_fail@plt+0x70f0>
   1808c:	ldr	r0, [fp, #8]
   18090:	sub	r0, r0, #1
   18094:	mvn	r1, #0
   18098:	cmp	r1, r0
   1809c:	blt	180d8 <__assert_fail@plt+0x70dc>
   180a0:	b	180ec <__assert_fail@plt+0x70f0>
   180a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180a8:	movw	r1, #0
   180ac:	sdiv	r0, r1, r0
   180b0:	ldr	r1, [fp, #8]
   180b4:	cmp	r0, r1
   180b8:	blt	180d8 <__assert_fail@plt+0x70dc>
   180bc:	b	180ec <__assert_fail@plt+0x70f0>
   180c0:	ldr	r0, [fp, #8]
   180c4:	mvn	r1, #0
   180c8:	udiv	r0, r1, r0
   180cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180d0:	cmp	r0, r1
   180d4:	bcs	180ec <__assert_fail@plt+0x70f0>
   180d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180dc:	ldr	r1, [fp, #8]
   180e0:	mul	r0, r0, r1
   180e4:	str	r0, [fp, #-28]	; 0xffffffe4
   180e8:	b	18998 <__assert_fail@plt+0x799c>
   180ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180f0:	ldr	r1, [fp, #8]
   180f4:	mul	r0, r0, r1
   180f8:	str	r0, [fp, #-28]	; 0xffffffe4
   180fc:	b	189a8 <__assert_fail@plt+0x79ac>
   18100:	b	18104 <__assert_fail@plt+0x7108>
   18104:	b	18108 <__assert_fail@plt+0x710c>
   18108:	ldr	r0, [fp, #8]
   1810c:	cmp	r0, #0
   18110:	bge	18214 <__assert_fail@plt+0x7218>
   18114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18118:	cmp	r0, #0
   1811c:	bge	181a8 <__assert_fail@plt+0x71ac>
   18120:	b	18124 <__assert_fail@plt+0x7128>
   18124:	ldr	r0, [pc, #1056]	; 1854c <__assert_fail@plt+0x7550>
   18128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1812c:	ldr	r2, [fp, #8]
   18130:	sdiv	r0, r0, r2
   18134:	cmp	r1, r0
   18138:	blt	182a4 <__assert_fail@plt+0x72a8>
   1813c:	b	182b8 <__assert_fail@plt+0x72bc>
   18140:	b	18144 <__assert_fail@plt+0x7148>
   18144:	ldr	r0, [pc, #1172]	; 185e0 <__assert_fail@plt+0x75e4>
   18148:	ldr	r1, [fp, #8]
   1814c:	cmp	r1, r0
   18150:	blt	18168 <__assert_fail@plt+0x716c>
   18154:	b	18174 <__assert_fail@plt+0x7178>
   18158:	ldr	r0, [fp, #8]
   1815c:	movw	r1, #0
   18160:	cmp	r1, r0
   18164:	bge	18174 <__assert_fail@plt+0x7178>
   18168:	movw	r0, #0
   1816c:	str	r0, [fp, #-64]	; 0xffffffc0
   18170:	b	1818c <__assert_fail@plt+0x7190>
   18174:	ldr	r0, [pc, #976]	; 1854c <__assert_fail@plt+0x7550>
   18178:	ldr	r1, [fp, #8]
   1817c:	movw	r2, #0
   18180:	sub	r1, r2, r1
   18184:	sdiv	r0, r0, r1
   18188:	str	r0, [fp, #-64]	; 0xffffffc0
   1818c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18194:	mvn	r2, #0
   18198:	sub	r1, r2, r1
   1819c:	cmp	r0, r1
   181a0:	ble	182a4 <__assert_fail@plt+0x72a8>
   181a4:	b	182b8 <__assert_fail@plt+0x72bc>
   181a8:	ldr	r0, [fp, #8]
   181ac:	cmn	r0, #1
   181b0:	bne	181f8 <__assert_fail@plt+0x71fc>
   181b4:	b	181b8 <__assert_fail@plt+0x71bc>
   181b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181bc:	add	r0, r0, #-2147483648	; 0x80000000
   181c0:	movw	r1, #0
   181c4:	cmp	r1, r0
   181c8:	blt	182a4 <__assert_fail@plt+0x72a8>
   181cc:	b	182b8 <__assert_fail@plt+0x72bc>
   181d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181d4:	movw	r1, #0
   181d8:	cmp	r1, r0
   181dc:	bge	182b8 <__assert_fail@plt+0x72bc>
   181e0:	ldr	r0, [pc, #868]	; 1854c <__assert_fail@plt+0x7550>
   181e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181e8:	sub	r1, r1, #1
   181ec:	cmp	r0, r1
   181f0:	blt	182a4 <__assert_fail@plt+0x72a8>
   181f4:	b	182b8 <__assert_fail@plt+0x72bc>
   181f8:	ldr	r0, [pc, #3136]	; 18e40 <__assert_fail@plt+0x7e44>
   181fc:	ldr	r1, [fp, #8]
   18200:	sdiv	r0, r0, r1
   18204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18208:	cmp	r0, r1
   1820c:	blt	182a4 <__assert_fail@plt+0x72a8>
   18210:	b	182b8 <__assert_fail@plt+0x72bc>
   18214:	ldr	r0, [fp, #8]
   18218:	cmp	r0, #0
   1821c:	bne	18224 <__assert_fail@plt+0x7228>
   18220:	b	182b8 <__assert_fail@plt+0x72bc>
   18224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18228:	cmp	r0, #0
   1822c:	bge	1828c <__assert_fail@plt+0x7290>
   18230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18234:	cmn	r0, #1
   18238:	bne	18270 <__assert_fail@plt+0x7274>
   1823c:	b	18240 <__assert_fail@plt+0x7244>
   18240:	ldr	r0, [fp, #8]
   18244:	add	r0, r0, #-2147483648	; 0x80000000
   18248:	movw	r1, #0
   1824c:	cmp	r1, r0
   18250:	blt	182a4 <__assert_fail@plt+0x72a8>
   18254:	b	182b8 <__assert_fail@plt+0x72bc>
   18258:	ldr	r0, [pc, #748]	; 1854c <__assert_fail@plt+0x7550>
   1825c:	ldr	r1, [fp, #8]
   18260:	sub	r1, r1, #1
   18264:	cmp	r0, r1
   18268:	blt	182a4 <__assert_fail@plt+0x72a8>
   1826c:	b	182b8 <__assert_fail@plt+0x72bc>
   18270:	ldr	r0, [pc, #3016]	; 18e40 <__assert_fail@plt+0x7e44>
   18274:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18278:	sdiv	r0, r0, r1
   1827c:	ldr	r1, [fp, #8]
   18280:	cmp	r0, r1
   18284:	blt	182a4 <__assert_fail@plt+0x72a8>
   18288:	b	182b8 <__assert_fail@plt+0x72bc>
   1828c:	ldr	r0, [pc, #696]	; 1854c <__assert_fail@plt+0x7550>
   18290:	ldr	r1, [fp, #8]
   18294:	sdiv	r0, r0, r1
   18298:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1829c:	cmp	r0, r1
   182a0:	bge	182b8 <__assert_fail@plt+0x72bc>
   182a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182a8:	ldr	r1, [fp, #8]
   182ac:	mul	r0, r0, r1
   182b0:	str	r0, [fp, #-28]	; 0xffffffe4
   182b4:	b	18998 <__assert_fail@plt+0x799c>
   182b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182bc:	ldr	r1, [fp, #8]
   182c0:	mul	r0, r0, r1
   182c4:	str	r0, [fp, #-28]	; 0xffffffe4
   182c8:	b	189a8 <__assert_fail@plt+0x79ac>
   182cc:	ldr	r0, [fp, #8]
   182d0:	cmp	r0, #0
   182d4:	bge	183e4 <__assert_fail@plt+0x73e8>
   182d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182dc:	cmp	r0, #0
   182e0:	bge	1836c <__assert_fail@plt+0x7370>
   182e4:	b	18304 <__assert_fail@plt+0x7308>
   182e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182ec:	ldr	r1, [fp, #8]
   182f0:	mvn	r2, #0
   182f4:	udiv	r1, r2, r1
   182f8:	cmp	r0, r1
   182fc:	bcc	18480 <__assert_fail@plt+0x7484>
   18300:	b	18494 <__assert_fail@plt+0x7498>
   18304:	b	18308 <__assert_fail@plt+0x730c>
   18308:	ldr	r0, [pc, #720]	; 185e0 <__assert_fail@plt+0x75e4>
   1830c:	ldr	r1, [fp, #8]
   18310:	cmp	r1, r0
   18314:	blt	1832c <__assert_fail@plt+0x7330>
   18318:	b	18338 <__assert_fail@plt+0x733c>
   1831c:	ldr	r0, [fp, #8]
   18320:	movw	r1, #0
   18324:	cmp	r1, r0
   18328:	bge	18338 <__assert_fail@plt+0x733c>
   1832c:	movw	r0, #1
   18330:	str	r0, [fp, #-68]	; 0xffffffbc
   18334:	b	18350 <__assert_fail@plt+0x7354>
   18338:	ldr	r0, [fp, #8]
   1833c:	movw	r1, #0
   18340:	sub	r0, r1, r0
   18344:	mvn	r1, #0
   18348:	udiv	r0, r1, r0
   1834c:	str	r0, [fp, #-68]	; 0xffffffbc
   18350:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18358:	mvn	r2, #0
   1835c:	sub	r1, r2, r1
   18360:	cmp	r0, r1
   18364:	bls	18480 <__assert_fail@plt+0x7484>
   18368:	b	18494 <__assert_fail@plt+0x7498>
   1836c:	b	18370 <__assert_fail@plt+0x7374>
   18370:	b	183c8 <__assert_fail@plt+0x73cc>
   18374:	b	183c8 <__assert_fail@plt+0x73cc>
   18378:	ldr	r0, [fp, #8]
   1837c:	cmn	r0, #1
   18380:	bne	183c8 <__assert_fail@plt+0x73cc>
   18384:	b	18388 <__assert_fail@plt+0x738c>
   18388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1838c:	add	r0, r0, #0
   18390:	movw	r1, #0
   18394:	cmp	r1, r0
   18398:	blt	18480 <__assert_fail@plt+0x7484>
   1839c:	b	18494 <__assert_fail@plt+0x7498>
   183a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183a4:	movw	r1, #0
   183a8:	cmp	r1, r0
   183ac:	bge	18494 <__assert_fail@plt+0x7498>
   183b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183b4:	sub	r0, r0, #1
   183b8:	mvn	r1, #0
   183bc:	cmp	r1, r0
   183c0:	blt	18480 <__assert_fail@plt+0x7484>
   183c4:	b	18494 <__assert_fail@plt+0x7498>
   183c8:	ldr	r0, [fp, #8]
   183cc:	movw	r1, #0
   183d0:	sdiv	r0, r1, r0
   183d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183d8:	cmp	r0, r1
   183dc:	blt	18480 <__assert_fail@plt+0x7484>
   183e0:	b	18494 <__assert_fail@plt+0x7498>
   183e4:	ldr	r0, [fp, #8]
   183e8:	cmp	r0, #0
   183ec:	bne	183f4 <__assert_fail@plt+0x73f8>
   183f0:	b	18494 <__assert_fail@plt+0x7498>
   183f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183f8:	cmp	r0, #0
   183fc:	bge	18468 <__assert_fail@plt+0x746c>
   18400:	b	18404 <__assert_fail@plt+0x7408>
   18404:	b	1844c <__assert_fail@plt+0x7450>
   18408:	b	1844c <__assert_fail@plt+0x7450>
   1840c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18410:	cmn	r0, #1
   18414:	bne	1844c <__assert_fail@plt+0x7450>
   18418:	b	1841c <__assert_fail@plt+0x7420>
   1841c:	ldr	r0, [fp, #8]
   18420:	add	r0, r0, #0
   18424:	movw	r1, #0
   18428:	cmp	r1, r0
   1842c:	blt	18480 <__assert_fail@plt+0x7484>
   18430:	b	18494 <__assert_fail@plt+0x7498>
   18434:	ldr	r0, [fp, #8]
   18438:	sub	r0, r0, #1
   1843c:	mvn	r1, #0
   18440:	cmp	r1, r0
   18444:	blt	18480 <__assert_fail@plt+0x7484>
   18448:	b	18494 <__assert_fail@plt+0x7498>
   1844c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18450:	movw	r1, #0
   18454:	sdiv	r0, r1, r0
   18458:	ldr	r1, [fp, #8]
   1845c:	cmp	r0, r1
   18460:	blt	18480 <__assert_fail@plt+0x7484>
   18464:	b	18494 <__assert_fail@plt+0x7498>
   18468:	ldr	r0, [fp, #8]
   1846c:	mvn	r1, #0
   18470:	udiv	r0, r1, r0
   18474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18478:	cmp	r0, r1
   1847c:	bcs	18494 <__assert_fail@plt+0x7498>
   18480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18484:	ldr	r1, [fp, #8]
   18488:	mul	r0, r0, r1
   1848c:	str	r0, [fp, #-28]	; 0xffffffe4
   18490:	b	18998 <__assert_fail@plt+0x799c>
   18494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18498:	ldr	r1, [fp, #8]
   1849c:	mul	r0, r0, r1
   184a0:	str	r0, [fp, #-28]	; 0xffffffe4
   184a4:	b	189a8 <__assert_fail@plt+0x79ac>
   184a8:	b	184ac <__assert_fail@plt+0x74b0>
   184ac:	ldr	r0, [fp, #8]
   184b0:	cmp	r0, #0
   184b4:	bge	18644 <__assert_fail@plt+0x7648>
   184b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184bc:	cmp	r0, #0
   184c0:	bge	185ac <__assert_fail@plt+0x75b0>
   184c4:	b	184c8 <__assert_fail@plt+0x74cc>
   184c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184cc:	ldr	r1, [fp, #8]
   184d0:	asr	r3, r1, #31
   184d4:	mvn	r2, #0
   184d8:	mvn	ip, #-2147483648	; 0x80000000
   184dc:	str	r0, [fp, #-72]	; 0xffffffb8
   184e0:	mov	r0, r2
   184e4:	str	r1, [fp, #-76]	; 0xffffffb4
   184e8:	mov	r1, ip
   184ec:	ldr	r2, [fp, #-76]	; 0xffffffb4
   184f0:	bl	1eb60 <__assert_fail@plt+0xdb64>
   184f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   184f8:	subs	r0, r2, r0
   184fc:	rscs	r1, r1, r2, asr #31
   18500:	str	r0, [fp, #-80]	; 0xffffffb0
   18504:	str	r1, [fp, #-84]	; 0xffffffac
   18508:	blt	18724 <__assert_fail@plt+0x7728>
   1850c:	b	18738 <__assert_fail@plt+0x773c>
   18510:	b	18514 <__assert_fail@plt+0x7518>
   18514:	ldr	r0, [pc, #196]	; 185e0 <__assert_fail@plt+0x75e4>
   18518:	ldr	r1, [fp, #8]
   1851c:	cmp	r1, r0
   18520:	blt	18538 <__assert_fail@plt+0x753c>
   18524:	b	18550 <__assert_fail@plt+0x7554>
   18528:	ldr	r0, [fp, #8]
   1852c:	movw	r1, #0
   18530:	cmp	r1, r0
   18534:	bge	18550 <__assert_fail@plt+0x7554>
   18538:	mov	r0, #0
   1853c:	mvn	r1, #0
   18540:	str	r1, [fp, #-88]	; 0xffffffa8
   18544:	str	r0, [fp, #-92]	; 0xffffffa4
   18548:	b	18584 <__assert_fail@plt+0x7588>
   1854c:	svcvc	0x00ffffff
   18550:	ldr	r0, [fp, #8]
   18554:	rsb	r0, r0, #0
   18558:	asr	r3, r0, #31
   1855c:	mvn	r1, #0
   18560:	mvn	r2, #-2147483648	; 0x80000000
   18564:	str	r0, [fp, #-96]	; 0xffffffa0
   18568:	mov	r0, r1
   1856c:	mov	r1, r2
   18570:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18574:	bl	1eb60 <__assert_fail@plt+0xdb64>
   18578:	str	r0, [fp, #-88]	; 0xffffffa8
   1857c:	str	r1, [fp, #-92]	; 0xffffffa4
   18580:	b	18584 <__assert_fail@plt+0x7588>
   18584:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18588:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1858c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18590:	mvn	r2, r2
   18594:	subs	r1, r2, r1
   18598:	rscs	r0, r0, r2, asr #31
   1859c:	str	r1, [fp, #-100]	; 0xffffff9c
   185a0:	str	r0, [fp, #-104]	; 0xffffff98
   185a4:	bge	18724 <__assert_fail@plt+0x7728>
   185a8:	b	18738 <__assert_fail@plt+0x773c>
   185ac:	ldr	r0, [fp, #8]
   185b0:	cmn	r0, #1
   185b4:	bne	18604 <__assert_fail@plt+0x7608>
   185b8:	b	185bc <__assert_fail@plt+0x75c0>
   185bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185c0:	mov	r1, #-2147483648	; 0x80000000
   185c4:	add	r1, r1, r0, asr #31
   185c8:	rsbs	r0, r0, #0
   185cc:	rscs	r1, r1, #0
   185d0:	str	r0, [fp, #-108]	; 0xffffff94
   185d4:	str	r1, [fp, #-112]	; 0xffffff90
   185d8:	blt	18724 <__assert_fail@plt+0x7728>
   185dc:	b	18738 <__assert_fail@plt+0x773c>
   185e0:	andhi	r0, r0, r1
   185e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185e8:	movw	r1, #0
   185ec:	cmp	r1, r0
   185f0:	bge	18738 <__assert_fail@plt+0x773c>
   185f4:	mov	r0, #0
   185f8:	cmp	r0, #0
   185fc:	bne	18724 <__assert_fail@plt+0x7728>
   18600:	b	18738 <__assert_fail@plt+0x773c>
   18604:	ldr	r0, [fp, #8]
   18608:	asr	r3, r0, #31
   1860c:	mov	r1, #0
   18610:	mov	r2, #-2147483648	; 0x80000000
   18614:	str	r0, [fp, #-116]	; 0xffffff8c
   18618:	mov	r0, r1
   1861c:	mov	r1, r2
   18620:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18624:	bl	1eb60 <__assert_fail@plt+0xdb64>
   18628:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1862c:	subs	r0, r0, r2
   18630:	sbcs	r1, r1, r2, asr #31
   18634:	str	r0, [fp, #-120]	; 0xffffff88
   18638:	str	r1, [fp, #-124]	; 0xffffff84
   1863c:	blt	18724 <__assert_fail@plt+0x7728>
   18640:	b	18738 <__assert_fail@plt+0x773c>
   18644:	ldr	r0, [fp, #8]
   18648:	cmp	r0, #0
   1864c:	bne	18654 <__assert_fail@plt+0x7658>
   18650:	b	18738 <__assert_fail@plt+0x773c>
   18654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18658:	cmp	r0, #0
   1865c:	bge	186e4 <__assert_fail@plt+0x76e8>
   18660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18664:	cmn	r0, #1
   18668:	bne	186a4 <__assert_fail@plt+0x76a8>
   1866c:	b	18670 <__assert_fail@plt+0x7674>
   18670:	ldr	r0, [fp, #8]
   18674:	mov	r1, #-2147483648	; 0x80000000
   18678:	add	r1, r1, r0, asr #31
   1867c:	rsbs	r0, r0, #0
   18680:	rscs	r1, r1, #0
   18684:	str	r0, [fp, #-128]	; 0xffffff80
   18688:	str	r1, [fp, #-132]	; 0xffffff7c
   1868c:	blt	18724 <__assert_fail@plt+0x7728>
   18690:	b	18738 <__assert_fail@plt+0x773c>
   18694:	mov	r0, #0
   18698:	cmp	r0, #0
   1869c:	bne	18724 <__assert_fail@plt+0x7728>
   186a0:	b	18738 <__assert_fail@plt+0x773c>
   186a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186a8:	asr	r3, r0, #31
   186ac:	mov	r1, #0
   186b0:	mov	r2, #-2147483648	; 0x80000000
   186b4:	str	r0, [fp, #-136]	; 0xffffff78
   186b8:	mov	r0, r1
   186bc:	mov	r1, r2
   186c0:	ldr	r2, [fp, #-136]	; 0xffffff78
   186c4:	bl	1eb60 <__assert_fail@plt+0xdb64>
   186c8:	ldr	r2, [fp, #8]
   186cc:	subs	r0, r0, r2
   186d0:	sbcs	r1, r1, r2, asr #31
   186d4:	str	r0, [fp, #-140]	; 0xffffff74
   186d8:	str	r1, [fp, #-144]	; 0xffffff70
   186dc:	blt	18724 <__assert_fail@plt+0x7728>
   186e0:	b	18738 <__assert_fail@plt+0x773c>
   186e4:	ldr	r0, [fp, #8]
   186e8:	asr	r3, r0, #31
   186ec:	mvn	r1, #0
   186f0:	mvn	r2, #-2147483648	; 0x80000000
   186f4:	str	r0, [fp, #-148]	; 0xffffff6c
   186f8:	mov	r0, r1
   186fc:	mov	r1, r2
   18700:	ldr	r2, [fp, #-148]	; 0xffffff6c
   18704:	bl	1eb60 <__assert_fail@plt+0xdb64>
   18708:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1870c:	subs	r0, r0, r2
   18710:	sbcs	r1, r1, r2, asr #31
   18714:	str	r0, [fp, #-152]	; 0xffffff68
   18718:	str	r1, [fp, #-156]	; 0xffffff64
   1871c:	bge	18738 <__assert_fail@plt+0x773c>
   18720:	b	18724 <__assert_fail@plt+0x7728>
   18724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18728:	ldr	r1, [fp, #8]
   1872c:	mul	r0, r0, r1
   18730:	str	r0, [fp, #-28]	; 0xffffffe4
   18734:	b	18998 <__assert_fail@plt+0x799c>
   18738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1873c:	ldr	r1, [fp, #8]
   18740:	mul	r0, r0, r1
   18744:	str	r0, [fp, #-28]	; 0xffffffe4
   18748:	b	189a8 <__assert_fail@plt+0x79ac>
   1874c:	ldr	r0, [fp, #8]
   18750:	cmp	r0, #0
   18754:	bge	188b4 <__assert_fail@plt+0x78b8>
   18758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1875c:	cmp	r0, #0
   18760:	bge	1883c <__assert_fail@plt+0x7840>
   18764:	b	187ac <__assert_fail@plt+0x77b0>
   18768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1876c:	ldr	r1, [fp, #8]
   18770:	asr	r3, r1, #31
   18774:	mvn	r2, #0
   18778:	str	r0, [fp, #-160]	; 0xffffff60
   1877c:	mov	r0, r2
   18780:	str	r1, [fp, #-164]	; 0xffffff5c
   18784:	mov	r1, r2
   18788:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1878c:	bl	1ec34 <__assert_fail@plt+0xdc38>
   18790:	ldr	r2, [fp, #-160]	; 0xffffff60
   18794:	subs	r0, r2, r0
   18798:	rscs	r1, r1, r2, asr #31
   1879c:	str	r0, [fp, #-168]	; 0xffffff58
   187a0:	str	r1, [fp, #-172]	; 0xffffff54
   187a4:	bcc	18970 <__assert_fail@plt+0x7974>
   187a8:	b	18984 <__assert_fail@plt+0x7988>
   187ac:	b	187b0 <__assert_fail@plt+0x77b4>
   187b0:	ldr	r0, [pc, #-472]	; 185e0 <__assert_fail@plt+0x75e4>
   187b4:	ldr	r1, [fp, #8]
   187b8:	cmp	r1, r0
   187bc:	blt	187d4 <__assert_fail@plt+0x77d8>
   187c0:	b	187e8 <__assert_fail@plt+0x77ec>
   187c4:	ldr	r0, [fp, #8]
   187c8:	movw	r1, #0
   187cc:	cmp	r1, r0
   187d0:	bge	187e8 <__assert_fail@plt+0x77ec>
   187d4:	mov	r0, #1
   187d8:	mvn	r1, #0
   187dc:	str	r1, [fp, #-176]	; 0xffffff50
   187e0:	str	r0, [fp, #-180]	; 0xffffff4c
   187e4:	b	18814 <__assert_fail@plt+0x7818>
   187e8:	ldr	r0, [fp, #8]
   187ec:	rsb	r0, r0, #0
   187f0:	asr	r3, r0, #31
   187f4:	mvn	r1, #0
   187f8:	str	r0, [fp, #-184]	; 0xffffff48
   187fc:	mov	r0, r1
   18800:	ldr	r2, [fp, #-184]	; 0xffffff48
   18804:	bl	1ec34 <__assert_fail@plt+0xdc38>
   18808:	str	r0, [fp, #-176]	; 0xffffff50
   1880c:	str	r1, [fp, #-180]	; 0xffffff4c
   18810:	b	18814 <__assert_fail@plt+0x7818>
   18814:	ldr	r0, [fp, #-180]	; 0xffffff4c
   18818:	ldr	r1, [fp, #-176]	; 0xffffff50
   1881c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18820:	mvn	r2, r2
   18824:	subs	r1, r2, r1
   18828:	rscs	r0, r0, r2, asr #31
   1882c:	str	r1, [sp, #188]	; 0xbc
   18830:	str	r0, [sp, #184]	; 0xb8
   18834:	bcs	18970 <__assert_fail@plt+0x7974>
   18838:	b	18984 <__assert_fail@plt+0x7988>
   1883c:	b	18840 <__assert_fail@plt+0x7844>
   18840:	b	18898 <__assert_fail@plt+0x789c>
   18844:	b	18898 <__assert_fail@plt+0x789c>
   18848:	ldr	r0, [fp, #8]
   1884c:	cmn	r0, #1
   18850:	bne	18898 <__assert_fail@plt+0x789c>
   18854:	b	18858 <__assert_fail@plt+0x785c>
   18858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1885c:	add	r0, r0, #0
   18860:	movw	r1, #0
   18864:	cmp	r1, r0
   18868:	blt	18970 <__assert_fail@plt+0x7974>
   1886c:	b	18984 <__assert_fail@plt+0x7988>
   18870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18874:	movw	r1, #0
   18878:	cmp	r1, r0
   1887c:	bge	18984 <__assert_fail@plt+0x7988>
   18880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18884:	sub	r0, r0, #1
   18888:	mvn	r1, #0
   1888c:	cmp	r1, r0
   18890:	blt	18970 <__assert_fail@plt+0x7974>
   18894:	b	18984 <__assert_fail@plt+0x7988>
   18898:	ldr	r0, [fp, #8]
   1889c:	movw	r1, #0
   188a0:	sdiv	r0, r1, r0
   188a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188a8:	cmp	r0, r1
   188ac:	blt	18970 <__assert_fail@plt+0x7974>
   188b0:	b	18984 <__assert_fail@plt+0x7988>
   188b4:	ldr	r0, [fp, #8]
   188b8:	cmp	r0, #0
   188bc:	bne	188c4 <__assert_fail@plt+0x78c8>
   188c0:	b	18984 <__assert_fail@plt+0x7988>
   188c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188c8:	cmp	r0, #0
   188cc:	bge	18938 <__assert_fail@plt+0x793c>
   188d0:	b	188d4 <__assert_fail@plt+0x78d8>
   188d4:	b	1891c <__assert_fail@plt+0x7920>
   188d8:	b	1891c <__assert_fail@plt+0x7920>
   188dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188e0:	cmn	r0, #1
   188e4:	bne	1891c <__assert_fail@plt+0x7920>
   188e8:	b	188ec <__assert_fail@plt+0x78f0>
   188ec:	ldr	r0, [fp, #8]
   188f0:	add	r0, r0, #0
   188f4:	movw	r1, #0
   188f8:	cmp	r1, r0
   188fc:	blt	18970 <__assert_fail@plt+0x7974>
   18900:	b	18984 <__assert_fail@plt+0x7988>
   18904:	ldr	r0, [fp, #8]
   18908:	sub	r0, r0, #1
   1890c:	mvn	r1, #0
   18910:	cmp	r1, r0
   18914:	blt	18970 <__assert_fail@plt+0x7974>
   18918:	b	18984 <__assert_fail@plt+0x7988>
   1891c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18920:	movw	r1, #0
   18924:	sdiv	r0, r1, r0
   18928:	ldr	r1, [fp, #8]
   1892c:	cmp	r0, r1
   18930:	blt	18970 <__assert_fail@plt+0x7974>
   18934:	b	18984 <__assert_fail@plt+0x7988>
   18938:	ldr	r0, [fp, #8]
   1893c:	asr	r3, r0, #31
   18940:	mvn	r1, #0
   18944:	str	r0, [sp, #180]	; 0xb4
   18948:	mov	r0, r1
   1894c:	ldr	r2, [sp, #180]	; 0xb4
   18950:	bl	1ec34 <__assert_fail@plt+0xdc38>
   18954:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18958:	subs	r0, r0, r2
   1895c:	sbcs	r1, r1, r2, asr #31
   18960:	str	r0, [sp, #176]	; 0xb0
   18964:	str	r1, [sp, #172]	; 0xac
   18968:	bcs	18984 <__assert_fail@plt+0x7988>
   1896c:	b	18970 <__assert_fail@plt+0x7974>
   18970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18974:	ldr	r1, [fp, #8]
   18978:	mul	r0, r0, r1
   1897c:	str	r0, [fp, #-28]	; 0xffffffe4
   18980:	b	18998 <__assert_fail@plt+0x799c>
   18984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18988:	ldr	r1, [fp, #8]
   1898c:	mul	r0, r0, r1
   18990:	str	r0, [fp, #-28]	; 0xffffffe4
   18994:	b	189a8 <__assert_fail@plt+0x79ac>
   18998:	ldr	r0, [pc, #-1108]	; 1854c <__assert_fail@plt+0x7550>
   1899c:	str	r0, [sp, #168]	; 0xa8
   189a0:	b	189c8 <__assert_fail@plt+0x79cc>
   189a4:			; <UNDEFINED> instruction: 0xffff8000
   189a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   189ac:	cmp	r0, #64	; 0x40
   189b0:	movw	r0, #0
   189b4:	movlt	r0, #1
   189b8:	tst	r0, #1
   189bc:	movw	r0, #64	; 0x40
   189c0:	moveq	r0, #0
   189c4:	str	r0, [sp, #168]	; 0xa8
   189c8:	ldr	r0, [sp, #168]	; 0xa8
   189cc:	str	r0, [fp, #-32]	; 0xffffffe0
   189d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189d4:	cmp	r0, #0
   189d8:	beq	18a08 <__assert_fail@plt+0x7a0c>
   189dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189e0:	ldr	r1, [fp, #8]
   189e4:	sdiv	r0, r0, r1
   189e8:	str	r0, [fp, #-24]	; 0xffffffe8
   189ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189f0:	mov	r1, r0
   189f4:	ldr	r2, [fp, #8]
   189f8:	sdiv	r3, r0, r2
   189fc:	mls	r0, r3, r2, r0
   18a00:	sub	r0, r1, r0
   18a04:	str	r0, [fp, #-28]	; 0xffffffe4
   18a08:	ldr	r0, [fp, #-4]
   18a0c:	movw	r1, #0
   18a10:	cmp	r0, r1
   18a14:	bne	18a24 <__assert_fail@plt+0x7a28>
   18a18:	ldr	r0, [fp, #-8]
   18a1c:	movw	r1, #0
   18a20:	str	r1, [r0]
   18a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a28:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a2c:	sub	r0, r0, r1
   18a30:	ldr	r1, [fp, #-12]
   18a34:	cmp	r0, r1
   18a38:	bge	19e70 <__assert_fail@plt+0x8e74>
   18a3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18a40:	ldr	r1, [fp, #-12]
   18a44:	add	r1, r0, r1
   18a48:	mov	r2, #1
   18a4c:	cmp	r1, r0
   18a50:	movwvc	r2, #0
   18a54:	str	r1, [fp, #-24]	; 0xffffffe8
   18a58:	tst	r2, #1
   18a5c:	bne	19e6c <__assert_fail@plt+0x8e70>
   18a60:	ldr	r0, [fp, #-16]
   18a64:	movw	r1, #0
   18a68:	cmp	r1, r0
   18a6c:	bgt	18a80 <__assert_fail@plt+0x7a84>
   18a70:	ldr	r0, [fp, #-16]
   18a74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a78:	cmp	r0, r1
   18a7c:	blt	19e6c <__assert_fail@plt+0x8e70>
   18a80:	b	18e5c <__assert_fail@plt+0x7e60>
   18a84:	b	18a88 <__assert_fail@plt+0x7a8c>
   18a88:	ldr	r0, [fp, #8]
   18a8c:	cmp	r0, #0
   18a90:	bge	18ba4 <__assert_fail@plt+0x7ba8>
   18a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a98:	cmp	r0, #0
   18a9c:	bge	18b28 <__assert_fail@plt+0x7b2c>
   18aa0:	b	18aa4 <__assert_fail@plt+0x7aa8>
   18aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18aa8:	ldr	r1, [fp, #8]
   18aac:	movw	r2, #127	; 0x7f
   18ab0:	sdiv	r1, r2, r1
   18ab4:	cmp	r0, r1
   18ab8:	blt	18c44 <__assert_fail@plt+0x7c48>
   18abc:	b	18c5c <__assert_fail@plt+0x7c60>
   18ac0:	b	18ac4 <__assert_fail@plt+0x7ac8>
   18ac4:	ldr	r0, [pc, #-1260]	; 185e0 <__assert_fail@plt+0x75e4>
   18ac8:	ldr	r1, [fp, #8]
   18acc:	cmp	r1, r0
   18ad0:	blt	18ae8 <__assert_fail@plt+0x7aec>
   18ad4:	b	18af4 <__assert_fail@plt+0x7af8>
   18ad8:	ldr	r0, [fp, #8]
   18adc:	movw	r1, #0
   18ae0:	cmp	r1, r0
   18ae4:	bge	18af4 <__assert_fail@plt+0x7af8>
   18ae8:	movw	r0, #0
   18aec:	str	r0, [sp, #164]	; 0xa4
   18af0:	b	18b0c <__assert_fail@plt+0x7b10>
   18af4:	ldr	r0, [fp, #8]
   18af8:	movw	r1, #0
   18afc:	sub	r0, r1, r0
   18b00:	movw	r1, #127	; 0x7f
   18b04:	sdiv	r0, r1, r0
   18b08:	str	r0, [sp, #164]	; 0xa4
   18b0c:	ldr	r0, [sp, #164]	; 0xa4
   18b10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b14:	mvn	r2, #0
   18b18:	sub	r1, r2, r1
   18b1c:	cmp	r0, r1
   18b20:	ble	18c44 <__assert_fail@plt+0x7c48>
   18b24:	b	18c5c <__assert_fail@plt+0x7c60>
   18b28:	b	18b2c <__assert_fail@plt+0x7b30>
   18b2c:	b	18b88 <__assert_fail@plt+0x7b8c>
   18b30:	b	18b88 <__assert_fail@plt+0x7b8c>
   18b34:	ldr	r0, [fp, #8]
   18b38:	cmn	r0, #1
   18b3c:	bne	18b88 <__assert_fail@plt+0x7b8c>
   18b40:	b	18b44 <__assert_fail@plt+0x7b48>
   18b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b48:	mvn	r1, #127	; 0x7f
   18b4c:	add	r0, r0, r1
   18b50:	movw	r1, #0
   18b54:	cmp	r1, r0
   18b58:	blt	18c44 <__assert_fail@plt+0x7c48>
   18b5c:	b	18c5c <__assert_fail@plt+0x7c60>
   18b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b64:	movw	r1, #0
   18b68:	cmp	r1, r0
   18b6c:	bge	18c5c <__assert_fail@plt+0x7c60>
   18b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b74:	sub	r0, r0, #1
   18b78:	movw	r1, #127	; 0x7f
   18b7c:	cmp	r1, r0
   18b80:	blt	18c44 <__assert_fail@plt+0x7c48>
   18b84:	b	18c5c <__assert_fail@plt+0x7c60>
   18b88:	ldr	r0, [fp, #8]
   18b8c:	mvn	r1, #127	; 0x7f
   18b90:	sdiv	r0, r1, r0
   18b94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b98:	cmp	r0, r1
   18b9c:	blt	18c44 <__assert_fail@plt+0x7c48>
   18ba0:	b	18c5c <__assert_fail@plt+0x7c60>
   18ba4:	ldr	r0, [fp, #8]
   18ba8:	cmp	r0, #0
   18bac:	bne	18bb4 <__assert_fail@plt+0x7bb8>
   18bb0:	b	18c5c <__assert_fail@plt+0x7c60>
   18bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bb8:	cmp	r0, #0
   18bbc:	bge	18c2c <__assert_fail@plt+0x7c30>
   18bc0:	b	18bc4 <__assert_fail@plt+0x7bc8>
   18bc4:	b	18c10 <__assert_fail@plt+0x7c14>
   18bc8:	b	18c10 <__assert_fail@plt+0x7c14>
   18bcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bd0:	cmn	r0, #1
   18bd4:	bne	18c10 <__assert_fail@plt+0x7c14>
   18bd8:	b	18bdc <__assert_fail@plt+0x7be0>
   18bdc:	ldr	r0, [fp, #8]
   18be0:	mvn	r1, #127	; 0x7f
   18be4:	add	r0, r0, r1
   18be8:	movw	r1, #0
   18bec:	cmp	r1, r0
   18bf0:	blt	18c44 <__assert_fail@plt+0x7c48>
   18bf4:	b	18c5c <__assert_fail@plt+0x7c60>
   18bf8:	ldr	r0, [fp, #8]
   18bfc:	sub	r0, r0, #1
   18c00:	movw	r1, #127	; 0x7f
   18c04:	cmp	r1, r0
   18c08:	blt	18c44 <__assert_fail@plt+0x7c48>
   18c0c:	b	18c5c <__assert_fail@plt+0x7c60>
   18c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c14:	mvn	r1, #127	; 0x7f
   18c18:	sdiv	r0, r1, r0
   18c1c:	ldr	r1, [fp, #8]
   18c20:	cmp	r0, r1
   18c24:	blt	18c44 <__assert_fail@plt+0x7c48>
   18c28:	b	18c5c <__assert_fail@plt+0x7c60>
   18c2c:	ldr	r0, [fp, #8]
   18c30:	movw	r1, #127	; 0x7f
   18c34:	sdiv	r0, r1, r0
   18c38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c3c:	cmp	r0, r1
   18c40:	bge	18c5c <__assert_fail@plt+0x7c60>
   18c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c48:	ldr	r1, [fp, #8]
   18c4c:	mul	r0, r0, r1
   18c50:	sxtb	r0, r0
   18c54:	str	r0, [fp, #-28]	; 0xffffffe4
   18c58:	b	19e6c <__assert_fail@plt+0x8e70>
   18c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c60:	ldr	r1, [fp, #8]
   18c64:	mul	r0, r0, r1
   18c68:	sxtb	r0, r0
   18c6c:	str	r0, [fp, #-28]	; 0xffffffe4
   18c70:	b	19e70 <__assert_fail@plt+0x8e74>
   18c74:	ldr	r0, [fp, #8]
   18c78:	cmp	r0, #0
   18c7c:	bge	18d8c <__assert_fail@plt+0x7d90>
   18c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c84:	cmp	r0, #0
   18c88:	bge	18d14 <__assert_fail@plt+0x7d18>
   18c8c:	b	18c90 <__assert_fail@plt+0x7c94>
   18c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c94:	ldr	r1, [fp, #8]
   18c98:	movw	r2, #255	; 0xff
   18c9c:	sdiv	r1, r2, r1
   18ca0:	cmp	r0, r1
   18ca4:	blt	18e28 <__assert_fail@plt+0x7e2c>
   18ca8:	b	18e44 <__assert_fail@plt+0x7e48>
   18cac:	b	18cb0 <__assert_fail@plt+0x7cb4>
   18cb0:	ldr	r0, [pc, #-1752]	; 185e0 <__assert_fail@plt+0x75e4>
   18cb4:	ldr	r1, [fp, #8]
   18cb8:	cmp	r1, r0
   18cbc:	blt	18cd4 <__assert_fail@plt+0x7cd8>
   18cc0:	b	18ce0 <__assert_fail@plt+0x7ce4>
   18cc4:	ldr	r0, [fp, #8]
   18cc8:	movw	r1, #0
   18ccc:	cmp	r1, r0
   18cd0:	bge	18ce0 <__assert_fail@plt+0x7ce4>
   18cd4:	movw	r0, #0
   18cd8:	str	r0, [sp, #160]	; 0xa0
   18cdc:	b	18cf8 <__assert_fail@plt+0x7cfc>
   18ce0:	ldr	r0, [fp, #8]
   18ce4:	movw	r1, #0
   18ce8:	sub	r0, r1, r0
   18cec:	movw	r1, #255	; 0xff
   18cf0:	sdiv	r0, r1, r0
   18cf4:	str	r0, [sp, #160]	; 0xa0
   18cf8:	ldr	r0, [sp, #160]	; 0xa0
   18cfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d00:	mvn	r2, #0
   18d04:	sub	r1, r2, r1
   18d08:	cmp	r0, r1
   18d0c:	ble	18e28 <__assert_fail@plt+0x7e2c>
   18d10:	b	18e44 <__assert_fail@plt+0x7e48>
   18d14:	b	18d18 <__assert_fail@plt+0x7d1c>
   18d18:	b	18d70 <__assert_fail@plt+0x7d74>
   18d1c:	b	18d70 <__assert_fail@plt+0x7d74>
   18d20:	ldr	r0, [fp, #8]
   18d24:	cmn	r0, #1
   18d28:	bne	18d70 <__assert_fail@plt+0x7d74>
   18d2c:	b	18d30 <__assert_fail@plt+0x7d34>
   18d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d34:	add	r0, r0, #0
   18d38:	movw	r1, #0
   18d3c:	cmp	r1, r0
   18d40:	blt	18e28 <__assert_fail@plt+0x7e2c>
   18d44:	b	18e44 <__assert_fail@plt+0x7e48>
   18d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d4c:	movw	r1, #0
   18d50:	cmp	r1, r0
   18d54:	bge	18e44 <__assert_fail@plt+0x7e48>
   18d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d5c:	sub	r0, r0, #1
   18d60:	mvn	r1, #0
   18d64:	cmp	r1, r0
   18d68:	blt	18e28 <__assert_fail@plt+0x7e2c>
   18d6c:	b	18e44 <__assert_fail@plt+0x7e48>
   18d70:	ldr	r0, [fp, #8]
   18d74:	movw	r1, #0
   18d78:	sdiv	r0, r1, r0
   18d7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d80:	cmp	r0, r1
   18d84:	blt	18e28 <__assert_fail@plt+0x7e2c>
   18d88:	b	18e44 <__assert_fail@plt+0x7e48>
   18d8c:	ldr	r0, [fp, #8]
   18d90:	cmp	r0, #0
   18d94:	bne	18d9c <__assert_fail@plt+0x7da0>
   18d98:	b	18e44 <__assert_fail@plt+0x7e48>
   18d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18da0:	cmp	r0, #0
   18da4:	bge	18e10 <__assert_fail@plt+0x7e14>
   18da8:	b	18dac <__assert_fail@plt+0x7db0>
   18dac:	b	18df4 <__assert_fail@plt+0x7df8>
   18db0:	b	18df4 <__assert_fail@plt+0x7df8>
   18db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18db8:	cmn	r0, #1
   18dbc:	bne	18df4 <__assert_fail@plt+0x7df8>
   18dc0:	b	18dc4 <__assert_fail@plt+0x7dc8>
   18dc4:	ldr	r0, [fp, #8]
   18dc8:	add	r0, r0, #0
   18dcc:	movw	r1, #0
   18dd0:	cmp	r1, r0
   18dd4:	blt	18e28 <__assert_fail@plt+0x7e2c>
   18dd8:	b	18e44 <__assert_fail@plt+0x7e48>
   18ddc:	ldr	r0, [fp, #8]
   18de0:	sub	r0, r0, #1
   18de4:	mvn	r1, #0
   18de8:	cmp	r1, r0
   18dec:	blt	18e28 <__assert_fail@plt+0x7e2c>
   18df0:	b	18e44 <__assert_fail@plt+0x7e48>
   18df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df8:	movw	r1, #0
   18dfc:	sdiv	r0, r1, r0
   18e00:	ldr	r1, [fp, #8]
   18e04:	cmp	r0, r1
   18e08:	blt	18e28 <__assert_fail@plt+0x7e2c>
   18e0c:	b	18e44 <__assert_fail@plt+0x7e48>
   18e10:	ldr	r0, [fp, #8]
   18e14:	movw	r1, #255	; 0xff
   18e18:	sdiv	r0, r1, r0
   18e1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e20:	cmp	r0, r1
   18e24:	bge	18e44 <__assert_fail@plt+0x7e48>
   18e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e2c:	ldr	r1, [fp, #8]
   18e30:	mul	r0, r0, r1
   18e34:	and	r0, r0, #255	; 0xff
   18e38:	str	r0, [fp, #-28]	; 0xffffffe4
   18e3c:	b	19e6c <__assert_fail@plt+0x8e70>
   18e40:	andhi	r0, r0, r0
   18e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e48:	ldr	r1, [fp, #8]
   18e4c:	mul	r0, r0, r1
   18e50:	and	r0, r0, #255	; 0xff
   18e54:	str	r0, [fp, #-28]	; 0xffffffe4
   18e58:	b	19e70 <__assert_fail@plt+0x8e74>
   18e5c:	b	19234 <__assert_fail@plt+0x8238>
   18e60:	b	18e64 <__assert_fail@plt+0x7e68>
   18e64:	ldr	r0, [fp, #8]
   18e68:	cmp	r0, #0
   18e6c:	bge	18f80 <__assert_fail@plt+0x7f84>
   18e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e74:	cmp	r0, #0
   18e78:	bge	18f04 <__assert_fail@plt+0x7f08>
   18e7c:	b	18e80 <__assert_fail@plt+0x7e84>
   18e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e84:	ldr	r1, [fp, #8]
   18e88:	movw	r2, #32767	; 0x7fff
   18e8c:	sdiv	r1, r2, r1
   18e90:	cmp	r0, r1
   18e94:	blt	19020 <__assert_fail@plt+0x8024>
   18e98:	b	19038 <__assert_fail@plt+0x803c>
   18e9c:	b	18ea0 <__assert_fail@plt+0x7ea4>
   18ea0:	ldr	r0, [pc, #4084]	; 19e9c <__assert_fail@plt+0x8ea0>
   18ea4:	ldr	r1, [fp, #8]
   18ea8:	cmp	r1, r0
   18eac:	blt	18ec4 <__assert_fail@plt+0x7ec8>
   18eb0:	b	18ed0 <__assert_fail@plt+0x7ed4>
   18eb4:	ldr	r0, [fp, #8]
   18eb8:	movw	r1, #0
   18ebc:	cmp	r1, r0
   18ec0:	bge	18ed0 <__assert_fail@plt+0x7ed4>
   18ec4:	movw	r0, #0
   18ec8:	str	r0, [sp, #156]	; 0x9c
   18ecc:	b	18ee8 <__assert_fail@plt+0x7eec>
   18ed0:	ldr	r0, [fp, #8]
   18ed4:	movw	r1, #0
   18ed8:	sub	r0, r1, r0
   18edc:	movw	r1, #32767	; 0x7fff
   18ee0:	sdiv	r0, r1, r0
   18ee4:	str	r0, [sp, #156]	; 0x9c
   18ee8:	ldr	r0, [sp, #156]	; 0x9c
   18eec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ef0:	mvn	r2, #0
   18ef4:	sub	r1, r2, r1
   18ef8:	cmp	r0, r1
   18efc:	ble	19020 <__assert_fail@plt+0x8024>
   18f00:	b	19038 <__assert_fail@plt+0x803c>
   18f04:	b	18f08 <__assert_fail@plt+0x7f0c>
   18f08:	b	18f64 <__assert_fail@plt+0x7f68>
   18f0c:	b	18f64 <__assert_fail@plt+0x7f68>
   18f10:	ldr	r0, [fp, #8]
   18f14:	cmn	r0, #1
   18f18:	bne	18f64 <__assert_fail@plt+0x7f68>
   18f1c:	b	18f20 <__assert_fail@plt+0x7f24>
   18f20:	ldr	r0, [pc, #3964]	; 19ea4 <__assert_fail@plt+0x8ea8>
   18f24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f28:	add	r0, r1, r0
   18f2c:	movw	r1, #0
   18f30:	cmp	r1, r0
   18f34:	blt	19020 <__assert_fail@plt+0x8024>
   18f38:	b	19038 <__assert_fail@plt+0x803c>
   18f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f40:	movw	r1, #0
   18f44:	cmp	r1, r0
   18f48:	bge	19038 <__assert_fail@plt+0x803c>
   18f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f50:	sub	r0, r0, #1
   18f54:	movw	r1, #32767	; 0x7fff
   18f58:	cmp	r1, r0
   18f5c:	blt	19020 <__assert_fail@plt+0x8024>
   18f60:	b	19038 <__assert_fail@plt+0x803c>
   18f64:	ldr	r0, [pc, #3896]	; 19ea4 <__assert_fail@plt+0x8ea8>
   18f68:	ldr	r1, [fp, #8]
   18f6c:	sdiv	r0, r0, r1
   18f70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f74:	cmp	r0, r1
   18f78:	blt	19020 <__assert_fail@plt+0x8024>
   18f7c:	b	19038 <__assert_fail@plt+0x803c>
   18f80:	ldr	r0, [fp, #8]
   18f84:	cmp	r0, #0
   18f88:	bne	18f90 <__assert_fail@plt+0x7f94>
   18f8c:	b	19038 <__assert_fail@plt+0x803c>
   18f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f94:	cmp	r0, #0
   18f98:	bge	19008 <__assert_fail@plt+0x800c>
   18f9c:	b	18fa0 <__assert_fail@plt+0x7fa4>
   18fa0:	b	18fec <__assert_fail@plt+0x7ff0>
   18fa4:	b	18fec <__assert_fail@plt+0x7ff0>
   18fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fac:	cmn	r0, #1
   18fb0:	bne	18fec <__assert_fail@plt+0x7ff0>
   18fb4:	b	18fb8 <__assert_fail@plt+0x7fbc>
   18fb8:	ldr	r0, [pc, #3812]	; 19ea4 <__assert_fail@plt+0x8ea8>
   18fbc:	ldr	r1, [fp, #8]
   18fc0:	add	r0, r1, r0
   18fc4:	movw	r1, #0
   18fc8:	cmp	r1, r0
   18fcc:	blt	19020 <__assert_fail@plt+0x8024>
   18fd0:	b	19038 <__assert_fail@plt+0x803c>
   18fd4:	ldr	r0, [fp, #8]
   18fd8:	sub	r0, r0, #1
   18fdc:	movw	r1, #32767	; 0x7fff
   18fe0:	cmp	r1, r0
   18fe4:	blt	19020 <__assert_fail@plt+0x8024>
   18fe8:	b	19038 <__assert_fail@plt+0x803c>
   18fec:	ldr	r0, [pc, #3760]	; 19ea4 <__assert_fail@plt+0x8ea8>
   18ff0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ff4:	sdiv	r0, r0, r1
   18ff8:	ldr	r1, [fp, #8]
   18ffc:	cmp	r0, r1
   19000:	blt	19020 <__assert_fail@plt+0x8024>
   19004:	b	19038 <__assert_fail@plt+0x803c>
   19008:	ldr	r0, [fp, #8]
   1900c:	movw	r1, #32767	; 0x7fff
   19010:	sdiv	r0, r1, r0
   19014:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19018:	cmp	r0, r1
   1901c:	bge	19038 <__assert_fail@plt+0x803c>
   19020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19024:	ldr	r1, [fp, #8]
   19028:	mul	r0, r0, r1
   1902c:	sxth	r0, r0
   19030:	str	r0, [fp, #-28]	; 0xffffffe4
   19034:	b	19e6c <__assert_fail@plt+0x8e70>
   19038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1903c:	ldr	r1, [fp, #8]
   19040:	mul	r0, r0, r1
   19044:	sxth	r0, r0
   19048:	str	r0, [fp, #-28]	; 0xffffffe4
   1904c:	b	19e70 <__assert_fail@plt+0x8e74>
   19050:	ldr	r0, [fp, #8]
   19054:	cmp	r0, #0
   19058:	bge	19168 <__assert_fail@plt+0x816c>
   1905c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19060:	cmp	r0, #0
   19064:	bge	190f0 <__assert_fail@plt+0x80f4>
   19068:	b	1906c <__assert_fail@plt+0x8070>
   1906c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19070:	ldr	r1, [fp, #8]
   19074:	movw	r2, #65535	; 0xffff
   19078:	sdiv	r1, r2, r1
   1907c:	cmp	r0, r1
   19080:	blt	19204 <__assert_fail@plt+0x8208>
   19084:	b	1921c <__assert_fail@plt+0x8220>
   19088:	b	1908c <__assert_fail@plt+0x8090>
   1908c:	ldr	r0, [pc, #3592]	; 19e9c <__assert_fail@plt+0x8ea0>
   19090:	ldr	r1, [fp, #8]
   19094:	cmp	r1, r0
   19098:	blt	190b0 <__assert_fail@plt+0x80b4>
   1909c:	b	190bc <__assert_fail@plt+0x80c0>
   190a0:	ldr	r0, [fp, #8]
   190a4:	movw	r1, #0
   190a8:	cmp	r1, r0
   190ac:	bge	190bc <__assert_fail@plt+0x80c0>
   190b0:	movw	r0, #0
   190b4:	str	r0, [sp, #152]	; 0x98
   190b8:	b	190d4 <__assert_fail@plt+0x80d8>
   190bc:	ldr	r0, [fp, #8]
   190c0:	movw	r1, #0
   190c4:	sub	r0, r1, r0
   190c8:	movw	r1, #65535	; 0xffff
   190cc:	sdiv	r0, r1, r0
   190d0:	str	r0, [sp, #152]	; 0x98
   190d4:	ldr	r0, [sp, #152]	; 0x98
   190d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190dc:	mvn	r2, #0
   190e0:	sub	r1, r2, r1
   190e4:	cmp	r0, r1
   190e8:	ble	19204 <__assert_fail@plt+0x8208>
   190ec:	b	1921c <__assert_fail@plt+0x8220>
   190f0:	b	190f4 <__assert_fail@plt+0x80f8>
   190f4:	b	1914c <__assert_fail@plt+0x8150>
   190f8:	b	1914c <__assert_fail@plt+0x8150>
   190fc:	ldr	r0, [fp, #8]
   19100:	cmn	r0, #1
   19104:	bne	1914c <__assert_fail@plt+0x8150>
   19108:	b	1910c <__assert_fail@plt+0x8110>
   1910c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19110:	add	r0, r0, #0
   19114:	movw	r1, #0
   19118:	cmp	r1, r0
   1911c:	blt	19204 <__assert_fail@plt+0x8208>
   19120:	b	1921c <__assert_fail@plt+0x8220>
   19124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19128:	movw	r1, #0
   1912c:	cmp	r1, r0
   19130:	bge	1921c <__assert_fail@plt+0x8220>
   19134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19138:	sub	r0, r0, #1
   1913c:	mvn	r1, #0
   19140:	cmp	r1, r0
   19144:	blt	19204 <__assert_fail@plt+0x8208>
   19148:	b	1921c <__assert_fail@plt+0x8220>
   1914c:	ldr	r0, [fp, #8]
   19150:	movw	r1, #0
   19154:	sdiv	r0, r1, r0
   19158:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1915c:	cmp	r0, r1
   19160:	blt	19204 <__assert_fail@plt+0x8208>
   19164:	b	1921c <__assert_fail@plt+0x8220>
   19168:	ldr	r0, [fp, #8]
   1916c:	cmp	r0, #0
   19170:	bne	19178 <__assert_fail@plt+0x817c>
   19174:	b	1921c <__assert_fail@plt+0x8220>
   19178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1917c:	cmp	r0, #0
   19180:	bge	191ec <__assert_fail@plt+0x81f0>
   19184:	b	19188 <__assert_fail@plt+0x818c>
   19188:	b	191d0 <__assert_fail@plt+0x81d4>
   1918c:	b	191d0 <__assert_fail@plt+0x81d4>
   19190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19194:	cmn	r0, #1
   19198:	bne	191d0 <__assert_fail@plt+0x81d4>
   1919c:	b	191a0 <__assert_fail@plt+0x81a4>
   191a0:	ldr	r0, [fp, #8]
   191a4:	add	r0, r0, #0
   191a8:	movw	r1, #0
   191ac:	cmp	r1, r0
   191b0:	blt	19204 <__assert_fail@plt+0x8208>
   191b4:	b	1921c <__assert_fail@plt+0x8220>
   191b8:	ldr	r0, [fp, #8]
   191bc:	sub	r0, r0, #1
   191c0:	mvn	r1, #0
   191c4:	cmp	r1, r0
   191c8:	blt	19204 <__assert_fail@plt+0x8208>
   191cc:	b	1921c <__assert_fail@plt+0x8220>
   191d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d4:	movw	r1, #0
   191d8:	sdiv	r0, r1, r0
   191dc:	ldr	r1, [fp, #8]
   191e0:	cmp	r0, r1
   191e4:	blt	19204 <__assert_fail@plt+0x8208>
   191e8:	b	1921c <__assert_fail@plt+0x8220>
   191ec:	ldr	r0, [fp, #8]
   191f0:	movw	r1, #65535	; 0xffff
   191f4:	sdiv	r0, r1, r0
   191f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191fc:	cmp	r0, r1
   19200:	bge	1921c <__assert_fail@plt+0x8220>
   19204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19208:	ldr	r1, [fp, #8]
   1920c:	mul	r0, r0, r1
   19210:	uxth	r0, r0
   19214:	str	r0, [fp, #-28]	; 0xffffffe4
   19218:	b	19e6c <__assert_fail@plt+0x8e70>
   1921c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19220:	ldr	r1, [fp, #8]
   19224:	mul	r0, r0, r1
   19228:	uxth	r0, r0
   1922c:	str	r0, [fp, #-28]	; 0xffffffe4
   19230:	b	19e70 <__assert_fail@plt+0x8e74>
   19234:	b	19238 <__assert_fail@plt+0x823c>
   19238:	b	1923c <__assert_fail@plt+0x8240>
   1923c:	ldr	r0, [fp, #8]
   19240:	cmp	r0, #0
   19244:	bge	19348 <__assert_fail@plt+0x834c>
   19248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1924c:	cmp	r0, #0
   19250:	bge	192dc <__assert_fail@plt+0x82e0>
   19254:	b	19258 <__assert_fail@plt+0x825c>
   19258:	ldr	r0, [pc, #3128]	; 19e98 <__assert_fail@plt+0x8e9c>
   1925c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19260:	ldr	r2, [fp, #8]
   19264:	sdiv	r0, r0, r2
   19268:	cmp	r1, r0
   1926c:	blt	193d8 <__assert_fail@plt+0x83dc>
   19270:	b	193ec <__assert_fail@plt+0x83f0>
   19274:	b	19278 <__assert_fail@plt+0x827c>
   19278:	ldr	r0, [pc, #3100]	; 19e9c <__assert_fail@plt+0x8ea0>
   1927c:	ldr	r1, [fp, #8]
   19280:	cmp	r1, r0
   19284:	blt	1929c <__assert_fail@plt+0x82a0>
   19288:	b	192a8 <__assert_fail@plt+0x82ac>
   1928c:	ldr	r0, [fp, #8]
   19290:	movw	r1, #0
   19294:	cmp	r1, r0
   19298:	bge	192a8 <__assert_fail@plt+0x82ac>
   1929c:	movw	r0, #0
   192a0:	str	r0, [sp, #148]	; 0x94
   192a4:	b	192c0 <__assert_fail@plt+0x82c4>
   192a8:	ldr	r0, [pc, #3048]	; 19e98 <__assert_fail@plt+0x8e9c>
   192ac:	ldr	r1, [fp, #8]
   192b0:	movw	r2, #0
   192b4:	sub	r1, r2, r1
   192b8:	sdiv	r0, r0, r1
   192bc:	str	r0, [sp, #148]	; 0x94
   192c0:	ldr	r0, [sp, #148]	; 0x94
   192c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192c8:	mvn	r2, #0
   192cc:	sub	r1, r2, r1
   192d0:	cmp	r0, r1
   192d4:	ble	193d8 <__assert_fail@plt+0x83dc>
   192d8:	b	193ec <__assert_fail@plt+0x83f0>
   192dc:	ldr	r0, [fp, #8]
   192e0:	cmn	r0, #1
   192e4:	bne	1932c <__assert_fail@plt+0x8330>
   192e8:	b	192ec <__assert_fail@plt+0x82f0>
   192ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192f0:	add	r0, r0, #-2147483648	; 0x80000000
   192f4:	movw	r1, #0
   192f8:	cmp	r1, r0
   192fc:	blt	193d8 <__assert_fail@plt+0x83dc>
   19300:	b	193ec <__assert_fail@plt+0x83f0>
   19304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19308:	movw	r1, #0
   1930c:	cmp	r1, r0
   19310:	bge	193ec <__assert_fail@plt+0x83f0>
   19314:	ldr	r0, [pc, #2940]	; 19e98 <__assert_fail@plt+0x8e9c>
   19318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1931c:	sub	r1, r1, #1
   19320:	cmp	r0, r1
   19324:	blt	193d8 <__assert_fail@plt+0x83dc>
   19328:	b	193ec <__assert_fail@plt+0x83f0>
   1932c:	ldr	r0, [pc, #2924]	; 19ea0 <__assert_fail@plt+0x8ea4>
   19330:	ldr	r1, [fp, #8]
   19334:	sdiv	r0, r0, r1
   19338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1933c:	cmp	r0, r1
   19340:	blt	193d8 <__assert_fail@plt+0x83dc>
   19344:	b	193ec <__assert_fail@plt+0x83f0>
   19348:	ldr	r0, [fp, #8]
   1934c:	cmp	r0, #0
   19350:	bne	19358 <__assert_fail@plt+0x835c>
   19354:	b	193ec <__assert_fail@plt+0x83f0>
   19358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1935c:	cmp	r0, #0
   19360:	bge	193c0 <__assert_fail@plt+0x83c4>
   19364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19368:	cmn	r0, #1
   1936c:	bne	193a4 <__assert_fail@plt+0x83a8>
   19370:	b	19374 <__assert_fail@plt+0x8378>
   19374:	ldr	r0, [fp, #8]
   19378:	add	r0, r0, #-2147483648	; 0x80000000
   1937c:	movw	r1, #0
   19380:	cmp	r1, r0
   19384:	blt	193d8 <__assert_fail@plt+0x83dc>
   19388:	b	193ec <__assert_fail@plt+0x83f0>
   1938c:	ldr	r0, [pc, #2820]	; 19e98 <__assert_fail@plt+0x8e9c>
   19390:	ldr	r1, [fp, #8]
   19394:	sub	r1, r1, #1
   19398:	cmp	r0, r1
   1939c:	blt	193d8 <__assert_fail@plt+0x83dc>
   193a0:	b	193ec <__assert_fail@plt+0x83f0>
   193a4:	ldr	r0, [pc, #2804]	; 19ea0 <__assert_fail@plt+0x8ea4>
   193a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193ac:	sdiv	r0, r0, r1
   193b0:	ldr	r1, [fp, #8]
   193b4:	cmp	r0, r1
   193b8:	blt	193d8 <__assert_fail@plt+0x83dc>
   193bc:	b	193ec <__assert_fail@plt+0x83f0>
   193c0:	ldr	r0, [pc, #2768]	; 19e98 <__assert_fail@plt+0x8e9c>
   193c4:	ldr	r1, [fp, #8]
   193c8:	sdiv	r0, r0, r1
   193cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193d0:	cmp	r0, r1
   193d4:	bge	193ec <__assert_fail@plt+0x83f0>
   193d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193dc:	ldr	r1, [fp, #8]
   193e0:	mul	r0, r0, r1
   193e4:	str	r0, [fp, #-28]	; 0xffffffe4
   193e8:	b	19e6c <__assert_fail@plt+0x8e70>
   193ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193f0:	ldr	r1, [fp, #8]
   193f4:	mul	r0, r0, r1
   193f8:	str	r0, [fp, #-28]	; 0xffffffe4
   193fc:	b	19e70 <__assert_fail@plt+0x8e74>
   19400:	ldr	r0, [fp, #8]
   19404:	cmp	r0, #0
   19408:	bge	19518 <__assert_fail@plt+0x851c>
   1940c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19410:	cmp	r0, #0
   19414:	bge	194a0 <__assert_fail@plt+0x84a4>
   19418:	b	19438 <__assert_fail@plt+0x843c>
   1941c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19420:	ldr	r1, [fp, #8]
   19424:	mvn	r2, #0
   19428:	udiv	r1, r2, r1
   1942c:	cmp	r0, r1
   19430:	bcc	195b4 <__assert_fail@plt+0x85b8>
   19434:	b	195c8 <__assert_fail@plt+0x85cc>
   19438:	b	1943c <__assert_fail@plt+0x8440>
   1943c:	ldr	r0, [pc, #2648]	; 19e9c <__assert_fail@plt+0x8ea0>
   19440:	ldr	r1, [fp, #8]
   19444:	cmp	r1, r0
   19448:	blt	19460 <__assert_fail@plt+0x8464>
   1944c:	b	1946c <__assert_fail@plt+0x8470>
   19450:	ldr	r0, [fp, #8]
   19454:	movw	r1, #0
   19458:	cmp	r1, r0
   1945c:	bge	1946c <__assert_fail@plt+0x8470>
   19460:	movw	r0, #1
   19464:	str	r0, [sp, #144]	; 0x90
   19468:	b	19484 <__assert_fail@plt+0x8488>
   1946c:	ldr	r0, [fp, #8]
   19470:	movw	r1, #0
   19474:	sub	r0, r1, r0
   19478:	mvn	r1, #0
   1947c:	udiv	r0, r1, r0
   19480:	str	r0, [sp, #144]	; 0x90
   19484:	ldr	r0, [sp, #144]	; 0x90
   19488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1948c:	mvn	r2, #0
   19490:	sub	r1, r2, r1
   19494:	cmp	r0, r1
   19498:	bls	195b4 <__assert_fail@plt+0x85b8>
   1949c:	b	195c8 <__assert_fail@plt+0x85cc>
   194a0:	b	194a4 <__assert_fail@plt+0x84a8>
   194a4:	b	194fc <__assert_fail@plt+0x8500>
   194a8:	b	194fc <__assert_fail@plt+0x8500>
   194ac:	ldr	r0, [fp, #8]
   194b0:	cmn	r0, #1
   194b4:	bne	194fc <__assert_fail@plt+0x8500>
   194b8:	b	194bc <__assert_fail@plt+0x84c0>
   194bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194c0:	add	r0, r0, #0
   194c4:	movw	r1, #0
   194c8:	cmp	r1, r0
   194cc:	blt	195b4 <__assert_fail@plt+0x85b8>
   194d0:	b	195c8 <__assert_fail@plt+0x85cc>
   194d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194d8:	movw	r1, #0
   194dc:	cmp	r1, r0
   194e0:	bge	195c8 <__assert_fail@plt+0x85cc>
   194e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194e8:	sub	r0, r0, #1
   194ec:	mvn	r1, #0
   194f0:	cmp	r1, r0
   194f4:	blt	195b4 <__assert_fail@plt+0x85b8>
   194f8:	b	195c8 <__assert_fail@plt+0x85cc>
   194fc:	ldr	r0, [fp, #8]
   19500:	movw	r1, #0
   19504:	sdiv	r0, r1, r0
   19508:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1950c:	cmp	r0, r1
   19510:	blt	195b4 <__assert_fail@plt+0x85b8>
   19514:	b	195c8 <__assert_fail@plt+0x85cc>
   19518:	ldr	r0, [fp, #8]
   1951c:	cmp	r0, #0
   19520:	bne	19528 <__assert_fail@plt+0x852c>
   19524:	b	195c8 <__assert_fail@plt+0x85cc>
   19528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1952c:	cmp	r0, #0
   19530:	bge	1959c <__assert_fail@plt+0x85a0>
   19534:	b	19538 <__assert_fail@plt+0x853c>
   19538:	b	19580 <__assert_fail@plt+0x8584>
   1953c:	b	19580 <__assert_fail@plt+0x8584>
   19540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19544:	cmn	r0, #1
   19548:	bne	19580 <__assert_fail@plt+0x8584>
   1954c:	b	19550 <__assert_fail@plt+0x8554>
   19550:	ldr	r0, [fp, #8]
   19554:	add	r0, r0, #0
   19558:	movw	r1, #0
   1955c:	cmp	r1, r0
   19560:	blt	195b4 <__assert_fail@plt+0x85b8>
   19564:	b	195c8 <__assert_fail@plt+0x85cc>
   19568:	ldr	r0, [fp, #8]
   1956c:	sub	r0, r0, #1
   19570:	mvn	r1, #0
   19574:	cmp	r1, r0
   19578:	blt	195b4 <__assert_fail@plt+0x85b8>
   1957c:	b	195c8 <__assert_fail@plt+0x85cc>
   19580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19584:	movw	r1, #0
   19588:	sdiv	r0, r1, r0
   1958c:	ldr	r1, [fp, #8]
   19590:	cmp	r0, r1
   19594:	blt	195b4 <__assert_fail@plt+0x85b8>
   19598:	b	195c8 <__assert_fail@plt+0x85cc>
   1959c:	ldr	r0, [fp, #8]
   195a0:	mvn	r1, #0
   195a4:	udiv	r0, r1, r0
   195a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195ac:	cmp	r0, r1
   195b0:	bcs	195c8 <__assert_fail@plt+0x85cc>
   195b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195b8:	ldr	r1, [fp, #8]
   195bc:	mul	r0, r0, r1
   195c0:	str	r0, [fp, #-28]	; 0xffffffe4
   195c4:	b	19e6c <__assert_fail@plt+0x8e70>
   195c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195cc:	ldr	r1, [fp, #8]
   195d0:	mul	r0, r0, r1
   195d4:	str	r0, [fp, #-28]	; 0xffffffe4
   195d8:	b	19e70 <__assert_fail@plt+0x8e74>
   195dc:	b	195e0 <__assert_fail@plt+0x85e4>
   195e0:	b	195e4 <__assert_fail@plt+0x85e8>
   195e4:	ldr	r0, [fp, #8]
   195e8:	cmp	r0, #0
   195ec:	bge	196f0 <__assert_fail@plt+0x86f4>
   195f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195f4:	cmp	r0, #0
   195f8:	bge	19684 <__assert_fail@plt+0x8688>
   195fc:	b	19600 <__assert_fail@plt+0x8604>
   19600:	ldr	r0, [pc, #2192]	; 19e98 <__assert_fail@plt+0x8e9c>
   19604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19608:	ldr	r2, [fp, #8]
   1960c:	sdiv	r0, r0, r2
   19610:	cmp	r1, r0
   19614:	blt	19780 <__assert_fail@plt+0x8784>
   19618:	b	19794 <__assert_fail@plt+0x8798>
   1961c:	b	19620 <__assert_fail@plt+0x8624>
   19620:	ldr	r0, [pc, #2164]	; 19e9c <__assert_fail@plt+0x8ea0>
   19624:	ldr	r1, [fp, #8]
   19628:	cmp	r1, r0
   1962c:	blt	19644 <__assert_fail@plt+0x8648>
   19630:	b	19650 <__assert_fail@plt+0x8654>
   19634:	ldr	r0, [fp, #8]
   19638:	movw	r1, #0
   1963c:	cmp	r1, r0
   19640:	bge	19650 <__assert_fail@plt+0x8654>
   19644:	movw	r0, #0
   19648:	str	r0, [sp, #140]	; 0x8c
   1964c:	b	19668 <__assert_fail@plt+0x866c>
   19650:	ldr	r0, [pc, #2112]	; 19e98 <__assert_fail@plt+0x8e9c>
   19654:	ldr	r1, [fp, #8]
   19658:	movw	r2, #0
   1965c:	sub	r1, r2, r1
   19660:	sdiv	r0, r0, r1
   19664:	str	r0, [sp, #140]	; 0x8c
   19668:	ldr	r0, [sp, #140]	; 0x8c
   1966c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19670:	mvn	r2, #0
   19674:	sub	r1, r2, r1
   19678:	cmp	r0, r1
   1967c:	ble	19780 <__assert_fail@plt+0x8784>
   19680:	b	19794 <__assert_fail@plt+0x8798>
   19684:	ldr	r0, [fp, #8]
   19688:	cmn	r0, #1
   1968c:	bne	196d4 <__assert_fail@plt+0x86d8>
   19690:	b	19694 <__assert_fail@plt+0x8698>
   19694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19698:	add	r0, r0, #-2147483648	; 0x80000000
   1969c:	movw	r1, #0
   196a0:	cmp	r1, r0
   196a4:	blt	19780 <__assert_fail@plt+0x8784>
   196a8:	b	19794 <__assert_fail@plt+0x8798>
   196ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196b0:	movw	r1, #0
   196b4:	cmp	r1, r0
   196b8:	bge	19794 <__assert_fail@plt+0x8798>
   196bc:	ldr	r0, [pc, #2004]	; 19e98 <__assert_fail@plt+0x8e9c>
   196c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196c4:	sub	r1, r1, #1
   196c8:	cmp	r0, r1
   196cc:	blt	19780 <__assert_fail@plt+0x8784>
   196d0:	b	19794 <__assert_fail@plt+0x8798>
   196d4:	ldr	r0, [pc, #1988]	; 19ea0 <__assert_fail@plt+0x8ea4>
   196d8:	ldr	r1, [fp, #8]
   196dc:	sdiv	r0, r0, r1
   196e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196e4:	cmp	r0, r1
   196e8:	blt	19780 <__assert_fail@plt+0x8784>
   196ec:	b	19794 <__assert_fail@plt+0x8798>
   196f0:	ldr	r0, [fp, #8]
   196f4:	cmp	r0, #0
   196f8:	bne	19700 <__assert_fail@plt+0x8704>
   196fc:	b	19794 <__assert_fail@plt+0x8798>
   19700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19704:	cmp	r0, #0
   19708:	bge	19768 <__assert_fail@plt+0x876c>
   1970c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19710:	cmn	r0, #1
   19714:	bne	1974c <__assert_fail@plt+0x8750>
   19718:	b	1971c <__assert_fail@plt+0x8720>
   1971c:	ldr	r0, [fp, #8]
   19720:	add	r0, r0, #-2147483648	; 0x80000000
   19724:	movw	r1, #0
   19728:	cmp	r1, r0
   1972c:	blt	19780 <__assert_fail@plt+0x8784>
   19730:	b	19794 <__assert_fail@plt+0x8798>
   19734:	ldr	r0, [pc, #1884]	; 19e98 <__assert_fail@plt+0x8e9c>
   19738:	ldr	r1, [fp, #8]
   1973c:	sub	r1, r1, #1
   19740:	cmp	r0, r1
   19744:	blt	19780 <__assert_fail@plt+0x8784>
   19748:	b	19794 <__assert_fail@plt+0x8798>
   1974c:	ldr	r0, [pc, #1868]	; 19ea0 <__assert_fail@plt+0x8ea4>
   19750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19754:	sdiv	r0, r0, r1
   19758:	ldr	r1, [fp, #8]
   1975c:	cmp	r0, r1
   19760:	blt	19780 <__assert_fail@plt+0x8784>
   19764:	b	19794 <__assert_fail@plt+0x8798>
   19768:	ldr	r0, [pc, #1832]	; 19e98 <__assert_fail@plt+0x8e9c>
   1976c:	ldr	r1, [fp, #8]
   19770:	sdiv	r0, r0, r1
   19774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19778:	cmp	r0, r1
   1977c:	bge	19794 <__assert_fail@plt+0x8798>
   19780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19784:	ldr	r1, [fp, #8]
   19788:	mul	r0, r0, r1
   1978c:	str	r0, [fp, #-28]	; 0xffffffe4
   19790:	b	19e6c <__assert_fail@plt+0x8e70>
   19794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19798:	ldr	r1, [fp, #8]
   1979c:	mul	r0, r0, r1
   197a0:	str	r0, [fp, #-28]	; 0xffffffe4
   197a4:	b	19e70 <__assert_fail@plt+0x8e74>
   197a8:	ldr	r0, [fp, #8]
   197ac:	cmp	r0, #0
   197b0:	bge	198c0 <__assert_fail@plt+0x88c4>
   197b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197b8:	cmp	r0, #0
   197bc:	bge	19848 <__assert_fail@plt+0x884c>
   197c0:	b	197e0 <__assert_fail@plt+0x87e4>
   197c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197c8:	ldr	r1, [fp, #8]
   197cc:	mvn	r2, #0
   197d0:	udiv	r1, r2, r1
   197d4:	cmp	r0, r1
   197d8:	bcc	1995c <__assert_fail@plt+0x8960>
   197dc:	b	19970 <__assert_fail@plt+0x8974>
   197e0:	b	197e4 <__assert_fail@plt+0x87e8>
   197e4:	ldr	r0, [pc, #1712]	; 19e9c <__assert_fail@plt+0x8ea0>
   197e8:	ldr	r1, [fp, #8]
   197ec:	cmp	r1, r0
   197f0:	blt	19808 <__assert_fail@plt+0x880c>
   197f4:	b	19814 <__assert_fail@plt+0x8818>
   197f8:	ldr	r0, [fp, #8]
   197fc:	movw	r1, #0
   19800:	cmp	r1, r0
   19804:	bge	19814 <__assert_fail@plt+0x8818>
   19808:	movw	r0, #1
   1980c:	str	r0, [sp, #136]	; 0x88
   19810:	b	1982c <__assert_fail@plt+0x8830>
   19814:	ldr	r0, [fp, #8]
   19818:	movw	r1, #0
   1981c:	sub	r0, r1, r0
   19820:	mvn	r1, #0
   19824:	udiv	r0, r1, r0
   19828:	str	r0, [sp, #136]	; 0x88
   1982c:	ldr	r0, [sp, #136]	; 0x88
   19830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19834:	mvn	r2, #0
   19838:	sub	r1, r2, r1
   1983c:	cmp	r0, r1
   19840:	bls	1995c <__assert_fail@plt+0x8960>
   19844:	b	19970 <__assert_fail@plt+0x8974>
   19848:	b	1984c <__assert_fail@plt+0x8850>
   1984c:	b	198a4 <__assert_fail@plt+0x88a8>
   19850:	b	198a4 <__assert_fail@plt+0x88a8>
   19854:	ldr	r0, [fp, #8]
   19858:	cmn	r0, #1
   1985c:	bne	198a4 <__assert_fail@plt+0x88a8>
   19860:	b	19864 <__assert_fail@plt+0x8868>
   19864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19868:	add	r0, r0, #0
   1986c:	movw	r1, #0
   19870:	cmp	r1, r0
   19874:	blt	1995c <__assert_fail@plt+0x8960>
   19878:	b	19970 <__assert_fail@plt+0x8974>
   1987c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19880:	movw	r1, #0
   19884:	cmp	r1, r0
   19888:	bge	19970 <__assert_fail@plt+0x8974>
   1988c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19890:	sub	r0, r0, #1
   19894:	mvn	r1, #0
   19898:	cmp	r1, r0
   1989c:	blt	1995c <__assert_fail@plt+0x8960>
   198a0:	b	19970 <__assert_fail@plt+0x8974>
   198a4:	ldr	r0, [fp, #8]
   198a8:	movw	r1, #0
   198ac:	sdiv	r0, r1, r0
   198b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198b4:	cmp	r0, r1
   198b8:	blt	1995c <__assert_fail@plt+0x8960>
   198bc:	b	19970 <__assert_fail@plt+0x8974>
   198c0:	ldr	r0, [fp, #8]
   198c4:	cmp	r0, #0
   198c8:	bne	198d0 <__assert_fail@plt+0x88d4>
   198cc:	b	19970 <__assert_fail@plt+0x8974>
   198d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198d4:	cmp	r0, #0
   198d8:	bge	19944 <__assert_fail@plt+0x8948>
   198dc:	b	198e0 <__assert_fail@plt+0x88e4>
   198e0:	b	19928 <__assert_fail@plt+0x892c>
   198e4:	b	19928 <__assert_fail@plt+0x892c>
   198e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198ec:	cmn	r0, #1
   198f0:	bne	19928 <__assert_fail@plt+0x892c>
   198f4:	b	198f8 <__assert_fail@plt+0x88fc>
   198f8:	ldr	r0, [fp, #8]
   198fc:	add	r0, r0, #0
   19900:	movw	r1, #0
   19904:	cmp	r1, r0
   19908:	blt	1995c <__assert_fail@plt+0x8960>
   1990c:	b	19970 <__assert_fail@plt+0x8974>
   19910:	ldr	r0, [fp, #8]
   19914:	sub	r0, r0, #1
   19918:	mvn	r1, #0
   1991c:	cmp	r1, r0
   19920:	blt	1995c <__assert_fail@plt+0x8960>
   19924:	b	19970 <__assert_fail@plt+0x8974>
   19928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1992c:	movw	r1, #0
   19930:	sdiv	r0, r1, r0
   19934:	ldr	r1, [fp, #8]
   19938:	cmp	r0, r1
   1993c:	blt	1995c <__assert_fail@plt+0x8960>
   19940:	b	19970 <__assert_fail@plt+0x8974>
   19944:	ldr	r0, [fp, #8]
   19948:	mvn	r1, #0
   1994c:	udiv	r0, r1, r0
   19950:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19954:	cmp	r0, r1
   19958:	bcs	19970 <__assert_fail@plt+0x8974>
   1995c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19960:	ldr	r1, [fp, #8]
   19964:	mul	r0, r0, r1
   19968:	str	r0, [fp, #-28]	; 0xffffffe4
   1996c:	b	19e6c <__assert_fail@plt+0x8e70>
   19970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19974:	ldr	r1, [fp, #8]
   19978:	mul	r0, r0, r1
   1997c:	str	r0, [fp, #-28]	; 0xffffffe4
   19980:	b	19e70 <__assert_fail@plt+0x8e74>
   19984:	b	19988 <__assert_fail@plt+0x898c>
   19988:	ldr	r0, [fp, #8]
   1998c:	cmp	r0, #0
   19990:	bge	19b18 <__assert_fail@plt+0x8b1c>
   19994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19998:	cmp	r0, #0
   1999c:	bge	19a84 <__assert_fail@plt+0x8a88>
   199a0:	b	199a4 <__assert_fail@plt+0x89a8>
   199a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199a8:	ldr	r1, [fp, #8]
   199ac:	asr	r3, r1, #31
   199b0:	mvn	r2, #0
   199b4:	mvn	ip, #-2147483648	; 0x80000000
   199b8:	str	r0, [sp, #132]	; 0x84
   199bc:	mov	r0, r2
   199c0:	str	r1, [sp, #128]	; 0x80
   199c4:	mov	r1, ip
   199c8:	ldr	r2, [sp, #128]	; 0x80
   199cc:	bl	1eb60 <__assert_fail@plt+0xdb64>
   199d0:	ldr	r2, [sp, #132]	; 0x84
   199d4:	subs	r0, r2, r0
   199d8:	rscs	r1, r1, r2, asr #31
   199dc:	str	r0, [sp, #124]	; 0x7c
   199e0:	str	r1, [sp, #120]	; 0x78
   199e4:	blt	19bf8 <__assert_fail@plt+0x8bfc>
   199e8:	b	19c0c <__assert_fail@plt+0x8c10>
   199ec:	b	199f0 <__assert_fail@plt+0x89f4>
   199f0:	ldr	r0, [pc, #1188]	; 19e9c <__assert_fail@plt+0x8ea0>
   199f4:	ldr	r1, [fp, #8]
   199f8:	cmp	r1, r0
   199fc:	blt	19a14 <__assert_fail@plt+0x8a18>
   19a00:	b	19a28 <__assert_fail@plt+0x8a2c>
   19a04:	ldr	r0, [fp, #8]
   19a08:	movw	r1, #0
   19a0c:	cmp	r1, r0
   19a10:	bge	19a28 <__assert_fail@plt+0x8a2c>
   19a14:	mov	r0, #0
   19a18:	mvn	r1, #0
   19a1c:	str	r1, [sp, #116]	; 0x74
   19a20:	str	r0, [sp, #112]	; 0x70
   19a24:	b	19a5c <__assert_fail@plt+0x8a60>
   19a28:	ldr	r0, [fp, #8]
   19a2c:	rsb	r0, r0, #0
   19a30:	asr	r3, r0, #31
   19a34:	mvn	r1, #0
   19a38:	mvn	r2, #-2147483648	; 0x80000000
   19a3c:	str	r0, [sp, #108]	; 0x6c
   19a40:	mov	r0, r1
   19a44:	mov	r1, r2
   19a48:	ldr	r2, [sp, #108]	; 0x6c
   19a4c:	bl	1eb60 <__assert_fail@plt+0xdb64>
   19a50:	str	r0, [sp, #116]	; 0x74
   19a54:	str	r1, [sp, #112]	; 0x70
   19a58:	b	19a5c <__assert_fail@plt+0x8a60>
   19a5c:	ldr	r0, [sp, #112]	; 0x70
   19a60:	ldr	r1, [sp, #116]	; 0x74
   19a64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a68:	mvn	r2, r2
   19a6c:	subs	r1, r2, r1
   19a70:	rscs	r0, r0, r2, asr #31
   19a74:	str	r1, [sp, #104]	; 0x68
   19a78:	str	r0, [sp, #100]	; 0x64
   19a7c:	bge	19bf8 <__assert_fail@plt+0x8bfc>
   19a80:	b	19c0c <__assert_fail@plt+0x8c10>
   19a84:	ldr	r0, [fp, #8]
   19a88:	cmn	r0, #1
   19a8c:	bne	19ad8 <__assert_fail@plt+0x8adc>
   19a90:	b	19a94 <__assert_fail@plt+0x8a98>
   19a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a98:	mov	r1, #-2147483648	; 0x80000000
   19a9c:	add	r1, r1, r0, asr #31
   19aa0:	rsbs	r0, r0, #0
   19aa4:	rscs	r1, r1, #0
   19aa8:	str	r0, [sp, #96]	; 0x60
   19aac:	str	r1, [sp, #92]	; 0x5c
   19ab0:	blt	19bf8 <__assert_fail@plt+0x8bfc>
   19ab4:	b	19c0c <__assert_fail@plt+0x8c10>
   19ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19abc:	movw	r1, #0
   19ac0:	cmp	r1, r0
   19ac4:	bge	19c0c <__assert_fail@plt+0x8c10>
   19ac8:	mov	r0, #0
   19acc:	cmp	r0, #0
   19ad0:	bne	19bf8 <__assert_fail@plt+0x8bfc>
   19ad4:	b	19c0c <__assert_fail@plt+0x8c10>
   19ad8:	ldr	r0, [fp, #8]
   19adc:	asr	r3, r0, #31
   19ae0:	mov	r1, #0
   19ae4:	mov	r2, #-2147483648	; 0x80000000
   19ae8:	str	r0, [sp, #88]	; 0x58
   19aec:	mov	r0, r1
   19af0:	mov	r1, r2
   19af4:	ldr	r2, [sp, #88]	; 0x58
   19af8:	bl	1eb60 <__assert_fail@plt+0xdb64>
   19afc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b00:	subs	r0, r0, r2
   19b04:	sbcs	r1, r1, r2, asr #31
   19b08:	str	r0, [sp, #84]	; 0x54
   19b0c:	str	r1, [sp, #80]	; 0x50
   19b10:	blt	19bf8 <__assert_fail@plt+0x8bfc>
   19b14:	b	19c0c <__assert_fail@plt+0x8c10>
   19b18:	ldr	r0, [fp, #8]
   19b1c:	cmp	r0, #0
   19b20:	bne	19b28 <__assert_fail@plt+0x8b2c>
   19b24:	b	19c0c <__assert_fail@plt+0x8c10>
   19b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b2c:	cmp	r0, #0
   19b30:	bge	19bb8 <__assert_fail@plt+0x8bbc>
   19b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b38:	cmn	r0, #1
   19b3c:	bne	19b78 <__assert_fail@plt+0x8b7c>
   19b40:	b	19b44 <__assert_fail@plt+0x8b48>
   19b44:	ldr	r0, [fp, #8]
   19b48:	mov	r1, #-2147483648	; 0x80000000
   19b4c:	add	r1, r1, r0, asr #31
   19b50:	rsbs	r0, r0, #0
   19b54:	rscs	r1, r1, #0
   19b58:	str	r0, [sp, #76]	; 0x4c
   19b5c:	str	r1, [sp, #72]	; 0x48
   19b60:	blt	19bf8 <__assert_fail@plt+0x8bfc>
   19b64:	b	19c0c <__assert_fail@plt+0x8c10>
   19b68:	mov	r0, #0
   19b6c:	cmp	r0, #0
   19b70:	bne	19bf8 <__assert_fail@plt+0x8bfc>
   19b74:	b	19c0c <__assert_fail@plt+0x8c10>
   19b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b7c:	asr	r3, r0, #31
   19b80:	mov	r1, #0
   19b84:	mov	r2, #-2147483648	; 0x80000000
   19b88:	str	r0, [sp, #68]	; 0x44
   19b8c:	mov	r0, r1
   19b90:	mov	r1, r2
   19b94:	ldr	r2, [sp, #68]	; 0x44
   19b98:	bl	1eb60 <__assert_fail@plt+0xdb64>
   19b9c:	ldr	r2, [fp, #8]
   19ba0:	subs	r0, r0, r2
   19ba4:	sbcs	r1, r1, r2, asr #31
   19ba8:	str	r0, [sp, #64]	; 0x40
   19bac:	str	r1, [sp, #60]	; 0x3c
   19bb0:	blt	19bf8 <__assert_fail@plt+0x8bfc>
   19bb4:	b	19c0c <__assert_fail@plt+0x8c10>
   19bb8:	ldr	r0, [fp, #8]
   19bbc:	asr	r3, r0, #31
   19bc0:	mvn	r1, #0
   19bc4:	mvn	r2, #-2147483648	; 0x80000000
   19bc8:	str	r0, [sp, #56]	; 0x38
   19bcc:	mov	r0, r1
   19bd0:	mov	r1, r2
   19bd4:	ldr	r2, [sp, #56]	; 0x38
   19bd8:	bl	1eb60 <__assert_fail@plt+0xdb64>
   19bdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19be0:	subs	r0, r0, r2
   19be4:	sbcs	r1, r1, r2, asr #31
   19be8:	str	r0, [sp, #52]	; 0x34
   19bec:	str	r1, [sp, #48]	; 0x30
   19bf0:	bge	19c0c <__assert_fail@plt+0x8c10>
   19bf4:	b	19bf8 <__assert_fail@plt+0x8bfc>
   19bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bfc:	ldr	r1, [fp, #8]
   19c00:	mul	r0, r0, r1
   19c04:	str	r0, [fp, #-28]	; 0xffffffe4
   19c08:	b	19e6c <__assert_fail@plt+0x8e70>
   19c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c10:	ldr	r1, [fp, #8]
   19c14:	mul	r0, r0, r1
   19c18:	str	r0, [fp, #-28]	; 0xffffffe4
   19c1c:	b	19e70 <__assert_fail@plt+0x8e74>
   19c20:	ldr	r0, [fp, #8]
   19c24:	cmp	r0, #0
   19c28:	bge	19d88 <__assert_fail@plt+0x8d8c>
   19c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c30:	cmp	r0, #0
   19c34:	bge	19d10 <__assert_fail@plt+0x8d14>
   19c38:	b	19c80 <__assert_fail@plt+0x8c84>
   19c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c40:	ldr	r1, [fp, #8]
   19c44:	asr	r3, r1, #31
   19c48:	mvn	r2, #0
   19c4c:	str	r0, [sp, #44]	; 0x2c
   19c50:	mov	r0, r2
   19c54:	str	r1, [sp, #40]	; 0x28
   19c58:	mov	r1, r2
   19c5c:	ldr	r2, [sp, #40]	; 0x28
   19c60:	bl	1ec34 <__assert_fail@plt+0xdc38>
   19c64:	ldr	r2, [sp, #44]	; 0x2c
   19c68:	subs	r0, r2, r0
   19c6c:	rscs	r1, r1, r2, asr #31
   19c70:	str	r0, [sp, #36]	; 0x24
   19c74:	str	r1, [sp, #32]
   19c78:	bcc	19e44 <__assert_fail@plt+0x8e48>
   19c7c:	b	19e58 <__assert_fail@plt+0x8e5c>
   19c80:	b	19c84 <__assert_fail@plt+0x8c88>
   19c84:	ldr	r0, [pc, #528]	; 19e9c <__assert_fail@plt+0x8ea0>
   19c88:	ldr	r1, [fp, #8]
   19c8c:	cmp	r1, r0
   19c90:	blt	19ca8 <__assert_fail@plt+0x8cac>
   19c94:	b	19cbc <__assert_fail@plt+0x8cc0>
   19c98:	ldr	r0, [fp, #8]
   19c9c:	movw	r1, #0
   19ca0:	cmp	r1, r0
   19ca4:	bge	19cbc <__assert_fail@plt+0x8cc0>
   19ca8:	mov	r0, #1
   19cac:	mvn	r1, #0
   19cb0:	str	r1, [sp, #28]
   19cb4:	str	r0, [sp, #24]
   19cb8:	b	19ce8 <__assert_fail@plt+0x8cec>
   19cbc:	ldr	r0, [fp, #8]
   19cc0:	rsb	r0, r0, #0
   19cc4:	asr	r3, r0, #31
   19cc8:	mvn	r1, #0
   19ccc:	str	r0, [sp, #20]
   19cd0:	mov	r0, r1
   19cd4:	ldr	r2, [sp, #20]
   19cd8:	bl	1ec34 <__assert_fail@plt+0xdc38>
   19cdc:	str	r0, [sp, #28]
   19ce0:	str	r1, [sp, #24]
   19ce4:	b	19ce8 <__assert_fail@plt+0x8cec>
   19ce8:	ldr	r0, [sp, #24]
   19cec:	ldr	r1, [sp, #28]
   19cf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19cf4:	mvn	r2, r2
   19cf8:	subs	r1, r2, r1
   19cfc:	rscs	r0, r0, r2, asr #31
   19d00:	str	r1, [sp, #16]
   19d04:	str	r0, [sp, #12]
   19d08:	bcs	19e44 <__assert_fail@plt+0x8e48>
   19d0c:	b	19e58 <__assert_fail@plt+0x8e5c>
   19d10:	b	19d14 <__assert_fail@plt+0x8d18>
   19d14:	b	19d6c <__assert_fail@plt+0x8d70>
   19d18:	b	19d6c <__assert_fail@plt+0x8d70>
   19d1c:	ldr	r0, [fp, #8]
   19d20:	cmn	r0, #1
   19d24:	bne	19d6c <__assert_fail@plt+0x8d70>
   19d28:	b	19d2c <__assert_fail@plt+0x8d30>
   19d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d30:	add	r0, r0, #0
   19d34:	movw	r1, #0
   19d38:	cmp	r1, r0
   19d3c:	blt	19e44 <__assert_fail@plt+0x8e48>
   19d40:	b	19e58 <__assert_fail@plt+0x8e5c>
   19d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d48:	movw	r1, #0
   19d4c:	cmp	r1, r0
   19d50:	bge	19e58 <__assert_fail@plt+0x8e5c>
   19d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d58:	sub	r0, r0, #1
   19d5c:	mvn	r1, #0
   19d60:	cmp	r1, r0
   19d64:	blt	19e44 <__assert_fail@plt+0x8e48>
   19d68:	b	19e58 <__assert_fail@plt+0x8e5c>
   19d6c:	ldr	r0, [fp, #8]
   19d70:	movw	r1, #0
   19d74:	sdiv	r0, r1, r0
   19d78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19d7c:	cmp	r0, r1
   19d80:	blt	19e44 <__assert_fail@plt+0x8e48>
   19d84:	b	19e58 <__assert_fail@plt+0x8e5c>
   19d88:	ldr	r0, [fp, #8]
   19d8c:	cmp	r0, #0
   19d90:	bne	19d98 <__assert_fail@plt+0x8d9c>
   19d94:	b	19e58 <__assert_fail@plt+0x8e5c>
   19d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d9c:	cmp	r0, #0
   19da0:	bge	19e0c <__assert_fail@plt+0x8e10>
   19da4:	b	19da8 <__assert_fail@plt+0x8dac>
   19da8:	b	19df0 <__assert_fail@plt+0x8df4>
   19dac:	b	19df0 <__assert_fail@plt+0x8df4>
   19db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19db4:	cmn	r0, #1
   19db8:	bne	19df0 <__assert_fail@plt+0x8df4>
   19dbc:	b	19dc0 <__assert_fail@plt+0x8dc4>
   19dc0:	ldr	r0, [fp, #8]
   19dc4:	add	r0, r0, #0
   19dc8:	movw	r1, #0
   19dcc:	cmp	r1, r0
   19dd0:	blt	19e44 <__assert_fail@plt+0x8e48>
   19dd4:	b	19e58 <__assert_fail@plt+0x8e5c>
   19dd8:	ldr	r0, [fp, #8]
   19ddc:	sub	r0, r0, #1
   19de0:	mvn	r1, #0
   19de4:	cmp	r1, r0
   19de8:	blt	19e44 <__assert_fail@plt+0x8e48>
   19dec:	b	19e58 <__assert_fail@plt+0x8e5c>
   19df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19df4:	movw	r1, #0
   19df8:	sdiv	r0, r1, r0
   19dfc:	ldr	r1, [fp, #8]
   19e00:	cmp	r0, r1
   19e04:	blt	19e44 <__assert_fail@plt+0x8e48>
   19e08:	b	19e58 <__assert_fail@plt+0x8e5c>
   19e0c:	ldr	r0, [fp, #8]
   19e10:	asr	r3, r0, #31
   19e14:	mvn	r1, #0
   19e18:	str	r0, [sp, #8]
   19e1c:	mov	r0, r1
   19e20:	ldr	r2, [sp, #8]
   19e24:	bl	1ec34 <__assert_fail@plt+0xdc38>
   19e28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e2c:	subs	r0, r0, r2
   19e30:	sbcs	r1, r1, r2, asr #31
   19e34:	str	r0, [sp, #4]
   19e38:	str	r1, [sp]
   19e3c:	bcs	19e58 <__assert_fail@plt+0x8e5c>
   19e40:	b	19e44 <__assert_fail@plt+0x8e48>
   19e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e48:	ldr	r1, [fp, #8]
   19e4c:	mul	r0, r0, r1
   19e50:	str	r0, [fp, #-28]	; 0xffffffe4
   19e54:	b	19e6c <__assert_fail@plt+0x8e70>
   19e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e5c:	ldr	r1, [fp, #8]
   19e60:	mul	r0, r0, r1
   19e64:	str	r0, [fp, #-28]	; 0xffffffe4
   19e68:	b	19e70 <__assert_fail@plt+0x8e74>
   19e6c:	bl	1a048 <__assert_fail@plt+0x904c>
   19e70:	ldr	r0, [fp, #-4]
   19e74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19e78:	bl	17304 <__assert_fail@plt+0x6308>
   19e7c:	str	r0, [fp, #-4]
   19e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e84:	ldr	r1, [fp, #-8]
   19e88:	str	r0, [r1]
   19e8c:	ldr	r0, [fp, #-4]
   19e90:	mov	sp, fp
   19e94:	pop	{fp, pc}
   19e98:	svcvc	0x00ffffff
   19e9c:	andhi	r0, r0, r1
   19ea0:	andhi	r0, r0, r0
   19ea4:			; <UNDEFINED> instruction: 0xffff8000
   19ea8:	push	{fp, lr}
   19eac:	mov	fp, sp
   19eb0:	sub	sp, sp, #8
   19eb4:	str	r0, [sp, #4]
   19eb8:	ldr	r0, [sp, #4]
   19ebc:	movw	r1, #1
   19ec0:	bl	19ecc <__assert_fail@plt+0x8ed0>
   19ec4:	mov	sp, fp
   19ec8:	pop	{fp, pc}
   19ecc:	push	{fp, lr}
   19ed0:	mov	fp, sp
   19ed4:	sub	sp, sp, #8
   19ed8:	str	r0, [sp, #4]
   19edc:	str	r1, [sp]
   19ee0:	ldr	r0, [sp, #4]
   19ee4:	ldr	r1, [sp]
   19ee8:	bl	1c698 <__assert_fail@plt+0xb69c>
   19eec:	bl	17290 <__assert_fail@plt+0x6294>
   19ef0:	mov	sp, fp
   19ef4:	pop	{fp, pc}
   19ef8:	push	{fp, lr}
   19efc:	mov	fp, sp
   19f00:	sub	sp, sp, #8
   19f04:	str	r0, [sp, #4]
   19f08:	ldr	r0, [sp, #4]
   19f0c:	movw	r1, #1
   19f10:	bl	19f1c <__assert_fail@plt+0x8f20>
   19f14:	mov	sp, fp
   19f18:	pop	{fp, pc}
   19f1c:	push	{fp, lr}
   19f20:	mov	fp, sp
   19f24:	sub	sp, sp, #8
   19f28:	str	r0, [sp, #4]
   19f2c:	str	r1, [sp]
   19f30:	ldr	r0, [sp, #4]
   19f34:	ldr	r1, [sp]
   19f38:	bl	1cd7c <__assert_fail@plt+0xbd80>
   19f3c:	bl	17290 <__assert_fail@plt+0x6294>
   19f40:	mov	sp, fp
   19f44:	pop	{fp, pc}
   19f48:	push	{fp, lr}
   19f4c:	mov	fp, sp
   19f50:	sub	sp, sp, #16
   19f54:	str	r0, [fp, #-4]
   19f58:	str	r1, [sp, #8]
   19f5c:	ldr	r0, [sp, #8]
   19f60:	bl	1726c <__assert_fail@plt+0x6270>
   19f64:	ldr	r1, [fp, #-4]
   19f68:	ldr	r2, [sp, #8]
   19f6c:	str	r0, [sp, #4]
   19f70:	bl	10e04 <memcpy@plt>
   19f74:	ldr	r0, [sp, #4]
   19f78:	mov	sp, fp
   19f7c:	pop	{fp, pc}
   19f80:	push	{fp, lr}
   19f84:	mov	fp, sp
   19f88:	sub	sp, sp, #16
   19f8c:	str	r0, [fp, #-4]
   19f90:	str	r1, [sp, #8]
   19f94:	ldr	r0, [sp, #8]
   19f98:	bl	172c0 <__assert_fail@plt+0x62c4>
   19f9c:	ldr	r1, [fp, #-4]
   19fa0:	ldr	r2, [sp, #8]
   19fa4:	str	r0, [sp, #4]
   19fa8:	bl	10e04 <memcpy@plt>
   19fac:	ldr	r0, [sp, #4]
   19fb0:	mov	sp, fp
   19fb4:	pop	{fp, pc}
   19fb8:	push	{fp, lr}
   19fbc:	mov	fp, sp
   19fc0:	sub	sp, sp, #16
   19fc4:	str	r0, [fp, #-4]
   19fc8:	str	r1, [sp, #8]
   19fcc:	ldr	r0, [sp, #8]
   19fd0:	add	r0, r0, #1
   19fd4:	bl	172c0 <__assert_fail@plt+0x62c4>
   19fd8:	str	r0, [sp, #4]
   19fdc:	ldr	r0, [sp, #4]
   19fe0:	ldr	r1, [sp, #8]
   19fe4:	add	r0, r0, r1
   19fe8:	movw	r1, #0
   19fec:	strb	r1, [r0]
   19ff0:	ldr	r0, [sp, #4]
   19ff4:	ldr	r1, [fp, #-4]
   19ff8:	ldr	r2, [sp, #8]
   19ffc:	str	r0, [sp]
   1a000:	bl	10e04 <memcpy@plt>
   1a004:	ldr	r0, [sp]
   1a008:	mov	sp, fp
   1a00c:	pop	{fp, pc}
   1a010:	push	{fp, lr}
   1a014:	mov	fp, sp
   1a018:	sub	sp, sp, #8
   1a01c:	str	r0, [sp, #4]
   1a020:	ldr	r0, [sp, #4]
   1a024:	ldr	r1, [sp, #4]
   1a028:	str	r0, [sp]
   1a02c:	mov	r0, r1
   1a030:	bl	10f18 <strlen@plt>
   1a034:	add	r1, r0, #1
   1a038:	ldr	r0, [sp]
   1a03c:	bl	19f48 <__assert_fail@plt+0x8f4c>
   1a040:	mov	sp, fp
   1a044:	pop	{fp, pc}
   1a048:	push	{fp, lr}
   1a04c:	mov	fp, sp
   1a050:	sub	sp, sp, #8
   1a054:	movw	r0, #232	; 0xe8
   1a058:	movt	r0, #3
   1a05c:	ldr	r0, [r0]
   1a060:	movw	r1, #64324	; 0xfb44
   1a064:	movt	r1, #1
   1a068:	str	r0, [sp, #4]
   1a06c:	mov	r0, r1
   1a070:	bl	10f0c <gettext@plt>
   1a074:	ldr	r1, [sp, #4]
   1a078:	str	r0, [sp]
   1a07c:	mov	r0, r1
   1a080:	movw	r1, #0
   1a084:	movw	r2, #63271	; 0xf727
   1a088:	movt	r2, #1
   1a08c:	ldr	r3, [sp]
   1a090:	bl	10ea0 <error@plt>
   1a094:	bl	10fe4 <abort@plt>
   1a098:	push	{r4, r5, r6, sl, fp, lr}
   1a09c:	add	fp, sp, #16
   1a0a0:	sub	sp, sp, #120	; 0x78
   1a0a4:	ldr	ip, [fp, #12]
   1a0a8:	ldr	lr, [fp, #8]
   1a0ac:	ldr	r4, [fp, #24]
   1a0b0:	ldr	r5, [fp, #20]
   1a0b4:	ldr	r6, [fp, #16]
   1a0b8:	str	r0, [fp, #-20]	; 0xffffffec
   1a0bc:	str	r1, [fp, #-24]	; 0xffffffe8
   1a0c0:	str	r3, [fp, #-28]	; 0xffffffe4
   1a0c4:	str	r2, [fp, #-32]	; 0xffffffe0
   1a0c8:	str	ip, [fp, #-36]	; 0xffffffdc
   1a0cc:	str	lr, [fp, #-40]	; 0xffffffd8
   1a0d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a0d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a0d8:	ldr	r1, [fp, #16]
   1a0dc:	movw	r3, #0
   1a0e0:	str	r1, [fp, #-60]	; 0xffffffc4
   1a0e4:	mov	r1, r3
   1a0e8:	sub	r3, fp, #56	; 0x38
   1a0ec:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1a0f0:	str	ip, [sp]
   1a0f4:	str	r5, [fp, #-64]	; 0xffffffc0
   1a0f8:	str	r4, [sp, #68]	; 0x44
   1a0fc:	str	r6, [sp, #64]	; 0x40
   1a100:	bl	1a364 <__assert_fail@plt+0x9368>
   1a104:	str	r0, [fp, #-44]	; 0xffffffd4
   1a108:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a10c:	cmp	r0, #0
   1a110:	bne	1a1ec <__assert_fail@plt+0x91f0>
   1a114:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a118:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a11c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a120:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a124:	subs	r0, r0, r2
   1a128:	sbcs	r1, r1, r3
   1a12c:	str	r0, [sp, #60]	; 0x3c
   1a130:	str	r1, [sp, #56]	; 0x38
   1a134:	blt	1a164 <__assert_fail@plt+0x9168>
   1a138:	b	1a13c <__assert_fail@plt+0x9140>
   1a13c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a140:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a144:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a148:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a14c:	subs	r0, r0, r2
   1a150:	sbcs	r1, r1, r3
   1a154:	str	r0, [sp, #52]	; 0x34
   1a158:	str	r1, [sp, #48]	; 0x30
   1a15c:	bge	1a1e8 <__assert_fail@plt+0x91ec>
   1a160:	b	1a164 <__assert_fail@plt+0x9168>
   1a164:	mov	r0, #1
   1a168:	str	r0, [fp, #-44]	; 0xffffffd4
   1a16c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a170:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a174:	subs	r0, r0, #1073741824	; 0x40000000
   1a178:	sbcs	r1, r1, #0
   1a17c:	str	r0, [sp, #44]	; 0x2c
   1a180:	str	r1, [sp, #40]	; 0x28
   1a184:	blt	1a19c <__assert_fail@plt+0x91a0>
   1a188:	b	1a18c <__assert_fail@plt+0x9190>
   1a18c:	bl	10f3c <__errno_location@plt>
   1a190:	movw	lr, #75	; 0x4b
   1a194:	str	lr, [r0]
   1a198:	b	1a1e4 <__assert_fail@plt+0x91e8>
   1a19c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a1a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a1a4:	mvn	r2, #1073741824	; 0x40000000
   1a1a8:	subs	r0, r2, r0
   1a1ac:	mvn	r2, #0
   1a1b0:	sbcs	r1, r2, r1
   1a1b4:	str	r0, [sp, #36]	; 0x24
   1a1b8:	str	r1, [sp, #32]
   1a1bc:	blt	1a1d4 <__assert_fail@plt+0x91d8>
   1a1c0:	b	1a1c4 <__assert_fail@plt+0x91c8>
   1a1c4:	bl	10f3c <__errno_location@plt>
   1a1c8:	movw	lr, #75	; 0x4b
   1a1cc:	str	lr, [r0]
   1a1d0:	b	1a1e0 <__assert_fail@plt+0x91e4>
   1a1d4:	bl	10f3c <__errno_location@plt>
   1a1d8:	movw	lr, #34	; 0x22
   1a1dc:	str	lr, [r0]
   1a1e0:	b	1a1e4 <__assert_fail@plt+0x91e8>
   1a1e4:	b	1a1e8 <__assert_fail@plt+0x91ec>
   1a1e8:	b	1a228 <__assert_fail@plt+0x922c>
   1a1ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1f0:	cmp	r0, #1
   1a1f4:	bne	1a208 <__assert_fail@plt+0x920c>
   1a1f8:	bl	10f3c <__errno_location@plt>
   1a1fc:	movw	lr, #75	; 0x4b
   1a200:	str	lr, [r0]
   1a204:	b	1a224 <__assert_fail@plt+0x9228>
   1a208:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a20c:	cmp	r0, #3
   1a210:	bne	1a220 <__assert_fail@plt+0x9224>
   1a214:	bl	10f3c <__errno_location@plt>
   1a218:	movw	lr, #0
   1a21c:	str	lr, [r0]
   1a220:	b	1a224 <__assert_fail@plt+0x9228>
   1a224:	b	1a228 <__assert_fail@plt+0x922c>
   1a228:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a22c:	cmp	r0, #0
   1a230:	beq	1a2cc <__assert_fail@plt+0x92d0>
   1a234:	ldr	r0, [fp, #24]
   1a238:	cmp	r0, #0
   1a23c:	beq	1a24c <__assert_fail@plt+0x9250>
   1a240:	ldr	r0, [fp, #24]
   1a244:	str	r0, [sp, #28]
   1a248:	b	1a258 <__assert_fail@plt+0x925c>
   1a24c:	movw	r0, #1
   1a250:	str	r0, [sp, #28]
   1a254:	b	1a258 <__assert_fail@plt+0x925c>
   1a258:	ldr	r0, [sp, #28]
   1a25c:	str	r0, [sp, #24]
   1a260:	bl	10f3c <__errno_location@plt>
   1a264:	ldr	r0, [r0]
   1a268:	cmp	r0, #22
   1a26c:	bne	1a27c <__assert_fail@plt+0x9280>
   1a270:	movw	r0, #0
   1a274:	str	r0, [sp, #20]
   1a278:	b	1a288 <__assert_fail@plt+0x928c>
   1a27c:	bl	10f3c <__errno_location@plt>
   1a280:	ldr	r0, [r0]
   1a284:	str	r0, [sp, #20]
   1a288:	ldr	r0, [sp, #20]
   1a28c:	ldr	r3, [fp, #20]
   1a290:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a294:	str	r0, [sp, #16]
   1a298:	mov	r0, r1
   1a29c:	str	r3, [sp, #12]
   1a2a0:	bl	16820 <__assert_fail@plt+0x5824>
   1a2a4:	ldr	r1, [sp, #24]
   1a2a8:	str	r0, [sp, #8]
   1a2ac:	mov	r0, r1
   1a2b0:	ldr	r1, [sp, #16]
   1a2b4:	movw	r2, #63267	; 0xf723
   1a2b8:	movt	r2, #1
   1a2bc:	ldr	r3, [sp, #12]
   1a2c0:	ldr	lr, [sp, #8]
   1a2c4:	str	lr, [sp]
   1a2c8:	bl	10ea0 <error@plt>
   1a2cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a2d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a2d4:	sub	sp, fp, #16
   1a2d8:	pop	{r4, r5, r6, sl, fp, pc}
   1a2dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a2e0:	add	fp, sp, #24
   1a2e4:	sub	sp, sp, #56	; 0x38
   1a2e8:	ldr	r1, [fp, #12]
   1a2ec:	ldr	ip, [fp, #8]
   1a2f0:	ldr	lr, [fp, #24]
   1a2f4:	ldr	r4, [fp, #20]
   1a2f8:	ldr	r5, [fp, #16]
   1a2fc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a300:	str	r3, [sp, #44]	; 0x2c
   1a304:	str	r2, [sp, #40]	; 0x28
   1a308:	str	r1, [sp, #36]	; 0x24
   1a30c:	str	ip, [sp, #32]
   1a310:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a314:	ldr	r2, [sp, #40]	; 0x28
   1a318:	ldr	r3, [sp, #44]	; 0x2c
   1a31c:	ldr	r1, [sp, #32]
   1a320:	ldr	ip, [sp, #36]	; 0x24
   1a324:	ldr	r6, [fp, #16]
   1a328:	ldr	r7, [fp, #20]
   1a32c:	ldr	r8, [fp, #24]
   1a330:	mov	r9, sp
   1a334:	str	r8, [r9, #16]
   1a338:	str	r7, [r9, #12]
   1a33c:	str	r6, [r9, #8]
   1a340:	str	ip, [r9, #4]
   1a344:	str	r1, [r9]
   1a348:	mov	r1, #10
   1a34c:	str	lr, [sp, #28]
   1a350:	str	r4, [sp, #24]
   1a354:	str	r5, [sp, #20]
   1a358:	bl	1a098 <__assert_fail@plt+0x909c>
   1a35c:	sub	sp, fp, #24
   1a360:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a364:	push	{fp, lr}
   1a368:	mov	fp, sp
   1a36c:	sub	sp, sp, #80	; 0x50
   1a370:	ldr	ip, [fp, #8]
   1a374:	str	r0, [fp, #-8]
   1a378:	str	r1, [fp, #-12]
   1a37c:	str	r2, [fp, #-16]
   1a380:	str	r3, [fp, #-20]	; 0xffffffec
   1a384:	movw	r0, #0
   1a388:	str	r0, [sp, #36]	; 0x24
   1a38c:	ldr	r1, [fp, #-16]
   1a390:	cmp	r0, r1
   1a394:	str	ip, [sp, #20]
   1a398:	bgt	1a3ac <__assert_fail@plt+0x93b0>
   1a39c:	ldr	r0, [fp, #-16]
   1a3a0:	cmp	r0, #36	; 0x24
   1a3a4:	bgt	1a3ac <__assert_fail@plt+0x93b0>
   1a3a8:	b	1a3cc <__assert_fail@plt+0x93d0>
   1a3ac:	movw	r0, #64341	; 0xfb55
   1a3b0:	movt	r0, #1
   1a3b4:	movw	r1, #64379	; 0xfb7b
   1a3b8:	movt	r1, #1
   1a3bc:	movw	r2, #85	; 0x55
   1a3c0:	movw	r3, #64395	; 0xfb8b
   1a3c4:	movt	r3, #1
   1a3c8:	bl	10ffc <__assert_fail@plt>
   1a3cc:	ldr	r0, [fp, #-12]
   1a3d0:	movw	r1, #0
   1a3d4:	cmp	r0, r1
   1a3d8:	beq	1a3e8 <__assert_fail@plt+0x93ec>
   1a3dc:	ldr	r0, [fp, #-12]
   1a3e0:	str	r0, [sp, #16]
   1a3e4:	b	1a3f4 <__assert_fail@plt+0x93f8>
   1a3e8:	sub	r0, fp, #24
   1a3ec:	str	r0, [sp, #16]
   1a3f0:	b	1a3f4 <__assert_fail@plt+0x93f8>
   1a3f4:	ldr	r0, [sp, #16]
   1a3f8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a3fc:	bl	10f3c <__errno_location@plt>
   1a400:	mov	lr, #0
   1a404:	str	lr, [r0]
   1a408:	ldr	r0, [fp, #-8]
   1a40c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a410:	ldr	r2, [fp, #-16]
   1a414:	bl	10f6c <strtoimax@plt>
   1a418:	str	r1, [sp, #44]	; 0x2c
   1a41c:	str	r0, [sp, #40]	; 0x28
   1a420:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a424:	ldr	r0, [r0]
   1a428:	ldr	r1, [fp, #-8]
   1a42c:	cmp	r0, r1
   1a430:	bne	1a49c <__assert_fail@plt+0x94a0>
   1a434:	ldr	r0, [fp, #8]
   1a438:	movw	r1, #0
   1a43c:	cmp	r0, r1
   1a440:	beq	1a48c <__assert_fail@plt+0x9490>
   1a444:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a448:	ldr	r0, [r0]
   1a44c:	ldrb	r0, [r0]
   1a450:	cmp	r0, #0
   1a454:	beq	1a48c <__assert_fail@plt+0x9490>
   1a458:	ldr	r0, [fp, #8]
   1a45c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a460:	ldr	r1, [r1]
   1a464:	ldrb	r1, [r1]
   1a468:	bl	10f24 <strchr@plt>
   1a46c:	movw	r1, #0
   1a470:	cmp	r0, r1
   1a474:	beq	1a48c <__assert_fail@plt+0x9490>
   1a478:	mov	r0, #0
   1a47c:	str	r0, [sp, #44]	; 0x2c
   1a480:	mov	r0, #1
   1a484:	str	r0, [sp, #40]	; 0x28
   1a488:	b	1a498 <__assert_fail@plt+0x949c>
   1a48c:	movw	r0, #4
   1a490:	str	r0, [fp, #-4]
   1a494:	b	1a984 <__assert_fail@plt+0x9988>
   1a498:	b	1a4d4 <__assert_fail@plt+0x94d8>
   1a49c:	bl	10f3c <__errno_location@plt>
   1a4a0:	ldr	r0, [r0]
   1a4a4:	cmp	r0, #0
   1a4a8:	beq	1a4d0 <__assert_fail@plt+0x94d4>
   1a4ac:	bl	10f3c <__errno_location@plt>
   1a4b0:	ldr	r0, [r0]
   1a4b4:	cmp	r0, #34	; 0x22
   1a4b8:	beq	1a4c8 <__assert_fail@plt+0x94cc>
   1a4bc:	movw	r0, #4
   1a4c0:	str	r0, [fp, #-4]
   1a4c4:	b	1a984 <__assert_fail@plt+0x9988>
   1a4c8:	movw	r0, #1
   1a4cc:	str	r0, [sp, #36]	; 0x24
   1a4d0:	b	1a4d4 <__assert_fail@plt+0x94d8>
   1a4d4:	ldr	r0, [fp, #8]
   1a4d8:	movw	r1, #0
   1a4dc:	cmp	r0, r1
   1a4e0:	bne	1a504 <__assert_fail@plt+0x9508>
   1a4e4:	ldr	r0, [sp, #40]	; 0x28
   1a4e8:	ldr	r1, [sp, #44]	; 0x2c
   1a4ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a4f0:	str	r1, [r2, #4]
   1a4f4:	str	r0, [r2]
   1a4f8:	ldr	r0, [sp, #36]	; 0x24
   1a4fc:	str	r0, [fp, #-4]
   1a500:	b	1a984 <__assert_fail@plt+0x9988>
   1a504:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a508:	ldr	r0, [r0]
   1a50c:	ldrb	r0, [r0]
   1a510:	cmp	r0, #0
   1a514:	beq	1a968 <__assert_fail@plt+0x996c>
   1a518:	movw	r0, #1024	; 0x400
   1a51c:	str	r0, [sp, #32]
   1a520:	movw	r0, #1
   1a524:	str	r0, [sp, #28]
   1a528:	ldr	r0, [fp, #8]
   1a52c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a530:	ldr	r1, [r1]
   1a534:	ldrb	r1, [r1]
   1a538:	bl	10f24 <strchr@plt>
   1a53c:	movw	r1, #0
   1a540:	cmp	r0, r1
   1a544:	bne	1a56c <__assert_fail@plt+0x9570>
   1a548:	ldr	r0, [sp, #40]	; 0x28
   1a54c:	ldr	r1, [sp, #44]	; 0x2c
   1a550:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a554:	str	r1, [r2, #4]
   1a558:	str	r0, [r2]
   1a55c:	ldr	r0, [sp, #36]	; 0x24
   1a560:	orr	r0, r0, #2
   1a564:	str	r0, [fp, #-4]
   1a568:	b	1a984 <__assert_fail@plt+0x9988>
   1a56c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a570:	ldr	r0, [r0]
   1a574:	ldrb	r0, [r0]
   1a578:	sub	r0, r0, #69	; 0x45
   1a57c:	cmp	r0, #47	; 0x2f
   1a580:	str	r0, [sp, #12]
   1a584:	bhi	1a6f0 <__assert_fail@plt+0x96f4>
   1a588:	add	r0, pc, #8
   1a58c:	ldr	r1, [sp, #12]
   1a590:	ldr	r0, [r0, r1, lsl #2]
   1a594:	mov	pc, r0
   1a598:	andeq	sl, r1, r8, asr r6
   1a59c:	strdeq	sl, [r1], -r0
   1a5a0:	andeq	sl, r1, r8, asr r6
   1a5a4:	strdeq	sl, [r1], -r0
   1a5a8:	strdeq	sl, [r1], -r0
   1a5ac:	strdeq	sl, [r1], -r0
   1a5b0:	andeq	sl, r1, r8, asr r6
   1a5b4:	strdeq	sl, [r1], -r0
   1a5b8:	andeq	sl, r1, r8, asr r6
   1a5bc:	strdeq	sl, [r1], -r0
   1a5c0:	strdeq	sl, [r1], -r0
   1a5c4:	andeq	sl, r1, r8, asr r6
   1a5c8:	strdeq	sl, [r1], -r0
   1a5cc:	strdeq	sl, [r1], -r0
   1a5d0:	strdeq	sl, [r1], -r0
   1a5d4:	andeq	sl, r1, r8, asr r6
   1a5d8:	strdeq	sl, [r1], -r0
   1a5dc:	strdeq	sl, [r1], -r0
   1a5e0:	strdeq	sl, [r1], -r0
   1a5e4:	strdeq	sl, [r1], -r0
   1a5e8:	andeq	sl, r1, r8, asr r6
   1a5ec:	andeq	sl, r1, r8, asr r6
   1a5f0:	strdeq	sl, [r1], -r0
   1a5f4:	strdeq	sl, [r1], -r0
   1a5f8:	strdeq	sl, [r1], -r0
   1a5fc:	strdeq	sl, [r1], -r0
   1a600:	strdeq	sl, [r1], -r0
   1a604:	strdeq	sl, [r1], -r0
   1a608:	strdeq	sl, [r1], -r0
   1a60c:	strdeq	sl, [r1], -r0
   1a610:	strdeq	sl, [r1], -r0
   1a614:	strdeq	sl, [r1], -r0
   1a618:	strdeq	sl, [r1], -r0
   1a61c:	strdeq	sl, [r1], -r0
   1a620:	andeq	sl, r1, r8, asr r6
   1a624:	strdeq	sl, [r1], -r0
   1a628:	strdeq	sl, [r1], -r0
   1a62c:	strdeq	sl, [r1], -r0
   1a630:	andeq	sl, r1, r8, asr r6
   1a634:	strdeq	sl, [r1], -r0
   1a638:	andeq	sl, r1, r8, asr r6
   1a63c:	strdeq	sl, [r1], -r0
   1a640:	strdeq	sl, [r1], -r0
   1a644:	strdeq	sl, [r1], -r0
   1a648:	strdeq	sl, [r1], -r0
   1a64c:	strdeq	sl, [r1], -r0
   1a650:	strdeq	sl, [r1], -r0
   1a654:	andeq	sl, r1, r8, asr r6
   1a658:	ldr	r0, [fp, #8]
   1a65c:	movw	r1, #48	; 0x30
   1a660:	bl	10f24 <strchr@plt>
   1a664:	movw	r1, #0
   1a668:	cmp	r0, r1
   1a66c:	beq	1a6ec <__assert_fail@plt+0x96f0>
   1a670:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a674:	ldr	r0, [r0]
   1a678:	ldrb	r0, [r0, #1]
   1a67c:	mov	r1, r0
   1a680:	cmp	r0, #66	; 0x42
   1a684:	str	r1, [sp, #8]
   1a688:	beq	1a6d4 <__assert_fail@plt+0x96d8>
   1a68c:	b	1a690 <__assert_fail@plt+0x9694>
   1a690:	ldr	r0, [sp, #8]
   1a694:	cmp	r0, #68	; 0x44
   1a698:	beq	1a6d4 <__assert_fail@plt+0x96d8>
   1a69c:	b	1a6a0 <__assert_fail@plt+0x96a4>
   1a6a0:	ldr	r0, [sp, #8]
   1a6a4:	cmp	r0, #105	; 0x69
   1a6a8:	bne	1a6e8 <__assert_fail@plt+0x96ec>
   1a6ac:	b	1a6b0 <__assert_fail@plt+0x96b4>
   1a6b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a6b4:	ldr	r0, [r0]
   1a6b8:	ldrb	r0, [r0, #2]
   1a6bc:	cmp	r0, #66	; 0x42
   1a6c0:	bne	1a6d0 <__assert_fail@plt+0x96d4>
   1a6c4:	ldr	r0, [sp, #28]
   1a6c8:	add	r0, r0, #2
   1a6cc:	str	r0, [sp, #28]
   1a6d0:	b	1a6e8 <__assert_fail@plt+0x96ec>
   1a6d4:	movw	r0, #1000	; 0x3e8
   1a6d8:	str	r0, [sp, #32]
   1a6dc:	ldr	r0, [sp, #28]
   1a6e0:	add	r0, r0, #1
   1a6e4:	str	r0, [sp, #28]
   1a6e8:	b	1a6ec <__assert_fail@plt+0x96f0>
   1a6ec:	b	1a6f0 <__assert_fail@plt+0x96f4>
   1a6f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a6f4:	ldr	r0, [r0]
   1a6f8:	ldrb	r0, [r0]
   1a6fc:	sub	r0, r0, #66	; 0x42
   1a700:	cmp	r0, #53	; 0x35
   1a704:	str	r0, [sp, #4]
   1a708:	bhi	1a8fc <__assert_fail@plt+0x9900>
   1a70c:	add	r0, pc, #8
   1a710:	ldr	r1, [sp, #4]
   1a714:	ldr	r0, [r0, r1, lsl #2]
   1a718:	mov	pc, r0
   1a71c:	andeq	sl, r1, r8, lsl #16
   1a720:	strdeq	sl, [r1], -ip
   1a724:	strdeq	sl, [r1], -ip
   1a728:	andeq	sl, r1, r8, lsr #16
   1a72c:	strdeq	sl, [r1], -ip
   1a730:	andeq	sl, r1, r0, asr #16
   1a734:	strdeq	sl, [r1], -ip
   1a738:	strdeq	sl, [r1], -ip
   1a73c:	strdeq	sl, [r1], -ip
   1a740:	andeq	sl, r1, r8, asr r8
   1a744:	strdeq	sl, [r1], -ip
   1a748:	andeq	sl, r1, r0, ror r8
   1a74c:	strdeq	sl, [r1], -ip
   1a750:	strdeq	sl, [r1], -ip
   1a754:	andeq	sl, r1, r8, lsl #17
   1a758:	strdeq	sl, [r1], -ip
   1a75c:	strdeq	sl, [r1], -ip
   1a760:	strdeq	sl, [r1], -ip
   1a764:	andeq	sl, r1, r0, lsr #17
   1a768:	strdeq	sl, [r1], -ip
   1a76c:	strdeq	sl, [r1], -ip
   1a770:	strdeq	sl, [r1], -ip
   1a774:	strdeq	sl, [r1], -ip
   1a778:	andeq	sl, r1, ip, asr #17
   1a77c:	andeq	sl, r1, r4, ror #17
   1a780:	strdeq	sl, [r1], -ip
   1a784:	strdeq	sl, [r1], -ip
   1a788:	strdeq	sl, [r1], -ip
   1a78c:	strdeq	sl, [r1], -ip
   1a790:	strdeq	sl, [r1], -ip
   1a794:	strdeq	sl, [r1], -ip
   1a798:	strdeq	sl, [r1], -ip
   1a79c:	strdeq	sl, [r1], -r4
   1a7a0:	andeq	sl, r1, ip, lsl r8
   1a7a4:	strdeq	sl, [r1], -ip
   1a7a8:	strdeq	sl, [r1], -ip
   1a7ac:	strdeq	sl, [r1], -ip
   1a7b0:	andeq	sl, r1, r0, asr #16
   1a7b4:	strdeq	sl, [r1], -ip
   1a7b8:	strdeq	sl, [r1], -ip
   1a7bc:	strdeq	sl, [r1], -ip
   1a7c0:	andeq	sl, r1, r8, asr r8
   1a7c4:	strdeq	sl, [r1], -ip
   1a7c8:	andeq	sl, r1, r0, ror r8
   1a7cc:	strdeq	sl, [r1], -ip
   1a7d0:	strdeq	sl, [r1], -ip
   1a7d4:	strdeq	sl, [r1], -ip
   1a7d8:	strdeq	sl, [r1], -ip
   1a7dc:	strdeq	sl, [r1], -ip
   1a7e0:	strdeq	sl, [r1], -ip
   1a7e4:	andeq	sl, r1, r0, lsr #17
   1a7e8:	strdeq	sl, [r1], -ip
   1a7ec:	strdeq	sl, [r1], -ip
   1a7f0:			; <UNDEFINED> instruction: 0x0001a8b8
   1a7f4:	add	r0, sp, #40	; 0x28
   1a7f8:	movw	r1, #512	; 0x200
   1a7fc:	bl	1a990 <__assert_fail@plt+0x9994>
   1a800:	str	r0, [sp, #24]
   1a804:	b	1a920 <__assert_fail@plt+0x9924>
   1a808:	add	r0, sp, #40	; 0x28
   1a80c:	movw	r1, #1024	; 0x400
   1a810:	bl	1a990 <__assert_fail@plt+0x9994>
   1a814:	str	r0, [sp, #24]
   1a818:	b	1a920 <__assert_fail@plt+0x9924>
   1a81c:	movw	r0, #0
   1a820:	str	r0, [sp, #24]
   1a824:	b	1a920 <__assert_fail@plt+0x9924>
   1a828:	ldr	r1, [sp, #32]
   1a82c:	add	r0, sp, #40	; 0x28
   1a830:	movw	r2, #6
   1a834:	bl	1c638 <__assert_fail@plt+0xb63c>
   1a838:	str	r0, [sp, #24]
   1a83c:	b	1a920 <__assert_fail@plt+0x9924>
   1a840:	ldr	r1, [sp, #32]
   1a844:	add	r0, sp, #40	; 0x28
   1a848:	movw	r2, #3
   1a84c:	bl	1c638 <__assert_fail@plt+0xb63c>
   1a850:	str	r0, [sp, #24]
   1a854:	b	1a920 <__assert_fail@plt+0x9924>
   1a858:	ldr	r1, [sp, #32]
   1a85c:	add	r0, sp, #40	; 0x28
   1a860:	movw	r2, #1
   1a864:	bl	1c638 <__assert_fail@plt+0xb63c>
   1a868:	str	r0, [sp, #24]
   1a86c:	b	1a920 <__assert_fail@plt+0x9924>
   1a870:	ldr	r1, [sp, #32]
   1a874:	add	r0, sp, #40	; 0x28
   1a878:	movw	r2, #2
   1a87c:	bl	1c638 <__assert_fail@plt+0xb63c>
   1a880:	str	r0, [sp, #24]
   1a884:	b	1a920 <__assert_fail@plt+0x9924>
   1a888:	ldr	r1, [sp, #32]
   1a88c:	add	r0, sp, #40	; 0x28
   1a890:	movw	r2, #5
   1a894:	bl	1c638 <__assert_fail@plt+0xb63c>
   1a898:	str	r0, [sp, #24]
   1a89c:	b	1a920 <__assert_fail@plt+0x9924>
   1a8a0:	ldr	r1, [sp, #32]
   1a8a4:	add	r0, sp, #40	; 0x28
   1a8a8:	movw	r2, #4
   1a8ac:	bl	1c638 <__assert_fail@plt+0xb63c>
   1a8b0:	str	r0, [sp, #24]
   1a8b4:	b	1a920 <__assert_fail@plt+0x9924>
   1a8b8:	add	r0, sp, #40	; 0x28
   1a8bc:	movw	r1, #2
   1a8c0:	bl	1a990 <__assert_fail@plt+0x9994>
   1a8c4:	str	r0, [sp, #24]
   1a8c8:	b	1a920 <__assert_fail@plt+0x9924>
   1a8cc:	ldr	r1, [sp, #32]
   1a8d0:	add	r0, sp, #40	; 0x28
   1a8d4:	movw	r2, #8
   1a8d8:	bl	1c638 <__assert_fail@plt+0xb63c>
   1a8dc:	str	r0, [sp, #24]
   1a8e0:	b	1a920 <__assert_fail@plt+0x9924>
   1a8e4:	ldr	r1, [sp, #32]
   1a8e8:	add	r0, sp, #40	; 0x28
   1a8ec:	movw	r2, #7
   1a8f0:	bl	1c638 <__assert_fail@plt+0xb63c>
   1a8f4:	str	r0, [sp, #24]
   1a8f8:	b	1a920 <__assert_fail@plt+0x9924>
   1a8fc:	ldr	r0, [sp, #40]	; 0x28
   1a900:	ldr	r1, [sp, #44]	; 0x2c
   1a904:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a908:	str	r1, [r2, #4]
   1a90c:	str	r0, [r2]
   1a910:	ldr	r0, [sp, #36]	; 0x24
   1a914:	orr	r0, r0, #2
   1a918:	str	r0, [fp, #-4]
   1a91c:	b	1a984 <__assert_fail@plt+0x9988>
   1a920:	ldr	r0, [sp, #24]
   1a924:	ldr	r1, [sp, #36]	; 0x24
   1a928:	orr	r0, r1, r0
   1a92c:	str	r0, [sp, #36]	; 0x24
   1a930:	ldr	r0, [sp, #28]
   1a934:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a938:	ldr	r2, [r1]
   1a93c:	add	r0, r2, r0
   1a940:	str	r0, [r1]
   1a944:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a948:	ldr	r0, [r0]
   1a94c:	ldrsb	r0, [r0]
   1a950:	cmp	r0, #0
   1a954:	beq	1a964 <__assert_fail@plt+0x9968>
   1a958:	ldr	r0, [sp, #36]	; 0x24
   1a95c:	orr	r0, r0, #2
   1a960:	str	r0, [sp, #36]	; 0x24
   1a964:	b	1a968 <__assert_fail@plt+0x996c>
   1a968:	ldr	r0, [sp, #40]	; 0x28
   1a96c:	ldr	r1, [sp, #44]	; 0x2c
   1a970:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a974:	str	r1, [r2, #4]
   1a978:	str	r0, [r2]
   1a97c:	ldr	r0, [sp, #36]	; 0x24
   1a980:	str	r0, [fp, #-4]
   1a984:	ldr	r0, [fp, #-4]
   1a988:	mov	sp, fp
   1a98c:	pop	{fp, pc}
   1a990:	push	{fp, lr}
   1a994:	mov	fp, sp
   1a998:	sub	sp, sp, #752	; 0x2f0
   1a99c:	str	r0, [fp, #-8]
   1a9a0:	str	r1, [fp, #-12]
   1a9a4:	b	1af2c <__assert_fail@plt+0x9f30>
   1a9a8:	b	1a9ac <__assert_fail@plt+0x99b0>
   1a9ac:	ldr	r0, [fp, #-12]
   1a9b0:	cmp	r0, #0
   1a9b4:	bge	1ab44 <__assert_fail@plt+0x9b48>
   1a9b8:	ldr	r0, [fp, #-8]
   1a9bc:	ldr	r0, [r0, #4]
   1a9c0:	cmn	r0, #1
   1a9c4:	bgt	1aa7c <__assert_fail@plt+0x9a80>
   1a9c8:	b	1a9cc <__assert_fail@plt+0x99d0>
   1a9cc:	b	1a9d0 <__assert_fail@plt+0x99d4>
   1a9d0:	ldr	r0, [fp, #-8]
   1a9d4:	ldr	r1, [r0]
   1a9d8:	ldr	r0, [r0, #4]
   1a9dc:	ldr	r2, [fp, #-12]
   1a9e0:	mov	r3, #127	; 0x7f
   1a9e4:	sdiv	r2, r3, r2
   1a9e8:	subs	r1, r1, r2
   1a9ec:	sbcs	r0, r0, r2, asr #31
   1a9f0:	str	r1, [fp, #-28]	; 0xffffffe4
   1a9f4:	str	r0, [fp, #-32]	; 0xffffffe0
   1a9f8:	blt	1ac2c <__assert_fail@plt+0x9c30>
   1a9fc:	b	1ac50 <__assert_fail@plt+0x9c54>
   1aa00:	b	1aa04 <__assert_fail@plt+0x9a08>
   1aa04:	ldr	r0, [pc, #4064]	; 1b9ec <__assert_fail@plt+0xa9f0>
   1aa08:	ldr	r1, [fp, #-12]
   1aa0c:	cmp	r1, r0
   1aa10:	blt	1aa28 <__assert_fail@plt+0x9a2c>
   1aa14:	b	1aa34 <__assert_fail@plt+0x9a38>
   1aa18:	ldr	r0, [fp, #-12]
   1aa1c:	movw	r1, #0
   1aa20:	cmp	r1, r0
   1aa24:	bge	1aa34 <__assert_fail@plt+0x9a38>
   1aa28:	movw	r0, #0
   1aa2c:	str	r0, [fp, #-36]	; 0xffffffdc
   1aa30:	b	1aa4c <__assert_fail@plt+0x9a50>
   1aa34:	ldr	r0, [fp, #-12]
   1aa38:	movw	r1, #0
   1aa3c:	sub	r0, r1, r0
   1aa40:	movw	r1, #127	; 0x7f
   1aa44:	sdiv	r0, r1, r0
   1aa48:	str	r0, [fp, #-36]	; 0xffffffdc
   1aa4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aa50:	ldr	r1, [fp, #-8]
   1aa54:	ldr	r2, [r1]
   1aa58:	ldr	r1, [r1, #4]
   1aa5c:	mvn	r1, r1
   1aa60:	mvn	r2, r2
   1aa64:	subs	r2, r2, r0
   1aa68:	sbcs	r0, r1, r0, asr #31
   1aa6c:	str	r2, [fp, #-40]	; 0xffffffd8
   1aa70:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa74:	bge	1ac2c <__assert_fail@plt+0x9c30>
   1aa78:	b	1ac50 <__assert_fail@plt+0x9c54>
   1aa7c:	b	1aa80 <__assert_fail@plt+0x9a84>
   1aa80:	b	1ab14 <__assert_fail@plt+0x9b18>
   1aa84:	b	1ab14 <__assert_fail@plt+0x9b18>
   1aa88:	ldr	r0, [fp, #-12]
   1aa8c:	cmn	r0, #1
   1aa90:	bne	1ab14 <__assert_fail@plt+0x9b18>
   1aa94:	b	1aa98 <__assert_fail@plt+0x9a9c>
   1aa98:	ldr	r0, [fp, #-8]
   1aa9c:	ldr	r1, [r0]
   1aaa0:	ldr	r0, [r0, #4]
   1aaa4:	subs	r1, r1, #128	; 0x80
   1aaa8:	sbc	r0, r0, #0
   1aaac:	rsbs	r1, r1, #0
   1aab0:	rscs	r0, r0, #0
   1aab4:	str	r1, [fp, #-48]	; 0xffffffd0
   1aab8:	str	r0, [fp, #-52]	; 0xffffffcc
   1aabc:	blt	1ac2c <__assert_fail@plt+0x9c30>
   1aac0:	b	1ac50 <__assert_fail@plt+0x9c54>
   1aac4:	ldr	r0, [fp, #-8]
   1aac8:	ldr	r1, [r0]
   1aacc:	ldr	r0, [r0, #4]
   1aad0:	subs	r1, r1, #1
   1aad4:	sbcs	r0, r0, #0
   1aad8:	str	r1, [fp, #-56]	; 0xffffffc8
   1aadc:	str	r0, [fp, #-60]	; 0xffffffc4
   1aae0:	blt	1ac50 <__assert_fail@plt+0x9c54>
   1aae4:	b	1aae8 <__assert_fail@plt+0x9aec>
   1aae8:	ldr	r0, [fp, #-8]
   1aaec:	ldr	r1, [r0]
   1aaf0:	ldr	r0, [r0, #4]
   1aaf4:	subs	r1, r1, #1
   1aaf8:	sbc	r0, r0, #0
   1aafc:	rsbs	r1, r1, #127	; 0x7f
   1ab00:	rscs	r0, r0, #0
   1ab04:	str	r1, [fp, #-64]	; 0xffffffc0
   1ab08:	str	r0, [fp, #-68]	; 0xffffffbc
   1ab0c:	blt	1ac2c <__assert_fail@plt+0x9c30>
   1ab10:	b	1ac50 <__assert_fail@plt+0x9c54>
   1ab14:	ldr	r0, [fp, #-12]
   1ab18:	mvn	r1, #127	; 0x7f
   1ab1c:	sdiv	r0, r1, r0
   1ab20:	ldr	r1, [fp, #-8]
   1ab24:	ldr	r2, [r1]
   1ab28:	ldr	r1, [r1, #4]
   1ab2c:	subs	r2, r0, r2
   1ab30:	rscs	r0, r1, r0, asr #31
   1ab34:	str	r2, [fp, #-72]	; 0xffffffb8
   1ab38:	str	r0, [fp, #-76]	; 0xffffffb4
   1ab3c:	blt	1ac2c <__assert_fail@plt+0x9c30>
   1ab40:	b	1ac50 <__assert_fail@plt+0x9c54>
   1ab44:	ldr	r0, [fp, #-12]
   1ab48:	cmp	r0, #0
   1ab4c:	bne	1ab54 <__assert_fail@plt+0x9b58>
   1ab50:	b	1ac50 <__assert_fail@plt+0x9c54>
   1ab54:	ldr	r0, [fp, #-8]
   1ab58:	ldr	r0, [r0, #4]
   1ab5c:	cmn	r0, #1
   1ab60:	bgt	1abfc <__assert_fail@plt+0x9c00>
   1ab64:	b	1ab68 <__assert_fail@plt+0x9b6c>
   1ab68:	b	1ab6c <__assert_fail@plt+0x9b70>
   1ab6c:	b	1abc8 <__assert_fail@plt+0x9bcc>
   1ab70:	b	1abc8 <__assert_fail@plt+0x9bcc>
   1ab74:	ldr	r0, [fp, #-8]
   1ab78:	ldr	r1, [r0]
   1ab7c:	ldr	r0, [r0, #4]
   1ab80:	and	r0, r1, r0
   1ab84:	cmn	r0, #1
   1ab88:	bne	1abc8 <__assert_fail@plt+0x9bcc>
   1ab8c:	b	1ab90 <__assert_fail@plt+0x9b94>
   1ab90:	b	1ab94 <__assert_fail@plt+0x9b98>
   1ab94:	ldr	r0, [fp, #-12]
   1ab98:	mvn	r1, #127	; 0x7f
   1ab9c:	add	r0, r0, r1
   1aba0:	movw	r1, #0
   1aba4:	cmp	r1, r0
   1aba8:	blt	1ac2c <__assert_fail@plt+0x9c30>
   1abac:	b	1ac50 <__assert_fail@plt+0x9c54>
   1abb0:	ldr	r0, [fp, #-12]
   1abb4:	sub	r0, r0, #1
   1abb8:	movw	r1, #127	; 0x7f
   1abbc:	cmp	r1, r0
   1abc0:	blt	1ac2c <__assert_fail@plt+0x9c30>
   1abc4:	b	1ac50 <__assert_fail@plt+0x9c54>
   1abc8:	ldr	r0, [fp, #-8]
   1abcc:	ldr	r2, [r0]
   1abd0:	ldr	r3, [r0, #4]
   1abd4:	mvn	r0, #127	; 0x7f
   1abd8:	mvn	r1, #0
   1abdc:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1abe0:	ldr	r2, [fp, #-12]
   1abe4:	subs	r0, r0, r2
   1abe8:	sbcs	r1, r1, r2, asr #31
   1abec:	str	r0, [fp, #-80]	; 0xffffffb0
   1abf0:	str	r1, [fp, #-84]	; 0xffffffac
   1abf4:	blt	1ac2c <__assert_fail@plt+0x9c30>
   1abf8:	b	1ac50 <__assert_fail@plt+0x9c54>
   1abfc:	ldr	r0, [fp, #-12]
   1ac00:	mov	r1, #127	; 0x7f
   1ac04:	sdiv	r0, r1, r0
   1ac08:	ldr	r1, [fp, #-8]
   1ac0c:	ldr	r2, [r1]
   1ac10:	ldr	r1, [r1, #4]
   1ac14:	subs	r2, r0, r2
   1ac18:	rscs	r0, r1, r0, asr #31
   1ac1c:	str	r2, [fp, #-88]	; 0xffffffa8
   1ac20:	str	r0, [fp, #-92]	; 0xffffffa4
   1ac24:	bge	1ac50 <__assert_fail@plt+0x9c54>
   1ac28:	b	1ac2c <__assert_fail@plt+0x9c30>
   1ac2c:	ldr	r0, [fp, #-8]
   1ac30:	ldr	r0, [r0]
   1ac34:	ldr	r1, [fp, #-12]
   1ac38:	mul	r0, r0, r1
   1ac3c:	sxtb	r0, r0
   1ac40:	asr	r1, r0, #31
   1ac44:	str	r0, [fp, #-24]	; 0xffffffe8
   1ac48:	str	r1, [fp, #-20]	; 0xffffffec
   1ac4c:	b	1c5d4 <__assert_fail@plt+0xb5d8>
   1ac50:	ldr	r0, [fp, #-8]
   1ac54:	ldr	r0, [r0]
   1ac58:	ldr	r1, [fp, #-12]
   1ac5c:	mul	r0, r0, r1
   1ac60:	sxtb	r0, r0
   1ac64:	asr	r1, r0, #31
   1ac68:	str	r0, [fp, #-24]	; 0xffffffe8
   1ac6c:	str	r1, [fp, #-20]	; 0xffffffec
   1ac70:	b	1c608 <__assert_fail@plt+0xb60c>
   1ac74:	ldr	r0, [fp, #-12]
   1ac78:	cmp	r0, #0
   1ac7c:	bge	1adfc <__assert_fail@plt+0x9e00>
   1ac80:	ldr	r0, [fp, #-8]
   1ac84:	ldr	r0, [r0, #4]
   1ac88:	cmn	r0, #1
   1ac8c:	bgt	1ad44 <__assert_fail@plt+0x9d48>
   1ac90:	b	1ac94 <__assert_fail@plt+0x9c98>
   1ac94:	b	1ac98 <__assert_fail@plt+0x9c9c>
   1ac98:	ldr	r0, [fp, #-8]
   1ac9c:	ldr	r1, [r0]
   1aca0:	ldr	r0, [r0, #4]
   1aca4:	ldr	r2, [fp, #-12]
   1aca8:	mov	r3, #255	; 0xff
   1acac:	sdiv	r2, r3, r2
   1acb0:	subs	r1, r1, r2
   1acb4:	sbcs	r0, r0, r2, asr #31
   1acb8:	str	r1, [fp, #-96]	; 0xffffffa0
   1acbc:	str	r0, [fp, #-100]	; 0xffffff9c
   1acc0:	blt	1aee4 <__assert_fail@plt+0x9ee8>
   1acc4:	b	1af08 <__assert_fail@plt+0x9f0c>
   1acc8:	b	1accc <__assert_fail@plt+0x9cd0>
   1accc:	ldr	r0, [pc, #3352]	; 1b9ec <__assert_fail@plt+0xa9f0>
   1acd0:	ldr	r1, [fp, #-12]
   1acd4:	cmp	r1, r0
   1acd8:	blt	1acf0 <__assert_fail@plt+0x9cf4>
   1acdc:	b	1acfc <__assert_fail@plt+0x9d00>
   1ace0:	ldr	r0, [fp, #-12]
   1ace4:	movw	r1, #0
   1ace8:	cmp	r1, r0
   1acec:	bge	1acfc <__assert_fail@plt+0x9d00>
   1acf0:	movw	r0, #0
   1acf4:	str	r0, [fp, #-104]	; 0xffffff98
   1acf8:	b	1ad14 <__assert_fail@plt+0x9d18>
   1acfc:	ldr	r0, [fp, #-12]
   1ad00:	movw	r1, #0
   1ad04:	sub	r0, r1, r0
   1ad08:	movw	r1, #255	; 0xff
   1ad0c:	sdiv	r0, r1, r0
   1ad10:	str	r0, [fp, #-104]	; 0xffffff98
   1ad14:	ldr	r0, [fp, #-104]	; 0xffffff98
   1ad18:	ldr	r1, [fp, #-8]
   1ad1c:	ldr	r2, [r1]
   1ad20:	ldr	r1, [r1, #4]
   1ad24:	mvn	r1, r1
   1ad28:	mvn	r2, r2
   1ad2c:	subs	r2, r2, r0
   1ad30:	sbcs	r0, r1, r0, asr #31
   1ad34:	str	r2, [fp, #-108]	; 0xffffff94
   1ad38:	str	r0, [fp, #-112]	; 0xffffff90
   1ad3c:	bge	1aee4 <__assert_fail@plt+0x9ee8>
   1ad40:	b	1af08 <__assert_fail@plt+0x9f0c>
   1ad44:	b	1ad48 <__assert_fail@plt+0x9d4c>
   1ad48:	b	1adcc <__assert_fail@plt+0x9dd0>
   1ad4c:	b	1adcc <__assert_fail@plt+0x9dd0>
   1ad50:	ldr	r0, [fp, #-12]
   1ad54:	cmn	r0, #1
   1ad58:	bne	1adcc <__assert_fail@plt+0x9dd0>
   1ad5c:	b	1ad60 <__assert_fail@plt+0x9d64>
   1ad60:	ldr	r0, [fp, #-8]
   1ad64:	ldr	r1, [r0]
   1ad68:	ldr	r0, [r0, #4]
   1ad6c:	rsbs	r1, r1, #0
   1ad70:	rscs	r0, r0, #0
   1ad74:	str	r1, [fp, #-116]	; 0xffffff8c
   1ad78:	str	r0, [fp, #-120]	; 0xffffff88
   1ad7c:	blt	1aee4 <__assert_fail@plt+0x9ee8>
   1ad80:	b	1af08 <__assert_fail@plt+0x9f0c>
   1ad84:	ldr	r0, [fp, #-8]
   1ad88:	ldr	r1, [r0]
   1ad8c:	ldr	r0, [r0, #4]
   1ad90:	subs	r1, r1, #1
   1ad94:	sbcs	r0, r0, #0
   1ad98:	str	r1, [fp, #-124]	; 0xffffff84
   1ad9c:	str	r0, [fp, #-128]	; 0xffffff80
   1ada0:	blt	1af08 <__assert_fail@plt+0x9f0c>
   1ada4:	b	1ada8 <__assert_fail@plt+0x9dac>
   1ada8:	ldr	r0, [fp, #-8]
   1adac:	ldr	r1, [r0]
   1adb0:	ldr	r0, [r0, #4]
   1adb4:	subs	r1, r1, #1
   1adb8:	sbc	r0, r0, #0
   1adbc:	cmn	r0, #1
   1adc0:	str	r1, [fp, #-132]	; 0xffffff7c
   1adc4:	bgt	1aee4 <__assert_fail@plt+0x9ee8>
   1adc8:	b	1af08 <__assert_fail@plt+0x9f0c>
   1adcc:	ldr	r0, [fp, #-12]
   1add0:	mov	r1, #0
   1add4:	sdiv	r0, r1, r0
   1add8:	ldr	r1, [fp, #-8]
   1addc:	ldr	r2, [r1]
   1ade0:	ldr	r1, [r1, #4]
   1ade4:	subs	r2, r0, r2
   1ade8:	rscs	r0, r1, r0, asr #31
   1adec:	str	r2, [fp, #-136]	; 0xffffff78
   1adf0:	str	r0, [fp, #-140]	; 0xffffff74
   1adf4:	blt	1aee4 <__assert_fail@plt+0x9ee8>
   1adf8:	b	1af08 <__assert_fail@plt+0x9f0c>
   1adfc:	ldr	r0, [fp, #-12]
   1ae00:	cmp	r0, #0
   1ae04:	bne	1ae0c <__assert_fail@plt+0x9e10>
   1ae08:	b	1af08 <__assert_fail@plt+0x9f0c>
   1ae0c:	ldr	r0, [fp, #-8]
   1ae10:	ldr	r0, [r0, #4]
   1ae14:	cmn	r0, #1
   1ae18:	bgt	1aeb4 <__assert_fail@plt+0x9eb8>
   1ae1c:	b	1ae20 <__assert_fail@plt+0x9e24>
   1ae20:	b	1ae24 <__assert_fail@plt+0x9e28>
   1ae24:	b	1ae7c <__assert_fail@plt+0x9e80>
   1ae28:	b	1ae7c <__assert_fail@plt+0x9e80>
   1ae2c:	ldr	r0, [fp, #-8]
   1ae30:	ldr	r1, [r0]
   1ae34:	ldr	r0, [r0, #4]
   1ae38:	and	r0, r1, r0
   1ae3c:	cmn	r0, #1
   1ae40:	bne	1ae7c <__assert_fail@plt+0x9e80>
   1ae44:	b	1ae48 <__assert_fail@plt+0x9e4c>
   1ae48:	b	1ae4c <__assert_fail@plt+0x9e50>
   1ae4c:	ldr	r0, [fp, #-12]
   1ae50:	add	r0, r0, #0
   1ae54:	movw	r1, #0
   1ae58:	cmp	r1, r0
   1ae5c:	blt	1aee4 <__assert_fail@plt+0x9ee8>
   1ae60:	b	1af08 <__assert_fail@plt+0x9f0c>
   1ae64:	ldr	r0, [fp, #-12]
   1ae68:	sub	r0, r0, #1
   1ae6c:	mvn	r1, #0
   1ae70:	cmp	r1, r0
   1ae74:	blt	1aee4 <__assert_fail@plt+0x9ee8>
   1ae78:	b	1af08 <__assert_fail@plt+0x9f0c>
   1ae7c:	ldr	r0, [fp, #-8]
   1ae80:	ldr	r2, [r0]
   1ae84:	ldr	r3, [r0, #4]
   1ae88:	mov	r0, #0
   1ae8c:	str	r0, [fp, #-144]	; 0xffffff70
   1ae90:	ldr	r1, [fp, #-144]	; 0xffffff70
   1ae94:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1ae98:	ldr	r2, [fp, #-12]
   1ae9c:	subs	r0, r0, r2
   1aea0:	sbcs	r1, r1, r2, asr #31
   1aea4:	str	r0, [fp, #-148]	; 0xffffff6c
   1aea8:	str	r1, [fp, #-152]	; 0xffffff68
   1aeac:	blt	1aee4 <__assert_fail@plt+0x9ee8>
   1aeb0:	b	1af08 <__assert_fail@plt+0x9f0c>
   1aeb4:	ldr	r0, [fp, #-12]
   1aeb8:	mov	r1, #255	; 0xff
   1aebc:	sdiv	r0, r1, r0
   1aec0:	ldr	r1, [fp, #-8]
   1aec4:	ldr	r2, [r1]
   1aec8:	ldr	r1, [r1, #4]
   1aecc:	subs	r2, r0, r2
   1aed0:	rscs	r0, r1, r0, asr #31
   1aed4:	str	r2, [fp, #-156]	; 0xffffff64
   1aed8:	str	r0, [fp, #-160]	; 0xffffff60
   1aedc:	bge	1af08 <__assert_fail@plt+0x9f0c>
   1aee0:	b	1aee4 <__assert_fail@plt+0x9ee8>
   1aee4:	ldr	r0, [fp, #-8]
   1aee8:	ldr	r0, [r0]
   1aeec:	ldr	r1, [fp, #-12]
   1aef0:	mul	r0, r0, r1
   1aef4:	uxtb	r0, r0
   1aef8:	mov	r1, #0
   1aefc:	str	r1, [fp, #-20]	; 0xffffffec
   1af00:	str	r0, [fp, #-24]	; 0xffffffe8
   1af04:	b	1c5d4 <__assert_fail@plt+0xb5d8>
   1af08:	ldr	r0, [fp, #-8]
   1af0c:	ldr	r0, [r0]
   1af10:	ldr	r1, [fp, #-12]
   1af14:	mul	r0, r0, r1
   1af18:	uxtb	r0, r0
   1af1c:	mov	r1, #0
   1af20:	str	r1, [fp, #-20]	; 0xffffffec
   1af24:	str	r0, [fp, #-24]	; 0xffffffe8
   1af28:	b	1c608 <__assert_fail@plt+0xb60c>
   1af2c:	b	1b4c0 <__assert_fail@plt+0xa4c4>
   1af30:	b	1af34 <__assert_fail@plt+0x9f38>
   1af34:	ldr	r0, [fp, #-12]
   1af38:	cmp	r0, #0
   1af3c:	bge	1b0d4 <__assert_fail@plt+0xa0d8>
   1af40:	ldr	r0, [fp, #-8]
   1af44:	ldr	r0, [r0, #4]
   1af48:	cmn	r0, #1
   1af4c:	bgt	1b004 <__assert_fail@plt+0xa008>
   1af50:	b	1af54 <__assert_fail@plt+0x9f58>
   1af54:	b	1af58 <__assert_fail@plt+0x9f5c>
   1af58:	ldr	r0, [fp, #-8]
   1af5c:	ldr	r1, [r0]
   1af60:	ldr	r0, [r0, #4]
   1af64:	ldr	r2, [fp, #-12]
   1af68:	movw	r3, #32767	; 0x7fff
   1af6c:	sdiv	r2, r3, r2
   1af70:	subs	r1, r1, r2
   1af74:	sbcs	r0, r0, r2, asr #31
   1af78:	str	r1, [fp, #-164]	; 0xffffff5c
   1af7c:	str	r0, [fp, #-168]	; 0xffffff58
   1af80:	blt	1b1c0 <__assert_fail@plt+0xa1c4>
   1af84:	b	1b1e4 <__assert_fail@plt+0xa1e8>
   1af88:	b	1af8c <__assert_fail@plt+0x9f90>
   1af8c:	ldr	r0, [pc, #2648]	; 1b9ec <__assert_fail@plt+0xa9f0>
   1af90:	ldr	r1, [fp, #-12]
   1af94:	cmp	r1, r0
   1af98:	blt	1afb0 <__assert_fail@plt+0x9fb4>
   1af9c:	b	1afbc <__assert_fail@plt+0x9fc0>
   1afa0:	ldr	r0, [fp, #-12]
   1afa4:	movw	r1, #0
   1afa8:	cmp	r1, r0
   1afac:	bge	1afbc <__assert_fail@plt+0x9fc0>
   1afb0:	movw	r0, #0
   1afb4:	str	r0, [fp, #-172]	; 0xffffff54
   1afb8:	b	1afd4 <__assert_fail@plt+0x9fd8>
   1afbc:	ldr	r0, [fp, #-12]
   1afc0:	movw	r1, #0
   1afc4:	sub	r0, r1, r0
   1afc8:	movw	r1, #32767	; 0x7fff
   1afcc:	sdiv	r0, r1, r0
   1afd0:	str	r0, [fp, #-172]	; 0xffffff54
   1afd4:	ldr	r0, [fp, #-172]	; 0xffffff54
   1afd8:	ldr	r1, [fp, #-8]
   1afdc:	ldr	r2, [r1]
   1afe0:	ldr	r1, [r1, #4]
   1afe4:	mvn	r1, r1
   1afe8:	mvn	r2, r2
   1afec:	subs	r2, r2, r0
   1aff0:	sbcs	r0, r1, r0, asr #31
   1aff4:	str	r2, [fp, #-176]	; 0xffffff50
   1aff8:	str	r0, [fp, #-180]	; 0xffffff4c
   1affc:	bge	1b1c0 <__assert_fail@plt+0xa1c4>
   1b000:	b	1b1e4 <__assert_fail@plt+0xa1e8>
   1b004:	b	1b008 <__assert_fail@plt+0xa00c>
   1b008:	b	1b0a0 <__assert_fail@plt+0xa0a4>
   1b00c:	b	1b0a0 <__assert_fail@plt+0xa0a4>
   1b010:	ldr	r0, [fp, #-12]
   1b014:	cmn	r0, #1
   1b018:	bne	1b0a0 <__assert_fail@plt+0xa0a4>
   1b01c:	b	1b020 <__assert_fail@plt+0xa024>
   1b020:	ldr	r0, [fp, #-8]
   1b024:	ldr	r1, [r0]
   1b028:	ldr	r0, [r0, #4]
   1b02c:	subs	r1, r1, #32768	; 0x8000
   1b030:	sbc	r0, r0, #0
   1b034:	rsbs	r1, r1, #0
   1b038:	rscs	r0, r0, #0
   1b03c:	str	r1, [fp, #-184]	; 0xffffff48
   1b040:	str	r0, [fp, #-188]	; 0xffffff44
   1b044:	blt	1b1c0 <__assert_fail@plt+0xa1c4>
   1b048:	b	1b1e4 <__assert_fail@plt+0xa1e8>
   1b04c:	ldr	r0, [fp, #-8]
   1b050:	ldr	r1, [r0]
   1b054:	ldr	r0, [r0, #4]
   1b058:	subs	r1, r1, #1
   1b05c:	sbcs	r0, r0, #0
   1b060:	str	r1, [fp, #-192]	; 0xffffff40
   1b064:	str	r0, [fp, #-196]	; 0xffffff3c
   1b068:	blt	1b1e4 <__assert_fail@plt+0xa1e8>
   1b06c:	b	1b070 <__assert_fail@plt+0xa074>
   1b070:	ldr	r0, [fp, #-8]
   1b074:	ldr	r1, [r0]
   1b078:	ldr	r0, [r0, #4]
   1b07c:	subs	r1, r1, #1
   1b080:	sbc	r0, r0, #0
   1b084:	movw	r2, #32767	; 0x7fff
   1b088:	subs	r1, r2, r1
   1b08c:	rscs	r0, r0, #0
   1b090:	str	r1, [fp, #-200]	; 0xffffff38
   1b094:	str	r0, [fp, #-204]	; 0xffffff34
   1b098:	blt	1b1c0 <__assert_fail@plt+0xa1c4>
   1b09c:	b	1b1e4 <__assert_fail@plt+0xa1e8>
   1b0a0:	ldr	r0, [fp, #-12]
   1b0a4:	movw	r1, #32768	; 0x8000
   1b0a8:	movt	r1, #65535	; 0xffff
   1b0ac:	sdiv	r0, r1, r0
   1b0b0:	ldr	r1, [fp, #-8]
   1b0b4:	ldr	r2, [r1]
   1b0b8:	ldr	r1, [r1, #4]
   1b0bc:	subs	r2, r0, r2
   1b0c0:	rscs	r0, r1, r0, asr #31
   1b0c4:	str	r2, [fp, #-208]	; 0xffffff30
   1b0c8:	str	r0, [fp, #-212]	; 0xffffff2c
   1b0cc:	blt	1b1c0 <__assert_fail@plt+0xa1c4>
   1b0d0:	b	1b1e4 <__assert_fail@plt+0xa1e8>
   1b0d4:	ldr	r0, [fp, #-12]
   1b0d8:	cmp	r0, #0
   1b0dc:	bne	1b0e4 <__assert_fail@plt+0xa0e8>
   1b0e0:	b	1b1e4 <__assert_fail@plt+0xa1e8>
   1b0e4:	ldr	r0, [fp, #-8]
   1b0e8:	ldr	r0, [r0, #4]
   1b0ec:	cmn	r0, #1
   1b0f0:	bgt	1b190 <__assert_fail@plt+0xa194>
   1b0f4:	b	1b0f8 <__assert_fail@plt+0xa0fc>
   1b0f8:	b	1b0fc <__assert_fail@plt+0xa100>
   1b0fc:	b	1b158 <__assert_fail@plt+0xa15c>
   1b100:	b	1b158 <__assert_fail@plt+0xa15c>
   1b104:	ldr	r0, [fp, #-8]
   1b108:	ldr	r1, [r0]
   1b10c:	ldr	r0, [r0, #4]
   1b110:	and	r0, r1, r0
   1b114:	cmn	r0, #1
   1b118:	bne	1b158 <__assert_fail@plt+0xa15c>
   1b11c:	b	1b120 <__assert_fail@plt+0xa124>
   1b120:	b	1b124 <__assert_fail@plt+0xa128>
   1b124:	ldr	r0, [pc, #4088]	; 1c124 <__assert_fail@plt+0xb128>
   1b128:	ldr	r1, [fp, #-12]
   1b12c:	add	r0, r1, r0
   1b130:	movw	r1, #0
   1b134:	cmp	r1, r0
   1b138:	blt	1b1c0 <__assert_fail@plt+0xa1c4>
   1b13c:	b	1b1e4 <__assert_fail@plt+0xa1e8>
   1b140:	ldr	r0, [fp, #-12]
   1b144:	sub	r0, r0, #1
   1b148:	movw	r1, #32767	; 0x7fff
   1b14c:	cmp	r1, r0
   1b150:	blt	1b1c0 <__assert_fail@plt+0xa1c4>
   1b154:	b	1b1e4 <__assert_fail@plt+0xa1e8>
   1b158:	ldr	r0, [fp, #-8]
   1b15c:	ldr	r2, [r0]
   1b160:	ldr	r3, [r0, #4]
   1b164:	movw	r0, #32768	; 0x8000
   1b168:	movt	r0, #65535	; 0xffff
   1b16c:	mvn	r1, #0
   1b170:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1b174:	ldr	r2, [fp, #-12]
   1b178:	subs	r0, r0, r2
   1b17c:	sbcs	r1, r1, r2, asr #31
   1b180:	str	r0, [fp, #-216]	; 0xffffff28
   1b184:	str	r1, [fp, #-220]	; 0xffffff24
   1b188:	blt	1b1c0 <__assert_fail@plt+0xa1c4>
   1b18c:	b	1b1e4 <__assert_fail@plt+0xa1e8>
   1b190:	ldr	r0, [fp, #-12]
   1b194:	movw	r1, #32767	; 0x7fff
   1b198:	sdiv	r0, r1, r0
   1b19c:	ldr	r1, [fp, #-8]
   1b1a0:	ldr	r2, [r1]
   1b1a4:	ldr	r1, [r1, #4]
   1b1a8:	subs	r2, r0, r2
   1b1ac:	rscs	r0, r1, r0, asr #31
   1b1b0:	str	r2, [fp, #-224]	; 0xffffff20
   1b1b4:	str	r0, [fp, #-228]	; 0xffffff1c
   1b1b8:	bge	1b1e4 <__assert_fail@plt+0xa1e8>
   1b1bc:	b	1b1c0 <__assert_fail@plt+0xa1c4>
   1b1c0:	ldr	r0, [fp, #-8]
   1b1c4:	ldr	r0, [r0]
   1b1c8:	ldr	r1, [fp, #-12]
   1b1cc:	mul	r0, r0, r1
   1b1d0:	sxth	r0, r0
   1b1d4:	asr	r1, r0, #31
   1b1d8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b1dc:	str	r1, [fp, #-20]	; 0xffffffec
   1b1e0:	b	1c5d4 <__assert_fail@plt+0xb5d8>
   1b1e4:	ldr	r0, [fp, #-8]
   1b1e8:	ldr	r0, [r0]
   1b1ec:	ldr	r1, [fp, #-12]
   1b1f0:	mul	r0, r0, r1
   1b1f4:	sxth	r0, r0
   1b1f8:	asr	r1, r0, #31
   1b1fc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b200:	str	r1, [fp, #-20]	; 0xffffffec
   1b204:	b	1c608 <__assert_fail@plt+0xb60c>
   1b208:	ldr	r0, [fp, #-12]
   1b20c:	cmp	r0, #0
   1b210:	bge	1b390 <__assert_fail@plt+0xa394>
   1b214:	ldr	r0, [fp, #-8]
   1b218:	ldr	r0, [r0, #4]
   1b21c:	cmn	r0, #1
   1b220:	bgt	1b2d8 <__assert_fail@plt+0xa2dc>
   1b224:	b	1b228 <__assert_fail@plt+0xa22c>
   1b228:	b	1b22c <__assert_fail@plt+0xa230>
   1b22c:	ldr	r0, [fp, #-8]
   1b230:	ldr	r1, [r0]
   1b234:	ldr	r0, [r0, #4]
   1b238:	ldr	r2, [fp, #-12]
   1b23c:	movw	r3, #65535	; 0xffff
   1b240:	sdiv	r2, r3, r2
   1b244:	subs	r1, r1, r2
   1b248:	sbcs	r0, r0, r2, asr #31
   1b24c:	str	r1, [fp, #-232]	; 0xffffff18
   1b250:	str	r0, [fp, #-236]	; 0xffffff14
   1b254:	blt	1b478 <__assert_fail@plt+0xa47c>
   1b258:	b	1b49c <__assert_fail@plt+0xa4a0>
   1b25c:	b	1b260 <__assert_fail@plt+0xa264>
   1b260:	ldr	r0, [pc, #1924]	; 1b9ec <__assert_fail@plt+0xa9f0>
   1b264:	ldr	r1, [fp, #-12]
   1b268:	cmp	r1, r0
   1b26c:	blt	1b284 <__assert_fail@plt+0xa288>
   1b270:	b	1b290 <__assert_fail@plt+0xa294>
   1b274:	ldr	r0, [fp, #-12]
   1b278:	movw	r1, #0
   1b27c:	cmp	r1, r0
   1b280:	bge	1b290 <__assert_fail@plt+0xa294>
   1b284:	movw	r0, #0
   1b288:	str	r0, [fp, #-240]	; 0xffffff10
   1b28c:	b	1b2a8 <__assert_fail@plt+0xa2ac>
   1b290:	ldr	r0, [fp, #-12]
   1b294:	movw	r1, #0
   1b298:	sub	r0, r1, r0
   1b29c:	movw	r1, #65535	; 0xffff
   1b2a0:	sdiv	r0, r1, r0
   1b2a4:	str	r0, [fp, #-240]	; 0xffffff10
   1b2a8:	ldr	r0, [fp, #-240]	; 0xffffff10
   1b2ac:	ldr	r1, [fp, #-8]
   1b2b0:	ldr	r2, [r1]
   1b2b4:	ldr	r1, [r1, #4]
   1b2b8:	mvn	r1, r1
   1b2bc:	mvn	r2, r2
   1b2c0:	subs	r2, r2, r0
   1b2c4:	sbcs	r0, r1, r0, asr #31
   1b2c8:	str	r2, [fp, #-244]	; 0xffffff0c
   1b2cc:	str	r0, [fp, #-248]	; 0xffffff08
   1b2d0:	bge	1b478 <__assert_fail@plt+0xa47c>
   1b2d4:	b	1b49c <__assert_fail@plt+0xa4a0>
   1b2d8:	b	1b2dc <__assert_fail@plt+0xa2e0>
   1b2dc:	b	1b360 <__assert_fail@plt+0xa364>
   1b2e0:	b	1b360 <__assert_fail@plt+0xa364>
   1b2e4:	ldr	r0, [fp, #-12]
   1b2e8:	cmn	r0, #1
   1b2ec:	bne	1b360 <__assert_fail@plt+0xa364>
   1b2f0:	b	1b2f4 <__assert_fail@plt+0xa2f8>
   1b2f4:	ldr	r0, [fp, #-8]
   1b2f8:	ldr	r1, [r0]
   1b2fc:	ldr	r0, [r0, #4]
   1b300:	rsbs	r1, r1, #0
   1b304:	rscs	r0, r0, #0
   1b308:	str	r1, [fp, #-252]	; 0xffffff04
   1b30c:	str	r0, [fp, #-256]	; 0xffffff00
   1b310:	blt	1b478 <__assert_fail@plt+0xa47c>
   1b314:	b	1b49c <__assert_fail@plt+0xa4a0>
   1b318:	ldr	r0, [fp, #-8]
   1b31c:	ldr	r1, [r0]
   1b320:	ldr	r0, [r0, #4]
   1b324:	subs	r1, r1, #1
   1b328:	sbcs	r0, r0, #0
   1b32c:	str	r1, [fp, #-260]	; 0xfffffefc
   1b330:	str	r0, [fp, #-264]	; 0xfffffef8
   1b334:	blt	1b49c <__assert_fail@plt+0xa4a0>
   1b338:	b	1b33c <__assert_fail@plt+0xa340>
   1b33c:	ldr	r0, [fp, #-8]
   1b340:	ldr	r1, [r0]
   1b344:	ldr	r0, [r0, #4]
   1b348:	subs	r1, r1, #1
   1b34c:	sbc	r0, r0, #0
   1b350:	cmn	r0, #1
   1b354:	str	r1, [fp, #-268]	; 0xfffffef4
   1b358:	bgt	1b478 <__assert_fail@plt+0xa47c>
   1b35c:	b	1b49c <__assert_fail@plt+0xa4a0>
   1b360:	ldr	r0, [fp, #-12]
   1b364:	mov	r1, #0
   1b368:	sdiv	r0, r1, r0
   1b36c:	ldr	r1, [fp, #-8]
   1b370:	ldr	r2, [r1]
   1b374:	ldr	r1, [r1, #4]
   1b378:	subs	r2, r0, r2
   1b37c:	rscs	r0, r1, r0, asr #31
   1b380:	str	r2, [fp, #-272]	; 0xfffffef0
   1b384:	str	r0, [fp, #-276]	; 0xfffffeec
   1b388:	blt	1b478 <__assert_fail@plt+0xa47c>
   1b38c:	b	1b49c <__assert_fail@plt+0xa4a0>
   1b390:	ldr	r0, [fp, #-12]
   1b394:	cmp	r0, #0
   1b398:	bne	1b3a0 <__assert_fail@plt+0xa3a4>
   1b39c:	b	1b49c <__assert_fail@plt+0xa4a0>
   1b3a0:	ldr	r0, [fp, #-8]
   1b3a4:	ldr	r0, [r0, #4]
   1b3a8:	cmn	r0, #1
   1b3ac:	bgt	1b448 <__assert_fail@plt+0xa44c>
   1b3b0:	b	1b3b4 <__assert_fail@plt+0xa3b8>
   1b3b4:	b	1b3b8 <__assert_fail@plt+0xa3bc>
   1b3b8:	b	1b410 <__assert_fail@plt+0xa414>
   1b3bc:	b	1b410 <__assert_fail@plt+0xa414>
   1b3c0:	ldr	r0, [fp, #-8]
   1b3c4:	ldr	r1, [r0]
   1b3c8:	ldr	r0, [r0, #4]
   1b3cc:	and	r0, r1, r0
   1b3d0:	cmn	r0, #1
   1b3d4:	bne	1b410 <__assert_fail@plt+0xa414>
   1b3d8:	b	1b3dc <__assert_fail@plt+0xa3e0>
   1b3dc:	b	1b3e0 <__assert_fail@plt+0xa3e4>
   1b3e0:	ldr	r0, [fp, #-12]
   1b3e4:	add	r0, r0, #0
   1b3e8:	movw	r1, #0
   1b3ec:	cmp	r1, r0
   1b3f0:	blt	1b478 <__assert_fail@plt+0xa47c>
   1b3f4:	b	1b49c <__assert_fail@plt+0xa4a0>
   1b3f8:	ldr	r0, [fp, #-12]
   1b3fc:	sub	r0, r0, #1
   1b400:	mvn	r1, #0
   1b404:	cmp	r1, r0
   1b408:	blt	1b478 <__assert_fail@plt+0xa47c>
   1b40c:	b	1b49c <__assert_fail@plt+0xa4a0>
   1b410:	ldr	r0, [fp, #-8]
   1b414:	ldr	r2, [r0]
   1b418:	ldr	r3, [r0, #4]
   1b41c:	mov	r0, #0
   1b420:	str	r0, [fp, #-280]	; 0xfffffee8
   1b424:	ldr	r1, [fp, #-280]	; 0xfffffee8
   1b428:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1b42c:	ldr	r2, [fp, #-12]
   1b430:	subs	r0, r0, r2
   1b434:	sbcs	r1, r1, r2, asr #31
   1b438:	str	r0, [fp, #-284]	; 0xfffffee4
   1b43c:	str	r1, [fp, #-288]	; 0xfffffee0
   1b440:	blt	1b478 <__assert_fail@plt+0xa47c>
   1b444:	b	1b49c <__assert_fail@plt+0xa4a0>
   1b448:	ldr	r0, [fp, #-12]
   1b44c:	movw	r1, #65535	; 0xffff
   1b450:	sdiv	r0, r1, r0
   1b454:	ldr	r1, [fp, #-8]
   1b458:	ldr	r2, [r1]
   1b45c:	ldr	r1, [r1, #4]
   1b460:	subs	r2, r0, r2
   1b464:	rscs	r0, r1, r0, asr #31
   1b468:	str	r2, [fp, #-292]	; 0xfffffedc
   1b46c:	str	r0, [fp, #-296]	; 0xfffffed8
   1b470:	bge	1b49c <__assert_fail@plt+0xa4a0>
   1b474:	b	1b478 <__assert_fail@plt+0xa47c>
   1b478:	ldr	r0, [fp, #-8]
   1b47c:	ldr	r0, [r0]
   1b480:	ldr	r1, [fp, #-12]
   1b484:	mul	r0, r0, r1
   1b488:	uxth	r0, r0
   1b48c:	mov	r1, #0
   1b490:	str	r1, [fp, #-20]	; 0xffffffec
   1b494:	str	r0, [fp, #-24]	; 0xffffffe8
   1b498:	b	1c5d4 <__assert_fail@plt+0xb5d8>
   1b49c:	ldr	r0, [fp, #-8]
   1b4a0:	ldr	r0, [r0]
   1b4a4:	ldr	r1, [fp, #-12]
   1b4a8:	mul	r0, r0, r1
   1b4ac:	uxth	r0, r0
   1b4b0:	mov	r1, #0
   1b4b4:	str	r1, [fp, #-20]	; 0xffffffec
   1b4b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b4bc:	b	1c608 <__assert_fail@plt+0xb60c>
   1b4c0:	b	1ba30 <__assert_fail@plt+0xaa34>
   1b4c4:	b	1b4c8 <__assert_fail@plt+0xa4cc>
   1b4c8:	ldr	r0, [fp, #-12]
   1b4cc:	cmp	r0, #0
   1b4d0:	bge	1b658 <__assert_fail@plt+0xa65c>
   1b4d4:	ldr	r0, [fp, #-8]
   1b4d8:	ldr	r0, [r0, #4]
   1b4dc:	cmn	r0, #1
   1b4e0:	bgt	1b598 <__assert_fail@plt+0xa59c>
   1b4e4:	b	1b4e8 <__assert_fail@plt+0xa4ec>
   1b4e8:	b	1b4ec <__assert_fail@plt+0xa4f0>
   1b4ec:	ldr	r0, [fp, #-8]
   1b4f0:	ldr	r1, [r0]
   1b4f4:	ldr	r0, [r0, #4]
   1b4f8:	ldr	r2, [fp, #-12]
   1b4fc:	mvn	r3, #-2147483648	; 0x80000000
   1b500:	sdiv	r2, r3, r2
   1b504:	subs	r1, r1, r2
   1b508:	sbcs	r0, r0, r2, asr #31
   1b50c:	str	r1, [fp, #-300]	; 0xfffffed4
   1b510:	str	r0, [fp, #-304]	; 0xfffffed0
   1b514:	blt	1b73c <__assert_fail@plt+0xa740>
   1b518:	b	1b75c <__assert_fail@plt+0xa760>
   1b51c:	b	1b520 <__assert_fail@plt+0xa524>
   1b520:	ldr	r0, [pc, #1220]	; 1b9ec <__assert_fail@plt+0xa9f0>
   1b524:	ldr	r1, [fp, #-12]
   1b528:	cmp	r1, r0
   1b52c:	blt	1b544 <__assert_fail@plt+0xa548>
   1b530:	b	1b550 <__assert_fail@plt+0xa554>
   1b534:	ldr	r0, [fp, #-12]
   1b538:	movw	r1, #0
   1b53c:	cmp	r1, r0
   1b540:	bge	1b550 <__assert_fail@plt+0xa554>
   1b544:	movw	r0, #0
   1b548:	str	r0, [fp, #-308]	; 0xfffffecc
   1b54c:	b	1b568 <__assert_fail@plt+0xa56c>
   1b550:	ldr	r0, [pc, #4064]	; 1c538 <__assert_fail@plt+0xb53c>
   1b554:	ldr	r1, [fp, #-12]
   1b558:	movw	r2, #0
   1b55c:	sub	r1, r2, r1
   1b560:	sdiv	r0, r0, r1
   1b564:	str	r0, [fp, #-308]	; 0xfffffecc
   1b568:	ldr	r0, [fp, #-308]	; 0xfffffecc
   1b56c:	ldr	r1, [fp, #-8]
   1b570:	ldr	r2, [r1]
   1b574:	ldr	r1, [r1, #4]
   1b578:	mvn	r1, r1
   1b57c:	mvn	r2, r2
   1b580:	subs	r2, r2, r0
   1b584:	sbcs	r0, r1, r0, asr #31
   1b588:	str	r2, [fp, #-312]	; 0xfffffec8
   1b58c:	str	r0, [fp, #-316]	; 0xfffffec4
   1b590:	bge	1b73c <__assert_fail@plt+0xa740>
   1b594:	b	1b75c <__assert_fail@plt+0xa760>
   1b598:	ldr	r0, [fp, #-12]
   1b59c:	cmn	r0, #1
   1b5a0:	bne	1b628 <__assert_fail@plt+0xa62c>
   1b5a4:	b	1b5a8 <__assert_fail@plt+0xa5ac>
   1b5a8:	ldr	r0, [fp, #-8]
   1b5ac:	ldr	r1, [r0]
   1b5b0:	ldr	r0, [r0, #4]
   1b5b4:	adds	r1, r1, #-2147483648	; 0x80000000
   1b5b8:	sbc	r0, r0, #0
   1b5bc:	rsbs	r1, r1, #0
   1b5c0:	rscs	r0, r0, #0
   1b5c4:	str	r1, [fp, #-320]	; 0xfffffec0
   1b5c8:	str	r0, [fp, #-324]	; 0xfffffebc
   1b5cc:	blt	1b73c <__assert_fail@plt+0xa740>
   1b5d0:	b	1b75c <__assert_fail@plt+0xa760>
   1b5d4:	ldr	r0, [fp, #-8]
   1b5d8:	ldr	r1, [r0]
   1b5dc:	ldr	r0, [r0, #4]
   1b5e0:	subs	r1, r1, #1
   1b5e4:	sbcs	r0, r0, #0
   1b5e8:	str	r1, [fp, #-328]	; 0xfffffeb8
   1b5ec:	str	r0, [fp, #-332]	; 0xfffffeb4
   1b5f0:	blt	1b75c <__assert_fail@plt+0xa760>
   1b5f4:	b	1b5f8 <__assert_fail@plt+0xa5fc>
   1b5f8:	ldr	r0, [fp, #-8]
   1b5fc:	ldr	r1, [r0]
   1b600:	ldr	r0, [r0, #4]
   1b604:	subs	r1, r1, #1
   1b608:	sbc	r0, r0, #0
   1b60c:	mvn	r2, #-2147483648	; 0x80000000
   1b610:	subs	r1, r2, r1
   1b614:	rscs	r0, r0, #0
   1b618:	str	r1, [fp, #-336]	; 0xfffffeb0
   1b61c:	str	r0, [fp, #-340]	; 0xfffffeac
   1b620:	blt	1b73c <__assert_fail@plt+0xa740>
   1b624:	b	1b75c <__assert_fail@plt+0xa760>
   1b628:	ldr	r0, [fp, #-12]
   1b62c:	mov	r1, #-2147483648	; 0x80000000
   1b630:	sdiv	r0, r1, r0
   1b634:	ldr	r1, [fp, #-8]
   1b638:	ldr	r2, [r1]
   1b63c:	ldr	r1, [r1, #4]
   1b640:	subs	r2, r0, r2
   1b644:	rscs	r0, r1, r0, asr #31
   1b648:	str	r2, [fp, #-344]	; 0xfffffea8
   1b64c:	str	r0, [fp, #-348]	; 0xfffffea4
   1b650:	blt	1b73c <__assert_fail@plt+0xa740>
   1b654:	b	1b75c <__assert_fail@plt+0xa760>
   1b658:	ldr	r0, [fp, #-12]
   1b65c:	cmp	r0, #0
   1b660:	bne	1b668 <__assert_fail@plt+0xa66c>
   1b664:	b	1b75c <__assert_fail@plt+0xa760>
   1b668:	ldr	r0, [fp, #-8]
   1b66c:	ldr	r0, [r0, #4]
   1b670:	cmn	r0, #1
   1b674:	bgt	1b70c <__assert_fail@plt+0xa710>
   1b678:	b	1b67c <__assert_fail@plt+0xa680>
   1b67c:	b	1b680 <__assert_fail@plt+0xa684>
   1b680:	b	1b6d8 <__assert_fail@plt+0xa6dc>
   1b684:	b	1b6d8 <__assert_fail@plt+0xa6dc>
   1b688:	ldr	r0, [fp, #-8]
   1b68c:	ldr	r1, [r0]
   1b690:	ldr	r0, [r0, #4]
   1b694:	and	r0, r1, r0
   1b698:	cmn	r0, #1
   1b69c:	bne	1b6d8 <__assert_fail@plt+0xa6dc>
   1b6a0:	b	1b6a4 <__assert_fail@plt+0xa6a8>
   1b6a4:	b	1b6a8 <__assert_fail@plt+0xa6ac>
   1b6a8:	ldr	r0, [fp, #-12]
   1b6ac:	add	r0, r0, #-2147483648	; 0x80000000
   1b6b0:	movw	r1, #0
   1b6b4:	cmp	r1, r0
   1b6b8:	blt	1b73c <__assert_fail@plt+0xa740>
   1b6bc:	b	1b75c <__assert_fail@plt+0xa760>
   1b6c0:	ldr	r0, [pc, #3948]	; 1c634 <__assert_fail@plt+0xb638>
   1b6c4:	ldr	r1, [fp, #-12]
   1b6c8:	sub	r1, r1, #1
   1b6cc:	cmp	r0, r1
   1b6d0:	blt	1b73c <__assert_fail@plt+0xa740>
   1b6d4:	b	1b75c <__assert_fail@plt+0xa760>
   1b6d8:	ldr	r0, [fp, #-8]
   1b6dc:	ldr	r2, [r0]
   1b6e0:	ldr	r3, [r0, #4]
   1b6e4:	mov	r0, #-2147483648	; 0x80000000
   1b6e8:	mvn	r1, #0
   1b6ec:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1b6f0:	ldr	r2, [fp, #-12]
   1b6f4:	subs	r0, r0, r2
   1b6f8:	sbcs	r1, r1, r2, asr #31
   1b6fc:	str	r0, [fp, #-352]	; 0xfffffea0
   1b700:	str	r1, [fp, #-356]	; 0xfffffe9c
   1b704:	blt	1b73c <__assert_fail@plt+0xa740>
   1b708:	b	1b75c <__assert_fail@plt+0xa760>
   1b70c:	ldr	r0, [fp, #-12]
   1b710:	mvn	r1, #-2147483648	; 0x80000000
   1b714:	sdiv	r0, r1, r0
   1b718:	ldr	r1, [fp, #-8]
   1b71c:	ldr	r2, [r1]
   1b720:	ldr	r1, [r1, #4]
   1b724:	subs	r2, r0, r2
   1b728:	rscs	r0, r1, r0, asr #31
   1b72c:	str	r2, [fp, #-360]	; 0xfffffe98
   1b730:	str	r0, [fp, #-364]	; 0xfffffe94
   1b734:	bge	1b75c <__assert_fail@plt+0xa760>
   1b738:	b	1b73c <__assert_fail@plt+0xa740>
   1b73c:	ldr	r0, [fp, #-8]
   1b740:	ldr	r0, [r0]
   1b744:	ldr	r1, [fp, #-12]
   1b748:	mul	r0, r0, r1
   1b74c:	asr	r1, r0, #31
   1b750:	str	r0, [fp, #-24]	; 0xffffffe8
   1b754:	str	r1, [fp, #-20]	; 0xffffffec
   1b758:	b	1c5d4 <__assert_fail@plt+0xb5d8>
   1b75c:	ldr	r0, [fp, #-8]
   1b760:	ldr	r0, [r0]
   1b764:	ldr	r1, [fp, #-12]
   1b768:	mul	r0, r0, r1
   1b76c:	asr	r1, r0, #31
   1b770:	str	r0, [fp, #-24]	; 0xffffffe8
   1b774:	str	r1, [fp, #-20]	; 0xffffffec
   1b778:	b	1c608 <__assert_fail@plt+0xb60c>
   1b77c:	ldr	r0, [fp, #-12]
   1b780:	cmp	r0, #0
   1b784:	bge	1b904 <__assert_fail@plt+0xa908>
   1b788:	ldr	r0, [fp, #-8]
   1b78c:	ldr	r0, [r0, #4]
   1b790:	cmn	r0, #1
   1b794:	bgt	1b84c <__assert_fail@plt+0xa850>
   1b798:	b	1b79c <__assert_fail@plt+0xa7a0>
   1b79c:	b	1b7d0 <__assert_fail@plt+0xa7d4>
   1b7a0:	ldr	r0, [fp, #-8]
   1b7a4:	ldr	r1, [r0]
   1b7a8:	ldr	r0, [r0, #4]
   1b7ac:	ldr	r2, [fp, #-12]
   1b7b0:	mvn	r3, #0
   1b7b4:	udiv	r2, r3, r2
   1b7b8:	subs	r1, r1, r2
   1b7bc:	sbcs	r0, r0, #0
   1b7c0:	str	r1, [fp, #-368]	; 0xfffffe90
   1b7c4:	str	r0, [fp, #-372]	; 0xfffffe8c
   1b7c8:	blt	1b9f0 <__assert_fail@plt+0xa9f4>
   1b7cc:	b	1ba10 <__assert_fail@plt+0xaa14>
   1b7d0:	b	1b7d4 <__assert_fail@plt+0xa7d8>
   1b7d4:	ldr	r0, [pc, #3668]	; 1c630 <__assert_fail@plt+0xb634>
   1b7d8:	ldr	r1, [fp, #-12]
   1b7dc:	cmp	r1, r0
   1b7e0:	blt	1b7f8 <__assert_fail@plt+0xa7fc>
   1b7e4:	b	1b804 <__assert_fail@plt+0xa808>
   1b7e8:	ldr	r0, [fp, #-12]
   1b7ec:	movw	r1, #0
   1b7f0:	cmp	r1, r0
   1b7f4:	bge	1b804 <__assert_fail@plt+0xa808>
   1b7f8:	movw	r0, #1
   1b7fc:	str	r0, [sp, #376]	; 0x178
   1b800:	b	1b81c <__assert_fail@plt+0xa820>
   1b804:	ldr	r0, [fp, #-12]
   1b808:	movw	r1, #0
   1b80c:	sub	r0, r1, r0
   1b810:	mvn	r1, #0
   1b814:	udiv	r0, r1, r0
   1b818:	str	r0, [sp, #376]	; 0x178
   1b81c:	ldr	r0, [sp, #376]	; 0x178
   1b820:	ldr	r1, [fp, #-8]
   1b824:	ldr	r2, [r1]
   1b828:	ldr	r1, [r1, #4]
   1b82c:	mvn	r1, r1
   1b830:	mvn	r2, r2
   1b834:	subs	r0, r2, r0
   1b838:	sbcs	r1, r1, #0
   1b83c:	str	r0, [sp, #372]	; 0x174
   1b840:	str	r1, [sp, #368]	; 0x170
   1b844:	bge	1b9f0 <__assert_fail@plt+0xa9f4>
   1b848:	b	1ba10 <__assert_fail@plt+0xaa14>
   1b84c:	b	1b850 <__assert_fail@plt+0xa854>
   1b850:	b	1b8d4 <__assert_fail@plt+0xa8d8>
   1b854:	b	1b8d4 <__assert_fail@plt+0xa8d8>
   1b858:	ldr	r0, [fp, #-12]
   1b85c:	cmn	r0, #1
   1b860:	bne	1b8d4 <__assert_fail@plt+0xa8d8>
   1b864:	b	1b868 <__assert_fail@plt+0xa86c>
   1b868:	ldr	r0, [fp, #-8]
   1b86c:	ldr	r1, [r0]
   1b870:	ldr	r0, [r0, #4]
   1b874:	rsbs	r1, r1, #0
   1b878:	rscs	r0, r0, #0
   1b87c:	str	r1, [sp, #364]	; 0x16c
   1b880:	str	r0, [sp, #360]	; 0x168
   1b884:	blt	1b9f0 <__assert_fail@plt+0xa9f4>
   1b888:	b	1ba10 <__assert_fail@plt+0xaa14>
   1b88c:	ldr	r0, [fp, #-8]
   1b890:	ldr	r1, [r0]
   1b894:	ldr	r0, [r0, #4]
   1b898:	subs	r1, r1, #1
   1b89c:	sbcs	r0, r0, #0
   1b8a0:	str	r1, [sp, #356]	; 0x164
   1b8a4:	str	r0, [sp, #352]	; 0x160
   1b8a8:	blt	1ba10 <__assert_fail@plt+0xaa14>
   1b8ac:	b	1b8b0 <__assert_fail@plt+0xa8b4>
   1b8b0:	ldr	r0, [fp, #-8]
   1b8b4:	ldr	r1, [r0]
   1b8b8:	ldr	r0, [r0, #4]
   1b8bc:	subs	r1, r1, #1
   1b8c0:	sbc	r0, r0, #0
   1b8c4:	cmn	r0, #1
   1b8c8:	str	r1, [sp, #348]	; 0x15c
   1b8cc:	bgt	1b9f0 <__assert_fail@plt+0xa9f4>
   1b8d0:	b	1ba10 <__assert_fail@plt+0xaa14>
   1b8d4:	ldr	r0, [fp, #-12]
   1b8d8:	mov	r1, #0
   1b8dc:	sdiv	r0, r1, r0
   1b8e0:	ldr	r1, [fp, #-8]
   1b8e4:	ldr	r2, [r1]
   1b8e8:	ldr	r1, [r1, #4]
   1b8ec:	subs	r2, r0, r2
   1b8f0:	rscs	r0, r1, r0, asr #31
   1b8f4:	str	r2, [sp, #344]	; 0x158
   1b8f8:	str	r0, [sp, #340]	; 0x154
   1b8fc:	blt	1b9f0 <__assert_fail@plt+0xa9f4>
   1b900:	b	1ba10 <__assert_fail@plt+0xaa14>
   1b904:	ldr	r0, [fp, #-12]
   1b908:	cmp	r0, #0
   1b90c:	bne	1b914 <__assert_fail@plt+0xa918>
   1b910:	b	1ba10 <__assert_fail@plt+0xaa14>
   1b914:	ldr	r0, [fp, #-8]
   1b918:	ldr	r0, [r0, #4]
   1b91c:	cmn	r0, #1
   1b920:	bgt	1b9bc <__assert_fail@plt+0xa9c0>
   1b924:	b	1b928 <__assert_fail@plt+0xa92c>
   1b928:	b	1b92c <__assert_fail@plt+0xa930>
   1b92c:	b	1b984 <__assert_fail@plt+0xa988>
   1b930:	b	1b984 <__assert_fail@plt+0xa988>
   1b934:	ldr	r0, [fp, #-8]
   1b938:	ldr	r1, [r0]
   1b93c:	ldr	r0, [r0, #4]
   1b940:	and	r0, r1, r0
   1b944:	cmn	r0, #1
   1b948:	bne	1b984 <__assert_fail@plt+0xa988>
   1b94c:	b	1b950 <__assert_fail@plt+0xa954>
   1b950:	b	1b954 <__assert_fail@plt+0xa958>
   1b954:	ldr	r0, [fp, #-12]
   1b958:	add	r0, r0, #0
   1b95c:	movw	r1, #0
   1b960:	cmp	r1, r0
   1b964:	blt	1b9f0 <__assert_fail@plt+0xa9f4>
   1b968:	b	1ba10 <__assert_fail@plt+0xaa14>
   1b96c:	ldr	r0, [fp, #-12]
   1b970:	sub	r0, r0, #1
   1b974:	mvn	r1, #0
   1b978:	cmp	r1, r0
   1b97c:	blt	1b9f0 <__assert_fail@plt+0xa9f4>
   1b980:	b	1ba10 <__assert_fail@plt+0xaa14>
   1b984:	ldr	r0, [fp, #-8]
   1b988:	ldr	r2, [r0]
   1b98c:	ldr	r3, [r0, #4]
   1b990:	mov	r0, #0
   1b994:	str	r0, [sp, #336]	; 0x150
   1b998:	ldr	r1, [sp, #336]	; 0x150
   1b99c:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1b9a0:	ldr	r2, [fp, #-12]
   1b9a4:	subs	r0, r0, r2
   1b9a8:	sbcs	r1, r1, r2, asr #31
   1b9ac:	str	r0, [sp, #332]	; 0x14c
   1b9b0:	str	r1, [sp, #328]	; 0x148
   1b9b4:	blt	1b9f0 <__assert_fail@plt+0xa9f4>
   1b9b8:	b	1ba10 <__assert_fail@plt+0xaa14>
   1b9bc:	ldr	r0, [fp, #-12]
   1b9c0:	mvn	r1, #0
   1b9c4:	udiv	r0, r1, r0
   1b9c8:	ldr	r1, [fp, #-8]
   1b9cc:	ldr	r2, [r1]
   1b9d0:	ldr	r1, [r1, #4]
   1b9d4:	subs	r0, r0, r2
   1b9d8:	rscs	r1, r1, #0
   1b9dc:	str	r0, [sp, #324]	; 0x144
   1b9e0:	str	r1, [sp, #320]	; 0x140
   1b9e4:	bge	1ba10 <__assert_fail@plt+0xaa14>
   1b9e8:	b	1b9f0 <__assert_fail@plt+0xa9f4>
   1b9ec:	andhi	r0, r0, r1
   1b9f0:	ldr	r0, [fp, #-8]
   1b9f4:	ldr	r0, [r0]
   1b9f8:	ldr	r1, [fp, #-12]
   1b9fc:	mul	r0, r0, r1
   1ba00:	mov	r1, #0
   1ba04:	str	r1, [fp, #-20]	; 0xffffffec
   1ba08:	str	r0, [fp, #-24]	; 0xffffffe8
   1ba0c:	b	1c5d4 <__assert_fail@plt+0xb5d8>
   1ba10:	ldr	r0, [fp, #-8]
   1ba14:	ldr	r0, [r0]
   1ba18:	ldr	r1, [fp, #-12]
   1ba1c:	mul	r0, r0, r1
   1ba20:	mov	r1, #0
   1ba24:	str	r1, [fp, #-20]	; 0xffffffec
   1ba28:	str	r0, [fp, #-24]	; 0xffffffe8
   1ba2c:	b	1c608 <__assert_fail@plt+0xb60c>
   1ba30:	b	1bf9c <__assert_fail@plt+0xafa0>
   1ba34:	b	1ba38 <__assert_fail@plt+0xaa3c>
   1ba38:	ldr	r0, [fp, #-12]
   1ba3c:	cmp	r0, #0
   1ba40:	bge	1bbc8 <__assert_fail@plt+0xabcc>
   1ba44:	ldr	r0, [fp, #-8]
   1ba48:	ldr	r0, [r0, #4]
   1ba4c:	cmn	r0, #1
   1ba50:	bgt	1bb08 <__assert_fail@plt+0xab0c>
   1ba54:	b	1ba58 <__assert_fail@plt+0xaa5c>
   1ba58:	b	1ba5c <__assert_fail@plt+0xaa60>
   1ba5c:	ldr	r0, [fp, #-8]
   1ba60:	ldr	r1, [r0]
   1ba64:	ldr	r0, [r0, #4]
   1ba68:	ldr	r2, [fp, #-12]
   1ba6c:	mvn	r3, #-2147483648	; 0x80000000
   1ba70:	sdiv	r2, r3, r2
   1ba74:	subs	r1, r1, r2
   1ba78:	sbcs	r0, r0, r2, asr #31
   1ba7c:	str	r1, [sp, #316]	; 0x13c
   1ba80:	str	r0, [sp, #312]	; 0x138
   1ba84:	blt	1bcac <__assert_fail@plt+0xacb0>
   1ba88:	b	1bccc <__assert_fail@plt+0xacd0>
   1ba8c:	b	1ba90 <__assert_fail@plt+0xaa94>
   1ba90:	ldr	r0, [pc, #2968]	; 1c630 <__assert_fail@plt+0xb634>
   1ba94:	ldr	r1, [fp, #-12]
   1ba98:	cmp	r1, r0
   1ba9c:	blt	1bab4 <__assert_fail@plt+0xaab8>
   1baa0:	b	1bac0 <__assert_fail@plt+0xaac4>
   1baa4:	ldr	r0, [fp, #-12]
   1baa8:	movw	r1, #0
   1baac:	cmp	r1, r0
   1bab0:	bge	1bac0 <__assert_fail@plt+0xaac4>
   1bab4:	movw	r0, #0
   1bab8:	str	r0, [sp, #308]	; 0x134
   1babc:	b	1bad8 <__assert_fail@plt+0xaadc>
   1bac0:	ldr	r0, [pc, #2924]	; 1c634 <__assert_fail@plt+0xb638>
   1bac4:	ldr	r1, [fp, #-12]
   1bac8:	movw	r2, #0
   1bacc:	sub	r1, r2, r1
   1bad0:	sdiv	r0, r0, r1
   1bad4:	str	r0, [sp, #308]	; 0x134
   1bad8:	ldr	r0, [sp, #308]	; 0x134
   1badc:	ldr	r1, [fp, #-8]
   1bae0:	ldr	r2, [r1]
   1bae4:	ldr	r1, [r1, #4]
   1bae8:	mvn	r1, r1
   1baec:	mvn	r2, r2
   1baf0:	subs	r2, r2, r0
   1baf4:	sbcs	r0, r1, r0, asr #31
   1baf8:	str	r2, [sp, #304]	; 0x130
   1bafc:	str	r0, [sp, #300]	; 0x12c
   1bb00:	bge	1bcac <__assert_fail@plt+0xacb0>
   1bb04:	b	1bccc <__assert_fail@plt+0xacd0>
   1bb08:	ldr	r0, [fp, #-12]
   1bb0c:	cmn	r0, #1
   1bb10:	bne	1bb98 <__assert_fail@plt+0xab9c>
   1bb14:	b	1bb18 <__assert_fail@plt+0xab1c>
   1bb18:	ldr	r0, [fp, #-8]
   1bb1c:	ldr	r1, [r0]
   1bb20:	ldr	r0, [r0, #4]
   1bb24:	adds	r1, r1, #-2147483648	; 0x80000000
   1bb28:	sbc	r0, r0, #0
   1bb2c:	rsbs	r1, r1, #0
   1bb30:	rscs	r0, r0, #0
   1bb34:	str	r1, [sp, #296]	; 0x128
   1bb38:	str	r0, [sp, #292]	; 0x124
   1bb3c:	blt	1bcac <__assert_fail@plt+0xacb0>
   1bb40:	b	1bccc <__assert_fail@plt+0xacd0>
   1bb44:	ldr	r0, [fp, #-8]
   1bb48:	ldr	r1, [r0]
   1bb4c:	ldr	r0, [r0, #4]
   1bb50:	subs	r1, r1, #1
   1bb54:	sbcs	r0, r0, #0
   1bb58:	str	r1, [sp, #288]	; 0x120
   1bb5c:	str	r0, [sp, #284]	; 0x11c
   1bb60:	blt	1bccc <__assert_fail@plt+0xacd0>
   1bb64:	b	1bb68 <__assert_fail@plt+0xab6c>
   1bb68:	ldr	r0, [fp, #-8]
   1bb6c:	ldr	r1, [r0]
   1bb70:	ldr	r0, [r0, #4]
   1bb74:	subs	r1, r1, #1
   1bb78:	sbc	r0, r0, #0
   1bb7c:	mvn	r2, #-2147483648	; 0x80000000
   1bb80:	subs	r1, r2, r1
   1bb84:	rscs	r0, r0, #0
   1bb88:	str	r1, [sp, #280]	; 0x118
   1bb8c:	str	r0, [sp, #276]	; 0x114
   1bb90:	blt	1bcac <__assert_fail@plt+0xacb0>
   1bb94:	b	1bccc <__assert_fail@plt+0xacd0>
   1bb98:	ldr	r0, [fp, #-12]
   1bb9c:	mov	r1, #-2147483648	; 0x80000000
   1bba0:	sdiv	r0, r1, r0
   1bba4:	ldr	r1, [fp, #-8]
   1bba8:	ldr	r2, [r1]
   1bbac:	ldr	r1, [r1, #4]
   1bbb0:	subs	r2, r0, r2
   1bbb4:	rscs	r0, r1, r0, asr #31
   1bbb8:	str	r2, [sp, #272]	; 0x110
   1bbbc:	str	r0, [sp, #268]	; 0x10c
   1bbc0:	blt	1bcac <__assert_fail@plt+0xacb0>
   1bbc4:	b	1bccc <__assert_fail@plt+0xacd0>
   1bbc8:	ldr	r0, [fp, #-12]
   1bbcc:	cmp	r0, #0
   1bbd0:	bne	1bbd8 <__assert_fail@plt+0xabdc>
   1bbd4:	b	1bccc <__assert_fail@plt+0xacd0>
   1bbd8:	ldr	r0, [fp, #-8]
   1bbdc:	ldr	r0, [r0, #4]
   1bbe0:	cmn	r0, #1
   1bbe4:	bgt	1bc7c <__assert_fail@plt+0xac80>
   1bbe8:	b	1bbec <__assert_fail@plt+0xabf0>
   1bbec:	b	1bbf0 <__assert_fail@plt+0xabf4>
   1bbf0:	b	1bc48 <__assert_fail@plt+0xac4c>
   1bbf4:	b	1bc48 <__assert_fail@plt+0xac4c>
   1bbf8:	ldr	r0, [fp, #-8]
   1bbfc:	ldr	r1, [r0]
   1bc00:	ldr	r0, [r0, #4]
   1bc04:	and	r0, r1, r0
   1bc08:	cmn	r0, #1
   1bc0c:	bne	1bc48 <__assert_fail@plt+0xac4c>
   1bc10:	b	1bc14 <__assert_fail@plt+0xac18>
   1bc14:	b	1bc18 <__assert_fail@plt+0xac1c>
   1bc18:	ldr	r0, [fp, #-12]
   1bc1c:	add	r0, r0, #-2147483648	; 0x80000000
   1bc20:	movw	r1, #0
   1bc24:	cmp	r1, r0
   1bc28:	blt	1bcac <__assert_fail@plt+0xacb0>
   1bc2c:	b	1bccc <__assert_fail@plt+0xacd0>
   1bc30:	ldr	r0, [pc, #2556]	; 1c634 <__assert_fail@plt+0xb638>
   1bc34:	ldr	r1, [fp, #-12]
   1bc38:	sub	r1, r1, #1
   1bc3c:	cmp	r0, r1
   1bc40:	blt	1bcac <__assert_fail@plt+0xacb0>
   1bc44:	b	1bccc <__assert_fail@plt+0xacd0>
   1bc48:	ldr	r0, [fp, #-8]
   1bc4c:	ldr	r2, [r0]
   1bc50:	ldr	r3, [r0, #4]
   1bc54:	mov	r0, #-2147483648	; 0x80000000
   1bc58:	mvn	r1, #0
   1bc5c:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1bc60:	ldr	r2, [fp, #-12]
   1bc64:	subs	r0, r0, r2
   1bc68:	sbcs	r1, r1, r2, asr #31
   1bc6c:	str	r0, [sp, #264]	; 0x108
   1bc70:	str	r1, [sp, #260]	; 0x104
   1bc74:	blt	1bcac <__assert_fail@plt+0xacb0>
   1bc78:	b	1bccc <__assert_fail@plt+0xacd0>
   1bc7c:	ldr	r0, [fp, #-12]
   1bc80:	mvn	r1, #-2147483648	; 0x80000000
   1bc84:	sdiv	r0, r1, r0
   1bc88:	ldr	r1, [fp, #-8]
   1bc8c:	ldr	r2, [r1]
   1bc90:	ldr	r1, [r1, #4]
   1bc94:	subs	r2, r0, r2
   1bc98:	rscs	r0, r1, r0, asr #31
   1bc9c:	str	r2, [sp, #256]	; 0x100
   1bca0:	str	r0, [sp, #252]	; 0xfc
   1bca4:	bge	1bccc <__assert_fail@plt+0xacd0>
   1bca8:	b	1bcac <__assert_fail@plt+0xacb0>
   1bcac:	ldr	r0, [fp, #-8]
   1bcb0:	ldr	r0, [r0]
   1bcb4:	ldr	r1, [fp, #-12]
   1bcb8:	mul	r0, r0, r1
   1bcbc:	asr	r1, r0, #31
   1bcc0:	str	r0, [fp, #-24]	; 0xffffffe8
   1bcc4:	str	r1, [fp, #-20]	; 0xffffffec
   1bcc8:	b	1c5d4 <__assert_fail@plt+0xb5d8>
   1bccc:	ldr	r0, [fp, #-8]
   1bcd0:	ldr	r0, [r0]
   1bcd4:	ldr	r1, [fp, #-12]
   1bcd8:	mul	r0, r0, r1
   1bcdc:	asr	r1, r0, #31
   1bce0:	str	r0, [fp, #-24]	; 0xffffffe8
   1bce4:	str	r1, [fp, #-20]	; 0xffffffec
   1bce8:	b	1c608 <__assert_fail@plt+0xb60c>
   1bcec:	ldr	r0, [fp, #-12]
   1bcf0:	cmp	r0, #0
   1bcf4:	bge	1be74 <__assert_fail@plt+0xae78>
   1bcf8:	ldr	r0, [fp, #-8]
   1bcfc:	ldr	r0, [r0, #4]
   1bd00:	cmn	r0, #1
   1bd04:	bgt	1bdbc <__assert_fail@plt+0xadc0>
   1bd08:	b	1bd0c <__assert_fail@plt+0xad10>
   1bd0c:	b	1bd40 <__assert_fail@plt+0xad44>
   1bd10:	ldr	r0, [fp, #-8]
   1bd14:	ldr	r1, [r0]
   1bd18:	ldr	r0, [r0, #4]
   1bd1c:	ldr	r2, [fp, #-12]
   1bd20:	mvn	r3, #0
   1bd24:	udiv	r2, r3, r2
   1bd28:	subs	r1, r1, r2
   1bd2c:	sbcs	r0, r0, #0
   1bd30:	str	r1, [sp, #248]	; 0xf8
   1bd34:	str	r0, [sp, #244]	; 0xf4
   1bd38:	blt	1bf5c <__assert_fail@plt+0xaf60>
   1bd3c:	b	1bf7c <__assert_fail@plt+0xaf80>
   1bd40:	b	1bd44 <__assert_fail@plt+0xad48>
   1bd44:	ldr	r0, [pc, #2276]	; 1c630 <__assert_fail@plt+0xb634>
   1bd48:	ldr	r1, [fp, #-12]
   1bd4c:	cmp	r1, r0
   1bd50:	blt	1bd68 <__assert_fail@plt+0xad6c>
   1bd54:	b	1bd74 <__assert_fail@plt+0xad78>
   1bd58:	ldr	r0, [fp, #-12]
   1bd5c:	movw	r1, #0
   1bd60:	cmp	r1, r0
   1bd64:	bge	1bd74 <__assert_fail@plt+0xad78>
   1bd68:	movw	r0, #1
   1bd6c:	str	r0, [sp, #240]	; 0xf0
   1bd70:	b	1bd8c <__assert_fail@plt+0xad90>
   1bd74:	ldr	r0, [fp, #-12]
   1bd78:	movw	r1, #0
   1bd7c:	sub	r0, r1, r0
   1bd80:	mvn	r1, #0
   1bd84:	udiv	r0, r1, r0
   1bd88:	str	r0, [sp, #240]	; 0xf0
   1bd8c:	ldr	r0, [sp, #240]	; 0xf0
   1bd90:	ldr	r1, [fp, #-8]
   1bd94:	ldr	r2, [r1]
   1bd98:	ldr	r1, [r1, #4]
   1bd9c:	mvn	r1, r1
   1bda0:	mvn	r2, r2
   1bda4:	subs	r0, r2, r0
   1bda8:	sbcs	r1, r1, #0
   1bdac:	str	r0, [sp, #236]	; 0xec
   1bdb0:	str	r1, [sp, #232]	; 0xe8
   1bdb4:	bge	1bf5c <__assert_fail@plt+0xaf60>
   1bdb8:	b	1bf7c <__assert_fail@plt+0xaf80>
   1bdbc:	b	1bdc0 <__assert_fail@plt+0xadc4>
   1bdc0:	b	1be44 <__assert_fail@plt+0xae48>
   1bdc4:	b	1be44 <__assert_fail@plt+0xae48>
   1bdc8:	ldr	r0, [fp, #-12]
   1bdcc:	cmn	r0, #1
   1bdd0:	bne	1be44 <__assert_fail@plt+0xae48>
   1bdd4:	b	1bdd8 <__assert_fail@plt+0xaddc>
   1bdd8:	ldr	r0, [fp, #-8]
   1bddc:	ldr	r1, [r0]
   1bde0:	ldr	r0, [r0, #4]
   1bde4:	rsbs	r1, r1, #0
   1bde8:	rscs	r0, r0, #0
   1bdec:	str	r1, [sp, #228]	; 0xe4
   1bdf0:	str	r0, [sp, #224]	; 0xe0
   1bdf4:	blt	1bf5c <__assert_fail@plt+0xaf60>
   1bdf8:	b	1bf7c <__assert_fail@plt+0xaf80>
   1bdfc:	ldr	r0, [fp, #-8]
   1be00:	ldr	r1, [r0]
   1be04:	ldr	r0, [r0, #4]
   1be08:	subs	r1, r1, #1
   1be0c:	sbcs	r0, r0, #0
   1be10:	str	r1, [sp, #220]	; 0xdc
   1be14:	str	r0, [sp, #216]	; 0xd8
   1be18:	blt	1bf7c <__assert_fail@plt+0xaf80>
   1be1c:	b	1be20 <__assert_fail@plt+0xae24>
   1be20:	ldr	r0, [fp, #-8]
   1be24:	ldr	r1, [r0]
   1be28:	ldr	r0, [r0, #4]
   1be2c:	subs	r1, r1, #1
   1be30:	sbc	r0, r0, #0
   1be34:	cmn	r0, #1
   1be38:	str	r1, [sp, #212]	; 0xd4
   1be3c:	bgt	1bf5c <__assert_fail@plt+0xaf60>
   1be40:	b	1bf7c <__assert_fail@plt+0xaf80>
   1be44:	ldr	r0, [fp, #-12]
   1be48:	mov	r1, #0
   1be4c:	sdiv	r0, r1, r0
   1be50:	ldr	r1, [fp, #-8]
   1be54:	ldr	r2, [r1]
   1be58:	ldr	r1, [r1, #4]
   1be5c:	subs	r2, r0, r2
   1be60:	rscs	r0, r1, r0, asr #31
   1be64:	str	r2, [sp, #208]	; 0xd0
   1be68:	str	r0, [sp, #204]	; 0xcc
   1be6c:	blt	1bf5c <__assert_fail@plt+0xaf60>
   1be70:	b	1bf7c <__assert_fail@plt+0xaf80>
   1be74:	ldr	r0, [fp, #-12]
   1be78:	cmp	r0, #0
   1be7c:	bne	1be84 <__assert_fail@plt+0xae88>
   1be80:	b	1bf7c <__assert_fail@plt+0xaf80>
   1be84:	ldr	r0, [fp, #-8]
   1be88:	ldr	r0, [r0, #4]
   1be8c:	cmn	r0, #1
   1be90:	bgt	1bf2c <__assert_fail@plt+0xaf30>
   1be94:	b	1be98 <__assert_fail@plt+0xae9c>
   1be98:	b	1be9c <__assert_fail@plt+0xaea0>
   1be9c:	b	1bef4 <__assert_fail@plt+0xaef8>
   1bea0:	b	1bef4 <__assert_fail@plt+0xaef8>
   1bea4:	ldr	r0, [fp, #-8]
   1bea8:	ldr	r1, [r0]
   1beac:	ldr	r0, [r0, #4]
   1beb0:	and	r0, r1, r0
   1beb4:	cmn	r0, #1
   1beb8:	bne	1bef4 <__assert_fail@plt+0xaef8>
   1bebc:	b	1bec0 <__assert_fail@plt+0xaec4>
   1bec0:	b	1bec4 <__assert_fail@plt+0xaec8>
   1bec4:	ldr	r0, [fp, #-12]
   1bec8:	add	r0, r0, #0
   1becc:	movw	r1, #0
   1bed0:	cmp	r1, r0
   1bed4:	blt	1bf5c <__assert_fail@plt+0xaf60>
   1bed8:	b	1bf7c <__assert_fail@plt+0xaf80>
   1bedc:	ldr	r0, [fp, #-12]
   1bee0:	sub	r0, r0, #1
   1bee4:	mvn	r1, #0
   1bee8:	cmp	r1, r0
   1beec:	blt	1bf5c <__assert_fail@plt+0xaf60>
   1bef0:	b	1bf7c <__assert_fail@plt+0xaf80>
   1bef4:	ldr	r0, [fp, #-8]
   1bef8:	ldr	r2, [r0]
   1befc:	ldr	r3, [r0, #4]
   1bf00:	mov	r0, #0
   1bf04:	str	r0, [sp, #200]	; 0xc8
   1bf08:	ldr	r1, [sp, #200]	; 0xc8
   1bf0c:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1bf10:	ldr	r2, [fp, #-12]
   1bf14:	subs	r0, r0, r2
   1bf18:	sbcs	r1, r1, r2, asr #31
   1bf1c:	str	r0, [sp, #196]	; 0xc4
   1bf20:	str	r1, [sp, #192]	; 0xc0
   1bf24:	blt	1bf5c <__assert_fail@plt+0xaf60>
   1bf28:	b	1bf7c <__assert_fail@plt+0xaf80>
   1bf2c:	ldr	r0, [fp, #-12]
   1bf30:	mvn	r1, #0
   1bf34:	udiv	r0, r1, r0
   1bf38:	ldr	r1, [fp, #-8]
   1bf3c:	ldr	r2, [r1]
   1bf40:	ldr	r1, [r1, #4]
   1bf44:	subs	r0, r0, r2
   1bf48:	rscs	r1, r1, #0
   1bf4c:	str	r0, [sp, #188]	; 0xbc
   1bf50:	str	r1, [sp, #184]	; 0xb8
   1bf54:	bge	1bf7c <__assert_fail@plt+0xaf80>
   1bf58:	b	1bf5c <__assert_fail@plt+0xaf60>
   1bf5c:	ldr	r0, [fp, #-8]
   1bf60:	ldr	r0, [r0]
   1bf64:	ldr	r1, [fp, #-12]
   1bf68:	mul	r0, r0, r1
   1bf6c:	mov	r1, #0
   1bf70:	str	r1, [fp, #-20]	; 0xffffffec
   1bf74:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf78:	b	1c5d4 <__assert_fail@plt+0xb5d8>
   1bf7c:	ldr	r0, [fp, #-8]
   1bf80:	ldr	r0, [r0]
   1bf84:	ldr	r1, [fp, #-12]
   1bf88:	mul	r0, r0, r1
   1bf8c:	mov	r1, #0
   1bf90:	str	r1, [fp, #-20]	; 0xffffffec
   1bf94:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf98:	b	1c608 <__assert_fail@plt+0xb60c>
   1bf9c:	b	1bfa0 <__assert_fail@plt+0xafa4>
   1bfa0:	ldr	r0, [fp, #-12]
   1bfa4:	cmp	r0, #0
   1bfa8:	bge	1c170 <__assert_fail@plt+0xb174>
   1bfac:	ldr	r0, [fp, #-8]
   1bfb0:	ldr	r0, [r0, #4]
   1bfb4:	cmn	r0, #1
   1bfb8:	bgt	1c0b8 <__assert_fail@plt+0xb0bc>
   1bfbc:	b	1bfc0 <__assert_fail@plt+0xafc4>
   1bfc0:	b	1bfc4 <__assert_fail@plt+0xafc8>
   1bfc4:	ldr	r0, [fp, #-8]
   1bfc8:	ldr	r1, [r0]
   1bfcc:	ldr	r0, [r0, #4]
   1bfd0:	ldr	r2, [fp, #-12]
   1bfd4:	asr	r3, r2, #31
   1bfd8:	mvn	ip, #0
   1bfdc:	mvn	lr, #-2147483648	; 0x80000000
   1bfe0:	str	r0, [sp, #180]	; 0xb4
   1bfe4:	mov	r0, ip
   1bfe8:	str	r1, [sp, #176]	; 0xb0
   1bfec:	mov	r1, lr
   1bff0:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1bff4:	ldr	r2, [sp, #176]	; 0xb0
   1bff8:	subs	r0, r2, r0
   1bffc:	ldr	r2, [sp, #180]	; 0xb4
   1c000:	sbcs	r1, r2, r1
   1c004:	str	r0, [sp, #172]	; 0xac
   1c008:	str	r1, [sp, #168]	; 0xa8
   1c00c:	blt	1c264 <__assert_fail@plt+0xb268>
   1c010:	b	1c290 <__assert_fail@plt+0xb294>
   1c014:	b	1c018 <__assert_fail@plt+0xb01c>
   1c018:	ldr	r0, [pc, #1552]	; 1c630 <__assert_fail@plt+0xb634>
   1c01c:	ldr	r1, [fp, #-12]
   1c020:	cmp	r1, r0
   1c024:	blt	1c03c <__assert_fail@plt+0xb040>
   1c028:	b	1c050 <__assert_fail@plt+0xb054>
   1c02c:	ldr	r0, [fp, #-12]
   1c030:	movw	r1, #0
   1c034:	cmp	r1, r0
   1c038:	bge	1c050 <__assert_fail@plt+0xb054>
   1c03c:	mov	r0, #0
   1c040:	mvn	r1, #0
   1c044:	str	r1, [sp, #164]	; 0xa4
   1c048:	str	r0, [sp, #160]	; 0xa0
   1c04c:	b	1c084 <__assert_fail@plt+0xb088>
   1c050:	ldr	r0, [fp, #-12]
   1c054:	rsb	r0, r0, #0
   1c058:	asr	r3, r0, #31
   1c05c:	mvn	r1, #0
   1c060:	mvn	r2, #-2147483648	; 0x80000000
   1c064:	str	r0, [sp, #156]	; 0x9c
   1c068:	mov	r0, r1
   1c06c:	mov	r1, r2
   1c070:	ldr	r2, [sp, #156]	; 0x9c
   1c074:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1c078:	str	r0, [sp, #164]	; 0xa4
   1c07c:	str	r1, [sp, #160]	; 0xa0
   1c080:	b	1c084 <__assert_fail@plt+0xb088>
   1c084:	ldr	r0, [sp, #160]	; 0xa0
   1c088:	ldr	r1, [sp, #164]	; 0xa4
   1c08c:	ldr	r2, [fp, #-8]
   1c090:	ldr	r3, [r2]
   1c094:	ldr	r2, [r2, #4]
   1c098:	mvn	r2, r2
   1c09c:	mvn	r3, r3
   1c0a0:	subs	r1, r3, r1
   1c0a4:	sbcs	r0, r2, r0
   1c0a8:	str	r1, [sp, #152]	; 0x98
   1c0ac:	str	r0, [sp, #148]	; 0x94
   1c0b0:	bge	1c264 <__assert_fail@plt+0xb268>
   1c0b4:	b	1c290 <__assert_fail@plt+0xb294>
   1c0b8:	ldr	r0, [fp, #-12]
   1c0bc:	cmn	r0, #1
   1c0c0:	bne	1c128 <__assert_fail@plt+0xb12c>
   1c0c4:	b	1c0c8 <__assert_fail@plt+0xb0cc>
   1c0c8:	ldr	r0, [fp, #-8]
   1c0cc:	ldr	r1, [r0]
   1c0d0:	ldr	r0, [r0, #4]
   1c0d4:	add	r0, r0, #-2147483648	; 0x80000000
   1c0d8:	rsbs	r1, r1, #0
   1c0dc:	rscs	r0, r0, #0
   1c0e0:	str	r1, [sp, #144]	; 0x90
   1c0e4:	str	r0, [sp, #140]	; 0x8c
   1c0e8:	blt	1c264 <__assert_fail@plt+0xb268>
   1c0ec:	b	1c290 <__assert_fail@plt+0xb294>
   1c0f0:	ldr	r0, [fp, #-8]
   1c0f4:	ldr	r1, [r0]
   1c0f8:	ldr	r0, [r0, #4]
   1c0fc:	subs	r1, r1, #1
   1c100:	sbcs	r0, r0, #0
   1c104:	str	r1, [sp, #136]	; 0x88
   1c108:	str	r0, [sp, #132]	; 0x84
   1c10c:	blt	1c290 <__assert_fail@plt+0xb294>
   1c110:	b	1c114 <__assert_fail@plt+0xb118>
   1c114:	mov	r0, #0
   1c118:	cmp	r0, #0
   1c11c:	bne	1c264 <__assert_fail@plt+0xb268>
   1c120:	b	1c290 <__assert_fail@plt+0xb294>
   1c124:			; <UNDEFINED> instruction: 0xffff8000
   1c128:	ldr	r0, [fp, #-12]
   1c12c:	asr	r3, r0, #31
   1c130:	mov	r1, #0
   1c134:	mov	r2, #-2147483648	; 0x80000000
   1c138:	str	r0, [sp, #128]	; 0x80
   1c13c:	mov	r0, r1
   1c140:	mov	r1, r2
   1c144:	ldr	r2, [sp, #128]	; 0x80
   1c148:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1c14c:	ldr	r2, [fp, #-8]
   1c150:	ldr	r3, [r2]
   1c154:	ldr	r2, [r2, #4]
   1c158:	subs	r0, r0, r3
   1c15c:	sbcs	r1, r1, r2
   1c160:	str	r0, [sp, #124]	; 0x7c
   1c164:	str	r1, [sp, #120]	; 0x78
   1c168:	blt	1c264 <__assert_fail@plt+0xb268>
   1c16c:	b	1c290 <__assert_fail@plt+0xb294>
   1c170:	ldr	r0, [fp, #-12]
   1c174:	cmp	r0, #0
   1c178:	bne	1c180 <__assert_fail@plt+0xb184>
   1c17c:	b	1c290 <__assert_fail@plt+0xb294>
   1c180:	ldr	r0, [fp, #-8]
   1c184:	ldr	r0, [r0, #4]
   1c188:	cmn	r0, #1
   1c18c:	bgt	1c21c <__assert_fail@plt+0xb220>
   1c190:	b	1c194 <__assert_fail@plt+0xb198>
   1c194:	ldr	r0, [fp, #-8]
   1c198:	ldr	r1, [r0]
   1c19c:	ldr	r0, [r0, #4]
   1c1a0:	and	r0, r1, r0
   1c1a4:	cmn	r0, #1
   1c1a8:	bne	1c1e8 <__assert_fail@plt+0xb1ec>
   1c1ac:	b	1c1b0 <__assert_fail@plt+0xb1b4>
   1c1b0:	b	1c1b4 <__assert_fail@plt+0xb1b8>
   1c1b4:	ldr	r0, [fp, #-12]
   1c1b8:	mov	r1, #-2147483648	; 0x80000000
   1c1bc:	add	r1, r1, r0, asr #31
   1c1c0:	rsbs	r0, r0, #0
   1c1c4:	rscs	r1, r1, #0
   1c1c8:	str	r0, [sp, #116]	; 0x74
   1c1cc:	str	r1, [sp, #112]	; 0x70
   1c1d0:	blt	1c264 <__assert_fail@plt+0xb268>
   1c1d4:	b	1c290 <__assert_fail@plt+0xb294>
   1c1d8:	mov	r0, #0
   1c1dc:	cmp	r0, #0
   1c1e0:	bne	1c264 <__assert_fail@plt+0xb268>
   1c1e4:	b	1c290 <__assert_fail@plt+0xb294>
   1c1e8:	ldr	r0, [fp, #-8]
   1c1ec:	ldr	r2, [r0]
   1c1f0:	ldr	r3, [r0, #4]
   1c1f4:	mov	r0, #0
   1c1f8:	mov	r1, #-2147483648	; 0x80000000
   1c1fc:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1c200:	ldr	r2, [fp, #-12]
   1c204:	subs	r0, r0, r2
   1c208:	sbcs	r1, r1, r2, asr #31
   1c20c:	str	r0, [sp, #108]	; 0x6c
   1c210:	str	r1, [sp, #104]	; 0x68
   1c214:	blt	1c264 <__assert_fail@plt+0xb268>
   1c218:	b	1c290 <__assert_fail@plt+0xb294>
   1c21c:	ldr	r0, [fp, #-12]
   1c220:	asr	r3, r0, #31
   1c224:	mvn	r1, #0
   1c228:	mvn	r2, #-2147483648	; 0x80000000
   1c22c:	str	r0, [sp, #100]	; 0x64
   1c230:	mov	r0, r1
   1c234:	mov	r1, r2
   1c238:	ldr	r2, [sp, #100]	; 0x64
   1c23c:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1c240:	ldr	r2, [fp, #-8]
   1c244:	ldr	r3, [r2]
   1c248:	ldr	r2, [r2, #4]
   1c24c:	subs	r0, r0, r3
   1c250:	sbcs	r1, r1, r2
   1c254:	str	r0, [sp, #96]	; 0x60
   1c258:	str	r1, [sp, #92]	; 0x5c
   1c25c:	bge	1c290 <__assert_fail@plt+0xb294>
   1c260:	b	1c264 <__assert_fail@plt+0xb268>
   1c264:	ldr	r0, [fp, #-8]
   1c268:	ldr	r1, [r0]
   1c26c:	ldr	r0, [r0, #4]
   1c270:	ldr	r2, [fp, #-12]
   1c274:	asr	r3, r2, #31
   1c278:	umull	ip, lr, r1, r2
   1c27c:	mla	r1, r1, r3, lr
   1c280:	mla	r0, r0, r2, r1
   1c284:	str	ip, [fp, #-24]	; 0xffffffe8
   1c288:	str	r0, [fp, #-20]	; 0xffffffec
   1c28c:	b	1c5d4 <__assert_fail@plt+0xb5d8>
   1c290:	ldr	r0, [fp, #-8]
   1c294:	ldr	r1, [r0]
   1c298:	ldr	r0, [r0, #4]
   1c29c:	ldr	r2, [fp, #-12]
   1c2a0:	asr	r3, r2, #31
   1c2a4:	umull	ip, lr, r1, r2
   1c2a8:	mla	r1, r1, r3, lr
   1c2ac:	mla	r0, r0, r2, r1
   1c2b0:	str	ip, [fp, #-24]	; 0xffffffe8
   1c2b4:	str	r0, [fp, #-20]	; 0xffffffec
   1c2b8:	b	1c608 <__assert_fail@plt+0xb60c>
   1c2bc:	ldr	r0, [fp, #-12]
   1c2c0:	cmp	r0, #0
   1c2c4:	bge	1c480 <__assert_fail@plt+0xb484>
   1c2c8:	ldr	r0, [fp, #-8]
   1c2cc:	ldr	r0, [r0, #4]
   1c2d0:	cmn	r0, #1
   1c2d4:	bgt	1c3c8 <__assert_fail@plt+0xb3cc>
   1c2d8:	b	1c2dc <__assert_fail@plt+0xb2e0>
   1c2dc:	b	1c32c <__assert_fail@plt+0xb330>
   1c2e0:	ldr	r0, [fp, #-8]
   1c2e4:	ldr	r1, [r0]
   1c2e8:	ldr	r0, [r0, #4]
   1c2ec:	ldr	r2, [fp, #-12]
   1c2f0:	asr	r3, r2, #31
   1c2f4:	mvn	ip, #0
   1c2f8:	str	r0, [sp, #88]	; 0x58
   1c2fc:	mov	r0, ip
   1c300:	str	r1, [sp, #84]	; 0x54
   1c304:	mov	r1, ip
   1c308:	bl	1ec34 <__assert_fail@plt+0xdc38>
   1c30c:	ldr	r2, [sp, #84]	; 0x54
   1c310:	subs	r0, r2, r0
   1c314:	ldr	r2, [sp, #88]	; 0x58
   1c318:	sbcs	r1, r2, r1
   1c31c:	str	r0, [sp, #80]	; 0x50
   1c320:	str	r1, [sp, #76]	; 0x4c
   1c324:	bcc	1c57c <__assert_fail@plt+0xb580>
   1c328:	b	1c5a8 <__assert_fail@plt+0xb5ac>
   1c32c:	b	1c330 <__assert_fail@plt+0xb334>
   1c330:	ldr	r0, [pc, #760]	; 1c630 <__assert_fail@plt+0xb634>
   1c334:	ldr	r1, [fp, #-12]
   1c338:	cmp	r1, r0
   1c33c:	blt	1c354 <__assert_fail@plt+0xb358>
   1c340:	b	1c368 <__assert_fail@plt+0xb36c>
   1c344:	ldr	r0, [fp, #-12]
   1c348:	movw	r1, #0
   1c34c:	cmp	r1, r0
   1c350:	bge	1c368 <__assert_fail@plt+0xb36c>
   1c354:	mov	r0, #1
   1c358:	mvn	r1, #0
   1c35c:	str	r1, [sp, #72]	; 0x48
   1c360:	str	r0, [sp, #68]	; 0x44
   1c364:	b	1c394 <__assert_fail@plt+0xb398>
   1c368:	ldr	r0, [fp, #-12]
   1c36c:	rsb	r0, r0, #0
   1c370:	asr	r3, r0, #31
   1c374:	mvn	r1, #0
   1c378:	str	r0, [sp, #64]	; 0x40
   1c37c:	mov	r0, r1
   1c380:	ldr	r2, [sp, #64]	; 0x40
   1c384:	bl	1ec34 <__assert_fail@plt+0xdc38>
   1c388:	str	r0, [sp, #72]	; 0x48
   1c38c:	str	r1, [sp, #68]	; 0x44
   1c390:	b	1c394 <__assert_fail@plt+0xb398>
   1c394:	ldr	r0, [sp, #68]	; 0x44
   1c398:	ldr	r1, [sp, #72]	; 0x48
   1c39c:	ldr	r2, [fp, #-8]
   1c3a0:	ldr	r3, [r2]
   1c3a4:	ldr	r2, [r2, #4]
   1c3a8:	mvn	r2, r2
   1c3ac:	mvn	r3, r3
   1c3b0:	subs	r1, r3, r1
   1c3b4:	sbcs	r0, r2, r0
   1c3b8:	str	r1, [sp, #60]	; 0x3c
   1c3bc:	str	r0, [sp, #56]	; 0x38
   1c3c0:	bcs	1c57c <__assert_fail@plt+0xb580>
   1c3c4:	b	1c5a8 <__assert_fail@plt+0xb5ac>
   1c3c8:	b	1c3cc <__assert_fail@plt+0xb3d0>
   1c3cc:	b	1c450 <__assert_fail@plt+0xb454>
   1c3d0:	b	1c450 <__assert_fail@plt+0xb454>
   1c3d4:	ldr	r0, [fp, #-12]
   1c3d8:	cmn	r0, #1
   1c3dc:	bne	1c450 <__assert_fail@plt+0xb454>
   1c3e0:	b	1c3e4 <__assert_fail@plt+0xb3e8>
   1c3e4:	ldr	r0, [fp, #-8]
   1c3e8:	ldr	r1, [r0]
   1c3ec:	ldr	r0, [r0, #4]
   1c3f0:	rsbs	r1, r1, #0
   1c3f4:	rscs	r0, r0, #0
   1c3f8:	str	r1, [sp, #52]	; 0x34
   1c3fc:	str	r0, [sp, #48]	; 0x30
   1c400:	blt	1c57c <__assert_fail@plt+0xb580>
   1c404:	b	1c5a8 <__assert_fail@plt+0xb5ac>
   1c408:	ldr	r0, [fp, #-8]
   1c40c:	ldr	r1, [r0]
   1c410:	ldr	r0, [r0, #4]
   1c414:	subs	r1, r1, #1
   1c418:	sbcs	r0, r0, #0
   1c41c:	str	r1, [sp, #44]	; 0x2c
   1c420:	str	r0, [sp, #40]	; 0x28
   1c424:	blt	1c5a8 <__assert_fail@plt+0xb5ac>
   1c428:	b	1c42c <__assert_fail@plt+0xb430>
   1c42c:	ldr	r0, [fp, #-8]
   1c430:	ldr	r1, [r0]
   1c434:	ldr	r0, [r0, #4]
   1c438:	subs	r1, r1, #1
   1c43c:	sbc	r0, r0, #0
   1c440:	cmn	r0, #1
   1c444:	str	r1, [sp, #36]	; 0x24
   1c448:	bgt	1c57c <__assert_fail@plt+0xb580>
   1c44c:	b	1c5a8 <__assert_fail@plt+0xb5ac>
   1c450:	ldr	r0, [fp, #-12]
   1c454:	mov	r1, #0
   1c458:	sdiv	r0, r1, r0
   1c45c:	ldr	r1, [fp, #-8]
   1c460:	ldr	r2, [r1]
   1c464:	ldr	r1, [r1, #4]
   1c468:	subs	r2, r0, r2
   1c46c:	rscs	r0, r1, r0, asr #31
   1c470:	str	r2, [sp, #32]
   1c474:	str	r0, [sp, #28]
   1c478:	blt	1c57c <__assert_fail@plt+0xb580>
   1c47c:	b	1c5a8 <__assert_fail@plt+0xb5ac>
   1c480:	ldr	r0, [fp, #-12]
   1c484:	cmp	r0, #0
   1c488:	bne	1c490 <__assert_fail@plt+0xb494>
   1c48c:	b	1c5a8 <__assert_fail@plt+0xb5ac>
   1c490:	ldr	r0, [fp, #-8]
   1c494:	ldr	r0, [r0, #4]
   1c498:	cmn	r0, #1
   1c49c:	bgt	1c53c <__assert_fail@plt+0xb540>
   1c4a0:	b	1c4a4 <__assert_fail@plt+0xb4a8>
   1c4a4:	b	1c4a8 <__assert_fail@plt+0xb4ac>
   1c4a8:	b	1c500 <__assert_fail@plt+0xb504>
   1c4ac:	b	1c500 <__assert_fail@plt+0xb504>
   1c4b0:	ldr	r0, [fp, #-8]
   1c4b4:	ldr	r1, [r0]
   1c4b8:	ldr	r0, [r0, #4]
   1c4bc:	and	r0, r1, r0
   1c4c0:	cmn	r0, #1
   1c4c4:	bne	1c500 <__assert_fail@plt+0xb504>
   1c4c8:	b	1c4cc <__assert_fail@plt+0xb4d0>
   1c4cc:	b	1c4d0 <__assert_fail@plt+0xb4d4>
   1c4d0:	ldr	r0, [fp, #-12]
   1c4d4:	add	r0, r0, #0
   1c4d8:	movw	r1, #0
   1c4dc:	cmp	r1, r0
   1c4e0:	blt	1c57c <__assert_fail@plt+0xb580>
   1c4e4:	b	1c5a8 <__assert_fail@plt+0xb5ac>
   1c4e8:	ldr	r0, [fp, #-12]
   1c4ec:	sub	r0, r0, #1
   1c4f0:	mvn	r1, #0
   1c4f4:	cmp	r1, r0
   1c4f8:	blt	1c57c <__assert_fail@plt+0xb580>
   1c4fc:	b	1c5a8 <__assert_fail@plt+0xb5ac>
   1c500:	ldr	r0, [fp, #-8]
   1c504:	ldr	r2, [r0]
   1c508:	ldr	r3, [r0, #4]
   1c50c:	mov	r0, #0
   1c510:	str	r0, [sp, #24]
   1c514:	ldr	r1, [sp, #24]
   1c518:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1c51c:	ldr	r2, [fp, #-12]
   1c520:	subs	r0, r0, r2
   1c524:	sbcs	r1, r1, r2, asr #31
   1c528:	str	r0, [sp, #20]
   1c52c:	str	r1, [sp, #16]
   1c530:	blt	1c57c <__assert_fail@plt+0xb580>
   1c534:	b	1c5a8 <__assert_fail@plt+0xb5ac>
   1c538:	svcvc	0x00ffffff
   1c53c:	ldr	r0, [fp, #-12]
   1c540:	asr	r3, r0, #31
   1c544:	mvn	r1, #0
   1c548:	str	r0, [sp, #12]
   1c54c:	mov	r0, r1
   1c550:	ldr	r2, [sp, #12]
   1c554:	bl	1ec34 <__assert_fail@plt+0xdc38>
   1c558:	ldr	r2, [fp, #-8]
   1c55c:	ldr	r3, [r2]
   1c560:	ldr	r2, [r2, #4]
   1c564:	subs	r0, r0, r3
   1c568:	sbcs	r1, r1, r2
   1c56c:	str	r0, [sp, #8]
   1c570:	str	r1, [sp, #4]
   1c574:	bcs	1c5a8 <__assert_fail@plt+0xb5ac>
   1c578:	b	1c57c <__assert_fail@plt+0xb580>
   1c57c:	ldr	r0, [fp, #-8]
   1c580:	ldr	r1, [r0]
   1c584:	ldr	r0, [r0, #4]
   1c588:	ldr	r2, [fp, #-12]
   1c58c:	asr	r3, r2, #31
   1c590:	umull	ip, lr, r1, r2
   1c594:	mla	r1, r1, r3, lr
   1c598:	mla	r0, r0, r2, r1
   1c59c:	str	ip, [fp, #-24]	; 0xffffffe8
   1c5a0:	str	r0, [fp, #-20]	; 0xffffffec
   1c5a4:	b	1c5d4 <__assert_fail@plt+0xb5d8>
   1c5a8:	ldr	r0, [fp, #-8]
   1c5ac:	ldr	r1, [r0]
   1c5b0:	ldr	r0, [r0, #4]
   1c5b4:	ldr	r2, [fp, #-12]
   1c5b8:	asr	r3, r2, #31
   1c5bc:	umull	ip, lr, r1, r2
   1c5c0:	mla	r1, r1, r3, lr
   1c5c4:	mla	r0, r0, r2, r1
   1c5c8:	str	ip, [fp, #-24]	; 0xffffffe8
   1c5cc:	str	r0, [fp, #-20]	; 0xffffffec
   1c5d0:	b	1c608 <__assert_fail@plt+0xb60c>
   1c5d4:	ldr	r0, [fp, #-8]
   1c5d8:	ldr	r1, [r0, #4]
   1c5dc:	mvn	r2, #0
   1c5e0:	cmp	r1, #0
   1c5e4:	movwlt	r2, #0
   1c5e8:	mvn	r3, #-2147483648	; 0x80000000
   1c5ec:	cmp	r1, #0
   1c5f0:	movlt	r3, #-2147483648	; 0x80000000
   1c5f4:	str	r3, [r0, #4]
   1c5f8:	str	r2, [r0]
   1c5fc:	movw	r0, #1
   1c600:	str	r0, [fp, #-4]
   1c604:	b	1c624 <__assert_fail@plt+0xb628>
   1c608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c60c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c610:	ldr	r2, [fp, #-8]
   1c614:	str	r1, [r2, #4]
   1c618:	str	r0, [r2]
   1c61c:	movw	r0, #0
   1c620:	str	r0, [fp, #-4]
   1c624:	ldr	r0, [fp, #-4]
   1c628:	mov	sp, fp
   1c62c:	pop	{fp, pc}
   1c630:	andhi	r0, r0, r1
   1c634:	svcvc	0x00ffffff
   1c638:	push	{fp, lr}
   1c63c:	mov	fp, sp
   1c640:	sub	sp, sp, #16
   1c644:	str	r0, [fp, #-4]
   1c648:	str	r1, [sp, #8]
   1c64c:	str	r2, [sp, #4]
   1c650:	movw	r0, #0
   1c654:	str	r0, [sp]
   1c658:	ldr	r0, [sp, #4]
   1c65c:	mvn	r1, #0
   1c660:	add	r1, r0, r1
   1c664:	str	r1, [sp, #4]
   1c668:	cmp	r0, #0
   1c66c:	beq	1c68c <__assert_fail@plt+0xb690>
   1c670:	ldr	r0, [fp, #-4]
   1c674:	ldr	r1, [sp, #8]
   1c678:	bl	1a990 <__assert_fail@plt+0x9994>
   1c67c:	ldr	r1, [sp]
   1c680:	orr	r0, r1, r0
   1c684:	str	r0, [sp]
   1c688:	b	1c658 <__assert_fail@plt+0xb65c>
   1c68c:	ldr	r0, [sp]
   1c690:	mov	sp, fp
   1c694:	pop	{fp, pc}
   1c698:	push	{fp, lr}
   1c69c:	mov	fp, sp
   1c6a0:	sub	sp, sp, #16
   1c6a4:	str	r0, [sp, #8]
   1c6a8:	str	r1, [sp, #4]
   1c6ac:	ldr	r0, [sp, #8]
   1c6b0:	cmp	r0, #0
   1c6b4:	beq	1c6c4 <__assert_fail@plt+0xb6c8>
   1c6b8:	ldr	r0, [sp, #4]
   1c6bc:	cmp	r0, #0
   1c6c0:	bne	1c6d0 <__assert_fail@plt+0xb6d4>
   1c6c4:	movw	r0, #1
   1c6c8:	str	r0, [sp, #4]
   1c6cc:	str	r0, [sp, #8]
   1c6d0:	ldr	r0, [sp, #4]
   1c6d4:	cmp	r0, #0
   1c6d8:	beq	1c70c <__assert_fail@plt+0xb710>
   1c6dc:	ldr	r0, [pc, #76]	; 1c730 <__assert_fail@plt+0xb734>
   1c6e0:	ldr	r1, [sp, #4]
   1c6e4:	udiv	r0, r0, r1
   1c6e8:	ldr	r1, [sp, #8]
   1c6ec:	cmp	r0, r1
   1c6f0:	bcs	1c70c <__assert_fail@plt+0xb710>
   1c6f4:	bl	10f3c <__errno_location@plt>
   1c6f8:	movw	lr, #12
   1c6fc:	str	lr, [r0]
   1c700:	movw	r0, #0
   1c704:	str	r0, [fp, #-4]
   1c708:	b	1c724 <__assert_fail@plt+0xb728>
   1c70c:	ldr	r0, [sp, #8]
   1c710:	ldr	r1, [sp, #4]
   1c714:	bl	10da4 <calloc@plt>
   1c718:	str	r0, [sp]
   1c71c:	ldr	r0, [sp]
   1c720:	str	r0, [fp, #-4]
   1c724:	ldr	r0, [fp, #-4]
   1c728:	mov	sp, fp
   1c72c:	pop	{fp, pc}
   1c730:	svcvc	0x00ffffff
   1c734:	push	{fp, lr}
   1c738:	mov	fp, sp
   1c73c:	sub	sp, sp, #16
   1c740:	str	r0, [sp, #8]
   1c744:	ldr	r0, [sp, #8]
   1c748:	cmp	r0, #0
   1c74c:	bne	1c758 <__assert_fail@plt+0xb75c>
   1c750:	movw	r0, #1
   1c754:	str	r0, [sp, #8]
   1c758:	ldr	r0, [pc, #64]	; 1c7a0 <__assert_fail@plt+0xb7a4>
   1c75c:	ldr	r1, [sp, #8]
   1c760:	cmp	r0, r1
   1c764:	bcs	1c780 <__assert_fail@plt+0xb784>
   1c768:	bl	10f3c <__errno_location@plt>
   1c76c:	movw	lr, #12
   1c770:	str	lr, [r0]
   1c774:	movw	r0, #0
   1c778:	str	r0, [fp, #-4]
   1c77c:	b	1c794 <__assert_fail@plt+0xb798>
   1c780:	ldr	r0, [sp, #8]
   1c784:	bl	10eb8 <malloc@plt>
   1c788:	str	r0, [sp, #4]
   1c78c:	ldr	r0, [sp, #4]
   1c790:	str	r0, [fp, #-4]
   1c794:	ldr	r0, [fp, #-4]
   1c798:	mov	sp, fp
   1c79c:	pop	{fp, pc}
   1c7a0:	svcvc	0x00ffffff
   1c7a4:	push	{fp, lr}
   1c7a8:	mov	fp, sp
   1c7ac:	sub	sp, sp, #16
   1c7b0:	str	r0, [sp, #8]
   1c7b4:	str	r1, [sp, #4]
   1c7b8:	ldr	r0, [sp, #8]
   1c7bc:	movw	r1, #0
   1c7c0:	cmp	r0, r1
   1c7c4:	bne	1c7d8 <__assert_fail@plt+0xb7dc>
   1c7c8:	ldr	r0, [sp, #4]
   1c7cc:	bl	1c734 <__assert_fail@plt+0xb738>
   1c7d0:	str	r0, [fp, #-4]
   1c7d4:	b	1c838 <__assert_fail@plt+0xb83c>
   1c7d8:	ldr	r0, [sp, #4]
   1c7dc:	cmp	r0, #0
   1c7e0:	bne	1c7f8 <__assert_fail@plt+0xb7fc>
   1c7e4:	ldr	r0, [sp, #8]
   1c7e8:	bl	1cb6c <__assert_fail@plt+0xbb70>
   1c7ec:	movw	r0, #0
   1c7f0:	str	r0, [fp, #-4]
   1c7f4:	b	1c838 <__assert_fail@plt+0xb83c>
   1c7f8:	ldr	r0, [pc, #68]	; 1c844 <__assert_fail@plt+0xb848>
   1c7fc:	ldr	r1, [sp, #4]
   1c800:	cmp	r0, r1
   1c804:	bcs	1c820 <__assert_fail@plt+0xb824>
   1c808:	bl	10f3c <__errno_location@plt>
   1c80c:	movw	lr, #12
   1c810:	str	lr, [r0]
   1c814:	movw	r0, #0
   1c818:	str	r0, [fp, #-4]
   1c81c:	b	1c838 <__assert_fail@plt+0xb83c>
   1c820:	ldr	r0, [sp, #8]
   1c824:	ldr	r1, [sp, #4]
   1c828:	bl	10e34 <realloc@plt>
   1c82c:	str	r0, [sp]
   1c830:	ldr	r0, [sp]
   1c834:	str	r0, [fp, #-4]
   1c838:	ldr	r0, [fp, #-4]
   1c83c:	mov	sp, fp
   1c840:	pop	{fp, pc}
   1c844:	svcvc	0x00ffffff
   1c848:	push	{fp, lr}
   1c84c:	mov	fp, sp
   1c850:	sub	sp, sp, #24
   1c854:	str	r0, [fp, #-8]
   1c858:	str	r1, [sp, #12]
   1c85c:	ldr	r0, [fp, #-8]
   1c860:	str	r0, [sp, #8]
   1c864:	ldr	r0, [sp, #12]
   1c868:	str	r0, [sp, #4]
   1c86c:	ldr	r0, [sp, #8]
   1c870:	ldr	r1, [sp, #4]
   1c874:	cmp	r0, r1
   1c878:	bne	1c888 <__assert_fail@plt+0xb88c>
   1c87c:	movw	r0, #0
   1c880:	str	r0, [fp, #-4]
   1c884:	b	1c8f4 <__assert_fail@plt+0xb8f8>
   1c888:	b	1c88c <__assert_fail@plt+0xb890>
   1c88c:	ldr	r0, [sp, #8]
   1c890:	ldrb	r0, [r0]
   1c894:	bl	1e8e0 <__assert_fail@plt+0xd8e4>
   1c898:	strb	r0, [sp, #3]
   1c89c:	ldr	r0, [sp, #4]
   1c8a0:	ldrb	r0, [r0]
   1c8a4:	bl	1e8e0 <__assert_fail@plt+0xd8e4>
   1c8a8:	strb	r0, [sp, #2]
   1c8ac:	ldrb	r0, [sp, #3]
   1c8b0:	cmp	r0, #0
   1c8b4:	bne	1c8bc <__assert_fail@plt+0xb8c0>
   1c8b8:	b	1c8e4 <__assert_fail@plt+0xb8e8>
   1c8bc:	ldr	r0, [sp, #8]
   1c8c0:	add	r0, r0, #1
   1c8c4:	str	r0, [sp, #8]
   1c8c8:	ldr	r0, [sp, #4]
   1c8cc:	add	r0, r0, #1
   1c8d0:	str	r0, [sp, #4]
   1c8d4:	ldrb	r0, [sp, #3]
   1c8d8:	ldrb	r1, [sp, #2]
   1c8dc:	cmp	r0, r1
   1c8e0:	beq	1c88c <__assert_fail@plt+0xb890>
   1c8e4:	ldrb	r0, [sp, #3]
   1c8e8:	ldrb	r1, [sp, #2]
   1c8ec:	sub	r0, r0, r1
   1c8f0:	str	r0, [fp, #-4]
   1c8f4:	ldr	r0, [fp, #-4]
   1c8f8:	mov	sp, fp
   1c8fc:	pop	{fp, pc}
   1c900:	push	{fp, lr}
   1c904:	mov	fp, sp
   1c908:	sub	sp, sp, #16
   1c90c:	str	r0, [sp, #8]
   1c910:	ldr	r0, [sp, #8]
   1c914:	bl	10e7c <__fpending@plt>
   1c918:	cmp	r0, #0
   1c91c:	movw	r0, #0
   1c920:	movne	r0, #1
   1c924:	and	r0, r0, #1
   1c928:	strb	r0, [sp, #7]
   1c92c:	ldr	r0, [sp, #8]
   1c930:	bl	10e88 <ferror_unlocked@plt>
   1c934:	cmp	r0, #0
   1c938:	movw	r0, #0
   1c93c:	movne	r0, #1
   1c940:	and	r0, r0, #1
   1c944:	strb	r0, [sp, #6]
   1c948:	ldr	r0, [sp, #8]
   1c94c:	bl	1c9d0 <__assert_fail@plt+0xb9d4>
   1c950:	cmp	r0, #0
   1c954:	movw	r0, #0
   1c958:	movne	r0, #1
   1c95c:	and	r0, r0, #1
   1c960:	strb	r0, [sp, #5]
   1c964:	ldrb	r0, [sp, #6]
   1c968:	tst	r0, #1
   1c96c:	bne	1c998 <__assert_fail@plt+0xb99c>
   1c970:	ldrb	r0, [sp, #5]
   1c974:	tst	r0, #1
   1c978:	beq	1c9bc <__assert_fail@plt+0xb9c0>
   1c97c:	ldrb	r0, [sp, #7]
   1c980:	tst	r0, #1
   1c984:	bne	1c998 <__assert_fail@plt+0xb99c>
   1c988:	bl	10f3c <__errno_location@plt>
   1c98c:	ldr	r0, [r0]
   1c990:	cmp	r0, #9
   1c994:	beq	1c9bc <__assert_fail@plt+0xb9c0>
   1c998:	ldrb	r0, [sp, #5]
   1c99c:	tst	r0, #1
   1c9a0:	bne	1c9b0 <__assert_fail@plt+0xb9b4>
   1c9a4:	bl	10f3c <__errno_location@plt>
   1c9a8:	movw	lr, #0
   1c9ac:	str	lr, [r0]
   1c9b0:	mvn	r0, #0
   1c9b4:	str	r0, [fp, #-4]
   1c9b8:	b	1c9c4 <__assert_fail@plt+0xb9c8>
   1c9bc:	movw	r0, #0
   1c9c0:	str	r0, [fp, #-4]
   1c9c4:	ldr	r0, [fp, #-4]
   1c9c8:	mov	sp, fp
   1c9cc:	pop	{fp, pc}
   1c9d0:	push	{fp, lr}
   1c9d4:	mov	fp, sp
   1c9d8:	sub	sp, sp, #32
   1c9dc:	str	r0, [fp, #-8]
   1c9e0:	movw	r0, #0
   1c9e4:	str	r0, [fp, #-12]
   1c9e8:	str	r0, [sp, #12]
   1c9ec:	ldr	r0, [fp, #-8]
   1c9f0:	bl	10f60 <fileno@plt>
   1c9f4:	str	r0, [sp, #16]
   1c9f8:	ldr	r0, [sp, #16]
   1c9fc:	cmp	r0, #0
   1ca00:	bge	1ca14 <__assert_fail@plt+0xba18>
   1ca04:	ldr	r0, [fp, #-8]
   1ca08:	bl	10f78 <fclose@plt>
   1ca0c:	str	r0, [fp, #-4]
   1ca10:	b	1cab0 <__assert_fail@plt+0xbab4>
   1ca14:	ldr	r0, [fp, #-8]
   1ca18:	bl	10ed0 <__freading@plt>
   1ca1c:	cmp	r0, #0
   1ca20:	beq	1ca58 <__assert_fail@plt+0xba5c>
   1ca24:	ldr	r0, [fp, #-8]
   1ca28:	bl	10f60 <fileno@plt>
   1ca2c:	mov	lr, sp
   1ca30:	mov	r1, #1
   1ca34:	str	r1, [lr]
   1ca38:	mov	r1, #0
   1ca3c:	mov	r2, r1
   1ca40:	mov	r3, r1
   1ca44:	bl	10e64 <lseek64@plt>
   1ca48:	and	r0, r0, r1
   1ca4c:	cmn	r0, #1
   1ca50:	beq	1ca74 <__assert_fail@plt+0xba78>
   1ca54:	b	1ca58 <__assert_fail@plt+0xba5c>
   1ca58:	ldr	r0, [fp, #-8]
   1ca5c:	bl	1cabc <__assert_fail@plt+0xbac0>
   1ca60:	cmp	r0, #0
   1ca64:	beq	1ca74 <__assert_fail@plt+0xba78>
   1ca68:	bl	10f3c <__errno_location@plt>
   1ca6c:	ldr	r0, [r0]
   1ca70:	str	r0, [fp, #-12]
   1ca74:	ldr	r0, [fp, #-8]
   1ca78:	bl	10f78 <fclose@plt>
   1ca7c:	str	r0, [sp, #12]
   1ca80:	ldr	r0, [fp, #-12]
   1ca84:	cmp	r0, #0
   1ca88:	beq	1caa8 <__assert_fail@plt+0xbaac>
   1ca8c:	ldr	r0, [fp, #-12]
   1ca90:	str	r0, [sp, #8]
   1ca94:	bl	10f3c <__errno_location@plt>
   1ca98:	ldr	lr, [sp, #8]
   1ca9c:	str	lr, [r0]
   1caa0:	mvn	r0, #0
   1caa4:	str	r0, [sp, #12]
   1caa8:	ldr	r0, [sp, #12]
   1caac:	str	r0, [fp, #-4]
   1cab0:	ldr	r0, [fp, #-4]
   1cab4:	mov	sp, fp
   1cab8:	pop	{fp, pc}
   1cabc:	push	{fp, lr}
   1cac0:	mov	fp, sp
   1cac4:	sub	sp, sp, #8
   1cac8:	str	r0, [sp]
   1cacc:	ldr	r0, [sp]
   1cad0:	movw	r1, #0
   1cad4:	cmp	r0, r1
   1cad8:	beq	1caec <__assert_fail@plt+0xbaf0>
   1cadc:	ldr	r0, [sp]
   1cae0:	bl	10ed0 <__freading@plt>
   1cae4:	cmp	r0, #0
   1cae8:	bne	1cafc <__assert_fail@plt+0xbb00>
   1caec:	ldr	r0, [sp]
   1caf0:	bl	10de0 <fflush@plt>
   1caf4:	str	r0, [sp, #4]
   1caf8:	b	1cb10 <__assert_fail@plt+0xbb14>
   1cafc:	ldr	r0, [sp]
   1cb00:	bl	1cb1c <__assert_fail@plt+0xbb20>
   1cb04:	ldr	r0, [sp]
   1cb08:	bl	10de0 <fflush@plt>
   1cb0c:	str	r0, [sp, #4]
   1cb10:	ldr	r0, [sp, #4]
   1cb14:	mov	sp, fp
   1cb18:	pop	{fp, pc}
   1cb1c:	push	{fp, lr}
   1cb20:	mov	fp, sp
   1cb24:	sub	sp, sp, #16
   1cb28:	str	r0, [fp, #-4]
   1cb2c:	ldr	r0, [fp, #-4]
   1cb30:	ldr	r0, [r0]
   1cb34:	and	r0, r0, #256	; 0x100
   1cb38:	cmp	r0, #0
   1cb3c:	beq	1cb64 <__assert_fail@plt+0xbb68>
   1cb40:	ldr	r0, [fp, #-4]
   1cb44:	mov	r1, sp
   1cb48:	mov	r2, #1
   1cb4c:	str	r2, [r1]
   1cb50:	mov	r1, #0
   1cb54:	mov	r2, r1
   1cb58:	mov	r3, r1
   1cb5c:	bl	1cbac <__assert_fail@plt+0xbbb0>
   1cb60:	str	r0, [sp, #8]
   1cb64:	mov	sp, fp
   1cb68:	pop	{fp, pc}
   1cb6c:	push	{fp, lr}
   1cb70:	mov	fp, sp
   1cb74:	sub	sp, sp, #16
   1cb78:	str	r0, [fp, #-4]
   1cb7c:	bl	10f3c <__errno_location@plt>
   1cb80:	ldr	r0, [r0]
   1cb84:	str	r0, [sp, #8]
   1cb88:	ldr	r0, [fp, #-4]
   1cb8c:	bl	10dec <free@plt>
   1cb90:	ldr	r0, [sp, #8]
   1cb94:	str	r0, [sp, #4]
   1cb98:	bl	10f3c <__errno_location@plt>
   1cb9c:	ldr	lr, [sp, #4]
   1cba0:	str	lr, [r0]
   1cba4:	mov	sp, fp
   1cba8:	pop	{fp, pc}
   1cbac:	push	{fp, lr}
   1cbb0:	mov	fp, sp
   1cbb4:	sub	sp, sp, #32
   1cbb8:	ldr	r1, [fp, #8]
   1cbbc:	str	r0, [fp, #-8]
   1cbc0:	str	r3, [sp, #20]
   1cbc4:	str	r2, [sp, #16]
   1cbc8:	ldr	r0, [fp, #-8]
   1cbcc:	ldr	r0, [r0, #8]
   1cbd0:	ldr	r2, [fp, #-8]
   1cbd4:	ldr	r2, [r2, #4]
   1cbd8:	cmp	r0, r2
   1cbdc:	str	r1, [sp, #4]
   1cbe0:	bne	1cc8c <__assert_fail@plt+0xbc90>
   1cbe4:	ldr	r0, [fp, #-8]
   1cbe8:	ldr	r0, [r0, #20]
   1cbec:	ldr	r1, [fp, #-8]
   1cbf0:	ldr	r1, [r1, #16]
   1cbf4:	cmp	r0, r1
   1cbf8:	bne	1cc8c <__assert_fail@plt+0xbc90>
   1cbfc:	ldr	r0, [fp, #-8]
   1cc00:	ldr	r0, [r0, #36]	; 0x24
   1cc04:	movw	r1, #0
   1cc08:	cmp	r0, r1
   1cc0c:	bne	1cc8c <__assert_fail@plt+0xbc90>
   1cc10:	ldr	r0, [fp, #-8]
   1cc14:	bl	10f60 <fileno@plt>
   1cc18:	ldr	r2, [sp, #16]
   1cc1c:	ldr	r3, [sp, #20]
   1cc20:	ldr	lr, [fp, #8]
   1cc24:	mov	r1, sp
   1cc28:	str	lr, [r1]
   1cc2c:	bl	10e64 <lseek64@plt>
   1cc30:	str	r1, [sp, #12]
   1cc34:	str	r0, [sp, #8]
   1cc38:	ldr	r0, [sp, #8]
   1cc3c:	ldr	r1, [sp, #12]
   1cc40:	and	r0, r0, r1
   1cc44:	cmn	r0, #1
   1cc48:	bne	1cc5c <__assert_fail@plt+0xbc60>
   1cc4c:	b	1cc50 <__assert_fail@plt+0xbc54>
   1cc50:	mvn	r0, #0
   1cc54:	str	r0, [fp, #-4]
   1cc58:	b	1ccac <__assert_fail@plt+0xbcb0>
   1cc5c:	ldr	r0, [fp, #-8]
   1cc60:	ldr	r1, [r0]
   1cc64:	bic	r1, r1, #16
   1cc68:	str	r1, [r0]
   1cc6c:	ldr	r0, [sp, #8]
   1cc70:	ldr	r1, [sp, #12]
   1cc74:	ldr	r2, [fp, #-8]
   1cc78:	str	r1, [r2, #84]	; 0x54
   1cc7c:	str	r0, [r2, #80]	; 0x50
   1cc80:	movw	r0, #0
   1cc84:	str	r0, [fp, #-4]
   1cc88:	b	1ccac <__assert_fail@plt+0xbcb0>
   1cc8c:	ldr	r0, [fp, #-8]
   1cc90:	ldr	r2, [sp, #16]
   1cc94:	ldr	r3, [sp, #20]
   1cc98:	ldr	r1, [fp, #8]
   1cc9c:	mov	ip, sp
   1cca0:	str	r1, [ip]
   1cca4:	bl	10f84 <fseeko64@plt>
   1cca8:	str	r0, [fp, #-4]
   1ccac:	ldr	r0, [fp, #-4]
   1ccb0:	mov	sp, fp
   1ccb4:	pop	{fp, pc}
   1ccb8:	push	{fp, lr}
   1ccbc:	mov	fp, sp
   1ccc0:	bl	10f3c <__errno_location@plt>
   1ccc4:	movw	lr, #12
   1ccc8:	str	lr, [r0]
   1cccc:	movw	r0, #0
   1ccd0:	pop	{fp, pc}
   1ccd4:	push	{fp, lr}
   1ccd8:	mov	fp, sp
   1ccdc:	sub	sp, sp, #8
   1cce0:	str	r0, [sp, #4]
   1cce4:	ldr	r0, [sp, #4]
   1cce8:	cmn	r0, #1
   1ccec:	bhi	1cd00 <__assert_fail@plt+0xbd04>
   1ccf0:	ldr	r0, [sp, #4]
   1ccf4:	bl	1c734 <__assert_fail@plt+0xb738>
   1ccf8:	str	r0, [sp]
   1ccfc:	b	1cd08 <__assert_fail@plt+0xbd0c>
   1cd00:	bl	1ccb8 <__assert_fail@plt+0xbcbc>
   1cd04:	str	r0, [sp]
   1cd08:	ldr	r0, [sp]
   1cd0c:	mov	sp, fp
   1cd10:	pop	{fp, pc}
   1cd14:	push	{fp, lr}
   1cd18:	mov	fp, sp
   1cd1c:	sub	sp, sp, #16
   1cd20:	str	r0, [fp, #-4]
   1cd24:	str	r1, [sp, #8]
   1cd28:	ldr	r0, [sp, #8]
   1cd2c:	cmn	r0, #1
   1cd30:	bhi	1cd68 <__assert_fail@plt+0xbd6c>
   1cd34:	ldr	r0, [fp, #-4]
   1cd38:	ldr	r1, [sp, #8]
   1cd3c:	ldr	r2, [sp, #8]
   1cd40:	cmp	r2, #0
   1cd44:	movw	r2, #0
   1cd48:	movne	r2, #1
   1cd4c:	mvn	r3, #0
   1cd50:	eor	r2, r2, r3
   1cd54:	and	r2, r2, #1
   1cd58:	orr	r1, r1, r2
   1cd5c:	bl	1c7a4 <__assert_fail@plt+0xb7a8>
   1cd60:	str	r0, [sp, #4]
   1cd64:	b	1cd70 <__assert_fail@plt+0xbd74>
   1cd68:	bl	1ccb8 <__assert_fail@plt+0xbcbc>
   1cd6c:	str	r0, [sp, #4]
   1cd70:	ldr	r0, [sp, #4]
   1cd74:	mov	sp, fp
   1cd78:	pop	{fp, pc}
   1cd7c:	push	{fp, lr}
   1cd80:	mov	fp, sp
   1cd84:	sub	sp, sp, #16
   1cd88:	str	r0, [sp, #8]
   1cd8c:	str	r1, [sp, #4]
   1cd90:	ldr	r0, [sp, #8]
   1cd94:	mvn	r1, #0
   1cd98:	cmp	r1, r0
   1cd9c:	bcs	1cdc0 <__assert_fail@plt+0xbdc4>
   1cda0:	ldr	r0, [sp, #4]
   1cda4:	cmp	r0, #0
   1cda8:	beq	1cdb8 <__assert_fail@plt+0xbdbc>
   1cdac:	bl	1ccb8 <__assert_fail@plt+0xbcbc>
   1cdb0:	str	r0, [fp, #-4]
   1cdb4:	b	1ce00 <__assert_fail@plt+0xbe04>
   1cdb8:	movw	r0, #0
   1cdbc:	str	r0, [sp, #8]
   1cdc0:	ldr	r0, [sp, #4]
   1cdc4:	mvn	r1, #0
   1cdc8:	cmp	r1, r0
   1cdcc:	bcs	1cdf0 <__assert_fail@plt+0xbdf4>
   1cdd0:	ldr	r0, [sp, #8]
   1cdd4:	cmp	r0, #0
   1cdd8:	beq	1cde8 <__assert_fail@plt+0xbdec>
   1cddc:	bl	1ccb8 <__assert_fail@plt+0xbcbc>
   1cde0:	str	r0, [fp, #-4]
   1cde4:	b	1ce00 <__assert_fail@plt+0xbe04>
   1cde8:	movw	r0, #0
   1cdec:	str	r0, [sp, #4]
   1cdf0:	ldr	r0, [sp, #8]
   1cdf4:	ldr	r1, [sp, #4]
   1cdf8:	bl	1c698 <__assert_fail@plt+0xb69c>
   1cdfc:	str	r0, [fp, #-4]
   1ce00:	ldr	r0, [fp, #-4]
   1ce04:	mov	sp, fp
   1ce08:	pop	{fp, pc}
   1ce0c:	push	{fp, lr}
   1ce10:	mov	fp, sp
   1ce14:	sub	sp, sp, #16
   1ce18:	str	r0, [fp, #-4]
   1ce1c:	str	r1, [sp, #8]
   1ce20:	str	r2, [sp, #4]
   1ce24:	ldr	r0, [sp, #8]
   1ce28:	cmp	r0, #0
   1ce2c:	beq	1ce3c <__assert_fail@plt+0xbe40>
   1ce30:	ldr	r0, [sp, #4]
   1ce34:	cmp	r0, #0
   1ce38:	bne	1ce48 <__assert_fail@plt+0xbe4c>
   1ce3c:	movw	r0, #1
   1ce40:	str	r0, [sp, #4]
   1ce44:	str	r0, [sp, #8]
   1ce48:	ldr	r0, [sp, #8]
   1ce4c:	cmn	r0, #1
   1ce50:	bhi	1ce78 <__assert_fail@plt+0xbe7c>
   1ce54:	ldr	r0, [sp, #4]
   1ce58:	cmn	r0, #1
   1ce5c:	bhi	1ce78 <__assert_fail@plt+0xbe7c>
   1ce60:	ldr	r0, [fp, #-4]
   1ce64:	ldr	r1, [sp, #8]
   1ce68:	ldr	r2, [sp, #4]
   1ce6c:	bl	1cf98 <__assert_fail@plt+0xbf9c>
   1ce70:	str	r0, [sp]
   1ce74:	b	1ce80 <__assert_fail@plt+0xbe84>
   1ce78:	bl	1ccb8 <__assert_fail@plt+0xbcbc>
   1ce7c:	str	r0, [sp]
   1ce80:	ldr	r0, [sp]
   1ce84:	mov	sp, fp
   1ce88:	pop	{fp, pc}
   1ce8c:	push	{fp, lr}
   1ce90:	mov	fp, sp
   1ce94:	sub	sp, sp, #8
   1ce98:	movw	r0, #14
   1ce9c:	bl	10fa8 <nl_langinfo@plt>
   1cea0:	str	r0, [sp, #4]
   1cea4:	ldr	r0, [sp, #4]
   1cea8:	movw	lr, #0
   1ceac:	cmp	r0, lr
   1ceb0:	bne	1cec0 <__assert_fail@plt+0xbec4>
   1ceb4:	movw	r0, #62872	; 0xf598
   1ceb8:	movt	r0, #1
   1cebc:	str	r0, [sp, #4]
   1cec0:	ldr	r0, [sp, #4]
   1cec4:	ldrb	r0, [r0]
   1cec8:	cmp	r0, #0
   1cecc:	bne	1cedc <__assert_fail@plt+0xbee0>
   1ced0:	movw	r0, #64473	; 0xfbd9
   1ced4:	movt	r0, #1
   1ced8:	str	r0, [sp, #4]
   1cedc:	ldr	r0, [sp, #4]
   1cee0:	mov	sp, fp
   1cee4:	pop	{fp, pc}
   1cee8:	push	{fp, lr}
   1ceec:	mov	fp, sp
   1cef0:	sub	sp, sp, #32
   1cef4:	str	r0, [fp, #-8]
   1cef8:	str	r1, [fp, #-12]
   1cefc:	str	r2, [sp, #16]
   1cf00:	str	r3, [sp, #12]
   1cf04:	ldr	r0, [fp, #-8]
   1cf08:	movw	r1, #0
   1cf0c:	cmp	r0, r1
   1cf10:	bne	1cf1c <__assert_fail@plt+0xbf20>
   1cf14:	add	r0, sp, #4
   1cf18:	str	r0, [fp, #-8]
   1cf1c:	ldr	r0, [fp, #-8]
   1cf20:	ldr	r1, [fp, #-12]
   1cf24:	ldr	r2, [sp, #16]
   1cf28:	ldr	r3, [sp, #12]
   1cf2c:	bl	10e94 <mbrtowc@plt>
   1cf30:	str	r0, [sp, #8]
   1cf34:	ldr	r0, [sp, #8]
   1cf38:	mvn	r1, #1
   1cf3c:	cmp	r1, r0
   1cf40:	bhi	1cf84 <__assert_fail@plt+0xbf88>
   1cf44:	ldr	r0, [sp, #16]
   1cf48:	cmp	r0, #0
   1cf4c:	beq	1cf84 <__assert_fail@plt+0xbf88>
   1cf50:	movw	r0, #0
   1cf54:	bl	1e968 <__assert_fail@plt+0xd96c>
   1cf58:	tst	r0, #1
   1cf5c:	bne	1cf84 <__assert_fail@plt+0xbf88>
   1cf60:	ldr	r0, [fp, #-12]
   1cf64:	ldrb	r0, [r0]
   1cf68:	strb	r0, [sp, #3]
   1cf6c:	ldrb	r0, [sp, #3]
   1cf70:	ldr	r1, [fp, #-8]
   1cf74:	str	r0, [r1]
   1cf78:	movw	r0, #1
   1cf7c:	str	r0, [fp, #-4]
   1cf80:	b	1cf8c <__assert_fail@plt+0xbf90>
   1cf84:	ldr	r0, [sp, #8]
   1cf88:	str	r0, [fp, #-4]
   1cf8c:	ldr	r0, [fp, #-4]
   1cf90:	mov	sp, fp
   1cf94:	pop	{fp, pc}
   1cf98:	push	{fp, lr}
   1cf9c:	mov	fp, sp
   1cfa0:	sub	sp, sp, #176	; 0xb0
   1cfa4:	str	r0, [fp, #-8]
   1cfa8:	str	r1, [fp, #-12]
   1cfac:	str	r2, [fp, #-16]
   1cfb0:	b	1d368 <__assert_fail@plt+0xc36c>
   1cfb4:	b	1d188 <__assert_fail@plt+0xc18c>
   1cfb8:	ldr	r0, [fp, #-16]
   1cfbc:	cmp	r0, #0
   1cfc0:	bcs	1d0c4 <__assert_fail@plt+0xc0c8>
   1cfc4:	ldr	r0, [fp, #-12]
   1cfc8:	cmp	r0, #0
   1cfcc:	bcs	1d054 <__assert_fail@plt+0xc058>
   1cfd0:	b	1cff0 <__assert_fail@plt+0xbff4>
   1cfd4:	ldr	r0, [fp, #-12]
   1cfd8:	ldr	r1, [fp, #-16]
   1cfdc:	movw	r2, #127	; 0x7f
   1cfe0:	udiv	r1, r2, r1
   1cfe4:	cmp	r0, r1
   1cfe8:	bcc	1d158 <__assert_fail@plt+0xc15c>
   1cfec:	b	1d170 <__assert_fail@plt+0xc174>
   1cff0:	b	1d004 <__assert_fail@plt+0xc008>
   1cff4:	ldr	r0, [fp, #-16]
   1cff8:	cmp	r0, #1
   1cffc:	bcc	1d014 <__assert_fail@plt+0xc018>
   1d000:	b	1d020 <__assert_fail@plt+0xc024>
   1d004:	ldr	r0, [fp, #-16]
   1d008:	movw	r1, #0
   1d00c:	cmp	r1, r0
   1d010:	bcs	1d020 <__assert_fail@plt+0xc024>
   1d014:	movw	r0, #0
   1d018:	str	r0, [fp, #-24]	; 0xffffffe8
   1d01c:	b	1d038 <__assert_fail@plt+0xc03c>
   1d020:	ldr	r0, [fp, #-16]
   1d024:	movw	r1, #0
   1d028:	sub	r0, r1, r0
   1d02c:	movw	r1, #127	; 0x7f
   1d030:	udiv	r0, r1, r0
   1d034:	str	r0, [fp, #-24]	; 0xffffffe8
   1d038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d03c:	ldr	r1, [fp, #-12]
   1d040:	mvn	r2, #0
   1d044:	sub	r1, r2, r1
   1d048:	cmp	r0, r1
   1d04c:	bls	1d158 <__assert_fail@plt+0xc15c>
   1d050:	b	1d170 <__assert_fail@plt+0xc174>
   1d054:	ldr	r0, [fp, #-16]
   1d058:	cmn	r0, #1
   1d05c:	bne	1d0a8 <__assert_fail@plt+0xc0ac>
   1d060:	b	1d080 <__assert_fail@plt+0xc084>
   1d064:	ldr	r0, [fp, #-12]
   1d068:	mvn	r1, #127	; 0x7f
   1d06c:	add	r0, r0, r1
   1d070:	movw	r1, #0
   1d074:	cmp	r1, r0
   1d078:	bcc	1d158 <__assert_fail@plt+0xc15c>
   1d07c:	b	1d170 <__assert_fail@plt+0xc174>
   1d080:	ldr	r0, [fp, #-12]
   1d084:	movw	r1, #0
   1d088:	cmp	r1, r0
   1d08c:	bcs	1d170 <__assert_fail@plt+0xc174>
   1d090:	ldr	r0, [fp, #-12]
   1d094:	sub	r0, r0, #1
   1d098:	movw	r1, #127	; 0x7f
   1d09c:	cmp	r1, r0
   1d0a0:	bcc	1d158 <__assert_fail@plt+0xc15c>
   1d0a4:	b	1d170 <__assert_fail@plt+0xc174>
   1d0a8:	ldr	r0, [fp, #-16]
   1d0ac:	mvn	r1, #127	; 0x7f
   1d0b0:	udiv	r0, r1, r0
   1d0b4:	ldr	r1, [fp, #-12]
   1d0b8:	cmp	r0, r1
   1d0bc:	bcc	1d158 <__assert_fail@plt+0xc15c>
   1d0c0:	b	1d170 <__assert_fail@plt+0xc174>
   1d0c4:	ldr	r0, [fp, #-16]
   1d0c8:	cmp	r0, #0
   1d0cc:	bne	1d0d4 <__assert_fail@plt+0xc0d8>
   1d0d0:	b	1d170 <__assert_fail@plt+0xc174>
   1d0d4:	ldr	r0, [fp, #-12]
   1d0d8:	cmp	r0, #0
   1d0dc:	bcs	1d140 <__assert_fail@plt+0xc144>
   1d0e0:	ldr	r0, [fp, #-12]
   1d0e4:	cmn	r0, #1
   1d0e8:	bne	1d124 <__assert_fail@plt+0xc128>
   1d0ec:	b	1d10c <__assert_fail@plt+0xc110>
   1d0f0:	ldr	r0, [fp, #-16]
   1d0f4:	mvn	r1, #127	; 0x7f
   1d0f8:	add	r0, r0, r1
   1d0fc:	movw	r1, #0
   1d100:	cmp	r1, r0
   1d104:	bcc	1d158 <__assert_fail@plt+0xc15c>
   1d108:	b	1d170 <__assert_fail@plt+0xc174>
   1d10c:	ldr	r0, [fp, #-16]
   1d110:	sub	r0, r0, #1
   1d114:	movw	r1, #127	; 0x7f
   1d118:	cmp	r1, r0
   1d11c:	bcc	1d158 <__assert_fail@plt+0xc15c>
   1d120:	b	1d170 <__assert_fail@plt+0xc174>
   1d124:	ldr	r0, [fp, #-12]
   1d128:	mvn	r1, #127	; 0x7f
   1d12c:	udiv	r0, r1, r0
   1d130:	ldr	r1, [fp, #-16]
   1d134:	cmp	r0, r1
   1d138:	bcc	1d158 <__assert_fail@plt+0xc15c>
   1d13c:	b	1d170 <__assert_fail@plt+0xc174>
   1d140:	ldr	r0, [fp, #-16]
   1d144:	movw	r1, #127	; 0x7f
   1d148:	udiv	r0, r1, r0
   1d14c:	ldr	r1, [fp, #-12]
   1d150:	cmp	r0, r1
   1d154:	bcs	1d170 <__assert_fail@plt+0xc174>
   1d158:	ldr	r0, [fp, #-12]
   1d15c:	ldr	r1, [fp, #-16]
   1d160:	mul	r0, r0, r1
   1d164:	sxtb	r0, r0
   1d168:	str	r0, [fp, #-20]	; 0xffffffec
   1d16c:	b	1e2e8 <__assert_fail@plt+0xd2ec>
   1d170:	ldr	r0, [fp, #-12]
   1d174:	ldr	r1, [fp, #-16]
   1d178:	mul	r0, r0, r1
   1d17c:	sxtb	r0, r0
   1d180:	str	r0, [fp, #-20]	; 0xffffffec
   1d184:	b	1e300 <__assert_fail@plt+0xd304>
   1d188:	ldr	r0, [fp, #-16]
   1d18c:	cmp	r0, #0
   1d190:	bcs	1d29c <__assert_fail@plt+0xc2a0>
   1d194:	ldr	r0, [fp, #-12]
   1d198:	cmp	r0, #0
   1d19c:	bcs	1d224 <__assert_fail@plt+0xc228>
   1d1a0:	b	1d1c0 <__assert_fail@plt+0xc1c4>
   1d1a4:	ldr	r0, [fp, #-12]
   1d1a8:	ldr	r1, [fp, #-16]
   1d1ac:	movw	r2, #255	; 0xff
   1d1b0:	udiv	r1, r2, r1
   1d1b4:	cmp	r0, r1
   1d1b8:	bcc	1d338 <__assert_fail@plt+0xc33c>
   1d1bc:	b	1d350 <__assert_fail@plt+0xc354>
   1d1c0:	b	1d1d4 <__assert_fail@plt+0xc1d8>
   1d1c4:	ldr	r0, [fp, #-16]
   1d1c8:	cmp	r0, #1
   1d1cc:	bcc	1d1e4 <__assert_fail@plt+0xc1e8>
   1d1d0:	b	1d1f0 <__assert_fail@plt+0xc1f4>
   1d1d4:	ldr	r0, [fp, #-16]
   1d1d8:	movw	r1, #0
   1d1dc:	cmp	r1, r0
   1d1e0:	bcs	1d1f0 <__assert_fail@plt+0xc1f4>
   1d1e4:	movw	r0, #0
   1d1e8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d1ec:	b	1d208 <__assert_fail@plt+0xc20c>
   1d1f0:	ldr	r0, [fp, #-16]
   1d1f4:	movw	r1, #0
   1d1f8:	sub	r0, r1, r0
   1d1fc:	movw	r1, #255	; 0xff
   1d200:	udiv	r0, r1, r0
   1d204:	str	r0, [fp, #-28]	; 0xffffffe4
   1d208:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d20c:	ldr	r1, [fp, #-12]
   1d210:	mvn	r2, #0
   1d214:	sub	r1, r2, r1
   1d218:	cmp	r0, r1
   1d21c:	bls	1d338 <__assert_fail@plt+0xc33c>
   1d220:	b	1d350 <__assert_fail@plt+0xc354>
   1d224:	b	1d22c <__assert_fail@plt+0xc230>
   1d228:	b	1d230 <__assert_fail@plt+0xc234>
   1d22c:	b	1d280 <__assert_fail@plt+0xc284>
   1d230:	ldr	r0, [fp, #-16]
   1d234:	cmn	r0, #1
   1d238:	bne	1d280 <__assert_fail@plt+0xc284>
   1d23c:	b	1d258 <__assert_fail@plt+0xc25c>
   1d240:	ldr	r0, [fp, #-12]
   1d244:	add	r0, r0, #0
   1d248:	movw	r1, #0
   1d24c:	cmp	r1, r0
   1d250:	bcc	1d338 <__assert_fail@plt+0xc33c>
   1d254:	b	1d350 <__assert_fail@plt+0xc354>
   1d258:	ldr	r0, [fp, #-12]
   1d25c:	movw	r1, #0
   1d260:	cmp	r1, r0
   1d264:	bcs	1d350 <__assert_fail@plt+0xc354>
   1d268:	ldr	r0, [fp, #-12]
   1d26c:	sub	r0, r0, #1
   1d270:	mvn	r1, #0
   1d274:	cmp	r1, r0
   1d278:	bcc	1d338 <__assert_fail@plt+0xc33c>
   1d27c:	b	1d350 <__assert_fail@plt+0xc354>
   1d280:	ldr	r0, [fp, #-16]
   1d284:	movw	r1, #0
   1d288:	udiv	r0, r1, r0
   1d28c:	ldr	r1, [fp, #-12]
   1d290:	cmp	r0, r1
   1d294:	bcc	1d338 <__assert_fail@plt+0xc33c>
   1d298:	b	1d350 <__assert_fail@plt+0xc354>
   1d29c:	ldr	r0, [fp, #-16]
   1d2a0:	cmp	r0, #0
   1d2a4:	bne	1d2ac <__assert_fail@plt+0xc2b0>
   1d2a8:	b	1d350 <__assert_fail@plt+0xc354>
   1d2ac:	ldr	r0, [fp, #-12]
   1d2b0:	cmp	r0, #0
   1d2b4:	bcs	1d320 <__assert_fail@plt+0xc324>
   1d2b8:	b	1d2c0 <__assert_fail@plt+0xc2c4>
   1d2bc:	b	1d2c4 <__assert_fail@plt+0xc2c8>
   1d2c0:	b	1d304 <__assert_fail@plt+0xc308>
   1d2c4:	ldr	r0, [fp, #-12]
   1d2c8:	cmn	r0, #1
   1d2cc:	bne	1d304 <__assert_fail@plt+0xc308>
   1d2d0:	b	1d2ec <__assert_fail@plt+0xc2f0>
   1d2d4:	ldr	r0, [fp, #-16]
   1d2d8:	add	r0, r0, #0
   1d2dc:	movw	r1, #0
   1d2e0:	cmp	r1, r0
   1d2e4:	bcc	1d338 <__assert_fail@plt+0xc33c>
   1d2e8:	b	1d350 <__assert_fail@plt+0xc354>
   1d2ec:	ldr	r0, [fp, #-16]
   1d2f0:	sub	r0, r0, #1
   1d2f4:	mvn	r1, #0
   1d2f8:	cmp	r1, r0
   1d2fc:	bcc	1d338 <__assert_fail@plt+0xc33c>
   1d300:	b	1d350 <__assert_fail@plt+0xc354>
   1d304:	ldr	r0, [fp, #-12]
   1d308:	movw	r1, #0
   1d30c:	udiv	r0, r1, r0
   1d310:	ldr	r1, [fp, #-16]
   1d314:	cmp	r0, r1
   1d318:	bcc	1d338 <__assert_fail@plt+0xc33c>
   1d31c:	b	1d350 <__assert_fail@plt+0xc354>
   1d320:	ldr	r0, [fp, #-16]
   1d324:	movw	r1, #255	; 0xff
   1d328:	udiv	r0, r1, r0
   1d32c:	ldr	r1, [fp, #-12]
   1d330:	cmp	r0, r1
   1d334:	bcs	1d350 <__assert_fail@plt+0xc354>
   1d338:	ldr	r0, [fp, #-12]
   1d33c:	ldr	r1, [fp, #-16]
   1d340:	mul	r0, r0, r1
   1d344:	and	r0, r0, #255	; 0xff
   1d348:	str	r0, [fp, #-20]	; 0xffffffec
   1d34c:	b	1e2e8 <__assert_fail@plt+0xd2ec>
   1d350:	ldr	r0, [fp, #-12]
   1d354:	ldr	r1, [fp, #-16]
   1d358:	mul	r0, r0, r1
   1d35c:	and	r0, r0, #255	; 0xff
   1d360:	str	r0, [fp, #-20]	; 0xffffffec
   1d364:	b	1e300 <__assert_fail@plt+0xd304>
   1d368:	b	1d720 <__assert_fail@plt+0xc724>
   1d36c:	b	1d540 <__assert_fail@plt+0xc544>
   1d370:	ldr	r0, [fp, #-16]
   1d374:	cmp	r0, #0
   1d378:	bcs	1d47c <__assert_fail@plt+0xc480>
   1d37c:	ldr	r0, [fp, #-12]
   1d380:	cmp	r0, #0
   1d384:	bcs	1d40c <__assert_fail@plt+0xc410>
   1d388:	b	1d3a8 <__assert_fail@plt+0xc3ac>
   1d38c:	ldr	r0, [fp, #-12]
   1d390:	ldr	r1, [fp, #-16]
   1d394:	movw	r2, #32767	; 0x7fff
   1d398:	udiv	r1, r2, r1
   1d39c:	cmp	r0, r1
   1d3a0:	bcc	1d510 <__assert_fail@plt+0xc514>
   1d3a4:	b	1d528 <__assert_fail@plt+0xc52c>
   1d3a8:	b	1d3bc <__assert_fail@plt+0xc3c0>
   1d3ac:	ldr	r0, [fp, #-16]
   1d3b0:	cmp	r0, #1
   1d3b4:	bcc	1d3cc <__assert_fail@plt+0xc3d0>
   1d3b8:	b	1d3d8 <__assert_fail@plt+0xc3dc>
   1d3bc:	ldr	r0, [fp, #-16]
   1d3c0:	movw	r1, #0
   1d3c4:	cmp	r1, r0
   1d3c8:	bcs	1d3d8 <__assert_fail@plt+0xc3dc>
   1d3cc:	movw	r0, #0
   1d3d0:	str	r0, [fp, #-32]	; 0xffffffe0
   1d3d4:	b	1d3f0 <__assert_fail@plt+0xc3f4>
   1d3d8:	ldr	r0, [fp, #-16]
   1d3dc:	movw	r1, #0
   1d3e0:	sub	r0, r1, r0
   1d3e4:	movw	r1, #32767	; 0x7fff
   1d3e8:	udiv	r0, r1, r0
   1d3ec:	str	r0, [fp, #-32]	; 0xffffffe0
   1d3f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d3f4:	ldr	r1, [fp, #-12]
   1d3f8:	mvn	r2, #0
   1d3fc:	sub	r1, r2, r1
   1d400:	cmp	r0, r1
   1d404:	bls	1d510 <__assert_fail@plt+0xc514>
   1d408:	b	1d528 <__assert_fail@plt+0xc52c>
   1d40c:	ldr	r0, [fp, #-16]
   1d410:	cmn	r0, #1
   1d414:	bne	1d460 <__assert_fail@plt+0xc464>
   1d418:	b	1d438 <__assert_fail@plt+0xc43c>
   1d41c:	ldr	r0, [pc, #3840]	; 1e324 <__assert_fail@plt+0xd328>
   1d420:	ldr	r1, [fp, #-12]
   1d424:	add	r0, r1, r0
   1d428:	movw	r1, #0
   1d42c:	cmp	r1, r0
   1d430:	bcc	1d510 <__assert_fail@plt+0xc514>
   1d434:	b	1d528 <__assert_fail@plt+0xc52c>
   1d438:	ldr	r0, [fp, #-12]
   1d43c:	movw	r1, #0
   1d440:	cmp	r1, r0
   1d444:	bcs	1d528 <__assert_fail@plt+0xc52c>
   1d448:	ldr	r0, [fp, #-12]
   1d44c:	sub	r0, r0, #1
   1d450:	movw	r1, #32767	; 0x7fff
   1d454:	cmp	r1, r0
   1d458:	bcc	1d510 <__assert_fail@plt+0xc514>
   1d45c:	b	1d528 <__assert_fail@plt+0xc52c>
   1d460:	ldr	r0, [pc, #3772]	; 1e324 <__assert_fail@plt+0xd328>
   1d464:	ldr	r1, [fp, #-16]
   1d468:	udiv	r0, r0, r1
   1d46c:	ldr	r1, [fp, #-12]
   1d470:	cmp	r0, r1
   1d474:	bcc	1d510 <__assert_fail@plt+0xc514>
   1d478:	b	1d528 <__assert_fail@plt+0xc52c>
   1d47c:	ldr	r0, [fp, #-16]
   1d480:	cmp	r0, #0
   1d484:	bne	1d48c <__assert_fail@plt+0xc490>
   1d488:	b	1d528 <__assert_fail@plt+0xc52c>
   1d48c:	ldr	r0, [fp, #-12]
   1d490:	cmp	r0, #0
   1d494:	bcs	1d4f8 <__assert_fail@plt+0xc4fc>
   1d498:	ldr	r0, [fp, #-12]
   1d49c:	cmn	r0, #1
   1d4a0:	bne	1d4dc <__assert_fail@plt+0xc4e0>
   1d4a4:	b	1d4c4 <__assert_fail@plt+0xc4c8>
   1d4a8:	ldr	r0, [pc, #3700]	; 1e324 <__assert_fail@plt+0xd328>
   1d4ac:	ldr	r1, [fp, #-16]
   1d4b0:	add	r0, r1, r0
   1d4b4:	movw	r1, #0
   1d4b8:	cmp	r1, r0
   1d4bc:	bcc	1d510 <__assert_fail@plt+0xc514>
   1d4c0:	b	1d528 <__assert_fail@plt+0xc52c>
   1d4c4:	ldr	r0, [fp, #-16]
   1d4c8:	sub	r0, r0, #1
   1d4cc:	movw	r1, #32767	; 0x7fff
   1d4d0:	cmp	r1, r0
   1d4d4:	bcc	1d510 <__assert_fail@plt+0xc514>
   1d4d8:	b	1d528 <__assert_fail@plt+0xc52c>
   1d4dc:	ldr	r0, [pc, #3648]	; 1e324 <__assert_fail@plt+0xd328>
   1d4e0:	ldr	r1, [fp, #-12]
   1d4e4:	udiv	r0, r0, r1
   1d4e8:	ldr	r1, [fp, #-16]
   1d4ec:	cmp	r0, r1
   1d4f0:	bcc	1d510 <__assert_fail@plt+0xc514>
   1d4f4:	b	1d528 <__assert_fail@plt+0xc52c>
   1d4f8:	ldr	r0, [fp, #-16]
   1d4fc:	movw	r1, #32767	; 0x7fff
   1d500:	udiv	r0, r1, r0
   1d504:	ldr	r1, [fp, #-12]
   1d508:	cmp	r0, r1
   1d50c:	bcs	1d528 <__assert_fail@plt+0xc52c>
   1d510:	ldr	r0, [fp, #-12]
   1d514:	ldr	r1, [fp, #-16]
   1d518:	mul	r0, r0, r1
   1d51c:	sxth	r0, r0
   1d520:	str	r0, [fp, #-20]	; 0xffffffec
   1d524:	b	1e2e8 <__assert_fail@plt+0xd2ec>
   1d528:	ldr	r0, [fp, #-12]
   1d52c:	ldr	r1, [fp, #-16]
   1d530:	mul	r0, r0, r1
   1d534:	sxth	r0, r0
   1d538:	str	r0, [fp, #-20]	; 0xffffffec
   1d53c:	b	1e300 <__assert_fail@plt+0xd304>
   1d540:	ldr	r0, [fp, #-16]
   1d544:	cmp	r0, #0
   1d548:	bcs	1d654 <__assert_fail@plt+0xc658>
   1d54c:	ldr	r0, [fp, #-12]
   1d550:	cmp	r0, #0
   1d554:	bcs	1d5dc <__assert_fail@plt+0xc5e0>
   1d558:	b	1d578 <__assert_fail@plt+0xc57c>
   1d55c:	ldr	r0, [fp, #-12]
   1d560:	ldr	r1, [fp, #-16]
   1d564:	movw	r2, #65535	; 0xffff
   1d568:	udiv	r1, r2, r1
   1d56c:	cmp	r0, r1
   1d570:	bcc	1d6f0 <__assert_fail@plt+0xc6f4>
   1d574:	b	1d708 <__assert_fail@plt+0xc70c>
   1d578:	b	1d58c <__assert_fail@plt+0xc590>
   1d57c:	ldr	r0, [fp, #-16]
   1d580:	cmp	r0, #1
   1d584:	bcc	1d59c <__assert_fail@plt+0xc5a0>
   1d588:	b	1d5a8 <__assert_fail@plt+0xc5ac>
   1d58c:	ldr	r0, [fp, #-16]
   1d590:	movw	r1, #0
   1d594:	cmp	r1, r0
   1d598:	bcs	1d5a8 <__assert_fail@plt+0xc5ac>
   1d59c:	movw	r0, #0
   1d5a0:	str	r0, [fp, #-36]	; 0xffffffdc
   1d5a4:	b	1d5c0 <__assert_fail@plt+0xc5c4>
   1d5a8:	ldr	r0, [fp, #-16]
   1d5ac:	movw	r1, #0
   1d5b0:	sub	r0, r1, r0
   1d5b4:	movw	r1, #65535	; 0xffff
   1d5b8:	udiv	r0, r1, r0
   1d5bc:	str	r0, [fp, #-36]	; 0xffffffdc
   1d5c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d5c4:	ldr	r1, [fp, #-12]
   1d5c8:	mvn	r2, #0
   1d5cc:	sub	r1, r2, r1
   1d5d0:	cmp	r0, r1
   1d5d4:	bls	1d6f0 <__assert_fail@plt+0xc6f4>
   1d5d8:	b	1d708 <__assert_fail@plt+0xc70c>
   1d5dc:	b	1d5e4 <__assert_fail@plt+0xc5e8>
   1d5e0:	b	1d5e8 <__assert_fail@plt+0xc5ec>
   1d5e4:	b	1d638 <__assert_fail@plt+0xc63c>
   1d5e8:	ldr	r0, [fp, #-16]
   1d5ec:	cmn	r0, #1
   1d5f0:	bne	1d638 <__assert_fail@plt+0xc63c>
   1d5f4:	b	1d610 <__assert_fail@plt+0xc614>
   1d5f8:	ldr	r0, [fp, #-12]
   1d5fc:	add	r0, r0, #0
   1d600:	movw	r1, #0
   1d604:	cmp	r1, r0
   1d608:	bcc	1d6f0 <__assert_fail@plt+0xc6f4>
   1d60c:	b	1d708 <__assert_fail@plt+0xc70c>
   1d610:	ldr	r0, [fp, #-12]
   1d614:	movw	r1, #0
   1d618:	cmp	r1, r0
   1d61c:	bcs	1d708 <__assert_fail@plt+0xc70c>
   1d620:	ldr	r0, [fp, #-12]
   1d624:	sub	r0, r0, #1
   1d628:	mvn	r1, #0
   1d62c:	cmp	r1, r0
   1d630:	bcc	1d6f0 <__assert_fail@plt+0xc6f4>
   1d634:	b	1d708 <__assert_fail@plt+0xc70c>
   1d638:	ldr	r0, [fp, #-16]
   1d63c:	movw	r1, #0
   1d640:	udiv	r0, r1, r0
   1d644:	ldr	r1, [fp, #-12]
   1d648:	cmp	r0, r1
   1d64c:	bcc	1d6f0 <__assert_fail@plt+0xc6f4>
   1d650:	b	1d708 <__assert_fail@plt+0xc70c>
   1d654:	ldr	r0, [fp, #-16]
   1d658:	cmp	r0, #0
   1d65c:	bne	1d664 <__assert_fail@plt+0xc668>
   1d660:	b	1d708 <__assert_fail@plt+0xc70c>
   1d664:	ldr	r0, [fp, #-12]
   1d668:	cmp	r0, #0
   1d66c:	bcs	1d6d8 <__assert_fail@plt+0xc6dc>
   1d670:	b	1d678 <__assert_fail@plt+0xc67c>
   1d674:	b	1d67c <__assert_fail@plt+0xc680>
   1d678:	b	1d6bc <__assert_fail@plt+0xc6c0>
   1d67c:	ldr	r0, [fp, #-12]
   1d680:	cmn	r0, #1
   1d684:	bne	1d6bc <__assert_fail@plt+0xc6c0>
   1d688:	b	1d6a4 <__assert_fail@plt+0xc6a8>
   1d68c:	ldr	r0, [fp, #-16]
   1d690:	add	r0, r0, #0
   1d694:	movw	r1, #0
   1d698:	cmp	r1, r0
   1d69c:	bcc	1d6f0 <__assert_fail@plt+0xc6f4>
   1d6a0:	b	1d708 <__assert_fail@plt+0xc70c>
   1d6a4:	ldr	r0, [fp, #-16]
   1d6a8:	sub	r0, r0, #1
   1d6ac:	mvn	r1, #0
   1d6b0:	cmp	r1, r0
   1d6b4:	bcc	1d6f0 <__assert_fail@plt+0xc6f4>
   1d6b8:	b	1d708 <__assert_fail@plt+0xc70c>
   1d6bc:	ldr	r0, [fp, #-12]
   1d6c0:	movw	r1, #0
   1d6c4:	udiv	r0, r1, r0
   1d6c8:	ldr	r1, [fp, #-16]
   1d6cc:	cmp	r0, r1
   1d6d0:	bcc	1d6f0 <__assert_fail@plt+0xc6f4>
   1d6d4:	b	1d708 <__assert_fail@plt+0xc70c>
   1d6d8:	ldr	r0, [fp, #-16]
   1d6dc:	movw	r1, #65535	; 0xffff
   1d6e0:	udiv	r0, r1, r0
   1d6e4:	ldr	r1, [fp, #-12]
   1d6e8:	cmp	r0, r1
   1d6ec:	bcs	1d708 <__assert_fail@plt+0xc70c>
   1d6f0:	ldr	r0, [fp, #-12]
   1d6f4:	ldr	r1, [fp, #-16]
   1d6f8:	mul	r0, r0, r1
   1d6fc:	uxth	r0, r0
   1d700:	str	r0, [fp, #-20]	; 0xffffffec
   1d704:	b	1e2e8 <__assert_fail@plt+0xd2ec>
   1d708:	ldr	r0, [fp, #-12]
   1d70c:	ldr	r1, [fp, #-16]
   1d710:	mul	r0, r0, r1
   1d714:	uxth	r0, r0
   1d718:	str	r0, [fp, #-20]	; 0xffffffec
   1d71c:	b	1e300 <__assert_fail@plt+0xd304>
   1d720:	b	1d724 <__assert_fail@plt+0xc728>
   1d724:	b	1d8e8 <__assert_fail@plt+0xc8ec>
   1d728:	ldr	r0, [fp, #-16]
   1d72c:	cmp	r0, #0
   1d730:	bcs	1d830 <__assert_fail@plt+0xc834>
   1d734:	ldr	r0, [fp, #-12]
   1d738:	cmp	r0, #0
   1d73c:	bcs	1d7c4 <__assert_fail@plt+0xc7c8>
   1d740:	b	1d760 <__assert_fail@plt+0xc764>
   1d744:	ldr	r0, [pc, #3024]	; 1e31c <__assert_fail@plt+0xd320>
   1d748:	ldr	r1, [fp, #-12]
   1d74c:	ldr	r2, [fp, #-16]
   1d750:	udiv	r0, r0, r2
   1d754:	cmp	r1, r0
   1d758:	bcc	1d8c0 <__assert_fail@plt+0xc8c4>
   1d75c:	b	1d8d4 <__assert_fail@plt+0xc8d8>
   1d760:	b	1d774 <__assert_fail@plt+0xc778>
   1d764:	ldr	r0, [fp, #-16]
   1d768:	cmp	r0, #1
   1d76c:	bcc	1d784 <__assert_fail@plt+0xc788>
   1d770:	b	1d790 <__assert_fail@plt+0xc794>
   1d774:	ldr	r0, [fp, #-16]
   1d778:	movw	r1, #0
   1d77c:	cmp	r1, r0
   1d780:	bcs	1d790 <__assert_fail@plt+0xc794>
   1d784:	movw	r0, #0
   1d788:	str	r0, [fp, #-40]	; 0xffffffd8
   1d78c:	b	1d7a8 <__assert_fail@plt+0xc7ac>
   1d790:	ldr	r0, [pc, #2948]	; 1e31c <__assert_fail@plt+0xd320>
   1d794:	ldr	r1, [fp, #-16]
   1d798:	movw	r2, #0
   1d79c:	sub	r1, r2, r1
   1d7a0:	udiv	r0, r0, r1
   1d7a4:	str	r0, [fp, #-40]	; 0xffffffd8
   1d7a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d7ac:	ldr	r1, [fp, #-12]
   1d7b0:	mvn	r2, #0
   1d7b4:	sub	r1, r2, r1
   1d7b8:	cmp	r0, r1
   1d7bc:	bls	1d8c0 <__assert_fail@plt+0xc8c4>
   1d7c0:	b	1d8d4 <__assert_fail@plt+0xc8d8>
   1d7c4:	ldr	r0, [fp, #-16]
   1d7c8:	cmn	r0, #1
   1d7cc:	bne	1d814 <__assert_fail@plt+0xc818>
   1d7d0:	b	1d7ec <__assert_fail@plt+0xc7f0>
   1d7d4:	ldr	r0, [fp, #-12]
   1d7d8:	add	r0, r0, #-2147483648	; 0x80000000
   1d7dc:	movw	r1, #0
   1d7e0:	cmp	r1, r0
   1d7e4:	bcc	1d8c0 <__assert_fail@plt+0xc8c4>
   1d7e8:	b	1d8d4 <__assert_fail@plt+0xc8d8>
   1d7ec:	ldr	r0, [fp, #-12]
   1d7f0:	movw	r1, #0
   1d7f4:	cmp	r1, r0
   1d7f8:	bcs	1d8d4 <__assert_fail@plt+0xc8d8>
   1d7fc:	ldr	r0, [pc, #2840]	; 1e31c <__assert_fail@plt+0xd320>
   1d800:	ldr	r1, [fp, #-12]
   1d804:	sub	r1, r1, #1
   1d808:	cmp	r0, r1
   1d80c:	bcc	1d8c0 <__assert_fail@plt+0xc8c4>
   1d810:	b	1d8d4 <__assert_fail@plt+0xc8d8>
   1d814:	ldr	r0, [pc, #2820]	; 1e320 <__assert_fail@plt+0xd324>
   1d818:	ldr	r1, [fp, #-16]
   1d81c:	udiv	r0, r0, r1
   1d820:	ldr	r1, [fp, #-12]
   1d824:	cmp	r0, r1
   1d828:	bcc	1d8c0 <__assert_fail@plt+0xc8c4>
   1d82c:	b	1d8d4 <__assert_fail@plt+0xc8d8>
   1d830:	ldr	r0, [fp, #-16]
   1d834:	cmp	r0, #0
   1d838:	bne	1d840 <__assert_fail@plt+0xc844>
   1d83c:	b	1d8d4 <__assert_fail@plt+0xc8d8>
   1d840:	ldr	r0, [fp, #-12]
   1d844:	cmp	r0, #0
   1d848:	bcs	1d8a8 <__assert_fail@plt+0xc8ac>
   1d84c:	ldr	r0, [fp, #-12]
   1d850:	cmn	r0, #1
   1d854:	bne	1d88c <__assert_fail@plt+0xc890>
   1d858:	b	1d874 <__assert_fail@plt+0xc878>
   1d85c:	ldr	r0, [fp, #-16]
   1d860:	add	r0, r0, #-2147483648	; 0x80000000
   1d864:	movw	r1, #0
   1d868:	cmp	r1, r0
   1d86c:	bcc	1d8c0 <__assert_fail@plt+0xc8c4>
   1d870:	b	1d8d4 <__assert_fail@plt+0xc8d8>
   1d874:	ldr	r0, [pc, #2720]	; 1e31c <__assert_fail@plt+0xd320>
   1d878:	ldr	r1, [fp, #-16]
   1d87c:	sub	r1, r1, #1
   1d880:	cmp	r0, r1
   1d884:	bcc	1d8c0 <__assert_fail@plt+0xc8c4>
   1d888:	b	1d8d4 <__assert_fail@plt+0xc8d8>
   1d88c:	ldr	r0, [pc, #2700]	; 1e320 <__assert_fail@plt+0xd324>
   1d890:	ldr	r1, [fp, #-12]
   1d894:	udiv	r0, r0, r1
   1d898:	ldr	r1, [fp, #-16]
   1d89c:	cmp	r0, r1
   1d8a0:	bcc	1d8c0 <__assert_fail@plt+0xc8c4>
   1d8a4:	b	1d8d4 <__assert_fail@plt+0xc8d8>
   1d8a8:	ldr	r0, [pc, #2668]	; 1e31c <__assert_fail@plt+0xd320>
   1d8ac:	ldr	r1, [fp, #-16]
   1d8b0:	udiv	r0, r0, r1
   1d8b4:	ldr	r1, [fp, #-12]
   1d8b8:	cmp	r0, r1
   1d8bc:	bcs	1d8d4 <__assert_fail@plt+0xc8d8>
   1d8c0:	ldr	r0, [fp, #-12]
   1d8c4:	ldr	r1, [fp, #-16]
   1d8c8:	mul	r0, r0, r1
   1d8cc:	str	r0, [fp, #-20]	; 0xffffffec
   1d8d0:	b	1e2e8 <__assert_fail@plt+0xd2ec>
   1d8d4:	ldr	r0, [fp, #-12]
   1d8d8:	ldr	r1, [fp, #-16]
   1d8dc:	mul	r0, r0, r1
   1d8e0:	str	r0, [fp, #-20]	; 0xffffffec
   1d8e4:	b	1e300 <__assert_fail@plt+0xd304>
   1d8e8:	ldr	r0, [fp, #-16]
   1d8ec:	cmp	r0, #0
   1d8f0:	bcs	1d9fc <__assert_fail@plt+0xca00>
   1d8f4:	ldr	r0, [fp, #-12]
   1d8f8:	cmp	r0, #0
   1d8fc:	bcs	1d984 <__assert_fail@plt+0xc988>
   1d900:	b	1d920 <__assert_fail@plt+0xc924>
   1d904:	ldr	r0, [fp, #-12]
   1d908:	ldr	r1, [fp, #-16]
   1d90c:	mvn	r2, #0
   1d910:	udiv	r1, r2, r1
   1d914:	cmp	r0, r1
   1d918:	bcc	1da98 <__assert_fail@plt+0xca9c>
   1d91c:	b	1daac <__assert_fail@plt+0xcab0>
   1d920:	b	1d934 <__assert_fail@plt+0xc938>
   1d924:	ldr	r0, [fp, #-16]
   1d928:	cmp	r0, #1
   1d92c:	bcc	1d944 <__assert_fail@plt+0xc948>
   1d930:	b	1d950 <__assert_fail@plt+0xc954>
   1d934:	ldr	r0, [fp, #-16]
   1d938:	movw	r1, #0
   1d93c:	cmp	r1, r0
   1d940:	bcs	1d950 <__assert_fail@plt+0xc954>
   1d944:	movw	r0, #1
   1d948:	str	r0, [fp, #-44]	; 0xffffffd4
   1d94c:	b	1d968 <__assert_fail@plt+0xc96c>
   1d950:	ldr	r0, [fp, #-16]
   1d954:	movw	r1, #0
   1d958:	sub	r0, r1, r0
   1d95c:	mvn	r1, #0
   1d960:	udiv	r0, r1, r0
   1d964:	str	r0, [fp, #-44]	; 0xffffffd4
   1d968:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d96c:	ldr	r1, [fp, #-12]
   1d970:	mvn	r2, #0
   1d974:	sub	r1, r2, r1
   1d978:	cmp	r0, r1
   1d97c:	bls	1da98 <__assert_fail@plt+0xca9c>
   1d980:	b	1daac <__assert_fail@plt+0xcab0>
   1d984:	b	1d98c <__assert_fail@plt+0xc990>
   1d988:	b	1d990 <__assert_fail@plt+0xc994>
   1d98c:	b	1d9e0 <__assert_fail@plt+0xc9e4>
   1d990:	ldr	r0, [fp, #-16]
   1d994:	cmn	r0, #1
   1d998:	bne	1d9e0 <__assert_fail@plt+0xc9e4>
   1d99c:	b	1d9b8 <__assert_fail@plt+0xc9bc>
   1d9a0:	ldr	r0, [fp, #-12]
   1d9a4:	add	r0, r0, #0
   1d9a8:	movw	r1, #0
   1d9ac:	cmp	r1, r0
   1d9b0:	bcc	1da98 <__assert_fail@plt+0xca9c>
   1d9b4:	b	1daac <__assert_fail@plt+0xcab0>
   1d9b8:	ldr	r0, [fp, #-12]
   1d9bc:	movw	r1, #0
   1d9c0:	cmp	r1, r0
   1d9c4:	bcs	1daac <__assert_fail@plt+0xcab0>
   1d9c8:	ldr	r0, [fp, #-12]
   1d9cc:	sub	r0, r0, #1
   1d9d0:	mvn	r1, #0
   1d9d4:	cmp	r1, r0
   1d9d8:	bcc	1da98 <__assert_fail@plt+0xca9c>
   1d9dc:	b	1daac <__assert_fail@plt+0xcab0>
   1d9e0:	ldr	r0, [fp, #-16]
   1d9e4:	movw	r1, #0
   1d9e8:	udiv	r0, r1, r0
   1d9ec:	ldr	r1, [fp, #-12]
   1d9f0:	cmp	r0, r1
   1d9f4:	bcc	1da98 <__assert_fail@plt+0xca9c>
   1d9f8:	b	1daac <__assert_fail@plt+0xcab0>
   1d9fc:	ldr	r0, [fp, #-16]
   1da00:	cmp	r0, #0
   1da04:	bne	1da0c <__assert_fail@plt+0xca10>
   1da08:	b	1daac <__assert_fail@plt+0xcab0>
   1da0c:	ldr	r0, [fp, #-12]
   1da10:	cmp	r0, #0
   1da14:	bcs	1da80 <__assert_fail@plt+0xca84>
   1da18:	b	1da20 <__assert_fail@plt+0xca24>
   1da1c:	b	1da24 <__assert_fail@plt+0xca28>
   1da20:	b	1da64 <__assert_fail@plt+0xca68>
   1da24:	ldr	r0, [fp, #-12]
   1da28:	cmn	r0, #1
   1da2c:	bne	1da64 <__assert_fail@plt+0xca68>
   1da30:	b	1da4c <__assert_fail@plt+0xca50>
   1da34:	ldr	r0, [fp, #-16]
   1da38:	add	r0, r0, #0
   1da3c:	movw	r1, #0
   1da40:	cmp	r1, r0
   1da44:	bcc	1da98 <__assert_fail@plt+0xca9c>
   1da48:	b	1daac <__assert_fail@plt+0xcab0>
   1da4c:	ldr	r0, [fp, #-16]
   1da50:	sub	r0, r0, #1
   1da54:	mvn	r1, #0
   1da58:	cmp	r1, r0
   1da5c:	bcc	1da98 <__assert_fail@plt+0xca9c>
   1da60:	b	1daac <__assert_fail@plt+0xcab0>
   1da64:	ldr	r0, [fp, #-12]
   1da68:	movw	r1, #0
   1da6c:	udiv	r0, r1, r0
   1da70:	ldr	r1, [fp, #-16]
   1da74:	cmp	r0, r1
   1da78:	bcc	1da98 <__assert_fail@plt+0xca9c>
   1da7c:	b	1daac <__assert_fail@plt+0xcab0>
   1da80:	ldr	r0, [fp, #-16]
   1da84:	mvn	r1, #0
   1da88:	udiv	r0, r1, r0
   1da8c:	ldr	r1, [fp, #-12]
   1da90:	cmp	r0, r1
   1da94:	bcs	1daac <__assert_fail@plt+0xcab0>
   1da98:	ldr	r0, [fp, #-12]
   1da9c:	ldr	r1, [fp, #-16]
   1daa0:	mul	r0, r0, r1
   1daa4:	str	r0, [fp, #-20]	; 0xffffffec
   1daa8:	b	1e2e8 <__assert_fail@plt+0xd2ec>
   1daac:	ldr	r0, [fp, #-12]
   1dab0:	ldr	r1, [fp, #-16]
   1dab4:	mul	r0, r0, r1
   1dab8:	str	r0, [fp, #-20]	; 0xffffffec
   1dabc:	b	1e300 <__assert_fail@plt+0xd304>
   1dac0:	b	1dac4 <__assert_fail@plt+0xcac8>
   1dac4:	b	1dc88 <__assert_fail@plt+0xcc8c>
   1dac8:	ldr	r0, [fp, #-16]
   1dacc:	cmp	r0, #0
   1dad0:	bcs	1dbd0 <__assert_fail@plt+0xcbd4>
   1dad4:	ldr	r0, [fp, #-12]
   1dad8:	cmp	r0, #0
   1dadc:	bcs	1db64 <__assert_fail@plt+0xcb68>
   1dae0:	b	1db00 <__assert_fail@plt+0xcb04>
   1dae4:	ldr	r0, [pc, #2096]	; 1e31c <__assert_fail@plt+0xd320>
   1dae8:	ldr	r1, [fp, #-12]
   1daec:	ldr	r2, [fp, #-16]
   1daf0:	udiv	r0, r0, r2
   1daf4:	cmp	r1, r0
   1daf8:	bcc	1dc60 <__assert_fail@plt+0xcc64>
   1dafc:	b	1dc74 <__assert_fail@plt+0xcc78>
   1db00:	b	1db14 <__assert_fail@plt+0xcb18>
   1db04:	ldr	r0, [fp, #-16]
   1db08:	cmp	r0, #1
   1db0c:	bcc	1db24 <__assert_fail@plt+0xcb28>
   1db10:	b	1db30 <__assert_fail@plt+0xcb34>
   1db14:	ldr	r0, [fp, #-16]
   1db18:	movw	r1, #0
   1db1c:	cmp	r1, r0
   1db20:	bcs	1db30 <__assert_fail@plt+0xcb34>
   1db24:	movw	r0, #0
   1db28:	str	r0, [fp, #-48]	; 0xffffffd0
   1db2c:	b	1db48 <__assert_fail@plt+0xcb4c>
   1db30:	ldr	r0, [pc, #2020]	; 1e31c <__assert_fail@plt+0xd320>
   1db34:	ldr	r1, [fp, #-16]
   1db38:	movw	r2, #0
   1db3c:	sub	r1, r2, r1
   1db40:	udiv	r0, r0, r1
   1db44:	str	r0, [fp, #-48]	; 0xffffffd0
   1db48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1db4c:	ldr	r1, [fp, #-12]
   1db50:	mvn	r2, #0
   1db54:	sub	r1, r2, r1
   1db58:	cmp	r0, r1
   1db5c:	bls	1dc60 <__assert_fail@plt+0xcc64>
   1db60:	b	1dc74 <__assert_fail@plt+0xcc78>
   1db64:	ldr	r0, [fp, #-16]
   1db68:	cmn	r0, #1
   1db6c:	bne	1dbb4 <__assert_fail@plt+0xcbb8>
   1db70:	b	1db8c <__assert_fail@plt+0xcb90>
   1db74:	ldr	r0, [fp, #-12]
   1db78:	add	r0, r0, #-2147483648	; 0x80000000
   1db7c:	movw	r1, #0
   1db80:	cmp	r1, r0
   1db84:	bcc	1dc60 <__assert_fail@plt+0xcc64>
   1db88:	b	1dc74 <__assert_fail@plt+0xcc78>
   1db8c:	ldr	r0, [fp, #-12]
   1db90:	movw	r1, #0
   1db94:	cmp	r1, r0
   1db98:	bcs	1dc74 <__assert_fail@plt+0xcc78>
   1db9c:	ldr	r0, [pc, #1912]	; 1e31c <__assert_fail@plt+0xd320>
   1dba0:	ldr	r1, [fp, #-12]
   1dba4:	sub	r1, r1, #1
   1dba8:	cmp	r0, r1
   1dbac:	bcc	1dc60 <__assert_fail@plt+0xcc64>
   1dbb0:	b	1dc74 <__assert_fail@plt+0xcc78>
   1dbb4:	ldr	r0, [pc, #1892]	; 1e320 <__assert_fail@plt+0xd324>
   1dbb8:	ldr	r1, [fp, #-16]
   1dbbc:	udiv	r0, r0, r1
   1dbc0:	ldr	r1, [fp, #-12]
   1dbc4:	cmp	r0, r1
   1dbc8:	bcc	1dc60 <__assert_fail@plt+0xcc64>
   1dbcc:	b	1dc74 <__assert_fail@plt+0xcc78>
   1dbd0:	ldr	r0, [fp, #-16]
   1dbd4:	cmp	r0, #0
   1dbd8:	bne	1dbe0 <__assert_fail@plt+0xcbe4>
   1dbdc:	b	1dc74 <__assert_fail@plt+0xcc78>
   1dbe0:	ldr	r0, [fp, #-12]
   1dbe4:	cmp	r0, #0
   1dbe8:	bcs	1dc48 <__assert_fail@plt+0xcc4c>
   1dbec:	ldr	r0, [fp, #-12]
   1dbf0:	cmn	r0, #1
   1dbf4:	bne	1dc2c <__assert_fail@plt+0xcc30>
   1dbf8:	b	1dc14 <__assert_fail@plt+0xcc18>
   1dbfc:	ldr	r0, [fp, #-16]
   1dc00:	add	r0, r0, #-2147483648	; 0x80000000
   1dc04:	movw	r1, #0
   1dc08:	cmp	r1, r0
   1dc0c:	bcc	1dc60 <__assert_fail@plt+0xcc64>
   1dc10:	b	1dc74 <__assert_fail@plt+0xcc78>
   1dc14:	ldr	r0, [pc, #1792]	; 1e31c <__assert_fail@plt+0xd320>
   1dc18:	ldr	r1, [fp, #-16]
   1dc1c:	sub	r1, r1, #1
   1dc20:	cmp	r0, r1
   1dc24:	bcc	1dc60 <__assert_fail@plt+0xcc64>
   1dc28:	b	1dc74 <__assert_fail@plt+0xcc78>
   1dc2c:	ldr	r0, [pc, #1772]	; 1e320 <__assert_fail@plt+0xd324>
   1dc30:	ldr	r1, [fp, #-12]
   1dc34:	udiv	r0, r0, r1
   1dc38:	ldr	r1, [fp, #-16]
   1dc3c:	cmp	r0, r1
   1dc40:	bcc	1dc60 <__assert_fail@plt+0xcc64>
   1dc44:	b	1dc74 <__assert_fail@plt+0xcc78>
   1dc48:	ldr	r0, [pc, #1740]	; 1e31c <__assert_fail@plt+0xd320>
   1dc4c:	ldr	r1, [fp, #-16]
   1dc50:	udiv	r0, r0, r1
   1dc54:	ldr	r1, [fp, #-12]
   1dc58:	cmp	r0, r1
   1dc5c:	bcs	1dc74 <__assert_fail@plt+0xcc78>
   1dc60:	ldr	r0, [fp, #-12]
   1dc64:	ldr	r1, [fp, #-16]
   1dc68:	mul	r0, r0, r1
   1dc6c:	str	r0, [fp, #-20]	; 0xffffffec
   1dc70:	b	1e2e8 <__assert_fail@plt+0xd2ec>
   1dc74:	ldr	r0, [fp, #-12]
   1dc78:	ldr	r1, [fp, #-16]
   1dc7c:	mul	r0, r0, r1
   1dc80:	str	r0, [fp, #-20]	; 0xffffffec
   1dc84:	b	1e300 <__assert_fail@plt+0xd304>
   1dc88:	ldr	r0, [fp, #-16]
   1dc8c:	cmp	r0, #0
   1dc90:	bcs	1dd9c <__assert_fail@plt+0xcda0>
   1dc94:	ldr	r0, [fp, #-12]
   1dc98:	cmp	r0, #0
   1dc9c:	bcs	1dd24 <__assert_fail@plt+0xcd28>
   1dca0:	b	1dcc0 <__assert_fail@plt+0xccc4>
   1dca4:	ldr	r0, [fp, #-12]
   1dca8:	ldr	r1, [fp, #-16]
   1dcac:	mvn	r2, #0
   1dcb0:	udiv	r1, r2, r1
   1dcb4:	cmp	r0, r1
   1dcb8:	bcc	1de38 <__assert_fail@plt+0xce3c>
   1dcbc:	b	1de4c <__assert_fail@plt+0xce50>
   1dcc0:	b	1dcd4 <__assert_fail@plt+0xccd8>
   1dcc4:	ldr	r0, [fp, #-16]
   1dcc8:	cmp	r0, #1
   1dccc:	bcc	1dce4 <__assert_fail@plt+0xcce8>
   1dcd0:	b	1dcf0 <__assert_fail@plt+0xccf4>
   1dcd4:	ldr	r0, [fp, #-16]
   1dcd8:	movw	r1, #0
   1dcdc:	cmp	r1, r0
   1dce0:	bcs	1dcf0 <__assert_fail@plt+0xccf4>
   1dce4:	movw	r0, #1
   1dce8:	str	r0, [fp, #-52]	; 0xffffffcc
   1dcec:	b	1dd08 <__assert_fail@plt+0xcd0c>
   1dcf0:	ldr	r0, [fp, #-16]
   1dcf4:	movw	r1, #0
   1dcf8:	sub	r0, r1, r0
   1dcfc:	mvn	r1, #0
   1dd00:	udiv	r0, r1, r0
   1dd04:	str	r0, [fp, #-52]	; 0xffffffcc
   1dd08:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1dd0c:	ldr	r1, [fp, #-12]
   1dd10:	mvn	r2, #0
   1dd14:	sub	r1, r2, r1
   1dd18:	cmp	r0, r1
   1dd1c:	bls	1de38 <__assert_fail@plt+0xce3c>
   1dd20:	b	1de4c <__assert_fail@plt+0xce50>
   1dd24:	b	1dd2c <__assert_fail@plt+0xcd30>
   1dd28:	b	1dd30 <__assert_fail@plt+0xcd34>
   1dd2c:	b	1dd80 <__assert_fail@plt+0xcd84>
   1dd30:	ldr	r0, [fp, #-16]
   1dd34:	cmn	r0, #1
   1dd38:	bne	1dd80 <__assert_fail@plt+0xcd84>
   1dd3c:	b	1dd58 <__assert_fail@plt+0xcd5c>
   1dd40:	ldr	r0, [fp, #-12]
   1dd44:	add	r0, r0, #0
   1dd48:	movw	r1, #0
   1dd4c:	cmp	r1, r0
   1dd50:	bcc	1de38 <__assert_fail@plt+0xce3c>
   1dd54:	b	1de4c <__assert_fail@plt+0xce50>
   1dd58:	ldr	r0, [fp, #-12]
   1dd5c:	movw	r1, #0
   1dd60:	cmp	r1, r0
   1dd64:	bcs	1de4c <__assert_fail@plt+0xce50>
   1dd68:	ldr	r0, [fp, #-12]
   1dd6c:	sub	r0, r0, #1
   1dd70:	mvn	r1, #0
   1dd74:	cmp	r1, r0
   1dd78:	bcc	1de38 <__assert_fail@plt+0xce3c>
   1dd7c:	b	1de4c <__assert_fail@plt+0xce50>
   1dd80:	ldr	r0, [fp, #-16]
   1dd84:	movw	r1, #0
   1dd88:	udiv	r0, r1, r0
   1dd8c:	ldr	r1, [fp, #-12]
   1dd90:	cmp	r0, r1
   1dd94:	bcc	1de38 <__assert_fail@plt+0xce3c>
   1dd98:	b	1de4c <__assert_fail@plt+0xce50>
   1dd9c:	ldr	r0, [fp, #-16]
   1dda0:	cmp	r0, #0
   1dda4:	bne	1ddac <__assert_fail@plt+0xcdb0>
   1dda8:	b	1de4c <__assert_fail@plt+0xce50>
   1ddac:	ldr	r0, [fp, #-12]
   1ddb0:	cmp	r0, #0
   1ddb4:	bcs	1de20 <__assert_fail@plt+0xce24>
   1ddb8:	b	1ddc0 <__assert_fail@plt+0xcdc4>
   1ddbc:	b	1ddc4 <__assert_fail@plt+0xcdc8>
   1ddc0:	b	1de04 <__assert_fail@plt+0xce08>
   1ddc4:	ldr	r0, [fp, #-12]
   1ddc8:	cmn	r0, #1
   1ddcc:	bne	1de04 <__assert_fail@plt+0xce08>
   1ddd0:	b	1ddec <__assert_fail@plt+0xcdf0>
   1ddd4:	ldr	r0, [fp, #-16]
   1ddd8:	add	r0, r0, #0
   1dddc:	movw	r1, #0
   1dde0:	cmp	r1, r0
   1dde4:	bcc	1de38 <__assert_fail@plt+0xce3c>
   1dde8:	b	1de4c <__assert_fail@plt+0xce50>
   1ddec:	ldr	r0, [fp, #-16]
   1ddf0:	sub	r0, r0, #1
   1ddf4:	mvn	r1, #0
   1ddf8:	cmp	r1, r0
   1ddfc:	bcc	1de38 <__assert_fail@plt+0xce3c>
   1de00:	b	1de4c <__assert_fail@plt+0xce50>
   1de04:	ldr	r0, [fp, #-12]
   1de08:	movw	r1, #0
   1de0c:	udiv	r0, r1, r0
   1de10:	ldr	r1, [fp, #-16]
   1de14:	cmp	r0, r1
   1de18:	bcc	1de38 <__assert_fail@plt+0xce3c>
   1de1c:	b	1de4c <__assert_fail@plt+0xce50>
   1de20:	ldr	r0, [fp, #-16]
   1de24:	mvn	r1, #0
   1de28:	udiv	r0, r1, r0
   1de2c:	ldr	r1, [fp, #-12]
   1de30:	cmp	r0, r1
   1de34:	bcs	1de4c <__assert_fail@plt+0xce50>
   1de38:	ldr	r0, [fp, #-12]
   1de3c:	ldr	r1, [fp, #-16]
   1de40:	mul	r0, r0, r1
   1de44:	str	r0, [fp, #-20]	; 0xffffffec
   1de48:	b	1e2e8 <__assert_fail@plt+0xd2ec>
   1de4c:	ldr	r0, [fp, #-12]
   1de50:	ldr	r1, [fp, #-16]
   1de54:	mul	r0, r0, r1
   1de58:	str	r0, [fp, #-20]	; 0xffffffec
   1de5c:	b	1e300 <__assert_fail@plt+0xd304>
   1de60:	b	1e0b4 <__assert_fail@plt+0xd0b8>
   1de64:	ldr	r0, [fp, #-16]
   1de68:	cmp	r0, #0
   1de6c:	bcs	1dfcc <__assert_fail@plt+0xcfd0>
   1de70:	ldr	r0, [fp, #-12]
   1de74:	cmp	r0, #0
   1de78:	bcs	1df48 <__assert_fail@plt+0xcf4c>
   1de7c:	b	1de80 <__assert_fail@plt+0xce84>
   1de80:	ldr	r0, [fp, #-12]
   1de84:	ldr	r2, [fp, #-16]
   1de88:	mvn	r1, #0
   1de8c:	mvn	r3, #-2147483648	; 0x80000000
   1de90:	mov	ip, #0
   1de94:	str	r0, [fp, #-56]	; 0xffffffc8
   1de98:	mov	r0, r1
   1de9c:	mov	r1, r3
   1dea0:	mov	r3, ip
   1dea4:	bl	1ec34 <__assert_fail@plt+0xdc38>
   1dea8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1deac:	subs	r0, r2, r0
   1deb0:	rscs	r1, r1, #0
   1deb4:	str	r0, [fp, #-60]	; 0xffffffc4
   1deb8:	str	r1, [fp, #-64]	; 0xffffffc0
   1debc:	blt	1e08c <__assert_fail@plt+0xd090>
   1dec0:	b	1e0a0 <__assert_fail@plt+0xd0a4>
   1dec4:	b	1ded8 <__assert_fail@plt+0xcedc>
   1dec8:	ldr	r0, [fp, #-16]
   1decc:	cmp	r0, #1
   1ded0:	bcc	1dee8 <__assert_fail@plt+0xceec>
   1ded4:	b	1defc <__assert_fail@plt+0xcf00>
   1ded8:	ldr	r0, [fp, #-16]
   1dedc:	movw	r1, #0
   1dee0:	cmp	r1, r0
   1dee4:	bcs	1defc <__assert_fail@plt+0xcf00>
   1dee8:	mov	r0, #0
   1deec:	mvn	r1, #0
   1def0:	str	r1, [fp, #-68]	; 0xffffffbc
   1def4:	str	r0, [fp, #-72]	; 0xffffffb8
   1def8:	b	1df20 <__assert_fail@plt+0xcf24>
   1defc:	ldr	r0, [fp, #-16]
   1df00:	rsb	r2, r0, #0
   1df04:	mvn	r0, #0
   1df08:	mvn	r1, #-2147483648	; 0x80000000
   1df0c:	mov	r3, #0
   1df10:	bl	1ec34 <__assert_fail@plt+0xdc38>
   1df14:	str	r0, [fp, #-68]	; 0xffffffbc
   1df18:	str	r1, [fp, #-72]	; 0xffffffb8
   1df1c:	b	1df20 <__assert_fail@plt+0xcf24>
   1df20:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1df24:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1df28:	ldr	r2, [fp, #-12]
   1df2c:	mvn	r2, r2
   1df30:	subs	r1, r2, r1
   1df34:	rscs	r0, r0, #0
   1df38:	str	r1, [fp, #-76]	; 0xffffffb4
   1df3c:	str	r0, [fp, #-80]	; 0xffffffb0
   1df40:	bge	1e08c <__assert_fail@plt+0xd090>
   1df44:	b	1e0a0 <__assert_fail@plt+0xd0a4>
   1df48:	ldr	r0, [fp, #-16]
   1df4c:	cmn	r0, #1
   1df50:	bne	1df98 <__assert_fail@plt+0xcf9c>
   1df54:	b	1df78 <__assert_fail@plt+0xcf7c>
   1df58:	ldr	r0, [fp, #-12]
   1df5c:	rsbs	r0, r0, #0
   1df60:	mov	r1, #0
   1df64:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1df68:	str	r0, [fp, #-84]	; 0xffffffac
   1df6c:	str	r1, [sp, #88]	; 0x58
   1df70:	blt	1e08c <__assert_fail@plt+0xd090>
   1df74:	b	1e0a0 <__assert_fail@plt+0xd0a4>
   1df78:	ldr	r0, [fp, #-12]
   1df7c:	movw	r1, #0
   1df80:	cmp	r1, r0
   1df84:	bcs	1e0a0 <__assert_fail@plt+0xd0a4>
   1df88:	mov	r0, #0
   1df8c:	cmp	r0, #0
   1df90:	bne	1e08c <__assert_fail@plt+0xd090>
   1df94:	b	1e0a0 <__assert_fail@plt+0xd0a4>
   1df98:	ldr	r2, [fp, #-16]
   1df9c:	mov	r1, #-2147483648	; 0x80000000
   1dfa0:	mov	r0, #0
   1dfa4:	str	r0, [sp, #84]	; 0x54
   1dfa8:	ldr	r3, [sp, #84]	; 0x54
   1dfac:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1dfb0:	ldr	r2, [fp, #-12]
   1dfb4:	subs	r0, r0, r2
   1dfb8:	sbcs	r1, r1, #0
   1dfbc:	str	r0, [sp, #80]	; 0x50
   1dfc0:	str	r1, [sp, #76]	; 0x4c
   1dfc4:	blt	1e08c <__assert_fail@plt+0xd090>
   1dfc8:	b	1e0a0 <__assert_fail@plt+0xd0a4>
   1dfcc:	ldr	r0, [fp, #-16]
   1dfd0:	cmp	r0, #0
   1dfd4:	bne	1dfdc <__assert_fail@plt+0xcfe0>
   1dfd8:	b	1e0a0 <__assert_fail@plt+0xd0a4>
   1dfdc:	ldr	r0, [fp, #-12]
   1dfe0:	cmp	r0, #0
   1dfe4:	bcs	1e05c <__assert_fail@plt+0xd060>
   1dfe8:	ldr	r0, [fp, #-12]
   1dfec:	cmn	r0, #1
   1dff0:	bne	1e028 <__assert_fail@plt+0xd02c>
   1dff4:	b	1e018 <__assert_fail@plt+0xd01c>
   1dff8:	ldr	r0, [fp, #-16]
   1dffc:	rsbs	r0, r0, #0
   1e000:	mov	r1, #0
   1e004:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1e008:	str	r0, [sp, #72]	; 0x48
   1e00c:	str	r1, [sp, #68]	; 0x44
   1e010:	blt	1e08c <__assert_fail@plt+0xd090>
   1e014:	b	1e0a0 <__assert_fail@plt+0xd0a4>
   1e018:	mov	r0, #0
   1e01c:	cmp	r0, #0
   1e020:	bne	1e08c <__assert_fail@plt+0xd090>
   1e024:	b	1e0a0 <__assert_fail@plt+0xd0a4>
   1e028:	ldr	r2, [fp, #-12]
   1e02c:	mov	r1, #-2147483648	; 0x80000000
   1e030:	mov	r0, #0
   1e034:	str	r0, [sp, #64]	; 0x40
   1e038:	ldr	r3, [sp, #64]	; 0x40
   1e03c:	bl	1eb60 <__assert_fail@plt+0xdb64>
   1e040:	ldr	r2, [fp, #-16]
   1e044:	subs	r0, r0, r2
   1e048:	sbcs	r1, r1, #0
   1e04c:	str	r0, [sp, #60]	; 0x3c
   1e050:	str	r1, [sp, #56]	; 0x38
   1e054:	blt	1e08c <__assert_fail@plt+0xd090>
   1e058:	b	1e0a0 <__assert_fail@plt+0xd0a4>
   1e05c:	ldr	r2, [fp, #-16]
   1e060:	mvn	r0, #0
   1e064:	mvn	r1, #-2147483648	; 0x80000000
   1e068:	mov	r3, #0
   1e06c:	bl	1ec34 <__assert_fail@plt+0xdc38>
   1e070:	ldr	r2, [fp, #-12]
   1e074:	subs	r0, r0, r2
   1e078:	sbcs	r1, r1, #0
   1e07c:	str	r0, [sp, #52]	; 0x34
   1e080:	str	r1, [sp, #48]	; 0x30
   1e084:	bge	1e0a0 <__assert_fail@plt+0xd0a4>
   1e088:	b	1e08c <__assert_fail@plt+0xd090>
   1e08c:	ldr	r0, [fp, #-12]
   1e090:	ldr	r1, [fp, #-16]
   1e094:	mul	r0, r0, r1
   1e098:	str	r0, [fp, #-20]	; 0xffffffec
   1e09c:	b	1e2e8 <__assert_fail@plt+0xd2ec>
   1e0a0:	ldr	r0, [fp, #-12]
   1e0a4:	ldr	r1, [fp, #-16]
   1e0a8:	mul	r0, r0, r1
   1e0ac:	str	r0, [fp, #-20]	; 0xffffffec
   1e0b0:	b	1e300 <__assert_fail@plt+0xd304>
   1e0b4:	ldr	r0, [fp, #-16]
   1e0b8:	cmp	r0, #0
   1e0bc:	bcs	1e208 <__assert_fail@plt+0xd20c>
   1e0c0:	ldr	r0, [fp, #-12]
   1e0c4:	cmp	r0, #0
   1e0c8:	bcs	1e190 <__assert_fail@plt+0xd194>
   1e0cc:	b	1e108 <__assert_fail@plt+0xd10c>
   1e0d0:	ldr	r0, [fp, #-12]
   1e0d4:	ldr	r2, [fp, #-16]
   1e0d8:	mvn	r1, #0
   1e0dc:	mov	r3, #0
   1e0e0:	str	r0, [sp, #44]	; 0x2c
   1e0e4:	mov	r0, r1
   1e0e8:	bl	1ec34 <__assert_fail@plt+0xdc38>
   1e0ec:	ldr	r2, [sp, #44]	; 0x2c
   1e0f0:	subs	r0, r2, r0
   1e0f4:	rscs	r1, r1, #0
   1e0f8:	str	r0, [sp, #40]	; 0x28
   1e0fc:	str	r1, [sp, #36]	; 0x24
   1e100:	bcc	1e2c0 <__assert_fail@plt+0xd2c4>
   1e104:	b	1e2d4 <__assert_fail@plt+0xd2d8>
   1e108:	b	1e11c <__assert_fail@plt+0xd120>
   1e10c:	ldr	r0, [fp, #-16]
   1e110:	cmp	r0, #1
   1e114:	bcc	1e12c <__assert_fail@plt+0xd130>
   1e118:	b	1e140 <__assert_fail@plt+0xd144>
   1e11c:	ldr	r0, [fp, #-16]
   1e120:	movw	r1, #0
   1e124:	cmp	r1, r0
   1e128:	bcs	1e140 <__assert_fail@plt+0xd144>
   1e12c:	mov	r0, #1
   1e130:	mvn	r1, #0
   1e134:	str	r1, [sp, #32]
   1e138:	str	r0, [sp, #28]
   1e13c:	b	1e168 <__assert_fail@plt+0xd16c>
   1e140:	ldr	r0, [fp, #-16]
   1e144:	rsb	r2, r0, #0
   1e148:	mvn	r0, #0
   1e14c:	mov	r3, #0
   1e150:	str	r0, [sp, #24]
   1e154:	ldr	r1, [sp, #24]
   1e158:	bl	1ec34 <__assert_fail@plt+0xdc38>
   1e15c:	str	r0, [sp, #32]
   1e160:	str	r1, [sp, #28]
   1e164:	b	1e168 <__assert_fail@plt+0xd16c>
   1e168:	ldr	r0, [sp, #28]
   1e16c:	ldr	r1, [sp, #32]
   1e170:	ldr	r2, [fp, #-12]
   1e174:	mvn	r2, r2
   1e178:	subs	r1, r2, r1
   1e17c:	rscs	r0, r0, #0
   1e180:	str	r1, [sp, #20]
   1e184:	str	r0, [sp, #16]
   1e188:	bcs	1e2c0 <__assert_fail@plt+0xd2c4>
   1e18c:	b	1e2d4 <__assert_fail@plt+0xd2d8>
   1e190:	b	1e198 <__assert_fail@plt+0xd19c>
   1e194:	b	1e19c <__assert_fail@plt+0xd1a0>
   1e198:	b	1e1ec <__assert_fail@plt+0xd1f0>
   1e19c:	ldr	r0, [fp, #-16]
   1e1a0:	cmn	r0, #1
   1e1a4:	bne	1e1ec <__assert_fail@plt+0xd1f0>
   1e1a8:	b	1e1c4 <__assert_fail@plt+0xd1c8>
   1e1ac:	ldr	r0, [fp, #-12]
   1e1b0:	add	r0, r0, #0
   1e1b4:	movw	r1, #0
   1e1b8:	cmp	r1, r0
   1e1bc:	bcc	1e2c0 <__assert_fail@plt+0xd2c4>
   1e1c0:	b	1e2d4 <__assert_fail@plt+0xd2d8>
   1e1c4:	ldr	r0, [fp, #-12]
   1e1c8:	movw	r1, #0
   1e1cc:	cmp	r1, r0
   1e1d0:	bcs	1e2d4 <__assert_fail@plt+0xd2d8>
   1e1d4:	ldr	r0, [fp, #-12]
   1e1d8:	sub	r0, r0, #1
   1e1dc:	mvn	r1, #0
   1e1e0:	cmp	r1, r0
   1e1e4:	bcc	1e2c0 <__assert_fail@plt+0xd2c4>
   1e1e8:	b	1e2d4 <__assert_fail@plt+0xd2d8>
   1e1ec:	ldr	r0, [fp, #-16]
   1e1f0:	movw	r1, #0
   1e1f4:	udiv	r0, r1, r0
   1e1f8:	ldr	r1, [fp, #-12]
   1e1fc:	cmp	r0, r1
   1e200:	bcc	1e2c0 <__assert_fail@plt+0xd2c4>
   1e204:	b	1e2d4 <__assert_fail@plt+0xd2d8>
   1e208:	ldr	r0, [fp, #-16]
   1e20c:	cmp	r0, #0
   1e210:	bne	1e218 <__assert_fail@plt+0xd21c>
   1e214:	b	1e2d4 <__assert_fail@plt+0xd2d8>
   1e218:	ldr	r0, [fp, #-12]
   1e21c:	cmp	r0, #0
   1e220:	bcs	1e28c <__assert_fail@plt+0xd290>
   1e224:	b	1e22c <__assert_fail@plt+0xd230>
   1e228:	b	1e230 <__assert_fail@plt+0xd234>
   1e22c:	b	1e270 <__assert_fail@plt+0xd274>
   1e230:	ldr	r0, [fp, #-12]
   1e234:	cmn	r0, #1
   1e238:	bne	1e270 <__assert_fail@plt+0xd274>
   1e23c:	b	1e258 <__assert_fail@plt+0xd25c>
   1e240:	ldr	r0, [fp, #-16]
   1e244:	add	r0, r0, #0
   1e248:	movw	r1, #0
   1e24c:	cmp	r1, r0
   1e250:	bcc	1e2c0 <__assert_fail@plt+0xd2c4>
   1e254:	b	1e2d4 <__assert_fail@plt+0xd2d8>
   1e258:	ldr	r0, [fp, #-16]
   1e25c:	sub	r0, r0, #1
   1e260:	mvn	r1, #0
   1e264:	cmp	r1, r0
   1e268:	bcc	1e2c0 <__assert_fail@plt+0xd2c4>
   1e26c:	b	1e2d4 <__assert_fail@plt+0xd2d8>
   1e270:	ldr	r0, [fp, #-12]
   1e274:	movw	r1, #0
   1e278:	udiv	r0, r1, r0
   1e27c:	ldr	r1, [fp, #-16]
   1e280:	cmp	r0, r1
   1e284:	bcc	1e2c0 <__assert_fail@plt+0xd2c4>
   1e288:	b	1e2d4 <__assert_fail@plt+0xd2d8>
   1e28c:	ldr	r2, [fp, #-16]
   1e290:	mvn	r0, #0
   1e294:	mov	r3, #0
   1e298:	str	r0, [sp, #12]
   1e29c:	ldr	r1, [sp, #12]
   1e2a0:	bl	1ec34 <__assert_fail@plt+0xdc38>
   1e2a4:	ldr	r2, [fp, #-12]
   1e2a8:	subs	r0, r0, r2
   1e2ac:	sbcs	r1, r1, #0
   1e2b0:	str	r0, [sp, #8]
   1e2b4:	str	r1, [sp, #4]
   1e2b8:	bcs	1e2d4 <__assert_fail@plt+0xd2d8>
   1e2bc:	b	1e2c0 <__assert_fail@plt+0xd2c4>
   1e2c0:	ldr	r0, [fp, #-12]
   1e2c4:	ldr	r1, [fp, #-16]
   1e2c8:	mul	r0, r0, r1
   1e2cc:	str	r0, [fp, #-20]	; 0xffffffec
   1e2d0:	b	1e2e8 <__assert_fail@plt+0xd2ec>
   1e2d4:	ldr	r0, [fp, #-12]
   1e2d8:	ldr	r1, [fp, #-16]
   1e2dc:	mul	r0, r0, r1
   1e2e0:	str	r0, [fp, #-20]	; 0xffffffec
   1e2e4:	b	1e300 <__assert_fail@plt+0xd304>
   1e2e8:	bl	10f3c <__errno_location@plt>
   1e2ec:	movw	lr, #12
   1e2f0:	str	lr, [r0]
   1e2f4:	movw	r0, #0
   1e2f8:	str	r0, [fp, #-4]
   1e2fc:	b	1e310 <__assert_fail@plt+0xd314>
   1e300:	ldr	r0, [fp, #-8]
   1e304:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e308:	bl	1c7a4 <__assert_fail@plt+0xb7a8>
   1e30c:	str	r0, [fp, #-4]
   1e310:	ldr	r0, [fp, #-4]
   1e314:	mov	sp, fp
   1e318:	pop	{fp, pc}
   1e31c:	svcvc	0x00ffffff
   1e320:	andhi	r0, r0, r0
   1e324:			; <UNDEFINED> instruction: 0xffff8000
   1e328:	sub	sp, sp, #12
   1e32c:	str	r0, [sp, #4]
   1e330:	ldr	r0, [sp, #4]
   1e334:	sub	r1, r0, #48	; 0x30
   1e338:	cmp	r1, #10
   1e33c:	str	r0, [sp]
   1e340:	bcc	1e370 <__assert_fail@plt+0xd374>
   1e344:	b	1e348 <__assert_fail@plt+0xd34c>
   1e348:	ldr	r0, [sp]
   1e34c:	sub	r1, r0, #65	; 0x41
   1e350:	cmp	r1, #26
   1e354:	bcc	1e370 <__assert_fail@plt+0xd374>
   1e358:	b	1e35c <__assert_fail@plt+0xd360>
   1e35c:	ldr	r0, [sp]
   1e360:	sub	r1, r0, #97	; 0x61
   1e364:	cmp	r1, #25
   1e368:	bhi	1e380 <__assert_fail@plt+0xd384>
   1e36c:	b	1e370 <__assert_fail@plt+0xd374>
   1e370:	movw	r0, #1
   1e374:	and	r0, r0, #1
   1e378:	strb	r0, [sp, #11]
   1e37c:	b	1e38c <__assert_fail@plt+0xd390>
   1e380:	movw	r0, #0
   1e384:	and	r0, r0, #1
   1e388:	strb	r0, [sp, #11]
   1e38c:	ldrb	r0, [sp, #11]
   1e390:	and	r0, r0, #1
   1e394:	add	sp, sp, #12
   1e398:	bx	lr
   1e39c:	sub	sp, sp, #12
   1e3a0:	str	r0, [sp, #4]
   1e3a4:	ldr	r0, [sp, #4]
   1e3a8:	sub	r1, r0, #65	; 0x41
   1e3ac:	cmp	r1, #26
   1e3b0:	str	r0, [sp]
   1e3b4:	bcc	1e3d0 <__assert_fail@plt+0xd3d4>
   1e3b8:	b	1e3bc <__assert_fail@plt+0xd3c0>
   1e3bc:	ldr	r0, [sp]
   1e3c0:	sub	r1, r0, #97	; 0x61
   1e3c4:	cmp	r1, #25
   1e3c8:	bhi	1e3e0 <__assert_fail@plt+0xd3e4>
   1e3cc:	b	1e3d0 <__assert_fail@plt+0xd3d4>
   1e3d0:	movw	r0, #1
   1e3d4:	and	r0, r0, #1
   1e3d8:	strb	r0, [sp, #11]
   1e3dc:	b	1e3ec <__assert_fail@plt+0xd3f0>
   1e3e0:	movw	r0, #0
   1e3e4:	and	r0, r0, #1
   1e3e8:	strb	r0, [sp, #11]
   1e3ec:	ldrb	r0, [sp, #11]
   1e3f0:	and	r0, r0, #1
   1e3f4:	add	sp, sp, #12
   1e3f8:	bx	lr
   1e3fc:	sub	sp, sp, #8
   1e400:	str	r0, [sp]
   1e404:	ldr	r0, [sp]
   1e408:	cmp	r0, #127	; 0x7f
   1e40c:	bhi	1e424 <__assert_fail@plt+0xd428>
   1e410:	b	1e414 <__assert_fail@plt+0xd418>
   1e414:	movw	r0, #1
   1e418:	and	r0, r0, #1
   1e41c:	strb	r0, [sp, #7]
   1e420:	b	1e430 <__assert_fail@plt+0xd434>
   1e424:	movw	r0, #0
   1e428:	and	r0, r0, #1
   1e42c:	strb	r0, [sp, #7]
   1e430:	ldrb	r0, [sp, #7]
   1e434:	and	r0, r0, #1
   1e438:	add	sp, sp, #8
   1e43c:	bx	lr
   1e440:	sub	sp, sp, #8
   1e444:	str	r0, [sp, #4]
   1e448:	ldr	r0, [sp, #4]
   1e44c:	cmp	r0, #32
   1e450:	movw	r0, #1
   1e454:	str	r0, [sp]
   1e458:	beq	1e470 <__assert_fail@plt+0xd474>
   1e45c:	ldr	r0, [sp, #4]
   1e460:	cmp	r0, #9
   1e464:	movw	r0, #0
   1e468:	moveq	r0, #1
   1e46c:	str	r0, [sp]
   1e470:	ldr	r0, [sp]
   1e474:	and	r0, r0, #1
   1e478:	add	sp, sp, #8
   1e47c:	bx	lr
   1e480:	sub	sp, sp, #12
   1e484:	str	r0, [sp, #4]
   1e488:	ldr	r0, [sp, #4]
   1e48c:	cmp	r0, #32
   1e490:	str	r0, [sp]
   1e494:	bcc	1e4ac <__assert_fail@plt+0xd4b0>
   1e498:	b	1e49c <__assert_fail@plt+0xd4a0>
   1e49c:	ldr	r0, [sp]
   1e4a0:	cmp	r0, #127	; 0x7f
   1e4a4:	bne	1e4bc <__assert_fail@plt+0xd4c0>
   1e4a8:	b	1e4ac <__assert_fail@plt+0xd4b0>
   1e4ac:	movw	r0, #1
   1e4b0:	and	r0, r0, #1
   1e4b4:	strb	r0, [sp, #11]
   1e4b8:	b	1e4c8 <__assert_fail@plt+0xd4cc>
   1e4bc:	movw	r0, #0
   1e4c0:	and	r0, r0, #1
   1e4c4:	strb	r0, [sp, #11]
   1e4c8:	ldrb	r0, [sp, #11]
   1e4cc:	and	r0, r0, #1
   1e4d0:	add	sp, sp, #12
   1e4d4:	bx	lr
   1e4d8:	sub	sp, sp, #8
   1e4dc:	str	r0, [sp]
   1e4e0:	ldr	r0, [sp]
   1e4e4:	sub	r0, r0, #48	; 0x30
   1e4e8:	cmp	r0, #9
   1e4ec:	bhi	1e504 <__assert_fail@plt+0xd508>
   1e4f0:	b	1e4f4 <__assert_fail@plt+0xd4f8>
   1e4f4:	movw	r0, #1
   1e4f8:	and	r0, r0, #1
   1e4fc:	strb	r0, [sp, #7]
   1e500:	b	1e510 <__assert_fail@plt+0xd514>
   1e504:	movw	r0, #0
   1e508:	and	r0, r0, #1
   1e50c:	strb	r0, [sp, #7]
   1e510:	ldrb	r0, [sp, #7]
   1e514:	and	r0, r0, #1
   1e518:	add	sp, sp, #8
   1e51c:	bx	lr
   1e520:	sub	sp, sp, #8
   1e524:	str	r0, [sp]
   1e528:	ldr	r0, [sp]
   1e52c:	sub	r0, r0, #33	; 0x21
   1e530:	cmp	r0, #93	; 0x5d
   1e534:	bhi	1e54c <__assert_fail@plt+0xd550>
   1e538:	b	1e53c <__assert_fail@plt+0xd540>
   1e53c:	movw	r0, #1
   1e540:	and	r0, r0, #1
   1e544:	strb	r0, [sp, #7]
   1e548:	b	1e558 <__assert_fail@plt+0xd55c>
   1e54c:	movw	r0, #0
   1e550:	and	r0, r0, #1
   1e554:	strb	r0, [sp, #7]
   1e558:	ldrb	r0, [sp, #7]
   1e55c:	and	r0, r0, #1
   1e560:	add	sp, sp, #8
   1e564:	bx	lr
   1e568:	sub	sp, sp, #8
   1e56c:	str	r0, [sp]
   1e570:	ldr	r0, [sp]
   1e574:	sub	r0, r0, #97	; 0x61
   1e578:	cmp	r0, #25
   1e57c:	bhi	1e594 <__assert_fail@plt+0xd598>
   1e580:	b	1e584 <__assert_fail@plt+0xd588>
   1e584:	movw	r0, #1
   1e588:	and	r0, r0, #1
   1e58c:	strb	r0, [sp, #7]
   1e590:	b	1e5a0 <__assert_fail@plt+0xd5a4>
   1e594:	movw	r0, #0
   1e598:	and	r0, r0, #1
   1e59c:	strb	r0, [sp, #7]
   1e5a0:	ldrb	r0, [sp, #7]
   1e5a4:	and	r0, r0, #1
   1e5a8:	add	sp, sp, #8
   1e5ac:	bx	lr
   1e5b0:	sub	sp, sp, #8
   1e5b4:	str	r0, [sp]
   1e5b8:	ldr	r0, [sp]
   1e5bc:	sub	r0, r0, #32
   1e5c0:	cmp	r0, #94	; 0x5e
   1e5c4:	bhi	1e5dc <__assert_fail@plt+0xd5e0>
   1e5c8:	b	1e5cc <__assert_fail@plt+0xd5d0>
   1e5cc:	movw	r0, #1
   1e5d0:	and	r0, r0, #1
   1e5d4:	strb	r0, [sp, #7]
   1e5d8:	b	1e5e8 <__assert_fail@plt+0xd5ec>
   1e5dc:	movw	r0, #0
   1e5e0:	and	r0, r0, #1
   1e5e4:	strb	r0, [sp, #7]
   1e5e8:	ldrb	r0, [sp, #7]
   1e5ec:	and	r0, r0, #1
   1e5f0:	add	sp, sp, #8
   1e5f4:	bx	lr
   1e5f8:	sub	sp, sp, #12
   1e5fc:	str	r0, [sp, #4]
   1e600:	ldr	r0, [sp, #4]
   1e604:	sub	r0, r0, #33	; 0x21
   1e608:	cmp	r0, #93	; 0x5d
   1e60c:	str	r0, [sp]
   1e610:	bhi	1e7ac <__assert_fail@plt+0xd7b0>
   1e614:	add	r0, pc, #8
   1e618:	ldr	r1, [sp]
   1e61c:	ldr	r0, [r0, r1, lsl #2]
   1e620:	mov	pc, r0
   1e624:	muleq	r1, ip, r7
   1e628:	muleq	r1, ip, r7
   1e62c:	muleq	r1, ip, r7
   1e630:	muleq	r1, ip, r7
   1e634:	muleq	r1, ip, r7
   1e638:	muleq	r1, ip, r7
   1e63c:	muleq	r1, ip, r7
   1e640:	muleq	r1, ip, r7
   1e644:	muleq	r1, ip, r7
   1e648:	muleq	r1, ip, r7
   1e64c:	muleq	r1, ip, r7
   1e650:	muleq	r1, ip, r7
   1e654:	muleq	r1, ip, r7
   1e658:	muleq	r1, ip, r7
   1e65c:	muleq	r1, ip, r7
   1e660:	andeq	lr, r1, ip, lsr #15
   1e664:	andeq	lr, r1, ip, lsr #15
   1e668:	andeq	lr, r1, ip, lsr #15
   1e66c:	andeq	lr, r1, ip, lsr #15
   1e670:	andeq	lr, r1, ip, lsr #15
   1e674:	andeq	lr, r1, ip, lsr #15
   1e678:	andeq	lr, r1, ip, lsr #15
   1e67c:	andeq	lr, r1, ip, lsr #15
   1e680:	andeq	lr, r1, ip, lsr #15
   1e684:	andeq	lr, r1, ip, lsr #15
   1e688:	muleq	r1, ip, r7
   1e68c:	muleq	r1, ip, r7
   1e690:	muleq	r1, ip, r7
   1e694:	muleq	r1, ip, r7
   1e698:	muleq	r1, ip, r7
   1e69c:	muleq	r1, ip, r7
   1e6a0:	muleq	r1, ip, r7
   1e6a4:	andeq	lr, r1, ip, lsr #15
   1e6a8:	andeq	lr, r1, ip, lsr #15
   1e6ac:	andeq	lr, r1, ip, lsr #15
   1e6b0:	andeq	lr, r1, ip, lsr #15
   1e6b4:	andeq	lr, r1, ip, lsr #15
   1e6b8:	andeq	lr, r1, ip, lsr #15
   1e6bc:	andeq	lr, r1, ip, lsr #15
   1e6c0:	andeq	lr, r1, ip, lsr #15
   1e6c4:	andeq	lr, r1, ip, lsr #15
   1e6c8:	andeq	lr, r1, ip, lsr #15
   1e6cc:	andeq	lr, r1, ip, lsr #15
   1e6d0:	andeq	lr, r1, ip, lsr #15
   1e6d4:	andeq	lr, r1, ip, lsr #15
   1e6d8:	andeq	lr, r1, ip, lsr #15
   1e6dc:	andeq	lr, r1, ip, lsr #15
   1e6e0:	andeq	lr, r1, ip, lsr #15
   1e6e4:	andeq	lr, r1, ip, lsr #15
   1e6e8:	andeq	lr, r1, ip, lsr #15
   1e6ec:	andeq	lr, r1, ip, lsr #15
   1e6f0:	andeq	lr, r1, ip, lsr #15
   1e6f4:	andeq	lr, r1, ip, lsr #15
   1e6f8:	andeq	lr, r1, ip, lsr #15
   1e6fc:	andeq	lr, r1, ip, lsr #15
   1e700:	andeq	lr, r1, ip, lsr #15
   1e704:	andeq	lr, r1, ip, lsr #15
   1e708:	andeq	lr, r1, ip, lsr #15
   1e70c:	muleq	r1, ip, r7
   1e710:	muleq	r1, ip, r7
   1e714:	muleq	r1, ip, r7
   1e718:	muleq	r1, ip, r7
   1e71c:	muleq	r1, ip, r7
   1e720:	muleq	r1, ip, r7
   1e724:	andeq	lr, r1, ip, lsr #15
   1e728:	andeq	lr, r1, ip, lsr #15
   1e72c:	andeq	lr, r1, ip, lsr #15
   1e730:	andeq	lr, r1, ip, lsr #15
   1e734:	andeq	lr, r1, ip, lsr #15
   1e738:	andeq	lr, r1, ip, lsr #15
   1e73c:	andeq	lr, r1, ip, lsr #15
   1e740:	andeq	lr, r1, ip, lsr #15
   1e744:	andeq	lr, r1, ip, lsr #15
   1e748:	andeq	lr, r1, ip, lsr #15
   1e74c:	andeq	lr, r1, ip, lsr #15
   1e750:	andeq	lr, r1, ip, lsr #15
   1e754:	andeq	lr, r1, ip, lsr #15
   1e758:	andeq	lr, r1, ip, lsr #15
   1e75c:	andeq	lr, r1, ip, lsr #15
   1e760:	andeq	lr, r1, ip, lsr #15
   1e764:	andeq	lr, r1, ip, lsr #15
   1e768:	andeq	lr, r1, ip, lsr #15
   1e76c:	andeq	lr, r1, ip, lsr #15
   1e770:	andeq	lr, r1, ip, lsr #15
   1e774:	andeq	lr, r1, ip, lsr #15
   1e778:	andeq	lr, r1, ip, lsr #15
   1e77c:	andeq	lr, r1, ip, lsr #15
   1e780:	andeq	lr, r1, ip, lsr #15
   1e784:	andeq	lr, r1, ip, lsr #15
   1e788:	andeq	lr, r1, ip, lsr #15
   1e78c:	muleq	r1, ip, r7
   1e790:	muleq	r1, ip, r7
   1e794:	muleq	r1, ip, r7
   1e798:	muleq	r1, ip, r7
   1e79c:	movw	r0, #1
   1e7a0:	and	r0, r0, #1
   1e7a4:	strb	r0, [sp, #11]
   1e7a8:	b	1e7b8 <__assert_fail@plt+0xd7bc>
   1e7ac:	movw	r0, #0
   1e7b0:	and	r0, r0, #1
   1e7b4:	strb	r0, [sp, #11]
   1e7b8:	ldrb	r0, [sp, #11]
   1e7bc:	and	r0, r0, #1
   1e7c0:	add	sp, sp, #12
   1e7c4:	bx	lr
   1e7c8:	sub	sp, sp, #12
   1e7cc:	str	r0, [sp, #4]
   1e7d0:	ldr	r0, [sp, #4]
   1e7d4:	sub	r1, r0, #9
   1e7d8:	cmp	r1, #5
   1e7dc:	str	r0, [sp]
   1e7e0:	bcc	1e7f8 <__assert_fail@plt+0xd7fc>
   1e7e4:	b	1e7e8 <__assert_fail@plt+0xd7ec>
   1e7e8:	ldr	r0, [sp]
   1e7ec:	cmp	r0, #32
   1e7f0:	bne	1e808 <__assert_fail@plt+0xd80c>
   1e7f4:	b	1e7f8 <__assert_fail@plt+0xd7fc>
   1e7f8:	movw	r0, #1
   1e7fc:	and	r0, r0, #1
   1e800:	strb	r0, [sp, #11]
   1e804:	b	1e814 <__assert_fail@plt+0xd818>
   1e808:	movw	r0, #0
   1e80c:	and	r0, r0, #1
   1e810:	strb	r0, [sp, #11]
   1e814:	ldrb	r0, [sp, #11]
   1e818:	and	r0, r0, #1
   1e81c:	add	sp, sp, #12
   1e820:	bx	lr
   1e824:	sub	sp, sp, #8
   1e828:	str	r0, [sp]
   1e82c:	ldr	r0, [sp]
   1e830:	sub	r0, r0, #65	; 0x41
   1e834:	cmp	r0, #25
   1e838:	bhi	1e850 <__assert_fail@plt+0xd854>
   1e83c:	b	1e840 <__assert_fail@plt+0xd844>
   1e840:	movw	r0, #1
   1e844:	and	r0, r0, #1
   1e848:	strb	r0, [sp, #7]
   1e84c:	b	1e85c <__assert_fail@plt+0xd860>
   1e850:	movw	r0, #0
   1e854:	and	r0, r0, #1
   1e858:	strb	r0, [sp, #7]
   1e85c:	ldrb	r0, [sp, #7]
   1e860:	and	r0, r0, #1
   1e864:	add	sp, sp, #8
   1e868:	bx	lr
   1e86c:	sub	sp, sp, #12
   1e870:	str	r0, [sp, #4]
   1e874:	ldr	r0, [sp, #4]
   1e878:	sub	r1, r0, #48	; 0x30
   1e87c:	cmp	r1, #10
   1e880:	str	r0, [sp]
   1e884:	bcc	1e8b4 <__assert_fail@plt+0xd8b8>
   1e888:	b	1e88c <__assert_fail@plt+0xd890>
   1e88c:	ldr	r0, [sp]
   1e890:	sub	r1, r0, #65	; 0x41
   1e894:	cmp	r1, #6
   1e898:	bcc	1e8b4 <__assert_fail@plt+0xd8b8>
   1e89c:	b	1e8a0 <__assert_fail@plt+0xd8a4>
   1e8a0:	ldr	r0, [sp]
   1e8a4:	sub	r1, r0, #97	; 0x61
   1e8a8:	cmp	r1, #5
   1e8ac:	bhi	1e8c4 <__assert_fail@plt+0xd8c8>
   1e8b0:	b	1e8b4 <__assert_fail@plt+0xd8b8>
   1e8b4:	movw	r0, #1
   1e8b8:	and	r0, r0, #1
   1e8bc:	strb	r0, [sp, #11]
   1e8c0:	b	1e8d0 <__assert_fail@plt+0xd8d4>
   1e8c4:	movw	r0, #0
   1e8c8:	and	r0, r0, #1
   1e8cc:	strb	r0, [sp, #11]
   1e8d0:	ldrb	r0, [sp, #11]
   1e8d4:	and	r0, r0, #1
   1e8d8:	add	sp, sp, #12
   1e8dc:	bx	lr
   1e8e0:	sub	sp, sp, #8
   1e8e4:	str	r0, [sp]
   1e8e8:	ldr	r0, [sp]
   1e8ec:	sub	r0, r0, #65	; 0x41
   1e8f0:	cmp	r0, #25
   1e8f4:	bhi	1e910 <__assert_fail@plt+0xd914>
   1e8f8:	b	1e8fc <__assert_fail@plt+0xd900>
   1e8fc:	ldr	r0, [sp]
   1e900:	sub	r0, r0, #65	; 0x41
   1e904:	add	r0, r0, #97	; 0x61
   1e908:	str	r0, [sp, #4]
   1e90c:	b	1e918 <__assert_fail@plt+0xd91c>
   1e910:	ldr	r0, [sp]
   1e914:	str	r0, [sp, #4]
   1e918:	ldr	r0, [sp, #4]
   1e91c:	add	sp, sp, #8
   1e920:	bx	lr
   1e924:	sub	sp, sp, #8
   1e928:	str	r0, [sp]
   1e92c:	ldr	r0, [sp]
   1e930:	sub	r0, r0, #97	; 0x61
   1e934:	cmp	r0, #25
   1e938:	bhi	1e954 <__assert_fail@plt+0xd958>
   1e93c:	b	1e940 <__assert_fail@plt+0xd944>
   1e940:	ldr	r0, [sp]
   1e944:	sub	r0, r0, #97	; 0x61
   1e948:	add	r0, r0, #65	; 0x41
   1e94c:	str	r0, [sp, #4]
   1e950:	b	1e95c <__assert_fail@plt+0xd960>
   1e954:	ldr	r0, [sp]
   1e958:	str	r0, [sp, #4]
   1e95c:	ldr	r0, [sp, #4]
   1e960:	add	sp, sp, #8
   1e964:	bx	lr
   1e968:	push	{r4, r5, fp, lr}
   1e96c:	add	fp, sp, #8
   1e970:	sub	sp, sp, #272	; 0x110
   1e974:	add	r1, sp, #7
   1e978:	str	r0, [fp, #-16]
   1e97c:	ldr	r0, [fp, #-16]
   1e980:	movw	r2, #257	; 0x101
   1e984:	bl	1ea04 <__assert_fail@plt+0xda08>
   1e988:	cmp	r0, #0
   1e98c:	beq	1e9a0 <__assert_fail@plt+0xd9a4>
   1e990:	movw	r0, #0
   1e994:	and	r0, r0, #1
   1e998:	strb	r0, [fp, #-9]
   1e99c:	b	1e9f4 <__assert_fail@plt+0xd9f8>
   1e9a0:	add	r0, sp, #7
   1e9a4:	movw	r1, #64479	; 0xfbdf
   1e9a8:	movt	r1, #1
   1e9ac:	bl	10dc8 <strcmp@plt>
   1e9b0:	cmp	r0, #0
   1e9b4:	movw	r0, #1
   1e9b8:	str	r0, [sp]
   1e9bc:	beq	1e9e0 <__assert_fail@plt+0xd9e4>
   1e9c0:	add	r0, sp, #7
   1e9c4:	movw	r1, #64481	; 0xfbe1
   1e9c8:	movt	r1, #1
   1e9cc:	bl	10dc8 <strcmp@plt>
   1e9d0:	cmp	r0, #0
   1e9d4:	movw	r0, #0
   1e9d8:	moveq	r0, #1
   1e9dc:	str	r0, [sp]
   1e9e0:	ldr	r0, [sp]
   1e9e4:	mvn	r1, #0
   1e9e8:	eor	r0, r0, r1
   1e9ec:	and	r0, r0, #1
   1e9f0:	strb	r0, [fp, #-9]
   1e9f4:	ldrb	r0, [fp, #-9]
   1e9f8:	and	r0, r0, #1
   1e9fc:	sub	sp, fp, #8
   1ea00:	pop	{r4, r5, fp, pc}
   1ea04:	push	{fp, lr}
   1ea08:	mov	fp, sp
   1ea0c:	sub	sp, sp, #16
   1ea10:	str	r0, [fp, #-4]
   1ea14:	str	r1, [sp, #8]
   1ea18:	str	r2, [sp, #4]
   1ea1c:	ldr	r0, [fp, #-4]
   1ea20:	ldr	r1, [sp, #8]
   1ea24:	ldr	r2, [sp, #4]
   1ea28:	bl	1ea34 <__assert_fail@plt+0xda38>
   1ea2c:	mov	sp, fp
   1ea30:	pop	{fp, pc}
   1ea34:	push	{fp, lr}
   1ea38:	mov	fp, sp
   1ea3c:	sub	sp, sp, #24
   1ea40:	str	r0, [fp, #-8]
   1ea44:	str	r1, [sp, #12]
   1ea48:	str	r2, [sp, #8]
   1ea4c:	ldr	r0, [fp, #-8]
   1ea50:	bl	1eb34 <__assert_fail@plt+0xdb38>
   1ea54:	str	r0, [sp, #4]
   1ea58:	ldr	r0, [sp, #4]
   1ea5c:	movw	r1, #0
   1ea60:	cmp	r0, r1
   1ea64:	bne	1ea8c <__assert_fail@plt+0xda90>
   1ea68:	ldr	r0, [sp, #8]
   1ea6c:	cmp	r0, #0
   1ea70:	bls	1ea80 <__assert_fail@plt+0xda84>
   1ea74:	ldr	r0, [sp, #12]
   1ea78:	movw	r1, #0
   1ea7c:	strb	r1, [r0]
   1ea80:	movw	r0, #22
   1ea84:	str	r0, [fp, #-4]
   1ea88:	b	1eb08 <__assert_fail@plt+0xdb0c>
   1ea8c:	ldr	r0, [sp, #4]
   1ea90:	bl	10f18 <strlen@plt>
   1ea94:	str	r0, [sp]
   1ea98:	ldr	r0, [sp]
   1ea9c:	ldr	lr, [sp, #8]
   1eaa0:	cmp	r0, lr
   1eaa4:	bcs	1eac8 <__assert_fail@plt+0xdacc>
   1eaa8:	ldr	r0, [sp, #12]
   1eaac:	ldr	r1, [sp, #4]
   1eab0:	ldr	r2, [sp]
   1eab4:	add	r2, r2, #1
   1eab8:	bl	10e04 <memcpy@plt>
   1eabc:	movw	r0, #0
   1eac0:	str	r0, [fp, #-4]
   1eac4:	b	1eb08 <__assert_fail@plt+0xdb0c>
   1eac8:	ldr	r0, [sp, #8]
   1eacc:	cmp	r0, #0
   1ead0:	bls	1eb00 <__assert_fail@plt+0xdb04>
   1ead4:	ldr	r0, [sp, #12]
   1ead8:	ldr	r1, [sp, #4]
   1eadc:	ldr	r2, [sp, #8]
   1eae0:	sub	r2, r2, #1
   1eae4:	bl	10e04 <memcpy@plt>
   1eae8:	ldr	r0, [sp, #12]
   1eaec:	ldr	r1, [sp, #8]
   1eaf0:	sub	r1, r1, #1
   1eaf4:	add	r0, r0, r1
   1eaf8:	movw	r1, #0
   1eafc:	strb	r1, [r0]
   1eb00:	movw	r0, #34	; 0x22
   1eb04:	str	r0, [fp, #-4]
   1eb08:	ldr	r0, [fp, #-4]
   1eb0c:	mov	sp, fp
   1eb10:	pop	{fp, pc}
   1eb14:	push	{fp, lr}
   1eb18:	mov	fp, sp
   1eb1c:	sub	sp, sp, #8
   1eb20:	str	r0, [sp, #4]
   1eb24:	ldr	r0, [sp, #4]
   1eb28:	bl	1eb34 <__assert_fail@plt+0xdb38>
   1eb2c:	mov	sp, fp
   1eb30:	pop	{fp, pc}
   1eb34:	push	{fp, lr}
   1eb38:	mov	fp, sp
   1eb3c:	sub	sp, sp, #8
   1eb40:	str	r0, [sp, #4]
   1eb44:	ldr	r0, [sp, #4]
   1eb48:	movw	r1, #0
   1eb4c:	bl	10f90 <setlocale@plt>
   1eb50:	str	r0, [sp]
   1eb54:	ldr	r0, [sp]
   1eb58:	mov	sp, fp
   1eb5c:	pop	{fp, pc}
   1eb60:	cmp	r3, #0
   1eb64:	cmpeq	r2, #0
   1eb68:	bne	1eb8c <__assert_fail@plt+0xdb90>
   1eb6c:	cmp	r1, #0
   1eb70:	movlt	r1, #-2147483648	; 0x80000000
   1eb74:	movlt	r0, #0
   1eb78:	blt	1eb88 <__assert_fail@plt+0xdb8c>
   1eb7c:	cmpeq	r0, #0
   1eb80:	mvnne	r1, #-2147483648	; 0x80000000
   1eb84:	mvnne	r0, #0
   1eb88:	b	1ec70 <__assert_fail@plt+0xdc74>
   1eb8c:	sub	sp, sp, #8
   1eb90:	push	{sp, lr}
   1eb94:	cmp	r1, #0
   1eb98:	blt	1ebb8 <__assert_fail@plt+0xdbbc>
   1eb9c:	cmp	r3, #0
   1eba0:	blt	1ebec <__assert_fail@plt+0xdbf0>
   1eba4:	bl	1ec80 <__assert_fail@plt+0xdc84>
   1eba8:	ldr	lr, [sp, #4]
   1ebac:	add	sp, sp, #8
   1ebb0:	pop	{r2, r3}
   1ebb4:	bx	lr
   1ebb8:	rsbs	r0, r0, #0
   1ebbc:	sbc	r1, r1, r1, lsl #1
   1ebc0:	cmp	r3, #0
   1ebc4:	blt	1ec10 <__assert_fail@plt+0xdc14>
   1ebc8:	bl	1ec80 <__assert_fail@plt+0xdc84>
   1ebcc:	ldr	lr, [sp, #4]
   1ebd0:	add	sp, sp, #8
   1ebd4:	pop	{r2, r3}
   1ebd8:	rsbs	r0, r0, #0
   1ebdc:	sbc	r1, r1, r1, lsl #1
   1ebe0:	rsbs	r2, r2, #0
   1ebe4:	sbc	r3, r3, r3, lsl #1
   1ebe8:	bx	lr
   1ebec:	rsbs	r2, r2, #0
   1ebf0:	sbc	r3, r3, r3, lsl #1
   1ebf4:	bl	1ec80 <__assert_fail@plt+0xdc84>
   1ebf8:	ldr	lr, [sp, #4]
   1ebfc:	add	sp, sp, #8
   1ec00:	pop	{r2, r3}
   1ec04:	rsbs	r0, r0, #0
   1ec08:	sbc	r1, r1, r1, lsl #1
   1ec0c:	bx	lr
   1ec10:	rsbs	r2, r2, #0
   1ec14:	sbc	r3, r3, r3, lsl #1
   1ec18:	bl	1ec80 <__assert_fail@plt+0xdc84>
   1ec1c:	ldr	lr, [sp, #4]
   1ec20:	add	sp, sp, #8
   1ec24:	pop	{r2, r3}
   1ec28:	rsbs	r2, r2, #0
   1ec2c:	sbc	r3, r3, r3, lsl #1
   1ec30:	bx	lr
   1ec34:	cmp	r3, #0
   1ec38:	cmpeq	r2, #0
   1ec3c:	bne	1ec54 <__assert_fail@plt+0xdc58>
   1ec40:	cmp	r1, #0
   1ec44:	cmpeq	r0, #0
   1ec48:	mvnne	r1, #0
   1ec4c:	mvnne	r0, #0
   1ec50:	b	1ec70 <__assert_fail@plt+0xdc74>
   1ec54:	sub	sp, sp, #8
   1ec58:	push	{sp, lr}
   1ec5c:	bl	1ec80 <__assert_fail@plt+0xdc84>
   1ec60:	ldr	lr, [sp, #4]
   1ec64:	add	sp, sp, #8
   1ec68:	pop	{r2, r3}
   1ec6c:	bx	lr
   1ec70:	push	{r1, lr}
   1ec74:	mov	r0, #8
   1ec78:	bl	10dbc <raise@plt>
   1ec7c:	pop	{r1, pc}
   1ec80:	cmp	r1, r3
   1ec84:	cmpeq	r0, r2
   1ec88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec8c:	mov	r4, r0
   1ec90:	movcc	r0, #0
   1ec94:	mov	r5, r1
   1ec98:	ldr	lr, [sp, #36]	; 0x24
   1ec9c:	movcc	r1, r0
   1eca0:	bcc	1ed9c <__assert_fail@plt+0xdda0>
   1eca4:	cmp	r3, #0
   1eca8:	clzeq	ip, r2
   1ecac:	clzne	ip, r3
   1ecb0:	addeq	ip, ip, #32
   1ecb4:	cmp	r5, #0
   1ecb8:	clzeq	r1, r4
   1ecbc:	addeq	r1, r1, #32
   1ecc0:	clzne	r1, r5
   1ecc4:	sub	ip, ip, r1
   1ecc8:	sub	sl, ip, #32
   1eccc:	lsl	r9, r3, ip
   1ecd0:	rsb	fp, ip, #32
   1ecd4:	orr	r9, r9, r2, lsl sl
   1ecd8:	orr	r9, r9, r2, lsr fp
   1ecdc:	lsl	r8, r2, ip
   1ece0:	cmp	r5, r9
   1ece4:	cmpeq	r4, r8
   1ece8:	movcc	r0, #0
   1ecec:	movcc	r1, r0
   1ecf0:	bcc	1ed0c <__assert_fail@plt+0xdd10>
   1ecf4:	mov	r0, #1
   1ecf8:	subs	r4, r4, r8
   1ecfc:	lsl	r1, r0, sl
   1ed00:	orr	r1, r1, r0, lsr fp
   1ed04:	lsl	r0, r0, ip
   1ed08:	sbc	r5, r5, r9
   1ed0c:	cmp	ip, #0
   1ed10:	beq	1ed9c <__assert_fail@plt+0xdda0>
   1ed14:	lsr	r6, r8, #1
   1ed18:	orr	r6, r6, r9, lsl #31
   1ed1c:	lsr	r7, r9, #1
   1ed20:	mov	r2, ip
   1ed24:	b	1ed48 <__assert_fail@plt+0xdd4c>
   1ed28:	subs	r3, r4, r6
   1ed2c:	sbc	r8, r5, r7
   1ed30:	adds	r3, r3, r3
   1ed34:	adc	r8, r8, r8
   1ed38:	adds	r4, r3, #1
   1ed3c:	adc	r5, r8, #0
   1ed40:	subs	r2, r2, #1
   1ed44:	beq	1ed64 <__assert_fail@plt+0xdd68>
   1ed48:	cmp	r5, r7
   1ed4c:	cmpeq	r4, r6
   1ed50:	bcs	1ed28 <__assert_fail@plt+0xdd2c>
   1ed54:	adds	r4, r4, r4
   1ed58:	adc	r5, r5, r5
   1ed5c:	subs	r2, r2, #1
   1ed60:	bne	1ed48 <__assert_fail@plt+0xdd4c>
   1ed64:	lsr	r3, r4, ip
   1ed68:	orr	r3, r3, r5, lsl fp
   1ed6c:	lsr	r2, r5, ip
   1ed70:	orr	r3, r3, r5, lsr sl
   1ed74:	adds	r0, r0, r4
   1ed78:	mov	r4, r3
   1ed7c:	lsl	r3, r2, ip
   1ed80:	orr	r3, r3, r4, lsl sl
   1ed84:	lsl	ip, r4, ip
   1ed88:	orr	r3, r3, r4, lsr fp
   1ed8c:	adc	r1, r1, r5
   1ed90:	subs	r0, r0, ip
   1ed94:	mov	r5, r2
   1ed98:	sbc	r1, r1, r3
   1ed9c:	cmp	lr, #0
   1eda0:	strdne	r4, [lr]
   1eda4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eda8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1edac:	mov	r7, r0
   1edb0:	ldr	r6, [pc, #72]	; 1ee00 <__assert_fail@plt+0xde04>
   1edb4:	ldr	r5, [pc, #72]	; 1ee04 <__assert_fail@plt+0xde08>
   1edb8:	add	r6, pc, r6
   1edbc:	add	r5, pc, r5
   1edc0:	sub	r6, r6, r5
   1edc4:	mov	r8, r1
   1edc8:	mov	r9, r2
   1edcc:	bl	10d84 <calloc@plt-0x20>
   1edd0:	asrs	r6, r6, #2
   1edd4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1edd8:	mov	r4, #0
   1eddc:	add	r4, r4, #1
   1ede0:	ldr	r3, [r5], #4
   1ede4:	mov	r2, r9
   1ede8:	mov	r1, r8
   1edec:	mov	r0, r7
   1edf0:	blx	r3
   1edf4:	cmp	r6, r4
   1edf8:	bne	1eddc <__assert_fail@plt+0xdde0>
   1edfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee00:	andeq	r1, r1, ip, asr #2
   1ee04:	andeq	r1, r1, r4, asr #2
   1ee08:	bx	lr
   1ee0c:	ldr	r3, [pc, #12]	; 1ee20 <__assert_fail@plt+0xde24>
   1ee10:	mov	r1, #0
   1ee14:	add	r3, pc, r3
   1ee18:	ldr	r2, [r3]
   1ee1c:	b	10f48 <__cxa_atexit@plt>
   1ee20:	andeq	r1, r1, r4, asr #5
   1ee24:	mov	r2, r1
   1ee28:	mov	r1, r0
   1ee2c:	mov	r0, #3
   1ee30:	b	10fc0 <__xstat64@plt>
   1ee34:	mov	r2, r1
   1ee38:	mov	r1, r0
   1ee3c:	mov	r0, #3
   1ee40:	b	10e58 <__fxstat64@plt>

Disassembly of section .fini:

0001ee44 <.fini>:
   1ee44:	push	{r3, lr}
   1ee48:	pop	{r3, pc}
