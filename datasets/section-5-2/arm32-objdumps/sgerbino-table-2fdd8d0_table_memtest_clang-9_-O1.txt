
../repos/sgerbino-table-2fdd8d0/bin/table_memtest:     file format elf32-littlearm


Disassembly of section .init:

00011ec0 <.init>:
   11ec0:	push	{r3, lr}
   11ec4:	bl	11fc4 <_start@@Base+0x3c>
   11ec8:	pop	{r3, pc}

Disassembly of section .plt:

00011ecc <strcmp@plt-0x14>:
   11ecc:	push	{lr}		; (str lr, [sp, #-4]!)
   11ed0:	ldr	lr, [pc, #4]	; 11edc <strcmp@plt-0x4>
   11ed4:	add	lr, pc, lr
   11ed8:	ldr	pc, [lr, #8]!
   11edc:	andeq	r3, r1, r4, lsr #2

00011ee0 <strcmp@plt>:
   11ee0:	add	ip, pc, #0, 12
   11ee4:	add	ip, ip, #77824	; 0x13000
   11ee8:	ldr	pc, [ip, #292]!	; 0x124

00011eec <free@plt>:
   11eec:	add	ip, pc, #0, 12
   11ef0:	add	ip, ip, #77824	; 0x13000
   11ef4:	ldr	pc, [ip, #284]!	; 0x11c

00011ef8 <time@plt>:
   11ef8:	add	ip, pc, #0, 12
   11efc:	add	ip, ip, #77824	; 0x13000
   11f00:	ldr	pc, [ip, #276]!	; 0x114

00011f04 <realloc@plt>:
   11f04:	add	ip, pc, #0, 12
   11f08:	add	ip, ip, #77824	; 0x13000
   11f0c:	ldr	pc, [ip, #268]!	; 0x10c

00011f10 <strcpy@plt>:
   11f10:	add	ip, pc, #0, 12
   11f14:	add	ip, ip, #77824	; 0x13000
   11f18:	ldr	pc, [ip, #260]!	; 0x104

00011f1c <malloc@plt>:
   11f1c:	add	ip, pc, #0, 12
   11f20:	add	ip, ip, #77824	; 0x13000
   11f24:	ldr	pc, [ip, #252]!	; 0xfc

00011f28 <__libc_start_main@plt>:
   11f28:	add	ip, pc, #0, 12
   11f2c:	add	ip, ip, #77824	; 0x13000
   11f30:	ldr	pc, [ip, #244]!	; 0xf4

00011f34 <__gmon_start__@plt>:
   11f34:	add	ip, pc, #0, 12
   11f38:	add	ip, ip, #77824	; 0x13000
   11f3c:	ldr	pc, [ip, #236]!	; 0xec

00011f40 <strlen@plt>:
   11f40:	add	ip, pc, #0, 12
   11f44:	add	ip, ip, #77824	; 0x13000
   11f48:	ldr	pc, [ip, #228]!	; 0xe4

00011f4c <srand@plt>:
   11f4c:	add	ip, pc, #0, 12
   11f50:	add	ip, ip, #77824	; 0x13000
   11f54:	ldr	pc, [ip, #220]!	; 0xdc

00011f58 <snprintf@plt>:
   11f58:	add	ip, pc, #0, 12
   11f5c:	add	ip, ip, #77824	; 0x13000
   11f60:	ldr	pc, [ip, #212]!	; 0xd4

00011f64 <__isoc99_sscanf@plt>:
   11f64:	add	ip, pc, #0, 12
   11f68:	add	ip, ip, #77824	; 0x13000
   11f6c:	ldr	pc, [ip, #204]!	; 0xcc

00011f70 <rand@plt>:
   11f70:	add	ip, pc, #0, 12
   11f74:	add	ip, ip, #77824	; 0x13000
   11f78:	ldr	pc, [ip, #196]!	; 0xc4

00011f7c <abort@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #77824	; 0x13000
   11f84:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

00011f88 <_start@@Base>:
   11f88:	mov	fp, #0
   11f8c:	mov	lr, #0
   11f90:	pop	{r1}		; (ldr r1, [sp], #4)
   11f94:	mov	r2, sp
   11f98:	push	{r2}		; (str r2, [sp, #-4]!)
   11f9c:	push	{r0}		; (str r0, [sp, #-4]!)
   11fa0:	ldr	ip, [pc, #16]	; 11fb8 <_start@@Base+0x30>
   11fa4:	push	{ip}		; (str ip, [sp, #-4]!)
   11fa8:	ldr	r0, [pc, #12]	; 11fbc <_start@@Base+0x34>
   11fac:	ldr	r3, [pc, #12]	; 11fc0 <_start@@Base+0x38>
   11fb0:	bl	11f28 <__libc_start_main@plt>
   11fb4:	bl	11f7c <abort@plt>
   11fb8:	andeq	r4, r1, r4, lsr #24
   11fbc:	andeq	r2, r1, r8, ror r0
   11fc0:	andeq	r4, r1, r4, asr #23
   11fc4:	ldr	r3, [pc, #20]	; 11fe0 <_start@@Base+0x58>
   11fc8:	ldr	r2, [pc, #20]	; 11fe4 <_start@@Base+0x5c>
   11fcc:	add	r3, pc, r3
   11fd0:	ldr	r2, [r3, r2]
   11fd4:	cmp	r2, #0
   11fd8:	bxeq	lr
   11fdc:	b	11f34 <__gmon_start__@plt>
   11fe0:	andeq	r3, r1, ip, lsr #32
   11fe4:	andeq	r0, r0, r4, asr #32
   11fe8:	ldr	r0, [pc, #24]	; 12008 <_start@@Base+0x80>
   11fec:	ldr	r3, [pc, #24]	; 1200c <_start@@Base+0x84>
   11ff0:	cmp	r3, r0
   11ff4:	bxeq	lr
   11ff8:	ldr	r3, [pc, #16]	; 12010 <_start@@Base+0x88>
   11ffc:	cmp	r3, #0
   12000:	bxeq	lr
   12004:	bx	r3
   12008:	andeq	r5, r2, r0, asr r0
   1200c:	andeq	r5, r2, r0, asr r0
   12010:	andeq	r0, r0, r0
   12014:	ldr	r0, [pc, #36]	; 12040 <_start@@Base+0xb8>
   12018:	ldr	r1, [pc, #36]	; 12044 <_start@@Base+0xbc>
   1201c:	sub	r1, r1, r0
   12020:	asr	r1, r1, #2
   12024:	add	r1, r1, r1, lsr #31
   12028:	asrs	r1, r1, #1
   1202c:	bxeq	lr
   12030:	ldr	r3, [pc, #16]	; 12048 <_start@@Base+0xc0>
   12034:	cmp	r3, #0
   12038:	bxeq	lr
   1203c:	bx	r3
   12040:	andeq	r5, r2, r0, asr r0
   12044:	andeq	r5, r2, r0, asr r0
   12048:	andeq	r0, r0, r0
   1204c:	push	{r4, lr}
   12050:	ldr	r4, [pc, #24]	; 12070 <_start@@Base+0xe8>
   12054:	ldrb	r3, [r4]
   12058:	cmp	r3, #0
   1205c:	popne	{r4, pc}
   12060:	bl	11fe8 <_start@@Base+0x60>
   12064:	mov	r3, #1
   12068:	strb	r3, [r4]
   1206c:	pop	{r4, pc}
   12070:	andeq	r5, r2, r0, asr r0
   12074:	b	12014 <_start@@Base+0x8c>

00012078 <main@@Base>:
   12078:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1207c:	add	fp, sp, #24
   12080:	sub	sp, sp, #16
   12084:	mov	r7, #0
   12088:	str	r7, [sp, #12]
   1208c:	bl	121b8 <table_new@@Base>
   12090:	mov	r4, r0
   12094:	add	r0, sp, #8
   12098:	bl	11ef8 <time@plt>
   1209c:	bl	11f4c <srand@plt>
   120a0:	movw	r1, #8612	; 0x21a4
   120a4:	movt	r1, #1
   120a8:	add	r2, sp, #12
   120ac:	mov	r0, r4
   120b0:	mvn	r3, #0
   120b4:	bl	128a8 <table_register_callback@@Base>
   120b8:	add	r5, sp, #6
   120bc:	mov	r6, #0
   120c0:	strh	r7, [sp, #6]
   120c4:	strb	r6, [sp, #6]
   120c8:	mov	r0, r4
   120cc:	mov	r1, r5
   120d0:	mov	r2, r6
   120d4:	bl	12ca8 <table_add_column@@Base>
   120d8:	add	r6, r6, #1
   120dc:	cmp	r6, #24
   120e0:	bne	120c0 <main@@Base+0x48>
   120e4:	mov	r0, r4
   120e8:	bl	12c20 <table_get_column_length@@Base>
   120ec:	mov	r8, r0
   120f0:	mov	r9, #0
   120f4:	mov	r6, #0
   120f8:	b	12110 <main@@Base+0x98>
   120fc:	mov	r0, r7
   12100:	bl	11eec <free@plt>
   12104:	add	r6, r6, #1
   12108:	cmp	r6, #500	; 0x1f4
   1210c:	beq	12190 <main@@Base+0x118>
   12110:	mov	r0, #64	; 0x40
   12114:	bl	11f1c <malloc@plt>
   12118:	mov	r7, r0
   1211c:	mov	r5, #0
   12120:	bl	11f70 <rand@plt>
   12124:	asr	r1, r0, #31
   12128:	add	r1, r0, r1, lsr #25
   1212c:	and	r1, r1, #128	; 0x80
   12130:	sub	r0, r0, r1
   12134:	strb	r0, [r7, -r5]
   12138:	sub	r5, r5, #1
   1213c:	cmn	r5, #63	; 0x3f
   12140:	bne	12120 <main@@Base+0xa8>
   12144:	strb	r9, [r7, #63]	; 0x3f
   12148:	mov	r0, r4
   1214c:	bl	13954 <table_add_row@@Base>
   12150:	cmp	r8, #1
   12154:	blt	120fc <main@@Base+0x84>
   12158:	mov	r5, #0
   1215c:	mov	r0, r4
   12160:	mov	r1, r5
   12164:	bl	12c94 <table_get_column_data_type@@Base>
   12168:	str	r0, [sp]
   1216c:	mov	r0, r4
   12170:	mov	r1, r6
   12174:	mov	r2, r5
   12178:	mov	r3, r7
   1217c:	bl	13b94 <table_set@@Base>
   12180:	add	r5, r5, #1
   12184:	cmp	r8, r5
   12188:	bne	1215c <main@@Base+0xe4>
   1218c:	b	120fc <main@@Base+0x84>
   12190:	mov	r0, r4
   12194:	bl	121fc <table_delete@@Base>
   12198:	mov	r0, #0
   1219c:	sub	sp, fp, #24
   121a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   121a4:	ldr	r0, [sp]
   121a8:	ldr	r1, [r0]
   121ac:	orr	r1, r1, r3
   121b0:	str	r1, [r0]
   121b4:	bx	lr

000121b8 <table_new@@Base>:
   121b8:	push	{r4, sl, fp, lr}
   121bc:	add	fp, sp, #8
   121c0:	mov	r0, #56	; 0x38
   121c4:	bl	11f1c <malloc@plt>
   121c8:	mov	r4, r0
   121cc:	bl	121d8 <table_init@@Base>
   121d0:	mov	r0, r4
   121d4:	pop	{r4, sl, fp, pc}

000121d8 <table_init@@Base>:
   121d8:	push	{r4, sl, fp, lr}
   121dc:	add	fp, sp, #8
   121e0:	mov	r4, r0
   121e4:	bl	12258 <table_destroy@@Base+0x40>
   121e8:	mov	r0, r4
   121ec:	bl	12270 <table_destroy@@Base+0x58>
   121f0:	mov	r0, r4
   121f4:	pop	{r4, sl, fp, lr}
   121f8:	b	1228c <table_destroy@@Base+0x74>

000121fc <table_delete@@Base>:
   121fc:	push	{r4, sl, fp, lr}
   12200:	add	fp, sp, #8
   12204:	mov	r4, r0
   12208:	bl	12218 <table_destroy@@Base>
   1220c:	mov	r0, r4
   12210:	pop	{r4, sl, fp, lr}
   12214:	b	11eec <free@plt>

00012218 <table_destroy@@Base>:
   12218:	cmp	r0, #0
   1221c:	bxeq	lr
   12220:	push	{r4, sl, fp, lr}
   12224:	add	fp, sp, #8
   12228:	mov	r4, r0
   1222c:	mvn	r1, #0
   12230:	mvn	r2, #0
   12234:	mov	r3, #64	; 0x40
   12238:	bl	12b24 <table_notify@@Base>
   1223c:	mov	r0, r4
   12240:	bl	122ac <table_destroy@@Base+0x94>
   12244:	mov	r0, r4
   12248:	bl	122fc <table_destroy@@Base+0xe4>
   1224c:	mov	r0, r4
   12250:	pop	{r4, sl, fp, lr}
   12254:	b	1234c <table_destroy@@Base+0x134>
   12258:	mov	r1, #0
   1225c:	mov	r2, #10
   12260:	str	r1, [r0]
   12264:	stmib	r0, {r1, r2}
   12268:	str	r1, [r0, #12]
   1226c:	bx	lr
   12270:	mov	r1, #0
   12274:	mov	r2, #20
   12278:	str	r1, [r0, #16]
   1227c:	str	r1, [r0, #20]
   12280:	str	r2, [r0, #24]
   12284:	str	r1, [r0, #28]
   12288:	bx	lr
   1228c:	mov	r1, #10
   12290:	vmov.i32	q8, #0	; 0x00000000
   12294:	mov	r2, #0
   12298:	str	r1, [r0, #48]	; 0x30
   1229c:	str	r2, [r0, #52]	; 0x34
   122a0:	add	r0, r0, #32
   122a4:	vst1.32	{d16-d17}, [r0]
   122a8:	bx	lr
   122ac:	push	{r4, r5, r6, sl, fp, lr}
   122b0:	add	fp, sp, #16
   122b4:	mov	r4, r0
   122b8:	bl	1394c <table_get_row_length@@Base>
   122bc:	cmp	r0, #1
   122c0:	blt	122e4 <table_destroy@@Base+0xcc>
   122c4:	mov	r5, r0
   122c8:	mov	r6, #0
   122cc:	mov	r0, r4
   122d0:	mov	r1, r6
   122d4:	bl	138e4 <table_row_destroy@@Base>
   122d8:	add	r6, r6, #1
   122dc:	cmp	r5, r6
   122e0:	bne	122cc <table_destroy@@Base+0xb4>
   122e4:	ldr	r0, [r4, #16]
   122e8:	cmp	r0, #0
   122ec:	beq	122f8 <table_destroy@@Base+0xe0>
   122f0:	pop	{r4, r5, r6, sl, fp, lr}
   122f4:	b	11eec <free@plt>
   122f8:	pop	{r4, r5, r6, sl, fp, pc}
   122fc:	push	{r4, r5, r6, sl, fp, lr}
   12300:	add	fp, sp, #16
   12304:	mov	r4, r0
   12308:	bl	12c20 <table_get_column_length@@Base>
   1230c:	cmp	r0, #1
   12310:	blt	12334 <table_destroy@@Base+0x11c>
   12314:	mov	r5, r0
   12318:	mov	r6, #0
   1231c:	mov	r0, r4
   12320:	mov	r1, r6
   12324:	bl	12c00 <table_column_destroy@@Base>
   12328:	add	r6, r6, #1
   1232c:	cmp	r5, r6
   12330:	bne	1231c <table_destroy@@Base+0x104>
   12334:	ldr	r0, [r4]
   12338:	cmp	r0, #0
   1233c:	beq	12348 <table_destroy@@Base+0x130>
   12340:	pop	{r4, r5, r6, sl, fp, lr}
   12344:	b	11eec <free@plt>
   12348:	pop	{r4, r5, r6, sl, fp, pc}
   1234c:	push	{r4, sl, fp, lr}
   12350:	add	fp, sp, #8
   12354:	mov	r4, r0
   12358:	ldr	r0, [r0, #36]	; 0x24
   1235c:	cmp	r0, #0
   12360:	beq	12368 <table_destroy@@Base+0x150>
   12364:	bl	11eec <free@plt>
   12368:	ldr	r0, [r4, #40]	; 0x28
   1236c:	cmp	r0, #0
   12370:	beq	12378 <table_destroy@@Base+0x160>
   12374:	bl	11eec <free@plt>
   12378:	ldr	r0, [r4, #44]	; 0x2c
   1237c:	cmp	r0, #0
   12380:	popeq	{r4, sl, fp, pc}
   12384:	pop	{r4, sl, fp, lr}
   12388:	b	11eec <free@plt>

0001238c <table_dupe@@Base>:
   1238c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12390:	add	fp, sp, #28
   12394:	sub	sp, sp, #12
   12398:	mov	r4, r0
   1239c:	bl	1394c <table_get_row_length@@Base>
   123a0:	mov	r8, r0
   123a4:	mov	r0, r4
   123a8:	bl	12c20 <table_get_column_length@@Base>
   123ac:	mov	r6, r0
   123b0:	bl	121b8 <table_new@@Base>
   123b4:	mov	sl, r0
   123b8:	cmp	r6, #1
   123bc:	blt	123fc <table_dupe@@Base+0x70>
   123c0:	mov	r5, #0
   123c4:	mov	r0, r4
   123c8:	mov	r1, r5
   123cc:	bl	12c80 <table_get_column_name@@Base>
   123d0:	mov	r7, r0
   123d4:	mov	r0, r4
   123d8:	mov	r1, r5
   123dc:	bl	12c94 <table_get_column_data_type@@Base>
   123e0:	mov	r2, r0
   123e4:	mov	r0, sl
   123e8:	mov	r1, r7
   123ec:	bl	12ca8 <table_add_column@@Base>
   123f0:	add	r5, r5, #1
   123f4:	cmp	r6, r5
   123f8:	bne	123c4 <table_dupe@@Base+0x38>
   123fc:	cmp	r8, #1
   12400:	blt	12870 <table_dupe@@Base+0x4e4>
   12404:	mov	r5, #0
   12408:	add	r9, sp, #8
   1240c:	b	1241c <table_dupe@@Base+0x90>
   12410:	add	r5, r5, #1
   12414:	cmp	r5, r8
   12418:	beq	12870 <table_dupe@@Base+0x4e4>
   1241c:	mov	r0, sl
   12420:	bl	13954 <table_add_row@@Base>
   12424:	cmp	r6, #1
   12428:	blt	12410 <table_dupe@@Base+0x84>
   1242c:	mov	r7, #0
   12430:	b	12468 <table_dupe@@Base+0xdc>
   12434:	mov	r0, r4
   12438:	mov	r1, r5
   1243c:	mov	r2, r7
   12440:	bl	138ac <table_get_ptr@@Base>
   12444:	str	r0, [sp, #8]
   12448:	mov	r0, sl
   1244c:	mov	r1, r5
   12450:	mov	r2, r7
   12454:	mov	r3, r9
   12458:	bl	1414c <table_set_ptr@@Base>
   1245c:	add	r7, r7, #1
   12460:	cmp	r6, r7
   12464:	beq	12410 <table_dupe@@Base+0x84>
   12468:	mov	r0, r4
   1246c:	mov	r1, r7
   12470:	bl	12c94 <table_get_column_data_type@@Base>
   12474:	cmp	r0, #23
   12478:	bhi	1245c <table_dupe@@Base+0xd0>
   1247c:	add	r1, pc, #0
   12480:	ldr	pc, [r1, r0, lsl #2]
   12484:	andeq	r2, r1, r4, ror #9
   12488:	andeq	r2, r1, ip, lsl #10
   1248c:	andeq	r2, r1, r4, lsr r5
   12490:	andeq	r2, r1, ip, asr r5
   12494:	andeq	r2, r1, r4, lsl #11
   12498:	andeq	r2, r1, ip, lsr #11
   1249c:	ldrdeq	r2, [r1], -r4
   124a0:	strdeq	r2, [r1], -ip
   124a4:	andeq	r2, r1, r4, lsr #12
   124a8:	andeq	r2, r1, ip, asr #12
   124ac:	andeq	r2, r1, r4, ror r6
   124b0:	muleq	r1, ip, r6
   124b4:	andeq	r2, r1, r4, asr #13
   124b8:	andeq	r2, r1, ip, ror #13
   124bc:	andeq	r2, r1, r4, lsl r7
   124c0:	andeq	r2, r1, ip, lsr r7
   124c4:	andeq	r2, r1, r4, ror #14
   124c8:	andeq	r2, r1, r8, lsl #15
   124cc:	andeq	r2, r1, ip, lsr #15
   124d0:	ldrdeq	r2, [r1], -r0
   124d4:	strdeq	r2, [r1], -r8
   124d8:	andeq	r2, r1, r0, lsr #16
   124dc:	andeq	r2, r1, r8, asr #16
   124e0:	andeq	r2, r1, r4, lsr r4
   124e4:	mov	r0, r4
   124e8:	mov	r1, r5
   124ec:	mov	r2, r7
   124f0:	bl	13704 <table_get_int@@Base>
   124f4:	mov	r3, r0
   124f8:	mov	r0, sl
   124fc:	mov	r1, r5
   12500:	mov	r2, r7
   12504:	bl	13db4 <table_set_int@@Base>
   12508:	b	1245c <table_dupe@@Base+0xd0>
   1250c:	mov	r0, r4
   12510:	mov	r1, r5
   12514:	mov	r2, r7
   12518:	bl	13718 <table_get_uint@@Base>
   1251c:	mov	r3, r0
   12520:	mov	r0, sl
   12524:	mov	r1, r5
   12528:	mov	r2, r7
   1252c:	bl	13ddc <table_set_uint@@Base>
   12530:	b	1245c <table_dupe@@Base+0xd0>
   12534:	mov	r0, r4
   12538:	mov	r1, r5
   1253c:	mov	r2, r7
   12540:	bl	1372c <table_get_int8@@Base>
   12544:	mov	r3, r0
   12548:	mov	r0, sl
   1254c:	mov	r1, r5
   12550:	mov	r2, r7
   12554:	bl	13e04 <table_set_int8@@Base>
   12558:	b	1245c <table_dupe@@Base+0xd0>
   1255c:	mov	r0, r4
   12560:	mov	r1, r5
   12564:	mov	r2, r7
   12568:	bl	13740 <table_get_uint8@@Base>
   1256c:	mov	r3, r0
   12570:	mov	r0, sl
   12574:	mov	r1, r5
   12578:	mov	r2, r7
   1257c:	bl	13e2c <table_set_uint8@@Base>
   12580:	b	1245c <table_dupe@@Base+0xd0>
   12584:	mov	r0, r4
   12588:	mov	r1, r5
   1258c:	mov	r2, r7
   12590:	bl	13754 <table_get_int16@@Base>
   12594:	mov	r3, r0
   12598:	mov	r0, sl
   1259c:	mov	r1, r5
   125a0:	mov	r2, r7
   125a4:	bl	13e54 <table_set_int16@@Base>
   125a8:	b	1245c <table_dupe@@Base+0xd0>
   125ac:	mov	r0, r4
   125b0:	mov	r1, r5
   125b4:	mov	r2, r7
   125b8:	bl	13768 <table_get_uint16@@Base>
   125bc:	mov	r3, r0
   125c0:	mov	r0, sl
   125c4:	mov	r1, r5
   125c8:	mov	r2, r7
   125cc:	bl	13e7c <table_set_uint16@@Base>
   125d0:	b	1245c <table_dupe@@Base+0xd0>
   125d4:	mov	r0, r4
   125d8:	mov	r1, r5
   125dc:	mov	r2, r7
   125e0:	bl	1377c <table_get_int32@@Base>
   125e4:	mov	r3, r0
   125e8:	mov	r0, sl
   125ec:	mov	r1, r5
   125f0:	mov	r2, r7
   125f4:	bl	13ea4 <table_set_int32@@Base>
   125f8:	b	1245c <table_dupe@@Base+0xd0>
   125fc:	mov	r0, r4
   12600:	mov	r1, r5
   12604:	mov	r2, r7
   12608:	bl	13790 <table_get_uint32@@Base>
   1260c:	mov	r3, r0
   12610:	mov	r0, sl
   12614:	mov	r1, r5
   12618:	mov	r2, r7
   1261c:	bl	13ecc <table_set_uint32@@Base>
   12620:	b	1245c <table_dupe@@Base+0xd0>
   12624:	mov	r0, r4
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	137a4 <table_get_int64@@Base>
   12634:	stm	sp, {r0, r1}
   12638:	mov	r0, sl
   1263c:	mov	r1, r5
   12640:	mov	r2, r7
   12644:	bl	13ef4 <table_set_int64@@Base>
   12648:	b	1245c <table_dupe@@Base+0xd0>
   1264c:	mov	r0, r4
   12650:	mov	r1, r5
   12654:	mov	r2, r7
   12658:	bl	137b8 <table_get_uint64@@Base>
   1265c:	stm	sp, {r0, r1}
   12660:	mov	r0, sl
   12664:	mov	r1, r5
   12668:	mov	r2, r7
   1266c:	bl	13f28 <table_set_uint64@@Base>
   12670:	b	1245c <table_dupe@@Base+0xd0>
   12674:	mov	r0, r4
   12678:	mov	r1, r5
   1267c:	mov	r2, r7
   12680:	bl	137cc <table_get_short@@Base>
   12684:	mov	r3, r0
   12688:	mov	r0, sl
   1268c:	mov	r1, r5
   12690:	mov	r2, r7
   12694:	bl	13f5c <table_set_short@@Base>
   12698:	b	1245c <table_dupe@@Base+0xd0>
   1269c:	mov	r0, r4
   126a0:	mov	r1, r5
   126a4:	mov	r2, r7
   126a8:	bl	137e0 <table_get_ushort@@Base>
   126ac:	mov	r3, r0
   126b0:	mov	r0, sl
   126b4:	mov	r1, r5
   126b8:	mov	r2, r7
   126bc:	bl	13f84 <table_set_ushort@@Base>
   126c0:	b	1245c <table_dupe@@Base+0xd0>
   126c4:	mov	r0, r4
   126c8:	mov	r1, r5
   126cc:	mov	r2, r7
   126d0:	bl	137f4 <table_get_long@@Base>
   126d4:	mov	r3, r0
   126d8:	mov	r0, sl
   126dc:	mov	r1, r5
   126e0:	mov	r2, r7
   126e4:	bl	13fac <table_set_long@@Base>
   126e8:	b	1245c <table_dupe@@Base+0xd0>
   126ec:	mov	r0, r4
   126f0:	mov	r1, r5
   126f4:	mov	r2, r7
   126f8:	bl	13808 <table_get_ulong@@Base>
   126fc:	mov	r3, r0
   12700:	mov	r0, sl
   12704:	mov	r1, r5
   12708:	mov	r2, r7
   1270c:	bl	13fd4 <table_set_ulong@@Base>
   12710:	b	1245c <table_dupe@@Base+0xd0>
   12714:	mov	r0, r4
   12718:	mov	r1, r5
   1271c:	mov	r2, r7
   12720:	bl	1381c <table_get_llong@@Base>
   12724:	stm	sp, {r0, r1}
   12728:	mov	r0, sl
   1272c:	mov	r1, r5
   12730:	mov	r2, r7
   12734:	bl	13ffc <table_set_llong@@Base>
   12738:	b	1245c <table_dupe@@Base+0xd0>
   1273c:	mov	r0, r4
   12740:	mov	r1, r5
   12744:	mov	r2, r7
   12748:	bl	13830 <table_get_ullong@@Base>
   1274c:	stm	sp, {r0, r1}
   12750:	mov	r0, sl
   12754:	mov	r1, r5
   12758:	mov	r2, r7
   1275c:	bl	14030 <table_set_ullong@@Base>
   12760:	b	1245c <table_dupe@@Base+0xd0>
   12764:	mov	r0, r4
   12768:	mov	r1, r5
   1276c:	mov	r2, r7
   12770:	bl	13844 <table_get_float@@Base>
   12774:	mov	r0, sl
   12778:	mov	r1, r5
   1277c:	mov	r2, r7
   12780:	bl	14064 <table_set_float@@Base>
   12784:	b	1245c <table_dupe@@Base+0xd0>
   12788:	mov	r0, r4
   1278c:	mov	r1, r5
   12790:	mov	r2, r7
   12794:	bl	13858 <table_get_double@@Base>
   12798:	mov	r0, sl
   1279c:	mov	r1, r5
   127a0:	mov	r2, r7
   127a4:	bl	1408c <table_set_double@@Base>
   127a8:	b	1245c <table_dupe@@Base+0xd0>
   127ac:	mov	r0, r4
   127b0:	mov	r1, r5
   127b4:	mov	r2, r7
   127b8:	bl	1386c <table_get_ldouble@@Base>
   127bc:	mov	r0, sl
   127c0:	mov	r1, r5
   127c4:	mov	r2, r7
   127c8:	bl	140b4 <table_set_ldouble@@Base>
   127cc:	b	1245c <table_dupe@@Base+0xd0>
   127d0:	mov	r0, r4
   127d4:	mov	r1, r5
   127d8:	mov	r2, r7
   127dc:	bl	13880 <table_get_char@@Base>
   127e0:	mov	r3, r0
   127e4:	mov	r0, sl
   127e8:	mov	r1, r5
   127ec:	mov	r2, r7
   127f0:	bl	140fc <table_set_char@@Base>
   127f4:	b	1245c <table_dupe@@Base+0xd0>
   127f8:	mov	r0, r4
   127fc:	mov	r1, r5
   12800:	mov	r2, r7
   12804:	bl	13894 <table_get_uchar@@Base>
   12808:	mov	r3, r0
   1280c:	mov	r0, sl
   12810:	mov	r1, r5
   12814:	mov	r2, r7
   12818:	bl	14124 <table_set_uchar@@Base>
   1281c:	b	1245c <table_dupe@@Base+0xd0>
   12820:	mov	r0, r4
   12824:	mov	r1, r5
   12828:	mov	r2, r7
   1282c:	bl	138a8 <table_get_string@@Base>
   12830:	mov	r3, r0
   12834:	mov	r0, sl
   12838:	mov	r1, r5
   1283c:	mov	r2, r7
   12840:	bl	140dc <table_set_string@@Base>
   12844:	b	1245c <table_dupe@@Base+0xd0>
   12848:	mov	r0, r4
   1284c:	mov	r1, r5
   12850:	mov	r2, r7
   12854:	bl	136f0 <table_get_bool@@Base>
   12858:	mov	r3, r0
   1285c:	mov	r0, sl
   12860:	mov	r1, r5
   12864:	mov	r2, r7
   12868:	bl	13d8c <table_set_bool@@Base>
   1286c:	b	1245c <table_dupe@@Base+0xd0>
   12870:	mov	r0, sl
   12874:	sub	sp, fp, #28
   12878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001287c <table_get_major_version@@Base>:
   1287c:	mov	r0, #0
   12880:	bx	lr

00012884 <table_get_minor_version@@Base>:
   12884:	mov	r0, #0
   12888:	bx	lr

0001288c <table_get_patch_version@@Base>:
   1288c:	mov	r0, #0
   12890:	bx	lr

00012894 <table_get_version@@Base>:
   12894:	movw	r0, #19652	; 0x4cc4
   12898:	movt	r0, #1
   1289c:	bx	lr

000128a0 <table_get_callback_length@@Base>:
   128a0:	ldr	r0, [r0, #32]
   128a4:	bx	lr

000128a8 <table_register_callback@@Base>:
   128a8:	push	{r4, r5, r6, r7, fp, lr}
   128ac:	add	fp, sp, #16
   128b0:	sub	sp, sp, #8
   128b4:	mov	r5, r3
   128b8:	mov	r6, r2
   128bc:	mov	r7, r1
   128c0:	mov	r4, r0
   128c4:	bl	12938 <table_register_callback@@Base+0x90>
   128c8:	cmp	r0, #1
   128cc:	blt	128e8 <table_register_callback@@Base+0x40>
   128d0:	ldr	r1, [r4, #44]	; 0x2c
   128d4:	ldr	r2, [r1, r0, lsl #2]
   128d8:	orr	r2, r2, r5
   128dc:	str	r2, [r1, r0, lsl #2]
   128e0:	sub	sp, fp, #16
   128e4:	pop	{r4, r5, r6, r7, fp, pc}
   128e8:	ldr	r0, [r4, #32]
   128ec:	ldr	r1, [r4, #48]	; 0x30
   128f0:	udiv	r2, r0, r1
   128f4:	mls	r0, r2, r1, r0
   128f8:	cmp	r0, #0
   128fc:	moveq	r0, r4
   12900:	bleq	12994 <table_register_callback@@Base+0xec>
   12904:	mov	r0, r4
   12908:	bl	128a0 <table_get_callback_length@@Base>
   1290c:	mov	r1, r0
   12910:	str	r5, [sp]
   12914:	mov	r0, r4
   12918:	mov	r2, r7
   1291c:	mov	r3, r6
   12920:	bl	129ec <table_register_callback@@Base+0x144>
   12924:	ldr	r0, [r4, #32]
   12928:	add	r0, r0, #1
   1292c:	str	r0, [r4, #32]
   12930:	sub	sp, fp, #16
   12934:	pop	{r4, r5, r6, r7, fp, pc}
   12938:	push	{r4, sl, fp, lr}
   1293c:	add	fp, sp, #8
   12940:	mov	ip, r0
   12944:	ldr	r3, [r0, #32]
   12948:	mvn	r0, #0
   1294c:	cmp	r3, #1
   12950:	blt	12990 <table_register_callback@@Base+0xe8>
   12954:	ldr	lr, [ip, #36]	; 0x24
   12958:	mov	r3, #0
   1295c:	b	12970 <table_register_callback@@Base+0xc8>
   12960:	add	r3, r3, #1
   12964:	ldr	r4, [ip, #32]
   12968:	cmp	r3, r4
   1296c:	bge	12990 <table_register_callback@@Base+0xe8>
   12970:	ldr	r4, [lr, r3, lsl #2]
   12974:	cmp	r4, r1
   12978:	bne	12960 <table_register_callback@@Base+0xb8>
   1297c:	ldr	r4, [ip, #40]	; 0x28
   12980:	ldr	r4, [r4, r3, lsl #2]
   12984:	cmp	r4, r2
   12988:	bne	12960 <table_register_callback@@Base+0xb8>
   1298c:	mov	r0, r3
   12990:	pop	{r4, sl, fp, pc}
   12994:	push	{r4, sl, fp, lr}
   12998:	add	fp, sp, #8
   1299c:	mov	r4, r0
   129a0:	ldr	r0, [r0, #36]	; 0x24
   129a4:	ldr	r1, [r4, #48]	; 0x30
   129a8:	ldr	r2, [r4, #52]	; 0x34
   129ac:	add	r1, r2, r1
   129b0:	str	r1, [r4, #52]	; 0x34
   129b4:	lsl	r1, r1, #2
   129b8:	bl	11f04 <realloc@plt>
   129bc:	str	r0, [r4, #36]	; 0x24
   129c0:	ldr	r0, [r4, #40]	; 0x28
   129c4:	ldr	r1, [r4, #52]	; 0x34
   129c8:	lsl	r1, r1, #2
   129cc:	bl	11f04 <realloc@plt>
   129d0:	str	r0, [r4, #40]	; 0x28
   129d4:	ldr	r0, [r4, #44]	; 0x2c
   129d8:	ldr	r1, [r4, #52]	; 0x34
   129dc:	lsl	r1, r1, #2
   129e0:	bl	11f04 <realloc@plt>
   129e4:	str	r0, [r4, #44]	; 0x2c
   129e8:	pop	{r4, sl, fp, pc}
   129ec:	ldr	ip, [r0, #36]	; 0x24
   129f0:	str	r2, [ip, r1, lsl #2]
   129f4:	ldr	r2, [r0, #40]	; 0x28
   129f8:	str	r3, [r2, r1, lsl #2]
   129fc:	ldr	r0, [r0, #44]	; 0x2c
   12a00:	ldr	r2, [sp]
   12a04:	str	r2, [r0, r1, lsl #2]
   12a08:	bx	lr

00012a0c <table_unregister_callback@@Base>:
   12a0c:	push	{r4, sl, fp, lr}
   12a10:	add	fp, sp, #8
   12a14:	mov	r4, r0
   12a18:	bl	12938 <table_register_callback@@Base+0x90>
   12a1c:	cmn	r0, #1
   12a20:	popeq	{r4, sl, fp, pc}
   12a24:	ldr	r1, [r4, #32]
   12a28:	sub	r2, r1, #1
   12a2c:	cmp	r0, r2
   12a30:	bge	12a78 <table_unregister_callback@@Base+0x6c>
   12a34:	mov	r1, #4
   12a38:	add	r1, r1, r0, lsl #2
   12a3c:	ldr	r2, [r4, #36]	; 0x24
   12a40:	ldr	r3, [r2, r1]!
   12a44:	str	r3, [r2, #-4]
   12a48:	ldr	r2, [r4, #40]	; 0x28
   12a4c:	ldr	r3, [r2, r1]!
   12a50:	str	r3, [r2, #-4]
   12a54:	ldr	r2, [r4, #44]	; 0x2c
   12a58:	ldr	r3, [r2, r1]!
   12a5c:	str	r3, [r2, #-4]
   12a60:	add	r1, r1, #4
   12a64:	add	r0, r0, #1
   12a68:	ldr	r2, [r4, #32]
   12a6c:	sub	r2, r2, #1
   12a70:	cmp	r0, r2
   12a74:	blt	12a3c <table_unregister_callback@@Base+0x30>
   12a78:	str	r2, [r4, #32]
   12a7c:	ldr	r0, [r4, #48]	; 0x30
   12a80:	udiv	r1, r2, r0
   12a84:	mls	r0, r1, r0, r2
   12a88:	cmp	r0, #0
   12a8c:	beq	12a94 <table_unregister_callback@@Base+0x88>
   12a90:	pop	{r4, sl, fp, pc}
   12a94:	mov	r0, r4
   12a98:	pop	{r4, sl, fp, lr}
   12a9c:	b	12aa0 <table_unregister_callback@@Base+0x94>
   12aa0:	push	{r4, sl, fp, lr}
   12aa4:	add	fp, sp, #8
   12aa8:	mov	r4, r0
   12aac:	ldr	r0, [r0, #36]	; 0x24
   12ab0:	ldr	r1, [r4, #48]	; 0x30
   12ab4:	ldr	r2, [r4, #52]	; 0x34
   12ab8:	subs	r1, r2, r1
   12abc:	str	r1, [r4, #52]	; 0x34
   12ac0:	beq	12afc <table_unregister_callback@@Base+0xf0>
   12ac4:	lsl	r1, r1, #2
   12ac8:	bl	11f04 <realloc@plt>
   12acc:	str	r0, [r4, #36]	; 0x24
   12ad0:	ldr	r0, [r4, #40]	; 0x28
   12ad4:	ldr	r1, [r4, #52]	; 0x34
   12ad8:	lsl	r1, r1, #2
   12adc:	bl	11f04 <realloc@plt>
   12ae0:	str	r0, [r4, #40]	; 0x28
   12ae4:	ldr	r0, [r4, #44]	; 0x2c
   12ae8:	ldr	r1, [r4, #52]	; 0x34
   12aec:	lsl	r1, r1, #2
   12af0:	bl	11f04 <realloc@plt>
   12af4:	str	r0, [r4, #44]	; 0x2c
   12af8:	pop	{r4, sl, fp, pc}
   12afc:	bl	11eec <free@plt>
   12b00:	ldr	r0, [r4, #40]	; 0x28
   12b04:	bl	11eec <free@plt>
   12b08:	ldr	r0, [r4, #44]	; 0x2c
   12b0c:	bl	11eec <free@plt>
   12b10:	mov	r0, #0
   12b14:	str	r0, [r4, #36]	; 0x24
   12b18:	str	r0, [r4, #40]	; 0x28
   12b1c:	str	r0, [r4, #44]	; 0x2c
   12b20:	pop	{r4, sl, fp, pc}

00012b24 <table_notify@@Base>:
   12b24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b28:	add	fp, sp, #24
   12b2c:	sub	sp, sp, #8
   12b30:	mov	r7, r0
   12b34:	ldr	r0, [r0, #32]
   12b38:	cmp	r0, #1
   12b3c:	blt	12ba0 <table_notify@@Base+0x7c>
   12b40:	mov	r4, r3
   12b44:	mov	r8, r2
   12b48:	mov	r9, r1
   12b4c:	mov	r5, #0
   12b50:	b	12b64 <table_notify@@Base+0x40>
   12b54:	ldr	r0, [r7, #32]
   12b58:	add	r5, r5, #1
   12b5c:	cmp	r5, r0
   12b60:	bge	12ba0 <table_notify@@Base+0x7c>
   12b64:	ldr	r0, [r7, #44]	; 0x2c
   12b68:	ldr	r0, [r0, r5, lsl #2]
   12b6c:	tst	r0, r4
   12b70:	beq	12b54 <table_notify@@Base+0x30>
   12b74:	ldr	r0, [r7, #36]	; 0x24
   12b78:	ldr	r1, [r7, #40]	; 0x28
   12b7c:	ldr	r6, [r0, r5, lsl #2]
   12b80:	ldr	r0, [r1, r5, lsl #2]
   12b84:	str	r0, [sp]
   12b88:	mov	r0, r7
   12b8c:	mov	r1, r9
   12b90:	mov	r2, r8
   12b94:	mov	r3, r4
   12b98:	blx	r6
   12b9c:	b	12b54 <table_notify@@Base+0x30>
   12ba0:	sub	sp, fp, #24
   12ba4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012ba8 <table_column_init@@Base>:
   12ba8:	push	{r4, r5, r6, r7, fp, lr}
   12bac:	add	fp, sp, #16
   12bb0:	mov	r4, r3
   12bb4:	mov	r5, r2
   12bb8:	bl	12bf0 <table_get_col_ptr@@Base>
   12bbc:	mov	r6, r0
   12bc0:	mov	r0, r5
   12bc4:	bl	11f40 <strlen@plt>
   12bc8:	add	r0, r0, #1
   12bcc:	bl	11f1c <malloc@plt>
   12bd0:	str	r0, [r6]
   12bd4:	ldr	r7, [fp, #8]
   12bd8:	cmp	r0, #0
   12bdc:	beq	12be8 <table_column_init@@Base+0x40>
   12be0:	mov	r1, r5
   12be4:	bl	11f10 <strcpy@plt>
   12be8:	stmib	r6, {r4, r7}
   12bec:	pop	{r4, r5, r6, r7, fp, pc}

00012bf0 <table_get_col_ptr@@Base>:
   12bf0:	ldr	r0, [r0]
   12bf4:	add	r1, r1, r1, lsl #1
   12bf8:	add	r0, r0, r1, lsl #2
   12bfc:	bx	lr

00012c00 <table_column_destroy@@Base>:
   12c00:	push	{fp, lr}
   12c04:	mov	fp, sp
   12c08:	bl	12bf0 <table_get_col_ptr@@Base>
   12c0c:	ldr	r0, [r0]
   12c10:	cmp	r0, #0
   12c14:	popeq	{fp, pc}
   12c18:	pop	{fp, lr}
   12c1c:	b	11eec <free@plt>

00012c20 <table_get_column_length@@Base>:
   12c20:	ldr	r0, [r0, #4]
   12c24:	bx	lr

00012c28 <table_get_column@@Base>:
   12c28:	push	{r4, r5, r6, r7, fp, lr}
   12c2c:	add	fp, sp, #16
   12c30:	mov	r6, r1
   12c34:	mov	r7, r0
   12c38:	bl	12c20 <table_get_column_length@@Base>
   12c3c:	mov	r4, r0
   12c40:	mov	r5, #0
   12c44:	cmp	r0, #1
   12c48:	blt	12c70 <table_get_column@@Base+0x48>
   12c4c:	mov	r0, r7
   12c50:	mov	r1, r5
   12c54:	bl	12c80 <table_get_column_name@@Base>
   12c58:	mov	r1, r6
   12c5c:	bl	11ee0 <strcmp@plt>
   12c60:	cmp	r0, #0
   12c64:	addne	r5, r5, #1
   12c68:	cmpne	r4, r5
   12c6c:	bne	12c4c <table_get_column@@Base+0x24>
   12c70:	cmp	r5, r4
   12c74:	mvneq	r5, #0
   12c78:	mov	r0, r5
   12c7c:	pop	{r4, r5, r6, r7, fp, pc}

00012c80 <table_get_column_name@@Base>:
   12c80:	push	{fp, lr}
   12c84:	mov	fp, sp
   12c88:	bl	12bf0 <table_get_col_ptr@@Base>
   12c8c:	ldr	r0, [r0]
   12c90:	pop	{fp, pc}

00012c94 <table_get_column_data_type@@Base>:
   12c94:	push	{fp, lr}
   12c98:	mov	fp, sp
   12c9c:	bl	12bf0 <table_get_col_ptr@@Base>
   12ca0:	ldr	r0, [r0, #4]
   12ca4:	pop	{fp, pc}

00012ca8 <table_add_column@@Base>:
   12ca8:	push	{r4, r5, r6, sl, fp, lr}
   12cac:	add	fp, sp, #16
   12cb0:	mov	r5, r2
   12cb4:	mov	r6, r1
   12cb8:	mov	r4, r0
   12cbc:	bl	12c20 <table_get_column_length@@Base>
   12cc0:	ldr	r1, [r4, #8]
   12cc4:	udiv	r2, r0, r1
   12cc8:	mls	r0, r2, r1, r0
   12ccc:	cmp	r0, #0
   12cd0:	moveq	r0, r4
   12cd4:	bleq	12d14 <table_add_column@@Base+0x6c>
   12cd8:	mov	r0, r4
   12cdc:	mov	r1, r6
   12ce0:	mov	r2, r5
   12ce4:	bl	12d90 <table_add_column@@Base+0xe8>
   12ce8:	mov	r0, r4
   12cec:	bl	12c20 <table_get_column_length@@Base>
   12cf0:	mov	r2, r0
   12cf4:	mov	r0, r4
   12cf8:	mvn	r1, #0
   12cfc:	mov	r3, #8
   12d00:	bl	12b24 <table_notify@@Base>
   12d04:	ldr	r0, [r4, #4]
   12d08:	add	r1, r0, #1
   12d0c:	str	r1, [r4, #4]
   12d10:	pop	{r4, r5, r6, sl, fp, pc}
   12d14:	push	{r4, r5, r6, r7, fp, lr}
   12d18:	add	fp, sp, #16
   12d1c:	mov	r4, r0
   12d20:	ldr	r0, [r0]
   12d24:	ldr	r1, [r4, #8]
   12d28:	ldr	r2, [r4, #12]
   12d2c:	add	r1, r2, r1
   12d30:	str	r1, [r4, #12]
   12d34:	add	r1, r1, r1, lsl #1
   12d38:	lsl	r1, r1, #2
   12d3c:	bl	11f04 <realloc@plt>
   12d40:	str	r0, [r4]
   12d44:	mov	r0, r4
   12d48:	bl	1394c <table_get_row_length@@Base>
   12d4c:	cmp	r0, #1
   12d50:	blt	12d8c <table_add_column@@Base+0xe4>
   12d54:	mov	r5, r0
   12d58:	mov	r6, #0
   12d5c:	mov	r0, r4
   12d60:	mov	r1, r6
   12d64:	bl	138d8 <table_get_row_ptr@@Base>
   12d68:	mov	r7, r0
   12d6c:	ldr	r0, [r0]
   12d70:	ldr	r1, [r4, #12]
   12d74:	lsl	r1, r1, #2
   12d78:	bl	11f04 <realloc@plt>
   12d7c:	str	r0, [r7]
   12d80:	add	r6, r6, #1
   12d84:	cmp	r5, r6
   12d88:	bne	12d5c <table_add_column@@Base+0xb4>
   12d8c:	pop	{r4, r5, r6, r7, fp, pc}
   12d90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d94:	add	fp, sp, #24
   12d98:	sub	sp, sp, #8
   12d9c:	mov	r7, r2
   12da0:	mov	r8, r1
   12da4:	mov	r4, r0
   12da8:	bl	1394c <table_get_row_length@@Base>
   12dac:	mov	r5, r0
   12db0:	mov	r0, r4
   12db4:	bl	12c20 <table_get_column_length@@Base>
   12db8:	mov	r6, r0
   12dbc:	mov	r0, r7
   12dc0:	bl	136c0 <table_get_default_compare_function_for_data_type@@Base>
   12dc4:	str	r0, [sp]
   12dc8:	mov	r0, r4
   12dcc:	mov	r1, r6
   12dd0:	mov	r2, r8
   12dd4:	mov	r3, r7
   12dd8:	bl	12ba8 <table_column_init@@Base>
   12ddc:	cmp	r5, #1
   12de0:	blt	12e04 <table_add_column@@Base+0x15c>
   12de4:	mov	r7, #0
   12de8:	mov	r0, r4
   12dec:	mov	r1, r7
   12df0:	mov	r2, r6
   12df4:	bl	1416c <table_cell_init@@Base>
   12df8:	add	r7, r7, #1
   12dfc:	cmp	r5, r7
   12e00:	bne	12de8 <table_add_column@@Base+0x140>
   12e04:	sub	sp, fp, #24
   12e08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012e0c <table_remove_column@@Base>:
   12e0c:	push	{r4, r5, fp, lr}
   12e10:	add	fp, sp, #8
   12e14:	mov	r4, r1
   12e18:	mov	r5, r0
   12e1c:	bl	12e68 <table_remove_column@@Base+0x5c>
   12e20:	ldr	r0, [r5, #4]
   12e24:	sub	r0, r0, #1
   12e28:	str	r0, [r5, #4]
   12e2c:	mov	r0, r5
   12e30:	bl	12c20 <table_get_column_length@@Base>
   12e34:	ldr	r1, [r5, #8]
   12e38:	udiv	r2, r0, r1
   12e3c:	mls	r0, r2, r1, r0
   12e40:	cmp	r0, #0
   12e44:	moveq	r0, r5
   12e48:	bleq	12f38 <table_remove_column@@Base+0x12c>
   12e4c:	mov	r0, r5
   12e50:	mvn	r1, #0
   12e54:	mov	r2, r4
   12e58:	mov	r3, #16
   12e5c:	bl	12b24 <table_notify@@Base>
   12e60:	mov	r0, #0
   12e64:	pop	{r4, r5, fp, pc}
   12e68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12e6c:	add	fp, sp, #24
   12e70:	mov	r4, r1
   12e74:	mov	r5, r0
   12e78:	bl	12c00 <table_column_destroy@@Base>
   12e7c:	mov	r0, r5
   12e80:	bl	12c20 <table_get_column_length@@Base>
   12e84:	sub	r6, r0, #1
   12e88:	cmp	r6, r4
   12e8c:	ble	12ec4 <table_remove_column@@Base+0xb8>
   12e90:	mvn	r1, r4
   12e94:	add	r0, r1, r0
   12e98:	add	r1, r4, r4, lsl #1
   12e9c:	lsl	r1, r1, #2
   12ea0:	ldr	r2, [r5]
   12ea4:	add	r2, r2, r1
   12ea8:	vldr	d16, [r2, #12]
   12eac:	ldr	r3, [r2, #20]
   12eb0:	str	r3, [r2, #8]
   12eb4:	vstr	d16, [r2]
   12eb8:	add	r1, r1, #12
   12ebc:	subs	r0, r0, #1
   12ec0:	bne	12ea0 <table_remove_column@@Base+0x94>
   12ec4:	mov	r0, r5
   12ec8:	bl	1394c <table_get_row_length@@Base>
   12ecc:	cmp	r0, #1
   12ed0:	blt	12f34 <table_remove_column@@Base+0x128>
   12ed4:	mov	r8, r0
   12ed8:	mov	r7, #0
   12edc:	b	12eec <table_remove_column@@Base+0xe0>
   12ee0:	add	r7, r7, #1
   12ee4:	cmp	r7, r8
   12ee8:	beq	12f34 <table_remove_column@@Base+0x128>
   12eec:	mov	r0, r5
   12ef0:	mov	r1, r7
   12ef4:	mov	r2, r4
   12ef8:	bl	141a0 <table_cell_destroy@@Base>
   12efc:	mov	r0, r5
   12f00:	mov	r1, r7
   12f04:	bl	138d8 <table_get_row_ptr@@Base>
   12f08:	cmp	r6, r4
   12f0c:	ble	12ee0 <table_remove_column@@Base+0xd4>
   12f10:	mov	r1, r4
   12f14:	ldr	r2, [r0]
   12f18:	add	r3, r2, r1, lsl #2
   12f1c:	ldr	r3, [r3, #4]
   12f20:	str	r3, [r2, r1, lsl #2]
   12f24:	add	r1, r1, #1
   12f28:	cmp	r6, r1
   12f2c:	bne	12f14 <table_remove_column@@Base+0x108>
   12f30:	b	12ee0 <table_remove_column@@Base+0xd4>
   12f34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f38:	push	{r4, r5, r6, r7, fp, lr}
   12f3c:	add	fp, sp, #16
   12f40:	mov	r4, r0
   12f44:	ldr	r0, [r0]
   12f48:	ldr	r1, [r4, #8]
   12f4c:	ldr	r2, [r4, #12]
   12f50:	sub	r1, r2, r1
   12f54:	str	r1, [r4, #12]
   12f58:	add	r1, r1, r1, lsl #1
   12f5c:	lsl	r1, r1, #2
   12f60:	bl	11f04 <realloc@plt>
   12f64:	str	r0, [r4]
   12f68:	mov	r0, r4
   12f6c:	bl	1394c <table_get_row_length@@Base>
   12f70:	cmp	r0, #1
   12f74:	blt	12fb0 <table_remove_column@@Base+0x1a4>
   12f78:	mov	r5, r0
   12f7c:	mov	r6, #0
   12f80:	mov	r0, r4
   12f84:	mov	r1, r6
   12f88:	bl	138d8 <table_get_row_ptr@@Base>
   12f8c:	mov	r7, r0
   12f90:	ldr	r0, [r0]
   12f94:	ldr	r1, [r4, #12]
   12f98:	lsl	r1, r1, #2
   12f9c:	bl	11f04 <realloc@plt>
   12fa0:	str	r0, [r7]
   12fa4:	add	r6, r6, #1
   12fa8:	cmp	r5, r6
   12fac:	bne	12f80 <table_remove_column@@Base+0x174>
   12fb0:	pop	{r4, r5, r6, r7, fp, pc}

00012fb4 <table_get_column_compare_function@@Base>:
   12fb4:	push	{fp, lr}
   12fb8:	mov	fp, sp
   12fbc:	bl	12bf0 <table_get_col_ptr@@Base>
   12fc0:	ldr	r0, [r0, #8]
   12fc4:	pop	{fp, pc}

00012fc8 <table_set_column_compare_function@@Base>:
   12fc8:	push	{r4, sl, fp, lr}
   12fcc:	add	fp, sp, #8
   12fd0:	mov	r4, r2
   12fd4:	bl	12bf0 <table_get_col_ptr@@Base>
   12fd8:	str	r4, [r0, #8]
   12fdc:	pop	{r4, sl, fp, pc}

00012fe0 <table_compare_bool@@Base>:
   12fe0:	cmp	r0, #0
   12fe4:	beq	13018 <table_compare_bool@@Base+0x38>
   12fe8:	cmp	r1, #0
   12fec:	moveq	r1, #1
   12ff0:	moveq	r0, r1
   12ff4:	bxeq	lr
   12ff8:	ldrb	r2, [r1]
   12ffc:	ldrb	r0, [r0]
   13000:	mov	r1, #0
   13004:	cmp	r0, r2
   13008:	mvncc	r1, #0
   1300c:	movwhi	r1, #1
   13010:	mov	r0, r1
   13014:	bx	lr
   13018:	cmp	r1, #0
   1301c:	mvnne	r1, #0
   13020:	mov	r0, r1
   13024:	bx	lr

00013028 <table_compare_int@@Base>:
   13028:	cmp	r0, #0
   1302c:	beq	13060 <table_compare_int@@Base+0x38>
   13030:	cmp	r1, #0
   13034:	moveq	r1, #1
   13038:	moveq	r0, r1
   1303c:	bxeq	lr
   13040:	ldr	r2, [r1]
   13044:	ldr	r0, [r0]
   13048:	mov	r1, #0
   1304c:	cmp	r0, r2
   13050:	mvnlt	r1, #0
   13054:	movwgt	r1, #1
   13058:	mov	r0, r1
   1305c:	bx	lr
   13060:	cmp	r1, #0
   13064:	mvnne	r1, #0
   13068:	mov	r0, r1
   1306c:	bx	lr

00013070 <table_compare_uint@@Base>:
   13070:	cmp	r0, #0
   13074:	beq	130a8 <table_compare_uint@@Base+0x38>
   13078:	cmp	r1, #0
   1307c:	moveq	r1, #1
   13080:	moveq	r0, r1
   13084:	bxeq	lr
   13088:	ldr	r2, [r1]
   1308c:	ldr	r0, [r0]
   13090:	mov	r1, #0
   13094:	cmp	r0, r2
   13098:	mvncc	r1, #0
   1309c:	movwhi	r1, #1
   130a0:	mov	r0, r1
   130a4:	bx	lr
   130a8:	cmp	r1, #0
   130ac:	mvnne	r1, #0
   130b0:	mov	r0, r1
   130b4:	bx	lr

000130b8 <table_compare_int8@@Base>:
   130b8:	cmp	r0, #0
   130bc:	beq	130f0 <table_compare_int8@@Base+0x38>
   130c0:	cmp	r1, #0
   130c4:	moveq	r1, #1
   130c8:	moveq	r0, r1
   130cc:	bxeq	lr
   130d0:	ldrsb	r2, [r1]
   130d4:	ldrsb	r0, [r0]
   130d8:	mov	r1, #0
   130dc:	cmp	r0, r2
   130e0:	mvnlt	r1, #0
   130e4:	movwgt	r1, #1
   130e8:	mov	r0, r1
   130ec:	bx	lr
   130f0:	cmp	r1, #0
   130f4:	mvnne	r1, #0
   130f8:	mov	r0, r1
   130fc:	bx	lr

00013100 <table_compare_uint8@@Base>:
   13100:	cmp	r0, #0
   13104:	beq	13138 <table_compare_uint8@@Base+0x38>
   13108:	cmp	r1, #0
   1310c:	moveq	r1, #1
   13110:	moveq	r0, r1
   13114:	bxeq	lr
   13118:	ldrb	r2, [r1]
   1311c:	ldrb	r0, [r0]
   13120:	mov	r1, #0
   13124:	cmp	r0, r2
   13128:	mvncc	r1, #0
   1312c:	movwhi	r1, #1
   13130:	mov	r0, r1
   13134:	bx	lr
   13138:	cmp	r1, #0
   1313c:	mvnne	r1, #0
   13140:	mov	r0, r1
   13144:	bx	lr

00013148 <table_compare_int16@@Base>:
   13148:	cmp	r0, #0
   1314c:	beq	13180 <table_compare_int16@@Base+0x38>
   13150:	cmp	r1, #0
   13154:	moveq	r1, #1
   13158:	moveq	r0, r1
   1315c:	bxeq	lr
   13160:	ldrsh	r2, [r1]
   13164:	ldrsh	r0, [r0]
   13168:	mov	r1, #0
   1316c:	cmp	r0, r2
   13170:	mvnlt	r1, #0
   13174:	movwgt	r1, #1
   13178:	mov	r0, r1
   1317c:	bx	lr
   13180:	cmp	r1, #0
   13184:	mvnne	r1, #0
   13188:	mov	r0, r1
   1318c:	bx	lr

00013190 <table_compare_uint16@@Base>:
   13190:	cmp	r0, #0
   13194:	beq	131c8 <table_compare_uint16@@Base+0x38>
   13198:	cmp	r1, #0
   1319c:	moveq	r1, #1
   131a0:	moveq	r0, r1
   131a4:	bxeq	lr
   131a8:	ldrh	r2, [r1]
   131ac:	ldrh	r0, [r0]
   131b0:	mov	r1, #0
   131b4:	cmp	r0, r2
   131b8:	mvncc	r1, #0
   131bc:	movwhi	r1, #1
   131c0:	mov	r0, r1
   131c4:	bx	lr
   131c8:	cmp	r1, #0
   131cc:	mvnne	r1, #0
   131d0:	mov	r0, r1
   131d4:	bx	lr

000131d8 <table_compare_int32@@Base>:
   131d8:	cmp	r0, #0
   131dc:	beq	13210 <table_compare_int32@@Base+0x38>
   131e0:	cmp	r1, #0
   131e4:	moveq	r1, #1
   131e8:	moveq	r0, r1
   131ec:	bxeq	lr
   131f0:	ldr	r2, [r1]
   131f4:	ldr	r0, [r0]
   131f8:	mov	r1, #0
   131fc:	cmp	r0, r2
   13200:	mvnlt	r1, #0
   13204:	movwgt	r1, #1
   13208:	mov	r0, r1
   1320c:	bx	lr
   13210:	cmp	r1, #0
   13214:	mvnne	r1, #0
   13218:	mov	r0, r1
   1321c:	bx	lr

00013220 <table_compare_uint32@@Base>:
   13220:	cmp	r0, #0
   13224:	beq	13258 <table_compare_uint32@@Base+0x38>
   13228:	cmp	r1, #0
   1322c:	moveq	r1, #1
   13230:	moveq	r0, r1
   13234:	bxeq	lr
   13238:	ldr	r2, [r1]
   1323c:	ldr	r0, [r0]
   13240:	mov	r1, #0
   13244:	cmp	r0, r2
   13248:	mvncc	r1, #0
   1324c:	movwhi	r1, #1
   13250:	mov	r0, r1
   13254:	bx	lr
   13258:	cmp	r1, #0
   1325c:	mvnne	r1, #0
   13260:	mov	r0, r1
   13264:	bx	lr

00013268 <table_compare_int64@@Base>:
   13268:	cmp	r0, #0
   1326c:	beq	132c0 <table_compare_int64@@Base+0x58>
   13270:	cmp	r1, #0
   13274:	moveq	r1, #1
   13278:	moveq	r0, r1
   1327c:	bxeq	lr
   13280:	push	{r5, r7, fp, lr}
   13284:	add	fp, sp, #8
   13288:	ldm	r1, {r2, r7}
   1328c:	ldm	r0, {r0, r5}
   13290:	mov	r1, #0
   13294:	subs	r3, r0, r2
   13298:	sbcs	r3, r5, r7
   1329c:	movwlt	r1, #1
   132a0:	cmp	r1, #0
   132a4:	mvnne	r1, #0
   132a8:	subs	r0, r2, r0
   132ac:	sbcs	r0, r7, r5
   132b0:	movwlt	r1, #1
   132b4:	pop	{r5, r7, fp, lr}
   132b8:	mov	r0, r1
   132bc:	bx	lr
   132c0:	cmp	r1, #0
   132c4:	mvnne	r1, #0
   132c8:	mov	r0, r1
   132cc:	bx	lr

000132d0 <table_compare_uint64@@Base>:
   132d0:	cmp	r0, #0
   132d4:	beq	13328 <table_compare_uint64@@Base+0x58>
   132d8:	cmp	r1, #0
   132dc:	moveq	r1, #1
   132e0:	moveq	r0, r1
   132e4:	bxeq	lr
   132e8:	push	{r5, r7, fp, lr}
   132ec:	add	fp, sp, #8
   132f0:	ldm	r1, {r2, r7}
   132f4:	ldm	r0, {r0, r5}
   132f8:	mov	r1, #0
   132fc:	subs	r3, r0, r2
   13300:	sbcs	r3, r5, r7
   13304:	movwcc	r1, #1
   13308:	cmp	r1, #0
   1330c:	mvnne	r1, #0
   13310:	subs	r0, r2, r0
   13314:	sbcs	r0, r7, r5
   13318:	movwcc	r1, #1
   1331c:	pop	{r5, r7, fp, lr}
   13320:	mov	r0, r1
   13324:	bx	lr
   13328:	cmp	r1, #0
   1332c:	mvnne	r1, #0
   13330:	mov	r0, r1
   13334:	bx	lr

00013338 <table_compare_short@@Base>:
   13338:	cmp	r0, #0
   1333c:	beq	13370 <table_compare_short@@Base+0x38>
   13340:	cmp	r1, #0
   13344:	moveq	r1, #1
   13348:	moveq	r0, r1
   1334c:	bxeq	lr
   13350:	ldrsh	r2, [r1]
   13354:	ldrsh	r0, [r0]
   13358:	mov	r1, #0
   1335c:	cmp	r0, r2
   13360:	mvnlt	r1, #0
   13364:	movwgt	r1, #1
   13368:	mov	r0, r1
   1336c:	bx	lr
   13370:	cmp	r1, #0
   13374:	mvnne	r1, #0
   13378:	mov	r0, r1
   1337c:	bx	lr

00013380 <table_compare_ushort@@Base>:
   13380:	cmp	r0, #0
   13384:	beq	133b8 <table_compare_ushort@@Base+0x38>
   13388:	cmp	r1, #0
   1338c:	moveq	r1, #1
   13390:	moveq	r0, r1
   13394:	bxeq	lr
   13398:	ldrh	r2, [r1]
   1339c:	ldrh	r0, [r0]
   133a0:	mov	r1, #0
   133a4:	cmp	r0, r2
   133a8:	mvncc	r1, #0
   133ac:	movwhi	r1, #1
   133b0:	mov	r0, r1
   133b4:	bx	lr
   133b8:	cmp	r1, #0
   133bc:	mvnne	r1, #0
   133c0:	mov	r0, r1
   133c4:	bx	lr

000133c8 <table_compare_long@@Base>:
   133c8:	cmp	r0, #0
   133cc:	beq	13400 <table_compare_long@@Base+0x38>
   133d0:	cmp	r1, #0
   133d4:	moveq	r1, #1
   133d8:	moveq	r0, r1
   133dc:	bxeq	lr
   133e0:	ldr	r2, [r1]
   133e4:	ldr	r0, [r0]
   133e8:	mov	r1, #0
   133ec:	cmp	r0, r2
   133f0:	mvnlt	r1, #0
   133f4:	movwgt	r1, #1
   133f8:	mov	r0, r1
   133fc:	bx	lr
   13400:	cmp	r1, #0
   13404:	mvnne	r1, #0
   13408:	mov	r0, r1
   1340c:	bx	lr

00013410 <table_compare_ulong@@Base>:
   13410:	cmp	r0, #0
   13414:	beq	13448 <table_compare_ulong@@Base+0x38>
   13418:	cmp	r1, #0
   1341c:	moveq	r1, #1
   13420:	moveq	r0, r1
   13424:	bxeq	lr
   13428:	ldr	r2, [r1]
   1342c:	ldr	r0, [r0]
   13430:	mov	r1, #0
   13434:	cmp	r0, r2
   13438:	mvncc	r1, #0
   1343c:	movwhi	r1, #1
   13440:	mov	r0, r1
   13444:	bx	lr
   13448:	cmp	r1, #0
   1344c:	mvnne	r1, #0
   13450:	mov	r0, r1
   13454:	bx	lr

00013458 <table_compare_llong@@Base>:
   13458:	cmp	r0, #0
   1345c:	beq	134b0 <table_compare_llong@@Base+0x58>
   13460:	cmp	r1, #0
   13464:	moveq	r1, #1
   13468:	moveq	r0, r1
   1346c:	bxeq	lr
   13470:	push	{r5, r7, fp, lr}
   13474:	add	fp, sp, #8
   13478:	ldm	r1, {r2, r7}
   1347c:	ldm	r0, {r0, r5}
   13480:	mov	r1, #0
   13484:	subs	r3, r0, r2
   13488:	sbcs	r3, r5, r7
   1348c:	movwlt	r1, #1
   13490:	cmp	r1, #0
   13494:	mvnne	r1, #0
   13498:	subs	r0, r2, r0
   1349c:	sbcs	r0, r7, r5
   134a0:	movwlt	r1, #1
   134a4:	pop	{r5, r7, fp, lr}
   134a8:	mov	r0, r1
   134ac:	bx	lr
   134b0:	cmp	r1, #0
   134b4:	mvnne	r1, #0
   134b8:	mov	r0, r1
   134bc:	bx	lr

000134c0 <table_compare_ullong@@Base>:
   134c0:	cmp	r0, #0
   134c4:	beq	134f8 <table_compare_ullong@@Base+0x38>
   134c8:	cmp	r1, #0
   134cc:	moveq	r1, #1
   134d0:	moveq	r0, r1
   134d4:	bxeq	lr
   134d8:	ldr	r2, [r1]
   134dc:	ldr	r0, [r0]
   134e0:	mov	r1, #0
   134e4:	cmp	r0, r2
   134e8:	mvncc	r1, #0
   134ec:	movwhi	r1, #1
   134f0:	mov	r0, r1
   134f4:	bx	lr
   134f8:	cmp	r1, #0
   134fc:	mvnne	r1, #0
   13500:	mov	r0, r1
   13504:	bx	lr

00013508 <table_compare_float@@Base>:
   13508:	cmp	r0, #0
   1350c:	beq	13544 <table_compare_float@@Base+0x3c>
   13510:	cmp	r1, #0
   13514:	moveq	r1, #1
   13518:	moveq	r0, r1
   1351c:	bxeq	lr
   13520:	vldr	s0, [r1]
   13524:	vldr	s2, [r0]
   13528:	mov	r1, #0
   1352c:	vcmpe.f32	s2, s0
   13530:	vmrs	APSR_nzcv, fpscr
   13534:	mvnmi	r1, #0
   13538:	movwgt	r1, #1
   1353c:	mov	r0, r1
   13540:	bx	lr
   13544:	cmp	r1, #0
   13548:	mvnne	r1, #0
   1354c:	mov	r0, r1
   13550:	bx	lr

00013554 <table_compare_double@@Base>:
   13554:	cmp	r0, #0
   13558:	beq	13590 <table_compare_double@@Base+0x3c>
   1355c:	cmp	r1, #0
   13560:	moveq	r1, #1
   13564:	moveq	r0, r1
   13568:	bxeq	lr
   1356c:	vldr	d16, [r1]
   13570:	vldr	d17, [r0]
   13574:	mov	r1, #0
   13578:	vcmpe.f64	d17, d16
   1357c:	vmrs	APSR_nzcv, fpscr
   13580:	mvnmi	r1, #0
   13584:	movwgt	r1, #1
   13588:	mov	r0, r1
   1358c:	bx	lr
   13590:	cmp	r1, #0
   13594:	mvnne	r1, #0
   13598:	mov	r0, r1
   1359c:	bx	lr

000135a0 <table_compare_ldouble@@Base>:
   135a0:	cmp	r0, #0
   135a4:	beq	135dc <table_compare_ldouble@@Base+0x3c>
   135a8:	cmp	r1, #0
   135ac:	moveq	r1, #1
   135b0:	moveq	r0, r1
   135b4:	bxeq	lr
   135b8:	vldr	d16, [r1]
   135bc:	vldr	d17, [r0]
   135c0:	mov	r1, #0
   135c4:	vcmpe.f64	d17, d16
   135c8:	vmrs	APSR_nzcv, fpscr
   135cc:	mvnmi	r1, #0
   135d0:	movwgt	r1, #1
   135d4:	mov	r0, r1
   135d8:	bx	lr
   135dc:	cmp	r1, #0
   135e0:	mvnne	r1, #0
   135e4:	mov	r0, r1
   135e8:	bx	lr

000135ec <table_compare_char@@Base>:
   135ec:	cmp	r0, #0
   135f0:	beq	13624 <table_compare_char@@Base+0x38>
   135f4:	cmp	r1, #0
   135f8:	moveq	r1, #1
   135fc:	moveq	r0, r1
   13600:	bxeq	lr
   13604:	ldrb	r2, [r1]
   13608:	ldrb	r0, [r0]
   1360c:	mov	r1, #0
   13610:	cmp	r0, r2
   13614:	mvncc	r1, #0
   13618:	movwhi	r1, #1
   1361c:	mov	r0, r1
   13620:	bx	lr
   13624:	cmp	r1, #0
   13628:	mvnne	r1, #0
   1362c:	mov	r0, r1
   13630:	bx	lr

00013634 <table_compare_uchar@@Base>:
   13634:	cmp	r0, #0
   13638:	beq	1366c <table_compare_uchar@@Base+0x38>
   1363c:	cmp	r1, #0
   13640:	moveq	r1, #1
   13644:	moveq	r0, r1
   13648:	bxeq	lr
   1364c:	ldrb	r2, [r1]
   13650:	ldrb	r0, [r0]
   13654:	mov	r1, #0
   13658:	cmp	r0, r2
   1365c:	mvncc	r1, #0
   13660:	movwhi	r1, #1
   13664:	mov	r0, r1
   13668:	bx	lr
   1366c:	cmp	r1, #0
   13670:	mvnne	r1, #0
   13674:	mov	r0, r1
   13678:	bx	lr

0001367c <table_compare_string@@Base>:
   1367c:	cmp	r0, #0
   13680:	beq	13698 <table_compare_string@@Base+0x1c>
   13684:	cmp	r1, #0
   13688:	moveq	r1, #1
   1368c:	moveq	r0, r1
   13690:	bxeq	lr
   13694:	b	11ee0 <strcmp@plt>
   13698:	cmp	r1, #0
   1369c:	mvnne	r1, #0
   136a0:	mov	r0, r1
   136a4:	bx	lr

000136a8 <table_compare_ptr@@Base>:
   136a8:	mov	r2, #0
   136ac:	cmp	r0, r1
   136b0:	mvncc	r2, #0
   136b4:	movwhi	r2, #1
   136b8:	mov	r0, r2
   136bc:	bx	lr

000136c0 <table_get_default_compare_function_for_data_type@@Base>:
   136c0:	cmp	r0, #23
   136c4:	movhi	r0, #0
   136c8:	bxhi	lr
   136cc:	movw	r1, #19508	; 0x4c34
   136d0:	movt	r1, #1
   136d4:	ldr	r0, [r1, r0, lsl #2]
   136d8:	bx	lr

000136dc <table_get@@Base>:
   136dc:	push	{fp, lr}
   136e0:	mov	fp, sp
   136e4:	bl	14184 <table_get_cell_ptr@@Base>
   136e8:	ldr	r0, [r0]
   136ec:	pop	{fp, pc}

000136f0 <table_get_bool@@Base>:
   136f0:	push	{fp, lr}
   136f4:	mov	fp, sp
   136f8:	bl	136dc <table_get@@Base>
   136fc:	ldrb	r0, [r0]
   13700:	pop	{fp, pc}

00013704 <table_get_int@@Base>:
   13704:	push	{fp, lr}
   13708:	mov	fp, sp
   1370c:	bl	136dc <table_get@@Base>
   13710:	ldr	r0, [r0]
   13714:	pop	{fp, pc}

00013718 <table_get_uint@@Base>:
   13718:	push	{fp, lr}
   1371c:	mov	fp, sp
   13720:	bl	136dc <table_get@@Base>
   13724:	ldr	r0, [r0]
   13728:	pop	{fp, pc}

0001372c <table_get_int8@@Base>:
   1372c:	push	{fp, lr}
   13730:	mov	fp, sp
   13734:	bl	136dc <table_get@@Base>
   13738:	ldrsb	r0, [r0]
   1373c:	pop	{fp, pc}

00013740 <table_get_uint8@@Base>:
   13740:	push	{fp, lr}
   13744:	mov	fp, sp
   13748:	bl	136dc <table_get@@Base>
   1374c:	ldrb	r0, [r0]
   13750:	pop	{fp, pc}

00013754 <table_get_int16@@Base>:
   13754:	push	{fp, lr}
   13758:	mov	fp, sp
   1375c:	bl	136dc <table_get@@Base>
   13760:	ldrsh	r0, [r0]
   13764:	pop	{fp, pc}

00013768 <table_get_uint16@@Base>:
   13768:	push	{fp, lr}
   1376c:	mov	fp, sp
   13770:	bl	136dc <table_get@@Base>
   13774:	ldrh	r0, [r0]
   13778:	pop	{fp, pc}

0001377c <table_get_int32@@Base>:
   1377c:	push	{fp, lr}
   13780:	mov	fp, sp
   13784:	bl	136dc <table_get@@Base>
   13788:	ldr	r0, [r0]
   1378c:	pop	{fp, pc}

00013790 <table_get_uint32@@Base>:
   13790:	push	{fp, lr}
   13794:	mov	fp, sp
   13798:	bl	136dc <table_get@@Base>
   1379c:	ldr	r0, [r0]
   137a0:	pop	{fp, pc}

000137a4 <table_get_int64@@Base>:
   137a4:	push	{fp, lr}
   137a8:	mov	fp, sp
   137ac:	bl	136dc <table_get@@Base>
   137b0:	ldrd	r0, [r0]
   137b4:	pop	{fp, pc}

000137b8 <table_get_uint64@@Base>:
   137b8:	push	{fp, lr}
   137bc:	mov	fp, sp
   137c0:	bl	136dc <table_get@@Base>
   137c4:	ldrd	r0, [r0]
   137c8:	pop	{fp, pc}

000137cc <table_get_short@@Base>:
   137cc:	push	{fp, lr}
   137d0:	mov	fp, sp
   137d4:	bl	136dc <table_get@@Base>
   137d8:	ldrsh	r0, [r0]
   137dc:	pop	{fp, pc}

000137e0 <table_get_ushort@@Base>:
   137e0:	push	{fp, lr}
   137e4:	mov	fp, sp
   137e8:	bl	136dc <table_get@@Base>
   137ec:	ldrh	r0, [r0]
   137f0:	pop	{fp, pc}

000137f4 <table_get_long@@Base>:
   137f4:	push	{fp, lr}
   137f8:	mov	fp, sp
   137fc:	bl	136dc <table_get@@Base>
   13800:	ldr	r0, [r0]
   13804:	pop	{fp, pc}

00013808 <table_get_ulong@@Base>:
   13808:	push	{fp, lr}
   1380c:	mov	fp, sp
   13810:	bl	136dc <table_get@@Base>
   13814:	ldr	r0, [r0]
   13818:	pop	{fp, pc}

0001381c <table_get_llong@@Base>:
   1381c:	push	{fp, lr}
   13820:	mov	fp, sp
   13824:	bl	136dc <table_get@@Base>
   13828:	ldrd	r0, [r0]
   1382c:	pop	{fp, pc}

00013830 <table_get_ullong@@Base>:
   13830:	push	{fp, lr}
   13834:	mov	fp, sp
   13838:	bl	136dc <table_get@@Base>
   1383c:	ldrd	r0, [r0]
   13840:	pop	{fp, pc}

00013844 <table_get_float@@Base>:
   13844:	push	{fp, lr}
   13848:	mov	fp, sp
   1384c:	bl	136dc <table_get@@Base>
   13850:	vldr	s0, [r0]
   13854:	pop	{fp, pc}

00013858 <table_get_double@@Base>:
   13858:	push	{fp, lr}
   1385c:	mov	fp, sp
   13860:	bl	136dc <table_get@@Base>
   13864:	vldr	d0, [r0]
   13868:	pop	{fp, pc}

0001386c <table_get_ldouble@@Base>:
   1386c:	push	{fp, lr}
   13870:	mov	fp, sp
   13874:	bl	136dc <table_get@@Base>
   13878:	vldr	d0, [r0]
   1387c:	pop	{fp, pc}

00013880 <table_get_char@@Base>:
   13880:	push	{fp, lr}
   13884:	mov	fp, sp
   13888:	bl	136dc <table_get@@Base>
   1388c:	ldrb	r0, [r0]
   13890:	pop	{fp, pc}

00013894 <table_get_uchar@@Base>:
   13894:	push	{fp, lr}
   13898:	mov	fp, sp
   1389c:	bl	136dc <table_get@@Base>
   138a0:	ldrb	r0, [r0]
   138a4:	pop	{fp, pc}

000138a8 <table_get_string@@Base>:
   138a8:	b	136dc <table_get@@Base>

000138ac <table_get_ptr@@Base>:
   138ac:	b	136dc <table_get@@Base>

000138b0 <table_row_init@@Base>:
   138b0:	push	{r4, r5, fp, lr}
   138b4:	add	fp, sp, #8
   138b8:	mov	r4, r0
   138bc:	bl	138d8 <table_get_row_ptr@@Base>
   138c0:	mov	r5, r0
   138c4:	ldr	r0, [r4, #12]
   138c8:	lsl	r0, r0, #2
   138cc:	bl	11f1c <malloc@plt>
   138d0:	str	r0, [r5]
   138d4:	pop	{r4, r5, fp, pc}

000138d8 <table_get_row_ptr@@Base>:
   138d8:	ldr	r0, [r0, #16]
   138dc:	add	r0, r0, r1, lsl #2
   138e0:	bx	lr

000138e4 <table_row_destroy@@Base>:
   138e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   138e8:	add	fp, sp, #24
   138ec:	mov	r4, r1
   138f0:	mov	r5, r0
   138f4:	bl	12c20 <table_get_column_length@@Base>
   138f8:	mov	r6, r0
   138fc:	mov	r0, r5
   13900:	mov	r1, r4
   13904:	bl	138d8 <table_get_row_ptr@@Base>
   13908:	mov	r8, r0
   1390c:	cmp	r6, #1
   13910:	blt	13934 <table_row_destroy@@Base+0x50>
   13914:	mov	r7, #0
   13918:	mov	r0, r5
   1391c:	mov	r1, r4
   13920:	mov	r2, r7
   13924:	bl	141a0 <table_cell_destroy@@Base>
   13928:	add	r7, r7, #1
   1392c:	cmp	r6, r7
   13930:	bne	13918 <table_row_destroy@@Base+0x34>
   13934:	ldr	r0, [r8]
   13938:	cmp	r0, #0
   1393c:	beq	13948 <table_row_destroy@@Base+0x64>
   13940:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13944:	b	11eec <free@plt>
   13948:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001394c <table_get_row_length@@Base>:
   1394c:	ldr	r0, [r0, #20]
   13950:	bx	lr

00013954 <table_add_row@@Base>:
   13954:	push	{r4, sl, fp, lr}
   13958:	add	fp, sp, #8
   1395c:	mov	r4, r0
   13960:	bl	1394c <table_get_row_length@@Base>
   13964:	ldr	r1, [r4, #24]
   13968:	udiv	r2, r0, r1
   1396c:	mls	r0, r2, r1, r0
   13970:	cmp	r0, #0
   13974:	moveq	r0, r4
   13978:	bleq	139b0 <table_add_row@@Base+0x5c>
   1397c:	mov	r0, r4
   13980:	bl	139e0 <table_add_row@@Base+0x8c>
   13984:	mov	r0, r4
   13988:	bl	1394c <table_get_row_length@@Base>
   1398c:	mov	r1, r0
   13990:	mov	r0, r4
   13994:	mvn	r2, #0
   13998:	mov	r3, #2
   1399c:	bl	12b24 <table_notify@@Base>
   139a0:	ldr	r0, [r4, #20]
   139a4:	add	r1, r0, #1
   139a8:	str	r1, [r4, #20]
   139ac:	pop	{r4, sl, fp, pc}
   139b0:	push	{r4, sl, fp, lr}
   139b4:	add	fp, sp, #8
   139b8:	mov	r4, r0
   139bc:	ldr	r0, [r0, #16]
   139c0:	ldr	r1, [r4, #24]
   139c4:	ldr	r2, [r4, #28]
   139c8:	add	r1, r2, r1
   139cc:	str	r1, [r4, #28]
   139d0:	lsl	r1, r1, #2
   139d4:	bl	11f04 <realloc@plt>
   139d8:	str	r0, [r4, #16]
   139dc:	pop	{r4, sl, fp, pc}
   139e0:	push	{r4, r5, r6, r7, fp, lr}
   139e4:	add	fp, sp, #16
   139e8:	mov	r4, r0
   139ec:	bl	1394c <table_get_row_length@@Base>
   139f0:	mov	r5, r0
   139f4:	mov	r0, r4
   139f8:	bl	12c20 <table_get_column_length@@Base>
   139fc:	mov	r6, r0
   13a00:	mov	r0, r4
   13a04:	mov	r1, r5
   13a08:	bl	138b0 <table_row_init@@Base>
   13a0c:	cmp	r6, #1
   13a10:	blt	13a34 <table_add_row@@Base+0xe0>
   13a14:	mov	r7, #0
   13a18:	mov	r0, r4
   13a1c:	mov	r1, r5
   13a20:	mov	r2, r7
   13a24:	bl	1416c <table_cell_init@@Base>
   13a28:	add	r7, r7, #1
   13a2c:	cmp	r6, r7
   13a30:	bne	13a18 <table_add_row@@Base+0xc4>
   13a34:	pop	{r4, r5, r6, r7, fp, pc}

00013a38 <table_remove_row@@Base>:
   13a38:	push	{r4, r5, fp, lr}
   13a3c:	add	fp, sp, #8
   13a40:	mov	r4, r1
   13a44:	mov	r5, r0
   13a48:	bl	13a94 <table_remove_row@@Base+0x5c>
   13a4c:	ldr	r0, [r5, #20]
   13a50:	sub	r0, r0, #1
   13a54:	str	r0, [r5, #20]
   13a58:	mov	r0, r5
   13a5c:	bl	1394c <table_get_row_length@@Base>
   13a60:	ldr	r1, [r5, #24]
   13a64:	udiv	r2, r0, r1
   13a68:	mls	r0, r2, r1, r0
   13a6c:	cmp	r0, #0
   13a70:	moveq	r0, r5
   13a74:	bleq	13b54 <table_remove_row@@Base+0x11c>
   13a78:	mov	r0, r5
   13a7c:	mov	r1, r4
   13a80:	mvn	r2, #0
   13a84:	mov	r3, #4
   13a88:	bl	12b24 <table_notify@@Base>
   13a8c:	mov	r0, #0
   13a90:	pop	{r4, r5, fp, pc}
   13a94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a98:	add	fp, sp, #24
   13a9c:	mov	r4, r1
   13aa0:	mov	r5, r0
   13aa4:	bl	1394c <table_get_row_length@@Base>
   13aa8:	mov	r8, r0
   13aac:	mov	r0, r5
   13ab0:	bl	12c20 <table_get_column_length@@Base>
   13ab4:	cmp	r0, #1
   13ab8:	blt	13b0c <table_remove_row@@Base+0xd4>
   13abc:	mov	r7, r0
   13ac0:	mov	r6, #0
   13ac4:	b	13ad4 <table_remove_row@@Base+0x9c>
   13ac8:	add	r6, r6, #1
   13acc:	cmp	r7, r6
   13ad0:	beq	13b0c <table_remove_row@@Base+0xd4>
   13ad4:	mov	r0, r5
   13ad8:	mov	r1, r6
   13adc:	bl	12c94 <table_get_column_data_type@@Base>
   13ae0:	cmp	r0, #23
   13ae4:	beq	13ac8 <table_remove_row@@Base+0x90>
   13ae8:	mov	r0, r5
   13aec:	mov	r1, r4
   13af0:	mov	r2, r6
   13af4:	bl	14184 <table_get_cell_ptr@@Base>
   13af8:	ldr	r0, [r0]
   13afc:	cmp	r0, #0
   13b00:	beq	13ac8 <table_remove_row@@Base+0x90>
   13b04:	bl	11eec <free@plt>
   13b08:	b	13ac8 <table_remove_row@@Base+0x90>
   13b0c:	mov	r0, r5
   13b10:	mov	r1, r4
   13b14:	bl	138d8 <table_get_row_ptr@@Base>
   13b18:	ldr	r0, [r0]
   13b1c:	cmp	r0, #0
   13b20:	beq	13b28 <table_remove_row@@Base+0xf0>
   13b24:	bl	11eec <free@plt>
   13b28:	sub	r0, r8, #1
   13b2c:	cmp	r0, r4
   13b30:	ble	13b50 <table_remove_row@@Base+0x118>
   13b34:	ldr	r1, [r5, #16]
   13b38:	add	r2, r1, r4, lsl #2
   13b3c:	ldr	r2, [r2, #4]
   13b40:	str	r2, [r1, r4, lsl #2]
   13b44:	add	r4, r4, #1
   13b48:	cmp	r0, r4
   13b4c:	bne	13b34 <table_remove_row@@Base+0xfc>
   13b50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13b54:	push	{r4, sl, fp, lr}
   13b58:	add	fp, sp, #8
   13b5c:	mov	r4, r0
   13b60:	ldr	r0, [r0, #16]
   13b64:	ldr	r1, [r4, #24]
   13b68:	ldr	r2, [r4, #28]
   13b6c:	sub	r1, r2, r1
   13b70:	str	r1, [r4, #28]
   13b74:	lsl	r1, r1, #2
   13b78:	bl	11f04 <realloc@plt>
   13b7c:	str	r0, [r4, #16]
   13b80:	pop	{r4, sl, fp, pc}

00013b84 <table_set_row_ptr@@Base>:
   13b84:	ldr	r2, [r2]
   13b88:	ldr	r0, [r0, #16]
   13b8c:	str	r2, [r0, r1, lsl #2]
   13b90:	bx	lr

00013b94 <table_set@@Base>:
   13b94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b98:	add	fp, sp, #24
   13b9c:	mov	r8, r3
   13ba0:	mov	r4, r2
   13ba4:	mov	r9, r1
   13ba8:	mov	r6, r0
   13bac:	bl	14184 <table_get_cell_ptr@@Base>
   13bb0:	mov	r5, r0
   13bb4:	mov	r0, r6
   13bb8:	mov	r1, r4
   13bbc:	bl	12bf0 <table_get_col_ptr@@Base>
   13bc0:	mvn	r7, #0
   13bc4:	ldr	r1, [fp, #8]
   13bc8:	cmp	r1, #23
   13bcc:	bhi	13d84 <table_set@@Base+0x1f0>
   13bd0:	add	r2, pc, #0
   13bd4:	ldr	pc, [r2, r1, lsl #2]
   13bd8:	andeq	r3, r1, r8, lsr ip
   13bdc:	andeq	r3, r1, r8, lsr ip
   13be0:			; <UNDEFINED> instruction: 0x00013cb0
   13be4:			; <UNDEFINED> instruction: 0x00013cb0
   13be8:	andeq	r3, r1, r8, ror #25
   13bec:	andeq	r3, r1, r8, ror #25
   13bf0:	andeq	r3, r1, r8, lsr ip
   13bf4:	andeq	r3, r1, r8, lsr ip
   13bf8:	andeq	r3, r1, r0, ror ip
   13bfc:	andeq	r3, r1, r0, ror ip
   13c00:	andeq	r3, r1, r8, ror #25
   13c04:	andeq	r3, r1, r8, ror #25
   13c08:	andeq	r3, r1, r8, lsr ip
   13c0c:	andeq	r3, r1, r8, lsr ip
   13c10:	andeq	r3, r1, r0, ror ip
   13c14:	andeq	r3, r1, r0, ror ip
   13c18:	andeq	r3, r1, r8, lsr ip
   13c1c:	andeq	r3, r1, r0, ror ip
   13c20:	andeq	r3, r1, r0, ror ip
   13c24:			; <UNDEFINED> instruction: 0x00013cb0
   13c28:			; <UNDEFINED> instruction: 0x00013cb0
   13c2c:	andeq	r3, r1, r0, lsr #26
   13c30:			; <UNDEFINED> instruction: 0x00013cb0
   13c34:	andeq	r3, r1, ip, asr sp
   13c38:	ldr	r0, [r0, #4]
   13c3c:	cmp	r0, r1
   13c40:	bne	13d84 <table_set@@Base+0x1f0>
   13c44:	ldr	r0, [r5]
   13c48:	cmp	r0, #0
   13c4c:	bne	13c64 <table_set@@Base+0xd0>
   13c50:	mov	r0, #4
   13c54:	bl	11f1c <malloc@plt>
   13c58:	str	r0, [r5]
   13c5c:	cmp	r0, #0
   13c60:	beq	13d84 <table_set@@Base+0x1f0>
   13c64:	ldr	r1, [r8]
   13c68:	str	r1, [r0]
   13c6c:	b	13d6c <table_set@@Base+0x1d8>
   13c70:	ldr	r0, [r0, #4]
   13c74:	cmp	r0, r1
   13c78:	bne	13d84 <table_set@@Base+0x1f0>
   13c7c:	ldr	r0, [r5]
   13c80:	cmp	r0, #0
   13c84:	bne	13c9c <table_set@@Base+0x108>
   13c88:	mov	r0, #8
   13c8c:	bl	11f1c <malloc@plt>
   13c90:	str	r0, [r5]
   13c94:	cmp	r0, #0
   13c98:	beq	13d84 <table_set@@Base+0x1f0>
   13c9c:	ldr	r1, [r8]
   13ca0:	ldr	r2, [r8, #4]
   13ca4:	str	r2, [r0, #4]
   13ca8:	str	r1, [r0]
   13cac:	b	13d6c <table_set@@Base+0x1d8>
   13cb0:	ldr	r0, [r0, #4]
   13cb4:	cmp	r0, r1
   13cb8:	bne	13d84 <table_set@@Base+0x1f0>
   13cbc:	ldr	r0, [r5]
   13cc0:	cmp	r0, #0
   13cc4:	bne	13cdc <table_set@@Base+0x148>
   13cc8:	mov	r0, #1
   13ccc:	bl	11f1c <malloc@plt>
   13cd0:	str	r0, [r5]
   13cd4:	cmp	r0, #0
   13cd8:	beq	13d84 <table_set@@Base+0x1f0>
   13cdc:	ldrb	r1, [r8]
   13ce0:	strb	r1, [r0]
   13ce4:	b	13d6c <table_set@@Base+0x1d8>
   13ce8:	ldr	r0, [r0, #4]
   13cec:	cmp	r0, r1
   13cf0:	bne	13d84 <table_set@@Base+0x1f0>
   13cf4:	ldr	r0, [r5]
   13cf8:	cmp	r0, #0
   13cfc:	bne	13d14 <table_set@@Base+0x180>
   13d00:	mov	r0, #2
   13d04:	bl	11f1c <malloc@plt>
   13d08:	str	r0, [r5]
   13d0c:	cmp	r0, #0
   13d10:	beq	13d84 <table_set@@Base+0x1f0>
   13d14:	ldrh	r1, [r8]
   13d18:	strh	r1, [r0]
   13d1c:	b	13d6c <table_set@@Base+0x1d8>
   13d20:	ldr	r0, [r0, #4]
   13d24:	cmp	r0, r1
   13d28:	bne	13d84 <table_set@@Base+0x1f0>
   13d2c:	mov	r0, r8
   13d30:	bl	11f40 <strlen@plt>
   13d34:	ldr	r2, [r5]
   13d38:	add	r1, r0, #1
   13d3c:	mov	r0, r2
   13d40:	bl	11f04 <realloc@plt>
   13d44:	str	r0, [r5]
   13d48:	cmp	r0, #0
   13d4c:	beq	13d84 <table_set@@Base+0x1f0>
   13d50:	mov	r1, r8
   13d54:	bl	11f10 <strcpy@plt>
   13d58:	b	13d6c <table_set@@Base+0x1d8>
   13d5c:	ldr	r0, [r0, #4]
   13d60:	cmp	r0, r1
   13d64:	bne	13d84 <table_set@@Base+0x1f0>
   13d68:	str	r8, [r5]
   13d6c:	mov	r0, r6
   13d70:	mov	r1, r9
   13d74:	mov	r2, r4
   13d78:	mov	r3, #1
   13d7c:	bl	12b24 <table_notify@@Base>
   13d80:	mov	r7, #0
   13d84:	mov	r0, r7
   13d88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013d8c <table_set_bool@@Base>:
   13d8c:	push	{fp, lr}
   13d90:	mov	fp, sp
   13d94:	sub	sp, sp, #8
   13d98:	strb	r3, [fp, #-1]
   13d9c:	mov	r3, #22
   13da0:	str	r3, [sp]
   13da4:	sub	r3, fp, #1
   13da8:	bl	13b94 <table_set@@Base>
   13dac:	mov	sp, fp
   13db0:	pop	{fp, pc}

00013db4 <table_set_int@@Base>:
   13db4:	push	{fp, lr}
   13db8:	mov	fp, sp
   13dbc:	sub	sp, sp, #8
   13dc0:	str	r3, [sp, #4]
   13dc4:	mov	r3, #0
   13dc8:	str	r3, [sp]
   13dcc:	add	r3, sp, #4
   13dd0:	bl	13b94 <table_set@@Base>
   13dd4:	mov	sp, fp
   13dd8:	pop	{fp, pc}

00013ddc <table_set_uint@@Base>:
   13ddc:	push	{fp, lr}
   13de0:	mov	fp, sp
   13de4:	sub	sp, sp, #8
   13de8:	str	r3, [sp, #4]
   13dec:	mov	r3, #1
   13df0:	str	r3, [sp]
   13df4:	add	r3, sp, #4
   13df8:	bl	13b94 <table_set@@Base>
   13dfc:	mov	sp, fp
   13e00:	pop	{fp, pc}

00013e04 <table_set_int8@@Base>:
   13e04:	push	{fp, lr}
   13e08:	mov	fp, sp
   13e0c:	sub	sp, sp, #8
   13e10:	strb	r3, [fp, #-1]
   13e14:	mov	r3, #2
   13e18:	str	r3, [sp]
   13e1c:	sub	r3, fp, #1
   13e20:	bl	13b94 <table_set@@Base>
   13e24:	mov	sp, fp
   13e28:	pop	{fp, pc}

00013e2c <table_set_uint8@@Base>:
   13e2c:	push	{fp, lr}
   13e30:	mov	fp, sp
   13e34:	sub	sp, sp, #8
   13e38:	strb	r3, [fp, #-1]
   13e3c:	mov	r3, #3
   13e40:	str	r3, [sp]
   13e44:	sub	r3, fp, #1
   13e48:	bl	13b94 <table_set@@Base>
   13e4c:	mov	sp, fp
   13e50:	pop	{fp, pc}

00013e54 <table_set_int16@@Base>:
   13e54:	push	{fp, lr}
   13e58:	mov	fp, sp
   13e5c:	sub	sp, sp, #8
   13e60:	strh	r3, [fp, #-2]
   13e64:	mov	r3, #4
   13e68:	str	r3, [sp]
   13e6c:	sub	r3, fp, #2
   13e70:	bl	13b94 <table_set@@Base>
   13e74:	mov	sp, fp
   13e78:	pop	{fp, pc}

00013e7c <table_set_uint16@@Base>:
   13e7c:	push	{fp, lr}
   13e80:	mov	fp, sp
   13e84:	sub	sp, sp, #8
   13e88:	strh	r3, [fp, #-2]
   13e8c:	mov	r3, #5
   13e90:	str	r3, [sp]
   13e94:	sub	r3, fp, #2
   13e98:	bl	13b94 <table_set@@Base>
   13e9c:	mov	sp, fp
   13ea0:	pop	{fp, pc}

00013ea4 <table_set_int32@@Base>:
   13ea4:	push	{fp, lr}
   13ea8:	mov	fp, sp
   13eac:	sub	sp, sp, #8
   13eb0:	str	r3, [sp, #4]
   13eb4:	mov	r3, #6
   13eb8:	str	r3, [sp]
   13ebc:	add	r3, sp, #4
   13ec0:	bl	13b94 <table_set@@Base>
   13ec4:	mov	sp, fp
   13ec8:	pop	{fp, pc}

00013ecc <table_set_uint32@@Base>:
   13ecc:	push	{fp, lr}
   13ed0:	mov	fp, sp
   13ed4:	sub	sp, sp, #8
   13ed8:	str	r3, [sp, #4]
   13edc:	mov	r3, #7
   13ee0:	str	r3, [sp]
   13ee4:	add	r3, sp, #4
   13ee8:	bl	13b94 <table_set@@Base>
   13eec:	mov	sp, fp
   13ef0:	pop	{fp, pc}

00013ef4 <table_set_int64@@Base>:
   13ef4:	push	{fp, lr}
   13ef8:	mov	fp, sp
   13efc:	sub	sp, sp, #16
   13f00:	ldr	r3, [fp, #12]
   13f04:	str	r3, [sp, #12]
   13f08:	ldr	r3, [fp, #8]
   13f0c:	str	r3, [sp, #8]
   13f10:	mov	r3, #8
   13f14:	str	r3, [sp]
   13f18:	add	r3, sp, #8
   13f1c:	bl	13b94 <table_set@@Base>
   13f20:	mov	sp, fp
   13f24:	pop	{fp, pc}

00013f28 <table_set_uint64@@Base>:
   13f28:	push	{fp, lr}
   13f2c:	mov	fp, sp
   13f30:	sub	sp, sp, #16
   13f34:	ldr	r3, [fp, #12]
   13f38:	str	r3, [sp, #12]
   13f3c:	ldr	r3, [fp, #8]
   13f40:	str	r3, [sp, #8]
   13f44:	mov	r3, #9
   13f48:	str	r3, [sp]
   13f4c:	add	r3, sp, #8
   13f50:	bl	13b94 <table_set@@Base>
   13f54:	mov	sp, fp
   13f58:	pop	{fp, pc}

00013f5c <table_set_short@@Base>:
   13f5c:	push	{fp, lr}
   13f60:	mov	fp, sp
   13f64:	sub	sp, sp, #8
   13f68:	strh	r3, [fp, #-2]
   13f6c:	mov	r3, #10
   13f70:	str	r3, [sp]
   13f74:	sub	r3, fp, #2
   13f78:	bl	13b94 <table_set@@Base>
   13f7c:	mov	sp, fp
   13f80:	pop	{fp, pc}

00013f84 <table_set_ushort@@Base>:
   13f84:	push	{fp, lr}
   13f88:	mov	fp, sp
   13f8c:	sub	sp, sp, #8
   13f90:	strh	r3, [fp, #-2]
   13f94:	mov	r3, #11
   13f98:	str	r3, [sp]
   13f9c:	sub	r3, fp, #2
   13fa0:	bl	13b94 <table_set@@Base>
   13fa4:	mov	sp, fp
   13fa8:	pop	{fp, pc}

00013fac <table_set_long@@Base>:
   13fac:	push	{fp, lr}
   13fb0:	mov	fp, sp
   13fb4:	sub	sp, sp, #8
   13fb8:	str	r3, [sp, #4]
   13fbc:	mov	r3, #12
   13fc0:	str	r3, [sp]
   13fc4:	add	r3, sp, #4
   13fc8:	bl	13b94 <table_set@@Base>
   13fcc:	mov	sp, fp
   13fd0:	pop	{fp, pc}

00013fd4 <table_set_ulong@@Base>:
   13fd4:	push	{fp, lr}
   13fd8:	mov	fp, sp
   13fdc:	sub	sp, sp, #8
   13fe0:	str	r3, [sp, #4]
   13fe4:	mov	r3, #13
   13fe8:	str	r3, [sp]
   13fec:	add	r3, sp, #4
   13ff0:	bl	13b94 <table_set@@Base>
   13ff4:	mov	sp, fp
   13ff8:	pop	{fp, pc}

00013ffc <table_set_llong@@Base>:
   13ffc:	push	{fp, lr}
   14000:	mov	fp, sp
   14004:	sub	sp, sp, #16
   14008:	ldr	r3, [fp, #12]
   1400c:	str	r3, [sp, #12]
   14010:	ldr	r3, [fp, #8]
   14014:	str	r3, [sp, #8]
   14018:	mov	r3, #14
   1401c:	str	r3, [sp]
   14020:	add	r3, sp, #8
   14024:	bl	13b94 <table_set@@Base>
   14028:	mov	sp, fp
   1402c:	pop	{fp, pc}

00014030 <table_set_ullong@@Base>:
   14030:	push	{fp, lr}
   14034:	mov	fp, sp
   14038:	sub	sp, sp, #16
   1403c:	ldr	r3, [fp, #12]
   14040:	str	r3, [sp, #12]
   14044:	ldr	r3, [fp, #8]
   14048:	str	r3, [sp, #8]
   1404c:	mov	r3, #15
   14050:	str	r3, [sp]
   14054:	add	r3, sp, #8
   14058:	bl	13b94 <table_set@@Base>
   1405c:	mov	sp, fp
   14060:	pop	{fp, pc}

00014064 <table_set_float@@Base>:
   14064:	push	{fp, lr}
   14068:	mov	fp, sp
   1406c:	sub	sp, sp, #8
   14070:	vstr	s0, [sp, #4]
   14074:	mov	r3, #16
   14078:	str	r3, [sp]
   1407c:	add	r3, sp, #4
   14080:	bl	13b94 <table_set@@Base>
   14084:	mov	sp, fp
   14088:	pop	{fp, pc}

0001408c <table_set_double@@Base>:
   1408c:	push	{fp, lr}
   14090:	mov	fp, sp
   14094:	sub	sp, sp, #16
   14098:	vstr	d0, [sp, #8]
   1409c:	mov	r3, #17
   140a0:	str	r3, [sp]
   140a4:	add	r3, sp, #8
   140a8:	bl	13b94 <table_set@@Base>
   140ac:	mov	sp, fp
   140b0:	pop	{fp, pc}

000140b4 <table_set_ldouble@@Base>:
   140b4:	push	{fp, lr}
   140b8:	mov	fp, sp
   140bc:	sub	sp, sp, #16
   140c0:	vstr	d0, [sp, #8]
   140c4:	mov	r3, #18
   140c8:	str	r3, [sp]
   140cc:	add	r3, sp, #8
   140d0:	bl	13b94 <table_set@@Base>
   140d4:	mov	sp, fp
   140d8:	pop	{fp, pc}

000140dc <table_set_string@@Base>:
   140dc:	push	{fp, lr}
   140e0:	mov	fp, sp
   140e4:	sub	sp, sp, #8
   140e8:	mov	ip, #21
   140ec:	str	ip, [sp]
   140f0:	bl	13b94 <table_set@@Base>
   140f4:	mov	sp, fp
   140f8:	pop	{fp, pc}

000140fc <table_set_char@@Base>:
   140fc:	push	{fp, lr}
   14100:	mov	fp, sp
   14104:	sub	sp, sp, #8
   14108:	strb	r3, [fp, #-1]
   1410c:	mov	r3, #19
   14110:	str	r3, [sp]
   14114:	sub	r3, fp, #1
   14118:	bl	13b94 <table_set@@Base>
   1411c:	mov	sp, fp
   14120:	pop	{fp, pc}

00014124 <table_set_uchar@@Base>:
   14124:	push	{fp, lr}
   14128:	mov	fp, sp
   1412c:	sub	sp, sp, #8
   14130:	strb	r3, [fp, #-1]
   14134:	mov	r3, #20
   14138:	str	r3, [sp]
   1413c:	sub	r3, fp, #1
   14140:	bl	13b94 <table_set@@Base>
   14144:	mov	sp, fp
   14148:	pop	{fp, pc}

0001414c <table_set_ptr@@Base>:
   1414c:	push	{fp, lr}
   14150:	mov	fp, sp
   14154:	sub	sp, sp, #8
   14158:	mov	ip, #23
   1415c:	str	ip, [sp]
   14160:	bl	13b94 <table_set@@Base>
   14164:	mov	sp, fp
   14168:	pop	{fp, pc}

0001416c <table_cell_init@@Base>:
   1416c:	push	{fp, lr}
   14170:	mov	fp, sp
   14174:	bl	14184 <table_get_cell_ptr@@Base>
   14178:	mov	r1, #0
   1417c:	str	r1, [r0]
   14180:	pop	{fp, pc}

00014184 <table_get_cell_ptr@@Base>:
   14184:	push	{r4, sl, fp, lr}
   14188:	add	fp, sp, #8
   1418c:	mov	r4, r2
   14190:	bl	138d8 <table_get_row_ptr@@Base>
   14194:	ldr	r0, [r0]
   14198:	add	r0, r0, r4, lsl #2
   1419c:	pop	{r4, sl, fp, pc}

000141a0 <table_cell_destroy@@Base>:
   141a0:	push	{r4, r5, r6, sl, fp, lr}
   141a4:	add	fp, sp, #16
   141a8:	mov	r4, r2
   141ac:	mov	r5, r1
   141b0:	mov	r6, r0
   141b4:	mov	r1, r2
   141b8:	bl	12c94 <table_get_column_data_type@@Base>
   141bc:	cmp	r0, #23
   141c0:	popeq	{r4, r5, r6, sl, fp, pc}
   141c4:	mov	r0, r6
   141c8:	mov	r1, r5
   141cc:	mov	r2, r4
   141d0:	bl	14184 <table_get_cell_ptr@@Base>
   141d4:	ldr	r0, [r0]
   141d8:	cmp	r0, #0
   141dc:	beq	141e8 <table_cell_destroy@@Base+0x48>
   141e0:	pop	{r4, r5, r6, sl, fp, lr}
   141e4:	b	11eec <free@plt>
   141e8:	pop	{r4, r5, r6, sl, fp, pc}

000141ec <table_cell_to_buffer@@Base>:
   141ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141f0:	add	fp, sp, #24
   141f4:	sub	sp, sp, #8
   141f8:	mov	r5, r3
   141fc:	mov	r6, r2
   14200:	mov	r7, r1
   14204:	mov	r4, r0
   14208:	mov	r1, r2
   1420c:	bl	12c94 <table_get_column_data_type@@Base>
   14210:	cmp	r0, #23
   14214:	bhi	14504 <table_cell_to_buffer@@Base+0x318>
   14218:	ldr	r8, [fp, #8]
   1421c:	add	r1, pc, #0
   14220:	ldr	pc, [r1, r0, lsl #2]
   14224:	andeq	r4, r1, r4, lsl #5
   14228:	muleq	r1, r8, r2
   1422c:	andeq	r4, r1, ip, lsr #5
   14230:	andeq	r4, r1, r0, asr #5
   14234:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14238:	andeq	r4, r1, r8, ror #5
   1423c:	strdeq	r4, [r1], -ip
   14240:	andeq	r4, r1, r0, lsl r3
   14244:	andeq	r4, r1, r0, lsr r3
   14248:	andeq	r4, r1, r4, asr #6
   1424c:	andeq	r4, r1, r8, asr r3
   14250:	andeq	r4, r1, r8, ror r3
   14254:	muleq	r1, r8, r3
   14258:			; <UNDEFINED> instruction: 0x000143b8
   1425c:	ldrdeq	r4, [r1], -r8
   14260:	strdeq	r4, [r1], -r8
   14264:	andeq	r4, r1, r8, lsl r4
   14268:	andeq	r4, r1, ip, lsr r4
   1426c:	andeq	r4, r1, ip, asr r4
   14270:	andeq	r4, r1, r8, lsl #9
   14274:	muleq	r1, ip, r4
   14278:			; <UNDEFINED> instruction: 0x000144bc
   1427c:	ldrdeq	r4, [r1], -ip
   14280:	andeq	r4, r1, r0, lsl r5
   14284:	mov	r0, r4
   14288:	mov	r1, r7
   1428c:	mov	r2, r6
   14290:	bl	13704 <table_get_int@@Base>
   14294:	b	144ec <table_cell_to_buffer@@Base+0x300>
   14298:	mov	r0, r4
   1429c:	mov	r1, r7
   142a0:	mov	r2, r6
   142a4:	bl	13718 <table_get_uint@@Base>
   142a8:	b	14320 <table_cell_to_buffer@@Base+0x134>
   142ac:	mov	r0, r4
   142b0:	mov	r1, r7
   142b4:	mov	r2, r6
   142b8:	bl	1372c <table_get_int8@@Base>
   142bc:	b	144ec <table_cell_to_buffer@@Base+0x300>
   142c0:	mov	r0, r4
   142c4:	mov	r1, r7
   142c8:	mov	r2, r6
   142cc:	bl	13740 <table_get_uint8@@Base>
   142d0:	b	14320 <table_cell_to_buffer@@Base+0x134>
   142d4:	mov	r0, r4
   142d8:	mov	r1, r7
   142dc:	mov	r2, r6
   142e0:	bl	13754 <table_get_int16@@Base>
   142e4:	b	144ec <table_cell_to_buffer@@Base+0x300>
   142e8:	mov	r0, r4
   142ec:	mov	r1, r7
   142f0:	mov	r2, r6
   142f4:	bl	13768 <table_get_uint16@@Base>
   142f8:	b	14320 <table_cell_to_buffer@@Base+0x134>
   142fc:	mov	r0, r4
   14300:	mov	r1, r7
   14304:	mov	r2, r6
   14308:	bl	1377c <table_get_int32@@Base>
   1430c:	b	144ec <table_cell_to_buffer@@Base+0x300>
   14310:	mov	r0, r4
   14314:	mov	r1, r7
   14318:	mov	r2, r6
   1431c:	bl	13790 <table_get_uint32@@Base>
   14320:	mov	r3, r0
   14324:	movw	r2, #19607	; 0x4c97
   14328:	movt	r2, #1
   1432c:	b	144f8 <table_cell_to_buffer@@Base+0x30c>
   14330:	mov	r0, r4
   14334:	mov	r1, r7
   14338:	mov	r2, r6
   1433c:	bl	137a4 <table_get_int64@@Base>
   14340:	b	143e8 <table_cell_to_buffer@@Base+0x1fc>
   14344:	mov	r0, r4
   14348:	mov	r1, r7
   1434c:	mov	r2, r6
   14350:	bl	137b8 <table_get_uint64@@Base>
   14354:	b	14408 <table_cell_to_buffer@@Base+0x21c>
   14358:	mov	r0, r4
   1435c:	mov	r1, r7
   14360:	mov	r2, r6
   14364:	bl	137cc <table_get_short@@Base>
   14368:	mov	r3, r0
   1436c:	movw	r2, #19620	; 0x4ca4
   14370:	movt	r2, #1
   14374:	b	144f8 <table_cell_to_buffer@@Base+0x30c>
   14378:	mov	r0, r4
   1437c:	mov	r1, r7
   14380:	mov	r2, r6
   14384:	bl	137e0 <table_get_ushort@@Base>
   14388:	mov	r3, r0
   1438c:	movw	r2, #19624	; 0x4ca8
   14390:	movt	r2, #1
   14394:	b	144f8 <table_cell_to_buffer@@Base+0x30c>
   14398:	mov	r0, r4
   1439c:	mov	r1, r7
   143a0:	mov	r2, r6
   143a4:	bl	137f4 <table_get_long@@Base>
   143a8:	mov	r3, r0
   143ac:	movw	r2, #19628	; 0x4cac
   143b0:	movt	r2, #1
   143b4:	b	144f8 <table_cell_to_buffer@@Base+0x30c>
   143b8:	mov	r0, r4
   143bc:	mov	r1, r7
   143c0:	mov	r2, r6
   143c4:	bl	13808 <table_get_ulong@@Base>
   143c8:	mov	r3, r0
   143cc:	movw	r2, #19632	; 0x4cb0
   143d0:	movt	r2, #1
   143d4:	b	144f8 <table_cell_to_buffer@@Base+0x30c>
   143d8:	mov	r0, r4
   143dc:	mov	r1, r7
   143e0:	mov	r2, r6
   143e4:	bl	1381c <table_get_llong@@Base>
   143e8:	stm	sp, {r0, r1}
   143ec:	movw	r2, #19610	; 0x4c9a
   143f0:	movt	r2, #1
   143f4:	b	14478 <table_cell_to_buffer@@Base+0x28c>
   143f8:	mov	r0, r4
   143fc:	mov	r1, r7
   14400:	mov	r2, r6
   14404:	bl	13830 <table_get_ullong@@Base>
   14408:	stm	sp, {r0, r1}
   1440c:	movw	r2, #19615	; 0x4c9f
   14410:	movt	r2, #1
   14414:	b	14478 <table_cell_to_buffer@@Base+0x28c>
   14418:	mov	r0, r4
   1441c:	mov	r1, r7
   14420:	mov	r2, r6
   14424:	bl	13844 <table_get_float@@Base>
   14428:	vcvt.f64.f32	d16, s0
   1442c:	vstr	d16, [sp]
   14430:	movw	r2, #19639	; 0x4cb7
   14434:	movt	r2, #1
   14438:	b	14478 <table_cell_to_buffer@@Base+0x28c>
   1443c:	mov	r0, r4
   14440:	mov	r1, r7
   14444:	mov	r2, r6
   14448:	bl	13858 <table_get_double@@Base>
   1444c:	vstr	d0, [sp]
   14450:	movw	r2, #19642	; 0x4cba
   14454:	movt	r2, #1
   14458:	b	14478 <table_cell_to_buffer@@Base+0x28c>
   1445c:	mov	r0, r4
   14460:	mov	r1, r7
   14464:	mov	r2, r6
   14468:	bl	1386c <table_get_ldouble@@Base>
   1446c:	vstr	d0, [sp]
   14470:	movw	r2, #19646	; 0x4cbe
   14474:	movt	r2, #1
   14478:	mov	r0, r5
   1447c:	mov	r1, r8
   14480:	bl	11f58 <snprintf@plt>
   14484:	b	14504 <table_cell_to_buffer@@Base+0x318>
   14488:	mov	r0, r4
   1448c:	mov	r1, r7
   14490:	mov	r2, r6
   14494:	bl	13880 <table_get_char@@Base>
   14498:	b	144ac <table_cell_to_buffer@@Base+0x2c0>
   1449c:	mov	r0, r4
   144a0:	mov	r1, r7
   144a4:	mov	r2, r6
   144a8:	bl	13894 <table_get_uchar@@Base>
   144ac:	mov	r3, r0
   144b0:	movw	r2, #19650	; 0x4cc2
   144b4:	movt	r2, #1
   144b8:	b	144f8 <table_cell_to_buffer@@Base+0x30c>
   144bc:	mov	r0, r4
   144c0:	mov	r1, r7
   144c4:	mov	r2, r6
   144c8:	bl	138a8 <table_get_string@@Base>
   144cc:	mov	r3, r0
   144d0:	movw	r2, #19636	; 0x4cb4
   144d4:	movt	r2, #1
   144d8:	b	144f8 <table_cell_to_buffer@@Base+0x30c>
   144dc:	mov	r0, r4
   144e0:	mov	r1, r7
   144e4:	mov	r2, r6
   144e8:	bl	136f0 <table_get_bool@@Base>
   144ec:	mov	r3, r0
   144f0:	movw	r2, #19604	; 0x4c94
   144f4:	movt	r2, #1
   144f8:	mov	r0, r5
   144fc:	mov	r1, r8
   14500:	bl	11f58 <snprintf@plt>
   14504:	mov	r0, #0
   14508:	sub	sp, fp, #24
   1450c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14510:	mov	r0, r4
   14514:	mov	r1, r7
   14518:	mov	r2, r6
   1451c:	bl	138ac <table_get_ptr@@Base>
   14520:	mov	r3, r0
   14524:	movw	r2, #19653	; 0x4cc5
   14528:	movt	r2, #1
   1452c:	b	144f8 <table_cell_to_buffer@@Base+0x30c>

00014530 <table_cell_from_buffer@@Base>:
   14530:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14534:	add	fp, sp, #24
   14538:	sub	sp, sp, #264	; 0x108
   1453c:	mov	r7, r3
   14540:	mov	r4, r2
   14544:	mov	r5, r1
   14548:	mov	r6, r0
   1454c:	mov	r1, r2
   14550:	bl	12c94 <table_get_column_data_type@@Base>
   14554:	cmp	r0, #23
   14558:	bhi	14b88 <table_cell_from_buffer@@Base+0x658>
   1455c:	add	r1, pc, #0
   14560:	ldr	pc, [r1, r0, lsl #2]
   14564:	andeq	r4, r1, r4, asr #11
   14568:	andeq	r4, r1, r0, lsl #12
   1456c:	andeq	r4, r1, ip, lsr r6
   14570:	andeq	r4, r1, r8, ror r6
   14574:			; <UNDEFINED> instruction: 0x000146b4
   14578:	strdeq	r4, [r1], -r0
   1457c:	andeq	r4, r1, ip, lsr #14
   14580:	andeq	r4, r1, r8, ror #14
   14584:	andeq	r4, r1, r4, lsr #15
   14588:	andeq	r4, r1, r8, ror #15
   1458c:	andeq	r4, r1, ip, lsr #16
   14590:	andeq	r4, r1, r8, ror #16
   14594:	andeq	r4, r1, r4, lsr #17
   14598:	andeq	r4, r1, r0, ror #17
   1459c:	andeq	r4, r1, ip, lsl r9
   145a0:	andeq	r4, r1, r0, ror #18
   145a4:	andeq	r4, r1, r4, lsr #19
   145a8:	andeq	r4, r1, r0, ror #19
   145ac:	andeq	r4, r1, ip, lsl sl
   145b0:	andeq	r4, r1, r8, asr sl
   145b4:	muleq	r1, r4, sl
   145b8:	ldrdeq	r4, [r1], -r0
   145bc:	andeq	r4, r1, ip, lsl #22
   145c0:	andeq	r4, r1, r0, asr fp
   145c4:	movw	r1, #19604	; 0x4c94
   145c8:	movt	r1, #1
   145cc:	add	r2, sp, #8
   145d0:	mov	r0, r7
   145d4:	bl	11f64 <__isoc99_sscanf@plt>
   145d8:	mov	r1, r0
   145dc:	mvn	r0, #0
   145e0:	cmp	r1, #1
   145e4:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   145e8:	ldr	r3, [sp, #8]
   145ec:	mov	r0, r6
   145f0:	mov	r1, r5
   145f4:	mov	r2, r4
   145f8:	bl	13db4 <table_set_int@@Base>
   145fc:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   14600:	movw	r1, #19607	; 0x4c97
   14604:	movt	r1, #1
   14608:	add	r2, sp, #8
   1460c:	mov	r0, r7
   14610:	bl	11f64 <__isoc99_sscanf@plt>
   14614:	mov	r1, r0
   14618:	mvn	r0, #0
   1461c:	cmp	r1, #1
   14620:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14624:	ldr	r3, [sp, #8]
   14628:	mov	r0, r6
   1462c:	mov	r1, r5
   14630:	mov	r2, r4
   14634:	bl	13ddc <table_set_uint@@Base>
   14638:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   1463c:	movw	r1, #19656	; 0x4cc8
   14640:	movt	r1, #1
   14644:	add	r2, sp, #8
   14648:	mov	r0, r7
   1464c:	bl	11f64 <__isoc99_sscanf@plt>
   14650:	mov	r1, r0
   14654:	mvn	r0, #0
   14658:	cmp	r1, #1
   1465c:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14660:	ldrsb	r3, [sp, #8]
   14664:	mov	r0, r6
   14668:	mov	r1, r5
   1466c:	mov	r2, r4
   14670:	bl	13e04 <table_set_int8@@Base>
   14674:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   14678:	movw	r1, #19661	; 0x4ccd
   1467c:	movt	r1, #1
   14680:	add	r2, sp, #8
   14684:	mov	r0, r7
   14688:	bl	11f64 <__isoc99_sscanf@plt>
   1468c:	mov	r1, r0
   14690:	mvn	r0, #0
   14694:	cmp	r1, #1
   14698:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   1469c:	ldrb	r3, [sp, #8]
   146a0:	mov	r0, r6
   146a4:	mov	r1, r5
   146a8:	mov	r2, r4
   146ac:	bl	13e2c <table_set_uint8@@Base>
   146b0:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   146b4:	movw	r1, #19620	; 0x4ca4
   146b8:	movt	r1, #1
   146bc:	add	r2, sp, #8
   146c0:	mov	r0, r7
   146c4:	bl	11f64 <__isoc99_sscanf@plt>
   146c8:	mov	r1, r0
   146cc:	mvn	r0, #0
   146d0:	cmp	r1, #1
   146d4:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   146d8:	ldrsh	r3, [sp, #8]
   146dc:	mov	r0, r6
   146e0:	mov	r1, r5
   146e4:	mov	r2, r4
   146e8:	bl	13e54 <table_set_int16@@Base>
   146ec:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   146f0:	movw	r1, #19624	; 0x4ca8
   146f4:	movt	r1, #1
   146f8:	add	r2, sp, #8
   146fc:	mov	r0, r7
   14700:	bl	11f64 <__isoc99_sscanf@plt>
   14704:	mov	r1, r0
   14708:	mvn	r0, #0
   1470c:	cmp	r1, #1
   14710:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14714:	ldrh	r3, [sp, #8]
   14718:	mov	r0, r6
   1471c:	mov	r1, r5
   14720:	mov	r2, r4
   14724:	bl	13e7c <table_set_uint16@@Base>
   14728:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   1472c:	movw	r1, #19604	; 0x4c94
   14730:	movt	r1, #1
   14734:	add	r2, sp, #8
   14738:	mov	r0, r7
   1473c:	bl	11f64 <__isoc99_sscanf@plt>
   14740:	mov	r1, r0
   14744:	mvn	r0, #0
   14748:	cmp	r1, #1
   1474c:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14750:	ldr	r3, [sp, #8]
   14754:	mov	r0, r6
   14758:	mov	r1, r5
   1475c:	mov	r2, r4
   14760:	bl	13ea4 <table_set_int32@@Base>
   14764:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   14768:	movw	r1, #19607	; 0x4c97
   1476c:	movt	r1, #1
   14770:	add	r2, sp, #8
   14774:	mov	r0, r7
   14778:	bl	11f64 <__isoc99_sscanf@plt>
   1477c:	mov	r1, r0
   14780:	mvn	r0, #0
   14784:	cmp	r1, #1
   14788:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   1478c:	ldr	r3, [sp, #8]
   14790:	mov	r0, r6
   14794:	mov	r1, r5
   14798:	mov	r2, r4
   1479c:	bl	13ecc <table_set_uint32@@Base>
   147a0:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   147a4:	movw	r1, #19610	; 0x4c9a
   147a8:	movt	r1, #1
   147ac:	add	r2, sp, #8
   147b0:	mov	r0, r7
   147b4:	bl	11f64 <__isoc99_sscanf@plt>
   147b8:	mov	r1, r0
   147bc:	mvn	r0, #0
   147c0:	cmp	r1, #1
   147c4:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   147c8:	ldr	r0, [sp, #8]
   147cc:	ldr	r1, [sp, #12]
   147d0:	stm	sp, {r0, r1}
   147d4:	mov	r0, r6
   147d8:	mov	r1, r5
   147dc:	mov	r2, r4
   147e0:	bl	13ef4 <table_set_int64@@Base>
   147e4:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   147e8:	movw	r1, #19615	; 0x4c9f
   147ec:	movt	r1, #1
   147f0:	add	r2, sp, #8
   147f4:	mov	r0, r7
   147f8:	bl	11f64 <__isoc99_sscanf@plt>
   147fc:	mov	r1, r0
   14800:	mvn	r0, #0
   14804:	cmp	r1, #1
   14808:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   1480c:	ldr	r0, [sp, #8]
   14810:	ldr	r1, [sp, #12]
   14814:	stm	sp, {r0, r1}
   14818:	mov	r0, r6
   1481c:	mov	r1, r5
   14820:	mov	r2, r4
   14824:	bl	13f28 <table_set_uint64@@Base>
   14828:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   1482c:	movw	r1, #19620	; 0x4ca4
   14830:	movt	r1, #1
   14834:	add	r2, sp, #8
   14838:	mov	r0, r7
   1483c:	bl	11f64 <__isoc99_sscanf@plt>
   14840:	mov	r1, r0
   14844:	mvn	r0, #0
   14848:	cmp	r1, #1
   1484c:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14850:	ldrsh	r3, [sp, #8]
   14854:	mov	r0, r6
   14858:	mov	r1, r5
   1485c:	mov	r2, r4
   14860:	bl	13f5c <table_set_short@@Base>
   14864:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   14868:	movw	r1, #19624	; 0x4ca8
   1486c:	movt	r1, #1
   14870:	add	r2, sp, #8
   14874:	mov	r0, r7
   14878:	bl	11f64 <__isoc99_sscanf@plt>
   1487c:	mov	r1, r0
   14880:	mvn	r0, #0
   14884:	cmp	r1, #1
   14888:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   1488c:	ldrh	r3, [sp, #8]
   14890:	mov	r0, r6
   14894:	mov	r1, r5
   14898:	mov	r2, r4
   1489c:	bl	13f84 <table_set_ushort@@Base>
   148a0:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   148a4:	movw	r1, #19628	; 0x4cac
   148a8:	movt	r1, #1
   148ac:	add	r2, sp, #8
   148b0:	mov	r0, r7
   148b4:	bl	11f64 <__isoc99_sscanf@plt>
   148b8:	mov	r1, r0
   148bc:	mvn	r0, #0
   148c0:	cmp	r1, #1
   148c4:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   148c8:	ldr	r3, [sp, #8]
   148cc:	mov	r0, r6
   148d0:	mov	r1, r5
   148d4:	mov	r2, r4
   148d8:	bl	13fac <table_set_long@@Base>
   148dc:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   148e0:	movw	r1, #19632	; 0x4cb0
   148e4:	movt	r1, #1
   148e8:	add	r2, sp, #8
   148ec:	mov	r0, r7
   148f0:	bl	11f64 <__isoc99_sscanf@plt>
   148f4:	mov	r1, r0
   148f8:	mvn	r0, #0
   148fc:	cmp	r1, #1
   14900:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14904:	ldr	r3, [sp, #8]
   14908:	mov	r0, r6
   1490c:	mov	r1, r5
   14910:	mov	r2, r4
   14914:	bl	13fd4 <table_set_ulong@@Base>
   14918:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   1491c:	movw	r1, #19610	; 0x4c9a
   14920:	movt	r1, #1
   14924:	add	r2, sp, #8
   14928:	mov	r0, r7
   1492c:	bl	11f64 <__isoc99_sscanf@plt>
   14930:	mov	r1, r0
   14934:	mvn	r0, #0
   14938:	cmp	r1, #1
   1493c:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14940:	ldr	r0, [sp, #8]
   14944:	ldr	r1, [sp, #12]
   14948:	stm	sp, {r0, r1}
   1494c:	mov	r0, r6
   14950:	mov	r1, r5
   14954:	mov	r2, r4
   14958:	bl	13ffc <table_set_llong@@Base>
   1495c:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   14960:	movw	r1, #19615	; 0x4c9f
   14964:	movt	r1, #1
   14968:	add	r2, sp, #8
   1496c:	mov	r0, r7
   14970:	bl	11f64 <__isoc99_sscanf@plt>
   14974:	mov	r1, r0
   14978:	mvn	r0, #0
   1497c:	cmp	r1, #1
   14980:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14984:	ldr	r0, [sp, #8]
   14988:	ldr	r1, [sp, #12]
   1498c:	stm	sp, {r0, r1}
   14990:	mov	r0, r6
   14994:	mov	r1, r5
   14998:	mov	r2, r4
   1499c:	bl	14030 <table_set_ullong@@Base>
   149a0:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   149a4:	movw	r1, #19639	; 0x4cb7
   149a8:	movt	r1, #1
   149ac:	add	r2, sp, #8
   149b0:	mov	r0, r7
   149b4:	bl	11f64 <__isoc99_sscanf@plt>
   149b8:	mov	r1, r0
   149bc:	mvn	r0, #0
   149c0:	cmp	r1, #1
   149c4:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   149c8:	vldr	s0, [sp, #8]
   149cc:	mov	r0, r6
   149d0:	mov	r1, r5
   149d4:	mov	r2, r4
   149d8:	bl	14064 <table_set_float@@Base>
   149dc:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   149e0:	movw	r1, #19642	; 0x4cba
   149e4:	movt	r1, #1
   149e8:	add	r2, sp, #8
   149ec:	mov	r0, r7
   149f0:	bl	11f64 <__isoc99_sscanf@plt>
   149f4:	mov	r1, r0
   149f8:	mvn	r0, #0
   149fc:	cmp	r1, #1
   14a00:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14a04:	vldr	d0, [sp, #8]
   14a08:	mov	r0, r6
   14a0c:	mov	r1, r5
   14a10:	mov	r2, r4
   14a14:	bl	1408c <table_set_double@@Base>
   14a18:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   14a1c:	movw	r1, #19646	; 0x4cbe
   14a20:	movt	r1, #1
   14a24:	add	r2, sp, #8
   14a28:	mov	r0, r7
   14a2c:	bl	11f64 <__isoc99_sscanf@plt>
   14a30:	mov	r1, r0
   14a34:	mvn	r0, #0
   14a38:	cmp	r1, #1
   14a3c:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14a40:	vldr	d0, [sp, #8]
   14a44:	mov	r0, r6
   14a48:	mov	r1, r5
   14a4c:	mov	r2, r4
   14a50:	bl	140b4 <table_set_ldouble@@Base>
   14a54:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   14a58:	movw	r1, #19650	; 0x4cc2
   14a5c:	movt	r1, #1
   14a60:	add	r2, sp, #8
   14a64:	mov	r0, r7
   14a68:	bl	11f64 <__isoc99_sscanf@plt>
   14a6c:	mov	r1, r0
   14a70:	mvn	r0, #0
   14a74:	cmp	r1, #1
   14a78:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14a7c:	ldrb	r3, [sp, #8]
   14a80:	mov	r0, r6
   14a84:	mov	r1, r5
   14a88:	mov	r2, r4
   14a8c:	bl	140fc <table_set_char@@Base>
   14a90:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   14a94:	movw	r1, #19650	; 0x4cc2
   14a98:	movt	r1, #1
   14a9c:	add	r2, sp, #8
   14aa0:	mov	r0, r7
   14aa4:	bl	11f64 <__isoc99_sscanf@plt>
   14aa8:	mov	r1, r0
   14aac:	mvn	r0, #0
   14ab0:	cmp	r1, #1
   14ab4:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14ab8:	ldrb	r3, [sp, #8]
   14abc:	mov	r0, r6
   14ac0:	mov	r1, r5
   14ac4:	mov	r2, r4
   14ac8:	bl	14124 <table_set_uchar@@Base>
   14acc:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   14ad0:	movw	r1, #19636	; 0x4cb4
   14ad4:	movt	r1, #1
   14ad8:	add	r2, sp, #8
   14adc:	mov	r0, r7
   14ae0:	bl	11f64 <__isoc99_sscanf@plt>
   14ae4:	mov	r1, r0
   14ae8:	mvn	r0, #0
   14aec:	cmp	r1, #1
   14af0:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14af4:	add	r3, sp, #8
   14af8:	mov	r0, r6
   14afc:	mov	r1, r5
   14b00:	mov	r2, r4
   14b04:	bl	140dc <table_set_string@@Base>
   14b08:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   14b0c:	movw	r1, #19604	; 0x4c94
   14b10:	movt	r1, #1
   14b14:	add	r2, sp, #8
   14b18:	mov	r0, r7
   14b1c:	bl	11f64 <__isoc99_sscanf@plt>
   14b20:	mov	r1, r0
   14b24:	mvn	r0, #0
   14b28:	cmp	r1, #1
   14b2c:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14b30:	ldr	r3, [sp, #8]
   14b34:	cmp	r3, #0
   14b38:	movwne	r3, #1
   14b3c:	mov	r0, r6
   14b40:	mov	r1, r5
   14b44:	mov	r2, r4
   14b48:	bl	13d8c <table_set_bool@@Base>
   14b4c:	b	14b88 <table_cell_from_buffer@@Base+0x658>
   14b50:	movw	r1, #19653	; 0x4cc5
   14b54:	movt	r1, #1
   14b58:	add	r2, sp, #8
   14b5c:	mov	r0, r7
   14b60:	bl	11f64 <__isoc99_sscanf@plt>
   14b64:	mov	r1, r0
   14b68:	mvn	r0, #0
   14b6c:	cmp	r1, #1
   14b70:	bne	14b8c <table_cell_from_buffer@@Base+0x65c>
   14b74:	ldr	r3, [sp, #8]
   14b78:	mov	r0, r6
   14b7c:	mov	r1, r5
   14b80:	mov	r2, r4
   14b84:	bl	1414c <table_set_ptr@@Base>
   14b88:	mov	r0, #0
   14b8c:	sub	sp, fp, #24
   14b90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b94 <table_cell_nullify@@Base>:
   14b94:	push	{r4, sl, fp, lr}
   14b98:	add	fp, sp, #8
   14b9c:	bl	14184 <table_get_cell_ptr@@Base>
   14ba0:	mov	r4, r0
   14ba4:	ldr	r0, [r0]
   14ba8:	cmp	r0, #0
   14bac:	beq	14bbc <table_cell_nullify@@Base+0x28>
   14bb0:	bl	11eec <free@plt>
   14bb4:	mov	r0, #0
   14bb8:	str	r0, [r4]
   14bbc:	mov	r0, #0
   14bc0:	pop	{r4, sl, fp, pc}

00014bc4 <__libc_csu_init@@Base>:
   14bc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14bc8:	mov	r7, r0
   14bcc:	ldr	r6, [pc, #72]	; 14c1c <__libc_csu_init@@Base+0x58>
   14bd0:	ldr	r5, [pc, #72]	; 14c20 <__libc_csu_init@@Base+0x5c>
   14bd4:	add	r6, pc, r6
   14bd8:	add	r5, pc, r5
   14bdc:	sub	r6, r6, r5
   14be0:	mov	r8, r1
   14be4:	mov	r9, r2
   14be8:	bl	11ec0 <strcmp@plt-0x20>
   14bec:	asrs	r6, r6, #2
   14bf0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bf4:	mov	r4, #0
   14bf8:	add	r4, r4, #1
   14bfc:	ldr	r3, [r5], #4
   14c00:	mov	r2, r9
   14c04:	mov	r1, r8
   14c08:	mov	r0, r7
   14c0c:	blx	r3
   14c10:	cmp	r6, r4
   14c14:	bne	14bf8 <__libc_csu_init@@Base+0x34>
   14c18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c1c:	andeq	r0, r1, r0, lsr r3
   14c20:	andeq	r0, r1, r8, lsr #6

00014c24 <__libc_csu_fini@@Base>:
   14c24:	bx	lr

Disassembly of section .fini:

00014c28 <.fini>:
   14c28:	push	{r3, lr}
   14c2c:	pop	{r3, pc}
