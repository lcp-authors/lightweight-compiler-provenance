
../repos/charybdis/ssld/.libs/ssld:     file format elf32-littlearm


Disassembly of section .init:

00010eb0 <.init>:
   10eb0:	push	{r3, lr}
   10eb4:	bl	11688 <__errno_location@plt+0x4a0>
   10eb8:	pop	{r3, pc}

Disassembly of section .plt:

00010ebc <open@plt-0x14>:
   10ebc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec0:	ldr	lr, [pc, #4]	; 10ecc <open@plt-0x4>
   10ec4:	add	lr, pc, lr
   10ec8:	ldr	pc, [lr, #8]!
   10ecc:	andeq	r3, r1, r4, lsr r1

00010ed0 <open@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #77824	; 0x13000
   10ed8:	ldr	pc, [ip, #308]!	; 0x134

00010edc <sigemptyset@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #77824	; 0x13000
   10ee4:	ldr	pc, [ip, #300]!	; 0x12c

00010ee8 <strerror@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #77824	; 0x13000
   10ef0:	ldr	pc, [ip, #292]!	; 0x124

00010ef4 <rb_get_type@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #77824	; 0x13000
   10efc:	ldr	pc, [ip, #284]!	; 0x11c

00010f00 <zError@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #77824	; 0x13000
   10f08:	ldr	pc, [ip, #276]!	; 0x114

00010f0c <abort@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #77824	; 0x13000
   10f14:	ldr	pc, [ip, #268]!	; 0x10c

00010f18 <rb_event_addish@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #77824	; 0x13000
   10f20:	ldr	pc, [ip, #260]!	; 0x104

00010f24 <rb_ignore_errno@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #77824	; 0x13000
   10f2c:	ldr	pc, [ip, #252]!	; 0xfc

00010f30 <rb_lib_version@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #77824	; 0x13000
   10f38:	ldr	pc, [ip, #244]!	; 0xf4

00010f3c <inflateEnd@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #77824	; 0x13000
   10f44:	ldr	pc, [ip, #236]!	; 0xec

00010f48 <__libc_start_main@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #77824	; 0x13000
   10f50:	ldr	pc, [ip, #228]!	; 0xe4

00010f54 <rb_setselect@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #77824	; 0x13000
   10f5c:	ldr	pc, [ip, #220]!	; 0xdc

00010f60 <__gmon_start__@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #77824	; 0x13000
   10f68:	ldr	pc, [ip, #212]!	; 0xd4

00010f6c <rb_ssl_handshake_count@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #77824	; 0x13000
   10f74:	ldr	pc, [ip, #204]!	; 0xcc

00010f78 <rb_send_fd_buf@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #77824	; 0x13000
   10f80:	ldr	pc, [ip, #196]!	; 0xc4

00010f84 <vsnprintf@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #77824	; 0x13000
   10f8c:	ldr	pc, [ip, #188]!	; 0xbc

00010f90 <strncpy@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #77824	; 0x13000
   10f98:	ldr	pc, [ip, #180]!	; 0xb4

00010f9c <getenv@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #77824	; 0x13000
   10fa4:	ldr	pc, [ip, #172]!	; 0xac

00010fa8 <deflate@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #77824	; 0x13000
   10fb0:	ldr	pc, [ip, #164]!	; 0xa4

00010fb4 <deflateInit_@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #77824	; 0x13000
   10fbc:	ldr	pc, [ip, #156]!	; 0x9c

00010fc0 <calloc@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #77824	; 0x13000
   10fc8:	ldr	pc, [ip, #148]!	; 0x94

00010fcc <rb_set_nb@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #77824	; 0x13000
   10fd4:	ldr	pc, [ip, #140]!	; 0x8c

00010fd8 <memset@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #77824	; 0x13000
   10fe0:	ldr	pc, [ip, #132]!	; 0x84

00010fe4 <__assert_fail@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #77824	; 0x13000
   10fec:	ldr	pc, [ip, #124]!	; 0x7c

00010ff0 <rb_strlcpy@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #77824	; 0x13000
   10ff8:	ldr	pc, [ip, #116]!	; 0x74

00010ffc <rb_get_ssl_certfp@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #77824	; 0x13000
   11004:	ldr	pc, [ip, #108]!	; 0x6c

00011008 <inflate@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #77824	; 0x13000
   11010:	ldr	pc, [ip, #100]!	; 0x64

00011014 <rb_init_rawbuffers@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #77824	; 0x13000
   1101c:	ldr	pc, [ip, #92]!	; 0x5c

00011020 <free@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #77824	; 0x13000
   11028:	ldr	pc, [ip, #84]!	; 0x54

0001102c <rb_lib_loop@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #77824	; 0x13000
   11034:	ldr	pc, [ip, #76]!	; 0x4c

00011038 <deflateEnd@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #77824	; 0x13000
   11040:	ldr	pc, [ip, #68]!	; 0x44

00011044 <rb_read@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #77824	; 0x13000
   1104c:	ldr	pc, [ip, #60]!	; 0x3c

00011050 <rb_set_type@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #77824	; 0x13000
   11058:	ldr	pc, [ip, #52]!	; 0x34

0001105c <strlen@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #77824	; 0x13000
   11064:	ldr	pc, [ip, #44]!	; 0x2c

00011068 <rb_ssl_get_cipher@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #77824	; 0x13000
   11070:	ldr	pc, [ip, #36]!	; 0x24

00011074 <memcpy@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #77824	; 0x13000
   1107c:	ldr	pc, [ip, #28]!

00011080 <rb_close@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #77824	; 0x13000
   11088:	ldr	pc, [ip, #20]!

0001108c <strtol@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #77824	; 0x13000
   11094:	ldr	pc, [ip, #12]!

00011098 <sigaddset@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #77824	; 0x13000
   110a0:	ldr	pc, [ip, #4]!

000110a4 <strcpy@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #73728	; 0x12000
   110ac:	ldr	pc, [ip, #4092]!	; 0xffc

000110b0 <rb_ssl_clear_handshake_count@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #73728	; 0x12000
   110b8:	ldr	pc, [ip, #4084]!	; 0xff4

000110bc <rb_rawbuf_length@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #73728	; 0x12000
   110c4:	ldr	pc, [ip, #4076]!	; 0xfec

000110c8 <rb_free_rawbuffer@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #73728	; 0x12000
   110d0:	ldr	pc, [ip, #4068]!	; 0xfe4

000110d4 <rb_get_ssl_strerror@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #73728	; 0x12000
   110dc:	ldr	pc, [ip, #4060]!	; 0xfdc

000110e0 <close@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #73728	; 0x12000
   110e8:	ldr	pc, [ip, #4052]!	; 0xfd4

000110ec <fwrite@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #73728	; 0x12000
   110f4:	ldr	pc, [ip, #4044]!	; 0xfcc

000110f8 <rb_init_prng@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #73728	; 0x12000
   11100:	ldr	pc, [ip, #4036]!	; 0xfc4

00011104 <rb_outofmemory@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #73728	; 0x12000
   1110c:	ldr	pc, [ip, #4028]!	; 0xfbc

00011110 <rb_supports_ssl@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #73728	; 0x12000
   11118:	ldr	pc, [ip, #4020]!	; 0xfb4

0001111c <sigaction@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #73728	; 0x12000
   11124:	ldr	pc, [ip, #4012]!	; 0xfac

00011128 <rb_ssl_start_connected@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #73728	; 0x12000
   11130:	ldr	pc, [ip, #4004]!	; 0xfa4

00011134 <rb_lib_init@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #73728	; 0x12000
   1113c:	ldr	pc, [ip, #3996]!	; 0xf9c

00011140 <rb_new_rawbuffer@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #73728	; 0x12000
   11148:	ldr	pc, [ip, #3988]!	; 0xf94

0001114c <rb_open@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #73728	; 0x12000
   11154:	ldr	pc, [ip, #3980]!	; 0xf8c

00011158 <inflateInit_@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #73728	; 0x12000
   11160:	ldr	pc, [ip, #3972]!	; 0xf84

00011164 <rb_recv_fd_buf@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #73728	; 0x12000
   1116c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011170 <rb_ssl_start_accepted@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #73728	; 0x12000
   11178:	ldr	pc, [ip, #3956]!	; 0xf74

0001117c <dup2@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #73728	; 0x12000
   11184:	ldr	pc, [ip, #3948]!	; 0xf6c

00011188 <rb_event_add@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #73728	; 0x12000
   11190:	ldr	pc, [ip, #3940]!	; 0xf64

00011194 <snprintf@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #73728	; 0x12000
   1119c:	ldr	pc, [ip, #3932]!	; 0xf5c

000111a0 <strncmp@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #73728	; 0x12000
   111a8:	ldr	pc, [ip, #3924]!	; 0xf54

000111ac <getrlimit@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #73728	; 0x12000
   111b4:	ldr	pc, [ip, #3916]!	; 0xf4c

000111b8 <rb_rawbuf_append@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #73728	; 0x12000
   111c0:	ldr	pc, [ip, #3908]!	; 0xf44

000111c4 <rb_rawbuf_flush@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #73728	; 0x12000
   111cc:	ldr	pc, [ip, #3900]!	; 0xf3c

000111d0 <rb_setup_ssl_server@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #73728	; 0x12000
   111d8:	ldr	pc, [ip, #3892]!	; 0xf34

000111dc <exit@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #73728	; 0x12000
   111e4:	ldr	pc, [ip, #3884]!	; 0xf2c

000111e8 <__errno_location@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #73728	; 0x12000
   111f0:	ldr	pc, [ip, #3876]!	; 0xf24

Disassembly of section .text:

000111f4 <.text>:
   111f4:	ldr	r3, [pc, #28]	; 11218 <__errno_location@plt+0x30>
   111f8:	ldr	r1, [pc, #28]	; 1121c <__errno_location@plt+0x34>
   111fc:	ldr	r0, [pc, #28]	; 11220 <__errno_location@plt+0x38>
   11200:	push	{r4, lr}
   11204:	add	r3, pc, r3
   11208:	mov	r2, #236	; 0xec
   1120c:	add	r1, pc, r1
   11210:	add	r0, pc, r0
   11214:	bl	10fe4 <__assert_fail@plt>
   11218:	andeq	r2, r0, r0, asr r2
   1121c:	andeq	r2, r0, r4, ror r2
   11220:	andeq	r2, r0, ip, lsl #5
   11224:	ldr	r3, [pc, #32]	; 1124c <__errno_location@plt+0x64>
   11228:	ldr	r1, [pc, #32]	; 11250 <__errno_location@plt+0x68>
   1122c:	ldr	r0, [pc, #32]	; 11254 <__errno_location@plt+0x6c>
   11230:	add	r3, pc, r3
   11234:	push	{r4, lr}
   11238:	mov	r2, #145	; 0x91
   1123c:	add	r3, r3, #16
   11240:	add	r1, pc, r1
   11244:	add	r0, pc, r0
   11248:	bl	10fe4 <__assert_fail@plt>
   1124c:	andeq	r2, r0, r4, lsr #4
   11250:	andeq	r2, r0, r0, asr #4
   11254:	andeq	r2, r0, r8, asr r2
   11258:	ldr	r3, [pc, #32]	; 11280 <__errno_location@plt+0x98>
   1125c:	ldr	r1, [pc, #32]	; 11284 <__errno_location@plt+0x9c>
   11260:	ldr	r0, [pc, #32]	; 11288 <__errno_location@plt+0xa0>
   11264:	add	r3, pc, r3
   11268:	push	{r4, lr}
   1126c:	mov	r2, #213	; 0xd5
   11270:	add	r3, r3, #28
   11274:	add	r1, pc, r1
   11278:	add	r0, pc, r0
   1127c:	bl	10fe4 <__assert_fail@plt>
   11280:	strdeq	r2, [r0], -r0
   11284:	andeq	r2, r0, ip, lsl #4
   11288:	andeq	r2, r0, r4, lsr r2
   1128c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11290:	sub	sp, sp, #160	; 0xa0
   11294:	add	r8, sp, #20
   11298:	mov	r1, r8
   1129c:	mov	r0, #7
   112a0:	bl	111ac <getrlimit@plt>
   112a4:	ldr	r5, [pc, #856]	; 11604 <__errno_location@plt+0x41c>
   112a8:	add	r5, pc, r5
   112ac:	cmp	r0, #0
   112b0:	ldr	r0, [pc, #848]	; 11608 <__errno_location@plt+0x420>
   112b4:	ldreq	r7, [sp, #20]
   112b8:	add	r0, pc, r0
   112bc:	ldrne	r7, [pc, #840]	; 1160c <__errno_location@plt+0x424>
   112c0:	bl	10f9c <getenv@plt>
   112c4:	mov	r6, r0
   112c8:	ldr	r0, [pc, #832]	; 11610 <__errno_location@plt+0x428>
   112cc:	add	r0, pc, r0
   112d0:	bl	10f9c <getenv@plt>
   112d4:	mov	r9, r0
   112d8:	ldr	r0, [pc, #820]	; 11614 <__errno_location@plt+0x42c>
   112dc:	add	r0, pc, r0
   112e0:	bl	10f9c <getenv@plt>
   112e4:	cmp	r9, #0
   112e8:	cmpne	r6, #0
   112ec:	moveq	r4, #1
   112f0:	movne	r4, #0
   112f4:	cmp	r0, #0
   112f8:	orreq	r4, r4, #1
   112fc:	cmp	r4, #0
   11300:	mov	sl, r0
   11304:	bne	1157c <__errno_location@plt+0x394>
   11308:	mov	r1, r4
   1130c:	mov	r0, r6
   11310:	mov	r2, #10
   11314:	bl	1108c <strtol@plt>
   11318:	mov	r1, r4
   1131c:	mov	r2, #10
   11320:	mov	r6, r0
   11324:	mov	r0, r9
   11328:	bl	1108c <strtol@plt>
   1132c:	mov	r1, r4
   11330:	mov	r2, #10
   11334:	mov	r5, r0
   11338:	mov	r0, sl
   1133c:	bl	1108c <strtol@plt>
   11340:	ldr	r3, [pc, #720]	; 11618 <__errno_location@plt+0x430>
   11344:	cmp	r7, #3
   11348:	add	r3, pc, r3
   1134c:	movgt	r4, #3
   11350:	str	r0, [r3, #12]
   11354:	bgt	1156c <__errno_location@plt+0x384>
   11358:	ldr	r0, [pc, #700]	; 1161c <__errno_location@plt+0x434>
   1135c:	mov	r1, #2
   11360:	add	r0, pc, r0
   11364:	bl	10ed0 <open@plt>
   11368:	subs	r4, r0, #0
   1136c:	blt	1139c <__errno_location@plt+0x1b4>
   11370:	cmp	r6, #0
   11374:	cmpne	r5, #0
   11378:	bne	115f4 <__errno_location@plt+0x40c>
   1137c:	cmp	r6, #1
   11380:	cmpne	r5, #1
   11384:	bne	115e4 <__errno_location@plt+0x3fc>
   11388:	cmp	r6, #2
   1138c:	cmpne	r5, #2
   11390:	bne	115d4 <__errno_location@plt+0x3ec>
   11394:	cmp	r4, #2
   11398:	bgt	115c8 <__errno_location@plt+0x3e0>
   1139c:	add	r9, r8, #4
   113a0:	mov	r4, #0
   113a4:	mov	sl, #1
   113a8:	mov	r0, r9
   113ac:	str	r4, [sp, #152]	; 0x98
   113b0:	str	sl, [sp, #20]
   113b4:	bl	10edc <sigemptyset@plt>
   113b8:	mov	r1, #13
   113bc:	mov	r0, r9
   113c0:	bl	11098 <sigaddset@plt>
   113c4:	mov	r1, #14
   113c8:	mov	r0, r9
   113cc:	bl	11098 <sigaddset@plt>
   113d0:	mov	r1, #5
   113d4:	mov	r0, r9
   113d8:	bl	11098 <sigaddset@plt>
   113dc:	mov	r1, #28
   113e0:	mov	r0, r9
   113e4:	bl	11098 <sigaddset@plt>
   113e8:	mov	r1, r8
   113ec:	mov	r2, r4
   113f0:	mov	r0, #28
   113f4:	bl	1111c <sigaction@plt>
   113f8:	mov	r1, r8
   113fc:	mov	r2, r4
   11400:	mov	r0, #13
   11404:	bl	1111c <sigaction@plt>
   11408:	mov	r1, r8
   1140c:	mov	r2, r4
   11410:	mov	r0, #5
   11414:	bl	1111c <sigaction@plt>
   11418:	ldr	r3, [pc, #512]	; 11620 <__errno_location@plt+0x438>
   1141c:	mov	r1, r8
   11420:	add	r3, pc, r3
   11424:	mov	r2, r4
   11428:	mov	r0, #14
   1142c:	mov	r8, #1024	; 0x400
   11430:	str	r3, [sp, #20]
   11434:	bl	1111c <sigaction@plt>
   11438:	mov	ip, #4096	; 0x1000
   1143c:	mov	r3, r4
   11440:	stmib	sp, {r8, ip}
   11444:	mov	r2, r4
   11448:	mov	r1, r4
   1144c:	str	r7, [sp]
   11450:	mov	r0, r4
   11454:	bl	11134 <rb_lib_init@plt>
   11458:	mov	r0, r8
   1145c:	bl	11014 <rb_init_rawbuffers@plt>
   11460:	mov	r1, sl
   11464:	mov	r0, r4
   11468:	bl	110f8 <rb_init_prng@plt>
   1146c:	bl	11110 <rb_supports_ssl@plt>
   11470:	ldr	r7, [pc, #428]	; 11624 <__errno_location@plt+0x43c>
   11474:	mov	r1, #48	; 0x30
   11478:	add	r7, pc, r7
   1147c:	subs	r3, r0, r4
   11480:	movne	r3, #1
   11484:	mov	r0, sl
   11488:	strb	r3, [r7, #-532]	; 0xfffffdec
   1148c:	bl	10fc0 <calloc@plt>
   11490:	subs	r8, r0, #0
   11494:	beq	11600 <__errno_location@plt+0x418>
   11498:	ldr	r2, [pc, #392]	; 11628 <__errno_location@plt+0x440>
   1149c:	mov	r0, r6
   114a0:	add	r2, pc, r2
   114a4:	mov	r1, #4
   114a8:	str	r8, [r7, #-528]	; 0xfffffdf0
   114ac:	bl	1114c <rb_open@plt>
   114b0:	ldr	r2, [pc, #372]	; 1162c <__errno_location@plt+0x444>
   114b4:	mov	r1, #8
   114b8:	add	r2, pc, r2
   114bc:	ldr	r6, [r7, #-528]	; 0xfffffdf0
   114c0:	str	r0, [r8, #16]
   114c4:	mov	r0, r5
   114c8:	bl	1114c <rb_open@plt>
   114cc:	ldr	r3, [r7, #-528]	; 0xfffffdf0
   114d0:	str	r0, [r6, #20]
   114d4:	ldr	r0, [r3, #16]
   114d8:	bl	10fcc <rb_set_nb@plt>
   114dc:	ldr	r3, [r7, #-528]	; 0xfffffdf0
   114e0:	ldr	r0, [r3, #20]
   114e4:	bl	10fcc <rb_set_nb@plt>
   114e8:	ldr	r1, [pc, #320]	; 11630 <__errno_location@plt+0x448>
   114ec:	ldr	r0, [pc, #320]	; 11634 <__errno_location@plt+0x44c>
   114f0:	mov	r3, #10
   114f4:	mov	r2, r4
   114f8:	add	r1, pc, r1
   114fc:	add	r0, pc, r0
   11500:	bl	10f18 <rb_event_addish@plt>
   11504:	ldr	r1, [pc, #300]	; 11638 <__errno_location@plt+0x450>
   11508:	ldr	r0, [pc, #300]	; 1163c <__errno_location@plt+0x454>
   1150c:	mov	r2, r4
   11510:	mov	r3, #10
   11514:	add	r1, pc, r1
   11518:	add	r0, pc, r0
   1151c:	bl	11188 <rb_event_add@plt>
   11520:	ldr	r3, [r7, #-528]	; 0xfffffdf0
   11524:	mov	r1, r4
   11528:	ldr	r0, [r3, #20]
   1152c:	bl	11778 <__errno_location@plt+0x590>
   11530:	ldr	r1, [r7, #-528]	; 0xfffffdf0
   11534:	ldr	r0, [r1, #16]
   11538:	bl	12b60 <__errno_location@plt+0x1978>
   1153c:	ldr	r0, [r7, #-528]	; 0xfffffdf0
   11540:	bl	11d14 <__errno_location@plt+0xb2c>
   11544:	ldrb	r1, [r7, #-532]	; 0xfffffdec
   11548:	cmp	r1, #0
   1154c:	beq	115bc <__errno_location@plt+0x3d4>
   11550:	mov	r0, #0
   11554:	bl	1102c <rb_lib_loop@plt>
   11558:	mov	r0, r4
   1155c:	bl	110e0 <close@plt>
   11560:	add	r4, r4, #1
   11564:	cmp	r4, r7
   11568:	beq	11358 <__errno_location@plt+0x170>
   1156c:	cmp	r4, r6
   11570:	cmpne	r4, r5
   11574:	beq	11560 <__errno_location@plt+0x378>
   11578:	b	11558 <__errno_location@plt+0x370>
   1157c:	ldr	r3, [pc, #188]	; 11640 <__errno_location@plt+0x458>
   11580:	ldr	r0, [pc, #188]	; 11644 <__errno_location@plt+0x45c>
   11584:	mov	r2, #50	; 0x32
   11588:	ldr	r4, [r5, r3]
   1158c:	mov	r1, #1
   11590:	add	r0, pc, r0
   11594:	ldr	r3, [r4]
   11598:	bl	110ec <fwrite@plt>
   1159c:	ldr	r0, [pc, #164]	; 11648 <__errno_location@plt+0x460>
   115a0:	ldr	r3, [r4]
   115a4:	mov	r2, #49	; 0x31
   115a8:	mov	r1, #1
   115ac:	add	r0, pc, r0
   115b0:	bl	110ec <fwrite@plt>
   115b4:	mov	r0, #1
   115b8:	bl	111dc <exit@plt>
   115bc:	ldr	r0, [r7, #-528]	; 0xfffffdf0
   115c0:	bl	12a78 <__errno_location@plt+0x1890>
   115c4:	b	11550 <__errno_location@plt+0x368>
   115c8:	mov	r0, r4
   115cc:	bl	110e0 <close@plt>
   115d0:	b	1139c <__errno_location@plt+0x1b4>
   115d4:	mov	r1, #2
   115d8:	mov	r0, r4
   115dc:	bl	1117c <dup2@plt>
   115e0:	b	11394 <__errno_location@plt+0x1ac>
   115e4:	mov	r1, #1
   115e8:	mov	r0, r4
   115ec:	bl	1117c <dup2@plt>
   115f0:	b	11388 <__errno_location@plt+0x1a0>
   115f4:	mov	r1, #0
   115f8:	bl	1117c <dup2@plt>
   115fc:	b	1137c <__errno_location@plt+0x194>
   11600:	bl	11104 <rb_outofmemory@plt>
   11604:	andeq	r2, r1, r0, asr sp
   11608:	andeq	r2, r0, ip, ror r3
   1160c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   11610:	andeq	r2, r0, r0, ror r3
   11614:	andeq	r2, r0, ip, ror #6
   11618:	ldrdeq	r2, [r1], -ip
   1161c:	andeq	r2, r0, ip, asr r3
   11620:	andeq	r0, r0, ip, asr #6
   11624:	muleq	r1, r4, ip
   11628:	andeq	r2, r0, r8, lsr #4
   1162c:	andeq	r2, r0, r4, lsr #4
   11630:	strdeq	r0, [r0], -r4
   11634:	andeq	r2, r0, ip, ror #3
   11638:	andeq	r0, r0, r0, ror #22
   1163c:	andeq	r2, r0, r4, ror #3
   11640:	andeq	r0, r0, ip, lsl r1
   11644:	andeq	r2, r0, r4, asr #1
   11648:	ldrdeq	r2, [r0], -ip
   1164c:	mov	fp, #0
   11650:	mov	lr, #0
   11654:	pop	{r1}		; (ldr r1, [sp], #4)
   11658:	mov	r2, sp
   1165c:	push	{r2}		; (str r2, [sp, #-4]!)
   11660:	push	{r0}		; (str r0, [sp, #-4]!)
   11664:	ldr	ip, [pc, #16]	; 1167c <__errno_location@plt+0x494>
   11668:	push	{ip}		; (str ip, [sp, #-4]!)
   1166c:	ldr	r0, [pc, #12]	; 11680 <__errno_location@plt+0x498>
   11670:	ldr	r3, [pc, #12]	; 11684 <__errno_location@plt+0x49c>
   11674:	bl	10f48 <__libc_start_main@plt>
   11678:	bl	10f0c <abort@plt>
   1167c:	andeq	r3, r1, ip, asr #8
   11680:	andeq	r1, r1, ip, lsl #5
   11684:	andeq	r3, r1, ip, ror #7
   11688:	ldr	r3, [pc, #20]	; 116a4 <__errno_location@plt+0x4bc>
   1168c:	ldr	r2, [pc, #20]	; 116a8 <__errno_location@plt+0x4c0>
   11690:	add	r3, pc, r3
   11694:	ldr	r2, [r3, r2]
   11698:	cmp	r2, #0
   1169c:	bxeq	lr
   116a0:	b	10f60 <__gmon_start__@plt>
   116a4:	andeq	r2, r1, r8, ror #18
   116a8:	andeq	r0, r0, r8, lsl r1
   116ac:	ldr	r3, [pc, #28]	; 116d0 <__errno_location@plt+0x4e8>
   116b0:	ldr	r0, [pc, #28]	; 116d4 <__errno_location@plt+0x4ec>
   116b4:	sub	r3, r3, r0
   116b8:	cmp	r3, #6
   116bc:	bxls	lr
   116c0:	ldr	r3, [pc, #16]	; 116d8 <__errno_location@plt+0x4f0>
   116c4:	cmp	r3, #0
   116c8:	bxeq	lr
   116cc:	bx	r3
   116d0:	andeq	r4, r2, fp, lsr #2
   116d4:	andeq	r4, r2, r8, lsr #2
   116d8:	andeq	r0, r0, r0
   116dc:	ldr	r1, [pc, #36]	; 11708 <__errno_location@plt+0x520>
   116e0:	ldr	r0, [pc, #36]	; 1170c <__errno_location@plt+0x524>
   116e4:	sub	r1, r1, r0
   116e8:	asr	r1, r1, #2
   116ec:	add	r1, r1, r1, lsr #31
   116f0:	asrs	r1, r1, #1
   116f4:	bxeq	lr
   116f8:	ldr	r3, [pc, #16]	; 11710 <__errno_location@plt+0x528>
   116fc:	cmp	r3, #0
   11700:	bxeq	lr
   11704:	bx	r3
   11708:	andeq	r4, r2, r8, lsr #2
   1170c:	andeq	r4, r2, r8, lsr #2
   11710:	andeq	r0, r0, r0
   11714:	push	{r4, lr}
   11718:	ldr	r4, [pc, #24]	; 11738 <__errno_location@plt+0x550>
   1171c:	ldrb	r3, [r4]
   11720:	cmp	r3, #0
   11724:	popne	{r4, pc}
   11728:	bl	116ac <__errno_location@plt+0x4c4>
   1172c:	mov	r3, #1
   11730:	strb	r3, [r4]
   11734:	pop	{r4, pc}
   11738:	andeq	r4, r2, r8, lsr #2
   1173c:	ldr	r0, [pc, #40]	; 1176c <__errno_location@plt+0x584>
   11740:	ldr	r3, [r0]
   11744:	cmp	r3, #0
   11748:	bne	11750 <__errno_location@plt+0x568>
   1174c:	b	116dc <__errno_location@plt+0x4f4>
   11750:	ldr	r3, [pc, #24]	; 11770 <__errno_location@plt+0x588>
   11754:	cmp	r3, #0
   11758:	beq	1174c <__errno_location@plt+0x564>
   1175c:	push	{r4, lr}
   11760:	blx	r3
   11764:	pop	{r4, lr}
   11768:	b	116dc <__errno_location@plt+0x4f4>
   1176c:	strdeq	r3, [r2], -r4
   11770:	andeq	r0, r0, r0
   11774:	bx	lr
   11778:	push	{r4, r5, r6, lr}
   1177c:	sub	sp, sp, #16384	; 0x4000
   11780:	mov	r4, r0
   11784:	mov	r6, sp
   11788:	mov	r5, #16384	; 0x4000
   1178c:	mov	r2, r5
   11790:	mov	r1, r6
   11794:	mov	r0, r4
   11798:	bl	11044 <rb_read@plt>
   1179c:	cmp	r0, #0
   117a0:	bgt	1178c <__errno_location@plt+0x5a4>
   117a4:	beq	117dc <__errno_location@plt+0x5f4>
   117a8:	bl	111e8 <__errno_location@plt>
   117ac:	ldr	r0, [r0]
   117b0:	bl	10f24 <rb_ignore_errno@plt>
   117b4:	cmp	r0, #0
   117b8:	beq	117dc <__errno_location@plt+0x5f4>
   117bc:	ldr	r2, [pc, #32]	; 117e4 <__errno_location@plt+0x5fc>
   117c0:	mov	r0, r4
   117c4:	mov	r3, #0
   117c8:	add	r2, pc, r2
   117cc:	mov	r1, #1
   117d0:	bl	10f54 <rb_setselect@plt>
   117d4:	add	sp, sp, #16384	; 0x4000
   117d8:	pop	{r4, r5, r6, pc}
   117dc:	mov	r0, #0
   117e0:	bl	111dc <exit@plt>
   117e4:			; <UNDEFINED> instruction: 0xffffffa8
   117e8:	subs	r0, r1, #0
   117ec:	bxeq	lr
   117f0:	b	11020 <free@plt>
   117f4:	ldr	r3, [pc, #152]	; 11894 <__errno_location@plt+0x6ac>
   117f8:	push	{r4, r5, r6, lr}
   117fc:	add	r3, pc, r3
   11800:	ldr	r3, [r3]
   11804:	cmp	r3, #0
   11808:	beq	1187c <__errno_location@plt+0x694>
   1180c:	ldr	r5, [r3, #8]
   11810:	b	1182c <__errno_location@plt+0x644>
   11814:	mov	r0, r4
   11818:	bl	11020 <free@plt>
   1181c:	cmp	r5, #0
   11820:	beq	1187c <__errno_location@plt+0x694>
   11824:	mov	r3, r5
   11828:	ldr	r5, [r5, #8]
   1182c:	ldr	r4, [r3]
   11830:	ldr	r0, [r4, #16]
   11834:	bl	110c8 <rb_free_rawbuffer@plt>
   11838:	ldr	r0, [r4, #20]
   1183c:	bl	110c8 <rb_free_rawbuffer@plt>
   11840:	ldrb	r3, [r4, #72]	; 0x48
   11844:	tst	r3, #2
   11848:	beq	11814 <__errno_location@plt+0x62c>
   1184c:	ldr	r6, [r4, #76]	; 0x4c
   11850:	mov	r0, r6
   11854:	bl	10f3c <inflateEnd@plt>
   11858:	add	r0, r6, #56	; 0x38
   1185c:	bl	11038 <deflateEnd@plt>
   11860:	subs	r0, r6, #0
   11864:	beq	11814 <__errno_location@plt+0x62c>
   11868:	bl	11020 <free@plt>
   1186c:	mov	r0, r4
   11870:	bl	11020 <free@plt>
   11874:	cmp	r5, #0
   11878:	bne	11824 <__errno_location@plt+0x63c>
   1187c:	ldr	r3, [pc, #20]	; 11898 <__errno_location@plt+0x6b0>
   11880:	mov	r2, #0
   11884:	add	r3, pc, r3
   11888:	str	r2, [r3]
   1188c:	str	r2, [r3, #4]
   11890:	pop	{r4, r5, r6, pc}
   11894:	andeq	r2, r1, r8, lsr #18
   11898:	andeq	r2, r1, r0, lsr #17
   1189c:	push	{r4, lr}
   118a0:	mul	r1, r2, r1
   118a4:	mov	r0, #1
   118a8:	bl	10fc0 <calloc@plt>
   118ac:	cmp	r0, #0
   118b0:	popne	{r4, pc}
   118b4:	bl	11104 <rb_outofmemory@plt>
   118b8:	push	{r4, r5, r6, r7, r8, lr}
   118bc:	mov	r7, r0
   118c0:	mov	r6, r1
   118c4:	mov	r0, #1
   118c8:	mov	r1, #80	; 0x50
   118cc:	mov	r5, r2
   118d0:	bl	10fc0 <calloc@plt>
   118d4:	subs	r4, r0, #0
   118d8:	beq	11920 <__errno_location@plt+0x738>
   118dc:	str	r7, [r4, #12]
   118e0:	bl	11140 <rb_new_rawbuffer@plt>
   118e4:	str	r0, [r4, #16]
   118e8:	bl	11140 <rb_new_rawbuffer@plt>
   118ec:	mvn	r2, #0
   118f0:	mov	r3, #0
   118f4:	str	r2, [r4, #24]
   118f8:	str	r3, [r4, #76]	; 0x4c
   118fc:	str	r6, [r4, #28]
   11900:	str	r5, [r4, #32]
   11904:	str	r0, [r4, #20]
   11908:	mov	r0, r6
   1190c:	bl	10fcc <rb_set_nb@plt>
   11910:	mov	r0, r5
   11914:	bl	10fcc <rb_set_nb@plt>
   11918:	mov	r0, r4
   1191c:	pop	{r4, r5, r6, r7, r8, pc}
   11920:	bl	11104 <rb_outofmemory@plt>
   11924:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11928:	mov	r8, r1
   1192c:	ldr	r6, [r1, #36]	; 0x24
   11930:	sub	sp, sp, #8
   11934:	cmp	r6, #0
   11938:	beq	11a2c <__errno_location@plt+0x844>
   1193c:	ldr	sl, [pc, #284]	; 11a60 <__errno_location@plt+0x878>
   11940:	ldr	r7, [r6, #8]
   11944:	add	sl, pc, sl
   11948:	mov	r9, #0
   1194c:	ldr	r4, [r6]
   11950:	ldr	r1, [sl, #12]
   11954:	ldr	r0, [r8, #16]
   11958:	ldr	r3, [r4, #12]
   1195c:	ldr	r2, [r4, #36]	; 0x24
   11960:	str	r1, [sp, #4]
   11964:	ldr	r1, [r4, #16]
   11968:	add	r5, r4, #20
   1196c:	str	r1, [sp]
   11970:	mov	r1, r5
   11974:	bl	10f78 <rb_send_fd_buf@plt>
   11978:	cmp	r0, #0
   1197c:	ble	11a08 <__errno_location@plt+0x820>
   11980:	ldmib	r6, {r2, r3}
   11984:	cmp	r3, #0
   11988:	strne	r2, [r3, #4]
   1198c:	ldrne	r2, [r6, #4]
   11990:	streq	r2, [r8, #40]	; 0x28
   11994:	cmp	r2, #0
   11998:	strne	r3, [r2, #8]
   1199c:	streq	r3, [r8, #36]	; 0x24
   119a0:	ldr	r2, [r4, #36]	; 0x24
   119a4:	ldr	r3, [r8, #44]	; 0x2c
   119a8:	cmp	r2, #0
   119ac:	sub	r3, r3, #1
   119b0:	str	r9, [r6, #4]
   119b4:	str	r9, [r6, #8]
   119b8:	str	r3, [r8, #44]	; 0x2c
   119bc:	movgt	r6, #0
   119c0:	ble	119dc <__errno_location@plt+0x7f4>
   119c4:	ldr	r0, [r5], #4
   119c8:	bl	11080 <rb_close@plt>
   119cc:	ldr	r3, [r4, #36]	; 0x24
   119d0:	add	r6, r6, #1
   119d4:	cmp	r3, r6
   119d8:	bgt	119c4 <__errno_location@plt+0x7dc>
   119dc:	ldr	r0, [r4, #12]
   119e0:	cmp	r0, #0
   119e4:	beq	119ec <__errno_location@plt+0x804>
   119e8:	bl	11020 <free@plt>
   119ec:	mov	r0, r4
   119f0:	bl	11020 <free@plt>
   119f4:	cmp	r7, #0
   119f8:	beq	11a2c <__errno_location@plt+0x844>
   119fc:	mov	r6, r7
   11a00:	ldr	r7, [r7, #8]
   11a04:	b	1194c <__errno_location@plt+0x764>
   11a08:	beq	11a24 <__errno_location@plt+0x83c>
   11a0c:	bge	119f4 <__errno_location@plt+0x80c>
   11a10:	bl	111e8 <__errno_location@plt>
   11a14:	ldr	r0, [r0]
   11a18:	bl	10f24 <rb_ignore_errno@plt>
   11a1c:	cmp	r0, #0
   11a20:	bne	119f4 <__errno_location@plt+0x80c>
   11a24:	mov	r0, #0
   11a28:	bl	111dc <exit@plt>
   11a2c:	ldr	r3, [r8, #44]	; 0x2c
   11a30:	cmp	r3, #0
   11a34:	bne	11a40 <__errno_location@plt+0x858>
   11a38:	add	sp, sp, #8
   11a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a40:	ldr	r2, [pc, #28]	; 11a64 <__errno_location@plt+0x87c>
   11a44:	mov	r3, r8
   11a48:	ldr	r0, [r8, #16]
   11a4c:	add	r2, pc, r2
   11a50:	mov	r1, #2
   11a54:	add	sp, sp, #8
   11a58:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a5c:	b	10f54 <rb_setselect@plt>
   11a60:	andeq	r2, r1, r0, ror #15
   11a64:			; <UNDEFINED> instruction: 0xfffffed0
   11a68:	push	{r4, r5, r6, r7, r8, lr}
   11a6c:	mov	r5, r0
   11a70:	mov	r7, r1
   11a74:	mov	r0, #1
   11a78:	mov	r1, #40	; 0x28
   11a7c:	mov	r6, r2
   11a80:	bl	10fc0 <calloc@plt>
   11a84:	subs	r4, r0, #0
   11a88:	beq	11b00 <__errno_location@plt+0x918>
   11a8c:	mov	r1, r6
   11a90:	mov	r0, #1
   11a94:	bl	10fc0 <calloc@plt>
   11a98:	subs	r3, r0, #0
   11a9c:	beq	11b00 <__errno_location@plt+0x918>
   11aa0:	mov	r2, r6
   11aa4:	str	r3, [r4, #12]
   11aa8:	str	r6, [r4, #16]
   11aac:	mov	r1, r7
   11ab0:	bl	11074 <memcpy@plt>
   11ab4:	mov	r2, #0
   11ab8:	cmn	r5, #36	; 0x24
   11abc:	str	r2, [r4, #36]	; 0x24
   11ac0:	beq	11b14 <__errno_location@plt+0x92c>
   11ac4:	ldr	r3, [r5, #40]	; 0x28
   11ac8:	str	r4, [r4]
   11acc:	cmp	r3, #0
   11ad0:	str	r2, [r4, #8]
   11ad4:	str	r3, [r4, #4]
   11ad8:	strne	r4, [r3, #8]
   11adc:	beq	11b04 <__errno_location@plt+0x91c>
   11ae0:	ldr	r3, [r5, #44]	; 0x2c
   11ae4:	str	r4, [r5, #40]	; 0x28
   11ae8:	add	r3, r3, #1
   11aec:	str	r3, [r5, #44]	; 0x2c
   11af0:	mov	r1, r5
   11af4:	ldr	r0, [r5, #16]
   11af8:	pop	{r4, r5, r6, r7, r8, lr}
   11afc:	b	11924 <__errno_location@plt+0x73c>
   11b00:	bl	11104 <rb_outofmemory@plt>
   11b04:	ldr	r3, [r5, #36]	; 0x24
   11b08:	cmp	r3, #0
   11b0c:	streq	r4, [r5, #36]	; 0x24
   11b10:	b	11ae0 <__errno_location@plt+0x8f8>
   11b14:	ldr	r3, [pc, #28]	; 11b38 <__errno_location@plt+0x950>
   11b18:	ldr	r1, [pc, #28]	; 11b3c <__errno_location@plt+0x954>
   11b1c:	ldr	r0, [pc, #28]	; 11b40 <__errno_location@plt+0x958>
   11b20:	add	r3, pc, r3
   11b24:	mov	r2, #212	; 0xd4
   11b28:	add	r3, r3, #28
   11b2c:	add	r1, pc, r1
   11b30:	add	r0, pc, r0
   11b34:	bl	10fe4 <__assert_fail@plt>
   11b38:	andeq	r1, r0, r4, lsr r9
   11b3c:	andeq	r1, r0, r4, asr r9
   11b40:	andeq	r1, r0, ip, ror #18
   11b44:	ldrb	r3, [r0, #72]	; 0x48
   11b48:	tst	r3, #1
   11b4c:	bxeq	lr
   11b50:	push	{r4, r5, r6, lr}
   11b54:	mov	r4, r0
   11b58:	sub	sp, sp, #768	; 0x300
   11b5c:	ldr	r0, [r0, #28]
   11b60:	bl	11068 <rb_ssl_get_cipher@plt>
   11b64:	subs	r1, r0, #0
   11b68:	beq	11bb0 <__errno_location@plt+0x9c8>
   11b6c:	mov	r2, #256	; 0x100
   11b70:	mov	r0, sp
   11b74:	bl	10ff0 <rb_strlcpy@plt>
   11b78:	add	r6, sp, #256	; 0x100
   11b7c:	ldr	r2, [r4, #24]
   11b80:	mov	r1, sp
   11b84:	mov	r3, #67	; 0x43
   11b88:	add	r0, r6, #5
   11b8c:	str	r2, [sp, #257]	; 0x101
   11b90:	strb	r3, [sp, #256]	; 0x100
   11b94:	bl	110a4 <strcpy@plt>
   11b98:	mov	r0, sp
   11b9c:	bl	1105c <strlen@plt>
   11ba0:	mov	r1, r6
   11ba4:	add	r2, r0, #6
   11ba8:	ldr	r0, [r4, #12]
   11bac:	bl	11a68 <__errno_location@plt+0x880>
   11bb0:	add	sp, sp, #768	; 0x300
   11bb4:	pop	{r4, r5, r6, pc}
   11bb8:	push	{r4, r5, lr}
   11bbc:	sub	sp, sp, #84	; 0x54
   11bc0:	ldr	r5, [pc, #88]	; 11c20 <__errno_location@plt+0xa38>
   11bc4:	mov	r4, r0
   11bc8:	add	r5, pc, r5
   11bcc:	add	r1, sp, #13
   11bd0:	ldr	r0, [r0, #28]
   11bd4:	ldr	r2, [r5, #16]
   11bd8:	bl	10ffc <rb_get_ssl_certfp@plt>
   11bdc:	subs	r3, r0, #0
   11be0:	bne	11bec <__errno_location@plt+0xa04>
   11be4:	add	sp, sp, #84	; 0x54
   11be8:	pop	{r4, r5, pc}
   11bec:	ldr	r5, [r5, #16]
   11bf0:	ldr	lr, [r4, #24]
   11bf4:	mov	ip, #70	; 0x46
   11bf8:	mov	r1, sp
   11bfc:	add	r2, r3, #13
   11c00:	ldr	r0, [r4, #12]
   11c04:	str	r5, [sp, #5]
   11c08:	str	r3, [sp, #9]
   11c0c:	str	lr, [sp, #1]
   11c10:	strb	ip, [sp]
   11c14:	bl	11a68 <__errno_location@plt+0x880>
   11c18:	add	sp, sp, #84	; 0x54
   11c1c:	pop	{r4, r5, pc}
   11c20:	andeq	r2, r1, ip, asr r5
   11c24:	push	{r4, r5, r6, r7, r8, lr}
   11c28:	mov	r2, #2000	; 0x7d0
   11c2c:	ldr	lr, [r1, #1]
   11c30:	ldr	r3, [pc, #208]	; 11d08 <__errno_location@plt+0xb20>
   11c34:	ldr	ip, [pc, #208]	; 11d0c <__errno_location@plt+0xb24>
   11c38:	sub	sp, sp, #544	; 0x220
   11c3c:	umull	r4, r3, r3, lr
   11c40:	add	ip, pc, ip
   11c44:	lsr	r3, r3, #7
   11c48:	mul	r2, r2, r3
   11c4c:	sub	r2, lr, r2
   11c50:	add	r2, r2, r2, lsl #1
   11c54:	add	r2, ip, r2, lsl #2
   11c58:	ldr	r2, [r2, #20]
   11c5c:	cmp	r2, #0
   11c60:	bne	11c74 <__errno_location@plt+0xa8c>
   11c64:	b	11d00 <__errno_location@plt+0xb18>
   11c68:	ldr	r2, [r2, #8]
   11c6c:	cmp	r2, #0
   11c70:	beq	11d00 <__errno_location@plt+0xb18>
   11c74:	ldr	r4, [r2]
   11c78:	ldr	ip, [r4, #24]
   11c7c:	cmp	lr, ip
   11c80:	bne	11c68 <__errno_location@plt+0xa80>
   11c84:	ldrb	ip, [r4, #72]	; 0x48
   11c88:	tst	ip, #8
   11c8c:	bne	11c68 <__errno_location@plt+0xa80>
   11c90:	ldrd	r6, [r4, #40]	; 0x28
   11c94:	ldr	r2, [pc, #116]	; 11d10 <__errno_location@plt+0xb28>
   11c98:	add	r5, sp, #32
   11c9c:	strd	r6, [sp, #24]
   11ca0:	ldrd	r6, [r4, #56]	; 0x38
   11ca4:	add	r3, r1, #5
   11ca8:	mov	r8, r0
   11cac:	strd	r6, [sp, #16]
   11cb0:	ldrd	r6, [r4, #48]	; 0x30
   11cb4:	mov	r1, #512	; 0x200
   11cb8:	add	r2, pc, r2
   11cbc:	strd	r6, [sp, #8]
   11cc0:	ldrd	r6, [r4, #64]	; 0x40
   11cc4:	mov	r0, r5
   11cc8:	strd	r6, [sp]
   11ccc:	bl	11194 <snprintf@plt>
   11cd0:	mov	r2, #0
   11cd4:	mov	r3, #0
   11cd8:	mov	r0, r5
   11cdc:	strd	r2, [r4, #64]	; 0x40
   11ce0:	strd	r2, [r4, #56]	; 0x38
   11ce4:	strd	r2, [r4, #48]	; 0x30
   11ce8:	strd	r2, [r4, #40]	; 0x28
   11cec:	bl	1105c <strlen@plt>
   11cf0:	mov	r1, r5
   11cf4:	add	r2, r0, #1
   11cf8:	mov	r0, r8
   11cfc:	bl	11a68 <__errno_location@plt+0x880>
   11d00:	add	sp, sp, #544	; 0x220
   11d04:	pop	{r4, r5, r6, r7, r8, pc}
   11d08:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   11d0c:	andeq	r2, r1, r4, ror #9
   11d10:	andeq	r1, r0, r4, lsl #16
   11d14:	push	{r4, r5, lr}
   11d18:	sub	sp, sp, #260	; 0x104
   11d1c:	mov	r5, r0
   11d20:	mov	r2, #256	; 0x100
   11d24:	mov	r1, #0
   11d28:	mov	r0, sp
   11d2c:	bl	10fd8 <memset@plt>
   11d30:	mov	r3, #86	; 0x56
   11d34:	strb	r3, [sp]
   11d38:	bl	10f30 <rb_lib_version@plt>
   11d3c:	mov	r2, #254	; 0xfe
   11d40:	mov	r1, r0
   11d44:	add	r0, sp, #1
   11d48:	bl	10f90 <strncpy@plt>
   11d4c:	mov	r0, sp
   11d50:	bl	1105c <strlen@plt>
   11d54:	mov	r1, sp
   11d58:	mov	r2, r0
   11d5c:	mov	r0, r5
   11d60:	bl	11a68 <__errno_location@plt+0x880>
   11d64:	add	sp, sp, #260	; 0x104
   11d68:	pop	{r4, r5, pc}
   11d6c:	push	{r4, r5, r6, lr}
   11d70:	subs	r4, r1, #0
   11d74:	sub	sp, sp, #16384	; 0x4000
   11d78:	beq	11dcc <__errno_location@plt+0xbe4>
   11d7c:	mov	r6, sp
   11d80:	mov	r5, #16384	; 0x4000
   11d84:	mov	r2, r5
   11d88:	mov	r1, r6
   11d8c:	ldr	r0, [r4, #32]
   11d90:	bl	11044 <rb_read@plt>
   11d94:	cmp	r0, #0
   11d98:	beq	11dd4 <__errno_location@plt+0xbec>
   11d9c:	bge	11d84 <__errno_location@plt+0xb9c>
   11da0:	bl	111e8 <__errno_location@plt>
   11da4:	ldr	r0, [r0]
   11da8:	bl	10f24 <rb_ignore_errno@plt>
   11dac:	cmp	r0, #0
   11db0:	beq	11dd4 <__errno_location@plt+0xbec>
   11db4:	ldr	r2, [pc, #120]	; 11e34 <__errno_location@plt+0xc4c>
   11db8:	mov	r3, r4
   11dbc:	ldr	r0, [r4, #32]
   11dc0:	add	r2, pc, r2
   11dc4:	mov	r1, #1
   11dc8:	bl	10f54 <rb_setselect@plt>
   11dcc:	add	sp, sp, #16384	; 0x4000
   11dd0:	pop	{r4, r5, r6, pc}
   11dd4:	ldr	r0, [r4, #32]
   11dd8:	bl	11080 <rb_close@plt>
   11ddc:	ldr	r2, [pc, #84]	; 11e38 <__errno_location@plt+0xc50>
   11de0:	mov	r1, #0
   11de4:	add	r2, pc, r2
   11de8:	str	r4, [r4]
   11dec:	ldr	r3, [r2]
   11df0:	str	r1, [r4, #4]
   11df4:	cmp	r3, r1
   11df8:	str	r3, [r4, #8]
   11dfc:	strne	r4, [r3, #4]
   11e00:	beq	11e24 <__errno_location@plt+0xc3c>
   11e04:	ldr	r3, [pc, #48]	; 11e3c <__errno_location@plt+0xc54>
   11e08:	add	r3, pc, r3
   11e0c:	ldr	r2, [r3, #8]
   11e10:	str	r4, [r3]
   11e14:	add	r2, r2, #1
   11e18:	str	r2, [r3, #8]
   11e1c:	add	sp, sp, #16384	; 0x4000
   11e20:	pop	{r4, r5, r6, pc}
   11e24:	ldr	r3, [r2, #4]
   11e28:	cmp	r3, #0
   11e2c:	streq	r4, [r2, #4]
   11e30:	b	11e04 <__errno_location@plt+0xc1c>
   11e34:			; <UNDEFINED> instruction: 0xffffffa4
   11e38:	andeq	r2, r1, r0, asr #6
   11e3c:	andeq	r2, r1, ip, lsl r3
   11e40:	push	{r2, r3}
   11e44:	push	{r4, r5, lr}
   11e48:	sub	sp, sp, #396	; 0x18c
   11e4c:	ldrb	r2, [r0, #72]	; 0x48
   11e50:	tst	r2, #8
   11e54:	beq	11e68 <__errno_location@plt+0xc80>
   11e58:	add	sp, sp, #396	; 0x18c
   11e5c:	pop	{r4, r5, lr}
   11e60:	add	sp, sp, #8
   11e64:	bx	lr
   11e68:	mov	r4, r0
   11e6c:	mov	r5, r1
   11e70:	ldr	r1, [r0, #28]
   11e74:	ldr	r0, [r0, #16]
   11e78:	bl	111c4 <rb_rawbuf_flush@plt>
   11e7c:	ldr	r1, [r4, #32]
   11e80:	ldr	r0, [r4, #20]
   11e84:	bl	111c4 <rb_rawbuf_flush@plt>
   11e88:	ldr	r0, [r4, #28]
   11e8c:	bl	11080 <rb_close@plt>
   11e90:	ldrb	r2, [r4, #72]	; 0x48
   11e94:	tst	r2, #64	; 0x40
   11e98:	orr	r2, r2, #8
   11e9c:	strb	r2, [r4, #72]	; 0x48
   11ea0:	beq	11fa8 <__errno_location@plt+0xdc0>
   11ea4:	ldr	r3, [sp, #408]	; 0x198
   11ea8:	cmp	r3, #0
   11eac:	cmpne	r5, #0
   11eb0:	moveq	r5, #1
   11eb4:	movne	r5, #0
   11eb8:	bne	11f14 <__errno_location@plt+0xd2c>
   11ebc:	ldr	r0, [r4, #32]
   11ec0:	bl	11080 <rb_close@plt>
   11ec4:	ldr	r2, [pc, #404]	; 12060 <__errno_location@plt+0xe78>
   11ec8:	mov	r1, #0
   11ecc:	add	r2, pc, r2
   11ed0:	str	r4, [r4]
   11ed4:	ldr	r3, [r2]
   11ed8:	str	r1, [r4, #4]
   11edc:	cmp	r3, r1
   11ee0:	str	r3, [r4, #8]
   11ee4:	strne	r4, [r3, #4]
   11ee8:	beq	12018 <__errno_location@plt+0xe30>
   11eec:	ldr	r3, [pc, #368]	; 12064 <__errno_location@plt+0xe7c>
   11ef0:	add	r3, pc, r3
   11ef4:	ldr	r2, [r3, #8]
   11ef8:	str	r4, [r3]
   11efc:	add	r2, r2, #1
   11f00:	str	r2, [r3, #8]
   11f04:	add	sp, sp, #396	; 0x18c
   11f08:	pop	{r4, r5, lr}
   11f0c:	add	sp, sp, #8
   11f10:	bx	lr
   11f14:	ldr	r2, [pc, #332]	; 12068 <__errno_location@plt+0xe80>
   11f18:	mov	r3, r4
   11f1c:	ldr	r0, [r4, #32]
   11f20:	add	r2, pc, r2
   11f24:	mov	r1, #1
   11f28:	bl	10f54 <rb_setselect@plt>
   11f2c:	mov	r3, r5
   11f30:	mov	r2, r5
   11f34:	ldr	r0, [r4, #32]
   11f38:	mov	r1, #2
   11f3c:	bl	10f54 <rb_setselect@plt>
   11f40:	add	r5, sp, #8
   11f44:	add	ip, sp, #412	; 0x19c
   11f48:	mov	r3, ip
   11f4c:	ldr	r2, [sp, #408]	; 0x198
   11f50:	mov	r0, r5
   11f54:	mov	r1, #128	; 0x80
   11f58:	str	ip, [sp, #4]
   11f5c:	bl	10f84 <vsnprintf@plt>
   11f60:	ldr	ip, [r4, #24]
   11f64:	mov	r3, #68	; 0x44
   11f68:	mov	r1, r5
   11f6c:	mov	r2, #251	; 0xfb
   11f70:	add	r0, sp, #141	; 0x8d
   11f74:	str	ip, [sp, #137]	; 0x89
   11f78:	strb	r3, [sp, #136]	; 0x88
   11f7c:	bl	10ff0 <rb_strlcpy@plt>
   11f80:	mov	r0, r5
   11f84:	bl	1105c <strlen@plt>
   11f88:	add	r1, sp, #136	; 0x88
   11f8c:	add	r2, r0, #6
   11f90:	ldr	r0, [r4, #12]
   11f94:	bl	11a68 <__errno_location@plt+0x880>
   11f98:	add	sp, sp, #396	; 0x18c
   11f9c:	pop	{r4, r5, lr}
   11fa0:	add	sp, sp, #8
   11fa4:	bx	lr
   11fa8:	ldr	r0, [r4, #24]
   11fac:	ldr	r3, [pc, #184]	; 1206c <__errno_location@plt+0xe84>
   11fb0:	mov	r2, #2000	; 0x7d0
   11fb4:	ldr	r1, [r4, #8]
   11fb8:	umull	ip, r3, r3, r0
   11fbc:	cmp	r1, #0
   11fc0:	lsr	r3, r3, #7
   11fc4:	mul	r3, r2, r3
   11fc8:	sub	r3, r0, r3
   11fcc:	beq	12040 <__errno_location@plt+0xe58>
   11fd0:	ldr	r0, [r4, #4]
   11fd4:	lsl	r2, r3, #1
   11fd8:	str	r0, [r1, #4]
   11fdc:	ldr	r0, [r4, #4]
   11fe0:	cmp	r0, #0
   11fe4:	strne	r1, [r0, #8]
   11fe8:	beq	12028 <__errno_location@plt+0xe40>
   11fec:	add	r2, r2, r3
   11ff0:	ldr	r3, [pc, #120]	; 12070 <__errno_location@plt+0xe88>
   11ff4:	mov	r1, #0
   11ff8:	add	r3, pc, r3
   11ffc:	add	r3, r3, r2, lsl #2
   12000:	str	r1, [r4, #4]
   12004:	ldr	r2, [r3, #28]
   12008:	str	r1, [r4, #8]
   1200c:	sub	r2, r2, #1
   12010:	str	r2, [r3, #28]
   12014:	b	11ea4 <__errno_location@plt+0xcbc>
   12018:	ldr	r3, [r2, #4]
   1201c:	cmp	r3, #0
   12020:	streq	r4, [r2, #4]
   12024:	b	11eec <__errno_location@plt+0xd04>
   12028:	ldr	r0, [pc, #68]	; 12074 <__errno_location@plt+0xe8c>
   1202c:	add	ip, r2, r3
   12030:	add	r0, pc, r0
   12034:	add	r0, r0, ip, lsl #2
   12038:	str	r1, [r0, #20]
   1203c:	b	11fec <__errno_location@plt+0xe04>
   12040:	lsl	r2, r3, #1
   12044:	ldr	ip, [pc, #44]	; 12078 <__errno_location@plt+0xe90>
   12048:	add	lr, r2, r3
   1204c:	add	ip, pc, ip
   12050:	ldr	r0, [r4, #4]
   12054:	add	ip, ip, lr, lsl #2
   12058:	str	r0, [ip, #24]
   1205c:	b	11fe0 <__errno_location@plt+0xdf8>
   12060:	andeq	r2, r1, r8, asr r2
   12064:	andeq	r2, r1, r4, lsr r2
   12068:			; <UNDEFINED> instruction: 0xfffffe44
   1206c:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   12070:	andeq	r2, r1, ip, lsr #2
   12074:	strdeq	r2, [r1], -r4
   12078:	ldrdeq	r2, [r1], -r8
   1207c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12080:	mov	r6, #0
   12084:	ldr	sl, [pc, #140]	; 12118 <__errno_location@plt+0xf30>
   12088:	ldr	r8, [pc, #140]	; 1211c <__errno_location@plt+0xf34>
   1208c:	add	sl, pc, sl
   12090:	ldr	r9, [pc, #136]	; 12120 <__errno_location@plt+0xf38>
   12094:	add	r8, pc, r8
   12098:	add	sl, sl, #20
   1209c:	mov	r7, #1
   120a0:	ldr	r3, [r6, sl]
   120a4:	cmp	r3, #0
   120a8:	beq	120fc <__errno_location@plt+0xf14>
   120ac:	ldr	r4, [r3, #8]
   120b0:	b	120c4 <__errno_location@plt+0xedc>
   120b4:	cmp	r4, #0
   120b8:	beq	120fc <__errno_location@plt+0xf14>
   120bc:	mov	r3, r4
   120c0:	ldr	r4, [r4, #8]
   120c4:	ldr	r5, [r3]
   120c8:	ldrb	r3, [r5, #72]	; 0x48
   120cc:	tst	r3, #1
   120d0:	beq	120b4 <__errno_location@plt+0xecc>
   120d4:	ldr	r0, [r5, #28]
   120d8:	bl	10f6c <rb_ssl_handshake_count@plt>
   120dc:	mov	r2, r8
   120e0:	mov	r1, r7
   120e4:	cmp	r0, #2
   120e8:	mov	r0, r5
   120ec:	bls	1210c <__errno_location@plt+0xf24>
   120f0:	bl	11e40 <__errno_location@plt+0xc58>
   120f4:	cmp	r4, #0
   120f8:	bne	120bc <__errno_location@plt+0xed4>
   120fc:	add	r6, r6, #12
   12100:	cmp	r6, r9
   12104:	bne	120a0 <__errno_location@plt+0xeb8>
   12108:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1210c:	ldr	r0, [r5, #28]
   12110:	bl	110b0 <rb_ssl_clear_handshake_count@plt>
   12114:	b	120b4 <__errno_location@plt+0xecc>
   12118:	muleq	r1, r8, r0
   1211c:	andeq	r1, r0, r4, asr #8
   12120:	andeq	r5, r0, r0, asr #27
   12124:	ldrb	r3, [r1, #72]	; 0x48
   12128:	tst	r3, #8
   1212c:	bne	121a8 <__errno_location@plt+0xfc0>
   12130:	push	{r4, r5, r6, lr}
   12134:	mov	r4, r1
   12138:	mov	r5, r0
   1213c:	b	12150 <__errno_location@plt+0xf68>
   12140:	ldrd	r2, [r4, #64]	; 0x40
   12144:	adds	r2, r2, r0
   12148:	adc	r3, r3, r0, asr #31
   1214c:	strd	r2, [r4, #64]	; 0x40
   12150:	mov	r1, r5
   12154:	ldr	r0, [r4, #20]
   12158:	bl	111c4 <rb_rawbuf_flush@plt>
   1215c:	cmp	r0, #0
   12160:	bgt	12140 <__errno_location@plt+0xf58>
   12164:	beq	121ac <__errno_location@plt+0xfc4>
   12168:	bl	111e8 <__errno_location@plt>
   1216c:	ldr	r0, [r0]
   12170:	bl	10f24 <rb_ignore_errno@plt>
   12174:	cmp	r0, #0
   12178:	beq	121ac <__errno_location@plt+0xfc4>
   1217c:	ldr	r0, [r4, #20]
   12180:	bl	110bc <rb_rawbuf_length@plt>
   12184:	cmp	r0, #0
   12188:	ble	121c0 <__errno_location@plt+0xfd8>
   1218c:	ldr	r2, [pc, #68]	; 121d8 <__errno_location@plt+0xff0>
   12190:	mov	r3, r4
   12194:	ldr	r0, [r4, #32]
   12198:	add	r2, pc, r2
   1219c:	mov	r1, #2
   121a0:	pop	{r4, r5, r6, lr}
   121a4:	b	10f54 <rb_setselect@plt>
   121a8:	bx	lr
   121ac:	mov	r2, #0
   121b0:	mov	r0, r4
   121b4:	mov	r1, r2
   121b8:	pop	{r4, r5, r6, lr}
   121bc:	b	11e40 <__errno_location@plt+0xc58>
   121c0:	mov	r3, #0
   121c4:	ldr	r0, [r4, #32]
   121c8:	mov	r2, r3
   121cc:	mov	r1, #2
   121d0:	pop	{r4, r5, r6, lr}
   121d4:	b	10f54 <rb_setselect@plt>
   121d8:			; <UNDEFINED> instruction: 0xffffff84
   121dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   121e0:	sub	sp, sp, #16384	; 0x4000
   121e4:	sub	sp, sp, #4
   121e8:	mov	r4, r0
   121ec:	ldr	r0, [r0, #76]	; 0x4c
   121f0:	mov	r7, r1
   121f4:	mov	r6, sp
   121f8:	mov	r8, #0
   121fc:	mov	r5, #16384	; 0x4000
   12200:	stm	r0, {r1, r2}
   12204:	str	sp, [r0, #12]
   12208:	str	r5, [r0, #16]
   1220c:	cmp	r2, #0
   12210:	mov	r1, r8
   12214:	beq	12250 <__errno_location@plt+0x1068>
   12218:	bl	11008 <inflate@plt>
   1221c:	subs	r9, r0, #0
   12220:	bne	1225c <__errno_location@plt+0x1074>
   12224:	ldr	r0, [r4, #76]	; 0x4c
   12228:	ldr	r2, [r0, #4]
   1222c:	ldr	r3, [r0, #16]
   12230:	cmp	r2, #0
   12234:	rsb	r3, r3, #16384	; 0x4000
   12238:	bne	12298 <__errno_location@plt+0x10b0>
   1223c:	cmp	r3, #0
   12240:	beq	12250 <__errno_location@plt+0x1068>
   12244:	ldrb	r2, [r4, #72]	; 0x48
   12248:	tst	r2, #8
   1224c:	beq	122dc <__errno_location@plt+0x10f4>
   12250:	add	sp, sp, #16384	; 0x4000
   12254:	add	sp, sp, #4
   12258:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1225c:	ldr	r0, [pc, #168]	; 1230c <__errno_location@plt+0x1124>
   12260:	mov	r1, r7
   12264:	mov	r2, #6
   12268:	add	r0, pc, r0
   1226c:	bl	111a0 <strncmp@plt>
   12270:	cmp	r0, #0
   12274:	bne	122b0 <__errno_location@plt+0x10c8>
   12278:	ldr	r2, [pc, #144]	; 12310 <__errno_location@plt+0x1128>
   1227c:	mov	r0, r4
   12280:	add	r2, pc, r2
   12284:	mov	r1, #1
   12288:	bl	11e40 <__errno_location@plt+0xc58>
   1228c:	add	sp, sp, #16384	; 0x4000
   12290:	add	sp, sp, #4
   12294:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12298:	ldrb	r1, [r4, #72]	; 0x48
   1229c:	tst	r1, #8
   122a0:	beq	122f0 <__errno_location@plt+0x1108>
   122a4:	str	r6, [r0, #12]
   122a8:	str	r5, [r0, #16]
   122ac:	b	1220c <__errno_location@plt+0x1024>
   122b0:	mov	r0, r9
   122b4:	bl	10f00 <zError@plt>
   122b8:	ldr	r2, [pc, #84]	; 12314 <__errno_location@plt+0x112c>
   122bc:	mov	r1, #1
   122c0:	add	r2, pc, r2
   122c4:	mov	r3, r0
   122c8:	mov	r0, r4
   122cc:	bl	11e40 <__errno_location@plt+0xc58>
   122d0:	add	sp, sp, #16384	; 0x4000
   122d4:	add	sp, sp, #4
   122d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   122dc:	mov	r2, r3
   122e0:	mov	r1, r6
   122e4:	ldr	r0, [r4, #20]
   122e8:	bl	111b8 <rb_rawbuf_append@plt>
   122ec:	b	12250 <__errno_location@plt+0x1068>
   122f0:	mov	r2, r3
   122f4:	ldr	r0, [r4, #20]
   122f8:	mov	r1, r6
   122fc:	bl	111b8 <rb_rawbuf_append@plt>
   12300:	ldr	r0, [r4, #76]	; 0x4c
   12304:	ldr	r2, [r0, #4]
   12308:	b	122a4 <__errno_location@plt+0x10bc>
   1230c:	andeq	r1, r0, r4, lsl #5
   12310:	andeq	r1, r0, r4, ror r2
   12314:	andeq	r1, r0, r0, asr r2
   12318:	push	{r4, r5, r6, r7, r8, lr}
   1231c:	sub	sp, sp, #16384	; 0x4000
   12320:	ldrb	r3, [r0, #72]	; 0x48
   12324:	mov	r5, r0
   12328:	mov	r6, sp
   1232c:	mov	r7, #16384	; 0x4000
   12330:	and	r3, r3, #8
   12334:	ands	r4, r3, #255	; 0xff
   12338:	mov	r2, r7
   1233c:	mov	r1, r6
   12340:	bne	123f8 <__errno_location@plt+0x1210>
   12344:	ldr	r0, [r5, #28]
   12348:	bl	11044 <rb_read@plt>
   1234c:	subs	r8, r0, #0
   12350:	beq	12400 <__errno_location@plt+0x1218>
   12354:	blt	123b4 <__errno_location@plt+0x11cc>
   12358:	ldrd	r0, [r5, #48]	; 0x30
   1235c:	ldrb	r3, [r5, #72]	; 0x48
   12360:	adds	r0, r0, r8
   12364:	adc	r1, r1, r8, asr #31
   12368:	tst	r3, #2
   1236c:	strd	r0, [r5, #48]	; 0x30
   12370:	bne	12398 <__errno_location@plt+0x11b0>
   12374:	ands	r3, r3, #8
   12378:	bne	12334 <__errno_location@plt+0x114c>
   1237c:	mov	r2, r8
   12380:	mov	r1, r6
   12384:	ldr	r0, [r5, #20]
   12388:	bl	111b8 <rb_rawbuf_append@plt>
   1238c:	ldrb	r3, [r5, #72]	; 0x48
   12390:	and	r3, r3, #8
   12394:	b	12334 <__errno_location@plt+0x114c>
   12398:	mov	r2, r8
   1239c:	mov	r1, r6
   123a0:	mov	r0, r5
   123a4:	bl	121dc <__errno_location@plt+0xff4>
   123a8:	ldrb	r3, [r5, #72]	; 0x48
   123ac:	and	r3, r3, #8
   123b0:	b	12334 <__errno_location@plt+0x114c>
   123b4:	bl	111e8 <__errno_location@plt>
   123b8:	mov	r6, r0
   123bc:	ldr	r0, [r0]
   123c0:	bl	10f24 <rb_ignore_errno@plt>
   123c4:	cmp	r0, #0
   123c8:	beq	12424 <__errno_location@plt+0x123c>
   123cc:	cmn	r8, #4
   123d0:	beq	12464 <__errno_location@plt+0x127c>
   123d4:	ldr	r2, [pc, #212]	; 124b0 <__errno_location@plt+0x12c8>
   123d8:	mov	r3, r5
   123dc:	add	r2, pc, r2
   123e0:	mov	r1, #1
   123e4:	ldr	r0, [r5, #28]
   123e8:	bl	10f54 <rb_setselect@plt>
   123ec:	mov	r1, r5
   123f0:	ldr	r0, [r5, #32]
   123f4:	bl	12124 <__errno_location@plt+0xf3c>
   123f8:	add	sp, sp, #16384	; 0x4000
   123fc:	pop	{r4, r5, r6, r7, r8, pc}
   12400:	ldr	r3, [pc, #172]	; 124b4 <__errno_location@plt+0x12cc>
   12404:	ldr	r2, [pc, #172]	; 124b8 <__errno_location@plt+0x12d0>
   12408:	mov	r0, r5
   1240c:	add	r3, pc, r3
   12410:	add	r2, pc, r2
   12414:	mov	r1, #1
   12418:	bl	11e40 <__errno_location@plt+0xc58>
   1241c:	add	sp, sp, #16384	; 0x4000
   12420:	pop	{r4, r5, r6, r7, r8, pc}
   12424:	ldrb	r3, [r5, #72]	; 0x48
   12428:	cmn	r8, #2
   1242c:	movne	r8, #0
   12430:	moveq	r8, #1
   12434:	tst	r3, r8
   12438:	bne	124a0 <__errno_location@plt+0x12b8>
   1243c:	ldr	r0, [r6]
   12440:	bl	10ee8 <strerror@plt>
   12444:	mov	r3, r0
   12448:	ldr	r2, [pc, #108]	; 124bc <__errno_location@plt+0x12d4>
   1244c:	mov	r0, r5
   12450:	add	r2, pc, r2
   12454:	mov	r1, #1
   12458:	bl	11e40 <__errno_location@plt+0xc58>
   1245c:	add	sp, sp, #16384	; 0x4000
   12460:	pop	{r4, r5, r6, r7, r8, pc}
   12464:	mov	r3, r4
   12468:	mov	r2, r4
   1246c:	mov	r1, #1
   12470:	ldr	r0, [r5, #28]
   12474:	bl	10f54 <rb_setselect@plt>
   12478:	ldr	r2, [pc, #64]	; 124c0 <__errno_location@plt+0x12d8>
   1247c:	mov	r3, r5
   12480:	add	r2, pc, r2
   12484:	mov	r1, #2
   12488:	ldr	r0, [r5, #28]
   1248c:	bl	10f54 <rb_setselect@plt>
   12490:	ldrb	r3, [r5, #72]	; 0x48
   12494:	orr	r3, r3, #32
   12498:	strb	r3, [r5, #72]	; 0x48
   1249c:	b	123ec <__errno_location@plt+0x1204>
   124a0:	ldr	r0, [r5, #28]
   124a4:	bl	110d4 <rb_get_ssl_strerror@plt>
   124a8:	mov	r3, r0
   124ac:	b	12448 <__errno_location@plt+0x1260>
   124b0:	andeq	r0, r0, r0, ror #1
   124b4:	andeq	r1, r0, r8, lsr #2
   124b8:	andeq	r1, r0, r8, ror #2
   124bc:	ldrdeq	r1, [r0], -r4
   124c0:	andeq	r0, r0, ip, lsr r0
   124c4:	subs	r0, r1, #0
   124c8:	bxeq	lr
   124cc:	ldrb	r3, [r0, #72]	; 0x48
   124d0:	tst	r3, #8
   124d4:	bxne	lr
   124d8:	tst	r3, #32
   124dc:	push	{r4, lr}
   124e0:	mov	r4, r0
   124e4:	bne	124f4 <__errno_location@plt+0x130c>
   124e8:	mov	r0, r4
   124ec:	pop	{r4, lr}
   124f0:	b	12318 <__errno_location@plt+0x1130>
   124f4:	bic	r3, r3, #32
   124f8:	strb	r3, [r0, #72]	; 0x48
   124fc:	ldr	r0, [r0, #28]
   12500:	bl	12514 <__errno_location@plt+0x132c>
   12504:	ldrb	r3, [r4, #72]	; 0x48
   12508:	tst	r3, #8
   1250c:	beq	124e8 <__errno_location@plt+0x1300>
   12510:	pop	{r4, pc}
   12514:	ldrb	r3, [r1, #72]	; 0x48
   12518:	tst	r3, #8
   1251c:	bxne	lr
   12520:	tst	r3, #16
   12524:	push	{r4, r5, r6, lr}
   12528:	mov	r4, r1
   1252c:	mov	r6, r0
   12530:	beq	12564 <__errno_location@plt+0x137c>
   12534:	bic	r3, r3, #16
   12538:	strb	r3, [r1, #72]	; 0x48
   1253c:	ldr	r0, [r1, #28]
   12540:	bl	124c4 <__errno_location@plt+0x12dc>
   12544:	ldrb	r3, [r4, #72]	; 0x48
   12548:	tst	r3, #8
   1254c:	beq	12564 <__errno_location@plt+0x137c>
   12550:	pop	{r4, r5, r6, pc}
   12554:	ldrd	r2, [r4, #40]	; 0x28
   12558:	adds	r2, r2, r5
   1255c:	adc	r3, r3, r5, asr #31
   12560:	strd	r2, [r4, #40]	; 0x28
   12564:	mov	r1, r6
   12568:	ldr	r0, [r4, #16]
   1256c:	bl	111c4 <rb_rawbuf_flush@plt>
   12570:	subs	r5, r0, #0
   12574:	bgt	12554 <__errno_location@plt+0x136c>
   12578:	bne	125c0 <__errno_location@plt+0x13d8>
   1257c:	ldr	r3, [pc, #308]	; 126b8 <__errno_location@plt+0x14d0>
   12580:	ldr	r2, [pc, #308]	; 126bc <__errno_location@plt+0x14d4>
   12584:	add	r3, pc, r3
   12588:	add	r2, pc, r2
   1258c:	mov	r1, #1
   12590:	mov	r0, r4
   12594:	bl	11e40 <__errno_location@plt+0xc58>
   12598:	bl	111e8 <__errno_location@plt>
   1259c:	ldr	r0, [r0]
   125a0:	bl	10ee8 <strerror@plt>
   125a4:	mov	r3, r0
   125a8:	ldr	r2, [pc, #272]	; 126c0 <__errno_location@plt+0x14d8>
   125ac:	mov	r0, r4
   125b0:	add	r2, pc, r2
   125b4:	mov	r1, #1
   125b8:	pop	{r4, r5, r6, lr}
   125bc:	b	11e40 <__errno_location@plt+0xc58>
   125c0:	bl	111e8 <__errno_location@plt>
   125c4:	ldr	r0, [r0]
   125c8:	bl	10f24 <rb_ignore_errno@plt>
   125cc:	cmp	r0, #0
   125d0:	beq	12674 <__errno_location@plt+0x148c>
   125d4:	ldr	r0, [r4, #16]
   125d8:	bl	110bc <rb_rawbuf_length@plt>
   125dc:	cmp	r0, #0
   125e0:	ble	1269c <__errno_location@plt+0x14b4>
   125e4:	cmn	r5, #3
   125e8:	mov	r3, r4
   125ec:	beq	1263c <__errno_location@plt+0x1454>
   125f0:	ldr	r2, [pc, #204]	; 126c4 <__errno_location@plt+0x14dc>
   125f4:	mov	r1, #2
   125f8:	add	r2, pc, r2
   125fc:	ldr	r0, [r4, #28]
   12600:	bl	10f54 <rb_setselect@plt>
   12604:	ldrb	r3, [r4, #72]	; 0x48
   12608:	tst	r3, #4
   1260c:	popeq	{r4, r5, r6, pc}
   12610:	ldr	r0, [r4, #16]
   12614:	bl	110bc <rb_rawbuf_length@plt>
   12618:	cmp	r0, #0
   1261c:	popne	{r4, r5, r6, pc}
   12620:	ldrb	r3, [r4, #72]	; 0x48
   12624:	mov	r1, r4
   12628:	ldr	r0, [r4, #32]
   1262c:	bic	r3, r3, #4
   12630:	strb	r3, [r4, #72]	; 0x48
   12634:	pop	{r4, r5, r6, lr}
   12638:	b	128bc <__errno_location@plt+0x16d4>
   1263c:	ldr	r2, [pc, #132]	; 126c8 <__errno_location@plt+0x14e0>
   12640:	mov	r1, #1
   12644:	add	r2, pc, r2
   12648:	ldr	r0, [r4, #28]
   1264c:	bl	10f54 <rb_setselect@plt>
   12650:	mov	r3, #0
   12654:	mov	r2, r3
   12658:	mov	r1, #2
   1265c:	ldr	r0, [r4, #28]
   12660:	bl	10f54 <rb_setselect@plt>
   12664:	ldrb	r3, [r4, #72]	; 0x48
   12668:	orr	r3, r3, #16
   1266c:	strb	r3, [r4, #72]	; 0x48
   12670:	b	12608 <__errno_location@plt+0x1420>
   12674:	ldrb	r3, [r4, #72]	; 0x48
   12678:	cmn	r5, #2
   1267c:	movne	r5, #0
   12680:	moveq	r5, #1
   12684:	tst	r3, r5
   12688:	beq	12598 <__errno_location@plt+0x13b0>
   1268c:	ldr	r0, [r4, #28]
   12690:	bl	110d4 <rb_get_ssl_strerror@plt>
   12694:	mov	r3, r0
   12698:	b	125a8 <__errno_location@plt+0x13c0>
   1269c:	mov	r3, #0
   126a0:	mov	r2, r3
   126a4:	mov	r1, #2
   126a8:	ldr	r0, [r4, #28]
   126ac:	bl	10f54 <rb_setselect@plt>
   126b0:	ldrb	r3, [r4, #72]	; 0x48
   126b4:	b	12608 <__errno_location@plt+0x1420>
   126b8:			; <UNDEFINED> instruction: 0x00000fb0
   126bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   126c0:	andeq	r0, r0, r8, lsr #31
   126c4:			; <UNDEFINED> instruction: 0xffffff14
   126c8:			; <UNDEFINED> instruction: 0xfffffec8
   126cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126d0:	sub	sp, sp, #32768	; 0x8000
   126d4:	ldr	r9, [pc, #460]	; 128a8 <__errno_location@plt+0x16c0>
   126d8:	ldr	r8, [pc, #460]	; 128ac <__errno_location@plt+0x16c4>
   126dc:	sub	sp, sp, #12
   126e0:	ldr	r3, [pc, #456]	; 128b0 <__errno_location@plt+0x16c8>
   126e4:	ldr	r7, [pc, #456]	; 128b4 <__errno_location@plt+0x16cc>
   126e8:	add	r9, pc, r9
   126ec:	add	r8, pc, r8
   126f0:	mov	r4, r0
   126f4:	add	r5, sp, #8
   126f8:	mov	r6, #16384	; 0x4000
   126fc:	add	r3, pc, r3
   12700:	str	r3, [sp, #4]
   12704:	ldrb	r3, [r4, #72]	; 0x48
   12708:	tst	r3, #8
   1270c:	bne	12750 <__errno_location@plt+0x1568>
   12710:	mov	r2, r6
   12714:	mov	r1, r5
   12718:	ldr	r0, [r4, #32]
   1271c:	bl	11044 <rb_read@plt>
   12720:	subs	r2, r0, #0
   12724:	beq	12850 <__errno_location@plt+0x1668>
   12728:	blt	12830 <__errno_location@plt+0x1648>
   1272c:	ldrd	r0, [r4, #56]	; 0x38
   12730:	ldrb	r3, [r4, #72]	; 0x48
   12734:	adds	r0, r0, r2
   12738:	adc	r1, r1, r2, asr #31
   1273c:	tst	r3, #2
   12740:	strd	r0, [r4, #56]	; 0x38
   12744:	bne	1275c <__errno_location@plt+0x1574>
   12748:	tst	r3, #8
   1274c:	beq	127cc <__errno_location@plt+0x15e4>
   12750:	add	sp, sp, #32768	; 0x8000
   12754:	add	sp, sp, #12
   12758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1275c:	ldr	sl, [r4, #76]	; 0x4c
   12760:	add	fp, sp, #16384	; 0x4000
   12764:	add	fp, fp, #8
   12768:	add	r0, sl, #56	; 0x38
   1276c:	str	r5, [sl, #56]	; 0x38
   12770:	str	r2, [sl, #60]	; 0x3c
   12774:	str	r6, [sl, #72]	; 0x48
   12778:	str	fp, [sl, #68]	; 0x44
   1277c:	mov	r1, #2
   12780:	bl	10fa8 <deflate@plt>
   12784:	cmp	r0, #0
   12788:	bne	12864 <__errno_location@plt+0x167c>
   1278c:	ldr	r2, [sl, #72]	; 0x48
   12790:	cmp	r2, #0
   12794:	beq	12880 <__errno_location@plt+0x1698>
   12798:	ldr	r3, [sl, #60]	; 0x3c
   1279c:	cmp	r3, #0
   127a0:	bne	12894 <__errno_location@plt+0x16ac>
   127a4:	ldrb	r3, [r4, #72]	; 0x48
   127a8:	tst	r3, #8
   127ac:	bne	12750 <__errno_location@plt+0x1568>
   127b0:	mov	r1, fp
   127b4:	rsb	r2, r2, #16384	; 0x4000
   127b8:	ldr	r0, [r4, #16]
   127bc:	bl	111b8 <rb_rawbuf_append@plt>
   127c0:	ldrb	fp, [r4, #72]	; 0x48
   127c4:	and	fp, fp, #8
   127c8:	b	127e0 <__errno_location@plt+0x15f8>
   127cc:	mov	r1, r5
   127d0:	ldr	r0, [r4, #16]
   127d4:	bl	111b8 <rb_rawbuf_append@plt>
   127d8:	ldrb	fp, [r4, #72]	; 0x48
   127dc:	and	fp, fp, #8
   127e0:	cmp	fp, #0
   127e4:	bne	12750 <__errno_location@plt+0x1568>
   127e8:	ldr	r0, [r4, #16]
   127ec:	bl	110bc <rb_rawbuf_length@plt>
   127f0:	cmp	r0, r7
   127f4:	ble	12704 <__errno_location@plt+0x151c>
   127f8:	ldrb	r1, [r4, #72]	; 0x48
   127fc:	mov	r3, fp
   12800:	mov	r2, fp
   12804:	orr	r1, r1, #4
   12808:	strb	r1, [r4, #72]	; 0x48
   1280c:	ldr	r0, [r4, #32]
   12810:	mov	r1, #1
   12814:	bl	10f54 <rb_setselect@plt>
   12818:	mov	r1, r4
   1281c:	ldr	r0, [r4, #28]
   12820:	bl	12514 <__errno_location@plt+0x132c>
   12824:	add	sp, sp, #32768	; 0x8000
   12828:	add	sp, sp, #12
   1282c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12830:	bl	111e8 <__errno_location@plt>
   12834:	ldr	r0, [r0]
   12838:	bl	10f24 <rb_ignore_errno@plt>
   1283c:	ldr	r2, [pc, #116]	; 128b8 <__errno_location@plt+0x16d0>
   12840:	mov	r3, r4
   12844:	add	r2, pc, r2
   12848:	cmp	r0, #0
   1284c:	bne	1280c <__errno_location@plt+0x1624>
   12850:	mov	r2, #0
   12854:	mov	r0, r4
   12858:	mov	r1, r2
   1285c:	bl	11e40 <__errno_location@plt+0xc58>
   12860:	b	12750 <__errno_location@plt+0x1568>
   12864:	bl	10f00 <zError@plt>
   12868:	mov	r2, r8
   1286c:	mov	r1, #1
   12870:	mov	r3, r0
   12874:	mov	r0, r4
   12878:	bl	11e40 <__errno_location@plt+0xc58>
   1287c:	b	127d8 <__errno_location@plt+0x15f0>
   12880:	mov	r2, r9
   12884:	mov	r1, #1
   12888:	mov	r0, r4
   1288c:	bl	11e40 <__errno_location@plt+0xc58>
   12890:	b	127d8 <__errno_location@plt+0x15f0>
   12894:	ldr	r2, [sp, #4]
   12898:	mov	r1, #1
   1289c:	mov	r0, r4
   128a0:	bl	11e40 <__errno_location@plt+0xc58>
   128a4:	b	127d8 <__errno_location@plt+0x15f0>
   128a8:	muleq	r0, r4, lr
   128ac:	andeq	r0, r0, ip, ror lr
   128b0:	andeq	r0, r0, r8, lsr #29
   128b4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   128b8:	andeq	r0, r0, r0, ror r0
   128bc:	push	{r4, r5, r6, lr}
   128c0:	subs	r5, r1, #0
   128c4:	popeq	{r4, r5, r6, pc}
   128c8:	ldrb	r3, [r5, #72]	; 0x48
   128cc:	ands	r4, r3, #8
   128d0:	popne	{r4, r5, r6, pc}
   128d4:	ldr	r0, [r5, #16]
   128d8:	bl	110bc <rb_rawbuf_length@plt>
   128dc:	cmp	r0, #4096	; 0x1000
   128e0:	bge	128f0 <__errno_location@plt+0x1708>
   128e4:	mov	r0, r5
   128e8:	pop	{r4, r5, r6, lr}
   128ec:	b	126cc <__errno_location@plt+0x14e4>
   128f0:	ldrb	r1, [r5, #72]	; 0x48
   128f4:	ldr	r0, [r5, #32]
   128f8:	mov	r3, r4
   128fc:	orr	r1, r1, #4
   12900:	strb	r1, [r5, #72]	; 0x48
   12904:	mov	r2, r4
   12908:	mov	r1, #1
   1290c:	bl	10f54 <rb_setselect@plt>
   12910:	mov	r1, r5
   12914:	ldr	r0, [r5, #28]
   12918:	pop	{r4, r5, r6, lr}
   1291c:	b	12514 <__errno_location@plt+0x132c>
   12920:	push	{r4, lr}
   12924:	sub	sp, sp, #8
   12928:	cmp	r1, #0
   1292c:	ldr	r4, [sp, #16]
   12930:	beq	1294c <__errno_location@plt+0x1764>
   12934:	mov	r2, #0
   12938:	mov	r0, r4
   1293c:	mov	r1, r2
   12940:	bl	11e40 <__errno_location@plt+0xc58>
   12944:	add	sp, sp, #8
   12948:	pop	{r4, pc}
   1294c:	mov	r0, r4
   12950:	bl	11b44 <__errno_location@plt+0x95c>
   12954:	mov	r0, r4
   12958:	bl	11bb8 <__errno_location@plt+0x9d0>
   1295c:	ldr	ip, [r4, #24]
   12960:	mov	r3, #79	; 0x4f
   12964:	mov	r2, #5
   12968:	ldr	r0, [r4, #12]
   1296c:	mov	r1, sp
   12970:	str	ip, [sp, #1]
   12974:	strb	r3, [sp]
   12978:	bl	11a68 <__errno_location@plt+0x880>
   1297c:	mov	r1, r4
   12980:	ldr	r0, [r4, #28]
   12984:	bl	124c4 <__errno_location@plt+0x12dc>
   12988:	mov	r1, r4
   1298c:	ldr	r0, [r4, #32]
   12990:	bl	128bc <__errno_location@plt+0x16d4>
   12994:	add	sp, sp, #8
   12998:	pop	{r4, pc}
   1299c:	cmp	r1, #0
   129a0:	push	{r4, lr}
   129a4:	mov	r4, r2
   129a8:	sub	sp, sp, #8
   129ac:	beq	129dc <__errno_location@plt+0x17f4>
   129b0:	cmp	r1, #3
   129b4:	beq	12a54 <__errno_location@plt+0x186c>
   129b8:	cmp	r1, #6
   129bc:	beq	12a2c <__errno_location@plt+0x1844>
   129c0:	mov	r0, r2
   129c4:	ldr	r2, [pc, #160]	; 12a6c <__errno_location@plt+0x1884>
   129c8:	mov	r1, #1
   129cc:	add	r2, pc, r2
   129d0:	bl	11e40 <__errno_location@plt+0xc58>
   129d4:	add	sp, sp, #8
   129d8:	pop	{r4, pc}
   129dc:	mov	r0, r2
   129e0:	bl	11b44 <__errno_location@plt+0x95c>
   129e4:	mov	r0, r4
   129e8:	bl	11bb8 <__errno_location@plt+0x9d0>
   129ec:	ldr	ip, [r4, #24]
   129f0:	mov	r3, #79	; 0x4f
   129f4:	mov	r2, #5
   129f8:	ldr	r0, [r4, #12]
   129fc:	mov	r1, sp
   12a00:	str	ip, [sp, #1]
   12a04:	strb	r3, [sp]
   12a08:	bl	11a68 <__errno_location@plt+0x880>
   12a0c:	mov	r1, r4
   12a10:	ldr	r0, [r4, #28]
   12a14:	bl	124c4 <__errno_location@plt+0x12dc>
   12a18:	mov	r1, r4
   12a1c:	ldr	r0, [r4, #32]
   12a20:	bl	128bc <__errno_location@plt+0x16d4>
   12a24:	add	sp, sp, #8
   12a28:	pop	{r4, pc}
   12a2c:	ldr	r0, [r2, #28]
   12a30:	bl	110d4 <rb_get_ssl_strerror@plt>
   12a34:	ldr	r2, [pc, #52]	; 12a70 <__errno_location@plt+0x1888>
   12a38:	mov	r1, #1
   12a3c:	add	r2, pc, r2
   12a40:	mov	r3, r0
   12a44:	mov	r0, r4
   12a48:	bl	11e40 <__errno_location@plt+0xc58>
   12a4c:	add	sp, sp, #8
   12a50:	pop	{r4, pc}
   12a54:	mov	r0, r2
   12a58:	ldr	r2, [pc, #20]	; 12a74 <__errno_location@plt+0x188c>
   12a5c:	mov	r1, #1
   12a60:	add	r2, pc, r2
   12a64:	bl	11e40 <__errno_location@plt+0xc58>
   12a68:	b	129d4 <__errno_location@plt+0x17ec>
   12a6c:	andeq	r0, r0, r8, lsl ip
   12a70:	andeq	r0, r0, ip, lsr fp
   12a74:	andeq	r0, r0, ip, ror #22
   12a78:	push	{r4, r5, r6, lr}
   12a7c:	subs	r5, r1, #0
   12a80:	mov	r4, r0
   12a84:	beq	12b24 <__errno_location@plt+0x193c>
   12a88:	ldr	r2, [r5, #24]
   12a8c:	ldr	r1, [r5, #20]
   12a90:	bl	118b8 <__errno_location@plt+0x6d0>
   12a94:	ldr	r2, [r5, #12]
   12a98:	ldr	r3, [pc, #172]	; 12b4c <__errno_location@plt+0x1964>
   12a9c:	mov	ip, #2000	; 0x7d0
   12aa0:	mov	lr, #0
   12aa4:	mov	r1, r0
   12aa8:	ldr	r0, [r2, #1]
   12aac:	ldr	r2, [pc, #156]	; 12b50 <__errno_location@plt+0x1968>
   12ab0:	str	r0, [r1, #24]
   12ab4:	umull	r5, r3, r3, r0
   12ab8:	str	r1, [r1]
   12abc:	add	r2, pc, r2
   12ac0:	lsr	r3, r3, #7
   12ac4:	str	lr, [r1, #4]
   12ac8:	mul	r3, ip, r3
   12acc:	sub	r3, r0, r3
   12ad0:	lsl	r0, r3, #1
   12ad4:	add	ip, r0, r3
   12ad8:	add	r2, r2, ip, lsl #2
   12adc:	ldr	ip, [r2, #20]
   12ae0:	cmp	ip, lr
   12ae4:	str	ip, [r1, #8]
   12ae8:	strne	r1, [ip, #4]
   12aec:	beq	12b3c <__errno_location@plt+0x1954>
   12af0:	add	r2, r0, r3
   12af4:	ldr	r3, [pc, #88]	; 12b54 <__errno_location@plt+0x196c>
   12af8:	mov	r0, r1
   12afc:	add	r3, pc, r3
   12b00:	add	r3, r3, r2, lsl #2
   12b04:	ldr	r2, [pc, #76]	; 12b58 <__errno_location@plt+0x1970>
   12b08:	ldr	ip, [r3, #28]
   12b0c:	str	r1, [r3, #20]
   12b10:	add	r1, ip, #1
   12b14:	str	r1, [r3, #28]
   12b18:	add	r2, pc, r2
   12b1c:	mov	r1, #1
   12b20:	bl	11e40 <__errno_location@plt+0xc58>
   12b24:	ldr	r1, [pc, #48]	; 12b5c <__errno_location@plt+0x1974>
   12b28:	mov	r0, r4
   12b2c:	mov	r2, #1
   12b30:	add	r1, pc, r1
   12b34:	pop	{r4, r5, r6, lr}
   12b38:	b	11a68 <__errno_location@plt+0x880>
   12b3c:	ldr	ip, [r2, #24]
   12b40:	cmp	ip, #0
   12b44:	streq	r1, [r2, #24]
   12b48:	b	12af0 <__errno_location@plt+0x1908>
   12b4c:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   12b50:	andeq	r1, r1, r8, ror #12
   12b54:	andeq	r1, r1, r8, lsr #12
   12b58:	andeq	r0, r0, r4, ror #21
   12b5c:	strdeq	r0, [r0], -r4
   12b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b64:	mov	r4, r1
   12b68:	sub	sp, sp, #44	; 0x2c
   12b6c:	mov	r8, #40	; 0x28
   12b70:	mov	r6, #1
   12b74:	mov	r7, #16384	; 0x4000
   12b78:	mov	r9, #4
   12b7c:	mov	r1, r8
   12b80:	mov	r0, r6
   12b84:	bl	10fc0 <calloc@plt>
   12b88:	subs	r5, r0, #0
   12b8c:	beq	12d30 <__errno_location@plt+0x1b48>
   12b90:	mov	r1, r7
   12b94:	mov	r0, r6
   12b98:	bl	10fc0 <calloc@plt>
   12b9c:	subs	r1, r0, #0
   12ba0:	beq	12d30 <__errno_location@plt+0x1b48>
   12ba4:	add	fp, r5, #20
   12ba8:	ldr	r0, [r4, #16]
   12bac:	str	r1, [r5, #12]
   12bb0:	str	r7, [r5, #16]
   12bb4:	mov	r3, fp
   12bb8:	str	r9, [sp]
   12bbc:	mov	r2, #16384	; 0x4000
   12bc0:	bl	11164 <rb_recv_fd_buf@plt>
   12bc4:	cmp	r0, #0
   12bc8:	ble	12c28 <__errno_location@plt+0x1a40>
   12bcc:	ldr	r3, [r4, #28]
   12bd0:	mov	r2, #0
   12bd4:	cmp	r3, #0
   12bd8:	str	r0, [r5, #16]
   12bdc:	str	r5, [r5]
   12be0:	str	r2, [r5, #8]
   12be4:	str	r3, [r5, #4]
   12be8:	strne	r5, [r3, #8]
   12bec:	beq	12d34 <__errno_location@plt+0x1b4c>
   12bf0:	ldr	r2, [r4, #32]
   12bf4:	mov	r3, fp
   12bf8:	add	r2, r2, #1
   12bfc:	str	r2, [r4, #32]
   12c00:	mov	r2, #0
   12c04:	str	r5, [r4, #28]
   12c08:	ldr	r1, [r3], #4
   12c0c:	cmp	r1, #0
   12c10:	beq	12c20 <__errno_location@plt+0x1a38>
   12c14:	add	r2, r2, #1
   12c18:	cmp	r2, #4
   12c1c:	bne	12c08 <__errno_location@plt+0x1a20>
   12c20:	str	r2, [r5, #36]	; 0x24
   12c24:	b	12b7c <__errno_location@plt+0x1994>
   12c28:	mov	sl, r0
   12c2c:	ldr	r0, [r5, #12]
   12c30:	cmp	r0, #0
   12c34:	beq	12c3c <__errno_location@plt+0x1a54>
   12c38:	bl	11020 <free@plt>
   12c3c:	mov	r0, r5
   12c40:	bl	11020 <free@plt>
   12c44:	cmp	sl, #0
   12c48:	beq	1339c <__errno_location@plt+0x21b4>
   12c4c:	bl	111e8 <__errno_location@plt>
   12c50:	ldr	r0, [r0]
   12c54:	bl	10f24 <rb_ignore_errno@plt>
   12c58:	cmp	r0, #0
   12c5c:	beq	1339c <__errno_location@plt+0x21b4>
   12c60:	ldr	r6, [r4, #24]
   12c64:	cmp	r6, #0
   12c68:	beq	12f2c <__errno_location@plt+0x1d44>
   12c6c:	ldr	r3, [pc, #1840]	; 133a4 <__errno_location@plt+0x21bc>
   12c70:	ldr	fp, [r6, #8]
   12c74:	add	r3, pc, r3
   12c78:	str	r3, [sp, #20]
   12c7c:	ldr	r3, [pc, #1828]	; 133a8 <__errno_location@plt+0x21c0>
   12c80:	add	r3, pc, r3
   12c84:	str	r3, [sp, #24]
   12c88:	ldr	r3, [pc, #1820]	; 133ac <__errno_location@plt+0x21c4>
   12c8c:	add	r3, pc, r3
   12c90:	str	r3, [sp, #8]
   12c94:	ldr	r3, [pc, #1812]	; 133b0 <__errno_location@plt+0x21c8>
   12c98:	add	r3, pc, r3
   12c9c:	str	r3, [sp, #12]
   12ca0:	ldr	r3, [pc, #1804]	; 133b4 <__errno_location@plt+0x21cc>
   12ca4:	add	r3, pc, r3
   12ca8:	str	r3, [sp, #16]
   12cac:	ldr	r5, [r6]
   12cb0:	ldr	r0, [r5, #12]
   12cb4:	ldrb	r3, [r0]
   12cb8:	sub	r3, r3, #65	; 0x41
   12cbc:	cmp	r3, #25
   12cc0:	addls	pc, pc, r3, lsl #2
   12cc4:	b	12d8c <__errno_location@plt+0x1ba4>
   12cc8:	b	12dec <__errno_location@plt+0x1c04>
   12ccc:	b	12d8c <__errno_location@plt+0x1ba4>
   12cd0:	b	12e60 <__errno_location@plt+0x1c78>
   12cd4:	b	12d8c <__errno_location@plt+0x1ba4>
   12cd8:	b	12d8c <__errno_location@plt+0x1ba4>
   12cdc:	b	12e24 <__errno_location@plt+0x1c3c>
   12ce0:	b	12d8c <__errno_location@plt+0x1ba4>
   12ce4:	b	12d8c <__errno_location@plt+0x1ba4>
   12ce8:	b	12d8c <__errno_location@plt+0x1ba4>
   12cec:	b	12d8c <__errno_location@plt+0x1ba4>
   12cf0:	b	12e9c <__errno_location@plt+0x1cb4>
   12cf4:	b	12d8c <__errno_location@plt+0x1ba4>
   12cf8:	b	12d8c <__errno_location@plt+0x1ba4>
   12cfc:	b	12d8c <__errno_location@plt+0x1ba4>
   12d00:	b	12d8c <__errno_location@plt+0x1ba4>
   12d04:	b	12d8c <__errno_location@plt+0x1ba4>
   12d08:	b	12d8c <__errno_location@plt+0x1ba4>
   12d0c:	b	12d8c <__errno_location@plt+0x1ba4>
   12d10:	b	12d7c <__errno_location@plt+0x1b94>
   12d14:	b	12d8c <__errno_location@plt+0x1ba4>
   12d18:	b	12d8c <__errno_location@plt+0x1ba4>
   12d1c:	b	12d8c <__errno_location@plt+0x1ba4>
   12d20:	b	12d8c <__errno_location@plt+0x1ba4>
   12d24:	b	12d8c <__errno_location@plt+0x1ba4>
   12d28:	b	12d8c <__errno_location@plt+0x1ba4>
   12d2c:	b	12d44 <__errno_location@plt+0x1b5c>
   12d30:	bl	11104 <rb_outofmemory@plt>
   12d34:	ldr	r3, [r4, #24]
   12d38:	cmp	r3, #0
   12d3c:	streq	r5, [r4, #24]
   12d40:	b	12bf0 <__errno_location@plt+0x1a08>
   12d44:	ldr	r3, [r5, #36]	; 0x24
   12d48:	cmp	r3, #2
   12d4c:	beq	12f60 <__errno_location@plt+0x1d78>
   12d50:	cmp	r3, #0
   12d54:	ble	12d8c <__errno_location@plt+0x1ba4>
   12d58:	add	r8, r5, #20
   12d5c:	mov	r7, #0
   12d60:	ldr	r0, [r8], #4
   12d64:	bl	11080 <rb_close@plt>
   12d68:	ldr	r3, [r5, #36]	; 0x24
   12d6c:	add	r7, r7, #1
   12d70:	cmp	r7, r3
   12d74:	blt	12d60 <__errno_location@plt+0x1b78>
   12d78:	b	12f24 <__errno_location@plt+0x1d3c>
   12d7c:	mov	r1, r0
   12d80:	mov	r0, r4
   12d84:	bl	11c24 <__errno_location@plt+0xa3c>
   12d88:	ldr	r0, [r5, #12]
   12d8c:	ldmib	r6, {r2, r3}
   12d90:	cmp	r3, #0
   12d94:	strne	r2, [r3, #4]
   12d98:	ldrne	r2, [r6, #4]
   12d9c:	streq	r2, [r4, #28]
   12da0:	cmp	r2, #0
   12da4:	strne	r3, [r2, #8]
   12da8:	streq	r3, [r4, #24]
   12dac:	ldr	r3, [r4, #32]
   12db0:	mov	r2, #0
   12db4:	sub	r3, r3, #1
   12db8:	cmp	r0, #0
   12dbc:	str	r2, [r6, #4]
   12dc0:	str	r2, [r6, #8]
   12dc4:	str	r3, [r4, #32]
   12dc8:	beq	12dd0 <__errno_location@plt+0x1be8>
   12dcc:	bl	11020 <free@plt>
   12dd0:	mov	r0, r5
   12dd4:	bl	11020 <free@plt>
   12dd8:	cmp	fp, #0
   12ddc:	beq	12f2c <__errno_location@plt+0x1d44>
   12de0:	mov	r6, fp
   12de4:	ldr	fp, [fp, #8]
   12de8:	b	12cac <__errno_location@plt+0x1ac4>
   12dec:	ldr	r3, [r5, #36]	; 0x24
   12df0:	cmp	r3, #2
   12df4:	beq	131f0 <__errno_location@plt+0x2008>
   12df8:	cmp	r3, #0
   12dfc:	ble	12d8c <__errno_location@plt+0x1ba4>
   12e00:	add	r8, r5, #20
   12e04:	mov	r7, #0
   12e08:	ldr	r0, [r8], #4
   12e0c:	bl	11080 <rb_close@plt>
   12e10:	ldr	r3, [r5, #36]	; 0x24
   12e14:	add	r7, r7, #1
   12e18:	cmp	r7, r3
   12e1c:	blt	12e08 <__errno_location@plt+0x1c20>
   12e20:	b	12f24 <__errno_location@plt+0x1d3c>
   12e24:	ldr	r3, [r5, #16]
   12e28:	cmp	r3, #5
   12e2c:	beq	131dc <__errno_location@plt+0x1ff4>
   12e30:	ldr	r3, [r5, #36]	; 0x24
   12e34:	cmp	r3, #0
   12e38:	ble	12d8c <__errno_location@plt+0x1ba4>
   12e3c:	add	r8, r5, #20
   12e40:	mov	r7, #0
   12e44:	ldr	r0, [r8], #4
   12e48:	bl	11080 <rb_close@plt>
   12e4c:	ldr	r3, [r5, #36]	; 0x24
   12e50:	add	r7, r7, #1
   12e54:	cmp	r7, r3
   12e58:	blt	12e44 <__errno_location@plt+0x1c5c>
   12e5c:	b	12f24 <__errno_location@plt+0x1d3c>
   12e60:	ldr	r3, [r5, #16]
   12e64:	cmp	r3, #5
   12e68:	beq	130f4 <__errno_location@plt+0x1f0c>
   12e6c:	ldr	r3, [r5, #36]	; 0x24
   12e70:	cmp	r3, #0
   12e74:	ble	12d8c <__errno_location@plt+0x1ba4>
   12e78:	add	r8, r5, #20
   12e7c:	mov	r7, #0
   12e80:	ldr	r0, [r8], #4
   12e84:	bl	11080 <rb_close@plt>
   12e88:	ldr	r3, [r5, #36]	; 0x24
   12e8c:	add	r7, r7, #1
   12e90:	cmp	r7, r3
   12e94:	blt	12e80 <__errno_location@plt+0x1c98>
   12e98:	b	12f24 <__errno_location@plt+0x1d3c>
   12e9c:	ldr	r3, [pc, #1300]	; 133b8 <__errno_location@plt+0x21d0>
   12ea0:	add	r3, pc, r3
   12ea4:	ldrb	r3, [r3, #-532]	; 0xfffffdec
   12ea8:	cmp	r3, #0
   12eac:	beq	12f4c <__errno_location@plt+0x1d64>
   12eb0:	add	r8, r0, #2
   12eb4:	mov	r0, r8
   12eb8:	bl	1105c <strlen@plt>
   12ebc:	add	sl, r0, #1
   12ec0:	add	r9, r8, sl
   12ec4:	mov	r0, r9
   12ec8:	bl	1105c <strlen@plt>
   12ecc:	add	r0, r0, #1
   12ed0:	add	r7, r9, r0
   12ed4:	mov	r0, r7
   12ed8:	bl	1105c <strlen@plt>
   12edc:	ldrb	r1, [r8, sl]
   12ee0:	ldrb	r2, [r7]
   12ee4:	cmp	r1, #0
   12ee8:	movne	r1, r9
   12eec:	moveq	r1, r8
   12ef0:	cmp	r2, #0
   12ef4:	movne	r2, r7
   12ef8:	moveq	r2, #0
   12efc:	add	r0, r0, #1
   12f00:	add	r7, r7, r0
   12f04:	mov	r0, r8
   12f08:	ldrb	r3, [r7]
   12f0c:	cmp	r3, #0
   12f10:	movne	r3, r7
   12f14:	moveq	r3, #0
   12f18:	bl	111d0 <rb_setup_ssl_server@plt>
   12f1c:	cmp	r0, #0
   12f20:	beq	132e8 <__errno_location@plt+0x2100>
   12f24:	ldr	r0, [r5, #12]
   12f28:	b	12d8c <__errno_location@plt+0x1ba4>
   12f2c:	ldr	r2, [pc, #1160]	; 133bc <__errno_location@plt+0x21d4>
   12f30:	mov	r3, r4
   12f34:	ldr	r0, [r4, #16]
   12f38:	add	r2, pc, r2
   12f3c:	mov	r1, #1
   12f40:	add	sp, sp, #44	; 0x2c
   12f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f48:	b	10f54 <rb_setselect@plt>
   12f4c:	mov	r0, r4
   12f50:	mov	r1, r5
   12f54:	bl	12a78 <__errno_location@plt+0x1890>
   12f58:	ldr	r0, [r5, #12]
   12f5c:	b	12d8c <__errno_location@plt+0x1ba4>
   12f60:	ldr	r3, [r5, #16]
   12f64:	cmp	r3, #5
   12f68:	bls	12d58 <__errno_location@plt+0x1b70>
   12f6c:	ldr	r2, [r5, #24]
   12f70:	ldr	r1, [r5, #20]
   12f74:	mov	r0, r4
   12f78:	bl	118b8 <__errno_location@plt+0x6d0>
   12f7c:	mov	r7, r0
   12f80:	ldr	r0, [r0, #28]
   12f84:	bl	10ef4 <rb_get_type@plt>
   12f88:	cmp	r0, #64	; 0x40
   12f8c:	beq	1337c <__errno_location@plt+0x2194>
   12f90:	ldr	r0, [r7, #32]
   12f94:	bl	10ef4 <rb_get_type@plt>
   12f98:	cmp	r0, #64	; 0x40
   12f9c:	beq	1336c <__errno_location@plt+0x2184>
   12fa0:	ldr	r9, [r5, #12]
   12fa4:	ldr	r3, [pc, #1044]	; 133c0 <__errno_location@plt+0x21d8>
   12fa8:	mov	r2, #2000	; 0x7d0
   12fac:	ldr	r1, [r9, #1]
   12fb0:	mov	ip, #0
   12fb4:	str	r1, [r7, #24]
   12fb8:	umull	r0, r3, r3, r1
   12fbc:	ldr	r0, [sp, #20]
   12fc0:	str	r7, [r7]
   12fc4:	lsr	r3, r3, #7
   12fc8:	mul	r3, r2, r3
   12fcc:	sub	r3, r1, r3
   12fd0:	lsl	r2, r3, #1
   12fd4:	add	r1, r2, r3
   12fd8:	add	r1, r0, r1, lsl #2
   12fdc:	ldr	r0, [r1, #20]
   12fe0:	str	ip, [r7, #4]
   12fe4:	cmp	r0, ip
   12fe8:	str	r0, [r7, #8]
   12fec:	strne	r7, [r0, #4]
   12ff0:	beq	13334 <__errno_location@plt+0x214c>
   12ff4:	add	r3, r2, r3
   12ff8:	ldr	r2, [sp, #24]
   12ffc:	ldr	r0, [r5, #16]
   13000:	add	r3, r2, r3, lsl #2
   13004:	sub	r0, r0, #6
   13008:	ldr	r2, [r3, #28]
   1300c:	str	r7, [r3, #20]
   13010:	add	r2, r2, #1
   13014:	str	r2, [r3, #28]
   13018:	ldrb	r3, [r7, #72]	; 0x48
   1301c:	ldrb	r2, [r9, #5]
   13020:	str	r0, [sp, #28]
   13024:	orr	r3, r3, #2
   13028:	mov	r1, #112	; 0x70
   1302c:	strb	r3, [r7, #72]	; 0x48
   13030:	mov	r0, #1
   13034:	str	r2, [sp, #32]
   13038:	bl	10fc0 <calloc@plt>
   1303c:	subs	r8, r0, #0
   13040:	beq	12d30 <__errno_location@plt+0x1b48>
   13044:	ldr	ip, [sp, #8]
   13048:	ldr	lr, [sp, #12]
   1304c:	mov	sl, #0
   13050:	mov	r3, #1
   13054:	str	r8, [r7, #76]	; 0x4c
   13058:	mov	r2, #56	; 0x38
   1305c:	str	ip, [r8, #32]
   13060:	str	lr, [r8, #36]	; 0x24
   13064:	str	r3, [r8, #44]	; 0x2c
   13068:	ldr	r1, [sp, #16]
   1306c:	str	sl, [r8, #8]
   13070:	str	sl, [r8, #20]
   13074:	str	r3, [sp, #36]	; 0x24
   13078:	bl	11158 <inflateInit_@plt>
   1307c:	ldr	r1, [sp, #32]
   13080:	ldr	r0, [r7, #76]	; 0x4c
   13084:	ldr	r3, [sp, #36]	; 0x24
   13088:	ldr	ip, [sp, #8]
   1308c:	ldr	lr, [sp, #12]
   13090:	cmp	r1, #9
   13094:	str	r3, [r8, #100]	; 0x64
   13098:	movhi	r1, #255	; 0xff
   1309c:	str	sl, [r8, #64]	; 0x40
   130a0:	str	sl, [r8, #76]	; 0x4c
   130a4:	str	ip, [r8, #88]	; 0x58
   130a8:	str	lr, [r8, #92]	; 0x5c
   130ac:	add	r0, r0, #56	; 0x38
   130b0:	mov	r3, #56	; 0x38
   130b4:	ldr	r2, [sp, #16]
   130b8:	bl	10fb4 <deflateInit_@plt>
   130bc:	ldr	r0, [sp, #28]
   130c0:	cmp	r0, sl
   130c4:	beq	130d8 <__errno_location@plt+0x1ef0>
   130c8:	mov	r2, r0
   130cc:	add	r1, r9, #6
   130d0:	mov	r0, r7
   130d4:	bl	121dc <__errno_location@plt+0xff4>
   130d8:	mov	r1, r7
   130dc:	ldr	r0, [r7, #28]
   130e0:	bl	124c4 <__errno_location@plt+0x12dc>
   130e4:	mov	r1, r7
   130e8:	ldr	r0, [r7, #32]
   130ec:	bl	128bc <__errno_location@plt+0x16d4>
   130f0:	b	12f24 <__errno_location@plt+0x1d3c>
   130f4:	ldr	r3, [pc, #712]	; 133c4 <__errno_location@plt+0x21dc>
   130f8:	add	r3, pc, r3
   130fc:	ldrb	r3, [r3, #-532]	; 0xfffffdec
   13100:	cmp	r3, #0
   13104:	beq	12f4c <__errno_location@plt+0x1d64>
   13108:	ldr	r2, [r5, #24]
   1310c:	ldr	r1, [r5, #20]
   13110:	mov	r0, r4
   13114:	bl	118b8 <__errno_location@plt+0x6d0>
   13118:	ldr	r3, [r5, #12]
   1311c:	mov	r1, #2000	; 0x7d0
   13120:	ldr	r2, [pc, #672]	; 133c8 <__errno_location@plt+0x21e0>
   13124:	mov	ip, #0
   13128:	add	r2, pc, r2
   1312c:	mov	r7, r0
   13130:	ldr	r0, [r3, #1]
   13134:	ldr	r3, [pc, #644]	; 133c0 <__errno_location@plt+0x21d8>
   13138:	str	r0, [r7, #24]
   1313c:	stm	r7, {r7, ip}
   13140:	umull	lr, r3, r3, r0
   13144:	lsr	r3, r3, #7
   13148:	mul	r3, r1, r3
   1314c:	sub	r3, r0, r3
   13150:	lsl	r1, r3, #1
   13154:	add	r0, r1, r3
   13158:	add	r2, r2, r0, lsl #2
   1315c:	ldr	r0, [r2, #20]
   13160:	cmp	r0, ip
   13164:	str	r0, [r7, #8]
   13168:	strne	r7, [r0, #4]
   1316c:	beq	13304 <__errno_location@plt+0x211c>
   13170:	add	r1, r1, r3
   13174:	ldr	r3, [pc, #592]	; 133cc <__errno_location@plt+0x21e4>
   13178:	ldr	r0, [r7, #28]
   1317c:	add	r3, pc, r3
   13180:	add	r3, r3, r1, lsl #2
   13184:	ldr	r2, [r3, #28]
   13188:	str	r7, [r3, #20]
   1318c:	add	r2, r2, #1
   13190:	str	r2, [r3, #28]
   13194:	ldrb	r3, [r7, #72]	; 0x48
   13198:	orr	r3, r3, #1
   1319c:	strb	r3, [r7, #72]	; 0x48
   131a0:	bl	10ef4 <rb_get_type@plt>
   131a4:	cmp	r0, #64	; 0x40
   131a8:	beq	13324 <__errno_location@plt+0x213c>
   131ac:	ldr	r0, [r7, #32]
   131b0:	bl	10ef4 <rb_get_type@plt>
   131b4:	cmp	r0, #64	; 0x40
   131b8:	beq	13314 <__errno_location@plt+0x212c>
   131bc:	ldr	r1, [pc, #524]	; 133d0 <__errno_location@plt+0x21e8>
   131c0:	ldr	r0, [r5, #20]
   131c4:	mov	r2, r7
   131c8:	mov	r3, #10
   131cc:	add	r1, pc, r1
   131d0:	bl	11128 <rb_ssl_start_connected@plt>
   131d4:	ldr	r0, [r5, #12]
   131d8:	b	12d8c <__errno_location@plt+0x1ba4>
   131dc:	ldr	r3, [pc, #496]	; 133d4 <__errno_location@plt+0x21ec>
   131e0:	ldr	r2, [r0, #1]
   131e4:	add	r3, pc, r3
   131e8:	str	r2, [r3, #16]
   131ec:	b	12d8c <__errno_location@plt+0x1ba4>
   131f0:	ldr	r3, [r5, #16]
   131f4:	cmp	r3, #5
   131f8:	bne	12e00 <__errno_location@plt+0x1c18>
   131fc:	ldr	r3, [pc, #468]	; 133d8 <__errno_location@plt+0x21f0>
   13200:	add	r3, pc, r3
   13204:	ldrb	r3, [r3, #-532]	; 0xfffffdec
   13208:	cmp	r3, #0
   1320c:	beq	12f4c <__errno_location@plt+0x1d64>
   13210:	ldr	r2, [r5, #24]
   13214:	ldr	r1, [r5, #20]
   13218:	mov	r0, r4
   1321c:	bl	118b8 <__errno_location@plt+0x6d0>
   13220:	ldr	r2, [r5, #12]
   13224:	mov	r1, #0
   13228:	mov	r3, #2000	; 0x7d0
   1322c:	ldr	ip, [pc, #424]	; 133dc <__errno_location@plt+0x21f4>
   13230:	add	ip, pc, ip
   13234:	mov	r7, r0
   13238:	ldr	r0, [r2, #1]
   1323c:	ldr	r2, [pc, #380]	; 133c0 <__errno_location@plt+0x21d8>
   13240:	str	r1, [r7, #4]
   13244:	str	r0, [r7, #24]
   13248:	umull	lr, r2, r2, r0
   1324c:	str	r7, [r7]
   13250:	lsr	r1, r2, #7
   13254:	mul	r2, r3, r1
   13258:	sub	r1, r0, r2
   1325c:	lsl	r3, r1, #1
   13260:	add	r2, r3, r1
   13264:	add	r2, ip, r2, lsl #2
   13268:	ldr	r0, [r2, #20]
   1326c:	cmp	r0, #0
   13270:	str	r0, [r7, #8]
   13274:	strne	r7, [r0, #4]
   13278:	beq	13354 <__errno_location@plt+0x216c>
   1327c:	add	r2, r3, r1
   13280:	ldr	r3, [pc, #344]	; 133e0 <__errno_location@plt+0x21f8>
   13284:	ldr	r0, [r7, #28]
   13288:	add	r3, pc, r3
   1328c:	add	r3, r3, r2, lsl #2
   13290:	ldr	r2, [r3, #28]
   13294:	str	r7, [r3, #20]
   13298:	add	r2, r2, #1
   1329c:	str	r2, [r3, #28]
   132a0:	ldrb	r3, [r7, #72]	; 0x48
   132a4:	orr	r3, r3, #1
   132a8:	strb	r3, [r7, #72]	; 0x48
   132ac:	bl	10ef4 <rb_get_type@plt>
   132b0:	tst	r0, #64	; 0x40
   132b4:	bne	13344 <__errno_location@plt+0x215c>
   132b8:	ldr	r0, [r7, #32]
   132bc:	bl	10ef4 <rb_get_type@plt>
   132c0:	cmp	r0, #64	; 0x40
   132c4:	beq	1338c <__errno_location@plt+0x21a4>
   132c8:	ldr	r1, [pc, #276]	; 133e4 <__errno_location@plt+0x21fc>
   132cc:	ldr	r0, [r5, #20]
   132d0:	mov	r2, r7
   132d4:	mov	r3, #10
   132d8:	add	r1, pc, r1
   132dc:	bl	11170 <rb_ssl_start_accepted@plt>
   132e0:	ldr	r0, [r5, #12]
   132e4:	b	12d8c <__errno_location@plt+0x1ba4>
   132e8:	ldr	r1, [pc, #248]	; 133e8 <__errno_location@plt+0x2200>
   132ec:	mov	r0, r4
   132f0:	mov	r2, #1
   132f4:	add	r1, pc, r1
   132f8:	bl	11a68 <__errno_location@plt+0x880>
   132fc:	ldr	r0, [r5, #12]
   13300:	b	12d8c <__errno_location@plt+0x1ba4>
   13304:	ldr	r0, [r2, #24]
   13308:	cmp	r0, #0
   1330c:	streq	r7, [r2, #24]
   13310:	b	13170 <__errno_location@plt+0x1f88>
   13314:	mov	r1, #4
   13318:	ldr	r0, [r7, #32]
   1331c:	bl	11050 <rb_set_type@plt>
   13320:	b	131bc <__errno_location@plt+0x1fd4>
   13324:	mov	r1, #4
   13328:	ldr	r0, [r7, #28]
   1332c:	bl	11050 <rb_set_type@plt>
   13330:	b	131ac <__errno_location@plt+0x1fc4>
   13334:	ldr	r0, [r1, #24]
   13338:	cmp	r0, #0
   1333c:	streq	r7, [r1, #24]
   13340:	b	12ff4 <__errno_location@plt+0x1e0c>
   13344:	mov	r1, #4
   13348:	ldr	r0, [r7, #28]
   1334c:	bl	11050 <rb_set_type@plt>
   13350:	b	132b8 <__errno_location@plt+0x20d0>
   13354:	ldr	r2, [r2, #24]
   13358:	cmp	r2, #0
   1335c:	moveq	r2, #12
   13360:	mlaeq	r2, r2, r1, ip
   13364:	streq	r7, [r2, #24]
   13368:	b	1327c <__errno_location@plt+0x2094>
   1336c:	mov	r1, #4
   13370:	ldr	r0, [r7, #32]
   13374:	bl	11050 <rb_set_type@plt>
   13378:	b	12fa0 <__errno_location@plt+0x1db8>
   1337c:	mov	r1, #4
   13380:	ldr	r0, [r7, #28]
   13384:	bl	11050 <rb_set_type@plt>
   13388:	b	12f90 <__errno_location@plt+0x1da8>
   1338c:	mov	r1, #4
   13390:	ldr	r0, [r7, #32]
   13394:	bl	11050 <rb_set_type@plt>
   13398:	b	132c8 <__errno_location@plt+0x20e0>
   1339c:	mov	r0, #0
   133a0:	bl	111dc <exit@plt>
   133a4:			; <UNDEFINED> instruction: 0x000114b0
   133a8:	andeq	r1, r1, r4, lsr #9
   133ac:			; <UNDEFINED> instruction: 0xffffec08
   133b0:			; <UNDEFINED> instruction: 0xffffeb48
   133b4:	andeq	r0, r0, r8, lsl #19
   133b8:	andeq	r7, r1, ip, ror #4
   133bc:			; <UNDEFINED> instruction: 0xfffffc20
   133c0:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   133c4:	andeq	r7, r1, r4, lsl r0
   133c8:	strdeq	r0, [r1], -ip
   133cc:	andeq	r0, r1, r8, lsr #31
   133d0:			; <UNDEFINED> instruction: 0xfffff7c8
   133d4:	andeq	r0, r1, r0, asr #30
   133d8:	andeq	r6, r1, ip, lsl #30
   133dc:	strdeq	r0, [r1], -r4
   133e0:	muleq	r1, ip, lr
   133e4:			; <UNDEFINED> instruction: 0xfffff640
   133e8:	andeq	r0, r0, r4, lsr r3
   133ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   133f0:	mov	r7, r0
   133f4:	ldr	r6, [pc, #72]	; 13444 <__errno_location@plt+0x225c>
   133f8:	ldr	r5, [pc, #72]	; 13448 <__errno_location@plt+0x2260>
   133fc:	add	r6, pc, r6
   13400:	add	r5, pc, r5
   13404:	sub	r6, r6, r5
   13408:	mov	r8, r1
   1340c:	mov	r9, r2
   13410:	bl	10eb0 <open@plt-0x20>
   13414:	asrs	r6, r6, #2
   13418:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1341c:	mov	r4, #0
   13420:	add	r4, r4, #1
   13424:	ldr	r3, [r5], #4
   13428:	mov	r2, r9
   1342c:	mov	r1, r8
   13430:	mov	r0, r7
   13434:	blx	r3
   13438:	cmp	r6, r4
   1343c:	bne	13420 <__errno_location@plt+0x2238>
   13440:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13444:	andeq	r0, r1, ip, ror #21
   13448:	andeq	r0, r1, r4, ror #21
   1344c:	bx	lr

Disassembly of section .fini:

00013450 <.fini>:
   13450:	push	{r3, lr}
   13454:	pop	{r3, pc}
