
../repos/charybdis/wsockd/.libs/wsockd:     file format elf32-littlearm


Disassembly of section .init:

00010d88 <.init>:
   10d88:	push	{r3, lr}
   10d8c:	bl	1105c <rb_base64_encode@plt+0x50>
   10d90:	pop	{r3, pc}

Disassembly of section .plt:

00010d94 <open@plt-0x14>:
   10d94:	push	{lr}		; (str lr, [sp, #-4]!)
   10d98:	ldr	lr, [pc, #4]	; 10da4 <open@plt-0x4>
   10d9c:	add	lr, pc, lr
   10da0:	ldr	pc, [lr, #8]!
   10da4:	andeq	r4, r1, ip, asr r2

00010da8 <open@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #604]!	; 0x25c

00010db4 <sigemptyset@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #596]!	; 0x254

00010dc0 <strerror@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #588]!	; 0x24c

00010dcc <rb_get_type@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #580]!	; 0x244

00010dd8 <abort@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #20, 20	; 0x14000
   10de0:	ldr	pc, [ip, #572]!	; 0x23c

00010de4 <rb_event_addish@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #20, 20	; 0x14000
   10dec:	ldr	pc, [ip, #564]!	; 0x234

00010df0 <rb_ignore_errno@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #20, 20	; 0x14000
   10df8:	ldr	pc, [ip, #556]!	; 0x22c

00010dfc <__libc_start_main@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #20, 20	; 0x14000
   10e04:	ldr	pc, [ip, #548]!	; 0x224

00010e08 <rb_setselect@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #20, 20	; 0x14000
   10e10:	ldr	pc, [ip, #540]!	; 0x21c

00010e14 <__gmon_start__@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #20, 20	; 0x14000
   10e1c:	ldr	pc, [ip, #532]!	; 0x214

00010e20 <rb_send_fd_buf@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #20, 20	; 0x14000
   10e28:	ldr	pc, [ip, #524]!	; 0x20c

00010e2c <vsnprintf@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #20, 20	; 0x14000
   10e34:	ldr	pc, [ip, #516]!	; 0x204

00010e38 <getenv@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #20, 20	; 0x14000
   10e40:	ldr	pc, [ip, #508]!	; 0x1fc

00010e44 <calloc@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #20, 20	; 0x14000
   10e4c:	ldr	pc, [ip, #500]!	; 0x1f4

00010e50 <rb_set_nb@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #20, 20	; 0x14000
   10e58:	ldr	pc, [ip, #492]!	; 0x1ec

00010e5c <memset@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #20, 20	; 0x14000
   10e64:	ldr	pc, [ip, #484]!	; 0x1e4

00010e68 <rb_linebuf_parse@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #20, 20	; 0x14000
   10e70:	ldr	pc, [ip, #476]!	; 0x1dc

00010e74 <rb_strlcpy@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #20, 20	; 0x14000
   10e7c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e80 <rb_init_rawbuffers@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #20, 20	; 0x14000
   10e88:	ldr	pc, [ip, #460]!	; 0x1cc

00010e8c <free@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #20, 20	; 0x14000
   10e94:	ldr	pc, [ip, #452]!	; 0x1c4

00010e98 <rb_lib_loop@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #20, 20	; 0x14000
   10ea0:	ldr	pc, [ip, #444]!	; 0x1bc

00010ea4 <rb_read@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #20, 20	; 0x14000
   10eac:	ldr	pc, [ip, #436]!	; 0x1b4

00010eb0 <rb_set_type@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #428]!	; 0x1ac

00010ebc <rb_linebuf_get@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec8 <rb_linebuf_flush@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #412]!	; 0x19c

00010ed4 <strlen@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #20, 20	; 0x14000
   10edc:	ldr	pc, [ip, #404]!	; 0x194

00010ee0 <memcpy@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #20, 20	; 0x14000
   10ee8:	ldr	pc, [ip, #396]!	; 0x18c

00010eec <rb_linebuf_donebuf@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #20, 20	; 0x14000
   10ef4:	ldr	pc, [ip, #388]!	; 0x184

00010ef8 <rb_strcasestr@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #20, 20	; 0x14000
   10f00:	ldr	pc, [ip, #380]!	; 0x17c

00010f04 <rb_close@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #20, 20	; 0x14000
   10f0c:	ldr	pc, [ip, #372]!	; 0x174

00010f10 <strtol@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #20, 20	; 0x14000
   10f18:	ldr	pc, [ip, #364]!	; 0x16c

00010f1c <sigaddset@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #20, 20	; 0x14000
   10f24:	ldr	pc, [ip, #356]!	; 0x164

00010f28 <rb_rawbuf_length@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #20, 20	; 0x14000
   10f30:	ldr	pc, [ip, #348]!	; 0x15c

00010f34 <rb_free_rawbuffer@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #20, 20	; 0x14000
   10f3c:	ldr	pc, [ip, #340]!	; 0x154

00010f40 <close@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #20, 20	; 0x14000
   10f48:	ldr	pc, [ip, #332]!	; 0x14c

00010f4c <fwrite@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #20, 20	; 0x14000
   10f54:	ldr	pc, [ip, #324]!	; 0x144

00010f58 <rb_outofmemory@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #20, 20	; 0x14000
   10f60:	ldr	pc, [ip, #316]!	; 0x13c

00010f64 <rb_rawbuf_get@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #20, 20	; 0x14000
   10f6c:	ldr	pc, [ip, #308]!	; 0x134

00010f70 <sigaction@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #20, 20	; 0x14000
   10f78:	ldr	pc, [ip, #300]!	; 0x12c

00010f7c <rb_lib_init@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #20, 20	; 0x14000
   10f84:	ldr	pc, [ip, #292]!	; 0x124

00010f88 <rb_new_rawbuffer@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #20, 20	; 0x14000
   10f90:	ldr	pc, [ip, #284]!	; 0x11c

00010f94 <rb_open@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #20, 20	; 0x14000
   10f9c:	ldr	pc, [ip, #276]!	; 0x114

00010fa0 <rb_recv_fd_buf@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #20, 20	; 0x14000
   10fa8:	ldr	pc, [ip, #268]!	; 0x10c

00010fac <dup2@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #20, 20	; 0x14000
   10fb4:	ldr	pc, [ip, #260]!	; 0x104

00010fb8 <rb_linebuf_newbuf@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #20, 20	; 0x14000
   10fc0:	ldr	pc, [ip, #252]!	; 0xfc

00010fc4 <rb_linebuf_init@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #20, 20	; 0x14000
   10fcc:	ldr	pc, [ip, #244]!	; 0xf4

00010fd0 <getrlimit@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #20, 20	; 0x14000
   10fd8:	ldr	pc, [ip, #236]!	; 0xec

00010fdc <rb_rawbuf_append@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #20, 20	; 0x14000
   10fe4:	ldr	pc, [ip, #228]!	; 0xe4

00010fe8 <rb_rawbuf_flush@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #20, 20	; 0x14000
   10ff0:	ldr	pc, [ip, #220]!	; 0xdc

00010ff4 <exit@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #20, 20	; 0x14000
   10ffc:	ldr	pc, [ip, #212]!	; 0xd4

00011000 <__errno_location@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #20, 20	; 0x14000
   11008:	ldr	pc, [ip, #204]!	; 0xcc

0001100c <rb_base64_encode@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #20, 20	; 0x14000
   11014:	ldr	pc, [ip, #196]!	; 0xc4

Disassembly of section .text:

00011020 <.text>:
   11020:	mov	fp, #0
   11024:	mov	lr, #0
   11028:	pop	{r1}		; (ldr r1, [sp], #4)
   1102c:	mov	r2, sp
   11030:	push	{r2}		; (str r2, [sp, #-4]!)
   11034:	push	{r0}		; (str r0, [sp, #-4]!)
   11038:	ldr	ip, [pc, #16]	; 11050 <rb_base64_encode@plt+0x44>
   1103c:	push	{ip}		; (str ip, [sp, #-4]!)
   11040:	ldr	r0, [pc, #12]	; 11054 <rb_base64_encode@plt+0x48>
   11044:	ldr	r3, [pc, #12]	; 11058 <rb_base64_encode@plt+0x4c>
   11048:	bl	10dfc <__libc_start_main@plt>
   1104c:	bl	10dd8 <abort@plt>
   11050:	andeq	r4, r1, r0, lsr r1
   11054:	andeq	r1, r1, r0, lsl r1
   11058:	ldrdeq	r4, [r1], -r0
   1105c:	ldr	r3, [pc, #20]	; 11078 <rb_base64_encode@plt+0x6c>
   11060:	ldr	r2, [pc, #20]	; 1107c <rb_base64_encode@plt+0x70>
   11064:	add	r3, pc, r3
   11068:	ldr	r2, [r3, r2]
   1106c:	cmp	r2, #0
   11070:	bxeq	lr
   11074:	b	10e14 <__gmon_start__@plt>
   11078:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1107c:	ldrdeq	r0, [r0], -ip
   11080:	ldr	r0, [pc, #24]	; 110a0 <rb_base64_encode@plt+0x94>
   11084:	ldr	r3, [pc, #24]	; 110a4 <rb_base64_encode@plt+0x98>
   11088:	cmp	r3, r0
   1108c:	bxeq	lr
   11090:	ldr	r3, [pc, #16]	; 110a8 <rb_base64_encode@plt+0x9c>
   11094:	cmp	r3, #0
   11098:	bxeq	lr
   1109c:	bx	r3
   110a0:	andeq	r5, r2, r8, ror #1
   110a4:	andeq	r5, r2, r8, ror #1
   110a8:	andeq	r0, r0, r0
   110ac:	ldr	r0, [pc, #36]	; 110d8 <rb_base64_encode@plt+0xcc>
   110b0:	ldr	r1, [pc, #36]	; 110dc <rb_base64_encode@plt+0xd0>
   110b4:	sub	r1, r1, r0
   110b8:	asr	r1, r1, #2
   110bc:	add	r1, r1, r1, lsr #31
   110c0:	asrs	r1, r1, #1
   110c4:	bxeq	lr
   110c8:	ldr	r3, [pc, #16]	; 110e0 <rb_base64_encode@plt+0xd4>
   110cc:	cmp	r3, #0
   110d0:	bxeq	lr
   110d4:	bx	r3
   110d8:	andeq	r5, r2, r8, ror #1
   110dc:	andeq	r5, r2, r8, ror #1
   110e0:	andeq	r0, r0, r0
   110e4:	push	{r4, lr}
   110e8:	ldr	r4, [pc, #24]	; 11108 <rb_base64_encode@plt+0xfc>
   110ec:	ldrb	r3, [r4]
   110f0:	cmp	r3, #0
   110f4:	popne	{r4, pc}
   110f8:	bl	11080 <rb_base64_encode@plt+0x74>
   110fc:	mov	r3, #1
   11100:	strb	r3, [r4]
   11104:	pop	{r4, pc}
   11108:	andeq	r5, r2, ip, ror #1
   1110c:	b	110ac <rb_base64_encode@plt+0xa0>
   11110:	push	{fp, lr}
   11114:	mov	fp, sp
   11118:	sub	sp, sp, #24
   1111c:	sub	r1, fp, #8
   11120:	mov	r0, #7
   11124:	bl	10fd0 <getrlimit@plt>
   11128:	cmp	r0, #0
   1112c:	movw	r0, #16704	; 0x4140
   11130:	ldr	r7, [fp, #-8]
   11134:	movt	r0, #1
   11138:	movwne	r7, #65535	; 0xffff
   1113c:	bl	10e38 <getenv@plt>
   11140:	mov	r5, r0
   11144:	movw	r0, #16711	; 0x4147
   11148:	movt	r0, #1
   1114c:	bl	10e38 <getenv@plt>
   11150:	mov	r4, r0
   11154:	movw	r0, #16720	; 0x4150
   11158:	movt	r0, #1
   1115c:	bl	10e38 <getenv@plt>
   11160:	cmp	r5, #0
   11164:	beq	11178 <rb_base64_encode@plt+0x16c>
   11168:	cmp	r4, #0
   1116c:	movne	r8, r0
   11170:	cmpne	r0, #0
   11174:	bne	111b8 <rb_base64_encode@plt+0x1ac>
   11178:	movw	r4, #20712	; 0x50e8
   1117c:	movw	r0, #16729	; 0x4159
   11180:	mov	r1, #52	; 0x34
   11184:	mov	r2, #1
   11188:	movt	r4, #2
   1118c:	movt	r0, #1
   11190:	ldr	r3, [r4]
   11194:	bl	10f4c <fwrite@plt>
   11198:	ldr	r3, [r4]
   1119c:	movw	r0, #16782	; 0x418e
   111a0:	mov	r1, #49	; 0x31
   111a4:	mov	r2, #1
   111a8:	movt	r0, #1
   111ac:	bl	10f4c <fwrite@plt>
   111b0:	mov	r0, #1
   111b4:	bl	10ff4 <exit@plt>
   111b8:	mov	r0, r5
   111bc:	mov	r1, #0
   111c0:	mov	r2, #10
   111c4:	mov	r6, #0
   111c8:	bl	10f10 <strtol@plt>
   111cc:	mov	r5, r0
   111d0:	mov	r0, r4
   111d4:	mov	r1, #0
   111d8:	mov	r2, #10
   111dc:	bl	10f10 <strtol@plt>
   111e0:	mov	r4, r0
   111e4:	mov	r0, r8
   111e8:	mov	r1, #0
   111ec:	mov	r2, #10
   111f0:	bl	10f10 <strtol@plt>
   111f4:	movw	r8, #44732	; 0xaebc
   111f8:	cmp	r7, #1
   111fc:	movt	r8, #2
   11200:	str	r0, [r8]
   11204:	bge	11218 <rb_base64_encode@plt+0x20c>
   11208:	b	11238 <rb_base64_encode@plt+0x22c>
   1120c:	add	r6, r6, #1
   11210:	cmp	r7, r6
   11214:	beq	11238 <rb_base64_encode@plt+0x22c>
   11218:	cmp	r5, r6
   1121c:	cmpne	r4, r6
   11220:	beq	1120c <rb_base64_encode@plt+0x200>
   11224:	cmp	r6, #3
   11228:	bcc	1120c <rb_base64_encode@plt+0x200>
   1122c:	mov	r0, r6
   11230:	bl	10f40 <close@plt>
   11234:	b	1120c <rb_base64_encode@plt+0x200>
   11238:	movw	r0, #16832	; 0x41c0
   1123c:	mov	r1, #2
   11240:	movt	r0, #1
   11244:	bl	10da8 <open@plt>
   11248:	cmp	r0, #0
   1124c:	bmi	11288 <rb_base64_encode@plt+0x27c>
   11250:	cmp	r5, #0
   11254:	mov	r6, r0
   11258:	cmpne	r4, #0
   1125c:	bne	1135c <rb_base64_encode@plt+0x350>
   11260:	cmp	r5, #1
   11264:	cmpne	r4, #1
   11268:	bne	11374 <rb_base64_encode@plt+0x368>
   1126c:	cmp	r5, #2
   11270:	cmpne	r4, #2
   11274:	bne	1138c <rb_base64_encode@plt+0x380>
   11278:	cmp	r6, #3
   1127c:	blt	11288 <rb_base64_encode@plt+0x27c>
   11280:	mov	r0, r6
   11284:	bl	10f40 <close@plt>
   11288:	bl	113a4 <rb_base64_encode@plt+0x398>
   1128c:	mov	r0, #4096	; 0x1000
   11290:	mov	r1, #1024	; 0x400
   11294:	mov	r2, #0
   11298:	mov	r3, #0
   1129c:	str	r7, [sp]
   112a0:	str	r1, [sp, #4]
   112a4:	str	r0, [sp, #8]
   112a8:	mov	r0, #0
   112ac:	mov	r1, #0
   112b0:	bl	10f7c <rb_lib_init@plt>
   112b4:	mov	r0, #4096	; 0x1000
   112b8:	bl	10fc4 <rb_linebuf_init@plt>
   112bc:	mov	r0, #4096	; 0x1000
   112c0:	bl	10e80 <rb_init_rawbuffers@plt>
   112c4:	mov	r0, #48	; 0x30
   112c8:	bl	11454 <rb_base64_encode@plt+0x448>
   112cc:	movw	r2, #16842	; 0x41ca
   112d0:	str	r0, [r8, #4]
   112d4:	mov	r0, r5
   112d8:	mov	r1, #4
   112dc:	movt	r2, #1
   112e0:	bl	10f94 <rb_open@plt>
   112e4:	ldr	r1, [r8, #4]
   112e8:	movw	r2, #16862	; 0x41de
   112ec:	movt	r2, #1
   112f0:	str	r0, [r1, #16]
   112f4:	mov	r0, r4
   112f8:	mov	r1, #8
   112fc:	bl	10f94 <rb_open@plt>
   11300:	ldr	r1, [r8, #4]
   11304:	str	r0, [r1, #20]
   11308:	ldr	r0, [r1, #16]
   1130c:	bl	10e50 <rb_set_nb@plt>
   11310:	ldr	r0, [r8, #4]
   11314:	ldr	r0, [r0, #20]
   11318:	bl	10e50 <rb_set_nb@plt>
   1131c:	movw	r0, #16872	; 0x41e8
   11320:	movw	r1, #5236	; 0x1474
   11324:	mov	r2, #0
   11328:	mov	r3, #10
   1132c:	movt	r0, #1
   11330:	movt	r1, #1
   11334:	bl	10de4 <rb_event_addish@plt>
   11338:	ldr	r0, [r8, #4]
   1133c:	mov	r1, #0
   11340:	ldr	r0, [r0, #20]
   11344:	bl	114e0 <rb_base64_encode@plt+0x4d4>
   11348:	ldr	r1, [r8, #4]
   1134c:	ldr	r0, [r1, #16]
   11350:	bl	1154c <rb_base64_encode@plt+0x540>
   11354:	mov	r0, #0
   11358:	bl	10e98 <rb_lib_loop@plt>
   1135c:	mov	r0, r6
   11360:	mov	r1, #0
   11364:	bl	10fac <dup2@plt>
   11368:	cmp	r5, #1
   1136c:	cmpne	r4, #1
   11370:	beq	1126c <rb_base64_encode@plt+0x260>
   11374:	mov	r0, r6
   11378:	mov	r1, #1
   1137c:	bl	10fac <dup2@plt>
   11380:	cmp	r5, #2
   11384:	cmpne	r4, #2
   11388:	beq	11278 <rb_base64_encode@plt+0x26c>
   1138c:	mov	r0, r6
   11390:	mov	r1, #2
   11394:	bl	10fac <dup2@plt>
   11398:	cmp	r6, #3
   1139c:	bge	11280 <rb_base64_encode@plt+0x274>
   113a0:	b	11288 <rb_base64_encode@plt+0x27c>
   113a4:	push	{r4, r5, fp, lr}
   113a8:	add	fp, sp, #8
   113ac:	sub	sp, sp, #144	; 0x90
   113b0:	mov	r0, #1
   113b4:	add	r4, sp, #4
   113b8:	str	r0, [sp, #4]
   113bc:	mov	r0, #0
   113c0:	add	r5, r4, #4
   113c4:	str	r0, [sp, #136]	; 0x88
   113c8:	mov	r0, r5
   113cc:	bl	10db4 <sigemptyset@plt>
   113d0:	mov	r0, r5
   113d4:	mov	r1, #13
   113d8:	bl	10f1c <sigaddset@plt>
   113dc:	mov	r0, r5
   113e0:	mov	r1, #14
   113e4:	bl	10f1c <sigaddset@plt>
   113e8:	mov	r0, r5
   113ec:	mov	r1, #5
   113f0:	bl	10f1c <sigaddset@plt>
   113f4:	mov	r0, r5
   113f8:	mov	r1, #28
   113fc:	bl	10f1c <sigaddset@plt>
   11400:	mov	r0, #28
   11404:	mov	r1, r4
   11408:	mov	r2, #0
   1140c:	bl	10f70 <sigaction@plt>
   11410:	mov	r0, #13
   11414:	mov	r1, r4
   11418:	mov	r2, #0
   1141c:	bl	10f70 <sigaction@plt>
   11420:	mov	r0, #5
   11424:	mov	r1, r4
   11428:	mov	r2, #0
   1142c:	bl	10f70 <sigaction@plt>
   11430:	movw	r0, #6400	; 0x1900
   11434:	mov	r1, r4
   11438:	mov	r2, #0
   1143c:	movt	r0, #1
   11440:	str	r0, [sp, #4]
   11444:	mov	r0, #14
   11448:	bl	10f70 <sigaction@plt>
   1144c:	sub	sp, fp, #8
   11450:	pop	{r4, r5, fp, pc}
   11454:	push	{fp, lr}
   11458:	mov	fp, sp
   1145c:	mov	r1, r0
   11460:	mov	r0, #1
   11464:	bl	10e44 <calloc@plt>
   11468:	cmp	r0, #0
   1146c:	popne	{fp, pc}
   11470:	bl	10f58 <rb_outofmemory@plt>
   11474:	push	{r4, r5, r6, sl, fp, lr}
   11478:	add	fp, sp, #16
   1147c:	movw	r5, #20720	; 0x50f0
   11480:	movt	r5, #2
   11484:	ldr	r6, [r5]
   11488:	cmp	r6, #0
   1148c:	beq	114d0 <rb_base64_encode@plt+0x4c4>
   11490:	ldr	r4, [r6]
   11494:	ldr	r6, [r6, #8]
   11498:	add	r0, r4, #52	; 0x34
   1149c:	bl	10eec <rb_linebuf_donebuf@plt>
   114a0:	add	r0, r4, #24
   114a4:	bl	10eec <rb_linebuf_donebuf@plt>
   114a8:	ldr	r0, [r4, #20]
   114ac:	bl	10f34 <rb_free_rawbuffer@plt>
   114b0:	ldr	r0, [r4, #16]
   114b4:	bl	10f34 <rb_free_rawbuffer@plt>
   114b8:	cmp	r4, #0
   114bc:	beq	11488 <rb_base64_encode@plt+0x47c>
   114c0:	mov	r0, r4
   114c4:	bl	10e8c <free@plt>
   114c8:	cmp	r6, #0
   114cc:	bne	11490 <rb_base64_encode@plt+0x484>
   114d0:	mov	r0, #0
   114d4:	str	r0, [r5]
   114d8:	str	r0, [r5, #4]
   114dc:	pop	{r4, r5, r6, sl, fp, pc}
   114e0:	push	{r4, r5, r6, r7, fp, lr}
   114e4:	add	fp, sp, #16
   114e8:	sub	sp, sp, #16384	; 0x4000
   114ec:	mov	r4, r0
   114f0:	mov	r5, sp
   114f4:	mov	r0, r4
   114f8:	mov	r1, r5
   114fc:	mov	r2, #16384	; 0x4000
   11500:	bl	10ea4 <rb_read@plt>
   11504:	cmp	r0, #0
   11508:	bgt	114f4 <rb_base64_encode@plt+0x4e8>
   1150c:	beq	11544 <rb_base64_encode@plt+0x538>
   11510:	bl	11000 <__errno_location@plt>
   11514:	ldr	r0, [r0]
   11518:	bl	10df0 <rb_ignore_errno@plt>
   1151c:	cmp	r0, #0
   11520:	beq	11544 <rb_base64_encode@plt+0x538>
   11524:	movw	r2, #5344	; 0x14e0
   11528:	mov	r0, r4
   1152c:	mov	r1, #1
   11530:	mov	r3, #0
   11534:	movt	r2, #1
   11538:	bl	10e08 <rb_setselect@plt>
   1153c:	sub	sp, fp, #16
   11540:	pop	{r4, r5, r6, r7, fp, pc}
   11544:	mov	r0, #0
   11548:	bl	10ff4 <exit@plt>
   1154c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11550:	add	fp, sp, #28
   11554:	sub	sp, sp, #12
   11558:	mov	r4, r1
   1155c:	mov	r0, #1
   11560:	mov	r1, #40	; 0x28
   11564:	bl	10e44 <calloc@plt>
   11568:	cmp	r0, #0
   1156c:	beq	118f4 <rb_base64_encode@plt+0x8e8>
   11570:	mov	r5, r0
   11574:	add	r0, r4, #24
   11578:	mov	r8, #16384	; 0x4000
   1157c:	mov	r7, #4
   11580:	mov	r9, #0
   11584:	str	r0, [sp, #8]
   11588:	b	115ac <rb_base64_encode@plt+0x5a0>
   1158c:	mov	r0, #0
   11590:	str	r0, [r5, #36]	; 0x24
   11594:	mov	r0, #1
   11598:	mov	r1, #40	; 0x28
   1159c:	bl	10e44 <calloc@plt>
   115a0:	mov	r5, r0
   115a4:	cmp	r0, #0
   115a8:	beq	118f4 <rb_base64_encode@plt+0x8e8>
   115ac:	mov	r0, #1
   115b0:	mov	r1, #16384	; 0x4000
   115b4:	bl	10e44 <calloc@plt>
   115b8:	cmp	r0, #0
   115bc:	beq	118f4 <rb_base64_encode@plt+0x8e8>
   115c0:	str	r0, [r5, #12]
   115c4:	str	r8, [r5, #16]
   115c8:	mov	r1, r0
   115cc:	add	r3, r5, #20
   115d0:	mov	r2, #16384	; 0x4000
   115d4:	ldr	r0, [r4, #16]
   115d8:	str	r7, [sp]
   115dc:	bl	10fa0 <rb_recv_fd_buf@plt>
   115e0:	mov	r6, r0
   115e4:	cmp	r0, #0
   115e8:	ble	11680 <rb_base64_encode@plt+0x674>
   115ec:	str	r6, [r5, #16]
   115f0:	ldr	r0, [r4, #28]
   115f4:	str	r5, [r5]
   115f8:	cmp	r0, #0
   115fc:	stmib	r5, {r0, r9}
   11600:	beq	11610 <rb_base64_encode@plt+0x604>
   11604:	add	r0, r0, #8
   11608:	str	r5, [r0]
   1160c:	b	11620 <rb_base64_encode@plt+0x614>
   11610:	ldr	r0, [sp, #8]
   11614:	ldr	r0, [r0]
   11618:	cmp	r0, #0
   1161c:	beq	11678 <rb_base64_encode@plt+0x66c>
   11620:	str	r5, [r4, #28]
   11624:	ldr	r0, [r4, #32]
   11628:	add	r0, r0, #1
   1162c:	str	r0, [r4, #32]
   11630:	ldr	r0, [r5, #20]
   11634:	cmp	r0, #0
   11638:	beq	1158c <rb_base64_encode@plt+0x580>
   1163c:	ldr	r0, [r5, #24]
   11640:	cmp	r0, #0
   11644:	beq	11668 <rb_base64_encode@plt+0x65c>
   11648:	ldr	r0, [r5, #28]
   1164c:	cmp	r0, #0
   11650:	beq	11670 <rb_base64_encode@plt+0x664>
   11654:	ldr	r0, [r5, #32]
   11658:	cmp	r0, #0
   1165c:	mov	r0, #4
   11660:	movweq	r0, #3
   11664:	b	11590 <rb_base64_encode@plt+0x584>
   11668:	mov	r0, #1
   1166c:	b	11590 <rb_base64_encode@plt+0x584>
   11670:	mov	r0, #2
   11674:	b	11590 <rb_base64_encode@plt+0x584>
   11678:	ldr	r0, [sp, #8]
   1167c:	b	11608 <rb_base64_encode@plt+0x5fc>
   11680:	ldr	r0, [r5, #12]
   11684:	cmp	r0, #0
   11688:	beq	11690 <rb_base64_encode@plt+0x684>
   1168c:	bl	10e8c <free@plt>
   11690:	mov	r0, r5
   11694:	bl	10e8c <free@plt>
   11698:	cmp	r6, #0
   1169c:	beq	118f8 <rb_base64_encode@plt+0x8ec>
   116a0:	bl	11000 <__errno_location@plt>
   116a4:	ldr	r0, [r0]
   116a8:	bl	10df0 <rb_ignore_errno@plt>
   116ac:	cmp	r0, #0
   116b0:	beq	118f8 <rb_base64_encode@plt+0x8ec>
   116b4:	ldr	r0, [sp, #8]
   116b8:	ldr	sl, [r0]
   116bc:	cmp	sl, #0
   116c0:	beq	118d4 <rb_base64_encode@plt+0x8c8>
   116c4:	mov	r8, #0
   116c8:	ldr	r5, [sl]
   116cc:	ldr	r9, [sl, #8]
   116d0:	ldr	r0, [r5, #12]
   116d4:	ldrb	r0, [r0]
   116d8:	cmp	r0, #65	; 0x41
   116dc:	bne	117dc <rb_base64_encode@plt+0x7d0>
   116e0:	ldr	r0, [r5, #36]	; 0x24
   116e4:	cmp	r0, #2
   116e8:	bne	117b4 <rb_base64_encode@plt+0x7a8>
   116ec:	ldr	r0, [r5, #16]
   116f0:	cmp	r0, #5
   116f4:	bne	117bc <rb_base64_encode@plt+0x7b0>
   116f8:	ldr	r7, [r5, #20]
   116fc:	ldr	r8, [r5, #24]
   11700:	mov	r0, #1
   11704:	mov	r1, #168	; 0xa8
   11708:	bl	10e44 <calloc@plt>
   1170c:	cmp	r0, #0
   11710:	beq	118f4 <rb_base64_encode@plt+0x8e8>
   11714:	mov	r6, r0
   11718:	str	r4, [r0, #12]
   1171c:	mvn	r0, #0
   11720:	add	r1, r6, #80	; 0x50
   11724:	stm	r1, {r0, r7, r8}
   11728:	mov	r0, r7
   1172c:	bl	10e50 <rb_set_nb@plt>
   11730:	mov	r0, r8
   11734:	bl	10e50 <rb_set_nb@plt>
   11738:	add	r0, r6, #52	; 0x34
   1173c:	bl	10fb8 <rb_linebuf_newbuf@plt>
   11740:	add	r0, r6, #24
   11744:	bl	10fb8 <rb_linebuf_newbuf@plt>
   11748:	bl	10f88 <rb_new_rawbuffer@plt>
   1174c:	str	r0, [r6, #20]
   11750:	bl	10f88 <rb_new_rawbuffer@plt>
   11754:	str	r0, [r6, #16]
   11758:	movw	r1, #19923	; 0x4dd3
   1175c:	movw	r7, #20732	; 0x50fc
   11760:	mov	r8, #0
   11764:	ldr	r0, [r5, #12]
   11768:	movt	r1, #4194	; 0x1062
   1176c:	movt	r7, #2
   11770:	ldr	r0, [r0, #1]
   11774:	umull	r1, r2, r0, r1
   11778:	str	r0, [r6, #80]	; 0x50
   1177c:	str	r6, [r6]
   11780:	str	r8, [r6, #4]
   11784:	lsr	r1, r2, #7
   11788:	mov	r2, #2000	; 0x7d0
   1178c:	mls	r0, r1, r2, r0
   11790:	mov	r1, r7
   11794:	add	r0, r0, r0, lsl #1
   11798:	ldr	r2, [r1, r0, lsl #2]!
   1179c:	cmp	r2, #0
   117a0:	str	r2, [r6, #8]
   117a4:	beq	117f8 <rb_base64_encode@plt+0x7ec>
   117a8:	add	r2, r2, #4
   117ac:	str	r6, [r2]
   117b0:	b	11808 <rb_base64_encode@plt+0x7fc>
   117b4:	cmp	r0, #1
   117b8:	blt	117dc <rb_base64_encode@plt+0x7d0>
   117bc:	add	r6, r5, #20
   117c0:	mov	r7, #0
   117c4:	ldr	r0, [r6, r7, lsl #2]
   117c8:	bl	10f04 <rb_close@plt>
   117cc:	ldr	r0, [r5, #36]	; 0x24
   117d0:	add	r7, r7, #1
   117d4:	cmp	r7, r0
   117d8:	blt	117c4 <rb_base64_encode@plt+0x7b8>
   117dc:	ldr	r0, [sl, #8]
   117e0:	ldr	r1, [sl, #4]
   117e4:	cmp	r0, #0
   117e8:	beq	11888 <rb_base64_encode@plt+0x87c>
   117ec:	str	r1, [r0, #4]
   117f0:	ldr	r1, [sl, #4]
   117f4:	b	1188c <rb_base64_encode@plt+0x880>
   117f8:	add	r2, r7, r0, lsl #2
   117fc:	ldr	r3, [r2, #4]!
   11800:	cmp	r3, #0
   11804:	streq	r6, [r2]
   11808:	add	r0, r7, r0, lsl #2
   1180c:	str	r6, [r1]
   11810:	ldr	r1, [r0, #8]
   11814:	add	r1, r1, #1
   11818:	str	r1, [r0, #8]
   1181c:	ldrb	r0, [r6, #128]	; 0x80
   11820:	orr	r0, r0, #4
   11824:	strb	r0, [r6, #128]	; 0x80
   11828:	ldr	r0, [r6, #84]	; 0x54
   1182c:	bl	10dcc <rb_get_type@plt>
   11830:	tst	r0, #64	; 0x40
   11834:	beq	11844 <rb_base64_encode@plt+0x838>
   11838:	ldr	r0, [r6, #84]	; 0x54
   1183c:	mov	r1, #4
   11840:	bl	10eb0 <rb_set_type@plt>
   11844:	ldr	r0, [r6, #88]	; 0x58
   11848:	bl	10dcc <rb_get_type@plt>
   1184c:	cmp	r0, #64	; 0x40
   11850:	bne	11860 <rb_base64_encode@plt+0x854>
   11854:	ldr	r0, [r6, #88]	; 0x58
   11858:	mov	r1, #4
   1185c:	bl	10eb0 <rb_set_type@plt>
   11860:	ldr	r0, [r6, #84]	; 0x54
   11864:	mov	r1, r6
   11868:	bl	11904 <rb_base64_encode@plt+0x8f8>
   1186c:	ldr	r0, [r6, #88]	; 0x58
   11870:	mov	r1, r6
   11874:	bl	11a38 <rb_base64_encode@plt+0xa2c>
   11878:	ldr	r0, [sl, #8]
   1187c:	ldr	r1, [sl, #4]
   11880:	cmp	r0, #0
   11884:	bne	117ec <rb_base64_encode@plt+0x7e0>
   11888:	str	r1, [r4, #28]
   1188c:	cmp	r1, #0
   11890:	ldr	r2, [sp, #8]
   11894:	addne	r2, r1, #8
   11898:	str	r0, [r2]
   1189c:	str	r8, [sl, #4]
   118a0:	str	r8, [sl, #8]
   118a4:	ldr	r0, [r4, #32]
   118a8:	sub	r0, r0, #1
   118ac:	str	r0, [r4, #32]
   118b0:	ldr	r0, [r5, #12]
   118b4:	cmp	r0, #0
   118b8:	beq	118c0 <rb_base64_encode@plt+0x8b4>
   118bc:	bl	10e8c <free@plt>
   118c0:	mov	r0, r5
   118c4:	bl	10e8c <free@plt>
   118c8:	cmp	r9, #0
   118cc:	mov	sl, r9
   118d0:	bne	116c8 <rb_base64_encode@plt+0x6bc>
   118d4:	ldr	r0, [r4, #16]
   118d8:	movw	r2, #5452	; 0x154c
   118dc:	mov	r1, #1
   118e0:	mov	r3, r4
   118e4:	movt	r2, #1
   118e8:	sub	sp, fp, #28
   118ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118f0:	b	10e08 <rb_setselect@plt>
   118f4:	bl	10f58 <rb_outofmemory@plt>
   118f8:	mov	r0, #0
   118fc:	bl	10ff4 <exit@plt>
   11900:	bx	lr
   11904:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11908:	add	fp, sp, #24
   1190c:	sub	sp, sp, #16384	; 0x4000
   11910:	mov	r4, r1
   11914:	mov	r5, r0
   11918:	mov	r0, sp
   1191c:	mov	r1, #0
   11920:	mov	r2, #16384	; 0x4000
   11924:	bl	10e5c <memset@plt>
   11928:	cmp	r4, #0
   1192c:	beq	119b4 <rb_base64_encode@plt+0x9a8>
   11930:	ldrb	r0, [r4, #128]	; 0x80
   11934:	tst	r0, #2
   11938:	bne	119b4 <rb_base64_encode@plt+0x9a8>
   1193c:	bne	119b4 <rb_base64_encode@plt+0x9a8>
   11940:	mov	r6, sp
   11944:	mov	r0, r5
   11948:	mov	r1, r6
   1194c:	mov	r2, #16384	; 0x4000
   11950:	bl	10ea4 <rb_read@plt>
   11954:	cmn	r0, #1
   11958:	ble	119bc <rb_base64_encode@plt+0x9b0>
   1195c:	mov	r7, r0
   11960:	cmp	r0, #0
   11964:	beq	119fc <rb_base64_encode@plt+0x9f0>
   11968:	ldr	r0, [r4, #20]
   1196c:	mov	r1, r6
   11970:	mov	r2, r7
   11974:	bl	10fdc <rb_rawbuf_append@plt>
   11978:	ldrb	r0, [r4, #128]	; 0x80
   1197c:	tst	r0, #8
   11980:	bne	11998 <rb_base64_encode@plt+0x98c>
   11984:	mov	r0, r4
   11988:	bl	11ec8 <rb_base64_encode@plt+0xebc>
   1198c:	cmp	r7, #16384	; 0x4000
   11990:	bcs	119a8 <rb_base64_encode@plt+0x99c>
   11994:	b	11a18 <rb_base64_encode@plt+0xa0c>
   11998:	mov	r0, r4
   1199c:	bl	120e4 <rb_base64_encode@plt+0x10d8>
   119a0:	cmp	r7, #16384	; 0x4000
   119a4:	bcc	11a18 <rb_base64_encode@plt+0xa0c>
   119a8:	ldrb	r0, [r4, #128]	; 0x80
   119ac:	tst	r0, #2
   119b0:	beq	11944 <rb_base64_encode@plt+0x938>
   119b4:	sub	sp, fp, #24
   119b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   119bc:	bl	11000 <__errno_location@plt>
   119c0:	ldr	r0, [r0]
   119c4:	bl	10df0 <rb_ignore_errno@plt>
   119c8:	cmp	r0, #0
   119cc:	beq	119fc <rb_base64_encode@plt+0x9f0>
   119d0:	movw	r2, #6404	; 0x1904
   119d4:	mov	r0, r5
   119d8:	mov	r1, #1
   119dc:	mov	r3, r4
   119e0:	movt	r2, #1
   119e4:	bl	10e08 <rb_setselect@plt>
   119e8:	ldr	r0, [r4, #88]	; 0x58
   119ec:	mov	r1, r4
   119f0:	bl	11ba0 <rb_base64_encode@plt+0xb94>
   119f4:	sub	sp, fp, #24
   119f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   119fc:	movw	r2, #16889	; 0x41f9
   11a00:	mov	r0, r4
   11a04:	mov	r1, #0
   11a08:	movt	r2, #1
   11a0c:	bl	11c68 <rb_base64_encode@plt+0xc5c>
   11a10:	sub	sp, fp, #24
   11a14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11a18:	movw	r2, #6404	; 0x1904
   11a1c:	mov	r0, r5
   11a20:	mov	r1, #1
   11a24:	mov	r3, r4
   11a28:	movt	r2, #1
   11a2c:	bl	10e08 <rb_setselect@plt>
   11a30:	sub	sp, fp, #24
   11a34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11a38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11a3c:	add	fp, sp, #24
   11a40:	sub	sp, sp, #16384	; 0x4000
   11a44:	mov	r4, r1
   11a48:	mov	r0, sp
   11a4c:	mov	r1, #0
   11a50:	mov	r2, #16384	; 0x4000
   11a54:	bl	10e5c <memset@plt>
   11a58:	cmp	r4, #0
   11a5c:	beq	11b70 <rb_base64_encode@plt+0xb64>
   11a60:	ldrb	r0, [r4, #128]	; 0x80
   11a64:	tst	r0, #2
   11a68:	bne	11b70 <rb_base64_encode@plt+0xb64>
   11a6c:	ldr	r0, [r4, #16]
   11a70:	bl	10f28 <rb_rawbuf_length@plt>
   11a74:	cmp	r0, #4096	; 0x1000
   11a78:	blt	11abc <rb_base64_encode@plt+0xab0>
   11a7c:	ldrb	r0, [r4, #128]	; 0x80
   11a80:	mov	r1, #1
   11a84:	mov	r2, #0
   11a88:	mov	r3, #0
   11a8c:	orr	r0, r0, #1
   11a90:	strb	r0, [r4, #128]	; 0x80
   11a94:	ldr	r0, [r4, #88]	; 0x58
   11a98:	bl	10e08 <rb_setselect@plt>
   11a9c:	ldrb	r0, [r4, #128]	; 0x80
   11aa0:	tst	r0, #8
   11aa4:	beq	11b70 <rb_base64_encode@plt+0xb64>
   11aa8:	ldr	r0, [r4, #84]	; 0x54
   11aac:	mov	r1, r4
   11ab0:	bl	126bc <rb_base64_encode@plt+0x16b0>
   11ab4:	sub	sp, fp, #24
   11ab8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11abc:	add	r5, r4, #52	; 0x34
   11ac0:	add	r7, r4, #112	; 0x70
   11ac4:	mov	r6, sp
   11ac8:	ldrb	r0, [r4, #128]	; 0x80
   11acc:	tst	r0, #2
   11ad0:	bne	11b70 <rb_base64_encode@plt+0xb64>
   11ad4:	ldr	r0, [r4, #88]	; 0x58
   11ad8:	mov	r1, r6
   11adc:	mov	r2, #16384	; 0x4000
   11ae0:	bl	10ea4 <rb_read@plt>
   11ae4:	cmp	r0, #0
   11ae8:	beq	11b78 <rb_base64_encode@plt+0xb6c>
   11aec:	mov	r2, r0
   11af0:	cmn	r0, #1
   11af4:	ble	11b38 <rb_base64_encode@plt+0xb2c>
   11af8:	ldrd	r0, [r7]
   11afc:	mov	r3, #0
   11b00:	adds	r0, r0, r2
   11b04:	adc	r1, r1, r2, asr #31
   11b08:	strd	r0, [r7]
   11b0c:	mov	r0, r5
   11b10:	mov	r1, r6
   11b14:	bl	10e68 <rb_linebuf_parse@plt>
   11b18:	ldrb	r0, [r4, #128]	; 0x80
   11b1c:	tst	r0, #2
   11b20:	bne	11b70 <rb_base64_encode@plt+0xb64>
   11b24:	ldr	r0, [r4, #16]
   11b28:	bl	10f28 <rb_rawbuf_length@plt>
   11b2c:	cmp	r0, #4096	; 0x1000
   11b30:	blt	11ac8 <rb_base64_encode@plt+0xabc>
   11b34:	b	11a7c <rb_base64_encode@plt+0xa70>
   11b38:	bl	11000 <__errno_location@plt>
   11b3c:	ldr	r0, [r0]
   11b40:	bl	10df0 <rb_ignore_errno@plt>
   11b44:	cmp	r0, #0
   11b48:	beq	11b78 <rb_base64_encode@plt+0xb6c>
   11b4c:	ldr	r0, [r4, #88]	; 0x58
   11b50:	movw	r2, #6712	; 0x1a38
   11b54:	mov	r1, #1
   11b58:	mov	r3, r4
   11b5c:	movt	r2, #1
   11b60:	bl	10e08 <rb_setselect@plt>
   11b64:	ldrb	r0, [r4, #128]	; 0x80
   11b68:	tst	r0, #8
   11b6c:	bne	11b90 <rb_base64_encode@plt+0xb84>
   11b70:	sub	sp, fp, #24
   11b74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11b78:	mov	r0, r4
   11b7c:	mov	r1, #0
   11b80:	mov	r2, #0
   11b84:	bl	11c68 <rb_base64_encode@plt+0xc5c>
   11b88:	sub	sp, fp, #24
   11b8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11b90:	mov	r0, r4
   11b94:	bl	124a8 <rb_base64_encode@plt+0x149c>
   11b98:	sub	sp, fp, #24
   11b9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11ba0:	push	{r4, r5, r6, r7, fp, lr}
   11ba4:	add	fp, sp, #16
   11ba8:	mov	r5, r0
   11bac:	ldrb	r0, [r1, #128]	; 0x80
   11bb0:	tst	r0, #2
   11bb4:	popne	{r4, r5, r6, r7, fp, pc}
   11bb8:	add	r6, r1, #24
   11bbc:	mov	r4, r1
   11bc0:	mov	r0, r5
   11bc4:	mov	r1, r6
   11bc8:	bl	10ec8 <rb_linebuf_flush@plt>
   11bcc:	cmp	r0, #1
   11bd0:	blt	11bfc <rb_base64_encode@plt+0xbf0>
   11bd4:	add	r7, r4, #120	; 0x78
   11bd8:	ldrd	r2, [r7]
   11bdc:	mov	r1, r6
   11be0:	adds	r2, r2, r0
   11be4:	adc	r3, r3, r0, asr #31
   11be8:	mov	r0, r5
   11bec:	strd	r2, [r7]
   11bf0:	bl	10ec8 <rb_linebuf_flush@plt>
   11bf4:	cmp	r0, #0
   11bf8:	bgt	11bd8 <rb_base64_encode@plt+0xbcc>
   11bfc:	cmp	r0, #0
   11c00:	beq	11c40 <rb_base64_encode@plt+0xc34>
   11c04:	bl	11000 <__errno_location@plt>
   11c08:	ldr	r0, [r0]
   11c0c:	bl	10df0 <rb_ignore_errno@plt>
   11c10:	cmp	r0, #0
   11c14:	beq	11c40 <rb_base64_encode@plt+0xc34>
   11c18:	ldr	r1, [r4, #40]	; 0x28
   11c1c:	ldr	r0, [r4, #88]	; 0x58
   11c20:	cmp	r1, #1
   11c24:	blt	11c54 <rb_base64_encode@plt+0xc48>
   11c28:	movw	r2, #7072	; 0x1ba0
   11c2c:	mov	r1, #2
   11c30:	mov	r3, r4
   11c34:	movt	r2, #1
   11c38:	pop	{r4, r5, r6, r7, fp, lr}
   11c3c:	b	10e08 <rb_setselect@plt>
   11c40:	mov	r0, r4
   11c44:	mov	r1, #0
   11c48:	mov	r2, #0
   11c4c:	pop	{r4, r5, r6, r7, fp, lr}
   11c50:	b	11c68 <rb_base64_encode@plt+0xc5c>
   11c54:	mov	r1, #2
   11c58:	mov	r2, #0
   11c5c:	mov	r3, #0
   11c60:	pop	{r4, r5, r6, r7, fp, lr}
   11c64:	b	10e08 <rb_setselect@plt>
   11c68:	sub	sp, sp, #4
   11c6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11c70:	add	fp, sp, #24
   11c74:	sub	sp, sp, #388	; 0x184
   11c78:	str	r3, [fp, #8]
   11c7c:	mov	r4, r0
   11c80:	ldrb	r0, [r0, #128]	; 0x80
   11c84:	tst	r0, #2
   11c88:	bne	11e78 <rb_base64_encode@plt+0xe6c>
   11c8c:	tst	r0, #8
   11c90:	mov	r5, r2
   11c94:	mov	r6, r1
   11c98:	movne	r0, r4
   11c9c:	blne	124a8 <rb_base64_encode@plt+0x149c>
   11ca0:	ldr	r0, [r4, #16]
   11ca4:	ldr	r1, [r4, #84]	; 0x54
   11ca8:	bl	10fe8 <rb_rawbuf_flush@plt>
   11cac:	ldr	r0, [r4, #88]	; 0x58
   11cb0:	add	r1, r4, #24
   11cb4:	bl	10ec8 <rb_linebuf_flush@plt>
   11cb8:	ldr	r0, [r4, #84]	; 0x54
   11cbc:	bl	10f04 <rb_close@plt>
   11cc0:	ldrb	r0, [r4, #128]	; 0x80
   11cc4:	movw	r3, #19923	; 0x4dd3
   11cc8:	movt	r3, #4194	; 0x1062
   11ccc:	orr	r0, r0, #2
   11cd0:	strb	r0, [r4, #128]	; 0x80
   11cd4:	ldr	r2, [r4, #80]	; 0x50
   11cd8:	ldr	r0, [r4, #8]
   11cdc:	ldr	r1, [r4, #4]
   11ce0:	umull	r3, r7, r2, r3
   11ce4:	cmp	r0, #0
   11ce8:	lsr	r3, r7, #7
   11cec:	mov	r7, #2000	; 0x7d0
   11cf0:	mls	r2, r3, r7, r2
   11cf4:	movw	r3, #20732	; 0x50fc
   11cf8:	movt	r3, #2
   11cfc:	add	r2, r2, r2, lsl #1
   11d00:	add	r2, r3, r2, lsl #2
   11d04:	beq	11d14 <rb_base64_encode@plt+0xd08>
   11d08:	str	r1, [r0, #4]
   11d0c:	ldr	r1, [r4, #4]
   11d10:	b	11d18 <rb_base64_encode@plt+0xd0c>
   11d14:	str	r1, [r2, #4]
   11d18:	cmp	r1, #0
   11d1c:	mov	r3, r2
   11d20:	mov	r7, #0
   11d24:	addne	r3, r1, #8
   11d28:	cmp	r6, #0
   11d2c:	str	r0, [r3]
   11d30:	str	r7, [r4, #4]
   11d34:	str	r7, [r4, #8]
   11d38:	cmpne	r5, #0
   11d3c:	ldr	r0, [r2, #8]
   11d40:	sub	r0, r0, #1
   11d44:	str	r0, [r2, #8]
   11d48:	ldr	r0, [r4, #88]	; 0x58
   11d4c:	bne	11d7c <rb_base64_encode@plt+0xd70>
   11d50:	bl	10f04 <rb_close@plt>
   11d54:	movw	r0, #20720	; 0x50f0
   11d58:	stm	r4, {r4, r7}
   11d5c:	movt	r0, #2
   11d60:	ldr	r1, [r0]
   11d64:	cmp	r1, #0
   11d68:	str	r1, [r4, #8]
   11d6c:	beq	11e58 <rb_base64_encode@plt+0xe4c>
   11d70:	add	r1, r1, #4
   11d74:	str	r4, [r1]
   11d78:	b	11e68 <rb_base64_encode@plt+0xe5c>
   11d7c:	movw	r2, #9708	; 0x25ec
   11d80:	mov	r1, #1
   11d84:	mov	r3, r4
   11d88:	movt	r2, #1
   11d8c:	bl	10e08 <rb_setselect@plt>
   11d90:	ldr	r0, [r4, #88]	; 0x58
   11d94:	mov	r1, #2
   11d98:	mov	r2, #0
   11d9c:	mov	r3, #0
   11da0:	bl	10e08 <rb_setselect@plt>
   11da4:	sub	r6, fp, #156	; 0x9c
   11da8:	add	r3, fp, #8
   11dac:	mov	r1, #128	; 0x80
   11db0:	mov	r2, r5
   11db4:	mov	r0, r6
   11db8:	str	r3, [fp, #-28]	; 0xffffffe4
   11dbc:	bl	10e2c <vsnprintf@plt>
   11dc0:	mov	r0, #68	; 0x44
   11dc4:	mov	r1, r6
   11dc8:	mov	r2, #251	; 0xfb
   11dcc:	strb	r0, [sp]
   11dd0:	ldr	r0, [r4, #80]	; 0x50
   11dd4:	str	r0, [sp, #1]
   11dd8:	mov	r0, sp
   11ddc:	orr	r0, r0, #5
   11de0:	bl	10e74 <rb_strlcpy@plt>
   11de4:	mov	r0, r6
   11de8:	bl	10ed4 <strlen@plt>
   11dec:	ldr	r4, [r4, #12]
   11df0:	mov	r6, r0
   11df4:	mov	r0, #1
   11df8:	mov	r1, #40	; 0x28
   11dfc:	bl	10e44 <calloc@plt>
   11e00:	cmp	r0, #0
   11e04:	beq	11ec4 <rb_base64_encode@plt+0xeb8>
   11e08:	add	r6, r6, #6
   11e0c:	mov	r5, r0
   11e10:	mov	r0, #1
   11e14:	mov	r1, r6
   11e18:	bl	10e44 <calloc@plt>
   11e1c:	cmp	r0, #0
   11e20:	beq	11ec4 <rb_base64_encode@plt+0xeb8>
   11e24:	mov	r1, sp
   11e28:	mov	r2, r6
   11e2c:	str	r0, [r5, #12]
   11e30:	str	r6, [r5, #16]
   11e34:	bl	10ee0 <memcpy@plt>
   11e38:	str	r5, [r5]
   11e3c:	ldr	r0, [r4, #40]	; 0x28
   11e40:	cmp	r0, #0
   11e44:	str	r0, [r5, #4]
   11e48:	beq	11e88 <rb_base64_encode@plt+0xe7c>
   11e4c:	add	r0, r0, #8
   11e50:	str	r5, [r0]
   11e54:	b	11e98 <rb_base64_encode@plt+0xe8c>
   11e58:	mov	r1, r0
   11e5c:	ldr	r2, [r1, #4]!
   11e60:	cmp	r2, #0
   11e64:	streq	r4, [r1]
   11e68:	str	r4, [r0]
   11e6c:	ldr	r1, [r0, #8]
   11e70:	add	r1, r1, #1
   11e74:	str	r1, [r0, #8]
   11e78:	sub	sp, fp, #24
   11e7c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   11e80:	add	sp, sp, #4
   11e84:	bx	lr
   11e88:	mov	r0, r4
   11e8c:	ldr	r1, [r0, #36]!	; 0x24
   11e90:	cmp	r1, #0
   11e94:	streq	r5, [r0]
   11e98:	str	r5, [r4, #40]	; 0x28
   11e9c:	ldr	r1, [r4, #44]	; 0x2c
   11ea0:	ldr	r0, [r4, #16]
   11ea4:	add	r1, r1, #1
   11ea8:	str	r1, [r4, #44]	; 0x2c
   11eac:	mov	r1, r4
   11eb0:	bl	127f4 <rb_base64_encode@plt+0x17e8>
   11eb4:	sub	sp, fp, #24
   11eb8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   11ebc:	add	sp, sp, #4
   11ec0:	bx	lr
   11ec4:	bl	10f58 <rb_outofmemory@plt>
   11ec8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ecc:	add	fp, sp, #28
   11ed0:	sub	sp, sp, #124	; 0x7c
   11ed4:	sub	sp, sp, #16384	; 0x4000
   11ed8:	add	r5, sp, #120	; 0x78
   11edc:	mov	r4, r0
   11ee0:	mov	r1, #0
   11ee4:	mov	r2, #16384	; 0x4000
   11ee8:	mov	r8, #0
   11eec:	mov	r0, r5
   11ef0:	bl	10e5c <memset@plt>
   11ef4:	ldr	r0, [r4, #20]
   11ef8:	mov	r1, r5
   11efc:	mov	r2, #16384	; 0x4000
   11f00:	bl	10f64 <rb_rawbuf_get@plt>
   11f04:	cmp	r0, #0
   11f08:	beq	11fd8 <rb_base64_encode@plt+0xfcc>
   11f0c:	movw	r9, #16957	; 0x423d
   11f10:	movw	r0, #16366	; 0x3fee
   11f14:	add	r6, r5, #16384	; 0x4000
   11f18:	add	sl, r4, #129	; 0x81
   11f1c:	movt	r9, #1
   11f20:	add	r7, r5, r0
   11f24:	b	11f5c <rb_base64_encode@plt+0xf50>
   11f28:	strb	r8, [r0]
   11f2c:	mov	r0, sl
   11f30:	mov	r2, #37	; 0x25
   11f34:	bl	10e74 <rb_strlcpy@plt>
   11f38:	ldrb	r0, [r4, #128]	; 0x80
   11f3c:	orr	r0, r0, #8
   11f40:	strb	r0, [r4, #128]	; 0x80
   11f44:	ldr	r0, [r4, #20]
   11f48:	mov	r1, r5
   11f4c:	mov	r2, #16384	; 0x4000
   11f50:	bl	10f64 <rb_rawbuf_get@plt>
   11f54:	cmp	r0, #0
   11f58:	beq	11fd8 <rb_base64_encode@plt+0xfcc>
   11f5c:	mov	r0, r5
   11f60:	mov	r1, r9
   11f64:	bl	10ef8 <rb_strcasestr@plt>
   11f68:	cmp	r0, #0
   11f6c:	beq	11f44 <rb_base64_encode@plt+0xf38>
   11f70:	add	r1, r0, #18
   11f74:	cmp	r1, r6
   11f78:	bcs	11fa4 <rb_base64_encode@plt+0xf98>
   11f7c:	ldrb	r1, [r0, #18]
   11f80:	cmp	r1, #32
   11f84:	cmpne	r1, #9
   11f88:	bne	11fa0 <rb_base64_encode@plt+0xf94>
   11f8c:	add	r0, r0, #1
   11f90:	cmp	r7, r0
   11f94:	bne	11f7c <rb_base64_encode@plt+0xf70>
   11f98:	mov	r1, r6
   11f9c:	b	11f2c <rb_base64_encode@plt+0xf20>
   11fa0:	add	r1, r0, #18
   11fa4:	cmp	r1, r6
   11fa8:	bcs	11f2c <rb_base64_encode@plt+0xf20>
   11fac:	mov	r0, r1
   11fb0:	ldrb	r2, [r0]
   11fb4:	cmp	r2, #0
   11fb8:	beq	11f2c <rb_base64_encode@plt+0xf20>
   11fbc:	cmp	r2, #13
   11fc0:	cmpne	r2, #10
   11fc4:	beq	11f28 <rb_base64_encode@plt+0xf1c>
   11fc8:	add	r0, r0, #1
   11fcc:	cmp	r6, r0
   11fd0:	bne	11fb0 <rb_base64_encode@plt+0xfa4>
   11fd4:	b	11f2c <rb_base64_encode@plt+0xf20>
   11fd8:	ldrb	r0, [r4, #128]	; 0x80
   11fdc:	tst	r0, #8
   11fe0:	beq	1206c <rb_base64_encode@plt+0x1060>
   11fe4:	add	r5, sp, #24
   11fe8:	mov	r0, r5
   11fec:	bl	12950 <rb_base64_encode@plt+0x1944>
   11ff0:	add	r6, r4, #129	; 0x81
   11ff4:	mov	r0, r6
   11ff8:	bl	10ed4 <strlen@plt>
   11ffc:	mov	r2, r0
   12000:	mov	r0, r5
   12004:	mov	r1, r6
   12008:	bl	12990 <rb_base64_encode@plt+0x1984>
   1200c:	movw	r1, #16976	; 0x4250
   12010:	mov	r0, r5
   12014:	mov	r2, #36	; 0x24
   12018:	movt	r1, #1
   1201c:	bl	12990 <rb_base64_encode@plt+0x1984>
   12020:	add	r6, sp, #4
   12024:	mov	r0, r5
   12028:	mov	r1, r6
   1202c:	bl	13e5c <rb_base64_encode@plt+0x2e50>
   12030:	mov	r0, r6
   12034:	mov	r1, #20
   12038:	bl	1100c <rb_base64_encode@plt>
   1203c:	mov	r5, r0
   12040:	ldrb	r0, [r4, #128]	; 0x80
   12044:	tst	r0, #2
   12048:	beq	12080 <rb_base64_encode@plt+0x1074>
   1204c:	tst	r0, #2
   12050:	beq	120a0 <rb_base64_encode@plt+0x1094>
   12054:	tst	r0, #2
   12058:	beq	120c4 <rb_base64_encode@plt+0x10b8>
   1205c:	cmp	r5, #0
   12060:	beq	1206c <rb_base64_encode@plt+0x1060>
   12064:	mov	r0, r5
   12068:	bl	10e8c <free@plt>
   1206c:	ldr	r0, [r4, #84]	; 0x54
   12070:	mov	r1, r4
   12074:	bl	126bc <rb_base64_encode@plt+0x16b0>
   12078:	sub	sp, fp, #28
   1207c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12080:	ldr	r0, [r4, #16]
   12084:	movw	r1, #17013	; 0x4275
   12088:	mov	r2, #129	; 0x81
   1208c:	movt	r1, #1
   12090:	bl	10fdc <rb_rawbuf_append@plt>
   12094:	ldrb	r0, [r4, #128]	; 0x80
   12098:	tst	r0, #2
   1209c:	bne	12054 <rb_base64_encode@plt+0x1048>
   120a0:	mov	r0, r5
   120a4:	bl	10ed4 <strlen@plt>
   120a8:	mov	r2, r0
   120ac:	ldr	r0, [r4, #16]
   120b0:	mov	r1, r5
   120b4:	bl	10fdc <rb_rawbuf_append@plt>
   120b8:	ldrb	r0, [r4, #128]	; 0x80
   120bc:	tst	r0, #2
   120c0:	bne	1205c <rb_base64_encode@plt+0x1050>
   120c4:	ldr	r0, [r4, #16]
   120c8:	movw	r1, #17143	; 0x42f7
   120cc:	mov	r2, #4
   120d0:	movt	r1, #1
   120d4:	bl	10fdc <rb_rawbuf_append@plt>
   120d8:	cmp	r5, #0
   120dc:	bne	12064 <rb_base64_encode@plt+0x1058>
   120e0:	b	1206c <rb_base64_encode@plt+0x1060>
   120e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120e8:	add	fp, sp, #28
   120ec:	sub	sp, sp, #12
   120f0:	sub	sp, sp, #16384	; 0x4000
   120f4:	mov	r4, r0
   120f8:	ldr	r0, [r0, #20]
   120fc:	mov	r1, sp
   12100:	mov	r2, #2
   12104:	bl	10f64 <rb_rawbuf_get@plt>
   12108:	cmp	r0, #2
   1210c:	bne	12494 <rb_base64_encode@plt+0x1488>
   12110:	add	sl, r4, #24
   12114:	mov	r8, sp
   12118:	add	r7, sp, #8
   1211c:	add	r5, sp, #2
   12120:	b	1214c <rb_base64_encode@plt+0x1140>
   12124:	mov	r0, sl
   12128:	mov	r1, r7
   1212c:	mov	r3, #1
   12130:	bl	10e68 <rb_linebuf_parse@plt>
   12134:	ldr	r0, [r4, #20]
   12138:	mov	r1, r8
   1213c:	mov	r2, #2
   12140:	bl	10f64 <rb_rawbuf_get@plt>
   12144:	cmp	r0, #2
   12148:	bne	12494 <rb_base64_encode@plt+0x1488>
   1214c:	ldrb	r0, [sp, #1]
   12150:	and	r2, r0, #127	; 0x7f
   12154:	cmp	r2, #127	; 0x7f
   12158:	strb	r2, [sp, #1]
   1215c:	beq	12134 <rb_base64_encode@plt+0x1128>
   12160:	lsr	r9, r0, #7
   12164:	cmp	r2, #126	; 0x7e
   12168:	bne	121c8 <rb_base64_encode@plt+0x11bc>
   1216c:	mov	r0, r7
   12170:	mov	r1, #0
   12174:	mov	r2, #16384	; 0x4000
   12178:	bl	10e5c <memset@plt>
   1217c:	ldr	r0, [r4, #20]
   12180:	add	r1, sp, #6
   12184:	mov	r2, #2
   12188:	bl	10f64 <rb_rawbuf_get@plt>
   1218c:	cmp	r0, #0
   12190:	beq	12320 <rb_base64_encode@plt+0x1314>
   12194:	ldrh	r0, [sp, #6]
   12198:	cmp	r9, #0
   1219c:	rev16	r1, r0
   121a0:	strh	r1, [sp, #6]
   121a4:	beq	12338 <rb_base64_encode@plt+0x132c>
   121a8:	ldr	r0, [r4, #20]
   121ac:	mov	r1, r5
   121b0:	mov	r2, #4
   121b4:	bl	10f64 <rb_rawbuf_get@plt>
   121b8:	cmp	r0, #0
   121bc:	beq	12308 <rb_base64_encode@plt+0x12fc>
   121c0:	ldrh	r2, [sp, #6]
   121c4:	b	12340 <rb_base64_encode@plt+0x1334>
   121c8:	cmp	r9, #0
   121cc:	beq	121ec <rb_base64_encode@plt+0x11e0>
   121d0:	ldr	r0, [r4, #20]
   121d4:	mov	r1, r5
   121d8:	mov	r2, #4
   121dc:	bl	10f64 <rb_rawbuf_get@plt>
   121e0:	cmp	r0, #0
   121e4:	beq	12308 <rb_base64_encode@plt+0x12fc>
   121e8:	ldrb	r2, [sp, #1]
   121ec:	ldr	r0, [r4, #20]
   121f0:	mov	r1, r7
   121f4:	bl	10f64 <rb_rawbuf_get@plt>
   121f8:	cmp	r0, #0
   121fc:	beq	1245c <rb_base64_encode@plt+0x1450>
   12200:	mov	r2, r0
   12204:	cmp	r9, #0
   12208:	beq	12124 <rb_base64_encode@plt+0x1118>
   1220c:	cmp	r2, #1
   12210:	blt	12124 <rb_base64_encode@plt+0x1118>
   12214:	mov	r0, #0
   12218:	cmp	r2, #16
   1221c:	bcc	1229c <rb_base64_encode@plt+0x1290>
   12220:	sub	r1, r2, #1
   12224:	cmp	r1, #3
   12228:	bhi	1229c <rb_base64_encode@plt+0x1290>
   1222c:	bic	r0, r2, #15
   12230:	mov	r3, #1
   12234:	subs	r1, r0, #16
   12238:	add	r3, r3, r1, lsr #4
   1223c:	and	ip, r3, #1
   12240:	beq	12474 <rb_base64_encode@plt+0x1468>
   12244:	vld1.8	{d16-d17}, [r5]
   12248:	sub	r6, r3, ip
   1224c:	mov	r3, #0
   12250:	add	r1, r7, r3
   12254:	subs	r6, r6, #2
   12258:	add	r3, r3, #32
   1225c:	vld1.8	{d18-d19}, [r1]
   12260:	veor	q9, q8, q9
   12264:	vst1.8	{d18-d19}, [r1]!
   12268:	vld1.8	{d18-d19}, [r1]
   1226c:	veor	q9, q8, q9
   12270:	vst1.8	{d18-d19}, [r1]
   12274:	bne	12250 <rb_base64_encode@plt+0x1244>
   12278:	cmp	ip, #0
   1227c:	beq	12294 <rb_base64_encode@plt+0x1288>
   12280:	add	r1, r7, r3
   12284:	vld1.8	{d16-d17}, [r5]
   12288:	vld1.8	{d18-d19}, [r1]
   1228c:	veor	q8, q8, q9
   12290:	vst1.8	{d16-d17}, [r1]
   12294:	cmp	r2, r0
   12298:	beq	12124 <rb_base64_encode@plt+0x1118>
   1229c:	tst	r2, #1
   122a0:	mov	r1, r0
   122a4:	beq	122bc <rb_base64_encode@plt+0x12b0>
   122a8:	ldrb	r1, [r7, r0]
   122ac:	ldrb	r3, [sp, #2]
   122b0:	eor	r1, r3, r1
   122b4:	strb	r1, [r7, r0]
   122b8:	orr	r1, r0, #1
   122bc:	orr	r0, r0, #1
   122c0:	cmp	r2, r0
   122c4:	beq	12124 <rb_base64_encode@plt+0x1118>
   122c8:	and	r3, r1, #3
   122cc:	ldrb	r0, [r7, r1]
   122d0:	ldrb	r3, [r5, r3]
   122d4:	eor	r0, r3, r0
   122d8:	add	r3, r7, r1
   122dc:	strb	r0, [r7, r1]
   122e0:	add	r0, r1, #1
   122e4:	add	r1, r1, #2
   122e8:	and	r0, r0, #3
   122ec:	ldrb	r6, [r3, #1]
   122f0:	cmp	r2, r1
   122f4:	ldrb	r0, [r5, r0]
   122f8:	eor	r0, r0, r6
   122fc:	strb	r0, [r3, #1]
   12300:	bne	122c8 <rb_base64_encode@plt+0x12bc>
   12304:	b	12124 <rb_base64_encode@plt+0x1118>
   12308:	movw	r2, #17194	; 0x432a
   1230c:	mov	r0, r4
   12310:	mov	r1, #1
   12314:	movt	r2, #1
   12318:	bl	11c68 <rb_base64_encode@plt+0xc5c>
   1231c:	b	12134 <rb_base64_encode@plt+0x1128>
   12320:	movw	r2, #17148	; 0x42fc
   12324:	mov	r0, r4
   12328:	mov	r1, #1
   1232c:	movt	r2, #1
   12330:	bl	11c68 <rb_base64_encode@plt+0xc5c>
   12334:	b	12134 <rb_base64_encode@plt+0x1128>
   12338:	rev	r0, r0
   1233c:	lsr	r2, r0, #16
   12340:	ldr	r0, [r4, #20]
   12344:	mov	r1, r7
   12348:	bl	10f64 <rb_rawbuf_get@plt>
   1234c:	cmp	r0, #0
   12350:	beq	1245c <rb_base64_encode@plt+0x1450>
   12354:	mov	r2, r0
   12358:	cmp	r9, #0
   1235c:	beq	12124 <rb_base64_encode@plt+0x1118>
   12360:	cmp	r2, #1
   12364:	blt	12124 <rb_base64_encode@plt+0x1118>
   12368:	mov	r0, #0
   1236c:	cmp	r2, #16
   12370:	bcc	123f0 <rb_base64_encode@plt+0x13e4>
   12374:	sub	r1, r2, #1
   12378:	cmp	r1, #3
   1237c:	bhi	123f0 <rb_base64_encode@plt+0x13e4>
   12380:	bic	r0, r2, #15
   12384:	mov	r3, #1
   12388:	subs	r1, r0, #16
   1238c:	add	r1, r3, r1, lsr #4
   12390:	and	ip, r1, #1
   12394:	beq	12484 <rb_base64_encode@plt+0x1478>
   12398:	vld1.8	{d16-d17}, [r5]
   1239c:	sub	r1, r1, ip
   123a0:	mov	r3, #0
   123a4:	add	r6, r7, r3
   123a8:	subs	r1, r1, #2
   123ac:	add	r3, r3, #32
   123b0:	vld1.8	{d18-d19}, [r6]
   123b4:	veor	q9, q8, q9
   123b8:	vst1.8	{d18-d19}, [r6]!
   123bc:	vld1.8	{d18-d19}, [r6]
   123c0:	veor	q9, q8, q9
   123c4:	vst1.8	{d18-d19}, [r6]
   123c8:	bne	123a4 <rb_base64_encode@plt+0x1398>
   123cc:	cmp	ip, #0
   123d0:	beq	123e8 <rb_base64_encode@plt+0x13dc>
   123d4:	add	r1, r7, r3
   123d8:	vld1.8	{d16-d17}, [r5]
   123dc:	vld1.8	{d18-d19}, [r1]
   123e0:	veor	q8, q8, q9
   123e4:	vst1.8	{d16-d17}, [r1]
   123e8:	cmp	r2, r0
   123ec:	beq	12124 <rb_base64_encode@plt+0x1118>
   123f0:	tst	r2, #1
   123f4:	mov	r1, r0
   123f8:	beq	12410 <rb_base64_encode@plt+0x1404>
   123fc:	ldrb	r1, [r7, r0]
   12400:	ldrb	r3, [sp, #2]
   12404:	eor	r1, r3, r1
   12408:	strb	r1, [r7, r0]
   1240c:	orr	r1, r0, #1
   12410:	orr	r0, r0, #1
   12414:	cmp	r2, r0
   12418:	beq	12124 <rb_base64_encode@plt+0x1118>
   1241c:	and	r3, r1, #3
   12420:	ldrb	r0, [r7, r1]
   12424:	ldrb	r3, [r5, r3]
   12428:	eor	r0, r3, r0
   1242c:	add	r3, r7, r1
   12430:	strb	r0, [r7, r1]
   12434:	add	r0, r1, #1
   12438:	add	r1, r1, #2
   1243c:	and	r0, r0, #3
   12440:	ldrb	r6, [r3, #1]
   12444:	cmp	r2, r1
   12448:	ldrb	r0, [r5, r0]
   1244c:	eor	r0, r0, r6
   12450:	strb	r0, [r3, #1]
   12454:	bne	1241c <rb_base64_encode@plt+0x1410>
   12458:	b	12124 <rb_base64_encode@plt+0x1118>
   1245c:	movw	r2, #17238	; 0x4356
   12460:	mov	r0, r4
   12464:	mov	r1, #1
   12468:	movt	r2, #1
   1246c:	bl	11c68 <rb_base64_encode@plt+0xc5c>
   12470:	b	12134 <rb_base64_encode@plt+0x1128>
   12474:	mov	r3, #0
   12478:	cmp	ip, #0
   1247c:	bne	12280 <rb_base64_encode@plt+0x1274>
   12480:	b	12294 <rb_base64_encode@plt+0x1288>
   12484:	mov	r3, #0
   12488:	cmp	ip, #0
   1248c:	bne	123d4 <rb_base64_encode@plt+0x13c8>
   12490:	b	123e8 <rb_base64_encode@plt+0x13dc>
   12494:	ldr	r0, [r4, #88]	; 0x58
   12498:	mov	r1, r4
   1249c:	bl	11ba0 <rb_base64_encode@plt+0xb94>
   124a0:	sub	sp, fp, #28
   124a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124ac:	add	fp, sp, #28
   124b0:	sub	sp, sp, #20
   124b4:	sub	sp, sp, #16384	; 0x4000
   124b8:	add	r6, sp, #8
   124bc:	mov	r4, r0
   124c0:	mov	r1, #0
   124c4:	mov	r2, #16384	; 0x4000
   124c8:	mov	sl, #0
   124cc:	mov	r0, r6
   124d0:	bl	10e5c <memset@plt>
   124d4:	add	r5, r4, #52	; 0x34
   124d8:	mov	r1, r6
   124dc:	mov	r2, #16384	; 0x4000
   124e0:	mov	r3, #0
   124e4:	str	sl, [sp]
   124e8:	mov	r0, r5
   124ec:	bl	10ebc <rb_linebuf_get@plt>
   124f0:	mov	r6, r0
   124f4:	ldrb	r0, [r4, #128]	; 0x80
   124f8:	cmp	r6, #0
   124fc:	beq	125d0 <rb_base64_encode@plt+0x15c4>
   12500:	movw	r8, #17145	; 0x42f9
   12504:	sub	r9, fp, #36	; 0x24
   12508:	add	r7, sp, #8
   1250c:	movt	r8, #1
   12510:	tst	r0, #2
   12514:	beq	12548 <rb_base64_encode@plt+0x153c>
   12518:	mov	r0, r5
   1251c:	mov	r1, r7
   12520:	mov	r2, #16384	; 0x4000
   12524:	mov	r3, #0
   12528:	str	sl, [sp]
   1252c:	bl	10ebc <rb_linebuf_get@plt>
   12530:	mov	r6, r0
   12534:	ldrb	r0, [r4, #128]	; 0x80
   12538:	cmp	r6, #0
   1253c:	beq	125d0 <rb_base64_encode@plt+0x15c4>
   12540:	tst	r0, #2
   12544:	bne	12518 <rb_base64_encode@plt+0x150c>
   12548:	cmp	r6, #122	; 0x7a
   1254c:	bgt	12570 <rb_base64_encode@plt+0x1564>
   12550:	mov	r0, #129	; 0x81
   12554:	mov	r1, r9
   12558:	mov	r2, #2
   1255c:	strh	r0, [fp, #-36]	; 0xffffffdc
   12560:	add	r0, r6, #2
   12564:	and	r0, r0, #127	; 0x7f
   12568:	strb	r0, [fp, #-35]	; 0xffffffdd
   1256c:	b	1258c <rb_base64_encode@plt+0x1580>
   12570:	movw	r0, #32385	; 0x7e81
   12574:	mov	r1, r9
   12578:	mov	r2, #4
   1257c:	str	r0, [fp, #-36]	; 0xffffffdc
   12580:	add	r0, r6, #2
   12584:	rev16	r0, r0
   12588:	strh	r0, [fp, #-34]	; 0xffffffde
   1258c:	ldr	r0, [r4, #16]
   12590:	bl	10fdc <rb_rawbuf_append@plt>
   12594:	ldrb	r0, [r4, #128]	; 0x80
   12598:	tst	r0, #2
   1259c:	bne	125b4 <rb_base64_encode@plt+0x15a8>
   125a0:	ldr	r0, [r4, #16]
   125a4:	mov	r1, r7
   125a8:	mov	r2, r6
   125ac:	bl	10fdc <rb_rawbuf_append@plt>
   125b0:	ldrb	r0, [r4, #128]	; 0x80
   125b4:	tst	r0, #2
   125b8:	bne	12518 <rb_base64_encode@plt+0x150c>
   125bc:	ldr	r0, [r4, #16]
   125c0:	mov	r1, r8
   125c4:	mov	r2, #2
   125c8:	bl	10fdc <rb_rawbuf_append@plt>
   125cc:	b	12518 <rb_base64_encode@plt+0x150c>
   125d0:	tst	r0, #8
   125d4:	beq	125e4 <rb_base64_encode@plt+0x15d8>
   125d8:	ldr	r0, [r4, #84]	; 0x54
   125dc:	mov	r1, r4
   125e0:	bl	126bc <rb_base64_encode@plt+0x16b0>
   125e4:	sub	sp, fp, #28
   125e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125ec:	push	{r4, r5, r6, r7, fp, lr}
   125f0:	add	fp, sp, #16
   125f4:	sub	sp, sp, #16384	; 0x4000
   125f8:	cmp	r1, #0
   125fc:	beq	12654 <rb_base64_encode@plt+0x1648>
   12600:	mov	r4, r1
   12604:	mov	r5, sp
   12608:	ldr	r0, [r4, #88]	; 0x58
   1260c:	mov	r1, r5
   12610:	mov	r2, #16384	; 0x4000
   12614:	bl	10ea4 <rb_read@plt>
   12618:	cmp	r0, #0
   1261c:	beq	1265c <rb_base64_encode@plt+0x1650>
   12620:	cmn	r0, #1
   12624:	bgt	12608 <rb_base64_encode@plt+0x15fc>
   12628:	bl	11000 <__errno_location@plt>
   1262c:	ldr	r0, [r0]
   12630:	bl	10df0 <rb_ignore_errno@plt>
   12634:	cmp	r0, #0
   12638:	beq	1265c <rb_base64_encode@plt+0x1650>
   1263c:	ldr	r0, [r4, #88]	; 0x58
   12640:	movw	r2, #9708	; 0x25ec
   12644:	mov	r1, #1
   12648:	mov	r3, r4
   1264c:	movt	r2, #1
   12650:	bl	10e08 <rb_setselect@plt>
   12654:	sub	sp, fp, #16
   12658:	pop	{r4, r5, r6, r7, fp, pc}
   1265c:	ldr	r0, [r4, #88]	; 0x58
   12660:	bl	10f04 <rb_close@plt>
   12664:	mov	r0, #0
   12668:	str	r0, [r4, #4]
   1266c:	movw	r0, #20720	; 0x50f0
   12670:	str	r4, [r4]
   12674:	movt	r0, #2
   12678:	ldr	r1, [r0]
   1267c:	cmp	r1, #0
   12680:	str	r1, [r4, #8]
   12684:	beq	12694 <rb_base64_encode@plt+0x1688>
   12688:	add	r1, r1, #4
   1268c:	str	r4, [r1]
   12690:	b	126a4 <rb_base64_encode@plt+0x1698>
   12694:	mov	r1, r0
   12698:	ldr	r2, [r1, #4]!
   1269c:	cmp	r2, #0
   126a0:	streq	r4, [r1]
   126a4:	str	r4, [r0]
   126a8:	ldr	r1, [r0, #8]
   126ac:	add	r1, r1, #1
   126b0:	str	r1, [r0, #8]
   126b4:	sub	sp, fp, #16
   126b8:	pop	{r4, r5, r6, r7, fp, pc}
   126bc:	push	{r4, r5, r6, sl, fp, lr}
   126c0:	add	fp, sp, #16
   126c4:	mov	r5, r0
   126c8:	ldrb	r0, [r1, #128]	; 0x80
   126cc:	tst	r0, #2
   126d0:	bne	127d4 <rb_base64_encode@plt+0x17c8>
   126d4:	ldr	r0, [r1, #16]
   126d8:	mov	r4, r1
   126dc:	mov	r1, r5
   126e0:	bl	10fe8 <rb_rawbuf_flush@plt>
   126e4:	cmp	r0, #1
   126e8:	blt	12714 <rb_base64_encode@plt+0x1708>
   126ec:	add	r6, r4, #96	; 0x60
   126f0:	ldrd	r2, [r6]
   126f4:	mov	r1, r5
   126f8:	adds	r2, r2, r0
   126fc:	adc	r3, r3, r0, asr #31
   12700:	strd	r2, [r6]
   12704:	ldr	r0, [r4, #16]
   12708:	bl	10fe8 <rb_rawbuf_flush@plt>
   1270c:	cmp	r0, #0
   12710:	bgt	126f0 <rb_base64_encode@plt+0x16e4>
   12714:	cmp	r0, #0
   12718:	beq	12760 <rb_base64_encode@plt+0x1754>
   1271c:	bl	11000 <__errno_location@plt>
   12720:	mov	r5, r0
   12724:	ldr	r0, [r0]
   12728:	bl	10df0 <rb_ignore_errno@plt>
   1272c:	cmp	r0, #0
   12730:	beq	12784 <rb_base64_encode@plt+0x1778>
   12734:	ldr	r0, [r4, #16]
   12738:	bl	10f28 <rb_rawbuf_length@plt>
   1273c:	mov	r1, r0
   12740:	ldr	r0, [r4, #84]	; 0x54
   12744:	cmp	r1, #1
   12748:	blt	127a8 <rb_base64_encode@plt+0x179c>
   1274c:	movw	r2, #9916	; 0x26bc
   12750:	mov	r1, #2
   12754:	mov	r3, r4
   12758:	movt	r2, #1
   1275c:	b	127b4 <rb_base64_encode@plt+0x17a8>
   12760:	movw	r2, #16920	; 0x4218
   12764:	movw	r3, #16923	; 0x421b
   12768:	mov	r0, r4
   1276c:	mov	r1, #1
   12770:	movt	r2, #1
   12774:	movt	r3, #1
   12778:	bl	11c68 <rb_base64_encode@plt+0xc5c>
   1277c:	bl	11000 <__errno_location@plt>
   12780:	mov	r5, r0
   12784:	ldr	r0, [r5]
   12788:	bl	10dc0 <strerror@plt>
   1278c:	movw	r2, #16907	; 0x420b
   12790:	mov	r3, r0
   12794:	mov	r0, r4
   12798:	mov	r1, #1
   1279c:	movt	r2, #1
   127a0:	pop	{r4, r5, r6, sl, fp, lr}
   127a4:	b	11c68 <rb_base64_encode@plt+0xc5c>
   127a8:	mov	r1, #2
   127ac:	mov	r2, #0
   127b0:	mov	r3, #0
   127b4:	bl	10e08 <rb_setselect@plt>
   127b8:	ldrb	r0, [r4, #128]	; 0x80
   127bc:	tst	r0, #1
   127c0:	popeq	{r4, r5, r6, sl, fp, pc}
   127c4:	ldr	r0, [r4, #16]
   127c8:	bl	10f28 <rb_rawbuf_length@plt>
   127cc:	cmp	r0, #0
   127d0:	beq	127d8 <rb_base64_encode@plt+0x17cc>
   127d4:	pop	{r4, r5, r6, sl, fp, pc}
   127d8:	ldrb	r0, [r4, #128]	; 0x80
   127dc:	mov	r1, r4
   127e0:	and	r0, r0, #254	; 0xfe
   127e4:	strb	r0, [r4, #128]	; 0x80
   127e8:	ldr	r0, [r4, #88]	; 0x58
   127ec:	pop	{r4, r5, r6, sl, fp, lr}
   127f0:	b	11a38 <rb_base64_encode@plt+0xa2c>
   127f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127f8:	add	fp, sp, #28
   127fc:	sub	sp, sp, #12
   12800:	mov	r0, r1
   12804:	mov	r8, r1
   12808:	ldr	r9, [r0, #36]!	; 0x24
   1280c:	str	r0, [sp, #8]
   12810:	cmp	r9, #0
   12814:	bne	12850 <rb_base64_encode@plt+0x1844>
   12818:	ldr	r0, [r8, #44]	; 0x2c
   1281c:	cmp	r0, #0
   12820:	beq	12944 <rb_base64_encode@plt+0x1938>
   12824:	ldr	r0, [r8, #16]
   12828:	movw	r2, #10228	; 0x27f4
   1282c:	mov	r1, #2
   12830:	mov	r3, r8
   12834:	movt	r2, #1
   12838:	sub	sp, fp, #28
   1283c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12840:	b	10e08 <rb_setselect@plt>
   12844:	cmp	sl, #0
   12848:	mov	r9, sl
   1284c:	beq	12818 <rb_base64_encode@plt+0x180c>
   12850:	ldr	r5, [r9]
   12854:	movw	r7, #44732	; 0xaebc
   12858:	ldr	r0, [r8, #16]
   1285c:	ldr	sl, [r9, #8]
   12860:	movt	r7, #2
   12864:	ldr	r7, [r7]
   12868:	ldr	r1, [r5, #16]
   1286c:	ldr	r3, [r5, #12]
   12870:	ldr	r2, [r5, #36]	; 0x24
   12874:	stm	sp, {r1, r7}
   12878:	add	r7, r5, #20
   1287c:	mov	r1, r7
   12880:	bl	10e20 <rb_send_fd_buf@plt>
   12884:	mov	r6, r0
   12888:	cmp	r0, #1
   1288c:	blt	12918 <rb_base64_encode@plt+0x190c>
   12890:	ldr	r0, [r9, #8]
   12894:	ldr	r1, [r9, #4]
   12898:	cmp	r0, #0
   1289c:	beq	128ac <rb_base64_encode@plt+0x18a0>
   128a0:	str	r1, [r0, #4]
   128a4:	ldr	r1, [r9, #4]
   128a8:	b	128b0 <rb_base64_encode@plt+0x18a4>
   128ac:	str	r1, [r8, #40]	; 0x28
   128b0:	cmp	r1, #0
   128b4:	ldr	r2, [sp, #8]
   128b8:	addne	r2, r1, #8
   128bc:	str	r0, [r2]
   128c0:	mov	r0, #0
   128c4:	str	r0, [r9, #4]
   128c8:	str	r0, [r9, #8]
   128cc:	ldr	r0, [r8, #44]	; 0x2c
   128d0:	sub	r0, r0, #1
   128d4:	str	r0, [r8, #44]	; 0x2c
   128d8:	ldr	r0, [r5, #36]	; 0x24
   128dc:	cmp	r0, #1
   128e0:	blt	12900 <rb_base64_encode@plt+0x18f4>
   128e4:	mov	r4, #0
   128e8:	ldr	r0, [r7, r4, lsl #2]
   128ec:	bl	10f04 <rb_close@plt>
   128f0:	ldr	r0, [r5, #36]	; 0x24
   128f4:	add	r4, r4, #1
   128f8:	cmp	r4, r0
   128fc:	blt	128e8 <rb_base64_encode@plt+0x18dc>
   12900:	ldr	r0, [r5, #12]
   12904:	cmp	r0, #0
   12908:	beq	12910 <rb_base64_encode@plt+0x1904>
   1290c:	bl	10e8c <free@plt>
   12910:	mov	r0, r5
   12914:	bl	10e8c <free@plt>
   12918:	cmp	r6, #0
   1291c:	beq	1293c <rb_base64_encode@plt+0x1930>
   12920:	cmn	r6, #1
   12924:	bgt	12844 <rb_base64_encode@plt+0x1838>
   12928:	bl	11000 <__errno_location@plt>
   1292c:	ldr	r0, [r0]
   12930:	bl	10df0 <rb_ignore_errno@plt>
   12934:	cmp	r0, #0
   12938:	bne	12844 <rb_base64_encode@plt+0x1838>
   1293c:	mov	r0, #0
   12940:	bl	10ff4 <exit@plt>
   12944:	sub	sp, fp, #28
   12948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1294c:	andeq	r0, r0, r0
   12950:	add	r2, pc, #40	; 0x28
   12954:	movw	r1, #57840	; 0xe1f0
   12958:	vld1.64	{d16-d17}, [r2 :128]
   1295c:	movt	r1, #50130	; 0xc3d2
   12960:	str	r1, [r0, #16]
   12964:	mov	r1, #24
   12968:	vst1.32	{d16-d17}, [r0], r1
   1296c:	mov	r1, #0
   12970:	str	r1, [r0]
   12974:	str	r1, [r0, #4]
   12978:	bx	lr
   1297c:	nop	{0}
   12980:	strbvs	r2, [r5, -r1, lsl #6]
   12984:	svc	0x00cdab89
   12988:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   1298c:	eorsne	r5, r2, r6, ror r4
   12990:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12994:	add	fp, sp, #24
   12998:	mov	r6, r1
   1299c:	mov	r5, r0
   129a0:	ldrd	r0, [r0, #24]
   129a4:	mov	r4, r2
   129a8:	adds	r2, r0, r2, lsl #3
   129ac:	adc	r3, r1, #0
   129b0:	strd	r2, [r5, #24]
   129b4:	ubfx	r9, r0, #3, #6
   129b8:	add	r0, r9, r4
   129bc:	cmp	r0, #64	; 0x40
   129c0:	bcc	12a20 <rb_base64_encode@plt+0x1a14>
   129c4:	add	r8, r5, #32
   129c8:	rsb	r7, r9, #64	; 0x40
   129cc:	mov	r1, r6
   129d0:	add	r0, r8, r9
   129d4:	mov	r2, r7
   129d8:	bl	10ee0 <memcpy@plt>
   129dc:	mov	r0, r5
   129e0:	mov	r1, r8
   129e4:	bl	12a3c <rb_base64_encode@plt+0x1a30>
   129e8:	eor	r0, r9, #127	; 0x7f
   129ec:	mov	r9, #0
   129f0:	cmp	r0, r4
   129f4:	bcs	12a24 <rb_base64_encode@plt+0x1a18>
   129f8:	add	r1, r6, r7
   129fc:	mov	r0, r5
   12a00:	bl	12a3c <rb_base64_encode@plt+0x1a30>
   12a04:	add	r1, r7, #127	; 0x7f
   12a08:	add	r0, r7, #64	; 0x40
   12a0c:	cmp	r1, r4
   12a10:	mov	r7, r0
   12a14:	bcc	129f8 <rb_base64_encode@plt+0x19ec>
   12a18:	mov	r7, r0
   12a1c:	b	12a24 <rb_base64_encode@plt+0x1a18>
   12a20:	mov	r7, #0
   12a24:	add	r0, r5, r9
   12a28:	add	r1, r6, r7
   12a2c:	sub	r2, r4, r7
   12a30:	add	r0, r0, #32
   12a34:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a38:	b	10ee0 <memcpy@plt>
   12a3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a40:	add	fp, sp, #28
   12a44:	sub	sp, sp, #172	; 0xac
   12a48:	ldr	r5, [r0, #8]
   12a4c:	ldr	r3, [r1, #4]
   12a50:	ldm	r0, {r4, r7}
   12a54:	ldr	r2, [r0, #12]
   12a58:	mov	sl, r0
   12a5c:	str	r0, [sp, #80]	; 0x50
   12a60:	ldr	lr, [r1]
   12a64:	movw	ip, #31129	; 0x7999
   12a68:	ldr	r9, [r1, #8]
   12a6c:	ldr	r8, [r1, #12]
   12a70:	str	r7, [sp, #96]	; 0x60
   12a74:	movt	ip, #23170	; 0x5a82
   12a78:	str	r4, [sp, #88]	; 0x58
   12a7c:	eor	r0, r5, r7, ror #2
   12a80:	rev	r3, r3
   12a84:	mov	r6, r5
   12a88:	str	r5, [sp, #84]	; 0x54
   12a8c:	str	r2, [sp, #92]	; 0x5c
   12a90:	str	r3, [fp, #-32]	; 0xffffffe0
   12a94:	add	r3, r3, r2
   12a98:	and	r0, r0, r4
   12a9c:	eor	r0, r0, r5
   12aa0:	add	r0, r3, r0
   12aa4:	eor	r3, r2, r5
   12aa8:	ldr	r5, [sl, #16]
   12aac:	mov	sl, ip
   12ab0:	and	r3, r3, r7
   12ab4:	eor	r3, r3, r2
   12ab8:	rev	r2, lr
   12abc:	str	r2, [fp, #-36]	; 0xffffffdc
   12ac0:	add	r2, r2, r4, ror #27
   12ac4:	str	r5, [sp, #76]	; 0x4c
   12ac8:	add	r2, r2, r5
   12acc:	add	r2, r2, r3
   12ad0:	add	r3, r2, ip
   12ad4:	add	r0, r0, r3, ror #27
   12ad8:	add	r5, r0, ip
   12adc:	ror	r0, r7, #2
   12ae0:	eor	r0, r0, r4, ror #2
   12ae4:	and	r0, r3, r0
   12ae8:	eor	ip, r0, r7, ror #2
   12aec:	rev	r0, r9
   12af0:	add	r2, r0, r6
   12af4:	str	r0, [fp, #-96]	; 0xffffffa0
   12af8:	add	r0, r2, ip
   12afc:	add	r0, r0, r5, ror #27
   12b00:	add	r6, r0, sl
   12b04:	ror	r0, r3, #2
   12b08:	eor	r0, r0, r4, ror #2
   12b0c:	and	r0, r5, r0
   12b10:	eor	ip, r0, r4, ror #2
   12b14:	rev	r0, r8
   12b18:	add	r2, r0, r7, ror #2
   12b1c:	str	r0, [fp, #-64]	; 0xffffffc0
   12b20:	ldr	r7, [r1, #16]
   12b24:	add	r0, r2, ip
   12b28:	ror	r2, r5, #2
   12b2c:	eor	r2, r2, r3, ror #2
   12b30:	add	r0, r0, r6, ror #27
   12b34:	and	r2, r6, r2
   12b38:	add	r0, r0, sl
   12b3c:	eor	ip, r2, r3, ror #2
   12b40:	rev	r2, r7
   12b44:	add	r7, r2, r4, ror #2
   12b48:	ldr	r4, [r1, #20]
   12b4c:	str	r2, [fp, #-68]	; 0xffffffbc
   12b50:	add	r2, r7, ip
   12b54:	ror	r7, r6, #2
   12b58:	mov	ip, sl
   12b5c:	eor	r7, r7, r5, ror #2
   12b60:	add	r2, r2, r0, ror #27
   12b64:	rev	r4, r4
   12b68:	and	r7, r0, r7
   12b6c:	add	r3, r4, r3, ror #2
   12b70:	str	r4, [fp, #-92]	; 0xffffffa4
   12b74:	ror	r4, r0, #2
   12b78:	add	r2, r2, sl
   12b7c:	eor	r7, r7, r5, ror #2
   12b80:	eor	r4, r4, r6, ror #2
   12b84:	add	r3, r3, r7
   12b88:	ldr	r7, [r1, #24]
   12b8c:	and	r4, r2, r4
   12b90:	add	r3, r3, r2, ror #27
   12b94:	eor	r4, r4, r6, ror #2
   12b98:	add	r3, r3, sl
   12b9c:	rev	r7, r7
   12ba0:	add	r5, r7, r5, ror #2
   12ba4:	str	r7, [fp, #-88]	; 0xffffffa8
   12ba8:	ldr	r7, [r1, #28]
   12bac:	add	r4, r5, r4
   12bb0:	add	r4, r4, r3, ror #27
   12bb4:	rev	r7, r7
   12bb8:	add	r5, r4, sl
   12bbc:	ror	r4, r2, #2
   12bc0:	add	r6, r7, r6, ror #2
   12bc4:	str	r7, [fp, #-60]	; 0xffffffc4
   12bc8:	ldr	r7, [r1, #32]
   12bcc:	eor	r4, r4, r0, ror #2
   12bd0:	and	r4, r3, r4
   12bd4:	eor	r4, r4, r0, ror #2
   12bd8:	rev	lr, r7
   12bdc:	ldr	r7, [r1, #36]	; 0x24
   12be0:	add	r0, lr, r0, ror #2
   12be4:	str	lr, [sp, #64]	; 0x40
   12be8:	add	r4, r6, r4
   12bec:	add	r4, r4, r5, ror #27
   12bf0:	rev	r7, r7
   12bf4:	add	r6, r4, sl
   12bf8:	ror	r4, r3, #2
   12bfc:	str	r7, [fp, #-56]	; 0xffffffc8
   12c00:	eor	r4, r4, r2, ror #2
   12c04:	and	r4, r5, r4
   12c08:	eor	r4, r4, r2, ror #2
   12c0c:	add	r2, r7, r2, ror #2
   12c10:	add	r0, r0, r4
   12c14:	ror	r4, r5, #2
   12c18:	eor	r4, r4, r3, ror #2
   12c1c:	add	r0, r0, r6, ror #27
   12c20:	and	r4, r6, r4
   12c24:	add	r0, r0, sl
   12c28:	eor	r4, r4, r3, ror #2
   12c2c:	add	r2, r2, r4
   12c30:	ldr	r4, [r1, #40]	; 0x28
   12c34:	add	r2, r2, r0, ror #27
   12c38:	add	r8, r2, sl
   12c3c:	ror	r2, r6, #2
   12c40:	eor	r2, r2, r5, ror #2
   12c44:	rev	r7, r4
   12c48:	ldr	r4, [r1, #52]	; 0x34
   12c4c:	add	r3, r7, r3, ror #2
   12c50:	str	r7, [fp, #-52]	; 0xffffffcc
   12c54:	and	r2, r0, r2
   12c58:	eor	r2, r2, r5, ror #2
   12c5c:	rev	r4, r4
   12c60:	add	r2, r3, r2
   12c64:	ldr	r3, [r1, #44]	; 0x2c
   12c68:	mov	r7, r4
   12c6c:	str	r4, [fp, #-80]	; 0xffffffb0
   12c70:	add	r2, r2, r8, ror #27
   12c74:	add	r9, r2, sl
   12c78:	ror	r2, r0, #2
   12c7c:	eor	r2, r2, r6, ror #2
   12c80:	rev	r3, r3
   12c84:	str	r3, [fp, #-48]	; 0xffffffd0
   12c88:	add	r3, r3, r5, ror #2
   12c8c:	and	r2, r8, r2
   12c90:	eor	r2, r2, r6, ror #2
   12c94:	add	r2, r3, r2
   12c98:	ldr	r3, [r1, #48]	; 0x30
   12c9c:	add	r2, r2, r9, ror #27
   12ca0:	add	r5, r2, sl
   12ca4:	ror	r2, r8, #2
   12ca8:	eor	r2, r2, r0, ror #2
   12cac:	rev	r3, r3
   12cb0:	str	r3, [fp, #-44]	; 0xffffffd4
   12cb4:	add	r3, r3, r6, ror #2
   12cb8:	and	r2, r9, r2
   12cbc:	eor	r2, r2, r0, ror #2
   12cc0:	add	r0, r4, r0, ror #2
   12cc4:	ldr	r4, [r1, #56]	; 0x38
   12cc8:	ldr	r1, [r1, #60]	; 0x3c
   12ccc:	add	r2, r3, r2
   12cd0:	add	r2, r2, r5, ror #27
   12cd4:	rev	r6, r4
   12cd8:	add	r3, r2, sl
   12cdc:	ror	r2, r9, #2
   12ce0:	add	r4, r6, r8, ror #2
   12ce4:	str	r6, [fp, #-40]	; 0xffffffd8
   12ce8:	eor	r2, r2, r8, ror #2
   12cec:	and	r2, r5, r2
   12cf0:	eor	r2, r2, r8, ror #2
   12cf4:	add	r0, r0, r2
   12cf8:	add	r0, r0, r3, ror #27
   12cfc:	add	r2, r0, sl
   12d00:	ror	r0, r5, #2
   12d04:	eor	r0, r0, r9, ror #2
   12d08:	and	r0, r3, r0
   12d0c:	eor	r0, r0, r9, ror #2
   12d10:	add	r0, r4, r0
   12d14:	ror	r4, r3, #2
   12d18:	add	r0, r0, r2, ror #27
   12d1c:	eor	r4, r4, r5, ror #2
   12d20:	and	r4, r2, r4
   12d24:	add	r0, r0, sl
   12d28:	rev	sl, r1
   12d2c:	add	r1, sl, r9, ror #2
   12d30:	eor	r4, r4, r5, ror #2
   12d34:	ldr	r9, [fp, #-96]	; 0xffffffa0
   12d38:	str	sl, [fp, #-84]	; 0xffffffac
   12d3c:	add	r1, r1, r4
   12d40:	ror	r4, r2, #2
   12d44:	eor	r4, r4, r3, ror #2
   12d48:	add	r1, r1, r0, ror #27
   12d4c:	and	r4, r0, r4
   12d50:	add	r1, r1, ip
   12d54:	eor	r8, r4, r3, ror #2
   12d58:	ldr	r4, [fp, #-36]	; 0xffffffdc
   12d5c:	eor	r6, r9, r4
   12d60:	ror	r4, r0, #2
   12d64:	eor	r6, r6, lr
   12d68:	eor	r4, r4, r2, ror #2
   12d6c:	eor	r7, r6, r7
   12d70:	ror	r6, r7, #31
   12d74:	str	r7, [fp, #-76]	; 0xffffffb4
   12d78:	ldr	r7, [fp, #-40]	; 0xffffffd8
   12d7c:	and	r4, r1, r4
   12d80:	add	r6, r6, r5, ror #2
   12d84:	ldr	r5, [fp, #-32]	; 0xffffffe0
   12d88:	eor	r4, r4, r2, ror #2
   12d8c:	add	r6, r6, r8
   12d90:	ldr	r8, [fp, #-64]	; 0xffffffc0
   12d94:	add	r6, r6, r1, ror #27
   12d98:	add	lr, r6, ip
   12d9c:	eor	r6, r8, r5
   12da0:	ldr	r5, [fp, #-56]	; 0xffffffc8
   12da4:	eor	r6, r6, r5
   12da8:	mov	r5, ip
   12dac:	eor	r7, r6, r7
   12db0:	ror	r6, r7, #31
   12db4:	str	r7, [fp, #-72]	; 0xffffffb8
   12db8:	ldr	r7, [fp, #-68]	; 0xffffffbc
   12dbc:	add	r3, r6, r3, ror #2
   12dc0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12dc4:	add	r3, r3, r4
   12dc8:	add	r3, r3, lr, ror #27
   12dcc:	eor	r4, r7, r9
   12dd0:	eor	r4, r4, r6
   12dd4:	add	ip, r3, ip
   12dd8:	ror	r3, r1, #2
   12ddc:	eor	r4, r4, sl
   12de0:	eor	r3, r3, r0, ror #2
   12de4:	ror	r6, r4, #31
   12de8:	mov	r9, r4
   12dec:	add	r2, r6, r2, ror #2
   12df0:	str	r6, [sp, #72]	; 0x48
   12df4:	ldr	r6, [fp, #-92]	; 0xffffffa4
   12df8:	str	r9, [sp, #100]	; 0x64
   12dfc:	and	r3, lr, r3
   12e00:	eor	r3, r3, r0, ror #2
   12e04:	add	r2, r2, r3
   12e08:	eor	r4, r6, r8
   12e0c:	movw	r8, #60321	; 0xeba1
   12e10:	add	r2, r2, ip, ror #27
   12e14:	movt	r8, #28377	; 0x6ed9
   12e18:	add	r3, r2, r5
   12e1c:	ror	r2, lr, #2
   12e20:	eor	r2, r2, r1, ror #2
   12e24:	and	r2, ip, r2
   12e28:	eor	sl, r2, r1, ror #2
   12e2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12e30:	eor	r4, r4, r2
   12e34:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12e38:	eor	r2, r4, r2, ror #31
   12e3c:	str	r2, [fp, #-64]	; 0xffffffc0
   12e40:	ror	r2, r2, #31
   12e44:	add	r0, r2, r0, ror #2
   12e48:	str	r2, [sp, #68]	; 0x44
   12e4c:	add	r0, r0, sl
   12e50:	ldr	sl, [fp, #-88]	; 0xffffffa8
   12e54:	add	r0, r0, r3, ror #27
   12e58:	add	r2, r0, r5
   12e5c:	ldr	r5, [fp, #-72]	; 0xffffffb8
   12e60:	ror	r0, ip, #2
   12e64:	eor	r4, sl, r7
   12e68:	ldr	r7, [fp, #-44]	; 0xffffffd4
   12e6c:	eor	r0, r0, lr, ror #2
   12e70:	eor	r0, r0, r3
   12e74:	eor	r4, r4, r7
   12e78:	ldr	r7, [fp, #-60]	; 0xffffffc4
   12e7c:	eor	r4, r4, r5, ror #31
   12e80:	ror	r5, r4, #31
   12e84:	str	r4, [fp, #-68]	; 0xffffffbc
   12e88:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12e8c:	add	r1, r5, r1, ror #2
   12e90:	eor	r6, r7, r6
   12e94:	str	r5, [sp, #48]	; 0x30
   12e98:	add	r0, r1, r0
   12e9c:	eor	r6, r6, r4
   12ea0:	add	r0, r0, r2, ror #27
   12ea4:	ldr	r4, [sp, #64]	; 0x40
   12ea8:	eor	r9, r6, r9, ror #31
   12eac:	add	r1, r0, r8
   12eb0:	ror	r0, r3, #2
   12eb4:	eor	r0, r0, ip, ror #2
   12eb8:	ror	r5, r9, #31
   12ebc:	str	r9, [fp, #-92]	; 0xffffffa4
   12ec0:	add	r6, r5, lr, ror #2
   12ec4:	str	r5, [sp, #36]	; 0x24
   12ec8:	eor	r5, r4, sl
   12ecc:	eor	r0, r0, r2
   12ed0:	add	r0, r6, r0
   12ed4:	ror	r6, r2, #2
   12ed8:	eor	r6, r6, r3, ror #2
   12edc:	add	r0, r0, r1, ror #27
   12ee0:	eor	lr, r6, r1
   12ee4:	ldr	r6, [fp, #-40]	; 0xffffffd8
   12ee8:	add	r0, r0, r8
   12eec:	eor	r5, r5, r6
   12ef0:	ldr	r6, [fp, #-64]	; 0xffffffc0
   12ef4:	eor	sl, r5, r6, ror #31
   12ef8:	ror	r6, sl, #31
   12efc:	str	sl, [fp, #-96]	; 0xffffffa0
   12f00:	add	r5, r6, ip, ror #2
   12f04:	ldr	ip, [fp, #-56]	; 0xffffffc8
   12f08:	str	r6, [sp, #20]
   12f0c:	add	r6, r5, lr
   12f10:	add	r6, r6, r0, ror #27
   12f14:	eor	r5, ip, r7
   12f18:	ldr	r7, [fp, #-84]	; 0xffffffac
   12f1c:	add	lr, r6, r8
   12f20:	ror	r6, r1, #2
   12f24:	eor	r6, r6, r2, ror #2
   12f28:	eor	r5, r5, r7
   12f2c:	ldr	r7, [fp, #-68]	; 0xffffffbc
   12f30:	eor	r6, r6, r0
   12f34:	eor	r5, r5, r7, ror #31
   12f38:	ror	r7, r5, #31
   12f3c:	str	r5, [fp, #-36]	; 0xffffffdc
   12f40:	add	r3, r7, r3, ror #2
   12f44:	str	r7, [sp, #12]
   12f48:	ldr	r7, [fp, #-52]	; 0xffffffcc
   12f4c:	add	r3, r3, r6
   12f50:	ror	r6, r0, #2
   12f54:	eor	r6, r6, r1, ror #2
   12f58:	add	r3, r3, lr, ror #27
   12f5c:	eor	r5, r7, r4
   12f60:	ldr	r4, [fp, #-76]	; 0xffffffb4
   12f64:	eor	r6, r6, lr
   12f68:	add	r3, r3, r8
   12f6c:	eor	r5, r5, r4, ror #31
   12f70:	eor	r5, r5, r9, ror #31
   12f74:	ldr	r9, [fp, #-48]	; 0xffffffd0
   12f78:	ror	r4, r5, #31
   12f7c:	str	r5, [fp, #-32]	; 0xffffffe0
   12f80:	add	r2, r4, r2, ror #2
   12f84:	str	r4, [sp, #8]
   12f88:	ldr	r4, [fp, #-72]	; 0xffffffb8
   12f8c:	eor	r5, r9, ip
   12f90:	ldr	ip, [fp, #-44]	; 0xffffffd4
   12f94:	add	r2, r2, r6
   12f98:	ror	r6, lr, #2
   12f9c:	eor	r6, r6, r0, ror #2
   12fa0:	add	r2, r2, r3, ror #27
   12fa4:	eor	r5, r5, r4, ror #31
   12fa8:	ldr	r4, [sp, #100]	; 0x64
   12fac:	eor	r6, r6, r3
   12fb0:	add	r2, r2, r8
   12fb4:	eor	r5, r5, sl, ror #31
   12fb8:	ldr	sl, [fp, #-40]	; 0xffffffd8
   12fbc:	str	r5, [fp, #-60]	; 0xffffffc4
   12fc0:	ror	r5, r5, #31
   12fc4:	add	r1, r5, r1, ror #2
   12fc8:	str	r5, [sp, #64]	; 0x40
   12fcc:	eor	r5, ip, r7
   12fd0:	mov	r7, r8
   12fd4:	eor	r5, r5, r4, ror #31
   12fd8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   12fdc:	add	r1, r1, r6
   12fe0:	ror	r6, r3, #2
   12fe4:	eor	r6, r6, lr, ror #2
   12fe8:	add	r1, r1, r2, ror #27
   12fec:	eor	r4, r5, r4, ror #31
   12ff0:	eor	r6, r6, r2
   12ff4:	add	r1, r1, r8
   12ff8:	ror	r5, r4, #31
   12ffc:	str	r4, [fp, #-56]	; 0xffffffc8
   13000:	ldr	r4, [fp, #-64]	; 0xffffffc0
   13004:	add	r0, r5, r0, ror #2
   13008:	str	r5, [sp, #4]
   1300c:	add	r0, r0, r6
   13010:	ror	r6, r2, #2
   13014:	add	r0, r0, r1, ror #27
   13018:	eor	r6, r6, r3, ror #2
   1301c:	add	r0, r0, r8
   13020:	ldr	r8, [fp, #-80]	; 0xffffffb0
   13024:	eor	r6, r6, r1
   13028:	eor	r5, r8, r9
   1302c:	ldr	r9, [fp, #-76]	; 0xffffffb4
   13030:	eor	r5, r5, r4, ror #31
   13034:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13038:	eor	r4, r5, r4, ror #31
   1303c:	str	r4, [fp, #-52]	; 0xffffffcc
   13040:	ror	r4, r4, #31
   13044:	add	r5, r4, lr, ror #2
   13048:	str	r4, [sp, #16]
   1304c:	mov	r4, r7
   13050:	add	r6, r5, r6
   13054:	eor	r5, sl, ip
   13058:	mov	ip, r4
   1305c:	add	r6, r6, r0, ror #27
   13060:	add	lr, r6, r7
   13064:	ldr	r7, [fp, #-68]	; 0xffffffbc
   13068:	ror	r6, r1, #2
   1306c:	eor	r6, r6, r2, ror #2
   13070:	eor	r6, r6, r0
   13074:	eor	r5, r5, r7, ror #31
   13078:	ldr	r7, [fp, #-60]	; 0xffffffc4
   1307c:	eor	r7, r5, r7, ror #31
   13080:	ldr	r5, [fp, #-92]	; 0xffffffa4
   13084:	str	r7, [fp, #-48]	; 0xffffffd0
   13088:	ror	r7, r7, #31
   1308c:	add	r3, r7, r3, ror #2
   13090:	str	r7, [sp, #60]	; 0x3c
   13094:	add	r3, r3, r6
   13098:	ror	r6, r0, #2
   1309c:	add	r3, r3, lr, ror #27
   130a0:	eor	r6, r6, r1, ror #2
   130a4:	add	r3, r3, r4
   130a8:	ldr	r4, [fp, #-84]	; 0xffffffac
   130ac:	eor	r6, r6, lr
   130b0:	eor	r7, r4, r8
   130b4:	ldr	r8, [fp, #-72]	; 0xffffffb8
   130b8:	eor	r7, r7, r5, ror #31
   130bc:	ldr	r5, [fp, #-56]	; 0xffffffc8
   130c0:	eor	r5, r7, r5, ror #31
   130c4:	ldr	r7, [fp, #-96]	; 0xffffffa0
   130c8:	str	r5, [fp, #-44]	; 0xffffffd4
   130cc:	ror	r5, r5, #31
   130d0:	add	r2, r5, r2, ror #2
   130d4:	str	r5, [sp, #56]	; 0x38
   130d8:	add	r2, r2, r6
   130dc:	ror	r6, lr, #2
   130e0:	eor	r6, r6, r0, ror #2
   130e4:	add	r2, r2, r3, ror #27
   130e8:	eor	r5, r6, r3
   130ec:	eor	r6, sl, r9, ror #31
   130f0:	add	r2, r2, ip
   130f4:	eor	r6, r6, r7, ror #31
   130f8:	ldr	r7, [fp, #-52]	; 0xffffffcc
   130fc:	eor	r6, r6, r7, ror #31
   13100:	ldr	r7, [fp, #-36]	; 0xffffffdc
   13104:	str	r6, [fp, #-40]	; 0xffffffd8
   13108:	ror	r6, r6, #31
   1310c:	add	r1, r6, r1, ror #2
   13110:	str	r6, [sp, #52]	; 0x34
   13114:	mov	r6, ip
   13118:	add	r1, r1, r5
   1311c:	ror	r5, r3, #2
   13120:	add	r1, r1, r2, ror #27
   13124:	eor	r5, r5, lr, ror #2
   13128:	add	r1, r1, ip
   1312c:	eor	ip, r5, r2
   13130:	eor	r5, r4, r8, ror #31
   13134:	ldr	r4, [fp, #-48]	; 0xffffffd0
   13138:	eor	r5, r5, r7, ror #31
   1313c:	eor	r4, r5, r4, ror #31
   13140:	ror	r5, r2, #2
   13144:	eor	r5, r5, r3, ror #2
   13148:	ror	r7, r4, #31
   1314c:	str	r4, [fp, #-88]	; 0xffffffa8
   13150:	add	r0, r7, r0, ror #2
   13154:	str	r7, [sp, #24]
   13158:	ldr	r7, [fp, #-32]	; 0xffffffe0
   1315c:	add	r0, r0, ip
   13160:	eor	ip, r5, r1
   13164:	ldr	r5, [sp, #72]	; 0x48
   13168:	add	r0, r0, r1, ror #27
   1316c:	add	r0, r0, r6
   13170:	eor	r6, r5, r9, ror #31
   13174:	ldr	r5, [fp, #-44]	; 0xffffffd4
   13178:	eor	r6, r6, r7, ror #31
   1317c:	movw	r7, #60321	; 0xeba1
   13180:	movt	r7, #28377	; 0x6ed9
   13184:	eor	sl, r6, r5, ror #31
   13188:	ror	r5, sl, #31
   1318c:	str	sl, [sp]
   13190:	add	r6, r5, lr, ror #2
   13194:	str	r5, [sp, #44]	; 0x2c
   13198:	add	r6, r6, ip
   1319c:	add	r6, r6, r0, ror #27
   131a0:	add	r9, r6, r7
   131a4:	ldr	r7, [sp, #68]	; 0x44
   131a8:	ror	r6, r1, #2
   131ac:	eor	r6, r6, r2, ror #2
   131b0:	eor	r6, r6, r0
   131b4:	eor	r5, r7, r8, ror #31
   131b8:	ldr	r7, [fp, #-60]	; 0xffffffc4
   131bc:	eor	r5, r5, r7, ror #31
   131c0:	ldr	r7, [fp, #-40]	; 0xffffffd8
   131c4:	eor	r7, r5, r7, ror #31
   131c8:	ror	r5, r7, #31
   131cc:	mov	r8, r7
   131d0:	str	r7, [fp, #-84]	; 0xffffffac
   131d4:	ldr	r7, [sp, #48]	; 0x30
   131d8:	add	r3, r5, r3, ror #2
   131dc:	str	r5, [sp, #40]	; 0x28
   131e0:	movw	r5, #60321	; 0xeba1
   131e4:	movt	r5, #28377	; 0x6ed9
   131e8:	add	r3, r3, r6
   131ec:	ldr	r6, [sp, #100]	; 0x64
   131f0:	add	r3, r3, r9, ror #27
   131f4:	add	ip, r3, r5
   131f8:	ror	r3, r0, #2
   131fc:	eor	r6, r7, r6, ror #31
   13200:	ldr	r7, [fp, #-56]	; 0xffffffc8
   13204:	eor	r3, r3, r1, ror #2
   13208:	eor	r3, r3, r9
   1320c:	eor	r6, r6, r7, ror #31
   13210:	eor	r7, r6, r4, ror #31
   13214:	ldr	r4, [fp, #-64]	; 0xffffffc0
   13218:	ror	r6, r7, #31
   1321c:	str	r7, [fp, #-80]	; 0xffffffb0
   13220:	add	r2, r6, r2, ror #2
   13224:	str	r6, [sp, #32]
   13228:	add	r2, r2, r3
   1322c:	ldr	r3, [sp, #36]	; 0x24
   13230:	add	r2, r2, ip, ror #27
   13234:	add	lr, r2, r5
   13238:	ror	r2, r9, #2
   1323c:	eor	r3, r3, r4, ror #31
   13240:	ldr	r4, [fp, #-52]	; 0xffffffcc
   13244:	eor	r2, r2, r0, ror #2
   13248:	eor	r2, r2, ip
   1324c:	eor	r3, r3, r4, ror #31
   13250:	eor	r3, r3, sl, ror #31
   13254:	ror	r4, r3, #31
   13258:	mov	r6, r3
   1325c:	str	r3, [fp, #-76]	; 0xffffffb4
   13260:	ldr	r3, [sp, #20]
   13264:	add	r1, r4, r1, ror #2
   13268:	str	r4, [sp, #28]
   1326c:	ldr	r4, [fp, #-68]	; 0xffffffbc
   13270:	add	r1, r1, r2
   13274:	add	r1, r1, lr, ror #27
   13278:	eor	r3, r3, r4, ror #31
   1327c:	ldr	r4, [fp, #-48]	; 0xffffffd0
   13280:	add	r2, r1, r5
   13284:	ror	r1, ip, #2
   13288:	eor	r1, r1, r9, ror #2
   1328c:	eor	r3, r3, r4, ror #31
   13290:	eor	r1, r1, lr
   13294:	eor	r3, r3, r8, ror #31
   13298:	mov	r8, r5
   1329c:	ror	r4, r3, #31
   132a0:	str	r3, [sp, #100]	; 0x64
   132a4:	ldr	r3, [sp, #12]
   132a8:	add	r0, r4, r0, ror #2
   132ac:	str	r4, [sp, #36]	; 0x24
   132b0:	ldr	r4, [fp, #-92]	; 0xffffffa4
   132b4:	add	r0, r0, r1
   132b8:	add	r0, r0, r2, ror #27
   132bc:	eor	r3, r3, r4, ror #31
   132c0:	ldr	r4, [fp, #-44]	; 0xffffffd4
   132c4:	add	r1, r0, r5
   132c8:	ror	r0, lr, #2
   132cc:	eor	r0, r0, ip, ror #2
   132d0:	eor	r3, r3, r4, ror #31
   132d4:	eor	r0, r0, r2
   132d8:	eor	r3, r3, r7, ror #31
   132dc:	ldr	r7, [fp, #-96]	; 0xffffffa0
   132e0:	ror	r5, r3, #31
   132e4:	mov	r4, r3
   132e8:	str	r3, [fp, #-68]	; 0xffffffbc
   132ec:	add	r3, r5, r9, ror #2
   132f0:	str	r5, [sp, #48]	; 0x30
   132f4:	ldr	r5, [sp, #8]
   132f8:	add	r0, r3, r0
   132fc:	add	r0, r0, r1, ror #27
   13300:	eor	r5, r5, r7, ror #31
   13304:	ldr	r7, [fp, #-40]	; 0xffffffd8
   13308:	add	r3, r0, r8
   1330c:	ror	r0, r2, #2
   13310:	eor	r0, r0, lr, ror #2
   13314:	eor	r5, r5, r7, ror #31
   13318:	eor	r0, r0, r1
   1331c:	ldr	r7, [fp, #-32]	; 0xffffffe0
   13320:	eor	r5, r5, r6, ror #31
   13324:	ror	r6, r5, #31
   13328:	str	r5, [fp, #-64]	; 0xffffffc0
   1332c:	str	r6, [sp, #68]	; 0x44
   13330:	add	r6, r6, ip, ror #2
   13334:	add	r0, r6, r0
   13338:	add	r0, r0, r3, ror #27
   1333c:	add	r0, r0, r8
   13340:	orr	r6, r0, r3, ror #2
   13344:	and	r5, r0, r3, ror #2
   13348:	and	r6, r6, r1, ror #2
   1334c:	orr	r6, r6, r5
   13350:	ldr	r5, [sp, #4]
   13354:	eor	r5, r5, r7, ror #31
   13358:	eor	r5, r5, sl, ror #31
   1335c:	ldr	sl, [sp, #100]	; 0x64
   13360:	eor	r5, r5, r4, ror #31
   13364:	ror	r7, r5, #31
   13368:	mov	r9, r5
   1336c:	str	r5, [fp, #-72]	; 0xffffffb8
   13370:	add	r5, r7, r2, ror #2
   13374:	str	r7, [sp, #72]	; 0x48
   13378:	ldr	r7, [sp, #64]	; 0x40
   1337c:	add	r6, r5, r6
   13380:	ror	r5, r1, #2
   13384:	eor	r2, r5, r2, ror #2
   13388:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1338c:	eor	r2, r2, r3
   13390:	eor	r5, r7, r5, ror #31
   13394:	ldr	r7, [fp, #-88]	; 0xffffffa8
   13398:	eor	r5, r5, r7, ror #31
   1339c:	eor	r7, r5, sl, ror #31
   133a0:	ror	r5, r7, #31
   133a4:	str	r7, [fp, #-96]	; 0xffffffa0
   133a8:	str	r5, [sp, #20]
   133ac:	add	r5, r5, lr, ror #2
   133b0:	add	r2, r5, r2
   133b4:	add	r2, r2, r0, ror #27
   133b8:	add	r4, r2, r8
   133bc:	add	r2, r6, r4, ror #27
   133c0:	movw	r6, #48348	; 0xbcdc
   133c4:	and	r5, r4, r0, ror #2
   133c8:	movt	r6, #36635	; 0x8f1b
   133cc:	add	r2, r2, r6
   133d0:	mov	ip, r6
   133d4:	orr	r6, r4, r0, ror #2
   133d8:	and	r6, r6, r3, ror #2
   133dc:	orr	r8, r6, r5
   133e0:	ldr	r6, [sp, #16]
   133e4:	ldr	r5, [fp, #-60]	; 0xffffffc4
   133e8:	eor	r5, r6, r5, ror #31
   133ec:	ldr	r6, [fp, #-84]	; 0xffffffac
   133f0:	eor	r5, r5, r6, ror #31
   133f4:	ldr	r6, [fp, #-64]	; 0xffffffc0
   133f8:	eor	lr, r5, r6, ror #31
   133fc:	and	r5, r2, r4, ror #2
   13400:	ror	r6, lr, #31
   13404:	str	lr, [fp, #-60]	; 0xffffffc4
   13408:	add	r1, r6, r1, ror #2
   1340c:	str	r6, [sp, #64]	; 0x40
   13410:	orr	r6, r2, r4, ror #2
   13414:	add	r1, r1, r8
   13418:	and	r6, r6, r0, ror #2
   1341c:	mov	r8, ip
   13420:	add	r1, r1, r2, ror #27
   13424:	add	r1, r1, ip
   13428:	orr	ip, r6, r5
   1342c:	ldr	r5, [sp, #60]	; 0x3c
   13430:	ldr	r6, [fp, #-56]	; 0xffffffc8
   13434:	eor	r5, r5, r6, ror #31
   13438:	ldr	r6, [fp, #-80]	; 0xffffffb0
   1343c:	eor	r5, r5, r6, ror #31
   13440:	orr	r6, r1, r2, ror #2
   13444:	eor	r5, r5, r7, ror #31
   13448:	and	r6, r6, r4, ror #2
   1344c:	ror	r7, r5, #31
   13450:	str	r5, [fp, #-32]	; 0xffffffe0
   13454:	and	r5, r1, r2, ror #2
   13458:	add	r3, r7, r3, ror #2
   1345c:	str	r7, [sp, #60]	; 0x3c
   13460:	ldr	r7, [fp, #-52]	; 0xffffffcc
   13464:	orr	r6, r6, r5
   13468:	ldr	r5, [sp, #56]	; 0x38
   1346c:	add	r3, r3, ip
   13470:	mov	ip, r8
   13474:	add	r3, r3, r1, ror #27
   13478:	eor	r5, r5, r7, ror #31
   1347c:	ldr	r7, [fp, #-76]	; 0xffffffb4
   13480:	add	r3, r3, r8
   13484:	eor	r5, r5, r7, ror #31
   13488:	eor	r5, r5, r9, ror #31
   1348c:	ror	r7, r5, #31
   13490:	mov	r9, r5
   13494:	str	r5, [fp, #-52]	; 0xffffffcc
   13498:	and	r5, r3, r1, ror #2
   1349c:	add	r0, r7, r0, ror #2
   134a0:	str	r7, [sp, #56]	; 0x38
   134a4:	ldr	r7, [fp, #-48]	; 0xffffffd0
   134a8:	add	r0, r0, r6
   134ac:	orr	r6, r3, r1, ror #2
   134b0:	add	r0, r0, r3, ror #27
   134b4:	and	r6, r6, r2, ror #2
   134b8:	add	r0, r0, r8
   134bc:	orr	r6, r6, r5
   134c0:	ldr	r5, [sp, #52]	; 0x34
   134c4:	eor	r5, r5, r7, ror #31
   134c8:	eor	r5, r5, sl, ror #31
   134cc:	eor	r5, r5, lr, ror #31
   134d0:	ror	r7, r5, #31
   134d4:	mov	lr, r5
   134d8:	add	r5, r7, r4, ror #2
   134dc:	str	r7, [sp, #52]	; 0x34
   134e0:	ldr	r7, [sp, #24]
   134e4:	str	lr, [sp, #16]
   134e8:	add	r6, r5, r6
   134ec:	and	r5, r0, r3, ror #2
   134f0:	add	r6, r6, r0, ror #27
   134f4:	add	sl, r6, r8
   134f8:	orr	r6, r0, r3, ror #2
   134fc:	and	r6, r6, r1, ror #2
   13500:	orr	r6, r6, r5
   13504:	ldr	r5, [fp, #-44]	; 0xffffffd4
   13508:	eor	r7, r7, r5, ror #31
   1350c:	ldr	r5, [fp, #-68]	; 0xffffffbc
   13510:	eor	r7, r7, r5, ror #31
   13514:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13518:	eor	r8, r7, r5, ror #31
   1351c:	ldr	r5, [fp, #-64]	; 0xffffffc0
   13520:	ror	r4, r8, #31
   13524:	str	r8, [fp, #-48]	; 0xffffffd0
   13528:	add	r2, r4, r2, ror #2
   1352c:	str	r4, [fp, #-44]	; 0xffffffd4
   13530:	ldr	r4, [sp, #44]	; 0x2c
   13534:	add	r2, r2, r6
   13538:	and	r6, sl, r0, ror #2
   1353c:	add	r2, r2, sl, ror #27
   13540:	add	r7, r2, ip
   13544:	orr	r2, sl, r0, ror #2
   13548:	and	r2, r2, r3, ror #2
   1354c:	orr	r2, r2, r6
   13550:	ldr	r6, [fp, #-40]	; 0xffffffd8
   13554:	eor	r6, r4, r6, ror #31
   13558:	and	r4, r7, sl, ror #2
   1355c:	eor	r6, r6, r5, ror #31
   13560:	eor	r6, r6, r9, ror #31
   13564:	mov	r9, lr
   13568:	ror	r5, r6, #31
   1356c:	str	r6, [fp, #-56]	; 0xffffffc8
   13570:	add	r1, r5, r1, ror #2
   13574:	str	r5, [sp, #44]	; 0x2c
   13578:	ldr	r5, [sp, #40]	; 0x28
   1357c:	add	r1, r1, r2
   13580:	orr	r2, r7, sl, ror #2
   13584:	add	r1, r1, r7, ror #27
   13588:	and	r2, r2, r0, ror #2
   1358c:	add	r1, r1, ip
   13590:	orr	r2, r2, r4
   13594:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13598:	eor	r4, r5, r4, ror #31
   1359c:	ldr	r5, [fp, #-96]	; 0xffffffa0
   135a0:	eor	r4, r4, r5, ror #31
   135a4:	eor	lr, r4, lr, ror #31
   135a8:	and	r4, r1, r7, ror #2
   135ac:	ror	r5, lr, #31
   135b0:	str	lr, [fp, #-88]	; 0xffffffa8
   135b4:	add	r3, r5, r3, ror #2
   135b8:	str	r5, [sp, #40]	; 0x28
   135bc:	ldr	r5, [sp]
   135c0:	add	r2, r3, r2
   135c4:	add	r2, r2, r1, ror #27
   135c8:	add	r3, r2, ip
   135cc:	orr	r2, r1, r7, ror #2
   135d0:	and	r2, r2, sl, ror #2
   135d4:	orr	r2, r2, r4
   135d8:	ldr	r4, [sp, #32]
   135dc:	eor	r4, r4, r5, ror #31
   135e0:	ldr	r5, [fp, #-72]	; 0xffffffb8
   135e4:	eor	r4, r4, r5, ror #31
   135e8:	ldr	r5, [fp, #-84]	; 0xffffffac
   135ec:	eor	r8, r4, r8, ror #31
   135f0:	and	r4, r3, r1, ror #2
   135f4:	ror	ip, r8, #31
   135f8:	str	r8, [fp, #-92]	; 0xffffffa4
   135fc:	add	r0, ip, r0, ror #2
   13600:	str	ip, [sp, #32]
   13604:	movw	ip, #48348	; 0xbcdc
   13608:	movt	ip, #36635	; 0x8f1b
   1360c:	add	r0, r0, r2
   13610:	orr	r2, r3, r1, ror #2
   13614:	add	r0, r0, r3, ror #27
   13618:	and	r2, r2, r7, ror #2
   1361c:	add	r0, r0, ip
   13620:	orr	r2, r2, r4
   13624:	ldr	r4, [sp, #28]
   13628:	eor	r4, r4, r5, ror #31
   1362c:	ldr	r5, [fp, #-60]	; 0xffffffc4
   13630:	eor	r4, r4, r5, ror #31
   13634:	ldr	r5, [fp, #-76]	; 0xffffffb4
   13638:	eor	r4, r4, r6, ror #31
   1363c:	ror	r6, r4, #31
   13640:	str	r4, [fp, #-36]	; 0xffffffdc
   13644:	add	r4, r6, sl, ror #2
   13648:	str	r6, [sp, #28]
   1364c:	add	r2, r4, r2
   13650:	and	r4, r0, r3, ror #2
   13654:	add	r2, r2, r0, ror #27
   13658:	add	r6, r2, ip
   1365c:	orr	r2, r0, r3, ror #2
   13660:	and	r2, r2, r1, ror #2
   13664:	orr	sl, r2, r4
   13668:	ldr	r4, [sp, #36]	; 0x24
   1366c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13670:	eor	r4, r4, r2, ror #31
   13674:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13678:	eor	r4, r4, r2, ror #31
   1367c:	eor	lr, r4, lr, ror #31
   13680:	ror	r2, lr, #31
   13684:	str	lr, [fp, #-80]	; 0xffffffb0
   13688:	add	r4, r2, r7, ror #2
   1368c:	str	r2, [sp, #36]	; 0x24
   13690:	add	r2, r4, sl
   13694:	and	r4, r6, r0, ror #2
   13698:	add	r2, r2, r6, ror #27
   1369c:	add	r7, r2, ip
   136a0:	orr	r2, r6, r0, ror #2
   136a4:	and	r2, r2, r3, ror #2
   136a8:	orr	r2, r2, r4
   136ac:	ldr	r4, [sp, #48]	; 0x30
   136b0:	eor	r4, r4, r5, ror #31
   136b4:	ldr	r5, [fp, #-52]	; 0xffffffcc
   136b8:	eor	r4, r4, r5, ror #31
   136bc:	eor	r4, r4, r8, ror #31
   136c0:	ror	r5, r4, #31
   136c4:	mov	r8, r4
   136c8:	str	r4, [fp, #-84]	; 0xffffffac
   136cc:	and	r4, r7, r6, ror #2
   136d0:	add	r1, r5, r1, ror #2
   136d4:	str	r5, [sp, #48]	; 0x30
   136d8:	ldr	r5, [sp, #100]	; 0x64
   136dc:	add	r1, r1, r2
   136e0:	orr	r2, r7, r6, ror #2
   136e4:	add	r1, r1, r7, ror #27
   136e8:	and	r2, r2, r0, ror #2
   136ec:	add	r1, r1, ip
   136f0:	orr	r2, r2, r4
   136f4:	ldr	r4, [sp, #68]	; 0x44
   136f8:	eor	r4, r4, r5, ror #31
   136fc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13700:	eor	r4, r4, r9, ror #31
   13704:	eor	sl, r4, r5, ror #31
   13708:	and	r4, r1, r7, ror #2
   1370c:	ror	r5, sl, #31
   13710:	str	sl, [sp, #12]
   13714:	add	r3, r5, r3, ror #2
   13718:	str	r5, [sp, #100]	; 0x64
   1371c:	ldr	r5, [sp, #20]
   13720:	add	r2, r3, r2
   13724:	add	r2, r2, r1, ror #27
   13728:	add	r3, r2, ip
   1372c:	orr	r2, r1, r7, ror #2
   13730:	and	r2, r2, r6, ror #2
   13734:	orr	r2, r2, r4
   13738:	ldr	r4, [fp, #-68]	; 0xffffffbc
   1373c:	eor	r4, r5, r4, ror #31
   13740:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13744:	eor	r4, r4, r5, ror #31
   13748:	eor	r4, r4, lr, ror #31
   1374c:	ror	r5, r4, #31
   13750:	mov	lr, r4
   13754:	str	r4, [fp, #-68]	; 0xffffffbc
   13758:	and	r4, r3, r1, ror #2
   1375c:	add	r0, r5, r0, ror #2
   13760:	str	r5, [sp, #68]	; 0x44
   13764:	ldr	r5, [fp, #-64]	; 0xffffffc0
   13768:	add	r0, r0, r2
   1376c:	add	r0, r0, r3, ror #27
   13770:	add	r2, r0, ip
   13774:	orr	r0, r3, r1, ror #2
   13778:	and	r0, r0, r7, ror #2
   1377c:	orr	r0, r0, r4
   13780:	ldr	r4, [sp, #72]	; 0x48
   13784:	eor	r4, r4, r5, ror #31
   13788:	ldr	r5, [fp, #-56]	; 0xffffffc8
   1378c:	eor	r4, r4, r5, ror #31
   13790:	eor	r4, r4, r8, ror #31
   13794:	mov	r8, ip
   13798:	ror	r5, r4, #31
   1379c:	str	r4, [fp, #-40]	; 0xffffffd8
   137a0:	add	r4, r5, r6, ror #2
   137a4:	str	r5, [sp, #72]	; 0x48
   137a8:	ldr	r5, [fp, #-96]	; 0xffffffa0
   137ac:	add	r0, r4, r0
   137b0:	and	r4, r2, r3, ror #2
   137b4:	add	r0, r0, r2, ror #27
   137b8:	add	r9, r0, ip
   137bc:	orr	r0, r2, r3, ror #2
   137c0:	and	r0, r0, r1, ror #2
   137c4:	orr	r0, r0, r4
   137c8:	ldr	r4, [sp, #64]	; 0x40
   137cc:	eor	r4, r4, r5, ror #31
   137d0:	ldr	r5, [fp, #-88]	; 0xffffffa8
   137d4:	eor	r4, r4, r5, ror #31
   137d8:	eor	r4, r4, sl, ror #31
   137dc:	ror	r5, r4, #31
   137e0:	mov	r6, r4
   137e4:	str	r4, [fp, #-64]	; 0xffffffc0
   137e8:	add	r4, r5, r7, ror #2
   137ec:	str	r5, [fp, #-96]	; 0xffffffa0
   137f0:	and	r5, r9, r2, ror #2
   137f4:	ldr	r7, [fp, #-72]	; 0xffffffb8
   137f8:	add	r0, r4, r0
   137fc:	orr	r4, r9, r2, ror #2
   13800:	add	r0, r0, r9, ror #27
   13804:	and	r4, r4, r3, ror #2
   13808:	add	r0, r0, ip
   1380c:	orr	r4, r4, r5
   13810:	ldr	r5, [sp, #60]	; 0x3c
   13814:	eor	r5, r5, r7, ror #31
   13818:	ldr	r7, [fp, #-92]	; 0xffffffa4
   1381c:	eor	r5, r5, r7, ror #31
   13820:	eor	r5, r5, lr, ror #31
   13824:	ror	r7, r5, #31
   13828:	mov	lr, r5
   1382c:	str	r5, [fp, #-72]	; 0xffffffb8
   13830:	and	r5, r0, r9, ror #2
   13834:	add	r1, r7, r1, ror #2
   13838:	str	r7, [sp, #64]	; 0x40
   1383c:	ldr	r7, [fp, #-60]	; 0xffffffc4
   13840:	add	r1, r1, r4
   13844:	orr	r4, r0, r9, ror #2
   13848:	add	r1, r1, r0, ror #27
   1384c:	and	r4, r4, r2, ror #2
   13850:	add	r1, r1, ip
   13854:	orr	r4, r4, r5
   13858:	ldr	r5, [sp, #56]	; 0x38
   1385c:	eor	r5, r5, r7, ror #31
   13860:	ldr	r7, [fp, #-36]	; 0xffffffdc
   13864:	eor	r5, r5, r7, ror #31
   13868:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1386c:	eor	ip, r5, r7, ror #31
   13870:	and	r5, r1, r0, ror #2
   13874:	ror	r7, ip, #31
   13878:	str	ip, [fp, #-60]	; 0xffffffc4
   1387c:	add	r3, r7, r3, ror #2
   13880:	str	r7, [sp, #56]	; 0x38
   13884:	ldr	r7, [fp, #-32]	; 0xffffffe0
   13888:	add	r3, r3, r4
   1388c:	orr	r4, r1, r0, ror #2
   13890:	add	r3, r3, r1, ror #27
   13894:	and	r4, r4, r9, ror #2
   13898:	add	r3, r3, r8
   1389c:	orr	r4, r4, r5
   138a0:	ldr	r5, [sp, #52]	; 0x34
   138a4:	eor	r5, r5, r7, ror #31
   138a8:	ldr	r7, [fp, #-80]	; 0xffffffb0
   138ac:	eor	r5, r5, r7, ror #31
   138b0:	eor	r5, r5, r6, ror #31
   138b4:	ror	r6, r5, #31
   138b8:	str	r5, [fp, #-32]	; 0xffffffe0
   138bc:	and	r5, r3, r1, ror #2
   138c0:	add	r2, r6, r2, ror #2
   138c4:	str	r6, [sp, #52]	; 0x34
   138c8:	ldr	r6, [fp, #-44]	; 0xffffffd4
   138cc:	add	r2, r2, r4
   138d0:	orr	r4, r3, r1, ror #2
   138d4:	add	r2, r2, r3, ror #27
   138d8:	and	r4, r4, r0, ror #2
   138dc:	add	r2, r2, r8
   138e0:	orr	r4, r4, r5
   138e4:	ldr	r5, [fp, #-52]	; 0xffffffcc
   138e8:	eor	r5, r6, r5, ror #31
   138ec:	ldr	r6, [fp, #-84]	; 0xffffffac
   138f0:	eor	r5, r5, r6, ror #31
   138f4:	ldr	r6, [sp, #44]	; 0x2c
   138f8:	eor	r7, r5, lr, ror #31
   138fc:	str	r7, [fp, #-44]	; 0xffffffd4
   13900:	ror	r7, r7, #31
   13904:	add	r5, r7, r9, ror #2
   13908:	str	r7, [sp, #24]
   1390c:	ror	r7, r3, #2
   13910:	eor	r7, r7, r1, ror #2
   13914:	add	r4, r5, r4
   13918:	ldr	r5, [sp, #16]
   1391c:	add	r4, r4, r2, ror #27
   13920:	eor	r7, r7, r2
   13924:	add	r4, r4, r8
   13928:	eor	r6, r6, r5, ror #31
   1392c:	eor	r6, r6, sl, ror #31
   13930:	eor	lr, r6, ip, ror #31
   13934:	ror	r6, lr, #31
   13938:	str	lr, [fp, #-52]	; 0xffffffcc
   1393c:	add	r0, r6, r0, ror #2
   13940:	str	r6, [sp, #20]
   13944:	ldr	r6, [sp, #40]	; 0x28
   13948:	add	r0, r0, r7
   1394c:	movw	r7, #49622	; 0xc1d6
   13950:	movt	r7, #51810	; 0xca62
   13954:	add	r0, r0, r4, ror #27
   13958:	add	ip, r0, r7
   1395c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13960:	mov	r9, r7
   13964:	ror	r7, r2, #2
   13968:	eor	r7, r7, r3, ror #2
   1396c:	mov	r5, r9
   13970:	eor	r7, r7, r4
   13974:	eor	r6, r6, r0, ror #31
   13978:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1397c:	eor	r6, r6, r0, ror #31
   13980:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13984:	eor	r8, r6, r0, ror #31
   13988:	ror	r0, r8, #31
   1398c:	str	r8, [fp, #-76]	; 0xffffffb4
   13990:	add	r1, r0, r1, ror #2
   13994:	str	r0, [sp, #40]	; 0x28
   13998:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1399c:	add	r1, r1, r7
   139a0:	ldr	r7, [sp, #32]
   139a4:	add	r1, r1, ip, ror #27
   139a8:	add	r6, r1, r9
   139ac:	ror	r1, r4, #2
   139b0:	eor	r7, r7, r0, ror #31
   139b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   139b8:	eor	r1, r1, r2, ror #2
   139bc:	eor	r1, r1, ip
   139c0:	eor	r7, r7, r0, ror #31
   139c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139c8:	eor	r7, r7, r0, ror #31
   139cc:	ror	r0, r7, #31
   139d0:	mov	r9, r7
   139d4:	str	r7, [fp, #-56]	; 0xffffffc8
   139d8:	add	r3, r0, r3, ror #2
   139dc:	str	r0, [sp, #44]	; 0x2c
   139e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   139e4:	add	r1, r3, r1
   139e8:	ror	r3, ip, #2
   139ec:	add	r1, r1, r6, ror #27
   139f0:	eor	r3, r3, r4, ror #2
   139f4:	add	r1, r1, r5
   139f8:	ldr	r5, [sp, #28]
   139fc:	eor	r3, r3, r6
   13a00:	eor	r7, r5, r0, ror #31
   13a04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13a08:	movw	r5, #49622	; 0xc1d6
   13a0c:	movt	r5, #51810	; 0xca62
   13a10:	eor	r7, r7, r0, ror #31
   13a14:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13a18:	eor	sl, r7, lr, ror #31
   13a1c:	ror	lr, sl, #31
   13a20:	str	sl, [fp, #-48]	; 0xffffffd0
   13a24:	add	r2, lr, r2, ror #2
   13a28:	str	lr, [sp, #60]	; 0x3c
   13a2c:	add	r2, r2, r3
   13a30:	ldr	r3, [sp, #36]	; 0x24
   13a34:	add	r2, r2, r1, ror #27
   13a38:	add	r7, r2, r5
   13a3c:	ror	r2, r6, #2
   13a40:	eor	r3, r3, r0, ror #31
   13a44:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13a48:	eor	r2, r2, ip, ror #2
   13a4c:	eor	r2, r2, r1
   13a50:	eor	r3, r3, r0, ror #31
   13a54:	eor	r0, r3, r8, ror #31
   13a58:	mov	r8, r5
   13a5c:	ror	r3, r0, #31
   13a60:	mov	lr, r0
   13a64:	str	r0, [fp, #-92]	; 0xffffffa4
   13a68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13a6c:	str	r3, [fp, #-88]	; 0xffffffa8
   13a70:	add	r3, r3, r4, ror #2
   13a74:	ldr	r4, [sp, #48]	; 0x30
   13a78:	add	r2, r3, r2
   13a7c:	ror	r3, r1, #2
   13a80:	eor	r3, r3, r6, ror #2
   13a84:	add	r2, r2, r7, ror #27
   13a88:	eor	r4, r4, r0, ror #31
   13a8c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13a90:	eor	r3, r3, r7
   13a94:	add	r2, r2, r5
   13a98:	eor	r4, r4, r0, ror #31
   13a9c:	eor	r9, r4, r9, ror #31
   13aa0:	ror	r4, r9, #31
   13aa4:	str	r9, [sp, #48]	; 0x30
   13aa8:	add	r0, r4, ip, ror #2
   13aac:	str	r4, [fp, #-36]	; 0xffffffdc
   13ab0:	ldr	r4, [sp, #100]	; 0x64
   13ab4:	mov	ip, r8
   13ab8:	add	r0, r0, r3
   13abc:	ror	r3, r7, #2
   13ac0:	add	r0, r0, r2, ror #27
   13ac4:	eor	r3, r3, r1, ror #2
   13ac8:	add	r0, r0, r5
   13acc:	ldr	r5, [fp, #-80]	; 0xffffffb0
   13ad0:	eor	r3, r3, r2
   13ad4:	eor	r4, r4, r5, ror #31
   13ad8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13adc:	eor	r4, r4, r5, ror #31
   13ae0:	eor	r5, r4, sl, ror #31
   13ae4:	ror	r4, r5, #31
   13ae8:	mov	sl, r5
   13aec:	str	r5, [sp, #100]	; 0x64
   13af0:	ldr	r5, [fp, #-84]	; 0xffffffac
   13af4:	add	r6, r4, r6, ror #2
   13af8:	add	r3, r6, r3
   13afc:	ror	r6, r2, #2
   13b00:	eor	r6, r6, r7, ror #2
   13b04:	add	r3, r3, r0, ror #27
   13b08:	eor	r4, r6, r0
   13b0c:	ldr	r6, [sp, #68]	; 0x44
   13b10:	add	r3, r3, r8
   13b14:	eor	r6, r6, r5, ror #31
   13b18:	ldr	r5, [fp, #-44]	; 0xffffffd4
   13b1c:	eor	r6, r6, r5, ror #31
   13b20:	ldr	r5, [sp, #12]
   13b24:	eor	r8, r6, lr, ror #31
   13b28:	ror	r6, r8, #31
   13b2c:	str	r8, [sp, #68]	; 0x44
   13b30:	add	r1, r6, r1, ror #2
   13b34:	ror	r6, r0, #2
   13b38:	eor	r6, r6, r2, ror #2
   13b3c:	add	r1, r1, r4
   13b40:	ldr	r4, [sp, #72]	; 0x48
   13b44:	add	r1, r1, r3, ror #27
   13b48:	eor	r6, r6, r3
   13b4c:	add	r1, r1, ip
   13b50:	eor	r4, r4, r5, ror #31
   13b54:	ldr	r5, [fp, #-52]	; 0xffffffcc
   13b58:	eor	r4, r4, r5, ror #31
   13b5c:	ldr	r5, [fp, #-76]	; 0xffffffb4
   13b60:	eor	lr, r4, r9, ror #31
   13b64:	ror	r4, lr, #31
   13b68:	str	lr, [fp, #-84]	; 0xffffffac
   13b6c:	add	r7, r4, r7, ror #2
   13b70:	ror	r4, r3, #2
   13b74:	eor	r4, r4, r0, ror #2
   13b78:	add	r7, r7, r6
   13b7c:	movw	r6, #49622	; 0xc1d6
   13b80:	add	r7, r7, r1, ror #27
   13b84:	movt	r6, #51810	; 0xca62
   13b88:	eor	r4, r4, r1
   13b8c:	add	ip, r7, r6
   13b90:	ldr	r6, [fp, #-96]	; 0xffffffa0
   13b94:	ldr	r7, [fp, #-68]	; 0xffffffbc
   13b98:	eor	r6, r6, r7, ror #31
   13b9c:	eor	r6, r6, r5, ror #31
   13ba0:	eor	r7, r6, sl, ror #31
   13ba4:	movw	sl, #49622	; 0xc1d6
   13ba8:	movt	sl, #51810	; 0xca62
   13bac:	ror	r6, r7, #31
   13bb0:	mov	r5, r7
   13bb4:	str	r7, [fp, #-80]	; 0xffffffb0
   13bb8:	ldr	r7, [fp, #-40]	; 0xffffffd8
   13bbc:	add	r2, r6, r2, ror #2
   13bc0:	ldr	r6, [sp, #64]	; 0x40
   13bc4:	add	r2, r2, r4
   13bc8:	ror	r4, r1, #2
   13bcc:	eor	r4, r4, r3, ror #2
   13bd0:	add	r2, r2, ip, ror #27
   13bd4:	eor	r6, r6, r7, ror #31
   13bd8:	ldr	r7, [fp, #-56]	; 0xffffffc8
   13bdc:	eor	r4, r4, ip
   13be0:	add	r2, r2, sl
   13be4:	eor	r6, r6, r7, ror #31
   13be8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13bec:	eor	r9, r6, r8, ror #31
   13bf0:	ror	r6, r9, #31
   13bf4:	str	r9, [fp, #-68]	; 0xffffffbc
   13bf8:	add	r0, r6, r0, ror #2
   13bfc:	ldr	r6, [sp, #56]	; 0x38
   13c00:	add	r0, r0, r4
   13c04:	ror	r4, ip, #2
   13c08:	eor	r4, r4, r1, ror #2
   13c0c:	add	r0, r0, r2, ror #27
   13c10:	eor	r6, r6, r7, ror #31
   13c14:	ldr	r7, [fp, #-48]	; 0xffffffd0
   13c18:	eor	r4, r4, r2
   13c1c:	add	r0, r0, sl
   13c20:	eor	r6, r6, r7, ror #31
   13c24:	ldr	r7, [fp, #-72]	; 0xffffffb8
   13c28:	eor	r8, r6, lr, ror #31
   13c2c:	ror	r6, r8, #31
   13c30:	str	r8, [fp, #-40]	; 0xffffffd8
   13c34:	add	r3, r6, r3, ror #2
   13c38:	add	r3, r3, r4
   13c3c:	ror	r4, r2, #2
   13c40:	eor	r4, r4, ip, ror #2
   13c44:	add	r3, r3, r0, ror #27
   13c48:	eor	r6, r4, r0
   13c4c:	ldr	r4, [sp, #52]	; 0x34
   13c50:	add	r3, r3, sl
   13c54:	eor	r4, r4, r7, ror #31
   13c58:	ldr	r7, [fp, #-92]	; 0xffffffa4
   13c5c:	eor	r4, r4, r7, ror #31
   13c60:	eor	r4, r4, r5, ror #31
   13c64:	ldr	r5, [fp, #-60]	; 0xffffffc4
   13c68:	ror	r7, r4, #31
   13c6c:	add	r1, r7, r1, ror #2
   13c70:	add	r1, r1, r6
   13c74:	ldr	r6, [sp, #24]
   13c78:	add	r1, r1, r3, ror #27
   13c7c:	add	lr, r1, sl
   13c80:	ror	r1, r0, #2
   13c84:	eor	r6, r6, r5, ror #31
   13c88:	ldr	r5, [sp, #48]	; 0x30
   13c8c:	eor	r1, r1, r2, ror #2
   13c90:	eor	r1, r1, r3
   13c94:	eor	r6, r6, r5, ror #31
   13c98:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13c9c:	eor	r9, r6, r9, ror #31
   13ca0:	ror	r6, r9, #31
   13ca4:	add	r7, r6, ip, ror #2
   13ca8:	ldr	r6, [sp, #20]
   13cac:	add	r1, r7, r1
   13cb0:	ror	r7, r3, #2
   13cb4:	eor	r7, r7, r0, ror #2
   13cb8:	add	r1, r1, lr, ror #27
   13cbc:	eor	r6, r6, r5, ror #31
   13cc0:	ldr	r5, [sp, #100]	; 0x64
   13cc4:	eor	r7, r7, lr
   13cc8:	add	r1, r1, sl
   13ccc:	eor	r6, r6, r5, ror #31
   13cd0:	ldr	r5, [fp, #-44]	; 0xffffffd4
   13cd4:	eor	ip, r6, r8, ror #31
   13cd8:	mov	r8, sl
   13cdc:	ror	r6, ip, #31
   13ce0:	add	r2, r6, r2, ror #2
   13ce4:	ldr	r6, [sp, #40]	; 0x28
   13ce8:	add	r2, r2, r7
   13cec:	ror	r7, lr, #2
   13cf0:	add	r2, r2, r1, ror #27
   13cf4:	eor	r7, r7, r3, ror #2
   13cf8:	eor	r6, r6, r5, ror #31
   13cfc:	ldr	r5, [sp, #68]	; 0x44
   13d00:	add	r2, r2, sl
   13d04:	eor	r7, r7, r1
   13d08:	eor	r6, r6, r5, ror #31
   13d0c:	ldr	r5, [sp, #80]	; 0x50
   13d10:	eor	sl, r6, r4, ror #31
   13d14:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13d18:	ror	r4, sl, #31
   13d1c:	add	r0, r4, r0, ror #2
   13d20:	add	r0, r0, r7
   13d24:	ldr	r7, [sp, #76]	; 0x4c
   13d28:	add	r0, r0, r2, ror #27
   13d2c:	add	r0, r0, r8
   13d30:	add	r7, r7, r0, ror #2
   13d34:	str	r7, [r5, #16]
   13d38:	ror	r7, r1, #2
   13d3c:	eor	r7, r7, lr, ror #2
   13d40:	eor	r4, r7, r2
   13d44:	ldr	r7, [sp, #44]	; 0x2c
   13d48:	eor	r7, r7, r6, ror #31
   13d4c:	ldr	r6, [fp, #-84]	; 0xffffffac
   13d50:	eor	r7, r7, r6, ror #31
   13d54:	ldr	r6, [fp, #-76]	; 0xffffffb4
   13d58:	eor	r9, r7, r9, ror #31
   13d5c:	ror	r7, r9, #31
   13d60:	add	r3, r7, r3, ror #2
   13d64:	add	r3, r3, r4
   13d68:	ldr	r4, [sp, #92]	; 0x5c
   13d6c:	add	r3, r3, r0, ror #27
   13d70:	add	r3, r3, r8
   13d74:	mov	r8, r5
   13d78:	add	r4, r4, r3, ror #2
   13d7c:	str	r4, [r5, #12]
   13d80:	ldr	r5, [sp, #60]	; 0x3c
   13d84:	ror	r4, r2, #2
   13d88:	eor	r4, r4, r1, ror #2
   13d8c:	eor	r4, r4, r0
   13d90:	eor	r7, r5, r6, ror #31
   13d94:	ldr	r5, [fp, #-80]	; 0xffffffb0
   13d98:	movw	r6, #49622	; 0xc1d6
   13d9c:	movt	r6, #51810	; 0xca62
   13da0:	eor	r7, r7, r5, ror #31
   13da4:	ldr	r5, [sp, #84]	; 0x54
   13da8:	eor	r7, r7, ip, ror #31
   13dac:	ror	r7, r7, #31
   13db0:	add	r7, r7, lr, ror #2
   13db4:	add	r7, r7, r4
   13db8:	add	r7, r7, r3, ror #27
   13dbc:	add	r7, r7, r6
   13dc0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   13dc4:	add	r4, r5, r7, ror #2
   13dc8:	ldr	r5, [fp, #-88]	; 0xffffffa8
   13dcc:	str	r4, [r8, #8]
   13dd0:	ror	r4, r0, #2
   13dd4:	eor	r4, r4, r2, ror #2
   13dd8:	eor	r5, r5, r6, ror #31
   13ddc:	ldr	r6, [fp, #-68]	; 0xffffffbc
   13de0:	eor	r4, r4, r3
   13de4:	ror	r3, r3, #2
   13de8:	eor	r0, r3, r0, ror #2
   13dec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13df0:	eor	r5, r5, r6, ror #31
   13df4:	eor	r0, r0, r7
   13df8:	eor	r6, r5, sl, ror #31
   13dfc:	movw	r5, #49622	; 0xc1d6
   13e00:	movt	r5, #51810	; 0xca62
   13e04:	ror	r6, r6, #31
   13e08:	add	r1, r6, r1, ror #2
   13e0c:	ldr	r6, [sp, #96]	; 0x60
   13e10:	add	r1, r1, r4
   13e14:	add	r1, r1, r7, ror #27
   13e18:	ldr	r7, [fp, #-48]	; 0xffffffd0
   13e1c:	add	r1, r1, r5
   13e20:	add	r6, r1, r6
   13e24:	eor	r3, r3, r7, ror #31
   13e28:	ldr	r7, [fp, #-40]	; 0xffffffd8
   13e2c:	str	r6, [r8, #4]
   13e30:	eor	r3, r3, r7, ror #31
   13e34:	ldr	r7, [sp, #88]	; 0x58
   13e38:	eor	r3, r3, r9, ror #31
   13e3c:	add	r3, r7, r3, ror #31
   13e40:	add	r2, r3, r2, ror #2
   13e44:	add	r0, r2, r0
   13e48:	add	r0, r0, r1, ror #27
   13e4c:	add	r0, r0, r5
   13e50:	str	r0, [r8]
   13e54:	sub	sp, fp, #28
   13e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e60:	add	fp, sp, #28
   13e64:	sub	sp, sp, #20
   13e68:	mov	r6, r0
   13e6c:	mov	r7, r0
   13e70:	str	r1, [sp, #4]
   13e74:	ldr	r0, [r6, #24]!
   13e78:	ldr	r1, [r6, #4]
   13e7c:	lsr	r2, r0, #8
   13e80:	strb	r0, [sp, #15]
   13e84:	adds	r4, r0, #8
   13e88:	strb	r2, [sp, #14]
   13e8c:	lsr	r2, r0, #16
   13e90:	adc	r9, r1, #0
   13e94:	strb	r2, [sp, #13]
   13e98:	lsr	r2, r0, #24
   13e9c:	strb	r2, [sp, #12]
   13ea0:	lsr	r2, r1, #8
   13ea4:	strb	r1, [sp, #11]
   13ea8:	strb	r2, [sp, #10]
   13eac:	lsr	r2, r1, #16
   13eb0:	strb	r2, [sp, #9]
   13eb4:	lsr	r2, r1, #24
   13eb8:	strb	r2, [sp, #8]
   13ebc:	stm	r6, {r4, r9}
   13ec0:	ubfx	r0, r0, #3, #6
   13ec4:	cmp	r0, #63	; 0x3f
   13ec8:	bne	13ef0 <rb_base64_encode@plt+0x2ee4>
   13ecc:	mov	r0, #128	; 0x80
   13ed0:	add	r1, r7, #32
   13ed4:	strb	r0, [r7, #95]	; 0x5f
   13ed8:	mov	r0, r7
   13edc:	bl	12a3c <rb_base64_encode@plt+0x1a30>
   13ee0:	ldm	r6, {r4, r9}
   13ee4:	mov	r0, #0
   13ee8:	mov	r2, #1
   13eec:	b	13ef4 <rb_base64_encode@plt+0x2ee8>
   13ef0:	mov	r2, #0
   13ef4:	movw	r1, #17279	; 0x437f
   13ef8:	add	r0, r7, r0
   13efc:	movt	r1, #1
   13f00:	add	r0, r0, #32
   13f04:	add	r1, r1, r2
   13f08:	eor	r2, r2, #1
   13f0c:	bl	10ee0 <memcpy@plt>
   13f10:	and	r0, r4, #504	; 0x1f8
   13f14:	ubfx	r5, r4, #3, #6
   13f18:	teq	r0, #448	; 0x1c0
   13f1c:	beq	13f8c <rb_base64_encode@plt+0x2f80>
   13f20:	movw	r8, #17281	; 0x4381
   13f24:	add	sl, r7, #32
   13f28:	movt	r8, #1
   13f2c:	b	13f58 <rb_base64_encode@plt+0x2f4c>
   13f30:	add	r0, r7, r5
   13f34:	add	r1, r8, r2
   13f38:	eor	r2, r2, #1
   13f3c:	add	r0, r0, #32
   13f40:	bl	10ee0 <memcpy@plt>
   13f44:	ldm	r6, {r4, r9}
   13f48:	and	r0, r4, #504	; 0x1f8
   13f4c:	ubfx	r5, r4, #3, #6
   13f50:	teq	r0, #448	; 0x1c0
   13f54:	beq	13f8c <rb_base64_encode@plt+0x2f80>
   13f58:	adds	r0, r4, #8
   13f5c:	mov	r2, #0
   13f60:	adc	r1, r9, #0
   13f64:	cmp	r5, #63	; 0x3f
   13f68:	strd	r0, [r6]
   13f6c:	bne	13f30 <rb_base64_encode@plt+0x2f24>
   13f70:	mov	r5, #0
   13f74:	mov	r0, r7
   13f78:	mov	r1, sl
   13f7c:	strb	r5, [r7, #95]	; 0x5f
   13f80:	bl	12a3c <rb_base64_encode@plt+0x1a30>
   13f84:	mov	r2, #1
   13f88:	b	13f30 <rb_base64_encode@plt+0x2f24>
   13f8c:	adds	r0, r4, #64	; 0x40
   13f90:	adc	r1, r9, #0
   13f94:	cmp	r5, #56	; 0x38
   13f98:	strd	r0, [r6]
   13f9c:	mov	r6, #0
   13fa0:	bcc	13fcc <rb_base64_encode@plt+0x2fc0>
   13fa4:	add	r4, r7, #32
   13fa8:	rsb	r6, r5, #64	; 0x40
   13fac:	add	r1, sp, #8
   13fb0:	add	r0, r4, r5
   13fb4:	mov	r2, r6
   13fb8:	bl	10ee0 <memcpy@plt>
   13fbc:	mov	r0, r7
   13fc0:	mov	r1, r4
   13fc4:	bl	12a3c <rb_base64_encode@plt+0x1a30>
   13fc8:	mov	r5, #0
   13fcc:	add	r0, sp, #8
   13fd0:	add	r4, r7, #32
   13fd4:	rsb	r2, r6, #8
   13fd8:	add	r1, r0, r6
   13fdc:	add	r0, r4, r5
   13fe0:	bl	10ee0 <memcpy@plt>
   13fe4:	ldrb	r0, [r7, #3]
   13fe8:	ldr	r2, [sp, #4]
   13fec:	vmov.i32	q8, #0	; 0x00000000
   13ff0:	strb	r0, [r2]
   13ff4:	ldrh	r0, [r7, #2]
   13ff8:	strb	r0, [r2, #1]
   13ffc:	ldr	r0, [r7]
   14000:	lsr	r0, r0, #8
   14004:	strb	r0, [r2, #2]
   14008:	ldr	r0, [r7]
   1400c:	strb	r0, [r2, #3]
   14010:	ldrb	r0, [r7, #7]
   14014:	strb	r0, [r2, #4]
   14018:	ldrh	r0, [r7, #6]
   1401c:	strb	r0, [r2, #5]
   14020:	ldr	r0, [r7, #4]
   14024:	lsr	r0, r0, #8
   14028:	strb	r0, [r2, #6]
   1402c:	ldr	r0, [r7, #4]
   14030:	strb	r0, [r2, #7]
   14034:	ldrb	r0, [r7, #11]
   14038:	strb	r0, [r2, #8]
   1403c:	ldrh	r0, [r7, #10]
   14040:	strb	r0, [r2, #9]
   14044:	ldr	r0, [r7, #8]
   14048:	lsr	r0, r0, #8
   1404c:	strb	r0, [r2, #10]
   14050:	ldr	r0, [r7, #8]
   14054:	strb	r0, [r2, #11]
   14058:	ldrb	r0, [r7, #15]
   1405c:	strb	r0, [r2, #12]
   14060:	ldrh	r0, [r7, #14]
   14064:	strb	r0, [r2, #13]
   14068:	ldr	r0, [r7, #12]
   1406c:	lsr	r0, r0, #8
   14070:	strb	r0, [r2, #14]
   14074:	ldr	r0, [r7, #12]
   14078:	strb	r0, [r2, #15]
   1407c:	ldrb	r0, [r7, #19]
   14080:	strb	r0, [r2, #16]
   14084:	ldrh	r0, [r7, #18]
   14088:	strb	r0, [r2, #17]
   1408c:	mov	r0, r7
   14090:	ldr	r1, [r0, #16]!
   14094:	lsr	r1, r1, #8
   14098:	strb	r1, [r2, #18]
   1409c:	ldr	r1, [r0]
   140a0:	strb	r1, [r2, #19]
   140a4:	vst1.64	{d16-d17}, [r0]
   140a8:	add	r0, r7, #48	; 0x30
   140ac:	vst1.64	{d16-d17}, [r4]
   140b0:	vst1.64	{d16-d17}, [r0]
   140b4:	add	r0, r7, #64	; 0x40
   140b8:	vst1.64	{d16-d17}, [r0]
   140bc:	mov	r0, #80	; 0x50
   140c0:	vst1.64	{d16-d17}, [r7], r0
   140c4:	vst1.64	{d16-d17}, [r7]
   140c8:	sub	sp, fp, #28
   140cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140d4:	mov	r7, r0
   140d8:	ldr	r6, [pc, #72]	; 14128 <rb_base64_encode@plt+0x311c>
   140dc:	ldr	r5, [pc, #72]	; 1412c <rb_base64_encode@plt+0x3120>
   140e0:	add	r6, pc, r6
   140e4:	add	r5, pc, r5
   140e8:	sub	r6, r6, r5
   140ec:	mov	r8, r1
   140f0:	mov	r9, r2
   140f4:	bl	10d88 <open@plt-0x20>
   140f8:	asrs	r6, r6, #2
   140fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14100:	mov	r4, #0
   14104:	add	r4, r4, #1
   14108:	ldr	r3, [r5], #4
   1410c:	mov	r2, r9
   14110:	mov	r1, r8
   14114:	mov	r0, r7
   14118:	blx	r3
   1411c:	cmp	r6, r4
   14120:	bne	14104 <rb_base64_encode@plt+0x30f8>
   14124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14128:	andeq	r0, r1, ip, lsl #28
   1412c:	andeq	r0, r1, r4, lsl #28
   14130:	bx	lr

Disassembly of section .fini:

00014134 <.fini>:
   14134:	push	{r3, lr}
   14138:	pop	{r3, pc}
