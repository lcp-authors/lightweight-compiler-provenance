
../repos/inetutils/src/rexecd:     file format elf32-littlearm


Disassembly of section .init:

000112b8 <.init>:
   112b8:	push	{r3, lr}
   112bc:	bl	117bc <putc_unlocked@plt+0x13c>
   112c0:	pop	{r3, pc}

Disassembly of section .plt:

000112c4 <calloc@plt-0x14>:
   112c4:	push	{lr}		; (str lr, [sp, #-4]!)
   112c8:	ldr	lr, [pc, #4]	; 112d4 <calloc@plt-0x4>
   112cc:	add	lr, pc, lr
   112d0:	ldr	pc, [lr, #8]!
   112d4:	andeq	r7, r1, ip, lsr #26

000112d8 <calloc@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #94208	; 0x17000
   112e0:	ldr	pc, [ip, #3372]!	; 0xd2c

000112e4 <fputs_unlocked@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #94208	; 0x17000
   112ec:	ldr	pc, [ip, #3364]!	; 0xd24

000112f0 <raise@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #94208	; 0x17000
   112f8:	ldr	pc, [ip, #3356]!	; 0xd1c

000112fc <strcmp@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #94208	; 0x17000
   11304:	ldr	pc, [ip, #3348]!	; 0xd14

00011308 <setsockopt@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #94208	; 0x17000
   11310:	ldr	pc, [ip, #3340]!	; 0xd0c

00011314 <printf@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #94208	; 0x17000
   1131c:	ldr	pc, [ip, #3332]!	; 0xd04

00011320 <read@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #94208	; 0x17000
   11328:	ldr	pc, [ip, #3324]!	; 0xcfc

0001132c <getspnam@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #94208	; 0x17000
   11334:	ldr	pc, [ip, #3316]!	; 0xcf4

00011338 <memmove@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #94208	; 0x17000
   11340:	ldr	pc, [ip, #3308]!	; 0xcec

00011344 <strchrnul@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #94208	; 0x17000
   1134c:	ldr	pc, [ip, #3300]!	; 0xce4

00011350 <free@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #94208	; 0x17000
   11358:	ldr	pc, [ip, #3292]!	; 0xcdc

0001135c <strndup@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #94208	; 0x17000
   11364:	ldr	pc, [ip, #3284]!	; 0xcd4

00011368 <memcpy@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #94208	; 0x17000
   11370:	ldr	pc, [ip, #3276]!	; 0xccc

00011374 <signal@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #94208	; 0x17000
   1137c:	ldr	pc, [ip, #3268]!	; 0xcc4

00011380 <fwrite_unlocked@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #94208	; 0x17000
   11388:	ldr	pc, [ip, #3260]!	; 0xcbc

0001138c <select@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #94208	; 0x17000
   11394:	ldr	pc, [ip, #3252]!	; 0xcb4

00011398 <sleep@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #94208	; 0x17000
   113a0:	ldr	pc, [ip, #3244]!	; 0xcac

000113a4 <alarm@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #94208	; 0x17000
   113ac:	ldr	pc, [ip, #3236]!	; 0xca4

000113b0 <sysconf@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #94208	; 0x17000
   113b8:	ldr	pc, [ip, #3228]!	; 0xc9c

000113bc <dup2@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #94208	; 0x17000
   113c4:	ldr	pc, [ip, #3220]!	; 0xc94

000113c8 <realloc@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #94208	; 0x17000
   113d0:	ldr	pc, [ip, #3212]!	; 0xc8c

000113d4 <killpg@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #94208	; 0x17000
   113dc:	ldr	pc, [ip, #3204]!	; 0xc84

000113e0 <initgroups@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #94208	; 0x17000
   113e8:	ldr	pc, [ip, #3196]!	; 0xc7c

000113ec <chdir@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #94208	; 0x17000
   113f4:	ldr	pc, [ip, #3188]!	; 0xc74

000113f8 <strcasecmp@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #94208	; 0x17000
   11400:	ldr	pc, [ip, #3180]!	; 0xc6c

00011404 <funlockfile@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #94208	; 0x17000
   1140c:	ldr	pc, [ip, #3172]!	; 0xc64

00011410 <strcat@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #94208	; 0x17000
   11418:	ldr	pc, [ip, #3164]!	; 0xc5c

0001141c <ioctl@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #94208	; 0x17000
   11424:	ldr	pc, [ip, #3156]!	; 0xc54

00011428 <error@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #94208	; 0x17000
   11430:	ldr	pc, [ip, #3148]!	; 0xc4c

00011434 <getenv@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #94208	; 0x17000
   1143c:	ldr	pc, [ip, #3140]!	; 0xc44

00011440 <setgid@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #94208	; 0x17000
   11448:	ldr	pc, [ip, #3132]!	; 0xc3c

0001144c <malloc@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #94208	; 0x17000
   11454:	ldr	pc, [ip, #3124]!	; 0xc34

00011458 <__libc_start_main@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #94208	; 0x17000
   11460:	ldr	pc, [ip, #3116]!	; 0xc2c

00011464 <strerror@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #94208	; 0x17000
   1146c:	ldr	pc, [ip, #3108]!	; 0xc24

00011470 <__ctype_tolower_loc@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #94208	; 0x17000
   11478:	ldr	pc, [ip, #3100]!	; 0xc1c

0001147c <__gmon_start__@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #94208	; 0x17000
   11484:	ldr	pc, [ip, #3092]!	; 0xc14

00011488 <mempcpy@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #94208	; 0x17000
   11490:	ldr	pc, [ip, #3084]!	; 0xc0c

00011494 <__ctype_b_loc@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #94208	; 0x17000
   1149c:	ldr	pc, [ip, #3076]!	; 0xc04

000114a0 <getpid@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #94208	; 0x17000
   114a8:	ldr	pc, [ip, #3068]!	; 0xbfc

000114ac <exit@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #94208	; 0x17000
   114b4:	ldr	pc, [ip, #3060]!	; 0xbf4

000114b8 <strlen@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #94208	; 0x17000
   114c0:	ldr	pc, [ip, #3052]!	; 0xbec

000114c4 <strchr@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #94208	; 0x17000
   114cc:	ldr	pc, [ip, #3044]!	; 0xbe4

000114d0 <getpwnam_r@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #94208	; 0x17000
   114d8:	ldr	pc, [ip, #3036]!	; 0xbdc

000114dc <fprintf@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #94208	; 0x17000
   114e4:	ldr	pc, [ip, #3028]!	; 0xbd4

000114e8 <setpwent@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #94208	; 0x17000
   114f0:	ldr	pc, [ip, #3020]!	; 0xbcc

000114f4 <__errno_location@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #94208	; 0x17000
   114fc:	ldr	pc, [ip, #3012]!	; 0xbc4

00011500 <strerror_r@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #94208	; 0x17000
   11508:	ldr	pc, [ip, #3004]!	; 0xbbc

0001150c <memset@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #94208	; 0x17000
   11514:	ldr	pc, [ip, #2996]!	; 0xbb4

00011518 <strncpy@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #94208	; 0x17000
   11520:	ldr	pc, [ip, #2988]!	; 0xbac

00011524 <write@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #94208	; 0x17000
   1152c:	ldr	pc, [ip, #2980]!	; 0xba4

00011530 <memchr@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #94208	; 0x17000
   11538:	ldr	pc, [ip, #2972]!	; 0xb9c

0001153c <pipe@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #94208	; 0x17000
   11544:	ldr	pc, [ip, #2964]!	; 0xb94

00011548 <shutdown@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #94208	; 0x17000
   11550:	ldr	pc, [ip, #2956]!	; 0xb8c

00011554 <fork@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #94208	; 0x17000
   1155c:	ldr	pc, [ip, #2948]!	; 0xb84

00011560 <getnameinfo@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #94208	; 0x17000
   11568:	ldr	pc, [ip, #2940]!	; 0xb7c

0001156c <endpwent@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #94208	; 0x17000
   11574:	ldr	pc, [ip, #2932]!	; 0xb74

00011578 <execl@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #94208	; 0x17000
   11580:	ldr	pc, [ip, #2924]!	; 0xb6c

00011584 <strrchr@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #94208	; 0x17000
   1158c:	ldr	pc, [ip, #2916]!	; 0xb64

00011590 <vfprintf@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #94208	; 0x17000
   11598:	ldr	pc, [ip, #2908]!	; 0xb5c

0001159c <crypt@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #94208	; 0x17000
   115a4:	ldr	pc, [ip, #2900]!	; 0xb54

000115a8 <fputc@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #94208	; 0x17000
   115b0:	ldr	pc, [ip, #2892]!	; 0xb4c

000115b4 <syslog@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #94208	; 0x17000
   115bc:	ldr	pc, [ip, #2884]!	; 0xb44

000115c0 <setuid@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #94208	; 0x17000
   115c8:	ldr	pc, [ip, #2876]!	; 0xb3c

000115cc <setpgid@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #94208	; 0x17000
   115d4:	ldr	pc, [ip, #2868]!	; 0xb34

000115d8 <openlog@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #94208	; 0x17000
   115e0:	ldr	pc, [ip, #2860]!	; 0xb2c

000115e4 <flockfile@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #94208	; 0x17000
   115ec:	ldr	pc, [ip, #2852]!	; 0xb24

000115f0 <vsnprintf@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #94208	; 0x17000
   115f8:	ldr	pc, [ip, #2844]!	; 0xb1c

000115fc <atoi@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #94208	; 0x17000
   11604:	ldr	pc, [ip, #2836]!	; 0xb14

00011608 <qsort@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #94208	; 0x17000
   11610:	ldr	pc, [ip, #2828]!	; 0xb0c

00011614 <getpeername@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #94208	; 0x17000
   1161c:	ldr	pc, [ip, #2820]!	; 0xb04

00011620 <socket@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #94208	; 0x17000
   11628:	ldr	pc, [ip, #2812]!	; 0xafc

0001162c <strncat@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #94208	; 0x17000
   11634:	ldr	pc, [ip, #2804]!	; 0xaf4

00011638 <fputs@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #94208	; 0x17000
   11640:	ldr	pc, [ip, #2796]!	; 0xaec

00011644 <strncmp@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #94208	; 0x17000
   1164c:	ldr	pc, [ip, #2788]!	; 0xae4

00011650 <abort@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #94208	; 0x17000
   11658:	ldr	pc, [ip, #2780]!	; 0xadc

0001165c <close@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #94208	; 0x17000
   11664:	ldr	pc, [ip, #2772]!	; 0xad4

00011668 <connect@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #94208	; 0x17000
   11670:	ldr	pc, [ip, #2764]!	; 0xacc

00011674 <__assert_fail@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #94208	; 0x17000
   1167c:	ldr	pc, [ip, #2756]!	; 0xac4

00011680 <putc_unlocked@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #94208	; 0x17000
   11688:	ldr	pc, [ip, #2748]!	; 0xabc

Disassembly of section .text:

0001168c <argp_parse@@Base-0x1118>:
   1168c:	push	{r4, r5, lr}
   11690:	mov	r4, r0
   11694:	sub	sp, sp, #148	; 0x94
   11698:	ldr	r0, [r1]
   1169c:	mov	r5, r1
   116a0:	bl	13360 <argp_parse@@Base+0xbbc>
   116a4:	ldr	r3, [pc, #180]	; 11760 <putc_unlocked@plt+0xe0>
   116a8:	ldr	r2, [pc, #180]	; 11764 <putc_unlocked@plt+0xe4>
   116ac:	ldr	r1, [pc, #180]	; 11768 <putc_unlocked@plt+0xe8>
   116b0:	ldr	r0, [pc, #180]	; 1176c <putc_unlocked@plt+0xec>
   116b4:	str	r2, [r3]
   116b8:	bl	1318c <argp_parse@@Base+0x9e8>
   116bc:	mov	r3, #0
   116c0:	add	r2, sp, #12
   116c4:	str	r3, [sp, #4]
   116c8:	str	r2, [sp]
   116cc:	mov	r1, r4
   116d0:	mov	r2, r5
   116d4:	ldr	r0, [pc, #148]	; 11770 <putc_unlocked@plt+0xf0>
   116d8:	bl	127a4 <argp_parse@@Base>
   116dc:	mov	r2, #24
   116e0:	mov	r1, #21
   116e4:	ldr	r0, [pc, #128]	; 1176c <putc_unlocked@plt+0xec>
   116e8:	bl	115d8 <openlog@plt>
   116ec:	ldr	r2, [sp, #12]
   116f0:	cmp	r4, r2
   116f4:	ble	11708 <putc_unlocked@plt+0x88>
   116f8:	sub	r2, r4, r2
   116fc:	ldr	r1, [pc, #112]	; 11774 <putc_unlocked@plt+0xf4>
   11700:	mov	r0, #5
   11704:	bl	115b4 <syslog@plt>
   11708:	mov	r3, #128	; 0x80
   1170c:	add	r2, sp, #8
   11710:	add	r1, sp, #16
   11714:	mov	r0, #0
   11718:	str	r3, [sp, #8]
   1171c:	bl	11614 <getpeername@plt>
   11720:	cmp	r0, #0
   11724:	bge	11748 <putc_unlocked@plt+0xc8>
   11728:	ldr	r1, [pc, #72]	; 11778 <putc_unlocked@plt+0xf8>
   1172c:	mov	r0, #3
   11730:	bl	115b4 <syslog@plt>
   11734:	bl	114f4 <__errno_location@plt>
   11738:	ldr	r2, [pc, #60]	; 1177c <putc_unlocked@plt+0xfc>
   1173c:	ldr	r1, [r0]
   11740:	mov	r0, #1
   11744:	bl	11428 <error@plt>
   11748:	ldr	r2, [sp, #8]
   1174c:	add	r1, sp, #16
   11750:	mov	r0, #0
   11754:	bl	11a0c <putc_unlocked@plt+0x38c>
   11758:	mov	r0, #0
   1175c:	bl	114ac <exit@plt>
   11760:	andeq	r9, r2, r0, asr r5
   11764:	andeq	r8, r1, r9, lsr r2
   11768:			; <UNDEFINED> instruction: 0x000294b4
   1176c:	andeq	r8, r1, r1, asr r2
   11770:	andeq	r9, r2, r8, ror #8
   11774:	andeq	r8, r1, r8, asr r2
   11778:	andeq	r8, r1, fp, ror #4
   1177c:	andeq	r8, r1, fp, ror r2
   11780:	mov	fp, #0
   11784:	mov	lr, #0
   11788:	pop	{r1}		; (ldr r1, [sp], #4)
   1178c:	mov	r2, sp
   11790:	push	{r2}		; (str r2, [sp, #-4]!)
   11794:	push	{r0}		; (str r0, [sp, #-4]!)
   11798:	ldr	ip, [pc, #16]	; 117b0 <putc_unlocked@plt+0x130>
   1179c:	push	{ip}		; (str ip, [sp, #-4]!)
   117a0:	ldr	r0, [pc, #12]	; 117b4 <putc_unlocked@plt+0x134>
   117a4:	ldr	r3, [pc, #12]	; 117b8 <putc_unlocked@plt+0x138>
   117a8:	bl	11458 <__libc_start_main@plt>
   117ac:	bl	11650 <abort@plt>
   117b0:	strdeq	r7, [r1], -r0
   117b4:	andeq	r1, r1, ip, lsl #13
   117b8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   117bc:	ldr	r3, [pc, #20]	; 117d8 <putc_unlocked@plt+0x158>
   117c0:	ldr	r2, [pc, #20]	; 117dc <putc_unlocked@plt+0x15c>
   117c4:	add	r3, pc, r3
   117c8:	ldr	r2, [r3, r2]
   117cc:	cmp	r2, #0
   117d0:	bxeq	lr
   117d4:	b	1147c <__gmon_start__@plt>
   117d8:	andeq	r7, r1, r4, lsr r8
   117dc:	andeq	r0, r0, r8, asr #2
   117e0:	ldr	r3, [pc, #28]	; 11804 <putc_unlocked@plt+0x184>
   117e4:	ldr	r0, [pc, #28]	; 11808 <putc_unlocked@plt+0x188>
   117e8:	sub	r3, r3, r0
   117ec:	cmp	r3, #6
   117f0:	bxls	lr
   117f4:	ldr	r3, [pc, #16]	; 1180c <putc_unlocked@plt+0x18c>
   117f8:	cmp	r3, #0
   117fc:	bxeq	lr
   11800:	bx	r3
   11804:	strdeq	r9, [r2], -fp
   11808:	strdeq	r9, [r2], -r8
   1180c:	andeq	r0, r0, r0
   11810:	ldr	r1, [pc, #36]	; 1183c <putc_unlocked@plt+0x1bc>
   11814:	ldr	r0, [pc, #36]	; 11840 <putc_unlocked@plt+0x1c0>
   11818:	sub	r1, r1, r0
   1181c:	asr	r1, r1, #2
   11820:	add	r1, r1, r1, lsr #31
   11824:	asrs	r1, r1, #1
   11828:	bxeq	lr
   1182c:	ldr	r3, [pc, #16]	; 11844 <putc_unlocked@plt+0x1c4>
   11830:	cmp	r3, #0
   11834:	bxeq	lr
   11838:	bx	r3
   1183c:	strdeq	r9, [r2], -r8
   11840:	strdeq	r9, [r2], -r8
   11844:	andeq	r0, r0, r0
   11848:	push	{r4, lr}
   1184c:	ldr	r4, [pc, #24]	; 1186c <putc_unlocked@plt+0x1ec>
   11850:	ldrb	r3, [r4]
   11854:	cmp	r3, #0
   11858:	popne	{r4, pc}
   1185c:	bl	117e0 <putc_unlocked@plt+0x160>
   11860:	mov	r3, #1
   11864:	strb	r3, [r4]
   11868:	pop	{r4, pc}
   1186c:	andeq	r9, r2, r0, lsl r5
   11870:	ldr	r0, [pc, #40]	; 118a0 <putc_unlocked@plt+0x220>
   11874:	ldr	r3, [r0]
   11878:	cmp	r3, #0
   1187c:	bne	11884 <putc_unlocked@plt+0x204>
   11880:	b	11810 <putc_unlocked@plt+0x190>
   11884:	ldr	r3, [pc, #24]	; 118a4 <putc_unlocked@plt+0x224>
   11888:	cmp	r3, #0
   1188c:	beq	11880 <putc_unlocked@plt+0x200>
   11890:	push	{r4, lr}
   11894:	blx	r3
   11898:	pop	{r4, lr}
   1189c:	b	11810 <putc_unlocked@plt+0x190>
   118a0:	andeq	r8, r2, r4, lsl #30
   118a4:	andeq	r0, r0, r0
   118a8:	cmp	r0, #108	; 0x6c
   118ac:	moveq	r0, #0
   118b0:	ldreq	r2, [pc, #16]	; 118c8 <putc_unlocked@plt+0x248>
   118b4:	movne	r0, #7
   118b8:	ldreq	r3, [r2]
   118bc:	addeq	r3, r3, #1
   118c0:	streq	r3, [r2]
   118c4:	bx	lr
   118c8:	andeq	r9, r2, r4, lsl r5
   118cc:	push	{r1, r2, r3}
   118d0:	mov	r2, #1
   118d4:	push	{r4, r5, r6, lr}
   118d8:	sub	sp, sp, #8192	; 0x2000
   118dc:	sub	sp, sp, #12
   118e0:	add	r5, sp, #8
   118e4:	mov	r6, r0
   118e8:	mov	r0, r5
   118ec:	ldr	r4, [pc, #76]	; 11940 <putc_unlocked@plt+0x2c0>
   118f0:	strb	r2, [r0], #1
   118f4:	add	r2, sp, #8192	; 0x2000
   118f8:	add	r2, r2, #28
   118fc:	add	r3, sp, #8192	; 0x2000
   11900:	ldr	r2, [r2]
   11904:	add	r3, r3, #32
   11908:	mov	r1, r4
   1190c:	str	r3, [sp, #4]
   11910:	bl	115f0 <vsnprintf@plt>
   11914:	mov	r3, #10
   11918:	mov	r1, r5
   1191c:	cmp	r0, r4
   11920:	movlt	r2, r0
   11924:	movge	r2, r4
   11928:	mov	r0, #2
   1192c:	strb	r3, [r5, r2]
   11930:	add	r2, r2, #1
   11934:	bl	11524 <write@plt>
   11938:	mov	r0, r6
   1193c:	bl	114ac <exit@plt>
   11940:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11944:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11948:	mov	r7, r0
   1194c:	mov	r0, #100	; 0x64
   11950:	bl	13cf4 <argp_parse@@Base+0x1550>
   11954:	subs	r5, r0, #0
   11958:	bne	1196c <putc_unlocked@plt+0x2ec>
   1195c:	ldr	r1, [pc, #156]	; 11a00 <putc_unlocked@plt+0x380>
   11960:	mov	r2, r7
   11964:	mov	r0, #1
   11968:	bl	118cc <putc_unlocked@plt+0x24c>
   1196c:	ldr	sl, [pc, #144]	; 11a04 <putc_unlocked@plt+0x384>
   11970:	mov	r4, r5
   11974:	mov	r6, #100	; 0x64
   11978:	mov	r8, #1
   1197c:	mov	r9, #0
   11980:	mov	r2, r8
   11984:	mov	r1, r4
   11988:	mov	r0, r9
   1198c:	bl	11320 <read@plt>
   11990:	subs	fp, r0, #0
   11994:	bgt	119b8 <putc_unlocked@plt+0x338>
   11998:	moveq	r2, r7
   1199c:	ldreq	r1, [pc, #100]	; 11a08 <putc_unlocked@plt+0x388>
   119a0:	beq	11964 <putc_unlocked@plt+0x2e4>
   119a4:	mov	r3, r7
   119a8:	mov	r2, sl
   119ac:	mov	r1, r9
   119b0:	mov	r0, r8
   119b4:	bl	11428 <error@plt>
   119b8:	add	r4, r4, fp
   119bc:	add	r3, r5, r6
   119c0:	sub	r3, r3, r4
   119c4:	cmp	r3, r6, lsr #3
   119c8:	bge	119ec <putc_unlocked@plt+0x36c>
   119cc:	lsl	r6, r6, #1
   119d0:	mov	r0, r5
   119d4:	mov	r1, r6
   119d8:	bl	13d34 <argp_parse@@Base+0x1590>
   119dc:	sub	r4, r4, r5
   119e0:	subs	r5, r0, #0
   119e4:	beq	1195c <putc_unlocked@plt+0x2dc>
   119e8:	add	r4, r5, r4
   119ec:	ldrb	r3, [r4, #-1]
   119f0:	cmp	r3, #0
   119f4:	bne	11980 <putc_unlocked@plt+0x300>
   119f8:	mov	r0, r5
   119fc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a00:	andeq	r8, r1, fp, lsl r0
   11a04:	andeq	r8, r1, r7, lsl #21
   11a08:	andeq	r8, r1, r3, lsr r0
   11a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a10:	sub	sp, sp, #8576	; 0x2180
   11a14:	sub	sp, sp, #4
   11a18:	mov	r7, r0
   11a1c:	mov	r4, #1
   11a20:	mov	r0, #70	; 0x46
   11a24:	mov	fp, r2
   11a28:	mov	r8, r1
   11a2c:	str	r4, [sp, #40]	; 0x28
   11a30:	bl	113b0 <sysconf@plt>
   11a34:	subs	r3, r0, #0
   11a38:	movle	r3, #1024	; 0x400
   11a3c:	mov	r0, r3
   11a40:	str	r3, [sp, #20]
   11a44:	bl	137ec <argp_parse@@Base+0x1048>
   11a48:	mov	r1, #0
   11a4c:	str	r0, [sp, #24]
   11a50:	mov	r0, #2
   11a54:	bl	11374 <signal@plt>
   11a58:	mov	r1, #0
   11a5c:	mov	r0, #3
   11a60:	bl	11374 <signal@plt>
   11a64:	mov	r1, #0
   11a68:	mov	r0, #15
   11a6c:	bl	11374 <signal@plt>
   11a70:	cmp	r7, #0
   11a74:	beq	11a9c <putc_unlocked@plt+0x41c>
   11a78:	mov	r1, #0
   11a7c:	mov	r0, r7
   11a80:	bl	113bc <dup2@plt>
   11a84:	mov	r1, r4
   11a88:	mov	r0, r7
   11a8c:	bl	113bc <dup2@plt>
   11a90:	mov	r1, #2
   11a94:	mov	r0, r7
   11a98:	bl	113bc <dup2@plt>
   11a9c:	mov	r3, #1
   11aa0:	str	r3, [sp, #8]
   11aa4:	mov	r3, #0
   11aa8:	str	r3, [sp, #4]
   11aac:	str	r3, [sp]
   11ab0:	add	r2, sp, #80	; 0x50
   11ab4:	mov	r3, #46	; 0x2e
   11ab8:	mov	r1, fp
   11abc:	mov	r0, r8
   11ac0:	bl	11560 <getnameinfo@plt>
   11ac4:	add	sl, sp, #128	; 0x80
   11ac8:	cmp	r0, #0
   11acc:	beq	11aec <putc_unlocked@plt+0x46c>
   11ad0:	ldr	r1, [pc, #1792]	; 121d8 <putc_unlocked@plt+0xb58>
   11ad4:	mov	r0, #4
   11ad8:	bl	115b4 <syslog@plt>
   11adc:	mov	r2, #46	; 0x2e
   11ae0:	ldr	r1, [pc, #1780]	; 121dc <putc_unlocked@plt+0xb5c>
   11ae4:	add	r0, sp, #80	; 0x50
   11ae8:	bl	11518 <strncpy@plt>
   11aec:	ldr	r4, [pc, #1772]	; 121e0 <putc_unlocked@plt+0xb60>
   11af0:	ldr	r3, [r4]
   11af4:	cmp	r3, #1
   11af8:	ble	11b0c <putc_unlocked@plt+0x48c>
   11afc:	add	r2, sp, #80	; 0x50
   11b00:	ldr	r1, [pc, #1756]	; 121e4 <putc_unlocked@plt+0xb64>
   11b04:	mov	r0, #6
   11b08:	bl	115b4 <syslog@plt>
   11b0c:	mov	r0, #60	; 0x3c
   11b10:	bl	113a4 <alarm@plt>
   11b14:	mov	r6, #0
   11b18:	mov	r3, #1
   11b1c:	mov	r2, r3
   11b20:	add	r1, sp, #384	; 0x180
   11b24:	mov	r0, r7
   11b28:	str	r3, [sp, #28]
   11b2c:	bl	11320 <read@plt>
   11b30:	ldr	r3, [sp, #28]
   11b34:	cmp	r0, #1
   11b38:	mov	r9, r0
   11b3c:	beq	11b60 <putc_unlocked@plt+0x4e0>
   11b40:	ldr	r3, [r4]
   11b44:	cmp	r3, #0
   11b48:	beq	11b58 <putc_unlocked@plt+0x4d8>
   11b4c:	ldr	r1, [pc, #1684]	; 121e8 <putc_unlocked@plt+0xb68>
   11b50:	mov	r0, #3
   11b54:	bl	115b4 <syslog@plt>
   11b58:	mov	r0, #1
   11b5c:	bl	114ac <exit@plt>
   11b60:	ldrb	r2, [sp, #384]	; 0x180
   11b64:	cmp	r2, #0
   11b68:	beq	11b84 <putc_unlocked@plt+0x504>
   11b6c:	mov	r1, #10
   11b70:	sub	r2, r2, #48	; 0x30
   11b74:	smulbb	r6, r6, r1
   11b78:	add	r2, r6, r2
   11b7c:	uxth	r6, r2
   11b80:	b	11b1c <putc_unlocked@plt+0x49c>
   11b84:	mov	r0, r2
   11b88:	str	r2, [sp, #28]
   11b8c:	bl	113a4 <alarm@plt>
   11b90:	cmp	r6, #0
   11b94:	beq	11c48 <putc_unlocked@plt+0x5c8>
   11b98:	ldr	r2, [sp, #28]
   11b9c:	mov	r1, r9
   11ba0:	ldrh	r0, [r8]
   11ba4:	bl	11620 <socket@plt>
   11ba8:	subs	r5, r0, #0
   11bac:	bge	11bc4 <putc_unlocked@plt+0x544>
   11bb0:	ldr	r3, [r4]
   11bb4:	cmp	r3, #0
   11bb8:	ldrne	r1, [pc, #1580]	; 121ec <putc_unlocked@plt+0xb6c>
   11bbc:	beq	11b58 <putc_unlocked@plt+0x4d8>
   11bc0:	b	11b50 <putc_unlocked@plt+0x4d0>
   11bc4:	mov	r3, #4
   11bc8:	mov	r2, #2
   11bcc:	str	r3, [sp]
   11bd0:	mov	r1, r9
   11bd4:	add	r3, sp, #40	; 0x28
   11bd8:	bl	11308 <setsockopt@plt>
   11bdc:	mov	r0, #60	; 0x3c
   11be0:	bl	113a4 <alarm@plt>
   11be4:	ldrh	r2, [r8]
   11be8:	rev16	r3, r6
   11bec:	cmp	r2, #2
   11bf0:	beq	11c0c <putc_unlocked@plt+0x58c>
   11bf4:	cmp	r2, #10
   11bf8:	beq	11c0c <putc_unlocked@plt+0x58c>
   11bfc:	ldr	r1, [pc, #1516]	; 121f0 <putc_unlocked@plt+0xb70>
   11c00:	mov	r0, #3
   11c04:	bl	115b4 <syslog@plt>
   11c08:	b	11b58 <putc_unlocked@plt+0x4d8>
   11c0c:	strh	r3, [r8, #2]
   11c10:	mov	r2, fp
   11c14:	mov	r1, r8
   11c18:	mov	r0, r5
   11c1c:	bl	11668 <connect@plt>
   11c20:	cmp	r0, #0
   11c24:	bge	11c40 <putc_unlocked@plt+0x5c0>
   11c28:	ldr	r3, [r4]
   11c2c:	cmp	r3, #0
   11c30:	movne	r0, #5
   11c34:	ldrne	r1, [pc, #1464]	; 121f4 <putc_unlocked@plt+0xb74>
   11c38:	beq	11b58 <putc_unlocked@plt+0x4d8>
   11c3c:	b	11b54 <putc_unlocked@plt+0x4d4>
   11c40:	mov	r0, #0
   11c44:	bl	113a4 <alarm@plt>
   11c48:	ldr	r0, [pc, #1448]	; 121f8 <putc_unlocked@plt+0xb78>
   11c4c:	bl	11944 <putc_unlocked@plt+0x2c4>
   11c50:	mov	r8, r0
   11c54:	ldr	r0, [pc, #1440]	; 121fc <putc_unlocked@plt+0xb7c>
   11c58:	bl	11944 <putc_unlocked@plt+0x2c4>
   11c5c:	mov	fp, r0
   11c60:	ldr	r0, [pc, #1432]	; 12200 <putc_unlocked@plt+0xb80>
   11c64:	bl	11944 <putc_unlocked@plt+0x2c4>
   11c68:	str	r0, [sp, #28]
   11c6c:	bl	114e8 <setpwent@plt>
   11c70:	add	r3, sp, #36	; 0x24
   11c74:	str	r3, [sp]
   11c78:	ldr	r2, [sp, #24]
   11c7c:	ldr	r3, [sp, #20]
   11c80:	add	r1, sp, #52	; 0x34
   11c84:	mov	r0, r8
   11c88:	bl	114d0 <getpwnam_r@plt>
   11c8c:	cmp	r0, #0
   11c90:	bne	11ca0 <putc_unlocked@plt+0x620>
   11c94:	ldr	r3, [sp, #36]	; 0x24
   11c98:	cmp	r3, #0
   11c9c:	bne	11cc8 <putc_unlocked@plt+0x648>
   11ca0:	ldr	r3, [r4]
   11ca4:	cmp	r3, #0
   11ca8:	beq	11cbc <putc_unlocked@plt+0x63c>
   11cac:	mov	r2, r8
   11cb0:	ldr	r1, [pc, #1356]	; 12204 <putc_unlocked@plt+0xb84>
   11cb4:	mov	r0, #36	; 0x24
   11cb8:	bl	115b4 <syslog@plt>
   11cbc:	ldr	r1, [pc, #1348]	; 12208 <putc_unlocked@plt+0xb88>
   11cc0:	mov	r0, #1
   11cc4:	bl	118cc <putc_unlocked@plt+0x24c>
   11cc8:	bl	1156c <endpwent@plt>
   11ccc:	ldr	r2, [sp, #36]	; 0x24
   11cd0:	ldm	r2, {r0, r9}
   11cd4:	bl	1132c <getspnam@plt>
   11cd8:	cmp	r0, #0
   11cdc:	ldrne	r9, [r0, #4]
   11ce0:	ldrb	r2, [r9]
   11ce4:	cmp	r2, #0
   11ce8:	beq	11d2c <putc_unlocked@plt+0x6ac>
   11cec:	mov	r1, r9
   11cf0:	mov	r0, fp
   11cf4:	bl	1159c <crypt@plt>
   11cf8:	mov	r1, r9
   11cfc:	bl	112fc <strcmp@plt>
   11d00:	cmp	r0, #0
   11d04:	beq	11d2c <putc_unlocked@plt+0x6ac>
   11d08:	ldr	r3, [r4]
   11d0c:	cmp	r3, #0
   11d10:	beq	11d24 <putc_unlocked@plt+0x6a4>
   11d14:	mov	r2, r8
   11d18:	ldr	r1, [pc, #1260]	; 1220c <putc_unlocked@plt+0xb8c>
   11d1c:	mov	r0, #36	; 0x24
   11d20:	bl	115b4 <syslog@plt>
   11d24:	ldr	r1, [pc, #1252]	; 12210 <putc_unlocked@plt+0xb90>
   11d28:	b	11cc0 <putc_unlocked@plt+0x640>
   11d2c:	ldr	r3, [sp, #36]	; 0x24
   11d30:	ldr	r0, [r3, #12]
   11d34:	bl	11440 <setgid@plt>
   11d38:	ldr	r3, [sp, #36]	; 0x24
   11d3c:	cmp	r0, #0
   11d40:	bge	11d5c <putc_unlocked@plt+0x6dc>
   11d44:	ldr	r2, [r3, #12]
   11d48:	ldr	r1, [pc, #1220]	; 12214 <putc_unlocked@plt+0xb94>
   11d4c:	mov	r0, #39	; 0x27
   11d50:	bl	115b4 <syslog@plt>
   11d54:	ldr	r1, [pc, #1212]	; 12218 <putc_unlocked@plt+0xb98>
   11d58:	b	11cc0 <putc_unlocked@plt+0x640>
   11d5c:	ldr	r1, [r3, #12]
   11d60:	ldr	r0, [r3]
   11d64:	bl	113e0 <initgroups@plt>
   11d68:	ldr	r2, [sp, #36]	; 0x24
   11d6c:	cmp	r0, #0
   11d70:	bge	11d8c <putc_unlocked@plt+0x70c>
   11d74:	ldr	r3, [r2, #12]
   11d78:	ldr	r1, [pc, #1180]	; 1221c <putc_unlocked@plt+0xb9c>
   11d7c:	ldr	r2, [r2]
   11d80:	mov	r0, #39	; 0x27
   11d84:	bl	115b4 <syslog@plt>
   11d88:	b	11d54 <putc_unlocked@plt+0x6d4>
   11d8c:	ldr	r0, [r2, #8]
   11d90:	bl	115c0 <setuid@plt>
   11d94:	cmp	r0, #0
   11d98:	bge	11db8 <putc_unlocked@plt+0x738>
   11d9c:	ldr	r3, [sp, #36]	; 0x24
   11da0:	ldr	r1, [pc, #1144]	; 12220 <putc_unlocked@plt+0xba0>
   11da4:	mov	r0, #39	; 0x27
   11da8:	ldr	r2, [r3, #8]
   11dac:	bl	115b4 <syslog@plt>
   11db0:	ldr	r1, [pc, #1132]	; 12224 <putc_unlocked@plt+0xba4>
   11db4:	b	11cc0 <putc_unlocked@plt+0x640>
   11db8:	cmp	r6, #0
   11dbc:	beq	12054 <putc_unlocked@plt+0x9d4>
   11dc0:	add	r0, sp, #44	; 0x2c
   11dc4:	bl	1153c <pipe@plt>
   11dc8:	bl	11554 <fork@plt>
   11dcc:	cmn	r0, #1
   11dd0:	mov	r6, r0
   11dd4:	bne	11dfc <putc_unlocked@plt+0x77c>
   11dd8:	ldr	r3, [r4]
   11ddc:	cmp	r3, #0
   11de0:	beq	11df4 <putc_unlocked@plt+0x774>
   11de4:	mov	r2, r8
   11de8:	ldr	r1, [pc, #1080]	; 12228 <putc_unlocked@plt+0xba8>
   11dec:	mov	r0, #3
   11df0:	bl	115b4 <syslog@plt>
   11df4:	ldr	r1, [pc, #1072]	; 1222c <putc_unlocked@plt+0xbac>
   11df8:	b	11cc0 <putc_unlocked@plt+0x640>
   11dfc:	cmp	r0, #0
   11e00:	beq	12020 <putc_unlocked@plt+0x9a0>
   11e04:	mov	r0, #0
   11e08:	bl	1165c <close@plt>
   11e0c:	mov	r0, #1
   11e10:	bl	1165c <close@plt>
   11e14:	mov	r0, #2
   11e18:	bl	1165c <close@plt>
   11e1c:	mov	r0, r7
   11e20:	bl	1165c <close@plt>
   11e24:	ldr	r0, [sp, #48]	; 0x30
   11e28:	bl	1165c <close@plt>
   11e2c:	mov	r3, #0
   11e30:	mov	r2, r3
   11e34:	str	r2, [sl, r3, lsl #2]
   11e38:	add	r3, r3, #1
   11e3c:	cmp	r3, #32
   11e40:	bne	11e34 <putc_unlocked@plt+0x7b4>
   11e44:	asr	r9, r5, #5
   11e48:	add	r3, sp, #384	; 0x180
   11e4c:	lsl	r9, r9, #2
   11e50:	add	r2, r3, r9
   11e54:	mov	r7, #1
   11e58:	and	r8, r5, #31
   11e5c:	ldr	r3, [r2, #-256]	; 0xffffff00
   11e60:	lsl	r8, r7, r8
   11e64:	orr	r3, r3, r8
   11e68:	str	r3, [r2, #-256]	; 0xffffff00
   11e6c:	ldr	r3, [sp, #44]	; 0x2c
   11e70:	add	r1, sp, #384	; 0x180
   11e74:	cmp	r3, #0
   11e78:	add	r2, r3, #31
   11e7c:	movge	r2, r3
   11e80:	ldr	r0, [sp, #48]	; 0x30
   11e84:	asr	r2, r2, #5
   11e88:	add	r4, sp, #35	; 0x23
   11e8c:	add	r2, r1, r2, lsl #2
   11e90:	rsbs	r1, r3, #0
   11e94:	and	r1, r1, #31
   11e98:	and	r3, r3, #31
   11e9c:	rsbpl	r3, r1, #0
   11ea0:	ldr	r1, [r2, #-256]	; 0xffffff00
   11ea4:	orr	r3, r1, r7, lsl r3
   11ea8:	ldr	r1, [pc, #896]	; 12230 <putc_unlocked@plt+0xbb0>
   11eac:	str	r3, [r2, #-256]	; 0xffffff00
   11eb0:	add	r2, sp, #40	; 0x28
   11eb4:	bl	13334 <argp_parse@@Base+0xb90>
   11eb8:	mov	r2, #128	; 0x80
   11ebc:	mov	r1, sl
   11ec0:	add	r0, sp, #256	; 0x100
   11ec4:	bl	11368 <memcpy@plt>
   11ec8:	ldr	r0, [sp, #44]	; 0x2c
   11ecc:	mov	r3, #0
   11ed0:	cmp	r5, r0
   11ed4:	movge	r0, r5
   11ed8:	str	r3, [sp]
   11edc:	mov	r2, r3
   11ee0:	add	r1, sp, #256	; 0x100
   11ee4:	add	r0, r0, #1
   11ee8:	bl	1138c <select@plt>
   11eec:	add	r3, sp, #384	; 0x180
   11ef0:	add	fp, r3, r9
   11ef4:	ldr	r3, [fp, #-128]	; 0xffffff80
   11ef8:	tst	r8, r3
   11efc:	beq	11f30 <putc_unlocked@plt+0x8b0>
   11f00:	mov	r2, r7
   11f04:	mov	r1, r4
   11f08:	mov	r0, r5
   11f0c:	bl	11320 <read@plt>
   11f10:	cmp	r0, #0
   11f14:	ldrle	r3, [fp, #-256]	; 0xffffff00
   11f18:	bicle	r3, r3, r8
   11f1c:	strle	r3, [fp, #-256]	; 0xffffff00
   11f20:	ble	11f30 <putc_unlocked@plt+0x8b0>
   11f24:	ldrb	r1, [sp, #35]	; 0x23
   11f28:	mov	r0, r6
   11f2c:	bl	113d4 <killpg@plt>
   11f30:	ldr	r0, [sp, #44]	; 0x2c
   11f34:	add	r2, sp, #384	; 0x180
   11f38:	cmp	r0, #0
   11f3c:	add	r3, r0, #31
   11f40:	movge	r3, r0
   11f44:	rsbs	r1, r0, #0
   11f48:	asr	r3, r3, #5
   11f4c:	and	r1, r1, #31
   11f50:	add	r3, r2, r3, lsl #2
   11f54:	and	r2, r0, #31
   11f58:	ldr	r3, [r3, #-128]	; 0xffffff80
   11f5c:	rsbpl	r2, r1, #0
   11f60:	ands	r3, r3, r7, lsl r2
   11f64:	beq	11fc0 <putc_unlocked@plt+0x940>
   11f68:	mov	r2, #8192	; 0x2000
   11f6c:	add	r1, sp, #384	; 0x180
   11f70:	bl	11320 <read@plt>
   11f74:	subs	r2, r0, #0
   11f78:	bgt	12010 <putc_unlocked@plt+0x990>
   11f7c:	mov	r1, #2
   11f80:	mov	r0, r5
   11f84:	bl	11548 <shutdown@plt>
   11f88:	ldr	r3, [sp, #44]	; 0x2c
   11f8c:	add	r1, sp, #384	; 0x180
   11f90:	cmp	r3, #0
   11f94:	add	r2, r3, #31
   11f98:	movge	r2, r3
   11f9c:	asr	r2, r2, #5
   11fa0:	add	r2, r1, r2, lsl #2
   11fa4:	rsbs	r1, r3, #0
   11fa8:	and	r1, r1, #31
   11fac:	and	r3, r3, #31
   11fb0:	rsbpl	r3, r1, #0
   11fb4:	ldr	r1, [r2, #-256]	; 0xffffff00
   11fb8:	bic	r3, r1, r7, lsl r3
   11fbc:	str	r3, [r2, #-256]	; 0xffffff00
   11fc0:	ldr	r3, [sp, #44]	; 0x2c
   11fc4:	add	r1, sp, #384	; 0x180
   11fc8:	cmp	r3, #0
   11fcc:	add	r2, r3, #31
   11fd0:	movge	r2, r3
   11fd4:	asr	r2, r2, #5
   11fd8:	add	r2, r1, r2, lsl #2
   11fdc:	rsbs	r1, r3, #0
   11fe0:	and	r1, r1, #31
   11fe4:	and	r3, r3, #31
   11fe8:	ldr	r2, [r2, #-256]	; 0xffffff00
   11fec:	rsbpl	r3, r1, #0
   11ff0:	ands	r3, r2, r7, lsl r3
   11ff4:	bne	11eb8 <putc_unlocked@plt+0x838>
   11ff8:	add	r3, sp, #384	; 0x180
   11ffc:	add	r3, r3, r9
   12000:	ldr	r0, [r3, #-256]	; 0xffffff00
   12004:	ands	r0, r8, r0
   12008:	bne	11eb8 <putc_unlocked@plt+0x838>
   1200c:	b	11b5c <putc_unlocked@plt+0x4dc>
   12010:	add	r1, sp, #384	; 0x180
   12014:	mov	r0, r5
   12018:	bl	11524 <write@plt>
   1201c:	b	11fc0 <putc_unlocked@plt+0x940>
   12020:	bl	114a0 <getpid@plt>
   12024:	mov	r1, r0
   12028:	mov	r0, r6
   1202c:	bl	115cc <setpgid@plt>
   12030:	mov	r0, r5
   12034:	bl	1165c <close@plt>
   12038:	ldr	r0, [sp, #44]	; 0x2c
   1203c:	bl	1165c <close@plt>
   12040:	mov	r1, #2
   12044:	ldr	r0, [sp, #48]	; 0x30
   12048:	bl	113bc <dup2@plt>
   1204c:	ldr	r0, [sp, #48]	; 0x30
   12050:	bl	1165c <close@plt>
   12054:	cmp	r7, #2
   12058:	ble	12064 <putc_unlocked@plt+0x9e4>
   1205c:	mov	r0, r7
   12060:	bl	1165c <close@plt>
   12064:	ldr	r3, [sp, #36]	; 0x24
   12068:	ldr	r0, [r3, #20]
   1206c:	bl	113ec <chdir@plt>
   12070:	cmp	r0, #0
   12074:	bge	120a4 <putc_unlocked@plt+0xa24>
   12078:	ldr	r3, [r4]
   1207c:	cmp	r3, #0
   12080:	beq	1209c <putc_unlocked@plt+0xa1c>
   12084:	ldr	r3, [sp, #36]	; 0x24
   12088:	mov	r2, r8
   1208c:	ldr	r1, [pc, #416]	; 12234 <putc_unlocked@plt+0xbb4>
   12090:	ldr	r3, [r3, #20]
   12094:	mov	r0, #37	; 0x25
   12098:	bl	115b4 <syslog@plt>
   1209c:	ldr	r1, [pc, #404]	; 12238 <putc_unlocked@plt+0xbb8>
   120a0:	b	11cc0 <putc_unlocked@plt+0x640>
   120a4:	ldr	r1, [pc, #400]	; 1223c <putc_unlocked@plt+0xbbc>
   120a8:	ldr	r0, [pc, #400]	; 12240 <putc_unlocked@plt+0xbc0>
   120ac:	bl	11410 <strcat@plt>
   120b0:	ldr	r5, [sp, #36]	; 0x24
   120b4:	ldr	r6, [pc, #392]	; 12244 <putc_unlocked@plt+0xbc4>
   120b8:	mov	r2, #255	; 0xff
   120bc:	ldr	r1, [r5, #20]
   120c0:	ldr	r0, [pc, #384]	; 12248 <putc_unlocked@plt+0xbc8>
   120c4:	bl	1162c <strncat@plt>
   120c8:	ldr	r1, [r5, #24]
   120cc:	mov	r2, #255	; 0xff
   120d0:	ldr	r0, [pc, #372]	; 1224c <putc_unlocked@plt+0xbcc>
   120d4:	bl	1162c <strncat@plt>
   120d8:	ldr	r1, [r5]
   120dc:	mov	r2, #31
   120e0:	add	r0, r6, #1
   120e4:	bl	1162c <strncat@plt>
   120e8:	ldr	r1, [r5]
   120ec:	mov	r2, #31
   120f0:	add	r0, r6, #39	; 0x27
   120f4:	bl	1162c <strncat@plt>
   120f8:	mov	r2, #127	; 0x7f
   120fc:	add	r1, sp, #80	; 0x50
   12100:	add	r0, r6, #80	; 0x50
   12104:	bl	1162c <strncat@plt>
   12108:	ldr	r3, [pc, #320]	; 12250 <putc_unlocked@plt+0xbd0>
   1210c:	add	r6, r6, #216	; 0xd8
   12110:	mov	r1, #47	; 0x2f
   12114:	str	r6, [r3]
   12118:	ldr	r3, [r5, #24]
   1211c:	ldrb	r3, [r3]
   12120:	cmp	r3, #0
   12124:	ldreq	r3, [pc, #296]	; 12254 <putc_unlocked@plt+0xbd4>
   12128:	streq	r3, [r5, #24]
   1212c:	ldr	r5, [r5, #24]
   12130:	mov	r0, r5
   12134:	bl	11584 <strrchr@plt>
   12138:	mov	r2, #1
   1213c:	ldr	r1, [pc, #276]	; 12258 <putc_unlocked@plt+0xbd8>
   12140:	cmp	r0, #0
   12144:	addne	r5, r0, #1
   12148:	mov	r0, #2
   1214c:	bl	11524 <write@plt>
   12150:	ldr	r3, [r4]
   12154:	cmp	r3, #0
   12158:	beq	12170 <putc_unlocked@plt+0xaf0>
   1215c:	add	r3, sp, #80	; 0x50
   12160:	mov	r2, r8
   12164:	ldr	r1, [pc, #240]	; 1225c <putc_unlocked@plt+0xbdc>
   12168:	mov	r0, #6
   1216c:	bl	115b4 <syslog@plt>
   12170:	ldr	r0, [sp, #36]	; 0x24
   12174:	mov	r3, #0
   12178:	str	r3, [sp]
   1217c:	ldr	r2, [pc, #220]	; 12260 <putc_unlocked@plt+0xbe0>
   12180:	ldr	r3, [sp, #28]
   12184:	mov	r1, r5
   12188:	ldr	r0, [r0, #24]
   1218c:	bl	11578 <execl@plt>
   12190:	ldr	r3, [r4]
   12194:	cmp	r3, #0
   12198:	beq	121ac <putc_unlocked@plt+0xb2c>
   1219c:	mov	r2, r8
   121a0:	ldr	r1, [pc, #188]	; 12264 <putc_unlocked@plt+0xbe4>
   121a4:	mov	r0, #3
   121a8:	bl	115b4 <syslog@plt>
   121ac:	bl	114f4 <__errno_location@plt>
   121b0:	ldr	r3, [sp, #36]	; 0x24
   121b4:	ldr	r2, [pc, #172]	; 12268 <putc_unlocked@plt+0xbe8>
   121b8:	ldr	r3, [r3, #24]
   121bc:	ldr	r1, [r0]
   121c0:	mov	r0, #1
   121c4:	bl	11428 <error@plt>
   121c8:	mvn	r0, #0
   121cc:	add	sp, sp, #8576	; 0x2180
   121d0:	add	sp, sp, #4
   121d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121d8:	andeq	r8, r1, r2, asr #32
   121dc:	andeq	r8, r1, r2, asr r0
   121e0:	andeq	r9, r2, r4, lsl r5
   121e4:	andeq	r8, r1, ip, asr r0
   121e8:	andeq	r8, r1, lr, rrx
   121ec:	andeq	r8, r1, lr, ror r0
   121f0:	muleq	r1, r0, r0
   121f4:	andeq	r8, r1, sl, lsr #1
   121f8:	strheq	r8, [r1], -r6
   121fc:	strheq	r8, [r1], -pc	; <UNPREDICTABLE>
   12200:	andeq	r8, r1, r8, asr #1
   12204:	ldrdeq	r8, [r1], -r0
   12208:	andeq	r8, r1, r3, ror #1
   1220c:	strdeq	r8, [r1], -r4
   12210:	andeq	r8, r1, lr, lsl #2
   12214:	andeq	r8, r1, r2, lsr #2
   12218:	andeq	r8, r1, r7, lsr r1
   1221c:	andeq	r8, r1, r1, asr r1
   12220:	andeq	r8, r1, r8, ror #2
   12224:	andeq	r8, r1, sp, ror r1
   12228:	muleq	r1, r3, r1
   1222c:	andeq	r8, r1, r8, lsr #3
   12230:	andeq	r5, r0, r1, lsr #8
   12234:			; <UNDEFINED> instruction: 0x000181b3
   12238:	andeq	r8, r1, sl, asr #3
   1223c:	ldrdeq	r8, [r1], -pc	; <UNPREDICTABLE>
   12240:	andeq	r9, r2, r4, asr r1
   12244:	andeq	r9, r2, r4, ror r3
   12248:	andeq	r9, r2, r8, ror #2
   1224c:	andeq	r9, r2, lr, ror #4
   12250:	strdeq	r9, [r2], -ip
   12254:	andeq	r8, r1, sp, ror #3
   12258:	andeq	r8, r1, r0
   1225c:	strdeq	r8, [r1], -r5
   12260:	andeq	r8, r1, r0, lsl r2
   12264:	andeq	r8, r1, r3, lsl r2
   12268:	andeq	r8, r1, ip, lsr #4
   1226c:	push	{r4, r5, r6, lr}
   12270:	ldr	r6, [r0]
   12274:	cmp	r6, #0
   12278:	beq	122c4 <putc_unlocked@plt+0xc44>
   1227c:	mov	ip, r2
   12280:	ldr	r2, [r0, #32]
   12284:	mov	r5, r1
   12288:	str	r2, [r1, #36]	; 0x24
   1228c:	ldr	r2, [r0, #24]
   12290:	mov	r4, r0
   12294:	str	r2, [r1, #28]
   12298:	ldr	r2, [r0, #28]
   1229c:	str	r2, [r1, #32]
   122a0:	ldr	r2, [r0, #12]
   122a4:	mov	r0, ip
   122a8:	str	r2, [r1, #20]
   122ac:	mov	r2, r1
   122b0:	mov	r1, r3
   122b4:	blx	r6
   122b8:	ldr	r3, [r5, #36]	; 0x24
   122bc:	str	r3, [r4, #32]
   122c0:	pop	{r4, r5, r6, pc}
   122c4:	mov	r0, #7
   122c8:	pop	{r4, r5, r6, pc}
   122cc:	ldr	r3, [r0]
   122d0:	push	{r4, r5, r6, lr}
   122d4:	cmp	r3, #0
   122d8:	ldr	r4, [r0, #16]
   122dc:	bne	122ec <putc_unlocked@plt+0xc6c>
   122e0:	ldr	r2, [r0, #4]
   122e4:	cmp	r2, #0
   122e8:	beq	12354 <putc_unlocked@plt+0xcd4>
   122ec:	ldr	r2, [r1, #8]
   122f0:	cmp	r3, #0
   122f4:	add	r2, r2, #1
   122f8:	str	r2, [r1, #8]
   122fc:	beq	12354 <putc_unlocked@plt+0xcd4>
   12300:	mov	r2, #0
   12304:	add	r3, r3, #24
   12308:	ldr	r0, [r3, #-20]	; 0xffffffec
   1230c:	cmp	r0, #0
   12310:	bne	12390 <putc_unlocked@plt+0xd10>
   12314:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12318:	cmp	r0, #0
   1231c:	bne	12390 <putc_unlocked@plt+0xd10>
   12320:	ldr	r0, [r3, #-8]
   12324:	cmp	r0, #0
   12328:	bne	12390 <putc_unlocked@plt+0xd10>
   1232c:	ldr	r0, [r3, #-4]
   12330:	cmp	r0, #0
   12334:	bne	12390 <putc_unlocked@plt+0xd10>
   12338:	ldr	r3, [r1]
   1233c:	add	r0, r2, r2, lsl #1
   12340:	add	r3, r3, r0
   12344:	str	r3, [r1]
   12348:	ldr	r3, [r1, #4]
   1234c:	add	r2, r3, r2
   12350:	str	r2, [r1, #4]
   12354:	cmp	r4, #0
   12358:	movne	r5, r1
   1235c:	addne	r4, r4, #16
   12360:	bne	1237c <putc_unlocked@plt+0xcfc>
   12364:	pop	{r4, r5, r6, pc}
   12368:	mov	r1, r5
   1236c:	bl	122cc <putc_unlocked@plt+0xc4c>
   12370:	ldr	r3, [r5, #12]
   12374:	add	r3, r3, #1
   12378:	str	r3, [r5, #12]
   1237c:	add	r4, r4, #16
   12380:	ldr	r0, [r4, #-32]	; 0xffffffe0
   12384:	cmp	r0, #0
   12388:	bne	12368 <putc_unlocked@plt+0xce8>
   1238c:	pop	{r4, r5, r6, pc}
   12390:	add	r2, r2, #1
   12394:	b	12304 <putc_unlocked@plt+0xc84>
   12398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1239c:	sub	sp, sp, #36	; 0x24
   123a0:	ldr	r6, [r0]
   123a4:	mov	r9, r0
   123a8:	cmp	r6, #0
   123ac:	str	r1, [sp, #16]
   123b0:	str	r2, [sp, #20]
   123b4:	mov	r4, r3
   123b8:	ldr	r5, [sp, #72]	; 0x48
   123bc:	ldr	sl, [r0, #16]
   123c0:	addne	r7, r6, #24
   123c4:	movne	fp, #0
   123c8:	bne	12544 <putc_unlocked@plt+0xec4>
   123cc:	ldr	r6, [r0, #4]
   123d0:	cmp	r6, #0
   123d4:	beq	12438 <putc_unlocked@plt+0xdb8>
   123d8:	ldr	r3, [r9, #4]
   123dc:	ldr	r2, [sp, #16]
   123e0:	stm	r4, {r3, r9}
   123e4:	ldr	r3, [r5, #4]
   123e8:	str	r2, [r4, #16]
   123ec:	str	r3, [r4, #8]
   123f0:	ldr	r2, [sp, #20]
   123f4:	mov	r3, #0
   123f8:	cmp	sl, r3
   123fc:	str	r3, [r4, #12]
   12400:	str	r2, [r4, #20]
   12404:	str	r3, [r4, #24]
   12408:	str	r3, [r4, #32]
   1240c:	str	r3, [r4, #28]
   12410:	beq	12430 <putc_unlocked@plt+0xdb0>
   12414:	ldr	r2, [sl, r3, lsl #4]
   12418:	cmp	r2, #0
   1241c:	bne	125a0 <putc_unlocked@plt+0xf20>
   12420:	ldr	r2, [r5, #12]
   12424:	add	r3, r2, r3, lsl #2
   12428:	str	r2, [r4, #28]
   1242c:	str	r3, [r5, #12]
   12430:	mov	r6, r4
   12434:	add	r4, r4, #36	; 0x24
   12438:	cmp	sl, #0
   1243c:	movne	r2, #0
   12440:	bne	125c4 <putc_unlocked@plt+0xf44>
   12444:	mov	r0, r4
   12448:	add	sp, sp, #36	; 0x24
   1244c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12450:	tst	r2, #8
   12454:	bne	1247c <putc_unlocked@plt+0xdfc>
   12458:	sub	r3, r8, #1
   1245c:	cmp	r3, #254	; 0xfe
   12460:	bhi	1247c <putc_unlocked@plt+0xdfc>
   12464:	bl	11494 <__ctype_b_loc@plt>
   12468:	lsl	r3, r8, #1
   1246c:	ldr	r2, [r0]
   12470:	ldrh	r3, [r2, r3]
   12474:	tst	r3, #16384	; 0x4000
   12478:	bne	125d4 <putc_unlocked@plt+0xf54>
   1247c:	ldr	r3, [r7, #-24]	; 0xffffffe8
   12480:	cmp	r3, #0
   12484:	beq	12540 <putc_unlocked@plt+0xec0>
   12488:	ldr	r2, [r5]
   1248c:	str	r2, [sp, #12]
   12490:	ldr	r2, [r2, #8]
   12494:	mov	r8, r2
   12498:	ldr	r0, [r8]
   1249c:	cmp	r0, #0
   124a0:	beq	124d0 <putc_unlocked@plt+0xe50>
   124a4:	mov	r1, r3
   124a8:	str	r2, [sp, #28]
   124ac:	str	r3, [sp, #24]
   124b0:	bl	112fc <strcmp@plt>
   124b4:	ldr	r3, [sp, #24]
   124b8:	ldr	r2, [sp, #28]
   124bc:	cmp	r0, #0
   124c0:	bne	12598 <putc_unlocked@plt+0xf18>
   124c4:	sub	r8, r8, r2
   124c8:	cmn	r8, #15
   124cc:	bge	12540 <putc_unlocked@plt+0xec0>
   124d0:	ldr	r1, [r5, #8]
   124d4:	str	r3, [r1]
   124d8:	ldr	r3, [r6, #8]
   124dc:	cmp	r3, #0
   124e0:	beq	124f8 <putc_unlocked@plt+0xe78>
   124e4:	ldr	r3, [r6, #12]
   124e8:	tst	r3, #1
   124ec:	movne	r3, #2
   124f0:	moveq	r3, #1
   124f4:	str	r3, [sp, #8]
   124f8:	ldr	r2, [sp, #12]
   124fc:	ldr	r3, [sp, #8]
   12500:	ldr	r0, [pc, #292]	; 1262c <putc_unlocked@plt+0xfac>
   12504:	ldr	r2, [r2, #48]	; 0x30
   12508:	stmib	r1, {r3, fp}
   1250c:	sub	r2, r4, r2
   12510:	ldr	r3, [r7, #-20]	; 0xffffffec
   12514:	asr	r2, r2, #2
   12518:	cmp	r3, #0
   1251c:	mul	r2, r0, r2
   12520:	ldreq	r3, [r6, #4]
   12524:	add	r2, r2, #1
   12528:	bic	r3, r3, #-16777216	; 0xff000000
   1252c:	add	r3, r3, r2, lsl #24
   12530:	str	r3, [r1, #12]
   12534:	add	r3, r1, #16
   12538:	str	r3, [r5, #8]
   1253c:	str	fp, [r1, #16]
   12540:	add	r7, r7, #24
   12544:	ldr	r8, [r7, #-20]	; 0xffffffec
   12548:	sub	r3, r7, #24
   1254c:	cmp	r8, #0
   12550:	bne	12578 <putc_unlocked@plt+0xef8>
   12554:	ldr	r2, [r7, #-24]	; 0xffffffe8
   12558:	cmp	r2, #0
   1255c:	bne	12578 <putc_unlocked@plt+0xef8>
   12560:	ldr	r2, [r7, #-8]
   12564:	cmp	r2, #0
   12568:	bne	12578 <putc_unlocked@plt+0xef8>
   1256c:	ldr	r2, [r7, #-4]
   12570:	cmp	r2, #0
   12574:	beq	123d8 <putc_unlocked@plt+0xd58>
   12578:	ldr	r2, [r7, #-12]
   1257c:	tst	r2, #4
   12580:	moveq	r6, r3
   12584:	ldr	r3, [r6, #12]
   12588:	ands	r3, r3, #8
   1258c:	str	r3, [sp, #8]
   12590:	beq	12450 <putc_unlocked@plt+0xdd0>
   12594:	b	12540 <putc_unlocked@plt+0xec0>
   12598:	add	r8, r8, #16
   1259c:	b	12498 <putc_unlocked@plt+0xe18>
   125a0:	add	r3, r3, #1
   125a4:	b	12414 <putc_unlocked@plt+0xd94>
   125a8:	mov	r3, r4
   125ac:	str	r5, [sp]
   125b0:	mov	r1, r6
   125b4:	add	r7, r2, #1
   125b8:	bl	12398 <putc_unlocked@plt+0xd18>
   125bc:	mov	r2, r7
   125c0:	mov	r4, r0
   125c4:	ldr	r0, [sl, r2, lsl #4]
   125c8:	cmp	r0, #0
   125cc:	bne	125a8 <putc_unlocked@plt+0xf28>
   125d0:	b	12444 <putc_unlocked@plt+0xdc4>
   125d4:	ldr	r3, [r5, #4]
   125d8:	add	r2, r3, #1
   125dc:	str	r2, [r5, #4]
   125e0:	strb	r8, [r3]
   125e4:	ldr	r3, [r6, #8]
   125e8:	cmp	r3, #0
   125ec:	beq	12620 <putc_unlocked@plt+0xfa0>
   125f0:	ldr	r3, [r5, #4]
   125f4:	add	r2, r3, #1
   125f8:	str	r2, [r5, #4]
   125fc:	mov	r2, #58	; 0x3a
   12600:	strb	r2, [r3]
   12604:	ldr	r3, [r6, #12]
   12608:	tst	r3, #1
   1260c:	ldrne	r3, [r5, #4]
   12610:	addne	r2, r3, #1
   12614:	strne	r2, [r5, #4]
   12618:	movne	r2, #58	; 0x3a
   1261c:	strbne	r2, [r3]
   12620:	ldr	r3, [r5, #4]
   12624:	strb	fp, [r3]
   12628:	b	1247c <putc_unlocked@plt+0xdfc>
   1262c:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   12630:	cmp	r0, #86	; 0x56
   12634:	bne	126a0 <putc_unlocked@plt+0x1020>
   12638:	ldr	r3, [pc, #112]	; 126b0 <putc_unlocked@plt+0x1030>
   1263c:	push	{r4, lr}
   12640:	mov	r4, r2
   12644:	ldr	r3, [r3]
   12648:	cmp	r3, #0
   1264c:	beq	1266c <putc_unlocked@plt+0xfec>
   12650:	mov	r1, r2
   12654:	ldr	r0, [r2, #48]	; 0x30
   12658:	blx	r3
   1265c:	ldr	r0, [r4, #16]
   12660:	ands	r0, r0, #32
   12664:	bne	126a8 <putc_unlocked@plt+0x1028>
   12668:	bl	114ac <exit@plt>
   1266c:	ldr	r3, [pc, #64]	; 126b4 <putc_unlocked@plt+0x1034>
   12670:	ldr	r2, [r3]
   12674:	cmp	r2, #0
   12678:	beq	1268c <putc_unlocked@plt+0x100c>
   1267c:	ldr	r1, [pc, #52]	; 126b8 <putc_unlocked@plt+0x1038>
   12680:	ldr	r0, [r4, #48]	; 0x30
   12684:	bl	114dc <fprintf@plt>
   12688:	b	1265c <putc_unlocked@plt+0xfdc>
   1268c:	ldr	r2, [pc, #40]	; 126bc <putc_unlocked@plt+0x103c>
   12690:	ldr	r1, [pc, #40]	; 126c0 <putc_unlocked@plt+0x1040>
   12694:	mov	r0, r4
   12698:	bl	16950 <argp_error@@Base>
   1269c:	b	1265c <putc_unlocked@plt+0xfdc>
   126a0:	mov	r0, #7
   126a4:	bx	lr
   126a8:	mov	r0, #0
   126ac:	pop	{r4, pc}
   126b0:	andeq	r9, r2, ip, lsl r5
   126b4:	andeq	r9, r2, r4, asr r5
   126b8:	andeq	r8, r1, lr, lsr r5
   126bc:	ldrdeq	r8, [r1], -r4
   126c0:	andeq	r8, r1, r7, lsl #21
   126c4:	cmn	r0, #3
   126c8:	push	{r4, r5, r6, lr}
   126cc:	mov	r4, r2
   126d0:	beq	12714 <putc_unlocked@plt+0x1094>
   126d4:	mov	r5, r1
   126d8:	bgt	126ec <putc_unlocked@plt+0x106c>
   126dc:	cmn	r0, #4
   126e0:	beq	12750 <putc_unlocked@plt+0x10d0>
   126e4:	mov	r0, #7
   126e8:	pop	{r4, r5, r6, pc}
   126ec:	cmn	r0, #2
   126f0:	beq	1271c <putc_unlocked@plt+0x109c>
   126f4:	cmp	r0, #63	; 0x3f
   126f8:	ldreq	r2, [pc, #140]	; 1278c <putc_unlocked@plt+0x110c>
   126fc:	bne	126e4 <putc_unlocked@plt+0x1064>
   12700:	ldr	r1, [r4, #48]	; 0x30
   12704:	mov	r0, r4
   12708:	bl	168b0 <argp_state_help@@Base>
   1270c:	mov	r0, #0
   12710:	pop	{r4, r5, r6, pc}
   12714:	ldr	r2, [pc, #116]	; 12790 <putc_unlocked@plt+0x1110>
   12718:	b	12700 <putc_unlocked@plt+0x1080>
   1271c:	ldr	r3, [pc, #112]	; 12794 <putc_unlocked@plt+0x1114>
   12720:	mov	r0, r1
   12724:	str	r1, [r3]
   12728:	bl	131b0 <argp_parse@@Base+0xa0c>
   1272c:	ldr	r3, [pc, #100]	; 12798 <putc_unlocked@plt+0x1118>
   12730:	str	r0, [r3]
   12734:	ldr	r3, [r4, #16]
   12738:	str	r0, [r4, #40]	; 0x28
   1273c:	and	r3, r3, #3
   12740:	cmp	r3, #1
   12744:	ldreq	r3, [r4, #8]
   12748:	streq	r5, [r3]
   1274c:	b	1270c <putc_unlocked@plt+0x108c>
   12750:	cmp	r1, #0
   12754:	ldr	r0, [pc, #64]	; 1279c <putc_unlocked@plt+0x111c>
   12758:	movne	r0, r1
   1275c:	bl	115fc <atoi@plt>
   12760:	ldr	r4, [pc, #56]	; 127a0 <putc_unlocked@plt+0x1120>
   12764:	mov	r5, #1
   12768:	str	r0, [r4]
   1276c:	ldr	r3, [r4]
   12770:	sub	r2, r3, #1
   12774:	cmp	r3, #0
   12778:	str	r2, [r4]
   1277c:	ble	1270c <putc_unlocked@plt+0x108c>
   12780:	mov	r0, r5
   12784:	bl	11398 <sleep@plt>
   12788:	b	1276c <putc_unlocked@plt+0x10ec>
   1278c:	andeq	r0, r0, sl, ror r2
   12790:	andeq	r0, r0, r1, lsl #4
   12794:	andeq	r9, r2, r0, lsl #10
   12798:	strdeq	r9, [r2], -r8
   1279c:	strdeq	r8, [r1], -r7
   127a0:	andeq	r9, r2, r8, lsl r5

000127a4 <argp_parse@@Base>:
   127a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127a8:	add	fp, sp, #32
   127ac:	tst	r3, #1
   127b0:	sub	sp, sp, #220	; 0xdc
   127b4:	mov	r4, r0
   127b8:	mov	r8, r2
   127bc:	str	r1, [fp, #-240]	; 0xffffff10
   127c0:	mov	sl, r3
   127c4:	bne	127f8 <argp_parse@@Base+0x54>
   127c8:	ldr	r3, [pc, #2296]	; 130c8 <argp_parse@@Base+0x924>
   127cc:	ldr	r5, [pc, #2296]	; 130cc <argp_parse@@Base+0x928>
   127d0:	ldr	r2, [r3]
   127d4:	cmp	r2, #0
   127d8:	ldreq	r2, [r8]
   127dc:	streq	r2, [r3]
   127e0:	ldr	r3, [r5]
   127e4:	cmp	r3, #0
   127e8:	bne	127f8 <argp_parse@@Base+0x54>
   127ec:	ldr	r0, [r8]
   127f0:	bl	131b0 <argp_parse@@Base+0xa0c>
   127f4:	str	r0, [r5]
   127f8:	ands	r7, sl, #16
   127fc:	bne	12884 <argp_parse@@Base+0xe0>
   12800:	sub	sp, sp, #72	; 0x48
   12804:	add	r5, sp, #8
   12808:	sub	sp, sp, #40	; 0x28
   1280c:	add	r6, sp, #8
   12810:	mov	r2, #28
   12814:	mov	r1, r7
   12818:	mov	r0, r6
   1281c:	bl	1150c <memset@plt>
   12820:	str	r5, [r6, #16]
   12824:	mov	r0, r5
   12828:	mov	r2, #64	; 0x40
   1282c:	mov	r1, r7
   12830:	bl	1150c <memset@plt>
   12834:	cmp	r4, #0
   12838:	strne	r4, [r5]
   1283c:	ldr	r3, [pc, #2188]	; 130d0 <argp_parse@@Base+0x92c>
   12840:	addne	r5, r5, #16
   12844:	str	r3, [r5]
   12848:	ldr	r3, [pc, #2180]	; 130d4 <argp_parse@@Base+0x930>
   1284c:	ldr	r3, [r3]
   12850:	cmp	r3, #0
   12854:	bne	1286c <argp_parse@@Base+0xc8>
   12858:	ldr	r3, [pc, #2168]	; 130d8 <argp_parse@@Base+0x934>
   1285c:	ldr	r3, [r3]
   12860:	cmp	r3, #0
   12864:	addeq	r3, r5, #16
   12868:	beq	12878 <argp_parse@@Base+0xd4>
   1286c:	ldr	r2, [pc, #2152]	; 130dc <argp_parse@@Base+0x938>
   12870:	add	r3, r5, #32
   12874:	str	r2, [r5, #16]
   12878:	mov	r4, r6
   1287c:	mov	r2, #0
   12880:	str	r2, [r3]
   12884:	mov	r2, #36	; 0x24
   12888:	mov	r1, #0
   1288c:	sub	r0, fp, #196	; 0xc4
   12890:	bl	1150c <memset@plt>
   12894:	ands	r3, sl, #4
   12898:	moveq	r3, #1
   1289c:	movne	r3, #0
   128a0:	str	r3, [fp, #-228]	; 0xffffff1c
   128a4:	mov	r3, #0
   128a8:	cmp	r4, r3
   128ac:	str	r3, [fp, #-224]	; 0xffffff20
   128b0:	str	r3, [fp, #-220]	; 0xffffff24
   128b4:	str	r3, [fp, #-216]	; 0xffffff28
   128b8:	beq	128c8 <argp_parse@@Base+0x124>
   128bc:	sub	r1, fp, #228	; 0xe4
   128c0:	mov	r0, r4
   128c4:	bl	122cc <putc_unlocked@plt+0xc4c>
   128c8:	ldr	r9, [fp, #-220]	; 0xffffff24
   128cc:	ldr	r5, [fp, #-216]	; 0xffffff28
   128d0:	add	r3, r9, #1
   128d4:	mov	r9, #36	; 0x24
   128d8:	ldr	r6, [fp, #-224]	; 0xffffff20
   128dc:	mul	r9, r9, r3
   128e0:	ldr	r0, [fp, #-228]	; 0xffffff1c
   128e4:	lsl	r5, r5, #2
   128e8:	add	r6, r6, #1
   128ec:	add	r3, r9, r5
   128f0:	add	r6, r3, r6, lsl #4
   128f4:	add	r0, r0, #1
   128f8:	add	r0, r0, r6
   128fc:	str	r3, [fp, #-236]	; 0xffffff14
   12900:	bl	13cf4 <argp_parse@@Base+0x1550>
   12904:	cmp	r0, #0
   12908:	mov	r7, r0
   1290c:	str	r0, [fp, #-40]	; 0xffffffd8
   12910:	moveq	r4, #12
   12914:	beq	12a94 <argp_parse@@Base+0x2f0>
   12918:	add	r3, r0, r9
   1291c:	str	r3, [fp, #-232]	; 0xffffff18
   12920:	str	r3, [fp, #-104]	; 0xffffff98
   12924:	ldr	r3, [fp, #-236]	; 0xffffff14
   12928:	sub	lr, fp, #196	; 0xc4
   1292c:	add	r3, r0, r3
   12930:	str	r3, [fp, #-236]	; 0xffffff14
   12934:	str	r3, [fp, #-152]	; 0xffffff68
   12938:	mov	r3, #1
   1293c:	add	r9, r0, r6
   12940:	str	r0, [fp, #-112]	; 0xffffff90
   12944:	str	r3, [fp, #-196]	; 0xffffff3c
   12948:	str	r3, [fp, #-192]	; 0xffffff40
   1294c:	ldm	lr!, {r0, r1, r2, r3}
   12950:	sub	ip, fp, #148	; 0x94
   12954:	str	r9, [fp, #-156]	; 0xffffff64
   12958:	stmia	ip!, {r0, r1, r2, r3}
   1295c:	ldm	lr!, {r0, r1, r2, r3}
   12960:	stmia	ip!, {r0, r1, r2, r3}
   12964:	mov	r2, r5
   12968:	ldr	r3, [lr]
   1296c:	mov	r1, #0
   12970:	ldr	r0, [fp, #-232]	; 0xffffff18
   12974:	str	r3, [ip]
   12978:	bl	1150c <memset@plt>
   1297c:	ldr	r3, [fp, #-236]	; 0xffffff14
   12980:	tst	sl, #8
   12984:	str	r3, [fp, #-204]	; 0xffffff34
   12988:	ldr	r3, [fp, #-232]	; 0xffffff18
   1298c:	str	r9, [fp, #-208]	; 0xffffff30
   12990:	sub	r5, fp, #160	; 0xa0
   12994:	addne	r9, r9, #1
   12998:	str	r3, [fp, #-200]	; 0xffffff38
   1299c:	str	r5, [fp, #-212]	; 0xffffff2c
   129a0:	strne	r9, [fp, #-208]	; 0xffffff30
   129a4:	movne	r3, #45	; 0x2d
   129a8:	bne	129c4 <argp_parse@@Base+0x220>
   129ac:	ands	r3, sl, #4
   129b0:	cmp	r3, #0
   129b4:	beq	129c8 <argp_parse@@Base+0x224>
   129b8:	mov	r3, #43	; 0x2b
   129bc:	add	r9, r9, #1
   129c0:	str	r9, [fp, #-208]	; 0xffffff30
   129c4:	strb	r3, [r7, r6]
   129c8:	ldr	r3, [fp, #-208]	; 0xffffff30
   129cc:	mov	r2, #0
   129d0:	cmp	r4, r2
   129d4:	strb	r2, [r3]
   129d8:	ldr	r3, [fp, #-204]	; 0xffffff34
   129dc:	str	r2, [r3]
   129e0:	ldreq	r3, [fp, #-112]	; 0xffffff90
   129e4:	str	r4, [fp, #-160]	; 0xffffff60
   129e8:	streq	r3, [fp, #-108]	; 0xffffff94
   129ec:	beq	12a0c <argp_parse@@Base+0x268>
   129f0:	sub	r3, fp, #212	; 0xd4
   129f4:	str	r3, [sp]
   129f8:	mov	r1, r2
   129fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   12a00:	mov	r0, r4
   12a04:	bl	12398 <putc_unlocked@plt+0xd18>
   12a08:	str	r0, [fp, #-108]	; 0xffffff94
   12a0c:	mov	r2, #56	; 0x38
   12a10:	mov	r1, #0
   12a14:	add	r0, r5, #64	; 0x40
   12a18:	bl	1150c <memset@plt>
   12a1c:	ldr	r3, [fp, #-160]	; 0xffffff60
   12a20:	ldr	r6, [fp, #-112]	; 0xffffff90
   12a24:	str	r3, [fp, #-96]	; 0xffffffa0
   12a28:	ldr	r3, [fp, #-240]	; 0xffffff10
   12a2c:	str	sl, [fp, #-80]	; 0xffffffb0
   12a30:	str	r3, [fp, #-92]	; 0xffffffa4
   12a34:	ldr	r3, [pc, #1700]	; 130e0 <argp_parse@@Base+0x93c>
   12a38:	mov	r4, #0
   12a3c:	ldr	sl, [pc, #1696]	; 130e4 <argp_parse@@Base+0x940>
   12a40:	ldr	r3, [r3]
   12a44:	add	r7, r5, #64	; 0x40
   12a48:	str	r3, [fp, #-52]	; 0xffffffcc
   12a4c:	ldr	r3, [pc, #1684]	; 130e8 <argp_parse@@Base+0x944>
   12a50:	mov	r9, r4
   12a54:	str	r8, [fp, #-88]	; 0xffffffa8
   12a58:	ldr	r3, [r3]
   12a5c:	str	r5, [fp, #-44]	; 0xffffffd4
   12a60:	str	r3, [fp, #-48]	; 0xffffffd0
   12a64:	mov	r3, #1
   12a68:	str	r3, [fp, #-100]	; 0xffffff9c
   12a6c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12a70:	cmp	r6, r3
   12a74:	ldrcc	r3, [fp, #8]
   12a78:	strcc	r3, [r6, #24]
   12a7c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12a80:	cmp	r6, r3
   12a84:	bcs	12b08 <argp_parse@@Base+0x364>
   12a88:	cmp	r4, #7
   12a8c:	cmpne	r4, #0
   12a90:	beq	12aa0 <argp_parse@@Base+0x2fc>
   12a94:	mov	r0, r4
   12a98:	sub	sp, fp, #32
   12a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12aa0:	ldr	r3, [r6, #16]
   12aa4:	cmp	r3, #0
   12aa8:	ldrne	r3, [r3, #28]
   12aac:	ldrne	r2, [r6, #20]
   12ab0:	ldrne	r3, [r3, r2, lsl #2]
   12ab4:	strne	r3, [r6, #24]
   12ab8:	ldr	r3, [r6]
   12abc:	cmp	r3, #0
   12ac0:	bne	12ae8 <argp_parse@@Base+0x344>
   12ac4:	ldr	r3, [r6, #4]
   12ac8:	ldr	r3, [r3, #16]
   12acc:	cmp	r3, #0
   12ad0:	beq	12ae8 <argp_parse@@Base+0x344>
   12ad4:	ldr	r3, [r3]
   12ad8:	cmp	r3, #0
   12adc:	ldrne	r3, [r6, #28]
   12ae0:	ldrne	r2, [r6, #24]
   12ae4:	strne	r2, [r3]
   12ae8:	mov	r0, r6
   12aec:	mov	r3, r9
   12af0:	mov	r2, sl
   12af4:	mov	r1, r7
   12af8:	bl	1226c <putc_unlocked@plt+0xbec>
   12afc:	add	r6, r6, #36	; 0x24
   12b00:	mov	r4, r0
   12b04:	b	12a7c <argp_parse@@Base+0x2d8>
   12b08:	cmp	r4, #7
   12b0c:	beq	12b18 <argp_parse@@Base+0x374>
   12b10:	cmp	r4, #0
   12b14:	bne	12a94 <argp_parse@@Base+0x2f0>
   12b18:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12b1c:	tst	r3, #2
   12b20:	moveq	r3, #1
   12b24:	streq	r3, [fp, #-144]	; 0xffffff70
   12b28:	beq	12b50 <argp_parse@@Base+0x3ac>
   12b2c:	tst	r3, #1
   12b30:	mov	r2, #0
   12b34:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   12b38:	str	r2, [fp, #-144]	; 0xffffff70
   12b3c:	subne	r3, r3, #4
   12b40:	strne	r3, [fp, #-88]	; 0xffffffa8
   12b44:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   12b48:	addne	r3, r3, #1
   12b4c:	strne	r3, [fp, #-92]	; 0xffffffa4
   12b50:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12b54:	cmp	r8, r3
   12b58:	bne	12b7c <argp_parse@@Base+0x3d8>
   12b5c:	ldr	r0, [r8]
   12b60:	cmp	r0, #0
   12b64:	beq	12b7c <argp_parse@@Base+0x3d8>
   12b68:	bl	131b0 <argp_parse@@Base+0xa0c>
   12b6c:	str	r0, [fp, #-56]	; 0xffffffc8
   12b70:	add	r8, r5, #64	; 0x40
   12b74:	ldr	r9, [pc, #1392]	; 130ec <argp_parse@@Base+0x948>
   12b78:	b	12d40 <argp_parse@@Base+0x59c>
   12b7c:	ldr	r3, [pc, #1352]	; 130cc <argp_parse@@Base+0x928>
   12b80:	ldr	r3, [r3]
   12b84:	str	r3, [fp, #-56]	; 0xffffffc8
   12b88:	b	12b70 <argp_parse@@Base+0x3cc>
   12b8c:	bl	132b8 <argp_parse@@Base+0xb14>
   12b90:	b	12dac <argp_parse@@Base+0x608>
   12b94:	cmp	r0, #63	; 0x3f
   12b98:	bne	1305c <argp_parse@@Base+0x8b8>
   12b9c:	ldr	r3, [fp, #-140]	; 0xffffff74
   12ba0:	cmn	r3, #1
   12ba4:	bne	13000 <argp_parse@@Base+0x85c>
   12ba8:	asrs	r3, r6, #24
   12bac:	bne	12e68 <argp_parse@@Base+0x6c4>
   12bb0:	mov	r1, r6
   12bb4:	ldr	r0, [fp, #-156]	; 0xffffff64
   12bb8:	bl	114c4 <strchr@plt>
   12bbc:	subs	r2, r0, #0
   12bc0:	beq	12bfc <argp_parse@@Base+0x458>
   12bc4:	ldr	r0, [fp, #-112]	; 0xffffff90
   12bc8:	ldr	r3, [fp, #-108]	; 0xffffff94
   12bcc:	cmp	r0, r3
   12bd0:	bcs	12bfc <argp_parse@@Base+0x458>
   12bd4:	ldr	r1, [r0, #8]
   12bd8:	cmp	r2, r1
   12bdc:	bcs	12e60 <argp_parse@@Base+0x6bc>
   12be0:	ldr	r3, [fp, #-136]	; 0xffffff78
   12be4:	mov	r2, r6
   12be8:	mov	r1, r8
   12bec:	bl	1226c <putc_unlocked@plt+0xbec>
   12bf0:	cmp	r0, #7
   12bf4:	mov	r4, r0
   12bf8:	bne	12ef4 <argp_parse@@Base+0x750>
   12bfc:	ldr	r3, [pc, #1260]	; 130f0 <argp_parse@@Base+0x94c>
   12c00:	ldr	r1, [pc, #1260]	; 130f4 <argp_parse@@Base+0x950>
   12c04:	mov	r2, r6
   12c08:	add	r0, r5, #64	; 0x40
   12c0c:	bl	16950 <argp_error@@Base>
   12c10:	sub	r7, r6, #1
   12c14:	mov	r4, #7
   12c18:	clz	r7, r7
   12c1c:	lsr	r7, r7, #5
   12c20:	cmp	r4, #7
   12c24:	movne	r7, #0
   12c28:	andeq	r7, r7, #1
   12c2c:	cmp	r7, #0
   12c30:	beq	12f74 <argp_parse@@Base+0x7d0>
   12c34:	ldr	r3, [fp, #-84]	; 0xffffffac
   12c38:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12c3c:	cmp	r3, r2
   12c40:	bne	12fcc <argp_parse@@Base+0x828>
   12c44:	mov	r4, #0
   12c48:	ldr	r7, [fp, #-112]	; 0xffffff90
   12c4c:	ldr	sl, [pc, #1188]	; 130f8 <argp_parse@@Base+0x954>
   12c50:	add	r8, r5, #64	; 0x40
   12c54:	mov	r9, r4
   12c58:	ldr	r6, [fp, #-108]	; 0xffffff94
   12c5c:	cmp	r7, r6
   12c60:	bcc	12f00 <argp_parse@@Base+0x75c>
   12c64:	ldr	r9, [pc, #1168]	; 130fc <argp_parse@@Base+0x958>
   12c68:	sub	r6, r6, #36	; 0x24
   12c6c:	add	r7, r5, #64	; 0x40
   12c70:	mov	r8, #0
   12c74:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c78:	cmp	r6, r3
   12c7c:	bcc	12f58 <argp_parse@@Base+0x7b4>
   12c80:	cmp	r4, #7
   12c84:	cmpne	r4, #0
   12c88:	beq	12f38 <argp_parse@@Base+0x794>
   12c8c:	ldr	r3, [fp, #4]
   12c90:	cmp	r3, #0
   12c94:	beq	12f74 <argp_parse@@Base+0x7d0>
   12c98:	ldr	r2, [fp, #4]
   12c9c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12ca0:	str	r3, [r2]
   12ca4:	b	12f6c <argp_parse@@Base+0x7c8>
   12ca8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12cac:	tst	r2, #4
   12cb0:	bne	12c34 <argp_parse@@Base+0x490>
   12cb4:	add	r2, r3, #1
   12cb8:	str	r2, [fp, #-84]	; 0xffffffac
   12cbc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12cc0:	ldr	r3, [r2, r3, lsl #2]
   12cc4:	str	r3, [fp, #-136]	; 0xffffff78
   12cc8:	ldr	r3, [fp, #-136]	; 0xffffff78
   12ccc:	ldr	r7, [fp, #-84]	; 0xffffffac
   12cd0:	str	r3, [fp, #-232]	; 0xffffff18
   12cd4:	ldr	r6, [fp, #-112]	; 0xffffff90
   12cd8:	mov	r3, #0
   12cdc:	mov	r4, #7
   12ce0:	mov	sl, r3
   12ce4:	sub	r7, r7, #1
   12ce8:	str	r7, [fp, #-84]	; 0xffffffac
   12cec:	ldr	r2, [fp, #-108]	; 0xffffff94
   12cf0:	cmp	r6, r2
   12cf4:	movcs	r2, #0
   12cf8:	movcc	r2, #1
   12cfc:	cmp	r4, #7
   12d00:	movne	r2, #0
   12d04:	cmp	r2, #0
   12d08:	bne	12e00 <argp_parse@@Base+0x65c>
   12d0c:	cmp	r4, #0
   12d10:	bne	12ee4 <argp_parse@@Base+0x740>
   12d14:	cmp	r3, r9
   12d18:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   12d1c:	streq	r3, [fp, #-84]	; 0xffffffac
   12d20:	ldr	r3, [fp, #-84]	; 0xffffffac
   12d24:	cmp	r7, r3
   12d28:	sublt	r7, r3, r7
   12d2c:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   12d30:	movge	r3, #1
   12d34:	addlt	r7, r3, r7
   12d38:	strlt	r7, [r6, #-24]	; 0xffffffe8
   12d3c:	strge	r3, [fp, #-100]	; 0xffffff9c
   12d40:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12d44:	ldr	r3, [fp, #-84]	; 0xffffffac
   12d48:	cmp	r2, #0
   12d4c:	beq	12d5c <argp_parse@@Base+0x5b8>
   12d50:	cmp	r2, r3
   12d54:	movgt	r2, #0
   12d58:	strgt	r2, [fp, #-72]	; 0xffffffb8
   12d5c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12d60:	cmp	r2, #0
   12d64:	beq	12dec <argp_parse@@Base+0x648>
   12d68:	ldr	r7, [fp, #-72]	; 0xffffffb8
   12d6c:	cmp	r7, #0
   12d70:	bne	12dec <argp_parse@@Base+0x648>
   12d74:	str	r3, [fp, #-148]	; 0xffffff6c
   12d78:	mvn	r3, #0
   12d7c:	str	r3, [fp, #-140]	; 0xffffff74
   12d80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12d84:	str	r7, [sp]
   12d88:	tst	r3, #64	; 0x40
   12d8c:	add	r3, r5, #12
   12d90:	str	r3, [sp, #4]
   12d94:	ldr	r2, [fp, #-156]	; 0xffffff64
   12d98:	ldr	r3, [fp, #-152]	; 0xffffff68
   12d9c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12da0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12da4:	beq	12b8c <argp_parse@@Base+0x3e8>
   12da8:	bl	13304 <argp_parse@@Base+0xb60>
   12dac:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12db0:	cmn	r0, #1
   12db4:	mov	r6, r0
   12db8:	str	r4, [fp, #-84]	; 0xffffffac
   12dbc:	bne	12b94 <argp_parse@@Base+0x3f0>
   12dc0:	mov	r3, #0
   12dc4:	cmp	r4, #1
   12dc8:	str	r3, [fp, #-100]	; 0xffffff9c
   12dcc:	ble	12dec <argp_parse@@Base+0x648>
   12dd0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12dd4:	sub	r3, r4, #-1073741823	; 0xc0000001
   12dd8:	ldr	r1, [pc, #800]	; 13100 <argp_parse@@Base+0x95c>
   12ddc:	ldr	r0, [r2, r3, lsl #2]
   12de0:	bl	112fc <strcmp@plt>
   12de4:	cmp	r0, #0
   12de8:	streq	r4, [fp, #-72]	; 0xffffffb8
   12dec:	ldr	r3, [fp, #-84]	; 0xffffffac
   12df0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12df4:	cmp	r3, r2
   12df8:	bge	12c34 <argp_parse@@Base+0x490>
   12dfc:	b	12ca8 <argp_parse@@Base+0x504>
   12e00:	ldr	r3, [fp, #-84]	; 0xffffffac
   12e04:	mov	r2, sl
   12e08:	add	r3, r3, #1
   12e0c:	str	r3, [fp, #-84]	; 0xffffffac
   12e10:	mov	r1, r8
   12e14:	ldr	r3, [fp, #-232]	; 0xffffff18
   12e18:	mov	r0, r6
   12e1c:	bl	1226c <putc_unlocked@plt+0xbec>
   12e20:	cmp	r0, #7
   12e24:	mov	r4, r0
   12e28:	movne	r3, sl
   12e2c:	bne	12e58 <argp_parse@@Base+0x6b4>
   12e30:	ldr	r3, [fp, #-84]	; 0xffffffac
   12e34:	mov	r2, r9
   12e38:	sub	r3, r3, #1
   12e3c:	str	r3, [fp, #-84]	; 0xffffffac
   12e40:	mov	r1, r8
   12e44:	mov	r3, sl
   12e48:	mov	r0, r6
   12e4c:	bl	1226c <putc_unlocked@plt+0xbec>
   12e50:	mov	r3, r9
   12e54:	mov	r4, r0
   12e58:	add	r6, r6, #36	; 0x24
   12e5c:	b	12cec <argp_parse@@Base+0x548>
   12e60:	add	r0, r0, #36	; 0x24
   12e64:	b	12bcc <argp_parse@@Base+0x428>
   12e68:	mov	r0, #36	; 0x24
   12e6c:	ands	r1, r6, #8388608	; 0x800000
   12e70:	mul	r0, r0, r3
   12e74:	ldr	ip, [fp, #-112]	; 0xffffff90
   12e78:	movne	r1, #-16777216	; 0xff000000
   12e7c:	bic	r2, r6, #-16777216	; 0xff000000
   12e80:	sub	r0, r0, #36	; 0x24
   12e84:	orr	r2, r2, r1
   12e88:	ldr	r3, [fp, #-136]	; 0xffffff78
   12e8c:	mov	r1, r8
   12e90:	add	r0, ip, r0
   12e94:	bl	1226c <putc_unlocked@plt+0xbec>
   12e98:	cmp	r0, #7
   12e9c:	mov	r4, r0
   12ea0:	bne	12ef4 <argp_parse@@Base+0x750>
   12ea4:	ldr	r3, [fp, #-152]	; 0xffffff68
   12ea8:	b	12ebc <argp_parse@@Base+0x718>
   12eac:	ldr	r2, [r3]
   12eb0:	cmp	r2, #0
   12eb4:	beq	12ec8 <argp_parse@@Base+0x724>
   12eb8:	add	r3, r3, #16
   12ebc:	ldr	r2, [r3, #12]
   12ec0:	cmp	r2, r6
   12ec4:	bne	12eac <argp_parse@@Base+0x708>
   12ec8:	ldr	r2, [r3]
   12ecc:	ldr	r1, [pc, #560]	; 13104 <argp_parse@@Base+0x960>
   12ed0:	cmp	r2, #0
   12ed4:	moveq	r2, r1
   12ed8:	ldr	r3, [pc, #528]	; 130f0 <argp_parse@@Base+0x94c>
   12edc:	ldr	r1, [pc, #548]	; 13108 <argp_parse@@Base+0x964>
   12ee0:	b	12c08 <argp_parse@@Base+0x464>
   12ee4:	cmp	r4, #7
   12ee8:	bne	12f7c <argp_parse@@Base+0x7d8>
   12eec:	mov	r6, #1
   12ef0:	b	12c10 <argp_parse@@Base+0x46c>
   12ef4:	cmp	r4, #0
   12ef8:	beq	12d40 <argp_parse@@Base+0x59c>
   12efc:	b	12c20 <argp_parse@@Base+0x47c>
   12f00:	cmp	r4, #7
   12f04:	cmpne	r4, #0
   12f08:	bne	12c64 <argp_parse@@Base+0x4c0>
   12f0c:	ldr	r3, [r7, #12]
   12f10:	cmp	r3, #0
   12f14:	bne	12f30 <argp_parse@@Base+0x78c>
   12f18:	mov	r3, r9
   12f1c:	mov	r2, sl
   12f20:	mov	r1, r8
   12f24:	mov	r0, r7
   12f28:	bl	1226c <putc_unlocked@plt+0xbec>
   12f2c:	mov	r4, r0
   12f30:	add	r7, r7, #36	; 0x24
   12f34:	b	12c58 <argp_parse@@Base+0x4b4>
   12f38:	mov	r0, r6
   12f3c:	mov	r3, r8
   12f40:	mov	r2, r9
   12f44:	mov	r1, r7
   12f48:	bl	1226c <putc_unlocked@plt+0xbec>
   12f4c:	sub	r6, r6, #36	; 0x24
   12f50:	mov	r4, r0
   12f54:	b	12c74 <argp_parse@@Base+0x4d0>
   12f58:	cmp	r4, #7
   12f5c:	beq	13068 <argp_parse@@Base+0x8c4>
   12f60:	ldr	r3, [fp, #4]
   12f64:	cmp	r3, #0
   12f68:	bne	12c98 <argp_parse@@Base+0x4f4>
   12f6c:	cmp	r4, #0
   12f70:	beq	13078 <argp_parse@@Base+0x8d4>
   12f74:	cmp	r4, #7
   12f78:	beq	13000 <argp_parse@@Base+0x85c>
   12f7c:	ldr	r6, [fp, #-112]	; 0xffffff90
   12f80:	ldr	r9, [pc, #388]	; 1310c <argp_parse@@Base+0x968>
   12f84:	add	r7, r5, #64	; 0x40
   12f88:	mov	r8, #0
   12f8c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12f90:	cmp	r6, r3
   12f94:	bcc	13018 <argp_parse@@Base+0x874>
   12f98:	ldr	r6, [fp, #-108]	; 0xffffff94
   12f9c:	ldr	r8, [pc, #364]	; 13110 <argp_parse@@Base+0x96c>
   12fa0:	sub	r6, r6, #36	; 0x24
   12fa4:	add	r5, r5, #64	; 0x40
   12fa8:	mov	r7, #0
   12fac:	ldr	r3, [fp, #-112]	; 0xffffff90
   12fb0:	cmp	r6, r3
   12fb4:	bcs	13040 <argp_parse@@Base+0x89c>
   12fb8:	cmp	r4, #7
   12fbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fc0:	moveq	r4, #22
   12fc4:	bl	13240 <argp_parse@@Base+0xa9c>
   12fc8:	b	12a94 <argp_parse@@Base+0x2f0>
   12fcc:	ldr	r2, [fp, #4]
   12fd0:	cmp	r2, #0
   12fd4:	strne	r3, [r2]
   12fd8:	bne	13078 <argp_parse@@Base+0x8d4>
   12fdc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12fe0:	tst	r3, #2
   12fe4:	bne	13000 <argp_parse@@Base+0x85c>
   12fe8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12fec:	cmp	r0, #0
   12ff0:	beq	13000 <argp_parse@@Base+0x85c>
   12ff4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12ff8:	ldr	r1, [pc, #276]	; 13114 <argp_parse@@Base+0x970>
   12ffc:	bl	114dc <fprintf@plt>
   13000:	mov	r2, #260	; 0x104
   13004:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13008:	add	r0, r5, #64	; 0x40
   1300c:	bl	168b0 <argp_state_help@@Base>
   13010:	mov	r4, #7
   13014:	b	12f7c <argp_parse@@Base+0x7d8>
   13018:	mov	r0, r6
   1301c:	mov	r3, r8
   13020:	mov	r2, r9
   13024:	mov	r1, r7
   13028:	bl	1226c <putc_unlocked@plt+0xbec>
   1302c:	add	r6, r6, #36	; 0x24
   13030:	b	12f8c <argp_parse@@Base+0x7e8>
   13034:	cmp	r4, #7
   13038:	moveq	r4, #0
   1303c:	b	12f98 <argp_parse@@Base+0x7f4>
   13040:	mov	r0, r6
   13044:	mov	r3, r7
   13048:	mov	r2, r8
   1304c:	mov	r1, r5
   13050:	bl	1226c <putc_unlocked@plt+0xbec>
   13054:	sub	r6, r6, #36	; 0x24
   13058:	b	12fac <argp_parse@@Base+0x808>
   1305c:	cmp	r0, #1
   13060:	bne	12ba8 <argp_parse@@Base+0x404>
   13064:	b	12cc8 <argp_parse@@Base+0x524>
   13068:	ldr	r3, [fp, #4]
   1306c:	cmp	r3, #0
   13070:	movne	r4, #0
   13074:	bne	12c98 <argp_parse@@Base+0x4f4>
   13078:	ldr	r6, [fp, #-108]	; 0xffffff94
   1307c:	mov	r4, #0
   13080:	ldr	r9, [pc, #144]	; 13118 <argp_parse@@Base+0x974>
   13084:	sub	r6, r6, #36	; 0x24
   13088:	add	r7, r5, #64	; 0x40
   1308c:	mov	r8, r4
   13090:	ldr	r3, [fp, #-112]	; 0xffffff90
   13094:	cmp	r6, r3
   13098:	bcc	13034 <argp_parse@@Base+0x890>
   1309c:	cmp	r4, #7
   130a0:	cmpne	r4, #0
   130a4:	bne	12f98 <argp_parse@@Base+0x7f4>
   130a8:	mov	r0, r6
   130ac:	mov	r3, r8
   130b0:	mov	r2, r9
   130b4:	mov	r1, r7
   130b8:	bl	1226c <putc_unlocked@plt+0xbec>
   130bc:	sub	r6, r6, #36	; 0x24
   130c0:	mov	r4, r0
   130c4:	b	13090 <argp_parse@@Base+0x8ec>
   130c8:	andeq	r9, r2, r0, lsl #10
   130cc:	strdeq	r9, [r2], -r8
   130d0:			; <UNDEFINED> instruction: 0x000182bc
   130d4:	andeq	r9, r2, r4, asr r5
   130d8:	andeq	r9, r2, ip, lsl r5
   130dc:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   130e0:	andeq	r9, r2, r8, lsl #10
   130e4:	tsteq	r0, r3
   130e8:	andeq	r9, r2, ip, lsl #10
   130ec:	tsteq	r0, r6
   130f0:	strdeq	r8, [r1], -r4
   130f4:	andeq	r8, r1, r3, lsl #8
   130f8:	tsteq	r0, r2
   130fc:	tsteq	r0, r1
   13100:	andeq	r8, r1, r0, lsl #8
   13104:	strdeq	r8, [r1], -ip
   13108:	andeq	r8, r1, fp, lsl #8
   1310c:	tsteq	r0, r5
   13110:	tsteq	r0, r7
   13114:	andeq	r8, r1, r4, lsl r4
   13118:	tsteq	r0, r4
   1311c:	cmp	r1, #0
   13120:	ldrne	r2, [r1, #52]	; 0x34
   13124:	ldrne	r3, [r2, #48]	; 0x30
   13128:	ldrne	r2, [r2, #52]	; 0x34
   1312c:	bne	1313c <argp_parse@@Base+0x998>
   13130:	mov	r0, #0
   13134:	bx	lr
   13138:	add	r3, r3, #36	; 0x24
   1313c:	cmp	r3, r2
   13140:	bcs	13130 <argp_parse@@Base+0x98c>
   13144:	ldr	r1, [r3, #4]
   13148:	cmp	r1, r0
   1314c:	bne	13138 <argp_parse@@Base+0x994>
   13150:	ldr	r0, [r3, #24]
   13154:	bx	lr
   13158:	push	{r0, r1, r2, lr}
   1315c:	ldr	r1, [pc, #28]	; 13180 <argp_parse@@Base+0x9dc>
   13160:	ldr	r2, [pc, #28]	; 13184 <argp_parse@@Base+0x9e0>
   13164:	ldr	r3, [r1, #4]
   13168:	str	r3, [sp]
   1316c:	ldr	r3, [pc, #20]	; 13188 <argp_parse@@Base+0x9e4>
   13170:	ldr	r1, [r1]
   13174:	bl	136e8 <argp_parse@@Base+0xf44>
   13178:	add	sp, sp, #12
   1317c:	pop	{pc}		; (ldr pc, [sp], #4)
   13180:	andeq	r9, r2, r0, lsr #10
   13184:	andeq	r8, r1, r4, ror #9
   13188:	ldrdeq	r8, [r1], -r7
   1318c:	ldr	r3, [pc, #16]	; 131a4 <argp_parse@@Base+0xa00>
   13190:	ldr	r2, [pc, #16]	; 131a8 <argp_parse@@Base+0xa04>
   13194:	str	r2, [r3]
   13198:	ldr	r3, [pc, #12]	; 131ac <argp_parse@@Base+0xa08>
   1319c:	stm	r3, {r0, r1}
   131a0:	bx	lr
   131a4:	andeq	r9, r2, ip, lsl r5
   131a8:	andeq	r3, r1, r8, asr r1
   131ac:	andeq	r9, r2, r0, lsr #10
   131b0:	mov	r2, r0
   131b4:	push	{r4, lr}
   131b8:	mov	r0, r2
   131bc:	ldrb	r3, [r2]
   131c0:	add	r1, r2, #1
   131c4:	cmp	r3, #47	; 0x2f
   131c8:	beq	131ec <argp_parse@@Base+0xa48>
   131cc:	mov	r3, #0
   131d0:	mov	lr, #1
   131d4:	mov	r4, r3
   131d8:	mov	ip, r2
   131dc:	ldrb	r1, [r2], #1
   131e0:	cmp	r1, #0
   131e4:	bne	131f4 <argp_parse@@Base+0xa50>
   131e8:	pop	{r4, pc}
   131ec:	mov	r2, r1
   131f0:	b	131b8 <argp_parse@@Base+0xa14>
   131f4:	cmp	r1, #47	; 0x2f
   131f8:	moveq	r3, lr
   131fc:	beq	131d8 <argp_parse@@Base+0xa34>
   13200:	cmp	r3, #0
   13204:	movne	r0, ip
   13208:	movne	r3, r4
   1320c:	b	131d8 <argp_parse@@Base+0xa34>
   13210:	push	{r4, lr}
   13214:	mov	r4, r0
   13218:	bl	114b8 <strlen@plt>
   1321c:	cmp	r0, #1
   13220:	popls	{r4, pc}
   13224:	sub	r3, r0, #1
   13228:	ldrb	r2, [r4, r3]
   1322c:	cmp	r2, #47	; 0x2f
   13230:	beq	13238 <argp_parse@@Base+0xa94>
   13234:	pop	{r4, pc}
   13238:	mov	r0, r3
   1323c:	b	1321c <argp_parse@@Base+0xa78>
   13240:	push	{r0, r1, r2, r4, r5, lr}
   13244:	mov	r5, r0
   13248:	bl	114f4 <__errno_location@plt>
   1324c:	ldr	r3, [r0]
   13250:	mov	r4, r0
   13254:	str	r3, [sp]
   13258:	str	r3, [sp, #4]
   1325c:	mov	r3, #0
   13260:	str	r3, [r0]
   13264:	mov	r0, r5
   13268:	bl	11350 <free@plt>
   1326c:	ldr	r3, [r4]
   13270:	add	r2, sp, #8
   13274:	cmp	r3, #0
   13278:	moveq	r3, #4
   1327c:	movne	r3, #0
   13280:	add	r3, r2, r3
   13284:	ldr	r3, [r3, #-8]
   13288:	str	r3, [r4]
   1328c:	add	sp, sp, #12
   13290:	pop	{r4, r5, pc}
   13294:	push	{r0, r1, r2, r3, r4, lr}
   13298:	mov	ip, #0
   1329c:	str	ip, [sp, #8]
   132a0:	str	ip, [sp, #4]
   132a4:	ldr	ip, [sp, #24]
   132a8:	str	ip, [sp]
   132ac:	bl	17434 <argp_error@@Base+0xae4>
   132b0:	add	sp, sp, #20
   132b4:	pop	{pc}		; (ldr pc, [sp], #4)
   132b8:	push	{r0, r1, r2, r3, r4, lr}
   132bc:	mov	ip, #0
   132c0:	ldr	lr, [sp, #28]
   132c4:	str	ip, [sp, #12]
   132c8:	stmib	sp, {ip, lr}
   132cc:	ldr	ip, [sp, #24]
   132d0:	str	ip, [sp]
   132d4:	bl	16f3c <argp_error@@Base+0x5ec>
   132d8:	add	sp, sp, #20
   132dc:	pop	{pc}		; (ldr pc, [sp], #4)
   132e0:	push	{r0, r1, r2, r3, r4, lr}
   132e4:	mov	ip, #1
   132e8:	mov	lr, #0
   132ec:	stmib	sp, {ip, lr}
   132f0:	ldr	ip, [sp, #24]
   132f4:	str	ip, [sp]
   132f8:	bl	17434 <argp_error@@Base+0xae4>
   132fc:	add	sp, sp, #20
   13300:	pop	{pc}		; (ldr pc, [sp], #4)
   13304:	push	{r0, r1, r2, r3, r4, lr}
   13308:	mov	ip, #0
   1330c:	str	ip, [sp, #12]
   13310:	ldr	ip, [sp, #28]
   13314:	str	ip, [sp, #8]
   13318:	mov	ip, #1
   1331c:	str	ip, [sp, #4]
   13320:	ldr	ip, [sp, #24]
   13324:	str	ip, [sp]
   13328:	bl	16f3c <argp_error@@Base+0x5ec>
   1332c:	add	sp, sp, #20
   13330:	pop	{pc}		; (ldr pc, [sp], #4)
   13334:	push	{r1, r2, r3}
   13338:	push	{r0, r1, lr}
   1333c:	add	r3, sp, #16
   13340:	ldr	r2, [sp, #16]
   13344:	ldr	r1, [sp, #12]
   13348:	str	r3, [sp, #4]
   1334c:	bl	1141c <ioctl@plt>
   13350:	add	sp, sp, #8
   13354:	pop	{lr}		; (ldr lr, [sp], #4)
   13358:	add	sp, sp, #12
   1335c:	bx	lr
   13360:	push	{r4, r5, r6, lr}
   13364:	subs	r5, r0, #0
   13368:	bne	13380 <argp_parse@@Base+0xbdc>
   1336c:	ldr	r3, [pc, #124]	; 133f0 <argp_parse@@Base+0xc4c>
   13370:	ldr	r0, [pc, #124]	; 133f4 <argp_parse@@Base+0xc50>
   13374:	ldr	r1, [r3]
   13378:	bl	11638 <fputs@plt>
   1337c:	bl	11650 <abort@plt>
   13380:	mov	r1, #47	; 0x2f
   13384:	bl	11584 <strrchr@plt>
   13388:	cmp	r0, #0
   1338c:	addne	r4, r0, #1
   13390:	moveq	r4, r5
   13394:	sub	r3, r4, r5
   13398:	cmp	r3, #6
   1339c:	ble	133dc <argp_parse@@Base+0xc38>
   133a0:	mov	r2, #7
   133a4:	ldr	r1, [pc, #76]	; 133f8 <argp_parse@@Base+0xc54>
   133a8:	sub	r0, r4, #7
   133ac:	bl	11644 <strncmp@plt>
   133b0:	cmp	r0, #0
   133b4:	bne	133dc <argp_parse@@Base+0xc38>
   133b8:	mov	r2, #3
   133bc:	ldr	r1, [pc, #56]	; 133fc <argp_parse@@Base+0xc58>
   133c0:	mov	r0, r4
   133c4:	bl	11644 <strncmp@plt>
   133c8:	cmp	r0, #0
   133cc:	movne	r5, r4
   133d0:	ldreq	r3, [pc, #40]	; 13400 <argp_parse@@Base+0xc5c>
   133d4:	addeq	r5, r4, #3
   133d8:	streq	r5, [r3]
   133dc:	ldr	r3, [pc, #32]	; 13404 <argp_parse@@Base+0xc60>
   133e0:	str	r5, [r3]
   133e4:	ldr	r3, [pc, #28]	; 13408 <argp_parse@@Base+0xc64>
   133e8:	str	r5, [r3]
   133ec:	pop	{r4, r5, r6, pc}
   133f0:	andeq	r9, r2, r8, lsl #10
   133f4:	strdeq	r8, [r1], -r2
   133f8:	andeq	r8, r1, sl, lsr #10
   133fc:	andeq	r8, r1, r2, lsr r5
   13400:	strdeq	r9, [r2], -r8
   13404:	andeq	r9, r2, r8, lsr #10
   13408:	andeq	r9, r2, r0, lsl #10
   1340c:	push	{r4, r5, r6, lr}
   13410:	sub	sp, sp, #32
   13414:	cmp	r1, #0
   13418:	mov	r5, r0
   1341c:	ldr	r4, [sp, #48]	; 0x30
   13420:	ldr	r6, [sp, #52]	; 0x34
   13424:	beq	134ac <argp_parse@@Base+0xd08>
   13428:	str	r3, [sp]
   1342c:	mov	r3, r2
   13430:	mov	r2, r1
   13434:	ldr	r1, [pc, #616]	; 136a4 <argp_parse@@Base+0xf00>
   13438:	bl	114dc <fprintf@plt>
   1343c:	ldr	r3, [pc, #612]	; 136a8 <argp_parse@@Base+0xf04>
   13440:	ldr	r2, [pc, #612]	; 136ac <argp_parse@@Base+0xf08>
   13444:	ldr	r1, [pc, #612]	; 136b0 <argp_parse@@Base+0xf0c>
   13448:	mov	r0, r5
   1344c:	bl	114dc <fprintf@plt>
   13450:	mov	r1, r5
   13454:	mov	r0, #10
   13458:	bl	115a8 <fputc@plt>
   1345c:	ldr	r1, [pc, #592]	; 136b4 <argp_parse@@Base+0xf10>
   13460:	ldr	r2, [pc, #592]	; 136b8 <argp_parse@@Base+0xf14>
   13464:	mov	r0, r5
   13468:	bl	114dc <fprintf@plt>
   1346c:	mov	r1, r5
   13470:	mov	r0, #10
   13474:	bl	115a8 <fputc@plt>
   13478:	cmp	r6, #9
   1347c:	ldrls	pc, [pc, r6, lsl #2]
   13480:	b	13660 <argp_parse@@Base+0xebc>
   13484:	andeq	r3, r1, r8, asr r5
   13488:			; <UNDEFINED> instruction: 0x000134b8
   1348c:	ldrdeq	r3, [r1], -r0
   13490:	andeq	r3, r1, r8, ror #9
   13494:	andeq	r3, r1, r8, lsl #10
   13498:	andeq	r3, r1, r0, lsr r5
   1349c:	andeq	r3, r1, r0, ror #10
   134a0:	muleq	r1, r4, r5
   134a4:	ldrdeq	r3, [r1], -r0
   134a8:	andeq	r3, r1, r4, lsl r6
   134ac:	ldr	r1, [pc, #520]	; 136bc <argp_parse@@Base+0xf18>
   134b0:	bl	114dc <fprintf@plt>
   134b4:	b	1343c <argp_parse@@Base+0xc98>
   134b8:	ldr	r2, [r4]
   134bc:	ldr	r1, [pc, #508]	; 136c0 <argp_parse@@Base+0xf1c>
   134c0:	mov	r0, r5
   134c4:	add	sp, sp, #32
   134c8:	pop	{r4, r5, r6, lr}
   134cc:	b	114dc <fprintf@plt>
   134d0:	ldm	r4, {r2, r3}
   134d4:	ldr	r1, [pc, #488]	; 136c4 <argp_parse@@Base+0xf20>
   134d8:	mov	r0, r5
   134dc:	add	sp, sp, #32
   134e0:	pop	{r4, r5, r6, lr}
   134e4:	b	114dc <fprintf@plt>
   134e8:	ldr	r3, [r4, #8]
   134ec:	ldr	r1, [pc, #468]	; 136c8 <argp_parse@@Base+0xf24>
   134f0:	str	r3, [sp, #48]	; 0x30
   134f4:	mov	r0, r5
   134f8:	ldm	r4, {r2, r3}
   134fc:	add	sp, sp, #32
   13500:	pop	{r4, r5, r6, lr}
   13504:	b	114dc <fprintf@plt>
   13508:	ldr	r3, [r4, #12]
   1350c:	ldr	r1, [pc, #440]	; 136cc <argp_parse@@Base+0xf28>
   13510:	str	r3, [sp, #52]	; 0x34
   13514:	ldr	r3, [r4, #8]
   13518:	mov	r0, r5
   1351c:	str	r3, [sp, #48]	; 0x30
   13520:	ldm	r4, {r2, r3}
   13524:	add	sp, sp, #32
   13528:	pop	{r4, r5, r6, lr}
   1352c:	b	114dc <fprintf@plt>
   13530:	ldr	r3, [r4, #16]
   13534:	ldr	r1, [pc, #404]	; 136d0 <argp_parse@@Base+0xf2c>
   13538:	str	r3, [sp, #8]
   1353c:	ldr	r3, [r4, #12]
   13540:	mov	r0, r5
   13544:	str	r3, [sp, #4]
   13548:	ldr	r3, [r4, #8]
   1354c:	str	r3, [sp]
   13550:	ldm	r4, {r2, r3}
   13554:	bl	114dc <fprintf@plt>
   13558:	add	sp, sp, #32
   1355c:	pop	{r4, r5, r6, pc}
   13560:	ldr	r3, [r4, #20]
   13564:	ldr	r1, [pc, #360]	; 136d4 <argp_parse@@Base+0xf30>
   13568:	str	r3, [sp, #12]
   1356c:	ldr	r3, [r4, #16]
   13570:	mov	r0, r5
   13574:	str	r3, [sp, #8]
   13578:	ldr	r3, [r4, #12]
   1357c:	str	r3, [sp, #4]
   13580:	ldr	r3, [r4, #8]
   13584:	str	r3, [sp]
   13588:	ldm	r4, {r2, r3}
   1358c:	bl	114dc <fprintf@plt>
   13590:	b	13558 <argp_parse@@Base+0xdb4>
   13594:	ldr	r3, [r4, #24]
   13598:	ldr	r1, [pc, #312]	; 136d8 <argp_parse@@Base+0xf34>
   1359c:	str	r3, [sp, #16]
   135a0:	ldr	r3, [r4, #20]
   135a4:	mov	r0, r5
   135a8:	str	r3, [sp, #12]
   135ac:	ldr	r3, [r4, #16]
   135b0:	str	r3, [sp, #8]
   135b4:	ldr	r3, [r4, #12]
   135b8:	str	r3, [sp, #4]
   135bc:	ldr	r3, [r4, #8]
   135c0:	str	r3, [sp]
   135c4:	ldm	r4, {r2, r3}
   135c8:	bl	114dc <fprintf@plt>
   135cc:	b	13558 <argp_parse@@Base+0xdb4>
   135d0:	ldr	r3, [r4, #28]
   135d4:	ldr	r1, [pc, #256]	; 136dc <argp_parse@@Base+0xf38>
   135d8:	str	r3, [sp, #20]
   135dc:	ldr	r3, [r4, #24]
   135e0:	mov	r0, r5
   135e4:	str	r3, [sp, #16]
   135e8:	ldr	r3, [r4, #20]
   135ec:	str	r3, [sp, #12]
   135f0:	ldr	r3, [r4, #16]
   135f4:	str	r3, [sp, #8]
   135f8:	ldr	r3, [r4, #12]
   135fc:	str	r3, [sp, #4]
   13600:	ldr	r3, [r4, #8]
   13604:	str	r3, [sp]
   13608:	ldm	r4, {r2, r3}
   1360c:	bl	114dc <fprintf@plt>
   13610:	b	13558 <argp_parse@@Base+0xdb4>
   13614:	ldr	r3, [r4, #32]
   13618:	ldr	r1, [pc, #192]	; 136e0 <argp_parse@@Base+0xf3c>
   1361c:	str	r3, [sp, #24]
   13620:	ldr	r3, [r4, #28]
   13624:	str	r3, [sp, #20]
   13628:	ldr	r3, [r4, #24]
   1362c:	str	r3, [sp, #16]
   13630:	ldr	r3, [r4, #20]
   13634:	str	r3, [sp, #12]
   13638:	ldr	r3, [r4, #16]
   1363c:	str	r3, [sp, #8]
   13640:	ldr	r3, [r4, #12]
   13644:	str	r3, [sp, #4]
   13648:	ldr	r3, [r4, #8]
   1364c:	str	r3, [sp]
   13650:	ldm	r4, {r2, r3}
   13654:	mov	r0, r5
   13658:	bl	114dc <fprintf@plt>
   1365c:	b	13558 <argp_parse@@Base+0xdb4>
   13660:	ldr	r3, [r4, #32]
   13664:	ldr	r1, [pc, #120]	; 136e4 <argp_parse@@Base+0xf40>
   13668:	str	r3, [sp, #24]
   1366c:	ldr	r3, [r4, #28]
   13670:	str	r3, [sp, #20]
   13674:	ldr	r3, [r4, #24]
   13678:	str	r3, [sp, #16]
   1367c:	ldr	r3, [r4, #20]
   13680:	str	r3, [sp, #12]
   13684:	ldr	r3, [r4, #16]
   13688:	str	r3, [sp, #8]
   1368c:	ldr	r3, [r4, #12]
   13690:	str	r3, [sp, #4]
   13694:	ldr	r3, [r4, #8]
   13698:	str	r3, [sp]
   1369c:	ldm	r4, {r2, r3}
   136a0:	b	13654 <argp_parse@@Base+0xeb0>
   136a4:	andeq	r8, r1, r6, lsr r5
   136a8:	andeq	r0, r0, r6, ror #15
   136ac:	andeq	r8, r1, r9, asr #10
   136b0:	andeq	r8, r1, lr, lsr r8
   136b4:	andeq	r8, r1, pc, ror #10
   136b8:	andeq	r8, r1, sp, asr #10
   136bc:	andeq	r8, r1, r2, asr #10
   136c0:	andeq	r8, r1, sl, lsl r6
   136c4:	andeq	r8, r1, sl, lsr #12
   136c8:	andeq	r8, r1, r1, asr #12
   136cc:	andeq	r8, r1, sp, asr r6
   136d0:	andeq	r8, r1, sp, ror r6
   136d4:	andeq	r8, r1, r1, lsr #13
   136d8:	andeq	r8, r1, r9, asr #13
   136dc:	strdeq	r8, [r1], -r5
   136e0:	andeq	r8, r1, r5, lsr #14
   136e4:	andeq	r8, r1, r9, asr r7
   136e8:	push	{r0, r1, r4, lr}
   136ec:	mov	ip, #0
   136f0:	ldr	lr, [sp, #16]
   136f4:	ldr	r4, [lr, ip, lsl #2]
   136f8:	cmp	r4, #0
   136fc:	bne	13714 <argp_parse@@Base+0xf70>
   13700:	str	ip, [sp, #4]
   13704:	str	lr, [sp]
   13708:	bl	1340c <argp_parse@@Base+0xc68>
   1370c:	add	sp, sp, #8
   13710:	pop	{r4, pc}
   13714:	add	ip, ip, #1
   13718:	b	136f4 <argp_parse@@Base+0xf50>
   1371c:	push	{r4, r5, lr}
   13720:	sub	sp, sp, #52	; 0x34
   13724:	mov	ip, #0
   13728:	ldr	r5, [sp, #64]	; 0x40
   1372c:	add	lr, sp, #8
   13730:	ldr	r4, [r5, ip, lsl #2]
   13734:	cmp	r4, #0
   13738:	str	r4, [lr, ip, lsl #2]
   1373c:	beq	1374c <argp_parse@@Base+0xfa8>
   13740:	add	ip, ip, #1
   13744:	cmp	ip, #10
   13748:	bne	13730 <argp_parse@@Base+0xf8c>
   1374c:	str	ip, [sp, #4]
   13750:	str	lr, [sp]
   13754:	bl	1340c <argp_parse@@Base+0xc68>
   13758:	add	sp, sp, #52	; 0x34
   1375c:	pop	{r4, r5, pc}
   13760:	push	{r3}		; (str r3, [sp, #-4]!)
   13764:	push	{r0, r1, r2, r3, lr}
   13768:	add	r3, sp, #24
   1376c:	str	r3, [sp, #12]
   13770:	str	r3, [sp]
   13774:	ldr	r3, [sp, #20]
   13778:	bl	1371c <argp_parse@@Base+0xf78>
   1377c:	add	sp, sp, #16
   13780:	pop	{lr}		; (ldr lr, [sp], #4)
   13784:	add	sp, sp, #4
   13788:	bx	lr
   1378c:	ldr	r3, [pc, #56]	; 137cc <argp_parse@@Base+0x1028>
   13790:	push	{r4, lr}
   13794:	mov	r0, #10
   13798:	ldr	r1, [r3]
   1379c:	bl	115a8 <fputc@plt>
   137a0:	ldr	r1, [pc, #40]	; 137d0 <argp_parse@@Base+0x102c>
   137a4:	ldr	r0, [pc, #40]	; 137d4 <argp_parse@@Base+0x1030>
   137a8:	bl	11314 <printf@plt>
   137ac:	ldr	r1, [pc, #36]	; 137d8 <argp_parse@@Base+0x1034>
   137b0:	ldr	r2, [pc, #36]	; 137dc <argp_parse@@Base+0x1038>
   137b4:	ldr	r0, [pc, #36]	; 137e0 <argp_parse@@Base+0x103c>
   137b8:	bl	11314 <printf@plt>
   137bc:	ldr	r1, [pc, #32]	; 137e4 <argp_parse@@Base+0x1040>
   137c0:	ldr	r0, [pc, #32]	; 137e8 <argp_parse@@Base+0x1044>
   137c4:	pop	{r4, lr}
   137c8:	b	11314 <printf@plt>
   137cc:	andeq	r9, r2, ip, lsl #10
   137d0:	muleq	r1, r5, r7
   137d4:	andeq	r8, r1, fp, lsr #15
   137d8:	andeq	r8, r1, r4, ror #9
   137dc:			; <UNDEFINED> instruction: 0x000187bf
   137e0:	andeq	r8, r1, r6, ror #15
   137e4:	strdeq	r8, [r1], -sl
   137e8:	andeq	r8, r1, r7, lsl r8
   137ec:	push	{r4, lr}
   137f0:	bl	13cf4 <argp_parse@@Base+0x1550>
   137f4:	cmp	r0, #0
   137f8:	popne	{r4, pc}
   137fc:	bl	13c80 <argp_parse@@Base+0x14dc>
   13800:	push	{r4, lr}
   13804:	bl	13cf4 <argp_parse@@Base+0x1550>
   13808:	cmp	r0, #0
   1380c:	popne	{r4, pc}
   13810:	bl	13c80 <argp_parse@@Base+0x14dc>
   13814:	b	137ec <argp_parse@@Base+0x1048>
   13818:	push	{r4, r5, r6, lr}
   1381c:	mov	r5, r0
   13820:	mov	r4, r1
   13824:	bl	13d34 <argp_parse@@Base+0x1590>
   13828:	cmp	r0, #0
   1382c:	popne	{r4, r5, r6, pc}
   13830:	adds	r4, r4, #0
   13834:	movne	r4, #1
   13838:	cmp	r5, #0
   1383c:	orreq	r4, r4, #1
   13840:	cmp	r4, #0
   13844:	popeq	{r4, r5, r6, pc}
   13848:	bl	13c80 <argp_parse@@Base+0x14dc>
   1384c:	push	{r4, lr}
   13850:	cmp	r1, #0
   13854:	orreq	r1, r1, #1
   13858:	bl	13d34 <argp_parse@@Base+0x1590>
   1385c:	cmp	r0, #0
   13860:	popne	{r4, pc}
   13864:	bl	13c80 <argp_parse@@Base+0x14dc>
   13868:	push	{r4, r5, r6, lr}
   1386c:	mov	r6, r0
   13870:	mov	r5, r1
   13874:	mov	r4, r2
   13878:	bl	174c8 <argp_error@@Base+0xb78>
   1387c:	cmp	r0, #0
   13880:	popne	{r4, r5, r6, pc}
   13884:	cmp	r6, #0
   13888:	beq	13898 <argp_parse@@Base+0x10f4>
   1388c:	cmp	r5, #0
   13890:	cmpne	r4, #0
   13894:	popeq	{r4, r5, r6, pc}
   13898:	bl	13c80 <argp_parse@@Base+0x14dc>
   1389c:	b	13868 <argp_parse@@Base+0x10c4>
   138a0:	cmp	r2, #0
   138a4:	cmpne	r1, #0
   138a8:	moveq	r2, #1
   138ac:	moveq	r1, r2
   138b0:	push	{r4, lr}
   138b4:	bl	174c8 <argp_error@@Base+0xb78>
   138b8:	cmp	r0, #0
   138bc:	popne	{r4, pc}
   138c0:	bl	13c80 <argp_parse@@Base+0x14dc>
   138c4:	mov	r2, r1
   138c8:	mov	r1, r0
   138cc:	mov	r0, #0
   138d0:	b	13868 <argp_parse@@Base+0x10c4>
   138d4:	mov	r2, r1
   138d8:	mov	r1, r0
   138dc:	mov	r0, #0
   138e0:	b	138a0 <argp_parse@@Base+0x10fc>
   138e4:	push	{r4, r5, r6, r7, r8, lr}
   138e8:	subs	r7, r0, #0
   138ec:	mov	r5, r1
   138f0:	mov	r6, r2
   138f4:	ldr	r4, [r1]
   138f8:	bne	13934 <argp_parse@@Base+0x1190>
   138fc:	cmp	r4, #0
   13900:	bne	1391c <argp_parse@@Base+0x1178>
   13904:	mov	r1, r2
   13908:	mov	r0, #64	; 0x40
   1390c:	bl	17b34 <argp_error@@Base+0x11e4>
   13910:	cmp	r0, #0
   13914:	movne	r4, r0
   13918:	addeq	r4, r0, #1
   1391c:	mov	r2, r6
   13920:	mov	r1, r4
   13924:	mov	r0, r7
   13928:	bl	13868 <argp_parse@@Base+0x10c4>
   1392c:	str	r4, [r5]
   13930:	pop	{r4, r5, r6, r7, r8, pc}
   13934:	lsr	r2, r4, #1
   13938:	add	r3, r2, #1
   1393c:	mvn	r3, r3
   13940:	cmp	r4, r3
   13944:	addls	r4, r4, #1
   13948:	addls	r4, r4, r2
   1394c:	bls	1391c <argp_parse@@Base+0x1178>
   13950:	bl	13c80 <argp_parse@@Base+0x14dc>
   13954:	mov	r2, #1
   13958:	b	138e4 <argp_parse@@Base+0x1140>
   1395c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13960:	mov	sl, r0
   13964:	ldr	r8, [r1]
   13968:	mov	fp, r1
   1396c:	mov	r5, r2
   13970:	asrs	r4, r8, #1
   13974:	mov	r9, r3
   13978:	ldr	r7, [sp, #48]	; 0x30
   1397c:	bpl	13a18 <argp_parse@@Base+0x1274>
   13980:	rsb	r2, r4, #-2147483648	; 0x80000000
   13984:	cmp	r8, r2
   13988:	movge	r2, #0
   1398c:	movlt	r2, #1
   13990:	mvn	r3, r9
   13994:	cmp	r2, #0
   13998:	lsr	r3, r3, #31
   1399c:	addeq	r4, r4, r8
   139a0:	mvnne	r4, #-2147483648	; 0x80000000
   139a4:	mov	r0, r3
   139a8:	cmp	r9, r4
   139ac:	movge	r0, #0
   139b0:	andlt	r0, r0, #1
   139b4:	cmp	r0, #0
   139b8:	str	r3, [sp, #4]
   139bc:	bne	13b8c <argp_parse@@Base+0x13e8>
   139c0:	cmp	r7, #0
   139c4:	bge	13ad8 <argp_parse@@Base+0x1334>
   139c8:	cmp	r4, #0
   139cc:	bge	13a30 <argp_parse@@Base+0x128c>
   139d0:	mov	r1, r7
   139d4:	mvn	r0, #-2147483648	; 0x80000000
   139d8:	bl	17d40 <argp_error@@Base+0x13f0>
   139dc:	cmp	r0, r4
   139e0:	movle	r0, #0
   139e4:	movgt	r0, #1
   139e8:	cmp	r0, #0
   139ec:	mvnne	r6, #-2147483648	; 0x80000000
   139f0:	beq	13a40 <argp_parse@@Base+0x129c>
   139f4:	mov	r1, r7
   139f8:	mov	r0, r6
   139fc:	bl	17d40 <argp_error@@Base+0x13f0>
   13a00:	mov	r1, r7
   13a04:	mov	r4, r0
   13a08:	mov	r0, r6
   13a0c:	bl	17f60 <argp_error@@Base+0x1610>
   13a10:	sub	r1, r6, r1
   13a14:	b	13a50 <argp_parse@@Base+0x12ac>
   13a18:	mvn	r2, #-2147483648	; 0x80000000
   13a1c:	sub	r2, r2, r4
   13a20:	cmp	r8, r2
   13a24:	movle	r2, #0
   13a28:	movgt	r2, #1
   13a2c:	b	13990 <argp_parse@@Base+0x11ec>
   13a30:	cmn	r7, #1
   13a34:	movne	r1, r7
   13a38:	movne	r0, #-2147483648	; 0x80000000
   13a3c:	bne	13ba4 <argp_parse@@Base+0x1400>
   13a40:	mul	r1, r7, r4
   13a44:	cmp	r1, #63	; 0x3f
   13a48:	movle	r6, #64	; 0x40
   13a4c:	ble	139f4 <argp_parse@@Base+0x1250>
   13a50:	cmp	sl, #0
   13a54:	sub	r2, r4, r8
   13a58:	streq	sl, [fp]
   13a5c:	cmp	r2, r5
   13a60:	bge	13b34 <argp_parse@@Base+0x1390>
   13a64:	cmp	r5, #0
   13a68:	bge	13b00 <argp_parse@@Base+0x135c>
   13a6c:	rsb	r2, r5, #-2147483648	; 0x80000000
   13a70:	cmp	r8, r2
   13a74:	movge	r2, #0
   13a78:	movlt	r2, #1
   13a7c:	cmp	r2, #0
   13a80:	bne	13ad4 <argp_parse@@Base+0x1330>
   13a84:	ldr	r0, [sp, #4]
   13a88:	add	r5, r8, r5
   13a8c:	cmp	r9, r5
   13a90:	movge	r0, #0
   13a94:	andlt	r0, r0, #1
   13a98:	cmp	r0, #0
   13a9c:	mov	r4, r5
   13aa0:	bne	13ad4 <argp_parse@@Base+0x1330>
   13aa4:	cmp	r7, #0
   13aa8:	bge	13b48 <argp_parse@@Base+0x13a4>
   13aac:	cmp	r5, #0
   13ab0:	bge	13b20 <argp_parse@@Base+0x137c>
   13ab4:	mov	r1, r7
   13ab8:	mvn	r0, #-2147483648	; 0x80000000
   13abc:	bl	17d40 <argp_error@@Base+0x13f0>
   13ac0:	cmp	r5, r0
   13ac4:	movge	r0, #0
   13ac8:	movlt	r0, #1
   13acc:	cmp	r0, #0
   13ad0:	beq	13b30 <argp_parse@@Base+0x138c>
   13ad4:	bl	13c80 <argp_parse@@Base+0x14dc>
   13ad8:	beq	13a40 <argp_parse@@Base+0x129c>
   13adc:	cmp	r4, #0
   13ae0:	bge	13b9c <argp_parse@@Base+0x13f8>
   13ae4:	cmn	r4, #1
   13ae8:	beq	13a40 <argp_parse@@Base+0x129c>
   13aec:	mov	r1, r4
   13af0:	mov	r0, #-2147483648	; 0x80000000
   13af4:	bl	17d40 <argp_error@@Base+0x13f0>
   13af8:	cmp	r7, r0
   13afc:	b	139e0 <argp_parse@@Base+0x123c>
   13b00:	cmp	r8, #0
   13b04:	blt	13a84 <argp_parse@@Base+0x12e0>
   13b08:	mvn	r2, #-2147483648	; 0x80000000
   13b0c:	sub	r2, r2, r5
   13b10:	cmp	r8, r2
   13b14:	movle	r2, #0
   13b18:	movgt	r2, #1
   13b1c:	b	13a7c <argp_parse@@Base+0x12d8>
   13b20:	cmn	r7, #1
   13b24:	movne	r1, r7
   13b28:	movne	r0, #-2147483648	; 0x80000000
   13b2c:	bne	13b80 <argp_parse@@Base+0x13dc>
   13b30:	mul	r1, r5, r7
   13b34:	mov	r0, sl
   13b38:	bl	13818 <argp_parse@@Base+0x1074>
   13b3c:	str	r4, [fp]
   13b40:	add	sp, sp, #12
   13b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b48:	beq	13b30 <argp_parse@@Base+0x138c>
   13b4c:	cmp	r5, #0
   13b50:	movge	r1, r7
   13b54:	mvnge	r0, #-2147483648	; 0x80000000
   13b58:	bge	13b80 <argp_parse@@Base+0x13dc>
   13b5c:	cmn	r5, #1
   13b60:	beq	13b30 <argp_parse@@Base+0x138c>
   13b64:	mov	r1, r5
   13b68:	mov	r0, #-2147483648	; 0x80000000
   13b6c:	bl	17d40 <argp_error@@Base+0x13f0>
   13b70:	cmp	r7, r0
   13b74:	movle	r0, #0
   13b78:	movgt	r0, #1
   13b7c:	b	13acc <argp_parse@@Base+0x1328>
   13b80:	bl	17d40 <argp_error@@Base+0x13f0>
   13b84:	cmp	r5, r0
   13b88:	b	13b74 <argp_parse@@Base+0x13d0>
   13b8c:	cmp	r7, #0
   13b90:	mov	r4, r9
   13b94:	blt	13a30 <argp_parse@@Base+0x128c>
   13b98:	beq	13a40 <argp_parse@@Base+0x129c>
   13b9c:	mov	r1, r7
   13ba0:	mvn	r0, #-2147483648	; 0x80000000
   13ba4:	bl	17d40 <argp_error@@Base+0x13f0>
   13ba8:	cmp	r0, r4
   13bac:	movge	r0, #0
   13bb0:	movlt	r0, #1
   13bb4:	b	139e8 <argp_parse@@Base+0x1244>
   13bb8:	push	{r4, lr}
   13bbc:	bl	13cac <argp_parse@@Base+0x1508>
   13bc0:	cmp	r0, #0
   13bc4:	popne	{r4, pc}
   13bc8:	bl	13c80 <argp_parse@@Base+0x14dc>
   13bcc:	mov	r1, #1
   13bd0:	b	13bb8 <argp_parse@@Base+0x1414>
   13bd4:	push	{r4, lr}
   13bd8:	bl	13cac <argp_parse@@Base+0x1508>
   13bdc:	cmp	r0, #0
   13be0:	popne	{r4, pc}
   13be4:	bl	13c80 <argp_parse@@Base+0x14dc>
   13be8:	mov	r1, #1
   13bec:	b	13bd4 <argp_parse@@Base+0x1430>
   13bf0:	push	{r4, r5, r6, lr}
   13bf4:	mov	r4, r1
   13bf8:	mov	r5, r0
   13bfc:	mov	r0, r1
   13c00:	bl	137ec <argp_parse@@Base+0x1048>
   13c04:	mov	r2, r4
   13c08:	mov	r1, r5
   13c0c:	pop	{r4, r5, r6, lr}
   13c10:	b	11368 <memcpy@plt>
   13c14:	push	{r4, r5, r6, lr}
   13c18:	mov	r4, r1
   13c1c:	mov	r5, r0
   13c20:	mov	r0, r1
   13c24:	bl	13800 <argp_parse@@Base+0x105c>
   13c28:	mov	r2, r4
   13c2c:	mov	r1, r5
   13c30:	pop	{r4, r5, r6, lr}
   13c34:	b	11368 <memcpy@plt>
   13c38:	push	{r4, r5, r6, lr}
   13c3c:	mov	r5, r0
   13c40:	add	r0, r1, #1
   13c44:	mov	r4, r1
   13c48:	bl	13800 <argp_parse@@Base+0x105c>
   13c4c:	mov	r2, #0
   13c50:	mov	r1, r5
   13c54:	strb	r2, [r0, r4]
   13c58:	mov	r2, r4
   13c5c:	pop	{r4, r5, r6, lr}
   13c60:	b	11368 <memcpy@plt>
   13c64:	push	{r4, lr}
   13c68:	mov	r4, r0
   13c6c:	bl	114b8 <strlen@plt>
   13c70:	add	r1, r0, #1
   13c74:	mov	r0, r4
   13c78:	pop	{r4, lr}
   13c7c:	b	13bf0 <argp_parse@@Base+0x144c>
   13c80:	ldr	r3, [pc, #24]	; 13ca0 <argp_parse@@Base+0x14fc>
   13c84:	push	{r4, lr}
   13c88:	mov	r1, #0
   13c8c:	ldr	r0, [r3]
   13c90:	ldr	r2, [pc, #12]	; 13ca4 <argp_parse@@Base+0x1500>
   13c94:	ldr	r3, [pc, #12]	; 13ca8 <argp_parse@@Base+0x1504>
   13c98:	bl	11428 <error@plt>
   13c9c:	bl	11650 <abort@plt>
   13ca0:	andeq	r9, r2, r4, ror #9
   13ca4:	andeq	r8, r1, r7, lsl #21
   13ca8:	andeq	r8, r1, sp, ror #16
   13cac:	cmp	r1, #0
   13cb0:	cmpne	r0, #0
   13cb4:	moveq	r1, #1
   13cb8:	moveq	r0, r1
   13cbc:	umull	r2, r3, r0, r1
   13cc0:	adds	r3, r3, #0
   13cc4:	movne	r3, #1
   13cc8:	cmp	r2, #0
   13ccc:	blt	13cdc <argp_parse@@Base+0x1538>
   13cd0:	cmp	r3, #0
   13cd4:	bne	13cdc <argp_parse@@Base+0x1538>
   13cd8:	b	112d8 <calloc@plt>
   13cdc:	push	{r4, lr}
   13ce0:	bl	114f4 <__errno_location@plt>
   13ce4:	mov	r3, #12
   13ce8:	str	r3, [r0]
   13cec:	mov	r0, #0
   13cf0:	pop	{r4, pc}
   13cf4:	cmp	r0, #0
   13cf8:	mov	r3, #0
   13cfc:	moveq	r0, #1
   13d00:	adds	r3, r3, #0
   13d04:	movne	r3, #1
   13d08:	cmp	r0, #0
   13d0c:	blt	13d1c <argp_parse@@Base+0x1578>
   13d10:	cmp	r3, #0
   13d14:	bne	13d1c <argp_parse@@Base+0x1578>
   13d18:	b	1144c <malloc@plt>
   13d1c:	push	{r4, lr}
   13d20:	bl	114f4 <__errno_location@plt>
   13d24:	mov	r3, #12
   13d28:	str	r3, [r0]
   13d2c:	mov	r0, #0
   13d30:	pop	{r4, pc}
   13d34:	cmp	r0, #0
   13d38:	push	{r4, lr}
   13d3c:	mov	r4, r1
   13d40:	bne	13d50 <argp_parse@@Base+0x15ac>
   13d44:	mov	r0, r1
   13d48:	pop	{r4, lr}
   13d4c:	b	13cf4 <argp_parse@@Base+0x1550>
   13d50:	cmp	r1, #0
   13d54:	bne	13d64 <argp_parse@@Base+0x15c0>
   13d58:	bl	13240 <argp_parse@@Base+0xa9c>
   13d5c:	mov	r0, #0
   13d60:	pop	{r4, pc}
   13d64:	cmp	r1, #0
   13d68:	blt	13d78 <argp_parse@@Base+0x15d4>
   13d6c:	mov	r3, #0
   13d70:	cmp	r3, r3
   13d74:	beq	13d88 <argp_parse@@Base+0x15e4>
   13d78:	bl	114f4 <__errno_location@plt>
   13d7c:	mov	r3, #12
   13d80:	str	r3, [r0]
   13d84:	b	13d5c <argp_parse@@Base+0x15b8>
   13d88:	pop	{r4, lr}
   13d8c:	b	113c8 <realloc@plt>
   13d90:	ldr	r2, [r0, #4]
   13d94:	ldr	r3, [r0]
   13d98:	cmp	r2, #0
   13d9c:	add	r3, r3, #24
   13da0:	bne	13dac <argp_parse@@Base+0x1608>
   13da4:	mov	r0, r2
   13da8:	bx	lr
   13dac:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13db0:	cmp	r0, #0
   13db4:	beq	13dc4 <argp_parse@@Base+0x1620>
   13db8:	ldr	r1, [r3, #-12]
   13dbc:	tst	r1, #2
   13dc0:	bxeq	lr
   13dc4:	sub	r2, r2, #1
   13dc8:	b	13d98 <argp_parse@@Base+0x15f4>
   13dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dd0:	mov	sl, r3
   13dd4:	ldm	r0, {r5, r6, r7}
   13dd8:	mov	r3, #0
   13ddc:	sub	sp, sp, #20
   13de0:	mov	r8, r1
   13de4:	mov	r9, r2
   13de8:	mov	r4, r5
   13dec:	mov	fp, r3
   13df0:	adds	r2, r6, #0
   13df4:	movne	r2, #1
   13df8:	cmp	r3, #0
   13dfc:	movne	r2, #0
   13e00:	cmp	r2, #0
   13e04:	bne	13e14 <argp_parse@@Base+0x1670>
   13e08:	mov	r0, r3
   13e0c:	add	sp, sp, #20
   13e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e14:	ldr	r2, [r4, #12]
   13e18:	ands	r3, r2, #8
   13e1c:	str	r2, [sp, #12]
   13e20:	movne	r3, fp
   13e24:	bne	13e64 <argp_parse@@Base+0x16c0>
   13e28:	ldr	r1, [r4, #4]
   13e2c:	sub	r0, r1, #1
   13e30:	cmp	r0, #254	; 0xfe
   13e34:	str	r1, [sp, #8]
   13e38:	bhi	13e64 <argp_parse@@Base+0x16c0>
   13e3c:	str	r3, [sp, #4]
   13e40:	bl	11494 <__ctype_b_loc@plt>
   13e44:	ldr	r1, [sp, #8]
   13e48:	ldr	r3, [sp, #4]
   13e4c:	ldr	r2, [sp, #12]
   13e50:	ldr	ip, [r0]
   13e54:	lsl	r0, r1, #1
   13e58:	ldrh	r0, [ip, r0]
   13e5c:	tst	r0, #16384	; 0x4000
   13e60:	bne	13e70 <argp_parse@@Base+0x16cc>
   13e64:	add	r4, r4, #24
   13e68:	sub	r6, r6, #1
   13e6c:	b	13df0 <argp_parse@@Base+0x164c>
   13e70:	ldrb	r0, [r7]
   13e74:	cmp	r0, r1
   13e78:	bne	13e64 <argp_parse@@Base+0x16c0>
   13e7c:	tst	r2, #4
   13e80:	moveq	r5, r4
   13e84:	tst	r2, #2
   13e88:	bne	13ea4 <argp_parse@@Base+0x1700>
   13e8c:	mov	r3, sl
   13e90:	mov	r2, r9
   13e94:	mov	r1, r5
   13e98:	mov	r0, r4
   13e9c:	blx	r8
   13ea0:	mov	r3, r0
   13ea4:	add	r7, r7, #1
   13ea8:	b	13e64 <argp_parse@@Base+0x16c0>
   13eac:	ldr	r3, [r0, #12]
   13eb0:	ands	r3, r3, #8
   13eb4:	bne	13eec <argp_parse@@Base+0x1748>
   13eb8:	push	{r4, lr}
   13ebc:	ldr	r4, [r0, #4]
   13ec0:	sub	r2, r4, #1
   13ec4:	cmp	r2, #254	; 0xfe
   13ec8:	bhi	13ee4 <argp_parse@@Base+0x1740>
   13ecc:	bl	11494 <__ctype_b_loc@plt>
   13ed0:	lsl	r3, r4, #1
   13ed4:	ldr	r2, [r0]
   13ed8:	ldrh	r3, [r2, r3]
   13edc:	ands	r3, r3, #16384	; 0x4000
   13ee0:	movne	r3, r4
   13ee4:	mov	r0, r3
   13ee8:	pop	{r4, pc}
   13eec:	mov	r3, #0
   13ef0:	mov	r0, r3
   13ef4:	bx	lr
   13ef8:	push	{r4, lr}
   13efc:	mov	r4, r0
   13f00:	bl	11494 <__ctype_b_loc@plt>
   13f04:	ldr	r1, [r0]
   13f08:	ldr	r3, [r4]
   13f0c:	ldrb	r0, [r3]
   13f10:	lsl	r2, r0, #1
   13f14:	ldrh	r2, [r1, r2]
   13f18:	tst	r2, #8192	; 0x2000
   13f1c:	bne	13f4c <argp_parse@@Base+0x17a8>
   13f20:	subs	r0, r0, #45	; 0x2d
   13f24:	movne	r0, #1
   13f28:	ldr	r2, [r4]
   13f2c:	ldrb	r3, [r2]
   13f30:	cmp	r3, #0
   13f34:	popeq	{r4, pc}
   13f38:	lsl	r3, r3, #1
   13f3c:	ldrh	r3, [r1, r3]
   13f40:	tst	r3, #8
   13f44:	beq	13f58 <argp_parse@@Base+0x17b4>
   13f48:	pop	{r4, pc}
   13f4c:	add	r3, r3, #1
   13f50:	str	r3, [r4]
   13f54:	b	13f08 <argp_parse@@Base+0x1764>
   13f58:	add	r2, r2, #1
   13f5c:	str	r2, [r4]
   13f60:	b	13f28 <argp_parse@@Base+0x1784>
   13f64:	push	{r4, r5, r6, lr}
   13f68:	mov	r4, r0
   13f6c:	ldr	r0, [r0, #12]
   13f70:	cmp	r0, #0
   13f74:	bne	13fa0 <argp_parse@@Base+0x17fc>
   13f78:	ldr	r3, [r4, #4]
   13f7c:	cmp	r3, #0
   13f80:	beq	13f94 <argp_parse@@Base+0x17f0>
   13f84:	ldr	r0, [r4]
   13f88:	bl	13240 <argp_parse@@Base+0xa9c>
   13f8c:	ldr	r0, [r4, #8]
   13f90:	bl	13240 <argp_parse@@Base+0xa9c>
   13f94:	mov	r0, r4
   13f98:	pop	{r4, r5, r6, lr}
   13f9c:	b	13240 <argp_parse@@Base+0xa9c>
   13fa0:	ldr	r5, [r0, #24]
   13fa4:	bl	13240 <argp_parse@@Base+0xa9c>
   13fa8:	mov	r0, r5
   13fac:	b	13f70 <argp_parse@@Base+0x17cc>
   13fb0:	push	{r4, r5, r6, lr}
   13fb4:	ldr	r5, [r0, #16]
   13fb8:	ldr	r0, [r0, #8]
   13fbc:	cmp	r0, #0
   13fc0:	beq	13fd4 <argp_parse@@Base+0x1830>
   13fc4:	mov	r1, #10
   13fc8:	bl	114c4 <strchr@plt>
   13fcc:	adds	r0, r0, #0
   13fd0:	movne	r0, #1
   13fd4:	cmp	r5, #0
   13fd8:	mov	r4, r0
   13fdc:	addne	r5, r5, #16
   13fe0:	bne	13ff4 <argp_parse@@Base+0x1850>
   13fe4:	mov	r0, r4
   13fe8:	pop	{r4, r5, r6, pc}
   13fec:	bl	13fb0 <argp_parse@@Base+0x180c>
   13ff0:	add	r4, r4, r0
   13ff4:	add	r5, r5, #16
   13ff8:	ldr	r0, [r5, #-32]	; 0xffffffe0
   13ffc:	cmp	r0, #0
   14000:	bne	13fec <argp_parse@@Base+0x1848>
   14004:	b	13fe4 <argp_parse@@Base+0x1840>
   14008:	ldr	r2, [r0, #24]
   1400c:	ldr	r3, [r0, #28]
   14010:	push	{r4, r5, r6, r7, r8, lr}
   14014:	sub	r3, r3, r2
   14018:	ldr	r2, [r0, #16]
   1401c:	mov	r4, r0
   14020:	cmp	r3, r2
   14024:	mov	r5, r1
   14028:	bls	14030 <argp_parse@@Base+0x188c>
   1402c:	bl	1758c <argp_error@@Base+0xc3c>
   14030:	ldr	r1, [r4, #20]
   14034:	mov	r6, #1
   14038:	cmp	r1, #0
   1403c:	subge	r5, r5, r1
   14040:	mov	r7, #32
   14044:	cmp	r5, #0
   14048:	bgt	14050 <argp_parse@@Base+0x18ac>
   1404c:	pop	{r4, r5, r6, r7, r8, pc}
   14050:	ldr	r2, [r4, #28]
   14054:	ldr	r3, [r4, #32]
   14058:	cmp	r2, r3
   1405c:	bcs	14078 <argp_parse@@Base+0x18d4>
   14060:	ldr	r3, [r4, #28]
   14064:	add	r2, r3, #1
   14068:	str	r2, [r4, #28]
   1406c:	strb	r7, [r3]
   14070:	sub	r5, r5, #1
   14074:	b	14044 <argp_parse@@Base+0x18a0>
   14078:	mov	r1, r6
   1407c:	mov	r0, r4
   14080:	bl	179dc <argp_error@@Base+0x108c>
   14084:	cmp	r0, #0
   14088:	bne	14060 <argp_parse@@Base+0x18bc>
   1408c:	b	14070 <argp_parse@@Base+0x18cc>
   14090:	push	{r4, r5, r6, lr}
   14094:	subs	r4, r2, #0
   14098:	popeq	{r4, r5, r6, pc}
   1409c:	ldr	r2, [r4, #20]
   140a0:	cmp	r2, #0
   140a4:	popeq	{r4, r5, r6, pc}
   140a8:	mov	r6, r1
   140ac:	mov	r5, r0
   140b0:	mov	r1, r3
   140b4:	mov	r0, r4
   140b8:	bl	1311c <argp_parse@@Base+0x978>
   140bc:	ldr	r3, [r4, #20]
   140c0:	mov	r1, r5
   140c4:	mov	r2, r0
   140c8:	mov	r0, r6
   140cc:	pop	{r4, r5, r6, lr}
   140d0:	bx	r3
   140d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140d8:	mov	r4, r2
   140dc:	ldr	r3, [r2, #16]
   140e0:	mov	r2, r1
   140e4:	ldr	r1, [pc, #440]	; 142a4 <argp_parse@@Base+0x1b00>
   140e8:	mov	r7, r0
   140ec:	bl	14090 <argp_parse@@Base+0x18ec>
   140f0:	subs	r6, r0, #0
   140f4:	beq	14248 <argp_parse@@Base+0x1aa4>
   140f8:	ldrb	r3, [r6]
   140fc:	cmp	r3, #0
   14100:	beq	1423c <argp_parse@@Base+0x1a98>
   14104:	ldr	r3, [r4, #8]
   14108:	ldr	r3, [r3]
   1410c:	cmp	r3, #0
   14110:	beq	1413c <argp_parse@@Base+0x1998>
   14114:	ldr	r5, [r4, #4]
   14118:	ldr	r2, [r5, #28]
   1411c:	ldr	r3, [r5, #32]
   14120:	cmp	r2, r3
   14124:	bcs	1425c <argp_parse@@Base+0x1ab8>
   14128:	ldr	r3, [r5, #28]
   1412c:	add	r2, r3, #1
   14130:	str	r2, [r5, #28]
   14134:	mov	r2, #10
   14138:	strb	r2, [r3]
   1413c:	ldr	r8, [pc, #356]	; 142a8 <argp_parse@@Base+0x1b04>
   14140:	ldr	r0, [r4, #4]
   14144:	ldr	r1, [r8, #24]
   14148:	bl	14008 <argp_parse@@Base+0x1864>
   1414c:	ldr	r9, [r4, #4]
   14150:	ldr	sl, [r8, #24]
   14154:	ldr	r2, [r9, #24]
   14158:	ldr	r3, [r9, #28]
   1415c:	sub	r3, r3, r2
   14160:	ldr	r2, [r9, #16]
   14164:	cmp	r3, r2
   14168:	bls	14174 <argp_parse@@Base+0x19d0>
   1416c:	mov	r0, r9
   14170:	bl	1758c <argp_error@@Base+0xc3c>
   14174:	ldr	r5, [r4, #4]
   14178:	str	sl, [r9, #4]
   1417c:	ldr	r8, [r8, #24]
   14180:	ldr	r2, [r5, #24]
   14184:	ldr	r3, [r5, #28]
   14188:	sub	r3, r3, r2
   1418c:	ldr	r2, [r5, #16]
   14190:	cmp	r3, r2
   14194:	bls	141a0 <argp_parse@@Base+0x19fc>
   14198:	mov	r0, r5
   1419c:	bl	1758c <argp_error@@Base+0xc3c>
   141a0:	str	r8, [r5, #12]
   141a4:	mov	r0, r6
   141a8:	bl	114b8 <strlen@plt>
   141ac:	subs	r8, r0, #0
   141b0:	beq	141e8 <argp_parse@@Base+0x1a44>
   141b4:	ldr	r5, [r4, #4]
   141b8:	ldr	r3, [r5, #28]
   141bc:	ldr	r2, [r5, #32]
   141c0:	add	r3, r3, r8
   141c4:	cmp	r2, r3
   141c8:	bcc	14274 <argp_parse@@Base+0x1ad0>
   141cc:	mov	r2, r8
   141d0:	mov	r1, r6
   141d4:	ldr	r0, [r5, #28]
   141d8:	bl	11368 <memcpy@plt>
   141dc:	ldr	r3, [r5, #28]
   141e0:	add	r8, r3, r8
   141e4:	str	r8, [r5, #28]
   141e8:	ldr	r5, [r4, #4]
   141ec:	ldr	r2, [r5, #24]
   141f0:	ldr	r3, [r5, #28]
   141f4:	sub	r3, r3, r2
   141f8:	ldr	r2, [r5, #16]
   141fc:	cmp	r3, r2
   14200:	bls	1420c <argp_parse@@Base+0x1a68>
   14204:	mov	r0, r5
   14208:	bl	1758c <argp_error@@Base+0xc3c>
   1420c:	mov	r3, #0
   14210:	str	r3, [r5, #4]
   14214:	ldr	r5, [r4, #4]
   14218:	ldr	r2, [r5, #28]
   1421c:	ldr	r3, [r5, #32]
   14220:	cmp	r2, r3
   14224:	bcs	1428c <argp_parse@@Base+0x1ae8>
   14228:	ldr	r3, [r5, #28]
   1422c:	add	r2, r3, #1
   14230:	str	r2, [r5, #28]
   14234:	mov	r2, #10
   14238:	strb	r2, [r3]
   1423c:	ldr	r3, [r4, #8]
   14240:	mov	r2, #1
   14244:	str	r2, [r3, #4]
   14248:	cmp	r7, r6
   1424c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14250:	mov	r0, r6
   14254:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14258:	b	13240 <argp_parse@@Base+0xa9c>
   1425c:	mov	r1, #1
   14260:	mov	r0, r5
   14264:	bl	179dc <argp_error@@Base+0x108c>
   14268:	cmp	r0, #0
   1426c:	bne	14128 <argp_parse@@Base+0x1984>
   14270:	b	1413c <argp_parse@@Base+0x1998>
   14274:	mov	r1, r8
   14278:	mov	r0, r5
   1427c:	bl	179dc <argp_error@@Base+0x108c>
   14280:	cmp	r0, #0
   14284:	bne	141cc <argp_parse@@Base+0x1a28>
   14288:	b	141e8 <argp_parse@@Base+0x1a44>
   1428c:	mov	r1, #1
   14290:	mov	r0, r5
   14294:	bl	179dc <argp_error@@Base+0x108c>
   14298:	cmp	r0, #0
   1429c:	bne	14228 <argp_parse@@Base+0x1a84>
   142a0:	b	1423c <argp_parse@@Base+0x1a98>
   142a4:	andeq	r0, r0, #3
   142a8:			; <UNDEFINED> instruction: 0x000294bc
   142ac:	ldr	r3, [r1, #12]
   142b0:	push	{r4, r5, r6, r7, r8, lr}
   142b4:	cmp	r3, #0
   142b8:	mov	r7, r0
   142bc:	mov	r4, r1
   142c0:	beq	143d8 <argp_parse@@Base+0x1c34>
   142c4:	ldr	r2, [r1, #8]
   142c8:	ldr	r3, [r1]
   142cc:	ldr	r8, [r2]
   142d0:	ldr	r2, [r2, #4]
   142d4:	ldr	r5, [r3, #16]
   142d8:	cmp	r2, #0
   142dc:	cmpne	r8, #0
   142e0:	beq	1431c <argp_parse@@Base+0x1b78>
   142e4:	ldr	r2, [r3, #12]
   142e8:	ldr	r3, [r8, #12]
   142ec:	cmp	r2, r3
   142f0:	beq	1431c <argp_parse@@Base+0x1b78>
   142f4:	ldr	r6, [r1, #4]
   142f8:	ldr	r2, [r6, #28]
   142fc:	ldr	r3, [r6, #32]
   14300:	cmp	r2, r3
   14304:	bcs	143b8 <argp_parse@@Base+0x1c14>
   14308:	ldr	r3, [r6, #28]
   1430c:	add	r2, r3, #1
   14310:	str	r2, [r6, #28]
   14314:	mov	r2, #10
   14318:	strb	r2, [r3]
   1431c:	cmp	r5, #0
   14320:	beq	143a0 <argp_parse@@Base+0x1bfc>
   14324:	ldr	r0, [r5]
   14328:	cmp	r0, #0
   1432c:	beq	143a0 <argp_parse@@Base+0x1bfc>
   14330:	ldrb	r3, [r0]
   14334:	cmp	r3, #0
   14338:	beq	143a0 <argp_parse@@Base+0x1bfc>
   1433c:	cmp	r8, #0
   14340:	beq	14364 <argp_parse@@Base+0x1bc0>
   14344:	ldr	r3, [r8, #16]
   14348:	cmp	r5, r3
   1434c:	beq	143a0 <argp_parse@@Base+0x1bfc>
   14350:	cmp	r3, #0
   14354:	cmpne	r5, r3
   14358:	bne	143d0 <argp_parse@@Base+0x1c2c>
   1435c:	cmp	r5, r3
   14360:	beq	143a0 <argp_parse@@Base+0x1bfc>
   14364:	ldr	r3, [r4, #4]
   14368:	mov	r2, r4
   1436c:	ldr	r1, [r5, #16]
   14370:	ldr	r6, [r3, #12]
   14374:	bl	140d4 <argp_parse@@Base+0x1930>
   14378:	ldr	r5, [r4, #4]
   1437c:	ldr	r2, [r5, #24]
   14380:	ldr	r3, [r5, #28]
   14384:	sub	r3, r3, r2
   14388:	ldr	r2, [r5, #16]
   1438c:	cmp	r3, r2
   14390:	bls	1439c <argp_parse@@Base+0x1bf8>
   14394:	mov	r0, r5
   14398:	bl	1758c <argp_error@@Base+0xc3c>
   1439c:	str	r6, [r5, #12]
   143a0:	mov	r3, #0
   143a4:	str	r3, [r4, #12]
   143a8:	mov	r1, r7
   143ac:	ldr	r0, [r4, #4]
   143b0:	pop	{r4, r5, r6, r7, r8, lr}
   143b4:	b	14008 <argp_parse@@Base+0x1864>
   143b8:	mov	r1, #1
   143bc:	mov	r0, r6
   143c0:	bl	179dc <argp_error@@Base+0x108c>
   143c4:	cmp	r0, #0
   143c8:	bne	14308 <argp_parse@@Base+0x1b64>
   143cc:	b	1431c <argp_parse@@Base+0x1b78>
   143d0:	ldr	r3, [r3, #12]
   143d4:	b	14350 <argp_parse@@Base+0x1bac>
   143d8:	ldr	r5, [r1, #4]
   143dc:	ldr	r3, [r5, #28]
   143e0:	ldr	r2, [r5, #32]
   143e4:	add	r3, r3, #2
   143e8:	cmp	r2, r3
   143ec:	bcc	14410 <argp_parse@@Base+0x1c6c>
   143f0:	ldr	r2, [pc, #48]	; 14428 <argp_parse@@Base+0x1c84>
   143f4:	ldr	r3, [r5, #28]
   143f8:	ldrh	r2, [r2]
   143fc:	strh	r2, [r3]
   14400:	ldr	r3, [r5, #28]
   14404:	add	r3, r3, #2
   14408:	str	r3, [r5, #28]
   1440c:	b	143a8 <argp_parse@@Base+0x1c04>
   14410:	mov	r1, #2
   14414:	mov	r0, r5
   14418:	bl	179dc <argp_error@@Base+0x108c>
   1441c:	cmp	r0, #0
   14420:	bne	143f0 <argp_parse@@Base+0x1c4c>
   14424:	b	143a8 <argp_parse@@Base+0x1c04>
   14428:	andeq	r8, r1, r2, lsr #18
   1442c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14430:	sub	sp, sp, #28
   14434:	ldr	r7, [r0, #12]
   14438:	str	r3, [sp, #8]
   1443c:	cmp	r7, #0
   14440:	ldr	r3, [r0, #16]
   14444:	moveq	r5, r7
   14448:	mov	r8, r0
   1444c:	str	r1, [sp, #16]
   14450:	mov	fp, r2
   14454:	ldr	r4, [sp, #68]	; 0x44
   14458:	str	r3, [sp, #12]
   1445c:	moveq	r6, r5
   14460:	beq	144a0 <argp_parse@@Base+0x1cfc>
   14464:	mov	r1, #11
   14468:	mov	r0, r7
   1446c:	bl	114c4 <strchr@plt>
   14470:	cmp	fp, #0
   14474:	moveq	r5, r7
   14478:	beq	14488 <argp_parse@@Base+0x1ce4>
   1447c:	cmp	r0, #0
   14480:	addne	r5, r0, #1
   14484:	moveq	r5, r0
   14488:	cmp	r0, #0
   1448c:	clz	r6, fp
   14490:	lsr	r6, r6, #5
   14494:	moveq	r6, #0
   14498:	cmp	r6, #0
   1449c:	subne	r6, r0, r7
   144a0:	ldr	r9, [r8, #20]
   144a4:	cmp	r9, #0
   144a8:	moveq	sl, r5
   144ac:	beq	14500 <argp_parse@@Base+0x1d5c>
   144b0:	cmp	r6, #0
   144b4:	beq	144c8 <argp_parse@@Base+0x1d24>
   144b8:	mov	r0, r5
   144bc:	mov	r1, r6
   144c0:	bl	1135c <strndup@plt>
   144c4:	mov	r5, r0
   144c8:	ldr	r1, [sp, #16]
   144cc:	mov	r0, r8
   144d0:	bl	1311c <argp_parse@@Base+0x978>
   144d4:	ldr	ip, [pc, #928]	; 1487c <argp_parse@@Base+0x20d8>
   144d8:	cmp	fp, #0
   144dc:	mov	r1, r5
   144e0:	ldr	r3, [r8, #20]
   144e4:	mov	sl, r5
   144e8:	mov	r2, r0
   144ec:	mov	r9, r0
   144f0:	ldr	r0, [pc, #904]	; 14880 <argp_parse@@Base+0x20dc>
   144f4:	movne	r0, ip
   144f8:	blx	r3
   144fc:	mov	r5, r0
   14500:	cmp	r5, #0
   14504:	moveq	r7, r5
   14508:	beq	145c0 <argp_parse@@Base+0x1e1c>
   1450c:	ldr	r3, [sp, #8]
   14510:	cmp	r3, #0
   14514:	beq	1453c <argp_parse@@Base+0x1d98>
   14518:	ldr	r2, [r4, #28]
   1451c:	ldr	r3, [r4, #32]
   14520:	cmp	r2, r3
   14524:	bcs	146ec <argp_parse@@Base+0x1f48>
   14528:	ldr	r3, [r4, #28]
   1452c:	add	r2, r3, #1
   14530:	str	r2, [r4, #28]
   14534:	mov	r2, #10
   14538:	strb	r2, [r3]
   1453c:	cmp	r6, #0
   14540:	sub	r3, r5, sl
   14544:	clz	r3, r3
   14548:	lsr	r3, r3, #5
   1454c:	moveq	r3, #0
   14550:	cmp	r3, #0
   14554:	ldr	r3, [r4, #28]
   14558:	beq	1471c <argp_parse@@Base+0x1f78>
   1455c:	ldr	r2, [r4, #32]
   14560:	add	r3, r3, r6
   14564:	cmp	r2, r3
   14568:	bcc	14704 <argp_parse@@Base+0x1f60>
   1456c:	mov	r2, r6
   14570:	mov	r1, sl
   14574:	ldr	r0, [r4, #28]
   14578:	bl	11368 <memcpy@plt>
   1457c:	ldr	r3, [r4, #28]
   14580:	add	r3, r3, r6
   14584:	str	r3, [r4, #28]
   14588:	ldr	r2, [r4, #24]
   1458c:	ldr	r3, [r4, #28]
   14590:	sub	r3, r3, r2
   14594:	ldr	r2, [r4, #16]
   14598:	cmp	r3, r2
   1459c:	bls	145a8 <argp_parse@@Base+0x1e04>
   145a0:	mov	r0, r4
   145a4:	bl	1758c <argp_error@@Base+0xc3c>
   145a8:	ldr	r3, [r4, #20]
   145ac:	ldr	r2, [r4, #4]
   145b0:	bic	r3, r3, r3, asr #31
   145b4:	cmp	r2, r3
   145b8:	bcc	1477c <argp_parse@@Base+0x1fd8>
   145bc:	mov	r7, #1
   145c0:	cmp	r5, #0
   145c4:	cmpne	r5, sl
   145c8:	beq	145d4 <argp_parse@@Base+0x1e30>
   145cc:	mov	r0, r5
   145d0:	bl	13240 <argp_parse@@Base+0xa9c>
   145d4:	cmp	sl, #0
   145d8:	cmpne	r6, #0
   145dc:	beq	145f4 <argp_parse@@Base+0x1e50>
   145e0:	ldr	r3, [r8, #20]
   145e4:	cmp	r3, #0
   145e8:	beq	146d0 <argp_parse@@Base+0x1f2c>
   145ec:	mov	r0, sl
   145f0:	bl	13240 <argp_parse@@Base+0xa9c>
   145f4:	cmp	fp, #0
   145f8:	beq	146d0 <argp_parse@@Base+0x1f2c>
   145fc:	ldr	r3, [r8, #20]
   14600:	cmp	r3, #0
   14604:	beq	146d0 <argp_parse@@Base+0x1f2c>
   14608:	mov	r2, r9
   1460c:	mov	r1, #0
   14610:	ldr	r0, [pc, #620]	; 14884 <argp_parse@@Base+0x20e0>
   14614:	blx	r3
   14618:	subs	r5, r0, #0
   1461c:	beq	146d0 <argp_parse@@Base+0x1f2c>
   14620:	ldr	r3, [sp, #8]
   14624:	orrs	r3, r7, r3
   14628:	beq	14650 <argp_parse@@Base+0x1eac>
   1462c:	ldr	r2, [r4, #28]
   14630:	ldr	r3, [r4, #32]
   14634:	cmp	r2, r3
   14638:	bcs	147bc <argp_parse@@Base+0x2018>
   1463c:	ldr	r3, [r4, #28]
   14640:	add	r2, r3, #1
   14644:	str	r2, [r4, #28]
   14648:	mov	r2, #10
   1464c:	strb	r2, [r3]
   14650:	mov	r0, r5
   14654:	bl	114b8 <strlen@plt>
   14658:	subs	r6, r0, #0
   1465c:	beq	14690 <argp_parse@@Base+0x1eec>
   14660:	ldr	r3, [r4, #28]
   14664:	ldr	r2, [r4, #32]
   14668:	add	r3, r3, r6
   1466c:	cmp	r2, r3
   14670:	bcc	147d4 <argp_parse@@Base+0x2030>
   14674:	mov	r2, r6
   14678:	mov	r1, r5
   1467c:	ldr	r0, [r4, #28]
   14680:	bl	11368 <memcpy@plt>
   14684:	ldr	r3, [r4, #28]
   14688:	add	r6, r3, r6
   1468c:	str	r6, [r4, #28]
   14690:	mov	r0, r5
   14694:	bl	13240 <argp_parse@@Base+0xa9c>
   14698:	ldr	r2, [r4, #24]
   1469c:	ldr	r3, [r4, #28]
   146a0:	sub	r3, r3, r2
   146a4:	ldr	r2, [r4, #16]
   146a8:	cmp	r3, r2
   146ac:	bls	146b8 <argp_parse@@Base+0x1f14>
   146b0:	mov	r0, r4
   146b4:	bl	1758c <argp_error@@Base+0xc3c>
   146b8:	ldr	r3, [r4, #20]
   146bc:	ldr	r2, [r4, #4]
   146c0:	bic	r3, r3, r3, asr #31
   146c4:	cmp	r2, r3
   146c8:	bcc	147ec <argp_parse@@Base+0x2048>
   146cc:	mov	r7, #1
   146d0:	ldr	r3, [sp, #12]
   146d4:	cmp	r3, #0
   146d8:	addne	r5, r3, #16
   146dc:	bne	14858 <argp_parse@@Base+0x20b4>
   146e0:	mov	r0, r7
   146e4:	add	sp, sp, #28
   146e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146ec:	mov	r1, #1
   146f0:	mov	r0, r4
   146f4:	bl	179dc <argp_error@@Base+0x108c>
   146f8:	cmp	r0, #0
   146fc:	bne	14528 <argp_parse@@Base+0x1d84>
   14700:	b	1453c <argp_parse@@Base+0x1d98>
   14704:	mov	r1, r6
   14708:	mov	r0, r4
   1470c:	bl	179dc <argp_error@@Base+0x108c>
   14710:	cmp	r0, #0
   14714:	bne	1456c <argp_parse@@Base+0x1dc8>
   14718:	b	14588 <argp_parse@@Base+0x1de4>
   1471c:	mov	r0, r5
   14720:	str	r3, [sp, #20]
   14724:	bl	114b8 <strlen@plt>
   14728:	subs	r7, r0, #0
   1472c:	beq	14588 <argp_parse@@Base+0x1de4>
   14730:	ldr	r3, [sp, #20]
   14734:	ldr	r2, [r4, #32]
   14738:	add	r3, r3, r7
   1473c:	cmp	r2, r3
   14740:	bcc	14764 <argp_parse@@Base+0x1fc0>
   14744:	mov	r2, r7
   14748:	mov	r1, r5
   1474c:	ldr	r0, [r4, #28]
   14750:	bl	11368 <memcpy@plt>
   14754:	ldr	r3, [r4, #28]
   14758:	add	r7, r3, r7
   1475c:	str	r7, [r4, #28]
   14760:	b	14588 <argp_parse@@Base+0x1de4>
   14764:	mov	r1, r7
   14768:	mov	r0, r4
   1476c:	bl	179dc <argp_error@@Base+0x108c>
   14770:	cmp	r0, #0
   14774:	bne	14744 <argp_parse@@Base+0x1fa0>
   14778:	b	14588 <argp_parse@@Base+0x1de4>
   1477c:	ldr	r2, [r4, #28]
   14780:	ldr	r3, [r4, #32]
   14784:	cmp	r2, r3
   14788:	bcs	147a4 <argp_parse@@Base+0x2000>
   1478c:	ldr	r3, [r4, #28]
   14790:	add	r2, r3, #1
   14794:	str	r2, [r4, #28]
   14798:	mov	r2, #10
   1479c:	strb	r2, [r3]
   147a0:	b	145bc <argp_parse@@Base+0x1e18>
   147a4:	mov	r1, #1
   147a8:	mov	r0, r4
   147ac:	bl	179dc <argp_error@@Base+0x108c>
   147b0:	cmp	r0, #0
   147b4:	bne	1478c <argp_parse@@Base+0x1fe8>
   147b8:	b	145bc <argp_parse@@Base+0x1e18>
   147bc:	mov	r1, #1
   147c0:	mov	r0, r4
   147c4:	bl	179dc <argp_error@@Base+0x108c>
   147c8:	cmp	r0, #0
   147cc:	bne	1463c <argp_parse@@Base+0x1e98>
   147d0:	b	14650 <argp_parse@@Base+0x1eac>
   147d4:	mov	r1, r6
   147d8:	mov	r0, r4
   147dc:	bl	179dc <argp_error@@Base+0x108c>
   147e0:	cmp	r0, #0
   147e4:	bne	14674 <argp_parse@@Base+0x1ed0>
   147e8:	b	14690 <argp_parse@@Base+0x1eec>
   147ec:	ldr	r2, [r4, #28]
   147f0:	ldr	r3, [r4, #32]
   147f4:	cmp	r2, r3
   147f8:	bcs	14814 <argp_parse@@Base+0x2070>
   147fc:	ldr	r3, [r4, #28]
   14800:	add	r2, r3, #1
   14804:	str	r2, [r4, #28]
   14808:	mov	r2, #10
   1480c:	strb	r2, [r3]
   14810:	b	146cc <argp_parse@@Base+0x1f28>
   14814:	mov	r1, #1
   14818:	mov	r0, r4
   1481c:	bl	179dc <argp_error@@Base+0x108c>
   14820:	cmp	r0, #0
   14824:	bne	147fc <argp_parse@@Base+0x2058>
   14828:	b	146cc <argp_parse@@Base+0x1f28>
   1482c:	ldr	r3, [sp, #8]
   14830:	str	r4, [sp, #4]
   14834:	orrs	r3, r7, r3
   14838:	ldr	r3, [sp, #64]	; 0x40
   1483c:	mov	r2, fp
   14840:	str	r3, [sp]
   14844:	ldr	r1, [sp, #16]
   14848:	movne	r3, #1
   1484c:	moveq	r3, #0
   14850:	bl	1442c <argp_parse@@Base+0x1c88>
   14854:	orr	r7, r7, r0
   14858:	ldr	r0, [r5, #-16]
   1485c:	cmp	r0, #0
   14860:	beq	146e0 <argp_parse@@Base+0x1f3c>
   14864:	ldr	r3, [sp, #64]	; 0x40
   14868:	add	r5, r5, #16
   1486c:	cmp	r7, #0
   14870:	cmpne	r3, #0
   14874:	beq	1482c <argp_parse@@Base+0x2088>
   14878:	b	146e0 <argp_parse@@Base+0x1f3c>
   1487c:	andeq	r0, r0, #2
   14880:	andeq	r0, r0, #1
   14884:	andeq	r0, r0, #4
   14888:	ldr	r2, [r0, #24]
   1488c:	ldr	r3, [r0, #28]
   14890:	push	{r4, r5, r6, lr}
   14894:	sub	r3, r3, r2
   14898:	ldr	r2, [r0, #16]
   1489c:	mov	r4, r0
   148a0:	cmp	r3, r2
   148a4:	mov	r5, r1
   148a8:	bls	148b0 <argp_parse@@Base+0x210c>
   148ac:	bl	1758c <argp_error@@Base+0xc3c>
   148b0:	ldr	r1, [r4, #20]
   148b4:	ldr	r3, [r4, #8]
   148b8:	cmp	r1, #0
   148bc:	addge	r5, r5, r1
   148c0:	cmp	r5, r3
   148c4:	ldr	r2, [r4, #28]
   148c8:	ldr	r3, [r4, #32]
   148cc:	bcc	14908 <argp_parse@@Base+0x2164>
   148d0:	cmp	r2, r3
   148d4:	bcs	148f0 <argp_parse@@Base+0x214c>
   148d8:	ldr	r3, [r4, #28]
   148dc:	add	r2, r3, #1
   148e0:	str	r2, [r4, #28]
   148e4:	mov	r2, #10
   148e8:	strb	r2, [r3]
   148ec:	pop	{r4, r5, r6, pc}
   148f0:	mov	r1, #1
   148f4:	mov	r0, r4
   148f8:	bl	179dc <argp_error@@Base+0x108c>
   148fc:	cmp	r0, #0
   14900:	bne	148d8 <argp_parse@@Base+0x2134>
   14904:	pop	{r4, r5, r6, pc}
   14908:	cmp	r2, r3
   1490c:	bcs	14924 <argp_parse@@Base+0x2180>
   14910:	ldr	r3, [r4, #28]
   14914:	add	r2, r3, #1
   14918:	str	r2, [r4, #28]
   1491c:	mov	r2, #32
   14920:	b	148e8 <argp_parse@@Base+0x2144>
   14924:	mov	r1, #1
   14928:	mov	r0, r4
   1492c:	bl	179dc <argp_error@@Base+0x108c>
   14930:	cmp	r0, #0
   14934:	bne	14910 <argp_parse@@Base+0x216c>
   14938:	pop	{r4, r5, r6, pc}
   1493c:	push	{r4, r5, r6, lr}
   14940:	ldr	r5, [r0, #8]
   14944:	ldr	r2, [r0, #12]
   14948:	ldr	ip, [r1, #12]
   1494c:	cmp	r5, #0
   14950:	orr	r2, r2, ip
   14954:	bne	14964 <argp_parse@@Base+0x21c0>
   14958:	ldr	r5, [r1, #8]
   1495c:	cmp	r5, #0
   14960:	beq	14990 <argp_parse@@Base+0x21ec>
   14964:	tst	r2, #16
   14968:	bne	14990 <argp_parse@@Base+0x21ec>
   1496c:	tst	r2, #1
   14970:	mov	r6, r3
   14974:	mov	r4, r0
   14978:	beq	14998 <argp_parse@@Base+0x21f4>
   1497c:	ldr	r2, [r0, #4]
   14980:	ldr	r1, [pc, #52]	; 149bc <argp_parse@@Base+0x2218>
   14984:	mov	r3, r5
   14988:	mov	r0, r6
   1498c:	bl	17ac0 <argp_error@@Base+0x1170>
   14990:	mov	r0, #0
   14994:	pop	{r4, r5, r6, pc}
   14998:	mov	r0, r5
   1499c:	bl	114b8 <strlen@plt>
   149a0:	add	r1, r0, #6
   149a4:	mov	r0, r6
   149a8:	bl	14888 <argp_parse@@Base+0x20e4>
   149ac:	mov	r3, r5
   149b0:	ldr	r2, [r4, #4]
   149b4:	ldr	r1, [pc, #4]	; 149c0 <argp_parse@@Base+0x221c>
   149b8:	b	14988 <argp_parse@@Base+0x21e4>
   149bc:	andeq	r8, r1, r5, lsr #18
   149c0:	andeq	r8, r1, r0, lsr r9
   149c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149c8:	mov	r6, r3
   149cc:	sub	sp, sp, #36	; 0x24
   149d0:	ldr	r3, [r0, #16]
   149d4:	str	r1, [sp, #20]
   149d8:	str	r3, [sp, #12]
   149dc:	ldr	r3, [r0, #8]
   149e0:	ldr	sl, [r2]
   149e4:	str	r3, [sp, #16]
   149e8:	mov	fp, r2
   149ec:	mov	r3, r1
   149f0:	mov	r2, r0
   149f4:	ldr	r1, [pc, #404]	; 14b90 <argp_parse@@Base+0x23ec>
   149f8:	ldr	r0, [sp, #16]
   149fc:	ldr	r5, [sp, #72]	; 0x48
   14a00:	bl	14090 <argp_parse@@Base+0x18ec>
   14a04:	subs	r8, r0, #0
   14a08:	moveq	r7, r8
   14a0c:	moveq	r4, r8
   14a10:	beq	14aa4 <argp_parse@@Base+0x2300>
   14a14:	mov	r1, #10
   14a18:	bl	11344 <strchrnul@plt>
   14a1c:	ldrb	r4, [r0]
   14a20:	mov	r7, r0
   14a24:	cmp	r4, #0
   14a28:	moveq	r9, r8
   14a2c:	beq	14a58 <argp_parse@@Base+0x22b4>
   14a30:	ldrb	r3, [sl]
   14a34:	mov	r9, r8
   14a38:	mov	r4, #0
   14a3c:	mov	r2, #10
   14a40:	cmp	r4, r3
   14a44:	blt	14b14 <argp_parse@@Base+0x2370>
   14a48:	ldr	r3, [fp]
   14a4c:	mov	r4, #1
   14a50:	add	r3, r3, #1
   14a54:	str	r3, [fp]
   14a58:	add	r1, r7, #1
   14a5c:	sub	r1, r1, r9
   14a60:	mov	r0, r5
   14a64:	bl	14888 <argp_parse@@Base+0x20e4>
   14a68:	ldr	r2, [r5, #28]
   14a6c:	sub	r3, r7, r9
   14a70:	ldr	r1, [r5, #32]
   14a74:	add	r2, r2, r3
   14a78:	cmp	r1, r2
   14a7c:	bcc	14b40 <argp_parse@@Base+0x239c>
   14a80:	mov	r2, r3
   14a84:	mov	r1, r9
   14a88:	ldr	r0, [r5, #28]
   14a8c:	str	r3, [sp, #24]
   14a90:	bl	11368 <memcpy@plt>
   14a94:	ldr	r2, [r5, #28]
   14a98:	ldr	r3, [sp, #24]
   14a9c:	add	r3, r2, r3
   14aa0:	str	r3, [r5, #28]
   14aa4:	ldr	r3, [sp, #16]
   14aa8:	cmp	r8, #0
   14aac:	cmpne	r3, r8
   14ab0:	beq	14abc <argp_parse@@Base+0x2318>
   14ab4:	mov	r0, r8
   14ab8:	bl	13240 <argp_parse@@Base+0xa9c>
   14abc:	ldr	r3, [sp, #12]
   14ac0:	cmp	r3, #0
   14ac4:	addne	r8, r3, #16
   14ac8:	bne	14b7c <argp_parse@@Base+0x23d8>
   14acc:	cmp	r6, #0
   14ad0:	moveq	r4, #0
   14ad4:	andne	r4, r4, #1
   14ad8:	cmp	r4, #0
   14adc:	beq	14b04 <argp_parse@@Base+0x2360>
   14ae0:	ldrb	r2, [r7]
   14ae4:	ldrb	r3, [sl]
   14ae8:	cmp	r2, #0
   14aec:	addne	r3, r3, #1
   14af0:	strbne	r3, [sl]
   14af4:	movne	r6, #0
   14af8:	bne	14b04 <argp_parse@@Base+0x2360>
   14afc:	cmp	r3, #0
   14b00:	strbne	r2, [sl]
   14b04:	clz	r0, r6
   14b08:	lsr	r0, r0, #5
   14b0c:	add	sp, sp, #36	; 0x24
   14b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b14:	add	r9, r7, #1
   14b18:	mov	r1, r2
   14b1c:	mov	r0, r9
   14b20:	str	r3, [sp, #28]
   14b24:	str	r2, [sp, #24]
   14b28:	bl	11344 <strchrnul@plt>
   14b2c:	add	r4, r4, #1
   14b30:	ldr	r3, [sp, #28]
   14b34:	ldr	r2, [sp, #24]
   14b38:	mov	r7, r0
   14b3c:	b	14a40 <argp_parse@@Base+0x229c>
   14b40:	mov	r1, r3
   14b44:	mov	r0, r5
   14b48:	str	r3, [sp, #24]
   14b4c:	bl	179dc <argp_error@@Base+0x108c>
   14b50:	ldr	r3, [sp, #24]
   14b54:	cmp	r0, #0
   14b58:	bne	14a80 <argp_parse@@Base+0x22dc>
   14b5c:	b	14aa4 <argp_parse@@Base+0x2300>
   14b60:	mov	r3, r6
   14b64:	str	r5, [sp]
   14b68:	mov	r2, fp
   14b6c:	ldr	r1, [sp, #20]
   14b70:	bl	149c4 <argp_parse@@Base+0x2220>
   14b74:	clz	r6, r0
   14b78:	lsr	r6, r6, #5
   14b7c:	add	r8, r8, #16
   14b80:	ldr	r0, [r8, #-32]	; 0xffffffe0
   14b84:	cmp	r0, #0
   14b88:	bne	14b60 <argp_parse@@Base+0x23bc>
   14b8c:	b	14acc <argp_parse@@Base+0x2328>
   14b90:	andeq	r0, r0, #6
   14b94:	ldr	r2, [r0, #8]
   14b98:	cmp	r2, #0
   14b9c:	bne	14bd0 <argp_parse@@Base+0x242c>
   14ba0:	ldr	r2, [r1, #8]
   14ba4:	cmp	r2, #0
   14ba8:	bne	14bd0 <argp_parse@@Base+0x242c>
   14bac:	ldr	r1, [r1, #12]
   14bb0:	ldr	r2, [r0, #12]
   14bb4:	orr	r2, r2, r1
   14bb8:	tst	r2, #16
   14bbc:	ldreq	r2, [r3]
   14bc0:	addeq	r1, r2, #1
   14bc4:	streq	r1, [r3]
   14bc8:	ldreq	r3, [r0, #4]
   14bcc:	strbeq	r3, [r2]
   14bd0:	mov	r0, #0
   14bd4:	bx	lr
   14bd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bdc:	add	fp, sp, #32
   14be0:	sub	sp, sp, #12
   14be4:	ldr	r6, [r0, #4]
   14be8:	cmp	r6, #0
   14bec:	beq	14c90 <argp_parse@@Base+0x24ec>
   14bf0:	mov	r5, r0
   14bf4:	ldr	r0, [r0, #8]
   14bf8:	mov	r4, r1
   14bfc:	bl	114b8 <strlen@plt>
   14c00:	ldr	sl, [pc, #324]	; 14d4c <argp_parse@@Base+0x25a8>
   14c04:	ldr	r7, [r5]
   14c08:	sub	r9, fp, #36	; 0x24
   14c0c:	add	r0, r0, #15
   14c10:	bic	r0, r0, #7
   14c14:	sub	sp, sp, r0
   14c18:	mov	r8, sp
   14c1c:	str	sp, [r9, #-4]!
   14c20:	ldr	r2, [r7, #20]
   14c24:	mov	r0, r7
   14c28:	mov	r3, r9
   14c2c:	ldr	r2, [r2, #24]
   14c30:	mov	r1, sl
   14c34:	bl	13dcc <argp_parse@@Base+0x1628>
   14c38:	subs	r6, r6, #1
   14c3c:	add	r7, r7, #28
   14c40:	bne	14c20 <argp_parse@@Base+0x247c>
   14c44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14c48:	cmp	r8, r3
   14c4c:	bcs	14c6c <argp_parse@@Base+0x24c8>
   14c50:	add	r2, r3, #1
   14c54:	str	r2, [fp, #-40]	; 0xffffffd8
   14c58:	ldr	r1, [pc, #240]	; 14d50 <argp_parse@@Base+0x25ac>
   14c5c:	strb	r6, [r3]
   14c60:	mov	r2, r8
   14c64:	mov	r0, r4
   14c68:	bl	17ac0 <argp_error@@Base+0x1170>
   14c6c:	ldm	r5, {r6, r7}
   14c70:	ldr	r8, [pc, #220]	; 14d54 <argp_parse@@Base+0x25b0>
   14c74:	cmp	r7, #0
   14c78:	bne	14c98 <argp_parse@@Base+0x24f4>
   14c7c:	ldm	r5, {r5, r8}
   14c80:	ldr	sl, [pc, #208]	; 14d58 <argp_parse@@Base+0x25b4>
   14c84:	add	r5, r5, #28
   14c88:	cmp	r8, #0
   14c8c:	bne	14cbc <argp_parse@@Base+0x2518>
   14c90:	sub	sp, fp, #32
   14c94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c98:	ldr	r2, [r6, #20]
   14c9c:	mov	r0, r6
   14ca0:	mov	r3, r4
   14ca4:	ldr	r2, [r2, #24]
   14ca8:	mov	r1, r8
   14cac:	bl	13dcc <argp_parse@@Base+0x1628>
   14cb0:	add	r6, r6, #28
   14cb4:	sub	r7, r7, #1
   14cb8:	b	14c74 <argp_parse@@Base+0x24d0>
   14cbc:	ldr	r7, [r5, #-28]	; 0xffffffe4
   14cc0:	ldr	r9, [r5, #-24]	; 0xffffffe8
   14cc4:	mov	r6, r7
   14cc8:	cmp	r9, #0
   14ccc:	subeq	r8, r8, #1
   14cd0:	addeq	r5, r5, #28
   14cd4:	beq	14c88 <argp_parse@@Base+0x24e4>
   14cd8:	ldr	r2, [r6]
   14cdc:	cmp	r2, #0
   14ce0:	beq	14d30 <argp_parse@@Base+0x258c>
   14ce4:	ldr	r1, [r6, #12]
   14ce8:	tst	r1, #4
   14cec:	moveq	r7, r6
   14cf0:	tst	r1, #2
   14cf4:	bne	14d30 <argp_parse@@Base+0x258c>
   14cf8:	ldr	r3, [r6, #8]
   14cfc:	ldr	r0, [r7, #12]
   14d00:	cmp	r3, #0
   14d04:	orr	r1, r1, r0
   14d08:	ldreq	r3, [r7, #8]
   14d0c:	tst	r1, #16
   14d10:	bne	14d30 <argp_parse@@Base+0x258c>
   14d14:	cmp	r3, #0
   14d18:	beq	14d3c <argp_parse@@Base+0x2598>
   14d1c:	tst	r1, #1
   14d20:	movne	r1, sl
   14d24:	ldreq	r1, [pc, #48]	; 14d5c <argp_parse@@Base+0x25b8>
   14d28:	mov	r0, r4
   14d2c:	bl	17ac0 <argp_error@@Base+0x1170>
   14d30:	add	r6, r6, #24
   14d34:	sub	r9, r9, #1
   14d38:	b	14cc8 <argp_parse@@Base+0x2524>
   14d3c:	ldr	r1, [pc, #28]	; 14d60 <argp_parse@@Base+0x25bc>
   14d40:	mov	r0, r4
   14d44:	bl	17ac0 <argp_error@@Base+0x1170>
   14d48:	b	14d30 <argp_parse@@Base+0x258c>
   14d4c:	muleq	r1, r4, fp
   14d50:	andeq	r8, r1, r9, lsr r9
   14d54:	andeq	r4, r1, ip, lsr r9
   14d58:	andeq	r8, r1, r0, asr #18
   14d5c:	andeq	r8, r1, sp, asr #18
   14d60:	andeq	r8, r1, r8, asr r9
   14d64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14d68:	mov	r8, r1
   14d6c:	ldm	r0, {r5, r6}
   14d70:	cmp	r6, #0
   14d74:	bne	14d7c <argp_parse@@Base+0x25d8>
   14d78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d7c:	ldm	r5, {r4, r9}
   14d80:	mov	r7, #0
   14d84:	add	r4, r4, #24
   14d88:	cmp	r9, r7
   14d8c:	subeq	r6, r6, #1
   14d90:	addeq	r5, r5, #28
   14d94:	beq	14d70 <argp_parse@@Base+0x25cc>
   14d98:	ldr	r0, [r4, #-24]	; 0xffffffe8
   14d9c:	cmp	r0, #0
   14da0:	beq	14dc0 <argp_parse@@Base+0x261c>
   14da4:	ldr	r3, [r4, #-12]
   14da8:	tst	r3, #2
   14dac:	bne	14dc0 <argp_parse@@Base+0x261c>
   14db0:	mov	r1, r8
   14db4:	bl	112fc <strcmp@plt>
   14db8:	cmp	r0, #0
   14dbc:	beq	14dcc <argp_parse@@Base+0x2628>
   14dc0:	add	r7, r7, #1
   14dc4:	add	r4, r4, #24
   14dc8:	b	14d88 <argp_parse@@Base+0x25e4>
   14dcc:	mvn	r3, #0
   14dd0:	str	r3, [r5, #12]
   14dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14dd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ddc:	sub	sp, sp, #44	; 0x2c
   14de0:	ldr	r6, [r0, #16]
   14de4:	str	r0, [sp, #8]
   14de8:	ldr	r5, [r0]
   14dec:	mov	r0, #16
   14df0:	mov	r9, r1
   14df4:	bl	13cf4 <argp_parse@@Base+0x1550>
   14df8:	subs	r4, r0, #0
   14dfc:	bne	14e14 <argp_parse@@Base+0x2670>
   14e00:	ldr	r3, [pc, #1444]	; 153ac <argp_parse@@Base+0x2c08>
   14e04:	ldr	r2, [pc, #1444]	; 153b0 <argp_parse@@Base+0x2c0c>
   14e08:	ldr	r1, [pc, #1444]	; 153b4 <argp_parse@@Base+0x2c10>
   14e0c:	ldr	r0, [pc, #1444]	; 153b8 <argp_parse@@Base+0x2c14>
   14e10:	bl	11674 <__assert_fail@plt>
   14e14:	mov	r3, #0
   14e18:	cmp	r5, r3
   14e1c:	str	r3, [r4, #4]
   14e20:	str	r3, [r4, #12]
   14e24:	beq	15378 <argp_parse@@Base+0x2bd4>
   14e28:	ldr	r8, [r5, #12]
   14e2c:	ands	r8, r8, #4
   14e30:	addeq	r7, r5, #24
   14e34:	moveq	fp, r8
   14e38:	beq	151e0 <argp_parse@@Base+0x2a3c>
   14e3c:	ldr	r3, [pc, #1384]	; 153ac <argp_parse@@Base+0x2c08>
   14e40:	mov	r2, #460	; 0x1cc
   14e44:	ldr	r1, [pc, #1384]	; 153b4 <argp_parse@@Base+0x2c10>
   14e48:	ldr	r0, [pc, #1388]	; 153bc <argp_parse@@Base+0x2c18>
   14e4c:	b	14e10 <argp_parse@@Base+0x266c>
   14e50:	ldr	r2, [pc, #1384]	; 153c0 <argp_parse@@Base+0x2c1c>
   14e54:	ldr	r0, [r4, #4]
   14e58:	cmp	r0, r2
   14e5c:	addls	r7, r7, #28
   14e60:	movls	sl, r3
   14e64:	movls	r2, r1
   14e68:	bls	15344 <argp_parse@@Base+0x2ba0>
   14e6c:	ldr	r3, [pc, #1336]	; 153ac <argp_parse@@Base+0x2c08>
   14e70:	mov	r2, #476	; 0x1dc
   14e74:	ldr	r1, [pc, #1336]	; 153b4 <argp_parse@@Base+0x2c10>
   14e78:	ldr	r0, [pc, #1348]	; 153c4 <argp_parse@@Base+0x2c20>
   14e7c:	b	14e10 <argp_parse@@Base+0x266c>
   14e80:	ldrb	r0, [r0]
   14e84:	add	r1, r1, #1
   14e88:	cmp	r0, r8
   14e8c:	beq	15308 <argp_parse@@Base+0x2b64>
   14e90:	cmp	sl, r1
   14e94:	mov	r0, r1
   14e98:	bhi	14e80 <argp_parse@@Base+0x26dc>
   14e9c:	strb	r8, [sl]
   14ea0:	add	sl, sl, #1
   14ea4:	b	15308 <argp_parse@@Base+0x2b64>
   14ea8:	ldr	r8, [r6, #-4]
   14eac:	ldr	r7, [r6, #-8]
   14eb0:	cmp	r8, #0
   14eb4:	bne	14ec4 <argp_parse@@Base+0x2720>
   14eb8:	cmp	r7, #0
   14ebc:	moveq	r1, r9
   14ec0:	beq	14f20 <argp_parse@@Base+0x277c>
   14ec4:	ldr	r3, [sp, #8]
   14ec8:	sub	r5, r6, #16
   14ecc:	mov	r0, #28
   14ed0:	ldr	r3, [r3, #16]
   14ed4:	sub	r5, r5, r3
   14ed8:	bl	13cf4 <argp_parse@@Base+0x1550>
   14edc:	asr	r5, r5, #4
   14ee0:	subs	r1, r0, #0
   14ee4:	beq	14f20 <argp_parse@@Base+0x277c>
   14ee8:	ldr	r3, [sp, #8]
   14eec:	cmp	r9, #0
   14ef0:	str	r3, [r1, #16]
   14ef4:	ldrne	r3, [r9, #20]
   14ef8:	moveq	r3, #0
   14efc:	addne	r3, r3, #1
   14f00:	str	r3, [r1, #20]
   14f04:	ldr	r3, [r4, #12]
   14f08:	str	r8, [r1, #8]
   14f0c:	str	r7, [r1]
   14f10:	str	r5, [r1, #4]
   14f14:	str	r9, [r1, #12]
   14f18:	str	r3, [r1, #24]
   14f1c:	str	r1, [r4, #12]
   14f20:	ldr	r0, [r6, #-16]
   14f24:	bl	14dd8 <argp_parse@@Base+0x2634>
   14f28:	ldr	r2, [sp, #28]
   14f2c:	ldr	r3, [r4, #12]
   14f30:	mov	r5, r0
   14f34:	cmp	r3, #0
   14f38:	bne	14f94 <argp_parse@@Base+0x27f0>
   14f3c:	ldr	r1, [r5, #12]
   14f40:	str	r1, [r2]
   14f44:	ldr	r2, [r5, #4]
   14f48:	str	r3, [r5, #12]
   14f4c:	cmp	r2, #0
   14f50:	beq	14f78 <argp_parse@@Base+0x27d4>
   14f54:	ldr	r1, [r4, #4]
   14f58:	cmp	r1, #0
   14f5c:	bne	14fa0 <argp_parse@@Base+0x27fc>
   14f60:	str	r2, [r4, #4]
   14f64:	ldr	r2, [r5]
   14f68:	str	r2, [r4]
   14f6c:	ldr	r2, [r5, #8]
   14f70:	str	r2, [r4, #8]
   14f74:	str	r3, [r5, #4]
   14f78:	mov	r0, r5
   14f7c:	bl	13f64 <argp_parse@@Base+0x17c0>
   14f80:	add	r6, r6, #16
   14f84:	ldr	r3, [r6, #-16]
   14f88:	cmp	r3, #0
   14f8c:	bne	14ea8 <argp_parse@@Base+0x2704>
   14f90:	b	1538c <argp_parse@@Base+0x2be8>
   14f94:	add	r2, r3, #24
   14f98:	ldr	r3, [r3, #24]
   14f9c:	b	14f34 <argp_parse@@Base+0x2790>
   14fa0:	add	r3, r2, r1
   14fa4:	mov	r7, #28
   14fa8:	str	r3, [sp, #12]
   14fac:	mul	r0, r7, r3
   14fb0:	bl	13cf4 <argp_parse@@Base+0x1550>
   14fb4:	str	r0, [sp]
   14fb8:	ldr	r0, [r4, #8]
   14fbc:	bl	114b8 <strlen@plt>
   14fc0:	mov	fp, r0
   14fc4:	ldr	r0, [r5, #8]
   14fc8:	bl	114b8 <strlen@plt>
   14fcc:	add	r0, fp, r0
   14fd0:	add	r0, r0, #1
   14fd4:	bl	13cf4 <argp_parse@@Base+0x1550>
   14fd8:	ldr	r3, [sp]
   14fdc:	cmp	r3, #0
   14fe0:	cmpne	r0, #0
   14fe4:	mov	r8, r0
   14fe8:	ldreq	r3, [pc, #984]	; 153c8 <argp_parse@@Base+0x2c24>
   14fec:	ldreq	r2, [pc, #984]	; 153cc <argp_parse@@Base+0x2c28>
   14ff0:	ldreq	r1, [pc, #956]	; 153b4 <argp_parse@@Base+0x2c10>
   14ff4:	ldreq	r0, [pc, #980]	; 153d0 <argp_parse@@Base+0x2c2c>
   14ff8:	beq	14e10 <argp_parse@@Base+0x266c>
   14ffc:	ldr	r3, [sp, #12]
   15000:	ldr	r2, [pc, #952]	; 153c0 <argp_parse@@Base+0x2c1c>
   15004:	cmp	r3, r2
   15008:	ldrhi	r3, [pc, #952]	; 153c8 <argp_parse@@Base+0x2c24>
   1500c:	movhi	r2, #972	; 0x3cc
   15010:	ldrhi	r1, [pc, #924]	; 153b4 <argp_parse@@Base+0x2c10>
   15014:	ldrhi	r0, [pc, #952]	; 153d4 <argp_parse@@Base+0x2c30>
   15018:	bhi	14e10 <argp_parse@@Base+0x266c>
   1501c:	ldr	sl, [r4, #4]
   15020:	ldr	r3, [r4]
   15024:	ldr	r0, [sp]
   15028:	str	r3, [sp, #16]
   1502c:	mul	r3, r7, sl
   15030:	ldr	r1, [sp, #16]
   15034:	mov	r2, r3
   15038:	str	r3, [sp, #24]
   1503c:	bl	11488 <mempcpy@plt>
   15040:	ldr	r3, [r5, #4]
   15044:	ldr	r1, [r5]
   15048:	str	r3, [sp, #4]
   1504c:	mul	r2, r7, r3
   15050:	bl	11368 <memcpy@plt>
   15054:	ldr	r3, [r4, #8]
   15058:	mov	r2, fp
   1505c:	mov	r1, r3
   15060:	mov	r0, r8
   15064:	str	r3, [sp, #20]
   15068:	bl	11368 <memcpy@plt>
   1506c:	ldr	r1, [sp]
   15070:	ldr	r3, [sp, #20]
   15074:	cmp	sl, #0
   15078:	bne	150d4 <argp_parse@@Base+0x2930>
   1507c:	add	r3, r8, fp
   15080:	str	r3, [sp, #20]
   15084:	ldr	r3, [sp, #24]
   15088:	ldr	r1, [r5, #8]
   1508c:	add	r7, r3, #28
   15090:	ldr	r3, [sp]
   15094:	ldr	sl, [sp, #20]
   15098:	add	r7, r3, r7
   1509c:	ldr	r3, [sp, #4]
   150a0:	cmp	r3, #0
   150a4:	bne	150f0 <argp_parse@@Base+0x294c>
   150a8:	ldrb	r3, [sp, #4]
   150ac:	ldr	r0, [sp, #16]
   150b0:	strb	r3, [sl]
   150b4:	bl	13240 <argp_parse@@Base+0xa9c>
   150b8:	ldr	r0, [r4, #8]
   150bc:	bl	13240 <argp_parse@@Base+0xa9c>
   150c0:	ldr	r3, [sp]
   150c4:	str	r3, [r4]
   150c8:	ldr	r3, [sp, #12]
   150cc:	stmib	r4, {r3, r8}
   150d0:	b	14f78 <argp_parse@@Base+0x27d4>
   150d4:	ldr	r2, [r1, #8]
   150d8:	sub	sl, sl, #1
   150dc:	sub	r2, r2, r3
   150e0:	add	r2, r8, r2
   150e4:	str	r2, [r1, #8]
   150e8:	add	r1, r1, #28
   150ec:	b	15074 <argp_parse@@Base+0x28d0>
   150f0:	ldr	r3, [r7, #-24]	; 0xffffffe8
   150f4:	ldr	fp, [r7, #-28]	; 0xffffffe4
   150f8:	str	sl, [r7, #-20]	; 0xffffffec
   150fc:	cmp	r3, #0
   15100:	ldreq	r3, [sp, #4]
   15104:	addeq	r7, r7, #28
   15108:	subeq	r3, r3, #1
   1510c:	streq	r3, [sp, #4]
   15110:	beq	1509c <argp_parse@@Base+0x28f8>
   15114:	ldr	r2, [fp, #12]
   15118:	tst	r2, #8
   1511c:	bne	15160 <argp_parse@@Base+0x29bc>
   15120:	ldr	r2, [fp, #4]
   15124:	sub	r0, r2, #1
   15128:	cmp	r0, #254	; 0xfe
   1512c:	str	r2, [sp, #36]	; 0x24
   15130:	bhi	15160 <argp_parse@@Base+0x29bc>
   15134:	str	r3, [sp, #32]
   15138:	str	r1, [sp, #24]
   1513c:	bl	11494 <__ctype_b_loc@plt>
   15140:	ldr	r2, [sp, #36]	; 0x24
   15144:	ldr	r1, [sp, #24]
   15148:	ldr	r3, [sp, #32]
   1514c:	ldr	ip, [r0]
   15150:	lsl	r0, r2, #1
   15154:	ldrh	r0, [ip, r0]
   15158:	tst	r0, #16384	; 0x4000
   1515c:	bne	15398 <argp_parse@@Base+0x2bf4>
   15160:	add	fp, fp, #24
   15164:	sub	r3, r3, #1
   15168:	b	150fc <argp_parse@@Base+0x2958>
   1516c:	ldrb	ip, [ip]
   15170:	add	r2, r2, #1
   15174:	cmp	ip, r0
   15178:	beq	15194 <argp_parse@@Base+0x29f0>
   1517c:	ldr	lr, [sp, #20]
   15180:	mov	ip, r2
   15184:	cmp	lr, r2
   15188:	bhi	1516c <argp_parse@@Base+0x29c8>
   1518c:	strb	r0, [sl]
   15190:	add	sl, sl, #1
   15194:	add	r1, r1, #1
   15198:	b	15160 <argp_parse@@Base+0x29bc>
   1519c:	ldr	r1, [r7, #-12]
   151a0:	tst	r1, #4
   151a4:	ldreq	r2, [r4, #4]
   151a8:	addeq	r2, r2, #1
   151ac:	streq	r2, [r4, #4]
   151b0:	tst	r1, #8
   151b4:	bne	151dc <argp_parse@@Base+0x2a38>
   151b8:	sub	r2, sl, #1
   151bc:	cmp	r2, #254	; 0xfe
   151c0:	bhi	151dc <argp_parse@@Base+0x2a38>
   151c4:	bl	11494 <__ctype_b_loc@plt>
   151c8:	lsl	sl, sl, #1
   151cc:	ldr	r2, [r0]
   151d0:	ldrh	r2, [r2, sl]
   151d4:	tst	r2, #16384	; 0x4000
   151d8:	addne	fp, fp, #1
   151dc:	add	r7, r7, #24
   151e0:	ldr	sl, [r7, #-20]	; 0xffffffec
   151e4:	cmp	sl, #0
   151e8:	bne	1519c <argp_parse@@Base+0x29f8>
   151ec:	ldr	r2, [r7, #-24]	; 0xffffffe8
   151f0:	cmp	r2, #0
   151f4:	bne	1519c <argp_parse@@Base+0x29f8>
   151f8:	ldr	r2, [r7, #-8]
   151fc:	cmp	r2, #0
   15200:	bne	1519c <argp_parse@@Base+0x29f8>
   15204:	ldr	r1, [r7, #-4]
   15208:	cmp	r1, #0
   1520c:	bne	1519c <argp_parse@@Base+0x29f8>
   15210:	ldr	r2, [r4, #4]
   15214:	mov	r0, #28
   15218:	str	r1, [sp]
   1521c:	mul	r0, r0, r2
   15220:	bl	13cf4 <argp_parse@@Base+0x1550>
   15224:	str	r0, [r4]
   15228:	add	r0, fp, #1
   1522c:	bl	13cf4 <argp_parse@@Base+0x1550>
   15230:	ldr	r7, [r4]
   15234:	ldr	r1, [sp]
   15238:	cmp	r0, #0
   1523c:	cmpne	r7, #0
   15240:	mov	r3, r0
   15244:	str	r0, [r4, #8]
   15248:	bne	14e50 <argp_parse@@Base+0x26ac>
   1524c:	ldr	r3, [pc, #344]	; 153ac <argp_parse@@Base+0x2c08>
   15250:	ldr	r2, [pc, #384]	; 153d8 <argp_parse@@Base+0x2c34>
   15254:	ldr	r1, [pc, #344]	; 153b4 <argp_parse@@Base+0x2c10>
   15258:	ldr	r0, [pc, #380]	; 153dc <argp_parse@@Base+0x2c38>
   1525c:	b	14e10 <argp_parse@@Base+0x266c>
   15260:	uxtb	r8, r8
   15264:	mov	r1, r3
   15268:	b	14e90 <argp_parse@@Base+0x26ec>
   1526c:	ldr	r1, [r5, #12]
   15270:	tst	r1, #4
   15274:	bne	152b8 <argp_parse@@Base+0x2b14>
   15278:	b	1533c <argp_parse@@Base+0x2b98>
   1527c:	str	r2, [r7, #-24]	; 0xffffffe8
   15280:	ldr	fp, [r5, #20]
   15284:	str	r5, [r7, #-28]	; 0xffffffe4
   15288:	cmp	fp, #0
   1528c:	str	sl, [r7, #-20]	; 0xffffffec
   15290:	bne	152a8 <argp_parse@@Base+0x2b04>
   15294:	ldr	r1, [r5]
   15298:	cmp	r1, #0
   1529c:	cmpeq	r0, #0
   152a0:	addeq	fp, r8, #1
   152a4:	movne	fp, r8
   152a8:	ldr	r1, [sp, #8]
   152ac:	str	fp, [r7, #-16]
   152b0:	str	r9, [r7, #-12]
   152b4:	str	r1, [r7, #-8]
   152b8:	ldr	r1, [r7, #-24]	; 0xffffffe8
   152bc:	add	r1, r1, #1
   152c0:	str	r1, [r7, #-24]	; 0xffffffe8
   152c4:	ldr	r1, [r5, #12]
   152c8:	tst	r1, #8
   152cc:	bne	15308 <argp_parse@@Base+0x2b64>
   152d0:	ldr	r8, [r5, #4]
   152d4:	sub	r1, r8, #1
   152d8:	cmp	r1, #254	; 0xfe
   152dc:	bhi	15308 <argp_parse@@Base+0x2b64>
   152e0:	str	r2, [sp, #4]
   152e4:	str	r3, [sp]
   152e8:	bl	11494 <__ctype_b_loc@plt>
   152ec:	lsl	r1, r8, #1
   152f0:	ldr	r3, [sp]
   152f4:	ldr	r2, [sp, #4]
   152f8:	ldr	r0, [r0]
   152fc:	ldrh	r1, [r0, r1]
   15300:	tst	r1, #16384	; 0x4000
   15304:	bne	15260 <argp_parse@@Base+0x2abc>
   15308:	add	r5, r5, #24
   1530c:	ldr	r1, [r5, #4]
   15310:	cmp	r1, #0
   15314:	bne	1526c <argp_parse@@Base+0x2ac8>
   15318:	ldr	r1, [r5]
   1531c:	cmp	r1, #0
   15320:	bne	1526c <argp_parse@@Base+0x2ac8>
   15324:	ldr	r1, [r5, #16]
   15328:	cmp	r1, #0
   1532c:	bne	1526c <argp_parse@@Base+0x2ac8>
   15330:	ldr	r1, [r5, #20]
   15334:	cmp	r1, #0
   15338:	bne	1526c <argp_parse@@Base+0x2ac8>
   1533c:	add	r7, r7, #28
   15340:	mov	r8, fp
   15344:	ldr	r0, [r5, #4]
   15348:	cmp	r0, #0
   1534c:	bne	1527c <argp_parse@@Base+0x2ad8>
   15350:	ldr	r1, [r5]
   15354:	cmp	r1, #0
   15358:	bne	1527c <argp_parse@@Base+0x2ad8>
   1535c:	ldr	r1, [r5, #16]
   15360:	cmp	r1, #0
   15364:	bne	1527c <argp_parse@@Base+0x2ad8>
   15368:	ldr	r1, [r5, #20]
   1536c:	cmp	r1, #0
   15370:	bne	1527c <argp_parse@@Base+0x2ad8>
   15374:	strb	r1, [sl]
   15378:	cmp	r6, #0
   1537c:	addne	r3, r4, #12
   15380:	addne	r6, r6, #16
   15384:	strne	r3, [sp, #28]
   15388:	bne	14f84 <argp_parse@@Base+0x27e0>
   1538c:	mov	r0, r4
   15390:	add	sp, sp, #44	; 0x2c
   15394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15398:	ldrb	r0, [r1]
   1539c:	cmp	r0, r2
   153a0:	moveq	r2, r8
   153a4:	bne	15160 <argp_parse@@Base+0x29bc>
   153a8:	b	1517c <argp_parse@@Base+0x29d8>
   153ac:	andeq	r8, r1, lr, ror r8
   153b0:	andeq	r0, r0, r2, asr #3
   153b4:	andeq	r8, r1, r0, ror #18
   153b8:	andeq	r8, r1, ip, ror #18
   153bc:	andeq	r8, r1, r0, ror r9
   153c0:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   153c4:	andeq	r8, r1, r3, lsr #19
   153c8:	andeq	r8, r1, r7, lsl #17
   153cc:	andeq	r0, r0, sl, asr #7
   153d0:	ldrdeq	r8, [r1], -ip
   153d4:	andeq	r8, r1, r8, lsr #19
   153d8:	ldrdeq	r0, [r0], -sl
   153dc:	andeq	r8, r1, r0, lsl #19
   153e0:	push	{r4, r5, r6, lr}
   153e4:	mov	r4, r0
   153e8:	mov	r5, r1
   153ec:	ldr	r0, [r0, #12]
   153f0:	ldr	r1, [r1, #12]
   153f4:	cmp	r0, r1
   153f8:	bne	15430 <argp_parse@@Base+0x2c8c>
   153fc:	ldr	r0, [r5, #8]
   15400:	ldr	r3, [r4, #8]
   15404:	mvn	r2, r0
   15408:	lsr	r2, r2, #31
   1540c:	cmp	r2, r3, lsr #31
   15410:	subne	r0, r3, r0
   15414:	subeq	r0, r0, r3
   15418:	cmp	r0, #0
   1541c:	popne	{r4, r5, r6, pc}
   15420:	ldr	r0, [r5, #4]
   15424:	ldr	r3, [r4, #4]
   15428:	sub	r0, r0, r3
   1542c:	pop	{r4, r5, r6, pc}
   15430:	bl	153e0 <argp_parse@@Base+0x2c3c>
   15434:	cmp	r0, #0
   15438:	popne	{r4, r5, r6, pc}
   1543c:	ldr	r0, [r5, #8]
   15440:	ldr	r3, [r4, #8]
   15444:	mvn	r2, r0
   15448:	lsr	r2, r2, #31
   1544c:	cmp	r2, r3, lsr #31
   15450:	subne	r0, r3, r0
   15454:	subeq	r0, r0, r3
   15458:	cmp	r0, #0
   1545c:	beq	15420 <argp_parse@@Base+0x2c7c>
   15460:	pop	{r4, r5, r6, pc}
   15464:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   15468:	mov	r6, r0
   1546c:	ldr	r0, [r0, #16]
   15470:	mov	r5, r1
   15474:	cmp	r0, #0
   15478:	movne	r3, r0
   1547c:	bne	1548c <argp_parse@@Base+0x2ce8>
   15480:	ldr	r3, [r6, #12]
   15484:	b	1549c <argp_parse@@Base+0x2cf8>
   15488:	mov	r3, r2
   1548c:	ldr	r2, [r3, #12]
   15490:	cmp	r2, #0
   15494:	bne	15488 <argp_parse@@Base+0x2ce4>
   15498:	ldr	r3, [r3, #8]
   1549c:	ldr	r1, [r5, #16]
   154a0:	cmp	r1, #0
   154a4:	movne	r2, r1
   154a8:	bne	154b8 <argp_parse@@Base+0x2d14>
   154ac:	ldr	r4, [r5, #12]
   154b0:	b	154c8 <argp_parse@@Base+0x2d24>
   154b4:	mov	r2, ip
   154b8:	ldr	ip, [r2, #12]
   154bc:	cmp	ip, #0
   154c0:	bne	154b4 <argp_parse@@Base+0x2d10>
   154c4:	ldr	r4, [r2, #8]
   154c8:	mvn	r2, r4
   154cc:	lsr	r2, r2, #31
   154d0:	cmp	r2, r3, lsr #31
   154d4:	subne	r4, r3, r4
   154d8:	subeq	r4, r4, r3
   154dc:	cmp	r4, #0
   154e0:	bne	15538 <argp_parse@@Base+0x2d94>
   154e4:	adds	r4, r1, #0
   154e8:	movne	r4, #1
   154ec:	cmp	r0, #0
   154f0:	rsbeq	r4, r4, #0
   154f4:	rsbne	r4, r4, #1
   154f8:	cmp	r4, #0
   154fc:	bne	15538 <argp_parse@@Base+0x2d94>
   15500:	cmp	r0, #0
   15504:	beq	15574 <argp_parse@@Base+0x2dd0>
   15508:	ldr	r3, [r0, #20]
   1550c:	ldr	r2, [r1, #20]
   15510:	cmp	r3, r2
   15514:	ble	15544 <argp_parse@@Base+0x2da0>
   15518:	ldr	r0, [r0, #12]
   1551c:	ldr	r3, [r0, #20]
   15520:	cmp	r2, r3
   15524:	blt	15518 <argp_parse@@Base+0x2d74>
   15528:	bl	153e0 <argp_parse@@Base+0x2c3c>
   1552c:	cmp	r0, #0
   15530:	movne	r4, r0
   15534:	moveq	r4, #1
   15538:	mov	r0, r4
   1553c:	add	sp, sp, #8
   15540:	pop	{r4, r5, r6, r7, r8, pc}
   15544:	bge	15568 <argp_parse@@Base+0x2dc4>
   15548:	ldr	r1, [r1, #12]
   1554c:	ldr	r2, [r1, #20]
   15550:	cmp	r3, r2
   15554:	blt	15548 <argp_parse@@Base+0x2da4>
   15558:	bl	153e0 <argp_parse@@Base+0x2c3c>
   1555c:	subs	r4, r0, #0
   15560:	mvneq	r4, #0
   15564:	b	15538 <argp_parse@@Base+0x2d94>
   15568:	bl	153e0 <argp_parse@@Base+0x2c3c>
   1556c:	subs	r4, r0, #0
   15570:	bne	15538 <argp_parse@@Base+0x2d94>
   15574:	ldr	r4, [r5, #12]
   15578:	ldr	r3, [r6, #12]
   1557c:	mvn	r2, r4
   15580:	lsr	r2, r2, #31
   15584:	cmp	r2, r3, lsr #31
   15588:	subne	r4, r3, r4
   1558c:	subeq	r4, r4, r3
   15590:	cmp	r4, #0
   15594:	bne	15538 <argp_parse@@Base+0x2d94>
   15598:	mov	r0, r6
   1559c:	bl	13d90 <argp_parse@@Base+0x15ec>
   155a0:	mov	r7, r0
   155a4:	str	r0, [sp]
   155a8:	mov	r0, r5
   155ac:	bl	13d90 <argp_parse@@Base+0x15ec>
   155b0:	ldr	r3, [r6]
   155b4:	adds	r7, r7, #0
   155b8:	movne	r7, #1
   155bc:	ldr	r3, [r3, #12]
   155c0:	ands	r3, r7, r3, lsr #3
   155c4:	moveq	r7, r4
   155c8:	str	r0, [sp, #4]
   155cc:	beq	155e0 <argp_parse@@Base+0x2e3c>
   155d0:	mov	r0, sp
   155d4:	bl	13ef8 <argp_parse@@Base+0x1754>
   155d8:	adds	r7, r0, #0
   155dc:	movne	r7, #1
   155e0:	ldr	r3, [r5]
   155e4:	ldr	r0, [r3, #12]
   155e8:	ands	r0, r0, #8
   155ec:	beq	15610 <argp_parse@@Base+0x2e6c>
   155f0:	ldr	r3, [sp, #4]
   155f4:	cmp	r3, #0
   155f8:	moveq	r0, r4
   155fc:	beq	15610 <argp_parse@@Base+0x2e6c>
   15600:	add	r0, sp, #4
   15604:	bl	13ef8 <argp_parse@@Base+0x1754>
   15608:	adds	r0, r0, #0
   1560c:	movne	r0, #1
   15610:	subs	r4, r7, r0
   15614:	bne	15538 <argp_parse@@Base+0x2d94>
   15618:	ldr	r2, [r6, #20]
   1561c:	mov	r3, r4
   15620:	ldr	r1, [pc, #224]	; 15708 <argp_parse@@Base+0x2f64>
   15624:	ldr	r2, [r2, #24]
   15628:	mov	r0, r6
   1562c:	bl	13dcc <argp_parse@@Base+0x1628>
   15630:	ldr	r2, [r5, #20]
   15634:	mov	r3, r4
   15638:	ldr	r1, [pc, #200]	; 15708 <argp_parse@@Base+0x2f64>
   1563c:	ldr	r2, [r2, #24]
   15640:	uxtb	r8, r0
   15644:	mov	r0, r5
   15648:	bl	13dcc <argp_parse@@Base+0x1628>
   1564c:	cmp	r8, #0
   15650:	uxtb	r5, r0
   15654:	beq	15660 <argp_parse@@Base+0x2ebc>
   15658:	mov	r6, r8
   1565c:	b	15670 <argp_parse@@Base+0x2ecc>
   15660:	ldr	r3, [sp]
   15664:	cmp	r3, #0
   15668:	ldrbne	r6, [r3]
   1566c:	beq	15658 <argp_parse@@Base+0x2eb4>
   15670:	cmp	r5, #0
   15674:	beq	15680 <argp_parse@@Base+0x2edc>
   15678:	mov	r7, r5
   1567c:	b	15690 <argp_parse@@Base+0x2eec>
   15680:	ldr	r3, [sp, #4]
   15684:	cmp	r3, #0
   15688:	ldrbne	r7, [r3]
   1568c:	beq	15678 <argp_parse@@Base+0x2ed4>
   15690:	bl	11470 <__ctype_tolower_loc@plt>
   15694:	ldr	r3, [r0]
   15698:	ldr	r4, [r3, r6, lsl #2]
   1569c:	ldr	r3, [r3, r7, lsl #2]
   156a0:	subs	r4, r4, r3
   156a4:	bne	15538 <argp_parse@@Base+0x2d94>
   156a8:	subs	r4, r7, r6
   156ac:	bne	15538 <argp_parse@@Base+0x2d94>
   156b0:	adds	r4, r5, #0
   156b4:	movne	r4, #1
   156b8:	cmp	r8, #0
   156bc:	rsbeq	r4, r4, #0
   156c0:	rsbne	r4, r4, #1
   156c4:	cmp	r4, #0
   156c8:	bne	15538 <argp_parse@@Base+0x2d94>
   156cc:	cmp	r8, #0
   156d0:	bne	15538 <argp_parse@@Base+0x2d94>
   156d4:	ldm	sp, {r0, r1}
   156d8:	adds	r4, r1, #0
   156dc:	movne	r4, #1
   156e0:	cmp	r0, #0
   156e4:	rsbeq	r4, r4, #0
   156e8:	rsbne	r4, r4, #1
   156ec:	cmp	r4, #0
   156f0:	bne	15538 <argp_parse@@Base+0x2d94>
   156f4:	cmp	r0, #0
   156f8:	beq	15538 <argp_parse@@Base+0x2d94>
   156fc:	bl	113f8 <strcasecmp@plt>
   15700:	mov	r4, r0
   15704:	b	15538 <argp_parse@@Base+0x2d94>
   15708:	andeq	r3, r1, ip, lsr #29

0001570c <argp_failure@@Base>:
   1570c:	push	{r3}		; (str r3, [sp, #-4]!)
   15710:	push	{r4, r5, r6, r7, r8, lr}
   15714:	sub	sp, sp, #204	; 0xcc
   15718:	subs	r5, r0, #0
   1571c:	mov	r7, r1
   15720:	mov	r6, r2
   15724:	ldr	r8, [sp, #228]	; 0xe4
   15728:	beq	15754 <argp_failure@@Base+0x48>
   1572c:	ldr	r3, [r5, #16]
   15730:	tst	r3, #2
   15734:	bne	15744 <argp_failure@@Base+0x38>
   15738:	ldr	r4, [r5, #44]	; 0x2c
   1573c:	cmp	r4, #0
   15740:	bne	15778 <argp_failure@@Base+0x6c>
   15744:	add	sp, sp, #204	; 0xcc
   15748:	pop	{r4, r5, r6, r7, r8, lr}
   1574c:	add	sp, sp, #4
   15750:	bx	lr
   15754:	ldr	r3, [pc, #244]	; 15850 <argp_failure@@Base+0x144>
   15758:	ldr	r4, [r3]
   1575c:	cmp	r4, #0
   15760:	beq	15744 <argp_failure@@Base+0x38>
   15764:	mov	r0, r4
   15768:	bl	115e4 <flockfile@plt>
   1576c:	ldr	r3, [pc, #224]	; 15854 <argp_failure@@Base+0x148>
   15770:	ldr	r0, [r3]
   15774:	b	15784 <argp_failure@@Base+0x78>
   15778:	mov	r0, r4
   1577c:	bl	115e4 <flockfile@plt>
   15780:	ldr	r0, [r5, #40]	; 0x28
   15784:	mov	r1, r4
   15788:	bl	112e4 <fputs_unlocked@plt>
   1578c:	cmp	r8, #0
   15790:	beq	157c4 <argp_failure@@Base+0xb8>
   15794:	add	r3, sp, #232	; 0xe8
   15798:	mov	r1, r4
   1579c:	mov	r0, #58	; 0x3a
   157a0:	str	r3, [sp]
   157a4:	bl	11680 <putc_unlocked@plt>
   157a8:	mov	r1, r4
   157ac:	mov	r0, #32
   157b0:	bl	11680 <putc_unlocked@plt>
   157b4:	ldr	r2, [sp]
   157b8:	mov	r1, r8
   157bc:	mov	r0, r4
   157c0:	bl	11590 <vfprintf@plt>
   157c4:	cmp	r6, #0
   157c8:	beq	15818 <argp_failure@@Base+0x10c>
   157cc:	mov	r1, r4
   157d0:	mov	r0, #58	; 0x3a
   157d4:	bl	11680 <putc_unlocked@plt>
   157d8:	mov	r1, r4
   157dc:	mov	r0, #32
   157e0:	bl	11680 <putc_unlocked@plt>
   157e4:	mov	r2, #200	; 0xc8
   157e8:	mov	r1, sp
   157ec:	mov	r0, r6
   157f0:	bl	11500 <strerror_r@plt>
   157f4:	cmp	r0, #0
   157f8:	bne	15810 <argp_failure@@Base+0x104>
   157fc:	mov	r0, r6
   15800:	bl	11464 <strerror@plt>
   15804:	ldr	r3, [pc, #76]	; 15858 <argp_failure@@Base+0x14c>
   15808:	cmp	r0, #0
   1580c:	moveq	r0, r3
   15810:	mov	r1, r4
   15814:	bl	112e4 <fputs_unlocked@plt>
   15818:	mov	r1, r4
   1581c:	mov	r0, #10
   15820:	bl	11680 <putc_unlocked@plt>
   15824:	mov	r0, r4
   15828:	bl	11404 <funlockfile@plt>
   1582c:	cmp	r7, #0
   15830:	beq	15744 <argp_failure@@Base+0x38>
   15834:	cmp	r5, #0
   15838:	beq	15848 <argp_failure@@Base+0x13c>
   1583c:	ldr	r3, [r5, #16]
   15840:	tst	r3, #32
   15844:	bne	15744 <argp_failure@@Base+0x38>
   15848:	mov	r0, r7
   1584c:	bl	114ac <exit@plt>
   15850:	andeq	r9, r2, r8, lsl #10
   15854:	strdeq	r9, [r2], -r8
   15858:	strdeq	r8, [r1], -r5
   1585c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15860:	add	fp, sp, #32
   15864:	sub	sp, sp, #116	; 0x74
   15868:	str	r3, [fp, #-104]	; 0xffffff98
   1586c:	subs	r3, r2, #0
   15870:	str	r0, [fp, #-108]	; 0xffffff94
   15874:	str	r1, [fp, #-96]	; 0xffffffa0
   15878:	str	r3, [fp, #-112]	; 0xffffff90
   1587c:	beq	158f8 <argp_failure@@Base+0x1ec>
   15880:	ldr	r5, [pc, #3996]	; 16824 <argp_failure@@Base+0x1118>
   15884:	mov	r0, r3
   15888:	bl	115e4 <flockfile@plt>
   1588c:	ldr	r9, [r5, #36]	; 0x24
   15890:	cmp	r9, #0
   15894:	bne	158d0 <argp_failure@@Base+0x1c4>
   15898:	ldr	r0, [pc, #3976]	; 16828 <argp_failure@@Base+0x111c>
   1589c:	bl	11434 <getenv@plt>
   158a0:	mov	ip, r5
   158a4:	sub	lr, fp, #76	; 0x4c
   158a8:	mov	r4, r0
   158ac:	ldm	ip!, {r0, r1, r2, r3}
   158b0:	cmp	r4, #0
   158b4:	movne	r5, #1
   158b8:	stmia	lr!, {r0, r1, r2, r3}
   158bc:	ldm	ip!, {r0, r1, r2, r3}
   158c0:	stmia	lr!, {r0, r1, r2, r3}
   158c4:	ldm	ip, {r0, r1}
   158c8:	stm	lr, {r0, r1}
   158cc:	bne	15b4c <argp_failure@@Base+0x440>
   158d0:	ldr	r5, [pc, #3916]	; 16824 <argp_failure@@Base+0x1118>
   158d4:	mov	r3, #0
   158d8:	mov	r1, r3
   158dc:	ldr	r2, [r5, #32]
   158e0:	ldr	r0, [fp, #-112]	; 0xffffff90
   158e4:	bl	17514 <argp_error@@Base+0xbc4>
   158e8:	subs	r4, r0, #0
   158ec:	bne	15be0 <argp_failure@@Base+0x4d4>
   158f0:	ldr	r0, [fp, #-112]	; 0xffffff90
   158f4:	bl	11404 <funlockfile@plt>
   158f8:	sub	sp, fp, #32
   158fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15900:	mov	r3, r1
   15904:	mov	r1, r3
   15908:	str	r3, [fp, #-100]	; 0xffffff9c
   1590c:	ldrb	r0, [r1], #1
   15910:	lsl	r2, r0, #1
   15914:	ldrh	r2, [r6, r2]
   15918:	tst	r2, #8192	; 0x2000
   1591c:	bne	15900 <argp_failure@@Base+0x1f4>
   15920:	ands	r2, r2, #1024	; 0x400
   15924:	movne	r2, r3
   15928:	bne	159a4 <argp_failure@@Base+0x298>
   1592c:	cmp	r0, #0
   15930:	beq	15b9c <argp_failure@@Base+0x490>
   15934:	str	r3, [sp]
   15938:	mov	r1, r2
   1593c:	ldr	r3, [pc, #3816]	; 1682c <argp_failure@@Base+0x1120>
   15940:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15944:	bl	1570c <argp_failure@@Base>
   15948:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1594c:	ldr	r3, [pc, #3804]	; 16830 <argp_failure@@Base+0x1124>
   15950:	mov	r0, #9
   15954:	ldrb	r2, [r3, #14]
   15958:	cmp	r2, #0
   1595c:	bne	15ba4 <argp_failure@@Base+0x498>
   15960:	ldrb	r1, [r3, #15]
   15964:	cmp	r1, #32
   15968:	beq	15ba4 <argp_failure@@Base+0x498>
   1596c:	sub	lr, fp, #36	; 0x24
   15970:	add	r1, lr, r1
   15974:	ldr	r1, [r1, #-40]	; 0xffffffd8
   15978:	cmp	r1, ip
   1597c:	blt	15ba4 <argp_failure@@Base+0x498>
   15980:	str	r3, [sp, #4]
   15984:	ldr	r3, [pc, #3752]	; 16834 <argp_failure@@Base+0x1128>
   15988:	mov	r1, r2
   1598c:	str	r3, [sp]
   15990:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15994:	ldr	r3, [pc, #3740]	; 16838 <argp_failure@@Base+0x112c>
   15998:	bl	1570c <argp_failure@@Base>
   1599c:	b	158d0 <argp_failure@@Base+0x1c4>
   159a0:	mov	r2, lr
   159a4:	mov	lr, r2
   159a8:	ldrb	r1, [lr], #1
   159ac:	cmp	r1, #95	; 0x5f
   159b0:	cmpne	r1, #45	; 0x2d
   159b4:	lsl	ip, r1, #1
   159b8:	moveq	r1, #1
   159bc:	ldrh	ip, [r6, ip]
   159c0:	movne	r1, #0
   159c4:	lsl	ip, ip, #28
   159c8:	orrs	r1, r1, ip, lsr #31
   159cc:	bne	159a0 <argp_failure@@Base+0x294>
   159d0:	sub	r8, r2, r3
   159d4:	mov	r4, r2
   159d8:	ldrb	r1, [r2], #1
   159dc:	lsl	ip, r1, #1
   159e0:	ldrh	ip, [r6, ip]
   159e4:	tst	ip, #8192	; 0x2000
   159e8:	bne	159d4 <argp_failure@@Base+0x2c8>
   159ec:	cmp	r1, #44	; 0x2c
   159f0:	cmpne	r1, #0
   159f4:	beq	16764 <argp_failure@@Base+0x1058>
   159f8:	cmp	r1, #61	; 0x3d
   159fc:	bne	15a1c <argp_failure@@Base+0x310>
   15a00:	mov	r4, r2
   15a04:	add	r2, r2, #1
   15a08:	ldrb	r3, [r4]
   15a0c:	lsl	r3, r3, #1
   15a10:	ldrh	r3, [r6, r3]
   15a14:	tst	r3, #8192	; 0x2000
   15a18:	bne	15a00 <argp_failure@@Base+0x2f4>
   15a1c:	ldrb	r3, [r4]
   15a20:	lsl	r3, r3, #1
   15a24:	ldrh	r3, [r6, r3]
   15a28:	tst	r3, #2048	; 0x800
   15a2c:	moveq	sl, r9
   15a30:	moveq	r7, r9
   15a34:	beq	15ab0 <argp_failure@@Base+0x3a4>
   15a38:	mov	r0, r4
   15a3c:	bl	115fc <atoi@plt>
   15a40:	mov	r3, r4
   15a44:	mov	r7, r0
   15a48:	ldrb	r2, [r3]
   15a4c:	add	r1, r3, #1
   15a50:	lsl	r2, r2, #1
   15a54:	ldrh	r2, [r6, r2]
   15a58:	tst	r2, #2048	; 0x800
   15a5c:	bne	15b68 <argp_failure@@Base+0x45c>
   15a60:	mov	r4, r3
   15a64:	add	r3, r3, #1
   15a68:	ldrb	r2, [r4]
   15a6c:	lsl	r2, r2, #1
   15a70:	ldrh	r2, [r6, r2]
   15a74:	tst	r2, #8192	; 0x2000
   15a78:	bne	15a60 <argp_failure@@Base+0x354>
   15a7c:	mov	sl, r9
   15a80:	b	15ab0 <argp_failure@@Base+0x3a4>
   15a84:	ldrb	r2, [r3, #1]
   15a88:	cmp	r2, #111	; 0x6f
   15a8c:	bne	1676c <argp_failure@@Base+0x1060>
   15a90:	ldrb	r2, [r3, #2]
   15a94:	cmp	r2, #45	; 0x2d
   15a98:	bne	1676c <argp_failure@@Base+0x1060>
   15a9c:	sub	r8, r8, #3
   15aa0:	mov	r7, r9
   15aa4:	mov	sl, r5
   15aa8:	add	r3, r3, #3
   15aac:	str	r3, [fp, #-100]	; 0xffffff9c
   15ab0:	ldr	r6, [pc, #3448]	; 16830 <argp_failure@@Base+0x1124>
   15ab4:	mov	r3, #9
   15ab8:	str	r3, [fp, #-116]	; 0xffffff8c
   15abc:	mov	r0, r6
   15ac0:	bl	114b8 <strlen@plt>
   15ac4:	cmp	r0, r8
   15ac8:	bne	15b84 <argp_failure@@Base+0x478>
   15acc:	mov	r2, r8
   15ad0:	mov	r1, r6
   15ad4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15ad8:	bl	11644 <strncmp@plt>
   15adc:	cmp	r0, #0
   15ae0:	bne	15b84 <argp_failure@@Base+0x478>
   15ae4:	cmp	sl, #0
   15ae8:	beq	15b70 <argp_failure@@Base+0x464>
   15aec:	ldrb	r2, [r6, #14]
   15af0:	cmp	r2, #0
   15af4:	bne	15b70 <argp_failure@@Base+0x464>
   15af8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15afc:	str	r8, [sp]
   15b00:	str	r3, [sp, #4]
   15b04:	mov	r1, r2
   15b08:	ldr	r3, [pc, #3372]	; 1683c <argp_failure@@Base+0x1130>
   15b0c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15b10:	bl	1570c <argp_failure@@Base>
   15b14:	ldr	r3, [pc, #3364]	; 16840 <argp_failure@@Base+0x1134>
   15b18:	cmp	r6, r3
   15b1c:	bne	15b40 <argp_failure@@Base+0x434>
   15b20:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15b24:	mov	r2, #0
   15b28:	str	r3, [sp, #4]
   15b2c:	str	r8, [sp]
   15b30:	ldr	r3, [pc, #3340]	; 16844 <argp_failure@@Base+0x1138>
   15b34:	mov	r1, r2
   15b38:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15b3c:	bl	1570c <argp_failure@@Base>
   15b40:	ldrb	r3, [r4]
   15b44:	cmp	r3, #44	; 0x2c
   15b48:	addeq	r4, r4, #1
   15b4c:	ldrb	r3, [r4]
   15b50:	cmp	r3, #0
   15b54:	beq	15948 <argp_failure@@Base+0x23c>
   15b58:	bl	11494 <__ctype_b_loc@plt>
   15b5c:	mov	r3, r4
   15b60:	ldr	r6, [r0]
   15b64:	b	15904 <argp_failure@@Base+0x1f8>
   15b68:	mov	r3, r1
   15b6c:	b	15a48 <argp_failure@@Base+0x33c>
   15b70:	ldrb	r3, [r6, #15]
   15b74:	sub	r2, fp, #36	; 0x24
   15b78:	add	r3, r2, r3
   15b7c:	str	r7, [r3, #-40]	; 0xffffffd8
   15b80:	b	15b14 <argp_failure@@Base+0x408>
   15b84:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15b88:	add	r6, r6, #16
   15b8c:	subs	r3, r3, #1
   15b90:	str	r3, [fp, #-116]	; 0xffffff8c
   15b94:	bne	15abc <argp_failure@@Base+0x3b0>
   15b98:	b	15b14 <argp_failure@@Base+0x408>
   15b9c:	mov	r4, r3
   15ba0:	b	15b4c <argp_failure@@Base+0x440>
   15ba4:	subs	r0, r0, #1
   15ba8:	add	r3, r3, #16
   15bac:	bne	15954 <argp_failure@@Base+0x248>
   15bb0:	sub	lr, fp, #76	; 0x4c
   15bb4:	ldr	r4, [pc, #3176]	; 16824 <argp_failure@@Base+0x1118>
   15bb8:	ldm	lr!, {r0, r1, r2, r3}
   15bbc:	mov	ip, r4
   15bc0:	stmia	ip!, {r0, r1, r2, r3}
   15bc4:	ldm	lr!, {r0, r1, r2, r3}
   15bc8:	stmia	ip!, {r0, r1, r2, r3}
   15bcc:	mov	r3, #1
   15bd0:	ldm	lr, {r0, r1}
   15bd4:	stm	ip, {r0, r1}
   15bd8:	str	r3, [r4, #36]	; 0x24
   15bdc:	b	158d0 <argp_failure@@Base+0x1c4>
   15be0:	ldr	r3, [fp, #-104]	; 0xffffff98
   15be4:	ands	r3, r3, #11
   15be8:	moveq	sl, r3
   15bec:	beq	15c4c <argp_failure@@Base+0x540>
   15bf0:	mov	r1, #0
   15bf4:	ldr	r0, [fp, #-108]	; 0xffffff94
   15bf8:	bl	14dd8 <argp_parse@@Base+0x2634>
   15bfc:	ldr	r1, [pc, #3140]	; 16848 <argp_failure@@Base+0x113c>
   15c00:	mov	sl, r0
   15c04:	bl	14d64 <argp_parse@@Base+0x25c0>
   15c08:	ldr	r1, [pc, #3132]	; 1684c <argp_failure@@Base+0x1140>
   15c0c:	mov	r0, sl
   15c10:	bl	14d64 <argp_parse@@Base+0x25c0>
   15c14:	ldr	r1, [sl, #4]
   15c18:	cmp	r1, #0
   15c1c:	beq	15c4c <argp_failure@@Base+0x540>
   15c20:	ldr	r0, [sl]
   15c24:	mov	r3, #0
   15c28:	mov	r2, r0
   15c2c:	str	r3, [r2, #24]
   15c30:	add	r3, r3, #1
   15c34:	cmp	r1, r3
   15c38:	add	r2, r2, #28
   15c3c:	bne	15c2c <argp_failure@@Base+0x520>
   15c40:	ldr	r3, [pc, #3080]	; 16850 <argp_failure@@Base+0x1144>
   15c44:	mov	r2, #28
   15c48:	bl	11608 <qsort@plt>
   15c4c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15c50:	ands	r3, r3, #3
   15c54:	moveq	r5, r3
   15c58:	beq	15df8 <argp_failure@@Base+0x6ec>
   15c5c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15c60:	bl	13fb0 <argp_parse@@Base+0x180c>
   15c64:	mov	r1, #0
   15c68:	ldr	r6, [pc, #3044]	; 16854 <argp_failure@@Base+0x1148>
   15c6c:	mov	r9, #1
   15c70:	add	r3, r0, #14
   15c74:	bic	r3, r3, #7
   15c78:	sub	sp, sp, r3
   15c7c:	add	r7, sp, #8
   15c80:	mov	r2, r0
   15c84:	mov	r0, r7
   15c88:	bl	1150c <memset@plt>
   15c8c:	ldr	r2, [r4, #24]
   15c90:	ldr	r3, [r4, #28]
   15c94:	ldr	r8, [r5, #28]
   15c98:	sub	r3, r3, r2
   15c9c:	ldr	r2, [r4, #16]
   15ca0:	cmp	r3, r2
   15ca4:	bls	15cb0 <argp_failure@@Base+0x5a4>
   15ca8:	mov	r0, r4
   15cac:	bl	1758c <argp_error@@Base+0xc3c>
   15cb0:	ldr	r3, [r4, #12]
   15cb4:	cmp	r9, #0
   15cb8:	str	r8, [r4, #12]
   15cbc:	ldrne	r2, [pc, #2964]	; 16858 <argp_failure@@Base+0x114c>
   15cc0:	ldreq	r2, [pc, #2964]	; 1685c <argp_failure@@Base+0x1150>
   15cc4:	str	r3, [fp, #-100]	; 0xffffff9c
   15cc8:	ldr	r1, [pc, #2960]	; 16860 <argp_failure@@Base+0x1154>
   15ccc:	ldr	r3, [fp, #4]
   15cd0:	mov	r0, r4
   15cd4:	str	r7, [fp, #-76]	; 0xffffffb4
   15cd8:	bl	17ac0 <argp_error@@Base+0x1170>
   15cdc:	ldr	r2, [r4, #24]
   15ce0:	ldr	r3, [r4, #28]
   15ce4:	ldr	r8, [r5, #28]
   15ce8:	sub	r3, r3, r2
   15cec:	ldr	r2, [r4, #16]
   15cf0:	cmp	r3, r2
   15cf4:	bls	15d00 <argp_failure@@Base+0x5f4>
   15cf8:	mov	r0, r4
   15cfc:	bl	1758c <argp_error@@Base+0xc3c>
   15d00:	ldr	r3, [fp, #-104]	; 0xffffff98
   15d04:	ldr	r9, [r4, #4]
   15d08:	tst	r3, #2
   15d0c:	str	r8, [r4, #4]
   15d10:	beq	16074 <argp_failure@@Base+0x968>
   15d14:	ldr	r3, [sl, #4]
   15d18:	cmp	r3, #0
   15d1c:	beq	15d5c <argp_failure@@Base+0x650>
   15d20:	ldr	r3, [r4, #28]
   15d24:	ldr	r2, [r4, #32]
   15d28:	add	r3, r3, #12
   15d2c:	cmp	r2, r3
   15d30:	bcc	1605c <argp_failure@@Base+0x950>
   15d34:	ldr	r2, [r4, #28]
   15d38:	ldr	r3, [r6]
   15d3c:	str	r3, [r2]
   15d40:	ldr	r3, [r6, #4]
   15d44:	str	r3, [r2, #4]
   15d48:	ldr	r3, [r6, #8]
   15d4c:	str	r3, [r2, #8]
   15d50:	ldr	r3, [r4, #28]
   15d54:	add	r3, r3, #12
   15d58:	str	r3, [r4, #28]
   15d5c:	mov	r3, #1
   15d60:	sub	r2, fp, #76	; 0x4c
   15d64:	str	r4, [sp]
   15d68:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15d6c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15d70:	bl	149c4 <argp_parse@@Base+0x2220>
   15d74:	ldr	r2, [r4, #24]
   15d78:	ldr	r3, [r4, #28]
   15d7c:	sub	r3, r3, r2
   15d80:	ldr	r2, [r4, #16]
   15d84:	cmp	r3, r2
   15d88:	mov	r8, r0
   15d8c:	bls	15d98 <argp_failure@@Base+0x68c>
   15d90:	mov	r0, r4
   15d94:	bl	1758c <argp_error@@Base+0xc3c>
   15d98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d9c:	ldr	r2, [r4, #24]
   15da0:	str	r3, [r4, #12]
   15da4:	ldr	r3, [r4, #28]
   15da8:	sub	r3, r3, r2
   15dac:	ldr	r2, [r4, #16]
   15db0:	cmp	r3, r2
   15db4:	bls	15dc0 <argp_failure@@Base+0x6b4>
   15db8:	mov	r0, r4
   15dbc:	bl	1758c <argp_error@@Base+0xc3c>
   15dc0:	ldr	r2, [r4, #28]
   15dc4:	ldr	r3, [r4, #32]
   15dc8:	str	r9, [r4, #4]
   15dcc:	cmp	r2, r3
   15dd0:	bcs	16090 <argp_failure@@Base+0x984>
   15dd4:	ldr	r3, [r4, #28]
   15dd8:	add	r2, r3, #1
   15ddc:	str	r2, [r4, #28]
   15de0:	mov	r2, #10
   15de4:	strb	r2, [r3]
   15de8:	mov	r9, #0
   15dec:	cmp	r8, r9
   15df0:	bne	15c8c <argp_failure@@Base+0x580>
   15df4:	mov	r5, #1
   15df8:	ldr	r3, [fp, #-104]	; 0xffffff98
   15dfc:	tst	r3, #16
   15e00:	beq	15e28 <argp_failure@@Base+0x71c>
   15e04:	mov	r3, #1
   15e08:	str	r3, [sp]
   15e0c:	mov	r3, #0
   15e10:	str	r4, [sp, #4]
   15e14:	mov	r2, r3
   15e18:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15e1c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15e20:	bl	1442c <argp_parse@@Base+0x1c88>
   15e24:	orr	r5, r5, r0
   15e28:	ldr	r3, [fp, #-104]	; 0xffffff98
   15e2c:	tst	r3, #4
   15e30:	beq	15e4c <argp_failure@@Base+0x740>
   15e34:	ldr	r3, [fp, #4]
   15e38:	ldr	r1, [pc, #2596]	; 16864 <argp_failure@@Base+0x1158>
   15e3c:	mov	r2, r3
   15e40:	mov	r0, r4
   15e44:	bl	17ac0 <argp_error@@Base+0x1170>
   15e48:	mov	r5, #1
   15e4c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15e50:	tst	r3, #8
   15e54:	beq	15fac <argp_failure@@Base+0x8a0>
   15e58:	ldr	r3, [sl, #4]
   15e5c:	cmp	r3, #0
   15e60:	beq	15fac <argp_failure@@Base+0x8a0>
   15e64:	cmp	r5, #0
   15e68:	beq	15e90 <argp_failure@@Base+0x784>
   15e6c:	ldr	r2, [r4, #28]
   15e70:	ldr	r3, [r4, #32]
   15e74:	cmp	r2, r3
   15e78:	bcs	160a8 <argp_failure@@Base+0x99c>
   15e7c:	ldr	r3, [r4, #28]
   15e80:	add	r2, r3, #1
   15e84:	str	r2, [r4, #28]
   15e88:	mov	r2, #10
   15e8c:	strb	r2, [r3]
   15e90:	mov	r3, #0
   15e94:	str	r3, [fp, #-88]	; 0xffffffa8
   15e98:	str	r3, [fp, #-84]	; 0xffffffac
   15e9c:	str	r3, [fp, #-80]	; 0xffffffb0
   15ea0:	ldr	r3, [sl]
   15ea4:	str	r3, [fp, #-100]	; 0xffffff9c
   15ea8:	ldr	r3, [sl, #4]
   15eac:	str	r3, [fp, #-116]	; 0xffffff8c
   15eb0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15eb4:	cmp	r3, #0
   15eb8:	bne	160c0 <argp_failure@@Base+0x9b4>
   15ebc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15ec0:	cmp	r3, #0
   15ec4:	beq	15fa8 <argp_failure@@Base+0x89c>
   15ec8:	ldr	r3, [pc, #2388]	; 16824 <argp_failure@@Base+0x1118>
   15ecc:	ldr	r3, [r3, #4]
   15ed0:	cmp	r3, #0
   15ed4:	beq	15fa8 <argp_failure@@Base+0x89c>
   15ed8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15edc:	ldr	r1, [pc, #2436]	; 16868 <argp_failure@@Base+0x115c>
   15ee0:	cmp	r3, #0
   15ee4:	ldr	r0, [pc, #2432]	; 1686c <argp_failure@@Base+0x1160>
   15ee8:	ldrne	r2, [r3]
   15eec:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   15ef0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ef4:	bl	14090 <argp_parse@@Base+0x18ec>
   15ef8:	subs	r5, r0, #0
   15efc:	beq	15fa8 <argp_failure@@Base+0x89c>
   15f00:	ldrb	r3, [r5]
   15f04:	cmp	r3, #0
   15f08:	beq	15f94 <argp_failure@@Base+0x888>
   15f0c:	ldr	r2, [r4, #28]
   15f10:	ldr	r3, [r4, #32]
   15f14:	cmp	r2, r3
   15f18:	bcs	16704 <argp_failure@@Base+0xff8>
   15f1c:	ldr	r3, [r4, #28]
   15f20:	add	r2, r3, #1
   15f24:	str	r2, [r4, #28]
   15f28:	mov	r2, #10
   15f2c:	strb	r2, [r3]
   15f30:	mov	r0, r5
   15f34:	bl	114b8 <strlen@plt>
   15f38:	subs	r6, r0, #0
   15f3c:	beq	15f70 <argp_failure@@Base+0x864>
   15f40:	ldr	r3, [r4, #28]
   15f44:	ldr	r2, [r4, #32]
   15f48:	add	r3, r3, r6
   15f4c:	cmp	r2, r3
   15f50:	bcc	1671c <argp_failure@@Base+0x1010>
   15f54:	mov	r2, r6
   15f58:	mov	r1, r5
   15f5c:	ldr	r0, [r4, #28]
   15f60:	bl	11368 <memcpy@plt>
   15f64:	ldr	r3, [r4, #28]
   15f68:	add	r6, r3, r6
   15f6c:	str	r6, [r4, #28]
   15f70:	ldr	r2, [r4, #28]
   15f74:	ldr	r3, [r4, #32]
   15f78:	cmp	r2, r3
   15f7c:	bcs	16734 <argp_failure@@Base+0x1028>
   15f80:	ldr	r3, [r4, #28]
   15f84:	add	r2, r3, #1
   15f88:	str	r2, [r4, #28]
   15f8c:	mov	r2, #10
   15f90:	strb	r2, [r3]
   15f94:	ldr	r3, [pc, #2256]	; 1686c <argp_failure@@Base+0x1160>
   15f98:	cmp	r5, r3
   15f9c:	beq	15fa8 <argp_failure@@Base+0x89c>
   15fa0:	mov	r0, r5
   15fa4:	bl	13240 <argp_parse@@Base+0xa9c>
   15fa8:	mov	r5, #1
   15fac:	ldr	r3, [fp, #-104]	; 0xffffff98
   15fb0:	tst	r3, #32
   15fb4:	beq	15fdc <argp_failure@@Base+0x8d0>
   15fb8:	mov	r3, #0
   15fbc:	str	r3, [sp]
   15fc0:	str	r4, [sp, #4]
   15fc4:	mov	r3, r5
   15fc8:	mov	r2, #1
   15fcc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15fd0:	ldr	r0, [fp, #-108]	; 0xffffff94
   15fd4:	bl	1442c <argp_parse@@Base+0x1c88>
   15fd8:	orr	r5, r5, r0
   15fdc:	ldr	r3, [fp, #-104]	; 0xffffff98
   15fe0:	tst	r3, #64	; 0x40
   15fe4:	beq	16038 <argp_failure@@Base+0x92c>
   15fe8:	ldr	r3, [pc, #2176]	; 16870 <argp_failure@@Base+0x1164>
   15fec:	mov	r6, r3
   15ff0:	ldr	r2, [r3]
   15ff4:	cmp	r2, #0
   15ff8:	beq	16038 <argp_failure@@Base+0x92c>
   15ffc:	cmp	r5, #0
   16000:	beq	16028 <argp_failure@@Base+0x91c>
   16004:	ldr	r2, [r4, #28]
   16008:	ldr	r3, [r4, #32]
   1600c:	cmp	r2, r3
   16010:	bcs	1674c <argp_failure@@Base+0x1040>
   16014:	ldr	r3, [r4, #28]
   16018:	add	r2, r3, #1
   1601c:	str	r2, [r4, #28]
   16020:	mov	r2, #10
   16024:	strb	r2, [r3]
   16028:	ldr	r2, [r6]
   1602c:	ldr	r1, [pc, #2112]	; 16874 <argp_failure@@Base+0x1168>
   16030:	mov	r0, r4
   16034:	bl	17ac0 <argp_error@@Base+0x1170>
   16038:	ldr	r0, [fp, #-112]	; 0xffffff90
   1603c:	bl	11404 <funlockfile@plt>
   16040:	cmp	sl, #0
   16044:	beq	16050 <argp_failure@@Base+0x944>
   16048:	mov	r0, sl
   1604c:	bl	13f64 <argp_parse@@Base+0x17c0>
   16050:	mov	r0, r4
   16054:	bl	1799c <argp_error@@Base+0x104c>
   16058:	b	158f8 <argp_failure@@Base+0x1ec>
   1605c:	mov	r1, #12
   16060:	mov	r0, r4
   16064:	bl	179dc <argp_error@@Base+0x108c>
   16068:	cmp	r0, #0
   1606c:	bne	15d34 <argp_failure@@Base+0x628>
   16070:	b	15d5c <argp_failure@@Base+0x650>
   16074:	mov	r1, r4
   16078:	mov	r0, sl
   1607c:	bl	14bd8 <argp_parse@@Base+0x2434>
   16080:	ldr	r3, [fp, #-104]	; 0xffffff98
   16084:	orr	r3, r3, #2
   16088:	str	r3, [fp, #-104]	; 0xffffff98
   1608c:	b	15d5c <argp_failure@@Base+0x650>
   16090:	mov	r1, #1
   16094:	mov	r0, r4
   16098:	bl	179dc <argp_error@@Base+0x108c>
   1609c:	cmp	r0, #0
   160a0:	bne	15dd4 <argp_failure@@Base+0x6c8>
   160a4:	b	15de8 <argp_failure@@Base+0x6dc>
   160a8:	mov	r1, #1
   160ac:	mov	r0, r4
   160b0:	bl	179dc <argp_error@@Base+0x108c>
   160b4:	cmp	r0, #0
   160b8:	bne	15e7c <argp_failure@@Base+0x770>
   160bc:	b	15e90 <argp_failure@@Base+0x784>
   160c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   160c4:	ldr	r2, [r4, #24]
   160c8:	ldr	r5, [r3]
   160cc:	ldr	r9, [r3, #8]
   160d0:	ldr	r3, [r4, #28]
   160d4:	sub	r3, r3, r2
   160d8:	ldr	r2, [r4, #16]
   160dc:	cmp	r3, r2
   160e0:	bls	160ec <argp_failure@@Base+0x9e0>
   160e4:	mov	r0, r4
   160e8:	bl	1758c <argp_error@@Base+0xc3c>
   160ec:	ldr	r2, [r4, #12]
   160f0:	ldr	r3, [r4, #4]
   160f4:	str	r2, [fp, #-128]	; 0xffffff80
   160f8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   160fc:	str	r3, [fp, #-124]	; 0xffffff84
   16100:	mov	r3, #0
   16104:	str	r3, [r4, #4]
   16108:	str	r2, [fp, #-76]	; 0xffffffb4
   1610c:	sub	r2, fp, #88	; 0x58
   16110:	str	r2, [fp, #-68]	; 0xffffffbc
   16114:	mov	r2, #1
   16118:	str	r2, [fp, #-64]	; 0xffffffc0
   1611c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16120:	str	r4, [fp, #-72]	; 0xffffffb8
   16124:	str	r2, [fp, #-60]	; 0xffffffc4
   16128:	ldr	r2, [r5, #12]
   1612c:	ands	r2, r2, #8
   16130:	str	r2, [fp, #-120]	; 0xffffff88
   16134:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   16138:	ldreq	r2, [r3, #4]
   1613c:	addeq	r3, r5, #24
   16140:	beq	1616c <argp_failure@@Base+0xa60>
   16144:	str	r3, [fp, #-120]	; 0xffffff88
   16148:	b	16174 <argp_failure@@Base+0xa68>
   1614c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   16150:	cmp	r1, #0
   16154:	beq	16164 <argp_failure@@Base+0xa58>
   16158:	ldr	r1, [r3, #-12]
   1615c:	tst	r1, #2
   16160:	beq	162fc <argp_failure@@Base+0xbf0>
   16164:	sub	r2, r2, #1
   16168:	add	r3, r3, #24
   1616c:	cmp	r2, #0
   16170:	bne	1614c <argp_failure@@Base+0xa40>
   16174:	ldr	r3, [pc, #1704]	; 16824 <argp_failure@@Base+0x1118>
   16178:	ldr	r2, [r4, #24]
   1617c:	ldr	r6, [r3, #8]
   16180:	ldr	r3, [r4, #28]
   16184:	sub	r3, r3, r2
   16188:	ldr	r2, [r4, #16]
   1618c:	cmp	r3, r2
   16190:	bls	1619c <argp_failure@@Base+0xa90>
   16194:	mov	r0, r4
   16198:	bl	1758c <argp_error@@Base+0xc3c>
   1619c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   161a0:	str	r6, [r4, #12]
   161a4:	ldr	r7, [pc, #1656]	; 16824 <argp_failure@@Base+0x1118>
   161a8:	ldr	r8, [r3, #4]
   161ac:	mov	r6, r5
   161b0:	cmp	r8, #0
   161b4:	bne	16304 <argp_failure@@Base+0xbf8>
   161b8:	ldr	r3, [r5, #12]
   161bc:	ldr	r1, [pc, #1632]	; 16824 <argp_failure@@Base+0x1118>
   161c0:	tst	r3, #8
   161c4:	ldr	r2, [r4, #24]
   161c8:	ldr	r3, [r4, #28]
   161cc:	beq	16430 <argp_failure@@Base+0xd24>
   161d0:	sub	r3, r3, r2
   161d4:	ldr	r2, [r4, #16]
   161d8:	ldr	r6, [r1, #16]
   161dc:	cmp	r3, r2
   161e0:	bls	161ec <argp_failure@@Base+0xae0>
   161e4:	mov	r0, r4
   161e8:	bl	1758c <argp_error@@Base+0xc3c>
   161ec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   161f0:	str	r6, [r4, #12]
   161f4:	add	r6, r5, #24
   161f8:	ldr	r7, [r3, #4]
   161fc:	cmp	r7, #0
   16200:	bne	163a0 <argp_failure@@Base+0xc94>
   16204:	ldr	r2, [r4, #24]
   16208:	ldr	r3, [r4, #28]
   1620c:	sub	r3, r3, r2
   16210:	ldr	r2, [r4, #16]
   16214:	cmp	r3, r2
   16218:	bls	16224 <argp_failure@@Base+0xb18>
   1621c:	mov	r0, r4
   16220:	bl	1758c <argp_error@@Base+0xc3c>
   16224:	mov	r3, #0
   16228:	str	r3, [r4, #4]
   1622c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16230:	cmp	r3, #0
   16234:	beq	164d0 <argp_failure@@Base+0xdc4>
   16238:	ldr	r3, [r5, #12]
   1623c:	tst	r3, #8
   16240:	bne	1626c <argp_failure@@Base+0xb60>
   16244:	ldr	r6, [r5, #4]
   16248:	sub	r3, r6, #1
   1624c:	cmp	r3, #254	; 0xfe
   16250:	bhi	1626c <argp_failure@@Base+0xb60>
   16254:	bl	11494 <__ctype_b_loc@plt>
   16258:	lsl	r6, r6, #1
   1625c:	ldr	r3, [r0]
   16260:	ldrh	r3, [r3, r6]
   16264:	tst	r3, #16384	; 0x4000
   16268:	bne	16294 <argp_failure@@Base+0xb88>
   1626c:	ldr	r3, [r5]
   16270:	cmp	r3, #0
   16274:	bne	16294 <argp_failure@@Base+0xb88>
   16278:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1627c:	sub	r2, fp, #76	; 0x4c
   16280:	ldr	r0, [r5, #16]
   16284:	ldr	r1, [r3, #20]
   16288:	bl	140d4 <argp_parse@@Base+0x1930>
   1628c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16290:	str	r3, [fp, #-88]	; 0xffffffa8
   16294:	ldr	r2, [r4, #24]
   16298:	ldr	r3, [r4, #28]
   1629c:	sub	r3, r3, r2
   162a0:	ldr	r2, [r4, #16]
   162a4:	cmp	r3, r2
   162a8:	bls	162b4 <argp_failure@@Base+0xba8>
   162ac:	mov	r0, r4
   162b0:	bl	1758c <argp_error@@Base+0xc3c>
   162b4:	ldr	r3, [fp, #-124]	; 0xffffff84
   162b8:	ldr	r2, [r4, #24]
   162bc:	str	r3, [r4, #4]
   162c0:	ldr	r3, [r4, #28]
   162c4:	sub	r3, r3, r2
   162c8:	ldr	r2, [r4, #16]
   162cc:	cmp	r3, r2
   162d0:	bls	162dc <argp_failure@@Base+0xbd0>
   162d4:	mov	r0, r4
   162d8:	bl	1758c <argp_error@@Base+0xc3c>
   162dc:	ldr	r3, [fp, #-128]	; 0xffffff80
   162e0:	str	r3, [r4, #12]
   162e4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   162e8:	add	r3, r3, #28
   162ec:	str	r3, [fp, #-100]	; 0xffffff9c
   162f0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   162f4:	sub	r3, r3, #1
   162f8:	b	15eac <argp_failure@@Base+0x7a0>
   162fc:	mov	r3, #1
   16300:	b	16144 <argp_failure@@Base+0xa38>
   16304:	ldr	r2, [r6, #12]
   16308:	tst	r2, #8
   1630c:	str	r2, [fp, #-136]	; 0xffffff78
   16310:	bne	16348 <argp_failure@@Base+0xc3c>
   16314:	ldr	r3, [r6, #4]
   16318:	sub	r1, r3, #1
   1631c:	cmp	r1, #254	; 0xfe
   16320:	str	r3, [fp, #-132]	; 0xffffff7c
   16324:	bhi	16348 <argp_failure@@Base+0xc3c>
   16328:	bl	11494 <__ctype_b_loc@plt>
   1632c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16330:	ldr	r2, [fp, #-136]	; 0xffffff78
   16334:	lsl	r1, r3, #1
   16338:	ldr	r0, [r0]
   1633c:	ldrh	r1, [r0, r1]
   16340:	tst	r1, #16384	; 0x4000
   16344:	bne	16778 <argp_failure@@Base+0x106c>
   16348:	add	r6, r6, #24
   1634c:	sub	r8, r8, #1
   16350:	b	161b0 <argp_failure@@Base+0xaa4>
   16354:	mov	r1, #1
   16358:	mov	r0, r4
   1635c:	bl	179dc <argp_error@@Base+0x108c>
   16360:	cmp	r0, #0
   16364:	bne	167a8 <argp_failure@@Base+0x109c>
   16368:	b	167bc <argp_failure@@Base+0x10b0>
   1636c:	mov	r1, #1
   16370:	mov	r0, r4
   16374:	str	r2, [fp, #-132]	; 0xffffff7c
   16378:	bl	179dc <argp_error@@Base+0x108c>
   1637c:	ldr	r2, [fp, #-132]	; 0xffffff7c
   16380:	cmp	r0, #0
   16384:	bne	167d0 <argp_failure@@Base+0x10c4>
   16388:	b	167e0 <argp_failure@@Base+0x10d4>
   1638c:	ldr	r3, [r5, #8]
   16390:	cmp	r3, #0
   16394:	movne	r3, #1
   16398:	strne	r3, [fp, #-80]	; 0xffffffb0
   1639c:	b	1681c <argp_failure@@Base+0x1110>
   163a0:	ldr	r3, [r6, #-24]	; 0xffffffe8
   163a4:	cmp	r3, #0
   163a8:	beq	1640c <argp_failure@@Base+0xd00>
   163ac:	ldr	r3, [r6, #-12]
   163b0:	tst	r3, #2
   163b4:	bne	1640c <argp_failure@@Base+0xd00>
   163b8:	ldr	r3, [pc, #1124]	; 16824 <argp_failure@@Base+0x1118>
   163bc:	sub	r1, fp, #76	; 0x4c
   163c0:	ldr	r0, [r3, #16]
   163c4:	bl	142ac <argp_parse@@Base+0x1b08>
   163c8:	ldr	r8, [r6, #-24]	; 0xffffffe8
   163cc:	mov	r0, r8
   163d0:	bl	114b8 <strlen@plt>
   163d4:	subs	r9, r0, #0
   163d8:	beq	1640c <argp_failure@@Base+0xd00>
   163dc:	ldr	r3, [r4, #28]
   163e0:	ldr	r2, [r4, #32]
   163e4:	add	r3, r3, r9
   163e8:	cmp	r2, r3
   163ec:	bcc	16418 <argp_failure@@Base+0xd0c>
   163f0:	mov	r2, r9
   163f4:	mov	r1, r8
   163f8:	ldr	r0, [r4, #28]
   163fc:	bl	11368 <memcpy@plt>
   16400:	ldr	r3, [r4, #28]
   16404:	add	r9, r3, r9
   16408:	str	r9, [r4, #28]
   1640c:	sub	r7, r7, #1
   16410:	add	r6, r6, #24
   16414:	b	161fc <argp_failure@@Base+0xaf0>
   16418:	mov	r1, r9
   1641c:	mov	r0, r4
   16420:	bl	179dc <argp_error@@Base+0x108c>
   16424:	cmp	r0, #0
   16428:	bne	163f0 <argp_failure@@Base+0xce4>
   1642c:	b	1640c <argp_failure@@Base+0xd00>
   16430:	sub	r3, r3, r2
   16434:	ldr	r2, [r4, #16]
   16438:	ldr	r6, [r1, #12]
   1643c:	cmp	r3, r2
   16440:	bls	1644c <argp_failure@@Base+0xd40>
   16444:	mov	r0, r4
   16448:	bl	1758c <argp_error@@Base+0xc3c>
   1644c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16450:	str	r6, [r4, #12]
   16454:	ldr	r7, [pc, #968]	; 16824 <argp_failure@@Base+0x1118>
   16458:	ldr	r6, [r3, #4]
   1645c:	ldr	r8, [pc, #1044]	; 16878 <argp_failure@@Base+0x116c>
   16460:	add	r9, r5, #24
   16464:	cmp	r6, #0
   16468:	beq	16204 <argp_failure@@Base+0xaf8>
   1646c:	ldr	r3, [r9, #-24]	; 0xffffffe8
   16470:	cmp	r3, #0
   16474:	beq	164c4 <argp_failure@@Base+0xdb8>
   16478:	ldr	r3, [r9, #-12]
   1647c:	tst	r3, #2
   16480:	bne	164c4 <argp_failure@@Base+0xdb8>
   16484:	sub	r1, fp, #76	; 0x4c
   16488:	ldr	r0, [r7, #12]
   1648c:	bl	142ac <argp_parse@@Base+0x1b08>
   16490:	ldr	r2, [r9, #-24]	; 0xffffffe8
   16494:	mov	r1, r8
   16498:	mov	r0, r4
   1649c:	bl	17ac0 <argp_error@@Base+0x1170>
   164a0:	ldr	r2, [r5, #8]
   164a4:	cmp	r2, #0
   164a8:	beq	164c4 <argp_failure@@Base+0xdb8>
   164ac:	ldr	r3, [r5, #12]
   164b0:	mov	r0, r4
   164b4:	tst	r3, #1
   164b8:	ldrne	r1, [pc, #956]	; 1687c <argp_failure@@Base+0x1170>
   164bc:	ldreq	r1, [pc, #956]	; 16880 <argp_failure@@Base+0x1174>
   164c0:	bl	17ac0 <argp_error@@Base+0x1170>
   164c4:	sub	r6, r6, #1
   164c8:	add	r9, r9, #24
   164cc:	b	16464 <argp_failure@@Base+0xd58>
   164d0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   164d4:	ldr	r6, [r5, #16]
   164d8:	ldr	r1, [r5, #4]
   164dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   164e0:	ldr	r2, [r2, #20]
   164e4:	mov	r0, r6
   164e8:	bl	14090 <argp_parse@@Base+0x18ec>
   164ec:	subs	r5, r0, #0
   164f0:	beq	16604 <argp_failure@@Base+0xef8>
   164f4:	ldrb	r3, [r5]
   164f8:	cmp	r3, #0
   164fc:	beq	165f4 <argp_failure@@Base+0xee8>
   16500:	ldr	r2, [r4, #24]
   16504:	ldr	r3, [r4, #28]
   16508:	sub	r3, r3, r2
   1650c:	ldr	r2, [r4, #16]
   16510:	cmp	r3, r2
   16514:	bls	16520 <argp_failure@@Base+0xe14>
   16518:	mov	r0, r4
   1651c:	bl	1758c <argp_error@@Base+0xc3c>
   16520:	ldr	r2, [r4, #24]
   16524:	ldr	r3, [r4, #28]
   16528:	ldr	r7, [r4, #20]
   1652c:	sub	r3, r3, r2
   16530:	ldr	r8, [pc, #748]	; 16824 <argp_failure@@Base+0x1118>
   16534:	ldr	r2, [r4, #16]
   16538:	bic	r7, r7, r7, asr #31
   1653c:	cmp	r3, r2
   16540:	ldr	r9, [r8, #20]
   16544:	bls	16550 <argp_failure@@Base+0xe44>
   16548:	mov	r0, r4
   1654c:	bl	1758c <argp_error@@Base+0xc3c>
   16550:	ldr	r2, [r4, #24]
   16554:	ldr	r3, [r4, #28]
   16558:	str	r9, [r4, #4]
   1655c:	sub	r3, r3, r2
   16560:	ldr	r2, [r4, #16]
   16564:	ldr	r8, [r8, #20]
   16568:	cmp	r3, r2
   1656c:	bls	16578 <argp_failure@@Base+0xe6c>
   16570:	mov	r0, r4
   16574:	bl	1758c <argp_error@@Base+0xc3c>
   16578:	ldr	r3, [pc, #676]	; 16824 <argp_failure@@Base+0x1118>
   1657c:	str	r8, [r4, #12]
   16580:	ldr	r1, [r3, #20]
   16584:	add	r3, r1, #3
   16588:	cmp	r7, r3
   1658c:	bls	1666c <argp_failure@@Base+0xf60>
   16590:	ldr	r2, [r4, #28]
   16594:	ldr	r3, [r4, #32]
   16598:	cmp	r2, r3
   1659c:	bcs	16654 <argp_failure@@Base+0xf48>
   165a0:	ldr	r3, [r4, #28]
   165a4:	add	r2, r3, #1
   165a8:	str	r2, [r4, #28]
   165ac:	mov	r2, #10
   165b0:	strb	r2, [r3]
   165b4:	mov	r0, r5
   165b8:	bl	114b8 <strlen@plt>
   165bc:	subs	r7, r0, #0
   165c0:	beq	165f4 <argp_failure@@Base+0xee8>
   165c4:	ldr	r3, [r4, #28]
   165c8:	ldr	r2, [r4, #32]
   165cc:	add	r3, r3, r7
   165d0:	cmp	r2, r3
   165d4:	bcc	166d4 <argp_failure@@Base+0xfc8>
   165d8:	mov	r2, r7
   165dc:	mov	r1, r5
   165e0:	ldr	r0, [r4, #28]
   165e4:	bl	11368 <memcpy@plt>
   165e8:	ldr	r3, [r4, #28]
   165ec:	add	r7, r3, r7
   165f0:	str	r7, [r4, #28]
   165f4:	cmp	r6, r5
   165f8:	beq	16604 <argp_failure@@Base+0xef8>
   165fc:	mov	r0, r5
   16600:	bl	13240 <argp_parse@@Base+0xa9c>
   16604:	ldr	r2, [r4, #24]
   16608:	ldr	r3, [r4, #28]
   1660c:	sub	r3, r3, r2
   16610:	ldr	r2, [r4, #16]
   16614:	cmp	r3, r2
   16618:	bls	16624 <argp_failure@@Base+0xf18>
   1661c:	mov	r0, r4
   16620:	bl	1758c <argp_error@@Base+0xc3c>
   16624:	mov	r3, #0
   16628:	str	r3, [r4, #4]
   1662c:	ldr	r2, [r4, #28]
   16630:	ldr	r3, [r4, #32]
   16634:	cmp	r2, r3
   16638:	bcs	166ec <argp_failure@@Base+0xfe0>
   1663c:	ldr	r3, [r4, #28]
   16640:	add	r2, r3, #1
   16644:	str	r2, [r4, #28]
   16648:	mov	r2, #10
   1664c:	strb	r2, [r3]
   16650:	b	1628c <argp_failure@@Base+0xb80>
   16654:	mov	r1, #1
   16658:	mov	r0, r4
   1665c:	bl	179dc <argp_error@@Base+0x108c>
   16660:	cmp	r0, #0
   16664:	bne	165a0 <argp_failure@@Base+0xe94>
   16668:	b	165b4 <argp_failure@@Base+0xea8>
   1666c:	cmp	r7, r1
   16670:	bcc	166c8 <argp_failure@@Base+0xfbc>
   16674:	ldr	r3, [r4, #28]
   16678:	ldr	r2, [r4, #32]
   1667c:	add	r3, r3, #3
   16680:	cmp	r2, r3
   16684:	bcc	166b0 <argp_failure@@Base+0xfa4>
   16688:	ldr	r2, [pc, #500]	; 16884 <argp_failure@@Base+0x1178>
   1668c:	ldr	r3, [r4, #28]
   16690:	ldrh	r1, [r2]
   16694:	ldrb	r2, [r2, #2]
   16698:	strh	r1, [r3]
   1669c:	strb	r2, [r3, #2]
   166a0:	ldr	r3, [r4, #28]
   166a4:	add	r3, r3, #3
   166a8:	str	r3, [r4, #28]
   166ac:	b	165b4 <argp_failure@@Base+0xea8>
   166b0:	mov	r1, #3
   166b4:	mov	r0, r4
   166b8:	bl	179dc <argp_error@@Base+0x108c>
   166bc:	cmp	r0, #0
   166c0:	bne	16688 <argp_failure@@Base+0xf7c>
   166c4:	b	165b4 <argp_failure@@Base+0xea8>
   166c8:	mov	r0, r4
   166cc:	bl	14008 <argp_parse@@Base+0x1864>
   166d0:	b	165b4 <argp_failure@@Base+0xea8>
   166d4:	mov	r1, r7
   166d8:	mov	r0, r4
   166dc:	bl	179dc <argp_error@@Base+0x108c>
   166e0:	cmp	r0, #0
   166e4:	bne	165d8 <argp_failure@@Base+0xecc>
   166e8:	b	165f4 <argp_failure@@Base+0xee8>
   166ec:	mov	r1, #1
   166f0:	mov	r0, r4
   166f4:	bl	179dc <argp_error@@Base+0x108c>
   166f8:	cmp	r0, #0
   166fc:	bne	1663c <argp_failure@@Base+0xf30>
   16700:	b	1628c <argp_failure@@Base+0xb80>
   16704:	mov	r1, #1
   16708:	mov	r0, r4
   1670c:	bl	179dc <argp_error@@Base+0x108c>
   16710:	cmp	r0, #0
   16714:	bne	15f1c <argp_failure@@Base+0x810>
   16718:	b	15f30 <argp_failure@@Base+0x824>
   1671c:	mov	r1, r6
   16720:	mov	r0, r4
   16724:	bl	179dc <argp_error@@Base+0x108c>
   16728:	cmp	r0, #0
   1672c:	bne	15f54 <argp_failure@@Base+0x848>
   16730:	b	15f70 <argp_failure@@Base+0x864>
   16734:	mov	r1, #1
   16738:	mov	r0, r4
   1673c:	bl	179dc <argp_error@@Base+0x108c>
   16740:	cmp	r0, #0
   16744:	bne	15f80 <argp_failure@@Base+0x874>
   16748:	b	15f94 <argp_failure@@Base+0x888>
   1674c:	mov	r1, #1
   16750:	mov	r0, r4
   16754:	bl	179dc <argp_error@@Base+0x108c>
   16758:	cmp	r0, #0
   1675c:	bne	16014 <argp_failure@@Base+0x908>
   16760:	b	16028 <argp_failure@@Base+0x91c>
   16764:	cmp	r0, #110	; 0x6e
   16768:	beq	15a84 <argp_failure@@Base+0x378>
   1676c:	mov	sl, r5
   16770:	mov	r7, r5
   16774:	b	15ab0 <argp_failure@@Base+0x3a4>
   16778:	ldrb	r1, [r9]
   1677c:	cmp	r3, r1
   16780:	bne	16348 <argp_failure@@Base+0xc3c>
   16784:	tst	r2, #2
   16788:	bne	1681c <argp_failure@@Base+0x1110>
   1678c:	sub	r1, fp, #76	; 0x4c
   16790:	ldr	r0, [r7, #8]
   16794:	bl	142ac <argp_parse@@Base+0x1b08>
   16798:	ldr	r2, [r4, #28]
   1679c:	ldr	r3, [r4, #32]
   167a0:	cmp	r2, r3
   167a4:	bcs	16354 <argp_failure@@Base+0xc48>
   167a8:	ldr	r3, [r4, #28]
   167ac:	add	r2, r3, #1
   167b0:	str	r2, [r4, #28]
   167b4:	mov	r2, #45	; 0x2d
   167b8:	strb	r2, [r3]
   167bc:	ldr	r1, [r4, #28]
   167c0:	ldr	r3, [r4, #32]
   167c4:	ldrb	r2, [r9]
   167c8:	cmp	r1, r3
   167cc:	bcs	1636c <argp_failure@@Base+0xc60>
   167d0:	ldr	r3, [r4, #28]
   167d4:	add	r1, r3, #1
   167d8:	str	r1, [r4, #28]
   167dc:	strb	r2, [r3]
   167e0:	ldr	r3, [fp, #-120]	; 0xffffff88
   167e4:	cmp	r3, #0
   167e8:	beq	167f8 <argp_failure@@Base+0x10ec>
   167ec:	ldr	r3, [r7]
   167f0:	cmp	r3, #0
   167f4:	beq	1638c <argp_failure@@Base+0xc80>
   167f8:	ldr	r2, [r5, #8]
   167fc:	cmp	r2, #0
   16800:	beq	1681c <argp_failure@@Base+0x1110>
   16804:	ldr	r3, [r5, #12]
   16808:	mov	r0, r4
   1680c:	tst	r3, #1
   16810:	ldrne	r1, [pc, #112]	; 16888 <argp_failure@@Base+0x117c>
   16814:	ldreq	r1, [pc, #112]	; 1688c <argp_failure@@Base+0x1180>
   16818:	bl	17ac0 <argp_error@@Base+0x1170>
   1681c:	add	r9, r9, #1
   16820:	b	16348 <argp_failure@@Base+0xc3c>
   16824:			; <UNDEFINED> instruction: 0x000294bc
   16828:	andeq	r8, r1, sl, lsl #20
   1682c:	andeq	r8, r1, sp, ror #20
   16830:	muleq	r1, r2, r8
   16834:			; <UNDEFINED> instruction: 0x00018abe
   16838:	andeq	r8, r1, sl, lsl #21
   1683c:	andeq	r8, r1, r8, lsl sl
   16840:	andeq	r8, r1, r2, lsr #18
   16844:	andeq	r8, r1, r7, asr #20
   16848:	andeq	r8, r1, r7, asr #8
   1684c:	andeq	r8, r1, pc, lsr r4
   16850:	andeq	r5, r1, r4, ror #8
   16854:	ldrdeq	r8, [r1], -sl
   16858:	andeq	r8, r1, r6, asr #21
   1685c:	ldrdeq	r8, [r1], -r3
   16860:	andeq	r8, r1, sp, asr #21
   16864:	andeq	r8, r1, r7, ror #21
   16868:	andeq	r0, r0, #5
   1686c:	andeq	r8, r1, r6, lsr fp
   16870:	andeq	r9, r2, r0, asr r5
   16874:	andeq	r8, r1, sl, lsr #23
   16878:	andeq	r8, r1, r3, lsr #22
   1687c:	andeq	r8, r1, r8, lsr #22
   16880:	andeq	r8, r1, lr, lsr #22
   16884:	andeq	r8, r1, r2, lsr fp
   16888:	andeq	r8, r1, lr, lsl fp
   1688c:	andeq	r8, r1, r6, lsl #21

00016890 <argp_help@@Base>:
   16890:	push	{r0, r1, r2, lr}
   16894:	str	r3, [sp]
   16898:	mov	r3, r2
   1689c:	mov	r2, r1
   168a0:	mov	r1, #0
   168a4:	bl	1585c <argp_failure@@Base+0x150>
   168a8:	add	sp, sp, #12
   168ac:	pop	{pc}		; (ldr pc, [sp], #4)

000168b0 <argp_state_help@@Base>:
   168b0:	push	{r0, r1, r2, r4, r5, lr}
   168b4:	subs	r4, r0, #0
   168b8:	mov	r5, r2
   168bc:	beq	168d4 <argp_state_help@@Base+0x24>
   168c0:	ldr	r3, [r4, #16]
   168c4:	tst	r3, #2
   168c8:	beq	168ec <argp_state_help@@Base+0x3c>
   168cc:	add	sp, sp, #12
   168d0:	pop	{r4, r5, pc}
   168d4:	cmp	r1, #0
   168d8:	beq	168cc <argp_state_help@@Base+0x1c>
   168dc:	ldr	r3, [pc, #100]	; 16948 <argp_state_help@@Base+0x98>
   168e0:	mov	r0, r4
   168e4:	ldr	r3, [r3]
   168e8:	b	16904 <argp_state_help@@Base+0x54>
   168ec:	cmp	r1, #0
   168f0:	beq	168cc <argp_state_help@@Base+0x1c>
   168f4:	tst	r3, #64	; 0x40
   168f8:	ldr	r0, [r4]
   168fc:	ldr	r3, [r4, #40]	; 0x28
   16900:	orrne	r5, r5, #128	; 0x80
   16904:	str	r3, [sp]
   16908:	mov	r2, r1
   1690c:	mov	r3, r5
   16910:	mov	r1, r4
   16914:	bl	1585c <argp_failure@@Base+0x150>
   16918:	cmp	r4, #0
   1691c:	beq	1692c <argp_state_help@@Base+0x7c>
   16920:	ldr	r3, [r4, #16]
   16924:	tst	r3, #32
   16928:	bne	168cc <argp_state_help@@Base+0x1c>
   1692c:	ands	r0, r5, #256	; 0x100
   16930:	ldrne	r3, [pc, #20]	; 1694c <argp_state_help@@Base+0x9c>
   16934:	ldrne	r0, [r3]
   16938:	bne	16944 <argp_state_help@@Base+0x94>
   1693c:	tst	r5, #512	; 0x200
   16940:	beq	168cc <argp_state_help@@Base+0x1c>
   16944:	bl	114ac <exit@plt>
   16948:	strdeq	r9, [r2], -r8
   1694c:	strdeq	r9, [r2], -r4

00016950 <argp_error@@Base>:
   16950:	push	{r1, r2, r3}
   16954:	push	{r0, r1, r4, r5, lr}
   16958:	subs	r5, r0, #0
   1695c:	beq	16988 <argp_error@@Base+0x38>
   16960:	ldr	r3, [r5, #16]
   16964:	tst	r3, #2
   16968:	bne	16978 <argp_error@@Base+0x28>
   1696c:	ldr	r4, [r5, #44]	; 0x2c
   16970:	cmp	r4, #0
   16974:	bne	169b4 <argp_error@@Base+0x64>
   16978:	add	sp, sp, #8
   1697c:	pop	{r4, r5, lr}
   16980:	add	sp, sp, #12
   16984:	bx	lr
   16988:	ldr	r3, [pc, #144]	; 16a20 <argp_error@@Base+0xd0>
   1698c:	ldr	r4, [r3]
   16990:	cmp	r4, #0
   16994:	beq	16978 <argp_error@@Base+0x28>
   16998:	mov	r0, r4
   1699c:	bl	115e4 <flockfile@plt>
   169a0:	add	r3, sp, #24
   169a4:	str	r3, [sp, #4]
   169a8:	ldr	r3, [pc, #116]	; 16a24 <argp_error@@Base+0xd4>
   169ac:	ldr	r0, [r3]
   169b0:	b	169c8 <argp_error@@Base+0x78>
   169b4:	mov	r0, r4
   169b8:	bl	115e4 <flockfile@plt>
   169bc:	ldr	r0, [r5, #40]	; 0x28
   169c0:	add	r3, sp, #24
   169c4:	str	r3, [sp, #4]
   169c8:	mov	r1, r4
   169cc:	bl	112e4 <fputs_unlocked@plt>
   169d0:	mov	r1, r4
   169d4:	mov	r0, #58	; 0x3a
   169d8:	bl	11680 <putc_unlocked@plt>
   169dc:	mov	r1, r4
   169e0:	mov	r0, #32
   169e4:	bl	11680 <putc_unlocked@plt>
   169e8:	ldr	r2, [sp, #4]
   169ec:	ldr	r1, [sp, #20]
   169f0:	mov	r0, r4
   169f4:	bl	11590 <vfprintf@plt>
   169f8:	mov	r1, r4
   169fc:	mov	r0, #10
   16a00:	bl	11680 <putc_unlocked@plt>
   16a04:	mov	r0, r5
   16a08:	mov	r2, #260	; 0x104
   16a0c:	mov	r1, r4
   16a10:	bl	168b0 <argp_state_help@@Base>
   16a14:	mov	r0, r4
   16a18:	bl	11404 <funlockfile@plt>
   16a1c:	b	16978 <argp_error@@Base+0x28>
   16a20:	andeq	r9, r2, r8, lsl #10
   16a24:	strdeq	r9, [r2], -r8
   16a28:	ldr	r3, [r1, #32]
   16a2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a30:	ldr	r7, [r1, #28]
   16a34:	ldr	r6, [r1]
   16a38:	add	r8, r0, r3, lsl #2
   16a3c:	mov	lr, r6
   16a40:	mov	r4, r7
   16a44:	cmp	lr, r3
   16a48:	movle	r2, #0
   16a4c:	movgt	r2, #1
   16a50:	cmp	r4, r3
   16a54:	movge	r2, #0
   16a58:	cmp	r2, #0
   16a5c:	bne	16a74 <argp_error@@Base+0x124>
   16a60:	sub	r3, r6, r3
   16a64:	add	r3, r3, r7
   16a68:	str	r3, [r1, #28]
   16a6c:	str	r6, [r1, #32]
   16a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a74:	sub	r2, r3, r4
   16a78:	sub	r5, lr, r3
   16a7c:	cmp	r5, r2
   16a80:	lsl	ip, r4, #2
   16a84:	addle	r2, r0, ip
   16a88:	movle	r9, r8
   16a8c:	movle	ip, #0
   16a90:	ble	16ac4 <argp_error@@Base+0x174>
   16a94:	sub	r2, lr, r2
   16a98:	add	ip, r0, ip
   16a9c:	add	r5, r0, r2, lsl #2
   16aa0:	add	lr, r0, lr, lsl #2
   16aa4:	ldr	r9, [ip]
   16aa8:	ldr	sl, [r5]
   16aac:	str	sl, [ip], #4
   16ab0:	str	r9, [r5], #4
   16ab4:	cmp	lr, r5
   16ab8:	bne	16aa4 <argp_error@@Base+0x154>
   16abc:	mov	lr, r2
   16ac0:	b	16a44 <argp_error@@Base+0xf4>
   16ac4:	ldr	sl, [r2]
   16ac8:	ldr	fp, [r9]
   16acc:	add	ip, ip, #1
   16ad0:	cmp	r5, ip
   16ad4:	str	fp, [r2], #4
   16ad8:	str	sl, [r9], #4
   16adc:	bgt	16ac4 <argp_error@@Base+0x174>
   16ae0:	add	r4, r4, r5
   16ae4:	mov	r2, lr
   16ae8:	b	16abc <argp_error@@Base+0x16c>
   16aec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16af0:	sub	sp, sp, #44	; 0x2c
   16af4:	mov	sl, r1
   16af8:	ldr	r4, [sp, #88]	; 0x58
   16afc:	str	r0, [sp, #36]	; 0x24
   16b00:	str	r2, [sp, #32]
   16b04:	ldr	r8, [r4, #20]
   16b08:	str	r3, [sp, #20]
   16b0c:	mov	r9, r8
   16b10:	mov	r3, r9
   16b14:	ldrb	r6, [r3], #1
   16b18:	cmp	r6, #0
   16b1c:	cmpne	r6, #61	; 0x3d
   16b20:	movne	r6, #1
   16b24:	moveq	r6, #0
   16b28:	bne	16bf0 <argp_error@@Base+0x2a0>
   16b2c:	sub	r3, r9, r8
   16b30:	str	r3, [sp, #24]
   16b34:	ldr	r3, [sp, #20]
   16b38:	add	r7, r3, r6, lsl #4
   16b3c:	ldr	r5, [r3, r6, lsl #4]
   16b40:	cmp	r5, #0
   16b44:	bne	16bf8 <argp_error@@Base+0x2a8>
   16b48:	mov	r8, r5
   16b4c:	mov	r7, r5
   16b50:	mov	fp, r3
   16b54:	mvn	r3, #0
   16b58:	str	r3, [sp, #16]
   16b5c:	str	r5, [sp, #28]
   16b60:	str	r5, [sp, #12]
   16b64:	ldr	r0, [fp]
   16b68:	cmp	r0, #0
   16b6c:	bne	16c2c <argp_error@@Base+0x2dc>
   16b70:	cmp	r5, #0
   16b74:	cmpeq	r8, #0
   16b78:	beq	16d64 <argp_error@@Base+0x414>
   16b7c:	ldr	r3, [sp, #92]	; 0x5c
   16b80:	cmp	r3, #0
   16b84:	beq	16bb0 <argp_error@@Base+0x260>
   16b88:	cmp	r5, #0
   16b8c:	ldr	r7, [pc, #908]	; 16f20 <argp_error@@Base+0x5d0>
   16b90:	beq	16cf0 <argp_error@@Base+0x3a0>
   16b94:	ldr	r3, [r4, #20]
   16b98:	ldr	r2, [sl]
   16b9c:	str	r3, [sp]
   16ba0:	ldr	r1, [pc, #892]	; 16f24 <argp_error@@Base+0x5d4>
   16ba4:	ldr	r3, [sp, #96]	; 0x60
   16ba8:	ldr	r0, [r7]
   16bac:	bl	114dc <fprintf@plt>
   16bb0:	ldr	r3, [sp, #28]
   16bb4:	cmp	r3, #0
   16bb8:	beq	16bc4 <argp_error@@Base+0x274>
   16bbc:	mov	r0, r8
   16bc0:	bl	13240 <argp_parse@@Base+0xa9c>
   16bc4:	ldr	r5, [r4, #20]
   16bc8:	mov	r0, r5
   16bcc:	bl	114b8 <strlen@plt>
   16bd0:	ldr	r3, [r4]
   16bd4:	add	r3, r3, #1
   16bd8:	str	r3, [r4]
   16bdc:	mov	r3, #0
   16be0:	add	r0, r5, r0
   16be4:	str	r0, [r4, #20]
   16be8:	str	r3, [r4, #8]
   16bec:	b	16dec <argp_error@@Base+0x49c>
   16bf0:	mov	r9, r3
   16bf4:	b	16b10 <argp_error@@Base+0x1c0>
   16bf8:	ldr	r2, [sp, #24]
   16bfc:	mov	r1, r8
   16c00:	mov	r0, r5
   16c04:	bl	11644 <strncmp@plt>
   16c08:	cmp	r0, #0
   16c0c:	bne	16c24 <argp_error@@Base+0x2d4>
   16c10:	mov	r0, r5
   16c14:	bl	114b8 <strlen@plt>
   16c18:	ldr	r3, [sp, #24]
   16c1c:	cmp	r3, r0
   16c20:	beq	16df8 <argp_error@@Base+0x4a8>
   16c24:	add	r6, r6, #1
   16c28:	b	16b34 <argp_error@@Base+0x1e4>
   16c2c:	ldr	r2, [sp, #24]
   16c30:	ldr	r1, [r4, #20]
   16c34:	bl	11644 <strncmp@plt>
   16c38:	cmp	r0, #0
   16c3c:	bne	16cdc <argp_error@@Base+0x38c>
   16c40:	cmp	r7, #0
   16c44:	moveq	r7, fp
   16c48:	ldreq	r3, [sp, #12]
   16c4c:	streq	r3, [sp, #16]
   16c50:	beq	16cdc <argp_error@@Base+0x38c>
   16c54:	ldr	r3, [sp, #84]	; 0x54
   16c58:	cmp	r3, #0
   16c5c:	bne	16c90 <argp_error@@Base+0x340>
   16c60:	ldr	r1, [r7, #4]
   16c64:	ldr	r2, [fp, #4]
   16c68:	cmp	r1, r2
   16c6c:	bne	16c90 <argp_error@@Base+0x340>
   16c70:	ldr	r1, [r7, #8]
   16c74:	ldr	r2, [fp, #8]
   16c78:	cmp	r1, r2
   16c7c:	bne	16c90 <argp_error@@Base+0x340>
   16c80:	ldr	r1, [r7, #12]
   16c84:	ldr	r2, [fp, #12]
   16c88:	cmp	r1, r2
   16c8c:	beq	16cdc <argp_error@@Base+0x38c>
   16c90:	cmp	r5, #0
   16c94:	bne	16cdc <argp_error@@Base+0x38c>
   16c98:	ldr	r3, [sp, #92]	; 0x5c
   16c9c:	cmp	r3, #0
   16ca0:	beq	16cc4 <argp_error@@Base+0x374>
   16ca4:	cmp	r8, #0
   16ca8:	bne	16cd0 <argp_error@@Base+0x380>
   16cac:	mov	r0, r6
   16cb0:	bl	13cf4 <argp_parse@@Base+0x1550>
   16cb4:	subs	r8, r0, #0
   16cb8:	bne	16efc <argp_error@@Base+0x5ac>
   16cbc:	mov	r5, #1
   16cc0:	b	16cdc <argp_error@@Base+0x38c>
   16cc4:	cmp	r8, #0
   16cc8:	mov	r5, #1
   16ccc:	beq	16cdc <argp_error@@Base+0x38c>
   16cd0:	ldr	r3, [sp, #12]
   16cd4:	mov	r2, #1
   16cd8:	strb	r2, [r8, r3]
   16cdc:	ldr	r3, [sp, #12]
   16ce0:	add	fp, fp, #16
   16ce4:	add	r3, r3, #1
   16ce8:	str	r3, [sp, #12]
   16cec:	b	16b64 <argp_error@@Base+0x214>
   16cf0:	ldr	r0, [r7]
   16cf4:	bl	115e4 <flockfile@plt>
   16cf8:	ldr	r3, [r4, #20]
   16cfc:	ldr	r2, [sl]
   16d00:	str	r3, [sp]
   16d04:	ldr	r1, [pc, #540]	; 16f28 <argp_error@@Base+0x5d8>
   16d08:	ldr	r3, [sp, #96]	; 0x60
   16d0c:	ldr	r0, [r7]
   16d10:	bl	114dc <fprintf@plt>
   16d14:	ldr	r9, [pc, #528]	; 16f2c <argp_error@@Base+0x5dc>
   16d18:	cmp	r6, r5
   16d1c:	bne	16d38 <argp_error@@Base+0x3e8>
   16d20:	ldr	r1, [r7]
   16d24:	mov	r0, #10
   16d28:	bl	115a8 <fputc@plt>
   16d2c:	ldr	r0, [r7]
   16d30:	bl	11404 <funlockfile@plt>
   16d34:	b	16bb0 <argp_error@@Base+0x260>
   16d38:	ldrb	r3, [r8, r5]
   16d3c:	cmp	r3, #0
   16d40:	beq	16d5c <argp_error@@Base+0x40c>
   16d44:	ldr	r3, [sp, #20]
   16d48:	ldr	r2, [sp, #96]	; 0x60
   16d4c:	mov	r1, r9
   16d50:	ldr	r3, [r3, r5, lsl #4]
   16d54:	ldr	r0, [r7]
   16d58:	bl	114dc <fprintf@plt>
   16d5c:	add	r5, r5, #1
   16d60:	b	16d18 <argp_error@@Base+0x3c8>
   16d64:	cmp	r7, #0
   16d68:	bne	16dfc <argp_error@@Base+0x4ac>
   16d6c:	ldr	r3, [sp, #84]	; 0x54
   16d70:	cmp	r3, #0
   16d74:	beq	16da8 <argp_error@@Base+0x458>
   16d78:	ldr	r3, [r4]
   16d7c:	ldr	r3, [sl, r3, lsl #2]
   16d80:	ldrb	r3, [r3, #1]
   16d84:	cmp	r3, #45	; 0x2d
   16d88:	beq	16da8 <argp_error@@Base+0x458>
   16d8c:	ldr	r3, [r4, #20]
   16d90:	ldr	r0, [sp, #32]
   16d94:	ldrb	r1, [r3]
   16d98:	bl	114c4 <strchr@plt>
   16d9c:	cmp	r0, #0
   16da0:	mvnne	r0, #0
   16da4:	bne	16df0 <argp_error@@Base+0x4a0>
   16da8:	ldr	r3, [sp, #92]	; 0x5c
   16dac:	cmp	r3, #0
   16db0:	beq	16dd4 <argp_error@@Base+0x484>
   16db4:	ldr	r0, [pc, #356]	; 16f20 <argp_error@@Base+0x5d0>
   16db8:	ldr	r3, [r4, #20]
   16dbc:	ldr	r2, [sl]
   16dc0:	str	r3, [sp]
   16dc4:	ldr	r1, [pc, #356]	; 16f30 <argp_error@@Base+0x5e0>
   16dc8:	ldr	r3, [sp, #96]	; 0x60
   16dcc:	ldr	r0, [r0]
   16dd0:	bl	114dc <fprintf@plt>
   16dd4:	ldr	r3, [r4]
   16dd8:	mov	r2, #0
   16ddc:	add	r3, r3, #1
   16de0:	str	r2, [r4, #20]
   16de4:	str	r3, [r4]
   16de8:	str	r2, [r4, #8]
   16dec:	mov	r0, #63	; 0x3f
   16df0:	add	sp, sp, #44	; 0x2c
   16df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16df8:	str	r6, [sp, #16]
   16dfc:	ldr	r3, [r4]
   16e00:	mov	r1, #0
   16e04:	add	r2, r3, #1
   16e08:	str	r2, [r4]
   16e0c:	str	r1, [r4, #20]
   16e10:	ldrb	r1, [r9]
   16e14:	cmp	r1, #0
   16e18:	ldr	r1, [r7, #4]
   16e1c:	beq	16e64 <argp_error@@Base+0x514>
   16e20:	cmp	r1, #0
   16e24:	addne	r9, r9, #1
   16e28:	strne	r9, [r4, #12]
   16e2c:	bne	16e88 <argp_error@@Base+0x538>
   16e30:	ldr	r3, [sp, #92]	; 0x5c
   16e34:	cmp	r3, #0
   16e38:	beq	16e5c <argp_error@@Base+0x50c>
   16e3c:	ldr	r0, [pc, #220]	; 16f20 <argp_error@@Base+0x5d0>
   16e40:	ldr	r3, [r7]
   16e44:	ldr	r2, [sl]
   16e48:	str	r3, [sp]
   16e4c:	ldr	r1, [pc, #224]	; 16f34 <argp_error@@Base+0x5e4>
   16e50:	ldr	r3, [sp, #96]	; 0x60
   16e54:	ldr	r0, [r0]
   16e58:	bl	114dc <fprintf@plt>
   16e5c:	ldr	r3, [r7, #12]
   16e60:	b	16be8 <argp_error@@Base+0x298>
   16e64:	cmp	r1, #1
   16e68:	bne	16e88 <argp_error@@Base+0x538>
   16e6c:	ldr	r1, [sp, #36]	; 0x24
   16e70:	cmp	r2, r1
   16e74:	bge	16eb0 <argp_error@@Base+0x560>
   16e78:	add	r3, r3, #2
   16e7c:	str	r3, [r4]
   16e80:	ldr	r3, [sl, r2, lsl #2]
   16e84:	str	r3, [r4, #12]
   16e88:	ldr	r3, [sp, #80]	; 0x50
   16e8c:	cmp	r3, #0
   16e90:	ldrne	r2, [sp, #16]
   16e94:	strne	r2, [r3]
   16e98:	ldr	r3, [r7, #8]
   16e9c:	ldr	r0, [r7, #12]
   16ea0:	cmp	r3, #0
   16ea4:	strne	r0, [r3]
   16ea8:	movne	r0, #0
   16eac:	b	16df0 <argp_error@@Base+0x4a0>
   16eb0:	ldr	r3, [sp, #92]	; 0x5c
   16eb4:	cmp	r3, #0
   16eb8:	beq	16edc <argp_error@@Base+0x58c>
   16ebc:	ldr	r0, [pc, #92]	; 16f20 <argp_error@@Base+0x5d0>
   16ec0:	ldr	r3, [r7]
   16ec4:	ldr	r2, [sl]
   16ec8:	str	r3, [sp]
   16ecc:	ldr	r1, [pc, #100]	; 16f38 <argp_error@@Base+0x5e8>
   16ed0:	ldr	r3, [sp, #96]	; 0x60
   16ed4:	ldr	r0, [r0]
   16ed8:	bl	114dc <fprintf@plt>
   16edc:	ldr	r3, [r7, #12]
   16ee0:	str	r3, [r4, #8]
   16ee4:	ldr	r3, [sp, #32]
   16ee8:	ldrb	r0, [r3]
   16eec:	cmp	r0, #58	; 0x3a
   16ef0:	moveq	r0, #58	; 0x3a
   16ef4:	movne	r0, #63	; 0x3f
   16ef8:	b	16df0 <argp_error@@Base+0x4a0>
   16efc:	mov	r2, r6
   16f00:	mov	r1, #0
   16f04:	bl	1150c <memset@plt>
   16f08:	ldr	r3, [sp, #16]
   16f0c:	mov	r2, #1
   16f10:	strb	r2, [r8, r3]
   16f14:	mov	r3, #1
   16f18:	str	r3, [sp, #28]
   16f1c:	b	16cd0 <argp_error@@Base+0x380>
   16f20:	andeq	r9, r2, r8, lsl #10
   16f24:			; <UNDEFINED> instruction: 0x00018bbe
   16f28:	ldrdeq	r8, [r1], -lr
   16f2c:	andeq	r8, r1, sp, lsl #24
   16f30:	andeq	r8, r1, r5, lsl ip
   16f34:	andeq	r8, r1, r5, lsr ip
   16f38:	andeq	r8, r1, r2, ror #24
   16f3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f40:	sub	sp, sp, #36	; 0x24
   16f44:	subs	r8, r0, #0
   16f48:	ldr	r4, [sp, #80]	; 0x50
   16f4c:	ldr	fp, [sp, #72]	; 0x48
   16f50:	ldr	r5, [sp, #76]	; 0x4c
   16f54:	ldr	r9, [r4, #4]
   16f58:	bgt	16f68 <argp_error@@Base+0x618>
   16f5c:	mvn	r0, #0
   16f60:	add	sp, sp, #36	; 0x24
   16f64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f68:	mov	sl, r3
   16f6c:	mov	r3, #0
   16f70:	str	r3, [r4, #12]
   16f74:	ldr	r3, [r4]
   16f78:	mov	r7, r1
   16f7c:	cmp	r3, #0
   16f80:	mov	r6, r2
   16f84:	beq	16fa8 <argp_error@@Base+0x658>
   16f88:	ldr	r3, [r4, #16]
   16f8c:	cmp	r3, #0
   16f90:	beq	16fb0 <argp_error@@Base+0x660>
   16f94:	ldrb	r3, [r2]
   16f98:	sub	r3, r3, #43	; 0x2b
   16f9c:	tst	r3, #253	; 0xfd
   16fa0:	addeq	r6, r2, #1
   16fa4:	b	16fec <argp_error@@Base+0x69c>
   16fa8:	mov	r3, #1
   16fac:	str	r3, [r4]
   16fb0:	ldr	r3, [r4]
   16fb4:	str	r3, [r4, #32]
   16fb8:	str	r3, [r4, #28]
   16fbc:	mov	r3, #0
   16fc0:	str	r3, [r4, #20]
   16fc4:	ldrb	r2, [r6]
   16fc8:	cmp	r2, #45	; 0x2d
   16fcc:	moveq	r3, #2
   16fd0:	beq	16fdc <argp_error@@Base+0x68c>
   16fd4:	cmp	r2, #43	; 0x2b
   16fd8:	bne	170ec <argp_error@@Base+0x79c>
   16fdc:	add	r6, r6, #1
   16fe0:	str	r3, [r4, #24]
   16fe4:	mov	r3, #1
   16fe8:	str	r3, [r4, #16]
   16fec:	ldrb	r3, [r6]
   16ff0:	cmp	r3, #58	; 0x3a
   16ff4:	ldr	r3, [r4, #20]
   16ff8:	moveq	r9, #0
   16ffc:	cmp	r3, #0
   17000:	beq	17010 <argp_error@@Base+0x6c0>
   17004:	ldrb	r3, [r3]
   17008:	cmp	r3, #0
   1700c:	bne	171a4 <argp_error@@Base+0x854>
   17010:	ldr	r3, [r4]
   17014:	ldr	r2, [r4, #32]
   17018:	cmp	r2, r3
   1701c:	ldr	r2, [r4, #28]
   17020:	strgt	r3, [r4, #32]
   17024:	cmp	r3, r2
   17028:	ldr	r2, [r4, #24]
   1702c:	strlt	r3, [r4, #28]
   17030:	cmp	r2, #1
   17034:	bne	1706c <argp_error@@Base+0x71c>
   17038:	ldr	r1, [r4, #32]
   1703c:	ldr	r2, [r4, #28]
   17040:	cmp	r2, r1
   17044:	beq	1711c <argp_error@@Base+0x7cc>
   17048:	cmp	r3, r1
   1704c:	beq	1705c <argp_error@@Base+0x70c>
   17050:	mov	r1, r4
   17054:	mov	r0, r7
   17058:	bl	16a28 <argp_error@@Base+0xd8>
   1705c:	ldr	r3, [r4]
   17060:	cmp	r8, r3
   17064:	bgt	17128 <argp_error@@Base+0x7d8>
   17068:	str	r3, [r4, #32]
   1706c:	ldr	r3, [r4]
   17070:	cmp	r8, r3
   17074:	beq	170cc <argp_error@@Base+0x77c>
   17078:	ldr	r1, [pc, #920]	; 17418 <argp_error@@Base+0xac8>
   1707c:	ldr	r0, [r7, r3, lsl #2]
   17080:	str	r3, [sp, #24]
   17084:	bl	112fc <strcmp@plt>
   17088:	cmp	r0, #0
   1708c:	bne	170cc <argp_error@@Base+0x77c>
   17090:	ldr	r1, [r4, #28]
   17094:	ldr	r3, [sp, #24]
   17098:	ldr	r2, [r4, #32]
   1709c:	add	r3, r3, #1
   170a0:	cmp	r1, r2
   170a4:	str	r3, [r4]
   170a8:	streq	r3, [r4, #28]
   170ac:	beq	170c4 <argp_error@@Base+0x774>
   170b0:	cmp	r3, r2
   170b4:	beq	170c4 <argp_error@@Base+0x774>
   170b8:	mov	r1, r4
   170bc:	mov	r0, r7
   170c0:	bl	16a28 <argp_error@@Base+0xd8>
   170c4:	str	r8, [r4, #32]
   170c8:	str	r8, [r4]
   170cc:	ldr	r2, [r4]
   170d0:	cmp	r8, r2
   170d4:	bne	17150 <argp_error@@Base+0x800>
   170d8:	ldr	r3, [r4, #28]
   170dc:	ldr	r2, [r4, #32]
   170e0:	cmp	r3, r2
   170e4:	strne	r3, [r4]
   170e8:	b	16f5c <argp_error@@Base+0x60c>
   170ec:	ldr	r3, [sp, #84]	; 0x54
   170f0:	cmp	r3, #0
   170f4:	beq	17104 <argp_error@@Base+0x7b4>
   170f8:	mov	r3, #0
   170fc:	str	r3, [r4, #24]
   17100:	b	16fe4 <argp_error@@Base+0x694>
   17104:	ldr	r0, [pc, #784]	; 1741c <argp_error@@Base+0xacc>
   17108:	bl	11434 <getenv@plt>
   1710c:	cmp	r0, #0
   17110:	bne	170f8 <argp_error@@Base+0x7a8>
   17114:	mov	r3, #1
   17118:	b	170fc <argp_error@@Base+0x7ac>
   1711c:	cmp	r3, r2
   17120:	strne	r3, [r4, #28]
   17124:	b	1705c <argp_error@@Base+0x70c>
   17128:	ldr	r2, [r7, r3, lsl #2]
   1712c:	ldrb	r1, [r2]
   17130:	cmp	r1, #45	; 0x2d
   17134:	bne	17144 <argp_error@@Base+0x7f4>
   17138:	ldrb	r2, [r2, #1]
   1713c:	cmp	r2, #0
   17140:	bne	17068 <argp_error@@Base+0x718>
   17144:	add	r3, r3, #1
   17148:	str	r3, [r4]
   1714c:	b	1705c <argp_error@@Base+0x70c>
   17150:	ldr	r3, [r7, r2, lsl #2]
   17154:	ldrb	r1, [r3]
   17158:	cmp	r1, #45	; 0x2d
   1715c:	bne	1716c <argp_error@@Base+0x81c>
   17160:	ldrb	r1, [r3, #1]
   17164:	cmp	r1, #0
   17168:	bne	1718c <argp_error@@Base+0x83c>
   1716c:	ldr	r1, [r4, #24]
   17170:	cmp	r1, #0
   17174:	beq	16f5c <argp_error@@Base+0x60c>
   17178:	add	r2, r2, #1
   1717c:	str	r2, [r4]
   17180:	str	r3, [r4, #12]
   17184:	mov	r0, #1
   17188:	b	16f60 <argp_error@@Base+0x610>
   1718c:	cmp	sl, #0
   17190:	bne	17220 <argp_error@@Base+0x8d0>
   17194:	ldr	r3, [r4]
   17198:	ldr	r3, [r7, r3, lsl #2]
   1719c:	add	r3, r3, #1
   171a0:	str	r3, [r4, #20]
   171a4:	ldr	r3, [r4, #20]
   171a8:	mov	r0, r6
   171ac:	add	r2, r3, #1
   171b0:	str	r2, [r4, #20]
   171b4:	ldrb	r5, [r3]
   171b8:	str	r2, [sp, #28]
   171bc:	str	r3, [sp, #24]
   171c0:	mov	r1, r5
   171c4:	bl	114c4 <strchr@plt>
   171c8:	ldr	r3, [sp, #24]
   171cc:	ldr	r2, [sp, #28]
   171d0:	ldrb	r1, [r3, #1]
   171d4:	cmp	r1, #0
   171d8:	ldreq	r1, [r4]
   171dc:	addeq	r1, r1, #1
   171e0:	streq	r1, [r4]
   171e4:	sub	r1, r5, #58	; 0x3a
   171e8:	cmp	r0, #0
   171ec:	cmpne	r1, #1
   171f0:	bhi	172cc <argp_error@@Base+0x97c>
   171f4:	cmp	r9, #0
   171f8:	beq	17214 <argp_error@@Base+0x8c4>
   171fc:	ldr	r0, [pc, #540]	; 17420 <argp_error@@Base+0xad0>
   17200:	mov	r3, r5
   17204:	ldr	r2, [r7]
   17208:	ldr	r1, [pc, #532]	; 17424 <argp_error@@Base+0xad4>
   1720c:	ldr	r0, [r0]
   17210:	bl	114dc <fprintf@plt>
   17214:	str	r5, [r4, #8]
   17218:	mov	r0, #63	; 0x3f
   1721c:	b	16f60 <argp_error@@Base+0x610>
   17220:	cmp	r1, #45	; 0x2d
   17224:	bne	17260 <argp_error@@Base+0x910>
   17228:	add	r3, r3, #2
   1722c:	str	r3, [r4, #20]
   17230:	ldr	r3, [pc, #480]	; 17418 <argp_error@@Base+0xac8>
   17234:	str	r9, [sp, #12]
   17238:	str	r3, [sp, #16]
   1723c:	str	r4, [sp, #8]
   17240:	str	r5, [sp, #4]
   17244:	str	fp, [sp]
   17248:	mov	r3, sl
   1724c:	mov	r2, r6
   17250:	mov	r1, r7
   17254:	mov	r0, r8
   17258:	bl	16aec <argp_error@@Base+0x19c>
   1725c:	b	16f60 <argp_error@@Base+0x610>
   17260:	cmp	r5, #0
   17264:	beq	17194 <argp_error@@Base+0x844>
   17268:	ldrb	r2, [r3, #2]
   1726c:	cmp	r2, #0
   17270:	bne	1728c <argp_error@@Base+0x93c>
   17274:	mov	r0, r6
   17278:	str	r3, [sp, #24]
   1727c:	bl	114c4 <strchr@plt>
   17280:	ldr	r3, [sp, #24]
   17284:	cmp	r0, #0
   17288:	bne	17194 <argp_error@@Base+0x844>
   1728c:	add	r3, r3, #1
   17290:	str	r3, [r4, #20]
   17294:	ldr	r3, [pc, #396]	; 17428 <argp_error@@Base+0xad8>
   17298:	str	r9, [sp, #12]
   1729c:	str	r3, [sp, #16]
   172a0:	str	r4, [sp, #8]
   172a4:	str	r5, [sp, #4]
   172a8:	str	fp, [sp]
   172ac:	mov	r3, sl
   172b0:	mov	r2, r6
   172b4:	mov	r1, r7
   172b8:	mov	r0, r8
   172bc:	bl	16aec <argp_error@@Base+0x19c>
   172c0:	cmn	r0, #1
   172c4:	bne	16f60 <argp_error@@Base+0x610>
   172c8:	b	17194 <argp_error@@Base+0x844>
   172cc:	ldrb	r1, [r0]
   172d0:	cmp	r1, #87	; 0x57
   172d4:	ldrb	r1, [r0, #1]
   172d8:	bne	17374 <argp_error@@Base+0xa24>
   172dc:	cmp	sl, #0
   172e0:	sub	ip, r1, #59	; 0x3b
   172e4:	clz	ip, ip
   172e8:	lsr	ip, ip, #5
   172ec:	moveq	ip, #0
   172f0:	cmp	ip, #0
   172f4:	beq	17374 <argp_error@@Base+0xa24>
   172f8:	ldrb	r3, [r3, #1]
   172fc:	cmp	r3, #0
   17300:	strne	r2, [r4, #12]
   17304:	bne	17354 <argp_error@@Base+0xa04>
   17308:	ldr	r3, [r4]
   1730c:	cmp	r8, r3
   17310:	ldrne	r3, [r7, r3, lsl #2]
   17314:	strne	r3, [r4, #12]
   17318:	bne	17354 <argp_error@@Base+0xa04>
   1731c:	cmp	r9, #0
   17320:	beq	1733c <argp_error@@Base+0x9ec>
   17324:	ldr	r0, [pc, #244]	; 17420 <argp_error@@Base+0xad0>
   17328:	mov	r3, r5
   1732c:	ldr	r2, [r7]
   17330:	ldr	r1, [pc, #244]	; 1742c <argp_error@@Base+0xadc>
   17334:	ldr	r0, [r0]
   17338:	bl	114dc <fprintf@plt>
   1733c:	str	r5, [r4, #8]
   17340:	ldrb	r0, [r6]
   17344:	cmp	r0, #58	; 0x3a
   17348:	moveq	r0, #58	; 0x3a
   1734c:	movne	r0, #63	; 0x3f
   17350:	b	16f60 <argp_error@@Base+0x610>
   17354:	ldr	r3, [r4, #12]
   17358:	ldr	r2, [pc, #208]	; 17430 <argp_error@@Base+0xae0>
   1735c:	str	r3, [r4, #20]
   17360:	mov	r3, #0
   17364:	str	r3, [r4, #12]
   17368:	str	r2, [sp, #16]
   1736c:	stmib	sp, {r3, r4, r9}
   17370:	b	17244 <argp_error@@Base+0x8f4>
   17374:	cmp	r1, #58	; 0x3a
   17378:	bne	173c4 <argp_error@@Base+0xa74>
   1737c:	ldrb	r1, [r0, #2]
   17380:	ldrb	r3, [r3, #1]
   17384:	cmp	r1, #58	; 0x3a
   17388:	bne	173a4 <argp_error@@Base+0xa54>
   1738c:	cmp	r3, #0
   17390:	strne	r2, [r4, #12]
   17394:	ldrne	r3, [r4]
   17398:	bne	173b4 <argp_error@@Base+0xa64>
   1739c:	str	r3, [r4, #12]
   173a0:	b	173bc <argp_error@@Base+0xa6c>
   173a4:	cmp	r3, #0
   173a8:	ldr	r3, [r4]
   173ac:	beq	173cc <argp_error@@Base+0xa7c>
   173b0:	str	r2, [r4, #12]
   173b4:	add	r3, r3, #1
   173b8:	str	r3, [r4]
   173bc:	mov	r3, #0
   173c0:	str	r3, [r4, #20]
   173c4:	mov	r0, r5
   173c8:	b	16f60 <argp_error@@Base+0x610>
   173cc:	cmp	r8, r3
   173d0:	addne	r2, r3, #1
   173d4:	strne	r2, [r4]
   173d8:	ldrne	r3, [r7, r3, lsl #2]
   173dc:	bne	1739c <argp_error@@Base+0xa4c>
   173e0:	cmp	r9, #0
   173e4:	beq	17400 <argp_error@@Base+0xab0>
   173e8:	ldr	r0, [pc, #48]	; 17420 <argp_error@@Base+0xad0>
   173ec:	mov	r3, r5
   173f0:	ldr	r2, [r7]
   173f4:	ldr	r1, [pc, #48]	; 1742c <argp_error@@Base+0xadc>
   173f8:	ldr	r0, [r0]
   173fc:	bl	114dc <fprintf@plt>
   17400:	str	r5, [r4, #8]
   17404:	ldrb	r5, [r6]
   17408:	cmp	r5, #58	; 0x3a
   1740c:	moveq	r5, #58	; 0x3a
   17410:	movne	r5, #63	; 0x3f
   17414:	b	173bc <argp_error@@Base+0xa6c>
   17418:	andeq	r8, r1, r0, lsl #8
   1741c:	andeq	r8, r1, sl, lsl #25
   17420:	andeq	r9, r2, r8, lsl #10
   17424:	muleq	r1, sl, ip
   17428:	andeq	r8, r1, r1, lsl #8
   1742c:			; <UNDEFINED> instruction: 0x00018cb6
   17430:	ldrdeq	r8, [r1], -pc	; <UNPREDICTABLE>
   17434:	push	{r4, r5, lr}
   17438:	sub	sp, sp, #20
   1743c:	ldr	r5, [pc, #84]	; 17498 <argp_error@@Base+0xb48>
   17440:	ldr	r4, [pc, #84]	; 1749c <argp_error@@Base+0xb4c>
   17444:	ldr	ip, [r5]
   17448:	str	r4, [sp, #8]
   1744c:	str	ip, [r4]
   17450:	ldr	ip, [r5, #4]
   17454:	str	ip, [r4, #4]
   17458:	ldr	ip, [sp, #40]	; 0x28
   1745c:	str	ip, [sp, #12]
   17460:	ldr	ip, [sp, #36]	; 0x24
   17464:	str	ip, [sp, #4]
   17468:	ldr	ip, [sp, #32]
   1746c:	str	ip, [sp]
   17470:	bl	16f3c <argp_error@@Base+0x5ec>
   17474:	ldr	r3, [r4]
   17478:	ldr	r2, [r4, #12]
   1747c:	str	r3, [r5]
   17480:	ldr	r3, [pc, #24]	; 174a0 <argp_error@@Base+0xb50>
   17484:	str	r2, [r3]
   17488:	ldr	r3, [r4, #8]
   1748c:	str	r3, [r5, #8]
   17490:	add	sp, sp, #20
   17494:	pop	{r4, r5, pc}
   17498:	andeq	r9, r2, r8, ror #9
   1749c:	andeq	r9, r2, ip, lsr #10
   174a0:	andeq	r9, r2, r8, asr r5
   174a4:	push	{r0, r1, r2, r3, r4, lr}
   174a8:	mov	r3, #1
   174ac:	str	r3, [sp, #8]
   174b0:	mov	r3, #0
   174b4:	str	r3, [sp, #4]
   174b8:	str	r3, [sp]
   174bc:	bl	17434 <argp_error@@Base+0xae4>
   174c0:	add	sp, sp, #20
   174c4:	pop	{pc}		; (ldr pc, [sp], #4)
   174c8:	push	{r4, r5, r6, lr}
   174cc:	subs	r4, r2, #0
   174d0:	mov	r6, r0
   174d4:	mov	r5, r1
   174d8:	beq	174f0 <argp_error@@Base+0xba0>
   174dc:	mov	r1, r4
   174e0:	mvn	r0, #0
   174e4:	bl	17b34 <argp_error@@Base+0x11e4>
   174e8:	cmp	r0, r5
   174ec:	bcc	17500 <argp_error@@Base+0xbb0>
   174f0:	mul	r1, r5, r4
   174f4:	mov	r0, r6
   174f8:	pop	{r4, r5, r6, lr}
   174fc:	b	13d34 <argp_parse@@Base+0x1590>
   17500:	bl	114f4 <__errno_location@plt>
   17504:	mov	r3, #12
   17508:	str	r3, [r0]
   1750c:	mov	r0, #0
   17510:	pop	{r4, r5, r6, pc}
   17514:	push	{r4, r5, r6, r7, r8, lr}
   17518:	mov	r8, r0
   1751c:	mov	r0, #36	; 0x24
   17520:	mov	r7, r1
   17524:	mov	r6, r2
   17528:	mov	r5, r3
   1752c:	bl	13cf4 <argp_parse@@Base+0x1550>
   17530:	subs	r4, r0, #0
   17534:	beq	17584 <argp_error@@Base+0xc34>
   17538:	mov	r3, #0
   1753c:	str	r5, [r4, #12]
   17540:	str	r8, [r4]
   17544:	str	r7, [r4, #4]
   17548:	str	r6, [r4, #8]
   1754c:	str	r3, [r4, #20]
   17550:	str	r3, [r4, #16]
   17554:	mov	r0, #200	; 0xc8
   17558:	bl	13cf4 <argp_parse@@Base+0x1550>
   1755c:	cmp	r0, #0
   17560:	mov	r5, r0
   17564:	addne	r5, r0, #200	; 0xc8
   17568:	str	r0, [r4, #24]
   1756c:	strne	r0, [r4, #28]
   17570:	strne	r5, [r4, #32]
   17574:	bne	17584 <argp_error@@Base+0xc34>
   17578:	mov	r0, r4
   1757c:	bl	13240 <argp_parse@@Base+0xa9c>
   17580:	mov	r4, r5
   17584:	mov	r0, r4
   17588:	pop	{r4, r5, r6, r7, r8, pc}
   1758c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17590:	mov	r4, r0
   17594:	ldr	r6, [r0, #24]
   17598:	ldr	r3, [r0, #16]
   1759c:	add	r6, r6, r3
   175a0:	ldr	r2, [r4, #28]
   175a4:	cmp	r6, r2
   175a8:	bcs	17658 <argp_error@@Base+0xd08>
   175ac:	ldr	r7, [r4, #20]
   175b0:	cmp	r7, #0
   175b4:	bne	1760c <argp_error@@Base+0xcbc>
   175b8:	ldr	r5, [r4, #4]
   175bc:	cmp	r5, #0
   175c0:	beq	1760c <argp_error@@Base+0xcbc>
   175c4:	ldr	r1, [r4, #32]
   175c8:	add	r3, r2, r5
   175cc:	cmp	r1, r3
   175d0:	bls	17670 <argp_error@@Base+0xd20>
   175d4:	add	r7, r6, r5
   175d8:	sub	r2, r2, r6
   175dc:	mov	r1, r6
   175e0:	mov	r0, r7
   175e4:	bl	11338 <memmove@plt>
   175e8:	ldr	r3, [r4, #28]
   175ec:	mov	r0, r6
   175f0:	add	r3, r3, r5
   175f4:	str	r3, [r4, #28]
   175f8:	mov	r2, r5
   175fc:	mov	r1, #32
   17600:	bl	1150c <memset@plt>
   17604:	mov	r6, r7
   17608:	str	r5, [r4, #20]
   1760c:	ldr	r9, [r4, #28]
   17610:	mov	r1, #10
   17614:	sub	r8, r9, r6
   17618:	mov	r2, r8
   1761c:	mov	r0, r6
   17620:	bl	11530 <memchr@plt>
   17624:	ldr	r2, [r4, #20]
   17628:	ldr	r5, [r4, #8]
   1762c:	cmp	r2, #0
   17630:	movlt	r3, #0
   17634:	strlt	r3, [r4, #20]
   17638:	cmp	r0, #0
   1763c:	mov	fp, r0
   17640:	ldr	r0, [r4, #20]
   17644:	bne	1768c <argp_error@@Base+0xd3c>
   17648:	add	r3, r8, r0
   1764c:	cmp	r3, r5
   17650:	bcs	176ac <argp_error@@Base+0xd5c>
   17654:	str	r3, [r4, #20]
   17658:	ldr	r3, [r4, #28]
   1765c:	ldr	r2, [r4, #24]
   17660:	sub	r3, r3, r2
   17664:	str	r3, [r4, #16]
   17668:	add	sp, sp, #12
   1766c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17670:	ldr	r1, [r4]
   17674:	mov	r0, #32
   17678:	add	r7, r7, #1
   1767c:	bl	11680 <putc_unlocked@plt>
   17680:	cmp	r5, r7
   17684:	bne	17670 <argp_error@@Base+0xd20>
   17688:	b	17608 <argp_error@@Base+0xcb8>
   1768c:	sub	r2, fp, r6
   17690:	add	r2, r2, r0
   17694:	cmp	r2, r5
   17698:	bge	176b0 <argp_error@@Base+0xd60>
   1769c:	mov	r3, #0
   176a0:	str	r3, [r4, #20]
   176a4:	add	r3, fp, #1
   176a8:	b	17710 <argp_error@@Base+0xdc0>
   176ac:	mov	fp, r9
   176b0:	ldr	sl, [r4, #12]
   176b4:	cmp	sl, #0
   176b8:	subge	r5, r5, r0
   176bc:	addge	r5, r6, r5
   176c0:	movge	r7, r5
   176c4:	bge	17730 <argp_error@@Base+0xde0>
   176c8:	cmp	fp, r9
   176cc:	sub	sl, r5, #1
   176d0:	bcs	17718 <argp_error@@Base+0xdc8>
   176d4:	sub	r0, sl, r0
   176d8:	sub	r2, r9, fp
   176dc:	mov	r1, fp
   176e0:	add	r0, r6, r0
   176e4:	bl	11338 <memmove@plt>
   176e8:	ldr	r8, [r4, #20]
   176ec:	sub	sl, sl, r8
   176f0:	add	sl, r6, sl
   176f4:	sub	r3, sl, fp
   176f8:	ldr	sl, [r4, #28]
   176fc:	sub	r3, sl, r3
   17700:	str	r3, [r4, #28]
   17704:	mov	r3, #0
   17708:	str	r3, [r4, #20]
   1770c:	add	r3, r6, r5
   17710:	mov	r6, r3
   17714:	b	175a0 <argp_error@@Base+0xc50>
   17718:	add	r0, r8, r0
   1771c:	str	r0, [r4, #20]
   17720:	sub	r0, sl, r0
   17724:	add	r9, r9, r0
   17728:	str	r9, [r4, #28]
   1772c:	b	17658 <argp_error@@Base+0xd08>
   17730:	cmp	r6, r7
   17734:	mov	r2, r7
   17738:	bhi	17764 <argp_error@@Base+0xe14>
   1773c:	str	r7, [sp, #4]
   17740:	bl	11494 <__ctype_b_loc@plt>
   17744:	ldr	r2, [sp, #4]
   17748:	sub	r7, r7, #1
   1774c:	ldrb	r1, [r2]
   17750:	lsl	r1, r1, #1
   17754:	ldr	r0, [r0]
   17758:	ldrh	r1, [r0, r1]
   1775c:	tst	r1, #1
   17760:	beq	17730 <argp_error@@Base+0xde0>
   17764:	add	r7, r2, #1
   17768:	cmp	r6, r7
   1776c:	bcs	177e4 <argp_error@@Base+0xe94>
   17770:	cmp	r6, r2
   17774:	bhi	177b0 <argp_error@@Base+0xe60>
   17778:	sub	r5, r2, #1
   1777c:	cmp	r6, r5
   17780:	mov	r2, r5
   17784:	bhi	177b0 <argp_error@@Base+0xe60>
   17788:	str	r5, [sp, #4]
   1778c:	bl	11494 <__ctype_b_loc@plt>
   17790:	ldr	r2, [sp, #4]
   17794:	sub	r5, r5, #1
   17798:	ldrb	r3, [r2]
   1779c:	lsl	r3, r3, #1
   177a0:	ldr	r1, [r0]
   177a4:	ldrh	r3, [r1, r3]
   177a8:	tst	r3, #1
   177ac:	bne	1777c <argp_error@@Base+0xe2c>
   177b0:	add	r5, r2, #1
   177b4:	add	r3, r8, #1
   177b8:	add	r3, r6, r3
   177bc:	cmp	r7, r3
   177c0:	bne	1784c <argp_error@@Base+0xefc>
   177c4:	ldr	r3, [r4, #32]
   177c8:	sub	r3, r3, r5
   177cc:	cmp	sl, r3
   177d0:	bge	1785c <argp_error@@Base+0xf0c>
   177d4:	mov	r3, #10
   177d8:	add	r9, r5, #1
   177dc:	strb	r3, [r5]
   177e0:	b	178dc <argp_error@@Base+0xf8c>
   177e4:	cmp	fp, r5
   177e8:	bls	17840 <argp_error@@Base+0xef0>
   177ec:	add	r7, r5, #1
   177f0:	cmp	fp, r7
   177f4:	mov	r5, r7
   177f8:	beq	17840 <argp_error@@Base+0xef0>
   177fc:	bl	11494 <__ctype_b_loc@plt>
   17800:	ldrb	r2, [r5]
   17804:	add	r7, r7, #1
   17808:	lsl	r2, r2, #1
   1780c:	ldr	r1, [r0]
   17810:	ldrh	r2, [r1, r2]
   17814:	tst	r2, #1
   17818:	beq	177f0 <argp_error@@Base+0xea0>
   1781c:	bl	11494 <__ctype_b_loc@plt>
   17820:	mov	r7, r5
   17824:	ldr	r2, [r0]
   17828:	ldrb	r3, [r7, #1]!
   1782c:	lsl	r3, r3, #1
   17830:	ldrh	r3, [r2, r3]
   17834:	tst	r3, #1
   17838:	bne	17828 <argp_error@@Base+0xed8>
   1783c:	b	177b4 <argp_error@@Base+0xe64>
   17840:	cmp	fp, r5
   17844:	bne	1781c <argp_error@@Base+0xecc>
   17848:	b	1769c <argp_error@@Base+0xd4c>
   1784c:	add	r3, r5, #1
   17850:	sub	r3, r7, r3
   17854:	cmp	sl, r3
   17858:	ble	177d4 <argp_error@@Base+0xe84>
   1785c:	cmp	r7, r9
   17860:	bcs	177d4 <argp_error@@Base+0xe84>
   17864:	ldr	r3, [r4, #32]
   17868:	add	r0, sl, #1
   1786c:	sub	r3, r3, r9
   17870:	cmp	r3, r0
   17874:	ble	178a4 <argp_error@@Base+0xf54>
   17878:	sub	r9, r9, r7
   1787c:	mov	r2, r9
   17880:	mov	r1, r7
   17884:	add	r0, r5, r0
   17888:	bl	11338 <memmove@plt>
   1788c:	ldr	r7, [r4, #12]
   17890:	add	r7, r7, #1
   17894:	add	r7, r5, r7
   17898:	add	r9, r7, r9
   1789c:	sub	r8, r9, r6
   178a0:	b	177d4 <argp_error@@Base+0xe84>
   178a4:	ldr	r0, [r4, #24]
   178a8:	cmp	r5, r0
   178ac:	bls	178c0 <argp_error@@Base+0xf70>
   178b0:	ldr	r3, [r4]
   178b4:	sub	r2, r5, r0
   178b8:	mov	r1, #1
   178bc:	bl	11380 <fwrite_unlocked@plt>
   178c0:	ldr	r1, [r4]
   178c4:	mov	r0, #10
   178c8:	bl	11680 <putc_unlocked@plt>
   178cc:	ldr	r9, [r4, #24]
   178d0:	sub	r6, r6, r9
   178d4:	add	r8, r8, r6
   178d8:	mov	r6, r9
   178dc:	ldr	r2, [r4, #12]
   178e0:	sub	r3, r7, r9
   178e4:	cmp	r3, r2
   178e8:	bge	17924 <argp_error@@Base+0xfd4>
   178ec:	add	r3, r8, #1
   178f0:	add	r3, r6, r3
   178f4:	cmp	r7, r3
   178f8:	bne	1790c <argp_error@@Base+0xfbc>
   178fc:	ldr	r3, [r4, #32]
   17900:	sub	r3, r3, r7
   17904:	cmp	r2, r3
   17908:	ble	17924 <argp_error@@Base+0xfd4>
   1790c:	mov	r5, #0
   17910:	ldr	r3, [r4, #12]
   17914:	cmp	r5, r3
   17918:	blt	17988 <argp_error@@Base+0x1038>
   1791c:	mov	r3, r9
   17920:	b	17938 <argp_error@@Base+0xfe8>
   17924:	mov	r3, r9
   17928:	ldr	r1, [r4, #12]
   1792c:	sub	r2, r3, r9
   17930:	cmp	r1, r2
   17934:	bgt	1797c <argp_error@@Base+0x102c>
   17938:	cmp	r3, r7
   1793c:	bcs	17958 <argp_error@@Base+0x1008>
   17940:	add	r2, r6, r8
   17944:	mov	r0, r3
   17948:	sub	r2, r2, r7
   1794c:	mov	r1, r7
   17950:	bl	11338 <memmove@plt>
   17954:	mov	r3, r0
   17958:	ldr	r2, [r4, #12]
   1795c:	sub	r6, r7, r6
   17960:	sub	r6, r8, r6
   17964:	cmp	r2, #0
   17968:	add	r6, r3, r6
   1796c:	mvneq	r2, #0
   17970:	str	r6, [r4, #28]
   17974:	str	r2, [r4, #20]
   17978:	b	17710 <argp_error@@Base+0xdc0>
   1797c:	mov	r2, #32
   17980:	strb	r2, [r3], #1
   17984:	b	17928 <argp_error@@Base+0xfd8>
   17988:	ldr	r1, [r4]
   1798c:	mov	r0, #32
   17990:	bl	11680 <putc_unlocked@plt>
   17994:	add	r5, r5, #1
   17998:	b	17910 <argp_error@@Base+0xfc0>
   1799c:	push	{r4, lr}
   179a0:	mov	r4, r0
   179a4:	bl	1758c <argp_error@@Base+0xc3c>
   179a8:	ldr	r2, [r4, #28]
   179ac:	ldr	r0, [r4, #24]
   179b0:	cmp	r2, r0
   179b4:	bls	179c8 <argp_error@@Base+0x1078>
   179b8:	ldr	r3, [r4]
   179bc:	sub	r2, r2, r0
   179c0:	mov	r1, #1
   179c4:	bl	11380 <fwrite_unlocked@plt>
   179c8:	ldr	r0, [r4, #24]
   179cc:	bl	13240 <argp_parse@@Base+0xa9c>
   179d0:	mov	r0, r4
   179d4:	pop	{r4, lr}
   179d8:	b	13240 <argp_parse@@Base+0xa9c>
   179dc:	ldr	r3, [r0, #32]
   179e0:	ldr	r2, [r0, #28]
   179e4:	sub	r3, r3, r2
   179e8:	cmp	r3, r1
   179ec:	bcc	179f8 <argp_error@@Base+0x10a8>
   179f0:	mov	r0, #1
   179f4:	bx	lr
   179f8:	push	{r4, r5, r6, lr}
   179fc:	mov	r4, r0
   17a00:	mov	r5, r1
   17a04:	bl	1758c <argp_error@@Base+0xc3c>
   17a08:	ldr	r0, [r4, #24]
   17a0c:	ldr	r2, [r4, #28]
   17a10:	ldr	r3, [r4]
   17a14:	sub	r2, r2, r0
   17a18:	mov	r1, #1
   17a1c:	bl	11380 <fwrite_unlocked@plt>
   17a20:	ldr	r2, [r4, #28]
   17a24:	mov	r1, r0
   17a28:	ldr	r0, [r4, #24]
   17a2c:	sub	r3, r2, r0
   17a30:	cmp	r1, r3
   17a34:	bne	17a5c <argp_error@@Base+0x110c>
   17a38:	ldr	r1, [r4, #32]
   17a3c:	mov	r3, #0
   17a40:	sub	r1, r1, r0
   17a44:	cmp	r5, r1
   17a48:	str	r0, [r4, #28]
   17a4c:	str	r3, [r4, #16]
   17a50:	bhi	17a84 <argp_error@@Base+0x1134>
   17a54:	mov	r0, #1
   17a58:	pop	{r4, r5, r6, pc}
   17a5c:	ldr	r3, [r4, #16]
   17a60:	sub	r2, r2, r1
   17a64:	sub	r3, r3, r1
   17a68:	str	r2, [r4, #28]
   17a6c:	str	r3, [r4, #16]
   17a70:	sub	r2, r2, r0
   17a74:	add	r1, r0, r1
   17a78:	bl	11338 <memmove@plt>
   17a7c:	mov	r0, #0
   17a80:	pop	{r4, r5, r6, pc}
   17a84:	adds	r5, r5, r1
   17a88:	bcc	17a9c <argp_error@@Base+0x114c>
   17a8c:	bl	114f4 <__errno_location@plt>
   17a90:	mov	r3, #12
   17a94:	str	r3, [r0]
   17a98:	b	17a7c <argp_error@@Base+0x112c>
   17a9c:	mov	r1, r5
   17aa0:	bl	13d34 <argp_parse@@Base+0x1590>
   17aa4:	cmp	r0, #0
   17aa8:	beq	17a8c <argp_error@@Base+0x113c>
   17aac:	add	r5, r0, r5
   17ab0:	str	r0, [r4, #24]
   17ab4:	str	r5, [r4, #32]
   17ab8:	str	r0, [r4, #28]
   17abc:	b	17a54 <argp_error@@Base+0x1104>
   17ac0:	push	{r1, r2, r3}
   17ac4:	push	{r0, r1, r2, r4, r5, r6, lr}
   17ac8:	mov	r4, r0
   17acc:	mov	r1, #150	; 0x96
   17ad0:	add	r6, sp, #32
   17ad4:	mov	r0, r4
   17ad8:	bl	179dc <argp_error@@Base+0x108c>
   17adc:	cmp	r0, #0
   17ae0:	bne	17af8 <argp_error@@Base+0x11a8>
   17ae4:	mvn	r0, #0
   17ae8:	add	sp, sp, #12
   17aec:	pop	{r4, r5, r6, lr}
   17af0:	add	sp, sp, #12
   17af4:	bx	lr
   17af8:	ldr	r0, [r4, #28]
   17afc:	ldr	r5, [r4, #32]
   17b00:	mov	r3, r6
   17b04:	sub	r5, r5, r0
   17b08:	ldr	r2, [sp, #28]
   17b0c:	mov	r1, r5
   17b10:	str	r6, [sp, #4]
   17b14:	bl	115f0 <vsnprintf@plt>
   17b18:	cmp	r5, r0
   17b1c:	addls	r1, r0, #1
   17b20:	bls	17ad4 <argp_error@@Base+0x1184>
   17b24:	ldr	r3, [r4, #28]
   17b28:	add	r3, r3, r0
   17b2c:	str	r3, [r4, #28]
   17b30:	b	17ae8 <argp_error@@Base+0x1198>
   17b34:	subs	r2, r1, #1
   17b38:	bxeq	lr
   17b3c:	bcc	17d14 <argp_error@@Base+0x13c4>
   17b40:	cmp	r0, r1
   17b44:	bls	17cf8 <argp_error@@Base+0x13a8>
   17b48:	tst	r1, r2
   17b4c:	beq	17d04 <argp_error@@Base+0x13b4>
   17b50:	clz	r3, r0
   17b54:	clz	r2, r1
   17b58:	sub	r3, r2, r3
   17b5c:	rsbs	r3, r3, #31
   17b60:	addne	r3, r3, r3, lsl #1
   17b64:	mov	r2, #0
   17b68:	addne	pc, pc, r3, lsl #2
   17b6c:	nop			; (mov r0, r0)
   17b70:	cmp	r0, r1, lsl #31
   17b74:	adc	r2, r2, r2
   17b78:	subcs	r0, r0, r1, lsl #31
   17b7c:	cmp	r0, r1, lsl #30
   17b80:	adc	r2, r2, r2
   17b84:	subcs	r0, r0, r1, lsl #30
   17b88:	cmp	r0, r1, lsl #29
   17b8c:	adc	r2, r2, r2
   17b90:	subcs	r0, r0, r1, lsl #29
   17b94:	cmp	r0, r1, lsl #28
   17b98:	adc	r2, r2, r2
   17b9c:	subcs	r0, r0, r1, lsl #28
   17ba0:	cmp	r0, r1, lsl #27
   17ba4:	adc	r2, r2, r2
   17ba8:	subcs	r0, r0, r1, lsl #27
   17bac:	cmp	r0, r1, lsl #26
   17bb0:	adc	r2, r2, r2
   17bb4:	subcs	r0, r0, r1, lsl #26
   17bb8:	cmp	r0, r1, lsl #25
   17bbc:	adc	r2, r2, r2
   17bc0:	subcs	r0, r0, r1, lsl #25
   17bc4:	cmp	r0, r1, lsl #24
   17bc8:	adc	r2, r2, r2
   17bcc:	subcs	r0, r0, r1, lsl #24
   17bd0:	cmp	r0, r1, lsl #23
   17bd4:	adc	r2, r2, r2
   17bd8:	subcs	r0, r0, r1, lsl #23
   17bdc:	cmp	r0, r1, lsl #22
   17be0:	adc	r2, r2, r2
   17be4:	subcs	r0, r0, r1, lsl #22
   17be8:	cmp	r0, r1, lsl #21
   17bec:	adc	r2, r2, r2
   17bf0:	subcs	r0, r0, r1, lsl #21
   17bf4:	cmp	r0, r1, lsl #20
   17bf8:	adc	r2, r2, r2
   17bfc:	subcs	r0, r0, r1, lsl #20
   17c00:	cmp	r0, r1, lsl #19
   17c04:	adc	r2, r2, r2
   17c08:	subcs	r0, r0, r1, lsl #19
   17c0c:	cmp	r0, r1, lsl #18
   17c10:	adc	r2, r2, r2
   17c14:	subcs	r0, r0, r1, lsl #18
   17c18:	cmp	r0, r1, lsl #17
   17c1c:	adc	r2, r2, r2
   17c20:	subcs	r0, r0, r1, lsl #17
   17c24:	cmp	r0, r1, lsl #16
   17c28:	adc	r2, r2, r2
   17c2c:	subcs	r0, r0, r1, lsl #16
   17c30:	cmp	r0, r1, lsl #15
   17c34:	adc	r2, r2, r2
   17c38:	subcs	r0, r0, r1, lsl #15
   17c3c:	cmp	r0, r1, lsl #14
   17c40:	adc	r2, r2, r2
   17c44:	subcs	r0, r0, r1, lsl #14
   17c48:	cmp	r0, r1, lsl #13
   17c4c:	adc	r2, r2, r2
   17c50:	subcs	r0, r0, r1, lsl #13
   17c54:	cmp	r0, r1, lsl #12
   17c58:	adc	r2, r2, r2
   17c5c:	subcs	r0, r0, r1, lsl #12
   17c60:	cmp	r0, r1, lsl #11
   17c64:	adc	r2, r2, r2
   17c68:	subcs	r0, r0, r1, lsl #11
   17c6c:	cmp	r0, r1, lsl #10
   17c70:	adc	r2, r2, r2
   17c74:	subcs	r0, r0, r1, lsl #10
   17c78:	cmp	r0, r1, lsl #9
   17c7c:	adc	r2, r2, r2
   17c80:	subcs	r0, r0, r1, lsl #9
   17c84:	cmp	r0, r1, lsl #8
   17c88:	adc	r2, r2, r2
   17c8c:	subcs	r0, r0, r1, lsl #8
   17c90:	cmp	r0, r1, lsl #7
   17c94:	adc	r2, r2, r2
   17c98:	subcs	r0, r0, r1, lsl #7
   17c9c:	cmp	r0, r1, lsl #6
   17ca0:	adc	r2, r2, r2
   17ca4:	subcs	r0, r0, r1, lsl #6
   17ca8:	cmp	r0, r1, lsl #5
   17cac:	adc	r2, r2, r2
   17cb0:	subcs	r0, r0, r1, lsl #5
   17cb4:	cmp	r0, r1, lsl #4
   17cb8:	adc	r2, r2, r2
   17cbc:	subcs	r0, r0, r1, lsl #4
   17cc0:	cmp	r0, r1, lsl #3
   17cc4:	adc	r2, r2, r2
   17cc8:	subcs	r0, r0, r1, lsl #3
   17ccc:	cmp	r0, r1, lsl #2
   17cd0:	adc	r2, r2, r2
   17cd4:	subcs	r0, r0, r1, lsl #2
   17cd8:	cmp	r0, r1, lsl #1
   17cdc:	adc	r2, r2, r2
   17ce0:	subcs	r0, r0, r1, lsl #1
   17ce4:	cmp	r0, r1
   17ce8:	adc	r2, r2, r2
   17cec:	subcs	r0, r0, r1
   17cf0:	mov	r0, r2
   17cf4:	bx	lr
   17cf8:	moveq	r0, #1
   17cfc:	movne	r0, #0
   17d00:	bx	lr
   17d04:	clz	r2, r1
   17d08:	rsb	r2, r2, #31
   17d0c:	lsr	r0, r0, r2
   17d10:	bx	lr
   17d14:	cmp	r0, #0
   17d18:	mvnne	r0, #0
   17d1c:	b	17f80 <argp_error@@Base+0x1630>
   17d20:	cmp	r1, #0
   17d24:	beq	17d14 <argp_error@@Base+0x13c4>
   17d28:	push	{r0, r1, lr}
   17d2c:	bl	17b34 <argp_error@@Base+0x11e4>
   17d30:	pop	{r1, r2, lr}
   17d34:	mul	r3, r2, r0
   17d38:	sub	r1, r1, r3
   17d3c:	bx	lr
   17d40:	cmp	r1, #0
   17d44:	beq	17f50 <argp_error@@Base+0x1600>
   17d48:	eor	ip, r0, r1
   17d4c:	rsbmi	r1, r1, #0
   17d50:	subs	r2, r1, #1
   17d54:	beq	17f1c <argp_error@@Base+0x15cc>
   17d58:	movs	r3, r0
   17d5c:	rsbmi	r3, r0, #0
   17d60:	cmp	r3, r1
   17d64:	bls	17f28 <argp_error@@Base+0x15d8>
   17d68:	tst	r1, r2
   17d6c:	beq	17f38 <argp_error@@Base+0x15e8>
   17d70:	clz	r2, r3
   17d74:	clz	r0, r1
   17d78:	sub	r2, r0, r2
   17d7c:	rsbs	r2, r2, #31
   17d80:	addne	r2, r2, r2, lsl #1
   17d84:	mov	r0, #0
   17d88:	addne	pc, pc, r2, lsl #2
   17d8c:	nop			; (mov r0, r0)
   17d90:	cmp	r3, r1, lsl #31
   17d94:	adc	r0, r0, r0
   17d98:	subcs	r3, r3, r1, lsl #31
   17d9c:	cmp	r3, r1, lsl #30
   17da0:	adc	r0, r0, r0
   17da4:	subcs	r3, r3, r1, lsl #30
   17da8:	cmp	r3, r1, lsl #29
   17dac:	adc	r0, r0, r0
   17db0:	subcs	r3, r3, r1, lsl #29
   17db4:	cmp	r3, r1, lsl #28
   17db8:	adc	r0, r0, r0
   17dbc:	subcs	r3, r3, r1, lsl #28
   17dc0:	cmp	r3, r1, lsl #27
   17dc4:	adc	r0, r0, r0
   17dc8:	subcs	r3, r3, r1, lsl #27
   17dcc:	cmp	r3, r1, lsl #26
   17dd0:	adc	r0, r0, r0
   17dd4:	subcs	r3, r3, r1, lsl #26
   17dd8:	cmp	r3, r1, lsl #25
   17ddc:	adc	r0, r0, r0
   17de0:	subcs	r3, r3, r1, lsl #25
   17de4:	cmp	r3, r1, lsl #24
   17de8:	adc	r0, r0, r0
   17dec:	subcs	r3, r3, r1, lsl #24
   17df0:	cmp	r3, r1, lsl #23
   17df4:	adc	r0, r0, r0
   17df8:	subcs	r3, r3, r1, lsl #23
   17dfc:	cmp	r3, r1, lsl #22
   17e00:	adc	r0, r0, r0
   17e04:	subcs	r3, r3, r1, lsl #22
   17e08:	cmp	r3, r1, lsl #21
   17e0c:	adc	r0, r0, r0
   17e10:	subcs	r3, r3, r1, lsl #21
   17e14:	cmp	r3, r1, lsl #20
   17e18:	adc	r0, r0, r0
   17e1c:	subcs	r3, r3, r1, lsl #20
   17e20:	cmp	r3, r1, lsl #19
   17e24:	adc	r0, r0, r0
   17e28:	subcs	r3, r3, r1, lsl #19
   17e2c:	cmp	r3, r1, lsl #18
   17e30:	adc	r0, r0, r0
   17e34:	subcs	r3, r3, r1, lsl #18
   17e38:	cmp	r3, r1, lsl #17
   17e3c:	adc	r0, r0, r0
   17e40:	subcs	r3, r3, r1, lsl #17
   17e44:	cmp	r3, r1, lsl #16
   17e48:	adc	r0, r0, r0
   17e4c:	subcs	r3, r3, r1, lsl #16
   17e50:	cmp	r3, r1, lsl #15
   17e54:	adc	r0, r0, r0
   17e58:	subcs	r3, r3, r1, lsl #15
   17e5c:	cmp	r3, r1, lsl #14
   17e60:	adc	r0, r0, r0
   17e64:	subcs	r3, r3, r1, lsl #14
   17e68:	cmp	r3, r1, lsl #13
   17e6c:	adc	r0, r0, r0
   17e70:	subcs	r3, r3, r1, lsl #13
   17e74:	cmp	r3, r1, lsl #12
   17e78:	adc	r0, r0, r0
   17e7c:	subcs	r3, r3, r1, lsl #12
   17e80:	cmp	r3, r1, lsl #11
   17e84:	adc	r0, r0, r0
   17e88:	subcs	r3, r3, r1, lsl #11
   17e8c:	cmp	r3, r1, lsl #10
   17e90:	adc	r0, r0, r0
   17e94:	subcs	r3, r3, r1, lsl #10
   17e98:	cmp	r3, r1, lsl #9
   17e9c:	adc	r0, r0, r0
   17ea0:	subcs	r3, r3, r1, lsl #9
   17ea4:	cmp	r3, r1, lsl #8
   17ea8:	adc	r0, r0, r0
   17eac:	subcs	r3, r3, r1, lsl #8
   17eb0:	cmp	r3, r1, lsl #7
   17eb4:	adc	r0, r0, r0
   17eb8:	subcs	r3, r3, r1, lsl #7
   17ebc:	cmp	r3, r1, lsl #6
   17ec0:	adc	r0, r0, r0
   17ec4:	subcs	r3, r3, r1, lsl #6
   17ec8:	cmp	r3, r1, lsl #5
   17ecc:	adc	r0, r0, r0
   17ed0:	subcs	r3, r3, r1, lsl #5
   17ed4:	cmp	r3, r1, lsl #4
   17ed8:	adc	r0, r0, r0
   17edc:	subcs	r3, r3, r1, lsl #4
   17ee0:	cmp	r3, r1, lsl #3
   17ee4:	adc	r0, r0, r0
   17ee8:	subcs	r3, r3, r1, lsl #3
   17eec:	cmp	r3, r1, lsl #2
   17ef0:	adc	r0, r0, r0
   17ef4:	subcs	r3, r3, r1, lsl #2
   17ef8:	cmp	r3, r1, lsl #1
   17efc:	adc	r0, r0, r0
   17f00:	subcs	r3, r3, r1, lsl #1
   17f04:	cmp	r3, r1
   17f08:	adc	r0, r0, r0
   17f0c:	subcs	r3, r3, r1
   17f10:	cmp	ip, #0
   17f14:	rsbmi	r0, r0, #0
   17f18:	bx	lr
   17f1c:	teq	ip, r0
   17f20:	rsbmi	r0, r0, #0
   17f24:	bx	lr
   17f28:	movcc	r0, #0
   17f2c:	asreq	r0, ip, #31
   17f30:	orreq	r0, r0, #1
   17f34:	bx	lr
   17f38:	clz	r2, r1
   17f3c:	rsb	r2, r2, #31
   17f40:	cmp	ip, #0
   17f44:	lsr	r0, r3, r2
   17f48:	rsbmi	r0, r0, #0
   17f4c:	bx	lr
   17f50:	cmp	r0, #0
   17f54:	mvngt	r0, #-2147483648	; 0x80000000
   17f58:	movlt	r0, #-2147483648	; 0x80000000
   17f5c:	b	17f80 <argp_error@@Base+0x1630>
   17f60:	cmp	r1, #0
   17f64:	beq	17f50 <argp_error@@Base+0x1600>
   17f68:	push	{r0, r1, lr}
   17f6c:	bl	17d48 <argp_error@@Base+0x13f8>
   17f70:	pop	{r1, r2, lr}
   17f74:	mul	r3, r2, r0
   17f78:	sub	r1, r1, r3
   17f7c:	bx	lr
   17f80:	push	{r1, lr}
   17f84:	mov	r0, #8
   17f88:	bl	112f0 <raise@plt>
   17f8c:	pop	{r1, pc}
   17f90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17f94:	mov	r7, r0
   17f98:	ldr	r6, [pc, #72]	; 17fe8 <argp_error@@Base+0x1698>
   17f9c:	ldr	r5, [pc, #72]	; 17fec <argp_error@@Base+0x169c>
   17fa0:	add	r6, pc, r6
   17fa4:	add	r5, pc, r5
   17fa8:	sub	r6, r6, r5
   17fac:	mov	r8, r1
   17fb0:	mov	r9, r2
   17fb4:	bl	112b8 <calloc@plt-0x20>
   17fb8:	asrs	r6, r6, #2
   17fbc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17fc0:	mov	r4, #0
   17fc4:	add	r4, r4, #1
   17fc8:	ldr	r3, [r5], #4
   17fcc:	mov	r2, r9
   17fd0:	mov	r1, r8
   17fd4:	mov	r0, r7
   17fd8:	blx	r3
   17fdc:	cmp	r6, r4
   17fe0:	bne	17fc4 <argp_error@@Base+0x1674>
   17fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17fe8:	andeq	r0, r1, r8, asr pc
   17fec:	andeq	r0, r1, r0, asr pc
   17ff0:	bx	lr

Disassembly of section .fini:

00017ff4 <.fini>:
   17ff4:	push	{r3, lr}
   17ff8:	pop	{r3, pc}
