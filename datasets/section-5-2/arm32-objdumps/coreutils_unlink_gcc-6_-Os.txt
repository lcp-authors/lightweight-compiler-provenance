
../repos/coreutils/src/unlink:     file format elf32-littlearm


Disassembly of section .init:

00010b28 <.init>:
   10b28:	push	{r3, lr}
   10b2c:	bl	10f2c <abort@plt+0x1d4>
   10b30:	pop	{r3, pc}

Disassembly of section .plt:

00010b34 <calloc@plt-0x14>:
   10b34:	push	{lr}		; (str lr, [sp, #-4]!)
   10b38:	ldr	lr, [pc, #4]	; 10b44 <calloc@plt-0x4>
   10b3c:	add	lr, pc, lr
   10b40:	ldr	pc, [lr, #8]!
   10b44:			; <UNDEFINED> instruction: 0x000144bc

00010b48 <calloc@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #20, 20	; 0x14000
   10b50:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b54 <fputs_unlocked@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #20, 20	; 0x14000
   10b5c:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b60 <raise@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #20, 20	; 0x14000
   10b68:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b6c <strcmp@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #20, 20	; 0x14000
   10b74:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b78 <fflush@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #20, 20	; 0x14000
   10b80:	ldr	pc, [ip, #1180]!	; 0x49c

00010b84 <free@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #20, 20	; 0x14000
   10b8c:	ldr	pc, [ip, #1172]!	; 0x494

00010b90 <_exit@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #20, 20	; 0x14000
   10b98:	ldr	pc, [ip, #1164]!	; 0x48c

00010b9c <memcpy@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #20, 20	; 0x14000
   10ba4:	ldr	pc, [ip, #1156]!	; 0x484

00010ba8 <mbsinit@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #20, 20	; 0x14000
   10bb0:	ldr	pc, [ip, #1148]!	; 0x47c

00010bb4 <memcmp@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #20, 20	; 0x14000
   10bbc:	ldr	pc, [ip, #1140]!	; 0x474

00010bc0 <fputc_unlocked@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #20, 20	; 0x14000
   10bc8:	ldr	pc, [ip, #1132]!	; 0x46c

00010bcc <dcgettext@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #20, 20	; 0x14000
   10bd4:	ldr	pc, [ip, #1124]!	; 0x464

00010bd8 <unlink@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #20, 20	; 0x14000
   10be0:	ldr	pc, [ip, #1116]!	; 0x45c

00010be4 <realloc@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #20, 20	; 0x14000
   10bec:	ldr	pc, [ip, #1108]!	; 0x454

00010bf0 <textdomain@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #20, 20	; 0x14000
   10bf8:	ldr	pc, [ip, #1100]!	; 0x44c

00010bfc <iswprint@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #20, 20	; 0x14000
   10c04:	ldr	pc, [ip, #1092]!	; 0x444

00010c08 <lseek64@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #20, 20	; 0x14000
   10c10:	ldr	pc, [ip, #1084]!	; 0x43c

00010c14 <__ctype_get_mb_cur_max@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #20, 20	; 0x14000
   10c1c:	ldr	pc, [ip, #1076]!	; 0x434

00010c20 <__fpending@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #20, 20	; 0x14000
   10c28:	ldr	pc, [ip, #1068]!	; 0x42c

00010c2c <ferror_unlocked@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #20, 20	; 0x14000
   10c34:	ldr	pc, [ip, #1060]!	; 0x424

00010c38 <mbrtowc@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #20, 20	; 0x14000
   10c40:	ldr	pc, [ip, #1052]!	; 0x41c

00010c44 <error@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #20, 20	; 0x14000
   10c4c:	ldr	pc, [ip, #1044]!	; 0x414

00010c50 <malloc@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #20, 20	; 0x14000
   10c58:	ldr	pc, [ip, #1036]!	; 0x40c

00010c5c <__libc_start_main@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #20, 20	; 0x14000
   10c64:	ldr	pc, [ip, #1028]!	; 0x404

00010c68 <__freading@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #20, 20	; 0x14000
   10c70:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c74 <__gmon_start__@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c80 <getopt_long@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c8c <__ctype_b_loc@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #996]!	; 0x3e4

00010c98 <exit@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #988]!	; 0x3dc

00010ca4 <strlen@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #980]!	; 0x3d4

00010cb0 <__errno_location@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #972]!	; 0x3cc

00010cbc <__cxa_atexit@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #964]!	; 0x3c4

00010cc8 <memset@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #956]!	; 0x3bc

00010cd4 <__printf_chk@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #948]!	; 0x3b4

00010ce0 <fileno@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #940]!	; 0x3ac

00010cec <__fprintf_chk@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #932]!	; 0x3a4

00010cf8 <fclose@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #924]!	; 0x39c

00010d04 <fseeko64@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #916]!	; 0x394

00010d10 <setlocale@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #908]!	; 0x38c

00010d1c <strrchr@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #900]!	; 0x384

00010d28 <nl_langinfo@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #892]!	; 0x37c

00010d34 <bindtextdomain@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #884]!	; 0x374

00010d40 <fputs@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #876]!	; 0x36c

00010d4c <strncmp@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #868]!	; 0x364

00010d58 <abort@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #860]!	; 0x35c

Disassembly of section .text:

00010d64 <.text>:
   10d64:	push	{r4, r5, r6, r7, r8, lr}
   10d68:	mov	r8, r0
   10d6c:	sub	sp, sp, #24
   10d70:	ldr	r0, [r1]
   10d74:	mov	r5, r1
   10d78:	bl	114c4 <abort@plt+0x76c>
   10d7c:	ldr	r1, [pc, #312]	; 10ebc <abort@plt+0x164>
   10d80:	mov	r0, #6
   10d84:	bl	10d10 <setlocale@plt>
   10d88:	ldr	r1, [pc, #304]	; 10ec0 <abort@plt+0x168>
   10d8c:	ldr	r0, [pc, #304]	; 10ec4 <abort@plt+0x16c>
   10d90:	bl	10d34 <bindtextdomain@plt>
   10d94:	ldr	r0, [pc, #296]	; 10ec4 <abort@plt+0x16c>
   10d98:	bl	10bf0 <textdomain@plt>
   10d9c:	ldr	r0, [pc, #292]	; 10ec8 <abort@plt+0x170>
   10da0:	bl	13e84 <abort@plt+0x312c>
   10da4:	ldr	r3, [pc, #288]	; 10ecc <abort@plt+0x174>
   10da8:	mov	r4, #0
   10dac:	str	r3, [sp, #12]
   10db0:	ldr	r3, [pc, #280]	; 10ed0 <abort@plt+0x178>
   10db4:	mov	r6, #1
   10db8:	str	r3, [sp, #8]
   10dbc:	ldr	r3, [pc, #272]	; 10ed4 <abort@plt+0x17c>
   10dc0:	str	r4, [sp, #16]
   10dc4:	str	r6, [sp, #4]
   10dc8:	ldr	r7, [pc, #264]	; 10ed8 <abort@plt+0x180>
   10dcc:	ldr	r3, [r3]
   10dd0:	ldr	r2, [pc, #260]	; 10edc <abort@plt+0x184>
   10dd4:	str	r3, [sp]
   10dd8:	mov	r1, r5
   10ddc:	ldr	r3, [pc, #252]	; 10ee0 <abort@plt+0x188>
   10de0:	mov	r0, r8
   10de4:	bl	113fc <abort@plt+0x6a4>
   10de8:	ldr	r3, [r7]
   10dec:	cmp	r8, r3
   10df0:	bgt	10e1c <abort@plt+0xc4>
   10df4:	mov	r2, #5
   10df8:	ldr	r1, [pc, #228]	; 10ee4 <abort@plt+0x18c>
   10dfc:	mov	r0, r4
   10e00:	bl	10bcc <dcgettext@plt>
   10e04:	mov	r1, r4
   10e08:	mov	r2, r0
   10e0c:	mov	r0, r4
   10e10:	bl	10c44 <error@plt>
   10e14:	mov	r0, r6
   10e18:	bl	11018 <abort@plt+0x2c0>
   10e1c:	add	r2, r3, #1
   10e20:	cmp	r8, r2
   10e24:	ble	10e64 <abort@plt+0x10c>
   10e28:	mov	r2, #5
   10e2c:	ldr	r1, [pc, #180]	; 10ee8 <abort@plt+0x190>
   10e30:	mov	r0, r4
   10e34:	bl	10bcc <dcgettext@plt>
   10e38:	ldr	r3, [r7]
   10e3c:	add	r3, r3, #1
   10e40:	mov	r8, r0
   10e44:	ldr	r0, [r5, r3, lsl #2]
   10e48:	bl	12af4 <abort@plt+0x1d9c>
   10e4c:	mov	r2, r8
   10e50:	mov	r1, r4
   10e54:	mov	r3, r0
   10e58:	mov	r0, r4
   10e5c:	bl	10c44 <error@plt>
   10e60:	b	10e14 <abort@plt+0xbc>
   10e64:	ldr	r0, [r5, r3, lsl #2]
   10e68:	bl	10bd8 <unlink@plt>
   10e6c:	cmp	r0, #0
   10e70:	beq	10eb4 <abort@plt+0x15c>
   10e74:	bl	10cb0 <__errno_location@plt>
   10e78:	mov	r2, #5
   10e7c:	ldr	r1, [pc, #104]	; 10eec <abort@plt+0x194>
   10e80:	ldr	r8, [r0]
   10e84:	mov	r0, r4
   10e88:	bl	10bcc <dcgettext@plt>
   10e8c:	ldr	r3, [r7]
   10e90:	ldr	r1, [r5, r3, lsl #2]
   10e94:	mov	r4, r0
   10e98:	mov	r0, #4
   10e9c:	bl	12910 <abort@plt+0x1bb8>
   10ea0:	mov	r2, r4
   10ea4:	mov	r1, r8
   10ea8:	mov	r3, r0
   10eac:	mov	r0, r6
   10eb0:	bl	10c44 <error@plt>
   10eb4:	add	sp, sp, #24
   10eb8:	pop	{r4, r5, r6, r7, r8, pc}
   10ebc:	andeq	r3, r1, r7, ror #30
   10ec0:	strheq	r4, [r1], -r1
   10ec4:	andeq	r4, r1, lr
   10ec8:	andeq	r1, r1, r0, ror #4
   10ecc:	andeq	r4, r1, r9, asr #1
   10ed0:	andeq	r1, r1, r8, lsl r0
   10ed4:	andeq	r5, r2, ip, asr #1
   10ed8:	andeq	r5, r2, r0, lsr #2
   10edc:	andeq	r3, r1, r0, ror #29
   10ee0:	andeq	r4, r1, sl
   10ee4:	ldrdeq	r4, [r1], -r7
   10ee8:	andeq	r4, r1, r7, ror #1
   10eec:	strdeq	r4, [r1], -r8
   10ef0:	mov	fp, #0
   10ef4:	mov	lr, #0
   10ef8:	pop	{r1}		; (ldr r1, [sp], #4)
   10efc:	mov	r2, sp
   10f00:	push	{r2}		; (str r2, [sp, #-4]!)
   10f04:	push	{r0}		; (str r0, [sp, #-4]!)
   10f08:	ldr	ip, [pc, #16]	; 10f20 <abort@plt+0x1c8>
   10f0c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f10:	ldr	r0, [pc, #12]	; 10f24 <abort@plt+0x1cc>
   10f14:	ldr	r3, [pc, #12]	; 10f28 <abort@plt+0x1d0>
   10f18:	bl	10c5c <__libc_start_main@plt>
   10f1c:	bl	10d58 <abort@plt>
   10f20:	andeq	r3, r1, r0, lsl #29
   10f24:	andeq	r0, r1, r4, ror #26
   10f28:	andeq	r3, r1, r0, lsr #28
   10f2c:	ldr	r3, [pc, #20]	; 10f48 <abort@plt+0x1f0>
   10f30:	ldr	r2, [pc, #20]	; 10f4c <abort@plt+0x1f4>
   10f34:	add	r3, pc, r3
   10f38:	ldr	r2, [r3, r2]
   10f3c:	cmp	r2, #0
   10f40:	bxeq	lr
   10f44:	b	10c74 <__gmon_start__@plt>
   10f48:	andeq	r4, r1, r4, asr #1
   10f4c:	andeq	r0, r0, r0, asr #1
   10f50:	ldr	r3, [pc, #28]	; 10f74 <abort@plt+0x21c>
   10f54:	ldr	r0, [pc, #28]	; 10f78 <abort@plt+0x220>
   10f58:	sub	r3, r3, r0
   10f5c:	cmp	r3, #6
   10f60:	bxls	lr
   10f64:	ldr	r3, [pc, #16]	; 10f7c <abort@plt+0x224>
   10f68:	cmp	r3, #0
   10f6c:	bxeq	lr
   10f70:	bx	r3
   10f74:	andeq	r5, r2, r7, lsl r1
   10f78:	andeq	r5, r2, r4, lsl r1
   10f7c:	andeq	r0, r0, r0
   10f80:	ldr	r1, [pc, #36]	; 10fac <abort@plt+0x254>
   10f84:	ldr	r0, [pc, #36]	; 10fb0 <abort@plt+0x258>
   10f88:	sub	r1, r1, r0
   10f8c:	asr	r1, r1, #2
   10f90:	add	r1, r1, r1, lsr #31
   10f94:	asrs	r1, r1, #1
   10f98:	bxeq	lr
   10f9c:	ldr	r3, [pc, #16]	; 10fb4 <abort@plt+0x25c>
   10fa0:	cmp	r3, #0
   10fa4:	bxeq	lr
   10fa8:	bx	r3
   10fac:	andeq	r5, r2, r4, lsl r1
   10fb0:	andeq	r5, r2, r4, lsl r1
   10fb4:	andeq	r0, r0, r0
   10fb8:	push	{r4, lr}
   10fbc:	ldr	r4, [pc, #24]	; 10fdc <abort@plt+0x284>
   10fc0:	ldrb	r3, [r4]
   10fc4:	cmp	r3, #0
   10fc8:	popne	{r4, pc}
   10fcc:	bl	10f50 <abort@plt+0x1f8>
   10fd0:	mov	r3, #1
   10fd4:	strb	r3, [r4]
   10fd8:	pop	{r4, pc}
   10fdc:	andeq	r5, r2, r4, lsr r1
   10fe0:	ldr	r0, [pc, #40]	; 11010 <abort@plt+0x2b8>
   10fe4:	ldr	r3, [r0]
   10fe8:	cmp	r3, #0
   10fec:	bne	10ff4 <abort@plt+0x29c>
   10ff0:	b	10f80 <abort@plt+0x228>
   10ff4:	ldr	r3, [pc, #24]	; 11014 <abort@plt+0x2bc>
   10ff8:	cmp	r3, #0
   10ffc:	beq	10ff0 <abort@plt+0x298>
   11000:	push	{r4, lr}
   11004:	blx	r3
   11008:	pop	{r4, lr}
   1100c:	b	10f80 <abort@plt+0x228>
   11010:	andeq	r4, r2, r4, lsl pc
   11014:	andeq	r0, r0, r0
   11018:	subs	r5, r0, #0
   1101c:	push	{r7, lr}
   11020:	sub	sp, sp, #56	; 0x38
   11024:	ldr	r4, [pc, #456]	; 111f4 <abort@plt+0x49c>
   11028:	beq	11060 <abort@plt+0x308>
   1102c:	ldr	r3, [pc, #452]	; 111f8 <abort@plt+0x4a0>
   11030:	mov	r2, #5
   11034:	ldr	r1, [pc, #448]	; 111fc <abort@plt+0x4a4>
   11038:	mov	r0, #0
   1103c:	ldr	r6, [r3]
   11040:	bl	10bcc <dcgettext@plt>
   11044:	ldr	r3, [r4]
   11048:	mov	r1, #1
   1104c:	mov	r2, r0
   11050:	mov	r0, r6
   11054:	bl	10cec <__fprintf_chk@plt>
   11058:	mov	r0, r5
   1105c:	bl	10c98 <exit@plt>
   11060:	mov	r2, #5
   11064:	ldr	r1, [pc, #404]	; 11200 <abort@plt+0x4a8>
   11068:	bl	10bcc <dcgettext@plt>
   1106c:	ldr	r3, [r4]
   11070:	ldr	r4, [pc, #396]	; 11204 <abort@plt+0x4ac>
   11074:	mov	r2, r3
   11078:	ldr	r8, [pc, #392]	; 11208 <abort@plt+0x4b0>
   1107c:	mov	r6, r5
   11080:	mov	r1, r0
   11084:	mov	r0, #1
   11088:	bl	10cd4 <__printf_chk@plt>
   1108c:	mov	r2, #5
   11090:	ldr	r1, [pc, #372]	; 1120c <abort@plt+0x4b4>
   11094:	mov	r0, r5
   11098:	bl	10bcc <dcgettext@plt>
   1109c:	ldr	r1, [r4]
   110a0:	bl	10b54 <fputs_unlocked@plt>
   110a4:	mov	r2, #5
   110a8:	ldr	r1, [pc, #352]	; 11210 <abort@plt+0x4b8>
   110ac:	mov	r0, r5
   110b0:	bl	10bcc <dcgettext@plt>
   110b4:	ldr	r1, [r4]
   110b8:	bl	10b54 <fputs_unlocked@plt>
   110bc:	mov	r2, #5
   110c0:	ldr	r1, [pc, #332]	; 11214 <abort@plt+0x4bc>
   110c4:	mov	r0, r5
   110c8:	bl	10bcc <dcgettext@plt>
   110cc:	ldr	r1, [r4]
   110d0:	bl	10b54 <fputs_unlocked@plt>
   110d4:	ldr	lr, [pc, #316]	; 11218 <abort@plt+0x4c0>
   110d8:	mov	ip, sp
   110dc:	ldm	lr!, {r0, r1, r2, r3}
   110e0:	stmia	ip!, {r0, r1, r2, r3}
   110e4:	ldm	lr!, {r0, r1, r2, r3}
   110e8:	stmia	ip!, {r0, r1, r2, r3}
   110ec:	ldm	lr!, {r0, r1, r2, r3}
   110f0:	stmia	ip!, {r0, r1, r2, r3}
   110f4:	ldm	lr, {r0, r1}
   110f8:	stm	ip, {r0, r1}
   110fc:	ldr	r1, [sp, r6]
   11100:	add	r7, sp, r6
   11104:	cmp	r1, #0
   11108:	bne	111ac <abort@plt+0x454>
   1110c:	ldr	r6, [r7, #4]
   11110:	ldr	r7, [pc, #240]	; 11208 <abort@plt+0x4b0>
   11114:	cmp	r6, #0
   11118:	mov	r2, #5
   1111c:	ldr	r1, [pc, #248]	; 1121c <abort@plt+0x4c4>
   11120:	mov	r0, #0
   11124:	moveq	r6, r7
   11128:	bl	10bcc <dcgettext@plt>
   1112c:	ldr	r3, [pc, #236]	; 11220 <abort@plt+0x4c8>
   11130:	ldr	r2, [pc, #236]	; 11224 <abort@plt+0x4cc>
   11134:	mov	r1, r0
   11138:	mov	r0, #1
   1113c:	bl	10cd4 <__printf_chk@plt>
   11140:	mov	r1, #0
   11144:	mov	r0, #5
   11148:	bl	10d10 <setlocale@plt>
   1114c:	cmp	r0, #0
   11150:	bne	111c4 <abort@plt+0x46c>
   11154:	mov	r2, #5
   11158:	ldr	r1, [pc, #200]	; 11228 <abort@plt+0x4d0>
   1115c:	mov	r0, #0
   11160:	bl	10bcc <dcgettext@plt>
   11164:	ldr	r3, [pc, #156]	; 11208 <abort@plt+0x4b0>
   11168:	ldr	r2, [pc, #176]	; 11220 <abort@plt+0x4c8>
   1116c:	mov	r1, r0
   11170:	mov	r0, #1
   11174:	bl	10cd4 <__printf_chk@plt>
   11178:	mov	r2, #5
   1117c:	ldr	r1, [pc, #168]	; 1122c <abort@plt+0x4d4>
   11180:	mov	r0, #0
   11184:	bl	10bcc <dcgettext@plt>
   11188:	ldr	r2, [pc, #160]	; 11230 <abort@plt+0x4d8>
   1118c:	cmp	r6, r7
   11190:	ldr	r3, [pc, #156]	; 11234 <abort@plt+0x4dc>
   11194:	moveq	r3, r2
   11198:	mov	r2, r6
   1119c:	mov	r1, r0
   111a0:	mov	r0, #1
   111a4:	bl	10cd4 <__printf_chk@plt>
   111a8:	b	11058 <abort@plt+0x300>
   111ac:	mov	r0, r8
   111b0:	bl	10b6c <strcmp@plt>
   111b4:	add	r6, r6, #8
   111b8:	cmp	r0, #0
   111bc:	bne	110fc <abort@plt+0x3a4>
   111c0:	b	1110c <abort@plt+0x3b4>
   111c4:	mov	r2, #3
   111c8:	ldr	r1, [pc, #104]	; 11238 <abort@plt+0x4e0>
   111cc:	bl	10d4c <strncmp@plt>
   111d0:	cmp	r0, #0
   111d4:	beq	11154 <abort@plt+0x3fc>
   111d8:	mov	r2, #5
   111dc:	ldr	r1, [pc, #88]	; 1123c <abort@plt+0x4e4>
   111e0:	mov	r0, #0
   111e4:	bl	10bcc <dcgettext@plt>
   111e8:	ldr	r1, [r4]
   111ec:	bl	10b54 <fputs_unlocked@plt>
   111f0:	b	11154 <abort@plt+0x3fc>
   111f4:	andeq	r5, r2, r0, asr #2
   111f8:	andeq	r5, r2, r8, lsr #2
   111fc:	andeq	r3, r1, r7, ror #29
   11200:	andeq	r3, r1, lr, lsl #30
   11204:	andeq	r5, r2, ip, lsr #2
   11208:	andeq	r3, r1, r0, ror #29
   1120c:	andeq	r3, r1, pc, lsr #30
   11210:	andeq	r3, r1, r8, ror #30
   11214:	muleq	r1, r5, pc	; <UNPREDICTABLE>
   11218:	andeq	r3, r1, r8, lsr #29
   1121c:	andeq	r3, r1, fp, asr #31
   11220:	andeq	r3, r1, r2, ror #31
   11224:	andeq	r4, r1, sl
   11228:	andeq	r4, r1, r3, rrx
   1122c:	andeq	r4, r1, lr, ror r0
   11230:	andeq	r4, r1, r5, lsr #2
   11234:	andeq	r3, r1, r7, ror #30
   11238:	andeq	r4, r1, r8, lsl r0
   1123c:	andeq	r4, r1, ip, lsl r0
   11240:	ldr	r3, [pc, #4]	; 1124c <abort@plt+0x4f4>
   11244:	str	r0, [r3]
   11248:	bx	lr
   1124c:	andeq	r5, r2, r8, lsr r1
   11250:	ldr	r3, [pc, #4]	; 1125c <abort@plt+0x504>
   11254:	strb	r0, [r3, #4]
   11258:	bx	lr
   1125c:	andeq	r5, r2, r8, lsr r1
   11260:	ldr	r3, [pc, #192]	; 11328 <abort@plt+0x5d0>
   11264:	push	{r0, r1, r4, r5, r6, lr}
   11268:	ldr	r0, [r3]
   1126c:	bl	135c4 <abort@plt+0x286c>
   11270:	cmp	r0, #0
   11274:	beq	1130c <abort@plt+0x5b4>
   11278:	ldr	r3, [pc, #172]	; 1132c <abort@plt+0x5d4>
   1127c:	mov	r4, r3
   11280:	ldrb	r2, [r3, #4]
   11284:	cmp	r2, #0
   11288:	beq	1129c <abort@plt+0x544>
   1128c:	bl	10cb0 <__errno_location@plt>
   11290:	ldr	r3, [r0]
   11294:	cmp	r3, #32
   11298:	beq	1130c <abort@plt+0x5b4>
   1129c:	mov	r2, #5
   112a0:	ldr	r1, [pc, #136]	; 11330 <abort@plt+0x5d8>
   112a4:	mov	r0, #0
   112a8:	bl	10bcc <dcgettext@plt>
   112ac:	ldr	r4, [r4]
   112b0:	cmp	r4, #0
   112b4:	mov	r5, r0
   112b8:	beq	112f0 <abort@plt+0x598>
   112bc:	bl	10cb0 <__errno_location@plt>
   112c0:	ldr	r6, [r0]
   112c4:	mov	r0, r4
   112c8:	bl	129a4 <abort@plt+0x1c4c>
   112cc:	str	r5, [sp]
   112d0:	ldr	r2, [pc, #92]	; 11334 <abort@plt+0x5dc>
   112d4:	mov	r1, r6
   112d8:	mov	r3, r0
   112dc:	mov	r0, #0
   112e0:	bl	10c44 <error@plt>
   112e4:	ldr	r3, [pc, #76]	; 11338 <abort@plt+0x5e0>
   112e8:	ldr	r0, [r3]
   112ec:	bl	10b90 <_exit@plt>
   112f0:	bl	10cb0 <__errno_location@plt>
   112f4:	mov	r3, r5
   112f8:	ldr	r2, [pc, #60]	; 1133c <abort@plt+0x5e4>
   112fc:	ldr	r1, [r0]
   11300:	mov	r0, r4
   11304:	bl	10c44 <error@plt>
   11308:	b	112e4 <abort@plt+0x58c>
   1130c:	ldr	r3, [pc, #44]	; 11340 <abort@plt+0x5e8>
   11310:	ldr	r0, [r3]
   11314:	bl	135c4 <abort@plt+0x286c>
   11318:	cmp	r0, #0
   1131c:	bne	112e4 <abort@plt+0x58c>
   11320:	add	sp, sp, #8
   11324:	pop	{r4, r5, r6, pc}
   11328:	andeq	r5, r2, ip, lsr #2
   1132c:	andeq	r5, r2, r8, lsr r1
   11330:	andeq	r4, r1, r7, ror r1
   11334:	andeq	r4, r1, r3, lsl #3
   11338:	ldrdeq	r5, [r2], -r0
   1133c:	andeq	r4, r1, r7, lsl #3
   11340:	andeq	r5, r2, r8, lsr #2
   11344:	ldr	ip, [pc, #156]	; 113e8 <abort@plt+0x690>
   11348:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1134c:	cmp	r0, #2
   11350:	mov	r6, #0
   11354:	ldr	r7, [ip]
   11358:	mov	r8, ip
   1135c:	str	r6, [ip]
   11360:	bne	11394 <abort@plt+0x63c>
   11364:	mov	r5, r3
   11368:	mov	r4, r2
   1136c:	str	r6, [sp]
   11370:	ldr	r3, [pc, #116]	; 113ec <abort@plt+0x694>
   11374:	ldr	r2, [pc, #116]	; 113f0 <abort@plt+0x698>
   11378:	bl	10c80 <getopt_long@plt>
   1137c:	cmn	r0, #1
   11380:	beq	11394 <abort@plt+0x63c>
   11384:	cmp	r0, #104	; 0x68
   11388:	beq	113ac <abort@plt+0x654>
   1138c:	cmp	r0, #118	; 0x76
   11390:	beq	113bc <abort@plt+0x664>
   11394:	ldr	r3, [pc, #88]	; 113f4 <abort@plt+0x69c>
   11398:	mov	r2, #0
   1139c:	str	r7, [r8]
   113a0:	str	r2, [r3]
   113a4:	add	sp, sp, #16
   113a8:	pop	{r4, r5, r6, r7, r8, pc}
   113ac:	mov	r0, r6
   113b0:	ldr	r3, [sp, #44]	; 0x2c
   113b4:	blx	r3
   113b8:	b	11394 <abort@plt+0x63c>
   113bc:	ldr	r0, [pc, #52]	; 113f8 <abort@plt+0x6a0>
   113c0:	add	r3, sp, #48	; 0x30
   113c4:	str	r3, [sp]
   113c8:	str	r3, [sp, #12]
   113cc:	ldr	r0, [r0]
   113d0:	ldr	r3, [sp, #40]	; 0x28
   113d4:	mov	r2, r5
   113d8:	mov	r1, r4
   113dc:	bl	12f00 <abort@plt+0x21a8>
   113e0:	mov	r0, r6
   113e4:	bl	10c98 <exit@plt>
   113e8:	andeq	r5, r2, r0, lsr r1
   113ec:	andeq	r4, r1, ip, lsl #3
   113f0:			; <UNDEFINED> instruction: 0x000141bc
   113f4:	andeq	r5, r2, r0, lsr #2
   113f8:	andeq	r5, r2, ip, lsr #2
   113fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   11400:	sub	sp, sp, #20
   11404:	mov	r8, r3
   11408:	ldrb	lr, [sp, #52]	; 0x34
   1140c:	ldr	r3, [pc, #152]	; 114ac <abort@plt+0x754>
   11410:	mov	r4, #0
   11414:	ldr	ip, [pc, #148]	; 114b0 <abort@plt+0x758>
   11418:	cmp	lr, r4
   1141c:	mov	r7, r2
   11420:	mov	r2, #1
   11424:	ldr	r9, [r3]
   11428:	mov	r5, r3
   1142c:	str	r2, [r3]
   11430:	ldr	r2, [pc, #124]	; 114b4 <abort@plt+0x75c>
   11434:	str	r4, [sp]
   11438:	moveq	r2, ip
   1143c:	ldr	r3, [pc, #116]	; 114b8 <abort@plt+0x760>
   11440:	ldr	r6, [sp, #56]	; 0x38
   11444:	bl	10c80 <getopt_long@plt>
   11448:	cmn	r0, #1
   1144c:	beq	11474 <abort@plt+0x71c>
   11450:	cmp	r0, #104	; 0x68
   11454:	beq	1146c <abort@plt+0x714>
   11458:	cmp	r0, #118	; 0x76
   1145c:	beq	11480 <abort@plt+0x728>
   11460:	ldr	r3, [pc, #84]	; 114bc <abort@plt+0x764>
   11464:	ldr	r0, [r3]
   11468:	b	11470 <abort@plt+0x718>
   1146c:	mov	r0, r4
   11470:	blx	r6
   11474:	str	r9, [r5]
   11478:	add	sp, sp, #20
   1147c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11480:	ldr	r0, [pc, #56]	; 114c0 <abort@plt+0x768>
   11484:	add	r3, sp, #60	; 0x3c
   11488:	str	r3, [sp]
   1148c:	str	r3, [sp, #12]
   11490:	ldr	r0, [r0]
   11494:	ldr	r3, [sp, #48]	; 0x30
   11498:	mov	r2, r8
   1149c:	mov	r1, r7
   114a0:	bl	12f00 <abort@plt+0x21a8>
   114a4:	mov	r0, r4
   114a8:	bl	10c98 <exit@plt>
   114ac:	andeq	r5, r2, r0, lsr r1
   114b0:			; <UNDEFINED> instruction: 0x000141bc
   114b4:	andeq	r3, r1, r7, ror #30
   114b8:	andeq	r4, r1, ip, lsl #3
   114bc:	ldrdeq	r5, [r2], -r0
   114c0:	andeq	r5, r2, ip, lsr #2
   114c4:	push	{r4, r5, r6, lr}
   114c8:	subs	r5, r0, #0
   114cc:	bne	114e4 <abort@plt+0x78c>
   114d0:	ldr	r3, [pc, #124]	; 11554 <abort@plt+0x7fc>
   114d4:	ldr	r0, [pc, #124]	; 11558 <abort@plt+0x800>
   114d8:	ldr	r1, [r3]
   114dc:	bl	10d40 <fputs@plt>
   114e0:	bl	10d58 <abort@plt>
   114e4:	mov	r1, #47	; 0x2f
   114e8:	bl	10d1c <strrchr@plt>
   114ec:	cmp	r0, #0
   114f0:	addne	r4, r0, #1
   114f4:	moveq	r4, r5
   114f8:	sub	r3, r4, r5
   114fc:	cmp	r3, #6
   11500:	ble	11540 <abort@plt+0x7e8>
   11504:	mov	r2, #7
   11508:	ldr	r1, [pc, #76]	; 1155c <abort@plt+0x804>
   1150c:	sub	r0, r4, #7
   11510:	bl	10d4c <strncmp@plt>
   11514:	cmp	r0, #0
   11518:	bne	11540 <abort@plt+0x7e8>
   1151c:	mov	r2, #3
   11520:	ldr	r1, [pc, #56]	; 11560 <abort@plt+0x808>
   11524:	mov	r0, r4
   11528:	bl	10d4c <strncmp@plt>
   1152c:	cmp	r0, #0
   11530:	movne	r5, r4
   11534:	ldreq	r3, [pc, #40]	; 11564 <abort@plt+0x80c>
   11538:	addeq	r5, r4, #3
   1153c:	streq	r5, [r3]
   11540:	ldr	r3, [pc, #32]	; 11568 <abort@plt+0x810>
   11544:	str	r5, [r3]
   11548:	ldr	r3, [pc, #28]	; 1156c <abort@plt+0x814>
   1154c:	str	r5, [r3]
   11550:	pop	{r4, r5, r6, pc}
   11554:	andeq	r5, r2, r8, lsr #2
   11558:	andeq	r4, r1, fp, asr #3
   1155c:	andeq	r4, r1, r3, lsl #4
   11560:	andeq	r4, r1, fp, lsl #4
   11564:	andeq	r5, r2, r8, lsl r1
   11568:	andeq	r5, r2, r0, asr #2
   1156c:	andeq	r5, r2, ip, lsl r1
   11570:	push	{r4, r5, r6, lr}
   11574:	mov	r2, #48	; 0x30
   11578:	mov	r5, r1
   1157c:	mov	r1, #0
   11580:	mov	r4, r0
   11584:	bl	10cc8 <memset@plt>
   11588:	cmp	r5, #10
   1158c:	bne	11594 <abort@plt+0x83c>
   11590:	bl	10d58 <abort@plt>
   11594:	str	r5, [r4]
   11598:	mov	r0, r4
   1159c:	pop	{r4, r5, r6, pc}
   115a0:	push	{r4, r5, r6, lr}
   115a4:	mov	r4, r0
   115a8:	mov	r5, r1
   115ac:	bl	13814 <abort@plt+0x2abc>
   115b0:	ldrb	r3, [r0]
   115b4:	bic	r3, r3, #32
   115b8:	cmp	r3, #85	; 0x55
   115bc:	bne	1162c <abort@plt+0x8d4>
   115c0:	ldrb	r3, [r0, #1]
   115c4:	bic	r3, r3, #32
   115c8:	cmp	r3, #84	; 0x54
   115cc:	bne	11604 <abort@plt+0x8ac>
   115d0:	ldrb	r3, [r0, #2]
   115d4:	bic	r3, r3, #32
   115d8:	cmp	r3, #70	; 0x46
   115dc:	bne	11604 <abort@plt+0x8ac>
   115e0:	ldrb	r3, [r0, #3]
   115e4:	cmp	r3, #45	; 0x2d
   115e8:	bne	11604 <abort@plt+0x8ac>
   115ec:	ldrb	r3, [r0, #4]
   115f0:	cmp	r3, #56	; 0x38
   115f4:	bne	11604 <abort@plt+0x8ac>
   115f8:	ldrb	r3, [r0, #5]
   115fc:	cmp	r3, #0
   11600:	beq	11618 <abort@plt+0x8c0>
   11604:	ldr	r1, [pc, #144]	; 1169c <abort@plt+0x944>
   11608:	ldr	r0, [pc, #144]	; 116a0 <abort@plt+0x948>
   1160c:	cmp	r5, #9
   11610:	movne	r0, r1
   11614:	pop	{r4, r5, r6, pc}
   11618:	ldrb	r3, [r4]
   1161c:	ldr	r1, [pc, #128]	; 116a4 <abort@plt+0x94c>
   11620:	ldr	r0, [pc, #128]	; 116a8 <abort@plt+0x950>
   11624:	cmp	r3, #96	; 0x60
   11628:	b	11610 <abort@plt+0x8b8>
   1162c:	cmp	r3, #71	; 0x47
   11630:	bne	11604 <abort@plt+0x8ac>
   11634:	ldrb	r3, [r0, #1]
   11638:	bic	r3, r3, #32
   1163c:	cmp	r3, #66	; 0x42
   11640:	bne	11604 <abort@plt+0x8ac>
   11644:	ldrb	r3, [r0, #2]
   11648:	cmp	r3, #49	; 0x31
   1164c:	bne	11604 <abort@plt+0x8ac>
   11650:	ldrb	r3, [r0, #3]
   11654:	cmp	r3, #56	; 0x38
   11658:	bne	11604 <abort@plt+0x8ac>
   1165c:	ldrb	r3, [r0, #4]
   11660:	cmp	r3, #48	; 0x30
   11664:	bne	11604 <abort@plt+0x8ac>
   11668:	ldrb	r3, [r0, #5]
   1166c:	cmp	r3, #51	; 0x33
   11670:	bne	11604 <abort@plt+0x8ac>
   11674:	ldrb	r3, [r0, #6]
   11678:	cmp	r3, #48	; 0x30
   1167c:	bne	11604 <abort@plt+0x8ac>
   11680:	ldrb	r3, [r0, #7]
   11684:	cmp	r3, #0
   11688:	bne	11604 <abort@plt+0x8ac>
   1168c:	ldrb	r3, [r4]
   11690:	ldr	r1, [pc, #20]	; 116ac <abort@plt+0x954>
   11694:	ldr	r0, [pc, #20]	; 116b0 <abort@plt+0x958>
   11698:	b	11624 <abort@plt+0x8cc>
   1169c:	andeq	r4, r1, r5, ror r2
   116a0:	andeq	r4, r1, r3, ror r2
   116a4:	andeq	r4, r1, r8, ror #4
   116a8:	andeq	r4, r1, r4, ror #4
   116ac:	andeq	r4, r1, r0, ror r2
   116b0:	andeq	r4, r1, ip, ror #4
   116b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116b8:	sub	sp, sp, #108	; 0x6c
   116bc:	mov	r8, r0
   116c0:	str	r3, [sp, #36]	; 0x24
   116c4:	mov	r5, r1
   116c8:	str	r2, [sp, #44]	; 0x2c
   116cc:	ldr	sl, [sp, #144]	; 0x90
   116d0:	bl	10c14 <__ctype_get_mb_cur_max@plt>
   116d4:	ldr	r3, [sp, #148]	; 0x94
   116d8:	mov	r7, #0
   116dc:	str	r7, [sp, #48]	; 0x30
   116e0:	lsr	r6, r3, #1
   116e4:	and	r6, r6, #1
   116e8:	mov	r3, #1
   116ec:	str	r3, [sp, #72]	; 0x48
   116f0:	str	r7, [sp, #24]
   116f4:	str	r7, [sp, #32]
   116f8:	str	r7, [sp, #40]	; 0x28
   116fc:	str	r7, [sp, #60]	; 0x3c
   11700:	str	r0, [sp, #76]	; 0x4c
   11704:	cmp	sl, #10
   11708:	ldrls	pc, [pc, sl, lsl #2]
   1170c:	b	11948 <abort@plt+0xbf0>
   11710:	andeq	r1, r1, ip, lsr r7
   11714:	ldrdeq	r2, [r1], -r0
   11718:	andeq	r1, r1, r4, lsl r9
   1171c:	andeq	r1, r1, r0, ror #18
   11720:	strdeq	r1, [r1], -r0
   11724:	andeq	r1, r1, r8, asr #14
   11728:			; <UNDEFINED> instruction: 0x000123b0
   1172c:	andeq	r1, r1, ip, asr #18
   11730:	andeq	r1, r1, r0, asr #16
   11734:	andeq	r1, r1, r0, asr #16
   11738:	andeq	r1, r1, r0, asr #16
   1173c:	mov	r6, #0
   11740:	mov	r4, #0
   11744:	b	11774 <abort@plt+0xa1c>
   11748:	cmp	r6, #0
   1174c:	bne	11970 <abort@plt+0xc18>
   11750:	cmp	r5, #0
   11754:	movne	r3, #34	; 0x22
   11758:	strbne	r3, [r8]
   1175c:	mov	r3, #1
   11760:	str	r3, [sp, #24]
   11764:	str	r3, [sp, #32]
   11768:	mov	r4, #1
   1176c:	ldr	r3, [pc, #3172]	; 123d8 <abort@plt+0x1680>
   11770:	str	r3, [sp, #40]	; 0x28
   11774:	mov	r9, r5
   11778:	mov	r3, #0
   1177c:	str	r7, [sp, #68]	; 0x44
   11780:	str	r3, [sp, #28]
   11784:	ldr	r3, [sp, #36]	; 0x24
   11788:	cmn	r3, #1
   1178c:	bne	1231c <abort@plt+0x15c4>
   11790:	ldr	r3, [sp, #44]	; 0x2c
   11794:	ldr	r2, [sp, #28]
   11798:	ldrb	r3, [r3, r2]
   1179c:	adds	r3, r3, #0
   117a0:	movne	r3, #1
   117a4:	str	r3, [sp, #52]	; 0x34
   117a8:	ldr	r3, [sp, #52]	; 0x34
   117ac:	cmp	r3, #0
   117b0:	bne	11998 <abort@plt+0xc40>
   117b4:	sub	r2, sl, #2
   117b8:	clz	r2, r2
   117bc:	lsr	r2, r2, #5
   117c0:	and	r3, r6, r2
   117c4:	cmp	r4, #0
   117c8:	movne	r3, #0
   117cc:	andeq	r3, r3, #1
   117d0:	cmp	r3, #0
   117d4:	bne	11b60 <abort@plt+0xe08>
   117d8:	eor	r3, r6, #1
   117dc:	ands	r2, r2, r3
   117e0:	beq	12354 <abort@plt+0x15fc>
   117e4:	ldr	r3, [sp, #68]	; 0x44
   117e8:	cmp	r3, #0
   117ec:	beq	1238c <abort@plt+0x1634>
   117f0:	ldr	r3, [sp, #72]	; 0x48
   117f4:	cmp	r3, #0
   117f8:	beq	12330 <abort@plt+0x15d8>
   117fc:	ldr	r3, [sp, #160]	; 0xa0
   11800:	ldr	r2, [sp, #44]	; 0x2c
   11804:	str	r3, [sp, #16]
   11808:	ldr	r3, [sp, #156]	; 0x9c
   1180c:	ldr	r1, [sp, #60]	; 0x3c
   11810:	str	r3, [sp, #12]
   11814:	ldr	r3, [sp, #152]	; 0x98
   11818:	str	r3, [sp, #8]
   1181c:	ldr	r3, [sp, #148]	; 0x94
   11820:	str	r3, [sp, #4]
   11824:	mov	r3, #5
   11828:	str	r3, [sp]
   1182c:	ldr	r3, [sp, #36]	; 0x24
   11830:	mov	r0, r8
   11834:	bl	116b4 <abort@plt+0x95c>
   11838:	mov	r4, r0
   1183c:	b	12380 <abort@plt+0x1628>
   11840:	cmp	sl, #10
   11844:	beq	118a0 <abort@plt+0xb48>
   11848:	ldr	r4, [pc, #2956]	; 123dc <abort@plt+0x1684>
   1184c:	mov	r2, #5
   11850:	mov	r1, r4
   11854:	mov	r0, #0
   11858:	bl	10bcc <dcgettext@plt>
   1185c:	cmp	r0, r4
   11860:	str	r0, [sp, #156]	; 0x9c
   11864:	bne	11874 <abort@plt+0xb1c>
   11868:	mov	r1, sl
   1186c:	bl	115a0 <abort@plt+0x848>
   11870:	str	r0, [sp, #156]	; 0x9c
   11874:	ldr	r4, [pc, #2916]	; 123e0 <abort@plt+0x1688>
   11878:	mov	r2, #5
   1187c:	mov	r1, r4
   11880:	mov	r0, #0
   11884:	bl	10bcc <dcgettext@plt>
   11888:	cmp	r0, r4
   1188c:	str	r0, [sp, #160]	; 0xa0
   11890:	bne	118a0 <abort@plt+0xb48>
   11894:	mov	r1, sl
   11898:	bl	115a0 <abort@plt+0x848>
   1189c:	str	r0, [sp, #160]	; 0xa0
   118a0:	cmp	r6, #0
   118a4:	moveq	r4, r6
   118a8:	beq	118c0 <abort@plt+0xb68>
   118ac:	mov	r4, #0
   118b0:	b	118d0 <abort@plt+0xb78>
   118b4:	cmp	r5, r4
   118b8:	strbhi	r3, [r8, r4]
   118bc:	add	r4, r4, #1
   118c0:	ldr	r3, [sp, #156]	; 0x9c
   118c4:	ldrb	r3, [r3, r4]
   118c8:	cmp	r3, #0
   118cc:	bne	118b4 <abort@plt+0xb5c>
   118d0:	ldr	r0, [sp, #160]	; 0xa0
   118d4:	bl	10ca4 <strlen@plt>
   118d8:	ldr	r3, [sp, #160]	; 0xa0
   118dc:	str	r3, [sp, #40]	; 0x28
   118e0:	mov	r3, #1
   118e4:	str	r3, [sp, #24]
   118e8:	str	r0, [sp, #32]
   118ec:	b	11774 <abort@plt+0xa1c>
   118f0:	mov	r3, #1
   118f4:	cmp	r6, #0
   118f8:	streq	r3, [sp, #24]
   118fc:	beq	1191c <abort@plt+0xbc4>
   11900:	str	r3, [sp, #32]
   11904:	ldr	r3, [pc, #2772]	; 123e0 <abort@plt+0x1688>
   11908:	mov	r4, #0
   1190c:	str	r3, [sp, #40]	; 0x28
   11910:	b	11940 <abort@plt+0xbe8>
   11914:	cmp	r6, #0
   11918:	bne	11988 <abort@plt+0xc30>
   1191c:	cmp	r5, #0
   11920:	movne	r3, #39	; 0x27
   11924:	strbne	r3, [r8]
   11928:	mov	r3, #1
   1192c:	str	r3, [sp, #32]
   11930:	mov	r6, #0
   11934:	ldr	r3, [pc, #2724]	; 123e0 <abort@plt+0x1688>
   11938:	mov	r4, #1
   1193c:	str	r3, [sp, #40]	; 0x28
   11940:	mov	sl, #2
   11944:	b	11774 <abort@plt+0xa1c>
   11948:	bl	10d58 <abort@plt>
   1194c:	mov	r6, #0
   11950:	mov	r3, #1
   11954:	str	r3, [sp, #24]
   11958:	mov	r4, r6
   1195c:	b	11774 <abort@plt+0xa1c>
   11960:	mov	r6, #1
   11964:	str	r6, [sp, #24]
   11968:	str	r6, [sp, #32]
   1196c:	b	11904 <abort@plt+0xbac>
   11970:	mov	r3, #1
   11974:	str	r3, [sp, #32]
   11978:	ldr	r3, [pc, #2648]	; 123d8 <abort@plt+0x1680>
   1197c:	str	r6, [sp, #24]
   11980:	str	r3, [sp, #40]	; 0x28
   11984:	b	11740 <abort@plt+0x9e8>
   11988:	mov	r3, #1
   1198c:	str	r3, [sp, #32]
   11990:	ldr	r3, [pc, #2632]	; 123e0 <abort@plt+0x1688>
   11994:	b	11980 <abort@plt+0xc28>
   11998:	ldr	r3, [sp, #32]
   1199c:	ldr	fp, [sp, #24]
   119a0:	cmp	sl, #2
   119a4:	moveq	fp, #0
   119a8:	andne	fp, fp, #1
   119ac:	adds	r5, r3, #0
   119b0:	movne	r5, #1
   119b4:	ands	r3, r5, fp
   119b8:	str	r3, [sp, #64]	; 0x40
   119bc:	beq	11a8c <abort@plt+0xd34>
   119c0:	ldr	r2, [sp, #32]
   119c4:	ldr	r3, [sp, #28]
   119c8:	add	r7, r3, r2
   119cc:	mov	r3, r2
   119d0:	ldr	r2, [sp, #36]	; 0x24
   119d4:	cmp	r3, #1
   119d8:	movls	r3, #0
   119dc:	movhi	r3, #1
   119e0:	cmn	r2, #1
   119e4:	movne	r3, #0
   119e8:	cmp	r3, #0
   119ec:	beq	119fc <abort@plt+0xca4>
   119f0:	ldr	r0, [sp, #44]	; 0x2c
   119f4:	bl	10ca4 <strlen@plt>
   119f8:	str	r0, [sp, #36]	; 0x24
   119fc:	ldr	r3, [sp, #36]	; 0x24
   11a00:	cmp	r3, r7
   11a04:	bcc	11a84 <abort@plt+0xd2c>
   11a08:	ldr	r3, [sp, #44]	; 0x2c
   11a0c:	ldr	r0, [sp, #28]
   11a10:	ldr	r2, [sp, #32]
   11a14:	ldr	r1, [sp, #40]	; 0x28
   11a18:	add	r0, r3, r0
   11a1c:	bl	10bb4 <memcmp@plt>
   11a20:	cmp	r0, #0
   11a24:	bne	11a84 <abort@plt+0xd2c>
   11a28:	cmp	r6, #0
   11a2c:	beq	11a8c <abort@plt+0xd34>
   11a30:	str	r6, [sp, #24]
   11a34:	ldr	r3, [sp, #24]
   11a38:	ldr	r2, [sp, #44]	; 0x2c
   11a3c:	cmp	sl, #2
   11a40:	movne	r3, #0
   11a44:	andeq	r3, r3, #1
   11a48:	cmp	r3, #0
   11a4c:	ldr	r3, [sp, #160]	; 0xa0
   11a50:	movne	sl, #4
   11a54:	str	r3, [sp, #16]
   11a58:	ldr	r3, [sp, #156]	; 0x9c
   11a5c:	str	sl, [sp]
   11a60:	str	r3, [sp, #12]
   11a64:	mov	r3, #0
   11a68:	str	r3, [sp, #8]
   11a6c:	ldr	r3, [sp, #148]	; 0x94
   11a70:	mov	r1, r9
   11a74:	bic	r3, r3, #2
   11a78:	str	r3, [sp, #4]
   11a7c:	ldr	r3, [sp, #36]	; 0x24
   11a80:	b	11830 <abort@plt+0xad8>
   11a84:	mov	r3, #0
   11a88:	str	r3, [sp, #64]	; 0x40
   11a8c:	ldr	r2, [sp, #28]
   11a90:	ldr	r3, [sp, #44]	; 0x2c
   11a94:	add	r3, r3, r2
   11a98:	str	r3, [sp, #80]	; 0x50
   11a9c:	ldr	r3, [sp, #44]	; 0x2c
   11aa0:	ldrb	r7, [r3, r2]
   11aa4:	cmp	r7, #58	; 0x3a
   11aa8:	bhi	11c10 <abort@plt+0xeb8>
   11aac:	cmp	r7, #43	; 0x2b
   11ab0:	bcs	11c64 <abort@plt+0xf0c>
   11ab4:	cmp	r7, #32
   11ab8:	beq	11cbc <abort@plt+0xf64>
   11abc:	bhi	11b68 <abort@plt+0xe10>
   11ac0:	cmp	r7, #9
   11ac4:	beq	11f70 <abort@plt+0x1218>
   11ac8:	bhi	11b2c <abort@plt+0xdd4>
   11acc:	cmp	r7, #7
   11ad0:	beq	1201c <abort@plt+0x12c4>
   11ad4:	bhi	11cd8 <abort@plt+0xf80>
   11ad8:	cmp	r7, #0
   11adc:	beq	11cf4 <abort@plt+0xf9c>
   11ae0:	ldr	r3, [sp, #76]	; 0x4c
   11ae4:	cmp	r3, #1
   11ae8:	bne	12060 <abort@plt+0x1308>
   11aec:	bl	10c8c <__ctype_b_loc@plt>
   11af0:	sxth	r3, r7
   11af4:	lsl	r3, r3, #1
   11af8:	ldr	r2, [r0]
   11afc:	ldrh	r5, [r2, r3]
   11b00:	ldr	r3, [sp, #76]	; 0x4c
   11b04:	str	r3, [sp, #56]	; 0x38
   11b08:	lsr	r5, r5, #14
   11b0c:	and	r5, r5, #1
   11b10:	ldr	r3, [sp, #24]
   11b14:	eor	fp, r5, #1
   11b18:	and	fp, fp, r3
   11b1c:	ands	fp, fp, #255	; 0xff
   11b20:	beq	11ea8 <abort@plt+0x1150>
   11b24:	mov	r5, #0
   11b28:	b	1210c <abort@plt+0x13b4>
   11b2c:	cmp	r7, #11
   11b30:	beq	11f78 <abort@plt+0x1220>
   11b34:	bcc	12014 <abort@plt+0x12bc>
   11b38:	cmp	r7, #12
   11b3c:	beq	12024 <abort@plt+0x12cc>
   11b40:	cmp	r7, #13
   11b44:	moveq	r3, #114	; 0x72
   11b48:	bne	11ae0 <abort@plt+0xd88>
   11b4c:	cmp	sl, #2
   11b50:	movne	r2, #0
   11b54:	andeq	r2, r6, #1
   11b58:	cmp	r2, #0
   11b5c:	beq	11cdc <abort@plt+0xf84>
   11b60:	mov	sl, #2
   11b64:	b	11a34 <abort@plt+0xcdc>
   11b68:	cmp	r7, #37	; 0x25
   11b6c:	beq	11c64 <abort@plt+0xf0c>
   11b70:	bhi	11b84 <abort@plt+0xe2c>
   11b74:	cmp	r7, #35	; 0x23
   11b78:	beq	11cb0 <abort@plt+0xf58>
   11b7c:	mov	r5, #0
   11b80:	b	11cc0 <abort@plt+0xf68>
   11b84:	cmp	r7, #39	; 0x27
   11b88:	bne	11b7c <abort@plt+0xe24>
   11b8c:	cmp	sl, #2
   11b90:	ldrne	r5, [sp, #52]	; 0x34
   11b94:	movne	r3, r5
   11b98:	strne	r3, [sp, #68]	; 0x44
   11b9c:	bne	11c68 <abort@plt+0xf10>
   11ba0:	cmp	r6, #0
   11ba4:	bne	11a34 <abort@plt+0xcdc>
   11ba8:	ldr	r2, [sp, #60]	; 0x3c
   11bac:	adds	r3, r9, #0
   11bb0:	movne	r3, #1
   11bb4:	cmp	r2, #0
   11bb8:	movne	r3, #0
   11bbc:	cmp	r3, #0
   11bc0:	strne	r9, [sp, #60]	; 0x3c
   11bc4:	movne	r9, #0
   11bc8:	bne	11bd8 <abort@plt+0xe80>
   11bcc:	cmp	r9, r4
   11bd0:	movhi	r3, #39	; 0x27
   11bd4:	strbhi	r3, [r8, r4]
   11bd8:	add	r3, r4, #1
   11bdc:	cmp	r3, r9
   11be0:	movcc	r2, #92	; 0x5c
   11be4:	strbcc	r2, [r8, r3]
   11be8:	add	r3, r4, #2
   11bec:	cmp	r3, r9
   11bf0:	ldr	r5, [sp, #52]	; 0x34
   11bf4:	movcc	r2, #39	; 0x27
   11bf8:	strbcc	r2, [r8, r3]
   11bfc:	add	r4, r4, #3
   11c00:	mov	fp, r6
   11c04:	str	r5, [sp, #68]	; 0x44
   11c08:	str	r6, [sp, #48]	; 0x30
   11c0c:	b	11ea8 <abort@plt+0x1150>
   11c10:	cmp	r7, #94	; 0x5e
   11c14:	beq	11b7c <abort@plt+0xe24>
   11c18:	bhi	11c70 <abort@plt+0xf18>
   11c1c:	cmp	r7, #90	; 0x5a
   11c20:	bhi	11c58 <abort@plt+0xf00>
   11c24:	cmp	r7, #65	; 0x41
   11c28:	bcs	11c64 <abort@plt+0xf0c>
   11c2c:	cmp	r7, #62	; 0x3e
   11c30:	bls	11b7c <abort@plt+0xe24>
   11c34:	cmp	r7, #63	; 0x3f
   11c38:	bne	11ae0 <abort@plt+0xd88>
   11c3c:	cmp	sl, #2
   11c40:	beq	11de4 <abort@plt+0x108c>
   11c44:	cmp	sl, #5
   11c48:	beq	11df4 <abort@plt+0x109c>
   11c4c:	mov	fp, #0
   11c50:	mov	r5, fp
   11c54:	b	11ea8 <abort@plt+0x1150>
   11c58:	cmp	r7, #92	; 0x5c
   11c5c:	beq	11f80 <abort@plt+0x1228>
   11c60:	bls	11b7c <abort@plt+0xe24>
   11c64:	ldr	r5, [sp, #52]	; 0x34
   11c68:	mov	fp, #0
   11c6c:	b	11ea8 <abort@plt+0x1150>
   11c70:	cmp	r7, #122	; 0x7a
   11c74:	bhi	11c94 <abort@plt+0xf3c>
   11c78:	cmp	r7, #97	; 0x61
   11c7c:	bcs	11c64 <abort@plt+0xf0c>
   11c80:	cmp	r7, #95	; 0x5f
   11c84:	beq	11c64 <abort@plt+0xf0c>
   11c88:	cmp	r7, #96	; 0x60
   11c8c:	bne	11ae0 <abort@plt+0xd88>
   11c90:	b	11b7c <abort@plt+0xe24>
   11c94:	cmp	r7, #124	; 0x7c
   11c98:	beq	11b7c <abort@plt+0xe24>
   11c9c:	bcc	1202c <abort@plt+0x12d4>
   11ca0:	cmp	r7, #125	; 0x7d
   11ca4:	beq	1202c <abort@plt+0x12d4>
   11ca8:	cmp	r7, #126	; 0x7e
   11cac:	bne	11ae0 <abort@plt+0xd88>
   11cb0:	ldr	r3, [sp, #28]
   11cb4:	cmp	r3, #0
   11cb8:	bne	11dec <abort@plt+0x1094>
   11cbc:	ldr	r5, [sp, #52]	; 0x34
   11cc0:	cmp	sl, #2
   11cc4:	movne	fp, #0
   11cc8:	andeq	fp, r6, #1
   11ccc:	cmp	fp, #0
   11cd0:	beq	11ea8 <abort@plt+0x1150>
   11cd4:	b	11b60 <abort@plt+0xe08>
   11cd8:	mov	r3, #98	; 0x62
   11cdc:	ldr	r2, [sp, #24]
   11ce0:	cmp	r2, #0
   11ce4:	beq	11dec <abort@plt+0x1094>
   11ce8:	mov	r7, r3
   11cec:	mov	r5, #0
   11cf0:	b	11f00 <abort@plt+0x11a8>
   11cf4:	ldr	r3, [sp, #24]
   11cf8:	cmp	r3, #0
   11cfc:	beq	11dc8 <abort@plt+0x1070>
   11d00:	cmp	r6, #0
   11d04:	bne	11a30 <abort@plt+0xcd8>
   11d08:	ldr	r3, [sp, #48]	; 0x30
   11d0c:	eor	r2, r3, #1
   11d10:	cmp	sl, #2
   11d14:	movne	r2, #0
   11d18:	andeq	r2, r2, #1
   11d1c:	cmp	r2, #0
   11d20:	moveq	r3, r4
   11d24:	beq	11d5c <abort@plt+0x1004>
   11d28:	cmp	r9, r4
   11d2c:	movhi	r3, #39	; 0x27
   11d30:	strbhi	r3, [r8, r4]
   11d34:	add	r3, r4, #1
   11d38:	cmp	r9, r3
   11d3c:	movhi	r1, #36	; 0x24
   11d40:	strbhi	r1, [r8, r3]
   11d44:	add	r3, r4, #2
   11d48:	cmp	r9, r3
   11d4c:	movhi	r1, #39	; 0x27
   11d50:	strbhi	r1, [r8, r3]
   11d54:	add	r3, r4, #3
   11d58:	str	r2, [sp, #48]	; 0x30
   11d5c:	cmp	r9, r3
   11d60:	movhi	r2, #92	; 0x5c
   11d64:	strbhi	r2, [r8, r3]
   11d68:	cmp	fp, #0
   11d6c:	add	r4, r3, #1
   11d70:	beq	12300 <abort@plt+0x15a8>
   11d74:	ldr	r2, [sp, #28]
   11d78:	ldr	r1, [sp, #36]	; 0x24
   11d7c:	add	r2, r2, #1
   11d80:	cmp	r1, r2
   11d84:	bls	11dc0 <abort@plt+0x1068>
   11d88:	ldr	r1, [sp, #44]	; 0x2c
   11d8c:	mov	r7, #48	; 0x30
   11d90:	ldrb	r2, [r1, r2]
   11d94:	sub	r2, r2, #48	; 0x30
   11d98:	cmp	r2, #9
   11d9c:	movhi	r5, r6
   11da0:	bhi	11ea8 <abort@plt+0x1150>
   11da4:	cmp	r9, r4
   11da8:	add	r2, r3, #2
   11dac:	strbhi	r7, [r8, r4]
   11db0:	cmp	r9, r2
   11db4:	add	r4, r3, #3
   11db8:	movhi	r1, #48	; 0x30
   11dbc:	strbhi	r1, [r8, r2]
   11dc0:	mov	r5, r6
   11dc4:	b	12308 <abort@plt+0x15b0>
   11dc8:	ldr	r3, [sp, #148]	; 0x94
   11dcc:	tst	r3, #1
   11dd0:	ldreq	r5, [sp, #24]
   11dd4:	beq	12314 <abort@plt+0x15bc>
   11dd8:	ldr	r3, [sp, #28]
   11ddc:	add	r3, r3, #1
   11de0:	b	11780 <abort@plt+0xa28>
   11de4:	cmp	r6, #0
   11de8:	bne	11a34 <abort@plt+0xcdc>
   11dec:	mov	r5, #0
   11df0:	b	11c68 <abort@plt+0xf10>
   11df4:	ldr	r3, [sp, #148]	; 0x94
   11df8:	tst	r3, #4
   11dfc:	beq	11dec <abort@plt+0x1094>
   11e00:	ldr	r3, [sp, #28]
   11e04:	add	r2, r3, #2
   11e08:	ldr	r3, [sp, #36]	; 0x24
   11e0c:	cmp	r3, r2
   11e10:	bls	11dec <abort@plt+0x1094>
   11e14:	ldr	r3, [sp, #44]	; 0x2c
   11e18:	ldr	r1, [sp, #28]
   11e1c:	add	r3, r3, r1
   11e20:	ldrb	r0, [r3, #1]
   11e24:	cmp	r0, #63	; 0x3f
   11e28:	bne	11dec <abort@plt+0x1094>
   11e2c:	ldr	r3, [sp, #44]	; 0x2c
   11e30:	ldrb	r1, [r3, r2]
   11e34:	sub	r3, r1, #33	; 0x21
   11e38:	uxtb	r3, r3
   11e3c:	cmp	r3, #29
   11e40:	bhi	12310 <abort@plt+0x15b8>
   11e44:	mov	ip, #1
   11e48:	ldr	r5, [pc, #1428]	; 123e4 <abort@plt+0x168c>
   11e4c:	ands	r5, r5, ip, lsl r3
   11e50:	beq	11c68 <abort@plt+0xf10>
   11e54:	cmp	r6, #0
   11e58:	bne	11a34 <abort@plt+0xcdc>
   11e5c:	add	r3, r4, #1
   11e60:	cmp	r9, r4
   11e64:	strbhi	r0, [r8, r4]
   11e68:	cmp	r9, r3
   11e6c:	movhi	r0, #34	; 0x22
   11e70:	strbhi	r0, [r8, r3]
   11e74:	add	r3, r4, #2
   11e78:	cmp	r9, r3
   11e7c:	movhi	r0, #34	; 0x22
   11e80:	strbhi	r0, [r8, r3]
   11e84:	add	r3, r4, #3
   11e88:	cmp	r9, r3
   11e8c:	add	r4, r4, #4
   11e90:	mov	r5, r6
   11e94:	mov	fp, r6
   11e98:	mov	r7, r1
   11e9c:	movhi	r0, #63	; 0x3f
   11ea0:	strbhi	r0, [r8, r3]
   11ea4:	str	r2, [sp, #28]
   11ea8:	ldr	r3, [sp, #24]
   11eac:	eor	r3, r3, #1
   11eb0:	cmp	sl, #2
   11eb4:	orreq	r3, r3, #1
   11eb8:	eor	r3, r3, #1
   11ebc:	orr	r3, r6, r3
   11ec0:	tst	r3, #255	; 0xff
   11ec4:	beq	11ef4 <abort@plt+0x119c>
   11ec8:	ldr	r3, [sp, #152]	; 0x98
   11ecc:	cmp	r3, #0
   11ed0:	beq	11ef4 <abort@plt+0x119c>
   11ed4:	lsr	r2, r7, #5
   11ed8:	ldr	r1, [sp, #152]	; 0x98
   11edc:	uxtb	r2, r2
   11ee0:	and	r3, r7, #31
   11ee4:	ldr	r2, [r1, r2, lsl #2]
   11ee8:	lsr	r3, r2, r3
   11eec:	tst	r3, #1
   11ef0:	bne	11f00 <abort@plt+0x11a8>
   11ef4:	ldr	r3, [sp, #64]	; 0x40
   11ef8:	cmp	r3, #0
   11efc:	beq	11f98 <abort@plt+0x1240>
   11f00:	cmp	r6, #0
   11f04:	bne	11a34 <abort@plt+0xcdc>
   11f08:	ldr	r3, [sp, #48]	; 0x30
   11f0c:	eor	r3, r3, #1
   11f10:	cmp	sl, #2
   11f14:	movne	r3, #0
   11f18:	andeq	r3, r3, #1
   11f1c:	cmp	r3, #0
   11f20:	beq	11f58 <abort@plt+0x1200>
   11f24:	cmp	r9, r4
   11f28:	movhi	r2, #39	; 0x27
   11f2c:	strbhi	r2, [r8, r4]
   11f30:	add	r2, r4, #1
   11f34:	cmp	r9, r2
   11f38:	movhi	r1, #36	; 0x24
   11f3c:	strbhi	r1, [r8, r2]
   11f40:	add	r2, r4, #2
   11f44:	cmp	r9, r2
   11f48:	add	r4, r4, #3
   11f4c:	movhi	r1, #39	; 0x27
   11f50:	strbhi	r1, [r8, r2]
   11f54:	str	r3, [sp, #48]	; 0x30
   11f58:	cmp	r9, r4
   11f5c:	movhi	r3, #92	; 0x5c
   11f60:	strbhi	r3, [r8, r4]
   11f64:	ldr	fp, [sp, #52]	; 0x34
   11f68:	add	r4, r4, #1
   11f6c:	b	11f98 <abort@plt+0x1240>
   11f70:	mov	r3, #116	; 0x74
   11f74:	b	11b4c <abort@plt+0xdf4>
   11f78:	mov	r3, #118	; 0x76
   11f7c:	b	11cdc <abort@plt+0xf84>
   11f80:	cmp	sl, #2
   11f84:	bne	11ff4 <abort@plt+0x129c>
   11f88:	cmp	r6, #0
   11f8c:	bne	11a34 <abort@plt+0xcdc>
   11f90:	mov	r5, r6
   11f94:	mov	fp, r6
   11f98:	ldr	r3, [sp, #48]	; 0x30
   11f9c:	eor	fp, fp, #1
   11fa0:	and	fp, fp, r3
   11fa4:	tst	fp, #255	; 0xff
   11fa8:	beq	11fd4 <abort@plt+0x127c>
   11fac:	cmp	r9, r4
   11fb0:	movhi	r3, #39	; 0x27
   11fb4:	strbhi	r3, [r8, r4]
   11fb8:	add	r3, r4, #1
   11fbc:	cmp	r9, r3
   11fc0:	movhi	r2, #39	; 0x27
   11fc4:	add	r4, r4, #2
   11fc8:	strbhi	r2, [r8, r3]
   11fcc:	mov	r3, #0
   11fd0:	str	r3, [sp, #48]	; 0x30
   11fd4:	cmp	r9, r4
   11fd8:	strbhi	r7, [r8, r4]
   11fdc:	ldr	r3, [sp, #72]	; 0x48
   11fe0:	cmp	r5, #0
   11fe4:	moveq	r3, #0
   11fe8:	add	r4, r4, #1
   11fec:	str	r3, [sp, #72]	; 0x48
   11ff0:	b	11dd8 <abort@plt+0x1080>
   11ff4:	ldr	r3, [sp, #24]
   11ff8:	and	r3, r3, r6
   11ffc:	tst	r5, r3
   12000:	moveq	r3, r7
   12004:	beq	11b4c <abort@plt+0xdf4>
   12008:	mov	fp, #0
   1200c:	mov	r5, fp
   12010:	b	11f98 <abort@plt+0x1240>
   12014:	mov	r3, #110	; 0x6e
   12018:	b	11b4c <abort@plt+0xdf4>
   1201c:	mov	r3, #97	; 0x61
   12020:	b	11cdc <abort@plt+0xf84>
   12024:	mov	r3, #102	; 0x66
   12028:	b	11cdc <abort@plt+0xf84>
   1202c:	ldr	r3, [sp, #36]	; 0x24
   12030:	cmn	r3, #1
   12034:	bne	12054 <abort@plt+0x12fc>
   12038:	ldr	r3, [sp, #44]	; 0x2c
   1203c:	ldrb	r3, [r3, #1]
   12040:	adds	r3, r3, #0
   12044:	movne	r3, #1
   12048:	cmp	r3, #0
   1204c:	bne	11dec <abort@plt+0x1094>
   12050:	b	11cb0 <abort@plt+0xf58>
   12054:	ldr	r3, [sp, #36]	; 0x24
   12058:	subs	r3, r3, #1
   1205c:	b	12044 <abort@plt+0x12ec>
   12060:	mov	r3, #0
   12064:	str	r3, [sp, #96]	; 0x60
   12068:	str	r3, [sp, #100]	; 0x64
   1206c:	ldr	r3, [sp, #36]	; 0x24
   12070:	cmn	r3, #1
   12074:	bne	12084 <abort@plt+0x132c>
   12078:	ldr	r0, [sp, #44]	; 0x2c
   1207c:	bl	10ca4 <strlen@plt>
   12080:	str	r0, [sp, #36]	; 0x24
   12084:	ldr	r5, [sp, #52]	; 0x34
   12088:	mov	r3, #0
   1208c:	str	r3, [sp, #56]	; 0x38
   12090:	ldr	r3, [sp, #28]
   12094:	ldr	r2, [sp, #56]	; 0x38
   12098:	ldr	r1, [sp, #36]	; 0x24
   1209c:	add	r2, r3, r2
   120a0:	ldr	r3, [sp, #44]	; 0x2c
   120a4:	add	r0, sp, #92	; 0x5c
   120a8:	add	fp, r3, r2
   120ac:	sub	r2, r1, r2
   120b0:	add	r3, sp, #96	; 0x60
   120b4:	mov	r1, fp
   120b8:	bl	13848 <abort@plt+0x2af0>
   120bc:	subs	r2, r0, #0
   120c0:	beq	12100 <abort@plt+0x13a8>
   120c4:	cmn	r2, #1
   120c8:	beq	122d8 <abort@plt+0x1580>
   120cc:	cmn	r2, #2
   120d0:	bne	12248 <abort@plt+0x14f0>
   120d4:	ldr	r2, [sp, #56]	; 0x38
   120d8:	ldr	r3, [sp, #28]
   120dc:	add	r3, r3, r2
   120e0:	ldr	r2, [sp, #36]	; 0x24
   120e4:	cmp	r2, r3
   120e8:	bls	122d8 <abort@plt+0x1580>
   120ec:	ldr	r3, [sp, #80]	; 0x50
   120f0:	ldr	r2, [sp, #56]	; 0x38
   120f4:	ldrb	r5, [r3, r2]
   120f8:	cmp	r5, #0
   120fc:	bne	12238 <abort@plt+0x14e0>
   12100:	ldr	r3, [sp, #56]	; 0x38
   12104:	cmp	r3, #1
   12108:	bls	11b10 <abort@plt+0xdb8>
   1210c:	ldr	r2, [sp, #56]	; 0x38
   12110:	ldr	r3, [sp, #28]
   12114:	mov	fp, #0
   12118:	add	r3, r3, r2
   1211c:	ldr	r2, [sp, #24]
   12120:	str	r3, [sp, #52]	; 0x34
   12124:	eor	r3, r5, #1
   12128:	and	r3, r3, r2
   1212c:	mov	ip, #92	; 0x5c
   12130:	uxtb	r3, r3
   12134:	mov	r2, #39	; 0x27
   12138:	cmp	r3, #0
   1213c:	beq	122e0 <abort@plt+0x1588>
   12140:	cmp	r6, #0
   12144:	bne	11a30 <abort@plt+0xcd8>
   12148:	ldr	r1, [sp, #48]	; 0x30
   1214c:	eor	r1, r1, #1
   12150:	cmp	sl, #2
   12154:	movne	r1, #0
   12158:	andeq	r1, r1, #1
   1215c:	cmp	r1, #0
   12160:	beq	12190 <abort@plt+0x1438>
   12164:	add	r0, r4, #1
   12168:	cmp	r9, r4
   1216c:	strbhi	r2, [r8, r4]
   12170:	cmp	r9, r0
   12174:	movhi	lr, #36	; 0x24
   12178:	strbhi	lr, [r8, r0]
   1217c:	add	r0, r4, #2
   12180:	add	r4, r4, #3
   12184:	cmp	r9, r0
   12188:	strbhi	r2, [r8, r0]
   1218c:	str	r1, [sp, #48]	; 0x30
   12190:	add	r0, r4, #1
   12194:	cmp	r9, r4
   12198:	strbhi	ip, [r8, r4]
   1219c:	cmp	r9, r0
   121a0:	lsrhi	r1, r7, #6
   121a4:	addhi	r1, r1, #48	; 0x30
   121a8:	strbhi	r1, [r8, r0]
   121ac:	add	r0, r4, #2
   121b0:	cmp	r9, r0
   121b4:	lsrhi	r1, r7, #3
   121b8:	and	r7, r7, #7
   121bc:	andhi	r1, r1, #7
   121c0:	add	r4, r4, #3
   121c4:	add	r7, r7, #48	; 0x30
   121c8:	mov	fp, r3
   121cc:	addhi	r1, r1, #48	; 0x30
   121d0:	strbhi	r1, [r8, r0]
   121d4:	ldr	r1, [sp, #28]
   121d8:	ldr	r0, [sp, #52]	; 0x34
   121dc:	add	r1, r1, #1
   121e0:	cmp	r0, r1
   121e4:	bls	11f98 <abort@plt+0x1240>
   121e8:	ldr	lr, [sp, #48]	; 0x30
   121ec:	eor	r0, fp, #1
   121f0:	and	r0, r0, lr
   121f4:	tst	r0, #255	; 0xff
   121f8:	beq	1221c <abort@plt+0x14c4>
   121fc:	add	r0, r4, #1
   12200:	cmp	r9, r4
   12204:	strbhi	r2, [r8, r4]
   12208:	cmp	r9, r0
   1220c:	add	r4, r4, #2
   12210:	strbhi	r2, [r8, r0]
   12214:	mov	r0, #0
   12218:	str	r0, [sp, #48]	; 0x30
   1221c:	ldr	r0, [sp, #44]	; 0x2c
   12220:	cmp	r9, r4
   12224:	strbhi	r7, [r8, r4]
   12228:	str	r1, [sp, #28]
   1222c:	add	r4, r4, #1
   12230:	ldrb	r7, [r0, r1]
   12234:	b	12138 <abort@plt+0x13e0>
   12238:	ldr	r3, [sp, #56]	; 0x38
   1223c:	add	r3, r3, #1
   12240:	str	r3, [sp, #56]	; 0x38
   12244:	b	120d4 <abort@plt+0x137c>
   12248:	cmp	sl, #2
   1224c:	movne	r3, #0
   12250:	andeq	r3, r6, #1
   12254:	cmp	r3, #0
   12258:	movne	r1, #1
   1225c:	bne	122b8 <abort@plt+0x1560>
   12260:	ldr	r0, [sp, #92]	; 0x5c
   12264:	str	r2, [sp, #84]	; 0x54
   12268:	bl	10bfc <iswprint@plt>
   1226c:	ldr	r3, [sp, #56]	; 0x38
   12270:	ldr	r2, [sp, #84]	; 0x54
   12274:	add	r3, r3, r2
   12278:	str	r3, [sp, #56]	; 0x38
   1227c:	cmp	r0, #0
   12280:	add	r0, sp, #96	; 0x60
   12284:	moveq	r5, #0
   12288:	bl	10ba8 <mbsinit@plt>
   1228c:	cmp	r0, #0
   12290:	beq	12090 <abort@plt+0x1338>
   12294:	b	12100 <abort@plt+0x13a8>
   12298:	ldrb	r3, [fp, r1]
   1229c:	cmp	r3, #94	; 0x5e
   122a0:	beq	11b60 <abort@plt+0xe08>
   122a4:	bhi	122c4 <abort@plt+0x156c>
   122a8:	sub	r3, r3, #91	; 0x5b
   122ac:	cmp	r3, #1
   122b0:	bls	11b60 <abort@plt+0xe08>
   122b4:	add	r1, r1, #1
   122b8:	cmp	r1, r2
   122bc:	bne	12298 <abort@plt+0x1540>
   122c0:	b	12260 <abort@plt+0x1508>
   122c4:	cmp	r3, #96	; 0x60
   122c8:	beq	11b60 <abort@plt+0xe08>
   122cc:	cmp	r3, #124	; 0x7c
   122d0:	bne	122b4 <abort@plt+0x155c>
   122d4:	b	11b60 <abort@plt+0xe08>
   122d8:	mov	r5, #0
   122dc:	b	12100 <abort@plt+0x13a8>
   122e0:	ldr	r1, [sp, #64]	; 0x40
   122e4:	cmp	r1, #0
   122e8:	beq	121d4 <abort@plt+0x147c>
   122ec:	cmp	r9, r4
   122f0:	strbhi	ip, [r8, r4]
   122f4:	str	r3, [sp, #64]	; 0x40
   122f8:	add	r4, r4, #1
   122fc:	b	121d4 <abort@plt+0x147c>
   12300:	mov	r5, fp
   12304:	ldr	fp, [sp, #24]
   12308:	mov	r7, #48	; 0x30
   1230c:	b	11ea8 <abort@plt+0x1150>
   12310:	mov	r5, #0
   12314:	mov	fp, r5
   12318:	b	11ea8 <abort@plt+0x1150>
   1231c:	ldr	r3, [sp, #36]	; 0x24
   12320:	ldr	r2, [sp, #28]
   12324:	subs	r3, r3, r2
   12328:	movne	r3, #1
   1232c:	b	117a4 <abort@plt+0xa4c>
   12330:	ldr	r3, [sp, #60]	; 0x3c
   12334:	clz	r7, r9
   12338:	cmp	r3, #0
   1233c:	lsr	r7, r7, #5
   12340:	moveq	r7, #0
   12344:	cmp	r7, #0
   12348:	mov	r5, r3
   1234c:	bne	11704 <abort@plt+0x9ac>
   12350:	ldr	r3, [sp, #68]	; 0x44
   12354:	ldr	r2, [sp, #40]	; 0x28
   12358:	cmp	r2, #0
   1235c:	moveq	r3, #0
   12360:	andne	r3, r3, #1
   12364:	cmp	r3, #0
   12368:	movne	r3, r2
   1236c:	subne	r2, r3, #1
   12370:	bne	123a0 <abort@plt+0x1648>
   12374:	cmp	r9, r4
   12378:	movhi	r3, #0
   1237c:	strbhi	r3, [r8, r4]
   12380:	mov	r0, r4
   12384:	add	sp, sp, #108	; 0x6c
   12388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1238c:	mov	r3, r2
   12390:	b	12354 <abort@plt+0x15fc>
   12394:	cmp	r9, r4
   12398:	strbhi	r3, [r8, r4]
   1239c:	add	r4, r4, #1
   123a0:	ldrb	r3, [r2, #1]!
   123a4:	cmp	r3, #0
   123a8:	bne	12394 <abort@plt+0x163c>
   123ac:	b	12374 <abort@plt+0x161c>
   123b0:	ldr	r3, [pc, #32]	; 123d8 <abort@plt+0x1680>
   123b4:	mov	r6, #1
   123b8:	str	r6, [sp, #24]
   123bc:	str	r6, [sp, #32]
   123c0:	str	r3, [sp, #40]	; 0x28
   123c4:	mov	r4, #0
   123c8:	mov	sl, #5
   123cc:	b	11774 <abort@plt+0xa1c>
   123d0:	mov	r6, #1
   123d4:	b	11968 <abort@plt+0xc10>
   123d8:	andeq	r4, r1, r3, ror r2
   123dc:	andeq	r4, r1, r7, ror r2
   123e0:	andeq	r4, r1, r5, ror r2
   123e4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   123e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123ec:	sub	sp, sp, #52	; 0x34
   123f0:	mov	r6, r0
   123f4:	mov	r5, r3
   123f8:	mov	r8, r1
   123fc:	mov	r9, r2
   12400:	bl	10cb0 <__errno_location@plt>
   12404:	ldr	r7, [pc, #380]	; 12588 <abort@plt+0x1830>
   12408:	cmn	r6, #-2147483647	; 0x80000001
   1240c:	ldr	r4, [r7]
   12410:	ldr	r3, [r0]
   12414:	str	r0, [sp, #24]
   12418:	str	r3, [sp, #32]
   1241c:	movne	r3, #0
   12420:	moveq	r3, #1
   12424:	orrs	r3, r3, r6, lsr #31
   12428:	beq	12430 <abort@plt+0x16d8>
   1242c:	bl	10d58 <abort@plt>
   12430:	ldr	r2, [r7, #4]
   12434:	cmp	r6, r2
   12438:	blt	124a8 <abort@plt+0x1750>
   1243c:	add	r1, sp, #48	; 0x30
   12440:	add	sl, r7, #8
   12444:	str	r2, [r1, #-4]!
   12448:	cmp	r4, sl
   1244c:	mov	r3, #8
   12450:	sub	r2, r6, r2
   12454:	movne	r0, r4
   12458:	str	r3, [sp]
   1245c:	add	r2, r2, #1
   12460:	mvn	r3, #-2147483648	; 0x80000000
   12464:	moveq	r0, #0
   12468:	bl	1317c <abort@plt+0x2424>
   1246c:	cmp	r4, sl
   12470:	ldr	r2, [sp, #44]	; 0x2c
   12474:	mov	fp, r0
   12478:	str	r0, [r7]
   1247c:	ldmeq	r4, {r0, r1}
   12480:	mov	r4, fp
   12484:	stmeq	fp, {r0, r1}
   12488:	ldr	r0, [r7, #4]
   1248c:	mov	r1, #0
   12490:	sub	r2, r2, r0
   12494:	add	r0, fp, r0, lsl #3
   12498:	lsl	r2, r2, #3
   1249c:	bl	10cc8 <memset@plt>
   124a0:	ldr	r3, [sp, #44]	; 0x2c
   124a4:	str	r3, [r7, #4]
   124a8:	ldr	r3, [r5, #4]
   124ac:	add	sl, r4, r6, lsl #3
   124b0:	orr	r3, r3, #1
   124b4:	str	r3, [sp, #28]
   124b8:	add	r3, r5, #8
   124bc:	str	r3, [sp, #36]	; 0x24
   124c0:	ldr	r3, [r5, #44]	; 0x2c
   124c4:	ldr	fp, [r4, r6, lsl #3]
   124c8:	ldr	r7, [sl, #4]
   124cc:	str	r3, [sp, #16]
   124d0:	ldr	r3, [r5, #40]	; 0x28
   124d4:	mov	r2, r8
   124d8:	str	r3, [sp, #12]
   124dc:	add	r3, r5, #8
   124e0:	str	r3, [sp, #8]
   124e4:	ldr	r3, [sp, #28]
   124e8:	mov	r1, fp
   124ec:	str	r3, [sp, #4]
   124f0:	ldr	r3, [r5]
   124f4:	mov	r0, r7
   124f8:	str	r3, [sp]
   124fc:	mov	r3, r9
   12500:	bl	116b4 <abort@plt+0x95c>
   12504:	cmp	fp, r0
   12508:	bhi	12570 <abort@plt+0x1818>
   1250c:	ldr	r3, [pc, #120]	; 1258c <abort@plt+0x1834>
   12510:	add	fp, r0, #1
   12514:	cmp	r7, r3
   12518:	str	fp, [r4, r6, lsl #3]
   1251c:	beq	12528 <abort@plt+0x17d0>
   12520:	mov	r0, r7
   12524:	bl	1372c <abort@plt+0x29d4>
   12528:	mov	r0, fp
   1252c:	bl	13034 <abort@plt+0x22dc>
   12530:	ldr	r3, [r5, #44]	; 0x2c
   12534:	mov	r2, r8
   12538:	mov	r1, fp
   1253c:	str	r0, [sl, #4]
   12540:	str	r3, [sp, #16]
   12544:	ldr	r3, [r5, #40]	; 0x28
   12548:	mov	r7, r0
   1254c:	str	r3, [sp, #12]
   12550:	add	r3, r5, #8
   12554:	str	r3, [sp, #8]
   12558:	ldr	r3, [sp, #28]
   1255c:	str	r3, [sp, #4]
   12560:	ldr	r3, [r5]
   12564:	str	r3, [sp]
   12568:	mov	r3, r9
   1256c:	bl	116b4 <abort@plt+0x95c>
   12570:	ldr	r3, [sp, #24]
   12574:	ldr	r2, [sp, #32]
   12578:	mov	r0, r7
   1257c:	str	r2, [r3]
   12580:	add	sp, sp, #52	; 0x34
   12584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12588:	ldrdeq	r5, [r2], -r4
   1258c:	andeq	r5, r2, r4, asr #2
   12590:	push	{r4, r5, r6, lr}
   12594:	mov	r5, r0
   12598:	bl	10cb0 <__errno_location@plt>
   1259c:	cmp	r5, #0
   125a0:	mov	r1, #48	; 0x30
   125a4:	ldr	r6, [r0]
   125a8:	mov	r4, r0
   125ac:	ldr	r0, [pc, #12]	; 125c0 <abort@plt+0x1868>
   125b0:	movne	r0, r5
   125b4:	bl	13410 <abort@plt+0x26b8>
   125b8:	str	r6, [r4]
   125bc:	pop	{r4, r5, r6, pc}
   125c0:	andeq	r5, r2, r4, asr #4
   125c4:	ldr	r3, [pc, #12]	; 125d8 <abort@plt+0x1880>
   125c8:	cmp	r0, #0
   125cc:	moveq	r0, r3
   125d0:	ldr	r0, [r0]
   125d4:	bx	lr
   125d8:	andeq	r5, r2, r4, asr #4
   125dc:	ldr	r3, [pc, #12]	; 125f0 <abort@plt+0x1898>
   125e0:	cmp	r0, #0
   125e4:	moveq	r0, r3
   125e8:	str	r1, [r0]
   125ec:	bx	lr
   125f0:	andeq	r5, r2, r4, asr #4
   125f4:	ldr	r3, [pc, #52]	; 12630 <abort@plt+0x18d8>
   125f8:	cmp	r0, #0
   125fc:	moveq	r0, r3
   12600:	add	r3, r0, #8
   12604:	push	{lr}		; (str lr, [sp, #-4]!)
   12608:	lsr	lr, r1, #5
   1260c:	and	r1, r1, #31
   12610:	ldr	ip, [r3, lr, lsl #2]
   12614:	lsr	r0, ip, r1
   12618:	eor	r2, r2, r0
   1261c:	and	r2, r2, #1
   12620:	and	r0, r0, #1
   12624:	eor	r1, ip, r2, lsl r1
   12628:	str	r1, [r3, lr, lsl #2]
   1262c:	pop	{pc}		; (ldr pc, [sp], #4)
   12630:	andeq	r5, r2, r4, asr #4
   12634:	ldr	r3, [pc, #16]	; 1264c <abort@plt+0x18f4>
   12638:	cmp	r0, #0
   1263c:	movne	r3, r0
   12640:	ldr	r0, [r3, #4]
   12644:	str	r1, [r3, #4]
   12648:	bx	lr
   1264c:	andeq	r5, r2, r4, asr #4
   12650:	ldr	r3, [pc, #44]	; 12684 <abort@plt+0x192c>
   12654:	cmp	r0, #0
   12658:	moveq	r0, r3
   1265c:	mov	r3, #10
   12660:	cmp	r2, #0
   12664:	cmpne	r1, #0
   12668:	str	r3, [r0]
   1266c:	bne	12678 <abort@plt+0x1920>
   12670:	push	{r4, lr}
   12674:	bl	10d58 <abort@plt>
   12678:	str	r1, [r0, #40]	; 0x28
   1267c:	str	r2, [r0, #44]	; 0x2c
   12680:	bx	lr
   12684:	andeq	r5, r2, r4, asr #4
   12688:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1268c:	sub	sp, sp, #24
   12690:	mov	sl, r3
   12694:	ldr	r4, [sp, #56]	; 0x38
   12698:	ldr	r3, [pc, #100]	; 12704 <abort@plt+0x19ac>
   1269c:	cmp	r4, #0
   126a0:	moveq	r4, r3
   126a4:	mov	r7, r0
   126a8:	mov	r8, r1
   126ac:	mov	r9, r2
   126b0:	bl	10cb0 <__errno_location@plt>
   126b4:	ldr	r3, [r4, #44]	; 0x2c
   126b8:	mov	r2, r9
   126bc:	mov	r1, r8
   126c0:	ldr	r6, [r0]
   126c4:	str	r3, [sp, #16]
   126c8:	ldr	r3, [r4, #40]	; 0x28
   126cc:	mov	r5, r0
   126d0:	str	r3, [sp, #12]
   126d4:	add	r3, r4, #8
   126d8:	str	r3, [sp, #8]
   126dc:	ldr	r3, [r4, #4]
   126e0:	mov	r0, r7
   126e4:	str	r3, [sp, #4]
   126e8:	ldr	r3, [r4]
   126ec:	str	r3, [sp]
   126f0:	mov	r3, sl
   126f4:	bl	116b4 <abort@plt+0x95c>
   126f8:	str	r6, [r5]
   126fc:	add	sp, sp, #24
   12700:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12704:	andeq	r5, r2, r4, asr #4
   12708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1270c:	cmp	r3, #0
   12710:	sub	sp, sp, #44	; 0x2c
   12714:	ldr	r4, [pc, #188]	; 127d8 <abort@plt+0x1a80>
   12718:	mov	r6, r2
   1271c:	movne	r4, r3
   12720:	mov	sl, r1
   12724:	mov	r9, r0
   12728:	bl	10cb0 <__errno_location@plt>
   1272c:	ldr	r5, [r4, #4]
   12730:	add	fp, r4, #8
   12734:	cmp	r6, #0
   12738:	orreq	r5, r5, #1
   1273c:	mov	r1, #0
   12740:	mov	r2, r9
   12744:	ldr	r3, [r0]
   12748:	mov	r8, r0
   1274c:	str	r3, [sp, #28]
   12750:	ldr	r3, [r4, #44]	; 0x2c
   12754:	mov	r0, r1
   12758:	str	r3, [sp, #16]
   1275c:	ldr	r3, [r4, #40]	; 0x28
   12760:	stmib	sp, {r5, fp}
   12764:	str	r3, [sp, #12]
   12768:	ldr	r3, [r4]
   1276c:	str	r3, [sp]
   12770:	mov	r3, sl
   12774:	bl	116b4 <abort@plt+0x95c>
   12778:	add	r1, r0, #1
   1277c:	mov	r7, r0
   12780:	mov	r0, r1
   12784:	str	r1, [sp, #36]	; 0x24
   12788:	bl	13034 <abort@plt+0x22dc>
   1278c:	ldr	r3, [r4, #44]	; 0x2c
   12790:	mov	r2, r9
   12794:	str	r3, [sp, #16]
   12798:	ldr	r3, [r4, #40]	; 0x28
   1279c:	stmib	sp, {r5, fp}
   127a0:	str	r3, [sp, #12]
   127a4:	ldr	r3, [r4]
   127a8:	ldr	r1, [sp, #36]	; 0x24
   127ac:	str	r3, [sp]
   127b0:	mov	r3, sl
   127b4:	str	r0, [sp, #32]
   127b8:	bl	116b4 <abort@plt+0x95c>
   127bc:	ldr	r3, [sp, #28]
   127c0:	cmp	r6, #0
   127c4:	str	r3, [r8]
   127c8:	ldr	r0, [sp, #32]
   127cc:	strne	r7, [r6]
   127d0:	add	sp, sp, #44	; 0x2c
   127d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127d8:	andeq	r5, r2, r4, asr #4
   127dc:	mov	r3, r2
   127e0:	mov	r2, #0
   127e4:	b	12708 <abort@plt+0x19b0>
   127e8:	push	{r4, r5, r6, r7, r8, lr}
   127ec:	mov	r6, #1
   127f0:	ldr	r4, [pc, #104]	; 12860 <abort@plt+0x1b08>
   127f4:	ldr	r5, [r4]
   127f8:	add	r7, r5, #12
   127fc:	ldr	r3, [r4, #4]
   12800:	add	r7, r7, #8
   12804:	cmp	r6, r3
   12808:	blt	12850 <abort@plt+0x1af8>
   1280c:	ldr	r0, [r5, #4]
   12810:	ldr	r6, [pc, #76]	; 12864 <abort@plt+0x1b0c>
   12814:	cmp	r0, r6
   12818:	beq	1282c <abort@plt+0x1ad4>
   1281c:	bl	1372c <abort@plt+0x29d4>
   12820:	mov	r3, #256	; 0x100
   12824:	str	r3, [r4, #8]
   12828:	str	r6, [r4, #12]
   1282c:	ldr	r6, [pc, #52]	; 12868 <abort@plt+0x1b10>
   12830:	cmp	r5, r6
   12834:	beq	12844 <abort@plt+0x1aec>
   12838:	mov	r0, r5
   1283c:	bl	1372c <abort@plt+0x29d4>
   12840:	str	r6, [r4]
   12844:	mov	r3, #1
   12848:	str	r3, [r4, #4]
   1284c:	pop	{r4, r5, r6, r7, r8, pc}
   12850:	ldr	r0, [r7, #-8]
   12854:	bl	1372c <abort@plt+0x29d4>
   12858:	add	r6, r6, #1
   1285c:	b	127fc <abort@plt+0x1aa4>
   12860:	ldrdeq	r5, [r2], -r4
   12864:	andeq	r5, r2, r4, asr #2
   12868:	ldrdeq	r5, [r2], -ip
   1286c:	ldr	r3, [pc, #4]	; 12878 <abort@plt+0x1b20>
   12870:	mvn	r2, #0
   12874:	b	123e8 <abort@plt+0x1690>
   12878:	andeq	r5, r2, r4, asr #4
   1287c:	ldr	r3, [pc]	; 12884 <abort@plt+0x1b2c>
   12880:	b	123e8 <abort@plt+0x1690>
   12884:	andeq	r5, r2, r4, asr #4
   12888:	mov	r1, r0
   1288c:	mov	r0, #0
   12890:	b	1286c <abort@plt+0x1b14>
   12894:	mov	r2, r1
   12898:	mov	r1, r0
   1289c:	mov	r0, #0
   128a0:	b	1287c <abort@plt+0x1b24>
   128a4:	push	{r4, r5, lr}
   128a8:	sub	sp, sp, #52	; 0x34
   128ac:	mov	r5, r2
   128b0:	mov	r4, r0
   128b4:	mov	r0, sp
   128b8:	bl	11570 <abort@plt+0x818>
   128bc:	mov	r3, sp
   128c0:	mvn	r2, #0
   128c4:	mov	r1, r5
   128c8:	mov	r0, r4
   128cc:	bl	123e8 <abort@plt+0x1690>
   128d0:	add	sp, sp, #52	; 0x34
   128d4:	pop	{r4, r5, pc}
   128d8:	push	{r4, r5, r6, lr}
   128dc:	sub	sp, sp, #48	; 0x30
   128e0:	mov	r5, r2
   128e4:	mov	r6, r3
   128e8:	mov	r4, r0
   128ec:	mov	r0, sp
   128f0:	bl	11570 <abort@plt+0x818>
   128f4:	mov	r3, sp
   128f8:	mov	r2, r6
   128fc:	mov	r1, r5
   12900:	mov	r0, r4
   12904:	bl	123e8 <abort@plt+0x1690>
   12908:	add	sp, sp, #48	; 0x30
   1290c:	pop	{r4, r5, r6, pc}
   12910:	mov	r2, r1
   12914:	mov	r1, r0
   12918:	mov	r0, #0
   1291c:	b	128a4 <abort@plt+0x1b4c>
   12920:	mov	r3, r2
   12924:	mov	r2, r1
   12928:	mov	r1, r0
   1292c:	mov	r0, #0
   12930:	b	128d8 <abort@plt+0x1b80>
   12934:	push	{r4, r5, r6, lr}
   12938:	mov	r4, r0
   1293c:	ldr	lr, [pc, #80]	; 12994 <abort@plt+0x1c3c>
   12940:	mov	r5, r1
   12944:	mov	r6, r2
   12948:	ldm	lr!, {r0, r1, r2, r3}
   1294c:	sub	sp, sp, #48	; 0x30
   12950:	mov	ip, sp
   12954:	stmia	ip!, {r0, r1, r2, r3}
   12958:	ldm	lr!, {r0, r1, r2, r3}
   1295c:	stmia	ip!, {r0, r1, r2, r3}
   12960:	ldm	lr, {r0, r1, r2, r3}
   12964:	stm	ip, {r0, r1, r2, r3}
   12968:	mov	r1, r6
   1296c:	mov	r2, #1
   12970:	mov	r0, sp
   12974:	bl	125f4 <abort@plt+0x189c>
   12978:	mov	r3, sp
   1297c:	mov	r2, r5
   12980:	mov	r1, r4
   12984:	mov	r0, #0
   12988:	bl	123e8 <abort@plt+0x1690>
   1298c:	add	sp, sp, #48	; 0x30
   12990:	pop	{r4, r5, r6, pc}
   12994:	andeq	r5, r2, r4, asr #4
   12998:	mov	r2, r1
   1299c:	mvn	r1, #0
   129a0:	b	12934 <abort@plt+0x1bdc>
   129a4:	mov	r1, #58	; 0x3a
   129a8:	b	12998 <abort@plt+0x1c40>
   129ac:	mov	r2, #58	; 0x3a
   129b0:	b	12934 <abort@plt+0x1bdc>
   129b4:	push	{r4, r5, lr}
   129b8:	sub	sp, sp, #100	; 0x64
   129bc:	mov	r4, r0
   129c0:	mov	r0, sp
   129c4:	mov	r5, r2
   129c8:	bl	11570 <abort@plt+0x818>
   129cc:	mov	ip, sp
   129d0:	add	lr, sp, #48	; 0x30
   129d4:	ldm	ip!, {r0, r1, r2, r3}
   129d8:	stmia	lr!, {r0, r1, r2, r3}
   129dc:	ldm	ip!, {r0, r1, r2, r3}
   129e0:	stmia	lr!, {r0, r1, r2, r3}
   129e4:	ldm	ip, {r0, r1, r2, r3}
   129e8:	stm	lr, {r0, r1, r2, r3}
   129ec:	mov	r2, #1
   129f0:	mov	r1, #58	; 0x3a
   129f4:	add	r0, sp, #48	; 0x30
   129f8:	bl	125f4 <abort@plt+0x189c>
   129fc:	add	r3, sp, #48	; 0x30
   12a00:	mvn	r2, #0
   12a04:	mov	r1, r5
   12a08:	mov	r0, r4
   12a0c:	bl	123e8 <abort@plt+0x1690>
   12a10:	add	sp, sp, #100	; 0x64
   12a14:	pop	{r4, r5, pc}
   12a18:	push	{r4, r5, r6, r7, lr}
   12a1c:	mov	r4, r0
   12a20:	ldr	lr, [pc, #84]	; 12a7c <abort@plt+0x1d24>
   12a24:	mov	r6, r1
   12a28:	mov	r7, r2
   12a2c:	mov	r5, r3
   12a30:	ldm	lr!, {r0, r1, r2, r3}
   12a34:	sub	sp, sp, #52	; 0x34
   12a38:	mov	ip, sp
   12a3c:	stmia	ip!, {r0, r1, r2, r3}
   12a40:	ldm	lr!, {r0, r1, r2, r3}
   12a44:	stmia	ip!, {r0, r1, r2, r3}
   12a48:	ldm	lr, {r0, r1, r2, r3}
   12a4c:	stm	ip, {r0, r1, r2, r3}
   12a50:	mov	r2, r7
   12a54:	mov	r1, r6
   12a58:	mov	r0, sp
   12a5c:	bl	12650 <abort@plt+0x18f8>
   12a60:	mov	r3, sp
   12a64:	ldr	r2, [sp, #72]	; 0x48
   12a68:	mov	r1, r5
   12a6c:	mov	r0, r4
   12a70:	bl	123e8 <abort@plt+0x1690>
   12a74:	add	sp, sp, #52	; 0x34
   12a78:	pop	{r4, r5, r6, r7, pc}
   12a7c:	andeq	r5, r2, r4, asr #4
   12a80:	mvn	ip, #0
   12a84:	push	{r0, r1, r2, lr}
   12a88:	str	ip, [sp]
   12a8c:	bl	12a18 <abort@plt+0x1cc0>
   12a90:	add	sp, sp, #12
   12a94:	pop	{pc}		; (ldr pc, [sp], #4)
   12a98:	mov	r3, r2
   12a9c:	mov	r2, r1
   12aa0:	mov	r1, r0
   12aa4:	mov	r0, #0
   12aa8:	b	12a80 <abort@plt+0x1d28>
   12aac:	push	{r0, r1, r2, lr}
   12ab0:	str	r3, [sp]
   12ab4:	mov	r3, r2
   12ab8:	mov	r2, r1
   12abc:	mov	r1, r0
   12ac0:	mov	r0, #0
   12ac4:	bl	12a18 <abort@plt+0x1cc0>
   12ac8:	add	sp, sp, #12
   12acc:	pop	{pc}		; (ldr pc, [sp], #4)
   12ad0:	ldr	r3, [pc]	; 12ad8 <abort@plt+0x1d80>
   12ad4:	b	123e8 <abort@plt+0x1690>
   12ad8:	andeq	r5, r2, r4, ror #1
   12adc:	mov	r2, r1
   12ae0:	mov	r1, r0
   12ae4:	mov	r0, #0
   12ae8:	b	12ad0 <abort@plt+0x1d78>
   12aec:	mvn	r2, #0
   12af0:	b	12ad0 <abort@plt+0x1d78>
   12af4:	mov	r1, r0
   12af8:	mov	r0, #0
   12afc:	b	12aec <abort@plt+0x1d94>
   12b00:	push	{r4, r5, r6, lr}
   12b04:	sub	sp, sp, #32
   12b08:	cmp	r1, #0
   12b0c:	mov	r5, r0
   12b10:	ldr	r4, [sp, #48]	; 0x30
   12b14:	ldr	r6, [sp, #52]	; 0x34
   12b18:	beq	12bcc <abort@plt+0x1e74>
   12b1c:	stm	sp, {r2, r3}
   12b20:	mov	r3, r1
   12b24:	ldr	r2, [pc, #860]	; 12e88 <abort@plt+0x2130>
   12b28:	mov	r1, #1
   12b2c:	bl	10cec <__fprintf_chk@plt>
   12b30:	mov	r2, #5
   12b34:	ldr	r1, [pc, #848]	; 12e8c <abort@plt+0x2134>
   12b38:	mov	r0, #0
   12b3c:	bl	10bcc <dcgettext@plt>
   12b40:	ldr	r3, [pc, #840]	; 12e90 <abort@plt+0x2138>
   12b44:	ldr	r2, [pc, #840]	; 12e94 <abort@plt+0x213c>
   12b48:	str	r3, [sp]
   12b4c:	mov	r1, #1
   12b50:	mov	r3, r0
   12b54:	mov	r0, r5
   12b58:	bl	10cec <__fprintf_chk@plt>
   12b5c:	mov	r1, r5
   12b60:	mov	r0, #10
   12b64:	bl	10bc0 <fputc_unlocked@plt>
   12b68:	mov	r2, #5
   12b6c:	ldr	r1, [pc, #804]	; 12e98 <abort@plt+0x2140>
   12b70:	mov	r0, #0
   12b74:	bl	10bcc <dcgettext@plt>
   12b78:	mov	r1, #1
   12b7c:	ldr	r3, [pc, #792]	; 12e9c <abort@plt+0x2144>
   12b80:	mov	r2, r0
   12b84:	mov	r0, r5
   12b88:	bl	10cec <__fprintf_chk@plt>
   12b8c:	mov	r1, r5
   12b90:	mov	r0, #10
   12b94:	bl	10bc0 <fputc_unlocked@plt>
   12b98:	cmp	r6, #9
   12b9c:	ldrls	pc, [pc, r6, lsl #2]
   12ba0:	b	12e7c <abort@plt+0x2124>
   12ba4:			; <UNDEFINED> instruction: 0x00012cbc
   12ba8:	andeq	r2, r1, r4, ror #23
   12bac:	andeq	r2, r1, r0, lsl ip
   12bb0:	andeq	r2, r1, r4, asr #24
   12bb4:	andeq	r2, r1, r0, lsl #25
   12bb8:	andeq	r2, r1, r4, asr #25
   12bbc:	andeq	r2, r1, ip, lsl #26
   12bc0:	andeq	r2, r1, ip, asr sp
   12bc4:			; <UNDEFINED> instruction: 0x00012db4
   12bc8:	andeq	r2, r1, r4, lsl lr
   12bcc:	str	r3, [sp]
   12bd0:	mov	r1, #1
   12bd4:	mov	r3, r2
   12bd8:	ldr	r2, [pc, #704]	; 12ea0 <abort@plt+0x2148>
   12bdc:	bl	10cec <__fprintf_chk@plt>
   12be0:	b	12b30 <abort@plt+0x1dd8>
   12be4:	mov	r2, #5
   12be8:	ldr	r1, [pc, #692]	; 12ea4 <abort@plt+0x214c>
   12bec:	mov	r0, #0
   12bf0:	bl	10bcc <dcgettext@plt>
   12bf4:	ldr	r3, [r4]
   12bf8:	mov	r1, #1
   12bfc:	mov	r2, r0
   12c00:	mov	r0, r5
   12c04:	add	sp, sp, #32
   12c08:	pop	{r4, r5, r6, lr}
   12c0c:	b	10cec <__fprintf_chk@plt>
   12c10:	mov	r2, #5
   12c14:	ldr	r1, [pc, #652]	; 12ea8 <abort@plt+0x2150>
   12c18:	mov	r0, #0
   12c1c:	bl	10bcc <dcgettext@plt>
   12c20:	ldr	r3, [r4, #4]
   12c24:	mov	r1, #1
   12c28:	str	r3, [sp, #48]	; 0x30
   12c2c:	ldr	r3, [r4]
   12c30:	mov	r2, r0
   12c34:	mov	r0, r5
   12c38:	add	sp, sp, #32
   12c3c:	pop	{r4, r5, r6, lr}
   12c40:	b	10cec <__fprintf_chk@plt>
   12c44:	mov	r2, #5
   12c48:	ldr	r1, [pc, #604]	; 12eac <abort@plt+0x2154>
   12c4c:	mov	r0, #0
   12c50:	bl	10bcc <dcgettext@plt>
   12c54:	ldr	r3, [r4, #8]
   12c58:	mov	r1, #1
   12c5c:	str	r3, [sp, #52]	; 0x34
   12c60:	ldr	r3, [r4, #4]
   12c64:	str	r3, [sp, #48]	; 0x30
   12c68:	ldr	r3, [r4]
   12c6c:	mov	r2, r0
   12c70:	mov	r0, r5
   12c74:	add	sp, sp, #32
   12c78:	pop	{r4, r5, r6, lr}
   12c7c:	b	10cec <__fprintf_chk@plt>
   12c80:	mov	r2, #5
   12c84:	ldr	r1, [pc, #548]	; 12eb0 <abort@plt+0x2158>
   12c88:	mov	r0, #0
   12c8c:	bl	10bcc <dcgettext@plt>
   12c90:	ldr	r3, [r4, #12]
   12c94:	mov	r1, #1
   12c98:	str	r3, [sp, #8]
   12c9c:	ldr	r3, [r4, #8]
   12ca0:	str	r3, [sp, #4]
   12ca4:	ldr	r3, [r4, #4]
   12ca8:	str	r3, [sp]
   12cac:	ldr	r3, [r4]
   12cb0:	mov	r2, r0
   12cb4:	mov	r0, r5
   12cb8:	bl	10cec <__fprintf_chk@plt>
   12cbc:	add	sp, sp, #32
   12cc0:	pop	{r4, r5, r6, pc}
   12cc4:	mov	r2, #5
   12cc8:	ldr	r1, [pc, #484]	; 12eb4 <abort@plt+0x215c>
   12ccc:	mov	r0, #0
   12cd0:	bl	10bcc <dcgettext@plt>
   12cd4:	ldr	r3, [r4, #16]
   12cd8:	mov	r1, #1
   12cdc:	str	r3, [sp, #12]
   12ce0:	ldr	r3, [r4, #12]
   12ce4:	str	r3, [sp, #8]
   12ce8:	ldr	r3, [r4, #8]
   12cec:	str	r3, [sp, #4]
   12cf0:	ldr	r3, [r4, #4]
   12cf4:	str	r3, [sp]
   12cf8:	ldr	r3, [r4]
   12cfc:	mov	r2, r0
   12d00:	mov	r0, r5
   12d04:	bl	10cec <__fprintf_chk@plt>
   12d08:	b	12cbc <abort@plt+0x1f64>
   12d0c:	mov	r2, #5
   12d10:	ldr	r1, [pc, #416]	; 12eb8 <abort@plt+0x2160>
   12d14:	mov	r0, #0
   12d18:	bl	10bcc <dcgettext@plt>
   12d1c:	ldr	r3, [r4, #20]
   12d20:	mov	r1, #1
   12d24:	str	r3, [sp, #16]
   12d28:	ldr	r3, [r4, #16]
   12d2c:	str	r3, [sp, #12]
   12d30:	ldr	r3, [r4, #12]
   12d34:	str	r3, [sp, #8]
   12d38:	ldr	r3, [r4, #8]
   12d3c:	str	r3, [sp, #4]
   12d40:	ldr	r3, [r4, #4]
   12d44:	str	r3, [sp]
   12d48:	ldr	r3, [r4]
   12d4c:	mov	r2, r0
   12d50:	mov	r0, r5
   12d54:	bl	10cec <__fprintf_chk@plt>
   12d58:	b	12cbc <abort@plt+0x1f64>
   12d5c:	mov	r2, #5
   12d60:	ldr	r1, [pc, #340]	; 12ebc <abort@plt+0x2164>
   12d64:	mov	r0, #0
   12d68:	bl	10bcc <dcgettext@plt>
   12d6c:	ldr	r3, [r4, #24]
   12d70:	mov	r1, #1
   12d74:	str	r3, [sp, #20]
   12d78:	ldr	r3, [r4, #20]
   12d7c:	str	r3, [sp, #16]
   12d80:	ldr	r3, [r4, #16]
   12d84:	str	r3, [sp, #12]
   12d88:	ldr	r3, [r4, #12]
   12d8c:	str	r3, [sp, #8]
   12d90:	ldr	r3, [r4, #8]
   12d94:	str	r3, [sp, #4]
   12d98:	ldr	r3, [r4, #4]
   12d9c:	str	r3, [sp]
   12da0:	ldr	r3, [r4]
   12da4:	mov	r2, r0
   12da8:	mov	r0, r5
   12dac:	bl	10cec <__fprintf_chk@plt>
   12db0:	b	12cbc <abort@plt+0x1f64>
   12db4:	mov	r2, #5
   12db8:	ldr	r1, [pc, #256]	; 12ec0 <abort@plt+0x2168>
   12dbc:	mov	r0, #0
   12dc0:	bl	10bcc <dcgettext@plt>
   12dc4:	ldr	r3, [r4, #28]
   12dc8:	mov	r1, #1
   12dcc:	str	r3, [sp, #24]
   12dd0:	ldr	r3, [r4, #24]
   12dd4:	str	r3, [sp, #20]
   12dd8:	ldr	r3, [r4, #20]
   12ddc:	str	r3, [sp, #16]
   12de0:	ldr	r3, [r4, #16]
   12de4:	str	r3, [sp, #12]
   12de8:	ldr	r3, [r4, #12]
   12dec:	str	r3, [sp, #8]
   12df0:	ldr	r3, [r4, #8]
   12df4:	str	r3, [sp, #4]
   12df8:	ldr	r3, [r4, #4]
   12dfc:	str	r3, [sp]
   12e00:	ldr	r3, [r4]
   12e04:	mov	r2, r0
   12e08:	mov	r0, r5
   12e0c:	bl	10cec <__fprintf_chk@plt>
   12e10:	b	12cbc <abort@plt+0x1f64>
   12e14:	ldr	r1, [pc, #168]	; 12ec4 <abort@plt+0x216c>
   12e18:	mov	r2, #5
   12e1c:	mov	r0, #0
   12e20:	bl	10bcc <dcgettext@plt>
   12e24:	ldr	r3, [r4, #32]
   12e28:	mov	r1, #1
   12e2c:	str	r3, [sp, #28]
   12e30:	ldr	r3, [r4, #28]
   12e34:	str	r3, [sp, #24]
   12e38:	ldr	r3, [r4, #24]
   12e3c:	str	r3, [sp, #20]
   12e40:	ldr	r3, [r4, #20]
   12e44:	str	r3, [sp, #16]
   12e48:	ldr	r3, [r4, #16]
   12e4c:	str	r3, [sp, #12]
   12e50:	ldr	r3, [r4, #12]
   12e54:	str	r3, [sp, #8]
   12e58:	ldr	r3, [r4, #8]
   12e5c:	str	r3, [sp, #4]
   12e60:	ldr	r3, [r4, #4]
   12e64:	str	r3, [sp]
   12e68:	ldr	r3, [r4]
   12e6c:	mov	r2, r0
   12e70:	mov	r0, r5
   12e74:	bl	10cec <__fprintf_chk@plt>
   12e78:	b	12cbc <abort@plt+0x1f64>
   12e7c:	mov	r2, #5
   12e80:	ldr	r1, [pc, #64]	; 12ec8 <abort@plt+0x2170>
   12e84:	b	12e1c <abort@plt+0x20c4>
   12e88:	andeq	r4, r1, r7, asr #5
   12e8c:	ldrdeq	r4, [r1], -sl
   12e90:	andeq	r0, r0, r6, ror #15
   12e94:	andeq	r4, r1, r8, lsr #11
   12e98:	ldrdeq	r4, [r1], -lr
   12e9c:	andeq	r4, r1, r9, lsl #7
   12ea0:	ldrdeq	r4, [r1], -r3
   12ea4:	andeq	r4, r1, fp, lsr #7
   12ea8:			; <UNDEFINED> instruction: 0x000143bb
   12eac:	ldrdeq	r4, [r1], -r2
   12eb0:	andeq	r4, r1, lr, ror #7
   12eb4:	andeq	r4, r1, lr, lsl #8
   12eb8:	andeq	r4, r1, r2, lsr r4
   12ebc:	andeq	r4, r1, sl, asr r4
   12ec0:	andeq	r4, r1, r6, lsl #9
   12ec4:			; <UNDEFINED> instruction: 0x000144b6
   12ec8:	andeq	r4, r1, sl, ror #9
   12ecc:	push	{r0, r1, r4, lr}
   12ed0:	mov	ip, #0
   12ed4:	ldr	lr, [sp, #16]
   12ed8:	ldr	r4, [lr, ip, lsl #2]
   12edc:	cmp	r4, #0
   12ee0:	bne	12ef8 <abort@plt+0x21a0>
   12ee4:	str	ip, [sp, #4]
   12ee8:	str	lr, [sp]
   12eec:	bl	12b00 <abort@plt+0x1da8>
   12ef0:	add	sp, sp, #8
   12ef4:	pop	{r4, pc}
   12ef8:	add	ip, ip, #1
   12efc:	b	12ed8 <abort@plt+0x2180>
   12f00:	push	{r4, r5, lr}
   12f04:	sub	sp, sp, #52	; 0x34
   12f08:	mov	ip, #0
   12f0c:	ldr	r5, [sp, #64]	; 0x40
   12f10:	add	lr, sp, #8
   12f14:	ldr	r4, [r5, ip, lsl #2]
   12f18:	cmp	r4, #0
   12f1c:	str	r4, [lr, ip, lsl #2]
   12f20:	beq	12f30 <abort@plt+0x21d8>
   12f24:	add	ip, ip, #1
   12f28:	cmp	ip, #10
   12f2c:	bne	12f14 <abort@plt+0x21bc>
   12f30:	str	ip, [sp, #4]
   12f34:	str	lr, [sp]
   12f38:	bl	12b00 <abort@plt+0x1da8>
   12f3c:	add	sp, sp, #52	; 0x34
   12f40:	pop	{r4, r5, pc}
   12f44:	push	{r3}		; (str r3, [sp, #-4]!)
   12f48:	push	{r0, r1, r2, r3, lr}
   12f4c:	add	r3, sp, #24
   12f50:	str	r3, [sp, #12]
   12f54:	str	r3, [sp]
   12f58:	ldr	r3, [sp, #20]
   12f5c:	bl	12f00 <abort@plt+0x21a8>
   12f60:	add	sp, sp, #16
   12f64:	pop	{lr}		; (ldr lr, [sp], #4)
   12f68:	add	sp, sp, #4
   12f6c:	bx	lr
   12f70:	ldr	r3, [pc, #116]	; 12fec <abort@plt+0x2294>
   12f74:	push	{r4, lr}
   12f78:	mov	r0, #10
   12f7c:	ldr	r1, [r3]
   12f80:	bl	10bc0 <fputc_unlocked@plt>
   12f84:	mov	r2, #5
   12f88:	ldr	r1, [pc, #96]	; 12ff0 <abort@plt+0x2298>
   12f8c:	mov	r0, #0
   12f90:	bl	10bcc <dcgettext@plt>
   12f94:	ldr	r2, [pc, #88]	; 12ff4 <abort@plt+0x229c>
   12f98:	mov	r1, r0
   12f9c:	mov	r0, #1
   12fa0:	bl	10cd4 <__printf_chk@plt>
   12fa4:	mov	r2, #5
   12fa8:	ldr	r1, [pc, #72]	; 12ff8 <abort@plt+0x22a0>
   12fac:	mov	r0, #0
   12fb0:	bl	10bcc <dcgettext@plt>
   12fb4:	ldr	r3, [pc, #64]	; 12ffc <abort@plt+0x22a4>
   12fb8:	ldr	r2, [pc, #64]	; 13000 <abort@plt+0x22a8>
   12fbc:	mov	r1, r0
   12fc0:	mov	r0, #1
   12fc4:	bl	10cd4 <__printf_chk@plt>
   12fc8:	mov	r2, #5
   12fcc:	ldr	r1, [pc, #48]	; 13004 <abort@plt+0x22ac>
   12fd0:	mov	r0, #0
   12fd4:	bl	10bcc <dcgettext@plt>
   12fd8:	ldr	r2, [pc, #40]	; 13008 <abort@plt+0x22b0>
   12fdc:	pop	{r4, lr}
   12fe0:	mov	r1, r0
   12fe4:	mov	r0, #1
   12fe8:	b	10cd4 <__printf_chk@plt>
   12fec:	andeq	r5, r2, ip, lsr #2
   12ff0:	andeq	r4, r1, r6, lsr #10
   12ff4:	andeq	r4, r1, sl, lsr r5
   12ff8:	andeq	r4, r1, r0, asr r5
   12ffc:	andeq	r3, r1, r2, ror #31
   13000:	andeq	r4, r1, sl
   13004:	andeq	r4, r1, r4, ror #10
   13008:	andeq	r4, r1, fp, lsl #11
   1300c:	push	{r4, lr}
   13010:	bl	13528 <abort@plt+0x27d0>
   13014:	cmp	r0, #0
   13018:	popne	{r4, pc}
   1301c:	bl	134a0 <abort@plt+0x2748>
   13020:	push	{r4, lr}
   13024:	bl	13528 <abort@plt+0x27d0>
   13028:	cmp	r0, #0
   1302c:	popne	{r4, pc}
   13030:	bl	134a0 <abort@plt+0x2748>
   13034:	b	1300c <abort@plt+0x22b4>
   13038:	push	{r4, r5, r6, lr}
   1303c:	mov	r5, r0
   13040:	mov	r4, r1
   13044:	bl	13568 <abort@plt+0x2810>
   13048:	cmp	r0, #0
   1304c:	popne	{r4, r5, r6, pc}
   13050:	adds	r4, r4, #0
   13054:	movne	r4, #1
   13058:	cmp	r5, #0
   1305c:	orreq	r4, r4, #1
   13060:	cmp	r4, #0
   13064:	popeq	{r4, r5, r6, pc}
   13068:	bl	134a0 <abort@plt+0x2748>
   1306c:	push	{r4, lr}
   13070:	cmp	r1, #0
   13074:	orreq	r1, r1, #1
   13078:	bl	13568 <abort@plt+0x2810>
   1307c:	cmp	r0, #0
   13080:	popne	{r4, pc}
   13084:	bl	134a0 <abort@plt+0x2748>
   13088:	push	{r4, r5, r6, lr}
   1308c:	mov	r6, r0
   13090:	mov	r5, r1
   13094:	mov	r4, r2
   13098:	bl	13898 <abort@plt+0x2b40>
   1309c:	cmp	r0, #0
   130a0:	popne	{r4, r5, r6, pc}
   130a4:	cmp	r6, #0
   130a8:	beq	130b8 <abort@plt+0x2360>
   130ac:	cmp	r5, #0
   130b0:	cmpne	r4, #0
   130b4:	popeq	{r4, r5, r6, pc}
   130b8:	bl	134a0 <abort@plt+0x2748>
   130bc:	b	13088 <abort@plt+0x2330>
   130c0:	cmp	r2, #0
   130c4:	cmpne	r1, #0
   130c8:	moveq	r2, #1
   130cc:	moveq	r1, r2
   130d0:	push	{r4, lr}
   130d4:	bl	13898 <abort@plt+0x2b40>
   130d8:	cmp	r0, #0
   130dc:	popne	{r4, pc}
   130e0:	bl	134a0 <abort@plt+0x2748>
   130e4:	mov	r2, r1
   130e8:	mov	r1, r0
   130ec:	mov	r0, #0
   130f0:	b	13088 <abort@plt+0x2330>
   130f4:	mov	r2, r1
   130f8:	mov	r1, r0
   130fc:	mov	r0, #0
   13100:	b	130c0 <abort@plt+0x2368>
   13104:	push	{r4, r5, r6, r7, r8, lr}
   13108:	subs	r7, r0, #0
   1310c:	mov	r5, r1
   13110:	mov	r6, r2
   13114:	ldr	r4, [r1]
   13118:	bne	13154 <abort@plt+0x23fc>
   1311c:	cmp	r4, #0
   13120:	bne	1313c <abort@plt+0x23e4>
   13124:	mov	r1, r2
   13128:	mov	r0, #64	; 0x40
   1312c:	bl	139c4 <abort@plt+0x2c6c>
   13130:	cmp	r0, #0
   13134:	movne	r4, r0
   13138:	addeq	r4, r0, #1
   1313c:	mov	r2, r6
   13140:	mov	r1, r4
   13144:	mov	r0, r7
   13148:	bl	13088 <abort@plt+0x2330>
   1314c:	str	r4, [r5]
   13150:	pop	{r4, r5, r6, r7, r8, pc}
   13154:	lsr	r2, r4, #1
   13158:	add	r3, r2, #1
   1315c:	mvn	r3, r3
   13160:	cmp	r4, r3
   13164:	addls	r4, r4, #1
   13168:	addls	r4, r4, r2
   1316c:	bls	1313c <abort@plt+0x23e4>
   13170:	bl	134a0 <abort@plt+0x2748>
   13174:	mov	r2, #1
   13178:	b	13104 <abort@plt+0x23ac>
   1317c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13180:	mov	sl, r0
   13184:	ldr	r8, [r1]
   13188:	mov	fp, r1
   1318c:	mov	r5, r2
   13190:	asrs	r4, r8, #1
   13194:	mov	r9, r3
   13198:	ldr	r7, [sp, #48]	; 0x30
   1319c:	bpl	13238 <abort@plt+0x24e0>
   131a0:	rsb	r2, r4, #-2147483648	; 0x80000000
   131a4:	cmp	r8, r2
   131a8:	movge	r2, #0
   131ac:	movlt	r2, #1
   131b0:	mvn	r3, r9
   131b4:	cmp	r2, #0
   131b8:	lsr	r3, r3, #31
   131bc:	addeq	r4, r4, r8
   131c0:	mvnne	r4, #-2147483648	; 0x80000000
   131c4:	mov	r0, r3
   131c8:	cmp	r9, r4
   131cc:	movge	r0, #0
   131d0:	andlt	r0, r0, #1
   131d4:	cmp	r0, #0
   131d8:	str	r3, [sp, #4]
   131dc:	bne	133ac <abort@plt+0x2654>
   131e0:	cmp	r7, #0
   131e4:	bge	132f8 <abort@plt+0x25a0>
   131e8:	cmp	r4, #0
   131ec:	bge	13250 <abort@plt+0x24f8>
   131f0:	mov	r1, r7
   131f4:	mvn	r0, #-2147483648	; 0x80000000
   131f8:	bl	13bd0 <abort@plt+0x2e78>
   131fc:	cmp	r0, r4
   13200:	movle	r0, #0
   13204:	movgt	r0, #1
   13208:	cmp	r0, #0
   1320c:	mvnne	r6, #-2147483648	; 0x80000000
   13210:	beq	13260 <abort@plt+0x2508>
   13214:	mov	r1, r7
   13218:	mov	r0, r6
   1321c:	bl	13bd0 <abort@plt+0x2e78>
   13220:	mov	r1, r7
   13224:	mov	r4, r0
   13228:	mov	r0, r6
   1322c:	bl	13df0 <abort@plt+0x3098>
   13230:	sub	r1, r6, r1
   13234:	b	13270 <abort@plt+0x2518>
   13238:	mvn	r2, #-2147483648	; 0x80000000
   1323c:	sub	r2, r2, r4
   13240:	cmp	r8, r2
   13244:	movle	r2, #0
   13248:	movgt	r2, #1
   1324c:	b	131b0 <abort@plt+0x2458>
   13250:	cmn	r7, #1
   13254:	movne	r1, r7
   13258:	movne	r0, #-2147483648	; 0x80000000
   1325c:	bne	133c4 <abort@plt+0x266c>
   13260:	mul	r1, r7, r4
   13264:	cmp	r1, #63	; 0x3f
   13268:	movle	r6, #64	; 0x40
   1326c:	ble	13214 <abort@plt+0x24bc>
   13270:	cmp	sl, #0
   13274:	sub	r2, r4, r8
   13278:	streq	sl, [fp]
   1327c:	cmp	r2, r5
   13280:	bge	13354 <abort@plt+0x25fc>
   13284:	cmp	r5, #0
   13288:	bge	13320 <abort@plt+0x25c8>
   1328c:	rsb	r2, r5, #-2147483648	; 0x80000000
   13290:	cmp	r8, r2
   13294:	movge	r2, #0
   13298:	movlt	r2, #1
   1329c:	cmp	r2, #0
   132a0:	bne	132f4 <abort@plt+0x259c>
   132a4:	ldr	r0, [sp, #4]
   132a8:	add	r5, r8, r5
   132ac:	cmp	r9, r5
   132b0:	movge	r0, #0
   132b4:	andlt	r0, r0, #1
   132b8:	cmp	r0, #0
   132bc:	mov	r4, r5
   132c0:	bne	132f4 <abort@plt+0x259c>
   132c4:	cmp	r7, #0
   132c8:	bge	13368 <abort@plt+0x2610>
   132cc:	cmp	r5, #0
   132d0:	bge	13340 <abort@plt+0x25e8>
   132d4:	mov	r1, r7
   132d8:	mvn	r0, #-2147483648	; 0x80000000
   132dc:	bl	13bd0 <abort@plt+0x2e78>
   132e0:	cmp	r5, r0
   132e4:	movge	r0, #0
   132e8:	movlt	r0, #1
   132ec:	cmp	r0, #0
   132f0:	beq	13350 <abort@plt+0x25f8>
   132f4:	bl	134a0 <abort@plt+0x2748>
   132f8:	beq	13260 <abort@plt+0x2508>
   132fc:	cmp	r4, #0
   13300:	bge	133bc <abort@plt+0x2664>
   13304:	cmn	r4, #1
   13308:	beq	13260 <abort@plt+0x2508>
   1330c:	mov	r1, r4
   13310:	mov	r0, #-2147483648	; 0x80000000
   13314:	bl	13bd0 <abort@plt+0x2e78>
   13318:	cmp	r7, r0
   1331c:	b	13200 <abort@plt+0x24a8>
   13320:	cmp	r8, #0
   13324:	blt	132a4 <abort@plt+0x254c>
   13328:	mvn	r2, #-2147483648	; 0x80000000
   1332c:	sub	r2, r2, r5
   13330:	cmp	r8, r2
   13334:	movle	r2, #0
   13338:	movgt	r2, #1
   1333c:	b	1329c <abort@plt+0x2544>
   13340:	cmn	r7, #1
   13344:	movne	r1, r7
   13348:	movne	r0, #-2147483648	; 0x80000000
   1334c:	bne	133a0 <abort@plt+0x2648>
   13350:	mul	r1, r5, r7
   13354:	mov	r0, sl
   13358:	bl	13038 <abort@plt+0x22e0>
   1335c:	str	r4, [fp]
   13360:	add	sp, sp, #12
   13364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13368:	beq	13350 <abort@plt+0x25f8>
   1336c:	cmp	r5, #0
   13370:	movge	r1, r7
   13374:	mvnge	r0, #-2147483648	; 0x80000000
   13378:	bge	133a0 <abort@plt+0x2648>
   1337c:	cmn	r5, #1
   13380:	beq	13350 <abort@plt+0x25f8>
   13384:	mov	r1, r5
   13388:	mov	r0, #-2147483648	; 0x80000000
   1338c:	bl	13bd0 <abort@plt+0x2e78>
   13390:	cmp	r7, r0
   13394:	movle	r0, #0
   13398:	movgt	r0, #1
   1339c:	b	132ec <abort@plt+0x2594>
   133a0:	bl	13bd0 <abort@plt+0x2e78>
   133a4:	cmp	r5, r0
   133a8:	b	13394 <abort@plt+0x263c>
   133ac:	cmp	r7, #0
   133b0:	mov	r4, r9
   133b4:	blt	13250 <abort@plt+0x24f8>
   133b8:	beq	13260 <abort@plt+0x2508>
   133bc:	mov	r1, r7
   133c0:	mvn	r0, #-2147483648	; 0x80000000
   133c4:	bl	13bd0 <abort@plt+0x2e78>
   133c8:	cmp	r0, r4
   133cc:	movge	r0, #0
   133d0:	movlt	r0, #1
   133d4:	b	13208 <abort@plt+0x24b0>
   133d8:	push	{r4, lr}
   133dc:	bl	134e0 <abort@plt+0x2788>
   133e0:	cmp	r0, #0
   133e4:	popne	{r4, pc}
   133e8:	bl	134a0 <abort@plt+0x2748>
   133ec:	mov	r1, #1
   133f0:	b	133d8 <abort@plt+0x2680>
   133f4:	push	{r4, lr}
   133f8:	bl	134e0 <abort@plt+0x2788>
   133fc:	cmp	r0, #0
   13400:	popne	{r4, pc}
   13404:	bl	134a0 <abort@plt+0x2748>
   13408:	mov	r1, #1
   1340c:	b	133f4 <abort@plt+0x269c>
   13410:	push	{r4, r5, r6, lr}
   13414:	mov	r4, r1
   13418:	mov	r5, r0
   1341c:	mov	r0, r1
   13420:	bl	1300c <abort@plt+0x22b4>
   13424:	mov	r2, r4
   13428:	mov	r1, r5
   1342c:	pop	{r4, r5, r6, lr}
   13430:	b	10b9c <memcpy@plt>
   13434:	push	{r4, r5, r6, lr}
   13438:	mov	r4, r1
   1343c:	mov	r5, r0
   13440:	mov	r0, r1
   13444:	bl	13020 <abort@plt+0x22c8>
   13448:	mov	r2, r4
   1344c:	mov	r1, r5
   13450:	pop	{r4, r5, r6, lr}
   13454:	b	10b9c <memcpy@plt>
   13458:	push	{r4, r5, r6, lr}
   1345c:	mov	r5, r0
   13460:	add	r0, r1, #1
   13464:	mov	r4, r1
   13468:	bl	13020 <abort@plt+0x22c8>
   1346c:	mov	r2, #0
   13470:	mov	r1, r5
   13474:	strb	r2, [r0, r4]
   13478:	mov	r2, r4
   1347c:	pop	{r4, r5, r6, lr}
   13480:	b	10b9c <memcpy@plt>
   13484:	push	{r4, lr}
   13488:	mov	r4, r0
   1348c:	bl	10ca4 <strlen@plt>
   13490:	add	r1, r0, #1
   13494:	mov	r0, r4
   13498:	pop	{r4, lr}
   1349c:	b	13410 <abort@plt+0x26b8>
   134a0:	ldr	r3, [pc, #44]	; 134d4 <abort@plt+0x277c>
   134a4:	push	{r4, lr}
   134a8:	mov	r2, #5
   134ac:	ldr	r1, [pc, #36]	; 134d8 <abort@plt+0x2780>
   134b0:	mov	r0, #0
   134b4:	ldr	r4, [r3]
   134b8:	bl	10bcc <dcgettext@plt>
   134bc:	ldr	r2, [pc, #24]	; 134dc <abort@plt+0x2784>
   134c0:	mov	r1, #0
   134c4:	mov	r3, r0
   134c8:	mov	r0, r4
   134cc:	bl	10c44 <error@plt>
   134d0:	bl	10d58 <abort@plt>
   134d4:	ldrdeq	r5, [r2], -r0
   134d8:	ldrdeq	r4, [r1], -r7
   134dc:	andeq	r4, r1, r7, lsl #3
   134e0:	cmp	r1, #0
   134e4:	cmpne	r0, #0
   134e8:	moveq	r1, #1
   134ec:	moveq	r0, r1
   134f0:	umull	r2, r3, r0, r1
   134f4:	adds	r3, r3, #0
   134f8:	movne	r3, #1
   134fc:	cmp	r2, #0
   13500:	blt	13510 <abort@plt+0x27b8>
   13504:	cmp	r3, #0
   13508:	bne	13510 <abort@plt+0x27b8>
   1350c:	b	10b48 <calloc@plt>
   13510:	push	{r4, lr}
   13514:	bl	10cb0 <__errno_location@plt>
   13518:	mov	r3, #12
   1351c:	str	r3, [r0]
   13520:	mov	r0, #0
   13524:	pop	{r4, pc}
   13528:	cmp	r0, #0
   1352c:	mov	r3, #0
   13530:	moveq	r0, #1
   13534:	adds	r3, r3, #0
   13538:	movne	r3, #1
   1353c:	cmp	r0, #0
   13540:	blt	13550 <abort@plt+0x27f8>
   13544:	cmp	r3, #0
   13548:	bne	13550 <abort@plt+0x27f8>
   1354c:	b	10c50 <malloc@plt>
   13550:	push	{r4, lr}
   13554:	bl	10cb0 <__errno_location@plt>
   13558:	mov	r3, #12
   1355c:	str	r3, [r0]
   13560:	mov	r0, #0
   13564:	pop	{r4, pc}
   13568:	cmp	r0, #0
   1356c:	push	{r4, lr}
   13570:	mov	r4, r1
   13574:	bne	13584 <abort@plt+0x282c>
   13578:	mov	r0, r1
   1357c:	pop	{r4, lr}
   13580:	b	13528 <abort@plt+0x27d0>
   13584:	cmp	r1, #0
   13588:	bne	13598 <abort@plt+0x2840>
   1358c:	bl	1372c <abort@plt+0x29d4>
   13590:	mov	r0, #0
   13594:	pop	{r4, pc}
   13598:	cmp	r1, #0
   1359c:	blt	135ac <abort@plt+0x2854>
   135a0:	mov	r3, #0
   135a4:	cmp	r3, r3
   135a8:	beq	135bc <abort@plt+0x2864>
   135ac:	bl	10cb0 <__errno_location@plt>
   135b0:	mov	r3, #12
   135b4:	str	r3, [r0]
   135b8:	b	13590 <abort@plt+0x2838>
   135bc:	pop	{r4, lr}
   135c0:	b	10be4 <realloc@plt>
   135c4:	push	{r4, r5, r6, lr}
   135c8:	mov	r4, r0
   135cc:	bl	10c20 <__fpending@plt>
   135d0:	mov	r5, r0
   135d4:	mov	r0, r4
   135d8:	bl	10c2c <ferror_unlocked@plt>
   135dc:	mov	r6, r0
   135e0:	mov	r0, r4
   135e4:	bl	13634 <abort@plt+0x28dc>
   135e8:	cmp	r6, #0
   135ec:	mov	r4, r0
   135f0:	bne	1361c <abort@plt+0x28c4>
   135f4:	cmp	r0, #0
   135f8:	beq	13614 <abort@plt+0x28bc>
   135fc:	cmp	r5, #0
   13600:	bne	1362c <abort@plt+0x28d4>
   13604:	bl	10cb0 <__errno_location@plt>
   13608:	ldr	r4, [r0]
   1360c:	subs	r4, r4, #9
   13610:	mvnne	r4, #0
   13614:	mov	r0, r4
   13618:	pop	{r4, r5, r6, pc}
   1361c:	cmp	r0, #0
   13620:	bne	1362c <abort@plt+0x28d4>
   13624:	bl	10cb0 <__errno_location@plt>
   13628:	str	r4, [r0]
   1362c:	mvn	r4, #0
   13630:	b	13614 <abort@plt+0x28bc>
   13634:	push	{r0, r1, r2, r4, r5, lr}
   13638:	mov	r4, r0
   1363c:	bl	10ce0 <fileno@plt>
   13640:	cmp	r0, #0
   13644:	mov	r0, r4
   13648:	bge	13658 <abort@plt+0x2900>
   1364c:	add	sp, sp, #12
   13650:	pop	{r4, r5, lr}
   13654:	b	10cf8 <fclose@plt>
   13658:	bl	10c68 <__freading@plt>
   1365c:	cmp	r0, #0
   13660:	bne	1369c <abort@plt+0x2944>
   13664:	mov	r0, r4
   13668:	bl	136dc <abort@plt+0x2984>
   1366c:	cmp	r0, #0
   13670:	bne	136d0 <abort@plt+0x2978>
   13674:	mov	r5, #0
   13678:	mov	r0, r4
   1367c:	bl	10cf8 <fclose@plt>
   13680:	cmp	r5, #0
   13684:	beq	13694 <abort@plt+0x293c>
   13688:	bl	10cb0 <__errno_location@plt>
   1368c:	str	r5, [r0]
   13690:	mvn	r0, #0
   13694:	add	sp, sp, #12
   13698:	pop	{r4, r5, pc}
   1369c:	mov	r0, r4
   136a0:	bl	10ce0 <fileno@plt>
   136a4:	mov	r3, #1
   136a8:	str	r3, [sp]
   136ac:	mov	r2, #0
   136b0:	mov	r3, #0
   136b4:	bl	10c08 <lseek64@plt>
   136b8:	mvn	r3, #0
   136bc:	mvn	r2, #0
   136c0:	cmp	r1, r3
   136c4:	cmpeq	r0, r2
   136c8:	bne	13664 <abort@plt+0x290c>
   136cc:	b	13674 <abort@plt+0x291c>
   136d0:	bl	10cb0 <__errno_location@plt>
   136d4:	ldr	r5, [r0]
   136d8:	b	13678 <abort@plt+0x2920>
   136dc:	push	{r0, r1, r4, lr}
   136e0:	subs	r4, r0, #0
   136e4:	bne	136f8 <abort@plt+0x29a0>
   136e8:	mov	r0, r4
   136ec:	add	sp, sp, #8
   136f0:	pop	{r4, lr}
   136f4:	b	10b78 <fflush@plt>
   136f8:	bl	10c68 <__freading@plt>
   136fc:	cmp	r0, #0
   13700:	beq	136e8 <abort@plt+0x2990>
   13704:	ldr	r3, [r4]
   13708:	tst	r3, #256	; 0x100
   1370c:	beq	136e8 <abort@plt+0x2990>
   13710:	mov	r3, #1
   13714:	str	r3, [sp]
   13718:	mov	r2, #0
   1371c:	mov	r3, #0
   13720:	mov	r0, r4
   13724:	bl	13780 <abort@plt+0x2a28>
   13728:	b	136e8 <abort@plt+0x2990>
   1372c:	push	{r0, r1, r2, r4, r5, lr}
   13730:	mov	r5, r0
   13734:	bl	10cb0 <__errno_location@plt>
   13738:	ldr	r3, [r0]
   1373c:	mov	r4, r0
   13740:	str	r3, [sp]
   13744:	str	r3, [sp, #4]
   13748:	mov	r3, #0
   1374c:	str	r3, [r0]
   13750:	mov	r0, r5
   13754:	bl	10b84 <free@plt>
   13758:	ldr	r3, [r4]
   1375c:	add	r2, sp, #8
   13760:	cmp	r3, #0
   13764:	moveq	r3, #4
   13768:	movne	r3, #0
   1376c:	add	r3, r2, r3
   13770:	ldr	r3, [r3, #-8]
   13774:	str	r3, [r4]
   13778:	add	sp, sp, #12
   1377c:	pop	{r4, r5, pc}
   13780:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13784:	mov	r4, r0
   13788:	ldmib	r0, {ip, lr}
   1378c:	ldr	r8, [sp, #32]
   13790:	cmp	lr, ip
   13794:	bne	13800 <abort@plt+0x2aa8>
   13798:	ldr	lr, [r0, #20]
   1379c:	ldr	ip, [r0, #16]
   137a0:	cmp	lr, ip
   137a4:	bne	13800 <abort@plt+0x2aa8>
   137a8:	ldr	r5, [r0, #36]	; 0x24
   137ac:	cmp	r5, #0
   137b0:	bne	13800 <abort@plt+0x2aa8>
   137b4:	mov	r6, r2
   137b8:	mov	r7, r3
   137bc:	bl	10ce0 <fileno@plt>
   137c0:	mov	r2, r6
   137c4:	mov	r3, r7
   137c8:	str	r8, [sp]
   137cc:	bl	10c08 <lseek64@plt>
   137d0:	mvn	r3, #0
   137d4:	mvn	r2, #0
   137d8:	cmp	r1, r3
   137dc:	cmpeq	r0, r2
   137e0:	mvneq	r0, #0
   137e4:	ldrne	r3, [r4]
   137e8:	strdne	r0, [r4, #80]	; 0x50
   137ec:	movne	r0, r5
   137f0:	bicne	r3, r3, #16
   137f4:	strne	r3, [r4]
   137f8:	add	sp, sp, #8
   137fc:	pop	{r4, r5, r6, r7, r8, pc}
   13800:	str	r8, [sp, #32]
   13804:	mov	r0, r4
   13808:	add	sp, sp, #8
   1380c:	pop	{r4, r5, r6, r7, r8, lr}
   13810:	b	10d04 <fseeko64@plt>
   13814:	push	{r4, lr}
   13818:	mov	r0, #14
   1381c:	bl	10d28 <nl_langinfo@plt>
   13820:	ldr	r3, [pc, #24]	; 13840 <abort@plt+0x2ae8>
   13824:	cmp	r0, #0
   13828:	moveq	r0, r3
   1382c:	ldr	r3, [pc, #16]	; 13844 <abort@plt+0x2aec>
   13830:	ldrb	r2, [r0]
   13834:	cmp	r2, #0
   13838:	moveq	r0, r3
   1383c:	pop	{r4, pc}
   13840:	andeq	r3, r1, r7, ror #30
   13844:	andeq	r4, r1, r8, ror #11
   13848:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1384c:	subs	r5, r0, #0
   13850:	addeq	r5, sp, #4
   13854:	mov	r0, r5
   13858:	mov	r7, r2
   1385c:	mov	r6, r1
   13860:	bl	10c38 <mbrtowc@plt>
   13864:	cmp	r7, #0
   13868:	cmnne	r0, #3
   1386c:	mov	r4, r0
   13870:	bls	1388c <abort@plt+0x2b34>
   13874:	mov	r0, #0
   13878:	bl	138e4 <abort@plt+0x2b8c>
   1387c:	cmp	r0, #0
   13880:	moveq	r4, #1
   13884:	ldrbeq	r3, [r6]
   13888:	streq	r3, [r5]
   1388c:	mov	r0, r4
   13890:	add	sp, sp, #12
   13894:	pop	{r4, r5, r6, r7, pc}
   13898:	push	{r4, r5, r6, lr}
   1389c:	subs	r4, r2, #0
   138a0:	mov	r6, r0
   138a4:	mov	r5, r1
   138a8:	beq	138c0 <abort@plt+0x2b68>
   138ac:	mov	r1, r4
   138b0:	mvn	r0, #0
   138b4:	bl	139c4 <abort@plt+0x2c6c>
   138b8:	cmp	r0, r5
   138bc:	bcc	138d0 <abort@plt+0x2b78>
   138c0:	mul	r1, r5, r4
   138c4:	mov	r0, r6
   138c8:	pop	{r4, r5, r6, lr}
   138cc:	b	13568 <abort@plt+0x2810>
   138d0:	bl	10cb0 <__errno_location@plt>
   138d4:	mov	r3, #12
   138d8:	str	r3, [r0]
   138dc:	mov	r0, #0
   138e0:	pop	{r4, r5, r6, pc}
   138e4:	push	{lr}		; (str lr, [sp, #-4]!)
   138e8:	sub	sp, sp, #268	; 0x10c
   138ec:	ldr	r2, [pc, #64]	; 13934 <abort@plt+0x2bdc>
   138f0:	add	r1, sp, #4
   138f4:	bl	13940 <abort@plt+0x2be8>
   138f8:	cmp	r0, #0
   138fc:	movne	r0, #0
   13900:	bne	1392c <abort@plt+0x2bd4>
   13904:	ldr	r1, [pc, #44]	; 13938 <abort@plt+0x2be0>
   13908:	add	r0, sp, #4
   1390c:	bl	10b6c <strcmp@plt>
   13910:	cmp	r0, #0
   13914:	beq	1392c <abort@plt+0x2bd4>
   13918:	ldr	r1, [pc, #28]	; 1393c <abort@plt+0x2be4>
   1391c:	add	r0, sp, #4
   13920:	bl	10b6c <strcmp@plt>
   13924:	adds	r0, r0, #0
   13928:	movne	r0, #1
   1392c:	add	sp, sp, #268	; 0x10c
   13930:	pop	{pc}		; (ldr pc, [sp], #4)
   13934:	andeq	r0, r0, r1, lsl #2
   13938:	andeq	r4, r1, lr, ror #11
   1393c:	strdeq	r4, [r1], -r0
   13940:	push	{r4, r5, r6, lr}
   13944:	mov	r5, r1
   13948:	mov	r1, #0
   1394c:	mov	r4, r2
   13950:	bl	10d10 <setlocale@plt>
   13954:	subs	r6, r0, #0
   13958:	bne	1396c <abort@plt+0x2c14>
   1395c:	cmp	r4, #0
   13960:	strbne	r6, [r5]
   13964:	mov	r0, #22
   13968:	pop	{r4, r5, r6, pc}
   1396c:	bl	10ca4 <strlen@plt>
   13970:	cmp	r4, r0
   13974:	bls	13990 <abort@plt+0x2c38>
   13978:	add	r2, r0, #1
   1397c:	mov	r1, r6
   13980:	mov	r0, r5
   13984:	bl	10b9c <memcpy@plt>
   13988:	mov	r0, #0
   1398c:	pop	{r4, r5, r6, pc}
   13990:	cmp	r4, #0
   13994:	beq	139b4 <abort@plt+0x2c5c>
   13998:	sub	r4, r4, #1
   1399c:	mov	r2, r4
   139a0:	mov	r1, r6
   139a4:	mov	r0, r5
   139a8:	bl	10b9c <memcpy@plt>
   139ac:	mov	r3, #0
   139b0:	strb	r3, [r5, r4]
   139b4:	mov	r0, #34	; 0x22
   139b8:	pop	{r4, r5, r6, pc}
   139bc:	mov	r1, #0
   139c0:	b	10d10 <setlocale@plt>
   139c4:	subs	r2, r1, #1
   139c8:	bxeq	lr
   139cc:	bcc	13ba4 <abort@plt+0x2e4c>
   139d0:	cmp	r0, r1
   139d4:	bls	13b88 <abort@plt+0x2e30>
   139d8:	tst	r1, r2
   139dc:	beq	13b94 <abort@plt+0x2e3c>
   139e0:	clz	r3, r0
   139e4:	clz	r2, r1
   139e8:	sub	r3, r2, r3
   139ec:	rsbs	r3, r3, #31
   139f0:	addne	r3, r3, r3, lsl #1
   139f4:	mov	r2, #0
   139f8:	addne	pc, pc, r3, lsl #2
   139fc:	nop			; (mov r0, r0)
   13a00:	cmp	r0, r1, lsl #31
   13a04:	adc	r2, r2, r2
   13a08:	subcs	r0, r0, r1, lsl #31
   13a0c:	cmp	r0, r1, lsl #30
   13a10:	adc	r2, r2, r2
   13a14:	subcs	r0, r0, r1, lsl #30
   13a18:	cmp	r0, r1, lsl #29
   13a1c:	adc	r2, r2, r2
   13a20:	subcs	r0, r0, r1, lsl #29
   13a24:	cmp	r0, r1, lsl #28
   13a28:	adc	r2, r2, r2
   13a2c:	subcs	r0, r0, r1, lsl #28
   13a30:	cmp	r0, r1, lsl #27
   13a34:	adc	r2, r2, r2
   13a38:	subcs	r0, r0, r1, lsl #27
   13a3c:	cmp	r0, r1, lsl #26
   13a40:	adc	r2, r2, r2
   13a44:	subcs	r0, r0, r1, lsl #26
   13a48:	cmp	r0, r1, lsl #25
   13a4c:	adc	r2, r2, r2
   13a50:	subcs	r0, r0, r1, lsl #25
   13a54:	cmp	r0, r1, lsl #24
   13a58:	adc	r2, r2, r2
   13a5c:	subcs	r0, r0, r1, lsl #24
   13a60:	cmp	r0, r1, lsl #23
   13a64:	adc	r2, r2, r2
   13a68:	subcs	r0, r0, r1, lsl #23
   13a6c:	cmp	r0, r1, lsl #22
   13a70:	adc	r2, r2, r2
   13a74:	subcs	r0, r0, r1, lsl #22
   13a78:	cmp	r0, r1, lsl #21
   13a7c:	adc	r2, r2, r2
   13a80:	subcs	r0, r0, r1, lsl #21
   13a84:	cmp	r0, r1, lsl #20
   13a88:	adc	r2, r2, r2
   13a8c:	subcs	r0, r0, r1, lsl #20
   13a90:	cmp	r0, r1, lsl #19
   13a94:	adc	r2, r2, r2
   13a98:	subcs	r0, r0, r1, lsl #19
   13a9c:	cmp	r0, r1, lsl #18
   13aa0:	adc	r2, r2, r2
   13aa4:	subcs	r0, r0, r1, lsl #18
   13aa8:	cmp	r0, r1, lsl #17
   13aac:	adc	r2, r2, r2
   13ab0:	subcs	r0, r0, r1, lsl #17
   13ab4:	cmp	r0, r1, lsl #16
   13ab8:	adc	r2, r2, r2
   13abc:	subcs	r0, r0, r1, lsl #16
   13ac0:	cmp	r0, r1, lsl #15
   13ac4:	adc	r2, r2, r2
   13ac8:	subcs	r0, r0, r1, lsl #15
   13acc:	cmp	r0, r1, lsl #14
   13ad0:	adc	r2, r2, r2
   13ad4:	subcs	r0, r0, r1, lsl #14
   13ad8:	cmp	r0, r1, lsl #13
   13adc:	adc	r2, r2, r2
   13ae0:	subcs	r0, r0, r1, lsl #13
   13ae4:	cmp	r0, r1, lsl #12
   13ae8:	adc	r2, r2, r2
   13aec:	subcs	r0, r0, r1, lsl #12
   13af0:	cmp	r0, r1, lsl #11
   13af4:	adc	r2, r2, r2
   13af8:	subcs	r0, r0, r1, lsl #11
   13afc:	cmp	r0, r1, lsl #10
   13b00:	adc	r2, r2, r2
   13b04:	subcs	r0, r0, r1, lsl #10
   13b08:	cmp	r0, r1, lsl #9
   13b0c:	adc	r2, r2, r2
   13b10:	subcs	r0, r0, r1, lsl #9
   13b14:	cmp	r0, r1, lsl #8
   13b18:	adc	r2, r2, r2
   13b1c:	subcs	r0, r0, r1, lsl #8
   13b20:	cmp	r0, r1, lsl #7
   13b24:	adc	r2, r2, r2
   13b28:	subcs	r0, r0, r1, lsl #7
   13b2c:	cmp	r0, r1, lsl #6
   13b30:	adc	r2, r2, r2
   13b34:	subcs	r0, r0, r1, lsl #6
   13b38:	cmp	r0, r1, lsl #5
   13b3c:	adc	r2, r2, r2
   13b40:	subcs	r0, r0, r1, lsl #5
   13b44:	cmp	r0, r1, lsl #4
   13b48:	adc	r2, r2, r2
   13b4c:	subcs	r0, r0, r1, lsl #4
   13b50:	cmp	r0, r1, lsl #3
   13b54:	adc	r2, r2, r2
   13b58:	subcs	r0, r0, r1, lsl #3
   13b5c:	cmp	r0, r1, lsl #2
   13b60:	adc	r2, r2, r2
   13b64:	subcs	r0, r0, r1, lsl #2
   13b68:	cmp	r0, r1, lsl #1
   13b6c:	adc	r2, r2, r2
   13b70:	subcs	r0, r0, r1, lsl #1
   13b74:	cmp	r0, r1
   13b78:	adc	r2, r2, r2
   13b7c:	subcs	r0, r0, r1
   13b80:	mov	r0, r2
   13b84:	bx	lr
   13b88:	moveq	r0, #1
   13b8c:	movne	r0, #0
   13b90:	bx	lr
   13b94:	clz	r2, r1
   13b98:	rsb	r2, r2, #31
   13b9c:	lsr	r0, r0, r2
   13ba0:	bx	lr
   13ba4:	cmp	r0, #0
   13ba8:	mvnne	r0, #0
   13bac:	b	13e10 <abort@plt+0x30b8>
   13bb0:	cmp	r1, #0
   13bb4:	beq	13ba4 <abort@plt+0x2e4c>
   13bb8:	push	{r0, r1, lr}
   13bbc:	bl	139c4 <abort@plt+0x2c6c>
   13bc0:	pop	{r1, r2, lr}
   13bc4:	mul	r3, r2, r0
   13bc8:	sub	r1, r1, r3
   13bcc:	bx	lr
   13bd0:	cmp	r1, #0
   13bd4:	beq	13de0 <abort@plt+0x3088>
   13bd8:	eor	ip, r0, r1
   13bdc:	rsbmi	r1, r1, #0
   13be0:	subs	r2, r1, #1
   13be4:	beq	13dac <abort@plt+0x3054>
   13be8:	movs	r3, r0
   13bec:	rsbmi	r3, r0, #0
   13bf0:	cmp	r3, r1
   13bf4:	bls	13db8 <abort@plt+0x3060>
   13bf8:	tst	r1, r2
   13bfc:	beq	13dc8 <abort@plt+0x3070>
   13c00:	clz	r2, r3
   13c04:	clz	r0, r1
   13c08:	sub	r2, r0, r2
   13c0c:	rsbs	r2, r2, #31
   13c10:	addne	r2, r2, r2, lsl #1
   13c14:	mov	r0, #0
   13c18:	addne	pc, pc, r2, lsl #2
   13c1c:	nop			; (mov r0, r0)
   13c20:	cmp	r3, r1, lsl #31
   13c24:	adc	r0, r0, r0
   13c28:	subcs	r3, r3, r1, lsl #31
   13c2c:	cmp	r3, r1, lsl #30
   13c30:	adc	r0, r0, r0
   13c34:	subcs	r3, r3, r1, lsl #30
   13c38:	cmp	r3, r1, lsl #29
   13c3c:	adc	r0, r0, r0
   13c40:	subcs	r3, r3, r1, lsl #29
   13c44:	cmp	r3, r1, lsl #28
   13c48:	adc	r0, r0, r0
   13c4c:	subcs	r3, r3, r1, lsl #28
   13c50:	cmp	r3, r1, lsl #27
   13c54:	adc	r0, r0, r0
   13c58:	subcs	r3, r3, r1, lsl #27
   13c5c:	cmp	r3, r1, lsl #26
   13c60:	adc	r0, r0, r0
   13c64:	subcs	r3, r3, r1, lsl #26
   13c68:	cmp	r3, r1, lsl #25
   13c6c:	adc	r0, r0, r0
   13c70:	subcs	r3, r3, r1, lsl #25
   13c74:	cmp	r3, r1, lsl #24
   13c78:	adc	r0, r0, r0
   13c7c:	subcs	r3, r3, r1, lsl #24
   13c80:	cmp	r3, r1, lsl #23
   13c84:	adc	r0, r0, r0
   13c88:	subcs	r3, r3, r1, lsl #23
   13c8c:	cmp	r3, r1, lsl #22
   13c90:	adc	r0, r0, r0
   13c94:	subcs	r3, r3, r1, lsl #22
   13c98:	cmp	r3, r1, lsl #21
   13c9c:	adc	r0, r0, r0
   13ca0:	subcs	r3, r3, r1, lsl #21
   13ca4:	cmp	r3, r1, lsl #20
   13ca8:	adc	r0, r0, r0
   13cac:	subcs	r3, r3, r1, lsl #20
   13cb0:	cmp	r3, r1, lsl #19
   13cb4:	adc	r0, r0, r0
   13cb8:	subcs	r3, r3, r1, lsl #19
   13cbc:	cmp	r3, r1, lsl #18
   13cc0:	adc	r0, r0, r0
   13cc4:	subcs	r3, r3, r1, lsl #18
   13cc8:	cmp	r3, r1, lsl #17
   13ccc:	adc	r0, r0, r0
   13cd0:	subcs	r3, r3, r1, lsl #17
   13cd4:	cmp	r3, r1, lsl #16
   13cd8:	adc	r0, r0, r0
   13cdc:	subcs	r3, r3, r1, lsl #16
   13ce0:	cmp	r3, r1, lsl #15
   13ce4:	adc	r0, r0, r0
   13ce8:	subcs	r3, r3, r1, lsl #15
   13cec:	cmp	r3, r1, lsl #14
   13cf0:	adc	r0, r0, r0
   13cf4:	subcs	r3, r3, r1, lsl #14
   13cf8:	cmp	r3, r1, lsl #13
   13cfc:	adc	r0, r0, r0
   13d00:	subcs	r3, r3, r1, lsl #13
   13d04:	cmp	r3, r1, lsl #12
   13d08:	adc	r0, r0, r0
   13d0c:	subcs	r3, r3, r1, lsl #12
   13d10:	cmp	r3, r1, lsl #11
   13d14:	adc	r0, r0, r0
   13d18:	subcs	r3, r3, r1, lsl #11
   13d1c:	cmp	r3, r1, lsl #10
   13d20:	adc	r0, r0, r0
   13d24:	subcs	r3, r3, r1, lsl #10
   13d28:	cmp	r3, r1, lsl #9
   13d2c:	adc	r0, r0, r0
   13d30:	subcs	r3, r3, r1, lsl #9
   13d34:	cmp	r3, r1, lsl #8
   13d38:	adc	r0, r0, r0
   13d3c:	subcs	r3, r3, r1, lsl #8
   13d40:	cmp	r3, r1, lsl #7
   13d44:	adc	r0, r0, r0
   13d48:	subcs	r3, r3, r1, lsl #7
   13d4c:	cmp	r3, r1, lsl #6
   13d50:	adc	r0, r0, r0
   13d54:	subcs	r3, r3, r1, lsl #6
   13d58:	cmp	r3, r1, lsl #5
   13d5c:	adc	r0, r0, r0
   13d60:	subcs	r3, r3, r1, lsl #5
   13d64:	cmp	r3, r1, lsl #4
   13d68:	adc	r0, r0, r0
   13d6c:	subcs	r3, r3, r1, lsl #4
   13d70:	cmp	r3, r1, lsl #3
   13d74:	adc	r0, r0, r0
   13d78:	subcs	r3, r3, r1, lsl #3
   13d7c:	cmp	r3, r1, lsl #2
   13d80:	adc	r0, r0, r0
   13d84:	subcs	r3, r3, r1, lsl #2
   13d88:	cmp	r3, r1, lsl #1
   13d8c:	adc	r0, r0, r0
   13d90:	subcs	r3, r3, r1, lsl #1
   13d94:	cmp	r3, r1
   13d98:	adc	r0, r0, r0
   13d9c:	subcs	r3, r3, r1
   13da0:	cmp	ip, #0
   13da4:	rsbmi	r0, r0, #0
   13da8:	bx	lr
   13dac:	teq	ip, r0
   13db0:	rsbmi	r0, r0, #0
   13db4:	bx	lr
   13db8:	movcc	r0, #0
   13dbc:	asreq	r0, ip, #31
   13dc0:	orreq	r0, r0, #1
   13dc4:	bx	lr
   13dc8:	clz	r2, r1
   13dcc:	rsb	r2, r2, #31
   13dd0:	cmp	ip, #0
   13dd4:	lsr	r0, r3, r2
   13dd8:	rsbmi	r0, r0, #0
   13ddc:	bx	lr
   13de0:	cmp	r0, #0
   13de4:	mvngt	r0, #-2147483648	; 0x80000000
   13de8:	movlt	r0, #-2147483648	; 0x80000000
   13dec:	b	13e10 <abort@plt+0x30b8>
   13df0:	cmp	r1, #0
   13df4:	beq	13de0 <abort@plt+0x3088>
   13df8:	push	{r0, r1, lr}
   13dfc:	bl	13bd8 <abort@plt+0x2e80>
   13e00:	pop	{r1, r2, lr}
   13e04:	mul	r3, r2, r0
   13e08:	sub	r1, r1, r3
   13e0c:	bx	lr
   13e10:	push	{r1, lr}
   13e14:	mov	r0, #8
   13e18:	bl	10b60 <raise@plt>
   13e1c:	pop	{r1, pc}
   13e20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13e24:	mov	r7, r0
   13e28:	ldr	r6, [pc, #72]	; 13e78 <abort@plt+0x3120>
   13e2c:	ldr	r5, [pc, #72]	; 13e7c <abort@plt+0x3124>
   13e30:	add	r6, pc, r6
   13e34:	add	r5, pc, r5
   13e38:	sub	r6, r6, r5
   13e3c:	mov	r8, r1
   13e40:	mov	r9, r2
   13e44:	bl	10b28 <calloc@plt-0x20>
   13e48:	asrs	r6, r6, #2
   13e4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e50:	mov	r4, #0
   13e54:	add	r4, r4, #1
   13e58:	ldr	r3, [r5], #4
   13e5c:	mov	r2, r9
   13e60:	mov	r1, r8
   13e64:	mov	r0, r7
   13e68:	blx	r3
   13e6c:	cmp	r6, r4
   13e70:	bne	13e54 <abort@plt+0x30fc>
   13e74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e78:	ldrdeq	r1, [r1], -r8
   13e7c:	ldrdeq	r1, [r1], -r0
   13e80:	bx	lr
   13e84:	ldr	r3, [pc, #12]	; 13e98 <abort@plt+0x3140>
   13e88:	mov	r1, #0
   13e8c:	add	r3, pc, r3
   13e90:	ldr	r2, [r3]
   13e94:	b	10cbc <__cxa_atexit@plt>
   13e98:	andeq	r1, r1, r4, lsr r2

Disassembly of section .fini:

00013e9c <.fini>:
   13e9c:	push	{r3, lr}
   13ea0:	pop	{r3, pc}
