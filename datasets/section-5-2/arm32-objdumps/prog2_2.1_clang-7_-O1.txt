
../repos/prog2/2.1:     file format elf32-littlearm


Disassembly of section .init:

000106f8 <.init>:
   106f8:	push	{r3, lr}
   106fc:	bl	107cc <_start@@Base+0x3c>
   10700:	pop	{r3, pc}

Disassembly of section .plt:

00010704 <printf@plt-0x14>:
   10704:	push	{lr}		; (str lr, [sp, #-4]!)
   10708:	ldr	lr, [pc, #4]	; 10714 <printf@plt-0x4>
   1070c:	add	lr, pc, lr
   10710:	ldr	pc, [lr, #8]!
   10714:	andeq	r0, r1, ip, ror #17

00010718 <printf@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #16, 20	; 0x10000
   10720:	ldr	pc, [ip, #2284]!	; 0x8ec

00010724 <free@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #16, 20	; 0x10000
   1072c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010730 <realloc@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #16, 20	; 0x10000
   10738:	ldr	pc, [ip, #2268]!	; 0x8dc

0001073c <puts@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #16, 20	; 0x10000
   10744:	ldr	pc, [ip, #2260]!	; 0x8d4

00010748 <malloc@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #16, 20	; 0x10000
   10750:	ldr	pc, [ip, #2252]!	; 0x8cc

00010754 <__libc_start_main@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #16, 20	; 0x10000
   1075c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010760 <__gmon_start__@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #16, 20	; 0x10000
   10768:	ldr	pc, [ip, #2236]!	; 0x8bc

0001076c <putchar@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #16, 20	; 0x10000
   10774:	ldr	pc, [ip, #2228]!	; 0x8b4

00010778 <__isoc99_scanf@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #16, 20	; 0x10000
   10780:	ldr	pc, [ip, #2220]!	; 0x8ac

00010784 <abort@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #16, 20	; 0x10000
   1078c:	ldr	pc, [ip, #2212]!	; 0x8a4

Disassembly of section .text:

00010790 <_start@@Base>:
   10790:	mov	fp, #0
   10794:	mov	lr, #0
   10798:	pop	{r1}		; (ldr r1, [sp], #4)
   1079c:	mov	r2, sp
   107a0:	push	{r2}		; (str r2, [sp, #-4]!)
   107a4:	push	{r0}		; (str r0, [sp, #-4]!)
   107a8:	ldr	ip, [pc, #16]	; 107c0 <_start@@Base+0x30>
   107ac:	push	{ip}		; (str ip, [sp, #-4]!)
   107b0:	ldr	r0, [pc, #12]	; 107c4 <_start@@Base+0x34>
   107b4:	ldr	r3, [pc, #12]	; 107c8 <_start@@Base+0x38>
   107b8:	bl	10754 <__libc_start_main@plt>
   107bc:	bl	10784 <abort@plt>
   107c0:	muleq	r1, ip, sl
   107c4:	andeq	r0, r1, r0, lsl #17
   107c8:	andeq	r0, r1, ip, lsr sl
   107cc:	ldr	r3, [pc, #20]	; 107e8 <_start@@Base+0x58>
   107d0:	ldr	r2, [pc, #20]	; 107ec <_start@@Base+0x5c>
   107d4:	add	r3, pc, r3
   107d8:	ldr	r2, [r3, r2]
   107dc:	cmp	r2, #0
   107e0:	bxeq	lr
   107e4:	b	10760 <__gmon_start__@plt>
   107e8:	andeq	r0, r1, r4, lsr #16
   107ec:	andeq	r0, r0, r4, lsr r0
   107f0:	ldr	r0, [pc, #24]	; 10810 <_start@@Base+0x80>
   107f4:	ldr	r3, [pc, #24]	; 10814 <_start@@Base+0x84>
   107f8:	cmp	r3, r0
   107fc:	bxeq	lr
   10800:	ldr	r3, [pc, #16]	; 10818 <_start@@Base+0x88>
   10804:	cmp	r3, #0
   10808:	bxeq	lr
   1080c:	bx	r3
   10810:	andeq	r1, r2, r0, asr #32
   10814:	andeq	r1, r2, r0, asr #32
   10818:	andeq	r0, r0, r0
   1081c:	ldr	r0, [pc, #36]	; 10848 <_start@@Base+0xb8>
   10820:	ldr	r1, [pc, #36]	; 1084c <_start@@Base+0xbc>
   10824:	sub	r1, r1, r0
   10828:	asr	r1, r1, #2
   1082c:	add	r1, r1, r1, lsr #31
   10830:	asrs	r1, r1, #1
   10834:	bxeq	lr
   10838:	ldr	r3, [pc, #16]	; 10850 <_start@@Base+0xc0>
   1083c:	cmp	r3, #0
   10840:	bxeq	lr
   10844:	bx	r3
   10848:	andeq	r1, r2, r0, asr #32
   1084c:	andeq	r1, r2, r0, asr #32
   10850:	andeq	r0, r0, r0
   10854:	push	{r4, lr}
   10858:	ldr	r4, [pc, #24]	; 10878 <_start@@Base+0xe8>
   1085c:	ldrb	r3, [r4]
   10860:	cmp	r3, #0
   10864:	popne	{r4, pc}
   10868:	bl	107f0 <_start@@Base+0x60>
   1086c:	mov	r3, #1
   10870:	strb	r3, [r4]
   10874:	pop	{r4, pc}
   10878:	andeq	r1, r2, r0, asr #32
   1087c:	b	1081c <_start@@Base+0x8c>

00010880 <main@@Base>:
   10880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10884:	add	fp, sp, #28
   10888:	sub	sp, sp, #12
   1088c:	movw	r0, #2732	; 0xaac
   10890:	movt	r0, #1
   10894:	bl	10718 <printf@plt>
   10898:	movw	r0, #2834	; 0xb12
   1089c:	movt	r0, #1
   108a0:	add	r1, sp, #8
   108a4:	bl	10778 <__isoc99_scanf@plt>
   108a8:	ldr	r0, [sp, #8]
   108ac:	lsl	r4, r0, #2
   108b0:	mov	r0, r4
   108b4:	bl	10748 <malloc@plt>
   108b8:	mov	r8, r0
   108bc:	mov	r0, r4
   108c0:	bl	10748 <malloc@plt>
   108c4:	mov	sl, r0
   108c8:	mov	r0, r4
   108cc:	bl	10748 <malloc@plt>
   108d0:	str	r0, [sp, #4]
   108d4:	ldr	r0, [sp, #8]
   108d8:	cmp	r0, #1
   108dc:	str	r8, [sp]
   108e0:	blt	10958 <main@@Base+0xd8>
   108e4:	mov	r6, #0
   108e8:	mov	r9, #1
   108ec:	movw	r7, #2754	; 0xac2
   108f0:	movt	r7, #1
   108f4:	movw	r4, #2834	; 0xb12
   108f8:	movt	r4, #1
   108fc:	mov	r5, #0
   10900:	mov	r0, r7
   10904:	mov	r1, r9
   10908:	bl	10718 <printf@plt>
   1090c:	mov	r0, r4
   10910:	mov	r1, r8
   10914:	bl	10778 <__isoc99_scanf@plt>
   10918:	ldr	r0, [r8]
   1091c:	tst	r0, #1
   10920:	bne	10930 <main@@Base+0xb0>
   10924:	str	r0, [sl, r6, lsl #2]
   10928:	add	r6, r6, #1
   1092c:	b	1093c <main@@Base+0xbc>
   10930:	ldr	r1, [sp, #4]
   10934:	str	r0, [r1, r5, lsl #2]
   10938:	add	r5, r5, #1
   1093c:	add	r8, r8, #4
   10940:	add	r0, r9, #1
   10944:	ldr	r1, [sp, #8]
   10948:	cmp	r9, r1
   1094c:	mov	r9, r0
   10950:	blt	10900 <main@@Base+0x80>
   10954:	b	10960 <main@@Base+0xe0>
   10958:	mov	r5, #0
   1095c:	mov	r6, #0
   10960:	lsl	r1, r6, #2
   10964:	mov	r0, sl
   10968:	bl	10730 <realloc@plt>
   1096c:	mov	r8, r0
   10970:	lsl	r1, r5, #2
   10974:	ldr	r0, [sp, #4]
   10978:	bl	10730 <realloc@plt>
   1097c:	mov	r7, r0
   10980:	movw	r0, #2782	; 0xade
   10984:	movt	r0, #1
   10988:	bl	10718 <printf@plt>
   1098c:	ldr	r1, [sp, #8]
   10990:	ldr	r4, [sp]
   10994:	mov	r0, r4
   10998:	bl	109f0 <PrintArray@@Base>
   1099c:	movw	r0, #2799	; 0xaef
   109a0:	movt	r0, #1
   109a4:	bl	10718 <printf@plt>
   109a8:	mov	r0, r8
   109ac:	mov	r1, r6
   109b0:	bl	109f0 <PrintArray@@Base>
   109b4:	movw	r0, #2815	; 0xaff
   109b8:	movt	r0, #1
   109bc:	bl	10718 <printf@plt>
   109c0:	mov	r0, r7
   109c4:	mov	r1, r5
   109c8:	bl	109f0 <PrintArray@@Base>
   109cc:	mov	r0, r4
   109d0:	bl	10724 <free@plt>
   109d4:	mov	r0, r8
   109d8:	bl	10724 <free@plt>
   109dc:	mov	r0, r7
   109e0:	bl	10724 <free@plt>
   109e4:	mov	r0, #0
   109e8:	sub	sp, fp, #28
   109ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000109f0 <PrintArray@@Base>:
   109f0:	push	{r4, r5, r6, sl, fp, lr}
   109f4:	add	fp, sp, #16
   109f8:	mov	r4, r1
   109fc:	mov	r5, r0
   10a00:	mov	r0, #91	; 0x5b
   10a04:	bl	1076c <putchar@plt>
   10a08:	cmp	r4, #1
   10a0c:	blt	10a2c <PrintArray@@Base+0x3c>
   10a10:	movw	r6, #2833	; 0xb11
   10a14:	movt	r6, #1
   10a18:	ldr	r1, [r5], #4
   10a1c:	mov	r0, r6
   10a20:	bl	10718 <printf@plt>
   10a24:	subs	r4, r4, #1
   10a28:	bne	10a18 <PrintArray@@Base+0x28>
   10a2c:	movw	r0, #2837	; 0xb15
   10a30:	movt	r0, #1
   10a34:	pop	{r4, r5, r6, sl, fp, lr}
   10a38:	b	1073c <puts@plt>

00010a3c <__libc_csu_init@@Base>:
   10a3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a40:	mov	r7, r0
   10a44:	ldr	r6, [pc, #72]	; 10a94 <__libc_csu_init@@Base+0x58>
   10a48:	ldr	r5, [pc, #72]	; 10a98 <__libc_csu_init@@Base+0x5c>
   10a4c:	add	r6, pc, r6
   10a50:	add	r5, pc, r5
   10a54:	sub	r6, r6, r5
   10a58:	mov	r8, r1
   10a5c:	mov	r9, r2
   10a60:	bl	106f8 <printf@plt-0x20>
   10a64:	asrs	r6, r6, #2
   10a68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a6c:	mov	r4, #0
   10a70:	add	r4, r4, #1
   10a74:	ldr	r3, [r5], #4
   10a78:	mov	r2, r9
   10a7c:	mov	r1, r8
   10a80:	mov	r0, r7
   10a84:	blx	r3
   10a88:	cmp	r6, r4
   10a8c:	bne	10a70 <__libc_csu_init@@Base+0x34>
   10a90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a94:			; <UNDEFINED> instruction: 0x000104b8
   10a98:			; <UNDEFINED> instruction: 0x000104b0

00010a9c <__libc_csu_fini@@Base>:
   10a9c:	bx	lr

Disassembly of section .fini:

00010aa0 <.fini>:
   10aa0:	push	{r3, lr}
   10aa4:	pop	{r3, pc}
