
../repos/charybdis/modules/.libs/m_testmask.so:     file format elf32-littlearm


Disassembly of section .init:

000005b0 <_init>:
 5b0:	push	{r3, lr}
 5b4:	bl	66c <call_weak_fn>
 5b8:	pop	{r3, pc}

Disassembly of section .plt:

000005bc <.plt>:
 5bc:	push	{lr}		; (str lr, [sp, #-4]!)
 5c0:	ldr	lr, [pc, #4]	; 5cc <.plt+0x10>
 5c4:	add	lr, pc, lr
 5c8:	ldr	pc, [lr, #8]!
 5cc:	.word	0x00010a34

000005d0 <__cxa_finalize@plt>:
 5d0:	add	ip, pc, #0, 12
 5d4:	add	ip, ip, #16, 20	; 0x10000
 5d8:	ldr	pc, [ip, #2612]!	; 0xa34

000005dc <match_esc@plt>:
 5dc:	add	ip, pc, #0, 12
 5e0:	add	ip, ip, #16, 20	; 0x10000
 5e4:	ldr	pc, [ip, #2604]!	; 0xa2c

000005e8 <sendto_one@plt>:
 5e8:	add	ip, pc, #0, 12
 5ec:	add	ip, ip, #16, 20	; 0x10000
 5f0:	ldr	pc, [ip, #2596]!	; 0xa24

000005f4 <collapse_esc@plt>:
 5f4:	add	ip, pc, #0, 12
 5f8:	add	ip, ip, #16, 20	; 0x10000
 5fc:	ldr	pc, [ip, #2588]!	; 0xa1c

00000600 <match_ips@plt>:
 600:	add	ip, pc, #0, 12
 604:	add	ip, ip, #16, 20	; 0x10000
 608:	ldr	pc, [ip, #2580]!	; 0xa14

0000060c <memcpy@plt>:
 60c:	add	ip, pc, #0, 12
 610:	add	ip, ip, #16, 20	; 0x10000
 614:	ldr	pc, [ip, #2572]!	; 0xa0c

00000618 <__gmon_start__@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #16, 20	; 0x10000
 620:	ldr	pc, [ip, #2564]!	; 0xa04

00000624 <strlen@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #16, 20	; 0x10000
 62c:	ldr	pc, [ip, #2556]!	; 0x9fc

00000630 <strchr@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #16, 20	; 0x10000
 638:	ldr	pc, [ip, #2548]!	; 0x9f4

0000063c <collapse@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #16, 20	; 0x10000
 644:	ldr	pc, [ip, #2540]!	; 0x9ec

00000648 <match@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #16, 20	; 0x10000
 650:	ldr	pc, [ip, #2532]!	; 0x9e4

00000654 <sendto_one_notice@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #16, 20	; 0x10000
 65c:	ldr	pc, [ip, #2524]!	; 0x9dc

00000660 <show_ip@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #16, 20	; 0x10000
 668:	ldr	pc, [ip, #2516]!	; 0x9d4

Disassembly of section .text:

0000066c <call_weak_fn>:
 66c:	ldr	r3, [pc, #20]	; 688 <call_weak_fn+0x1c>
 670:	ldr	r2, [pc, #20]	; 68c <call_weak_fn+0x20>
 674:	add	r3, pc, r3
 678:	ldr	r2, [r3, r2]
 67c:	cmp	r2, #0
 680:	bxeq	lr
 684:	b	618 <__gmon_start__@plt>
 688:	.word	0x00010984
 68c:	.word	0x00000048

00000690 <deregister_tm_clones>:
 690:	ldr	r3, [pc, #52]	; 6cc <deregister_tm_clones+0x3c>
 694:	ldr	r0, [pc, #52]	; 6d0 <deregister_tm_clones+0x40>
 698:	add	r3, pc, r3
 69c:	add	r0, pc, r0
 6a0:	add	r3, r3, #3
 6a4:	sub	r3, r3, r0
 6a8:	cmp	r3, #6
 6ac:	ldr	r3, [pc, #32]	; 6d4 <deregister_tm_clones+0x44>
 6b0:	add	r3, pc, r3
 6b4:	bxls	lr
 6b8:	ldr	r2, [pc, #24]	; 6d8 <deregister_tm_clones+0x48>
 6bc:	ldr	r3, [r3, r2]
 6c0:	cmp	r3, #0
 6c4:	bxeq	lr
 6c8:	bx	r3
 6cc:	.word	0x00010a34
 6d0:	.word	0x00010a30
 6d4:	.word	0x00010948
 6d8:	.word	0x00000044

000006dc <register_tm_clones>:
 6dc:	ldr	r1, [pc, #56]	; 71c <register_tm_clones+0x40>
 6e0:	ldr	r0, [pc, #56]	; 720 <register_tm_clones+0x44>
 6e4:	add	r1, pc, r1
 6e8:	add	r0, pc, r0
 6ec:	sub	r1, r1, r0
 6f0:	ldr	r3, [pc, #44]	; 724 <register_tm_clones+0x48>
 6f4:	asr	r1, r1, #2
 6f8:	add	r3, pc, r3
 6fc:	add	r1, r1, r1, lsr #31
 700:	asrs	r1, r1, #1
 704:	bxeq	lr
 708:	ldr	r2, [pc, #24]	; 728 <register_tm_clones+0x4c>
 70c:	ldr	r3, [r3, r2]
 710:	cmp	r3, #0
 714:	bxeq	lr
 718:	bx	r3
 71c:	.word	0x000109e8
 720:	.word	0x000109e4
 724:	.word	0x00010900
 728:	.word	0x00000054

0000072c <__do_global_dtors_aux>:
 72c:	ldr	r3, [pc, #76]	; 780 <__do_global_dtors_aux+0x54>
 730:	ldr	r2, [pc, #76]	; 784 <__do_global_dtors_aux+0x58>
 734:	add	r3, pc, r3
 738:	add	r2, pc, r2
 73c:	ldrb	r3, [r3]
 740:	cmp	r3, #0
 744:	bxne	lr
 748:	ldr	r3, [pc, #56]	; 788 <__do_global_dtors_aux+0x5c>
 74c:	push	{r4, lr}
 750:	ldr	r3, [r2, r3]
 754:	cmp	r3, #0
 758:	beq	768 <__do_global_dtors_aux+0x3c>
 75c:	ldr	r3, [pc, #40]	; 78c <__do_global_dtors_aux+0x60>
 760:	ldr	r0, [pc, r3]
 764:	bl	5d0 <__cxa_finalize@plt>
 768:	bl	690 <deregister_tm_clones>
 76c:	ldr	r3, [pc, #28]	; 790 <__do_global_dtors_aux+0x64>
 770:	mov	r2, #1
 774:	add	r3, pc, r3
 778:	strb	r2, [r3]
 77c:	pop	{r4, pc}
 780:	.word	0x00010998
 784:	.word	0x000108c0
 788:	.word	0x00000040
 78c:	.word	0x000108f4
 790:	.word	0x00010958

00000794 <frame_dummy>:
 794:	ldr	r0, [pc, #56]	; 7d4 <frame_dummy+0x40>
 798:	ldr	r3, [pc, #56]	; 7d8 <frame_dummy+0x44>
 79c:	add	r0, pc, r0
 7a0:	ldr	r2, [r0]
 7a4:	add	r3, pc, r3
 7a8:	cmp	r2, #0
 7ac:	bne	7b4 <frame_dummy+0x20>
 7b0:	b	6dc <register_tm_clones>
 7b4:	ldr	r2, [pc, #32]	; 7dc <frame_dummy+0x48>
 7b8:	ldr	r3, [r3, r2]
 7bc:	cmp	r3, #0
 7c0:	beq	7b0 <frame_dummy+0x1c>
 7c4:	push	{r4, lr}
 7c8:	blx	r3
 7cc:	pop	{r4, lr}
 7d0:	b	6dc <register_tm_clones>
 7d4:	.word	0x00010758
 7d8:	.word	0x00010854
 7dc:	.word	0x00000050

000007e0 <mo_testmask>:
 7e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 7e4:	add	fp, sp, #32
 7e8:	sub	sp, sp, #52	; 0x34
 7ec:	str	r3, [fp, #-40]	; 0xffffffd8
 7f0:	ldr	r3, [fp, #4]
 7f4:	mov	r9, r2
 7f8:	ldr	r8, [pc, #824]	; b38 <mo_testmask+0x358>
 7fc:	ldr	r6, [r3, #4]
 800:	add	r8, pc, r8
 804:	mov	r0, r6
 808:	bl	624 <strlen@plt>
 80c:	mov	r1, r6
 810:	add	r3, r0, #15
 814:	bic	r3, r3, #7
 818:	sub	sp, sp, r3
 81c:	add	r4, sp, #24
 820:	add	r2, r0, #1
 824:	mov	r0, r4
 828:	bl	60c <memcpy@plt>
 82c:	mov	r0, r4
 830:	bl	63c <collapse@plt>
 834:	mov	r0, r4
 838:	mov	r1, #64	; 0x40
 83c:	bl	630 <strchr@plt>
 840:	subs	sl, r0, #0
 844:	beq	9b8 <mo_testmask+0x1d8>
 848:	mov	r5, #0
 84c:	strb	r5, [sl]
 850:	mov	r1, #33	; 0x21
 854:	mov	r0, r4
 858:	bl	630 <strchr@plt>
 85c:	add	r6, sl, #1
 860:	cmp	r0, #0
 864:	beq	b04 <mo_testmask+0x324>
 868:	adds	r7, r0, #1
 86c:	strb	r5, [r0]
 870:	beq	9b8 <mo_testmask+0x1d8>
 874:	ldrb	r3, [r7]
 878:	cmp	r6, #0
 87c:	cmpne	r3, #0
 880:	moveq	r3, #1
 884:	movne	r3, #0
 888:	beq	9b8 <mo_testmask+0x1d8>
 88c:	ldrb	r2, [sl, #1]
 890:	cmp	r2, #0
 894:	beq	9b8 <mo_testmask+0x1d8>
 898:	ldr	r2, [fp, #-40]	; 0xffffffd8
 89c:	cmp	r2, #2
 8a0:	strle	r3, [fp, #-40]	; 0xffffffd8
 8a4:	bgt	a34 <mo_testmask+0x254>
 8a8:	ldr	r3, [pc, #652]	; b3c <mo_testmask+0x35c>
 8ac:	ldr	r3, [r8, r3]
 8b0:	ldr	sl, [r3]
 8b4:	cmp	sl, #0
 8b8:	beq	b2c <mo_testmask+0x34c>
 8bc:	ldr	r2, [pc, #636]	; b40 <mo_testmask+0x360>
 8c0:	mov	r3, #0
 8c4:	add	r2, pc, r2
 8c8:	str	r2, [fp, #-44]	; 0xffffffd4
 8cc:	ldr	r2, [pc, #624]	; b44 <mo_testmask+0x364>
 8d0:	str	r3, [fp, #-48]	; 0xffffffd0
 8d4:	add	r2, pc, r2
 8d8:	str	r2, [fp, #-60]	; 0xffffffc4
 8dc:	str	r3, [fp, #-52]	; 0xffffffcc
 8e0:	str	r8, [fp, #-56]	; 0xffffffc8
 8e4:	b	8f4 <mo_testmask+0x114>
 8e8:	ldr	sl, [sl, #8]
 8ec:	cmp	sl, #0
 8f0:	beq	9d0 <mo_testmask+0x1f0>
 8f4:	ldr	r8, [sl]
 8f8:	ldrh	r1, [r8, #80]	; 0x50
 8fc:	cmp	r1, #64	; 0x40
 900:	bne	8e8 <mo_testmask+0x108>
 904:	ldr	r1, [r8, #24]
 908:	cmp	r1, #0
 90c:	beq	8e8 <mo_testmask+0x108>
 910:	ldrb	r1, [r8, #291]	; 0x123
 914:	cmp	r1, #0
 918:	ldreq	r5, [fp, #-44]	; 0xffffffd4
 91c:	bne	ae4 <mo_testmask+0x304>
 920:	add	r1, r8, #152	; 0x98
 924:	mov	r0, r7
 928:	bl	648 <match@plt>
 92c:	cmp	r0, #0
 930:	beq	8e8 <mo_testmask+0x108>
 934:	add	r1, r8, #163	; 0xa3
 938:	mov	r0, r6
 93c:	bl	648 <match@plt>
 940:	cmp	r0, #0
 944:	beq	a94 <mo_testmask+0x2b4>
 948:	cmp	r4, #0
 94c:	beq	964 <mo_testmask+0x184>
 950:	add	r1, r8, #88	; 0x58
 954:	mov	r0, r4
 958:	bl	648 <match@plt>
 95c:	cmp	r0, #0
 960:	beq	8e8 <mo_testmask+0x108>
 964:	ldr	r3, [fp, #-40]	; 0xffffffd8
 968:	cmp	r3, #0
 96c:	beq	988 <mo_testmask+0x1a8>
 970:	add	r1, r8, #344	; 0x158
 974:	add	r1, r1, #1
 978:	ldr	r0, [fp, #-40]	; 0xffffffd8
 97c:	bl	5dc <match_esc@plt>
 980:	cmp	r0, #0
 984:	beq	8e8 <mo_testmask+0x108>
 988:	ldrd	r0, [r8, #64]	; 0x40
 98c:	mov	r1, #0
 990:	and	r0, r0, #8192	; 0x2000
 994:	orrs	r3, r0, r1
 998:	beq	ad4 <mo_testmask+0x2f4>
 99c:	ldrh	r2, [r8, #80]	; 0x50
 9a0:	cmp	r2, #64	; 0x40
 9a4:	bne	ad4 <mo_testmask+0x2f4>
 9a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
 9ac:	add	r3, r3, #1
 9b0:	str	r3, [fp, #-52]	; 0xffffffcc
 9b4:	b	8e8 <mo_testmask+0x108>
 9b8:	ldr	r1, [pc, #392]	; b48 <mo_testmask+0x368>
 9bc:	mov	r0, r9
 9c0:	add	r1, pc, r1
 9c4:	bl	654 <sendto_one_notice@plt>
 9c8:	sub	sp, fp, #32
 9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 9d0:	ldr	r8, [fp, #-56]	; 0xffffffc8
 9d4:	cmp	r4, #0
 9d8:	add	r3, r9, #88	; 0x58
 9dc:	beq	b10 <mo_testmask+0x330>
 9e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
 9e4:	cmp	r2, #0
 9e8:	beq	b1c <mo_testmask+0x33c>
 9ec:	ldr	r2, [pc, #344]	; b4c <mo_testmask+0x36c>
 9f0:	ldr	ip, [fp, #-40]	; 0xffffffd8
 9f4:	ldr	r1, [pc, #340]	; b50 <mo_testmask+0x370>
 9f8:	ldr	r2, [r8, r2]
 9fc:	str	ip, [sp, #20]
 a00:	ldr	ip, [fp, #-48]	; 0xffffffd0
 a04:	mov	r0, r9
 a08:	str	ip, [sp, #4]
 a0c:	ldr	ip, [fp, #-52]	; 0xffffffcc
 a10:	add	r1, pc, r1
 a14:	add	r2, r2, #88	; 0x58
 a18:	str	r6, [sp, #16]
 a1c:	str	r7, [sp, #12]
 a20:	str	r4, [sp, #8]
 a24:	str	ip, [sp]
 a28:	bl	5e8 <sendto_one@plt>
 a2c:	sub	sp, fp, #32
 a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 a34:	ldr	r3, [fp, #4]
 a38:	ldr	sl, [r3, #8]
 a3c:	cmp	sl, #0
 a40:	streq	sl, [fp, #-40]	; 0xffffffd8
 a44:	beq	8a8 <mo_testmask+0xc8>
 a48:	ldrb	r5, [sl]
 a4c:	cmp	r5, #0
 a50:	streq	r5, [fp, #-40]	; 0xffffffd8
 a54:	beq	8a8 <mo_testmask+0xc8>
 a58:	mov	r0, sl
 a5c:	bl	624 <strlen@plt>
 a60:	mov	r1, sl
 a64:	add	r3, r0, #15
 a68:	bic	r3, r3, #7
 a6c:	sub	sp, sp, r3
 a70:	add	r3, sp, #24
 a74:	mov	r5, r3
 a78:	add	r2, r0, #1
 a7c:	mov	r0, r3
 a80:	str	r3, [fp, #-40]	; 0xffffffd8
 a84:	bl	60c <memcpy@plt>
 a88:	mov	r0, r5
 a8c:	bl	5f4 <collapse_esc@plt>
 a90:	b	8a8 <mo_testmask+0xc8>
 a94:	add	r1, r8, #227	; 0xe3
 a98:	mov	r0, r6
 a9c:	bl	648 <match@plt>
 aa0:	cmp	r0, #0
 aa4:	bne	948 <mo_testmask+0x168>
 aa8:	mov	r1, r5
 aac:	mov	r0, r6
 ab0:	bl	648 <match@plt>
 ab4:	cmp	r0, #0
 ab8:	bne	948 <mo_testmask+0x168>
 abc:	mov	r1, r5
 ac0:	mov	r0, r6
 ac4:	bl	600 <match_ips@plt>
 ac8:	cmp	r0, #0
 acc:	bne	948 <mo_testmask+0x168>
 ad0:	b	8e8 <mo_testmask+0x108>
 ad4:	ldr	r3, [fp, #-48]	; 0xffffffd0
 ad8:	add	r3, r3, #1
 adc:	str	r3, [fp, #-48]	; 0xffffffd0
 ae0:	b	8e8 <mo_testmask+0x108>
 ae4:	mov	r1, r8
 ae8:	mov	r0, r9
 aec:	bl	660 <show_ip@plt>
 af0:	cmp	r0, #0
 af4:	addne	r5, r8, #288	; 0x120
 af8:	addne	r5, r5, #3
 afc:	ldreq	r5, [fp, #-60]	; 0xffffffc4
 b00:	b	920 <mo_testmask+0x140>
 b04:	mov	r7, r4
 b08:	mov	r4, r0
 b0c:	b	874 <mo_testmask+0x94>
 b10:	ldr	r4, [pc, #60]	; b54 <mo_testmask+0x374>
 b14:	add	r4, pc, r4
 b18:	b	9e0 <mo_testmask+0x200>
 b1c:	ldr	r2, [pc, #52]	; b58 <mo_testmask+0x378>
 b20:	add	r2, pc, r2
 b24:	str	r2, [fp, #-40]	; 0xffffffd8
 b28:	b	9ec <mo_testmask+0x20c>
 b2c:	str	sl, [fp, #-48]	; 0xffffffd0
 b30:	str	sl, [fp, #-52]	; 0xffffffcc
 b34:	b	9d4 <mo_testmask+0x1f4>
 b38:	.word	0x000107f8
 b3c:	.word	0x0000004c
 b40:	.word	0x000002f4
 b44:	.word	0x000002f4
 b48:	.word	0x00000210
 b4c:	.word	0x00000058
 b50:	.word	0x000001d4
 b54:	.word	0x000000b8
 b58:	.word	0x000000ac

Disassembly of section .fini:

00000b5c <_fini>:
 b5c:	push	{r3, lr}
 b60:	pop	{r3, pc}
