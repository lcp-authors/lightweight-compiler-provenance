
../repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010d48 <.init>:
   10d48:	push	{r3, lr}
   10d4c:	bl	10ffc <_start@@Base+0x3c>
   10d50:	pop	{r3, pc}

Disassembly of section .plt:

00010d54 <calloc@plt-0x14>:
   10d54:	push	{lr}		; (str lr, [sp, #-4]!)
   10d58:	ldr	lr, [pc, #4]	; 10d64 <calloc@plt-0x4>
   10d5c:	add	lr, pc, lr
   10d60:	ldr	pc, [lr, #8]!
   10d64:	muleq	r1, ip, r2

00010d68 <calloc@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #77824	; 0x13000
   10d70:	ldr	pc, [ip, #668]!	; 0x29c

00010d74 <raise@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #77824	; 0x13000
   10d7c:	ldr	pc, [ip, #660]!	; 0x294

00010d80 <strcmp@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #77824	; 0x13000
   10d88:	ldr	pc, [ip, #652]!	; 0x28c

00010d8c <printf@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #77824	; 0x13000
   10d94:	ldr	pc, [ip, #644]!	; 0x284

00010d98 <__isoc99_fscanf@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #77824	; 0x13000
   10da0:	ldr	pc, [ip, #636]!	; 0x27c

00010da4 <fopen@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #77824	; 0x13000
   10dac:	ldr	pc, [ip, #628]!	; 0x274

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #77824	; 0x13000
   10db8:	ldr	pc, [ip, #620]!	; 0x26c

00010dbc <memcpy@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #77824	; 0x13000
   10dc4:	ldr	pc, [ip, #612]!	; 0x264

00010dc8 <realloc@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #77824	; 0x13000
   10dd0:	ldr	pc, [ip, #604]!	; 0x25c

00010dd4 <strcpy@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #77824	; 0x13000
   10ddc:	ldr	pc, [ip, #596]!	; 0x254

00010de0 <puts@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #77824	; 0x13000
   10de8:	ldr	pc, [ip, #588]!	; 0x24c

00010dec <malloc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #77824	; 0x13000
   10df4:	ldr	pc, [ip, #580]!	; 0x244

00010df8 <__libc_start_main@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #77824	; 0x13000
   10e00:	ldr	pc, [ip, #572]!	; 0x23c

00010e04 <__gmon_start__@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #77824	; 0x13000
   10e0c:	ldr	pc, [ip, #564]!	; 0x234

00010e10 <strlen@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #77824	; 0x13000
   10e18:	ldr	pc, [ip, #556]!	; 0x22c

00010e1c <setvbuf@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #77824	; 0x13000
   10e24:	ldr	pc, [ip, #548]!	; 0x224

00010e28 <putchar@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #77824	; 0x13000
   10e30:	ldr	pc, [ip, #540]!	; 0x21c

00010e34 <fclose@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #77824	; 0x13000
   10e3c:	ldr	pc, [ip, #532]!	; 0x214

00010e40 <abort@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #77824	; 0x13000
   10e48:	ldr	pc, [ip, #524]!	; 0x20c

Disassembly of section .text:

00010e4c <main@@Base>:
   10e4c:	ldr	r2, [pc, #308]	; 10f88 <main@@Base+0x13c>
   10e50:	mov	r3, #0
   10e54:	push	{r4, r5, r6, r7, r8, lr}
   10e58:	mov	r1, r3
   10e5c:	sub	sp, sp, #504	; 0x1f8
   10e60:	ldr	r0, [r2]
   10e64:	mov	r2, #2
   10e68:	bl	10e1c <setvbuf@plt>
   10e6c:	ldr	r1, [pc, #280]	; 10f8c <main@@Base+0x140>
   10e70:	ldr	r0, [pc, #280]	; 10f90 <main@@Base+0x144>
   10e74:	bl	10da4 <fopen@plt>
   10e78:	ldr	r1, [pc, #268]	; 10f8c <main@@Base+0x140>
   10e7c:	ldr	r7, [pc, #272]	; 10f94 <main@@Base+0x148>
   10e80:	mov	r6, r0
   10e84:	ldr	r0, [pc, #268]	; 10f98 <main@@Base+0x14c>
   10e88:	bl	10da4 <fopen@plt>
   10e8c:	mov	r5, r0
   10e90:	ldr	r0, [pc, #260]	; 10f9c <main@@Base+0x150>
   10e94:	bl	10de0 <puts@plt>
   10e98:	bl	111a8 <avl_nova@@Base>
   10e9c:	mov	r4, r0
   10ea0:	b	10ea8 <main@@Base+0x5c>
   10ea4:	bl	118a4 <avl_insere@@Base>
   10ea8:	mov	r1, r7
   10eac:	add	r2, sp, #4
   10eb0:	mov	r0, r6
   10eb4:	bl	10d98 <__isoc99_fscanf@plt>
   10eb8:	add	r1, sp, #4
   10ebc:	cmp	r0, #1
   10ec0:	mov	r0, r4
   10ec4:	beq	10ea4 <main@@Base+0x58>
   10ec8:	ldr	r0, [pc, #208]	; 10fa0 <main@@Base+0x154>
   10ecc:	bl	10d8c <printf@plt>
   10ed0:	mov	r0, r4
   10ed4:	bl	13290 <avl_imprime@@Base>
   10ed8:	ldr	r0, [pc, #196]	; 10fa4 <main@@Base+0x158>
   10edc:	bl	10d8c <printf@plt>
   10ee0:	ldr	r1, [pc, #192]	; 10fa8 <main@@Base+0x15c>
   10ee4:	mov	r0, r4
   10ee8:	bl	110e8 <avl_max_subarvore@@Base>
   10eec:	mov	r0, r4
   10ef0:	bl	126dc <avl_apaga@@Base>
   10ef4:	ldr	r0, [pc, #176]	; 10fac <main@@Base+0x160>
   10ef8:	bl	10de0 <puts@plt>
   10efc:	ldr	r1, [pc, #172]	; 10fb0 <main@@Base+0x164>
   10f00:	ldr	r0, [pc, #172]	; 10fb4 <main@@Base+0x168>
   10f04:	bl	132dc <tabela_nova@@Base>
   10f08:	ldr	r8, [pc, #132]	; 10f94 <main@@Base+0x148>
   10f0c:	ldr	r7, [pc, #164]	; 10fb8 <main@@Base+0x16c>
   10f10:	mov	r4, r0
   10f14:	b	10f1c <main@@Base+0xd0>
   10f18:	bl	133ac <tabela_adiciona@@Base>
   10f1c:	add	r2, sp, #4
   10f20:	mov	r1, r8
   10f24:	mov	r0, r5
   10f28:	bl	10d98 <__isoc99_fscanf@plt>
   10f2c:	mov	r2, r7
   10f30:	add	r1, sp, #4
   10f34:	cmp	r0, #1
   10f38:	mov	r0, r4
   10f3c:	beq	10f18 <main@@Base+0xcc>
   10f40:	bl	1385c <mostraTabela@@Base>
   10f44:	ldr	r1, [pc, #112]	; 10fbc <main@@Base+0x170>
   10f48:	mov	r0, r4
   10f4c:	bl	11130 <tabela_copia@@Base>
   10f50:	subs	r7, r0, #0
   10f54:	beq	10f5c <main@@Base+0x110>
   10f58:	bl	1385c <mostraTabela@@Base>
   10f5c:	mov	r0, r4
   10f60:	bl	1334c <tabela_apaga@@Base>
   10f64:	mov	r0, r7
   10f68:	bl	1334c <tabela_apaga@@Base>
   10f6c:	mov	r0, r6
   10f70:	bl	10e34 <fclose@plt>
   10f74:	mov	r0, r5
   10f78:	bl	10e34 <fclose@plt>
   10f7c:	mov	r0, #0
   10f80:	add	sp, sp, #504	; 0x1f8
   10f84:	pop	{r4, r5, r6, r7, r8, pc}
   10f88:	andeq	r4, r2, r4, rrx
   10f8c:	ldrdeq	r3, [r1], -ip
   10f90:	andeq	r3, r1, r0, ror #23
   10f94:	ldrdeq	r3, [r1], -r8
   10f98:	andeq	r3, r1, ip, ror #23
   10f9c:	strdeq	r3, [r1], -r8
   10fa0:	andeq	r3, r1, ip, lsl #24
   10fa4:	andeq	r3, r1, r0, lsr #24
   10fa8:	andeq	r3, r1, r8, lsr ip
   10fac:	andeq	r3, r1, ip, lsr ip
   10fb0:	andeq	r3, r1, r0, lsr #16
   10fb4:	andeq	r0, r0, r9, asr r2
   10fb8:	andeq	r3, r1, r8, lsl #24
   10fbc:	andeq	r0, r0, fp, ror #4

00010fc0 <_start@@Base>:
   10fc0:	mov	fp, #0
   10fc4:	mov	lr, #0
   10fc8:	pop	{r1}		; (ldr r1, [sp], #4)
   10fcc:	mov	r2, sp
   10fd0:	push	{r2}		; (str r2, [sp, #-4]!)
   10fd4:	push	{r0}		; (str r0, [sp, #-4]!)
   10fd8:	ldr	ip, [pc, #16]	; 10ff0 <_start@@Base+0x30>
   10fdc:	push	{ip}		; (str ip, [sp, #-4]!)
   10fe0:	ldr	r0, [pc, #12]	; 10ff4 <_start@@Base+0x34>
   10fe4:	ldr	r3, [pc, #12]	; 10ff8 <_start@@Base+0x38>
   10fe8:	bl	10df8 <__libc_start_main@plt>
   10fec:	bl	10e40 <abort@plt>
   10ff0:	andeq	r3, r1, r8, asr #23
   10ff4:	andeq	r0, r1, ip, asr #28
   10ff8:	andeq	r3, r1, r8, ror #22
   10ffc:	ldr	r3, [pc, #20]	; 11018 <_start@@Base+0x58>
   11000:	ldr	r2, [pc, #20]	; 1101c <_start@@Base+0x5c>
   11004:	add	r3, pc, r3
   11008:	ldr	r2, [r3, r2]
   1100c:	cmp	r2, #0
   11010:	bxeq	lr
   11014:	b	10e04 <__gmon_start__@plt>
   11018:	strdeq	r2, [r1], -r4
   1101c:	andeq	r0, r0, r8, asr r0
   11020:	ldr	r3, [pc, #28]	; 11044 <_start@@Base+0x84>
   11024:	ldr	r0, [pc, #28]	; 11048 <_start@@Base+0x88>
   11028:	sub	r3, r3, r0
   1102c:	cmp	r3, #6
   11030:	bxls	lr
   11034:	ldr	r3, [pc, #16]	; 1104c <_start@@Base+0x8c>
   11038:	cmp	r3, #0
   1103c:	bxeq	lr
   11040:	bx	r3
   11044:	andeq	r4, r2, r7, rrx
   11048:	andeq	r4, r2, r4, rrx
   1104c:	andeq	r0, r0, r0
   11050:	ldr	r1, [pc, #36]	; 1107c <_start@@Base+0xbc>
   11054:	ldr	r0, [pc, #36]	; 11080 <_start@@Base+0xc0>
   11058:	sub	r1, r1, r0
   1105c:	asr	r1, r1, #2
   11060:	add	r1, r1, r1, lsr #31
   11064:	asrs	r1, r1, #1
   11068:	bxeq	lr
   1106c:	ldr	r3, [pc, #16]	; 11084 <_start@@Base+0xc4>
   11070:	cmp	r3, #0
   11074:	bxeq	lr
   11078:	bx	r3
   1107c:	andeq	r4, r2, r4, rrx
   11080:	andeq	r4, r2, r4, rrx
   11084:	andeq	r0, r0, r0
   11088:	push	{r4, lr}
   1108c:	ldr	r4, [pc, #24]	; 110ac <_start@@Base+0xec>
   11090:	ldrb	r3, [r4]
   11094:	cmp	r3, #0
   11098:	popne	{r4, pc}
   1109c:	bl	11020 <_start@@Base+0x60>
   110a0:	mov	r3, #1
   110a4:	strb	r3, [r4]
   110a8:	pop	{r4, pc}
   110ac:	andeq	r4, r2, r8, rrx
   110b0:	ldr	r0, [pc, #40]	; 110e0 <_start@@Base+0x120>
   110b4:	ldr	r3, [r0]
   110b8:	cmp	r3, #0
   110bc:	bne	110c4 <_start@@Base+0x104>
   110c0:	b	11050 <_start@@Base+0x90>
   110c4:	ldr	r3, [pc, #24]	; 110e4 <_start@@Base+0x124>
   110c8:	cmp	r3, #0
   110cc:	beq	110c0 <_start@@Base+0x100>
   110d0:	push	{r4, lr}
   110d4:	blx	r3
   110d8:	pop	{r4, lr}
   110dc:	b	11050 <_start@@Base+0x90>
   110e0:	andeq	r3, r2, r4, lsl pc
   110e4:	andeq	r0, r0, r0

000110e8 <avl_max_subarvore@@Base>:
   110e8:	push	{r4, r5, r6, lr}
   110ec:	mov	r5, r0
   110f0:	mov	r6, r1
   110f4:	bl	111a8 <avl_nova@@Base>
   110f8:	mov	r1, r6
   110fc:	mov	r4, r0
   11100:	mov	r0, r5
   11104:	bl	111c4 <avl_pesquisa@@Base>
   11108:	str	r0, [r4]
   1110c:	mov	r0, r4
   11110:	bl	11240 <avl_max@@Base>
   11114:	mov	r1, r0
   11118:	ldr	r0, [pc, #12]	; 1112c <avl_max_subarvore@@Base+0x44>
   1111c:	bl	10d8c <printf@plt>
   11120:	mov	r0, r4
   11124:	pop	{r4, r5, r6, lr}
   11128:	b	10db0 <free@plt>
   1112c:	ldrdeq	r3, [r1], -r8

00011130 <tabela_copia@@Base>:
   11130:	push	{r4, r5, r6, r7, lr}
   11134:	mov	r4, r0
   11138:	sub	sp, sp, #12
   1113c:	mov	r0, r1
   11140:	ldr	r1, [r4]
   11144:	bl	132dc <tabela_nova@@Base>
   11148:	add	r1, sp, #4
   1114c:	mov	r6, r0
   11150:	mov	r0, r4
   11154:	bl	136f0 <tabela_elementos@@Base>
   11158:	ldr	r3, [sp, #4]
   1115c:	cmp	r3, #0
   11160:	mov	r7, r0
   11164:	ble	11194 <tabela_copia@@Base+0x64>
   11168:	mov	r4, r0
   1116c:	mov	r5, #0
   11170:	add	r2, r4, #50	; 0x32
   11174:	mov	r1, r4
   11178:	mov	r0, r6
   1117c:	bl	133ac <tabela_adiciona@@Base>
   11180:	ldr	r3, [sp, #4]
   11184:	add	r5, r5, #1
   11188:	cmp	r3, r5
   1118c:	add	r4, r4, #150	; 0x96
   11190:	bgt	11170 <tabela_copia@@Base+0x40>
   11194:	mov	r0, r7
   11198:	bl	10db0 <free@plt>
   1119c:	mov	r0, r6
   111a0:	add	sp, sp, #12
   111a4:	pop	{r4, r5, r6, r7, pc}

000111a8 <avl_nova@@Base>:
   111a8:	push	{r4, lr}
   111ac:	mov	r0, #4
   111b0:	bl	10dec <malloc@plt>
   111b4:	cmp	r0, #0
   111b8:	movne	r3, #0
   111bc:	strne	r3, [r0]
   111c0:	pop	{r4, pc}

000111c4 <avl_pesquisa@@Base>:
   111c4:	cmp	r1, #0
   111c8:	cmpne	r0, #0
   111cc:	push	{r4, r5, r6, lr}
   111d0:	moveq	r4, #0
   111d4:	beq	11210 <avl_pesquisa@@Base+0x4c>
   111d8:	ldr	r4, [r0]
   111dc:	mov	r5, r1
   111e0:	cmp	r4, #0
   111e4:	beq	11210 <avl_pesquisa@@Base+0x4c>
   111e8:	ldr	r1, [r4]
   111ec:	mov	r0, r5
   111f0:	bl	10d80 <strcmp@plt>
   111f4:	cmp	r0, #0
   111f8:	ldrlt	r4, [r4, #4]
   111fc:	blt	11208 <avl_pesquisa@@Base+0x44>
   11200:	beq	11210 <avl_pesquisa@@Base+0x4c>
   11204:	ldr	r4, [r4, #8]
   11208:	cmp	r4, #0
   1120c:	bne	111e8 <avl_pesquisa@@Base+0x24>
   11210:	mov	r0, r4
   11214:	pop	{r4, r5, r6, pc}

00011218 <avl_min@@Base>:
   11218:	cmp	r0, #0
   1121c:	bxeq	lr
   11220:	ldr	r2, [r0]
   11224:	b	1122c <avl_min@@Base+0x14>
   11228:	mov	r2, r3
   1122c:	ldr	r3, [r2, #4]
   11230:	cmp	r3, #0
   11234:	bne	11228 <avl_min@@Base+0x10>
   11238:	ldr	r0, [r2]
   1123c:	bx	lr

00011240 <avl_max@@Base>:
   11240:	cmp	r0, #0
   11244:	bxeq	lr
   11248:	ldr	r2, [r0]
   1124c:	b	11254 <avl_max@@Base+0x14>
   11250:	mov	r2, r3
   11254:	ldr	r3, [r2, #8]
   11258:	cmp	r3, #0
   1125c:	bne	11250 <avl_max@@Base+0x10>
   11260:	ldr	r0, [r2]
   11264:	bx	lr

00011268 <avl_altura@@Base>:
   11268:	cmp	r0, #0
   1126c:	ldrne	r0, [r0, #12]
   11270:	mvneq	r0, #0
   11274:	bx	lr

00011278 <max@@Base>:
   11278:	cmp	r1, r0
   1127c:	movge	r0, r1
   11280:	bx	lr

00011284 <avl_novo_no@@Base>:
   11284:	push	{r4, r5, r6, lr}
   11288:	mov	r5, r0
   1128c:	mov	r0, #16
   11290:	bl	10dec <malloc@plt>
   11294:	mov	r4, r0
   11298:	mov	r0, r5
   1129c:	bl	10e10 <strlen@plt>
   112a0:	add	r6, r0, #1
   112a4:	mov	r0, r6
   112a8:	bl	10dec <malloc@plt>
   112ac:	mov	r2, r6
   112b0:	mov	r1, r5
   112b4:	str	r0, [r4]
   112b8:	bl	10dbc <memcpy@plt>
   112bc:	mov	r3, #0
   112c0:	str	r3, [r4, #4]
   112c4:	str	r3, [r4, #8]
   112c8:	str	r3, [r4, #12]
   112cc:	mov	r0, r4
   112d0:	pop	{r4, r5, r6, pc}

000112d4 <roda_direita@@Base>:
   112d4:	ldr	r2, [r0, #4]
   112d8:	ldr	r3, [r2, #8]
   112dc:	str	r0, [r2, #8]
   112e0:	cmp	r3, #0
   112e4:	ldr	r1, [r0, #8]
   112e8:	str	r3, [r0, #4]
   112ec:	ldrne	r3, [r3, #12]
   112f0:	mvneq	r3, #0
   112f4:	cmp	r1, #0
   112f8:	mvneq	r1, #0
   112fc:	ldrne	r1, [r1, #12]
   11300:	ldr	ip, [r2, #4]
   11304:	cmp	r3, r1
   11308:	movlt	r3, r1
   1130c:	cmp	ip, #0
   11310:	add	r3, r3, #1
   11314:	str	r3, [r0, #12]
   11318:	ldrne	r1, [ip, #12]
   1131c:	beq	11338 <roda_direita@@Base+0x64>
   11320:	cmp	r3, r1
   11324:	movlt	r3, r1
   11328:	add	r3, r3, #1
   1132c:	str	r3, [r2, #12]
   11330:	mov	r0, r2
   11334:	bx	lr
   11338:	mvn	r1, #0
   1133c:	b	11320 <roda_direita@@Base+0x4c>

00011340 <roda_esquerda@@Base>:
   11340:	ldr	r2, [r0, #8]
   11344:	ldr	r1, [r2, #4]
   11348:	str	r0, [r2, #4]
   1134c:	ldr	r3, [r0, #4]
   11350:	str	r1, [r0, #8]
   11354:	cmp	r3, #0
   11358:	mvneq	r3, #0
   1135c:	ldrne	r3, [r3, #12]
   11360:	cmp	r1, #0
   11364:	beq	113a4 <roda_esquerda@@Base+0x64>
   11368:	ldr	r1, [r1, #12]
   1136c:	cmp	r3, r1
   11370:	movlt	r3, r1
   11374:	add	r3, r3, #1
   11378:	str	r3, [r0, #12]
   1137c:	ldr	r1, [r2, #8]
   11380:	mov	r0, r2
   11384:	cmp	r1, #0
   11388:	mvneq	r1, #0
   1138c:	ldrne	r1, [r1, #12]
   11390:	cmp	r3, r1
   11394:	movlt	r3, r1
   11398:	add	r3, r3, #1
   1139c:	str	r3, [r2, #12]
   113a0:	bx	lr
   113a4:	orr	r3, r3, r3, asr #31
   113a8:	add	r3, r3, #1
   113ac:	str	r3, [r0, #12]
   113b0:	b	1137c <roda_esquerda@@Base+0x3c>

000113b4 <calc_balanceamento@@Base>:
   113b4:	cmp	r0, #0
   113b8:	bxeq	lr
   113bc:	ldr	r3, [r0, #8]
   113c0:	ldr	r2, [r0, #4]
   113c4:	cmp	r3, #0
   113c8:	mvneq	r3, #0
   113cc:	ldrne	r3, [r3, #12]
   113d0:	cmp	r2, #0
   113d4:	mvneq	r0, #0
   113d8:	ldrne	r0, [r2, #12]
   113dc:	sub	r0, r3, r0
   113e0:	bx	lr

000113e4 <avl_pesquisa_impl@@Base>:
   113e4:	push	{r4, r5, r6, lr}
   113e8:	subs	r4, r0, #0
   113ec:	beq	1141c <avl_pesquisa_impl@@Base+0x38>
   113f0:	mov	r5, r1
   113f4:	ldr	r1, [r4]
   113f8:	mov	r0, r5
   113fc:	bl	10d80 <strcmp@plt>
   11400:	cmp	r0, #0
   11404:	ldrlt	r4, [r4, #4]
   11408:	blt	11414 <avl_pesquisa_impl@@Base+0x30>
   1140c:	beq	1141c <avl_pesquisa_impl@@Base+0x38>
   11410:	ldr	r4, [r4, #8]
   11414:	cmp	r4, #0
   11418:	bne	113f4 <avl_pesquisa_impl@@Base+0x10>
   1141c:	mov	r0, r4
   11420:	pop	{r4, r5, r6, pc}

00011424 <avl_insere_impl@@Base>:
   11424:	push	{r4, r5, r6, r7, r8, lr}
   11428:	subs	r5, r0, #0
   1142c:	mov	r6, r1
   11430:	beq	117b8 <avl_insere_impl@@Base+0x394>
   11434:	ldr	r1, [r5]
   11438:	mov	r0, r6
   1143c:	bl	10d80 <strcmp@plt>
   11440:	cmp	r0, #0
   11444:	blt	1170c <avl_insere_impl@@Base+0x2e8>
   11448:	beq	11538 <avl_insere_impl@@Base+0x114>
   1144c:	mov	r1, r6
   11450:	ldr	r0, [r5, #8]
   11454:	bl	11424 <avl_insere_impl@@Base>
   11458:	mov	r4, r0
   1145c:	ldr	r0, [r5, #4]
   11460:	str	r4, [r5, #8]
   11464:	cmp	r0, #0
   11468:	beq	11560 <avl_insere_impl@@Base+0x13c>
   1146c:	cmp	r4, #0
   11470:	ldr	r3, [r0, #12]
   11474:	beq	11544 <avl_insere_impl@@Base+0x120>
   11478:	ldr	r2, [r4, #12]
   1147c:	cmp	r3, r2
   11480:	movlt	r3, r2
   11484:	add	r3, r3, #1
   11488:	str	r3, [r5, #12]
   1148c:	ldr	r3, [r4, #12]
   11490:	ldr	r2, [r0, #12]
   11494:	sub	r3, r3, r2
   11498:	cmp	r3, #1
   1149c:	ble	11588 <avl_insere_impl@@Base+0x164>
   114a0:	cmp	r4, #0
   114a4:	beq	11724 <avl_insere_impl@@Base+0x300>
   114a8:	ldmib	r4, {r2, r3}
   114ac:	cmp	r3, #0
   114b0:	beq	1172c <avl_insere_impl@@Base+0x308>
   114b4:	cmp	r2, #0
   114b8:	ldr	r3, [r3, #12]
   114bc:	mvneq	r1, #0
   114c0:	beq	114c8 <avl_insere_impl@@Base+0xa4>
   114c4:	ldr	r1, [r2, #12]
   114c8:	sub	r3, r3, r1
   114cc:	cmp	r3, #0
   114d0:	blt	1165c <avl_insere_impl@@Base+0x238>
   114d4:	str	r5, [r4, #4]
   114d8:	ldr	r3, [r5, #4]
   114dc:	str	r2, [r5, #8]
   114e0:	cmp	r3, #0
   114e4:	mvneq	r1, #0
   114e8:	beq	114f0 <avl_insere_impl@@Base+0xcc>
   114ec:	ldr	r1, [r3, #12]
   114f0:	cmp	r2, #0
   114f4:	mvneq	r3, #0
   114f8:	ldrne	r3, [r2, #12]
   114fc:	cmp	r3, r1
   11500:	ldr	r2, [r4, #8]
   11504:	movlt	r3, r1
   11508:	add	r3, r3, #1
   1150c:	cmp	r2, #0
   11510:	str	r3, [r5, #12]
   11514:	beq	117f8 <avl_insere_impl@@Base+0x3d4>
   11518:	ldr	r2, [r2, #12]
   1151c:	cmp	r3, r2
   11520:	movlt	r3, r2
   11524:	add	r3, r3, #1
   11528:	str	r3, [r4, #12]
   1152c:	mov	r0, r4
   11530:	pop	{r4, r5, r6, r7, r8, pc}
   11534:	str	r4, [r5, #12]
   11538:	mov	r4, r5
   1153c:	mov	r0, r4
   11540:	pop	{r4, r5, r6, r7, r8, pc}
   11544:	mvn	r2, #0
   11548:	cmp	r3, r2
   1154c:	movlt	r3, r2
   11550:	add	r3, r3, #1
   11554:	str	r3, [r5, #12]
   11558:	mov	r3, r2
   1155c:	b	11490 <avl_insere_impl@@Base+0x6c>
   11560:	cmp	r4, #0
   11564:	beq	11534 <avl_insere_impl@@Base+0x110>
   11568:	ldr	r3, [r4, #12]
   1156c:	orr	r3, r3, r3, asr #31
   11570:	add	r3, r3, #1
   11574:	str	r3, [r5, #12]
   11578:	ldr	r3, [r4, #12]
   1157c:	add	r3, r3, #1
   11580:	cmp	r3, #1
   11584:	bgt	114a8 <avl_insere_impl@@Base+0x84>
   11588:	cmn	r3, #1
   1158c:	bge	11538 <avl_insere_impl@@Base+0x114>
   11590:	cmp	r0, #0
   11594:	ldr	r4, [r0, #8]
   11598:	beq	11800 <avl_insere_impl@@Base+0x3dc>
   1159c:	cmp	r4, #0
   115a0:	ldr	r2, [r0, #4]
   115a4:	beq	11758 <avl_insere_impl@@Base+0x334>
   115a8:	cmp	r2, #0
   115ac:	ldr	r3, [r4, #12]
   115b0:	beq	11858 <avl_insere_impl@@Base+0x434>
   115b4:	ldr	r2, [r2, #12]
   115b8:	sub	r3, r3, r2
   115bc:	cmp	r3, #0
   115c0:	ble	11800 <avl_insere_impl@@Base+0x3dc>
   115c4:	ldr	r3, [r4, #4]
   115c8:	str	r0, [r4, #4]
   115cc:	ldr	r2, [r0, #4]
   115d0:	str	r3, [r0, #8]
   115d4:	cmp	r2, #0
   115d8:	mvneq	r2, #0
   115dc:	ldrne	r2, [r2, #12]
   115e0:	cmp	r3, #0
   115e4:	beq	1186c <avl_insere_impl@@Base+0x448>
   115e8:	ldr	r3, [r3, #12]
   115ec:	cmp	r2, r3
   115f0:	movlt	r2, r3
   115f4:	add	r2, r2, #1
   115f8:	ldr	r1, [r4, #8]
   115fc:	str	r2, [r0, #12]
   11600:	cmp	r1, #0
   11604:	beq	11878 <avl_insere_impl@@Base+0x454>
   11608:	ldr	r3, [r1, #12]
   1160c:	str	r5, [r4, #8]
   11610:	cmp	r2, r3
   11614:	movlt	r2, r3
   11618:	add	r2, r2, #1
   1161c:	str	r2, [r4, #12]
   11620:	ldr	r2, [r1, #12]
   11624:	str	r1, [r5, #4]
   11628:	ldr	r3, [r5, #8]
   1162c:	ldr	r1, [r4, #4]
   11630:	cmp	r3, #0
   11634:	mvneq	r3, #0
   11638:	ldrne	r3, [r3, #12]
   1163c:	cmp	r3, r2
   11640:	movlt	r3, r2
   11644:	add	r3, r3, #1
   11648:	cmp	r1, #0
   1164c:	str	r3, [r5, #12]
   11650:	beq	117f8 <avl_insere_impl@@Base+0x3d4>
   11654:	ldr	r2, [r1, #12]
   11658:	b	1151c <avl_insere_impl@@Base+0xf8>
   1165c:	ldr	r3, [r2, #8]
   11660:	str	r4, [r2, #8]
   11664:	cmp	r3, #0
   11668:	str	r3, [r4, #4]
   1166c:	ldrne	r1, [r3, #12]
   11670:	ldr	r3, [r4, #8]
   11674:	mvneq	r1, #0
   11678:	cmp	r3, #0
   1167c:	mvneq	r3, #0
   11680:	ldrne	r3, [r3, #12]
   11684:	ldr	r0, [r2, #4]
   11688:	cmp	r3, r1
   1168c:	movlt	r3, r1
   11690:	add	r3, r3, #1
   11694:	cmp	r0, #0
   11698:	str	r3, [r4, #12]
   1169c:	beq	11818 <avl_insere_impl@@Base+0x3f4>
   116a0:	ldr	ip, [r0, #12]
   116a4:	str	r5, [r2, #4]
   116a8:	ldr	r1, [r5, #4]
   116ac:	cmp	r3, ip
   116b0:	movlt	r3, ip
   116b4:	cmp	r1, #0
   116b8:	add	r3, r3, #1
   116bc:	str	r3, [r2, #12]
   116c0:	ldrne	r3, [r1, #12]
   116c4:	ldr	r1, [r0, #12]
   116c8:	mvneq	r3, #0
   116cc:	cmp	r3, r1
   116d0:	movlt	r3, r1
   116d4:	add	r3, r3, #1
   116d8:	str	r0, [r5, #8]
   116dc:	ldr	r1, [r2, #8]
   116e0:	str	r3, [r5, #12]
   116e4:	cmp	r1, #0
   116e8:	mvneq	r1, #0
   116ec:	ldrne	r1, [r1, #12]
   116f0:	mov	r4, r2
   116f4:	cmp	r1, r3
   116f8:	movge	r3, r1
   116fc:	add	r3, r3, #1
   11700:	str	r3, [r2, #12]
   11704:	mov	r0, r4
   11708:	pop	{r4, r5, r6, r7, r8, pc}
   1170c:	mov	r1, r6
   11710:	ldr	r0, [r5, #4]
   11714:	bl	11424 <avl_insere_impl@@Base>
   11718:	ldr	r4, [r5, #8]
   1171c:	str	r0, [r5, #4]
   11720:	b	11464 <avl_insere_impl@@Base+0x40>
   11724:	ldr	r2, [r4, #4]
   11728:	b	114d4 <avl_insere_impl@@Base+0xb0>
   1172c:	cmp	r2, #0
   11730:	mvnne	r3, #0
   11734:	bne	114c4 <avl_insere_impl@@Base+0xa0>
   11738:	str	r5, [r4, #4]
   1173c:	ldr	r3, [r5, #4]
   11740:	str	r2, [r5, #8]
   11744:	cmp	r3, #0
   11748:	bne	114ec <avl_insere_impl@@Base+0xc8>
   1174c:	mvn	r1, #0
   11750:	mov	r3, r1
   11754:	b	114fc <avl_insere_impl@@Base+0xd8>
   11758:	cmp	r2, #0
   1175c:	mvnne	r3, #0
   11760:	bne	115b4 <avl_insere_impl@@Base+0x190>
   11764:	mvn	r1, #0
   11768:	str	r5, [r0, #8]
   1176c:	str	r2, [r5, #4]
   11770:	ldr	r3, [r5, #8]
   11774:	ldr	r2, [r0, #4]
   11778:	cmp	r3, #0
   1177c:	mvneq	r3, #0
   11780:	ldrne	r3, [r3, #12]
   11784:	mov	r4, r0
   11788:	cmp	r3, r1
   1178c:	movlt	r3, r1
   11790:	cmp	r2, #0
   11794:	add	r3, r3, #1
   11798:	str	r3, [r5, #12]
   1179c:	ldrne	r2, [r2, #12]
   117a0:	mvneq	r2, #0
   117a4:	cmp	r3, r2
   117a8:	movlt	r3, r2
   117ac:	add	r3, r3, #1
   117b0:	str	r3, [r0, #12]
   117b4:	b	1152c <avl_insere_impl@@Base+0x108>
   117b8:	mov	r0, #16
   117bc:	bl	10dec <malloc@plt>
   117c0:	mov	r4, r0
   117c4:	mov	r0, r6
   117c8:	bl	10e10 <strlen@plt>
   117cc:	add	r7, r0, #1
   117d0:	mov	r0, r7
   117d4:	bl	10dec <malloc@plt>
   117d8:	mov	r2, r7
   117dc:	mov	r1, r6
   117e0:	str	r0, [r4]
   117e4:	bl	10dbc <memcpy@plt>
   117e8:	str	r5, [r4, #4]
   117ec:	str	r5, [r4, #8]
   117f0:	str	r5, [r4, #12]
   117f4:	b	1152c <avl_insere_impl@@Base+0x108>
   117f8:	mvn	r2, #0
   117fc:	b	1151c <avl_insere_impl@@Base+0xf8>
   11800:	cmp	r4, #0
   11804:	str	r5, [r0, #8]
   11808:	str	r4, [r5, #4]
   1180c:	beq	1189c <avl_insere_impl@@Base+0x478>
   11810:	ldr	r1, [r4, #12]
   11814:	b	11770 <avl_insere_impl@@Base+0x34c>
   11818:	mvn	ip, #0
   1181c:	cmp	r3, ip
   11820:	str	r5, [r2, #4]
   11824:	ldr	r1, [r5, #4]
   11828:	movlt	r3, ip
   1182c:	add	r3, r3, #1
   11830:	cmp	r1, #0
   11834:	str	r3, [r2, #12]
   11838:	str	r0, [r5, #8]
   1183c:	moveq	r3, r1
   11840:	beq	116dc <avl_insere_impl@@Base+0x2b8>
   11844:	ldr	r3, [r1, #12]
   11848:	cmp	r3, ip
   1184c:	movlt	r3, ip
   11850:	add	r3, r3, #1
   11854:	b	116dc <avl_insere_impl@@Base+0x2b8>
   11858:	cmp	r3, #0
   1185c:	bge	115c4 <avl_insere_impl@@Base+0x1a0>
   11860:	str	r5, [r0, #8]
   11864:	str	r4, [r5, #4]
   11868:	b	11810 <avl_insere_impl@@Base+0x3ec>
   1186c:	orr	r2, r2, r2, asr #31
   11870:	add	r2, r2, #1
   11874:	b	115f8 <avl_insere_impl@@Base+0x1d4>
   11878:	mvn	r3, #0
   1187c:	cmp	r2, r3
   11880:	movlt	r2, r3
   11884:	add	r2, r2, #1
   11888:	str	r2, [r4, #12]
   1188c:	str	r5, [r4, #8]
   11890:	mov	r2, r3
   11894:	str	r1, [r5, #4]
   11898:	b	11628 <avl_insere_impl@@Base+0x204>
   1189c:	mvn	r1, #0
   118a0:	b	11770 <avl_insere_impl@@Base+0x34c>

000118a4 <avl_insere@@Base>:
   118a4:	cmp	r1, #0
   118a8:	cmpne	r0, #0
   118ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118b0:	moveq	r8, #1
   118b4:	movne	r8, #0
   118b8:	beq	11db0 <avl_insere@@Base+0x50c>
   118bc:	ldr	r5, [r0]
   118c0:	mov	r6, r1
   118c4:	cmp	r5, #0
   118c8:	mov	r7, r0
   118cc:	beq	11f2c <avl_insere@@Base+0x688>
   118d0:	ldr	r1, [r5]
   118d4:	mov	r0, r6
   118d8:	bl	10d80 <strcmp@plt>
   118dc:	cmp	r0, #0
   118e0:	blt	11d98 <avl_insere@@Base+0x4f4>
   118e4:	beq	11ac0 <avl_insere@@Base+0x21c>
   118e8:	ldr	r4, [r5, #8]
   118ec:	cmp	r4, #0
   118f0:	beq	11fbc <avl_insere@@Base+0x718>
   118f4:	ldr	r1, [r4]
   118f8:	mov	r0, r6
   118fc:	bl	10d80 <strcmp@plt>
   11900:	cmp	r0, #0
   11904:	blt	11e88 <avl_insere@@Base+0x5e4>
   11908:	beq	119ec <avl_insere@@Base+0x148>
   1190c:	mov	r1, r6
   11910:	ldr	r0, [r4, #8]
   11914:	bl	11424 <avl_insere_impl@@Base>
   11918:	ldr	r1, [r4, #4]
   1191c:	str	r0, [r4, #8]
   11920:	cmp	r1, #0
   11924:	beq	11acc <avl_insere@@Base+0x228>
   11928:	cmp	r0, #0
   1192c:	ldr	r3, [r1, #12]
   11930:	beq	11f6c <avl_insere@@Base+0x6c8>
   11934:	ldr	r2, [r0, #12]
   11938:	cmp	r3, r2
   1193c:	movlt	r3, r2
   11940:	add	r3, r3, #1
   11944:	str	r3, [r4, #12]
   11948:	ldr	r3, [r0, #12]
   1194c:	ldr	r2, [r1, #12]
   11950:	sub	r3, r3, r2
   11954:	cmp	r3, #1
   11958:	ble	11af4 <avl_insere@@Base+0x250>
   1195c:	cmp	r0, #0
   11960:	beq	11f88 <avl_insere@@Base+0x6e4>
   11964:	ldmib	r0, {r2, r3}
   11968:	cmp	r3, #0
   1196c:	beq	11f90 <avl_insere@@Base+0x6ec>
   11970:	cmp	r2, #0
   11974:	ldr	r3, [r3, #12]
   11978:	mvneq	r1, #0
   1197c:	beq	11984 <avl_insere@@Base+0xe0>
   11980:	ldr	r1, [r2, #12]
   11984:	sub	r3, r3, r1
   11988:	cmp	r3, #0
   1198c:	blt	11ddc <avl_insere@@Base+0x538>
   11990:	str	r4, [r0, #4]
   11994:	ldr	r3, [r4, #4]
   11998:	str	r2, [r4, #8]
   1199c:	cmp	r3, #0
   119a0:	mvneq	r1, #0
   119a4:	beq	119ac <avl_insere@@Base+0x108>
   119a8:	ldr	r1, [r3, #12]
   119ac:	cmp	r2, #0
   119b0:	mvneq	r3, #0
   119b4:	ldrne	r3, [r2, #12]
   119b8:	ldr	r2, [r0, #8]
   119bc:	cmp	r3, r1
   119c0:	movlt	r3, r1
   119c4:	cmp	r2, #0
   119c8:	add	r3, r3, #1
   119cc:	str	r3, [r4, #12]
   119d0:	ldrne	r2, [r2, #12]
   119d4:	mvneq	r2, #0
   119d8:	cmp	r3, r2
   119dc:	movlt	r3, r2
   119e0:	mov	r4, r0
   119e4:	add	r3, r3, #1
   119e8:	str	r3, [r0, #12]
   119ec:	ldr	r0, [r5, #4]
   119f0:	str	r4, [r5, #8]
   119f4:	cmp	r0, #0
   119f8:	beq	11bdc <avl_insere@@Base+0x338>
   119fc:	cmp	r4, #0
   11a00:	ldr	r3, [r0, #12]
   11a04:	beq	11db8 <avl_insere@@Base+0x514>
   11a08:	ldr	r2, [r4, #12]
   11a0c:	cmp	r3, r2
   11a10:	movlt	r3, r2
   11a14:	add	r3, r3, #1
   11a18:	str	r3, [r5, #12]
   11a1c:	ldr	r3, [r4, #12]
   11a20:	ldr	r2, [r0, #12]
   11a24:	sub	r3, r3, r2
   11a28:	cmp	r3, #1
   11a2c:	ble	11c04 <avl_insere@@Base+0x360>
   11a30:	cmp	r4, #0
   11a34:	beq	11dd4 <avl_insere@@Base+0x530>
   11a38:	ldmib	r4, {r2, r3}
   11a3c:	cmp	r3, #0
   11a40:	beq	11ea4 <avl_insere@@Base+0x600>
   11a44:	cmp	r2, #0
   11a48:	ldr	r3, [r3, #12]
   11a4c:	mvneq	r1, #0
   11a50:	beq	11a58 <avl_insere@@Base+0x1b4>
   11a54:	ldr	r1, [r2, #12]
   11a58:	sub	r3, r3, r1
   11a5c:	cmp	r3, #0
   11a60:	blt	11cec <avl_insere@@Base+0x448>
   11a64:	str	r5, [r4, #4]
   11a68:	ldr	r3, [r5, #4]
   11a6c:	str	r2, [r5, #8]
   11a70:	cmp	r3, #0
   11a74:	mvneq	r1, #0
   11a78:	beq	11a80 <avl_insere@@Base+0x1dc>
   11a7c:	ldr	r1, [r3, #12]
   11a80:	cmp	r2, #0
   11a84:	mvneq	r3, #0
   11a88:	ldrne	r3, [r2, #12]
   11a8c:	ldr	r2, [r4, #8]
   11a90:	cmp	r3, r1
   11a94:	movlt	r3, r1
   11a98:	cmp	r2, #0
   11a9c:	add	r3, r3, #1
   11aa0:	str	r3, [r5, #12]
   11aa4:	ldrne	r2, [r2, #12]
   11aa8:	mvneq	r2, #0
   11aac:	cmp	r3, r2
   11ab0:	movlt	r3, r2
   11ab4:	mov	r5, r4
   11ab8:	add	r3, r3, #1
   11abc:	str	r3, [r4, #12]
   11ac0:	str	r5, [r7]
   11ac4:	mov	r0, #0
   11ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11acc:	cmp	r0, #0
   11ad0:	beq	120fc <avl_insere@@Base+0x858>
   11ad4:	ldr	r3, [r0, #12]
   11ad8:	orr	r3, r3, r3, asr #31
   11adc:	add	r3, r3, #1
   11ae0:	str	r3, [r4, #12]
   11ae4:	ldr	r3, [r0, #12]
   11ae8:	add	r3, r3, #1
   11aec:	cmp	r3, #1
   11af0:	bgt	11964 <avl_insere@@Base+0xc0>
   11af4:	cmn	r3, #1
   11af8:	bge	119ec <avl_insere@@Base+0x148>
   11afc:	cmp	r1, #0
   11b00:	ldr	r3, [r1, #8]
   11b04:	beq	12044 <avl_insere@@Base+0x7a0>
   11b08:	cmp	r3, #0
   11b0c:	ldr	r0, [r1, #4]
   11b10:	beq	12124 <avl_insere@@Base+0x880>
   11b14:	cmp	r0, #0
   11b18:	ldr	r2, [r3, #12]
   11b1c:	beq	12164 <avl_insere@@Base+0x8c0>
   11b20:	ldr	r0, [r0, #12]
   11b24:	sub	r2, r2, r0
   11b28:	cmp	r2, #0
   11b2c:	ble	12044 <avl_insere@@Base+0x7a0>
   11b30:	ldr	r2, [r3, #4]
   11b34:	str	r1, [r3, #4]
   11b38:	ldr	r0, [r1, #4]
   11b3c:	str	r2, [r1, #8]
   11b40:	cmp	r0, #0
   11b44:	mvneq	r0, #0
   11b48:	ldrne	r0, [r0, #12]
   11b4c:	cmp	r2, #0
   11b50:	beq	12178 <avl_insere@@Base+0x8d4>
   11b54:	ldr	r2, [r2, #12]
   11b58:	cmp	r0, r2
   11b5c:	movlt	r0, r2
   11b60:	add	r0, r0, #1
   11b64:	ldr	ip, [r3, #8]
   11b68:	str	r0, [r1, #12]
   11b6c:	cmp	ip, #0
   11b70:	beq	1218c <avl_insere@@Base+0x8e8>
   11b74:	ldr	r2, [ip, #12]
   11b78:	str	r4, [r3, #8]
   11b7c:	cmp	r0, r2
   11b80:	movlt	r0, r2
   11b84:	add	r0, r0, #1
   11b88:	str	r0, [r3, #12]
   11b8c:	ldr	r1, [ip, #12]
   11b90:	str	ip, [r4, #4]
   11b94:	ldr	r2, [r4, #8]
   11b98:	ldr	r0, [r3, #4]
   11b9c:	cmp	r2, #0
   11ba0:	mvneq	r2, #0
   11ba4:	ldrne	r2, [r2, #12]
   11ba8:	cmp	r2, r1
   11bac:	movlt	r2, r1
   11bb0:	cmp	r0, #0
   11bb4:	add	r2, r2, #1
   11bb8:	str	r2, [r4, #12]
   11bbc:	ldrne	r1, [r0, #12]
   11bc0:	mvneq	r1, #0
   11bc4:	cmp	r2, r1
   11bc8:	movlt	r2, r1
   11bcc:	add	r2, r2, #1
   11bd0:	str	r2, [r3, #12]
   11bd4:	mov	r4, r3
   11bd8:	b	119ec <avl_insere@@Base+0x148>
   11bdc:	cmp	r4, #0
   11be0:	beq	1203c <avl_insere@@Base+0x798>
   11be4:	ldr	r3, [r4, #12]
   11be8:	orr	r3, r3, r3, asr #31
   11bec:	add	r3, r3, #1
   11bf0:	str	r3, [r5, #12]
   11bf4:	ldr	r3, [r4, #12]
   11bf8:	add	r3, r3, #1
   11bfc:	cmp	r3, #1
   11c00:	bgt	11a38 <avl_insere@@Base+0x194>
   11c04:	cmn	r3, #1
   11c08:	bge	11ac0 <avl_insere@@Base+0x21c>
   11c0c:	cmp	r0, #0
   11c10:	ldr	r3, [r0, #8]
   11c14:	beq	11ed0 <avl_insere@@Base+0x62c>
   11c18:	cmp	r3, #0
   11c1c:	ldr	r1, [r0, #4]
   11c20:	beq	120e0 <avl_insere@@Base+0x83c>
   11c24:	cmp	r1, #0
   11c28:	ldr	r2, [r3, #12]
   11c2c:	beq	12104 <avl_insere@@Base+0x860>
   11c30:	ldr	r1, [r1, #12]
   11c34:	sub	r2, r2, r1
   11c38:	cmp	r2, #0
   11c3c:	ble	11ed0 <avl_insere@@Base+0x62c>
   11c40:	ldr	r2, [r3, #4]
   11c44:	str	r0, [r3, #4]
   11c48:	ldr	r1, [r0, #4]
   11c4c:	str	r2, [r0, #8]
   11c50:	cmp	r1, #0
   11c54:	mvneq	r1, #0
   11c58:	ldrne	r1, [r1, #12]
   11c5c:	cmp	r2, #0
   11c60:	beq	12118 <avl_insere@@Base+0x874>
   11c64:	ldr	r2, [r2, #12]
   11c68:	cmp	r1, r2
   11c6c:	movlt	r1, r2
   11c70:	add	r1, r1, #1
   11c74:	ldr	ip, [r3, #8]
   11c78:	str	r1, [r0, #12]
   11c7c:	cmp	ip, #0
   11c80:	beq	12140 <avl_insere@@Base+0x89c>
   11c84:	ldr	r2, [ip, #12]
   11c88:	str	r5, [r3, #8]
   11c8c:	cmp	r1, r2
   11c90:	movlt	r1, r2
   11c94:	add	r1, r1, #1
   11c98:	str	r1, [r3, #12]
   11c9c:	ldr	r1, [ip, #12]
   11ca0:	str	ip, [r5, #4]
   11ca4:	ldr	r2, [r5, #8]
   11ca8:	ldr	r0, [r3, #4]
   11cac:	cmp	r2, #0
   11cb0:	mvneq	r2, #0
   11cb4:	ldrne	r2, [r2, #12]
   11cb8:	cmp	r2, r1
   11cbc:	movlt	r2, r1
   11cc0:	cmp	r0, #0
   11cc4:	add	r2, r2, #1
   11cc8:	str	r2, [r5, #12]
   11ccc:	ldrne	r1, [r0, #12]
   11cd0:	mvneq	r1, #0
   11cd4:	cmp	r2, r1
   11cd8:	movlt	r2, r1
   11cdc:	add	r2, r2, #1
   11ce0:	str	r2, [r3, #12]
   11ce4:	mov	r5, r3
   11ce8:	b	11ac0 <avl_insere@@Base+0x21c>
   11cec:	ldr	r3, [r2, #8]
   11cf0:	str	r4, [r2, #8]
   11cf4:	cmp	r3, #0
   11cf8:	str	r3, [r4, #4]
   11cfc:	ldrne	r1, [r3, #12]
   11d00:	ldr	r3, [r4, #8]
   11d04:	mvneq	r1, #0
   11d08:	cmp	r3, #0
   11d0c:	mvneq	r3, #0
   11d10:	ldrne	r3, [r3, #12]
   11d14:	ldr	r0, [r2, #4]
   11d18:	cmp	r3, r1
   11d1c:	movlt	r3, r1
   11d20:	add	r3, r3, #1
   11d24:	cmp	r0, #0
   11d28:	str	r3, [r4, #12]
   11d2c:	beq	11ffc <avl_insere@@Base+0x758>
   11d30:	ldr	ip, [r0, #12]
   11d34:	str	r5, [r2, #4]
   11d38:	ldr	r1, [r5, #4]
   11d3c:	cmp	r3, ip
   11d40:	movlt	r3, ip
   11d44:	cmp	r1, #0
   11d48:	add	r3, r3, #1
   11d4c:	str	r3, [r2, #12]
   11d50:	ldrne	r3, [r1, #12]
   11d54:	ldr	r1, [r0, #12]
   11d58:	mvneq	r3, #0
   11d5c:	cmp	r3, r1
   11d60:	movlt	r3, r1
   11d64:	add	r3, r3, #1
   11d68:	str	r0, [r5, #8]
   11d6c:	ldr	r1, [r2, #8]
   11d70:	str	r3, [r5, #12]
   11d74:	cmp	r1, #0
   11d78:	mvneq	r1, #0
   11d7c:	ldrne	r1, [r1, #12]
   11d80:	mov	r5, r2
   11d84:	cmp	r3, r1
   11d88:	movlt	r3, r1
   11d8c:	add	r3, r3, #1
   11d90:	str	r3, [r2, #12]
   11d94:	b	11ac0 <avl_insere@@Base+0x21c>
   11d98:	mov	r1, r6
   11d9c:	ldr	r0, [r5, #4]
   11da0:	bl	11424 <avl_insere_impl@@Base>
   11da4:	ldr	r4, [r5, #8]
   11da8:	str	r0, [r5, #4]
   11dac:	b	119f4 <avl_insere@@Base+0x150>
   11db0:	mvn	r0, #0
   11db4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11db8:	mvn	r2, #0
   11dbc:	cmp	r3, r2
   11dc0:	movlt	r3, r2
   11dc4:	add	r3, r3, #1
   11dc8:	str	r3, [r5, #12]
   11dcc:	mov	r3, r2
   11dd0:	b	11a20 <avl_insere@@Base+0x17c>
   11dd4:	ldr	r2, [r4, #4]
   11dd8:	b	11a64 <avl_insere@@Base+0x1c0>
   11ddc:	ldr	r3, [r2, #8]
   11de0:	str	r0, [r2, #8]
   11de4:	cmp	r3, #0
   11de8:	str	r3, [r0, #4]
   11dec:	ldrne	ip, [r3, #12]
   11df0:	ldr	r3, [r0, #8]
   11df4:	mvneq	ip, #0
   11df8:	cmp	r3, #0
   11dfc:	mvneq	r3, #0
   11e00:	ldrne	r3, [r3, #12]
   11e04:	ldr	r1, [r2, #4]
   11e08:	cmp	r3, ip
   11e0c:	movlt	r3, ip
   11e10:	add	r3, r3, #1
   11e14:	cmp	r1, #0
   11e18:	str	r3, [r0, #12]
   11e1c:	beq	120a0 <avl_insere@@Base+0x7fc>
   11e20:	ldr	ip, [r1, #12]
   11e24:	str	r4, [r2, #4]
   11e28:	ldr	r0, [r4, #4]
   11e2c:	cmp	r3, ip
   11e30:	movlt	r3, ip
   11e34:	cmp	r0, #0
   11e38:	add	r3, r3, #1
   11e3c:	str	r3, [r2, #12]
   11e40:	str	r1, [r4, #8]
   11e44:	ldrne	r3, [r0, #12]
   11e48:	ldr	r1, [r1, #12]
   11e4c:	mvneq	r3, #0
   11e50:	cmp	r3, r1
   11e54:	movlt	r3, r1
   11e58:	add	r3, r3, #1
   11e5c:	ldr	r1, [r2, #8]
   11e60:	str	r3, [r4, #12]
   11e64:	cmp	r1, #0
   11e68:	mvneq	r1, #0
   11e6c:	ldrne	r1, [r1, #12]
   11e70:	mov	r4, r2
   11e74:	cmp	r1, r3
   11e78:	movge	r3, r1
   11e7c:	add	r3, r3, #1
   11e80:	str	r3, [r2, #12]
   11e84:	b	119ec <avl_insere@@Base+0x148>
   11e88:	mov	r1, r6
   11e8c:	ldr	r0, [r4, #4]
   11e90:	bl	11424 <avl_insere_impl@@Base>
   11e94:	mov	r1, r0
   11e98:	str	r0, [r4, #4]
   11e9c:	ldr	r0, [r4, #8]
   11ea0:	b	11920 <avl_insere@@Base+0x7c>
   11ea4:	cmp	r2, #0
   11ea8:	mvnne	r3, #0
   11eac:	bne	11a54 <avl_insere@@Base+0x1b0>
   11eb0:	str	r5, [r4, #4]
   11eb4:	ldr	r3, [r5, #4]
   11eb8:	str	r2, [r5, #8]
   11ebc:	cmp	r3, #0
   11ec0:	bne	11a7c <avl_insere@@Base+0x1d8>
   11ec4:	mvn	r1, #0
   11ec8:	mov	r3, r1
   11ecc:	b	11a8c <avl_insere@@Base+0x1e8>
   11ed0:	cmp	r3, #0
   11ed4:	str	r5, [r0, #8]
   11ed8:	str	r3, [r5, #4]
   11edc:	beq	12184 <avl_insere@@Base+0x8e0>
   11ee0:	ldr	r2, [r3, #12]
   11ee4:	ldr	r3, [r5, #8]
   11ee8:	ldr	r1, [r0, #4]
   11eec:	cmp	r3, #0
   11ef0:	mvneq	r3, #0
   11ef4:	ldrne	r3, [r3, #12]
   11ef8:	cmp	r3, r2
   11efc:	movlt	r3, r2
   11f00:	cmp	r1, #0
   11f04:	add	r3, r3, #1
   11f08:	str	r3, [r5, #12]
   11f0c:	ldrne	r2, [r1, #12]
   11f10:	mvneq	r2, #0
   11f14:	cmp	r3, r2
   11f18:	movlt	r3, r2
   11f1c:	add	r3, r3, #1
   11f20:	mov	r5, r0
   11f24:	str	r3, [r0, #12]
   11f28:	b	11ac0 <avl_insere@@Base+0x21c>
   11f2c:	mov	r0, #16
   11f30:	bl	10dec <malloc@plt>
   11f34:	mov	r5, r0
   11f38:	mov	r0, r6
   11f3c:	bl	10e10 <strlen@plt>
   11f40:	add	r4, r0, #1
   11f44:	mov	r0, r4
   11f48:	bl	10dec <malloc@plt>
   11f4c:	mov	r2, r4
   11f50:	mov	r1, r6
   11f54:	str	r0, [r5]
   11f58:	bl	10dbc <memcpy@plt>
   11f5c:	str	r8, [r5, #4]
   11f60:	str	r8, [r5, #8]
   11f64:	str	r8, [r5, #12]
   11f68:	b	11ac0 <avl_insere@@Base+0x21c>
   11f6c:	mvn	r2, #0
   11f70:	cmp	r3, r2
   11f74:	movlt	r3, r2
   11f78:	add	r3, r3, #1
   11f7c:	str	r3, [r4, #12]
   11f80:	mov	r3, r2
   11f84:	b	1194c <avl_insere@@Base+0xa8>
   11f88:	ldr	r2, [r0, #4]
   11f8c:	b	11990 <avl_insere@@Base+0xec>
   11f90:	cmp	r2, #0
   11f94:	mvnne	r3, #0
   11f98:	bne	11980 <avl_insere@@Base+0xdc>
   11f9c:	str	r4, [r0, #4]
   11fa0:	ldr	r3, [r4, #4]
   11fa4:	str	r2, [r4, #8]
   11fa8:	cmp	r3, #0
   11fac:	bne	119a8 <avl_insere@@Base+0x104>
   11fb0:	mvn	r1, #0
   11fb4:	mov	r3, r1
   11fb8:	b	119b8 <avl_insere@@Base+0x114>
   11fbc:	mov	r0, #16
   11fc0:	bl	10dec <malloc@plt>
   11fc4:	mov	r4, r0
   11fc8:	mov	r0, r6
   11fcc:	bl	10e10 <strlen@plt>
   11fd0:	add	r9, r0, #1
   11fd4:	mov	r0, r9
   11fd8:	bl	10dec <malloc@plt>
   11fdc:	mov	r2, r9
   11fe0:	mov	r1, r6
   11fe4:	str	r0, [r4]
   11fe8:	bl	10dbc <memcpy@plt>
   11fec:	str	r8, [r4, #4]
   11ff0:	str	r8, [r4, #8]
   11ff4:	str	r8, [r4, #12]
   11ff8:	b	119ec <avl_insere@@Base+0x148>
   11ffc:	mvn	ip, #0
   12000:	cmp	r3, ip
   12004:	str	r5, [r2, #4]
   12008:	ldr	r1, [r5, #4]
   1200c:	movlt	r3, ip
   12010:	add	r3, r3, #1
   12014:	cmp	r1, #0
   12018:	str	r3, [r2, #12]
   1201c:	str	r0, [r5, #8]
   12020:	moveq	r3, r1
   12024:	beq	11d6c <avl_insere@@Base+0x4c8>
   12028:	ldr	r3, [r1, #12]
   1202c:	cmp	r3, ip
   12030:	movlt	r3, ip
   12034:	add	r3, r3, #1
   12038:	b	11d6c <avl_insere@@Base+0x4c8>
   1203c:	str	r4, [r5, #12]
   12040:	b	11ac0 <avl_insere@@Base+0x21c>
   12044:	cmp	r3, #0
   12048:	str	r4, [r1, #8]
   1204c:	str	r3, [r4, #4]
   12050:	beq	121b4 <avl_insere@@Base+0x910>
   12054:	ldr	r2, [r3, #12]
   12058:	ldr	r3, [r4, #8]
   1205c:	ldr	r0, [r1, #4]
   12060:	cmp	r3, #0
   12064:	mvneq	r3, #0
   12068:	ldrne	r3, [r3, #12]
   1206c:	cmp	r3, r2
   12070:	movlt	r3, r2
   12074:	cmp	r0, #0
   12078:	add	r3, r3, #1
   1207c:	str	r3, [r4, #12]
   12080:	ldrne	r2, [r0, #12]
   12084:	mvneq	r2, #0
   12088:	cmp	r3, r2
   1208c:	movlt	r3, r2
   12090:	add	r3, r3, #1
   12094:	mov	r4, r1
   12098:	str	r3, [r1, #12]
   1209c:	b	119ec <avl_insere@@Base+0x148>
   120a0:	mvn	ip, #0
   120a4:	cmp	r3, ip
   120a8:	str	r4, [r2, #4]
   120ac:	ldr	r0, [r4, #4]
   120b0:	movlt	r3, ip
   120b4:	add	r3, r3, #1
   120b8:	cmp	r0, #0
   120bc:	str	r3, [r2, #12]
   120c0:	str	r1, [r4, #8]
   120c4:	moveq	r3, r0
   120c8:	beq	11e5c <avl_insere@@Base+0x5b8>
   120cc:	ldr	r3, [r0, #12]
   120d0:	cmp	r3, ip
   120d4:	movlt	r3, ip
   120d8:	add	r3, r3, #1
   120dc:	b	11e5c <avl_insere@@Base+0x5b8>
   120e0:	cmp	r1, #0
   120e4:	mvnne	r2, #0
   120e8:	bne	11c30 <avl_insere@@Base+0x38c>
   120ec:	str	r5, [r0, #8]
   120f0:	mvn	r2, #0
   120f4:	str	r1, [r5, #4]
   120f8:	b	11ee4 <avl_insere@@Base+0x640>
   120fc:	str	r0, [r4, #12]
   12100:	b	119ec <avl_insere@@Base+0x148>
   12104:	cmp	r2, #0
   12108:	bge	11c40 <avl_insere@@Base+0x39c>
   1210c:	str	r5, [r0, #8]
   12110:	str	r3, [r5, #4]
   12114:	b	11ee0 <avl_insere@@Base+0x63c>
   12118:	orr	r1, r1, r1, asr #31
   1211c:	add	r1, r1, #1
   12120:	b	11c74 <avl_insere@@Base+0x3d0>
   12124:	cmp	r0, #0
   12128:	mvnne	r2, #0
   1212c:	bne	11b20 <avl_insere@@Base+0x27c>
   12130:	str	r4, [r1, #8]
   12134:	mvn	r2, #0
   12138:	str	r0, [r4, #4]
   1213c:	b	12058 <avl_insere@@Base+0x7b4>
   12140:	mvn	r2, #0
   12144:	cmp	r1, r2
   12148:	movlt	r1, r2
   1214c:	add	r1, r1, #1
   12150:	str	r1, [r3, #12]
   12154:	str	r5, [r3, #8]
   12158:	mov	r1, r2
   1215c:	str	ip, [r5, #4]
   12160:	b	11ca4 <avl_insere@@Base+0x400>
   12164:	cmp	r2, #0
   12168:	bge	11b30 <avl_insere@@Base+0x28c>
   1216c:	str	r4, [r1, #8]
   12170:	str	r3, [r4, #4]
   12174:	b	12054 <avl_insere@@Base+0x7b0>
   12178:	orr	r0, r0, r0, asr #31
   1217c:	add	r0, r0, #1
   12180:	b	11b64 <avl_insere@@Base+0x2c0>
   12184:	mvn	r2, #0
   12188:	b	11ee4 <avl_insere@@Base+0x640>
   1218c:	mvn	r2, #0
   12190:	cmp	r0, r2
   12194:	movge	r1, r0
   12198:	movlt	r1, r2
   1219c:	add	r1, r1, #1
   121a0:	str	r1, [r3, #12]
   121a4:	str	r4, [r3, #8]
   121a8:	mov	r1, r2
   121ac:	str	ip, [r4, #4]
   121b0:	b	11b94 <avl_insere@@Base+0x2f0>
   121b4:	mvn	r2, #0
   121b8:	b	12058 <avl_insere@@Base+0x7b4>

000121bc <avl_no_valormin@@Base>:
   121bc:	b	121c4 <avl_no_valormin@@Base+0x8>
   121c0:	mov	r0, r3
   121c4:	ldr	r3, [r0, #4]
   121c8:	cmp	r3, #0
   121cc:	bne	121c0 <avl_no_valormin@@Base+0x4>
   121d0:	bx	lr

000121d4 <avl_no_valormax@@Base>:
   121d4:	b	121dc <avl_no_valormax@@Base+0x8>
   121d8:	mov	r0, r3
   121dc:	ldr	r3, [r0, #8]
   121e0:	cmp	r3, #0
   121e4:	bne	121d8 <avl_no_valormax@@Base+0x4>
   121e8:	bx	lr

000121ec <avl_remove_impl@@Base>:
   121ec:	push	{r4, r5, r6, r7, r8, lr}
   121f0:	subs	r4, r0, #0
   121f4:	beq	1239c <avl_remove_impl@@Base+0x1b0>
   121f8:	ldr	r7, [r4]
   121fc:	mov	r0, r1
   12200:	mov	r6, r1
   12204:	mov	r1, r7
   12208:	bl	10d80 <strcmp@plt>
   1220c:	cmp	r0, #0
   12210:	blt	1250c <avl_remove_impl@@Base+0x320>
   12214:	beq	12300 <avl_remove_impl@@Base+0x114>
   12218:	mov	r1, r6
   1221c:	ldr	r0, [r4, #8]
   12220:	bl	121ec <avl_remove_impl@@Base>
   12224:	mov	r5, r0
   12228:	str	r0, [r4, #8]
   1222c:	ldr	r0, [r4, #4]
   12230:	cmp	r0, #0
   12234:	beq	1236c <avl_remove_impl@@Base+0x180>
   12238:	cmp	r5, #0
   1223c:	ldr	r3, [r0, #12]
   12240:	beq	12524 <avl_remove_impl@@Base+0x338>
   12244:	ldr	r2, [r5, #12]
   12248:	cmp	r3, r2
   1224c:	movlt	r3, r2
   12250:	add	r3, r3, #1
   12254:	str	r3, [r4, #12]
   12258:	ldr	r3, [r5, #12]
   1225c:	ldr	r2, [r0, #12]
   12260:	sub	r3, r3, r2
   12264:	cmp	r3, #1
   12268:	ble	12394 <avl_remove_impl@@Base+0x1a8>
   1226c:	cmp	r5, #0
   12270:	beq	12540 <avl_remove_impl@@Base+0x354>
   12274:	ldmib	r5, {r2, r3}
   12278:	cmp	r3, #0
   1227c:	beq	12548 <avl_remove_impl@@Base+0x35c>
   12280:	cmp	r2, #0
   12284:	ldr	r3, [r3, #12]
   12288:	mvneq	r1, #0
   1228c:	beq	12294 <avl_remove_impl@@Base+0xa8>
   12290:	ldr	r1, [r2, #12]
   12294:	sub	r3, r3, r1
   12298:	cmp	r3, #0
   1229c:	blt	1245c <avl_remove_impl@@Base+0x270>
   122a0:	str	r4, [r5, #4]
   122a4:	ldr	r3, [r4, #4]
   122a8:	str	r2, [r4, #8]
   122ac:	cmp	r3, #0
   122b0:	mvneq	r1, #0
   122b4:	beq	122bc <avl_remove_impl@@Base+0xd0>
   122b8:	ldr	r1, [r3, #12]
   122bc:	cmp	r2, #0
   122c0:	mvneq	r3, #0
   122c4:	ldrne	r3, [r2, #12]
   122c8:	ldr	r2, [r5, #8]
   122cc:	cmp	r3, r1
   122d0:	movlt	r3, r1
   122d4:	cmp	r2, #0
   122d8:	add	r3, r3, #1
   122dc:	str	r3, [r4, #12]
   122e0:	ldrne	r2, [r2, #12]
   122e4:	mvneq	r2, #0
   122e8:	cmp	r3, r2
   122ec:	movlt	r3, r2
   122f0:	add	r3, r3, #1
   122f4:	str	r3, [r5, #12]
   122f8:	mov	r0, r5
   122fc:	pop	{r4, r5, r6, r7, r8, pc}
   12300:	ldr	r5, [r4, #4]
   12304:	cmp	r5, #0
   12308:	beq	12678 <avl_remove_impl@@Base+0x48c>
   1230c:	ldr	r6, [r4, #8]
   12310:	cmp	r6, #0
   12314:	bne	12320 <avl_remove_impl@@Base+0x134>
   12318:	b	12574 <avl_remove_impl@@Base+0x388>
   1231c:	mov	r6, r3
   12320:	ldr	r3, [r6, #4]
   12324:	cmp	r3, #0
   12328:	bne	1231c <avl_remove_impl@@Base+0x130>
   1232c:	ldr	r0, [r6]
   12330:	bl	10e10 <strlen@plt>
   12334:	add	r1, r0, #1
   12338:	mov	r0, r7
   1233c:	bl	10dc8 <realloc@plt>
   12340:	str	r0, [r4]
   12344:	ldr	r1, [r6]
   12348:	bl	10dd4 <strcpy@plt>
   1234c:	ldr	r1, [r6]
   12350:	ldr	r0, [r4, #8]
   12354:	bl	121ec <avl_remove_impl@@Base>
   12358:	mov	r5, r0
   1235c:	ldr	r0, [r4, #4]
   12360:	str	r5, [r4, #8]
   12364:	cmp	r0, #0
   12368:	bne	12238 <avl_remove_impl@@Base+0x4c>
   1236c:	cmp	r5, #0
   12370:	beq	12670 <avl_remove_impl@@Base+0x484>
   12374:	ldr	r3, [r5, #12]
   12378:	orr	r3, r3, r3, asr #31
   1237c:	add	r3, r3, #1
   12380:	str	r3, [r4, #12]
   12384:	ldr	r3, [r5, #12]
   12388:	add	r3, r3, #1
   1238c:	cmp	r3, #1
   12390:	bgt	12274 <avl_remove_impl@@Base+0x88>
   12394:	cmn	r3, #1
   12398:	blt	123a8 <avl_remove_impl@@Base+0x1bc>
   1239c:	mov	r5, r4
   123a0:	mov	r0, r5
   123a4:	pop	{r4, r5, r6, r7, r8, pc}
   123a8:	cmp	r0, #0
   123ac:	ldr	r5, [r0, #8]
   123b0:	beq	125b4 <avl_remove_impl@@Base+0x3c8>
   123b4:	cmp	r5, #0
   123b8:	ldr	r2, [r0, #4]
   123bc:	beq	12698 <avl_remove_impl@@Base+0x4ac>
   123c0:	cmp	r2, #0
   123c4:	ldr	r3, [r5, #12]
   123c8:	beq	12610 <avl_remove_impl@@Base+0x424>
   123cc:	ldr	r2, [r2, #12]
   123d0:	sub	r3, r3, r2
   123d4:	cmp	r3, #0
   123d8:	ble	125b4 <avl_remove_impl@@Base+0x3c8>
   123dc:	ldr	r2, [r5, #4]
   123e0:	str	r0, [r5, #4]
   123e4:	ldr	r3, [r0, #4]
   123e8:	str	r2, [r0, #8]
   123ec:	cmp	r3, #0
   123f0:	mvneq	r3, #0
   123f4:	ldrne	r3, [r3, #12]
   123f8:	cmp	r2, #0
   123fc:	beq	12624 <avl_remove_impl@@Base+0x438>
   12400:	ldr	r2, [r2, #12]
   12404:	cmp	r3, r2
   12408:	movlt	r3, r2
   1240c:	add	r3, r3, #1
   12410:	ldr	r2, [r5, #8]
   12414:	str	r3, [r0, #12]
   12418:	cmp	r2, #0
   1241c:	beq	126b4 <avl_remove_impl@@Base+0x4c8>
   12420:	ldr	r1, [r2, #12]
   12424:	str	r4, [r5, #8]
   12428:	cmp	r3, r1
   1242c:	movlt	r3, r1
   12430:	add	r3, r3, #1
   12434:	str	r3, [r5, #12]
   12438:	ldr	r1, [r2, #12]
   1243c:	str	r2, [r4, #4]
   12440:	ldr	r3, [r4, #8]
   12444:	ldr	r2, [r5, #4]
   12448:	cmp	r3, #0
   1244c:	mvneq	r3, #0
   12450:	ldrne	r3, [r3, #12]
   12454:	cmp	r3, r1
   12458:	b	122d0 <avl_remove_impl@@Base+0xe4>
   1245c:	ldr	r3, [r2, #8]
   12460:	str	r5, [r2, #8]
   12464:	cmp	r3, #0
   12468:	str	r3, [r5, #4]
   1246c:	ldrne	r1, [r3, #12]
   12470:	ldr	r3, [r5, #8]
   12474:	mvneq	r1, #0
   12478:	cmp	r3, #0
   1247c:	mvneq	r3, #0
   12480:	ldrne	r3, [r3, #12]
   12484:	ldr	r0, [r2, #4]
   12488:	cmp	r3, r1
   1248c:	movlt	r3, r1
   12490:	add	r3, r3, #1
   12494:	cmp	r0, #0
   12498:	str	r3, [r5, #12]
   1249c:	beq	12630 <avl_remove_impl@@Base+0x444>
   124a0:	ldr	ip, [r0, #12]
   124a4:	str	r4, [r2, #4]
   124a8:	ldr	r1, [r4, #4]
   124ac:	cmp	r3, ip
   124b0:	movlt	r3, ip
   124b4:	cmp	r1, #0
   124b8:	add	r3, r3, #1
   124bc:	str	r3, [r2, #12]
   124c0:	ldrne	r3, [r1, #12]
   124c4:	ldr	r1, [r0, #12]
   124c8:	mvneq	r3, #0
   124cc:	cmp	r3, r1
   124d0:	movlt	r3, r1
   124d4:	add	r3, r3, #1
   124d8:	str	r0, [r4, #8]
   124dc:	ldr	r1, [r2, #8]
   124e0:	str	r3, [r4, #12]
   124e4:	cmp	r1, #0
   124e8:	mvneq	r1, #0
   124ec:	ldrne	r1, [r1, #12]
   124f0:	mov	r5, r2
   124f4:	cmp	r3, r1
   124f8:	movlt	r3, r1
   124fc:	add	r3, r3, #1
   12500:	str	r3, [r2, #12]
   12504:	mov	r0, r5
   12508:	pop	{r4, r5, r6, r7, r8, pc}
   1250c:	mov	r1, r6
   12510:	ldr	r0, [r4, #4]
   12514:	bl	121ec <avl_remove_impl@@Base>
   12518:	ldr	r5, [r4, #8]
   1251c:	str	r0, [r4, #4]
   12520:	b	12230 <avl_remove_impl@@Base+0x44>
   12524:	mvn	r2, #0
   12528:	cmp	r3, r2
   1252c:	movlt	r3, r2
   12530:	add	r3, r3, #1
   12534:	str	r3, [r4, #12]
   12538:	mov	r3, r2
   1253c:	b	1225c <avl_remove_impl@@Base+0x70>
   12540:	ldr	r2, [r5, #4]
   12544:	b	122a0 <avl_remove_impl@@Base+0xb4>
   12548:	cmp	r2, #0
   1254c:	mvnne	r3, #0
   12550:	bne	12290 <avl_remove_impl@@Base+0xa4>
   12554:	str	r4, [r5, #4]
   12558:	ldr	r3, [r4, #4]
   1255c:	str	r2, [r4, #8]
   12560:	cmp	r3, #0
   12564:	bne	122b8 <avl_remove_impl@@Base+0xcc>
   12568:	mvn	r1, #0
   1256c:	mov	r3, r1
   12570:	b	122c8 <avl_remove_impl@@Base+0xdc>
   12574:	ldr	r0, [r5]
   12578:	bl	10e10 <strlen@plt>
   1257c:	add	r1, r0, #1
   12580:	mov	r0, r7
   12584:	bl	10dc8 <realloc@plt>
   12588:	str	r0, [r4]
   1258c:	ldr	r1, [r5]
   12590:	bl	10dd4 <strcpy@plt>
   12594:	ldmib	r5, {r1, r2, r3}
   12598:	ldr	r0, [r5]
   1259c:	stmib	r4, {r1, r2, r3}
   125a0:	bl	10db0 <free@plt>
   125a4:	mov	r0, r5
   125a8:	bl	10db0 <free@plt>
   125ac:	ldmib	r4, {r0, r5}
   125b0:	b	12230 <avl_remove_impl@@Base+0x44>
   125b4:	cmp	r5, #0
   125b8:	str	r4, [r0, #8]
   125bc:	str	r5, [r4, #4]
   125c0:	beq	126d4 <avl_remove_impl@@Base+0x4e8>
   125c4:	ldr	r1, [r5, #12]
   125c8:	ldr	r3, [r4, #8]
   125cc:	ldr	r2, [r0, #4]
   125d0:	cmp	r3, #0
   125d4:	mvneq	r3, #0
   125d8:	ldrne	r3, [r3, #12]
   125dc:	mov	r5, r0
   125e0:	cmp	r3, r1
   125e4:	movlt	r3, r1
   125e8:	cmp	r2, #0
   125ec:	add	r3, r3, #1
   125f0:	str	r3, [r4, #12]
   125f4:	ldrne	r2, [r2, #12]
   125f8:	mvneq	r2, #0
   125fc:	cmp	r3, r2
   12600:	movlt	r3, r2
   12604:	add	r3, r3, #1
   12608:	str	r3, [r0, #12]
   1260c:	b	122f8 <avl_remove_impl@@Base+0x10c>
   12610:	cmp	r3, #0
   12614:	bge	123dc <avl_remove_impl@@Base+0x1f0>
   12618:	str	r4, [r0, #8]
   1261c:	str	r5, [r4, #4]
   12620:	b	125c4 <avl_remove_impl@@Base+0x3d8>
   12624:	orr	r3, r3, r3, asr #31
   12628:	add	r3, r3, #1
   1262c:	b	12410 <avl_remove_impl@@Base+0x224>
   12630:	mvn	ip, #0
   12634:	cmp	r3, ip
   12638:	str	r4, [r2, #4]
   1263c:	ldr	r1, [r4, #4]
   12640:	movlt	r3, ip
   12644:	add	r3, r3, #1
   12648:	cmp	r1, #0
   1264c:	str	r3, [r2, #12]
   12650:	str	r0, [r4, #8]
   12654:	moveq	r3, r1
   12658:	beq	124dc <avl_remove_impl@@Base+0x2f0>
   1265c:	ldr	r3, [r1, #12]
   12660:	cmp	r3, ip
   12664:	movlt	r3, ip
   12668:	add	r3, r3, #1
   1266c:	b	124dc <avl_remove_impl@@Base+0x2f0>
   12670:	str	r5, [r4, #12]
   12674:	b	1239c <avl_remove_impl@@Base+0x1b0>
   12678:	ldr	r5, [r4, #8]
   1267c:	cmp	r5, #0
   12680:	bne	12574 <avl_remove_impl@@Base+0x388>
   12684:	mov	r0, r7
   12688:	bl	10db0 <free@plt>
   1268c:	mov	r0, r4
   12690:	bl	10db0 <free@plt>
   12694:	b	122f8 <avl_remove_impl@@Base+0x10c>
   12698:	cmp	r2, #0
   1269c:	mvnne	r3, #0
   126a0:	bne	123cc <avl_remove_impl@@Base+0x1e0>
   126a4:	str	r4, [r0, #8]
   126a8:	mvn	r1, #0
   126ac:	str	r2, [r4, #4]
   126b0:	b	125c8 <avl_remove_impl@@Base+0x3dc>
   126b4:	mvn	r1, #0
   126b8:	cmp	r3, r1
   126bc:	movlt	r3, r1
   126c0:	add	r3, r3, #1
   126c4:	str	r4, [r5, #8]
   126c8:	str	r3, [r5, #12]
   126cc:	str	r2, [r4, #4]
   126d0:	b	12440 <avl_remove_impl@@Base+0x254>
   126d4:	mvn	r1, #0
   126d8:	b	125c8 <avl_remove_impl@@Base+0x3dc>

000126dc <avl_apaga@@Base>:
   126dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126e0:	subs	r6, r0, #0
   126e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   126e8:	ldr	r4, [r6]
   126ec:	cmp	r4, #0
   126f0:	beq	12858 <avl_apaga@@Base+0x17c>
   126f4:	ldr	r3, [r4, #4]
   126f8:	mvn	r7, #0
   126fc:	subs	r9, r3, #0
   12700:	mov	r8, #0
   12704:	ldr	sl, [r4]
   12708:	beq	1283c <avl_apaga@@Base+0x160>
   1270c:	ldr	r5, [r4, #8]
   12710:	cmp	r5, #0
   12714:	bne	12720 <avl_apaga@@Base+0x44>
   12718:	b	12864 <avl_apaga@@Base+0x188>
   1271c:	mov	r5, r3
   12720:	ldr	r3, [r5, #4]
   12724:	cmp	r3, #0
   12728:	bne	1271c <avl_apaga@@Base+0x40>
   1272c:	ldr	r0, [r5]
   12730:	bl	10e10 <strlen@plt>
   12734:	add	r1, r0, #1
   12738:	mov	r0, sl
   1273c:	bl	10dc8 <realloc@plt>
   12740:	str	r0, [r4]
   12744:	ldr	r1, [r5]
   12748:	bl	10dd4 <strcpy@plt>
   1274c:	ldr	r1, [r5]
   12750:	ldr	r0, [r4, #8]
   12754:	bl	121ec <avl_remove_impl@@Base>
   12758:	ldr	r3, [r4, #4]
   1275c:	cmp	r3, #0
   12760:	str	r0, [r4, #8]
   12764:	beq	128ac <avl_apaga@@Base+0x1d0>
   12768:	cmp	r0, #0
   1276c:	ldr	r2, [r3, #12]
   12770:	beq	12a74 <avl_apaga@@Base+0x398>
   12774:	ldr	r1, [r0, #12]
   12778:	cmp	r2, r1
   1277c:	movlt	r2, r1
   12780:	add	r2, r2, #1
   12784:	str	r2, [r4, #12]
   12788:	ldr	r2, [r0, #12]
   1278c:	ldr	r1, [r3, #12]
   12790:	sub	r2, r2, r1
   12794:	cmp	r2, #1
   12798:	ble	128d8 <avl_apaga@@Base+0x1fc>
   1279c:	cmp	r0, #0
   127a0:	beq	12a8c <avl_apaga@@Base+0x3b0>
   127a4:	ldmib	r0, {r2, r3}
   127a8:	cmp	r3, #0
   127ac:	beq	12a94 <avl_apaga@@Base+0x3b8>
   127b0:	cmp	r2, #0
   127b4:	ldr	r3, [r3, #12]
   127b8:	moveq	r1, r7
   127bc:	beq	127c4 <avl_apaga@@Base+0xe8>
   127c0:	ldr	r1, [r2, #12]
   127c4:	sub	r3, r3, r1
   127c8:	cmp	r3, #0
   127cc:	blt	129c4 <avl_apaga@@Base+0x2e8>
   127d0:	str	r4, [r0, #4]
   127d4:	ldr	r3, [r4, #4]
   127d8:	str	r2, [r4, #8]
   127dc:	cmp	r3, #0
   127e0:	moveq	r1, r7
   127e4:	ldrne	r1, [r3, #12]
   127e8:	cmp	r2, #0
   127ec:	beq	12ab8 <avl_apaga@@Base+0x3dc>
   127f0:	ldr	r3, [r2, #12]
   127f4:	ldr	r2, [r0, #8]
   127f8:	cmp	r3, r1
   127fc:	movlt	r3, r1
   12800:	cmp	r2, #0
   12804:	add	r3, r3, #1
   12808:	str	r3, [r4, #12]
   1280c:	ldrne	r2, [r2, #12]
   12810:	moveq	r2, r7
   12814:	cmp	r3, r2
   12818:	movlt	r3, r2
   1281c:	add	r3, r3, #1
   12820:	str	r3, [r0, #12]
   12824:	ldr	r3, [r0, #4]
   12828:	mov	r4, r0
   1282c:	subs	r9, r3, #0
   12830:	str	r4, [r6]
   12834:	ldr	sl, [r4]
   12838:	bne	1270c <avl_apaga@@Base+0x30>
   1283c:	ldr	r9, [r4, #8]
   12840:	cmp	r9, #0
   12844:	bne	12864 <avl_apaga@@Base+0x188>
   12848:	mov	r0, sl
   1284c:	bl	10db0 <free@plt>
   12850:	mov	r0, r4
   12854:	bl	10db0 <free@plt>
   12858:	mov	r0, r6
   1285c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12860:	b	10db0 <free@plt>
   12864:	ldr	r0, [r9]
   12868:	bl	10e10 <strlen@plt>
   1286c:	add	r1, r0, #1
   12870:	mov	r0, sl
   12874:	bl	10dc8 <realloc@plt>
   12878:	str	r0, [r4]
   1287c:	ldr	r1, [r9]
   12880:	bl	10dd4 <strcpy@plt>
   12884:	ldmib	r9, {r1, r2, r3}
   12888:	ldr	r0, [r9]
   1288c:	stmib	r4, {r1, r2, r3}
   12890:	bl	10db0 <free@plt>
   12894:	mov	r0, r9
   12898:	bl	10db0 <free@plt>
   1289c:	ldr	r3, [r4, #4]
   128a0:	ldr	r0, [r4, #8]
   128a4:	cmp	r3, #0
   128a8:	bne	12768 <avl_apaga@@Base+0x8c>
   128ac:	cmp	r0, #0
   128b0:	beq	12b70 <avl_apaga@@Base+0x494>
   128b4:	ldr	r2, [r0, #12]
   128b8:	cmp	r2, r7
   128bc:	movlt	r2, r7
   128c0:	add	r2, r2, #1
   128c4:	str	r2, [r4, #12]
   128c8:	ldr	r2, [r0, #12]
   128cc:	add	r2, r2, #1
   128d0:	cmp	r2, #1
   128d4:	bgt	127a4 <avl_apaga@@Base+0xc8>
   128d8:	cmn	r2, #1
   128dc:	bge	1282c <avl_apaga@@Base+0x150>
   128e0:	cmp	r3, #0
   128e4:	ldr	r2, [r3, #8]
   128e8:	beq	12ac0 <avl_apaga@@Base+0x3e4>
   128ec:	cmp	r2, #0
   128f0:	ldr	r0, [r3, #4]
   128f4:	beq	12b78 <avl_apaga@@Base+0x49c>
   128f8:	cmp	r0, #0
   128fc:	ldr	r1, [r2, #12]
   12900:	beq	12b5c <avl_apaga@@Base+0x480>
   12904:	ldr	r0, [r0, #12]
   12908:	sub	r1, r1, r0
   1290c:	cmp	r1, #0
   12910:	ble	12ac0 <avl_apaga@@Base+0x3e4>
   12914:	ldr	r0, [r2, #4]
   12918:	str	r3, [r2, #4]
   1291c:	ldr	r1, [r3, #4]
   12920:	str	r0, [r3, #8]
   12924:	cmp	r1, #0
   12928:	moveq	r1, r7
   1292c:	ldrne	r1, [r1, #12]
   12930:	cmp	r0, #0
   12934:	beq	12b94 <avl_apaga@@Base+0x4b8>
   12938:	ldr	r0, [r0, #12]
   1293c:	cmp	r1, r0
   12940:	movlt	r1, r0
   12944:	add	r1, r1, #1
   12948:	ldr	r0, [r2, #8]
   1294c:	str	r1, [r3, #12]
   12950:	cmp	r0, #0
   12954:	beq	12ba4 <avl_apaga@@Base+0x4c8>
   12958:	ldr	r3, [r0, #12]
   1295c:	str	r4, [r2, #8]
   12960:	cmp	r1, r3
   12964:	movge	r3, r1
   12968:	add	r3, r3, #1
   1296c:	str	r3, [r2, #12]
   12970:	ldr	r1, [r0, #12]
   12974:	str	r0, [r4, #4]
   12978:	ldr	r3, [r4, #8]
   1297c:	ldr	r0, [r2, #4]
   12980:	cmp	r3, #0
   12984:	moveq	r3, r7
   12988:	ldrne	r3, [r3, #12]
   1298c:	cmp	r3, r1
   12990:	movlt	r3, r1
   12994:	cmp	r0, #0
   12998:	add	r3, r3, #1
   1299c:	str	r3, [r4, #12]
   129a0:	ldrne	r1, [r0, #12]
   129a4:	moveq	r1, r7
   129a8:	cmp	r3, r1
   129ac:	movlt	r3, r1
   129b0:	add	r3, r3, #1
   129b4:	str	r3, [r2, #12]
   129b8:	mov	r4, r2
   129bc:	ldr	r3, [r2, #4]
   129c0:	b	1282c <avl_apaga@@Base+0x150>
   129c4:	ldr	r3, [r2, #8]
   129c8:	str	r0, [r2, #8]
   129cc:	cmp	r3, #0
   129d0:	str	r3, [r0, #4]
   129d4:	ldrne	ip, [r3, #12]
   129d8:	ldr	r3, [r0, #8]
   129dc:	moveq	ip, r7
   129e0:	cmp	r3, #0
   129e4:	moveq	r3, r7
   129e8:	ldrne	r3, [r3, #12]
   129ec:	ldr	r1, [r2, #4]
   129f0:	cmp	r3, ip
   129f4:	movlt	r3, ip
   129f8:	add	r3, r3, #1
   129fc:	cmp	r1, #0
   12a00:	str	r3, [r0, #12]
   12a04:	beq	12b24 <avl_apaga@@Base+0x448>
   12a08:	ldr	r0, [r1, #12]
   12a0c:	str	r4, [r2, #4]
   12a10:	ldr	ip, [r4, #4]
   12a14:	cmp	r3, r0
   12a18:	movlt	r3, r0
   12a1c:	cmp	ip, #0
   12a20:	add	r3, r3, #1
   12a24:	str	r3, [r2, #12]
   12a28:	str	r1, [r4, #8]
   12a2c:	ldrne	r3, [ip, #12]
   12a30:	ldr	r1, [r1, #12]
   12a34:	moveq	r3, r7
   12a38:	cmp	r3, r1
   12a3c:	movlt	r3, r1
   12a40:	add	r3, r3, #1
   12a44:	ldr	r1, [r2, #8]
   12a48:	str	r3, [r4, #12]
   12a4c:	cmp	r1, #0
   12a50:	moveq	r1, r7
   12a54:	ldrne	r1, [r1, #12]
   12a58:	mov	r4, r2
   12a5c:	cmp	r1, r3
   12a60:	movge	r3, r1
   12a64:	add	r3, r3, #1
   12a68:	str	r3, [r2, #12]
   12a6c:	ldr	r3, [r2, #4]
   12a70:	b	1282c <avl_apaga@@Base+0x150>
   12a74:	cmp	r2, r7
   12a78:	movlt	r2, r7
   12a7c:	add	r2, r2, #1
   12a80:	str	r2, [r4, #12]
   12a84:	mvn	r2, #0
   12a88:	b	1278c <avl_apaga@@Base+0xb0>
   12a8c:	ldr	r2, [r0, #4]
   12a90:	b	127d0 <avl_apaga@@Base+0xf4>
   12a94:	cmp	r2, #0
   12a98:	movne	r3, r7
   12a9c:	bne	127c0 <avl_apaga@@Base+0xe4>
   12aa0:	str	r4, [r0, #4]
   12aa4:	ldr	r3, [r4, #4]
   12aa8:	str	r2, [r4, #8]
   12aac:	cmp	r3, #0
   12ab0:	beq	12bc8 <avl_apaga@@Base+0x4ec>
   12ab4:	ldr	r1, [r3, #12]
   12ab8:	mov	r3, r7
   12abc:	b	127f4 <avl_apaga@@Base+0x118>
   12ac0:	cmp	r2, #0
   12ac4:	str	r4, [r3, #8]
   12ac8:	moveq	r1, r7
   12acc:	str	r2, [r4, #4]
   12ad0:	beq	12ad8 <avl_apaga@@Base+0x3fc>
   12ad4:	ldr	r1, [r2, #12]
   12ad8:	ldr	r2, [r4, #8]
   12adc:	ldr	r0, [r3, #4]
   12ae0:	cmp	r2, #0
   12ae4:	moveq	r2, r7
   12ae8:	ldrne	r2, [r2, #12]
   12aec:	cmp	r2, r1
   12af0:	movlt	r2, r1
   12af4:	cmp	r0, #0
   12af8:	add	r2, r2, #1
   12afc:	str	r2, [r4, #12]
   12b00:	ldrne	r1, [r0, #12]
   12b04:	moveq	r1, r7
   12b08:	cmp	r2, r1
   12b0c:	movlt	r2, r1
   12b10:	add	r2, r2, #1
   12b14:	str	r2, [r3, #12]
   12b18:	mov	r4, r3
   12b1c:	ldr	r3, [r3, #4]
   12b20:	b	1282c <avl_apaga@@Base+0x150>
   12b24:	cmp	r3, r7
   12b28:	str	r4, [r2, #4]
   12b2c:	ldr	r0, [r4, #4]
   12b30:	movlt	r3, r7
   12b34:	add	r3, r3, #1
   12b38:	cmp	r0, #0
   12b3c:	str	r3, [r2, #12]
   12b40:	str	r1, [r4, #8]
   12b44:	beq	12bd4 <avl_apaga@@Base+0x4f8>
   12b48:	ldr	r3, [r0, #12]
   12b4c:	cmp	r3, r7
   12b50:	movlt	r3, r7
   12b54:	add	r3, r3, #1
   12b58:	b	12a44 <avl_apaga@@Base+0x368>
   12b5c:	cmp	r1, #0
   12b60:	bge	12914 <avl_apaga@@Base+0x238>
   12b64:	str	r4, [r3, #8]
   12b68:	str	r2, [r4, #4]
   12b6c:	b	12ad4 <avl_apaga@@Base+0x3f8>
   12b70:	str	r3, [r4, #12]
   12b74:	b	1282c <avl_apaga@@Base+0x150>
   12b78:	cmp	r0, #0
   12b7c:	streq	r4, [r3, #8]
   12b80:	moveq	r1, r7
   12b84:	streq	r0, [r4, #4]
   12b88:	beq	12ad8 <avl_apaga@@Base+0x3fc>
   12b8c:	mov	r1, r7
   12b90:	b	12904 <avl_apaga@@Base+0x228>
   12b94:	cmp	r1, r7
   12b98:	movlt	r1, r7
   12b9c:	add	r1, r1, #1
   12ba0:	b	12948 <avl_apaga@@Base+0x26c>
   12ba4:	cmp	r1, r7
   12ba8:	movge	r3, r1
   12bac:	movlt	r3, r7
   12bb0:	add	r3, r3, #1
   12bb4:	str	r3, [r2, #12]
   12bb8:	str	r4, [r2, #8]
   12bbc:	mvn	r1, #0
   12bc0:	str	r0, [r4, #4]
   12bc4:	b	12978 <avl_apaga@@Base+0x29c>
   12bc8:	mov	r1, r7
   12bcc:	mvn	r3, #0
   12bd0:	b	127f4 <avl_apaga@@Base+0x118>
   12bd4:	mov	r3, r8
   12bd8:	b	12a44 <avl_apaga@@Base+0x368>

00012bdc <avl_remove@@Base>:
   12bdc:	cmp	r1, #0
   12be0:	cmpne	r0, #0
   12be4:	beq	12f64 <avl_remove@@Base+0x388>
   12be8:	push	{r4, r5, r6, r7, r8, lr}
   12bec:	mov	r5, r1
   12bf0:	ldr	r4, [r0]
   12bf4:	mov	r6, r0
   12bf8:	cmp	r4, #0
   12bfc:	beq	12cfc <avl_remove@@Base+0x120>
   12c00:	ldr	r7, [r4]
   12c04:	mov	r0, r1
   12c08:	mov	r1, r7
   12c0c:	bl	10d80 <strcmp@plt>
   12c10:	cmp	r0, #0
   12c14:	blt	12f2c <avl_remove@@Base+0x350>
   12c18:	beq	12d08 <avl_remove@@Base+0x12c>
   12c1c:	mov	r1, r5
   12c20:	ldr	r0, [r4, #8]
   12c24:	bl	121ec <avl_remove_impl@@Base>
   12c28:	ldr	r1, [r4, #4]
   12c2c:	str	r0, [r4, #8]
   12c30:	cmp	r1, #0
   12c34:	beq	12d70 <avl_remove@@Base+0x194>
   12c38:	cmp	r0, #0
   12c3c:	ldr	r3, [r1, #12]
   12c40:	beq	12f48 <avl_remove@@Base+0x36c>
   12c44:	ldr	r2, [r0, #12]
   12c48:	cmp	r3, r2
   12c4c:	movlt	r3, r2
   12c50:	add	r3, r3, #1
   12c54:	str	r3, [r4, #12]
   12c58:	ldr	r3, [r0, #12]
   12c5c:	ldr	r2, [r1, #12]
   12c60:	sub	r3, r3, r2
   12c64:	cmp	r3, #1
   12c68:	ble	12d98 <avl_remove@@Base+0x1bc>
   12c6c:	cmp	r0, #0
   12c70:	beq	12f6c <avl_remove@@Base+0x390>
   12c74:	ldmib	r0, {r2, r3}
   12c78:	cmp	r3, #0
   12c7c:	beq	12f74 <avl_remove@@Base+0x398>
   12c80:	cmp	r2, #0
   12c84:	ldr	r3, [r3, #12]
   12c88:	mvneq	r1, #0
   12c8c:	beq	12c94 <avl_remove@@Base+0xb8>
   12c90:	ldr	r1, [r2, #12]
   12c94:	sub	r3, r3, r1
   12c98:	cmp	r3, #0
   12c9c:	blt	12e80 <avl_remove@@Base+0x2a4>
   12ca0:	str	r4, [r0, #4]
   12ca4:	ldr	r3, [r4, #4]
   12ca8:	str	r2, [r4, #8]
   12cac:	cmp	r3, #0
   12cb0:	mvneq	r1, #0
   12cb4:	beq	12cbc <avl_remove@@Base+0xe0>
   12cb8:	ldr	r1, [r3, #12]
   12cbc:	cmp	r2, #0
   12cc0:	mvneq	r3, #0
   12cc4:	ldrne	r3, [r2, #12]
   12cc8:	ldr	r2, [r0, #8]
   12ccc:	cmp	r3, r1
   12cd0:	movlt	r3, r1
   12cd4:	cmp	r2, #0
   12cd8:	add	r3, r3, #1
   12cdc:	str	r3, [r4, #12]
   12ce0:	ldrne	r2, [r2, #12]
   12ce4:	mvneq	r2, #0
   12ce8:	cmp	r3, r2
   12cec:	movlt	r3, r2
   12cf0:	mov	r4, r0
   12cf4:	add	r3, r3, #1
   12cf8:	str	r3, [r0, #12]
   12cfc:	str	r4, [r6]
   12d00:	mov	r0, #0
   12d04:	pop	{r4, r5, r6, r7, r8, pc}
   12d08:	ldr	r8, [r4, #4]
   12d0c:	cmp	r8, #0
   12d10:	beq	1309c <avl_remove@@Base+0x4c0>
   12d14:	ldr	r5, [r4, #8]
   12d18:	cmp	r5, #0
   12d1c:	bne	12d28 <avl_remove@@Base+0x14c>
   12d20:	b	12fa0 <avl_remove@@Base+0x3c4>
   12d24:	mov	r5, r3
   12d28:	ldr	r3, [r5, #4]
   12d2c:	cmp	r3, #0
   12d30:	bne	12d24 <avl_remove@@Base+0x148>
   12d34:	ldr	r0, [r5]
   12d38:	bl	10e10 <strlen@plt>
   12d3c:	add	r1, r0, #1
   12d40:	mov	r0, r7
   12d44:	bl	10dc8 <realloc@plt>
   12d48:	str	r0, [r4]
   12d4c:	ldr	r1, [r5]
   12d50:	bl	10dd4 <strcpy@plt>
   12d54:	ldr	r1, [r5]
   12d58:	ldr	r0, [r4, #8]
   12d5c:	bl	121ec <avl_remove_impl@@Base>
   12d60:	ldr	r1, [r4, #4]
   12d64:	cmp	r1, #0
   12d68:	str	r0, [r4, #8]
   12d6c:	bne	12c38 <avl_remove@@Base+0x5c>
   12d70:	cmp	r0, #0
   12d74:	beq	13094 <avl_remove@@Base+0x4b8>
   12d78:	ldr	r3, [r0, #12]
   12d7c:	orr	r3, r3, r3, asr #31
   12d80:	add	r3, r3, #1
   12d84:	str	r3, [r4, #12]
   12d88:	ldr	r3, [r0, #12]
   12d8c:	add	r3, r3, #1
   12d90:	cmp	r3, #1
   12d94:	bgt	12c74 <avl_remove@@Base+0x98>
   12d98:	cmn	r3, #1
   12d9c:	bge	12cfc <avl_remove@@Base+0x120>
   12da0:	cmp	r1, #0
   12da4:	ldr	r3, [r1, #8]
   12da8:	beq	12fe4 <avl_remove@@Base+0x408>
   12dac:	cmp	r3, #0
   12db0:	ldr	r0, [r1, #4]
   12db4:	beq	130c0 <avl_remove@@Base+0x4e4>
   12db8:	cmp	r0, #0
   12dbc:	ldr	r2, [r3, #12]
   12dc0:	beq	13040 <avl_remove@@Base+0x464>
   12dc4:	ldr	r0, [r0, #12]
   12dc8:	sub	r2, r2, r0
   12dcc:	cmp	r2, #0
   12dd0:	ble	12fe4 <avl_remove@@Base+0x408>
   12dd4:	ldr	r0, [r3, #4]
   12dd8:	str	r1, [r3, #4]
   12ddc:	ldr	r2, [r1, #4]
   12de0:	str	r0, [r1, #8]
   12de4:	cmp	r2, #0
   12de8:	mvneq	r2, #0
   12dec:	ldrne	r2, [r2, #12]
   12df0:	cmp	r0, #0
   12df4:	beq	130dc <avl_remove@@Base+0x500>
   12df8:	ldr	r0, [r0, #12]
   12dfc:	cmp	r2, r0
   12e00:	movlt	r2, r0
   12e04:	add	r2, r2, #1
   12e08:	ldr	r0, [r3, #8]
   12e0c:	str	r2, [r1, #12]
   12e10:	cmp	r0, #0
   12e14:	beq	130e8 <avl_remove@@Base+0x50c>
   12e18:	ldr	r1, [r0, #12]
   12e1c:	str	r4, [r3, #8]
   12e20:	cmp	r2, r1
   12e24:	movlt	r2, r1
   12e28:	add	r2, r2, #1
   12e2c:	str	r2, [r3, #12]
   12e30:	ldr	r1, [r0, #12]
   12e34:	str	r0, [r4, #4]
   12e38:	ldr	r2, [r4, #8]
   12e3c:	ldr	r0, [r3, #4]
   12e40:	cmp	r2, #0
   12e44:	mvneq	r2, #0
   12e48:	ldrne	r2, [r2, #12]
   12e4c:	cmp	r2, r1
   12e50:	movlt	r2, r1
   12e54:	cmp	r0, #0
   12e58:	add	r2, r2, #1
   12e5c:	str	r2, [r4, #12]
   12e60:	ldrne	r1, [r0, #12]
   12e64:	mvneq	r1, #0
   12e68:	cmp	r2, r1
   12e6c:	movlt	r2, r1
   12e70:	add	r2, r2, #1
   12e74:	str	r2, [r3, #12]
   12e78:	mov	r4, r3
   12e7c:	b	12cfc <avl_remove@@Base+0x120>
   12e80:	ldr	r3, [r2, #8]
   12e84:	str	r0, [r2, #8]
   12e88:	cmp	r3, #0
   12e8c:	str	r3, [r0, #4]
   12e90:	ldrne	r1, [r3, #12]
   12e94:	ldr	r3, [r0, #8]
   12e98:	mvneq	r1, #0
   12e9c:	cmp	r3, #0
   12ea0:	mvneq	r3, #0
   12ea4:	ldrne	r3, [r3, #12]
   12ea8:	ldr	ip, [r2, #4]
   12eac:	cmp	r3, r1
   12eb0:	movlt	r3, r1
   12eb4:	add	r3, r3, #1
   12eb8:	cmp	ip, #0
   12ebc:	str	r3, [r0, #12]
   12ec0:	beq	13054 <avl_remove@@Base+0x478>
   12ec4:	ldr	r0, [ip, #12]
   12ec8:	str	r4, [r2, #4]
   12ecc:	ldr	r1, [r4, #4]
   12ed0:	cmp	r3, r0
   12ed4:	movlt	r3, r0
   12ed8:	cmp	r1, #0
   12edc:	add	r3, r3, #1
   12ee0:	str	r3, [r2, #12]
   12ee4:	ldrne	r3, [r1, #12]
   12ee8:	ldr	r1, [ip, #12]
   12eec:	mvneq	r3, #0
   12ef0:	cmp	r3, r1
   12ef4:	movlt	r3, r1
   12ef8:	add	r3, r3, #1
   12efc:	str	ip, [r4, #8]
   12f00:	ldr	r1, [r2, #8]
   12f04:	str	r3, [r4, #12]
   12f08:	cmp	r1, #0
   12f0c:	mvneq	r1, #0
   12f10:	ldrne	r1, [r1, #12]
   12f14:	mov	r4, r2
   12f18:	cmp	r1, r3
   12f1c:	movge	r3, r1
   12f20:	add	r3, r3, #1
   12f24:	str	r3, [r2, #12]
   12f28:	b	12cfc <avl_remove@@Base+0x120>
   12f2c:	mov	r1, r5
   12f30:	ldr	r0, [r4, #4]
   12f34:	bl	121ec <avl_remove_impl@@Base>
   12f38:	mov	r1, r0
   12f3c:	str	r0, [r4, #4]
   12f40:	ldr	r0, [r4, #8]
   12f44:	b	12c30 <avl_remove@@Base+0x54>
   12f48:	mvn	r2, #0
   12f4c:	cmp	r3, r2
   12f50:	movlt	r3, r2
   12f54:	add	r3, r3, #1
   12f58:	str	r3, [r4, #12]
   12f5c:	mov	r3, r2
   12f60:	b	12c5c <avl_remove@@Base+0x80>
   12f64:	mvn	r0, #0
   12f68:	bx	lr
   12f6c:	ldr	r2, [r0, #4]
   12f70:	b	12ca0 <avl_remove@@Base+0xc4>
   12f74:	cmp	r2, #0
   12f78:	mvnne	r3, #0
   12f7c:	bne	12c90 <avl_remove@@Base+0xb4>
   12f80:	str	r4, [r0, #4]
   12f84:	ldr	r3, [r4, #4]
   12f88:	str	r2, [r4, #8]
   12f8c:	cmp	r3, #0
   12f90:	bne	12cb8 <avl_remove@@Base+0xdc>
   12f94:	mvn	r1, #0
   12f98:	mov	r3, r1
   12f9c:	b	12cc8 <avl_remove@@Base+0xec>
   12fa0:	ldr	r0, [r8]
   12fa4:	bl	10e10 <strlen@plt>
   12fa8:	add	r1, r0, #1
   12fac:	mov	r0, r7
   12fb0:	bl	10dc8 <realloc@plt>
   12fb4:	str	r0, [r4]
   12fb8:	ldr	r1, [r8]
   12fbc:	bl	10dd4 <strcpy@plt>
   12fc0:	ldmib	r8, {r1, r2, r3}
   12fc4:	ldr	r0, [r8]
   12fc8:	stmib	r4, {r1, r2, r3}
   12fcc:	bl	10db0 <free@plt>
   12fd0:	mov	r0, r8
   12fd4:	bl	10db0 <free@plt>
   12fd8:	ldr	r1, [r4, #4]
   12fdc:	ldr	r0, [r4, #8]
   12fe0:	b	12c30 <avl_remove@@Base+0x54>
   12fe4:	cmp	r3, #0
   12fe8:	str	r4, [r1, #8]
   12fec:	str	r3, [r4, #4]
   12ff0:	beq	13108 <avl_remove@@Base+0x52c>
   12ff4:	ldr	r2, [r3, #12]
   12ff8:	ldr	r3, [r4, #8]
   12ffc:	ldr	r0, [r1, #4]
   13000:	cmp	r3, #0
   13004:	mvneq	r3, #0
   13008:	ldrne	r3, [r3, #12]
   1300c:	cmp	r3, r2
   13010:	movlt	r3, r2
   13014:	cmp	r0, #0
   13018:	add	r3, r3, #1
   1301c:	str	r3, [r4, #12]
   13020:	ldrne	r2, [r0, #12]
   13024:	mvneq	r2, #0
   13028:	cmp	r3, r2
   1302c:	movlt	r3, r2
   13030:	add	r3, r3, #1
   13034:	mov	r4, r1
   13038:	str	r3, [r1, #12]
   1303c:	b	12cfc <avl_remove@@Base+0x120>
   13040:	cmp	r2, #0
   13044:	bge	12dd4 <avl_remove@@Base+0x1f8>
   13048:	str	r4, [r1, #8]
   1304c:	str	r3, [r4, #4]
   13050:	b	12ff4 <avl_remove@@Base+0x418>
   13054:	mvn	r0, #0
   13058:	cmp	r3, r0
   1305c:	str	r4, [r2, #4]
   13060:	ldr	r1, [r4, #4]
   13064:	movlt	r3, r0
   13068:	add	r3, r3, #1
   1306c:	cmp	r1, #0
   13070:	str	r3, [r2, #12]
   13074:	str	ip, [r4, #8]
   13078:	moveq	r3, r1
   1307c:	beq	12f00 <avl_remove@@Base+0x324>
   13080:	ldr	r3, [r1, #12]
   13084:	cmp	r3, r0
   13088:	movlt	r3, r0
   1308c:	add	r3, r3, #1
   13090:	b	12f00 <avl_remove@@Base+0x324>
   13094:	str	r0, [r4, #12]
   13098:	b	12cfc <avl_remove@@Base+0x120>
   1309c:	ldr	r8, [r4, #8]
   130a0:	cmp	r8, #0
   130a4:	bne	12fa0 <avl_remove@@Base+0x3c4>
   130a8:	mov	r0, r7
   130ac:	bl	10db0 <free@plt>
   130b0:	mov	r0, r4
   130b4:	bl	10db0 <free@plt>
   130b8:	mov	r4, r8
   130bc:	b	12cfc <avl_remove@@Base+0x120>
   130c0:	cmp	r0, #0
   130c4:	mvnne	r2, #0
   130c8:	bne	12dc4 <avl_remove@@Base+0x1e8>
   130cc:	str	r4, [r1, #8]
   130d0:	mvn	r2, #0
   130d4:	str	r0, [r4, #4]
   130d8:	b	12ff8 <avl_remove@@Base+0x41c>
   130dc:	orr	r2, r2, r2, asr #31
   130e0:	add	r2, r2, #1
   130e4:	b	12e08 <avl_remove@@Base+0x22c>
   130e8:	mvn	r1, #0
   130ec:	cmp	r2, r1
   130f0:	movlt	r2, r1
   130f4:	add	r2, r2, #1
   130f8:	str	r4, [r3, #8]
   130fc:	str	r2, [r3, #12]
   13100:	str	r0, [r4, #4]
   13104:	b	12e38 <avl_remove@@Base+0x25c>
   13108:	mvn	r2, #0
   1310c:	b	12ff8 <avl_remove@@Base+0x41c>

00013110 <avl_preordem_impl@@Base>:
   13110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13114:	sub	sp, sp, #12
   13118:	subs	r3, r0, #0
   1311c:	str	r3, [sp, #4]
   13120:	beq	13284 <avl_preordem_impl@@Base+0x174>
   13124:	ldr	r4, [pc, #352]	; 1328c <avl_preordem_impl@@Base+0x17c>
   13128:	ldr	r5, [sp, #4]
   1312c:	mov	r0, r4
   13130:	ldr	r1, [r5]
   13134:	bl	10d8c <printf@plt>
   13138:	ldr	r3, [r5, #4]
   1313c:	cmp	r3, #0
   13140:	str	r3, [sp]
   13144:	beq	13270 <avl_preordem_impl@@Base+0x160>
   13148:	ldr	r5, [sp]
   1314c:	mov	r0, r4
   13150:	ldr	r1, [r5]
   13154:	bl	10d8c <printf@plt>
   13158:	ldr	r8, [r5, #4]
   1315c:	cmp	r8, #0
   13160:	beq	1325c <avl_preordem_impl@@Base+0x14c>
   13164:	ldr	r1, [r8]
   13168:	mov	r0, r4
   1316c:	bl	10d8c <printf@plt>
   13170:	ldr	r9, [r8, #4]
   13174:	cmp	r9, #0
   13178:	beq	13250 <avl_preordem_impl@@Base+0x140>
   1317c:	ldr	r1, [r9]
   13180:	mov	r0, r4
   13184:	bl	10d8c <printf@plt>
   13188:	ldr	sl, [r9, #4]
   1318c:	cmp	sl, #0
   13190:	beq	13244 <avl_preordem_impl@@Base+0x134>
   13194:	ldr	r1, [sl]
   13198:	mov	r0, r4
   1319c:	bl	10d8c <printf@plt>
   131a0:	ldr	fp, [sl, #4]
   131a4:	cmp	fp, #0
   131a8:	beq	13238 <avl_preordem_impl@@Base+0x128>
   131ac:	ldr	r1, [fp]
   131b0:	mov	r0, r4
   131b4:	bl	10d8c <printf@plt>
   131b8:	ldr	r6, [fp, #4]
   131bc:	cmp	r6, #0
   131c0:	beq	1322c <avl_preordem_impl@@Base+0x11c>
   131c4:	ldr	r1, [r6]
   131c8:	mov	r0, r4
   131cc:	bl	10d8c <printf@plt>
   131d0:	ldr	r5, [r6, #4]
   131d4:	cmp	r5, #0
   131d8:	beq	13220 <avl_preordem_impl@@Base+0x110>
   131dc:	ldr	r1, [r5]
   131e0:	mov	r0, r4
   131e4:	bl	10d8c <printf@plt>
   131e8:	ldr	r7, [r5, #4]
   131ec:	cmp	r7, #0
   131f0:	beq	13214 <avl_preordem_impl@@Base+0x104>
   131f4:	ldr	r1, [r7]
   131f8:	mov	r0, r4
   131fc:	bl	10d8c <printf@plt>
   13200:	ldr	r0, [r7, #4]
   13204:	bl	13110 <avl_preordem_impl@@Base>
   13208:	ldr	r7, [r7, #8]
   1320c:	cmp	r7, #0
   13210:	bne	131f4 <avl_preordem_impl@@Base+0xe4>
   13214:	ldr	r5, [r5, #8]
   13218:	cmp	r5, #0
   1321c:	bne	131dc <avl_preordem_impl@@Base+0xcc>
   13220:	ldr	r6, [r6, #8]
   13224:	cmp	r6, #0
   13228:	bne	131c4 <avl_preordem_impl@@Base+0xb4>
   1322c:	ldr	fp, [fp, #8]
   13230:	cmp	fp, #0
   13234:	bne	131ac <avl_preordem_impl@@Base+0x9c>
   13238:	ldr	sl, [sl, #8]
   1323c:	cmp	sl, #0
   13240:	bne	13194 <avl_preordem_impl@@Base+0x84>
   13244:	ldr	r9, [r9, #8]
   13248:	cmp	r9, #0
   1324c:	bne	1317c <avl_preordem_impl@@Base+0x6c>
   13250:	ldr	r8, [r8, #8]
   13254:	cmp	r8, #0
   13258:	bne	13164 <avl_preordem_impl@@Base+0x54>
   1325c:	ldr	r3, [sp]
   13260:	ldr	r3, [r3, #8]
   13264:	cmp	r3, #0
   13268:	str	r3, [sp]
   1326c:	bne	13148 <avl_preordem_impl@@Base+0x38>
   13270:	ldr	r3, [sp, #4]
   13274:	ldr	r3, [r3, #8]
   13278:	cmp	r3, #0
   1327c:	str	r3, [sp, #4]
   13280:	bne	13128 <avl_preordem_impl@@Base+0x18>
   13284:	add	sp, sp, #12
   13288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1328c:	andeq	r3, r1, r0, asr ip

00013290 <avl_imprime@@Base>:
   13290:	cmp	r0, #0
   13294:	bxeq	lr
   13298:	push	{r4, r5, r6, lr}
   1329c:	ldr	r4, [r0]
   132a0:	cmp	r4, #0
   132a4:	ldrne	r5, [pc, #44]	; 132d8 <avl_imprime@@Base+0x48>
   132a8:	beq	132cc <avl_imprime@@Base+0x3c>
   132ac:	ldr	r1, [r4]
   132b0:	mov	r0, r5
   132b4:	bl	10d8c <printf@plt>
   132b8:	ldr	r0, [r4, #4]
   132bc:	bl	13110 <avl_preordem_impl@@Base>
   132c0:	ldr	r4, [r4, #8]
   132c4:	cmp	r4, #0
   132c8:	bne	132ac <avl_imprime@@Base+0x1c>
   132cc:	mov	r0, #10
   132d0:	pop	{r4, r5, r6, lr}
   132d4:	b	10e28 <putchar@plt>
   132d8:	andeq	r3, r1, r0, asr ip

000132dc <tabela_nova@@Base>:
   132dc:	cmp	r1, #0
   132e0:	cmpne	r0, #0
   132e4:	push	{r4, r5, r6, r7, r8, lr}
   132e8:	ble	13330 <tabela_nova@@Base+0x54>
   132ec:	mov	r5, r0
   132f0:	mov	r0, #12
   132f4:	mov	r6, r1
   132f8:	bl	10dec <malloc@plt>
   132fc:	subs	r4, r0, #0
   13300:	beq	13330 <tabela_nova@@Base+0x54>
   13304:	mov	r1, #4
   13308:	mov	r0, r5
   1330c:	bl	10d68 <calloc@plt>
   13310:	cmp	r0, #0
   13314:	mov	r7, r0
   13318:	str	r0, [r4, #4]
   1331c:	strne	r5, [r4, #8]
   13320:	strne	r6, [r4]
   13324:	beq	1333c <tabela_nova@@Base+0x60>
   13328:	mov	r0, r4
   1332c:	pop	{r4, r5, r6, r7, r8, pc}
   13330:	mov	r4, #0
   13334:	mov	r0, r4
   13338:	pop	{r4, r5, r6, r7, r8, pc}
   1333c:	mov	r0, r4
   13340:	bl	10db0 <free@plt>
   13344:	mov	r4, r7
   13348:	b	13328 <tabela_nova@@Base+0x4c>

0001334c <tabela_apaga@@Base>:
   1334c:	push	{r4, r5, r6, r7, r8, lr}
   13350:	subs	r7, r0, #0
   13354:	popeq	{r4, r5, r6, r7, r8, pc}
   13358:	ldmib	r7, {r0, r3}
   1335c:	cmp	r3, #0
   13360:	ble	1339c <tabela_apaga@@Base+0x50>
   13364:	mov	r6, #0
   13368:	ldr	r4, [r0, r6, lsl #2]
   1336c:	cmp	r4, #0
   13370:	beq	13390 <tabela_apaga@@Base+0x44>
   13374:	ldm	r4, {r0, r5}
   13378:	bl	10db0 <free@plt>
   1337c:	mov	r0, r4
   13380:	bl	10db0 <free@plt>
   13384:	subs	r4, r5, #0
   13388:	bne	13374 <tabela_apaga@@Base+0x28>
   1338c:	ldmib	r7, {r0, r3}
   13390:	add	r6, r6, #1
   13394:	cmp	r6, r3
   13398:	blt	13368 <tabela_apaga@@Base+0x1c>
   1339c:	bl	10db0 <free@plt>
   133a0:	mov	r0, r7
   133a4:	pop	{r4, r5, r6, r7, r8, lr}
   133a8:	b	10db0 <free@plt>

000133ac <tabela_adiciona@@Base>:
   133ac:	cmp	r2, #0
   133b0:	cmpne	r1, #0
   133b4:	moveq	r3, #1
   133b8:	movne	r3, #0
   133bc:	cmp	r0, #0
   133c0:	orreq	r3, r3, #1
   133c4:	cmp	r3, #0
   133c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   133cc:	bne	13490 <tabela_adiciona@@Base+0xe4>
   133d0:	mov	r6, r1
   133d4:	mov	r4, r0
   133d8:	ldr	r3, [r0]
   133dc:	ldr	r1, [r0, #8]
   133e0:	mov	r0, r6
   133e4:	mov	r8, r2
   133e8:	blx	r3
   133ec:	ldr	sl, [r4, #4]
   133f0:	ldr	r4, [sl, r0, lsl #2]
   133f4:	mov	r9, r0
   133f8:	cmp	r4, #0
   133fc:	bne	13410 <tabela_adiciona@@Base+0x64>
   13400:	b	1343c <tabela_adiciona@@Base+0x90>
   13404:	ldr	r4, [r4, #4]
   13408:	cmp	r4, #0
   1340c:	beq	1343c <tabela_adiciona@@Base+0x90>
   13410:	ldr	r5, [r4]
   13414:	mov	r1, r6
   13418:	mov	r0, r5
   1341c:	bl	10d80 <strcmp@plt>
   13420:	subs	r7, r0, #0
   13424:	bne	13404 <tabela_adiciona@@Base+0x58>
   13428:	mov	r1, r8
   1342c:	add	r0, r5, #50	; 0x32
   13430:	bl	10dd4 <strcpy@plt>
   13434:	mov	r0, r7
   13438:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1343c:	mov	r0, #8
   13440:	bl	10dec <malloc@plt>
   13444:	subs	r4, r0, #0
   13448:	beq	13490 <tabela_adiciona@@Base+0xe4>
   1344c:	mov	r0, #150	; 0x96
   13450:	bl	10dec <malloc@plt>
   13454:	cmp	r0, #0
   13458:	mov	r5, r0
   1345c:	str	r0, [r4]
   13460:	beq	13490 <tabela_adiciona@@Base+0xe4>
   13464:	mov	r1, r6
   13468:	bl	10dd4 <strcpy@plt>
   1346c:	mov	r1, r8
   13470:	add	r0, r5, #50	; 0x32
   13474:	bl	10dd4 <strcpy@plt>
   13478:	ldr	r3, [sl, r9, lsl #2]
   1347c:	mov	r7, #0
   13480:	str	r3, [r4, #4]
   13484:	mov	r0, r7
   13488:	str	r4, [sl, r9, lsl #2]
   1348c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13490:	mvn	r7, #1
   13494:	b	13434 <tabela_adiciona@@Base+0x88>

00013498 <tabela_remove@@Base>:
   13498:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1349c:	subs	r4, r0, #0
   134a0:	beq	1352c <tabela_remove@@Base+0x94>
   134a4:	mov	r6, r1
   134a8:	ldr	r3, [r4]
   134ac:	ldr	r1, [r4, #8]
   134b0:	mov	r0, r6
   134b4:	blx	r3
   134b8:	ldr	sl, [r4, #4]
   134bc:	ldr	r4, [sl, r0, lsl #2]
   134c0:	mov	r9, r0
   134c4:	cmp	r4, #0
   134c8:	beq	13520 <tabela_remove@@Base+0x88>
   134cc:	mov	r8, #0
   134d0:	b	134e0 <tabela_remove@@Base+0x48>
   134d4:	mov	r8, r4
   134d8:	subs	r4, r3, #0
   134dc:	beq	13520 <tabela_remove@@Base+0x88>
   134e0:	ldr	r5, [r4]
   134e4:	mov	r1, r6
   134e8:	mov	r0, r5
   134ec:	bl	10d80 <strcmp@plt>
   134f0:	ldr	r3, [r4, #4]
   134f4:	subs	r7, r0, #0
   134f8:	bne	134d4 <tabela_remove@@Base+0x3c>
   134fc:	cmp	r8, #0
   13500:	strne	r3, [r8, #4]
   13504:	streq	r3, [sl, r9, lsl #2]
   13508:	mov	r0, r5
   1350c:	bl	10db0 <free@plt>
   13510:	mov	r0, r4
   13514:	bl	10db0 <free@plt>
   13518:	mov	r0, r7
   1351c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13520:	mvn	r7, #2
   13524:	mov	r0, r7
   13528:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1352c:	mvn	r7, #1
   13530:	b	13524 <tabela_remove@@Base+0x8c>

00013534 <tabela_existe@@Base>:
   13534:	cmp	r0, #0
   13538:	cmpne	r1, #0
   1353c:	beq	135ac <tabela_existe@@Base+0x78>
   13540:	push	{r4, r5, r6, lr}
   13544:	mov	r6, r1
   13548:	mov	r4, r0
   1354c:	ldr	r3, [r0]
   13550:	ldr	r1, [r0, #8]
   13554:	mov	r0, r6
   13558:	blx	r3
   1355c:	ldr	r3, [r4, #4]
   13560:	ldr	r4, [r3, r0, lsl #2]
   13564:	cmp	r4, #0
   13568:	bne	1357c <tabela_existe@@Base+0x48>
   1356c:	b	135a4 <tabela_existe@@Base+0x70>
   13570:	ldr	r4, [r4, #4]
   13574:	cmp	r4, #0
   13578:	beq	135a4 <tabela_existe@@Base+0x70>
   1357c:	ldr	r5, [r4]
   13580:	mov	r1, r6
   13584:	mov	r0, r5
   13588:	bl	10d80 <strcmp@plt>
   1358c:	cmp	r0, #0
   13590:	bne	13570 <tabela_existe@@Base+0x3c>
   13594:	cmn	r5, #50	; 0x32
   13598:	mvneq	r0, #2
   1359c:	movne	r0, #1
   135a0:	pop	{r4, r5, r6, pc}
   135a4:	mvn	r0, #2
   135a8:	pop	{r4, r5, r6, pc}
   135ac:	mvn	r0, #1
   135b0:	bx	lr

000135b4 <tabela_valor@@Base>:
   135b4:	push	{r4, r5, r6, lr}
   135b8:	subs	r4, r0, #0
   135bc:	beq	13614 <tabela_valor@@Base+0x60>
   135c0:	mov	r6, r1
   135c4:	ldr	r3, [r4]
   135c8:	ldr	r1, [r4, #8]
   135cc:	mov	r0, r6
   135d0:	blx	r3
   135d4:	ldr	r3, [r4, #4]
   135d8:	ldr	r4, [r3, r0, lsl #2]
   135dc:	cmp	r4, #0
   135e0:	bne	135f4 <tabela_valor@@Base+0x40>
   135e4:	b	13614 <tabela_valor@@Base+0x60>
   135e8:	ldr	r4, [r4, #4]
   135ec:	cmp	r4, #0
   135f0:	beq	13614 <tabela_valor@@Base+0x60>
   135f4:	ldr	r5, [r4]
   135f8:	mov	r1, r6
   135fc:	mov	r0, r5
   13600:	bl	10d80 <strcmp@plt>
   13604:	cmp	r0, #0
   13608:	bne	135e8 <tabela_valor@@Base+0x34>
   1360c:	add	r0, r5, #50	; 0x32
   13610:	pop	{r4, r5, r6, pc}
   13614:	mov	r0, #0
   13618:	pop	{r4, r5, r6, pc}

0001361c <tabela_esvazia@@Base>:
   1361c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13620:	subs	r8, r0, #0
   13624:	beq	13690 <tabela_esvazia@@Base+0x74>
   13628:	ldr	r1, [r8, #8]
   1362c:	cmp	r1, #0
   13630:	ble	13688 <tabela_esvazia@@Base+0x6c>
   13634:	mov	r6, #0
   13638:	ldr	r3, [r8, #4]
   1363c:	mov	r9, r6
   13640:	ldr	r4, [r3, r6, lsl #2]
   13644:	lsl	r7, r6, #2
   13648:	cmp	r4, #0
   1364c:	add	r2, r3, r7
   13650:	beq	13678 <tabela_esvazia@@Base+0x5c>
   13654:	ldm	r4, {r0, r5}
   13658:	bl	10db0 <free@plt>
   1365c:	mov	r0, r4
   13660:	bl	10db0 <free@plt>
   13664:	subs	r4, r5, #0
   13668:	bne	13654 <tabela_esvazia@@Base+0x38>
   1366c:	ldr	r3, [r8, #4]
   13670:	ldr	r1, [r8, #8]
   13674:	add	r2, r3, r7
   13678:	add	r6, r6, #1
   1367c:	cmp	r6, r1
   13680:	str	r9, [r2]
   13684:	blt	13640 <tabela_esvazia@@Base+0x24>
   13688:	mov	r0, #0
   1368c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13690:	mvn	r0, #1
   13694:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00013698 <tabela_numelementos@@Base>:
   13698:	cmp	r0, #0
   1369c:	beq	136e8 <tabela_numelementos@@Base+0x50>
   136a0:	ldr	r1, [r0, #8]
   136a4:	cmp	r1, #0
   136a8:	ble	136e0 <tabela_numelementos@@Base+0x48>
   136ac:	ldr	r2, [r0, #4]
   136b0:	mov	r0, #0
   136b4:	add	r1, r2, r1, lsl #2
   136b8:	ldr	r3, [r2], #4
   136bc:	cmp	r3, #0
   136c0:	beq	136d4 <tabela_numelementos@@Base+0x3c>
   136c4:	ldr	r3, [r3, #4]
   136c8:	add	r0, r0, #1
   136cc:	cmp	r3, #0
   136d0:	bne	136c4 <tabela_numelementos@@Base+0x2c>
   136d4:	cmp	r1, r2
   136d8:	bne	136b8 <tabela_numelementos@@Base+0x20>
   136dc:	bx	lr
   136e0:	mov	r0, #0
   136e4:	bx	lr
   136e8:	mvn	r0, #1
   136ec:	bx	lr

000136f0 <tabela_elementos@@Base>:
   136f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136f4:	subs	r4, r0, #0
   136f8:	beq	137b8 <tabela_elementos@@Base+0xc8>
   136fc:	ldr	ip, [r4, #8]
   13700:	cmp	ip, #0
   13704:	ble	137cc <tabela_elementos@@Base+0xdc>
   13708:	ldr	r8, [r4, #4]
   1370c:	mov	r0, #0
   13710:	add	ip, r8, ip, lsl #2
   13714:	mov	r7, r8
   13718:	mov	r2, r8
   1371c:	ldr	r3, [r2], #4
   13720:	cmp	r3, #0
   13724:	beq	13738 <tabela_elementos@@Base+0x48>
   13728:	ldr	r3, [r3, #4]
   1372c:	add	r0, r0, #1
   13730:	cmp	r3, #0
   13734:	bne	13728 <tabela_elementos@@Base+0x38>
   13738:	cmp	r2, ip
   1373c:	bne	1371c <tabela_elementos@@Base+0x2c>
   13740:	cmp	r0, #0
   13744:	str	r0, [r1]
   13748:	beq	137dc <tabela_elementos@@Base+0xec>
   1374c:	mov	r6, #150	; 0x96
   13750:	mul	r0, r6, r0
   13754:	bl	10dec <malloc@plt>
   13758:	subs	r9, r0, #0
   1375c:	beq	137dc <tabela_elementos@@Base+0xec>
   13760:	ldr	r3, [r4, #8]
   13764:	cmp	r3, #0
   13768:	ble	137b0 <tabela_elementos@@Base+0xc0>
   1376c:	add	r8, r8, r3, lsl #2
   13770:	mov	r5, #0
   13774:	ldr	r4, [r7], #4
   13778:	cmp	r4, #0
   1377c:	beq	137a8 <tabela_elementos@@Base+0xb8>
   13780:	mla	r3, r6, r5, r9
   13784:	ldr	r1, [r4]
   13788:	mov	r0, r3
   1378c:	mov	r2, r6
   13790:	bl	10dbc <memcpy@plt>
   13794:	ldr	r4, [r4, #4]
   13798:	add	r5, r5, #1
   1379c:	cmp	r4, #0
   137a0:	add	r3, r0, #150	; 0x96
   137a4:	bne	13784 <tabela_elementos@@Base+0x94>
   137a8:	cmp	r8, r7
   137ac:	bne	13774 <tabela_elementos@@Base+0x84>
   137b0:	mov	r0, r9
   137b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137b8:	mvn	r3, #1
   137bc:	mov	r9, r4
   137c0:	str	r3, [r1]
   137c4:	mov	r0, r9
   137c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137cc:	mov	r3, #0
   137d0:	mov	r9, r3
   137d4:	str	r3, [r1]
   137d8:	b	137b0 <tabela_elementos@@Base+0xc0>
   137dc:	mov	r9, #0
   137e0:	b	137b0 <tabela_elementos@@Base+0xc0>

000137e4 <hash_krm@@Base>:
   137e4:	push	{r4, lr}
   137e8:	ldrb	r3, [r0]
   137ec:	cmp	r3, #0
   137f0:	beq	13818 <hash_krm@@Base+0x34>
   137f4:	mov	r2, r0
   137f8:	mov	r0, #7
   137fc:	add	r0, r0, r3
   13800:	ldrb	r3, [r2, #1]!
   13804:	cmp	r3, #0
   13808:	bne	137fc <hash_krm@@Base+0x18>
   1380c:	bl	13b38 <mostraTabela@@Base+0x2dc>
   13810:	mov	r0, r1
   13814:	pop	{r4, pc}
   13818:	mov	r0, #7
   1381c:	b	1380c <hash_krm@@Base+0x28>

00013820 <hash_djbm@@Base>:
   13820:	push	{r4, lr}
   13824:	ldrb	r2, [r0]
   13828:	ldr	r3, [pc, #40]	; 13858 <hash_djbm@@Base+0x38>
   1382c:	cmp	r2, #0
   13830:	beq	13848 <hash_djbm@@Base+0x28>
   13834:	rsb	r3, r3, r3, lsl #5
   13838:	eor	r3, r3, r2
   1383c:	ldrb	r2, [r0, #1]!
   13840:	cmp	r2, #0
   13844:	bne	13834 <hash_djbm@@Base+0x14>
   13848:	mov	r0, r3
   1384c:	bl	13b38 <mostraTabela@@Base+0x2dc>
   13850:	mov	r0, r1
   13854:	pop	{r4, pc}
   13858:	andeq	r1, r0, r3, ror #9

0001385c <mostraTabela@@Base>:
   1385c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13860:	subs	r7, r0, #0
   13864:	mvneq	r1, #1
   13868:	beq	138a8 <mostraTabela@@Base+0x4c>
   1386c:	ldr	r0, [r7, #8]
   13870:	cmp	r0, #0
   13874:	ble	13938 <mostraTabela@@Base+0xdc>
   13878:	ldr	r2, [r7, #4]
   1387c:	mov	r1, #0
   13880:	add	r0, r2, r0, lsl #2
   13884:	ldr	r3, [r2], #4
   13888:	cmp	r3, #0
   1388c:	beq	138a0 <mostraTabela@@Base+0x44>
   13890:	ldr	r3, [r3, #4]
   13894:	add	r1, r1, #1
   13898:	cmp	r3, #0
   1389c:	bne	13890 <mostraTabela@@Base+0x34>
   138a0:	cmp	r0, r2
   138a4:	bne	13884 <mostraTabela@@Base+0x28>
   138a8:	ldr	r0, [pc, #144]	; 13940 <mostraTabela@@Base+0xe4>
   138ac:	bl	10d8c <printf@plt>
   138b0:	ldr	r2, [r7, #8]
   138b4:	cmp	r2, #0
   138b8:	ble	1392c <mostraTabela@@Base+0xd0>
   138bc:	ldr	r9, [pc, #128]	; 13944 <mostraTabela@@Base+0xe8>
   138c0:	ldr	r5, [pc, #128]	; 13948 <mostraTabela@@Base+0xec>
   138c4:	mov	r6, #0
   138c8:	mov	r8, #10
   138cc:	ldr	r3, [r7, #4]
   138d0:	ldr	r3, [r3, r6, lsl #2]
   138d4:	cmp	r3, #0
   138d8:	beq	13920 <mostraTabela@@Base+0xc4>
   138dc:	mov	r1, r6
   138e0:	mov	r0, r9
   138e4:	bl	10d8c <printf@plt>
   138e8:	ldr	r3, [r7, #4]
   138ec:	ldr	r4, [r3, r6, lsl #2]
   138f0:	cmp	r4, #0
   138f4:	beq	13914 <mostraTabela@@Base+0xb8>
   138f8:	ldr	r1, [r4]
   138fc:	mov	r0, r5
   13900:	add	r2, r1, #50	; 0x32
   13904:	bl	10d8c <printf@plt>
   13908:	ldr	r4, [r4, #4]
   1390c:	cmp	r4, #0
   13910:	bne	138f8 <mostraTabela@@Base+0x9c>
   13914:	mov	r0, r8
   13918:	bl	10e28 <putchar@plt>
   1391c:	ldr	r2, [r7, #8]
   13920:	add	r6, r6, #1
   13924:	cmp	r6, r2
   13928:	blt	138cc <mostraTabela@@Base+0x70>
   1392c:	mov	r0, #10
   13930:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13934:	b	10e28 <putchar@plt>
   13938:	mov	r1, #0
   1393c:	b	138a8 <mostraTabela@@Base+0x4c>
   13940:	andeq	r3, r1, r4, asr ip
   13944:	andeq	r3, r1, r8, ror ip
   13948:	andeq	r3, r1, r0, lsl #25
   1394c:	subs	r2, r1, #1
   13950:	bxeq	lr
   13954:	bcc	13b2c <mostraTabela@@Base+0x2d0>
   13958:	cmp	r0, r1
   1395c:	bls	13b10 <mostraTabela@@Base+0x2b4>
   13960:	tst	r1, r2
   13964:	beq	13b1c <mostraTabela@@Base+0x2c0>
   13968:	clz	r3, r0
   1396c:	clz	r2, r1
   13970:	sub	r3, r2, r3
   13974:	rsbs	r3, r3, #31
   13978:	addne	r3, r3, r3, lsl #1
   1397c:	mov	r2, #0
   13980:	addne	pc, pc, r3, lsl #2
   13984:	nop			; (mov r0, r0)
   13988:	cmp	r0, r1, lsl #31
   1398c:	adc	r2, r2, r2
   13990:	subcs	r0, r0, r1, lsl #31
   13994:	cmp	r0, r1, lsl #30
   13998:	adc	r2, r2, r2
   1399c:	subcs	r0, r0, r1, lsl #30
   139a0:	cmp	r0, r1, lsl #29
   139a4:	adc	r2, r2, r2
   139a8:	subcs	r0, r0, r1, lsl #29
   139ac:	cmp	r0, r1, lsl #28
   139b0:	adc	r2, r2, r2
   139b4:	subcs	r0, r0, r1, lsl #28
   139b8:	cmp	r0, r1, lsl #27
   139bc:	adc	r2, r2, r2
   139c0:	subcs	r0, r0, r1, lsl #27
   139c4:	cmp	r0, r1, lsl #26
   139c8:	adc	r2, r2, r2
   139cc:	subcs	r0, r0, r1, lsl #26
   139d0:	cmp	r0, r1, lsl #25
   139d4:	adc	r2, r2, r2
   139d8:	subcs	r0, r0, r1, lsl #25
   139dc:	cmp	r0, r1, lsl #24
   139e0:	adc	r2, r2, r2
   139e4:	subcs	r0, r0, r1, lsl #24
   139e8:	cmp	r0, r1, lsl #23
   139ec:	adc	r2, r2, r2
   139f0:	subcs	r0, r0, r1, lsl #23
   139f4:	cmp	r0, r1, lsl #22
   139f8:	adc	r2, r2, r2
   139fc:	subcs	r0, r0, r1, lsl #22
   13a00:	cmp	r0, r1, lsl #21
   13a04:	adc	r2, r2, r2
   13a08:	subcs	r0, r0, r1, lsl #21
   13a0c:	cmp	r0, r1, lsl #20
   13a10:	adc	r2, r2, r2
   13a14:	subcs	r0, r0, r1, lsl #20
   13a18:	cmp	r0, r1, lsl #19
   13a1c:	adc	r2, r2, r2
   13a20:	subcs	r0, r0, r1, lsl #19
   13a24:	cmp	r0, r1, lsl #18
   13a28:	adc	r2, r2, r2
   13a2c:	subcs	r0, r0, r1, lsl #18
   13a30:	cmp	r0, r1, lsl #17
   13a34:	adc	r2, r2, r2
   13a38:	subcs	r0, r0, r1, lsl #17
   13a3c:	cmp	r0, r1, lsl #16
   13a40:	adc	r2, r2, r2
   13a44:	subcs	r0, r0, r1, lsl #16
   13a48:	cmp	r0, r1, lsl #15
   13a4c:	adc	r2, r2, r2
   13a50:	subcs	r0, r0, r1, lsl #15
   13a54:	cmp	r0, r1, lsl #14
   13a58:	adc	r2, r2, r2
   13a5c:	subcs	r0, r0, r1, lsl #14
   13a60:	cmp	r0, r1, lsl #13
   13a64:	adc	r2, r2, r2
   13a68:	subcs	r0, r0, r1, lsl #13
   13a6c:	cmp	r0, r1, lsl #12
   13a70:	adc	r2, r2, r2
   13a74:	subcs	r0, r0, r1, lsl #12
   13a78:	cmp	r0, r1, lsl #11
   13a7c:	adc	r2, r2, r2
   13a80:	subcs	r0, r0, r1, lsl #11
   13a84:	cmp	r0, r1, lsl #10
   13a88:	adc	r2, r2, r2
   13a8c:	subcs	r0, r0, r1, lsl #10
   13a90:	cmp	r0, r1, lsl #9
   13a94:	adc	r2, r2, r2
   13a98:	subcs	r0, r0, r1, lsl #9
   13a9c:	cmp	r0, r1, lsl #8
   13aa0:	adc	r2, r2, r2
   13aa4:	subcs	r0, r0, r1, lsl #8
   13aa8:	cmp	r0, r1, lsl #7
   13aac:	adc	r2, r2, r2
   13ab0:	subcs	r0, r0, r1, lsl #7
   13ab4:	cmp	r0, r1, lsl #6
   13ab8:	adc	r2, r2, r2
   13abc:	subcs	r0, r0, r1, lsl #6
   13ac0:	cmp	r0, r1, lsl #5
   13ac4:	adc	r2, r2, r2
   13ac8:	subcs	r0, r0, r1, lsl #5
   13acc:	cmp	r0, r1, lsl #4
   13ad0:	adc	r2, r2, r2
   13ad4:	subcs	r0, r0, r1, lsl #4
   13ad8:	cmp	r0, r1, lsl #3
   13adc:	adc	r2, r2, r2
   13ae0:	subcs	r0, r0, r1, lsl #3
   13ae4:	cmp	r0, r1, lsl #2
   13ae8:	adc	r2, r2, r2
   13aec:	subcs	r0, r0, r1, lsl #2
   13af0:	cmp	r0, r1, lsl #1
   13af4:	adc	r2, r2, r2
   13af8:	subcs	r0, r0, r1, lsl #1
   13afc:	cmp	r0, r1
   13b00:	adc	r2, r2, r2
   13b04:	subcs	r0, r0, r1
   13b08:	mov	r0, r2
   13b0c:	bx	lr
   13b10:	moveq	r0, #1
   13b14:	movne	r0, #0
   13b18:	bx	lr
   13b1c:	clz	r2, r1
   13b20:	rsb	r2, r2, #31
   13b24:	lsr	r0, r0, r2
   13b28:	bx	lr
   13b2c:	cmp	r0, #0
   13b30:	mvnne	r0, #0
   13b34:	b	13b58 <mostraTabela@@Base+0x2fc>
   13b38:	cmp	r1, #0
   13b3c:	beq	13b2c <mostraTabela@@Base+0x2d0>
   13b40:	push	{r0, r1, lr}
   13b44:	bl	1394c <mostraTabela@@Base+0xf0>
   13b48:	pop	{r1, r2, lr}
   13b4c:	mul	r3, r2, r0
   13b50:	sub	r1, r1, r3
   13b54:	bx	lr
   13b58:	push	{r1, lr}
   13b5c:	mov	r0, #8
   13b60:	bl	10d74 <raise@plt>
   13b64:	pop	{r1, pc}

00013b68 <__libc_csu_init@@Base>:
   13b68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b6c:	mov	r7, r0
   13b70:	ldr	r6, [pc, #72]	; 13bc0 <__libc_csu_init@@Base+0x58>
   13b74:	ldr	r5, [pc, #72]	; 13bc4 <__libc_csu_init@@Base+0x5c>
   13b78:	add	r6, pc, r6
   13b7c:	add	r5, pc, r5
   13b80:	sub	r6, r6, r5
   13b84:	mov	r8, r1
   13b88:	mov	r9, r2
   13b8c:	bl	10d48 <calloc@plt-0x20>
   13b90:	asrs	r6, r6, #2
   13b94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b98:	mov	r4, #0
   13b9c:	add	r4, r4, #1
   13ba0:	ldr	r3, [r5], #4
   13ba4:	mov	r2, r9
   13ba8:	mov	r1, r8
   13bac:	mov	r0, r7
   13bb0:	blx	r3
   13bb4:	cmp	r6, r4
   13bb8:	bne	13b9c <__libc_csu_init@@Base+0x34>
   13bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13bc0:	muleq	r1, r0, r3
   13bc4:	andeq	r0, r1, r8, lsl #7

00013bc8 <__libc_csu_fini@@Base>:
   13bc8:	bx	lr

Disassembly of section .fini:

00013bcc <.fini>:
   13bcc:	push	{r3, lr}
   13bd0:	pop	{r3, pc}
