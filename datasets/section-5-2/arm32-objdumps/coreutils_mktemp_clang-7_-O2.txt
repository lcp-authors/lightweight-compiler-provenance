
../repos/coreutils/src/mktemp:     file format elf32-littlearm


Disassembly of section .init:

00010e14 <.init>:
   10e14:	push	{r3, lr}
   10e18:	bl	110ec <__mempcpy_chk@plt+0x48>
   10e1c:	pop	{r3, pc}

Disassembly of section .plt:

00010e20 <calloc@plt-0x14>:
   10e20:	push	{lr}		; (str lr, [sp, #-4]!)
   10e24:	ldr	lr, [pc, #4]	; 10e30 <calloc@plt-0x4>
   10e28:	add	lr, pc, lr
   10e2c:	ldr	pc, [lr, #8]!
   10e30:	ldrdeq	r6, [r1], -r0

00010e34 <calloc@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #464]!	; 0x1d0

00010e40 <fputs_unlocked@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #456]!	; 0x1c8

00010e4c <raise@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #448]!	; 0x1c0

00010e58 <strcmp@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #440]!	; 0x1b8

00010e64 <fflush@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #432]!	; 0x1b0

00010e70 <free@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #424]!	; 0x1a8

00010e7c <clock_gettime@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #416]!	; 0x1a0

00010e88 <_exit@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #408]!	; 0x198

00010e94 <memcpy@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #400]!	; 0x190

00010ea0 <mbsinit@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #392]!	; 0x188

00010eac <memcmp@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #384]!	; 0x180

00010eb8 <dcgettext@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #376]!	; 0x178

00010ec4 <realloc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #368]!	; 0x170

00010ed0 <textdomain@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #360]!	; 0x168

00010edc <iswprint@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #352]!	; 0x160

00010ee8 <fwrite@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #344]!	; 0x158

00010ef4 <lseek64@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #336]!	; 0x150

00010f00 <__ctype_get_mb_cur_max@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #328]!	; 0x148

00010f0c <__fpending@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #320]!	; 0x140

00010f18 <mbrtowc@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #312]!	; 0x138

00010f24 <error@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #304]!	; 0x130

00010f30 <open64@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #296]!	; 0x128

00010f3c <getenv@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #288]!	; 0x120

00010f48 <puts@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #280]!	; 0x118

00010f54 <malloc@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #272]!	; 0x110

00010f60 <__libc_start_main@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #264]!	; 0x108

00010f6c <__freading@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #256]!	; 0x100

00010f78 <__gmon_start__@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #248]!	; 0xf8

00010f84 <getopt_long@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #240]!	; 0xf0

00010f90 <__ctype_b_loc@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #232]!	; 0xe8

00010f9c <exit@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #224]!	; 0xe0

00010fa8 <strlen@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #216]!	; 0xd8

00010fb4 <__errno_location@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #208]!	; 0xd0

00010fc0 <__cxa_atexit@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #90112	; 0x16000
   10fc8:	ldr	pc, [ip, #200]!	; 0xc8

00010fcc <mkdir@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #90112	; 0x16000
   10fd4:	ldr	pc, [ip, #192]!	; 0xc0

00010fd8 <memset@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #90112	; 0x16000
   10fe0:	ldr	pc, [ip, #184]!	; 0xb8

00010fe4 <__printf_chk@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #90112	; 0x16000
   10fec:	ldr	pc, [ip, #176]!	; 0xb0

00010ff0 <fileno@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #90112	; 0x16000
   10ff8:	ldr	pc, [ip, #168]!	; 0xa8

00010ffc <__fprintf_chk@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #90112	; 0x16000
   11004:	ldr	pc, [ip, #160]!	; 0xa0

00011008 <fclose@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #90112	; 0x16000
   11010:	ldr	pc, [ip, #152]!	; 0x98

00011014 <fseeko64@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #90112	; 0x16000
   1101c:	ldr	pc, [ip, #144]!	; 0x90

00011020 <setlocale@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #90112	; 0x16000
   11028:	ldr	pc, [ip, #136]!	; 0x88

0001102c <strrchr@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #90112	; 0x16000
   11034:	ldr	pc, [ip, #128]!	; 0x80

00011038 <nl_langinfo@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #90112	; 0x16000
   11040:	ldr	pc, [ip, #120]!	; 0x78

00011044 <remove@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #90112	; 0x16000
   1104c:	ldr	pc, [ip, #112]!	; 0x70

00011050 <bindtextdomain@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #90112	; 0x16000
   11058:	ldr	pc, [ip, #104]!	; 0x68

0001105c <getrandom@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #90112	; 0x16000
   11064:	ldr	pc, [ip, #96]!	; 0x60

00011068 <strncmp@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #90112	; 0x16000
   11070:	ldr	pc, [ip, #88]!	; 0x58

00011074 <abort@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #90112	; 0x16000
   1107c:	ldr	pc, [ip, #80]!	; 0x50

00011080 <close@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #90112	; 0x16000
   11088:	ldr	pc, [ip, #72]!	; 0x48

0001108c <__lxstat64@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #90112	; 0x16000
   11094:	ldr	pc, [ip, #64]!	; 0x40

00011098 <strspn@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #90112	; 0x16000
   110a0:	ldr	pc, [ip, #56]!	; 0x38

000110a4 <__mempcpy_chk@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #90112	; 0x16000
   110ac:	ldr	pc, [ip, #48]!	; 0x30

Disassembly of section .text:

000110b0 <.text>:
   110b0:	mov	fp, #0
   110b4:	mov	lr, #0
   110b8:	pop	{r1}		; (ldr r1, [sp], #4)
   110bc:	mov	r2, sp
   110c0:	push	{r2}		; (str r2, [sp, #-4]!)
   110c4:	push	{r0}		; (str r0, [sp, #-4]!)
   110c8:	ldr	ip, [pc, #16]	; 110e0 <__mempcpy_chk@plt+0x3c>
   110cc:	push	{ip}		; (str ip, [sp, #-4]!)
   110d0:	ldr	r0, [pc, #12]	; 110e4 <__mempcpy_chk@plt+0x40>
   110d4:	ldr	r3, [pc, #12]	; 110e8 <__mempcpy_chk@plt+0x44>
   110d8:	bl	10f60 <__libc_start_main@plt>
   110dc:	bl	11074 <abort@plt>
   110e0:			; <UNDEFINED> instruction: 0x000152b4
   110e4:	andeq	r1, r1, r0, lsl #9
   110e8:	andeq	r5, r1, r4, asr r2
   110ec:	ldr	r3, [pc, #20]	; 11108 <__mempcpy_chk@plt+0x64>
   110f0:	ldr	r2, [pc, #20]	; 1110c <__mempcpy_chk@plt+0x68>
   110f4:	add	r3, pc, r3
   110f8:	ldr	r2, [r3, r2]
   110fc:	cmp	r2, #0
   11100:	bxeq	lr
   11104:	b	10f78 <__gmon_start__@plt>
   11108:	andeq	r5, r1, r4, lsl #30
   1110c:	andeq	r0, r0, r0, ror #1
   11110:	ldr	r0, [pc, #24]	; 11130 <__mempcpy_chk@plt+0x8c>
   11114:	ldr	r3, [pc, #24]	; 11134 <__mempcpy_chk@plt+0x90>
   11118:	cmp	r3, r0
   1111c:	bxeq	lr
   11120:	ldr	r3, [pc, #16]	; 11138 <__mempcpy_chk@plt+0x94>
   11124:	cmp	r3, #0
   11128:	bxeq	lr
   1112c:	bx	r3
   11130:	andeq	r7, r2, r8, lsr r1
   11134:	andeq	r7, r2, r8, lsr r1
   11138:	andeq	r0, r0, r0
   1113c:	ldr	r0, [pc, #36]	; 11168 <__mempcpy_chk@plt+0xc4>
   11140:	ldr	r1, [pc, #36]	; 1116c <__mempcpy_chk@plt+0xc8>
   11144:	sub	r1, r1, r0
   11148:	asr	r1, r1, #2
   1114c:	add	r1, r1, r1, lsr #31
   11150:	asrs	r1, r1, #1
   11154:	bxeq	lr
   11158:	ldr	r3, [pc, #16]	; 11170 <__mempcpy_chk@plt+0xcc>
   1115c:	cmp	r3, #0
   11160:	bxeq	lr
   11164:	bx	r3
   11168:	andeq	r7, r2, r8, lsr r1
   1116c:	andeq	r7, r2, r8, lsr r1
   11170:	andeq	r0, r0, r0
   11174:	push	{r4, lr}
   11178:	ldr	r4, [pc, #24]	; 11198 <__mempcpy_chk@plt+0xf4>
   1117c:	ldrb	r3, [r4]
   11180:	cmp	r3, #0
   11184:	popne	{r4, pc}
   11188:	bl	11110 <__mempcpy_chk@plt+0x6c>
   1118c:	mov	r3, #1
   11190:	strb	r3, [r4]
   11194:	pop	{r4, pc}
   11198:	andeq	r7, r2, r4, asr r1
   1119c:	b	1113c <__mempcpy_chk@plt+0x98>
   111a0:	push	{fp, lr}
   111a4:	mov	fp, sp
   111a8:	sub	sp, sp, #56	; 0x38
   111ac:	mov	r4, r0
   111b0:	cmp	r0, #0
   111b4:	bne	1143c <__mempcpy_chk@plt+0x398>
   111b8:	movw	r1, #21251	; 0x5303
   111bc:	mov	r0, #0
   111c0:	mov	r2, #5
   111c4:	movt	r1, #1
   111c8:	bl	10eb8 <dcgettext@plt>
   111cc:	mov	r1, r0
   111d0:	movw	r0, #29024	; 0x7160
   111d4:	movt	r0, #2
   111d8:	ldr	r2, [r0]
   111dc:	mov	r0, #1
   111e0:	bl	10fe4 <__printf_chk@plt>
   111e4:	movw	r1, #21285	; 0x5325
   111e8:	mov	r0, #0
   111ec:	mov	r2, #5
   111f0:	movt	r1, #1
   111f4:	bl	10eb8 <dcgettext@plt>
   111f8:	movw	r7, #29004	; 0x714c
   111fc:	movt	r7, #2
   11200:	ldr	r1, [r7]
   11204:	bl	10e40 <fputs_unlocked@plt>
   11208:	movw	r1, #21496	; 0x53f8
   1120c:	mov	r0, #0
   11210:	mov	r2, #5
   11214:	movt	r1, #1
   11218:	bl	10eb8 <dcgettext@plt>
   1121c:	ldr	r1, [r7]
   11220:	bl	10e40 <fputs_unlocked@plt>
   11224:	ldr	r1, [r7]
   11228:	movw	r0, #23354	; 0x5b3a
   1122c:	movt	r0, #1
   11230:	bl	10e40 <fputs_unlocked@plt>
   11234:	movw	r1, #21570	; 0x5442
   11238:	mov	r0, #0
   1123c:	mov	r2, #5
   11240:	movt	r1, #1
   11244:	bl	10eb8 <dcgettext@plt>
   11248:	ldr	r1, [r7]
   1124c:	bl	10e40 <fputs_unlocked@plt>
   11250:	movw	r1, #21774	; 0x550e
   11254:	mov	r0, #0
   11258:	mov	r2, #5
   1125c:	movt	r1, #1
   11260:	bl	10eb8 <dcgettext@plt>
   11264:	ldr	r1, [r7]
   11268:	bl	10e40 <fputs_unlocked@plt>
   1126c:	movw	r1, #21930	; 0x55aa
   11270:	mov	r0, #0
   11274:	mov	r2, #5
   11278:	movt	r1, #1
   1127c:	bl	10eb8 <dcgettext@plt>
   11280:	ldr	r1, [r7]
   11284:	bl	10e40 <fputs_unlocked@plt>
   11288:	movw	r1, #22293	; 0x5715
   1128c:	mov	r0, #0
   11290:	mov	r2, #5
   11294:	movt	r1, #1
   11298:	bl	10eb8 <dcgettext@plt>
   1129c:	ldr	r1, [r7]
   112a0:	bl	10e40 <fputs_unlocked@plt>
   112a4:	movw	r1, #22518	; 0x57f6
   112a8:	mov	r0, #0
   112ac:	mov	r2, #5
   112b0:	movt	r1, #1
   112b4:	bl	10eb8 <dcgettext@plt>
   112b8:	ldr	r1, [r7]
   112bc:	bl	10e40 <fputs_unlocked@plt>
   112c0:	movw	r1, #22563	; 0x5823
   112c4:	mov	r0, #0
   112c8:	mov	r2, #5
   112cc:	movt	r1, #1
   112d0:	bl	10eb8 <dcgettext@plt>
   112d4:	ldr	r1, [r7]
   112d8:	bl	10e40 <fputs_unlocked@plt>
   112dc:	movw	r0, #23552	; 0x5c00
   112e0:	mov	r2, #48	; 0x30
   112e4:	mov	r6, sp
   112e8:	movw	r5, #22617	; 0x5859
   112ec:	movt	r0, #1
   112f0:	movt	r5, #1
   112f4:	add	r1, r0, #32
   112f8:	add	r3, r0, #16
   112fc:	vld1.64	{d18-d19}, [r0], r2
   11300:	vld1.64	{d16-d17}, [r1]
   11304:	vld1.64	{d20-d21}, [r3]
   11308:	add	r1, r6, #32
   1130c:	vldr	d22, [r0]
   11310:	add	r0, r6, #16
   11314:	vst1.64	{d16-d17}, [r1]
   11318:	movw	r1, #23045	; 0x5a05
   1131c:	vst1.64	{d20-d21}, [r0]
   11320:	mov	r0, r6
   11324:	vst1.64	{d18-d19}, [r0], r2
   11328:	movt	r1, #1
   1132c:	vstr	d22, [r0]
   11330:	mov	r0, r5
   11334:	bl	10e58 <strcmp@plt>
   11338:	cmp	r0, #0
   1133c:	ldrne	r1, [r6, #8]!
   11340:	cmpne	r1, #0
   11344:	bne	11330 <__mempcpy_chk@plt+0x28c>
   11348:	ldr	r6, [r6, #4]
   1134c:	movw	r1, #23140	; 0x5a64
   11350:	mov	r0, #0
   11354:	mov	r2, #5
   11358:	movt	r1, #1
   1135c:	bl	10eb8 <dcgettext@plt>
   11360:	movw	r2, #22656	; 0x5880
   11364:	movw	r3, #23163	; 0x5a7b
   11368:	mov	r1, r0
   1136c:	mov	r0, #1
   11370:	movt	r2, #1
   11374:	movt	r3, #1
   11378:	bl	10fe4 <__printf_chk@plt>
   1137c:	cmp	r6, #0
   11380:	mov	r0, #5
   11384:	mov	r1, #0
   11388:	moveq	r6, r5
   1138c:	bl	11020 <setlocale@plt>
   11390:	cmp	r0, #0
   11394:	beq	113cc <__mempcpy_chk@plt+0x328>
   11398:	movw	r1, #23203	; 0x5aa3
   1139c:	mov	r2, #3
   113a0:	movt	r1, #1
   113a4:	bl	11068 <strncmp@plt>
   113a8:	cmp	r0, #0
   113ac:	beq	113cc <__mempcpy_chk@plt+0x328>
   113b0:	movw	r1, #23207	; 0x5aa7
   113b4:	mov	r0, #0
   113b8:	mov	r2, #5
   113bc:	movt	r1, #1
   113c0:	bl	10eb8 <dcgettext@plt>
   113c4:	ldr	r1, [r7]
   113c8:	bl	10e40 <fputs_unlocked@plt>
   113cc:	movw	r1, #23278	; 0x5aee
   113d0:	mov	r0, #0
   113d4:	mov	r2, #5
   113d8:	movt	r1, #1
   113dc:	bl	10eb8 <dcgettext@plt>
   113e0:	movw	r2, #23163	; 0x5a7b
   113e4:	mov	r1, r0
   113e8:	mov	r0, #1
   113ec:	mov	r3, r5
   113f0:	movt	r2, #1
   113f4:	bl	10fe4 <__printf_chk@plt>
   113f8:	movw	r1, #23305	; 0x5b09
   113fc:	mov	r0, #0
   11400:	mov	r2, #5
   11404:	movt	r1, #1
   11408:	bl	10eb8 <dcgettext@plt>
   1140c:	movw	r3, #23355	; 0x5b3b
   11410:	mov	r1, r0
   11414:	movw	r0, #23073	; 0x5a21
   11418:	cmp	r6, r5
   1141c:	mov	r2, r6
   11420:	movt	r0, #1
   11424:	movt	r3, #1
   11428:	moveq	r3, r0
   1142c:	mov	r0, #1
   11430:	bl	10fe4 <__printf_chk@plt>
   11434:	mov	r0, r4
   11438:	bl	10f9c <exit@plt>
   1143c:	movw	r0, #29000	; 0x7148
   11440:	movw	r1, #21212	; 0x52dc
   11444:	mov	r2, #5
   11448:	movt	r0, #2
   1144c:	movt	r1, #1
   11450:	ldr	r5, [r0]
   11454:	mov	r0, #0
   11458:	bl	10eb8 <dcgettext@plt>
   1145c:	mov	r2, r0
   11460:	movw	r0, #29024	; 0x7160
   11464:	mov	r1, #1
   11468:	movt	r0, #2
   1146c:	ldr	r3, [r0]
   11470:	mov	r0, r5
   11474:	bl	10ffc <__fprintf_chk@plt>
   11478:	mov	r0, r4
   1147c:	bl	10f9c <exit@plt>
   11480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11484:	add	fp, sp, #28
   11488:	sub	sp, sp, #36	; 0x24
   1148c:	mov	r5, r0
   11490:	ldr	r0, [r1]
   11494:	mov	r4, r1
   11498:	bl	1206c <__mempcpy_chk@plt+0xfc8>
   1149c:	movw	r1, #23355	; 0x5b3b
   114a0:	mov	r0, #6
   114a4:	movt	r1, #1
   114a8:	bl	11020 <setlocale@plt>
   114ac:	movw	r6, #22660	; 0x5884
   114b0:	movw	r1, #22624	; 0x5860
   114b4:	movt	r6, #1
   114b8:	movt	r1, #1
   114bc:	mov	r0, r6
   114c0:	bl	11050 <bindtextdomain@plt>
   114c4:	mov	r0, r6
   114c8:	bl	10ed0 <textdomain@plt>
   114cc:	movw	r0, #7004	; 0x1b5c
   114d0:	movt	r0, #1
   114d4:	bl	152b8 <__mempcpy_chk@plt+0x4214>
   114d8:	mov	r0, #0
   114dc:	movw	r7, #22648	; 0x5878
   114e0:	movw	r6, #23424	; 0x5b80
   114e4:	mov	r1, #0
   114e8:	mov	r9, #0
   114ec:	mov	r8, #0
   114f0:	str	r0, [sp, #24]
   114f4:	mov	r0, #0
   114f8:	movt	r7, #1
   114fc:	movt	r6, #1
   11500:	str	r1, [sp, #20]
   11504:	str	r0, [sp, #16]
   11508:	mov	r0, #0
   1150c:	str	r0, [sp, #28]
   11510:	mov	r0, #0
   11514:	str	r0, [sp, #32]
   11518:	mov	r0, #0
   1151c:	b	11524 <__mempcpy_chk@plt+0x480>
   11520:	mov	r0, sl
   11524:	mov	sl, r0
   11528:	mov	r0, r5
   1152c:	mov	r1, r4
   11530:	mov	r2, r7
   11534:	mov	r3, r6
   11538:	str	r9, [sp]
   1153c:	bl	10f84 <getopt_long@plt>
   11540:	cmp	r0, #85	; 0x55
   11544:	ble	11638 <__mempcpy_chk@plt+0x594>
   11548:	sub	r1, r0, #86	; 0x56
   1154c:	cmp	r1, #31
   11550:	bhi	11614 <__mempcpy_chk@plt+0x570>
   11554:	add	r2, pc, #4
   11558:	mov	r0, #1
   1155c:	ldr	pc, [r2, r1, lsl #2]
   11560:	andeq	r1, r1, r4, asr #20
   11564:	andeq	r1, r1, r8, lsr #21
   11568:	andeq	r1, r1, r8, lsr #21
   1156c:	andeq	r1, r1, r8, lsr #21
   11570:	andeq	r1, r1, r8, lsr #21
   11574:	andeq	r1, r1, r8, lsr #21
   11578:	andeq	r1, r1, r8, lsr #21
   1157c:	andeq	r1, r1, r8, lsr #21
   11580:	andeq	r1, r1, r8, lsr #21
   11584:	andeq	r1, r1, r8, lsr #21
   11588:	andeq	r1, r1, r8, lsr #21
   1158c:	andeq	r1, r1, r8, lsr #21
   11590:	andeq	r1, r1, r8, lsr #21
   11594:	andeq	r1, r1, r8, lsr #21
   11598:	andeq	r1, r1, r0, ror #11
   1159c:	andeq	r1, r1, r8, lsr #21
   115a0:	andeq	r1, r1, r8, lsr #21
   115a4:	andeq	r1, r1, r8, lsr #21
   115a8:	andeq	r1, r1, r8, lsr #21
   115ac:	andeq	r1, r1, r8, lsr #21
   115b0:	andeq	r1, r1, r8, lsr #21
   115b4:	andeq	r1, r1, r8, lsr #21
   115b8:	andeq	r1, r1, r8, lsr #21
   115bc:	andeq	r1, r1, r8, lsr #21
   115c0:	andeq	r1, r1, r8, lsr #21
   115c4:	andeq	r1, r1, r8, lsr #21
   115c8:	strdeq	r1, [r1], -r8
   115cc:	andeq	r1, r1, r4, lsr #10
   115d0:	andeq	r1, r1, r8, lsr #21
   115d4:	andeq	r1, r1, r8, lsr #21
   115d8:	andeq	r1, r1, ip, ror #11
   115dc:	andeq	r1, r1, ip, lsr #12
   115e0:	mov	r0, #1
   115e4:	str	r0, [sp, #24]
   115e8:	b	11520 <__mempcpy_chk@plt+0x47c>
   115ec:	mov	r0, #1
   115f0:	str	r0, [sp, #16]
   115f4:	b	11608 <__mempcpy_chk@plt+0x564>
   115f8:	movw	r0, #29008	; 0x7150
   115fc:	movt	r0, #2
   11600:	ldr	r0, [r0]
   11604:	str	r0, [sp, #20]
   11608:	mov	r0, #1
   1160c:	str	r0, [sp, #32]
   11610:	b	11520 <__mempcpy_chk@plt+0x47c>
   11614:	cmp	r0, #256	; 0x100
   11618:	bne	11aa8 <__mempcpy_chk@plt+0xa04>
   1161c:	movw	r0, #29008	; 0x7150
   11620:	movt	r0, #2
   11624:	ldr	r8, [r0]
   11628:	b	11520 <__mempcpy_chk@plt+0x47c>
   1162c:	mov	r0, #1
   11630:	str	r0, [sp, #28]
   11634:	b	11520 <__mempcpy_chk@plt+0x47c>
   11638:	cmn	r0, #1
   1163c:	bne	11a3c <__mempcpy_chk@plt+0x998>
   11640:	movw	r0, #28992	; 0x7140
   11644:	movt	r0, #2
   11648:	ldr	r0, [r0]
   1164c:	sub	r1, r5, r0
   11650:	cmp	r1, #2
   11654:	bcs	11af0 <__mempcpy_chk@plt+0xa4c>
   11658:	cmp	r1, #0
   1165c:	beq	116d8 <__mempcpy_chk@plt+0x634>
   11660:	ldr	r6, [r4, r0, lsl #2]
   11664:	cmp	r8, #0
   11668:	beq	116f0 <__mempcpy_chk@plt+0x64c>
   1166c:	mov	r0, r6
   11670:	bl	10fa8 <strlen@plt>
   11674:	cmp	r0, #0
   11678:	beq	11ae4 <__mempcpy_chk@plt+0xa40>
   1167c:	mov	r7, r0
   11680:	add	r0, r6, r0
   11684:	ldrb	r0, [r0, #-1]
   11688:	cmp	r0, #88	; 0x58
   1168c:	bne	11ae4 <__mempcpy_chk@plt+0xa40>
   11690:	mov	r0, r8
   11694:	bl	10fa8 <strlen@plt>
   11698:	add	r5, r0, #1
   1169c:	mov	r9, r0
   116a0:	add	r0, r5, r7
   116a4:	bl	148b8 <__mempcpy_chk@plt+0x3814>
   116a8:	mov	r1, r6
   116ac:	mov	r2, r7
   116b0:	mov	r4, r0
   116b4:	bl	10e94 <memcpy@plt>
   116b8:	add	r6, r4, r7
   116bc:	mov	r1, r8
   116c0:	mov	r2, r5
   116c4:	mov	r0, r6
   116c8:	bl	10e94 <memcpy@plt>
   116cc:	cmp	r9, #0
   116d0:	bne	11734 <__mempcpy_chk@plt+0x690>
   116d4:	b	11744 <__mempcpy_chk@plt+0x6a0>
   116d8:	movw	r6, #23407	; 0x5b6f
   116dc:	mov	r0, #1
   116e0:	movt	r6, #1
   116e4:	str	r0, [sp, #32]
   116e8:	cmp	r8, #0
   116ec:	bne	1166c <__mempcpy_chk@plt+0x5c8>
   116f0:	mov	r0, r6
   116f4:	bl	14da8 <__mempcpy_chk@plt+0x3d04>
   116f8:	mov	r1, #88	; 0x58
   116fc:	mov	r4, r0
   11700:	bl	1102c <strrchr@plt>
   11704:	cmp	r0, #0
   11708:	beq	11714 <__mempcpy_chk@plt+0x670>
   1170c:	add	r6, r0, #1
   11710:	b	11720 <__mempcpy_chk@plt+0x67c>
   11714:	mov	r0, r4
   11718:	bl	10fa8 <strlen@plt>
   1171c:	add	r6, r4, r0
   11720:	mov	r0, r6
   11724:	bl	10fa8 <strlen@plt>
   11728:	mov	r9, r0
   1172c:	cmp	r9, #0
   11730:	beq	11744 <__mempcpy_chk@plt+0x6a0>
   11734:	mov	r0, r6
   11738:	bl	11ba0 <__mempcpy_chk@plt+0xafc>
   1173c:	cmp	r0, r6
   11740:	bne	11b1c <__mempcpy_chk@plt+0xa78>
   11744:	subs	r0, r6, r4
   11748:	beq	11ab0 <__mempcpy_chk@plt+0xa0c>
   1174c:	sub	r0, r4, r6
   11750:	sub	r1, r6, #1
   11754:	mov	r5, #0
   11758:	ldrb	r2, [r1, -r5]
   1175c:	cmp	r2, #88	; 0x58
   11760:	bne	11770 <__mempcpy_chk@plt+0x6cc>
   11764:	add	r5, r5, #1
   11768:	adds	r2, r0, r5
   1176c:	bne	11758 <__mempcpy_chk@plt+0x6b4>
   11770:	cmp	r5, #2
   11774:	bls	11ab0 <__mempcpy_chk@plt+0xa0c>
   11778:	ldr	r0, [sp, #32]
   1177c:	tst	r0, #1
   11780:	beq	117f4 <__mempcpy_chk@plt+0x750>
   11784:	ldr	r0, [sp, #16]
   11788:	tst	r0, #1
   1178c:	beq	117fc <__mempcpy_chk@plt+0x758>
   11790:	movw	r0, #22829	; 0x592d
   11794:	movt	r0, #1
   11798:	bl	10f3c <getenv@plt>
   1179c:	ldr	r1, [sp, #20]
   117a0:	cmp	r0, #0
   117a4:	beq	117b8 <__mempcpy_chk@plt+0x714>
   117a8:	mov	r6, r0
   117ac:	ldrb	r0, [r0]
   117b0:	cmp	r0, #0
   117b4:	bne	117d8 <__mempcpy_chk@plt+0x734>
   117b8:	cmp	r1, #0
   117bc:	beq	117d0 <__mempcpy_chk@plt+0x72c>
   117c0:	ldrb	r0, [r1]
   117c4:	mov	r6, r1
   117c8:	cmp	r0, #0
   117cc:	bne	117d8 <__mempcpy_chk@plt+0x734>
   117d0:	movw	r6, #22836	; 0x5934
   117d4:	movt	r6, #1
   117d8:	mov	r0, r4
   117dc:	bl	11ba0 <__mempcpy_chk@plt+0xafc>
   117e0:	cmp	r0, r4
   117e4:	beq	11850 <__mempcpy_chk@plt+0x7ac>
   117e8:	movw	r1, #22841	; 0x5939
   117ec:	movt	r1, #1
   117f0:	b	11ab8 <__mempcpy_chk@plt+0xa14>
   117f4:	mov	r6, r4
   117f8:	b	1186c <__mempcpy_chk@plt+0x7c8>
   117fc:	ldr	r6, [sp, #20]
   11800:	cmp	r6, #0
   11804:	ldrbne	r0, [r6]
   11808:	cmpne	r0, #0
   1180c:	bne	11844 <__mempcpy_chk@plt+0x7a0>
   11810:	movw	r0, #22829	; 0x592d
   11814:	movt	r0, #1
   11818:	bl	10f3c <getenv@plt>
   1181c:	cmp	r0, #0
   11820:	beq	1183c <__mempcpy_chk@plt+0x798>
   11824:	ldrb	r1, [r0]
   11828:	movw	r6, #22836	; 0x5934
   1182c:	movt	r6, #1
   11830:	cmp	r1, #0
   11834:	movne	r6, r0
   11838:	b	11844 <__mempcpy_chk@plt+0x7a0>
   1183c:	movw	r6, #22836	; 0x5934
   11840:	movt	r6, #1
   11844:	ldrb	r0, [r4]
   11848:	cmp	r0, #47	; 0x2f
   1184c:	beq	11b50 <__mempcpy_chk@plt+0xaac>
   11850:	mov	r0, r6
   11854:	mov	r1, r4
   11858:	mov	r2, #0
   1185c:	bl	11ea8 <__mempcpy_chk@plt+0xe04>
   11860:	mov	r6, r0
   11864:	mov	r0, r4
   11868:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   1186c:	mov	r0, r6
   11870:	bl	14da8 <__mempcpy_chk@plt+0x3d04>
   11874:	mov	r4, r0
   11878:	ldr	r0, [sp, #24]
   1187c:	tst	r0, #1
   11880:	beq	11900 <__mempcpy_chk@plt+0x85c>
   11884:	str	r5, [sp]
   11888:	ldr	r5, [sp, #28]
   1188c:	mov	r3, #1
   11890:	mov	r0, r4
   11894:	mov	r1, r9
   11898:	mov	r2, #0
   1189c:	mov	r7, #1
   118a0:	tst	r5, #1
   118a4:	movwne	r3, #2
   118a8:	bl	13dd8 <__mempcpy_chk@plt+0x2d34>
   118ac:	clz	r0, r0
   118b0:	lsr	r0, r0, #5
   118b4:	orr	r1, sl, r0
   118b8:	tst	r1, #1
   118bc:	bne	11968 <__mempcpy_chk@plt+0x8c4>
   118c0:	bl	10fb4 <__errno_location@plt>
   118c4:	ldr	r4, [r0]
   118c8:	movw	r1, #22952	; 0x59a8
   118cc:	mov	r0, #0
   118d0:	mov	r2, #5
   118d4:	movt	r1, #1
   118d8:	bl	10eb8 <dcgettext@plt>
   118dc:	mov	r5, r0
   118e0:	mov	r0, r6
   118e4:	bl	13ca0 <__mempcpy_chk@plt+0x2bfc>
   118e8:	mov	r3, r0
   118ec:	mov	r0, #0
   118f0:	mov	r1, r4
   118f4:	mov	r2, r5
   118f8:	bl	10f24 <error@plt>
   118fc:	b	11a30 <__mempcpy_chk@plt+0x98c>
   11900:	str	r5, [sp]
   11904:	ldr	r5, [sp, #28]
   11908:	mov	r0, r4
   1190c:	mov	r1, r9
   11910:	mov	r2, #0
   11914:	ands	r3, r5, #1
   11918:	movwne	r3, #2
   1191c:	bl	13dd8 <__mempcpy_chk@plt+0x2d34>
   11920:	cmp	r0, #0
   11924:	blt	11940 <__mempcpy_chk@plt+0x89c>
   11928:	tst	r5, #1
   1192c:	beq	11950 <__mempcpy_chk@plt+0x8ac>
   11930:	mov	r0, r4
   11934:	bl	10f48 <puts@plt>
   11938:	mov	r7, #0
   1193c:	b	11a30 <__mempcpy_chk@plt+0x98c>
   11940:	mov	r7, #1
   11944:	tst	sl, #1
   11948:	beq	119f0 <__mempcpy_chk@plt+0x94c>
   1194c:	b	11a30 <__mempcpy_chk@plt+0x98c>
   11950:	bl	11080 <close@plt>
   11954:	clz	r0, r0
   11958:	lsr	r0, r0, #5
   1195c:	orr	r1, sl, r0
   11960:	tst	r1, #1
   11964:	beq	119f0 <__mempcpy_chk@plt+0x94c>
   11968:	mov	r7, #1
   1196c:	cmp	r0, #0
   11970:	beq	11a30 <__mempcpy_chk@plt+0x98c>
   11974:	mov	r0, r4
   11978:	bl	10f48 <puts@plt>
   1197c:	mov	r7, #0
   11980:	tst	r5, #1
   11984:	bne	11a30 <__mempcpy_chk@plt+0x98c>
   11988:	movw	r0, #29013	; 0x7155
   1198c:	mov	r1, #1
   11990:	movt	r0, #2
   11994:	strb	r1, [r0]
   11998:	movw	r0, #29004	; 0x714c
   1199c:	movt	r0, #2
   119a0:	ldr	r0, [r0]
   119a4:	bl	11c24 <__mempcpy_chk@plt+0xb80>
   119a8:	cmp	r0, #0
   119ac:	beq	11a30 <__mempcpy_chk@plt+0x98c>
   119b0:	bl	10fb4 <__errno_location@plt>
   119b4:	ldr	r5, [r0]
   119b8:	mov	r0, r4
   119bc:	bl	11044 <remove@plt>
   119c0:	tst	sl, #1
   119c4:	bne	11a2c <__mempcpy_chk@plt+0x988>
   119c8:	movw	r1, #23033	; 0x59f9
   119cc:	mov	r0, #0
   119d0:	mov	r2, #5
   119d4:	movt	r1, #1
   119d8:	bl	10eb8 <dcgettext@plt>
   119dc:	mov	r2, r0
   119e0:	mov	r0, #0
   119e4:	mov	r1, r5
   119e8:	bl	10f24 <error@plt>
   119ec:	b	11a2c <__mempcpy_chk@plt+0x988>
   119f0:	bl	10fb4 <__errno_location@plt>
   119f4:	ldr	r4, [r0]
   119f8:	movw	r1, #22995	; 0x59d3
   119fc:	mov	r0, #0
   11a00:	mov	r2, #5
   11a04:	movt	r1, #1
   11a08:	bl	10eb8 <dcgettext@plt>
   11a0c:	mov	r5, r0
   11a10:	mov	r0, r6
   11a14:	bl	13ca0 <__mempcpy_chk@plt+0x2bfc>
   11a18:	mov	r3, r0
   11a1c:	mov	r0, #0
   11a20:	mov	r1, r4
   11a24:	mov	r2, r5
   11a28:	bl	10f24 <error@plt>
   11a2c:	mov	r7, #1
   11a30:	mov	r0, r7
   11a34:	sub	sp, fp, #28
   11a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a3c:	cmn	r0, #3
   11a40:	bne	11a98 <__mempcpy_chk@plt+0x9f4>
   11a44:	movw	r0, #28912	; 0x70f0
   11a48:	movw	r2, #22683	; 0x589b
   11a4c:	mov	r1, #0
   11a50:	movw	r7, #22670	; 0x588e
   11a54:	movt	r0, #2
   11a58:	movt	r2, #1
   11a5c:	str	r1, [sp, #8]
   11a60:	movw	r1, #22617	; 0x5859
   11a64:	movt	r7, #1
   11a68:	ldr	r3, [r0]
   11a6c:	movw	r0, #29004	; 0x714c
   11a70:	str	r2, [sp, #4]
   11a74:	movw	r2, #22656	; 0x5880
   11a78:	movt	r1, #1
   11a7c:	str	r7, [sp]
   11a80:	movt	r0, #2
   11a84:	movt	r2, #1
   11a88:	ldr	r0, [r0]
   11a8c:	bl	14654 <__mempcpy_chk@plt+0x35b0>
   11a90:	mov	r0, #0
   11a94:	bl	10f9c <exit@plt>
   11a98:	cmn	r0, #2
   11a9c:	bne	11aa8 <__mempcpy_chk@plt+0xa04>
   11aa0:	mov	r0, #0
   11aa4:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11aa8:	mov	r0, #1
   11aac:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11ab0:	movw	r1, #22802	; 0x5912
   11ab4:	movt	r1, #1
   11ab8:	mov	r0, #0
   11abc:	mov	r2, #5
   11ac0:	bl	10eb8 <dcgettext@plt>
   11ac4:	mov	r5, r0
   11ac8:	mov	r0, r4
   11acc:	bl	13ca0 <__mempcpy_chk@plt+0x2bfc>
   11ad0:	mov	r3, r0
   11ad4:	mov	r0, #1
   11ad8:	mov	r1, #0
   11adc:	mov	r2, r5
   11ae0:	bl	10f24 <error@plt>
   11ae4:	movw	r1, #22713	; 0x58b9
   11ae8:	movt	r1, #1
   11aec:	b	11b24 <__mempcpy_chk@plt+0xa80>
   11af0:	movw	r1, #22694	; 0x58a6
   11af4:	mov	r0, #0
   11af8:	mov	r2, #5
   11afc:	movt	r1, #1
   11b00:	bl	10eb8 <dcgettext@plt>
   11b04:	mov	r2, r0
   11b08:	mov	r0, #0
   11b0c:	mov	r1, #0
   11b10:	bl	10f24 <error@plt>
   11b14:	mov	r0, #1
   11b18:	bl	111a0 <__mempcpy_chk@plt+0xfc>
   11b1c:	movw	r1, #22754	; 0x58e2
   11b20:	movt	r1, #1
   11b24:	mov	r0, #0
   11b28:	mov	r2, #5
   11b2c:	bl	10eb8 <dcgettext@plt>
   11b30:	mov	r4, r0
   11b34:	mov	r0, r6
   11b38:	bl	13ca0 <__mempcpy_chk@plt+0x2bfc>
   11b3c:	mov	r3, r0
   11b40:	mov	r0, #1
   11b44:	mov	r1, #0
   11b48:	mov	r2, r4
   11b4c:	bl	10f24 <error@plt>
   11b50:	movw	r1, #22892	; 0x596c
   11b54:	movt	r1, #1
   11b58:	b	11ab8 <__mempcpy_chk@plt+0xa14>
   11b5c:	push	{fp, lr}
   11b60:	mov	fp, sp
   11b64:	movw	r0, #29013	; 0x7155
   11b68:	movt	r0, #2
   11b6c:	ldrb	r0, [r0]
   11b70:	cmp	r0, #0
   11b74:	beq	11b98 <__mempcpy_chk@plt+0xaf4>
   11b78:	movw	r0, #29000	; 0x7148
   11b7c:	movt	r0, #2
   11b80:	ldr	r0, [r0]
   11b84:	bl	11c24 <__mempcpy_chk@plt+0xb80>
   11b88:	cmp	r0, #0
   11b8c:	popeq	{fp, pc}
   11b90:	mov	r0, #1
   11b94:	bl	10e88 <_exit@plt>
   11b98:	pop	{fp, lr}
   11b9c:	b	11cc8 <__mempcpy_chk@plt+0xc24>
   11ba0:	sub	r0, r0, #1
   11ba4:	ldrb	r3, [r0, #1]!
   11ba8:	cmp	r3, #47	; 0x2f
   11bac:	beq	11ba4 <__mempcpy_chk@plt+0xb00>
   11bb0:	mov	r2, #0
   11bb4:	mov	r1, r0
   11bb8:	b	11bd4 <__mempcpy_chk@plt+0xb30>
   11bbc:	cmp	r3, #0
   11bc0:	bxeq	lr
   11bc4:	tst	r2, #1
   11bc8:	mov	r2, #0
   11bcc:	movne	r0, r1
   11bd0:	ldrb	r3, [r1, #1]!
   11bd4:	uxtb	r3, r3
   11bd8:	cmp	r3, #47	; 0x2f
   11bdc:	bne	11bbc <__mempcpy_chk@plt+0xb18>
   11be0:	ldrb	r3, [r1, #1]!
   11be4:	mov	r2, #1
   11be8:	b	11bd4 <__mempcpy_chk@plt+0xb30>
   11bec:	push	{r4, sl, fp, lr}
   11bf0:	add	fp, sp, #8
   11bf4:	mov	r4, r0
   11bf8:	bl	10fa8 <strlen@plt>
   11bfc:	mov	r1, r0
   11c00:	sub	r2, r4, #1
   11c04:	mov	r0, r1
   11c08:	cmp	r1, #2
   11c0c:	popcc	{r4, sl, fp, pc}
   11c10:	ldrb	r3, [r2, r0]
   11c14:	sub	r1, r0, #1
   11c18:	cmp	r3, #47	; 0x2f
   11c1c:	beq	11c04 <__mempcpy_chk@plt+0xb60>
   11c20:	pop	{r4, sl, fp, pc}
   11c24:	push	{r4, r5, r6, sl, fp, lr}
   11c28:	add	fp, sp, #16
   11c2c:	mov	r4, r0
   11c30:	bl	10f0c <__fpending@plt>
   11c34:	ldr	r6, [r4]
   11c38:	mov	r5, r0
   11c3c:	mov	r0, r4
   11c40:	bl	11db0 <__mempcpy_chk@plt+0xd0c>
   11c44:	tst	r6, #32
   11c48:	bne	11c80 <__mempcpy_chk@plt+0xbdc>
   11c4c:	cmp	r0, #0
   11c50:	mov	r4, r0
   11c54:	mvnne	r4, #0
   11c58:	cmp	r5, #0
   11c5c:	bne	11c8c <__mempcpy_chk@plt+0xbe8>
   11c60:	cmp	r0, #0
   11c64:	beq	11c8c <__mempcpy_chk@plt+0xbe8>
   11c68:	bl	10fb4 <__errno_location@plt>
   11c6c:	ldr	r0, [r0]
   11c70:	subs	r4, r0, #9
   11c74:	mvnne	r4, #0
   11c78:	mov	r0, r4
   11c7c:	pop	{r4, r5, r6, sl, fp, pc}
   11c80:	mvn	r4, #0
   11c84:	cmp	r0, #0
   11c88:	beq	11c94 <__mempcpy_chk@plt+0xbf0>
   11c8c:	mov	r0, r4
   11c90:	pop	{r4, r5, r6, sl, fp, pc}
   11c94:	bl	10fb4 <__errno_location@plt>
   11c98:	mov	r1, #0
   11c9c:	str	r1, [r0]
   11ca0:	mov	r0, r4
   11ca4:	pop	{r4, r5, r6, sl, fp, pc}
   11ca8:	movw	r1, #29016	; 0x7158
   11cac:	movt	r1, #2
   11cb0:	str	r0, [r1]
   11cb4:	bx	lr
   11cb8:	movw	r1, #29020	; 0x715c
   11cbc:	movt	r1, #2
   11cc0:	strb	r0, [r1]
   11cc4:	bx	lr
   11cc8:	push	{r4, r5, r6, sl, fp, lr}
   11ccc:	add	fp, sp, #16
   11cd0:	sub	sp, sp, #8
   11cd4:	movw	r0, #29004	; 0x714c
   11cd8:	movt	r0, #2
   11cdc:	ldr	r0, [r0]
   11ce0:	bl	11c24 <__mempcpy_chk@plt+0xb80>
   11ce4:	cmp	r0, #0
   11ce8:	beq	11d10 <__mempcpy_chk@plt+0xc6c>
   11cec:	movw	r0, #29020	; 0x715c
   11cf0:	movt	r0, #2
   11cf4:	ldrb	r0, [r0]
   11cf8:	cmp	r0, #0
   11cfc:	beq	11d30 <__mempcpy_chk@plt+0xc8c>
   11d00:	bl	10fb4 <__errno_location@plt>
   11d04:	ldr	r0, [r0]
   11d08:	cmp	r0, #32
   11d0c:	bne	11d30 <__mempcpy_chk@plt+0xc8c>
   11d10:	movw	r0, #29000	; 0x7148
   11d14:	movt	r0, #2
   11d18:	ldr	r0, [r0]
   11d1c:	bl	11c24 <__mempcpy_chk@plt+0xb80>
   11d20:	cmp	r0, #0
   11d24:	subeq	sp, fp, #16
   11d28:	popeq	{r4, r5, r6, sl, fp, pc}
   11d2c:	b	11da0 <__mempcpy_chk@plt+0xcfc>
   11d30:	movw	r1, #23033	; 0x59f9
   11d34:	mov	r0, #0
   11d38:	mov	r2, #5
   11d3c:	movt	r1, #1
   11d40:	bl	10eb8 <dcgettext@plt>
   11d44:	mov	r4, r0
   11d48:	movw	r0, #29016	; 0x7158
   11d4c:	movt	r0, #2
   11d50:	ldr	r6, [r0]
   11d54:	bl	10fb4 <__errno_location@plt>
   11d58:	ldr	r5, [r0]
   11d5c:	cmp	r6, #0
   11d60:	bne	11d7c <__mempcpy_chk@plt+0xcd8>
   11d64:	movw	r2, #23627	; 0x5c4b
   11d68:	mov	r0, #0
   11d6c:	mov	r1, r5
   11d70:	mov	r3, r4
   11d74:	movt	r2, #1
   11d78:	b	11d9c <__mempcpy_chk@plt+0xcf8>
   11d7c:	mov	r0, r6
   11d80:	bl	13918 <__mempcpy_chk@plt+0x2874>
   11d84:	movw	r2, #23623	; 0x5c47
   11d88:	mov	r3, r0
   11d8c:	str	r4, [sp]
   11d90:	mov	r0, #0
   11d94:	mov	r1, r5
   11d98:	movt	r2, #1
   11d9c:	bl	10f24 <error@plt>
   11da0:	movw	r0, #28916	; 0x70f4
   11da4:	movt	r0, #2
   11da8:	ldr	r0, [r0]
   11dac:	bl	10e88 <_exit@plt>
   11db0:	push	{r4, r5, r6, sl, fp, lr}
   11db4:	add	fp, sp, #16
   11db8:	sub	sp, sp, #8
   11dbc:	mov	r4, r0
   11dc0:	bl	10ff0 <fileno@plt>
   11dc4:	cmn	r0, #1
   11dc8:	ble	11e3c <__mempcpy_chk@plt+0xd98>
   11dcc:	mov	r0, r4
   11dd0:	bl	10f6c <__freading@plt>
   11dd4:	cmp	r0, #0
   11dd8:	beq	11e04 <__mempcpy_chk@plt+0xd60>
   11ddc:	mov	r0, r4
   11de0:	bl	10ff0 <fileno@plt>
   11de4:	mov	r1, #1
   11de8:	mov	r2, #0
   11dec:	mov	r3, #0
   11df0:	str	r1, [sp]
   11df4:	bl	10ef4 <lseek64@plt>
   11df8:	and	r0, r0, r1
   11dfc:	cmn	r0, #1
   11e00:	beq	11e3c <__mempcpy_chk@plt+0xd98>
   11e04:	mov	r0, r4
   11e08:	bl	11e4c <__mempcpy_chk@plt+0xda8>
   11e0c:	cmp	r0, #0
   11e10:	beq	11e3c <__mempcpy_chk@plt+0xd98>
   11e14:	bl	10fb4 <__errno_location@plt>
   11e18:	ldr	r6, [r0]
   11e1c:	mov	r5, r0
   11e20:	mov	r0, r4
   11e24:	bl	11008 <fclose@plt>
   11e28:	cmp	r6, #0
   11e2c:	strne	r6, [r5]
   11e30:	mvnne	r0, #0
   11e34:	sub	sp, fp, #16
   11e38:	pop	{r4, r5, r6, sl, fp, pc}
   11e3c:	mov	r0, r4
   11e40:	sub	sp, fp, #16
   11e44:	pop	{r4, r5, r6, sl, fp, lr}
   11e48:	b	11008 <fclose@plt>
   11e4c:	push	{r4, sl, fp, lr}
   11e50:	add	fp, sp, #8
   11e54:	sub	sp, sp, #8
   11e58:	mov	r4, r0
   11e5c:	cmp	r0, #0
   11e60:	beq	11e7c <__mempcpy_chk@plt+0xdd8>
   11e64:	mov	r0, r4
   11e68:	bl	10f6c <__freading@plt>
   11e6c:	cmp	r0, #0
   11e70:	ldrbne	r0, [r4, #1]
   11e74:	tstne	r0, #1
   11e78:	bne	11e8c <__mempcpy_chk@plt+0xde8>
   11e7c:	mov	r0, r4
   11e80:	sub	sp, fp, #8
   11e84:	pop	{r4, sl, fp, lr}
   11e88:	b	10e64 <fflush@plt>
   11e8c:	mov	r0, #1
   11e90:	mov	r2, #0
   11e94:	mov	r3, #0
   11e98:	str	r0, [sp]
   11e9c:	mov	r0, r4
   11ea0:	bl	11fc8 <__mempcpy_chk@plt+0xf24>
   11ea4:	b	11e7c <__mempcpy_chk@plt+0xdd8>
   11ea8:	push	{fp, lr}
   11eac:	mov	fp, sp
   11eb0:	bl	11ec0 <__mempcpy_chk@plt+0xe1c>
   11eb4:	cmp	r0, #0
   11eb8:	popne	{fp, pc}
   11ebc:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   11ec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ec4:	add	fp, sp, #28
   11ec8:	push	{r2}		; (str r2, [sp, #-4]!)
   11ecc:	mov	sl, r1
   11ed0:	mov	r7, r0
   11ed4:	bl	11ba0 <__mempcpy_chk@plt+0xafc>
   11ed8:	sub	r4, r0, r7
   11edc:	bl	11bec <__mempcpy_chk@plt+0xb48>
   11ee0:	mov	r6, r0
   11ee4:	add	r5, r4, r0
   11ee8:	mov	r0, sl
   11eec:	bl	10fa8 <strlen@plt>
   11ef0:	mov	r9, r0
   11ef4:	cmp	r6, #0
   11ef8:	beq	11f20 <__mempcpy_chk@plt+0xe7c>
   11efc:	add	r0, r7, r5
   11f00:	mov	r4, #0
   11f04:	ldrb	r0, [r0, #-1]
   11f08:	cmp	r0, #47	; 0x2f
   11f0c:	beq	11f30 <__mempcpy_chk@plt+0xe8c>
   11f10:	ldrb	r0, [sl]
   11f14:	subs	r4, r0, #47	; 0x2f
   11f18:	movwne	r4, #47	; 0x2f
   11f1c:	b	11f30 <__mempcpy_chk@plt+0xe8c>
   11f20:	ldrb	r0, [sl]
   11f24:	mov	r4, #0
   11f28:	cmp	r0, #47	; 0x2f
   11f2c:	movweq	r4, #46	; 0x2e
   11f30:	uxtb	r8, r4
   11f34:	add	r0, r9, r5
   11f38:	cmp	r8, #0
   11f3c:	movwne	r8, #1
   11f40:	add	r0, r0, r8
   11f44:	add	r0, r0, #1
   11f48:	bl	14e80 <__mempcpy_chk@plt+0x3ddc>
   11f4c:	mov	r6, r0
   11f50:	cmp	r0, #0
   11f54:	beq	11f94 <__mempcpy_chk@plt+0xef0>
   11f58:	mov	r0, r6
   11f5c:	mov	r1, r7
   11f60:	mov	r2, r5
   11f64:	mvn	r3, #0
   11f68:	bl	110a4 <__mempcpy_chk@plt>
   11f6c:	ldr	r1, [sp]
   11f70:	strb	r4, [r0], r8
   11f74:	mov	r2, r9
   11f78:	mvn	r3, #0
   11f7c:	cmp	r1, #0
   11f80:	strne	r0, [r1]
   11f84:	mov	r1, sl
   11f88:	bl	110a4 <__mempcpy_chk@plt>
   11f8c:	mov	r1, #0
   11f90:	strb	r1, [r0]
   11f94:	mov	r0, r6
   11f98:	sub	sp, fp, #28
   11f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fa0:	push	{r4, r5, r6, sl, fp, lr}
   11fa4:	add	fp, sp, #16
   11fa8:	mov	r4, r0
   11fac:	bl	10fb4 <__errno_location@plt>
   11fb0:	ldr	r6, [r0]
   11fb4:	mov	r5, r0
   11fb8:	mov	r0, r4
   11fbc:	bl	10e70 <free@plt>
   11fc0:	str	r6, [r5]
   11fc4:	pop	{r4, r5, r6, sl, fp, pc}
   11fc8:	push	{r4, r5, r6, r7, fp, lr}
   11fcc:	add	fp, sp, #16
   11fd0:	sub	sp, sp, #8
   11fd4:	mov	r4, r0
   11fd8:	ldr	r0, [r0, #4]
   11fdc:	mov	r5, r3
   11fe0:	mov	r6, r2
   11fe4:	ldr	r1, [r4, #8]
   11fe8:	cmp	r1, r0
   11fec:	bne	12008 <__mempcpy_chk@plt+0xf64>
   11ff0:	ldrd	r0, [r4, #16]
   11ff4:	cmp	r1, r0
   11ff8:	bne	12008 <__mempcpy_chk@plt+0xf64>
   11ffc:	ldr	r0, [r4, #36]	; 0x24
   12000:	cmp	r0, #0
   12004:	beq	12020 <__mempcpy_chk@plt+0xf7c>
   12008:	mov	r0, r4
   1200c:	mov	r2, r6
   12010:	mov	r3, r5
   12014:	sub	sp, fp, #16
   12018:	pop	{r4, r5, r6, r7, fp, lr}
   1201c:	b	11014 <fseeko64@plt>
   12020:	ldr	r7, [fp, #8]
   12024:	mov	r0, r4
   12028:	bl	10ff0 <fileno@plt>
   1202c:	mov	r2, r6
   12030:	mov	r3, r5
   12034:	str	r7, [sp]
   12038:	bl	10ef4 <lseek64@plt>
   1203c:	and	r2, r0, r1
   12040:	cmn	r2, #1
   12044:	mvneq	r0, #0
   12048:	subeq	sp, fp, #16
   1204c:	popeq	{r4, r5, r6, r7, fp, pc}
   12050:	strd	r0, [r4, #80]	; 0x50
   12054:	ldr	r0, [r4]
   12058:	bic	r0, r0, #16
   1205c:	str	r0, [r4]
   12060:	mov	r0, #0
   12064:	sub	sp, fp, #16
   12068:	pop	{r4, r5, r6, r7, fp, pc}
   1206c:	push	{r4, r5, fp, lr}
   12070:	add	fp, sp, #8
   12074:	cmp	r0, #0
   12078:	beq	1210c <__mempcpy_chk@plt+0x1068>
   1207c:	mov	r1, #47	; 0x2f
   12080:	mov	r4, r0
   12084:	bl	1102c <strrchr@plt>
   12088:	cmp	r0, #0
   1208c:	mov	r5, r4
   12090:	addne	r5, r0, #1
   12094:	sub	r0, r5, r4
   12098:	cmp	r0, #7
   1209c:	blt	120f0 <__mempcpy_chk@plt+0x104c>
   120a0:	movw	r1, #23686	; 0x5c86
   120a4:	sub	r0, r5, #7
   120a8:	mov	r2, #7
   120ac:	movt	r1, #1
   120b0:	bl	11068 <strncmp@plt>
   120b4:	cmp	r0, #0
   120b8:	bne	120f0 <__mempcpy_chk@plt+0x104c>
   120bc:	movw	r1, #23694	; 0x5c8e
   120c0:	mov	r0, r5
   120c4:	mov	r2, #3
   120c8:	movt	r1, #1
   120cc:	bl	11068 <strncmp@plt>
   120d0:	cmp	r0, #0
   120d4:	beq	120e0 <__mempcpy_chk@plt+0x103c>
   120d8:	mov	r4, r5
   120dc:	b	120f0 <__mempcpy_chk@plt+0x104c>
   120e0:	movw	r0, #28984	; 0x7138
   120e4:	add	r4, r5, #3
   120e8:	movt	r0, #2
   120ec:	str	r4, [r0]
   120f0:	movw	r0, #28988	; 0x713c
   120f4:	movt	r0, #2
   120f8:	str	r4, [r0]
   120fc:	movw	r0, #29024	; 0x7160
   12100:	movt	r0, #2
   12104:	str	r4, [r0]
   12108:	pop	{r4, r5, fp, pc}
   1210c:	movw	r0, #29000	; 0x7148
   12110:	mov	r1, #55	; 0x37
   12114:	mov	r2, #1
   12118:	movt	r0, #2
   1211c:	ldr	r3, [r0]
   12120:	movw	r0, #23630	; 0x5c4e
   12124:	movt	r0, #1
   12128:	bl	10ee8 <fwrite@plt>
   1212c:	bl	11074 <abort@plt>
   12130:	push	{r4, r5, r6, sl, fp, lr}
   12134:	add	fp, sp, #16
   12138:	mov	r4, r0
   1213c:	movw	r0, #29032	; 0x7168
   12140:	movt	r0, #2
   12144:	cmp	r4, #0
   12148:	moveq	r4, r0
   1214c:	bl	10fb4 <__errno_location@plt>
   12150:	ldr	r6, [r0]
   12154:	mov	r5, r0
   12158:	mov	r0, r4
   1215c:	mov	r1, #48	; 0x30
   12160:	bl	14ce8 <__mempcpy_chk@plt+0x3c44>
   12164:	str	r6, [r5]
   12168:	pop	{r4, r5, r6, sl, fp, pc}
   1216c:	movw	r1, #29032	; 0x7168
   12170:	cmp	r0, #0
   12174:	movt	r1, #2
   12178:	movne	r1, r0
   1217c:	ldr	r0, [r1]
   12180:	bx	lr
   12184:	movw	r2, #29032	; 0x7168
   12188:	cmp	r0, #0
   1218c:	movt	r2, #2
   12190:	movne	r2, r0
   12194:	str	r1, [r2]
   12198:	bx	lr
   1219c:	movw	r3, #29032	; 0x7168
   121a0:	cmp	r0, #0
   121a4:	movt	r3, #2
   121a8:	movne	r3, r0
   121ac:	ubfx	r0, r1, #5, #3
   121b0:	and	r1, r1, #31
   121b4:	add	r0, r3, r0, lsl #2
   121b8:	ldr	r3, [r0, #8]
   121bc:	eor	r2, r2, r3, lsr r1
   121c0:	and	r2, r2, #1
   121c4:	eor	r2, r3, r2, lsl r1
   121c8:	str	r2, [r0, #8]
   121cc:	mov	r0, #1
   121d0:	and	r0, r0, r3, lsr r1
   121d4:	bx	lr
   121d8:	movw	r2, #29032	; 0x7168
   121dc:	cmp	r0, #0
   121e0:	movt	r2, #2
   121e4:	movne	r2, r0
   121e8:	ldr	r0, [r2, #4]
   121ec:	str	r1, [r2, #4]
   121f0:	bx	lr
   121f4:	movw	r3, #29032	; 0x7168
   121f8:	cmp	r0, #0
   121fc:	movt	r3, #2
   12200:	movne	r3, r0
   12204:	cmp	r1, #0
   12208:	mov	r0, #10
   1220c:	cmpne	r2, #0
   12210:	str	r0, [r3]
   12214:	bne	12224 <__mempcpy_chk@plt+0x1180>
   12218:	push	{fp, lr}
   1221c:	mov	fp, sp
   12220:	bl	11074 <abort@plt>
   12224:	str	r1, [r3, #40]	; 0x28
   12228:	str	r2, [r3, #44]	; 0x2c
   1222c:	bx	lr
   12230:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12234:	add	fp, sp, #28
   12238:	sub	sp, sp, #20
   1223c:	mov	r7, r0
   12240:	ldr	r0, [fp, #8]
   12244:	movw	r5, #29032	; 0x7168
   12248:	mov	r8, r3
   1224c:	mov	r9, r2
   12250:	mov	sl, r1
   12254:	movt	r5, #2
   12258:	cmp	r0, #0
   1225c:	movne	r5, r0
   12260:	bl	10fb4 <__errno_location@plt>
   12264:	mov	r4, r0
   12268:	ldm	r5, {r0, r1}
   1226c:	ldr	r2, [r5, #40]	; 0x28
   12270:	ldr	r3, [r5, #44]	; 0x2c
   12274:	add	r5, r5, #8
   12278:	ldr	r6, [r4]
   1227c:	stm	sp, {r0, r1, r5}
   12280:	str	r2, [sp, #12]
   12284:	str	r3, [sp, #16]
   12288:	mov	r0, r7
   1228c:	mov	r1, sl
   12290:	mov	r2, r9
   12294:	mov	r3, r8
   12298:	bl	122a8 <__mempcpy_chk@plt+0x1204>
   1229c:	str	r6, [r4]
   122a0:	sub	sp, fp, #28
   122a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122ac:	add	fp, sp, #28
   122b0:	sub	sp, sp, #156	; 0x9c
   122b4:	str	r0, [sp, #80]	; 0x50
   122b8:	ldr	r0, [fp, #12]
   122bc:	mov	r6, r1
   122c0:	mov	r9, r3
   122c4:	str	r2, [fp, #-84]	; 0xffffffac
   122c8:	and	r1, r0, #4
   122cc:	str	r1, [sp, #32]
   122d0:	and	r1, r0, #1
   122d4:	str	r1, [sp, #36]	; 0x24
   122d8:	ubfx	r4, r0, #1, #1
   122dc:	bl	10f00 <__ctype_get_mb_cur_max@plt>
   122e0:	str	r0, [sp, #40]	; 0x28
   122e4:	ldr	r0, [fp, #24]
   122e8:	ldr	r7, [fp, #8]
   122ec:	mov	r1, #0
   122f0:	mov	r5, #1
   122f4:	str	r1, [fp, #-56]	; 0xffffffc8
   122f8:	mov	r1, #0
   122fc:	str	r1, [sp, #60]	; 0x3c
   12300:	str	r0, [sp, #76]	; 0x4c
   12304:	ldr	r0, [fp, #20]
   12308:	str	r0, [sp, #72]	; 0x48
   1230c:	mov	r0, #0
   12310:	str	r0, [sp, #56]	; 0x38
   12314:	mov	r0, #0
   12318:	str	r0, [sp, #92]	; 0x5c
   1231c:	mov	r0, #0
   12320:	str	r0, [fp, #-76]	; 0xffffffb4
   12324:	mov	r0, #0
   12328:	cmp	r7, #10
   1232c:	bhi	132ac <__mempcpy_chk@plt+0x2208>
   12330:	add	r1, pc, #28
   12334:	mov	sl, r6
   12338:	ldr	r6, [sp, #80]	; 0x50
   1233c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12340:	mov	r8, #0
   12344:	mov	r2, #1
   12348:	mov	r3, #0
   1234c:	mov	lr, r9
   12350:	ldr	pc, [r1, r7, lsl #2]
   12354:	andeq	r2, r1, r8, lsr r4
   12358:	andeq	r2, r1, r4, ror #8
   1235c:	andeq	r2, r1, r8, lsr #8
   12360:	andeq	r2, r1, r0, lsr #8
   12364:	andeq	r2, r1, r8, asr r4
   12368:	andeq	r2, r1, ip, lsr #9
   1236c:	andeq	r2, r1, r8, asr #8
   12370:	andeq	r2, r1, r8, lsl #10
   12374:	andeq	r2, r1, r0, lsl #7
   12378:	andeq	r2, r1, r0, lsl #7
   1237c:	andeq	r2, r1, r8, lsr #7
   12380:	movw	r0, #23778	; 0x5ce2
   12384:	mov	r1, r7
   12388:	movt	r0, #1
   1238c:	bl	13cb8 <__mempcpy_chk@plt+0x2c14>
   12390:	str	r0, [sp, #72]	; 0x48
   12394:	movw	r0, #23780	; 0x5ce4
   12398:	mov	r1, r7
   1239c:	movt	r0, #1
   123a0:	bl	13cb8 <__mempcpy_chk@plt+0x2c14>
   123a4:	str	r0, [sp, #76]	; 0x4c
   123a8:	str	r5, [fp, #-48]	; 0xffffffd0
   123ac:	mov	r8, #0
   123b0:	mov	r5, r7
   123b4:	tst	r4, #1
   123b8:	bne	123f0 <__mempcpy_chk@plt+0x134c>
   123bc:	ldr	r0, [sp, #72]	; 0x48
   123c0:	ldrb	r0, [r0]
   123c4:	cmp	r0, #0
   123c8:	beq	123f0 <__mempcpy_chk@plt+0x134c>
   123cc:	ldr	r1, [sp, #72]	; 0x48
   123d0:	mov	r8, #0
   123d4:	add	r1, r1, #1
   123d8:	cmp	r8, sl
   123dc:	strbcc	r0, [r6, r8]
   123e0:	ldrb	r0, [r1, r8]
   123e4:	add	r8, r8, #1
   123e8:	cmp	r0, #0
   123ec:	bne	123d8 <__mempcpy_chk@plt+0x1334>
   123f0:	ldr	r7, [sp, #76]	; 0x4c
   123f4:	mov	r0, r7
   123f8:	bl	10fa8 <strlen@plt>
   123fc:	str	r7, [sp, #92]	; 0x5c
   12400:	mov	r7, r5
   12404:	ldr	ip, [fp, #-84]	; 0xffffffac
   12408:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1240c:	str	r0, [fp, #-76]	; 0xffffffb4
   12410:	mov	r2, #1
   12414:	mov	r3, r4
   12418:	mov	lr, r9
   1241c:	b	12508 <__mempcpy_chk@plt+0x1464>
   12420:	mov	r0, #1
   12424:	b	12464 <__mempcpy_chk@plt+0x13c0>
   12428:	tst	r4, #1
   1242c:	bne	12464 <__mempcpy_chk@plt+0x13c0>
   12430:	mov	r2, r0
   12434:	b	1248c <__mempcpy_chk@plt+0x13e8>
   12438:	mov	r7, #0
   1243c:	mov	r8, #0
   12440:	mov	r2, r0
   12444:	b	12504 <__mempcpy_chk@plt+0x1460>
   12448:	mov	r0, #1
   1244c:	mov	r8, #0
   12450:	mov	r7, #5
   12454:	b	124c0 <__mempcpy_chk@plt+0x141c>
   12458:	mov	r2, #1
   1245c:	tst	r4, #1
   12460:	beq	1248c <__mempcpy_chk@plt+0x13e8>
   12464:	mov	r1, #1
   12468:	mov	r8, #0
   1246c:	mov	r7, #2
   12470:	mov	r2, r0
   12474:	mov	r3, #1
   12478:	str	r1, [fp, #-76]	; 0xffffffb4
   1247c:	movw	r1, #23780	; 0x5ce4
   12480:	movt	r1, #1
   12484:	str	r1, [sp, #92]	; 0x5c
   12488:	b	12508 <__mempcpy_chk@plt+0x1464>
   1248c:	cmp	sl, #0
   12490:	mov	r8, #1
   12494:	mov	r7, #2
   12498:	movne	r0, #39	; 0x27
   1249c:	strbne	r0, [r6]
   124a0:	movw	r0, #23780	; 0x5ce4
   124a4:	movt	r0, #1
   124a8:	b	124f8 <__mempcpy_chk@plt+0x1454>
   124ac:	mov	r7, #5
   124b0:	tst	r4, #1
   124b4:	beq	124dc <__mempcpy_chk@plt+0x1438>
   124b8:	mov	r0, #1
   124bc:	mov	r8, #0
   124c0:	str	r0, [fp, #-76]	; 0xffffffb4
   124c4:	movw	r0, #23776	; 0x5ce0
   124c8:	mov	r2, #1
   124cc:	mov	r3, #1
   124d0:	movt	r0, #1
   124d4:	str	r0, [sp, #92]	; 0x5c
   124d8:	b	12508 <__mempcpy_chk@plt+0x1464>
   124dc:	cmp	sl, #0
   124e0:	mov	r8, #1
   124e4:	mov	r2, #1
   124e8:	movne	r0, #34	; 0x22
   124ec:	strbne	r0, [r6]
   124f0:	movw	r0, #23776	; 0x5ce0
   124f4:	movt	r0, #1
   124f8:	str	r0, [sp, #92]	; 0x5c
   124fc:	mov	r0, #1
   12500:	str	r0, [fp, #-76]	; 0xffffffb4
   12504:	mov	r3, #0
   12508:	ldr	r0, [fp, #16]
   1250c:	str	r3, [fp, #-72]	; 0xffffffb8
   12510:	str	r7, [fp, #-64]	; 0xffffffc0
   12514:	str	r2, [sp, #84]	; 0x54
   12518:	cmp	r0, #0
   1251c:	movwne	r0, #1
   12520:	and	r0, r0, r3
   12524:	str	r0, [fp, #-88]	; 0xffffffa8
   12528:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1252c:	cmp	r0, #0
   12530:	movwne	r0, #1
   12534:	subs	r4, r7, #2
   12538:	mov	r7, #0
   1253c:	and	r1, r0, r3
   12540:	str	r4, [fp, #-80]	; 0xffffffb0
   12544:	and	r1, r2, r1
   12548:	str	r1, [sp, #48]	; 0x30
   1254c:	clz	r1, r4
   12550:	lsr	r1, r1, #5
   12554:	and	r1, r1, r3
   12558:	eor	r3, r3, #1
   1255c:	str	r1, [sp, #64]	; 0x40
   12560:	mov	r1, r4
   12564:	str	r3, [sp, #88]	; 0x58
   12568:	movwne	r1, #1
   1256c:	orr	r3, r1, r3
   12570:	and	r1, r1, r2
   12574:	and	r0, r0, r1
   12578:	str	r3, [sp, #68]	; 0x44
   1257c:	str	r1, [fp, #-68]	; 0xffffffbc
   12580:	str	r0, [fp, #-60]	; 0xffffffc4
   12584:	eor	r0, r2, #1
   12588:	str	r0, [sp, #52]	; 0x34
   1258c:	cmn	lr, #1
   12590:	beq	125a0 <__mempcpy_chk@plt+0x14fc>
   12594:	cmp	r7, lr
   12598:	bne	125ac <__mempcpy_chk@plt+0x1508>
   1259c:	b	130d4 <__mempcpy_chk@plt+0x2030>
   125a0:	ldrb	r0, [ip, r7]
   125a4:	cmp	r0, #0
   125a8:	beq	130dc <__mempcpy_chk@plt+0x2038>
   125ac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   125b0:	mov	r9, #0
   125b4:	str	r5, [fp, #-48]	; 0xffffffd0
   125b8:	cmp	r0, #0
   125bc:	beq	125f0 <__mempcpy_chk@plt+0x154c>
   125c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   125c4:	add	r4, r7, r0
   125c8:	cmp	r0, #2
   125cc:	bcc	125e8 <__mempcpy_chk@plt+0x1544>
   125d0:	cmn	lr, #1
   125d4:	bne	125e8 <__mempcpy_chk@plt+0x1544>
   125d8:	mov	r0, ip
   125dc:	bl	10fa8 <strlen@plt>
   125e0:	ldr	ip, [fp, #-84]	; 0xffffffac
   125e4:	mov	lr, r0
   125e8:	cmp	r4, lr
   125ec:	bls	125f8 <__mempcpy_chk@plt+0x1554>
   125f0:	mov	r0, #0
   125f4:	b	12638 <__mempcpy_chk@plt+0x1594>
   125f8:	ldr	r1, [sp, #92]	; 0x5c
   125fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12600:	add	r0, ip, r7
   12604:	mov	r4, lr
   12608:	bl	10eac <memcmp@plt>
   1260c:	ldr	r2, [sp, #88]	; 0x58
   12610:	cmp	r0, #0
   12614:	mov	r1, r0
   12618:	movwne	r1, #1
   1261c:	orr	r1, r1, r2
   12620:	tst	r1, #1
   12624:	beq	1316c <__mempcpy_chk@plt+0x20c8>
   12628:	ldr	ip, [fp, #-84]	; 0xffffffac
   1262c:	clz	r0, r0
   12630:	mov	lr, r4
   12634:	lsr	r0, r0, #5
   12638:	str	r0, [fp, #-52]	; 0xffffffcc
   1263c:	ldrb	r5, [ip, r7]
   12640:	cmp	r5, #126	; 0x7e
   12644:	bhi	129fc <__mempcpy_chk@plt+0x1958>
   12648:	add	r3, pc, #16
   1264c:	mov	r4, #1
   12650:	mov	r2, #110	; 0x6e
   12654:	mov	r0, #97	; 0x61
   12658:	mov	r1, #0
   1265c:	ldr	pc, [r3, r5, lsl #2]
   12660:	strdeq	r2, [r1], -r8
   12664:	strdeq	r2, [r1], -ip
   12668:	strdeq	r2, [r1], -ip
   1266c:	strdeq	r2, [r1], -ip
   12670:	strdeq	r2, [r1], -ip
   12674:	strdeq	r2, [r1], -ip
   12678:	strdeq	r2, [r1], -ip
   1267c:			; <UNDEFINED> instruction: 0x00012ab0
   12680:	ldrdeq	r2, [r1], -r8
   12684:	ldrdeq	r2, [r1], -r0
   12688:	andeq	r2, r1, r4, ror #17
   1268c:	andeq	r2, r1, r4, ror #18
   12690:	andeq	r2, r1, r8, asr #17
   12694:	andeq	r2, r1, r0, ror #17
   12698:	strdeq	r2, [r1], -ip
   1269c:	strdeq	r2, [r1], -ip
   126a0:	strdeq	r2, [r1], -ip
   126a4:	strdeq	r2, [r1], -ip
   126a8:	strdeq	r2, [r1], -ip
   126ac:	strdeq	r2, [r1], -ip
   126b0:	strdeq	r2, [r1], -ip
   126b4:	strdeq	r2, [r1], -ip
   126b8:	strdeq	r2, [r1], -ip
   126bc:	strdeq	r2, [r1], -ip
   126c0:	strdeq	r2, [r1], -ip
   126c4:	strdeq	r2, [r1], -ip
   126c8:	strdeq	r2, [r1], -ip
   126cc:	strdeq	r2, [r1], -ip
   126d0:	strdeq	r2, [r1], -ip
   126d4:	strdeq	r2, [r1], -ip
   126d8:	strdeq	r2, [r1], -ip
   126dc:	strdeq	r2, [r1], -ip
   126e0:	andeq	r2, r1, r8, ror #20
   126e4:	andeq	r2, r1, ip, ror #20
   126e8:	andeq	r2, r1, ip, ror #20
   126ec:	andeq	r2, r1, r0, ror r8
   126f0:	andeq	r2, r1, ip, ror #20
   126f4:	andeq	r2, r1, ip, asr r8
   126f8:	andeq	r2, r1, ip, ror #20
   126fc:	andeq	r2, r1, ip, ror #18
   12700:	andeq	r2, r1, ip, ror #20
   12704:	andeq	r2, r1, ip, ror #20
   12708:	andeq	r2, r1, ip, ror #20
   1270c:	andeq	r2, r1, ip, asr r8
   12710:	andeq	r2, r1, ip, asr r8
   12714:	andeq	r2, r1, ip, asr r8
   12718:	andeq	r2, r1, ip, asr r8
   1271c:	andeq	r2, r1, ip, asr r8
   12720:	andeq	r2, r1, ip, asr r8
   12724:	andeq	r2, r1, ip, asr r8
   12728:	andeq	r2, r1, ip, asr r8
   1272c:	andeq	r2, r1, ip, asr r8
   12730:	andeq	r2, r1, ip, asr r8
   12734:	andeq	r2, r1, ip, asr r8
   12738:	andeq	r2, r1, ip, asr r8
   1273c:	andeq	r2, r1, ip, asr r8
   12740:	andeq	r2, r1, ip, asr r8
   12744:	andeq	r2, r1, ip, asr r8
   12748:	andeq	r2, r1, ip, asr r8
   1274c:	andeq	r2, r1, ip, ror #20
   12750:	andeq	r2, r1, ip, ror #20
   12754:	andeq	r2, r1, ip, ror #20
   12758:	andeq	r2, r1, ip, ror #20
   1275c:	andeq	r2, r1, r8, lsr r9
   12760:	strdeq	r2, [r1], -ip
   12764:	andeq	r2, r1, ip, asr r8
   12768:	andeq	r2, r1, ip, asr r8
   1276c:	andeq	r2, r1, ip, asr r8
   12770:	andeq	r2, r1, ip, asr r8
   12774:	andeq	r2, r1, ip, asr r8
   12778:	andeq	r2, r1, ip, asr r8
   1277c:	andeq	r2, r1, ip, asr r8
   12780:	andeq	r2, r1, ip, asr r8
   12784:	andeq	r2, r1, ip, asr r8
   12788:	andeq	r2, r1, ip, asr r8
   1278c:	andeq	r2, r1, ip, asr r8
   12790:	andeq	r2, r1, ip, asr r8
   12794:	andeq	r2, r1, ip, asr r8
   12798:	andeq	r2, r1, ip, asr r8
   1279c:	andeq	r2, r1, ip, asr r8
   127a0:	andeq	r2, r1, ip, asr r8
   127a4:	andeq	r2, r1, ip, asr r8
   127a8:	andeq	r2, r1, ip, asr r8
   127ac:	andeq	r2, r1, ip, asr r8
   127b0:	andeq	r2, r1, ip, asr r8
   127b4:	andeq	r2, r1, ip, asr r8
   127b8:	andeq	r2, r1, ip, asr r8
   127bc:	andeq	r2, r1, ip, asr r8
   127c0:	andeq	r2, r1, ip, asr r8
   127c4:	andeq	r2, r1, ip, asr r8
   127c8:	andeq	r2, r1, ip, asr r8
   127cc:	andeq	r2, r1, ip, ror #20
   127d0:	andeq	r2, r1, r4, lsr #17
   127d4:	andeq	r2, r1, ip, asr r8
   127d8:	andeq	r2, r1, ip, ror #20
   127dc:	andeq	r2, r1, ip, asr r8
   127e0:	andeq	r2, r1, ip, ror #20
   127e4:	andeq	r2, r1, ip, asr r8
   127e8:	andeq	r2, r1, ip, asr r8
   127ec:	andeq	r2, r1, ip, asr r8
   127f0:	andeq	r2, r1, ip, asr r8
   127f4:	andeq	r2, r1, ip, asr r8
   127f8:	andeq	r2, r1, ip, asr r8
   127fc:	andeq	r2, r1, ip, asr r8
   12800:	andeq	r2, r1, ip, asr r8
   12804:	andeq	r2, r1, ip, asr r8
   12808:	andeq	r2, r1, ip, asr r8
   1280c:	andeq	r2, r1, ip, asr r8
   12810:	andeq	r2, r1, ip, asr r8
   12814:	andeq	r2, r1, ip, asr r8
   12818:	andeq	r2, r1, ip, asr r8
   1281c:	andeq	r2, r1, ip, asr r8
   12820:	andeq	r2, r1, ip, asr r8
   12824:	andeq	r2, r1, ip, asr r8
   12828:	andeq	r2, r1, ip, asr r8
   1282c:	andeq	r2, r1, ip, asr r8
   12830:	andeq	r2, r1, ip, asr r8
   12834:	andeq	r2, r1, ip, asr r8
   12838:	andeq	r2, r1, ip, asr r8
   1283c:	andeq	r2, r1, ip, asr r8
   12840:	andeq	r2, r1, ip, asr r8
   12844:	andeq	r2, r1, ip, asr r8
   12848:	andeq	r2, r1, ip, asr r8
   1284c:	andeq	r2, r1, r4, lsl #17
   12850:	andeq	r2, r1, ip, ror #20
   12854:	andeq	r2, r1, r4, lsl #17
   12858:	andeq	r2, r1, r0, ror r8
   1285c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12860:	cmp	r0, #0
   12864:	beq	12ac4 <__mempcpy_chk@plt+0x1a20>
   12868:	ldr	r0, [fp, #16]
   1286c:	b	12ac8 <__mempcpy_chk@plt+0x1a24>
   12870:	mov	r4, #0
   12874:	cmp	r7, #0
   12878:	beq	12a68 <__mempcpy_chk@plt+0x19c4>
   1287c:	mov	r9, #0
   12880:	b	1285c <__mempcpy_chk@plt+0x17b8>
   12884:	mov	r4, #0
   12888:	cmn	lr, #1
   1288c:	beq	12a4c <__mempcpy_chk@plt+0x19a8>
   12890:	cmp	r7, #0
   12894:	bne	1287c <__mempcpy_chk@plt+0x17d8>
   12898:	cmp	lr, #1
   1289c:	beq	12a68 <__mempcpy_chk@plt+0x19c4>
   128a0:	b	1287c <__mempcpy_chk@plt+0x17d8>
   128a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   128a8:	cmp	r0, #2
   128ac:	bne	12a8c <__mempcpy_chk@plt+0x19e8>
   128b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   128b4:	tst	r0, #1
   128b8:	bne	13188 <__mempcpy_chk@plt+0x20e4>
   128bc:	mov	r9, #0
   128c0:	mov	r0, #92	; 0x5c
   128c4:	b	12aa0 <__mempcpy_chk@plt+0x19fc>
   128c8:	mov	r0, #102	; 0x66
   128cc:	b	12ab0 <__mempcpy_chk@plt+0x1a0c>
   128d0:	mov	r2, #116	; 0x74
   128d4:	b	128e4 <__mempcpy_chk@plt+0x1840>
   128d8:	mov	r0, #98	; 0x62
   128dc:	b	12ab0 <__mempcpy_chk@plt+0x1a0c>
   128e0:	mov	r2, #114	; 0x72
   128e4:	ldr	r0, [sp, #68]	; 0x44
   128e8:	tst	r0, #1
   128ec:	mov	r0, r2
   128f0:	bne	12ab0 <__mempcpy_chk@plt+0x1a0c>
   128f4:	b	13188 <__mempcpy_chk@plt+0x20e4>
   128f8:	ldr	r0, [sp, #84]	; 0x54
   128fc:	tst	r0, #1
   12900:	beq	12ba0 <__mempcpy_chk@plt+0x1afc>
   12904:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12908:	tst	r0, #1
   1290c:	bne	13298 <__mempcpy_chk@plt+0x21f4>
   12910:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12914:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12918:	cmp	r0, #2
   1291c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12920:	movwne	r0, #1
   12924:	orr	r0, r0, r2
   12928:	tst	r0, #1
   1292c:	beq	12f70 <__mempcpy_chk@plt+0x1ecc>
   12930:	mov	r0, r8
   12934:	b	12fa4 <__mempcpy_chk@plt+0x1f00>
   12938:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1293c:	mov	r9, #0
   12940:	mov	r5, #63	; 0x3f
   12944:	cmp	r0, #5
   12948:	beq	12d54 <__mempcpy_chk@plt+0x1cb0>
   1294c:	cmp	r0, #2
   12950:	bne	12df8 <__mempcpy_chk@plt+0x1d54>
   12954:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12958:	tst	r0, #1
   1295c:	beq	12dfc <__mempcpy_chk@plt+0x1d58>
   12960:	b	13188 <__mempcpy_chk@plt+0x20e4>
   12964:	mov	r0, #118	; 0x76
   12968:	b	12ab0 <__mempcpy_chk@plt+0x1a0c>
   1296c:	mov	r0, #1
   12970:	mov	r5, #39	; 0x27
   12974:	str	r0, [sp, #60]	; 0x3c
   12978:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1297c:	cmp	r0, #2
   12980:	bne	129f4 <__mempcpy_chk@plt+0x1950>
   12984:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12988:	tst	r0, #1
   1298c:	bne	13188 <__mempcpy_chk@plt+0x20e4>
   12990:	ldr	r2, [sp, #56]	; 0x38
   12994:	clz	r1, sl
   12998:	mov	r9, #0
   1299c:	lsr	r1, r1, #5
   129a0:	cmp	r2, #0
   129a4:	mov	r0, r2
   129a8:	movwne	r0, #1
   129ac:	orrs	r0, r0, r1
   129b0:	moveq	r2, sl
   129b4:	moveq	sl, r0
   129b8:	cmp	r8, sl
   129bc:	str	r2, [sp, #56]	; 0x38
   129c0:	movcc	r0, #39	; 0x27
   129c4:	strbcc	r0, [r6, r8]
   129c8:	add	r0, r8, #1
   129cc:	cmp	r0, sl
   129d0:	movcc	r1, #92	; 0x5c
   129d4:	strbcc	r1, [r6, r0]
   129d8:	add	r0, r8, #2
   129dc:	add	r8, r8, #3
   129e0:	cmp	r0, sl
   129e4:	movcc	r1, #39	; 0x27
   129e8:	strbcc	r1, [r6, r0]
   129ec:	mov	r0, #0
   129f0:	str	r0, [fp, #-56]	; 0xffffffc8
   129f4:	mov	r4, #1
   129f8:	b	1285c <__mempcpy_chk@plt+0x17b8>
   129fc:	ldr	r0, [sp, #40]	; 0x28
   12a00:	cmp	r0, #1
   12a04:	bne	12bcc <__mempcpy_chk@plt+0x1b28>
   12a08:	str	lr, [sp, #28]
   12a0c:	bl	10f90 <__ctype_b_loc@plt>
   12a10:	ldr	r0, [r0]
   12a14:	ldr	ip, [fp, #-84]	; 0xffffffac
   12a18:	mov	r1, #1
   12a1c:	add	r0, r0, r5, lsl #1
   12a20:	ldrb	r0, [r0, #1]
   12a24:	ubfx	r4, r0, #6, #1
   12a28:	ldr	r0, [sp, #52]	; 0x34
   12a2c:	mov	r2, r1
   12a30:	cmp	r1, #1
   12a34:	orr	r0, r4, r0
   12a38:	bhi	12e04 <__mempcpy_chk@plt+0x1d60>
   12a3c:	tst	r0, #1
   12a40:	beq	12e04 <__mempcpy_chk@plt+0x1d60>
   12a44:	ldr	lr, [sp, #28]
   12a48:	b	1285c <__mempcpy_chk@plt+0x17b8>
   12a4c:	cmp	r7, #0
   12a50:	ldrbeq	r0, [ip, #1]
   12a54:	cmpeq	r0, #0
   12a58:	beq	12a68 <__mempcpy_chk@plt+0x19c4>
   12a5c:	mvn	lr, #0
   12a60:	mov	r9, #0
   12a64:	b	1285c <__mempcpy_chk@plt+0x17b8>
   12a68:	mov	r1, #1
   12a6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12a70:	cmp	r0, #2
   12a74:	bne	12a84 <__mempcpy_chk@plt+0x19e0>
   12a78:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12a7c:	tst	r0, #1
   12a80:	bne	13188 <__mempcpy_chk@plt+0x20e4>
   12a84:	mov	r4, r1
   12a88:	b	1285c <__mempcpy_chk@plt+0x17b8>
   12a8c:	ldr	r1, [sp, #48]	; 0x30
   12a90:	mov	r9, #0
   12a94:	mov	r0, #92	; 0x5c
   12a98:	cmp	r1, #0
   12a9c:	beq	12ab0 <__mempcpy_chk@plt+0x1a0c>
   12aa0:	mov	r4, #0
   12aa4:	cmp	r9, #0
   12aa8:	beq	1303c <__mempcpy_chk@plt+0x1f98>
   12aac:	b	13078 <__mempcpy_chk@plt+0x1fd4>
   12ab0:	ldr	r1, [sp, #84]	; 0x54
   12ab4:	mov	r4, #0
   12ab8:	mov	r9, #0
   12abc:	tst	r1, #1
   12ac0:	bne	12b00 <__mempcpy_chk@plt+0x1a5c>
   12ac4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12ac8:	cmp	r0, #0
   12acc:	mov	r0, r5
   12ad0:	beq	12af4 <__mempcpy_chk@plt+0x1a50>
   12ad4:	ldr	r1, [fp, #16]
   12ad8:	ubfx	r0, r5, #5, #3
   12adc:	mov	r2, #1
   12ae0:	ldr	r0, [r1, r0, lsl #2]
   12ae4:	and	r1, r5, #31
   12ae8:	tst	r0, r2, lsl r1
   12aec:	mov	r0, r5
   12af0:	bne	12b00 <__mempcpy_chk@plt+0x1a5c>
   12af4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12af8:	cmp	r1, #0
   12afc:	beq	13034 <__mempcpy_chk@plt+0x1f90>
   12b00:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12b04:	tst	r1, #1
   12b08:	bne	13160 <__mempcpy_chk@plt+0x20bc>
   12b0c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12b10:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12b14:	cmp	r1, #2
   12b18:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12b1c:	movwne	r1, #1
   12b20:	orr	r1, r1, r2
   12b24:	tst	r1, #1
   12b28:	beq	12b34 <__mempcpy_chk@plt+0x1a90>
   12b2c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12b30:	b	12b70 <__mempcpy_chk@plt+0x1acc>
   12b34:	cmp	r8, sl
   12b38:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12b3c:	movcc	r1, #39	; 0x27
   12b40:	strbcc	r1, [r6, r8]
   12b44:	add	r1, r8, #1
   12b48:	cmp	r1, sl
   12b4c:	movcc	r2, #36	; 0x24
   12b50:	strbcc	r2, [r6, r1]
   12b54:	add	r1, r8, #2
   12b58:	add	r8, r8, #3
   12b5c:	cmp	r1, sl
   12b60:	movcc	r2, #39	; 0x27
   12b64:	strbcc	r2, [r6, r1]
   12b68:	mov	r1, #1
   12b6c:	str	r1, [fp, #-56]	; 0xffffffc8
   12b70:	cmp	r8, sl
   12b74:	movcc	r1, #92	; 0x5c
   12b78:	strbcc	r1, [r6, r8]
   12b7c:	add	r8, r8, #1
   12b80:	cmp	r8, sl
   12b84:	and	r5, r5, r4
   12b88:	add	r7, r7, #1
   12b8c:	strbcc	r0, [r6, r8]
   12b90:	add	r8, r8, #1
   12b94:	cmn	lr, #1
   12b98:	bne	12594 <__mempcpy_chk@plt+0x14f0>
   12b9c:	b	125a0 <__mempcpy_chk@plt+0x14fc>
   12ba0:	ldr	r0, [sp, #36]	; 0x24
   12ba4:	mov	r4, #0
   12ba8:	mov	r9, #0
   12bac:	mov	r5, #0
   12bb0:	cmp	r0, #0
   12bb4:	beq	12ac4 <__mempcpy_chk@plt+0x1a20>
   12bb8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12bbc:	add	r7, r7, #1
   12bc0:	cmn	lr, #1
   12bc4:	bne	12594 <__mempcpy_chk@plt+0x14f0>
   12bc8:	b	125a0 <__mempcpy_chk@plt+0x14fc>
   12bcc:	mov	r0, #0
   12bd0:	cmn	lr, #1
   12bd4:	str	r0, [fp, #-36]	; 0xffffffdc
   12bd8:	str	r0, [fp, #-40]	; 0xffffffd8
   12bdc:	bne	12bf0 <__mempcpy_chk@plt+0x1b4c>
   12be0:	mov	r0, ip
   12be4:	bl	10fa8 <strlen@plt>
   12be8:	ldr	ip, [fp, #-84]	; 0xffffffac
   12bec:	mov	lr, r0
   12bf0:	add	r0, ip, r7
   12bf4:	mov	r4, #1
   12bf8:	mov	r6, #0
   12bfc:	str	lr, [sp, #28]
   12c00:	str	r0, [sp, #24]
   12c04:	sub	r0, fp, #40	; 0x28
   12c08:	mov	r3, r0
   12c0c:	str	r6, [sp, #44]	; 0x2c
   12c10:	add	r6, r6, r7
   12c14:	sub	r0, fp, #44	; 0x2c
   12c18:	add	r1, ip, r6
   12c1c:	sub	r2, lr, r6
   12c20:	bl	14f3c <__mempcpy_chk@plt+0x3e98>
   12c24:	cmp	r0, #0
   12c28:	beq	130c0 <__mempcpy_chk@plt+0x201c>
   12c2c:	cmn	r0, #1
   12c30:	beq	13080 <__mempcpy_chk@plt+0x1fdc>
   12c34:	ldr	lr, [sp, #28]
   12c38:	cmn	r0, #2
   12c3c:	beq	13088 <__mempcpy_chk@plt+0x1fe4>
   12c40:	ldr	r2, [sp, #64]	; 0x40
   12c44:	cmp	r0, #2
   12c48:	mov	r1, #0
   12c4c:	movwcc	r1, #1
   12c50:	eor	r2, r2, #1
   12c54:	orrs	r1, r2, r1
   12c58:	bne	12d18 <__mempcpy_chk@plt+0x1c74>
   12c5c:	ldr	r1, [sp, #44]	; 0x2c
   12c60:	ldr	r2, [sp, #24]
   12c64:	add	r1, r2, r1
   12c68:	mov	r2, #1
   12c6c:	ldrb	r3, [r1, r2]
   12c70:	sub	r3, r3, #91	; 0x5b
   12c74:	cmp	r3, #33	; 0x21
   12c78:	bhi	12d0c <__mempcpy_chk@plt+0x1c68>
   12c7c:	add	r6, pc, #0
   12c80:	ldr	pc, [r6, r3, lsl #2]
   12c84:	andeq	r3, r1, r0, lsl #3
   12c88:	andeq	r3, r1, r0, lsl #3
   12c8c:	andeq	r2, r1, ip, lsl #26
   12c90:	andeq	r3, r1, r0, lsl #3
   12c94:	andeq	r2, r1, ip, lsl #26
   12c98:	andeq	r3, r1, r0, lsl #3
   12c9c:	andeq	r2, r1, ip, lsl #26
   12ca0:	andeq	r2, r1, ip, lsl #26
   12ca4:	andeq	r2, r1, ip, lsl #26
   12ca8:	andeq	r2, r1, ip, lsl #26
   12cac:	andeq	r2, r1, ip, lsl #26
   12cb0:	andeq	r2, r1, ip, lsl #26
   12cb4:	andeq	r2, r1, ip, lsl #26
   12cb8:	andeq	r2, r1, ip, lsl #26
   12cbc:	andeq	r2, r1, ip, lsl #26
   12cc0:	andeq	r2, r1, ip, lsl #26
   12cc4:	andeq	r2, r1, ip, lsl #26
   12cc8:	andeq	r2, r1, ip, lsl #26
   12ccc:	andeq	r2, r1, ip, lsl #26
   12cd0:	andeq	r2, r1, ip, lsl #26
   12cd4:	andeq	r2, r1, ip, lsl #26
   12cd8:	andeq	r2, r1, ip, lsl #26
   12cdc:	andeq	r2, r1, ip, lsl #26
   12ce0:	andeq	r2, r1, ip, lsl #26
   12ce4:	andeq	r2, r1, ip, lsl #26
   12ce8:	andeq	r2, r1, ip, lsl #26
   12cec:	andeq	r2, r1, ip, lsl #26
   12cf0:	andeq	r2, r1, ip, lsl #26
   12cf4:	andeq	r2, r1, ip, lsl #26
   12cf8:	andeq	r2, r1, ip, lsl #26
   12cfc:	andeq	r2, r1, ip, lsl #26
   12d00:	andeq	r2, r1, ip, lsl #26
   12d04:	andeq	r2, r1, ip, lsl #26
   12d08:	andeq	r3, r1, r0, lsl #3
   12d0c:	add	r2, r2, #1
   12d10:	cmp	r2, r0
   12d14:	bcc	12c6c <__mempcpy_chk@plt+0x1bc8>
   12d18:	ldr	r6, [sp, #44]	; 0x2c
   12d1c:	add	r6, r0, r6
   12d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d24:	bl	10edc <iswprint@plt>
   12d28:	cmp	r0, #0
   12d2c:	movwne	r0, #1
   12d30:	and	r4, r4, r0
   12d34:	sub	r0, fp, #40	; 0x28
   12d38:	bl	10ea0 <mbsinit@plt>
   12d3c:	ldr	lr, [sp, #28]
   12d40:	ldr	ip, [fp, #-84]	; 0xffffffac
   12d44:	sub	r3, fp, #40	; 0x28
   12d48:	cmp	r0, #0
   12d4c:	beq	12c0c <__mempcpy_chk@plt+0x1b68>
   12d50:	b	130c8 <__mempcpy_chk@plt+0x2024>
   12d54:	ldr	r0, [sp, #32]
   12d58:	cmp	r0, #0
   12d5c:	beq	12df8 <__mempcpy_chk@plt+0x1d54>
   12d60:	add	r0, r7, #2
   12d64:	cmp	r0, lr
   12d68:	bcs	12df8 <__mempcpy_chk@plt+0x1d54>
   12d6c:	add	r1, ip, r7
   12d70:	ldrb	r1, [r1, #1]
   12d74:	cmp	r1, #63	; 0x3f
   12d78:	bne	12df8 <__mempcpy_chk@plt+0x1d54>
   12d7c:	ldrb	r5, [ip, r0]
   12d80:	sub	r1, r5, #33	; 0x21
   12d84:	cmp	r1, #29
   12d88:	bhi	12df8 <__mempcpy_chk@plt+0x1d54>
   12d8c:	movw	r3, #20929	; 0x51c1
   12d90:	mov	r2, #1
   12d94:	movt	r3, #14336	; 0x3800
   12d98:	tst	r3, r2, lsl r1
   12d9c:	beq	12df8 <__mempcpy_chk@plt+0x1d54>
   12da0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12da4:	tst	r1, #1
   12da8:	bne	132a0 <__mempcpy_chk@plt+0x21fc>
   12dac:	cmp	r8, sl
   12db0:	mov	r7, r0
   12db4:	mov	r4, #0
   12db8:	movcc	r1, #63	; 0x3f
   12dbc:	strbcc	r1, [r6, r8]
   12dc0:	add	r1, r8, #1
   12dc4:	cmp	r1, sl
   12dc8:	movcc	r2, #34	; 0x22
   12dcc:	strbcc	r2, [r6, r1]
   12dd0:	add	r1, r8, #2
   12dd4:	cmp	r1, sl
   12dd8:	movcc	r2, #34	; 0x22
   12ddc:	strbcc	r2, [r6, r1]
   12de0:	add	r1, r8, #3
   12de4:	add	r8, r8, #4
   12de8:	cmp	r1, sl
   12dec:	movcc	r2, #63	; 0x3f
   12df0:	strbcc	r2, [r6, r1]
   12df4:	b	1285c <__mempcpy_chk@plt+0x17b8>
   12df8:	mov	r5, #63	; 0x3f
   12dfc:	mov	r4, #0
   12e00:	b	1285c <__mempcpy_chk@plt+0x17b8>
   12e04:	add	r1, r2, r7
   12e08:	ldr	lr, [sp, #28]
   12e0c:	mov	r3, #0
   12e10:	str	r1, [sp, #44]	; 0x2c
   12e14:	add	r1, r7, #1
   12e18:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12e1c:	tst	r0, #1
   12e20:	bne	12ef4 <__mempcpy_chk@plt+0x1e50>
   12e24:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12e28:	tst	r2, #1
   12e2c:	bne	131e8 <__mempcpy_chk@plt+0x2144>
   12e30:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12e34:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12e38:	cmp	r7, #2
   12e3c:	movwne	r3, #1
   12e40:	orr	r3, r3, r2
   12e44:	tst	r3, #1
   12e48:	bne	12e84 <__mempcpy_chk@plt+0x1de0>
   12e4c:	cmp	r8, sl
   12e50:	add	r3, r8, #1
   12e54:	movcc	r2, #39	; 0x27
   12e58:	strbcc	r2, [r6, r8]
   12e5c:	cmp	r3, sl
   12e60:	movcc	r2, #36	; 0x24
   12e64:	strbcc	r2, [r6, r3]
   12e68:	add	r3, r8, #2
   12e6c:	add	r8, r8, #3
   12e70:	cmp	r3, sl
   12e74:	movcc	r2, #39	; 0x27
   12e78:	strbcc	r2, [r6, r3]
   12e7c:	mov	r2, #1
   12e80:	str	r2, [fp, #-56]	; 0xffffffc8
   12e84:	cmp	r8, sl
   12e88:	movcc	r3, #92	; 0x5c
   12e8c:	strbcc	r3, [r6, r8]
   12e90:	add	r3, r8, #1
   12e94:	cmp	r3, sl
   12e98:	andcc	r7, r5, #192	; 0xc0
   12e9c:	movcc	r2, #48	; 0x30
   12ea0:	orrcc	r7, r2, r7, lsr #6
   12ea4:	strbcc	r7, [r6, r3]
   12ea8:	add	r3, r8, #2
   12eac:	add	r8, r8, #3
   12eb0:	cmp	r3, sl
   12eb4:	lsrcc	r7, r5, #3
   12eb8:	movcc	r2, #6
   12ebc:	bficc	r7, r2, #3, #29
   12ec0:	mov	r2, #6
   12ec4:	strbcc	r7, [r6, r3]
   12ec8:	bfi	r5, r2, #3, #29
   12ecc:	mov	r3, #1
   12ed0:	b	12f18 <__mempcpy_chk@plt+0x1e74>
   12ed4:	cmp	r8, sl
   12ed8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12edc:	strbcc	r5, [r6, r8]
   12ee0:	add	r8, r8, #1
   12ee4:	ldrb	r5, [ip, r1]
   12ee8:	add	r1, r1, #1
   12eec:	tst	r0, #1
   12ef0:	beq	12e24 <__mempcpy_chk@plt+0x1d80>
   12ef4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12ef8:	tst	r2, #1
   12efc:	beq	12f10 <__mempcpy_chk@plt+0x1e6c>
   12f00:	cmp	r8, sl
   12f04:	movcc	r7, #92	; 0x5c
   12f08:	strbcc	r7, [r6, r8]
   12f0c:	add	r8, r8, #1
   12f10:	mov	r2, #0
   12f14:	str	r2, [fp, #-52]	; 0xffffffcc
   12f18:	ldr	r2, [sp, #44]	; 0x2c
   12f1c:	and	r9, r3, #1
   12f20:	cmp	r2, r1
   12f24:	bls	13024 <__mempcpy_chk@plt+0x1f80>
   12f28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12f2c:	cmp	r9, #0
   12f30:	movwne	r9, #1
   12f34:	mvn	r7, r2
   12f38:	orr	r7, r7, r9
   12f3c:	tst	r7, #1
   12f40:	bne	12ed4 <__mempcpy_chk@plt+0x1e30>
   12f44:	cmp	r8, sl
   12f48:	movcc	r7, #39	; 0x27
   12f4c:	strbcc	r7, [r6, r8]
   12f50:	add	r7, r8, #1
   12f54:	add	r8, r8, #2
   12f58:	cmp	r7, sl
   12f5c:	movcc	r2, #39	; 0x27
   12f60:	strbcc	r2, [r6, r7]
   12f64:	mov	r2, #0
   12f68:	str	r2, [fp, #-56]	; 0xffffffc8
   12f6c:	b	12ed4 <__mempcpy_chk@plt+0x1e30>
   12f70:	cmp	r8, sl
   12f74:	mov	r2, #1
   12f78:	movcc	r0, #39	; 0x27
   12f7c:	strbcc	r0, [r6, r8]
   12f80:	add	r0, r8, #1
   12f84:	cmp	r0, sl
   12f88:	movcc	r1, #36	; 0x24
   12f8c:	strbcc	r1, [r6, r0]
   12f90:	add	r0, r8, #2
   12f94:	cmp	r0, sl
   12f98:	movcc	r1, #39	; 0x27
   12f9c:	strbcc	r1, [r6, r0]
   12fa0:	add	r0, r8, #3
   12fa4:	cmp	r0, sl
   12fa8:	add	r8, r0, #1
   12fac:	str	r2, [fp, #-56]	; 0xffffffc8
   12fb0:	movcc	r1, #92	; 0x5c
   12fb4:	strbcc	r1, [r6, r0]
   12fb8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12fbc:	cmp	r1, #2
   12fc0:	beq	13014 <__mempcpy_chk@plt+0x1f70>
   12fc4:	add	r1, r7, #1
   12fc8:	mov	r4, #0
   12fcc:	mov	r9, #1
   12fd0:	mov	r5, #48	; 0x30
   12fd4:	cmp	r1, lr
   12fd8:	bcs	1285c <__mempcpy_chk@plt+0x17b8>
   12fdc:	ldrb	r1, [ip, r1]
   12fe0:	sub	r1, r1, #48	; 0x30
   12fe4:	uxtb	r1, r1
   12fe8:	cmp	r1, #9
   12fec:	bhi	1285c <__mempcpy_chk@plt+0x17b8>
   12ff0:	cmp	r8, sl
   12ff4:	movcc	r1, #48	; 0x30
   12ff8:	strbcc	r1, [r6, r8]
   12ffc:	add	r1, r0, #2
   13000:	add	r8, r0, #3
   13004:	cmp	r1, sl
   13008:	movcc	r2, #48	; 0x30
   1300c:	strbcc	r2, [r6, r1]
   13010:	b	1285c <__mempcpy_chk@plt+0x17b8>
   13014:	mov	r0, #48	; 0x30
   13018:	mov	r9, #1
   1301c:	mov	r4, #0
   13020:	b	12af4 <__mempcpy_chk@plt+0x1a50>
   13024:	cmp	r9, #0
   13028:	sub	r7, r1, #1
   1302c:	mov	r0, r5
   13030:	movwne	r9, #1
   13034:	cmp	r9, #0
   13038:	bne	13078 <__mempcpy_chk@plt+0x1fd4>
   1303c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13040:	tst	r1, #1
   13044:	beq	13078 <__mempcpy_chk@plt+0x1fd4>
   13048:	cmp	r8, sl
   1304c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13050:	movcc	r1, #39	; 0x27
   13054:	strbcc	r1, [r6, r8]
   13058:	add	r1, r8, #1
   1305c:	add	r8, r8, #2
   13060:	cmp	r1, sl
   13064:	movcc	r2, #39	; 0x27
   13068:	strbcc	r2, [r6, r1]
   1306c:	mov	r1, #0
   13070:	str	r1, [fp, #-56]	; 0xffffffc8
   13074:	b	12b80 <__mempcpy_chk@plt+0x1adc>
   13078:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1307c:	b	12b80 <__mempcpy_chk@plt+0x1adc>
   13080:	mov	r4, #0
   13084:	b	130c0 <__mempcpy_chk@plt+0x201c>
   13088:	mov	r4, #0
   1308c:	cmp	lr, r6
   13090:	bls	130c0 <__mempcpy_chk@plt+0x201c>
   13094:	ldr	ip, [fp, #-84]	; 0xffffffac
   13098:	ldr	r6, [sp, #44]	; 0x2c
   1309c:	ldr	r0, [sp, #24]
   130a0:	ldrb	r0, [r0, r6]
   130a4:	cmp	r0, #0
   130a8:	beq	130c8 <__mempcpy_chk@plt+0x2024>
   130ac:	add	r6, r6, #1
   130b0:	add	r0, r7, r6
   130b4:	cmp	r0, lr
   130b8:	bcc	1309c <__mempcpy_chk@plt+0x1ff8>
   130bc:	b	130c8 <__mempcpy_chk@plt+0x2024>
   130c0:	ldr	ip, [fp, #-84]	; 0xffffffac
   130c4:	ldr	r6, [sp, #44]	; 0x2c
   130c8:	mov	r1, r6
   130cc:	ldr	r6, [sp, #80]	; 0x50
   130d0:	b	12a28 <__mempcpy_chk@plt+0x1984>
   130d4:	mov	lr, r7
   130d8:	b	130e0 <__mempcpy_chk@plt+0x203c>
   130dc:	mvn	lr, #0
   130e0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   130e4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   130e8:	eor	r0, r7, #2
   130ec:	orr	r0, r0, r8
   130f0:	clz	r0, r0
   130f4:	lsr	r0, r0, #5
   130f8:	tst	r1, r0
   130fc:	bne	13188 <__mempcpy_chk@plt+0x20e4>
   13100:	mov	r0, r1
   13104:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13108:	cmp	r7, #2
   1310c:	movwne	r1, #1
   13110:	orr	r0, r0, r1
   13114:	tst	r0, #1
   13118:	ldreq	r0, [sp, #60]	; 0x3c
   1311c:	eoreq	r0, r0, #1
   13120:	tsteq	r0, #1
   13124:	bne	13234 <__mempcpy_chk@plt+0x2190>
   13128:	mov	r9, lr
   1312c:	tst	r5, #1
   13130:	bne	131f0 <__mempcpy_chk@plt+0x214c>
   13134:	ldr	r6, [sp, #56]	; 0x38
   13138:	mov	r4, #0
   1313c:	cmp	r6, #0
   13140:	beq	1322c <__mempcpy_chk@plt+0x2188>
   13144:	ldr	r0, [sp, #84]	; 0x54
   13148:	mov	r1, #0
   1314c:	cmp	sl, #0
   13150:	mov	r5, #0
   13154:	str	r1, [fp, #-72]	; 0xffffffb8
   13158:	beq	12328 <__mempcpy_chk@plt+0x1284>
   1315c:	b	13234 <__mempcpy_chk@plt+0x2190>
   13160:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13164:	ldr	r2, [sp, #84]	; 0x54
   13168:	b	13190 <__mempcpy_chk@plt+0x20ec>
   1316c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13170:	mov	r2, #1
   13174:	mov	lr, r4
   13178:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1317c:	b	13190 <__mempcpy_chk@plt+0x20ec>
   13180:	ldr	r6, [sp, #80]	; 0x50
   13184:	ldr	ip, [fp, #-84]	; 0xffffffac
   13188:	ldr	r2, [sp, #84]	; 0x54
   1318c:	mov	r7, #2
   13190:	mov	r0, #0
   13194:	ldr	r1, [fp, #12]
   13198:	tst	r2, #1
   1319c:	mov	r2, r7
   131a0:	mov	r3, lr
   131a4:	str	r0, [sp, #8]
   131a8:	ldr	r0, [sp, #72]	; 0x48
   131ac:	movwne	r2, #4
   131b0:	cmp	r7, #2
   131b4:	movne	r2, r7
   131b8:	str	r2, [sp]
   131bc:	mov	r2, ip
   131c0:	bic	r1, r1, #2
   131c4:	str	r0, [sp, #12]
   131c8:	ldr	r0, [sp, #76]	; 0x4c
   131cc:	str	r1, [sp, #4]
   131d0:	mov	r1, sl
   131d4:	str	r0, [sp, #16]
   131d8:	mov	r0, r6
   131dc:	bl	122a8 <__mempcpy_chk@plt+0x1204>
   131e0:	mov	r8, r0
   131e4:	b	1328c <__mempcpy_chk@plt+0x21e8>
   131e8:	ldr	r2, [sp, #84]	; 0x54
   131ec:	b	13190 <__mempcpy_chk@plt+0x20ec>
   131f0:	mov	r0, #5
   131f4:	ldr	r1, [sp, #56]	; 0x38
   131f8:	ldr	r2, [fp, #-84]	; 0xffffffac
   131fc:	mov	r3, r9
   13200:	str	r0, [sp]
   13204:	ldr	r0, [fp, #12]
   13208:	str	r0, [sp, #4]
   1320c:	ldr	r0, [fp, #16]
   13210:	str	r0, [sp, #8]
   13214:	ldr	r0, [sp, #72]	; 0x48
   13218:	str	r0, [sp, #12]
   1321c:	ldr	r0, [sp, #76]	; 0x4c
   13220:	str	r0, [sp, #16]
   13224:	ldr	r0, [sp, #80]	; 0x50
   13228:	b	131dc <__mempcpy_chk@plt+0x2138>
   1322c:	mov	r0, #0
   13230:	str	r0, [fp, #-72]	; 0xffffffb8
   13234:	ldr	r1, [sp, #92]	; 0x5c
   13238:	cmp	r1, #0
   1323c:	beq	1327c <__mempcpy_chk@plt+0x21d8>
   13240:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13244:	ldr	r2, [sp, #80]	; 0x50
   13248:	tst	r0, #1
   1324c:	bne	13280 <__mempcpy_chk@plt+0x21dc>
   13250:	ldrb	r0, [r1]
   13254:	cmp	r0, #0
   13258:	beq	13280 <__mempcpy_chk@plt+0x21dc>
   1325c:	add	r1, r1, #1
   13260:	cmp	r8, sl
   13264:	strbcc	r0, [r2, r8]
   13268:	add	r8, r8, #1
   1326c:	ldrb	r0, [r1], #1
   13270:	cmp	r0, #0
   13274:	bne	13260 <__mempcpy_chk@plt+0x21bc>
   13278:	b	13280 <__mempcpy_chk@plt+0x21dc>
   1327c:	ldr	r2, [sp, #80]	; 0x50
   13280:	cmp	r8, sl
   13284:	movcc	r0, #0
   13288:	strbcc	r0, [r2, r8]
   1328c:	mov	r0, r8
   13290:	sub	sp, fp, #28
   13294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13298:	mov	r2, #1
   1329c:	b	13178 <__mempcpy_chk@plt+0x20d4>
   132a0:	ldr	r2, [sp, #84]	; 0x54
   132a4:	mov	r7, #5
   132a8:	b	13190 <__mempcpy_chk@plt+0x20ec>
   132ac:	bl	11074 <abort@plt>
   132b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132b4:	add	fp, sp, #28
   132b8:	sub	sp, sp, #28
   132bc:	movw	r5, #29032	; 0x7168
   132c0:	cmp	r2, #0
   132c4:	mov	r4, r1
   132c8:	mov	r7, r0
   132cc:	str	r0, [sp, #20]
   132d0:	movt	r5, #2
   132d4:	movne	r5, r2
   132d8:	bl	10fb4 <__errno_location@plt>
   132dc:	mov	sl, r0
   132e0:	ldm	r5, {r0, r1}
   132e4:	ldr	r2, [r5, #40]	; 0x28
   132e8:	ldr	r3, [r5, #44]	; 0x2c
   132ec:	add	r9, r5, #8
   132f0:	ldr	r6, [sl]
   132f4:	orr	r8, r1, #1
   132f8:	mov	r1, #0
   132fc:	str	r6, [sp, #24]
   13300:	stm	sp, {r0, r8, r9}
   13304:	str	r2, [sp, #12]
   13308:	str	r3, [sp, #16]
   1330c:	mov	r0, #0
   13310:	mov	r2, r7
   13314:	mov	r3, r4
   13318:	mov	r6, r4
   1331c:	bl	122a8 <__mempcpy_chk@plt+0x1204>
   13320:	add	r7, r0, #1
   13324:	mov	r0, r7
   13328:	bl	148b8 <__mempcpy_chk@plt+0x3814>
   1332c:	mov	r4, r0
   13330:	ldr	r0, [r5]
   13334:	ldr	r2, [r5, #44]	; 0x2c
   13338:	ldr	r1, [r5, #40]	; 0x28
   1333c:	mov	r3, r6
   13340:	stm	sp, {r0, r8, r9}
   13344:	str	r2, [sp, #16]
   13348:	str	r1, [sp, #12]
   1334c:	mov	r0, r4
   13350:	mov	r1, r7
   13354:	ldr	r2, [sp, #20]
   13358:	bl	122a8 <__mempcpy_chk@plt+0x1204>
   1335c:	ldr	r0, [sp, #24]
   13360:	str	r0, [sl]
   13364:	mov	r0, r4
   13368:	sub	sp, fp, #28
   1336c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13374:	add	fp, sp, #28
   13378:	sub	sp, sp, #36	; 0x24
   1337c:	movw	r8, #29032	; 0x7168
   13380:	cmp	r3, #0
   13384:	mov	r4, r2
   13388:	str	r2, [sp, #24]
   1338c:	mov	r5, r1
   13390:	mov	r6, r0
   13394:	str	r0, [sp, #20]
   13398:	movt	r8, #2
   1339c:	movne	r8, r3
   133a0:	bl	10fb4 <__errno_location@plt>
   133a4:	str	r0, [sp, #28]
   133a8:	cmp	r4, #0
   133ac:	add	sl, r8, #8
   133b0:	ldm	r8, {r3, r9}
   133b4:	ldr	r7, [r0]
   133b8:	ldr	r1, [r8, #40]	; 0x28
   133bc:	ldr	r2, [r8, #44]	; 0x2c
   133c0:	mov	r0, #0
   133c4:	orreq	r9, r9, #1
   133c8:	str	r7, [sp, #32]
   133cc:	mov	r7, r5
   133d0:	stm	sp, {r3, r9, sl}
   133d4:	str	r1, [sp, #12]
   133d8:	str	r2, [sp, #16]
   133dc:	mov	r1, #0
   133e0:	mov	r2, r6
   133e4:	mov	r3, r5
   133e8:	bl	122a8 <__mempcpy_chk@plt+0x1204>
   133ec:	add	r4, r0, #1
   133f0:	mov	r5, r0
   133f4:	mov	r0, r4
   133f8:	bl	148b8 <__mempcpy_chk@plt+0x3814>
   133fc:	mov	r6, r0
   13400:	ldr	r0, [r8]
   13404:	ldr	r2, [r8, #44]	; 0x2c
   13408:	ldr	r1, [r8, #40]	; 0x28
   1340c:	mov	r3, r7
   13410:	stm	sp, {r0, r9, sl}
   13414:	str	r2, [sp, #16]
   13418:	str	r1, [sp, #12]
   1341c:	mov	r0, r6
   13420:	mov	r1, r4
   13424:	ldr	r2, [sp, #20]
   13428:	bl	122a8 <__mempcpy_chk@plt+0x1204>
   1342c:	ldr	r0, [sp, #24]
   13430:	ldr	r1, [sp, #32]
   13434:	ldr	r2, [sp, #28]
   13438:	cmp	r0, #0
   1343c:	str	r1, [r2]
   13440:	strne	r5, [r0]
   13444:	mov	r0, r6
   13448:	sub	sp, fp, #28
   1344c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13450:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13454:	add	fp, sp, #24
   13458:	movw	r5, #28924	; 0x70fc
   1345c:	movw	r8, #28920	; 0x70f8
   13460:	movt	r5, #2
   13464:	movt	r8, #2
   13468:	ldr	r0, [r5]
   1346c:	ldr	r4, [r8]
   13470:	cmp	r0, #2
   13474:	blt	134a0 <__mempcpy_chk@plt+0x23fc>
   13478:	add	r7, r4, #12
   1347c:	mov	r6, #0
   13480:	ldr	r0, [r7, r6, lsl #3]
   13484:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   13488:	ldr	r1, [r5]
   1348c:	add	r2, r6, #2
   13490:	add	r0, r6, #1
   13494:	mov	r6, r0
   13498:	cmp	r2, r1
   1349c:	blt	13480 <__mempcpy_chk@plt+0x23dc>
   134a0:	ldr	r0, [r4, #4]
   134a4:	movw	r7, #29080	; 0x7198
   134a8:	movt	r7, #2
   134ac:	cmp	r0, r7
   134b0:	beq	134c8 <__mempcpy_chk@plt+0x2424>
   134b4:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   134b8:	movw	r0, #28928	; 0x7100
   134bc:	mov	r6, #256	; 0x100
   134c0:	movt	r0, #2
   134c4:	strd	r6, [r0]
   134c8:	movw	r6, #28928	; 0x7100
   134cc:	movt	r6, #2
   134d0:	cmp	r4, r6
   134d4:	beq	134e4 <__mempcpy_chk@plt+0x2440>
   134d8:	mov	r0, r4
   134dc:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   134e0:	str	r6, [r8]
   134e4:	mov	r0, #1
   134e8:	str	r0, [r5]
   134ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   134f0:	movw	r3, #29032	; 0x7168
   134f4:	mvn	r2, #0
   134f8:	movt	r3, #2
   134fc:	b	13500 <__mempcpy_chk@plt+0x245c>
   13500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13504:	add	fp, sp, #28
   13508:	sub	sp, sp, #44	; 0x2c
   1350c:	mov	r7, r3
   13510:	str	r2, [sp, #36]	; 0x24
   13514:	str	r1, [sp, #32]
   13518:	mov	r5, r0
   1351c:	bl	10fb4 <__errno_location@plt>
   13520:	cmp	r5, #0
   13524:	blt	13690 <__mempcpy_chk@plt+0x25ec>
   13528:	cmn	r5, #-2147483647	; 0x80000001
   1352c:	beq	13690 <__mempcpy_chk@plt+0x25ec>
   13530:	movw	r8, #28924	; 0x70fc
   13534:	movw	r4, #28920	; 0x70f8
   13538:	str	r0, [sp, #28]
   1353c:	ldr	r0, [r0]
   13540:	movt	r8, #2
   13544:	movt	r4, #2
   13548:	ldr	r1, [r8]
   1354c:	ldr	r6, [r4]
   13550:	str	r0, [sp, #24]
   13554:	cmp	r1, r5
   13558:	ble	13564 <__mempcpy_chk@plt+0x24c0>
   1355c:	mov	sl, r6
   13560:	b	135cc <__mempcpy_chk@plt+0x2528>
   13564:	movw	r9, #28928	; 0x7100
   13568:	mov	r0, #8
   1356c:	add	r2, r5, #1
   13570:	str	r1, [fp, #-32]	; 0xffffffe0
   13574:	mvn	r3, #-2147483648	; 0x80000000
   13578:	movt	r9, #2
   1357c:	str	r0, [sp]
   13580:	sub	r2, r2, r1
   13584:	sub	r1, fp, #32
   13588:	subs	r0, r6, r9
   1358c:	movne	r0, r6
   13590:	bl	14ab8 <__mempcpy_chk@plt+0x3a14>
   13594:	cmp	r6, r9
   13598:	mov	sl, r0
   1359c:	str	r0, [r4]
   135a0:	ldrdeq	r0, [r9]
   135a4:	stmeq	sl, {r0, r1}
   135a8:	ldr	r1, [r8]
   135ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   135b0:	add	r0, sl, r1, lsl #3
   135b4:	sub	r1, r2, r1
   135b8:	lsl	r2, r1, #3
   135bc:	mov	r1, #0
   135c0:	bl	10fd8 <memset@plt>
   135c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   135c8:	str	r0, [r8]
   135cc:	mov	r9, sl
   135d0:	ldr	r6, [r9, r5, lsl #3]!
   135d4:	ldr	r4, [r9, #4]!
   135d8:	ldm	r7, {r0, r1}
   135dc:	ldr	r2, [r7, #40]	; 0x28
   135e0:	ldr	r3, [r7, #44]	; 0x2c
   135e4:	orr	r8, r1, #1
   135e8:	add	r1, r7, #8
   135ec:	stm	sp, {r0, r8}
   135f0:	add	r0, sp, #8
   135f4:	str	r1, [sp, #20]
   135f8:	stm	r0, {r1, r2, r3}
   135fc:	mov	r0, r4
   13600:	mov	r1, r6
   13604:	ldr	r2, [sp, #32]
   13608:	ldr	r3, [sp, #36]	; 0x24
   1360c:	bl	122a8 <__mempcpy_chk@plt+0x1204>
   13610:	cmp	r6, r0
   13614:	bhi	13678 <__mempcpy_chk@plt+0x25d4>
   13618:	add	r6, r0, #1
   1361c:	movw	r0, #29080	; 0x7198
   13620:	movt	r0, #2
   13624:	str	r6, [sl, r5, lsl #3]
   13628:	cmp	r4, r0
   1362c:	beq	13638 <__mempcpy_chk@plt+0x2594>
   13630:	mov	r0, r4
   13634:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   13638:	mov	r0, r6
   1363c:	bl	148b8 <__mempcpy_chk@plt+0x3814>
   13640:	str	r0, [r9]
   13644:	mov	r4, r0
   13648:	add	r3, sp, #8
   1364c:	ldr	r0, [r7]
   13650:	ldr	r1, [r7, #40]	; 0x28
   13654:	ldr	r2, [r7, #44]	; 0x2c
   13658:	stm	sp, {r0, r8}
   1365c:	ldr	r0, [sp, #20]
   13660:	stm	r3, {r0, r1, r2}
   13664:	mov	r0, r4
   13668:	mov	r1, r6
   1366c:	ldr	r2, [sp, #32]
   13670:	ldr	r3, [sp, #36]	; 0x24
   13674:	bl	122a8 <__mempcpy_chk@plt+0x1204>
   13678:	ldr	r0, [sp, #28]
   1367c:	ldr	r1, [sp, #24]
   13680:	str	r1, [r0]
   13684:	mov	r0, r4
   13688:	sub	sp, fp, #28
   1368c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13690:	bl	11074 <abort@plt>
   13694:	movw	r3, #29032	; 0x7168
   13698:	movt	r3, #2
   1369c:	b	13500 <__mempcpy_chk@plt+0x245c>
   136a0:	movw	r3, #29032	; 0x7168
   136a4:	mov	r1, r0
   136a8:	mov	r0, #0
   136ac:	mvn	r2, #0
   136b0:	movt	r3, #2
   136b4:	b	13500 <__mempcpy_chk@plt+0x245c>
   136b8:	movw	r3, #29032	; 0x7168
   136bc:	mov	r2, r1
   136c0:	mov	r1, r0
   136c4:	mov	r0, #0
   136c8:	movt	r3, #2
   136cc:	b	13500 <__mempcpy_chk@plt+0x245c>
   136d0:	push	{fp, lr}
   136d4:	mov	fp, sp
   136d8:	sub	sp, sp, #48	; 0x30
   136dc:	vmov.i32	q8, #0	; 0x00000000
   136e0:	mov	ip, #32
   136e4:	mov	r3, sp
   136e8:	mov	lr, r2
   136ec:	cmp	r1, #10
   136f0:	add	r2, r3, #16
   136f4:	vst1.64	{d16-d17}, [r3], ip
   136f8:	vst1.64	{d16-d17}, [r3]
   136fc:	vst1.64	{d16-d17}, [r2]
   13700:	beq	13720 <__mempcpy_chk@plt+0x267c>
   13704:	str	r1, [sp]
   13708:	mov	r3, sp
   1370c:	mov	r1, lr
   13710:	mvn	r2, #0
   13714:	bl	13500 <__mempcpy_chk@plt+0x245c>
   13718:	mov	sp, fp
   1371c:	pop	{fp, pc}
   13720:	bl	11074 <abort@plt>
   13724:	push	{r4, sl, fp, lr}
   13728:	add	fp, sp, #8
   1372c:	sub	sp, sp, #48	; 0x30
   13730:	mov	ip, r3
   13734:	mov	r3, sp
   13738:	vmov.i32	q8, #0	; 0x00000000
   1373c:	mov	lr, #32
   13740:	cmp	r1, #10
   13744:	add	r4, r3, #16
   13748:	vst1.64	{d16-d17}, [r3], lr
   1374c:	vst1.64	{d16-d17}, [r3]
   13750:	vst1.64	{d16-d17}, [r4]
   13754:	beq	13774 <__mempcpy_chk@plt+0x26d0>
   13758:	str	r1, [sp]
   1375c:	mov	r1, r2
   13760:	mov	r3, sp
   13764:	mov	r2, ip
   13768:	bl	13500 <__mempcpy_chk@plt+0x245c>
   1376c:	sub	sp, fp, #8
   13770:	pop	{r4, sl, fp, pc}
   13774:	bl	11074 <abort@plt>
   13778:	push	{fp, lr}
   1377c:	mov	fp, sp
   13780:	sub	sp, sp, #48	; 0x30
   13784:	mov	r3, sp
   13788:	vmov.i32	q8, #0	; 0x00000000
   1378c:	mov	ip, #32
   13790:	cmp	r0, #10
   13794:	add	r2, r3, #16
   13798:	vst1.64	{d16-d17}, [r3], ip
   1379c:	vst1.64	{d16-d17}, [r3]
   137a0:	vst1.64	{d16-d17}, [r2]
   137a4:	beq	137c4 <__mempcpy_chk@plt+0x2720>
   137a8:	str	r0, [sp]
   137ac:	mov	r3, sp
   137b0:	mov	r0, #0
   137b4:	mvn	r2, #0
   137b8:	bl	13500 <__mempcpy_chk@plt+0x245c>
   137bc:	mov	sp, fp
   137c0:	pop	{fp, pc}
   137c4:	bl	11074 <abort@plt>
   137c8:	push	{fp, lr}
   137cc:	mov	fp, sp
   137d0:	sub	sp, sp, #48	; 0x30
   137d4:	mov	r3, sp
   137d8:	vmov.i32	q8, #0	; 0x00000000
   137dc:	mov	ip, #32
   137e0:	cmp	r0, #10
   137e4:	add	lr, r3, #16
   137e8:	vst1.64	{d16-d17}, [r3], ip
   137ec:	vst1.64	{d16-d17}, [r3]
   137f0:	vst1.64	{d16-d17}, [lr]
   137f4:	beq	13810 <__mempcpy_chk@plt+0x276c>
   137f8:	str	r0, [sp]
   137fc:	mov	r3, sp
   13800:	mov	r0, #0
   13804:	bl	13500 <__mempcpy_chk@plt+0x245c>
   13808:	mov	sp, fp
   1380c:	pop	{fp, pc}
   13810:	bl	11074 <abort@plt>
   13814:	push	{r4, sl, fp, lr}
   13818:	add	fp, sp, #8
   1381c:	sub	sp, sp, #48	; 0x30
   13820:	mov	lr, r0
   13824:	movw	r0, #29032	; 0x7168
   13828:	mov	r3, #32
   1382c:	mov	ip, r1
   13830:	mov	r4, #1
   13834:	movt	r0, #2
   13838:	add	r1, r0, #16
   1383c:	vld1.64	{d16-d17}, [r0], r3
   13840:	mov	r3, sp
   13844:	vld1.64	{d18-d19}, [r1]
   13848:	add	r1, r3, #16
   1384c:	vld1.64	{d20-d21}, [r0]
   13850:	add	r0, r3, #32
   13854:	vst1.64	{d18-d19}, [r1]
   13858:	mov	r1, r3
   1385c:	vst1.64	{d20-d21}, [r0]
   13860:	mov	r0, #28
   13864:	and	r0, r0, r2, lsr #3
   13868:	and	r2, r2, #31
   1386c:	vst1.64	{d16-d17}, [r1], r0
   13870:	ldr	r0, [r1, #8]
   13874:	bic	r4, r4, r0, lsr r2
   13878:	eor	r0, r0, r4, lsl r2
   1387c:	mov	r2, ip
   13880:	str	r0, [r1, #8]
   13884:	mov	r0, #0
   13888:	mov	r1, lr
   1388c:	bl	13500 <__mempcpy_chk@plt+0x245c>
   13890:	sub	sp, fp, #8
   13894:	pop	{r4, sl, fp, pc}
   13898:	push	{fp, lr}
   1389c:	mov	fp, sp
   138a0:	sub	sp, sp, #48	; 0x30
   138a4:	mov	ip, r0
   138a8:	movw	r0, #29032	; 0x7168
   138ac:	mov	r3, #32
   138b0:	movt	r0, #2
   138b4:	add	r2, r0, #16
   138b8:	vld1.64	{d16-d17}, [r0], r3
   138bc:	mov	r3, sp
   138c0:	vld1.64	{d18-d19}, [r2]
   138c4:	add	r2, r3, #16
   138c8:	vld1.64	{d20-d21}, [r0]
   138cc:	add	r0, r3, #32
   138d0:	vst1.64	{d18-d19}, [r2]
   138d4:	mov	r2, r3
   138d8:	vst1.64	{d20-d21}, [r0]
   138dc:	mov	r0, #28
   138e0:	and	r0, r0, r1, lsr #3
   138e4:	and	r1, r1, #31
   138e8:	vst1.64	{d16-d17}, [r2], r0
   138ec:	mov	r0, #1
   138f0:	ldr	lr, [r2, #8]
   138f4:	bic	r0, r0, lr, lsr r1
   138f8:	eor	r0, lr, r0, lsl r1
   138fc:	mov	r1, ip
   13900:	str	r0, [r2, #8]
   13904:	mov	r0, #0
   13908:	mvn	r2, #0
   1390c:	bl	13500 <__mempcpy_chk@plt+0x245c>
   13910:	mov	sp, fp
   13914:	pop	{fp, pc}
   13918:	push	{fp, lr}
   1391c:	mov	fp, sp
   13920:	sub	sp, sp, #48	; 0x30
   13924:	movw	r2, #29032	; 0x7168
   13928:	mov	r3, #32
   1392c:	mov	r1, r0
   13930:	movt	r2, #2
   13934:	add	r0, r2, #16
   13938:	vld1.64	{d16-d17}, [r2], r3
   1393c:	mov	r3, sp
   13940:	vld1.64	{d18-d19}, [r0]
   13944:	add	r0, r3, #16
   13948:	vld1.64	{d20-d21}, [r2]
   1394c:	mov	r2, r3
   13950:	vst1.64	{d18-d19}, [r0]
   13954:	add	r0, r3, #32
   13958:	vst1.64	{d20-d21}, [r0]
   1395c:	mov	r0, #12
   13960:	vst1.64	{d16-d17}, [r2], r0
   13964:	ldr	r0, [r2]
   13968:	orr	r0, r0, #67108864	; 0x4000000
   1396c:	str	r0, [r2]
   13970:	mov	r0, #0
   13974:	mvn	r2, #0
   13978:	bl	13500 <__mempcpy_chk@plt+0x245c>
   1397c:	mov	sp, fp
   13980:	pop	{fp, pc}
   13984:	push	{fp, lr}
   13988:	mov	fp, sp
   1398c:	sub	sp, sp, #48	; 0x30
   13990:	mov	ip, r1
   13994:	mov	r1, r0
   13998:	movw	r0, #29032	; 0x7168
   1399c:	mov	r3, #32
   139a0:	movt	r0, #2
   139a4:	add	r2, r0, #16
   139a8:	vld1.64	{d16-d17}, [r0], r3
   139ac:	mov	r3, sp
   139b0:	vld1.64	{d18-d19}, [r2]
   139b4:	add	r2, r3, #16
   139b8:	vld1.64	{d20-d21}, [r0]
   139bc:	add	r0, r3, #32
   139c0:	vst1.64	{d18-d19}, [r2]
   139c4:	mov	r2, r3
   139c8:	vst1.64	{d20-d21}, [r0]
   139cc:	mov	r0, #12
   139d0:	vst1.64	{d16-d17}, [r2], r0
   139d4:	ldr	r0, [r2]
   139d8:	orr	r0, r0, #67108864	; 0x4000000
   139dc:	str	r0, [r2]
   139e0:	mov	r0, #0
   139e4:	mov	r2, ip
   139e8:	bl	13500 <__mempcpy_chk@plt+0x245c>
   139ec:	mov	sp, fp
   139f0:	pop	{fp, pc}
   139f4:	push	{r4, sl, fp, lr}
   139f8:	add	fp, sp, #8
   139fc:	sub	sp, sp, #96	; 0x60
   13a00:	mov	ip, r2
   13a04:	mov	r2, sp
   13a08:	vmov.i32	q8, #0	; 0x00000000
   13a0c:	mov	r4, #28
   13a10:	cmp	r1, #10
   13a14:	mov	r3, r2
   13a18:	add	lr, r2, #16
   13a1c:	vst1.64	{d16-d17}, [r3], r4
   13a20:	vst1.64	{d16-d17}, [lr]
   13a24:	vst1.32	{d16-d17}, [r3]
   13a28:	beq	13a78 <__mempcpy_chk@plt+0x29d4>
   13a2c:	vld1.64	{d16-d17}, [r2], r4
   13a30:	vld1.64	{d18-d19}, [lr]
   13a34:	add	r3, sp, #48	; 0x30
   13a38:	add	r4, r3, #4
   13a3c:	vld1.32	{d20-d21}, [r2]
   13a40:	add	r2, r3, #20
   13a44:	vst1.32	{d16-d17}, [r4]
   13a48:	vst1.32	{d18-d19}, [r2]
   13a4c:	add	r2, r3, #32
   13a50:	vst1.32	{d20-d21}, [r2]
   13a54:	str	r1, [sp, #48]	; 0x30
   13a58:	mvn	r2, #0
   13a5c:	ldr	r1, [sp, #60]	; 0x3c
   13a60:	orr	r1, r1, #67108864	; 0x4000000
   13a64:	str	r1, [sp, #60]	; 0x3c
   13a68:	mov	r1, ip
   13a6c:	bl	13500 <__mempcpy_chk@plt+0x245c>
   13a70:	sub	sp, fp, #8
   13a74:	pop	{r4, sl, fp, pc}
   13a78:	bl	11074 <abort@plt>
   13a7c:	push	{r4, r5, fp, lr}
   13a80:	add	fp, sp, #8
   13a84:	sub	sp, sp, #48	; 0x30
   13a88:	mov	ip, r3
   13a8c:	movw	r3, #29032	; 0x7168
   13a90:	mov	lr, #32
   13a94:	cmp	r1, #0
   13a98:	mov	r5, sp
   13a9c:	movt	r3, #2
   13aa0:	cmpne	r2, #0
   13aa4:	add	r4, r3, #16
   13aa8:	vld1.64	{d16-d17}, [r3], lr
   13aac:	vld1.64	{d18-d19}, [r4]
   13ab0:	add	r4, r5, #16
   13ab4:	vld1.64	{d20-d21}, [r3]
   13ab8:	vst1.64	{d16-d17}, [r5], lr
   13abc:	mov	r3, #10
   13ac0:	vst1.64	{d18-d19}, [r4]
   13ac4:	vst1.64	{d20-d21}, [r5]
   13ac8:	str	r3, [sp]
   13acc:	bne	13ad4 <__mempcpy_chk@plt+0x2a30>
   13ad0:	bl	11074 <abort@plt>
   13ad4:	str	r2, [sp, #44]	; 0x2c
   13ad8:	str	r1, [sp, #40]	; 0x28
   13adc:	mov	r3, sp
   13ae0:	mov	r1, ip
   13ae4:	mvn	r2, #0
   13ae8:	bl	13500 <__mempcpy_chk@plt+0x245c>
   13aec:	sub	sp, fp, #8
   13af0:	pop	{r4, r5, fp, pc}
   13af4:	push	{r4, r5, fp, lr}
   13af8:	add	fp, sp, #8
   13afc:	sub	sp, sp, #48	; 0x30
   13b00:	mov	lr, r3
   13b04:	movw	r3, #29032	; 0x7168
   13b08:	mov	ip, #32
   13b0c:	cmp	r1, #0
   13b10:	mov	r5, sp
   13b14:	movt	r3, #2
   13b18:	cmpne	r2, #0
   13b1c:	add	r4, r3, #16
   13b20:	vld1.64	{d16-d17}, [r3], ip
   13b24:	vld1.64	{d18-d19}, [r4]
   13b28:	add	r4, r5, #16
   13b2c:	vld1.64	{d20-d21}, [r3]
   13b30:	vst1.64	{d16-d17}, [r5], ip
   13b34:	mov	r3, #10
   13b38:	vst1.64	{d18-d19}, [r4]
   13b3c:	vst1.64	{d20-d21}, [r5]
   13b40:	str	r3, [sp]
   13b44:	bne	13b4c <__mempcpy_chk@plt+0x2aa8>
   13b48:	bl	11074 <abort@plt>
   13b4c:	ldr	ip, [fp, #8]
   13b50:	str	r2, [sp, #44]	; 0x2c
   13b54:	str	r1, [sp, #40]	; 0x28
   13b58:	mov	r3, sp
   13b5c:	mov	r1, lr
   13b60:	mov	r2, ip
   13b64:	bl	13500 <__mempcpy_chk@plt+0x245c>
   13b68:	sub	sp, fp, #8
   13b6c:	pop	{r4, r5, fp, pc}
   13b70:	push	{r4, sl, fp, lr}
   13b74:	add	fp, sp, #8
   13b78:	sub	sp, sp, #48	; 0x30
   13b7c:	mov	ip, r2
   13b80:	movw	r2, #29032	; 0x7168
   13b84:	mov	lr, #32
   13b88:	cmp	r0, #0
   13b8c:	mov	r4, sp
   13b90:	movt	r2, #2
   13b94:	cmpne	r1, #0
   13b98:	add	r3, r2, #16
   13b9c:	vld1.64	{d16-d17}, [r2], lr
   13ba0:	vld1.64	{d18-d19}, [r3]
   13ba4:	add	r3, r4, #16
   13ba8:	vld1.64	{d20-d21}, [r2]
   13bac:	vst1.64	{d16-d17}, [r4], lr
   13bb0:	mov	r2, #10
   13bb4:	vst1.64	{d18-d19}, [r3]
   13bb8:	vst1.64	{d20-d21}, [r4]
   13bbc:	str	r2, [sp]
   13bc0:	bne	13bc8 <__mempcpy_chk@plt+0x2b24>
   13bc4:	bl	11074 <abort@plt>
   13bc8:	str	r1, [sp, #44]	; 0x2c
   13bcc:	str	r0, [sp, #40]	; 0x28
   13bd0:	mov	r3, sp
   13bd4:	mov	r0, #0
   13bd8:	mov	r1, ip
   13bdc:	mvn	r2, #0
   13be0:	bl	13500 <__mempcpy_chk@plt+0x245c>
   13be4:	sub	sp, fp, #8
   13be8:	pop	{r4, sl, fp, pc}
   13bec:	push	{r4, r5, fp, lr}
   13bf0:	add	fp, sp, #8
   13bf4:	sub	sp, sp, #48	; 0x30
   13bf8:	mov	lr, r2
   13bfc:	movw	r2, #29032	; 0x7168
   13c00:	mov	ip, r3
   13c04:	mov	r3, #32
   13c08:	cmp	r0, #0
   13c0c:	mov	r5, sp
   13c10:	movt	r2, #2
   13c14:	cmpne	r1, #0
   13c18:	add	r4, r2, #16
   13c1c:	vld1.64	{d16-d17}, [r2], r3
   13c20:	vld1.64	{d18-d19}, [r4]
   13c24:	add	r4, r5, #16
   13c28:	vld1.64	{d20-d21}, [r2]
   13c2c:	vst1.64	{d16-d17}, [r5], r3
   13c30:	mov	r2, #10
   13c34:	vst1.64	{d18-d19}, [r4]
   13c38:	vst1.64	{d20-d21}, [r5]
   13c3c:	str	r2, [sp]
   13c40:	bne	13c48 <__mempcpy_chk@plt+0x2ba4>
   13c44:	bl	11074 <abort@plt>
   13c48:	str	r1, [sp, #44]	; 0x2c
   13c4c:	str	r0, [sp, #40]	; 0x28
   13c50:	mov	r3, sp
   13c54:	mov	r0, #0
   13c58:	mov	r1, lr
   13c5c:	mov	r2, ip
   13c60:	bl	13500 <__mempcpy_chk@plt+0x245c>
   13c64:	sub	sp, fp, #8
   13c68:	pop	{r4, r5, fp, pc}
   13c6c:	movw	r3, #28936	; 0x7108
   13c70:	movt	r3, #2
   13c74:	b	13500 <__mempcpy_chk@plt+0x245c>
   13c78:	movw	r3, #28936	; 0x7108
   13c7c:	mov	r2, r1
   13c80:	mov	r1, r0
   13c84:	mov	r0, #0
   13c88:	movt	r3, #2
   13c8c:	b	13500 <__mempcpy_chk@plt+0x245c>
   13c90:	movw	r3, #28936	; 0x7108
   13c94:	mvn	r2, #0
   13c98:	movt	r3, #2
   13c9c:	b	13500 <__mempcpy_chk@plt+0x245c>
   13ca0:	movw	r3, #28936	; 0x7108
   13ca4:	mov	r1, r0
   13ca8:	mov	r0, #0
   13cac:	mvn	r2, #0
   13cb0:	movt	r3, #2
   13cb4:	b	13500 <__mempcpy_chk@plt+0x245c>
   13cb8:	push	{r4, r5, fp, lr}
   13cbc:	add	fp, sp, #8
   13cc0:	mov	r5, r0
   13cc4:	mov	r4, r1
   13cc8:	mov	r0, #0
   13ccc:	mov	r2, #5
   13cd0:	mov	r1, r5
   13cd4:	bl	10eb8 <dcgettext@plt>
   13cd8:	cmp	r0, r5
   13cdc:	popne	{r4, r5, fp, pc}
   13ce0:	bl	14f04 <__mempcpy_chk@plt+0x3e60>
   13ce4:	ldrb	r1, [r0]
   13ce8:	and	r1, r1, #223	; 0xdf
   13cec:	cmp	r1, #71	; 0x47
   13cf0:	beq	13d58 <__mempcpy_chk@plt+0x2cb4>
   13cf4:	cmp	r1, #85	; 0x55
   13cf8:	bne	13d7c <__mempcpy_chk@plt+0x2cd8>
   13cfc:	ldrb	r1, [r0, #1]
   13d00:	and	r1, r1, #223	; 0xdf
   13d04:	cmp	r1, #84	; 0x54
   13d08:	bne	13d7c <__mempcpy_chk@plt+0x2cd8>
   13d0c:	ldrb	r1, [r0, #2]
   13d10:	and	r1, r1, #223	; 0xdf
   13d14:	cmp	r1, #70	; 0x46
   13d18:	ldrbeq	r1, [r0, #3]
   13d1c:	cmpeq	r1, #45	; 0x2d
   13d20:	bne	13d7c <__mempcpy_chk@plt+0x2cd8>
   13d24:	ldrb	r1, [r0, #4]
   13d28:	cmp	r1, #56	; 0x38
   13d2c:	ldrbeq	r0, [r0, #5]
   13d30:	cmpeq	r0, #0
   13d34:	bne	13d7c <__mempcpy_chk@plt+0x2cd8>
   13d38:	ldrb	r1, [r5]
   13d3c:	movw	r2, #23782	; 0x5ce6
   13d40:	movw	r0, #23786	; 0x5cea
   13d44:	movt	r2, #1
   13d48:	movt	r0, #1
   13d4c:	cmp	r1, #96	; 0x60
   13d50:	moveq	r0, r2
   13d54:	pop	{r4, r5, fp, pc}
   13d58:	ldrb	r1, [r0, #1]
   13d5c:	and	r1, r1, #223	; 0xdf
   13d60:	cmp	r1, #66	; 0x42
   13d64:	bne	13d7c <__mempcpy_chk@plt+0x2cd8>
   13d68:	ldrb	r1, [r0, #2]
   13d6c:	cmp	r1, #49	; 0x31
   13d70:	ldrbeq	r1, [r0, #3]
   13d74:	cmpeq	r1, #56	; 0x38
   13d78:	beq	13d98 <__mempcpy_chk@plt+0x2cf4>
   13d7c:	movw	r1, #23776	; 0x5ce0
   13d80:	movw	r0, #23780	; 0x5ce4
   13d84:	cmp	r4, #9
   13d88:	movt	r1, #1
   13d8c:	movt	r0, #1
   13d90:	moveq	r0, r1
   13d94:	pop	{r4, r5, fp, pc}
   13d98:	ldrb	r1, [r0, #4]
   13d9c:	cmp	r1, #48	; 0x30
   13da0:	ldrbeq	r1, [r0, #5]
   13da4:	cmpeq	r1, #51	; 0x33
   13da8:	bne	13d7c <__mempcpy_chk@plt+0x2cd8>
   13dac:	ldrb	r1, [r0, #6]
   13db0:	cmp	r1, #48	; 0x30
   13db4:	ldrbeq	r0, [r0, #7]
   13db8:	cmpeq	r0, #0
   13dbc:	bne	13d7c <__mempcpy_chk@plt+0x2cd8>
   13dc0:	ldrb	r1, [r5]
   13dc4:	movw	r2, #23790	; 0x5cee
   13dc8:	movw	r0, #23794	; 0x5cf2
   13dcc:	movt	r2, #1
   13dd0:	movt	r0, #1
   13dd4:	b	13d4c <__mempcpy_chk@plt+0x2ca8>
   13dd8:	push	{fp, lr}
   13ddc:	mov	fp, sp
   13de0:	sub	sp, sp, #8
   13de4:	str	r2, [sp, #4]
   13de8:	ldr	r2, [fp, #8]
   13dec:	str	r2, [sp]
   13df0:	movw	r2, #23884	; 0x5d4c
   13df4:	movt	r2, #1
   13df8:	ldr	r3, [r2, r3, lsl #2]
   13dfc:	add	r2, sp, #4
   13e00:	bl	13e78 <__mempcpy_chk@plt+0x2dd4>
   13e04:	mov	sp, fp
   13e08:	pop	{fp, pc}
   13e0c:	ldr	r1, [r1]
   13e10:	mov	r2, #384	; 0x180
   13e14:	bic	r1, r1, #195	; 0xc3
   13e18:	orr	r1, r1, #194	; 0xc2
   13e1c:	b	10f30 <open64@plt>
   13e20:	mov	r1, #448	; 0x1c0
   13e24:	b	10fcc <mkdir@plt>
   13e28:	push	{r4, sl, fp, lr}
   13e2c:	add	fp, sp, #8
   13e30:	sub	sp, sp, #104	; 0x68
   13e34:	mov	r1, r0
   13e38:	mov	r2, sp
   13e3c:	mov	r0, #3
   13e40:	bl	1108c <__lxstat64@plt>
   13e44:	mov	r4, r0
   13e48:	bl	10fb4 <__errno_location@plt>
   13e4c:	cmp	r4, #0
   13e50:	ldrne	r1, [r0]
   13e54:	cmpne	r1, #75	; 0x4b
   13e58:	bne	13e64 <__mempcpy_chk@plt+0x2dc0>
   13e5c:	mov	r1, #17
   13e60:	str	r1, [r0]
   13e64:	ldr	r0, [r0]
   13e68:	subs	r0, r0, #2
   13e6c:	mvnne	r0, #0
   13e70:	sub	sp, fp, #8
   13e74:	pop	{r4, sl, fp, pc}
   13e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e7c:	add	fp, sp, #28
   13e80:	sub	sp, sp, #68	; 0x44
   13e84:	mov	r5, r3
   13e88:	mov	r9, r2
   13e8c:	mov	r4, r1
   13e90:	mov	r7, r0
   13e94:	bl	10fb4 <__errno_location@plt>
   13e98:	str	r0, [sp, #20]
   13e9c:	ldr	sl, [r0]
   13ea0:	mov	r0, #0
   13ea4:	str	r0, [sp, #44]	; 0x2c
   13ea8:	add	r0, sp, #40	; 0x28
   13eac:	lsr	r0, r0, #3
   13eb0:	str	r0, [sp, #40]	; 0x28
   13eb4:	ldr	r0, [fp, #8]
   13eb8:	add	r6, r0, r4
   13ebc:	mov	r0, r7
   13ec0:	bl	10fa8 <strlen@plt>
   13ec4:	mvn	r8, #0
   13ec8:	mov	r4, #22
   13ecc:	cmp	r0, r6
   13ed0:	bcc	14160 <__mempcpy_chk@plt+0x30bc>
   13ed4:	sub	r0, r0, r6
   13ed8:	movw	r1, #22752	; 0x58e0
   13edc:	add	r6, r7, r0
   13ee0:	movt	r1, #1
   13ee4:	mov	r0, r6
   13ee8:	bl	11098 <strspn@plt>
   13eec:	ldr	r1, [fp, #8]
   13ef0:	cmp	r0, r1
   13ef4:	bcc	14160 <__mempcpy_chk@plt+0x30bc>
   13ef8:	movw	r0, #15912	; 0x3e28
   13efc:	movw	r4, #39131	; 0x98db
   13f00:	str	r6, [sp, #32]
   13f04:	movw	r6, #21503	; 0x53ff
   13f08:	mov	r3, #0
   13f0c:	mov	r2, #0
   13f10:	str	sl, [sp, #4]
   13f14:	str	r7, [sp, #8]
   13f18:	str	r5, [sp, #16]
   13f1c:	str	r9, [sp, #12]
   13f20:	movt	r0, #1
   13f24:	movt	r4, #62617	; 0xf499
   13f28:	movt	r6, #2727	; 0xaa7
   13f2c:	sub	r0, r5, r0
   13f30:	clz	r0, r0
   13f34:	lsr	r0, r0, #5
   13f38:	str	r0, [sp, #28]
   13f3c:	cmp	r1, #0
   13f40:	str	r2, [sp, #24]
   13f44:	beq	140fc <__mempcpy_chk@plt+0x3058>
   13f48:	mov	sl, #0
   13f4c:	sub	r5, fp, #40	; 0x28
   13f50:	ldr	r8, [sp, #40]	; 0x28
   13f54:	ldr	r9, [sp, #44]	; 0x2c
   13f58:	cmp	r3, #0
   13f5c:	beq	13f68 <__mempcpy_chk@plt+0x2ec4>
   13f60:	str	r3, [sp, #36]	; 0x24
   13f64:	b	140ac <__mempcpy_chk@plt+0x3008>
   13f68:	ldr	r0, [sp, #28]
   13f6c:	tst	r0, #1
   13f70:	beq	13f98 <__mempcpy_chk@plt+0x2ef4>
   13f74:	mov	r0, r5
   13f78:	mov	r1, #8
   13f7c:	mov	r2, #1
   13f80:	bl	1105c <getrandom@plt>
   13f84:	cmp	r0, #8
   13f88:	bne	13f98 <__mempcpy_chk@plt+0x2ef4>
   13f8c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   13f90:	ldr	r9, [fp, #-36]	; 0xffffffdc
   13f94:	b	13fe0 <__mempcpy_chk@plt+0x2f3c>
   13f98:	mov	r0, #1
   13f9c:	add	r1, sp, #48	; 0x30
   13fa0:	bl	10e7c <clock_gettime@plt>
   13fa4:	ldr	r0, [sp, #52]	; 0x34
   13fa8:	movw	r2, #45309	; 0xb0fd
   13fac:	movw	r7, #12006	; 0x2ee6
   13fb0:	movt	r2, #34736	; 0x87b0
   13fb4:	movt	r7, #10171	; 0x27bb
   13fb8:	mov	ip, r2
   13fbc:	eor	r1, r8, r0
   13fc0:	eor	r0, r9, r0, asr #31
   13fc4:	umull	r2, r3, r1, r2
   13fc8:	mul	r0, r0, ip
   13fcc:	mla	r1, r1, r7, r3
   13fd0:	movw	r3, #62253	; 0xf32d
   13fd4:	movt	r3, #46340	; 0xb504
   13fd8:	adds	r8, r2, r3
   13fdc:	adc	r9, r1, r0
   13fe0:	subs	r0, r6, r8
   13fe4:	str	r8, [sp, #40]	; 0x28
   13fe8:	str	r9, [sp, #44]	; 0x2c
   13fec:	sbcs	r0, r4, r9
   13ff0:	bcs	1409c <__mempcpy_chk@plt+0x2ff8>
   13ff4:	mov	r0, #10
   13ff8:	str	r0, [sp, #36]	; 0x24
   13ffc:	mov	r0, #1
   14000:	str	r0, [sp, #28]
   14004:	mov	r0, r5
   14008:	mov	r1, #8
   1400c:	mov	r2, #1
   14010:	bl	1105c <getrandom@plt>
   14014:	cmp	r0, #8
   14018:	bne	14028 <__mempcpy_chk@plt+0x2f84>
   1401c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   14020:	ldr	r9, [fp, #-36]	; 0xffffffdc
   14024:	b	14084 <__mempcpy_chk@plt+0x2fe0>
   14028:	mov	r0, #1
   1402c:	add	r1, sp, #48	; 0x30
   14030:	bl	10e7c <clock_gettime@plt>
   14034:	ldr	r0, [sp, #52]	; 0x34
   14038:	movw	r2, #45309	; 0xb0fd
   1403c:	mov	r7, r6
   14040:	mov	r6, r4
   14044:	movw	r4, #12006	; 0x2ee6
   14048:	movt	r2, #34736	; 0x87b0
   1404c:	movt	r4, #10171	; 0x27bb
   14050:	mov	r5, r2
   14054:	eor	r1, r8, r0
   14058:	eor	r0, r9, r0, asr #31
   1405c:	umull	r2, r3, r1, r2
   14060:	mul	r0, r0, r5
   14064:	sub	r5, fp, #40	; 0x28
   14068:	mla	r1, r1, r4, r3
   1406c:	movw	r3, #62253	; 0xf32d
   14070:	mov	r4, r6
   14074:	mov	r6, r7
   14078:	movt	r3, #46340	; 0xb504
   1407c:	adds	r8, r2, r3
   14080:	adc	r9, r1, r0
   14084:	subs	r0, r6, r8
   14088:	str	r8, [sp, #40]	; 0x28
   1408c:	str	r9, [sp, #44]	; 0x2c
   14090:	sbcs	r0, r4, r9
   14094:	bcc	14004 <__mempcpy_chk@plt+0x2f60>
   14098:	b	140ac <__mempcpy_chk@plt+0x3008>
   1409c:	mov	r0, #10
   140a0:	str	r0, [sp, #36]	; 0x24
   140a4:	mov	r0, #1
   140a8:	str	r0, [sp, #28]
   140ac:	mov	r0, r8
   140b0:	mov	r1, r9
   140b4:	mov	r2, #62	; 0x3e
   140b8:	mov	r3, #0
   140bc:	bl	150e0 <__mempcpy_chk@plt+0x403c>
   140c0:	rsb	r2, r0, r0, lsl #5
   140c4:	movw	r3, #23896	; 0x5d58
   140c8:	sub	r2, r8, r2, lsl #1
   140cc:	movt	r3, #1
   140d0:	ldrb	r2, [r3, r2]
   140d4:	ldr	r3, [sp, #32]
   140d8:	strb	r2, [r3, sl]
   140dc:	ldr	r3, [sp, #36]	; 0x24
   140e0:	str	r0, [sp, #40]	; 0x28
   140e4:	ldr	r0, [fp, #8]
   140e8:	add	sl, sl, #1
   140ec:	str	r1, [sp, #44]	; 0x2c
   140f0:	sub	r3, r3, #1
   140f4:	cmp	sl, r0
   140f8:	bne	13f50 <__mempcpy_chk@plt+0x2eac>
   140fc:	ldr	r9, [sp, #12]
   14100:	ldr	r0, [sp, #8]
   14104:	ldr	r5, [sp, #16]
   14108:	mov	r7, r3
   1410c:	mov	r1, r9
   14110:	blx	r5
   14114:	cmn	r0, #1
   14118:	bgt	14158 <__mempcpy_chk@plt+0x30b4>
   1411c:	ldr	r0, [sp, #20]
   14120:	ldr	r0, [r0]
   14124:	cmp	r0, #17
   14128:	bne	14174 <__mempcpy_chk@plt+0x30d0>
   1412c:	ldr	r2, [sp, #24]
   14130:	ldr	r1, [fp, #8]
   14134:	movw	r0, #41719	; 0xa2f7
   14138:	mov	r3, r7
   1413c:	movt	r0, #3
   14140:	add	r2, r2, #1
   14144:	cmp	r2, r0
   14148:	bls	13f3c <__mempcpy_chk@plt+0x2e98>
   1414c:	mvn	r8, #0
   14150:	mov	r4, #17
   14154:	b	14160 <__mempcpy_chk@plt+0x30bc>
   14158:	ldr	r4, [sp, #4]
   1415c:	mov	r8, r0
   14160:	ldr	r0, [sp, #20]
   14164:	str	r4, [r0]
   14168:	mov	r0, r8
   1416c:	sub	sp, fp, #28
   14170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14174:	mvn	r8, #0
   14178:	b	14168 <__mempcpy_chk@plt+0x30c4>
   1417c:	push	{fp, lr}
   14180:	mov	fp, sp
   14184:	sub	sp, sp, #8
   14188:	str	r2, [sp, #4]
   1418c:	mov	r2, #6
   14190:	str	r2, [sp]
   14194:	movw	r2, #23884	; 0x5d4c
   14198:	movt	r2, #1
   1419c:	ldr	r3, [r2, r3, lsl #2]
   141a0:	add	r2, sp, #4
   141a4:	bl	13e78 <__mempcpy_chk@plt+0x2dd4>
   141a8:	mov	sp, fp
   141ac:	pop	{fp, pc}
   141b0:	push	{fp, lr}
   141b4:	mov	fp, sp
   141b8:	sub	sp, sp, #8
   141bc:	mov	ip, #6
   141c0:	str	ip, [sp]
   141c4:	bl	13e78 <__mempcpy_chk@plt+0x2dd4>
   141c8:	mov	sp, fp
   141cc:	pop	{fp, pc}
   141d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141d4:	add	fp, sp, #24
   141d8:	sub	sp, sp, #32
   141dc:	ldr	r6, [fp, #12]
   141e0:	ldr	r7, [fp, #8]
   141e4:	mov	r4, r2
   141e8:	mov	r8, r0
   141ec:	cmp	r1, #0
   141f0:	beq	14218 <__mempcpy_chk@plt+0x3174>
   141f4:	movw	r2, #23959	; 0x5d97
   141f8:	mov	r5, r1
   141fc:	str	r3, [sp, #4]
   14200:	str	r4, [sp]
   14204:	mov	r0, r8
   14208:	mov	r1, #1
   1420c:	movt	r2, #1
   14210:	mov	r3, r5
   14214:	b	14230 <__mempcpy_chk@plt+0x318c>
   14218:	movw	r2, #23971	; 0x5da3
   1421c:	str	r3, [sp]
   14220:	mov	r0, r8
   14224:	mov	r1, #1
   14228:	mov	r3, r4
   1422c:	movt	r2, #1
   14230:	bl	10ffc <__fprintf_chk@plt>
   14234:	movw	r1, #23978	; 0x5daa
   14238:	mov	r0, #0
   1423c:	mov	r2, #5
   14240:	movt	r1, #1
   14244:	bl	10eb8 <dcgettext@plt>
   14248:	movw	r2, #24696	; 0x6078
   1424c:	mov	r3, r0
   14250:	movw	r0, #2022	; 0x7e6
   14254:	mov	r1, #1
   14258:	str	r0, [sp]
   1425c:	movt	r2, #1
   14260:	mov	r0, r8
   14264:	bl	10ffc <__fprintf_chk@plt>
   14268:	movw	r4, #23354	; 0x5b3a
   1426c:	mov	r1, r8
   14270:	movt	r4, #1
   14274:	mov	r0, r4
   14278:	bl	10e40 <fputs_unlocked@plt>
   1427c:	movw	r1, #23982	; 0x5dae
   14280:	mov	r0, #0
   14284:	mov	r2, #5
   14288:	movt	r1, #1
   1428c:	bl	10eb8 <dcgettext@plt>
   14290:	movw	r3, #24153	; 0x5e59
   14294:	mov	r2, r0
   14298:	mov	r0, r8
   1429c:	mov	r1, #1
   142a0:	movt	r3, #1
   142a4:	bl	10ffc <__fprintf_chk@plt>
   142a8:	mov	r0, r4
   142ac:	mov	r1, r8
   142b0:	bl	10e40 <fputs_unlocked@plt>
   142b4:	cmp	r6, #9
   142b8:	bhi	142f4 <__mempcpy_chk@plt+0x3250>
   142bc:	add	r0, pc, #0
   142c0:	ldr	pc, [r0, r6, lsl #2]
   142c4:	andeq	r4, r1, ip, ror #5
   142c8:	andeq	r4, r1, r0, lsl #6
   142cc:	andeq	r4, r1, r0, lsr r3
   142d0:	andeq	r4, r1, r8, asr r3
   142d4:	andeq	r4, r1, r0, lsl #7
   142d8:	andeq	r4, r1, r8, lsr #7
   142dc:	ldrdeq	r4, [r1], -r0
   142e0:	andeq	r4, r1, r8, lsl #8
   142e4:	andeq	r4, r1, r8, lsr #9
   142e8:	andeq	r4, r1, r0, asr r4
   142ec:	sub	sp, fp, #24
   142f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   142f4:	movw	r1, #24506	; 0x5fba
   142f8:	movt	r1, #1
   142fc:	b	14458 <__mempcpy_chk@plt+0x33b4>
   14300:	movw	r1, #24187	; 0x5e7b
   14304:	mov	r0, #0
   14308:	mov	r2, #5
   1430c:	movt	r1, #1
   14310:	bl	10eb8 <dcgettext@plt>
   14314:	ldr	r3, [r7]
   14318:	mov	r2, r0
   1431c:	mov	r0, r8
   14320:	mov	r1, #1
   14324:	sub	sp, fp, #24
   14328:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1432c:	b	10ffc <__fprintf_chk@plt>
   14330:	movw	r1, #24203	; 0x5e8b
   14334:	mov	r0, #0
   14338:	mov	r2, #5
   1433c:	movt	r1, #1
   14340:	bl	10eb8 <dcgettext@plt>
   14344:	mov	r2, r0
   14348:	ldr	r3, [r7]
   1434c:	ldr	r0, [r7, #4]
   14350:	str	r0, [sp]
   14354:	b	14444 <__mempcpy_chk@plt+0x33a0>
   14358:	movw	r1, #24226	; 0x5ea2
   1435c:	mov	r0, #0
   14360:	mov	r2, #5
   14364:	movt	r1, #1
   14368:	bl	10eb8 <dcgettext@plt>
   1436c:	ldr	r3, [r7]
   14370:	mov	r2, r0
   14374:	ldmib	r7, {r0, r1}
   14378:	stm	sp, {r0, r1}
   1437c:	b	14444 <__mempcpy_chk@plt+0x33a0>
   14380:	movw	r1, #24254	; 0x5ebe
   14384:	mov	r0, #0
   14388:	mov	r2, #5
   1438c:	movt	r1, #1
   14390:	bl	10eb8 <dcgettext@plt>
   14394:	ldr	r3, [r7]
   14398:	mov	r2, r0
   1439c:	ldmib	r7, {r0, r1, r7}
   143a0:	stm	sp, {r0, r1, r7}
   143a4:	b	14444 <__mempcpy_chk@plt+0x33a0>
   143a8:	movw	r1, #24286	; 0x5ede
   143ac:	mov	r0, #0
   143b0:	mov	r2, #5
   143b4:	movt	r1, #1
   143b8:	bl	10eb8 <dcgettext@plt>
   143bc:	ldr	r3, [r7]
   143c0:	mov	r2, r0
   143c4:	ldmib	r7, {r0, r1, r6, r7}
   143c8:	stm	sp, {r0, r1, r6, r7}
   143cc:	b	14444 <__mempcpy_chk@plt+0x33a0>
   143d0:	movw	r1, #24322	; 0x5f02
   143d4:	mov	r0, #0
   143d8:	mov	r2, #5
   143dc:	movt	r1, #1
   143e0:	bl	10eb8 <dcgettext@plt>
   143e4:	ldr	r3, [r7]
   143e8:	mov	r2, r0
   143ec:	ldmib	r7, {r0, r1, r6}
   143f0:	ldr	r5, [r7, #16]
   143f4:	ldr	r7, [r7, #20]
   143f8:	stm	sp, {r0, r1, r6}
   143fc:	str	r5, [sp, #12]
   14400:	str	r7, [sp, #16]
   14404:	b	14444 <__mempcpy_chk@plt+0x33a0>
   14408:	movw	r1, #24362	; 0x5f2a
   1440c:	mov	r0, #0
   14410:	mov	r2, #5
   14414:	movt	r1, #1
   14418:	bl	10eb8 <dcgettext@plt>
   1441c:	ldr	r3, [r7]
   14420:	mov	r2, r0
   14424:	ldmib	r7, {r0, r1, r6}
   14428:	ldr	r5, [r7, #16]
   1442c:	ldr	r4, [r7, #20]
   14430:	ldr	r7, [r7, #24]
   14434:	stm	sp, {r0, r1, r6}
   14438:	str	r5, [sp, #12]
   1443c:	str	r4, [sp, #16]
   14440:	str	r7, [sp, #20]
   14444:	mov	r0, r8
   14448:	mov	r1, #1
   1444c:	b	144f8 <__mempcpy_chk@plt+0x3454>
   14450:	movw	r1, #24454	; 0x5f86
   14454:	movt	r1, #1
   14458:	mov	r0, #0
   1445c:	mov	r2, #5
   14460:	bl	10eb8 <dcgettext@plt>
   14464:	mov	ip, r0
   14468:	ldr	r3, [r7]
   1446c:	ldr	r0, [r7, #4]
   14470:	ldr	r1, [r7, #8]
   14474:	ldr	r6, [r7, #12]
   14478:	ldr	r5, [r7, #16]
   1447c:	ldr	r4, [r7, #20]
   14480:	ldr	r2, [r7, #24]
   14484:	ldr	lr, [r7, #28]
   14488:	ldr	r7, [r7, #32]
   1448c:	stm	sp, {r0, r1, r6}
   14490:	str	r5, [sp, #12]
   14494:	str	r4, [sp, #16]
   14498:	str	r2, [sp, #20]
   1449c:	str	lr, [sp, #24]
   144a0:	str	r7, [sp, #28]
   144a4:	b	144ec <__mempcpy_chk@plt+0x3448>
   144a8:	movw	r1, #24406	; 0x5f56
   144ac:	mov	r0, #0
   144b0:	mov	r2, #5
   144b4:	movt	r1, #1
   144b8:	bl	10eb8 <dcgettext@plt>
   144bc:	mov	ip, r0
   144c0:	ldr	r3, [r7]
   144c4:	ldmib	r7, {r0, r1, r6}
   144c8:	ldr	r5, [r7, #16]
   144cc:	ldr	r4, [r7, #20]
   144d0:	ldr	r2, [r7, #24]
   144d4:	ldr	r7, [r7, #28]
   144d8:	stm	sp, {r0, r1, r6}
   144dc:	str	r5, [sp, #12]
   144e0:	str	r4, [sp, #16]
   144e4:	str	r2, [sp, #20]
   144e8:	str	r7, [sp, #24]
   144ec:	mov	r0, r8
   144f0:	mov	r1, #1
   144f4:	mov	r2, ip
   144f8:	bl	10ffc <__fprintf_chk@plt>
   144fc:	sub	sp, fp, #24
   14500:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14504:	push	{r4, sl, fp, lr}
   14508:	add	fp, sp, #8
   1450c:	sub	sp, sp, #8
   14510:	ldr	ip, [fp, #8]
   14514:	mov	lr, #0
   14518:	ldr	r4, [ip, lr, lsl #2]
   1451c:	add	lr, lr, #1
   14520:	cmp	r4, #0
   14524:	bne	14518 <__mempcpy_chk@plt+0x3474>
   14528:	sub	r4, lr, #1
   1452c:	str	ip, [sp]
   14530:	str	r4, [sp, #4]
   14534:	bl	141d0 <__mempcpy_chk@plt+0x312c>
   14538:	sub	sp, fp, #8
   1453c:	pop	{r4, sl, fp, pc}
   14540:	push	{fp, lr}
   14544:	mov	fp, sp
   14548:	sub	sp, sp, #48	; 0x30
   1454c:	ldr	ip, [fp, #8]
   14550:	ldr	lr, [ip]
   14554:	cmp	lr, #0
   14558:	str	lr, [sp, #8]
   1455c:	beq	145f8 <__mempcpy_chk@plt+0x3554>
   14560:	ldr	lr, [ip, #4]
   14564:	cmp	lr, #0
   14568:	str	lr, [sp, #12]
   1456c:	beq	14600 <__mempcpy_chk@plt+0x355c>
   14570:	ldr	lr, [ip, #8]
   14574:	cmp	lr, #0
   14578:	str	lr, [sp, #16]
   1457c:	beq	14608 <__mempcpy_chk@plt+0x3564>
   14580:	ldr	lr, [ip, #12]
   14584:	cmp	lr, #0
   14588:	str	lr, [sp, #20]
   1458c:	beq	14610 <__mempcpy_chk@plt+0x356c>
   14590:	ldr	lr, [ip, #16]
   14594:	cmp	lr, #0
   14598:	str	lr, [sp, #24]
   1459c:	beq	14618 <__mempcpy_chk@plt+0x3574>
   145a0:	ldr	lr, [ip, #20]
   145a4:	cmp	lr, #0
   145a8:	str	lr, [sp, #28]
   145ac:	beq	14620 <__mempcpy_chk@plt+0x357c>
   145b0:	ldr	lr, [ip, #24]
   145b4:	cmp	lr, #0
   145b8:	str	lr, [sp, #32]
   145bc:	beq	14628 <__mempcpy_chk@plt+0x3584>
   145c0:	ldr	lr, [ip, #28]
   145c4:	cmp	lr, #0
   145c8:	str	lr, [sp, #36]	; 0x24
   145cc:	beq	14630 <__mempcpy_chk@plt+0x358c>
   145d0:	ldr	lr, [ip, #32]
   145d4:	cmp	lr, #0
   145d8:	str	lr, [sp, #40]	; 0x28
   145dc:	beq	14638 <__mempcpy_chk@plt+0x3594>
   145e0:	ldr	lr, [ip, #36]	; 0x24
   145e4:	mov	ip, #10
   145e8:	cmp	lr, #0
   145ec:	str	lr, [sp, #44]	; 0x2c
   145f0:	movweq	ip, #9
   145f4:	b	1463c <__mempcpy_chk@plt+0x3598>
   145f8:	mov	ip, #0
   145fc:	b	1463c <__mempcpy_chk@plt+0x3598>
   14600:	mov	ip, #1
   14604:	b	1463c <__mempcpy_chk@plt+0x3598>
   14608:	mov	ip, #2
   1460c:	b	1463c <__mempcpy_chk@plt+0x3598>
   14610:	mov	ip, #3
   14614:	b	1463c <__mempcpy_chk@plt+0x3598>
   14618:	mov	ip, #4
   1461c:	b	1463c <__mempcpy_chk@plt+0x3598>
   14620:	mov	ip, #5
   14624:	b	1463c <__mempcpy_chk@plt+0x3598>
   14628:	mov	ip, #6
   1462c:	b	1463c <__mempcpy_chk@plt+0x3598>
   14630:	mov	ip, #7
   14634:	b	1463c <__mempcpy_chk@plt+0x3598>
   14638:	mov	ip, #8
   1463c:	add	lr, sp, #8
   14640:	str	ip, [sp, #4]
   14644:	str	lr, [sp]
   14648:	bl	141d0 <__mempcpy_chk@plt+0x312c>
   1464c:	mov	sp, fp
   14650:	pop	{fp, pc}
   14654:	push	{fp, lr}
   14658:	mov	fp, sp
   1465c:	sub	sp, sp, #56	; 0x38
   14660:	add	ip, fp, #8
   14664:	str	ip, [sp, #12]
   14668:	ldr	lr, [fp, #8]
   1466c:	cmp	lr, #0
   14670:	str	lr, [sp, #16]
   14674:	beq	14710 <__mempcpy_chk@plt+0x366c>
   14678:	ldr	lr, [ip, #4]
   1467c:	cmp	lr, #0
   14680:	str	lr, [sp, #20]
   14684:	beq	14718 <__mempcpy_chk@plt+0x3674>
   14688:	ldr	lr, [ip, #8]
   1468c:	cmp	lr, #0
   14690:	str	lr, [sp, #24]
   14694:	beq	14720 <__mempcpy_chk@plt+0x367c>
   14698:	ldr	lr, [ip, #12]
   1469c:	cmp	lr, #0
   146a0:	str	lr, [sp, #28]
   146a4:	beq	14728 <__mempcpy_chk@plt+0x3684>
   146a8:	ldr	lr, [ip, #16]
   146ac:	cmp	lr, #0
   146b0:	str	lr, [sp, #32]
   146b4:	beq	14730 <__mempcpy_chk@plt+0x368c>
   146b8:	ldr	lr, [ip, #20]
   146bc:	cmp	lr, #0
   146c0:	str	lr, [sp, #36]	; 0x24
   146c4:	beq	14738 <__mempcpy_chk@plt+0x3694>
   146c8:	ldr	lr, [ip, #24]
   146cc:	cmp	lr, #0
   146d0:	str	lr, [sp, #40]	; 0x28
   146d4:	beq	14740 <__mempcpy_chk@plt+0x369c>
   146d8:	ldr	lr, [ip, #28]
   146dc:	cmp	lr, #0
   146e0:	str	lr, [sp, #44]	; 0x2c
   146e4:	beq	14748 <__mempcpy_chk@plt+0x36a4>
   146e8:	ldr	lr, [ip, #32]
   146ec:	cmp	lr, #0
   146f0:	str	lr, [sp, #48]	; 0x30
   146f4:	beq	14750 <__mempcpy_chk@plt+0x36ac>
   146f8:	ldr	lr, [ip, #36]	; 0x24
   146fc:	mov	ip, #10
   14700:	cmp	lr, #0
   14704:	str	lr, [sp, #52]	; 0x34
   14708:	movweq	ip, #9
   1470c:	b	14754 <__mempcpy_chk@plt+0x36b0>
   14710:	mov	ip, #0
   14714:	b	14754 <__mempcpy_chk@plt+0x36b0>
   14718:	mov	ip, #1
   1471c:	b	14754 <__mempcpy_chk@plt+0x36b0>
   14720:	mov	ip, #2
   14724:	b	14754 <__mempcpy_chk@plt+0x36b0>
   14728:	mov	ip, #3
   1472c:	b	14754 <__mempcpy_chk@plt+0x36b0>
   14730:	mov	ip, #4
   14734:	b	14754 <__mempcpy_chk@plt+0x36b0>
   14738:	mov	ip, #5
   1473c:	b	14754 <__mempcpy_chk@plt+0x36b0>
   14740:	mov	ip, #6
   14744:	b	14754 <__mempcpy_chk@plt+0x36b0>
   14748:	mov	ip, #7
   1474c:	b	14754 <__mempcpy_chk@plt+0x36b0>
   14750:	mov	ip, #8
   14754:	add	lr, sp, #16
   14758:	str	ip, [sp, #4]
   1475c:	str	lr, [sp]
   14760:	bl	141d0 <__mempcpy_chk@plt+0x312c>
   14764:	mov	sp, fp
   14768:	pop	{fp, pc}
   1476c:	push	{fp, lr}
   14770:	mov	fp, sp
   14774:	movw	r0, #29004	; 0x714c
   14778:	movt	r0, #2
   1477c:	ldr	r1, [r0]
   14780:	movw	r0, #23354	; 0x5b3a
   14784:	movt	r0, #1
   14788:	bl	10e40 <fputs_unlocked@plt>
   1478c:	movw	r1, #24566	; 0x5ff6
   14790:	mov	r0, #0
   14794:	mov	r2, #5
   14798:	movt	r1, #1
   1479c:	bl	10eb8 <dcgettext@plt>
   147a0:	movw	r2, #24586	; 0x600a
   147a4:	mov	r1, r0
   147a8:	mov	r0, #1
   147ac:	movt	r2, #1
   147b0:	bl	10fe4 <__printf_chk@plt>
   147b4:	movw	r1, #24608	; 0x6020
   147b8:	mov	r0, #0
   147bc:	mov	r2, #5
   147c0:	movt	r1, #1
   147c4:	bl	10eb8 <dcgettext@plt>
   147c8:	movw	r2, #22656	; 0x5880
   147cc:	movw	r3, #23163	; 0x5a7b
   147d0:	mov	r1, r0
   147d4:	mov	r0, #1
   147d8:	movt	r2, #1
   147dc:	movt	r3, #1
   147e0:	bl	10fe4 <__printf_chk@plt>
   147e4:	movw	r1, #24628	; 0x6034
   147e8:	mov	r0, #0
   147ec:	mov	r2, #5
   147f0:	movt	r1, #1
   147f4:	bl	10eb8 <dcgettext@plt>
   147f8:	movw	r2, #24667	; 0x605b
   147fc:	mov	r1, r0
   14800:	mov	r0, #1
   14804:	movt	r2, #1
   14808:	pop	{fp, lr}
   1480c:	b	10fe4 <__printf_chk@plt>
   14810:	push	{r4, r5, r6, sl, fp, lr}
   14814:	add	fp, sp, #16
   14818:	mov	r4, r2
   1481c:	mov	r5, r1
   14820:	mov	r6, r0
   14824:	bl	14f9c <__mempcpy_chk@plt+0x3ef8>
   14828:	cmp	r0, #0
   1482c:	popne	{r4, r5, r6, sl, fp, pc}
   14830:	cmp	r6, #0
   14834:	beq	14848 <__mempcpy_chk@plt+0x37a4>
   14838:	cmp	r5, #0
   1483c:	cmpne	r4, #0
   14840:	bne	14848 <__mempcpy_chk@plt+0x37a4>
   14844:	pop	{r4, r5, r6, sl, fp, pc}
   14848:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   1484c:	push	{r4, r5, r6, sl, fp, lr}
   14850:	add	fp, sp, #16
   14854:	mov	r4, r2
   14858:	mov	r5, r1
   1485c:	mov	r6, r0
   14860:	bl	14f9c <__mempcpy_chk@plt+0x3ef8>
   14864:	cmp	r0, #0
   14868:	popne	{r4, r5, r6, sl, fp, pc}
   1486c:	cmp	r6, #0
   14870:	beq	14884 <__mempcpy_chk@plt+0x37e0>
   14874:	cmp	r5, #0
   14878:	cmpne	r4, #0
   1487c:	bne	14884 <__mempcpy_chk@plt+0x37e0>
   14880:	pop	{r4, r5, r6, sl, fp, pc}
   14884:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14888:	push	{fp, lr}
   1488c:	mov	fp, sp
   14890:	bl	14e80 <__mempcpy_chk@plt+0x3ddc>
   14894:	cmp	r0, #0
   14898:	popne	{fp, pc}
   1489c:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   148a0:	push	{fp, lr}
   148a4:	mov	fp, sp
   148a8:	bl	14e80 <__mempcpy_chk@plt+0x3ddc>
   148ac:	cmp	r0, #0
   148b0:	popne	{fp, pc}
   148b4:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   148b8:	push	{fp, lr}
   148bc:	mov	fp, sp
   148c0:	bl	14e80 <__mempcpy_chk@plt+0x3ddc>
   148c4:	cmp	r0, #0
   148c8:	popne	{fp, pc}
   148cc:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   148d0:	push	{r4, r5, fp, lr}
   148d4:	add	fp, sp, #8
   148d8:	mov	r4, r1
   148dc:	mov	r5, r0
   148e0:	bl	14eb0 <__mempcpy_chk@plt+0x3e0c>
   148e4:	cmp	r0, #0
   148e8:	popne	{r4, r5, fp, pc}
   148ec:	cmp	r5, #0
   148f0:	beq	14900 <__mempcpy_chk@plt+0x385c>
   148f4:	cmp	r4, #0
   148f8:	bne	14900 <__mempcpy_chk@plt+0x385c>
   148fc:	pop	{r4, r5, fp, pc}
   14900:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14904:	push	{fp, lr}
   14908:	mov	fp, sp
   1490c:	cmp	r1, #0
   14910:	orreq	r1, r1, #1
   14914:	bl	14eb0 <__mempcpy_chk@plt+0x3e0c>
   14918:	cmp	r0, #0
   1491c:	popne	{fp, pc}
   14920:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14924:	push	{fp, lr}
   14928:	mov	fp, sp
   1492c:	clz	r3, r2
   14930:	lsr	ip, r3, #5
   14934:	clz	r3, r1
   14938:	lsr	r3, r3, #5
   1493c:	orrs	r3, r3, ip
   14940:	movwne	r1, #1
   14944:	movwne	r2, #1
   14948:	bl	14f9c <__mempcpy_chk@plt+0x3ef8>
   1494c:	cmp	r0, #0
   14950:	popne	{fp, pc}
   14954:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14958:	push	{fp, lr}
   1495c:	mov	fp, sp
   14960:	mov	r2, r1
   14964:	mov	r1, r0
   14968:	mov	r0, #0
   1496c:	bl	14f9c <__mempcpy_chk@plt+0x3ef8>
   14970:	cmp	r0, #0
   14974:	popne	{fp, pc}
   14978:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   1497c:	push	{fp, lr}
   14980:	mov	fp, sp
   14984:	mov	r2, r1
   14988:	mov	r1, r0
   1498c:	clz	r0, r2
   14990:	clz	r3, r1
   14994:	lsr	r0, r0, #5
   14998:	lsr	r3, r3, #5
   1499c:	orrs	r0, r3, r0
   149a0:	movwne	r1, #1
   149a4:	movwne	r2, #1
   149a8:	mov	r0, #0
   149ac:	bl	14f9c <__mempcpy_chk@plt+0x3ef8>
   149b0:	cmp	r0, #0
   149b4:	popne	{fp, pc}
   149b8:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   149bc:	push	{r4, r5, r6, sl, fp, lr}
   149c0:	add	fp, sp, #16
   149c4:	ldr	r5, [r1]
   149c8:	mov	r4, r1
   149cc:	mov	r6, r0
   149d0:	cmp	r0, #0
   149d4:	beq	149ec <__mempcpy_chk@plt+0x3948>
   149d8:	mov	r0, #1
   149dc:	add	r0, r0, r5, lsr #1
   149e0:	adds	r5, r5, r0
   149e4:	bcc	149f4 <__mempcpy_chk@plt+0x3950>
   149e8:	b	14a30 <__mempcpy_chk@plt+0x398c>
   149ec:	cmp	r5, #0
   149f0:	movweq	r5, #64	; 0x40
   149f4:	mov	r0, r6
   149f8:	mov	r1, r5
   149fc:	mov	r2, #1
   14a00:	bl	14f9c <__mempcpy_chk@plt+0x3ef8>
   14a04:	cmp	r5, #0
   14a08:	mov	r1, r5
   14a0c:	movwne	r1, #1
   14a10:	cmp	r0, #0
   14a14:	bne	14a28 <__mempcpy_chk@plt+0x3984>
   14a18:	clz	r2, r6
   14a1c:	lsr	r2, r2, #5
   14a20:	orrs	r1, r2, r1
   14a24:	bne	14a30 <__mempcpy_chk@plt+0x398c>
   14a28:	str	r5, [r4]
   14a2c:	pop	{r4, r5, r6, sl, fp, pc}
   14a30:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14a34:	push	{r4, r5, r6, r7, fp, lr}
   14a38:	add	fp, sp, #16
   14a3c:	ldr	r5, [r1]
   14a40:	mov	r6, r2
   14a44:	mov	r4, r1
   14a48:	mov	r7, r0
   14a4c:	cmp	r0, #0
   14a50:	beq	14a68 <__mempcpy_chk@plt+0x39c4>
   14a54:	mov	r0, #1
   14a58:	add	r0, r0, r5, lsr #1
   14a5c:	adds	r5, r5, r0
   14a60:	bcc	14a80 <__mempcpy_chk@plt+0x39dc>
   14a64:	b	14ab4 <__mempcpy_chk@plt+0x3a10>
   14a68:	cmp	r5, #0
   14a6c:	bne	14a80 <__mempcpy_chk@plt+0x39dc>
   14a70:	mov	r0, #64	; 0x40
   14a74:	cmp	r6, #64	; 0x40
   14a78:	udiv	r5, r0, r6
   14a7c:	addhi	r5, r5, #1
   14a80:	mov	r0, r7
   14a84:	mov	r1, r5
   14a88:	mov	r2, r6
   14a8c:	bl	14f9c <__mempcpy_chk@plt+0x3ef8>
   14a90:	cmp	r0, #0
   14a94:	bne	14aac <__mempcpy_chk@plt+0x3a08>
   14a98:	cmp	r7, #0
   14a9c:	beq	14ab4 <__mempcpy_chk@plt+0x3a10>
   14aa0:	cmp	r6, #0
   14aa4:	cmpne	r5, #0
   14aa8:	bne	14ab4 <__mempcpy_chk@plt+0x3a10>
   14aac:	str	r5, [r4]
   14ab0:	pop	{r4, r5, r6, r7, fp, pc}
   14ab4:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14ab8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14abc:	add	fp, sp, #24
   14ac0:	mov	r8, r1
   14ac4:	ldr	r1, [r1]
   14ac8:	mov	r5, r0
   14acc:	add	r0, r1, r1, asr #1
   14ad0:	cmp	r0, r1
   14ad4:	mvnvs	r0, #-2147483648	; 0x80000000
   14ad8:	cmp	r0, r3
   14adc:	mov	r7, r0
   14ae0:	movgt	r7, r3
   14ae4:	cmn	r3, #1
   14ae8:	movle	r7, r0
   14aec:	ldr	r0, [fp, #8]
   14af0:	cmn	r0, #1
   14af4:	ble	14b1c <__mempcpy_chk@plt+0x3a78>
   14af8:	cmp	r0, #0
   14afc:	beq	14b70 <__mempcpy_chk@plt+0x3acc>
   14b00:	cmn	r7, #1
   14b04:	ble	14b44 <__mempcpy_chk@plt+0x3aa0>
   14b08:	mvn	r4, #-2147483648	; 0x80000000
   14b0c:	udiv	r6, r4, r0
   14b10:	cmp	r6, r7
   14b14:	bge	14b70 <__mempcpy_chk@plt+0x3acc>
   14b18:	b	14b80 <__mempcpy_chk@plt+0x3adc>
   14b1c:	cmn	r7, #1
   14b20:	ble	14b60 <__mempcpy_chk@plt+0x3abc>
   14b24:	cmn	r0, #1
   14b28:	beq	14b70 <__mempcpy_chk@plt+0x3acc>
   14b2c:	mov	r6, #-2147483648	; 0x80000000
   14b30:	mvn	r4, #-2147483648	; 0x80000000
   14b34:	sdiv	r6, r6, r0
   14b38:	cmp	r6, r7
   14b3c:	bge	14b70 <__mempcpy_chk@plt+0x3acc>
   14b40:	b	14b80 <__mempcpy_chk@plt+0x3adc>
   14b44:	beq	14b70 <__mempcpy_chk@plt+0x3acc>
   14b48:	mov	r6, #-2147483648	; 0x80000000
   14b4c:	mvn	r4, #-2147483648	; 0x80000000
   14b50:	sdiv	r6, r6, r7
   14b54:	cmp	r6, r0
   14b58:	bge	14b70 <__mempcpy_chk@plt+0x3acc>
   14b5c:	b	14b80 <__mempcpy_chk@plt+0x3adc>
   14b60:	mvn	r4, #-2147483648	; 0x80000000
   14b64:	sdiv	r6, r4, r0
   14b68:	cmp	r7, r6
   14b6c:	blt	14b80 <__mempcpy_chk@plt+0x3adc>
   14b70:	mul	r6, r7, r0
   14b74:	mov	r4, #64	; 0x40
   14b78:	cmp	r6, #63	; 0x3f
   14b7c:	bgt	14b88 <__mempcpy_chk@plt+0x3ae4>
   14b80:	sdiv	r7, r4, r0
   14b84:	mul	r6, r7, r0
   14b88:	cmp	r5, #0
   14b8c:	moveq	r4, #0
   14b90:	streq	r4, [r8]
   14b94:	sub	r4, r7, r1
   14b98:	cmp	r4, r2
   14b9c:	bge	14c48 <__mempcpy_chk@plt+0x3ba4>
   14ba0:	add	r7, r1, r2
   14ba4:	mov	r6, #0
   14ba8:	mov	r2, #0
   14bac:	cmp	r7, r3
   14bb0:	movwgt	r6, #1
   14bb4:	cmn	r3, #1
   14bb8:	movwgt	r2, #1
   14bbc:	cmp	r7, r1
   14bc0:	bvs	14c7c <__mempcpy_chk@plt+0x3bd8>
   14bc4:	ands	r1, r2, r6
   14bc8:	bne	14c7c <__mempcpy_chk@plt+0x3bd8>
   14bcc:	cmn	r0, #1
   14bd0:	ble	14bf8 <__mempcpy_chk@plt+0x3b54>
   14bd4:	cmp	r0, #0
   14bd8:	beq	14c44 <__mempcpy_chk@plt+0x3ba0>
   14bdc:	cmn	r7, #1
   14be0:	ble	14c1c <__mempcpy_chk@plt+0x3b78>
   14be4:	mvn	r1, #-2147483648	; 0x80000000
   14be8:	udiv	r1, r1, r0
   14bec:	cmp	r1, r7
   14bf0:	bge	14c44 <__mempcpy_chk@plt+0x3ba0>
   14bf4:	b	14c7c <__mempcpy_chk@plt+0x3bd8>
   14bf8:	cmn	r7, #1
   14bfc:	ble	14c34 <__mempcpy_chk@plt+0x3b90>
   14c00:	cmn	r0, #1
   14c04:	beq	14c44 <__mempcpy_chk@plt+0x3ba0>
   14c08:	mov	r1, #-2147483648	; 0x80000000
   14c0c:	sdiv	r1, r1, r0
   14c10:	cmp	r1, r7
   14c14:	bge	14c44 <__mempcpy_chk@plt+0x3ba0>
   14c18:	b	14c7c <__mempcpy_chk@plt+0x3bd8>
   14c1c:	beq	14c44 <__mempcpy_chk@plt+0x3ba0>
   14c20:	mov	r1, #-2147483648	; 0x80000000
   14c24:	sdiv	r1, r1, r7
   14c28:	cmp	r1, r0
   14c2c:	bge	14c44 <__mempcpy_chk@plt+0x3ba0>
   14c30:	b	14c7c <__mempcpy_chk@plt+0x3bd8>
   14c34:	mvn	r1, #-2147483648	; 0x80000000
   14c38:	sdiv	r1, r1, r0
   14c3c:	cmp	r7, r1
   14c40:	blt	14c7c <__mempcpy_chk@plt+0x3bd8>
   14c44:	mul	r6, r7, r0
   14c48:	mov	r0, r5
   14c4c:	mov	r1, r6
   14c50:	bl	14eb0 <__mempcpy_chk@plt+0x3e0c>
   14c54:	cmp	r6, #0
   14c58:	movwne	r6, #1
   14c5c:	cmp	r0, #0
   14c60:	bne	14c74 <__mempcpy_chk@plt+0x3bd0>
   14c64:	clz	r1, r5
   14c68:	lsr	r1, r1, #5
   14c6c:	orrs	r1, r1, r6
   14c70:	bne	14c7c <__mempcpy_chk@plt+0x3bd8>
   14c74:	str	r7, [r8]
   14c78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14c7c:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14c80:	push	{fp, lr}
   14c84:	mov	fp, sp
   14c88:	mov	r1, #1
   14c8c:	bl	14e2c <__mempcpy_chk@plt+0x3d88>
   14c90:	cmp	r0, #0
   14c94:	popne	{fp, pc}
   14c98:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14c9c:	push	{fp, lr}
   14ca0:	mov	fp, sp
   14ca4:	bl	14e2c <__mempcpy_chk@plt+0x3d88>
   14ca8:	cmp	r0, #0
   14cac:	popne	{fp, pc}
   14cb0:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14cb4:	push	{fp, lr}
   14cb8:	mov	fp, sp
   14cbc:	mov	r1, #1
   14cc0:	bl	14e2c <__mempcpy_chk@plt+0x3d88>
   14cc4:	cmp	r0, #0
   14cc8:	popne	{fp, pc}
   14ccc:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14cd0:	push	{fp, lr}
   14cd4:	mov	fp, sp
   14cd8:	bl	14e2c <__mempcpy_chk@plt+0x3d88>
   14cdc:	cmp	r0, #0
   14ce0:	popne	{fp, pc}
   14ce4:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14ce8:	push	{r4, r5, r6, sl, fp, lr}
   14cec:	add	fp, sp, #16
   14cf0:	mov	r5, r0
   14cf4:	mov	r0, r1
   14cf8:	mov	r4, r1
   14cfc:	bl	14e80 <__mempcpy_chk@plt+0x3ddc>
   14d00:	cmp	r0, #0
   14d04:	beq	14d20 <__mempcpy_chk@plt+0x3c7c>
   14d08:	mov	r1, r5
   14d0c:	mov	r2, r4
   14d10:	mov	r6, r0
   14d14:	bl	10e94 <memcpy@plt>
   14d18:	mov	r0, r6
   14d1c:	pop	{r4, r5, r6, sl, fp, pc}
   14d20:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14d24:	push	{r4, r5, r6, sl, fp, lr}
   14d28:	add	fp, sp, #16
   14d2c:	mov	r5, r0
   14d30:	mov	r0, r1
   14d34:	mov	r4, r1
   14d38:	bl	14e80 <__mempcpy_chk@plt+0x3ddc>
   14d3c:	cmp	r0, #0
   14d40:	beq	14d5c <__mempcpy_chk@plt+0x3cb8>
   14d44:	mov	r1, r5
   14d48:	mov	r2, r4
   14d4c:	mov	r6, r0
   14d50:	bl	10e94 <memcpy@plt>
   14d54:	mov	r0, r6
   14d58:	pop	{r4, r5, r6, sl, fp, pc}
   14d5c:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14d60:	push	{r4, r5, r6, sl, fp, lr}
   14d64:	add	fp, sp, #16
   14d68:	mov	r5, r0
   14d6c:	add	r0, r1, #1
   14d70:	mov	r4, r1
   14d74:	bl	14e80 <__mempcpy_chk@plt+0x3ddc>
   14d78:	cmp	r0, #0
   14d7c:	beq	14da4 <__mempcpy_chk@plt+0x3d00>
   14d80:	mov	r6, r0
   14d84:	mov	r0, #0
   14d88:	mov	r1, r5
   14d8c:	mov	r2, r4
   14d90:	strb	r0, [r6, r4]
   14d94:	mov	r0, r6
   14d98:	bl	10e94 <memcpy@plt>
   14d9c:	mov	r0, r6
   14da0:	pop	{r4, r5, r6, sl, fp, pc}
   14da4:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14da8:	push	{r4, r5, r6, sl, fp, lr}
   14dac:	add	fp, sp, #16
   14db0:	mov	r4, r0
   14db4:	bl	10fa8 <strlen@plt>
   14db8:	add	r5, r0, #1
   14dbc:	mov	r0, r5
   14dc0:	bl	14e80 <__mempcpy_chk@plt+0x3ddc>
   14dc4:	cmp	r0, #0
   14dc8:	beq	14de4 <__mempcpy_chk@plt+0x3d40>
   14dcc:	mov	r1, r4
   14dd0:	mov	r2, r5
   14dd4:	mov	r6, r0
   14dd8:	bl	10e94 <memcpy@plt>
   14ddc:	mov	r0, r6
   14de0:	pop	{r4, r5, r6, sl, fp, pc}
   14de4:	bl	14de8 <__mempcpy_chk@plt+0x3d44>
   14de8:	push	{fp, lr}
   14dec:	mov	fp, sp
   14df0:	movw	r0, #28916	; 0x70f4
   14df4:	movw	r1, #24743	; 0x60a7
   14df8:	mov	r2, #5
   14dfc:	movt	r0, #2
   14e00:	movt	r1, #1
   14e04:	ldr	r4, [r0]
   14e08:	mov	r0, #0
   14e0c:	bl	10eb8 <dcgettext@plt>
   14e10:	movw	r2, #23627	; 0x5c4b
   14e14:	mov	r3, r0
   14e18:	mov	r0, r4
   14e1c:	mov	r1, #0
   14e20:	movt	r2, #1
   14e24:	bl	10f24 <error@plt>
   14e28:	bl	11074 <abort@plt>
   14e2c:	clz	r2, r1
   14e30:	clz	r3, r0
   14e34:	lsr	r2, r2, #5
   14e38:	lsr	r3, r3, #5
   14e3c:	orrs	r2, r3, r2
   14e40:	movwne	r1, #1
   14e44:	movwne	r0, #1
   14e48:	cmp	r1, #0
   14e4c:	beq	14e7c <__mempcpy_chk@plt+0x3dd8>
   14e50:	mvn	r2, #-2147483648	; 0x80000000
   14e54:	udiv	r2, r2, r1
   14e58:	cmp	r2, r0
   14e5c:	bcs	14e7c <__mempcpy_chk@plt+0x3dd8>
   14e60:	push	{fp, lr}
   14e64:	mov	fp, sp
   14e68:	bl	10fb4 <__errno_location@plt>
   14e6c:	mov	r1, #12
   14e70:	str	r1, [r0]
   14e74:	mov	r0, #0
   14e78:	pop	{fp, pc}
   14e7c:	b	10e34 <calloc@plt>
   14e80:	cmp	r0, #0
   14e84:	movweq	r0, #1
   14e88:	cmn	r0, #1
   14e8c:	ble	14e94 <__mempcpy_chk@plt+0x3df0>
   14e90:	b	10f54 <malloc@plt>
   14e94:	push	{fp, lr}
   14e98:	mov	fp, sp
   14e9c:	bl	10fb4 <__errno_location@plt>
   14ea0:	mov	r1, #12
   14ea4:	str	r1, [r0]
   14ea8:	mov	r0, #0
   14eac:	pop	{fp, pc}
   14eb0:	push	{fp, lr}
   14eb4:	mov	fp, sp
   14eb8:	cmp	r0, #0
   14ebc:	beq	14ed8 <__mempcpy_chk@plt+0x3e34>
   14ec0:	cmp	r1, #0
   14ec4:	beq	14ee4 <__mempcpy_chk@plt+0x3e40>
   14ec8:	cmn	r1, #1
   14ecc:	ble	14ef0 <__mempcpy_chk@plt+0x3e4c>
   14ed0:	pop	{fp, lr}
   14ed4:	b	10ec4 <realloc@plt>
   14ed8:	mov	r0, r1
   14edc:	pop	{fp, lr}
   14ee0:	b	14e80 <__mempcpy_chk@plt+0x3ddc>
   14ee4:	bl	11fa0 <__mempcpy_chk@plt+0xefc>
   14ee8:	mov	r0, #0
   14eec:	pop	{fp, pc}
   14ef0:	bl	10fb4 <__errno_location@plt>
   14ef4:	mov	r1, #12
   14ef8:	str	r1, [r0]
   14efc:	mov	r0, #0
   14f00:	pop	{fp, pc}
   14f04:	push	{fp, lr}
   14f08:	mov	fp, sp
   14f0c:	mov	r0, #14
   14f10:	bl	11038 <nl_langinfo@plt>
   14f14:	movw	r1, #23355	; 0x5b3b
   14f18:	cmp	r0, #0
   14f1c:	movt	r1, #1
   14f20:	movne	r1, r0
   14f24:	movw	r0, #24760	; 0x60b8
   14f28:	ldrb	r2, [r1]
   14f2c:	movt	r0, #1
   14f30:	cmp	r2, #0
   14f34:	movne	r0, r1
   14f38:	pop	{fp, pc}
   14f3c:	push	{r4, r5, r6, r7, fp, lr}
   14f40:	add	fp, sp, #16
   14f44:	sub	sp, sp, #8
   14f48:	add	r5, sp, #4
   14f4c:	cmp	r0, #0
   14f50:	mov	r7, r2
   14f54:	mov	r4, r1
   14f58:	movne	r5, r0
   14f5c:	mov	r0, r5
   14f60:	bl	10f18 <mbrtowc@plt>
   14f64:	mov	r6, r0
   14f68:	cmp	r7, #0
   14f6c:	beq	14f90 <__mempcpy_chk@plt+0x3eec>
   14f70:	cmn	r6, #2
   14f74:	bcc	14f90 <__mempcpy_chk@plt+0x3eec>
   14f78:	mov	r0, #0
   14f7c:	bl	14fd8 <__mempcpy_chk@plt+0x3f34>
   14f80:	cmp	r0, #0
   14f84:	ldrbeq	r0, [r4]
   14f88:	moveq	r6, #1
   14f8c:	streq	r0, [r5]
   14f90:	mov	r0, r6
   14f94:	sub	sp, fp, #16
   14f98:	pop	{r4, r5, r6, r7, fp, pc}
   14f9c:	cmp	r2, #0
   14fa0:	beq	14fd0 <__mempcpy_chk@plt+0x3f2c>
   14fa4:	mvn	r3, #0
   14fa8:	udiv	r3, r3, r2
   14fac:	cmp	r3, r1
   14fb0:	bcs	14fd0 <__mempcpy_chk@plt+0x3f2c>
   14fb4:	push	{fp, lr}
   14fb8:	mov	fp, sp
   14fbc:	bl	10fb4 <__errno_location@plt>
   14fc0:	mov	r1, #12
   14fc4:	str	r1, [r0]
   14fc8:	mov	r0, #0
   14fcc:	pop	{fp, pc}
   14fd0:	mul	r1, r2, r1
   14fd4:	b	14eb0 <__mempcpy_chk@plt+0x3e0c>
   14fd8:	push	{r4, sl, fp, lr}
   14fdc:	add	fp, sp, #8
   14fe0:	sub	sp, sp, #264	; 0x108
   14fe4:	add	r1, sp, #7
   14fe8:	movw	r2, #257	; 0x101
   14fec:	bl	1503c <__mempcpy_chk@plt+0x3f98>
   14ff0:	mov	r4, #0
   14ff4:	cmp	r0, #0
   14ff8:	bne	15030 <__mempcpy_chk@plt+0x3f8c>
   14ffc:	movw	r1, #24766	; 0x60be
   15000:	add	r0, sp, #7
   15004:	movt	r1, #1
   15008:	bl	10e58 <strcmp@plt>
   1500c:	cmp	r0, #0
   15010:	beq	15030 <__mempcpy_chk@plt+0x3f8c>
   15014:	movw	r1, #24768	; 0x60c0
   15018:	add	r0, sp, #7
   1501c:	movt	r1, #1
   15020:	bl	10e58 <strcmp@plt>
   15024:	mov	r4, r0
   15028:	cmp	r0, #0
   1502c:	movwne	r4, #1
   15030:	mov	r0, r4
   15034:	sub	sp, fp, #8
   15038:	pop	{r4, sl, fp, pc}
   1503c:	push	{r4, r5, r6, r7, fp, lr}
   15040:	add	fp, sp, #16
   15044:	mov	r4, r1
   15048:	mov	r1, #0
   1504c:	mov	r6, r2
   15050:	bl	11020 <setlocale@plt>
   15054:	cmp	r0, #0
   15058:	beq	15088 <__mempcpy_chk@plt+0x3fe4>
   1505c:	mov	r7, r0
   15060:	bl	10fa8 <strlen@plt>
   15064:	cmp	r0, r6
   15068:	bcs	150a8 <__mempcpy_chk@plt+0x4004>
   1506c:	add	r2, r0, #1
   15070:	mov	r0, r4
   15074:	mov	r1, r7
   15078:	bl	10e94 <memcpy@plt>
   1507c:	mov	r5, #0
   15080:	mov	r0, r5
   15084:	pop	{r4, r5, r6, r7, fp, pc}
   15088:	cmp	r6, #0
   1508c:	mov	r5, #22
   15090:	movne	r0, #0
   15094:	strbne	r0, [r4]
   15098:	movne	r0, r5
   1509c:	popne	{r4, r5, r6, r7, fp, pc}
   150a0:	mov	r0, r5
   150a4:	pop	{r4, r5, r6, r7, fp, pc}
   150a8:	mov	r5, #34	; 0x22
   150ac:	cmp	r6, #0
   150b0:	beq	150d0 <__mempcpy_chk@plt+0x402c>
   150b4:	sub	r6, r6, #1
   150b8:	mov	r0, r4
   150bc:	mov	r1, r7
   150c0:	mov	r2, r6
   150c4:	bl	10e94 <memcpy@plt>
   150c8:	mov	r0, #0
   150cc:	strb	r0, [r4, r6]
   150d0:	mov	r0, r5
   150d4:	pop	{r4, r5, r6, r7, fp, pc}
   150d8:	mov	r1, #0
   150dc:	b	11020 <setlocale@plt>
   150e0:	cmp	r3, #0
   150e4:	cmpeq	r2, #0
   150e8:	bne	15100 <__mempcpy_chk@plt+0x405c>
   150ec:	cmp	r1, #0
   150f0:	cmpeq	r0, #0
   150f4:	mvnne	r1, #0
   150f8:	mvnne	r0, #0
   150fc:	b	1511c <__mempcpy_chk@plt+0x4078>
   15100:	sub	sp, sp, #8
   15104:	push	{sp, lr}
   15108:	bl	1512c <__mempcpy_chk@plt+0x4088>
   1510c:	ldr	lr, [sp, #4]
   15110:	add	sp, sp, #8
   15114:	pop	{r2, r3}
   15118:	bx	lr
   1511c:	push	{r1, lr}
   15120:	mov	r0, #8
   15124:	bl	10e4c <raise@plt>
   15128:	pop	{r1, pc}
   1512c:	cmp	r1, r3
   15130:	cmpeq	r0, r2
   15134:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15138:	mov	r4, r0
   1513c:	movcc	r0, #0
   15140:	mov	r5, r1
   15144:	ldr	lr, [sp, #36]	; 0x24
   15148:	movcc	r1, r0
   1514c:	bcc	15248 <__mempcpy_chk@plt+0x41a4>
   15150:	cmp	r3, #0
   15154:	clzeq	ip, r2
   15158:	clzne	ip, r3
   1515c:	addeq	ip, ip, #32
   15160:	cmp	r5, #0
   15164:	clzeq	r1, r4
   15168:	addeq	r1, r1, #32
   1516c:	clzne	r1, r5
   15170:	sub	ip, ip, r1
   15174:	sub	sl, ip, #32
   15178:	lsl	r9, r3, ip
   1517c:	rsb	fp, ip, #32
   15180:	orr	r9, r9, r2, lsl sl
   15184:	orr	r9, r9, r2, lsr fp
   15188:	lsl	r8, r2, ip
   1518c:	cmp	r5, r9
   15190:	cmpeq	r4, r8
   15194:	movcc	r0, #0
   15198:	movcc	r1, r0
   1519c:	bcc	151b8 <__mempcpy_chk@plt+0x4114>
   151a0:	mov	r0, #1
   151a4:	subs	r4, r4, r8
   151a8:	lsl	r1, r0, sl
   151ac:	orr	r1, r1, r0, lsr fp
   151b0:	lsl	r0, r0, ip
   151b4:	sbc	r5, r5, r9
   151b8:	cmp	ip, #0
   151bc:	beq	15248 <__mempcpy_chk@plt+0x41a4>
   151c0:	lsr	r6, r8, #1
   151c4:	orr	r6, r6, r9, lsl #31
   151c8:	lsr	r7, r9, #1
   151cc:	mov	r2, ip
   151d0:	b	151f4 <__mempcpy_chk@plt+0x4150>
   151d4:	subs	r3, r4, r6
   151d8:	sbc	r8, r5, r7
   151dc:	adds	r3, r3, r3
   151e0:	adc	r8, r8, r8
   151e4:	adds	r4, r3, #1
   151e8:	adc	r5, r8, #0
   151ec:	subs	r2, r2, #1
   151f0:	beq	15210 <__mempcpy_chk@plt+0x416c>
   151f4:	cmp	r5, r7
   151f8:	cmpeq	r4, r6
   151fc:	bcs	151d4 <__mempcpy_chk@plt+0x4130>
   15200:	adds	r4, r4, r4
   15204:	adc	r5, r5, r5
   15208:	subs	r2, r2, #1
   1520c:	bne	151f4 <__mempcpy_chk@plt+0x4150>
   15210:	lsr	r3, r4, ip
   15214:	orr	r3, r3, r5, lsl fp
   15218:	lsr	r2, r5, ip
   1521c:	orr	r3, r3, r5, lsr sl
   15220:	adds	r0, r0, r4
   15224:	mov	r4, r3
   15228:	lsl	r3, r2, ip
   1522c:	orr	r3, r3, r4, lsl sl
   15230:	lsl	ip, r4, ip
   15234:	orr	r3, r3, r4, lsr fp
   15238:	adc	r1, r1, r5
   1523c:	subs	r0, r0, ip
   15240:	mov	r5, r2
   15244:	sbc	r1, r1, r3
   15248:	cmp	lr, #0
   1524c:	strdne	r4, [lr]
   15250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15254:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15258:	mov	r7, r0
   1525c:	ldr	r6, [pc, #72]	; 152ac <__mempcpy_chk@plt+0x4208>
   15260:	ldr	r5, [pc, #72]	; 152b0 <__mempcpy_chk@plt+0x420c>
   15264:	add	r6, pc, r6
   15268:	add	r5, pc, r5
   1526c:	sub	r6, r6, r5
   15270:	mov	r8, r1
   15274:	mov	r9, r2
   15278:	bl	10e14 <calloc@plt-0x20>
   1527c:	asrs	r6, r6, #2
   15280:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15284:	mov	r4, #0
   15288:	add	r4, r4, #1
   1528c:	ldr	r3, [r5], #4
   15290:	mov	r2, r9
   15294:	mov	r1, r8
   15298:	mov	r0, r7
   1529c:	blx	r3
   152a0:	cmp	r6, r4
   152a4:	bne	15288 <__mempcpy_chk@plt+0x41e4>
   152a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   152ac:	andeq	r1, r1, r0, lsr #25
   152b0:	muleq	r1, r8, ip
   152b4:	bx	lr
   152b8:	ldr	r3, [pc, #12]	; 152cc <__mempcpy_chk@plt+0x4228>
   152bc:	mov	r1, #0
   152c0:	add	r3, pc, r3
   152c4:	ldr	r2, [r3]
   152c8:	b	10fc0 <__cxa_atexit@plt>
   152cc:	andeq	r1, r1, r4, lsr #28

Disassembly of section .fini:

000152d0 <.fini>:
   152d0:	push	{r3, lr}
   152d4:	pop	{r3, pc}
