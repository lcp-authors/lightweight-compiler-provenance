
../repos/charybdis/modules/.libs/m_testmask.so:     file format elf32-littlearm


Disassembly of section .init:

00000584 <_init>:
 584:	push	{r3, lr}
 588:	bl	640 <call_weak_fn>
 58c:	pop	{r3, pc}

Disassembly of section .plt:

00000590 <.plt>:
 590:	push	{lr}		; (str lr, [sp, #-4]!)
 594:	ldr	lr, [pc, #4]	; 5a0 <.plt+0x10>
 598:	add	lr, pc, lr
 59c:	ldr	pc, [lr, #8]!
 5a0:	.word	0x00010a60

000005a4 <__cxa_finalize@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2656]!	; 0xa60

000005b0 <match_esc@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2648]!	; 0xa58

000005bc <sendto_one@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2640]!	; 0xa50

000005c8 <collapse_esc@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2632]!	; 0xa48

000005d4 <match_ips@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2624]!	; 0xa40

000005e0 <strcpy@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2616]!	; 0xa38

000005ec <__gmon_start__@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2608]!	; 0xa30

000005f8 <strlen@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2600]!	; 0xa28

00000604 <strchr@plt>:
 604:	add	ip, pc, #0, 12
 608:	add	ip, ip, #16, 20	; 0x10000
 60c:	ldr	pc, [ip, #2592]!	; 0xa20

00000610 <collapse@plt>:
 610:	add	ip, pc, #0, 12
 614:	add	ip, ip, #16, 20	; 0x10000
 618:	ldr	pc, [ip, #2584]!	; 0xa18

0000061c <match@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #16, 20	; 0x10000
 624:	ldr	pc, [ip, #2576]!	; 0xa10

00000628 <sendto_one_notice@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #16, 20	; 0x10000
 630:	ldr	pc, [ip, #2568]!	; 0xa08

00000634 <show_ip@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #16, 20	; 0x10000
 63c:	ldr	pc, [ip, #2560]!	; 0xa00

Disassembly of section .text:

00000640 <call_weak_fn>:
 640:	ldr	r3, [pc, #20]	; 65c <call_weak_fn+0x1c>
 644:	ldr	r2, [pc, #20]	; 660 <call_weak_fn+0x20>
 648:	add	r3, pc, r3
 64c:	ldr	r2, [r3, r2]
 650:	cmp	r2, #0
 654:	bxeq	lr
 658:	b	5ec <__gmon_start__@plt>
 65c:	.word	0x000109b0
 660:	.word	0x00000048

00000664 <deregister_tm_clones>:
 664:	ldr	r0, [pc, #44]	; 698 <deregister_tm_clones+0x34>
 668:	ldr	r3, [pc, #44]	; 69c <deregister_tm_clones+0x38>
 66c:	add	r0, pc, r0
 670:	add	r3, pc, r3
 674:	cmp	r3, r0
 678:	ldr	r3, [pc, #32]	; 6a0 <deregister_tm_clones+0x3c>
 67c:	add	r3, pc, r3
 680:	bxeq	lr
 684:	ldr	r2, [pc, #24]	; 6a4 <deregister_tm_clones+0x40>
 688:	ldr	r3, [r3, r2]
 68c:	cmp	r3, #0
 690:	bxeq	lr
 694:	bx	r3
 698:	.word	0x00010a5c
 69c:	.word	0x00010a58
 6a0:	.word	0x0001097c
 6a4:	.word	0x00000044

000006a8 <register_tm_clones>:
 6a8:	ldr	r0, [pc, #56]	; 6e8 <register_tm_clones+0x40>
 6ac:	ldr	r3, [pc, #56]	; 6ec <register_tm_clones+0x44>
 6b0:	add	r0, pc, r0
 6b4:	add	r3, pc, r3
 6b8:	sub	r1, r3, r0
 6bc:	ldr	r3, [pc, #44]	; 6f0 <register_tm_clones+0x48>
 6c0:	asr	r1, r1, #2
 6c4:	add	r3, pc, r3
 6c8:	add	r1, r1, r1, lsr #31
 6cc:	asrs	r1, r1, #1
 6d0:	bxeq	lr
 6d4:	ldr	r2, [pc, #24]	; 6f4 <register_tm_clones+0x4c>
 6d8:	ldr	r3, [r3, r2]
 6dc:	cmp	r3, #0
 6e0:	bxeq	lr
 6e4:	bx	r3
 6e8:	.word	0x00010a18
 6ec:	.word	0x00010a14
 6f0:	.word	0x00010934
 6f4:	.word	0x00000050

000006f8 <__do_global_dtors_aux>:
 6f8:	ldr	r3, [pc, #76]	; 74c <__do_global_dtors_aux+0x54>
 6fc:	ldr	r2, [pc, #76]	; 750 <__do_global_dtors_aux+0x58>
 700:	add	r3, pc, r3
 704:	add	r2, pc, r2
 708:	ldrb	r3, [r3]
 70c:	cmp	r3, #0
 710:	bxne	lr
 714:	ldr	r3, [pc, #56]	; 754 <__do_global_dtors_aux+0x5c>
 718:	push	{r4, lr}
 71c:	ldr	r3, [r2, r3]
 720:	cmp	r3, #0
 724:	beq	734 <__do_global_dtors_aux+0x3c>
 728:	ldr	r3, [pc, #40]	; 758 <__do_global_dtors_aux+0x60>
 72c:	ldr	r0, [pc, r3]
 730:	bl	5a4 <__cxa_finalize@plt>
 734:	bl	664 <deregister_tm_clones>
 738:	ldr	r3, [pc, #28]	; 75c <__do_global_dtors_aux+0x64>
 73c:	mov	r2, #1
 740:	add	r3, pc, r3
 744:	strb	r2, [r3]
 748:	pop	{r4, pc}
 74c:	.word	0x000109c8
 750:	.word	0x000108f4
 754:	.word	0x00000040
 758:	.word	0x00010924
 75c:	.word	0x00010988

00000760 <frame_dummy>:
 760:	b	6a8 <register_tm_clones>

00000764 <mo_testmask>:
 764:	strd	r4, [sp, #-36]!	; 0xffffffdc
 768:	strd	r6, [sp, #8]
 76c:	strd	r8, [sp, #16]
 770:	strd	sl, [sp, #24]
 774:	str	lr, [sp, #32]
 778:	add	fp, sp, #32
 77c:	sub	sp, sp, #60	; 0x3c
 780:	str	r2, [fp, #-40]	; 0xffffffd8
 784:	mov	sl, r3
 788:	ldr	r5, [fp, #4]
 78c:	ldr	r9, [pc, #844]	; ae0 <mo_testmask+0x37c>
 790:	add	r9, pc, r9
 794:	ldr	r4, [r5, #4]
 798:	mov	r0, r4
 79c:	bl	5f8 <strlen@plt>
 7a0:	add	r0, r0, #8
 7a4:	bic	r0, r0, #7
 7a8:	sub	sp, sp, r0
 7ac:	add	r6, sp, #24
 7b0:	mov	r1, r4
 7b4:	mov	r0, r6
 7b8:	bl	5e0 <strcpy@plt>
 7bc:	mov	r0, r6
 7c0:	bl	610 <collapse@plt>
 7c4:	mov	r1, #64	; 0x40
 7c8:	mov	r0, r6
 7cc:	bl	604 <strchr@plt>
 7d0:	subs	r4, r0, #0
 7d4:	beq	88c <mo_testmask+0x128>
 7d8:	mov	r8, r4
 7dc:	mov	r3, #0
 7e0:	strb	r3, [r8], #1
 7e4:	mov	r1, #33	; 0x21
 7e8:	mov	r0, r6
 7ec:	bl	604 <strchr@plt>
 7f0:	cmp	r0, #0
 7f4:	beq	8a0 <mo_testmask+0x13c>
 7f8:	mov	r7, r0
 7fc:	mov	r3, #0
 800:	strb	r3, [r7], #1
 804:	cmp	r7, r3
 808:	beq	8ac <mo_testmask+0x148>
 80c:	ldrb	r3, [r7]
 810:	cmp	r8, #0
 814:	cmpne	r3, #0
 818:	beq	8ac <mo_testmask+0x148>
 81c:	ldrb	r3, [r4, #1]
 820:	cmp	r3, #0
 824:	beq	8ac <mo_testmask+0x148>
 828:	cmp	sl, #2
 82c:	movle	sl, #0
 830:	ble	850 <mo_testmask+0xec>
 834:	ldr	sl, [r5, #8]
 838:	cmp	sl, #0
 83c:	beq	850 <mo_testmask+0xec>
 840:	ldrb	r3, [sl]
 844:	cmp	r3, #0
 848:	moveq	sl, #0
 84c:	bne	8d8 <mo_testmask+0x174>
 850:	ldr	r3, [pc, #652]	; ae4 <mo_testmask+0x380>
 854:	ldr	r3, [r9, r3]
 858:	ldr	r4, [r3]
 85c:	cmp	r4, #0
 860:	beq	a64 <mo_testmask+0x300>
 864:	mov	r3, #0
 868:	str	r3, [fp, #-44]	; 0xffffffd4
 86c:	str	r3, [fp, #-56]	; 0xffffffc8
 870:	ldr	r3, [pc, #624]	; ae8 <mo_testmask+0x384>
 874:	add	r3, pc, r3
 878:	str	r3, [fp, #-52]	; 0xffffffcc
 87c:	ldr	r3, [pc, #616]	; aec <mo_testmask+0x388>
 880:	add	r3, pc, r3
 884:	str	r3, [fp, #-60]	; 0xffffffc4
 888:	b	994 <mo_testmask+0x230>
 88c:	ldr	r1, [pc, #604]	; af0 <mo_testmask+0x38c>
 890:	add	r1, pc, r1
 894:	ldr	r0, [fp, #-40]	; 0xffffffd8
 898:	bl	628 <sendto_one_notice@plt>
 89c:	b	8bc <mo_testmask+0x158>
 8a0:	mov	r7, r6
 8a4:	mov	r6, r0
 8a8:	b	80c <mo_testmask+0xa8>
 8ac:	ldr	r1, [pc, #576]	; af4 <mo_testmask+0x390>
 8b0:	add	r1, pc, r1
 8b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
 8b8:	bl	628 <sendto_one_notice@plt>
 8bc:	sub	sp, fp, #32
 8c0:	ldrd	r4, [sp]
 8c4:	ldrd	r6, [sp, #8]
 8c8:	ldrd	r8, [sp, #16]
 8cc:	ldrd	sl, [sp, #24]
 8d0:	add	sp, sp, #32
 8d4:	pop	{pc}		; (ldr pc, [sp], #4)
 8d8:	mov	r0, sl
 8dc:	bl	5f8 <strlen@plt>
 8e0:	add	r3, r0, #8
 8e4:	bic	r3, r3, #7
 8e8:	sub	sp, sp, r3
 8ec:	add	r4, sp, #24
 8f0:	mov	r1, sl
 8f4:	mov	r0, r4
 8f8:	bl	5e0 <strcpy@plt>
 8fc:	mov	r0, r4
 900:	bl	5c8 <collapse_esc@plt>
 904:	mov	sl, r4
 908:	b	850 <mo_testmask+0xec>
 90c:	mov	r1, r5
 910:	ldr	r0, [fp, #-40]	; 0xffffffd8
 914:	bl	634 <show_ip@plt>
 918:	cmp	r0, #0
 91c:	beq	930 <mo_testmask+0x1cc>
 920:	add	r3, r5, #288	; 0x120
 924:	add	r3, r3, #3
 928:	str	r3, [fp, #-48]	; 0xffffffd0
 92c:	b	9c4 <mo_testmask+0x260>
 930:	ldr	r3, [fp, #-60]	; 0xffffffc4
 934:	str	r3, [fp, #-48]	; 0xffffffd0
 938:	b	9c4 <mo_testmask+0x260>
 93c:	add	r1, r5, #227	; 0xe3
 940:	mov	r0, r8
 944:	bl	61c <match@plt>
 948:	cmp	r0, #0
 94c:	bne	9ec <mo_testmask+0x288>
 950:	ldr	r1, [fp, #-48]	; 0xffffffd0
 954:	mov	r0, r8
 958:	bl	61c <match@plt>
 95c:	cmp	r0, #0
 960:	bne	9ec <mo_testmask+0x288>
 964:	ldr	r1, [fp, #-48]	; 0xffffffd0
 968:	mov	r0, r8
 96c:	bl	5d4 <match_ips@plt>
 970:	cmp	r0, #0
 974:	beq	988 <mo_testmask+0x224>
 978:	b	9ec <mo_testmask+0x288>
 97c:	ldr	r3, [fp, #-44]	; 0xffffffd4
 980:	add	r3, r3, #1
 984:	str	r3, [fp, #-44]	; 0xffffffd4
 988:	ldr	r4, [r4, #8]
 98c:	cmp	r4, #0
 990:	beq	a70 <mo_testmask+0x30c>
 994:	ldr	r5, [r4]
 998:	ldrh	r3, [r5, #80]	; 0x50
 99c:	cmp	r3, #64	; 0x40
 9a0:	bne	988 <mo_testmask+0x224>
 9a4:	ldr	r3, [r5, #24]
 9a8:	cmp	r3, #0
 9ac:	beq	988 <mo_testmask+0x224>
 9b0:	ldrb	r3, [r5, #291]	; 0x123
 9b4:	cmp	r3, #0
 9b8:	bne	90c <mo_testmask+0x1a8>
 9bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
 9c0:	str	r3, [fp, #-48]	; 0xffffffd0
 9c4:	add	r1, r5, #152	; 0x98
 9c8:	mov	r0, r7
 9cc:	bl	61c <match@plt>
 9d0:	cmp	r0, #0
 9d4:	beq	988 <mo_testmask+0x224>
 9d8:	add	r1, r5, #163	; 0xa3
 9dc:	mov	r0, r8
 9e0:	bl	61c <match@plt>
 9e4:	cmp	r0, #0
 9e8:	beq	93c <mo_testmask+0x1d8>
 9ec:	cmp	r6, #0
 9f0:	beq	a08 <mo_testmask+0x2a4>
 9f4:	add	r1, r5, #88	; 0x58
 9f8:	mov	r0, r6
 9fc:	bl	61c <match@plt>
 a00:	cmp	r0, #0
 a04:	beq	988 <mo_testmask+0x224>
 a08:	cmp	sl, #0
 a0c:	beq	a28 <mo_testmask+0x2c4>
 a10:	add	r1, r5, #344	; 0x158
 a14:	add	r1, r1, #1
 a18:	mov	r0, sl
 a1c:	bl	5b0 <match_esc@plt>
 a20:	cmp	r0, #0
 a24:	beq	988 <mo_testmask+0x224>
 a28:	ldr	r3, [r5, #64]	; 0x40
 a2c:	and	r3, r3, #8192	; 0x2000
 a30:	str	r3, [fp, #-68]	; 0xffffffbc
 a34:	mov	r3, #0
 a38:	str	r3, [fp, #-64]	; 0xffffffc0
 a3c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
 a40:	orrs	r3, r2, r3
 a44:	beq	97c <mo_testmask+0x218>
 a48:	ldrh	r3, [r5, #80]	; 0x50
 a4c:	cmp	r3, #64	; 0x40
 a50:	bne	97c <mo_testmask+0x218>
 a54:	ldr	r3, [fp, #-56]	; 0xffffffc8
 a58:	add	r3, r3, #1
 a5c:	str	r3, [fp, #-56]	; 0xffffffc8
 a60:	b	988 <mo_testmask+0x224>
 a64:	mov	r3, #0
 a68:	str	r3, [fp, #-44]	; 0xffffffd4
 a6c:	str	r3, [fp, #-56]	; 0xffffffc8
 a70:	ldr	r3, [fp, #-40]	; 0xffffffd8
 a74:	add	r3, r3, #88	; 0x58
 a78:	cmp	r6, #0
 a7c:	beq	ac8 <mo_testmask+0x364>
 a80:	cmp	sl, #0
 a84:	beq	ad4 <mo_testmask+0x370>
 a88:	ldr	r2, [pc, #104]	; af8 <mo_testmask+0x394>
 a8c:	ldr	r2, [r9, r2]
 a90:	str	sl, [sp, #20]
 a94:	str	r8, [sp, #16]
 a98:	str	r7, [sp, #12]
 a9c:	str	r6, [sp, #8]
 aa0:	ldr	r1, [fp, #-44]	; 0xffffffd4
 aa4:	str	r1, [sp, #4]
 aa8:	ldr	r1, [fp, #-56]	; 0xffffffc8
 aac:	str	r1, [sp]
 ab0:	add	r2, r2, #88	; 0x58
 ab4:	ldr	r1, [pc, #64]	; afc <mo_testmask+0x398>
 ab8:	add	r1, pc, r1
 abc:	ldr	r0, [fp, #-40]	; 0xffffffd8
 ac0:	bl	5bc <sendto_one@plt>
 ac4:	b	8bc <mo_testmask+0x158>
 ac8:	ldr	r6, [pc, #48]	; b00 <mo_testmask+0x39c>
 acc:	add	r6, pc, r6
 ad0:	b	a80 <mo_testmask+0x31c>
 ad4:	ldr	sl, [pc, #40]	; b04 <mo_testmask+0x3a0>
 ad8:	add	sl, pc, sl
 adc:	b	a88 <mo_testmask+0x324>
 ae0:	.word	0x00010868
 ae4:	.word	0x0000004c
 ae8:	.word	0x000002f0
 aec:	.word	0x000002f4
 af0:	.word	0x000002ec
 af4:	.word	0x000002cc
 af8:	.word	0x00000054
 afc:	.word	0x000000d8
 b00:	.word	0x000000ac
 b04:	.word	0x000000a0

Disassembly of section .fini:

00000b08 <_fini>:
 b08:	push	{r3, lr}
 b0c:	pop	{r3, pc}
