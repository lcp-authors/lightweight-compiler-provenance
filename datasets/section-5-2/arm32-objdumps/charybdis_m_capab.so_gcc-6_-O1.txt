
../repos/charybdis/modules/.libs/m_capab.so:     file format elf32-littlearm


Disassembly of section .init:

0000056c <_init>:
 56c:	push	{r3, lr}
 570:	bl	604 <call_weak_fn>
 574:	pop	{r3, pc}

Disassembly of section .plt:

00000578 <.plt>:
 578:	push	{lr}		; (str lr, [sp, #-4]!)
 57c:	ldr	lr, [pc, #4]	; 588 <.plt+0x10>
 580:	add	lr, pc, lr
 584:	ldr	pc, [lr, #8]!
 588:	.word	0x00010a78

0000058c <__cxa_finalize@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2680]!	; 0xa78

00000598 <free@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2672]!	; 0xa70

000005a4 <rb_outofmemory@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2664]!	; 0xa68

000005b0 <strcpy@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2656]!	; 0xa60

000005bc <malloc@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2648]!	; 0xa58

000005c8 <__gmon_start__@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2640]!	; 0xa50

000005d4 <strlen@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2632]!	; 0xa48

000005e0 <capability_get@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2624]!	; 0xa40

000005ec <rb_strtok_r@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2616]!	; 0xa38

000005f8 <exit_client@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2608]!	; 0xa30

Disassembly of section .text:

00000604 <call_weak_fn>:
 604:	ldr	r3, [pc, #20]	; 620 <call_weak_fn+0x1c>
 608:	ldr	r2, [pc, #20]	; 624 <call_weak_fn+0x20>
 60c:	add	r3, pc, r3
 610:	ldr	r2, [r3, r2]
 614:	cmp	r2, #0
 618:	bxeq	lr
 61c:	b	5c8 <__gmon_start__@plt>
 620:	.word	0x000109ec
 624:	.word	0x00000048

00000628 <deregister_tm_clones>:
 628:	ldr	r3, [pc, #52]	; 664 <deregister_tm_clones+0x3c>
 62c:	ldr	r0, [pc, #52]	; 668 <deregister_tm_clones+0x40>
 630:	add	r3, pc, r3
 634:	add	r0, pc, r0
 638:	add	r3, r3, #3
 63c:	sub	r3, r3, r0
 640:	cmp	r3, #6
 644:	ldr	r3, [pc, #32]	; 66c <deregister_tm_clones+0x44>
 648:	add	r3, pc, r3
 64c:	bxls	lr
 650:	ldr	r2, [pc, #24]	; 670 <deregister_tm_clones+0x48>
 654:	ldr	r3, [r3, r2]
 658:	cmp	r3, #0
 65c:	bxeq	lr
 660:	bx	r3
 664:	.word	0x00010adc
 668:	.word	0x00010ad8
 66c:	.word	0x000109b0
 670:	.word	0x00000040

00000674 <register_tm_clones>:
 674:	ldr	r1, [pc, #56]	; 6b4 <register_tm_clones+0x40>
 678:	ldr	r0, [pc, #56]	; 6b8 <register_tm_clones+0x44>
 67c:	add	r1, pc, r1
 680:	add	r0, pc, r0
 684:	sub	r1, r1, r0
 688:	ldr	r3, [pc, #44]	; 6bc <register_tm_clones+0x48>
 68c:	asr	r1, r1, #2
 690:	add	r3, pc, r3
 694:	add	r1, r1, r1, lsr #31
 698:	asrs	r1, r1, #1
 69c:	bxeq	lr
 6a0:	ldr	r2, [pc, #24]	; 6c0 <register_tm_clones+0x4c>
 6a4:	ldr	r3, [r3, r2]
 6a8:	cmp	r3, #0
 6ac:	bxeq	lr
 6b0:	bx	r3
 6b4:	.word	0x00010a90
 6b8:	.word	0x00010a8c
 6bc:	.word	0x00010968
 6c0:	.word	0x00000050

000006c4 <__do_global_dtors_aux>:
 6c4:	ldr	r3, [pc, #76]	; 718 <__do_global_dtors_aux+0x54>
 6c8:	ldr	r2, [pc, #76]	; 71c <__do_global_dtors_aux+0x58>
 6cc:	add	r3, pc, r3
 6d0:	add	r2, pc, r2
 6d4:	ldrb	r3, [r3]
 6d8:	cmp	r3, #0
 6dc:	bxne	lr
 6e0:	ldr	r3, [pc, #56]	; 720 <__do_global_dtors_aux+0x5c>
 6e4:	push	{r4, lr}
 6e8:	ldr	r3, [r2, r3]
 6ec:	cmp	r3, #0
 6f0:	beq	700 <__do_global_dtors_aux+0x3c>
 6f4:	ldr	r3, [pc, #40]	; 724 <__do_global_dtors_aux+0x60>
 6f8:	ldr	r0, [pc, r3]
 6fc:	bl	58c <__cxa_finalize@plt>
 700:	bl	628 <deregister_tm_clones>
 704:	ldr	r3, [pc, #28]	; 728 <__do_global_dtors_aux+0x64>
 708:	mov	r2, #1
 70c:	add	r3, pc, r3
 710:	strb	r2, [r3]
 714:	pop	{r4, pc}
 718:	.word	0x00010a40
 71c:	.word	0x00010928
 720:	.word	0x00000038
 724:	.word	0x00010954
 728:	.word	0x00010a00

0000072c <frame_dummy>:
 72c:	ldr	r0, [pc, #56]	; 76c <frame_dummy+0x40>
 730:	ldr	r3, [pc, #56]	; 770 <frame_dummy+0x44>
 734:	add	r0, pc, r0
 738:	ldr	r2, [r0]
 73c:	add	r3, pc, r3
 740:	cmp	r2, #0
 744:	bne	74c <frame_dummy+0x20>
 748:	b	674 <register_tm_clones>
 74c:	ldr	r2, [pc, #32]	; 774 <frame_dummy+0x48>
 750:	ldr	r3, [r3, r2]
 754:	cmp	r3, #0
 758:	beq	748 <frame_dummy+0x1c>
 75c:	push	{r4, lr}
 760:	blx	r3
 764:	pop	{r4, lr}
 768:	b	674 <register_tm_clones>
 76c:	.word	0x000107c0
 770:	.word	0x000108bc
 774:	.word	0x0000004c

00000778 <mr_capab>:
 778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 77c:	add	fp, sp, #32
 780:	sub	sp, sp, #28
 784:	ldr	r6, [pc, #384]	; 90c <mr_capab+0x194>
 788:	add	r6, pc, r6
 78c:	ldr	r2, [r1, #432]	; 0x1b0
 790:	cmp	r2, #0
 794:	beq	7a4 <mr_capab+0x2c>
 798:	ldr	r0, [r1, #24]
 79c:	cmp	r0, #0
 7a0:	beq	7ac <mr_capab+0x34>
 7a4:	sub	sp, fp, #32
 7a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 7ac:	str	r3, [fp, #-52]	; 0xffffffcc
 7b0:	mov	r5, r1
 7b4:	ldr	r1, [r2, #296]	; 0x128
 7b8:	ldr	r3, [pc, #336]	; 910 <mr_capab+0x198>
 7bc:	ldr	r3, [r6, r3]
 7c0:	ldr	r3, [r3]
 7c4:	bics	r3, r1, r3
 7c8:	bne	8ec <mr_capab+0x174>
 7cc:	ldr	r3, [pc, #320]	; 914 <mr_capab+0x19c>
 7d0:	ldr	r3, [r6, r3]
 7d4:	ldr	r3, [r3]
 7d8:	orr	r3, r3, r1
 7dc:	str	r3, [r2, #296]	; 0x128
 7e0:	ldr	r3, [r5, #432]	; 0x1b0
 7e4:	ldr	r0, [r3, #288]	; 0x120
 7e8:	cmp	r0, #0
 7ec:	beq	7f4 <mr_capab+0x7c>
 7f0:	bl	598 <free@plt>
 7f4:	ldr	r8, [r5, #432]	; 0x1b0
 7f8:	ldr	r3, [fp, #4]
 7fc:	ldr	r4, [r3, #4]
 800:	mov	r0, r4
 804:	bl	5d4 <strlen@plt>
 808:	add	r0, r0, #1
 80c:	bl	5bc <malloc@plt>
 810:	subs	r7, r0, #0
 814:	beq	908 <mr_capab+0x190>
 818:	mov	r1, r4
 81c:	mov	r0, r7
 820:	bl	5b0 <strcpy@plt>
 824:	str	r7, [r8, #288]	; 0x120
 828:	ldr	r3, [fp, #-52]	; 0xffffffcc
 82c:	cmp	r3, #1
 830:	ble	7a4 <mr_capab+0x2c>
 834:	ldr	r7, [fp, #4]
 838:	mov	r8, #1
 83c:	sub	sl, fp, #40	; 0x28
 840:	ldr	r3, [pc, #208]	; 918 <mr_capab+0x1a0>
 844:	add	r3, pc, r3
 848:	str	r3, [fp, #-56]	; 0xffffffc8
 84c:	mov	r4, #0
 850:	ldr	r3, [pc, #196]	; 91c <mr_capab+0x1a4>
 854:	add	r3, pc, r3
 858:	str	r3, [fp, #-48]	; 0xffffffd0
 85c:	ldr	r9, [r7, #4]!
 860:	mov	r0, r9
 864:	bl	5d4 <strlen@plt>
 868:	add	r0, r0, #15
 86c:	bic	r0, r0, #7
 870:	sub	sp, sp, r0
 874:	mov	r3, sp
 878:	mov	r1, r9
 87c:	mov	r0, r3
 880:	bl	5b0 <strcpy@plt>
 884:	mov	r2, sl
 888:	ldr	r1, [fp, #-56]	; 0xffffffc8
 88c:	mov	r0, sp
 890:	bl	5ec <rb_strtok_r@plt>
 894:	subs	r1, r0, #0
 898:	beq	8d8 <mr_capab+0x160>
 89c:	ldr	r3, [pc, #124]	; 920 <mr_capab+0x1a8>
 8a0:	ldr	r9, [r6, r3]
 8a4:	mov	r2, r4
 8a8:	ldr	r0, [r9]
 8ac:	bl	5e0 <capability_get@plt>
 8b0:	ldr	r2, [r5, #432]	; 0x1b0
 8b4:	ldr	r3, [r2, #296]	; 0x128
 8b8:	orr	r0, r3, r0
 8bc:	str	r0, [r2, #296]	; 0x128
 8c0:	mov	r2, sl
 8c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
 8c8:	mov	r0, r4
 8cc:	bl	5ec <rb_strtok_r@plt>
 8d0:	subs	r1, r0, #0
 8d4:	bne	8a4 <mr_capab+0x12c>
 8d8:	add	r8, r8, #1
 8dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
 8e0:	cmp	r3, r8
 8e4:	bne	85c <mr_capab+0xe4>
 8e8:	b	7a4 <mr_capab+0x2c>
 8ec:	ldr	r3, [pc, #48]	; 924 <mr_capab+0x1ac>
 8f0:	add	r3, pc, r3
 8f4:	mov	r2, r5
 8f8:	mov	r1, r5
 8fc:	mov	r0, r5
 900:	bl	5f8 <exit_client@plt>
 904:	b	7a4 <mr_capab+0x2c>
 908:	bl	5a4 <rb_outofmemory@plt>
 90c:	.word	0x00010870
 910:	.word	0x00000044
 914:	.word	0x00000034
 918:	.word	0x00000284
 91c:	.word	0x00000274
 920:	.word	0x0000003c
 924:	.word	0x000001c0

00000928 <me_gcap>:
 928:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 92c:	add	fp, sp, #28
 930:	sub	sp, sp, #8
 934:	mov	r5, r2
 938:	ldr	r6, [fp, #4]
 93c:	ldr	r7, [pc, #276]	; a58 <me_gcap+0x130>
 940:	add	r7, pc, r7
 944:	ldr	r4, [r6, #4]
 948:	mov	r0, r4
 94c:	bl	5d4 <strlen@plt>
 950:	add	r0, r0, #15
 954:	bic	r0, r0, #7
 958:	sub	sp, sp, r0
 95c:	mov	r1, r4
 960:	mov	r0, sp
 964:	bl	5b0 <strcpy@plt>
 968:	ldrh	r3, [r5, #80]	; 0x50
 96c:	cmp	r3, #32
 970:	beq	97c <me_gcap+0x54>
 974:	sub	sp, fp, #28
 978:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 97c:	mov	r8, sp
 980:	ldr	r2, [r5, #28]
 984:	ldr	r3, [r2, #64]	; 0x40
 988:	cmp	r3, #0
 98c:	beq	9b8 <me_gcap+0x90>
 990:	ldrb	r3, [r3]
 994:	cmp	r3, #0
 998:	beq	9b8 <me_gcap+0x90>
 99c:	mov	r3, #0
 9a0:	str	r3, [r2, #60]	; 0x3c
 9a4:	ldr	r3, [r5, #28]
 9a8:	ldr	r0, [r3, #64]	; 0x40
 9ac:	cmp	r0, #0
 9b0:	beq	9b8 <me_gcap+0x90>
 9b4:	bl	598 <free@plt>
 9b8:	ldr	r9, [r5, #28]
 9bc:	ldr	r4, [r6, #4]
 9c0:	mov	r0, r4
 9c4:	bl	5d4 <strlen@plt>
 9c8:	add	r0, r0, #1
 9cc:	bl	5bc <malloc@plt>
 9d0:	subs	r6, r0, #0
 9d4:	beq	a54 <me_gcap+0x12c>
 9d8:	mov	r1, r4
 9dc:	mov	r0, r6
 9e0:	bl	5b0 <strcpy@plt>
 9e4:	str	r6, [r9, #64]	; 0x40
 9e8:	sub	r2, fp, #32
 9ec:	ldr	r1, [pc, #104]	; a5c <me_gcap+0x134>
 9f0:	add	r1, pc, r1
 9f4:	mov	r0, r8
 9f8:	bl	5ec <rb_strtok_r@plt>
 9fc:	subs	r1, r0, #0
 a00:	beq	974 <me_gcap+0x4c>
 a04:	ldr	r3, [pc, #84]	; a60 <me_gcap+0x138>
 a08:	ldr	r8, [r7, r3]
 a0c:	mov	r4, #0
 a10:	sub	r7, fp, #32
 a14:	ldr	r6, [pc, #72]	; a64 <me_gcap+0x13c>
 a18:	add	r6, pc, r6
 a1c:	mov	r2, r4
 a20:	ldr	r0, [r8]
 a24:	bl	5e0 <capability_get@plt>
 a28:	ldr	r2, [r5, #28]
 a2c:	ldr	r3, [r2, #60]	; 0x3c
 a30:	orr	r0, r3, r0
 a34:	str	r0, [r2, #60]	; 0x3c
 a38:	mov	r2, r7
 a3c:	mov	r1, r6
 a40:	mov	r0, r4
 a44:	bl	5ec <rb_strtok_r@plt>
 a48:	subs	r1, r0, #0
 a4c:	bne	a1c <me_gcap+0xf4>
 a50:	b	974 <me_gcap+0x4c>
 a54:	bl	5a4 <rb_outofmemory@plt>
 a58:	.word	0x000106b8
 a5c:	.word	0x000000d8
 a60:	.word	0x0000003c
 a64:	.word	0x000000b0

Disassembly of section .fini:

00000a68 <_fini>:
 a68:	push	{r3, lr}
 a6c:	pop	{r3, pc}
