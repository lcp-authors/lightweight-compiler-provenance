
../repos/coreutils/src/libstdbuf.so:     file format elf32-littlearm


Disassembly of section .init:

00000474 <.init>:
 474:	push	{r3, lr}
 478:	bl	50c <strtoumax@plt+0xc>
 47c:	pop	{r3, pc}

Disassembly of section .plt:

00000480 <__cxa_finalize@plt-0x14>:
 480:	push	{lr}		; (str lr, [sp, #-4]!)
 484:	ldr	lr, [pc, #4]	; 490 <__cxa_finalize@plt-0x4>
 488:	add	lr, pc, lr
 48c:	ldr	pc, [lr, #8]!
 490:	andeq	r0, r1, r0, ror fp

00000494 <__cxa_finalize@plt>:
 494:	add	ip, pc, #0, 12
 498:	add	ip, ip, #16, 20	; 0x10000
 49c:	ldr	pc, [ip, #2928]!	; 0xb70

000004a0 <free@plt>:
 4a0:	add	ip, pc, #0, 12
 4a4:	add	ip, ip, #16, 20	; 0x10000
 4a8:	ldr	pc, [ip, #2920]!	; 0xb68

000004ac <getenv@plt>:
 4ac:	add	ip, pc, #0, 12
 4b0:	add	ip, ip, #16, 20	; 0x10000
 4b4:	ldr	pc, [ip, #2912]!	; 0xb60

000004b8 <malloc@plt>:
 4b8:	add	ip, pc, #0, 12
 4bc:	add	ip, ip, #16, 20	; 0x10000
 4c0:	ldr	pc, [ip, #2904]!	; 0xb58

000004c4 <__gmon_start__@plt>:
 4c4:	add	ip, pc, #0, 12
 4c8:	add	ip, ip, #16, 20	; 0x10000
 4cc:	ldr	pc, [ip, #2896]!	; 0xb50

000004d0 <gettext@plt>:
 4d0:	add	ip, pc, #0, 12
 4d4:	add	ip, ip, #16, 20	; 0x10000
 4d8:	ldr	pc, [ip, #2888]!	; 0xb48

000004dc <fprintf@plt>:
 4dc:	add	ip, pc, #0, 12
 4e0:	add	ip, ip, #16, 20	; 0x10000
 4e4:	ldr	pc, [ip, #2880]!	; 0xb40

000004e8 <setvbuf@plt>:
 4e8:	add	ip, pc, #0, 12
 4ec:	add	ip, ip, #16, 20	; 0x10000
 4f0:	ldr	pc, [ip, #2872]!	; 0xb38

000004f4 <fileno@plt>:
 4f4:	add	ip, pc, #0, 12
 4f8:	add	ip, ip, #16, 20	; 0x10000
 4fc:	ldr	pc, [ip, #2864]!	; 0xb30

00000500 <strtoumax@plt>:
 500:	add	ip, pc, #0, 12
 504:	add	ip, ip, #16, 20	; 0x10000
 508:	ldr	pc, [ip, #2856]!	; 0xb28

Disassembly of section .text:

0000050c <.text>:
 50c:	ldr	r3, [pc, #20]	; 528 <strtoumax@plt+0x28>
 510:	ldr	r2, [pc, #20]	; 52c <strtoumax@plt+0x2c>
 514:	add	r3, pc, r3
 518:	ldr	r2, [r3, r2]
 51c:	cmp	r2, #0
 520:	bxeq	lr
 524:	b	4c4 <__gmon_start__@plt>
 528:	andeq	r0, r1, r4, ror #21
 52c:	andeq	r0, r0, r0, asr #32
 530:	ldr	r0, [pc, #44]	; 564 <strtoumax@plt+0x64>
 534:	ldr	r3, [pc, #44]	; 568 <strtoumax@plt+0x68>
 538:	add	r0, pc, r0
 53c:	add	r3, pc, r3
 540:	cmp	r3, r0
 544:	ldr	r3, [pc, #32]	; 56c <strtoumax@plt+0x6c>
 548:	add	r3, pc, r3
 54c:	bxeq	lr
 550:	ldr	r2, [pc, #24]	; 570 <strtoumax@plt+0x70>
 554:	ldr	r3, [r3, r2]
 558:	cmp	r3, #0
 55c:	bxeq	lr
 560:	bx	r3
 564:	andeq	r0, r1, r4, lsl fp
 568:	andeq	r0, r1, r0, lsl fp
 56c:			; <UNDEFINED> instruction: 0x00010ab0
 570:	andeq	r0, r0, r8, lsr r0
 574:	ldr	r0, [pc, #56]	; 5b4 <strtoumax@plt+0xb4>
 578:	ldr	r3, [pc, #56]	; 5b8 <strtoumax@plt+0xb8>
 57c:	add	r0, pc, r0
 580:	add	r3, pc, r3
 584:	sub	r1, r3, r0
 588:	ldr	r3, [pc, #44]	; 5bc <strtoumax@plt+0xbc>
 58c:	asr	r1, r1, #2
 590:	add	r3, pc, r3
 594:	add	r1, r1, r1, lsr #31
 598:	asrs	r1, r1, #1
 59c:	bxeq	lr
 5a0:	ldr	r2, [pc, #24]	; 5c0 <strtoumax@plt+0xc0>
 5a4:	ldr	r3, [r3, r2]
 5a8:	cmp	r3, #0
 5ac:	bxeq	lr
 5b0:	bx	r3
 5b4:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
 5b8:	andeq	r0, r1, ip, asr #21
 5bc:	andeq	r0, r1, r8, ror #20
 5c0:	andeq	r0, r0, ip, asr #32
 5c4:	ldr	r3, [pc, #76]	; 618 <strtoumax@plt+0x118>
 5c8:	ldr	r2, [pc, #76]	; 61c <strtoumax@plt+0x11c>
 5cc:	add	r3, pc, r3
 5d0:	add	r2, pc, r2
 5d4:	ldrb	r3, [r3]
 5d8:	cmp	r3, #0
 5dc:	bxne	lr
 5e0:	ldr	r3, [pc, #56]	; 620 <strtoumax@plt+0x120>
 5e4:	push	{r4, lr}
 5e8:	ldr	r3, [r2, r3]
 5ec:	cmp	r3, #0
 5f0:	beq	600 <strtoumax@plt+0x100>
 5f4:	ldr	r3, [pc, #40]	; 624 <strtoumax@plt+0x124>
 5f8:	ldr	r0, [pc, r3]
 5fc:	bl	494 <__cxa_finalize@plt>
 600:	bl	530 <strtoumax@plt+0x30>
 604:	ldr	r3, [pc, #28]	; 628 <strtoumax@plt+0x128>
 608:	mov	r2, #1
 60c:	add	r3, pc, r3
 610:	strb	r2, [r3]
 614:	pop	{r4, pc}
 618:	andeq	r0, r1, r0, lsl #21
 61c:	andeq	r0, r1, r8, lsr #20
 620:	andeq	r0, r0, r4, lsr r0
 624:	andeq	r0, r1, r0, asr sl
 628:	andeq	r0, r1, r0, asr #20
 62c:	b	574 <strtoumax@plt+0x74>
 630:	push	{fp, lr}
 634:	mov	fp, sp
 638:	sub	sp, sp, #16
 63c:	ldr	r0, [pc, #172]	; 6f0 <strtoumax@plt+0x1f0>
 640:	add	r0, pc, r0
 644:	bl	4ac <getenv@plt>
 648:	ldr	r1, [pc, #156]	; 6ec <strtoumax@plt+0x1ec>
 64c:	add	r1, pc, r1
 650:	str	r0, [fp, #-4]
 654:	mov	r0, r1
 658:	bl	4ac <getenv@plt>
 65c:	ldr	r1, [pc, #132]	; 6e8 <strtoumax@plt+0x1e8>
 660:	add	r1, pc, r1
 664:	str	r0, [sp, #8]
 668:	mov	r0, r1
 66c:	bl	4ac <getenv@plt>
 670:	str	r0, [sp, #4]
 674:	ldr	r0, [fp, #-4]
 678:	movw	r1, #0
 67c:	cmp	r0, r1
 680:	beq	698 <strtoumax@plt+0x198>
 684:	ldr	r0, [pc, #104]	; 6f4 <strtoumax@plt+0x1f4>
 688:	ldr	r0, [pc, r0]
 68c:	ldr	r0, [r0]
 690:	ldr	r1, [fp, #-4]
 694:	bl	700 <strtoumax@plt+0x200>
 698:	ldr	r0, [sp, #8]
 69c:	movw	r1, #0
 6a0:	cmp	r0, r1
 6a4:	beq	6bc <strtoumax@plt+0x1bc>
 6a8:	ldr	r0, [pc, #72]	; 6f8 <strtoumax@plt+0x1f8>
 6ac:	ldr	r0, [pc, r0]
 6b0:	ldr	r0, [r0]
 6b4:	ldr	r1, [sp, #8]
 6b8:	bl	700 <strtoumax@plt+0x200>
 6bc:	ldr	r0, [sp, #4]
 6c0:	movw	r1, #0
 6c4:	cmp	r0, r1
 6c8:	beq	6e0 <strtoumax@plt+0x1e0>
 6cc:	ldr	r0, [pc, #40]	; 6fc <strtoumax@plt+0x1fc>
 6d0:	ldr	r0, [pc, r0]
 6d4:	ldr	r0, [r0]
 6d8:	ldr	r1, [sp, #4]
 6dc:	bl	700 <strtoumax@plt+0x200>
 6e0:	mov	sp, fp
 6e4:	pop	{fp, pc}
 6e8:	andeq	r0, r0, r0, ror r3
 6ec:	andeq	r0, r0, sl, ror r3
 6f0:	andeq	r0, r0, ip, ror r3
 6f4:	andeq	r0, r1, ip, lsr #19
 6f8:	muleq	r1, r0, r9
 6fc:	andeq	r0, r1, r0, ror r9
 700:	push	{fp, lr}
 704:	mov	fp, sp
 708:	sub	sp, sp, #72	; 0x48
 70c:	str	r0, [fp, #-4]
 710:	str	r1, [fp, #-8]
 714:	mov	r0, #0
 718:	str	r0, [fp, #-12]
 71c:	str	r0, [fp, #-20]	; 0xffffffec
 720:	str	r0, [fp, #-24]	; 0xffffffe8
 724:	ldr	r0, [fp, #-8]
 728:	ldrb	r0, [r0]
 72c:	cmp	r0, #48	; 0x30
 730:	bne	740 <strtoumax@plt+0x240>
 734:	movw	r0, #2
 738:	str	r0, [fp, #-16]
 73c:	b	888 <strtoumax@plt+0x388>
 740:	ldr	r0, [fp, #-8]
 744:	ldrb	r0, [r0]
 748:	cmp	r0, #76	; 0x4c
 74c:	bne	75c <strtoumax@plt+0x25c>
 750:	movw	r0, #1
 754:	str	r0, [fp, #-16]
 758:	b	884 <strtoumax@plt+0x384>
 75c:	mov	r0, #0
 760:	str	r0, [fp, #-16]
 764:	ldr	r0, [fp, #-8]
 768:	sub	r1, fp, #28
 76c:	mov	r2, #10
 770:	bl	500 <strtoumax@plt>
 774:	str	r1, [fp, #-20]	; 0xffffffec
 778:	str	r0, [fp, #-24]	; 0xffffffe8
 77c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 780:	ldr	r1, [fp, #-20]	; 0xffffffec
 784:	orr	r0, r0, r1
 788:	cmp	r0, #0
 78c:	beq	7a4 <strtoumax@plt+0x2a4>
 790:	b	794 <strtoumax@plt+0x294>
 794:	ldr	r0, [fp, #-28]	; 0xffffffe4
 798:	ldrb	r0, [r0]
 79c:	cmp	r0, #0
 7a0:	beq	7fc <strtoumax@plt+0x2fc>
 7a4:	ldr	r0, [pc, #348]	; 908 <strtoumax@plt+0x408>
 7a8:	add	r0, pc, r0
 7ac:	ldr	r1, [pc, #344]	; 90c <strtoumax@plt+0x40c>
 7b0:	ldr	r1, [pc, r1]
 7b4:	ldr	r1, [r1]
 7b8:	str	r1, [fp, #-32]	; 0xffffffe0
 7bc:	bl	4d0 <gettext@plt>
 7c0:	ldr	r2, [fp, #-8]
 7c4:	ldr	r1, [fp, #-4]
 7c8:	str	r0, [sp, #36]	; 0x24
 7cc:	mov	r0, r1
 7d0:	str	r2, [sp, #32]
 7d4:	bl	4f4 <fileno@plt>
 7d8:	bl	920 <strtoumax@plt+0x420>
 7dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
 7e0:	str	r0, [sp, #28]
 7e4:	mov	r0, r1
 7e8:	ldr	r1, [sp, #36]	; 0x24
 7ec:	ldr	r2, [sp, #32]
 7f0:	ldr	r3, [sp, #28]
 7f4:	bl	4dc <fprintf@plt>
 7f8:	b	900 <strtoumax@plt+0x400>
 7fc:	ldr	r0, [fp, #-20]	; 0xffffffec
 800:	cmp	r0, #0
 804:	bne	81c <strtoumax@plt+0x31c>
 808:	b	80c <strtoumax@plt+0x30c>
 80c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 810:	bl	4b8 <malloc@plt>
 814:	str	r0, [sp, #24]
 818:	b	828 <strtoumax@plt+0x328>
 81c:	movw	r0, #0
 820:	str	r0, [sp, #24]
 824:	b	828 <strtoumax@plt+0x328>
 828:	ldr	r0, [sp, #24]
 82c:	str	r0, [fp, #-12]
 830:	ldr	r0, [fp, #-12]
 834:	movw	r1, #0
 838:	cmp	r0, r1
 83c:	bne	880 <strtoumax@plt+0x380>
 840:	ldr	r0, [pc, #208]	; 918 <strtoumax@plt+0x418>
 844:	ldr	r0, [pc, r0]
 848:	ldr	r0, [r0]
 84c:	ldr	r1, [pc, #200]	; 91c <strtoumax@plt+0x41c>
 850:	add	r1, pc, r1
 854:	str	r0, [sp, #20]
 858:	mov	r0, r1
 85c:	bl	4d0 <gettext@plt>
 860:	ldr	r2, [fp, #-24]	; 0xffffffe8
 864:	ldr	r3, [fp, #-20]	; 0xffffffec
 868:	ldr	r1, [sp, #20]
 86c:	str	r0, [sp, #16]
 870:	mov	r0, r1
 874:	ldr	r1, [sp, #16]
 878:	bl	4dc <fprintf@plt>
 87c:	b	900 <strtoumax@plt+0x400>
 880:	b	884 <strtoumax@plt+0x384>
 884:	b	888 <strtoumax@plt+0x388>
 888:	ldr	r0, [fp, #-4]
 88c:	ldr	r1, [fp, #-12]
 890:	ldr	r2, [fp, #-16]
 894:	ldr	r3, [fp, #-24]	; 0xffffffe8
 898:	bl	4e8 <setvbuf@plt>
 89c:	cmp	r0, #0
 8a0:	beq	900 <strtoumax@plt+0x400>
 8a4:	ldr	r0, [pc, #100]	; 910 <strtoumax@plt+0x410>
 8a8:	add	r0, pc, r0
 8ac:	ldr	r1, [pc, #96]	; 914 <strtoumax@plt+0x414>
 8b0:	ldr	r1, [pc, r1]
 8b4:	ldr	r1, [r1]
 8b8:	str	r1, [sp, #12]
 8bc:	bl	4d0 <gettext@plt>
 8c0:	ldr	r1, [fp, #-4]
 8c4:	str	r0, [sp, #8]
 8c8:	mov	r0, r1
 8cc:	bl	4f4 <fileno@plt>
 8d0:	bl	920 <strtoumax@plt+0x420>
 8d4:	ldr	r3, [fp, #-8]
 8d8:	ldr	r1, [sp, #12]
 8dc:	str	r0, [sp, #4]
 8e0:	mov	r0, r1
 8e4:	ldr	r1, [sp, #8]
 8e8:	ldr	r2, [sp, #4]
 8ec:	bl	4dc <fprintf@plt>
 8f0:	ldr	r1, [fp, #-12]
 8f4:	str	r0, [sp]
 8f8:	mov	r0, r1
 8fc:	bl	4a0 <free@plt>
 900:	mov	sp, fp
 904:	pop	{fp, pc}
 908:	andeq	r0, r0, r2, lsr r2
 90c:	andeq	r0, r1, r4, lsl #17
 910:	andeq	r0, r0, r1, lsl #3
 914:	andeq	r0, r1, r4, lsl #15
 918:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
 91c:	andeq	r0, r0, ip, lsr #3
 920:	sub	sp, sp, #12
 924:	str	r0, [sp, #8]
 928:	mov	r0, #0
 92c:	str	r0, [sp, #4]
 930:	ldr	r0, [sp, #8]
 934:	cmp	r0, #0
 938:	str	r0, [sp]
 93c:	beq	964 <strtoumax@plt+0x464>
 940:	b	944 <strtoumax@plt+0x444>
 944:	ldr	r0, [sp]
 948:	cmp	r0, #1
 94c:	beq	974 <strtoumax@plt+0x474>
 950:	b	954 <strtoumax@plt+0x454>
 954:	ldr	r0, [sp]
 958:	cmp	r0, #2
 95c:	beq	984 <strtoumax@plt+0x484>
 960:	b	994 <strtoumax@plt+0x494>
 964:	ldr	r0, [pc, #72]	; 9b4 <strtoumax@plt+0x4b4>
 968:	add	r0, pc, r0
 96c:	str	r0, [sp, #4]
 970:	b	9a0 <strtoumax@plt+0x4a0>
 974:	ldr	r0, [pc, #52]	; 9b0 <strtoumax@plt+0x4b0>
 978:	add	r0, pc, r0
 97c:	str	r0, [sp, #4]
 980:	b	9a0 <strtoumax@plt+0x4a0>
 984:	ldr	r0, [pc, #32]	; 9ac <strtoumax@plt+0x4ac>
 988:	add	r0, pc, r0
 98c:	str	r0, [sp, #4]
 990:	b	9a0 <strtoumax@plt+0x4a0>
 994:	ldr	r0, [pc, #28]	; 9b8 <strtoumax@plt+0x4b8>
 998:	add	r0, pc, r0
 99c:	str	r0, [sp, #4]
 9a0:	ldr	r0, [sp, #4]
 9a4:	add	sp, sp, #12
 9a8:	bx	lr
 9ac:	ldrdeq	r0, [r0], -r8
 9b0:	andeq	r0, r0, r1, ror #1
 9b4:	andeq	r0, r0, fp, ror #1
 9b8:	andeq	r0, r0, pc, asr #1

Disassembly of section .fini:

000009bc <.fini>:
 9bc:	push	{r3, lr}
 9c0:	pop	{r3, pc}
