
../repos/sgerbino-table-2fdd8d0/bin/table_callback_test:     file format elf32-littlearm


Disassembly of section .init:

00011a4c <.init>:
   11a4c:	push	{r3, lr}
   11a50:	bl	11c80 <_start@@Base+0x3c>
   11a54:	pop	{r3, pc}

Disassembly of section .plt:

00011a58 <strcmp@plt-0x14>:
   11a58:	push	{lr}		; (str lr, [sp, #-4]!)
   11a5c:	ldr	lr, [pc, #4]	; 11a68 <strcmp@plt-0x4>
   11a60:	add	lr, pc, lr
   11a64:	ldr	pc, [lr, #8]!
   11a68:	muleq	r1, r8, r5

00011a6c <strcmp@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #77824	; 0x13000
   11a74:	ldr	pc, [ip, #1432]!	; 0x598

00011a78 <printf@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #77824	; 0x13000
   11a80:	ldr	pc, [ip, #1424]!	; 0x590

00011a84 <free@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #77824	; 0x13000
   11a8c:	ldr	pc, [ip, #1416]!	; 0x588

00011a90 <realloc@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #77824	; 0x13000
   11a98:	ldr	pc, [ip, #1408]!	; 0x580

00011a9c <strcpy@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #77824	; 0x13000
   11aa4:	ldr	pc, [ip, #1400]!	; 0x578

00011aa8 <puts@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #77824	; 0x13000
   11ab0:	ldr	pc, [ip, #1392]!	; 0x570

00011ab4 <malloc@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #77824	; 0x13000
   11abc:	ldr	pc, [ip, #1384]!	; 0x568

00011ac0 <__libc_start_main@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #77824	; 0x13000
   11ac8:	ldr	pc, [ip, #1376]!	; 0x560

00011acc <__gmon_start__@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #77824	; 0x13000
   11ad4:	ldr	pc, [ip, #1368]!	; 0x558

00011ad8 <strlen@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #77824	; 0x13000
   11ae0:	ldr	pc, [ip, #1360]!	; 0x550

00011ae4 <snprintf@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #77824	; 0x13000
   11aec:	ldr	pc, [ip, #1352]!	; 0x548

00011af0 <__isoc99_sscanf@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #77824	; 0x13000
   11af8:	ldr	pc, [ip, #1344]!	; 0x540

00011afc <abort@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #77824	; 0x13000
   11b04:	ldr	pc, [ip, #1336]!	; 0x538

Disassembly of section .text:

00011b08 <main@@Base>:
   11b08:	push	{r4, r5, r6, lr}
   11b0c:	mov	r4, #0
   11b10:	sub	sp, sp, #64	; 0x40
   11b14:	add	r0, sp, #8
   11b18:	str	r4, [sp, #4]
   11b1c:	bl	11d48 <table_init@@Base>
   11b20:	mvn	r3, #0
   11b24:	add	r2, sp, #4
   11b28:	ldr	r1, [pc, #244]	; 11c24 <main@@Base+0x11c>
   11b2c:	add	r0, sp, #8
   11b30:	bl	12374 <table_register_callback@@Base>
   11b34:	add	r0, sp, #8
   11b38:	bl	13170 <table_add_row@@Base>
   11b3c:	ldr	r3, [sp, #4]
   11b40:	mov	r6, r0
   11b44:	tst	r3, #2
   11b48:	bne	11b58 <main@@Base+0x50>
   11b4c:	ldr	r0, [pc, #212]	; 11c28 <main@@Base+0x120>
   11b50:	mvn	r4, #0
   11b54:	bl	11aa8 <puts@plt>
   11b58:	mov	r2, #0
   11b5c:	ldr	r1, [pc, #200]	; 11c2c <main@@Base+0x124>
   11b60:	add	r0, sp, #8
   11b64:	bl	126b8 <table_add_column@@Base>
   11b68:	ldr	r3, [sp, #4]
   11b6c:	mov	r5, r0
   11b70:	tst	r3, #8
   11b74:	bne	11b84 <main@@Base+0x7c>
   11b78:	ldr	r0, [pc, #176]	; 11c30 <main@@Base+0x128>
   11b7c:	mvn	r4, #0
   11b80:	bl	11aa8 <puts@plt>
   11b84:	mov	r3, #42	; 0x2a
   11b88:	mov	r2, r5
   11b8c:	mov	r1, r6
   11b90:	add	r0, sp, #8
   11b94:	bl	13620 <table_set_int@@Base>
   11b98:	ldr	r3, [sp, #4]
   11b9c:	tst	r3, #1
   11ba0:	bne	11bb0 <main@@Base+0xa8>
   11ba4:	ldr	r0, [pc, #136]	; 11c34 <main@@Base+0x12c>
   11ba8:	mvn	r4, #0
   11bac:	bl	11a78 <printf@plt>
   11bb0:	mov	r1, r6
   11bb4:	add	r0, sp, #8
   11bb8:	bl	13210 <table_remove_row@@Base>
   11bbc:	ldr	r3, [sp, #4]
   11bc0:	tst	r3, #4
   11bc4:	bne	11bd4 <main@@Base+0xcc>
   11bc8:	ldr	r0, [pc, #104]	; 11c38 <main@@Base+0x130>
   11bcc:	mvn	r4, #0
   11bd0:	bl	11a78 <printf@plt>
   11bd4:	mov	r1, r5
   11bd8:	add	r0, sp, #8
   11bdc:	bl	127bc <table_remove_column@@Base>
   11be0:	ldr	r3, [sp, #4]
   11be4:	tst	r3, #16
   11be8:	bne	11bf8 <main@@Base+0xf0>
   11bec:	ldr	r0, [pc, #72]	; 11c3c <main@@Base+0x134>
   11bf0:	mvn	r4, #0
   11bf4:	bl	11a78 <printf@plt>
   11bf8:	add	r0, sp, #8
   11bfc:	bl	11da0 <table_destroy@@Base>
   11c00:	ldr	r3, [sp, #4]
   11c04:	tst	r3, #64	; 0x40
   11c08:	bne	11c18 <main@@Base+0x110>
   11c0c:	ldr	r0, [pc, #44]	; 11c40 <main@@Base+0x138>
   11c10:	mvn	r4, #0
   11c14:	bl	11a78 <printf@plt>
   11c18:	mov	r0, r4
   11c1c:	add	sp, sp, #64	; 0x40
   11c20:	pop	{r4, r5, r6, pc}
   11c24:	andeq	r1, r1, r4, lsr sp
   11c28:	andeq	r4, r1, ip, ror #4
   11c2c:	muleq	r1, r4, r2
   11c30:	muleq	r1, r7, r2
   11c34:	andeq	r4, r1, r2, asr #5
   11c38:	andeq	r4, r1, lr, ror #5
   11c3c:	andeq	r4, r1, r8, lsl r3
   11c40:	andeq	r4, r1, r5, asr #6

00011c44 <_start@@Base>:
   11c44:	mov	fp, #0
   11c48:	mov	lr, #0
   11c4c:	pop	{r1}		; (ldr r1, [sp], #4)
   11c50:	mov	r2, sp
   11c54:	push	{r2}		; (str r2, [sp, #-4]!)
   11c58:	push	{r0}		; (str r0, [sp, #-4]!)
   11c5c:	ldr	ip, [pc, #16]	; 11c74 <_start@@Base+0x30>
   11c60:	push	{ip}		; (str ip, [sp, #-4]!)
   11c64:	ldr	r0, [pc, #12]	; 11c78 <_start@@Base+0x34>
   11c68:	ldr	r3, [pc, #12]	; 11c7c <_start@@Base+0x38>
   11c6c:	bl	11ac0 <__libc_start_main@plt>
   11c70:	bl	11afc <abort@plt>
   11c74:	andeq	r4, r1, ip, asr r2
   11c78:	andeq	r1, r1, r8, lsl #22
   11c7c:	strdeq	r4, [r1], -ip
   11c80:	ldr	r3, [pc, #20]	; 11c9c <_start@@Base+0x58>
   11c84:	ldr	r2, [pc, #20]	; 11ca0 <_start@@Base+0x5c>
   11c88:	add	r3, pc, r3
   11c8c:	ldr	r2, [r3, r2]
   11c90:	cmp	r2, #0
   11c94:	bxeq	lr
   11c98:	b	11acc <__gmon_start__@plt>
   11c9c:	andeq	r3, r1, r0, ror r3
   11ca0:	andeq	r0, r0, r0, asr #32
   11ca4:	ldr	r0, [pc, #24]	; 11cc4 <_start@@Base+0x80>
   11ca8:	ldr	r3, [pc, #24]	; 11cc8 <_start@@Base+0x84>
   11cac:	cmp	r3, r0
   11cb0:	bxeq	lr
   11cb4:	ldr	r3, [pc, #16]	; 11ccc <_start@@Base+0x88>
   11cb8:	cmp	r3, #0
   11cbc:	bxeq	lr
   11cc0:	bx	r3
   11cc4:	andeq	r5, r2, ip, asr #32
   11cc8:	andeq	r5, r2, ip, asr #32
   11ccc:	andeq	r0, r0, r0
   11cd0:	ldr	r0, [pc, #36]	; 11cfc <_start@@Base+0xb8>
   11cd4:	ldr	r1, [pc, #36]	; 11d00 <_start@@Base+0xbc>
   11cd8:	sub	r1, r1, r0
   11cdc:	asr	r1, r1, #2
   11ce0:	add	r1, r1, r1, lsr #31
   11ce4:	asrs	r1, r1, #1
   11ce8:	bxeq	lr
   11cec:	ldr	r3, [pc, #16]	; 11d04 <_start@@Base+0xc0>
   11cf0:	cmp	r3, #0
   11cf4:	bxeq	lr
   11cf8:	bx	r3
   11cfc:	andeq	r5, r2, ip, asr #32
   11d00:	andeq	r5, r2, ip, asr #32
   11d04:	andeq	r0, r0, r0
   11d08:	push	{r4, lr}
   11d0c:	ldr	r4, [pc, #24]	; 11d2c <_start@@Base+0xe8>
   11d10:	ldrb	r3, [r4]
   11d14:	cmp	r3, #0
   11d18:	popne	{r4, pc}
   11d1c:	bl	11ca4 <_start@@Base+0x60>
   11d20:	mov	r3, #1
   11d24:	strb	r3, [r4]
   11d28:	pop	{r4, pc}
   11d2c:	andeq	r5, r2, ip, asr #32
   11d30:	b	11cd0 <_start@@Base+0x8c>
   11d34:	ldr	r1, [sp]
   11d38:	ldr	r2, [r1]
   11d3c:	orr	r3, r2, r3
   11d40:	str	r3, [r1]
   11d44:	bx	lr

00011d48 <table_init@@Base>:
   11d48:	mov	r3, #0
   11d4c:	mov	r2, #10
   11d50:	mov	r1, #20
   11d54:	str	r3, [r0]
   11d58:	str	r3, [r0, #4]
   11d5c:	strd	r2, [r0, #8]
   11d60:	str	r3, [r0, #16]
   11d64:	str	r3, [r0, #20]
   11d68:	str	r1, [r0, #24]
   11d6c:	str	r3, [r0, #28]
   11d70:	str	r3, [r0, #32]
   11d74:	str	r3, [r0, #36]	; 0x24
   11d78:	str	r3, [r0, #40]	; 0x28
   11d7c:	str	r3, [r0, #44]	; 0x2c
   11d80:	strd	r2, [r0, #48]	; 0x30
   11d84:	bx	lr

00011d88 <table_new@@Base>:
   11d88:	push	{r4, lr}
   11d8c:	mov	r0, #56	; 0x38
   11d90:	bl	11ab4 <malloc@plt>
   11d94:	mov	r4, r0
   11d98:	bl	11d48 <table_init@@Base>
   11d9c:	pop	{r4, pc}

00011da0 <table_destroy@@Base>:
   11da0:	push	{r4, r5, r6, lr}
   11da4:	subs	r4, r0, #0
   11da8:	popeq	{r4, r5, r6, pc}
   11dac:	mvn	r2, #0
   11db0:	mov	r3, #64	; 0x40
   11db4:	mov	r1, r2
   11db8:	mov	r5, #0
   11dbc:	bl	12574 <table_notify@@Base>
   11dc0:	mov	r0, r4
   11dc4:	bl	13168 <table_get_row_length@@Base>
   11dc8:	mov	r6, r0
   11dcc:	cmp	r6, r5
   11dd0:	bgt	11e40 <table_destroy@@Base+0xa0>
   11dd4:	ldr	r0, [r4, #16]
   11dd8:	cmp	r0, #0
   11ddc:	beq	11de4 <table_destroy@@Base+0x44>
   11de0:	bl	11a84 <free@plt>
   11de4:	mov	r0, r4
   11de8:	mov	r5, #0
   11dec:	bl	1264c <table_get_column_length@@Base>
   11df0:	mov	r6, r0
   11df4:	cmp	r6, r5
   11df8:	bgt	11e54 <table_destroy@@Base+0xb4>
   11dfc:	ldr	r0, [r4]
   11e00:	cmp	r0, #0
   11e04:	beq	11e0c <table_destroy@@Base+0x6c>
   11e08:	bl	11a84 <free@plt>
   11e0c:	ldr	r0, [r4, #36]	; 0x24
   11e10:	cmp	r0, #0
   11e14:	beq	11e1c <table_destroy@@Base+0x7c>
   11e18:	bl	11a84 <free@plt>
   11e1c:	ldr	r0, [r4, #40]	; 0x28
   11e20:	cmp	r0, #0
   11e24:	beq	11e2c <table_destroy@@Base+0x8c>
   11e28:	bl	11a84 <free@plt>
   11e2c:	ldr	r0, [r4, #44]	; 0x2c
   11e30:	cmp	r0, #0
   11e34:	popeq	{r4, r5, r6, pc}
   11e38:	pop	{r4, r5, r6, lr}
   11e3c:	b	11a84 <free@plt>
   11e40:	mov	r1, r5
   11e44:	mov	r0, r4
   11e48:	bl	13118 <table_row_destroy@@Base>
   11e4c:	add	r5, r5, #1
   11e50:	b	11dcc <table_destroy@@Base+0x2c>
   11e54:	mov	r1, r5
   11e58:	mov	r0, r4
   11e5c:	bl	12630 <table_column_destroy@@Base>
   11e60:	add	r5, r5, #1
   11e64:	b	11df4 <table_destroy@@Base+0x54>

00011e68 <table_delete@@Base>:
   11e68:	push	{r4, lr}
   11e6c:	mov	r4, r0
   11e70:	bl	11da0 <table_destroy@@Base>
   11e74:	mov	r0, r4
   11e78:	pop	{r4, lr}
   11e7c:	b	11a84 <free@plt>

00011e80 <table_dupe@@Base>:
   11e80:	push	{r4, r5, r6, r7, r8, r9, lr}
   11e84:	sub	sp, sp, #20
   11e88:	mov	r6, r0
   11e8c:	mov	r4, #0
   11e90:	bl	13168 <table_get_row_length@@Base>
   11e94:	mov	r9, r0
   11e98:	mov	r0, r6
   11e9c:	bl	1264c <table_get_column_length@@Base>
   11ea0:	mov	r8, r0
   11ea4:	bl	11d88 <table_new@@Base>
   11ea8:	mov	r7, r0
   11eac:	cmp	r4, r8
   11eb0:	blt	11ecc <table_dupe@@Base+0x4c>
   11eb4:	mov	r5, #0
   11eb8:	cmp	r5, r9
   11ebc:	mov	r0, r7
   11ec0:	blt	11f00 <table_dupe@@Base+0x80>
   11ec4:	add	sp, sp, #20
   11ec8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11ecc:	mov	r1, r4
   11ed0:	mov	r0, r6
   11ed4:	bl	12910 <table_get_column_name@@Base>
   11ed8:	mov	r5, r0
   11edc:	mov	r1, r4
   11ee0:	mov	r0, r6
   11ee4:	add	r4, r4, #1
   11ee8:	bl	126a4 <table_get_column_data_type@@Base>
   11eec:	mov	r2, r0
   11ef0:	mov	r1, r5
   11ef4:	mov	r0, r7
   11ef8:	bl	126b8 <table_add_column@@Base>
   11efc:	b	11eac <table_dupe@@Base+0x2c>
   11f00:	mov	r4, #0
   11f04:	bl	13170 <table_add_row@@Base>
   11f08:	cmp	r4, r8
   11f0c:	addge	r5, r5, #1
   11f10:	bge	11eb8 <table_dupe@@Base+0x38>
   11f14:	mov	r1, r4
   11f18:	mov	r0, r6
   11f1c:	bl	126a4 <table_get_column_data_type@@Base>
   11f20:	cmp	r0, #23
   11f24:	ldrls	pc, [pc, r0, lsl #2]
   11f28:	b	11fb0 <table_dupe@@Base+0x130>
   11f2c:	andeq	r1, r1, ip, lsl #31
   11f30:			; <UNDEFINED> instruction: 0x00011fb8
   11f34:	andeq	r1, r1, r0, ror #31
   11f38:	andeq	r2, r1, r8
   11f3c:	andeq	r2, r1, r0, lsr r0
   11f40:	andeq	r2, r1, r8, asr r0
   11f44:	andeq	r2, r1, r0, lsl #1
   11f48:	andeq	r2, r1, r8, lsr #1
   11f4c:	ldrdeq	r2, [r1], -r0
   11f50:	strdeq	r2, [r1], -r8
   11f54:	andeq	r2, r1, r0, lsr #2
   11f58:	andeq	r2, r1, r8, asr #2
   11f5c:	andeq	r2, r1, r0, ror r1
   11f60:	muleq	r1, r8, r1
   11f64:	andeq	r2, r1, r0, asr #3
   11f68:	andeq	r2, r1, r8, ror #3
   11f6c:	andeq	r2, r1, r8, lsr r2
   11f70:	andeq	r2, r1, ip, asr r2
   11f74:	andeq	r2, r1, r0, lsl #5
   11f78:	andeq	r2, r1, ip, asr #5
   11f7c:	strdeq	r2, [r1], -r4
   11f80:	andeq	r2, r1, r0, lsl r2
   11f84:	andeq	r2, r1, r4, lsr #5
   11f88:	andeq	r2, r1, ip, lsl r3
   11f8c:	mov	r2, r4
   11f90:	mov	r1, r5
   11f94:	mov	r0, r6
   11f98:	bl	13000 <table_get_int@@Base>
   11f9c:	mov	r3, r0
   11fa0:	mov	r2, r4
   11fa4:	mov	r1, r5
   11fa8:	mov	r0, r7
   11fac:	bl	13620 <table_set_int@@Base>
   11fb0:	add	r4, r4, #1
   11fb4:	b	11f08 <table_dupe@@Base+0x88>
   11fb8:	mov	r2, r4
   11fbc:	mov	r1, r5
   11fc0:	mov	r0, r6
   11fc4:	bl	13010 <table_get_uint@@Base>
   11fc8:	mov	r3, r0
   11fcc:	mov	r2, r4
   11fd0:	mov	r1, r5
   11fd4:	mov	r0, r7
   11fd8:	bl	13640 <table_set_uint@@Base>
   11fdc:	b	11fb0 <table_dupe@@Base+0x130>
   11fe0:	mov	r2, r4
   11fe4:	mov	r1, r5
   11fe8:	mov	r0, r6
   11fec:	bl	13020 <table_get_int8@@Base>
   11ff0:	mov	r3, r0
   11ff4:	mov	r2, r4
   11ff8:	mov	r1, r5
   11ffc:	mov	r0, r7
   12000:	bl	13660 <table_set_int8@@Base>
   12004:	b	11fb0 <table_dupe@@Base+0x130>
   12008:	mov	r2, r4
   1200c:	mov	r1, r5
   12010:	mov	r0, r6
   12014:	bl	13030 <table_get_uint8@@Base>
   12018:	mov	r3, r0
   1201c:	mov	r2, r4
   12020:	mov	r1, r5
   12024:	mov	r0, r7
   12028:	bl	13680 <table_set_uint8@@Base>
   1202c:	b	11fb0 <table_dupe@@Base+0x130>
   12030:	mov	r2, r4
   12034:	mov	r1, r5
   12038:	mov	r0, r6
   1203c:	bl	13040 <table_get_int16@@Base>
   12040:	mov	r3, r0
   12044:	mov	r2, r4
   12048:	mov	r1, r5
   1204c:	mov	r0, r7
   12050:	bl	136a0 <table_set_int16@@Base>
   12054:	b	11fb0 <table_dupe@@Base+0x130>
   12058:	mov	r2, r4
   1205c:	mov	r1, r5
   12060:	mov	r0, r6
   12064:	bl	13050 <table_get_uint16@@Base>
   12068:	mov	r3, r0
   1206c:	mov	r2, r4
   12070:	mov	r1, r5
   12074:	mov	r0, r7
   12078:	bl	136c0 <table_set_uint16@@Base>
   1207c:	b	11fb0 <table_dupe@@Base+0x130>
   12080:	mov	r2, r4
   12084:	mov	r1, r5
   12088:	mov	r0, r6
   1208c:	bl	13060 <table_get_int32@@Base>
   12090:	mov	r3, r0
   12094:	mov	r2, r4
   12098:	mov	r1, r5
   1209c:	mov	r0, r7
   120a0:	bl	136e0 <table_set_int32@@Base>
   120a4:	b	11fb0 <table_dupe@@Base+0x130>
   120a8:	mov	r2, r4
   120ac:	mov	r1, r5
   120b0:	mov	r0, r6
   120b4:	bl	13064 <table_get_uint32@@Base>
   120b8:	mov	r3, r0
   120bc:	mov	r2, r4
   120c0:	mov	r1, r5
   120c4:	mov	r0, r7
   120c8:	bl	13700 <table_set_uint32@@Base>
   120cc:	b	11fb0 <table_dupe@@Base+0x130>
   120d0:	mov	r2, r4
   120d4:	mov	r1, r5
   120d8:	mov	r0, r6
   120dc:	bl	13068 <table_get_int64@@Base>
   120e0:	mov	r2, r4
   120e4:	strd	r0, [sp]
   120e8:	mov	r1, r5
   120ec:	mov	r0, r7
   120f0:	bl	13720 <table_set_int64@@Base>
   120f4:	b	11fb0 <table_dupe@@Base+0x130>
   120f8:	mov	r2, r4
   120fc:	mov	r1, r5
   12100:	mov	r0, r6
   12104:	bl	13078 <table_get_uint64@@Base>
   12108:	mov	r2, r4
   1210c:	strd	r0, [sp]
   12110:	mov	r1, r5
   12114:	mov	r0, r7
   12118:	bl	1373c <table_set_uint64@@Base>
   1211c:	b	11fb0 <table_dupe@@Base+0x130>
   12120:	mov	r2, r4
   12124:	mov	r1, r5
   12128:	mov	r0, r6
   1212c:	bl	13088 <table_get_short@@Base>
   12130:	mov	r3, r0
   12134:	mov	r2, r4
   12138:	mov	r1, r5
   1213c:	mov	r0, r7
   12140:	bl	13758 <table_set_short@@Base>
   12144:	b	11fb0 <table_dupe@@Base+0x130>
   12148:	mov	r2, r4
   1214c:	mov	r1, r5
   12150:	mov	r0, r6
   12154:	bl	1308c <table_get_ushort@@Base>
   12158:	mov	r3, r0
   1215c:	mov	r2, r4
   12160:	mov	r1, r5
   12164:	mov	r0, r7
   12168:	bl	13778 <table_set_ushort@@Base>
   1216c:	b	11fb0 <table_dupe@@Base+0x130>
   12170:	mov	r2, r4
   12174:	mov	r1, r5
   12178:	mov	r0, r6
   1217c:	bl	13090 <table_get_long@@Base>
   12180:	mov	r3, r0
   12184:	mov	r2, r4
   12188:	mov	r1, r5
   1218c:	mov	r0, r7
   12190:	bl	13798 <table_set_long@@Base>
   12194:	b	11fb0 <table_dupe@@Base+0x130>
   12198:	mov	r2, r4
   1219c:	mov	r1, r5
   121a0:	mov	r0, r6
   121a4:	bl	130a0 <table_get_ulong@@Base>
   121a8:	mov	r3, r0
   121ac:	mov	r2, r4
   121b0:	mov	r1, r5
   121b4:	mov	r0, r7
   121b8:	bl	137b8 <table_set_ulong@@Base>
   121bc:	b	11fb0 <table_dupe@@Base+0x130>
   121c0:	mov	r2, r4
   121c4:	mov	r1, r5
   121c8:	mov	r0, r6
   121cc:	bl	130b0 <table_get_llong@@Base>
   121d0:	mov	r2, r4
   121d4:	strd	r0, [sp]
   121d8:	mov	r1, r5
   121dc:	mov	r0, r7
   121e0:	bl	137d8 <table_set_llong@@Base>
   121e4:	b	11fb0 <table_dupe@@Base+0x130>
   121e8:	mov	r2, r4
   121ec:	mov	r1, r5
   121f0:	mov	r0, r6
   121f4:	bl	130b4 <table_get_ullong@@Base>
   121f8:	mov	r2, r4
   121fc:	strd	r0, [sp]
   12200:	mov	r1, r5
   12204:	mov	r0, r7
   12208:	bl	137f4 <table_set_ullong@@Base>
   1220c:	b	11fb0 <table_dupe@@Base+0x130>
   12210:	mov	r2, r4
   12214:	mov	r1, r5
   12218:	mov	r0, r6
   1221c:	bl	130f0 <table_get_string@@Base>
   12220:	mov	r3, r0
   12224:	mov	r2, r4
   12228:	mov	r1, r5
   1222c:	mov	r0, r7
   12230:	bl	13870 <table_set_string@@Base>
   12234:	b	11fb0 <table_dupe@@Base+0x130>
   12238:	mov	r2, r4
   1223c:	mov	r1, r5
   12240:	mov	r0, r6
   12244:	bl	130b8 <table_get_float@@Base>
   12248:	mov	r2, r4
   1224c:	mov	r1, r5
   12250:	mov	r0, r7
   12254:	bl	13810 <table_set_float@@Base>
   12258:	b	11fb0 <table_dupe@@Base+0x130>
   1225c:	mov	r2, r4
   12260:	mov	r1, r5
   12264:	mov	r0, r6
   12268:	bl	130c8 <table_get_double@@Base>
   1226c:	mov	r2, r4
   12270:	mov	r1, r5
   12274:	mov	r0, r7
   12278:	bl	13830 <table_set_double@@Base>
   1227c:	b	11fb0 <table_dupe@@Base+0x130>
   12280:	mov	r2, r4
   12284:	mov	r1, r5
   12288:	mov	r0, r6
   1228c:	bl	130d8 <table_get_ldouble@@Base>
   12290:	mov	r2, r4
   12294:	mov	r1, r5
   12298:	mov	r0, r7
   1229c:	bl	13850 <table_set_ldouble@@Base>
   122a0:	b	11fb0 <table_dupe@@Base+0x130>
   122a4:	mov	r2, r4
   122a8:	mov	r1, r5
   122ac:	mov	r0, r6
   122b0:	bl	12ff0 <table_get_bool@@Base>
   122b4:	mov	r3, r0
   122b8:	mov	r2, r4
   122bc:	mov	r1, r5
   122c0:	mov	r0, r7
   122c4:	bl	13600 <table_set_bool@@Base>
   122c8:	b	11fb0 <table_dupe@@Base+0x130>
   122cc:	mov	r2, r4
   122d0:	mov	r1, r5
   122d4:	mov	r0, r6
   122d8:	bl	130e8 <table_get_char@@Base>
   122dc:	mov	r3, r0
   122e0:	mov	r2, r4
   122e4:	mov	r1, r5
   122e8:	mov	r0, r7
   122ec:	bl	13888 <table_set_char@@Base>
   122f0:	b	11fb0 <table_dupe@@Base+0x130>
   122f4:	mov	r2, r4
   122f8:	mov	r1, r5
   122fc:	mov	r0, r6
   12300:	bl	130ec <table_get_uchar@@Base>
   12304:	mov	r3, r0
   12308:	mov	r2, r4
   1230c:	mov	r1, r5
   12310:	mov	r0, r7
   12314:	bl	138a8 <table_set_uchar@@Base>
   12318:	b	11fb0 <table_dupe@@Base+0x130>
   1231c:	mov	r2, r4
   12320:	mov	r1, r5
   12324:	mov	r0, r6
   12328:	bl	130f4 <table_get_ptr@@Base>
   1232c:	add	r3, sp, #12
   12330:	mov	r2, r4
   12334:	str	r0, [sp, #12]
   12338:	mov	r1, r5
   1233c:	mov	r0, r7
   12340:	bl	138c8 <table_set_ptr@@Base>
   12344:	b	11fb0 <table_dupe@@Base+0x130>

00012348 <table_get_major_version@@Base>:
   12348:	mov	r0, #0
   1234c:	bx	lr

00012350 <table_get_minor_version@@Base>:
   12350:	mov	r0, #0
   12354:	bx	lr

00012358 <table_get_patch_version@@Base>:
   12358:	mov	r0, #0
   1235c:	bx	lr

00012360 <table_get_version@@Base>:
   12360:	ldr	r0, [pc]	; 12368 <table_get_version@@Base+0x8>
   12364:	bx	lr
   12368:	andeq	r4, r1, r0, lsl #8

0001236c <table_get_callback_length@@Base>:
   1236c:	ldr	r0, [r0, #32]
   12370:	bx	lr

00012374 <table_register_callback@@Base>:
   12374:	push	{r4, r5, r6, r7, r8, lr}
   12378:	mov	r4, r0
   1237c:	mov	ip, #0
   12380:	ldr	lr, [r0, #32]
   12384:	ldr	r0, [r0, #36]	; 0x24
   12388:	cmp	ip, lr
   1238c:	blt	1241c <table_register_callback@@Base+0xa8>
   12390:	ldr	ip, [r4, #48]	; 0x30
   12394:	mov	r5, r3
   12398:	mov	r6, r2
   1239c:	mov	r7, r1
   123a0:	udiv	r3, lr, ip
   123a4:	mls	r3, ip, r3, lr
   123a8:	cmp	r3, #0
   123ac:	bne	123f0 <table_register_callback@@Base+0x7c>
   123b0:	ldr	r1, [r4, #52]	; 0x34
   123b4:	add	r1, ip, r1
   123b8:	str	r1, [r4, #52]	; 0x34
   123bc:	lsl	r1, r1, #2
   123c0:	bl	11a90 <realloc@plt>
   123c4:	ldr	r1, [r4, #52]	; 0x34
   123c8:	str	r0, [r4, #36]	; 0x24
   123cc:	ldr	r0, [r4, #40]	; 0x28
   123d0:	lsl	r1, r1, #2
   123d4:	bl	11a90 <realloc@plt>
   123d8:	ldr	r1, [r4, #52]	; 0x34
   123dc:	str	r0, [r4, #40]	; 0x28
   123e0:	ldr	r0, [r4, #44]	; 0x2c
   123e4:	lsl	r1, r1, #2
   123e8:	bl	11a90 <realloc@plt>
   123ec:	str	r0, [r4, #44]	; 0x2c
   123f0:	ldr	r3, [r4, #32]
   123f4:	ldr	r2, [r4, #36]	; 0x24
   123f8:	str	r7, [r2, r3, lsl #2]
   123fc:	ldr	r2, [r4, #40]	; 0x28
   12400:	str	r6, [r2, r3, lsl #2]
   12404:	ldr	r2, [r4, #44]	; 0x2c
   12408:	str	r5, [r2, r3, lsl #2]
   1240c:	ldr	r3, [r4, #32]
   12410:	add	r3, r3, #1
   12414:	str	r3, [r4, #32]
   12418:	pop	{r4, r5, r6, r7, r8, pc}
   1241c:	ldr	r6, [r0, ip, lsl #2]
   12420:	lsl	r5, ip, #2
   12424:	cmp	r1, r6
   12428:	bne	1243c <table_register_callback@@Base+0xc8>
   1242c:	ldr	r6, [r4, #40]	; 0x28
   12430:	ldr	r6, [r6, ip, lsl #2]
   12434:	cmp	r2, r6
   12438:	beq	12444 <table_register_callback@@Base+0xd0>
   1243c:	add	ip, ip, #1
   12440:	b	12388 <table_register_callback@@Base+0x14>
   12444:	cmp	ip, #0
   12448:	ble	12390 <table_register_callback@@Base+0x1c>
   1244c:	ldr	r1, [r4, #44]	; 0x2c
   12450:	ldr	r2, [r1, r5]
   12454:	orr	r2, r2, r3
   12458:	str	r2, [r1, r5]
   1245c:	pop	{r4, r5, r6, r7, r8, pc}

00012460 <table_unregister_callback@@Base>:
   12460:	ldr	ip, [r0, #32]
   12464:	mov	r3, #0
   12468:	cmp	r3, ip
   1246c:	bxge	lr
   12470:	push	{r4, r5, r6, lr}
   12474:	ldr	lr, [r0, #36]	; 0x24
   12478:	ldr	lr, [lr, r3, lsl #2]
   1247c:	cmp	r1, lr
   12480:	bne	12494 <table_unregister_callback@@Base+0x34>
   12484:	ldr	lr, [r0, #40]	; 0x28
   12488:	ldr	lr, [lr, r3, lsl #2]
   1248c:	cmp	r2, lr
   12490:	beq	124d4 <table_unregister_callback@@Base+0x74>
   12494:	add	r3, r3, #1
   12498:	cmp	r3, ip
   1249c:	blt	12474 <table_unregister_callback@@Base+0x14>
   124a0:	pop	{r4, r5, r6, pc}
   124a4:	ldr	r1, [r0, #36]	; 0x24
   124a8:	add	r2, r3, #1
   124ac:	lsl	r3, r3, #2
   124b0:	ldr	ip, [r1, r2, lsl #2]
   124b4:	str	ip, [r1, r3]
   124b8:	ldr	r1, [r0, #40]	; 0x28
   124bc:	ldr	ip, [r1, r2, lsl #2]
   124c0:	str	ip, [r1, r3]
   124c4:	ldr	r1, [r0, #44]	; 0x2c
   124c8:	ldr	ip, [r1, r2, lsl #2]
   124cc:	str	ip, [r1, r3]
   124d0:	mov	r3, r2
   124d4:	ldr	r2, [r0, #32]
   124d8:	sub	r2, r2, #1
   124dc:	cmp	r2, r3
   124e0:	bgt	124a4 <table_unregister_callback@@Base+0x44>
   124e4:	ldr	r1, [r0, #48]	; 0x30
   124e8:	str	r2, [r0, #32]
   124ec:	udiv	r3, r2, r1
   124f0:	mls	r2, r1, r3, r2
   124f4:	cmp	r2, #0
   124f8:	popne	{r4, r5, r6, pc}
   124fc:	mov	r4, r0
   12500:	ldr	r5, [r4, #52]	; 0x34
   12504:	ldr	r0, [r0, #36]	; 0x24
   12508:	sub	r5, r5, r1
   1250c:	cmp	r5, #0
   12510:	str	r5, [r4, #52]	; 0x34
   12514:	beq	12550 <table_unregister_callback@@Base+0xf0>
   12518:	lsl	r1, r5, #2
   1251c:	bl	11a90 <realloc@plt>
   12520:	ldr	r1, [r4, #52]	; 0x34
   12524:	str	r0, [r4, #36]	; 0x24
   12528:	ldr	r0, [r4, #40]	; 0x28
   1252c:	lsl	r1, r1, #2
   12530:	bl	11a90 <realloc@plt>
   12534:	ldr	r1, [r4, #52]	; 0x34
   12538:	str	r0, [r4, #40]	; 0x28
   1253c:	ldr	r0, [r4, #44]	; 0x2c
   12540:	lsl	r1, r1, #2
   12544:	bl	11a90 <realloc@plt>
   12548:	str	r0, [r4, #44]	; 0x2c
   1254c:	pop	{r4, r5, r6, pc}
   12550:	bl	11a84 <free@plt>
   12554:	ldr	r0, [r4, #40]	; 0x28
   12558:	bl	11a84 <free@plt>
   1255c:	ldr	r0, [r4, #44]	; 0x2c
   12560:	bl	11a84 <free@plt>
   12564:	str	r5, [r4, #36]	; 0x24
   12568:	str	r5, [r4, #40]	; 0x28
   1256c:	str	r5, [r4, #44]	; 0x2c
   12570:	pop	{r4, r5, r6, pc}

00012574 <table_notify@@Base>:
   12574:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12578:	mov	r5, r0
   1257c:	mov	r7, r1
   12580:	mov	r8, r2
   12584:	mov	r6, r3
   12588:	mov	r4, #0
   1258c:	ldr	r3, [r5, #32]
   12590:	cmp	r3, r4
   12594:	bgt	125a0 <table_notify@@Base+0x2c>
   12598:	add	sp, sp, #12
   1259c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   125a0:	ldr	r3, [r5, #44]	; 0x2c
   125a4:	ldr	r3, [r3, r4, lsl #2]
   125a8:	tst	r6, r3
   125ac:	beq	125d8 <table_notify@@Base+0x64>
   125b0:	ldr	r3, [r5, #36]	; 0x24
   125b4:	mov	r1, r7
   125b8:	mov	r0, r5
   125bc:	ldr	r2, [r5, #40]	; 0x28
   125c0:	ldr	r2, [r2, r4, lsl #2]
   125c4:	str	r2, [sp]
   125c8:	mov	r2, r8
   125cc:	ldr	r9, [r3, r4, lsl #2]
   125d0:	mov	r3, r6
   125d4:	blx	r9
   125d8:	add	r4, r4, #1
   125dc:	b	1258c <table_notify@@Base+0x18>

000125e0 <table_column_init@@Base>:
   125e0:	push	{r4, r5, r6, r7, r8, lr}
   125e4:	mov	r4, #12
   125e8:	mov	r6, r2
   125ec:	mov	r8, r3
   125f0:	mul	r4, r4, r1
   125f4:	ldr	r7, [r0]
   125f8:	mov	r0, r2
   125fc:	bl	11ad8 <strlen@plt>
   12600:	add	r0, r0, #1
   12604:	bl	11ab4 <malloc@plt>
   12608:	cmp	r0, #0
   1260c:	add	r5, r7, r4
   12610:	str	r0, [r7, r4]
   12614:	beq	12620 <table_column_init@@Base+0x40>
   12618:	mov	r1, r6
   1261c:	bl	11a9c <strcpy@plt>
   12620:	ldr	r3, [sp, #24]
   12624:	str	r8, [r5, #4]
   12628:	str	r3, [r5, #8]
   1262c:	pop	{r4, r5, r6, r7, r8, pc}

00012630 <table_column_destroy@@Base>:
   12630:	mov	r3, #12
   12634:	ldr	r2, [r0]
   12638:	mul	r1, r3, r1
   1263c:	ldr	r0, [r2, r1]
   12640:	cmp	r0, #0
   12644:	bxeq	lr
   12648:	b	11a84 <free@plt>

0001264c <table_get_column_length@@Base>:
   1264c:	ldr	r0, [r0, #4]
   12650:	bx	lr

00012654 <table_get_column@@Base>:
   12654:	push	{r4, r5, r6, r7, r8, lr}
   12658:	mov	r5, r0
   1265c:	mov	r7, r1
   12660:	mov	r4, #0
   12664:	mov	r8, #12
   12668:	ldr	r6, [r0, #4]
   1266c:	cmp	r4, r6
   12670:	blt	12680 <table_get_column@@Base+0x2c>
   12674:	mvneq	r4, #0
   12678:	mov	r0, r4
   1267c:	pop	{r4, r5, r6, r7, r8, pc}
   12680:	ldr	r2, [r5]
   12684:	mul	r3, r8, r4
   12688:	mov	r1, r7
   1268c:	ldr	r0, [r2, r3]
   12690:	bl	11a6c <strcmp@plt>
   12694:	cmp	r0, #0
   12698:	beq	12678 <table_get_column@@Base+0x24>
   1269c:	add	r4, r4, #1
   126a0:	b	1266c <table_get_column@@Base+0x18>

000126a4 <table_get_column_data_type@@Base>:
   126a4:	ldr	r2, [r0]
   126a8:	mov	r3, #12
   126ac:	mla	r1, r3, r1, r2
   126b0:	ldr	r0, [r1, #4]
   126b4:	bx	lr

000126b8 <table_add_column@@Base>:
   126b8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   126bc:	mov	r7, r1
   126c0:	mov	r4, r0
   126c4:	mov	r6, r2
   126c8:	ldr	r3, [r0, #4]
   126cc:	ldr	r1, [r0, #8]
   126d0:	udiv	r5, r3, r1
   126d4:	mls	r5, r1, r5, r3
   126d8:	cmp	r5, #0
   126dc:	beq	12744 <table_add_column@@Base+0x8c>
   126e0:	mov	r0, r4
   126e4:	mov	r5, #0
   126e8:	bl	13168 <table_get_row_length@@Base>
   126ec:	ldr	r8, [r4, #4]
   126f0:	mov	r9, r0
   126f4:	mov	r0, r6
   126f8:	bl	12fc8 <table_get_default_compare_function_for_data_type@@Base>
   126fc:	mov	r3, r6
   12700:	mov	r2, r7
   12704:	str	r0, [sp]
   12708:	mov	r0, r4
   1270c:	mov	r1, r8
   12710:	bl	125e0 <table_column_init@@Base>
   12714:	cmp	r9, r5
   12718:	bgt	127a4 <table_add_column@@Base+0xec>
   1271c:	mov	r0, r4
   12720:	mov	r3, #8
   12724:	ldr	r2, [r4, #4]
   12728:	mvn	r1, #0
   1272c:	bl	12574 <table_notify@@Base>
   12730:	ldr	r0, [r4, #4]
   12734:	add	r3, r0, #1
   12738:	str	r3, [r4, #4]
   1273c:	add	sp, sp, #12
   12740:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12744:	ldr	r3, [r4, #12]
   12748:	ldr	r0, [r0]
   1274c:	add	r1, r1, r3
   12750:	mov	r3, #12
   12754:	str	r1, [r4, #12]
   12758:	mul	r1, r3, r1
   1275c:	bl	11a90 <realloc@plt>
   12760:	str	r0, [r4]
   12764:	mov	r0, r4
   12768:	bl	13168 <table_get_row_length@@Base>
   1276c:	mov	r9, r0
   12770:	cmp	r9, r5
   12774:	ble	126e0 <table_add_column@@Base+0x28>
   12778:	mov	r1, r5
   1277c:	mov	r0, r4
   12780:	bl	13304 <table_get_row_ptr@@Base>
   12784:	ldr	r1, [r4, #12]
   12788:	mov	r8, r0
   1278c:	add	r5, r5, #1
   12790:	ldr	r0, [r0]
   12794:	lsl	r1, r1, #2
   12798:	bl	11a90 <realloc@plt>
   1279c:	str	r0, [r8]
   127a0:	b	12770 <table_add_column@@Base+0xb8>
   127a4:	mov	r1, r5
   127a8:	mov	r2, r8
   127ac:	mov	r0, r4
   127b0:	add	r5, r5, #1
   127b4:	bl	14178 <table_cell_init@@Base>
   127b8:	b	12714 <table_add_column@@Base+0x5c>

000127bc <table_remove_column@@Base>:
   127bc:	push	{r4, r5, r6, r7, r8, lr}
   127c0:	mov	r4, r0
   127c4:	mov	r6, r1
   127c8:	mov	r5, #12
   127cc:	bl	12630 <table_column_destroy@@Base>
   127d0:	ldr	r7, [r4, #4]
   127d4:	mov	r1, r6
   127d8:	sub	r7, r7, #1
   127dc:	cmp	r1, r7
   127e0:	blt	1286c <table_remove_column@@Base+0xb0>
   127e4:	mov	r0, r4
   127e8:	mov	r5, #0
   127ec:	bl	13168 <table_get_row_length@@Base>
   127f0:	mov	r8, r0
   127f4:	cmp	r8, r5
   127f8:	bgt	128a0 <table_remove_column@@Base+0xe4>
   127fc:	ldr	r5, [r4, #4]
   12800:	ldr	r1, [r4, #8]
   12804:	sub	r3, r5, #1
   12808:	udiv	r5, r3, r1
   1280c:	str	r3, [r4, #4]
   12810:	mls	r5, r1, r5, r3
   12814:	cmp	r5, #0
   12818:	bne	12850 <table_remove_column@@Base+0x94>
   1281c:	ldr	r0, [r4]
   12820:	ldr	r3, [r4, #12]
   12824:	sub	r3, r3, r1
   12828:	mov	r1, #12
   1282c:	mul	r1, r1, r3
   12830:	str	r3, [r4, #12]
   12834:	bl	11a90 <realloc@plt>
   12838:	str	r0, [r4]
   1283c:	mov	r0, r4
   12840:	bl	13168 <table_get_row_length@@Base>
   12844:	mov	r8, r0
   12848:	cmp	r8, r5
   1284c:	bgt	128e4 <table_remove_column@@Base+0x128>
   12850:	mov	r0, r4
   12854:	mov	r3, #16
   12858:	mov	r2, r6
   1285c:	mvn	r1, #0
   12860:	bl	12574 <table_notify@@Base>
   12864:	mov	r0, #0
   12868:	pop	{r4, r5, r6, r7, r8, pc}
   1286c:	ldr	ip, [r4]
   12870:	mul	r0, r5, r1
   12874:	add	r1, r1, #1
   12878:	add	r2, r0, #12
   1287c:	add	r2, ip, r2
   12880:	add	lr, ip, r0
   12884:	ldr	r3, [r2]
   12888:	str	r3, [ip, r0]
   1288c:	ldr	r3, [r2, #4]
   12890:	str	r3, [lr, #4]
   12894:	ldr	r3, [r2, #8]
   12898:	str	r3, [lr, #8]
   1289c:	b	127dc <table_remove_column@@Base+0x20>
   128a0:	mov	r2, r6
   128a4:	mov	r1, r5
   128a8:	mov	r0, r4
   128ac:	bl	1418c <table_cell_destroy@@Base>
   128b0:	mov	r1, r5
   128b4:	mov	r0, r4
   128b8:	bl	13304 <table_get_row_ptr@@Base>
   128bc:	mov	r3, r6
   128c0:	cmp	r7, r3
   128c4:	addle	r5, r5, #1
   128c8:	ble	127f4 <table_remove_column@@Base+0x38>
   128cc:	ldr	r2, [r0]
   128d0:	add	r1, r2, r3, lsl #2
   128d4:	ldr	r1, [r1, #4]
   128d8:	str	r1, [r2, r3, lsl #2]
   128dc:	add	r3, r3, #1
   128e0:	b	128c0 <table_remove_column@@Base+0x104>
   128e4:	mov	r1, r5
   128e8:	mov	r0, r4
   128ec:	bl	13304 <table_get_row_ptr@@Base>
   128f0:	ldr	r1, [r4, #12]
   128f4:	mov	r7, r0
   128f8:	add	r5, r5, #1
   128fc:	ldr	r0, [r0]
   12900:	lsl	r1, r1, #2
   12904:	bl	11a90 <realloc@plt>
   12908:	str	r0, [r7]
   1290c:	b	12848 <table_remove_column@@Base+0x8c>

00012910 <table_get_column_name@@Base>:
   12910:	mov	r3, #12
   12914:	ldr	r2, [r0]
   12918:	mul	r1, r3, r1
   1291c:	ldr	r0, [r2, r1]
   12920:	bx	lr

00012924 <table_get_col_ptr@@Base>:
   12924:	ldr	r3, [r0]
   12928:	mov	r0, #12
   1292c:	mla	r0, r0, r1, r3
   12930:	bx	lr

00012934 <table_get_column_compare_function@@Base>:
   12934:	ldr	r2, [r0]
   12938:	mov	r3, #12
   1293c:	mla	r1, r3, r1, r2
   12940:	ldr	r0, [r1, #8]
   12944:	bx	lr

00012948 <table_set_column_compare_function@@Base>:
   12948:	ldr	r0, [r0]
   1294c:	mov	r3, #12
   12950:	mla	r1, r3, r1, r0
   12954:	str	r2, [r1, #8]
   12958:	bx	lr

0001295c <table_compare_ptr@@Base>:
   1295c:	cmp	r0, r1
   12960:	bhi	12970 <table_compare_ptr@@Base+0x14>
   12964:	mvncc	r0, #0
   12968:	movcs	r0, #0
   1296c:	bx	lr
   12970:	mov	r0, #1
   12974:	bx	lr

00012978 <table_compare_string@@Base>:
   12978:	cmp	r0, #0
   1297c:	bne	12990 <table_compare_string@@Base+0x18>
   12980:	adds	r0, r1, #0
   12984:	movne	r0, #1
   12988:	rsb	r0, r0, #0
   1298c:	bx	lr
   12990:	cmp	r1, #0
   12994:	beq	1299c <table_compare_string@@Base+0x24>
   12998:	b	11a6c <strcmp@plt>
   1299c:	mov	r0, #1
   129a0:	bx	lr

000129a4 <table_compare_bool@@Base>:
   129a4:	cmp	r0, #0
   129a8:	bne	129bc <table_compare_bool@@Base+0x18>
   129ac:	adds	r0, r1, #0
   129b0:	movne	r0, #1
   129b4:	rsb	r0, r0, #0
   129b8:	bx	lr
   129bc:	cmp	r1, #0
   129c0:	beq	129e0 <table_compare_bool@@Base+0x3c>
   129c4:	ldrb	r2, [r0]
   129c8:	ldrb	r3, [r1]
   129cc:	cmp	r2, r3
   129d0:	bhi	129e0 <table_compare_bool@@Base+0x3c>
   129d4:	mvncc	r0, #0
   129d8:	movcs	r0, #0
   129dc:	bx	lr
   129e0:	mov	r0, #1
   129e4:	bx	lr

000129e8 <table_compare_int32@@Base>:
   129e8:	cmp	r0, #0
   129ec:	bne	12a00 <table_compare_int32@@Base+0x18>
   129f0:	adds	r0, r1, #0
   129f4:	movne	r0, #1
   129f8:	rsb	r0, r0, #0
   129fc:	bx	lr
   12a00:	cmp	r1, #0
   12a04:	beq	12a24 <table_compare_int32@@Base+0x3c>
   12a08:	ldr	r2, [r0]
   12a0c:	ldr	r3, [r1]
   12a10:	cmp	r2, r3
   12a14:	bgt	12a24 <table_compare_int32@@Base+0x3c>
   12a18:	mvnlt	r0, #0
   12a1c:	movge	r0, #0
   12a20:	bx	lr
   12a24:	mov	r0, #1
   12a28:	bx	lr

00012a2c <table_compare_uint32@@Base>:
   12a2c:	cmp	r0, #0
   12a30:	bne	12a44 <table_compare_uint32@@Base+0x18>
   12a34:	adds	r0, r1, #0
   12a38:	movne	r0, #1
   12a3c:	rsb	r0, r0, #0
   12a40:	bx	lr
   12a44:	cmp	r1, #0
   12a48:	beq	12a68 <table_compare_uint32@@Base+0x3c>
   12a4c:	ldr	r2, [r0]
   12a50:	ldr	r3, [r1]
   12a54:	cmp	r2, r3
   12a58:	bhi	12a68 <table_compare_uint32@@Base+0x3c>
   12a5c:	mvncc	r0, #0
   12a60:	movcs	r0, #0
   12a64:	bx	lr
   12a68:	mov	r0, #1
   12a6c:	bx	lr

00012a70 <table_compare_int8@@Base>:
   12a70:	cmp	r0, #0
   12a74:	bne	12a88 <table_compare_int8@@Base+0x18>
   12a78:	adds	r0, r1, #0
   12a7c:	movne	r0, #1
   12a80:	rsb	r0, r0, #0
   12a84:	bx	lr
   12a88:	cmp	r1, #0
   12a8c:	beq	12aac <table_compare_int8@@Base+0x3c>
   12a90:	ldrsb	r2, [r0]
   12a94:	ldrsb	r3, [r1]
   12a98:	cmp	r2, r3
   12a9c:	bgt	12aac <table_compare_int8@@Base+0x3c>
   12aa0:	mvnlt	r0, #0
   12aa4:	movge	r0, #0
   12aa8:	bx	lr
   12aac:	mov	r0, #1
   12ab0:	bx	lr

00012ab4 <table_compare_char@@Base>:
   12ab4:	cmp	r0, #0
   12ab8:	bne	12acc <table_compare_char@@Base+0x18>
   12abc:	adds	r0, r1, #0
   12ac0:	movne	r0, #1
   12ac4:	rsb	r0, r0, #0
   12ac8:	bx	lr
   12acc:	cmp	r1, #0
   12ad0:	beq	12af0 <table_compare_char@@Base+0x3c>
   12ad4:	ldrb	r2, [r0]
   12ad8:	ldrb	r3, [r1]
   12adc:	cmp	r2, r3
   12ae0:	bhi	12af0 <table_compare_char@@Base+0x3c>
   12ae4:	mvncc	r0, #0
   12ae8:	movcs	r0, #0
   12aec:	bx	lr
   12af0:	mov	r0, #1
   12af4:	bx	lr

00012af8 <table_compare_short@@Base>:
   12af8:	cmp	r0, #0
   12afc:	bne	12b10 <table_compare_short@@Base+0x18>
   12b00:	adds	r0, r1, #0
   12b04:	movne	r0, #1
   12b08:	rsb	r0, r0, #0
   12b0c:	bx	lr
   12b10:	cmp	r1, #0
   12b14:	beq	12b34 <table_compare_short@@Base+0x3c>
   12b18:	ldrsh	r2, [r0]
   12b1c:	ldrsh	r3, [r1]
   12b20:	cmp	r2, r3
   12b24:	bgt	12b34 <table_compare_short@@Base+0x3c>
   12b28:	mvnlt	r0, #0
   12b2c:	movge	r0, #0
   12b30:	bx	lr
   12b34:	mov	r0, #1
   12b38:	bx	lr

00012b3c <table_compare_ushort@@Base>:
   12b3c:	cmp	r0, #0
   12b40:	bne	12b54 <table_compare_ushort@@Base+0x18>
   12b44:	adds	r0, r1, #0
   12b48:	movne	r0, #1
   12b4c:	rsb	r0, r0, #0
   12b50:	bx	lr
   12b54:	cmp	r1, #0
   12b58:	beq	12b78 <table_compare_ushort@@Base+0x3c>
   12b5c:	ldrh	r2, [r0]
   12b60:	ldrh	r3, [r1]
   12b64:	cmp	r2, r3
   12b68:	bhi	12b78 <table_compare_ushort@@Base+0x3c>
   12b6c:	mvncc	r0, #0
   12b70:	movcs	r0, #0
   12b74:	bx	lr
   12b78:	mov	r0, #1
   12b7c:	bx	lr

00012b80 <table_compare_llong@@Base>:
   12b80:	cmp	r0, #0
   12b84:	bne	12b98 <table_compare_llong@@Base+0x18>
   12b88:	adds	r0, r1, #0
   12b8c:	movne	r0, #1
   12b90:	rsb	r0, r0, #0
   12b94:	bx	lr
   12b98:	cmp	r1, #0
   12b9c:	beq	12bcc <table_compare_llong@@Base+0x4c>
   12ba0:	push	{r4, r5, lr}
   12ba4:	ldrd	r2, [r1]
   12ba8:	ldrd	r4, [r0]
   12bac:	cmp	r2, r4
   12bb0:	sbcs	r1, r3, r5
   12bb4:	blt	12bd4 <table_compare_llong@@Base+0x54>
   12bb8:	cmp	r4, r2
   12bbc:	sbcs	r3, r5, r3
   12bc0:	mvnlt	r0, #0
   12bc4:	movge	r0, #0
   12bc8:	pop	{r4, r5, pc}
   12bcc:	mov	r0, #1
   12bd0:	bx	lr
   12bd4:	mov	r0, #1
   12bd8:	pop	{r4, r5, pc}

00012bdc <table_compare_uint64@@Base>:
   12bdc:	cmp	r0, #0
   12be0:	bne	12bf4 <table_compare_uint64@@Base+0x18>
   12be4:	adds	r0, r1, #0
   12be8:	movne	r0, #1
   12bec:	rsb	r0, r0, #0
   12bf0:	bx	lr
   12bf4:	cmp	r1, #0
   12bf8:	beq	12c20 <table_compare_uint64@@Base+0x44>
   12bfc:	push	{r4, r5, lr}
   12c00:	ldrd	r2, [r1]
   12c04:	ldrd	r4, [r0]
   12c08:	cmp	r5, r3
   12c0c:	cmpeq	r4, r2
   12c10:	bhi	12c28 <table_compare_uint64@@Base+0x4c>
   12c14:	mvncc	r0, #0
   12c18:	movcs	r0, #0
   12c1c:	pop	{r4, r5, pc}
   12c20:	mov	r0, #1
   12c24:	bx	lr
   12c28:	mov	r0, #1
   12c2c:	pop	{r4, r5, pc}

00012c30 <table_compare_long@@Base>:
   12c30:	cmp	r0, #0
   12c34:	bne	12c48 <table_compare_long@@Base+0x18>
   12c38:	adds	r0, r1, #0
   12c3c:	movne	r0, #1
   12c40:	rsb	r0, r0, #0
   12c44:	bx	lr
   12c48:	cmp	r1, #0
   12c4c:	beq	12c6c <table_compare_long@@Base+0x3c>
   12c50:	ldr	r2, [r0]
   12c54:	ldr	r3, [r1]
   12c58:	cmp	r2, r3
   12c5c:	bgt	12c6c <table_compare_long@@Base+0x3c>
   12c60:	mvnlt	r0, #0
   12c64:	movge	r0, #0
   12c68:	bx	lr
   12c6c:	mov	r0, #1
   12c70:	bx	lr

00012c74 <table_compare_ullong@@Base>:
   12c74:	cmp	r0, #0
   12c78:	bne	12c8c <table_compare_ullong@@Base+0x18>
   12c7c:	adds	r0, r1, #0
   12c80:	movne	r0, #1
   12c84:	rsb	r0, r0, #0
   12c88:	bx	lr
   12c8c:	cmp	r1, #0
   12c90:	beq	12cb0 <table_compare_ullong@@Base+0x3c>
   12c94:	ldr	r2, [r0]
   12c98:	ldr	r3, [r1]
   12c9c:	cmp	r2, r3
   12ca0:	bhi	12cb0 <table_compare_ullong@@Base+0x3c>
   12ca4:	mvncc	r0, #0
   12ca8:	movcs	r0, #0
   12cac:	bx	lr
   12cb0:	mov	r0, #1
   12cb4:	bx	lr

00012cb8 <table_compare_float@@Base>:
   12cb8:	cmp	r0, #0
   12cbc:	bne	12cd0 <table_compare_float@@Base+0x18>
   12cc0:	adds	r0, r1, #0
   12cc4:	movne	r0, #1
   12cc8:	rsb	r0, r0, #0
   12ccc:	bx	lr
   12cd0:	cmp	r1, #0
   12cd4:	beq	12cf8 <table_compare_float@@Base+0x40>
   12cd8:	vldr	s14, [r0]
   12cdc:	vldr	s15, [r1]
   12ce0:	vcmpe.f32	s14, s15
   12ce4:	vmrs	APSR_nzcv, fpscr
   12ce8:	bgt	12cf8 <table_compare_float@@Base+0x40>
   12cec:	mvnmi	r0, #0
   12cf0:	movpl	r0, #0
   12cf4:	bx	lr
   12cf8:	mov	r0, #1
   12cfc:	bx	lr

00012d00 <table_compare_double@@Base>:
   12d00:	cmp	r0, #0
   12d04:	bne	12d18 <table_compare_double@@Base+0x18>
   12d08:	adds	r0, r1, #0
   12d0c:	movne	r0, #1
   12d10:	rsb	r0, r0, #0
   12d14:	bx	lr
   12d18:	cmp	r1, #0
   12d1c:	beq	12d40 <table_compare_double@@Base+0x40>
   12d20:	vldr	d6, [r0]
   12d24:	vldr	d7, [r1]
   12d28:	vcmpe.f64	d6, d7
   12d2c:	vmrs	APSR_nzcv, fpscr
   12d30:	bgt	12d40 <table_compare_double@@Base+0x40>
   12d34:	mvnmi	r0, #0
   12d38:	movpl	r0, #0
   12d3c:	bx	lr
   12d40:	mov	r0, #1
   12d44:	bx	lr

00012d48 <table_compare_ldouble@@Base>:
   12d48:	cmp	r0, #0
   12d4c:	bne	12d60 <table_compare_ldouble@@Base+0x18>
   12d50:	adds	r0, r1, #0
   12d54:	movne	r0, #1
   12d58:	rsb	r0, r0, #0
   12d5c:	bx	lr
   12d60:	cmp	r1, #0
   12d64:	beq	12d88 <table_compare_ldouble@@Base+0x40>
   12d68:	vldr	d6, [r0]
   12d6c:	vldr	d7, [r1]
   12d70:	vcmpe.f64	d6, d7
   12d74:	vmrs	APSR_nzcv, fpscr
   12d78:	bgt	12d88 <table_compare_ldouble@@Base+0x40>
   12d7c:	mvnmi	r0, #0
   12d80:	movpl	r0, #0
   12d84:	bx	lr
   12d88:	mov	r0, #1
   12d8c:	bx	lr

00012d90 <table_compare_uchar@@Base>:
   12d90:	cmp	r0, #0
   12d94:	bne	12da8 <table_compare_uchar@@Base+0x18>
   12d98:	adds	r0, r1, #0
   12d9c:	movne	r0, #1
   12da0:	rsb	r0, r0, #0
   12da4:	bx	lr
   12da8:	cmp	r1, #0
   12dac:	beq	12dcc <table_compare_uchar@@Base+0x3c>
   12db0:	ldrb	r2, [r0]
   12db4:	ldrb	r3, [r1]
   12db8:	cmp	r2, r3
   12dbc:	bhi	12dcc <table_compare_uchar@@Base+0x3c>
   12dc0:	mvncc	r0, #0
   12dc4:	movcs	r0, #0
   12dc8:	bx	lr
   12dcc:	mov	r0, #1
   12dd0:	bx	lr

00012dd4 <table_compare_int@@Base>:
   12dd4:	cmp	r0, #0
   12dd8:	bne	12dec <table_compare_int@@Base+0x18>
   12ddc:	adds	r0, r1, #0
   12de0:	movne	r0, #1
   12de4:	rsb	r0, r0, #0
   12de8:	bx	lr
   12dec:	cmp	r1, #0
   12df0:	beq	12e10 <table_compare_int@@Base+0x3c>
   12df4:	ldr	r2, [r0]
   12df8:	ldr	r3, [r1]
   12dfc:	cmp	r2, r3
   12e00:	bgt	12e10 <table_compare_int@@Base+0x3c>
   12e04:	mvnlt	r0, #0
   12e08:	movge	r0, #0
   12e0c:	bx	lr
   12e10:	mov	r0, #1
   12e14:	bx	lr

00012e18 <table_compare_uint@@Base>:
   12e18:	cmp	r0, #0
   12e1c:	bne	12e30 <table_compare_uint@@Base+0x18>
   12e20:	adds	r0, r1, #0
   12e24:	movne	r0, #1
   12e28:	rsb	r0, r0, #0
   12e2c:	bx	lr
   12e30:	cmp	r1, #0
   12e34:	beq	12e54 <table_compare_uint@@Base+0x3c>
   12e38:	ldr	r2, [r0]
   12e3c:	ldr	r3, [r1]
   12e40:	cmp	r2, r3
   12e44:	bhi	12e54 <table_compare_uint@@Base+0x3c>
   12e48:	mvncc	r0, #0
   12e4c:	movcs	r0, #0
   12e50:	bx	lr
   12e54:	mov	r0, #1
   12e58:	bx	lr

00012e5c <table_compare_uint8@@Base>:
   12e5c:	cmp	r0, #0
   12e60:	bne	12e74 <table_compare_uint8@@Base+0x18>
   12e64:	adds	r0, r1, #0
   12e68:	movne	r0, #1
   12e6c:	rsb	r0, r0, #0
   12e70:	bx	lr
   12e74:	cmp	r1, #0
   12e78:	beq	12e98 <table_compare_uint8@@Base+0x3c>
   12e7c:	ldrb	r2, [r0]
   12e80:	ldrb	r3, [r1]
   12e84:	cmp	r2, r3
   12e88:	bhi	12e98 <table_compare_uint8@@Base+0x3c>
   12e8c:	mvncc	r0, #0
   12e90:	movcs	r0, #0
   12e94:	bx	lr
   12e98:	mov	r0, #1
   12e9c:	bx	lr

00012ea0 <table_compare_int16@@Base>:
   12ea0:	cmp	r0, #0
   12ea4:	bne	12eb8 <table_compare_int16@@Base+0x18>
   12ea8:	adds	r0, r1, #0
   12eac:	movne	r0, #1
   12eb0:	rsb	r0, r0, #0
   12eb4:	bx	lr
   12eb8:	cmp	r1, #0
   12ebc:	beq	12edc <table_compare_int16@@Base+0x3c>
   12ec0:	ldrsh	r2, [r0]
   12ec4:	ldrsh	r3, [r1]
   12ec8:	cmp	r2, r3
   12ecc:	bgt	12edc <table_compare_int16@@Base+0x3c>
   12ed0:	mvnlt	r0, #0
   12ed4:	movge	r0, #0
   12ed8:	bx	lr
   12edc:	mov	r0, #1
   12ee0:	bx	lr

00012ee4 <table_compare_uint16@@Base>:
   12ee4:	cmp	r0, #0
   12ee8:	bne	12efc <table_compare_uint16@@Base+0x18>
   12eec:	adds	r0, r1, #0
   12ef0:	movne	r0, #1
   12ef4:	rsb	r0, r0, #0
   12ef8:	bx	lr
   12efc:	cmp	r1, #0
   12f00:	beq	12f20 <table_compare_uint16@@Base+0x3c>
   12f04:	ldrh	r2, [r0]
   12f08:	ldrh	r3, [r1]
   12f0c:	cmp	r2, r3
   12f10:	bhi	12f20 <table_compare_uint16@@Base+0x3c>
   12f14:	mvncc	r0, #0
   12f18:	movcs	r0, #0
   12f1c:	bx	lr
   12f20:	mov	r0, #1
   12f24:	bx	lr

00012f28 <table_compare_ulong@@Base>:
   12f28:	cmp	r0, #0
   12f2c:	bne	12f40 <table_compare_ulong@@Base+0x18>
   12f30:	adds	r0, r1, #0
   12f34:	movne	r0, #1
   12f38:	rsb	r0, r0, #0
   12f3c:	bx	lr
   12f40:	cmp	r1, #0
   12f44:	beq	12f64 <table_compare_ulong@@Base+0x3c>
   12f48:	ldr	r2, [r0]
   12f4c:	ldr	r3, [r1]
   12f50:	cmp	r2, r3
   12f54:	bhi	12f64 <table_compare_ulong@@Base+0x3c>
   12f58:	mvncc	r0, #0
   12f5c:	movcs	r0, #0
   12f60:	bx	lr
   12f64:	mov	r0, #1
   12f68:	bx	lr

00012f6c <table_compare_int64@@Base>:
   12f6c:	cmp	r0, #0
   12f70:	bne	12f84 <table_compare_int64@@Base+0x18>
   12f74:	adds	r0, r1, #0
   12f78:	movne	r0, #1
   12f7c:	rsb	r0, r0, #0
   12f80:	bx	lr
   12f84:	cmp	r1, #0
   12f88:	beq	12fb8 <table_compare_int64@@Base+0x4c>
   12f8c:	push	{r4, r5, lr}
   12f90:	ldrd	r2, [r1]
   12f94:	ldrd	r4, [r0]
   12f98:	cmp	r2, r4
   12f9c:	sbcs	r1, r3, r5
   12fa0:	blt	12fc0 <table_compare_int64@@Base+0x54>
   12fa4:	cmp	r4, r2
   12fa8:	sbcs	r3, r5, r3
   12fac:	mvnlt	r0, #0
   12fb0:	movge	r0, #0
   12fb4:	pop	{r4, r5, pc}
   12fb8:	mov	r0, #1
   12fbc:	bx	lr
   12fc0:	mov	r0, #1
   12fc4:	pop	{r4, r5, pc}

00012fc8 <table_get_default_compare_function_for_data_type@@Base>:
   12fc8:	cmp	r0, #23
   12fcc:	ldrls	r3, [pc, #8]	; 12fdc <table_get_default_compare_function_for_data_type@@Base+0x14>
   12fd0:	ldrls	r0, [r3, r0, lsl #2]
   12fd4:	movhi	r0, #0
   12fd8:	bx	lr
   12fdc:	andeq	r4, r1, r0, ror r3

00012fe0 <table_get@@Base>:
   12fe0:	push	{r4, lr}
   12fe4:	bl	14160 <table_get_cell_ptr@@Base>
   12fe8:	ldr	r0, [r0]
   12fec:	pop	{r4, pc}

00012ff0 <table_get_bool@@Base>:
   12ff0:	push	{r4, lr}
   12ff4:	bl	12fe0 <table_get@@Base>
   12ff8:	ldrb	r0, [r0]
   12ffc:	pop	{r4, pc}

00013000 <table_get_int@@Base>:
   13000:	push	{r4, lr}
   13004:	bl	12fe0 <table_get@@Base>
   13008:	ldr	r0, [r0]
   1300c:	pop	{r4, pc}

00013010 <table_get_uint@@Base>:
   13010:	push	{r4, lr}
   13014:	bl	12fe0 <table_get@@Base>
   13018:	ldr	r0, [r0]
   1301c:	pop	{r4, pc}

00013020 <table_get_int8@@Base>:
   13020:	push	{r4, lr}
   13024:	bl	12fe0 <table_get@@Base>
   13028:	ldrsb	r0, [r0]
   1302c:	pop	{r4, pc}

00013030 <table_get_uint8@@Base>:
   13030:	push	{r4, lr}
   13034:	bl	12fe0 <table_get@@Base>
   13038:	ldrb	r0, [r0]
   1303c:	pop	{r4, pc}

00013040 <table_get_int16@@Base>:
   13040:	push	{r4, lr}
   13044:	bl	12fe0 <table_get@@Base>
   13048:	ldrsh	r0, [r0]
   1304c:	pop	{r4, pc}

00013050 <table_get_uint16@@Base>:
   13050:	push	{r4, lr}
   13054:	bl	12fe0 <table_get@@Base>
   13058:	ldrh	r0, [r0]
   1305c:	pop	{r4, pc}

00013060 <table_get_int32@@Base>:
   13060:	b	13000 <table_get_int@@Base>

00013064 <table_get_uint32@@Base>:
   13064:	b	13010 <table_get_uint@@Base>

00013068 <table_get_int64@@Base>:
   13068:	push	{r4, lr}
   1306c:	bl	12fe0 <table_get@@Base>
   13070:	ldrd	r0, [r0]
   13074:	pop	{r4, pc}

00013078 <table_get_uint64@@Base>:
   13078:	push	{r4, lr}
   1307c:	bl	12fe0 <table_get@@Base>
   13080:	ldrd	r0, [r0]
   13084:	pop	{r4, pc}

00013088 <table_get_short@@Base>:
   13088:	b	13040 <table_get_int16@@Base>

0001308c <table_get_ushort@@Base>:
   1308c:	b	13050 <table_get_uint16@@Base>

00013090 <table_get_long@@Base>:
   13090:	push	{r4, lr}
   13094:	bl	12fe0 <table_get@@Base>
   13098:	ldr	r0, [r0]
   1309c:	pop	{r4, pc}

000130a0 <table_get_ulong@@Base>:
   130a0:	push	{r4, lr}
   130a4:	bl	12fe0 <table_get@@Base>
   130a8:	ldr	r0, [r0]
   130ac:	pop	{r4, pc}

000130b0 <table_get_llong@@Base>:
   130b0:	b	13068 <table_get_int64@@Base>

000130b4 <table_get_ullong@@Base>:
   130b4:	b	13078 <table_get_uint64@@Base>

000130b8 <table_get_float@@Base>:
   130b8:	push	{r4, lr}
   130bc:	bl	12fe0 <table_get@@Base>
   130c0:	vldr	s0, [r0]
   130c4:	pop	{r4, pc}

000130c8 <table_get_double@@Base>:
   130c8:	push	{r4, lr}
   130cc:	bl	12fe0 <table_get@@Base>
   130d0:	vldr	d0, [r0]
   130d4:	pop	{r4, pc}

000130d8 <table_get_ldouble@@Base>:
   130d8:	push	{r4, lr}
   130dc:	bl	12fe0 <table_get@@Base>
   130e0:	vldr	d0, [r0]
   130e4:	pop	{r4, pc}

000130e8 <table_get_char@@Base>:
   130e8:	b	13030 <table_get_uint8@@Base>

000130ec <table_get_uchar@@Base>:
   130ec:	b	13030 <table_get_uint8@@Base>

000130f0 <table_get_string@@Base>:
   130f0:	b	12fe0 <table_get@@Base>

000130f4 <table_get_ptr@@Base>:
   130f4:	b	12fe0 <table_get@@Base>

000130f8 <table_row_init@@Base>:
   130f8:	push	{r4, r5, r6, lr}
   130fc:	mov	r5, r1
   13100:	ldr	r4, [r0, #16]
   13104:	ldr	r0, [r0, #12]
   13108:	lsl	r0, r0, #2
   1310c:	bl	11ab4 <malloc@plt>
   13110:	str	r0, [r4, r5, lsl #2]
   13114:	pop	{r4, r5, r6, pc}

00013118 <table_row_destroy@@Base>:
   13118:	push	{r4, r5, r6, r7, r8, lr}
   1311c:	mov	r6, r0
   13120:	mov	r5, r1
   13124:	mov	r4, #0
   13128:	bl	1264c <table_get_column_length@@Base>
   1312c:	ldr	r7, [r6, #16]
   13130:	mov	r8, r0
   13134:	cmp	r4, r8
   13138:	blt	13150 <table_row_destroy@@Base+0x38>
   1313c:	ldr	r0, [r7, r5, lsl #2]
   13140:	cmp	r0, #0
   13144:	popeq	{r4, r5, r6, r7, r8, pc}
   13148:	pop	{r4, r5, r6, r7, r8, lr}
   1314c:	b	11a84 <free@plt>
   13150:	mov	r2, r4
   13154:	mov	r1, r5
   13158:	mov	r0, r6
   1315c:	add	r4, r4, #1
   13160:	bl	1418c <table_cell_destroy@@Base>
   13164:	b	13134 <table_row_destroy@@Base+0x1c>

00013168 <table_get_row_length@@Base>:
   13168:	ldr	r0, [r0, #20]
   1316c:	bx	lr

00013170 <table_add_row@@Base>:
   13170:	ldr	r2, [r0, #20]
   13174:	push	{r4, r5, r6, r7, r8, lr}
   13178:	mov	r4, r0
   1317c:	ldr	r1, [r0, #24]
   13180:	udiv	r3, r2, r1
   13184:	mls	r3, r1, r3, r2
   13188:	cmp	r3, #0
   1318c:	bne	131ac <table_add_row@@Base+0x3c>
   13190:	ldr	r3, [r4, #28]
   13194:	ldr	r0, [r0, #16]
   13198:	add	r1, r1, r3
   1319c:	str	r1, [r4, #28]
   131a0:	lsl	r1, r1, #2
   131a4:	bl	11a90 <realloc@plt>
   131a8:	str	r0, [r4, #16]
   131ac:	ldr	r6, [r4, #20]
   131b0:	mov	r0, r4
   131b4:	mov	r5, #0
   131b8:	bl	1264c <table_get_column_length@@Base>
   131bc:	mov	r7, r0
   131c0:	mov	r0, r4
   131c4:	mov	r1, r6
   131c8:	bl	130f8 <table_row_init@@Base>
   131cc:	cmp	r7, r5
   131d0:	bgt	131f8 <table_add_row@@Base+0x88>
   131d4:	mov	r0, r4
   131d8:	mov	r3, #2
   131dc:	ldr	r1, [r4, #20]
   131e0:	mvn	r2, #0
   131e4:	bl	12574 <table_notify@@Base>
   131e8:	ldr	r0, [r4, #20]
   131ec:	add	r3, r0, #1
   131f0:	str	r3, [r4, #20]
   131f4:	pop	{r4, r5, r6, r7, r8, pc}
   131f8:	mov	r2, r5
   131fc:	mov	r1, r6
   13200:	mov	r0, r4
   13204:	add	r5, r5, #1
   13208:	bl	14178 <table_cell_init@@Base>
   1320c:	b	131cc <table_add_row@@Base+0x5c>

00013210 <table_remove_row@@Base>:
   13210:	push	{r4, r5, r6, r7, r8, lr}
   13214:	mov	r4, r0
   13218:	mov	r6, r1
   1321c:	mov	r5, #0
   13220:	ldr	r7, [r0, #20]
   13224:	bl	1264c <table_get_column_length@@Base>
   13228:	mov	r8, r0
   1322c:	cmp	r8, r5
   13230:	bgt	132b0 <table_remove_row@@Base+0xa0>
   13234:	ldr	r3, [r4, #16]
   13238:	ldr	r0, [r3, r6, lsl #2]
   1323c:	cmp	r0, #0
   13240:	beq	13248 <table_remove_row@@Base+0x38>
   13244:	bl	11a84 <free@plt>
   13248:	mov	r3, r6
   1324c:	sub	r7, r7, #1
   13250:	cmp	r3, r7
   13254:	blt	132ec <table_remove_row@@Base+0xdc>
   13258:	ldr	r3, [r4, #20]
   1325c:	ldr	r2, [r4, #24]
   13260:	sub	r3, r3, #1
   13264:	udiv	r1, r3, r2
   13268:	str	r3, [r4, #20]
   1326c:	mls	r3, r2, r1, r3
   13270:	cmp	r3, #0
   13274:	bne	13294 <table_remove_row@@Base+0x84>
   13278:	ldr	r0, [r4, #16]
   1327c:	ldr	r1, [r4, #28]
   13280:	sub	r1, r1, r2
   13284:	str	r1, [r4, #28]
   13288:	lsl	r1, r1, #2
   1328c:	bl	11a90 <realloc@plt>
   13290:	str	r0, [r4, #16]
   13294:	mov	r0, r4
   13298:	mov	r3, #4
   1329c:	mvn	r2, #0
   132a0:	mov	r1, r6
   132a4:	bl	12574 <table_notify@@Base>
   132a8:	mov	r0, #0
   132ac:	pop	{r4, r5, r6, r7, r8, pc}
   132b0:	mov	r1, r5
   132b4:	mov	r0, r4
   132b8:	bl	126a4 <table_get_column_data_type@@Base>
   132bc:	cmp	r0, #23
   132c0:	beq	132e4 <table_remove_row@@Base+0xd4>
   132c4:	mov	r2, r5
   132c8:	mov	r1, r6
   132cc:	mov	r0, r4
   132d0:	bl	14160 <table_get_cell_ptr@@Base>
   132d4:	ldr	r0, [r0]
   132d8:	cmp	r0, #0
   132dc:	beq	132e4 <table_remove_row@@Base+0xd4>
   132e0:	bl	11a84 <free@plt>
   132e4:	add	r5, r5, #1
   132e8:	b	1322c <table_remove_row@@Base+0x1c>
   132ec:	ldr	r2, [r4, #16]
   132f0:	add	r1, r2, r3, lsl #2
   132f4:	ldr	r1, [r1, #4]
   132f8:	str	r1, [r2, r3, lsl #2]
   132fc:	add	r3, r3, #1
   13300:	b	13250 <table_remove_row@@Base+0x40>

00013304 <table_get_row_ptr@@Base>:
   13304:	ldr	r0, [r0, #16]
   13308:	add	r0, r0, r1, lsl #2
   1330c:	bx	lr

00013310 <table_set_row_ptr@@Base>:
   13310:	ldr	r2, [r2]
   13314:	ldr	r3, [r0, #16]
   13318:	str	r2, [r3, r1, lsl #2]
   1331c:	bx	lr

00013320 <table_set@@Base>:
   13320:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13324:	mov	r6, r0
   13328:	mov	r8, r1
   1332c:	mov	r7, r2
   13330:	mov	r5, r3
   13334:	ldr	r9, [sp, #32]
   13338:	bl	14160 <table_get_cell_ptr@@Base>
   1333c:	mov	r4, r0
   13340:	mov	r1, r7
   13344:	mov	r0, r6
   13348:	bl	12924 <table_get_col_ptr@@Base>
   1334c:	cmp	r9, #23
   13350:	ldrls	pc, [pc, r9, lsl #2]
   13354:	b	134a4 <table_set@@Base+0x184>
   13358:	strdeq	r3, [r1], -r4
   1335c:	andeq	r3, r1, r8, asr #8
   13360:	andeq	r3, r1, r4, asr r4
   13364:	andeq	r3, r1, r0, ror #8
   13368:	andeq	r3, r1, ip, ror #8
   1336c:	andeq	r3, r1, ip, lsr #9
   13370:			; <UNDEFINED> instruction: 0x000134b8
   13374:	andeq	r3, r1, r4, asr #9
   13378:	ldrdeq	r3, [r1], -r0
   1337c:	andeq	r3, r1, r0, lsl r5
   13380:	andeq	r3, r1, r0, lsr r5
   13384:	andeq	r3, r1, ip, lsr r5
   13388:	andeq	r3, r1, r8, asr #10
   1338c:	andeq	r3, r1, r4, asr r5
   13390:	andeq	r3, r1, r0, ror #10
   13394:	andeq	r3, r1, ip, ror #10
   13398:	andeq	r3, r1, r8, ror r5
   1339c:	andeq	r3, r1, r4, lsl #11
   133a0:	muleq	r1, r0, r5
   133a4:	ldrdeq	r3, [r1], -r4
   133a8:	andeq	r3, r1, r0, ror #11
   133ac:	muleq	r1, ip, r5
   133b0:			; <UNDEFINED> instruction: 0x000133b8
   133b4:	andeq	r3, r1, ip, ror #11
   133b8:	ldr	r3, [r0, #4]
   133bc:	cmp	r3, #22
   133c0:	bne	134a4 <table_set@@Base+0x184>
   133c4:	ldr	r3, [r4]
   133c8:	cmp	r3, #0
   133cc:	bne	133dc <table_set@@Base+0xbc>
   133d0:	mov	r0, #1
   133d4:	bl	11ab4 <malloc@plt>
   133d8:	str	r0, [r4]
   133dc:	ldr	r3, [r4]
   133e0:	cmp	r3, #0
   133e4:	ldrbne	r2, [r5]
   133e8:	strbne	r2, [r3]
   133ec:	bne	1342c <table_set@@Base+0x10c>
   133f0:	b	134a4 <table_set@@Base+0x184>
   133f4:	ldr	r3, [r0, #4]
   133f8:	cmp	r3, #0
   133fc:	bne	134a4 <table_set@@Base+0x184>
   13400:	ldr	r3, [r4]
   13404:	cmp	r3, #0
   13408:	bne	13418 <table_set@@Base+0xf8>
   1340c:	mov	r0, #4
   13410:	bl	11ab4 <malloc@plt>
   13414:	str	r0, [r4]
   13418:	ldr	r3, [r4]
   1341c:	cmp	r3, #0
   13420:	ldrne	r2, [r5]
   13424:	strne	r2, [r3]
   13428:	beq	134a4 <table_set@@Base+0x184>
   1342c:	mov	r0, r6
   13430:	mov	r3, #1
   13434:	mov	r2, r7
   13438:	mov	r1, r8
   1343c:	bl	12574 <table_notify@@Base>
   13440:	mov	r0, #0
   13444:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13448:	ldr	r3, [r0, #4]
   1344c:	cmp	r3, #1
   13450:	b	133fc <table_set@@Base+0xdc>
   13454:	ldr	r3, [r0, #4]
   13458:	cmp	r3, #2
   1345c:	b	133c0 <table_set@@Base+0xa0>
   13460:	ldr	r3, [r0, #4]
   13464:	cmp	r3, #3
   13468:	b	133c0 <table_set@@Base+0xa0>
   1346c:	ldr	r3, [r0, #4]
   13470:	cmp	r3, #4
   13474:	bne	134a4 <table_set@@Base+0x184>
   13478:	ldr	r3, [r4]
   1347c:	cmp	r3, #0
   13480:	bne	13490 <table_set@@Base+0x170>
   13484:	mov	r0, #2
   13488:	bl	11ab4 <malloc@plt>
   1348c:	str	r0, [r4]
   13490:	ldr	r3, [r4]
   13494:	cmp	r3, #0
   13498:	ldrhne	r2, [r5]
   1349c:	strhne	r2, [r3]
   134a0:	bne	1342c <table_set@@Base+0x10c>
   134a4:	mvn	r0, #0
   134a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   134ac:	ldr	r3, [r0, #4]
   134b0:	cmp	r3, #5
   134b4:	b	13474 <table_set@@Base+0x154>
   134b8:	ldr	r3, [r0, #4]
   134bc:	cmp	r3, #6
   134c0:	b	133fc <table_set@@Base+0xdc>
   134c4:	ldr	r3, [r0, #4]
   134c8:	cmp	r3, #7
   134cc:	b	133fc <table_set@@Base+0xdc>
   134d0:	ldr	r0, [r0, #4]
   134d4:	cmp	r0, #8
   134d8:	bne	134a4 <table_set@@Base+0x184>
   134dc:	ldr	r3, [r4]
   134e0:	cmp	r3, #0
   134e4:	bne	134f0 <table_set@@Base+0x1d0>
   134e8:	bl	11ab4 <malloc@plt>
   134ec:	str	r0, [r4]
   134f0:	ldr	r3, [r4]
   134f4:	cmp	r3, #0
   134f8:	beq	134a4 <table_set@@Base+0x184>
   134fc:	ldr	r2, [r5]
   13500:	str	r2, [r3]
   13504:	ldr	r2, [r5, #4]
   13508:	str	r2, [r3, #4]
   1350c:	b	1342c <table_set@@Base+0x10c>
   13510:	ldr	r3, [r0, #4]
   13514:	cmp	r3, #9
   13518:	bne	134a4 <table_set@@Base+0x184>
   1351c:	ldr	r3, [r4]
   13520:	cmp	r3, #0
   13524:	bne	134f0 <table_set@@Base+0x1d0>
   13528:	mov	r0, #8
   1352c:	b	134e8 <table_set@@Base+0x1c8>
   13530:	ldr	r3, [r0, #4]
   13534:	cmp	r3, #10
   13538:	b	13474 <table_set@@Base+0x154>
   1353c:	ldr	r3, [r0, #4]
   13540:	cmp	r3, #11
   13544:	b	13474 <table_set@@Base+0x154>
   13548:	ldr	r3, [r0, #4]
   1354c:	cmp	r3, #12
   13550:	b	133fc <table_set@@Base+0xdc>
   13554:	ldr	r3, [r0, #4]
   13558:	cmp	r3, #13
   1355c:	b	133fc <table_set@@Base+0xdc>
   13560:	ldr	r3, [r0, #4]
   13564:	cmp	r3, #14
   13568:	b	13518 <table_set@@Base+0x1f8>
   1356c:	ldr	r3, [r0, #4]
   13570:	cmp	r3, #15
   13574:	b	13518 <table_set@@Base+0x1f8>
   13578:	ldr	r3, [r0, #4]
   1357c:	cmp	r3, #16
   13580:	b	133fc <table_set@@Base+0xdc>
   13584:	ldr	r3, [r0, #4]
   13588:	cmp	r3, #17
   1358c:	b	13518 <table_set@@Base+0x1f8>
   13590:	ldr	r3, [r0, #4]
   13594:	cmp	r3, #18
   13598:	b	13518 <table_set@@Base+0x1f8>
   1359c:	ldr	r3, [r0, #4]
   135a0:	cmp	r3, #21
   135a4:	bne	134a4 <table_set@@Base+0x184>
   135a8:	mov	r0, r5
   135ac:	bl	11ad8 <strlen@plt>
   135b0:	add	r1, r0, #1
   135b4:	ldr	r0, [r4]
   135b8:	bl	11a90 <realloc@plt>
   135bc:	cmp	r0, #0
   135c0:	str	r0, [r4]
   135c4:	beq	134a4 <table_set@@Base+0x184>
   135c8:	mov	r1, r5
   135cc:	bl	11a9c <strcpy@plt>
   135d0:	b	1342c <table_set@@Base+0x10c>
   135d4:	ldr	r3, [r0, #4]
   135d8:	cmp	r3, #19
   135dc:	b	133c0 <table_set@@Base+0xa0>
   135e0:	ldr	r3, [r0, #4]
   135e4:	cmp	r3, #20
   135e8:	b	133c0 <table_set@@Base+0xa0>
   135ec:	ldr	r3, [r0, #4]
   135f0:	cmp	r3, #23
   135f4:	bne	134a4 <table_set@@Base+0x184>
   135f8:	str	r5, [r4]
   135fc:	b	1342c <table_set@@Base+0x10c>

00013600 <table_set_bool@@Base>:
   13600:	push	{r0, r1, r2, r3, r4, lr}
   13604:	strb	r3, [sp, #15]
   13608:	mov	r3, #22
   1360c:	str	r3, [sp]
   13610:	add	r3, sp, #15
   13614:	bl	13320 <table_set@@Base>
   13618:	add	sp, sp, #20
   1361c:	pop	{pc}		; (ldr pc, [sp], #4)

00013620 <table_set_int@@Base>:
   13620:	push	{r0, r1, r2, r3, r4, lr}
   13624:	str	r3, [sp, #12]
   13628:	mov	r3, #0
   1362c:	str	r3, [sp]
   13630:	add	r3, sp, #12
   13634:	bl	13320 <table_set@@Base>
   13638:	add	sp, sp, #20
   1363c:	pop	{pc}		; (ldr pc, [sp], #4)

00013640 <table_set_uint@@Base>:
   13640:	push	{r0, r1, r2, r3, r4, lr}
   13644:	str	r3, [sp, #12]
   13648:	mov	r3, #1
   1364c:	str	r3, [sp]
   13650:	add	r3, sp, #12
   13654:	bl	13320 <table_set@@Base>
   13658:	add	sp, sp, #20
   1365c:	pop	{pc}		; (ldr pc, [sp], #4)

00013660 <table_set_int8@@Base>:
   13660:	push	{r0, r1, r2, r3, r4, lr}
   13664:	strb	r3, [sp, #15]
   13668:	mov	r3, #2
   1366c:	str	r3, [sp]
   13670:	add	r3, sp, #15
   13674:	bl	13320 <table_set@@Base>
   13678:	add	sp, sp, #20
   1367c:	pop	{pc}		; (ldr pc, [sp], #4)

00013680 <table_set_uint8@@Base>:
   13680:	push	{r0, r1, r2, r3, r4, lr}
   13684:	strb	r3, [sp, #15]
   13688:	mov	r3, #3
   1368c:	str	r3, [sp]
   13690:	add	r3, sp, #15
   13694:	bl	13320 <table_set@@Base>
   13698:	add	sp, sp, #20
   1369c:	pop	{pc}		; (ldr pc, [sp], #4)

000136a0 <table_set_int16@@Base>:
   136a0:	push	{r0, r1, r2, r3, r4, lr}
   136a4:	strh	r3, [sp, #14]
   136a8:	mov	r3, #4
   136ac:	str	r3, [sp]
   136b0:	add	r3, sp, #14
   136b4:	bl	13320 <table_set@@Base>
   136b8:	add	sp, sp, #20
   136bc:	pop	{pc}		; (ldr pc, [sp], #4)

000136c0 <table_set_uint16@@Base>:
   136c0:	push	{r0, r1, r2, r3, r4, lr}
   136c4:	strh	r3, [sp, #14]
   136c8:	mov	r3, #5
   136cc:	str	r3, [sp]
   136d0:	add	r3, sp, #14
   136d4:	bl	13320 <table_set@@Base>
   136d8:	add	sp, sp, #20
   136dc:	pop	{pc}		; (ldr pc, [sp], #4)

000136e0 <table_set_int32@@Base>:
   136e0:	push	{r0, r1, r2, r3, r4, lr}
   136e4:	str	r3, [sp, #12]
   136e8:	mov	r3, #6
   136ec:	str	r3, [sp]
   136f0:	add	r3, sp, #12
   136f4:	bl	13320 <table_set@@Base>
   136f8:	add	sp, sp, #20
   136fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013700 <table_set_uint32@@Base>:
   13700:	push	{r0, r1, r2, r3, r4, lr}
   13704:	str	r3, [sp, #12]
   13708:	mov	r3, #7
   1370c:	str	r3, [sp]
   13710:	add	r3, sp, #12
   13714:	bl	13320 <table_set@@Base>
   13718:	add	sp, sp, #20
   1371c:	pop	{pc}		; (ldr pc, [sp], #4)

00013720 <table_set_int64@@Base>:
   13720:	mov	r3, #8
   13724:	push	{r0, r1, r2, lr}
   13728:	str	r3, [sp]
   1372c:	add	r3, sp, #16
   13730:	bl	13320 <table_set@@Base>
   13734:	add	sp, sp, #12
   13738:	pop	{pc}		; (ldr pc, [sp], #4)

0001373c <table_set_uint64@@Base>:
   1373c:	mov	r3, #9
   13740:	push	{r0, r1, r2, lr}
   13744:	str	r3, [sp]
   13748:	add	r3, sp, #16
   1374c:	bl	13320 <table_set@@Base>
   13750:	add	sp, sp, #12
   13754:	pop	{pc}		; (ldr pc, [sp], #4)

00013758 <table_set_short@@Base>:
   13758:	push	{r0, r1, r2, r3, r4, lr}
   1375c:	strh	r3, [sp, #14]
   13760:	mov	r3, #10
   13764:	str	r3, [sp]
   13768:	add	r3, sp, #14
   1376c:	bl	13320 <table_set@@Base>
   13770:	add	sp, sp, #20
   13774:	pop	{pc}		; (ldr pc, [sp], #4)

00013778 <table_set_ushort@@Base>:
   13778:	push	{r0, r1, r2, r3, r4, lr}
   1377c:	strh	r3, [sp, #14]
   13780:	mov	r3, #11
   13784:	str	r3, [sp]
   13788:	add	r3, sp, #14
   1378c:	bl	13320 <table_set@@Base>
   13790:	add	sp, sp, #20
   13794:	pop	{pc}		; (ldr pc, [sp], #4)

00013798 <table_set_long@@Base>:
   13798:	push	{r0, r1, r2, r3, r4, lr}
   1379c:	str	r3, [sp, #12]
   137a0:	mov	r3, #12
   137a4:	str	r3, [sp]
   137a8:	add	r3, sp, r3
   137ac:	bl	13320 <table_set@@Base>
   137b0:	add	sp, sp, #20
   137b4:	pop	{pc}		; (ldr pc, [sp], #4)

000137b8 <table_set_ulong@@Base>:
   137b8:	push	{r0, r1, r2, r3, r4, lr}
   137bc:	str	r3, [sp, #12]
   137c0:	mov	r3, #13
   137c4:	str	r3, [sp]
   137c8:	add	r3, sp, #12
   137cc:	bl	13320 <table_set@@Base>
   137d0:	add	sp, sp, #20
   137d4:	pop	{pc}		; (ldr pc, [sp], #4)

000137d8 <table_set_llong@@Base>:
   137d8:	mov	r3, #14
   137dc:	push	{r0, r1, r2, lr}
   137e0:	str	r3, [sp]
   137e4:	add	r3, sp, #16
   137e8:	bl	13320 <table_set@@Base>
   137ec:	add	sp, sp, #12
   137f0:	pop	{pc}		; (ldr pc, [sp], #4)

000137f4 <table_set_ullong@@Base>:
   137f4:	mov	r3, #15
   137f8:	push	{r0, r1, r2, lr}
   137fc:	str	r3, [sp]
   13800:	add	r3, sp, #16
   13804:	bl	13320 <table_set@@Base>
   13808:	add	sp, sp, #12
   1380c:	pop	{pc}		; (ldr pc, [sp], #4)

00013810 <table_set_float@@Base>:
   13810:	push	{r0, r1, r2, r3, r4, lr}
   13814:	mov	r3, #16
   13818:	str	r3, [sp]
   1381c:	add	r3, sp, #12
   13820:	vstr	s0, [sp, #12]
   13824:	bl	13320 <table_set@@Base>
   13828:	add	sp, sp, #20
   1382c:	pop	{pc}		; (ldr pc, [sp], #4)

00013830 <table_set_double@@Base>:
   13830:	push	{r0, r1, r2, r3, r4, lr}
   13834:	mov	r3, #17
   13838:	str	r3, [sp]
   1383c:	add	r3, sp, #8
   13840:	vstr	d0, [sp, #8]
   13844:	bl	13320 <table_set@@Base>
   13848:	add	sp, sp, #20
   1384c:	pop	{pc}		; (ldr pc, [sp], #4)

00013850 <table_set_ldouble@@Base>:
   13850:	push	{r0, r1, r2, r3, r4, lr}
   13854:	mov	r3, #18
   13858:	str	r3, [sp]
   1385c:	add	r3, sp, #8
   13860:	vstr	d0, [sp, #8]
   13864:	bl	13320 <table_set@@Base>
   13868:	add	sp, sp, #20
   1386c:	pop	{pc}		; (ldr pc, [sp], #4)

00013870 <table_set_string@@Base>:
   13870:	mov	ip, #21
   13874:	push	{r0, r1, r2, lr}
   13878:	str	ip, [sp]
   1387c:	bl	13320 <table_set@@Base>
   13880:	add	sp, sp, #12
   13884:	pop	{pc}		; (ldr pc, [sp], #4)

00013888 <table_set_char@@Base>:
   13888:	push	{r0, r1, r2, r3, r4, lr}
   1388c:	strb	r3, [sp, #15]
   13890:	mov	r3, #19
   13894:	str	r3, [sp]
   13898:	add	r3, sp, #15
   1389c:	bl	13320 <table_set@@Base>
   138a0:	add	sp, sp, #20
   138a4:	pop	{pc}		; (ldr pc, [sp], #4)

000138a8 <table_set_uchar@@Base>:
   138a8:	push	{r0, r1, r2, r3, r4, lr}
   138ac:	strb	r3, [sp, #15]
   138b0:	mov	r3, #20
   138b4:	str	r3, [sp]
   138b8:	add	r3, sp, #15
   138bc:	bl	13320 <table_set@@Base>
   138c0:	add	sp, sp, #20
   138c4:	pop	{pc}		; (ldr pc, [sp], #4)

000138c8 <table_set_ptr@@Base>:
   138c8:	mov	ip, #23
   138cc:	push	{r0, r1, r2, lr}
   138d0:	str	ip, [sp]
   138d4:	bl	13320 <table_set@@Base>
   138d8:	add	sp, sp, #12
   138dc:	pop	{pc}		; (ldr pc, [sp], #4)

000138e0 <table_cell_to_buffer@@Base>:
   138e0:	push	{r4, r5, r6, r7, lr}
   138e4:	sub	sp, sp, #20
   138e8:	mov	r7, r1
   138ec:	mov	r1, r2
   138f0:	mov	r6, r0
   138f4:	mov	r4, r3
   138f8:	str	r2, [sp, #12]
   138fc:	ldr	r5, [sp, #40]	; 0x28
   13900:	bl	126a4 <table_get_column_data_type@@Base>
   13904:	ldr	r2, [sp, #12]
   13908:	cmp	r0, #23
   1390c:	ldrls	pc, [pc, r0, lsl #2]
   13910:	b	13a30 <table_cell_to_buffer@@Base+0x150>
   13914:	andeq	r3, r1, r4, ror r9
   13918:	andeq	r3, r1, ip, lsl #19
   1391c:			; <UNDEFINED> instruction: 0x000139b0
   13920:	andeq	r3, r1, r0, asr #19
   13924:	ldrdeq	r3, [r1], -r0
   13928:	andeq	r3, r1, r0, ror #19
   1392c:	strdeq	r3, [r1], -r0
   13930:	andeq	r3, r1, r0, lsl #20
   13934:	andeq	r3, r1, r0, lsl sl
   13938:	andeq	r3, r1, ip, lsr sl
   1393c:	andeq	r3, r1, r4, asr sl
   13940:	andeq	r3, r1, ip, ror #20
   13944:	andeq	r3, r1, r4, lsl #21
   13948:	muleq	r1, ip, sl
   1394c:			; <UNDEFINED> instruction: 0x00013ab4
   13950:	andeq	r3, r1, r4, asr #21
   13954:	andeq	r3, r1, ip, ror #21
   13958:	andeq	r3, r1, r4, lsl fp
   1395c:	andeq	r3, r1, ip, lsr #22
   13960:	andeq	r3, r1, r4, asr fp
   13964:	andeq	r3, r1, ip, ror #22
   13968:	ldrdeq	r3, [r1], -r4
   1396c:	andeq	r3, r1, r4, asr #22
   13970:	andeq	r3, r1, ip, ror fp
   13974:	mov	r1, r7
   13978:	mov	r0, r6
   1397c:	bl	13000 <table_get_int@@Base>
   13980:	mov	r3, r0
   13984:	ldr	r2, [pc, #520]	; 13b94 <table_cell_to_buffer@@Base+0x2b4>
   13988:	b	139a0 <table_cell_to_buffer@@Base+0xc0>
   1398c:	mov	r1, r7
   13990:	mov	r0, r6
   13994:	bl	13010 <table_get_uint@@Base>
   13998:	ldr	r2, [pc, #504]	; 13b98 <table_cell_to_buffer@@Base+0x2b8>
   1399c:	mov	r3, r0
   139a0:	mov	r1, r5
   139a4:	mov	r0, r4
   139a8:	bl	11ae4 <snprintf@plt>
   139ac:	b	13a30 <table_cell_to_buffer@@Base+0x150>
   139b0:	mov	r1, r7
   139b4:	mov	r0, r6
   139b8:	bl	13020 <table_get_int8@@Base>
   139bc:	b	13980 <table_cell_to_buffer@@Base+0xa0>
   139c0:	mov	r1, r7
   139c4:	mov	r0, r6
   139c8:	bl	13030 <table_get_uint8@@Base>
   139cc:	b	13998 <table_cell_to_buffer@@Base+0xb8>
   139d0:	mov	r1, r7
   139d4:	mov	r0, r6
   139d8:	bl	13040 <table_get_int16@@Base>
   139dc:	b	13980 <table_cell_to_buffer@@Base+0xa0>
   139e0:	mov	r1, r7
   139e4:	mov	r0, r6
   139e8:	bl	13050 <table_get_uint16@@Base>
   139ec:	b	13998 <table_cell_to_buffer@@Base+0xb8>
   139f0:	mov	r1, r7
   139f4:	mov	r0, r6
   139f8:	bl	13060 <table_get_int32@@Base>
   139fc:	b	13980 <table_cell_to_buffer@@Base+0xa0>
   13a00:	mov	r1, r7
   13a04:	mov	r0, r6
   13a08:	bl	13064 <table_get_uint32@@Base>
   13a0c:	b	13998 <table_cell_to_buffer@@Base+0xb8>
   13a10:	mov	r1, r7
   13a14:	mov	r0, r6
   13a18:	bl	13068 <table_get_int64@@Base>
   13a1c:	ldr	r2, [pc, #376]	; 13b9c <table_cell_to_buffer@@Base+0x2bc>
   13a20:	strd	r0, [sp]
   13a24:	mov	r1, r5
   13a28:	mov	r0, r4
   13a2c:	bl	11ae4 <snprintf@plt>
   13a30:	mov	r0, #0
   13a34:	add	sp, sp, #20
   13a38:	pop	{r4, r5, r6, r7, pc}
   13a3c:	mov	r1, r7
   13a40:	mov	r0, r6
   13a44:	bl	13078 <table_get_uint64@@Base>
   13a48:	ldr	r2, [pc, #336]	; 13ba0 <table_cell_to_buffer@@Base+0x2c0>
   13a4c:	strd	r0, [sp]
   13a50:	b	13a24 <table_cell_to_buffer@@Base+0x144>
   13a54:	mov	r1, r7
   13a58:	mov	r0, r6
   13a5c:	bl	13088 <table_get_short@@Base>
   13a60:	mov	r3, r0
   13a64:	ldr	r2, [pc, #312]	; 13ba4 <table_cell_to_buffer@@Base+0x2c4>
   13a68:	b	139a0 <table_cell_to_buffer@@Base+0xc0>
   13a6c:	mov	r1, r7
   13a70:	mov	r0, r6
   13a74:	bl	1308c <table_get_ushort@@Base>
   13a78:	mov	r3, r0
   13a7c:	ldr	r2, [pc, #292]	; 13ba8 <table_cell_to_buffer@@Base+0x2c8>
   13a80:	b	139a0 <table_cell_to_buffer@@Base+0xc0>
   13a84:	mov	r1, r7
   13a88:	mov	r0, r6
   13a8c:	bl	13090 <table_get_long@@Base>
   13a90:	mov	r3, r0
   13a94:	ldr	r2, [pc, #272]	; 13bac <table_cell_to_buffer@@Base+0x2cc>
   13a98:	b	139a0 <table_cell_to_buffer@@Base+0xc0>
   13a9c:	mov	r1, r7
   13aa0:	mov	r0, r6
   13aa4:	bl	130a0 <table_get_ulong@@Base>
   13aa8:	mov	r3, r0
   13aac:	ldr	r2, [pc, #252]	; 13bb0 <table_cell_to_buffer@@Base+0x2d0>
   13ab0:	b	139a0 <table_cell_to_buffer@@Base+0xc0>
   13ab4:	mov	r1, r7
   13ab8:	mov	r0, r6
   13abc:	bl	130b0 <table_get_llong@@Base>
   13ac0:	b	13a1c <table_cell_to_buffer@@Base+0x13c>
   13ac4:	mov	r1, r7
   13ac8:	mov	r0, r6
   13acc:	bl	130b4 <table_get_ullong@@Base>
   13ad0:	b	13a48 <table_cell_to_buffer@@Base+0x168>
   13ad4:	mov	r1, r7
   13ad8:	mov	r0, r6
   13adc:	bl	130f0 <table_get_string@@Base>
   13ae0:	mov	r3, r0
   13ae4:	ldr	r2, [pc, #200]	; 13bb4 <table_cell_to_buffer@@Base+0x2d4>
   13ae8:	b	139a0 <table_cell_to_buffer@@Base+0xc0>
   13aec:	mov	r1, r7
   13af0:	mov	r0, r6
   13af4:	bl	130b8 <table_get_float@@Base>
   13af8:	vcvt.f64.f32	d0, s0
   13afc:	ldr	r2, [pc, #180]	; 13bb8 <table_cell_to_buffer@@Base+0x2d8>
   13b00:	vstr	d0, [sp]
   13b04:	mov	r1, r5
   13b08:	mov	r0, r4
   13b0c:	bl	11ae4 <snprintf@plt>
   13b10:	b	13a30 <table_cell_to_buffer@@Base+0x150>
   13b14:	mov	r1, r7
   13b18:	mov	r0, r6
   13b1c:	bl	130c8 <table_get_double@@Base>
   13b20:	ldr	r2, [pc, #148]	; 13bbc <table_cell_to_buffer@@Base+0x2dc>
   13b24:	vstr	d0, [sp]
   13b28:	b	13b04 <table_cell_to_buffer@@Base+0x224>
   13b2c:	mov	r1, r7
   13b30:	mov	r0, r6
   13b34:	bl	130d8 <table_get_ldouble@@Base>
   13b38:	ldr	r2, [pc, #128]	; 13bc0 <table_cell_to_buffer@@Base+0x2e0>
   13b3c:	vstr	d0, [sp]
   13b40:	b	13b04 <table_cell_to_buffer@@Base+0x224>
   13b44:	mov	r1, r7
   13b48:	mov	r0, r6
   13b4c:	bl	12ff0 <table_get_bool@@Base>
   13b50:	b	13980 <table_cell_to_buffer@@Base+0xa0>
   13b54:	mov	r1, r7
   13b58:	mov	r0, r6
   13b5c:	bl	130e8 <table_get_char@@Base>
   13b60:	mov	r3, r0
   13b64:	ldr	r2, [pc, #88]	; 13bc4 <table_cell_to_buffer@@Base+0x2e4>
   13b68:	b	139a0 <table_cell_to_buffer@@Base+0xc0>
   13b6c:	mov	r1, r7
   13b70:	mov	r0, r6
   13b74:	bl	130ec <table_get_uchar@@Base>
   13b78:	b	13b60 <table_cell_to_buffer@@Base+0x280>
   13b7c:	mov	r1, r7
   13b80:	mov	r0, r6
   13b84:	bl	130f4 <table_get_ptr@@Base>
   13b88:	mov	r3, r0
   13b8c:	ldr	r2, [pc, #52]	; 13bc8 <table_cell_to_buffer@@Base+0x2e8>
   13b90:	b	139a0 <table_cell_to_buffer@@Base+0xc0>
   13b94:	ldrdeq	r4, [r1], -r0
   13b98:	ldrdeq	r4, [r1], -r3
   13b9c:	ldrdeq	r4, [r1], -r6
   13ba0:	ldrdeq	r4, [r1], -fp
   13ba4:	andeq	r4, r1, r0, ror #7
   13ba8:	andeq	r4, r1, r4, ror #7
   13bac:	andeq	r4, r1, r8, ror #7
   13bb0:	andeq	r4, r1, ip, ror #7
   13bb4:	strdeq	r4, [r1], -r0
   13bb8:	strdeq	r4, [r1], -r3
   13bbc:	strdeq	r4, [r1], -r6
   13bc0:	strdeq	r4, [r1], -sl
   13bc4:	strdeq	r4, [r1], -lr
   13bc8:	andeq	r4, r1, r1, lsl #8

00013bcc <table_cell_from_buffer@@Base>:
   13bcc:	push	{r4, r5, r6, r7, lr}
   13bd0:	mov	r7, r1
   13bd4:	sub	sp, sp, #268	; 0x10c
   13bd8:	mov	r1, r2
   13bdc:	mov	r6, r0
   13be0:	mov	r5, r2
   13be4:	mov	r4, r3
   13be8:	bl	126a4 <table_get_column_data_type@@Base>
   13bec:	cmp	r0, #23
   13bf0:	ldrls	pc, [pc, r0, lsl #2]
   13bf4:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13bf8:	andeq	r3, r1, r8, asr ip
   13bfc:	andeq	r3, r1, ip, lsl #25
   13c00:			; <UNDEFINED> instruction: 0x00013cbc
   13c04:	andeq	r3, r1, ip, ror #25
   13c08:	andeq	r3, r1, ip, lsl sp
   13c0c:	andeq	r3, r1, ip, asr #26
   13c10:	andeq	r3, r1, ip, ror sp
   13c14:	andeq	r3, r1, ip, lsr #27
   13c18:	ldrdeq	r3, [r1], -ip
   13c1c:	andeq	r3, r1, r0, lsl lr
   13c20:	andeq	r3, r1, r4, asr #28
   13c24:	andeq	r3, r1, r4, ror lr
   13c28:	andeq	r3, r1, r4, lsr #29
   13c2c:	ldrdeq	r3, [r1], -r4
   13c30:	andeq	r3, r1, r4, lsl #30
   13c34:	andeq	r3, r1, r8, lsr pc
   13c38:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   13c3c:	andeq	r3, r1, ip, asr #31
   13c40:	strdeq	r3, [r1], -ip
   13c44:	andeq	r4, r1, r8, lsl #1
   13c48:	strheq	r4, [r1], -r8
   13c4c:	andeq	r3, r1, ip, ror #30
   13c50:	andeq	r4, r1, ip, lsr #32
   13c54:	andeq	r4, r1, r8, ror #1
   13c58:	add	r2, sp, #8
   13c5c:	ldr	r1, [pc, #1212]	; 14120 <table_cell_from_buffer@@Base+0x554>
   13c60:	mov	r0, r4
   13c64:	bl	11af0 <__isoc99_sscanf@plt>
   13c68:	cmp	r0, #1
   13c6c:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13c70:	mov	r2, r5
   13c74:	mov	r1, r7
   13c78:	ldr	r3, [sp, #8]
   13c7c:	mov	r0, r6
   13c80:	bl	13620 <table_set_int@@Base>
   13c84:	mov	r4, #0
   13c88:	b	1407c <table_cell_from_buffer@@Base+0x4b0>
   13c8c:	add	r2, sp, #8
   13c90:	ldr	r1, [pc, #1164]	; 14124 <table_cell_from_buffer@@Base+0x558>
   13c94:	mov	r0, r4
   13c98:	bl	11af0 <__isoc99_sscanf@plt>
   13c9c:	cmp	r0, #1
   13ca0:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13ca4:	mov	r2, r5
   13ca8:	mov	r1, r7
   13cac:	ldr	r3, [sp, #8]
   13cb0:	mov	r0, r6
   13cb4:	bl	13640 <table_set_uint@@Base>
   13cb8:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13cbc:	add	r2, sp, #8
   13cc0:	ldr	r1, [pc, #1120]	; 14128 <table_cell_from_buffer@@Base+0x55c>
   13cc4:	mov	r0, r4
   13cc8:	bl	11af0 <__isoc99_sscanf@plt>
   13ccc:	cmp	r0, #1
   13cd0:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13cd4:	ldrsb	r3, [sp, #8]
   13cd8:	mov	r2, r5
   13cdc:	mov	r1, r7
   13ce0:	mov	r0, r6
   13ce4:	bl	13660 <table_set_int8@@Base>
   13ce8:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13cec:	add	r2, sp, #8
   13cf0:	ldr	r1, [pc, #1076]	; 1412c <table_cell_from_buffer@@Base+0x560>
   13cf4:	mov	r0, r4
   13cf8:	bl	11af0 <__isoc99_sscanf@plt>
   13cfc:	cmp	r0, #1
   13d00:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13d04:	ldrb	r3, [sp, #8]
   13d08:	mov	r2, r5
   13d0c:	mov	r1, r7
   13d10:	mov	r0, r6
   13d14:	bl	13680 <table_set_uint8@@Base>
   13d18:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13d1c:	add	r2, sp, #8
   13d20:	ldr	r1, [pc, #1032]	; 14130 <table_cell_from_buffer@@Base+0x564>
   13d24:	mov	r0, r4
   13d28:	bl	11af0 <__isoc99_sscanf@plt>
   13d2c:	cmp	r0, #1
   13d30:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13d34:	ldrsh	r3, [sp, #8]
   13d38:	mov	r2, r5
   13d3c:	mov	r1, r7
   13d40:	mov	r0, r6
   13d44:	bl	136a0 <table_set_int16@@Base>
   13d48:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13d4c:	add	r2, sp, #8
   13d50:	ldr	r1, [pc, #988]	; 14134 <table_cell_from_buffer@@Base+0x568>
   13d54:	mov	r0, r4
   13d58:	bl	11af0 <__isoc99_sscanf@plt>
   13d5c:	cmp	r0, #1
   13d60:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13d64:	ldrh	r3, [sp, #8]
   13d68:	mov	r2, r5
   13d6c:	mov	r1, r7
   13d70:	mov	r0, r6
   13d74:	bl	136c0 <table_set_uint16@@Base>
   13d78:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13d7c:	add	r2, sp, #8
   13d80:	ldr	r1, [pc, #920]	; 14120 <table_cell_from_buffer@@Base+0x554>
   13d84:	mov	r0, r4
   13d88:	bl	11af0 <__isoc99_sscanf@plt>
   13d8c:	cmp	r0, #1
   13d90:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13d94:	mov	r2, r5
   13d98:	mov	r1, r7
   13d9c:	ldr	r3, [sp, #8]
   13da0:	mov	r0, r6
   13da4:	bl	136e0 <table_set_int32@@Base>
   13da8:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13dac:	add	r2, sp, #8
   13db0:	ldr	r1, [pc, #876]	; 14124 <table_cell_from_buffer@@Base+0x558>
   13db4:	mov	r0, r4
   13db8:	bl	11af0 <__isoc99_sscanf@plt>
   13dbc:	cmp	r0, #1
   13dc0:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13dc4:	mov	r2, r5
   13dc8:	mov	r1, r7
   13dcc:	ldr	r3, [sp, #8]
   13dd0:	mov	r0, r6
   13dd4:	bl	13700 <table_set_uint32@@Base>
   13dd8:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13ddc:	add	r2, sp, #8
   13de0:	ldr	r1, [pc, #848]	; 14138 <table_cell_from_buffer@@Base+0x56c>
   13de4:	mov	r0, r4
   13de8:	bl	11af0 <__isoc99_sscanf@plt>
   13dec:	cmp	r0, #1
   13df0:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13df4:	ldrd	r2, [sp, #8]
   13df8:	mov	r1, r7
   13dfc:	mov	r0, r6
   13e00:	strd	r2, [sp]
   13e04:	mov	r2, r5
   13e08:	bl	13720 <table_set_int64@@Base>
   13e0c:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13e10:	add	r2, sp, #8
   13e14:	ldr	r1, [pc, #800]	; 1413c <table_cell_from_buffer@@Base+0x570>
   13e18:	mov	r0, r4
   13e1c:	bl	11af0 <__isoc99_sscanf@plt>
   13e20:	cmp	r0, #1
   13e24:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13e28:	ldrd	r2, [sp, #8]
   13e2c:	mov	r1, r7
   13e30:	mov	r0, r6
   13e34:	strd	r2, [sp]
   13e38:	mov	r2, r5
   13e3c:	bl	1373c <table_set_uint64@@Base>
   13e40:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13e44:	add	r2, sp, #8
   13e48:	ldr	r1, [pc, #736]	; 14130 <table_cell_from_buffer@@Base+0x564>
   13e4c:	mov	r0, r4
   13e50:	bl	11af0 <__isoc99_sscanf@plt>
   13e54:	cmp	r0, #1
   13e58:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13e5c:	ldrsh	r3, [sp, #8]
   13e60:	mov	r2, r5
   13e64:	mov	r1, r7
   13e68:	mov	r0, r6
   13e6c:	bl	13758 <table_set_short@@Base>
   13e70:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13e74:	add	r2, sp, #8
   13e78:	ldr	r1, [pc, #692]	; 14134 <table_cell_from_buffer@@Base+0x568>
   13e7c:	mov	r0, r4
   13e80:	bl	11af0 <__isoc99_sscanf@plt>
   13e84:	cmp	r0, #1
   13e88:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13e8c:	ldrh	r3, [sp, #8]
   13e90:	mov	r2, r5
   13e94:	mov	r1, r7
   13e98:	mov	r0, r6
   13e9c:	bl	13778 <table_set_ushort@@Base>
   13ea0:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13ea4:	add	r2, sp, #8
   13ea8:	ldr	r1, [pc, #656]	; 14140 <table_cell_from_buffer@@Base+0x574>
   13eac:	mov	r0, r4
   13eb0:	bl	11af0 <__isoc99_sscanf@plt>
   13eb4:	cmp	r0, #1
   13eb8:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13ebc:	mov	r2, r5
   13ec0:	mov	r1, r7
   13ec4:	ldr	r3, [sp, #8]
   13ec8:	mov	r0, r6
   13ecc:	bl	13798 <table_set_long@@Base>
   13ed0:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13ed4:	add	r2, sp, #8
   13ed8:	ldr	r1, [pc, #612]	; 14144 <table_cell_from_buffer@@Base+0x578>
   13edc:	mov	r0, r4
   13ee0:	bl	11af0 <__isoc99_sscanf@plt>
   13ee4:	cmp	r0, #1
   13ee8:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13eec:	mov	r2, r5
   13ef0:	mov	r1, r7
   13ef4:	ldr	r3, [sp, #8]
   13ef8:	mov	r0, r6
   13efc:	bl	137b8 <table_set_ulong@@Base>
   13f00:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13f04:	add	r2, sp, #8
   13f08:	ldr	r1, [pc, #552]	; 14138 <table_cell_from_buffer@@Base+0x56c>
   13f0c:	mov	r0, r4
   13f10:	bl	11af0 <__isoc99_sscanf@plt>
   13f14:	cmp	r0, #1
   13f18:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13f1c:	ldrd	r2, [sp, #8]
   13f20:	mov	r1, r7
   13f24:	mov	r0, r6
   13f28:	strd	r2, [sp]
   13f2c:	mov	r2, r5
   13f30:	bl	137d8 <table_set_llong@@Base>
   13f34:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13f38:	add	r2, sp, #8
   13f3c:	ldr	r1, [pc, #504]	; 1413c <table_cell_from_buffer@@Base+0x570>
   13f40:	mov	r0, r4
   13f44:	bl	11af0 <__isoc99_sscanf@plt>
   13f48:	cmp	r0, #1
   13f4c:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13f50:	ldrd	r2, [sp, #8]
   13f54:	mov	r1, r7
   13f58:	mov	r0, r6
   13f5c:	strd	r2, [sp]
   13f60:	mov	r2, r5
   13f64:	bl	137f4 <table_set_ullong@@Base>
   13f68:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13f6c:	add	r2, sp, #8
   13f70:	ldr	r1, [pc, #464]	; 14148 <table_cell_from_buffer@@Base+0x57c>
   13f74:	mov	r0, r4
   13f78:	bl	11af0 <__isoc99_sscanf@plt>
   13f7c:	cmp	r0, #1
   13f80:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13f84:	add	r3, sp, #8
   13f88:	mov	r2, r5
   13f8c:	mov	r1, r7
   13f90:	mov	r0, r6
   13f94:	bl	13870 <table_set_string@@Base>
   13f98:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13f9c:	add	r2, sp, #8
   13fa0:	ldr	r1, [pc, #420]	; 1414c <table_cell_from_buffer@@Base+0x580>
   13fa4:	mov	r0, r4
   13fa8:	bl	11af0 <__isoc99_sscanf@plt>
   13fac:	cmp	r0, #1
   13fb0:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13fb4:	mov	r2, r5
   13fb8:	mov	r1, r7
   13fbc:	vldr	s0, [sp, #8]
   13fc0:	mov	r0, r6
   13fc4:	bl	13810 <table_set_float@@Base>
   13fc8:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13fcc:	add	r2, sp, #8
   13fd0:	ldr	r1, [pc, #376]	; 14150 <table_cell_from_buffer@@Base+0x584>
   13fd4:	mov	r0, r4
   13fd8:	bl	11af0 <__isoc99_sscanf@plt>
   13fdc:	cmp	r0, #1
   13fe0:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   13fe4:	mov	r2, r5
   13fe8:	mov	r1, r7
   13fec:	vldr	d0, [sp, #8]
   13ff0:	mov	r0, r6
   13ff4:	bl	13830 <table_set_double@@Base>
   13ff8:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   13ffc:	add	r2, sp, #8
   14000:	ldr	r1, [pc, #332]	; 14154 <table_cell_from_buffer@@Base+0x588>
   14004:	mov	r0, r4
   14008:	bl	11af0 <__isoc99_sscanf@plt>
   1400c:	cmp	r0, #1
   14010:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   14014:	mov	r2, r5
   14018:	mov	r1, r7
   1401c:	vldr	d0, [sp, #8]
   14020:	mov	r0, r6
   14024:	bl	13850 <table_set_ldouble@@Base>
   14028:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   1402c:	add	r2, sp, #8
   14030:	ldr	r1, [pc, #232]	; 14120 <table_cell_from_buffer@@Base+0x554>
   14034:	mov	r0, r4
   14038:	bl	11af0 <__isoc99_sscanf@plt>
   1403c:	cmp	r0, #1
   14040:	mov	r3, r0
   14044:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   14048:	ldr	r4, [sp, #8]
   1404c:	cmp	r4, #0
   14050:	beq	14068 <table_cell_from_buffer@@Base+0x49c>
   14054:	mov	r2, r5
   14058:	mov	r1, r7
   1405c:	mov	r0, r6
   14060:	bl	13600 <table_set_bool@@Base>
   14064:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   14068:	mov	r3, r4
   1406c:	mov	r2, r5
   14070:	mov	r1, r7
   14074:	mov	r0, r6
   14078:	bl	13600 <table_set_bool@@Base>
   1407c:	mov	r0, r4
   14080:	add	sp, sp, #268	; 0x10c
   14084:	pop	{r4, r5, r6, r7, pc}
   14088:	add	r2, sp, #8
   1408c:	ldr	r1, [pc, #196]	; 14158 <table_cell_from_buffer@@Base+0x58c>
   14090:	mov	r0, r4
   14094:	bl	11af0 <__isoc99_sscanf@plt>
   14098:	cmp	r0, #1
   1409c:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   140a0:	ldrb	r3, [sp, #8]
   140a4:	mov	r2, r5
   140a8:	mov	r1, r7
   140ac:	mov	r0, r6
   140b0:	bl	13888 <table_set_char@@Base>
   140b4:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   140b8:	add	r2, sp, #8
   140bc:	ldr	r1, [pc, #148]	; 14158 <table_cell_from_buffer@@Base+0x58c>
   140c0:	mov	r0, r4
   140c4:	bl	11af0 <__isoc99_sscanf@plt>
   140c8:	cmp	r0, #1
   140cc:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   140d0:	ldrb	r3, [sp, #8]
   140d4:	mov	r2, r5
   140d8:	mov	r1, r7
   140dc:	mov	r0, r6
   140e0:	bl	138a8 <table_set_uchar@@Base>
   140e4:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   140e8:	add	r2, sp, #8
   140ec:	ldr	r1, [pc, #104]	; 1415c <table_cell_from_buffer@@Base+0x590>
   140f0:	mov	r0, r4
   140f4:	bl	11af0 <__isoc99_sscanf@plt>
   140f8:	cmp	r0, #1
   140fc:	bne	14118 <table_cell_from_buffer@@Base+0x54c>
   14100:	mov	r2, r5
   14104:	mov	r1, r7
   14108:	ldr	r3, [sp, #8]
   1410c:	mov	r0, r6
   14110:	bl	138c8 <table_set_ptr@@Base>
   14114:	b	13c84 <table_cell_from_buffer@@Base+0xb8>
   14118:	mvn	r4, #0
   1411c:	b	1407c <table_cell_from_buffer@@Base+0x4b0>
   14120:	ldrdeq	r4, [r1], -r0
   14124:	ldrdeq	r4, [r1], -r3
   14128:	andeq	r4, r1, r4, lsl #8
   1412c:	andeq	r4, r1, r9, lsl #8
   14130:	andeq	r4, r1, r0, ror #7
   14134:	andeq	r4, r1, r4, ror #7
   14138:	ldrdeq	r4, [r1], -r6
   1413c:	ldrdeq	r4, [r1], -fp
   14140:	andeq	r4, r1, r8, ror #7
   14144:	andeq	r4, r1, ip, ror #7
   14148:	strdeq	r4, [r1], -r0
   1414c:	strdeq	r4, [r1], -r3
   14150:	strdeq	r4, [r1], -r6
   14154:	strdeq	r4, [r1], -sl
   14158:	strdeq	r4, [r1], -lr
   1415c:	andeq	r4, r1, r1, lsl #8

00014160 <table_get_cell_ptr@@Base>:
   14160:	push	{r4, lr}
   14164:	mov	r4, r2
   14168:	bl	13304 <table_get_row_ptr@@Base>
   1416c:	ldr	r0, [r0]
   14170:	add	r0, r0, r4, lsl #2
   14174:	pop	{r4, pc}

00014178 <table_cell_init@@Base>:
   14178:	push	{r4, lr}
   1417c:	bl	14160 <table_get_cell_ptr@@Base>
   14180:	mov	r3, #0
   14184:	str	r3, [r0]
   14188:	pop	{r4, pc}

0001418c <table_cell_destroy@@Base>:
   1418c:	push	{r4, r5, r6, lr}
   14190:	mov	r6, r1
   14194:	mov	r1, r2
   14198:	mov	r5, r0
   1419c:	mov	r4, r2
   141a0:	bl	126a4 <table_get_column_data_type@@Base>
   141a4:	cmp	r0, #23
   141a8:	popeq	{r4, r5, r6, pc}
   141ac:	mov	r2, r4
   141b0:	mov	r1, r6
   141b4:	mov	r0, r5
   141b8:	bl	14160 <table_get_cell_ptr@@Base>
   141bc:	ldr	r0, [r0]
   141c0:	cmp	r0, #0
   141c4:	popeq	{r4, r5, r6, pc}
   141c8:	pop	{r4, r5, r6, lr}
   141cc:	b	11a84 <free@plt>

000141d0 <table_cell_nullify@@Base>:
   141d0:	push	{r4, lr}
   141d4:	bl	14160 <table_get_cell_ptr@@Base>
   141d8:	mov	r4, r0
   141dc:	ldr	r0, [r0]
   141e0:	cmp	r0, #0
   141e4:	beq	141f4 <table_cell_nullify@@Base+0x24>
   141e8:	bl	11a84 <free@plt>
   141ec:	mov	r3, #0
   141f0:	str	r3, [r4]
   141f4:	mov	r0, #0
   141f8:	pop	{r4, pc}

000141fc <__libc_csu_init@@Base>:
   141fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14200:	mov	r7, r0
   14204:	ldr	r6, [pc, #72]	; 14254 <__libc_csu_init@@Base+0x58>
   14208:	ldr	r5, [pc, #72]	; 14258 <__libc_csu_init@@Base+0x5c>
   1420c:	add	r6, pc, r6
   14210:	add	r5, pc, r5
   14214:	sub	r6, r6, r5
   14218:	mov	r8, r1
   1421c:	mov	r9, r2
   14220:	bl	11a4c <strcmp@plt-0x20>
   14224:	asrs	r6, r6, #2
   14228:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1422c:	mov	r4, #0
   14230:	add	r4, r4, #1
   14234:	ldr	r3, [r5], #4
   14238:	mov	r2, r9
   1423c:	mov	r1, r8
   14240:	mov	r0, r7
   14244:	blx	r3
   14248:	cmp	r6, r4
   1424c:	bne	14230 <__libc_csu_init@@Base+0x34>
   14250:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14254:	andeq	r0, r1, r0, lsl #26
   14258:	strdeq	r0, [r1], -r8

0001425c <__libc_csu_fini@@Base>:
   1425c:	bx	lr

Disassembly of section .fini:

00014260 <.fini>:
   14260:	push	{r3, lr}
   14264:	pop	{r3, pc}
