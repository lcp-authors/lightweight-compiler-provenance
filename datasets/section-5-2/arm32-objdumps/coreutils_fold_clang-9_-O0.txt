
../repos/coreutils/src/fold:     file format elf32-littlearm


Disassembly of section .init:

00010e28 <.init>:
   10e28:	push	{r3, lr}
   10e2c:	bl	11100 <__assert_fail@plt+0x48>
   10e30:	pop	{r3, pc}

Disassembly of section .plt:

00010e34 <calloc@plt-0x14>:
   10e34:	push	{lr}		; (str lr, [sp, #-4]!)
   10e38:	ldr	lr, [pc, #4]	; 10e44 <calloc@plt-0x4>
   10e3c:	add	lr, pc, lr
   10e40:	ldr	pc, [lr, #8]!
   10e44:			; <UNDEFINED> instruction: 0x0001d1bc

00010e48 <calloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #118784	; 0x1d000
   10e50:	ldr	pc, [ip, #444]!	; 0x1bc

00010e54 <fputs_unlocked@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #118784	; 0x1d000
   10e5c:	ldr	pc, [ip, #436]!	; 0x1b4

00010e60 <raise@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #118784	; 0x1d000
   10e68:	ldr	pc, [ip, #428]!	; 0x1ac

00010e6c <strcmp@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #118784	; 0x1d000
   10e74:	ldr	pc, [ip, #420]!	; 0x1a4

00010e78 <posix_fadvise64@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #118784	; 0x1d000
   10e80:	ldr	pc, [ip, #412]!	; 0x19c

00010e84 <printf@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #118784	; 0x1d000
   10e8c:	ldr	pc, [ip, #404]!	; 0x194

00010e90 <fflush@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #118784	; 0x1d000
   10e98:	ldr	pc, [ip, #396]!	; 0x18c

00010e9c <memmove@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #118784	; 0x1d000
   10ea4:	ldr	pc, [ip, #388]!	; 0x184

00010ea8 <free@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #118784	; 0x1d000
   10eb0:	ldr	pc, [ip, #380]!	; 0x17c

00010eb4 <_exit@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #118784	; 0x1d000
   10ebc:	ldr	pc, [ip, #372]!	; 0x174

00010ec0 <memcpy@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #118784	; 0x1d000
   10ec8:	ldr	pc, [ip, #364]!	; 0x16c

00010ecc <mbsinit@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #118784	; 0x1d000
   10ed4:	ldr	pc, [ip, #356]!	; 0x164

00010ed8 <fwrite_unlocked@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #118784	; 0x1d000
   10ee0:	ldr	pc, [ip, #348]!	; 0x15c

00010ee4 <memcmp@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #118784	; 0x1d000
   10eec:	ldr	pc, [ip, #340]!	; 0x154

00010ef0 <getc_unlocked@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #118784	; 0x1d000
   10ef8:	ldr	pc, [ip, #332]!	; 0x14c

00010efc <realloc@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #118784	; 0x1d000
   10f04:	ldr	pc, [ip, #324]!	; 0x144

00010f08 <textdomain@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #118784	; 0x1d000
   10f10:	ldr	pc, [ip, #316]!	; 0x13c

00010f14 <iswprint@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #118784	; 0x1d000
   10f1c:	ldr	pc, [ip, #308]!	; 0x134

00010f20 <lseek64@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #118784	; 0x1d000
   10f28:	ldr	pc, [ip, #300]!	; 0x12c

00010f2c <__ctype_get_mb_cur_max@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #118784	; 0x1d000
   10f34:	ldr	pc, [ip, #292]!	; 0x124

00010f38 <__fpending@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #118784	; 0x1d000
   10f40:	ldr	pc, [ip, #284]!	; 0x11c

00010f44 <ferror_unlocked@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #118784	; 0x1d000
   10f4c:	ldr	pc, [ip, #276]!	; 0x114

00010f50 <mbrtowc@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #118784	; 0x1d000
   10f58:	ldr	pc, [ip, #268]!	; 0x10c

00010f5c <error@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #118784	; 0x1d000
   10f64:	ldr	pc, [ip, #260]!	; 0x104

00010f68 <malloc@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #118784	; 0x1d000
   10f70:	ldr	pc, [ip, #252]!	; 0xfc

00010f74 <__libc_start_main@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #118784	; 0x1d000
   10f7c:	ldr	pc, [ip, #244]!	; 0xf4

00010f80 <__freading@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #118784	; 0x1d000
   10f88:	ldr	pc, [ip, #236]!	; 0xec

00010f8c <__gmon_start__@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #118784	; 0x1d000
   10f94:	ldr	pc, [ip, #228]!	; 0xe4

00010f98 <getopt_long@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #118784	; 0x1d000
   10fa0:	ldr	pc, [ip, #220]!	; 0xdc

00010fa4 <__ctype_b_loc@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #118784	; 0x1d000
   10fac:	ldr	pc, [ip, #212]!	; 0xd4

00010fb0 <exit@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #118784	; 0x1d000
   10fb8:	ldr	pc, [ip, #204]!	; 0xcc

00010fbc <gettext@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #118784	; 0x1d000
   10fc4:	ldr	pc, [ip, #196]!	; 0xc4

00010fc8 <strlen@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #118784	; 0x1d000
   10fd0:	ldr	pc, [ip, #188]!	; 0xbc

00010fd4 <strchr@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #118784	; 0x1d000
   10fdc:	ldr	pc, [ip, #180]!	; 0xb4

00010fe0 <fprintf@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #118784	; 0x1d000
   10fe8:	ldr	pc, [ip, #172]!	; 0xac

00010fec <__errno_location@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #118784	; 0x1d000
   10ff4:	ldr	pc, [ip, #164]!	; 0xa4

00010ff8 <__cxa_atexit@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #118784	; 0x1d000
   11000:	ldr	pc, [ip, #156]!	; 0x9c

00011004 <memset@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #118784	; 0x1d000
   1100c:	ldr	pc, [ip, #148]!	; 0x94

00011010 <fileno@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #118784	; 0x1d000
   11018:	ldr	pc, [ip, #140]!	; 0x8c

0001101c <strtoumax@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #118784	; 0x1d000
   11024:	ldr	pc, [ip, #132]!	; 0x84

00011028 <fclose@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #118784	; 0x1d000
   11030:	ldr	pc, [ip, #124]!	; 0x7c

00011034 <fseeko64@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #118784	; 0x1d000
   1103c:	ldr	pc, [ip, #116]!	; 0x74

00011040 <setlocale@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #118784	; 0x1d000
   11048:	ldr	pc, [ip, #108]!	; 0x6c

0001104c <strrchr@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #118784	; 0x1d000
   11054:	ldr	pc, [ip, #100]!	; 0x64

00011058 <nl_langinfo@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #118784	; 0x1d000
   11060:	ldr	pc, [ip, #92]!	; 0x5c

00011064 <clearerr_unlocked@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #118784	; 0x1d000
   1106c:	ldr	pc, [ip, #84]!	; 0x54

00011070 <fopen64@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #118784	; 0x1d000
   11078:	ldr	pc, [ip, #76]!	; 0x4c

0001107c <bindtextdomain@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #118784	; 0x1d000
   11084:	ldr	pc, [ip, #68]!	; 0x44

00011088 <fputs@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #118784	; 0x1d000
   11090:	ldr	pc, [ip, #60]!	; 0x3c

00011094 <strncmp@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #118784	; 0x1d000
   1109c:	ldr	pc, [ip, #52]!	; 0x34

000110a0 <abort@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #118784	; 0x1d000
   110a8:	ldr	pc, [ip, #44]!	; 0x2c

000110ac <putchar_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #118784	; 0x1d000
   110b4:	ldr	pc, [ip, #36]!	; 0x24

000110b8 <__assert_fail@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #118784	; 0x1d000
   110c0:	ldr	pc, [ip, #28]!

Disassembly of section .text:

000110c4 <.text>:
   110c4:	mov	fp, #0
   110c8:	mov	lr, #0
   110cc:	pop	{r1}		; (ldr r1, [sp], #4)
   110d0:	mov	r2, sp
   110d4:	push	{r2}		; (str r2, [sp, #-4]!)
   110d8:	push	{r0}		; (str r0, [sp, #-4]!)
   110dc:	ldr	ip, [pc, #16]	; 110f4 <__assert_fail@plt+0x3c>
   110e0:	push	{ip}		; (str ip, [sp, #-4]!)
   110e4:	ldr	r0, [pc, #12]	; 110f8 <__assert_fail@plt+0x40>
   110e8:	ldr	r3, [pc, #12]	; 110fc <__assert_fail@plt+0x44>
   110ec:	bl	10f74 <__libc_start_main@plt>
   110f0:	bl	110a0 <abort@plt>
   110f4:	andeq	ip, r1, ip, ror #17
   110f8:	andeq	r1, r1, r0, ror #9
   110fc:	andeq	ip, r1, ip, lsl #17
   11100:	ldr	r3, [pc, #20]	; 1111c <__assert_fail@plt+0x64>
   11104:	ldr	r2, [pc, #20]	; 11120 <__assert_fail@plt+0x68>
   11108:	add	r3, pc, r3
   1110c:	ldr	r2, [r3, r2]
   11110:	cmp	r2, #0
   11114:	bxeq	lr
   11118:	b	10f8c <__gmon_start__@plt>
   1111c:	strdeq	ip, [r1], -r0
   11120:	andeq	r0, r0, r0, ror #1
   11124:	ldr	r0, [pc, #24]	; 11144 <__assert_fail@plt+0x8c>
   11128:	ldr	r3, [pc, #24]	; 11148 <__assert_fail@plt+0x90>
   1112c:	cmp	r3, r0
   11130:	bxeq	lr
   11134:	ldr	r3, [pc, #16]	; 1114c <__assert_fail@plt+0x94>
   11138:	cmp	r3, #0
   1113c:	bxeq	lr
   11140:	bx	r3
   11144:	andeq	lr, r2, r4, lsr r1
   11148:	andeq	lr, r2, r4, lsr r1
   1114c:	andeq	r0, r0, r0
   11150:	ldr	r0, [pc, #36]	; 1117c <__assert_fail@plt+0xc4>
   11154:	ldr	r1, [pc, #36]	; 11180 <__assert_fail@plt+0xc8>
   11158:	sub	r1, r1, r0
   1115c:	asr	r1, r1, #2
   11160:	add	r1, r1, r1, lsr #31
   11164:	asrs	r1, r1, #1
   11168:	bxeq	lr
   1116c:	ldr	r3, [pc, #16]	; 11184 <__assert_fail@plt+0xcc>
   11170:	cmp	r3, #0
   11174:	bxeq	lr
   11178:	bx	r3
   1117c:	andeq	lr, r2, r4, lsr r1
   11180:	andeq	lr, r2, r4, lsr r1
   11184:	andeq	r0, r0, r0
   11188:	push	{r4, lr}
   1118c:	ldr	r4, [pc, #24]	; 111ac <__assert_fail@plt+0xf4>
   11190:	ldrb	r3, [r4]
   11194:	cmp	r3, #0
   11198:	popne	{r4, pc}
   1119c:	bl	11124 <__assert_fail@plt+0x6c>
   111a0:	mov	r3, #1
   111a4:	strb	r3, [r4]
   111a8:	pop	{r4, pc}
   111ac:	andeq	lr, r2, ip, asr r1
   111b0:	b	11150 <__assert_fail@plt+0x98>
   111b4:	push	{fp, lr}
   111b8:	mov	fp, sp
   111bc:	sub	sp, sp, #32
   111c0:	str	r0, [fp, #-4]
   111c4:	ldr	r0, [fp, #-4]
   111c8:	cmp	r0, #0
   111cc:	beq	11218 <__assert_fail@plt+0x160>
   111d0:	b	111d4 <__assert_fail@plt+0x11c>
   111d4:	movw	r0, #57672	; 0xe148
   111d8:	movt	r0, #2
   111dc:	ldr	r0, [r0]
   111e0:	movw	r1, #51476	; 0xc914
   111e4:	movt	r1, #1
   111e8:	str	r0, [fp, #-8]
   111ec:	mov	r0, r1
   111f0:	bl	10fbc <gettext@plt>
   111f4:	movw	r1, #57716	; 0xe174
   111f8:	movt	r1, #2
   111fc:	ldr	r2, [r1]
   11200:	ldr	r1, [fp, #-8]
   11204:	str	r0, [fp, #-12]
   11208:	mov	r0, r1
   1120c:	ldr	r1, [fp, #-12]
   11210:	bl	10fe0 <fprintf@plt>
   11214:	b	112dc <__assert_fail@plt+0x224>
   11218:	movw	r0, #51515	; 0xc93b
   1121c:	movt	r0, #1
   11220:	bl	10fbc <gettext@plt>
   11224:	movw	r1, #57716	; 0xe174
   11228:	movt	r1, #2
   1122c:	ldr	r1, [r1]
   11230:	bl	10e84 <printf@plt>
   11234:	movw	r1, #51548	; 0xc95c
   11238:	movt	r1, #1
   1123c:	str	r0, [sp, #16]
   11240:	mov	r0, r1
   11244:	bl	10fbc <gettext@plt>
   11248:	movw	r1, #57684	; 0xe154
   1124c:	movt	r1, #2
   11250:	ldr	r1, [r1]
   11254:	bl	10e54 <fputs_unlocked@plt>
   11258:	str	r0, [sp, #12]
   1125c:	bl	112e4 <__assert_fail@plt+0x22c>
   11260:	bl	1130c <__assert_fail@plt+0x254>
   11264:	movw	r0, #51608	; 0xc998
   11268:	movt	r0, #1
   1126c:	bl	10fbc <gettext@plt>
   11270:	movw	r1, #57684	; 0xe154
   11274:	movt	r1, #2
   11278:	ldr	r1, [r1]
   1127c:	bl	10e54 <fputs_unlocked@plt>
   11280:	movw	r1, #51755	; 0xca2b
   11284:	movt	r1, #1
   11288:	str	r0, [sp, #8]
   1128c:	mov	r0, r1
   11290:	bl	10fbc <gettext@plt>
   11294:	movw	r1, #57684	; 0xe154
   11298:	movt	r1, #2
   1129c:	ldr	r1, [r1]
   112a0:	bl	10e54 <fputs_unlocked@plt>
   112a4:	movw	r1, #51800	; 0xca58
   112a8:	movt	r1, #1
   112ac:	str	r0, [sp, #4]
   112b0:	mov	r0, r1
   112b4:	bl	10fbc <gettext@plt>
   112b8:	movw	r1, #57684	; 0xe154
   112bc:	movt	r1, #2
   112c0:	ldr	r1, [r1]
   112c4:	bl	10e54 <fputs_unlocked@plt>
   112c8:	movw	r1, #51854	; 0xca8e
   112cc:	movt	r1, #1
   112d0:	str	r0, [sp]
   112d4:	mov	r0, r1
   112d8:	bl	11334 <__assert_fail@plt+0x27c>
   112dc:	ldr	r0, [fp, #-4]
   112e0:	bl	10fb0 <exit@plt>
   112e4:	push	{fp, lr}
   112e8:	mov	fp, sp
   112ec:	movw	r0, #51939	; 0xcae3
   112f0:	movt	r0, #1
   112f4:	bl	10fbc <gettext@plt>
   112f8:	movw	r1, #57684	; 0xe154
   112fc:	movt	r1, #2
   11300:	ldr	r1, [r1]
   11304:	bl	10e54 <fputs_unlocked@plt>
   11308:	pop	{fp, pc}
   1130c:	push	{fp, lr}
   11310:	mov	fp, sp
   11314:	movw	r0, #51995	; 0xcb1b
   11318:	movt	r0, #1
   1131c:	bl	10fbc <gettext@plt>
   11320:	movw	r1, #57684	; 0xe154
   11324:	movt	r1, #2
   11328:	ldr	r1, [r1]
   1132c:	bl	10e54 <fputs_unlocked@plt>
   11330:	pop	{fp, pc}
   11334:	push	{fp, lr}
   11338:	mov	fp, sp
   1133c:	sub	sp, sp, #88	; 0x58
   11340:	add	r1, sp, #28
   11344:	movw	r2, #52548	; 0xcd44
   11348:	movt	r2, #1
   1134c:	str	r0, [fp, #-4]
   11350:	mov	r0, r1
   11354:	str	r1, [sp, #12]
   11358:	mov	r1, r2
   1135c:	movw	r2, #56	; 0x38
   11360:	bl	10ec0 <memcpy@plt>
   11364:	ldr	r0, [fp, #-4]
   11368:	str	r0, [sp, #24]
   1136c:	ldr	r0, [sp, #12]
   11370:	str	r0, [sp, #20]
   11374:	ldr	r0, [sp, #20]
   11378:	ldr	r0, [r0]
   1137c:	movw	r1, #0
   11380:	cmp	r0, r1
   11384:	movw	r0, #0
   11388:	str	r0, [sp, #8]
   1138c:	beq	113b8 <__assert_fail@plt+0x300>
   11390:	ldr	r0, [fp, #-4]
   11394:	ldr	r1, [sp, #20]
   11398:	ldr	r1, [r1]
   1139c:	bl	10e6c <strcmp@plt>
   113a0:	cmp	r0, #0
   113a4:	movw	r0, #0
   113a8:	moveq	r0, #1
   113ac:	mvn	r1, #0
   113b0:	eor	r0, r0, r1
   113b4:	str	r0, [sp, #8]
   113b8:	ldr	r0, [sp, #8]
   113bc:	tst	r0, #1
   113c0:	beq	113d4 <__assert_fail@plt+0x31c>
   113c4:	ldr	r0, [sp, #20]
   113c8:	add	r0, r0, #8
   113cc:	str	r0, [sp, #20]
   113d0:	b	11374 <__assert_fail@plt+0x2bc>
   113d4:	ldr	r0, [sp, #20]
   113d8:	ldr	r0, [r0, #4]
   113dc:	movw	r1, #0
   113e0:	cmp	r0, r1
   113e4:	beq	113f4 <__assert_fail@plt+0x33c>
   113e8:	ldr	r0, [sp, #20]
   113ec:	ldr	r0, [r0, #4]
   113f0:	str	r0, [sp, #24]
   113f4:	movw	r0, #52165	; 0xcbc5
   113f8:	movt	r0, #1
   113fc:	bl	10fbc <gettext@plt>
   11400:	movw	r1, #51909	; 0xcac5
   11404:	movt	r1, #1
   11408:	movw	r2, #52188	; 0xcbdc
   1140c:	movt	r2, #1
   11410:	bl	10e84 <printf@plt>
   11414:	movw	r1, #5
   11418:	str	r0, [sp, #4]
   1141c:	mov	r0, r1
   11420:	movw	r1, #0
   11424:	bl	11040 <setlocale@plt>
   11428:	str	r0, [sp, #16]
   1142c:	ldr	r0, [sp, #16]
   11430:	movw	r1, #0
   11434:	cmp	r0, r1
   11438:	beq	11474 <__assert_fail@plt+0x3bc>
   1143c:	ldr	r0, [sp, #16]
   11440:	movw	r1, #52228	; 0xcc04
   11444:	movt	r1, #1
   11448:	movw	r2, #3
   1144c:	bl	11094 <strncmp@plt>
   11450:	cmp	r0, #0
   11454:	beq	11474 <__assert_fail@plt+0x3bc>
   11458:	movw	r0, #52232	; 0xcc08
   1145c:	movt	r0, #1
   11460:	bl	10fbc <gettext@plt>
   11464:	movw	r1, #57684	; 0xe154
   11468:	movt	r1, #2
   1146c:	ldr	r1, [r1]
   11470:	bl	10e54 <fputs_unlocked@plt>
   11474:	movw	r0, #52303	; 0xcc4f
   11478:	movt	r0, #1
   1147c:	bl	10fbc <gettext@plt>
   11480:	ldr	r2, [fp, #-4]
   11484:	movw	r1, #52188	; 0xcbdc
   11488:	movt	r1, #1
   1148c:	bl	10e84 <printf@plt>
   11490:	movw	r1, #52330	; 0xcc6a
   11494:	movt	r1, #1
   11498:	str	r0, [sp]
   1149c:	mov	r0, r1
   114a0:	bl	10fbc <gettext@plt>
   114a4:	ldr	r1, [sp, #24]
   114a8:	ldr	r2, [sp, #24]
   114ac:	ldr	r3, [fp, #-4]
   114b0:	cmp	r2, r3
   114b4:	movw	r2, #0
   114b8:	moveq	r2, #1
   114bc:	tst	r2, #1
   114c0:	movw	r2, #52380	; 0xcc9c
   114c4:	movt	r2, #1
   114c8:	movw	r3, #52098	; 0xcb82
   114cc:	movt	r3, #1
   114d0:	movne	r2, r3
   114d4:	bl	10e84 <printf@plt>
   114d8:	mov	sp, fp
   114dc:	pop	{fp, pc}
   114e0:	push	{fp, lr}
   114e4:	mov	fp, sp
   114e8:	sub	sp, sp, #80	; 0x50
   114ec:	movw	r2, #0
   114f0:	str	r2, [fp, #-4]
   114f4:	str	r0, [fp, #-8]
   114f8:	str	r1, [fp, #-12]
   114fc:	movw	r0, #80	; 0x50
   11500:	str	r0, [fp, #-16]
   11504:	ldr	r0, [fp, #-12]
   11508:	ldr	r0, [r0]
   1150c:	bl	124ac <__assert_fail@plt+0x13f4>
   11510:	movw	r0, #6
   11514:	movw	r1, #52380	; 0xcc9c
   11518:	movt	r1, #1
   1151c:	bl	11040 <setlocale@plt>
   11520:	movw	r1, #51913	; 0xcac9
   11524:	movt	r1, #1
   11528:	str	r0, [fp, #-32]	; 0xffffffe0
   1152c:	mov	r0, r1
   11530:	movw	r1, #51859	; 0xca93
   11534:	movt	r1, #1
   11538:	bl	1107c <bindtextdomain@plt>
   1153c:	movw	r1, #51913	; 0xcac9
   11540:	movt	r1, #1
   11544:	str	r0, [fp, #-36]	; 0xffffffdc
   11548:	mov	r0, r1
   1154c:	bl	10f08 <textdomain@plt>
   11550:	movw	r1, #8240	; 0x2030
   11554:	movt	r1, #1
   11558:	str	r0, [sp, #40]	; 0x28
   1155c:	mov	r0, r1
   11560:	bl	1c8f0 <__assert_fail@plt+0xb838>
   11564:	movw	r1, #57696	; 0xe160
   11568:	movt	r1, #2
   1156c:	movw	r2, #0
   11570:	strb	r2, [r1]
   11574:	movw	r1, #57697	; 0xe161
   11578:	movt	r1, #2
   1157c:	strb	r2, [r1]
   11580:	movw	r1, #57698	; 0xe162
   11584:	movt	r1, #2
   11588:	strb	r2, [r1]
   1158c:	ldr	r0, [fp, #-8]
   11590:	ldr	r1, [fp, #-12]
   11594:	movw	r2, #52416	; 0xccc0
   11598:	movt	r2, #1
   1159c:	movw	r3, #52452	; 0xcce4
   115a0:	movt	r3, #1
   115a4:	movw	ip, #0
   115a8:	str	ip, [sp]
   115ac:	bl	10f98 <getopt_long@plt>
   115b0:	str	r0, [fp, #-24]	; 0xffffffe8
   115b4:	cmn	r0, #1
   115b8:	beq	1191c <__assert_fail@plt+0x864>
   115bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115c0:	add	r0, r0, #3
   115c4:	cmp	r0, #122	; 0x7a
   115c8:	str	r0, [sp, #36]	; 0x24
   115cc:	bhi	11910 <__assert_fail@plt+0x858>
   115d0:	add	r0, pc, #8
   115d4:	ldr	r1, [sp, #36]	; 0x24
   115d8:	ldr	r0, [r0, r1, lsl #2]
   115dc:	mov	pc, r0
   115e0:	andeq	r1, r1, r8, asr #17
   115e4:	andeq	r1, r1, r0, asr #17
   115e8:	andeq	r1, r1, r0, lsl r9
   115ec:	andeq	r1, r1, r0, lsl r9
   115f0:	andeq	r1, r1, r0, lsl r9
   115f4:	andeq	r1, r1, r0, lsl r9
   115f8:	andeq	r1, r1, r0, lsl r9
   115fc:	andeq	r1, r1, r0, lsl r9
   11600:	andeq	r1, r1, r0, lsl r9
   11604:	andeq	r1, r1, r0, lsl r9
   11608:	andeq	r1, r1, r0, lsl r9
   1160c:	andeq	r1, r1, r0, lsl r9
   11610:	andeq	r1, r1, r0, lsl r9
   11614:	andeq	r1, r1, r0, lsl r9
   11618:	andeq	r1, r1, r0, lsl r9
   1161c:	andeq	r1, r1, r0, lsl r9
   11620:	andeq	r1, r1, r0, lsl r9
   11624:	andeq	r1, r1, r0, lsl r9
   11628:	andeq	r1, r1, r0, lsl r9
   1162c:	andeq	r1, r1, r0, lsl r9
   11630:	andeq	r1, r1, r0, lsl r9
   11634:	andeq	r1, r1, r0, lsl r9
   11638:	andeq	r1, r1, r0, lsl r9
   1163c:	andeq	r1, r1, r0, lsl r9
   11640:	andeq	r1, r1, r0, lsl r9
   11644:	andeq	r1, r1, r0, lsl r9
   11648:	andeq	r1, r1, r0, lsl r9
   1164c:	andeq	r1, r1, r0, lsl r9
   11650:	andeq	r1, r1, r0, lsl r9
   11654:	andeq	r1, r1, r0, lsl r9
   11658:	andeq	r1, r1, r0, lsl r9
   1165c:	andeq	r1, r1, r0, lsl r9
   11660:	andeq	r1, r1, r0, lsl r9
   11664:	andeq	r1, r1, r0, lsl r9
   11668:	andeq	r1, r1, r0, lsl r9
   1166c:	andeq	r1, r1, r0, lsl r9
   11670:	andeq	r1, r1, r0, lsl r9
   11674:	andeq	r1, r1, r0, lsl r9
   11678:	andeq	r1, r1, r0, lsl r9
   1167c:	andeq	r1, r1, r0, lsl r9
   11680:	andeq	r1, r1, r0, lsl r9
   11684:	andeq	r1, r1, r0, lsl r9
   11688:	andeq	r1, r1, r0, lsl r9
   1168c:	andeq	r1, r1, r0, lsl r9
   11690:	andeq	r1, r1, r0, lsl r9
   11694:	andeq	r1, r1, r0, lsl r9
   11698:	andeq	r1, r1, r0, lsl r9
   1169c:	andeq	r1, r1, r0, lsl r9
   116a0:	andeq	r1, r1, r0, lsl r9
   116a4:	andeq	r1, r1, r0, lsl r9
   116a8:	andeq	r1, r1, r0, lsl r9
   116ac:	strdeq	r1, [r1], -r4
   116b0:	strdeq	r1, [r1], -r4
   116b4:	strdeq	r1, [r1], -r4
   116b8:	strdeq	r1, [r1], -r4
   116bc:	strdeq	r1, [r1], -r4
   116c0:	strdeq	r1, [r1], -r4
   116c4:	strdeq	r1, [r1], -r4
   116c8:	strdeq	r1, [r1], -r4
   116cc:	strdeq	r1, [r1], -r4
   116d0:	strdeq	r1, [r1], -r4
   116d4:	andeq	r1, r1, r0, lsl r9
   116d8:	andeq	r1, r1, r0, lsl r9
   116dc:	andeq	r1, r1, r0, lsl r9
   116e0:	andeq	r1, r1, r0, lsl r9
   116e4:	andeq	r1, r1, r0, lsl r9
   116e8:	andeq	r1, r1, r0, lsl r9
   116ec:	andeq	r1, r1, r0, lsl r9
   116f0:	andeq	r1, r1, r0, lsl r9
   116f4:	andeq	r1, r1, r0, lsl r9
   116f8:	andeq	r1, r1, r0, lsl r9
   116fc:	andeq	r1, r1, r0, lsl r9
   11700:	andeq	r1, r1, r0, lsl r9
   11704:	andeq	r1, r1, r0, lsl r9
   11708:	andeq	r1, r1, r0, lsl r9
   1170c:	andeq	r1, r1, r0, lsl r9
   11710:	andeq	r1, r1, r0, lsl r9
   11714:	andeq	r1, r1, r0, lsl r9
   11718:	andeq	r1, r1, r0, lsl r9
   1171c:	andeq	r1, r1, r0, lsl r9
   11720:	andeq	r1, r1, r0, lsl r9
   11724:	andeq	r1, r1, r0, lsl r9
   11728:	andeq	r1, r1, r0, lsl r9
   1172c:	andeq	r1, r1, r0, lsl r9
   11730:	andeq	r1, r1, r0, lsl r9
   11734:	andeq	r1, r1, r0, lsl r9
   11738:	andeq	r1, r1, r0, lsl r9
   1173c:	andeq	r1, r1, r0, lsl r9
   11740:	andeq	r1, r1, r0, lsl r9
   11744:	andeq	r1, r1, r0, lsl r9
   11748:	andeq	r1, r1, r0, lsl r9
   1174c:	andeq	r1, r1, r0, lsl r9
   11750:	andeq	r1, r1, r0, lsl r9
   11754:	andeq	r1, r1, r0, lsl r9
   11758:	andeq	r1, r1, r0, lsl r9
   1175c:	andeq	r1, r1, r0, lsl r9
   11760:	andeq	r1, r1, r0, lsl r9
   11764:	andeq	r1, r1, r0, lsl r9
   11768:	andeq	r1, r1, r0, lsl r9
   1176c:	andeq	r1, r1, r0, lsl r9
   11770:	andeq	r1, r1, r0, lsl r9
   11774:	andeq	r1, r1, ip, asr #15
   11778:	andeq	r1, r1, r0, lsl r9
   1177c:	andeq	r1, r1, r0, lsl r9
   11780:	andeq	r1, r1, r0, lsl r9
   11784:	andeq	r1, r1, r0, lsl r9
   11788:	andeq	r1, r1, r0, lsl r9
   1178c:	andeq	r1, r1, r0, lsl r9
   11790:	andeq	r1, r1, r0, lsl r9
   11794:	andeq	r1, r1, r0, lsl r9
   11798:	andeq	r1, r1, r0, lsl r9
   1179c:	andeq	r1, r1, r0, lsl r9
   117a0:	andeq	r1, r1, r0, lsl r9
   117a4:	andeq	r1, r1, r0, lsl r9
   117a8:	andeq	r1, r1, r0, lsl r9
   117ac:	andeq	r1, r1, r0, lsl r9
   117b0:	andeq	r1, r1, r0, lsl r9
   117b4:	andeq	r1, r1, r0, lsl r9
   117b8:	andeq	r1, r1, r0, ror #15
   117bc:	andeq	r1, r1, r0, lsl r9
   117c0:	andeq	r1, r1, r0, lsl r9
   117c4:	andeq	r1, r1, r0, lsl r9
   117c8:	andeq	r1, r1, ip, asr #16
   117cc:	movw	r0, #57697	; 0xe161
   117d0:	movt	r0, #2
   117d4:	movw	r1, #1
   117d8:	strb	r1, [r0]
   117dc:	b	11918 <__assert_fail@plt+0x860>
   117e0:	movw	r0, #57698	; 0xe162
   117e4:	movt	r0, #2
   117e8:	movw	r1, #1
   117ec:	strb	r1, [r0]
   117f0:	b	11918 <__assert_fail@plt+0x860>
   117f4:	movw	r0, #57688	; 0xe158
   117f8:	movt	r0, #2
   117fc:	ldr	r0, [r0]
   11800:	movw	r1, #0
   11804:	cmp	r0, r1
   11808:	beq	11828 <__assert_fail@plt+0x770>
   1180c:	movw	r0, #57688	; 0xe158
   11810:	movt	r0, #2
   11814:	ldr	r1, [r0]
   11818:	mvn	r2, #0
   1181c:	add	r1, r1, r2
   11820:	str	r1, [r0]
   11824:	b	11848 <__assert_fail@plt+0x790>
   11828:	sub	r0, fp, #27
   1182c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11830:	strb	r1, [fp, #-27]	; 0xffffffe5
   11834:	movw	r1, #0
   11838:	strb	r1, [fp, #-26]	; 0xffffffe6
   1183c:	movw	r1, #57688	; 0xe158
   11840:	movt	r1, #2
   11844:	str	r0, [r1]
   11848:	b	1184c <__assert_fail@plt+0x794>
   1184c:	movw	r0, #57688	; 0xe158
   11850:	movt	r0, #2
   11854:	ldr	r0, [r0]
   11858:	movw	r1, #51883	; 0xcaab
   1185c:	movt	r1, #1
   11860:	str	r0, [sp, #32]
   11864:	mov	r0, r1
   11868:	bl	10fbc <gettext@plt>
   1186c:	mov	r1, sp
   11870:	mov	r2, #0
   11874:	str	r2, [r1, #16]
   11878:	str	r0, [r1, #12]
   1187c:	movw	r0, #52380	; 0xcc9c
   11880:	movt	r0, #1
   11884:	str	r0, [r1, #8]
   11888:	str	r2, [r1, #4]
   1188c:	mvn	r0, #9
   11890:	str	r0, [r1]
   11894:	mov	r0, #1
   11898:	ldr	r1, [sp, #32]
   1189c:	str	r0, [sp, #28]
   118a0:	mov	r0, r1
   118a4:	ldr	r3, [sp, #28]
   118a8:	str	r2, [sp, #24]
   118ac:	mov	r2, r3
   118b0:	ldr	r3, [sp, #24]
   118b4:	bl	18484 <__assert_fail@plt+0x73cc>
   118b8:	str	r0, [fp, #-16]
   118bc:	b	11918 <__assert_fail@plt+0x860>
   118c0:	movw	r0, #0
   118c4:	bl	111b4 <__assert_fail@plt+0xfc>
   118c8:	movw	r0, #57684	; 0xe154
   118cc:	movt	r0, #2
   118d0:	ldr	r0, [r0]
   118d4:	movw	r1, #57580	; 0xe0ec
   118d8:	movt	r1, #2
   118dc:	ldr	r3, [r1]
   118e0:	movw	r1, #51854	; 0xca8e
   118e4:	movt	r1, #1
   118e8:	movw	r2, #51909	; 0xcac5
   118ec:	movt	r2, #1
   118f0:	movw	ip, #51923	; 0xcad3
   118f4:	movt	ip, #1
   118f8:	str	ip, [sp]
   118fc:	movw	ip, #0
   11900:	str	ip, [sp, #4]
   11904:	bl	15384 <__assert_fail@plt+0x42cc>
   11908:	movw	r0, #0
   1190c:	bl	10fb0 <exit@plt>
   11910:	movw	r0, #1
   11914:	bl	111b4 <__assert_fail@plt+0xfc>
   11918:	b	1158c <__assert_fail@plt+0x4d4>
   1191c:	ldr	r0, [fp, #-8]
   11920:	movw	r1, #57664	; 0xe140
   11924:	movt	r1, #2
   11928:	ldr	r1, [r1]
   1192c:	cmp	r0, r1
   11930:	bne	11950 <__assert_fail@plt+0x898>
   11934:	ldr	r1, [fp, #-16]
   11938:	movw	r0, #52704	; 0xcde0
   1193c:	movt	r0, #1
   11940:	bl	11a24 <__assert_fail@plt+0x96c>
   11944:	and	r0, r0, #1
   11948:	strb	r0, [fp, #-25]	; 0xffffffe7
   1194c:	b	119c8 <__assert_fail@plt+0x910>
   11950:	movw	r0, #1
   11954:	strb	r0, [fp, #-25]	; 0xffffffe7
   11958:	movw	r0, #57664	; 0xe140
   1195c:	movt	r0, #2
   11960:	ldr	r0, [r0]
   11964:	str	r0, [fp, #-20]	; 0xffffffec
   11968:	ldr	r0, [fp, #-20]	; 0xffffffec
   1196c:	ldr	r1, [fp, #-8]
   11970:	cmp	r0, r1
   11974:	bge	119c4 <__assert_fail@plt+0x90c>
   11978:	ldr	r0, [fp, #-12]
   1197c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11980:	add	r0, r0, r1, lsl #2
   11984:	ldr	r0, [r0]
   11988:	ldr	r1, [fp, #-16]
   1198c:	bl	11a24 <__assert_fail@plt+0x96c>
   11990:	and	r0, r0, #1
   11994:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   11998:	and	r1, r1, #1
   1199c:	and	r0, r1, r0
   119a0:	cmp	r0, #0
   119a4:	movw	r0, #0
   119a8:	movne	r0, #1
   119ac:	and	r0, r0, #1
   119b0:	strb	r0, [fp, #-25]	; 0xffffffe7
   119b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   119b8:	add	r0, r0, #1
   119bc:	str	r0, [fp, #-20]	; 0xffffffec
   119c0:	b	11968 <__assert_fail@plt+0x8b0>
   119c4:	b	119c8 <__assert_fail@plt+0x910>
   119c8:	movw	r0, #57696	; 0xe160
   119cc:	movt	r0, #2
   119d0:	ldrb	r0, [r0]
   119d4:	tst	r0, #1
   119d8:	beq	11a0c <__assert_fail@plt+0x954>
   119dc:	movw	r0, #57680	; 0xe150
   119e0:	movt	r0, #2
   119e4:	ldr	r0, [r0]
   119e8:	bl	1220c <__assert_fail@plt+0x1154>
   119ec:	cmn	r0, #1
   119f0:	bne	11a0c <__assert_fail@plt+0x954>
   119f4:	bl	10fec <__errno_location@plt>
   119f8:	ldr	r1, [r0]
   119fc:	movw	r0, #1
   11a00:	movw	r2, #52704	; 0xcde0
   11a04:	movt	r2, #1
   11a08:	bl	10f5c <error@plt>
   11a0c:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11a10:	tst	r0, #1
   11a14:	movw	r0, #0
   11a18:	moveq	r0, #1
   11a1c:	mov	sp, fp
   11a20:	pop	{fp, pc}
   11a24:	push	{fp, lr}
   11a28:	mov	fp, sp
   11a2c:	sub	sp, sp, #72	; 0x48
   11a30:	str	r0, [fp, #-8]
   11a34:	str	r1, [fp, #-12]
   11a38:	movw	r0, #0
   11a3c:	str	r0, [fp, #-24]	; 0xffffffe8
   11a40:	str	r0, [fp, #-28]	; 0xffffffe4
   11a44:	ldr	r0, [fp, #-8]
   11a48:	movw	r1, #52704	; 0xcde0
   11a4c:	movt	r1, #1
   11a50:	bl	10e6c <strcmp@plt>
   11a54:	cmp	r0, #0
   11a58:	bne	11a80 <__assert_fail@plt+0x9c8>
   11a5c:	movw	r0, #57680	; 0xe150
   11a60:	movt	r0, #2
   11a64:	ldr	r0, [r0]
   11a68:	str	r0, [fp, #-16]
   11a6c:	movw	r0, #57696	; 0xe160
   11a70:	movt	r0, #2
   11a74:	movw	r1, #1
   11a78:	strb	r1, [r0]
   11a7c:	b	11a94 <__assert_fail@plt+0x9dc>
   11a80:	ldr	r0, [fp, #-8]
   11a84:	movw	r1, #52629	; 0xcd95
   11a88:	movt	r1, #1
   11a8c:	bl	11070 <fopen64@plt>
   11a90:	str	r0, [fp, #-16]
   11a94:	ldr	r0, [fp, #-16]
   11a98:	movw	r1, #0
   11a9c:	cmp	r0, r1
   11aa0:	bne	11af4 <__assert_fail@plt+0xa3c>
   11aa4:	bl	10fec <__errno_location@plt>
   11aa8:	ldr	r1, [r0]
   11aac:	ldr	r2, [fp, #-8]
   11ab0:	movw	r0, #0
   11ab4:	movw	r3, #3
   11ab8:	str	r1, [sp, #24]
   11abc:	mov	r1, r3
   11ac0:	bl	148c4 <__assert_fail@plt+0x380c>
   11ac4:	movw	r1, #0
   11ac8:	str	r0, [sp, #20]
   11acc:	mov	r0, r1
   11ad0:	ldr	r1, [sp, #24]
   11ad4:	movw	r2, #52635	; 0xcd9b
   11ad8:	movt	r2, #1
   11adc:	ldr	r3, [sp, #20]
   11ae0:	bl	10f5c <error@plt>
   11ae4:	movw	r0, #0
   11ae8:	and	r0, r0, #1
   11aec:	strb	r0, [fp, #-1]
   11af0:	b	11f04 <__assert_fail@plt+0xe4c>
   11af4:	ldr	r0, [fp, #-16]
   11af8:	movw	r1, #2
   11afc:	bl	121b4 <__assert_fail@plt+0x10fc>
   11b00:	ldr	r0, [fp, #-16]
   11b04:	bl	10ef0 <getc_unlocked@plt>
   11b08:	str	r0, [fp, #-20]	; 0xffffffec
   11b0c:	cmn	r0, #1
   11b10:	beq	11dfc <__assert_fail@plt+0xd44>
   11b14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11b18:	add	r0, r0, #1
   11b1c:	movw	r1, #57704	; 0xe168
   11b20:	movt	r1, #2
   11b24:	ldr	r1, [r1]
   11b28:	cmp	r0, r1
   11b2c:	bcc	11b54 <__assert_fail@plt+0xa9c>
   11b30:	movw	r0, #57700	; 0xe164
   11b34:	movt	r0, #2
   11b38:	ldr	r0, [r0]
   11b3c:	movw	r1, #57704	; 0xe168
   11b40:	movt	r1, #2
   11b44:	bl	156bc <__assert_fail@plt+0x4604>
   11b48:	movw	r1, #57700	; 0xe164
   11b4c:	movt	r1, #2
   11b50:	str	r0, [r1]
   11b54:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b58:	cmp	r0, #10
   11b5c:	bne	11bb0 <__assert_fail@plt+0xaf8>
   11b60:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b64:	movw	r1, #57700	; 0xe164
   11b68:	movt	r1, #2
   11b6c:	ldr	r2, [r1]
   11b70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11b74:	add	ip, r3, #1
   11b78:	str	ip, [fp, #-28]	; 0xffffffe4
   11b7c:	add	r2, r2, r3
   11b80:	strb	r0, [r2]
   11b84:	ldr	r0, [r1]
   11b88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11b8c:	movw	r1, #57684	; 0xe154
   11b90:	movt	r1, #2
   11b94:	ldr	r3, [r1]
   11b98:	movw	r1, #1
   11b9c:	bl	10ed8 <fwrite_unlocked@plt>
   11ba0:	movw	r1, #0
   11ba4:	str	r1, [fp, #-28]	; 0xffffffe4
   11ba8:	str	r1, [fp, #-24]	; 0xffffffe8
   11bac:	b	11b00 <__assert_fail@plt+0xa48>
   11bb0:	b	11bb4 <__assert_fail@plt+0xafc>
   11bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11bb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   11bbc:	and	r1, r1, #255	; 0xff
   11bc0:	bl	11f14 <__assert_fail@plt+0xe5c>
   11bc4:	str	r0, [fp, #-24]	; 0xffffffe8
   11bc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11bcc:	ldr	r1, [fp, #-12]
   11bd0:	cmp	r0, r1
   11bd4:	bls	11dd4 <__assert_fail@plt+0xd1c>
   11bd8:	movw	r0, #57698	; 0xe162
   11bdc:	movt	r0, #2
   11be0:	ldrb	r0, [r0]
   11be4:	tst	r0, #1
   11be8:	beq	11d50 <__assert_fail@plt+0xc98>
   11bec:	movw	r0, #0
   11bf0:	strb	r0, [fp, #-33]	; 0xffffffdf
   11bf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11bf8:	str	r0, [sp, #32]
   11bfc:	ldr	r0, [sp, #32]
   11c00:	cmp	r0, #0
   11c04:	beq	11c68 <__assert_fail@plt+0xbb0>
   11c08:	ldr	r0, [sp, #32]
   11c0c:	sub	r0, r0, #1
   11c10:	str	r0, [sp, #32]
   11c14:	bl	10fa4 <__ctype_b_loc@plt>
   11c18:	ldr	r0, [r0]
   11c1c:	movw	r1, #57700	; 0xe164
   11c20:	movt	r1, #2
   11c24:	ldr	r1, [r1]
   11c28:	ldr	r2, [sp, #32]
   11c2c:	ldrb	r1, [r1, r2]
   11c30:	str	r0, [sp, #16]
   11c34:	mov	r0, r1
   11c38:	bl	11fd4 <__assert_fail@plt+0xf1c>
   11c3c:	mov	r1, r0
   11c40:	ldr	r2, [sp, #16]
   11c44:	add	r0, r2, r0, lsl #1
   11c48:	ldrh	r0, [r0]
   11c4c:	and	r0, r0, #1
   11c50:	cmp	r0, #0
   11c54:	beq	11c64 <__assert_fail@plt+0xbac>
   11c58:	movw	r0, #1
   11c5c:	strb	r0, [fp, #-33]	; 0xffffffdf
   11c60:	b	11c68 <__assert_fail@plt+0xbb0>
   11c64:	b	11bfc <__assert_fail@plt+0xb44>
   11c68:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   11c6c:	tst	r0, #1
   11c70:	beq	11d4c <__assert_fail@plt+0xc94>
   11c74:	ldr	r0, [sp, #32]
   11c78:	add	r0, r0, #1
   11c7c:	str	r0, [sp, #32]
   11c80:	movw	r0, #57700	; 0xe164
   11c84:	movt	r0, #2
   11c88:	ldr	r0, [r0]
   11c8c:	ldr	r2, [sp, #32]
   11c90:	movw	r1, #57684	; 0xe154
   11c94:	movt	r1, #2
   11c98:	ldr	r3, [r1]
   11c9c:	movw	r1, #1
   11ca0:	bl	10ed8 <fwrite_unlocked@plt>
   11ca4:	movw	r1, #10
   11ca8:	str	r0, [sp, #12]
   11cac:	mov	r0, r1
   11cb0:	bl	110ac <putchar_unlocked@plt>
   11cb4:	movw	r1, #57700	; 0xe164
   11cb8:	movt	r1, #2
   11cbc:	ldr	r2, [r1]
   11cc0:	ldr	r1, [r1]
   11cc4:	ldr	r3, [sp, #32]
   11cc8:	add	r1, r1, r3
   11ccc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11cd0:	ldr	ip, [sp, #32]
   11cd4:	sub	r3, r3, ip
   11cd8:	str	r0, [sp, #8]
   11cdc:	mov	r0, r2
   11ce0:	mov	r2, r3
   11ce4:	bl	10e9c <memmove@plt>
   11ce8:	ldr	r0, [sp, #32]
   11cec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11cf0:	sub	r0, r1, r0
   11cf4:	str	r0, [fp, #-28]	; 0xffffffe4
   11cf8:	movw	r0, #0
   11cfc:	str	r0, [sp, #28]
   11d00:	str	r0, [fp, #-24]	; 0xffffffe8
   11d04:	ldr	r0, [sp, #28]
   11d08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11d0c:	cmp	r0, r1
   11d10:	bcs	11d48 <__assert_fail@plt+0xc90>
   11d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d18:	movw	r1, #57700	; 0xe164
   11d1c:	movt	r1, #2
   11d20:	ldr	r1, [r1]
   11d24:	ldr	r2, [sp, #28]
   11d28:	add	r1, r1, r2
   11d2c:	ldrb	r1, [r1]
   11d30:	bl	11f14 <__assert_fail@plt+0xe5c>
   11d34:	str	r0, [fp, #-24]	; 0xffffffe8
   11d38:	ldr	r0, [sp, #28]
   11d3c:	add	r0, r0, #1
   11d40:	str	r0, [sp, #28]
   11d44:	b	11d04 <__assert_fail@plt+0xc4c>
   11d48:	b	11bb4 <__assert_fail@plt+0xafc>
   11d4c:	b	11d50 <__assert_fail@plt+0xc98>
   11d50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d54:	cmp	r0, #0
   11d58:	bne	11d84 <__assert_fail@plt+0xccc>
   11d5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d60:	movw	r1, #57700	; 0xe164
   11d64:	movt	r1, #2
   11d68:	ldr	r1, [r1]
   11d6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11d70:	add	r3, r2, #1
   11d74:	str	r3, [fp, #-28]	; 0xffffffe4
   11d78:	add	r1, r1, r2
   11d7c:	strb	r0, [r1]
   11d80:	b	11b00 <__assert_fail@plt+0xa48>
   11d84:	movw	r0, #57700	; 0xe164
   11d88:	movt	r0, #2
   11d8c:	ldr	r1, [r0]
   11d90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11d94:	add	r3, r2, #1
   11d98:	str	r3, [fp, #-28]	; 0xffffffe4
   11d9c:	add	r1, r1, r2
   11da0:	movw	r2, #10
   11da4:	strb	r2, [r1]
   11da8:	ldr	r0, [r0]
   11dac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11db0:	movw	r1, #57684	; 0xe154
   11db4:	movt	r1, #2
   11db8:	ldr	r3, [r1]
   11dbc:	movw	r1, #1
   11dc0:	bl	10ed8 <fwrite_unlocked@plt>
   11dc4:	movw	r1, #0
   11dc8:	str	r1, [fp, #-28]	; 0xffffffe4
   11dcc:	str	r1, [fp, #-24]	; 0xffffffe8
   11dd0:	b	11bb4 <__assert_fail@plt+0xafc>
   11dd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   11dd8:	movw	r1, #57700	; 0xe164
   11ddc:	movt	r1, #2
   11de0:	ldr	r1, [r1]
   11de4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11de8:	add	r3, r2, #1
   11dec:	str	r3, [fp, #-28]	; 0xffffffe4
   11df0:	add	r1, r1, r2
   11df4:	strb	r0, [r1]
   11df8:	b	11b00 <__assert_fail@plt+0xa48>
   11dfc:	bl	10fec <__errno_location@plt>
   11e00:	ldr	r0, [r0]
   11e04:	str	r0, [fp, #-32]	; 0xffffffe0
   11e08:	ldr	r0, [fp, #-16]
   11e0c:	bl	10f44 <ferror_unlocked@plt>
   11e10:	cmp	r0, #0
   11e14:	bne	11e20 <__assert_fail@plt+0xd68>
   11e18:	movw	r0, #0
   11e1c:	str	r0, [fp, #-32]	; 0xffffffe0
   11e20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11e24:	cmp	r0, #0
   11e28:	beq	11e50 <__assert_fail@plt+0xd98>
   11e2c:	movw	r0, #57700	; 0xe164
   11e30:	movt	r0, #2
   11e34:	ldr	r0, [r0]
   11e38:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e3c:	movw	r1, #57684	; 0xe154
   11e40:	movt	r1, #2
   11e44:	ldr	r3, [r1]
   11e48:	movw	r1, #1
   11e4c:	bl	10ed8 <fwrite_unlocked@plt>
   11e50:	ldr	r0, [fp, #-8]
   11e54:	movw	r1, #52704	; 0xcde0
   11e58:	movt	r1, #1
   11e5c:	bl	10e6c <strcmp@plt>
   11e60:	cmp	r0, #0
   11e64:	bne	11e74 <__assert_fail@plt+0xdbc>
   11e68:	ldr	r0, [fp, #-16]
   11e6c:	bl	11064 <clearerr_unlocked@plt>
   11e70:	b	11ea0 <__assert_fail@plt+0xde8>
   11e74:	ldr	r0, [fp, #-16]
   11e78:	bl	1220c <__assert_fail@plt+0x1154>
   11e7c:	cmp	r0, #0
   11e80:	beq	11e9c <__assert_fail@plt+0xde4>
   11e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e88:	cmp	r0, #0
   11e8c:	bne	11e9c <__assert_fail@plt+0xde4>
   11e90:	bl	10fec <__errno_location@plt>
   11e94:	ldr	r0, [r0]
   11e98:	str	r0, [fp, #-32]	; 0xffffffe0
   11e9c:	b	11ea0 <__assert_fail@plt+0xde8>
   11ea0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ea4:	cmp	r0, #0
   11ea8:	beq	11ef8 <__assert_fail@plt+0xe40>
   11eac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11eb0:	ldr	r2, [fp, #-8]
   11eb4:	movw	r0, #0
   11eb8:	movw	r3, #3
   11ebc:	str	r1, [sp, #4]
   11ec0:	mov	r1, r3
   11ec4:	bl	148c4 <__assert_fail@plt+0x380c>
   11ec8:	movw	r1, #0
   11ecc:	str	r0, [sp]
   11ed0:	mov	r0, r1
   11ed4:	ldr	r1, [sp, #4]
   11ed8:	movw	r2, #52635	; 0xcd9b
   11edc:	movt	r2, #1
   11ee0:	ldr	r3, [sp]
   11ee4:	bl	10f5c <error@plt>
   11ee8:	movw	r0, #0
   11eec:	and	r0, r0, #1
   11ef0:	strb	r0, [fp, #-1]
   11ef4:	b	11f04 <__assert_fail@plt+0xe4c>
   11ef8:	movw	r0, #1
   11efc:	and	r0, r0, #1
   11f00:	strb	r0, [fp, #-1]
   11f04:	ldrb	r0, [fp, #-1]
   11f08:	and	r0, r0, #1
   11f0c:	mov	sp, fp
   11f10:	pop	{fp, pc}
   11f14:	sub	sp, sp, #8
   11f18:	str	r0, [sp, #4]
   11f1c:	strb	r1, [sp, #3]
   11f20:	movw	r0, #57697	; 0xe161
   11f24:	movt	r0, #2
   11f28:	ldrb	r0, [r0]
   11f2c:	tst	r0, #1
   11f30:	bne	11fbc <__assert_fail@plt+0xf04>
   11f34:	ldrb	r0, [sp, #3]
   11f38:	cmp	r0, #8
   11f3c:	bne	11f60 <__assert_fail@plt+0xea8>
   11f40:	ldr	r0, [sp, #4]
   11f44:	cmp	r0, #0
   11f48:	bls	11f5c <__assert_fail@plt+0xea4>
   11f4c:	ldr	r0, [sp, #4]
   11f50:	mvn	r1, #0
   11f54:	add	r0, r0, r1
   11f58:	str	r0, [sp, #4]
   11f5c:	b	11fb8 <__assert_fail@plt+0xf00>
   11f60:	ldrb	r0, [sp, #3]
   11f64:	cmp	r0, #13
   11f68:	bne	11f78 <__assert_fail@plt+0xec0>
   11f6c:	movw	r0, #0
   11f70:	str	r0, [sp, #4]
   11f74:	b	11fb4 <__assert_fail@plt+0xefc>
   11f78:	ldrb	r0, [sp, #3]
   11f7c:	cmp	r0, #9
   11f80:	bne	11fa4 <__assert_fail@plt+0xeec>
   11f84:	ldr	r0, [sp, #4]
   11f88:	and	r0, r0, #7
   11f8c:	movw	r1, #8
   11f90:	sub	r0, r1, r0
   11f94:	ldr	r1, [sp, #4]
   11f98:	add	r0, r1, r0
   11f9c:	str	r0, [sp, #4]
   11fa0:	b	11fb0 <__assert_fail@plt+0xef8>
   11fa4:	ldr	r0, [sp, #4]
   11fa8:	add	r0, r0, #1
   11fac:	str	r0, [sp, #4]
   11fb0:	b	11fb4 <__assert_fail@plt+0xefc>
   11fb4:	b	11fb8 <__assert_fail@plt+0xf00>
   11fb8:	b	11fc8 <__assert_fail@plt+0xf10>
   11fbc:	ldr	r0, [sp, #4]
   11fc0:	add	r0, r0, #1
   11fc4:	str	r0, [sp, #4]
   11fc8:	ldr	r0, [sp, #4]
   11fcc:	add	sp, sp, #8
   11fd0:	bx	lr
   11fd4:	sub	sp, sp, #4
   11fd8:	strb	r0, [sp, #3]
   11fdc:	ldrb	r0, [sp, #3]
   11fe0:	add	sp, sp, #4
   11fe4:	bx	lr
   11fe8:	sub	sp, sp, #4
   11fec:	str	r0, [sp]
   11ff0:	ldr	r0, [sp]
   11ff4:	movw	r1, #57708	; 0xe16c
   11ff8:	movt	r1, #2
   11ffc:	str	r0, [r1]
   12000:	add	sp, sp, #4
   12004:	bx	lr
   12008:	sub	sp, sp, #4
   1200c:	and	r0, r0, #1
   12010:	strb	r0, [sp, #3]
   12014:	ldrb	r0, [sp, #3]
   12018:	and	r0, r0, #1
   1201c:	movw	r1, #57712	; 0xe170
   12020:	movt	r1, #2
   12024:	strb	r0, [r1]
   12028:	add	sp, sp, #4
   1202c:	bx	lr
   12030:	push	{fp, lr}
   12034:	mov	fp, sp
   12038:	sub	sp, sp, #24
   1203c:	movw	r0, #57684	; 0xe154
   12040:	movt	r0, #2
   12044:	ldr	r0, [r0]
   12048:	bl	1a6dc <__assert_fail@plt+0x9624>
   1204c:	cmp	r0, #0
   12050:	beq	12120 <__assert_fail@plt+0x1068>
   12054:	movw	r0, #57712	; 0xe170
   12058:	movt	r0, #2
   1205c:	ldrb	r0, [r0]
   12060:	tst	r0, #1
   12064:	beq	12078 <__assert_fail@plt+0xfc0>
   12068:	bl	10fec <__errno_location@plt>
   1206c:	ldr	r0, [r0]
   12070:	cmp	r0, #32
   12074:	beq	12120 <__assert_fail@plt+0x1068>
   12078:	movw	r0, #52619	; 0xcd8b
   1207c:	movt	r0, #1
   12080:	bl	10fbc <gettext@plt>
   12084:	str	r0, [fp, #-4]
   12088:	movw	r0, #57708	; 0xe16c
   1208c:	movt	r0, #2
   12090:	ldr	r0, [r0]
   12094:	movw	r1, #0
   12098:	cmp	r0, r1
   1209c:	beq	120f4 <__assert_fail@plt+0x103c>
   120a0:	bl	10fec <__errno_location@plt>
   120a4:	ldr	r1, [r0]
   120a8:	movw	r0, #57708	; 0xe16c
   120ac:	movt	r0, #2
   120b0:	ldr	r0, [r0]
   120b4:	str	r1, [fp, #-8]
   120b8:	bl	1486c <__assert_fail@plt+0x37b4>
   120bc:	ldr	r1, [fp, #-4]
   120c0:	movw	r2, #0
   120c4:	str	r0, [sp, #12]
   120c8:	mov	r0, r2
   120cc:	ldr	r2, [fp, #-8]
   120d0:	str	r1, [sp, #8]
   120d4:	mov	r1, r2
   120d8:	movw	r2, #52631	; 0xcd97
   120dc:	movt	r2, #1
   120e0:	ldr	r3, [sp, #12]
   120e4:	ldr	ip, [sp, #8]
   120e8:	str	ip, [sp]
   120ec:	bl	10f5c <error@plt>
   120f0:	b	12110 <__assert_fail@plt+0x1058>
   120f4:	bl	10fec <__errno_location@plt>
   120f8:	ldr	r1, [r0]
   120fc:	ldr	r3, [fp, #-4]
   12100:	movw	r0, #0
   12104:	movw	r2, #52635	; 0xcd9b
   12108:	movt	r2, #1
   1210c:	bl	10f5c <error@plt>
   12110:	movw	r0, #57584	; 0xe0f0
   12114:	movt	r0, #2
   12118:	ldr	r0, [r0]
   1211c:	bl	10eb4 <_exit@plt>
   12120:	movw	r0, #57672	; 0xe148
   12124:	movt	r0, #2
   12128:	ldr	r0, [r0]
   1212c:	bl	1a6dc <__assert_fail@plt+0x9624>
   12130:	cmp	r0, #0
   12134:	beq	12148 <__assert_fail@plt+0x1090>
   12138:	movw	r0, #57584	; 0xe0f0
   1213c:	movt	r0, #2
   12140:	ldr	r0, [r0]
   12144:	bl	10eb4 <_exit@plt>
   12148:	mov	sp, fp
   1214c:	pop	{fp, pc}
   12150:	push	{r4, r5, fp, lr}
   12154:	add	fp, sp, #8
   12158:	sub	sp, sp, #40	; 0x28
   1215c:	ldr	r1, [fp, #12]
   12160:	ldr	ip, [fp, #8]
   12164:	ldr	lr, [fp, #16]
   12168:	str	r0, [fp, #-12]
   1216c:	str	r3, [sp, #28]
   12170:	str	r2, [sp, #24]
   12174:	str	r1, [sp, #20]
   12178:	str	ip, [sp, #16]
   1217c:	ldr	r0, [fp, #-12]
   12180:	ldr	r2, [sp, #24]
   12184:	ldr	r3, [sp, #28]
   12188:	ldr	r1, [sp, #16]
   1218c:	ldr	ip, [sp, #20]
   12190:	ldr	r4, [fp, #16]
   12194:	mov	r5, sp
   12198:	str	r4, [r5, #8]
   1219c:	str	ip, [r5, #4]
   121a0:	str	r1, [r5]
   121a4:	str	lr, [sp, #12]
   121a8:	bl	10e78 <posix_fadvise64@plt>
   121ac:	sub	sp, fp, #8
   121b0:	pop	{r4, r5, fp, pc}
   121b4:	push	{fp, lr}
   121b8:	mov	fp, sp
   121bc:	sub	sp, sp, #24
   121c0:	str	r0, [fp, #-4]
   121c4:	str	r1, [fp, #-8]
   121c8:	ldr	r0, [fp, #-4]
   121cc:	movw	r1, #0
   121d0:	cmp	r0, r1
   121d4:	beq	12204 <__assert_fail@plt+0x114c>
   121d8:	ldr	r0, [fp, #-4]
   121dc:	bl	11010 <fileno@plt>
   121e0:	ldr	r1, [fp, #-8]
   121e4:	mov	r2, sp
   121e8:	str	r1, [r2, #8]
   121ec:	mov	r1, #0
   121f0:	str	r1, [r2, #4]
   121f4:	str	r1, [r2]
   121f8:	mov	r2, r1
   121fc:	mov	r3, r1
   12200:	bl	12150 <__assert_fail@plt+0x1098>
   12204:	mov	sp, fp
   12208:	pop	{fp, pc}
   1220c:	push	{fp, lr}
   12210:	mov	fp, sp
   12214:	sub	sp, sp, #32
   12218:	str	r0, [fp, #-8]
   1221c:	movw	r0, #0
   12220:	str	r0, [fp, #-12]
   12224:	str	r0, [sp, #12]
   12228:	ldr	r0, [fp, #-8]
   1222c:	bl	11010 <fileno@plt>
   12230:	str	r0, [sp, #16]
   12234:	ldr	r0, [sp, #16]
   12238:	cmp	r0, #0
   1223c:	bge	12250 <__assert_fail@plt+0x1198>
   12240:	ldr	r0, [fp, #-8]
   12244:	bl	11028 <fclose@plt>
   12248:	str	r0, [fp, #-4]
   1224c:	b	122ec <__assert_fail@plt+0x1234>
   12250:	ldr	r0, [fp, #-8]
   12254:	bl	10f80 <__freading@plt>
   12258:	cmp	r0, #0
   1225c:	beq	12294 <__assert_fail@plt+0x11dc>
   12260:	ldr	r0, [fp, #-8]
   12264:	bl	11010 <fileno@plt>
   12268:	mov	r1, sp
   1226c:	mov	r2, #1
   12270:	str	r2, [r1]
   12274:	mov	r1, #0
   12278:	mov	r2, r1
   1227c:	mov	r3, r1
   12280:	bl	10f20 <lseek64@plt>
   12284:	and	r0, r0, r1
   12288:	cmn	r0, #1
   1228c:	beq	122b0 <__assert_fail@plt+0x11f8>
   12290:	b	12294 <__assert_fail@plt+0x11dc>
   12294:	ldr	r0, [fp, #-8]
   12298:	bl	122f8 <__assert_fail@plt+0x1240>
   1229c:	cmp	r0, #0
   122a0:	beq	122b0 <__assert_fail@plt+0x11f8>
   122a4:	bl	10fec <__errno_location@plt>
   122a8:	ldr	r0, [r0]
   122ac:	str	r0, [fp, #-12]
   122b0:	ldr	r0, [fp, #-8]
   122b4:	bl	11028 <fclose@plt>
   122b8:	str	r0, [sp, #12]
   122bc:	ldr	r0, [fp, #-12]
   122c0:	cmp	r0, #0
   122c4:	beq	122e4 <__assert_fail@plt+0x122c>
   122c8:	ldr	r0, [fp, #-12]
   122cc:	str	r0, [sp, #8]
   122d0:	bl	10fec <__errno_location@plt>
   122d4:	ldr	r1, [sp, #8]
   122d8:	str	r1, [r0]
   122dc:	mvn	r0, #0
   122e0:	str	r0, [sp, #12]
   122e4:	ldr	r0, [sp, #12]
   122e8:	str	r0, [fp, #-4]
   122ec:	ldr	r0, [fp, #-4]
   122f0:	mov	sp, fp
   122f4:	pop	{fp, pc}
   122f8:	push	{fp, lr}
   122fc:	mov	fp, sp
   12300:	sub	sp, sp, #8
   12304:	str	r0, [sp]
   12308:	ldr	r0, [sp]
   1230c:	movw	r1, #0
   12310:	cmp	r0, r1
   12314:	beq	12328 <__assert_fail@plt+0x1270>
   12318:	ldr	r0, [sp]
   1231c:	bl	10f80 <__freading@plt>
   12320:	cmp	r0, #0
   12324:	bne	12338 <__assert_fail@plt+0x1280>
   12328:	ldr	r0, [sp]
   1232c:	bl	10e90 <fflush@plt>
   12330:	str	r0, [sp, #4]
   12334:	b	1234c <__assert_fail@plt+0x1294>
   12338:	ldr	r0, [sp]
   1233c:	bl	12358 <__assert_fail@plt+0x12a0>
   12340:	ldr	r0, [sp]
   12344:	bl	10e90 <fflush@plt>
   12348:	str	r0, [sp, #4]
   1234c:	ldr	r0, [sp, #4]
   12350:	mov	sp, fp
   12354:	pop	{fp, pc}
   12358:	push	{fp, lr}
   1235c:	mov	fp, sp
   12360:	sub	sp, sp, #8
   12364:	str	r0, [sp, #4]
   12368:	ldr	r0, [sp, #4]
   1236c:	ldr	r0, [r0]
   12370:	and	r0, r0, #256	; 0x100
   12374:	cmp	r0, #0
   12378:	beq	1239c <__assert_fail@plt+0x12e4>
   1237c:	ldr	r0, [sp, #4]
   12380:	mov	r1, sp
   12384:	mov	r2, #1
   12388:	str	r2, [r1]
   1238c:	mov	r1, #0
   12390:	mov	r2, r1
   12394:	mov	r3, r1
   12398:	bl	123a4 <__assert_fail@plt+0x12ec>
   1239c:	mov	sp, fp
   123a0:	pop	{fp, pc}
   123a4:	push	{fp, lr}
   123a8:	mov	fp, sp
   123ac:	sub	sp, sp, #32
   123b0:	ldr	r1, [fp, #8]
   123b4:	str	r0, [fp, #-8]
   123b8:	str	r3, [sp, #20]
   123bc:	str	r2, [sp, #16]
   123c0:	ldr	r0, [fp, #-8]
   123c4:	ldr	r0, [r0, #8]
   123c8:	ldr	r2, [fp, #-8]
   123cc:	ldr	r2, [r2, #4]
   123d0:	cmp	r0, r2
   123d4:	bne	12480 <__assert_fail@plt+0x13c8>
   123d8:	ldr	r0, [fp, #-8]
   123dc:	ldr	r0, [r0, #20]
   123e0:	ldr	r1, [fp, #-8]
   123e4:	ldr	r1, [r1, #16]
   123e8:	cmp	r0, r1
   123ec:	bne	12480 <__assert_fail@plt+0x13c8>
   123f0:	ldr	r0, [fp, #-8]
   123f4:	ldr	r0, [r0, #36]	; 0x24
   123f8:	movw	r1, #0
   123fc:	cmp	r0, r1
   12400:	bne	12480 <__assert_fail@plt+0x13c8>
   12404:	ldr	r0, [fp, #-8]
   12408:	bl	11010 <fileno@plt>
   1240c:	ldr	r2, [sp, #16]
   12410:	ldr	r3, [sp, #20]
   12414:	ldr	r1, [fp, #8]
   12418:	mov	ip, sp
   1241c:	str	r1, [ip]
   12420:	bl	10f20 <lseek64@plt>
   12424:	str	r1, [sp, #12]
   12428:	str	r0, [sp, #8]
   1242c:	ldr	r0, [sp, #8]
   12430:	ldr	r1, [sp, #12]
   12434:	and	r0, r0, r1
   12438:	cmn	r0, #1
   1243c:	bne	12450 <__assert_fail@plt+0x1398>
   12440:	b	12444 <__assert_fail@plt+0x138c>
   12444:	mvn	r0, #0
   12448:	str	r0, [fp, #-4]
   1244c:	b	124a0 <__assert_fail@plt+0x13e8>
   12450:	ldr	r0, [fp, #-8]
   12454:	ldr	r1, [r0]
   12458:	bic	r1, r1, #16
   1245c:	str	r1, [r0]
   12460:	ldr	r0, [sp, #8]
   12464:	ldr	r1, [sp, #12]
   12468:	ldr	r2, [fp, #-8]
   1246c:	str	r1, [r2, #84]	; 0x54
   12470:	str	r0, [r2, #80]	; 0x50
   12474:	movw	r0, #0
   12478:	str	r0, [fp, #-4]
   1247c:	b	124a0 <__assert_fail@plt+0x13e8>
   12480:	ldr	r0, [fp, #-8]
   12484:	ldr	r2, [sp, #16]
   12488:	ldr	r3, [sp, #20]
   1248c:	ldr	r1, [fp, #8]
   12490:	mov	ip, sp
   12494:	str	r1, [ip]
   12498:	bl	11034 <fseeko64@plt>
   1249c:	str	r0, [fp, #-4]
   124a0:	ldr	r0, [fp, #-4]
   124a4:	mov	sp, fp
   124a8:	pop	{fp, pc}
   124ac:	push	{fp, lr}
   124b0:	mov	fp, sp
   124b4:	sub	sp, sp, #24
   124b8:	str	r0, [fp, #-4]
   124bc:	ldr	r0, [fp, #-4]
   124c0:	movw	r1, #0
   124c4:	cmp	r0, r1
   124c8:	bne	124ec <__assert_fail@plt+0x1434>
   124cc:	movw	r0, #57672	; 0xe148
   124d0:	movt	r0, #2
   124d4:	ldr	r1, [r0]
   124d8:	movw	r0, #52638	; 0xcd9e
   124dc:	movt	r0, #1
   124e0:	bl	11088 <fputs@plt>
   124e4:	str	r0, [sp, #8]
   124e8:	bl	110a0 <abort@plt>
   124ec:	ldr	r0, [fp, #-4]
   124f0:	movw	r1, #47	; 0x2f
   124f4:	bl	1104c <strrchr@plt>
   124f8:	str	r0, [fp, #-8]
   124fc:	ldr	r0, [fp, #-8]
   12500:	movw	r1, #0
   12504:	cmp	r0, r1
   12508:	beq	1251c <__assert_fail@plt+0x1464>
   1250c:	ldr	r0, [fp, #-8]
   12510:	add	r0, r0, #1
   12514:	str	r0, [sp, #4]
   12518:	b	12524 <__assert_fail@plt+0x146c>
   1251c:	ldr	r0, [fp, #-4]
   12520:	str	r0, [sp, #4]
   12524:	ldr	r0, [sp, #4]
   12528:	str	r0, [sp, #12]
   1252c:	ldr	r0, [sp, #12]
   12530:	ldr	r1, [fp, #-4]
   12534:	sub	r0, r0, r1
   12538:	cmp	r0, #7
   1253c:	blt	125a8 <__assert_fail@plt+0x14f0>
   12540:	ldr	r0, [sp, #12]
   12544:	mvn	r1, #6
   12548:	add	r0, r0, r1
   1254c:	movw	r1, #52694	; 0xcdd6
   12550:	movt	r1, #1
   12554:	movw	r2, #7
   12558:	bl	11094 <strncmp@plt>
   1255c:	cmp	r0, #0
   12560:	bne	125a8 <__assert_fail@plt+0x14f0>
   12564:	ldr	r0, [sp, #12]
   12568:	str	r0, [fp, #-4]
   1256c:	ldr	r0, [sp, #12]
   12570:	movw	r1, #52702	; 0xcdde
   12574:	movt	r1, #1
   12578:	movw	r2, #3
   1257c:	bl	11094 <strncmp@plt>
   12580:	cmp	r0, #0
   12584:	bne	125a4 <__assert_fail@plt+0x14ec>
   12588:	ldr	r0, [sp, #12]
   1258c:	add	r0, r0, #3
   12590:	str	r0, [fp, #-4]
   12594:	ldr	r0, [fp, #-4]
   12598:	movw	r1, #57656	; 0xe138
   1259c:	movt	r1, #2
   125a0:	str	r0, [r1]
   125a4:	b	125a8 <__assert_fail@plt+0x14f0>
   125a8:	ldr	r0, [fp, #-4]
   125ac:	movw	r1, #57716	; 0xe174
   125b0:	movt	r1, #2
   125b4:	str	r0, [r1]
   125b8:	ldr	r0, [fp, #-4]
   125bc:	movw	r1, #57660	; 0xe13c
   125c0:	movt	r1, #2
   125c4:	str	r0, [r1]
   125c8:	mov	sp, fp
   125cc:	pop	{fp, pc}
   125d0:	push	{fp, lr}
   125d4:	mov	fp, sp
   125d8:	sub	sp, sp, #24
   125dc:	str	r0, [fp, #-4]
   125e0:	bl	10fec <__errno_location@plt>
   125e4:	ldr	r0, [r0]
   125e8:	str	r0, [fp, #-8]
   125ec:	ldr	r0, [fp, #-4]
   125f0:	movw	r1, #0
   125f4:	cmp	r0, r1
   125f8:	beq	12608 <__assert_fail@plt+0x1550>
   125fc:	ldr	r0, [fp, #-4]
   12600:	str	r0, [sp, #8]
   12604:	b	12618 <__assert_fail@plt+0x1560>
   12608:	movw	r0, #57720	; 0xe178
   1260c:	movt	r0, #2
   12610:	str	r0, [sp, #8]
   12614:	b	12618 <__assert_fail@plt+0x1560>
   12618:	ldr	r0, [sp, #8]
   1261c:	movw	r1, #48	; 0x30
   12620:	bl	18144 <__assert_fail@plt+0x708c>
   12624:	str	r0, [sp, #12]
   12628:	ldr	r0, [fp, #-8]
   1262c:	str	r0, [sp, #4]
   12630:	bl	10fec <__errno_location@plt>
   12634:	ldr	r1, [sp, #4]
   12638:	str	r1, [r0]
   1263c:	ldr	r0, [sp, #12]
   12640:	mov	sp, fp
   12644:	pop	{fp, pc}
   12648:	sub	sp, sp, #8
   1264c:	str	r0, [sp, #4]
   12650:	ldr	r0, [sp, #4]
   12654:	movw	r1, #0
   12658:	cmp	r0, r1
   1265c:	beq	1266c <__assert_fail@plt+0x15b4>
   12660:	ldr	r0, [sp, #4]
   12664:	str	r0, [sp]
   12668:	b	1267c <__assert_fail@plt+0x15c4>
   1266c:	movw	r0, #57720	; 0xe178
   12670:	movt	r0, #2
   12674:	str	r0, [sp]
   12678:	b	1267c <__assert_fail@plt+0x15c4>
   1267c:	ldr	r0, [sp]
   12680:	ldr	r0, [r0]
   12684:	add	sp, sp, #8
   12688:	bx	lr
   1268c:	sub	sp, sp, #16
   12690:	str	r0, [sp, #12]
   12694:	str	r1, [sp, #8]
   12698:	ldr	r0, [sp, #8]
   1269c:	ldr	r1, [sp, #12]
   126a0:	movw	r2, #0
   126a4:	cmp	r1, r2
   126a8:	str	r0, [sp, #4]
   126ac:	beq	126bc <__assert_fail@plt+0x1604>
   126b0:	ldr	r0, [sp, #12]
   126b4:	str	r0, [sp]
   126b8:	b	126cc <__assert_fail@plt+0x1614>
   126bc:	movw	r0, #57720	; 0xe178
   126c0:	movt	r0, #2
   126c4:	str	r0, [sp]
   126c8:	b	126cc <__assert_fail@plt+0x1614>
   126cc:	ldr	r0, [sp]
   126d0:	ldr	r1, [sp, #4]
   126d4:	str	r1, [r0]
   126d8:	add	sp, sp, #16
   126dc:	bx	lr
   126e0:	sub	sp, sp, #32
   126e4:	str	r0, [sp, #28]
   126e8:	strb	r1, [sp, #27]
   126ec:	str	r2, [sp, #20]
   126f0:	ldrb	r0, [sp, #27]
   126f4:	strb	r0, [sp, #19]
   126f8:	ldr	r0, [sp, #28]
   126fc:	movw	r1, #0
   12700:	cmp	r0, r1
   12704:	beq	12714 <__assert_fail@plt+0x165c>
   12708:	ldr	r0, [sp, #28]
   1270c:	str	r0, [sp]
   12710:	b	12724 <__assert_fail@plt+0x166c>
   12714:	movw	r0, #57720	; 0xe178
   12718:	movt	r0, #2
   1271c:	str	r0, [sp]
   12720:	b	12724 <__assert_fail@plt+0x166c>
   12724:	ldr	r0, [sp]
   12728:	add	r0, r0, #8
   1272c:	ldrb	r1, [sp, #19]
   12730:	lsr	r1, r1, #5
   12734:	add	r0, r0, r1, lsl #2
   12738:	str	r0, [sp, #12]
   1273c:	ldrb	r0, [sp, #19]
   12740:	and	r0, r0, #31
   12744:	str	r0, [sp, #8]
   12748:	ldr	r0, [sp, #12]
   1274c:	ldr	r0, [r0]
   12750:	ldr	r1, [sp, #8]
   12754:	lsr	r0, r0, r1
   12758:	and	r0, r0, #1
   1275c:	str	r0, [sp, #4]
   12760:	ldr	r0, [sp, #20]
   12764:	and	r0, r0, #1
   12768:	ldr	r1, [sp, #4]
   1276c:	eor	r0, r0, r1
   12770:	ldr	r1, [sp, #8]
   12774:	lsl	r0, r0, r1
   12778:	ldr	r1, [sp, #12]
   1277c:	ldr	r2, [r1]
   12780:	eor	r0, r2, r0
   12784:	str	r0, [r1]
   12788:	ldr	r0, [sp, #4]
   1278c:	add	sp, sp, #32
   12790:	bx	lr
   12794:	sub	sp, sp, #12
   12798:	str	r0, [sp, #8]
   1279c:	str	r1, [sp, #4]
   127a0:	ldr	r0, [sp, #8]
   127a4:	movw	r1, #0
   127a8:	cmp	r0, r1
   127ac:	bne	127bc <__assert_fail@plt+0x1704>
   127b0:	movw	r0, #57720	; 0xe178
   127b4:	movt	r0, #2
   127b8:	str	r0, [sp, #8]
   127bc:	ldr	r0, [sp, #8]
   127c0:	ldr	r0, [r0, #4]
   127c4:	str	r0, [sp]
   127c8:	ldr	r0, [sp, #4]
   127cc:	ldr	r1, [sp, #8]
   127d0:	str	r0, [r1, #4]
   127d4:	ldr	r0, [sp]
   127d8:	add	sp, sp, #12
   127dc:	bx	lr
   127e0:	push	{fp, lr}
   127e4:	mov	fp, sp
   127e8:	sub	sp, sp, #16
   127ec:	str	r0, [fp, #-4]
   127f0:	str	r1, [sp, #8]
   127f4:	str	r2, [sp, #4]
   127f8:	ldr	r0, [fp, #-4]
   127fc:	movw	r1, #0
   12800:	cmp	r0, r1
   12804:	bne	12814 <__assert_fail@plt+0x175c>
   12808:	movw	r0, #57720	; 0xe178
   1280c:	movt	r0, #2
   12810:	str	r0, [fp, #-4]
   12814:	ldr	r0, [fp, #-4]
   12818:	movw	r1, #10
   1281c:	str	r1, [r0]
   12820:	ldr	r0, [sp, #8]
   12824:	movw	r1, #0
   12828:	cmp	r0, r1
   1282c:	beq	12840 <__assert_fail@plt+0x1788>
   12830:	ldr	r0, [sp, #4]
   12834:	movw	r1, #0
   12838:	cmp	r0, r1
   1283c:	bne	12844 <__assert_fail@plt+0x178c>
   12840:	bl	110a0 <abort@plt>
   12844:	ldr	r0, [sp, #8]
   12848:	ldr	r1, [fp, #-4]
   1284c:	str	r0, [r1, #40]	; 0x28
   12850:	ldr	r0, [sp, #4]
   12854:	ldr	r1, [fp, #-4]
   12858:	str	r0, [r1, #44]	; 0x2c
   1285c:	mov	sp, fp
   12860:	pop	{fp, pc}
   12864:	push	{r4, r5, r6, sl, fp, lr}
   12868:	add	fp, sp, #16
   1286c:	sub	sp, sp, #56	; 0x38
   12870:	ldr	ip, [fp, #8]
   12874:	str	r0, [fp, #-20]	; 0xffffffec
   12878:	str	r1, [fp, #-24]	; 0xffffffe8
   1287c:	str	r2, [fp, #-28]	; 0xffffffe4
   12880:	str	r3, [fp, #-32]	; 0xffffffe0
   12884:	ldr	r0, [fp, #8]
   12888:	movw	r1, #0
   1288c:	cmp	r0, r1
   12890:	beq	128a0 <__assert_fail@plt+0x17e8>
   12894:	ldr	r0, [fp, #8]
   12898:	str	r0, [sp, #24]
   1289c:	b	128b0 <__assert_fail@plt+0x17f8>
   128a0:	movw	r0, #57720	; 0xe178
   128a4:	movt	r0, #2
   128a8:	str	r0, [sp, #24]
   128ac:	b	128b0 <__assert_fail@plt+0x17f8>
   128b0:	ldr	r0, [sp, #24]
   128b4:	str	r0, [sp, #36]	; 0x24
   128b8:	bl	10fec <__errno_location@plt>
   128bc:	ldr	r0, [r0]
   128c0:	str	r0, [sp, #32]
   128c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   128c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   128cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   128d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   128d4:	ldr	ip, [sp, #36]	; 0x24
   128d8:	ldr	ip, [ip]
   128dc:	ldr	lr, [sp, #36]	; 0x24
   128e0:	ldr	lr, [lr, #4]
   128e4:	ldr	r4, [sp, #36]	; 0x24
   128e8:	add	r4, r4, #8
   128ec:	ldr	r5, [sp, #36]	; 0x24
   128f0:	ldr	r5, [r5, #40]	; 0x28
   128f4:	ldr	r6, [sp, #36]	; 0x24
   128f8:	ldr	r6, [r6, #44]	; 0x2c
   128fc:	str	ip, [sp]
   12900:	str	lr, [sp, #4]
   12904:	str	r4, [sp, #8]
   12908:	str	r5, [sp, #12]
   1290c:	str	r6, [sp, #16]
   12910:	bl	12938 <__assert_fail@plt+0x1880>
   12914:	str	r0, [sp, #28]
   12918:	ldr	r0, [sp, #32]
   1291c:	str	r0, [sp, #20]
   12920:	bl	10fec <__errno_location@plt>
   12924:	ldr	r1, [sp, #20]
   12928:	str	r1, [r0]
   1292c:	ldr	r0, [sp, #28]
   12930:	sub	sp, fp, #16
   12934:	pop	{r4, r5, r6, sl, fp, pc}
   12938:	push	{r4, r5, r6, sl, fp, lr}
   1293c:	add	fp, sp, #16
   12940:	sub	sp, sp, #160	; 0xa0
   12944:	ldr	ip, [fp, #24]
   12948:	ldr	lr, [fp, #20]
   1294c:	ldr	r4, [fp, #16]
   12950:	ldr	r5, [fp, #12]
   12954:	ldr	r6, [fp, #8]
   12958:	str	r0, [fp, #-24]	; 0xffffffe8
   1295c:	str	r1, [fp, #-28]	; 0xffffffe4
   12960:	str	r2, [fp, #-32]	; 0xffffffe0
   12964:	str	r3, [fp, #-36]	; 0xffffffdc
   12968:	movw	r0, #0
   1296c:	str	r0, [fp, #-44]	; 0xffffffd4
   12970:	str	r0, [fp, #-48]	; 0xffffffd0
   12974:	str	r0, [fp, #-52]	; 0xffffffcc
   12978:	str	r0, [fp, #-56]	; 0xffffffc8
   1297c:	movw	r0, #0
   12980:	strb	r0, [fp, #-57]	; 0xffffffc7
   12984:	str	ip, [sp, #72]	; 0x48
   12988:	str	lr, [sp, #68]	; 0x44
   1298c:	str	r4, [sp, #64]	; 0x40
   12990:	str	r5, [sp, #60]	; 0x3c
   12994:	str	r6, [sp, #56]	; 0x38
   12998:	bl	10f2c <__ctype_get_mb_cur_max@plt>
   1299c:	cmp	r0, #1
   129a0:	movw	r0, #0
   129a4:	moveq	r0, #1
   129a8:	and	r0, r0, #1
   129ac:	strb	r0, [fp, #-58]	; 0xffffffc6
   129b0:	ldr	r0, [fp, #12]
   129b4:	and	r0, r0, #2
   129b8:	cmp	r0, #0
   129bc:	movw	r0, #0
   129c0:	movne	r0, #1
   129c4:	and	r0, r0, #1
   129c8:	strb	r0, [fp, #-59]	; 0xffffffc5
   129cc:	movw	r0, #0
   129d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   129d4:	strb	r0, [fp, #-61]	; 0xffffffc3
   129d8:	movw	r0, #1
   129dc:	strb	r0, [fp, #-62]	; 0xffffffc2
   129e0:	ldr	r0, [fp, #8]
   129e4:	cmp	r0, #10
   129e8:	str	r0, [sp, #52]	; 0x34
   129ec:	bhi	12c14 <__assert_fail@plt+0x1b5c>
   129f0:	add	r0, pc, #8
   129f4:	ldr	r1, [sp, #52]	; 0x34
   129f8:	ldr	r0, [r0, r1, lsl #2]
   129fc:	mov	pc, r0
   12a00:	andeq	r2, r1, r8, lsl #24
   12a04:	andeq	r2, r1, r4, lsl #23
   12a08:	andeq	r2, r1, r4, lsr #23
   12a0c:	andeq	r2, r1, ip, ror fp
   12a10:	andeq	r2, r1, ip, lsl #23
   12a14:	andeq	r2, r1, ip, lsr sl
   12a18:	andeq	r2, r1, ip, lsr #20
   12a1c:	andeq	r2, r1, r0, lsr #21
   12a20:			; <UNDEFINED> instruction: 0x00012ab4
   12a24:			; <UNDEFINED> instruction: 0x00012ab4
   12a28:			; <UNDEFINED> instruction: 0x00012ab4
   12a2c:	movw	r0, #5
   12a30:	str	r0, [fp, #8]
   12a34:	movw	r0, #1
   12a38:	strb	r0, [fp, #-59]	; 0xffffffc5
   12a3c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12a40:	tst	r0, #1
   12a44:	bne	12a80 <__assert_fail@plt+0x19c8>
   12a48:	b	12a4c <__assert_fail@plt+0x1994>
   12a4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a54:	cmp	r0, r1
   12a58:	bcs	12a70 <__assert_fail@plt+0x19b8>
   12a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a64:	add	r0, r0, r1
   12a68:	movw	r1, #34	; 0x22
   12a6c:	strb	r1, [r0]
   12a70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a74:	add	r0, r0, #1
   12a78:	str	r0, [fp, #-44]	; 0xffffffd4
   12a7c:	b	12a80 <__assert_fail@plt+0x19c8>
   12a80:	movw	r0, #1
   12a84:	strb	r0, [fp, #-57]	; 0xffffffc7
   12a88:	movw	r0, #52782	; 0xce2e
   12a8c:	movt	r0, #1
   12a90:	str	r0, [fp, #-52]	; 0xffffffcc
   12a94:	movw	r0, #1
   12a98:	str	r0, [fp, #-56]	; 0xffffffc8
   12a9c:	b	12c18 <__assert_fail@plt+0x1b60>
   12aa0:	movw	r0, #1
   12aa4:	strb	r0, [fp, #-57]	; 0xffffffc7
   12aa8:	movw	r0, #0
   12aac:	strb	r0, [fp, #-59]	; 0xffffffc5
   12ab0:	b	12c18 <__assert_fail@plt+0x1b60>
   12ab4:	ldr	r0, [fp, #8]
   12ab8:	cmp	r0, #10
   12abc:	beq	12ae8 <__assert_fail@plt+0x1a30>
   12ac0:	ldr	r1, [fp, #8]
   12ac4:	movw	r0, #52784	; 0xce30
   12ac8:	movt	r0, #1
   12acc:	bl	14b2c <__assert_fail@plt+0x3a74>
   12ad0:	str	r0, [fp, #20]
   12ad4:	ldr	r1, [fp, #8]
   12ad8:	movw	r0, #52786	; 0xce32
   12adc:	movt	r0, #1
   12ae0:	bl	14b2c <__assert_fail@plt+0x3a74>
   12ae4:	str	r0, [fp, #24]
   12ae8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12aec:	tst	r0, #1
   12af0:	bne	12b5c <__assert_fail@plt+0x1aa4>
   12af4:	ldr	r0, [fp, #20]
   12af8:	str	r0, [fp, #-52]	; 0xffffffcc
   12afc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12b00:	ldrsb	r0, [r0]
   12b04:	cmp	r0, #0
   12b08:	beq	12b58 <__assert_fail@plt+0x1aa0>
   12b0c:	b	12b10 <__assert_fail@plt+0x1a58>
   12b10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12b18:	cmp	r0, r1
   12b1c:	bcs	12b38 <__assert_fail@plt+0x1a80>
   12b20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12b24:	ldrb	r0, [r0]
   12b28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12b2c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12b30:	add	r1, r1, r2
   12b34:	strb	r0, [r1]
   12b38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b3c:	add	r0, r0, #1
   12b40:	str	r0, [fp, #-44]	; 0xffffffd4
   12b44:	b	12b48 <__assert_fail@plt+0x1a90>
   12b48:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12b4c:	add	r0, r0, #1
   12b50:	str	r0, [fp, #-52]	; 0xffffffcc
   12b54:	b	12afc <__assert_fail@plt+0x1a44>
   12b58:	b	12b5c <__assert_fail@plt+0x1aa4>
   12b5c:	movw	r0, #1
   12b60:	strb	r0, [fp, #-57]	; 0xffffffc7
   12b64:	ldr	r0, [fp, #24]
   12b68:	str	r0, [fp, #-52]	; 0xffffffcc
   12b6c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12b70:	bl	10fc8 <strlen@plt>
   12b74:	str	r0, [fp, #-56]	; 0xffffffc8
   12b78:	b	12c18 <__assert_fail@plt+0x1b60>
   12b7c:	movw	r0, #1
   12b80:	strb	r0, [fp, #-57]	; 0xffffffc7
   12b84:	movw	r0, #1
   12b88:	strb	r0, [fp, #-59]	; 0xffffffc5
   12b8c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b90:	tst	r0, #1
   12b94:	bne	12ba0 <__assert_fail@plt+0x1ae8>
   12b98:	movw	r0, #1
   12b9c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12ba0:	b	12ba4 <__assert_fail@plt+0x1aec>
   12ba4:	movw	r0, #2
   12ba8:	str	r0, [fp, #8]
   12bac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12bb0:	tst	r0, #1
   12bb4:	bne	12bf0 <__assert_fail@plt+0x1b38>
   12bb8:	b	12bbc <__assert_fail@plt+0x1b04>
   12bbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bc4:	cmp	r0, r1
   12bc8:	bcs	12be0 <__assert_fail@plt+0x1b28>
   12bcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12bd4:	add	r0, r0, r1
   12bd8:	movw	r1, #39	; 0x27
   12bdc:	strb	r1, [r0]
   12be0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12be4:	add	r0, r0, #1
   12be8:	str	r0, [fp, #-44]	; 0xffffffd4
   12bec:	b	12bf0 <__assert_fail@plt+0x1b38>
   12bf0:	movw	r0, #52786	; 0xce32
   12bf4:	movt	r0, #1
   12bf8:	str	r0, [fp, #-52]	; 0xffffffcc
   12bfc:	movw	r0, #1
   12c00:	str	r0, [fp, #-56]	; 0xffffffc8
   12c04:	b	12c18 <__assert_fail@plt+0x1b60>
   12c08:	movw	r0, #0
   12c0c:	strb	r0, [fp, #-59]	; 0xffffffc5
   12c10:	b	12c18 <__assert_fail@plt+0x1b60>
   12c14:	bl	110a0 <abort@plt>
   12c18:	movw	r0, #0
   12c1c:	str	r0, [fp, #-40]	; 0xffffffd8
   12c20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12c24:	cmn	r0, #1
   12c28:	bne	12c54 <__assert_fail@plt+0x1b9c>
   12c2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12c34:	add	r0, r0, r1
   12c38:	ldrb	r0, [r0]
   12c3c:	cmp	r0, #0
   12c40:	movw	r0, #0
   12c44:	moveq	r0, #1
   12c48:	and	r0, r0, #1
   12c4c:	str	r0, [sp, #48]	; 0x30
   12c50:	b	12c70 <__assert_fail@plt+0x1bb8>
   12c54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12c58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12c5c:	cmp	r0, r1
   12c60:	movw	r0, #0
   12c64:	moveq	r0, #1
   12c68:	and	r0, r0, #1
   12c6c:	str	r0, [sp, #48]	; 0x30
   12c70:	ldr	r0, [sp, #48]	; 0x30
   12c74:	cmp	r0, #0
   12c78:	movw	r0, #0
   12c7c:	movne	r0, #1
   12c80:	mvn	r1, #0
   12c84:	eor	r0, r0, r1
   12c88:	tst	r0, #1
   12c8c:	beq	13e78 <__assert_fail@plt+0x2dc0>
   12c90:	movw	r0, #0
   12c94:	strb	r0, [fp, #-65]	; 0xffffffbf
   12c98:	strb	r0, [fp, #-66]	; 0xffffffbe
   12c9c:	strb	r0, [fp, #-67]	; 0xffffffbd
   12ca0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12ca4:	tst	r0, #1
   12ca8:	beq	12d54 <__assert_fail@plt+0x1c9c>
   12cac:	ldr	r0, [fp, #8]
   12cb0:	cmp	r0, #2
   12cb4:	beq	12d54 <__assert_fail@plt+0x1c9c>
   12cb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12cbc:	cmp	r0, #0
   12cc0:	beq	12d54 <__assert_fail@plt+0x1c9c>
   12cc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12cc8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12ccc:	add	r0, r0, r1
   12cd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12cd4:	cmn	r1, #1
   12cd8:	str	r0, [sp, #44]	; 0x2c
   12cdc:	bne	12d04 <__assert_fail@plt+0x1c4c>
   12ce0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12ce4:	movw	r1, #1
   12ce8:	cmp	r1, r0
   12cec:	bcs	12d04 <__assert_fail@plt+0x1c4c>
   12cf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12cf4:	bl	10fc8 <strlen@plt>
   12cf8:	str	r0, [fp, #-36]	; 0xffffffdc
   12cfc:	str	r0, [sp, #40]	; 0x28
   12d00:	b	12d0c <__assert_fail@plt+0x1c54>
   12d04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d08:	str	r0, [sp, #40]	; 0x28
   12d0c:	ldr	r0, [sp, #40]	; 0x28
   12d10:	ldr	r1, [sp, #44]	; 0x2c
   12d14:	cmp	r1, r0
   12d18:	bhi	12d54 <__assert_fail@plt+0x1c9c>
   12d1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d24:	add	r0, r0, r1
   12d28:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12d2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12d30:	bl	10ee4 <memcmp@plt>
   12d34:	cmp	r0, #0
   12d38:	bne	12d54 <__assert_fail@plt+0x1c9c>
   12d3c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12d40:	tst	r0, #1
   12d44:	beq	12d4c <__assert_fail@plt+0x1c94>
   12d48:	b	13ff8 <__assert_fail@plt+0x2f40>
   12d4c:	movw	r0, #1
   12d50:	strb	r0, [fp, #-65]	; 0xffffffbf
   12d54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d58:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d5c:	ldrb	r0, [r0, r1]
   12d60:	strb	r0, [fp, #-63]	; 0xffffffc1
   12d64:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12d68:	mov	r1, r0
   12d6c:	cmp	r0, #126	; 0x7e
   12d70:	str	r1, [sp, #36]	; 0x24
   12d74:	bhi	135e4 <__assert_fail@plt+0x252c>
   12d78:	add	r0, pc, #8
   12d7c:	ldr	r1, [sp, #36]	; 0x24
   12d80:	ldr	r0, [r0, r1, lsl #2]
   12d84:	mov	pc, r0
   12d88:	andeq	r2, r1, r4, lsl #31
   12d8c:	andeq	r3, r1, r4, ror #11
   12d90:	andeq	r3, r1, r4, ror #11
   12d94:	andeq	r3, r1, r4, ror #11
   12d98:	andeq	r3, r1, r4, ror #11
   12d9c:	andeq	r3, r1, r4, ror #11
   12da0:	andeq	r3, r1, r4, ror #11
   12da4:	andeq	r3, r1, ip, lsl #7
   12da8:	muleq	r1, r8, r3
   12dac:	andeq	r3, r1, r8, asr #7
   12db0:			; <UNDEFINED> instruction: 0x000133b0
   12db4:	ldrdeq	r3, [r1], -r4
   12db8:	andeq	r3, r1, r4, lsr #7
   12dbc:			; <UNDEFINED> instruction: 0x000133bc
   12dc0:	andeq	r3, r1, r4, ror #11
   12dc4:	andeq	r3, r1, r4, ror #11
   12dc8:	andeq	r3, r1, r4, ror #11
   12dcc:	andeq	r3, r1, r4, ror #11
   12dd0:	andeq	r3, r1, r4, ror #11
   12dd4:	andeq	r3, r1, r4, ror #11
   12dd8:	andeq	r3, r1, r4, ror #11
   12ddc:	andeq	r3, r1, r4, ror #11
   12de0:	andeq	r3, r1, r4, ror #11
   12de4:	andeq	r3, r1, r4, ror #11
   12de8:	andeq	r3, r1, r4, ror #11
   12dec:	andeq	r3, r1, r4, ror #11
   12df0:	andeq	r3, r1, r4, ror #11
   12df4:	andeq	r3, r1, r4, ror #11
   12df8:	andeq	r3, r1, r4, ror #11
   12dfc:	andeq	r3, r1, r4, ror #11
   12e00:	andeq	r3, r1, r4, ror #11
   12e04:	andeq	r3, r1, r4, ror #11
   12e08:			; <UNDEFINED> instruction: 0x000134b8
   12e0c:	andeq	r3, r1, r0, asr #9
   12e10:	andeq	r3, r1, r0, asr #9
   12e14:	andeq	r3, r1, r4, lsr #9
   12e18:	andeq	r3, r1, r0, asr #9
   12e1c:	ldrdeq	r3, [r1], -r8
   12e20:	andeq	r3, r1, r0, asr #9
   12e24:	andeq	r3, r1, r0, ror #9
   12e28:	andeq	r3, r1, r0, asr #9
   12e2c:	andeq	r3, r1, r0, asr #9
   12e30:	andeq	r3, r1, r0, asr #9
   12e34:	ldrdeq	r3, [r1], -r8
   12e38:	ldrdeq	r3, [r1], -r8
   12e3c:	ldrdeq	r3, [r1], -r8
   12e40:	ldrdeq	r3, [r1], -r8
   12e44:	ldrdeq	r3, [r1], -r8
   12e48:	ldrdeq	r3, [r1], -r8
   12e4c:	ldrdeq	r3, [r1], -r8
   12e50:	ldrdeq	r3, [r1], -r8
   12e54:	ldrdeq	r3, [r1], -r8
   12e58:	ldrdeq	r3, [r1], -r8
   12e5c:	ldrdeq	r3, [r1], -r8
   12e60:	ldrdeq	r3, [r1], -r8
   12e64:	ldrdeq	r3, [r1], -r8
   12e68:	ldrdeq	r3, [r1], -r8
   12e6c:	ldrdeq	r3, [r1], -r8
   12e70:	ldrdeq	r3, [r1], -r8
   12e74:	andeq	r3, r1, r0, asr #9
   12e78:	andeq	r3, r1, r0, asr #9
   12e7c:	andeq	r3, r1, r0, asr #9
   12e80:	andeq	r3, r1, r0, asr #9
   12e84:	muleq	r1, r0, r1
   12e88:	andeq	r3, r1, r4, ror #11
   12e8c:	ldrdeq	r3, [r1], -r8
   12e90:	ldrdeq	r3, [r1], -r8
   12e94:	ldrdeq	r3, [r1], -r8
   12e98:	ldrdeq	r3, [r1], -r8
   12e9c:	ldrdeq	r3, [r1], -r8
   12ea0:	ldrdeq	r3, [r1], -r8
   12ea4:	ldrdeq	r3, [r1], -r8
   12ea8:	ldrdeq	r3, [r1], -r8
   12eac:	ldrdeq	r3, [r1], -r8
   12eb0:	ldrdeq	r3, [r1], -r8
   12eb4:	ldrdeq	r3, [r1], -r8
   12eb8:	ldrdeq	r3, [r1], -r8
   12ebc:	ldrdeq	r3, [r1], -r8
   12ec0:	ldrdeq	r3, [r1], -r8
   12ec4:	ldrdeq	r3, [r1], -r8
   12ec8:	ldrdeq	r3, [r1], -r8
   12ecc:	ldrdeq	r3, [r1], -r8
   12ed0:	ldrdeq	r3, [r1], -r8
   12ed4:	ldrdeq	r3, [r1], -r8
   12ed8:	ldrdeq	r3, [r1], -r8
   12edc:	ldrdeq	r3, [r1], -r8
   12ee0:	ldrdeq	r3, [r1], -r8
   12ee4:	ldrdeq	r3, [r1], -r8
   12ee8:	ldrdeq	r3, [r1], -r8
   12eec:	ldrdeq	r3, [r1], -r8
   12ef0:	ldrdeq	r3, [r1], -r8
   12ef4:	andeq	r3, r1, r0, asr #9
   12ef8:	andeq	r3, r1, r0, ror #7
   12efc:	ldrdeq	r3, [r1], -r8
   12f00:	andeq	r3, r1, r0, asr #9
   12f04:	ldrdeq	r3, [r1], -r8
   12f08:	andeq	r3, r1, r0, asr #9
   12f0c:	ldrdeq	r3, [r1], -r8
   12f10:	ldrdeq	r3, [r1], -r8
   12f14:	ldrdeq	r3, [r1], -r8
   12f18:	ldrdeq	r3, [r1], -r8
   12f1c:	ldrdeq	r3, [r1], -r8
   12f20:	ldrdeq	r3, [r1], -r8
   12f24:	ldrdeq	r3, [r1], -r8
   12f28:	ldrdeq	r3, [r1], -r8
   12f2c:	ldrdeq	r3, [r1], -r8
   12f30:	ldrdeq	r3, [r1], -r8
   12f34:	ldrdeq	r3, [r1], -r8
   12f38:	ldrdeq	r3, [r1], -r8
   12f3c:	ldrdeq	r3, [r1], -r8
   12f40:	ldrdeq	r3, [r1], -r8
   12f44:	ldrdeq	r3, [r1], -r8
   12f48:	ldrdeq	r3, [r1], -r8
   12f4c:	ldrdeq	r3, [r1], -r8
   12f50:	ldrdeq	r3, [r1], -r8
   12f54:	ldrdeq	r3, [r1], -r8
   12f58:	ldrdeq	r3, [r1], -r8
   12f5c:	ldrdeq	r3, [r1], -r8
   12f60:	ldrdeq	r3, [r1], -r8
   12f64:	ldrdeq	r3, [r1], -r8
   12f68:	ldrdeq	r3, [r1], -r8
   12f6c:	ldrdeq	r3, [r1], -r8
   12f70:	ldrdeq	r3, [r1], -r8
   12f74:	andeq	r3, r1, r0, ror r4
   12f78:	andeq	r3, r1, r0, asr #9
   12f7c:	andeq	r3, r1, r0, ror r4
   12f80:	andeq	r3, r1, r4, lsr #9
   12f84:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12f88:	tst	r0, #1
   12f8c:	beq	13174 <__assert_fail@plt+0x20bc>
   12f90:	b	12f94 <__assert_fail@plt+0x1edc>
   12f94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12f98:	tst	r0, #1
   12f9c:	beq	12fa4 <__assert_fail@plt+0x1eec>
   12fa0:	b	13ff8 <__assert_fail@plt+0x2f40>
   12fa4:	movw	r0, #1
   12fa8:	strb	r0, [fp, #-66]	; 0xffffffbe
   12fac:	ldr	r0, [fp, #8]
   12fb0:	cmp	r0, #2
   12fb4:	bne	13068 <__assert_fail@plt+0x1fb0>
   12fb8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   12fbc:	tst	r0, #1
   12fc0:	bne	13068 <__assert_fail@plt+0x1fb0>
   12fc4:	b	12fc8 <__assert_fail@plt+0x1f10>
   12fc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12fd0:	cmp	r0, r1
   12fd4:	bcs	12fec <__assert_fail@plt+0x1f34>
   12fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12fe0:	add	r0, r0, r1
   12fe4:	movw	r1, #39	; 0x27
   12fe8:	strb	r1, [r0]
   12fec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ff0:	add	r0, r0, #1
   12ff4:	str	r0, [fp, #-44]	; 0xffffffd4
   12ff8:	b	12ffc <__assert_fail@plt+0x1f44>
   12ffc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13000:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13004:	cmp	r0, r1
   13008:	bcs	13020 <__assert_fail@plt+0x1f68>
   1300c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13010:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13014:	add	r0, r0, r1
   13018:	movw	r1, #36	; 0x24
   1301c:	strb	r1, [r0]
   13020:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13024:	add	r0, r0, #1
   13028:	str	r0, [fp, #-44]	; 0xffffffd4
   1302c:	b	13030 <__assert_fail@plt+0x1f78>
   13030:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13034:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13038:	cmp	r0, r1
   1303c:	bcs	13054 <__assert_fail@plt+0x1f9c>
   13040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13044:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13048:	add	r0, r0, r1
   1304c:	movw	r1, #39	; 0x27
   13050:	strb	r1, [r0]
   13054:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13058:	add	r0, r0, #1
   1305c:	str	r0, [fp, #-44]	; 0xffffffd4
   13060:	movw	r0, #1
   13064:	strb	r0, [fp, #-60]	; 0xffffffc4
   13068:	b	1306c <__assert_fail@plt+0x1fb4>
   1306c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13070:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13074:	cmp	r0, r1
   13078:	bcs	13090 <__assert_fail@plt+0x1fd8>
   1307c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13080:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13084:	add	r0, r0, r1
   13088:	movw	r1, #92	; 0x5c
   1308c:	strb	r1, [r0]
   13090:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13094:	add	r0, r0, #1
   13098:	str	r0, [fp, #-44]	; 0xffffffd4
   1309c:	b	130a0 <__assert_fail@plt+0x1fe8>
   130a0:	ldr	r0, [fp, #8]
   130a4:	cmp	r0, #2
   130a8:	beq	13168 <__assert_fail@plt+0x20b0>
   130ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   130b0:	add	r0, r0, #1
   130b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   130b8:	cmp	r0, r1
   130bc:	bcs	13168 <__assert_fail@plt+0x20b0>
   130c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   130c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   130c8:	add	r1, r1, #1
   130cc:	add	r0, r0, r1
   130d0:	ldrb	r0, [r0]
   130d4:	movw	r1, #48	; 0x30
   130d8:	cmp	r1, r0
   130dc:	bgt	13168 <__assert_fail@plt+0x20b0>
   130e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   130e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   130e8:	add	r1, r1, #1
   130ec:	add	r0, r0, r1
   130f0:	ldrb	r0, [r0]
   130f4:	cmp	r0, #57	; 0x39
   130f8:	bgt	13168 <__assert_fail@plt+0x20b0>
   130fc:	b	13100 <__assert_fail@plt+0x2048>
   13100:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13104:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13108:	cmp	r0, r1
   1310c:	bcs	13124 <__assert_fail@plt+0x206c>
   13110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13114:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13118:	add	r0, r0, r1
   1311c:	movw	r1, #48	; 0x30
   13120:	strb	r1, [r0]
   13124:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13128:	add	r0, r0, #1
   1312c:	str	r0, [fp, #-44]	; 0xffffffd4
   13130:	b	13134 <__assert_fail@plt+0x207c>
   13134:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13138:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1313c:	cmp	r0, r1
   13140:	bcs	13158 <__assert_fail@plt+0x20a0>
   13144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13148:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1314c:	add	r0, r0, r1
   13150:	movw	r1, #48	; 0x30
   13154:	strb	r1, [r0]
   13158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1315c:	add	r0, r0, #1
   13160:	str	r0, [fp, #-44]	; 0xffffffd4
   13164:	b	13168 <__assert_fail@plt+0x20b0>
   13168:	movw	r0, #48	; 0x30
   1316c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13170:	b	1318c <__assert_fail@plt+0x20d4>
   13174:	ldr	r0, [fp, #12]
   13178:	and	r0, r0, #1
   1317c:	cmp	r0, #0
   13180:	beq	13188 <__assert_fail@plt+0x20d0>
   13184:	b	13e68 <__assert_fail@plt+0x2db0>
   13188:	b	1318c <__assert_fail@plt+0x20d4>
   1318c:	b	13c04 <__assert_fail@plt+0x2b4c>
   13190:	ldr	r0, [fp, #8]
   13194:	cmp	r0, #2
   13198:	str	r0, [sp, #32]
   1319c:	beq	131b4 <__assert_fail@plt+0x20fc>
   131a0:	b	131a4 <__assert_fail@plt+0x20ec>
   131a4:	ldr	r0, [sp, #32]
   131a8:	cmp	r0, #5
   131ac:	beq	131c8 <__assert_fail@plt+0x2110>
   131b0:	b	13384 <__assert_fail@plt+0x22cc>
   131b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   131b8:	tst	r0, #1
   131bc:	beq	131c4 <__assert_fail@plt+0x210c>
   131c0:	b	13ff8 <__assert_fail@plt+0x2f40>
   131c4:	b	13388 <__assert_fail@plt+0x22d0>
   131c8:	ldr	r0, [fp, #12]
   131cc:	and	r0, r0, #4
   131d0:	cmp	r0, #0
   131d4:	beq	13380 <__assert_fail@plt+0x22c8>
   131d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   131dc:	add	r0, r0, #2
   131e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   131e4:	cmp	r0, r1
   131e8:	bcs	13380 <__assert_fail@plt+0x22c8>
   131ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   131f4:	add	r1, r1, #1
   131f8:	add	r0, r0, r1
   131fc:	ldrb	r0, [r0]
   13200:	cmp	r0, #63	; 0x3f
   13204:	bne	13380 <__assert_fail@plt+0x22c8>
   13208:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1320c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13210:	add	r0, r1, r0
   13214:	ldrb	r0, [r0, #2]
   13218:	mov	r1, r0
   1321c:	cmp	r0, #33	; 0x21
   13220:	str	r1, [sp, #28]
   13224:	beq	13274 <__assert_fail@plt+0x21bc>
   13228:	b	1322c <__assert_fail@plt+0x2174>
   1322c:	ldr	r0, [sp, #28]
   13230:	sub	r1, r0, #39	; 0x27
   13234:	cmp	r1, #3
   13238:	bcc	13274 <__assert_fail@plt+0x21bc>
   1323c:	b	13240 <__assert_fail@plt+0x2188>
   13240:	ldr	r0, [sp, #28]
   13244:	cmp	r0, #45	; 0x2d
   13248:	beq	13274 <__assert_fail@plt+0x21bc>
   1324c:	b	13250 <__assert_fail@plt+0x2198>
   13250:	ldr	r0, [sp, #28]
   13254:	cmp	r0, #47	; 0x2f
   13258:	beq	13274 <__assert_fail@plt+0x21bc>
   1325c:	b	13260 <__assert_fail@plt+0x21a8>
   13260:	ldr	r0, [sp, #28]
   13264:	sub	r1, r0, #60	; 0x3c
   13268:	cmp	r1, #2
   1326c:	bhi	13378 <__assert_fail@plt+0x22c0>
   13270:	b	13274 <__assert_fail@plt+0x21bc>
   13274:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13278:	tst	r0, #1
   1327c:	beq	13284 <__assert_fail@plt+0x21cc>
   13280:	b	13ff8 <__assert_fail@plt+0x2f40>
   13284:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13288:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1328c:	add	r1, r1, #2
   13290:	add	r0, r0, r1
   13294:	ldrb	r0, [r0]
   13298:	strb	r0, [fp, #-63]	; 0xffffffc1
   1329c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   132a0:	add	r0, r0, #2
   132a4:	str	r0, [fp, #-40]	; 0xffffffd8
   132a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132b0:	cmp	r0, r1
   132b4:	bcs	132cc <__assert_fail@plt+0x2214>
   132b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132c0:	add	r0, r0, r1
   132c4:	movw	r1, #63	; 0x3f
   132c8:	strb	r1, [r0]
   132cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132d0:	add	r0, r0, #1
   132d4:	str	r0, [fp, #-44]	; 0xffffffd4
   132d8:	b	132dc <__assert_fail@plt+0x2224>
   132dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132e4:	cmp	r0, r1
   132e8:	bcs	13300 <__assert_fail@plt+0x2248>
   132ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132f4:	add	r0, r0, r1
   132f8:	movw	r1, #34	; 0x22
   132fc:	strb	r1, [r0]
   13300:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13304:	add	r0, r0, #1
   13308:	str	r0, [fp, #-44]	; 0xffffffd4
   1330c:	b	13310 <__assert_fail@plt+0x2258>
   13310:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13314:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13318:	cmp	r0, r1
   1331c:	bcs	13334 <__assert_fail@plt+0x227c>
   13320:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13324:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13328:	add	r0, r0, r1
   1332c:	movw	r1, #34	; 0x22
   13330:	strb	r1, [r0]
   13334:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13338:	add	r0, r0, #1
   1333c:	str	r0, [fp, #-44]	; 0xffffffd4
   13340:	b	13344 <__assert_fail@plt+0x228c>
   13344:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13348:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1334c:	cmp	r0, r1
   13350:	bcs	13368 <__assert_fail@plt+0x22b0>
   13354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13358:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1335c:	add	r0, r0, r1
   13360:	movw	r1, #63	; 0x3f
   13364:	strb	r1, [r0]
   13368:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1336c:	add	r0, r0, #1
   13370:	str	r0, [fp, #-44]	; 0xffffffd4
   13374:	b	1337c <__assert_fail@plt+0x22c4>
   13378:	b	1337c <__assert_fail@plt+0x22c4>
   1337c:	b	13380 <__assert_fail@plt+0x22c8>
   13380:	b	13388 <__assert_fail@plt+0x22d0>
   13384:	b	13388 <__assert_fail@plt+0x22d0>
   13388:	b	13c04 <__assert_fail@plt+0x2b4c>
   1338c:	movw	r0, #97	; 0x61
   13390:	strb	r0, [fp, #-64]	; 0xffffffc0
   13394:	b	13454 <__assert_fail@plt+0x239c>
   13398:	movw	r0, #98	; 0x62
   1339c:	strb	r0, [fp, #-64]	; 0xffffffc0
   133a0:	b	13454 <__assert_fail@plt+0x239c>
   133a4:	movw	r0, #102	; 0x66
   133a8:	strb	r0, [fp, #-64]	; 0xffffffc0
   133ac:	b	13454 <__assert_fail@plt+0x239c>
   133b0:	movw	r0, #110	; 0x6e
   133b4:	strb	r0, [fp, #-64]	; 0xffffffc0
   133b8:	b	13434 <__assert_fail@plt+0x237c>
   133bc:	movw	r0, #114	; 0x72
   133c0:	strb	r0, [fp, #-64]	; 0xffffffc0
   133c4:	b	13434 <__assert_fail@plt+0x237c>
   133c8:	movw	r0, #116	; 0x74
   133cc:	strb	r0, [fp, #-64]	; 0xffffffc0
   133d0:	b	13434 <__assert_fail@plt+0x237c>
   133d4:	movw	r0, #118	; 0x76
   133d8:	strb	r0, [fp, #-64]	; 0xffffffc0
   133dc:	b	13454 <__assert_fail@plt+0x239c>
   133e0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   133e4:	strb	r0, [fp, #-64]	; 0xffffffc0
   133e8:	ldr	r0, [fp, #8]
   133ec:	cmp	r0, #2
   133f0:	bne	13408 <__assert_fail@plt+0x2350>
   133f4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   133f8:	tst	r0, #1
   133fc:	beq	13404 <__assert_fail@plt+0x234c>
   13400:	b	13ff8 <__assert_fail@plt+0x2f40>
   13404:	b	13d8c <__assert_fail@plt+0x2cd4>
   13408:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1340c:	tst	r0, #1
   13410:	beq	13430 <__assert_fail@plt+0x2378>
   13414:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13418:	tst	r0, #1
   1341c:	beq	13430 <__assert_fail@plt+0x2378>
   13420:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13424:	cmp	r0, #0
   13428:	beq	13430 <__assert_fail@plt+0x2378>
   1342c:	b	13d8c <__assert_fail@plt+0x2cd4>
   13430:	b	13434 <__assert_fail@plt+0x237c>
   13434:	ldr	r0, [fp, #8]
   13438:	cmp	r0, #2
   1343c:	bne	13450 <__assert_fail@plt+0x2398>
   13440:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13444:	tst	r0, #1
   13448:	beq	13450 <__assert_fail@plt+0x2398>
   1344c:	b	13ff8 <__assert_fail@plt+0x2f40>
   13450:	b	13454 <__assert_fail@plt+0x239c>
   13454:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13458:	tst	r0, #1
   1345c:	beq	1346c <__assert_fail@plt+0x23b4>
   13460:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   13464:	strb	r0, [fp, #-63]	; 0xffffffc1
   13468:	b	13c78 <__assert_fail@plt+0x2bc0>
   1346c:	b	13c04 <__assert_fail@plt+0x2b4c>
   13470:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13474:	cmn	r0, #1
   13478:	bne	13490 <__assert_fail@plt+0x23d8>
   1347c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13480:	ldrb	r0, [r0, #1]
   13484:	cmp	r0, #0
   13488:	beq	134a0 <__assert_fail@plt+0x23e8>
   1348c:	b	1349c <__assert_fail@plt+0x23e4>
   13490:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13494:	cmp	r0, #1
   13498:	beq	134a0 <__assert_fail@plt+0x23e8>
   1349c:	b	13c04 <__assert_fail@plt+0x2b4c>
   134a0:	b	134a4 <__assert_fail@plt+0x23ec>
   134a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   134a8:	cmp	r0, #0
   134ac:	beq	134b4 <__assert_fail@plt+0x23fc>
   134b0:	b	13c04 <__assert_fail@plt+0x2b4c>
   134b4:	b	134b8 <__assert_fail@plt+0x2400>
   134b8:	movw	r0, #1
   134bc:	strb	r0, [fp, #-67]	; 0xffffffbd
   134c0:	ldr	r0, [fp, #8]
   134c4:	cmp	r0, #2
   134c8:	bne	134dc <__assert_fail@plt+0x2424>
   134cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   134d0:	tst	r0, #1
   134d4:	beq	134dc <__assert_fail@plt+0x2424>
   134d8:	b	13ff8 <__assert_fail@plt+0x2f40>
   134dc:	b	13c04 <__assert_fail@plt+0x2b4c>
   134e0:	movw	r0, #1
   134e4:	strb	r0, [fp, #-61]	; 0xffffffc3
   134e8:	strb	r0, [fp, #-67]	; 0xffffffbd
   134ec:	ldr	r0, [fp, #8]
   134f0:	cmp	r0, #2
   134f4:	bne	135d4 <__assert_fail@plt+0x251c>
   134f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   134fc:	tst	r0, #1
   13500:	beq	13508 <__assert_fail@plt+0x2450>
   13504:	b	13ff8 <__assert_fail@plt+0x2f40>
   13508:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1350c:	cmp	r0, #0
   13510:	beq	13530 <__assert_fail@plt+0x2478>
   13514:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13518:	cmp	r0, #0
   1351c:	bne	13530 <__assert_fail@plt+0x2478>
   13520:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13524:	str	r0, [fp, #-48]	; 0xffffffd0
   13528:	movw	r0, #0
   1352c:	str	r0, [fp, #-28]	; 0xffffffe4
   13530:	b	13534 <__assert_fail@plt+0x247c>
   13534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13538:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1353c:	cmp	r0, r1
   13540:	bcs	13558 <__assert_fail@plt+0x24a0>
   13544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13548:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1354c:	add	r0, r0, r1
   13550:	movw	r1, #39	; 0x27
   13554:	strb	r1, [r0]
   13558:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1355c:	add	r0, r0, #1
   13560:	str	r0, [fp, #-44]	; 0xffffffd4
   13564:	b	13568 <__assert_fail@plt+0x24b0>
   13568:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1356c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13570:	cmp	r0, r1
   13574:	bcs	1358c <__assert_fail@plt+0x24d4>
   13578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1357c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13580:	add	r0, r0, r1
   13584:	movw	r1, #92	; 0x5c
   13588:	strb	r1, [r0]
   1358c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13590:	add	r0, r0, #1
   13594:	str	r0, [fp, #-44]	; 0xffffffd4
   13598:	b	1359c <__assert_fail@plt+0x24e4>
   1359c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   135a4:	cmp	r0, r1
   135a8:	bcs	135c0 <__assert_fail@plt+0x2508>
   135ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135b4:	add	r0, r0, r1
   135b8:	movw	r1, #39	; 0x27
   135bc:	strb	r1, [r0]
   135c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135c4:	add	r0, r0, #1
   135c8:	str	r0, [fp, #-44]	; 0xffffffd4
   135cc:	movw	r0, #0
   135d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   135d4:	b	13c04 <__assert_fail@plt+0x2b4c>
   135d8:	movw	r0, #1
   135dc:	strb	r0, [fp, #-67]	; 0xffffffbd
   135e0:	b	13c04 <__assert_fail@plt+0x2b4c>
   135e4:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   135e8:	tst	r0, #1
   135ec:	beq	1362c <__assert_fail@plt+0x2574>
   135f0:	mov	r0, #1
   135f4:	str	r0, [fp, #-72]	; 0xffffffb8
   135f8:	bl	10fa4 <__ctype_b_loc@plt>
   135fc:	ldr	r0, [r0]
   13600:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13604:	mov	r2, r1
   13608:	add	r0, r0, r1, lsl #1
   1360c:	ldrh	r0, [r0]
   13610:	and	r0, r0, #16384	; 0x4000
   13614:	cmp	r0, #0
   13618:	movw	r0, #0
   1361c:	movne	r0, #1
   13620:	and	r0, r0, #1
   13624:	strb	r0, [fp, #-73]	; 0xffffffb7
   13628:	b	138b8 <__assert_fail@plt+0x2800>
   1362c:	sub	r0, fp, #84	; 0x54
   13630:	movw	r1, #0
   13634:	and	r1, r1, #255	; 0xff
   13638:	movw	r2, #8
   1363c:	bl	11004 <memset@plt>
   13640:	movw	r0, #0
   13644:	str	r0, [fp, #-72]	; 0xffffffb8
   13648:	movw	r0, #1
   1364c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13650:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13654:	cmn	r0, #1
   13658:	bne	13668 <__assert_fail@plt+0x25b0>
   1365c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13660:	bl	10fc8 <strlen@plt>
   13664:	str	r0, [fp, #-36]	; 0xffffffdc
   13668:	b	1366c <__assert_fail@plt+0x25b4>
   1366c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13670:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13674:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13678:	add	r1, r1, r2
   1367c:	add	r1, r0, r1
   13680:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13684:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13688:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1368c:	add	r2, r2, r3
   13690:	sub	r2, r0, r2
   13694:	add	r0, sp, #88	; 0x58
   13698:	sub	r3, fp, #84	; 0x54
   1369c:	bl	1aa1c <__assert_fail@plt+0x9964>
   136a0:	str	r0, [sp, #84]	; 0x54
   136a4:	ldr	r0, [sp, #84]	; 0x54
   136a8:	cmp	r0, #0
   136ac:	bne	136b4 <__assert_fail@plt+0x25fc>
   136b0:	b	138b4 <__assert_fail@plt+0x27fc>
   136b4:	ldr	r0, [sp, #84]	; 0x54
   136b8:	cmn	r0, #1
   136bc:	bne	136cc <__assert_fail@plt+0x2614>
   136c0:	movw	r0, #0
   136c4:	strb	r0, [fp, #-73]	; 0xffffffb7
   136c8:	b	138b4 <__assert_fail@plt+0x27fc>
   136cc:	ldr	r0, [sp, #84]	; 0x54
   136d0:	cmn	r0, #2
   136d4:	bne	13748 <__assert_fail@plt+0x2690>
   136d8:	movw	r0, #0
   136dc:	strb	r0, [fp, #-73]	; 0xffffffb7
   136e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   136e4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   136e8:	add	r0, r0, r1
   136ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   136f0:	cmp	r0, r1
   136f4:	movw	r0, #0
   136f8:	str	r0, [sp, #24]
   136fc:	bcs	13728 <__assert_fail@plt+0x2670>
   13700:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13704:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13708:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1370c:	add	r1, r1, r2
   13710:	add	r0, r0, r1
   13714:	ldrb	r0, [r0]
   13718:	cmp	r0, #0
   1371c:	movw	r0, #0
   13720:	movne	r0, #1
   13724:	str	r0, [sp, #24]
   13728:	ldr	r0, [sp, #24]
   1372c:	tst	r0, #1
   13730:	beq	13744 <__assert_fail@plt+0x268c>
   13734:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13738:	add	r0, r0, #1
   1373c:	str	r0, [fp, #-72]	; 0xffffffb8
   13740:	b	136e0 <__assert_fail@plt+0x2628>
   13744:	b	138b4 <__assert_fail@plt+0x27fc>
   13748:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1374c:	tst	r0, #1
   13750:	beq	1385c <__assert_fail@plt+0x27a4>
   13754:	ldr	r0, [fp, #8]
   13758:	cmp	r0, #2
   1375c:	bne	1385c <__assert_fail@plt+0x27a4>
   13760:	movw	r0, #1
   13764:	str	r0, [sp, #80]	; 0x50
   13768:	ldr	r0, [sp, #80]	; 0x50
   1376c:	ldr	r1, [sp, #84]	; 0x54
   13770:	cmp	r0, r1
   13774:	bcs	13858 <__assert_fail@plt+0x27a0>
   13778:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1377c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13780:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13784:	add	r1, r1, r2
   13788:	ldr	r2, [sp, #80]	; 0x50
   1378c:	add	r1, r1, r2
   13790:	ldrb	r0, [r0, r1]
   13794:	sub	r0, r0, #91	; 0x5b
   13798:	cmp	r0, #33	; 0x21
   1379c:	str	r0, [sp, #20]
   137a0:	bhi	13840 <__assert_fail@plt+0x2788>
   137a4:	add	r0, pc, #8
   137a8:	ldr	r1, [sp, #20]
   137ac:	ldr	r0, [r0, r1, lsl #2]
   137b0:	mov	pc, r0
   137b4:	andeq	r3, r1, ip, lsr r8
   137b8:	andeq	r3, r1, ip, lsr r8
   137bc:	andeq	r3, r1, r0, asr #16
   137c0:	andeq	r3, r1, ip, lsr r8
   137c4:	andeq	r3, r1, r0, asr #16
   137c8:	andeq	r3, r1, ip, lsr r8
   137cc:	andeq	r3, r1, r0, asr #16
   137d0:	andeq	r3, r1, r0, asr #16
   137d4:	andeq	r3, r1, r0, asr #16
   137d8:	andeq	r3, r1, r0, asr #16
   137dc:	andeq	r3, r1, r0, asr #16
   137e0:	andeq	r3, r1, r0, asr #16
   137e4:	andeq	r3, r1, r0, asr #16
   137e8:	andeq	r3, r1, r0, asr #16
   137ec:	andeq	r3, r1, r0, asr #16
   137f0:	andeq	r3, r1, r0, asr #16
   137f4:	andeq	r3, r1, r0, asr #16
   137f8:	andeq	r3, r1, r0, asr #16
   137fc:	andeq	r3, r1, r0, asr #16
   13800:	andeq	r3, r1, r0, asr #16
   13804:	andeq	r3, r1, r0, asr #16
   13808:	andeq	r3, r1, r0, asr #16
   1380c:	andeq	r3, r1, r0, asr #16
   13810:	andeq	r3, r1, r0, asr #16
   13814:	andeq	r3, r1, r0, asr #16
   13818:	andeq	r3, r1, r0, asr #16
   1381c:	andeq	r3, r1, r0, asr #16
   13820:	andeq	r3, r1, r0, asr #16
   13824:	andeq	r3, r1, r0, asr #16
   13828:	andeq	r3, r1, r0, asr #16
   1382c:	andeq	r3, r1, r0, asr #16
   13830:	andeq	r3, r1, r0, asr #16
   13834:	andeq	r3, r1, r0, asr #16
   13838:	andeq	r3, r1, ip, lsr r8
   1383c:	b	13ff8 <__assert_fail@plt+0x2f40>
   13840:	b	13844 <__assert_fail@plt+0x278c>
   13844:	b	13848 <__assert_fail@plt+0x2790>
   13848:	ldr	r0, [sp, #80]	; 0x50
   1384c:	add	r0, r0, #1
   13850:	str	r0, [sp, #80]	; 0x50
   13854:	b	13768 <__assert_fail@plt+0x26b0>
   13858:	b	1385c <__assert_fail@plt+0x27a4>
   1385c:	ldr	r0, [sp, #88]	; 0x58
   13860:	bl	10f14 <iswprint@plt>
   13864:	cmp	r0, #0
   13868:	bne	13874 <__assert_fail@plt+0x27bc>
   1386c:	movw	r0, #0
   13870:	strb	r0, [fp, #-73]	; 0xffffffb7
   13874:	ldr	r0, [sp, #84]	; 0x54
   13878:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1387c:	add	r0, r1, r0
   13880:	str	r0, [fp, #-72]	; 0xffffffb8
   13884:	b	13888 <__assert_fail@plt+0x27d0>
   13888:	b	1388c <__assert_fail@plt+0x27d4>
   1388c:	b	13890 <__assert_fail@plt+0x27d8>
   13890:	sub	r0, fp, #84	; 0x54
   13894:	bl	10ecc <mbsinit@plt>
   13898:	cmp	r0, #0
   1389c:	movw	r0, #0
   138a0:	movne	r0, #1
   138a4:	mvn	r1, #0
   138a8:	eor	r0, r0, r1
   138ac:	tst	r0, #1
   138b0:	bne	1366c <__assert_fail@plt+0x25b4>
   138b4:	b	138b8 <__assert_fail@plt+0x2800>
   138b8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   138bc:	and	r0, r0, #1
   138c0:	strb	r0, [fp, #-67]	; 0xffffffbd
   138c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   138c8:	movw	r1, #1
   138cc:	cmp	r1, r0
   138d0:	bcc	138ec <__assert_fail@plt+0x2834>
   138d4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   138d8:	tst	r0, #1
   138dc:	beq	13c00 <__assert_fail@plt+0x2b48>
   138e0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   138e4:	tst	r0, #1
   138e8:	bne	13c00 <__assert_fail@plt+0x2b48>
   138ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   138f0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   138f4:	add	r0, r0, r1
   138f8:	str	r0, [sp, #76]	; 0x4c
   138fc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13900:	tst	r0, #1
   13904:	beq	13ab4 <__assert_fail@plt+0x29fc>
   13908:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1390c:	tst	r0, #1
   13910:	bne	13ab4 <__assert_fail@plt+0x29fc>
   13914:	b	13918 <__assert_fail@plt+0x2860>
   13918:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1391c:	tst	r0, #1
   13920:	beq	13928 <__assert_fail@plt+0x2870>
   13924:	b	13ff8 <__assert_fail@plt+0x2f40>
   13928:	movw	r0, #1
   1392c:	strb	r0, [fp, #-66]	; 0xffffffbe
   13930:	ldr	r0, [fp, #8]
   13934:	cmp	r0, #2
   13938:	bne	139ec <__assert_fail@plt+0x2934>
   1393c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13940:	tst	r0, #1
   13944:	bne	139ec <__assert_fail@plt+0x2934>
   13948:	b	1394c <__assert_fail@plt+0x2894>
   1394c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13950:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13954:	cmp	r0, r1
   13958:	bcs	13970 <__assert_fail@plt+0x28b8>
   1395c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13960:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13964:	add	r0, r0, r1
   13968:	movw	r1, #39	; 0x27
   1396c:	strb	r1, [r0]
   13970:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13974:	add	r0, r0, #1
   13978:	str	r0, [fp, #-44]	; 0xffffffd4
   1397c:	b	13980 <__assert_fail@plt+0x28c8>
   13980:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13984:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13988:	cmp	r0, r1
   1398c:	bcs	139a4 <__assert_fail@plt+0x28ec>
   13990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13994:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13998:	add	r0, r0, r1
   1399c:	movw	r1, #36	; 0x24
   139a0:	strb	r1, [r0]
   139a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139a8:	add	r0, r0, #1
   139ac:	str	r0, [fp, #-44]	; 0xffffffd4
   139b0:	b	139b4 <__assert_fail@plt+0x28fc>
   139b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   139bc:	cmp	r0, r1
   139c0:	bcs	139d8 <__assert_fail@plt+0x2920>
   139c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   139cc:	add	r0, r0, r1
   139d0:	movw	r1, #39	; 0x27
   139d4:	strb	r1, [r0]
   139d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139dc:	add	r0, r0, #1
   139e0:	str	r0, [fp, #-44]	; 0xffffffd4
   139e4:	movw	r0, #1
   139e8:	strb	r0, [fp, #-60]	; 0xffffffc4
   139ec:	b	139f0 <__assert_fail@plt+0x2938>
   139f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   139f8:	cmp	r0, r1
   139fc:	bcs	13a14 <__assert_fail@plt+0x295c>
   13a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a08:	add	r0, r0, r1
   13a0c:	movw	r1, #92	; 0x5c
   13a10:	strb	r1, [r0]
   13a14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a18:	add	r0, r0, #1
   13a1c:	str	r0, [fp, #-44]	; 0xffffffd4
   13a20:	b	13a24 <__assert_fail@plt+0x296c>
   13a24:	b	13a28 <__assert_fail@plt+0x2970>
   13a28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a30:	cmp	r0, r1
   13a34:	bcs	13a54 <__assert_fail@plt+0x299c>
   13a38:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13a3c:	asr	r0, r0, #6
   13a40:	add	r0, r0, #48	; 0x30
   13a44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13a48:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13a4c:	add	r1, r1, r2
   13a50:	strb	r0, [r1]
   13a54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a58:	add	r0, r0, #1
   13a5c:	str	r0, [fp, #-44]	; 0xffffffd4
   13a60:	b	13a64 <__assert_fail@plt+0x29ac>
   13a64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a6c:	cmp	r0, r1
   13a70:	bcs	13a94 <__assert_fail@plt+0x29dc>
   13a74:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13a78:	asr	r0, r0, #3
   13a7c:	and	r0, r0, #7
   13a80:	add	r0, r0, #48	; 0x30
   13a84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13a88:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13a8c:	add	r1, r1, r2
   13a90:	strb	r0, [r1]
   13a94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a98:	add	r0, r0, #1
   13a9c:	str	r0, [fp, #-44]	; 0xffffffd4
   13aa0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13aa4:	and	r0, r0, #7
   13aa8:	add	r0, r0, #48	; 0x30
   13aac:	strb	r0, [fp, #-63]	; 0xffffffc1
   13ab0:	b	13b00 <__assert_fail@plt+0x2a48>
   13ab4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13ab8:	tst	r0, #1
   13abc:	beq	13afc <__assert_fail@plt+0x2a44>
   13ac0:	b	13ac4 <__assert_fail@plt+0x2a0c>
   13ac4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ac8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13acc:	cmp	r0, r1
   13ad0:	bcs	13ae8 <__assert_fail@plt+0x2a30>
   13ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ad8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13adc:	add	r0, r0, r1
   13ae0:	movw	r1, #92	; 0x5c
   13ae4:	strb	r1, [r0]
   13ae8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13aec:	add	r0, r0, #1
   13af0:	str	r0, [fp, #-44]	; 0xffffffd4
   13af4:	movw	r0, #0
   13af8:	strb	r0, [fp, #-65]	; 0xffffffbf
   13afc:	b	13b00 <__assert_fail@plt+0x2a48>
   13b00:	ldr	r0, [sp, #76]	; 0x4c
   13b04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13b08:	add	r1, r1, #1
   13b0c:	cmp	r0, r1
   13b10:	bhi	13b18 <__assert_fail@plt+0x2a60>
   13b14:	b	13bfc <__assert_fail@plt+0x2b44>
   13b18:	b	13b1c <__assert_fail@plt+0x2a64>
   13b1c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13b20:	tst	r0, #1
   13b24:	beq	13ba4 <__assert_fail@plt+0x2aec>
   13b28:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13b2c:	tst	r0, #1
   13b30:	bne	13ba4 <__assert_fail@plt+0x2aec>
   13b34:	b	13b38 <__assert_fail@plt+0x2a80>
   13b38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b40:	cmp	r0, r1
   13b44:	bcs	13b5c <__assert_fail@plt+0x2aa4>
   13b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13b50:	add	r0, r0, r1
   13b54:	movw	r1, #39	; 0x27
   13b58:	strb	r1, [r0]
   13b5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b60:	add	r0, r0, #1
   13b64:	str	r0, [fp, #-44]	; 0xffffffd4
   13b68:	b	13b6c <__assert_fail@plt+0x2ab4>
   13b6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b74:	cmp	r0, r1
   13b78:	bcs	13b90 <__assert_fail@plt+0x2ad8>
   13b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13b84:	add	r0, r0, r1
   13b88:	movw	r1, #39	; 0x27
   13b8c:	strb	r1, [r0]
   13b90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b94:	add	r0, r0, #1
   13b98:	str	r0, [fp, #-44]	; 0xffffffd4
   13b9c:	movw	r0, #0
   13ba0:	strb	r0, [fp, #-60]	; 0xffffffc4
   13ba4:	b	13ba8 <__assert_fail@plt+0x2af0>
   13ba8:	b	13bac <__assert_fail@plt+0x2af4>
   13bac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13bb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13bb4:	cmp	r0, r1
   13bb8:	bcs	13bd0 <__assert_fail@plt+0x2b18>
   13bbc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13bc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13bc4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13bc8:	add	r1, r1, r2
   13bcc:	strb	r0, [r1]
   13bd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13bd4:	add	r0, r0, #1
   13bd8:	str	r0, [fp, #-44]	; 0xffffffd4
   13bdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13be0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13be4:	add	r1, r1, #1
   13be8:	str	r1, [fp, #-40]	; 0xffffffd8
   13bec:	add	r0, r0, r1
   13bf0:	ldrb	r0, [r0]
   13bf4:	strb	r0, [fp, #-63]	; 0xffffffc1
   13bf8:	b	138fc <__assert_fail@plt+0x2844>
   13bfc:	b	13d8c <__assert_fail@plt+0x2cd4>
   13c00:	b	13c04 <__assert_fail@plt+0x2b4c>
   13c04:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13c08:	tst	r0, #1
   13c0c:	beq	13c1c <__assert_fail@plt+0x2b64>
   13c10:	ldr	r0, [fp, #8]
   13c14:	cmp	r0, #2
   13c18:	bne	13c28 <__assert_fail@plt+0x2b70>
   13c1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c20:	tst	r0, #1
   13c24:	beq	13c64 <__assert_fail@plt+0x2bac>
   13c28:	ldr	r0, [fp, #16]
   13c2c:	movw	r1, #0
   13c30:	cmp	r0, r1
   13c34:	beq	13c64 <__assert_fail@plt+0x2bac>
   13c38:	ldr	r0, [fp, #16]
   13c3c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13c40:	lsr	r1, r1, #5
   13c44:	add	r0, r0, r1, lsl #2
   13c48:	ldr	r0, [r0]
   13c4c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13c50:	and	r1, r1, #31
   13c54:	lsr	r0, r0, r1
   13c58:	and	r0, r0, #1
   13c5c:	cmp	r0, #0
   13c60:	bne	13c74 <__assert_fail@plt+0x2bbc>
   13c64:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13c68:	tst	r0, #1
   13c6c:	bne	13c74 <__assert_fail@plt+0x2bbc>
   13c70:	b	13d8c <__assert_fail@plt+0x2cd4>
   13c74:	b	13c78 <__assert_fail@plt+0x2bc0>
   13c78:	b	13c7c <__assert_fail@plt+0x2bc4>
   13c7c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c80:	tst	r0, #1
   13c84:	beq	13c8c <__assert_fail@plt+0x2bd4>
   13c88:	b	13ff8 <__assert_fail@plt+0x2f40>
   13c8c:	movw	r0, #1
   13c90:	strb	r0, [fp, #-66]	; 0xffffffbe
   13c94:	ldr	r0, [fp, #8]
   13c98:	cmp	r0, #2
   13c9c:	bne	13d50 <__assert_fail@plt+0x2c98>
   13ca0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13ca4:	tst	r0, #1
   13ca8:	bne	13d50 <__assert_fail@plt+0x2c98>
   13cac:	b	13cb0 <__assert_fail@plt+0x2bf8>
   13cb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cb8:	cmp	r0, r1
   13cbc:	bcs	13cd4 <__assert_fail@plt+0x2c1c>
   13cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cc8:	add	r0, r0, r1
   13ccc:	movw	r1, #39	; 0x27
   13cd0:	strb	r1, [r0]
   13cd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cd8:	add	r0, r0, #1
   13cdc:	str	r0, [fp, #-44]	; 0xffffffd4
   13ce0:	b	13ce4 <__assert_fail@plt+0x2c2c>
   13ce4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ce8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cec:	cmp	r0, r1
   13cf0:	bcs	13d08 <__assert_fail@plt+0x2c50>
   13cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cfc:	add	r0, r0, r1
   13d00:	movw	r1, #36	; 0x24
   13d04:	strb	r1, [r0]
   13d08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d0c:	add	r0, r0, #1
   13d10:	str	r0, [fp, #-44]	; 0xffffffd4
   13d14:	b	13d18 <__assert_fail@plt+0x2c60>
   13d18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d20:	cmp	r0, r1
   13d24:	bcs	13d3c <__assert_fail@plt+0x2c84>
   13d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d30:	add	r0, r0, r1
   13d34:	movw	r1, #39	; 0x27
   13d38:	strb	r1, [r0]
   13d3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d40:	add	r0, r0, #1
   13d44:	str	r0, [fp, #-44]	; 0xffffffd4
   13d48:	movw	r0, #1
   13d4c:	strb	r0, [fp, #-60]	; 0xffffffc4
   13d50:	b	13d54 <__assert_fail@plt+0x2c9c>
   13d54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d5c:	cmp	r0, r1
   13d60:	bcs	13d78 <__assert_fail@plt+0x2cc0>
   13d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d6c:	add	r0, r0, r1
   13d70:	movw	r1, #92	; 0x5c
   13d74:	strb	r1, [r0]
   13d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d7c:	add	r0, r0, #1
   13d80:	str	r0, [fp, #-44]	; 0xffffffd4
   13d84:	b	13d88 <__assert_fail@plt+0x2cd0>
   13d88:	b	13d8c <__assert_fail@plt+0x2cd4>
   13d8c:	b	13d90 <__assert_fail@plt+0x2cd8>
   13d90:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13d94:	tst	r0, #1
   13d98:	beq	13e18 <__assert_fail@plt+0x2d60>
   13d9c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13da0:	tst	r0, #1
   13da4:	bne	13e18 <__assert_fail@plt+0x2d60>
   13da8:	b	13dac <__assert_fail@plt+0x2cf4>
   13dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13db0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13db4:	cmp	r0, r1
   13db8:	bcs	13dd0 <__assert_fail@plt+0x2d18>
   13dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13dc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13dc4:	add	r0, r0, r1
   13dc8:	movw	r1, #39	; 0x27
   13dcc:	strb	r1, [r0]
   13dd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13dd4:	add	r0, r0, #1
   13dd8:	str	r0, [fp, #-44]	; 0xffffffd4
   13ddc:	b	13de0 <__assert_fail@plt+0x2d28>
   13de0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13de4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13de8:	cmp	r0, r1
   13dec:	bcs	13e04 <__assert_fail@plt+0x2d4c>
   13df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13df4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13df8:	add	r0, r0, r1
   13dfc:	movw	r1, #39	; 0x27
   13e00:	strb	r1, [r0]
   13e04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e08:	add	r0, r0, #1
   13e0c:	str	r0, [fp, #-44]	; 0xffffffd4
   13e10:	movw	r0, #0
   13e14:	strb	r0, [fp, #-60]	; 0xffffffc4
   13e18:	b	13e1c <__assert_fail@plt+0x2d64>
   13e1c:	b	13e20 <__assert_fail@plt+0x2d68>
   13e20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e28:	cmp	r0, r1
   13e2c:	bcs	13e44 <__assert_fail@plt+0x2d8c>
   13e30:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13e34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13e38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13e3c:	add	r1, r1, r2
   13e40:	strb	r0, [r1]
   13e44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e48:	add	r0, r0, #1
   13e4c:	str	r0, [fp, #-44]	; 0xffffffd4
   13e50:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   13e54:	tst	r0, #1
   13e58:	bne	13e64 <__assert_fail@plt+0x2dac>
   13e5c:	movw	r0, #0
   13e60:	strb	r0, [fp, #-62]	; 0xffffffc2
   13e64:	b	13e68 <__assert_fail@plt+0x2db0>
   13e68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e6c:	add	r0, r0, #1
   13e70:	str	r0, [fp, #-40]	; 0xffffffd8
   13e74:	b	12c20 <__assert_fail@plt+0x1b68>
   13e78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e7c:	cmp	r0, #0
   13e80:	bne	13ea0 <__assert_fail@plt+0x2de8>
   13e84:	ldr	r0, [fp, #8]
   13e88:	cmp	r0, #2
   13e8c:	bne	13ea0 <__assert_fail@plt+0x2de8>
   13e90:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13e94:	tst	r0, #1
   13e98:	beq	13ea0 <__assert_fail@plt+0x2de8>
   13e9c:	b	13ff8 <__assert_fail@plt+0x2f40>
   13ea0:	ldr	r0, [fp, #8]
   13ea4:	cmp	r0, #2
   13ea8:	bne	13f48 <__assert_fail@plt+0x2e90>
   13eac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13eb0:	tst	r0, #1
   13eb4:	bne	13f48 <__assert_fail@plt+0x2e90>
   13eb8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   13ebc:	tst	r0, #1
   13ec0:	beq	13f48 <__assert_fail@plt+0x2e90>
   13ec4:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   13ec8:	tst	r0, #1
   13ecc:	beq	13f14 <__assert_fail@plt+0x2e5c>
   13ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ed4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13ed8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13edc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13ee0:	ldr	ip, [fp, #12]
   13ee4:	ldr	lr, [fp, #16]
   13ee8:	ldr	r4, [fp, #20]
   13eec:	ldr	r5, [fp, #24]
   13ef0:	movw	r6, #5
   13ef4:	str	r6, [sp]
   13ef8:	str	ip, [sp, #4]
   13efc:	str	lr, [sp, #8]
   13f00:	str	r4, [sp, #12]
   13f04:	str	r5, [sp, #16]
   13f08:	bl	12938 <__assert_fail@plt+0x1880>
   13f0c:	str	r0, [fp, #-20]	; 0xffffffec
   13f10:	b	14060 <__assert_fail@plt+0x2fa8>
   13f14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13f18:	cmp	r0, #0
   13f1c:	bne	13f40 <__assert_fail@plt+0x2e88>
   13f20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f24:	cmp	r0, #0
   13f28:	beq	13f40 <__assert_fail@plt+0x2e88>
   13f2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f30:	str	r0, [fp, #-28]	; 0xffffffe4
   13f34:	movw	r0, #0
   13f38:	str	r0, [fp, #-44]	; 0xffffffd4
   13f3c:	b	129e0 <__assert_fail@plt+0x1928>
   13f40:	b	13f44 <__assert_fail@plt+0x2e8c>
   13f44:	b	13f48 <__assert_fail@plt+0x2e90>
   13f48:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13f4c:	movw	r1, #0
   13f50:	cmp	r0, r1
   13f54:	beq	13fc8 <__assert_fail@plt+0x2f10>
   13f58:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13f5c:	tst	r0, #1
   13f60:	bne	13fc8 <__assert_fail@plt+0x2f10>
   13f64:	b	13f68 <__assert_fail@plt+0x2eb0>
   13f68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13f6c:	ldrsb	r0, [r0]
   13f70:	cmp	r0, #0
   13f74:	beq	13fc4 <__assert_fail@plt+0x2f0c>
   13f78:	b	13f7c <__assert_fail@plt+0x2ec4>
   13f7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f84:	cmp	r0, r1
   13f88:	bcs	13fa4 <__assert_fail@plt+0x2eec>
   13f8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13f90:	ldrb	r0, [r0]
   13f94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13f98:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13f9c:	add	r1, r1, r2
   13fa0:	strb	r0, [r1]
   13fa4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fa8:	add	r0, r0, #1
   13fac:	str	r0, [fp, #-44]	; 0xffffffd4
   13fb0:	b	13fb4 <__assert_fail@plt+0x2efc>
   13fb4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13fb8:	add	r0, r0, #1
   13fbc:	str	r0, [fp, #-52]	; 0xffffffcc
   13fc0:	b	13f68 <__assert_fail@plt+0x2eb0>
   13fc4:	b	13fc8 <__assert_fail@plt+0x2f10>
   13fc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fd0:	cmp	r0, r1
   13fd4:	bcs	13fec <__assert_fail@plt+0x2f34>
   13fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13fe0:	add	r0, r0, r1
   13fe4:	movw	r1, #0
   13fe8:	strb	r1, [r0]
   13fec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ff0:	str	r0, [fp, #-20]	; 0xffffffec
   13ff4:	b	14060 <__assert_fail@plt+0x2fa8>
   13ff8:	ldr	r0, [fp, #8]
   13ffc:	cmp	r0, #2
   14000:	bne	14018 <__assert_fail@plt+0x2f60>
   14004:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14008:	tst	r0, #1
   1400c:	beq	14018 <__assert_fail@plt+0x2f60>
   14010:	movw	r0, #4
   14014:	str	r0, [fp, #8]
   14018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1401c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14020:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14024:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14028:	ldr	ip, [fp, #8]
   1402c:	ldr	lr, [fp, #12]
   14030:	mvn	r4, #2
   14034:	and	lr, lr, r4
   14038:	ldr	r4, [fp, #20]
   1403c:	ldr	r5, [fp, #24]
   14040:	str	ip, [sp]
   14044:	str	lr, [sp, #4]
   14048:	movw	ip, #0
   1404c:	str	ip, [sp, #8]
   14050:	str	r4, [sp, #12]
   14054:	str	r5, [sp, #16]
   14058:	bl	12938 <__assert_fail@plt+0x1880>
   1405c:	str	r0, [fp, #-20]	; 0xffffffec
   14060:	ldr	r0, [fp, #-20]	; 0xffffffec
   14064:	sub	sp, fp, #16
   14068:	pop	{r4, r5, r6, sl, fp, pc}
   1406c:	push	{fp, lr}
   14070:	mov	fp, sp
   14074:	sub	sp, sp, #16
   14078:	str	r0, [fp, #-4]
   1407c:	str	r1, [sp, #8]
   14080:	str	r2, [sp, #4]
   14084:	ldr	r0, [fp, #-4]
   14088:	ldr	r1, [sp, #8]
   1408c:	ldr	r3, [sp, #4]
   14090:	movw	r2, #0
   14094:	bl	140a0 <__assert_fail@plt+0x2fe8>
   14098:	mov	sp, fp
   1409c:	pop	{fp, pc}
   140a0:	push	{r4, r5, r6, sl, fp, lr}
   140a4:	add	fp, sp, #16
   140a8:	sub	sp, sp, #80	; 0x50
   140ac:	str	r0, [fp, #-20]	; 0xffffffec
   140b0:	str	r1, [fp, #-24]	; 0xffffffe8
   140b4:	str	r2, [fp, #-28]	; 0xffffffe4
   140b8:	str	r3, [fp, #-32]	; 0xffffffe0
   140bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   140c0:	movw	r1, #0
   140c4:	cmp	r0, r1
   140c8:	beq	140d8 <__assert_fail@plt+0x3020>
   140cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   140d0:	str	r0, [sp, #40]	; 0x28
   140d4:	b	140e8 <__assert_fail@plt+0x3030>
   140d8:	movw	r0, #57720	; 0xe178
   140dc:	movt	r0, #2
   140e0:	str	r0, [sp, #40]	; 0x28
   140e4:	b	140e8 <__assert_fail@plt+0x3030>
   140e8:	ldr	r0, [sp, #40]	; 0x28
   140ec:	str	r0, [fp, #-36]	; 0xffffffdc
   140f0:	bl	10fec <__errno_location@plt>
   140f4:	ldr	r0, [r0]
   140f8:	str	r0, [fp, #-40]	; 0xffffffd8
   140fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14100:	ldr	r0, [r0, #4]
   14104:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14108:	movw	r2, #0
   1410c:	cmp	r1, r2
   14110:	movw	r1, #0
   14114:	movne	r1, #1
   14118:	tst	r1, #1
   1411c:	mov	r1, r2
   14120:	moveq	r1, #1
   14124:	orr	r0, r0, r1
   14128:	str	r0, [fp, #-44]	; 0xffffffd4
   1412c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14134:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14138:	ldr	r1, [r1]
   1413c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14140:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14144:	add	lr, lr, #8
   14148:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1414c:	ldr	r4, [r4, #40]	; 0x28
   14150:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14154:	ldr	r5, [r5, #44]	; 0x2c
   14158:	str	r0, [sp, #36]	; 0x24
   1415c:	mov	r0, r2
   14160:	str	r1, [sp, #32]
   14164:	mov	r1, r2
   14168:	ldr	r2, [sp, #36]	; 0x24
   1416c:	ldr	r6, [sp, #32]
   14170:	str	r6, [sp]
   14174:	str	ip, [sp, #4]
   14178:	str	lr, [sp, #8]
   1417c:	str	r4, [sp, #12]
   14180:	str	r5, [sp, #16]
   14184:	bl	12938 <__assert_fail@plt+0x1880>
   14188:	add	r0, r0, #1
   1418c:	str	r0, [sp, #48]	; 0x30
   14190:	ldr	r0, [sp, #48]	; 0x30
   14194:	bl	15584 <__assert_fail@plt+0x44cc>
   14198:	str	r0, [sp, #44]	; 0x2c
   1419c:	ldr	r0, [sp, #44]	; 0x2c
   141a0:	ldr	r1, [sp, #48]	; 0x30
   141a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   141a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   141ac:	ldr	ip, [fp, #-36]	; 0xffffffdc
   141b0:	ldr	ip, [ip]
   141b4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   141b8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   141bc:	add	r4, r4, #8
   141c0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   141c4:	ldr	r5, [r5, #40]	; 0x28
   141c8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   141cc:	ldr	r6, [r6, #44]	; 0x2c
   141d0:	str	ip, [sp]
   141d4:	str	lr, [sp, #4]
   141d8:	str	r4, [sp, #8]
   141dc:	str	r5, [sp, #12]
   141e0:	str	r6, [sp, #16]
   141e4:	bl	12938 <__assert_fail@plt+0x1880>
   141e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   141ec:	str	r0, [sp, #28]
   141f0:	str	r1, [sp, #24]
   141f4:	bl	10fec <__errno_location@plt>
   141f8:	ldr	r1, [sp, #24]
   141fc:	str	r1, [r0]
   14200:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14204:	movw	r2, #0
   14208:	cmp	r0, r2
   1420c:	beq	14220 <__assert_fail@plt+0x3168>
   14210:	ldr	r0, [sp, #48]	; 0x30
   14214:	sub	r0, r0, #1
   14218:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1421c:	str	r0, [r1]
   14220:	ldr	r0, [sp, #44]	; 0x2c
   14224:	sub	sp, fp, #16
   14228:	pop	{r4, r5, r6, sl, fp, pc}
   1422c:	push	{fp, lr}
   14230:	mov	fp, sp
   14234:	sub	sp, sp, #8
   14238:	movw	r0, #57588	; 0xe0f4
   1423c:	movt	r0, #2
   14240:	ldr	r0, [r0]
   14244:	str	r0, [sp, #4]
   14248:	movw	r0, #1
   1424c:	str	r0, [sp]
   14250:	ldr	r0, [sp]
   14254:	movw	r1, #57592	; 0xe0f8
   14258:	movt	r1, #2
   1425c:	ldr	r1, [r1]
   14260:	cmp	r0, r1
   14264:	bge	1428c <__assert_fail@plt+0x31d4>
   14268:	ldr	r0, [sp, #4]
   1426c:	ldr	r1, [sp]
   14270:	add	r0, r0, r1, lsl #3
   14274:	ldr	r0, [r0, #4]
   14278:	bl	1a7ac <__assert_fail@plt+0x96f4>
   1427c:	ldr	r0, [sp]
   14280:	add	r0, r0, #1
   14284:	str	r0, [sp]
   14288:	b	14250 <__assert_fail@plt+0x3198>
   1428c:	ldr	r0, [sp, #4]
   14290:	ldr	r0, [r0, #4]
   14294:	movw	r1, #57768	; 0xe1a8
   14298:	movt	r1, #2
   1429c:	cmp	r0, r1
   142a0:	beq	142cc <__assert_fail@plt+0x3214>
   142a4:	ldr	r0, [sp, #4]
   142a8:	ldr	r0, [r0, #4]
   142ac:	bl	1a7ac <__assert_fail@plt+0x96f4>
   142b0:	movw	r0, #256	; 0x100
   142b4:	movw	r1, #57596	; 0xe0fc
   142b8:	movt	r1, #2
   142bc:	str	r0, [r1]
   142c0:	movw	r0, #57768	; 0xe1a8
   142c4:	movt	r0, #2
   142c8:	str	r0, [r1, #4]
   142cc:	ldr	r0, [sp, #4]
   142d0:	movw	r1, #57596	; 0xe0fc
   142d4:	movt	r1, #2
   142d8:	cmp	r0, r1
   142dc:	beq	142fc <__assert_fail@plt+0x3244>
   142e0:	ldr	r0, [sp, #4]
   142e4:	bl	1a7ac <__assert_fail@plt+0x96f4>
   142e8:	movw	r0, #57588	; 0xe0f4
   142ec:	movt	r0, #2
   142f0:	movw	r1, #57596	; 0xe0fc
   142f4:	movt	r1, #2
   142f8:	str	r1, [r0]
   142fc:	movw	r0, #57592	; 0xe0f8
   14300:	movt	r0, #2
   14304:	movw	r1, #1
   14308:	str	r1, [r0]
   1430c:	mov	sp, fp
   14310:	pop	{fp, pc}
   14314:	push	{fp, lr}
   14318:	mov	fp, sp
   1431c:	sub	sp, sp, #8
   14320:	str	r0, [sp, #4]
   14324:	str	r1, [sp]
   14328:	ldr	r0, [sp, #4]
   1432c:	ldr	r1, [sp]
   14330:	mvn	r2, #0
   14334:	movw	r3, #57720	; 0xe178
   14338:	movt	r3, #2
   1433c:	bl	14348 <__assert_fail@plt+0x3290>
   14340:	mov	sp, fp
   14344:	pop	{fp, pc}
   14348:	push	{r4, r5, r6, sl, fp, lr}
   1434c:	add	fp, sp, #16
   14350:	sub	sp, sp, #80	; 0x50
   14354:	str	r0, [fp, #-20]	; 0xffffffec
   14358:	str	r1, [fp, #-24]	; 0xffffffe8
   1435c:	str	r2, [fp, #-28]	; 0xffffffe4
   14360:	str	r3, [fp, #-32]	; 0xffffffe0
   14364:	bl	10fec <__errno_location@plt>
   14368:	ldr	r1, [pc, #672]	; 14610 <__assert_fail@plt+0x3558>
   1436c:	ldr	r0, [r0]
   14370:	str	r0, [fp, #-36]	; 0xffffffdc
   14374:	movw	r0, #57588	; 0xe0f4
   14378:	movt	r0, #2
   1437c:	ldr	r0, [r0]
   14380:	str	r0, [fp, #-40]	; 0xffffffd8
   14384:	str	r1, [fp, #-44]	; 0xffffffd4
   14388:	ldr	r0, [fp, #-20]	; 0xffffffec
   1438c:	movw	r1, #0
   14390:	cmp	r1, r0
   14394:	bgt	143a8 <__assert_fail@plt+0x32f0>
   14398:	ldr	r0, [fp, #-20]	; 0xffffffec
   1439c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   143a0:	cmp	r0, r1
   143a4:	blt	143ac <__assert_fail@plt+0x32f4>
   143a8:	bl	110a0 <abort@plt>
   143ac:	movw	r0, #57592	; 0xe0f8
   143b0:	movt	r0, #2
   143b4:	ldr	r0, [r0]
   143b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   143bc:	cmp	r0, r1
   143c0:	bgt	144b8 <__assert_fail@plt+0x3400>
   143c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   143c8:	movw	r1, #57596	; 0xe0fc
   143cc:	movt	r1, #2
   143d0:	cmp	r0, r1
   143d4:	movw	r0, #0
   143d8:	moveq	r0, #1
   143dc:	and	r0, r0, #1
   143e0:	strb	r0, [fp, #-45]	; 0xffffffd3
   143e4:	movw	r0, #57592	; 0xe0f8
   143e8:	movt	r0, #2
   143ec:	ldr	r0, [r0]
   143f0:	str	r0, [sp, #44]	; 0x2c
   143f4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   143f8:	tst	r0, #1
   143fc:	beq	1440c <__assert_fail@plt+0x3354>
   14400:	movw	r0, #0
   14404:	str	r0, [sp, #24]
   14408:	b	14414 <__assert_fail@plt+0x335c>
   1440c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14410:	str	r0, [sp, #24]
   14414:	ldr	r0, [sp, #24]
   14418:	ldr	r1, [fp, #-20]	; 0xffffffec
   1441c:	movw	r2, #57592	; 0xe0f8
   14420:	movt	r2, #2
   14424:	ldr	r2, [r2]
   14428:	sub	r1, r1, r2
   1442c:	add	r2, r1, #1
   14430:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14434:	add	r1, sp, #44	; 0x2c
   14438:	movw	ip, #8
   1443c:	str	ip, [sp]
   14440:	bl	157c0 <__assert_fail@plt+0x4708>
   14444:	str	r0, [fp, #-40]	; 0xffffffd8
   14448:	movw	r1, #57588	; 0xe0f4
   1444c:	movt	r1, #2
   14450:	str	r0, [r1]
   14454:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14458:	tst	r0, #1
   1445c:	beq	1447c <__assert_fail@plt+0x33c4>
   14460:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14464:	movw	r1, #57596	; 0xe0fc
   14468:	movt	r1, #2
   1446c:	ldr	r2, [r1]
   14470:	str	r2, [r0]
   14474:	ldr	r1, [r1, #4]
   14478:	str	r1, [r0, #4]
   1447c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14480:	movw	r1, #57592	; 0xe0f8
   14484:	movt	r1, #2
   14488:	ldr	r1, [r1]
   1448c:	add	r0, r0, r1, lsl #3
   14490:	ldr	r2, [sp, #44]	; 0x2c
   14494:	sub	r1, r2, r1
   14498:	lsl	r2, r1, #3
   1449c:	movw	r1, #0
   144a0:	and	r1, r1, #255	; 0xff
   144a4:	bl	11004 <memset@plt>
   144a8:	ldr	r0, [sp, #44]	; 0x2c
   144ac:	movw	r1, #57592	; 0xe0f8
   144b0:	movt	r1, #2
   144b4:	str	r0, [r1]
   144b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   144c0:	ldr	r0, [r0, r1, lsl #3]
   144c4:	str	r0, [sp, #40]	; 0x28
   144c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   144d0:	add	r0, r0, r1, lsl #3
   144d4:	ldr	r0, [r0, #4]
   144d8:	str	r0, [sp, #36]	; 0x24
   144dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144e0:	ldr	r0, [r0, #4]
   144e4:	orr	r0, r0, #1
   144e8:	str	r0, [sp, #32]
   144ec:	ldr	r0, [sp, #36]	; 0x24
   144f0:	ldr	r1, [sp, #40]	; 0x28
   144f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   144f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144fc:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14500:	ldr	ip, [ip]
   14504:	ldr	lr, [sp, #32]
   14508:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1450c:	add	r4, r4, #8
   14510:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14514:	ldr	r5, [r5, #40]	; 0x28
   14518:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1451c:	ldr	r6, [r6, #44]	; 0x2c
   14520:	str	ip, [sp]
   14524:	str	lr, [sp, #4]
   14528:	str	r4, [sp, #8]
   1452c:	str	r5, [sp, #12]
   14530:	str	r6, [sp, #16]
   14534:	bl	12938 <__assert_fail@plt+0x1880>
   14538:	str	r0, [sp, #28]
   1453c:	ldr	r0, [sp, #40]	; 0x28
   14540:	ldr	r1, [sp, #28]
   14544:	cmp	r0, r1
   14548:	bhi	145f0 <__assert_fail@plt+0x3538>
   1454c:	ldr	r0, [sp, #28]
   14550:	add	r0, r0, #1
   14554:	str	r0, [sp, #40]	; 0x28
   14558:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1455c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14560:	add	r1, r1, r2, lsl #3
   14564:	str	r0, [r1]
   14568:	ldr	r0, [sp, #36]	; 0x24
   1456c:	movw	r1, #57768	; 0xe1a8
   14570:	movt	r1, #2
   14574:	cmp	r0, r1
   14578:	beq	14584 <__assert_fail@plt+0x34cc>
   1457c:	ldr	r0, [sp, #36]	; 0x24
   14580:	bl	1a7ac <__assert_fail@plt+0x96f4>
   14584:	ldr	r0, [sp, #40]	; 0x28
   14588:	bl	15584 <__assert_fail@plt+0x44cc>
   1458c:	mov	r1, r0
   14590:	str	r0, [sp, #36]	; 0x24
   14594:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14598:	ldr	r2, [fp, #-20]	; 0xffffffec
   1459c:	add	r0, r0, r2, lsl #3
   145a0:	str	r1, [r0, #4]
   145a4:	ldr	r0, [sp, #36]	; 0x24
   145a8:	ldr	r1, [sp, #40]	; 0x28
   145ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   145b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   145b4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   145b8:	ldr	ip, [ip]
   145bc:	ldr	lr, [sp, #32]
   145c0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   145c4:	add	r4, r4, #8
   145c8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   145cc:	ldr	r5, [r5, #40]	; 0x28
   145d0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   145d4:	ldr	r6, [r6, #44]	; 0x2c
   145d8:	str	ip, [sp]
   145dc:	str	lr, [sp, #4]
   145e0:	str	r4, [sp, #8]
   145e4:	str	r5, [sp, #12]
   145e8:	str	r6, [sp, #16]
   145ec:	bl	12938 <__assert_fail@plt+0x1880>
   145f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   145f4:	str	r0, [sp, #20]
   145f8:	bl	10fec <__errno_location@plt>
   145fc:	ldr	r1, [sp, #20]
   14600:	str	r1, [r0]
   14604:	ldr	r0, [sp, #36]	; 0x24
   14608:	sub	sp, fp, #16
   1460c:	pop	{r4, r5, r6, sl, fp, pc}
   14610:	svcvc	0x00ffffff
   14614:	push	{fp, lr}
   14618:	mov	fp, sp
   1461c:	sub	sp, sp, #16
   14620:	str	r0, [fp, #-4]
   14624:	str	r1, [sp, #8]
   14628:	str	r2, [sp, #4]
   1462c:	ldr	r0, [fp, #-4]
   14630:	ldr	r1, [sp, #8]
   14634:	ldr	r2, [sp, #4]
   14638:	movw	r3, #57720	; 0xe178
   1463c:	movt	r3, #2
   14640:	bl	14348 <__assert_fail@plt+0x3290>
   14644:	mov	sp, fp
   14648:	pop	{fp, pc}
   1464c:	push	{fp, lr}
   14650:	mov	fp, sp
   14654:	sub	sp, sp, #8
   14658:	str	r0, [sp, #4]
   1465c:	ldr	r1, [sp, #4]
   14660:	movw	r0, #0
   14664:	bl	14314 <__assert_fail@plt+0x325c>
   14668:	mov	sp, fp
   1466c:	pop	{fp, pc}
   14670:	push	{fp, lr}
   14674:	mov	fp, sp
   14678:	sub	sp, sp, #8
   1467c:	str	r0, [sp, #4]
   14680:	str	r1, [sp]
   14684:	ldr	r1, [sp, #4]
   14688:	ldr	r2, [sp]
   1468c:	movw	r0, #0
   14690:	bl	14614 <__assert_fail@plt+0x355c>
   14694:	mov	sp, fp
   14698:	pop	{fp, pc}
   1469c:	push	{fp, lr}
   146a0:	mov	fp, sp
   146a4:	sub	sp, sp, #64	; 0x40
   146a8:	str	r0, [fp, #-4]
   146ac:	str	r1, [fp, #-8]
   146b0:	str	r2, [fp, #-12]
   146b4:	ldr	r1, [fp, #-8]
   146b8:	add	r0, sp, #4
   146bc:	bl	146dc <__assert_fail@plt+0x3624>
   146c0:	ldr	r0, [fp, #-4]
   146c4:	ldr	r1, [fp, #-12]
   146c8:	mvn	r2, #0
   146cc:	add	r3, sp, #4
   146d0:	bl	14348 <__assert_fail@plt+0x3290>
   146d4:	mov	sp, fp
   146d8:	pop	{fp, pc}
   146dc:	push	{fp, lr}
   146e0:	mov	fp, sp
   146e4:	sub	sp, sp, #8
   146e8:	str	r1, [sp, #4]
   146ec:	mov	r1, r0
   146f0:	str	r0, [sp]
   146f4:	mov	r0, r1
   146f8:	movw	r1, #0
   146fc:	and	r1, r1, #255	; 0xff
   14700:	movw	r2, #48	; 0x30
   14704:	bl	11004 <memset@plt>
   14708:	ldr	r0, [sp, #4]
   1470c:	cmp	r0, #10
   14710:	bne	14718 <__assert_fail@plt+0x3660>
   14714:	bl	110a0 <abort@plt>
   14718:	ldr	r0, [sp, #4]
   1471c:	ldr	r1, [sp]
   14720:	str	r0, [r1]
   14724:	mov	sp, fp
   14728:	pop	{fp, pc}
   1472c:	push	{fp, lr}
   14730:	mov	fp, sp
   14734:	sub	sp, sp, #64	; 0x40
   14738:	str	r0, [fp, #-4]
   1473c:	str	r1, [fp, #-8]
   14740:	str	r2, [fp, #-12]
   14744:	str	r3, [fp, #-16]
   14748:	ldr	r1, [fp, #-8]
   1474c:	mov	r0, sp
   14750:	bl	146dc <__assert_fail@plt+0x3624>
   14754:	ldr	r0, [fp, #-4]
   14758:	ldr	r1, [fp, #-12]
   1475c:	ldr	r2, [fp, #-16]
   14760:	mov	r3, sp
   14764:	bl	14348 <__assert_fail@plt+0x3290>
   14768:	mov	sp, fp
   1476c:	pop	{fp, pc}
   14770:	push	{fp, lr}
   14774:	mov	fp, sp
   14778:	sub	sp, sp, #8
   1477c:	str	r0, [sp, #4]
   14780:	str	r1, [sp]
   14784:	ldr	r1, [sp, #4]
   14788:	ldr	r2, [sp]
   1478c:	movw	r0, #0
   14790:	bl	1469c <__assert_fail@plt+0x35e4>
   14794:	mov	sp, fp
   14798:	pop	{fp, pc}
   1479c:	push	{fp, lr}
   147a0:	mov	fp, sp
   147a4:	sub	sp, sp, #16
   147a8:	str	r0, [fp, #-4]
   147ac:	str	r1, [sp, #8]
   147b0:	str	r2, [sp, #4]
   147b4:	ldr	r1, [fp, #-4]
   147b8:	ldr	r2, [sp, #8]
   147bc:	ldr	r3, [sp, #4]
   147c0:	movw	r0, #0
   147c4:	bl	1472c <__assert_fail@plt+0x3674>
   147c8:	mov	sp, fp
   147cc:	pop	{fp, pc}
   147d0:	push	{fp, lr}
   147d4:	mov	fp, sp
   147d8:	sub	sp, sp, #72	; 0x48
   147dc:	movw	r3, #57720	; 0xe178
   147e0:	movt	r3, #2
   147e4:	str	r0, [fp, #-4]
   147e8:	str	r1, [fp, #-8]
   147ec:	strb	r2, [fp, #-9]
   147f0:	add	r0, sp, #12
   147f4:	mov	r1, r0
   147f8:	str	r0, [sp, #8]
   147fc:	mov	r0, r1
   14800:	mov	r1, r3
   14804:	movw	r2, #48	; 0x30
   14808:	bl	10ec0 <memcpy@plt>
   1480c:	ldr	r0, [sp, #8]
   14810:	ldrb	r1, [fp, #-9]
   14814:	movw	r2, #1
   14818:	bl	126e0 <__assert_fail@plt+0x1628>
   1481c:	ldr	r1, [fp, #-4]
   14820:	ldr	r2, [fp, #-8]
   14824:	movw	r3, #0
   14828:	str	r0, [sp, #4]
   1482c:	mov	r0, r3
   14830:	add	r3, sp, #12
   14834:	bl	14348 <__assert_fail@plt+0x3290>
   14838:	mov	sp, fp
   1483c:	pop	{fp, pc}
   14840:	push	{fp, lr}
   14844:	mov	fp, sp
   14848:	sub	sp, sp, #8
   1484c:	str	r0, [sp, #4]
   14850:	strb	r1, [sp, #3]
   14854:	ldr	r0, [sp, #4]
   14858:	mvn	r1, #0
   1485c:	ldrb	r2, [sp, #3]
   14860:	bl	147d0 <__assert_fail@plt+0x3718>
   14864:	mov	sp, fp
   14868:	pop	{fp, pc}
   1486c:	push	{fp, lr}
   14870:	mov	fp, sp
   14874:	sub	sp, sp, #8
   14878:	str	r0, [sp, #4]
   1487c:	ldr	r0, [sp, #4]
   14880:	movw	r1, #58	; 0x3a
   14884:	and	r1, r1, #255	; 0xff
   14888:	bl	14840 <__assert_fail@plt+0x3788>
   1488c:	mov	sp, fp
   14890:	pop	{fp, pc}
   14894:	push	{fp, lr}
   14898:	mov	fp, sp
   1489c:	sub	sp, sp, #8
   148a0:	str	r0, [sp, #4]
   148a4:	str	r1, [sp]
   148a8:	ldr	r0, [sp, #4]
   148ac:	ldr	r1, [sp]
   148b0:	movw	r2, #58	; 0x3a
   148b4:	and	r2, r2, #255	; 0xff
   148b8:	bl	147d0 <__assert_fail@plt+0x3718>
   148bc:	mov	sp, fp
   148c0:	pop	{fp, pc}
   148c4:	push	{fp, lr}
   148c8:	mov	fp, sp
   148cc:	sub	sp, sp, #120	; 0x78
   148d0:	str	r0, [fp, #-4]
   148d4:	str	r1, [fp, #-8]
   148d8:	str	r2, [fp, #-12]
   148dc:	ldr	r1, [fp, #-8]
   148e0:	add	r0, sp, #12
   148e4:	bl	146dc <__assert_fail@plt+0x3624>
   148e8:	add	r0, sp, #60	; 0x3c
   148ec:	mov	r1, r0
   148f0:	add	r2, sp, #12
   148f4:	str	r0, [sp, #8]
   148f8:	mov	r0, r1
   148fc:	mov	r1, r2
   14900:	movw	r2, #48	; 0x30
   14904:	bl	10ec0 <memcpy@plt>
   14908:	ldr	r0, [sp, #8]
   1490c:	movw	r1, #58	; 0x3a
   14910:	and	r1, r1, #255	; 0xff
   14914:	movw	r2, #1
   14918:	bl	126e0 <__assert_fail@plt+0x1628>
   1491c:	ldr	r1, [fp, #-4]
   14920:	ldr	r2, [fp, #-12]
   14924:	str	r0, [sp, #4]
   14928:	mov	r0, r1
   1492c:	mov	r1, r2
   14930:	mvn	r2, #0
   14934:	add	r3, sp, #60	; 0x3c
   14938:	bl	14348 <__assert_fail@plt+0x3290>
   1493c:	mov	sp, fp
   14940:	pop	{fp, pc}
   14944:	push	{fp, lr}
   14948:	mov	fp, sp
   1494c:	sub	sp, sp, #24
   14950:	str	r0, [fp, #-4]
   14954:	str	r1, [fp, #-8]
   14958:	str	r2, [sp, #12]
   1495c:	str	r3, [sp, #8]
   14960:	ldr	r0, [fp, #-4]
   14964:	ldr	r1, [fp, #-8]
   14968:	ldr	r2, [sp, #12]
   1496c:	ldr	r3, [sp, #8]
   14970:	mvn	ip, #0
   14974:	str	ip, [sp]
   14978:	bl	14984 <__assert_fail@plt+0x38cc>
   1497c:	mov	sp, fp
   14980:	pop	{fp, pc}
   14984:	push	{fp, lr}
   14988:	mov	fp, sp
   1498c:	sub	sp, sp, #72	; 0x48
   14990:	ldr	ip, [fp, #8]
   14994:	movw	lr, #57720	; 0xe178
   14998:	movt	lr, #2
   1499c:	str	r0, [fp, #-4]
   149a0:	str	r1, [fp, #-8]
   149a4:	str	r2, [fp, #-12]
   149a8:	str	r3, [fp, #-16]
   149ac:	add	r0, sp, #8
   149b0:	mov	r1, r0
   149b4:	str	r0, [sp, #4]
   149b8:	mov	r0, r1
   149bc:	mov	r1, lr
   149c0:	movw	r2, #48	; 0x30
   149c4:	str	ip, [sp]
   149c8:	bl	10ec0 <memcpy@plt>
   149cc:	ldr	r1, [fp, #-8]
   149d0:	ldr	r2, [fp, #-12]
   149d4:	ldr	r0, [sp, #4]
   149d8:	bl	127e0 <__assert_fail@plt+0x1728>
   149dc:	ldr	r0, [fp, #-4]
   149e0:	ldr	r1, [fp, #-16]
   149e4:	ldr	r2, [fp, #8]
   149e8:	add	r3, sp, #8
   149ec:	bl	14348 <__assert_fail@plt+0x3290>
   149f0:	mov	sp, fp
   149f4:	pop	{fp, pc}
   149f8:	push	{fp, lr}
   149fc:	mov	fp, sp
   14a00:	sub	sp, sp, #16
   14a04:	str	r0, [fp, #-4]
   14a08:	str	r1, [sp, #8]
   14a0c:	str	r2, [sp, #4]
   14a10:	ldr	r1, [fp, #-4]
   14a14:	ldr	r2, [sp, #8]
   14a18:	ldr	r3, [sp, #4]
   14a1c:	movw	r0, #0
   14a20:	bl	14944 <__assert_fail@plt+0x388c>
   14a24:	mov	sp, fp
   14a28:	pop	{fp, pc}
   14a2c:	push	{fp, lr}
   14a30:	mov	fp, sp
   14a34:	sub	sp, sp, #24
   14a38:	str	r0, [fp, #-4]
   14a3c:	str	r1, [fp, #-8]
   14a40:	str	r2, [sp, #12]
   14a44:	str	r3, [sp, #8]
   14a48:	ldr	r1, [fp, #-4]
   14a4c:	ldr	r2, [fp, #-8]
   14a50:	ldr	r3, [sp, #12]
   14a54:	ldr	r0, [sp, #8]
   14a58:	movw	ip, #0
   14a5c:	str	r0, [sp, #4]
   14a60:	mov	r0, ip
   14a64:	ldr	ip, [sp, #4]
   14a68:	str	ip, [sp]
   14a6c:	bl	14984 <__assert_fail@plt+0x38cc>
   14a70:	mov	sp, fp
   14a74:	pop	{fp, pc}
   14a78:	push	{fp, lr}
   14a7c:	mov	fp, sp
   14a80:	sub	sp, sp, #16
   14a84:	str	r0, [fp, #-4]
   14a88:	str	r1, [sp, #8]
   14a8c:	str	r2, [sp, #4]
   14a90:	ldr	r0, [fp, #-4]
   14a94:	ldr	r1, [sp, #8]
   14a98:	ldr	r2, [sp, #4]
   14a9c:	movw	r3, #57604	; 0xe104
   14aa0:	movt	r3, #2
   14aa4:	bl	14348 <__assert_fail@plt+0x3290>
   14aa8:	mov	sp, fp
   14aac:	pop	{fp, pc}
   14ab0:	push	{fp, lr}
   14ab4:	mov	fp, sp
   14ab8:	sub	sp, sp, #8
   14abc:	str	r0, [sp, #4]
   14ac0:	str	r1, [sp]
   14ac4:	ldr	r1, [sp, #4]
   14ac8:	ldr	r2, [sp]
   14acc:	movw	r0, #0
   14ad0:	bl	14a78 <__assert_fail@plt+0x39c0>
   14ad4:	mov	sp, fp
   14ad8:	pop	{fp, pc}
   14adc:	push	{fp, lr}
   14ae0:	mov	fp, sp
   14ae4:	sub	sp, sp, #8
   14ae8:	str	r0, [sp, #4]
   14aec:	str	r1, [sp]
   14af0:	ldr	r0, [sp, #4]
   14af4:	ldr	r1, [sp]
   14af8:	mvn	r2, #0
   14afc:	bl	14a78 <__assert_fail@plt+0x39c0>
   14b00:	mov	sp, fp
   14b04:	pop	{fp, pc}
   14b08:	push	{fp, lr}
   14b0c:	mov	fp, sp
   14b10:	sub	sp, sp, #8
   14b14:	str	r0, [sp, #4]
   14b18:	ldr	r1, [sp, #4]
   14b1c:	movw	r0, #0
   14b20:	bl	14adc <__assert_fail@plt+0x3a24>
   14b24:	mov	sp, fp
   14b28:	pop	{fp, pc}
   14b2c:	push	{fp, lr}
   14b30:	mov	fp, sp
   14b34:	sub	sp, sp, #24
   14b38:	str	r0, [fp, #-8]
   14b3c:	str	r1, [sp, #12]
   14b40:	ldr	r0, [fp, #-8]
   14b44:	bl	10fbc <gettext@plt>
   14b48:	str	r0, [sp, #8]
   14b4c:	ldr	r0, [sp, #8]
   14b50:	ldr	r1, [fp, #-8]
   14b54:	cmp	r0, r1
   14b58:	beq	14b68 <__assert_fail@plt+0x3ab0>
   14b5c:	ldr	r0, [sp, #8]
   14b60:	str	r0, [fp, #-4]
   14b64:	b	14c34 <__assert_fail@plt+0x3b7c>
   14b68:	bl	1a9c0 <__assert_fail@plt+0x9908>
   14b6c:	str	r0, [sp, #4]
   14b70:	ldr	r0, [sp, #4]
   14b74:	movw	r1, #52788	; 0xce34
   14b78:	movt	r1, #1
   14b7c:	bl	1a624 <__assert_fail@plt+0x956c>
   14b80:	cmp	r0, #0
   14b84:	bne	14bbc <__assert_fail@plt+0x3b04>
   14b88:	ldr	r0, [fp, #-8]
   14b8c:	ldrb	r0, [r0]
   14b90:	cmp	r0, #96	; 0x60
   14b94:	movw	r0, #0
   14b98:	moveq	r0, #1
   14b9c:	tst	r0, #1
   14ba0:	movw	r0, #52798	; 0xce3e
   14ba4:	movt	r0, #1
   14ba8:	movw	r1, #52794	; 0xce3a
   14bac:	movt	r1, #1
   14bb0:	movne	r0, r1
   14bb4:	str	r0, [fp, #-4]
   14bb8:	b	14c34 <__assert_fail@plt+0x3b7c>
   14bbc:	ldr	r0, [sp, #4]
   14bc0:	movw	r1, #52802	; 0xce42
   14bc4:	movt	r1, #1
   14bc8:	bl	1a624 <__assert_fail@plt+0x956c>
   14bcc:	cmp	r0, #0
   14bd0:	bne	14c08 <__assert_fail@plt+0x3b50>
   14bd4:	ldr	r0, [fp, #-8]
   14bd8:	ldrb	r0, [r0]
   14bdc:	cmp	r0, #96	; 0x60
   14be0:	movw	r0, #0
   14be4:	moveq	r0, #1
   14be8:	tst	r0, #1
   14bec:	movw	r0, #52814	; 0xce4e
   14bf0:	movt	r0, #1
   14bf4:	movw	r1, #52810	; 0xce4a
   14bf8:	movt	r1, #1
   14bfc:	movne	r0, r1
   14c00:	str	r0, [fp, #-4]
   14c04:	b	14c34 <__assert_fail@plt+0x3b7c>
   14c08:	ldr	r0, [sp, #12]
   14c0c:	cmp	r0, #9
   14c10:	movw	r0, #0
   14c14:	moveq	r0, #1
   14c18:	tst	r0, #1
   14c1c:	movw	r0, #52786	; 0xce32
   14c20:	movt	r0, #1
   14c24:	movw	r1, #52782	; 0xce2e
   14c28:	movt	r1, #1
   14c2c:	movne	r0, r1
   14c30:	str	r0, [fp, #-4]
   14c34:	ldr	r0, [fp, #-4]
   14c38:	mov	sp, fp
   14c3c:	pop	{fp, pc}
   14c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c44:	add	fp, sp, #28
   14c48:	sub	sp, sp, #196	; 0xc4
   14c4c:	ldr	ip, [fp, #12]
   14c50:	ldr	lr, [fp, #8]
   14c54:	str	r0, [fp, #-32]	; 0xffffffe0
   14c58:	str	r1, [fp, #-36]	; 0xffffffdc
   14c5c:	str	r2, [fp, #-40]	; 0xffffffd8
   14c60:	str	r3, [fp, #-44]	; 0xffffffd4
   14c64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14c68:	movw	r1, #0
   14c6c:	cmp	r0, r1
   14c70:	beq	14ca4 <__assert_fail@plt+0x3bec>
   14c74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14c7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14c80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c84:	movw	ip, #52904	; 0xcea8
   14c88:	movt	ip, #1
   14c8c:	str	r1, [fp, #-48]	; 0xffffffd0
   14c90:	mov	r1, ip
   14c94:	ldr	ip, [fp, #-48]	; 0xffffffd0
   14c98:	str	ip, [sp]
   14c9c:	bl	10fe0 <fprintf@plt>
   14ca0:	b	14cbc <__assert_fail@plt+0x3c04>
   14ca4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ca8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14cac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14cb0:	movw	r1, #52916	; 0xceb4
   14cb4:	movt	r1, #1
   14cb8:	bl	10fe0 <fprintf@plt>
   14cbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14cc0:	movw	r1, #52923	; 0xcebb
   14cc4:	movt	r1, #1
   14cc8:	str	r0, [fp, #-52]	; 0xffffffcc
   14ccc:	mov	r0, r1
   14cd0:	bl	10fbc <gettext@plt>
   14cd4:	movw	r1, #53641	; 0xd189
   14cd8:	movt	r1, #1
   14cdc:	movw	r3, #2022	; 0x7e6
   14ce0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14ce4:	str	r0, [fp, #-56]	; 0xffffffc8
   14ce8:	mov	r0, r2
   14cec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14cf0:	bl	10fe0 <fprintf@plt>
   14cf4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14cf8:	movw	r2, #52379	; 0xcc9b
   14cfc:	movt	r2, #1
   14d00:	str	r0, [fp, #-60]	; 0xffffffc4
   14d04:	mov	r0, r2
   14d08:	str	r2, [fp, #-64]	; 0xffffffc0
   14d0c:	bl	10e54 <fputs_unlocked@plt>
   14d10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14d14:	movw	r2, #52927	; 0xcebf
   14d18:	movt	r2, #1
   14d1c:	str	r0, [fp, #-68]	; 0xffffffbc
   14d20:	mov	r0, r2
   14d24:	str	r1, [fp, #-72]	; 0xffffffb8
   14d28:	bl	10fbc <gettext@plt>
   14d2c:	movw	r2, #53098	; 0xcf6a
   14d30:	movt	r2, #1
   14d34:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14d38:	str	r0, [fp, #-76]	; 0xffffffb4
   14d3c:	mov	r0, r1
   14d40:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14d44:	bl	10fe0 <fprintf@plt>
   14d48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14d4c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14d50:	str	r0, [fp, #-80]	; 0xffffffb0
   14d54:	mov	r0, r2
   14d58:	bl	10e54 <fputs_unlocked@plt>
   14d5c:	ldr	r1, [fp, #12]
   14d60:	cmp	r1, #9
   14d64:	str	r1, [fp, #-84]	; 0xffffffac
   14d68:	bhi	15184 <__assert_fail@plt+0x40cc>
   14d6c:	add	r0, pc, #8
   14d70:	ldr	r1, [fp, #-84]	; 0xffffffac
   14d74:	ldr	r0, [r0, r1, lsl #2]
   14d78:	mov	pc, r0
   14d7c:	andeq	r4, r1, r4, lsr #27
   14d80:	andeq	r4, r1, r8, lsr #27
   14d84:	andeq	r4, r1, r0, ror #27
   14d88:	andeq	r4, r1, r0, lsr #28
   14d8c:	andeq	r4, r1, r8, ror lr
   14d90:	ldrdeq	r4, [r1], -ip
   14d94:	andeq	r4, r1, ip, asr #30
   14d98:	andeq	r4, r1, r8, asr #31
   14d9c:	andeq	r5, r1, r0, asr r0
   14da0:	andeq	r5, r1, r4, ror #1
   14da4:	b	15220 <__assert_fail@plt+0x4168>
   14da8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14dac:	movw	r1, #53132	; 0xcf8c
   14db0:	movt	r1, #1
   14db4:	str	r0, [fp, #-88]	; 0xffffffa8
   14db8:	mov	r0, r1
   14dbc:	bl	10fbc <gettext@plt>
   14dc0:	ldr	r1, [fp, #8]
   14dc4:	ldr	r2, [r1]
   14dc8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14dcc:	str	r0, [fp, #-92]	; 0xffffffa4
   14dd0:	mov	r0, r1
   14dd4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14dd8:	bl	10fe0 <fprintf@plt>
   14ddc:	b	15220 <__assert_fail@plt+0x4168>
   14de0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14de4:	movw	r1, #53148	; 0xcf9c
   14de8:	movt	r1, #1
   14dec:	str	r0, [fp, #-96]	; 0xffffffa0
   14df0:	mov	r0, r1
   14df4:	bl	10fbc <gettext@plt>
   14df8:	ldr	r1, [fp, #8]
   14dfc:	ldr	r2, [r1]
   14e00:	ldr	r1, [fp, #8]
   14e04:	ldr	r3, [r1, #4]
   14e08:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14e0c:	str	r0, [fp, #-100]	; 0xffffff9c
   14e10:	mov	r0, r1
   14e14:	ldr	r1, [fp, #-100]	; 0xffffff9c
   14e18:	bl	10fe0 <fprintf@plt>
   14e1c:	b	15220 <__assert_fail@plt+0x4168>
   14e20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e24:	movw	r1, #53171	; 0xcfb3
   14e28:	movt	r1, #1
   14e2c:	str	r0, [fp, #-104]	; 0xffffff98
   14e30:	mov	r0, r1
   14e34:	bl	10fbc <gettext@plt>
   14e38:	ldr	r1, [fp, #8]
   14e3c:	ldr	r2, [r1]
   14e40:	ldr	r1, [fp, #8]
   14e44:	ldr	r3, [r1, #4]
   14e48:	ldr	r1, [fp, #8]
   14e4c:	ldr	r1, [r1, #8]
   14e50:	ldr	ip, [fp, #-104]	; 0xffffff98
   14e54:	str	r0, [fp, #-108]	; 0xffffff94
   14e58:	mov	r0, ip
   14e5c:	ldr	lr, [fp, #-108]	; 0xffffff94
   14e60:	str	r1, [sp, #112]	; 0x70
   14e64:	mov	r1, lr
   14e68:	ldr	r4, [sp, #112]	; 0x70
   14e6c:	str	r4, [sp]
   14e70:	bl	10fe0 <fprintf@plt>
   14e74:	b	15220 <__assert_fail@plt+0x4168>
   14e78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e7c:	movw	r1, #53199	; 0xcfcf
   14e80:	movt	r1, #1
   14e84:	str	r0, [sp, #108]	; 0x6c
   14e88:	mov	r0, r1
   14e8c:	bl	10fbc <gettext@plt>
   14e90:	ldr	r1, [fp, #8]
   14e94:	ldr	r2, [r1]
   14e98:	ldr	r1, [fp, #8]
   14e9c:	ldr	r3, [r1, #4]
   14ea0:	ldr	r1, [fp, #8]
   14ea4:	ldr	r1, [r1, #8]
   14ea8:	ldr	ip, [fp, #8]
   14eac:	ldr	ip, [ip, #12]
   14eb0:	ldr	lr, [sp, #108]	; 0x6c
   14eb4:	str	r0, [sp, #104]	; 0x68
   14eb8:	mov	r0, lr
   14ebc:	ldr	r4, [sp, #104]	; 0x68
   14ec0:	str	r1, [sp, #100]	; 0x64
   14ec4:	mov	r1, r4
   14ec8:	ldr	r5, [sp, #100]	; 0x64
   14ecc:	str	r5, [sp]
   14ed0:	str	ip, [sp, #4]
   14ed4:	bl	10fe0 <fprintf@plt>
   14ed8:	b	15220 <__assert_fail@plt+0x4168>
   14edc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ee0:	movw	r1, #53231	; 0xcfef
   14ee4:	movt	r1, #1
   14ee8:	str	r0, [sp, #96]	; 0x60
   14eec:	mov	r0, r1
   14ef0:	bl	10fbc <gettext@plt>
   14ef4:	ldr	r1, [fp, #8]
   14ef8:	ldr	r2, [r1]
   14efc:	ldr	r1, [fp, #8]
   14f00:	ldr	r3, [r1, #4]
   14f04:	ldr	r1, [fp, #8]
   14f08:	ldr	r1, [r1, #8]
   14f0c:	ldr	ip, [fp, #8]
   14f10:	ldr	ip, [ip, #12]
   14f14:	ldr	lr, [fp, #8]
   14f18:	ldr	lr, [lr, #16]
   14f1c:	ldr	r4, [sp, #96]	; 0x60
   14f20:	str	r0, [sp, #92]	; 0x5c
   14f24:	mov	r0, r4
   14f28:	ldr	r5, [sp, #92]	; 0x5c
   14f2c:	str	r1, [sp, #88]	; 0x58
   14f30:	mov	r1, r5
   14f34:	ldr	r6, [sp, #88]	; 0x58
   14f38:	str	r6, [sp]
   14f3c:	str	ip, [sp, #4]
   14f40:	str	lr, [sp, #8]
   14f44:	bl	10fe0 <fprintf@plt>
   14f48:	b	15220 <__assert_fail@plt+0x4168>
   14f4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f50:	movw	r1, #53267	; 0xd013
   14f54:	movt	r1, #1
   14f58:	str	r0, [sp, #84]	; 0x54
   14f5c:	mov	r0, r1
   14f60:	bl	10fbc <gettext@plt>
   14f64:	ldr	r1, [fp, #8]
   14f68:	ldr	r2, [r1]
   14f6c:	ldr	r1, [fp, #8]
   14f70:	ldr	r3, [r1, #4]
   14f74:	ldr	r1, [fp, #8]
   14f78:	ldr	r1, [r1, #8]
   14f7c:	ldr	ip, [fp, #8]
   14f80:	ldr	ip, [ip, #12]
   14f84:	ldr	lr, [fp, #8]
   14f88:	ldr	lr, [lr, #16]
   14f8c:	ldr	r4, [fp, #8]
   14f90:	ldr	r4, [r4, #20]
   14f94:	ldr	r5, [sp, #84]	; 0x54
   14f98:	str	r0, [sp, #80]	; 0x50
   14f9c:	mov	r0, r5
   14fa0:	ldr	r6, [sp, #80]	; 0x50
   14fa4:	str	r1, [sp, #76]	; 0x4c
   14fa8:	mov	r1, r6
   14fac:	ldr	r7, [sp, #76]	; 0x4c
   14fb0:	str	r7, [sp]
   14fb4:	str	ip, [sp, #4]
   14fb8:	str	lr, [sp, #8]
   14fbc:	str	r4, [sp, #12]
   14fc0:	bl	10fe0 <fprintf@plt>
   14fc4:	b	15220 <__assert_fail@plt+0x4168>
   14fc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14fcc:	movw	r1, #53307	; 0xd03b
   14fd0:	movt	r1, #1
   14fd4:	str	r0, [sp, #72]	; 0x48
   14fd8:	mov	r0, r1
   14fdc:	bl	10fbc <gettext@plt>
   14fe0:	ldr	r1, [fp, #8]
   14fe4:	ldr	r2, [r1]
   14fe8:	ldr	r1, [fp, #8]
   14fec:	ldr	r3, [r1, #4]
   14ff0:	ldr	r1, [fp, #8]
   14ff4:	ldr	r1, [r1, #8]
   14ff8:	ldr	ip, [fp, #8]
   14ffc:	ldr	ip, [ip, #12]
   15000:	ldr	lr, [fp, #8]
   15004:	ldr	lr, [lr, #16]
   15008:	ldr	r4, [fp, #8]
   1500c:	ldr	r4, [r4, #20]
   15010:	ldr	r5, [fp, #8]
   15014:	ldr	r5, [r5, #24]
   15018:	ldr	r6, [sp, #72]	; 0x48
   1501c:	str	r0, [sp, #68]	; 0x44
   15020:	mov	r0, r6
   15024:	ldr	r7, [sp, #68]	; 0x44
   15028:	str	r1, [sp, #64]	; 0x40
   1502c:	mov	r1, r7
   15030:	ldr	r8, [sp, #64]	; 0x40
   15034:	str	r8, [sp]
   15038:	str	ip, [sp, #4]
   1503c:	str	lr, [sp, #8]
   15040:	str	r4, [sp, #12]
   15044:	str	r5, [sp, #16]
   15048:	bl	10fe0 <fprintf@plt>
   1504c:	b	15220 <__assert_fail@plt+0x4168>
   15050:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15054:	movw	r1, #53351	; 0xd067
   15058:	movt	r1, #1
   1505c:	str	r0, [sp, #60]	; 0x3c
   15060:	mov	r0, r1
   15064:	bl	10fbc <gettext@plt>
   15068:	ldr	r1, [fp, #8]
   1506c:	ldr	r2, [r1]
   15070:	ldr	r1, [fp, #8]
   15074:	ldr	r3, [r1, #4]
   15078:	ldr	r1, [fp, #8]
   1507c:	ldr	r1, [r1, #8]
   15080:	ldr	ip, [fp, #8]
   15084:	ldr	ip, [ip, #12]
   15088:	ldr	lr, [fp, #8]
   1508c:	ldr	lr, [lr, #16]
   15090:	ldr	r4, [fp, #8]
   15094:	ldr	r4, [r4, #20]
   15098:	ldr	r5, [fp, #8]
   1509c:	ldr	r5, [r5, #24]
   150a0:	ldr	r6, [fp, #8]
   150a4:	ldr	r6, [r6, #28]
   150a8:	ldr	r7, [sp, #60]	; 0x3c
   150ac:	str	r0, [sp, #56]	; 0x38
   150b0:	mov	r0, r7
   150b4:	ldr	r8, [sp, #56]	; 0x38
   150b8:	str	r1, [sp, #52]	; 0x34
   150bc:	mov	r1, r8
   150c0:	ldr	r9, [sp, #52]	; 0x34
   150c4:	str	r9, [sp]
   150c8:	str	ip, [sp, #4]
   150cc:	str	lr, [sp, #8]
   150d0:	str	r4, [sp, #12]
   150d4:	str	r5, [sp, #16]
   150d8:	str	r6, [sp, #20]
   150dc:	bl	10fe0 <fprintf@plt>
   150e0:	b	15220 <__assert_fail@plt+0x4168>
   150e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150e8:	movw	r1, #53399	; 0xd097
   150ec:	movt	r1, #1
   150f0:	str	r0, [sp, #48]	; 0x30
   150f4:	mov	r0, r1
   150f8:	bl	10fbc <gettext@plt>
   150fc:	ldr	r1, [fp, #8]
   15100:	ldr	r2, [r1]
   15104:	ldr	r1, [fp, #8]
   15108:	ldr	r3, [r1, #4]
   1510c:	ldr	r1, [fp, #8]
   15110:	ldr	r1, [r1, #8]
   15114:	ldr	ip, [fp, #8]
   15118:	ldr	ip, [ip, #12]
   1511c:	ldr	lr, [fp, #8]
   15120:	ldr	lr, [lr, #16]
   15124:	ldr	r4, [fp, #8]
   15128:	ldr	r4, [r4, #20]
   1512c:	ldr	r5, [fp, #8]
   15130:	ldr	r5, [r5, #24]
   15134:	ldr	r6, [fp, #8]
   15138:	ldr	r6, [r6, #28]
   1513c:	ldr	r7, [fp, #8]
   15140:	ldr	r7, [r7, #32]
   15144:	ldr	r8, [sp, #48]	; 0x30
   15148:	str	r0, [sp, #44]	; 0x2c
   1514c:	mov	r0, r8
   15150:	ldr	r9, [sp, #44]	; 0x2c
   15154:	str	r1, [sp, #40]	; 0x28
   15158:	mov	r1, r9
   1515c:	ldr	sl, [sp, #40]	; 0x28
   15160:	str	sl, [sp]
   15164:	str	ip, [sp, #4]
   15168:	str	lr, [sp, #8]
   1516c:	str	r4, [sp, #12]
   15170:	str	r5, [sp, #16]
   15174:	str	r6, [sp, #20]
   15178:	str	r7, [sp, #24]
   1517c:	bl	10fe0 <fprintf@plt>
   15180:	b	15220 <__assert_fail@plt+0x4168>
   15184:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15188:	movw	r1, #53451	; 0xd0cb
   1518c:	movt	r1, #1
   15190:	str	r0, [sp, #36]	; 0x24
   15194:	mov	r0, r1
   15198:	bl	10fbc <gettext@plt>
   1519c:	ldr	r1, [fp, #8]
   151a0:	ldr	r2, [r1]
   151a4:	ldr	r1, [fp, #8]
   151a8:	ldr	r3, [r1, #4]
   151ac:	ldr	r1, [fp, #8]
   151b0:	ldr	r1, [r1, #8]
   151b4:	ldr	ip, [fp, #8]
   151b8:	ldr	ip, [ip, #12]
   151bc:	ldr	lr, [fp, #8]
   151c0:	ldr	lr, [lr, #16]
   151c4:	ldr	r4, [fp, #8]
   151c8:	ldr	r4, [r4, #20]
   151cc:	ldr	r5, [fp, #8]
   151d0:	ldr	r5, [r5, #24]
   151d4:	ldr	r6, [fp, #8]
   151d8:	ldr	r6, [r6, #28]
   151dc:	ldr	r7, [fp, #8]
   151e0:	ldr	r7, [r7, #32]
   151e4:	ldr	r8, [sp, #36]	; 0x24
   151e8:	str	r0, [sp, #32]
   151ec:	mov	r0, r8
   151f0:	ldr	r9, [sp, #32]
   151f4:	str	r1, [sp, #28]
   151f8:	mov	r1, r9
   151fc:	ldr	sl, [sp, #28]
   15200:	str	sl, [sp]
   15204:	str	ip, [sp, #4]
   15208:	str	lr, [sp, #8]
   1520c:	str	r4, [sp, #12]
   15210:	str	r5, [sp, #16]
   15214:	str	r6, [sp, #20]
   15218:	str	r7, [sp, #24]
   1521c:	bl	10fe0 <fprintf@plt>
   15220:	sub	sp, fp, #28
   15224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15228:	push	{fp, lr}
   1522c:	mov	fp, sp
   15230:	sub	sp, sp, #32
   15234:	ldr	ip, [fp, #8]
   15238:	str	r0, [fp, #-4]
   1523c:	str	r1, [fp, #-8]
   15240:	str	r2, [fp, #-12]
   15244:	str	r3, [sp, #16]
   15248:	movw	r0, #0
   1524c:	str	r0, [sp, #12]
   15250:	ldr	r0, [fp, #8]
   15254:	ldr	r1, [sp, #12]
   15258:	add	r0, r0, r1, lsl #2
   1525c:	ldr	r0, [r0]
   15260:	movw	r1, #0
   15264:	cmp	r0, r1
   15268:	beq	15280 <__assert_fail@plt+0x41c8>
   1526c:	b	15270 <__assert_fail@plt+0x41b8>
   15270:	ldr	r0, [sp, #12]
   15274:	add	r0, r0, #1
   15278:	str	r0, [sp, #12]
   1527c:	b	15250 <__assert_fail@plt+0x4198>
   15280:	ldr	r0, [fp, #-4]
   15284:	ldr	r1, [fp, #-8]
   15288:	ldr	r2, [fp, #-12]
   1528c:	ldr	r3, [sp, #16]
   15290:	ldr	ip, [fp, #8]
   15294:	ldr	lr, [sp, #12]
   15298:	str	ip, [sp]
   1529c:	str	lr, [sp, #4]
   152a0:	bl	14c40 <__assert_fail@plt+0x3b88>
   152a4:	mov	sp, fp
   152a8:	pop	{fp, pc}
   152ac:	push	{fp, lr}
   152b0:	mov	fp, sp
   152b4:	sub	sp, sp, #80	; 0x50
   152b8:	ldr	ip, [fp, #8]
   152bc:	str	ip, [fp, #-4]
   152c0:	str	r0, [fp, #-8]
   152c4:	str	r1, [fp, #-12]
   152c8:	str	r2, [fp, #-16]
   152cc:	str	r3, [fp, #-20]	; 0xffffffec
   152d0:	movw	r0, #0
   152d4:	str	r0, [fp, #-24]	; 0xffffffe8
   152d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152dc:	cmp	r0, #10
   152e0:	movw	r0, #0
   152e4:	str	r0, [sp, #12]
   152e8:	bcs	15320 <__assert_fail@plt+0x4268>
   152ec:	ldr	r0, [fp, #-4]
   152f0:	add	r1, r0, #4
   152f4:	str	r1, [fp, #-4]
   152f8:	ldr	r0, [r0]
   152fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15300:	add	r2, sp, #16
   15304:	add	r1, r2, r1, lsl #2
   15308:	str	r0, [r1]
   1530c:	movw	r1, #0
   15310:	cmp	r0, r1
   15314:	movw	r0, #0
   15318:	movne	r0, #1
   1531c:	str	r0, [sp, #12]
   15320:	ldr	r0, [sp, #12]
   15324:	tst	r0, #1
   15328:	beq	15340 <__assert_fail@plt+0x4288>
   1532c:	b	15330 <__assert_fail@plt+0x4278>
   15330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15334:	add	r0, r0, #1
   15338:	str	r0, [fp, #-24]	; 0xffffffe8
   1533c:	b	152d8 <__assert_fail@plt+0x4220>
   15340:	add	r0, sp, #16
   15344:	ldr	r1, [fp, #-8]
   15348:	ldr	r2, [fp, #-12]
   1534c:	ldr	r3, [fp, #-16]
   15350:	ldr	ip, [fp, #-20]	; 0xffffffec
   15354:	ldr	lr, [fp, #-24]	; 0xffffffe8
   15358:	str	r0, [sp, #8]
   1535c:	mov	r0, r1
   15360:	mov	r1, r2
   15364:	mov	r2, r3
   15368:	mov	r3, ip
   1536c:	ldr	ip, [sp, #8]
   15370:	str	ip, [sp]
   15374:	str	lr, [sp, #4]
   15378:	bl	14c40 <__assert_fail@plt+0x3b88>
   1537c:	mov	sp, fp
   15380:	pop	{fp, pc}
   15384:	push	{fp, lr}
   15388:	mov	fp, sp
   1538c:	sub	sp, sp, #24
   15390:	str	r0, [fp, #-4]
   15394:	str	r1, [fp, #-8]
   15398:	str	r2, [sp, #12]
   1539c:	str	r3, [sp, #8]
   153a0:	add	r0, fp, #8
   153a4:	str	r0, [sp, #4]
   153a8:	ldr	r0, [fp, #-4]
   153ac:	ldr	r1, [fp, #-8]
   153b0:	ldr	r2, [sp, #12]
   153b4:	ldr	r3, [sp, #8]
   153b8:	ldr	ip, [sp, #4]
   153bc:	mov	lr, sp
   153c0:	str	ip, [lr]
   153c4:	bl	152ac <__assert_fail@plt+0x41f4>
   153c8:	add	r0, sp, #4
   153cc:	mov	sp, fp
   153d0:	pop	{fp, pc}
   153d4:	push	{fp, lr}
   153d8:	mov	fp, sp
   153dc:	sub	sp, sp, #16
   153e0:	movw	r0, #57684	; 0xe154
   153e4:	movt	r0, #2
   153e8:	ldr	r1, [r0]
   153ec:	movw	r0, #52379	; 0xcc9b
   153f0:	movt	r0, #1
   153f4:	bl	10e54 <fputs_unlocked@plt>
   153f8:	movw	r1, #53511	; 0xd107
   153fc:	movt	r1, #1
   15400:	str	r0, [fp, #-4]
   15404:	mov	r0, r1
   15408:	bl	10fbc <gettext@plt>
   1540c:	movw	r1, #53531	; 0xd11b
   15410:	movt	r1, #1
   15414:	bl	10e84 <printf@plt>
   15418:	movw	r1, #53553	; 0xd131
   1541c:	movt	r1, #1
   15420:	str	r0, [sp, #8]
   15424:	mov	r0, r1
   15428:	bl	10fbc <gettext@plt>
   1542c:	movw	r1, #51909	; 0xcac5
   15430:	movt	r1, #1
   15434:	movw	r2, #52188	; 0xcbdc
   15438:	movt	r2, #1
   1543c:	bl	10e84 <printf@plt>
   15440:	movw	r1, #53573	; 0xd145
   15444:	movt	r1, #1
   15448:	str	r0, [sp, #4]
   1544c:	mov	r0, r1
   15450:	bl	10fbc <gettext@plt>
   15454:	movw	r1, #53612	; 0xd16c
   15458:	movt	r1, #1
   1545c:	bl	10e84 <printf@plt>
   15460:	mov	sp, fp
   15464:	pop	{fp, pc}
   15468:	push	{fp, lr}
   1546c:	mov	fp, sp
   15470:	sub	sp, sp, #16
   15474:	str	r0, [fp, #-4]
   15478:	str	r1, [sp, #8]
   1547c:	str	r2, [sp, #4]
   15480:	ldr	r0, [fp, #-4]
   15484:	ldr	r1, [sp, #8]
   15488:	ldr	r2, [sp, #4]
   1548c:	bl	15498 <__assert_fail@plt+0x43e0>
   15490:	mov	sp, fp
   15494:	pop	{fp, pc}
   15498:	push	{fp, lr}
   1549c:	mov	fp, sp
   154a0:	sub	sp, sp, #16
   154a4:	str	r0, [fp, #-4]
   154a8:	str	r1, [sp, #8]
   154ac:	str	r2, [sp, #4]
   154b0:	ldr	r0, [fp, #-4]
   154b4:	ldr	r1, [sp, #8]
   154b8:	ldr	r2, [sp, #4]
   154bc:	bl	1aacc <__assert_fail@plt+0x9a14>
   154c0:	str	r0, [sp]
   154c4:	ldr	r0, [sp]
   154c8:	movw	r1, #0
   154cc:	cmp	r0, r1
   154d0:	bne	15500 <__assert_fail@plt+0x4448>
   154d4:	ldr	r0, [fp, #-4]
   154d8:	movw	r1, #0
   154dc:	cmp	r0, r1
   154e0:	beq	154fc <__assert_fail@plt+0x4444>
   154e4:	ldr	r0, [sp, #8]
   154e8:	cmp	r0, #0
   154ec:	beq	15500 <__assert_fail@plt+0x4448>
   154f0:	ldr	r0, [sp, #4]
   154f4:	cmp	r0, #0
   154f8:	beq	15500 <__assert_fail@plt+0x4448>
   154fc:	bl	18244 <__assert_fail@plt+0x718c>
   15500:	ldr	r0, [sp]
   15504:	mov	sp, fp
   15508:	pop	{fp, pc}
   1550c:	push	{fp, lr}
   15510:	mov	fp, sp
   15514:	sub	sp, sp, #8
   15518:	str	r0, [sp, #4]
   1551c:	ldr	r0, [sp, #4]
   15520:	bl	1a510 <__assert_fail@plt+0x9458>
   15524:	bl	15530 <__assert_fail@plt+0x4478>
   15528:	mov	sp, fp
   1552c:	pop	{fp, pc}
   15530:	push	{fp, lr}
   15534:	mov	fp, sp
   15538:	sub	sp, sp, #8
   1553c:	str	r0, [sp, #4]
   15540:	ldr	r0, [sp, #4]
   15544:	movw	r1, #0
   15548:	cmp	r0, r1
   1554c:	bne	15554 <__assert_fail@plt+0x449c>
   15550:	bl	18244 <__assert_fail@plt+0x718c>
   15554:	ldr	r0, [sp, #4]
   15558:	mov	sp, fp
   1555c:	pop	{fp, pc}
   15560:	push	{fp, lr}
   15564:	mov	fp, sp
   15568:	sub	sp, sp, #8
   1556c:	str	r0, [sp, #4]
   15570:	ldr	r0, [sp, #4]
   15574:	bl	1a808 <__assert_fail@plt+0x9750>
   15578:	bl	15530 <__assert_fail@plt+0x4478>
   1557c:	mov	sp, fp
   15580:	pop	{fp, pc}
   15584:	push	{fp, lr}
   15588:	mov	fp, sp
   1558c:	sub	sp, sp, #8
   15590:	str	r0, [sp, #4]
   15594:	ldr	r0, [sp, #4]
   15598:	bl	1550c <__assert_fail@plt+0x4454>
   1559c:	mov	sp, fp
   155a0:	pop	{fp, pc}
   155a4:	push	{fp, lr}
   155a8:	mov	fp, sp
   155ac:	sub	sp, sp, #16
   155b0:	str	r0, [fp, #-4]
   155b4:	str	r1, [sp, #8]
   155b8:	ldr	r0, [fp, #-4]
   155bc:	ldr	r1, [sp, #8]
   155c0:	bl	1a580 <__assert_fail@plt+0x94c8>
   155c4:	str	r0, [sp, #4]
   155c8:	ldr	r0, [sp, #4]
   155cc:	movw	r1, #0
   155d0:	cmp	r0, r1
   155d4:	bne	155f8 <__assert_fail@plt+0x4540>
   155d8:	ldr	r0, [fp, #-4]
   155dc:	movw	r1, #0
   155e0:	cmp	r0, r1
   155e4:	beq	155f4 <__assert_fail@plt+0x453c>
   155e8:	ldr	r0, [sp, #8]
   155ec:	cmp	r0, #0
   155f0:	beq	155f8 <__assert_fail@plt+0x4540>
   155f4:	bl	18244 <__assert_fail@plt+0x718c>
   155f8:	ldr	r0, [sp, #4]
   155fc:	mov	sp, fp
   15600:	pop	{fp, pc}
   15604:	push	{fp, lr}
   15608:	mov	fp, sp
   1560c:	sub	sp, sp, #8
   15610:	str	r0, [sp, #4]
   15614:	str	r1, [sp]
   15618:	ldr	r0, [sp, #4]
   1561c:	ldr	r1, [sp]
   15620:	bl	1a848 <__assert_fail@plt+0x9790>
   15624:	bl	15530 <__assert_fail@plt+0x4478>
   15628:	mov	sp, fp
   1562c:	pop	{fp, pc}
   15630:	push	{fp, lr}
   15634:	mov	fp, sp
   15638:	sub	sp, sp, #16
   1563c:	str	r0, [fp, #-4]
   15640:	str	r1, [sp, #8]
   15644:	str	r2, [sp, #4]
   15648:	ldr	r0, [fp, #-4]
   1564c:	ldr	r1, [sp, #8]
   15650:	ldr	r2, [sp, #4]
   15654:	bl	1a940 <__assert_fail@plt+0x9888>
   15658:	bl	15530 <__assert_fail@plt+0x4478>
   1565c:	mov	sp, fp
   15660:	pop	{fp, pc}
   15664:	push	{fp, lr}
   15668:	mov	fp, sp
   1566c:	sub	sp, sp, #8
   15670:	str	r0, [sp, #4]
   15674:	str	r1, [sp]
   15678:	ldr	r1, [sp, #4]
   1567c:	ldr	r2, [sp]
   15680:	movw	r0, #0
   15684:	bl	15498 <__assert_fail@plt+0x43e0>
   15688:	mov	sp, fp
   1568c:	pop	{fp, pc}
   15690:	push	{fp, lr}
   15694:	mov	fp, sp
   15698:	sub	sp, sp, #8
   1569c:	str	r0, [sp, #4]
   156a0:	str	r1, [sp]
   156a4:	ldr	r1, [sp, #4]
   156a8:	ldr	r2, [sp]
   156ac:	movw	r0, #0
   156b0:	bl	15630 <__assert_fail@plt+0x4578>
   156b4:	mov	sp, fp
   156b8:	pop	{fp, pc}
   156bc:	push	{fp, lr}
   156c0:	mov	fp, sp
   156c4:	sub	sp, sp, #8
   156c8:	str	r0, [sp, #4]
   156cc:	str	r1, [sp]
   156d0:	ldr	r0, [sp, #4]
   156d4:	ldr	r1, [sp]
   156d8:	movw	r2, #1
   156dc:	bl	156e8 <__assert_fail@plt+0x4630>
   156e0:	mov	sp, fp
   156e4:	pop	{fp, pc}
   156e8:	push	{fp, lr}
   156ec:	mov	fp, sp
   156f0:	sub	sp, sp, #16
   156f4:	str	r0, [fp, #-4]
   156f8:	str	r1, [sp, #8]
   156fc:	str	r2, [sp, #4]
   15700:	ldr	r0, [sp, #8]
   15704:	ldr	r0, [r0]
   15708:	str	r0, [sp]
   1570c:	ldr	r0, [fp, #-4]
   15710:	movw	r1, #0
   15714:	cmp	r0, r1
   15718:	bne	15764 <__assert_fail@plt+0x46ac>
   1571c:	ldr	r0, [sp]
   15720:	cmp	r0, #0
   15724:	bne	15760 <__assert_fail@plt+0x46a8>
   15728:	ldr	r0, [sp, #4]
   1572c:	movw	r1, #64	; 0x40
   15730:	udiv	r0, r1, r0
   15734:	str	r0, [sp]
   15738:	ldr	r0, [sp]
   1573c:	cmp	r0, #0
   15740:	movw	r0, #0
   15744:	movne	r0, #1
   15748:	mvn	r1, #0
   1574c:	eor	r0, r0, r1
   15750:	and	r0, r0, #1
   15754:	ldr	r1, [sp]
   15758:	add	r0, r1, r0
   1575c:	str	r0, [sp]
   15760:	b	15794 <__assert_fail@plt+0x46dc>
   15764:	ldr	r0, [sp]
   15768:	ldr	r1, [sp]
   1576c:	lsr	r1, r1, #1
   15770:	add	r1, r1, #1
   15774:	adds	r0, r0, r1
   15778:	mov	r1, #0
   1577c:	adc	r1, r1, #0
   15780:	str	r0, [sp]
   15784:	tst	r1, #1
   15788:	beq	15790 <__assert_fail@plt+0x46d8>
   1578c:	bl	18244 <__assert_fail@plt+0x718c>
   15790:	b	15794 <__assert_fail@plt+0x46dc>
   15794:	ldr	r0, [fp, #-4]
   15798:	ldr	r1, [sp]
   1579c:	ldr	r2, [sp, #4]
   157a0:	bl	15498 <__assert_fail@plt+0x43e0>
   157a4:	str	r0, [fp, #-4]
   157a8:	ldr	r0, [sp]
   157ac:	ldr	r1, [sp, #8]
   157b0:	str	r0, [r1]
   157b4:	ldr	r0, [fp, #-4]
   157b8:	mov	sp, fp
   157bc:	pop	{fp, pc}
   157c0:	push	{fp, lr}
   157c4:	mov	fp, sp
   157c8:	sub	sp, sp, #216	; 0xd8
   157cc:	ldr	ip, [fp, #8]
   157d0:	str	r0, [fp, #-4]
   157d4:	str	r1, [fp, #-8]
   157d8:	str	r2, [fp, #-12]
   157dc:	str	r3, [fp, #-16]
   157e0:	ldr	r0, [fp, #-8]
   157e4:	ldr	r0, [r0]
   157e8:	str	r0, [fp, #-20]	; 0xffffffec
   157ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   157f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   157f4:	asr	r1, r1, #1
   157f8:	add	r1, r0, r1
   157fc:	mov	r2, #1
   15800:	cmp	r1, r0
   15804:	movwvc	r2, #0
   15808:	str	r1, [fp, #-24]	; 0xffffffe8
   1580c:	tst	r2, #1
   15810:	beq	1581c <__assert_fail@plt+0x4764>
   15814:	ldr	r0, [pc, #4036]	; 167e0 <__assert_fail@plt+0x5728>
   15818:	str	r0, [fp, #-24]	; 0xffffffe8
   1581c:	ldr	r0, [fp, #-16]
   15820:	movw	r1, #0
   15824:	cmp	r1, r0
   15828:	bgt	15844 <__assert_fail@plt+0x478c>
   1582c:	ldr	r0, [fp, #-16]
   15830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15834:	cmp	r0, r1
   15838:	bge	15844 <__assert_fail@plt+0x478c>
   1583c:	ldr	r0, [fp, #-16]
   15840:	str	r0, [fp, #-24]	; 0xffffffe8
   15844:	b	15c1c <__assert_fail@plt+0x4b64>
   15848:	b	1584c <__assert_fail@plt+0x4794>
   1584c:	ldr	r0, [fp, #8]
   15850:	cmp	r0, #0
   15854:	bge	15968 <__assert_fail@plt+0x48b0>
   15858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1585c:	cmp	r0, #0
   15860:	bge	158ec <__assert_fail@plt+0x4834>
   15864:	b	15868 <__assert_fail@plt+0x47b0>
   15868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1586c:	ldr	r1, [fp, #8]
   15870:	movw	r2, #127	; 0x7f
   15874:	sdiv	r1, r2, r1
   15878:	cmp	r0, r1
   1587c:	blt	15a08 <__assert_fail@plt+0x4950>
   15880:	b	15a20 <__assert_fail@plt+0x4968>
   15884:	b	15888 <__assert_fail@plt+0x47d0>
   15888:	ldr	r0, [pc, #4084]	; 16884 <__assert_fail@plt+0x57cc>
   1588c:	ldr	r1, [fp, #8]
   15890:	cmp	r1, r0
   15894:	blt	158ac <__assert_fail@plt+0x47f4>
   15898:	b	158b8 <__assert_fail@plt+0x4800>
   1589c:	ldr	r0, [fp, #8]
   158a0:	movw	r1, #0
   158a4:	cmp	r1, r0
   158a8:	bge	158b8 <__assert_fail@plt+0x4800>
   158ac:	movw	r0, #0
   158b0:	str	r0, [fp, #-36]	; 0xffffffdc
   158b4:	b	158d0 <__assert_fail@plt+0x4818>
   158b8:	ldr	r0, [fp, #8]
   158bc:	movw	r1, #0
   158c0:	sub	r0, r1, r0
   158c4:	movw	r1, #127	; 0x7f
   158c8:	sdiv	r0, r1, r0
   158cc:	str	r0, [fp, #-36]	; 0xffffffdc
   158d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   158d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158d8:	mvn	r2, #0
   158dc:	sub	r1, r2, r1
   158e0:	cmp	r0, r1
   158e4:	ble	15a08 <__assert_fail@plt+0x4950>
   158e8:	b	15a20 <__assert_fail@plt+0x4968>
   158ec:	b	158f0 <__assert_fail@plt+0x4838>
   158f0:	b	1594c <__assert_fail@plt+0x4894>
   158f4:	b	1594c <__assert_fail@plt+0x4894>
   158f8:	ldr	r0, [fp, #8]
   158fc:	cmn	r0, #1
   15900:	bne	1594c <__assert_fail@plt+0x4894>
   15904:	b	15908 <__assert_fail@plt+0x4850>
   15908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1590c:	mvn	r1, #127	; 0x7f
   15910:	add	r0, r0, r1
   15914:	movw	r1, #0
   15918:	cmp	r1, r0
   1591c:	blt	15a08 <__assert_fail@plt+0x4950>
   15920:	b	15a20 <__assert_fail@plt+0x4968>
   15924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15928:	movw	r1, #0
   1592c:	cmp	r1, r0
   15930:	bge	15a20 <__assert_fail@plt+0x4968>
   15934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15938:	sub	r0, r0, #1
   1593c:	movw	r1, #127	; 0x7f
   15940:	cmp	r1, r0
   15944:	blt	15a08 <__assert_fail@plt+0x4950>
   15948:	b	15a20 <__assert_fail@plt+0x4968>
   1594c:	ldr	r0, [fp, #8]
   15950:	mvn	r1, #127	; 0x7f
   15954:	sdiv	r0, r1, r0
   15958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1595c:	cmp	r0, r1
   15960:	blt	15a08 <__assert_fail@plt+0x4950>
   15964:	b	15a20 <__assert_fail@plt+0x4968>
   15968:	ldr	r0, [fp, #8]
   1596c:	cmp	r0, #0
   15970:	bne	15978 <__assert_fail@plt+0x48c0>
   15974:	b	15a20 <__assert_fail@plt+0x4968>
   15978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1597c:	cmp	r0, #0
   15980:	bge	159f0 <__assert_fail@plt+0x4938>
   15984:	b	15988 <__assert_fail@plt+0x48d0>
   15988:	b	159d4 <__assert_fail@plt+0x491c>
   1598c:	b	159d4 <__assert_fail@plt+0x491c>
   15990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15994:	cmn	r0, #1
   15998:	bne	159d4 <__assert_fail@plt+0x491c>
   1599c:	b	159a0 <__assert_fail@plt+0x48e8>
   159a0:	ldr	r0, [fp, #8]
   159a4:	mvn	r1, #127	; 0x7f
   159a8:	add	r0, r0, r1
   159ac:	movw	r1, #0
   159b0:	cmp	r1, r0
   159b4:	blt	15a08 <__assert_fail@plt+0x4950>
   159b8:	b	15a20 <__assert_fail@plt+0x4968>
   159bc:	ldr	r0, [fp, #8]
   159c0:	sub	r0, r0, #1
   159c4:	movw	r1, #127	; 0x7f
   159c8:	cmp	r1, r0
   159cc:	blt	15a08 <__assert_fail@plt+0x4950>
   159d0:	b	15a20 <__assert_fail@plt+0x4968>
   159d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159d8:	mvn	r1, #127	; 0x7f
   159dc:	sdiv	r0, r1, r0
   159e0:	ldr	r1, [fp, #8]
   159e4:	cmp	r0, r1
   159e8:	blt	15a08 <__assert_fail@plt+0x4950>
   159ec:	b	15a20 <__assert_fail@plt+0x4968>
   159f0:	ldr	r0, [fp, #8]
   159f4:	movw	r1, #127	; 0x7f
   159f8:	sdiv	r0, r1, r0
   159fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a00:	cmp	r0, r1
   15a04:	bge	15a20 <__assert_fail@plt+0x4968>
   15a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a0c:	ldr	r1, [fp, #8]
   15a10:	mul	r0, r0, r1
   15a14:	sxtb	r0, r0
   15a18:	str	r0, [fp, #-28]	; 0xffffffe4
   15a1c:	b	16be4 <__assert_fail@plt+0x5b2c>
   15a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a24:	ldr	r1, [fp, #8]
   15a28:	mul	r0, r0, r1
   15a2c:	sxtb	r0, r0
   15a30:	str	r0, [fp, #-28]	; 0xffffffe4
   15a34:	b	16bf0 <__assert_fail@plt+0x5b38>
   15a38:	ldr	r0, [fp, #8]
   15a3c:	cmp	r0, #0
   15a40:	bge	15b50 <__assert_fail@plt+0x4a98>
   15a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a48:	cmp	r0, #0
   15a4c:	bge	15ad8 <__assert_fail@plt+0x4a20>
   15a50:	b	15a54 <__assert_fail@plt+0x499c>
   15a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a58:	ldr	r1, [fp, #8]
   15a5c:	movw	r2, #255	; 0xff
   15a60:	sdiv	r1, r2, r1
   15a64:	cmp	r0, r1
   15a68:	blt	15bec <__assert_fail@plt+0x4b34>
   15a6c:	b	15c04 <__assert_fail@plt+0x4b4c>
   15a70:	b	15a74 <__assert_fail@plt+0x49bc>
   15a74:	ldr	r0, [pc, #3592]	; 16884 <__assert_fail@plt+0x57cc>
   15a78:	ldr	r1, [fp, #8]
   15a7c:	cmp	r1, r0
   15a80:	blt	15a98 <__assert_fail@plt+0x49e0>
   15a84:	b	15aa4 <__assert_fail@plt+0x49ec>
   15a88:	ldr	r0, [fp, #8]
   15a8c:	movw	r1, #0
   15a90:	cmp	r1, r0
   15a94:	bge	15aa4 <__assert_fail@plt+0x49ec>
   15a98:	movw	r0, #0
   15a9c:	str	r0, [fp, #-40]	; 0xffffffd8
   15aa0:	b	15abc <__assert_fail@plt+0x4a04>
   15aa4:	ldr	r0, [fp, #8]
   15aa8:	movw	r1, #0
   15aac:	sub	r0, r1, r0
   15ab0:	movw	r1, #255	; 0xff
   15ab4:	sdiv	r0, r1, r0
   15ab8:	str	r0, [fp, #-40]	; 0xffffffd8
   15abc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15ac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ac4:	mvn	r2, #0
   15ac8:	sub	r1, r2, r1
   15acc:	cmp	r0, r1
   15ad0:	ble	15bec <__assert_fail@plt+0x4b34>
   15ad4:	b	15c04 <__assert_fail@plt+0x4b4c>
   15ad8:	b	15adc <__assert_fail@plt+0x4a24>
   15adc:	b	15b34 <__assert_fail@plt+0x4a7c>
   15ae0:	b	15b34 <__assert_fail@plt+0x4a7c>
   15ae4:	ldr	r0, [fp, #8]
   15ae8:	cmn	r0, #1
   15aec:	bne	15b34 <__assert_fail@plt+0x4a7c>
   15af0:	b	15af4 <__assert_fail@plt+0x4a3c>
   15af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15af8:	add	r0, r0, #0
   15afc:	movw	r1, #0
   15b00:	cmp	r1, r0
   15b04:	blt	15bec <__assert_fail@plt+0x4b34>
   15b08:	b	15c04 <__assert_fail@plt+0x4b4c>
   15b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b10:	movw	r1, #0
   15b14:	cmp	r1, r0
   15b18:	bge	15c04 <__assert_fail@plt+0x4b4c>
   15b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b20:	sub	r0, r0, #1
   15b24:	mvn	r1, #0
   15b28:	cmp	r1, r0
   15b2c:	blt	15bec <__assert_fail@plt+0x4b34>
   15b30:	b	15c04 <__assert_fail@plt+0x4b4c>
   15b34:	ldr	r0, [fp, #8]
   15b38:	movw	r1, #0
   15b3c:	sdiv	r0, r1, r0
   15b40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b44:	cmp	r0, r1
   15b48:	blt	15bec <__assert_fail@plt+0x4b34>
   15b4c:	b	15c04 <__assert_fail@plt+0x4b4c>
   15b50:	ldr	r0, [fp, #8]
   15b54:	cmp	r0, #0
   15b58:	bne	15b60 <__assert_fail@plt+0x4aa8>
   15b5c:	b	15c04 <__assert_fail@plt+0x4b4c>
   15b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b64:	cmp	r0, #0
   15b68:	bge	15bd4 <__assert_fail@plt+0x4b1c>
   15b6c:	b	15b70 <__assert_fail@plt+0x4ab8>
   15b70:	b	15bb8 <__assert_fail@plt+0x4b00>
   15b74:	b	15bb8 <__assert_fail@plt+0x4b00>
   15b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b7c:	cmn	r0, #1
   15b80:	bne	15bb8 <__assert_fail@plt+0x4b00>
   15b84:	b	15b88 <__assert_fail@plt+0x4ad0>
   15b88:	ldr	r0, [fp, #8]
   15b8c:	add	r0, r0, #0
   15b90:	movw	r1, #0
   15b94:	cmp	r1, r0
   15b98:	blt	15bec <__assert_fail@plt+0x4b34>
   15b9c:	b	15c04 <__assert_fail@plt+0x4b4c>
   15ba0:	ldr	r0, [fp, #8]
   15ba4:	sub	r0, r0, #1
   15ba8:	mvn	r1, #0
   15bac:	cmp	r1, r0
   15bb0:	blt	15bec <__assert_fail@plt+0x4b34>
   15bb4:	b	15c04 <__assert_fail@plt+0x4b4c>
   15bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bbc:	movw	r1, #0
   15bc0:	sdiv	r0, r1, r0
   15bc4:	ldr	r1, [fp, #8]
   15bc8:	cmp	r0, r1
   15bcc:	blt	15bec <__assert_fail@plt+0x4b34>
   15bd0:	b	15c04 <__assert_fail@plt+0x4b4c>
   15bd4:	ldr	r0, [fp, #8]
   15bd8:	movw	r1, #255	; 0xff
   15bdc:	sdiv	r0, r1, r0
   15be0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15be4:	cmp	r0, r1
   15be8:	bge	15c04 <__assert_fail@plt+0x4b4c>
   15bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bf0:	ldr	r1, [fp, #8]
   15bf4:	mul	r0, r0, r1
   15bf8:	and	r0, r0, #255	; 0xff
   15bfc:	str	r0, [fp, #-28]	; 0xffffffe4
   15c00:	b	16be4 <__assert_fail@plt+0x5b2c>
   15c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c08:	ldr	r1, [fp, #8]
   15c0c:	mul	r0, r0, r1
   15c10:	and	r0, r0, #255	; 0xff
   15c14:	str	r0, [fp, #-28]	; 0xffffffe4
   15c18:	b	16bf0 <__assert_fail@plt+0x5b38>
   15c1c:	b	15ff4 <__assert_fail@plt+0x4f3c>
   15c20:	b	15c24 <__assert_fail@plt+0x4b6c>
   15c24:	ldr	r0, [fp, #8]
   15c28:	cmp	r0, #0
   15c2c:	bge	15d40 <__assert_fail@plt+0x4c88>
   15c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c34:	cmp	r0, #0
   15c38:	bge	15cc4 <__assert_fail@plt+0x4c0c>
   15c3c:	b	15c40 <__assert_fail@plt+0x4b88>
   15c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c44:	ldr	r1, [fp, #8]
   15c48:	movw	r2, #32767	; 0x7fff
   15c4c:	sdiv	r1, r2, r1
   15c50:	cmp	r0, r1
   15c54:	blt	15de0 <__assert_fail@plt+0x4d28>
   15c58:	b	15df8 <__assert_fail@plt+0x4d40>
   15c5c:	b	15c60 <__assert_fail@plt+0x4ba8>
   15c60:	ldr	r0, [pc, #3100]	; 16884 <__assert_fail@plt+0x57cc>
   15c64:	ldr	r1, [fp, #8]
   15c68:	cmp	r1, r0
   15c6c:	blt	15c84 <__assert_fail@plt+0x4bcc>
   15c70:	b	15c90 <__assert_fail@plt+0x4bd8>
   15c74:	ldr	r0, [fp, #8]
   15c78:	movw	r1, #0
   15c7c:	cmp	r1, r0
   15c80:	bge	15c90 <__assert_fail@plt+0x4bd8>
   15c84:	movw	r0, #0
   15c88:	str	r0, [fp, #-44]	; 0xffffffd4
   15c8c:	b	15ca8 <__assert_fail@plt+0x4bf0>
   15c90:	ldr	r0, [fp, #8]
   15c94:	movw	r1, #0
   15c98:	sub	r0, r1, r0
   15c9c:	movw	r1, #32767	; 0x7fff
   15ca0:	sdiv	r0, r1, r0
   15ca4:	str	r0, [fp, #-44]	; 0xffffffd4
   15ca8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15cb0:	mvn	r2, #0
   15cb4:	sub	r1, r2, r1
   15cb8:	cmp	r0, r1
   15cbc:	ble	15de0 <__assert_fail@plt+0x4d28>
   15cc0:	b	15df8 <__assert_fail@plt+0x4d40>
   15cc4:	b	15cc8 <__assert_fail@plt+0x4c10>
   15cc8:	b	15d24 <__assert_fail@plt+0x4c6c>
   15ccc:	b	15d24 <__assert_fail@plt+0x4c6c>
   15cd0:	ldr	r0, [fp, #8]
   15cd4:	cmn	r0, #1
   15cd8:	bne	15d24 <__assert_fail@plt+0x4c6c>
   15cdc:	b	15ce0 <__assert_fail@plt+0x4c28>
   15ce0:	ldr	r0, [pc, #4068]	; 16ccc <__assert_fail@plt+0x5c14>
   15ce4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ce8:	add	r0, r1, r0
   15cec:	movw	r1, #0
   15cf0:	cmp	r1, r0
   15cf4:	blt	15de0 <__assert_fail@plt+0x4d28>
   15cf8:	b	15df8 <__assert_fail@plt+0x4d40>
   15cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d00:	movw	r1, #0
   15d04:	cmp	r1, r0
   15d08:	bge	15df8 <__assert_fail@plt+0x4d40>
   15d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d10:	sub	r0, r0, #1
   15d14:	movw	r1, #32767	; 0x7fff
   15d18:	cmp	r1, r0
   15d1c:	blt	15de0 <__assert_fail@plt+0x4d28>
   15d20:	b	15df8 <__assert_fail@plt+0x4d40>
   15d24:	ldr	r0, [pc, #4000]	; 16ccc <__assert_fail@plt+0x5c14>
   15d28:	ldr	r1, [fp, #8]
   15d2c:	sdiv	r0, r0, r1
   15d30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d34:	cmp	r0, r1
   15d38:	blt	15de0 <__assert_fail@plt+0x4d28>
   15d3c:	b	15df8 <__assert_fail@plt+0x4d40>
   15d40:	ldr	r0, [fp, #8]
   15d44:	cmp	r0, #0
   15d48:	bne	15d50 <__assert_fail@plt+0x4c98>
   15d4c:	b	15df8 <__assert_fail@plt+0x4d40>
   15d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d54:	cmp	r0, #0
   15d58:	bge	15dc8 <__assert_fail@plt+0x4d10>
   15d5c:	b	15d60 <__assert_fail@plt+0x4ca8>
   15d60:	b	15dac <__assert_fail@plt+0x4cf4>
   15d64:	b	15dac <__assert_fail@plt+0x4cf4>
   15d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d6c:	cmn	r0, #1
   15d70:	bne	15dac <__assert_fail@plt+0x4cf4>
   15d74:	b	15d78 <__assert_fail@plt+0x4cc0>
   15d78:	ldr	r0, [pc, #3916]	; 16ccc <__assert_fail@plt+0x5c14>
   15d7c:	ldr	r1, [fp, #8]
   15d80:	add	r0, r1, r0
   15d84:	movw	r1, #0
   15d88:	cmp	r1, r0
   15d8c:	blt	15de0 <__assert_fail@plt+0x4d28>
   15d90:	b	15df8 <__assert_fail@plt+0x4d40>
   15d94:	ldr	r0, [fp, #8]
   15d98:	sub	r0, r0, #1
   15d9c:	movw	r1, #32767	; 0x7fff
   15da0:	cmp	r1, r0
   15da4:	blt	15de0 <__assert_fail@plt+0x4d28>
   15da8:	b	15df8 <__assert_fail@plt+0x4d40>
   15dac:	ldr	r0, [pc, #3864]	; 16ccc <__assert_fail@plt+0x5c14>
   15db0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15db4:	sdiv	r0, r0, r1
   15db8:	ldr	r1, [fp, #8]
   15dbc:	cmp	r0, r1
   15dc0:	blt	15de0 <__assert_fail@plt+0x4d28>
   15dc4:	b	15df8 <__assert_fail@plt+0x4d40>
   15dc8:	ldr	r0, [fp, #8]
   15dcc:	movw	r1, #32767	; 0x7fff
   15dd0:	sdiv	r0, r1, r0
   15dd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15dd8:	cmp	r0, r1
   15ddc:	bge	15df8 <__assert_fail@plt+0x4d40>
   15de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15de4:	ldr	r1, [fp, #8]
   15de8:	mul	r0, r0, r1
   15dec:	sxth	r0, r0
   15df0:	str	r0, [fp, #-28]	; 0xffffffe4
   15df4:	b	16be4 <__assert_fail@plt+0x5b2c>
   15df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dfc:	ldr	r1, [fp, #8]
   15e00:	mul	r0, r0, r1
   15e04:	sxth	r0, r0
   15e08:	str	r0, [fp, #-28]	; 0xffffffe4
   15e0c:	b	16bf0 <__assert_fail@plt+0x5b38>
   15e10:	ldr	r0, [fp, #8]
   15e14:	cmp	r0, #0
   15e18:	bge	15f28 <__assert_fail@plt+0x4e70>
   15e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e20:	cmp	r0, #0
   15e24:	bge	15eb0 <__assert_fail@plt+0x4df8>
   15e28:	b	15e2c <__assert_fail@plt+0x4d74>
   15e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e30:	ldr	r1, [fp, #8]
   15e34:	movw	r2, #65535	; 0xffff
   15e38:	sdiv	r1, r2, r1
   15e3c:	cmp	r0, r1
   15e40:	blt	15fc4 <__assert_fail@plt+0x4f0c>
   15e44:	b	15fdc <__assert_fail@plt+0x4f24>
   15e48:	b	15e4c <__assert_fail@plt+0x4d94>
   15e4c:	ldr	r0, [pc, #2608]	; 16884 <__assert_fail@plt+0x57cc>
   15e50:	ldr	r1, [fp, #8]
   15e54:	cmp	r1, r0
   15e58:	blt	15e70 <__assert_fail@plt+0x4db8>
   15e5c:	b	15e7c <__assert_fail@plt+0x4dc4>
   15e60:	ldr	r0, [fp, #8]
   15e64:	movw	r1, #0
   15e68:	cmp	r1, r0
   15e6c:	bge	15e7c <__assert_fail@plt+0x4dc4>
   15e70:	movw	r0, #0
   15e74:	str	r0, [fp, #-48]	; 0xffffffd0
   15e78:	b	15e94 <__assert_fail@plt+0x4ddc>
   15e7c:	ldr	r0, [fp, #8]
   15e80:	movw	r1, #0
   15e84:	sub	r0, r1, r0
   15e88:	movw	r1, #65535	; 0xffff
   15e8c:	sdiv	r0, r1, r0
   15e90:	str	r0, [fp, #-48]	; 0xffffffd0
   15e94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e9c:	mvn	r2, #0
   15ea0:	sub	r1, r2, r1
   15ea4:	cmp	r0, r1
   15ea8:	ble	15fc4 <__assert_fail@plt+0x4f0c>
   15eac:	b	15fdc <__assert_fail@plt+0x4f24>
   15eb0:	b	15eb4 <__assert_fail@plt+0x4dfc>
   15eb4:	b	15f0c <__assert_fail@plt+0x4e54>
   15eb8:	b	15f0c <__assert_fail@plt+0x4e54>
   15ebc:	ldr	r0, [fp, #8]
   15ec0:	cmn	r0, #1
   15ec4:	bne	15f0c <__assert_fail@plt+0x4e54>
   15ec8:	b	15ecc <__assert_fail@plt+0x4e14>
   15ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ed0:	add	r0, r0, #0
   15ed4:	movw	r1, #0
   15ed8:	cmp	r1, r0
   15edc:	blt	15fc4 <__assert_fail@plt+0x4f0c>
   15ee0:	b	15fdc <__assert_fail@plt+0x4f24>
   15ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ee8:	movw	r1, #0
   15eec:	cmp	r1, r0
   15ef0:	bge	15fdc <__assert_fail@plt+0x4f24>
   15ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ef8:	sub	r0, r0, #1
   15efc:	mvn	r1, #0
   15f00:	cmp	r1, r0
   15f04:	blt	15fc4 <__assert_fail@plt+0x4f0c>
   15f08:	b	15fdc <__assert_fail@plt+0x4f24>
   15f0c:	ldr	r0, [fp, #8]
   15f10:	movw	r1, #0
   15f14:	sdiv	r0, r1, r0
   15f18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f1c:	cmp	r0, r1
   15f20:	blt	15fc4 <__assert_fail@plt+0x4f0c>
   15f24:	b	15fdc <__assert_fail@plt+0x4f24>
   15f28:	ldr	r0, [fp, #8]
   15f2c:	cmp	r0, #0
   15f30:	bne	15f38 <__assert_fail@plt+0x4e80>
   15f34:	b	15fdc <__assert_fail@plt+0x4f24>
   15f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f3c:	cmp	r0, #0
   15f40:	bge	15fac <__assert_fail@plt+0x4ef4>
   15f44:	b	15f48 <__assert_fail@plt+0x4e90>
   15f48:	b	15f90 <__assert_fail@plt+0x4ed8>
   15f4c:	b	15f90 <__assert_fail@plt+0x4ed8>
   15f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f54:	cmn	r0, #1
   15f58:	bne	15f90 <__assert_fail@plt+0x4ed8>
   15f5c:	b	15f60 <__assert_fail@plt+0x4ea8>
   15f60:	ldr	r0, [fp, #8]
   15f64:	add	r0, r0, #0
   15f68:	movw	r1, #0
   15f6c:	cmp	r1, r0
   15f70:	blt	15fc4 <__assert_fail@plt+0x4f0c>
   15f74:	b	15fdc <__assert_fail@plt+0x4f24>
   15f78:	ldr	r0, [fp, #8]
   15f7c:	sub	r0, r0, #1
   15f80:	mvn	r1, #0
   15f84:	cmp	r1, r0
   15f88:	blt	15fc4 <__assert_fail@plt+0x4f0c>
   15f8c:	b	15fdc <__assert_fail@plt+0x4f24>
   15f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f94:	movw	r1, #0
   15f98:	sdiv	r0, r1, r0
   15f9c:	ldr	r1, [fp, #8]
   15fa0:	cmp	r0, r1
   15fa4:	blt	15fc4 <__assert_fail@plt+0x4f0c>
   15fa8:	b	15fdc <__assert_fail@plt+0x4f24>
   15fac:	ldr	r0, [fp, #8]
   15fb0:	movw	r1, #65535	; 0xffff
   15fb4:	sdiv	r0, r1, r0
   15fb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15fbc:	cmp	r0, r1
   15fc0:	bge	15fdc <__assert_fail@plt+0x4f24>
   15fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fc8:	ldr	r1, [fp, #8]
   15fcc:	mul	r0, r0, r1
   15fd0:	uxth	r0, r0
   15fd4:	str	r0, [fp, #-28]	; 0xffffffe4
   15fd8:	b	16be4 <__assert_fail@plt+0x5b2c>
   15fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fe0:	ldr	r1, [fp, #8]
   15fe4:	mul	r0, r0, r1
   15fe8:	uxth	r0, r0
   15fec:	str	r0, [fp, #-28]	; 0xffffffe4
   15ff0:	b	16bf0 <__assert_fail@plt+0x5b38>
   15ff4:	b	15ff8 <__assert_fail@plt+0x4f40>
   15ff8:	b	15ffc <__assert_fail@plt+0x4f44>
   15ffc:	ldr	r0, [fp, #8]
   16000:	cmp	r0, #0
   16004:	bge	16108 <__assert_fail@plt+0x5050>
   16008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1600c:	cmp	r0, #0
   16010:	bge	1609c <__assert_fail@plt+0x4fe4>
   16014:	b	16018 <__assert_fail@plt+0x4f60>
   16018:	ldr	r0, [pc, #1984]	; 167e0 <__assert_fail@plt+0x5728>
   1601c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16020:	ldr	r2, [fp, #8]
   16024:	sdiv	r0, r0, r2
   16028:	cmp	r1, r0
   1602c:	blt	16198 <__assert_fail@plt+0x50e0>
   16030:	b	161ac <__assert_fail@plt+0x50f4>
   16034:	b	16038 <__assert_fail@plt+0x4f80>
   16038:	ldr	r0, [pc, #2116]	; 16884 <__assert_fail@plt+0x57cc>
   1603c:	ldr	r1, [fp, #8]
   16040:	cmp	r1, r0
   16044:	blt	1605c <__assert_fail@plt+0x4fa4>
   16048:	b	16068 <__assert_fail@plt+0x4fb0>
   1604c:	ldr	r0, [fp, #8]
   16050:	movw	r1, #0
   16054:	cmp	r1, r0
   16058:	bge	16068 <__assert_fail@plt+0x4fb0>
   1605c:	movw	r0, #0
   16060:	str	r0, [fp, #-52]	; 0xffffffcc
   16064:	b	16080 <__assert_fail@plt+0x4fc8>
   16068:	ldr	r0, [pc, #1904]	; 167e0 <__assert_fail@plt+0x5728>
   1606c:	ldr	r1, [fp, #8]
   16070:	movw	r2, #0
   16074:	sub	r1, r2, r1
   16078:	sdiv	r0, r0, r1
   1607c:	str	r0, [fp, #-52]	; 0xffffffcc
   16080:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16084:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16088:	mvn	r2, #0
   1608c:	sub	r1, r2, r1
   16090:	cmp	r0, r1
   16094:	ble	16198 <__assert_fail@plt+0x50e0>
   16098:	b	161ac <__assert_fail@plt+0x50f4>
   1609c:	ldr	r0, [fp, #8]
   160a0:	cmn	r0, #1
   160a4:	bne	160ec <__assert_fail@plt+0x5034>
   160a8:	b	160ac <__assert_fail@plt+0x4ff4>
   160ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160b0:	add	r0, r0, #-2147483648	; 0x80000000
   160b4:	movw	r1, #0
   160b8:	cmp	r1, r0
   160bc:	blt	16198 <__assert_fail@plt+0x50e0>
   160c0:	b	161ac <__assert_fail@plt+0x50f4>
   160c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160c8:	movw	r1, #0
   160cc:	cmp	r1, r0
   160d0:	bge	161ac <__assert_fail@plt+0x50f4>
   160d4:	ldr	r0, [pc, #1796]	; 167e0 <__assert_fail@plt+0x5728>
   160d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   160dc:	sub	r1, r1, #1
   160e0:	cmp	r0, r1
   160e4:	blt	16198 <__assert_fail@plt+0x50e0>
   160e8:	b	161ac <__assert_fail@plt+0x50f4>
   160ec:	ldr	r0, [pc, #4080]	; 170e4 <__assert_fail@plt+0x602c>
   160f0:	ldr	r1, [fp, #8]
   160f4:	sdiv	r0, r0, r1
   160f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   160fc:	cmp	r0, r1
   16100:	blt	16198 <__assert_fail@plt+0x50e0>
   16104:	b	161ac <__assert_fail@plt+0x50f4>
   16108:	ldr	r0, [fp, #8]
   1610c:	cmp	r0, #0
   16110:	bne	16118 <__assert_fail@plt+0x5060>
   16114:	b	161ac <__assert_fail@plt+0x50f4>
   16118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1611c:	cmp	r0, #0
   16120:	bge	16180 <__assert_fail@plt+0x50c8>
   16124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16128:	cmn	r0, #1
   1612c:	bne	16164 <__assert_fail@plt+0x50ac>
   16130:	b	16134 <__assert_fail@plt+0x507c>
   16134:	ldr	r0, [fp, #8]
   16138:	add	r0, r0, #-2147483648	; 0x80000000
   1613c:	movw	r1, #0
   16140:	cmp	r1, r0
   16144:	blt	16198 <__assert_fail@plt+0x50e0>
   16148:	b	161ac <__assert_fail@plt+0x50f4>
   1614c:	ldr	r0, [pc, #1676]	; 167e0 <__assert_fail@plt+0x5728>
   16150:	ldr	r1, [fp, #8]
   16154:	sub	r1, r1, #1
   16158:	cmp	r0, r1
   1615c:	blt	16198 <__assert_fail@plt+0x50e0>
   16160:	b	161ac <__assert_fail@plt+0x50f4>
   16164:	ldr	r0, [pc, #3960]	; 170e4 <__assert_fail@plt+0x602c>
   16168:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1616c:	sdiv	r0, r0, r1
   16170:	ldr	r1, [fp, #8]
   16174:	cmp	r0, r1
   16178:	blt	16198 <__assert_fail@plt+0x50e0>
   1617c:	b	161ac <__assert_fail@plt+0x50f4>
   16180:	ldr	r0, [pc, #1624]	; 167e0 <__assert_fail@plt+0x5728>
   16184:	ldr	r1, [fp, #8]
   16188:	sdiv	r0, r0, r1
   1618c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16190:	cmp	r0, r1
   16194:	bge	161ac <__assert_fail@plt+0x50f4>
   16198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1619c:	ldr	r1, [fp, #8]
   161a0:	mul	r0, r0, r1
   161a4:	str	r0, [fp, #-28]	; 0xffffffe4
   161a8:	b	16be4 <__assert_fail@plt+0x5b2c>
   161ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161b0:	ldr	r1, [fp, #8]
   161b4:	mul	r0, r0, r1
   161b8:	str	r0, [fp, #-28]	; 0xffffffe4
   161bc:	b	16bf0 <__assert_fail@plt+0x5b38>
   161c0:	ldr	r0, [fp, #8]
   161c4:	cmp	r0, #0
   161c8:	bge	162d8 <__assert_fail@plt+0x5220>
   161cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161d0:	cmp	r0, #0
   161d4:	bge	16260 <__assert_fail@plt+0x51a8>
   161d8:	b	161f8 <__assert_fail@plt+0x5140>
   161dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161e0:	ldr	r1, [fp, #8]
   161e4:	mvn	r2, #0
   161e8:	udiv	r1, r2, r1
   161ec:	cmp	r0, r1
   161f0:	bcc	16374 <__assert_fail@plt+0x52bc>
   161f4:	b	16388 <__assert_fail@plt+0x52d0>
   161f8:	b	161fc <__assert_fail@plt+0x5144>
   161fc:	ldr	r0, [pc, #1664]	; 16884 <__assert_fail@plt+0x57cc>
   16200:	ldr	r1, [fp, #8]
   16204:	cmp	r1, r0
   16208:	blt	16220 <__assert_fail@plt+0x5168>
   1620c:	b	1622c <__assert_fail@plt+0x5174>
   16210:	ldr	r0, [fp, #8]
   16214:	movw	r1, #0
   16218:	cmp	r1, r0
   1621c:	bge	1622c <__assert_fail@plt+0x5174>
   16220:	movw	r0, #1
   16224:	str	r0, [fp, #-56]	; 0xffffffc8
   16228:	b	16244 <__assert_fail@plt+0x518c>
   1622c:	ldr	r0, [fp, #8]
   16230:	movw	r1, #0
   16234:	sub	r0, r1, r0
   16238:	mvn	r1, #0
   1623c:	udiv	r0, r1, r0
   16240:	str	r0, [fp, #-56]	; 0xffffffc8
   16244:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16248:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1624c:	mvn	r2, #0
   16250:	sub	r1, r2, r1
   16254:	cmp	r0, r1
   16258:	bls	16374 <__assert_fail@plt+0x52bc>
   1625c:	b	16388 <__assert_fail@plt+0x52d0>
   16260:	b	16264 <__assert_fail@plt+0x51ac>
   16264:	b	162bc <__assert_fail@plt+0x5204>
   16268:	b	162bc <__assert_fail@plt+0x5204>
   1626c:	ldr	r0, [fp, #8]
   16270:	cmn	r0, #1
   16274:	bne	162bc <__assert_fail@plt+0x5204>
   16278:	b	1627c <__assert_fail@plt+0x51c4>
   1627c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16280:	add	r0, r0, #0
   16284:	movw	r1, #0
   16288:	cmp	r1, r0
   1628c:	blt	16374 <__assert_fail@plt+0x52bc>
   16290:	b	16388 <__assert_fail@plt+0x52d0>
   16294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16298:	movw	r1, #0
   1629c:	cmp	r1, r0
   162a0:	bge	16388 <__assert_fail@plt+0x52d0>
   162a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162a8:	sub	r0, r0, #1
   162ac:	mvn	r1, #0
   162b0:	cmp	r1, r0
   162b4:	blt	16374 <__assert_fail@plt+0x52bc>
   162b8:	b	16388 <__assert_fail@plt+0x52d0>
   162bc:	ldr	r0, [fp, #8]
   162c0:	movw	r1, #0
   162c4:	sdiv	r0, r1, r0
   162c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   162cc:	cmp	r0, r1
   162d0:	blt	16374 <__assert_fail@plt+0x52bc>
   162d4:	b	16388 <__assert_fail@plt+0x52d0>
   162d8:	ldr	r0, [fp, #8]
   162dc:	cmp	r0, #0
   162e0:	bne	162e8 <__assert_fail@plt+0x5230>
   162e4:	b	16388 <__assert_fail@plt+0x52d0>
   162e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162ec:	cmp	r0, #0
   162f0:	bge	1635c <__assert_fail@plt+0x52a4>
   162f4:	b	162f8 <__assert_fail@plt+0x5240>
   162f8:	b	16340 <__assert_fail@plt+0x5288>
   162fc:	b	16340 <__assert_fail@plt+0x5288>
   16300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16304:	cmn	r0, #1
   16308:	bne	16340 <__assert_fail@plt+0x5288>
   1630c:	b	16310 <__assert_fail@plt+0x5258>
   16310:	ldr	r0, [fp, #8]
   16314:	add	r0, r0, #0
   16318:	movw	r1, #0
   1631c:	cmp	r1, r0
   16320:	blt	16374 <__assert_fail@plt+0x52bc>
   16324:	b	16388 <__assert_fail@plt+0x52d0>
   16328:	ldr	r0, [fp, #8]
   1632c:	sub	r0, r0, #1
   16330:	mvn	r1, #0
   16334:	cmp	r1, r0
   16338:	blt	16374 <__assert_fail@plt+0x52bc>
   1633c:	b	16388 <__assert_fail@plt+0x52d0>
   16340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16344:	movw	r1, #0
   16348:	sdiv	r0, r1, r0
   1634c:	ldr	r1, [fp, #8]
   16350:	cmp	r0, r1
   16354:	blt	16374 <__assert_fail@plt+0x52bc>
   16358:	b	16388 <__assert_fail@plt+0x52d0>
   1635c:	ldr	r0, [fp, #8]
   16360:	mvn	r1, #0
   16364:	udiv	r0, r1, r0
   16368:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1636c:	cmp	r0, r1
   16370:	bcs	16388 <__assert_fail@plt+0x52d0>
   16374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16378:	ldr	r1, [fp, #8]
   1637c:	mul	r0, r0, r1
   16380:	str	r0, [fp, #-28]	; 0xffffffe4
   16384:	b	16be4 <__assert_fail@plt+0x5b2c>
   16388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1638c:	ldr	r1, [fp, #8]
   16390:	mul	r0, r0, r1
   16394:	str	r0, [fp, #-28]	; 0xffffffe4
   16398:	b	16bf0 <__assert_fail@plt+0x5b38>
   1639c:	b	163a0 <__assert_fail@plt+0x52e8>
   163a0:	b	163a4 <__assert_fail@plt+0x52ec>
   163a4:	ldr	r0, [fp, #8]
   163a8:	cmp	r0, #0
   163ac:	bge	164b0 <__assert_fail@plt+0x53f8>
   163b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163b4:	cmp	r0, #0
   163b8:	bge	16444 <__assert_fail@plt+0x538c>
   163bc:	b	163c0 <__assert_fail@plt+0x5308>
   163c0:	ldr	r0, [pc, #1048]	; 167e0 <__assert_fail@plt+0x5728>
   163c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   163c8:	ldr	r2, [fp, #8]
   163cc:	sdiv	r0, r0, r2
   163d0:	cmp	r1, r0
   163d4:	blt	16540 <__assert_fail@plt+0x5488>
   163d8:	b	16554 <__assert_fail@plt+0x549c>
   163dc:	b	163e0 <__assert_fail@plt+0x5328>
   163e0:	ldr	r0, [pc, #1180]	; 16884 <__assert_fail@plt+0x57cc>
   163e4:	ldr	r1, [fp, #8]
   163e8:	cmp	r1, r0
   163ec:	blt	16404 <__assert_fail@plt+0x534c>
   163f0:	b	16410 <__assert_fail@plt+0x5358>
   163f4:	ldr	r0, [fp, #8]
   163f8:	movw	r1, #0
   163fc:	cmp	r1, r0
   16400:	bge	16410 <__assert_fail@plt+0x5358>
   16404:	movw	r0, #0
   16408:	str	r0, [fp, #-60]	; 0xffffffc4
   1640c:	b	16428 <__assert_fail@plt+0x5370>
   16410:	ldr	r0, [pc, #968]	; 167e0 <__assert_fail@plt+0x5728>
   16414:	ldr	r1, [fp, #8]
   16418:	movw	r2, #0
   1641c:	sub	r1, r2, r1
   16420:	sdiv	r0, r0, r1
   16424:	str	r0, [fp, #-60]	; 0xffffffc4
   16428:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1642c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16430:	mvn	r2, #0
   16434:	sub	r1, r2, r1
   16438:	cmp	r0, r1
   1643c:	ble	16540 <__assert_fail@plt+0x5488>
   16440:	b	16554 <__assert_fail@plt+0x549c>
   16444:	ldr	r0, [fp, #8]
   16448:	cmn	r0, #1
   1644c:	bne	16494 <__assert_fail@plt+0x53dc>
   16450:	b	16454 <__assert_fail@plt+0x539c>
   16454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16458:	add	r0, r0, #-2147483648	; 0x80000000
   1645c:	movw	r1, #0
   16460:	cmp	r1, r0
   16464:	blt	16540 <__assert_fail@plt+0x5488>
   16468:	b	16554 <__assert_fail@plt+0x549c>
   1646c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16470:	movw	r1, #0
   16474:	cmp	r1, r0
   16478:	bge	16554 <__assert_fail@plt+0x549c>
   1647c:	ldr	r0, [pc, #860]	; 167e0 <__assert_fail@plt+0x5728>
   16480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16484:	sub	r1, r1, #1
   16488:	cmp	r0, r1
   1648c:	blt	16540 <__assert_fail@plt+0x5488>
   16490:	b	16554 <__assert_fail@plt+0x549c>
   16494:	ldr	r0, [pc, #3144]	; 170e4 <__assert_fail@plt+0x602c>
   16498:	ldr	r1, [fp, #8]
   1649c:	sdiv	r0, r0, r1
   164a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164a4:	cmp	r0, r1
   164a8:	blt	16540 <__assert_fail@plt+0x5488>
   164ac:	b	16554 <__assert_fail@plt+0x549c>
   164b0:	ldr	r0, [fp, #8]
   164b4:	cmp	r0, #0
   164b8:	bne	164c0 <__assert_fail@plt+0x5408>
   164bc:	b	16554 <__assert_fail@plt+0x549c>
   164c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164c4:	cmp	r0, #0
   164c8:	bge	16528 <__assert_fail@plt+0x5470>
   164cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164d0:	cmn	r0, #1
   164d4:	bne	1650c <__assert_fail@plt+0x5454>
   164d8:	b	164dc <__assert_fail@plt+0x5424>
   164dc:	ldr	r0, [fp, #8]
   164e0:	add	r0, r0, #-2147483648	; 0x80000000
   164e4:	movw	r1, #0
   164e8:	cmp	r1, r0
   164ec:	blt	16540 <__assert_fail@plt+0x5488>
   164f0:	b	16554 <__assert_fail@plt+0x549c>
   164f4:	ldr	r0, [pc, #740]	; 167e0 <__assert_fail@plt+0x5728>
   164f8:	ldr	r1, [fp, #8]
   164fc:	sub	r1, r1, #1
   16500:	cmp	r0, r1
   16504:	blt	16540 <__assert_fail@plt+0x5488>
   16508:	b	16554 <__assert_fail@plt+0x549c>
   1650c:	ldr	r0, [pc, #3024]	; 170e4 <__assert_fail@plt+0x602c>
   16510:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16514:	sdiv	r0, r0, r1
   16518:	ldr	r1, [fp, #8]
   1651c:	cmp	r0, r1
   16520:	blt	16540 <__assert_fail@plt+0x5488>
   16524:	b	16554 <__assert_fail@plt+0x549c>
   16528:	ldr	r0, [pc, #688]	; 167e0 <__assert_fail@plt+0x5728>
   1652c:	ldr	r1, [fp, #8]
   16530:	sdiv	r0, r0, r1
   16534:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16538:	cmp	r0, r1
   1653c:	bge	16554 <__assert_fail@plt+0x549c>
   16540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16544:	ldr	r1, [fp, #8]
   16548:	mul	r0, r0, r1
   1654c:	str	r0, [fp, #-28]	; 0xffffffe4
   16550:	b	16be4 <__assert_fail@plt+0x5b2c>
   16554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16558:	ldr	r1, [fp, #8]
   1655c:	mul	r0, r0, r1
   16560:	str	r0, [fp, #-28]	; 0xffffffe4
   16564:	b	16bf0 <__assert_fail@plt+0x5b38>
   16568:	ldr	r0, [fp, #8]
   1656c:	cmp	r0, #0
   16570:	bge	16680 <__assert_fail@plt+0x55c8>
   16574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16578:	cmp	r0, #0
   1657c:	bge	16608 <__assert_fail@plt+0x5550>
   16580:	b	165a0 <__assert_fail@plt+0x54e8>
   16584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16588:	ldr	r1, [fp, #8]
   1658c:	mvn	r2, #0
   16590:	udiv	r1, r2, r1
   16594:	cmp	r0, r1
   16598:	bcc	1671c <__assert_fail@plt+0x5664>
   1659c:	b	16730 <__assert_fail@plt+0x5678>
   165a0:	b	165a4 <__assert_fail@plt+0x54ec>
   165a4:	ldr	r0, [pc, #728]	; 16884 <__assert_fail@plt+0x57cc>
   165a8:	ldr	r1, [fp, #8]
   165ac:	cmp	r1, r0
   165b0:	blt	165c8 <__assert_fail@plt+0x5510>
   165b4:	b	165d4 <__assert_fail@plt+0x551c>
   165b8:	ldr	r0, [fp, #8]
   165bc:	movw	r1, #0
   165c0:	cmp	r1, r0
   165c4:	bge	165d4 <__assert_fail@plt+0x551c>
   165c8:	movw	r0, #1
   165cc:	str	r0, [fp, #-64]	; 0xffffffc0
   165d0:	b	165ec <__assert_fail@plt+0x5534>
   165d4:	ldr	r0, [fp, #8]
   165d8:	movw	r1, #0
   165dc:	sub	r0, r1, r0
   165e0:	mvn	r1, #0
   165e4:	udiv	r0, r1, r0
   165e8:	str	r0, [fp, #-64]	; 0xffffffc0
   165ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   165f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165f4:	mvn	r2, #0
   165f8:	sub	r1, r2, r1
   165fc:	cmp	r0, r1
   16600:	bls	1671c <__assert_fail@plt+0x5664>
   16604:	b	16730 <__assert_fail@plt+0x5678>
   16608:	b	1660c <__assert_fail@plt+0x5554>
   1660c:	b	16664 <__assert_fail@plt+0x55ac>
   16610:	b	16664 <__assert_fail@plt+0x55ac>
   16614:	ldr	r0, [fp, #8]
   16618:	cmn	r0, #1
   1661c:	bne	16664 <__assert_fail@plt+0x55ac>
   16620:	b	16624 <__assert_fail@plt+0x556c>
   16624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16628:	add	r0, r0, #0
   1662c:	movw	r1, #0
   16630:	cmp	r1, r0
   16634:	blt	1671c <__assert_fail@plt+0x5664>
   16638:	b	16730 <__assert_fail@plt+0x5678>
   1663c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16640:	movw	r1, #0
   16644:	cmp	r1, r0
   16648:	bge	16730 <__assert_fail@plt+0x5678>
   1664c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16650:	sub	r0, r0, #1
   16654:	mvn	r1, #0
   16658:	cmp	r1, r0
   1665c:	blt	1671c <__assert_fail@plt+0x5664>
   16660:	b	16730 <__assert_fail@plt+0x5678>
   16664:	ldr	r0, [fp, #8]
   16668:	movw	r1, #0
   1666c:	sdiv	r0, r1, r0
   16670:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16674:	cmp	r0, r1
   16678:	blt	1671c <__assert_fail@plt+0x5664>
   1667c:	b	16730 <__assert_fail@plt+0x5678>
   16680:	ldr	r0, [fp, #8]
   16684:	cmp	r0, #0
   16688:	bne	16690 <__assert_fail@plt+0x55d8>
   1668c:	b	16730 <__assert_fail@plt+0x5678>
   16690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16694:	cmp	r0, #0
   16698:	bge	16704 <__assert_fail@plt+0x564c>
   1669c:	b	166a0 <__assert_fail@plt+0x55e8>
   166a0:	b	166e8 <__assert_fail@plt+0x5630>
   166a4:	b	166e8 <__assert_fail@plt+0x5630>
   166a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166ac:	cmn	r0, #1
   166b0:	bne	166e8 <__assert_fail@plt+0x5630>
   166b4:	b	166b8 <__assert_fail@plt+0x5600>
   166b8:	ldr	r0, [fp, #8]
   166bc:	add	r0, r0, #0
   166c0:	movw	r1, #0
   166c4:	cmp	r1, r0
   166c8:	blt	1671c <__assert_fail@plt+0x5664>
   166cc:	b	16730 <__assert_fail@plt+0x5678>
   166d0:	ldr	r0, [fp, #8]
   166d4:	sub	r0, r0, #1
   166d8:	mvn	r1, #0
   166dc:	cmp	r1, r0
   166e0:	blt	1671c <__assert_fail@plt+0x5664>
   166e4:	b	16730 <__assert_fail@plt+0x5678>
   166e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166ec:	movw	r1, #0
   166f0:	sdiv	r0, r1, r0
   166f4:	ldr	r1, [fp, #8]
   166f8:	cmp	r0, r1
   166fc:	blt	1671c <__assert_fail@plt+0x5664>
   16700:	b	16730 <__assert_fail@plt+0x5678>
   16704:	ldr	r0, [fp, #8]
   16708:	mvn	r1, #0
   1670c:	udiv	r0, r1, r0
   16710:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16714:	cmp	r0, r1
   16718:	bcs	16730 <__assert_fail@plt+0x5678>
   1671c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16720:	ldr	r1, [fp, #8]
   16724:	mul	r0, r0, r1
   16728:	str	r0, [fp, #-28]	; 0xffffffe4
   1672c:	b	16be4 <__assert_fail@plt+0x5b2c>
   16730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16734:	ldr	r1, [fp, #8]
   16738:	mul	r0, r0, r1
   1673c:	str	r0, [fp, #-28]	; 0xffffffe4
   16740:	b	16bf0 <__assert_fail@plt+0x5b38>
   16744:	b	16748 <__assert_fail@plt+0x5690>
   16748:	ldr	r0, [fp, #8]
   1674c:	cmp	r0, #0
   16750:	bge	168c0 <__assert_fail@plt+0x5808>
   16754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16758:	cmp	r0, #0
   1675c:	bge	16838 <__assert_fail@plt+0x5780>
   16760:	b	16764 <__assert_fail@plt+0x56ac>
   16764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16768:	ldr	r1, [fp, #8]
   1676c:	asr	r3, r1, #31
   16770:	mvn	r2, #0
   16774:	mvn	ip, #-2147483648	; 0x80000000
   16778:	str	r0, [fp, #-68]	; 0xffffffbc
   1677c:	mov	r0, r2
   16780:	str	r1, [fp, #-72]	; 0xffffffb8
   16784:	mov	r1, ip
   16788:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1678c:	bl	1c644 <__assert_fail@plt+0xb58c>
   16790:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16794:	subs	r0, r2, r0
   16798:	rscs	r1, r1, r2, asr #31
   1679c:	blt	16988 <__assert_fail@plt+0x58d0>
   167a0:	b	1699c <__assert_fail@plt+0x58e4>
   167a4:	b	167a8 <__assert_fail@plt+0x56f0>
   167a8:	ldr	r0, [pc, #212]	; 16884 <__assert_fail@plt+0x57cc>
   167ac:	ldr	r1, [fp, #8]
   167b0:	cmp	r1, r0
   167b4:	blt	167cc <__assert_fail@plt+0x5714>
   167b8:	b	167e4 <__assert_fail@plt+0x572c>
   167bc:	ldr	r0, [fp, #8]
   167c0:	movw	r1, #0
   167c4:	cmp	r1, r0
   167c8:	bge	167e4 <__assert_fail@plt+0x572c>
   167cc:	mov	r0, #0
   167d0:	mvn	r1, #0
   167d4:	str	r1, [fp, #-76]	; 0xffffffb4
   167d8:	str	r0, [fp, #-80]	; 0xffffffb0
   167dc:	b	16818 <__assert_fail@plt+0x5760>
   167e0:	svcvc	0x00ffffff
   167e4:	ldr	r0, [fp, #8]
   167e8:	rsb	r0, r0, #0
   167ec:	asr	r3, r0, #31
   167f0:	mvn	r1, #0
   167f4:	mvn	r2, #-2147483648	; 0x80000000
   167f8:	str	r0, [fp, #-84]	; 0xffffffac
   167fc:	mov	r0, r1
   16800:	mov	r1, r2
   16804:	ldr	r2, [fp, #-84]	; 0xffffffac
   16808:	bl	1c644 <__assert_fail@plt+0xb58c>
   1680c:	str	r0, [fp, #-76]	; 0xffffffb4
   16810:	str	r1, [fp, #-80]	; 0xffffffb0
   16814:	b	16818 <__assert_fail@plt+0x5760>
   16818:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1681c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16820:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16824:	mvn	r2, r2
   16828:	subs	r1, r2, r1
   1682c:	rscs	r0, r0, r2, asr #31
   16830:	bge	16988 <__assert_fail@plt+0x58d0>
   16834:	b	1699c <__assert_fail@plt+0x58e4>
   16838:	ldr	r0, [fp, #8]
   1683c:	cmn	r0, #1
   16840:	bne	16888 <__assert_fail@plt+0x57d0>
   16844:	b	16848 <__assert_fail@plt+0x5790>
   16848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1684c:	mov	r1, #-2147483648	; 0x80000000
   16850:	add	r1, r1, r0, asr #31
   16854:	rsbs	r0, r0, #0
   16858:	rscs	r1, r1, #0
   1685c:	blt	16988 <__assert_fail@plt+0x58d0>
   16860:	b	1699c <__assert_fail@plt+0x58e4>
   16864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16868:	movw	r1, #0
   1686c:	cmp	r1, r0
   16870:	bge	1699c <__assert_fail@plt+0x58e4>
   16874:	mov	r0, #0
   16878:	cmp	r0, #0
   1687c:	bne	16988 <__assert_fail@plt+0x58d0>
   16880:	b	1699c <__assert_fail@plt+0x58e4>
   16884:	andhi	r0, r0, r1
   16888:	ldr	r0, [fp, #8]
   1688c:	asr	r3, r0, #31
   16890:	mov	r1, #0
   16894:	mov	r2, #-2147483648	; 0x80000000
   16898:	str	r0, [fp, #-88]	; 0xffffffa8
   1689c:	mov	r0, r1
   168a0:	mov	r1, r2
   168a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   168a8:	bl	1c644 <__assert_fail@plt+0xb58c>
   168ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   168b0:	subs	r0, r0, r2
   168b4:	sbcs	r1, r1, r2, asr #31
   168b8:	blt	16988 <__assert_fail@plt+0x58d0>
   168bc:	b	1699c <__assert_fail@plt+0x58e4>
   168c0:	ldr	r0, [fp, #8]
   168c4:	cmp	r0, #0
   168c8:	bne	168d0 <__assert_fail@plt+0x5818>
   168cc:	b	1699c <__assert_fail@plt+0x58e4>
   168d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168d4:	cmp	r0, #0
   168d8:	bge	16950 <__assert_fail@plt+0x5898>
   168dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168e0:	cmn	r0, #1
   168e4:	bne	16918 <__assert_fail@plt+0x5860>
   168e8:	b	168ec <__assert_fail@plt+0x5834>
   168ec:	ldr	r0, [fp, #8]
   168f0:	mov	r1, #-2147483648	; 0x80000000
   168f4:	add	r1, r1, r0, asr #31
   168f8:	rsbs	r0, r0, #0
   168fc:	rscs	r1, r1, #0
   16900:	blt	16988 <__assert_fail@plt+0x58d0>
   16904:	b	1699c <__assert_fail@plt+0x58e4>
   16908:	mov	r0, #0
   1690c:	cmp	r0, #0
   16910:	bne	16988 <__assert_fail@plt+0x58d0>
   16914:	b	1699c <__assert_fail@plt+0x58e4>
   16918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1691c:	asr	r3, r0, #31
   16920:	mov	r1, #0
   16924:	mov	r2, #-2147483648	; 0x80000000
   16928:	str	r0, [fp, #-92]	; 0xffffffa4
   1692c:	mov	r0, r1
   16930:	mov	r1, r2
   16934:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16938:	bl	1c644 <__assert_fail@plt+0xb58c>
   1693c:	ldr	r2, [fp, #8]
   16940:	subs	r0, r0, r2
   16944:	sbcs	r1, r1, r2, asr #31
   16948:	blt	16988 <__assert_fail@plt+0x58d0>
   1694c:	b	1699c <__assert_fail@plt+0x58e4>
   16950:	ldr	r0, [fp, #8]
   16954:	asr	r3, r0, #31
   16958:	mvn	r1, #0
   1695c:	mvn	r2, #-2147483648	; 0x80000000
   16960:	str	r0, [fp, #-96]	; 0xffffffa0
   16964:	mov	r0, r1
   16968:	mov	r1, r2
   1696c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16970:	bl	1c644 <__assert_fail@plt+0xb58c>
   16974:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16978:	subs	r0, r0, r2
   1697c:	sbcs	r1, r1, r2, asr #31
   16980:	bge	1699c <__assert_fail@plt+0x58e4>
   16984:	b	16988 <__assert_fail@plt+0x58d0>
   16988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1698c:	ldr	r1, [fp, #8]
   16990:	mul	r0, r0, r1
   16994:	str	r0, [fp, #-28]	; 0xffffffe4
   16998:	b	16be4 <__assert_fail@plt+0x5b2c>
   1699c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169a0:	ldr	r1, [fp, #8]
   169a4:	mul	r0, r0, r1
   169a8:	str	r0, [fp, #-28]	; 0xffffffe4
   169ac:	b	16bf0 <__assert_fail@plt+0x5b38>
   169b0:	ldr	r0, [fp, #8]
   169b4:	cmp	r0, #0
   169b8:	bge	16b08 <__assert_fail@plt+0x5a50>
   169bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169c0:	cmp	r0, #0
   169c4:	bge	16a90 <__assert_fail@plt+0x59d8>
   169c8:	b	16a08 <__assert_fail@plt+0x5950>
   169cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169d0:	ldr	r1, [fp, #8]
   169d4:	asr	r3, r1, #31
   169d8:	mvn	r2, #0
   169dc:	str	r0, [fp, #-100]	; 0xffffff9c
   169e0:	mov	r0, r2
   169e4:	str	r1, [fp, #-104]	; 0xffffff98
   169e8:	mov	r1, r2
   169ec:	ldr	r2, [fp, #-104]	; 0xffffff98
   169f0:	bl	1c718 <__assert_fail@plt+0xb660>
   169f4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   169f8:	subs	r0, r2, r0
   169fc:	rscs	r1, r1, r2, asr #31
   16a00:	bcc	16bbc <__assert_fail@plt+0x5b04>
   16a04:	b	16bd0 <__assert_fail@plt+0x5b18>
   16a08:	b	16a0c <__assert_fail@plt+0x5954>
   16a0c:	ldr	r0, [pc, #-400]	; 16884 <__assert_fail@plt+0x57cc>
   16a10:	ldr	r1, [fp, #8]
   16a14:	cmp	r1, r0
   16a18:	blt	16a30 <__assert_fail@plt+0x5978>
   16a1c:	b	16a44 <__assert_fail@plt+0x598c>
   16a20:	ldr	r0, [fp, #8]
   16a24:	movw	r1, #0
   16a28:	cmp	r1, r0
   16a2c:	bge	16a44 <__assert_fail@plt+0x598c>
   16a30:	mov	r0, #1
   16a34:	mvn	r1, #0
   16a38:	str	r1, [sp, #108]	; 0x6c
   16a3c:	str	r0, [sp, #104]	; 0x68
   16a40:	b	16a70 <__assert_fail@plt+0x59b8>
   16a44:	ldr	r0, [fp, #8]
   16a48:	rsb	r0, r0, #0
   16a4c:	asr	r3, r0, #31
   16a50:	mvn	r1, #0
   16a54:	str	r0, [sp, #100]	; 0x64
   16a58:	mov	r0, r1
   16a5c:	ldr	r2, [sp, #100]	; 0x64
   16a60:	bl	1c718 <__assert_fail@plt+0xb660>
   16a64:	str	r0, [sp, #108]	; 0x6c
   16a68:	str	r1, [sp, #104]	; 0x68
   16a6c:	b	16a70 <__assert_fail@plt+0x59b8>
   16a70:	ldr	r0, [sp, #104]	; 0x68
   16a74:	ldr	r1, [sp, #108]	; 0x6c
   16a78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16a7c:	mvn	r2, r2
   16a80:	subs	r1, r2, r1
   16a84:	rscs	r0, r0, r2, asr #31
   16a88:	bcs	16bbc <__assert_fail@plt+0x5b04>
   16a8c:	b	16bd0 <__assert_fail@plt+0x5b18>
   16a90:	b	16a94 <__assert_fail@plt+0x59dc>
   16a94:	b	16aec <__assert_fail@plt+0x5a34>
   16a98:	b	16aec <__assert_fail@plt+0x5a34>
   16a9c:	ldr	r0, [fp, #8]
   16aa0:	cmn	r0, #1
   16aa4:	bne	16aec <__assert_fail@plt+0x5a34>
   16aa8:	b	16aac <__assert_fail@plt+0x59f4>
   16aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ab0:	add	r0, r0, #0
   16ab4:	movw	r1, #0
   16ab8:	cmp	r1, r0
   16abc:	blt	16bbc <__assert_fail@plt+0x5b04>
   16ac0:	b	16bd0 <__assert_fail@plt+0x5b18>
   16ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ac8:	movw	r1, #0
   16acc:	cmp	r1, r0
   16ad0:	bge	16bd0 <__assert_fail@plt+0x5b18>
   16ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ad8:	sub	r0, r0, #1
   16adc:	mvn	r1, #0
   16ae0:	cmp	r1, r0
   16ae4:	blt	16bbc <__assert_fail@plt+0x5b04>
   16ae8:	b	16bd0 <__assert_fail@plt+0x5b18>
   16aec:	ldr	r0, [fp, #8]
   16af0:	movw	r1, #0
   16af4:	sdiv	r0, r1, r0
   16af8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16afc:	cmp	r0, r1
   16b00:	blt	16bbc <__assert_fail@plt+0x5b04>
   16b04:	b	16bd0 <__assert_fail@plt+0x5b18>
   16b08:	ldr	r0, [fp, #8]
   16b0c:	cmp	r0, #0
   16b10:	bne	16b18 <__assert_fail@plt+0x5a60>
   16b14:	b	16bd0 <__assert_fail@plt+0x5b18>
   16b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b1c:	cmp	r0, #0
   16b20:	bge	16b8c <__assert_fail@plt+0x5ad4>
   16b24:	b	16b28 <__assert_fail@plt+0x5a70>
   16b28:	b	16b70 <__assert_fail@plt+0x5ab8>
   16b2c:	b	16b70 <__assert_fail@plt+0x5ab8>
   16b30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b34:	cmn	r0, #1
   16b38:	bne	16b70 <__assert_fail@plt+0x5ab8>
   16b3c:	b	16b40 <__assert_fail@plt+0x5a88>
   16b40:	ldr	r0, [fp, #8]
   16b44:	add	r0, r0, #0
   16b48:	movw	r1, #0
   16b4c:	cmp	r1, r0
   16b50:	blt	16bbc <__assert_fail@plt+0x5b04>
   16b54:	b	16bd0 <__assert_fail@plt+0x5b18>
   16b58:	ldr	r0, [fp, #8]
   16b5c:	sub	r0, r0, #1
   16b60:	mvn	r1, #0
   16b64:	cmp	r1, r0
   16b68:	blt	16bbc <__assert_fail@plt+0x5b04>
   16b6c:	b	16bd0 <__assert_fail@plt+0x5b18>
   16b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b74:	movw	r1, #0
   16b78:	sdiv	r0, r1, r0
   16b7c:	ldr	r1, [fp, #8]
   16b80:	cmp	r0, r1
   16b84:	blt	16bbc <__assert_fail@plt+0x5b04>
   16b88:	b	16bd0 <__assert_fail@plt+0x5b18>
   16b8c:	ldr	r0, [fp, #8]
   16b90:	asr	r3, r0, #31
   16b94:	mvn	r1, #0
   16b98:	str	r0, [sp, #96]	; 0x60
   16b9c:	mov	r0, r1
   16ba0:	ldr	r2, [sp, #96]	; 0x60
   16ba4:	bl	1c718 <__assert_fail@plt+0xb660>
   16ba8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16bac:	subs	r0, r0, r2
   16bb0:	sbcs	r1, r1, r2, asr #31
   16bb4:	bcs	16bd0 <__assert_fail@plt+0x5b18>
   16bb8:	b	16bbc <__assert_fail@plt+0x5b04>
   16bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bc0:	ldr	r1, [fp, #8]
   16bc4:	mul	r0, r0, r1
   16bc8:	str	r0, [fp, #-28]	; 0xffffffe4
   16bcc:	b	16be4 <__assert_fail@plt+0x5b2c>
   16bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bd4:	ldr	r1, [fp, #8]
   16bd8:	mul	r0, r0, r1
   16bdc:	str	r0, [fp, #-28]	; 0xffffffe4
   16be0:	b	16bf0 <__assert_fail@plt+0x5b38>
   16be4:	ldr	r0, [pc, #-1036]	; 167e0 <__assert_fail@plt+0x5728>
   16be8:	str	r0, [sp, #92]	; 0x5c
   16bec:	b	16c10 <__assert_fail@plt+0x5b58>
   16bf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16bf4:	cmp	r0, #64	; 0x40
   16bf8:	movw	r0, #0
   16bfc:	movlt	r0, #1
   16c00:	tst	r0, #1
   16c04:	movw	r0, #64	; 0x40
   16c08:	moveq	r0, #0
   16c0c:	str	r0, [sp, #92]	; 0x5c
   16c10:	ldr	r0, [sp, #92]	; 0x5c
   16c14:	str	r0, [fp, #-32]	; 0xffffffe0
   16c18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c1c:	cmp	r0, #0
   16c20:	beq	16c50 <__assert_fail@plt+0x5b98>
   16c24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c28:	ldr	r1, [fp, #8]
   16c2c:	sdiv	r0, r0, r1
   16c30:	str	r0, [fp, #-24]	; 0xffffffe8
   16c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c38:	mov	r1, r0
   16c3c:	ldr	r2, [fp, #8]
   16c40:	sdiv	r3, r0, r2
   16c44:	mls	r0, r3, r2, r0
   16c48:	sub	r0, r1, r0
   16c4c:	str	r0, [fp, #-28]	; 0xffffffe4
   16c50:	ldr	r0, [fp, #-4]
   16c54:	movw	r1, #0
   16c58:	cmp	r0, r1
   16c5c:	bne	16c6c <__assert_fail@plt+0x5bb4>
   16c60:	ldr	r0, [fp, #-8]
   16c64:	movw	r1, #0
   16c68:	str	r1, [r0]
   16c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c70:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c74:	sub	r0, r0, r1
   16c78:	ldr	r1, [fp, #-12]
   16c7c:	cmp	r0, r1
   16c80:	bge	1806c <__assert_fail@plt+0x6fb4>
   16c84:	ldr	r0, [fp, #-20]	; 0xffffffec
   16c88:	ldr	r1, [fp, #-12]
   16c8c:	add	r1, r0, r1
   16c90:	mov	r2, #1
   16c94:	cmp	r1, r0
   16c98:	movwvc	r2, #0
   16c9c:	str	r1, [fp, #-24]	; 0xffffffe8
   16ca0:	tst	r2, #1
   16ca4:	bne	18068 <__assert_fail@plt+0x6fb0>
   16ca8:	ldr	r0, [fp, #-16]
   16cac:	movw	r1, #0
   16cb0:	cmp	r1, r0
   16cb4:	bgt	16cc8 <__assert_fail@plt+0x5c10>
   16cb8:	ldr	r0, [fp, #-16]
   16cbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cc0:	cmp	r0, r1
   16cc4:	blt	18068 <__assert_fail@plt+0x6fb0>
   16cc8:	b	170a4 <__assert_fail@plt+0x5fec>
   16ccc:			; <UNDEFINED> instruction: 0xffff8000
   16cd0:	b	16cd4 <__assert_fail@plt+0x5c1c>
   16cd4:	ldr	r0, [fp, #8]
   16cd8:	cmp	r0, #0
   16cdc:	bge	16df0 <__assert_fail@plt+0x5d38>
   16ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ce4:	cmp	r0, #0
   16ce8:	bge	16d74 <__assert_fail@plt+0x5cbc>
   16cec:	b	16cf0 <__assert_fail@plt+0x5c38>
   16cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cf4:	ldr	r1, [fp, #8]
   16cf8:	movw	r2, #127	; 0x7f
   16cfc:	sdiv	r1, r2, r1
   16d00:	cmp	r0, r1
   16d04:	blt	16e90 <__assert_fail@plt+0x5dd8>
   16d08:	b	16ea8 <__assert_fail@plt+0x5df0>
   16d0c:	b	16d10 <__assert_fail@plt+0x5c58>
   16d10:	ldr	r0, [pc, #-1172]	; 16884 <__assert_fail@plt+0x57cc>
   16d14:	ldr	r1, [fp, #8]
   16d18:	cmp	r1, r0
   16d1c:	blt	16d34 <__assert_fail@plt+0x5c7c>
   16d20:	b	16d40 <__assert_fail@plt+0x5c88>
   16d24:	ldr	r0, [fp, #8]
   16d28:	movw	r1, #0
   16d2c:	cmp	r1, r0
   16d30:	bge	16d40 <__assert_fail@plt+0x5c88>
   16d34:	movw	r0, #0
   16d38:	str	r0, [sp, #88]	; 0x58
   16d3c:	b	16d58 <__assert_fail@plt+0x5ca0>
   16d40:	ldr	r0, [fp, #8]
   16d44:	movw	r1, #0
   16d48:	sub	r0, r1, r0
   16d4c:	movw	r1, #127	; 0x7f
   16d50:	sdiv	r0, r1, r0
   16d54:	str	r0, [sp, #88]	; 0x58
   16d58:	ldr	r0, [sp, #88]	; 0x58
   16d5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d60:	mvn	r2, #0
   16d64:	sub	r1, r2, r1
   16d68:	cmp	r0, r1
   16d6c:	ble	16e90 <__assert_fail@plt+0x5dd8>
   16d70:	b	16ea8 <__assert_fail@plt+0x5df0>
   16d74:	b	16d78 <__assert_fail@plt+0x5cc0>
   16d78:	b	16dd4 <__assert_fail@plt+0x5d1c>
   16d7c:	b	16dd4 <__assert_fail@plt+0x5d1c>
   16d80:	ldr	r0, [fp, #8]
   16d84:	cmn	r0, #1
   16d88:	bne	16dd4 <__assert_fail@plt+0x5d1c>
   16d8c:	b	16d90 <__assert_fail@plt+0x5cd8>
   16d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d94:	mvn	r1, #127	; 0x7f
   16d98:	add	r0, r0, r1
   16d9c:	movw	r1, #0
   16da0:	cmp	r1, r0
   16da4:	blt	16e90 <__assert_fail@plt+0x5dd8>
   16da8:	b	16ea8 <__assert_fail@plt+0x5df0>
   16dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16db0:	movw	r1, #0
   16db4:	cmp	r1, r0
   16db8:	bge	16ea8 <__assert_fail@plt+0x5df0>
   16dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dc0:	sub	r0, r0, #1
   16dc4:	movw	r1, #127	; 0x7f
   16dc8:	cmp	r1, r0
   16dcc:	blt	16e90 <__assert_fail@plt+0x5dd8>
   16dd0:	b	16ea8 <__assert_fail@plt+0x5df0>
   16dd4:	ldr	r0, [fp, #8]
   16dd8:	mvn	r1, #127	; 0x7f
   16ddc:	sdiv	r0, r1, r0
   16de0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16de4:	cmp	r0, r1
   16de8:	blt	16e90 <__assert_fail@plt+0x5dd8>
   16dec:	b	16ea8 <__assert_fail@plt+0x5df0>
   16df0:	ldr	r0, [fp, #8]
   16df4:	cmp	r0, #0
   16df8:	bne	16e00 <__assert_fail@plt+0x5d48>
   16dfc:	b	16ea8 <__assert_fail@plt+0x5df0>
   16e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e04:	cmp	r0, #0
   16e08:	bge	16e78 <__assert_fail@plt+0x5dc0>
   16e0c:	b	16e10 <__assert_fail@plt+0x5d58>
   16e10:	b	16e5c <__assert_fail@plt+0x5da4>
   16e14:	b	16e5c <__assert_fail@plt+0x5da4>
   16e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e1c:	cmn	r0, #1
   16e20:	bne	16e5c <__assert_fail@plt+0x5da4>
   16e24:	b	16e28 <__assert_fail@plt+0x5d70>
   16e28:	ldr	r0, [fp, #8]
   16e2c:	mvn	r1, #127	; 0x7f
   16e30:	add	r0, r0, r1
   16e34:	movw	r1, #0
   16e38:	cmp	r1, r0
   16e3c:	blt	16e90 <__assert_fail@plt+0x5dd8>
   16e40:	b	16ea8 <__assert_fail@plt+0x5df0>
   16e44:	ldr	r0, [fp, #8]
   16e48:	sub	r0, r0, #1
   16e4c:	movw	r1, #127	; 0x7f
   16e50:	cmp	r1, r0
   16e54:	blt	16e90 <__assert_fail@plt+0x5dd8>
   16e58:	b	16ea8 <__assert_fail@plt+0x5df0>
   16e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e60:	mvn	r1, #127	; 0x7f
   16e64:	sdiv	r0, r1, r0
   16e68:	ldr	r1, [fp, #8]
   16e6c:	cmp	r0, r1
   16e70:	blt	16e90 <__assert_fail@plt+0x5dd8>
   16e74:	b	16ea8 <__assert_fail@plt+0x5df0>
   16e78:	ldr	r0, [fp, #8]
   16e7c:	movw	r1, #127	; 0x7f
   16e80:	sdiv	r0, r1, r0
   16e84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e88:	cmp	r0, r1
   16e8c:	bge	16ea8 <__assert_fail@plt+0x5df0>
   16e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e94:	ldr	r1, [fp, #8]
   16e98:	mul	r0, r0, r1
   16e9c:	sxtb	r0, r0
   16ea0:	str	r0, [fp, #-28]	; 0xffffffe4
   16ea4:	b	18068 <__assert_fail@plt+0x6fb0>
   16ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eac:	ldr	r1, [fp, #8]
   16eb0:	mul	r0, r0, r1
   16eb4:	sxtb	r0, r0
   16eb8:	str	r0, [fp, #-28]	; 0xffffffe4
   16ebc:	b	1806c <__assert_fail@plt+0x6fb4>
   16ec0:	ldr	r0, [fp, #8]
   16ec4:	cmp	r0, #0
   16ec8:	bge	16fd8 <__assert_fail@plt+0x5f20>
   16ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ed0:	cmp	r0, #0
   16ed4:	bge	16f60 <__assert_fail@plt+0x5ea8>
   16ed8:	b	16edc <__assert_fail@plt+0x5e24>
   16edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ee0:	ldr	r1, [fp, #8]
   16ee4:	movw	r2, #255	; 0xff
   16ee8:	sdiv	r1, r2, r1
   16eec:	cmp	r0, r1
   16ef0:	blt	17074 <__assert_fail@plt+0x5fbc>
   16ef4:	b	1708c <__assert_fail@plt+0x5fd4>
   16ef8:	b	16efc <__assert_fail@plt+0x5e44>
   16efc:	ldr	r0, [pc, #-1664]	; 16884 <__assert_fail@plt+0x57cc>
   16f00:	ldr	r1, [fp, #8]
   16f04:	cmp	r1, r0
   16f08:	blt	16f20 <__assert_fail@plt+0x5e68>
   16f0c:	b	16f2c <__assert_fail@plt+0x5e74>
   16f10:	ldr	r0, [fp, #8]
   16f14:	movw	r1, #0
   16f18:	cmp	r1, r0
   16f1c:	bge	16f2c <__assert_fail@plt+0x5e74>
   16f20:	movw	r0, #0
   16f24:	str	r0, [sp, #84]	; 0x54
   16f28:	b	16f44 <__assert_fail@plt+0x5e8c>
   16f2c:	ldr	r0, [fp, #8]
   16f30:	movw	r1, #0
   16f34:	sub	r0, r1, r0
   16f38:	movw	r1, #255	; 0xff
   16f3c:	sdiv	r0, r1, r0
   16f40:	str	r0, [sp, #84]	; 0x54
   16f44:	ldr	r0, [sp, #84]	; 0x54
   16f48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f4c:	mvn	r2, #0
   16f50:	sub	r1, r2, r1
   16f54:	cmp	r0, r1
   16f58:	ble	17074 <__assert_fail@plt+0x5fbc>
   16f5c:	b	1708c <__assert_fail@plt+0x5fd4>
   16f60:	b	16f64 <__assert_fail@plt+0x5eac>
   16f64:	b	16fbc <__assert_fail@plt+0x5f04>
   16f68:	b	16fbc <__assert_fail@plt+0x5f04>
   16f6c:	ldr	r0, [fp, #8]
   16f70:	cmn	r0, #1
   16f74:	bne	16fbc <__assert_fail@plt+0x5f04>
   16f78:	b	16f7c <__assert_fail@plt+0x5ec4>
   16f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f80:	add	r0, r0, #0
   16f84:	movw	r1, #0
   16f88:	cmp	r1, r0
   16f8c:	blt	17074 <__assert_fail@plt+0x5fbc>
   16f90:	b	1708c <__assert_fail@plt+0x5fd4>
   16f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f98:	movw	r1, #0
   16f9c:	cmp	r1, r0
   16fa0:	bge	1708c <__assert_fail@plt+0x5fd4>
   16fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fa8:	sub	r0, r0, #1
   16fac:	mvn	r1, #0
   16fb0:	cmp	r1, r0
   16fb4:	blt	17074 <__assert_fail@plt+0x5fbc>
   16fb8:	b	1708c <__assert_fail@plt+0x5fd4>
   16fbc:	ldr	r0, [fp, #8]
   16fc0:	movw	r1, #0
   16fc4:	sdiv	r0, r1, r0
   16fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fcc:	cmp	r0, r1
   16fd0:	blt	17074 <__assert_fail@plt+0x5fbc>
   16fd4:	b	1708c <__assert_fail@plt+0x5fd4>
   16fd8:	ldr	r0, [fp, #8]
   16fdc:	cmp	r0, #0
   16fe0:	bne	16fe8 <__assert_fail@plt+0x5f30>
   16fe4:	b	1708c <__assert_fail@plt+0x5fd4>
   16fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fec:	cmp	r0, #0
   16ff0:	bge	1705c <__assert_fail@plt+0x5fa4>
   16ff4:	b	16ff8 <__assert_fail@plt+0x5f40>
   16ff8:	b	17040 <__assert_fail@plt+0x5f88>
   16ffc:	b	17040 <__assert_fail@plt+0x5f88>
   17000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17004:	cmn	r0, #1
   17008:	bne	17040 <__assert_fail@plt+0x5f88>
   1700c:	b	17010 <__assert_fail@plt+0x5f58>
   17010:	ldr	r0, [fp, #8]
   17014:	add	r0, r0, #0
   17018:	movw	r1, #0
   1701c:	cmp	r1, r0
   17020:	blt	17074 <__assert_fail@plt+0x5fbc>
   17024:	b	1708c <__assert_fail@plt+0x5fd4>
   17028:	ldr	r0, [fp, #8]
   1702c:	sub	r0, r0, #1
   17030:	mvn	r1, #0
   17034:	cmp	r1, r0
   17038:	blt	17074 <__assert_fail@plt+0x5fbc>
   1703c:	b	1708c <__assert_fail@plt+0x5fd4>
   17040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17044:	movw	r1, #0
   17048:	sdiv	r0, r1, r0
   1704c:	ldr	r1, [fp, #8]
   17050:	cmp	r0, r1
   17054:	blt	17074 <__assert_fail@plt+0x5fbc>
   17058:	b	1708c <__assert_fail@plt+0x5fd4>
   1705c:	ldr	r0, [fp, #8]
   17060:	movw	r1, #255	; 0xff
   17064:	sdiv	r0, r1, r0
   17068:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1706c:	cmp	r0, r1
   17070:	bge	1708c <__assert_fail@plt+0x5fd4>
   17074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17078:	ldr	r1, [fp, #8]
   1707c:	mul	r0, r0, r1
   17080:	and	r0, r0, #255	; 0xff
   17084:	str	r0, [fp, #-28]	; 0xffffffe4
   17088:	b	18068 <__assert_fail@plt+0x6fb0>
   1708c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17090:	ldr	r1, [fp, #8]
   17094:	mul	r0, r0, r1
   17098:	and	r0, r0, #255	; 0xff
   1709c:	str	r0, [fp, #-28]	; 0xffffffe4
   170a0:	b	1806c <__assert_fail@plt+0x6fb4>
   170a4:	b	17480 <__assert_fail@plt+0x63c8>
   170a8:	b	170ac <__assert_fail@plt+0x5ff4>
   170ac:	ldr	r0, [fp, #8]
   170b0:	cmp	r0, #0
   170b4:	bge	171cc <__assert_fail@plt+0x6114>
   170b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170bc:	cmp	r0, #0
   170c0:	bge	17150 <__assert_fail@plt+0x6098>
   170c4:	b	170c8 <__assert_fail@plt+0x6010>
   170c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170cc:	ldr	r1, [fp, #8]
   170d0:	movw	r2, #32767	; 0x7fff
   170d4:	sdiv	r1, r2, r1
   170d8:	cmp	r0, r1
   170dc:	blt	1726c <__assert_fail@plt+0x61b4>
   170e0:	b	17284 <__assert_fail@plt+0x61cc>
   170e4:	andhi	r0, r0, r0
   170e8:	b	170ec <__assert_fail@plt+0x6034>
   170ec:	ldr	r0, [pc, #4004]	; 18098 <__assert_fail@plt+0x6fe0>
   170f0:	ldr	r1, [fp, #8]
   170f4:	cmp	r1, r0
   170f8:	blt	17110 <__assert_fail@plt+0x6058>
   170fc:	b	1711c <__assert_fail@plt+0x6064>
   17100:	ldr	r0, [fp, #8]
   17104:	movw	r1, #0
   17108:	cmp	r1, r0
   1710c:	bge	1711c <__assert_fail@plt+0x6064>
   17110:	movw	r0, #0
   17114:	str	r0, [sp, #80]	; 0x50
   17118:	b	17134 <__assert_fail@plt+0x607c>
   1711c:	ldr	r0, [fp, #8]
   17120:	movw	r1, #0
   17124:	sub	r0, r1, r0
   17128:	movw	r1, #32767	; 0x7fff
   1712c:	sdiv	r0, r1, r0
   17130:	str	r0, [sp, #80]	; 0x50
   17134:	ldr	r0, [sp, #80]	; 0x50
   17138:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1713c:	mvn	r2, #0
   17140:	sub	r1, r2, r1
   17144:	cmp	r0, r1
   17148:	ble	1726c <__assert_fail@plt+0x61b4>
   1714c:	b	17284 <__assert_fail@plt+0x61cc>
   17150:	b	17154 <__assert_fail@plt+0x609c>
   17154:	b	171b0 <__assert_fail@plt+0x60f8>
   17158:	b	171b0 <__assert_fail@plt+0x60f8>
   1715c:	ldr	r0, [fp, #8]
   17160:	cmn	r0, #1
   17164:	bne	171b0 <__assert_fail@plt+0x60f8>
   17168:	b	1716c <__assert_fail@plt+0x60b4>
   1716c:	ldr	r0, [pc, #3884]	; 180a0 <__assert_fail@plt+0x6fe8>
   17170:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17174:	add	r0, r1, r0
   17178:	movw	r1, #0
   1717c:	cmp	r1, r0
   17180:	blt	1726c <__assert_fail@plt+0x61b4>
   17184:	b	17284 <__assert_fail@plt+0x61cc>
   17188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1718c:	movw	r1, #0
   17190:	cmp	r1, r0
   17194:	bge	17284 <__assert_fail@plt+0x61cc>
   17198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1719c:	sub	r0, r0, #1
   171a0:	movw	r1, #32767	; 0x7fff
   171a4:	cmp	r1, r0
   171a8:	blt	1726c <__assert_fail@plt+0x61b4>
   171ac:	b	17284 <__assert_fail@plt+0x61cc>
   171b0:	ldr	r0, [pc, #3816]	; 180a0 <__assert_fail@plt+0x6fe8>
   171b4:	ldr	r1, [fp, #8]
   171b8:	sdiv	r0, r0, r1
   171bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171c0:	cmp	r0, r1
   171c4:	blt	1726c <__assert_fail@plt+0x61b4>
   171c8:	b	17284 <__assert_fail@plt+0x61cc>
   171cc:	ldr	r0, [fp, #8]
   171d0:	cmp	r0, #0
   171d4:	bne	171dc <__assert_fail@plt+0x6124>
   171d8:	b	17284 <__assert_fail@plt+0x61cc>
   171dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171e0:	cmp	r0, #0
   171e4:	bge	17254 <__assert_fail@plt+0x619c>
   171e8:	b	171ec <__assert_fail@plt+0x6134>
   171ec:	b	17238 <__assert_fail@plt+0x6180>
   171f0:	b	17238 <__assert_fail@plt+0x6180>
   171f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171f8:	cmn	r0, #1
   171fc:	bne	17238 <__assert_fail@plt+0x6180>
   17200:	b	17204 <__assert_fail@plt+0x614c>
   17204:	ldr	r0, [pc, #3732]	; 180a0 <__assert_fail@plt+0x6fe8>
   17208:	ldr	r1, [fp, #8]
   1720c:	add	r0, r1, r0
   17210:	movw	r1, #0
   17214:	cmp	r1, r0
   17218:	blt	1726c <__assert_fail@plt+0x61b4>
   1721c:	b	17284 <__assert_fail@plt+0x61cc>
   17220:	ldr	r0, [fp, #8]
   17224:	sub	r0, r0, #1
   17228:	movw	r1, #32767	; 0x7fff
   1722c:	cmp	r1, r0
   17230:	blt	1726c <__assert_fail@plt+0x61b4>
   17234:	b	17284 <__assert_fail@plt+0x61cc>
   17238:	ldr	r0, [pc, #3680]	; 180a0 <__assert_fail@plt+0x6fe8>
   1723c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17240:	sdiv	r0, r0, r1
   17244:	ldr	r1, [fp, #8]
   17248:	cmp	r0, r1
   1724c:	blt	1726c <__assert_fail@plt+0x61b4>
   17250:	b	17284 <__assert_fail@plt+0x61cc>
   17254:	ldr	r0, [fp, #8]
   17258:	movw	r1, #32767	; 0x7fff
   1725c:	sdiv	r0, r1, r0
   17260:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17264:	cmp	r0, r1
   17268:	bge	17284 <__assert_fail@plt+0x61cc>
   1726c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17270:	ldr	r1, [fp, #8]
   17274:	mul	r0, r0, r1
   17278:	sxth	r0, r0
   1727c:	str	r0, [fp, #-28]	; 0xffffffe4
   17280:	b	18068 <__assert_fail@plt+0x6fb0>
   17284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17288:	ldr	r1, [fp, #8]
   1728c:	mul	r0, r0, r1
   17290:	sxth	r0, r0
   17294:	str	r0, [fp, #-28]	; 0xffffffe4
   17298:	b	1806c <__assert_fail@plt+0x6fb4>
   1729c:	ldr	r0, [fp, #8]
   172a0:	cmp	r0, #0
   172a4:	bge	173b4 <__assert_fail@plt+0x62fc>
   172a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172ac:	cmp	r0, #0
   172b0:	bge	1733c <__assert_fail@plt+0x6284>
   172b4:	b	172b8 <__assert_fail@plt+0x6200>
   172b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172bc:	ldr	r1, [fp, #8]
   172c0:	movw	r2, #65535	; 0xffff
   172c4:	sdiv	r1, r2, r1
   172c8:	cmp	r0, r1
   172cc:	blt	17450 <__assert_fail@plt+0x6398>
   172d0:	b	17468 <__assert_fail@plt+0x63b0>
   172d4:	b	172d8 <__assert_fail@plt+0x6220>
   172d8:	ldr	r0, [pc, #3512]	; 18098 <__assert_fail@plt+0x6fe0>
   172dc:	ldr	r1, [fp, #8]
   172e0:	cmp	r1, r0
   172e4:	blt	172fc <__assert_fail@plt+0x6244>
   172e8:	b	17308 <__assert_fail@plt+0x6250>
   172ec:	ldr	r0, [fp, #8]
   172f0:	movw	r1, #0
   172f4:	cmp	r1, r0
   172f8:	bge	17308 <__assert_fail@plt+0x6250>
   172fc:	movw	r0, #0
   17300:	str	r0, [sp, #76]	; 0x4c
   17304:	b	17320 <__assert_fail@plt+0x6268>
   17308:	ldr	r0, [fp, #8]
   1730c:	movw	r1, #0
   17310:	sub	r0, r1, r0
   17314:	movw	r1, #65535	; 0xffff
   17318:	sdiv	r0, r1, r0
   1731c:	str	r0, [sp, #76]	; 0x4c
   17320:	ldr	r0, [sp, #76]	; 0x4c
   17324:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17328:	mvn	r2, #0
   1732c:	sub	r1, r2, r1
   17330:	cmp	r0, r1
   17334:	ble	17450 <__assert_fail@plt+0x6398>
   17338:	b	17468 <__assert_fail@plt+0x63b0>
   1733c:	b	17340 <__assert_fail@plt+0x6288>
   17340:	b	17398 <__assert_fail@plt+0x62e0>
   17344:	b	17398 <__assert_fail@plt+0x62e0>
   17348:	ldr	r0, [fp, #8]
   1734c:	cmn	r0, #1
   17350:	bne	17398 <__assert_fail@plt+0x62e0>
   17354:	b	17358 <__assert_fail@plt+0x62a0>
   17358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1735c:	add	r0, r0, #0
   17360:	movw	r1, #0
   17364:	cmp	r1, r0
   17368:	blt	17450 <__assert_fail@plt+0x6398>
   1736c:	b	17468 <__assert_fail@plt+0x63b0>
   17370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17374:	movw	r1, #0
   17378:	cmp	r1, r0
   1737c:	bge	17468 <__assert_fail@plt+0x63b0>
   17380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17384:	sub	r0, r0, #1
   17388:	mvn	r1, #0
   1738c:	cmp	r1, r0
   17390:	blt	17450 <__assert_fail@plt+0x6398>
   17394:	b	17468 <__assert_fail@plt+0x63b0>
   17398:	ldr	r0, [fp, #8]
   1739c:	movw	r1, #0
   173a0:	sdiv	r0, r1, r0
   173a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173a8:	cmp	r0, r1
   173ac:	blt	17450 <__assert_fail@plt+0x6398>
   173b0:	b	17468 <__assert_fail@plt+0x63b0>
   173b4:	ldr	r0, [fp, #8]
   173b8:	cmp	r0, #0
   173bc:	bne	173c4 <__assert_fail@plt+0x630c>
   173c0:	b	17468 <__assert_fail@plt+0x63b0>
   173c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173c8:	cmp	r0, #0
   173cc:	bge	17438 <__assert_fail@plt+0x6380>
   173d0:	b	173d4 <__assert_fail@plt+0x631c>
   173d4:	b	1741c <__assert_fail@plt+0x6364>
   173d8:	b	1741c <__assert_fail@plt+0x6364>
   173dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173e0:	cmn	r0, #1
   173e4:	bne	1741c <__assert_fail@plt+0x6364>
   173e8:	b	173ec <__assert_fail@plt+0x6334>
   173ec:	ldr	r0, [fp, #8]
   173f0:	add	r0, r0, #0
   173f4:	movw	r1, #0
   173f8:	cmp	r1, r0
   173fc:	blt	17450 <__assert_fail@plt+0x6398>
   17400:	b	17468 <__assert_fail@plt+0x63b0>
   17404:	ldr	r0, [fp, #8]
   17408:	sub	r0, r0, #1
   1740c:	mvn	r1, #0
   17410:	cmp	r1, r0
   17414:	blt	17450 <__assert_fail@plt+0x6398>
   17418:	b	17468 <__assert_fail@plt+0x63b0>
   1741c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17420:	movw	r1, #0
   17424:	sdiv	r0, r1, r0
   17428:	ldr	r1, [fp, #8]
   1742c:	cmp	r0, r1
   17430:	blt	17450 <__assert_fail@plt+0x6398>
   17434:	b	17468 <__assert_fail@plt+0x63b0>
   17438:	ldr	r0, [fp, #8]
   1743c:	movw	r1, #65535	; 0xffff
   17440:	sdiv	r0, r1, r0
   17444:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17448:	cmp	r0, r1
   1744c:	bge	17468 <__assert_fail@plt+0x63b0>
   17450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17454:	ldr	r1, [fp, #8]
   17458:	mul	r0, r0, r1
   1745c:	uxth	r0, r0
   17460:	str	r0, [fp, #-28]	; 0xffffffe4
   17464:	b	18068 <__assert_fail@plt+0x6fb0>
   17468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1746c:	ldr	r1, [fp, #8]
   17470:	mul	r0, r0, r1
   17474:	uxth	r0, r0
   17478:	str	r0, [fp, #-28]	; 0xffffffe4
   1747c:	b	1806c <__assert_fail@plt+0x6fb4>
   17480:	b	17484 <__assert_fail@plt+0x63cc>
   17484:	b	17488 <__assert_fail@plt+0x63d0>
   17488:	ldr	r0, [fp, #8]
   1748c:	cmp	r0, #0
   17490:	bge	17594 <__assert_fail@plt+0x64dc>
   17494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17498:	cmp	r0, #0
   1749c:	bge	17528 <__assert_fail@plt+0x6470>
   174a0:	b	174a4 <__assert_fail@plt+0x63ec>
   174a4:	ldr	r0, [pc, #3048]	; 18094 <__assert_fail@plt+0x6fdc>
   174a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   174ac:	ldr	r2, [fp, #8]
   174b0:	sdiv	r0, r0, r2
   174b4:	cmp	r1, r0
   174b8:	blt	17624 <__assert_fail@plt+0x656c>
   174bc:	b	17638 <__assert_fail@plt+0x6580>
   174c0:	b	174c4 <__assert_fail@plt+0x640c>
   174c4:	ldr	r0, [pc, #3020]	; 18098 <__assert_fail@plt+0x6fe0>
   174c8:	ldr	r1, [fp, #8]
   174cc:	cmp	r1, r0
   174d0:	blt	174e8 <__assert_fail@plt+0x6430>
   174d4:	b	174f4 <__assert_fail@plt+0x643c>
   174d8:	ldr	r0, [fp, #8]
   174dc:	movw	r1, #0
   174e0:	cmp	r1, r0
   174e4:	bge	174f4 <__assert_fail@plt+0x643c>
   174e8:	movw	r0, #0
   174ec:	str	r0, [sp, #72]	; 0x48
   174f0:	b	1750c <__assert_fail@plt+0x6454>
   174f4:	ldr	r0, [pc, #2968]	; 18094 <__assert_fail@plt+0x6fdc>
   174f8:	ldr	r1, [fp, #8]
   174fc:	movw	r2, #0
   17500:	sub	r1, r2, r1
   17504:	sdiv	r0, r0, r1
   17508:	str	r0, [sp, #72]	; 0x48
   1750c:	ldr	r0, [sp, #72]	; 0x48
   17510:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17514:	mvn	r2, #0
   17518:	sub	r1, r2, r1
   1751c:	cmp	r0, r1
   17520:	ble	17624 <__assert_fail@plt+0x656c>
   17524:	b	17638 <__assert_fail@plt+0x6580>
   17528:	ldr	r0, [fp, #8]
   1752c:	cmn	r0, #1
   17530:	bne	17578 <__assert_fail@plt+0x64c0>
   17534:	b	17538 <__assert_fail@plt+0x6480>
   17538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1753c:	add	r0, r0, #-2147483648	; 0x80000000
   17540:	movw	r1, #0
   17544:	cmp	r1, r0
   17548:	blt	17624 <__assert_fail@plt+0x656c>
   1754c:	b	17638 <__assert_fail@plt+0x6580>
   17550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17554:	movw	r1, #0
   17558:	cmp	r1, r0
   1755c:	bge	17638 <__assert_fail@plt+0x6580>
   17560:	ldr	r0, [pc, #2860]	; 18094 <__assert_fail@plt+0x6fdc>
   17564:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17568:	sub	r1, r1, #1
   1756c:	cmp	r0, r1
   17570:	blt	17624 <__assert_fail@plt+0x656c>
   17574:	b	17638 <__assert_fail@plt+0x6580>
   17578:	ldr	r0, [pc, #2844]	; 1809c <__assert_fail@plt+0x6fe4>
   1757c:	ldr	r1, [fp, #8]
   17580:	sdiv	r0, r0, r1
   17584:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17588:	cmp	r0, r1
   1758c:	blt	17624 <__assert_fail@plt+0x656c>
   17590:	b	17638 <__assert_fail@plt+0x6580>
   17594:	ldr	r0, [fp, #8]
   17598:	cmp	r0, #0
   1759c:	bne	175a4 <__assert_fail@plt+0x64ec>
   175a0:	b	17638 <__assert_fail@plt+0x6580>
   175a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175a8:	cmp	r0, #0
   175ac:	bge	1760c <__assert_fail@plt+0x6554>
   175b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175b4:	cmn	r0, #1
   175b8:	bne	175f0 <__assert_fail@plt+0x6538>
   175bc:	b	175c0 <__assert_fail@plt+0x6508>
   175c0:	ldr	r0, [fp, #8]
   175c4:	add	r0, r0, #-2147483648	; 0x80000000
   175c8:	movw	r1, #0
   175cc:	cmp	r1, r0
   175d0:	blt	17624 <__assert_fail@plt+0x656c>
   175d4:	b	17638 <__assert_fail@plt+0x6580>
   175d8:	ldr	r0, [pc, #2740]	; 18094 <__assert_fail@plt+0x6fdc>
   175dc:	ldr	r1, [fp, #8]
   175e0:	sub	r1, r1, #1
   175e4:	cmp	r0, r1
   175e8:	blt	17624 <__assert_fail@plt+0x656c>
   175ec:	b	17638 <__assert_fail@plt+0x6580>
   175f0:	ldr	r0, [pc, #2724]	; 1809c <__assert_fail@plt+0x6fe4>
   175f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175f8:	sdiv	r0, r0, r1
   175fc:	ldr	r1, [fp, #8]
   17600:	cmp	r0, r1
   17604:	blt	17624 <__assert_fail@plt+0x656c>
   17608:	b	17638 <__assert_fail@plt+0x6580>
   1760c:	ldr	r0, [pc, #2688]	; 18094 <__assert_fail@plt+0x6fdc>
   17610:	ldr	r1, [fp, #8]
   17614:	sdiv	r0, r0, r1
   17618:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1761c:	cmp	r0, r1
   17620:	bge	17638 <__assert_fail@plt+0x6580>
   17624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17628:	ldr	r1, [fp, #8]
   1762c:	mul	r0, r0, r1
   17630:	str	r0, [fp, #-28]	; 0xffffffe4
   17634:	b	18068 <__assert_fail@plt+0x6fb0>
   17638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1763c:	ldr	r1, [fp, #8]
   17640:	mul	r0, r0, r1
   17644:	str	r0, [fp, #-28]	; 0xffffffe4
   17648:	b	1806c <__assert_fail@plt+0x6fb4>
   1764c:	ldr	r0, [fp, #8]
   17650:	cmp	r0, #0
   17654:	bge	17764 <__assert_fail@plt+0x66ac>
   17658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1765c:	cmp	r0, #0
   17660:	bge	176ec <__assert_fail@plt+0x6634>
   17664:	b	17684 <__assert_fail@plt+0x65cc>
   17668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1766c:	ldr	r1, [fp, #8]
   17670:	mvn	r2, #0
   17674:	udiv	r1, r2, r1
   17678:	cmp	r0, r1
   1767c:	bcc	17800 <__assert_fail@plt+0x6748>
   17680:	b	17814 <__assert_fail@plt+0x675c>
   17684:	b	17688 <__assert_fail@plt+0x65d0>
   17688:	ldr	r0, [pc, #2568]	; 18098 <__assert_fail@plt+0x6fe0>
   1768c:	ldr	r1, [fp, #8]
   17690:	cmp	r1, r0
   17694:	blt	176ac <__assert_fail@plt+0x65f4>
   17698:	b	176b8 <__assert_fail@plt+0x6600>
   1769c:	ldr	r0, [fp, #8]
   176a0:	movw	r1, #0
   176a4:	cmp	r1, r0
   176a8:	bge	176b8 <__assert_fail@plt+0x6600>
   176ac:	movw	r0, #1
   176b0:	str	r0, [sp, #68]	; 0x44
   176b4:	b	176d0 <__assert_fail@plt+0x6618>
   176b8:	ldr	r0, [fp, #8]
   176bc:	movw	r1, #0
   176c0:	sub	r0, r1, r0
   176c4:	mvn	r1, #0
   176c8:	udiv	r0, r1, r0
   176cc:	str	r0, [sp, #68]	; 0x44
   176d0:	ldr	r0, [sp, #68]	; 0x44
   176d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176d8:	mvn	r2, #0
   176dc:	sub	r1, r2, r1
   176e0:	cmp	r0, r1
   176e4:	bls	17800 <__assert_fail@plt+0x6748>
   176e8:	b	17814 <__assert_fail@plt+0x675c>
   176ec:	b	176f0 <__assert_fail@plt+0x6638>
   176f0:	b	17748 <__assert_fail@plt+0x6690>
   176f4:	b	17748 <__assert_fail@plt+0x6690>
   176f8:	ldr	r0, [fp, #8]
   176fc:	cmn	r0, #1
   17700:	bne	17748 <__assert_fail@plt+0x6690>
   17704:	b	17708 <__assert_fail@plt+0x6650>
   17708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1770c:	add	r0, r0, #0
   17710:	movw	r1, #0
   17714:	cmp	r1, r0
   17718:	blt	17800 <__assert_fail@plt+0x6748>
   1771c:	b	17814 <__assert_fail@plt+0x675c>
   17720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17724:	movw	r1, #0
   17728:	cmp	r1, r0
   1772c:	bge	17814 <__assert_fail@plt+0x675c>
   17730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17734:	sub	r0, r0, #1
   17738:	mvn	r1, #0
   1773c:	cmp	r1, r0
   17740:	blt	17800 <__assert_fail@plt+0x6748>
   17744:	b	17814 <__assert_fail@plt+0x675c>
   17748:	ldr	r0, [fp, #8]
   1774c:	movw	r1, #0
   17750:	sdiv	r0, r1, r0
   17754:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17758:	cmp	r0, r1
   1775c:	blt	17800 <__assert_fail@plt+0x6748>
   17760:	b	17814 <__assert_fail@plt+0x675c>
   17764:	ldr	r0, [fp, #8]
   17768:	cmp	r0, #0
   1776c:	bne	17774 <__assert_fail@plt+0x66bc>
   17770:	b	17814 <__assert_fail@plt+0x675c>
   17774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17778:	cmp	r0, #0
   1777c:	bge	177e8 <__assert_fail@plt+0x6730>
   17780:	b	17784 <__assert_fail@plt+0x66cc>
   17784:	b	177cc <__assert_fail@plt+0x6714>
   17788:	b	177cc <__assert_fail@plt+0x6714>
   1778c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17790:	cmn	r0, #1
   17794:	bne	177cc <__assert_fail@plt+0x6714>
   17798:	b	1779c <__assert_fail@plt+0x66e4>
   1779c:	ldr	r0, [fp, #8]
   177a0:	add	r0, r0, #0
   177a4:	movw	r1, #0
   177a8:	cmp	r1, r0
   177ac:	blt	17800 <__assert_fail@plt+0x6748>
   177b0:	b	17814 <__assert_fail@plt+0x675c>
   177b4:	ldr	r0, [fp, #8]
   177b8:	sub	r0, r0, #1
   177bc:	mvn	r1, #0
   177c0:	cmp	r1, r0
   177c4:	blt	17800 <__assert_fail@plt+0x6748>
   177c8:	b	17814 <__assert_fail@plt+0x675c>
   177cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177d0:	movw	r1, #0
   177d4:	sdiv	r0, r1, r0
   177d8:	ldr	r1, [fp, #8]
   177dc:	cmp	r0, r1
   177e0:	blt	17800 <__assert_fail@plt+0x6748>
   177e4:	b	17814 <__assert_fail@plt+0x675c>
   177e8:	ldr	r0, [fp, #8]
   177ec:	mvn	r1, #0
   177f0:	udiv	r0, r1, r0
   177f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177f8:	cmp	r0, r1
   177fc:	bcs	17814 <__assert_fail@plt+0x675c>
   17800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17804:	ldr	r1, [fp, #8]
   17808:	mul	r0, r0, r1
   1780c:	str	r0, [fp, #-28]	; 0xffffffe4
   17810:	b	18068 <__assert_fail@plt+0x6fb0>
   17814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17818:	ldr	r1, [fp, #8]
   1781c:	mul	r0, r0, r1
   17820:	str	r0, [fp, #-28]	; 0xffffffe4
   17824:	b	1806c <__assert_fail@plt+0x6fb4>
   17828:	b	1782c <__assert_fail@plt+0x6774>
   1782c:	b	17830 <__assert_fail@plt+0x6778>
   17830:	ldr	r0, [fp, #8]
   17834:	cmp	r0, #0
   17838:	bge	1793c <__assert_fail@plt+0x6884>
   1783c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17840:	cmp	r0, #0
   17844:	bge	178d0 <__assert_fail@plt+0x6818>
   17848:	b	1784c <__assert_fail@plt+0x6794>
   1784c:	ldr	r0, [pc, #2112]	; 18094 <__assert_fail@plt+0x6fdc>
   17850:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17854:	ldr	r2, [fp, #8]
   17858:	sdiv	r0, r0, r2
   1785c:	cmp	r1, r0
   17860:	blt	179cc <__assert_fail@plt+0x6914>
   17864:	b	179e0 <__assert_fail@plt+0x6928>
   17868:	b	1786c <__assert_fail@plt+0x67b4>
   1786c:	ldr	r0, [pc, #2084]	; 18098 <__assert_fail@plt+0x6fe0>
   17870:	ldr	r1, [fp, #8]
   17874:	cmp	r1, r0
   17878:	blt	17890 <__assert_fail@plt+0x67d8>
   1787c:	b	1789c <__assert_fail@plt+0x67e4>
   17880:	ldr	r0, [fp, #8]
   17884:	movw	r1, #0
   17888:	cmp	r1, r0
   1788c:	bge	1789c <__assert_fail@plt+0x67e4>
   17890:	movw	r0, #0
   17894:	str	r0, [sp, #64]	; 0x40
   17898:	b	178b4 <__assert_fail@plt+0x67fc>
   1789c:	ldr	r0, [pc, #2032]	; 18094 <__assert_fail@plt+0x6fdc>
   178a0:	ldr	r1, [fp, #8]
   178a4:	movw	r2, #0
   178a8:	sub	r1, r2, r1
   178ac:	sdiv	r0, r0, r1
   178b0:	str	r0, [sp, #64]	; 0x40
   178b4:	ldr	r0, [sp, #64]	; 0x40
   178b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178bc:	mvn	r2, #0
   178c0:	sub	r1, r2, r1
   178c4:	cmp	r0, r1
   178c8:	ble	179cc <__assert_fail@plt+0x6914>
   178cc:	b	179e0 <__assert_fail@plt+0x6928>
   178d0:	ldr	r0, [fp, #8]
   178d4:	cmn	r0, #1
   178d8:	bne	17920 <__assert_fail@plt+0x6868>
   178dc:	b	178e0 <__assert_fail@plt+0x6828>
   178e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178e4:	add	r0, r0, #-2147483648	; 0x80000000
   178e8:	movw	r1, #0
   178ec:	cmp	r1, r0
   178f0:	blt	179cc <__assert_fail@plt+0x6914>
   178f4:	b	179e0 <__assert_fail@plt+0x6928>
   178f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178fc:	movw	r1, #0
   17900:	cmp	r1, r0
   17904:	bge	179e0 <__assert_fail@plt+0x6928>
   17908:	ldr	r0, [pc, #1924]	; 18094 <__assert_fail@plt+0x6fdc>
   1790c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17910:	sub	r1, r1, #1
   17914:	cmp	r0, r1
   17918:	blt	179cc <__assert_fail@plt+0x6914>
   1791c:	b	179e0 <__assert_fail@plt+0x6928>
   17920:	ldr	r0, [pc, #1908]	; 1809c <__assert_fail@plt+0x6fe4>
   17924:	ldr	r1, [fp, #8]
   17928:	sdiv	r0, r0, r1
   1792c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17930:	cmp	r0, r1
   17934:	blt	179cc <__assert_fail@plt+0x6914>
   17938:	b	179e0 <__assert_fail@plt+0x6928>
   1793c:	ldr	r0, [fp, #8]
   17940:	cmp	r0, #0
   17944:	bne	1794c <__assert_fail@plt+0x6894>
   17948:	b	179e0 <__assert_fail@plt+0x6928>
   1794c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17950:	cmp	r0, #0
   17954:	bge	179b4 <__assert_fail@plt+0x68fc>
   17958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1795c:	cmn	r0, #1
   17960:	bne	17998 <__assert_fail@plt+0x68e0>
   17964:	b	17968 <__assert_fail@plt+0x68b0>
   17968:	ldr	r0, [fp, #8]
   1796c:	add	r0, r0, #-2147483648	; 0x80000000
   17970:	movw	r1, #0
   17974:	cmp	r1, r0
   17978:	blt	179cc <__assert_fail@plt+0x6914>
   1797c:	b	179e0 <__assert_fail@plt+0x6928>
   17980:	ldr	r0, [pc, #1804]	; 18094 <__assert_fail@plt+0x6fdc>
   17984:	ldr	r1, [fp, #8]
   17988:	sub	r1, r1, #1
   1798c:	cmp	r0, r1
   17990:	blt	179cc <__assert_fail@plt+0x6914>
   17994:	b	179e0 <__assert_fail@plt+0x6928>
   17998:	ldr	r0, [pc, #1788]	; 1809c <__assert_fail@plt+0x6fe4>
   1799c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179a0:	sdiv	r0, r0, r1
   179a4:	ldr	r1, [fp, #8]
   179a8:	cmp	r0, r1
   179ac:	blt	179cc <__assert_fail@plt+0x6914>
   179b0:	b	179e0 <__assert_fail@plt+0x6928>
   179b4:	ldr	r0, [pc, #1752]	; 18094 <__assert_fail@plt+0x6fdc>
   179b8:	ldr	r1, [fp, #8]
   179bc:	sdiv	r0, r0, r1
   179c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179c4:	cmp	r0, r1
   179c8:	bge	179e0 <__assert_fail@plt+0x6928>
   179cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179d0:	ldr	r1, [fp, #8]
   179d4:	mul	r0, r0, r1
   179d8:	str	r0, [fp, #-28]	; 0xffffffe4
   179dc:	b	18068 <__assert_fail@plt+0x6fb0>
   179e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179e4:	ldr	r1, [fp, #8]
   179e8:	mul	r0, r0, r1
   179ec:	str	r0, [fp, #-28]	; 0xffffffe4
   179f0:	b	1806c <__assert_fail@plt+0x6fb4>
   179f4:	ldr	r0, [fp, #8]
   179f8:	cmp	r0, #0
   179fc:	bge	17b0c <__assert_fail@plt+0x6a54>
   17a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a04:	cmp	r0, #0
   17a08:	bge	17a94 <__assert_fail@plt+0x69dc>
   17a0c:	b	17a2c <__assert_fail@plt+0x6974>
   17a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a14:	ldr	r1, [fp, #8]
   17a18:	mvn	r2, #0
   17a1c:	udiv	r1, r2, r1
   17a20:	cmp	r0, r1
   17a24:	bcc	17ba8 <__assert_fail@plt+0x6af0>
   17a28:	b	17bbc <__assert_fail@plt+0x6b04>
   17a2c:	b	17a30 <__assert_fail@plt+0x6978>
   17a30:	ldr	r0, [pc, #1632]	; 18098 <__assert_fail@plt+0x6fe0>
   17a34:	ldr	r1, [fp, #8]
   17a38:	cmp	r1, r0
   17a3c:	blt	17a54 <__assert_fail@plt+0x699c>
   17a40:	b	17a60 <__assert_fail@plt+0x69a8>
   17a44:	ldr	r0, [fp, #8]
   17a48:	movw	r1, #0
   17a4c:	cmp	r1, r0
   17a50:	bge	17a60 <__assert_fail@plt+0x69a8>
   17a54:	movw	r0, #1
   17a58:	str	r0, [sp, #60]	; 0x3c
   17a5c:	b	17a78 <__assert_fail@plt+0x69c0>
   17a60:	ldr	r0, [fp, #8]
   17a64:	movw	r1, #0
   17a68:	sub	r0, r1, r0
   17a6c:	mvn	r1, #0
   17a70:	udiv	r0, r1, r0
   17a74:	str	r0, [sp, #60]	; 0x3c
   17a78:	ldr	r0, [sp, #60]	; 0x3c
   17a7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a80:	mvn	r2, #0
   17a84:	sub	r1, r2, r1
   17a88:	cmp	r0, r1
   17a8c:	bls	17ba8 <__assert_fail@plt+0x6af0>
   17a90:	b	17bbc <__assert_fail@plt+0x6b04>
   17a94:	b	17a98 <__assert_fail@plt+0x69e0>
   17a98:	b	17af0 <__assert_fail@plt+0x6a38>
   17a9c:	b	17af0 <__assert_fail@plt+0x6a38>
   17aa0:	ldr	r0, [fp, #8]
   17aa4:	cmn	r0, #1
   17aa8:	bne	17af0 <__assert_fail@plt+0x6a38>
   17aac:	b	17ab0 <__assert_fail@plt+0x69f8>
   17ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ab4:	add	r0, r0, #0
   17ab8:	movw	r1, #0
   17abc:	cmp	r1, r0
   17ac0:	blt	17ba8 <__assert_fail@plt+0x6af0>
   17ac4:	b	17bbc <__assert_fail@plt+0x6b04>
   17ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17acc:	movw	r1, #0
   17ad0:	cmp	r1, r0
   17ad4:	bge	17bbc <__assert_fail@plt+0x6b04>
   17ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17adc:	sub	r0, r0, #1
   17ae0:	mvn	r1, #0
   17ae4:	cmp	r1, r0
   17ae8:	blt	17ba8 <__assert_fail@plt+0x6af0>
   17aec:	b	17bbc <__assert_fail@plt+0x6b04>
   17af0:	ldr	r0, [fp, #8]
   17af4:	movw	r1, #0
   17af8:	sdiv	r0, r1, r0
   17afc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b00:	cmp	r0, r1
   17b04:	blt	17ba8 <__assert_fail@plt+0x6af0>
   17b08:	b	17bbc <__assert_fail@plt+0x6b04>
   17b0c:	ldr	r0, [fp, #8]
   17b10:	cmp	r0, #0
   17b14:	bne	17b1c <__assert_fail@plt+0x6a64>
   17b18:	b	17bbc <__assert_fail@plt+0x6b04>
   17b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b20:	cmp	r0, #0
   17b24:	bge	17b90 <__assert_fail@plt+0x6ad8>
   17b28:	b	17b2c <__assert_fail@plt+0x6a74>
   17b2c:	b	17b74 <__assert_fail@plt+0x6abc>
   17b30:	b	17b74 <__assert_fail@plt+0x6abc>
   17b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b38:	cmn	r0, #1
   17b3c:	bne	17b74 <__assert_fail@plt+0x6abc>
   17b40:	b	17b44 <__assert_fail@plt+0x6a8c>
   17b44:	ldr	r0, [fp, #8]
   17b48:	add	r0, r0, #0
   17b4c:	movw	r1, #0
   17b50:	cmp	r1, r0
   17b54:	blt	17ba8 <__assert_fail@plt+0x6af0>
   17b58:	b	17bbc <__assert_fail@plt+0x6b04>
   17b5c:	ldr	r0, [fp, #8]
   17b60:	sub	r0, r0, #1
   17b64:	mvn	r1, #0
   17b68:	cmp	r1, r0
   17b6c:	blt	17ba8 <__assert_fail@plt+0x6af0>
   17b70:	b	17bbc <__assert_fail@plt+0x6b04>
   17b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b78:	movw	r1, #0
   17b7c:	sdiv	r0, r1, r0
   17b80:	ldr	r1, [fp, #8]
   17b84:	cmp	r0, r1
   17b88:	blt	17ba8 <__assert_fail@plt+0x6af0>
   17b8c:	b	17bbc <__assert_fail@plt+0x6b04>
   17b90:	ldr	r0, [fp, #8]
   17b94:	mvn	r1, #0
   17b98:	udiv	r0, r1, r0
   17b9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ba0:	cmp	r0, r1
   17ba4:	bcs	17bbc <__assert_fail@plt+0x6b04>
   17ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bac:	ldr	r1, [fp, #8]
   17bb0:	mul	r0, r0, r1
   17bb4:	str	r0, [fp, #-28]	; 0xffffffe4
   17bb8:	b	18068 <__assert_fail@plt+0x6fb0>
   17bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bc0:	ldr	r1, [fp, #8]
   17bc4:	mul	r0, r0, r1
   17bc8:	str	r0, [fp, #-28]	; 0xffffffe4
   17bcc:	b	1806c <__assert_fail@plt+0x6fb4>
   17bd0:	b	17bd4 <__assert_fail@plt+0x6b1c>
   17bd4:	ldr	r0, [fp, #8]
   17bd8:	cmp	r0, #0
   17bdc:	bge	17d44 <__assert_fail@plt+0x6c8c>
   17be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17be4:	cmp	r0, #0
   17be8:	bge	17cc0 <__assert_fail@plt+0x6c08>
   17bec:	b	17bf0 <__assert_fail@plt+0x6b38>
   17bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bf4:	ldr	r1, [fp, #8]
   17bf8:	asr	r3, r1, #31
   17bfc:	mvn	r2, #0
   17c00:	mvn	ip, #-2147483648	; 0x80000000
   17c04:	str	r0, [sp, #56]	; 0x38
   17c08:	mov	r0, r2
   17c0c:	str	r1, [sp, #52]	; 0x34
   17c10:	mov	r1, ip
   17c14:	ldr	r2, [sp, #52]	; 0x34
   17c18:	bl	1c644 <__assert_fail@plt+0xb58c>
   17c1c:	ldr	r2, [sp, #56]	; 0x38
   17c20:	subs	r0, r2, r0
   17c24:	rscs	r1, r1, r2, asr #31
   17c28:	blt	17e0c <__assert_fail@plt+0x6d54>
   17c2c:	b	17e20 <__assert_fail@plt+0x6d68>
   17c30:	b	17c34 <__assert_fail@plt+0x6b7c>
   17c34:	ldr	r0, [pc, #1116]	; 18098 <__assert_fail@plt+0x6fe0>
   17c38:	ldr	r1, [fp, #8]
   17c3c:	cmp	r1, r0
   17c40:	blt	17c58 <__assert_fail@plt+0x6ba0>
   17c44:	b	17c6c <__assert_fail@plt+0x6bb4>
   17c48:	ldr	r0, [fp, #8]
   17c4c:	movw	r1, #0
   17c50:	cmp	r1, r0
   17c54:	bge	17c6c <__assert_fail@plt+0x6bb4>
   17c58:	mov	r0, #0
   17c5c:	mvn	r1, #0
   17c60:	str	r1, [sp, #48]	; 0x30
   17c64:	str	r0, [sp, #44]	; 0x2c
   17c68:	b	17ca0 <__assert_fail@plt+0x6be8>
   17c6c:	ldr	r0, [fp, #8]
   17c70:	rsb	r0, r0, #0
   17c74:	asr	r3, r0, #31
   17c78:	mvn	r1, #0
   17c7c:	mvn	r2, #-2147483648	; 0x80000000
   17c80:	str	r0, [sp, #40]	; 0x28
   17c84:	mov	r0, r1
   17c88:	mov	r1, r2
   17c8c:	ldr	r2, [sp, #40]	; 0x28
   17c90:	bl	1c644 <__assert_fail@plt+0xb58c>
   17c94:	str	r0, [sp, #48]	; 0x30
   17c98:	str	r1, [sp, #44]	; 0x2c
   17c9c:	b	17ca0 <__assert_fail@plt+0x6be8>
   17ca0:	ldr	r0, [sp, #44]	; 0x2c
   17ca4:	ldr	r1, [sp, #48]	; 0x30
   17ca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17cac:	mvn	r2, r2
   17cb0:	subs	r1, r2, r1
   17cb4:	rscs	r0, r0, r2, asr #31
   17cb8:	bge	17e0c <__assert_fail@plt+0x6d54>
   17cbc:	b	17e20 <__assert_fail@plt+0x6d68>
   17cc0:	ldr	r0, [fp, #8]
   17cc4:	cmn	r0, #1
   17cc8:	bne	17d0c <__assert_fail@plt+0x6c54>
   17ccc:	b	17cd0 <__assert_fail@plt+0x6c18>
   17cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cd4:	mov	r1, #-2147483648	; 0x80000000
   17cd8:	add	r1, r1, r0, asr #31
   17cdc:	rsbs	r0, r0, #0
   17ce0:	rscs	r1, r1, #0
   17ce4:	blt	17e0c <__assert_fail@plt+0x6d54>
   17ce8:	b	17e20 <__assert_fail@plt+0x6d68>
   17cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf0:	movw	r1, #0
   17cf4:	cmp	r1, r0
   17cf8:	bge	17e20 <__assert_fail@plt+0x6d68>
   17cfc:	mov	r0, #0
   17d00:	cmp	r0, #0
   17d04:	bne	17e0c <__assert_fail@plt+0x6d54>
   17d08:	b	17e20 <__assert_fail@plt+0x6d68>
   17d0c:	ldr	r0, [fp, #8]
   17d10:	asr	r3, r0, #31
   17d14:	mov	r1, #0
   17d18:	mov	r2, #-2147483648	; 0x80000000
   17d1c:	str	r0, [sp, #36]	; 0x24
   17d20:	mov	r0, r1
   17d24:	mov	r1, r2
   17d28:	ldr	r2, [sp, #36]	; 0x24
   17d2c:	bl	1c644 <__assert_fail@plt+0xb58c>
   17d30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d34:	subs	r0, r0, r2
   17d38:	sbcs	r1, r1, r2, asr #31
   17d3c:	blt	17e0c <__assert_fail@plt+0x6d54>
   17d40:	b	17e20 <__assert_fail@plt+0x6d68>
   17d44:	ldr	r0, [fp, #8]
   17d48:	cmp	r0, #0
   17d4c:	bne	17d54 <__assert_fail@plt+0x6c9c>
   17d50:	b	17e20 <__assert_fail@plt+0x6d68>
   17d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d58:	cmp	r0, #0
   17d5c:	bge	17dd4 <__assert_fail@plt+0x6d1c>
   17d60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d64:	cmn	r0, #1
   17d68:	bne	17d9c <__assert_fail@plt+0x6ce4>
   17d6c:	b	17d70 <__assert_fail@plt+0x6cb8>
   17d70:	ldr	r0, [fp, #8]
   17d74:	mov	r1, #-2147483648	; 0x80000000
   17d78:	add	r1, r1, r0, asr #31
   17d7c:	rsbs	r0, r0, #0
   17d80:	rscs	r1, r1, #0
   17d84:	blt	17e0c <__assert_fail@plt+0x6d54>
   17d88:	b	17e20 <__assert_fail@plt+0x6d68>
   17d8c:	mov	r0, #0
   17d90:	cmp	r0, #0
   17d94:	bne	17e0c <__assert_fail@plt+0x6d54>
   17d98:	b	17e20 <__assert_fail@plt+0x6d68>
   17d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17da0:	asr	r3, r0, #31
   17da4:	mov	r1, #0
   17da8:	mov	r2, #-2147483648	; 0x80000000
   17dac:	str	r0, [sp, #32]
   17db0:	mov	r0, r1
   17db4:	mov	r1, r2
   17db8:	ldr	r2, [sp, #32]
   17dbc:	bl	1c644 <__assert_fail@plt+0xb58c>
   17dc0:	ldr	r2, [fp, #8]
   17dc4:	subs	r0, r0, r2
   17dc8:	sbcs	r1, r1, r2, asr #31
   17dcc:	blt	17e0c <__assert_fail@plt+0x6d54>
   17dd0:	b	17e20 <__assert_fail@plt+0x6d68>
   17dd4:	ldr	r0, [fp, #8]
   17dd8:	asr	r3, r0, #31
   17ddc:	mvn	r1, #0
   17de0:	mvn	r2, #-2147483648	; 0x80000000
   17de4:	str	r0, [sp, #28]
   17de8:	mov	r0, r1
   17dec:	mov	r1, r2
   17df0:	ldr	r2, [sp, #28]
   17df4:	bl	1c644 <__assert_fail@plt+0xb58c>
   17df8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17dfc:	subs	r0, r0, r2
   17e00:	sbcs	r1, r1, r2, asr #31
   17e04:	bge	17e20 <__assert_fail@plt+0x6d68>
   17e08:	b	17e0c <__assert_fail@plt+0x6d54>
   17e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e10:	ldr	r1, [fp, #8]
   17e14:	mul	r0, r0, r1
   17e18:	str	r0, [fp, #-28]	; 0xffffffe4
   17e1c:	b	18068 <__assert_fail@plt+0x6fb0>
   17e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e24:	ldr	r1, [fp, #8]
   17e28:	mul	r0, r0, r1
   17e2c:	str	r0, [fp, #-28]	; 0xffffffe4
   17e30:	b	1806c <__assert_fail@plt+0x6fb4>
   17e34:	ldr	r0, [fp, #8]
   17e38:	cmp	r0, #0
   17e3c:	bge	17f8c <__assert_fail@plt+0x6ed4>
   17e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e44:	cmp	r0, #0
   17e48:	bge	17f14 <__assert_fail@plt+0x6e5c>
   17e4c:	b	17e8c <__assert_fail@plt+0x6dd4>
   17e50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e54:	ldr	r1, [fp, #8]
   17e58:	asr	r3, r1, #31
   17e5c:	mvn	r2, #0
   17e60:	str	r0, [sp, #24]
   17e64:	mov	r0, r2
   17e68:	str	r1, [sp, #20]
   17e6c:	mov	r1, r2
   17e70:	ldr	r2, [sp, #20]
   17e74:	bl	1c718 <__assert_fail@plt+0xb660>
   17e78:	ldr	r2, [sp, #24]
   17e7c:	subs	r0, r2, r0
   17e80:	rscs	r1, r1, r2, asr #31
   17e84:	bcc	18040 <__assert_fail@plt+0x6f88>
   17e88:	b	18054 <__assert_fail@plt+0x6f9c>
   17e8c:	b	17e90 <__assert_fail@plt+0x6dd8>
   17e90:	ldr	r0, [pc, #512]	; 18098 <__assert_fail@plt+0x6fe0>
   17e94:	ldr	r1, [fp, #8]
   17e98:	cmp	r1, r0
   17e9c:	blt	17eb4 <__assert_fail@plt+0x6dfc>
   17ea0:	b	17ec8 <__assert_fail@plt+0x6e10>
   17ea4:	ldr	r0, [fp, #8]
   17ea8:	movw	r1, #0
   17eac:	cmp	r1, r0
   17eb0:	bge	17ec8 <__assert_fail@plt+0x6e10>
   17eb4:	mov	r0, #1
   17eb8:	mvn	r1, #0
   17ebc:	str	r1, [sp, #16]
   17ec0:	str	r0, [sp, #12]
   17ec4:	b	17ef4 <__assert_fail@plt+0x6e3c>
   17ec8:	ldr	r0, [fp, #8]
   17ecc:	rsb	r0, r0, #0
   17ed0:	asr	r3, r0, #31
   17ed4:	mvn	r1, #0
   17ed8:	str	r0, [sp, #8]
   17edc:	mov	r0, r1
   17ee0:	ldr	r2, [sp, #8]
   17ee4:	bl	1c718 <__assert_fail@plt+0xb660>
   17ee8:	str	r0, [sp, #16]
   17eec:	str	r1, [sp, #12]
   17ef0:	b	17ef4 <__assert_fail@plt+0x6e3c>
   17ef4:	ldr	r0, [sp, #12]
   17ef8:	ldr	r1, [sp, #16]
   17efc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17f00:	mvn	r2, r2
   17f04:	subs	r1, r2, r1
   17f08:	rscs	r0, r0, r2, asr #31
   17f0c:	bcs	18040 <__assert_fail@plt+0x6f88>
   17f10:	b	18054 <__assert_fail@plt+0x6f9c>
   17f14:	b	17f18 <__assert_fail@plt+0x6e60>
   17f18:	b	17f70 <__assert_fail@plt+0x6eb8>
   17f1c:	b	17f70 <__assert_fail@plt+0x6eb8>
   17f20:	ldr	r0, [fp, #8]
   17f24:	cmn	r0, #1
   17f28:	bne	17f70 <__assert_fail@plt+0x6eb8>
   17f2c:	b	17f30 <__assert_fail@plt+0x6e78>
   17f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f34:	add	r0, r0, #0
   17f38:	movw	r1, #0
   17f3c:	cmp	r1, r0
   17f40:	blt	18040 <__assert_fail@plt+0x6f88>
   17f44:	b	18054 <__assert_fail@plt+0x6f9c>
   17f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f4c:	movw	r1, #0
   17f50:	cmp	r1, r0
   17f54:	bge	18054 <__assert_fail@plt+0x6f9c>
   17f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f5c:	sub	r0, r0, #1
   17f60:	mvn	r1, #0
   17f64:	cmp	r1, r0
   17f68:	blt	18040 <__assert_fail@plt+0x6f88>
   17f6c:	b	18054 <__assert_fail@plt+0x6f9c>
   17f70:	ldr	r0, [fp, #8]
   17f74:	movw	r1, #0
   17f78:	sdiv	r0, r1, r0
   17f7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f80:	cmp	r0, r1
   17f84:	blt	18040 <__assert_fail@plt+0x6f88>
   17f88:	b	18054 <__assert_fail@plt+0x6f9c>
   17f8c:	ldr	r0, [fp, #8]
   17f90:	cmp	r0, #0
   17f94:	bne	17f9c <__assert_fail@plt+0x6ee4>
   17f98:	b	18054 <__assert_fail@plt+0x6f9c>
   17f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fa0:	cmp	r0, #0
   17fa4:	bge	18010 <__assert_fail@plt+0x6f58>
   17fa8:	b	17fac <__assert_fail@plt+0x6ef4>
   17fac:	b	17ff4 <__assert_fail@plt+0x6f3c>
   17fb0:	b	17ff4 <__assert_fail@plt+0x6f3c>
   17fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fb8:	cmn	r0, #1
   17fbc:	bne	17ff4 <__assert_fail@plt+0x6f3c>
   17fc0:	b	17fc4 <__assert_fail@plt+0x6f0c>
   17fc4:	ldr	r0, [fp, #8]
   17fc8:	add	r0, r0, #0
   17fcc:	movw	r1, #0
   17fd0:	cmp	r1, r0
   17fd4:	blt	18040 <__assert_fail@plt+0x6f88>
   17fd8:	b	18054 <__assert_fail@plt+0x6f9c>
   17fdc:	ldr	r0, [fp, #8]
   17fe0:	sub	r0, r0, #1
   17fe4:	mvn	r1, #0
   17fe8:	cmp	r1, r0
   17fec:	blt	18040 <__assert_fail@plt+0x6f88>
   17ff0:	b	18054 <__assert_fail@plt+0x6f9c>
   17ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ff8:	movw	r1, #0
   17ffc:	sdiv	r0, r1, r0
   18000:	ldr	r1, [fp, #8]
   18004:	cmp	r0, r1
   18008:	blt	18040 <__assert_fail@plt+0x6f88>
   1800c:	b	18054 <__assert_fail@plt+0x6f9c>
   18010:	ldr	r0, [fp, #8]
   18014:	asr	r3, r0, #31
   18018:	mvn	r1, #0
   1801c:	str	r0, [sp, #4]
   18020:	mov	r0, r1
   18024:	ldr	r2, [sp, #4]
   18028:	bl	1c718 <__assert_fail@plt+0xb660>
   1802c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18030:	subs	r0, r0, r2
   18034:	sbcs	r1, r1, r2, asr #31
   18038:	bcs	18054 <__assert_fail@plt+0x6f9c>
   1803c:	b	18040 <__assert_fail@plt+0x6f88>
   18040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18044:	ldr	r1, [fp, #8]
   18048:	mul	r0, r0, r1
   1804c:	str	r0, [fp, #-28]	; 0xffffffe4
   18050:	b	18068 <__assert_fail@plt+0x6fb0>
   18054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18058:	ldr	r1, [fp, #8]
   1805c:	mul	r0, r0, r1
   18060:	str	r0, [fp, #-28]	; 0xffffffe4
   18064:	b	1806c <__assert_fail@plt+0x6fb4>
   18068:	bl	18244 <__assert_fail@plt+0x718c>
   1806c:	ldr	r0, [fp, #-4]
   18070:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18074:	bl	155a4 <__assert_fail@plt+0x44ec>
   18078:	str	r0, [fp, #-4]
   1807c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18080:	ldr	r1, [fp, #-8]
   18084:	str	r0, [r1]
   18088:	ldr	r0, [fp, #-4]
   1808c:	mov	sp, fp
   18090:	pop	{fp, pc}
   18094:	svcvc	0x00ffffff
   18098:	andhi	r0, r0, r1
   1809c:	andhi	r0, r0, r0
   180a0:			; <UNDEFINED> instruction: 0xffff8000
   180a4:	push	{fp, lr}
   180a8:	mov	fp, sp
   180ac:	sub	sp, sp, #8
   180b0:	str	r0, [sp, #4]
   180b4:	ldr	r0, [sp, #4]
   180b8:	movw	r1, #1
   180bc:	bl	180c8 <__assert_fail@plt+0x7010>
   180c0:	mov	sp, fp
   180c4:	pop	{fp, pc}
   180c8:	push	{fp, lr}
   180cc:	mov	fp, sp
   180d0:	sub	sp, sp, #8
   180d4:	str	r0, [sp, #4]
   180d8:	str	r1, [sp]
   180dc:	ldr	r0, [sp, #4]
   180e0:	ldr	r1, [sp]
   180e4:	bl	1a474 <__assert_fail@plt+0x93bc>
   180e8:	bl	15530 <__assert_fail@plt+0x4478>
   180ec:	mov	sp, fp
   180f0:	pop	{fp, pc}
   180f4:	push	{fp, lr}
   180f8:	mov	fp, sp
   180fc:	sub	sp, sp, #8
   18100:	str	r0, [sp, #4]
   18104:	ldr	r0, [sp, #4]
   18108:	movw	r1, #1
   1810c:	bl	18118 <__assert_fail@plt+0x7060>
   18110:	mov	sp, fp
   18114:	pop	{fp, pc}
   18118:	push	{fp, lr}
   1811c:	mov	fp, sp
   18120:	sub	sp, sp, #8
   18124:	str	r0, [sp, #4]
   18128:	str	r1, [sp]
   1812c:	ldr	r0, [sp, #4]
   18130:	ldr	r1, [sp]
   18134:	bl	1a8b0 <__assert_fail@plt+0x97f8>
   18138:	bl	15530 <__assert_fail@plt+0x4478>
   1813c:	mov	sp, fp
   18140:	pop	{fp, pc}
   18144:	push	{fp, lr}
   18148:	mov	fp, sp
   1814c:	sub	sp, sp, #16
   18150:	str	r0, [fp, #-4]
   18154:	str	r1, [sp, #8]
   18158:	ldr	r0, [sp, #8]
   1815c:	bl	1550c <__assert_fail@plt+0x4454>
   18160:	ldr	r1, [fp, #-4]
   18164:	ldr	r2, [sp, #8]
   18168:	str	r0, [sp, #4]
   1816c:	bl	10ec0 <memcpy@plt>
   18170:	ldr	r0, [sp, #4]
   18174:	mov	sp, fp
   18178:	pop	{fp, pc}
   1817c:	push	{fp, lr}
   18180:	mov	fp, sp
   18184:	sub	sp, sp, #16
   18188:	str	r0, [fp, #-4]
   1818c:	str	r1, [sp, #8]
   18190:	ldr	r0, [sp, #8]
   18194:	bl	15560 <__assert_fail@plt+0x44a8>
   18198:	ldr	r1, [fp, #-4]
   1819c:	ldr	r2, [sp, #8]
   181a0:	str	r0, [sp, #4]
   181a4:	bl	10ec0 <memcpy@plt>
   181a8:	ldr	r0, [sp, #4]
   181ac:	mov	sp, fp
   181b0:	pop	{fp, pc}
   181b4:	push	{fp, lr}
   181b8:	mov	fp, sp
   181bc:	sub	sp, sp, #16
   181c0:	str	r0, [fp, #-4]
   181c4:	str	r1, [sp, #8]
   181c8:	ldr	r0, [sp, #8]
   181cc:	add	r0, r0, #1
   181d0:	bl	15560 <__assert_fail@plt+0x44a8>
   181d4:	str	r0, [sp, #4]
   181d8:	ldr	r0, [sp, #4]
   181dc:	ldr	r1, [sp, #8]
   181e0:	add	r0, r0, r1
   181e4:	movw	r1, #0
   181e8:	strb	r1, [r0]
   181ec:	ldr	r0, [sp, #4]
   181f0:	ldr	r1, [fp, #-4]
   181f4:	ldr	r2, [sp, #8]
   181f8:	str	r0, [sp]
   181fc:	bl	10ec0 <memcpy@plt>
   18200:	ldr	r0, [sp]
   18204:	mov	sp, fp
   18208:	pop	{fp, pc}
   1820c:	push	{fp, lr}
   18210:	mov	fp, sp
   18214:	sub	sp, sp, #8
   18218:	str	r0, [sp, #4]
   1821c:	ldr	r0, [sp, #4]
   18220:	ldr	r1, [sp, #4]
   18224:	str	r0, [sp]
   18228:	mov	r0, r1
   1822c:	bl	10fc8 <strlen@plt>
   18230:	add	r1, r0, #1
   18234:	ldr	r0, [sp]
   18238:	bl	18144 <__assert_fail@plt+0x708c>
   1823c:	mov	sp, fp
   18240:	pop	{fp, pc}
   18244:	push	{fp, lr}
   18248:	mov	fp, sp
   1824c:	sub	sp, sp, #8
   18250:	movw	r0, #57584	; 0xe0f0
   18254:	movt	r0, #2
   18258:	ldr	r0, [r0]
   1825c:	movw	r1, #53688	; 0xd1b8
   18260:	movt	r1, #1
   18264:	str	r0, [sp, #4]
   18268:	mov	r0, r1
   1826c:	bl	10fbc <gettext@plt>
   18270:	ldr	r1, [sp, #4]
   18274:	str	r0, [sp]
   18278:	mov	r0, r1
   1827c:	movw	r1, #0
   18280:	movw	r2, #52635	; 0xcd9b
   18284:	movt	r2, #1
   18288:	ldr	r3, [sp]
   1828c:	bl	10f5c <error@plt>
   18290:	bl	110a0 <abort@plt>
   18294:	push	{r4, r5, r6, sl, fp, lr}
   18298:	add	fp, sp, #16
   1829c:	sub	sp, sp, #88	; 0x58
   182a0:	ldr	ip, [fp, #12]
   182a4:	ldr	lr, [fp, #8]
   182a8:	ldr	r4, [fp, #24]
   182ac:	ldr	r5, [fp, #20]
   182b0:	ldr	r6, [fp, #16]
   182b4:	str	r0, [fp, #-20]	; 0xffffffec
   182b8:	str	r1, [fp, #-24]	; 0xffffffe8
   182bc:	str	r3, [fp, #-28]	; 0xffffffe4
   182c0:	str	r2, [fp, #-32]	; 0xffffffe0
   182c4:	str	ip, [fp, #-36]	; 0xffffffdc
   182c8:	str	lr, [fp, #-40]	; 0xffffffd8
   182cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   182d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   182d4:	ldr	r1, [fp, #16]
   182d8:	movw	r3, #0
   182dc:	str	r1, [sp, #44]	; 0x2c
   182e0:	mov	r1, r3
   182e4:	add	r3, sp, #48	; 0x30
   182e8:	ldr	ip, [sp, #44]	; 0x2c
   182ec:	str	ip, [sp]
   182f0:	str	r4, [sp, #40]	; 0x28
   182f4:	str	r5, [sp, #36]	; 0x24
   182f8:	str	r6, [sp, #32]
   182fc:	bl	1850c <__assert_fail@plt+0x7454>
   18300:	str	r0, [fp, #-44]	; 0xffffffd4
   18304:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18308:	cmp	r0, #0
   1830c:	bne	18394 <__assert_fail@plt+0x72dc>
   18310:	ldr	r0, [sp, #48]	; 0x30
   18314:	ldr	r1, [sp, #52]	; 0x34
   18318:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1831c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18320:	subs	r0, r0, r2
   18324:	sbcs	r1, r1, r3
   18328:	bcc	18350 <__assert_fail@plt+0x7298>
   1832c:	b	18330 <__assert_fail@plt+0x7278>
   18330:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18334:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18338:	ldr	r2, [sp, #48]	; 0x30
   1833c:	ldr	r3, [sp, #52]	; 0x34
   18340:	subs	r0, r0, r2
   18344:	sbcs	r1, r1, r3
   18348:	bcs	18390 <__assert_fail@plt+0x72d8>
   1834c:	b	18350 <__assert_fail@plt+0x7298>
   18350:	mov	r0, #1
   18354:	str	r0, [fp, #-44]	; 0xffffffd4
   18358:	ldr	r0, [sp, #48]	; 0x30
   1835c:	ldr	r1, [sp, #52]	; 0x34
   18360:	subs	r0, r0, #1073741824	; 0x40000000
   18364:	sbcs	r1, r1, #0
   18368:	bcc	18380 <__assert_fail@plt+0x72c8>
   1836c:	b	18370 <__assert_fail@plt+0x72b8>
   18370:	bl	10fec <__errno_location@plt>
   18374:	movw	r1, #75	; 0x4b
   18378:	str	r1, [r0]
   1837c:	b	1838c <__assert_fail@plt+0x72d4>
   18380:	bl	10fec <__errno_location@plt>
   18384:	movw	r1, #34	; 0x22
   18388:	str	r1, [r0]
   1838c:	b	18390 <__assert_fail@plt+0x72d8>
   18390:	b	183d0 <__assert_fail@plt+0x7318>
   18394:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18398:	cmp	r0, #1
   1839c:	bne	183b0 <__assert_fail@plt+0x72f8>
   183a0:	bl	10fec <__errno_location@plt>
   183a4:	movw	r1, #75	; 0x4b
   183a8:	str	r1, [r0]
   183ac:	b	183cc <__assert_fail@plt+0x7314>
   183b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   183b4:	cmp	r0, #3
   183b8:	bne	183c8 <__assert_fail@plt+0x7310>
   183bc:	bl	10fec <__errno_location@plt>
   183c0:	movw	r1, #0
   183c4:	str	r1, [r0]
   183c8:	b	183cc <__assert_fail@plt+0x7314>
   183cc:	b	183d0 <__assert_fail@plt+0x7318>
   183d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   183d4:	cmp	r0, #0
   183d8:	beq	18474 <__assert_fail@plt+0x73bc>
   183dc:	ldr	r0, [fp, #24]
   183e0:	cmp	r0, #0
   183e4:	beq	183f4 <__assert_fail@plt+0x733c>
   183e8:	ldr	r0, [fp, #24]
   183ec:	str	r0, [sp, #28]
   183f0:	b	18400 <__assert_fail@plt+0x7348>
   183f4:	movw	r0, #1
   183f8:	str	r0, [sp, #28]
   183fc:	b	18400 <__assert_fail@plt+0x7348>
   18400:	ldr	r0, [sp, #28]
   18404:	str	r0, [sp, #24]
   18408:	bl	10fec <__errno_location@plt>
   1840c:	ldr	r0, [r0]
   18410:	cmp	r0, #22
   18414:	bne	18424 <__assert_fail@plt+0x736c>
   18418:	movw	r0, #0
   1841c:	str	r0, [sp, #20]
   18420:	b	18430 <__assert_fail@plt+0x7378>
   18424:	bl	10fec <__errno_location@plt>
   18428:	ldr	r0, [r0]
   1842c:	str	r0, [sp, #20]
   18430:	ldr	r0, [sp, #20]
   18434:	ldr	r3, [fp, #20]
   18438:	ldr	r1, [fp, #-20]	; 0xffffffec
   1843c:	str	r0, [sp, #16]
   18440:	mov	r0, r1
   18444:	str	r3, [sp, #12]
   18448:	bl	14b08 <__assert_fail@plt+0x3a50>
   1844c:	ldr	r1, [sp, #24]
   18450:	str	r0, [sp, #8]
   18454:	mov	r0, r1
   18458:	ldr	r1, [sp, #16]
   1845c:	movw	r2, #52631	; 0xcd97
   18460:	movt	r2, #1
   18464:	ldr	r3, [sp, #12]
   18468:	ldr	ip, [sp, #8]
   1846c:	str	ip, [sp]
   18470:	bl	10f5c <error@plt>
   18474:	ldr	r0, [sp, #48]	; 0x30
   18478:	ldr	r1, [sp, #52]	; 0x34
   1847c:	sub	sp, fp, #16
   18480:	pop	{r4, r5, r6, sl, fp, pc}
   18484:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18488:	add	fp, sp, #24
   1848c:	sub	sp, sp, #56	; 0x38
   18490:	ldr	r1, [fp, #12]
   18494:	ldr	ip, [fp, #8]
   18498:	ldr	lr, [fp, #24]
   1849c:	ldr	r4, [fp, #20]
   184a0:	ldr	r5, [fp, #16]
   184a4:	str	r0, [fp, #-28]	; 0xffffffe4
   184a8:	str	r3, [sp, #44]	; 0x2c
   184ac:	str	r2, [sp, #40]	; 0x28
   184b0:	str	r1, [sp, #36]	; 0x24
   184b4:	str	ip, [sp, #32]
   184b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   184bc:	ldr	r2, [sp, #40]	; 0x28
   184c0:	ldr	r3, [sp, #44]	; 0x2c
   184c4:	ldr	r1, [sp, #32]
   184c8:	ldr	ip, [sp, #36]	; 0x24
   184cc:	ldr	r6, [fp, #16]
   184d0:	ldr	r7, [fp, #20]
   184d4:	ldr	r8, [fp, #24]
   184d8:	mov	r9, sp
   184dc:	str	r8, [r9, #16]
   184e0:	str	r7, [r9, #12]
   184e4:	str	r6, [r9, #8]
   184e8:	str	ip, [r9, #4]
   184ec:	str	r1, [r9]
   184f0:	mov	r1, #10
   184f4:	str	lr, [sp, #28]
   184f8:	str	r4, [sp, #24]
   184fc:	str	r5, [sp, #20]
   18500:	bl	18294 <__assert_fail@plt+0x71dc>
   18504:	sub	sp, fp, #24
   18508:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1850c:	push	{fp, lr}
   18510:	mov	fp, sp
   18514:	sub	sp, sp, #80	; 0x50
   18518:	ldr	ip, [fp, #8]
   1851c:	str	r0, [fp, #-8]
   18520:	str	r1, [fp, #-12]
   18524:	str	r2, [fp, #-16]
   18528:	str	r3, [fp, #-20]	; 0xffffffec
   1852c:	movw	r0, #0
   18530:	str	r0, [sp, #36]	; 0x24
   18534:	ldr	r1, [fp, #-16]
   18538:	cmp	r0, r1
   1853c:	bgt	18550 <__assert_fail@plt+0x7498>
   18540:	ldr	r0, [fp, #-16]
   18544:	cmp	r0, #36	; 0x24
   18548:	bgt	18550 <__assert_fail@plt+0x7498>
   1854c:	b	18570 <__assert_fail@plt+0x74b8>
   18550:	movw	r0, #53705	; 0xd1c9
   18554:	movt	r0, #1
   18558:	movw	r1, #53743	; 0xd1ef
   1855c:	movt	r1, #1
   18560:	movw	r2, #85	; 0x55
   18564:	movw	r3, #53759	; 0xd1ff
   18568:	movt	r3, #1
   1856c:	bl	110b8 <__assert_fail@plt>
   18570:	ldr	r0, [fp, #-12]
   18574:	movw	r1, #0
   18578:	cmp	r0, r1
   1857c:	beq	1858c <__assert_fail@plt+0x74d4>
   18580:	ldr	r0, [fp, #-12]
   18584:	str	r0, [sp, #12]
   18588:	b	18598 <__assert_fail@plt+0x74e0>
   1858c:	sub	r0, fp, #24
   18590:	str	r0, [sp, #12]
   18594:	b	18598 <__assert_fail@plt+0x74e0>
   18598:	ldr	r0, [sp, #12]
   1859c:	str	r0, [fp, #-28]	; 0xffffffe4
   185a0:	bl	10fec <__errno_location@plt>
   185a4:	movw	r1, #0
   185a8:	str	r1, [r0]
   185ac:	ldr	r0, [fp, #-8]
   185b0:	str	r0, [sp, #32]
   185b4:	ldr	r0, [sp, #32]
   185b8:	ldrb	r0, [r0]
   185bc:	strb	r0, [sp, #31]
   185c0:	bl	10fa4 <__ctype_b_loc@plt>
   185c4:	ldr	r0, [r0]
   185c8:	ldrb	r1, [sp, #31]
   185cc:	mov	r2, r1
   185d0:	add	r0, r0, r1, lsl #1
   185d4:	ldrh	r0, [r0]
   185d8:	and	r0, r0, #8192	; 0x2000
   185dc:	cmp	r0, #0
   185e0:	beq	185fc <__assert_fail@plt+0x7544>
   185e4:	ldr	r0, [sp, #32]
   185e8:	add	r1, r0, #1
   185ec:	str	r1, [sp, #32]
   185f0:	ldrb	r0, [r0, #1]
   185f4:	strb	r0, [sp, #31]
   185f8:	b	185c0 <__assert_fail@plt+0x7508>
   185fc:	ldrb	r0, [sp, #31]
   18600:	cmp	r0, #45	; 0x2d
   18604:	bne	18614 <__assert_fail@plt+0x755c>
   18608:	movw	r0, #4
   1860c:	str	r0, [fp, #-4]
   18610:	b	18b90 <__assert_fail@plt+0x7ad8>
   18614:	ldr	r0, [fp, #-8]
   18618:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1861c:	ldr	r2, [fp, #-16]
   18620:	bl	1101c <strtoumax@plt>
   18624:	str	r1, [sp, #44]	; 0x2c
   18628:	str	r0, [sp, #40]	; 0x28
   1862c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18630:	ldr	r0, [r0]
   18634:	ldr	r1, [fp, #-8]
   18638:	cmp	r0, r1
   1863c:	bne	186a8 <__assert_fail@plt+0x75f0>
   18640:	ldr	r0, [fp, #8]
   18644:	movw	r1, #0
   18648:	cmp	r0, r1
   1864c:	beq	18698 <__assert_fail@plt+0x75e0>
   18650:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18654:	ldr	r0, [r0]
   18658:	ldrb	r0, [r0]
   1865c:	cmp	r0, #0
   18660:	beq	18698 <__assert_fail@plt+0x75e0>
   18664:	ldr	r0, [fp, #8]
   18668:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1866c:	ldr	r1, [r1]
   18670:	ldrb	r1, [r1]
   18674:	bl	10fd4 <strchr@plt>
   18678:	movw	r1, #0
   1867c:	cmp	r0, r1
   18680:	beq	18698 <__assert_fail@plt+0x75e0>
   18684:	mov	r0, #0
   18688:	str	r0, [sp, #44]	; 0x2c
   1868c:	mov	r0, #1
   18690:	str	r0, [sp, #40]	; 0x28
   18694:	b	186a4 <__assert_fail@plt+0x75ec>
   18698:	movw	r0, #4
   1869c:	str	r0, [fp, #-4]
   186a0:	b	18b90 <__assert_fail@plt+0x7ad8>
   186a4:	b	186e0 <__assert_fail@plt+0x7628>
   186a8:	bl	10fec <__errno_location@plt>
   186ac:	ldr	r0, [r0]
   186b0:	cmp	r0, #0
   186b4:	beq	186dc <__assert_fail@plt+0x7624>
   186b8:	bl	10fec <__errno_location@plt>
   186bc:	ldr	r0, [r0]
   186c0:	cmp	r0, #34	; 0x22
   186c4:	beq	186d4 <__assert_fail@plt+0x761c>
   186c8:	movw	r0, #4
   186cc:	str	r0, [fp, #-4]
   186d0:	b	18b90 <__assert_fail@plt+0x7ad8>
   186d4:	movw	r0, #1
   186d8:	str	r0, [sp, #36]	; 0x24
   186dc:	b	186e0 <__assert_fail@plt+0x7628>
   186e0:	ldr	r0, [fp, #8]
   186e4:	movw	r1, #0
   186e8:	cmp	r0, r1
   186ec:	bne	18710 <__assert_fail@plt+0x7658>
   186f0:	ldr	r0, [sp, #40]	; 0x28
   186f4:	ldr	r1, [sp, #44]	; 0x2c
   186f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   186fc:	str	r1, [r2, #4]
   18700:	str	r0, [r2]
   18704:	ldr	r0, [sp, #36]	; 0x24
   18708:	str	r0, [fp, #-4]
   1870c:	b	18b90 <__assert_fail@plt+0x7ad8>
   18710:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18714:	ldr	r0, [r0]
   18718:	ldrb	r0, [r0]
   1871c:	cmp	r0, #0
   18720:	beq	18b74 <__assert_fail@plt+0x7abc>
   18724:	movw	r0, #1024	; 0x400
   18728:	str	r0, [sp, #24]
   1872c:	movw	r0, #1
   18730:	str	r0, [sp, #20]
   18734:	ldr	r0, [fp, #8]
   18738:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1873c:	ldr	r1, [r1]
   18740:	ldrb	r1, [r1]
   18744:	bl	10fd4 <strchr@plt>
   18748:	movw	r1, #0
   1874c:	cmp	r0, r1
   18750:	bne	18778 <__assert_fail@plt+0x76c0>
   18754:	ldr	r0, [sp, #40]	; 0x28
   18758:	ldr	r1, [sp, #44]	; 0x2c
   1875c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18760:	str	r1, [r2, #4]
   18764:	str	r0, [r2]
   18768:	ldr	r0, [sp, #36]	; 0x24
   1876c:	orr	r0, r0, #2
   18770:	str	r0, [fp, #-4]
   18774:	b	18b90 <__assert_fail@plt+0x7ad8>
   18778:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1877c:	ldr	r0, [r0]
   18780:	ldrb	r0, [r0]
   18784:	sub	r0, r0, #69	; 0x45
   18788:	cmp	r0, #47	; 0x2f
   1878c:	str	r0, [sp, #8]
   18790:	bhi	188fc <__assert_fail@plt+0x7844>
   18794:	add	r0, pc, #8
   18798:	ldr	r1, [sp, #8]
   1879c:	ldr	r0, [r0, r1, lsl #2]
   187a0:	mov	pc, r0
   187a4:	andeq	r8, r1, r4, ror #16
   187a8:	strdeq	r8, [r1], -ip
   187ac:	andeq	r8, r1, r4, ror #16
   187b0:	strdeq	r8, [r1], -ip
   187b4:	strdeq	r8, [r1], -ip
   187b8:	strdeq	r8, [r1], -ip
   187bc:	andeq	r8, r1, r4, ror #16
   187c0:	strdeq	r8, [r1], -ip
   187c4:	andeq	r8, r1, r4, ror #16
   187c8:	strdeq	r8, [r1], -ip
   187cc:	strdeq	r8, [r1], -ip
   187d0:	andeq	r8, r1, r4, ror #16
   187d4:	strdeq	r8, [r1], -ip
   187d8:	strdeq	r8, [r1], -ip
   187dc:	strdeq	r8, [r1], -ip
   187e0:	andeq	r8, r1, r4, ror #16
   187e4:	strdeq	r8, [r1], -ip
   187e8:	strdeq	r8, [r1], -ip
   187ec:	strdeq	r8, [r1], -ip
   187f0:	strdeq	r8, [r1], -ip
   187f4:	andeq	r8, r1, r4, ror #16
   187f8:	andeq	r8, r1, r4, ror #16
   187fc:	strdeq	r8, [r1], -ip
   18800:	strdeq	r8, [r1], -ip
   18804:	strdeq	r8, [r1], -ip
   18808:	strdeq	r8, [r1], -ip
   1880c:	strdeq	r8, [r1], -ip
   18810:	strdeq	r8, [r1], -ip
   18814:	strdeq	r8, [r1], -ip
   18818:	strdeq	r8, [r1], -ip
   1881c:	strdeq	r8, [r1], -ip
   18820:	strdeq	r8, [r1], -ip
   18824:	strdeq	r8, [r1], -ip
   18828:	strdeq	r8, [r1], -ip
   1882c:	andeq	r8, r1, r4, ror #16
   18830:	strdeq	r8, [r1], -ip
   18834:	strdeq	r8, [r1], -ip
   18838:	strdeq	r8, [r1], -ip
   1883c:	andeq	r8, r1, r4, ror #16
   18840:	strdeq	r8, [r1], -ip
   18844:	andeq	r8, r1, r4, ror #16
   18848:	strdeq	r8, [r1], -ip
   1884c:	strdeq	r8, [r1], -ip
   18850:	strdeq	r8, [r1], -ip
   18854:	strdeq	r8, [r1], -ip
   18858:	strdeq	r8, [r1], -ip
   1885c:	strdeq	r8, [r1], -ip
   18860:	andeq	r8, r1, r4, ror #16
   18864:	ldr	r0, [fp, #8]
   18868:	movw	r1, #48	; 0x30
   1886c:	bl	10fd4 <strchr@plt>
   18870:	movw	r1, #0
   18874:	cmp	r0, r1
   18878:	beq	188f8 <__assert_fail@plt+0x7840>
   1887c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18880:	ldr	r0, [r0]
   18884:	ldrb	r0, [r0, #1]
   18888:	mov	r1, r0
   1888c:	cmp	r0, #66	; 0x42
   18890:	str	r1, [sp, #4]
   18894:	beq	188e0 <__assert_fail@plt+0x7828>
   18898:	b	1889c <__assert_fail@plt+0x77e4>
   1889c:	ldr	r0, [sp, #4]
   188a0:	cmp	r0, #68	; 0x44
   188a4:	beq	188e0 <__assert_fail@plt+0x7828>
   188a8:	b	188ac <__assert_fail@plt+0x77f4>
   188ac:	ldr	r0, [sp, #4]
   188b0:	cmp	r0, #105	; 0x69
   188b4:	bne	188f4 <__assert_fail@plt+0x783c>
   188b8:	b	188bc <__assert_fail@plt+0x7804>
   188bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   188c0:	ldr	r0, [r0]
   188c4:	ldrb	r0, [r0, #2]
   188c8:	cmp	r0, #66	; 0x42
   188cc:	bne	188dc <__assert_fail@plt+0x7824>
   188d0:	ldr	r0, [sp, #20]
   188d4:	add	r0, r0, #2
   188d8:	str	r0, [sp, #20]
   188dc:	b	188f4 <__assert_fail@plt+0x783c>
   188e0:	movw	r0, #1000	; 0x3e8
   188e4:	str	r0, [sp, #24]
   188e8:	ldr	r0, [sp, #20]
   188ec:	add	r0, r0, #1
   188f0:	str	r0, [sp, #20]
   188f4:	b	188f8 <__assert_fail@plt+0x7840>
   188f8:	b	188fc <__assert_fail@plt+0x7844>
   188fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18900:	ldr	r0, [r0]
   18904:	ldrb	r0, [r0]
   18908:	sub	r0, r0, #66	; 0x42
   1890c:	cmp	r0, #53	; 0x35
   18910:	str	r0, [sp]
   18914:	bhi	18b08 <__assert_fail@plt+0x7a50>
   18918:	add	r0, pc, #8
   1891c:	ldr	r1, [sp]
   18920:	ldr	r0, [r0, r1, lsl #2]
   18924:	mov	pc, r0
   18928:	andeq	r8, r1, r4, lsl sl
   1892c:	andeq	r8, r1, r8, lsl #22
   18930:	andeq	r8, r1, r8, lsl #22
   18934:	andeq	r8, r1, r4, lsr sl
   18938:	andeq	r8, r1, r8, lsl #22
   1893c:	andeq	r8, r1, ip, asr #20
   18940:	andeq	r8, r1, r8, lsl #22
   18944:	andeq	r8, r1, r8, lsl #22
   18948:	andeq	r8, r1, r8, lsl #22
   1894c:	andeq	r8, r1, r4, ror #20
   18950:	andeq	r8, r1, r8, lsl #22
   18954:	andeq	r8, r1, ip, ror sl
   18958:	andeq	r8, r1, r8, lsl #22
   1895c:	andeq	r8, r1, r8, lsl #22
   18960:	muleq	r1, r4, sl
   18964:	andeq	r8, r1, r8, lsl #22
   18968:	andeq	r8, r1, r8, lsl #22
   1896c:	andeq	r8, r1, r8, lsl #22
   18970:	andeq	r8, r1, ip, lsr #21
   18974:	andeq	r8, r1, r8, lsl #22
   18978:	andeq	r8, r1, r8, lsl #22
   1897c:	andeq	r8, r1, r8, lsl #22
   18980:	andeq	r8, r1, r8, lsl #22
   18984:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18988:	strdeq	r8, [r1], -r0
   1898c:	andeq	r8, r1, r8, lsl #22
   18990:	andeq	r8, r1, r8, lsl #22
   18994:	andeq	r8, r1, r8, lsl #22
   18998:	andeq	r8, r1, r8, lsl #22
   1899c:	andeq	r8, r1, r8, lsl #22
   189a0:	andeq	r8, r1, r8, lsl #22
   189a4:	andeq	r8, r1, r8, lsl #22
   189a8:	andeq	r8, r1, r0, lsl #20
   189ac:	andeq	r8, r1, r8, lsr #20
   189b0:	andeq	r8, r1, r8, lsl #22
   189b4:	andeq	r8, r1, r8, lsl #22
   189b8:	andeq	r8, r1, r8, lsl #22
   189bc:	andeq	r8, r1, ip, asr #20
   189c0:	andeq	r8, r1, r8, lsl #22
   189c4:	andeq	r8, r1, r8, lsl #22
   189c8:	andeq	r8, r1, r8, lsl #22
   189cc:	andeq	r8, r1, r4, ror #20
   189d0:	andeq	r8, r1, r8, lsl #22
   189d4:	andeq	r8, r1, ip, ror sl
   189d8:	andeq	r8, r1, r8, lsl #22
   189dc:	andeq	r8, r1, r8, lsl #22
   189e0:	andeq	r8, r1, r8, lsl #22
   189e4:	andeq	r8, r1, r8, lsl #22
   189e8:	andeq	r8, r1, r8, lsl #22
   189ec:	andeq	r8, r1, r8, lsl #22
   189f0:	andeq	r8, r1, ip, lsr #21
   189f4:	andeq	r8, r1, r8, lsl #22
   189f8:	andeq	r8, r1, r8, lsl #22
   189fc:	andeq	r8, r1, r4, asr #21
   18a00:	add	r0, sp, #40	; 0x28
   18a04:	movw	r1, #512	; 0x200
   18a08:	bl	18b9c <__assert_fail@plt+0x7ae4>
   18a0c:	str	r0, [sp, #16]
   18a10:	b	18b2c <__assert_fail@plt+0x7a74>
   18a14:	add	r0, sp, #40	; 0x28
   18a18:	movw	r1, #1024	; 0x400
   18a1c:	bl	18b9c <__assert_fail@plt+0x7ae4>
   18a20:	str	r0, [sp, #16]
   18a24:	b	18b2c <__assert_fail@plt+0x7a74>
   18a28:	movw	r0, #0
   18a2c:	str	r0, [sp, #16]
   18a30:	b	18b2c <__assert_fail@plt+0x7a74>
   18a34:	ldr	r1, [sp, #24]
   18a38:	add	r0, sp, #40	; 0x28
   18a3c:	movw	r2, #6
   18a40:	bl	1a414 <__assert_fail@plt+0x935c>
   18a44:	str	r0, [sp, #16]
   18a48:	b	18b2c <__assert_fail@plt+0x7a74>
   18a4c:	ldr	r1, [sp, #24]
   18a50:	add	r0, sp, #40	; 0x28
   18a54:	movw	r2, #3
   18a58:	bl	1a414 <__assert_fail@plt+0x935c>
   18a5c:	str	r0, [sp, #16]
   18a60:	b	18b2c <__assert_fail@plt+0x7a74>
   18a64:	ldr	r1, [sp, #24]
   18a68:	add	r0, sp, #40	; 0x28
   18a6c:	movw	r2, #1
   18a70:	bl	1a414 <__assert_fail@plt+0x935c>
   18a74:	str	r0, [sp, #16]
   18a78:	b	18b2c <__assert_fail@plt+0x7a74>
   18a7c:	ldr	r1, [sp, #24]
   18a80:	add	r0, sp, #40	; 0x28
   18a84:	movw	r2, #2
   18a88:	bl	1a414 <__assert_fail@plt+0x935c>
   18a8c:	str	r0, [sp, #16]
   18a90:	b	18b2c <__assert_fail@plt+0x7a74>
   18a94:	ldr	r1, [sp, #24]
   18a98:	add	r0, sp, #40	; 0x28
   18a9c:	movw	r2, #5
   18aa0:	bl	1a414 <__assert_fail@plt+0x935c>
   18aa4:	str	r0, [sp, #16]
   18aa8:	b	18b2c <__assert_fail@plt+0x7a74>
   18aac:	ldr	r1, [sp, #24]
   18ab0:	add	r0, sp, #40	; 0x28
   18ab4:	movw	r2, #4
   18ab8:	bl	1a414 <__assert_fail@plt+0x935c>
   18abc:	str	r0, [sp, #16]
   18ac0:	b	18b2c <__assert_fail@plt+0x7a74>
   18ac4:	add	r0, sp, #40	; 0x28
   18ac8:	movw	r1, #2
   18acc:	bl	18b9c <__assert_fail@plt+0x7ae4>
   18ad0:	str	r0, [sp, #16]
   18ad4:	b	18b2c <__assert_fail@plt+0x7a74>
   18ad8:	ldr	r1, [sp, #24]
   18adc:	add	r0, sp, #40	; 0x28
   18ae0:	movw	r2, #8
   18ae4:	bl	1a414 <__assert_fail@plt+0x935c>
   18ae8:	str	r0, [sp, #16]
   18aec:	b	18b2c <__assert_fail@plt+0x7a74>
   18af0:	ldr	r1, [sp, #24]
   18af4:	add	r0, sp, #40	; 0x28
   18af8:	movw	r2, #7
   18afc:	bl	1a414 <__assert_fail@plt+0x935c>
   18b00:	str	r0, [sp, #16]
   18b04:	b	18b2c <__assert_fail@plt+0x7a74>
   18b08:	ldr	r0, [sp, #40]	; 0x28
   18b0c:	ldr	r1, [sp, #44]	; 0x2c
   18b10:	ldr	r2, [fp, #-20]	; 0xffffffec
   18b14:	str	r1, [r2, #4]
   18b18:	str	r0, [r2]
   18b1c:	ldr	r0, [sp, #36]	; 0x24
   18b20:	orr	r0, r0, #2
   18b24:	str	r0, [fp, #-4]
   18b28:	b	18b90 <__assert_fail@plt+0x7ad8>
   18b2c:	ldr	r0, [sp, #16]
   18b30:	ldr	r1, [sp, #36]	; 0x24
   18b34:	orr	r0, r1, r0
   18b38:	str	r0, [sp, #36]	; 0x24
   18b3c:	ldr	r0, [sp, #20]
   18b40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18b44:	ldr	r2, [r1]
   18b48:	add	r0, r2, r0
   18b4c:	str	r0, [r1]
   18b50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18b54:	ldr	r0, [r0]
   18b58:	ldrsb	r0, [r0]
   18b5c:	cmp	r0, #0
   18b60:	beq	18b70 <__assert_fail@plt+0x7ab8>
   18b64:	ldr	r0, [sp, #36]	; 0x24
   18b68:	orr	r0, r0, #2
   18b6c:	str	r0, [sp, #36]	; 0x24
   18b70:	b	18b74 <__assert_fail@plt+0x7abc>
   18b74:	ldr	r0, [sp, #40]	; 0x28
   18b78:	ldr	r1, [sp, #44]	; 0x2c
   18b7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18b80:	str	r1, [r2, #4]
   18b84:	str	r0, [r2]
   18b88:	ldr	r0, [sp, #36]	; 0x24
   18b8c:	str	r0, [fp, #-4]
   18b90:	ldr	r0, [fp, #-4]
   18b94:	mov	sp, fp
   18b98:	pop	{fp, pc}
   18b9c:	push	{fp, lr}
   18ba0:	mov	fp, sp
   18ba4:	sub	sp, sp, #112	; 0x70
   18ba8:	str	r0, [fp, #-8]
   18bac:	str	r1, [fp, #-12]
   18bb0:	b	19060 <__assert_fail@plt+0x7fa8>
   18bb4:	b	18e28 <__assert_fail@plt+0x7d70>
   18bb8:	ldr	r0, [fp, #-12]
   18bbc:	cmp	r0, #0
   18bc0:	bge	18d18 <__assert_fail@plt+0x7c60>
   18bc4:	mov	r0, #1
   18bc8:	cmp	r0, #0
   18bcc:	bne	18c74 <__assert_fail@plt+0x7bbc>
   18bd0:	b	18bd4 <__assert_fail@plt+0x7b1c>
   18bd4:	b	18bd8 <__assert_fail@plt+0x7b20>
   18bd8:	ldr	r0, [fp, #-8]
   18bdc:	ldr	r1, [r0]
   18be0:	ldr	r0, [r0, #4]
   18be4:	ldr	r2, [fp, #-12]
   18be8:	mov	r3, #127	; 0x7f
   18bec:	sdiv	r2, r3, r2
   18bf0:	subs	r1, r1, r2
   18bf4:	sbcs	r0, r0, r2, asr #31
   18bf8:	bcc	18de0 <__assert_fail@plt+0x7d28>
   18bfc:	b	18e04 <__assert_fail@plt+0x7d4c>
   18c00:	b	18c04 <__assert_fail@plt+0x7b4c>
   18c04:	ldr	r0, [pc, #4076]	; 19bf8 <__assert_fail@plt+0x8b40>
   18c08:	ldr	r1, [fp, #-12]
   18c0c:	cmp	r1, r0
   18c10:	blt	18c28 <__assert_fail@plt+0x7b70>
   18c14:	b	18c34 <__assert_fail@plt+0x7b7c>
   18c18:	ldr	r0, [fp, #-12]
   18c1c:	movw	r1, #0
   18c20:	cmp	r1, r0
   18c24:	bge	18c34 <__assert_fail@plt+0x7b7c>
   18c28:	movw	r0, #0
   18c2c:	str	r0, [fp, #-28]	; 0xffffffe4
   18c30:	b	18c4c <__assert_fail@plt+0x7b94>
   18c34:	ldr	r0, [fp, #-12]
   18c38:	movw	r1, #0
   18c3c:	sub	r0, r1, r0
   18c40:	movw	r1, #127	; 0x7f
   18c44:	sdiv	r0, r1, r0
   18c48:	str	r0, [fp, #-28]	; 0xffffffe4
   18c4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18c50:	ldr	r1, [fp, #-8]
   18c54:	ldr	r2, [r1]
   18c58:	ldr	r1, [r1, #4]
   18c5c:	mvn	r1, r1
   18c60:	mvn	r2, r2
   18c64:	subs	r2, r2, r0
   18c68:	sbcs	r0, r1, r0, asr #31
   18c6c:	bcs	18de0 <__assert_fail@plt+0x7d28>
   18c70:	b	18e04 <__assert_fail@plt+0x7d4c>
   18c74:	b	18c78 <__assert_fail@plt+0x7bc0>
   18c78:	b	18cf0 <__assert_fail@plt+0x7c38>
   18c7c:	b	18cf0 <__assert_fail@plt+0x7c38>
   18c80:	ldr	r0, [fp, #-12]
   18c84:	cmn	r0, #1
   18c88:	bne	18cf0 <__assert_fail@plt+0x7c38>
   18c8c:	b	18cb0 <__assert_fail@plt+0x7bf8>
   18c90:	ldr	r0, [fp, #-8]
   18c94:	ldr	r1, [r0]
   18c98:	ldr	r0, [r0, #4]
   18c9c:	eor	r1, r1, #128	; 0x80
   18ca0:	orr	r0, r1, r0
   18ca4:	cmp	r0, #0
   18ca8:	bne	18de0 <__assert_fail@plt+0x7d28>
   18cac:	b	18e04 <__assert_fail@plt+0x7d4c>
   18cb0:	ldr	r0, [fp, #-8]
   18cb4:	ldr	r1, [r0]
   18cb8:	ldr	r0, [r0, #4]
   18cbc:	orr	r0, r1, r0
   18cc0:	cmp	r0, #0
   18cc4:	beq	18e04 <__assert_fail@plt+0x7d4c>
   18cc8:	b	18ccc <__assert_fail@plt+0x7c14>
   18ccc:	ldr	r0, [fp, #-8]
   18cd0:	ldr	r1, [r0]
   18cd4:	ldr	r0, [r0, #4]
   18cd8:	subs	r1, r1, #1
   18cdc:	sbc	r0, r0, #0
   18ce0:	rsbs	r1, r1, #127	; 0x7f
   18ce4:	rscs	r0, r0, #0
   18ce8:	bcc	18de0 <__assert_fail@plt+0x7d28>
   18cec:	b	18e04 <__assert_fail@plt+0x7d4c>
   18cf0:	ldr	r0, [fp, #-12]
   18cf4:	mvn	r1, #127	; 0x7f
   18cf8:	sdiv	r0, r1, r0
   18cfc:	ldr	r1, [fp, #-8]
   18d00:	ldr	r2, [r1]
   18d04:	ldr	r1, [r1, #4]
   18d08:	subs	r2, r0, r2
   18d0c:	rscs	r0, r1, r0, asr #31
   18d10:	bcc	18de0 <__assert_fail@plt+0x7d28>
   18d14:	b	18e04 <__assert_fail@plt+0x7d4c>
   18d18:	ldr	r0, [fp, #-12]
   18d1c:	cmp	r0, #0
   18d20:	bne	18d28 <__assert_fail@plt+0x7c70>
   18d24:	b	18e04 <__assert_fail@plt+0x7d4c>
   18d28:	mov	r0, #1
   18d2c:	cmp	r0, #0
   18d30:	bne	18db8 <__assert_fail@plt+0x7d00>
   18d34:	b	18d38 <__assert_fail@plt+0x7c80>
   18d38:	ldr	r0, [fp, #-8]
   18d3c:	ldr	r1, [r0]
   18d40:	ldr	r0, [r0, #4]
   18d44:	and	r0, r1, r0
   18d48:	cmn	r0, #1
   18d4c:	bne	18d8c <__assert_fail@plt+0x7cd4>
   18d50:	b	18d54 <__assert_fail@plt+0x7c9c>
   18d54:	b	18d58 <__assert_fail@plt+0x7ca0>
   18d58:	ldr	r0, [fp, #-12]
   18d5c:	mvn	r1, #127	; 0x7f
   18d60:	add	r0, r0, r1
   18d64:	movw	r1, #0
   18d68:	cmp	r1, r0
   18d6c:	blt	18de0 <__assert_fail@plt+0x7d28>
   18d70:	b	18e04 <__assert_fail@plt+0x7d4c>
   18d74:	ldr	r0, [fp, #-12]
   18d78:	sub	r0, r0, #1
   18d7c:	movw	r1, #127	; 0x7f
   18d80:	cmp	r1, r0
   18d84:	blt	18de0 <__assert_fail@plt+0x7d28>
   18d88:	b	18e04 <__assert_fail@plt+0x7d4c>
   18d8c:	ldr	r0, [fp, #-8]
   18d90:	ldr	r2, [r0]
   18d94:	ldr	r3, [r0, #4]
   18d98:	mvn	r0, #127	; 0x7f
   18d9c:	mvn	r1, #0
   18da0:	bl	1c718 <__assert_fail@plt+0xb660>
   18da4:	ldr	r2, [fp, #-12]
   18da8:	subs	r0, r0, r2
   18dac:	sbcs	r1, r1, r2, asr #31
   18db0:	bcc	18de0 <__assert_fail@plt+0x7d28>
   18db4:	b	18e04 <__assert_fail@plt+0x7d4c>
   18db8:	ldr	r0, [fp, #-12]
   18dbc:	mov	r1, #127	; 0x7f
   18dc0:	sdiv	r0, r1, r0
   18dc4:	ldr	r1, [fp, #-8]
   18dc8:	ldr	r2, [r1]
   18dcc:	ldr	r1, [r1, #4]
   18dd0:	subs	r2, r0, r2
   18dd4:	rscs	r0, r1, r0, asr #31
   18dd8:	bcs	18e04 <__assert_fail@plt+0x7d4c>
   18ddc:	b	18de0 <__assert_fail@plt+0x7d28>
   18de0:	ldr	r0, [fp, #-8]
   18de4:	ldr	r0, [r0]
   18de8:	ldr	r1, [fp, #-12]
   18dec:	mul	r0, r0, r1
   18df0:	sxtb	r0, r0
   18df4:	asr	r1, r0, #31
   18df8:	str	r0, [fp, #-24]	; 0xffffffe8
   18dfc:	str	r1, [fp, #-20]	; 0xffffffec
   18e00:	b	1a3c8 <__assert_fail@plt+0x9310>
   18e04:	ldr	r0, [fp, #-8]
   18e08:	ldr	r0, [r0]
   18e0c:	ldr	r1, [fp, #-12]
   18e10:	mul	r0, r0, r1
   18e14:	sxtb	r0, r0
   18e18:	asr	r1, r0, #31
   18e1c:	str	r0, [fp, #-24]	; 0xffffffe8
   18e20:	str	r1, [fp, #-20]	; 0xffffffec
   18e24:	b	1a3e4 <__assert_fail@plt+0x932c>
   18e28:	ldr	r0, [fp, #-12]
   18e2c:	cmp	r0, #0
   18e30:	bge	18f64 <__assert_fail@plt+0x7eac>
   18e34:	mov	r0, #1
   18e38:	cmp	r0, #0
   18e3c:	bne	18ee4 <__assert_fail@plt+0x7e2c>
   18e40:	b	18e44 <__assert_fail@plt+0x7d8c>
   18e44:	b	18e48 <__assert_fail@plt+0x7d90>
   18e48:	ldr	r0, [fp, #-8]
   18e4c:	ldr	r1, [r0]
   18e50:	ldr	r0, [r0, #4]
   18e54:	ldr	r2, [fp, #-12]
   18e58:	mov	r3, #255	; 0xff
   18e5c:	sdiv	r2, r3, r2
   18e60:	subs	r1, r1, r2
   18e64:	sbcs	r0, r0, r2, asr #31
   18e68:	bcc	19018 <__assert_fail@plt+0x7f60>
   18e6c:	b	1903c <__assert_fail@plt+0x7f84>
   18e70:	b	18e74 <__assert_fail@plt+0x7dbc>
   18e74:	ldr	r0, [pc, #3452]	; 19bf8 <__assert_fail@plt+0x8b40>
   18e78:	ldr	r1, [fp, #-12]
   18e7c:	cmp	r1, r0
   18e80:	blt	18e98 <__assert_fail@plt+0x7de0>
   18e84:	b	18ea4 <__assert_fail@plt+0x7dec>
   18e88:	ldr	r0, [fp, #-12]
   18e8c:	movw	r1, #0
   18e90:	cmp	r1, r0
   18e94:	bge	18ea4 <__assert_fail@plt+0x7dec>
   18e98:	movw	r0, #0
   18e9c:	str	r0, [fp, #-32]	; 0xffffffe0
   18ea0:	b	18ebc <__assert_fail@plt+0x7e04>
   18ea4:	ldr	r0, [fp, #-12]
   18ea8:	movw	r1, #0
   18eac:	sub	r0, r1, r0
   18eb0:	movw	r1, #255	; 0xff
   18eb4:	sdiv	r0, r1, r0
   18eb8:	str	r0, [fp, #-32]	; 0xffffffe0
   18ebc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ec0:	ldr	r1, [fp, #-8]
   18ec4:	ldr	r2, [r1]
   18ec8:	ldr	r1, [r1, #4]
   18ecc:	mvn	r1, r1
   18ed0:	mvn	r2, r2
   18ed4:	subs	r2, r2, r0
   18ed8:	sbcs	r0, r1, r0, asr #31
   18edc:	bcs	19018 <__assert_fail@plt+0x7f60>
   18ee0:	b	1903c <__assert_fail@plt+0x7f84>
   18ee4:	b	18ee8 <__assert_fail@plt+0x7e30>
   18ee8:	b	18f48 <__assert_fail@plt+0x7e90>
   18eec:	b	18f48 <__assert_fail@plt+0x7e90>
   18ef0:	ldr	r0, [fp, #-12]
   18ef4:	cmn	r0, #1
   18ef8:	bne	18f48 <__assert_fail@plt+0x7e90>
   18efc:	b	18f1c <__assert_fail@plt+0x7e64>
   18f00:	ldr	r0, [fp, #-8]
   18f04:	ldr	r1, [r0]
   18f08:	ldr	r0, [r0, #4]
   18f0c:	orr	r0, r1, r0
   18f10:	cmp	r0, #0
   18f14:	bne	19018 <__assert_fail@plt+0x7f60>
   18f18:	b	1903c <__assert_fail@plt+0x7f84>
   18f1c:	ldr	r0, [fp, #-8]
   18f20:	ldr	r1, [r0]
   18f24:	ldr	r0, [r0, #4]
   18f28:	orr	r0, r1, r0
   18f2c:	cmp	r0, #0
   18f30:	beq	1903c <__assert_fail@plt+0x7f84>
   18f34:	b	18f38 <__assert_fail@plt+0x7e80>
   18f38:	mov	r0, #0
   18f3c:	cmp	r0, #0
   18f40:	bne	19018 <__assert_fail@plt+0x7f60>
   18f44:	b	1903c <__assert_fail@plt+0x7f84>
   18f48:	ldr	r0, [fp, #-8]
   18f4c:	ldr	r1, [r0]
   18f50:	ldr	r0, [r0, #4]
   18f54:	orr	r0, r1, r0
   18f58:	cmp	r0, #0
   18f5c:	bne	19018 <__assert_fail@plt+0x7f60>
   18f60:	b	1903c <__assert_fail@plt+0x7f84>
   18f64:	ldr	r0, [fp, #-12]
   18f68:	cmp	r0, #0
   18f6c:	bne	18f74 <__assert_fail@plt+0x7ebc>
   18f70:	b	1903c <__assert_fail@plt+0x7f84>
   18f74:	mov	r0, #1
   18f78:	cmp	r0, #0
   18f7c:	bne	18ff0 <__assert_fail@plt+0x7f38>
   18f80:	b	18f84 <__assert_fail@plt+0x7ecc>
   18f84:	b	18f8c <__assert_fail@plt+0x7ed4>
   18f88:	b	18f90 <__assert_fail@plt+0x7ed8>
   18f8c:	b	18fe0 <__assert_fail@plt+0x7f28>
   18f90:	ldr	r0, [fp, #-8]
   18f94:	ldr	r1, [r0]
   18f98:	ldr	r0, [r0, #4]
   18f9c:	and	r0, r1, r0
   18fa0:	cmn	r0, #1
   18fa4:	bne	18fe0 <__assert_fail@plt+0x7f28>
   18fa8:	b	18fac <__assert_fail@plt+0x7ef4>
   18fac:	b	18fb0 <__assert_fail@plt+0x7ef8>
   18fb0:	ldr	r0, [fp, #-12]
   18fb4:	add	r0, r0, #0
   18fb8:	movw	r1, #0
   18fbc:	cmp	r1, r0
   18fc0:	blt	19018 <__assert_fail@plt+0x7f60>
   18fc4:	b	1903c <__assert_fail@plt+0x7f84>
   18fc8:	ldr	r0, [fp, #-12]
   18fcc:	sub	r0, r0, #1
   18fd0:	mvn	r1, #0
   18fd4:	cmp	r1, r0
   18fd8:	blt	19018 <__assert_fail@plt+0x7f60>
   18fdc:	b	1903c <__assert_fail@plt+0x7f84>
   18fe0:	ldr	r0, [fp, #-12]
   18fe4:	cmp	r0, #0
   18fe8:	bne	19018 <__assert_fail@plt+0x7f60>
   18fec:	b	1903c <__assert_fail@plt+0x7f84>
   18ff0:	ldr	r0, [fp, #-12]
   18ff4:	mov	r1, #255	; 0xff
   18ff8:	sdiv	r0, r1, r0
   18ffc:	ldr	r1, [fp, #-8]
   19000:	ldr	r2, [r1]
   19004:	ldr	r1, [r1, #4]
   19008:	subs	r2, r0, r2
   1900c:	rscs	r0, r1, r0, asr #31
   19010:	bcs	1903c <__assert_fail@plt+0x7f84>
   19014:	b	19018 <__assert_fail@plt+0x7f60>
   19018:	ldr	r0, [fp, #-8]
   1901c:	ldr	r0, [r0]
   19020:	ldr	r1, [fp, #-12]
   19024:	mul	r0, r0, r1
   19028:	uxtb	r0, r0
   1902c:	mov	r1, #0
   19030:	str	r1, [fp, #-20]	; 0xffffffec
   19034:	str	r0, [fp, #-24]	; 0xffffffe8
   19038:	b	1a3c8 <__assert_fail@plt+0x9310>
   1903c:	ldr	r0, [fp, #-8]
   19040:	ldr	r0, [r0]
   19044:	ldr	r1, [fp, #-12]
   19048:	mul	r0, r0, r1
   1904c:	uxtb	r0, r0
   19050:	mov	r1, #0
   19054:	str	r1, [fp, #-20]	; 0xffffffec
   19058:	str	r0, [fp, #-24]	; 0xffffffe8
   1905c:	b	1a3e4 <__assert_fail@plt+0x932c>
   19060:	b	19520 <__assert_fail@plt+0x8468>
   19064:	b	192e8 <__assert_fail@plt+0x8230>
   19068:	ldr	r0, [fp, #-12]
   1906c:	cmp	r0, #0
   19070:	bge	191d4 <__assert_fail@plt+0x811c>
   19074:	mov	r0, #1
   19078:	cmp	r0, #0
   1907c:	bne	19124 <__assert_fail@plt+0x806c>
   19080:	b	19084 <__assert_fail@plt+0x7fcc>
   19084:	b	19088 <__assert_fail@plt+0x7fd0>
   19088:	ldr	r0, [fp, #-8]
   1908c:	ldr	r1, [r0]
   19090:	ldr	r0, [r0, #4]
   19094:	ldr	r2, [fp, #-12]
   19098:	movw	r3, #32767	; 0x7fff
   1909c:	sdiv	r2, r3, r2
   190a0:	subs	r1, r1, r2
   190a4:	sbcs	r0, r0, r2, asr #31
   190a8:	bcc	192a0 <__assert_fail@plt+0x81e8>
   190ac:	b	192c4 <__assert_fail@plt+0x820c>
   190b0:	b	190b4 <__assert_fail@plt+0x7ffc>
   190b4:	ldr	r0, [pc, #2876]	; 19bf8 <__assert_fail@plt+0x8b40>
   190b8:	ldr	r1, [fp, #-12]
   190bc:	cmp	r1, r0
   190c0:	blt	190d8 <__assert_fail@plt+0x8020>
   190c4:	b	190e4 <__assert_fail@plt+0x802c>
   190c8:	ldr	r0, [fp, #-12]
   190cc:	movw	r1, #0
   190d0:	cmp	r1, r0
   190d4:	bge	190e4 <__assert_fail@plt+0x802c>
   190d8:	movw	r0, #0
   190dc:	str	r0, [fp, #-36]	; 0xffffffdc
   190e0:	b	190fc <__assert_fail@plt+0x8044>
   190e4:	ldr	r0, [fp, #-12]
   190e8:	movw	r1, #0
   190ec:	sub	r0, r1, r0
   190f0:	movw	r1, #32767	; 0x7fff
   190f4:	sdiv	r0, r1, r0
   190f8:	str	r0, [fp, #-36]	; 0xffffffdc
   190fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19100:	ldr	r1, [fp, #-8]
   19104:	ldr	r2, [r1]
   19108:	ldr	r1, [r1, #4]
   1910c:	mvn	r1, r1
   19110:	mvn	r2, r2
   19114:	subs	r2, r2, r0
   19118:	sbcs	r0, r1, r0, asr #31
   1911c:	bcs	192a0 <__assert_fail@plt+0x81e8>
   19120:	b	192c4 <__assert_fail@plt+0x820c>
   19124:	b	19128 <__assert_fail@plt+0x8070>
   19128:	b	191a8 <__assert_fail@plt+0x80f0>
   1912c:	b	191a8 <__assert_fail@plt+0x80f0>
   19130:	ldr	r0, [fp, #-12]
   19134:	cmn	r0, #1
   19138:	bne	191a8 <__assert_fail@plt+0x80f0>
   1913c:	b	19160 <__assert_fail@plt+0x80a8>
   19140:	ldr	r0, [fp, #-8]
   19144:	ldr	r1, [r0]
   19148:	ldr	r0, [r0, #4]
   1914c:	eor	r1, r1, #32768	; 0x8000
   19150:	orr	r0, r1, r0
   19154:	cmp	r0, #0
   19158:	bne	192a0 <__assert_fail@plt+0x81e8>
   1915c:	b	192c4 <__assert_fail@plt+0x820c>
   19160:	ldr	r0, [fp, #-8]
   19164:	ldr	r1, [r0]
   19168:	ldr	r0, [r0, #4]
   1916c:	orr	r0, r1, r0
   19170:	cmp	r0, #0
   19174:	beq	192c4 <__assert_fail@plt+0x820c>
   19178:	b	1917c <__assert_fail@plt+0x80c4>
   1917c:	ldr	r0, [fp, #-8]
   19180:	ldr	r1, [r0]
   19184:	ldr	r0, [r0, #4]
   19188:	subs	r1, r1, #1
   1918c:	sbc	r0, r0, #0
   19190:	lsr	r1, r1, #15
   19194:	orr	r1, r1, r0, lsl #17
   19198:	orr	r0, r1, r0, lsr #15
   1919c:	cmp	r0, #0
   191a0:	bne	192a0 <__assert_fail@plt+0x81e8>
   191a4:	b	192c4 <__assert_fail@plt+0x820c>
   191a8:	ldr	r0, [fp, #-12]
   191ac:	movw	r1, #32768	; 0x8000
   191b0:	movt	r1, #65535	; 0xffff
   191b4:	sdiv	r0, r1, r0
   191b8:	ldr	r1, [fp, #-8]
   191bc:	ldr	r2, [r1]
   191c0:	ldr	r1, [r1, #4]
   191c4:	subs	r2, r0, r2
   191c8:	rscs	r0, r1, r0, asr #31
   191cc:	bcc	192a0 <__assert_fail@plt+0x81e8>
   191d0:	b	192c4 <__assert_fail@plt+0x820c>
   191d4:	ldr	r0, [fp, #-12]
   191d8:	cmp	r0, #0
   191dc:	bne	191e4 <__assert_fail@plt+0x812c>
   191e0:	b	192c4 <__assert_fail@plt+0x820c>
   191e4:	mov	r0, #1
   191e8:	cmp	r0, #0
   191ec:	bne	19278 <__assert_fail@plt+0x81c0>
   191f0:	b	191f4 <__assert_fail@plt+0x813c>
   191f4:	ldr	r0, [fp, #-8]
   191f8:	ldr	r1, [r0]
   191fc:	ldr	r0, [r0, #4]
   19200:	and	r0, r1, r0
   19204:	cmn	r0, #1
   19208:	bne	19248 <__assert_fail@plt+0x8190>
   1920c:	b	19210 <__assert_fail@plt+0x8158>
   19210:	b	19214 <__assert_fail@plt+0x815c>
   19214:	ldr	r0, [pc, #4020]	; 1a1d0 <__assert_fail@plt+0x9118>
   19218:	ldr	r1, [fp, #-12]
   1921c:	add	r0, r1, r0
   19220:	movw	r1, #0
   19224:	cmp	r1, r0
   19228:	blt	192a0 <__assert_fail@plt+0x81e8>
   1922c:	b	192c4 <__assert_fail@plt+0x820c>
   19230:	ldr	r0, [fp, #-12]
   19234:	sub	r0, r0, #1
   19238:	movw	r1, #32767	; 0x7fff
   1923c:	cmp	r1, r0
   19240:	blt	192a0 <__assert_fail@plt+0x81e8>
   19244:	b	192c4 <__assert_fail@plt+0x820c>
   19248:	ldr	r0, [fp, #-8]
   1924c:	ldr	r2, [r0]
   19250:	ldr	r3, [r0, #4]
   19254:	movw	r0, #32768	; 0x8000
   19258:	movt	r0, #65535	; 0xffff
   1925c:	mvn	r1, #0
   19260:	bl	1c718 <__assert_fail@plt+0xb660>
   19264:	ldr	r2, [fp, #-12]
   19268:	subs	r0, r0, r2
   1926c:	sbcs	r1, r1, r2, asr #31
   19270:	bcc	192a0 <__assert_fail@plt+0x81e8>
   19274:	b	192c4 <__assert_fail@plt+0x820c>
   19278:	ldr	r0, [fp, #-12]
   1927c:	movw	r1, #32767	; 0x7fff
   19280:	sdiv	r0, r1, r0
   19284:	ldr	r1, [fp, #-8]
   19288:	ldr	r2, [r1]
   1928c:	ldr	r1, [r1, #4]
   19290:	subs	r2, r0, r2
   19294:	rscs	r0, r1, r0, asr #31
   19298:	bcs	192c4 <__assert_fail@plt+0x820c>
   1929c:	b	192a0 <__assert_fail@plt+0x81e8>
   192a0:	ldr	r0, [fp, #-8]
   192a4:	ldr	r0, [r0]
   192a8:	ldr	r1, [fp, #-12]
   192ac:	mul	r0, r0, r1
   192b0:	sxth	r0, r0
   192b4:	asr	r1, r0, #31
   192b8:	str	r0, [fp, #-24]	; 0xffffffe8
   192bc:	str	r1, [fp, #-20]	; 0xffffffec
   192c0:	b	1a3c8 <__assert_fail@plt+0x9310>
   192c4:	ldr	r0, [fp, #-8]
   192c8:	ldr	r0, [r0]
   192cc:	ldr	r1, [fp, #-12]
   192d0:	mul	r0, r0, r1
   192d4:	sxth	r0, r0
   192d8:	asr	r1, r0, #31
   192dc:	str	r0, [fp, #-24]	; 0xffffffe8
   192e0:	str	r1, [fp, #-20]	; 0xffffffec
   192e4:	b	1a3e4 <__assert_fail@plt+0x932c>
   192e8:	ldr	r0, [fp, #-12]
   192ec:	cmp	r0, #0
   192f0:	bge	19424 <__assert_fail@plt+0x836c>
   192f4:	mov	r0, #1
   192f8:	cmp	r0, #0
   192fc:	bne	193a4 <__assert_fail@plt+0x82ec>
   19300:	b	19304 <__assert_fail@plt+0x824c>
   19304:	b	19308 <__assert_fail@plt+0x8250>
   19308:	ldr	r0, [fp, #-8]
   1930c:	ldr	r1, [r0]
   19310:	ldr	r0, [r0, #4]
   19314:	ldr	r2, [fp, #-12]
   19318:	movw	r3, #65535	; 0xffff
   1931c:	sdiv	r2, r3, r2
   19320:	subs	r1, r1, r2
   19324:	sbcs	r0, r0, r2, asr #31
   19328:	bcc	194d8 <__assert_fail@plt+0x8420>
   1932c:	b	194fc <__assert_fail@plt+0x8444>
   19330:	b	19334 <__assert_fail@plt+0x827c>
   19334:	ldr	r0, [pc, #2236]	; 19bf8 <__assert_fail@plt+0x8b40>
   19338:	ldr	r1, [fp, #-12]
   1933c:	cmp	r1, r0
   19340:	blt	19358 <__assert_fail@plt+0x82a0>
   19344:	b	19364 <__assert_fail@plt+0x82ac>
   19348:	ldr	r0, [fp, #-12]
   1934c:	movw	r1, #0
   19350:	cmp	r1, r0
   19354:	bge	19364 <__assert_fail@plt+0x82ac>
   19358:	movw	r0, #0
   1935c:	str	r0, [fp, #-40]	; 0xffffffd8
   19360:	b	1937c <__assert_fail@plt+0x82c4>
   19364:	ldr	r0, [fp, #-12]
   19368:	movw	r1, #0
   1936c:	sub	r0, r1, r0
   19370:	movw	r1, #65535	; 0xffff
   19374:	sdiv	r0, r1, r0
   19378:	str	r0, [fp, #-40]	; 0xffffffd8
   1937c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19380:	ldr	r1, [fp, #-8]
   19384:	ldr	r2, [r1]
   19388:	ldr	r1, [r1, #4]
   1938c:	mvn	r1, r1
   19390:	mvn	r2, r2
   19394:	subs	r2, r2, r0
   19398:	sbcs	r0, r1, r0, asr #31
   1939c:	bcs	194d8 <__assert_fail@plt+0x8420>
   193a0:	b	194fc <__assert_fail@plt+0x8444>
   193a4:	b	193a8 <__assert_fail@plt+0x82f0>
   193a8:	b	19408 <__assert_fail@plt+0x8350>
   193ac:	b	19408 <__assert_fail@plt+0x8350>
   193b0:	ldr	r0, [fp, #-12]
   193b4:	cmn	r0, #1
   193b8:	bne	19408 <__assert_fail@plt+0x8350>
   193bc:	b	193dc <__assert_fail@plt+0x8324>
   193c0:	ldr	r0, [fp, #-8]
   193c4:	ldr	r1, [r0]
   193c8:	ldr	r0, [r0, #4]
   193cc:	orr	r0, r1, r0
   193d0:	cmp	r0, #0
   193d4:	bne	194d8 <__assert_fail@plt+0x8420>
   193d8:	b	194fc <__assert_fail@plt+0x8444>
   193dc:	ldr	r0, [fp, #-8]
   193e0:	ldr	r1, [r0]
   193e4:	ldr	r0, [r0, #4]
   193e8:	orr	r0, r1, r0
   193ec:	cmp	r0, #0
   193f0:	beq	194fc <__assert_fail@plt+0x8444>
   193f4:	b	193f8 <__assert_fail@plt+0x8340>
   193f8:	mov	r0, #0
   193fc:	cmp	r0, #0
   19400:	bne	194d8 <__assert_fail@plt+0x8420>
   19404:	b	194fc <__assert_fail@plt+0x8444>
   19408:	ldr	r0, [fp, #-8]
   1940c:	ldr	r1, [r0]
   19410:	ldr	r0, [r0, #4]
   19414:	orr	r0, r1, r0
   19418:	cmp	r0, #0
   1941c:	bne	194d8 <__assert_fail@plt+0x8420>
   19420:	b	194fc <__assert_fail@plt+0x8444>
   19424:	ldr	r0, [fp, #-12]
   19428:	cmp	r0, #0
   1942c:	bne	19434 <__assert_fail@plt+0x837c>
   19430:	b	194fc <__assert_fail@plt+0x8444>
   19434:	mov	r0, #1
   19438:	cmp	r0, #0
   1943c:	bne	194b0 <__assert_fail@plt+0x83f8>
   19440:	b	19444 <__assert_fail@plt+0x838c>
   19444:	b	1944c <__assert_fail@plt+0x8394>
   19448:	b	19450 <__assert_fail@plt+0x8398>
   1944c:	b	194a0 <__assert_fail@plt+0x83e8>
   19450:	ldr	r0, [fp, #-8]
   19454:	ldr	r1, [r0]
   19458:	ldr	r0, [r0, #4]
   1945c:	and	r0, r1, r0
   19460:	cmn	r0, #1
   19464:	bne	194a0 <__assert_fail@plt+0x83e8>
   19468:	b	1946c <__assert_fail@plt+0x83b4>
   1946c:	b	19470 <__assert_fail@plt+0x83b8>
   19470:	ldr	r0, [fp, #-12]
   19474:	add	r0, r0, #0
   19478:	movw	r1, #0
   1947c:	cmp	r1, r0
   19480:	blt	194d8 <__assert_fail@plt+0x8420>
   19484:	b	194fc <__assert_fail@plt+0x8444>
   19488:	ldr	r0, [fp, #-12]
   1948c:	sub	r0, r0, #1
   19490:	mvn	r1, #0
   19494:	cmp	r1, r0
   19498:	blt	194d8 <__assert_fail@plt+0x8420>
   1949c:	b	194fc <__assert_fail@plt+0x8444>
   194a0:	ldr	r0, [fp, #-12]
   194a4:	cmp	r0, #0
   194a8:	bne	194d8 <__assert_fail@plt+0x8420>
   194ac:	b	194fc <__assert_fail@plt+0x8444>
   194b0:	ldr	r0, [fp, #-12]
   194b4:	movw	r1, #65535	; 0xffff
   194b8:	sdiv	r0, r1, r0
   194bc:	ldr	r1, [fp, #-8]
   194c0:	ldr	r2, [r1]
   194c4:	ldr	r1, [r1, #4]
   194c8:	subs	r2, r0, r2
   194cc:	rscs	r0, r1, r0, asr #31
   194d0:	bcs	194fc <__assert_fail@plt+0x8444>
   194d4:	b	194d8 <__assert_fail@plt+0x8420>
   194d8:	ldr	r0, [fp, #-8]
   194dc:	ldr	r0, [r0]
   194e0:	ldr	r1, [fp, #-12]
   194e4:	mul	r0, r0, r1
   194e8:	uxth	r0, r0
   194ec:	mov	r1, #0
   194f0:	str	r1, [fp, #-20]	; 0xffffffec
   194f4:	str	r0, [fp, #-24]	; 0xffffffe8
   194f8:	b	1a3c8 <__assert_fail@plt+0x9310>
   194fc:	ldr	r0, [fp, #-8]
   19500:	ldr	r0, [r0]
   19504:	ldr	r1, [fp, #-12]
   19508:	mul	r0, r0, r1
   1950c:	uxth	r0, r0
   19510:	mov	r1, #0
   19514:	str	r1, [fp, #-20]	; 0xffffffec
   19518:	str	r0, [fp, #-24]	; 0xffffffe8
   1951c:	b	1a3e4 <__assert_fail@plt+0x932c>
   19520:	b	199b4 <__assert_fail@plt+0x88fc>
   19524:	b	19784 <__assert_fail@plt+0x86cc>
   19528:	ldr	r0, [fp, #-12]
   1952c:	cmp	r0, #0
   19530:	bge	19680 <__assert_fail@plt+0x85c8>
   19534:	mov	r0, #1
   19538:	cmp	r0, #0
   1953c:	bne	195e4 <__assert_fail@plt+0x852c>
   19540:	b	19544 <__assert_fail@plt+0x848c>
   19544:	b	19548 <__assert_fail@plt+0x8490>
   19548:	ldr	r0, [fp, #-8]
   1954c:	ldr	r1, [r0]
   19550:	ldr	r0, [r0, #4]
   19554:	ldr	r2, [fp, #-12]
   19558:	mvn	r3, #-2147483648	; 0x80000000
   1955c:	sdiv	r2, r3, r2
   19560:	subs	r1, r1, r2
   19564:	sbcs	r0, r0, r2, asr #31
   19568:	bcc	19744 <__assert_fail@plt+0x868c>
   1956c:	b	19764 <__assert_fail@plt+0x86ac>
   19570:	b	19574 <__assert_fail@plt+0x84bc>
   19574:	ldr	r0, [pc, #3728]	; 1a40c <__assert_fail@plt+0x9354>
   19578:	ldr	r1, [fp, #-12]
   1957c:	cmp	r1, r0
   19580:	blt	19598 <__assert_fail@plt+0x84e0>
   19584:	b	195a4 <__assert_fail@plt+0x84ec>
   19588:	ldr	r0, [fp, #-12]
   1958c:	movw	r1, #0
   19590:	cmp	r1, r0
   19594:	bge	195a4 <__assert_fail@plt+0x84ec>
   19598:	movw	r0, #0
   1959c:	str	r0, [fp, #-44]	; 0xffffffd4
   195a0:	b	195bc <__assert_fail@plt+0x8504>
   195a4:	ldr	r0, [pc, #3684]	; 1a410 <__assert_fail@plt+0x9358>
   195a8:	ldr	r1, [fp, #-12]
   195ac:	movw	r2, #0
   195b0:	sub	r1, r2, r1
   195b4:	sdiv	r0, r0, r1
   195b8:	str	r0, [fp, #-44]	; 0xffffffd4
   195bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   195c0:	ldr	r1, [fp, #-8]
   195c4:	ldr	r2, [r1]
   195c8:	ldr	r1, [r1, #4]
   195cc:	mvn	r1, r1
   195d0:	mvn	r2, r2
   195d4:	subs	r2, r2, r0
   195d8:	sbcs	r0, r1, r0, asr #31
   195dc:	bcs	19744 <__assert_fail@plt+0x868c>
   195e0:	b	19764 <__assert_fail@plt+0x86ac>
   195e4:	ldr	r0, [fp, #-12]
   195e8:	cmn	r0, #1
   195ec:	bne	19658 <__assert_fail@plt+0x85a0>
   195f0:	b	19614 <__assert_fail@plt+0x855c>
   195f4:	ldr	r0, [fp, #-8]
   195f8:	ldr	r1, [r0]
   195fc:	ldr	r0, [r0, #4]
   19600:	eor	r1, r1, #-2147483648	; 0x80000000
   19604:	orr	r0, r1, r0
   19608:	cmp	r0, #0
   1960c:	bne	19744 <__assert_fail@plt+0x868c>
   19610:	b	19764 <__assert_fail@plt+0x86ac>
   19614:	ldr	r0, [fp, #-8]
   19618:	ldr	r1, [r0]
   1961c:	ldr	r0, [r0, #4]
   19620:	orr	r0, r1, r0
   19624:	cmp	r0, #0
   19628:	beq	19764 <__assert_fail@plt+0x86ac>
   1962c:	b	19630 <__assert_fail@plt+0x8578>
   19630:	ldr	r0, [fp, #-8]
   19634:	ldr	r1, [r0]
   19638:	ldr	r0, [r0, #4]
   1963c:	subs	r1, r1, #1
   19640:	sbc	r0, r0, #0
   19644:	mvn	r2, #-2147483648	; 0x80000000
   19648:	subs	r1, r2, r1
   1964c:	rscs	r0, r0, #0
   19650:	bcc	19744 <__assert_fail@plt+0x868c>
   19654:	b	19764 <__assert_fail@plt+0x86ac>
   19658:	ldr	r0, [fp, #-12]
   1965c:	mov	r1, #-2147483648	; 0x80000000
   19660:	sdiv	r0, r1, r0
   19664:	ldr	r1, [fp, #-8]
   19668:	ldr	r2, [r1]
   1966c:	ldr	r1, [r1, #4]
   19670:	subs	r2, r0, r2
   19674:	rscs	r0, r1, r0, asr #31
   19678:	bcc	19744 <__assert_fail@plt+0x868c>
   1967c:	b	19764 <__assert_fail@plt+0x86ac>
   19680:	ldr	r0, [fp, #-12]
   19684:	cmp	r0, #0
   19688:	bne	19690 <__assert_fail@plt+0x85d8>
   1968c:	b	19764 <__assert_fail@plt+0x86ac>
   19690:	mov	r0, #1
   19694:	cmp	r0, #0
   19698:	bne	1971c <__assert_fail@plt+0x8664>
   1969c:	b	196a0 <__assert_fail@plt+0x85e8>
   196a0:	ldr	r0, [fp, #-8]
   196a4:	ldr	r1, [r0]
   196a8:	ldr	r0, [r0, #4]
   196ac:	and	r0, r1, r0
   196b0:	cmn	r0, #1
   196b4:	bne	196f0 <__assert_fail@plt+0x8638>
   196b8:	b	196bc <__assert_fail@plt+0x8604>
   196bc:	b	196c0 <__assert_fail@plt+0x8608>
   196c0:	ldr	r0, [fp, #-12]
   196c4:	add	r0, r0, #-2147483648	; 0x80000000
   196c8:	movw	r1, #0
   196cc:	cmp	r1, r0
   196d0:	blt	19744 <__assert_fail@plt+0x868c>
   196d4:	b	19764 <__assert_fail@plt+0x86ac>
   196d8:	ldr	r0, [pc, #3376]	; 1a410 <__assert_fail@plt+0x9358>
   196dc:	ldr	r1, [fp, #-12]
   196e0:	sub	r1, r1, #1
   196e4:	cmp	r0, r1
   196e8:	blt	19744 <__assert_fail@plt+0x868c>
   196ec:	b	19764 <__assert_fail@plt+0x86ac>
   196f0:	ldr	r0, [fp, #-8]
   196f4:	ldr	r2, [r0]
   196f8:	ldr	r3, [r0, #4]
   196fc:	mov	r0, #-2147483648	; 0x80000000
   19700:	mvn	r1, #0
   19704:	bl	1c718 <__assert_fail@plt+0xb660>
   19708:	ldr	r2, [fp, #-12]
   1970c:	subs	r0, r0, r2
   19710:	sbcs	r1, r1, r2, asr #31
   19714:	bcc	19744 <__assert_fail@plt+0x868c>
   19718:	b	19764 <__assert_fail@plt+0x86ac>
   1971c:	ldr	r0, [fp, #-12]
   19720:	mvn	r1, #-2147483648	; 0x80000000
   19724:	sdiv	r0, r1, r0
   19728:	ldr	r1, [fp, #-8]
   1972c:	ldr	r2, [r1]
   19730:	ldr	r1, [r1, #4]
   19734:	subs	r2, r0, r2
   19738:	rscs	r0, r1, r0, asr #31
   1973c:	bcs	19764 <__assert_fail@plt+0x86ac>
   19740:	b	19744 <__assert_fail@plt+0x868c>
   19744:	ldr	r0, [fp, #-8]
   19748:	ldr	r0, [r0]
   1974c:	ldr	r1, [fp, #-12]
   19750:	mul	r0, r0, r1
   19754:	asr	r1, r0, #31
   19758:	str	r0, [fp, #-24]	; 0xffffffe8
   1975c:	str	r1, [fp, #-20]	; 0xffffffec
   19760:	b	1a3c8 <__assert_fail@plt+0x9310>
   19764:	ldr	r0, [fp, #-8]
   19768:	ldr	r0, [r0]
   1976c:	ldr	r1, [fp, #-12]
   19770:	mul	r0, r0, r1
   19774:	asr	r1, r0, #31
   19778:	str	r0, [fp, #-24]	; 0xffffffe8
   1977c:	str	r1, [fp, #-20]	; 0xffffffec
   19780:	b	1a3e4 <__assert_fail@plt+0x932c>
   19784:	ldr	r0, [fp, #-12]
   19788:	cmp	r0, #0
   1978c:	bge	198c0 <__assert_fail@plt+0x8808>
   19790:	mov	r0, #1
   19794:	cmp	r0, #0
   19798:	bne	19840 <__assert_fail@plt+0x8788>
   1979c:	b	197a0 <__assert_fail@plt+0x86e8>
   197a0:	b	197cc <__assert_fail@plt+0x8714>
   197a4:	ldr	r0, [fp, #-8]
   197a8:	ldr	r1, [r0]
   197ac:	ldr	r0, [r0, #4]
   197b0:	ldr	r2, [fp, #-12]
   197b4:	mvn	r3, #0
   197b8:	udiv	r2, r3, r2
   197bc:	subs	r1, r1, r2
   197c0:	sbcs	r0, r0, #0
   197c4:	bcc	19974 <__assert_fail@plt+0x88bc>
   197c8:	b	19994 <__assert_fail@plt+0x88dc>
   197cc:	b	197d0 <__assert_fail@plt+0x8718>
   197d0:	ldr	r0, [pc, #3124]	; 1a40c <__assert_fail@plt+0x9354>
   197d4:	ldr	r1, [fp, #-12]
   197d8:	cmp	r1, r0
   197dc:	blt	197f4 <__assert_fail@plt+0x873c>
   197e0:	b	19800 <__assert_fail@plt+0x8748>
   197e4:	ldr	r0, [fp, #-12]
   197e8:	movw	r1, #0
   197ec:	cmp	r1, r0
   197f0:	bge	19800 <__assert_fail@plt+0x8748>
   197f4:	movw	r0, #1
   197f8:	str	r0, [fp, #-48]	; 0xffffffd0
   197fc:	b	19818 <__assert_fail@plt+0x8760>
   19800:	ldr	r0, [fp, #-12]
   19804:	movw	r1, #0
   19808:	sub	r0, r1, r0
   1980c:	mvn	r1, #0
   19810:	udiv	r0, r1, r0
   19814:	str	r0, [fp, #-48]	; 0xffffffd0
   19818:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1981c:	ldr	r1, [fp, #-8]
   19820:	ldr	r2, [r1]
   19824:	ldr	r1, [r1, #4]
   19828:	mvn	r1, r1
   1982c:	mvn	r2, r2
   19830:	subs	r0, r2, r0
   19834:	sbcs	r1, r1, #0
   19838:	bcs	19974 <__assert_fail@plt+0x88bc>
   1983c:	b	19994 <__assert_fail@plt+0x88dc>
   19840:	b	19844 <__assert_fail@plt+0x878c>
   19844:	b	198a4 <__assert_fail@plt+0x87ec>
   19848:	b	198a4 <__assert_fail@plt+0x87ec>
   1984c:	ldr	r0, [fp, #-12]
   19850:	cmn	r0, #1
   19854:	bne	198a4 <__assert_fail@plt+0x87ec>
   19858:	b	19878 <__assert_fail@plt+0x87c0>
   1985c:	ldr	r0, [fp, #-8]
   19860:	ldr	r1, [r0]
   19864:	ldr	r0, [r0, #4]
   19868:	orr	r0, r1, r0
   1986c:	cmp	r0, #0
   19870:	bne	19974 <__assert_fail@plt+0x88bc>
   19874:	b	19994 <__assert_fail@plt+0x88dc>
   19878:	ldr	r0, [fp, #-8]
   1987c:	ldr	r1, [r0]
   19880:	ldr	r0, [r0, #4]
   19884:	orr	r0, r1, r0
   19888:	cmp	r0, #0
   1988c:	beq	19994 <__assert_fail@plt+0x88dc>
   19890:	b	19894 <__assert_fail@plt+0x87dc>
   19894:	mov	r0, #0
   19898:	cmp	r0, #0
   1989c:	bne	19974 <__assert_fail@plt+0x88bc>
   198a0:	b	19994 <__assert_fail@plt+0x88dc>
   198a4:	ldr	r0, [fp, #-8]
   198a8:	ldr	r1, [r0]
   198ac:	ldr	r0, [r0, #4]
   198b0:	orr	r0, r1, r0
   198b4:	cmp	r0, #0
   198b8:	bne	19974 <__assert_fail@plt+0x88bc>
   198bc:	b	19994 <__assert_fail@plt+0x88dc>
   198c0:	ldr	r0, [fp, #-12]
   198c4:	cmp	r0, #0
   198c8:	bne	198d0 <__assert_fail@plt+0x8818>
   198cc:	b	19994 <__assert_fail@plt+0x88dc>
   198d0:	mov	r0, #1
   198d4:	cmp	r0, #0
   198d8:	bne	1994c <__assert_fail@plt+0x8894>
   198dc:	b	198e0 <__assert_fail@plt+0x8828>
   198e0:	b	198e8 <__assert_fail@plt+0x8830>
   198e4:	b	198ec <__assert_fail@plt+0x8834>
   198e8:	b	1993c <__assert_fail@plt+0x8884>
   198ec:	ldr	r0, [fp, #-8]
   198f0:	ldr	r1, [r0]
   198f4:	ldr	r0, [r0, #4]
   198f8:	and	r0, r1, r0
   198fc:	cmn	r0, #1
   19900:	bne	1993c <__assert_fail@plt+0x8884>
   19904:	b	19908 <__assert_fail@plt+0x8850>
   19908:	b	1990c <__assert_fail@plt+0x8854>
   1990c:	ldr	r0, [fp, #-12]
   19910:	add	r0, r0, #0
   19914:	movw	r1, #0
   19918:	cmp	r1, r0
   1991c:	blt	19974 <__assert_fail@plt+0x88bc>
   19920:	b	19994 <__assert_fail@plt+0x88dc>
   19924:	ldr	r0, [fp, #-12]
   19928:	sub	r0, r0, #1
   1992c:	mvn	r1, #0
   19930:	cmp	r1, r0
   19934:	blt	19974 <__assert_fail@plt+0x88bc>
   19938:	b	19994 <__assert_fail@plt+0x88dc>
   1993c:	ldr	r0, [fp, #-12]
   19940:	cmp	r0, #0
   19944:	bne	19974 <__assert_fail@plt+0x88bc>
   19948:	b	19994 <__assert_fail@plt+0x88dc>
   1994c:	ldr	r0, [fp, #-12]
   19950:	mvn	r1, #0
   19954:	udiv	r0, r1, r0
   19958:	ldr	r1, [fp, #-8]
   1995c:	ldr	r2, [r1]
   19960:	ldr	r1, [r1, #4]
   19964:	subs	r0, r0, r2
   19968:	rscs	r1, r1, #0
   1996c:	bcs	19994 <__assert_fail@plt+0x88dc>
   19970:	b	19974 <__assert_fail@plt+0x88bc>
   19974:	ldr	r0, [fp, #-8]
   19978:	ldr	r0, [r0]
   1997c:	ldr	r1, [fp, #-12]
   19980:	mul	r0, r0, r1
   19984:	mov	r1, #0
   19988:	str	r1, [fp, #-20]	; 0xffffffec
   1998c:	str	r0, [fp, #-24]	; 0xffffffe8
   19990:	b	1a3c8 <__assert_fail@plt+0x9310>
   19994:	ldr	r0, [fp, #-8]
   19998:	ldr	r0, [r0]
   1999c:	ldr	r1, [fp, #-12]
   199a0:	mul	r0, r0, r1
   199a4:	mov	r1, #0
   199a8:	str	r1, [fp, #-20]	; 0xffffffec
   199ac:	str	r0, [fp, #-24]	; 0xffffffe8
   199b0:	b	1a3e4 <__assert_fail@plt+0x932c>
   199b4:	b	19e4c <__assert_fail@plt+0x8d94>
   199b8:	b	19c1c <__assert_fail@plt+0x8b64>
   199bc:	ldr	r0, [fp, #-12]
   199c0:	cmp	r0, #0
   199c4:	bge	19b14 <__assert_fail@plt+0x8a5c>
   199c8:	mov	r0, #1
   199cc:	cmp	r0, #0
   199d0:	bne	19a78 <__assert_fail@plt+0x89c0>
   199d4:	b	199d8 <__assert_fail@plt+0x8920>
   199d8:	b	199dc <__assert_fail@plt+0x8924>
   199dc:	ldr	r0, [fp, #-8]
   199e0:	ldr	r1, [r0]
   199e4:	ldr	r0, [r0, #4]
   199e8:	ldr	r2, [fp, #-12]
   199ec:	mvn	r3, #-2147483648	; 0x80000000
   199f0:	sdiv	r2, r3, r2
   199f4:	subs	r1, r1, r2
   199f8:	sbcs	r0, r0, r2, asr #31
   199fc:	bcc	19bd8 <__assert_fail@plt+0x8b20>
   19a00:	b	19bfc <__assert_fail@plt+0x8b44>
   19a04:	b	19a08 <__assert_fail@plt+0x8950>
   19a08:	ldr	r0, [pc, #2556]	; 1a40c <__assert_fail@plt+0x9354>
   19a0c:	ldr	r1, [fp, #-12]
   19a10:	cmp	r1, r0
   19a14:	blt	19a2c <__assert_fail@plt+0x8974>
   19a18:	b	19a38 <__assert_fail@plt+0x8980>
   19a1c:	ldr	r0, [fp, #-12]
   19a20:	movw	r1, #0
   19a24:	cmp	r1, r0
   19a28:	bge	19a38 <__assert_fail@plt+0x8980>
   19a2c:	movw	r0, #0
   19a30:	str	r0, [fp, #-52]	; 0xffffffcc
   19a34:	b	19a50 <__assert_fail@plt+0x8998>
   19a38:	ldr	r0, [pc, #2512]	; 1a410 <__assert_fail@plt+0x9358>
   19a3c:	ldr	r1, [fp, #-12]
   19a40:	movw	r2, #0
   19a44:	sub	r1, r2, r1
   19a48:	sdiv	r0, r0, r1
   19a4c:	str	r0, [fp, #-52]	; 0xffffffcc
   19a50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19a54:	ldr	r1, [fp, #-8]
   19a58:	ldr	r2, [r1]
   19a5c:	ldr	r1, [r1, #4]
   19a60:	mvn	r1, r1
   19a64:	mvn	r2, r2
   19a68:	subs	r2, r2, r0
   19a6c:	sbcs	r0, r1, r0, asr #31
   19a70:	bcs	19bd8 <__assert_fail@plt+0x8b20>
   19a74:	b	19bfc <__assert_fail@plt+0x8b44>
   19a78:	ldr	r0, [fp, #-12]
   19a7c:	cmn	r0, #1
   19a80:	bne	19aec <__assert_fail@plt+0x8a34>
   19a84:	b	19aa8 <__assert_fail@plt+0x89f0>
   19a88:	ldr	r0, [fp, #-8]
   19a8c:	ldr	r1, [r0]
   19a90:	ldr	r0, [r0, #4]
   19a94:	eor	r1, r1, #-2147483648	; 0x80000000
   19a98:	orr	r0, r1, r0
   19a9c:	cmp	r0, #0
   19aa0:	bne	19bd8 <__assert_fail@plt+0x8b20>
   19aa4:	b	19bfc <__assert_fail@plt+0x8b44>
   19aa8:	ldr	r0, [fp, #-8]
   19aac:	ldr	r1, [r0]
   19ab0:	ldr	r0, [r0, #4]
   19ab4:	orr	r0, r1, r0
   19ab8:	cmp	r0, #0
   19abc:	beq	19bfc <__assert_fail@plt+0x8b44>
   19ac0:	b	19ac4 <__assert_fail@plt+0x8a0c>
   19ac4:	ldr	r0, [fp, #-8]
   19ac8:	ldr	r1, [r0]
   19acc:	ldr	r0, [r0, #4]
   19ad0:	subs	r1, r1, #1
   19ad4:	sbc	r0, r0, #0
   19ad8:	mvn	r2, #-2147483648	; 0x80000000
   19adc:	subs	r1, r2, r1
   19ae0:	rscs	r0, r0, #0
   19ae4:	bcc	19bd8 <__assert_fail@plt+0x8b20>
   19ae8:	b	19bfc <__assert_fail@plt+0x8b44>
   19aec:	ldr	r0, [fp, #-12]
   19af0:	mov	r1, #-2147483648	; 0x80000000
   19af4:	sdiv	r0, r1, r0
   19af8:	ldr	r1, [fp, #-8]
   19afc:	ldr	r2, [r1]
   19b00:	ldr	r1, [r1, #4]
   19b04:	subs	r2, r0, r2
   19b08:	rscs	r0, r1, r0, asr #31
   19b0c:	bcc	19bd8 <__assert_fail@plt+0x8b20>
   19b10:	b	19bfc <__assert_fail@plt+0x8b44>
   19b14:	ldr	r0, [fp, #-12]
   19b18:	cmp	r0, #0
   19b1c:	bne	19b24 <__assert_fail@plt+0x8a6c>
   19b20:	b	19bfc <__assert_fail@plt+0x8b44>
   19b24:	mov	r0, #1
   19b28:	cmp	r0, #0
   19b2c:	bne	19bb0 <__assert_fail@plt+0x8af8>
   19b30:	b	19b34 <__assert_fail@plt+0x8a7c>
   19b34:	ldr	r0, [fp, #-8]
   19b38:	ldr	r1, [r0]
   19b3c:	ldr	r0, [r0, #4]
   19b40:	and	r0, r1, r0
   19b44:	cmn	r0, #1
   19b48:	bne	19b84 <__assert_fail@plt+0x8acc>
   19b4c:	b	19b50 <__assert_fail@plt+0x8a98>
   19b50:	b	19b54 <__assert_fail@plt+0x8a9c>
   19b54:	ldr	r0, [fp, #-12]
   19b58:	add	r0, r0, #-2147483648	; 0x80000000
   19b5c:	movw	r1, #0
   19b60:	cmp	r1, r0
   19b64:	blt	19bd8 <__assert_fail@plt+0x8b20>
   19b68:	b	19bfc <__assert_fail@plt+0x8b44>
   19b6c:	ldr	r0, [pc, #2204]	; 1a410 <__assert_fail@plt+0x9358>
   19b70:	ldr	r1, [fp, #-12]
   19b74:	sub	r1, r1, #1
   19b78:	cmp	r0, r1
   19b7c:	blt	19bd8 <__assert_fail@plt+0x8b20>
   19b80:	b	19bfc <__assert_fail@plt+0x8b44>
   19b84:	ldr	r0, [fp, #-8]
   19b88:	ldr	r2, [r0]
   19b8c:	ldr	r3, [r0, #4]
   19b90:	mov	r0, #-2147483648	; 0x80000000
   19b94:	mvn	r1, #0
   19b98:	bl	1c718 <__assert_fail@plt+0xb660>
   19b9c:	ldr	r2, [fp, #-12]
   19ba0:	subs	r0, r0, r2
   19ba4:	sbcs	r1, r1, r2, asr #31
   19ba8:	bcc	19bd8 <__assert_fail@plt+0x8b20>
   19bac:	b	19bfc <__assert_fail@plt+0x8b44>
   19bb0:	ldr	r0, [fp, #-12]
   19bb4:	mvn	r1, #-2147483648	; 0x80000000
   19bb8:	sdiv	r0, r1, r0
   19bbc:	ldr	r1, [fp, #-8]
   19bc0:	ldr	r2, [r1]
   19bc4:	ldr	r1, [r1, #4]
   19bc8:	subs	r2, r0, r2
   19bcc:	rscs	r0, r1, r0, asr #31
   19bd0:	bcs	19bfc <__assert_fail@plt+0x8b44>
   19bd4:	b	19bd8 <__assert_fail@plt+0x8b20>
   19bd8:	ldr	r0, [fp, #-8]
   19bdc:	ldr	r0, [r0]
   19be0:	ldr	r1, [fp, #-12]
   19be4:	mul	r0, r0, r1
   19be8:	asr	r1, r0, #31
   19bec:	str	r0, [fp, #-24]	; 0xffffffe8
   19bf0:	str	r1, [fp, #-20]	; 0xffffffec
   19bf4:	b	1a3c8 <__assert_fail@plt+0x9310>
   19bf8:	andhi	r0, r0, r1
   19bfc:	ldr	r0, [fp, #-8]
   19c00:	ldr	r0, [r0]
   19c04:	ldr	r1, [fp, #-12]
   19c08:	mul	r0, r0, r1
   19c0c:	asr	r1, r0, #31
   19c10:	str	r0, [fp, #-24]	; 0xffffffe8
   19c14:	str	r1, [fp, #-20]	; 0xffffffec
   19c18:	b	1a3e4 <__assert_fail@plt+0x932c>
   19c1c:	ldr	r0, [fp, #-12]
   19c20:	cmp	r0, #0
   19c24:	bge	19d58 <__assert_fail@plt+0x8ca0>
   19c28:	mov	r0, #1
   19c2c:	cmp	r0, #0
   19c30:	bne	19cd8 <__assert_fail@plt+0x8c20>
   19c34:	b	19c38 <__assert_fail@plt+0x8b80>
   19c38:	b	19c64 <__assert_fail@plt+0x8bac>
   19c3c:	ldr	r0, [fp, #-8]
   19c40:	ldr	r1, [r0]
   19c44:	ldr	r0, [r0, #4]
   19c48:	ldr	r2, [fp, #-12]
   19c4c:	mvn	r3, #0
   19c50:	udiv	r2, r3, r2
   19c54:	subs	r1, r1, r2
   19c58:	sbcs	r0, r0, #0
   19c5c:	bcc	19e0c <__assert_fail@plt+0x8d54>
   19c60:	b	19e2c <__assert_fail@plt+0x8d74>
   19c64:	b	19c68 <__assert_fail@plt+0x8bb0>
   19c68:	ldr	r0, [pc, #1948]	; 1a40c <__assert_fail@plt+0x9354>
   19c6c:	ldr	r1, [fp, #-12]
   19c70:	cmp	r1, r0
   19c74:	blt	19c8c <__assert_fail@plt+0x8bd4>
   19c78:	b	19c98 <__assert_fail@plt+0x8be0>
   19c7c:	ldr	r0, [fp, #-12]
   19c80:	movw	r1, #0
   19c84:	cmp	r1, r0
   19c88:	bge	19c98 <__assert_fail@plt+0x8be0>
   19c8c:	movw	r0, #1
   19c90:	str	r0, [sp, #56]	; 0x38
   19c94:	b	19cb0 <__assert_fail@plt+0x8bf8>
   19c98:	ldr	r0, [fp, #-12]
   19c9c:	movw	r1, #0
   19ca0:	sub	r0, r1, r0
   19ca4:	mvn	r1, #0
   19ca8:	udiv	r0, r1, r0
   19cac:	str	r0, [sp, #56]	; 0x38
   19cb0:	ldr	r0, [sp, #56]	; 0x38
   19cb4:	ldr	r1, [fp, #-8]
   19cb8:	ldr	r2, [r1]
   19cbc:	ldr	r1, [r1, #4]
   19cc0:	mvn	r1, r1
   19cc4:	mvn	r2, r2
   19cc8:	subs	r0, r2, r0
   19ccc:	sbcs	r1, r1, #0
   19cd0:	bcs	19e0c <__assert_fail@plt+0x8d54>
   19cd4:	b	19e2c <__assert_fail@plt+0x8d74>
   19cd8:	b	19cdc <__assert_fail@plt+0x8c24>
   19cdc:	b	19d3c <__assert_fail@plt+0x8c84>
   19ce0:	b	19d3c <__assert_fail@plt+0x8c84>
   19ce4:	ldr	r0, [fp, #-12]
   19ce8:	cmn	r0, #1
   19cec:	bne	19d3c <__assert_fail@plt+0x8c84>
   19cf0:	b	19d10 <__assert_fail@plt+0x8c58>
   19cf4:	ldr	r0, [fp, #-8]
   19cf8:	ldr	r1, [r0]
   19cfc:	ldr	r0, [r0, #4]
   19d00:	orr	r0, r1, r0
   19d04:	cmp	r0, #0
   19d08:	bne	19e0c <__assert_fail@plt+0x8d54>
   19d0c:	b	19e2c <__assert_fail@plt+0x8d74>
   19d10:	ldr	r0, [fp, #-8]
   19d14:	ldr	r1, [r0]
   19d18:	ldr	r0, [r0, #4]
   19d1c:	orr	r0, r1, r0
   19d20:	cmp	r0, #0
   19d24:	beq	19e2c <__assert_fail@plt+0x8d74>
   19d28:	b	19d2c <__assert_fail@plt+0x8c74>
   19d2c:	mov	r0, #0
   19d30:	cmp	r0, #0
   19d34:	bne	19e0c <__assert_fail@plt+0x8d54>
   19d38:	b	19e2c <__assert_fail@plt+0x8d74>
   19d3c:	ldr	r0, [fp, #-8]
   19d40:	ldr	r1, [r0]
   19d44:	ldr	r0, [r0, #4]
   19d48:	orr	r0, r1, r0
   19d4c:	cmp	r0, #0
   19d50:	bne	19e0c <__assert_fail@plt+0x8d54>
   19d54:	b	19e2c <__assert_fail@plt+0x8d74>
   19d58:	ldr	r0, [fp, #-12]
   19d5c:	cmp	r0, #0
   19d60:	bne	19d68 <__assert_fail@plt+0x8cb0>
   19d64:	b	19e2c <__assert_fail@plt+0x8d74>
   19d68:	mov	r0, #1
   19d6c:	cmp	r0, #0
   19d70:	bne	19de4 <__assert_fail@plt+0x8d2c>
   19d74:	b	19d78 <__assert_fail@plt+0x8cc0>
   19d78:	b	19d80 <__assert_fail@plt+0x8cc8>
   19d7c:	b	19d84 <__assert_fail@plt+0x8ccc>
   19d80:	b	19dd4 <__assert_fail@plt+0x8d1c>
   19d84:	ldr	r0, [fp, #-8]
   19d88:	ldr	r1, [r0]
   19d8c:	ldr	r0, [r0, #4]
   19d90:	and	r0, r1, r0
   19d94:	cmn	r0, #1
   19d98:	bne	19dd4 <__assert_fail@plt+0x8d1c>
   19d9c:	b	19da0 <__assert_fail@plt+0x8ce8>
   19da0:	b	19da4 <__assert_fail@plt+0x8cec>
   19da4:	ldr	r0, [fp, #-12]
   19da8:	add	r0, r0, #0
   19dac:	movw	r1, #0
   19db0:	cmp	r1, r0
   19db4:	blt	19e0c <__assert_fail@plt+0x8d54>
   19db8:	b	19e2c <__assert_fail@plt+0x8d74>
   19dbc:	ldr	r0, [fp, #-12]
   19dc0:	sub	r0, r0, #1
   19dc4:	mvn	r1, #0
   19dc8:	cmp	r1, r0
   19dcc:	blt	19e0c <__assert_fail@plt+0x8d54>
   19dd0:	b	19e2c <__assert_fail@plt+0x8d74>
   19dd4:	ldr	r0, [fp, #-12]
   19dd8:	cmp	r0, #0
   19ddc:	bne	19e0c <__assert_fail@plt+0x8d54>
   19de0:	b	19e2c <__assert_fail@plt+0x8d74>
   19de4:	ldr	r0, [fp, #-12]
   19de8:	mvn	r1, #0
   19dec:	udiv	r0, r1, r0
   19df0:	ldr	r1, [fp, #-8]
   19df4:	ldr	r2, [r1]
   19df8:	ldr	r1, [r1, #4]
   19dfc:	subs	r0, r0, r2
   19e00:	rscs	r1, r1, #0
   19e04:	bcs	19e2c <__assert_fail@plt+0x8d74>
   19e08:	b	19e0c <__assert_fail@plt+0x8d54>
   19e0c:	ldr	r0, [fp, #-8]
   19e10:	ldr	r0, [r0]
   19e14:	ldr	r1, [fp, #-12]
   19e18:	mul	r0, r0, r1
   19e1c:	mov	r1, #0
   19e20:	str	r1, [fp, #-20]	; 0xffffffec
   19e24:	str	r0, [fp, #-24]	; 0xffffffe8
   19e28:	b	1a3c8 <__assert_fail@plt+0x9310>
   19e2c:	ldr	r0, [fp, #-8]
   19e30:	ldr	r0, [r0]
   19e34:	ldr	r1, [fp, #-12]
   19e38:	mul	r0, r0, r1
   19e3c:	mov	r1, #0
   19e40:	str	r1, [fp, #-20]	; 0xffffffec
   19e44:	str	r0, [fp, #-24]	; 0xffffffe8
   19e48:	b	1a3e4 <__assert_fail@plt+0x932c>
   19e4c:	b	1a130 <__assert_fail@plt+0x9078>
   19e50:	ldr	r0, [fp, #-12]
   19e54:	cmp	r0, #0
   19e58:	bge	1a000 <__assert_fail@plt+0x8f48>
   19e5c:	mov	r0, #1
   19e60:	cmp	r0, #0
   19e64:	bne	19f54 <__assert_fail@plt+0x8e9c>
   19e68:	b	19e6c <__assert_fail@plt+0x8db4>
   19e6c:	b	19e70 <__assert_fail@plt+0x8db8>
   19e70:	ldr	r0, [fp, #-8]
   19e74:	ldr	r1, [r0]
   19e78:	ldr	r0, [r0, #4]
   19e7c:	ldr	r2, [fp, #-12]
   19e80:	asr	r3, r2, #31
   19e84:	mvn	ip, #0
   19e88:	mvn	lr, #-2147483648	; 0x80000000
   19e8c:	str	r0, [sp, #52]	; 0x34
   19e90:	mov	r0, ip
   19e94:	str	r1, [sp, #48]	; 0x30
   19e98:	mov	r1, lr
   19e9c:	bl	1c644 <__assert_fail@plt+0xb58c>
   19ea0:	ldr	r2, [sp, #48]	; 0x30
   19ea4:	subs	r0, r2, r0
   19ea8:	ldr	r2, [sp, #52]	; 0x34
   19eac:	sbcs	r1, r2, r1
   19eb0:	bcc	1a0d8 <__assert_fail@plt+0x9020>
   19eb4:	b	1a104 <__assert_fail@plt+0x904c>
   19eb8:	b	19ebc <__assert_fail@plt+0x8e04>
   19ebc:	ldr	r0, [pc, #1352]	; 1a40c <__assert_fail@plt+0x9354>
   19ec0:	ldr	r1, [fp, #-12]
   19ec4:	cmp	r1, r0
   19ec8:	blt	19ee0 <__assert_fail@plt+0x8e28>
   19ecc:	b	19ef4 <__assert_fail@plt+0x8e3c>
   19ed0:	ldr	r0, [fp, #-12]
   19ed4:	movw	r1, #0
   19ed8:	cmp	r1, r0
   19edc:	bge	19ef4 <__assert_fail@plt+0x8e3c>
   19ee0:	mov	r0, #0
   19ee4:	mvn	r1, #0
   19ee8:	str	r1, [sp, #44]	; 0x2c
   19eec:	str	r0, [sp, #40]	; 0x28
   19ef0:	b	19f28 <__assert_fail@plt+0x8e70>
   19ef4:	ldr	r0, [fp, #-12]
   19ef8:	rsb	r0, r0, #0
   19efc:	asr	r3, r0, #31
   19f00:	mvn	r1, #0
   19f04:	mvn	r2, #-2147483648	; 0x80000000
   19f08:	str	r0, [sp, #36]	; 0x24
   19f0c:	mov	r0, r1
   19f10:	mov	r1, r2
   19f14:	ldr	r2, [sp, #36]	; 0x24
   19f18:	bl	1c644 <__assert_fail@plt+0xb58c>
   19f1c:	str	r0, [sp, #44]	; 0x2c
   19f20:	str	r1, [sp, #40]	; 0x28
   19f24:	b	19f28 <__assert_fail@plt+0x8e70>
   19f28:	ldr	r0, [sp, #40]	; 0x28
   19f2c:	ldr	r1, [sp, #44]	; 0x2c
   19f30:	ldr	r2, [fp, #-8]
   19f34:	ldr	r3, [r2]
   19f38:	ldr	r2, [r2, #4]
   19f3c:	mvn	r2, r2
   19f40:	mvn	r3, r3
   19f44:	subs	r1, r3, r1
   19f48:	sbcs	r0, r2, r0
   19f4c:	bcs	1a0d8 <__assert_fail@plt+0x9020>
   19f50:	b	1a104 <__assert_fail@plt+0x904c>
   19f54:	ldr	r0, [fp, #-12]
   19f58:	cmn	r0, #1
   19f5c:	bne	19fc0 <__assert_fail@plt+0x8f08>
   19f60:	b	19f84 <__assert_fail@plt+0x8ecc>
   19f64:	ldr	r0, [fp, #-8]
   19f68:	ldr	r1, [r0]
   19f6c:	ldr	r0, [r0, #4]
   19f70:	eor	r0, r0, #-2147483648	; 0x80000000
   19f74:	orr	r0, r1, r0
   19f78:	cmp	r0, #0
   19f7c:	bne	1a0d8 <__assert_fail@plt+0x9020>
   19f80:	b	1a104 <__assert_fail@plt+0x904c>
   19f84:	ldr	r0, [fp, #-8]
   19f88:	ldr	r1, [r0]
   19f8c:	ldr	r0, [r0, #4]
   19f90:	orr	r0, r1, r0
   19f94:	cmp	r0, #0
   19f98:	beq	1a104 <__assert_fail@plt+0x904c>
   19f9c:	b	19fa0 <__assert_fail@plt+0x8ee8>
   19fa0:	ldr	r0, [fp, #-8]
   19fa4:	ldr	r1, [r0]
   19fa8:	ldr	r0, [r0, #4]
   19fac:	subs	r1, r1, #1
   19fb0:	sbc	r0, r0, #0
   19fb4:	cmp	r0, #0
   19fb8:	bmi	1a0d8 <__assert_fail@plt+0x9020>
   19fbc:	b	1a104 <__assert_fail@plt+0x904c>
   19fc0:	ldr	r0, [fp, #-12]
   19fc4:	asr	r3, r0, #31
   19fc8:	mov	r1, #0
   19fcc:	mov	r2, #-2147483648	; 0x80000000
   19fd0:	str	r0, [sp, #32]
   19fd4:	mov	r0, r1
   19fd8:	mov	r1, r2
   19fdc:	ldr	r2, [sp, #32]
   19fe0:	bl	1c644 <__assert_fail@plt+0xb58c>
   19fe4:	ldr	r2, [fp, #-8]
   19fe8:	ldr	r3, [r2]
   19fec:	ldr	r2, [r2, #4]
   19ff0:	subs	r0, r0, r3
   19ff4:	sbcs	r1, r1, r2
   19ff8:	bcc	1a0d8 <__assert_fail@plt+0x9020>
   19ffc:	b	1a104 <__assert_fail@plt+0x904c>
   1a000:	ldr	r0, [fp, #-12]
   1a004:	cmp	r0, #0
   1a008:	bne	1a010 <__assert_fail@plt+0x8f58>
   1a00c:	b	1a104 <__assert_fail@plt+0x904c>
   1a010:	mov	r0, #1
   1a014:	cmp	r0, #0
   1a018:	bne	1a098 <__assert_fail@plt+0x8fe0>
   1a01c:	b	1a020 <__assert_fail@plt+0x8f68>
   1a020:	ldr	r0, [fp, #-8]
   1a024:	ldr	r1, [r0]
   1a028:	ldr	r0, [r0, #4]
   1a02c:	and	r0, r1, r0
   1a030:	cmn	r0, #1
   1a034:	bne	1a06c <__assert_fail@plt+0x8fb4>
   1a038:	b	1a03c <__assert_fail@plt+0x8f84>
   1a03c:	b	1a040 <__assert_fail@plt+0x8f88>
   1a040:	ldr	r0, [fp, #-12]
   1a044:	mov	r1, #-2147483648	; 0x80000000
   1a048:	add	r1, r1, r0, asr #31
   1a04c:	rsbs	r0, r0, #0
   1a050:	rscs	r1, r1, #0
   1a054:	blt	1a0d8 <__assert_fail@plt+0x9020>
   1a058:	b	1a104 <__assert_fail@plt+0x904c>
   1a05c:	mov	r0, #0
   1a060:	cmp	r0, #0
   1a064:	bne	1a0d8 <__assert_fail@plt+0x9020>
   1a068:	b	1a104 <__assert_fail@plt+0x904c>
   1a06c:	ldr	r0, [fp, #-8]
   1a070:	ldr	r2, [r0]
   1a074:	ldr	r3, [r0, #4]
   1a078:	mov	r0, #0
   1a07c:	mov	r1, #-2147483648	; 0x80000000
   1a080:	bl	1c718 <__assert_fail@plt+0xb660>
   1a084:	ldr	r2, [fp, #-12]
   1a088:	subs	r0, r0, r2
   1a08c:	sbcs	r1, r1, r2, asr #31
   1a090:	bcc	1a0d8 <__assert_fail@plt+0x9020>
   1a094:	b	1a104 <__assert_fail@plt+0x904c>
   1a098:	ldr	r0, [fp, #-12]
   1a09c:	asr	r3, r0, #31
   1a0a0:	mvn	r1, #0
   1a0a4:	mvn	r2, #-2147483648	; 0x80000000
   1a0a8:	str	r0, [sp, #28]
   1a0ac:	mov	r0, r1
   1a0b0:	mov	r1, r2
   1a0b4:	ldr	r2, [sp, #28]
   1a0b8:	bl	1c644 <__assert_fail@plt+0xb58c>
   1a0bc:	ldr	r2, [fp, #-8]
   1a0c0:	ldr	r3, [r2]
   1a0c4:	ldr	r2, [r2, #4]
   1a0c8:	subs	r0, r0, r3
   1a0cc:	sbcs	r1, r1, r2
   1a0d0:	bcs	1a104 <__assert_fail@plt+0x904c>
   1a0d4:	b	1a0d8 <__assert_fail@plt+0x9020>
   1a0d8:	ldr	r0, [fp, #-8]
   1a0dc:	ldr	r1, [r0]
   1a0e0:	ldr	r0, [r0, #4]
   1a0e4:	ldr	r2, [fp, #-12]
   1a0e8:	asr	r3, r2, #31
   1a0ec:	umull	ip, lr, r1, r2
   1a0f0:	mla	r1, r1, r3, lr
   1a0f4:	mla	r0, r0, r2, r1
   1a0f8:	str	ip, [fp, #-24]	; 0xffffffe8
   1a0fc:	str	r0, [fp, #-20]	; 0xffffffec
   1a100:	b	1a3c8 <__assert_fail@plt+0x9310>
   1a104:	ldr	r0, [fp, #-8]
   1a108:	ldr	r1, [r0]
   1a10c:	ldr	r0, [r0, #4]
   1a110:	ldr	r2, [fp, #-12]
   1a114:	asr	r3, r2, #31
   1a118:	umull	ip, lr, r1, r2
   1a11c:	mla	r1, r1, r3, lr
   1a120:	mla	r0, r0, r2, r1
   1a124:	str	ip, [fp, #-24]	; 0xffffffe8
   1a128:	str	r0, [fp, #-20]	; 0xffffffec
   1a12c:	b	1a3e4 <__assert_fail@plt+0x932c>
   1a130:	ldr	r0, [fp, #-12]
   1a134:	cmp	r0, #0
   1a138:	bge	1a2ac <__assert_fail@plt+0x91f4>
   1a13c:	mov	r0, #1
   1a140:	cmp	r0, #0
   1a144:	bne	1a22c <__assert_fail@plt+0x9174>
   1a148:	b	1a14c <__assert_fail@plt+0x9094>
   1a14c:	b	1a194 <__assert_fail@plt+0x90dc>
   1a150:	ldr	r0, [fp, #-8]
   1a154:	ldr	r1, [r0]
   1a158:	ldr	r0, [r0, #4]
   1a15c:	ldr	r2, [fp, #-12]
   1a160:	asr	r3, r2, #31
   1a164:	mvn	ip, #0
   1a168:	str	r0, [sp, #24]
   1a16c:	mov	r0, ip
   1a170:	str	r1, [sp, #20]
   1a174:	mov	r1, ip
   1a178:	bl	1c718 <__assert_fail@plt+0xb660>
   1a17c:	ldr	r2, [sp, #20]
   1a180:	subs	r0, r2, r0
   1a184:	ldr	r2, [sp, #24]
   1a188:	sbcs	r1, r2, r1
   1a18c:	bcc	1a370 <__assert_fail@plt+0x92b8>
   1a190:	b	1a39c <__assert_fail@plt+0x92e4>
   1a194:	b	1a198 <__assert_fail@plt+0x90e0>
   1a198:	ldr	r0, [pc, #620]	; 1a40c <__assert_fail@plt+0x9354>
   1a19c:	ldr	r1, [fp, #-12]
   1a1a0:	cmp	r1, r0
   1a1a4:	blt	1a1bc <__assert_fail@plt+0x9104>
   1a1a8:	b	1a1d4 <__assert_fail@plt+0x911c>
   1a1ac:	ldr	r0, [fp, #-12]
   1a1b0:	movw	r1, #0
   1a1b4:	cmp	r1, r0
   1a1b8:	bge	1a1d4 <__assert_fail@plt+0x911c>
   1a1bc:	mov	r0, #1
   1a1c0:	mvn	r1, #0
   1a1c4:	str	r1, [sp, #16]
   1a1c8:	str	r0, [sp, #12]
   1a1cc:	b	1a200 <__assert_fail@plt+0x9148>
   1a1d0:			; <UNDEFINED> instruction: 0xffff8000
   1a1d4:	ldr	r0, [fp, #-12]
   1a1d8:	rsb	r0, r0, #0
   1a1dc:	asr	r3, r0, #31
   1a1e0:	mvn	r1, #0
   1a1e4:	str	r0, [sp, #8]
   1a1e8:	mov	r0, r1
   1a1ec:	ldr	r2, [sp, #8]
   1a1f0:	bl	1c718 <__assert_fail@plt+0xb660>
   1a1f4:	str	r0, [sp, #16]
   1a1f8:	str	r1, [sp, #12]
   1a1fc:	b	1a200 <__assert_fail@plt+0x9148>
   1a200:	ldr	r0, [sp, #12]
   1a204:	ldr	r1, [sp, #16]
   1a208:	ldr	r2, [fp, #-8]
   1a20c:	ldr	r3, [r2]
   1a210:	ldr	r2, [r2, #4]
   1a214:	mvn	r2, r2
   1a218:	mvn	r3, r3
   1a21c:	subs	r1, r3, r1
   1a220:	sbcs	r0, r2, r0
   1a224:	bcs	1a370 <__assert_fail@plt+0x92b8>
   1a228:	b	1a39c <__assert_fail@plt+0x92e4>
   1a22c:	b	1a230 <__assert_fail@plt+0x9178>
   1a230:	b	1a290 <__assert_fail@plt+0x91d8>
   1a234:	b	1a290 <__assert_fail@plt+0x91d8>
   1a238:	ldr	r0, [fp, #-12]
   1a23c:	cmn	r0, #1
   1a240:	bne	1a290 <__assert_fail@plt+0x91d8>
   1a244:	b	1a264 <__assert_fail@plt+0x91ac>
   1a248:	ldr	r0, [fp, #-8]
   1a24c:	ldr	r1, [r0]
   1a250:	ldr	r0, [r0, #4]
   1a254:	orr	r0, r1, r0
   1a258:	cmp	r0, #0
   1a25c:	bne	1a370 <__assert_fail@plt+0x92b8>
   1a260:	b	1a39c <__assert_fail@plt+0x92e4>
   1a264:	ldr	r0, [fp, #-8]
   1a268:	ldr	r1, [r0]
   1a26c:	ldr	r0, [r0, #4]
   1a270:	orr	r0, r1, r0
   1a274:	cmp	r0, #0
   1a278:	beq	1a39c <__assert_fail@plt+0x92e4>
   1a27c:	b	1a280 <__assert_fail@plt+0x91c8>
   1a280:	mov	r0, #0
   1a284:	cmp	r0, #0
   1a288:	bne	1a370 <__assert_fail@plt+0x92b8>
   1a28c:	b	1a39c <__assert_fail@plt+0x92e4>
   1a290:	ldr	r0, [fp, #-8]
   1a294:	ldr	r1, [r0]
   1a298:	ldr	r0, [r0, #4]
   1a29c:	orr	r0, r1, r0
   1a2a0:	cmp	r0, #0
   1a2a4:	bne	1a370 <__assert_fail@plt+0x92b8>
   1a2a8:	b	1a39c <__assert_fail@plt+0x92e4>
   1a2ac:	ldr	r0, [fp, #-12]
   1a2b0:	cmp	r0, #0
   1a2b4:	bne	1a2bc <__assert_fail@plt+0x9204>
   1a2b8:	b	1a39c <__assert_fail@plt+0x92e4>
   1a2bc:	mov	r0, #1
   1a2c0:	cmp	r0, #0
   1a2c4:	bne	1a338 <__assert_fail@plt+0x9280>
   1a2c8:	b	1a2cc <__assert_fail@plt+0x9214>
   1a2cc:	b	1a2d4 <__assert_fail@plt+0x921c>
   1a2d0:	b	1a2d8 <__assert_fail@plt+0x9220>
   1a2d4:	b	1a328 <__assert_fail@plt+0x9270>
   1a2d8:	ldr	r0, [fp, #-8]
   1a2dc:	ldr	r1, [r0]
   1a2e0:	ldr	r0, [r0, #4]
   1a2e4:	and	r0, r1, r0
   1a2e8:	cmn	r0, #1
   1a2ec:	bne	1a328 <__assert_fail@plt+0x9270>
   1a2f0:	b	1a2f4 <__assert_fail@plt+0x923c>
   1a2f4:	b	1a2f8 <__assert_fail@plt+0x9240>
   1a2f8:	ldr	r0, [fp, #-12]
   1a2fc:	add	r0, r0, #0
   1a300:	movw	r1, #0
   1a304:	cmp	r1, r0
   1a308:	blt	1a370 <__assert_fail@plt+0x92b8>
   1a30c:	b	1a39c <__assert_fail@plt+0x92e4>
   1a310:	ldr	r0, [fp, #-12]
   1a314:	sub	r0, r0, #1
   1a318:	mvn	r1, #0
   1a31c:	cmp	r1, r0
   1a320:	blt	1a370 <__assert_fail@plt+0x92b8>
   1a324:	b	1a39c <__assert_fail@plt+0x92e4>
   1a328:	ldr	r0, [fp, #-12]
   1a32c:	cmp	r0, #0
   1a330:	bne	1a370 <__assert_fail@plt+0x92b8>
   1a334:	b	1a39c <__assert_fail@plt+0x92e4>
   1a338:	ldr	r0, [fp, #-12]
   1a33c:	asr	r3, r0, #31
   1a340:	mvn	r1, #0
   1a344:	str	r0, [sp, #4]
   1a348:	mov	r0, r1
   1a34c:	ldr	r2, [sp, #4]
   1a350:	bl	1c718 <__assert_fail@plt+0xb660>
   1a354:	ldr	r2, [fp, #-8]
   1a358:	ldr	r3, [r2]
   1a35c:	ldr	r2, [r2, #4]
   1a360:	subs	r0, r0, r3
   1a364:	sbcs	r1, r1, r2
   1a368:	bcs	1a39c <__assert_fail@plt+0x92e4>
   1a36c:	b	1a370 <__assert_fail@plt+0x92b8>
   1a370:	ldr	r0, [fp, #-8]
   1a374:	ldr	r1, [r0]
   1a378:	ldr	r0, [r0, #4]
   1a37c:	ldr	r2, [fp, #-12]
   1a380:	asr	r3, r2, #31
   1a384:	umull	ip, lr, r1, r2
   1a388:	mla	r1, r1, r3, lr
   1a38c:	mla	r0, r0, r2, r1
   1a390:	str	ip, [fp, #-24]	; 0xffffffe8
   1a394:	str	r0, [fp, #-20]	; 0xffffffec
   1a398:	b	1a3c8 <__assert_fail@plt+0x9310>
   1a39c:	ldr	r0, [fp, #-8]
   1a3a0:	ldr	r1, [r0]
   1a3a4:	ldr	r0, [r0, #4]
   1a3a8:	ldr	r2, [fp, #-12]
   1a3ac:	asr	r3, r2, #31
   1a3b0:	umull	ip, lr, r1, r2
   1a3b4:	mla	r1, r1, r3, lr
   1a3b8:	mla	r0, r0, r2, r1
   1a3bc:	str	ip, [fp, #-24]	; 0xffffffe8
   1a3c0:	str	r0, [fp, #-20]	; 0xffffffec
   1a3c4:	b	1a3e4 <__assert_fail@plt+0x932c>
   1a3c8:	ldr	r0, [fp, #-8]
   1a3cc:	mvn	r1, #0
   1a3d0:	str	r1, [r0, #4]
   1a3d4:	str	r1, [r0]
   1a3d8:	movw	r0, #1
   1a3dc:	str	r0, [fp, #-4]
   1a3e0:	b	1a400 <__assert_fail@plt+0x9348>
   1a3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a3ec:	ldr	r2, [fp, #-8]
   1a3f0:	str	r1, [r2, #4]
   1a3f4:	str	r0, [r2]
   1a3f8:	movw	r0, #0
   1a3fc:	str	r0, [fp, #-4]
   1a400:	ldr	r0, [fp, #-4]
   1a404:	mov	sp, fp
   1a408:	pop	{fp, pc}
   1a40c:	andhi	r0, r0, r1
   1a410:	svcvc	0x00ffffff
   1a414:	push	{fp, lr}
   1a418:	mov	fp, sp
   1a41c:	sub	sp, sp, #16
   1a420:	str	r0, [fp, #-4]
   1a424:	str	r1, [sp, #8]
   1a428:	str	r2, [sp, #4]
   1a42c:	movw	r0, #0
   1a430:	str	r0, [sp]
   1a434:	ldr	r0, [sp, #4]
   1a438:	mvn	r1, #0
   1a43c:	add	r1, r0, r1
   1a440:	str	r1, [sp, #4]
   1a444:	cmp	r0, #0
   1a448:	beq	1a468 <__assert_fail@plt+0x93b0>
   1a44c:	ldr	r0, [fp, #-4]
   1a450:	ldr	r1, [sp, #8]
   1a454:	bl	18b9c <__assert_fail@plt+0x7ae4>
   1a458:	ldr	r1, [sp]
   1a45c:	orr	r0, r1, r0
   1a460:	str	r0, [sp]
   1a464:	b	1a434 <__assert_fail@plt+0x937c>
   1a468:	ldr	r0, [sp]
   1a46c:	mov	sp, fp
   1a470:	pop	{fp, pc}
   1a474:	push	{fp, lr}
   1a478:	mov	fp, sp
   1a47c:	sub	sp, sp, #16
   1a480:	str	r0, [sp, #8]
   1a484:	str	r1, [sp, #4]
   1a488:	ldr	r0, [sp, #8]
   1a48c:	cmp	r0, #0
   1a490:	beq	1a4a0 <__assert_fail@plt+0x93e8>
   1a494:	ldr	r0, [sp, #4]
   1a498:	cmp	r0, #0
   1a49c:	bne	1a4ac <__assert_fail@plt+0x93f4>
   1a4a0:	movw	r0, #1
   1a4a4:	str	r0, [sp, #4]
   1a4a8:	str	r0, [sp, #8]
   1a4ac:	ldr	r0, [sp, #4]
   1a4b0:	cmp	r0, #0
   1a4b4:	beq	1a4e8 <__assert_fail@plt+0x9430>
   1a4b8:	ldr	r0, [pc, #76]	; 1a50c <__assert_fail@plt+0x9454>
   1a4bc:	ldr	r1, [sp, #4]
   1a4c0:	udiv	r0, r0, r1
   1a4c4:	ldr	r1, [sp, #8]
   1a4c8:	cmp	r0, r1
   1a4cc:	bcs	1a4e8 <__assert_fail@plt+0x9430>
   1a4d0:	bl	10fec <__errno_location@plt>
   1a4d4:	movw	r1, #12
   1a4d8:	str	r1, [r0]
   1a4dc:	movw	r0, #0
   1a4e0:	str	r0, [fp, #-4]
   1a4e4:	b	1a500 <__assert_fail@plt+0x9448>
   1a4e8:	ldr	r0, [sp, #8]
   1a4ec:	ldr	r1, [sp, #4]
   1a4f0:	bl	10e48 <calloc@plt>
   1a4f4:	str	r0, [sp]
   1a4f8:	ldr	r0, [sp]
   1a4fc:	str	r0, [fp, #-4]
   1a500:	ldr	r0, [fp, #-4]
   1a504:	mov	sp, fp
   1a508:	pop	{fp, pc}
   1a50c:	svcvc	0x00ffffff
   1a510:	push	{fp, lr}
   1a514:	mov	fp, sp
   1a518:	sub	sp, sp, #16
   1a51c:	str	r0, [sp, #8]
   1a520:	ldr	r0, [sp, #8]
   1a524:	cmp	r0, #0
   1a528:	bne	1a534 <__assert_fail@plt+0x947c>
   1a52c:	movw	r0, #1
   1a530:	str	r0, [sp, #8]
   1a534:	ldr	r0, [pc, #64]	; 1a57c <__assert_fail@plt+0x94c4>
   1a538:	ldr	r1, [sp, #8]
   1a53c:	cmp	r0, r1
   1a540:	bcs	1a55c <__assert_fail@plt+0x94a4>
   1a544:	bl	10fec <__errno_location@plt>
   1a548:	movw	r1, #12
   1a54c:	str	r1, [r0]
   1a550:	movw	r0, #0
   1a554:	str	r0, [fp, #-4]
   1a558:	b	1a570 <__assert_fail@plt+0x94b8>
   1a55c:	ldr	r0, [sp, #8]
   1a560:	bl	10f68 <malloc@plt>
   1a564:	str	r0, [sp, #4]
   1a568:	ldr	r0, [sp, #4]
   1a56c:	str	r0, [fp, #-4]
   1a570:	ldr	r0, [fp, #-4]
   1a574:	mov	sp, fp
   1a578:	pop	{fp, pc}
   1a57c:	svcvc	0x00ffffff
   1a580:	push	{fp, lr}
   1a584:	mov	fp, sp
   1a588:	sub	sp, sp, #16
   1a58c:	str	r0, [sp, #8]
   1a590:	str	r1, [sp, #4]
   1a594:	ldr	r0, [sp, #8]
   1a598:	movw	r1, #0
   1a59c:	cmp	r0, r1
   1a5a0:	bne	1a5b4 <__assert_fail@plt+0x94fc>
   1a5a4:	ldr	r0, [sp, #4]
   1a5a8:	bl	1a510 <__assert_fail@plt+0x9458>
   1a5ac:	str	r0, [fp, #-4]
   1a5b0:	b	1a614 <__assert_fail@plt+0x955c>
   1a5b4:	ldr	r0, [sp, #4]
   1a5b8:	cmp	r0, #0
   1a5bc:	bne	1a5d4 <__assert_fail@plt+0x951c>
   1a5c0:	ldr	r0, [sp, #8]
   1a5c4:	bl	1a7ac <__assert_fail@plt+0x96f4>
   1a5c8:	movw	r0, #0
   1a5cc:	str	r0, [fp, #-4]
   1a5d0:	b	1a614 <__assert_fail@plt+0x955c>
   1a5d4:	ldr	r0, [pc, #68]	; 1a620 <__assert_fail@plt+0x9568>
   1a5d8:	ldr	r1, [sp, #4]
   1a5dc:	cmp	r0, r1
   1a5e0:	bcs	1a5fc <__assert_fail@plt+0x9544>
   1a5e4:	bl	10fec <__errno_location@plt>
   1a5e8:	movw	r1, #12
   1a5ec:	str	r1, [r0]
   1a5f0:	movw	r0, #0
   1a5f4:	str	r0, [fp, #-4]
   1a5f8:	b	1a614 <__assert_fail@plt+0x955c>
   1a5fc:	ldr	r0, [sp, #8]
   1a600:	ldr	r1, [sp, #4]
   1a604:	bl	10efc <realloc@plt>
   1a608:	str	r0, [sp]
   1a60c:	ldr	r0, [sp]
   1a610:	str	r0, [fp, #-4]
   1a614:	ldr	r0, [fp, #-4]
   1a618:	mov	sp, fp
   1a61c:	pop	{fp, pc}
   1a620:	svcvc	0x00ffffff
   1a624:	push	{fp, lr}
   1a628:	mov	fp, sp
   1a62c:	sub	sp, sp, #24
   1a630:	str	r0, [fp, #-8]
   1a634:	str	r1, [sp, #12]
   1a638:	ldr	r0, [fp, #-8]
   1a63c:	str	r0, [sp, #8]
   1a640:	ldr	r0, [sp, #12]
   1a644:	str	r0, [sp, #4]
   1a648:	ldr	r0, [sp, #8]
   1a64c:	ldr	r1, [sp, #4]
   1a650:	cmp	r0, r1
   1a654:	bne	1a664 <__assert_fail@plt+0x95ac>
   1a658:	movw	r0, #0
   1a65c:	str	r0, [fp, #-4]
   1a660:	b	1a6d0 <__assert_fail@plt+0x9618>
   1a664:	b	1a668 <__assert_fail@plt+0x95b0>
   1a668:	ldr	r0, [sp, #8]
   1a66c:	ldrb	r0, [r0]
   1a670:	bl	1c3c4 <__assert_fail@plt+0xb30c>
   1a674:	strb	r0, [sp, #3]
   1a678:	ldr	r0, [sp, #4]
   1a67c:	ldrb	r0, [r0]
   1a680:	bl	1c3c4 <__assert_fail@plt+0xb30c>
   1a684:	strb	r0, [sp, #2]
   1a688:	ldrb	r0, [sp, #3]
   1a68c:	cmp	r0, #0
   1a690:	bne	1a698 <__assert_fail@plt+0x95e0>
   1a694:	b	1a6c0 <__assert_fail@plt+0x9608>
   1a698:	ldr	r0, [sp, #8]
   1a69c:	add	r0, r0, #1
   1a6a0:	str	r0, [sp, #8]
   1a6a4:	ldr	r0, [sp, #4]
   1a6a8:	add	r0, r0, #1
   1a6ac:	str	r0, [sp, #4]
   1a6b0:	ldrb	r0, [sp, #3]
   1a6b4:	ldrb	r1, [sp, #2]
   1a6b8:	cmp	r0, r1
   1a6bc:	beq	1a668 <__assert_fail@plt+0x95b0>
   1a6c0:	ldrb	r0, [sp, #3]
   1a6c4:	ldrb	r1, [sp, #2]
   1a6c8:	sub	r0, r0, r1
   1a6cc:	str	r0, [fp, #-4]
   1a6d0:	ldr	r0, [fp, #-4]
   1a6d4:	mov	sp, fp
   1a6d8:	pop	{fp, pc}
   1a6dc:	push	{fp, lr}
   1a6e0:	mov	fp, sp
   1a6e4:	sub	sp, sp, #16
   1a6e8:	str	r0, [sp, #8]
   1a6ec:	ldr	r0, [sp, #8]
   1a6f0:	bl	10f38 <__fpending@plt>
   1a6f4:	cmp	r0, #0
   1a6f8:	movw	r0, #0
   1a6fc:	movne	r0, #1
   1a700:	and	r0, r0, #1
   1a704:	strb	r0, [sp, #7]
   1a708:	ldr	r0, [sp, #8]
   1a70c:	bl	10f44 <ferror_unlocked@plt>
   1a710:	cmp	r0, #0
   1a714:	movw	r0, #0
   1a718:	movne	r0, #1
   1a71c:	and	r0, r0, #1
   1a720:	strb	r0, [sp, #6]
   1a724:	ldr	r0, [sp, #8]
   1a728:	bl	1220c <__assert_fail@plt+0x1154>
   1a72c:	cmp	r0, #0
   1a730:	movw	r0, #0
   1a734:	movne	r0, #1
   1a738:	and	r0, r0, #1
   1a73c:	strb	r0, [sp, #5]
   1a740:	ldrb	r0, [sp, #6]
   1a744:	tst	r0, #1
   1a748:	bne	1a774 <__assert_fail@plt+0x96bc>
   1a74c:	ldrb	r0, [sp, #5]
   1a750:	tst	r0, #1
   1a754:	beq	1a798 <__assert_fail@plt+0x96e0>
   1a758:	ldrb	r0, [sp, #7]
   1a75c:	tst	r0, #1
   1a760:	bne	1a774 <__assert_fail@plt+0x96bc>
   1a764:	bl	10fec <__errno_location@plt>
   1a768:	ldr	r0, [r0]
   1a76c:	cmp	r0, #9
   1a770:	beq	1a798 <__assert_fail@plt+0x96e0>
   1a774:	ldrb	r0, [sp, #5]
   1a778:	tst	r0, #1
   1a77c:	bne	1a78c <__assert_fail@plt+0x96d4>
   1a780:	bl	10fec <__errno_location@plt>
   1a784:	movw	r1, #0
   1a788:	str	r1, [r0]
   1a78c:	mvn	r0, #0
   1a790:	str	r0, [fp, #-4]
   1a794:	b	1a7a0 <__assert_fail@plt+0x96e8>
   1a798:	movw	r0, #0
   1a79c:	str	r0, [fp, #-4]
   1a7a0:	ldr	r0, [fp, #-4]
   1a7a4:	mov	sp, fp
   1a7a8:	pop	{fp, pc}
   1a7ac:	push	{fp, lr}
   1a7b0:	mov	fp, sp
   1a7b4:	sub	sp, sp, #16
   1a7b8:	str	r0, [fp, #-4]
   1a7bc:	bl	10fec <__errno_location@plt>
   1a7c0:	ldr	r0, [r0]
   1a7c4:	str	r0, [sp, #8]
   1a7c8:	ldr	r0, [fp, #-4]
   1a7cc:	bl	10ea8 <free@plt>
   1a7d0:	ldr	r0, [sp, #8]
   1a7d4:	str	r0, [sp, #4]
   1a7d8:	bl	10fec <__errno_location@plt>
   1a7dc:	ldr	r1, [sp, #4]
   1a7e0:	str	r1, [r0]
   1a7e4:	mov	sp, fp
   1a7e8:	pop	{fp, pc}
   1a7ec:	push	{fp, lr}
   1a7f0:	mov	fp, sp
   1a7f4:	bl	10fec <__errno_location@plt>
   1a7f8:	movw	r1, #12
   1a7fc:	str	r1, [r0]
   1a800:	movw	r0, #0
   1a804:	pop	{fp, pc}
   1a808:	push	{fp, lr}
   1a80c:	mov	fp, sp
   1a810:	sub	sp, sp, #8
   1a814:	str	r0, [sp, #4]
   1a818:	ldr	r0, [sp, #4]
   1a81c:	cmn	r0, #1
   1a820:	bhi	1a834 <__assert_fail@plt+0x977c>
   1a824:	ldr	r0, [sp, #4]
   1a828:	bl	1a510 <__assert_fail@plt+0x9458>
   1a82c:	str	r0, [sp]
   1a830:	b	1a83c <__assert_fail@plt+0x9784>
   1a834:	bl	1a7ec <__assert_fail@plt+0x9734>
   1a838:	str	r0, [sp]
   1a83c:	ldr	r0, [sp]
   1a840:	mov	sp, fp
   1a844:	pop	{fp, pc}
   1a848:	push	{fp, lr}
   1a84c:	mov	fp, sp
   1a850:	sub	sp, sp, #16
   1a854:	str	r0, [fp, #-4]
   1a858:	str	r1, [sp, #8]
   1a85c:	ldr	r0, [sp, #8]
   1a860:	cmn	r0, #1
   1a864:	bhi	1a89c <__assert_fail@plt+0x97e4>
   1a868:	ldr	r0, [fp, #-4]
   1a86c:	ldr	r1, [sp, #8]
   1a870:	ldr	r2, [sp, #8]
   1a874:	cmp	r2, #0
   1a878:	movw	r2, #0
   1a87c:	movne	r2, #1
   1a880:	mvn	r3, #0
   1a884:	eor	r2, r2, r3
   1a888:	and	r2, r2, #1
   1a88c:	orr	r1, r1, r2
   1a890:	bl	1a580 <__assert_fail@plt+0x94c8>
   1a894:	str	r0, [sp, #4]
   1a898:	b	1a8a4 <__assert_fail@plt+0x97ec>
   1a89c:	bl	1a7ec <__assert_fail@plt+0x9734>
   1a8a0:	str	r0, [sp, #4]
   1a8a4:	ldr	r0, [sp, #4]
   1a8a8:	mov	sp, fp
   1a8ac:	pop	{fp, pc}
   1a8b0:	push	{fp, lr}
   1a8b4:	mov	fp, sp
   1a8b8:	sub	sp, sp, #16
   1a8bc:	str	r0, [sp, #8]
   1a8c0:	str	r1, [sp, #4]
   1a8c4:	ldr	r0, [sp, #8]
   1a8c8:	mvn	r1, #0
   1a8cc:	cmp	r1, r0
   1a8d0:	bcs	1a8f4 <__assert_fail@plt+0x983c>
   1a8d4:	ldr	r0, [sp, #4]
   1a8d8:	cmp	r0, #0
   1a8dc:	beq	1a8ec <__assert_fail@plt+0x9834>
   1a8e0:	bl	1a7ec <__assert_fail@plt+0x9734>
   1a8e4:	str	r0, [fp, #-4]
   1a8e8:	b	1a934 <__assert_fail@plt+0x987c>
   1a8ec:	movw	r0, #0
   1a8f0:	str	r0, [sp, #8]
   1a8f4:	ldr	r0, [sp, #4]
   1a8f8:	mvn	r1, #0
   1a8fc:	cmp	r1, r0
   1a900:	bcs	1a924 <__assert_fail@plt+0x986c>
   1a904:	ldr	r0, [sp, #8]
   1a908:	cmp	r0, #0
   1a90c:	beq	1a91c <__assert_fail@plt+0x9864>
   1a910:	bl	1a7ec <__assert_fail@plt+0x9734>
   1a914:	str	r0, [fp, #-4]
   1a918:	b	1a934 <__assert_fail@plt+0x987c>
   1a91c:	movw	r0, #0
   1a920:	str	r0, [sp, #4]
   1a924:	ldr	r0, [sp, #8]
   1a928:	ldr	r1, [sp, #4]
   1a92c:	bl	1a474 <__assert_fail@plt+0x93bc>
   1a930:	str	r0, [fp, #-4]
   1a934:	ldr	r0, [fp, #-4]
   1a938:	mov	sp, fp
   1a93c:	pop	{fp, pc}
   1a940:	push	{fp, lr}
   1a944:	mov	fp, sp
   1a948:	sub	sp, sp, #16
   1a94c:	str	r0, [fp, #-4]
   1a950:	str	r1, [sp, #8]
   1a954:	str	r2, [sp, #4]
   1a958:	ldr	r0, [sp, #8]
   1a95c:	cmp	r0, #0
   1a960:	beq	1a970 <__assert_fail@plt+0x98b8>
   1a964:	ldr	r0, [sp, #4]
   1a968:	cmp	r0, #0
   1a96c:	bne	1a97c <__assert_fail@plt+0x98c4>
   1a970:	movw	r0, #1
   1a974:	str	r0, [sp, #4]
   1a978:	str	r0, [sp, #8]
   1a97c:	ldr	r0, [sp, #8]
   1a980:	cmn	r0, #1
   1a984:	bhi	1a9ac <__assert_fail@plt+0x98f4>
   1a988:	ldr	r0, [sp, #4]
   1a98c:	cmn	r0, #1
   1a990:	bhi	1a9ac <__assert_fail@plt+0x98f4>
   1a994:	ldr	r0, [fp, #-4]
   1a998:	ldr	r1, [sp, #8]
   1a99c:	ldr	r2, [sp, #4]
   1a9a0:	bl	1aacc <__assert_fail@plt+0x9a14>
   1a9a4:	str	r0, [sp]
   1a9a8:	b	1a9b4 <__assert_fail@plt+0x98fc>
   1a9ac:	bl	1a7ec <__assert_fail@plt+0x9734>
   1a9b0:	str	r0, [sp]
   1a9b4:	ldr	r0, [sp]
   1a9b8:	mov	sp, fp
   1a9bc:	pop	{fp, pc}
   1a9c0:	push	{fp, lr}
   1a9c4:	mov	fp, sp
   1a9c8:	sub	sp, sp, #8
   1a9cc:	movw	r0, #14
   1a9d0:	bl	11058 <nl_langinfo@plt>
   1a9d4:	str	r0, [sp, #4]
   1a9d8:	ldr	r0, [sp, #4]
   1a9dc:	movw	r1, #0
   1a9e0:	cmp	r0, r1
   1a9e4:	bne	1a9f4 <__assert_fail@plt+0x993c>
   1a9e8:	movw	r0, #52380	; 0xcc9c
   1a9ec:	movt	r0, #1
   1a9f0:	str	r0, [sp, #4]
   1a9f4:	ldr	r0, [sp, #4]
   1a9f8:	ldrb	r0, [r0]
   1a9fc:	cmp	r0, #0
   1aa00:	bne	1aa10 <__assert_fail@plt+0x9958>
   1aa04:	movw	r0, #53838	; 0xd24e
   1aa08:	movt	r0, #1
   1aa0c:	str	r0, [sp, #4]
   1aa10:	ldr	r0, [sp, #4]
   1aa14:	mov	sp, fp
   1aa18:	pop	{fp, pc}
   1aa1c:	push	{fp, lr}
   1aa20:	mov	fp, sp
   1aa24:	sub	sp, sp, #32
   1aa28:	str	r0, [fp, #-8]
   1aa2c:	str	r1, [fp, #-12]
   1aa30:	str	r2, [sp, #16]
   1aa34:	str	r3, [sp, #12]
   1aa38:	ldr	r0, [fp, #-8]
   1aa3c:	movw	r1, #0
   1aa40:	cmp	r0, r1
   1aa44:	bne	1aa50 <__assert_fail@plt+0x9998>
   1aa48:	add	r0, sp, #4
   1aa4c:	str	r0, [fp, #-8]
   1aa50:	ldr	r0, [fp, #-8]
   1aa54:	ldr	r1, [fp, #-12]
   1aa58:	ldr	r2, [sp, #16]
   1aa5c:	ldr	r3, [sp, #12]
   1aa60:	bl	10f50 <mbrtowc@plt>
   1aa64:	str	r0, [sp, #8]
   1aa68:	ldr	r0, [sp, #8]
   1aa6c:	mvn	r1, #1
   1aa70:	cmp	r1, r0
   1aa74:	bhi	1aab8 <__assert_fail@plt+0x9a00>
   1aa78:	ldr	r0, [sp, #16]
   1aa7c:	cmp	r0, #0
   1aa80:	beq	1aab8 <__assert_fail@plt+0x9a00>
   1aa84:	movw	r0, #0
   1aa88:	bl	1c44c <__assert_fail@plt+0xb394>
   1aa8c:	tst	r0, #1
   1aa90:	bne	1aab8 <__assert_fail@plt+0x9a00>
   1aa94:	ldr	r0, [fp, #-12]
   1aa98:	ldrb	r0, [r0]
   1aa9c:	strb	r0, [sp, #3]
   1aaa0:	ldrb	r0, [sp, #3]
   1aaa4:	ldr	r1, [fp, #-8]
   1aaa8:	str	r0, [r1]
   1aaac:	movw	r0, #1
   1aab0:	str	r0, [fp, #-4]
   1aab4:	b	1aac0 <__assert_fail@plt+0x9a08>
   1aab8:	ldr	r0, [sp, #8]
   1aabc:	str	r0, [fp, #-4]
   1aac0:	ldr	r0, [fp, #-4]
   1aac4:	mov	sp, fp
   1aac8:	pop	{fp, pc}
   1aacc:	push	{fp, lr}
   1aad0:	mov	fp, sp
   1aad4:	sub	sp, sp, #96	; 0x60
   1aad8:	str	r0, [fp, #-8]
   1aadc:	str	r1, [fp, #-12]
   1aae0:	str	r2, [fp, #-16]
   1aae4:	b	1ae9c <__assert_fail@plt+0x9de4>
   1aae8:	b	1acbc <__assert_fail@plt+0x9c04>
   1aaec:	ldr	r0, [fp, #-16]
   1aaf0:	cmp	r0, #0
   1aaf4:	bcs	1abf8 <__assert_fail@plt+0x9b40>
   1aaf8:	ldr	r0, [fp, #-12]
   1aafc:	cmp	r0, #0
   1ab00:	bcs	1ab88 <__assert_fail@plt+0x9ad0>
   1ab04:	b	1ab24 <__assert_fail@plt+0x9a6c>
   1ab08:	ldr	r0, [fp, #-12]
   1ab0c:	ldr	r1, [fp, #-16]
   1ab10:	movw	r2, #127	; 0x7f
   1ab14:	udiv	r1, r2, r1
   1ab18:	cmp	r0, r1
   1ab1c:	bcc	1ac8c <__assert_fail@plt+0x9bd4>
   1ab20:	b	1aca4 <__assert_fail@plt+0x9bec>
   1ab24:	b	1ab38 <__assert_fail@plt+0x9a80>
   1ab28:	ldr	r0, [fp, #-16]
   1ab2c:	cmp	r0, #1
   1ab30:	bcc	1ab48 <__assert_fail@plt+0x9a90>
   1ab34:	b	1ab54 <__assert_fail@plt+0x9a9c>
   1ab38:	ldr	r0, [fp, #-16]
   1ab3c:	movw	r1, #0
   1ab40:	cmp	r1, r0
   1ab44:	bcs	1ab54 <__assert_fail@plt+0x9a9c>
   1ab48:	movw	r0, #0
   1ab4c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ab50:	b	1ab6c <__assert_fail@plt+0x9ab4>
   1ab54:	ldr	r0, [fp, #-16]
   1ab58:	movw	r1, #0
   1ab5c:	sub	r0, r1, r0
   1ab60:	movw	r1, #127	; 0x7f
   1ab64:	udiv	r0, r1, r0
   1ab68:	str	r0, [fp, #-24]	; 0xffffffe8
   1ab6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab70:	ldr	r1, [fp, #-12]
   1ab74:	mvn	r2, #0
   1ab78:	sub	r1, r2, r1
   1ab7c:	cmp	r0, r1
   1ab80:	bls	1ac8c <__assert_fail@plt+0x9bd4>
   1ab84:	b	1aca4 <__assert_fail@plt+0x9bec>
   1ab88:	ldr	r0, [fp, #-16]
   1ab8c:	cmn	r0, #1
   1ab90:	bne	1abdc <__assert_fail@plt+0x9b24>
   1ab94:	b	1abb4 <__assert_fail@plt+0x9afc>
   1ab98:	ldr	r0, [fp, #-12]
   1ab9c:	mvn	r1, #127	; 0x7f
   1aba0:	add	r0, r0, r1
   1aba4:	movw	r1, #0
   1aba8:	cmp	r1, r0
   1abac:	bcc	1ac8c <__assert_fail@plt+0x9bd4>
   1abb0:	b	1aca4 <__assert_fail@plt+0x9bec>
   1abb4:	ldr	r0, [fp, #-12]
   1abb8:	movw	r1, #0
   1abbc:	cmp	r1, r0
   1abc0:	bcs	1aca4 <__assert_fail@plt+0x9bec>
   1abc4:	ldr	r0, [fp, #-12]
   1abc8:	sub	r0, r0, #1
   1abcc:	movw	r1, #127	; 0x7f
   1abd0:	cmp	r1, r0
   1abd4:	bcc	1ac8c <__assert_fail@plt+0x9bd4>
   1abd8:	b	1aca4 <__assert_fail@plt+0x9bec>
   1abdc:	ldr	r0, [fp, #-16]
   1abe0:	mvn	r1, #127	; 0x7f
   1abe4:	udiv	r0, r1, r0
   1abe8:	ldr	r1, [fp, #-12]
   1abec:	cmp	r0, r1
   1abf0:	bcc	1ac8c <__assert_fail@plt+0x9bd4>
   1abf4:	b	1aca4 <__assert_fail@plt+0x9bec>
   1abf8:	ldr	r0, [fp, #-16]
   1abfc:	cmp	r0, #0
   1ac00:	bne	1ac08 <__assert_fail@plt+0x9b50>
   1ac04:	b	1aca4 <__assert_fail@plt+0x9bec>
   1ac08:	ldr	r0, [fp, #-12]
   1ac0c:	cmp	r0, #0
   1ac10:	bcs	1ac74 <__assert_fail@plt+0x9bbc>
   1ac14:	ldr	r0, [fp, #-12]
   1ac18:	cmn	r0, #1
   1ac1c:	bne	1ac58 <__assert_fail@plt+0x9ba0>
   1ac20:	b	1ac40 <__assert_fail@plt+0x9b88>
   1ac24:	ldr	r0, [fp, #-16]
   1ac28:	mvn	r1, #127	; 0x7f
   1ac2c:	add	r0, r0, r1
   1ac30:	movw	r1, #0
   1ac34:	cmp	r1, r0
   1ac38:	bcc	1ac8c <__assert_fail@plt+0x9bd4>
   1ac3c:	b	1aca4 <__assert_fail@plt+0x9bec>
   1ac40:	ldr	r0, [fp, #-16]
   1ac44:	sub	r0, r0, #1
   1ac48:	movw	r1, #127	; 0x7f
   1ac4c:	cmp	r1, r0
   1ac50:	bcc	1ac8c <__assert_fail@plt+0x9bd4>
   1ac54:	b	1aca4 <__assert_fail@plt+0x9bec>
   1ac58:	ldr	r0, [fp, #-12]
   1ac5c:	mvn	r1, #127	; 0x7f
   1ac60:	udiv	r0, r1, r0
   1ac64:	ldr	r1, [fp, #-16]
   1ac68:	cmp	r0, r1
   1ac6c:	bcc	1ac8c <__assert_fail@plt+0x9bd4>
   1ac70:	b	1aca4 <__assert_fail@plt+0x9bec>
   1ac74:	ldr	r0, [fp, #-16]
   1ac78:	movw	r1, #127	; 0x7f
   1ac7c:	udiv	r0, r1, r0
   1ac80:	ldr	r1, [fp, #-12]
   1ac84:	cmp	r0, r1
   1ac88:	bcs	1aca4 <__assert_fail@plt+0x9bec>
   1ac8c:	ldr	r0, [fp, #-12]
   1ac90:	ldr	r1, [fp, #-16]
   1ac94:	mul	r0, r0, r1
   1ac98:	sxtb	r0, r0
   1ac9c:	str	r0, [fp, #-20]	; 0xffffffec
   1aca0:	b	1bdcc <__assert_fail@plt+0xad14>
   1aca4:	ldr	r0, [fp, #-12]
   1aca8:	ldr	r1, [fp, #-16]
   1acac:	mul	r0, r0, r1
   1acb0:	sxtb	r0, r0
   1acb4:	str	r0, [fp, #-20]	; 0xffffffec
   1acb8:	b	1bde4 <__assert_fail@plt+0xad2c>
   1acbc:	ldr	r0, [fp, #-16]
   1acc0:	cmp	r0, #0
   1acc4:	bcs	1add0 <__assert_fail@plt+0x9d18>
   1acc8:	ldr	r0, [fp, #-12]
   1accc:	cmp	r0, #0
   1acd0:	bcs	1ad58 <__assert_fail@plt+0x9ca0>
   1acd4:	b	1acf4 <__assert_fail@plt+0x9c3c>
   1acd8:	ldr	r0, [fp, #-12]
   1acdc:	ldr	r1, [fp, #-16]
   1ace0:	movw	r2, #255	; 0xff
   1ace4:	udiv	r1, r2, r1
   1ace8:	cmp	r0, r1
   1acec:	bcc	1ae6c <__assert_fail@plt+0x9db4>
   1acf0:	b	1ae84 <__assert_fail@plt+0x9dcc>
   1acf4:	b	1ad08 <__assert_fail@plt+0x9c50>
   1acf8:	ldr	r0, [fp, #-16]
   1acfc:	cmp	r0, #1
   1ad00:	bcc	1ad18 <__assert_fail@plt+0x9c60>
   1ad04:	b	1ad24 <__assert_fail@plt+0x9c6c>
   1ad08:	ldr	r0, [fp, #-16]
   1ad0c:	movw	r1, #0
   1ad10:	cmp	r1, r0
   1ad14:	bcs	1ad24 <__assert_fail@plt+0x9c6c>
   1ad18:	movw	r0, #0
   1ad1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ad20:	b	1ad3c <__assert_fail@plt+0x9c84>
   1ad24:	ldr	r0, [fp, #-16]
   1ad28:	movw	r1, #0
   1ad2c:	sub	r0, r1, r0
   1ad30:	movw	r1, #255	; 0xff
   1ad34:	udiv	r0, r1, r0
   1ad38:	str	r0, [fp, #-28]	; 0xffffffe4
   1ad3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ad40:	ldr	r1, [fp, #-12]
   1ad44:	mvn	r2, #0
   1ad48:	sub	r1, r2, r1
   1ad4c:	cmp	r0, r1
   1ad50:	bls	1ae6c <__assert_fail@plt+0x9db4>
   1ad54:	b	1ae84 <__assert_fail@plt+0x9dcc>
   1ad58:	b	1ad60 <__assert_fail@plt+0x9ca8>
   1ad5c:	b	1ad64 <__assert_fail@plt+0x9cac>
   1ad60:	b	1adb4 <__assert_fail@plt+0x9cfc>
   1ad64:	ldr	r0, [fp, #-16]
   1ad68:	cmn	r0, #1
   1ad6c:	bne	1adb4 <__assert_fail@plt+0x9cfc>
   1ad70:	b	1ad8c <__assert_fail@plt+0x9cd4>
   1ad74:	ldr	r0, [fp, #-12]
   1ad78:	add	r0, r0, #0
   1ad7c:	movw	r1, #0
   1ad80:	cmp	r1, r0
   1ad84:	bcc	1ae6c <__assert_fail@plt+0x9db4>
   1ad88:	b	1ae84 <__assert_fail@plt+0x9dcc>
   1ad8c:	ldr	r0, [fp, #-12]
   1ad90:	movw	r1, #0
   1ad94:	cmp	r1, r0
   1ad98:	bcs	1ae84 <__assert_fail@plt+0x9dcc>
   1ad9c:	ldr	r0, [fp, #-12]
   1ada0:	sub	r0, r0, #1
   1ada4:	mvn	r1, #0
   1ada8:	cmp	r1, r0
   1adac:	bcc	1ae6c <__assert_fail@plt+0x9db4>
   1adb0:	b	1ae84 <__assert_fail@plt+0x9dcc>
   1adb4:	ldr	r0, [fp, #-16]
   1adb8:	movw	r1, #0
   1adbc:	udiv	r0, r1, r0
   1adc0:	ldr	r1, [fp, #-12]
   1adc4:	cmp	r0, r1
   1adc8:	bcc	1ae6c <__assert_fail@plt+0x9db4>
   1adcc:	b	1ae84 <__assert_fail@plt+0x9dcc>
   1add0:	ldr	r0, [fp, #-16]
   1add4:	cmp	r0, #0
   1add8:	bne	1ade0 <__assert_fail@plt+0x9d28>
   1addc:	b	1ae84 <__assert_fail@plt+0x9dcc>
   1ade0:	ldr	r0, [fp, #-12]
   1ade4:	cmp	r0, #0
   1ade8:	bcs	1ae54 <__assert_fail@plt+0x9d9c>
   1adec:	b	1adf4 <__assert_fail@plt+0x9d3c>
   1adf0:	b	1adf8 <__assert_fail@plt+0x9d40>
   1adf4:	b	1ae38 <__assert_fail@plt+0x9d80>
   1adf8:	ldr	r0, [fp, #-12]
   1adfc:	cmn	r0, #1
   1ae00:	bne	1ae38 <__assert_fail@plt+0x9d80>
   1ae04:	b	1ae20 <__assert_fail@plt+0x9d68>
   1ae08:	ldr	r0, [fp, #-16]
   1ae0c:	add	r0, r0, #0
   1ae10:	movw	r1, #0
   1ae14:	cmp	r1, r0
   1ae18:	bcc	1ae6c <__assert_fail@plt+0x9db4>
   1ae1c:	b	1ae84 <__assert_fail@plt+0x9dcc>
   1ae20:	ldr	r0, [fp, #-16]
   1ae24:	sub	r0, r0, #1
   1ae28:	mvn	r1, #0
   1ae2c:	cmp	r1, r0
   1ae30:	bcc	1ae6c <__assert_fail@plt+0x9db4>
   1ae34:	b	1ae84 <__assert_fail@plt+0x9dcc>
   1ae38:	ldr	r0, [fp, #-12]
   1ae3c:	movw	r1, #0
   1ae40:	udiv	r0, r1, r0
   1ae44:	ldr	r1, [fp, #-16]
   1ae48:	cmp	r0, r1
   1ae4c:	bcc	1ae6c <__assert_fail@plt+0x9db4>
   1ae50:	b	1ae84 <__assert_fail@plt+0x9dcc>
   1ae54:	ldr	r0, [fp, #-16]
   1ae58:	movw	r1, #255	; 0xff
   1ae5c:	udiv	r0, r1, r0
   1ae60:	ldr	r1, [fp, #-12]
   1ae64:	cmp	r0, r1
   1ae68:	bcs	1ae84 <__assert_fail@plt+0x9dcc>
   1ae6c:	ldr	r0, [fp, #-12]
   1ae70:	ldr	r1, [fp, #-16]
   1ae74:	mul	r0, r0, r1
   1ae78:	and	r0, r0, #255	; 0xff
   1ae7c:	str	r0, [fp, #-20]	; 0xffffffec
   1ae80:	b	1bdcc <__assert_fail@plt+0xad14>
   1ae84:	ldr	r0, [fp, #-12]
   1ae88:	ldr	r1, [fp, #-16]
   1ae8c:	mul	r0, r0, r1
   1ae90:	and	r0, r0, #255	; 0xff
   1ae94:	str	r0, [fp, #-20]	; 0xffffffec
   1ae98:	b	1bde4 <__assert_fail@plt+0xad2c>
   1ae9c:	b	1b254 <__assert_fail@plt+0xa19c>
   1aea0:	b	1b074 <__assert_fail@plt+0x9fbc>
   1aea4:	ldr	r0, [fp, #-16]
   1aea8:	cmp	r0, #0
   1aeac:	bcs	1afb0 <__assert_fail@plt+0x9ef8>
   1aeb0:	ldr	r0, [fp, #-12]
   1aeb4:	cmp	r0, #0
   1aeb8:	bcs	1af40 <__assert_fail@plt+0x9e88>
   1aebc:	b	1aedc <__assert_fail@plt+0x9e24>
   1aec0:	ldr	r0, [fp, #-12]
   1aec4:	ldr	r1, [fp, #-16]
   1aec8:	movw	r2, #32767	; 0x7fff
   1aecc:	udiv	r1, r2, r1
   1aed0:	cmp	r0, r1
   1aed4:	bcc	1b044 <__assert_fail@plt+0x9f8c>
   1aed8:	b	1b05c <__assert_fail@plt+0x9fa4>
   1aedc:	b	1aef0 <__assert_fail@plt+0x9e38>
   1aee0:	ldr	r0, [fp, #-16]
   1aee4:	cmp	r0, #1
   1aee8:	bcc	1af00 <__assert_fail@plt+0x9e48>
   1aeec:	b	1af0c <__assert_fail@plt+0x9e54>
   1aef0:	ldr	r0, [fp, #-16]
   1aef4:	movw	r1, #0
   1aef8:	cmp	r1, r0
   1aefc:	bcs	1af0c <__assert_fail@plt+0x9e54>
   1af00:	movw	r0, #0
   1af04:	str	r0, [fp, #-32]	; 0xffffffe0
   1af08:	b	1af24 <__assert_fail@plt+0x9e6c>
   1af0c:	ldr	r0, [fp, #-16]
   1af10:	movw	r1, #0
   1af14:	sub	r0, r1, r0
   1af18:	movw	r1, #32767	; 0x7fff
   1af1c:	udiv	r0, r1, r0
   1af20:	str	r0, [fp, #-32]	; 0xffffffe0
   1af24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1af28:	ldr	r1, [fp, #-12]
   1af2c:	mvn	r2, #0
   1af30:	sub	r1, r2, r1
   1af34:	cmp	r0, r1
   1af38:	bls	1b044 <__assert_fail@plt+0x9f8c>
   1af3c:	b	1b05c <__assert_fail@plt+0x9fa4>
   1af40:	ldr	r0, [fp, #-16]
   1af44:	cmn	r0, #1
   1af48:	bne	1af94 <__assert_fail@plt+0x9edc>
   1af4c:	b	1af6c <__assert_fail@plt+0x9eb4>
   1af50:	ldr	r0, [pc, #3760]	; 1be08 <__assert_fail@plt+0xad50>
   1af54:	ldr	r1, [fp, #-12]
   1af58:	add	r0, r1, r0
   1af5c:	movw	r1, #0
   1af60:	cmp	r1, r0
   1af64:	bcc	1b044 <__assert_fail@plt+0x9f8c>
   1af68:	b	1b05c <__assert_fail@plt+0x9fa4>
   1af6c:	ldr	r0, [fp, #-12]
   1af70:	movw	r1, #0
   1af74:	cmp	r1, r0
   1af78:	bcs	1b05c <__assert_fail@plt+0x9fa4>
   1af7c:	ldr	r0, [fp, #-12]
   1af80:	sub	r0, r0, #1
   1af84:	movw	r1, #32767	; 0x7fff
   1af88:	cmp	r1, r0
   1af8c:	bcc	1b044 <__assert_fail@plt+0x9f8c>
   1af90:	b	1b05c <__assert_fail@plt+0x9fa4>
   1af94:	ldr	r0, [pc, #3692]	; 1be08 <__assert_fail@plt+0xad50>
   1af98:	ldr	r1, [fp, #-16]
   1af9c:	udiv	r0, r0, r1
   1afa0:	ldr	r1, [fp, #-12]
   1afa4:	cmp	r0, r1
   1afa8:	bcc	1b044 <__assert_fail@plt+0x9f8c>
   1afac:	b	1b05c <__assert_fail@plt+0x9fa4>
   1afb0:	ldr	r0, [fp, #-16]
   1afb4:	cmp	r0, #0
   1afb8:	bne	1afc0 <__assert_fail@plt+0x9f08>
   1afbc:	b	1b05c <__assert_fail@plt+0x9fa4>
   1afc0:	ldr	r0, [fp, #-12]
   1afc4:	cmp	r0, #0
   1afc8:	bcs	1b02c <__assert_fail@plt+0x9f74>
   1afcc:	ldr	r0, [fp, #-12]
   1afd0:	cmn	r0, #1
   1afd4:	bne	1b010 <__assert_fail@plt+0x9f58>
   1afd8:	b	1aff8 <__assert_fail@plt+0x9f40>
   1afdc:	ldr	r0, [pc, #3620]	; 1be08 <__assert_fail@plt+0xad50>
   1afe0:	ldr	r1, [fp, #-16]
   1afe4:	add	r0, r1, r0
   1afe8:	movw	r1, #0
   1afec:	cmp	r1, r0
   1aff0:	bcc	1b044 <__assert_fail@plt+0x9f8c>
   1aff4:	b	1b05c <__assert_fail@plt+0x9fa4>
   1aff8:	ldr	r0, [fp, #-16]
   1affc:	sub	r0, r0, #1
   1b000:	movw	r1, #32767	; 0x7fff
   1b004:	cmp	r1, r0
   1b008:	bcc	1b044 <__assert_fail@plt+0x9f8c>
   1b00c:	b	1b05c <__assert_fail@plt+0x9fa4>
   1b010:	ldr	r0, [pc, #3568]	; 1be08 <__assert_fail@plt+0xad50>
   1b014:	ldr	r1, [fp, #-12]
   1b018:	udiv	r0, r0, r1
   1b01c:	ldr	r1, [fp, #-16]
   1b020:	cmp	r0, r1
   1b024:	bcc	1b044 <__assert_fail@plt+0x9f8c>
   1b028:	b	1b05c <__assert_fail@plt+0x9fa4>
   1b02c:	ldr	r0, [fp, #-16]
   1b030:	movw	r1, #32767	; 0x7fff
   1b034:	udiv	r0, r1, r0
   1b038:	ldr	r1, [fp, #-12]
   1b03c:	cmp	r0, r1
   1b040:	bcs	1b05c <__assert_fail@plt+0x9fa4>
   1b044:	ldr	r0, [fp, #-12]
   1b048:	ldr	r1, [fp, #-16]
   1b04c:	mul	r0, r0, r1
   1b050:	sxth	r0, r0
   1b054:	str	r0, [fp, #-20]	; 0xffffffec
   1b058:	b	1bdcc <__assert_fail@plt+0xad14>
   1b05c:	ldr	r0, [fp, #-12]
   1b060:	ldr	r1, [fp, #-16]
   1b064:	mul	r0, r0, r1
   1b068:	sxth	r0, r0
   1b06c:	str	r0, [fp, #-20]	; 0xffffffec
   1b070:	b	1bde4 <__assert_fail@plt+0xad2c>
   1b074:	ldr	r0, [fp, #-16]
   1b078:	cmp	r0, #0
   1b07c:	bcs	1b188 <__assert_fail@plt+0xa0d0>
   1b080:	ldr	r0, [fp, #-12]
   1b084:	cmp	r0, #0
   1b088:	bcs	1b110 <__assert_fail@plt+0xa058>
   1b08c:	b	1b0ac <__assert_fail@plt+0x9ff4>
   1b090:	ldr	r0, [fp, #-12]
   1b094:	ldr	r1, [fp, #-16]
   1b098:	movw	r2, #65535	; 0xffff
   1b09c:	udiv	r1, r2, r1
   1b0a0:	cmp	r0, r1
   1b0a4:	bcc	1b224 <__assert_fail@plt+0xa16c>
   1b0a8:	b	1b23c <__assert_fail@plt+0xa184>
   1b0ac:	b	1b0c0 <__assert_fail@plt+0xa008>
   1b0b0:	ldr	r0, [fp, #-16]
   1b0b4:	cmp	r0, #1
   1b0b8:	bcc	1b0d0 <__assert_fail@plt+0xa018>
   1b0bc:	b	1b0dc <__assert_fail@plt+0xa024>
   1b0c0:	ldr	r0, [fp, #-16]
   1b0c4:	movw	r1, #0
   1b0c8:	cmp	r1, r0
   1b0cc:	bcs	1b0dc <__assert_fail@plt+0xa024>
   1b0d0:	movw	r0, #0
   1b0d4:	str	r0, [fp, #-36]	; 0xffffffdc
   1b0d8:	b	1b0f4 <__assert_fail@plt+0xa03c>
   1b0dc:	ldr	r0, [fp, #-16]
   1b0e0:	movw	r1, #0
   1b0e4:	sub	r0, r1, r0
   1b0e8:	movw	r1, #65535	; 0xffff
   1b0ec:	udiv	r0, r1, r0
   1b0f0:	str	r0, [fp, #-36]	; 0xffffffdc
   1b0f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b0f8:	ldr	r1, [fp, #-12]
   1b0fc:	mvn	r2, #0
   1b100:	sub	r1, r2, r1
   1b104:	cmp	r0, r1
   1b108:	bls	1b224 <__assert_fail@plt+0xa16c>
   1b10c:	b	1b23c <__assert_fail@plt+0xa184>
   1b110:	b	1b118 <__assert_fail@plt+0xa060>
   1b114:	b	1b11c <__assert_fail@plt+0xa064>
   1b118:	b	1b16c <__assert_fail@plt+0xa0b4>
   1b11c:	ldr	r0, [fp, #-16]
   1b120:	cmn	r0, #1
   1b124:	bne	1b16c <__assert_fail@plt+0xa0b4>
   1b128:	b	1b144 <__assert_fail@plt+0xa08c>
   1b12c:	ldr	r0, [fp, #-12]
   1b130:	add	r0, r0, #0
   1b134:	movw	r1, #0
   1b138:	cmp	r1, r0
   1b13c:	bcc	1b224 <__assert_fail@plt+0xa16c>
   1b140:	b	1b23c <__assert_fail@plt+0xa184>
   1b144:	ldr	r0, [fp, #-12]
   1b148:	movw	r1, #0
   1b14c:	cmp	r1, r0
   1b150:	bcs	1b23c <__assert_fail@plt+0xa184>
   1b154:	ldr	r0, [fp, #-12]
   1b158:	sub	r0, r0, #1
   1b15c:	mvn	r1, #0
   1b160:	cmp	r1, r0
   1b164:	bcc	1b224 <__assert_fail@plt+0xa16c>
   1b168:	b	1b23c <__assert_fail@plt+0xa184>
   1b16c:	ldr	r0, [fp, #-16]
   1b170:	movw	r1, #0
   1b174:	udiv	r0, r1, r0
   1b178:	ldr	r1, [fp, #-12]
   1b17c:	cmp	r0, r1
   1b180:	bcc	1b224 <__assert_fail@plt+0xa16c>
   1b184:	b	1b23c <__assert_fail@plt+0xa184>
   1b188:	ldr	r0, [fp, #-16]
   1b18c:	cmp	r0, #0
   1b190:	bne	1b198 <__assert_fail@plt+0xa0e0>
   1b194:	b	1b23c <__assert_fail@plt+0xa184>
   1b198:	ldr	r0, [fp, #-12]
   1b19c:	cmp	r0, #0
   1b1a0:	bcs	1b20c <__assert_fail@plt+0xa154>
   1b1a4:	b	1b1ac <__assert_fail@plt+0xa0f4>
   1b1a8:	b	1b1b0 <__assert_fail@plt+0xa0f8>
   1b1ac:	b	1b1f0 <__assert_fail@plt+0xa138>
   1b1b0:	ldr	r0, [fp, #-12]
   1b1b4:	cmn	r0, #1
   1b1b8:	bne	1b1f0 <__assert_fail@plt+0xa138>
   1b1bc:	b	1b1d8 <__assert_fail@plt+0xa120>
   1b1c0:	ldr	r0, [fp, #-16]
   1b1c4:	add	r0, r0, #0
   1b1c8:	movw	r1, #0
   1b1cc:	cmp	r1, r0
   1b1d0:	bcc	1b224 <__assert_fail@plt+0xa16c>
   1b1d4:	b	1b23c <__assert_fail@plt+0xa184>
   1b1d8:	ldr	r0, [fp, #-16]
   1b1dc:	sub	r0, r0, #1
   1b1e0:	mvn	r1, #0
   1b1e4:	cmp	r1, r0
   1b1e8:	bcc	1b224 <__assert_fail@plt+0xa16c>
   1b1ec:	b	1b23c <__assert_fail@plt+0xa184>
   1b1f0:	ldr	r0, [fp, #-12]
   1b1f4:	movw	r1, #0
   1b1f8:	udiv	r0, r1, r0
   1b1fc:	ldr	r1, [fp, #-16]
   1b200:	cmp	r0, r1
   1b204:	bcc	1b224 <__assert_fail@plt+0xa16c>
   1b208:	b	1b23c <__assert_fail@plt+0xa184>
   1b20c:	ldr	r0, [fp, #-16]
   1b210:	movw	r1, #65535	; 0xffff
   1b214:	udiv	r0, r1, r0
   1b218:	ldr	r1, [fp, #-12]
   1b21c:	cmp	r0, r1
   1b220:	bcs	1b23c <__assert_fail@plt+0xa184>
   1b224:	ldr	r0, [fp, #-12]
   1b228:	ldr	r1, [fp, #-16]
   1b22c:	mul	r0, r0, r1
   1b230:	uxth	r0, r0
   1b234:	str	r0, [fp, #-20]	; 0xffffffec
   1b238:	b	1bdcc <__assert_fail@plt+0xad14>
   1b23c:	ldr	r0, [fp, #-12]
   1b240:	ldr	r1, [fp, #-16]
   1b244:	mul	r0, r0, r1
   1b248:	uxth	r0, r0
   1b24c:	str	r0, [fp, #-20]	; 0xffffffec
   1b250:	b	1bde4 <__assert_fail@plt+0xad2c>
   1b254:	b	1b258 <__assert_fail@plt+0xa1a0>
   1b258:	b	1b41c <__assert_fail@plt+0xa364>
   1b25c:	ldr	r0, [fp, #-16]
   1b260:	cmp	r0, #0
   1b264:	bcs	1b364 <__assert_fail@plt+0xa2ac>
   1b268:	ldr	r0, [fp, #-12]
   1b26c:	cmp	r0, #0
   1b270:	bcs	1b2f8 <__assert_fail@plt+0xa240>
   1b274:	b	1b294 <__assert_fail@plt+0xa1dc>
   1b278:	ldr	r0, [pc, #2944]	; 1be00 <__assert_fail@plt+0xad48>
   1b27c:	ldr	r1, [fp, #-12]
   1b280:	ldr	r2, [fp, #-16]
   1b284:	udiv	r0, r0, r2
   1b288:	cmp	r1, r0
   1b28c:	bcc	1b3f4 <__assert_fail@plt+0xa33c>
   1b290:	b	1b408 <__assert_fail@plt+0xa350>
   1b294:	b	1b2a8 <__assert_fail@plt+0xa1f0>
   1b298:	ldr	r0, [fp, #-16]
   1b29c:	cmp	r0, #1
   1b2a0:	bcc	1b2b8 <__assert_fail@plt+0xa200>
   1b2a4:	b	1b2c4 <__assert_fail@plt+0xa20c>
   1b2a8:	ldr	r0, [fp, #-16]
   1b2ac:	movw	r1, #0
   1b2b0:	cmp	r1, r0
   1b2b4:	bcs	1b2c4 <__assert_fail@plt+0xa20c>
   1b2b8:	movw	r0, #0
   1b2bc:	str	r0, [fp, #-40]	; 0xffffffd8
   1b2c0:	b	1b2dc <__assert_fail@plt+0xa224>
   1b2c4:	ldr	r0, [pc, #2868]	; 1be00 <__assert_fail@plt+0xad48>
   1b2c8:	ldr	r1, [fp, #-16]
   1b2cc:	movw	r2, #0
   1b2d0:	sub	r1, r2, r1
   1b2d4:	udiv	r0, r0, r1
   1b2d8:	str	r0, [fp, #-40]	; 0xffffffd8
   1b2dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b2e0:	ldr	r1, [fp, #-12]
   1b2e4:	mvn	r2, #0
   1b2e8:	sub	r1, r2, r1
   1b2ec:	cmp	r0, r1
   1b2f0:	bls	1b3f4 <__assert_fail@plt+0xa33c>
   1b2f4:	b	1b408 <__assert_fail@plt+0xa350>
   1b2f8:	ldr	r0, [fp, #-16]
   1b2fc:	cmn	r0, #1
   1b300:	bne	1b348 <__assert_fail@plt+0xa290>
   1b304:	b	1b320 <__assert_fail@plt+0xa268>
   1b308:	ldr	r0, [fp, #-12]
   1b30c:	add	r0, r0, #-2147483648	; 0x80000000
   1b310:	movw	r1, #0
   1b314:	cmp	r1, r0
   1b318:	bcc	1b3f4 <__assert_fail@plt+0xa33c>
   1b31c:	b	1b408 <__assert_fail@plt+0xa350>
   1b320:	ldr	r0, [fp, #-12]
   1b324:	movw	r1, #0
   1b328:	cmp	r1, r0
   1b32c:	bcs	1b408 <__assert_fail@plt+0xa350>
   1b330:	ldr	r0, [pc, #2760]	; 1be00 <__assert_fail@plt+0xad48>
   1b334:	ldr	r1, [fp, #-12]
   1b338:	sub	r1, r1, #1
   1b33c:	cmp	r0, r1
   1b340:	bcc	1b3f4 <__assert_fail@plt+0xa33c>
   1b344:	b	1b408 <__assert_fail@plt+0xa350>
   1b348:	ldr	r0, [pc, #2740]	; 1be04 <__assert_fail@plt+0xad4c>
   1b34c:	ldr	r1, [fp, #-16]
   1b350:	udiv	r0, r0, r1
   1b354:	ldr	r1, [fp, #-12]
   1b358:	cmp	r0, r1
   1b35c:	bcc	1b3f4 <__assert_fail@plt+0xa33c>
   1b360:	b	1b408 <__assert_fail@plt+0xa350>
   1b364:	ldr	r0, [fp, #-16]
   1b368:	cmp	r0, #0
   1b36c:	bne	1b374 <__assert_fail@plt+0xa2bc>
   1b370:	b	1b408 <__assert_fail@plt+0xa350>
   1b374:	ldr	r0, [fp, #-12]
   1b378:	cmp	r0, #0
   1b37c:	bcs	1b3dc <__assert_fail@plt+0xa324>
   1b380:	ldr	r0, [fp, #-12]
   1b384:	cmn	r0, #1
   1b388:	bne	1b3c0 <__assert_fail@plt+0xa308>
   1b38c:	b	1b3a8 <__assert_fail@plt+0xa2f0>
   1b390:	ldr	r0, [fp, #-16]
   1b394:	add	r0, r0, #-2147483648	; 0x80000000
   1b398:	movw	r1, #0
   1b39c:	cmp	r1, r0
   1b3a0:	bcc	1b3f4 <__assert_fail@plt+0xa33c>
   1b3a4:	b	1b408 <__assert_fail@plt+0xa350>
   1b3a8:	ldr	r0, [pc, #2640]	; 1be00 <__assert_fail@plt+0xad48>
   1b3ac:	ldr	r1, [fp, #-16]
   1b3b0:	sub	r1, r1, #1
   1b3b4:	cmp	r0, r1
   1b3b8:	bcc	1b3f4 <__assert_fail@plt+0xa33c>
   1b3bc:	b	1b408 <__assert_fail@plt+0xa350>
   1b3c0:	ldr	r0, [pc, #2620]	; 1be04 <__assert_fail@plt+0xad4c>
   1b3c4:	ldr	r1, [fp, #-12]
   1b3c8:	udiv	r0, r0, r1
   1b3cc:	ldr	r1, [fp, #-16]
   1b3d0:	cmp	r0, r1
   1b3d4:	bcc	1b3f4 <__assert_fail@plt+0xa33c>
   1b3d8:	b	1b408 <__assert_fail@plt+0xa350>
   1b3dc:	ldr	r0, [pc, #2588]	; 1be00 <__assert_fail@plt+0xad48>
   1b3e0:	ldr	r1, [fp, #-16]
   1b3e4:	udiv	r0, r0, r1
   1b3e8:	ldr	r1, [fp, #-12]
   1b3ec:	cmp	r0, r1
   1b3f0:	bcs	1b408 <__assert_fail@plt+0xa350>
   1b3f4:	ldr	r0, [fp, #-12]
   1b3f8:	ldr	r1, [fp, #-16]
   1b3fc:	mul	r0, r0, r1
   1b400:	str	r0, [fp, #-20]	; 0xffffffec
   1b404:	b	1bdcc <__assert_fail@plt+0xad14>
   1b408:	ldr	r0, [fp, #-12]
   1b40c:	ldr	r1, [fp, #-16]
   1b410:	mul	r0, r0, r1
   1b414:	str	r0, [fp, #-20]	; 0xffffffec
   1b418:	b	1bde4 <__assert_fail@plt+0xad2c>
   1b41c:	ldr	r0, [fp, #-16]
   1b420:	cmp	r0, #0
   1b424:	bcs	1b530 <__assert_fail@plt+0xa478>
   1b428:	ldr	r0, [fp, #-12]
   1b42c:	cmp	r0, #0
   1b430:	bcs	1b4b8 <__assert_fail@plt+0xa400>
   1b434:	b	1b454 <__assert_fail@plt+0xa39c>
   1b438:	ldr	r0, [fp, #-12]
   1b43c:	ldr	r1, [fp, #-16]
   1b440:	mvn	r2, #0
   1b444:	udiv	r1, r2, r1
   1b448:	cmp	r0, r1
   1b44c:	bcc	1b5cc <__assert_fail@plt+0xa514>
   1b450:	b	1b5e0 <__assert_fail@plt+0xa528>
   1b454:	b	1b468 <__assert_fail@plt+0xa3b0>
   1b458:	ldr	r0, [fp, #-16]
   1b45c:	cmp	r0, #1
   1b460:	bcc	1b478 <__assert_fail@plt+0xa3c0>
   1b464:	b	1b484 <__assert_fail@plt+0xa3cc>
   1b468:	ldr	r0, [fp, #-16]
   1b46c:	movw	r1, #0
   1b470:	cmp	r1, r0
   1b474:	bcs	1b484 <__assert_fail@plt+0xa3cc>
   1b478:	movw	r0, #1
   1b47c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b480:	b	1b49c <__assert_fail@plt+0xa3e4>
   1b484:	ldr	r0, [fp, #-16]
   1b488:	movw	r1, #0
   1b48c:	sub	r0, r1, r0
   1b490:	mvn	r1, #0
   1b494:	udiv	r0, r1, r0
   1b498:	str	r0, [fp, #-44]	; 0xffffffd4
   1b49c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b4a0:	ldr	r1, [fp, #-12]
   1b4a4:	mvn	r2, #0
   1b4a8:	sub	r1, r2, r1
   1b4ac:	cmp	r0, r1
   1b4b0:	bls	1b5cc <__assert_fail@plt+0xa514>
   1b4b4:	b	1b5e0 <__assert_fail@plt+0xa528>
   1b4b8:	b	1b4c0 <__assert_fail@plt+0xa408>
   1b4bc:	b	1b4c4 <__assert_fail@plt+0xa40c>
   1b4c0:	b	1b514 <__assert_fail@plt+0xa45c>
   1b4c4:	ldr	r0, [fp, #-16]
   1b4c8:	cmn	r0, #1
   1b4cc:	bne	1b514 <__assert_fail@plt+0xa45c>
   1b4d0:	b	1b4ec <__assert_fail@plt+0xa434>
   1b4d4:	ldr	r0, [fp, #-12]
   1b4d8:	add	r0, r0, #0
   1b4dc:	movw	r1, #0
   1b4e0:	cmp	r1, r0
   1b4e4:	bcc	1b5cc <__assert_fail@plt+0xa514>
   1b4e8:	b	1b5e0 <__assert_fail@plt+0xa528>
   1b4ec:	ldr	r0, [fp, #-12]
   1b4f0:	movw	r1, #0
   1b4f4:	cmp	r1, r0
   1b4f8:	bcs	1b5e0 <__assert_fail@plt+0xa528>
   1b4fc:	ldr	r0, [fp, #-12]
   1b500:	sub	r0, r0, #1
   1b504:	mvn	r1, #0
   1b508:	cmp	r1, r0
   1b50c:	bcc	1b5cc <__assert_fail@plt+0xa514>
   1b510:	b	1b5e0 <__assert_fail@plt+0xa528>
   1b514:	ldr	r0, [fp, #-16]
   1b518:	movw	r1, #0
   1b51c:	udiv	r0, r1, r0
   1b520:	ldr	r1, [fp, #-12]
   1b524:	cmp	r0, r1
   1b528:	bcc	1b5cc <__assert_fail@plt+0xa514>
   1b52c:	b	1b5e0 <__assert_fail@plt+0xa528>
   1b530:	ldr	r0, [fp, #-16]
   1b534:	cmp	r0, #0
   1b538:	bne	1b540 <__assert_fail@plt+0xa488>
   1b53c:	b	1b5e0 <__assert_fail@plt+0xa528>
   1b540:	ldr	r0, [fp, #-12]
   1b544:	cmp	r0, #0
   1b548:	bcs	1b5b4 <__assert_fail@plt+0xa4fc>
   1b54c:	b	1b554 <__assert_fail@plt+0xa49c>
   1b550:	b	1b558 <__assert_fail@plt+0xa4a0>
   1b554:	b	1b598 <__assert_fail@plt+0xa4e0>
   1b558:	ldr	r0, [fp, #-12]
   1b55c:	cmn	r0, #1
   1b560:	bne	1b598 <__assert_fail@plt+0xa4e0>
   1b564:	b	1b580 <__assert_fail@plt+0xa4c8>
   1b568:	ldr	r0, [fp, #-16]
   1b56c:	add	r0, r0, #0
   1b570:	movw	r1, #0
   1b574:	cmp	r1, r0
   1b578:	bcc	1b5cc <__assert_fail@plt+0xa514>
   1b57c:	b	1b5e0 <__assert_fail@plt+0xa528>
   1b580:	ldr	r0, [fp, #-16]
   1b584:	sub	r0, r0, #1
   1b588:	mvn	r1, #0
   1b58c:	cmp	r1, r0
   1b590:	bcc	1b5cc <__assert_fail@plt+0xa514>
   1b594:	b	1b5e0 <__assert_fail@plt+0xa528>
   1b598:	ldr	r0, [fp, #-12]
   1b59c:	movw	r1, #0
   1b5a0:	udiv	r0, r1, r0
   1b5a4:	ldr	r1, [fp, #-16]
   1b5a8:	cmp	r0, r1
   1b5ac:	bcc	1b5cc <__assert_fail@plt+0xa514>
   1b5b0:	b	1b5e0 <__assert_fail@plt+0xa528>
   1b5b4:	ldr	r0, [fp, #-16]
   1b5b8:	mvn	r1, #0
   1b5bc:	udiv	r0, r1, r0
   1b5c0:	ldr	r1, [fp, #-12]
   1b5c4:	cmp	r0, r1
   1b5c8:	bcs	1b5e0 <__assert_fail@plt+0xa528>
   1b5cc:	ldr	r0, [fp, #-12]
   1b5d0:	ldr	r1, [fp, #-16]
   1b5d4:	mul	r0, r0, r1
   1b5d8:	str	r0, [fp, #-20]	; 0xffffffec
   1b5dc:	b	1bdcc <__assert_fail@plt+0xad14>
   1b5e0:	ldr	r0, [fp, #-12]
   1b5e4:	ldr	r1, [fp, #-16]
   1b5e8:	mul	r0, r0, r1
   1b5ec:	str	r0, [fp, #-20]	; 0xffffffec
   1b5f0:	b	1bde4 <__assert_fail@plt+0xad2c>
   1b5f4:	b	1b5f8 <__assert_fail@plt+0xa540>
   1b5f8:	b	1b7bc <__assert_fail@plt+0xa704>
   1b5fc:	ldr	r0, [fp, #-16]
   1b600:	cmp	r0, #0
   1b604:	bcs	1b704 <__assert_fail@plt+0xa64c>
   1b608:	ldr	r0, [fp, #-12]
   1b60c:	cmp	r0, #0
   1b610:	bcs	1b698 <__assert_fail@plt+0xa5e0>
   1b614:	b	1b634 <__assert_fail@plt+0xa57c>
   1b618:	ldr	r0, [pc, #2016]	; 1be00 <__assert_fail@plt+0xad48>
   1b61c:	ldr	r1, [fp, #-12]
   1b620:	ldr	r2, [fp, #-16]
   1b624:	udiv	r0, r0, r2
   1b628:	cmp	r1, r0
   1b62c:	bcc	1b794 <__assert_fail@plt+0xa6dc>
   1b630:	b	1b7a8 <__assert_fail@plt+0xa6f0>
   1b634:	b	1b648 <__assert_fail@plt+0xa590>
   1b638:	ldr	r0, [fp, #-16]
   1b63c:	cmp	r0, #1
   1b640:	bcc	1b658 <__assert_fail@plt+0xa5a0>
   1b644:	b	1b664 <__assert_fail@plt+0xa5ac>
   1b648:	ldr	r0, [fp, #-16]
   1b64c:	movw	r1, #0
   1b650:	cmp	r1, r0
   1b654:	bcs	1b664 <__assert_fail@plt+0xa5ac>
   1b658:	movw	r0, #0
   1b65c:	str	r0, [sp, #48]	; 0x30
   1b660:	b	1b67c <__assert_fail@plt+0xa5c4>
   1b664:	ldr	r0, [pc, #1940]	; 1be00 <__assert_fail@plt+0xad48>
   1b668:	ldr	r1, [fp, #-16]
   1b66c:	movw	r2, #0
   1b670:	sub	r1, r2, r1
   1b674:	udiv	r0, r0, r1
   1b678:	str	r0, [sp, #48]	; 0x30
   1b67c:	ldr	r0, [sp, #48]	; 0x30
   1b680:	ldr	r1, [fp, #-12]
   1b684:	mvn	r2, #0
   1b688:	sub	r1, r2, r1
   1b68c:	cmp	r0, r1
   1b690:	bls	1b794 <__assert_fail@plt+0xa6dc>
   1b694:	b	1b7a8 <__assert_fail@plt+0xa6f0>
   1b698:	ldr	r0, [fp, #-16]
   1b69c:	cmn	r0, #1
   1b6a0:	bne	1b6e8 <__assert_fail@plt+0xa630>
   1b6a4:	b	1b6c0 <__assert_fail@plt+0xa608>
   1b6a8:	ldr	r0, [fp, #-12]
   1b6ac:	add	r0, r0, #-2147483648	; 0x80000000
   1b6b0:	movw	r1, #0
   1b6b4:	cmp	r1, r0
   1b6b8:	bcc	1b794 <__assert_fail@plt+0xa6dc>
   1b6bc:	b	1b7a8 <__assert_fail@plt+0xa6f0>
   1b6c0:	ldr	r0, [fp, #-12]
   1b6c4:	movw	r1, #0
   1b6c8:	cmp	r1, r0
   1b6cc:	bcs	1b7a8 <__assert_fail@plt+0xa6f0>
   1b6d0:	ldr	r0, [pc, #1832]	; 1be00 <__assert_fail@plt+0xad48>
   1b6d4:	ldr	r1, [fp, #-12]
   1b6d8:	sub	r1, r1, #1
   1b6dc:	cmp	r0, r1
   1b6e0:	bcc	1b794 <__assert_fail@plt+0xa6dc>
   1b6e4:	b	1b7a8 <__assert_fail@plt+0xa6f0>
   1b6e8:	ldr	r0, [pc, #1812]	; 1be04 <__assert_fail@plt+0xad4c>
   1b6ec:	ldr	r1, [fp, #-16]
   1b6f0:	udiv	r0, r0, r1
   1b6f4:	ldr	r1, [fp, #-12]
   1b6f8:	cmp	r0, r1
   1b6fc:	bcc	1b794 <__assert_fail@plt+0xa6dc>
   1b700:	b	1b7a8 <__assert_fail@plt+0xa6f0>
   1b704:	ldr	r0, [fp, #-16]
   1b708:	cmp	r0, #0
   1b70c:	bne	1b714 <__assert_fail@plt+0xa65c>
   1b710:	b	1b7a8 <__assert_fail@plt+0xa6f0>
   1b714:	ldr	r0, [fp, #-12]
   1b718:	cmp	r0, #0
   1b71c:	bcs	1b77c <__assert_fail@plt+0xa6c4>
   1b720:	ldr	r0, [fp, #-12]
   1b724:	cmn	r0, #1
   1b728:	bne	1b760 <__assert_fail@plt+0xa6a8>
   1b72c:	b	1b748 <__assert_fail@plt+0xa690>
   1b730:	ldr	r0, [fp, #-16]
   1b734:	add	r0, r0, #-2147483648	; 0x80000000
   1b738:	movw	r1, #0
   1b73c:	cmp	r1, r0
   1b740:	bcc	1b794 <__assert_fail@plt+0xa6dc>
   1b744:	b	1b7a8 <__assert_fail@plt+0xa6f0>
   1b748:	ldr	r0, [pc, #1712]	; 1be00 <__assert_fail@plt+0xad48>
   1b74c:	ldr	r1, [fp, #-16]
   1b750:	sub	r1, r1, #1
   1b754:	cmp	r0, r1
   1b758:	bcc	1b794 <__assert_fail@plt+0xa6dc>
   1b75c:	b	1b7a8 <__assert_fail@plt+0xa6f0>
   1b760:	ldr	r0, [pc, #1692]	; 1be04 <__assert_fail@plt+0xad4c>
   1b764:	ldr	r1, [fp, #-12]
   1b768:	udiv	r0, r0, r1
   1b76c:	ldr	r1, [fp, #-16]
   1b770:	cmp	r0, r1
   1b774:	bcc	1b794 <__assert_fail@plt+0xa6dc>
   1b778:	b	1b7a8 <__assert_fail@plt+0xa6f0>
   1b77c:	ldr	r0, [pc, #1660]	; 1be00 <__assert_fail@plt+0xad48>
   1b780:	ldr	r1, [fp, #-16]
   1b784:	udiv	r0, r0, r1
   1b788:	ldr	r1, [fp, #-12]
   1b78c:	cmp	r0, r1
   1b790:	bcs	1b7a8 <__assert_fail@plt+0xa6f0>
   1b794:	ldr	r0, [fp, #-12]
   1b798:	ldr	r1, [fp, #-16]
   1b79c:	mul	r0, r0, r1
   1b7a0:	str	r0, [fp, #-20]	; 0xffffffec
   1b7a4:	b	1bdcc <__assert_fail@plt+0xad14>
   1b7a8:	ldr	r0, [fp, #-12]
   1b7ac:	ldr	r1, [fp, #-16]
   1b7b0:	mul	r0, r0, r1
   1b7b4:	str	r0, [fp, #-20]	; 0xffffffec
   1b7b8:	b	1bde4 <__assert_fail@plt+0xad2c>
   1b7bc:	ldr	r0, [fp, #-16]
   1b7c0:	cmp	r0, #0
   1b7c4:	bcs	1b8d0 <__assert_fail@plt+0xa818>
   1b7c8:	ldr	r0, [fp, #-12]
   1b7cc:	cmp	r0, #0
   1b7d0:	bcs	1b858 <__assert_fail@plt+0xa7a0>
   1b7d4:	b	1b7f4 <__assert_fail@plt+0xa73c>
   1b7d8:	ldr	r0, [fp, #-12]
   1b7dc:	ldr	r1, [fp, #-16]
   1b7e0:	mvn	r2, #0
   1b7e4:	udiv	r1, r2, r1
   1b7e8:	cmp	r0, r1
   1b7ec:	bcc	1b96c <__assert_fail@plt+0xa8b4>
   1b7f0:	b	1b980 <__assert_fail@plt+0xa8c8>
   1b7f4:	b	1b808 <__assert_fail@plt+0xa750>
   1b7f8:	ldr	r0, [fp, #-16]
   1b7fc:	cmp	r0, #1
   1b800:	bcc	1b818 <__assert_fail@plt+0xa760>
   1b804:	b	1b824 <__assert_fail@plt+0xa76c>
   1b808:	ldr	r0, [fp, #-16]
   1b80c:	movw	r1, #0
   1b810:	cmp	r1, r0
   1b814:	bcs	1b824 <__assert_fail@plt+0xa76c>
   1b818:	movw	r0, #1
   1b81c:	str	r0, [sp, #44]	; 0x2c
   1b820:	b	1b83c <__assert_fail@plt+0xa784>
   1b824:	ldr	r0, [fp, #-16]
   1b828:	movw	r1, #0
   1b82c:	sub	r0, r1, r0
   1b830:	mvn	r1, #0
   1b834:	udiv	r0, r1, r0
   1b838:	str	r0, [sp, #44]	; 0x2c
   1b83c:	ldr	r0, [sp, #44]	; 0x2c
   1b840:	ldr	r1, [fp, #-12]
   1b844:	mvn	r2, #0
   1b848:	sub	r1, r2, r1
   1b84c:	cmp	r0, r1
   1b850:	bls	1b96c <__assert_fail@plt+0xa8b4>
   1b854:	b	1b980 <__assert_fail@plt+0xa8c8>
   1b858:	b	1b860 <__assert_fail@plt+0xa7a8>
   1b85c:	b	1b864 <__assert_fail@plt+0xa7ac>
   1b860:	b	1b8b4 <__assert_fail@plt+0xa7fc>
   1b864:	ldr	r0, [fp, #-16]
   1b868:	cmn	r0, #1
   1b86c:	bne	1b8b4 <__assert_fail@plt+0xa7fc>
   1b870:	b	1b88c <__assert_fail@plt+0xa7d4>
   1b874:	ldr	r0, [fp, #-12]
   1b878:	add	r0, r0, #0
   1b87c:	movw	r1, #0
   1b880:	cmp	r1, r0
   1b884:	bcc	1b96c <__assert_fail@plt+0xa8b4>
   1b888:	b	1b980 <__assert_fail@plt+0xa8c8>
   1b88c:	ldr	r0, [fp, #-12]
   1b890:	movw	r1, #0
   1b894:	cmp	r1, r0
   1b898:	bcs	1b980 <__assert_fail@plt+0xa8c8>
   1b89c:	ldr	r0, [fp, #-12]
   1b8a0:	sub	r0, r0, #1
   1b8a4:	mvn	r1, #0
   1b8a8:	cmp	r1, r0
   1b8ac:	bcc	1b96c <__assert_fail@plt+0xa8b4>
   1b8b0:	b	1b980 <__assert_fail@plt+0xa8c8>
   1b8b4:	ldr	r0, [fp, #-16]
   1b8b8:	movw	r1, #0
   1b8bc:	udiv	r0, r1, r0
   1b8c0:	ldr	r1, [fp, #-12]
   1b8c4:	cmp	r0, r1
   1b8c8:	bcc	1b96c <__assert_fail@plt+0xa8b4>
   1b8cc:	b	1b980 <__assert_fail@plt+0xa8c8>
   1b8d0:	ldr	r0, [fp, #-16]
   1b8d4:	cmp	r0, #0
   1b8d8:	bne	1b8e0 <__assert_fail@plt+0xa828>
   1b8dc:	b	1b980 <__assert_fail@plt+0xa8c8>
   1b8e0:	ldr	r0, [fp, #-12]
   1b8e4:	cmp	r0, #0
   1b8e8:	bcs	1b954 <__assert_fail@plt+0xa89c>
   1b8ec:	b	1b8f4 <__assert_fail@plt+0xa83c>
   1b8f0:	b	1b8f8 <__assert_fail@plt+0xa840>
   1b8f4:	b	1b938 <__assert_fail@plt+0xa880>
   1b8f8:	ldr	r0, [fp, #-12]
   1b8fc:	cmn	r0, #1
   1b900:	bne	1b938 <__assert_fail@plt+0xa880>
   1b904:	b	1b920 <__assert_fail@plt+0xa868>
   1b908:	ldr	r0, [fp, #-16]
   1b90c:	add	r0, r0, #0
   1b910:	movw	r1, #0
   1b914:	cmp	r1, r0
   1b918:	bcc	1b96c <__assert_fail@plt+0xa8b4>
   1b91c:	b	1b980 <__assert_fail@plt+0xa8c8>
   1b920:	ldr	r0, [fp, #-16]
   1b924:	sub	r0, r0, #1
   1b928:	mvn	r1, #0
   1b92c:	cmp	r1, r0
   1b930:	bcc	1b96c <__assert_fail@plt+0xa8b4>
   1b934:	b	1b980 <__assert_fail@plt+0xa8c8>
   1b938:	ldr	r0, [fp, #-12]
   1b93c:	movw	r1, #0
   1b940:	udiv	r0, r1, r0
   1b944:	ldr	r1, [fp, #-16]
   1b948:	cmp	r0, r1
   1b94c:	bcc	1b96c <__assert_fail@plt+0xa8b4>
   1b950:	b	1b980 <__assert_fail@plt+0xa8c8>
   1b954:	ldr	r0, [fp, #-16]
   1b958:	mvn	r1, #0
   1b95c:	udiv	r0, r1, r0
   1b960:	ldr	r1, [fp, #-12]
   1b964:	cmp	r0, r1
   1b968:	bcs	1b980 <__assert_fail@plt+0xa8c8>
   1b96c:	ldr	r0, [fp, #-12]
   1b970:	ldr	r1, [fp, #-16]
   1b974:	mul	r0, r0, r1
   1b978:	str	r0, [fp, #-20]	; 0xffffffec
   1b97c:	b	1bdcc <__assert_fail@plt+0xad14>
   1b980:	ldr	r0, [fp, #-12]
   1b984:	ldr	r1, [fp, #-16]
   1b988:	mul	r0, r0, r1
   1b98c:	str	r0, [fp, #-20]	; 0xffffffec
   1b990:	b	1bde4 <__assert_fail@plt+0xad2c>
   1b994:	b	1bbb0 <__assert_fail@plt+0xaaf8>
   1b998:	ldr	r0, [fp, #-16]
   1b99c:	cmp	r0, #0
   1b9a0:	bcs	1bae0 <__assert_fail@plt+0xaa28>
   1b9a4:	ldr	r0, [fp, #-12]
   1b9a8:	cmp	r0, #0
   1b9ac:	bcs	1ba6c <__assert_fail@plt+0xa9b4>
   1b9b0:	b	1b9b4 <__assert_fail@plt+0xa8fc>
   1b9b4:	ldr	r0, [fp, #-12]
   1b9b8:	ldr	r2, [fp, #-16]
   1b9bc:	mvn	r1, #0
   1b9c0:	mvn	r3, #-2147483648	; 0x80000000
   1b9c4:	mov	ip, #0
   1b9c8:	str	r0, [sp, #40]	; 0x28
   1b9cc:	mov	r0, r1
   1b9d0:	mov	r1, r3
   1b9d4:	mov	r3, ip
   1b9d8:	bl	1c718 <__assert_fail@plt+0xb660>
   1b9dc:	ldr	r2, [sp, #40]	; 0x28
   1b9e0:	subs	r0, r2, r0
   1b9e4:	rscs	r1, r1, #0
   1b9e8:	blt	1bb88 <__assert_fail@plt+0xaad0>
   1b9ec:	b	1bb9c <__assert_fail@plt+0xaae4>
   1b9f0:	b	1ba04 <__assert_fail@plt+0xa94c>
   1b9f4:	ldr	r0, [fp, #-16]
   1b9f8:	cmp	r0, #1
   1b9fc:	bcc	1ba14 <__assert_fail@plt+0xa95c>
   1ba00:	b	1ba28 <__assert_fail@plt+0xa970>
   1ba04:	ldr	r0, [fp, #-16]
   1ba08:	movw	r1, #0
   1ba0c:	cmp	r1, r0
   1ba10:	bcs	1ba28 <__assert_fail@plt+0xa970>
   1ba14:	mov	r0, #0
   1ba18:	mvn	r1, #0
   1ba1c:	str	r1, [sp, #36]	; 0x24
   1ba20:	str	r0, [sp, #32]
   1ba24:	b	1ba4c <__assert_fail@plt+0xa994>
   1ba28:	ldr	r0, [fp, #-16]
   1ba2c:	rsb	r2, r0, #0
   1ba30:	mvn	r0, #0
   1ba34:	mvn	r1, #-2147483648	; 0x80000000
   1ba38:	mov	r3, #0
   1ba3c:	bl	1c718 <__assert_fail@plt+0xb660>
   1ba40:	str	r0, [sp, #36]	; 0x24
   1ba44:	str	r1, [sp, #32]
   1ba48:	b	1ba4c <__assert_fail@plt+0xa994>
   1ba4c:	ldr	r0, [sp, #32]
   1ba50:	ldr	r1, [sp, #36]	; 0x24
   1ba54:	ldr	r2, [fp, #-12]
   1ba58:	mvn	r2, r2
   1ba5c:	subs	r1, r2, r1
   1ba60:	rscs	r0, r0, #0
   1ba64:	bge	1bb88 <__assert_fail@plt+0xaad0>
   1ba68:	b	1bb9c <__assert_fail@plt+0xaae4>
   1ba6c:	ldr	r0, [fp, #-16]
   1ba70:	cmn	r0, #1
   1ba74:	bne	1bab4 <__assert_fail@plt+0xa9fc>
   1ba78:	b	1ba94 <__assert_fail@plt+0xa9dc>
   1ba7c:	ldr	r0, [fp, #-12]
   1ba80:	rsbs	r0, r0, #0
   1ba84:	mov	r1, #0
   1ba88:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1ba8c:	blt	1bb88 <__assert_fail@plt+0xaad0>
   1ba90:	b	1bb9c <__assert_fail@plt+0xaae4>
   1ba94:	ldr	r0, [fp, #-12]
   1ba98:	movw	r1, #0
   1ba9c:	cmp	r1, r0
   1baa0:	bcs	1bb9c <__assert_fail@plt+0xaae4>
   1baa4:	mov	r0, #0
   1baa8:	cmp	r0, #0
   1baac:	bne	1bb88 <__assert_fail@plt+0xaad0>
   1bab0:	b	1bb9c <__assert_fail@plt+0xaae4>
   1bab4:	ldr	r2, [fp, #-16]
   1bab8:	mov	r1, #-2147483648	; 0x80000000
   1babc:	mov	r0, #0
   1bac0:	str	r0, [sp, #28]
   1bac4:	ldr	r3, [sp, #28]
   1bac8:	bl	1c644 <__assert_fail@plt+0xb58c>
   1bacc:	ldr	r2, [fp, #-12]
   1bad0:	subs	r0, r0, r2
   1bad4:	sbcs	r1, r1, #0
   1bad8:	blt	1bb88 <__assert_fail@plt+0xaad0>
   1badc:	b	1bb9c <__assert_fail@plt+0xaae4>
   1bae0:	ldr	r0, [fp, #-16]
   1bae4:	cmp	r0, #0
   1bae8:	bne	1baf0 <__assert_fail@plt+0xaa38>
   1baec:	b	1bb9c <__assert_fail@plt+0xaae4>
   1baf0:	ldr	r0, [fp, #-12]
   1baf4:	cmp	r0, #0
   1baf8:	bcs	1bb60 <__assert_fail@plt+0xaaa8>
   1bafc:	ldr	r0, [fp, #-12]
   1bb00:	cmn	r0, #1
   1bb04:	bne	1bb34 <__assert_fail@plt+0xaa7c>
   1bb08:	b	1bb24 <__assert_fail@plt+0xaa6c>
   1bb0c:	ldr	r0, [fp, #-16]
   1bb10:	rsbs	r0, r0, #0
   1bb14:	mov	r1, #0
   1bb18:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1bb1c:	blt	1bb88 <__assert_fail@plt+0xaad0>
   1bb20:	b	1bb9c <__assert_fail@plt+0xaae4>
   1bb24:	mov	r0, #0
   1bb28:	cmp	r0, #0
   1bb2c:	bne	1bb88 <__assert_fail@plt+0xaad0>
   1bb30:	b	1bb9c <__assert_fail@plt+0xaae4>
   1bb34:	ldr	r2, [fp, #-12]
   1bb38:	mov	r1, #-2147483648	; 0x80000000
   1bb3c:	mov	r0, #0
   1bb40:	str	r0, [sp, #24]
   1bb44:	ldr	r3, [sp, #24]
   1bb48:	bl	1c644 <__assert_fail@plt+0xb58c>
   1bb4c:	ldr	r2, [fp, #-16]
   1bb50:	subs	r0, r0, r2
   1bb54:	sbcs	r1, r1, #0
   1bb58:	blt	1bb88 <__assert_fail@plt+0xaad0>
   1bb5c:	b	1bb9c <__assert_fail@plt+0xaae4>
   1bb60:	ldr	r2, [fp, #-16]
   1bb64:	mvn	r0, #0
   1bb68:	mvn	r1, #-2147483648	; 0x80000000
   1bb6c:	mov	r3, #0
   1bb70:	bl	1c718 <__assert_fail@plt+0xb660>
   1bb74:	ldr	r2, [fp, #-12]
   1bb78:	subs	r0, r0, r2
   1bb7c:	sbcs	r1, r1, #0
   1bb80:	bge	1bb9c <__assert_fail@plt+0xaae4>
   1bb84:	b	1bb88 <__assert_fail@plt+0xaad0>
   1bb88:	ldr	r0, [fp, #-12]
   1bb8c:	ldr	r1, [fp, #-16]
   1bb90:	mul	r0, r0, r1
   1bb94:	str	r0, [fp, #-20]	; 0xffffffec
   1bb98:	b	1bdcc <__assert_fail@plt+0xad14>
   1bb9c:	ldr	r0, [fp, #-12]
   1bba0:	ldr	r1, [fp, #-16]
   1bba4:	mul	r0, r0, r1
   1bba8:	str	r0, [fp, #-20]	; 0xffffffec
   1bbac:	b	1bde4 <__assert_fail@plt+0xad2c>
   1bbb0:	ldr	r0, [fp, #-16]
   1bbb4:	cmp	r0, #0
   1bbb8:	bcs	1bcf4 <__assert_fail@plt+0xac3c>
   1bbbc:	ldr	r0, [fp, #-12]
   1bbc0:	cmp	r0, #0
   1bbc4:	bcs	1bc7c <__assert_fail@plt+0xabc4>
   1bbc8:	b	1bbfc <__assert_fail@plt+0xab44>
   1bbcc:	ldr	r0, [fp, #-12]
   1bbd0:	ldr	r2, [fp, #-16]
   1bbd4:	mvn	r1, #0
   1bbd8:	mov	r3, #0
   1bbdc:	str	r0, [sp, #20]
   1bbe0:	mov	r0, r1
   1bbe4:	bl	1c718 <__assert_fail@plt+0xb660>
   1bbe8:	ldr	r2, [sp, #20]
   1bbec:	subs	r0, r2, r0
   1bbf0:	rscs	r1, r1, #0
   1bbf4:	bcc	1bda4 <__assert_fail@plt+0xacec>
   1bbf8:	b	1bdb8 <__assert_fail@plt+0xad00>
   1bbfc:	b	1bc10 <__assert_fail@plt+0xab58>
   1bc00:	ldr	r0, [fp, #-16]
   1bc04:	cmp	r0, #1
   1bc08:	bcc	1bc20 <__assert_fail@plt+0xab68>
   1bc0c:	b	1bc34 <__assert_fail@plt+0xab7c>
   1bc10:	ldr	r0, [fp, #-16]
   1bc14:	movw	r1, #0
   1bc18:	cmp	r1, r0
   1bc1c:	bcs	1bc34 <__assert_fail@plt+0xab7c>
   1bc20:	mov	r0, #1
   1bc24:	mvn	r1, #0
   1bc28:	str	r1, [sp, #16]
   1bc2c:	str	r0, [sp, #12]
   1bc30:	b	1bc5c <__assert_fail@plt+0xaba4>
   1bc34:	ldr	r0, [fp, #-16]
   1bc38:	rsb	r2, r0, #0
   1bc3c:	mvn	r0, #0
   1bc40:	mov	r3, #0
   1bc44:	str	r0, [sp, #8]
   1bc48:	ldr	r1, [sp, #8]
   1bc4c:	bl	1c718 <__assert_fail@plt+0xb660>
   1bc50:	str	r0, [sp, #16]
   1bc54:	str	r1, [sp, #12]
   1bc58:	b	1bc5c <__assert_fail@plt+0xaba4>
   1bc5c:	ldr	r0, [sp, #12]
   1bc60:	ldr	r1, [sp, #16]
   1bc64:	ldr	r2, [fp, #-12]
   1bc68:	mvn	r2, r2
   1bc6c:	subs	r1, r2, r1
   1bc70:	rscs	r0, r0, #0
   1bc74:	bcs	1bda4 <__assert_fail@plt+0xacec>
   1bc78:	b	1bdb8 <__assert_fail@plt+0xad00>
   1bc7c:	b	1bc84 <__assert_fail@plt+0xabcc>
   1bc80:	b	1bc88 <__assert_fail@plt+0xabd0>
   1bc84:	b	1bcd8 <__assert_fail@plt+0xac20>
   1bc88:	ldr	r0, [fp, #-16]
   1bc8c:	cmn	r0, #1
   1bc90:	bne	1bcd8 <__assert_fail@plt+0xac20>
   1bc94:	b	1bcb0 <__assert_fail@plt+0xabf8>
   1bc98:	ldr	r0, [fp, #-12]
   1bc9c:	add	r0, r0, #0
   1bca0:	movw	r1, #0
   1bca4:	cmp	r1, r0
   1bca8:	bcc	1bda4 <__assert_fail@plt+0xacec>
   1bcac:	b	1bdb8 <__assert_fail@plt+0xad00>
   1bcb0:	ldr	r0, [fp, #-12]
   1bcb4:	movw	r1, #0
   1bcb8:	cmp	r1, r0
   1bcbc:	bcs	1bdb8 <__assert_fail@plt+0xad00>
   1bcc0:	ldr	r0, [fp, #-12]
   1bcc4:	sub	r0, r0, #1
   1bcc8:	mvn	r1, #0
   1bccc:	cmp	r1, r0
   1bcd0:	bcc	1bda4 <__assert_fail@plt+0xacec>
   1bcd4:	b	1bdb8 <__assert_fail@plt+0xad00>
   1bcd8:	ldr	r0, [fp, #-16]
   1bcdc:	movw	r1, #0
   1bce0:	udiv	r0, r1, r0
   1bce4:	ldr	r1, [fp, #-12]
   1bce8:	cmp	r0, r1
   1bcec:	bcc	1bda4 <__assert_fail@plt+0xacec>
   1bcf0:	b	1bdb8 <__assert_fail@plt+0xad00>
   1bcf4:	ldr	r0, [fp, #-16]
   1bcf8:	cmp	r0, #0
   1bcfc:	bne	1bd04 <__assert_fail@plt+0xac4c>
   1bd00:	b	1bdb8 <__assert_fail@plt+0xad00>
   1bd04:	ldr	r0, [fp, #-12]
   1bd08:	cmp	r0, #0
   1bd0c:	bcs	1bd78 <__assert_fail@plt+0xacc0>
   1bd10:	b	1bd18 <__assert_fail@plt+0xac60>
   1bd14:	b	1bd1c <__assert_fail@plt+0xac64>
   1bd18:	b	1bd5c <__assert_fail@plt+0xaca4>
   1bd1c:	ldr	r0, [fp, #-12]
   1bd20:	cmn	r0, #1
   1bd24:	bne	1bd5c <__assert_fail@plt+0xaca4>
   1bd28:	b	1bd44 <__assert_fail@plt+0xac8c>
   1bd2c:	ldr	r0, [fp, #-16]
   1bd30:	add	r0, r0, #0
   1bd34:	movw	r1, #0
   1bd38:	cmp	r1, r0
   1bd3c:	bcc	1bda4 <__assert_fail@plt+0xacec>
   1bd40:	b	1bdb8 <__assert_fail@plt+0xad00>
   1bd44:	ldr	r0, [fp, #-16]
   1bd48:	sub	r0, r0, #1
   1bd4c:	mvn	r1, #0
   1bd50:	cmp	r1, r0
   1bd54:	bcc	1bda4 <__assert_fail@plt+0xacec>
   1bd58:	b	1bdb8 <__assert_fail@plt+0xad00>
   1bd5c:	ldr	r0, [fp, #-12]
   1bd60:	movw	r1, #0
   1bd64:	udiv	r0, r1, r0
   1bd68:	ldr	r1, [fp, #-16]
   1bd6c:	cmp	r0, r1
   1bd70:	bcc	1bda4 <__assert_fail@plt+0xacec>
   1bd74:	b	1bdb8 <__assert_fail@plt+0xad00>
   1bd78:	ldr	r2, [fp, #-16]
   1bd7c:	mvn	r0, #0
   1bd80:	mov	r3, #0
   1bd84:	str	r0, [sp, #4]
   1bd88:	ldr	r1, [sp, #4]
   1bd8c:	bl	1c718 <__assert_fail@plt+0xb660>
   1bd90:	ldr	r2, [fp, #-12]
   1bd94:	subs	r0, r0, r2
   1bd98:	sbcs	r1, r1, #0
   1bd9c:	bcs	1bdb8 <__assert_fail@plt+0xad00>
   1bda0:	b	1bda4 <__assert_fail@plt+0xacec>
   1bda4:	ldr	r0, [fp, #-12]
   1bda8:	ldr	r1, [fp, #-16]
   1bdac:	mul	r0, r0, r1
   1bdb0:	str	r0, [fp, #-20]	; 0xffffffec
   1bdb4:	b	1bdcc <__assert_fail@plt+0xad14>
   1bdb8:	ldr	r0, [fp, #-12]
   1bdbc:	ldr	r1, [fp, #-16]
   1bdc0:	mul	r0, r0, r1
   1bdc4:	str	r0, [fp, #-20]	; 0xffffffec
   1bdc8:	b	1bde4 <__assert_fail@plt+0xad2c>
   1bdcc:	bl	10fec <__errno_location@plt>
   1bdd0:	movw	r1, #12
   1bdd4:	str	r1, [r0]
   1bdd8:	movw	r0, #0
   1bddc:	str	r0, [fp, #-4]
   1bde0:	b	1bdf4 <__assert_fail@plt+0xad3c>
   1bde4:	ldr	r0, [fp, #-8]
   1bde8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bdec:	bl	1a580 <__assert_fail@plt+0x94c8>
   1bdf0:	str	r0, [fp, #-4]
   1bdf4:	ldr	r0, [fp, #-4]
   1bdf8:	mov	sp, fp
   1bdfc:	pop	{fp, pc}
   1be00:	svcvc	0x00ffffff
   1be04:	andhi	r0, r0, r0
   1be08:			; <UNDEFINED> instruction: 0xffff8000
   1be0c:	sub	sp, sp, #12
   1be10:	str	r0, [sp, #4]
   1be14:	ldr	r0, [sp, #4]
   1be18:	sub	r1, r0, #48	; 0x30
   1be1c:	cmp	r1, #10
   1be20:	str	r0, [sp]
   1be24:	bcc	1be54 <__assert_fail@plt+0xad9c>
   1be28:	b	1be2c <__assert_fail@plt+0xad74>
   1be2c:	ldr	r0, [sp]
   1be30:	sub	r1, r0, #65	; 0x41
   1be34:	cmp	r1, #26
   1be38:	bcc	1be54 <__assert_fail@plt+0xad9c>
   1be3c:	b	1be40 <__assert_fail@plt+0xad88>
   1be40:	ldr	r0, [sp]
   1be44:	sub	r1, r0, #97	; 0x61
   1be48:	cmp	r1, #25
   1be4c:	bhi	1be64 <__assert_fail@plt+0xadac>
   1be50:	b	1be54 <__assert_fail@plt+0xad9c>
   1be54:	movw	r0, #1
   1be58:	and	r0, r0, #1
   1be5c:	strb	r0, [sp, #11]
   1be60:	b	1be70 <__assert_fail@plt+0xadb8>
   1be64:	movw	r0, #0
   1be68:	and	r0, r0, #1
   1be6c:	strb	r0, [sp, #11]
   1be70:	ldrb	r0, [sp, #11]
   1be74:	and	r0, r0, #1
   1be78:	add	sp, sp, #12
   1be7c:	bx	lr
   1be80:	sub	sp, sp, #12
   1be84:	str	r0, [sp, #4]
   1be88:	ldr	r0, [sp, #4]
   1be8c:	sub	r1, r0, #65	; 0x41
   1be90:	cmp	r1, #26
   1be94:	str	r0, [sp]
   1be98:	bcc	1beb4 <__assert_fail@plt+0xadfc>
   1be9c:	b	1bea0 <__assert_fail@plt+0xade8>
   1bea0:	ldr	r0, [sp]
   1bea4:	sub	r1, r0, #97	; 0x61
   1bea8:	cmp	r1, #25
   1beac:	bhi	1bec4 <__assert_fail@plt+0xae0c>
   1beb0:	b	1beb4 <__assert_fail@plt+0xadfc>
   1beb4:	movw	r0, #1
   1beb8:	and	r0, r0, #1
   1bebc:	strb	r0, [sp, #11]
   1bec0:	b	1bed0 <__assert_fail@plt+0xae18>
   1bec4:	movw	r0, #0
   1bec8:	and	r0, r0, #1
   1becc:	strb	r0, [sp, #11]
   1bed0:	ldrb	r0, [sp, #11]
   1bed4:	and	r0, r0, #1
   1bed8:	add	sp, sp, #12
   1bedc:	bx	lr
   1bee0:	sub	sp, sp, #8
   1bee4:	str	r0, [sp]
   1bee8:	ldr	r0, [sp]
   1beec:	cmp	r0, #127	; 0x7f
   1bef0:	bhi	1bf08 <__assert_fail@plt+0xae50>
   1bef4:	b	1bef8 <__assert_fail@plt+0xae40>
   1bef8:	movw	r0, #1
   1befc:	and	r0, r0, #1
   1bf00:	strb	r0, [sp, #7]
   1bf04:	b	1bf14 <__assert_fail@plt+0xae5c>
   1bf08:	movw	r0, #0
   1bf0c:	and	r0, r0, #1
   1bf10:	strb	r0, [sp, #7]
   1bf14:	ldrb	r0, [sp, #7]
   1bf18:	and	r0, r0, #1
   1bf1c:	add	sp, sp, #8
   1bf20:	bx	lr
   1bf24:	sub	sp, sp, #8
   1bf28:	str	r0, [sp, #4]
   1bf2c:	ldr	r0, [sp, #4]
   1bf30:	cmp	r0, #32
   1bf34:	movw	r0, #1
   1bf38:	str	r0, [sp]
   1bf3c:	beq	1bf54 <__assert_fail@plt+0xae9c>
   1bf40:	ldr	r0, [sp, #4]
   1bf44:	cmp	r0, #9
   1bf48:	movw	r0, #0
   1bf4c:	moveq	r0, #1
   1bf50:	str	r0, [sp]
   1bf54:	ldr	r0, [sp]
   1bf58:	and	r0, r0, #1
   1bf5c:	add	sp, sp, #8
   1bf60:	bx	lr
   1bf64:	sub	sp, sp, #12
   1bf68:	str	r0, [sp, #4]
   1bf6c:	ldr	r0, [sp, #4]
   1bf70:	cmp	r0, #32
   1bf74:	str	r0, [sp]
   1bf78:	bcc	1bf90 <__assert_fail@plt+0xaed8>
   1bf7c:	b	1bf80 <__assert_fail@plt+0xaec8>
   1bf80:	ldr	r0, [sp]
   1bf84:	cmp	r0, #127	; 0x7f
   1bf88:	bne	1bfa0 <__assert_fail@plt+0xaee8>
   1bf8c:	b	1bf90 <__assert_fail@plt+0xaed8>
   1bf90:	movw	r0, #1
   1bf94:	and	r0, r0, #1
   1bf98:	strb	r0, [sp, #11]
   1bf9c:	b	1bfac <__assert_fail@plt+0xaef4>
   1bfa0:	movw	r0, #0
   1bfa4:	and	r0, r0, #1
   1bfa8:	strb	r0, [sp, #11]
   1bfac:	ldrb	r0, [sp, #11]
   1bfb0:	and	r0, r0, #1
   1bfb4:	add	sp, sp, #12
   1bfb8:	bx	lr
   1bfbc:	sub	sp, sp, #8
   1bfc0:	str	r0, [sp]
   1bfc4:	ldr	r0, [sp]
   1bfc8:	sub	r0, r0, #48	; 0x30
   1bfcc:	cmp	r0, #9
   1bfd0:	bhi	1bfe8 <__assert_fail@plt+0xaf30>
   1bfd4:	b	1bfd8 <__assert_fail@plt+0xaf20>
   1bfd8:	movw	r0, #1
   1bfdc:	and	r0, r0, #1
   1bfe0:	strb	r0, [sp, #7]
   1bfe4:	b	1bff4 <__assert_fail@plt+0xaf3c>
   1bfe8:	movw	r0, #0
   1bfec:	and	r0, r0, #1
   1bff0:	strb	r0, [sp, #7]
   1bff4:	ldrb	r0, [sp, #7]
   1bff8:	and	r0, r0, #1
   1bffc:	add	sp, sp, #8
   1c000:	bx	lr
   1c004:	sub	sp, sp, #8
   1c008:	str	r0, [sp]
   1c00c:	ldr	r0, [sp]
   1c010:	sub	r0, r0, #33	; 0x21
   1c014:	cmp	r0, #93	; 0x5d
   1c018:	bhi	1c030 <__assert_fail@plt+0xaf78>
   1c01c:	b	1c020 <__assert_fail@plt+0xaf68>
   1c020:	movw	r0, #1
   1c024:	and	r0, r0, #1
   1c028:	strb	r0, [sp, #7]
   1c02c:	b	1c03c <__assert_fail@plt+0xaf84>
   1c030:	movw	r0, #0
   1c034:	and	r0, r0, #1
   1c038:	strb	r0, [sp, #7]
   1c03c:	ldrb	r0, [sp, #7]
   1c040:	and	r0, r0, #1
   1c044:	add	sp, sp, #8
   1c048:	bx	lr
   1c04c:	sub	sp, sp, #8
   1c050:	str	r0, [sp]
   1c054:	ldr	r0, [sp]
   1c058:	sub	r0, r0, #97	; 0x61
   1c05c:	cmp	r0, #25
   1c060:	bhi	1c078 <__assert_fail@plt+0xafc0>
   1c064:	b	1c068 <__assert_fail@plt+0xafb0>
   1c068:	movw	r0, #1
   1c06c:	and	r0, r0, #1
   1c070:	strb	r0, [sp, #7]
   1c074:	b	1c084 <__assert_fail@plt+0xafcc>
   1c078:	movw	r0, #0
   1c07c:	and	r0, r0, #1
   1c080:	strb	r0, [sp, #7]
   1c084:	ldrb	r0, [sp, #7]
   1c088:	and	r0, r0, #1
   1c08c:	add	sp, sp, #8
   1c090:	bx	lr
   1c094:	sub	sp, sp, #8
   1c098:	str	r0, [sp]
   1c09c:	ldr	r0, [sp]
   1c0a0:	sub	r0, r0, #32
   1c0a4:	cmp	r0, #94	; 0x5e
   1c0a8:	bhi	1c0c0 <__assert_fail@plt+0xb008>
   1c0ac:	b	1c0b0 <__assert_fail@plt+0xaff8>
   1c0b0:	movw	r0, #1
   1c0b4:	and	r0, r0, #1
   1c0b8:	strb	r0, [sp, #7]
   1c0bc:	b	1c0cc <__assert_fail@plt+0xb014>
   1c0c0:	movw	r0, #0
   1c0c4:	and	r0, r0, #1
   1c0c8:	strb	r0, [sp, #7]
   1c0cc:	ldrb	r0, [sp, #7]
   1c0d0:	and	r0, r0, #1
   1c0d4:	add	sp, sp, #8
   1c0d8:	bx	lr
   1c0dc:	sub	sp, sp, #12
   1c0e0:	str	r0, [sp, #4]
   1c0e4:	ldr	r0, [sp, #4]
   1c0e8:	sub	r0, r0, #33	; 0x21
   1c0ec:	cmp	r0, #93	; 0x5d
   1c0f0:	str	r0, [sp]
   1c0f4:	bhi	1c290 <__assert_fail@plt+0xb1d8>
   1c0f8:	add	r0, pc, #8
   1c0fc:	ldr	r1, [sp]
   1c100:	ldr	r0, [r0, r1, lsl #2]
   1c104:	mov	pc, r0
   1c108:	andeq	ip, r1, r0, lsl #5
   1c10c:	andeq	ip, r1, r0, lsl #5
   1c110:	andeq	ip, r1, r0, lsl #5
   1c114:	andeq	ip, r1, r0, lsl #5
   1c118:	andeq	ip, r1, r0, lsl #5
   1c11c:	andeq	ip, r1, r0, lsl #5
   1c120:	andeq	ip, r1, r0, lsl #5
   1c124:	andeq	ip, r1, r0, lsl #5
   1c128:	andeq	ip, r1, r0, lsl #5
   1c12c:	andeq	ip, r1, r0, lsl #5
   1c130:	andeq	ip, r1, r0, lsl #5
   1c134:	andeq	ip, r1, r0, lsl #5
   1c138:	andeq	ip, r1, r0, lsl #5
   1c13c:	andeq	ip, r1, r0, lsl #5
   1c140:	andeq	ip, r1, r0, lsl #5
   1c144:	muleq	r1, r0, r2
   1c148:	muleq	r1, r0, r2
   1c14c:	muleq	r1, r0, r2
   1c150:	muleq	r1, r0, r2
   1c154:	muleq	r1, r0, r2
   1c158:	muleq	r1, r0, r2
   1c15c:	muleq	r1, r0, r2
   1c160:	muleq	r1, r0, r2
   1c164:	muleq	r1, r0, r2
   1c168:	muleq	r1, r0, r2
   1c16c:	andeq	ip, r1, r0, lsl #5
   1c170:	andeq	ip, r1, r0, lsl #5
   1c174:	andeq	ip, r1, r0, lsl #5
   1c178:	andeq	ip, r1, r0, lsl #5
   1c17c:	andeq	ip, r1, r0, lsl #5
   1c180:	andeq	ip, r1, r0, lsl #5
   1c184:	andeq	ip, r1, r0, lsl #5
   1c188:	muleq	r1, r0, r2
   1c18c:	muleq	r1, r0, r2
   1c190:	muleq	r1, r0, r2
   1c194:	muleq	r1, r0, r2
   1c198:	muleq	r1, r0, r2
   1c19c:	muleq	r1, r0, r2
   1c1a0:	muleq	r1, r0, r2
   1c1a4:	muleq	r1, r0, r2
   1c1a8:	muleq	r1, r0, r2
   1c1ac:	muleq	r1, r0, r2
   1c1b0:	muleq	r1, r0, r2
   1c1b4:	muleq	r1, r0, r2
   1c1b8:	muleq	r1, r0, r2
   1c1bc:	muleq	r1, r0, r2
   1c1c0:	muleq	r1, r0, r2
   1c1c4:	muleq	r1, r0, r2
   1c1c8:	muleq	r1, r0, r2
   1c1cc:	muleq	r1, r0, r2
   1c1d0:	muleq	r1, r0, r2
   1c1d4:	muleq	r1, r0, r2
   1c1d8:	muleq	r1, r0, r2
   1c1dc:	muleq	r1, r0, r2
   1c1e0:	muleq	r1, r0, r2
   1c1e4:	muleq	r1, r0, r2
   1c1e8:	muleq	r1, r0, r2
   1c1ec:	muleq	r1, r0, r2
   1c1f0:	andeq	ip, r1, r0, lsl #5
   1c1f4:	andeq	ip, r1, r0, lsl #5
   1c1f8:	andeq	ip, r1, r0, lsl #5
   1c1fc:	andeq	ip, r1, r0, lsl #5
   1c200:	andeq	ip, r1, r0, lsl #5
   1c204:	andeq	ip, r1, r0, lsl #5
   1c208:	muleq	r1, r0, r2
   1c20c:	muleq	r1, r0, r2
   1c210:	muleq	r1, r0, r2
   1c214:	muleq	r1, r0, r2
   1c218:	muleq	r1, r0, r2
   1c21c:	muleq	r1, r0, r2
   1c220:	muleq	r1, r0, r2
   1c224:	muleq	r1, r0, r2
   1c228:	muleq	r1, r0, r2
   1c22c:	muleq	r1, r0, r2
   1c230:	muleq	r1, r0, r2
   1c234:	muleq	r1, r0, r2
   1c238:	muleq	r1, r0, r2
   1c23c:	muleq	r1, r0, r2
   1c240:	muleq	r1, r0, r2
   1c244:	muleq	r1, r0, r2
   1c248:	muleq	r1, r0, r2
   1c24c:	muleq	r1, r0, r2
   1c250:	muleq	r1, r0, r2
   1c254:	muleq	r1, r0, r2
   1c258:	muleq	r1, r0, r2
   1c25c:	muleq	r1, r0, r2
   1c260:	muleq	r1, r0, r2
   1c264:	muleq	r1, r0, r2
   1c268:	muleq	r1, r0, r2
   1c26c:	muleq	r1, r0, r2
   1c270:	andeq	ip, r1, r0, lsl #5
   1c274:	andeq	ip, r1, r0, lsl #5
   1c278:	andeq	ip, r1, r0, lsl #5
   1c27c:	andeq	ip, r1, r0, lsl #5
   1c280:	movw	r0, #1
   1c284:	and	r0, r0, #1
   1c288:	strb	r0, [sp, #11]
   1c28c:	b	1c29c <__assert_fail@plt+0xb1e4>
   1c290:	movw	r0, #0
   1c294:	and	r0, r0, #1
   1c298:	strb	r0, [sp, #11]
   1c29c:	ldrb	r0, [sp, #11]
   1c2a0:	and	r0, r0, #1
   1c2a4:	add	sp, sp, #12
   1c2a8:	bx	lr
   1c2ac:	sub	sp, sp, #12
   1c2b0:	str	r0, [sp, #4]
   1c2b4:	ldr	r0, [sp, #4]
   1c2b8:	sub	r1, r0, #9
   1c2bc:	cmp	r1, #5
   1c2c0:	str	r0, [sp]
   1c2c4:	bcc	1c2dc <__assert_fail@plt+0xb224>
   1c2c8:	b	1c2cc <__assert_fail@plt+0xb214>
   1c2cc:	ldr	r0, [sp]
   1c2d0:	cmp	r0, #32
   1c2d4:	bne	1c2ec <__assert_fail@plt+0xb234>
   1c2d8:	b	1c2dc <__assert_fail@plt+0xb224>
   1c2dc:	movw	r0, #1
   1c2e0:	and	r0, r0, #1
   1c2e4:	strb	r0, [sp, #11]
   1c2e8:	b	1c2f8 <__assert_fail@plt+0xb240>
   1c2ec:	movw	r0, #0
   1c2f0:	and	r0, r0, #1
   1c2f4:	strb	r0, [sp, #11]
   1c2f8:	ldrb	r0, [sp, #11]
   1c2fc:	and	r0, r0, #1
   1c300:	add	sp, sp, #12
   1c304:	bx	lr
   1c308:	sub	sp, sp, #8
   1c30c:	str	r0, [sp]
   1c310:	ldr	r0, [sp]
   1c314:	sub	r0, r0, #65	; 0x41
   1c318:	cmp	r0, #25
   1c31c:	bhi	1c334 <__assert_fail@plt+0xb27c>
   1c320:	b	1c324 <__assert_fail@plt+0xb26c>
   1c324:	movw	r0, #1
   1c328:	and	r0, r0, #1
   1c32c:	strb	r0, [sp, #7]
   1c330:	b	1c340 <__assert_fail@plt+0xb288>
   1c334:	movw	r0, #0
   1c338:	and	r0, r0, #1
   1c33c:	strb	r0, [sp, #7]
   1c340:	ldrb	r0, [sp, #7]
   1c344:	and	r0, r0, #1
   1c348:	add	sp, sp, #8
   1c34c:	bx	lr
   1c350:	sub	sp, sp, #12
   1c354:	str	r0, [sp, #4]
   1c358:	ldr	r0, [sp, #4]
   1c35c:	sub	r1, r0, #48	; 0x30
   1c360:	cmp	r1, #10
   1c364:	str	r0, [sp]
   1c368:	bcc	1c398 <__assert_fail@plt+0xb2e0>
   1c36c:	b	1c370 <__assert_fail@plt+0xb2b8>
   1c370:	ldr	r0, [sp]
   1c374:	sub	r1, r0, #65	; 0x41
   1c378:	cmp	r1, #6
   1c37c:	bcc	1c398 <__assert_fail@plt+0xb2e0>
   1c380:	b	1c384 <__assert_fail@plt+0xb2cc>
   1c384:	ldr	r0, [sp]
   1c388:	sub	r1, r0, #97	; 0x61
   1c38c:	cmp	r1, #5
   1c390:	bhi	1c3a8 <__assert_fail@plt+0xb2f0>
   1c394:	b	1c398 <__assert_fail@plt+0xb2e0>
   1c398:	movw	r0, #1
   1c39c:	and	r0, r0, #1
   1c3a0:	strb	r0, [sp, #11]
   1c3a4:	b	1c3b4 <__assert_fail@plt+0xb2fc>
   1c3a8:	movw	r0, #0
   1c3ac:	and	r0, r0, #1
   1c3b0:	strb	r0, [sp, #11]
   1c3b4:	ldrb	r0, [sp, #11]
   1c3b8:	and	r0, r0, #1
   1c3bc:	add	sp, sp, #12
   1c3c0:	bx	lr
   1c3c4:	sub	sp, sp, #8
   1c3c8:	str	r0, [sp]
   1c3cc:	ldr	r0, [sp]
   1c3d0:	sub	r0, r0, #65	; 0x41
   1c3d4:	cmp	r0, #25
   1c3d8:	bhi	1c3f4 <__assert_fail@plt+0xb33c>
   1c3dc:	b	1c3e0 <__assert_fail@plt+0xb328>
   1c3e0:	ldr	r0, [sp]
   1c3e4:	sub	r0, r0, #65	; 0x41
   1c3e8:	add	r0, r0, #97	; 0x61
   1c3ec:	str	r0, [sp, #4]
   1c3f0:	b	1c3fc <__assert_fail@plt+0xb344>
   1c3f4:	ldr	r0, [sp]
   1c3f8:	str	r0, [sp, #4]
   1c3fc:	ldr	r0, [sp, #4]
   1c400:	add	sp, sp, #8
   1c404:	bx	lr
   1c408:	sub	sp, sp, #8
   1c40c:	str	r0, [sp]
   1c410:	ldr	r0, [sp]
   1c414:	sub	r0, r0, #97	; 0x61
   1c418:	cmp	r0, #25
   1c41c:	bhi	1c438 <__assert_fail@plt+0xb380>
   1c420:	b	1c424 <__assert_fail@plt+0xb36c>
   1c424:	ldr	r0, [sp]
   1c428:	sub	r0, r0, #97	; 0x61
   1c42c:	add	r0, r0, #65	; 0x41
   1c430:	str	r0, [sp, #4]
   1c434:	b	1c440 <__assert_fail@plt+0xb388>
   1c438:	ldr	r0, [sp]
   1c43c:	str	r0, [sp, #4]
   1c440:	ldr	r0, [sp, #4]
   1c444:	add	sp, sp, #8
   1c448:	bx	lr
   1c44c:	push	{r4, r5, fp, lr}
   1c450:	add	fp, sp, #8
   1c454:	sub	sp, sp, #272	; 0x110
   1c458:	add	r1, sp, #7
   1c45c:	str	r0, [fp, #-16]
   1c460:	ldr	r0, [fp, #-16]
   1c464:	movw	r2, #257	; 0x101
   1c468:	bl	1c4e8 <__assert_fail@plt+0xb430>
   1c46c:	cmp	r0, #0
   1c470:	beq	1c484 <__assert_fail@plt+0xb3cc>
   1c474:	movw	r0, #0
   1c478:	and	r0, r0, #1
   1c47c:	strb	r0, [fp, #-9]
   1c480:	b	1c4d8 <__assert_fail@plt+0xb420>
   1c484:	add	r0, sp, #7
   1c488:	movw	r1, #53844	; 0xd254
   1c48c:	movt	r1, #1
   1c490:	bl	10e6c <strcmp@plt>
   1c494:	cmp	r0, #0
   1c498:	movw	r0, #1
   1c49c:	str	r0, [sp]
   1c4a0:	beq	1c4c4 <__assert_fail@plt+0xb40c>
   1c4a4:	add	r0, sp, #7
   1c4a8:	movw	r1, #53846	; 0xd256
   1c4ac:	movt	r1, #1
   1c4b0:	bl	10e6c <strcmp@plt>
   1c4b4:	cmp	r0, #0
   1c4b8:	movw	r0, #0
   1c4bc:	moveq	r0, #1
   1c4c0:	str	r0, [sp]
   1c4c4:	ldr	r0, [sp]
   1c4c8:	mvn	r1, #0
   1c4cc:	eor	r0, r0, r1
   1c4d0:	and	r0, r0, #1
   1c4d4:	strb	r0, [fp, #-9]
   1c4d8:	ldrb	r0, [fp, #-9]
   1c4dc:	and	r0, r0, #1
   1c4e0:	sub	sp, fp, #8
   1c4e4:	pop	{r4, r5, fp, pc}
   1c4e8:	push	{fp, lr}
   1c4ec:	mov	fp, sp
   1c4f0:	sub	sp, sp, #16
   1c4f4:	str	r0, [fp, #-4]
   1c4f8:	str	r1, [sp, #8]
   1c4fc:	str	r2, [sp, #4]
   1c500:	ldr	r0, [fp, #-4]
   1c504:	ldr	r1, [sp, #8]
   1c508:	ldr	r2, [sp, #4]
   1c50c:	bl	1c518 <__assert_fail@plt+0xb460>
   1c510:	mov	sp, fp
   1c514:	pop	{fp, pc}
   1c518:	push	{fp, lr}
   1c51c:	mov	fp, sp
   1c520:	sub	sp, sp, #24
   1c524:	str	r0, [fp, #-8]
   1c528:	str	r1, [sp, #12]
   1c52c:	str	r2, [sp, #8]
   1c530:	ldr	r0, [fp, #-8]
   1c534:	bl	1c618 <__assert_fail@plt+0xb560>
   1c538:	str	r0, [sp, #4]
   1c53c:	ldr	r0, [sp, #4]
   1c540:	movw	r1, #0
   1c544:	cmp	r0, r1
   1c548:	bne	1c570 <__assert_fail@plt+0xb4b8>
   1c54c:	ldr	r0, [sp, #8]
   1c550:	cmp	r0, #0
   1c554:	bls	1c564 <__assert_fail@plt+0xb4ac>
   1c558:	ldr	r0, [sp, #12]
   1c55c:	movw	r1, #0
   1c560:	strb	r1, [r0]
   1c564:	movw	r0, #22
   1c568:	str	r0, [fp, #-4]
   1c56c:	b	1c5ec <__assert_fail@plt+0xb534>
   1c570:	ldr	r0, [sp, #4]
   1c574:	bl	10fc8 <strlen@plt>
   1c578:	str	r0, [sp]
   1c57c:	ldr	r0, [sp]
   1c580:	ldr	r1, [sp, #8]
   1c584:	cmp	r0, r1
   1c588:	bcs	1c5ac <__assert_fail@plt+0xb4f4>
   1c58c:	ldr	r0, [sp, #12]
   1c590:	ldr	r1, [sp, #4]
   1c594:	ldr	r2, [sp]
   1c598:	add	r2, r2, #1
   1c59c:	bl	10ec0 <memcpy@plt>
   1c5a0:	movw	r0, #0
   1c5a4:	str	r0, [fp, #-4]
   1c5a8:	b	1c5ec <__assert_fail@plt+0xb534>
   1c5ac:	ldr	r0, [sp, #8]
   1c5b0:	cmp	r0, #0
   1c5b4:	bls	1c5e4 <__assert_fail@plt+0xb52c>
   1c5b8:	ldr	r0, [sp, #12]
   1c5bc:	ldr	r1, [sp, #4]
   1c5c0:	ldr	r2, [sp, #8]
   1c5c4:	sub	r2, r2, #1
   1c5c8:	bl	10ec0 <memcpy@plt>
   1c5cc:	ldr	r0, [sp, #12]
   1c5d0:	ldr	r1, [sp, #8]
   1c5d4:	sub	r1, r1, #1
   1c5d8:	add	r0, r0, r1
   1c5dc:	movw	r1, #0
   1c5e0:	strb	r1, [r0]
   1c5e4:	movw	r0, #34	; 0x22
   1c5e8:	str	r0, [fp, #-4]
   1c5ec:	ldr	r0, [fp, #-4]
   1c5f0:	mov	sp, fp
   1c5f4:	pop	{fp, pc}
   1c5f8:	push	{fp, lr}
   1c5fc:	mov	fp, sp
   1c600:	sub	sp, sp, #8
   1c604:	str	r0, [sp, #4]
   1c608:	ldr	r0, [sp, #4]
   1c60c:	bl	1c618 <__assert_fail@plt+0xb560>
   1c610:	mov	sp, fp
   1c614:	pop	{fp, pc}
   1c618:	push	{fp, lr}
   1c61c:	mov	fp, sp
   1c620:	sub	sp, sp, #8
   1c624:	str	r0, [sp, #4]
   1c628:	ldr	r0, [sp, #4]
   1c62c:	movw	r1, #0
   1c630:	bl	11040 <setlocale@plt>
   1c634:	str	r0, [sp]
   1c638:	ldr	r0, [sp]
   1c63c:	mov	sp, fp
   1c640:	pop	{fp, pc}
   1c644:	cmp	r3, #0
   1c648:	cmpeq	r2, #0
   1c64c:	bne	1c670 <__assert_fail@plt+0xb5b8>
   1c650:	cmp	r1, #0
   1c654:	movlt	r1, #-2147483648	; 0x80000000
   1c658:	movlt	r0, #0
   1c65c:	blt	1c66c <__assert_fail@plt+0xb5b4>
   1c660:	cmpeq	r0, #0
   1c664:	mvnne	r1, #-2147483648	; 0x80000000
   1c668:	mvnne	r0, #0
   1c66c:	b	1c754 <__assert_fail@plt+0xb69c>
   1c670:	sub	sp, sp, #8
   1c674:	push	{sp, lr}
   1c678:	cmp	r1, #0
   1c67c:	blt	1c69c <__assert_fail@plt+0xb5e4>
   1c680:	cmp	r3, #0
   1c684:	blt	1c6d0 <__assert_fail@plt+0xb618>
   1c688:	bl	1c764 <__assert_fail@plt+0xb6ac>
   1c68c:	ldr	lr, [sp, #4]
   1c690:	add	sp, sp, #8
   1c694:	pop	{r2, r3}
   1c698:	bx	lr
   1c69c:	rsbs	r0, r0, #0
   1c6a0:	sbc	r1, r1, r1, lsl #1
   1c6a4:	cmp	r3, #0
   1c6a8:	blt	1c6f4 <__assert_fail@plt+0xb63c>
   1c6ac:	bl	1c764 <__assert_fail@plt+0xb6ac>
   1c6b0:	ldr	lr, [sp, #4]
   1c6b4:	add	sp, sp, #8
   1c6b8:	pop	{r2, r3}
   1c6bc:	rsbs	r0, r0, #0
   1c6c0:	sbc	r1, r1, r1, lsl #1
   1c6c4:	rsbs	r2, r2, #0
   1c6c8:	sbc	r3, r3, r3, lsl #1
   1c6cc:	bx	lr
   1c6d0:	rsbs	r2, r2, #0
   1c6d4:	sbc	r3, r3, r3, lsl #1
   1c6d8:	bl	1c764 <__assert_fail@plt+0xb6ac>
   1c6dc:	ldr	lr, [sp, #4]
   1c6e0:	add	sp, sp, #8
   1c6e4:	pop	{r2, r3}
   1c6e8:	rsbs	r0, r0, #0
   1c6ec:	sbc	r1, r1, r1, lsl #1
   1c6f0:	bx	lr
   1c6f4:	rsbs	r2, r2, #0
   1c6f8:	sbc	r3, r3, r3, lsl #1
   1c6fc:	bl	1c764 <__assert_fail@plt+0xb6ac>
   1c700:	ldr	lr, [sp, #4]
   1c704:	add	sp, sp, #8
   1c708:	pop	{r2, r3}
   1c70c:	rsbs	r2, r2, #0
   1c710:	sbc	r3, r3, r3, lsl #1
   1c714:	bx	lr
   1c718:	cmp	r3, #0
   1c71c:	cmpeq	r2, #0
   1c720:	bne	1c738 <__assert_fail@plt+0xb680>
   1c724:	cmp	r1, #0
   1c728:	cmpeq	r0, #0
   1c72c:	mvnne	r1, #0
   1c730:	mvnne	r0, #0
   1c734:	b	1c754 <__assert_fail@plt+0xb69c>
   1c738:	sub	sp, sp, #8
   1c73c:	push	{sp, lr}
   1c740:	bl	1c764 <__assert_fail@plt+0xb6ac>
   1c744:	ldr	lr, [sp, #4]
   1c748:	add	sp, sp, #8
   1c74c:	pop	{r2, r3}
   1c750:	bx	lr
   1c754:	push	{r1, lr}
   1c758:	mov	r0, #8
   1c75c:	bl	10e60 <raise@plt>
   1c760:	pop	{r1, pc}
   1c764:	cmp	r1, r3
   1c768:	cmpeq	r0, r2
   1c76c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c770:	mov	r4, r0
   1c774:	movcc	r0, #0
   1c778:	mov	r5, r1
   1c77c:	ldr	lr, [sp, #36]	; 0x24
   1c780:	movcc	r1, r0
   1c784:	bcc	1c880 <__assert_fail@plt+0xb7c8>
   1c788:	cmp	r3, #0
   1c78c:	clzeq	ip, r2
   1c790:	clzne	ip, r3
   1c794:	addeq	ip, ip, #32
   1c798:	cmp	r5, #0
   1c79c:	clzeq	r1, r4
   1c7a0:	addeq	r1, r1, #32
   1c7a4:	clzne	r1, r5
   1c7a8:	sub	ip, ip, r1
   1c7ac:	sub	sl, ip, #32
   1c7b0:	lsl	r9, r3, ip
   1c7b4:	rsb	fp, ip, #32
   1c7b8:	orr	r9, r9, r2, lsl sl
   1c7bc:	orr	r9, r9, r2, lsr fp
   1c7c0:	lsl	r8, r2, ip
   1c7c4:	cmp	r5, r9
   1c7c8:	cmpeq	r4, r8
   1c7cc:	movcc	r0, #0
   1c7d0:	movcc	r1, r0
   1c7d4:	bcc	1c7f0 <__assert_fail@plt+0xb738>
   1c7d8:	mov	r0, #1
   1c7dc:	subs	r4, r4, r8
   1c7e0:	lsl	r1, r0, sl
   1c7e4:	orr	r1, r1, r0, lsr fp
   1c7e8:	lsl	r0, r0, ip
   1c7ec:	sbc	r5, r5, r9
   1c7f0:	cmp	ip, #0
   1c7f4:	beq	1c880 <__assert_fail@plt+0xb7c8>
   1c7f8:	lsr	r6, r8, #1
   1c7fc:	orr	r6, r6, r9, lsl #31
   1c800:	lsr	r7, r9, #1
   1c804:	mov	r2, ip
   1c808:	b	1c82c <__assert_fail@plt+0xb774>
   1c80c:	subs	r3, r4, r6
   1c810:	sbc	r8, r5, r7
   1c814:	adds	r3, r3, r3
   1c818:	adc	r8, r8, r8
   1c81c:	adds	r4, r3, #1
   1c820:	adc	r5, r8, #0
   1c824:	subs	r2, r2, #1
   1c828:	beq	1c848 <__assert_fail@plt+0xb790>
   1c82c:	cmp	r5, r7
   1c830:	cmpeq	r4, r6
   1c834:	bcs	1c80c <__assert_fail@plt+0xb754>
   1c838:	adds	r4, r4, r4
   1c83c:	adc	r5, r5, r5
   1c840:	subs	r2, r2, #1
   1c844:	bne	1c82c <__assert_fail@plt+0xb774>
   1c848:	lsr	r3, r4, ip
   1c84c:	orr	r3, r3, r5, lsl fp
   1c850:	lsr	r2, r5, ip
   1c854:	orr	r3, r3, r5, lsr sl
   1c858:	adds	r0, r0, r4
   1c85c:	mov	r4, r3
   1c860:	lsl	r3, r2, ip
   1c864:	orr	r3, r3, r4, lsl sl
   1c868:	lsl	ip, r4, ip
   1c86c:	orr	r3, r3, r4, lsr fp
   1c870:	adc	r1, r1, r5
   1c874:	subs	r0, r0, ip
   1c878:	mov	r5, r2
   1c87c:	sbc	r1, r1, r3
   1c880:	cmp	lr, #0
   1c884:	strdne	r4, [lr]
   1c888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c88c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c890:	mov	r7, r0
   1c894:	ldr	r6, [pc, #72]	; 1c8e4 <__assert_fail@plt+0xb82c>
   1c898:	ldr	r5, [pc, #72]	; 1c8e8 <__assert_fail@plt+0xb830>
   1c89c:	add	r6, pc, r6
   1c8a0:	add	r5, pc, r5
   1c8a4:	sub	r6, r6, r5
   1c8a8:	mov	r8, r1
   1c8ac:	mov	r9, r2
   1c8b0:	bl	10e28 <calloc@plt-0x20>
   1c8b4:	asrs	r6, r6, #2
   1c8b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c8bc:	mov	r4, #0
   1c8c0:	add	r4, r4, #1
   1c8c4:	ldr	r3, [r5], #4
   1c8c8:	mov	r2, r9
   1c8cc:	mov	r1, r8
   1c8d0:	mov	r0, r7
   1c8d4:	blx	r3
   1c8d8:	cmp	r6, r4
   1c8dc:	bne	1c8c0 <__assert_fail@plt+0xb808>
   1c8e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c8e4:	andeq	r1, r1, r8, ror #12
   1c8e8:	andeq	r1, r1, r0, ror #12
   1c8ec:	bx	lr
   1c8f0:	ldr	r3, [pc, #12]	; 1c904 <__assert_fail@plt+0xb84c>
   1c8f4:	mov	r1, #0
   1c8f8:	add	r3, pc, r3
   1c8fc:	ldr	r2, [r3]
   1c900:	b	10ff8 <__cxa_atexit@plt>
   1c904:	andeq	r1, r1, r8, ror #15

Disassembly of section .fini:

0001c908 <.fini>:
   1c908:	push	{r3, lr}
   1c90c:	pop	{r3, pc}
