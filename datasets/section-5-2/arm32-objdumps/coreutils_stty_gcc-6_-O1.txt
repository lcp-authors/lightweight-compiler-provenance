
../repos/coreutils/src/stty:     file format elf32-littlearm


Disassembly of section .init:

00010e98 <.init>:
   10e98:	push	{r3, lr}
   10e9c:	bl	111dc <tcgetattr@plt+0x48>
   10ea0:	pop	{r3, pc}

Disassembly of section .plt:

00010ea4 <calloc@plt-0x14>:
   10ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea8:	ldr	lr, [pc, #4]	; 10eb4 <calloc@plt-0x4>
   10eac:	add	lr, pc, lr
   10eb0:	ldr	pc, [lr, #8]!
   10eb4:	andeq	fp, r1, ip, asr #2

00010eb8 <calloc@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #110592	; 0x1b000
   10ec0:	ldr	pc, [ip, #332]!	; 0x14c

00010ec4 <fputs_unlocked@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #110592	; 0x1b000
   10ecc:	ldr	pc, [ip, #324]!	; 0x144

00010ed0 <raise@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #110592	; 0x1b000
   10ed8:	ldr	pc, [ip, #316]!	; 0x13c

00010edc <strcmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #110592	; 0x1b000
   10ee4:	ldr	pc, [ip, #308]!	; 0x134

00010ee8 <strtol@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #110592	; 0x1b000
   10ef0:	ldr	pc, [ip, #300]!	; 0x12c

00010ef4 <fflush@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #110592	; 0x1b000
   10efc:	ldr	pc, [ip, #292]!	; 0x124

00010f00 <free@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #110592	; 0x1b000
   10f08:	ldr	pc, [ip, #284]!	; 0x11c

00010f0c <_exit@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #110592	; 0x1b000
   10f14:	ldr	pc, [ip, #276]!	; 0x114

00010f18 <memcpy@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #110592	; 0x1b000
   10f20:	ldr	pc, [ip, #268]!	; 0x10c

00010f24 <__strtoull_internal@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #110592	; 0x1b000
   10f2c:	ldr	pc, [ip, #260]!	; 0x104

00010f30 <mbsinit@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #110592	; 0x1b000
   10f38:	ldr	pc, [ip, #252]!	; 0xfc

00010f3c <memcmp@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #110592	; 0x1b000
   10f44:	ldr	pc, [ip, #244]!	; 0xf4

00010f48 <fputc_unlocked@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #110592	; 0x1b000
   10f50:	ldr	pc, [ip, #236]!	; 0xec

00010f54 <dcgettext@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #110592	; 0x1b000
   10f5c:	ldr	pc, [ip, #228]!	; 0xe4

00010f60 <cfgetispeed@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #110592	; 0x1b000
   10f68:	ldr	pc, [ip, #220]!	; 0xdc

00010f6c <dup2@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #110592	; 0x1b000
   10f74:	ldr	pc, [ip, #212]!	; 0xd4

00010f78 <realloc@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #110592	; 0x1b000
   10f80:	ldr	pc, [ip, #204]!	; 0xcc

00010f84 <textdomain@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #110592	; 0x1b000
   10f8c:	ldr	pc, [ip, #196]!	; 0xc4

00010f90 <iswprint@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #110592	; 0x1b000
   10f98:	ldr	pc, [ip, #188]!	; 0xbc

00010f9c <cfsetospeed@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #110592	; 0x1b000
   10fa4:	ldr	pc, [ip, #180]!	; 0xb4

00010fa8 <fwrite@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #110592	; 0x1b000
   10fb0:	ldr	pc, [ip, #172]!	; 0xac

00010fb4 <ioctl@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #110592	; 0x1b000
   10fbc:	ldr	pc, [ip, #164]!	; 0xa4

00010fc0 <lseek64@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #110592	; 0x1b000
   10fc8:	ldr	pc, [ip, #156]!	; 0x9c

00010fcc <__ctype_get_mb_cur_max@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #110592	; 0x1b000
   10fd4:	ldr	pc, [ip, #148]!	; 0x94

00010fd8 <tcsetattr@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #110592	; 0x1b000
   10fe0:	ldr	pc, [ip, #140]!	; 0x8c

00010fe4 <__fpending@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #110592	; 0x1b000
   10fec:	ldr	pc, [ip, #132]!	; 0x84

00010ff0 <mbrtowc@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #110592	; 0x1b000
   10ff8:	ldr	pc, [ip, #124]!	; 0x7c

00010ffc <error@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #110592	; 0x1b000
   11004:	ldr	pc, [ip, #116]!	; 0x74

00011008 <open64@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #110592	; 0x1b000
   11010:	ldr	pc, [ip, #108]!	; 0x6c

00011014 <getenv@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #110592	; 0x1b000
   1101c:	ldr	pc, [ip, #100]!	; 0x64

00011020 <malloc@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #110592	; 0x1b000
   11028:	ldr	pc, [ip, #92]!	; 0x5c

0001102c <__libc_start_main@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #110592	; 0x1b000
   11034:	ldr	pc, [ip, #84]!	; 0x54

00011038 <__freading@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #110592	; 0x1b000
   11040:	ldr	pc, [ip, #76]!	; 0x4c

00011044 <__gmon_start__@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #110592	; 0x1b000
   1104c:	ldr	pc, [ip, #68]!	; 0x44

00011050 <getopt_long@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #110592	; 0x1b000
   11058:	ldr	pc, [ip, #60]!	; 0x3c

0001105c <__ctype_b_loc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #110592	; 0x1b000
   11064:	ldr	pc, [ip, #52]!	; 0x34

00011068 <exit@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #110592	; 0x1b000
   11070:	ldr	pc, [ip, #44]!	; 0x2c

00011074 <strtoul@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #110592	; 0x1b000
   1107c:	ldr	pc, [ip, #36]!	; 0x24

00011080 <strlen@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #110592	; 0x1b000
   11088:	ldr	pc, [ip, #28]!

0001108c <strchr@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #110592	; 0x1b000
   11094:	ldr	pc, [ip, #20]!

00011098 <cfsetispeed@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #110592	; 0x1b000
   110a0:	ldr	pc, [ip, #12]!

000110a4 <cfgetospeed@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #110592	; 0x1b000
   110ac:	ldr	pc, [ip, #4]!

000110b0 <__errno_location@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #106496	; 0x1a000
   110b8:	ldr	pc, [ip, #4092]!	; 0xffc

000110bc <__cxa_atexit@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #106496	; 0x1a000
   110c4:	ldr	pc, [ip, #4084]!	; 0xff4

000110c8 <__vasprintf_chk@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #106496	; 0x1a000
   110d0:	ldr	pc, [ip, #4076]!	; 0xfec

000110d4 <memset@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #106496	; 0x1a000
   110dc:	ldr	pc, [ip, #4068]!	; 0xfe4

000110e0 <__printf_chk@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #106496	; 0x1a000
   110e8:	ldr	pc, [ip, #4060]!	; 0xfdc

000110ec <fileno@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #106496	; 0x1a000
   110f4:	ldr	pc, [ip, #4052]!	; 0xfd4

000110f8 <__fprintf_chk@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #106496	; 0x1a000
   11100:	ldr	pc, [ip, #4044]!	; 0xfcc

00011104 <fclose@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #106496	; 0x1a000
   1110c:	ldr	pc, [ip, #4036]!	; 0xfc4

00011110 <fseeko64@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #106496	; 0x1a000
   11118:	ldr	pc, [ip, #4028]!	; 0xfbc

0001111c <fcntl64@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #106496	; 0x1a000
   11124:	ldr	pc, [ip, #4020]!	; 0xfb4

00011128 <__overflow@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #106496	; 0x1a000
   11130:	ldr	pc, [ip, #4012]!	; 0xfac

00011134 <setlocale@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #106496	; 0x1a000
   1113c:	ldr	pc, [ip, #4004]!	; 0xfa4

00011140 <strrchr@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #106496	; 0x1a000
   11148:	ldr	pc, [ip, #3996]!	; 0xf9c

0001114c <nl_langinfo@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #106496	; 0x1a000
   11154:	ldr	pc, [ip, #3988]!	; 0xf94

00011158 <bindtextdomain@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #106496	; 0x1a000
   11160:	ldr	pc, [ip, #3980]!	; 0xf8c

00011164 <strncmp@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #106496	; 0x1a000
   1116c:	ldr	pc, [ip, #3972]!	; 0xf84

00011170 <abort@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #106496	; 0x1a000
   11178:	ldr	pc, [ip, #3964]!	; 0xf7c

0001117c <close@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #106496	; 0x1a000
   11184:	ldr	pc, [ip, #3956]!	; 0xf74

00011188 <__assert_fail@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #106496	; 0x1a000
   11190:	ldr	pc, [ip, #3948]!	; 0xf6c

00011194 <tcgetattr@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #106496	; 0x1a000
   1119c:	ldr	pc, [ip, #3940]!	; 0xf64

Disassembly of section .text:

000111a0 <.text>:
   111a0:	mov	fp, #0
   111a4:	mov	lr, #0
   111a8:	pop	{r1}		; (ldr r1, [sp], #4)
   111ac:	mov	r2, sp
   111b0:	push	{r2}		; (str r2, [sp, #-4]!)
   111b4:	push	{r0}		; (str r0, [sp, #-4]!)
   111b8:	ldr	ip, [pc, #16]	; 111d0 <tcgetattr@plt+0x3c>
   111bc:	push	{ip}		; (str ip, [sp, #-4]!)
   111c0:	ldr	r0, [pc, #12]	; 111d4 <tcgetattr@plt+0x40>
   111c4:	ldr	r3, [pc, #12]	; 111d8 <tcgetattr@plt+0x44>
   111c8:	bl	1102c <__libc_start_main@plt>
   111cc:	bl	11170 <abort@plt>
   111d0:	strdeq	r8, [r1], -ip
   111d4:	ldrdeq	r3, [r1], -r4
   111d8:	muleq	r1, ip, r2
   111dc:	ldr	r3, [pc, #20]	; 111f8 <tcgetattr@plt+0x64>
   111e0:	ldr	r2, [pc, #20]	; 111fc <tcgetattr@plt+0x68>
   111e4:	add	r3, pc, r3
   111e8:	ldr	r2, [r3, r2]
   111ec:	cmp	r2, #0
   111f0:	bxeq	lr
   111f4:	b	11044 <__gmon_start__@plt>
   111f8:	andeq	sl, r1, r4, lsl lr
   111fc:	andeq	r0, r0, r4, lsl #2
   11200:	ldr	r3, [pc, #28]	; 11224 <tcgetattr@plt+0x90>
   11204:	ldr	r0, [pc, #28]	; 11228 <tcgetattr@plt+0x94>
   11208:	sub	r3, r3, r0
   1120c:	cmp	r3, #6
   11210:	bxls	lr
   11214:	ldr	r3, [pc, #16]	; 1122c <tcgetattr@plt+0x98>
   11218:	cmp	r3, #0
   1121c:	bxeq	lr
   11220:	bx	r3
   11224:	andeq	ip, r2, pc, asr r1
   11228:	andeq	ip, r2, ip, asr r1
   1122c:	andeq	r0, r0, r0
   11230:	ldr	r1, [pc, #36]	; 1125c <tcgetattr@plt+0xc8>
   11234:	ldr	r0, [pc, #36]	; 11260 <tcgetattr@plt+0xcc>
   11238:	sub	r1, r1, r0
   1123c:	asr	r1, r1, #2
   11240:	add	r1, r1, r1, lsr #31
   11244:	asrs	r1, r1, #1
   11248:	bxeq	lr
   1124c:	ldr	r3, [pc, #16]	; 11264 <tcgetattr@plt+0xd0>
   11250:	cmp	r3, #0
   11254:	bxeq	lr
   11258:	bx	r3
   1125c:	andeq	ip, r2, ip, asr r1
   11260:	andeq	ip, r2, ip, asr r1
   11264:	andeq	r0, r0, r0
   11268:	push	{r4, lr}
   1126c:	ldr	r4, [pc, #24]	; 1128c <tcgetattr@plt+0xf8>
   11270:	ldrb	r3, [r4]
   11274:	cmp	r3, #0
   11278:	popne	{r4, pc}
   1127c:	bl	11200 <tcgetattr@plt+0x6c>
   11280:	mov	r3, #1
   11284:	strb	r3, [r4]
   11288:	pop	{r4, pc}
   1128c:	andeq	ip, r2, r4, lsl #3
   11290:	ldr	r0, [pc, #40]	; 112c0 <tcgetattr@plt+0x12c>
   11294:	ldr	r3, [r0]
   11298:	cmp	r3, #0
   1129c:	bne	112a4 <tcgetattr@plt+0x110>
   112a0:	b	11230 <tcgetattr@plt+0x9c>
   112a4:	ldr	r3, [pc, #24]	; 112c4 <tcgetattr@plt+0x130>
   112a8:	cmp	r3, #0
   112ac:	beq	112a0 <tcgetattr@plt+0x10c>
   112b0:	push	{r4, lr}
   112b4:	blx	r3
   112b8:	pop	{r4, lr}
   112bc:	b	11230 <tcgetattr@plt+0x9c>
   112c0:	andeq	fp, r2, r4, lsl pc
   112c4:	andeq	r0, r0, r0
   112c8:	cmp	r0, #0
   112cc:	ldrne	r3, [pc, #72]	; 1131c <tcgetattr@plt+0x188>
   112d0:	movne	r2, #0
   112d4:	beq	1130c <tcgetattr@plt+0x178>
   112d8:	add	r2, r2, #1
   112dc:	ldr	r1, [r3, #12]
   112e0:	cmp	r1, #0
   112e4:	beq	11314 <tcgetattr@plt+0x180>
   112e8:	add	r3, r3, #12
   112ec:	ldr	r1, [r3, #4]
   112f0:	cmp	r1, r0
   112f4:	bne	112d8 <tcgetattr@plt+0x144>
   112f8:	mov	r1, #12
   112fc:	ldr	r3, [pc, #24]	; 1131c <tcgetattr@plt+0x188>
   11300:	mla	r2, r1, r2, r3
   11304:	ldr	r0, [r2, #8]
   11308:	bx	lr
   1130c:	mov	r2, #0
   11310:	b	112f8 <tcgetattr@plt+0x164>
   11314:	mov	r0, #0
   11318:	bx	lr
   1131c:	andeq	r8, r1, r4, lsr #6
   11320:	cmp	r0, #0
   11324:	beq	113f0 <tcgetattr@plt+0x25c>
   11328:	cmp	r0, #31
   1132c:	bls	113c8 <tcgetattr@plt+0x234>
   11330:	cmp	r0, #126	; 0x7e
   11334:	ldrls	r3, [pc, #188]	; 113f8 <tcgetattr@plt+0x264>
   11338:	strbls	r0, [r3], #1
   1133c:	bls	113e0 <tcgetattr@plt+0x24c>
   11340:	cmp	r0, #127	; 0x7f
   11344:	beq	11390 <tcgetattr@plt+0x1fc>
   11348:	ldr	r3, [pc, #168]	; 113f8 <tcgetattr@plt+0x264>
   1134c:	mov	r2, #77	; 0x4d
   11350:	strb	r2, [r3]
   11354:	mov	r2, #45	; 0x2d
   11358:	strb	r2, [r3, #1]
   1135c:	cmp	r0, #159	; 0x9f
   11360:	bls	113ac <tcgetattr@plt+0x218>
   11364:	cmp	r0, #255	; 0xff
   11368:	subne	r0, r0, #128	; 0x80
   1136c:	strbne	r0, [r3, #2]
   11370:	addne	r3, r3, #3
   11374:	ldreq	r3, [pc, #124]	; 113f8 <tcgetattr@plt+0x264>
   11378:	moveq	r2, #94	; 0x5e
   1137c:	strbeq	r2, [r3, #2]
   11380:	moveq	r2, #63	; 0x3f
   11384:	strbeq	r2, [r3, #3]
   11388:	addeq	r3, r3, #4
   1138c:	b	113e0 <tcgetattr@plt+0x24c>
   11390:	ldr	r3, [pc, #96]	; 113f8 <tcgetattr@plt+0x264>
   11394:	mov	r2, #94	; 0x5e
   11398:	strb	r2, [r3]
   1139c:	mov	r2, #63	; 0x3f
   113a0:	strb	r2, [r3, #1]
   113a4:	add	r3, r3, #2
   113a8:	b	113e0 <tcgetattr@plt+0x24c>
   113ac:	ldr	r3, [pc, #68]	; 113f8 <tcgetattr@plt+0x264>
   113b0:	mov	r2, #94	; 0x5e
   113b4:	strb	r2, [r3, #2]
   113b8:	sub	r0, r0, #64	; 0x40
   113bc:	strb	r0, [r3, #3]
   113c0:	add	r3, r3, #4
   113c4:	b	113e0 <tcgetattr@plt+0x24c>
   113c8:	ldr	r3, [pc, #40]	; 113f8 <tcgetattr@plt+0x264>
   113cc:	mov	r2, #94	; 0x5e
   113d0:	strb	r2, [r3]
   113d4:	add	r0, r0, #64	; 0x40
   113d8:	strb	r0, [r3, #1]
   113dc:	add	r3, r3, #2
   113e0:	mov	r2, #0
   113e4:	strb	r2, [r3]
   113e8:	ldr	r0, [pc, #8]	; 113f8 <tcgetattr@plt+0x264>
   113ec:	bx	lr
   113f0:	ldr	r0, [pc, #4]	; 113fc <tcgetattr@plt+0x268>
   113f4:	bx	lr
   113f8:	andeq	ip, r2, r8, lsl #3
   113fc:	andeq	r8, r1, r4, ror sp
   11400:	push	{r4, r5, r6, lr}
   11404:	mov	r6, r0
   11408:	ldr	r5, [pc, #64]	; 11450 <tcgetattr@plt+0x2bc>
   1140c:	ldr	r1, [pc, #64]	; 11454 <tcgetattr@plt+0x2c0>
   11410:	mov	r4, #0
   11414:	mov	r0, r6
   11418:	bl	10edc <strcmp@plt>
   1141c:	cmp	r0, #0
   11420:	beq	1143c <tcgetattr@plt+0x2a8>
   11424:	add	r4, r4, #1
   11428:	ldr	r1, [r5, #12]!
   1142c:	cmp	r1, #0
   11430:	bne	11414 <tcgetattr@plt+0x280>
   11434:	mvn	r0, #0
   11438:	pop	{r4, r5, r6, pc}
   1143c:	add	r4, r4, r4, lsl #1
   11440:	ldr	r3, [pc, #8]	; 11450 <tcgetattr@plt+0x2bc>
   11444:	add	r4, r3, r4, lsl #2
   11448:	ldr	r0, [r4, #4]
   1144c:	pop	{r4, r5, r6, pc}
   11450:	andeq	r8, r1, r4, lsr #6
   11454:	andeq	fp, r1, r8, ror r2
   11458:	push	{lr}		; (str lr, [sp, #-4]!)
   1145c:	sub	sp, sp, #28
   11460:	add	r2, sp, #16
   11464:	ldr	r1, [pc, #104]	; 114d4 <tcgetattr@plt+0x340>
   11468:	mov	r0, #1
   1146c:	bl	10fb4 <ioctl@plt>
   11470:	cmp	r0, #0
   11474:	bne	11484 <tcgetattr@plt+0x2f0>
   11478:	ldrh	r0, [sp, #18]
   1147c:	cmp	r0, #0
   11480:	bne	114cc <tcgetattr@plt+0x338>
   11484:	ldr	r0, [pc, #76]	; 114d8 <tcgetattr@plt+0x344>
   11488:	bl	11014 <getenv@plt>
   1148c:	cmp	r0, #0
   11490:	beq	114c0 <tcgetattr@plt+0x32c>
   11494:	ldr	r3, [pc, #64]	; 114dc <tcgetattr@plt+0x348>
   11498:	str	r3, [sp]
   1149c:	add	r3, sp, #12
   114a0:	mov	r2, #0
   114a4:	mov	r1, r2
   114a8:	bl	16e5c <tcgetattr@plt+0x5cc8>
   114ac:	cmp	r0, #0
   114b0:	bne	114c0 <tcgetattr@plt+0x32c>
   114b4:	ldr	r3, [sp, #12]
   114b8:	cmp	r3, #0
   114bc:	bgt	114c8 <tcgetattr@plt+0x334>
   114c0:	mov	r3, #80	; 0x50
   114c4:	str	r3, [sp, #12]
   114c8:	ldr	r0, [sp, #12]
   114cc:	add	sp, sp, #28
   114d0:	pop	{pc}		; (ldr pc, [sp], #4)
   114d4:	andeq	r5, r0, r3, lsl r4
   114d8:	andeq	r8, r1, ip, ror sp
   114dc:	andeq	sl, r1, ip, lsl #4
   114e0:	cmp	r0, #4
   114e4:	ldrls	pc, [pc, r0, lsl #2]
   114e8:	b	11520 <tcgetattr@plt+0x38c>
   114ec:	andeq	r1, r1, r0, lsl #10
   114f0:	andeq	r1, r1, r8, lsl #10
   114f4:	andeq	r1, r1, r0, lsl r5
   114f8:	andeq	r1, r1, r8, lsl r5
   114fc:	andeq	r1, r1, r8, lsr #10
   11500:	add	r0, r1, #8
   11504:	b	1152c <tcgetattr@plt+0x398>
   11508:	mov	r0, r1
   1150c:	b	1152c <tcgetattr@plt+0x398>
   11510:	add	r0, r1, #4
   11514:	b	1152c <tcgetattr@plt+0x398>
   11518:	add	r0, r1, #12
   1151c:	b	1152c <tcgetattr@plt+0x398>
   11520:	push	{r4, lr}
   11524:	bl	11170 <abort@plt>
   11528:	mov	r0, #0
   1152c:	bx	lr
   11530:	push	{r0, r1, r2, r3}
   11534:	push	{r4, lr}
   11538:	sub	sp, sp, #8
   1153c:	add	r3, sp, #20
   11540:	str	r3, [sp, #4]
   11544:	ldr	r2, [sp, #16]
   11548:	mov	r1, #1
   1154c:	mov	r0, sp
   11550:	bl	110c8 <__vasprintf_chk@plt>
   11554:	subs	r4, r0, #0
   11558:	blt	115e8 <tcgetattr@plt+0x454>
   1155c:	ldr	r3, [pc, #220]	; 11640 <tcgetattr@plt+0x4ac>
   11560:	ldr	r2, [r3, #12]
   11564:	cmp	r2, #0
   11568:	ble	115b0 <tcgetattr@plt+0x41c>
   1156c:	ldr	r3, [r3, #16]
   11570:	sub	r3, r3, r2
   11574:	cmp	r3, r4
   11578:	bge	115f8 <tcgetattr@plt+0x464>
   1157c:	ldr	r3, [pc, #192]	; 11644 <tcgetattr@plt+0x4b0>
   11580:	ldr	r0, [r3]
   11584:	ldr	r3, [r0, #20]
   11588:	ldr	r2, [r0, #24]
   1158c:	cmp	r3, r2
   11590:	addcc	r2, r3, #1
   11594:	strcc	r2, [r0, #20]
   11598:	movcc	r2, #10
   1159c:	strbcc	r2, [r3]
   115a0:	bcs	115ec <tcgetattr@plt+0x458>
   115a4:	mov	r2, #0
   115a8:	ldr	r3, [pc, #144]	; 11640 <tcgetattr@plt+0x4ac>
   115ac:	str	r2, [r3, #12]
   115b0:	ldr	r3, [pc, #140]	; 11644 <tcgetattr@plt+0x4b0>
   115b4:	ldr	r1, [r3]
   115b8:	ldr	r0, [sp]
   115bc:	bl	10ec4 <fputs_unlocked@plt>
   115c0:	ldr	r0, [sp]
   115c4:	bl	14480 <tcgetattr@plt+0x32ec>
   115c8:	ldr	r3, [pc, #112]	; 11640 <tcgetattr@plt+0x4ac>
   115cc:	ldr	r0, [r3, #12]
   115d0:	add	r0, r0, r4
   115d4:	str	r0, [r3, #12]
   115d8:	add	sp, sp, #8
   115dc:	pop	{r4, lr}
   115e0:	add	sp, sp, #16
   115e4:	bx	lr
   115e8:	bl	16b64 <tcgetattr@plt+0x59d0>
   115ec:	mov	r1, #10
   115f0:	bl	11128 <__overflow@plt>
   115f4:	b	115a4 <tcgetattr@plt+0x410>
   115f8:	ldr	r3, [pc, #68]	; 11644 <tcgetattr@plt+0x4b0>
   115fc:	ldr	r0, [r3]
   11600:	ldr	r3, [r0, #20]
   11604:	ldr	r2, [r0, #24]
   11608:	cmp	r3, r2
   1160c:	addcc	r2, r3, #1
   11610:	strcc	r2, [r0, #20]
   11614:	movcc	r2, #32
   11618:	strbcc	r2, [r3]
   1161c:	bcs	11634 <tcgetattr@plt+0x4a0>
   11620:	ldr	r2, [pc, #24]	; 11640 <tcgetattr@plt+0x4ac>
   11624:	ldr	r3, [r2, #12]
   11628:	add	r3, r3, #1
   1162c:	str	r3, [r2, #12]
   11630:	b	115b0 <tcgetattr@plt+0x41c>
   11634:	mov	r1, #32
   11638:	bl	11128 <__overflow@plt>
   1163c:	b	11620 <tcgetattr@plt+0x48c>
   11640:	andeq	ip, r2, r8, lsl #3
   11644:	andeq	ip, r2, r4, ror r1
   11648:	push	{r4, r5, r6, r7, r8, lr}
   1164c:	mov	r6, r0
   11650:	mov	r5, r1
   11654:	bl	10f60 <cfgetispeed@plt>
   11658:	cmp	r0, #0
   1165c:	bne	1169c <tcgetattr@plt+0x508>
   11660:	ldr	r3, [pc, #144]	; 116f8 <tcgetattr@plt+0x564>
   11664:	ldr	r4, [pc, #144]	; 116fc <tcgetattr@plt+0x568>
   11668:	cmp	r5, #0
   1166c:	moveq	r4, r3
   11670:	mov	r0, r6
   11674:	bl	110a4 <cfgetospeed@plt>
   11678:	bl	112c8 <tcgetattr@plt+0x134>
   1167c:	mov	r1, r0
   11680:	mov	r0, r4
   11684:	bl	11530 <tcgetattr@plt+0x39c>
   11688:	cmp	r5, #0
   1168c:	moveq	r2, #0
   11690:	ldreq	r3, [pc, #104]	; 11700 <tcgetattr@plt+0x56c>
   11694:	streq	r2, [r3, #12]
   11698:	pop	{r4, r5, r6, r7, r8, pc}
   1169c:	mov	r0, r6
   116a0:	bl	10f60 <cfgetispeed@plt>
   116a4:	mov	r4, r0
   116a8:	mov	r0, r6
   116ac:	bl	110a4 <cfgetospeed@plt>
   116b0:	cmp	r4, r0
   116b4:	beq	11660 <tcgetattr@plt+0x4cc>
   116b8:	ldr	r3, [pc, #68]	; 11704 <tcgetattr@plt+0x570>
   116bc:	ldr	r4, [pc, #68]	; 11708 <tcgetattr@plt+0x574>
   116c0:	cmp	r5, #0
   116c4:	moveq	r4, r3
   116c8:	mov	r0, r6
   116cc:	bl	10f60 <cfgetispeed@plt>
   116d0:	bl	112c8 <tcgetattr@plt+0x134>
   116d4:	mov	r7, r0
   116d8:	mov	r0, r6
   116dc:	bl	110a4 <cfgetospeed@plt>
   116e0:	bl	112c8 <tcgetattr@plt+0x134>
   116e4:	mov	r2, r0
   116e8:	mov	r1, r7
   116ec:	mov	r0, r4
   116f0:	bl	11530 <tcgetattr@plt+0x39c>
   116f4:	b	11688 <tcgetattr@plt+0x4f4>
   116f8:			; <UNDEFINED> instruction: 0x00018dbc
   116fc:	andeq	r8, r1, r4, lsl #27
   11700:	andeq	ip, r2, r8, lsl #3
   11704:			; <UNDEFINED> instruction: 0x00018db8
   11708:	muleq	r1, r4, sp
   1170c:	push	{r4, r5, lr}
   11710:	sub	sp, sp, #28
   11714:	mov	r4, r0
   11718:	mov	r5, r1
   1171c:	mov	r2, #5
   11720:	ldr	r1, [pc, #56]	; 11760 <tcgetattr@plt+0x5cc>
   11724:	mov	r0, #0
   11728:	bl	10f54 <dcgettext@plt>
   1172c:	mov	r1, #0
   11730:	str	r1, [sp, #16]
   11734:	str	r0, [sp, #12]
   11738:	ldr	r3, [pc, #36]	; 11764 <tcgetattr@plt+0x5d0>
   1173c:	str	r3, [sp, #8]
   11740:	str	r5, [sp]
   11744:	str	r1, [sp, #4]
   11748:	mov	r2, #0
   1174c:	mov	r3, #0
   11750:	mov	r0, r4
   11754:	bl	16ba4 <tcgetattr@plt+0x5a10>
   11758:	add	sp, sp, #28
   1175c:	pop	{r4, r5, pc}
   11760:	andeq	r8, r1, r4, asr #27
   11764:	andeq	r8, r1, r0, ror #27
   11768:	push	{r4, r5, r6, lr}
   1176c:	sub	sp, sp, #8
   11770:	mov	r4, r0
   11774:	mov	r5, r1
   11778:	mov	r2, sp
   1177c:	ldr	r1, [pc, #196]	; 11848 <tcgetattr@plt+0x6b4>
   11780:	mov	r0, #0
   11784:	bl	10fb4 <ioctl@plt>
   11788:	cmp	r0, #0
   1178c:	beq	1180c <tcgetattr@plt+0x678>
   11790:	bl	110b0 <__errno_location@plt>
   11794:	ldr	r6, [r0]
   11798:	cmp	r6, #22
   1179c:	bne	117b0 <tcgetattr@plt+0x61c>
   117a0:	cmp	r4, #0
   117a4:	beq	117d4 <tcgetattr@plt+0x640>
   117a8:	add	sp, sp, #8
   117ac:	pop	{r4, r5, r6, pc}
   117b0:	mov	r2, r5
   117b4:	mov	r1, #3
   117b8:	mov	r0, #0
   117bc:	bl	15ec0 <tcgetattr@plt+0x4d2c>
   117c0:	mov	r3, r0
   117c4:	ldr	r2, [pc, #128]	; 1184c <tcgetattr@plt+0x6b8>
   117c8:	mov	r1, r6
   117cc:	mov	r0, #1
   117d0:	bl	10ffc <error@plt>
   117d4:	mov	r2, #5
   117d8:	ldr	r1, [pc, #112]	; 11850 <tcgetattr@plt+0x6bc>
   117dc:	mov	r0, #0
   117e0:	bl	10f54 <dcgettext@plt>
   117e4:	mov	r4, r0
   117e8:	mov	r2, r5
   117ec:	mov	r1, #3
   117f0:	mov	r0, #0
   117f4:	bl	15ec0 <tcgetattr@plt+0x4d2c>
   117f8:	mov	r3, r0
   117fc:	mov	r2, r4
   11800:	mov	r1, #0
   11804:	mov	r0, #1
   11808:	bl	10ffc <error@plt>
   1180c:	cmp	r4, #0
   11810:	bne	11834 <tcgetattr@plt+0x6a0>
   11814:	ldrh	r2, [sp, #2]
   11818:	ldrh	r1, [sp]
   1181c:	ldr	r0, [pc, #48]	; 11854 <tcgetattr@plt+0x6c0>
   11820:	bl	11530 <tcgetattr@plt+0x39c>
   11824:	mov	r2, #0
   11828:	ldr	r3, [pc, #40]	; 11858 <tcgetattr@plt+0x6c4>
   1182c:	str	r2, [r3, #12]
   11830:	b	117a8 <tcgetattr@plt+0x614>
   11834:	ldrh	r2, [sp, #2]
   11838:	ldrh	r1, [sp]
   1183c:	ldr	r0, [pc, #24]	; 1185c <tcgetattr@plt+0x6c8>
   11840:	bl	11530 <tcgetattr@plt+0x39c>
   11844:	b	117a8 <tcgetattr@plt+0x614>
   11848:	andeq	r5, r0, r3, lsl r4
   1184c:	andeq	fp, r1, ip, lsr #11
   11850:	andeq	r8, r1, r4, ror #27
   11854:	andeq	r8, r1, ip, lsl #28
   11858:	andeq	ip, r2, r8, lsl #3
   1185c:	andeq	r8, r1, r4, lsl lr
   11860:	push	{r4, r5, r6, r7, lr}
   11864:	sub	sp, sp, #12
   11868:	mov	r5, r0
   1186c:	mov	r4, r1
   11870:	mov	r6, r2
   11874:	mov	r2, sp
   11878:	ldr	r1, [pc, #168]	; 11928 <tcgetattr@plt+0x794>
   1187c:	mov	r0, #0
   11880:	bl	10fb4 <ioctl@plt>
   11884:	cmp	r0, #0
   11888:	beq	118a8 <tcgetattr@plt+0x714>
   1188c:	bl	110b0 <__errno_location@plt>
   11890:	ldr	r7, [r0]
   11894:	cmp	r7, #22
   11898:	moveq	r3, #0
   1189c:	streq	r3, [sp]
   118a0:	streq	r3, [sp, #4]
   118a4:	bne	118d8 <tcgetattr@plt+0x744>
   118a8:	cmp	r5, #0
   118ac:	strhge	r5, [sp]
   118b0:	cmp	r4, #0
   118b4:	strhge	r4, [sp, #2]
   118b8:	mov	r2, sp
   118bc:	ldr	r1, [pc, #104]	; 1192c <tcgetattr@plt+0x798>
   118c0:	mov	r0, #0
   118c4:	bl	10fb4 <ioctl@plt>
   118c8:	cmp	r0, #0
   118cc:	bne	118fc <tcgetattr@plt+0x768>
   118d0:	add	sp, sp, #12
   118d4:	pop	{r4, r5, r6, r7, pc}
   118d8:	mov	r2, r6
   118dc:	mov	r1, #3
   118e0:	mov	r0, #0
   118e4:	bl	15ec0 <tcgetattr@plt+0x4d2c>
   118e8:	mov	r3, r0
   118ec:	ldr	r2, [pc, #60]	; 11930 <tcgetattr@plt+0x79c>
   118f0:	mov	r1, r7
   118f4:	mov	r0, #1
   118f8:	bl	10ffc <error@plt>
   118fc:	bl	110b0 <__errno_location@plt>
   11900:	ldr	r4, [r0]
   11904:	mov	r2, r6
   11908:	mov	r1, #3
   1190c:	mov	r0, #0
   11910:	bl	15ec0 <tcgetattr@plt+0x4d2c>
   11914:	mov	r3, r0
   11918:	ldr	r2, [pc, #16]	; 11930 <tcgetattr@plt+0x79c>
   1191c:	mov	r1, r4
   11920:	mov	r0, #1
   11924:	bl	10ffc <error@plt>
   11928:	andeq	r5, r0, r3, lsl r4
   1192c:	andeq	r5, r0, r4, lsl r4
   11930:	andeq	fp, r1, ip, lsr #11
   11934:	push	{lr}		; (str lr, [sp, #-4]!)
   11938:	sub	sp, sp, #68	; 0x44
   1193c:	subs	r6, r0, #0
   11940:	beq	1197c <tcgetattr@plt+0x7e8>
   11944:	ldr	r3, [pc, #2720]	; 123ec <tcgetattr@plt+0x1258>
   11948:	ldr	r4, [r3]
   1194c:	mov	r2, #5
   11950:	ldr	r1, [pc, #2712]	; 123f0 <tcgetattr@plt+0x125c>
   11954:	mov	r0, #0
   11958:	bl	10f54 <dcgettext@plt>
   1195c:	ldr	r3, [pc, #2704]	; 123f4 <tcgetattr@plt+0x1260>
   11960:	ldr	r3, [r3]
   11964:	mov	r2, r0
   11968:	mov	r1, #1
   1196c:	mov	r0, r4
   11970:	bl	110f8 <__fprintf_chk@plt>
   11974:	mov	r0, r6
   11978:	bl	11068 <exit@plt>
   1197c:	mov	r2, #5
   11980:	ldr	r1, [pc, #2672]	; 123f8 <tcgetattr@plt+0x1264>
   11984:	mov	r0, #0
   11988:	bl	10f54 <dcgettext@plt>
   1198c:	ldr	r3, [pc, #2656]	; 123f4 <tcgetattr@plt+0x1260>
   11990:	ldr	r2, [r3]
   11994:	str	r2, [sp]
   11998:	mov	r3, r2
   1199c:	mov	r1, r0
   119a0:	mov	r0, #1
   119a4:	bl	110e0 <__printf_chk@plt>
   119a8:	mov	r2, #5
   119ac:	ldr	r1, [pc, #2632]	; 123fc <tcgetattr@plt+0x1268>
   119b0:	mov	r0, #0
   119b4:	bl	10f54 <dcgettext@plt>
   119b8:	ldr	r4, [pc, #2624]	; 12400 <tcgetattr@plt+0x126c>
   119bc:	ldr	r1, [r4]
   119c0:	bl	10ec4 <fputs_unlocked@plt>
   119c4:	mov	r2, #5
   119c8:	ldr	r1, [pc, #2612]	; 12404 <tcgetattr@plt+0x1270>
   119cc:	mov	r0, #0
   119d0:	bl	10f54 <dcgettext@plt>
   119d4:	ldr	r1, [r4]
   119d8:	bl	10ec4 <fputs_unlocked@plt>
   119dc:	mov	r2, #5
   119e0:	ldr	r1, [pc, #2592]	; 12408 <tcgetattr@plt+0x1274>
   119e4:	mov	r0, #0
   119e8:	bl	10f54 <dcgettext@plt>
   119ec:	ldr	r1, [r4]
   119f0:	bl	10ec4 <fputs_unlocked@plt>
   119f4:	mov	r2, #5
   119f8:	ldr	r1, [pc, #2572]	; 1240c <tcgetattr@plt+0x1278>
   119fc:	mov	r0, #0
   11a00:	bl	10f54 <dcgettext@plt>
   11a04:	ldr	r1, [r4]
   11a08:	bl	10ec4 <fputs_unlocked@plt>
   11a0c:	mov	r2, #5
   11a10:	ldr	r1, [pc, #2552]	; 12410 <tcgetattr@plt+0x127c>
   11a14:	mov	r0, #0
   11a18:	bl	10f54 <dcgettext@plt>
   11a1c:	ldr	r1, [r4]
   11a20:	bl	10ec4 <fputs_unlocked@plt>
   11a24:	mov	r2, #5
   11a28:	ldr	r1, [pc, #2532]	; 12414 <tcgetattr@plt+0x1280>
   11a2c:	mov	r0, #0
   11a30:	bl	10f54 <dcgettext@plt>
   11a34:	ldr	r1, [r4]
   11a38:	bl	10ec4 <fputs_unlocked@plt>
   11a3c:	mov	r2, #5
   11a40:	ldr	r1, [pc, #2512]	; 12418 <tcgetattr@plt+0x1284>
   11a44:	mov	r0, #0
   11a48:	bl	10f54 <dcgettext@plt>
   11a4c:	ldr	r1, [r4]
   11a50:	bl	10ec4 <fputs_unlocked@plt>
   11a54:	mov	r2, #5
   11a58:	ldr	r1, [pc, #2492]	; 1241c <tcgetattr@plt+0x1288>
   11a5c:	mov	r0, #0
   11a60:	bl	10f54 <dcgettext@plt>
   11a64:	ldr	r1, [r4]
   11a68:	bl	10ec4 <fputs_unlocked@plt>
   11a6c:	mov	r2, #5
   11a70:	ldr	r1, [pc, #2472]	; 12420 <tcgetattr@plt+0x128c>
   11a74:	mov	r0, #0
   11a78:	bl	10f54 <dcgettext@plt>
   11a7c:	ldr	r1, [r4]
   11a80:	bl	10ec4 <fputs_unlocked@plt>
   11a84:	mov	r2, #5
   11a88:	ldr	r1, [pc, #2452]	; 12424 <tcgetattr@plt+0x1290>
   11a8c:	mov	r0, #0
   11a90:	bl	10f54 <dcgettext@plt>
   11a94:	ldr	r1, [r4]
   11a98:	bl	10ec4 <fputs_unlocked@plt>
   11a9c:	mov	r2, #5
   11aa0:	ldr	r1, [pc, #2432]	; 12428 <tcgetattr@plt+0x1294>
   11aa4:	mov	r0, #0
   11aa8:	bl	10f54 <dcgettext@plt>
   11aac:	ldr	r1, [r4]
   11ab0:	bl	10ec4 <fputs_unlocked@plt>
   11ab4:	mov	r2, #5
   11ab8:	ldr	r1, [pc, #2412]	; 1242c <tcgetattr@plt+0x1298>
   11abc:	mov	r0, #0
   11ac0:	bl	10f54 <dcgettext@plt>
   11ac4:	ldr	r1, [r4]
   11ac8:	bl	10ec4 <fputs_unlocked@plt>
   11acc:	mov	r2, #5
   11ad0:	ldr	r1, [pc, #2392]	; 12430 <tcgetattr@plt+0x129c>
   11ad4:	mov	r0, #0
   11ad8:	bl	10f54 <dcgettext@plt>
   11adc:	ldr	r1, [r4]
   11ae0:	bl	10ec4 <fputs_unlocked@plt>
   11ae4:	mov	r2, #5
   11ae8:	ldr	r1, [pc, #2372]	; 12434 <tcgetattr@plt+0x12a0>
   11aec:	mov	r0, #0
   11af0:	bl	10f54 <dcgettext@plt>
   11af4:	ldr	r1, [r4]
   11af8:	bl	10ec4 <fputs_unlocked@plt>
   11afc:	mov	r2, #5
   11b00:	ldr	r1, [pc, #2352]	; 12438 <tcgetattr@plt+0x12a4>
   11b04:	mov	r0, #0
   11b08:	bl	10f54 <dcgettext@plt>
   11b0c:	ldr	r1, [r4]
   11b10:	bl	10ec4 <fputs_unlocked@plt>
   11b14:	mov	r2, #5
   11b18:	ldr	r1, [pc, #2332]	; 1243c <tcgetattr@plt+0x12a8>
   11b1c:	mov	r0, #0
   11b20:	bl	10f54 <dcgettext@plt>
   11b24:	ldr	r1, [r4]
   11b28:	bl	10ec4 <fputs_unlocked@plt>
   11b2c:	mov	r2, #5
   11b30:	ldr	r1, [pc, #2312]	; 12440 <tcgetattr@plt+0x12ac>
   11b34:	mov	r0, #0
   11b38:	bl	10f54 <dcgettext@plt>
   11b3c:	ldr	r1, [r4]
   11b40:	bl	10ec4 <fputs_unlocked@plt>
   11b44:	mov	r2, #5
   11b48:	ldr	r1, [pc, #2292]	; 12444 <tcgetattr@plt+0x12b0>
   11b4c:	mov	r0, #0
   11b50:	bl	10f54 <dcgettext@plt>
   11b54:	ldr	r1, [r4]
   11b58:	bl	10ec4 <fputs_unlocked@plt>
   11b5c:	mov	r2, #5
   11b60:	ldr	r1, [pc, #2272]	; 12448 <tcgetattr@plt+0x12b4>
   11b64:	mov	r0, #0
   11b68:	bl	10f54 <dcgettext@plt>
   11b6c:	ldr	r1, [r4]
   11b70:	bl	10ec4 <fputs_unlocked@plt>
   11b74:	mov	r2, #5
   11b78:	ldr	r1, [pc, #2252]	; 1244c <tcgetattr@plt+0x12b8>
   11b7c:	mov	r0, #0
   11b80:	bl	10f54 <dcgettext@plt>
   11b84:	mov	r4, r0
   11b88:	ldr	r3, [pc, #2240]	; 12450 <tcgetattr@plt+0x12bc>
   11b8c:	ldr	r3, [r3]
   11b90:	cmp	r3, #1
   11b94:	mov	r2, #5
   11b98:	ldreq	r1, [pc, #2228]	; 12454 <tcgetattr@plt+0x12c0>
   11b9c:	ldrne	r1, [pc, #2228]	; 12458 <tcgetattr@plt+0x12c4>
   11ba0:	mov	r0, #0
   11ba4:	bl	10f54 <dcgettext@plt>
   11ba8:	mov	r2, r0
   11bac:	mov	r1, r4
   11bb0:	mov	r0, #1
   11bb4:	bl	110e0 <__printf_chk@plt>
   11bb8:	mov	r2, #5
   11bbc:	ldr	r1, [pc, #2200]	; 1245c <tcgetattr@plt+0x12c8>
   11bc0:	mov	r0, #0
   11bc4:	bl	10f54 <dcgettext@plt>
   11bc8:	ldr	r4, [pc, #2096]	; 12400 <tcgetattr@plt+0x126c>
   11bcc:	ldr	r1, [r4]
   11bd0:	bl	10ec4 <fputs_unlocked@plt>
   11bd4:	mov	r2, #5
   11bd8:	ldr	r1, [pc, #2176]	; 12460 <tcgetattr@plt+0x12cc>
   11bdc:	mov	r0, #0
   11be0:	bl	10f54 <dcgettext@plt>
   11be4:	ldr	r1, [r4]
   11be8:	bl	10ec4 <fputs_unlocked@plt>
   11bec:	mov	r2, #5
   11bf0:	ldr	r1, [pc, #2156]	; 12464 <tcgetattr@plt+0x12d0>
   11bf4:	mov	r0, #0
   11bf8:	bl	10f54 <dcgettext@plt>
   11bfc:	ldr	r1, [r4]
   11c00:	bl	10ec4 <fputs_unlocked@plt>
   11c04:	mov	r2, #5
   11c08:	ldr	r1, [pc, #2136]	; 12468 <tcgetattr@plt+0x12d4>
   11c0c:	mov	r0, #0
   11c10:	bl	10f54 <dcgettext@plt>
   11c14:	ldr	r1, [r4]
   11c18:	bl	10ec4 <fputs_unlocked@plt>
   11c1c:	mov	r2, #5
   11c20:	ldr	r1, [pc, #2116]	; 1246c <tcgetattr@plt+0x12d8>
   11c24:	mov	r0, #0
   11c28:	bl	10f54 <dcgettext@plt>
   11c2c:	ldr	r1, [r4]
   11c30:	bl	10ec4 <fputs_unlocked@plt>
   11c34:	mov	r2, #5
   11c38:	ldr	r1, [pc, #2096]	; 12470 <tcgetattr@plt+0x12dc>
   11c3c:	mov	r0, #0
   11c40:	bl	10f54 <dcgettext@plt>
   11c44:	ldr	r1, [r4]
   11c48:	bl	10ec4 <fputs_unlocked@plt>
   11c4c:	mov	r2, #5
   11c50:	ldr	r1, [pc, #2076]	; 12474 <tcgetattr@plt+0x12e0>
   11c54:	mov	r0, #0
   11c58:	bl	10f54 <dcgettext@plt>
   11c5c:	ldr	r1, [r4]
   11c60:	bl	10ec4 <fputs_unlocked@plt>
   11c64:	mov	r2, #5
   11c68:	ldr	r1, [pc, #2056]	; 12478 <tcgetattr@plt+0x12e4>
   11c6c:	mov	r0, #0
   11c70:	bl	10f54 <dcgettext@plt>
   11c74:	ldr	r1, [r4]
   11c78:	bl	10ec4 <fputs_unlocked@plt>
   11c7c:	mov	r2, #5
   11c80:	ldr	r1, [pc, #2036]	; 1247c <tcgetattr@plt+0x12e8>
   11c84:	mov	r0, #0
   11c88:	bl	10f54 <dcgettext@plt>
   11c8c:	ldr	r1, [r4]
   11c90:	bl	10ec4 <fputs_unlocked@plt>
   11c94:	mov	r2, #5
   11c98:	ldr	r1, [pc, #2016]	; 12480 <tcgetattr@plt+0x12ec>
   11c9c:	mov	r0, #0
   11ca0:	bl	10f54 <dcgettext@plt>
   11ca4:	ldr	r1, [r4]
   11ca8:	bl	10ec4 <fputs_unlocked@plt>
   11cac:	mov	r2, #5
   11cb0:	ldr	r1, [pc, #1996]	; 12484 <tcgetattr@plt+0x12f0>
   11cb4:	mov	r0, #0
   11cb8:	bl	10f54 <dcgettext@plt>
   11cbc:	ldr	r1, [r4]
   11cc0:	bl	10ec4 <fputs_unlocked@plt>
   11cc4:	mov	r2, #5
   11cc8:	ldr	r1, [pc, #1976]	; 12488 <tcgetattr@plt+0x12f4>
   11ccc:	mov	r0, #0
   11cd0:	bl	10f54 <dcgettext@plt>
   11cd4:	ldr	r1, [r4]
   11cd8:	bl	10ec4 <fputs_unlocked@plt>
   11cdc:	mov	r2, #5
   11ce0:	ldr	r1, [pc, #1956]	; 1248c <tcgetattr@plt+0x12f8>
   11ce4:	mov	r0, #0
   11ce8:	bl	10f54 <dcgettext@plt>
   11cec:	ldr	r1, [r4]
   11cf0:	bl	10ec4 <fputs_unlocked@plt>
   11cf4:	mov	r2, #5
   11cf8:	ldr	r1, [pc, #1936]	; 12490 <tcgetattr@plt+0x12fc>
   11cfc:	mov	r0, #0
   11d00:	bl	10f54 <dcgettext@plt>
   11d04:	ldr	r1, [r4]
   11d08:	bl	10ec4 <fputs_unlocked@plt>
   11d0c:	mov	r2, #5
   11d10:	ldr	r1, [pc, #1916]	; 12494 <tcgetattr@plt+0x1300>
   11d14:	mov	r0, #0
   11d18:	bl	10f54 <dcgettext@plt>
   11d1c:	ldr	r1, [r4]
   11d20:	bl	10ec4 <fputs_unlocked@plt>
   11d24:	mov	r2, #5
   11d28:	ldr	r1, [pc, #1896]	; 12498 <tcgetattr@plt+0x1304>
   11d2c:	mov	r0, #0
   11d30:	bl	10f54 <dcgettext@plt>
   11d34:	ldr	r1, [r4]
   11d38:	bl	10ec4 <fputs_unlocked@plt>
   11d3c:	mov	r2, #5
   11d40:	ldr	r1, [pc, #1876]	; 1249c <tcgetattr@plt+0x1308>
   11d44:	mov	r0, #0
   11d48:	bl	10f54 <dcgettext@plt>
   11d4c:	ldr	r1, [r4]
   11d50:	bl	10ec4 <fputs_unlocked@plt>
   11d54:	mov	r2, #5
   11d58:	ldr	r1, [pc, #1856]	; 124a0 <tcgetattr@plt+0x130c>
   11d5c:	mov	r0, #0
   11d60:	bl	10f54 <dcgettext@plt>
   11d64:	ldr	r1, [r4]
   11d68:	bl	10ec4 <fputs_unlocked@plt>
   11d6c:	mov	r2, #5
   11d70:	ldr	r1, [pc, #1836]	; 124a4 <tcgetattr@plt+0x1310>
   11d74:	mov	r0, #0
   11d78:	bl	10f54 <dcgettext@plt>
   11d7c:	ldr	r1, [r4]
   11d80:	bl	10ec4 <fputs_unlocked@plt>
   11d84:	mov	r2, #5
   11d88:	ldr	r1, [pc, #1816]	; 124a8 <tcgetattr@plt+0x1314>
   11d8c:	mov	r0, #0
   11d90:	bl	10f54 <dcgettext@plt>
   11d94:	ldr	r1, [r4]
   11d98:	bl	10ec4 <fputs_unlocked@plt>
   11d9c:	mov	r2, #5
   11da0:	ldr	r1, [pc, #1796]	; 124ac <tcgetattr@plt+0x1318>
   11da4:	mov	r0, #0
   11da8:	bl	10f54 <dcgettext@plt>
   11dac:	ldr	r1, [r4]
   11db0:	bl	10ec4 <fputs_unlocked@plt>
   11db4:	mov	r2, #5
   11db8:	ldr	r1, [pc, #1776]	; 124b0 <tcgetattr@plt+0x131c>
   11dbc:	mov	r0, #0
   11dc0:	bl	10f54 <dcgettext@plt>
   11dc4:	ldr	r1, [r4]
   11dc8:	bl	10ec4 <fputs_unlocked@plt>
   11dcc:	mov	r2, #5
   11dd0:	ldr	r1, [pc, #1756]	; 124b4 <tcgetattr@plt+0x1320>
   11dd4:	mov	r0, #0
   11dd8:	bl	10f54 <dcgettext@plt>
   11ddc:	ldr	r1, [r4]
   11de0:	bl	10ec4 <fputs_unlocked@plt>
   11de4:	mov	r2, #5
   11de8:	ldr	r1, [pc, #1736]	; 124b8 <tcgetattr@plt+0x1324>
   11dec:	mov	r0, #0
   11df0:	bl	10f54 <dcgettext@plt>
   11df4:	ldr	r1, [r4]
   11df8:	bl	10ec4 <fputs_unlocked@plt>
   11dfc:	mov	r2, #5
   11e00:	ldr	r1, [pc, #1716]	; 124bc <tcgetattr@plt+0x1328>
   11e04:	mov	r0, #0
   11e08:	bl	10f54 <dcgettext@plt>
   11e0c:	ldr	r1, [r4]
   11e10:	bl	10ec4 <fputs_unlocked@plt>
   11e14:	mov	r2, #5
   11e18:	ldr	r1, [pc, #1696]	; 124c0 <tcgetattr@plt+0x132c>
   11e1c:	mov	r0, #0
   11e20:	bl	10f54 <dcgettext@plt>
   11e24:	ldr	r1, [r4]
   11e28:	bl	10ec4 <fputs_unlocked@plt>
   11e2c:	mov	r2, #5
   11e30:	ldr	r1, [pc, #1676]	; 124c4 <tcgetattr@plt+0x1330>
   11e34:	mov	r0, #0
   11e38:	bl	10f54 <dcgettext@plt>
   11e3c:	ldr	r1, [r4]
   11e40:	bl	10ec4 <fputs_unlocked@plt>
   11e44:	mov	r2, #5
   11e48:	ldr	r1, [pc, #1656]	; 124c8 <tcgetattr@plt+0x1334>
   11e4c:	mov	r0, #0
   11e50:	bl	10f54 <dcgettext@plt>
   11e54:	ldr	r1, [r4]
   11e58:	bl	10ec4 <fputs_unlocked@plt>
   11e5c:	mov	r2, #5
   11e60:	ldr	r1, [pc, #1636]	; 124cc <tcgetattr@plt+0x1338>
   11e64:	mov	r0, #0
   11e68:	bl	10f54 <dcgettext@plt>
   11e6c:	ldr	r1, [r4]
   11e70:	bl	10ec4 <fputs_unlocked@plt>
   11e74:	mov	r2, #5
   11e78:	ldr	r1, [pc, #1616]	; 124d0 <tcgetattr@plt+0x133c>
   11e7c:	mov	r0, #0
   11e80:	bl	10f54 <dcgettext@plt>
   11e84:	ldr	r1, [r4]
   11e88:	bl	10ec4 <fputs_unlocked@plt>
   11e8c:	mov	r2, #5
   11e90:	ldr	r1, [pc, #1596]	; 124d4 <tcgetattr@plt+0x1340>
   11e94:	mov	r0, #0
   11e98:	bl	10f54 <dcgettext@plt>
   11e9c:	ldr	r1, [r4]
   11ea0:	bl	10ec4 <fputs_unlocked@plt>
   11ea4:	mov	r2, #5
   11ea8:	ldr	r1, [pc, #1576]	; 124d8 <tcgetattr@plt+0x1344>
   11eac:	mov	r0, #0
   11eb0:	bl	10f54 <dcgettext@plt>
   11eb4:	ldr	r1, [r4]
   11eb8:	bl	10ec4 <fputs_unlocked@plt>
   11ebc:	mov	r2, #5
   11ec0:	ldr	r1, [pc, #1556]	; 124dc <tcgetattr@plt+0x1348>
   11ec4:	mov	r0, #0
   11ec8:	bl	10f54 <dcgettext@plt>
   11ecc:	ldr	r1, [r4]
   11ed0:	bl	10ec4 <fputs_unlocked@plt>
   11ed4:	mov	r2, #5
   11ed8:	ldr	r1, [pc, #1536]	; 124e0 <tcgetattr@plt+0x134c>
   11edc:	mov	r0, #0
   11ee0:	bl	10f54 <dcgettext@plt>
   11ee4:	ldr	r1, [r4]
   11ee8:	bl	10ec4 <fputs_unlocked@plt>
   11eec:	mov	r2, #5
   11ef0:	ldr	r1, [pc, #1516]	; 124e4 <tcgetattr@plt+0x1350>
   11ef4:	mov	r0, #0
   11ef8:	bl	10f54 <dcgettext@plt>
   11efc:	ldr	r1, [r4]
   11f00:	bl	10ec4 <fputs_unlocked@plt>
   11f04:	mov	r2, #5
   11f08:	ldr	r1, [pc, #1496]	; 124e8 <tcgetattr@plt+0x1354>
   11f0c:	mov	r0, #0
   11f10:	bl	10f54 <dcgettext@plt>
   11f14:	ldr	r1, [r4]
   11f18:	bl	10ec4 <fputs_unlocked@plt>
   11f1c:	mov	r2, #5
   11f20:	ldr	r1, [pc, #1476]	; 124ec <tcgetattr@plt+0x1358>
   11f24:	mov	r0, #0
   11f28:	bl	10f54 <dcgettext@plt>
   11f2c:	ldr	r1, [r4]
   11f30:	bl	10ec4 <fputs_unlocked@plt>
   11f34:	mov	r2, #5
   11f38:	ldr	r1, [pc, #1456]	; 124f0 <tcgetattr@plt+0x135c>
   11f3c:	mov	r0, #0
   11f40:	bl	10f54 <dcgettext@plt>
   11f44:	ldr	r1, [r4]
   11f48:	bl	10ec4 <fputs_unlocked@plt>
   11f4c:	mov	r2, #5
   11f50:	ldr	r1, [pc, #1436]	; 124f4 <tcgetattr@plt+0x1360>
   11f54:	mov	r0, #0
   11f58:	bl	10f54 <dcgettext@plt>
   11f5c:	ldr	r1, [r4]
   11f60:	bl	10ec4 <fputs_unlocked@plt>
   11f64:	mov	r2, #5
   11f68:	ldr	r1, [pc, #1416]	; 124f8 <tcgetattr@plt+0x1364>
   11f6c:	mov	r0, #0
   11f70:	bl	10f54 <dcgettext@plt>
   11f74:	ldr	r1, [r4]
   11f78:	bl	10ec4 <fputs_unlocked@plt>
   11f7c:	mov	r2, #5
   11f80:	ldr	r1, [pc, #1396]	; 124fc <tcgetattr@plt+0x1368>
   11f84:	mov	r0, #0
   11f88:	bl	10f54 <dcgettext@plt>
   11f8c:	ldr	r1, [r4]
   11f90:	bl	10ec4 <fputs_unlocked@plt>
   11f94:	mov	r2, #5
   11f98:	ldr	r1, [pc, #1376]	; 12500 <tcgetattr@plt+0x136c>
   11f9c:	mov	r0, #0
   11fa0:	bl	10f54 <dcgettext@plt>
   11fa4:	ldr	r1, [r4]
   11fa8:	bl	10ec4 <fputs_unlocked@plt>
   11fac:	mov	r2, #5
   11fb0:	ldr	r1, [pc, #1356]	; 12504 <tcgetattr@plt+0x1370>
   11fb4:	mov	r0, #0
   11fb8:	bl	10f54 <dcgettext@plt>
   11fbc:	ldr	r1, [r4]
   11fc0:	bl	10ec4 <fputs_unlocked@plt>
   11fc4:	mov	r2, #5
   11fc8:	ldr	r1, [pc, #1336]	; 12508 <tcgetattr@plt+0x1374>
   11fcc:	mov	r0, #0
   11fd0:	bl	10f54 <dcgettext@plt>
   11fd4:	ldr	r2, [pc, #1328]	; 1250c <tcgetattr@plt+0x1378>
   11fd8:	mov	r1, r0
   11fdc:	mov	r0, #1
   11fe0:	bl	110e0 <__printf_chk@plt>
   11fe4:	mov	r2, #5
   11fe8:	ldr	r1, [pc, #1312]	; 12510 <tcgetattr@plt+0x137c>
   11fec:	mov	r0, #0
   11ff0:	bl	10f54 <dcgettext@plt>
   11ff4:	ldr	r1, [r4]
   11ff8:	bl	10ec4 <fputs_unlocked@plt>
   11ffc:	mov	r2, #5
   12000:	ldr	r1, [pc, #1292]	; 12514 <tcgetattr@plt+0x1380>
   12004:	mov	r0, #0
   12008:	bl	10f54 <dcgettext@plt>
   1200c:	ldr	r1, [r4]
   12010:	bl	10ec4 <fputs_unlocked@plt>
   12014:	mov	r2, #5
   12018:	ldr	r1, [pc, #1272]	; 12518 <tcgetattr@plt+0x1384>
   1201c:	mov	r0, #0
   12020:	bl	10f54 <dcgettext@plt>
   12024:	ldr	r1, [r4]
   12028:	bl	10ec4 <fputs_unlocked@plt>
   1202c:	mov	r2, #5
   12030:	ldr	r1, [pc, #1252]	; 1251c <tcgetattr@plt+0x1388>
   12034:	mov	r0, #0
   12038:	bl	10f54 <dcgettext@plt>
   1203c:	ldr	r1, [r4]
   12040:	bl	10ec4 <fputs_unlocked@plt>
   12044:	mov	r2, #5
   12048:	ldr	r1, [pc, #1232]	; 12520 <tcgetattr@plt+0x138c>
   1204c:	mov	r0, #0
   12050:	bl	10f54 <dcgettext@plt>
   12054:	ldr	r1, [r4]
   12058:	bl	10ec4 <fputs_unlocked@plt>
   1205c:	mov	r2, #5
   12060:	ldr	r1, [pc, #1212]	; 12524 <tcgetattr@plt+0x1390>
   12064:	mov	r0, #0
   12068:	bl	10f54 <dcgettext@plt>
   1206c:	ldr	r1, [r4]
   12070:	bl	10ec4 <fputs_unlocked@plt>
   12074:	mov	r2, #5
   12078:	ldr	r1, [pc, #1192]	; 12528 <tcgetattr@plt+0x1394>
   1207c:	mov	r0, #0
   12080:	bl	10f54 <dcgettext@plt>
   12084:	ldr	r1, [r4]
   12088:	bl	10ec4 <fputs_unlocked@plt>
   1208c:	mov	r2, #5
   12090:	ldr	r1, [pc, #1172]	; 1252c <tcgetattr@plt+0x1398>
   12094:	mov	r0, #0
   12098:	bl	10f54 <dcgettext@plt>
   1209c:	ldr	r1, [r4]
   120a0:	bl	10ec4 <fputs_unlocked@plt>
   120a4:	mov	r2, #5
   120a8:	ldr	r1, [pc, #1152]	; 12530 <tcgetattr@plt+0x139c>
   120ac:	mov	r0, #0
   120b0:	bl	10f54 <dcgettext@plt>
   120b4:	ldr	r2, [pc, #1144]	; 12534 <tcgetattr@plt+0x13a0>
   120b8:	mov	r1, r0
   120bc:	mov	r0, #1
   120c0:	bl	110e0 <__printf_chk@plt>
   120c4:	mov	r2, #5
   120c8:	ldr	r1, [pc, #1128]	; 12538 <tcgetattr@plt+0x13a4>
   120cc:	mov	r0, #0
   120d0:	bl	10f54 <dcgettext@plt>
   120d4:	ldr	r2, [pc, #1120]	; 1253c <tcgetattr@plt+0x13a8>
   120d8:	mov	r1, r0
   120dc:	mov	r0, #1
   120e0:	bl	110e0 <__printf_chk@plt>
   120e4:	mov	r2, #5
   120e8:	ldr	r1, [pc, #1104]	; 12540 <tcgetattr@plt+0x13ac>
   120ec:	mov	r0, #0
   120f0:	bl	10f54 <dcgettext@plt>
   120f4:	ldr	r1, [r4]
   120f8:	bl	10ec4 <fputs_unlocked@plt>
   120fc:	mov	r2, #5
   12100:	ldr	r1, [pc, #1084]	; 12544 <tcgetattr@plt+0x13b0>
   12104:	mov	r0, #0
   12108:	bl	10f54 <dcgettext@plt>
   1210c:	ldr	r1, [r4]
   12110:	bl	10ec4 <fputs_unlocked@plt>
   12114:	mov	r2, #5
   12118:	ldr	r1, [pc, #1064]	; 12548 <tcgetattr@plt+0x13b4>
   1211c:	mov	r0, #0
   12120:	bl	10f54 <dcgettext@plt>
   12124:	ldr	r1, [r4]
   12128:	bl	10ec4 <fputs_unlocked@plt>
   1212c:	mov	r2, #5
   12130:	ldr	r1, [pc, #1044]	; 1254c <tcgetattr@plt+0x13b8>
   12134:	mov	r0, #0
   12138:	bl	10f54 <dcgettext@plt>
   1213c:	ldr	r1, [r4]
   12140:	bl	10ec4 <fputs_unlocked@plt>
   12144:	mov	r2, #5
   12148:	ldr	r1, [pc, #1024]	; 12550 <tcgetattr@plt+0x13bc>
   1214c:	mov	r0, #0
   12150:	bl	10f54 <dcgettext@plt>
   12154:	ldr	r3, [pc, #1016]	; 12554 <tcgetattr@plt+0x13c0>
   12158:	ldr	r2, [pc, #1016]	; 12558 <tcgetattr@plt+0x13c4>
   1215c:	mov	r1, r0
   12160:	mov	r0, #1
   12164:	bl	110e0 <__printf_chk@plt>
   12168:	mov	r2, #5
   1216c:	ldr	r1, [pc, #1000]	; 1255c <tcgetattr@plt+0x13c8>
   12170:	mov	r0, #0
   12174:	bl	10f54 <dcgettext@plt>
   12178:	ldr	r1, [r4]
   1217c:	bl	10ec4 <fputs_unlocked@plt>
   12180:	mov	r2, #5
   12184:	ldr	r1, [pc, #980]	; 12560 <tcgetattr@plt+0x13cc>
   12188:	mov	r0, #0
   1218c:	bl	10f54 <dcgettext@plt>
   12190:	ldr	r2, [pc, #972]	; 12564 <tcgetattr@plt+0x13d0>
   12194:	mov	r1, r0
   12198:	mov	r0, #1
   1219c:	bl	110e0 <__printf_chk@plt>
   121a0:	mov	r2, #5
   121a4:	ldr	r1, [pc, #956]	; 12568 <tcgetattr@plt+0x13d4>
   121a8:	mov	r0, #0
   121ac:	bl	10f54 <dcgettext@plt>
   121b0:	ldr	r3, [pc, #948]	; 1256c <tcgetattr@plt+0x13d8>
   121b4:	str	r3, [sp]
   121b8:	ldr	r3, [pc, #944]	; 12570 <tcgetattr@plt+0x13dc>
   121bc:	ldr	r2, [pc, #944]	; 12574 <tcgetattr@plt+0x13e0>
   121c0:	mov	r1, r0
   121c4:	mov	r0, #1
   121c8:	bl	110e0 <__printf_chk@plt>
   121cc:	mov	r2, #5
   121d0:	ldr	r1, [pc, #928]	; 12578 <tcgetattr@plt+0x13e4>
   121d4:	mov	r0, #0
   121d8:	bl	10f54 <dcgettext@plt>
   121dc:	ldr	r1, [r4]
   121e0:	bl	10ec4 <fputs_unlocked@plt>
   121e4:	add	ip, sp, #8
   121e8:	ldr	lr, [pc, #908]	; 1257c <tcgetattr@plt+0x13e8>
   121ec:	ldm	lr!, {r0, r1, r2, r3}
   121f0:	stmia	ip!, {r0, r1, r2, r3}
   121f4:	ldm	lr!, {r0, r1, r2, r3}
   121f8:	stmia	ip!, {r0, r1, r2, r3}
   121fc:	ldm	lr!, {r0, r1, r2, r3}
   12200:	stmia	ip!, {r0, r1, r2, r3}
   12204:	ldm	lr, {r0, r1}
   12208:	stm	ip, {r0, r1}
   1220c:	ldr	r1, [sp, #8]
   12210:	cmp	r1, #0
   12214:	addeq	r4, sp, #8
   12218:	beq	12240 <tcgetattr@plt+0x10ac>
   1221c:	add	r4, sp, #8
   12220:	ldr	r5, [pc, #856]	; 12580 <tcgetattr@plt+0x13ec>
   12224:	mov	r0, r5
   12228:	bl	10edc <strcmp@plt>
   1222c:	cmp	r0, #0
   12230:	beq	12240 <tcgetattr@plt+0x10ac>
   12234:	ldr	r1, [r4, #8]!
   12238:	cmp	r1, #0
   1223c:	bne	12224 <tcgetattr@plt+0x1090>
   12240:	ldr	r4, [r4, #4]
   12244:	cmp	r4, #0
   12248:	beq	1235c <tcgetattr@plt+0x11c8>
   1224c:	mov	r2, #5
   12250:	ldr	r1, [pc, #812]	; 12584 <tcgetattr@plt+0x13f0>
   12254:	mov	r0, #0
   12258:	bl	10f54 <dcgettext@plt>
   1225c:	ldr	r3, [pc, #804]	; 12588 <tcgetattr@plt+0x13f4>
   12260:	ldr	r2, [pc, #804]	; 1258c <tcgetattr@plt+0x13f8>
   12264:	mov	r1, r0
   12268:	mov	r0, #1
   1226c:	bl	110e0 <__printf_chk@plt>
   12270:	mov	r1, #0
   12274:	mov	r0, #5
   12278:	bl	11134 <setlocale@plt>
   1227c:	cmp	r0, #0
   12280:	beq	12298 <tcgetattr@plt+0x1104>
   12284:	mov	r2, #3
   12288:	ldr	r1, [pc, #768]	; 12590 <tcgetattr@plt+0x13fc>
   1228c:	bl	11164 <strncmp@plt>
   12290:	cmp	r0, #0
   12294:	bne	122f8 <tcgetattr@plt+0x1164>
   12298:	mov	r2, #5
   1229c:	ldr	r1, [pc, #752]	; 12594 <tcgetattr@plt+0x1400>
   122a0:	mov	r0, #0
   122a4:	bl	10f54 <dcgettext@plt>
   122a8:	ldr	r5, [pc, #720]	; 12580 <tcgetattr@plt+0x13ec>
   122ac:	mov	r3, r5
   122b0:	ldr	r2, [pc, #720]	; 12588 <tcgetattr@plt+0x13f4>
   122b4:	mov	r1, r0
   122b8:	mov	r0, #1
   122bc:	bl	110e0 <__printf_chk@plt>
   122c0:	mov	r2, #5
   122c4:	ldr	r1, [pc, #716]	; 12598 <tcgetattr@plt+0x1404>
   122c8:	mov	r0, #0
   122cc:	bl	10f54 <dcgettext@plt>
   122d0:	mov	r1, r0
   122d4:	ldr	r2, [pc, #704]	; 1259c <tcgetattr@plt+0x1408>
   122d8:	ldr	r3, [pc, #704]	; 125a0 <tcgetattr@plt+0x140c>
   122dc:	cmp	r4, r5
   122e0:	movne	r3, r2
   122e4:	mov	r2, r4
   122e8:	mov	r0, #1
   122ec:	bl	110e0 <__printf_chk@plt>
   122f0:	b	11974 <tcgetattr@plt+0x7e0>
   122f4:	ldr	r4, [pc, #644]	; 12580 <tcgetattr@plt+0x13ec>
   122f8:	mov	r2, #5
   122fc:	ldr	r1, [pc, #672]	; 125a4 <tcgetattr@plt+0x1410>
   12300:	mov	r0, #0
   12304:	bl	10f54 <dcgettext@plt>
   12308:	ldr	r3, [pc, #240]	; 12400 <tcgetattr@plt+0x126c>
   1230c:	ldr	r1, [r3]
   12310:	bl	10ec4 <fputs_unlocked@plt>
   12314:	b	12298 <tcgetattr@plt+0x1104>
   12318:	mov	r2, #5
   1231c:	ldr	r1, [pc, #624]	; 12594 <tcgetattr@plt+0x1400>
   12320:	mov	r0, #0
   12324:	bl	10f54 <dcgettext@plt>
   12328:	ldr	r4, [pc, #592]	; 12580 <tcgetattr@plt+0x13ec>
   1232c:	mov	r3, r4
   12330:	ldr	r2, [pc, #592]	; 12588 <tcgetattr@plt+0x13f4>
   12334:	mov	r1, r0
   12338:	mov	r0, #1
   1233c:	bl	110e0 <__printf_chk@plt>
   12340:	mov	r2, #5
   12344:	ldr	r1, [pc, #588]	; 12598 <tcgetattr@plt+0x1404>
   12348:	mov	r0, #0
   1234c:	bl	10f54 <dcgettext@plt>
   12350:	mov	r1, r0
   12354:	ldr	r3, [pc, #580]	; 125a0 <tcgetattr@plt+0x140c>
   12358:	b	122e4 <tcgetattr@plt+0x1150>
   1235c:	mov	r2, #5
   12360:	ldr	r1, [pc, #540]	; 12584 <tcgetattr@plt+0x13f0>
   12364:	mov	r0, #0
   12368:	bl	10f54 <dcgettext@plt>
   1236c:	ldr	r3, [pc, #532]	; 12588 <tcgetattr@plt+0x13f4>
   12370:	ldr	r2, [pc, #532]	; 1258c <tcgetattr@plt+0x13f8>
   12374:	mov	r1, r0
   12378:	mov	r0, #1
   1237c:	bl	110e0 <__printf_chk@plt>
   12380:	mov	r1, #0
   12384:	mov	r0, #5
   12388:	bl	11134 <setlocale@plt>
   1238c:	cmp	r0, #0
   12390:	beq	12318 <tcgetattr@plt+0x1184>
   12394:	mov	r2, #3
   12398:	ldr	r1, [pc, #496]	; 12590 <tcgetattr@plt+0x13fc>
   1239c:	bl	11164 <strncmp@plt>
   123a0:	cmp	r0, #0
   123a4:	bne	122f4 <tcgetattr@plt+0x1160>
   123a8:	mov	r2, #5
   123ac:	ldr	r1, [pc, #480]	; 12594 <tcgetattr@plt+0x1400>
   123b0:	mov	r0, #0
   123b4:	bl	10f54 <dcgettext@plt>
   123b8:	ldr	r4, [pc, #448]	; 12580 <tcgetattr@plt+0x13ec>
   123bc:	mov	r3, r4
   123c0:	ldr	r2, [pc, #448]	; 12588 <tcgetattr@plt+0x13f4>
   123c4:	mov	r1, r0
   123c8:	mov	r0, #1
   123cc:	bl	110e0 <__printf_chk@plt>
   123d0:	mov	r2, #5
   123d4:	ldr	r1, [pc, #444]	; 12598 <tcgetattr@plt+0x1404>
   123d8:	mov	r0, #0
   123dc:	bl	10f54 <dcgettext@plt>
   123e0:	mov	r1, r0
   123e4:	ldr	r3, [pc, #436]	; 125a0 <tcgetattr@plt+0x140c>
   123e8:	b	122e4 <tcgetattr@plt+0x1150>
   123ec:	andeq	ip, r2, r0, ror r1
   123f0:	andeq	r8, r1, r4, lsr lr
   123f4:	andeq	ip, r2, ip, asr r2
   123f8:	andeq	r8, r1, ip, asr lr
   123fc:	strdeq	r8, [r1], -r4
   12400:	andeq	ip, r2, r4, ror r1
   12404:	andeq	r8, r1, r0, lsr #30
   12408:	andeq	r8, r1, ip, ror #30
   1240c:	andeq	r9, r1, r4, asr #32
   12410:	andeq	r9, r1, r4, ror r0
   12414:	andeq	r9, r1, ip, lsr #1
   12418:	andeq	r9, r1, ip, lsr r1
   1241c:	andeq	r9, r1, r4, asr r1
   12420:	andeq	r9, r1, ip, lsl #3
   12424:	strdeq	r9, [r1], -ip
   12428:	andeq	r9, r1, r4, lsr r2
   1242c:	ldrdeq	r9, [r1], -r8
   12430:	andeq	r9, r1, r4, lsl r3
   12434:	andeq	r9, r1, r4, asr #6
   12438:	andeq	r9, r1, r8, ror r3
   1243c:	andeq	r9, r1, ip, lsl r4
   12440:	andeq	r9, r1, ip, asr r4
   12444:	muleq	r1, r4, r4
   12448:	andeq	r9, r1, r4, ror #9
   1244c:	andeq	r9, r1, r8, asr #10
   12450:	andeq	ip, r2, r0, lsl r1
   12454:	strdeq	fp, [r1], -r8
   12458:	muleq	r1, ip, r5
   1245c:	andeq	r9, r1, r0, lsr #11
   12460:	andeq	r9, r1, ip, asr #11
   12464:	strdeq	r9, [r1], -r4
   12468:	andeq	r9, r1, r0, ror r6
   1246c:	andeq	r9, r1, r0, lsl #14
   12470:	andeq	r9, r1, r4, ror r7
   12474:	andeq	r9, r1, r4, ror #15
   12478:	andeq	r9, r1, r4, lsl r8
   1247c:	andeq	r9, r1, r0, asr r8
   12480:	andeq	r9, r1, r4, lsl #19
   12484:			; <UNDEFINED> instruction: 0x000199b8
   12488:			; <UNDEFINED> instruction: 0x00019abc
   1248c:	andeq	r9, r1, r8, lsl #22
   12490:	andeq	r9, r1, r8, lsr #23
   12494:	andeq	r9, r1, r4, ror #23
   12498:	andeq	r9, r1, r4, lsr #24
   1249c:	andeq	r9, r1, r4, ror ip
   124a0:	andeq	r9, r1, r4, asr #26
   124a4:	andeq	r9, r1, r8, asr sp
   124a8:	muleq	r1, r0, sp
   124ac:	andeq	r9, r1, ip, asr #27
   124b0:	andeq	r9, r1, r4, lsl #28
   124b4:	andeq	r9, r1, r8, lsr lr
   124b8:	andeq	r9, r1, r0, ror lr
   124bc:			; <UNDEFINED> instruction: 0x00019ebc
   124c0:	andeq	r9, r1, ip, lsl #30
   124c4:	andeq	r9, r1, ip, asr #30
   124c8:	andeq	r9, r1, ip, lsl #31
   124cc:	andeq	r9, r1, r4, asr #31
   124d0:	andeq	sl, r1, r8
   124d4:	andeq	sl, r1, r0, lsr r0
   124d8:	andeq	sl, r1, r8, lsr #1
   124dc:	andeq	sl, r1, r0, ror #1
   124e0:	andeq	sl, r1, r8, lsr r1
   124e4:	andeq	sl, r1, ip, asr #3
   124e8:	andeq	sl, r1, r0, lsl r2
   124ec:	andeq	sl, r1, r8, lsr r2
   124f0:	andeq	sl, r1, r0, ror #4
   124f4:	andeq	sl, r1, r0, asr #5
   124f8:	andeq	sl, r1, r8, ror #5
   124fc:	andeq	sl, r1, ip, lsr #6
   12500:	andeq	sl, r1, r4, ror r3
   12504:			; <UNDEFINED> instruction: 0x0001a3b8
   12508:	ldrdeq	sl, [r1], -ip
   1250c:	andeq	sl, r1, r4, asr #8
   12510:	andeq	sl, r1, r0, ror #8
   12514:	strdeq	sl, [r1], -r8
   12518:	andeq	sl, r1, r0, lsr #10
   1251c:	andeq	sl, r1, ip, ror #10
   12520:			; <UNDEFINED> instruction: 0x0001a5b4
   12524:	andeq	sl, r1, ip, asr #11
   12528:	strdeq	sl, [r1], -r0
   1252c:	andeq	sl, r1, r4, lsr r6
   12530:	andeq	sl, r1, r0, ror #13
   12534:	andeq	sl, r1, r0, lsl #14
   12538:	andeq	sl, r1, r8, lsl r7
   1253c:	andeq	sl, r1, r4, ror #14
   12540:	andeq	sl, r1, r0, lsl #15
   12544:	andeq	sl, r1, r4, lsr #15
   12548:	andeq	sl, r1, ip, lsr r8
   1254c:	andeq	sl, r1, r8, ror #16
   12550:	ldrdeq	sl, [r1], -r0
   12554:	andeq	sl, r1, ip, lsl #18
   12558:	andeq	sl, r1, r8, lsr r9
   1255c:	andeq	sl, r1, r8, asr #18
   12560:	andeq	sl, r1, r4, lsl sl
   12564:	andeq	sl, r1, r8, ror #21
   12568:	andeq	sl, r1, r8, lsl #22
   1256c:	andeq	sl, r1, r0, lsl #25
   12570:	andeq	sl, r1, r8, lsl #24
   12574:	andeq	sl, r1, r4, asr #24
   12578:	andeq	sl, r1, r0, asr #25
   1257c:	andeq	r8, r1, r8, asr #9
   12580:	andeq	r8, r1, ip, lsr #28
   12584:	ldrdeq	sl, [r1], -r8
   12588:	strdeq	sl, [r1], -r0
   1258c:	andeq	sl, r1, r8, lsl lr
   12590:	andeq	sl, r1, r8, lsr #28
   12594:	andeq	sl, r1, r4, ror lr
   12598:	muleq	r1, r0, lr
   1259c:	andeq	sl, r1, ip, lsl #4
   125a0:	andeq	fp, r1, r0, asr #3
   125a4:	andeq	sl, r1, ip, lsr #28
   125a8:	cmp	r3, #1
   125ac:	bxle	lr
   125b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125b4:	sub	sp, sp, #52	; 0x34
   125b8:	str	r3, [sp, #4]
   125bc:	mov	fp, r2
   125c0:	str	r1, [sp, #20]
   125c4:	str	r0, [sp, #16]
   125c8:	mov	r5, #1
   125cc:	ldr	r3, [pc, #3668]	; 13428 <tcgetattr@plt+0x2294>
   125d0:	add	r3, r3, #2272	; 0x8e0
   125d4:	str	r3, [sp, #12]
   125d8:	b	12d84 <tcgetattr@plt+0x1bf0>
   125dc:	ldr	r3, [pc, #3652]	; 13428 <tcgetattr@plt+0x2294>
   125e0:	add	r3, r3, #476	; 0x1dc
   125e4:	str	r3, [sp, #8]
   125e8:	mov	r8, r3
   125ec:	ldr	r6, [pc, #3640]	; 1342c <tcgetattr@plt+0x2298>
   125f0:	mov	r7, #0
   125f4:	mov	r1, r6
   125f8:	mov	r0, r4
   125fc:	bl	10edc <strcmp@plt>
   12600:	cmp	r0, #0
   12604:	beq	12658 <tcgetattr@plt+0x14c4>
   12608:	add	r7, r7, #1
   1260c:	ldr	r6, [r8, #20]!
   12610:	cmp	r6, #0
   12614:	bne	125f4 <tcgetattr@plt+0x1460>
   12618:	cmp	r9, #0
   1261c:	bne	133e8 <tcgetattr@plt+0x2254>
   12620:	ldr	r3, [sp, #12]
   12624:	add	r8, r3, #4
   12628:	ldr	r6, [pc, #3584]	; 13430 <tcgetattr@plt+0x229c>
   1262c:	mov	r7, #0
   12630:	mov	r1, r6
   12634:	mov	r0, r4
   12638:	bl	10edc <strcmp@plt>
   1263c:	cmp	r0, #0
   12640:	beq	12c5c <tcgetattr@plt+0x1ac8>
   12644:	add	r7, r7, #1
   12648:	ldr	r6, [r8, #12]!
   1264c:	cmp	r6, #0
   12650:	bne	12630 <tcgetattr@plt+0x149c>
   12654:	b	12670 <tcgetattr@plt+0x14dc>
   12658:	add	r3, r7, r7, lsl #2
   1265c:	ldr	r2, [pc, #3524]	; 13428 <tcgetattr@plt+0x2294>
   12660:	add	r3, r2, r3, lsl #2
   12664:	ldrb	r3, [r3, #484]	; 0x1e4
   12668:	tst	r3, #16
   1266c:	beq	126dc <tcgetattr@plt+0x1548>
   12670:	ldr	r1, [pc, #3516]	; 13434 <tcgetattr@plt+0x22a0>
   12674:	mov	r0, r4
   12678:	bl	10edc <strcmp@plt>
   1267c:	cmp	r0, #0
   12680:	bne	12e1c <tcgetattr@plt+0x1c88>
   12684:	ldr	r3, [sp, #4]
   12688:	sub	r3, r3, #1
   1268c:	cmp	r3, r5
   12690:	beq	12de4 <tcgetattr@plt+0x1c50>
   12694:	add	r3, r5, #1
   12698:	ldr	r0, [fp, r3, lsl #2]
   1269c:	cmp	r0, #0
   126a0:	beq	12de4 <tcgetattr@plt+0x1c50>
   126a4:	add	r5, r5, #1
   126a8:	ldr	r3, [sp, #16]
   126ac:	cmp	r3, #0
   126b0:	bne	12d74 <tcgetattr@plt+0x1be0>
   126b4:	bl	11400 <tcgetattr@plt+0x26c>
   126b8:	mov	r1, r0
   126bc:	ldr	r0, [sp, #88]	; 0x58
   126c0:	bl	11098 <cfsetispeed@plt>
   126c4:	mov	r3, #1
   126c8:	ldr	r2, [sp, #92]	; 0x5c
   126cc:	strb	r3, [r2]
   126d0:	ldr	r2, [sp, #96]	; 0x60
   126d4:	strb	r3, [r2]
   126d8:	b	12d74 <tcgetattr@plt+0x1be0>
   126dc:	cmp	r9, #0
   126e0:	beq	132ec <tcgetattr@plt+0x2158>
   126e4:	tst	r3, #4
   126e8:	beq	133dc <tcgetattr@plt+0x2248>
   126ec:	add	r3, r7, r7, lsl #2
   126f0:	ldr	r2, [pc, #3376]	; 13428 <tcgetattr@plt+0x2294>
   126f4:	add	r3, r2, r3, lsl #2
   126f8:	ldr	r1, [sp, #88]	; 0x58
   126fc:	ldr	r0, [r3, #480]	; 0x1e0
   12700:	bl	114e0 <tcgetattr@plt+0x34c>
   12704:	cmp	r0, #0
   12708:	beq	13360 <tcgetattr@plt+0x21cc>
   1270c:	lsl	r3, r7, #2
   12710:	add	r2, r3, r7
   12714:	ldr	r1, [pc, #3340]	; 13428 <tcgetattr@plt+0x2294>
   12718:	add	r2, r1, r2, lsl #2
   1271c:	mov	r3, r2
   12720:	ldr	r2, [r2, #492]	; 0x1ec
   12724:	ldr	r3, [r3, #488]	; 0x1e8
   12728:	orr	r2, r2, r3
   1272c:	ldr	r3, [r0]
   12730:	bic	r3, r3, r2
   12734:	str	r3, [r0]
   12738:	b	13340 <tcgetattr@plt+0x21ac>
   1273c:	ldr	r1, [pc, #3316]	; 13438 <tcgetattr@plt+0x22a4>
   12740:	mov	r0, r6
   12744:	bl	10edc <strcmp@plt>
   12748:	cmp	r0, #0
   1274c:	bne	12778 <tcgetattr@plt+0x15e4>
   12750:	cmp	r9, #0
   12754:	ldr	r3, [sp, #88]	; 0x58
   12758:	ldr	r3, [r3, #8]
   1275c:	bicne	r3, r3, #304	; 0x130
   12760:	orrne	r3, r3, #48	; 0x30
   12764:	biceq	r3, r3, #816	; 0x330
   12768:	orreq	r3, r3, #800	; 0x320
   1276c:	ldr	r2, [sp, #88]	; 0x58
   12770:	str	r3, [r2, #8]
   12774:	b	13340 <tcgetattr@plt+0x21ac>
   12778:	ldr	r1, [pc, #3260]	; 1343c <tcgetattr@plt+0x22a8>
   1277c:	mov	r0, r6
   12780:	bl	10edc <strcmp@plt>
   12784:	cmp	r0, #0
   12788:	bne	127e4 <tcgetattr@plt+0x1650>
   1278c:	cmp	r9, #0
   12790:	beq	127c0 <tcgetattr@plt+0x162c>
   12794:	ldr	r3, [sp, #88]	; 0x58
   12798:	ldr	r3, [r3]
   1279c:	bic	r3, r3, #448	; 0x1c0
   127a0:	orr	r3, r3, #256	; 0x100
   127a4:	ldr	r2, [sp, #88]	; 0x58
   127a8:	str	r3, [r2]
   127ac:	ldr	r3, [r2, #4]
   127b0:	bic	r3, r3, #44	; 0x2c
   127b4:	orr	r3, r3, #4
   127b8:	str	r3, [r2, #4]
   127bc:	b	13340 <tcgetattr@plt+0x21ac>
   127c0:	ldr	r3, [sp, #88]	; 0x58
   127c4:	ldr	r3, [r3]
   127c8:	bic	r3, r3, #256	; 0x100
   127cc:	ldr	r2, [sp, #88]	; 0x58
   127d0:	str	r3, [r2]
   127d4:	ldr	r3, [r2, #4]
   127d8:	bic	r3, r3, #4
   127dc:	str	r3, [r2, #4]
   127e0:	b	13340 <tcgetattr@plt+0x21ac>
   127e4:	ldr	r1, [pc, #3156]	; 13440 <tcgetattr@plt+0x22ac>
   127e8:	mov	r0, r6
   127ec:	bl	10edc <strcmp@plt>
   127f0:	cmp	r0, #0
   127f4:	beq	12848 <tcgetattr@plt+0x16b4>
   127f8:	ldr	r1, [pc, #3140]	; 13444 <tcgetattr@plt+0x22b0>
   127fc:	mov	r0, r6
   12800:	bl	10edc <strcmp@plt>
   12804:	cmp	r0, #0
   12808:	ldreq	r3, [sp, #12]
   1280c:	addeq	r3, r3, #4
   12810:	beq	12874 <tcgetattr@plt+0x16e0>
   12814:	ldr	r1, [pc, #3116]	; 13448 <tcgetattr@plt+0x22b4>
   12818:	mov	r0, r6
   1281c:	bl	10edc <strcmp@plt>
   12820:	cmp	r0, #0
   12824:	bne	1293c <tcgetattr@plt+0x17a8>
   12828:	cmp	r9, #0
   1282c:	ldr	r3, [sp, #88]	; 0x58
   12830:	ldr	r3, [r3, #12]
   12834:	orrne	r3, r3, #2
   12838:	biceq	r3, r3, #2
   1283c:	ldr	r2, [sp, #88]	; 0x58
   12840:	str	r3, [r2, #12]
   12844:	b	13340 <tcgetattr@plt+0x21ac>
   12848:	mov	r3, #127	; 0x7f
   1284c:	ldr	r2, [sp, #88]	; 0x58
   12850:	strb	r3, [r2, #19]
   12854:	mov	r3, #21
   12858:	strb	r3, [r2, #20]
   1285c:	b	13340 <tcgetattr@plt+0x21ac>
   12860:	ldr	r2, [r3, #-4]
   12864:	ldrb	r1, [r3, #-8]
   12868:	ldr	r0, [sp, #88]	; 0x58
   1286c:	add	r2, r0, r2
   12870:	strb	r1, [r2, #17]
   12874:	ldr	r2, [r3], #12
   12878:	cmp	r2, #0
   1287c:	bne	12860 <tcgetattr@plt+0x16cc>
   12880:	ldr	r6, [sp, #8]
   12884:	b	128e8 <tcgetattr@plt+0x1754>
   12888:	ldr	r3, [pc, #3004]	; 1344c <tcgetattr@plt+0x22b8>
   1288c:	ldr	r2, [pc, #3004]	; 13450 <tcgetattr@plt+0x22bc>
   12890:	ldr	r1, [pc, #3004]	; 13454 <tcgetattr@plt+0x22c0>
   12894:	ldr	r0, [pc, #3004]	; 13458 <tcgetattr@plt+0x22c4>
   12898:	bl	11188 <__assert_fail@plt>
   1289c:	tst	r3, #2
   128a0:	beq	128e4 <tcgetattr@plt+0x1750>
   128a4:	ldr	r1, [sp, #88]	; 0x58
   128a8:	ldr	r0, [r4, #4]
   128ac:	bl	114e0 <tcgetattr@plt+0x34c>
   128b0:	cmp	r0, #0
   128b4:	bne	128cc <tcgetattr@plt+0x1738>
   128b8:	ldr	r3, [pc, #2956]	; 1344c <tcgetattr@plt+0x22b8>
   128bc:	ldr	r2, [pc, #2968]	; 1345c <tcgetattr@plt+0x22c8>
   128c0:	ldr	r1, [pc, #2956]	; 13454 <tcgetattr@plt+0x22c0>
   128c4:	ldr	r0, [pc, #2956]	; 13458 <tcgetattr@plt+0x22c4>
   128c8:	bl	11188 <__assert_fail@plt>
   128cc:	ldr	r3, [r4, #16]
   128d0:	ldr	r2, [r4, #12]
   128d4:	orr	r2, r3, r2
   128d8:	ldr	r3, [r0]
   128dc:	bic	r3, r3, r2
   128e0:	str	r3, [r0]
   128e4:	add	r6, r6, #20
   128e8:	mov	r4, r6
   128ec:	ldr	r3, [r6]
   128f0:	cmp	r3, #0
   128f4:	beq	13340 <tcgetattr@plt+0x21ac>
   128f8:	ldrb	r3, [r6, #8]
   128fc:	tst	r3, #16
   12900:	bne	128e4 <tcgetattr@plt+0x1750>
   12904:	tst	r3, #1
   12908:	beq	1289c <tcgetattr@plt+0x1708>
   1290c:	ldr	r1, [sp, #88]	; 0x58
   12910:	ldr	r0, [r4, #4]
   12914:	bl	114e0 <tcgetattr@plt+0x34c>
   12918:	cmp	r0, #0
   1291c:	beq	12888 <tcgetattr@plt+0x16f4>
   12920:	ldr	r2, [r4, #16]
   12924:	ldr	r3, [r0]
   12928:	bic	r3, r3, r2
   1292c:	ldr	r2, [r4, #12]
   12930:	orr	r3, r3, r2
   12934:	str	r3, [r0]
   12938:	b	128e4 <tcgetattr@plt+0x1750>
   1293c:	ldr	r1, [pc, #2844]	; 13460 <tcgetattr@plt+0x22cc>
   12940:	mov	r0, r6
   12944:	bl	10edc <strcmp@plt>
   12948:	cmp	r0, #0
   1294c:	bne	129a8 <tcgetattr@plt+0x1814>
   12950:	cmp	r9, #0
   12954:	beq	12980 <tcgetattr@plt+0x17ec>
   12958:	ldr	r3, [sp, #88]	; 0x58
   1295c:	ldr	r3, [r3, #8]
   12960:	bic	r3, r3, #304	; 0x130
   12964:	orr	r3, r3, #288	; 0x120
   12968:	ldr	r2, [sp, #88]	; 0x58
   1296c:	str	r3, [r2, #8]
   12970:	ldr	r3, [r2]
   12974:	orr	r3, r3, #32
   12978:	str	r3, [r2]
   1297c:	b	13340 <tcgetattr@plt+0x21ac>
   12980:	ldr	r3, [sp, #88]	; 0x58
   12984:	ldr	r3, [r3, #8]
   12988:	bic	r3, r3, #304	; 0x130
   1298c:	orr	r3, r3, #48	; 0x30
   12990:	ldr	r2, [sp, #88]	; 0x58
   12994:	str	r3, [r2, #8]
   12998:	ldr	r3, [r2]
   1299c:	bic	r3, r3, #32
   129a0:	str	r3, [r2]
   129a4:	b	13340 <tcgetattr@plt+0x21ac>
   129a8:	ldr	r1, [pc, #2740]	; 13464 <tcgetattr@plt+0x22d0>
   129ac:	mov	r0, r6
   129b0:	bl	10edc <strcmp@plt>
   129b4:	cmp	r0, #0
   129b8:	bne	12a2c <tcgetattr@plt+0x1898>
   129bc:	cmp	r9, #0
   129c0:	beq	129f8 <tcgetattr@plt+0x1864>
   129c4:	ldr	r3, [sp, #88]	; 0x58
   129c8:	ldr	r3, [r3, #8]
   129cc:	bic	r3, r3, #304	; 0x130
   129d0:	orr	r3, r3, #288	; 0x120
   129d4:	ldr	r2, [sp, #88]	; 0x58
   129d8:	str	r3, [r2, #8]
   129dc:	ldr	r3, [r2]
   129e0:	orr	r3, r3, #32
   129e4:	str	r3, [r2]
   129e8:	ldr	r3, [r2, #4]
   129ec:	orr	r3, r3, #1
   129f0:	str	r3, [r2, #4]
   129f4:	b	13340 <tcgetattr@plt+0x21ac>
   129f8:	ldr	r3, [sp, #88]	; 0x58
   129fc:	ldr	r3, [r3, #8]
   12a00:	bic	r3, r3, #304	; 0x130
   12a04:	orr	r3, r3, #48	; 0x30
   12a08:	ldr	r2, [sp, #88]	; 0x58
   12a0c:	str	r3, [r2, #8]
   12a10:	ldr	r3, [r2]
   12a14:	bic	r3, r3, #32
   12a18:	str	r3, [r2]
   12a1c:	ldr	r3, [r2, #4]
   12a20:	bic	r3, r3, #1
   12a24:	str	r3, [r2, #4]
   12a28:	b	13340 <tcgetattr@plt+0x21ac>
   12a2c:	ldr	r1, [pc, #2612]	; 13468 <tcgetattr@plt+0x22d4>
   12a30:	mov	r0, r6
   12a34:	bl	10edc <strcmp@plt>
   12a38:	cmp	r0, #0
   12a3c:	beq	12a54 <tcgetattr@plt+0x18c0>
   12a40:	ldr	r1, [pc, #2596]	; 1346c <tcgetattr@plt+0x22d8>
   12a44:	mov	r0, r6
   12a48:	bl	10edc <strcmp@plt>
   12a4c:	cmp	r0, #0
   12a50:	bne	12aec <tcgetattr@plt+0x1958>
   12a54:	ldrb	r3, [r6]
   12a58:	cmp	r3, #114	; 0x72
   12a5c:	movne	r2, #0
   12a60:	andeq	r2, r9, #1
   12a64:	cmp	r2, #0
   12a68:	bne	12a80 <tcgetattr@plt+0x18ec>
   12a6c:	cmp	r3, #99	; 0x63
   12a70:	moveq	r3, r9
   12a74:	orrne	r3, r9, #1
   12a78:	cmp	r3, #0
   12a7c:	bne	12ab4 <tcgetattr@plt+0x1920>
   12a80:	ldr	r3, [sp, #88]	; 0x58
   12a84:	ldr	r3, [r3]
   12a88:	orr	r3, r3, #1312	; 0x520
   12a8c:	orr	r3, r3, #6
   12a90:	ldr	r2, [sp, #88]	; 0x58
   12a94:	str	r3, [r2]
   12a98:	ldr	r3, [r2, #4]
   12a9c:	orr	r3, r3, #1
   12aa0:	str	r3, [r2, #4]
   12aa4:	ldr	r3, [r2, #12]
   12aa8:	orr	r3, r3, #3
   12aac:	str	r3, [r2, #12]
   12ab0:	b	13340 <tcgetattr@plt+0x21ac>
   12ab4:	mov	r2, #0
   12ab8:	ldr	r3, [sp, #88]	; 0x58
   12abc:	str	r2, [r3]
   12ac0:	ldr	r3, [r3, #4]
   12ac4:	bic	r3, r3, #1
   12ac8:	ldr	r1, [sp, #88]	; 0x58
   12acc:	str	r3, [r1, #4]
   12ad0:	ldr	r3, [r1, #12]
   12ad4:	bic	r3, r3, #7
   12ad8:	str	r3, [r1, #12]
   12adc:	mov	r3, #1
   12ae0:	strb	r3, [r1, #23]
   12ae4:	strb	r2, [r1, #22]
   12ae8:	b	13340 <tcgetattr@plt+0x21ac>
   12aec:	ldr	r1, [pc, #2428]	; 13470 <tcgetattr@plt+0x22dc>
   12af0:	mov	r0, r6
   12af4:	bl	10edc <strcmp@plt>
   12af8:	cmp	r0, #0
   12afc:	bne	12b20 <tcgetattr@plt+0x198c>
   12b00:	cmp	r9, #0
   12b04:	ldr	r3, [sp, #88]	; 0x58
   12b08:	ldr	r3, [r3]
   12b0c:	orrne	r3, r3, #2048	; 0x800
   12b10:	biceq	r3, r3, #2048	; 0x800
   12b14:	ldr	r2, [sp, #88]	; 0x58
   12b18:	str	r3, [r2]
   12b1c:	b	13340 <tcgetattr@plt+0x21ac>
   12b20:	ldr	r1, [pc, #2380]	; 13474 <tcgetattr@plt+0x22e0>
   12b24:	mov	r0, r6
   12b28:	bl	10edc <strcmp@plt>
   12b2c:	cmp	r0, #0
   12b30:	bne	12b54 <tcgetattr@plt+0x19c0>
   12b34:	cmp	r9, #0
   12b38:	ldr	r3, [sp, #88]	; 0x58
   12b3c:	ldr	r3, [r3, #4]
   12b40:	orrne	r3, r3, #6144	; 0x1800
   12b44:	biceq	r3, r3, #6144	; 0x1800
   12b48:	ldr	r2, [sp, #88]	; 0x58
   12b4c:	str	r3, [r2, #4]
   12b50:	b	13340 <tcgetattr@plt+0x21ac>
   12b54:	ldr	r1, [pc, #2332]	; 13478 <tcgetattr@plt+0x22e4>
   12b58:	mov	r0, r6
   12b5c:	bl	10edc <strcmp@plt>
   12b60:	cmp	r0, #0
   12b64:	beq	12b7c <tcgetattr@plt+0x19e8>
   12b68:	ldr	r1, [pc, #2316]	; 1347c <tcgetattr@plt+0x22e8>
   12b6c:	mov	r0, r6
   12b70:	bl	10edc <strcmp@plt>
   12b74:	cmp	r0, #0
   12b78:	bne	12be4 <tcgetattr@plt+0x1a50>
   12b7c:	cmp	r9, #0
   12b80:	beq	12bb4 <tcgetattr@plt+0x1a20>
   12b84:	ldr	r3, [sp, #88]	; 0x58
   12b88:	ldr	r3, [r3, #12]
   12b8c:	bic	r3, r3, #4
   12b90:	ldr	r2, [sp, #88]	; 0x58
   12b94:	str	r3, [r2, #12]
   12b98:	ldr	r3, [r2]
   12b9c:	bic	r3, r3, #512	; 0x200
   12ba0:	str	r3, [r2]
   12ba4:	ldr	r3, [r2, #4]
   12ba8:	bic	r3, r3, #2
   12bac:	str	r3, [r2, #4]
   12bb0:	b	13340 <tcgetattr@plt+0x21ac>
   12bb4:	ldr	r3, [sp, #88]	; 0x58
   12bb8:	ldr	r3, [r3, #12]
   12bbc:	orr	r3, r3, #4
   12bc0:	ldr	r2, [sp, #88]	; 0x58
   12bc4:	str	r3, [r2, #12]
   12bc8:	ldr	r3, [r2]
   12bcc:	orr	r3, r3, #512	; 0x200
   12bd0:	str	r3, [r2]
   12bd4:	ldr	r3, [r2, #4]
   12bd8:	orr	r3, r3, #2
   12bdc:	str	r3, [r2, #4]
   12be0:	b	13340 <tcgetattr@plt+0x21ac>
   12be4:	ldr	r1, [pc, #2196]	; 13480 <tcgetattr@plt+0x22ec>
   12be8:	mov	r0, r6
   12bec:	bl	10edc <strcmp@plt>
   12bf0:	cmp	r0, #0
   12bf4:	bne	12c10 <tcgetattr@plt+0x1a7c>
   12bf8:	ldr	r3, [sp, #88]	; 0x58
   12bfc:	ldr	r3, [r3, #12]
   12c00:	orr	r3, r3, #2576	; 0xa10
   12c04:	ldr	r2, [sp, #88]	; 0x58
   12c08:	str	r3, [r2, #12]
   12c0c:	b	13340 <tcgetattr@plt+0x21ac>
   12c10:	ldr	r1, [pc, #2156]	; 13484 <tcgetattr@plt+0x22f0>
   12c14:	mov	r0, r6
   12c18:	bl	10edc <strcmp@plt>
   12c1c:	cmp	r0, #0
   12c20:	bne	13340 <tcgetattr@plt+0x21ac>
   12c24:	mov	r3, #3
   12c28:	ldr	r2, [sp, #88]	; 0x58
   12c2c:	strb	r3, [r2, #17]
   12c30:	mov	r3, #127	; 0x7f
   12c34:	strb	r3, [r2, #19]
   12c38:	mov	r3, #21
   12c3c:	strb	r3, [r2, #20]
   12c40:	ldr	r3, [r2, #12]
   12c44:	orr	r3, r3, #2576	; 0xa10
   12c48:	str	r3, [r2, #12]
   12c4c:	ldr	r3, [r2]
   12c50:	bic	r3, r3, #2048	; 0x800
   12c54:	str	r3, [r2]
   12c58:	b	13340 <tcgetattr@plt+0x21ac>
   12c5c:	ldr	r3, [sp, #4]
   12c60:	sub	r3, r3, #1
   12c64:	cmp	r3, r5
   12c68:	beq	12d08 <tcgetattr@plt+0x1b74>
   12c6c:	add	sl, fp, sl
   12c70:	ldr	r8, [sl, #4]
   12c74:	cmp	r8, #0
   12c78:	beq	12d08 <tcgetattr@plt+0x1b74>
   12c7c:	add	r5, r5, #1
   12c80:	ldr	r1, [pc, #2048]	; 13488 <tcgetattr@plt+0x22f4>
   12c84:	mov	r0, r6
   12c88:	bl	10edc <strcmp@plt>
   12c8c:	cmp	r0, #0
   12c90:	beq	12d40 <tcgetattr@plt+0x1bac>
   12c94:	ldr	r1, [pc, #2032]	; 1348c <tcgetattr@plt+0x22f8>
   12c98:	mov	r0, r6
   12c9c:	bl	10edc <strcmp@plt>
   12ca0:	cmp	r0, #0
   12ca4:	beq	12d40 <tcgetattr@plt+0x1bac>
   12ca8:	ldrb	r4, [r8]
   12cac:	cmp	r4, #0
   12cb0:	beq	12dcc <tcgetattr@plt+0x1c38>
   12cb4:	ldrb	r6, [r8, #1]
   12cb8:	cmp	r6, #0
   12cbc:	beq	12dcc <tcgetattr@plt+0x1c38>
   12cc0:	ldr	r1, [pc, #1992]	; 13490 <tcgetattr@plt+0x22fc>
   12cc4:	mov	r0, r8
   12cc8:	bl	10edc <strcmp@plt>
   12ccc:	cmp	r0, #0
   12cd0:	moveq	r0, #0
   12cd4:	beq	12d4c <tcgetattr@plt+0x1bb8>
   12cd8:	ldr	r1, [pc, #1972]	; 13494 <tcgetattr@plt+0x2300>
   12cdc:	mov	r0, r8
   12ce0:	bl	10edc <strcmp@plt>
   12ce4:	cmp	r0, #0
   12ce8:	moveq	r0, #0
   12cec:	beq	12d4c <tcgetattr@plt+0x1bb8>
   12cf0:	cmp	r4, #94	; 0x5e
   12cf4:	bne	12dd4 <tcgetattr@plt+0x1c40>
   12cf8:	cmp	r6, #63	; 0x3f
   12cfc:	bicne	r0, r6, #96	; 0x60
   12d00:	moveq	r0, #127	; 0x7f
   12d04:	b	12d4c <tcgetattr@plt+0x1bb8>
   12d08:	mov	r2, #5
   12d0c:	ldr	r1, [pc, #1924]	; 13498 <tcgetattr@plt+0x2304>
   12d10:	mov	r0, #0
   12d14:	bl	10f54 <dcgettext@plt>
   12d18:	mov	r5, r0
   12d1c:	mov	r0, r4
   12d20:	bl	16028 <tcgetattr@plt+0x4e94>
   12d24:	mov	r3, r0
   12d28:	mov	r2, r5
   12d2c:	mov	r1, #0
   12d30:	mov	r0, r1
   12d34:	bl	10ffc <error@plt>
   12d38:	mov	r0, #1
   12d3c:	bl	11934 <tcgetattr@plt+0x7a0>
   12d40:	mov	r1, #255	; 0xff
   12d44:	mov	r0, r8
   12d48:	bl	1170c <tcgetattr@plt+0x578>
   12d4c:	add	r7, r7, r7, lsl #1
   12d50:	ldr	r3, [pc, #1744]	; 13428 <tcgetattr@plt+0x2294>
   12d54:	add	r7, r3, r7, lsl #2
   12d58:	ldr	r3, [r7, #2284]	; 0x8ec
   12d5c:	ldr	r2, [sp, #88]	; 0x58
   12d60:	add	r3, r2, r3
   12d64:	strb	r0, [r3, #17]
   12d68:	mov	r3, #1
   12d6c:	ldr	r2, [sp, #96]	; 0x60
   12d70:	strb	r3, [r2]
   12d74:	add	r5, r5, #1
   12d78:	ldr	r3, [sp, #4]
   12d7c:	cmp	r3, r5
   12d80:	ble	13420 <tcgetattr@plt+0x228c>
   12d84:	lsl	sl, r5, #2
   12d88:	ldr	r4, [fp, r5, lsl #2]
   12d8c:	cmp	r4, #0
   12d90:	beq	12d74 <tcgetattr@plt+0x1be0>
   12d94:	ldrb	r3, [r4]
   12d98:	cmp	r3, #45	; 0x2d
   12d9c:	addeq	r4, r4, #1
   12da0:	moveq	r9, #1
   12da4:	movne	r9, #0
   12da8:	ldr	r1, [pc, #1772]	; 1349c <tcgetattr@plt+0x2308>
   12dac:	mov	r0, r4
   12db0:	bl	10edc <strcmp@plt>
   12db4:	cmp	r0, #0
   12db8:	bne	125dc <tcgetattr@plt+0x1448>
   12dbc:	eor	r9, r9, #1
   12dc0:	ldr	r3, [pc, #1752]	; 134a0 <tcgetattr@plt+0x230c>
   12dc4:	str	r9, [r3]
   12dc8:	b	12d74 <tcgetattr@plt+0x1be0>
   12dcc:	mov	r0, r4
   12dd0:	b	12d4c <tcgetattr@plt+0x1bb8>
   12dd4:	mov	r1, #255	; 0xff
   12dd8:	mov	r0, r8
   12ddc:	bl	1170c <tcgetattr@plt+0x578>
   12de0:	b	12d4c <tcgetattr@plt+0x1bb8>
   12de4:	mov	r2, #5
   12de8:	ldr	r1, [pc, #1704]	; 13498 <tcgetattr@plt+0x2304>
   12dec:	mov	r0, #0
   12df0:	bl	10f54 <dcgettext@plt>
   12df4:	mov	r5, r0
   12df8:	mov	r0, r4
   12dfc:	bl	16028 <tcgetattr@plt+0x4e94>
   12e00:	mov	r3, r0
   12e04:	mov	r2, r5
   12e08:	mov	r1, #0
   12e0c:	mov	r0, r1
   12e10:	bl	10ffc <error@plt>
   12e14:	mov	r0, #1
   12e18:	bl	11934 <tcgetattr@plt+0x7a0>
   12e1c:	ldr	r1, [pc, #1664]	; 134a4 <tcgetattr@plt+0x2310>
   12e20:	mov	r0, r4
   12e24:	bl	10edc <strcmp@plt>
   12e28:	cmp	r0, #0
   12e2c:	bne	12ec0 <tcgetattr@plt+0x1d2c>
   12e30:	ldr	r3, [sp, #4]
   12e34:	sub	r3, r3, #1
   12e38:	cmp	r3, r5
   12e3c:	beq	12e88 <tcgetattr@plt+0x1cf4>
   12e40:	add	r3, r5, #1
   12e44:	ldr	r0, [fp, r3, lsl #2]
   12e48:	cmp	r0, #0
   12e4c:	beq	12e88 <tcgetattr@plt+0x1cf4>
   12e50:	add	r5, r5, #1
   12e54:	ldr	r3, [sp, #16]
   12e58:	cmp	r3, #0
   12e5c:	bne	12d74 <tcgetattr@plt+0x1be0>
   12e60:	bl	11400 <tcgetattr@plt+0x26c>
   12e64:	mov	r1, r0
   12e68:	ldr	r0, [sp, #88]	; 0x58
   12e6c:	bl	10f9c <cfsetospeed@plt>
   12e70:	mov	r3, #1
   12e74:	ldr	r2, [sp, #92]	; 0x5c
   12e78:	strb	r3, [r2]
   12e7c:	ldr	r2, [sp, #96]	; 0x60
   12e80:	strb	r3, [r2]
   12e84:	b	12d74 <tcgetattr@plt+0x1be0>
   12e88:	mov	r2, #5
   12e8c:	ldr	r1, [pc, #1540]	; 13498 <tcgetattr@plt+0x2304>
   12e90:	mov	r0, #0
   12e94:	bl	10f54 <dcgettext@plt>
   12e98:	mov	r5, r0
   12e9c:	mov	r0, r4
   12ea0:	bl	16028 <tcgetattr@plt+0x4e94>
   12ea4:	mov	r3, r0
   12ea8:	mov	r2, r5
   12eac:	mov	r1, #0
   12eb0:	mov	r0, r1
   12eb4:	bl	10ffc <error@plt>
   12eb8:	mov	r0, #1
   12ebc:	bl	11934 <tcgetattr@plt+0x7a0>
   12ec0:	ldr	r1, [pc, #1504]	; 134a8 <tcgetattr@plt+0x2314>
   12ec4:	mov	r0, r4
   12ec8:	bl	10edc <strcmp@plt>
   12ecc:	cmp	r0, #0
   12ed0:	bne	12f54 <tcgetattr@plt+0x1dc0>
   12ed4:	ldr	r3, [sp, #4]
   12ed8:	sub	r3, r3, #1
   12edc:	cmp	r3, r5
   12ee0:	beq	12f1c <tcgetattr@plt+0x1d88>
   12ee4:	add	r3, r5, #1
   12ee8:	ldr	r0, [fp, r3, lsl #2]
   12eec:	cmp	r0, #0
   12ef0:	beq	12f1c <tcgetattr@plt+0x1d88>
   12ef4:	add	r5, r5, #1
   12ef8:	ldr	r3, [sp, #16]
   12efc:	cmp	r3, #0
   12f00:	bne	12d74 <tcgetattr@plt+0x1be0>
   12f04:	mvn	r1, #-2147483648	; 0x80000000
   12f08:	bl	1170c <tcgetattr@plt+0x578>
   12f0c:	ldr	r2, [sp, #20]
   12f10:	mvn	r1, #0
   12f14:	bl	11860 <tcgetattr@plt+0x6cc>
   12f18:	b	12d74 <tcgetattr@plt+0x1be0>
   12f1c:	mov	r2, #5
   12f20:	ldr	r1, [pc, #1392]	; 13498 <tcgetattr@plt+0x2304>
   12f24:	mov	r0, #0
   12f28:	bl	10f54 <dcgettext@plt>
   12f2c:	mov	r5, r0
   12f30:	mov	r0, r4
   12f34:	bl	16028 <tcgetattr@plt+0x4e94>
   12f38:	mov	r3, r0
   12f3c:	mov	r2, r5
   12f40:	mov	r1, #0
   12f44:	mov	r0, r1
   12f48:	bl	10ffc <error@plt>
   12f4c:	mov	r0, #1
   12f50:	bl	11934 <tcgetattr@plt+0x7a0>
   12f54:	ldr	r1, [pc, #1360]	; 134ac <tcgetattr@plt+0x2318>
   12f58:	mov	r0, r4
   12f5c:	bl	10edc <strcmp@plt>
   12f60:	cmp	r0, #0
   12f64:	beq	12f7c <tcgetattr@plt+0x1de8>
   12f68:	ldr	r1, [pc, #1344]	; 134b0 <tcgetattr@plt+0x231c>
   12f6c:	mov	r0, r4
   12f70:	bl	10edc <strcmp@plt>
   12f74:	cmp	r0, #0
   12f78:	bne	13000 <tcgetattr@plt+0x1e6c>
   12f7c:	ldr	r3, [sp, #4]
   12f80:	sub	r3, r3, #1
   12f84:	cmp	r3, r5
   12f88:	beq	12fc8 <tcgetattr@plt+0x1e34>
   12f8c:	add	r3, r5, #1
   12f90:	ldr	r0, [fp, r3, lsl #2]
   12f94:	cmp	r0, #0
   12f98:	beq	12fc8 <tcgetattr@plt+0x1e34>
   12f9c:	add	r5, r5, #1
   12fa0:	ldr	r3, [sp, #16]
   12fa4:	cmp	r3, #0
   12fa8:	bne	12d74 <tcgetattr@plt+0x1be0>
   12fac:	mvn	r1, #-2147483648	; 0x80000000
   12fb0:	bl	1170c <tcgetattr@plt+0x578>
   12fb4:	ldr	r2, [sp, #20]
   12fb8:	mov	r1, r0
   12fbc:	mvn	r0, #0
   12fc0:	bl	11860 <tcgetattr@plt+0x6cc>
   12fc4:	b	12d74 <tcgetattr@plt+0x1be0>
   12fc8:	mov	r2, #5
   12fcc:	ldr	r1, [pc, #1220]	; 13498 <tcgetattr@plt+0x2304>
   12fd0:	mov	r0, #0
   12fd4:	bl	10f54 <dcgettext@plt>
   12fd8:	mov	r5, r0
   12fdc:	mov	r0, r4
   12fe0:	bl	16028 <tcgetattr@plt+0x4e94>
   12fe4:	mov	r3, r0
   12fe8:	mov	r2, r5
   12fec:	mov	r1, #0
   12ff0:	mov	r0, r1
   12ff4:	bl	10ffc <error@plt>
   12ff8:	mov	r0, #1
   12ffc:	bl	11934 <tcgetattr@plt+0x7a0>
   13000:	ldr	r1, [pc, #1196]	; 134b4 <tcgetattr@plt+0x2320>
   13004:	mov	r0, r4
   13008:	bl	10edc <strcmp@plt>
   1300c:	cmp	r0, #0
   13010:	bne	13040 <tcgetattr@plt+0x1eac>
   13014:	ldr	r3, [sp, #16]
   13018:	cmp	r3, #0
   1301c:	bne	12d74 <tcgetattr@plt+0x1be0>
   13020:	bl	11458 <tcgetattr@plt+0x2c4>
   13024:	ldr	r3, [pc, #1164]	; 134b8 <tcgetattr@plt+0x2324>
   13028:	str	r0, [r3, #16]
   1302c:	mov	r0, #0
   13030:	str	r0, [r3, #12]
   13034:	ldr	r1, [sp, #20]
   13038:	bl	11768 <tcgetattr@plt+0x5d4>
   1303c:	b	12d74 <tcgetattr@plt+0x1be0>
   13040:	ldr	r1, [pc, #1140]	; 134bc <tcgetattr@plt+0x2328>
   13044:	mov	r0, r4
   13048:	bl	10edc <strcmp@plt>
   1304c:	cmp	r0, #0
   13050:	bne	1310c <tcgetattr@plt+0x1f78>
   13054:	ldr	r3, [sp, #4]
   13058:	sub	r3, r3, #1
   1305c:	cmp	r3, r5
   13060:	beq	130d4 <tcgetattr@plt+0x1f40>
   13064:	add	r6, r5, #1
   13068:	ldr	r0, [fp, r6, lsl #2]
   1306c:	cmp	r0, #0
   13070:	beq	130d4 <tcgetattr@plt+0x1f40>
   13074:	add	r5, r5, #1
   13078:	mvn	r1, #0
   1307c:	bl	1170c <tcgetattr@plt+0x578>
   13080:	ldr	r3, [sp, #88]	; 0x58
   13084:	strb	r0, [r3, #16]
   13088:	uxtb	r3, r0
   1308c:	cmp	r0, r3
   13090:	beq	130c4 <tcgetattr@plt+0x1f30>
   13094:	mov	r2, #5
   13098:	ldr	r1, [pc, #1056]	; 134c0 <tcgetattr@plt+0x232c>
   1309c:	mov	r0, #0
   130a0:	bl	10f54 <dcgettext@plt>
   130a4:	mov	r4, r0
   130a8:	ldr	r0, [fp, r6, lsl #2]
   130ac:	bl	16028 <tcgetattr@plt+0x4e94>
   130b0:	mov	r3, r0
   130b4:	mov	r2, r4
   130b8:	mov	r1, #0
   130bc:	mov	r0, r1
   130c0:	bl	10ffc <error@plt>
   130c4:	mov	r3, #1
   130c8:	ldr	r2, [sp, #96]	; 0x60
   130cc:	strb	r3, [r2]
   130d0:	b	12d74 <tcgetattr@plt+0x1be0>
   130d4:	mov	r2, #5
   130d8:	ldr	r1, [pc, #952]	; 13498 <tcgetattr@plt+0x2304>
   130dc:	mov	r0, #0
   130e0:	bl	10f54 <dcgettext@plt>
   130e4:	mov	r5, r0
   130e8:	mov	r0, r4
   130ec:	bl	16028 <tcgetattr@plt+0x4e94>
   130f0:	mov	r3, r0
   130f4:	mov	r2, r5
   130f8:	mov	r1, #0
   130fc:	mov	r0, r1
   13100:	bl	10ffc <error@plt>
   13104:	mov	r0, #1
   13108:	bl	11934 <tcgetattr@plt+0x7a0>
   1310c:	ldr	r1, [pc, #944]	; 134c4 <tcgetattr@plt+0x2330>
   13110:	mov	r0, r4
   13114:	bl	10edc <strcmp@plt>
   13118:	cmp	r0, #0
   1311c:	bne	13148 <tcgetattr@plt+0x1fb4>
   13120:	ldr	r3, [sp, #16]
   13124:	cmp	r3, #0
   13128:	bne	12d74 <tcgetattr@plt+0x1be0>
   1312c:	bl	11458 <tcgetattr@plt+0x2c4>
   13130:	ldr	r3, [pc, #896]	; 134b8 <tcgetattr@plt+0x2324>
   13134:	str	r0, [r3, #16]
   13138:	mov	r1, #0
   1313c:	ldr	r0, [sp, #88]	; 0x58
   13140:	bl	11648 <tcgetattr@plt+0x4b4>
   13144:	b	12d74 <tcgetattr@plt+0x1be0>
   13148:	mov	r0, r4
   1314c:	bl	11400 <tcgetattr@plt+0x26c>
   13150:	mov	r6, r0
   13154:	cmn	r0, #1
   13158:	beq	13198 <tcgetattr@plt+0x2004>
   1315c:	ldr	r3, [sp, #16]
   13160:	cmp	r3, #0
   13164:	bne	12d74 <tcgetattr@plt+0x1be0>
   13168:	mov	r1, r0
   1316c:	ldr	r0, [sp, #88]	; 0x58
   13170:	bl	11098 <cfsetispeed@plt>
   13174:	mov	r1, r6
   13178:	ldr	r0, [sp, #88]	; 0x58
   1317c:	bl	10f9c <cfsetospeed@plt>
   13180:	mov	r3, #1
   13184:	ldr	r2, [sp, #92]	; 0x5c
   13188:	strb	r3, [r2]
   1318c:	ldr	r2, [sp, #96]	; 0x60
   13190:	strb	r3, [r2]
   13194:	b	12d74 <tcgetattr@plt+0x1be0>
   13198:	bl	110b0 <__errno_location@plt>
   1319c:	mov	r6, r0
   131a0:	mov	r8, r4
   131a4:	mov	r7, #0
   131a8:	mov	r9, r7
   131ac:	str	r9, [r6]
   131b0:	mov	r2, #16
   131b4:	add	r1, sp, #28
   131b8:	mov	r0, r8
   131bc:	bl	11074 <strtoul@plt>
   131c0:	ldr	r3, [r6]
   131c4:	cmp	r3, #0
   131c8:	bne	132b4 <tcgetattr@plt+0x2120>
   131cc:	ldr	r3, [sp, #28]
   131d0:	ldrb	r1, [r3]
   131d4:	cmp	r3, r8
   131d8:	movne	r2, #0
   131dc:	moveq	r2, #1
   131e0:	cmp	r1, #58	; 0x3a
   131e4:	orrne	r2, r2, #1
   131e8:	cmp	r2, #0
   131ec:	bne	132b4 <tcgetattr@plt+0x2120>
   131f0:	add	r2, sp, #32
   131f4:	str	r0, [r2, r7, lsl #2]
   131f8:	add	r8, r3, #1
   131fc:	add	r7, r7, #1
   13200:	cmp	r7, #4
   13204:	bne	131ac <tcgetattr@plt+0x2018>
   13208:	ldr	r3, [sp, #32]
   1320c:	ldr	r2, [sp, #88]	; 0x58
   13210:	str	r3, [r2]
   13214:	ldr	r3, [sp, #36]	; 0x24
   13218:	str	r3, [r2, #4]
   1321c:	ldr	r3, [sp, #40]	; 0x28
   13220:	str	r3, [r2, #8]
   13224:	ldr	r3, [sp, #44]	; 0x2c
   13228:	str	r3, [r2, #12]
   1322c:	add	r9, r2, #16
   13230:	mov	r7, #0
   13234:	mov	sl, #58	; 0x3a
   13238:	b	1325c <tcgetattr@plt+0x20c8>
   1323c:	strb	r2, [r9, #1]!
   13240:	add	r8, r3, #1
   13244:	add	r7, r7, #1
   13248:	cmp	r7, #32
   1324c:	beq	13350 <tcgetattr@plt+0x21bc>
   13250:	cmp	r7, #30
   13254:	movls	sl, #58	; 0x3a
   13258:	movhi	sl, #0
   1325c:	mov	r3, #0
   13260:	str	r3, [r6]
   13264:	mov	r2, #16
   13268:	add	r1, sp, #28
   1326c:	mov	r0, r8
   13270:	bl	11074 <strtoul@plt>
   13274:	ldr	r3, [r6]
   13278:	cmp	r3, #0
   1327c:	bne	132b4 <tcgetattr@plt+0x2120>
   13280:	ldr	r3, [sp, #28]
   13284:	ldrb	r2, [r3]
   13288:	cmp	r3, r8
   1328c:	movne	r8, #0
   13290:	moveq	r8, #1
   13294:	cmp	r2, sl
   13298:	moveq	sl, r8
   1329c:	orrne	sl, r8, #1
   132a0:	cmp	sl, #0
   132a4:	bne	132b4 <tcgetattr@plt+0x2120>
   132a8:	uxtb	r2, r0
   132ac:	cmp	r0, r2
   132b0:	beq	1323c <tcgetattr@plt+0x20a8>
   132b4:	mov	r2, #5
   132b8:	ldr	r1, [pc, #520]	; 134c8 <tcgetattr@plt+0x2334>
   132bc:	mov	r0, #0
   132c0:	bl	10f54 <dcgettext@plt>
   132c4:	mov	r5, r0
   132c8:	mov	r0, r4
   132cc:	bl	16028 <tcgetattr@plt+0x4e94>
   132d0:	mov	r3, r0
   132d4:	mov	r2, r5
   132d8:	mov	r1, #0
   132dc:	mov	r0, r1
   132e0:	bl	10ffc <error@plt>
   132e4:	mov	r0, #1
   132e8:	bl	11934 <tcgetattr@plt+0x7a0>
   132ec:	add	r3, r7, r7, lsl #2
   132f0:	ldr	r2, [pc, #304]	; 13428 <tcgetattr@plt+0x2294>
   132f4:	add	r3, r2, r3, lsl #2
   132f8:	ldr	r1, [sp, #88]	; 0x58
   132fc:	ldr	r0, [r3, #480]	; 0x1e0
   13300:	bl	114e0 <tcgetattr@plt+0x34c>
   13304:	cmp	r0, #0
   13308:	beq	133ac <tcgetattr@plt+0x2218>
   1330c:	lsl	r3, r7, #2
   13310:	add	r2, r3, r7
   13314:	ldr	r1, [pc, #268]	; 13428 <tcgetattr@plt+0x2294>
   13318:	add	r2, r1, r2, lsl #2
   1331c:	ldr	r1, [r2, #492]	; 0x1ec
   13320:	ldr	r2, [r0]
   13324:	bic	r2, r2, r1
   13328:	add	r3, r3, r7
   1332c:	ldr	r1, [pc, #244]	; 13428 <tcgetattr@plt+0x2294>
   13330:	add	r3, r1, r3, lsl #2
   13334:	ldr	r3, [r3, #488]	; 0x1e8
   13338:	orr	r3, r2, r3
   1333c:	str	r3, [r0]
   13340:	mov	r3, #1
   13344:	ldr	r2, [sp, #96]	; 0x60
   13348:	strb	r3, [r2]
   1334c:	b	12d74 <tcgetattr@plt+0x1be0>
   13350:	mov	r3, #1
   13354:	ldr	r2, [sp, #96]	; 0x60
   13358:	strb	r3, [r2]
   1335c:	b	12d74 <tcgetattr@plt+0x1be0>
   13360:	ldr	r1, [pc, #356]	; 134cc <tcgetattr@plt+0x2338>
   13364:	mov	r0, r6
   13368:	bl	10edc <strcmp@plt>
   1336c:	cmp	r0, #0
   13370:	beq	13390 <tcgetattr@plt+0x21fc>
   13374:	ldr	r1, [pc, #340]	; 134d0 <tcgetattr@plt+0x233c>
   13378:	mov	r0, r6
   1337c:	bl	10edc <strcmp@plt>
   13380:	cmp	r0, #0
   13384:	bne	1273c <tcgetattr@plt+0x15a8>
   13388:	cmp	r9, #0
   1338c:	beq	133c0 <tcgetattr@plt+0x222c>
   13390:	ldr	r3, [sp, #88]	; 0x58
   13394:	ldr	r3, [r3, #8]
   13398:	bic	r3, r3, #304	; 0x130
   1339c:	orr	r3, r3, #48	; 0x30
   133a0:	ldr	r2, [sp, #88]	; 0x58
   133a4:	str	r3, [r2, #8]
   133a8:	b	13340 <tcgetattr@plt+0x21ac>
   133ac:	ldr	r1, [pc, #280]	; 134cc <tcgetattr@plt+0x2338>
   133b0:	mov	r0, r6
   133b4:	bl	10edc <strcmp@plt>
   133b8:	cmp	r0, #0
   133bc:	bne	13374 <tcgetattr@plt+0x21e0>
   133c0:	ldr	r3, [sp, #88]	; 0x58
   133c4:	ldr	r3, [r3, #8]
   133c8:	bic	r3, r3, #816	; 0x330
   133cc:	orr	r3, r3, #288	; 0x120
   133d0:	ldr	r2, [sp, #88]	; 0x58
   133d4:	str	r3, [r2, #8]
   133d8:	b	13340 <tcgetattr@plt+0x21ac>
   133dc:	mov	r3, #1
   133e0:	ldr	r2, [sp, #96]	; 0x60
   133e4:	strb	r3, [r2]
   133e8:	mov	r2, #5
   133ec:	ldr	r1, [pc, #212]	; 134c8 <tcgetattr@plt+0x2334>
   133f0:	mov	r0, #0
   133f4:	bl	10f54 <dcgettext@plt>
   133f8:	mov	r5, r0
   133fc:	sub	r0, r4, #1
   13400:	bl	16028 <tcgetattr@plt+0x4e94>
   13404:	mov	r3, r0
   13408:	mov	r2, r5
   1340c:	mov	r1, #0
   13410:	mov	r0, r1
   13414:	bl	10ffc <error@plt>
   13418:	mov	r0, #1
   1341c:	bl	11934 <tcgetattr@plt+0x7a0>
   13420:	add	sp, sp, #52	; 0x34
   13424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13428:	andeq	r8, r1, r4, lsr #6
   1342c:	andeq	sl, r1, r4, asr #29
   13430:	andeq	sl, r1, ip, asr #29
   13434:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   13438:	andeq	sl, r1, r4, ror #29
   1343c:	andeq	fp, r1, ip, lsr #10
   13440:	andeq	sl, r1, ip, ror #29
   13444:	strdeq	sl, [r1], -r0
   13448:	andeq	sl, r1, ip, lsl #30
   1344c:	andeq	r8, r1, ip, ror #25
   13450:	andeq	r0, r0, ip, asr #17
   13454:	strdeq	sl, [r1], -r8
   13458:	andeq	sl, r1, r4, lsl #30
   1345c:	ldrdeq	r0, [r0], -r2
   13460:	andeq	sl, r1, r4, lsl pc
   13464:	andeq	sl, r1, ip, lsl pc
   13468:	andeq	sl, r1, r4, lsr #30
   1346c:	andeq	sl, r1, r8, lsr #30
   13470:	andeq	sl, r1, r0, lsr pc
   13474:	andeq	sl, r1, r8, lsr pc
   13478:	andeq	sl, r1, r0, asr #30
   1347c:	andeq	sl, r1, r8, asr #30
   13480:	andeq	sl, r1, r0, asr pc
   13484:	andeq	sl, r1, r4, asr pc
   13488:	andeq	sl, r1, r4, lsl #31
   1348c:	andeq	sl, r1, r8, lsl #31
   13490:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13494:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   13498:	andeq	sl, r1, ip, ror #30
   1349c:	ldrdeq	sl, [r1], -r4
   134a0:	andeq	ip, r2, r0, lsl r1
   134a4:	andeq	sl, r1, r4, lsr #31
   134a8:	andeq	sl, r1, ip, lsr #31
   134ac:			; <UNDEFINED> instruction: 0x0001afb4
   134b0:			; <UNDEFINED> instruction: 0x0001afbc
   134b4:	andeq	sl, r1, r4, asr #31
   134b8:	andeq	ip, r2, r8, lsl #3
   134bc:	andeq	sl, r1, ip, asr #31
   134c0:	ldrdeq	sl, [r1], -r4
   134c4:	strdeq	sl, [r1], -r0
   134c8:	andeq	sl, r1, r8, asr pc
   134cc:	strdeq	sl, [r1], -r8
   134d0:	ldrdeq	sl, [r1], -ip
   134d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134d8:	sub	sp, sp, #44	; 0x2c
   134dc:	mov	r9, r0
   134e0:	mov	r8, r1
   134e4:	ldr	r0, [r1]
   134e8:	bl	144d8 <tcgetattr@plt+0x3344>
   134ec:	ldr	r1, [pc, #2824]	; 13ffc <tcgetattr@plt+0x2e68>
   134f0:	mov	r0, #6
   134f4:	bl	11134 <setlocale@plt>
   134f8:	ldr	r4, [pc, #2816]	; 14000 <tcgetattr@plt+0x2e6c>
   134fc:	ldr	r1, [pc, #2816]	; 14004 <tcgetattr@plt+0x2e70>
   13500:	mov	r0, r4
   13504:	bl	11158 <bindtextdomain@plt>
   13508:	mov	r0, r4
   1350c:	bl	10f84 <textdomain@plt>
   13510:	ldr	r0, [pc, #2800]	; 14008 <tcgetattr@plt+0x2e74>
   13514:	bl	18300 <tcgetattr@plt+0x716c>
   13518:	mov	r3, #0
   1351c:	ldr	r2, [pc, #2792]	; 1400c <tcgetattr@plt+0x2e78>
   13520:	str	r3, [r2]
   13524:	mov	fp, r3
   13528:	mov	sl, #1
   1352c:	str	r3, [sp, #24]
   13530:	str	r3, [sp, #28]
   13534:	mov	r4, sl
   13538:	mov	r6, r3
   1353c:	str	r3, [sp, #20]
   13540:	ldr	r5, [pc, #2760]	; 14010 <tcgetattr@plt+0x2e7c>
   13544:	ldr	r7, [pc, #2760]	; 14014 <tcgetattr@plt+0x2e80>
   13548:	b	13598 <tcgetattr@plt+0x2404>
   1354c:	cmp	r0, #97	; 0x61
   13550:	beq	1360c <tcgetattr@plt+0x2478>
   13554:	cmp	r0, #103	; 0x67
   13558:	bne	13650 <tcgetattr@plt+0x24bc>
   1355c:	mov	r3, #1
   13560:	str	r3, [sp, #24]
   13564:	mov	r3, #2
   13568:	str	r3, [sp, #20]
   1356c:	ldr	r3, [r5]
   13570:	cmp	r4, r3
   13574:	addlt	r3, r6, r4
   13578:	addlt	r3, r8, r3, lsl #2
   1357c:	movlt	r1, #0
   13580:	bge	13598 <tcgetattr@plt+0x2404>
   13584:	add	r4, r4, #1
   13588:	str	r1, [r3], #4
   1358c:	ldr	r2, [r5]
   13590:	cmp	r2, r4
   13594:	bgt	13584 <tcgetattr@plt+0x23f0>
   13598:	mov	r3, #0
   1359c:	str	r3, [sp]
   135a0:	ldr	r3, [pc, #2672]	; 14018 <tcgetattr@plt+0x2e84>
   135a4:	ldr	r2, [pc, #2672]	; 1401c <tcgetattr@plt+0x2e88>
   135a8:	add	r1, r8, r6, lsl #2
   135ac:	sub	r0, r9, r6
   135b0:	bl	11050 <getopt_long@plt>
   135b4:	cmn	r0, #1
   135b8:	beq	13690 <tcgetattr@plt+0x24fc>
   135bc:	cmp	r0, #70	; 0x46
   135c0:	beq	135e0 <tcgetattr@plt+0x244c>
   135c4:	bgt	1354c <tcgetattr@plt+0x23b8>
   135c8:	cmn	r0, #3
   135cc:	beq	1361c <tcgetattr@plt+0x2488>
   135d0:	cmn	r0, #2
   135d4:	bne	13650 <tcgetattr@plt+0x24bc>
   135d8:	mov	r0, #0
   135dc:	bl	11934 <tcgetattr@plt+0x7a0>
   135e0:	cmp	fp, #0
   135e4:	ldreq	fp, [r7]
   135e8:	beq	1356c <tcgetattr@plt+0x23d8>
   135ec:	mov	r2, #5
   135f0:	ldr	r1, [pc, #2600]	; 14020 <tcgetattr@plt+0x2e8c>
   135f4:	mov	r0, #0
   135f8:	bl	10f54 <dcgettext@plt>
   135fc:	mov	r2, r0
   13600:	mov	r1, #0
   13604:	mov	r0, #1
   13608:	bl	10ffc <error@plt>
   1360c:	mov	r3, #1
   13610:	str	r3, [sp, #28]
   13614:	str	r3, [sp, #20]
   13618:	b	1356c <tcgetattr@plt+0x23d8>
   1361c:	mov	r4, #0
   13620:	str	r4, [sp, #4]
   13624:	ldr	r3, [pc, #2552]	; 14024 <tcgetattr@plt+0x2e90>
   13628:	str	r3, [sp]
   1362c:	ldr	r3, [pc, #2548]	; 14028 <tcgetattr@plt+0x2e94>
   13630:	ldr	r3, [r3]
   13634:	ldr	r2, [pc, #2544]	; 1402c <tcgetattr@plt+0x2e98>
   13638:	ldr	r1, [pc, #2544]	; 14030 <tcgetattr@plt+0x2e9c>
   1363c:	ldr	r0, [pc, #2544]	; 14034 <tcgetattr@plt+0x2ea0>
   13640:	ldr	r0, [r0]
   13644:	bl	164f4 <tcgetattr@plt+0x5360>
   13648:	mov	r0, r4
   1364c:	bl	11068 <exit@plt>
   13650:	add	r6, r6, r4
   13654:	ldr	r4, [r8, r6, lsl #2]
   13658:	ldr	r1, [pc, #2520]	; 14038 <tcgetattr@plt+0x2ea4>
   1365c:	mov	r0, r4
   13660:	bl	10edc <strcmp@plt>
   13664:	cmp	r0, #0
   13668:	beq	13680 <tcgetattr@plt+0x24ec>
   1366c:	ldr	r1, [pc, #2504]	; 1403c <tcgetattr@plt+0x2ea8>
   13670:	mov	r0, r4
   13674:	bl	10edc <strcmp@plt>
   13678:	cmp	r0, #0
   1367c:	movne	sl, #0
   13680:	mov	r3, #0
   13684:	str	r3, [r5]
   13688:	mov	r4, #1
   1368c:	b	13598 <tcgetattr@plt+0x2404>
   13690:	ldr	r3, [sp, #28]
   13694:	ldr	r2, [sp, #24]
   13698:	ands	r7, r3, r2
   1369c:	bne	13798 <tcgetattr@plt+0x2604>
   136a0:	cmp	sl, #0
   136a4:	bne	136b8 <tcgetattr@plt+0x2524>
   136a8:	ldr	r3, [sp, #28]
   136ac:	ldr	r2, [sp, #24]
   136b0:	orrs	r3, r3, r2
   136b4:	bne	137b8 <tcgetattr@plt+0x2624>
   136b8:	cmp	fp, #0
   136bc:	beq	137d8 <tcgetattr@plt+0x2644>
   136c0:	ldr	r3, [sp, #24]
   136c4:	orr	r3, r3, sl
   136c8:	ldr	r2, [sp, #28]
   136cc:	orr	r3, r2, r3
   136d0:	tst	r3, #255	; 0xff
   136d4:	beq	13f9c <tcgetattr@plt+0x2e08>
   136d8:	mov	r3, #0
   136dc:	mov	r2, #2048	; 0x800
   136e0:	mov	r1, fp
   136e4:	mov	r0, r3
   136e8:	bl	1441c <tcgetattr@plt+0x3288>
   136ec:	cmp	r0, #0
   136f0:	blt	138d0 <tcgetattr@plt+0x273c>
   136f4:	mov	r1, #3
   136f8:	mov	r0, #0
   136fc:	bl	141c4 <tcgetattr@plt+0x3030>
   13700:	cmn	r0, #1
   13704:	beq	138fc <tcgetattr@plt+0x2768>
   13708:	bic	r2, r0, #2048	; 0x800
   1370c:	mov	r1, #4
   13710:	mov	r0, #0
   13714:	bl	141c4 <tcgetattr@plt+0x3030>
   13718:	cmp	r0, #0
   1371c:	blt	138fc <tcgetattr@plt+0x2768>
   13720:	ldr	r1, [pc, #2328]	; 14040 <tcgetattr@plt+0x2eac>
   13724:	mov	r0, #0
   13728:	bl	11194 <tcgetattr@plt>
   1372c:	cmp	r0, #0
   13730:	bne	1393c <tcgetattr@plt+0x27a8>
   13734:	ldr	r3, [sp, #24]
   13738:	orr	r3, r3, sl
   1373c:	ldr	r2, [sp, #28]
   13740:	orr	r3, r2, r3
   13744:	tst	r3, #255	; 0xff
   13748:	bne	13818 <tcgetattr@plt+0x2684>
   1374c:	mov	r0, #0
   13750:	strb	r0, [sp, #38]	; 0x26
   13754:	add	r3, sp, #40	; 0x28
   13758:	strb	r0, [r3, #-1]!
   1375c:	str	r3, [sp, #8]
   13760:	add	r3, sp, #38	; 0x26
   13764:	str	r3, [sp, #4]
   13768:	ldr	r3, [pc, #2256]	; 14040 <tcgetattr@plt+0x2eac>
   1376c:	str	r3, [sp]
   13770:	mov	r3, r9
   13774:	mov	r2, r8
   13778:	mov	r1, fp
   1377c:	bl	125a8 <tcgetattr@plt+0x1414>
   13780:	ldrb	r3, [sp, #39]	; 0x27
   13784:	cmp	r3, #0
   13788:	bne	13e84 <tcgetattr@plt+0x2cf0>
   1378c:	mov	r0, #0
   13790:	add	sp, sp, #44	; 0x2c
   13794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13798:	mov	r2, #5
   1379c:	ldr	r1, [pc, #2208]	; 14044 <tcgetattr@plt+0x2eb0>
   137a0:	mov	r0, #0
   137a4:	bl	10f54 <dcgettext@plt>
   137a8:	mov	r2, r0
   137ac:	mov	r1, #0
   137b0:	mov	r0, #1
   137b4:	bl	10ffc <error@plt>
   137b8:	mov	r2, #5
   137bc:	ldr	r1, [pc, #2180]	; 14048 <tcgetattr@plt+0x2eb4>
   137c0:	mov	r0, #0
   137c4:	bl	10f54 <dcgettext@plt>
   137c8:	mov	r2, r0
   137cc:	mov	r1, #0
   137d0:	mov	r0, #1
   137d4:	bl	10ffc <error@plt>
   137d8:	mov	r2, #5
   137dc:	ldr	r1, [pc, #2152]	; 1404c <tcgetattr@plt+0x2eb8>
   137e0:	mov	r0, #0
   137e4:	bl	10f54 <dcgettext@plt>
   137e8:	mov	fp, r0
   137ec:	ldr	r3, [sp, #24]
   137f0:	orr	r3, r3, sl
   137f4:	ldr	r2, [sp, #28]
   137f8:	orr	r3, r2, r3
   137fc:	tst	r3, #255	; 0xff
   13800:	beq	13fcc <tcgetattr@plt+0x2e38>
   13804:	ldr	r1, [pc, #2100]	; 14040 <tcgetattr@plt+0x2eac>
   13808:	mov	r0, #0
   1380c:	bl	11194 <tcgetattr@plt>
   13810:	cmp	r0, #0
   13814:	bne	1393c <tcgetattr@plt+0x27a8>
   13818:	bl	11458 <tcgetattr@plt+0x2c4>
   1381c:	ldr	r3, [pc, #2092]	; 14050 <tcgetattr@plt+0x2ebc>
   13820:	str	r0, [r3, #16]
   13824:	mov	r2, #0
   13828:	str	r2, [r3, #12]
   1382c:	ldr	r3, [sp, #20]
   13830:	cmp	r3, #1
   13834:	beq	13c18 <tcgetattr@plt+0x2a84>
   13838:	bcc	13968 <tcgetattr@plt+0x27d4>
   1383c:	cmp	r3, #2
   13840:	bne	1378c <tcgetattr@plt+0x25f8>
   13844:	ldr	r2, [pc, #2052]	; 14050 <tcgetattr@plt+0x2ebc>
   13848:	ldr	r3, [r2, #32]
   1384c:	str	r3, [sp, #4]
   13850:	ldr	r3, [r2, #28]
   13854:	str	r3, [sp]
   13858:	ldr	r3, [r2, #24]
   1385c:	ldr	r2, [r2, #20]
   13860:	ldr	r1, [pc, #2028]	; 14054 <tcgetattr@plt+0x2ec0>
   13864:	mov	r0, #1
   13868:	bl	110e0 <__printf_chk@plt>
   1386c:	mov	r4, #0
   13870:	ldr	r7, [pc, #1992]	; 14040 <tcgetattr@plt+0x2eac>
   13874:	ldr	r6, [pc, #2012]	; 14058 <tcgetattr@plt+0x2ec4>
   13878:	mov	r5, #1
   1387c:	add	r3, r7, r4
   13880:	ldrb	r2, [r3, #17]
   13884:	mov	r1, r6
   13888:	mov	r0, r5
   1388c:	bl	110e0 <__printf_chk@plt>
   13890:	add	r4, r4, #1
   13894:	cmp	r4, #32
   13898:	bne	1387c <tcgetattr@plt+0x26e8>
   1389c:	ldr	r3, [pc, #1936]	; 14034 <tcgetattr@plt+0x2ea0>
   138a0:	ldr	r0, [r3]
   138a4:	ldr	r3, [r0, #20]
   138a8:	ldr	r2, [r0, #24]
   138ac:	cmp	r3, r2
   138b0:	addcc	r2, r3, #1
   138b4:	strcc	r2, [r0, #20]
   138b8:	movcc	r2, #10
   138bc:	strbcc	r2, [r3]
   138c0:	bcc	1378c <tcgetattr@plt+0x25f8>
   138c4:	mov	r1, #10
   138c8:	bl	11128 <__overflow@plt>
   138cc:	b	1378c <tcgetattr@plt+0x25f8>
   138d0:	bl	110b0 <__errno_location@plt>
   138d4:	ldr	r4, [r0]
   138d8:	mov	r2, fp
   138dc:	mov	r1, #3
   138e0:	mov	r0, #0
   138e4:	bl	15ec0 <tcgetattr@plt+0x4d2c>
   138e8:	mov	r3, r0
   138ec:	ldr	r2, [pc, #1896]	; 1405c <tcgetattr@plt+0x2ec8>
   138f0:	mov	r1, r4
   138f4:	mov	r0, #1
   138f8:	bl	10ffc <error@plt>
   138fc:	bl	110b0 <__errno_location@plt>
   13900:	ldr	r4, [r0]
   13904:	mov	r2, #5
   13908:	ldr	r1, [pc, #1872]	; 14060 <tcgetattr@plt+0x2ecc>
   1390c:	mov	r0, #0
   13910:	bl	10f54 <dcgettext@plt>
   13914:	mov	r5, r0
   13918:	mov	r2, fp
   1391c:	mov	r1, #3
   13920:	mov	r0, #0
   13924:	bl	15ec0 <tcgetattr@plt+0x4d2c>
   13928:	mov	r3, r0
   1392c:	mov	r2, r5
   13930:	mov	r1, r4
   13934:	mov	r0, #1
   13938:	bl	10ffc <error@plt>
   1393c:	bl	110b0 <__errno_location@plt>
   13940:	ldr	r4, [r0]
   13944:	mov	r2, fp
   13948:	mov	r1, #3
   1394c:	mov	r0, #0
   13950:	bl	15ec0 <tcgetattr@plt+0x4d2c>
   13954:	mov	r3, r0
   13958:	ldr	r2, [pc, #1788]	; 1405c <tcgetattr@plt+0x2ec8>
   1395c:	mov	r1, r4
   13960:	mov	r0, #1
   13964:	bl	10ffc <error@plt>
   13968:	ldr	r4, [pc, #1760]	; 14050 <tcgetattr@plt+0x2ebc>
   1396c:	mov	r1, #1
   13970:	add	r0, r4, #20
   13974:	bl	11648 <tcgetattr@plt+0x4b4>
   13978:	ldrb	r1, [r4, #36]	; 0x24
   1397c:	ldr	r0, [pc, #1760]	; 14064 <tcgetattr@plt+0x2ed0>
   13980:	bl	11530 <tcgetattr@plt+0x39c>
   13984:	ldr	r3, [pc, #1704]	; 14034 <tcgetattr@plt+0x2ea0>
   13988:	ldr	r0, [r3]
   1398c:	ldr	r3, [r0, #20]
   13990:	ldr	r2, [r0, #24]
   13994:	cmp	r3, r2
   13998:	addcc	r2, r3, #1
   1399c:	strcc	r2, [r0, #20]
   139a0:	movcc	r2, #10
   139a4:	strbcc	r2, [r3]
   139a8:	bcs	139d4 <tcgetattr@plt+0x2840>
   139ac:	mov	r2, #0
   139b0:	ldr	r3, [pc, #1688]	; 14050 <tcgetattr@plt+0x2ebc>
   139b4:	str	r2, [r3, #12]
   139b8:	ldr	r4, [pc, #1704]	; 14068 <tcgetattr@plt+0x2ed4>
   139bc:	mov	fp, #1
   139c0:	ldr	r9, [pc, #1700]	; 1406c <tcgetattr@plt+0x2ed8>
   139c4:	mov	r8, r3
   139c8:	ldr	sl, [pc, #1696]	; 14070 <tcgetattr@plt+0x2edc>
   139cc:	str	r7, [sp, #20]
   139d0:	b	139e4 <tcgetattr@plt+0x2850>
   139d4:	mov	r1, #10
   139d8:	bl	11128 <__overflow@plt>
   139dc:	b	139ac <tcgetattr@plt+0x2818>
   139e0:	add	r4, r4, #12
   139e4:	ldr	r5, [r4]
   139e8:	mov	r1, r9
   139ec:	mov	r0, r5
   139f0:	bl	10edc <strcmp@plt>
   139f4:	cmp	r0, #0
   139f8:	beq	13a48 <tcgetattr@plt+0x28b4>
   139fc:	ldr	r3, [r4, #8]
   13a00:	add	r3, r8, r3
   13a04:	ldrb	r6, [r3, #37]	; 0x25
   13a08:	ldrb	r3, [r4, #4]
   13a0c:	cmp	r3, r6
   13a10:	beq	139e0 <tcgetattr@plt+0x284c>
   13a14:	mov	r1, sl
   13a18:	mov	r0, r5
   13a1c:	bl	10edc <strcmp@plt>
   13a20:	cmp	r0, #0
   13a24:	beq	139e0 <tcgetattr@plt+0x284c>
   13a28:	mov	r0, r6
   13a2c:	bl	11320 <tcgetattr@plt+0x18c>
   13a30:	mov	r2, r0
   13a34:	mov	r1, r5
   13a38:	ldr	r0, [pc, #1588]	; 14074 <tcgetattr@plt+0x2ee0>
   13a3c:	bl	11530 <tcgetattr@plt+0x39c>
   13a40:	ldr	fp, [sp, #20]
   13a44:	b	139e0 <tcgetattr@plt+0x284c>
   13a48:	ldr	r3, [pc, #1536]	; 14050 <tcgetattr@plt+0x2ebc>
   13a4c:	ldr	r3, [r3, #32]
   13a50:	tst	r3, #2
   13a54:	beq	13a94 <tcgetattr@plt+0x2900>
   13a58:	cmp	fp, #0
   13a5c:	bne	13aa8 <tcgetattr@plt+0x2914>
   13a60:	ldr	r3, [pc, #1484]	; 14034 <tcgetattr@plt+0x2ea0>
   13a64:	ldr	r0, [r3]
   13a68:	ldr	r3, [r0, #20]
   13a6c:	ldr	r2, [r0, #24]
   13a70:	cmp	r3, r2
   13a74:	addcc	r2, r3, #1
   13a78:	strcc	r2, [r0, #20]
   13a7c:	movcc	r2, #10
   13a80:	strbcc	r2, [r3]
   13a84:	bcc	13aa8 <tcgetattr@plt+0x2914>
   13a88:	mov	r1, #10
   13a8c:	bl	11128 <__overflow@plt>
   13a90:	b	13aa8 <tcgetattr@plt+0x2914>
   13a94:	ldr	r3, [pc, #1460]	; 14050 <tcgetattr@plt+0x2ebc>
   13a98:	ldrb	r2, [r3, #42]	; 0x2a
   13a9c:	ldrb	r1, [r3, #43]	; 0x2b
   13aa0:	ldr	r0, [pc, #1488]	; 14078 <tcgetattr@plt+0x2ee4>
   13aa4:	bl	11530 <tcgetattr@plt+0x39c>
   13aa8:	mov	r6, #0
   13aac:	ldr	r3, [pc, #1436]	; 14050 <tcgetattr@plt+0x2ebc>
   13ab0:	str	r6, [r3, #12]
   13ab4:	ldr	r4, [pc, #1472]	; 1407c <tcgetattr@plt+0x2ee8>
   13ab8:	mov	r8, #1
   13abc:	mov	sl, r3
   13ac0:	add	r9, r3, #20
   13ac4:	ldr	fp, [pc, #1384]	; 14034 <tcgetattr@plt+0x2ea0>
   13ac8:	b	13b24 <tcgetattr@plt+0x2990>
   13acc:	mov	r3, #0
   13ad0:	str	r3, [sl, #12]
   13ad4:	ldr	r6, [r5, #4]
   13ad8:	mov	r8, #1
   13adc:	mov	r1, r9
   13ae0:	ldr	r0, [r5, #4]
   13ae4:	bl	114e0 <tcgetattr@plt+0x34c>
   13ae8:	ldr	r3, [r5, #16]
   13aec:	cmp	r3, #0
   13af0:	ldreq	r3, [r5, #12]
   13af4:	cmp	r0, #0
   13af8:	beq	13b84 <tcgetattr@plt+0x29f0>
   13afc:	ldr	r2, [r0]
   13b00:	and	r3, r3, r2
   13b04:	ldr	r2, [r5, #12]
   13b08:	cmp	r3, r2
   13b0c:	beq	13b98 <tcgetattr@plt+0x2a04>
   13b10:	ldrb	r3, [r5, #8]
   13b14:	and	r3, r3, #5
   13b18:	cmp	r3, #5
   13b1c:	beq	13bb8 <tcgetattr@plt+0x2a24>
   13b20:	add	r4, r4, #20
   13b24:	mov	r5, r4
   13b28:	ldr	r3, [r4]
   13b2c:	cmp	r3, #0
   13b30:	beq	13bcc <tcgetattr@plt+0x2a38>
   13b34:	ldrb	r3, [r4, #8]
   13b38:	tst	r3, #8
   13b3c:	bne	13b20 <tcgetattr@plt+0x298c>
   13b40:	ldr	r3, [r5, #4]
   13b44:	cmp	r3, r6
   13b48:	beq	13adc <tcgetattr@plt+0x2948>
   13b4c:	cmp	r8, #0
   13b50:	bne	13ad4 <tcgetattr@plt+0x2940>
   13b54:	ldr	r0, [fp]
   13b58:	ldr	r3, [r0, #20]
   13b5c:	ldr	r2, [r0, #24]
   13b60:	cmp	r3, r2
   13b64:	addcc	r2, r3, #1
   13b68:	strcc	r2, [r0, #20]
   13b6c:	movcc	r2, #10
   13b70:	strbcc	r2, [r3]
   13b74:	bcc	13acc <tcgetattr@plt+0x2938>
   13b78:	mov	r1, #10
   13b7c:	bl	11128 <__overflow@plt>
   13b80:	b	13acc <tcgetattr@plt+0x2938>
   13b84:	ldr	r3, [pc, #1268]	; 14080 <tcgetattr@plt+0x2eec>
   13b88:	ldr	r2, [pc, #1268]	; 14084 <tcgetattr@plt+0x2ef0>
   13b8c:	ldr	r1, [pc, #1268]	; 14088 <tcgetattr@plt+0x2ef4>
   13b90:	ldr	r0, [pc, #1268]	; 1408c <tcgetattr@plt+0x2ef8>
   13b94:	bl	11188 <__assert_fail@plt>
   13b98:	ldrb	r3, [r5, #8]
   13b9c:	tst	r3, #2
   13ba0:	beq	13b20 <tcgetattr@plt+0x298c>
   13ba4:	ldr	r1, [r5]
   13ba8:	ldr	r0, [pc, #1196]	; 1405c <tcgetattr@plt+0x2ec8>
   13bac:	bl	11530 <tcgetattr@plt+0x39c>
   13bb0:	mov	r8, r7
   13bb4:	b	13b20 <tcgetattr@plt+0x298c>
   13bb8:	ldr	r1, [r5]
   13bbc:	ldr	r0, [pc, #1228]	; 14090 <tcgetattr@plt+0x2efc>
   13bc0:	bl	11530 <tcgetattr@plt+0x39c>
   13bc4:	mov	r8, r7
   13bc8:	b	13b20 <tcgetattr@plt+0x298c>
   13bcc:	cmp	r8, #0
   13bd0:	bne	13bfc <tcgetattr@plt+0x2a68>
   13bd4:	ldr	r3, [pc, #1112]	; 14034 <tcgetattr@plt+0x2ea0>
   13bd8:	ldr	r0, [r3]
   13bdc:	ldr	r3, [r0, #20]
   13be0:	ldr	r2, [r0, #24]
   13be4:	cmp	r3, r2
   13be8:	addcc	r2, r3, #1
   13bec:	strcc	r2, [r0, #20]
   13bf0:	movcc	r2, #10
   13bf4:	strbcc	r2, [r3]
   13bf8:	bcs	13c0c <tcgetattr@plt+0x2a78>
   13bfc:	mov	r2, #0
   13c00:	ldr	r3, [pc, #1096]	; 14050 <tcgetattr@plt+0x2ebc>
   13c04:	str	r2, [r3, #12]
   13c08:	b	1378c <tcgetattr@plt+0x25f8>
   13c0c:	mov	r1, #10
   13c10:	bl	11128 <__overflow@plt>
   13c14:	b	13bfc <tcgetattr@plt+0x2a68>
   13c18:	ldr	r4, [pc, #1072]	; 14050 <tcgetattr@plt+0x2ebc>
   13c1c:	mov	r1, #1
   13c20:	add	r0, r4, #20
   13c24:	bl	11648 <tcgetattr@plt+0x4b4>
   13c28:	mov	r1, fp
   13c2c:	mov	r0, #1
   13c30:	bl	11768 <tcgetattr@plt+0x5d4>
   13c34:	ldrb	r1, [r4, #36]	; 0x24
   13c38:	ldr	r0, [pc, #1060]	; 14064 <tcgetattr@plt+0x2ed0>
   13c3c:	bl	11530 <tcgetattr@plt+0x39c>
   13c40:	ldr	r3, [pc, #1004]	; 14034 <tcgetattr@plt+0x2ea0>
   13c44:	ldr	r0, [r3]
   13c48:	ldr	r3, [r0, #20]
   13c4c:	ldr	r2, [r0, #24]
   13c50:	cmp	r3, r2
   13c54:	addcc	r2, r3, #1
   13c58:	strcc	r2, [r0, #20]
   13c5c:	movcc	r2, #10
   13c60:	strbcc	r2, [r3]
   13c64:	bcs	13c8c <tcgetattr@plt+0x2af8>
   13c68:	mov	r4, #0
   13c6c:	ldr	r3, [pc, #988]	; 14050 <tcgetattr@plt+0x2ebc>
   13c70:	str	r4, [r3, #12]
   13c74:	ldr	r6, [pc, #1004]	; 14068 <tcgetattr@plt+0x2ed4>
   13c78:	ldr	r8, [pc, #1004]	; 1406c <tcgetattr@plt+0x2ed8>
   13c7c:	ldr	r7, [pc, #1004]	; 14070 <tcgetattr@plt+0x2edc>
   13c80:	mov	sl, r3
   13c84:	ldr	r9, [pc, #1000]	; 14074 <tcgetattr@plt+0x2ee0>
   13c88:	b	13c9c <tcgetattr@plt+0x2b08>
   13c8c:	mov	r1, #10
   13c90:	bl	11128 <__overflow@plt>
   13c94:	b	13c68 <tcgetattr@plt+0x2ad4>
   13c98:	add	r4, r4, #12
   13c9c:	ldr	r5, [r4, r6]
   13ca0:	mov	r1, r8
   13ca4:	mov	r0, r5
   13ca8:	bl	10edc <strcmp@plt>
   13cac:	cmp	r0, #0
   13cb0:	beq	13cf0 <tcgetattr@plt+0x2b5c>
   13cb4:	mov	r1, r7
   13cb8:	mov	r0, r5
   13cbc:	bl	10edc <strcmp@plt>
   13cc0:	cmp	r0, #0
   13cc4:	beq	13c98 <tcgetattr@plt+0x2b04>
   13cc8:	add	r3, r6, r4
   13ccc:	ldr	r3, [r3, #8]
   13cd0:	add	r3, sl, r3
   13cd4:	ldrb	r0, [r3, #37]	; 0x25
   13cd8:	bl	11320 <tcgetattr@plt+0x18c>
   13cdc:	mov	r2, r0
   13ce0:	mov	r1, r5
   13ce4:	mov	r0, r9
   13ce8:	bl	11530 <tcgetattr@plt+0x39c>
   13cec:	b	13c98 <tcgetattr@plt+0x2b04>
   13cf0:	ldr	r4, [pc, #856]	; 14050 <tcgetattr@plt+0x2ebc>
   13cf4:	ldrb	r2, [r4, #42]	; 0x2a
   13cf8:	ldrb	r1, [r4, #43]	; 0x2b
   13cfc:	ldr	r0, [pc, #912]	; 14094 <tcgetattr@plt+0x2f00>
   13d00:	bl	11530 <tcgetattr@plt+0x39c>
   13d04:	ldr	r3, [r4, #12]
   13d08:	cmp	r3, #0
   13d0c:	beq	13d38 <tcgetattr@plt+0x2ba4>
   13d10:	ldr	r3, [pc, #796]	; 14034 <tcgetattr@plt+0x2ea0>
   13d14:	ldr	r0, [r3]
   13d18:	ldr	r3, [r0, #20]
   13d1c:	ldr	r2, [r0, #24]
   13d20:	cmp	r3, r2
   13d24:	addcc	r2, r3, #1
   13d28:	strcc	r2, [r0, #20]
   13d2c:	movcc	r2, #10
   13d30:	strbcc	r2, [r3]
   13d34:	bcs	13d60 <tcgetattr@plt+0x2bcc>
   13d38:	mov	r6, #0
   13d3c:	ldr	r3, [pc, #780]	; 14050 <tcgetattr@plt+0x2ebc>
   13d40:	str	r6, [r3, #12]
   13d44:	ldr	r4, [pc, #816]	; 1407c <tcgetattr@plt+0x2ee8>
   13d48:	mov	r8, r3
   13d4c:	add	r7, r3, #20
   13d50:	ldr	fp, [pc, #824]	; 14090 <tcgetattr@plt+0x2efc>
   13d54:	ldr	sl, [pc, #728]	; 14034 <tcgetattr@plt+0x2ea0>
   13d58:	mov	r9, r6
   13d5c:	b	13d9c <tcgetattr@plt+0x2c08>
   13d60:	mov	r1, #10
   13d64:	bl	11128 <__overflow@plt>
   13d68:	b	13d38 <tcgetattr@plt+0x2ba4>
   13d6c:	mov	r1, #10
   13d70:	bl	11128 <__overflow@plt>
   13d74:	b	13de8 <tcgetattr@plt+0x2c54>
   13d78:	ldr	r3, [pc, #792]	; 14098 <tcgetattr@plt+0x2f04>
   13d7c:	ldr	r2, [pc, #792]	; 1409c <tcgetattr@plt+0x2f08>
   13d80:	ldr	r1, [pc, #768]	; 14088 <tcgetattr@plt+0x2ef4>
   13d84:	ldr	r0, [pc, #768]	; 1408c <tcgetattr@plt+0x2ef8>
   13d88:	bl	11188 <__assert_fail@plt>
   13d8c:	ldr	r1, [r5]
   13d90:	ldr	r0, [pc, #708]	; 1405c <tcgetattr@plt+0x2ec8>
   13d94:	bl	11530 <tcgetattr@plt+0x39c>
   13d98:	add	r4, r4, #20
   13d9c:	mov	r5, r4
   13da0:	ldr	r3, [r4]
   13da4:	cmp	r3, #0
   13da8:	beq	13e40 <tcgetattr@plt+0x2cac>
   13dac:	ldrb	r3, [r4, #8]
   13db0:	tst	r3, #8
   13db4:	bne	13d98 <tcgetattr@plt+0x2c04>
   13db8:	ldr	r3, [r5, #4]
   13dbc:	cmp	r3, r6
   13dc0:	beq	13df0 <tcgetattr@plt+0x2c5c>
   13dc4:	ldr	r0, [sl]
   13dc8:	ldr	r3, [r0, #20]
   13dcc:	ldr	r2, [r0, #24]
   13dd0:	cmp	r3, r2
   13dd4:	addcc	r2, r3, #1
   13dd8:	strcc	r2, [r0, #20]
   13ddc:	movcc	r2, #10
   13de0:	strbcc	r2, [r3]
   13de4:	bcs	13d6c <tcgetattr@plt+0x2bd8>
   13de8:	str	r9, [r8, #12]
   13dec:	ldr	r6, [r5, #4]
   13df0:	mov	r1, r7
   13df4:	ldr	r0, [r5, #4]
   13df8:	bl	114e0 <tcgetattr@plt+0x34c>
   13dfc:	ldr	r3, [r5, #16]
   13e00:	cmp	r3, #0
   13e04:	ldreq	r3, [r5, #12]
   13e08:	cmp	r0, #0
   13e0c:	beq	13d78 <tcgetattr@plt+0x2be4>
   13e10:	ldr	r2, [r0]
   13e14:	and	r3, r3, r2
   13e18:	ldr	r2, [r5, #12]
   13e1c:	cmp	r3, r2
   13e20:	beq	13d8c <tcgetattr@plt+0x2bf8>
   13e24:	ldrb	r3, [r5, #8]
   13e28:	tst	r3, #4
   13e2c:	beq	13d98 <tcgetattr@plt+0x2c04>
   13e30:	ldr	r1, [r5]
   13e34:	mov	r0, fp
   13e38:	bl	11530 <tcgetattr@plt+0x39c>
   13e3c:	b	13d98 <tcgetattr@plt+0x2c04>
   13e40:	ldr	r3, [pc, #492]	; 14034 <tcgetattr@plt+0x2ea0>
   13e44:	ldr	r0, [r3]
   13e48:	ldr	r3, [r0, #20]
   13e4c:	ldr	r2, [r0, #24]
   13e50:	cmp	r3, r2
   13e54:	addcc	r2, r3, #1
   13e58:	strcc	r2, [r0, #20]
   13e5c:	movcc	r2, #10
   13e60:	strbcc	r2, [r3]
   13e64:	bcs	13e78 <tcgetattr@plt+0x2ce4>
   13e68:	mov	r2, #0
   13e6c:	ldr	r3, [pc, #476]	; 14050 <tcgetattr@plt+0x2ebc>
   13e70:	str	r2, [r3, #12]
   13e74:	b	1378c <tcgetattr@plt+0x25f8>
   13e78:	mov	r1, #10
   13e7c:	bl	11128 <__overflow@plt>
   13e80:	b	13e68 <tcgetattr@plt+0x2cd4>
   13e84:	ldr	r2, [pc, #436]	; 14040 <tcgetattr@plt+0x2eac>
   13e88:	ldr	r3, [pc, #528]	; 140a0 <tcgetattr@plt+0x2f0c>
   13e8c:	ldr	r1, [r3]
   13e90:	mov	r0, #0
   13e94:	bl	10fd8 <tcsetattr@plt>
   13e98:	cmp	r0, #0
   13e9c:	bne	13f44 <tcgetattr@plt+0x2db0>
   13ea0:	ldr	r1, [pc, #508]	; 140a4 <tcgetattr@plt+0x2f10>
   13ea4:	mov	r0, #0
   13ea8:	bl	11194 <tcgetattr@plt>
   13eac:	cmp	r0, #0
   13eb0:	bne	13f70 <tcgetattr@plt+0x2ddc>
   13eb4:	ldr	r0, [pc, #404]	; 14050 <tcgetattr@plt+0x2ebc>
   13eb8:	mov	r2, #60	; 0x3c
   13ebc:	add	r1, r0, #80	; 0x50
   13ec0:	add	r0, r0, #20
   13ec4:	bl	10f3c <memcmp@plt>
   13ec8:	cmp	r0, #0
   13ecc:	beq	1378c <tcgetattr@plt+0x25f8>
   13ed0:	ldr	r2, [pc, #376]	; 14050 <tcgetattr@plt+0x2ebc>
   13ed4:	ldr	r3, [r2, #88]	; 0x58
   13ed8:	bic	r3, r3, #268435456	; 0x10000000
   13edc:	bic	r3, r3, #983040	; 0xf0000
   13ee0:	str	r3, [r2, #88]	; 0x58
   13ee4:	ldrb	r3, [sp, #38]	; 0x26
   13ee8:	cmp	r3, #0
   13eec:	bne	13f0c <tcgetattr@plt+0x2d78>
   13ef0:	mov	r0, r2
   13ef4:	mov	r2, #60	; 0x3c
   13ef8:	add	r1, r0, #80	; 0x50
   13efc:	add	r0, r0, #20
   13f00:	bl	10f3c <memcmp@plt>
   13f04:	cmp	r0, #0
   13f08:	beq	1378c <tcgetattr@plt+0x25f8>
   13f0c:	mov	r2, #5
   13f10:	ldr	r1, [pc, #400]	; 140a8 <tcgetattr@plt+0x2f14>
   13f14:	mov	r0, #0
   13f18:	bl	10f54 <dcgettext@plt>
   13f1c:	mov	r4, r0
   13f20:	mov	r2, fp
   13f24:	mov	r1, #3
   13f28:	mov	r0, #0
   13f2c:	bl	15ec0 <tcgetattr@plt+0x4d2c>
   13f30:	mov	r3, r0
   13f34:	mov	r2, r4
   13f38:	mov	r1, #0
   13f3c:	mov	r0, #1
   13f40:	bl	10ffc <error@plt>
   13f44:	bl	110b0 <__errno_location@plt>
   13f48:	ldr	r4, [r0]
   13f4c:	mov	r2, fp
   13f50:	mov	r1, #3
   13f54:	mov	r0, #0
   13f58:	bl	15ec0 <tcgetattr@plt+0x4d2c>
   13f5c:	mov	r3, r0
   13f60:	ldr	r2, [pc, #244]	; 1405c <tcgetattr@plt+0x2ec8>
   13f64:	mov	r1, r4
   13f68:	mov	r0, #1
   13f6c:	bl	10ffc <error@plt>
   13f70:	bl	110b0 <__errno_location@plt>
   13f74:	ldr	r4, [r0]
   13f78:	mov	r2, fp
   13f7c:	mov	r1, #3
   13f80:	mov	r0, #0
   13f84:	bl	15ec0 <tcgetattr@plt+0x4d2c>
   13f88:	mov	r3, r0
   13f8c:	ldr	r2, [pc, #200]	; 1405c <tcgetattr@plt+0x2ec8>
   13f90:	mov	r1, r4
   13f94:	mov	r0, #1
   13f98:	bl	10ffc <error@plt>
   13f9c:	add	r3, sp, #39	; 0x27
   13fa0:	str	r3, [sp, #8]
   13fa4:	add	r3, sp, #38	; 0x26
   13fa8:	str	r3, [sp, #4]
   13fac:	ldr	r3, [pc, #248]	; 140ac <tcgetattr@plt+0x2f18>
   13fb0:	str	r3, [sp]
   13fb4:	mov	r3, r9
   13fb8:	mov	r2, r8
   13fbc:	mov	r1, fp
   13fc0:	mov	r0, #1
   13fc4:	bl	125a8 <tcgetattr@plt+0x1414>
   13fc8:	b	136d8 <tcgetattr@plt+0x2544>
   13fcc:	add	r3, sp, #39	; 0x27
   13fd0:	str	r3, [sp, #8]
   13fd4:	add	r3, sp, #38	; 0x26
   13fd8:	str	r3, [sp, #4]
   13fdc:	ldr	r3, [pc, #200]	; 140ac <tcgetattr@plt+0x2f18>
   13fe0:	str	r3, [sp]
   13fe4:	mov	r3, r9
   13fe8:	mov	r2, r8
   13fec:	mov	r1, r0
   13ff0:	mov	r0, #1
   13ff4:	bl	125a8 <tcgetattr@plt+0x1414>
   13ff8:	b	13720 <tcgetattr@plt+0x258c>
   13ffc:	andeq	sl, r1, ip, lsl #4
   14000:	andeq	sl, r1, ip, lsl lr
   14004:	andeq	fp, r1, r0
   14008:	ldrdeq	r4, [r1], -r0
   1400c:	andeq	ip, r2, r8, ror r1
   14010:	andeq	ip, r2, r8, ror #2
   14014:	andeq	ip, r2, r0, lsl #3
   14018:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1401c:	andeq	fp, r1, r4, asr r0
   14020:	andeq	fp, r1, r8, lsl r0
   14024:	andeq	fp, r1, ip, lsr r0
   14028:	andeq	ip, r2, r4, lsl r1
   1402c:	andeq	sl, r1, r8, lsl lr
   14030:	andeq	r8, r1, ip, lsr #28
   14034:	andeq	ip, r2, r4, ror r1
   14038:	andeq	fp, r1, ip, asr #32
   1403c:	ldrdeq	sl, [r1], -r4
   14040:	muleq	r2, ip, r1
   14044:	andeq	fp, r1, ip, asr r0
   14048:	andeq	fp, r1, ip, lsr #1
   1404c:	andeq	fp, r1, r4, ror #1
   14050:	andeq	ip, r2, r8, lsl #3
   14054:	andeq	fp, r1, r0, ror r1
   14058:	andeq	fp, r1, r0, lsl #3
   1405c:	andeq	fp, r1, ip, lsr #11
   14060:	strdeq	fp, [r1], -r4
   14064:	andeq	fp, r1, ip, lsl r1
   14068:	andeq	r8, r1, r8, lsl #24
   1406c:	andeq	sl, r1, r4, lsl #31
   14070:	andeq	fp, r1, r8, lsr #2
   14074:	andeq	fp, r1, r0, lsr r1
   14078:	andeq	fp, r1, ip, lsr r1
   1407c:	andeq	r8, r1, r0, lsl #10
   14080:	andeq	r8, r1, r8, asr sp
   14084:	andeq	r0, r0, r1, lsr #15
   14088:	strdeq	sl, [r1], -r8
   1408c:	andeq	sl, r1, r4, lsl #30
   14090:	andeq	fp, r1, r4, asr r1
   14094:	andeq	fp, r1, r8, asr r1
   14098:	andeq	r8, r1, r8, ror #26
   1409c:	strdeq	r0, [r0], -r5
   140a0:	andeq	ip, r2, r0, lsl r1
   140a4:	ldrdeq	ip, [r2], -r8
   140a8:	andeq	fp, r1, r8, lsl #3
   140ac:	andeq	ip, r2, r4, lsl r2
   140b0:	ldr	r3, [pc, #4]	; 140bc <tcgetattr@plt+0x2f28>
   140b4:	str	r0, [r3]
   140b8:	bx	lr
   140bc:	andeq	ip, r2, r0, asr r2
   140c0:	ldr	r3, [pc, #4]	; 140cc <tcgetattr@plt+0x2f38>
   140c4:	strb	r0, [r3, #4]
   140c8:	bx	lr
   140cc:	andeq	ip, r2, r0, asr r2
   140d0:	push	{r4, r5, r6, lr}
   140d4:	sub	sp, sp, #8
   140d8:	ldr	r3, [pc, #200]	; 141a8 <tcgetattr@plt+0x3014>
   140dc:	ldr	r0, [r3]
   140e0:	bl	178d0 <tcgetattr@plt+0x673c>
   140e4:	cmp	r0, #0
   140e8:	beq	1410c <tcgetattr@plt+0x2f78>
   140ec:	ldr	r3, [pc, #184]	; 141ac <tcgetattr@plt+0x3018>
   140f0:	ldrb	r3, [r3, #4]
   140f4:	cmp	r3, #0
   140f8:	beq	14128 <tcgetattr@plt+0x2f94>
   140fc:	bl	110b0 <__errno_location@plt>
   14100:	ldr	r3, [r0]
   14104:	cmp	r3, #32
   14108:	bne	14128 <tcgetattr@plt+0x2f94>
   1410c:	ldr	r3, [pc, #156]	; 141b0 <tcgetattr@plt+0x301c>
   14110:	ldr	r0, [r3]
   14114:	bl	178d0 <tcgetattr@plt+0x673c>
   14118:	cmp	r0, #0
   1411c:	bne	1419c <tcgetattr@plt+0x3008>
   14120:	add	sp, sp, #8
   14124:	pop	{r4, r5, r6, pc}
   14128:	mov	r2, #5
   1412c:	ldr	r1, [pc, #128]	; 141b4 <tcgetattr@plt+0x3020>
   14130:	mov	r0, #0
   14134:	bl	10f54 <dcgettext@plt>
   14138:	mov	r4, r0
   1413c:	ldr	r3, [pc, #104]	; 141ac <tcgetattr@plt+0x3018>
   14140:	ldr	r5, [r3]
   14144:	cmp	r5, #0
   14148:	beq	14180 <tcgetattr@plt+0x2fec>
   1414c:	bl	110b0 <__errno_location@plt>
   14150:	ldr	r6, [r0]
   14154:	mov	r0, r5
   14158:	bl	15ea0 <tcgetattr@plt+0x4d0c>
   1415c:	str	r4, [sp]
   14160:	mov	r3, r0
   14164:	ldr	r2, [pc, #76]	; 141b8 <tcgetattr@plt+0x3024>
   14168:	mov	r1, r6
   1416c:	mov	r0, #0
   14170:	bl	10ffc <error@plt>
   14174:	ldr	r3, [pc, #64]	; 141bc <tcgetattr@plt+0x3028>
   14178:	ldr	r0, [r3]
   1417c:	bl	10f0c <_exit@plt>
   14180:	bl	110b0 <__errno_location@plt>
   14184:	mov	r3, r4
   14188:	ldr	r2, [pc, #48]	; 141c0 <tcgetattr@plt+0x302c>
   1418c:	ldr	r1, [r0]
   14190:	mov	r0, #0
   14194:	bl	10ffc <error@plt>
   14198:	b	14174 <tcgetattr@plt+0x2fe0>
   1419c:	ldr	r3, [pc, #24]	; 141bc <tcgetattr@plt+0x3028>
   141a0:	ldr	r0, [r3]
   141a4:	bl	10f0c <_exit@plt>
   141a8:	andeq	ip, r2, r4, ror r1
   141ac:	andeq	ip, r2, r0, asr r2
   141b0:	andeq	ip, r2, r0, ror r1
   141b4:	muleq	r1, ip, r5
   141b8:	andeq	fp, r1, r8, lsr #11
   141bc:	andeq	ip, r2, r8, lsl r1
   141c0:	andeq	fp, r1, ip, lsr #11
   141c4:	push	{r1, r2, r3}
   141c8:	push	{r4, r5, r6, lr}
   141cc:	sub	sp, sp, #12
   141d0:	mov	r5, r0
   141d4:	ldr	r1, [sp, #28]
   141d8:	add	r3, sp, #32
   141dc:	str	r3, [sp, #4]
   141e0:	cmp	r1, #0
   141e4:	beq	1422c <tcgetattr@plt+0x3098>
   141e8:	ldr	r3, [pc, #540]	; 1440c <tcgetattr@plt+0x3278>
   141ec:	cmp	r1, r3
   141f0:	beq	1425c <tcgetattr@plt+0x30c8>
   141f4:	cmp	r1, #11
   141f8:	beq	143fc <tcgetattr@plt+0x3268>
   141fc:	bgt	14388 <tcgetattr@plt+0x31f4>
   14200:	cmp	r1, #3
   14204:	beq	143fc <tcgetattr@plt+0x3268>
   14208:	ble	14348 <tcgetattr@plt+0x31b4>
   1420c:	cmp	r1, #8
   14210:	beq	14368 <tcgetattr@plt+0x31d4>
   14214:	ble	14360 <tcgetattr@plt+0x31cc>
   14218:	cmp	r1, #9
   1421c:	beq	143fc <tcgetattr@plt+0x3268>
   14220:	cmp	r1, #10
   14224:	bne	143c0 <tcgetattr@plt+0x322c>
   14228:	b	14368 <tcgetattr@plt+0x31d4>
   1422c:	ldr	r3, [sp, #4]
   14230:	add	r2, r3, #4
   14234:	str	r2, [sp, #4]
   14238:	ldr	r2, [r3]
   1423c:	mov	r1, #0
   14240:	bl	1111c <fcntl64@plt>
   14244:	mov	r4, r0
   14248:	mov	r0, r4
   1424c:	add	sp, sp, #12
   14250:	pop	{r4, r5, r6, lr}
   14254:	add	sp, sp, #12
   14258:	bx	lr
   1425c:	ldr	r3, [sp, #4]
   14260:	add	r2, r3, #4
   14264:	str	r2, [sp, #4]
   14268:	ldr	r6, [r3]
   1426c:	ldr	r3, [pc, #412]	; 14410 <tcgetattr@plt+0x327c>
   14270:	ldr	r3, [r3]
   14274:	cmp	r3, #0
   14278:	blt	142d8 <tcgetattr@plt+0x3144>
   1427c:	mov	r2, r6
   14280:	ldr	r1, [pc, #388]	; 1440c <tcgetattr@plt+0x3278>
   14284:	bl	1111c <fcntl64@plt>
   14288:	subs	r4, r0, #0
   1428c:	blt	142a0 <tcgetattr@plt+0x310c>
   14290:	mov	r2, #1
   14294:	ldr	r3, [pc, #372]	; 14410 <tcgetattr@plt+0x327c>
   14298:	str	r2, [r3]
   1429c:	b	14248 <tcgetattr@plt+0x30b4>
   142a0:	bl	110b0 <__errno_location@plt>
   142a4:	ldr	r3, [r0]
   142a8:	cmp	r3, #22
   142ac:	bne	14290 <tcgetattr@plt+0x30fc>
   142b0:	mov	r2, r6
   142b4:	mov	r1, #0
   142b8:	mov	r0, r5
   142bc:	bl	1111c <fcntl64@plt>
   142c0:	subs	r4, r0, #0
   142c4:	blt	14248 <tcgetattr@plt+0x30b4>
   142c8:	mvn	r2, #0
   142cc:	ldr	r3, [pc, #316]	; 14410 <tcgetattr@plt+0x327c>
   142d0:	str	r2, [r3]
   142d4:	b	142fc <tcgetattr@plt+0x3168>
   142d8:	mov	r2, r6
   142dc:	mov	r1, #0
   142e0:	bl	1111c <fcntl64@plt>
   142e4:	subs	r4, r0, #0
   142e8:	blt	14248 <tcgetattr@plt+0x30b4>
   142ec:	ldr	r3, [pc, #284]	; 14410 <tcgetattr@plt+0x327c>
   142f0:	ldr	r3, [r3]
   142f4:	cmn	r3, #1
   142f8:	bne	14248 <tcgetattr@plt+0x30b4>
   142fc:	mov	r1, #1
   14300:	mov	r0, r4
   14304:	bl	1111c <fcntl64@plt>
   14308:	subs	r2, r0, #0
   1430c:	blt	14328 <tcgetattr@plt+0x3194>
   14310:	orr	r2, r2, #1
   14314:	mov	r1, #2
   14318:	mov	r0, r4
   1431c:	bl	1111c <fcntl64@plt>
   14320:	cmn	r0, #1
   14324:	bne	14248 <tcgetattr@plt+0x30b4>
   14328:	bl	110b0 <__errno_location@plt>
   1432c:	mov	r5, r0
   14330:	ldr	r6, [r0]
   14334:	mov	r0, r4
   14338:	bl	1117c <close@plt>
   1433c:	str	r6, [r5]
   14340:	mvn	r4, #0
   14344:	b	14248 <tcgetattr@plt+0x30b4>
   14348:	cmp	r1, #1
   1434c:	beq	143fc <tcgetattr@plt+0x3268>
   14350:	bgt	14368 <tcgetattr@plt+0x31d4>
   14354:	cmp	r1, #0
   14358:	bne	143c0 <tcgetattr@plt+0x322c>
   1435c:	b	14368 <tcgetattr@plt+0x31d4>
   14360:	cmp	r1, #4
   14364:	bne	143c0 <tcgetattr@plt+0x322c>
   14368:	ldr	r3, [sp, #4]
   1436c:	add	r2, r3, #4
   14370:	str	r2, [sp, #4]
   14374:	ldr	r2, [r3]
   14378:	mov	r0, r5
   1437c:	bl	1111c <fcntl64@plt>
   14380:	mov	r4, r0
   14384:	b	14248 <tcgetattr@plt+0x30b4>
   14388:	ldr	r3, [pc, #132]	; 14414 <tcgetattr@plt+0x3280>
   1438c:	cmp	r1, r3
   14390:	bgt	143e0 <tcgetattr@plt+0x324c>
   14394:	sub	r3, r3, #1
   14398:	cmp	r1, r3
   1439c:	bge	14368 <tcgetattr@plt+0x31d4>
   143a0:	sub	r3, r3, #5
   143a4:	cmp	r1, r3
   143a8:	beq	143fc <tcgetattr@plt+0x3268>
   143ac:	add	r3, r3, #1
   143b0:	cmp	r1, r3
   143b4:	beq	14368 <tcgetattr@plt+0x31d4>
   143b8:	cmp	r1, #1024	; 0x400
   143bc:	beq	14368 <tcgetattr@plt+0x31d4>
   143c0:	ldr	r3, [sp, #4]
   143c4:	add	r2, r3, #4
   143c8:	str	r2, [sp, #4]
   143cc:	ldr	r2, [r3]
   143d0:	mov	r0, r5
   143d4:	bl	1111c <fcntl64@plt>
   143d8:	mov	r4, r0
   143dc:	b	14248 <tcgetattr@plt+0x30b4>
   143e0:	ldr	r3, [pc, #48]	; 14418 <tcgetattr@plt+0x3284>
   143e4:	cmp	r1, r3
   143e8:	beq	14368 <tcgetattr@plt+0x31d4>
   143ec:	blt	143fc <tcgetattr@plt+0x3268>
   143f0:	add	r3, r3, #1
   143f4:	cmp	r1, r3
   143f8:	bne	143c0 <tcgetattr@plt+0x322c>
   143fc:	mov	r0, r5
   14400:	bl	1111c <fcntl64@plt>
   14404:	mov	r4, r0
   14408:	b	14248 <tcgetattr@plt+0x30b4>
   1440c:	andeq	r0, r0, r6, lsl #8
   14410:	andeq	ip, r2, r8, asr r2
   14414:	andeq	r0, r0, r7, lsl #8
   14418:	andeq	r0, r0, r9, lsl #8
   1441c:	push	{r4, r5, r6, r7, r8, lr}
   14420:	mov	r5, r0
   14424:	mov	r0, r1
   14428:	mov	r1, r2
   1442c:	mov	r2, r3
   14430:	bl	11008 <open64@plt>
   14434:	mov	r4, r0
   14438:	cmp	r5, r0
   1443c:	movne	r3, #0
   14440:	moveq	r3, #1
   14444:	orrs	r3, r3, r0, lsr #31
   14448:	beq	14454 <tcgetattr@plt+0x32c0>
   1444c:	mov	r0, r4
   14450:	pop	{r4, r5, r6, r7, r8, pc}
   14454:	mov	r1, r5
   14458:	bl	10f6c <dup2@plt>
   1445c:	mov	r6, r0
   14460:	bl	110b0 <__errno_location@plt>
   14464:	mov	r5, r0
   14468:	ldr	r7, [r0]
   1446c:	mov	r0, r4
   14470:	bl	1117c <close@plt>
   14474:	str	r7, [r5]
   14478:	mov	r4, r6
   1447c:	b	1444c <tcgetattr@plt+0x32b8>
   14480:	push	{r4, r5, lr}
   14484:	sub	sp, sp, #12
   14488:	mov	r5, r0
   1448c:	bl	110b0 <__errno_location@plt>
   14490:	mov	r4, r0
   14494:	ldr	r3, [r0]
   14498:	str	r3, [sp]
   1449c:	str	r3, [sp, #4]
   144a0:	mov	r3, #0
   144a4:	str	r3, [r0]
   144a8:	mov	r0, r5
   144ac:	bl	10f00 <free@plt>
   144b0:	ldr	r3, [r4]
   144b4:	cmp	r3, #0
   144b8:	moveq	r3, #4
   144bc:	movne	r3, #0
   144c0:	add	r2, sp, #8
   144c4:	add	r3, r2, r3
   144c8:	ldr	r3, [r3, #-8]
   144cc:	str	r3, [r4]
   144d0:	add	sp, sp, #12
   144d4:	pop	{r4, r5, pc}
   144d8:	push	{r4, r5, r6, lr}
   144dc:	subs	r4, r0, #0
   144e0:	beq	14558 <tcgetattr@plt+0x33c4>
   144e4:	mov	r1, #47	; 0x2f
   144e8:	mov	r0, r4
   144ec:	bl	11140 <strrchr@plt>
   144f0:	cmp	r0, #0
   144f4:	addne	r5, r0, #1
   144f8:	moveq	r5, r4
   144fc:	sub	r3, r5, r4
   14500:	cmp	r3, #6
   14504:	ble	14544 <tcgetattr@plt+0x33b0>
   14508:	mov	r2, #7
   1450c:	ldr	r1, [pc, #96]	; 14574 <tcgetattr@plt+0x33e0>
   14510:	sub	r0, r5, #7
   14514:	bl	11164 <strncmp@plt>
   14518:	cmp	r0, #0
   1451c:	bne	14544 <tcgetattr@plt+0x33b0>
   14520:	mov	r2, #3
   14524:	ldr	r1, [pc, #76]	; 14578 <tcgetattr@plt+0x33e4>
   14528:	mov	r0, r5
   1452c:	bl	11164 <strncmp@plt>
   14530:	cmp	r0, #0
   14534:	addeq	r4, r5, #3
   14538:	ldreq	r3, [pc, #60]	; 1457c <tcgetattr@plt+0x33e8>
   1453c:	streq	r4, [r3]
   14540:	movne	r4, r5
   14544:	ldr	r3, [pc, #52]	; 14580 <tcgetattr@plt+0x33ec>
   14548:	str	r4, [r3]
   1454c:	ldr	r3, [pc, #48]	; 14584 <tcgetattr@plt+0x33f0>
   14550:	str	r4, [r3]
   14554:	pop	{r4, r5, r6, pc}
   14558:	ldr	r3, [pc, #40]	; 14588 <tcgetattr@plt+0x33f4>
   1455c:	ldr	r3, [r3]
   14560:	mov	r2, #55	; 0x37
   14564:	mov	r1, #1
   14568:	ldr	r0, [pc, #28]	; 1458c <tcgetattr@plt+0x33f8>
   1456c:	bl	10fa8 <fwrite@plt>
   14570:	bl	11170 <abort@plt>
   14574:	andeq	fp, r1, r8, ror #11
   14578:	strdeq	fp, [r1], -r0
   1457c:	andeq	ip, r2, r0, ror #2
   14580:	andeq	ip, r2, ip, asr r2
   14584:	andeq	ip, r2, r4, ror #2
   14588:	andeq	ip, r2, r0, ror r1
   1458c:			; <UNDEFINED> instruction: 0x0001b5b0
   14590:	push	{r4, r5, r6, lr}
   14594:	mov	r5, r0
   14598:	mov	r4, r1
   1459c:	mov	r2, #48	; 0x30
   145a0:	mov	r1, #0
   145a4:	bl	110d4 <memset@plt>
   145a8:	cmp	r4, #10
   145ac:	beq	145bc <tcgetattr@plt+0x3428>
   145b0:	str	r4, [r5]
   145b4:	mov	r0, r5
   145b8:	pop	{r4, r5, r6, pc}
   145bc:	bl	11170 <abort@plt>
   145c0:	push	{r4, r5, r6, lr}
   145c4:	mov	r4, r0
   145c8:	mov	r5, r1
   145cc:	mov	r2, #5
   145d0:	mov	r1, r0
   145d4:	mov	r0, #0
   145d8:	bl	10f54 <dcgettext@plt>
   145dc:	cmp	r4, r0
   145e0:	popne	{r4, r5, r6, pc}
   145e4:	bl	17afc <tcgetattr@plt+0x6968>
   145e8:	ldrb	r3, [r0]
   145ec:	bic	r3, r3, #32
   145f0:	cmp	r3, #85	; 0x55
   145f4:	beq	14670 <tcgetattr@plt+0x34dc>
   145f8:	cmp	r3, #71	; 0x47
   145fc:	bne	146cc <tcgetattr@plt+0x3538>
   14600:	ldrb	r3, [r0, #1]
   14604:	bic	r3, r3, #32
   14608:	cmp	r3, #66	; 0x42
   1460c:	bne	146cc <tcgetattr@plt+0x3538>
   14610:	ldrb	r3, [r0, #2]
   14614:	cmp	r3, #49	; 0x31
   14618:	bne	146cc <tcgetattr@plt+0x3538>
   1461c:	ldrb	r3, [r0, #3]
   14620:	cmp	r3, #56	; 0x38
   14624:	bne	146cc <tcgetattr@plt+0x3538>
   14628:	ldrb	r3, [r0, #4]
   1462c:	cmp	r3, #48	; 0x30
   14630:	bne	146cc <tcgetattr@plt+0x3538>
   14634:	ldrb	r3, [r0, #5]
   14638:	cmp	r3, #51	; 0x33
   1463c:	bne	146cc <tcgetattr@plt+0x3538>
   14640:	ldrb	r3, [r0, #6]
   14644:	cmp	r3, #48	; 0x30
   14648:	bne	146cc <tcgetattr@plt+0x3538>
   1464c:	ldrb	r3, [r0, #7]
   14650:	cmp	r3, #0
   14654:	bne	146cc <tcgetattr@plt+0x3538>
   14658:	ldrb	r2, [r4]
   1465c:	ldr	r3, [pc, #124]	; 146e0 <tcgetattr@plt+0x354c>
   14660:	ldr	r0, [pc, #124]	; 146e4 <tcgetattr@plt+0x3550>
   14664:	cmp	r2, #96	; 0x60
   14668:	movne	r0, r3
   1466c:	pop	{r4, r5, r6, pc}
   14670:	ldrb	r3, [r0, #1]
   14674:	bic	r3, r3, #32
   14678:	cmp	r3, #84	; 0x54
   1467c:	bne	146cc <tcgetattr@plt+0x3538>
   14680:	ldrb	r3, [r0, #2]
   14684:	bic	r3, r3, #32
   14688:	cmp	r3, #70	; 0x46
   1468c:	bne	146cc <tcgetattr@plt+0x3538>
   14690:	ldrb	r3, [r0, #3]
   14694:	cmp	r3, #45	; 0x2d
   14698:	bne	146cc <tcgetattr@plt+0x3538>
   1469c:	ldrb	r3, [r0, #4]
   146a0:	cmp	r3, #56	; 0x38
   146a4:	bne	146cc <tcgetattr@plt+0x3538>
   146a8:	ldrb	r3, [r0, #5]
   146ac:	cmp	r3, #0
   146b0:	bne	146cc <tcgetattr@plt+0x3538>
   146b4:	ldrb	r2, [r4]
   146b8:	ldr	r3, [pc, #40]	; 146e8 <tcgetattr@plt+0x3554>
   146bc:	ldr	r0, [pc, #40]	; 146ec <tcgetattr@plt+0x3558>
   146c0:	cmp	r2, #96	; 0x60
   146c4:	movne	r0, r3
   146c8:	pop	{r4, r5, r6, pc}
   146cc:	ldr	r3, [pc, #28]	; 146f0 <tcgetattr@plt+0x355c>
   146d0:	ldr	r0, [pc, #28]	; 146f4 <tcgetattr@plt+0x3560>
   146d4:	cmp	r5, #9
   146d8:	movne	r0, r3
   146dc:	pop	{r4, r5, r6, pc}
   146e0:	andeq	fp, r1, ip, asr #12
   146e4:	andeq	fp, r1, r8, asr r6
   146e8:	andeq	fp, r1, r8, asr #12
   146ec:	andeq	fp, r1, ip, asr r6
   146f0:	andeq	fp, r1, r0, asr r6
   146f4:	andeq	fp, r1, r4, asr r6
   146f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146fc:	sub	sp, sp, #116	; 0x74
   14700:	str	r0, [sp, #36]	; 0x24
   14704:	mov	sl, r1
   14708:	str	r2, [sp, #52]	; 0x34
   1470c:	str	r3, [sp, #28]
   14710:	ldr	r8, [sp, #152]	; 0x98
   14714:	bl	10fcc <__ctype_get_mb_cur_max@plt>
   14718:	str	r0, [sp, #84]	; 0x54
   1471c:	ldr	r3, [sp, #156]	; 0x9c
   14720:	lsr	r3, r3, #1
   14724:	and	r3, r3, #1
   14728:	str	r3, [sp, #32]
   1472c:	mov	r3, #1
   14730:	str	r3, [sp, #40]	; 0x28
   14734:	mov	r3, #0
   14738:	str	r3, [sp, #80]	; 0x50
   1473c:	str	r3, [sp, #44]	; 0x2c
   14740:	str	r3, [sp, #48]	; 0x30
   14744:	str	r3, [sp, #60]	; 0x3c
   14748:	str	r3, [sp, #72]	; 0x48
   1474c:	str	r3, [sp, #76]	; 0x4c
   14750:	mov	r7, sl
   14754:	mov	sl, r8
   14758:	cmp	sl, #10
   1475c:	ldrls	pc, [pc, sl, lsl #2]
   14760:	b	14918 <tcgetattr@plt+0x3784>
   14764:	andeq	r4, r1, r8, asr #15
   14768:	muleq	r1, r8, r7
   1476c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14770:	muleq	r1, r0, r7
   14774:	andeq	r4, r1, r8, lsr #17
   14778:	ldrdeq	r4, [r1], -r8
   1477c:	andeq	r5, r1, r4, asr #16
   14780:	andeq	r4, r1, ip, lsl r9
   14784:	andeq	r4, r1, r4, lsl r8
   14788:	andeq	r4, r1, r4, lsl r8
   1478c:	andeq	r4, r1, r4, lsl r8
   14790:	mov	r3, #1
   14794:	str	r3, [sp, #48]	; 0x30
   14798:	mov	r3, #1
   1479c:	str	r3, [sp, #32]
   147a0:	str	r3, [sp, #60]	; 0x3c
   147a4:	ldr	r3, [pc, #4068]	; 15790 <tcgetattr@plt+0x45fc>
   147a8:	str	r3, [sp, #72]	; 0x48
   147ac:	mov	fp, #0
   147b0:	mov	sl, #2
   147b4:	mov	r6, #0
   147b8:	ldr	r3, [sp, #48]	; 0x30
   147bc:	eor	r3, r3, #1
   147c0:	str	r3, [sp, #68]	; 0x44
   147c4:	b	150ac <tcgetattr@plt+0x3f18>
   147c8:	mov	r3, #0
   147cc:	str	r3, [sp, #32]
   147d0:	mov	fp, r3
   147d4:	b	147b4 <tcgetattr@plt+0x3620>
   147d8:	ldr	r3, [sp, #32]
   147dc:	cmp	r3, #0
   147e0:	bne	14934 <tcgetattr@plt+0x37a0>
   147e4:	cmp	r7, #0
   147e8:	beq	14954 <tcgetattr@plt+0x37c0>
   147ec:	ldr	r3, [sp, #36]	; 0x24
   147f0:	mov	r2, #34	; 0x22
   147f4:	strb	r2, [r3]
   147f8:	mov	r3, #1
   147fc:	str	r3, [sp, #48]	; 0x30
   14800:	str	r3, [sp, #60]	; 0x3c
   14804:	ldr	r3, [pc, #3980]	; 15798 <tcgetattr@plt+0x4604>
   14808:	str	r3, [sp, #72]	; 0x48
   1480c:	mov	fp, #1
   14810:	b	147b4 <tcgetattr@plt+0x3620>
   14814:	cmp	sl, #10
   14818:	beq	1483c <tcgetattr@plt+0x36a8>
   1481c:	mov	r1, sl
   14820:	ldr	r0, [pc, #3948]	; 15794 <tcgetattr@plt+0x4600>
   14824:	bl	145c0 <tcgetattr@plt+0x342c>
   14828:	str	r0, [sp, #164]	; 0xa4
   1482c:	mov	r1, sl
   14830:	ldr	r0, [pc, #3928]	; 15790 <tcgetattr@plt+0x45fc>
   14834:	bl	145c0 <tcgetattr@plt+0x342c>
   14838:	str	r0, [sp, #168]	; 0xa8
   1483c:	ldr	r3, [sp, #32]
   14840:	cmp	r3, #0
   14844:	movne	fp, #0
   14848:	bne	14880 <tcgetattr@plt+0x36ec>
   1484c:	ldr	r3, [sp, #164]	; 0xa4
   14850:	ldrb	r3, [r3]
   14854:	cmp	r3, #0
   14858:	beq	148a0 <tcgetattr@plt+0x370c>
   1485c:	ldr	r2, [sp, #164]	; 0xa4
   14860:	mov	fp, #0
   14864:	ldr	r1, [sp, #36]	; 0x24
   14868:	cmp	r7, fp
   1486c:	strbhi	r3, [r1, fp]
   14870:	add	fp, fp, #1
   14874:	ldrb	r3, [r2, #1]!
   14878:	cmp	r3, #0
   1487c:	bne	14868 <tcgetattr@plt+0x36d4>
   14880:	ldr	r0, [sp, #168]	; 0xa8
   14884:	bl	11080 <strlen@plt>
   14888:	str	r0, [sp, #60]	; 0x3c
   1488c:	ldr	r3, [sp, #168]	; 0xa8
   14890:	str	r3, [sp, #72]	; 0x48
   14894:	mov	r3, #1
   14898:	str	r3, [sp, #48]	; 0x30
   1489c:	b	147b4 <tcgetattr@plt+0x3620>
   148a0:	mov	fp, #0
   148a4:	b	14880 <tcgetattr@plt+0x36ec>
   148a8:	ldr	r3, [sp, #32]
   148ac:	cmp	r3, #0
   148b0:	bne	14970 <tcgetattr@plt+0x37dc>
   148b4:	mov	r3, #1
   148b8:	str	r3, [sp, #48]	; 0x30
   148bc:	cmp	r7, #0
   148c0:	beq	1498c <tcgetattr@plt+0x37f8>
   148c4:	ldr	r3, [sp, #36]	; 0x24
   148c8:	mov	r2, #39	; 0x27
   148cc:	strb	r2, [r3]
   148d0:	mov	r3, #0
   148d4:	str	r3, [sp, #32]
   148d8:	mov	r3, #1
   148dc:	str	r3, [sp, #60]	; 0x3c
   148e0:	ldr	r3, [pc, #3752]	; 15790 <tcgetattr@plt+0x45fc>
   148e4:	str	r3, [sp, #72]	; 0x48
   148e8:	mov	fp, #1
   148ec:	mov	sl, #2
   148f0:	b	147b4 <tcgetattr@plt+0x3620>
   148f4:	ldr	r3, [sp, #32]
   148f8:	cmp	r3, #0
   148fc:	beq	148bc <tcgetattr@plt+0x3728>
   14900:	mov	r3, #1
   14904:	str	r3, [sp, #60]	; 0x3c
   14908:	ldr	r3, [pc, #3712]	; 15790 <tcgetattr@plt+0x45fc>
   1490c:	str	r3, [sp, #72]	; 0x48
   14910:	mov	fp, #0
   14914:	b	147b4 <tcgetattr@plt+0x3620>
   14918:	bl	11170 <abort@plt>
   1491c:	mov	r3, #0
   14920:	str	r3, [sp, #32]
   14924:	mov	r3, #1
   14928:	str	r3, [sp, #48]	; 0x30
   1492c:	mov	fp, #0
   14930:	b	147b4 <tcgetattr@plt+0x3620>
   14934:	ldr	r3, [sp, #32]
   14938:	str	r3, [sp, #48]	; 0x30
   1493c:	mov	r3, #1
   14940:	str	r3, [sp, #60]	; 0x3c
   14944:	ldr	r3, [pc, #3660]	; 15798 <tcgetattr@plt+0x4604>
   14948:	str	r3, [sp, #72]	; 0x48
   1494c:	mov	fp, #0
   14950:	b	147b4 <tcgetattr@plt+0x3620>
   14954:	mov	r3, #1
   14958:	str	r3, [sp, #48]	; 0x30
   1495c:	str	r3, [sp, #60]	; 0x3c
   14960:	ldr	r3, [pc, #3632]	; 15798 <tcgetattr@plt+0x4604>
   14964:	str	r3, [sp, #72]	; 0x48
   14968:	mov	fp, #1
   1496c:	b	147b4 <tcgetattr@plt+0x3620>
   14970:	mov	r3, #1
   14974:	str	r3, [sp, #60]	; 0x3c
   14978:	ldr	r3, [pc, #3600]	; 15790 <tcgetattr@plt+0x45fc>
   1497c:	str	r3, [sp, #72]	; 0x48
   14980:	mov	fp, #0
   14984:	mov	sl, #2
   14988:	b	147b4 <tcgetattr@plt+0x3620>
   1498c:	mov	r3, #0
   14990:	str	r3, [sp, #32]
   14994:	mov	r3, #1
   14998:	str	r3, [sp, #60]	; 0x3c
   1499c:	ldr	r3, [pc, #3564]	; 15790 <tcgetattr@plt+0x45fc>
   149a0:	str	r3, [sp, #72]	; 0x48
   149a4:	mov	fp, #1
   149a8:	mov	sl, #2
   149ac:	b	147b4 <tcgetattr@plt+0x3620>
   149b0:	mov	r3, #0
   149b4:	str	r3, [sp, #56]	; 0x38
   149b8:	ldr	r3, [sp, #52]	; 0x34
   149bc:	add	r2, r3, r6
   149c0:	str	r2, [sp, #64]	; 0x40
   149c4:	ldrb	r4, [r3, r6]
   149c8:	cmp	r4, #126	; 0x7e
   149cc:	ldrls	pc, [pc, r4, lsl #2]
   149d0:	b	1520c <tcgetattr@plt+0x4078>
   149d4:	andeq	r4, r1, ip, ror #23
   149d8:	andeq	r5, r1, ip, lsl #4
   149dc:	andeq	r5, r1, ip, lsl #4
   149e0:	andeq	r5, r1, ip, lsl #4
   149e4:	andeq	r5, r1, ip, lsl #4
   149e8:	andeq	r5, r1, ip, lsl #4
   149ec:	andeq	r5, r1, ip, lsl #4
   149f0:	andeq	r4, r1, r8, asr #30
   149f4:	andeq	r4, r1, r4, ror #23
   149f8:	andeq	r4, r1, r0, lsl #30
   149fc:	strdeq	r4, [r1], -r8
   14a00:	andeq	r4, r1, r8, ror #28
   14a04:	andeq	r4, r1, r0, ror #28
   14a08:	ldrdeq	r4, [r1], -ip
   14a0c:	andeq	r5, r1, ip, lsl #4
   14a10:	andeq	r5, r1, ip, lsl #4
   14a14:	andeq	r5, r1, ip, lsl #4
   14a18:	andeq	r5, r1, ip, lsl #4
   14a1c:	andeq	r5, r1, ip, lsl #4
   14a20:	andeq	r5, r1, ip, lsl #4
   14a24:	andeq	r5, r1, ip, lsl #4
   14a28:	andeq	r5, r1, ip, lsl #4
   14a2c:	andeq	r5, r1, ip, lsl #4
   14a30:	andeq	r5, r1, ip, lsl #4
   14a34:	andeq	r5, r1, ip, lsl #4
   14a38:	andeq	r5, r1, ip, lsl #4
   14a3c:	andeq	r5, r1, ip, lsl #4
   14a40:	andeq	r5, r1, ip, lsl #4
   14a44:	andeq	r5, r1, ip, lsl #4
   14a48:	andeq	r5, r1, ip, lsl #4
   14a4c:	andeq	r5, r1, ip, lsl #4
   14a50:	andeq	r5, r1, ip, lsl #4
   14a54:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14a58:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14a5c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14a60:	andeq	r4, r1, r0, ror pc
   14a64:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14a68:	andeq	r5, r1, r0, ror #11
   14a6c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14a70:	andeq	r5, r1, r0, ror r1
   14a74:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14a78:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14a7c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14a80:	andeq	r5, r1, r0, ror #11
   14a84:	andeq	r5, r1, r0, ror #11
   14a88:	andeq	r5, r1, r0, ror #11
   14a8c:	andeq	r5, r1, r0, ror #11
   14a90:	andeq	r5, r1, r0, ror #11
   14a94:	andeq	r5, r1, r0, ror #11
   14a98:	andeq	r5, r1, r0, ror #11
   14a9c:	andeq	r5, r1, r0, ror #11
   14aa0:	andeq	r5, r1, r0, ror #11
   14aa4:	andeq	r5, r1, r0, ror #11
   14aa8:	andeq	r5, r1, r0, ror #11
   14aac:	andeq	r5, r1, r0, ror #11
   14ab0:	andeq	r5, r1, r0, ror #11
   14ab4:	andeq	r5, r1, r0, ror #11
   14ab8:	andeq	r5, r1, r0, ror #11
   14abc:	andeq	r5, r1, r0, ror #11
   14ac0:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14ac4:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14ac8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14acc:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14ad0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ad4:	andeq	r5, r1, ip, lsl #4
   14ad8:	andeq	r5, r1, r0, ror #11
   14adc:	andeq	r5, r1, r0, ror #11
   14ae0:	andeq	r5, r1, r0, ror #11
   14ae4:	andeq	r5, r1, r0, ror #11
   14ae8:	andeq	r5, r1, r0, ror #11
   14aec:	andeq	r5, r1, r0, ror #11
   14af0:	andeq	r5, r1, r0, ror #11
   14af4:	andeq	r5, r1, r0, ror #11
   14af8:	andeq	r5, r1, r0, ror #11
   14afc:	andeq	r5, r1, r0, ror #11
   14b00:	andeq	r5, r1, r0, ror #11
   14b04:	andeq	r5, r1, r0, ror #11
   14b08:	andeq	r5, r1, r0, ror #11
   14b0c:	andeq	r5, r1, r0, ror #11
   14b10:	andeq	r5, r1, r0, ror #11
   14b14:	andeq	r5, r1, r0, ror #11
   14b18:	andeq	r5, r1, r0, ror #11
   14b1c:	andeq	r5, r1, r0, ror #11
   14b20:	andeq	r5, r1, r0, ror #11
   14b24:	andeq	r5, r1, r0, ror #11
   14b28:	andeq	r5, r1, r0, ror #11
   14b2c:	andeq	r5, r1, r0, ror #11
   14b30:	andeq	r5, r1, r0, ror #11
   14b34:	andeq	r5, r1, r0, ror #11
   14b38:	andeq	r5, r1, r0, ror #11
   14b3c:	andeq	r5, r1, r0, ror #11
   14b40:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14b44:	andeq	r4, r1, r0, ror lr
   14b48:	andeq	r5, r1, r0, ror #11
   14b4c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14b50:	andeq	r5, r1, r0, ror #11
   14b54:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14b58:	andeq	r5, r1, r0, ror #11
   14b5c:	andeq	r5, r1, r0, ror #11
   14b60:	andeq	r5, r1, r0, ror #11
   14b64:	andeq	r5, r1, r0, ror #11
   14b68:	andeq	r5, r1, r0, ror #11
   14b6c:	andeq	r5, r1, r0, ror #11
   14b70:	andeq	r5, r1, r0, ror #11
   14b74:	andeq	r5, r1, r0, ror #11
   14b78:	andeq	r5, r1, r0, ror #11
   14b7c:	andeq	r5, r1, r0, ror #11
   14b80:	andeq	r5, r1, r0, ror #11
   14b84:	andeq	r5, r1, r0, ror #11
   14b88:	andeq	r5, r1, r0, ror #11
   14b8c:	andeq	r5, r1, r0, ror #11
   14b90:	andeq	r5, r1, r0, ror #11
   14b94:	andeq	r5, r1, r0, ror #11
   14b98:	andeq	r5, r1, r0, ror #11
   14b9c:	andeq	r5, r1, r0, ror #11
   14ba0:	andeq	r5, r1, r0, ror #11
   14ba4:	andeq	r5, r1, r0, ror #11
   14ba8:	andeq	r5, r1, r0, ror #11
   14bac:	andeq	r5, r1, r0, ror #11
   14bb0:	andeq	r5, r1, r0, ror #11
   14bb4:	andeq	r5, r1, r0, ror #11
   14bb8:	andeq	r5, r1, r0, ror #11
   14bbc:	andeq	r5, r1, r0, ror #11
   14bc0:	andeq	r4, r1, r0, asr pc
   14bc4:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14bc8:	andeq	r4, r1, r0, asr pc
   14bcc:	andeq	r4, r1, r0, ror pc
   14bd0:	mov	r3, #0
   14bd4:	str	r3, [sp, #56]	; 0x38
   14bd8:	b	149b8 <tcgetattr@plt+0x3824>
   14bdc:	mov	r3, #114	; 0x72
   14be0:	b	14f04 <tcgetattr@plt+0x3d70>
   14be4:	mov	r3, #98	; 0x62
   14be8:	b	14f1c <tcgetattr@plt+0x3d88>
   14bec:	ldr	r3, [sp, #48]	; 0x30
   14bf0:	cmp	r3, #0
   14bf4:	beq	14cdc <tcgetattr@plt+0x3b48>
   14bf8:	ldr	r3, [sp, #32]
   14bfc:	cmp	r3, #0
   14c00:	bne	15764 <tcgetattr@plt+0x45d0>
   14c04:	ldr	r3, [sp, #44]	; 0x2c
   14c08:	eor	r3, r3, #1
   14c0c:	cmp	sl, #2
   14c10:	movne	r3, #0
   14c14:	andeq	r3, r3, #1
   14c18:	cmp	r3, #0
   14c1c:	moveq	r2, fp
   14c20:	beq	14c64 <tcgetattr@plt+0x3ad0>
   14c24:	cmp	r7, fp
   14c28:	ldrhi	r2, [sp, #36]	; 0x24
   14c2c:	movhi	r1, #39	; 0x27
   14c30:	strbhi	r1, [r2, fp]
   14c34:	add	r2, fp, #1
   14c38:	cmp	r7, r2
   14c3c:	ldrhi	r1, [sp, #36]	; 0x24
   14c40:	movhi	r0, #36	; 0x24
   14c44:	strbhi	r0, [r1, r2]
   14c48:	add	r2, fp, #2
   14c4c:	cmp	r7, r2
   14c50:	ldrhi	r1, [sp, #36]	; 0x24
   14c54:	movhi	r0, #39	; 0x27
   14c58:	strbhi	r0, [r1, r2]
   14c5c:	add	r2, fp, #3
   14c60:	str	r3, [sp, #44]	; 0x2c
   14c64:	cmp	r7, r2
   14c68:	ldrhi	r3, [sp, #36]	; 0x24
   14c6c:	movhi	r1, #92	; 0x5c
   14c70:	strbhi	r1, [r3, r2]
   14c74:	add	fp, r2, #1
   14c78:	cmp	r5, #0
   14c7c:	beq	155e8 <tcgetattr@plt+0x4454>
   14c80:	add	r3, r6, #1
   14c84:	ldr	r1, [sp, #28]
   14c88:	cmp	r1, r3
   14c8c:	bls	155f8 <tcgetattr@plt+0x4464>
   14c90:	ldr	r1, [sp, #52]	; 0x34
   14c94:	ldrb	r3, [r1, r3]
   14c98:	sub	r3, r3, #48	; 0x30
   14c9c:	uxtb	r3, r3
   14ca0:	cmp	r3, #9
   14ca4:	bhi	15604 <tcgetattr@plt+0x4470>
   14ca8:	cmp	r7, fp
   14cac:	movhi	r3, #48	; 0x30
   14cb0:	ldrhi	r1, [sp, #36]	; 0x24
   14cb4:	strbhi	r3, [r1, fp]
   14cb8:	add	r3, r2, #2
   14cbc:	cmp	r7, r3
   14cc0:	movhi	r1, #48	; 0x30
   14cc4:	ldrhi	r0, [sp, #36]	; 0x24
   14cc8:	strbhi	r1, [r0, r3]
   14ccc:	add	fp, r2, #3
   14cd0:	ldr	r8, [sp, #32]
   14cd4:	mov	r4, #48	; 0x30
   14cd8:	b	14fb4 <tcgetattr@plt+0x3e20>
   14cdc:	ldr	r3, [sp, #156]	; 0x9c
   14ce0:	tst	r3, #1
   14ce4:	bne	150a8 <tcgetattr@plt+0x3f14>
   14ce8:	ldr	r5, [sp, #48]	; 0x30
   14cec:	mov	r8, r5
   14cf0:	b	14fb4 <tcgetattr@plt+0x3e20>
   14cf4:	cmp	sl, #2
   14cf8:	beq	14d10 <tcgetattr@plt+0x3b7c>
   14cfc:	cmp	sl, #5
   14d00:	beq	14d28 <tcgetattr@plt+0x3b94>
   14d04:	mov	r8, #0
   14d08:	mov	r5, r8
   14d0c:	b	14fb4 <tcgetattr@plt+0x3e20>
   14d10:	ldr	r3, [sp, #32]
   14d14:	cmp	r3, #0
   14d18:	bne	15778 <tcgetattr@plt+0x45e4>
   14d1c:	mov	r8, r3
   14d20:	mov	r5, r3
   14d24:	b	14fb4 <tcgetattr@plt+0x3e20>
   14d28:	ldr	r3, [sp, #156]	; 0x9c
   14d2c:	tst	r3, #4
   14d30:	beq	15610 <tcgetattr@plt+0x447c>
   14d34:	add	r3, r6, #2
   14d38:	ldr	r2, [sp, #28]
   14d3c:	cmp	r2, r3
   14d40:	bls	1561c <tcgetattr@plt+0x4488>
   14d44:	ldr	r2, [sp, #52]	; 0x34
   14d48:	add	r2, r2, r6
   14d4c:	ldrb	r2, [r2, #1]
   14d50:	cmp	r2, #63	; 0x3f
   14d54:	movne	r8, #0
   14d58:	movne	r5, r8
   14d5c:	bne	14fb4 <tcgetattr@plt+0x3e20>
   14d60:	ldr	r2, [sp, #52]	; 0x34
   14d64:	ldrb	r2, [r2, r3]
   14d68:	sub	r1, r2, #33	; 0x21
   14d6c:	cmp	r1, #29
   14d70:	ldrls	pc, [pc, r1, lsl #2]
   14d74:	b	15628 <tcgetattr@plt+0x4494>
   14d78:	strdeq	r4, [r1], -r0
   14d7c:	andeq	r5, r1, r8, lsr #12
   14d80:	andeq	r5, r1, r8, lsr #12
   14d84:	andeq	r5, r1, r8, lsr #12
   14d88:	andeq	r5, r1, r8, lsr #12
   14d8c:	andeq	r5, r1, r8, lsr #12
   14d90:	strdeq	r4, [r1], -r0
   14d94:	strdeq	r4, [r1], -r0
   14d98:	strdeq	r4, [r1], -r0
   14d9c:	andeq	r5, r1, r8, lsr #12
   14da0:	andeq	r5, r1, r8, lsr #12
   14da4:	andeq	r5, r1, r8, lsr #12
   14da8:	strdeq	r4, [r1], -r0
   14dac:	andeq	r5, r1, r8, lsr #12
   14db0:	strdeq	r4, [r1], -r0
   14db4:	andeq	r5, r1, r8, lsr #12
   14db8:	andeq	r5, r1, r8, lsr #12
   14dbc:	andeq	r5, r1, r8, lsr #12
   14dc0:	andeq	r5, r1, r8, lsr #12
   14dc4:	andeq	r5, r1, r8, lsr #12
   14dc8:	andeq	r5, r1, r8, lsr #12
   14dcc:	andeq	r5, r1, r8, lsr #12
   14dd0:	andeq	r5, r1, r8, lsr #12
   14dd4:	andeq	r5, r1, r8, lsr #12
   14dd8:	andeq	r5, r1, r8, lsr #12
   14ddc:	andeq	r5, r1, r8, lsr #12
   14de0:	andeq	r5, r1, r8, lsr #12
   14de4:	strdeq	r4, [r1], -r0
   14de8:	strdeq	r4, [r1], -r0
   14dec:	strdeq	r4, [r1], -r0
   14df0:	ldr	r1, [sp, #32]
   14df4:	cmp	r1, #0
   14df8:	bne	15838 <tcgetattr@plt+0x46a4>
   14dfc:	cmp	r7, fp
   14e00:	movhi	r1, #63	; 0x3f
   14e04:	ldrhi	r0, [sp, #36]	; 0x24
   14e08:	strbhi	r1, [r0, fp]
   14e0c:	add	r1, fp, #1
   14e10:	cmp	r7, r1
   14e14:	ldrhi	r0, [sp, #36]	; 0x24
   14e18:	movhi	ip, #34	; 0x22
   14e1c:	strbhi	ip, [r0, r1]
   14e20:	add	r1, fp, #2
   14e24:	cmp	r7, r1
   14e28:	ldrhi	r0, [sp, #36]	; 0x24
   14e2c:	movhi	ip, #34	; 0x22
   14e30:	strbhi	ip, [r0, r1]
   14e34:	add	r1, fp, #3
   14e38:	cmp	r7, r1
   14e3c:	movhi	r0, #63	; 0x3f
   14e40:	ldrhi	ip, [sp, #36]	; 0x24
   14e44:	strbhi	r0, [ip, r1]
   14e48:	add	fp, fp, #4
   14e4c:	ldr	r5, [sp, #32]
   14e50:	mov	r8, r5
   14e54:	mov	r4, r2
   14e58:	mov	r6, r3
   14e5c:	b	14fb4 <tcgetattr@plt+0x3e20>
   14e60:	mov	r3, #102	; 0x66
   14e64:	b	14f1c <tcgetattr@plt+0x3d88>
   14e68:	mov	r3, #118	; 0x76
   14e6c:	b	14f1c <tcgetattr@plt+0x3d88>
   14e70:	cmp	sl, #2
   14e74:	beq	14ee0 <tcgetattr@plt+0x3d4c>
   14e78:	ldr	r3, [sp, #48]	; 0x30
   14e7c:	ldr	r2, [sp, #32]
   14e80:	and	r3, r3, r2
   14e84:	tst	r9, r3
   14e88:	moveq	r3, r4
   14e8c:	beq	14f1c <tcgetattr@plt+0x3d88>
   14e90:	mov	r8, #0
   14e94:	mov	r5, r8
   14e98:	eor	r5, r5, #1
   14e9c:	ldr	r3, [sp, #44]	; 0x2c
   14ea0:	and	r5, r5, r3
   14ea4:	tst	r5, #255	; 0xff
   14ea8:	beq	15088 <tcgetattr@plt+0x3ef4>
   14eac:	cmp	r7, fp
   14eb0:	ldrhi	r3, [sp, #36]	; 0x24
   14eb4:	movhi	r2, #39	; 0x27
   14eb8:	strbhi	r2, [r3, fp]
   14ebc:	add	r3, fp, #1
   14ec0:	cmp	r7, r3
   14ec4:	ldrhi	r2, [sp, #36]	; 0x24
   14ec8:	movhi	r1, #39	; 0x27
   14ecc:	strbhi	r1, [r2, r3]
   14ed0:	add	fp, fp, #2
   14ed4:	mov	r3, #0
   14ed8:	str	r3, [sp, #44]	; 0x2c
   14edc:	b	15088 <tcgetattr@plt+0x3ef4>
   14ee0:	ldr	r3, [sp, #32]
   14ee4:	cmp	r3, #0
   14ee8:	bne	15784 <tcgetattr@plt+0x45f0>
   14eec:	mov	r8, r3
   14ef0:	mov	r5, r3
   14ef4:	b	14e98 <tcgetattr@plt+0x3d04>
   14ef8:	mov	r3, #110	; 0x6e
   14efc:	b	14f04 <tcgetattr@plt+0x3d70>
   14f00:	mov	r3, #116	; 0x74
   14f04:	ldr	r2, [sp, #32]
   14f08:	cmp	sl, #2
   14f0c:	movne	r2, #0
   14f10:	andeq	r2, r2, #1
   14f14:	cmp	r2, #0
   14f18:	bne	14f3c <tcgetattr@plt+0x3da8>
   14f1c:	ldr	r2, [sp, #48]	; 0x30
   14f20:	cmp	r2, #0
   14f24:	moveq	r8, r2
   14f28:	moveq	r5, r2
   14f2c:	beq	14fb4 <tcgetattr@plt+0x3e20>
   14f30:	mov	r4, r3
   14f34:	mov	r8, #0
   14f38:	b	1500c <tcgetattr@plt+0x3e78>
   14f3c:	mov	r8, sl
   14f40:	mov	sl, r7
   14f44:	b	157b0 <tcgetattr@plt+0x461c>
   14f48:	mov	r3, #97	; 0x61
   14f4c:	b	14f1c <tcgetattr@plt+0x3d88>
   14f50:	ldr	r3, [sp, #28]
   14f54:	cmn	r3, #1
   14f58:	beq	14f84 <tcgetattr@plt+0x3df0>
   14f5c:	ldr	r3, [sp, #28]
   14f60:	subs	r3, r3, #1
   14f64:	movne	r3, #1
   14f68:	cmp	r3, #0
   14f6c:	bne	15634 <tcgetattr@plt+0x44a0>
   14f70:	cmp	r6, #0
   14f74:	beq	14f9c <tcgetattr@plt+0x3e08>
   14f78:	mov	r8, #0
   14f7c:	mov	r5, r8
   14f80:	b	14fb4 <tcgetattr@plt+0x3e20>
   14f84:	ldr	r3, [sp, #52]	; 0x34
   14f88:	ldrb	r3, [r3, #1]
   14f8c:	adds	r3, r3, #0
   14f90:	movne	r3, #1
   14f94:	b	14f68 <tcgetattr@plt+0x3dd4>
   14f98:	mov	r8, #0
   14f9c:	ldr	r5, [sp, #32]
   14fa0:	cmp	sl, #2
   14fa4:	movne	r5, #0
   14fa8:	andeq	r5, r5, #1
   14fac:	cmp	r5, #0
   14fb0:	bne	15164 <tcgetattr@plt+0x3fd0>
   14fb4:	ldr	r3, [sp, #68]	; 0x44
   14fb8:	cmp	sl, #2
   14fbc:	orreq	r3, r3, #1
   14fc0:	eor	r3, r3, #1
   14fc4:	ldr	r2, [sp, #32]
   14fc8:	orr	r3, r2, r3
   14fcc:	tst	r3, #255	; 0xff
   14fd0:	beq	15000 <tcgetattr@plt+0x3e6c>
   14fd4:	ldr	r3, [sp, #160]	; 0xa0
   14fd8:	cmp	r3, #0
   14fdc:	beq	15000 <tcgetattr@plt+0x3e6c>
   14fe0:	lsr	r2, r4, #5
   14fe4:	uxtb	r2, r2
   14fe8:	and	r3, r4, #31
   14fec:	ldr	r1, [sp, #160]	; 0xa0
   14ff0:	ldr	r2, [r1, r2, lsl #2]
   14ff4:	lsr	r3, r2, r3
   14ff8:	tst	r3, #1
   14ffc:	bne	1500c <tcgetattr@plt+0x3e78>
   15000:	ldr	r3, [sp, #56]	; 0x38
   15004:	cmp	r3, #0
   15008:	beq	14e98 <tcgetattr@plt+0x3d04>
   1500c:	ldr	r3, [sp, #32]
   15010:	cmp	r3, #0
   15014:	bne	15820 <tcgetattr@plt+0x468c>
   15018:	ldr	r3, [sp, #44]	; 0x2c
   1501c:	eor	r3, r3, #1
   15020:	cmp	sl, #2
   15024:	movne	r3, #0
   15028:	andeq	r3, r3, #1
   1502c:	cmp	r3, #0
   15030:	beq	15074 <tcgetattr@plt+0x3ee0>
   15034:	cmp	r7, fp
   15038:	ldrhi	r2, [sp, #36]	; 0x24
   1503c:	movhi	r1, #39	; 0x27
   15040:	strbhi	r1, [r2, fp]
   15044:	add	r2, fp, #1
   15048:	cmp	r7, r2
   1504c:	ldrhi	r1, [sp, #36]	; 0x24
   15050:	movhi	r0, #36	; 0x24
   15054:	strbhi	r0, [r1, r2]
   15058:	add	r2, fp, #2
   1505c:	cmp	r7, r2
   15060:	ldrhi	r1, [sp, #36]	; 0x24
   15064:	movhi	r0, #39	; 0x27
   15068:	strbhi	r0, [r1, r2]
   1506c:	add	fp, fp, #3
   15070:	str	r3, [sp, #44]	; 0x2c
   15074:	cmp	r7, fp
   15078:	ldrhi	r3, [sp, #36]	; 0x24
   1507c:	movhi	r2, #92	; 0x5c
   15080:	strbhi	r2, [r3, fp]
   15084:	add	fp, fp, #1
   15088:	cmp	fp, r7
   1508c:	ldrcc	r3, [sp, #36]	; 0x24
   15090:	strbcc	r4, [r3, fp]
   15094:	add	fp, fp, #1
   15098:	ldr	r3, [sp, #40]	; 0x28
   1509c:	cmp	r8, #0
   150a0:	moveq	r3, #0
   150a4:	str	r3, [sp, #40]	; 0x28
   150a8:	add	r6, r6, #1
   150ac:	ldr	r3, [sp, #28]
   150b0:	cmn	r3, #1
   150b4:	beq	15640 <tcgetattr@plt+0x44ac>
   150b8:	ldr	r3, [sp, #28]
   150bc:	subs	r8, r3, r6
   150c0:	movne	r8, #1
   150c4:	cmp	r8, #0
   150c8:	beq	15654 <tcgetattr@plt+0x44c0>
   150cc:	ldr	r5, [sp, #48]	; 0x30
   150d0:	cmp	sl, #2
   150d4:	moveq	r5, #0
   150d8:	andne	r5, r5, #1
   150dc:	ldr	r3, [sp, #60]	; 0x3c
   150e0:	adds	r9, r3, #0
   150e4:	movne	r9, #1
   150e8:	ands	r2, r5, r9
   150ec:	str	r2, [sp, #56]	; 0x38
   150f0:	beq	149b8 <tcgetattr@plt+0x3824>
   150f4:	add	r4, r6, r3
   150f8:	ldr	r2, [sp, #28]
   150fc:	cmp	r3, #1
   15100:	movls	r3, #0
   15104:	movhi	r3, #1
   15108:	cmn	r2, #1
   1510c:	movne	r3, #0
   15110:	cmp	r3, #0
   15114:	beq	15124 <tcgetattr@plt+0x3f90>
   15118:	ldr	r0, [sp, #52]	; 0x34
   1511c:	bl	11080 <strlen@plt>
   15120:	str	r0, [sp, #28]
   15124:	ldr	r3, [sp, #28]
   15128:	cmp	r3, r4
   1512c:	bcc	149b0 <tcgetattr@plt+0x381c>
   15130:	ldr	r2, [sp, #60]	; 0x3c
   15134:	ldr	r1, [sp, #72]	; 0x48
   15138:	ldr	r3, [sp, #52]	; 0x34
   1513c:	add	r0, r3, r6
   15140:	bl	10f3c <memcmp@plt>
   15144:	cmp	r0, #0
   15148:	bne	14bd0 <tcgetattr@plt+0x3a3c>
   1514c:	ldr	r3, [sp, #32]
   15150:	cmp	r3, #0
   15154:	beq	149b8 <tcgetattr@plt+0x3824>
   15158:	mov	r8, sl
   1515c:	mov	sl, r7
   15160:	b	157b0 <tcgetattr@plt+0x461c>
   15164:	mov	r8, sl
   15168:	mov	sl, r7
   1516c:	b	157b0 <tcgetattr@plt+0x461c>
   15170:	cmp	sl, #2
   15174:	strne	r8, [sp, #80]	; 0x50
   15178:	movne	r5, #0
   1517c:	bne	14fb4 <tcgetattr@plt+0x3e20>
   15180:	ldr	r3, [sp, #32]
   15184:	cmp	r3, #0
   15188:	bne	1579c <tcgetattr@plt+0x4608>
   1518c:	ldr	r2, [sp, #76]	; 0x4c
   15190:	adds	r3, r7, #0
   15194:	movne	r3, #1
   15198:	cmp	r2, #0
   1519c:	movne	r3, #0
   151a0:	cmp	r3, #0
   151a4:	movne	r3, #0
   151a8:	bne	151d8 <tcgetattr@plt+0x4044>
   151ac:	cmp	r7, fp
   151b0:	ldrhi	r3, [sp, #36]	; 0x24
   151b4:	movhi	r2, #39	; 0x27
   151b8:	strbhi	r2, [r3, fp]
   151bc:	add	r3, fp, #1
   151c0:	cmp	r7, r3
   151c4:	ldrhi	r2, [sp, #36]	; 0x24
   151c8:	movhi	r1, #92	; 0x5c
   151cc:	strbhi	r1, [r2, r3]
   151d0:	mov	r3, r7
   151d4:	ldr	r7, [sp, #76]	; 0x4c
   151d8:	add	r2, fp, #2
   151dc:	cmp	r2, r3
   151e0:	ldrcc	r1, [sp, #36]	; 0x24
   151e4:	movcc	r0, #39	; 0x27
   151e8:	strbcc	r0, [r1, r2]
   151ec:	add	fp, fp, #3
   151f0:	ldr	r2, [sp, #32]
   151f4:	mov	r5, r2
   151f8:	str	r8, [sp, #80]	; 0x50
   151fc:	str	r2, [sp, #44]	; 0x2c
   15200:	str	r7, [sp, #76]	; 0x4c
   15204:	mov	r7, r3
   15208:	b	14fb4 <tcgetattr@plt+0x3e20>
   1520c:	ldr	r5, [sp, #84]	; 0x54
   15210:	cmp	r5, #1
   15214:	beq	15244 <tcgetattr@plt+0x40b0>
   15218:	mov	r3, #0
   1521c:	str	r3, [sp, #104]	; 0x68
   15220:	str	r3, [sp, #108]	; 0x6c
   15224:	ldr	r3, [sp, #28]
   15228:	cmn	r3, #1
   1522c:	beq	15278 <tcgetattr@plt+0x40e4>
   15230:	mov	r3, #0
   15234:	str	r4, [sp, #88]	; 0x58
   15238:	str	fp, [sp, #92]	; 0x5c
   1523c:	mov	fp, r3
   15240:	b	153a0 <tcgetattr@plt+0x420c>
   15244:	bl	1105c <__ctype_b_loc@plt>
   15248:	ldr	r2, [r0]
   1524c:	lsl	r3, r4, #1
   15250:	ldrh	r8, [r2, r3]
   15254:	lsr	r8, r8, #14
   15258:	and	r8, r8, #1
   1525c:	mov	r2, r5
   15260:	eor	r5, r8, #1
   15264:	ldr	r3, [sp, #48]	; 0x30
   15268:	and	r5, r5, r3
   1526c:	ands	r5, r5, #255	; 0xff
   15270:	beq	14fb4 <tcgetattr@plt+0x3e20>
   15274:	b	15438 <tcgetattr@plt+0x42a4>
   15278:	ldr	r0, [sp, #52]	; 0x34
   1527c:	bl	11080 <strlen@plt>
   15280:	str	r0, [sp, #28]
   15284:	b	15230 <tcgetattr@plt+0x409c>
   15288:	mov	r2, fp
   1528c:	mov	r1, r4
   15290:	ldr	r4, [sp, #88]	; 0x58
   15294:	ldr	fp, [sp, #92]	; 0x5c
   15298:	ldr	r0, [sp, #28]
   1529c:	cmp	r0, r5
   152a0:	bls	1546c <tcgetattr@plt+0x42d8>
   152a4:	ldrb	r3, [r1]
   152a8:	cmp	r3, #0
   152ac:	beq	15474 <tcgetattr@plt+0x42e0>
   152b0:	mov	r3, r1
   152b4:	add	r2, r2, #1
   152b8:	add	r1, r6, r2
   152bc:	cmp	r0, r1
   152c0:	bls	1547c <tcgetattr@plt+0x42e8>
   152c4:	ldrb	r1, [r3, #1]!
   152c8:	cmp	r1, #0
   152cc:	bne	152b4 <tcgetattr@plt+0x4120>
   152d0:	mov	r8, #0
   152d4:	b	15430 <tcgetattr@plt+0x429c>
   152d8:	cmp	r4, r5
   152dc:	beq	1537c <tcgetattr@plt+0x41e8>
   152e0:	ldrb	r3, [r4, #1]!
   152e4:	sub	r3, r3, #91	; 0x5b
   152e8:	cmp	r3, #33	; 0x21
   152ec:	ldrls	pc, [pc, r3, lsl #2]
   152f0:	b	152d8 <tcgetattr@plt+0x4144>
   152f4:	andeq	r5, r1, r8, lsr #15
   152f8:	andeq	r5, r1, r8, lsr #15
   152fc:	ldrdeq	r5, [r1], -r8
   15300:	andeq	r5, r1, r8, lsr #15
   15304:	ldrdeq	r5, [r1], -r8
   15308:	andeq	r5, r1, r8, lsr #15
   1530c:	ldrdeq	r5, [r1], -r8
   15310:	ldrdeq	r5, [r1], -r8
   15314:	ldrdeq	r5, [r1], -r8
   15318:	ldrdeq	r5, [r1], -r8
   1531c:	ldrdeq	r5, [r1], -r8
   15320:	ldrdeq	r5, [r1], -r8
   15324:	ldrdeq	r5, [r1], -r8
   15328:	ldrdeq	r5, [r1], -r8
   1532c:	ldrdeq	r5, [r1], -r8
   15330:	ldrdeq	r5, [r1], -r8
   15334:	ldrdeq	r5, [r1], -r8
   15338:	ldrdeq	r5, [r1], -r8
   1533c:	ldrdeq	r5, [r1], -r8
   15340:	ldrdeq	r5, [r1], -r8
   15344:	ldrdeq	r5, [r1], -r8
   15348:	ldrdeq	r5, [r1], -r8
   1534c:	ldrdeq	r5, [r1], -r8
   15350:	ldrdeq	r5, [r1], -r8
   15354:	ldrdeq	r5, [r1], -r8
   15358:	ldrdeq	r5, [r1], -r8
   1535c:	ldrdeq	r5, [r1], -r8
   15360:	ldrdeq	r5, [r1], -r8
   15364:	ldrdeq	r5, [r1], -r8
   15368:	ldrdeq	r5, [r1], -r8
   1536c:	ldrdeq	r5, [r1], -r8
   15370:	ldrdeq	r5, [r1], -r8
   15374:	ldrdeq	r5, [r1], -r8
   15378:	andeq	r5, r1, r8, lsr #15
   1537c:	ldr	r0, [sp, #100]	; 0x64
   15380:	bl	10f90 <iswprint@plt>
   15384:	cmp	r0, #0
   15388:	moveq	r8, #0
   1538c:	add	fp, fp, r9
   15390:	add	r0, sp, #104	; 0x68
   15394:	bl	10f30 <mbsinit@plt>
   15398:	cmp	r0, #0
   1539c:	bne	15410 <tcgetattr@plt+0x427c>
   153a0:	add	r5, r6, fp
   153a4:	ldr	r3, [sp, #52]	; 0x34
   153a8:	add	r4, r3, r5
   153ac:	add	r3, sp, #104	; 0x68
   153b0:	ldr	r2, [sp, #28]
   153b4:	sub	r2, r2, r5
   153b8:	mov	r1, r4
   153bc:	add	r0, sp, #100	; 0x64
   153c0:	bl	17b30 <tcgetattr@plt+0x699c>
   153c4:	subs	r9, r0, #0
   153c8:	beq	15484 <tcgetattr@plt+0x42f0>
   153cc:	cmn	r9, #1
   153d0:	beq	15420 <tcgetattr@plt+0x428c>
   153d4:	cmn	r9, #2
   153d8:	beq	15288 <tcgetattr@plt+0x40f4>
   153dc:	ldr	r3, [sp, #32]
   153e0:	cmp	sl, #2
   153e4:	movne	r3, #0
   153e8:	andeq	r3, r3, #1
   153ec:	cmp	r3, #0
   153f0:	beq	1537c <tcgetattr@plt+0x41e8>
   153f4:	cmp	r9, #1
   153f8:	bls	1537c <tcgetattr@plt+0x41e8>
   153fc:	sub	r3, r9, #1
   15400:	add	r5, r3, r5
   15404:	ldr	r3, [sp, #52]	; 0x34
   15408:	add	r5, r3, r5
   1540c:	b	152e0 <tcgetattr@plt+0x414c>
   15410:	ldr	r4, [sp, #88]	; 0x58
   15414:	mov	r2, fp
   15418:	ldr	fp, [sp, #92]	; 0x5c
   1541c:	b	15430 <tcgetattr@plt+0x429c>
   15420:	ldr	r4, [sp, #88]	; 0x58
   15424:	mov	r2, fp
   15428:	ldr	fp, [sp, #92]	; 0x5c
   1542c:	mov	r8, #0
   15430:	cmp	r2, #1
   15434:	bls	15260 <tcgetattr@plt+0x40cc>
   15438:	add	r1, r6, r2
   1543c:	ldr	ip, [sp, #64]	; 0x40
   15440:	mov	r5, #0
   15444:	eor	r3, r8, #1
   15448:	ldr	r2, [sp, #48]	; 0x30
   1544c:	and	r3, r3, r2
   15450:	uxtb	r3, r3
   15454:	ldr	r9, [sp, #32]
   15458:	ldr	lr, [sp, #44]	; 0x2c
   1545c:	ldr	r2, [sp, #56]	; 0x38
   15460:	str	r8, [sp, #56]	; 0x38
   15464:	ldr	r0, [sp, #36]	; 0x24
   15468:	b	15504 <tcgetattr@plt+0x4370>
   1546c:	mov	r8, #0
   15470:	b	15430 <tcgetattr@plt+0x429c>
   15474:	mov	r8, #0
   15478:	b	15430 <tcgetattr@plt+0x429c>
   1547c:	mov	r8, #0
   15480:	b	15430 <tcgetattr@plt+0x429c>
   15484:	ldr	r4, [sp, #88]	; 0x58
   15488:	mov	r2, fp
   1548c:	ldr	fp, [sp, #92]	; 0x5c
   15490:	b	15430 <tcgetattr@plt+0x429c>
   15494:	cmp	r2, #0
   15498:	beq	154ac <tcgetattr@plt+0x4318>
   1549c:	cmp	r7, fp
   154a0:	movhi	r2, #92	; 0x5c
   154a4:	strbhi	r2, [r0, fp]
   154a8:	add	fp, fp, #1
   154ac:	add	r8, r6, #1
   154b0:	cmp	r1, r8
   154b4:	bls	155bc <tcgetattr@plt+0x4428>
   154b8:	eor	r2, r5, #1
   154bc:	and	r2, r2, lr
   154c0:	ands	r2, r2, #255	; 0xff
   154c4:	beq	155d8 <tcgetattr@plt+0x4444>
   154c8:	cmp	r7, fp
   154cc:	movhi	r2, #39	; 0x27
   154d0:	strbhi	r2, [r0, fp]
   154d4:	add	r2, fp, #1
   154d8:	cmp	r7, r2
   154dc:	movhi	lr, #39	; 0x27
   154e0:	strbhi	lr, [r0, r2]
   154e4:	add	fp, fp, #2
   154e8:	mov	r6, r8
   154ec:	mov	r2, r3
   154f0:	mov	lr, r3
   154f4:	cmp	r7, fp
   154f8:	strbhi	r4, [r0, fp]
   154fc:	add	fp, fp, #1
   15500:	ldrb	r4, [ip, #1]!
   15504:	cmp	r3, #0
   15508:	beq	15494 <tcgetattr@plt+0x4300>
   1550c:	cmp	r9, #0
   15510:	bne	15814 <tcgetattr@plt+0x4680>
   15514:	eor	r5, lr, #1
   15518:	cmp	sl, #2
   1551c:	movne	r5, #0
   15520:	andeq	r5, r5, #1
   15524:	cmp	r5, #0
   15528:	beq	15560 <tcgetattr@plt+0x43cc>
   1552c:	cmp	r7, fp
   15530:	movhi	lr, #39	; 0x27
   15534:	strbhi	lr, [r0, fp]
   15538:	add	lr, fp, #1
   1553c:	cmp	r7, lr
   15540:	movhi	r8, #36	; 0x24
   15544:	strbhi	r8, [r0, lr]
   15548:	add	lr, fp, #2
   1554c:	cmp	r7, lr
   15550:	movhi	r8, #39	; 0x27
   15554:	strbhi	r8, [r0, lr]
   15558:	add	fp, fp, #3
   1555c:	mov	lr, r5
   15560:	cmp	r7, fp
   15564:	movhi	r5, #92	; 0x5c
   15568:	strbhi	r5, [r0, fp]
   1556c:	add	r5, fp, #1
   15570:	cmp	r7, r5
   15574:	lsrhi	r8, r4, #6
   15578:	addhi	r8, r8, #48	; 0x30
   1557c:	strbhi	r8, [r0, r5]
   15580:	add	r8, fp, #2
   15584:	cmp	r7, r8
   15588:	lsrhi	r5, r4, #3
   1558c:	andhi	r5, r5, #7
   15590:	addhi	r5, r5, #48	; 0x30
   15594:	strbhi	r5, [r0, r8]
   15598:	add	fp, fp, #3
   1559c:	and	r4, r4, #7
   155a0:	add	r4, r4, #48	; 0x30
   155a4:	add	r5, r6, #1
   155a8:	cmp	r1, r5
   155ac:	bls	155c8 <tcgetattr@plt+0x4434>
   155b0:	mov	r6, r5
   155b4:	mov	r5, r3
   155b8:	b	154f4 <tcgetattr@plt+0x4360>
   155bc:	str	lr, [sp, #44]	; 0x2c
   155c0:	ldr	r8, [sp, #56]	; 0x38
   155c4:	b	14e98 <tcgetattr@plt+0x3d04>
   155c8:	str	lr, [sp, #44]	; 0x2c
   155cc:	ldr	r8, [sp, #56]	; 0x38
   155d0:	mov	r5, r3
   155d4:	b	14e98 <tcgetattr@plt+0x3d04>
   155d8:	mov	r6, r8
   155dc:	b	154f4 <tcgetattr@plt+0x4360>
   155e0:	mov	r5, #0
   155e4:	b	14fb4 <tcgetattr@plt+0x3e20>
   155e8:	mov	r8, r5
   155ec:	ldr	r5, [sp, #48]	; 0x30
   155f0:	mov	r4, #48	; 0x30
   155f4:	b	14fb4 <tcgetattr@plt+0x3e20>
   155f8:	ldr	r8, [sp, #32]
   155fc:	mov	r4, #48	; 0x30
   15600:	b	14fb4 <tcgetattr@plt+0x3e20>
   15604:	ldr	r8, [sp, #32]
   15608:	mov	r4, #48	; 0x30
   1560c:	b	14fb4 <tcgetattr@plt+0x3e20>
   15610:	mov	r8, #0
   15614:	mov	r5, r8
   15618:	b	14fb4 <tcgetattr@plt+0x3e20>
   1561c:	mov	r8, #0
   15620:	mov	r5, r8
   15624:	b	14fb4 <tcgetattr@plt+0x3e20>
   15628:	mov	r8, #0
   1562c:	mov	r5, r8
   15630:	b	14fb4 <tcgetattr@plt+0x3e20>
   15634:	mov	r8, #0
   15638:	mov	r5, r8
   1563c:	b	14fb4 <tcgetattr@plt+0x3e20>
   15640:	ldr	r3, [sp, #52]	; 0x34
   15644:	ldrb	r8, [r3, r6]
   15648:	adds	r8, r8, #0
   1564c:	movne	r8, #1
   15650:	b	150c4 <tcgetattr@plt+0x3f30>
   15654:	cmp	sl, #2
   15658:	movne	r3, #0
   1565c:	moveq	r3, #1
   15660:	ldr	r1, [sp, #32]
   15664:	mov	r2, r1
   15668:	and	r2, r2, r3
   1566c:	cmp	fp, #0
   15670:	movne	r2, #0
   15674:	andeq	r2, r2, #1
   15678:	cmp	r2, #0
   1567c:	bne	1582c <tcgetattr@plt+0x4698>
   15680:	eor	r2, r1, #1
   15684:	and	r3, r3, r2
   15688:	ldr	r1, [sp, #80]	; 0x50
   1568c:	tst	r1, r3
   15690:	beq	15708 <tcgetattr@plt+0x4574>
   15694:	ldr	r3, [sp, #40]	; 0x28
   15698:	cmp	r3, #0
   1569c:	bne	156c4 <tcgetattr@plt+0x4530>
   156a0:	ldr	r1, [sp, #76]	; 0x4c
   156a4:	clz	r3, r7
   156a8:	lsr	r3, r3, #5
   156ac:	cmp	r1, #0
   156b0:	moveq	r3, #0
   156b4:	cmp	r3, #0
   156b8:	beq	15708 <tcgetattr@plt+0x4574>
   156bc:	ldr	r7, [sp, #76]	; 0x4c
   156c0:	b	14758 <tcgetattr@plt+0x35c4>
   156c4:	ldr	r3, [sp, #168]	; 0xa8
   156c8:	str	r3, [sp, #16]
   156cc:	ldr	r3, [sp, #164]	; 0xa4
   156d0:	str	r3, [sp, #12]
   156d4:	ldr	r3, [sp, #160]	; 0xa0
   156d8:	str	r3, [sp, #8]
   156dc:	ldr	r3, [sp, #156]	; 0x9c
   156e0:	str	r3, [sp, #4]
   156e4:	mov	r3, #5
   156e8:	str	r3, [sp]
   156ec:	ldr	r3, [sp, #28]
   156f0:	ldr	r2, [sp, #52]	; 0x34
   156f4:	ldr	r1, [sp, #76]	; 0x4c
   156f8:	ldr	r0, [sp, #36]	; 0x24
   156fc:	bl	146f8 <tcgetattr@plt+0x3564>
   15700:	mov	fp, r0
   15704:	b	15808 <tcgetattr@plt+0x4674>
   15708:	mov	sl, r7
   1570c:	ldr	r3, [sp, #72]	; 0x48
   15710:	cmp	r3, #0
   15714:	moveq	r2, #0
   15718:	andne	r2, r2, #1
   1571c:	cmp	r2, #0
   15720:	beq	15750 <tcgetattr@plt+0x45bc>
   15724:	mov	r2, r3
   15728:	ldrb	r3, [r3]
   1572c:	cmp	r3, #0
   15730:	beq	15750 <tcgetattr@plt+0x45bc>
   15734:	ldr	r1, [sp, #36]	; 0x24
   15738:	cmp	sl, fp
   1573c:	strbhi	r3, [r1, fp]
   15740:	add	fp, fp, #1
   15744:	ldrb	r3, [r2, #1]!
   15748:	cmp	r3, #0
   1574c:	bne	15738 <tcgetattr@plt+0x45a4>
   15750:	cmp	sl, fp
   15754:	movhi	r3, #0
   15758:	ldrhi	r2, [sp, #36]	; 0x24
   1575c:	strbhi	r3, [r2, fp]
   15760:	b	15808 <tcgetattr@plt+0x4674>
   15764:	mov	r8, sl
   15768:	mov	sl, r7
   1576c:	ldr	r3, [sp, #32]
   15770:	str	r3, [sp, #48]	; 0x30
   15774:	b	157b0 <tcgetattr@plt+0x461c>
   15778:	mov	r8, sl
   1577c:	mov	sl, r7
   15780:	b	157b0 <tcgetattr@plt+0x461c>
   15784:	mov	r8, sl
   15788:	mov	sl, r7
   1578c:	b	157b0 <tcgetattr@plt+0x461c>
   15790:	andeq	fp, r1, r0, asr r6
   15794:	andeq	fp, r1, r0, ror #12
   15798:	andeq	fp, r1, r4, asr r6
   1579c:	mov	r8, sl
   157a0:	mov	sl, r7
   157a4:	b	157b0 <tcgetattr@plt+0x461c>
   157a8:	mov	r8, sl
   157ac:	mov	sl, r7
   157b0:	ldr	r3, [sp, #48]	; 0x30
   157b4:	cmp	r8, #2
   157b8:	movne	r3, #0
   157bc:	andeq	r3, r3, #1
   157c0:	cmp	r3, #0
   157c4:	movne	r8, #4
   157c8:	ldr	r3, [sp, #168]	; 0xa8
   157cc:	str	r3, [sp, #16]
   157d0:	ldr	r3, [sp, #164]	; 0xa4
   157d4:	str	r3, [sp, #12]
   157d8:	mov	r3, #0
   157dc:	str	r3, [sp, #8]
   157e0:	ldr	r3, [sp, #156]	; 0x9c
   157e4:	bic	r3, r3, #2
   157e8:	str	r3, [sp, #4]
   157ec:	str	r8, [sp]
   157f0:	ldr	r3, [sp, #28]
   157f4:	ldr	r2, [sp, #52]	; 0x34
   157f8:	mov	r1, sl
   157fc:	ldr	r0, [sp, #36]	; 0x24
   15800:	bl	146f8 <tcgetattr@plt+0x3564>
   15804:	mov	fp, r0
   15808:	mov	r0, fp
   1580c:	add	sp, sp, #116	; 0x74
   15810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15814:	mov	r8, sl
   15818:	mov	sl, r7
   1581c:	b	157b0 <tcgetattr@plt+0x461c>
   15820:	mov	r8, sl
   15824:	mov	sl, r7
   15828:	b	157b0 <tcgetattr@plt+0x461c>
   1582c:	mov	r8, sl
   15830:	mov	sl, r7
   15834:	b	157b0 <tcgetattr@plt+0x461c>
   15838:	mov	r8, sl
   1583c:	mov	sl, r7
   15840:	b	157c8 <tcgetattr@plt+0x4634>
   15844:	mov	r3, #1
   15848:	str	r3, [sp, #32]
   1584c:	str	r3, [sp, #48]	; 0x30
   15850:	str	r3, [sp, #60]	; 0x3c
   15854:	ldr	r3, [pc, #-196]	; 15798 <tcgetattr@plt+0x4604>
   15858:	str	r3, [sp, #72]	; 0x48
   1585c:	mov	fp, #0
   15860:	mov	sl, #5
   15864:	b	147b4 <tcgetattr@plt+0x3620>
   15868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1586c:	sub	sp, sp, #52	; 0x34
   15870:	mov	r5, r0
   15874:	str	r1, [sp, #24]
   15878:	str	r2, [sp, #28]
   1587c:	mov	r4, r3
   15880:	bl	110b0 <__errno_location@plt>
   15884:	str	r0, [sp, #32]
   15888:	ldr	r3, [r0]
   1588c:	str	r3, [sp, #36]	; 0x24
   15890:	ldr	r3, [pc, #396]	; 15a24 <tcgetattr@plt+0x4890>
   15894:	ldr	r6, [r3]
   15898:	cmn	r5, #-2147483647	; 0x80000001
   1589c:	movne	r3, #0
   158a0:	moveq	r3, #1
   158a4:	orrs	r3, r3, r5, lsr #31
   158a8:	bne	159e8 <tcgetattr@plt+0x4854>
   158ac:	ldr	r3, [pc, #368]	; 15a24 <tcgetattr@plt+0x4890>
   158b0:	ldr	r2, [r3, #4]
   158b4:	cmp	r5, r2
   158b8:	blt	15920 <tcgetattr@plt+0x478c>
   158bc:	str	r2, [sp, #44]	; 0x2c
   158c0:	add	r3, r3, #8
   158c4:	cmp	r6, r3
   158c8:	beq	159ec <tcgetattr@plt+0x4858>
   158cc:	sub	r2, r5, r2
   158d0:	mov	r3, #8
   158d4:	str	r3, [sp]
   158d8:	mvn	r3, #-2147483648	; 0x80000000
   158dc:	add	r2, r2, #1
   158e0:	add	r1, sp, #44	; 0x2c
   158e4:	mov	r0, r6
   158e8:	bl	1676c <tcgetattr@plt+0x55d8>
   158ec:	mov	r6, r0
   158f0:	ldr	r3, [pc, #300]	; 15a24 <tcgetattr@plt+0x4890>
   158f4:	str	r0, [r3]
   158f8:	ldr	r7, [pc, #292]	; 15a24 <tcgetattr@plt+0x4890>
   158fc:	ldr	r0, [r7, #4]
   15900:	ldr	r2, [sp, #44]	; 0x2c
   15904:	sub	r2, r2, r0
   15908:	lsl	r2, r2, #3
   1590c:	mov	r1, #0
   15910:	add	r0, r6, r0, lsl #3
   15914:	bl	110d4 <memset@plt>
   15918:	ldr	r3, [sp, #44]	; 0x2c
   1591c:	str	r3, [r7, #4]
   15920:	add	fp, r6, r5, lsl #3
   15924:	ldr	r8, [r6, r5, lsl #3]
   15928:	ldr	r7, [fp, #4]
   1592c:	ldr	r9, [r4, #4]
   15930:	orr	r9, r9, #1
   15934:	add	sl, r4, #8
   15938:	ldr	r3, [r4, #44]	; 0x2c
   1593c:	str	r3, [sp, #16]
   15940:	ldr	r3, [r4, #40]	; 0x28
   15944:	str	r3, [sp, #12]
   15948:	str	sl, [sp, #8]
   1594c:	str	r9, [sp, #4]
   15950:	ldr	r3, [r4]
   15954:	str	r3, [sp]
   15958:	ldr	r3, [sp, #28]
   1595c:	ldr	r2, [sp, #24]
   15960:	mov	r1, r8
   15964:	mov	r0, r7
   15968:	bl	146f8 <tcgetattr@plt+0x3564>
   1596c:	cmp	r8, r0
   15970:	bhi	159d0 <tcgetattr@plt+0x483c>
   15974:	add	r8, r0, #1
   15978:	str	r8, [r6, r5, lsl #3]
   1597c:	ldr	r3, [pc, #164]	; 15a28 <tcgetattr@plt+0x4894>
   15980:	cmp	r7, r3
   15984:	beq	15990 <tcgetattr@plt+0x47fc>
   15988:	mov	r0, r7
   1598c:	bl	14480 <tcgetattr@plt+0x32ec>
   15990:	mov	r0, r8
   15994:	bl	165e8 <tcgetattr@plt+0x5454>
   15998:	mov	r7, r0
   1599c:	str	r0, [fp, #4]
   159a0:	ldr	r3, [r4, #44]	; 0x2c
   159a4:	str	r3, [sp, #16]
   159a8:	ldr	r3, [r4, #40]	; 0x28
   159ac:	str	r3, [sp, #12]
   159b0:	str	sl, [sp, #8]
   159b4:	str	r9, [sp, #4]
   159b8:	ldr	r3, [r4]
   159bc:	str	r3, [sp]
   159c0:	ldr	r3, [sp, #28]
   159c4:	ldr	r2, [sp, #24]
   159c8:	mov	r1, r8
   159cc:	bl	146f8 <tcgetattr@plt+0x3564>
   159d0:	ldr	r3, [sp, #32]
   159d4:	ldr	r2, [sp, #36]	; 0x24
   159d8:	str	r2, [r3]
   159dc:	mov	r0, r7
   159e0:	add	sp, sp, #52	; 0x34
   159e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159e8:	bl	11170 <abort@plt>
   159ec:	sub	r2, r5, r2
   159f0:	mov	r3, #8
   159f4:	str	r3, [sp]
   159f8:	mvn	r3, #-2147483648	; 0x80000000
   159fc:	add	r2, r2, #1
   15a00:	add	r1, sp, #44	; 0x2c
   15a04:	mov	r0, #0
   15a08:	bl	1676c <tcgetattr@plt+0x55d8>
   15a0c:	mov	r6, r0
   15a10:	ldr	r3, [pc, #12]	; 15a24 <tcgetattr@plt+0x4890>
   15a14:	str	r0, [r3], #8
   15a18:	ldm	r3, {r0, r1}
   15a1c:	stm	r6, {r0, r1}
   15a20:	b	158f8 <tcgetattr@plt+0x4764>
   15a24:	andeq	ip, r2, ip, lsl r1
   15a28:	andeq	ip, r2, r0, ror #4
   15a2c:	push	{r4, r5, r6, lr}
   15a30:	mov	r4, r0
   15a34:	bl	110b0 <__errno_location@plt>
   15a38:	mov	r5, r0
   15a3c:	ldr	r6, [r0]
   15a40:	cmp	r4, #0
   15a44:	ldr	r3, [pc, #20]	; 15a60 <tcgetattr@plt+0x48cc>
   15a48:	moveq	r4, r3
   15a4c:	mov	r1, #48	; 0x30
   15a50:	mov	r0, r4
   15a54:	bl	16ad4 <tcgetattr@plt+0x5940>
   15a58:	str	r6, [r5]
   15a5c:	pop	{r4, r5, r6, pc}
   15a60:	andeq	ip, r2, r0, ror #6
   15a64:	subs	r3, r0, #0
   15a68:	ldr	r2, [pc, #8]	; 15a78 <tcgetattr@plt+0x48e4>
   15a6c:	moveq	r3, r2
   15a70:	ldr	r0, [r3]
   15a74:	bx	lr
   15a78:	andeq	ip, r2, r0, ror #6
   15a7c:	subs	r3, r0, #0
   15a80:	ldr	r2, [pc, #8]	; 15a90 <tcgetattr@plt+0x48fc>
   15a84:	moveq	r3, r2
   15a88:	str	r1, [r3]
   15a8c:	bx	lr
   15a90:	andeq	ip, r2, r0, ror #6
   15a94:	push	{lr}		; (str lr, [sp, #-4]!)
   15a98:	subs	r3, r0, #0
   15a9c:	ldr	r0, [pc, #44]	; 15ad0 <tcgetattr@plt+0x493c>
   15aa0:	moveq	r3, r0
   15aa4:	add	r3, r3, #8
   15aa8:	lsr	lr, r1, #5
   15aac:	and	r1, r1, #31
   15ab0:	ldr	ip, [r3, lr, lsl #2]
   15ab4:	lsr	r0, ip, r1
   15ab8:	eor	r2, r2, r0
   15abc:	and	r2, r2, #1
   15ac0:	eor	r1, ip, r2, lsl r1
   15ac4:	str	r1, [r3, lr, lsl #2]
   15ac8:	and	r0, r0, #1
   15acc:	pop	{pc}		; (ldr pc, [sp], #4)
   15ad0:	andeq	ip, r2, r0, ror #6
   15ad4:	subs	r3, r0, #0
   15ad8:	ldr	r2, [pc, #12]	; 15aec <tcgetattr@plt+0x4958>
   15adc:	moveq	r3, r2
   15ae0:	ldr	r0, [r3, #4]
   15ae4:	str	r1, [r3, #4]
   15ae8:	bx	lr
   15aec:	andeq	ip, r2, r0, ror #6
   15af0:	subs	r3, r0, #0
   15af4:	ldr	r0, [pc, #40]	; 15b24 <tcgetattr@plt+0x4990>
   15af8:	moveq	r3, r0
   15afc:	mov	r0, #10
   15b00:	str	r0, [r3]
   15b04:	cmp	r2, #0
   15b08:	cmpne	r1, #0
   15b0c:	beq	15b1c <tcgetattr@plt+0x4988>
   15b10:	str	r1, [r3, #40]	; 0x28
   15b14:	str	r2, [r3, #44]	; 0x2c
   15b18:	bx	lr
   15b1c:	push	{r4, lr}
   15b20:	bl	11170 <abort@plt>
   15b24:	andeq	ip, r2, r0, ror #6
   15b28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15b2c:	sub	sp, sp, #24
   15b30:	mov	r7, r0
   15b34:	mov	r8, r1
   15b38:	mov	r9, r2
   15b3c:	mov	sl, r3
   15b40:	ldr	r4, [sp, #56]	; 0x38
   15b44:	cmp	r4, #0
   15b48:	ldr	r3, [pc, #84]	; 15ba4 <tcgetattr@plt+0x4a10>
   15b4c:	moveq	r4, r3
   15b50:	bl	110b0 <__errno_location@plt>
   15b54:	mov	r5, r0
   15b58:	ldr	r6, [r0]
   15b5c:	ldr	r3, [r4, #44]	; 0x2c
   15b60:	str	r3, [sp, #16]
   15b64:	ldr	r3, [r4, #40]	; 0x28
   15b68:	str	r3, [sp, #12]
   15b6c:	add	r3, r4, #8
   15b70:	str	r3, [sp, #8]
   15b74:	ldr	r3, [r4, #4]
   15b78:	str	r3, [sp, #4]
   15b7c:	ldr	r3, [r4]
   15b80:	str	r3, [sp]
   15b84:	mov	r3, sl
   15b88:	mov	r2, r9
   15b8c:	mov	r1, r8
   15b90:	mov	r0, r7
   15b94:	bl	146f8 <tcgetattr@plt+0x3564>
   15b98:	str	r6, [r5]
   15b9c:	add	sp, sp, #24
   15ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ba4:	andeq	ip, r2, r0, ror #6
   15ba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bac:	sub	sp, sp, #44	; 0x2c
   15bb0:	str	r0, [sp, #28]
   15bb4:	str	r1, [sp, #32]
   15bb8:	mov	r6, r2
   15bbc:	subs	r4, r3, #0
   15bc0:	ldr	r3, [pc, #172]	; 15c74 <tcgetattr@plt+0x4ae0>
   15bc4:	moveq	r4, r3
   15bc8:	bl	110b0 <__errno_location@plt>
   15bcc:	mov	r7, r0
   15bd0:	ldr	fp, [r0]
   15bd4:	ldr	r5, [r4, #4]
   15bd8:	cmp	r6, #0
   15bdc:	orreq	r5, r5, #1
   15be0:	add	r9, r4, #8
   15be4:	ldr	r3, [r4, #44]	; 0x2c
   15be8:	str	r3, [sp, #16]
   15bec:	ldr	r3, [r4, #40]	; 0x28
   15bf0:	str	r3, [sp, #12]
   15bf4:	str	r9, [sp, #8]
   15bf8:	str	r5, [sp, #4]
   15bfc:	ldr	r3, [r4]
   15c00:	str	r3, [sp]
   15c04:	ldr	r3, [sp, #32]
   15c08:	ldr	r2, [sp, #28]
   15c0c:	mov	r1, #0
   15c10:	mov	r0, r1
   15c14:	bl	146f8 <tcgetattr@plt+0x3564>
   15c18:	mov	sl, r0
   15c1c:	add	r8, r0, #1
   15c20:	mov	r0, r8
   15c24:	bl	165e8 <tcgetattr@plt+0x5454>
   15c28:	str	r0, [sp, #36]	; 0x24
   15c2c:	ldr	r3, [r4, #44]	; 0x2c
   15c30:	str	r3, [sp, #16]
   15c34:	ldr	r3, [r4, #40]	; 0x28
   15c38:	str	r3, [sp, #12]
   15c3c:	str	r9, [sp, #8]
   15c40:	str	r5, [sp, #4]
   15c44:	ldr	r3, [r4]
   15c48:	str	r3, [sp]
   15c4c:	ldr	r3, [sp, #32]
   15c50:	ldr	r2, [sp, #28]
   15c54:	mov	r1, r8
   15c58:	bl	146f8 <tcgetattr@plt+0x3564>
   15c5c:	str	fp, [r7]
   15c60:	cmp	r6, #0
   15c64:	strne	sl, [r6]
   15c68:	ldr	r0, [sp, #36]	; 0x24
   15c6c:	add	sp, sp, #44	; 0x2c
   15c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c74:	andeq	ip, r2, r0, ror #6
   15c78:	push	{r4, lr}
   15c7c:	mov	r3, r2
   15c80:	mov	r2, #0
   15c84:	bl	15ba8 <tcgetattr@plt+0x4a14>
   15c88:	pop	{r4, pc}
   15c8c:	push	{r4, r5, r6, r7, r8, lr}
   15c90:	ldr	r3, [pc, #140]	; 15d24 <tcgetattr@plt+0x4b90>
   15c94:	ldr	r7, [r3]
   15c98:	ldr	r3, [r3, #4]
   15c9c:	cmp	r3, #1
   15ca0:	ble	15ccc <tcgetattr@plt+0x4b38>
   15ca4:	mov	r5, r7
   15ca8:	mov	r4, #1
   15cac:	ldr	r6, [pc, #112]	; 15d24 <tcgetattr@plt+0x4b90>
   15cb0:	ldr	r0, [r5, #12]
   15cb4:	bl	14480 <tcgetattr@plt+0x32ec>
   15cb8:	add	r4, r4, #1
   15cbc:	add	r5, r5, #8
   15cc0:	ldr	r3, [r6, #4]
   15cc4:	cmp	r3, r4
   15cc8:	bgt	15cb0 <tcgetattr@plt+0x4b1c>
   15ccc:	ldr	r0, [r7, #4]
   15cd0:	ldr	r3, [pc, #80]	; 15d28 <tcgetattr@plt+0x4b94>
   15cd4:	cmp	r0, r3
   15cd8:	beq	15cf4 <tcgetattr@plt+0x4b60>
   15cdc:	bl	14480 <tcgetattr@plt+0x32ec>
   15ce0:	ldr	r3, [pc, #60]	; 15d24 <tcgetattr@plt+0x4b90>
   15ce4:	mov	r2, #256	; 0x100
   15ce8:	str	r2, [r3, #8]
   15cec:	ldr	r2, [pc, #52]	; 15d28 <tcgetattr@plt+0x4b94>
   15cf0:	str	r2, [r3, #12]
   15cf4:	ldr	r3, [pc, #48]	; 15d2c <tcgetattr@plt+0x4b98>
   15cf8:	cmp	r7, r3
   15cfc:	beq	15d14 <tcgetattr@plt+0x4b80>
   15d00:	mov	r0, r7
   15d04:	bl	14480 <tcgetattr@plt+0x32ec>
   15d08:	ldr	r3, [pc, #20]	; 15d24 <tcgetattr@plt+0x4b90>
   15d0c:	add	r2, r3, #8
   15d10:	str	r2, [r3]
   15d14:	mov	r2, #1
   15d18:	ldr	r3, [pc, #4]	; 15d24 <tcgetattr@plt+0x4b90>
   15d1c:	str	r2, [r3, #4]
   15d20:	pop	{r4, r5, r6, r7, r8, pc}
   15d24:	andeq	ip, r2, ip, lsl r1
   15d28:	andeq	ip, r2, r0, ror #4
   15d2c:	andeq	ip, r2, r4, lsr #2
   15d30:	push	{r4, lr}
   15d34:	ldr	r3, [pc, #8]	; 15d44 <tcgetattr@plt+0x4bb0>
   15d38:	mvn	r2, #0
   15d3c:	bl	15868 <tcgetattr@plt+0x46d4>
   15d40:	pop	{r4, pc}
   15d44:	andeq	ip, r2, r0, ror #6
   15d48:	push	{r4, lr}
   15d4c:	ldr	r3, [pc, #4]	; 15d58 <tcgetattr@plt+0x4bc4>
   15d50:	bl	15868 <tcgetattr@plt+0x46d4>
   15d54:	pop	{r4, pc}
   15d58:	andeq	ip, r2, r0, ror #6
   15d5c:	push	{r4, lr}
   15d60:	mov	r1, r0
   15d64:	mov	r0, #0
   15d68:	bl	15d30 <tcgetattr@plt+0x4b9c>
   15d6c:	pop	{r4, pc}
   15d70:	push	{r4, lr}
   15d74:	mov	r2, r1
   15d78:	mov	r1, r0
   15d7c:	mov	r0, #0
   15d80:	bl	15d48 <tcgetattr@plt+0x4bb4>
   15d84:	pop	{r4, pc}
   15d88:	push	{r4, r5, lr}
   15d8c:	sub	sp, sp, #52	; 0x34
   15d90:	mov	r4, r0
   15d94:	mov	r5, r2
   15d98:	mov	r0, sp
   15d9c:	bl	14590 <tcgetattr@plt+0x33fc>
   15da0:	mov	r3, sp
   15da4:	mvn	r2, #0
   15da8:	mov	r1, r5
   15dac:	mov	r0, r4
   15db0:	bl	15868 <tcgetattr@plt+0x46d4>
   15db4:	add	sp, sp, #52	; 0x34
   15db8:	pop	{r4, r5, pc}
   15dbc:	push	{r4, r5, r6, lr}
   15dc0:	sub	sp, sp, #48	; 0x30
   15dc4:	mov	r4, r0
   15dc8:	mov	r5, r2
   15dcc:	mov	r6, r3
   15dd0:	mov	r0, sp
   15dd4:	bl	14590 <tcgetattr@plt+0x33fc>
   15dd8:	mov	r3, sp
   15ddc:	mov	r2, r6
   15de0:	mov	r1, r5
   15de4:	mov	r0, r4
   15de8:	bl	15868 <tcgetattr@plt+0x46d4>
   15dec:	add	sp, sp, #48	; 0x30
   15df0:	pop	{r4, r5, r6, pc}
   15df4:	push	{r4, lr}
   15df8:	mov	r2, r1
   15dfc:	mov	r1, r0
   15e00:	mov	r0, #0
   15e04:	bl	15d88 <tcgetattr@plt+0x4bf4>
   15e08:	pop	{r4, pc}
   15e0c:	push	{r4, lr}
   15e10:	mov	r3, r2
   15e14:	mov	r2, r1
   15e18:	mov	r1, r0
   15e1c:	mov	r0, #0
   15e20:	bl	15dbc <tcgetattr@plt+0x4c28>
   15e24:	pop	{r4, pc}
   15e28:	push	{r4, r5, r6, lr}
   15e2c:	sub	sp, sp, #48	; 0x30
   15e30:	mov	r4, r0
   15e34:	mov	r5, r1
   15e38:	mov	r6, r2
   15e3c:	mov	ip, sp
   15e40:	ldr	lr, [pc, #64]	; 15e88 <tcgetattr@plt+0x4cf4>
   15e44:	ldm	lr!, {r0, r1, r2, r3}
   15e48:	stmia	ip!, {r0, r1, r2, r3}
   15e4c:	ldm	lr!, {r0, r1, r2, r3}
   15e50:	stmia	ip!, {r0, r1, r2, r3}
   15e54:	ldm	lr, {r0, r1, r2, r3}
   15e58:	stm	ip, {r0, r1, r2, r3}
   15e5c:	mov	r2, #1
   15e60:	mov	r1, r6
   15e64:	mov	r0, sp
   15e68:	bl	15a94 <tcgetattr@plt+0x4900>
   15e6c:	mov	r3, sp
   15e70:	mov	r2, r5
   15e74:	mov	r1, r4
   15e78:	mov	r0, #0
   15e7c:	bl	15868 <tcgetattr@plt+0x46d4>
   15e80:	add	sp, sp, #48	; 0x30
   15e84:	pop	{r4, r5, r6, pc}
   15e88:	andeq	ip, r2, r0, ror #6
   15e8c:	push	{r4, lr}
   15e90:	mov	r2, r1
   15e94:	mvn	r1, #0
   15e98:	bl	15e28 <tcgetattr@plt+0x4c94>
   15e9c:	pop	{r4, pc}
   15ea0:	push	{r4, lr}
   15ea4:	mov	r1, #58	; 0x3a
   15ea8:	bl	15e8c <tcgetattr@plt+0x4cf8>
   15eac:	pop	{r4, pc}
   15eb0:	push	{r4, lr}
   15eb4:	mov	r2, #58	; 0x3a
   15eb8:	bl	15e28 <tcgetattr@plt+0x4c94>
   15ebc:	pop	{r4, pc}
   15ec0:	push	{r4, r5, lr}
   15ec4:	sub	sp, sp, #100	; 0x64
   15ec8:	mov	r4, r0
   15ecc:	mov	r5, r2
   15ed0:	mov	r0, sp
   15ed4:	bl	14590 <tcgetattr@plt+0x33fc>
   15ed8:	add	lr, sp, #48	; 0x30
   15edc:	mov	ip, sp
   15ee0:	ldm	ip!, {r0, r1, r2, r3}
   15ee4:	stmia	lr!, {r0, r1, r2, r3}
   15ee8:	ldm	ip!, {r0, r1, r2, r3}
   15eec:	stmia	lr!, {r0, r1, r2, r3}
   15ef0:	ldm	ip, {r0, r1, r2, r3}
   15ef4:	stm	lr, {r0, r1, r2, r3}
   15ef8:	mov	r2, #1
   15efc:	mov	r1, #58	; 0x3a
   15f00:	add	r0, sp, #48	; 0x30
   15f04:	bl	15a94 <tcgetattr@plt+0x4900>
   15f08:	add	r3, sp, #48	; 0x30
   15f0c:	mvn	r2, #0
   15f10:	mov	r1, r5
   15f14:	mov	r0, r4
   15f18:	bl	15868 <tcgetattr@plt+0x46d4>
   15f1c:	add	sp, sp, #100	; 0x64
   15f20:	pop	{r4, r5, pc}
   15f24:	push	{r4, r5, r6, r7, lr}
   15f28:	sub	sp, sp, #52	; 0x34
   15f2c:	mov	r4, r0
   15f30:	mov	r6, r1
   15f34:	mov	r7, r2
   15f38:	mov	r5, r3
   15f3c:	mov	ip, sp
   15f40:	ldr	lr, [pc, #64]	; 15f88 <tcgetattr@plt+0x4df4>
   15f44:	ldm	lr!, {r0, r1, r2, r3}
   15f48:	stmia	ip!, {r0, r1, r2, r3}
   15f4c:	ldm	lr!, {r0, r1, r2, r3}
   15f50:	stmia	ip!, {r0, r1, r2, r3}
   15f54:	ldm	lr, {r0, r1, r2, r3}
   15f58:	stm	ip, {r0, r1, r2, r3}
   15f5c:	mov	r2, r7
   15f60:	mov	r1, r6
   15f64:	mov	r0, sp
   15f68:	bl	15af0 <tcgetattr@plt+0x495c>
   15f6c:	mov	r3, sp
   15f70:	ldr	r2, [sp, #72]	; 0x48
   15f74:	mov	r1, r5
   15f78:	mov	r0, r4
   15f7c:	bl	15868 <tcgetattr@plt+0x46d4>
   15f80:	add	sp, sp, #52	; 0x34
   15f84:	pop	{r4, r5, r6, r7, pc}
   15f88:	andeq	ip, r2, r0, ror #6
   15f8c:	push	{lr}		; (str lr, [sp, #-4]!)
   15f90:	sub	sp, sp, #12
   15f94:	mvn	ip, #0
   15f98:	str	ip, [sp]
   15f9c:	bl	15f24 <tcgetattr@plt+0x4d90>
   15fa0:	add	sp, sp, #12
   15fa4:	pop	{pc}		; (ldr pc, [sp], #4)
   15fa8:	push	{r4, lr}
   15fac:	mov	r3, r2
   15fb0:	mov	r2, r1
   15fb4:	mov	r1, r0
   15fb8:	mov	r0, #0
   15fbc:	bl	15f8c <tcgetattr@plt+0x4df8>
   15fc0:	pop	{r4, pc}
   15fc4:	push	{lr}		; (str lr, [sp, #-4]!)
   15fc8:	sub	sp, sp, #12
   15fcc:	str	r3, [sp]
   15fd0:	mov	r3, r2
   15fd4:	mov	r2, r1
   15fd8:	mov	r1, r0
   15fdc:	mov	r0, #0
   15fe0:	bl	15f24 <tcgetattr@plt+0x4d90>
   15fe4:	add	sp, sp, #12
   15fe8:	pop	{pc}		; (ldr pc, [sp], #4)
   15fec:	push	{r4, lr}
   15ff0:	ldr	r3, [pc, #4]	; 15ffc <tcgetattr@plt+0x4e68>
   15ff4:	bl	15868 <tcgetattr@plt+0x46d4>
   15ff8:	pop	{r4, pc}
   15ffc:	andeq	ip, r2, ip, lsr #2
   16000:	push	{r4, lr}
   16004:	mov	r2, r1
   16008:	mov	r1, r0
   1600c:	mov	r0, #0
   16010:	bl	15fec <tcgetattr@plt+0x4e58>
   16014:	pop	{r4, pc}
   16018:	push	{r4, lr}
   1601c:	mvn	r2, #0
   16020:	bl	15fec <tcgetattr@plt+0x4e58>
   16024:	pop	{r4, pc}
   16028:	push	{r4, lr}
   1602c:	mov	r1, r0
   16030:	mov	r0, #0
   16034:	bl	16018 <tcgetattr@plt+0x4e84>
   16038:	pop	{r4, pc}
   1603c:	push	{r4, r5, r6, lr}
   16040:	sub	sp, sp, #32
   16044:	mov	r4, r0
   16048:	ldr	r5, [sp, #48]	; 0x30
   1604c:	ldr	r6, [sp, #52]	; 0x34
   16050:	cmp	r1, #0
   16054:	beq	1610c <tcgetattr@plt+0x4f78>
   16058:	str	r3, [sp, #4]
   1605c:	str	r2, [sp]
   16060:	mov	r3, r1
   16064:	ldr	r2, [pc, #940]	; 16418 <tcgetattr@plt+0x5284>
   16068:	mov	r1, #1
   1606c:	bl	110f8 <__fprintf_chk@plt>
   16070:	mov	r2, #5
   16074:	ldr	r1, [pc, #928]	; 1641c <tcgetattr@plt+0x5288>
   16078:	mov	r0, #0
   1607c:	bl	10f54 <dcgettext@plt>
   16080:	ldr	r3, [pc, #920]	; 16420 <tcgetattr@plt+0x528c>
   16084:	str	r3, [sp]
   16088:	mov	r3, r0
   1608c:	ldr	r2, [pc, #912]	; 16424 <tcgetattr@plt+0x5290>
   16090:	mov	r1, #1
   16094:	mov	r0, r4
   16098:	bl	110f8 <__fprintf_chk@plt>
   1609c:	mov	r1, r4
   160a0:	mov	r0, #10
   160a4:	bl	10f48 <fputc_unlocked@plt>
   160a8:	mov	r2, #5
   160ac:	ldr	r1, [pc, #884]	; 16428 <tcgetattr@plt+0x5294>
   160b0:	mov	r0, #0
   160b4:	bl	10f54 <dcgettext@plt>
   160b8:	ldr	r3, [pc, #876]	; 1642c <tcgetattr@plt+0x5298>
   160bc:	mov	r2, r0
   160c0:	mov	r1, #1
   160c4:	mov	r0, r4
   160c8:	bl	110f8 <__fprintf_chk@plt>
   160cc:	mov	r1, r4
   160d0:	mov	r0, #10
   160d4:	bl	10f48 <fputc_unlocked@plt>
   160d8:	cmp	r6, #9
   160dc:	ldrls	pc, [pc, r6, lsl #2]
   160e0:	b	163b0 <tcgetattr@plt+0x521c>
   160e4:	andeq	r6, r1, r8, asr #2
   160e8:	andeq	r6, r1, r4, lsr #2
   160ec:	andeq	r6, r1, r0, asr r1
   160f0:	andeq	r6, r1, r0, lsl #3
   160f4:			; <UNDEFINED> instruction: 0x000161b8
   160f8:	strdeq	r6, [r1], -r8
   160fc:	andeq	r6, r1, r0, asr #4
   16100:	muleq	r1, r0, r2
   16104:	andeq	r6, r1, r8, ror #5
   16108:	andeq	r6, r1, r8, asr #6
   1610c:	str	r3, [sp]
   16110:	mov	r3, r2
   16114:	ldr	r2, [pc, #788]	; 16430 <tcgetattr@plt+0x529c>
   16118:	mov	r1, #1
   1611c:	bl	110f8 <__fprintf_chk@plt>
   16120:	b	16070 <tcgetattr@plt+0x4edc>
   16124:	mov	r2, #5
   16128:	ldr	r1, [pc, #772]	; 16434 <tcgetattr@plt+0x52a0>
   1612c:	mov	r0, #0
   16130:	bl	10f54 <dcgettext@plt>
   16134:	ldr	r3, [r5]
   16138:	mov	r2, r0
   1613c:	mov	r1, #1
   16140:	mov	r0, r4
   16144:	bl	110f8 <__fprintf_chk@plt>
   16148:	add	sp, sp, #32
   1614c:	pop	{r4, r5, r6, pc}
   16150:	mov	r2, #5
   16154:	ldr	r1, [pc, #732]	; 16438 <tcgetattr@plt+0x52a4>
   16158:	mov	r0, #0
   1615c:	bl	10f54 <dcgettext@plt>
   16160:	ldr	r3, [r5]
   16164:	ldr	r2, [r5, #4]
   16168:	str	r2, [sp]
   1616c:	mov	r2, r0
   16170:	mov	r1, #1
   16174:	mov	r0, r4
   16178:	bl	110f8 <__fprintf_chk@plt>
   1617c:	b	16148 <tcgetattr@plt+0x4fb4>
   16180:	mov	r2, #5
   16184:	ldr	r1, [pc, #688]	; 1643c <tcgetattr@plt+0x52a8>
   16188:	mov	r0, #0
   1618c:	bl	10f54 <dcgettext@plt>
   16190:	ldr	r3, [r5]
   16194:	ldr	r2, [r5, #8]
   16198:	str	r2, [sp, #4]
   1619c:	ldr	r2, [r5, #4]
   161a0:	str	r2, [sp]
   161a4:	mov	r2, r0
   161a8:	mov	r1, #1
   161ac:	mov	r0, r4
   161b0:	bl	110f8 <__fprintf_chk@plt>
   161b4:	b	16148 <tcgetattr@plt+0x4fb4>
   161b8:	mov	r2, #5
   161bc:	ldr	r1, [pc, #636]	; 16440 <tcgetattr@plt+0x52ac>
   161c0:	mov	r0, #0
   161c4:	bl	10f54 <dcgettext@plt>
   161c8:	ldr	r3, [r5]
   161cc:	ldr	r2, [r5, #12]
   161d0:	str	r2, [sp, #8]
   161d4:	ldr	r2, [r5, #8]
   161d8:	str	r2, [sp, #4]
   161dc:	ldr	r2, [r5, #4]
   161e0:	str	r2, [sp]
   161e4:	mov	r2, r0
   161e8:	mov	r1, #1
   161ec:	mov	r0, r4
   161f0:	bl	110f8 <__fprintf_chk@plt>
   161f4:	b	16148 <tcgetattr@plt+0x4fb4>
   161f8:	mov	r2, #5
   161fc:	ldr	r1, [pc, #576]	; 16444 <tcgetattr@plt+0x52b0>
   16200:	mov	r0, #0
   16204:	bl	10f54 <dcgettext@plt>
   16208:	ldr	r3, [r5]
   1620c:	ldr	r2, [r5, #16]
   16210:	str	r2, [sp, #12]
   16214:	ldr	r2, [r5, #12]
   16218:	str	r2, [sp, #8]
   1621c:	ldr	r2, [r5, #8]
   16220:	str	r2, [sp, #4]
   16224:	ldr	r2, [r5, #4]
   16228:	str	r2, [sp]
   1622c:	mov	r2, r0
   16230:	mov	r1, #1
   16234:	mov	r0, r4
   16238:	bl	110f8 <__fprintf_chk@plt>
   1623c:	b	16148 <tcgetattr@plt+0x4fb4>
   16240:	mov	r2, #5
   16244:	ldr	r1, [pc, #508]	; 16448 <tcgetattr@plt+0x52b4>
   16248:	mov	r0, #0
   1624c:	bl	10f54 <dcgettext@plt>
   16250:	ldr	r3, [r5]
   16254:	ldr	r2, [r5, #20]
   16258:	str	r2, [sp, #16]
   1625c:	ldr	r2, [r5, #16]
   16260:	str	r2, [sp, #12]
   16264:	ldr	r2, [r5, #12]
   16268:	str	r2, [sp, #8]
   1626c:	ldr	r2, [r5, #8]
   16270:	str	r2, [sp, #4]
   16274:	ldr	r2, [r5, #4]
   16278:	str	r2, [sp]
   1627c:	mov	r2, r0
   16280:	mov	r1, #1
   16284:	mov	r0, r4
   16288:	bl	110f8 <__fprintf_chk@plt>
   1628c:	b	16148 <tcgetattr@plt+0x4fb4>
   16290:	mov	r2, #5
   16294:	ldr	r1, [pc, #432]	; 1644c <tcgetattr@plt+0x52b8>
   16298:	mov	r0, #0
   1629c:	bl	10f54 <dcgettext@plt>
   162a0:	ldr	r3, [r5]
   162a4:	ldr	r2, [r5, #24]
   162a8:	str	r2, [sp, #20]
   162ac:	ldr	r2, [r5, #20]
   162b0:	str	r2, [sp, #16]
   162b4:	ldr	r2, [r5, #16]
   162b8:	str	r2, [sp, #12]
   162bc:	ldr	r2, [r5, #12]
   162c0:	str	r2, [sp, #8]
   162c4:	ldr	r2, [r5, #8]
   162c8:	str	r2, [sp, #4]
   162cc:	ldr	r2, [r5, #4]
   162d0:	str	r2, [sp]
   162d4:	mov	r2, r0
   162d8:	mov	r1, #1
   162dc:	mov	r0, r4
   162e0:	bl	110f8 <__fprintf_chk@plt>
   162e4:	b	16148 <tcgetattr@plt+0x4fb4>
   162e8:	mov	r2, #5
   162ec:	ldr	r1, [pc, #348]	; 16450 <tcgetattr@plt+0x52bc>
   162f0:	mov	r0, #0
   162f4:	bl	10f54 <dcgettext@plt>
   162f8:	ldr	r3, [r5]
   162fc:	ldr	r2, [r5, #28]
   16300:	str	r2, [sp, #24]
   16304:	ldr	r2, [r5, #24]
   16308:	str	r2, [sp, #20]
   1630c:	ldr	r2, [r5, #20]
   16310:	str	r2, [sp, #16]
   16314:	ldr	r2, [r5, #16]
   16318:	str	r2, [sp, #12]
   1631c:	ldr	r2, [r5, #12]
   16320:	str	r2, [sp, #8]
   16324:	ldr	r2, [r5, #8]
   16328:	str	r2, [sp, #4]
   1632c:	ldr	r2, [r5, #4]
   16330:	str	r2, [sp]
   16334:	mov	r2, r0
   16338:	mov	r1, #1
   1633c:	mov	r0, r4
   16340:	bl	110f8 <__fprintf_chk@plt>
   16344:	b	16148 <tcgetattr@plt+0x4fb4>
   16348:	mov	r2, #5
   1634c:	ldr	r1, [pc, #256]	; 16454 <tcgetattr@plt+0x52c0>
   16350:	mov	r0, #0
   16354:	bl	10f54 <dcgettext@plt>
   16358:	ldr	r3, [r5]
   1635c:	ldr	r2, [r5, #32]
   16360:	str	r2, [sp, #28]
   16364:	ldr	r2, [r5, #28]
   16368:	str	r2, [sp, #24]
   1636c:	ldr	r2, [r5, #24]
   16370:	str	r2, [sp, #20]
   16374:	ldr	r2, [r5, #20]
   16378:	str	r2, [sp, #16]
   1637c:	ldr	r2, [r5, #16]
   16380:	str	r2, [sp, #12]
   16384:	ldr	r2, [r5, #12]
   16388:	str	r2, [sp, #8]
   1638c:	ldr	r2, [r5, #8]
   16390:	str	r2, [sp, #4]
   16394:	ldr	r2, [r5, #4]
   16398:	str	r2, [sp]
   1639c:	mov	r2, r0
   163a0:	mov	r1, #1
   163a4:	mov	r0, r4
   163a8:	bl	110f8 <__fprintf_chk@plt>
   163ac:	b	16148 <tcgetattr@plt+0x4fb4>
   163b0:	mov	r2, #5
   163b4:	ldr	r1, [pc, #156]	; 16458 <tcgetattr@plt+0x52c4>
   163b8:	mov	r0, #0
   163bc:	bl	10f54 <dcgettext@plt>
   163c0:	ldr	r3, [r5]
   163c4:	ldr	r2, [r5, #32]
   163c8:	str	r2, [sp, #28]
   163cc:	ldr	r2, [r5, #28]
   163d0:	str	r2, [sp, #24]
   163d4:	ldr	r2, [r5, #24]
   163d8:	str	r2, [sp, #20]
   163dc:	ldr	r2, [r5, #20]
   163e0:	str	r2, [sp, #16]
   163e4:	ldr	r2, [r5, #16]
   163e8:	str	r2, [sp, #12]
   163ec:	ldr	r2, [r5, #12]
   163f0:	str	r2, [sp, #8]
   163f4:	ldr	r2, [r5, #8]
   163f8:	str	r2, [sp, #4]
   163fc:	ldr	r2, [r5, #4]
   16400:	str	r2, [sp]
   16404:	mov	r2, r0
   16408:	mov	r1, #1
   1640c:	mov	r0, r4
   16410:	bl	110f8 <__fprintf_chk@plt>
   16414:	b	16148 <tcgetattr@plt+0x4fb4>
   16418:	andeq	fp, r1, r8, asr #13
   1641c:	ldrdeq	fp, [r1], -ip
   16420:	andeq	r0, r0, r6, ror #15
   16424:			; <UNDEFINED> instruction: 0x0001b9b4
   16428:	andeq	fp, r1, r0, ror #13
   1642c:	andeq	fp, r1, ip, lsl #15
   16430:	ldrdeq	fp, [r1], -r4
   16434:			; <UNDEFINED> instruction: 0x0001b7b0
   16438:	andeq	fp, r1, r0, asr #15
   1643c:	ldrdeq	fp, [r1], -r8
   16440:	strdeq	fp, [r1], -r4
   16444:	andeq	fp, r1, r4, lsl r8
   16448:	andeq	fp, r1, r8, lsr r8
   1644c:	andeq	fp, r1, r0, ror #16
   16450:	andeq	fp, r1, ip, lsl #17
   16454:			; <UNDEFINED> instruction: 0x0001b8bc
   16458:	strdeq	fp, [r1], -r0
   1645c:	push	{r4, r5, lr}
   16460:	sub	sp, sp, #12
   16464:	ldr	r5, [sp, #24]
   16468:	ldr	ip, [r5]
   1646c:	cmp	ip, #0
   16470:	beq	164a0 <tcgetattr@plt+0x530c>
   16474:	mov	lr, r5
   16478:	mov	ip, #0
   1647c:	add	ip, ip, #1
   16480:	ldr	r4, [lr, #4]!
   16484:	cmp	r4, #0
   16488:	bne	1647c <tcgetattr@plt+0x52e8>
   1648c:	str	ip, [sp, #4]
   16490:	str	r5, [sp]
   16494:	bl	1603c <tcgetattr@plt+0x4ea8>
   16498:	add	sp, sp, #12
   1649c:	pop	{r4, r5, pc}
   164a0:	mov	ip, #0
   164a4:	b	1648c <tcgetattr@plt+0x52f8>
   164a8:	push	{r4, r5, lr}
   164ac:	sub	sp, sp, #52	; 0x34
   164b0:	ldr	r4, [sp, #64]	; 0x40
   164b4:	sub	r4, r4, #4
   164b8:	add	r5, sp, #4
   164bc:	mov	ip, #0
   164c0:	ldr	lr, [r4, #4]!
   164c4:	str	lr, [r5, #4]!
   164c8:	cmp	lr, #0
   164cc:	beq	164dc <tcgetattr@plt+0x5348>
   164d0:	add	ip, ip, #1
   164d4:	cmp	ip, #10
   164d8:	bne	164c0 <tcgetattr@plt+0x532c>
   164dc:	str	ip, [sp, #4]
   164e0:	add	ip, sp, #8
   164e4:	str	ip, [sp]
   164e8:	bl	1603c <tcgetattr@plt+0x4ea8>
   164ec:	add	sp, sp, #52	; 0x34
   164f0:	pop	{r4, r5, pc}
   164f4:	push	{r3}		; (str r3, [sp, #-4]!)
   164f8:	push	{lr}		; (str lr, [sp, #-4]!)
   164fc:	sub	sp, sp, #16
   16500:	add	r3, sp, #24
   16504:	str	r3, [sp, #12]
   16508:	str	r3, [sp]
   1650c:	ldr	r3, [sp, #20]
   16510:	bl	164a8 <tcgetattr@plt+0x5314>
   16514:	add	sp, sp, #16
   16518:	pop	{lr}		; (ldr lr, [sp], #4)
   1651c:	add	sp, sp, #4
   16520:	bx	lr
   16524:	push	{r4, lr}
   16528:	ldr	r3, [pc, #112]	; 165a0 <tcgetattr@plt+0x540c>
   1652c:	ldr	r1, [r3]
   16530:	mov	r0, #10
   16534:	bl	10f48 <fputc_unlocked@plt>
   16538:	mov	r2, #5
   1653c:	ldr	r1, [pc, #96]	; 165a4 <tcgetattr@plt+0x5410>
   16540:	mov	r0, #0
   16544:	bl	10f54 <dcgettext@plt>
   16548:	ldr	r2, [pc, #88]	; 165a8 <tcgetattr@plt+0x5414>
   1654c:	mov	r1, r0
   16550:	mov	r0, #1
   16554:	bl	110e0 <__printf_chk@plt>
   16558:	mov	r2, #5
   1655c:	ldr	r1, [pc, #72]	; 165ac <tcgetattr@plt+0x5418>
   16560:	mov	r0, #0
   16564:	bl	10f54 <dcgettext@plt>
   16568:	ldr	r3, [pc, #64]	; 165b0 <tcgetattr@plt+0x541c>
   1656c:	ldr	r2, [pc, #64]	; 165b4 <tcgetattr@plt+0x5420>
   16570:	mov	r1, r0
   16574:	mov	r0, #1
   16578:	bl	110e0 <__printf_chk@plt>
   1657c:	mov	r2, #5
   16580:	ldr	r1, [pc, #48]	; 165b8 <tcgetattr@plt+0x5424>
   16584:	mov	r0, #0
   16588:	bl	10f54 <dcgettext@plt>
   1658c:	ldr	r2, [pc, #40]	; 165bc <tcgetattr@plt+0x5428>
   16590:	mov	r1, r0
   16594:	mov	r0, #1
   16598:	bl	110e0 <__printf_chk@plt>
   1659c:	pop	{r4, pc}
   165a0:	andeq	ip, r2, r4, ror r1
   165a4:	andeq	fp, r1, ip, lsr #18
   165a8:	andeq	fp, r1, r0, asr #18
   165ac:	andeq	fp, r1, r8, asr r9
   165b0:	strdeq	sl, [r1], -r0
   165b4:	andeq	sl, r1, r8, lsl lr
   165b8:	andeq	fp, r1, ip, ror #18
   165bc:	muleq	r1, r4, r9
   165c0:	push	{r4, lr}
   165c4:	bl	17850 <tcgetattr@plt+0x66bc>
   165c8:	cmp	r0, #0
   165cc:	popne	{r4, pc}
   165d0:	bl	16b64 <tcgetattr@plt+0x59d0>
   165d4:	push	{r4, lr}
   165d8:	bl	17850 <tcgetattr@plt+0x66bc>
   165dc:	cmp	r0, #0
   165e0:	popne	{r4, pc}
   165e4:	bl	16b64 <tcgetattr@plt+0x59d0>
   165e8:	push	{r4, lr}
   165ec:	bl	165c0 <tcgetattr@plt+0x542c>
   165f0:	pop	{r4, pc}
   165f4:	push	{r4, r5, r6, lr}
   165f8:	mov	r5, r0
   165fc:	mov	r4, r1
   16600:	bl	17880 <tcgetattr@plt+0x66ec>
   16604:	cmp	r0, #0
   16608:	popne	{r4, r5, r6, pc}
   1660c:	adds	r4, r4, #0
   16610:	movne	r4, #1
   16614:	cmp	r5, #0
   16618:	orreq	r4, r4, #1
   1661c:	cmp	r4, #0
   16620:	popeq	{r4, r5, r6, pc}
   16624:	bl	16b64 <tcgetattr@plt+0x59d0>
   16628:	push	{r4, lr}
   1662c:	cmp	r1, #0
   16630:	orreq	r1, r1, #1
   16634:	bl	17880 <tcgetattr@plt+0x66ec>
   16638:	cmp	r0, #0
   1663c:	popne	{r4, pc}
   16640:	bl	16b64 <tcgetattr@plt+0x59d0>
   16644:	push	{r4, r5, r6, lr}
   16648:	mov	r6, r0
   1664c:	mov	r5, r1
   16650:	mov	r4, r2
   16654:	bl	17b88 <tcgetattr@plt+0x69f4>
   16658:	cmp	r0, #0
   1665c:	popne	{r4, r5, r6, pc}
   16660:	cmp	r6, #0
   16664:	beq	16674 <tcgetattr@plt+0x54e0>
   16668:	cmp	r5, #0
   1666c:	cmpne	r4, #0
   16670:	popeq	{r4, r5, r6, pc}
   16674:	bl	16b64 <tcgetattr@plt+0x59d0>
   16678:	push	{r4, lr}
   1667c:	bl	16644 <tcgetattr@plt+0x54b0>
   16680:	pop	{r4, pc}
   16684:	push	{r4, lr}
   16688:	mov	ip, r1
   1668c:	mov	r3, r2
   16690:	cmp	r2, #0
   16694:	cmpne	r1, #0
   16698:	moveq	r3, #1
   1669c:	moveq	ip, r3
   166a0:	mov	r2, r3
   166a4:	mov	r1, ip
   166a8:	bl	17b88 <tcgetattr@plt+0x69f4>
   166ac:	cmp	r0, #0
   166b0:	popne	{r4, pc}
   166b4:	bl	16b64 <tcgetattr@plt+0x59d0>
   166b8:	push	{r4, lr}
   166bc:	mov	r2, r1
   166c0:	mov	r1, r0
   166c4:	mov	r0, #0
   166c8:	bl	16644 <tcgetattr@plt+0x54b0>
   166cc:	pop	{r4, pc}
   166d0:	push	{r4, lr}
   166d4:	mov	r2, r1
   166d8:	mov	r1, r0
   166dc:	mov	r0, #0
   166e0:	bl	16684 <tcgetattr@plt+0x54f0>
   166e4:	pop	{r4, pc}
   166e8:	push	{r4, r5, r6, r7, r8, lr}
   166ec:	mov	r5, r1
   166f0:	mov	r6, r2
   166f4:	ldr	r4, [r1]
   166f8:	subs	r7, r0, #0
   166fc:	beq	16718 <tcgetattr@plt+0x5584>
   16700:	lsr	r2, r4, #1
   16704:	add	r3, r2, #1
   16708:	mvn	r3, r3
   1670c:	cmp	r4, r3
   16710:	bls	1673c <tcgetattr@plt+0x55a8>
   16714:	bl	16b64 <tcgetattr@plt+0x59d0>
   16718:	cmp	r4, #0
   1671c:	bne	16744 <tcgetattr@plt+0x55b0>
   16720:	mov	r1, r2
   16724:	mov	r0, #64	; 0x40
   16728:	bl	17cdc <tcgetattr@plt+0x6b48>
   1672c:	cmp	r0, #0
   16730:	movne	r4, r0
   16734:	addeq	r4, r0, #1
   16738:	b	16744 <tcgetattr@plt+0x55b0>
   1673c:	add	r4, r4, #1
   16740:	add	r4, r4, r2
   16744:	mov	r2, r6
   16748:	mov	r1, r4
   1674c:	mov	r0, r7
   16750:	bl	16644 <tcgetattr@plt+0x54b0>
   16754:	str	r4, [r5]
   16758:	pop	{r4, r5, r6, r7, r8, pc}
   1675c:	push	{r4, lr}
   16760:	mov	r2, #1
   16764:	bl	166e8 <tcgetattr@plt+0x5554>
   16768:	pop	{r4, pc}
   1676c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16770:	sub	sp, sp, #12
   16774:	mov	fp, r0
   16778:	mov	sl, r1
   1677c:	mov	r9, r2
   16780:	mov	r7, r3
   16784:	ldr	r6, [sp, #48]	; 0x30
   16788:	ldr	r5, [r1]
   1678c:	asrs	r4, r5, #1
   16790:	bmi	168ec <tcgetattr@plt+0x5758>
   16794:	cmp	r5, #0
   16798:	blt	16900 <tcgetattr@plt+0x576c>
   1679c:	mvn	r3, #-2147483648	; 0x80000000
   167a0:	sub	r3, r3, r4
   167a4:	cmp	r5, r3
   167a8:	movle	r3, #0
   167ac:	movgt	r3, #1
   167b0:	cmp	r3, #0
   167b4:	addeq	r4, r4, r5
   167b8:	mvnne	r4, #-2147483648	; 0x80000000
   167bc:	mvn	r8, r7
   167c0:	lsr	r8, r8, #31
   167c4:	cmp	r7, r4
   167c8:	movge	r3, #0
   167cc:	andlt	r3, r8, #1
   167d0:	cmp	r3, #0
   167d4:	movne	r4, r7
   167d8:	cmp	r6, #0
   167dc:	blt	16914 <tcgetattr@plt+0x5780>
   167e0:	cmp	r6, #0
   167e4:	beq	169c0 <tcgetattr@plt+0x582c>
   167e8:	cmp	r4, #0
   167ec:	blt	16970 <tcgetattr@plt+0x57dc>
   167f0:	mov	r1, r6
   167f4:	mvn	r0, #-2147483648	; 0x80000000
   167f8:	bl	17ee8 <tcgetattr@plt+0x6d54>
   167fc:	cmp	r0, r4
   16800:	movge	r0, #0
   16804:	movlt	r0, #1
   16808:	cmp	r0, #0
   1680c:	mvnne	r3, #-2147483648	; 0x80000000
   16810:	strne	r3, [sp, #4]
   16814:	beq	169a8 <tcgetattr@plt+0x5814>
   16818:	mov	r1, r6
   1681c:	ldr	r0, [sp, #4]
   16820:	bl	17ee8 <tcgetattr@plt+0x6d54>
   16824:	mov	r4, r0
   16828:	mov	r1, r6
   1682c:	ldr	r0, [sp, #4]
   16830:	bl	18108 <tcgetattr@plt+0x6f74>
   16834:	ldr	r3, [sp, #4]
   16838:	sub	r1, r3, r1
   1683c:	cmp	fp, #0
   16840:	moveq	r3, #0
   16844:	streq	r3, [sl]
   16848:	sub	r3, r4, r5
   1684c:	cmp	r3, r9
   16850:	bge	168d8 <tcgetattr@plt+0x5744>
   16854:	cmp	r9, #0
   16858:	blt	169cc <tcgetattr@plt+0x5838>
   1685c:	cmp	r5, #0
   16860:	blt	169e0 <tcgetattr@plt+0x584c>
   16864:	mvn	r3, #-2147483648	; 0x80000000
   16868:	sub	r3, r3, r9
   1686c:	cmp	r5, r3
   16870:	movle	r3, #0
   16874:	movgt	r3, #1
   16878:	cmp	r3, #0
   1687c:	bne	16a88 <tcgetattr@plt+0x58f4>
   16880:	add	r5, r5, r9
   16884:	mov	r4, r5
   16888:	cmp	r7, r5
   1688c:	movge	r7, #0
   16890:	andlt	r7, r8, #1
   16894:	cmp	r7, #0
   16898:	bne	16a88 <tcgetattr@plt+0x58f4>
   1689c:	cmp	r6, #0
   168a0:	blt	169f4 <tcgetattr@plt+0x5860>
   168a4:	cmp	r6, #0
   168a8:	beq	168d4 <tcgetattr@plt+0x5740>
   168ac:	cmp	r5, #0
   168b0:	blt	16a50 <tcgetattr@plt+0x58bc>
   168b4:	mov	r1, r6
   168b8:	mvn	r0, #-2147483648	; 0x80000000
   168bc:	bl	17ee8 <tcgetattr@plt+0x6d54>
   168c0:	cmp	r5, r0
   168c4:	movle	r0, #0
   168c8:	movgt	r0, #1
   168cc:	cmp	r0, #0
   168d0:	bne	16a88 <tcgetattr@plt+0x58f4>
   168d4:	mul	r1, r5, r6
   168d8:	mov	r0, fp
   168dc:	bl	165f4 <tcgetattr@plt+0x5460>
   168e0:	str	r4, [sl]
   168e4:	add	sp, sp, #12
   168e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168ec:	rsb	r3, r4, #-2147483648	; 0x80000000
   168f0:	cmp	r5, r3
   168f4:	movge	r3, #0
   168f8:	movlt	r3, #1
   168fc:	b	167b0 <tcgetattr@plt+0x561c>
   16900:	rsb	r3, r5, #-2147483648	; 0x80000000
   16904:	cmp	r4, r3
   16908:	movge	r3, #0
   1690c:	movlt	r3, #1
   16910:	b	167b0 <tcgetattr@plt+0x561c>
   16914:	cmp	r4, #0
   16918:	blt	16940 <tcgetattr@plt+0x57ac>
   1691c:	cmn	r6, #1
   16920:	beq	1695c <tcgetattr@plt+0x57c8>
   16924:	mov	r1, r6
   16928:	mov	r0, #-2147483648	; 0x80000000
   1692c:	bl	17ee8 <tcgetattr@plt+0x6d54>
   16930:	cmp	r0, r4
   16934:	movge	r0, #0
   16938:	movlt	r0, #1
   1693c:	b	16808 <tcgetattr@plt+0x5674>
   16940:	mov	r1, r6
   16944:	mvn	r0, #-2147483648	; 0x80000000
   16948:	bl	17ee8 <tcgetattr@plt+0x6d54>
   1694c:	cmp	r0, r4
   16950:	movle	r0, #0
   16954:	movgt	r0, #1
   16958:	b	16808 <tcgetattr@plt+0x5674>
   1695c:	add	r0, r4, #-2147483648	; 0x80000000
   16960:	cmp	r0, #0
   16964:	movle	r0, #0
   16968:	movgt	r0, #1
   1696c:	b	16808 <tcgetattr@plt+0x5674>
   16970:	cmn	r4, #1
   16974:	beq	16994 <tcgetattr@plt+0x5800>
   16978:	mov	r1, r4
   1697c:	mov	r0, #-2147483648	; 0x80000000
   16980:	bl	17ee8 <tcgetattr@plt+0x6d54>
   16984:	cmp	r6, r0
   16988:	movle	r0, #0
   1698c:	movgt	r0, #1
   16990:	b	16808 <tcgetattr@plt+0x5674>
   16994:	add	r0, r6, #-2147483648	; 0x80000000
   16998:	cmp	r0, #0
   1699c:	movle	r0, #0
   169a0:	movgt	r0, #1
   169a4:	b	16808 <tcgetattr@plt+0x5674>
   169a8:	mul	r1, r6, r4
   169ac:	cmp	r1, #63	; 0x3f
   169b0:	movle	r3, #64	; 0x40
   169b4:	strle	r3, [sp, #4]
   169b8:	bgt	1683c <tcgetattr@plt+0x56a8>
   169bc:	b	16818 <tcgetattr@plt+0x5684>
   169c0:	mov	r3, #64	; 0x40
   169c4:	str	r3, [sp, #4]
   169c8:	b	16818 <tcgetattr@plt+0x5684>
   169cc:	rsb	r3, r9, #-2147483648	; 0x80000000
   169d0:	cmp	r5, r3
   169d4:	movge	r3, #0
   169d8:	movlt	r3, #1
   169dc:	b	16878 <tcgetattr@plt+0x56e4>
   169e0:	rsb	r3, r5, #-2147483648	; 0x80000000
   169e4:	cmp	r9, r3
   169e8:	movge	r3, #0
   169ec:	movlt	r3, #1
   169f0:	b	16878 <tcgetattr@plt+0x56e4>
   169f4:	cmp	r5, #0
   169f8:	blt	16a20 <tcgetattr@plt+0x588c>
   169fc:	cmn	r6, #1
   16a00:	beq	16a3c <tcgetattr@plt+0x58a8>
   16a04:	mov	r1, r6
   16a08:	mov	r0, #-2147483648	; 0x80000000
   16a0c:	bl	17ee8 <tcgetattr@plt+0x6d54>
   16a10:	cmp	r5, r0
   16a14:	movle	r0, #0
   16a18:	movgt	r0, #1
   16a1c:	b	168cc <tcgetattr@plt+0x5738>
   16a20:	mov	r1, r6
   16a24:	mvn	r0, #-2147483648	; 0x80000000
   16a28:	bl	17ee8 <tcgetattr@plt+0x6d54>
   16a2c:	cmp	r5, r0
   16a30:	movge	r0, #0
   16a34:	movlt	r0, #1
   16a38:	b	168cc <tcgetattr@plt+0x5738>
   16a3c:	add	r0, r5, #-2147483648	; 0x80000000
   16a40:	cmp	r0, #0
   16a44:	movle	r0, #0
   16a48:	movgt	r0, #1
   16a4c:	b	168cc <tcgetattr@plt+0x5738>
   16a50:	cmn	r5, #1
   16a54:	beq	16a74 <tcgetattr@plt+0x58e0>
   16a58:	mov	r1, r5
   16a5c:	mov	r0, #-2147483648	; 0x80000000
   16a60:	bl	17ee8 <tcgetattr@plt+0x6d54>
   16a64:	cmp	r6, r0
   16a68:	movle	r0, #0
   16a6c:	movgt	r0, #1
   16a70:	b	168cc <tcgetattr@plt+0x5738>
   16a74:	add	r0, r6, #-2147483648	; 0x80000000
   16a78:	cmp	r0, #0
   16a7c:	movle	r0, #0
   16a80:	movgt	r0, #1
   16a84:	b	168cc <tcgetattr@plt+0x5738>
   16a88:	bl	16b64 <tcgetattr@plt+0x59d0>
   16a8c:	push	{r4, lr}
   16a90:	bl	17800 <tcgetattr@plt+0x666c>
   16a94:	cmp	r0, #0
   16a98:	popne	{r4, pc}
   16a9c:	bl	16b64 <tcgetattr@plt+0x59d0>
   16aa0:	push	{r4, lr}
   16aa4:	mov	r1, #1
   16aa8:	bl	16a8c <tcgetattr@plt+0x58f8>
   16aac:	pop	{r4, pc}
   16ab0:	push	{r4, lr}
   16ab4:	bl	17800 <tcgetattr@plt+0x666c>
   16ab8:	cmp	r0, #0
   16abc:	popne	{r4, pc}
   16ac0:	bl	16b64 <tcgetattr@plt+0x59d0>
   16ac4:	push	{r4, lr}
   16ac8:	mov	r1, #1
   16acc:	bl	16ab0 <tcgetattr@plt+0x591c>
   16ad0:	pop	{r4, pc}
   16ad4:	push	{r4, r5, r6, lr}
   16ad8:	mov	r5, r0
   16adc:	mov	r4, r1
   16ae0:	mov	r0, r1
   16ae4:	bl	165c0 <tcgetattr@plt+0x542c>
   16ae8:	mov	r2, r4
   16aec:	mov	r1, r5
   16af0:	bl	10f18 <memcpy@plt>
   16af4:	pop	{r4, r5, r6, pc}
   16af8:	push	{r4, r5, r6, lr}
   16afc:	mov	r5, r0
   16b00:	mov	r4, r1
   16b04:	mov	r0, r1
   16b08:	bl	165d4 <tcgetattr@plt+0x5440>
   16b0c:	mov	r2, r4
   16b10:	mov	r1, r5
   16b14:	bl	10f18 <memcpy@plt>
   16b18:	pop	{r4, r5, r6, pc}
   16b1c:	push	{r4, r5, r6, lr}
   16b20:	mov	r5, r0
   16b24:	mov	r4, r1
   16b28:	add	r0, r1, #1
   16b2c:	bl	165d4 <tcgetattr@plt+0x5440>
   16b30:	mov	r2, #0
   16b34:	strb	r2, [r0, r4]
   16b38:	mov	r2, r4
   16b3c:	mov	r1, r5
   16b40:	bl	10f18 <memcpy@plt>
   16b44:	pop	{r4, r5, r6, pc}
   16b48:	push	{r4, lr}
   16b4c:	mov	r4, r0
   16b50:	bl	11080 <strlen@plt>
   16b54:	add	r1, r0, #1
   16b58:	mov	r0, r4
   16b5c:	bl	16ad4 <tcgetattr@plt+0x5940>
   16b60:	pop	{r4, pc}
   16b64:	push	{r4, lr}
   16b68:	ldr	r3, [pc, #40]	; 16b98 <tcgetattr@plt+0x5a04>
   16b6c:	ldr	r4, [r3]
   16b70:	mov	r2, #5
   16b74:	ldr	r1, [pc, #32]	; 16b9c <tcgetattr@plt+0x5a08>
   16b78:	mov	r0, #0
   16b7c:	bl	10f54 <dcgettext@plt>
   16b80:	mov	r3, r0
   16b84:	ldr	r2, [pc, #20]	; 16ba0 <tcgetattr@plt+0x5a0c>
   16b88:	mov	r1, #0
   16b8c:	mov	r0, r4
   16b90:	bl	10ffc <error@plt>
   16b94:	bl	11170 <abort@plt>
   16b98:	andeq	ip, r2, r8, lsl r1
   16b9c:	andeq	fp, r1, r4, ror #19
   16ba0:	andeq	fp, r1, ip, lsr #11
   16ba4:	push	{r4, r5, r6, r7, lr}
   16ba8:	sub	sp, sp, #20
   16bac:	mov	r7, r0
   16bb0:	mov	r4, r2
   16bb4:	mov	r5, r3
   16bb8:	ldr	r6, [sp, #56]	; 0x38
   16bbc:	ldr	r3, [sp, #48]	; 0x30
   16bc0:	str	r3, [sp]
   16bc4:	add	r3, sp, #8
   16bc8:	mov	r2, r1
   16bcc:	mov	r1, #0
   16bd0:	bl	17380 <tcgetattr@plt+0x61ec>
   16bd4:	cmp	r0, #0
   16bd8:	bne	16c58 <tcgetattr@plt+0x5ac4>
   16bdc:	ldrd	r0, [sp, #8]
   16be0:	ldrd	r2, [sp, #40]	; 0x28
   16be4:	cmp	r1, r3
   16be8:	cmpeq	r0, r2
   16bec:	movhi	r3, #1
   16bf0:	movls	r3, #0
   16bf4:	cmp	r1, r5
   16bf8:	cmpeq	r0, r4
   16bfc:	orrcc	r3, r3, #1
   16c00:	cmp	r3, #0
   16c04:	beq	16cd0 <tcgetattr@plt+0x5b3c>
   16c08:	mvn	r2, #-1073741824	; 0xc0000000
   16c0c:	mov	r3, #0
   16c10:	cmp	r1, r3
   16c14:	cmpeq	r0, r2
   16c18:	bls	16c48 <tcgetattr@plt+0x5ab4>
   16c1c:	bl	110b0 <__errno_location@plt>
   16c20:	mov	r3, #75	; 0x4b
   16c24:	str	r3, [r0]
   16c28:	cmp	r6, #0
   16c2c:	bne	16ca8 <tcgetattr@plt+0x5b14>
   16c30:	mov	r6, #1
   16c34:	bl	110b0 <__errno_location@plt>
   16c38:	ldr	r4, [r0]
   16c3c:	cmp	r4, #22
   16c40:	moveq	r4, #0
   16c44:	b	16cb0 <tcgetattr@plt+0x5b1c>
   16c48:	bl	110b0 <__errno_location@plt>
   16c4c:	mov	r3, #34	; 0x22
   16c50:	str	r3, [r0]
   16c54:	b	16c28 <tcgetattr@plt+0x5a94>
   16c58:	cmp	r0, #1
   16c5c:	beq	16c74 <tcgetattr@plt+0x5ae0>
   16c60:	cmp	r0, #3
   16c64:	beq	16c98 <tcgetattr@plt+0x5b04>
   16c68:	cmp	r6, #0
   16c6c:	moveq	r6, #1
   16c70:	b	16c34 <tcgetattr@plt+0x5aa0>
   16c74:	bl	110b0 <__errno_location@plt>
   16c78:	mov	r3, #75	; 0x4b
   16c7c:	str	r3, [r0]
   16c80:	cmp	r6, #0
   16c84:	bne	16c34 <tcgetattr@plt+0x5aa0>
   16c88:	bl	110b0 <__errno_location@plt>
   16c8c:	ldr	r4, [r0]
   16c90:	mov	r6, #1
   16c94:	b	16cb0 <tcgetattr@plt+0x5b1c>
   16c98:	bl	110b0 <__errno_location@plt>
   16c9c:	mov	r3, #0
   16ca0:	str	r3, [r0]
   16ca4:	b	16c80 <tcgetattr@plt+0x5aec>
   16ca8:	bl	110b0 <__errno_location@plt>
   16cac:	ldr	r4, [r0]
   16cb0:	mov	r0, r7
   16cb4:	bl	16028 <tcgetattr@plt+0x4e94>
   16cb8:	str	r0, [sp]
   16cbc:	ldr	r3, [sp, #52]	; 0x34
   16cc0:	ldr	r2, [pc, #16]	; 16cd8 <tcgetattr@plt+0x5b44>
   16cc4:	mov	r1, r4
   16cc8:	mov	r0, r6
   16ccc:	bl	10ffc <error@plt>
   16cd0:	add	sp, sp, #20
   16cd4:	pop	{r4, r5, r6, r7, pc}
   16cd8:	andeq	fp, r1, r8, lsr #11
   16cdc:	push	{r4, r5, lr}
   16ce0:	sub	sp, sp, #28
   16ce4:	ldr	r1, [sp, #56]	; 0x38
   16ce8:	str	r1, [sp, #16]
   16cec:	ldr	r1, [sp, #52]	; 0x34
   16cf0:	str	r1, [sp, #12]
   16cf4:	ldr	r1, [sp, #48]	; 0x30
   16cf8:	str	r1, [sp, #8]
   16cfc:	ldrd	r4, [sp, #40]	; 0x28
   16d00:	strd	r4, [sp]
   16d04:	mov	r1, #10
   16d08:	bl	16ba4 <tcgetattr@plt+0x5a10>
   16d0c:	add	sp, sp, #28
   16d10:	pop	{r4, r5, pc}
   16d14:	push	{r4, r5, r6, lr}
   16d18:	mov	r5, r0
   16d1c:	subs	r6, r1, #0
   16d20:	blt	16d68 <tcgetattr@plt+0x5bd4>
   16d24:	cmp	r6, #0
   16d28:	beq	16dbc <tcgetattr@plt+0x5c28>
   16d2c:	ldr	r4, [r0]
   16d30:	cmp	r4, #0
   16d34:	blt	16de4 <tcgetattr@plt+0x5c50>
   16d38:	mov	r1, r6
   16d3c:	mvn	r0, #-2147483648	; 0x80000000
   16d40:	bl	17ee8 <tcgetattr@plt+0x6d54>
   16d44:	cmp	r4, r0
   16d48:	movle	r0, #0
   16d4c:	movgt	r0, #1
   16d50:	cmp	r0, #0
   16d54:	mvnne	r3, #-2147483648	; 0x80000000
   16d58:	beq	16dbc <tcgetattr@plt+0x5c28>
   16d5c:	str	r3, [r5]
   16d60:	mov	r0, #1
   16d64:	pop	{r4, r5, r6, pc}
   16d68:	ldr	r4, [r0]
   16d6c:	cmp	r4, #0
   16d70:	blt	16d98 <tcgetattr@plt+0x5c04>
   16d74:	cmn	r6, #1
   16d78:	beq	16dd0 <tcgetattr@plt+0x5c3c>
   16d7c:	mov	r1, r6
   16d80:	mov	r0, #-2147483648	; 0x80000000
   16d84:	bl	17ee8 <tcgetattr@plt+0x6d54>
   16d88:	cmp	r4, r0
   16d8c:	movle	r0, #0
   16d90:	movgt	r0, #1
   16d94:	b	16d50 <tcgetattr@plt+0x5bbc>
   16d98:	mov	r1, r6
   16d9c:	mvn	r0, #-2147483648	; 0x80000000
   16da0:	bl	17ee8 <tcgetattr@plt+0x6d54>
   16da4:	cmp	r4, r0
   16da8:	movge	r0, #0
   16dac:	movlt	r0, #1
   16db0:	cmp	r0, #0
   16db4:	movne	r3, #-2147483648	; 0x80000000
   16db8:	bne	16d5c <tcgetattr@plt+0x5bc8>
   16dbc:	ldr	r3, [r5]
   16dc0:	mul	r6, r6, r3
   16dc4:	str	r6, [r5]
   16dc8:	mov	r0, #0
   16dcc:	pop	{r4, r5, r6, pc}
   16dd0:	add	r0, r4, #-2147483648	; 0x80000000
   16dd4:	cmp	r0, #0
   16dd8:	movle	r0, #0
   16ddc:	movgt	r0, #1
   16de0:	b	16d50 <tcgetattr@plt+0x5bbc>
   16de4:	cmn	r4, #1
   16de8:	beq	16e08 <tcgetattr@plt+0x5c74>
   16dec:	mov	r1, r4
   16df0:	mov	r0, #-2147483648	; 0x80000000
   16df4:	bl	17ee8 <tcgetattr@plt+0x6d54>
   16df8:	cmp	r6, r0
   16dfc:	movle	r0, #0
   16e00:	movgt	r0, #1
   16e04:	b	16db0 <tcgetattr@plt+0x5c1c>
   16e08:	add	r0, r6, #-2147483648	; 0x80000000
   16e0c:	cmp	r0, #0
   16e10:	movle	r0, #0
   16e14:	movgt	r0, #1
   16e18:	b	16db0 <tcgetattr@plt+0x5c1c>
   16e1c:	push	{r4, r5, r6, r7, r8, lr}
   16e20:	subs	r4, r2, #0
   16e24:	beq	16e54 <tcgetattr@plt+0x5cc0>
   16e28:	mov	r7, r1
   16e2c:	mov	r6, r0
   16e30:	mov	r5, #0
   16e34:	mov	r1, r7
   16e38:	mov	r0, r6
   16e3c:	bl	16d14 <tcgetattr@plt+0x5b80>
   16e40:	orr	r5, r5, r0
   16e44:	subs	r4, r4, #1
   16e48:	bne	16e34 <tcgetattr@plt+0x5ca0>
   16e4c:	mov	r0, r5
   16e50:	pop	{r4, r5, r6, r7, r8, pc}
   16e54:	mov	r5, #0
   16e58:	b	16e4c <tcgetattr@plt+0x5cb8>
   16e5c:	push	{r4, r5, r6, r7, r8, lr}
   16e60:	sub	sp, sp, #8
   16e64:	cmp	r2, #36	; 0x24
   16e68:	bhi	16ed4 <tcgetattr@plt+0x5d40>
   16e6c:	mov	r6, r0
   16e70:	mov	r4, r1
   16e74:	mov	r5, r2
   16e78:	mov	r8, r3
   16e7c:	cmp	r1, #0
   16e80:	addeq	r4, sp, #4
   16e84:	bl	110b0 <__errno_location@plt>
   16e88:	mov	r7, r0
   16e8c:	mov	r3, #0
   16e90:	str	r3, [r0]
   16e94:	mov	r2, r5
   16e98:	mov	r1, r4
   16e9c:	mov	r0, r6
   16ea0:	bl	10ee8 <strtol@plt>
   16ea4:	str	r0, [sp]
   16ea8:	ldr	r5, [r4]
   16eac:	cmp	r6, r5
   16eb0:	beq	16ee8 <tcgetattr@plt+0x5d54>
   16eb4:	ldr	r3, [r7]
   16eb8:	cmp	r3, #0
   16ebc:	beq	16f2c <tcgetattr@plt+0x5d98>
   16ec0:	cmp	r3, #34	; 0x22
   16ec4:	moveq	r6, #1
   16ec8:	beq	16f30 <tcgetattr@plt+0x5d9c>
   16ecc:	mov	r6, #4
   16ed0:	b	17280 <tcgetattr@plt+0x60ec>
   16ed4:	ldr	r3, [pc, #944]	; 1728c <tcgetattr@plt+0x60f8>
   16ed8:	mov	r2, #85	; 0x55
   16edc:	ldr	r1, [pc, #940]	; 17290 <tcgetattr@plt+0x60fc>
   16ee0:	ldr	r0, [pc, #940]	; 17294 <tcgetattr@plt+0x6100>
   16ee4:	bl	11188 <__assert_fail@plt>
   16ee8:	ldr	r3, [sp, #32]
   16eec:	cmp	r3, #0
   16ef0:	moveq	r6, #4
   16ef4:	beq	17280 <tcgetattr@plt+0x60ec>
   16ef8:	ldrb	r1, [r5]
   16efc:	cmp	r1, #0
   16f00:	moveq	r6, #4
   16f04:	beq	17280 <tcgetattr@plt+0x60ec>
   16f08:	mov	r0, r3
   16f0c:	bl	1108c <strchr@plt>
   16f10:	cmp	r0, #0
   16f14:	moveq	r6, #4
   16f18:	beq	17280 <tcgetattr@plt+0x60ec>
   16f1c:	mov	r3, #1
   16f20:	str	r3, [sp]
   16f24:	mov	r6, #0
   16f28:	b	16f40 <tcgetattr@plt+0x5dac>
   16f2c:	mov	r6, #0
   16f30:	ldr	r3, [sp, #32]
   16f34:	cmp	r3, #0
   16f38:	streq	r0, [r8]
   16f3c:	beq	17280 <tcgetattr@plt+0x60ec>
   16f40:	ldrb	r7, [r5]
   16f44:	cmp	r7, #0
   16f48:	beq	17278 <tcgetattr@plt+0x60e4>
   16f4c:	mov	r1, r7
   16f50:	ldr	r0, [sp, #32]
   16f54:	bl	1108c <strchr@plt>
   16f58:	cmp	r0, #0
   16f5c:	beq	17030 <tcgetattr@plt+0x5e9c>
   16f60:	sub	r3, r7, #69	; 0x45
   16f64:	cmp	r3, #47	; 0x2f
   16f68:	ldrls	pc, [pc, r3, lsl #2]
   16f6c:	b	1709c <tcgetattr@plt+0x5f08>
   16f70:	andeq	r7, r1, r0, asr #32
   16f74:	muleq	r1, ip, r0
   16f78:	andeq	r7, r1, r0, asr #32
   16f7c:	muleq	r1, ip, r0
   16f80:	muleq	r1, ip, r0
   16f84:	muleq	r1, ip, r0
   16f88:	andeq	r7, r1, r0, asr #32
   16f8c:	muleq	r1, ip, r0
   16f90:	andeq	r7, r1, r0, asr #32
   16f94:	muleq	r1, ip, r0
   16f98:	muleq	r1, ip, r0
   16f9c:	andeq	r7, r1, r0, asr #32
   16fa0:	muleq	r1, ip, r0
   16fa4:	muleq	r1, ip, r0
   16fa8:	muleq	r1, ip, r0
   16fac:	andeq	r7, r1, r0, asr #32
   16fb0:	muleq	r1, ip, r0
   16fb4:	muleq	r1, ip, r0
   16fb8:	muleq	r1, ip, r0
   16fbc:	muleq	r1, ip, r0
   16fc0:	andeq	r7, r1, r0, asr #32
   16fc4:	andeq	r7, r1, r0, asr #32
   16fc8:	muleq	r1, ip, r0
   16fcc:	muleq	r1, ip, r0
   16fd0:	muleq	r1, ip, r0
   16fd4:	muleq	r1, ip, r0
   16fd8:	muleq	r1, ip, r0
   16fdc:	muleq	r1, ip, r0
   16fe0:	muleq	r1, ip, r0
   16fe4:	muleq	r1, ip, r0
   16fe8:	muleq	r1, ip, r0
   16fec:	muleq	r1, ip, r0
   16ff0:	muleq	r1, ip, r0
   16ff4:	muleq	r1, ip, r0
   16ff8:	andeq	r7, r1, r0, asr #32
   16ffc:	muleq	r1, ip, r0
   17000:	muleq	r1, ip, r0
   17004:	muleq	r1, ip, r0
   17008:	andeq	r7, r1, r0, asr #32
   1700c:	muleq	r1, ip, r0
   17010:	andeq	r7, r1, r0, asr #32
   17014:	muleq	r1, ip, r0
   17018:	muleq	r1, ip, r0
   1701c:	muleq	r1, ip, r0
   17020:	muleq	r1, ip, r0
   17024:	muleq	r1, ip, r0
   17028:	muleq	r1, ip, r0
   1702c:	andeq	r7, r1, r0, asr #32
   17030:	ldr	r3, [sp]
   17034:	str	r3, [r8]
   17038:	orr	r6, r6, #2
   1703c:	b	17280 <tcgetattr@plt+0x60ec>
   17040:	mov	r1, #48	; 0x30
   17044:	ldr	r0, [sp, #32]
   17048:	bl	1108c <strchr@plt>
   1704c:	cmp	r0, #0
   17050:	beq	1718c <tcgetattr@plt+0x5ff8>
   17054:	ldrb	r3, [r5, #1]
   17058:	cmp	r3, #68	; 0x44
   1705c:	beq	17078 <tcgetattr@plt+0x5ee4>
   17060:	cmp	r3, #105	; 0x69
   17064:	beq	17084 <tcgetattr@plt+0x5ef0>
   17068:	cmp	r3, #66	; 0x42
   1706c:	movne	r5, #1
   17070:	movne	r1, #1024	; 0x400
   17074:	bne	170a4 <tcgetattr@plt+0x5f10>
   17078:	mov	r5, #2
   1707c:	mov	r1, #1000	; 0x3e8
   17080:	b	170a4 <tcgetattr@plt+0x5f10>
   17084:	ldrb	r5, [r5, #2]
   17088:	cmp	r5, #66	; 0x42
   1708c:	movne	r5, #1
   17090:	moveq	r5, #3
   17094:	mov	r1, #1024	; 0x400
   17098:	b	170a4 <tcgetattr@plt+0x5f10>
   1709c:	mov	r5, #1
   170a0:	mov	r1, #1024	; 0x400
   170a4:	sub	r7, r7, #66	; 0x42
   170a8:	cmp	r7, #53	; 0x35
   170ac:	ldrls	pc, [pc, r7, lsl #2]
   170b0:	b	17248 <tcgetattr@plt+0x60b4>
   170b4:	andeq	r7, r1, r8, lsr #3
   170b8:	andeq	r7, r1, r8, asr #4
   170bc:	andeq	r7, r1, r8, asr #4
   170c0:			; <UNDEFINED> instruction: 0x000171b8
   170c4:	andeq	r7, r1, r8, asr #4
   170c8:	andeq	r7, r1, r8, asr #3
   170cc:	andeq	r7, r1, r8, asr #4
   170d0:	andeq	r7, r1, r8, asr #4
   170d4:	andeq	r7, r1, r8, asr #4
   170d8:	ldrdeq	r7, [r1], -r8
   170dc:	andeq	r7, r1, r8, asr #4
   170e0:	andeq	r7, r1, r8, ror #3
   170e4:	andeq	r7, r1, r8, asr #4
   170e8:	andeq	r7, r1, r8, asr #4
   170ec:	strdeq	r7, [r1], -r8
   170f0:	andeq	r7, r1, r8, asr #4
   170f4:	andeq	r7, r1, r8, asr #4
   170f8:	andeq	r7, r1, r8, asr #4
   170fc:	andeq	r7, r1, r8, lsl #4
   17100:	andeq	r7, r1, r8, asr #4
   17104:	andeq	r7, r1, r8, asr #4
   17108:	andeq	r7, r1, r8, asr #4
   1710c:	andeq	r7, r1, r8, asr #4
   17110:	andeq	r7, r1, r8, lsr #4
   17114:	andeq	r7, r1, r8, lsr r2
   17118:	andeq	r7, r1, r8, asr #4
   1711c:	andeq	r7, r1, r8, asr #4
   17120:	andeq	r7, r1, r8, asr #4
   17124:	andeq	r7, r1, r8, asr #4
   17128:	andeq	r7, r1, r8, asr #4
   1712c:	andeq	r7, r1, r8, asr #4
   17130:	andeq	r7, r1, r8, asr #4
   17134:	muleq	r1, r8, r1
   17138:	andeq	r7, r1, r8, asr r2
   1713c:	andeq	r7, r1, r8, asr #4
   17140:	andeq	r7, r1, r8, asr #4
   17144:	andeq	r7, r1, r8, asr #4
   17148:	andeq	r7, r1, r8, asr #3
   1714c:	andeq	r7, r1, r8, asr #4
   17150:	andeq	r7, r1, r8, asr #4
   17154:	andeq	r7, r1, r8, asr #4
   17158:	ldrdeq	r7, [r1], -r8
   1715c:	andeq	r7, r1, r8, asr #4
   17160:	andeq	r7, r1, r8, ror #3
   17164:	andeq	r7, r1, r8, asr #4
   17168:	andeq	r7, r1, r8, asr #4
   1716c:	andeq	r7, r1, r8, asr #4
   17170:	andeq	r7, r1, r8, asr #4
   17174:	andeq	r7, r1, r8, asr #4
   17178:	andeq	r7, r1, r8, asr #4
   1717c:	andeq	r7, r1, r8, lsl #4
   17180:	andeq	r7, r1, r8, asr #4
   17184:	andeq	r7, r1, r8, asr #4
   17188:	andeq	r7, r1, r8, lsl r2
   1718c:	mov	r5, #1
   17190:	mov	r1, #1024	; 0x400
   17194:	b	170a4 <tcgetattr@plt+0x5f10>
   17198:	mov	r1, #512	; 0x200
   1719c:	mov	r0, sp
   171a0:	bl	16d14 <tcgetattr@plt+0x5b80>
   171a4:	b	1725c <tcgetattr@plt+0x60c8>
   171a8:	mov	r1, #1024	; 0x400
   171ac:	mov	r0, sp
   171b0:	bl	16d14 <tcgetattr@plt+0x5b80>
   171b4:	b	1725c <tcgetattr@plt+0x60c8>
   171b8:	mov	r2, #6
   171bc:	mov	r0, sp
   171c0:	bl	16e1c <tcgetattr@plt+0x5c88>
   171c4:	b	1725c <tcgetattr@plt+0x60c8>
   171c8:	mov	r2, #3
   171cc:	mov	r0, sp
   171d0:	bl	16e1c <tcgetattr@plt+0x5c88>
   171d4:	b	1725c <tcgetattr@plt+0x60c8>
   171d8:	mov	r2, #1
   171dc:	mov	r0, sp
   171e0:	bl	16e1c <tcgetattr@plt+0x5c88>
   171e4:	b	1725c <tcgetattr@plt+0x60c8>
   171e8:	mov	r2, #2
   171ec:	mov	r0, sp
   171f0:	bl	16e1c <tcgetattr@plt+0x5c88>
   171f4:	b	1725c <tcgetattr@plt+0x60c8>
   171f8:	mov	r2, #5
   171fc:	mov	r0, sp
   17200:	bl	16e1c <tcgetattr@plt+0x5c88>
   17204:	b	1725c <tcgetattr@plt+0x60c8>
   17208:	mov	r2, #4
   1720c:	mov	r0, sp
   17210:	bl	16e1c <tcgetattr@plt+0x5c88>
   17214:	b	1725c <tcgetattr@plt+0x60c8>
   17218:	mov	r1, #2
   1721c:	mov	r0, sp
   17220:	bl	16d14 <tcgetattr@plt+0x5b80>
   17224:	b	1725c <tcgetattr@plt+0x60c8>
   17228:	mov	r2, #8
   1722c:	mov	r0, sp
   17230:	bl	16e1c <tcgetattr@plt+0x5c88>
   17234:	b	1725c <tcgetattr@plt+0x60c8>
   17238:	mov	r2, #7
   1723c:	mov	r0, sp
   17240:	bl	16e1c <tcgetattr@plt+0x5c88>
   17244:	b	1725c <tcgetattr@plt+0x60c8>
   17248:	ldr	r3, [sp]
   1724c:	str	r3, [r8]
   17250:	orr	r6, r6, #2
   17254:	b	17280 <tcgetattr@plt+0x60ec>
   17258:	mov	r0, #0
   1725c:	orr	r6, r6, r0
   17260:	ldr	r3, [r4]
   17264:	add	r2, r3, r5
   17268:	str	r2, [r4]
   1726c:	ldrb	r3, [r3, r5]
   17270:	cmp	r3, #0
   17274:	orrne	r6, r6, #2
   17278:	ldr	r3, [sp]
   1727c:	str	r3, [r8]
   17280:	mov	r0, r6
   17284:	add	sp, sp, #8
   17288:	pop	{r4, r5, r6, r7, r8, pc}
   1728c:	strdeq	fp, [r1], -r8
   17290:	andeq	fp, r1, r0, lsl #20
   17294:	andeq	fp, r1, r0, lsl sl
   17298:	push	{r4, r5, r6, lr}
   1729c:	mov	r5, r0
   172a0:	subs	r4, r1, #0
   172a4:	blt	172f8 <tcgetattr@plt+0x6164>
   172a8:	cmp	r4, #0
   172ac:	moveq	r3, #0
   172b0:	beq	172dc <tcgetattr@plt+0x6148>
   172b4:	mov	r2, r4
   172b8:	asr	r3, r4, #31
   172bc:	mvn	r0, #0
   172c0:	mvn	r1, #0
   172c4:	bl	18128 <tcgetattr@plt+0x6f94>
   172c8:	ldrd	r2, [r5]
   172cc:	cmp	r1, r3
   172d0:	cmpeq	r0, r2
   172d4:	movcc	r3, #1
   172d8:	movcs	r3, #0
   172dc:	cmp	r3, #0
   172e0:	beq	17318 <tcgetattr@plt+0x6184>
   172e4:	mvn	r2, #0
   172e8:	mvn	r3, #0
   172ec:	strd	r2, [r5]
   172f0:	mov	r0, #1
   172f4:	pop	{r4, r5, r6, pc}
   172f8:	mov	r1, r4
   172fc:	mov	r0, #0
   17300:	bl	17ee8 <tcgetattr@plt+0x6d54>
   17304:	ldrd	r2, [r5]
   17308:	orrs	r3, r2, r3
   1730c:	movne	r3, #1
   17310:	moveq	r3, #0
   17314:	b	172dc <tcgetattr@plt+0x6148>
   17318:	asr	r3, r4, #31
   1731c:	ldr	r1, [r5, #4]
   17320:	ldr	r2, [r5]
   17324:	mul	r3, r3, r2
   17328:	mla	r1, r4, r1, r3
   1732c:	umull	r2, r3, r2, r4
   17330:	add	r3, r1, r3
   17334:	strd	r2, [r5]
   17338:	mov	r0, #0
   1733c:	pop	{r4, r5, r6, pc}
   17340:	push	{r4, r5, r6, r7, r8, lr}
   17344:	subs	r4, r2, #0
   17348:	beq	17378 <tcgetattr@plt+0x61e4>
   1734c:	mov	r7, r1
   17350:	mov	r6, r0
   17354:	mov	r5, #0
   17358:	mov	r1, r7
   1735c:	mov	r0, r6
   17360:	bl	17298 <tcgetattr@plt+0x6104>
   17364:	orr	r5, r5, r0
   17368:	subs	r4, r4, #1
   1736c:	bne	17358 <tcgetattr@plt+0x61c4>
   17370:	mov	r0, r5
   17374:	pop	{r4, r5, r6, r7, r8, pc}
   17378:	mov	r5, #0
   1737c:	b	17370 <tcgetattr@plt+0x61dc>
   17380:	push	{r4, r5, r6, r7, r8, r9, lr}
   17384:	sub	sp, sp, #20
   17388:	cmp	r2, #36	; 0x24
   1738c:	bhi	173cc <tcgetattr@plt+0x6238>
   17390:	mov	r5, r0
   17394:	mov	r6, r1
   17398:	mov	r7, r2
   1739c:	mov	r9, r3
   173a0:	cmp	r1, #0
   173a4:	addeq	r6, sp, #12
   173a8:	bl	110b0 <__errno_location@plt>
   173ac:	mov	r8, r0
   173b0:	mov	r3, #0
   173b4:	str	r3, [r0]
   173b8:	ldrb	r4, [r5]
   173bc:	bl	1105c <__ctype_b_loc@plt>
   173c0:	ldr	r1, [r0]
   173c4:	mov	r2, r5
   173c8:	b	173e4 <tcgetattr@plt+0x6250>
   173cc:	ldr	r3, [pc, #1056]	; 177f4 <tcgetattr@plt+0x6660>
   173d0:	mov	r2, #85	; 0x55
   173d4:	ldr	r1, [pc, #1052]	; 177f8 <tcgetattr@plt+0x6664>
   173d8:	ldr	r0, [pc, #1052]	; 177fc <tcgetattr@plt+0x6668>
   173dc:	bl	11188 <__assert_fail@plt>
   173e0:	ldrb	r4, [r2, #1]!
   173e4:	lsl	r3, r4, #1
   173e8:	ldrh	r3, [r1, r3]
   173ec:	tst	r3, #8192	; 0x2000
   173f0:	bne	173e0 <tcgetattr@plt+0x624c>
   173f4:	cmp	r4, #45	; 0x2d
   173f8:	moveq	r4, #4
   173fc:	bne	1740c <tcgetattr@plt+0x6278>
   17400:	mov	r0, r4
   17404:	add	sp, sp, #20
   17408:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1740c:	mov	r3, #0
   17410:	mov	r2, r7
   17414:	mov	r1, r6
   17418:	mov	r0, r5
   1741c:	bl	10f24 <__strtoull_internal@plt>
   17420:	strd	r0, [sp]
   17424:	ldr	r7, [r6]
   17428:	cmp	r5, r7
   1742c:	beq	17450 <tcgetattr@plt+0x62bc>
   17430:	ldr	r3, [r8]
   17434:	cmp	r3, #0
   17438:	beq	17498 <tcgetattr@plt+0x6304>
   1743c:	cmp	r3, #34	; 0x22
   17440:	moveq	r4, #1
   17444:	beq	1749c <tcgetattr@plt+0x6308>
   17448:	mov	r4, #4
   1744c:	b	17400 <tcgetattr@plt+0x626c>
   17450:	ldr	r3, [sp, #48]	; 0x30
   17454:	cmp	r3, #0
   17458:	moveq	r4, #4
   1745c:	beq	17400 <tcgetattr@plt+0x626c>
   17460:	ldrb	r1, [r7]
   17464:	cmp	r1, #0
   17468:	moveq	r4, #4
   1746c:	beq	17400 <tcgetattr@plt+0x626c>
   17470:	mov	r0, r3
   17474:	bl	1108c <strchr@plt>
   17478:	cmp	r0, #0
   1747c:	moveq	r4, #4
   17480:	beq	17400 <tcgetattr@plt+0x626c>
   17484:	mov	r2, #1
   17488:	mov	r3, #0
   1748c:	strd	r2, [sp]
   17490:	mov	r4, #0
   17494:	b	174a8 <tcgetattr@plt+0x6314>
   17498:	mov	r4, #0
   1749c:	ldr	r3, [sp, #48]	; 0x30
   174a0:	cmp	r3, #0
   174a4:	beq	17598 <tcgetattr@plt+0x6404>
   174a8:	ldrb	r5, [r7]
   174ac:	cmp	r5, #0
   174b0:	beq	17730 <tcgetattr@plt+0x659c>
   174b4:	mov	r1, r5
   174b8:	ldr	r0, [sp, #48]	; 0x30
   174bc:	bl	1108c <strchr@plt>
   174c0:	cmp	r0, #0
   174c4:	beq	175a0 <tcgetattr@plt+0x640c>
   174c8:	sub	r3, r5, #69	; 0x45
   174cc:	cmp	r3, #47	; 0x2f
   174d0:	ldrls	pc, [pc, r3, lsl #2]
   174d4:	b	1760c <tcgetattr@plt+0x6478>
   174d8:			; <UNDEFINED> instruction: 0x000175b0
   174dc:	andeq	r7, r1, ip, lsl #12
   174e0:			; <UNDEFINED> instruction: 0x000175b0
   174e4:	andeq	r7, r1, ip, lsl #12
   174e8:	andeq	r7, r1, ip, lsl #12
   174ec:	andeq	r7, r1, ip, lsl #12
   174f0:			; <UNDEFINED> instruction: 0x000175b0
   174f4:	andeq	r7, r1, ip, lsl #12
   174f8:			; <UNDEFINED> instruction: 0x000175b0
   174fc:	andeq	r7, r1, ip, lsl #12
   17500:	andeq	r7, r1, ip, lsl #12
   17504:			; <UNDEFINED> instruction: 0x000175b0
   17508:	andeq	r7, r1, ip, lsl #12
   1750c:	andeq	r7, r1, ip, lsl #12
   17510:	andeq	r7, r1, ip, lsl #12
   17514:			; <UNDEFINED> instruction: 0x000175b0
   17518:	andeq	r7, r1, ip, lsl #12
   1751c:	andeq	r7, r1, ip, lsl #12
   17520:	andeq	r7, r1, ip, lsl #12
   17524:	andeq	r7, r1, ip, lsl #12
   17528:			; <UNDEFINED> instruction: 0x000175b0
   1752c:			; <UNDEFINED> instruction: 0x000175b0
   17530:	andeq	r7, r1, ip, lsl #12
   17534:	andeq	r7, r1, ip, lsl #12
   17538:	andeq	r7, r1, ip, lsl #12
   1753c:	andeq	r7, r1, ip, lsl #12
   17540:	andeq	r7, r1, ip, lsl #12
   17544:	andeq	r7, r1, ip, lsl #12
   17548:	andeq	r7, r1, ip, lsl #12
   1754c:	andeq	r7, r1, ip, lsl #12
   17550:	andeq	r7, r1, ip, lsl #12
   17554:	andeq	r7, r1, ip, lsl #12
   17558:	andeq	r7, r1, ip, lsl #12
   1755c:	andeq	r7, r1, ip, lsl #12
   17560:			; <UNDEFINED> instruction: 0x000175b0
   17564:	andeq	r7, r1, ip, lsl #12
   17568:	andeq	r7, r1, ip, lsl #12
   1756c:	andeq	r7, r1, ip, lsl #12
   17570:			; <UNDEFINED> instruction: 0x000175b0
   17574:	andeq	r7, r1, ip, lsl #12
   17578:			; <UNDEFINED> instruction: 0x000175b0
   1757c:	andeq	r7, r1, ip, lsl #12
   17580:	andeq	r7, r1, ip, lsl #12
   17584:	andeq	r7, r1, ip, lsl #12
   17588:	andeq	r7, r1, ip, lsl #12
   1758c:	andeq	r7, r1, ip, lsl #12
   17590:	andeq	r7, r1, ip, lsl #12
   17594:			; <UNDEFINED> instruction: 0x000175b0
   17598:	strd	r0, [r9]
   1759c:	b	17400 <tcgetattr@plt+0x626c>
   175a0:	ldrd	r2, [sp]
   175a4:	strd	r2, [r9]
   175a8:	orr	r4, r4, #2
   175ac:	b	17400 <tcgetattr@plt+0x626c>
   175b0:	mov	r1, #48	; 0x30
   175b4:	ldr	r0, [sp, #48]	; 0x30
   175b8:	bl	1108c <strchr@plt>
   175bc:	cmp	r0, #0
   175c0:	beq	176fc <tcgetattr@plt+0x6568>
   175c4:	ldrb	r3, [r7, #1]
   175c8:	cmp	r3, #68	; 0x44
   175cc:	beq	175e8 <tcgetattr@plt+0x6454>
   175d0:	cmp	r3, #105	; 0x69
   175d4:	beq	175f4 <tcgetattr@plt+0x6460>
   175d8:	cmp	r3, #66	; 0x42
   175dc:	movne	r7, #1
   175e0:	movne	r1, #1024	; 0x400
   175e4:	bne	17614 <tcgetattr@plt+0x6480>
   175e8:	mov	r7, #2
   175ec:	mov	r1, #1000	; 0x3e8
   175f0:	b	17614 <tcgetattr@plt+0x6480>
   175f4:	ldrb	r7, [r7, #2]
   175f8:	cmp	r7, #66	; 0x42
   175fc:	movne	r7, #1
   17600:	moveq	r7, #3
   17604:	mov	r1, #1024	; 0x400
   17608:	b	17614 <tcgetattr@plt+0x6480>
   1760c:	mov	r7, #1
   17610:	mov	r1, #1024	; 0x400
   17614:	sub	r5, r5, #66	; 0x42
   17618:	cmp	r5, #53	; 0x35
   1761c:	ldrls	pc, [pc, r5, lsl #2]
   17620:	b	177dc <tcgetattr@plt+0x6648>
   17624:	andeq	r7, r1, ip, lsr r7
   17628:	ldrdeq	r7, [r1], -ip
   1762c:	ldrdeq	r7, [r1], -ip
   17630:	andeq	r7, r1, ip, asr #14
   17634:	ldrdeq	r7, [r1], -ip
   17638:	andeq	r7, r1, ip, asr r7
   1763c:	ldrdeq	r7, [r1], -ip
   17640:	ldrdeq	r7, [r1], -ip
   17644:	ldrdeq	r7, [r1], -ip
   17648:	andeq	r7, r1, ip, ror #14
   1764c:	ldrdeq	r7, [r1], -ip
   17650:	andeq	r7, r1, ip, ror r7
   17654:	ldrdeq	r7, [r1], -ip
   17658:	ldrdeq	r7, [r1], -ip
   1765c:	andeq	r7, r1, ip, lsl #15
   17660:	ldrdeq	r7, [r1], -ip
   17664:	ldrdeq	r7, [r1], -ip
   17668:	ldrdeq	r7, [r1], -ip
   1766c:	muleq	r1, ip, r7
   17670:	ldrdeq	r7, [r1], -ip
   17674:	ldrdeq	r7, [r1], -ip
   17678:	ldrdeq	r7, [r1], -ip
   1767c:	ldrdeq	r7, [r1], -ip
   17680:			; <UNDEFINED> instruction: 0x000177bc
   17684:	andeq	r7, r1, ip, asr #15
   17688:	ldrdeq	r7, [r1], -ip
   1768c:	ldrdeq	r7, [r1], -ip
   17690:	ldrdeq	r7, [r1], -ip
   17694:	ldrdeq	r7, [r1], -ip
   17698:	ldrdeq	r7, [r1], -ip
   1769c:	ldrdeq	r7, [r1], -ip
   176a0:	ldrdeq	r7, [r1], -ip
   176a4:	andeq	r7, r1, r8, lsl #14
   176a8:	andeq	r7, r1, ip, ror #15
   176ac:	ldrdeq	r7, [r1], -ip
   176b0:	ldrdeq	r7, [r1], -ip
   176b4:	ldrdeq	r7, [r1], -ip
   176b8:	andeq	r7, r1, ip, asr r7
   176bc:	ldrdeq	r7, [r1], -ip
   176c0:	ldrdeq	r7, [r1], -ip
   176c4:	ldrdeq	r7, [r1], -ip
   176c8:	andeq	r7, r1, ip, ror #14
   176cc:	ldrdeq	r7, [r1], -ip
   176d0:	andeq	r7, r1, ip, ror r7
   176d4:	ldrdeq	r7, [r1], -ip
   176d8:	ldrdeq	r7, [r1], -ip
   176dc:	ldrdeq	r7, [r1], -ip
   176e0:	ldrdeq	r7, [r1], -ip
   176e4:	ldrdeq	r7, [r1], -ip
   176e8:	ldrdeq	r7, [r1], -ip
   176ec:	muleq	r1, ip, r7
   176f0:	ldrdeq	r7, [r1], -ip
   176f4:	ldrdeq	r7, [r1], -ip
   176f8:	andeq	r7, r1, ip, lsr #15
   176fc:	mov	r7, #1
   17700:	mov	r1, #1024	; 0x400
   17704:	b	17614 <tcgetattr@plt+0x6480>
   17708:	mov	r1, #512	; 0x200
   1770c:	mov	r0, sp
   17710:	bl	17298 <tcgetattr@plt+0x6104>
   17714:	orr	r4, r4, r0
   17718:	ldr	r3, [r6]
   1771c:	add	r2, r3, r7
   17720:	str	r2, [r6]
   17724:	ldrb	r3, [r3, r7]
   17728:	cmp	r3, #0
   1772c:	orrne	r4, r4, #2
   17730:	ldrd	r2, [sp]
   17734:	strd	r2, [r9]
   17738:	b	17400 <tcgetattr@plt+0x626c>
   1773c:	mov	r1, #1024	; 0x400
   17740:	mov	r0, sp
   17744:	bl	17298 <tcgetattr@plt+0x6104>
   17748:	b	17714 <tcgetattr@plt+0x6580>
   1774c:	mov	r2, #6
   17750:	mov	r0, sp
   17754:	bl	17340 <tcgetattr@plt+0x61ac>
   17758:	b	17714 <tcgetattr@plt+0x6580>
   1775c:	mov	r2, #3
   17760:	mov	r0, sp
   17764:	bl	17340 <tcgetattr@plt+0x61ac>
   17768:	b	17714 <tcgetattr@plt+0x6580>
   1776c:	mov	r2, #1
   17770:	mov	r0, sp
   17774:	bl	17340 <tcgetattr@plt+0x61ac>
   17778:	b	17714 <tcgetattr@plt+0x6580>
   1777c:	mov	r2, #2
   17780:	mov	r0, sp
   17784:	bl	17340 <tcgetattr@plt+0x61ac>
   17788:	b	17714 <tcgetattr@plt+0x6580>
   1778c:	mov	r2, #5
   17790:	mov	r0, sp
   17794:	bl	17340 <tcgetattr@plt+0x61ac>
   17798:	b	17714 <tcgetattr@plt+0x6580>
   1779c:	mov	r2, #4
   177a0:	mov	r0, sp
   177a4:	bl	17340 <tcgetattr@plt+0x61ac>
   177a8:	b	17714 <tcgetattr@plt+0x6580>
   177ac:	mov	r1, #2
   177b0:	mov	r0, sp
   177b4:	bl	17298 <tcgetattr@plt+0x6104>
   177b8:	b	17714 <tcgetattr@plt+0x6580>
   177bc:	mov	r2, #8
   177c0:	mov	r0, sp
   177c4:	bl	17340 <tcgetattr@plt+0x61ac>
   177c8:	b	17714 <tcgetattr@plt+0x6580>
   177cc:	mov	r2, #7
   177d0:	mov	r0, sp
   177d4:	bl	17340 <tcgetattr@plt+0x61ac>
   177d8:	b	17714 <tcgetattr@plt+0x6580>
   177dc:	ldrd	r2, [sp]
   177e0:	strd	r2, [r9]
   177e4:	orr	r4, r4, #2
   177e8:	b	17400 <tcgetattr@plt+0x626c>
   177ec:	mov	r0, #0
   177f0:	b	17714 <tcgetattr@plt+0x6580>
   177f4:	andeq	fp, r1, r8, lsr sl
   177f8:	andeq	fp, r1, r0, lsl #20
   177fc:	andeq	fp, r1, r0, lsl sl
   17800:	push	{r4, lr}
   17804:	mov	r2, r0
   17808:	mov	r3, r1
   1780c:	cmp	r1, #0
   17810:	cmpne	r0, #0
   17814:	moveq	r3, #1
   17818:	moveq	r2, r3
   1781c:	umull	r0, r1, r2, r3
   17820:	cmp	r0, #0
   17824:	cmpge	r1, #0
   17828:	bne	1783c <tcgetattr@plt+0x66a8>
   1782c:	mov	r1, r3
   17830:	mov	r0, r2
   17834:	bl	10eb8 <calloc@plt>
   17838:	pop	{r4, pc}
   1783c:	bl	110b0 <__errno_location@plt>
   17840:	mov	r3, #12
   17844:	str	r3, [r0]
   17848:	mov	r0, #0
   1784c:	pop	{r4, pc}
   17850:	push	{r4, lr}
   17854:	cmp	r0, #0
   17858:	moveq	r0, #1
   1785c:	cmp	r0, #0
   17860:	blt	1786c <tcgetattr@plt+0x66d8>
   17864:	bl	11020 <malloc@plt>
   17868:	pop	{r4, pc}
   1786c:	bl	110b0 <__errno_location@plt>
   17870:	mov	r3, #12
   17874:	str	r3, [r0]
   17878:	mov	r0, #0
   1787c:	pop	{r4, pc}
   17880:	push	{r4, lr}
   17884:	cmp	r0, #0
   17888:	beq	178a4 <tcgetattr@plt+0x6710>
   1788c:	cmp	r1, #0
   17890:	beq	178b0 <tcgetattr@plt+0x671c>
   17894:	cmp	r1, #0
   17898:	blt	178bc <tcgetattr@plt+0x6728>
   1789c:	bl	10f78 <realloc@plt>
   178a0:	pop	{r4, pc}
   178a4:	mov	r0, r1
   178a8:	bl	17850 <tcgetattr@plt+0x66bc>
   178ac:	pop	{r4, pc}
   178b0:	bl	14480 <tcgetattr@plt+0x32ec>
   178b4:	mov	r0, #0
   178b8:	pop	{r4, pc}
   178bc:	bl	110b0 <__errno_location@plt>
   178c0:	mov	r3, #12
   178c4:	str	r3, [r0]
   178c8:	mov	r0, #0
   178cc:	pop	{r4, pc}
   178d0:	push	{r4, r5, r6, lr}
   178d4:	mov	r5, r0
   178d8:	bl	10fe4 <__fpending@plt>
   178dc:	mov	r6, r0
   178e0:	ldr	r4, [r5]
   178e4:	and	r4, r4, #32
   178e8:	mov	r0, r5
   178ec:	bl	17948 <tcgetattr@plt+0x67b4>
   178f0:	cmp	r4, #0
   178f4:	bne	1791c <tcgetattr@plt+0x6788>
   178f8:	cmp	r0, #0
   178fc:	popeq	{r4, r5, r6, pc}
   17900:	cmp	r6, #0
   17904:	bne	17938 <tcgetattr@plt+0x67a4>
   17908:	bl	110b0 <__errno_location@plt>
   1790c:	ldr	r0, [r0]
   17910:	subs	r0, r0, #9
   17914:	mvnne	r0, #0
   17918:	pop	{r4, r5, r6, pc}
   1791c:	cmp	r0, #0
   17920:	bne	17940 <tcgetattr@plt+0x67ac>
   17924:	bl	110b0 <__errno_location@plt>
   17928:	mov	r3, #0
   1792c:	str	r3, [r0]
   17930:	mvn	r0, #0
   17934:	pop	{r4, r5, r6, pc}
   17938:	mvn	r0, #0
   1793c:	pop	{r4, r5, r6, pc}
   17940:	mvn	r0, #0
   17944:	pop	{r4, r5, r6, pc}
   17948:	push	{r4, r5, r6, lr}
   1794c:	sub	sp, sp, #8
   17950:	mov	r4, r0
   17954:	bl	110ec <fileno@plt>
   17958:	cmp	r0, #0
   1795c:	blt	179d4 <tcgetattr@plt+0x6840>
   17960:	mov	r0, r4
   17964:	bl	11038 <__freading@plt>
   17968:	cmp	r0, #0
   1796c:	beq	179a0 <tcgetattr@plt+0x680c>
   17970:	mov	r0, r4
   17974:	bl	110ec <fileno@plt>
   17978:	mov	r3, #1
   1797c:	str	r3, [sp]
   17980:	mov	r2, #0
   17984:	mov	r3, #0
   17988:	bl	10fc0 <lseek64@plt>
   1798c:	mvn	r2, #0
   17990:	mvn	r3, #0
   17994:	cmp	r1, r3
   17998:	cmpeq	r0, r2
   1799c:	beq	179e0 <tcgetattr@plt+0x684c>
   179a0:	mov	r0, r4
   179a4:	bl	179f0 <tcgetattr@plt+0x685c>
   179a8:	cmp	r0, #0
   179ac:	beq	179e0 <tcgetattr@plt+0x684c>
   179b0:	bl	110b0 <__errno_location@plt>
   179b4:	mov	r5, r0
   179b8:	ldr	r6, [r0]
   179bc:	mov	r0, r4
   179c0:	bl	11104 <fclose@plt>
   179c4:	cmp	r6, #0
   179c8:	strne	r6, [r5]
   179cc:	mvnne	r0, #0
   179d0:	b	179e8 <tcgetattr@plt+0x6854>
   179d4:	mov	r0, r4
   179d8:	bl	11104 <fclose@plt>
   179dc:	b	179e8 <tcgetattr@plt+0x6854>
   179e0:	mov	r0, r4
   179e4:	bl	11104 <fclose@plt>
   179e8:	add	sp, sp, #8
   179ec:	pop	{r4, r5, r6, pc}
   179f0:	push	{r4, lr}
   179f4:	sub	sp, sp, #8
   179f8:	subs	r4, r0, #0
   179fc:	beq	17a10 <tcgetattr@plt+0x687c>
   17a00:	mov	r0, r4
   17a04:	bl	11038 <__freading@plt>
   17a08:	cmp	r0, #0
   17a0c:	bne	17a20 <tcgetattr@plt+0x688c>
   17a10:	mov	r0, r4
   17a14:	bl	10ef4 <fflush@plt>
   17a18:	add	sp, sp, #8
   17a1c:	pop	{r4, pc}
   17a20:	ldr	r3, [r4]
   17a24:	tst	r3, #256	; 0x100
   17a28:	bne	17a38 <tcgetattr@plt+0x68a4>
   17a2c:	mov	r0, r4
   17a30:	bl	10ef4 <fflush@plt>
   17a34:	b	17a18 <tcgetattr@plt+0x6884>
   17a38:	mov	r3, #1
   17a3c:	str	r3, [sp]
   17a40:	mov	r2, #0
   17a44:	mov	r3, #0
   17a48:	mov	r0, r4
   17a4c:	bl	17a54 <tcgetattr@plt+0x68c0>
   17a50:	b	17a2c <tcgetattr@plt+0x6898>
   17a54:	push	{r4, r5, r6, r7, lr}
   17a58:	sub	sp, sp, #12
   17a5c:	mov	r4, r0
   17a60:	mov	r6, r2
   17a64:	mov	r7, r3
   17a68:	ldr	r5, [sp, #32]
   17a6c:	ldr	r2, [r0, #8]
   17a70:	ldr	r3, [r0, #4]
   17a74:	cmp	r2, r3
   17a78:	beq	17a98 <tcgetattr@plt+0x6904>
   17a7c:	str	r5, [sp]
   17a80:	mov	r2, r6
   17a84:	mov	r3, r7
   17a88:	mov	r0, r4
   17a8c:	bl	11110 <fseeko64@plt>
   17a90:	add	sp, sp, #12
   17a94:	pop	{r4, r5, r6, r7, pc}
   17a98:	ldr	r2, [r0, #20]
   17a9c:	ldr	r3, [r0, #16]
   17aa0:	cmp	r2, r3
   17aa4:	bne	17a7c <tcgetattr@plt+0x68e8>
   17aa8:	ldr	r3, [r0, #36]	; 0x24
   17aac:	cmp	r3, #0
   17ab0:	bne	17a7c <tcgetattr@plt+0x68e8>
   17ab4:	bl	110ec <fileno@plt>
   17ab8:	str	r5, [sp]
   17abc:	mov	r2, r6
   17ac0:	mov	r3, r7
   17ac4:	bl	10fc0 <lseek64@plt>
   17ac8:	mvn	r2, #0
   17acc:	mvn	r3, #0
   17ad0:	cmp	r1, r3
   17ad4:	cmpeq	r0, r2
   17ad8:	beq	17af4 <tcgetattr@plt+0x6960>
   17adc:	ldr	r3, [r4]
   17ae0:	bic	r3, r3, #16
   17ae4:	str	r3, [r4]
   17ae8:	strd	r0, [r4, #80]	; 0x50
   17aec:	mov	r0, #0
   17af0:	b	17a90 <tcgetattr@plt+0x68fc>
   17af4:	mvn	r0, #0
   17af8:	b	17a90 <tcgetattr@plt+0x68fc>
   17afc:	push	{r4, lr}
   17b00:	mov	r0, #14
   17b04:	bl	1114c <nl_langinfo@plt>
   17b08:	cmp	r0, #0
   17b0c:	beq	17b24 <tcgetattr@plt+0x6990>
   17b10:	ldrb	r2, [r0]
   17b14:	ldr	r3, [pc, #16]	; 17b2c <tcgetattr@plt+0x6998>
   17b18:	cmp	r2, #0
   17b1c:	moveq	r0, r3
   17b20:	pop	{r4, pc}
   17b24:	ldr	r0, [pc]	; 17b2c <tcgetattr@plt+0x6998>
   17b28:	pop	{r4, pc}
   17b2c:	andeq	fp, r1, r4, asr #20
   17b30:	push	{r4, r5, r6, r7, lr}
   17b34:	sub	sp, sp, #12
   17b38:	mov	r7, r1
   17b3c:	mov	r5, r2
   17b40:	subs	r6, r0, #0
   17b44:	addeq	r6, sp, #4
   17b48:	mov	r0, r6
   17b4c:	bl	10ff0 <mbrtowc@plt>
   17b50:	mov	r4, r0
   17b54:	cmp	r5, #0
   17b58:	cmnne	r0, #3
   17b5c:	bhi	17b6c <tcgetattr@plt+0x69d8>
   17b60:	mov	r0, r4
   17b64:	add	sp, sp, #12
   17b68:	pop	{r4, r5, r6, r7, pc}
   17b6c:	mov	r0, #0
   17b70:	bl	17bd4 <tcgetattr@plt+0x6a40>
   17b74:	cmp	r0, #0
   17b78:	ldrbeq	r3, [r7]
   17b7c:	streq	r3, [r6]
   17b80:	moveq	r4, #1
   17b84:	b	17b60 <tcgetattr@plt+0x69cc>
   17b88:	push	{r4, r5, r6, lr}
   17b8c:	mov	r6, r0
   17b90:	mov	r5, r1
   17b94:	subs	r4, r2, #0
   17b98:	beq	17bc4 <tcgetattr@plt+0x6a30>
   17b9c:	mov	r1, r4
   17ba0:	mvn	r0, #0
   17ba4:	bl	17cdc <tcgetattr@plt+0x6b48>
   17ba8:	cmp	r0, r5
   17bac:	bcs	17bc4 <tcgetattr@plt+0x6a30>
   17bb0:	bl	110b0 <__errno_location@plt>
   17bb4:	mov	r3, #12
   17bb8:	str	r3, [r0]
   17bbc:	mov	r0, #0
   17bc0:	pop	{r4, r5, r6, pc}
   17bc4:	mul	r1, r5, r4
   17bc8:	mov	r0, r6
   17bcc:	bl	17880 <tcgetattr@plt+0x66ec>
   17bd0:	pop	{r4, r5, r6, pc}
   17bd4:	push	{lr}		; (str lr, [sp, #-4]!)
   17bd8:	sub	sp, sp, #268	; 0x10c
   17bdc:	ldr	r2, [pc, #68]	; 17c28 <tcgetattr@plt+0x6a94>
   17be0:	add	r1, sp, #4
   17be4:	bl	17c34 <tcgetattr@plt+0x6aa0>
   17be8:	cmp	r0, #0
   17bec:	movne	r0, #0
   17bf0:	bne	17c20 <tcgetattr@plt+0x6a8c>
   17bf4:	ldr	r1, [pc, #48]	; 17c2c <tcgetattr@plt+0x6a98>
   17bf8:	add	r0, sp, #4
   17bfc:	bl	10edc <strcmp@plt>
   17c00:	cmp	r0, #0
   17c04:	moveq	r0, #0
   17c08:	beq	17c20 <tcgetattr@plt+0x6a8c>
   17c0c:	ldr	r1, [pc, #28]	; 17c30 <tcgetattr@plt+0x6a9c>
   17c10:	add	r0, sp, #4
   17c14:	bl	10edc <strcmp@plt>
   17c18:	adds	r0, r0, #0
   17c1c:	movne	r0, #1
   17c20:	add	sp, sp, #268	; 0x10c
   17c24:	pop	{pc}		; (ldr pc, [sp], #4)
   17c28:	andeq	r0, r0, r1, lsl #2
   17c2c:	andeq	fp, r1, ip, asr #20
   17c30:	andeq	fp, r1, r0, asr sl
   17c34:	push	{r4, r5, r6, lr}
   17c38:	mov	r6, r1
   17c3c:	mov	r4, r2
   17c40:	mov	r1, #0
   17c44:	bl	11134 <setlocale@plt>
   17c48:	subs	r5, r0, #0
   17c4c:	beq	17c70 <tcgetattr@plt+0x6adc>
   17c50:	mov	r0, r5
   17c54:	bl	11080 <strlen@plt>
   17c58:	cmp	r4, r0
   17c5c:	bhi	17c88 <tcgetattr@plt+0x6af4>
   17c60:	cmp	r4, #0
   17c64:	bne	17ca0 <tcgetattr@plt+0x6b0c>
   17c68:	mov	r0, #34	; 0x22
   17c6c:	pop	{r4, r5, r6, pc}
   17c70:	cmp	r4, #0
   17c74:	beq	17cc4 <tcgetattr@plt+0x6b30>
   17c78:	mov	r3, #0
   17c7c:	strb	r3, [r6]
   17c80:	mov	r0, #22
   17c84:	pop	{r4, r5, r6, pc}
   17c88:	add	r2, r0, #1
   17c8c:	mov	r1, r5
   17c90:	mov	r0, r6
   17c94:	bl	10f18 <memcpy@plt>
   17c98:	mov	r0, #0
   17c9c:	pop	{r4, r5, r6, pc}
   17ca0:	sub	r4, r4, #1
   17ca4:	mov	r2, r4
   17ca8:	mov	r1, r5
   17cac:	mov	r0, r6
   17cb0:	bl	10f18 <memcpy@plt>
   17cb4:	mov	r3, #0
   17cb8:	strb	r3, [r6, r4]
   17cbc:	mov	r0, #34	; 0x22
   17cc0:	pop	{r4, r5, r6, pc}
   17cc4:	mov	r0, #22
   17cc8:	pop	{r4, r5, r6, pc}
   17ccc:	push	{r4, lr}
   17cd0:	mov	r1, #0
   17cd4:	bl	11134 <setlocale@plt>
   17cd8:	pop	{r4, pc}
   17cdc:	subs	r2, r1, #1
   17ce0:	bxeq	lr
   17ce4:	bcc	17ebc <tcgetattr@plt+0x6d28>
   17ce8:	cmp	r0, r1
   17cec:	bls	17ea0 <tcgetattr@plt+0x6d0c>
   17cf0:	tst	r1, r2
   17cf4:	beq	17eac <tcgetattr@plt+0x6d18>
   17cf8:	clz	r3, r0
   17cfc:	clz	r2, r1
   17d00:	sub	r3, r2, r3
   17d04:	rsbs	r3, r3, #31
   17d08:	addne	r3, r3, r3, lsl #1
   17d0c:	mov	r2, #0
   17d10:	addne	pc, pc, r3, lsl #2
   17d14:	nop			; (mov r0, r0)
   17d18:	cmp	r0, r1, lsl #31
   17d1c:	adc	r2, r2, r2
   17d20:	subcs	r0, r0, r1, lsl #31
   17d24:	cmp	r0, r1, lsl #30
   17d28:	adc	r2, r2, r2
   17d2c:	subcs	r0, r0, r1, lsl #30
   17d30:	cmp	r0, r1, lsl #29
   17d34:	adc	r2, r2, r2
   17d38:	subcs	r0, r0, r1, lsl #29
   17d3c:	cmp	r0, r1, lsl #28
   17d40:	adc	r2, r2, r2
   17d44:	subcs	r0, r0, r1, lsl #28
   17d48:	cmp	r0, r1, lsl #27
   17d4c:	adc	r2, r2, r2
   17d50:	subcs	r0, r0, r1, lsl #27
   17d54:	cmp	r0, r1, lsl #26
   17d58:	adc	r2, r2, r2
   17d5c:	subcs	r0, r0, r1, lsl #26
   17d60:	cmp	r0, r1, lsl #25
   17d64:	adc	r2, r2, r2
   17d68:	subcs	r0, r0, r1, lsl #25
   17d6c:	cmp	r0, r1, lsl #24
   17d70:	adc	r2, r2, r2
   17d74:	subcs	r0, r0, r1, lsl #24
   17d78:	cmp	r0, r1, lsl #23
   17d7c:	adc	r2, r2, r2
   17d80:	subcs	r0, r0, r1, lsl #23
   17d84:	cmp	r0, r1, lsl #22
   17d88:	adc	r2, r2, r2
   17d8c:	subcs	r0, r0, r1, lsl #22
   17d90:	cmp	r0, r1, lsl #21
   17d94:	adc	r2, r2, r2
   17d98:	subcs	r0, r0, r1, lsl #21
   17d9c:	cmp	r0, r1, lsl #20
   17da0:	adc	r2, r2, r2
   17da4:	subcs	r0, r0, r1, lsl #20
   17da8:	cmp	r0, r1, lsl #19
   17dac:	adc	r2, r2, r2
   17db0:	subcs	r0, r0, r1, lsl #19
   17db4:	cmp	r0, r1, lsl #18
   17db8:	adc	r2, r2, r2
   17dbc:	subcs	r0, r0, r1, lsl #18
   17dc0:	cmp	r0, r1, lsl #17
   17dc4:	adc	r2, r2, r2
   17dc8:	subcs	r0, r0, r1, lsl #17
   17dcc:	cmp	r0, r1, lsl #16
   17dd0:	adc	r2, r2, r2
   17dd4:	subcs	r0, r0, r1, lsl #16
   17dd8:	cmp	r0, r1, lsl #15
   17ddc:	adc	r2, r2, r2
   17de0:	subcs	r0, r0, r1, lsl #15
   17de4:	cmp	r0, r1, lsl #14
   17de8:	adc	r2, r2, r2
   17dec:	subcs	r0, r0, r1, lsl #14
   17df0:	cmp	r0, r1, lsl #13
   17df4:	adc	r2, r2, r2
   17df8:	subcs	r0, r0, r1, lsl #13
   17dfc:	cmp	r0, r1, lsl #12
   17e00:	adc	r2, r2, r2
   17e04:	subcs	r0, r0, r1, lsl #12
   17e08:	cmp	r0, r1, lsl #11
   17e0c:	adc	r2, r2, r2
   17e10:	subcs	r0, r0, r1, lsl #11
   17e14:	cmp	r0, r1, lsl #10
   17e18:	adc	r2, r2, r2
   17e1c:	subcs	r0, r0, r1, lsl #10
   17e20:	cmp	r0, r1, lsl #9
   17e24:	adc	r2, r2, r2
   17e28:	subcs	r0, r0, r1, lsl #9
   17e2c:	cmp	r0, r1, lsl #8
   17e30:	adc	r2, r2, r2
   17e34:	subcs	r0, r0, r1, lsl #8
   17e38:	cmp	r0, r1, lsl #7
   17e3c:	adc	r2, r2, r2
   17e40:	subcs	r0, r0, r1, lsl #7
   17e44:	cmp	r0, r1, lsl #6
   17e48:	adc	r2, r2, r2
   17e4c:	subcs	r0, r0, r1, lsl #6
   17e50:	cmp	r0, r1, lsl #5
   17e54:	adc	r2, r2, r2
   17e58:	subcs	r0, r0, r1, lsl #5
   17e5c:	cmp	r0, r1, lsl #4
   17e60:	adc	r2, r2, r2
   17e64:	subcs	r0, r0, r1, lsl #4
   17e68:	cmp	r0, r1, lsl #3
   17e6c:	adc	r2, r2, r2
   17e70:	subcs	r0, r0, r1, lsl #3
   17e74:	cmp	r0, r1, lsl #2
   17e78:	adc	r2, r2, r2
   17e7c:	subcs	r0, r0, r1, lsl #2
   17e80:	cmp	r0, r1, lsl #1
   17e84:	adc	r2, r2, r2
   17e88:	subcs	r0, r0, r1, lsl #1
   17e8c:	cmp	r0, r1
   17e90:	adc	r2, r2, r2
   17e94:	subcs	r0, r0, r1
   17e98:	mov	r0, r2
   17e9c:	bx	lr
   17ea0:	moveq	r0, #1
   17ea4:	movne	r0, #0
   17ea8:	bx	lr
   17eac:	clz	r2, r1
   17eb0:	rsb	r2, r2, #31
   17eb4:	lsr	r0, r0, r2
   17eb8:	bx	lr
   17ebc:	cmp	r0, #0
   17ec0:	mvnne	r0, #0
   17ec4:	b	18164 <tcgetattr@plt+0x6fd0>
   17ec8:	cmp	r1, #0
   17ecc:	beq	17ebc <tcgetattr@plt+0x6d28>
   17ed0:	push	{r0, r1, lr}
   17ed4:	bl	17cdc <tcgetattr@plt+0x6b48>
   17ed8:	pop	{r1, r2, lr}
   17edc:	mul	r3, r2, r0
   17ee0:	sub	r1, r1, r3
   17ee4:	bx	lr
   17ee8:	cmp	r1, #0
   17eec:	beq	180f8 <tcgetattr@plt+0x6f64>
   17ef0:	eor	ip, r0, r1
   17ef4:	rsbmi	r1, r1, #0
   17ef8:	subs	r2, r1, #1
   17efc:	beq	180c4 <tcgetattr@plt+0x6f30>
   17f00:	movs	r3, r0
   17f04:	rsbmi	r3, r0, #0
   17f08:	cmp	r3, r1
   17f0c:	bls	180d0 <tcgetattr@plt+0x6f3c>
   17f10:	tst	r1, r2
   17f14:	beq	180e0 <tcgetattr@plt+0x6f4c>
   17f18:	clz	r2, r3
   17f1c:	clz	r0, r1
   17f20:	sub	r2, r0, r2
   17f24:	rsbs	r2, r2, #31
   17f28:	addne	r2, r2, r2, lsl #1
   17f2c:	mov	r0, #0
   17f30:	addne	pc, pc, r2, lsl #2
   17f34:	nop			; (mov r0, r0)
   17f38:	cmp	r3, r1, lsl #31
   17f3c:	adc	r0, r0, r0
   17f40:	subcs	r3, r3, r1, lsl #31
   17f44:	cmp	r3, r1, lsl #30
   17f48:	adc	r0, r0, r0
   17f4c:	subcs	r3, r3, r1, lsl #30
   17f50:	cmp	r3, r1, lsl #29
   17f54:	adc	r0, r0, r0
   17f58:	subcs	r3, r3, r1, lsl #29
   17f5c:	cmp	r3, r1, lsl #28
   17f60:	adc	r0, r0, r0
   17f64:	subcs	r3, r3, r1, lsl #28
   17f68:	cmp	r3, r1, lsl #27
   17f6c:	adc	r0, r0, r0
   17f70:	subcs	r3, r3, r1, lsl #27
   17f74:	cmp	r3, r1, lsl #26
   17f78:	adc	r0, r0, r0
   17f7c:	subcs	r3, r3, r1, lsl #26
   17f80:	cmp	r3, r1, lsl #25
   17f84:	adc	r0, r0, r0
   17f88:	subcs	r3, r3, r1, lsl #25
   17f8c:	cmp	r3, r1, lsl #24
   17f90:	adc	r0, r0, r0
   17f94:	subcs	r3, r3, r1, lsl #24
   17f98:	cmp	r3, r1, lsl #23
   17f9c:	adc	r0, r0, r0
   17fa0:	subcs	r3, r3, r1, lsl #23
   17fa4:	cmp	r3, r1, lsl #22
   17fa8:	adc	r0, r0, r0
   17fac:	subcs	r3, r3, r1, lsl #22
   17fb0:	cmp	r3, r1, lsl #21
   17fb4:	adc	r0, r0, r0
   17fb8:	subcs	r3, r3, r1, lsl #21
   17fbc:	cmp	r3, r1, lsl #20
   17fc0:	adc	r0, r0, r0
   17fc4:	subcs	r3, r3, r1, lsl #20
   17fc8:	cmp	r3, r1, lsl #19
   17fcc:	adc	r0, r0, r0
   17fd0:	subcs	r3, r3, r1, lsl #19
   17fd4:	cmp	r3, r1, lsl #18
   17fd8:	adc	r0, r0, r0
   17fdc:	subcs	r3, r3, r1, lsl #18
   17fe0:	cmp	r3, r1, lsl #17
   17fe4:	adc	r0, r0, r0
   17fe8:	subcs	r3, r3, r1, lsl #17
   17fec:	cmp	r3, r1, lsl #16
   17ff0:	adc	r0, r0, r0
   17ff4:	subcs	r3, r3, r1, lsl #16
   17ff8:	cmp	r3, r1, lsl #15
   17ffc:	adc	r0, r0, r0
   18000:	subcs	r3, r3, r1, lsl #15
   18004:	cmp	r3, r1, lsl #14
   18008:	adc	r0, r0, r0
   1800c:	subcs	r3, r3, r1, lsl #14
   18010:	cmp	r3, r1, lsl #13
   18014:	adc	r0, r0, r0
   18018:	subcs	r3, r3, r1, lsl #13
   1801c:	cmp	r3, r1, lsl #12
   18020:	adc	r0, r0, r0
   18024:	subcs	r3, r3, r1, lsl #12
   18028:	cmp	r3, r1, lsl #11
   1802c:	adc	r0, r0, r0
   18030:	subcs	r3, r3, r1, lsl #11
   18034:	cmp	r3, r1, lsl #10
   18038:	adc	r0, r0, r0
   1803c:	subcs	r3, r3, r1, lsl #10
   18040:	cmp	r3, r1, lsl #9
   18044:	adc	r0, r0, r0
   18048:	subcs	r3, r3, r1, lsl #9
   1804c:	cmp	r3, r1, lsl #8
   18050:	adc	r0, r0, r0
   18054:	subcs	r3, r3, r1, lsl #8
   18058:	cmp	r3, r1, lsl #7
   1805c:	adc	r0, r0, r0
   18060:	subcs	r3, r3, r1, lsl #7
   18064:	cmp	r3, r1, lsl #6
   18068:	adc	r0, r0, r0
   1806c:	subcs	r3, r3, r1, lsl #6
   18070:	cmp	r3, r1, lsl #5
   18074:	adc	r0, r0, r0
   18078:	subcs	r3, r3, r1, lsl #5
   1807c:	cmp	r3, r1, lsl #4
   18080:	adc	r0, r0, r0
   18084:	subcs	r3, r3, r1, lsl #4
   18088:	cmp	r3, r1, lsl #3
   1808c:	adc	r0, r0, r0
   18090:	subcs	r3, r3, r1, lsl #3
   18094:	cmp	r3, r1, lsl #2
   18098:	adc	r0, r0, r0
   1809c:	subcs	r3, r3, r1, lsl #2
   180a0:	cmp	r3, r1, lsl #1
   180a4:	adc	r0, r0, r0
   180a8:	subcs	r3, r3, r1, lsl #1
   180ac:	cmp	r3, r1
   180b0:	adc	r0, r0, r0
   180b4:	subcs	r3, r3, r1
   180b8:	cmp	ip, #0
   180bc:	rsbmi	r0, r0, #0
   180c0:	bx	lr
   180c4:	teq	ip, r0
   180c8:	rsbmi	r0, r0, #0
   180cc:	bx	lr
   180d0:	movcc	r0, #0
   180d4:	asreq	r0, ip, #31
   180d8:	orreq	r0, r0, #1
   180dc:	bx	lr
   180e0:	clz	r2, r1
   180e4:	rsb	r2, r2, #31
   180e8:	cmp	ip, #0
   180ec:	lsr	r0, r3, r2
   180f0:	rsbmi	r0, r0, #0
   180f4:	bx	lr
   180f8:	cmp	r0, #0
   180fc:	mvngt	r0, #-2147483648	; 0x80000000
   18100:	movlt	r0, #-2147483648	; 0x80000000
   18104:	b	18164 <tcgetattr@plt+0x6fd0>
   18108:	cmp	r1, #0
   1810c:	beq	180f8 <tcgetattr@plt+0x6f64>
   18110:	push	{r0, r1, lr}
   18114:	bl	17ef0 <tcgetattr@plt+0x6d5c>
   18118:	pop	{r1, r2, lr}
   1811c:	mul	r3, r2, r0
   18120:	sub	r1, r1, r3
   18124:	bx	lr
   18128:	cmp	r3, #0
   1812c:	cmpeq	r2, #0
   18130:	bne	18148 <tcgetattr@plt+0x6fb4>
   18134:	cmp	r1, #0
   18138:	cmpeq	r0, #0
   1813c:	mvnne	r1, #0
   18140:	mvnne	r0, #0
   18144:	b	18164 <tcgetattr@plt+0x6fd0>
   18148:	sub	sp, sp, #8
   1814c:	push	{sp, lr}
   18150:	bl	18174 <tcgetattr@plt+0x6fe0>
   18154:	ldr	lr, [sp, #4]
   18158:	add	sp, sp, #8
   1815c:	pop	{r2, r3}
   18160:	bx	lr
   18164:	push	{r1, lr}
   18168:	mov	r0, #8
   1816c:	bl	10ed0 <raise@plt>
   18170:	pop	{r1, pc}
   18174:	cmp	r1, r3
   18178:	push	{r4, r5, r6, r7, r8, r9, lr}
   1817c:	cmpeq	r0, r2
   18180:	mov	r4, r0
   18184:	mov	r5, r1
   18188:	ldr	r9, [sp, #28]
   1818c:	movcc	r0, #0
   18190:	movcc	r1, #0
   18194:	bcc	1828c <tcgetattr@plt+0x70f8>
   18198:	cmp	r3, #0
   1819c:	clzeq	ip, r2
   181a0:	clzne	ip, r3
   181a4:	addeq	ip, ip, #32
   181a8:	cmp	r5, #0
   181ac:	clzeq	r1, r4
   181b0:	addeq	r1, r1, #32
   181b4:	clzne	r1, r5
   181b8:	sub	ip, ip, r1
   181bc:	sub	lr, ip, #32
   181c0:	lsl	r7, r3, ip
   181c4:	rsb	r8, ip, #32
   181c8:	orr	r7, r7, r2, lsl lr
   181cc:	orr	r7, r7, r2, lsr r8
   181d0:	lsl	r6, r2, ip
   181d4:	cmp	r5, r7
   181d8:	cmpeq	r4, r6
   181dc:	movcc	r0, #0
   181e0:	movcc	r1, #0
   181e4:	bcc	18200 <tcgetattr@plt+0x706c>
   181e8:	mov	r3, #1
   181ec:	subs	r4, r4, r6
   181f0:	lsl	r1, r3, lr
   181f4:	lsl	r0, r3, ip
   181f8:	orr	r1, r1, r3, lsr r8
   181fc:	sbc	r5, r5, r7
   18200:	cmp	ip, #0
   18204:	beq	1828c <tcgetattr@plt+0x70f8>
   18208:	lsrs	r3, r7, #1
   1820c:	rrx	r2, r6
   18210:	mov	r6, ip
   18214:	b	18238 <tcgetattr@plt+0x70a4>
   18218:	subs	r4, r4, r2
   1821c:	sbc	r5, r5, r3
   18220:	adds	r4, r4, r4
   18224:	adc	r5, r5, r5
   18228:	adds	r4, r4, #1
   1822c:	adc	r5, r5, #0
   18230:	subs	r6, r6, #1
   18234:	beq	18254 <tcgetattr@plt+0x70c0>
   18238:	cmp	r5, r3
   1823c:	cmpeq	r4, r2
   18240:	bcs	18218 <tcgetattr@plt+0x7084>
   18244:	adds	r4, r4, r4
   18248:	adc	r5, r5, r5
   1824c:	subs	r6, r6, #1
   18250:	bne	18238 <tcgetattr@plt+0x70a4>
   18254:	lsr	r6, r4, ip
   18258:	lsr	r7, r5, ip
   1825c:	orr	r6, r6, r5, lsl r8
   18260:	adds	r2, r0, r4
   18264:	orr	r6, r6, r5, lsr lr
   18268:	adc	r3, r1, r5
   1826c:	lsl	r1, r7, ip
   18270:	orr	r1, r1, r6, lsl lr
   18274:	lsl	r0, r6, ip
   18278:	orr	r1, r1, r6, lsr r8
   1827c:	subs	r0, r2, r0
   18280:	mov	r4, r6
   18284:	mov	r5, r7
   18288:	sbc	r1, r3, r1
   1828c:	cmp	r9, #0
   18290:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   18294:	strd	r4, [r9]
   18298:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1829c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   182a0:	mov	r7, r0
   182a4:	ldr	r6, [pc, #72]	; 182f4 <tcgetattr@plt+0x7160>
   182a8:	ldr	r5, [pc, #72]	; 182f8 <tcgetattr@plt+0x7164>
   182ac:	add	r6, pc, r6
   182b0:	add	r5, pc, r5
   182b4:	sub	r6, r6, r5
   182b8:	mov	r8, r1
   182bc:	mov	r9, r2
   182c0:	bl	10e98 <calloc@plt-0x20>
   182c4:	asrs	r6, r6, #2
   182c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   182cc:	mov	r4, #0
   182d0:	add	r4, r4, #1
   182d4:	ldr	r3, [r5], #4
   182d8:	mov	r2, r9
   182dc:	mov	r1, r8
   182e0:	mov	r0, r7
   182e4:	blx	r3
   182e8:	cmp	r6, r4
   182ec:	bne	182d0 <tcgetattr@plt+0x713c>
   182f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   182f4:	andeq	r3, r1, ip, asr ip
   182f8:	andeq	r3, r1, r4, asr ip
   182fc:	bx	lr
   18300:	ldr	r3, [pc, #12]	; 18314 <tcgetattr@plt+0x7180>
   18304:	mov	r1, #0
   18308:	add	r3, pc, r3
   1830c:	ldr	r2, [r3]
   18310:	b	110bc <__cxa_atexit@plt>
   18314:	strdeq	r3, [r1], -ip

Disassembly of section .fini:

00018318 <.fini>:
   18318:	push	{r3, lr}
   1831c:	pop	{r3, pc}
