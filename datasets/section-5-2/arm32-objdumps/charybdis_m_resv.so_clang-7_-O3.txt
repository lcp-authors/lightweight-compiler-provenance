
../repos/charybdis/modules/.libs/m_resv.so:     file format elf32-littlearm


Disassembly of section .init:

00000d10 <_init>:
 d10:	push	{r3, lr}
 d14:	bl	f1c <call_weak_fn>
 d18:	pop	{r3, pc}

Disassembly of section .plt:

00000d1c <.plt>:
 d1c:	push	{lr}		; (str lr, [sp, #-4]!)
 d20:	ldr	lr, [pc, #4]	; d2c <.plt+0x10>
 d24:	add	lr, pc, lr
 d28:	ldr	pc, [lr, #8]!
 d2c:	.word	0x000122d4

00000d30 <propagate_generic@plt>:
 d30:	add	ip, pc, #0, 12
 d34:	add	ip, ip, #73728	; 0x12000
 d38:	ldr	pc, [ip, #724]!	; 0x2d4

00000d3c <make_conf@plt>:
 d3c:	add	ip, pc, #0, 12
 d40:	add	ip, ip, #73728	; 0x12000
 d44:	ldr	pc, [ip, #716]!	; 0x2cc

00000d48 <rb_current_time@plt>:
 d48:	add	ip, pc, #0, 12
 d4c:	add	ip, ip, #73728	; 0x12000
 d50:	ldr	pc, [ip, #708]!	; 0x2c4

00000d54 <add_to_resv_hash@plt>:
 d54:	add	ip, pc, #0, 12
 d58:	add	ip, ip, #73728	; 0x12000
 d5c:	ldr	pc, [ip, #700]!	; 0x2bc

00000d60 <sendto_match_servs@plt>:
 d60:	add	ip, pc, #0, 12
 d64:	add	ip, ip, #73728	; 0x12000
 d68:	ldr	pc, [ip, #692]!	; 0x2b4

00000d6c <__cxa_finalize@plt>:
 d6c:	add	ip, pc, #0, 12
 d70:	add	ip, ip, #73728	; 0x12000
 d74:	ldr	pc, [ip, #684]!	; 0x2ac

00000d78 <strtol@plt>:
 d78:	add	ip, pc, #0, 12
 d7c:	add	ip, ip, #73728	; 0x12000
 d80:	ldr	pc, [ip, #676]!	; 0x2a4

00000d84 <sendto_one@plt>:
 d84:	add	ip, pc, #0, 12
 d88:	add	ip, ip, #73728	; 0x12000
 d8c:	ldr	pc, [ip, #668]!	; 0x29c

00000d90 <replace_old_ban@plt>:
 d90:	add	ip, pc, #0, 12
 d94:	add	ip, ip, #73728	; 0x12000
 d98:	ldr	pc, [ip, #660]!	; 0x294

00000d9c <rb_outofmemory@plt>:
 d9c:	add	ip, pc, #0, 12
 da0:	add	ip, ip, #73728	; 0x12000
 da4:	ldr	pc, [ip, #652]!	; 0x28c

00000da8 <resv_nick_fnc@plt>:
 da8:	add	ip, pc, #0, 12
 dac:	add	ip, ip, #73728	; 0x12000
 db0:	ldr	pc, [ip, #644]!	; 0x284

00000db4 <operhash_delete@plt>:
 db4:	add	ip, pc, #0, 12
 db8:	add	ip, ip, #73728	; 0x12000
 dbc:	ldr	pc, [ip, #636]!	; 0x27c

00000dc0 <sendto_realops_snomask@plt>:
 dc0:	add	ip, pc, #0, 12
 dc4:	add	ip, ip, #73728	; 0x12000
 dc8:	ldr	pc, [ip, #628]!	; 0x274

00000dcc <bandb_add@plt>:
 dcc:	add	ip, pc, #0, 12
 dd0:	add	ip, ip, #73728	; 0x12000
 dd4:	ldr	pc, [ip, #620]!	; 0x26c

00000dd8 <resv_chan_forcepart@plt>:
 dd8:	add	ip, pc, #0, 12
 ddc:	add	ip, ip, #73728	; 0x12000
 de0:	ldr	pc, [ip, #612]!	; 0x264

00000de4 <deactivate_conf@plt>:
 de4:	add	ip, pc, #0, 12
 de8:	add	ip, ip, #73728	; 0x12000
 dec:	ldr	pc, [ip, #604]!	; 0x25c

00000df0 <get_oper_name@plt>:
 df0:	add	ip, pc, #0, 12
 df4:	add	ip, ip, #73728	; 0x12000
 df8:	ldr	pc, [ip, #596]!	; 0x254

00000dfc <rb_free_rb_dlink_node@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #73728	; 0x12000
 e04:	ldr	pc, [ip, #588]!	; 0x24c

00000e08 <cluster_generic@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #73728	; 0x12000
 e10:	ldr	pc, [ip, #580]!	; 0x244

00000e14 <operhash_add@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #73728	; 0x12000
 e1c:	ldr	pc, [ip, #572]!	; 0x23c

00000e20 <strcpy@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #73728	; 0x12000
 e28:	ldr	pc, [ip, #564]!	; 0x234

00000e2c <sendto_server@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #73728	; 0x12000
 e34:	ldr	pc, [ip, #556]!	; 0x22c

00000e38 <malloc@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #73728	; 0x12000
 e40:	ldr	pc, [ip, #548]!	; 0x224

00000e44 <__gmon_start__@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #73728	; 0x12000
 e4c:	ldr	pc, [ip, #540]!	; 0x21c

00000e50 <free_conf@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #73728	; 0x12000
 e58:	ldr	pc, [ip, #532]!	; 0x214

00000e5c <rb_make_rb_dlink_node@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #73728	; 0x12000
 e64:	ldr	pc, [ip, #524]!	; 0x20c

00000e68 <strlen@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #73728	; 0x12000
 e70:	ldr	pc, [ip, #516]!	; 0x204

00000e74 <ilog@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #73728	; 0x12000
 e7c:	ldr	pc, [ip, #508]!	; 0x1fc

00000e80 <match@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #73728	; 0x12000
 e88:	ldr	pc, [ip, #500]!	; 0x1f4

00000e8c <del_from_resv_hash@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #73728	; 0x12000
 e94:	ldr	pc, [ip, #492]!	; 0x1ec

00000e98 <find_nick_resv_mask@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #73728	; 0x12000
 ea0:	ldr	pc, [ip, #484]!	; 0x1e4

00000ea4 <valid_temp_time@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #73728	; 0x12000
 eac:	ldr	pc, [ip, #476]!	; 0x1dc

00000eb0 <sendto_one_notice@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #73728	; 0x12000
 eb8:	ldr	pc, [ip, #468]!	; 0x1d4

00000ebc <bandb_del@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #73728	; 0x12000
 ec4:	ldr	pc, [ip, #460]!	; 0x1cc

00000ec8 <valid_wild_card_simple@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #73728	; 0x12000
 ed0:	ldr	pc, [ip, #452]!	; 0x1c4

00000ed4 <find_shared_conf@plt>:
 ed4:	add	ip, pc, #0, 12
 ed8:	add	ip, ip, #73728	; 0x12000
 edc:	ldr	pc, [ip, #444]!	; 0x1bc

00000ee0 <privilegeset_in_set@plt>:
 ee0:	add	ip, pc, #0, 12
 ee4:	add	ip, ip, #73728	; 0x12000
 ee8:	ldr	pc, [ip, #436]!	; 0x1b4

00000eec <hash_find_resv@plt>:
 eec:	add	ip, pc, #0, 12
 ef0:	add	ip, ip, #73728	; 0x12000
 ef4:	ldr	pc, [ip, #428]!	; 0x1ac

00000ef8 <irccmp@plt>:
 ef8:	add	ip, pc, #0, 12
 efc:	add	ip, ip, #73728	; 0x12000
 f00:	ldr	pc, [ip, #420]!	; 0x1a4

00000f04 <clean_resv_nick@plt>:
 f04:	add	ip, pc, #0, 12
 f08:	add	ip, ip, #73728	; 0x12000
 f0c:	ldr	pc, [ip, #412]!	; 0x19c

00000f10 <__assert_fail@plt>:
 f10:	add	ip, pc, #0, 12
 f14:	add	ip, ip, #73728	; 0x12000
 f18:	ldr	pc, [ip, #404]!	; 0x194

Disassembly of section .text:

00000f1c <call_weak_fn>:
     f1c:	ldr	r3, [pc, #20]	; f38 <call_weak_fn+0x1c>
     f20:	ldr	r2, [pc, #20]	; f3c <call_weak_fn+0x20>
     f24:	add	r3, pc, r3
     f28:	ldr	r2, [r3, r2]
     f2c:	cmp	r2, #0
     f30:	bxeq	lr
     f34:	b	e44 <__gmon_start__@plt>
     f38:	.word	0x000120d4
     f3c:	.word	0x000000cc

00000f40 <deregister_tm_clones>:
     f40:	ldr	r0, [pc, #44]	; f74 <deregister_tm_clones+0x34>
     f44:	ldr	r3, [pc, #44]	; f78 <deregister_tm_clones+0x38>
     f48:	add	r0, pc, r0
     f4c:	add	r3, pc, r3
     f50:	cmp	r3, r0
     f54:	ldr	r3, [pc, #32]	; f7c <deregister_tm_clones+0x3c>
     f58:	add	r3, pc, r3
     f5c:	bxeq	lr
     f60:	ldr	r2, [pc, #24]	; f80 <deregister_tm_clones+0x40>
     f64:	ldr	r3, [r3, r2]
     f68:	cmp	r3, #0
     f6c:	bxeq	lr
     f70:	bx	r3
     f74:	.word	0x00012258
     f78:	.word	0x00012254
     f7c:	.word	0x000120a0
     f80:	.word	0x000000b4

00000f84 <register_tm_clones>:
     f84:	ldr	r0, [pc, #56]	; fc4 <register_tm_clones+0x40>
     f88:	ldr	r3, [pc, #56]	; fc8 <register_tm_clones+0x44>
     f8c:	add	r0, pc, r0
     f90:	add	r3, pc, r3
     f94:	sub	r1, r3, r0
     f98:	ldr	r3, [pc, #44]	; fcc <register_tm_clones+0x48>
     f9c:	asr	r1, r1, #2
     fa0:	add	r3, pc, r3
     fa4:	add	r1, r1, r1, lsr #31
     fa8:	asrs	r1, r1, #1
     fac:	bxeq	lr
     fb0:	ldr	r2, [pc, #24]	; fd0 <register_tm_clones+0x4c>
     fb4:	ldr	r3, [r3, r2]
     fb8:	cmp	r3, #0
     fbc:	bxeq	lr
     fc0:	bx	r3
     fc4:	.word	0x00012214
     fc8:	.word	0x00012210
     fcc:	.word	0x00012058
     fd0:	.word	0x000000d8

00000fd4 <__do_global_dtors_aux>:
     fd4:	ldr	r3, [pc, #76]	; 1028 <__do_global_dtors_aux+0x54>
     fd8:	ldr	r2, [pc, #76]	; 102c <__do_global_dtors_aux+0x58>
     fdc:	add	r3, pc, r3
     fe0:	add	r2, pc, r2
     fe4:	ldrb	r3, [r3]
     fe8:	cmp	r3, #0
     fec:	bxne	lr
     ff0:	ldr	r3, [pc, #56]	; 1030 <__do_global_dtors_aux+0x5c>
     ff4:	push	{r4, lr}
     ff8:	ldr	r3, [r2, r3]
     ffc:	cmp	r3, #0
    1000:	beq	1010 <__do_global_dtors_aux+0x3c>
    1004:	ldr	r3, [pc, #40]	; 1034 <__do_global_dtors_aux+0x60>
    1008:	ldr	r0, [pc, r3]
    100c:	bl	d6c <__cxa_finalize@plt>
    1010:	bl	f40 <deregister_tm_clones>
    1014:	ldr	r3, [pc, #28]	; 1038 <__do_global_dtors_aux+0x64>
    1018:	mov	r2, #1
    101c:	add	r3, pc, r3
    1020:	strb	r2, [r3]
    1024:	pop	{r4, pc}
    1028:	.word	0x000121c4
    102c:	.word	0x00012018
    1030:	.word	0x000000b0
    1034:	.word	0x000120d8
    1038:	.word	0x00012184

0000103c <frame_dummy>:
    103c:	b	f84 <register_tm_clones>

00001040 <ms_resv>:
    1040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1044:	add	fp, sp, #28
    1048:	sub	sp, sp, #20
    104c:	ldr	r9, [pc, #184]	; 110c <ms_resv+0xcc>
    1050:	ldr	r8, [fp, #8]
    1054:	mov	r4, r2
    1058:	mov	r3, #0
    105c:	mov	sl, #0
    1060:	ldr	r9, [pc, r9]
    1064:	ldr	r2, [r9]
    1068:	ldmib	r8, {r5, r6, r7}
    106c:	ldr	r0, [pc, #156]	; 1110 <ms_resv+0xd0>
    1070:	add	r0, pc, r0
    1074:	mov	r1, r5
    1078:	stm	sp, {r0, r5, r6, r7}
    107c:	mov	r0, r4
    1080:	bl	d60 <sendto_match_servs@plt>
    1084:	ldr	r3, [r9]
    1088:	ldr	r0, [pc, #132]	; 1114 <ms_resv+0xd4>
    108c:	mov	r1, r5
    1090:	ldr	r0, [pc, r0]
    1094:	ldr	r2, [r0]
    1098:	ldr	r0, [pc, #120]	; 1118 <ms_resv+0xd8>
    109c:	add	r0, pc, r0
    10a0:	stm	sp, {r0, r5, sl}
    10a4:	mov	r0, r4
    10a8:	str	r6, [sp, #12]
    10ac:	str	r7, [sp, #16]
    10b0:	bl	d60 <sendto_match_servs@plt>
    10b4:	ldr	r0, [r8, #4]
    10b8:	ldr	r1, [pc, #92]	; 111c <ms_resv+0xdc>
    10bc:	ldr	r1, [pc, r1]
    10c0:	add	r1, r1, #88	; 0x58
    10c4:	bl	e80 <match@plt>
    10c8:	cmp	r0, #0
    10cc:	beq	1104 <ms_resv+0xc4>
    10d0:	ldrh	r0, [r4, #80]	; 0x50
    10d4:	cmp	r0, #64	; 0x40
    10d8:	bne	1104 <ms_resv+0xc4>
    10dc:	ldr	r0, [r4, #24]
    10e0:	cmp	r0, #0
    10e4:	beq	1104 <ms_resv+0xc4>
    10e8:	ldr	r1, [r8, #8]
    10ec:	ldr	r2, [r8, #12]
    10f0:	mov	r0, #0
    10f4:	mov	r3, #0
    10f8:	str	r0, [sp]
    10fc:	mov	r0, r4
    1100:	bl	1828 <parse_resv>
    1104:	sub	sp, fp, #28
    1108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    110c:	.word	0x00012058
    1110:	.word	0x00001612
    1114:	.word	0x00012048
    1118:	.word	0x000015f5
    111c:	.word	0x00012018

00001120 <me_resv>:
    1120:	push	{r4, r5, r6, r7, fp, lr}
    1124:	add	fp, sp, #16
    1128:	sub	sp, sp, #8
    112c:	ldrh	r0, [r2, #80]	; 0x50
    1130:	cmp	r0, #64	; 0x40
    1134:	bne	117c <me_resv+0x5c>
    1138:	ldr	r0, [r2, #24]
    113c:	mov	r4, r2
    1140:	cmp	r0, #0
    1144:	beq	117c <me_resv+0x5c>
    1148:	ldr	r1, [fp, #8]
    114c:	mov	r2, #10
    1150:	mov	r7, #0
    1154:	ldmib	r1, {r0, r5}
    1158:	ldr	r6, [r1, #16]
    115c:	mov	r1, #0
    1160:	bl	d78 <strtol@plt>
    1164:	mov	r3, r0
    1168:	mov	r0, r4
    116c:	mov	r1, r5
    1170:	mov	r2, r6
    1174:	str	r7, [sp]
    1178:	bl	1828 <parse_resv>
    117c:	sub	sp, fp, #16
    1180:	pop	{r4, r5, r6, r7, fp, pc}

00001184 <mo_resv>:
    1184:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1188:	add	fp, sp, #28
    118c:	sub	sp, sp, #36	; 0x24
    1190:	ldr	r0, [r2, #24]
    1194:	mov	r4, r2
    1198:	cmp	r0, #0
    119c:	ldrne	r0, [r0, #36]	; 0x24
    11a0:	cmpne	r0, #0
    11a4:	bne	11dc <mo_resv+0x58>
    11a8:	ldr	r0, [pc, #888]	; 1528 <mo_resv+0x3a4>
    11ac:	add	r0, pc, r0
    11b0:	str	r0, [sp]
    11b4:	add	r3, r4, #88	; 0x58
    11b8:	ldr	r0, [pc, #876]	; 152c <mo_resv+0x3a8>
    11bc:	ldr	r0, [pc, r0]
    11c0:	ldr	r1, [pc, #872]	; 1530 <mo_resv+0x3ac>
    11c4:	add	r2, r0, #88	; 0x58
    11c8:	add	r1, pc, r1
    11cc:	mov	r0, r4
    11d0:	bl	d84 <sendto_one@plt>
    11d4:	sub	sp, fp, #28
    11d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    11dc:	ldr	r1, [pc, #828]	; 1520 <mo_resv+0x39c>
    11e0:	mov	r7, r3
    11e4:	ldr	r1, [pc, r1]
    11e8:	ldr	r5, [fp, #8]
    11ec:	ldr	r6, [r1, #324]	; 0x144
    11f0:	ldr	r1, [pc, #812]	; 1524 <mo_resv+0x3a0>
    11f4:	add	r1, pc, r1
    11f8:	bl	ee0 <privilegeset_in_set@plt>
    11fc:	cmp	r0, #0
    1200:	beq	11a8 <mo_resv+0x24>
    1204:	ldr	r0, [r5, #4]
    1208:	str	r6, [sp, #28]
    120c:	bl	ea4 <valid_temp_time@plt>
    1210:	mov	r6, #0
    1214:	cmn	r0, #1
    1218:	mov	r8, #1
    121c:	movwgt	r8, #2
    1220:	movle	r0, r6
    1224:	str	r0, [sp, #24]
    1228:	ldr	r0, [r5, r8, lsl #2]
    122c:	add	sl, r8, #3
    1230:	add	r9, r8, #1
    1234:	cmp	sl, r7
    1238:	str	r0, [sp, #32]
    123c:	bgt	1258 <mo_resv+0xd4>
    1240:	ldr	r0, [r5, r9, lsl #2]
    1244:	ldr	r1, [pc, #744]	; 1534 <mo_resv+0x3b0>
    1248:	add	r1, pc, r1
    124c:	bl	ef8 <irccmp@plt>
    1250:	cmp	r0, #0
    1254:	beq	12a8 <mo_resv+0x124>
    1258:	cmp	r9, r7
    125c:	bge	1274 <mo_resv+0xf0>
    1260:	ldr	r7, [r5, r9, lsl #2]
    1264:	cmp	r7, #0
    1268:	ldrbne	r0, [r7]
    126c:	cmpne	r0, #0
    1270:	bne	12c8 <mo_resv+0x144>
    1274:	ldr	r0, [pc, #708]	; 1540 <mo_resv+0x3bc>
    1278:	add	r3, r4, #88	; 0x58
    127c:	add	r0, pc, r0
    1280:	str	r0, [sp]
    1284:	ldr	r0, [pc, #696]	; 1544 <mo_resv+0x3c0>
    1288:	ldr	r0, [pc, r0]
    128c:	ldr	r1, [pc, #692]	; 1548 <mo_resv+0x3c4>
    1290:	add	r2, r0, #88	; 0x58
    1294:	add	r1, pc, r1
    1298:	mov	r0, r4
    129c:	bl	d84 <sendto_one@plt>
    12a0:	sub	sp, fp, #28
    12a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    12a8:	ldr	r0, [r4, #24]
    12ac:	cmp	r0, #0
    12b0:	ldrne	r0, [r0, #36]	; 0x24
    12b4:	cmpne	r0, #0
    12b8:	bne	13a0 <mo_resv+0x21c>
    12bc:	ldr	r0, [pc, #632]	; 153c <mo_resv+0x3b8>
    12c0:	add	r0, pc, r0
    12c4:	b	11b0 <mo_resv+0x2c>
    12c8:	cmp	r6, #0
    12cc:	beq	130c <mo_resv+0x188>
    12d0:	ldr	sl, [sp, #24]
    12d4:	cmp	sl, #0
    12d8:	beq	13d4 <mo_resv+0x250>
    12dc:	ldr	r0, [pc, #632]	; 155c <mo_resv+0x3d8>
    12e0:	mov	r1, r6
    12e4:	mov	r3, #0
    12e8:	ldr	r0, [pc, r0]
    12ec:	ldr	r2, [r0]
    12f0:	ldr	r0, [pc, #616]	; 1560 <mo_resv+0x3dc>
    12f4:	add	r0, pc, r0
    12f8:	stm	sp, {r0, r6, sl}
    12fc:	ldr	r0, [sp, #32]
    1300:	str	r7, [sp, #16]
    1304:	str	r0, [sp, #12]
    1308:	b	1434 <mo_resv+0x2b0>
    130c:	ldr	r0, [sp, #28]
    1310:	ldr	sl, [sp, #24]
    1314:	cmp	r0, #0
    1318:	bne	1458 <mo_resv+0x2d4>
    131c:	ldr	r0, [pc, #580]	; 1568 <mo_resv+0x3e4>
    1320:	ldr	r0, [pc, r0]
    1324:	ldr	r1, [r0, #8]
    1328:	cmp	r1, #0
    132c:	beq	1458 <mo_resv+0x2d4>
    1330:	ldr	r6, [r0]
    1334:	ldr	r0, [sp, #28]
    1338:	cmp	r6, #0
    133c:	beq	1484 <mo_resv+0x300>
    1340:	cmp	sl, #0
    1344:	beq	14a4 <mo_resv+0x320>
    1348:	ldr	r8, [pc, #540]	; 156c <mo_resv+0x3e8>
    134c:	ldr	r8, [pc, r8]
    1350:	ldr	r5, [pc, #536]	; 1570 <mo_resv+0x3ec>
    1354:	add	r5, pc, r5
    1358:	ldr	r0, [r6]
    135c:	ldrb	r1, [r0, #12]
    1360:	tst	r1, #128	; 0x80
    1364:	beq	1390 <mo_resv+0x20c>
    1368:	ldr	r1, [r0, #8]
    136c:	ldr	r2, [r8]
    1370:	str	r5, [sp]
    1374:	mov	r3, #0
    1378:	stmib	sp, {r1, sl}
    137c:	ldr	r0, [sp, #32]
    1380:	str	r7, [sp, #16]
    1384:	str	r0, [sp, #12]
    1388:	mov	r0, r4
    138c:	bl	d60 <sendto_match_servs@plt>
    1390:	ldr	r6, [r6, #8]
    1394:	cmp	r6, #0
    1398:	bne	1358 <mo_resv+0x1d4>
    139c:	b	1458 <mo_resv+0x2d4>
    13a0:	ldr	r1, [pc, #400]	; 1538 <mo_resv+0x3b4>
    13a4:	add	r1, pc, r1
    13a8:	bl	ee0 <privilegeset_in_set@plt>
    13ac:	cmp	r0, #0
    13b0:	beq	12bc <mo_resv+0x138>
    13b4:	add	r0, r5, r8, lsl #2
    13b8:	mov	r9, sl
    13bc:	ldr	r6, [r0, #8]
    13c0:	mov	r0, #0
    13c4:	str	r0, [sp, #28]
    13c8:	cmp	r9, r7
    13cc:	blt	1260 <mo_resv+0xdc>
    13d0:	b	1274 <mo_resv+0xf0>
    13d4:	ldr	r9, [pc, #368]	; 154c <mo_resv+0x3c8>
    13d8:	mov	r1, r6
    13dc:	mov	r3, #0
    13e0:	mov	r8, #0
    13e4:	ldr	r9, [pc, r9]
    13e8:	ldr	r2, [r9]
    13ec:	ldr	r0, [pc, #348]	; 1550 <mo_resv+0x3cc>
    13f0:	add	r0, pc, r0
    13f4:	stm	sp, {r0, r6}
    13f8:	mov	r0, r4
    13fc:	ldr	r5, [sp, #32]
    1400:	str	r7, [sp, #12]
    1404:	str	r5, [sp, #8]
    1408:	bl	d60 <sendto_match_servs@plt>
    140c:	ldr	r3, [r9]
    1410:	ldr	r0, [pc, #316]	; 1554 <mo_resv+0x3d0>
    1414:	mov	r1, r6
    1418:	ldr	r0, [pc, r0]
    141c:	ldr	r2, [r0]
    1420:	ldr	r0, [pc, #304]	; 1558 <mo_resv+0x3d4>
    1424:	add	r0, pc, r0
    1428:	stm	sp, {r0, r6, r8}
    142c:	str	r5, [sp, #12]
    1430:	str	r7, [sp, #16]
    1434:	mov	r0, r4
    1438:	bl	d60 <sendto_match_servs@plt>
    143c:	ldr	r0, [pc, #288]	; 1564 <mo_resv+0x3e0>
    1440:	ldr	r0, [pc, r0]
    1444:	add	r1, r0, #88	; 0x58
    1448:	mov	r0, r6
    144c:	bl	e80 <match@plt>
    1450:	cmp	r0, #0
    1454:	beq	149c <mo_resv+0x318>
    1458:	ldr	r0, [sp, #28]
    145c:	cmp	sl, #0
    1460:	bne	1484 <mo_resv+0x300>
    1464:	cmp	r0, #0
    1468:	beq	1484 <mo_resv+0x300>
    146c:	ldr	r1, [pc, #272]	; 1584 <mo_resv+0x400>
    1470:	mov	r0, r4
    1474:	add	r1, pc, r1
    1478:	sub	sp, fp, #28
    147c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1480:	b	eb0 <sendto_one_notice@plt>
    1484:	str	r0, [sp]
    1488:	mov	r0, r4
    148c:	mov	r2, r7
    1490:	mov	r3, sl
    1494:	ldr	r1, [sp, #32]
    1498:	bl	1828 <parse_resv>
    149c:	sub	sp, fp, #28
    14a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    14a4:	ldr	r9, [pc, #200]	; 1574 <mo_resv+0x3f0>
    14a8:	ldr	r9, [pc, r9]
    14ac:	ldr	r8, [sp, #32]
    14b0:	ldr	r5, [r6]
    14b4:	ldrb	r0, [r5, #13]
    14b8:	tst	r0, #1
    14bc:	beq	1510 <mo_resv+0x38c>
    14c0:	ldr	r2, [r9]
    14c4:	ldr	r1, [r5, #8]
    14c8:	ldr	r0, [pc, #168]	; 1578 <mo_resv+0x3f4>
    14cc:	mov	r3, #0
    14d0:	add	r0, pc, r0
    14d4:	stm	sp, {r0, r1, r8}
    14d8:	mov	r0, r4
    14dc:	str	r7, [sp, #12]
    14e0:	bl	d60 <sendto_match_servs@plt>
    14e4:	ldr	r3, [r9]
    14e8:	ldr	r0, [pc, #140]	; 157c <mo_resv+0x3f8>
    14ec:	ldr	r0, [pc, r0]
    14f0:	ldr	r1, [r5, #8]
    14f4:	ldr	r2, [r0]
    14f8:	ldr	r0, [pc, #128]	; 1580 <mo_resv+0x3fc>
    14fc:	add	r0, pc, r0
    1500:	stm	sp, {r0, r1, r8}
    1504:	mov	r0, r4
    1508:	str	r7, [sp, #12]
    150c:	bl	d60 <sendto_match_servs@plt>
    1510:	ldr	r6, [r6, #8]
    1514:	cmp	r6, #0
    1518:	bne	14b0 <mo_resv+0x32c>
    151c:	b	1458 <mo_resv+0x2d4>
    1520:	.word	0x00011ef8
    1524:	.word	0x00001403
    1528:	.word	0x000016a0
    152c:	.word	0x00011f18
    1530:	.word	0x00001439
    1534:	.word	0x000013e0
    1538:	.word	0x00001287
    153c:	.word	0x00001370
    1540:	.word	0x00001376
    1544:	.word	0x00011e4c
    1548:	.word	0x000013a6
    154c:	.word	0x00011cd4
    1550:	.word	0x00001292
    1554:	.word	0x00011cc0
    1558:	.word	0x0000126d
    155c:	.word	0x00011df0
    1560:	.word	0x0000139d
    1564:	.word	0x00011c94
    1568:	.word	0x00011da8
    156c:	.word	0x00011d8c
    1570:	.word	0x0000133d
    1574:	.word	0x00011c10
    1578:	.word	0x000011b2
    157c:	.word	0x00011bec
    1580:	.word	0x000011af
    1584:	.word	0x000011eb

00001588 <ms_unresv>:
    1588:	push	{r4, r5, fp, lr}
    158c:	add	fp, sp, #8
    1590:	sub	sp, sp, #8
    1594:	ldr	r0, [pc, #172]	; 1648 <ms_unresv+0xc0>
    1598:	mov	r4, r2
    159c:	ldr	r0, [pc, r0]
    15a0:	ldr	r5, [fp, #8]
    15a4:	ldr	r3, [r0]
    15a8:	ldr	r2, [r5, #4]
    15ac:	ldr	r0, [r5, #8]
    15b0:	ldr	r1, [pc, #148]	; 164c <ms_unresv+0xc4>
    15b4:	add	r1, pc, r1
    15b8:	str	r0, [sp, #4]
    15bc:	mov	r0, r4
    15c0:	str	r1, [sp]
    15c4:	ldr	r1, [pc, #132]	; 1650 <ms_unresv+0xc8>
    15c8:	add	r1, pc, r1
    15cc:	bl	d30 <propagate_generic@plt>
    15d0:	ldr	r0, [r5, #4]
    15d4:	ldr	r1, [pc, #120]	; 1654 <ms_unresv+0xcc>
    15d8:	ldr	r1, [pc, r1]
    15dc:	add	r1, r1, #88	; 0x58
    15e0:	bl	e80 <match@plt>
    15e4:	cmp	r0, #0
    15e8:	beq	1640 <ms_unresv+0xb8>
    15ec:	ldrh	r0, [r4, #80]	; 0x50
    15f0:	cmp	r0, #64	; 0x40
    15f4:	bne	1640 <ms_unresv+0xb8>
    15f8:	ldr	r0, [r4, #24]
    15fc:	cmp	r0, #0
    1600:	beq	1640 <ms_unresv+0xb8>
    1604:	ldr	r2, [r4, #32]
    1608:	ldr	r5, [r5, #8]
    160c:	add	r0, r4, #152	; 0x98
    1610:	add	r1, r4, #163	; 0xa3
    1614:	mov	r3, #512	; 0x200
    1618:	add	r2, r2, #88	; 0x58
    161c:	bl	ed4 <find_shared_conf@plt>
    1620:	cmp	r0, #0
    1624:	beq	1640 <ms_unresv+0xb8>
    1628:	mov	r0, r4
    162c:	mov	r1, r5
    1630:	mov	r2, #0
    1634:	sub	sp, fp, #8
    1638:	pop	{r4, r5, fp, lr}
    163c:	b	20b0 <remove_resv>
    1640:	sub	sp, fp, #8
    1644:	pop	{r4, r5, fp, pc}
    1648:	.word	0x00011b1c
    164c:	.word	0x00001155
    1650:	.word	0x00001028
    1654:	.word	0x00011afc

00001658 <me_unresv>:
    1658:	push	{r4, r5, fp, lr}
    165c:	add	fp, sp, #8
    1660:	ldrh	r0, [r2, #80]	; 0x50
    1664:	cmp	r0, #64	; 0x40
    1668:	bne	16b8 <me_unresv+0x60>
    166c:	ldr	r0, [r2, #24]
    1670:	mov	r4, r2
    1674:	cmp	r0, #0
    1678:	popeq	{r4, r5, fp, pc}
    167c:	ldr	r0, [fp, #8]
    1680:	ldr	r2, [r4, #32]
    1684:	add	r1, r4, #163	; 0xa3
    1688:	mov	r3, #512	; 0x200
    168c:	ldr	r5, [r0, #4]
    1690:	add	r0, r4, #152	; 0x98
    1694:	add	r2, r2, #88	; 0x58
    1698:	bl	ed4 <find_shared_conf@plt>
    169c:	cmp	r0, #0
    16a0:	beq	16b8 <me_unresv+0x60>
    16a4:	mov	r0, r4
    16a8:	mov	r1, r5
    16ac:	mov	r2, #0
    16b0:	pop	{r4, r5, fp, lr}
    16b4:	b	20b0 <remove_resv>
    16b8:	pop	{r4, r5, fp, pc}

000016bc <mo_unresv>:
    16bc:	push	{r4, r5, r6, r7, fp, lr}
    16c0:	add	fp, sp, #16
    16c4:	sub	sp, sp, #8
    16c8:	ldr	r0, [r2, #24]
    16cc:	mov	r4, r2
    16d0:	cmp	r0, #0
    16d4:	ldrne	r0, [r0, #36]	; 0x24
    16d8:	cmpne	r0, #0
    16dc:	bne	1714 <mo_unresv+0x58>
    16e0:	ldr	r0, [pc, #280]	; 1800 <mo_unresv+0x144>
    16e4:	add	r0, pc, r0
    16e8:	str	r0, [sp]
    16ec:	add	r3, r4, #88	; 0x58
    16f0:	ldr	r0, [pc, #268]	; 1804 <mo_unresv+0x148>
    16f4:	ldr	r0, [pc, r0]
    16f8:	ldr	r1, [pc, #264]	; 1808 <mo_unresv+0x14c>
    16fc:	add	r2, r0, #88	; 0x58
    1700:	add	r1, pc, r1
    1704:	mov	r0, r4
    1708:	bl	d84 <sendto_one@plt>
    170c:	sub	sp, fp, #16
    1710:	pop	{r4, r5, r6, r7, fp, pc}
    1714:	ldr	r7, [fp, #8]
    1718:	ldr	r1, [pc, #220]	; 17fc <mo_unresv+0x140>
    171c:	mov	r6, r3
    1720:	add	r1, pc, r1
    1724:	bl	ee0 <privilegeset_in_set@plt>
    1728:	cmp	r0, #0
    172c:	beq	16e0 <mo_unresv+0x24>
    1730:	mov	r5, #1
    1734:	cmp	r6, #4
    1738:	bne	1754 <mo_unresv+0x98>
    173c:	ldr	r0, [r7, #8]
    1740:	ldr	r1, [pc, #196]	; 180c <mo_unresv+0x150>
    1744:	add	r1, pc, r1
    1748:	bl	ef8 <irccmp@plt>
    174c:	cmp	r0, #0
    1750:	beq	176c <mo_unresv+0xb0>
    1754:	ldr	r1, [r7, #4]
    1758:	mov	r0, r4
    175c:	mov	r2, r5
    1760:	sub	sp, fp, #16
    1764:	pop	{r4, r5, r6, r7, fp, lr}
    1768:	b	20b0 <remove_resv>
    176c:	ldr	r0, [r4, #24]
    1770:	cmp	r0, #0
    1774:	ldrne	r0, [r0, #36]	; 0x24
    1778:	cmpne	r0, #0
    177c:	bne	178c <mo_unresv+0xd0>
    1780:	ldr	r0, [pc, #140]	; 1814 <mo_unresv+0x158>
    1784:	add	r0, pc, r0
    1788:	b	16e8 <mo_unresv+0x2c>
    178c:	ldr	r1, [pc, #124]	; 1810 <mo_unresv+0x154>
    1790:	add	r1, pc, r1
    1794:	bl	ee0 <privilegeset_in_set@plt>
    1798:	cmp	r0, #0
    179c:	beq	1780 <mo_unresv+0xc4>
    17a0:	ldr	r0, [pc, #112]	; 1818 <mo_unresv+0x15c>
    17a4:	ldr	r0, [pc, r0]
    17a8:	ldr	r2, [r7, #12]
    17ac:	ldr	r3, [r0]
    17b0:	ldr	r0, [r7, #4]
    17b4:	ldr	r1, [pc, #96]	; 181c <mo_unresv+0x160>
    17b8:	add	r1, pc, r1
    17bc:	str	r0, [sp, #4]
    17c0:	mov	r0, r4
    17c4:	str	r1, [sp]
    17c8:	ldr	r1, [pc, #80]	; 1820 <mo_unresv+0x164>
    17cc:	add	r1, pc, r1
    17d0:	bl	d30 <propagate_generic@plt>
    17d4:	ldr	r0, [r7, #12]
    17d8:	ldr	r1, [pc, #68]	; 1824 <mo_unresv+0x168>
    17dc:	ldr	r1, [pc, r1]
    17e0:	add	r1, r1, #88	; 0x58
    17e4:	bl	e80 <match@plt>
    17e8:	mov	r5, #0
    17ec:	cmp	r0, #0
    17f0:	subeq	sp, fp, #16
    17f4:	popeq	{r4, r5, r6, r7, fp, pc}
    17f8:	b	1754 <mo_unresv+0x98>
    17fc:	.word	0x00000ed7
    1800:	.word	0x00001168
    1804:	.word	0x000119e0
    1808:	.word	0x00000f01
    180c:	.word	0x00000ee4
    1810:	.word	0x00000e9b
    1814:	.word	0x00000eac
    1818:	.word	0x00011914
    181c:	.word	0x00000f51
    1820:	.word	0x00000e24
    1824:	.word	0x000118f8

00001828 <parse_resv>:
    1828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    182c:	add	fp, sp, #28
    1830:	sub	sp, sp, #28
    1834:	mov	r5, r0
    1838:	ldrb	r0, [r0, #65]	; 0x41
    183c:	ldr	r4, [fp, #8]
    1840:	mov	r9, r3
    1844:	mov	sl, r2
    1848:	mov	r6, r1
    184c:	tst	r0, #32
    1850:	beq	1860 <parse_resv+0x38>
    1854:	ldrh	r0, [r5, #80]	; 0x50
    1858:	cmp	r0, #64	; 0x40
    185c:	beq	188c <parse_resv+0x64>
    1860:	ldr	r2, [r5, #32]
    1864:	mov	r3, #256	; 0x100
    1868:	cmp	r9, #0
    186c:	add	r0, r5, #152	; 0x98
    1870:	add	r1, r5, #163	; 0xa3
    1874:	movwgt	r3, #128	; 0x80
    1878:	add	r2, r2, #88	; 0x58
    187c:	bl	ed4 <find_shared_conf@plt>
    1880:	cmp	r0, #0
    1884:	subeq	sp, fp, #28
    1888:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    188c:	cmp	r6, #0
    1890:	beq	18b0 <parse_resv+0x88>
    1894:	ldrb	r0, [r6]
    1898:	ldr	r1, [pc, #1916]	; 201c <parse_resv+0x7f4>
    189c:	ldr	r1, [pc, r1]
    18a0:	add	r0, r1, r0, lsl #2
    18a4:	ldrb	r0, [r0, #1]
    18a8:	tst	r0, #2
    18ac:	bne	18fc <parse_resv+0xd4>
    18b0:	mov	r0, r6
    18b4:	bl	f04 <clean_resv_nick@plt>
    18b8:	cmp	r0, #0
    18bc:	beq	1918 <parse_resv+0xf0>
    18c0:	mov	r0, r6
    18c4:	bl	e68 <strlen@plt>
    18c8:	cmp	r0, #65	; 0x41
    18cc:	bcs	1934 <parse_resv+0x10c>
    18d0:	mov	r0, r6
    18d4:	bl	ec8 <valid_wild_card_simple@plt>
    18d8:	cmp	r0, #0
    18dc:	beq	1950 <parse_resv+0x128>
    18e0:	mov	r0, r6
    18e4:	bl	e98 <find_nick_resv_mask@plt>
    18e8:	cmp	r0, #0
    18ec:	beq	1a5c <parse_resv+0x234>
    18f0:	ldr	r1, [pc, #1900]	; 2064 <parse_resv+0x83c>
    18f4:	add	r1, pc, r1
    18f8:	b	193c <parse_resv+0x114>
    18fc:	mov	r0, r6
    1900:	bl	eec <hash_find_resv@plt>
    1904:	cmp	r0, #0
    1908:	beq	1924 <parse_resv+0xfc>
    190c:	ldr	r1, [pc, #1804]	; 2020 <parse_resv+0x7f8>
    1910:	add	r1, pc, r1
    1914:	b	193c <parse_resv+0x114>
    1918:	ldr	r1, [pc, #1920]	; 20a0 <parse_resv+0x878>
    191c:	add	r1, pc, r1
    1920:	b	193c <parse_resv+0x114>
    1924:	mov	r0, r6
    1928:	bl	e68 <strlen@plt>
    192c:	cmp	r0, #201	; 0xc9
    1930:	bcc	1974 <parse_resv+0x14c>
    1934:	ldr	r1, [pc, #1768]	; 2024 <parse_resv+0x7fc>
    1938:	add	r1, pc, r1
    193c:	mov	r0, r5
    1940:	mov	r2, r6
    1944:	sub	sp, fp, #28
    1948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    194c:	b	eb0 <sendto_one_notice@plt>
    1950:	ldr	r0, [pc, #1796]	; 205c <parse_resv+0x834>
    1954:	ldr	r0, [pc, r0]
    1958:	ldr	r2, [r0, #240]	; 0xf0
    195c:	ldr	r1, [pc, #1788]	; 2060 <parse_resv+0x838>
    1960:	mov	r0, r5
    1964:	add	r1, pc, r1
    1968:	sub	sp, fp, #28
    196c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1970:	b	eb0 <sendto_one_notice@plt>
    1974:	bl	d3c <make_conf@plt>
    1978:	mov	r8, r0
    197c:	mov	r0, #256	; 0x100
    1980:	str	r0, [r8]
    1984:	mov	r0, #0
    1988:	str	r0, [r8, #32]
    198c:	bl	d48 <rb_current_time@plt>
    1990:	str	r0, [r8, #40]	; 0x28
    1994:	mov	r0, r6
    1998:	bl	e68 <strlen@plt>
    199c:	add	r0, r0, #1
    19a0:	bl	e38 <malloc@plt>
    19a4:	cmp	r0, #0
    19a8:	beq	2018 <parse_resv+0x7f0>
    19ac:	mov	r1, r6
    19b0:	mov	r7, r0
    19b4:	bl	e20 <strcpy@plt>
    19b8:	mov	r0, sl
    19bc:	str	r7, [r8, #16]
    19c0:	bl	e68 <strlen@plt>
    19c4:	add	r0, r0, #1
    19c8:	bl	e38 <malloc@plt>
    19cc:	cmp	r0, #0
    19d0:	beq	2018 <parse_resv+0x7f0>
    19d4:	mov	r1, sl
    19d8:	mov	r7, r0
    19dc:	bl	e20 <strcpy@plt>
    19e0:	mov	r0, r5
    19e4:	str	r7, [r8, #20]
    19e8:	bl	df0 <get_oper_name@plt>
    19ec:	bl	e14 <operhash_add@plt>
    19f0:	cmp	r4, #0
    19f4:	str	r0, [r8, #12]
    19f8:	beq	1b44 <parse_resv+0x31c>
    19fc:	ldr	r0, [r8, #4]
    1a00:	orr	r0, r0, #8912896	; 0x880000
    1a04:	str	r0, [r8, #4]
    1a08:	bl	d48 <rb_current_time@plt>
    1a0c:	add	r0, r0, r9
    1a10:	str	r0, [r8, #36]	; 0x24
    1a14:	str	r0, [r8, #44]	; 0x2c
    1a18:	mov	r0, r8
    1a1c:	bl	d90 <replace_old_ban@plt>
    1a20:	bl	e5c <rb_make_rb_dlink_node@plt>
    1a24:	cmp	r0, #0
    1a28:	beq	1ff8 <parse_resv+0x7d0>
    1a2c:	mov	r1, #0
    1a30:	str	r1, [r0, #4]
    1a34:	str	r8, [r0]
    1a38:	ldr	r1, [pc, #1512]	; 2028 <parse_resv+0x800>
    1a3c:	ldr	r1, [pc, r1]
    1a40:	ldr	r2, [r1]
    1a44:	cmp	r2, #0
    1a48:	str	r2, [r0, #8]
    1a4c:	beq	1c60 <parse_resv+0x438>
    1a50:	add	r2, r2, #4
    1a54:	str	r0, [r2]
    1a58:	b	1c70 <parse_resv+0x448>
    1a5c:	bl	d3c <make_conf@plt>
    1a60:	mov	r8, r0
    1a64:	mov	r0, #512	; 0x200
    1a68:	str	r0, [r8]
    1a6c:	mov	r0, #0
    1a70:	str	r0, [r8, #32]
    1a74:	bl	d48 <rb_current_time@plt>
    1a78:	str	r0, [r8, #40]	; 0x28
    1a7c:	mov	r0, r6
    1a80:	bl	e68 <strlen@plt>
    1a84:	add	r0, r0, #1
    1a88:	bl	e38 <malloc@plt>
    1a8c:	cmp	r0, #0
    1a90:	beq	2018 <parse_resv+0x7f0>
    1a94:	mov	r1, r6
    1a98:	mov	r7, r0
    1a9c:	bl	e20 <strcpy@plt>
    1aa0:	mov	r0, sl
    1aa4:	str	r7, [r8, #16]
    1aa8:	bl	e68 <strlen@plt>
    1aac:	add	r0, r0, #1
    1ab0:	bl	e38 <malloc@plt>
    1ab4:	cmp	r0, #0
    1ab8:	beq	2018 <parse_resv+0x7f0>
    1abc:	mov	r1, sl
    1ac0:	mov	r7, r0
    1ac4:	bl	e20 <strcpy@plt>
    1ac8:	mov	r0, r5
    1acc:	str	r7, [r8, #20]
    1ad0:	bl	df0 <get_oper_name@plt>
    1ad4:	bl	e14 <operhash_add@plt>
    1ad8:	cmp	r4, #0
    1adc:	str	r0, [r8, #12]
    1ae0:	beq	1bcc <parse_resv+0x3a4>
    1ae4:	ldr	r0, [r8, #4]
    1ae8:	orr	r0, r0, #8912896	; 0x880000
    1aec:	str	r0, [r8, #4]
    1af0:	bl	d48 <rb_current_time@plt>
    1af4:	add	r0, r0, r9
    1af8:	str	r0, [r8, #36]	; 0x24
    1afc:	str	r0, [r8, #44]	; 0x2c
    1b00:	mov	r0, r8
    1b04:	bl	d90 <replace_old_ban@plt>
    1b08:	bl	e5c <rb_make_rb_dlink_node@plt>
    1b0c:	cmp	r0, #0
    1b10:	beq	1ff8 <parse_resv+0x7d0>
    1b14:	mov	r1, #0
    1b18:	str	r1, [r0, #4]
    1b1c:	str	r8, [r0]
    1b20:	ldr	r1, [pc, #1344]	; 2068 <parse_resv+0x840>
    1b24:	ldr	r1, [pc, r1]
    1b28:	ldr	r2, [r1]
    1b2c:	cmp	r2, #0
    1b30:	str	r2, [r0, #8]
    1b34:	beq	1d7c <parse_resv+0x554>
    1b38:	add	r2, r2, #4
    1b3c:	str	r0, [r2]
    1b40:	b	1d8c <parse_resv+0x564>
    1b44:	cmp	r9, #1
    1b48:	blt	1ee8 <parse_resv+0x6c0>
    1b4c:	bl	d48 <rb_current_time@plt>
    1b50:	add	r0, r0, r9
    1b54:	str	r0, [r8, #36]	; 0x24
    1b58:	mov	r0, r5
    1b5c:	bl	df0 <get_oper_name@plt>
    1b60:	mov	r3, r0
    1b64:	movw	r0, #34953	; 0x8889
    1b68:	movt	r0, #34952	; 0x8888
    1b6c:	umull	r0, r1, r9, r0
    1b70:	lsr	r4, r1, #5
    1b74:	mov	r0, #256	; 0x100
    1b78:	mov	r1, #0
    1b7c:	stm	sp, {r4, r6, sl}
    1b80:	ldr	r2, [pc, #1212]	; 2044 <parse_resv+0x81c>
    1b84:	add	r2, pc, r2
    1b88:	bl	dc0 <sendto_realops_snomask@plt>
    1b8c:	mov	r0, r5
    1b90:	bl	df0 <get_oper_name@plt>
    1b94:	stm	sp, {r6, sl}
    1b98:	mov	r2, r0
    1b9c:	mov	r0, #7
    1ba0:	mov	r3, r4
    1ba4:	ldr	r1, [pc, #1180]	; 2048 <parse_resv+0x820>
    1ba8:	add	r1, pc, r1
    1bac:	bl	e74 <ilog@plt>
    1bb0:	ldr	r1, [pc, #1172]	; 204c <parse_resv+0x824>
    1bb4:	mov	r0, r5
    1bb8:	mov	r2, r4
    1bbc:	mov	r3, r6
    1bc0:	add	r1, pc, r1
    1bc4:	bl	eb0 <sendto_one_notice@plt>
    1bc8:	b	1d58 <parse_resv+0x530>
    1bcc:	cmp	r9, #1
    1bd0:	blt	1f6c <parse_resv+0x744>
    1bd4:	bl	d48 <rb_current_time@plt>
    1bd8:	add	r0, r0, r9
    1bdc:	str	r0, [r8, #36]	; 0x24
    1be0:	mov	r0, r5
    1be4:	bl	df0 <get_oper_name@plt>
    1be8:	mov	r3, r0
    1bec:	movw	r0, #34953	; 0x8889
    1bf0:	movt	r0, #34952	; 0x8888
    1bf4:	umull	r0, r1, r9, r0
    1bf8:	lsr	r4, r1, #5
    1bfc:	mov	r0, #256	; 0x100
    1c00:	mov	r1, #0
    1c04:	stm	sp, {r4, r6, sl}
    1c08:	ldr	r2, [pc, #1140]	; 2084 <parse_resv+0x85c>
    1c0c:	add	r2, pc, r2
    1c10:	bl	dc0 <sendto_realops_snomask@plt>
    1c14:	mov	r0, r5
    1c18:	bl	df0 <get_oper_name@plt>
    1c1c:	stm	sp, {r6, sl}
    1c20:	mov	r2, r0
    1c24:	mov	r0, #7
    1c28:	mov	r3, r4
    1c2c:	ldr	r1, [pc, #1108]	; 2088 <parse_resv+0x860>
    1c30:	add	r1, pc, r1
    1c34:	bl	e74 <ilog@plt>
    1c38:	ldr	r1, [pc, #1100]	; 208c <parse_resv+0x864>
    1c3c:	mov	r0, r5
    1c40:	mov	r2, r4
    1c44:	mov	r3, r6
    1c48:	add	r1, pc, r1
    1c4c:	bl	eb0 <sendto_one_notice@plt>
    1c50:	bl	e5c <rb_make_rb_dlink_node@plt>
    1c54:	cmp	r0, #0
    1c58:	bne	1e80 <parse_resv+0x658>
    1c5c:	b	1ff8 <parse_resv+0x7d0>
    1c60:	mov	r2, r1
    1c64:	ldr	r3, [r2, #4]!
    1c68:	cmp	r3, #0
    1c6c:	streq	r0, [r2]
    1c70:	str	r0, [r1]
    1c74:	ldr	r0, [r1, #8]
    1c78:	add	r0, r0, #1
    1c7c:	str	r0, [r1, #8]
    1c80:	mov	r0, r5
    1c84:	bl	df0 <get_oper_name@plt>
    1c88:	mov	r3, r0
    1c8c:	movw	r0, #34953	; 0x8889
    1c90:	movt	r0, #34952	; 0x8888
    1c94:	smmla	r0, r9, r0, r9
    1c98:	asr	r1, r0, #5
    1c9c:	add	r4, r1, r0, lsr #31
    1ca0:	mov	r0, #256	; 0x100
    1ca4:	mov	r1, #0
    1ca8:	stm	sp, {r4, r6, sl}
    1cac:	ldr	r2, [pc, #888]	; 202c <parse_resv+0x804>
    1cb0:	add	r2, pc, r2
    1cb4:	bl	dc0 <sendto_realops_snomask@plt>
    1cb8:	mov	r0, r5
    1cbc:	bl	df0 <get_oper_name@plt>
    1cc0:	stm	sp, {r6, sl}
    1cc4:	mov	r2, r0
    1cc8:	mov	r0, #7
    1ccc:	mov	r3, r4
    1cd0:	ldr	r1, [pc, #856]	; 2030 <parse_resv+0x808>
    1cd4:	add	r1, pc, r1
    1cd8:	bl	e74 <ilog@plt>
    1cdc:	ldr	r1, [pc, #848]	; 2034 <parse_resv+0x80c>
    1ce0:	mov	r0, r5
    1ce4:	mov	r2, r4
    1ce8:	mov	r3, r6
    1cec:	add	r1, pc, r1
    1cf0:	bl	eb0 <sendto_one_notice@plt>
    1cf4:	ldr	r0, [pc, #828]	; 2038 <parse_resv+0x810>
    1cf8:	add	r5, r5, #396	; 0x18c
    1cfc:	ldr	r0, [pc, r0]
    1d00:	ldr	r0, [r0]
    1d04:	ldr	r1, [pc, #816]	; 203c <parse_resv+0x814>
    1d08:	ldr	r1, [pc, r1]
    1d0c:	ldr	r2, [r8, #16]
    1d10:	ldr	r3, [r8, #36]	; 0x24
    1d14:	ldr	r7, [r8, #40]	; 0x28
    1d18:	ldr	r6, [r8, #44]	; 0x2c
    1d1c:	ldr	r1, [r1]
    1d20:	ldr	r4, [pc, #792]	; 2040 <parse_resv+0x818>
    1d24:	sub	r6, r6, r7
    1d28:	sub	r3, r3, r7
    1d2c:	add	r4, pc, r4
    1d30:	stm	sp, {r4, r5}
    1d34:	str	r2, [sp, #8]
    1d38:	add	r2, sp, #16
    1d3c:	str	r7, [sp, #12]
    1d40:	stm	r2, {r3, r6, sl}
    1d44:	orr	r2, r0, r1
    1d48:	mov	r0, #0
    1d4c:	mov	r1, #0
    1d50:	mov	r3, #0
    1d54:	bl	e2c <sendto_server@plt>
    1d58:	ldr	r0, [r8, #16]
    1d5c:	mov	r1, r8
    1d60:	bl	d54 <add_to_resv_hash@plt>
    1d64:	ldr	r0, [r8, #16]
    1d68:	ldr	r1, [r8, #20]
    1d6c:	mov	r2, r9
    1d70:	sub	sp, fp, #28
    1d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d78:	b	dd8 <resv_chan_forcepart@plt>
    1d7c:	mov	r2, r1
    1d80:	ldr	r3, [r2, #4]!
    1d84:	cmp	r3, #0
    1d88:	streq	r0, [r2]
    1d8c:	str	r0, [r1]
    1d90:	ldr	r0, [r1, #8]
    1d94:	add	r0, r0, #1
    1d98:	str	r0, [r1, #8]
    1d9c:	mov	r0, r5
    1da0:	bl	df0 <get_oper_name@plt>
    1da4:	mov	r3, r0
    1da8:	movw	r0, #34953	; 0x8889
    1dac:	movt	r0, #34952	; 0x8888
    1db0:	smmla	r0, r9, r0, r9
    1db4:	asr	r1, r0, #5
    1db8:	add	r4, r1, r0, lsr #31
    1dbc:	mov	r0, #256	; 0x100
    1dc0:	mov	r1, #0
    1dc4:	stm	sp, {r4, r6, sl}
    1dc8:	ldr	r2, [pc, #668]	; 206c <parse_resv+0x844>
    1dcc:	add	r2, pc, r2
    1dd0:	bl	dc0 <sendto_realops_snomask@plt>
    1dd4:	mov	r0, r5
    1dd8:	bl	df0 <get_oper_name@plt>
    1ddc:	stm	sp, {r6, sl}
    1de0:	mov	r2, r0
    1de4:	mov	r0, #7
    1de8:	mov	r3, r4
    1dec:	ldr	r1, [pc, #636]	; 2070 <parse_resv+0x848>
    1df0:	add	r1, pc, r1
    1df4:	bl	e74 <ilog@plt>
    1df8:	ldr	r1, [pc, #628]	; 2074 <parse_resv+0x84c>
    1dfc:	mov	r0, r5
    1e00:	mov	r2, r4
    1e04:	mov	r3, r6
    1e08:	add	r1, pc, r1
    1e0c:	bl	eb0 <sendto_one_notice@plt>
    1e10:	ldr	r0, [pc, #608]	; 2078 <parse_resv+0x850>
    1e14:	add	r5, r5, #396	; 0x18c
    1e18:	ldr	r0, [pc, r0]
    1e1c:	ldr	r0, [r0]
    1e20:	ldr	r1, [pc, #596]	; 207c <parse_resv+0x854>
    1e24:	ldr	r1, [pc, r1]
    1e28:	ldr	r2, [r8, #16]
    1e2c:	ldr	r3, [r8, #36]	; 0x24
    1e30:	ldr	r7, [r8, #40]	; 0x28
    1e34:	ldr	r6, [r8, #44]	; 0x2c
    1e38:	ldr	r1, [r1]
    1e3c:	ldr	r4, [pc, #572]	; 2080 <parse_resv+0x858>
    1e40:	sub	r6, r6, r7
    1e44:	sub	r3, r3, r7
    1e48:	add	r4, pc, r4
    1e4c:	stm	sp, {r4, r5}
    1e50:	str	r2, [sp, #8]
    1e54:	add	r2, sp, #16
    1e58:	str	r7, [sp, #12]
    1e5c:	stm	r2, {r3, r6, sl}
    1e60:	orr	r2, r0, r1
    1e64:	mov	r0, #0
    1e68:	mov	r1, #0
    1e6c:	mov	r3, #0
    1e70:	bl	e2c <sendto_server@plt>
    1e74:	bl	e5c <rb_make_rb_dlink_node@plt>
    1e78:	cmp	r0, #0
    1e7c:	beq	1ff8 <parse_resv+0x7d0>
    1e80:	mov	r1, #0
    1e84:	str	r1, [r0, #4]
    1e88:	str	r8, [r0]
    1e8c:	ldr	r1, [pc, #520]	; 209c <parse_resv+0x874>
    1e90:	ldr	r1, [pc, r1]
    1e94:	ldr	r2, [r1]
    1e98:	cmp	r2, #0
    1e9c:	str	r2, [r0, #8]
    1ea0:	beq	1eb0 <parse_resv+0x688>
    1ea4:	add	r2, r2, #4
    1ea8:	str	r0, [r2]
    1eac:	b	1ec0 <parse_resv+0x698>
    1eb0:	mov	r2, r1
    1eb4:	ldr	r3, [r2, #4]!
    1eb8:	cmp	r3, #0
    1ebc:	streq	r0, [r2]
    1ec0:	str	r0, [r1]
    1ec4:	mov	r2, r9
    1ec8:	ldr	r0, [r1, #8]
    1ecc:	add	r0, r0, #1
    1ed0:	str	r0, [r1, #8]
    1ed4:	ldr	r0, [r8, #16]
    1ed8:	ldr	r1, [r8, #20]
    1edc:	sub	sp, fp, #28
    1ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1ee4:	b	da8 <resv_nick_fnc@plt>
    1ee8:	mov	r0, r5
    1eec:	bl	df0 <get_oper_name@plt>
    1ef0:	stm	sp, {r6, sl}
    1ef4:	mov	r3, r0
    1ef8:	mov	r0, #256	; 0x100
    1efc:	mov	r1, #0
    1f00:	mov	r4, #0
    1f04:	ldr	r2, [pc, #324]	; 2050 <parse_resv+0x828>
    1f08:	add	r2, pc, r2
    1f0c:	bl	dc0 <sendto_realops_snomask@plt>
    1f10:	mov	r0, r5
    1f14:	bl	df0 <get_oper_name@plt>
    1f18:	str	sl, [sp]
    1f1c:	mov	r2, r0
    1f20:	mov	r0, #7
    1f24:	mov	r3, r6
    1f28:	ldr	r1, [pc, #292]	; 2054 <parse_resv+0x82c>
    1f2c:	add	r1, pc, r1
    1f30:	bl	e74 <ilog@plt>
    1f34:	ldr	r1, [pc, #284]	; 2058 <parse_resv+0x830>
    1f38:	mov	r0, r5
    1f3c:	mov	r2, r6
    1f40:	add	r1, pc, r1
    1f44:	bl	eb0 <sendto_one_notice@plt>
    1f48:	ldr	r0, [r8, #20]
    1f4c:	ldr	r2, [r8, #16]
    1f50:	mov	r1, r5
    1f54:	mov	r3, #0
    1f58:	stm	sp, {r0, r4}
    1f5c:	mov	r0, #3
    1f60:	str	r4, [sp, #8]
    1f64:	bl	dcc <bandb_add@plt>
    1f68:	b	1d58 <parse_resv+0x530>
    1f6c:	mov	r0, r5
    1f70:	bl	df0 <get_oper_name@plt>
    1f74:	stm	sp, {r6, sl}
    1f78:	mov	r3, r0
    1f7c:	mov	r0, #256	; 0x100
    1f80:	mov	r1, #0
    1f84:	mov	r4, #0
    1f88:	ldr	r2, [pc, #256]	; 2090 <parse_resv+0x868>
    1f8c:	add	r2, pc, r2
    1f90:	bl	dc0 <sendto_realops_snomask@plt>
    1f94:	mov	r0, r5
    1f98:	bl	df0 <get_oper_name@plt>
    1f9c:	str	sl, [sp]
    1fa0:	mov	r2, r0
    1fa4:	mov	r0, #7
    1fa8:	mov	r3, r6
    1fac:	ldr	r1, [pc, #224]	; 2094 <parse_resv+0x86c>
    1fb0:	add	r1, pc, r1
    1fb4:	bl	e74 <ilog@plt>
    1fb8:	ldr	r1, [pc, #216]	; 2098 <parse_resv+0x870>
    1fbc:	mov	r0, r5
    1fc0:	mov	r2, r6
    1fc4:	add	r1, pc, r1
    1fc8:	bl	eb0 <sendto_one_notice@plt>
    1fcc:	ldr	r0, [r8, #20]
    1fd0:	ldr	r2, [r8, #16]
    1fd4:	mov	r1, r5
    1fd8:	mov	r3, #0
    1fdc:	stm	sp, {r0, r4}
    1fe0:	mov	r0, #3
    1fe4:	str	r4, [sp, #8]
    1fe8:	bl	dcc <bandb_add@plt>
    1fec:	bl	e5c <rb_make_rb_dlink_node@plt>
    1ff0:	cmp	r0, #0
    1ff4:	bne	1e80 <parse_resv+0x658>
    1ff8:	ldr	r0, [pc, #164]	; 20a4 <parse_resv+0x87c>
    1ffc:	ldr	r1, [pc, #164]	; 20a8 <parse_resv+0x880>
    2000:	ldr	r3, [pc, #164]	; 20ac <parse_resv+0x884>
    2004:	mov	r2, #144	; 0x90
    2008:	add	r0, pc, r0
    200c:	add	r1, pc, r1
    2010:	add	r3, pc, r3
    2014:	bl	f10 <__assert_fail@plt>
    2018:	bl	d9c <rb_outofmemory@plt>
    201c:	.word	0x00011830
    2020:	.word	0x00000db4
    2024:	.word	0x00000dbb
    2028:	.word	0x00011678
    202c:	.word	0x00000a5c
    2030:	.word	0x00000a63
    2034:	.word	0x00000a59
    2038:	.word	0x000113c4
    203c:	.word	0x000113b4
    2040:	.word	0x00000a39
    2044:	.word	0x00000c00
    2048:	.word	0x00000b8f
    204c:	.word	0x00000bf2
    2050:	.word	0x000008cd
    2054:	.word	0x000008c5
    2058:	.word	0x000008be
    205c:	.word	0x00011788
    2060:	.word	0x00000eab
    2064:	.word	0x00000f5d
    2068:	.word	0x00011590
    206c:	.word	0x00000940
    2070:	.word	0x00000947
    2074:	.word	0x0000093d
    2078:	.word	0x000112a8
    207c:	.word	0x00011298
    2080:	.word	0x0000091d
    2084:	.word	0x00000b78
    2088:	.word	0x00000b07
    208c:	.word	0x00000b6a
    2090:	.word	0x00000849
    2094:	.word	0x00000841
    2098:	.word	0x0000083a
    209c:	.word	0x00011220
    20a0:	.word	0x00000f61
    20a4:	.word	0x000008f6
    20a8:	.word	0x0000089b
    20ac:	.word	0x000008b3

000020b0 <remove_resv>:
    20b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    20b4:	add	fp, sp, #24
    20b8:	sub	sp, sp, #24
    20bc:	mov	r5, r2
    20c0:	mov	r6, r1
    20c4:	mov	r8, r0
    20c8:	cmp	r1, #0
    20cc:	beq	20ec <remove_resv+0x3c>
    20d0:	ldrb	r0, [r6]
    20d4:	ldr	r1, [pc, #1172]	; 2570 <remove_resv+0x4c0>
    20d8:	ldr	r1, [pc, r1]
    20dc:	add	r0, r1, r0, lsl #2
    20e0:	ldrb	r0, [r0, #1]
    20e4:	tst	r0, #2
    20e8:	bne	2178 <remove_resv+0xc8>
    20ec:	ldr	r9, [pc, #1212]	; 25b0 <remove_resv+0x500>
    20f0:	ldr	r9, [pc, r9]
    20f4:	ldr	r7, [r9]
    20f8:	cmp	r7, #0
    20fc:	bne	2110 <remove_resv+0x60>
    2100:	b	22e0 <remove_resv+0x230>
    2104:	ldr	r7, [r7, #8]
    2108:	cmp	r7, #0
    210c:	beq	22e0 <remove_resv+0x230>
    2110:	ldr	r4, [r7]
    2114:	mov	r1, r6
    2118:	ldr	r0, [r4, #16]
    211c:	bl	ef8 <irccmp@plt>
    2120:	cmp	r0, #0
    2124:	bne	2104 <remove_resv+0x54>
    2128:	cmp	r4, #0
    212c:	beq	22e0 <remove_resv+0x230>
    2130:	ldr	r0, [r4, #44]	; 0x2c
    2134:	cmp	r0, #0
    2138:	beq	23f4 <remove_resv+0x344>
    213c:	cmp	r5, #0
    2140:	beq	2348 <remove_resv+0x298>
    2144:	ldr	r0, [pc, #1128]	; 25b4 <remove_resv+0x504>
    2148:	ldr	r0, [pc, r0]
    214c:	ldr	r7, [r0]
    2150:	cmp	r7, #0
    2154:	bne	2168 <remove_resv+0xb8>
    2158:	b	2340 <remove_resv+0x290>
    215c:	ldr	r7, [r7, #8]
    2160:	cmp	r7, #0
    2164:	beq	2340 <remove_resv+0x290>
    2168:	ldr	r0, [r7]
    216c:	cmp	r0, r4
    2170:	bne	215c <remove_resv+0xac>
    2174:	b	21d0 <remove_resv+0x120>
    2178:	mov	r0, r6
    217c:	bl	eec <hash_find_resv@plt>
    2180:	cmp	r0, #0
    2184:	beq	22e0 <remove_resv+0x230>
    2188:	mov	r4, r0
    218c:	ldr	r0, [r0, #44]	; 0x2c
    2190:	cmp	r0, #0
    2194:	beq	2354 <remove_resv+0x2a4>
    2198:	cmp	r5, #0
    219c:	beq	2348 <remove_resv+0x298>
    21a0:	ldr	r0, [pc, #996]	; 258c <remove_resv+0x4dc>
    21a4:	ldr	r0, [pc, r0]
    21a8:	ldr	r7, [r0]
    21ac:	cmp	r7, #0
    21b0:	bne	21c4 <remove_resv+0x114>
    21b4:	b	2340 <remove_resv+0x290>
    21b8:	ldr	r7, [r7, #8]
    21bc:	cmp	r7, #0
    21c0:	beq	2340 <remove_resv+0x290>
    21c4:	ldr	r0, [r7]
    21c8:	cmp	r0, r4
    21cc:	bne	21b8 <remove_resv+0x108>
    21d0:	ldr	r1, [pc, #992]	; 25b8 <remove_resv+0x508>
    21d4:	mov	r0, r8
    21d8:	mov	r2, r6
    21dc:	add	r1, pc, r1
    21e0:	bl	eb0 <sendto_one_notice@plt>
    21e4:	mov	r0, r8
    21e8:	bl	df0 <get_oper_name@plt>
    21ec:	str	r6, [sp]
    21f0:	mov	r3, r0
    21f4:	mov	r0, #256	; 0x100
    21f8:	mov	r1, #0
    21fc:	mov	r9, #0
    2200:	ldr	r2, [pc, #948]	; 25bc <remove_resv+0x50c>
    2204:	add	r2, pc, r2
    2208:	bl	dc0 <sendto_realops_snomask@plt>
    220c:	mov	r0, r8
    2210:	bl	df0 <get_oper_name@plt>
    2214:	ldr	r1, [pc, #932]	; 25c0 <remove_resv+0x510>
    2218:	mov	r2, r0
    221c:	mov	r0, #7
    2220:	mov	r3, r6
    2224:	add	r1, pc, r1
    2228:	bl	e74 <ilog@plt>
    222c:	bl	d48 <rb_current_time@plt>
    2230:	ldr	r1, [r4, #40]	; 0x28
    2234:	mov	r5, r0
    2238:	ldr	r0, [r4, #12]
    223c:	mov	r2, r5
    2240:	cmp	r1, r5
    2244:	addge	r2, r1, #1
    2248:	str	r2, [r4, #36]	; 0x24
    224c:	str	r2, [r4, #40]	; 0x28
    2250:	bl	db4 <operhash_delete@plt>
    2254:	mov	r0, r8
    2258:	bl	df0 <get_oper_name@plt>
    225c:	bl	e14 <operhash_add@plt>
    2260:	str	r0, [r4, #12]
    2264:	add	r1, r8, #396	; 0x18c
    2268:	ldr	r0, [r4, #4]
    226c:	ldr	ip, [r4, #16]
    2270:	ldr	r2, [r4, #40]	; 0x28
    2274:	ldr	r3, [r4, #44]	; 0x2c
    2278:	orr	r0, r0, #8912896	; 0x880000
    227c:	sub	r3, r3, r2
    2280:	str	r0, [r4, #4]
    2284:	ldr	r0, [pc, #824]	; 25c4 <remove_resv+0x514>
    2288:	ldr	r0, [pc, r0]
    228c:	ldr	lr, [r0]
    2290:	ldr	r6, [pc, #816]	; 25c8 <remove_resv+0x518>
    2294:	ldr	r6, [pc, r6]
    2298:	ldr	r6, [r6]
    229c:	ldr	r0, [pc, #808]	; 25cc <remove_resv+0x51c>
    22a0:	add	r0, pc, r0
    22a4:	stm	sp, {r0, r1, ip}
    22a8:	str	r2, [sp, #12]
    22ac:	str	r3, [sp, #20]
    22b0:	orr	r2, lr, r6
    22b4:	mov	r0, #0
    22b8:	mov	r1, #0
    22bc:	mov	r3, #0
    22c0:	str	r9, [sp, #16]
    22c4:	bl	e2c <sendto_server@plt>
    22c8:	mov	r0, r4
    22cc:	mov	r1, r7
    22d0:	mov	r2, r5
    22d4:	sub	sp, fp, #24
    22d8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    22dc:	b	de4 <deactivate_conf@plt>
    22e0:	cmp	r5, #0
    22e4:	ldrne	r0, [pc, #648]	; 2574 <remove_resv+0x4c4>
    22e8:	ldrne	r0, [pc, r0]
    22ec:	ldrne	r0, [r0, #8]
    22f0:	cmpne	r0, #0
    22f4:	beq	2324 <remove_resv+0x274>
    22f8:	ldr	r0, [pc, #632]	; 2578 <remove_resv+0x4c8>
    22fc:	mov	r2, #512	; 0x200
    2300:	ldr	r0, [pc, r0]
    2304:	ldr	r3, [r0]
    2308:	ldr	r0, [pc, #620]	; 257c <remove_resv+0x4cc>
    230c:	add	r0, pc, r0
    2310:	stm	sp, {r0, r6}
    2314:	mov	r0, r8
    2318:	ldr	r1, [pc, #608]	; 2580 <remove_resv+0x4d0>
    231c:	add	r1, pc, r1
    2320:	bl	e08 <cluster_generic@plt>
    2324:	ldr	r1, [pc, #600]	; 2584 <remove_resv+0x4d4>
    2328:	add	r1, pc, r1
    232c:	mov	r0, r8
    2330:	mov	r2, r6
    2334:	sub	sp, fp, #24
    2338:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    233c:	b	eb0 <sendto_one_notice@plt>
    2340:	sub	sp, fp, #24
    2344:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2348:	ldr	r1, [pc, #568]	; 2588 <remove_resv+0x4d8>
    234c:	add	r1, pc, r1
    2350:	b	232c <remove_resv+0x27c>
    2354:	cmp	r5, #0
    2358:	ldrne	r0, [pc, #560]	; 2590 <remove_resv+0x4e0>
    235c:	ldrne	r0, [pc, r0]
    2360:	ldrne	r0, [r0, #8]
    2364:	cmpne	r0, #0
    2368:	beq	2398 <remove_resv+0x2e8>
    236c:	ldr	r0, [pc, #544]	; 2594 <remove_resv+0x4e4>
    2370:	mov	r2, #512	; 0x200
    2374:	ldr	r0, [pc, r0]
    2378:	ldr	r3, [r0]
    237c:	ldr	r0, [pc, #532]	; 2598 <remove_resv+0x4e8>
    2380:	add	r0, pc, r0
    2384:	stm	sp, {r0, r6}
    2388:	mov	r0, r8
    238c:	ldr	r1, [pc, #520]	; 259c <remove_resv+0x4ec>
    2390:	add	r1, pc, r1
    2394:	bl	e08 <cluster_generic@plt>
    2398:	ldr	r1, [pc, #512]	; 25a0 <remove_resv+0x4f0>
    239c:	mov	r0, r8
    23a0:	mov	r2, r6
    23a4:	add	r1, pc, r1
    23a8:	bl	eb0 <sendto_one_notice@plt>
    23ac:	mov	r0, r8
    23b0:	bl	df0 <get_oper_name@plt>
    23b4:	ldr	r1, [pc, #488]	; 25a4 <remove_resv+0x4f4>
    23b8:	mov	r2, r0
    23bc:	mov	r0, #7
    23c0:	mov	r3, r6
    23c4:	add	r1, pc, r1
    23c8:	bl	e74 <ilog@plt>
    23cc:	ldr	r0, [r4, #36]	; 0x24
    23d0:	cmp	r0, #0
    23d4:	beq	2494 <remove_resv+0x3e4>
    23d8:	mov	r0, r8
    23dc:	bl	df0 <get_oper_name@plt>
    23e0:	str	r6, [sp]
    23e4:	mov	r3, r0
    23e8:	ldr	r2, [pc, #444]	; 25ac <remove_resv+0x4fc>
    23ec:	add	r2, pc, r2
    23f0:	b	24bc <remove_resv+0x40c>
    23f4:	cmp	r5, #0
    23f8:	ldrne	r0, [pc, #464]	; 25d0 <remove_resv+0x520>
    23fc:	ldrne	r0, [pc, r0]
    2400:	ldrne	r0, [r0, #8]
    2404:	cmpne	r0, #0
    2408:	beq	2438 <remove_resv+0x388>
    240c:	ldr	r0, [pc, #448]	; 25d4 <remove_resv+0x524>
    2410:	mov	r2, #512	; 0x200
    2414:	ldr	r0, [pc, r0]
    2418:	ldr	r3, [r0]
    241c:	ldr	r0, [pc, #436]	; 25d8 <remove_resv+0x528>
    2420:	add	r0, pc, r0
    2424:	stm	sp, {r0, r6}
    2428:	mov	r0, r8
    242c:	ldr	r1, [pc, #424]	; 25dc <remove_resv+0x52c>
    2430:	add	r1, pc, r1
    2434:	bl	e08 <cluster_generic@plt>
    2438:	ldr	r1, [pc, #416]	; 25e0 <remove_resv+0x530>
    243c:	mov	r0, r8
    2440:	mov	r2, r6
    2444:	add	r1, pc, r1
    2448:	bl	eb0 <sendto_one_notice@plt>
    244c:	mov	r0, r8
    2450:	bl	df0 <get_oper_name@plt>
    2454:	ldr	r1, [pc, #392]	; 25e4 <remove_resv+0x534>
    2458:	mov	r2, r0
    245c:	mov	r0, #7
    2460:	mov	r3, r6
    2464:	add	r1, pc, r1
    2468:	bl	e74 <ilog@plt>
    246c:	ldr	r0, [r4, #36]	; 0x24
    2470:	cmp	r0, #0
    2474:	beq	24e4 <remove_resv+0x434>
    2478:	mov	r0, r8
    247c:	bl	df0 <get_oper_name@plt>
    2480:	str	r6, [sp]
    2484:	mov	r3, r0
    2488:	ldr	r2, [pc, #348]	; 25ec <remove_resv+0x53c>
    248c:	add	r2, pc, r2
    2490:	b	250c <remove_resv+0x45c>
    2494:	ldr	r1, [r4, #16]
    2498:	mov	r0, #3
    249c:	mov	r2, #0
    24a0:	bl	ebc <bandb_del@plt>
    24a4:	mov	r0, r8
    24a8:	bl	df0 <get_oper_name@plt>
    24ac:	str	r6, [sp]
    24b0:	mov	r3, r0
    24b4:	ldr	r2, [pc, #236]	; 25a8 <remove_resv+0x4f8>
    24b8:	add	r2, pc, r2
    24bc:	mov	r0, #256	; 0x100
    24c0:	mov	r1, #0
    24c4:	bl	dc0 <sendto_realops_snomask@plt>
    24c8:	mov	r0, r6
    24cc:	mov	r1, r4
    24d0:	bl	e8c <del_from_resv_hash@plt>
    24d4:	mov	r0, r4
    24d8:	sub	sp, fp, #24
    24dc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    24e0:	b	e50 <free_conf@plt>
    24e4:	ldr	r1, [r4, #16]
    24e8:	mov	r0, #3
    24ec:	mov	r2, #0
    24f0:	bl	ebc <bandb_del@plt>
    24f4:	mov	r0, r8
    24f8:	bl	df0 <get_oper_name@plt>
    24fc:	str	r6, [sp]
    2500:	mov	r3, r0
    2504:	ldr	r2, [pc, #220]	; 25e8 <remove_resv+0x538>
    2508:	add	r2, pc, r2
    250c:	mov	r0, #256	; 0x100
    2510:	mov	r1, #0
    2514:	bl	dc0 <sendto_realops_snomask@plt>
    2518:	ldr	r0, [r7, #8]
    251c:	ldr	r1, [r7, #4]
    2520:	mov	r2, r9
    2524:	cmp	r0, #0
    2528:	streq	r1, [r9, #4]
    252c:	strne	r1, [r0, #4]
    2530:	ldrne	r1, [r7, #4]
    2534:	cmp	r1, #0
    2538:	addne	r2, r1, #8
    253c:	str	r0, [r2]
    2540:	mov	r0, #0
    2544:	str	r0, [r7, #4]
    2548:	str	r0, [r7, #8]
    254c:	ldr	r0, [r9, #8]
    2550:	sub	r0, r0, #1
    2554:	str	r0, [r9, #8]
    2558:	mov	r0, r7
    255c:	bl	dfc <rb_free_rb_dlink_node@plt>
    2560:	mov	r0, r4
    2564:	sub	sp, fp, #24
    2568:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    256c:	b	e50 <free_conf@plt>
    2570:	.word	0x00010ff4
    2574:	.word	0x00010de0
    2578:	.word	0x00010db8
    257c:	.word	0x000003fd
    2580:	.word	0x000002d4
    2584:	.word	0x000005e0
    2588:	.word	0x000005cc
    258c:	.word	0x00010f10
    2590:	.word	0x00010d6c
    2594:	.word	0x00010d44
    2598:	.word	0x00000389
    259c:	.word	0x00000260
    25a0:	.word	0x000005a6
    25a4:	.word	0x000005c9
    25a8:	.word	0x000004fc
    25ac:	.word	0x000005ea
    25b0:	.word	0x00010fc0
    25b4:	.word	0x00010f6c
    25b8:	.word	0x0000076e
    25bc:	.word	0x00000760
    25c0:	.word	0x00000769
    25c4:	.word	0x00010e38
    25c8:	.word	0x00010e28
    25cc:	.word	0x000006f6
    25d0:	.word	0x00010ccc
    25d4:	.word	0x00010ca4
    25d8:	.word	0x000002e9
    25dc:	.word	0x000001c0
    25e0:	.word	0x00000506
    25e4:	.word	0x00000529
    25e8:	.word	0x000004ac
    25ec:	.word	0x0000054a

Disassembly of section .fini:

000025f0 <_fini>:
    25f0:	push	{r3, lr}
    25f4:	pop	{r3, pc}
