
../repos/coreutils/src/ln:     file format elf32-littlearm


Disassembly of section .init:

00011320 <.init>:
   11320:	push	{r3, lr}
   11324:	bl	1170c <__mempcpy_chk@plt+0x48>
   11328:	pop	{r3, pc}

Disassembly of section .plt:

0001132c <calloc@plt-0x14>:
   1132c:	push	{lr}		; (str lr, [sp, #-4]!)
   11330:	ldr	lr, [pc, #4]	; 1133c <calloc@plt-0x4>
   11334:	add	lr, pc, lr
   11338:	ldr	pc, [lr, #8]!
   1133c:	andeq	sl, r1, r4, asr #25

00011340 <calloc@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #106496	; 0x1a000
   11348:	ldr	pc, [ip, #3268]!	; 0xcc4

0001134c <fputs_unlocked@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #106496	; 0x1a000
   11354:	ldr	pc, [ip, #3260]!	; 0xcbc

00011358 <raise@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #106496	; 0x1a000
   11360:	ldr	pc, [ip, #3252]!	; 0xcb4

00011364 <__getdelim@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #106496	; 0x1a000
   1136c:	ldr	pc, [ip, #3244]!	; 0xcac

00011370 <strcmp@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #106496	; 0x1a000
   11378:	ldr	pc, [ip, #3236]!	; 0xca4

0001137c <pathconf@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #106496	; 0x1a000
   11384:	ldr	pc, [ip, #3228]!	; 0xc9c

00011388 <rewinddir@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #106496	; 0x1a000
   11390:	ldr	pc, [ip, #3220]!	; 0xc94

00011394 <fflush@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #106496	; 0x1a000
   1139c:	ldr	pc, [ip, #3212]!	; 0xc8c

000113a0 <unlinkat@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #106496	; 0x1a000
   113a8:	ldr	pc, [ip, #3204]!	; 0xc84

000113ac <memmove@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #106496	; 0x1a000
   113b4:	ldr	pc, [ip, #3196]!	; 0xc7c

000113b8 <free@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #106496	; 0x1a000
   113c0:	ldr	pc, [ip, #3188]!	; 0xc74

000113c4 <faccessat@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #106496	; 0x1a000
   113cc:	ldr	pc, [ip, #3180]!	; 0xc6c

000113d0 <clock_gettime@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #106496	; 0x1a000
   113d8:	ldr	pc, [ip, #3172]!	; 0xc64

000113dc <_exit@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #106496	; 0x1a000
   113e4:	ldr	pc, [ip, #3164]!	; 0xc5c

000113e8 <memcpy@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #106496	; 0x1a000
   113f0:	ldr	pc, [ip, #3156]!	; 0xc54

000113f4 <mbsinit@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #106496	; 0x1a000
   113fc:	ldr	pc, [ip, #3148]!	; 0xc4c

00011400 <memcmp@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #106496	; 0x1a000
   11408:	ldr	pc, [ip, #3140]!	; 0xc44

0001140c <dcgettext@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #106496	; 0x1a000
   11414:	ldr	pc, [ip, #3132]!	; 0xc3c

00011418 <realloc@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #106496	; 0x1a000
   11420:	ldr	pc, [ip, #3124]!	; 0xc34

00011424 <textdomain@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #106496	; 0x1a000
   1142c:	ldr	pc, [ip, #3116]!	; 0xc2c

00011430 <rawmemchr@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #106496	; 0x1a000
   11438:	ldr	pc, [ip, #3108]!	; 0xc24

0001143c <__fxstatat64@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #106496	; 0x1a000
   11444:	ldr	pc, [ip, #3100]!	; 0xc1c

00011448 <iswprint@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #106496	; 0x1a000
   11450:	ldr	pc, [ip, #3092]!	; 0xc14

00011454 <readlink@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #106496	; 0x1a000
   1145c:	ldr	pc, [ip, #3084]!	; 0xc0c

00011460 <fwrite@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #106496	; 0x1a000
   11468:	ldr	pc, [ip, #3076]!	; 0xc04

0001146c <lseek64@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #106496	; 0x1a000
   11474:	ldr	pc, [ip, #3068]!	; 0xbfc

00011478 <__ctype_get_mb_cur_max@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #106496	; 0x1a000
   11480:	ldr	pc, [ip, #3060]!	; 0xbf4

00011484 <strcpy@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #106496	; 0x1a000
   1148c:	ldr	pc, [ip, #3052]!	; 0xbec

00011490 <__fpending@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #106496	; 0x1a000
   11498:	ldr	pc, [ip, #3044]!	; 0xbe4

0001149c <mbrtowc@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #106496	; 0x1a000
   114a4:	ldr	pc, [ip, #3036]!	; 0xbdc

000114a8 <error@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #106496	; 0x1a000
   114b0:	ldr	pc, [ip, #3028]!	; 0xbd4

000114b4 <open64@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #106496	; 0x1a000
   114bc:	ldr	pc, [ip, #3020]!	; 0xbcc

000114c0 <getenv@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #106496	; 0x1a000
   114c8:	ldr	pc, [ip, #3012]!	; 0xbc4

000114cc <malloc@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #106496	; 0x1a000
   114d4:	ldr	pc, [ip, #3004]!	; 0xbbc

000114d8 <__libc_start_main@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #106496	; 0x1a000
   114e0:	ldr	pc, [ip, #2996]!	; 0xbb4

000114e4 <__freading@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #106496	; 0x1a000
   114ec:	ldr	pc, [ip, #2988]!	; 0xbac

000114f0 <__gmon_start__@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #106496	; 0x1a000
   114f8:	ldr	pc, [ip, #2980]!	; 0xba4

000114fc <getopt_long@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #106496	; 0x1a000
   11504:	ldr	pc, [ip, #2972]!	; 0xb9c

00011508 <__ctype_b_loc@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #106496	; 0x1a000
   11510:	ldr	pc, [ip, #2964]!	; 0xb94

00011514 <getcwd@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #106496	; 0x1a000
   1151c:	ldr	pc, [ip, #2956]!	; 0xb8c

00011520 <exit@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #106496	; 0x1a000
   11528:	ldr	pc, [ip, #2948]!	; 0xb84

0001152c <bcmp@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #106496	; 0x1a000
   11534:	ldr	pc, [ip, #2940]!	; 0xb7c

00011538 <strlen@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #106496	; 0x1a000
   11540:	ldr	pc, [ip, #2932]!	; 0xb74

00011544 <openat64@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #106496	; 0x1a000
   1154c:	ldr	pc, [ip, #2924]!	; 0xb6c

00011550 <__errno_location@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #106496	; 0x1a000
   11558:	ldr	pc, [ip, #2916]!	; 0xb64

0001155c <__cxa_atexit@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #106496	; 0x1a000
   11564:	ldr	pc, [ip, #2908]!	; 0xb5c

00011568 <mkdir@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #106496	; 0x1a000
   11570:	ldr	pc, [ip, #2900]!	; 0xb54

00011574 <memset@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #106496	; 0x1a000
   1157c:	ldr	pc, [ip, #2892]!	; 0xb4c

00011580 <fpathconf@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #106496	; 0x1a000
   11588:	ldr	pc, [ip, #2884]!	; 0xb44

0001158c <renameat2@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #106496	; 0x1a000
   11594:	ldr	pc, [ip, #2876]!	; 0xb3c

00011598 <__printf_chk@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #106496	; 0x1a000
   115a0:	ldr	pc, [ip, #2868]!	; 0xb34

000115a4 <fileno@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #106496	; 0x1a000
   115ac:	ldr	pc, [ip, #2860]!	; 0xb2c

000115b0 <__fprintf_chk@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #106496	; 0x1a000
   115b8:	ldr	pc, [ip, #2852]!	; 0xb24

000115bc <fclose@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #106496	; 0x1a000
   115c4:	ldr	pc, [ip, #2844]!	; 0xb1c

000115c8 <linkat@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #106496	; 0x1a000
   115d0:	ldr	pc, [ip, #2836]!	; 0xb14

000115d4 <fseeko64@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #106496	; 0x1a000
   115dc:	ldr	pc, [ip, #2828]!	; 0xb0c

000115e0 <fcntl64@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #106496	; 0x1a000
   115e8:	ldr	pc, [ip, #2820]!	; 0xb04

000115ec <rpmatch@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #106496	; 0x1a000
   115f4:	ldr	pc, [ip, #2812]!	; 0xafc

000115f8 <__overflow@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #106496	; 0x1a000
   11600:	ldr	pc, [ip, #2804]!	; 0xaf4

00011604 <setlocale@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #106496	; 0x1a000
   1160c:	ldr	pc, [ip, #2796]!	; 0xaec

00011610 <strrchr@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #106496	; 0x1a000
   11618:	ldr	pc, [ip, #2788]!	; 0xae4

0001161c <nl_langinfo@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #106496	; 0x1a000
   11624:	ldr	pc, [ip, #2780]!	; 0xadc

00011628 <readdir64@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #106496	; 0x1a000
   11630:	ldr	pc, [ip, #2772]!	; 0xad4

00011634 <fdopendir@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #106496	; 0x1a000
   1163c:	ldr	pc, [ip, #2764]!	; 0xacc

00011640 <renameat@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #106496	; 0x1a000
   11648:	ldr	pc, [ip, #2756]!	; 0xac4

0001164c <bindtextdomain@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #106496	; 0x1a000
   11654:	ldr	pc, [ip, #2748]!	; 0xabc

00011658 <getrandom@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #106496	; 0x1a000
   11660:	ldr	pc, [ip, #2740]!	; 0xab4

00011664 <symlinkat@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #106496	; 0x1a000
   1166c:	ldr	pc, [ip, #2732]!	; 0xaac

00011670 <__xstat64@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #106496	; 0x1a000
   11678:	ldr	pc, [ip, #2724]!	; 0xaa4

0001167c <strncmp@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #106496	; 0x1a000
   11684:	ldr	pc, [ip, #2716]!	; 0xa9c

00011688 <abort@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #106496	; 0x1a000
   11690:	ldr	pc, [ip, #2708]!	; 0xa94

00011694 <close@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #106496	; 0x1a000
   1169c:	ldr	pc, [ip, #2700]!	; 0xa8c

000116a0 <__lxstat64@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #106496	; 0x1a000
   116a8:	ldr	pc, [ip, #2692]!	; 0xa84

000116ac <closedir@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #106496	; 0x1a000
   116b4:	ldr	pc, [ip, #2684]!	; 0xa7c

000116b8 <strspn@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #106496	; 0x1a000
   116c0:	ldr	pc, [ip, #2676]!	; 0xa74

000116c4 <__mempcpy_chk@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #106496	; 0x1a000
   116cc:	ldr	pc, [ip, #2668]!	; 0xa6c

Disassembly of section .text:

000116d0 <.text>:
   116d0:	mov	fp, #0
   116d4:	mov	lr, #0
   116d8:	pop	{r1}		; (ldr r1, [sp], #4)
   116dc:	mov	r2, sp
   116e0:	push	{r2}		; (str r2, [sp, #-4]!)
   116e4:	push	{r0}		; (str r0, [sp, #-4]!)
   116e8:	ldr	ip, [pc, #16]	; 11700 <__mempcpy_chk@plt+0x3c>
   116ec:	push	{ip}		; (str ip, [sp, #-4]!)
   116f0:	ldr	r0, [pc, #12]	; 11704 <__mempcpy_chk@plt+0x40>
   116f4:	ldr	r3, [pc, #12]	; 11708 <__mempcpy_chk@plt+0x44>
   116f8:	bl	114d8 <__libc_start_main@plt>
   116fc:	bl	11688 <abort@plt>
   11700:	muleq	r1, r4, r5
   11704:	andeq	r1, r1, r0, ror #21
   11708:	andeq	sl, r1, r4, lsr r5
   1170c:	ldr	r3, [pc, #20]	; 11728 <__mempcpy_chk@plt+0x64>
   11710:	ldr	r2, [pc, #20]	; 1172c <__mempcpy_chk@plt+0x68>
   11714:	add	r3, pc, r3
   11718:	ldr	r2, [r3, r2]
   1171c:	cmp	r2, #0
   11720:	bxeq	lr
   11724:	b	114f0 <__gmon_start__@plt>
   11728:	andeq	sl, r1, r4, ror #17
   1172c:	andeq	r0, r0, ip, lsr r1
   11730:	ldr	r0, [pc, #24]	; 11750 <__mempcpy_chk@plt+0x8c>
   11734:	ldr	r3, [pc, #24]	; 11754 <__mempcpy_chk@plt+0x90>
   11738:	cmp	r3, r0
   1173c:	bxeq	lr
   11740:	ldr	r3, [pc, #16]	; 11758 <__mempcpy_chk@plt+0x94>
   11744:	cmp	r3, #0
   11748:	bxeq	lr
   1174c:	bx	r3
   11750:	muleq	r2, r4, r1
   11754:	muleq	r2, r4, r1
   11758:	andeq	r0, r0, r0
   1175c:	ldr	r0, [pc, #36]	; 11788 <__mempcpy_chk@plt+0xc4>
   11760:	ldr	r1, [pc, #36]	; 1178c <__mempcpy_chk@plt+0xc8>
   11764:	sub	r1, r1, r0
   11768:	asr	r1, r1, #2
   1176c:	add	r1, r1, r1, lsr #31
   11770:	asrs	r1, r1, #1
   11774:	bxeq	lr
   11778:	ldr	r3, [pc, #16]	; 11790 <__mempcpy_chk@plt+0xcc>
   1177c:	cmp	r3, #0
   11780:	bxeq	lr
   11784:	bx	r3
   11788:	muleq	r2, r4, r1
   1178c:	muleq	r2, r4, r1
   11790:	andeq	r0, r0, r0
   11794:	push	{r4, lr}
   11798:	ldr	r4, [pc, #24]	; 117b8 <__mempcpy_chk@plt+0xf4>
   1179c:	ldrb	r3, [r4]
   117a0:	cmp	r3, #0
   117a4:	popne	{r4, pc}
   117a8:	bl	11730 <__mempcpy_chk@plt+0x6c>
   117ac:	mov	r3, #1
   117b0:	strb	r3, [r4]
   117b4:	pop	{r4, pc}
   117b8:			; <UNDEFINED> instruction: 0x0002c1bc
   117bc:	b	1175c <__mempcpy_chk@plt+0x98>
   117c0:	push	{fp, lr}
   117c4:	mov	fp, sp
   117c8:	sub	sp, sp, #64	; 0x40
   117cc:	mov	r4, r0
   117d0:	cmp	r0, #0
   117d4:	bne	11a9c <__mempcpy_chk@plt+0x3d8>
   117d8:	movw	r1, #42467	; 0xa5e3
   117dc:	mov	r0, #0
   117e0:	mov	r2, #5
   117e4:	movt	r1, #1
   117e8:	bl	1140c <dcgettext@plt>
   117ec:	mov	r1, r0
   117f0:	movw	r0, #49632	; 0xc1e0
   117f4:	movt	r0, #2
   117f8:	ldr	r2, [r0]
   117fc:	mov	r0, #1
   11800:	mov	r3, r2
   11804:	str	r2, [sp]
   11808:	str	r2, [sp, #4]
   1180c:	bl	11598 <__printf_chk@plt>
   11810:	movw	r1, #42628	; 0xa684
   11814:	mov	r0, #0
   11818:	mov	r2, #5
   1181c:	movt	r1, #1
   11820:	bl	1140c <dcgettext@plt>
   11824:	movw	r7, #49588	; 0xc1b4
   11828:	movt	r7, #2
   1182c:	ldr	r1, [r7]
   11830:	bl	1134c <fputs_unlocked@plt>
   11834:	movw	r1, #45021	; 0xafdd
   11838:	mov	r0, #0
   1183c:	mov	r2, #5
   11840:	movt	r1, #1
   11844:	bl	1140c <dcgettext@plt>
   11848:	ldr	r1, [r7]
   1184c:	bl	1134c <fputs_unlocked@plt>
   11850:	movw	r1, #43144	; 0xa888
   11854:	mov	r0, #0
   11858:	mov	r2, #5
   1185c:	movt	r1, #1
   11860:	bl	1140c <dcgettext@plt>
   11864:	ldr	r1, [r7]
   11868:	bl	1134c <fputs_unlocked@plt>
   1186c:	movw	r1, #43591	; 0xaa47
   11870:	mov	r0, #0
   11874:	mov	r2, #5
   11878:	movt	r1, #1
   1187c:	bl	1140c <dcgettext@plt>
   11880:	ldr	r1, [r7]
   11884:	bl	1134c <fputs_unlocked@plt>
   11888:	movw	r1, #44092	; 0xac3c
   1188c:	mov	r0, #0
   11890:	mov	r2, #5
   11894:	movt	r1, #1
   11898:	bl	1140c <dcgettext@plt>
   1189c:	ldr	r1, [r7]
   118a0:	bl	1134c <fputs_unlocked@plt>
   118a4:	movw	r1, #44406	; 0xad76
   118a8:	mov	r0, #0
   118ac:	mov	r2, #5
   118b0:	movt	r1, #1
   118b4:	bl	1140c <dcgettext@plt>
   118b8:	ldr	r1, [r7]
   118bc:	bl	1134c <fputs_unlocked@plt>
   118c0:	movw	r1, #44451	; 0xada3
   118c4:	mov	r0, #0
   118c8:	mov	r2, #5
   118cc:	movt	r1, #1
   118d0:	bl	1140c <dcgettext@plt>
   118d4:	ldr	r1, [r7]
   118d8:	bl	1134c <fputs_unlocked@plt>
   118dc:	movw	r1, #45096	; 0xb028
   118e0:	mov	r0, #0
   118e4:	mov	r2, #5
   118e8:	movt	r1, #1
   118ec:	bl	1140c <dcgettext@plt>
   118f0:	ldr	r1, [r7]
   118f4:	bl	1134c <fputs_unlocked@plt>
   118f8:	movw	r1, #45317	; 0xb105
   118fc:	mov	r0, #0
   11900:	mov	r2, #5
   11904:	movt	r1, #1
   11908:	bl	1140c <dcgettext@plt>
   1190c:	ldr	r1, [r7]
   11910:	bl	1134c <fputs_unlocked@plt>
   11914:	movw	r1, #44505	; 0xadd9
   11918:	mov	r0, #0
   1191c:	mov	r2, #5
   11920:	movt	r1, #1
   11924:	bl	1140c <dcgettext@plt>
   11928:	movw	r2, #44643	; 0xae63
   1192c:	mov	r1, r0
   11930:	mov	r0, #1
   11934:	movt	r2, #1
   11938:	bl	11598 <__printf_chk@plt>
   1193c:	movw	r0, #46592	; 0xb600
   11940:	mov	r2, #48	; 0x30
   11944:	add	r6, sp, #8
   11948:	movw	r5, #44646	; 0xae66
   1194c:	movt	r0, #1
   11950:	movt	r5, #1
   11954:	add	r1, r0, #32
   11958:	add	r3, r0, #16
   1195c:	vld1.64	{d18-d19}, [r0], r2
   11960:	vld1.64	{d16-d17}, [r1]
   11964:	vld1.64	{d20-d21}, [r3]
   11968:	vldr	d22, [r0]
   1196c:	add	r1, r6, #32
   11970:	add	r0, r6, #16
   11974:	vst1.64	{d16-d17}, [r1]
   11978:	movw	r1, #45539	; 0xb1e3
   1197c:	vst1.64	{d20-d21}, [r0]
   11980:	mov	r0, r6
   11984:	movt	r1, #1
   11988:	vst1.64	{d18-d19}, [r0], r2
   1198c:	vstr	d22, [r0]
   11990:	mov	r0, r5
   11994:	bl	11370 <strcmp@plt>
   11998:	cmp	r0, #0
   1199c:	ldrne	r1, [r6, #8]!
   119a0:	cmpne	r1, #0
   119a4:	bne	11990 <__mempcpy_chk@plt+0x2cc>
   119a8:	movw	r1, #45634	; 0xb242
   119ac:	ldr	r6, [r6, #4]
   119b0:	mov	r0, #0
   119b4:	mov	r2, #5
   119b8:	movt	r1, #1
   119bc:	bl	1140c <dcgettext@plt>
   119c0:	movw	r2, #44777	; 0xaee9
   119c4:	movw	r3, #45657	; 0xb259
   119c8:	mov	r1, r0
   119cc:	mov	r0, #1
   119d0:	movt	r2, #1
   119d4:	movt	r3, #1
   119d8:	bl	11598 <__printf_chk@plt>
   119dc:	cmp	r6, #0
   119e0:	mov	r0, #5
   119e4:	mov	r1, #0
   119e8:	moveq	r6, r5
   119ec:	bl	11604 <setlocale@plt>
   119f0:	cmp	r0, #0
   119f4:	beq	11a2c <__mempcpy_chk@plt+0x368>
   119f8:	movw	r1, #45697	; 0xb281
   119fc:	mov	r2, #3
   11a00:	movt	r1, #1
   11a04:	bl	1167c <strncmp@plt>
   11a08:	cmp	r0, #0
   11a0c:	beq	11a2c <__mempcpy_chk@plt+0x368>
   11a10:	movw	r1, #45701	; 0xb285
   11a14:	mov	r0, #0
   11a18:	mov	r2, #5
   11a1c:	movt	r1, #1
   11a20:	bl	1140c <dcgettext@plt>
   11a24:	ldr	r1, [r7]
   11a28:	bl	1134c <fputs_unlocked@plt>
   11a2c:	movw	r1, #45772	; 0xb2cc
   11a30:	mov	r0, #0
   11a34:	mov	r2, #5
   11a38:	movt	r1, #1
   11a3c:	bl	1140c <dcgettext@plt>
   11a40:	movw	r2, #45657	; 0xb259
   11a44:	mov	r1, r0
   11a48:	mov	r0, #1
   11a4c:	mov	r3, r5
   11a50:	movt	r2, #1
   11a54:	bl	11598 <__printf_chk@plt>
   11a58:	movw	r1, #45799	; 0xb2e7
   11a5c:	mov	r0, #0
   11a60:	mov	r2, #5
   11a64:	movt	r1, #1
   11a68:	bl	1140c <dcgettext@plt>
   11a6c:	mov	r1, r0
   11a70:	movw	r0, #45567	; 0xb1ff
   11a74:	movw	r3, #45316	; 0xb104
   11a78:	cmp	r6, r5
   11a7c:	mov	r2, r6
   11a80:	movt	r0, #1
   11a84:	movt	r3, #1
   11a88:	moveq	r3, r0
   11a8c:	mov	r0, #1
   11a90:	bl	11598 <__printf_chk@plt>
   11a94:	mov	r0, r4
   11a98:	bl	11520 <exit@plt>
   11a9c:	movw	r0, #49576	; 0xc1a8
   11aa0:	movw	r1, #42428	; 0xa5bc
   11aa4:	mov	r2, #5
   11aa8:	movt	r0, #2
   11aac:	movt	r1, #1
   11ab0:	ldr	r5, [r0]
   11ab4:	mov	r0, #0
   11ab8:	bl	1140c <dcgettext@plt>
   11abc:	mov	r2, r0
   11ac0:	movw	r0, #49632	; 0xc1e0
   11ac4:	mov	r1, #1
   11ac8:	movt	r0, #2
   11acc:	ldr	r3, [r0]
   11ad0:	mov	r0, r5
   11ad4:	bl	115b0 <__fprintf_chk@plt>
   11ad8:	mov	r0, r4
   11adc:	bl	11520 <exit@plt>
   11ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ae4:	add	fp, sp, #28
   11ae8:	sub	sp, sp, #148	; 0x94
   11aec:	mov	r7, r0
   11af0:	ldr	r0, [r1]
   11af4:	mov	r6, r1
   11af8:	bl	16220 <__mempcpy_chk@plt+0x4b5c>
   11afc:	movw	r1, #45316	; 0xb104
   11b00:	mov	r0, #6
   11b04:	movt	r1, #1
   11b08:	bl	11604 <setlocale@plt>
   11b0c:	movw	r4, #44781	; 0xaeed
   11b10:	movw	r1, #44649	; 0xae69
   11b14:	movt	r4, #1
   11b18:	movt	r1, #1
   11b1c:	mov	r0, r4
   11b20:	bl	1164c <bindtextdomain@plt>
   11b24:	mov	r0, r4
   11b28:	bl	11424 <textdomain@plt>
   11b2c:	movw	r0, #17772	; 0x456c
   11b30:	movt	r0, #1
   11b34:	bl	1a598 <__mempcpy_chk@plt+0x8ed4>
   11b38:	movw	r0, #49600	; 0xc1c0
   11b3c:	movw	r9, #44673	; 0xae81
   11b40:	movw	r5, #46336	; 0xb500
   11b44:	mov	r1, #0
   11b48:	mov	r4, #0
   11b4c:	movt	r0, #2
   11b50:	str	r1, [sp, #24]
   11b54:	mov	r1, #0
   11b58:	movt	r9, #1
   11b5c:	movt	r5, #1
   11b60:	str	r1, [sp, #20]
   11b64:	mov	r1, #0
   11b68:	strb	r4, [r0, #4]
   11b6c:	mov	sl, r0
   11b70:	str	r4, [r0]
   11b74:	mov	r0, #0
   11b78:	str	r1, [sp, #32]
   11b7c:	str	r0, [sp, #28]
   11b80:	mov	r0, #0
   11b84:	mov	r8, r0
   11b88:	mov	r0, r7
   11b8c:	mov	r1, r6
   11b90:	mov	r2, r9
   11b94:	mov	r3, r5
   11b98:	str	r4, [sp]
   11b9c:	bl	114fc <getopt_long@plt>
   11ba0:	add	r1, r0, #3
   11ba4:	cmp	r1, #121	; 0x79
   11ba8:	bhi	12218 <__mempcpy_chk@plt+0xb54>
   11bac:	add	r2, pc, #4
   11bb0:	mov	r0, #1
   11bb4:	ldr	pc, [r2, r1, lsl #2]
   11bb8:	andeq	r2, r1, r0, lsr #4
   11bbc:	andeq	r2, r1, r4, ror r2
   11bc0:			; <UNDEFINED> instruction: 0x00011eb8
   11bc4:	andeq	r2, r1, r8, lsl r2
   11bc8:	andeq	r2, r1, r8, lsl r2
   11bcc:	andeq	r2, r1, r8, lsl r2
   11bd0:	andeq	r2, r1, r8, lsl r2
   11bd4:	andeq	r2, r1, r8, lsl r2
   11bd8:	andeq	r2, r1, r8, lsl r2
   11bdc:	andeq	r2, r1, r8, lsl r2
   11be0:	andeq	r2, r1, r8, lsl r2
   11be4:	andeq	r2, r1, r8, lsl r2
   11be8:	andeq	r2, r1, r8, lsl r2
   11bec:	andeq	r2, r1, r8, lsl r2
   11bf0:	andeq	r2, r1, r8, lsl r2
   11bf4:	andeq	r2, r1, r8, lsl r2
   11bf8:	andeq	r2, r1, r8, lsl r2
   11bfc:	andeq	r2, r1, r8, lsl r2
   11c00:	andeq	r2, r1, r8, lsl r2
   11c04:	andeq	r2, r1, r8, lsl r2
   11c08:	andeq	r2, r1, r8, lsl r2
   11c0c:	andeq	r2, r1, r8, lsl r2
   11c10:	andeq	r2, r1, r8, lsl r2
   11c14:	andeq	r2, r1, r8, lsl r2
   11c18:	andeq	r2, r1, r8, lsl r2
   11c1c:	andeq	r2, r1, r8, lsl r2
   11c20:	andeq	r2, r1, r8, lsl r2
   11c24:	andeq	r2, r1, r8, lsl r2
   11c28:	andeq	r2, r1, r8, lsl r2
   11c2c:	andeq	r2, r1, r8, lsl r2
   11c30:	andeq	r2, r1, r8, lsl r2
   11c34:	andeq	r2, r1, r8, lsl r2
   11c38:	andeq	r2, r1, r8, lsl r2
   11c3c:	andeq	r2, r1, r8, lsl r2
   11c40:	andeq	r2, r1, r8, lsl r2
   11c44:	andeq	r2, r1, r8, lsl r2
   11c48:	andeq	r2, r1, r8, lsl r2
   11c4c:	andeq	r2, r1, r8, lsl r2
   11c50:	andeq	r2, r1, r8, lsl r2
   11c54:	andeq	r2, r1, r8, lsl r2
   11c58:	andeq	r2, r1, r8, lsl r2
   11c5c:	andeq	r2, r1, r8, lsl r2
   11c60:	andeq	r2, r1, r8, lsl r2
   11c64:	andeq	r2, r1, r8, lsl r2
   11c68:	andeq	r2, r1, r8, lsl r2
   11c6c:	andeq	r2, r1, r8, lsl r2
   11c70:	andeq	r2, r1, r8, lsl r2
   11c74:	andeq	r2, r1, r8, lsl r2
   11c78:	andeq	r2, r1, r8, lsl r2
   11c7c:	andeq	r2, r1, r8, lsl r2
   11c80:	andeq	r2, r1, r8, lsl r2
   11c84:	andeq	r2, r1, r8, lsl r2
   11c88:	andeq	r2, r1, r8, lsl r2
   11c8c:	andeq	r2, r1, r8, lsl r2
   11c90:	andeq	r2, r1, r8, lsl r2
   11c94:	andeq	r2, r1, r8, lsl r2
   11c98:	andeq	r2, r1, r8, lsl r2
   11c9c:	andeq	r2, r1, r8, lsl r2
   11ca0:	andeq	r2, r1, r8, lsl r2
   11ca4:	andeq	r2, r1, r8, lsl r2
   11ca8:	andeq	r2, r1, r8, lsl r2
   11cac:	andeq	r2, r1, r8, lsl r2
   11cb0:	andeq	r2, r1, r8, lsl r2
   11cb4:	andeq	r2, r1, r8, lsl r2
   11cb8:	andeq	r2, r1, r8, lsl r2
   11cbc:	andeq	r2, r1, r8, lsl r2
   11cc0:	andeq	r2, r1, r8, lsl r2
   11cc4:	andeq	r2, r1, r8, lsl r2
   11cc8:	andeq	r2, r1, r8, lsl r2
   11ccc:	andeq	r2, r1, r8, lsl r2
   11cd0:	andeq	r2, r1, r8, lsl r2
   11cd4:	andeq	r2, r1, r8, lsl r2
   11cd8:	andeq	r2, r1, r8, lsl r2
   11cdc:	andeq	r1, r1, r0, lsr #27
   11ce0:	andeq	r2, r1, r8, lsl r2
   11ce4:	andeq	r2, r1, r8, lsl r2
   11ce8:	andeq	r2, r1, r8, lsl r2
   11cec:	andeq	r2, r1, r8, lsl r2
   11cf0:	andeq	r2, r1, r8, lsl r2
   11cf4:	andeq	r1, r1, r4, lsr #28
   11cf8:	andeq	r2, r1, r8, lsl r2
   11cfc:	andeq	r2, r1, r8, lsl r2
   11d00:	andeq	r2, r1, r8, lsl r2
   11d04:	ldrdeq	r1, [r1], -r0
   11d08:	andeq	r2, r1, r8, lsl r2
   11d0c:	andeq	r2, r1, r8, lsl r2
   11d10:	andeq	r1, r1, r4, lsr lr
   11d14:	andeq	r1, r1, r4, lsl #23
   11d18:	andeq	r2, r1, r8, lsl r2
   11d1c:	andeq	r2, r1, r8, lsl r2
   11d20:	andeq	r2, r1, r8, lsl r2
   11d24:	andeq	r2, r1, r8, lsl r2
   11d28:	andeq	r2, r1, r8, lsl r2
   11d2c:	andeq	r2, r1, r8, lsl r2
   11d30:	andeq	r2, r1, r8, lsl r2
   11d34:	andeq	r2, r1, r8, lsl r2
   11d38:	andeq	r2, r1, r8, lsl r2
   11d3c:	andeq	r2, r1, r8, lsl r2
   11d40:	andeq	r2, r1, r8, lsl r2
   11d44:	andeq	r2, r1, r8, lsl r2
   11d48:	andeq	r2, r1, r8, lsl r2
   11d4c:	ldrdeq	r1, [r1], -ip
   11d50:	andeq	r2, r1, r8, lsl r2
   11d54:	andeq	r1, r1, r0, lsr #27
   11d58:	andeq	r2, r1, r8, lsl r2
   11d5c:	strdeq	r1, [r1], -ip
   11d60:	andeq	r2, r1, r8, lsl r2
   11d64:	andeq	r2, r1, r8, lsl r2
   11d68:	andeq	r1, r1, r4, asr lr
   11d6c:	andeq	r2, r1, r8, lsl r2
   11d70:	andeq	r2, r1, r8, lsl r2
   11d74:	andeq	r2, r1, r8, lsl r2
   11d78:	andeq	r2, r1, r8, lsl r2
   11d7c:	andeq	r1, r1, r4, lsl #28
   11d80:	andeq	r2, r1, r8, lsl r2
   11d84:	andeq	r2, r1, r8, lsl r2
   11d88:	andeq	r2, r1, r8, lsl r2
   11d8c:			; <UNDEFINED> instruction: 0x00011db0
   11d90:	andeq	r1, r1, r4, lsl lr
   11d94:	andeq	r1, r1, r4, ror #28
   11d98:	andeq	r2, r1, r8, lsl r2
   11d9c:	andeq	r1, r1, r0, asr #27
   11da0:	mov	r0, #1
   11da4:	strb	r0, [sl]
   11da8:	mov	r0, r8
   11dac:	b	11b84 <__mempcpy_chk@plt+0x4c0>
   11db0:	mov	r0, #1
   11db4:	strb	r0, [sl, #7]
   11db8:	mov	r0, r8
   11dbc:	b	11b84 <__mempcpy_chk@plt+0x4c0>
   11dc0:	mov	r0, #1
   11dc4:	strb	r0, [sl, #1]
   11dc8:	mov	r0, r8
   11dcc:	b	11b84 <__mempcpy_chk@plt+0x4c0>
   11dd0:	strb	r4, [sl, #5]
   11dd4:	mov	r0, r8
   11dd8:	b	11b84 <__mempcpy_chk@plt+0x4c0>
   11ddc:	movw	r0, #49592	; 0xc1b8
   11de0:	ldr	r1, [sp, #24]
   11de4:	movt	r0, #2
   11de8:	ldr	r0, [r0]
   11dec:	cmp	r0, #0
   11df0:	movne	r1, r0
   11df4:	str	r1, [sp, #24]
   11df8:	b	11e44 <__mempcpy_chk@plt+0x780>
   11dfc:	mov	r0, #256	; 0x100
   11e00:	b	11e58 <__mempcpy_chk@plt+0x794>
   11e04:	mov	r0, #1
   11e08:	strb	r0, [sl, #6]
   11e0c:	mov	r0, r8
   11e10:	b	11b84 <__mempcpy_chk@plt+0x4c0>
   11e14:	mov	r0, #1
   11e18:	strb	r0, [sl, #4]
   11e1c:	mov	r0, r8
   11e20:	b	11b84 <__mempcpy_chk@plt+0x4c0>
   11e24:	mov	r0, #1
   11e28:	strb	r0, [sl, #5]
   11e2c:	mov	r0, r8
   11e30:	b	11b84 <__mempcpy_chk@plt+0x4c0>
   11e34:	movw	r0, #49592	; 0xc1b8
   11e38:	movt	r0, #2
   11e3c:	ldr	r0, [r0]
   11e40:	str	r0, [sp, #20]
   11e44:	mov	r0, #1
   11e48:	str	r0, [sp, #32]
   11e4c:	mov	r0, r8
   11e50:	b	11b84 <__mempcpy_chk@plt+0x4c0>
   11e54:	mov	r0, #1
   11e58:	strh	r0, [sl, #2]
   11e5c:	mov	r0, r8
   11e60:	b	11b84 <__mempcpy_chk@plt+0x4c0>
   11e64:	ldr	r0, [sp, #28]
   11e68:	cmp	r0, #0
   11e6c:	bne	1227c <__mempcpy_chk@plt+0xbb8>
   11e70:	movw	r0, #49592	; 0xc1b8
   11e74:	add	r2, sp, #40	; 0x28
   11e78:	movt	r0, #2
   11e7c:	ldr	r1, [r0]
   11e80:	mov	r0, #3
   11e84:	bl	11670 <__xstat64@plt>
   11e88:	cmp	r0, #0
   11e8c:	bne	12288 <__mempcpy_chk@plt+0xbc4>
   11e90:	ldr	r0, [sp, #56]	; 0x38
   11e94:	and	r0, r0, #61440	; 0xf000
   11e98:	cmp	r0, #16384	; 0x4000
   11e9c:	bne	122d0 <__mempcpy_chk@plt+0xc0c>
   11ea0:	movw	r0, #49592	; 0xc1b8
   11ea4:	movt	r0, #2
   11ea8:	ldr	r0, [r0]
   11eac:	str	r0, [sp, #28]
   11eb0:	mov	r0, r8
   11eb4:	b	11b84 <__mempcpy_chk@plt+0x4c0>
   11eb8:	movw	r0, #49568	; 0xc1a0
   11ebc:	movt	r0, #2
   11ec0:	ldr	r1, [r0]
   11ec4:	sub	r5, r7, r1
   11ec8:	cmp	r5, #0
   11ecc:	ble	12310 <__mempcpy_chk@plt+0xc4c>
   11ed0:	ldrb	r0, [sl, #7]
   11ed4:	mov	r7, sl
   11ed8:	cmp	r0, #1
   11edc:	bne	11eec <__mempcpy_chk@plt+0x828>
   11ee0:	ldrb	r2, [r7, #4]
   11ee4:	cmp	r2, #0
   11ee8:	beq	1233c <__mempcpy_chk@plt+0xc78>
   11eec:	add	r9, r6, r1, lsl #2
   11ef0:	tst	r8, #1
   11ef4:	beq	11f30 <__mempcpy_chk@plt+0x86c>
   11ef8:	ldr	r0, [sp, #28]
   11efc:	cmp	r0, #0
   11f00:	bne	12348 <__mempcpy_chk@plt+0xc84>
   11f04:	cmp	r5, #2
   11f08:	bne	1236c <__mempcpy_chk@plt+0xca8>
   11f0c:	mov	r0, #0
   11f10:	mvn	r4, #0
   11f14:	mov	sl, #2
   11f18:	str	r0, [sp, #36]	; 0x24
   11f1c:	ldr	r1, [sp, #32]
   11f20:	mov	r0, #0
   11f24:	tst	r1, #1
   11f28:	bne	120b0 <__mempcpy_chk@plt+0x9ec>
   11f2c:	b	120d4 <__mempcpy_chk@plt+0xa10>
   11f30:	ldr	r6, [sp, #28]
   11f34:	cmp	r6, #0
   11f38:	bne	11f74 <__mempcpy_chk@plt+0x8b0>
   11f3c:	cmp	r5, #2
   11f40:	bge	11f74 <__mempcpy_chk@plt+0x8b0>
   11f44:	mvn	r0, #99	; 0x63
   11f48:	mvn	r4, #0
   11f4c:	mov	sl, #1
   11f50:	str	r0, [sp, #16]
   11f54:	movw	r0, #46666	; 0xb64a
   11f58:	movt	r0, #1
   11f5c:	str	r0, [sp, #36]	; 0x24
   11f60:	ldr	r1, [sp, #32]
   11f64:	mov	r0, #0
   11f68:	tst	r1, #1
   11f6c:	bne	120b0 <__mempcpy_chk@plt+0x9ec>
   11f70:	b	120d4 <__mempcpy_chk@plt+0xa10>
   11f74:	eor	r1, r5, #2
   11f78:	mvn	r4, #0
   11f7c:	orrs	r8, r6, r1
   11f80:	movwne	r8, #1
   11f84:	beq	11fdc <__mempcpy_chk@plt+0x918>
   11f88:	cmp	r6, #0
   11f8c:	mov	r1, r6
   11f90:	bne	11f9c <__mempcpy_chk@plt+0x8d8>
   11f94:	add	r0, r9, r5, lsl #2
   11f98:	ldr	r1, [r0, #-4]
   11f9c:	ldrb	r0, [r7, #6]
   11fa0:	mov	r2, #2113536	; 0x204000
   11fa4:	str	r1, [sp, #36]	; 0x24
   11fa8:	cmp	r0, #0
   11fac:	mvn	r0, #99	; 0x63
   11fb0:	movne	r2, #2146304	; 0x20c000
   11fb4:	bl	16188 <__mempcpy_chk@plt+0x4ac4>
   11fb8:	mov	r7, r0
   11fbc:	bl	11550 <__errno_location@plt>
   11fc0:	cmp	r7, #0
   11fc4:	str	r7, [sp, #16]
   11fc8:	bmi	1204c <__mempcpy_chk@plt+0x988>
   11fcc:	clz	r0, r6
   11fd0:	lsr	r0, r0, #5
   11fd4:	sub	sl, r5, r0
   11fd8:	b	12098 <__mempcpy_chk@plt+0x9d4>
   11fdc:	ldrb	r2, [r7, #4]
   11fe0:	ldm	r9, {r1, r3}
   11fe4:	cmp	r2, #1
   11fe8:	bne	12064 <__mempcpy_chk@plt+0x9a0>
   11fec:	cmp	r0, #0
   11ff0:	bne	11f88 <__mempcpy_chk@plt+0x8c4>
   11ff4:	mov	r0, r1
   11ff8:	mvn	r1, #99	; 0x63
   11ffc:	mov	r2, r3
   12000:	bl	11664 <symlinkat@plt>
   12004:	cmp	r0, #0
   12008:	bpl	12088 <__mempcpy_chk@plt+0x9c4>
   1200c:	bl	11550 <__errno_location@plt>
   12010:	ldr	r4, [r0]
   12014:	cmp	r4, #0
   12018:	bmi	12200 <__mempcpy_chk@plt+0xb3c>
   1201c:	movw	r7, #49600	; 0xc1c0
   12020:	mov	r0, #0
   12024:	mov	sl, #2
   12028:	cmp	r4, #22
   1202c:	movt	r7, #2
   12030:	str	r0, [sp, #36]	; 0x24
   12034:	bhi	11f1c <__mempcpy_chk@plt+0x858>
   12038:	mov	r0, #1
   1203c:	mov	r1, #5373952	; 0x520000
   12040:	tst	r1, r0, lsl r4
   12044:	bne	11f88 <__mempcpy_chk@plt+0x8c4>
   12048:	b	120a0 <__mempcpy_chk@plt+0x9dc>
   1204c:	cmp	r8, #0
   12050:	bne	123d4 <__mempcpy_chk@plt+0xd10>
   12054:	mov	r0, #0
   12058:	mov	sl, #2
   1205c:	str	r0, [sp, #36]	; 0x24
   12060:	b	12098 <__mempcpy_chk@plt+0x9d4>
   12064:	ldrb	r0, [r7, #5]
   12068:	mvn	r2, #99	; 0x63
   1206c:	cmp	r0, #0
   12070:	movwne	r0, #1024	; 0x400
   12074:	str	r0, [sp]
   12078:	mvn	r0, #99	; 0x63
   1207c:	bl	115c8 <linkat@plt>
   12080:	cmn	r0, #1
   12084:	ble	1200c <__mempcpy_chk@plt+0x948>
   12088:	mov	r0, #0
   1208c:	mov	sl, #2
   12090:	mov	r4, #0
   12094:	str	r0, [sp, #36]	; 0x24
   12098:	movw	r7, #49600	; 0xc1c0
   1209c:	movt	r7, #2
   120a0:	ldr	r1, [sp, #32]
   120a4:	mov	r0, #0
   120a8:	tst	r1, #1
   120ac:	beq	120d4 <__mempcpy_chk@plt+0xa10>
   120b0:	movw	r1, #45009	; 0xafd1
   120b4:	mov	r0, #0
   120b8:	mov	r2, #5
   120bc:	movt	r1, #1
   120c0:	bl	1140c <dcgettext@plt>
   120c4:	ldr	r1, [sp, #24]
   120c8:	bl	13c48 <__mempcpy_chk@plt+0x2584>
   120cc:	movw	r7, #49600	; 0xc1c0
   120d0:	movt	r7, #2
   120d4:	str	r0, [r7, #8]
   120d8:	ldr	r0, [sp, #20]
   120dc:	bl	134fc <__mempcpy_chk@plt+0x1e38>
   120e0:	ldr	r6, [sp, #36]	; 0x24
   120e4:	cmp	r6, #0
   120e8:	beq	12158 <__mempcpy_chk@plt+0xa94>
   120ec:	cmp	sl, #2
   120f0:	blt	1217c <__mempcpy_chk@plt+0xab8>
   120f4:	movw	r7, #49600	; 0xc1c0
   120f8:	movt	r7, #2
   120fc:	ldrb	r0, [r7, #3]
   12100:	cmp	r0, #1
   12104:	bne	12188 <__mempcpy_chk@plt+0xac4>
   12108:	ldr	r0, [r7, #8]
   1210c:	cmp	r0, #3
   12110:	beq	12188 <__mempcpy_chk@plt+0xac4>
   12114:	ldrb	r0, [r7, #4]
   12118:	cmp	r0, #0
   1211c:	bne	12188 <__mempcpy_chk@plt+0xac4>
   12120:	movw	r0, #24936	; 0x6168
   12124:	movw	r2, #24776	; 0x60c8
   12128:	movw	r3, #24672	; 0x6060
   1212c:	mov	r1, #0
   12130:	movt	r0, #1
   12134:	movt	r2, #1
   12138:	movt	r3, #1
   1213c:	str	r0, [sp]
   12140:	mov	r0, #61	; 0x3d
   12144:	bl	150e4 <__mempcpy_chk@plt+0x3a20>
   12148:	cmp	r0, #0
   1214c:	str	r0, [r7, #12]
   12150:	bne	12188 <__mempcpy_chk@plt+0xac4>
   12154:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   12158:	ldm	r9, {r0, r2}
   1215c:	mvn	r1, #99	; 0x63
   12160:	mov	r3, r2
   12164:	str	r4, [sp]
   12168:	bl	123f8 <__mempcpy_chk@plt+0xd34>
   1216c:	mov	r4, r0
   12170:	eor	r0, r4, #1
   12174:	sub	sp, fp, #28
   12178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1217c:	mov	r4, #1
   12180:	cmp	sl, #1
   12184:	bne	121f4 <__mempcpy_chk@plt+0xb30>
   12188:	ldr	r5, [sp, #16]
   1218c:	mov	r4, #1
   12190:	mvn	r8, #0
   12194:	ldr	r0, [r9]
   12198:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   1219c:	mov	r1, r0
   121a0:	mov	r0, r6
   121a4:	add	r2, sp, #40	; 0x28
   121a8:	bl	149e4 <__mempcpy_chk@plt+0x3320>
   121ac:	mov	r6, r0
   121b0:	ldr	r0, [sp, #40]	; 0x28
   121b4:	bl	14878 <__mempcpy_chk@plt+0x31b4>
   121b8:	ldr	r0, [r9], #4
   121bc:	ldr	r2, [sp, #40]	; 0x28
   121c0:	mov	r1, r5
   121c4:	mov	r3, r6
   121c8:	str	r8, [sp]
   121cc:	bl	123f8 <__mempcpy_chk@plt+0xd34>
   121d0:	mov	r7, r0
   121d4:	mov	r0, r6
   121d8:	ldr	r6, [sp, #36]	; 0x24
   121dc:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   121e0:	and	r4, r4, r7
   121e4:	subs	sl, sl, #1
   121e8:	bne	12194 <__mempcpy_chk@plt+0xad0>
   121ec:	cmp	r4, #0
   121f0:	movwne	r4, #1
   121f4:	eor	r0, r4, #1
   121f8:	sub	sp, fp, #28
   121fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12200:	movw	r7, #49600	; 0xc1c0
   12204:	movt	r7, #2
   12208:	cmp	r6, #0
   1220c:	mov	r1, r6
   12210:	bne	11f9c <__mempcpy_chk@plt+0x8d8>
   12214:	b	11f94 <__mempcpy_chk@plt+0x8d0>
   12218:	mov	r0, #1
   1221c:	bl	117c0 <__mempcpy_chk@plt+0xfc>
   12220:	movw	r0, #49480	; 0xc148
   12224:	movw	r2, #44803	; 0xaf03
   12228:	mov	r1, #0
   1222c:	movw	r7, #44791	; 0xaef7
   12230:	movt	r0, #2
   12234:	movt	r2, #1
   12238:	str	r1, [sp, #8]
   1223c:	movw	r1, #44646	; 0xae66
   12240:	movt	r7, #1
   12244:	movt	r1, #1
   12248:	ldr	r3, [r0]
   1224c:	movw	r0, #49588	; 0xc1b4
   12250:	str	r2, [sp, #4]
   12254:	movw	r2, #44777	; 0xaee9
   12258:	str	r7, [sp]
   1225c:	movt	r0, #2
   12260:	movt	r2, #1
   12264:	ldr	r0, [r0]
   12268:	bl	19040 <__mempcpy_chk@plt+0x797c>
   1226c:	mov	r0, #0
   12270:	bl	11520 <exit@plt>
   12274:	mov	r0, #0
   12278:	bl	117c0 <__mempcpy_chk@plt+0xfc>
   1227c:	movw	r1, #44690	; 0xae92
   12280:	movt	r1, #1
   12284:	b	12350 <__mempcpy_chk@plt+0xc8c>
   12288:	bl	11550 <__errno_location@plt>
   1228c:	movw	r1, #44728	; 0xaeb8
   12290:	ldr	r4, [r0]
   12294:	mov	r0, #0
   12298:	mov	r2, #5
   1229c:	movt	r1, #1
   122a0:	bl	1140c <dcgettext@plt>
   122a4:	mov	r5, r0
   122a8:	movw	r0, #49592	; 0xc1b8
   122ac:	movt	r0, #2
   122b0:	ldr	r1, [r0]
   122b4:	mov	r0, #4
   122b8:	bl	17cbc <__mempcpy_chk@plt+0x65f8>
   122bc:	mov	r3, r0
   122c0:	mov	r0, #1
   122c4:	mov	r1, r4
   122c8:	mov	r2, r5
   122cc:	bl	114a8 <error@plt>
   122d0:	movw	r1, #44748	; 0xaecc
   122d4:	mov	r0, #0
   122d8:	mov	r2, #5
   122dc:	movt	r1, #1
   122e0:	bl	1140c <dcgettext@plt>
   122e4:	mov	r4, r0
   122e8:	movw	r0, #49592	; 0xc1b8
   122ec:	movt	r0, #2
   122f0:	ldr	r1, [r0]
   122f4:	mov	r0, #4
   122f8:	bl	17cbc <__mempcpy_chk@plt+0x65f8>
   122fc:	mov	r3, r0
   12300:	mov	r0, #1
   12304:	mov	r1, #0
   12308:	mov	r2, r4
   1230c:	bl	114a8 <error@plt>
   12310:	movw	r1, #44819	; 0xaf13
   12314:	mov	r0, #0
   12318:	mov	r2, #5
   1231c:	movt	r1, #1
   12320:	bl	1140c <dcgettext@plt>
   12324:	mov	r2, r0
   12328:	mov	r0, #0
   1232c:	mov	r1, #0
   12330:	bl	114a8 <error@plt>
   12334:	mov	r0, #1
   12338:	bl	117c0 <__mempcpy_chk@plt+0xfc>
   1233c:	movw	r1, #44840	; 0xaf28
   12340:	movt	r1, #1
   12344:	b	12350 <__mempcpy_chk@plt+0xc8c>
   12348:	movw	r1, #44880	; 0xaf50
   1234c:	movt	r1, #1
   12350:	mov	r0, #0
   12354:	mov	r2, #5
   12358:	bl	1140c <dcgettext@plt>
   1235c:	mov	r2, r0
   12360:	mov	r0, #1
   12364:	mov	r1, #0
   12368:	bl	114a8 <error@plt>
   1236c:	cmp	r5, #1
   12370:	bgt	12390 <__mempcpy_chk@plt+0xccc>
   12374:	movw	r1, #44940	; 0xaf8c
   12378:	mov	r0, #0
   1237c:	mov	r2, #5
   12380:	movt	r1, #1
   12384:	bl	1140c <dcgettext@plt>
   12388:	mov	r4, r0
   1238c:	b	123ac <__mempcpy_chk@plt+0xce8>
   12390:	movw	r1, #44982	; 0xafb6
   12394:	mov	r0, #0
   12398:	mov	r2, #5
   1239c:	movt	r1, #1
   123a0:	bl	1140c <dcgettext@plt>
   123a4:	mov	r4, r0
   123a8:	add	r9, r9, #8
   123ac:	ldr	r1, [r9]
   123b0:	mov	r0, #4
   123b4:	bl	17cbc <__mempcpy_chk@plt+0x65f8>
   123b8:	mov	r3, r0
   123bc:	mov	r0, #0
   123c0:	mov	r1, #0
   123c4:	mov	r2, r4
   123c8:	bl	114a8 <error@plt>
   123cc:	mov	r0, #1
   123d0:	bl	117c0 <__mempcpy_chk@plt+0xfc>
   123d4:	movw	r1, #44999	; 0xafc7
   123d8:	ldr	r4, [r0]
   123dc:	mov	r0, #0
   123e0:	mov	r2, #5
   123e4:	movt	r1, #1
   123e8:	bl	1140c <dcgettext@plt>
   123ec:	ldr	r1, [sp, #36]	; 0x24
   123f0:	mov	r5, r0
   123f4:	b	122b4 <__mempcpy_chk@plt+0xbf0>
   123f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123fc:	add	fp, sp, #28
   12400:	sub	sp, sp, #252	; 0xfc
   12404:	movw	r7, #49600	; 0xc1c0
   12408:	mov	r5, r0
   1240c:	ldr	sl, [fp, #8]
   12410:	mov	r8, r3
   12414:	mov	r6, r1
   12418:	mov	r4, #256	; 0x100
   1241c:	str	r2, [sp, #36]	; 0x24
   12420:	movt	r7, #2
   12424:	ldrb	r0, [r7, #5]
   12428:	cmp	r0, #0
   1242c:	movwne	r4, #0
   12430:	cmn	sl, #1
   12434:	bgt	12498 <__mempcpy_chk@plt+0xdd4>
   12438:	ldrb	r1, [r7, #4]
   1243c:	cmp	r1, #1
   12440:	bne	12464 <__mempcpy_chk@plt+0xda0>
   12444:	ldrb	r0, [r7, #7]
   12448:	cmp	r0, #0
   1244c:	beq	12534 <__mempcpy_chk@plt+0xe70>
   12450:	mov	r0, #1
   12454:	str	r6, [sp, #28]
   12458:	mvn	sl, #0
   1245c:	str	r0, [sp, #16]
   12460:	b	125ec <__mempcpy_chk@plt+0xf28>
   12464:	ldr	r3, [sp, #36]	; 0x24
   12468:	cmp	r0, #0
   1246c:	mov	r1, r5
   12470:	mov	r2, r6
   12474:	movwne	r0, #1024	; 0x400
   12478:	str	r0, [sp]
   1247c:	mvn	r0, #99	; 0x63
   12480:	bl	115c8 <linkat@plt>
   12484:	mov	sl, #0
   12488:	cmn	r0, #1
   1248c:	bgt	12498 <__mempcpy_chk@plt+0xdd4>
   12490:	bl	11550 <__errno_location@plt>
   12494:	ldr	sl, [r0]
   12498:	cmp	sl, #0
   1249c:	ldreq	r0, [r7, #12]
   124a0:	moveq	r1, #1
   124a4:	cmpeq	r0, #0
   124a8:	beq	12558 <__mempcpy_chk@plt+0xe94>
   124ac:	ldrb	r1, [r7, #4]
   124b0:	mov	r0, #1
   124b4:	cmp	r1, #0
   124b8:	mov	r1, #1
   124bc:	bne	1255c <__mempcpy_chk@plt+0xe98>
   124c0:	sub	r3, fp, #136	; 0x88
   124c4:	mov	r0, #3
   124c8:	mvn	r1, #99	; 0x63
   124cc:	mov	r2, r5
   124d0:	str	r4, [sp]
   124d4:	bl	1143c <__fxstatat64@plt>
   124d8:	cmp	r0, #0
   124dc:	beq	12554 <__mempcpy_chk@plt+0xe90>
   124e0:	bl	11550 <__errno_location@plt>
   124e4:	movw	r1, #44728	; 0xaeb8
   124e8:	mov	r7, r5
   124ec:	ldr	r5, [r0]
   124f0:	mov	r0, #0
   124f4:	mov	r2, #5
   124f8:	mov	r4, #0
   124fc:	movt	r1, #1
   12500:	bl	1140c <dcgettext@plt>
   12504:	mov	r6, r0
   12508:	mov	r0, #4
   1250c:	mov	r1, r7
   12510:	bl	17cbc <__mempcpy_chk@plt+0x65f8>
   12514:	mov	r3, r0
   12518:	mov	r0, #0
   1251c:	mov	r1, r5
   12520:	mov	r2, r6
   12524:	bl	114a8 <error@plt>
   12528:	mov	r0, r4
   1252c:	sub	sp, fp, #28
   12530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12534:	ldr	r2, [sp, #36]	; 0x24
   12538:	mov	r0, r5
   1253c:	mov	r1, r6
   12540:	bl	11664 <symlinkat@plt>
   12544:	mov	sl, #0
   12548:	cmn	r0, #1
   1254c:	bgt	12498 <__mempcpy_chk@plt+0xdd4>
   12550:	b	12490 <__mempcpy_chk@plt+0xdcc>
   12554:	mov	r1, #0
   12558:	ldrb	r0, [r7, #4]
   1255c:	cmp	sl, #0
   12560:	beq	12650 <__mempcpy_chk@plt+0xf8c>
   12564:	cmp	r0, #0
   12568:	bne	125d4 <__mempcpy_chk@plt+0xf10>
   1256c:	ldrb	r0, [r7]
   12570:	cmp	r0, #0
   12574:	bne	125d4 <__mempcpy_chk@plt+0xf10>
   12578:	ldr	r0, [fp, #-120]	; 0xffffff88
   1257c:	and	r0, r0, #61440	; 0xf000
   12580:	cmp	r0, #16384	; 0x4000
   12584:	bne	125d4 <__mempcpy_chk@plt+0xf10>
   12588:	movw	r1, #45944	; 0xb378
   1258c:	mov	r0, #0
   12590:	mov	r2, #5
   12594:	mov	r4, #0
   12598:	movt	r1, #1
   1259c:	bl	1140c <dcgettext@plt>
   125a0:	mov	r2, r5
   125a4:	mov	r5, r0
   125a8:	mov	r0, #0
   125ac:	mov	r1, #3
   125b0:	bl	17f38 <__mempcpy_chk@plt+0x6874>
   125b4:	mov	r3, r0
   125b8:	mov	r0, #0
   125bc:	mov	r1, #0
   125c0:	mov	r2, r5
   125c4:	bl	114a8 <error@plt>
   125c8:	mov	r0, r4
   125cc:	sub	sp, fp, #28
   125d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125d4:	ldrb	r0, [r7, #7]
   125d8:	mov	r9, #0
   125dc:	str	r1, [sp, #16]
   125e0:	str	r6, [sp, #28]
   125e4:	cmp	r0, #1
   125e8:	bne	1270c <__mempcpy_chk@plt+0x1048>
   125ec:	mov	r0, r8
   125f0:	str	r8, [sp, #24]
   125f4:	bl	14784 <__mempcpy_chk@plt+0x30c0>
   125f8:	mov	r1, #2
   125fc:	mov	r4, r0
   12600:	bl	13d90 <__mempcpy_chk@plt+0x26cc>
   12604:	mov	r6, r0
   12608:	mov	r0, r5
   1260c:	mov	r1, #2
   12610:	bl	13d90 <__mempcpy_chk@plt+0x26cc>
   12614:	mov	r7, r0
   12618:	cmp	r6, #0
   1261c:	mov	r9, #0
   12620:	cmpne	r7, #0
   12624:	bne	12868 <__mempcpy_chk@plt+0x11a4>
   12628:	mov	r0, r4
   1262c:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   12630:	mov	r0, r6
   12634:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   12638:	mov	r0, r7
   1263c:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   12640:	cmp	r9, #0
   12644:	beq	126f0 <__mempcpy_chk@plt+0x102c>
   12648:	mov	r5, r9
   1264c:	b	12700 <__mempcpy_chk@plt+0x103c>
   12650:	mov	r1, #0
   12654:	cmp	r0, #0
   12658:	mov	r9, #0
   1265c:	mov	r6, #0
   12660:	str	r1, [sp, #32]
   12664:	bne	1267c <__mempcpy_chk@plt+0xfb8>
   12668:	ldr	r0, [r7, #12]
   1266c:	sub	r2, fp, #136	; 0x88
   12670:	mov	r1, r8
   12674:	bl	14918 <__mempcpy_chk@plt+0x3254>
   12678:	mov	r6, r9
   1267c:	ldrb	r0, [r7, #1]
   12680:	mov	r4, #1
   12684:	cmp	r0, #1
   12688:	bne	126e8 <__mempcpy_chk@plt+0x1024>
   1268c:	ldr	r4, [sp, #32]
   12690:	str	r5, [sp, #20]
   12694:	cmp	r4, #0
   12698:	beq	12910 <__mempcpy_chk@plt+0x124c>
   1269c:	ldr	r0, [sp, #36]	; 0x24
   126a0:	str	r8, [sp, #24]
   126a4:	sub	r5, r0, r8
   126a8:	cmp	r5, #1
   126ac:	blt	129d0 <__mempcpy_chk@plt+0x130c>
   126b0:	mov	r0, r4
   126b4:	bl	11538 <strlen@plt>
   126b8:	add	r0, r5, r0
   126bc:	add	r0, r0, #1
   126c0:	bl	19274 <__mempcpy_chk@plt+0x7bb0>
   126c4:	mov	r1, r8
   126c8:	mov	r2, r5
   126cc:	mov	r7, r0
   126d0:	bl	113e8 <memcpy@plt>
   126d4:	add	r0, r7, r5
   126d8:	mov	r1, r4
   126dc:	bl	11484 <strcpy@plt>
   126e0:	mov	r5, r7
   126e4:	b	129d8 <__mempcpy_chk@plt+0x1314>
   126e8:	ldr	r5, [sp, #32]
   126ec:	b	12b78 <__mempcpy_chk@plt+0x14b4>
   126f0:	mov	r0, r5
   126f4:	bl	19778 <__mempcpy_chk@plt+0x80b4>
   126f8:	mov	r9, r0
   126fc:	mov	r5, r0
   12700:	ldr	r8, [sp, #24]
   12704:	movw	r7, #49600	; 0xc1c0
   12708:	movt	r7, #2
   1270c:	ldrb	r0, [r7, #3]
   12710:	cmp	r0, #0
   12714:	bne	1273c <__mempcpy_chk@plt+0x1078>
   12718:	ldr	r0, [r7, #8]
   1271c:	cmp	r0, #0
   12720:	bne	1273c <__mempcpy_chk@plt+0x1078>
   12724:	ldrb	r0, [r7, #2]
   12728:	mov	r1, #0
   1272c:	mov	r6, #0
   12730:	str	r1, [sp, #32]
   12734:	cmp	r0, #0
   12738:	beq	12780 <__mempcpy_chk@plt+0x10bc>
   1273c:	ldr	r4, [sp, #28]
   12740:	ldr	r2, [sp, #36]	; 0x24
   12744:	mov	r0, #256	; 0x100
   12748:	add	r3, sp, #40	; 0x28
   1274c:	str	r0, [sp]
   12750:	mov	r0, #3
   12754:	mov	r1, r4
   12758:	bl	1143c <__fxstatat64@plt>
   1275c:	cmp	r0, #0
   12760:	beq	127e4 <__mempcpy_chk@plt+0x1120>
   12764:	bl	11550 <__errno_location@plt>
   12768:	ldr	r4, [r0]
   1276c:	mov	r0, #0
   12770:	mov	r6, #0
   12774:	str	r0, [sp, #32]
   12778:	cmp	r4, #2
   1277c:	bne	12830 <__mempcpy_chk@plt+0x116c>
   12780:	ldrb	r0, [r7, #4]
   12784:	cmp	r0, #1
   12788:	bne	12da4 <__mempcpy_chk@plt+0x16e0>
   1278c:	ldr	r1, [sp, #28]
   12790:	ldr	r2, [sp, #36]	; 0x24
   12794:	mov	r0, r5
   12798:	mov	r3, r6
   1279c:	str	sl, [sp]
   127a0:	bl	12ffc <__mempcpy_chk@plt+0x1938>
   127a4:	mov	r6, r0
   127a8:	ldrb	r0, [r7, #4]
   127ac:	cmp	r6, #0
   127b0:	ble	12dd8 <__mempcpy_chk@plt+0x1714>
   127b4:	cmp	r0, #0
   127b8:	beq	128a4 <__mempcpy_chk@plt+0x11e0>
   127bc:	cmp	r6, #36	; 0x24
   127c0:	beq	129a8 <__mempcpy_chk@plt+0x12e4>
   127c4:	ldrb	r0, [r5]
   127c8:	cmp	r0, #0
   127cc:	beq	129a8 <__mempcpy_chk@plt+0x12e4>
   127d0:	movw	r1, #46139	; 0xb43b
   127d4:	mov	sl, r9
   127d8:	mov	r9, r5
   127dc:	movt	r1, #1
   127e0:	b	12a9c <__mempcpy_chk@plt+0x13d8>
   127e4:	ldr	r0, [sp, #56]	; 0x38
   127e8:	and	r0, r0, #61440	; 0xf000
   127ec:	cmp	r0, #16384	; 0x4000
   127f0:	bne	12920 <__mempcpy_chk@plt+0x125c>
   127f4:	movw	r1, #45984	; 0xb3a0
   127f8:	mov	r0, #0
   127fc:	mov	r2, #5
   12800:	movt	r1, #1
   12804:	bl	1140c <dcgettext@plt>
   12808:	mov	r4, r0
   1280c:	mov	r0, #0
   12810:	mov	r1, #3
   12814:	mov	r2, r8
   12818:	bl	17f38 <__mempcpy_chk@plt+0x6874>
   1281c:	mov	r3, r0
   12820:	mov	r0, #0
   12824:	mov	r1, #0
   12828:	mov	r2, r4
   1282c:	b	1298c <__mempcpy_chk@plt+0x12c8>
   12830:	movw	r1, #44728	; 0xaeb8
   12834:	movt	r1, #1
   12838:	mov	r0, #0
   1283c:	mov	r2, #5
   12840:	bl	1140c <dcgettext@plt>
   12844:	mov	r5, r0
   12848:	mov	r0, #4
   1284c:	mov	r1, r8
   12850:	bl	17cbc <__mempcpy_chk@plt+0x65f8>
   12854:	mov	r3, r0
   12858:	mov	r0, #0
   1285c:	mov	r1, r4
   12860:	mov	r2, r5
   12864:	b	1298c <__mempcpy_chk@plt+0x12c8>
   12868:	mov	r0, #4096	; 0x1000
   1286c:	mov	r9, r5
   12870:	bl	19274 <__mempcpy_chk@plt+0x7bb0>
   12874:	mov	r5, r0
   12878:	mov	r0, r7
   1287c:	mov	r1, r6
   12880:	mov	r3, #4096	; 0x1000
   12884:	mov	r2, r5
   12888:	bl	1318c <__mempcpy_chk@plt+0x1ac8>
   1288c:	cmp	r0, #0
   12890:	beq	129bc <__mempcpy_chk@plt+0x12f8>
   12894:	mov	r0, r5
   12898:	mov	r5, r9
   1289c:	mov	r9, r0
   128a0:	b	12628 <__mempcpy_chk@plt+0xf64>
   128a4:	sub	r0, r6, #17
   128a8:	mov	sl, r9
   128ac:	mov	r9, r5
   128b0:	cmp	r0, #14
   128b4:	bhi	12a8c <__mempcpy_chk@plt+0x13c8>
   128b8:	movw	r1, #46213	; 0xb485
   128bc:	add	r2, pc, #4
   128c0:	movt	r1, #1
   128c4:	ldr	pc, [r2, r0, lsl #2]
   128c8:	andeq	r2, r1, r4, lsl #18
   128cc:	muleq	r1, r4, sl
   128d0:	muleq	r1, r4, sl
   128d4:	muleq	r1, r4, sl
   128d8:	muleq	r1, r4, sl
   128dc:	muleq	r1, r4, sl
   128e0:	muleq	r1, r4, sl
   128e4:	muleq	r1, r4, sl
   128e8:	muleq	r1, r4, sl
   128ec:	muleq	r1, r4, sl
   128f0:	muleq	r1, r4, sl
   128f4:	andeq	r2, r1, r4, lsl #18
   128f8:	muleq	r1, r4, sl
   128fc:	andeq	r2, r1, r4, lsl #18
   12900:	muleq	r1, ip, sl
   12904:	movw	r1, #46250	; 0xb4aa
   12908:	movt	r1, #1
   1290c:	b	12a9c <__mempcpy_chk@plt+0x13d8>
   12910:	movw	r9, #45316	; 0xb104
   12914:	movt	r9, #1
   12918:	mov	sl, r9
   1291c:	b	12a00 <__mempcpy_chk@plt+0x133c>
   12920:	ldr	r0, [r7, #12]
   12924:	add	r2, sp, #40	; 0x28
   12928:	mov	r1, r8
   1292c:	str	r5, [sp, #20]
   12930:	bl	14994 <__mempcpy_chk@plt+0x32d0>
   12934:	cmp	r0, #0
   12938:	beq	12a6c <__mempcpy_chk@plt+0x13a8>
   1293c:	movw	r1, #46015	; 0xb3bf
   12940:	mov	r0, #0
   12944:	mov	r2, #5
   12948:	movt	r1, #1
   1294c:	bl	1140c <dcgettext@plt>
   12950:	mov	r4, r0
   12954:	mov	r0, #0
   12958:	mov	r1, #4
   1295c:	mov	r2, r8
   12960:	bl	17c14 <__mempcpy_chk@plt+0x6550>
   12964:	ldr	r2, [sp, #20]
   12968:	mov	r5, r0
   1296c:	mov	r0, #1
   12970:	mov	r1, #4
   12974:	bl	17c14 <__mempcpy_chk@plt+0x6550>
   12978:	str	r0, [sp]
   1297c:	mov	r0, #0
   12980:	mov	r1, #0
   12984:	mov	r2, r4
   12988:	mov	r3, r5
   1298c:	bl	114a8 <error@plt>
   12990:	mov	r0, r9
   12994:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   12998:	mov	r4, #0
   1299c:	mov	r0, r4
   129a0:	sub	sp, fp, #28
   129a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129a8:	movw	r1, #46173	; 0xb45d
   129ac:	mov	sl, r9
   129b0:	mov	r9, r5
   129b4:	movt	r1, #1
   129b8:	b	12a9c <__mempcpy_chk@plt+0x13d8>
   129bc:	mov	r0, r5
   129c0:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   129c4:	mov	r5, r9
   129c8:	mov	r9, #0
   129cc:	b	12628 <__mempcpy_chk@plt+0xf64>
   129d0:	mov	r5, #0
   129d4:	mov	r7, r4
   129d8:	mov	r0, #2
   129dc:	mov	r1, #4
   129e0:	mov	r2, r7
   129e4:	bl	17c14 <__mempcpy_chk@plt+0x6550>
   129e8:	mov	r9, r0
   129ec:	mov	r0, r5
   129f0:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   129f4:	ldr	r8, [sp, #24]
   129f8:	movw	sl, #46120	; 0xb428
   129fc:	movt	sl, #1
   12a00:	mov	r0, #0
   12a04:	mov	r1, #4
   12a08:	mov	r2, r8
   12a0c:	bl	17c14 <__mempcpy_chk@plt+0x6550>
   12a10:	mov	r7, r0
   12a14:	movw	r0, #49600	; 0xc1c0
   12a18:	ldr	r2, [sp, #20]
   12a1c:	mov	r1, #4
   12a20:	mov	r4, #1
   12a24:	movt	r0, #2
   12a28:	ldrb	r5, [r0, #4]
   12a2c:	mov	r0, #1
   12a30:	bl	17c14 <__mempcpy_chk@plt+0x6550>
   12a34:	cmp	r5, #0
   12a38:	mov	r1, #61	; 0x3d
   12a3c:	str	r0, [sp, #8]
   12a40:	mov	r0, #1
   12a44:	mov	r2, r9
   12a48:	mov	r3, sl
   12a4c:	str	r7, [sp]
   12a50:	movwne	r1, #45	; 0x2d
   12a54:	str	r1, [sp, #4]
   12a58:	movw	r1, #46124	; 0xb42c
   12a5c:	movt	r1, #1
   12a60:	bl	11598 <__printf_chk@plt>
   12a64:	ldr	r5, [sp, #32]
   12a68:	b	12b78 <__mempcpy_chk@plt+0x14b4>
   12a6c:	ldr	r0, [r7, #8]
   12a70:	cmp	r0, #0
   12a74:	beq	12b94 <__mempcpy_chk@plt+0x14d0>
   12a78:	ldrb	r0, [r7, #4]
   12a7c:	cmp	r0, #0
   12a80:	ldr	r5, [sp, #20]
   12a84:	beq	12ba4 <__mempcpy_chk@plt+0x14e0>
   12a88:	b	12c6c <__mempcpy_chk@plt+0x15a8>
   12a8c:	cmp	r6, #122	; 0x7a
   12a90:	beq	12904 <__mempcpy_chk@plt+0x1240>
   12a94:	movw	r1, #46280	; 0xb4c8
   12a98:	movt	r1, #1
   12a9c:	mov	r0, #0
   12aa0:	mov	r2, #5
   12aa4:	mov	r4, #0
   12aa8:	bl	1140c <dcgettext@plt>
   12aac:	mov	r5, r0
   12ab0:	mov	r0, #0
   12ab4:	mov	r1, #4
   12ab8:	mov	r2, r8
   12abc:	str	r8, [sp, #24]
   12ac0:	bl	17c14 <__mempcpy_chk@plt+0x6550>
   12ac4:	mov	r7, r0
   12ac8:	mov	r0, #1
   12acc:	mov	r1, #4
   12ad0:	mov	r2, r9
   12ad4:	bl	17c14 <__mempcpy_chk@plt+0x6550>
   12ad8:	str	r0, [sp]
   12adc:	mov	r0, #0
   12ae0:	mov	r1, r6
   12ae4:	mov	r2, r5
   12ae8:	mov	r3, r7
   12aec:	bl	114a8 <error@plt>
   12af0:	ldr	r5, [sp, #32]
   12af4:	cmp	r5, #0
   12af8:	beq	12b64 <__mempcpy_chk@plt+0x14a0>
   12afc:	ldr	r0, [sp, #28]
   12b00:	ldr	r3, [sp, #36]	; 0x24
   12b04:	mov	r1, r5
   12b08:	mov	r2, r0
   12b0c:	bl	11640 <renameat@plt>
   12b10:	cmp	r0, #0
   12b14:	mov	r7, sl
   12b18:	beq	12b70 <__mempcpy_chk@plt+0x14ac>
   12b1c:	bl	11550 <__errno_location@plt>
   12b20:	movw	r1, #46316	; 0xb4ec
   12b24:	ldr	r8, [r0]
   12b28:	mov	r0, #0
   12b2c:	mov	r2, #5
   12b30:	mov	r4, #0
   12b34:	movt	r1, #1
   12b38:	bl	1140c <dcgettext@plt>
   12b3c:	ldr	r1, [sp, #24]
   12b40:	mov	r6, r0
   12b44:	mov	r0, #4
   12b48:	bl	17cbc <__mempcpy_chk@plt+0x65f8>
   12b4c:	mov	r3, r0
   12b50:	mov	r0, #0
   12b54:	mov	r1, r8
   12b58:	mov	r2, r6
   12b5c:	bl	114a8 <error@plt>
   12b60:	b	12b74 <__mempcpy_chk@plt+0x14b0>
   12b64:	mov	r6, sl
   12b68:	mov	r5, #0
   12b6c:	b	12b78 <__mempcpy_chk@plt+0x14b4>
   12b70:	mov	r4, #0
   12b74:	mov	r6, r7
   12b78:	mov	r0, r5
   12b7c:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   12b80:	mov	r0, r6
   12b84:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   12b88:	mov	r0, r4
   12b8c:	sub	sp, fp, #28
   12b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b94:	ldrb	r0, [r7, #3]
   12b98:	cmp	r0, #1
   12b9c:	ldr	r5, [sp, #20]
   12ba0:	bne	12c6c <__mempcpy_chk@plt+0x15a8>
   12ba4:	ldr	r0, [sp, #16]
   12ba8:	cmp	r0, #0
   12bac:	beq	12bc8 <__mempcpy_chk@plt+0x1504>
   12bb0:	sub	r2, fp, #136	; 0x88
   12bb4:	mov	r0, #3
   12bb8:	mov	r1, r5
   12bbc:	bl	11670 <__xstat64@plt>
   12bc0:	cmp	r0, #0
   12bc4:	bne	12c6c <__mempcpy_chk@plt+0x15a8>
   12bc8:	ldr	r0, [sp, #136]	; 0x88
   12bcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12bd0:	ldr	r1, [sp, #140]	; 0x8c
   12bd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12bd8:	eor	r1, r3, r1
   12bdc:	eor	r0, r2, r0
   12be0:	orrs	r0, r0, r1
   12be4:	bne	12c6c <__mempcpy_chk@plt+0x15a8>
   12be8:	ldr	r0, [sp, #40]	; 0x28
   12bec:	ldr	r2, [fp, #-136]	; 0xffffff78
   12bf0:	ldr	r1, [sp, #44]	; 0x2c
   12bf4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   12bf8:	eor	r1, r3, r1
   12bfc:	eor	r0, r2, r0
   12c00:	orrs	r0, r0, r1
   12c04:	bne	12c6c <__mempcpy_chk@plt+0x15a8>
   12c08:	ldr	r0, [fp, #-116]	; 0xffffff8c
   12c0c:	cmp	r0, #1
   12c10:	beq	12c30 <__mempcpy_chk@plt+0x156c>
   12c14:	ldr	r3, [sp, #36]	; 0x24
   12c18:	mvn	r0, #99	; 0x63
   12c1c:	mov	r1, r5
   12c20:	mov	r2, r4
   12c24:	bl	18424 <__mempcpy_chk@plt+0x6d60>
   12c28:	cmp	r0, #0
   12c2c:	beq	12c6c <__mempcpy_chk@plt+0x15a8>
   12c30:	movw	r1, #46058	; 0xb3ea
   12c34:	mov	r0, #0
   12c38:	mov	r2, #5
   12c3c:	movt	r1, #1
   12c40:	bl	1140c <dcgettext@plt>
   12c44:	mov	r4, r0
   12c48:	mov	r0, #0
   12c4c:	mov	r1, #4
   12c50:	mov	r2, r5
   12c54:	bl	17c14 <__mempcpy_chk@plt+0x6550>
   12c58:	mov	r5, r0
   12c5c:	mov	r0, #1
   12c60:	mov	r1, #4
   12c64:	mov	r2, r8
   12c68:	b	12974 <__mempcpy_chk@plt+0x12b0>
   12c6c:	mov	r0, #0
   12c70:	mov	r6, #1
   12c74:	cmp	sl, #0
   12c78:	str	r0, [sp, #32]
   12c7c:	bmi	12c88 <__mempcpy_chk@plt+0x15c4>
   12c80:	cmp	sl, #17
   12c84:	bne	12780 <__mempcpy_chk@plt+0x10bc>
   12c88:	ldrb	r0, [r7, #2]
   12c8c:	str	r9, [sp, #16]
   12c90:	mov	r9, r8
   12c94:	cmp	r0, #1
   12c98:	bne	12d10 <__mempcpy_chk@plt+0x164c>
   12c9c:	movw	r0, #49576	; 0xc1a8
   12ca0:	movw	r1, #46086	; 0xb406
   12ca4:	mov	r2, #5
   12ca8:	movt	r0, #2
   12cac:	movt	r1, #1
   12cb0:	ldr	r0, [r0]
   12cb4:	str	r0, [sp, #12]
   12cb8:	mov	r0, #0
   12cbc:	bl	1140c <dcgettext@plt>
   12cc0:	mov	r8, r7
   12cc4:	mov	r7, r0
   12cc8:	movw	r0, #49632	; 0xc1e0
   12ccc:	mov	r1, r9
   12cd0:	movt	r0, #2
   12cd4:	ldr	r5, [r0]
   12cd8:	mov	r0, #4
   12cdc:	bl	17cbc <__mempcpy_chk@plt+0x65f8>
   12ce0:	str	r0, [sp]
   12ce4:	ldr	r0, [sp, #12]
   12ce8:	mov	r3, r5
   12cec:	ldr	r5, [sp, #20]
   12cf0:	mov	r2, r7
   12cf4:	mov	r1, #1
   12cf8:	mov	r4, #1
   12cfc:	mov	r7, r8
   12d00:	bl	115b0 <__fprintf_chk@plt>
   12d04:	bl	197f4 <__mempcpy_chk@plt+0x8130>
   12d08:	cmp	r0, #0
   12d0c:	beq	12de8 <__mempcpy_chk@plt+0x1724>
   12d10:	ldr	r2, [r7, #8]
   12d14:	cmp	r2, #0
   12d18:	beq	12d90 <__mempcpy_chk@plt+0x16cc>
   12d1c:	ldr	r7, [sp, #28]
   12d20:	ldr	r4, [sp, #36]	; 0x24
   12d24:	mov	r0, r7
   12d28:	mov	r1, r4
   12d2c:	bl	13bc4 <__mempcpy_chk@plt+0x2500>
   12d30:	mov	r8, r0
   12d34:	mov	r0, r7
   12d38:	mov	r1, r4
   12d3c:	mov	r2, r7
   12d40:	mov	r3, r8
   12d44:	bl	11640 <renameat@plt>
   12d48:	cmp	r0, #0
   12d4c:	beq	12dfc <__mempcpy_chk@plt+0x1738>
   12d50:	bl	11550 <__errno_location@plt>
   12d54:	ldr	r4, [r0]
   12d58:	mov	r0, r8
   12d5c:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   12d60:	mov	r8, r9
   12d64:	ldr	r9, [sp, #16]
   12d68:	movw	r7, #49600	; 0xc1c0
   12d6c:	mov	r0, #0
   12d70:	cmp	r4, #2
   12d74:	mov	r6, #0
   12d78:	movt	r7, #2
   12d7c:	str	r0, [sp, #32]
   12d80:	beq	12780 <__mempcpy_chk@plt+0x10bc>
   12d84:	movw	r1, #46103	; 0xb417
   12d88:	movt	r1, #1
   12d8c:	b	12838 <__mempcpy_chk@plt+0x1174>
   12d90:	mov	r8, r9
   12d94:	ldr	r9, [sp, #16]
   12d98:	ldrb	r0, [r7, #4]
   12d9c:	cmp	r0, #1
   12da0:	beq	1278c <__mempcpy_chk@plt+0x10c8>
   12da4:	ldrb	r0, [r7, #5]
   12da8:	ldr	r2, [sp, #28]
   12dac:	ldr	r3, [sp, #36]	; 0x24
   12db0:	mov	r1, r5
   12db4:	cmp	r0, #0
   12db8:	movwne	r0, #1024	; 0x400
   12dbc:	stm	sp, {r0, r6, sl}
   12dc0:	mvn	r0, #99	; 0x63
   12dc4:	bl	12e20 <__mempcpy_chk@plt+0x175c>
   12dc8:	mov	r6, r0
   12dcc:	ldrb	r0, [r7, #4]
   12dd0:	cmp	r6, #0
   12dd4:	bgt	127b4 <__mempcpy_chk@plt+0x10f0>
   12dd8:	cmp	r0, #0
   12ddc:	mov	r6, r9
   12de0:	beq	12668 <__mempcpy_chk@plt+0xfa4>
   12de4:	b	1267c <__mempcpy_chk@plt+0xfb8>
   12de8:	ldr	r0, [sp, #16]
   12dec:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   12df0:	mov	r0, r4
   12df4:	sub	sp, fp, #28
   12df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12dfc:	str	r8, [sp, #32]
   12e00:	mov	r8, r9
   12e04:	ldr	r9, [sp, #16]
   12e08:	movw	r7, #49600	; 0xc1c0
   12e0c:	movt	r7, #2
   12e10:	ldrb	r0, [r7, #4]
   12e14:	cmp	r0, #1
   12e18:	beq	1278c <__mempcpy_chk@plt+0x10c8>
   12e1c:	b	12da4 <__mempcpy_chk@plt+0x16e0>
   12e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e24:	add	fp, sp, #28
   12e28:	sub	sp, sp, #284	; 0x11c
   12e2c:	ldr	r6, [fp, #16]
   12e30:	mov	sl, r0
   12e34:	ldr	r0, [fp, #8]
   12e38:	mov	r5, r3
   12e3c:	mov	r8, r2
   12e40:	mov	r9, r1
   12e44:	cmn	r6, #1
   12e48:	ble	12e80 <__mempcpy_chk@plt+0x17bc>
   12e4c:	cmp	r6, #17
   12e50:	bne	12f44 <__mempcpy_chk@plt+0x1880>
   12e54:	ldr	r0, [fp, #12]
   12e58:	cmp	r0, #0
   12e5c:	beq	12f44 <__mempcpy_chk@plt+0x1880>
   12e60:	mov	r0, r5
   12e64:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   12e68:	sub	r4, r0, r5
   12e6c:	add	r0, r4, #9
   12e70:	cmp	r0, #256	; 0x100
   12e74:	bhi	12eb4 <__mempcpy_chk@plt+0x17f0>
   12e78:	add	r7, sp, #24
   12e7c:	b	12ec4 <__mempcpy_chk@plt+0x1800>
   12e80:	str	r0, [sp]
   12e84:	mov	r0, sl
   12e88:	mov	r1, r9
   12e8c:	mov	r2, r8
   12e90:	mov	r3, r5
   12e94:	bl	115c8 <linkat@plt>
   12e98:	cmp	r0, #0
   12e9c:	beq	12f50 <__mempcpy_chk@plt+0x188c>
   12ea0:	bl	11550 <__errno_location@plt>
   12ea4:	ldr	r6, [r0]
   12ea8:	cmp	r6, #17
   12eac:	beq	12e54 <__mempcpy_chk@plt+0x1790>
   12eb0:	b	12f44 <__mempcpy_chk@plt+0x1880>
   12eb4:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   12eb8:	mov	r7, r0
   12ebc:	cmp	r0, #0
   12ec0:	beq	12fb4 <__mempcpy_chk@plt+0x18f0>
   12ec4:	mov	r0, r7
   12ec8:	mov	r1, r5
   12ecc:	mov	r2, r4
   12ed0:	mvn	r3, #0
   12ed4:	mvn	r6, #0
   12ed8:	bl	116c4 <__mempcpy_chk@plt>
   12edc:	movw	r1, #46648	; 0xb638
   12ee0:	movw	r3, #12232	; 0x2fc8
   12ee4:	add	r2, sp, #8
   12ee8:	movt	r1, #1
   12eec:	movt	r3, #1
   12ef0:	vldr	d16, [r1]
   12ef4:	mov	r1, #0
   12ef8:	strb	r1, [r0, #8]
   12efc:	mov	r1, #0
   12f00:	vst1.8	{d16}, [r0]
   12f04:	ldr	r0, [fp, #8]
   12f08:	str	r0, [sp, #20]
   12f0c:	mov	r0, #6
   12f10:	str	r8, [sp, #16]
   12f14:	str	r9, [sp, #12]
   12f18:	str	sl, [sp, #8]
   12f1c:	str	r0, [sp]
   12f20:	mov	r0, r7
   12f24:	bl	187d0 <__mempcpy_chk@plt+0x710c>
   12f28:	cmp	r0, #0
   12f2c:	beq	12f60 <__mempcpy_chk@plt+0x189c>
   12f30:	bl	11550 <__errno_location@plt>
   12f34:	ldr	r6, [r0]
   12f38:	add	r0, sp, #24
   12f3c:	cmp	r7, r0
   12f40:	bne	12fa0 <__mempcpy_chk@plt+0x18dc>
   12f44:	mov	r0, r6
   12f48:	sub	sp, fp, #28
   12f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f50:	mov	r6, #0
   12f54:	mov	r0, r6
   12f58:	sub	sp, fp, #28
   12f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f60:	mov	r0, r8
   12f64:	mov	r1, r7
   12f68:	mov	r2, r8
   12f6c:	mov	r3, r5
   12f70:	bl	11640 <renameat@plt>
   12f74:	cmp	r0, #0
   12f78:	beq	12f84 <__mempcpy_chk@plt+0x18c0>
   12f7c:	bl	11550 <__errno_location@plt>
   12f80:	ldr	r6, [r0]
   12f84:	mov	r0, r8
   12f88:	mov	r1, r7
   12f8c:	mov	r2, #0
   12f90:	bl	113a0 <unlinkat@plt>
   12f94:	add	r0, sp, #24
   12f98:	cmp	r7, r0
   12f9c:	beq	12f44 <__mempcpy_chk@plt+0x1880>
   12fa0:	mov	r0, r7
   12fa4:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   12fa8:	mov	r0, r6
   12fac:	sub	sp, fp, #28
   12fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fb4:	bl	11550 <__errno_location@plt>
   12fb8:	ldr	r6, [r0]
   12fbc:	mov	r0, r6
   12fc0:	sub	sp, fp, #28
   12fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fc8:	push	{fp, lr}
   12fcc:	mov	fp, sp
   12fd0:	sub	sp, sp, #8
   12fd4:	mov	ip, r0
   12fd8:	ldm	r1, {r0, r3}
   12fdc:	ldr	r2, [r1, #8]
   12fe0:	ldr	r1, [r1, #12]
   12fe4:	str	r1, [sp]
   12fe8:	mov	r1, r3
   12fec:	mov	r3, ip
   12ff0:	bl	115c8 <linkat@plt>
   12ff4:	mov	sp, fp
   12ff8:	pop	{fp, pc}
   12ffc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13000:	add	fp, sp, #24
   13004:	sub	sp, sp, #272	; 0x110
   13008:	ldr	r5, [fp, #8]
   1300c:	mov	r7, r3
   13010:	mov	r6, r2
   13014:	mov	r8, r1
   13018:	mov	r9, r0
   1301c:	cmn	r5, #1
   13020:	ble	13054 <__mempcpy_chk@plt+0x1990>
   13024:	cmp	r5, #17
   13028:	bne	13160 <__mempcpy_chk@plt+0x1a9c>
   1302c:	cmp	r7, #0
   13030:	beq	13160 <__mempcpy_chk@plt+0x1a9c>
   13034:	mov	r0, r6
   13038:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   1303c:	sub	r4, r0, r6
   13040:	add	r0, r4, #9
   13044:	cmp	r0, #256	; 0x100
   13048:	bhi	13080 <__mempcpy_chk@plt+0x19bc>
   1304c:	add	r7, sp, #12
   13050:	b	13090 <__mempcpy_chk@plt+0x19cc>
   13054:	mov	r0, r9
   13058:	mov	r1, r8
   1305c:	mov	r2, r6
   13060:	bl	11664 <symlinkat@plt>
   13064:	cmp	r0, #0
   13068:	beq	13108 <__mempcpy_chk@plt+0x1a44>
   1306c:	bl	11550 <__errno_location@plt>
   13070:	ldr	r5, [r0]
   13074:	cmp	r5, #17
   13078:	beq	1302c <__mempcpy_chk@plt+0x1968>
   1307c:	b	13160 <__mempcpy_chk@plt+0x1a9c>
   13080:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   13084:	mov	r7, r0
   13088:	cmp	r0, #0
   1308c:	beq	1316c <__mempcpy_chk@plt+0x1aa8>
   13090:	mov	r0, r7
   13094:	mov	r1, r6
   13098:	mov	r2, r4
   1309c:	mvn	r3, #0
   130a0:	mvn	r5, #0
   130a4:	bl	116c4 <__mempcpy_chk@plt>
   130a8:	movw	r1, #46648	; 0xb638
   130ac:	movw	r3, #12672	; 0x3180
   130b0:	add	r2, sp, #4
   130b4:	movt	r1, #1
   130b8:	movt	r3, #1
   130bc:	vldr	d16, [r1]
   130c0:	mov	r1, #0
   130c4:	strb	r1, [r0, #8]
   130c8:	mov	r1, #0
   130cc:	vst1.8	{d16}, [r0]
   130d0:	mov	r0, #6
   130d4:	str	r8, [sp, #8]
   130d8:	str	r9, [sp, #4]
   130dc:	str	r0, [sp]
   130e0:	mov	r0, r7
   130e4:	bl	187d0 <__mempcpy_chk@plt+0x710c>
   130e8:	cmp	r0, #0
   130ec:	beq	13118 <__mempcpy_chk@plt+0x1a54>
   130f0:	bl	11550 <__errno_location@plt>
   130f4:	ldr	r5, [r0]
   130f8:	add	r0, sp, #12
   130fc:	cmp	r7, r0
   13100:	bne	13158 <__mempcpy_chk@plt+0x1a94>
   13104:	b	13160 <__mempcpy_chk@plt+0x1a9c>
   13108:	mov	r5, #0
   1310c:	mov	r0, r5
   13110:	sub	sp, fp, #24
   13114:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13118:	mov	r0, r8
   1311c:	mov	r1, r7
   13120:	mov	r2, r8
   13124:	mov	r3, r6
   13128:	bl	11640 <renameat@plt>
   1312c:	cmp	r0, #0
   13130:	beq	1314c <__mempcpy_chk@plt+0x1a88>
   13134:	bl	11550 <__errno_location@plt>
   13138:	ldr	r5, [r0]
   1313c:	mov	r0, r8
   13140:	mov	r1, r7
   13144:	mov	r2, #0
   13148:	bl	113a0 <unlinkat@plt>
   1314c:	add	r0, sp, #12
   13150:	cmp	r7, r0
   13154:	beq	13160 <__mempcpy_chk@plt+0x1a9c>
   13158:	mov	r0, r7
   1315c:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   13160:	mov	r0, r5
   13164:	sub	sp, fp, #24
   13168:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1316c:	bl	11550 <__errno_location@plt>
   13170:	ldr	r5, [r0]
   13174:	mov	r0, r5
   13178:	sub	sp, fp, #24
   1317c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13180:	mov	r2, r0
   13184:	ldm	r1, {r0, r1}
   13188:	b	11664 <symlinkat@plt>
   1318c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13190:	add	fp, sp, #28
   13194:	sub	sp, sp, #4
   13198:	mov	r7, r1
   1319c:	ldrb	r1, [r1, #1]
   131a0:	mov	r6, r0
   131a4:	ldrb	r0, [r0, #1]
   131a8:	mov	r4, #0
   131ac:	sub	r0, r0, #47	; 0x2f
   131b0:	sub	r1, r1, #47	; 0x2f
   131b4:	clz	r0, r0
   131b8:	clz	r1, r1
   131bc:	lsr	r0, r0, #5
   131c0:	lsr	r1, r1, #5
   131c4:	teq	r1, r0
   131c8:	bne	13434 <__mempcpy_chk@plt+0x1d70>
   131cc:	mov	sl, r3
   131d0:	ldrb	r3, [r7]
   131d4:	ldrb	r1, [r6]
   131d8:	mov	r8, r2
   131dc:	cmp	r3, #0
   131e0:	beq	13230 <__mempcpy_chk@plt+0x1b6c>
   131e4:	mov	r0, #0
   131e8:	mov	r2, #1
   131ec:	tst	r1, #255	; 0xff
   131f0:	beq	13254 <__mempcpy_chk@plt+0x1b90>
   131f4:	uxtb	r4, r1
   131f8:	uxtb	r5, r3
   131fc:	cmp	r5, r4
   13200:	bne	13254 <__mempcpy_chk@plt+0x1b90>
   13204:	ldrb	r3, [r7, r2]
   13208:	ldrb	r1, [r6, r2]
   1320c:	cmp	r4, #47	; 0x2f
   13210:	moveq	r0, r2
   13214:	add	r2, r2, #1
   13218:	cmp	r3, #0
   1321c:	bne	131ec <__mempcpy_chk@plt+0x1b28>
   13220:	sub	r2, r2, #1
   13224:	cmp	r1, #0
   13228:	bne	13240 <__mempcpy_chk@plt+0x1b7c>
   1322c:	b	13444 <__mempcpy_chk@plt+0x1d80>
   13230:	mov	r2, #0
   13234:	mov	r0, #0
   13238:	cmp	r1, #0
   1323c:	beq	13444 <__mempcpy_chk@plt+0x1d80>
   13240:	cmp	r1, #47	; 0x2f
   13244:	moveq	r0, r2
   13248:	cmp	r0, #0
   1324c:	bne	1326c <__mempcpy_chk@plt+0x1ba8>
   13250:	b	13450 <__mempcpy_chk@plt+0x1d8c>
   13254:	tst	r1, #255	; 0xff
   13258:	uxtbeq	r1, r3
   1325c:	cmpeq	r1, #47	; 0x2f
   13260:	beq	13440 <__mempcpy_chk@plt+0x1d7c>
   13264:	cmp	r0, #0
   13268:	beq	13450 <__mempcpy_chk@plt+0x1d8c>
   1326c:	ldrb	r1, [r6, r0]!
   13270:	ldrb	r0, [r7, r0]!
   13274:	mov	r5, r6
   13278:	cmp	r1, #47	; 0x2f
   1327c:	sub	r1, r1, #47	; 0x2f
   13280:	addeq	r5, r5, #1
   13284:	cmp	r0, #47	; 0x2f
   13288:	clz	r1, r1
   1328c:	addeq	r7, r7, #1
   13290:	lsr	r1, r1, #5
   13294:	ldrb	r0, [r7]
   13298:	cmp	r0, #0
   1329c:	beq	132d8 <__mempcpy_chk@plt+0x1c14>
   132a0:	movw	r2, #49588	; 0xc1b4
   132a4:	cmp	r8, #0
   132a8:	str	r1, [sp]
   132ac:	movt	r2, #2
   132b0:	beq	13324 <__mempcpy_chk@plt+0x1c60>
   132b4:	mov	r4, #1
   132b8:	cmp	sl, #3
   132bc:	bcc	13344 <__mempcpy_chk@plt+0x1c80>
   132c0:	movw	r0, #11822	; 0x2e2e
   132c4:	mov	r4, #0
   132c8:	sub	sl, sl, #2
   132cc:	strh	r0, [r8]
   132d0:	strb	r4, [r8, #2]!
   132d4:	b	13344 <__mempcpy_chk@plt+0x1c80>
   132d8:	ldrb	r0, [r6, r1]
   132dc:	movw	r1, #46666	; 0xb64a
   132e0:	movt	r1, #1
   132e4:	cmp	r0, #0
   132e8:	moveq	r5, r1
   132ec:	cmp	r8, #0
   132f0:	beq	13460 <__mempcpy_chk@plt+0x1d9c>
   132f4:	mov	r0, r5
   132f8:	bl	11538 <strlen@plt>
   132fc:	cmp	r0, sl
   13300:	bcs	134b0 <__mempcpy_chk@plt+0x1dec>
   13304:	add	r2, r0, #1
   13308:	mov	r0, r8
   1330c:	mov	r1, r5
   13310:	bl	113e8 <memcpy@plt>
   13314:	mov	r4, #1
   13318:	mov	r0, r4
   1331c:	sub	sp, fp, #28
   13320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13324:	ldr	r1, [r2]
   13328:	movw	r0, #46665	; 0xb649
   1332c:	movt	r0, #1
   13330:	bl	1134c <fputs_unlocked@plt>
   13334:	movw	r2, #49588	; 0xc1b4
   13338:	mov	r8, #0
   1333c:	mov	r4, #0
   13340:	movt	r2, #2
   13344:	movw	r9, #46664	; 0xb648
   13348:	movt	r9, #1
   1334c:	ldrb	r0, [r7]
   13350:	cmp	r0, #47	; 0x2f
   13354:	beq	13370 <__mempcpy_chk@plt+0x1cac>
   13358:	cmp	r0, #0
   1335c:	beq	133d0 <__mempcpy_chk@plt+0x1d0c>
   13360:	add	r7, r7, #1
   13364:	ldrb	r0, [r7]
   13368:	cmp	r0, #47	; 0x2f
   1336c:	bne	13358 <__mempcpy_chk@plt+0x1c94>
   13370:	cmp	r8, #0
   13374:	beq	13398 <__mempcpy_chk@plt+0x1cd4>
   13378:	mov	r0, #1
   1337c:	cmp	sl, #4
   13380:	bcc	133b4 <__mempcpy_chk@plt+0x1cf0>
   13384:	movw	r0, #11823	; 0x2e2f
   13388:	sub	sl, sl, #3
   1338c:	movt	r0, #46	; 0x2e
   13390:	str	r0, [r8], #3
   13394:	b	133b0 <__mempcpy_chk@plt+0x1cec>
   13398:	ldr	r1, [r2]
   1339c:	mov	r0, r9
   133a0:	bl	1134c <fputs_unlocked@plt>
   133a4:	movw	r2, #49588	; 0xc1b4
   133a8:	mov	r8, #0
   133ac:	movt	r2, #2
   133b0:	mov	r0, #0
   133b4:	and	r1, r4, #1
   133b8:	orr	r4, r0, r1
   133bc:	add	r7, r7, #1
   133c0:	ldrb	r0, [r7]
   133c4:	cmp	r0, #47	; 0x2f
   133c8:	bne	13358 <__mempcpy_chk@plt+0x1c94>
   133cc:	b	13370 <__mempcpy_chk@plt+0x1cac>
   133d0:	ldr	r0, [sp]
   133d4:	ldrb	r0, [r6, r0]
   133d8:	and	r6, r4, #1
   133dc:	cmp	r0, #0
   133e0:	beq	13428 <__mempcpy_chk@plt+0x1d64>
   133e4:	cmp	r8, #0
   133e8:	beq	13484 <__mempcpy_chk@plt+0x1dc0>
   133ec:	cmp	sl, #1
   133f0:	mov	r4, #1
   133f4:	movhi	r0, #47	; 0x2f
   133f8:	movls	r6, #1
   133fc:	subhi	sl, sl, #1
   13400:	strhhi	r0, [r8], #1
   13404:	mov	r0, r5
   13408:	bl	11538 <strlen@plt>
   1340c:	cmp	r0, sl
   13410:	bcs	134a8 <__mempcpy_chk@plt+0x1de4>
   13414:	add	r2, r0, #1
   13418:	mov	r0, r8
   1341c:	mov	r1, r5
   13420:	bl	113e8 <memcpy@plt>
   13424:	b	134a4 <__mempcpy_chk@plt+0x1de0>
   13428:	mov	r4, #1
   1342c:	cmp	r6, #0
   13430:	bne	134b0 <__mempcpy_chk@plt+0x1dec>
   13434:	mov	r0, r4
   13438:	sub	sp, fp, #28
   1343c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13440:	sub	r2, r2, #1
   13444:	mov	r0, r2
   13448:	cmp	r0, #0
   1344c:	bne	1326c <__mempcpy_chk@plt+0x1ba8>
   13450:	mov	r4, #0
   13454:	mov	r0, r4
   13458:	sub	sp, fp, #28
   1345c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13460:	movw	r0, #49588	; 0xc1b4
   13464:	movt	r0, #2
   13468:	ldr	r1, [r0]
   1346c:	mov	r0, r5
   13470:	bl	1134c <fputs_unlocked@plt>
   13474:	mov	r4, #1
   13478:	mov	r0, r4
   1347c:	sub	sp, fp, #28
   13480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13484:	ldr	r1, [r2]
   13488:	movw	r0, #48098	; 0xbbe2
   1348c:	mov	r4, r2
   13490:	movt	r0, #1
   13494:	bl	1134c <fputs_unlocked@plt>
   13498:	ldr	r1, [r4]
   1349c:	mov	r0, r5
   134a0:	bl	1134c <fputs_unlocked@plt>
   134a4:	mov	r4, #0
   134a8:	orrs	r0, r4, r6
   134ac:	beq	134ec <__mempcpy_chk@plt+0x1e28>
   134b0:	movw	r1, #46668	; 0xb64c
   134b4:	mov	r0, #0
   134b8:	mov	r2, #5
   134bc:	mov	r4, #0
   134c0:	movt	r1, #1
   134c4:	bl	1140c <dcgettext@plt>
   134c8:	movw	r2, #48251	; 0xbc7b
   134cc:	mov	r3, r0
   134d0:	mov	r0, #0
   134d4:	mov	r1, #36	; 0x24
   134d8:	movt	r2, #1
   134dc:	bl	114a8 <error@plt>
   134e0:	mov	r0, r4
   134e4:	sub	sp, fp, #28
   134e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134ec:	mov	r4, #1
   134f0:	mov	r0, r4
   134f4:	sub	sp, fp, #28
   134f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134fc:	push	{r4, r5, fp, lr}
   13500:	add	fp, sp, #8
   13504:	movw	r5, #46732	; 0xb68c
   13508:	mov	r4, r0
   1350c:	cmp	r0, #0
   13510:	movt	r5, #1
   13514:	bne	13530 <__mempcpy_chk@plt+0x1e6c>
   13518:	movw	r0, #46708	; 0xb674
   1351c:	movt	r0, #1
   13520:	bl	114c0 <getenv@plt>
   13524:	mov	r4, r0
   13528:	cmp	r0, #0
   1352c:	beq	13554 <__mempcpy_chk@plt+0x1e90>
   13530:	ldrb	r0, [r4]
   13534:	cmp	r0, #0
   13538:	beq	13554 <__mempcpy_chk@plt+0x1e90>
   1353c:	mov	r0, r4
   13540:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   13544:	movw	r5, #46732	; 0xb68c
   13548:	cmp	r4, r0
   1354c:	movt	r5, #1
   13550:	moveq	r5, r4
   13554:	movw	r0, #49616	; 0xc1d0
   13558:	movt	r0, #2
   1355c:	str	r5, [r0]
   13560:	pop	{r4, r5, fp, pc}
   13564:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13568:	add	fp, sp, #28
   1356c:	sub	sp, sp, #68	; 0x44
   13570:	str	r0, [sp, #48]	; 0x30
   13574:	mov	r0, r1
   13578:	str	r3, [sp, #40]	; 0x28
   1357c:	mov	r7, r2
   13580:	mov	r4, r1
   13584:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   13588:	str	r4, [fp, #-40]	; 0xffffffd8
   1358c:	sub	r4, r0, r4
   13590:	bl	13d58 <__mempcpy_chk@plt+0x2694>
   13594:	mov	r6, r0
   13598:	add	r9, r4, r0
   1359c:	movw	r0, #49616	; 0xc1d0
   135a0:	str	r4, [fp, #-44]	; 0xffffffd4
   135a4:	movt	r0, #2
   135a8:	ldr	r0, [r0]
   135ac:	cmp	r0, #0
   135b0:	bne	13608 <__mempcpy_chk@plt+0x1f44>
   135b4:	movw	r0, #46708	; 0xb674
   135b8:	movt	r0, #1
   135bc:	bl	114c0 <getenv@plt>
   135c0:	mov	r5, r0
   135c4:	movw	r0, #46732	; 0xb68c
   135c8:	movt	r0, #1
   135cc:	cmp	r5, #0
   135d0:	beq	135fc <__mempcpy_chk@plt+0x1f38>
   135d4:	ldrb	r1, [r5]
   135d8:	cmp	r1, #0
   135dc:	beq	135fc <__mempcpy_chk@plt+0x1f38>
   135e0:	mov	r0, r5
   135e4:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   135e8:	mov	r1, r0
   135ec:	movw	r0, #46732	; 0xb68c
   135f0:	cmp	r5, r1
   135f4:	movt	r0, #1
   135f8:	moveq	r0, r5
   135fc:	movw	r1, #49616	; 0xc1d0
   13600:	movt	r1, #2
   13604:	str	r0, [r1]
   13608:	bl	11538 <strlen@plt>
   1360c:	add	r0, r0, #1
   13610:	cmp	r0, #9
   13614:	str	r0, [sp, #32]
   13618:	movle	r0, #9
   1361c:	add	r0, r9, r0
   13620:	add	r0, r0, #1
   13624:	str	r0, [sp, #20]
   13628:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   1362c:	cmp	r0, #0
   13630:	beq	13b54 <__mempcpy_chk@plt+0x2490>
   13634:	mov	r8, r0
   13638:	mvn	r0, #99	; 0x63
   1363c:	add	r4, r6, #4
   13640:	mov	sl, #0
   13644:	str	r6, [sp, #8]
   13648:	str	r9, [sp, #36]	; 0x24
   1364c:	str	r0, [fp, #-32]	; 0xffffffe0
   13650:	add	r0, r9, #4
   13654:	str	r0, [sp, #4]
   13658:	add	r0, r6, #2
   1365c:	str	r0, [fp, #-36]	; 0xffffffdc
   13660:	mov	r0, #0
   13664:	str	r0, [sp, #24]
   13668:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1366c:	mov	r0, r8
   13670:	mov	r2, r9
   13674:	bl	113e8 <memcpy@plt>
   13678:	cmp	r7, #1
   1367c:	bne	136b0 <__mempcpy_chk@plt+0x1fec>
   13680:	movw	r1, #49616	; 0xc1d0
   13684:	ldr	r2, [sp, #32]
   13688:	add	r0, r8, r9
   1368c:	movt	r1, #2
   13690:	ldr	r1, [r1]
   13694:	bl	113e8 <memcpy@plt>
   13698:	mov	r5, #1
   1369c:	mov	r6, #0
   136a0:	ldr	r0, [sp, #40]	; 0x28
   136a4:	cmp	r0, #0
   136a8:	bne	13a28 <__mempcpy_chk@plt+0x2364>
   136ac:	b	13b38 <__mempcpy_chk@plt+0x2474>
   136b0:	cmp	sl, #0
   136b4:	str	r7, [sp, #44]	; 0x2c
   136b8:	beq	136d8 <__mempcpy_chk@plt+0x2014>
   136bc:	mov	r0, sl
   136c0:	bl	11388 <rewinddir@plt>
   136c4:	mov	r0, sl
   136c8:	bl	11628 <readdir64@plt>
   136cc:	cmp	r0, #0
   136d0:	bne	13738 <__mempcpy_chk@plt+0x2074>
   136d4:	b	13990 <__mempcpy_chk@plt+0x22cc>
   136d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136dc:	mov	r1, r8
   136e0:	mov	r2, #0
   136e4:	sub	r3, fp, #32
   136e8:	add	r5, r8, r0
   136ec:	mov	r0, #46	; 0x2e
   136f0:	ldrh	r6, [r5]
   136f4:	strh	r0, [r5]
   136f8:	ldr	r0, [sp, #48]	; 0x30
   136fc:	bl	161c0 <__mempcpy_chk@plt+0x4afc>
   13700:	cmp	r0, #0
   13704:	beq	13964 <__mempcpy_chk@plt+0x22a0>
   13708:	movw	r1, #32302	; 0x7e2e
   1370c:	mov	sl, r0
   13710:	mov	r0, r8
   13714:	strh	r6, [r5]
   13718:	movt	r1, #32305	; 0x7e31
   1371c:	str	r1, [r0, r9]!
   13720:	mov	r1, #0
   13724:	strb	r1, [r0, #4]
   13728:	mov	r0, sl
   1372c:	bl	11628 <readdir64@plt>
   13730:	cmp	r0, #0
   13734:	beq	13990 <__mempcpy_chk@plt+0x22cc>
   13738:	mov	r6, r0
   1373c:	mov	r0, #1
   13740:	str	r0, [sp, #16]
   13744:	mov	r0, #2
   13748:	str	r0, [sp, #28]
   1374c:	ldr	r0, [sp, #20]
   13750:	str	r0, [sp, #12]
   13754:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13758:	add	r7, r8, r0
   1375c:	b	13774 <__mempcpy_chk@plt+0x20b0>
   13760:	mov	r0, sl
   13764:	bl	11628 <readdir64@plt>
   13768:	mov	r6, r0
   1376c:	cmp	r0, #0
   13770:	beq	13930 <__mempcpy_chk@plt+0x226c>
   13774:	add	r5, r6, #19
   13778:	mov	r0, r5
   1377c:	bl	11538 <strlen@plt>
   13780:	cmp	r0, r4
   13784:	bcc	13760 <__mempcpy_chk@plt+0x209c>
   13788:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1378c:	mov	r0, r7
   13790:	mov	r1, r5
   13794:	bl	1152c <bcmp@plt>
   13798:	cmp	r0, #0
   1379c:	bne	13760 <__mempcpy_chk@plt+0x209c>
   137a0:	ldr	r0, [sp, #8]
   137a4:	add	r0, r6, r0
   137a8:	mov	r6, r0
   137ac:	ldrb	r1, [r6, #21]!
   137b0:	sub	r2, r1, #49	; 0x31
   137b4:	uxtb	r2, r2
   137b8:	cmp	r2, #8
   137bc:	bhi	1391c <__mempcpy_chk@plt+0x2258>
   137c0:	sub	r1, r1, #57	; 0x39
   137c4:	sub	r2, r6, #2
   137c8:	mov	r5, #1
   137cc:	clz	r1, r1
   137d0:	lsr	r7, r1, #5
   137d4:	ldrb	r1, [r2, #3]
   137d8:	sub	r2, r1, #48	; 0x30
   137dc:	cmp	r2, #9
   137e0:	bhi	13814 <__mempcpy_chk@plt+0x2150>
   137e4:	mov	r2, #23
   137e8:	mvn	r5, #56	; 0x38
   137ec:	uxtab	r1, r5, r1
   137f0:	clz	r1, r1
   137f4:	lsr	r1, r1, #5
   137f8:	and	r7, r1, r7
   137fc:	ldrb	r1, [r0, r2]
   13800:	add	r2, r2, #1
   13804:	sub	r3, r1, #48	; 0x30
   13808:	cmp	r3, #10
   1380c:	bcc	137ec <__mempcpy_chk@plt+0x2128>
   13810:	sub	r5, r2, #22
   13814:	cmp	r1, #126	; 0x7e
   13818:	bne	1391c <__mempcpy_chk@plt+0x2258>
   1381c:	add	r0, r5, r6
   13820:	ldrb	r0, [r0, #1]
   13824:	cmp	r0, #0
   13828:	bne	1391c <__mempcpy_chk@plt+0x2258>
   1382c:	ldr	r0, [sp, #16]
   13830:	cmp	r0, r5
   13834:	blt	13858 <__mempcpy_chk@plt+0x2194>
   13838:	bne	1391c <__mempcpy_chk@plt+0x2258>
   1383c:	ldr	r2, [sp, #16]
   13840:	add	r0, r8, r9
   13844:	mov	r1, r6
   13848:	add	r0, r0, #2
   1384c:	bl	11400 <memcmp@plt>
   13850:	cmp	r0, #0
   13854:	bgt	1391c <__mempcpy_chk@plt+0x2258>
   13858:	ldr	r0, [sp, #4]
   1385c:	add	r1, r5, r7
   13860:	str	r1, [sp, #16]
   13864:	add	r9, r0, r1
   13868:	ldr	r1, [sp, #12]
   1386c:	cmp	r1, r9
   13870:	bge	138a4 <__mempcpy_chk@plt+0x21e0>
   13874:	add	r0, r9, r9, asr #1
   13878:	cmp	r0, r9
   1387c:	movvc	r9, r0
   13880:	mov	r0, r8
   13884:	cmp	r9, #0
   13888:	mov	r1, r9
   1388c:	orreq	r1, r1, #1
   13890:	bl	198f8 <__mempcpy_chk@plt+0x8234>
   13894:	cmp	r0, #0
   13898:	mov	r3, #48	; 0x30
   1389c:	bne	138b0 <__mempcpy_chk@plt+0x21ec>
   138a0:	b	13b90 <__mempcpy_chk@plt+0x24cc>
   138a4:	mov	r0, r8
   138a8:	mov	r9, r1
   138ac:	mov	r3, #48	; 0x30
   138b0:	ldr	r1, [sp, #36]	; 0x24
   138b4:	movw	r2, #32302	; 0x7e2e
   138b8:	str	r0, [sp, #28]
   138bc:	strh	r2, [r0, r1]!
   138c0:	add	r2, r5, #2
   138c4:	mov	r1, r6
   138c8:	strb	r3, [r0, #2]!
   138cc:	add	r8, r0, r7
   138d0:	mov	r0, r8
   138d4:	bl	113e8 <memcpy@plt>
   138d8:	add	r0, r8, r5
   138dc:	ldrb	r1, [r0, #-1]!
   138e0:	cmp	r1, #57	; 0x39
   138e4:	bne	13904 <__mempcpy_chk@plt+0x2240>
   138e8:	ldr	r8, [sp, #28]
   138ec:	mov	r2, #48	; 0x30
   138f0:	strb	r2, [r0]
   138f4:	ldrb	r1, [r0, #-1]!
   138f8:	cmp	r1, #57	; 0x39
   138fc:	beq	138f0 <__mempcpy_chk@plt+0x222c>
   13900:	b	13908 <__mempcpy_chk@plt+0x2244>
   13904:	ldr	r8, [sp, #28]
   13908:	str	r9, [sp, #12]
   1390c:	ldr	r9, [sp, #36]	; 0x24
   13910:	add	r1, r1, #1
   13914:	str	r7, [sp, #28]
   13918:	strb	r1, [r0]
   1391c:	mov	r0, sl
   13920:	bl	11628 <readdir64@plt>
   13924:	mov	r6, r0
   13928:	cmp	r0, #0
   1392c:	bne	13754 <__mempcpy_chk@plt+0x2090>
   13930:	ldr	r0, [sp, #28]
   13934:	cmp	r0, #1
   13938:	beq	139b8 <__mempcpy_chk@plt+0x22f4>
   1393c:	cmp	r0, #2
   13940:	beq	13954 <__mempcpy_chk@plt+0x2290>
   13944:	mov	r6, #0
   13948:	cmp	r0, #3
   1394c:	bne	13a18 <__mempcpy_chk@plt+0x2354>
   13950:	b	13b90 <__mempcpy_chk@plt+0x24cc>
   13954:	ldr	r7, [sp, #44]	; 0x2c
   13958:	cmp	r7, #2
   1395c:	bne	139b8 <__mempcpy_chk@plt+0x22f4>
   13960:	b	13998 <__mempcpy_chk@plt+0x22d4>
   13964:	bl	11550 <__errno_location@plt>
   13968:	ldr	r0, [r0]
   1396c:	movw	r2, #32302	; 0x7e2e
   13970:	mov	r1, r8
   13974:	strh	r6, [r5]
   13978:	mov	sl, #0
   1397c:	movt	r2, #32305	; 0x7e31
   13980:	str	r2, [r1, r9]!
   13984:	cmp	r0, #12
   13988:	strb	sl, [r1, #4]
   1398c:	beq	13ba0 <__mempcpy_chk@plt+0x24dc>
   13990:	cmp	r7, #2
   13994:	bne	139b8 <__mempcpy_chk@plt+0x22f4>
   13998:	movw	r1, #49616	; 0xc1d0
   1399c:	ldr	r2, [sp, #32]
   139a0:	add	r0, r8, r9
   139a4:	movt	r1, #2
   139a8:	ldr	r1, [r1]
   139ac:	bl	113e8 <memcpy@plt>
   139b0:	mov	r0, #1
   139b4:	str	r0, [sp, #44]	; 0x2c
   139b8:	ldr	r9, [fp, #-32]	; 0xffffffe0
   139bc:	mov	r0, r8
   139c0:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   139c4:	mov	r5, r0
   139c8:	bl	13d58 <__mempcpy_chk@plt+0x2694>
   139cc:	mov	r6, #0
   139d0:	cmp	r0, #15
   139d4:	blt	13a18 <__mempcpy_chk@plt+0x2354>
   139d8:	ldr	r1, [sp, #24]
   139dc:	mov	r7, r0
   139e0:	cmp	r1, #0
   139e4:	beq	13aa4 <__mempcpy_chk@plt+0x23e0>
   139e8:	cmp	r7, r1
   139ec:	str	r1, [sp, #24]
   139f0:	ble	13a18 <__mempcpy_chk@plt+0x2354>
   139f4:	ldr	r0, [sp, #36]	; 0x24
   139f8:	mov	r6, #1
   139fc:	add	r0, r8, r0
   13a00:	sub	r0, r0, r5
   13a04:	cmp	r1, r0
   13a08:	suble	r0, r1, #1
   13a0c:	mov	r1, #126	; 0x7e
   13a10:	add	r0, r5, r0
   13a14:	strh	r1, [r0]
   13a18:	ldr	r5, [sp, #44]	; 0x2c
   13a1c:	ldr	r0, [sp, #40]	; 0x28
   13a20:	cmp	r0, #0
   13a24:	beq	13b38 <__mempcpy_chk@plt+0x2474>
   13a28:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13a2c:	ldr	r1, [sp, #48]	; 0x30
   13a30:	subs	r0, r5, #1
   13a34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13a38:	movwne	r0, #1
   13a3c:	str	r0, [sp]
   13a40:	cmp	r2, #0
   13a44:	mov	r0, r2
   13a48:	movmi	r0, r1
   13a4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a50:	movwmi	r3, #0
   13a54:	add	r1, r1, r3
   13a58:	add	r3, r8, r3
   13a5c:	bl	181fc <__mempcpy_chk@plt+0x6b38>
   13a60:	cmp	r0, #0
   13a64:	beq	13b38 <__mempcpy_chk@plt+0x2474>
   13a68:	mov	r9, r8
   13a6c:	mov	r8, r5
   13a70:	mvn	r7, r6
   13a74:	bl	11550 <__errno_location@plt>
   13a78:	ldr	r6, [r0]
   13a7c:	mov	r5, r0
   13a80:	sub	r0, r6, #17
   13a84:	clz	r0, r0
   13a88:	lsr	r0, r0, #5
   13a8c:	tst	r7, r0
   13a90:	mov	r7, r8
   13a94:	mov	r8, r9
   13a98:	ldr	r9, [sp, #36]	; 0x24
   13a9c:	bne	13668 <__mempcpy_chk@plt+0x1fa4>
   13aa0:	b	13b64 <__mempcpy_chk@plt+0x24a0>
   13aa4:	cmn	r9, #1
   13aa8:	ble	13ad8 <__mempcpy_chk@plt+0x2414>
   13aac:	bl	11550 <__errno_location@plt>
   13ab0:	mov	r1, r0
   13ab4:	str	r0, [sp, #28]
   13ab8:	mov	r0, #0
   13abc:	str	r0, [r1]
   13ac0:	mov	r0, r9
   13ac4:	mov	r1, #3
   13ac8:	bl	11580 <fpathconf@plt>
   13acc:	ldr	r1, [sp, #28]
   13ad0:	ldr	r1, [r1]
   13ad4:	b	13b10 <__mempcpy_chk@plt+0x244c>
   13ad8:	ldrh	r0, [r5]
   13adc:	str	r0, [sp, #28]
   13ae0:	mov	r0, #46	; 0x2e
   13ae4:	strh	r0, [r5]
   13ae8:	bl	11550 <__errno_location@plt>
   13aec:	mov	r9, r0
   13af0:	mov	r0, #0
   13af4:	mov	r1, #3
   13af8:	str	r0, [r9]
   13afc:	mov	r0, r8
   13b00:	bl	1137c <pathconf@plt>
   13b04:	ldr	r2, [sp, #28]
   13b08:	ldr	r1, [r9]
   13b0c:	strh	r2, [r5]
   13b10:	cmp	r1, #0
   13b14:	subeq	r0, r0, #1
   13b18:	cmn	r0, #1
   13b1c:	mov	r1, r0
   13b20:	movwne	r1, #14
   13b24:	movgt	r1, r0
   13b28:	cmp	r7, r1
   13b2c:	str	r1, [sp, #24]
   13b30:	bgt	139f4 <__mempcpy_chk@plt+0x2330>
   13b34:	b	13a18 <__mempcpy_chk@plt+0x2354>
   13b38:	cmp	sl, #0
   13b3c:	beq	13b48 <__mempcpy_chk@plt+0x2484>
   13b40:	mov	r0, sl
   13b44:	bl	116ac <closedir@plt>
   13b48:	mov	r0, r8
   13b4c:	sub	sp, fp, #28
   13b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b54:	mov	r8, #0
   13b58:	mov	r0, r8
   13b5c:	sub	sp, fp, #28
   13b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b64:	cmp	sl, #0
   13b68:	beq	13b74 <__mempcpy_chk@plt+0x24b0>
   13b6c:	mov	r0, sl
   13b70:	bl	116ac <closedir@plt>
   13b74:	mov	r0, r8
   13b78:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   13b7c:	str	r6, [r5]
   13b80:	mov	r8, #0
   13b84:	mov	r0, r8
   13b88:	sub	sp, fp, #28
   13b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b90:	cmp	sl, #0
   13b94:	beq	13ba0 <__mempcpy_chk@plt+0x24dc>
   13b98:	mov	r0, sl
   13b9c:	bl	116ac <closedir@plt>
   13ba0:	mov	r0, r8
   13ba4:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   13ba8:	bl	11550 <__errno_location@plt>
   13bac:	mov	r1, #12
   13bb0:	mov	r8, #0
   13bb4:	str	r1, [r0]
   13bb8:	mov	r0, r8
   13bbc:	sub	sp, fp, #28
   13bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bc4:	push	{fp, lr}
   13bc8:	mov	fp, sp
   13bcc:	mov	r3, #0
   13bd0:	bl	13564 <__mempcpy_chk@plt+0x1ea0>
   13bd4:	cmp	r0, #0
   13bd8:	popne	{fp, pc}
   13bdc:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   13be0:	push	{r4, sl, fp, lr}
   13be4:	add	fp, sp, #8
   13be8:	sub	sp, sp, #16
   13bec:	mov	r2, #2
   13bf0:	cmp	r1, #0
   13bf4:	beq	13c3c <__mempcpy_chk@plt+0x2578>
   13bf8:	ldrb	r3, [r1]
   13bfc:	cmp	r3, #0
   13c00:	beq	13c3c <__mempcpy_chk@plt+0x2578>
   13c04:	movw	r2, #49552	; 0xc190
   13c08:	mov	r4, #4
   13c0c:	mov	r3, #1
   13c10:	movt	r2, #2
   13c14:	str	r4, [sp]
   13c18:	movw	r4, #46736	; 0xb690
   13c1c:	movt	r4, #1
   13c20:	ldr	r2, [r2]
   13c24:	stmib	sp, {r2, r3}
   13c28:	movw	r2, #46768	; 0xb6b0
   13c2c:	mov	r3, r4
   13c30:	movt	r2, #1
   13c34:	bl	19cd8 <__mempcpy_chk@plt+0x8614>
   13c38:	ldr	r2, [r4, r0, lsl #2]
   13c3c:	mov	r0, r2
   13c40:	sub	sp, fp, #8
   13c44:	pop	{r4, sl, fp, pc}
   13c48:	push	{r4, sl, fp, lr}
   13c4c:	add	fp, sp, #8
   13c50:	sub	sp, sp, #16
   13c54:	cmp	r1, #0
   13c58:	beq	13c88 <__mempcpy_chk@plt+0x25c4>
   13c5c:	ldrb	r2, [r1]
   13c60:	cmp	r2, #0
   13c64:	beq	13c88 <__mempcpy_chk@plt+0x25c4>
   13c68:	movw	r2, #49552	; 0xc190
   13c6c:	mov	r4, #4
   13c70:	mov	r3, #1
   13c74:	movt	r2, #2
   13c78:	str	r4, [sp]
   13c7c:	ldr	r2, [r2]
   13c80:	stmib	sp, {r2, r3}
   13c84:	b	13cd4 <__mempcpy_chk@plt+0x2610>
   13c88:	movw	r0, #46805	; 0xb6d5
   13c8c:	movt	r0, #1
   13c90:	bl	114c0 <getenv@plt>
   13c94:	mov	r1, r0
   13c98:	mov	r0, #2
   13c9c:	cmp	r1, #0
   13ca0:	beq	13cf0 <__mempcpy_chk@plt+0x262c>
   13ca4:	ldrb	r2, [r1]
   13ca8:	cmp	r2, #0
   13cac:	beq	13cf0 <__mempcpy_chk@plt+0x262c>
   13cb0:	movw	r0, #49552	; 0xc190
   13cb4:	mov	r3, #4
   13cb8:	mov	r2, #1
   13cbc:	movt	r0, #2
   13cc0:	str	r3, [sp]
   13cc4:	ldr	r0, [r0]
   13cc8:	stmib	sp, {r0, r2}
   13ccc:	movw	r0, #46804	; 0xb6d4
   13cd0:	movt	r0, #1
   13cd4:	movw	r4, #46736	; 0xb690
   13cd8:	movw	r2, #46768	; 0xb6b0
   13cdc:	movt	r4, #1
   13ce0:	movt	r2, #1
   13ce4:	mov	r3, r4
   13ce8:	bl	19cd8 <__mempcpy_chk@plt+0x8614>
   13cec:	ldr	r0, [r4, r0, lsl #2]
   13cf0:	sub	sp, fp, #8
   13cf4:	pop	{r4, sl, fp, pc}
   13cf8:	sub	r0, r0, #1
   13cfc:	ldrb	r3, [r0, #1]!
   13d00:	cmp	r3, #47	; 0x2f
   13d04:	beq	13cfc <__mempcpy_chk@plt+0x2638>
   13d08:	mov	r2, #0
   13d0c:	mov	r1, r0
   13d10:	uxtb	r3, r3
   13d14:	cmp	r3, #47	; 0x2f
   13d18:	bne	13d30 <__mempcpy_chk@plt+0x266c>
   13d1c:	ldrb	r3, [r1, #1]!
   13d20:	mov	r2, #1
   13d24:	uxtb	r3, r3
   13d28:	cmp	r3, #47	; 0x2f
   13d2c:	beq	13d1c <__mempcpy_chk@plt+0x2658>
   13d30:	cmp	r3, #0
   13d34:	bxeq	lr
   13d38:	tst	r2, #1
   13d3c:	mov	r2, #0
   13d40:	movne	r0, r1
   13d44:	ldrb	r3, [r1, #1]!
   13d48:	uxtb	r3, r3
   13d4c:	cmp	r3, #47	; 0x2f
   13d50:	bne	13d30 <__mempcpy_chk@plt+0x266c>
   13d54:	b	13d1c <__mempcpy_chk@plt+0x2658>
   13d58:	push	{r4, sl, fp, lr}
   13d5c:	add	fp, sp, #8
   13d60:	mov	r4, r0
   13d64:	bl	11538 <strlen@plt>
   13d68:	mov	r1, r0
   13d6c:	sub	r2, r4, #1
   13d70:	mov	r0, r1
   13d74:	cmp	r1, #2
   13d78:	bcc	13d8c <__mempcpy_chk@plt+0x26c8>
   13d7c:	ldrb	r3, [r2, r0]
   13d80:	sub	r1, r0, #1
   13d84:	cmp	r3, #47	; 0x2f
   13d88:	beq	13d70 <__mempcpy_chk@plt+0x26ac>
   13d8c:	pop	{r4, sl, fp, pc}
   13d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d94:	add	fp, sp, #28
   13d98:	sub	sp, sp, #180	; 0xb4
   13d9c:	sub	sp, sp, #3072	; 0xc00
   13da0:	and	r7, r1, #3
   13da4:	mov	r8, r0
   13da8:	sub	r0, r7, #1
   13dac:	tst	r7, r0
   13db0:	bne	13e7c <__mempcpy_chk@plt+0x27b8>
   13db4:	cmp	r8, #0
   13db8:	beq	13e7c <__mempcpy_chk@plt+0x27b8>
   13dbc:	ldrb	r0, [r8]
   13dc0:	cmp	r0, #0
   13dc4:	beq	143f8 <__mempcpy_chk@plt+0x2d34>
   13dc8:	mov	r4, r1
   13dcc:	mov	r1, #1024	; 0x400
   13dd0:	sub	lr, fp, #1024	; 0x400
   13dd4:	cmp	r0, #47	; 0x2f
   13dd8:	str	r1, [fp, #-1060]	; 0xfffffbdc
   13ddc:	str	r1, [sp, #52]	; 0x34
   13de0:	str	r1, [sp, #1188]	; 0x4a4
   13de4:	add	r1, sp, #1184	; 0x4a0
   13de8:	sub	r2, lr, #40	; 0x28
   13dec:	add	r1, r1, #8
   13df0:	add	r2, r2, #8
   13df4:	str	r1, [sp, #16]
   13df8:	str	r1, [sp, #1184]	; 0x4a0
   13dfc:	add	r1, sp, #48	; 0x30
   13e00:	str	r2, [sp, #12]
   13e04:	str	r2, [fp, #-1064]	; 0xfffffbd8
   13e08:	add	r5, r1, #8
   13e0c:	mov	r0, r5
   13e10:	str	r5, [sp, #48]	; 0x30
   13e14:	str	r5, [sp, #8]
   13e18:	bne	14404 <__mempcpy_chk@plt+0x2d40>
   13e1c:	mov	r1, r8
   13e20:	mov	r2, #0
   13e24:	mov	r3, #1024	; 0x400
   13e28:	bl	116c4 <__mempcpy_chk@plt>
   13e2c:	mov	r6, r0
   13e30:	mov	r0, #47	; 0x2f
   13e34:	strb	r0, [r6], #1
   13e38:	ldrb	r0, [r8]
   13e3c:	cmp	r0, #0
   13e40:	beq	14430 <__mempcpy_chk@plt+0x2d6c>
   13e44:	and	r1, r4, #4
   13e48:	add	r9, sp, #48	; 0x30
   13e4c:	str	r7, [sp, #32]
   13e50:	str	r1, [sp, #40]	; 0x28
   13e54:	mov	r1, #0
   13e58:	str	r1, [sp, #24]
   13e5c:	mov	r1, #0
   13e60:	str	r1, [sp, #36]	; 0x24
   13e64:	mov	r1, #0
   13e68:	str	r1, [sp, #20]
   13e6c:	uxtb	r1, r0
   13e70:	cmp	r1, #47	; 0x2f
   13e74:	beq	13eb4 <__mempcpy_chk@plt+0x27f0>
   13e78:	b	13ec0 <__mempcpy_chk@plt+0x27fc>
   13e7c:	bl	11550 <__errno_location@plt>
   13e80:	mov	r1, #22
   13e84:	mov	r4, #0
   13e88:	str	r1, [r0]
   13e8c:	mov	r0, r4
   13e90:	sub	sp, fp, #28
   13e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e98:	mov	r8, sl
   13e9c:	ldrb	r0, [r8]
   13ea0:	cmp	r0, #0
   13ea4:	beq	14438 <__mempcpy_chk@plt+0x2d74>
   13ea8:	uxtb	r1, r0
   13eac:	cmp	r1, #47	; 0x2f
   13eb0:	bne	13ec0 <__mempcpy_chk@plt+0x27fc>
   13eb4:	ldrb	r0, [r8, #1]!
   13eb8:	cmp	r0, #47	; 0x2f
   13ebc:	beq	13eb4 <__mempcpy_chk@plt+0x27f0>
   13ec0:	mov	r1, r0
   13ec4:	mov	sl, r8
   13ec8:	b	13ed0 <__mempcpy_chk@plt+0x280c>
   13ecc:	ldrb	r1, [sl, #1]!
   13ed0:	uxtb	r1, r1
   13ed4:	cmp	r1, #0
   13ed8:	cmpne	r1, #47	; 0x2f
   13edc:	bne	13ecc <__mempcpy_chk@plt+0x2808>
   13ee0:	sub	r2, sl, r8
   13ee4:	cmp	r2, #1
   13ee8:	beq	13f00 <__mempcpy_chk@plt+0x283c>
   13eec:	cmp	r2, #2
   13ef0:	beq	13f20 <__mempcpy_chk@plt+0x285c>
   13ef4:	cmp	r2, #0
   13ef8:	bne	13f78 <__mempcpy_chk@plt+0x28b4>
   13efc:	b	14438 <__mempcpy_chk@plt+0x2d74>
   13f00:	uxtb	r0, r0
   13f04:	cmp	r0, #46	; 0x2e
   13f08:	bne	13f78 <__mempcpy_chk@plt+0x28b4>
   13f0c:	mov	r8, sl
   13f10:	ldrb	r0, [r8]
   13f14:	cmp	r0, #0
   13f18:	bne	13ea8 <__mempcpy_chk@plt+0x27e4>
   13f1c:	b	14438 <__mempcpy_chk@plt+0x2d74>
   13f20:	uxtb	r0, r0
   13f24:	cmp	r0, #46	; 0x2e
   13f28:	bne	13f78 <__mempcpy_chk@plt+0x28b4>
   13f2c:	ldrb	r0, [r8, #1]
   13f30:	cmp	r0, #46	; 0x2e
   13f34:	bne	13f78 <__mempcpy_chk@plt+0x28b4>
   13f38:	add	r0, r5, #1
   13f3c:	cmp	r6, r0
   13f40:	bls	14228 <__mempcpy_chk@plt+0x2b64>
   13f44:	sub	r0, r6, #1
   13f48:	mov	r6, r0
   13f4c:	cmp	r0, r5
   13f50:	bls	143d0 <__mempcpy_chk@plt+0x2d0c>
   13f54:	mov	r0, r6
   13f58:	ldrb	r1, [r0, #-1]!
   13f5c:	cmp	r1, #47	; 0x2f
   13f60:	bne	13f48 <__mempcpy_chk@plt+0x2884>
   13f64:	mov	r8, sl
   13f68:	ldrb	r0, [r8]
   13f6c:	cmp	r0, #0
   13f70:	bne	13ea8 <__mempcpy_chk@plt+0x27e4>
   13f74:	b	14438 <__mempcpy_chk@plt+0x2d74>
   13f78:	ldrb	r0, [r6, #-1]
   13f7c:	add	r4, r2, #2
   13f80:	str	r2, [sp, #44]	; 0x2c
   13f84:	cmp	r0, #47	; 0x2f
   13f88:	movne	r0, #47	; 0x2f
   13f8c:	strbne	r0, [r6], #1
   13f90:	ldr	r0, [sp, #52]	; 0x34
   13f94:	add	r0, r5, r0
   13f98:	sub	r0, r0, r6
   13f9c:	cmp	r0, r4
   13fa0:	bcs	13fd8 <__mempcpy_chk@plt+0x2914>
   13fa4:	mov	r0, r9
   13fa8:	bl	18674 <__mempcpy_chk@plt+0x6fb0>
   13fac:	cmp	r0, #0
   13fb0:	beq	14538 <__mempcpy_chk@plt+0x2e74>
   13fb4:	sub	r0, r6, r5
   13fb8:	ldr	r5, [sp, #48]	; 0x30
   13fbc:	ldr	r1, [sp, #52]	; 0x34
   13fc0:	add	r6, r5, r0
   13fc4:	add	r0, r5, r1
   13fc8:	sub	r0, r0, r6
   13fcc:	cmp	r0, r4
   13fd0:	bcc	13fa4 <__mempcpy_chk@plt+0x28e0>
   13fd4:	ldr	r2, [sp, #44]	; 0x2c
   13fd8:	mov	r0, r6
   13fdc:	mov	r1, r8
   13fe0:	mvn	r3, #0
   13fe4:	bl	116c4 <__mempcpy_chk@plt>
   13fe8:	mov	r6, r0
   13fec:	mov	r0, #0
   13ff0:	strb	r0, [r6]
   13ff4:	ldr	r0, [sp, #40]	; 0x28
   13ff8:	cmp	r0, #0
   13ffc:	bne	14060 <__mempcpy_chk@plt+0x299c>
   14000:	ldr	r0, [sp, #1188]	; 0x4a4
   14004:	ldr	r7, [sp, #1184]	; 0x4a0
   14008:	sub	r9, r0, #1
   1400c:	mov	r0, r5
   14010:	mov	r1, r7
   14014:	mov	r2, r9
   14018:	bl	11454 <readlink@plt>
   1401c:	cmp	r0, r9
   14020:	blt	14038 <__mempcpy_chk@plt+0x2974>
   14024:	add	r0, sp, #1184	; 0x4a0
   14028:	bl	18604 <__mempcpy_chk@plt+0x6f40>
   1402c:	cmp	r0, #0
   14030:	bne	14000 <__mempcpy_chk@plt+0x293c>
   14034:	b	14538 <__mempcpy_chk@plt+0x2e74>
   14038:	mov	r4, r0
   1403c:	cmp	r0, #0
   14040:	add	r9, sp, #48	; 0x30
   14044:	bmi	14060 <__mempcpy_chk@plt+0x299c>
   14048:	ldr	r0, [sp, #24]
   1404c:	cmp	r0, #19
   14050:	bgt	140fc <__mempcpy_chk@plt+0x2a38>
   14054:	add	r0, r0, #1
   14058:	str	r0, [sp, #24]
   1405c:	b	142ac <__mempcpy_chk@plt+0x2be8>
   14060:	ldr	r7, [sp, #32]
   14064:	cmp	r7, #2
   14068:	beq	13e98 <__mempcpy_chk@plt+0x27d4>
   1406c:	ldrb	r0, [sl]
   14070:	cmp	r0, #47	; 0x2f
   14074:	bne	141dc <__mempcpy_chk@plt+0x2b18>
   14078:	mov	r2, sl
   1407c:	mov	r1, r2
   14080:	ldrb	r3, [r2, #1]!
   14084:	cmp	r3, #47	; 0x2f
   14088:	beq	1407c <__mempcpy_chk@plt+0x29b8>
   1408c:	cmp	r3, #46	; 0x2e
   14090:	bne	141d4 <__mempcpy_chk@plt+0x2b10>
   14094:	add	r2, r1, #2
   14098:	ldrb	r3, [r2]
   1409c:	cmp	r3, #47	; 0x2f
   140a0:	beq	1407c <__mempcpy_chk@plt+0x29b8>
   140a4:	cmp	r3, #0
   140a8:	beq	140c4 <__mempcpy_chk@plt+0x2a00>
   140ac:	cmp	r3, #46	; 0x2e
   140b0:	bne	141dc <__mempcpy_chk@plt+0x2b18>
   140b4:	ldrb	r1, [r1, #3]
   140b8:	cmp	r1, #47	; 0x2f
   140bc:	cmpne	r1, #0
   140c0:	bne	141dc <__mempcpy_chk@plt+0x2b18>
   140c4:	mov	r0, #47	; 0x2f
   140c8:	mov	r1, r5
   140cc:	mov	r2, #0
   140d0:	mov	r3, #512	; 0x200
   140d4:	strh	r0, [r6]
   140d8:	mvn	r0, #99	; 0x63
   140dc:	bl	113c4 <faccessat@plt>
   140e0:	cmp	r0, #0
   140e4:	bne	14258 <__mempcpy_chk@plt+0x2b94>
   140e8:	mov	r8, sl
   140ec:	ldrb	r0, [r8]
   140f0:	cmp	r0, #0
   140f4:	bne	13ea8 <__mempcpy_chk@plt+0x27e4>
   140f8:	b	14438 <__mempcpy_chk@plt+0x2d74>
   140fc:	ldrb	r0, [r8]
   14100:	add	lr, sp, #1024	; 0x400
   14104:	add	r2, lr, #56	; 0x38
   14108:	cmp	r0, #0
   1410c:	beq	142ac <__mempcpy_chk@plt+0x2be8>
   14110:	ldr	r9, [sp, #44]	; 0x2c
   14114:	mov	r0, #0
   14118:	mov	r1, r5
   1411c:	strb	r0, [r6, -r9]
   14120:	ldrb	r0, [r5]
   14124:	cmp	r0, #0
   14128:	movw	r0, #46666	; 0xb64a
   1412c:	movt	r0, #1
   14130:	moveq	r1, r0
   14134:	mov	r0, #3
   14138:	bl	11670 <__xstat64@plt>
   1413c:	cmp	r0, #0
   14140:	bne	14548 <__mempcpy_chk@plt+0x2e84>
   14144:	rsb	r0, r9, #0
   14148:	ldr	r9, [sp, #20]
   1414c:	ldrb	r1, [r8]
   14150:	cmp	r9, #0
   14154:	strb	r1, [r6, r0]
   14158:	bne	14190 <__mempcpy_chk@plt+0x2acc>
   1415c:	movw	r0, #24936	; 0x6168
   14160:	movw	r2, #24776	; 0x60c8
   14164:	movw	r3, #24832	; 0x6100
   14168:	mov	r1, #0
   1416c:	movt	r0, #1
   14170:	movt	r2, #1
   14174:	movt	r3, #1
   14178:	str	r0, [sp]
   1417c:	mov	r0, #7
   14180:	bl	150e4 <__mempcpy_chk@plt+0x3a20>
   14184:	mov	r9, r0
   14188:	cmp	r0, #0
   1418c:	beq	14538 <__mempcpy_chk@plt+0x2e74>
   14190:	add	lr, sp, #1024	; 0x400
   14194:	mov	r0, r9
   14198:	mov	r1, r8
   1419c:	add	r2, lr, #56	; 0x38
   141a0:	bl	14994 <__mempcpy_chk@plt+0x32d0>
   141a4:	cmp	r0, #0
   141a8:	str	r9, [sp, #20]
   141ac:	beq	14298 <__mempcpy_chk@plt+0x2bd4>
   141b0:	ldr	r7, [sp, #32]
   141b4:	cmp	r7, #2
   141b8:	bne	1453c <__mempcpy_chk@plt+0x2e78>
   141bc:	mov	r8, sl
   141c0:	add	r9, sp, #48	; 0x30
   141c4:	ldrb	r0, [r8]
   141c8:	cmp	r0, #0
   141cc:	bne	13ea8 <__mempcpy_chk@plt+0x27e4>
   141d0:	b	14438 <__mempcpy_chk@plt+0x2d74>
   141d4:	cmp	r3, #0
   141d8:	beq	140c4 <__mempcpy_chk@plt+0x2a00>
   141dc:	ldr	r1, [sp, #40]	; 0x28
   141e0:	cmp	r1, #0
   141e4:	beq	14204 <__mempcpy_chk@plt+0x2b40>
   141e8:	cmp	r0, #0
   141ec:	beq	1423c <__mempcpy_chk@plt+0x2b78>
   141f0:	mov	r8, sl
   141f4:	ldrb	r0, [r8]
   141f8:	cmp	r0, #0
   141fc:	bne	13ea8 <__mempcpy_chk@plt+0x27e4>
   14200:	b	14438 <__mempcpy_chk@plt+0x2d74>
   14204:	bl	11550 <__errno_location@plt>
   14208:	ldr	r0, [r0]
   1420c:	cmp	r0, #22
   14210:	bne	14258 <__mempcpy_chk@plt+0x2b94>
   14214:	mov	r8, sl
   14218:	ldrb	r0, [r8]
   1421c:	cmp	r0, #0
   14220:	bne	13ea8 <__mempcpy_chk@plt+0x27e4>
   14224:	b	14438 <__mempcpy_chk@plt+0x2d74>
   14228:	mov	r8, sl
   1422c:	ldrb	r0, [r8]
   14230:	cmp	r0, #0
   14234:	bne	13ea8 <__mempcpy_chk@plt+0x27e4>
   14238:	b	14438 <__mempcpy_chk@plt+0x2d74>
   1423c:	mvn	r0, #99	; 0x63
   14240:	mov	r1, r5
   14244:	mov	r2, #0
   14248:	mov	r3, #512	; 0x200
   1424c:	bl	113c4 <faccessat@plt>
   14250:	cmp	r0, #0
   14254:	beq	143e4 <__mempcpy_chk@plt+0x2d20>
   14258:	mov	r4, #1
   1425c:	cmp	r7, #1
   14260:	bne	14458 <__mempcpy_chk@plt+0x2d94>
   14264:	bl	11550 <__errno_location@plt>
   14268:	ldr	r0, [r0]
   1426c:	cmp	r0, #2
   14270:	bne	14458 <__mempcpy_chk@plt+0x2d94>
   14274:	movw	r1, #48098	; 0xbbe2
   14278:	mov	r0, sl
   1427c:	movt	r1, #1
   14280:	bl	116b8 <strspn@plt>
   14284:	ldrb	r0, [sl, r0]
   14288:	mov	r8, sl
   1428c:	cmp	r0, #0
   14290:	beq	13e9c <__mempcpy_chk@plt+0x27d8>
   14294:	b	14458 <__mempcpy_chk@plt+0x2d94>
   14298:	add	lr, sp, #1024	; 0x400
   1429c:	mov	r0, r9
   142a0:	mov	r1, r8
   142a4:	add	r2, lr, #56	; 0x38
   142a8:	bl	14918 <__mempcpy_chk@plt+0x3254>
   142ac:	mov	r0, #0
   142b0:	strb	r0, [r7, r4]
   142b4:	ldr	r0, [sp, #36]	; 0x24
   142b8:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   142bc:	tst	r0, #1
   142c0:	ldr	r0, [sp, #28]
   142c4:	subne	r0, sl, r8
   142c8:	str	r0, [sp, #28]
   142cc:	mov	r0, sl
   142d0:	bl	11538 <strlen@plt>
   142d4:	mvn	r1, r4
   142d8:	cmp	r0, r1
   142dc:	bhi	14538 <__mempcpy_chk@plt+0x2e74>
   142e0:	str	r0, [sp, #44]	; 0x2c
   142e4:	add	r9, r0, r4
   142e8:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   142ec:	cmp	r0, r9
   142f0:	bhi	14318 <__mempcpy_chk@plt+0x2c54>
   142f4:	sub	lr, fp, #1024	; 0x400
   142f8:	sub	r0, lr, #40	; 0x28
   142fc:	bl	18674 <__mempcpy_chk@plt+0x6fb0>
   14300:	cmp	r0, #0
   14304:	beq	14538 <__mempcpy_chk@plt+0x2e74>
   14308:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   1430c:	cmp	r0, r9
   14310:	bls	142f4 <__mempcpy_chk@plt+0x2c30>
   14314:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   14318:	ldr	r0, [sp, #36]	; 0x24
   1431c:	ldr	r1, [sp, #44]	; 0x2c
   14320:	tst	r0, #1
   14324:	ldr	r0, [sp, #28]
   14328:	add	r2, r1, #1
   1432c:	addne	sl, r8, r0
   14330:	add	r0, r8, r4
   14334:	mov	r1, sl
   14338:	bl	113ac <memmove@plt>
   1433c:	mov	r0, r8
   14340:	mov	r1, r7
   14344:	mov	r2, r4
   14348:	bl	113e8 <memcpy@plt>
   1434c:	ldrb	r0, [r7]
   14350:	cmp	r0, #47	; 0x2f
   14354:	bne	14394 <__mempcpy_chk@plt+0x2cd0>
   14358:	mov	r0, r5
   1435c:	mov	r1, r7
   14360:	mov	r2, #0
   14364:	mvn	r3, #0
   14368:	bl	116c4 <__mempcpy_chk@plt>
   1436c:	mov	r6, r0
   14370:	mov	r0, #47	; 0x2f
   14374:	strb	r0, [r6], #1
   14378:	mov	r0, #1
   1437c:	str	r0, [sp, #36]	; 0x24
   14380:	add	r9, sp, #48	; 0x30
   14384:	ldrb	r0, [r8]
   14388:	cmp	r0, #0
   1438c:	bne	13ea8 <__mempcpy_chk@plt+0x27e4>
   14390:	b	14438 <__mempcpy_chk@plt+0x2d74>
   14394:	add	r0, r5, #1
   14398:	mov	r1, #1
   1439c:	add	r9, sp, #48	; 0x30
   143a0:	cmp	r6, r0
   143a4:	str	r1, [sp, #36]	; 0x24
   143a8:	bls	13e9c <__mempcpy_chk@plt+0x27d8>
   143ac:	sub	r0, r6, #1
   143b0:	mov	r6, r0
   143b4:	cmp	r0, r5
   143b8:	bls	13e9c <__mempcpy_chk@plt+0x27d8>
   143bc:	mov	r0, r6
   143c0:	ldrb	r1, [r0, #-1]!
   143c4:	cmp	r1, #47	; 0x2f
   143c8:	bne	143b0 <__mempcpy_chk@plt+0x2cec>
   143cc:	b	13e9c <__mempcpy_chk@plt+0x27d8>
   143d0:	mov	r8, sl
   143d4:	ldrb	r0, [r8]
   143d8:	cmp	r0, #0
   143dc:	bne	13ea8 <__mempcpy_chk@plt+0x27e4>
   143e0:	b	14438 <__mempcpy_chk@plt+0x2d74>
   143e4:	mov	r8, sl
   143e8:	ldrb	r0, [r8]
   143ec:	cmp	r0, #0
   143f0:	bne	13ea8 <__mempcpy_chk@plt+0x27e4>
   143f4:	b	14438 <__mempcpy_chk@plt+0x2d74>
   143f8:	bl	11550 <__errno_location@plt>
   143fc:	mov	r1, #2
   14400:	b	13e84 <__mempcpy_chk@plt+0x27c0>
   14404:	mov	r1, #1024	; 0x400
   14408:	bl	11514 <getcwd@plt>
   1440c:	cmp	r0, #0
   14410:	beq	1446c <__mempcpy_chk@plt+0x2da8>
   14414:	mov	r0, r5
   14418:	mov	r1, #0
   1441c:	bl	11430 <rawmemchr@plt>
   14420:	mov	r6, r0
   14424:	ldrb	r0, [r8]
   14428:	cmp	r0, #0
   1442c:	bne	13e44 <__mempcpy_chk@plt+0x2780>
   14430:	mov	r0, #0
   14434:	str	r0, [sp, #20]
   14438:	add	r0, r5, #1
   1443c:	cmp	r6, r0
   14440:	bls	14454 <__mempcpy_chk@plt+0x2d90>
   14444:	mov	r0, r6
   14448:	ldrb	r1, [r0, #-1]!
   1444c:	cmp	r1, #47	; 0x2f
   14450:	moveq	r6, r0
   14454:	mov	r4, #0
   14458:	ldr	r0, [sp, #20]
   1445c:	cmp	r0, #0
   14460:	beq	144c4 <__mempcpy_chk@plt+0x2e00>
   14464:	bl	15400 <__mempcpy_chk@plt+0x3d3c>
   14468:	b	144c4 <__mempcpy_chk@plt+0x2e00>
   1446c:	bl	11550 <__errno_location@plt>
   14470:	ldr	r5, [sp, #8]
   14474:	mov	r6, r0
   14478:	add	r9, sp, #48	; 0x30
   1447c:	ldr	r0, [r6]
   14480:	cmp	r0, #34	; 0x22
   14484:	bne	144b4 <__mempcpy_chk@plt+0x2df0>
   14488:	mov	r0, r9
   1448c:	bl	18604 <__mempcpy_chk@plt+0x6f40>
   14490:	cmp	r0, #0
   14494:	beq	14538 <__mempcpy_chk@plt+0x2e74>
   14498:	ldr	r5, [sp, #48]	; 0x30
   1449c:	ldr	r1, [sp, #52]	; 0x34
   144a0:	mov	r0, r5
   144a4:	bl	11514 <getcwd@plt>
   144a8:	cmp	r0, #0
   144ac:	beq	1447c <__mempcpy_chk@plt+0x2db8>
   144b0:	b	14414 <__mempcpy_chk@plt+0x2d50>
   144b4:	cmp	r0, #12
   144b8:	beq	14538 <__mempcpy_chk@plt+0x2e74>
   144bc:	mov	r4, #1
   144c0:	mov	r6, r5
   144c4:	ldr	r1, [sp, #12]
   144c8:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   144cc:	ldr	r7, [sp, #16]
   144d0:	cmp	r0, r1
   144d4:	beq	144dc <__mempcpy_chk@plt+0x2e18>
   144d8:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   144dc:	ldr	r0, [sp, #1184]	; 0x4a0
   144e0:	cmp	r0, r7
   144e4:	beq	144ec <__mempcpy_chk@plt+0x2e28>
   144e8:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   144ec:	cmp	r4, #0
   144f0:	beq	14518 <__mempcpy_chk@plt+0x2e54>
   144f4:	ldr	r0, [sp, #48]	; 0x30
   144f8:	ldr	r1, [sp, #8]
   144fc:	mov	r4, #0
   14500:	cmp	r0, r1
   14504:	beq	13e8c <__mempcpy_chk@plt+0x27c8>
   14508:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   1450c:	mov	r0, r4
   14510:	sub	sp, fp, #28
   14514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14518:	mov	r0, #0
   1451c:	strb	r0, [r6], -r5
   14520:	add	r0, sp, #48	; 0x30
   14524:	add	r1, r6, #1
   14528:	bl	18598 <__mempcpy_chk@plt+0x6ed4>
   1452c:	mov	r4, r0
   14530:	cmp	r0, #0
   14534:	bne	13e8c <__mempcpy_chk@plt+0x27c8>
   14538:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   1453c:	bl	11550 <__errno_location@plt>
   14540:	mov	r1, #40	; 0x28
   14544:	str	r1, [r0]
   14548:	mov	r4, #1
   1454c:	ldr	r0, [sp, #20]
   14550:	cmp	r0, #0
   14554:	bne	14464 <__mempcpy_chk@plt+0x2da0>
   14558:	b	144c4 <__mempcpy_chk@plt+0x2e00>
   1455c:	movw	r1, #49620	; 0xc1d4
   14560:	movt	r1, #2
   14564:	str	r0, [r1]
   14568:	bx	lr
   1456c:	push	{r4, r5, r6, sl, fp, lr}
   14570:	add	fp, sp, #16
   14574:	sub	sp, sp, #8
   14578:	movw	r6, #49584	; 0xc1b0
   1457c:	movt	r6, #2
   14580:	ldr	r5, [r6]
   14584:	mov	r0, r5
   14588:	bl	14adc <__mempcpy_chk@plt+0x3418>
   1458c:	cmp	r0, #0
   14590:	beq	145d0 <__mempcpy_chk@plt+0x2f0c>
   14594:	mov	r0, #1
   14598:	mov	r2, #0
   1459c:	mov	r3, #0
   145a0:	mov	r4, #0
   145a4:	str	r0, [sp]
   145a8:	mov	r0, r5
   145ac:	bl	14b44 <__mempcpy_chk@plt+0x3480>
   145b0:	cmp	r0, #0
   145b4:	bne	145d4 <__mempcpy_chk@plt+0x2f10>
   145b8:	ldr	r0, [r6]
   145bc:	bl	148bc <__mempcpy_chk@plt+0x31f8>
   145c0:	cmp	r0, #0
   145c4:	mov	r4, r0
   145c8:	movwne	r4, #1
   145cc:	b	145d4 <__mempcpy_chk@plt+0x2f10>
   145d0:	mov	r4, #0
   145d4:	ldr	r0, [r6]
   145d8:	bl	19e8c <__mempcpy_chk@plt+0x87c8>
   145dc:	cmp	r4, #0
   145e0:	cmpeq	r0, #0
   145e4:	bne	145f4 <__mempcpy_chk@plt+0x2f30>
   145e8:	sub	sp, fp, #16
   145ec:	pop	{r4, r5, r6, sl, fp, lr}
   145f0:	b	14698 <__mempcpy_chk@plt+0x2fd4>
   145f4:	movw	r1, #46867	; 0xb713
   145f8:	mov	r0, #0
   145fc:	mov	r2, #5
   14600:	movt	r1, #1
   14604:	bl	1140c <dcgettext@plt>
   14608:	mov	r4, r0
   1460c:	movw	r0, #49620	; 0xc1d4
   14610:	movt	r0, #2
   14614:	ldr	r6, [r0]
   14618:	bl	11550 <__errno_location@plt>
   1461c:	ldr	r5, [r0]
   14620:	cmp	r6, #0
   14624:	bne	14640 <__mempcpy_chk@plt+0x2f7c>
   14628:	movw	r2, #48251	; 0xbc7b
   1462c:	mov	r0, #0
   14630:	mov	r1, r5
   14634:	mov	r3, r4
   14638:	movt	r2, #1
   1463c:	b	14660 <__mempcpy_chk@plt+0x2f9c>
   14640:	mov	r0, r6
   14644:	bl	17e5c <__mempcpy_chk@plt+0x6798>
   14648:	movw	r2, #46886	; 0xb726
   1464c:	mov	r3, r0
   14650:	str	r4, [sp]
   14654:	mov	r0, #0
   14658:	mov	r1, r5
   1465c:	movt	r2, #1
   14660:	bl	114a8 <error@plt>
   14664:	bl	14698 <__mempcpy_chk@plt+0x2fd4>
   14668:	movw	r0, #49484	; 0xc14c
   1466c:	movt	r0, #2
   14670:	ldr	r0, [r0]
   14674:	bl	113dc <_exit@plt>
   14678:	movw	r1, #49624	; 0xc1d8
   1467c:	movt	r1, #2
   14680:	str	r0, [r1, #4]
   14684:	bx	lr
   14688:	movw	r1, #49624	; 0xc1d8
   1468c:	movt	r1, #2
   14690:	strb	r0, [r1]
   14694:	bx	lr
   14698:	push	{r4, r5, r6, sl, fp, lr}
   1469c:	add	fp, sp, #16
   146a0:	sub	sp, sp, #8
   146a4:	movw	r0, #49588	; 0xc1b4
   146a8:	movt	r0, #2
   146ac:	ldr	r0, [r0]
   146b0:	bl	19e8c <__mempcpy_chk@plt+0x87c8>
   146b4:	cmp	r0, #0
   146b8:	beq	146e0 <__mempcpy_chk@plt+0x301c>
   146bc:	movw	r5, #49624	; 0xc1d8
   146c0:	movt	r5, #2
   146c4:	ldrb	r0, [r5]
   146c8:	cmp	r0, #0
   146cc:	beq	1470c <__mempcpy_chk@plt+0x3048>
   146d0:	bl	11550 <__errno_location@plt>
   146d4:	ldr	r0, [r0]
   146d8:	cmp	r0, #32
   146dc:	bne	1470c <__mempcpy_chk@plt+0x3048>
   146e0:	movw	r0, #49576	; 0xc1a8
   146e4:	movt	r0, #2
   146e8:	ldr	r0, [r0]
   146ec:	bl	19e8c <__mempcpy_chk@plt+0x87c8>
   146f0:	cmp	r0, #0
   146f4:	subeq	sp, fp, #16
   146f8:	popeq	{r4, r5, r6, sl, fp, pc}
   146fc:	movw	r0, #49484	; 0xc14c
   14700:	movt	r0, #2
   14704:	ldr	r0, [r0]
   14708:	bl	113dc <_exit@plt>
   1470c:	movw	r1, #46893	; 0xb72d
   14710:	mov	r0, #0
   14714:	mov	r2, #5
   14718:	movt	r1, #1
   1471c:	bl	1140c <dcgettext@plt>
   14720:	ldr	r6, [r5, #4]
   14724:	mov	r4, r0
   14728:	bl	11550 <__errno_location@plt>
   1472c:	ldr	r5, [r0]
   14730:	cmp	r6, #0
   14734:	bne	14750 <__mempcpy_chk@plt+0x308c>
   14738:	movw	r2, #48251	; 0xbc7b
   1473c:	mov	r0, #0
   14740:	mov	r1, r5
   14744:	mov	r3, r4
   14748:	movt	r2, #1
   1474c:	b	14770 <__mempcpy_chk@plt+0x30ac>
   14750:	mov	r0, r6
   14754:	bl	17e5c <__mempcpy_chk@plt+0x6798>
   14758:	movw	r2, #46886	; 0xb726
   1475c:	mov	r3, r0
   14760:	str	r4, [sp]
   14764:	mov	r0, #0
   14768:	mov	r1, r5
   1476c:	movt	r2, #1
   14770:	bl	114a8 <error@plt>
   14774:	movw	r0, #49484	; 0xc14c
   14778:	movt	r0, #2
   1477c:	ldr	r0, [r0]
   14780:	bl	113dc <_exit@plt>
   14784:	push	{fp, lr}
   14788:	mov	fp, sp
   1478c:	bl	147e4 <__mempcpy_chk@plt+0x3120>
   14790:	cmp	r0, #0
   14794:	popne	{fp, pc}
   14798:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   1479c:	push	{r4, r5, r6, sl, fp, lr}
   147a0:	add	fp, sp, #16
   147a4:	mov	r5, r0
   147a8:	mov	r4, r0
   147ac:	ldrb	r6, [r5], #-1
   147b0:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   147b4:	sub	r2, r0, r4
   147b8:	sub	r0, r6, #47	; 0x2f
   147bc:	clz	r0, r0
   147c0:	lsr	r1, r0, #5
   147c4:	mov	r0, r2
   147c8:	cmp	r2, r1
   147cc:	bls	147e0 <__mempcpy_chk@plt+0x311c>
   147d0:	ldrb	r3, [r5, r0]
   147d4:	sub	r2, r0, #1
   147d8:	cmp	r3, #47	; 0x2f
   147dc:	beq	147c4 <__mempcpy_chk@plt+0x3100>
   147e0:	pop	{r4, r5, r6, sl, fp, pc}
   147e4:	push	{r4, r5, r6, sl, fp, lr}
   147e8:	add	fp, sp, #16
   147ec:	mov	r6, r0
   147f0:	mov	r4, r0
   147f4:	ldrb	r5, [r6], #-1
   147f8:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   147fc:	sub	r1, r0, r4
   14800:	sub	r0, r5, #47	; 0x2f
   14804:	clz	r0, r0
   14808:	lsr	r0, r0, #5
   1480c:	mov	r5, r1
   14810:	cmp	r1, r0
   14814:	bls	14828 <__mempcpy_chk@plt+0x3164>
   14818:	ldrb	r2, [r6, r5]
   1481c:	sub	r1, r5, #1
   14820:	cmp	r2, #47	; 0x2f
   14824:	beq	1480c <__mempcpy_chk@plt+0x3148>
   14828:	cmp	r5, #0
   1482c:	mov	r0, r5
   14830:	addeq	r0, r0, #1
   14834:	add	r0, r0, #1
   14838:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   1483c:	mov	r6, r0
   14840:	cmp	r0, #0
   14844:	beq	14870 <__mempcpy_chk@plt+0x31ac>
   14848:	mov	r0, r6
   1484c:	mov	r1, r4
   14850:	mov	r2, r5
   14854:	bl	113e8 <memcpy@plt>
   14858:	cmp	r5, #0
   1485c:	moveq	r0, #46	; 0x2e
   14860:	moveq	r5, #1
   14864:	strbeq	r0, [r6]
   14868:	mov	r0, #0
   1486c:	strb	r0, [r6, r5]
   14870:	mov	r0, r6
   14874:	pop	{r4, r5, r6, sl, fp, pc}
   14878:	push	{r4, r5, fp, lr}
   1487c:	add	fp, sp, #8
   14880:	mov	r4, r0
   14884:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   14888:	mov	r5, r0
   1488c:	ldrb	r0, [r0]
   14890:	cmp	r0, #0
   14894:	moveq	r5, r4
   14898:	mov	r0, r5
   1489c:	bl	13d58 <__mempcpy_chk@plt+0x2694>
   148a0:	ldrb	r1, [r5, r0]
   148a4:	mov	r2, #0
   148a8:	strb	r2, [r5, r0]
   148ac:	cmp	r1, #0
   148b0:	movwne	r1, #1
   148b4:	mov	r0, r1
   148b8:	pop	{r4, r5, fp, pc}
   148bc:	push	{r4, sl, fp, lr}
   148c0:	add	fp, sp, #8
   148c4:	sub	sp, sp, #8
   148c8:	mov	r4, r0
   148cc:	cmp	r0, #0
   148d0:	beq	14908 <__mempcpy_chk@plt+0x3244>
   148d4:	mov	r0, r4
   148d8:	bl	114e4 <__freading@plt>
   148dc:	cmp	r0, #0
   148e0:	beq	14908 <__mempcpy_chk@plt+0x3244>
   148e4:	ldrb	r0, [r4, #1]
   148e8:	tst	r0, #1
   148ec:	beq	14908 <__mempcpy_chk@plt+0x3244>
   148f0:	mov	r0, #1
   148f4:	mov	r2, #0
   148f8:	mov	r3, #0
   148fc:	str	r0, [sp]
   14900:	mov	r0, r4
   14904:	bl	14b44 <__mempcpy_chk@plt+0x3480>
   14908:	mov	r0, r4
   1490c:	sub	sp, fp, #8
   14910:	pop	{r4, sl, fp, lr}
   14914:	b	11394 <fflush@plt>
   14918:	push	{r4, r5, r6, r7, fp, lr}
   1491c:	add	fp, sp, #16
   14920:	cmp	r0, #0
   14924:	beq	1498c <__mempcpy_chk@plt+0x32c8>
   14928:	mov	r5, r0
   1492c:	mov	r0, #24
   14930:	mov	r6, r2
   14934:	mov	r7, r1
   14938:	bl	19274 <__mempcpy_chk@plt+0x7bb0>
   1493c:	mov	r4, r0
   14940:	mov	r0, r7
   14944:	bl	19778 <__mempcpy_chk@plt+0x80b4>
   14948:	str	r0, [r4]
   1494c:	ldrd	r0, [r6, #96]	; 0x60
   14950:	str	r0, [r4, #8]
   14954:	str	r1, [r4, #12]
   14958:	ldrd	r0, [r6]
   1495c:	str	r1, [r4, #20]
   14960:	str	r0, [r4, #16]
   14964:	mov	r0, r5
   14968:	mov	r1, r4
   1496c:	bl	15d40 <__mempcpy_chk@plt+0x467c>
   14970:	cmp	r0, #0
   14974:	beq	14990 <__mempcpy_chk@plt+0x32cc>
   14978:	cmp	r0, r4
   1497c:	beq	1498c <__mempcpy_chk@plt+0x32c8>
   14980:	mov	r0, r4
   14984:	pop	{r4, r5, r6, r7, fp, lr}
   14988:	b	16168 <__mempcpy_chk@plt+0x4aa4>
   1498c:	pop	{r4, r5, r6, r7, fp, pc}
   14990:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   14994:	cmp	r0, #0
   14998:	moveq	r0, #0
   1499c:	bxeq	lr
   149a0:	push	{r4, r5, fp, lr}
   149a4:	add	fp, sp, #8
   149a8:	sub	sp, sp, #24
   149ac:	str	r1, [sp]
   149b0:	mov	ip, sp
   149b4:	mov	r1, sp
   149b8:	ldrd	r4, [r2, #96]	; 0x60
   149bc:	add	r3, ip, #8
   149c0:	add	ip, ip, #16
   149c4:	strd	r4, [r3]
   149c8:	ldrd	r2, [r2]
   149cc:	strd	r2, [ip]
   149d0:	bl	14e10 <__mempcpy_chk@plt+0x374c>
   149d4:	cmp	r0, #0
   149d8:	movwne	r0, #1
   149dc:	sub	sp, fp, #8
   149e0:	pop	{r4, r5, fp, pc}
   149e4:	push	{fp, lr}
   149e8:	mov	fp, sp
   149ec:	bl	149fc <__mempcpy_chk@plt+0x3338>
   149f0:	cmp	r0, #0
   149f4:	popne	{fp, pc}
   149f8:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   149fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a00:	add	fp, sp, #28
   14a04:	push	{r2}		; (str r2, [sp, #-4]!)
   14a08:	mov	sl, r1
   14a0c:	mov	r7, r0
   14a10:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   14a14:	sub	r4, r0, r7
   14a18:	bl	13d58 <__mempcpy_chk@plt+0x2694>
   14a1c:	mov	r6, r0
   14a20:	add	r5, r4, r0
   14a24:	mov	r0, sl
   14a28:	bl	11538 <strlen@plt>
   14a2c:	mov	r9, r0
   14a30:	cmp	r6, #0
   14a34:	beq	14a5c <__mempcpy_chk@plt+0x3398>
   14a38:	add	r0, r5, r7
   14a3c:	mov	r4, #0
   14a40:	ldrb	r0, [r0, #-1]
   14a44:	cmp	r0, #47	; 0x2f
   14a48:	beq	14a6c <__mempcpy_chk@plt+0x33a8>
   14a4c:	ldrb	r0, [sl]
   14a50:	subs	r4, r0, #47	; 0x2f
   14a54:	movwne	r4, #47	; 0x2f
   14a58:	b	14a6c <__mempcpy_chk@plt+0x33a8>
   14a5c:	ldrb	r0, [sl]
   14a60:	mov	r4, #0
   14a64:	cmp	r0, #47	; 0x2f
   14a68:	movweq	r4, #46	; 0x2e
   14a6c:	uxtb	r8, r4
   14a70:	add	r0, r9, r5
   14a74:	cmp	r8, #0
   14a78:	movwne	r8, #1
   14a7c:	add	r0, r0, r8
   14a80:	add	r0, r0, #1
   14a84:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   14a88:	mov	r6, r0
   14a8c:	cmp	r0, #0
   14a90:	beq	14ad0 <__mempcpy_chk@plt+0x340c>
   14a94:	mov	r0, r6
   14a98:	mov	r1, r7
   14a9c:	mov	r2, r5
   14aa0:	mvn	r3, #0
   14aa4:	bl	116c4 <__mempcpy_chk@plt>
   14aa8:	ldr	r1, [sp]
   14aac:	strb	r4, [r0], r8
   14ab0:	mov	r2, r9
   14ab4:	mvn	r3, #0
   14ab8:	cmp	r1, #0
   14abc:	strne	r0, [r1]
   14ac0:	mov	r1, sl
   14ac4:	bl	116c4 <__mempcpy_chk@plt>
   14ac8:	mov	r1, #0
   14acc:	strb	r1, [r0]
   14ad0:	mov	r0, r6
   14ad4:	sub	sp, fp, #28
   14ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14adc:	ldrd	r2, [r0, #16]
   14ae0:	mov	r1, #0
   14ae4:	cmp	r3, r2
   14ae8:	bhi	14b14 <__mempcpy_chk@plt+0x3450>
   14aec:	ldrb	r3, [r0, #1]
   14af0:	ldmib	r0, {r1, r2}
   14af4:	sub	r1, r2, r1
   14af8:	mov	r2, #0
   14afc:	tst	r3, #1
   14b00:	beq	14b10 <__mempcpy_chk@plt+0x344c>
   14b04:	ldr	r2, [r0, #36]	; 0x24
   14b08:	ldr	r0, [r0, #44]	; 0x2c
   14b0c:	sub	r2, r0, r2
   14b10:	add	r1, r1, r2
   14b14:	mov	r0, r1
   14b18:	bx	lr
   14b1c:	push	{r4, r5, r6, sl, fp, lr}
   14b20:	add	fp, sp, #16
   14b24:	mov	r4, r0
   14b28:	bl	11550 <__errno_location@plt>
   14b2c:	ldr	r6, [r0]
   14b30:	mov	r5, r0
   14b34:	mov	r0, r4
   14b38:	bl	113b8 <free@plt>
   14b3c:	str	r6, [r5]
   14b40:	pop	{r4, r5, r6, sl, fp, pc}
   14b44:	push	{r4, r5, r6, r7, fp, lr}
   14b48:	add	fp, sp, #16
   14b4c:	sub	sp, sp, #8
   14b50:	mov	r4, r0
   14b54:	ldr	r0, [r0, #4]
   14b58:	mov	r5, r3
   14b5c:	mov	r6, r2
   14b60:	ldr	r1, [r4, #8]
   14b64:	cmp	r1, r0
   14b68:	bne	14b84 <__mempcpy_chk@plt+0x34c0>
   14b6c:	ldrd	r0, [r4, #16]
   14b70:	cmp	r1, r0
   14b74:	bne	14b84 <__mempcpy_chk@plt+0x34c0>
   14b78:	ldr	r0, [r4, #36]	; 0x24
   14b7c:	cmp	r0, #0
   14b80:	beq	14b9c <__mempcpy_chk@plt+0x34d8>
   14b84:	mov	r0, r4
   14b88:	mov	r2, r6
   14b8c:	mov	r3, r5
   14b90:	sub	sp, fp, #16
   14b94:	pop	{r4, r5, r6, r7, fp, lr}
   14b98:	b	115d4 <fseeko64@plt>
   14b9c:	ldr	r7, [fp, #8]
   14ba0:	mov	r0, r4
   14ba4:	bl	115a4 <fileno@plt>
   14ba8:	mov	r2, r6
   14bac:	mov	r3, r5
   14bb0:	str	r7, [sp]
   14bb4:	bl	1146c <lseek64@plt>
   14bb8:	and	r2, r0, r1
   14bbc:	cmn	r2, #1
   14bc0:	beq	14be0 <__mempcpy_chk@plt+0x351c>
   14bc4:	strd	r0, [r4, #80]	; 0x50
   14bc8:	ldr	r0, [r4]
   14bcc:	bic	r0, r0, #16
   14bd0:	str	r0, [r4]
   14bd4:	mov	r0, #0
   14bd8:	sub	sp, fp, #16
   14bdc:	pop	{r4, r5, r6, r7, fp, pc}
   14be0:	mvn	r0, #0
   14be4:	sub	sp, fp, #16
   14be8:	pop	{r4, r5, r6, r7, fp, pc}
   14bec:	andeq	r0, r0, r0
   14bf0:	ldr	r0, [r0, #8]
   14bf4:	bx	lr
   14bf8:	ldr	r0, [r0, #12]
   14bfc:	bx	lr
   14c00:	ldr	r0, [r0, #16]
   14c04:	bx	lr
   14c08:	ldm	r0, {r2, ip}
   14c0c:	mov	r0, #0
   14c10:	cmp	r2, ip
   14c14:	bxcs	lr
   14c18:	mov	r0, #0
   14c1c:	ldr	r1, [r2]
   14c20:	cmp	r1, #0
   14c24:	bne	14c40 <__mempcpy_chk@plt+0x357c>
   14c28:	add	r2, r2, #8
   14c2c:	cmp	r2, ip
   14c30:	bcs	14c6c <__mempcpy_chk@plt+0x35a8>
   14c34:	ldr	r1, [r2]
   14c38:	cmp	r1, #0
   14c3c:	beq	14c28 <__mempcpy_chk@plt+0x3564>
   14c40:	mov	r3, #0
   14c44:	mov	r1, r2
   14c48:	ldr	r1, [r1, #4]
   14c4c:	add	r3, r3, #1
   14c50:	cmp	r1, #0
   14c54:	bne	14c48 <__mempcpy_chk@plt+0x3584>
   14c58:	cmp	r3, r0
   14c5c:	movhi	r0, r3
   14c60:	add	r2, r2, #8
   14c64:	cmp	r2, ip
   14c68:	bcc	14c34 <__mempcpy_chk@plt+0x3570>
   14c6c:	bx	lr
   14c70:	push	{fp, lr}
   14c74:	mov	fp, sp
   14c78:	ldm	r0, {r3, ip}
   14c7c:	mov	lr, #0
   14c80:	mov	r1, #0
   14c84:	cmp	r3, ip
   14c88:	bcs	14cdc <__mempcpy_chk@plt+0x3618>
   14c8c:	mov	r1, #0
   14c90:	mov	lr, #0
   14c94:	ldr	r2, [r3]
   14c98:	cmp	r2, #0
   14c9c:	bne	14cb8 <__mempcpy_chk@plt+0x35f4>
   14ca0:	add	r3, r3, #8
   14ca4:	cmp	r3, ip
   14ca8:	bcs	14cdc <__mempcpy_chk@plt+0x3618>
   14cac:	ldr	r2, [r3]
   14cb0:	cmp	r2, #0
   14cb4:	beq	14ca0 <__mempcpy_chk@plt+0x35dc>
   14cb8:	mov	r2, r3
   14cbc:	ldr	r2, [r2, #4]
   14cc0:	add	r1, r1, #1
   14cc4:	cmp	r2, #0
   14cc8:	bne	14cbc <__mempcpy_chk@plt+0x35f8>
   14ccc:	add	lr, lr, #1
   14cd0:	add	r3, r3, #8
   14cd4:	cmp	r3, ip
   14cd8:	bcc	14cac <__mempcpy_chk@plt+0x35e8>
   14cdc:	ldr	r2, [r0, #12]
   14ce0:	cmp	lr, r2
   14ce4:	bne	14cfc <__mempcpy_chk@plt+0x3638>
   14ce8:	ldr	r2, [r0, #16]
   14cec:	mov	r0, #1
   14cf0:	cmp	r1, r2
   14cf4:	movne	r0, #0
   14cf8:	pop	{fp, pc}
   14cfc:	mov	r0, #0
   14d00:	pop	{fp, pc}
   14d04:	nop	{0}
   14d08:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d0c:	add	fp, sp, #24
   14d10:	sub	sp, sp, #8
   14d14:	ldr	r6, [r0]
   14d18:	ldmib	r0, {r2, r7, r8}
   14d1c:	ldr	r3, [r0, #16]
   14d20:	mov	r4, r1
   14d24:	mov	r5, #0
   14d28:	cmp	r6, r2
   14d2c:	bcs	14d84 <__mempcpy_chk@plt+0x36c0>
   14d30:	mov	r5, #0
   14d34:	ldr	r0, [r6]
   14d38:	cmp	r0, #0
   14d3c:	bne	14d58 <__mempcpy_chk@plt+0x3694>
   14d40:	add	r6, r6, #8
   14d44:	cmp	r6, r2
   14d48:	bcs	14d84 <__mempcpy_chk@plt+0x36c0>
   14d4c:	ldr	r0, [r6]
   14d50:	cmp	r0, #0
   14d54:	beq	14d40 <__mempcpy_chk@plt+0x367c>
   14d58:	mov	r0, #0
   14d5c:	mov	r1, r6
   14d60:	ldr	r1, [r1, #4]
   14d64:	add	r0, r0, #1
   14d68:	cmp	r1, #0
   14d6c:	bne	14d60 <__mempcpy_chk@plt+0x369c>
   14d70:	cmp	r0, r5
   14d74:	movhi	r5, r0
   14d78:	add	r6, r6, #8
   14d7c:	cmp	r6, r2
   14d80:	bcc	14d4c <__mempcpy_chk@plt+0x3688>
   14d84:	movw	r2, #46905	; 0xb739
   14d88:	mov	r0, r4
   14d8c:	mov	r1, #1
   14d90:	movt	r2, #1
   14d94:	bl	115b0 <__fprintf_chk@plt>
   14d98:	movw	r2, #46929	; 0xb751
   14d9c:	mov	r0, r4
   14da0:	mov	r1, #1
   14da4:	mov	r3, r7
   14da8:	movt	r2, #1
   14dac:	bl	115b0 <__fprintf_chk@plt>
   14db0:	vmov	s0, r8
   14db4:	vldr	d16, [pc, #76]	; 14e08 <__mempcpy_chk@plt+0x3744>
   14db8:	movw	r2, #46953	; 0xb769
   14dbc:	mov	r0, r4
   14dc0:	mov	r1, #1
   14dc4:	mov	r3, r8
   14dc8:	movt	r2, #1
   14dcc:	vcvt.f64.u32	d17, s0
   14dd0:	vmov	s0, r7
   14dd4:	vcvt.f64.u32	d18, s0
   14dd8:	vmul.f64	d16, d17, d16
   14ddc:	vdiv.f64	d16, d16, d18
   14de0:	vstr	d16, [sp]
   14de4:	bl	115b0 <__fprintf_chk@plt>
   14de8:	movw	r2, #46986	; 0xb78a
   14dec:	mov	r0, r4
   14df0:	mov	r1, #1
   14df4:	mov	r3, r5
   14df8:	movt	r2, #1
   14dfc:	sub	sp, fp, #24
   14e00:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e04:	b	115b0 <__fprintf_chk@plt>
   14e08:	andeq	r0, r0, r0
   14e0c:	subsmi	r0, r9, r0
   14e10:	push	{r4, r5, r6, r7, fp, lr}
   14e14:	add	fp, sp, #16
   14e18:	mov	r4, r1
   14e1c:	ldr	r1, [r0, #8]
   14e20:	ldr	r2, [r0, #24]
   14e24:	mov	r5, r0
   14e28:	mov	r0, r4
   14e2c:	blx	r2
   14e30:	ldr	r1, [r5, #8]
   14e34:	cmp	r0, r1
   14e38:	bcs	14ea0 <__mempcpy_chk@plt+0x37dc>
   14e3c:	ldr	r7, [r5]
   14e40:	mov	r6, #0
   14e44:	ldr	r1, [r7, r0, lsl #3]!
   14e48:	cmp	r1, #0
   14e4c:	cmpne	r7, #0
   14e50:	bne	14e80 <__mempcpy_chk@plt+0x37bc>
   14e54:	mov	r0, r6
   14e58:	pop	{r4, r5, r6, r7, fp, pc}
   14e5c:	ldr	r2, [r5, #28]
   14e60:	mov	r0, r4
   14e64:	blx	r2
   14e68:	cmp	r0, #0
   14e6c:	bne	14e94 <__mempcpy_chk@plt+0x37d0>
   14e70:	ldr	r7, [r7, #4]
   14e74:	cmp	r7, #0
   14e78:	beq	14e54 <__mempcpy_chk@plt+0x3790>
   14e7c:	ldr	r1, [r7]
   14e80:	cmp	r1, r4
   14e84:	bne	14e5c <__mempcpy_chk@plt+0x3798>
   14e88:	mov	r6, r4
   14e8c:	mov	r0, r6
   14e90:	pop	{r4, r5, r6, r7, fp, pc}
   14e94:	ldr	r6, [r7]
   14e98:	mov	r0, r6
   14e9c:	pop	{r4, r5, r6, r7, fp, pc}
   14ea0:	bl	11688 <abort@plt>
   14ea4:	push	{fp, lr}
   14ea8:	mov	fp, sp
   14eac:	ldr	r1, [r0, #16]
   14eb0:	cmp	r1, #0
   14eb4:	beq	14ed4 <__mempcpy_chk@plt+0x3810>
   14eb8:	ldm	r0, {r1, r2}
   14ebc:	cmp	r1, r2
   14ec0:	bcs	14edc <__mempcpy_chk@plt+0x3818>
   14ec4:	ldr	r0, [r1], #8
   14ec8:	cmp	r0, #0
   14ecc:	beq	14ebc <__mempcpy_chk@plt+0x37f8>
   14ed0:	pop	{fp, pc}
   14ed4:	mov	r0, #0
   14ed8:	pop	{fp, pc}
   14edc:	bl	11688 <abort@plt>
   14ee0:	push	{r4, r5, fp, lr}
   14ee4:	add	fp, sp, #8
   14ee8:	mov	r5, r1
   14eec:	ldr	r1, [r0, #8]
   14ef0:	ldr	r2, [r0, #24]
   14ef4:	mov	r4, r0
   14ef8:	mov	r0, r5
   14efc:	blx	r2
   14f00:	ldr	r1, [r4, #8]
   14f04:	cmp	r0, r1
   14f08:	bcs	14f6c <__mempcpy_chk@plt+0x38a8>
   14f0c:	ldr	r1, [r4]
   14f10:	add	r2, r1, r0, lsl #3
   14f14:	ldr	r3, [r2]
   14f18:	ldr	r2, [r2, #4]
   14f1c:	cmp	r3, r5
   14f20:	beq	14f30 <__mempcpy_chk@plt+0x386c>
   14f24:	cmp	r2, #0
   14f28:	bne	14f14 <__mempcpy_chk@plt+0x3850>
   14f2c:	b	14f40 <__mempcpy_chk@plt+0x387c>
   14f30:	cmp	r2, #0
   14f34:	beq	14f40 <__mempcpy_chk@plt+0x387c>
   14f38:	ldr	r0, [r2]
   14f3c:	pop	{r4, r5, fp, pc}
   14f40:	ldr	r2, [r4, #4]
   14f44:	add	r0, r1, r0, lsl #3
   14f48:	add	r1, r0, #8
   14f4c:	cmp	r1, r2
   14f50:	bcs	14f64 <__mempcpy_chk@plt+0x38a0>
   14f54:	ldr	r0, [r1], #8
   14f58:	cmp	r0, #0
   14f5c:	beq	14f4c <__mempcpy_chk@plt+0x3888>
   14f60:	pop	{r4, r5, fp, pc}
   14f64:	mov	r0, #0
   14f68:	pop	{r4, r5, fp, pc}
   14f6c:	bl	11688 <abort@plt>
   14f70:	push	{r4, r5, fp, lr}
   14f74:	add	fp, sp, #8
   14f78:	ldm	r0, {r5, lr}
   14f7c:	mov	ip, r0
   14f80:	mov	r0, #0
   14f84:	cmp	r5, lr
   14f88:	popcs	{r4, r5, fp, pc}
   14f8c:	mov	r0, #0
   14f90:	ldr	r3, [r5]
   14f94:	cmp	r3, #0
   14f98:	cmpne	r5, #0
   14f9c:	beq	14fa8 <__mempcpy_chk@plt+0x38e4>
   14fa0:	b	14fc4 <__mempcpy_chk@plt+0x3900>
   14fa4:	ldr	lr, [ip, #4]
   14fa8:	add	r5, r5, #8
   14fac:	cmp	r5, lr
   14fb0:	bcs	14fec <__mempcpy_chk@plt+0x3928>
   14fb4:	ldr	r3, [r5]
   14fb8:	cmp	r3, #0
   14fbc:	cmpne	r5, #0
   14fc0:	beq	14fa8 <__mempcpy_chk@plt+0x38e4>
   14fc4:	mov	r3, r5
   14fc8:	cmp	r0, r2
   14fcc:	bcs	14fec <__mempcpy_chk@plt+0x3928>
   14fd0:	ldr	r4, [r3]
   14fd4:	str	r4, [r1, r0, lsl #2]
   14fd8:	add	r0, r0, #1
   14fdc:	ldr	r3, [r3, #4]
   14fe0:	cmp	r3, #0
   14fe4:	bne	14fc8 <__mempcpy_chk@plt+0x3904>
   14fe8:	b	14fa4 <__mempcpy_chk@plt+0x38e0>
   14fec:	pop	{r4, r5, fp, pc}
   14ff0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ff4:	add	fp, sp, #24
   14ff8:	mov	r5, r1
   14ffc:	ldr	r4, [r0]
   15000:	ldr	r1, [r0, #4]
   15004:	mov	r6, #0
   15008:	cmp	r4, r1
   1500c:	bcs	15088 <__mempcpy_chk@plt+0x39c4>
   15010:	mov	r9, r2
   15014:	mov	r8, r0
   15018:	mov	r6, #0
   1501c:	ldr	r0, [r4]
   15020:	cmp	r0, #0
   15024:	cmpne	r4, #0
   15028:	beq	15034 <__mempcpy_chk@plt+0x3970>
   1502c:	b	15050 <__mempcpy_chk@plt+0x398c>
   15030:	ldr	r1, [r8, #4]
   15034:	add	r4, r4, #8
   15038:	cmp	r4, r1
   1503c:	bcs	15088 <__mempcpy_chk@plt+0x39c4>
   15040:	ldr	r0, [r4]
   15044:	cmp	r0, #0
   15048:	cmpne	r4, #0
   1504c:	beq	15034 <__mempcpy_chk@plt+0x3970>
   15050:	mov	r1, r9
   15054:	blx	r5
   15058:	cmp	r0, #0
   1505c:	beq	15088 <__mempcpy_chk@plt+0x39c4>
   15060:	mov	r7, r4
   15064:	ldr	r7, [r7, #4]
   15068:	add	r6, r6, #1
   1506c:	cmp	r7, #0
   15070:	beq	15030 <__mempcpy_chk@plt+0x396c>
   15074:	ldr	r0, [r7]
   15078:	mov	r1, r9
   1507c:	blx	r5
   15080:	cmp	r0, #0
   15084:	bne	15064 <__mempcpy_chk@plt+0x39a0>
   15088:	mov	r0, r6
   1508c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15090:	ldrb	r2, [r0]
   15094:	cmp	r2, #0
   15098:	moveq	r0, #0
   1509c:	bxeq	lr
   150a0:	add	r3, r0, #1
   150a4:	mov	r0, #0
   150a8:	rsb	r0, r0, r0, lsl #5
   150ac:	uxtab	r0, r0, r2
   150b0:	udiv	r2, r0, r1
   150b4:	mls	r0, r2, r1, r0
   150b8:	ldrb	r2, [r3], #1
   150bc:	cmp	r2, #0
   150c0:	bne	150a8 <__mempcpy_chk@plt+0x39e4>
   150c4:	bx	lr
   150c8:	movw	r1, #47016	; 0xb7a8
   150cc:	movt	r1, #1
   150d0:	vld1.32	{d16-d17}, [r1]!
   150d4:	ldr	r1, [r1]
   150d8:	vst1.32	{d16-d17}, [r0]!
   150dc:	str	r1, [r0]
   150e0:	bx	lr
   150e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   150e8:	add	fp, sp, #24
   150ec:	movw	r9, #21272	; 0x5318
   150f0:	cmp	r3, #0
   150f4:	movw	r5, #21252	; 0x5304
   150f8:	mov	r6, r0
   150fc:	mov	r0, #40	; 0x28
   15100:	mov	r7, r1
   15104:	movt	r9, #1
   15108:	movne	r9, r3
   1510c:	cmp	r2, #0
   15110:	movt	r5, #1
   15114:	movne	r5, r2
   15118:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   1511c:	mov	r8, #0
   15120:	cmp	r0, #0
   15124:	beq	152ec <__mempcpy_chk@plt+0x3c28>
   15128:	mov	r4, r0
   1512c:	movw	r0, #47016	; 0xb7a8
   15130:	cmp	r7, #0
   15134:	movt	r0, #1
   15138:	moveq	r7, r0
   1513c:	cmp	r7, r0
   15140:	str	r7, [r4, #20]
   15144:	beq	151c0 <__mempcpy_chk@plt+0x3afc>
   15148:	vldr	s2, [pc, #420]	; 152f4 <__mempcpy_chk@plt+0x3c30>
   1514c:	vldr	s0, [r7, #8]
   15150:	vcmpe.f32	s0, s2
   15154:	vmrs	APSR_nzcv, fpscr
   15158:	ble	1526c <__mempcpy_chk@plt+0x3ba8>
   1515c:	vldr	s4, [pc, #404]	; 152f8 <__mempcpy_chk@plt+0x3c34>
   15160:	vcmpe.f32	s0, s4
   15164:	vmrs	APSR_nzcv, fpscr
   15168:	bpl	1526c <__mempcpy_chk@plt+0x3ba8>
   1516c:	vldr	s4, [pc, #392]	; 152fc <__mempcpy_chk@plt+0x3c38>
   15170:	vldr	s6, [r7, #12]
   15174:	vcmpe.f32	s6, s4
   15178:	vmrs	APSR_nzcv, fpscr
   1517c:	ble	1526c <__mempcpy_chk@plt+0x3ba8>
   15180:	vldr	s4, [r7]
   15184:	vcmpe.f32	s4, #0.0
   15188:	vmrs	APSR_nzcv, fpscr
   1518c:	blt	1526c <__mempcpy_chk@plt+0x3ba8>
   15190:	vadd.f32	s2, s4, s2
   15194:	vcmpe.f32	s2, s0
   15198:	vmrs	APSR_nzcv, fpscr
   1519c:	bpl	1526c <__mempcpy_chk@plt+0x3ba8>
   151a0:	vldr	s0, [r7, #4]
   151a4:	vmov.f32	s4, #112	; 0x3f800000  1.0
   151a8:	vcmpe.f32	s0, s4
   151ac:	vmrs	APSR_nzcv, fpscr
   151b0:	bhi	1526c <__mempcpy_chk@plt+0x3ba8>
   151b4:	vcmpe.f32	s2, s0
   151b8:	vmrs	APSR_nzcv, fpscr
   151bc:	bpl	1526c <__mempcpy_chk@plt+0x3ba8>
   151c0:	ldrb	r0, [r7, #16]
   151c4:	cmp	r0, #0
   151c8:	bne	151f4 <__mempcpy_chk@plt+0x3b30>
   151cc:	vmov	s2, r6
   151d0:	vldr	s0, [r7, #8]
   151d4:	vldr	s4, [pc, #292]	; 15300 <__mempcpy_chk@plt+0x3c3c>
   151d8:	vcvt.f32.u32	s2, s2
   151dc:	vdiv.f32	s2, s2, s0
   151e0:	vcvt.u32.f32	s0, s2
   151e4:	vcmpe.f32	s2, s4
   151e8:	vmrs	APSR_nzcv, fpscr
   151ec:	bge	15288 <__mempcpy_chk@plt+0x3bc4>
   151f0:	vmov	r6, s0
   151f4:	cmp	r6, #10
   151f8:	movls	r6, #10
   151fc:	orr	r0, r6, #1
   15200:	cmn	r0, #1
   15204:	beq	15288 <__mempcpy_chk@plt+0x3bc4>
   15208:	ldr	r6, [fp, #8]
   1520c:	mov	r1, #3
   15210:	cmp	r0, #10
   15214:	bcc	1524c <__mempcpy_chk@plt+0x3b88>
   15218:	mov	r1, #3
   1521c:	mov	r3, #9
   15220:	mov	r2, #12
   15224:	udiv	r7, r0, r1
   15228:	mls	r7, r7, r1, r0
   1522c:	cmp	r7, #0
   15230:	beq	1524c <__mempcpy_chk@plt+0x3b88>
   15234:	add	r3, r3, r2
   15238:	add	r2, r2, #8
   1523c:	add	r1, r1, #2
   15240:	add	r3, r3, #4
   15244:	cmp	r3, r0
   15248:	bcc	15224 <__mempcpy_chk@plt+0x3b60>
   1524c:	udiv	r2, r0, r1
   15250:	mls	r1, r2, r1, r0
   15254:	cmp	r1, #0
   15258:	bne	15280 <__mempcpy_chk@plt+0x3bbc>
   1525c:	add	r0, r0, #2
   15260:	cmn	r0, #1
   15264:	bne	1520c <__mempcpy_chk@plt+0x3b48>
   15268:	b	15288 <__mempcpy_chk@plt+0x3bc4>
   1526c:	str	r0, [r4, #20]
   15270:	mov	r0, r4
   15274:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   15278:	mov	r0, r8
   1527c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15280:	cmp	r0, #536870912	; 0x20000000
   15284:	bcc	152a0 <__mempcpy_chk@plt+0x3bdc>
   15288:	mov	r0, #0
   1528c:	str	r0, [r4, #8]
   15290:	mov	r0, r4
   15294:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   15298:	mov	r0, r8
   1529c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   152a0:	cmp	r0, #0
   152a4:	str	r0, [r4, #8]
   152a8:	beq	15290 <__mempcpy_chk@plt+0x3bcc>
   152ac:	mov	r1, #8
   152b0:	bl	19874 <__mempcpy_chk@plt+0x81b0>
   152b4:	cmp	r0, #0
   152b8:	str	r0, [r4]
   152bc:	beq	15290 <__mempcpy_chk@plt+0x3bcc>
   152c0:	mov	r1, #0
   152c4:	str	r5, [r4, #24]
   152c8:	str	r9, [r4, #28]
   152cc:	str	r6, [r4, #32]
   152d0:	mov	r8, r4
   152d4:	str	r1, [r4, #36]	; 0x24
   152d8:	str	r1, [r4, #12]
   152dc:	str	r1, [r4, #16]
   152e0:	ldr	r1, [r4, #8]
   152e4:	add	r0, r0, r1, lsl #3
   152e8:	str	r0, [r4, #4]
   152ec:	mov	r0, r8
   152f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   152f4:	stclcc	12, cr12, [ip, #820]	; 0x334
   152f8:	svccc	0x00666666
   152fc:	svccc	0x008ccccd
   15300:	svcmi	0x00800000
   15304:	ror	r2, r0, #3
   15308:	udiv	r2, r2, r1
   1530c:	mul	r1, r2, r1
   15310:	rsb	r0, r1, r0, ror #3
   15314:	bx	lr
   15318:	sub	r0, r0, r1
   1531c:	clz	r0, r0
   15320:	lsr	r0, r0, #5
   15324:	bx	lr
   15328:	push	{r4, r5, r6, r7, fp, lr}
   1532c:	add	fp, sp, #16
   15330:	mov	r4, r0
   15334:	ldr	r5, [r0]
   15338:	ldr	r0, [r0, #4]
   1533c:	cmp	r5, r0
   15340:	bcs	153f0 <__mempcpy_chk@plt+0x3d2c>
   15344:	mov	r6, #0
   15348:	ldr	r1, [r5]
   1534c:	cmp	r1, #0
   15350:	bne	1537c <__mempcpy_chk@plt+0x3cb8>
   15354:	b	15364 <__mempcpy_chk@plt+0x3ca0>
   15358:	str	r6, [r5]
   1535c:	str	r6, [r5, #4]
   15360:	ldr	r0, [r4, #4]
   15364:	add	r5, r5, #8
   15368:	cmp	r5, r0
   1536c:	bcs	153f0 <__mempcpy_chk@plt+0x3d2c>
   15370:	ldr	r1, [r5]
   15374:	cmp	r1, #0
   15378:	beq	15364 <__mempcpy_chk@plt+0x3ca0>
   1537c:	ldr	r1, [r4, #32]
   15380:	ldr	r7, [r5, #4]
   15384:	cmp	r1, #0
   15388:	mov	r0, r1
   1538c:	movwne	r0, #1
   15390:	cmp	r7, #0
   15394:	bne	153d8 <__mempcpy_chk@plt+0x3d14>
   15398:	cmp	r0, #0
   1539c:	beq	15358 <__mempcpy_chk@plt+0x3c94>
   153a0:	ldr	r0, [r5]
   153a4:	blx	r1
   153a8:	b	15358 <__mempcpy_chk@plt+0x3c94>
   153ac:	str	r6, [r7]
   153b0:	cmp	r1, #0
   153b4:	ldr	r2, [r7, #4]
   153b8:	ldr	r0, [r4, #36]	; 0x24
   153bc:	str	r0, [r7, #4]
   153c0:	mov	r0, r1
   153c4:	str	r7, [r4, #36]	; 0x24
   153c8:	movwne	r0, #1
   153cc:	cmp	r2, #0
   153d0:	mov	r7, r2
   153d4:	beq	15398 <__mempcpy_chk@plt+0x3cd4>
   153d8:	tst	r0, #1
   153dc:	beq	153ac <__mempcpy_chk@plt+0x3ce8>
   153e0:	ldr	r0, [r7]
   153e4:	blx	r1
   153e8:	ldr	r1, [r4, #32]
   153ec:	b	153ac <__mempcpy_chk@plt+0x3ce8>
   153f0:	mov	r0, #0
   153f4:	str	r0, [r4, #12]
   153f8:	str	r0, [r4, #16]
   153fc:	pop	{r4, r5, r6, r7, fp, pc}
   15400:	push	{r4, r5, r6, sl, fp, lr}
   15404:	add	fp, sp, #16
   15408:	mov	r4, r0
   1540c:	ldr	r0, [r0, #32]
   15410:	cmp	r0, #0
   15414:	beq	15488 <__mempcpy_chk@plt+0x3dc4>
   15418:	ldr	r0, [r4, #16]
   1541c:	cmp	r0, #0
   15420:	beq	15488 <__mempcpy_chk@plt+0x3dc4>
   15424:	ldr	r5, [r4]
   15428:	ldr	r1, [r4, #4]
   1542c:	cmp	r5, r1
   15430:	bcc	15448 <__mempcpy_chk@plt+0x3d84>
   15434:	b	15488 <__mempcpy_chk@plt+0x3dc4>
   15438:	ldr	r1, [r4, #4]
   1543c:	add	r5, r5, #8
   15440:	cmp	r5, r1
   15444:	bcs	15488 <__mempcpy_chk@plt+0x3dc4>
   15448:	ldr	r0, [r5]
   1544c:	cmp	r0, #0
   15450:	cmpne	r5, #0
   15454:	beq	1543c <__mempcpy_chk@plt+0x3d78>
   15458:	ldr	r1, [r4, #32]
   1545c:	blx	r1
   15460:	ldr	r6, [r5, #4]
   15464:	cmp	r6, #0
   15468:	beq	15438 <__mempcpy_chk@plt+0x3d74>
   1546c:	ldr	r1, [r4, #32]
   15470:	ldr	r0, [r6]
   15474:	blx	r1
   15478:	ldr	r6, [r6, #4]
   1547c:	cmp	r6, #0
   15480:	bne	1546c <__mempcpy_chk@plt+0x3da8>
   15484:	b	15438 <__mempcpy_chk@plt+0x3d74>
   15488:	ldr	r5, [r4]
   1548c:	ldr	r1, [r4, #4]
   15490:	cmp	r5, r1
   15494:	bcc	154a8 <__mempcpy_chk@plt+0x3de4>
   15498:	b	154d0 <__mempcpy_chk@plt+0x3e0c>
   1549c:	add	r5, r5, #8
   154a0:	cmp	r5, r1
   154a4:	bcs	154d0 <__mempcpy_chk@plt+0x3e0c>
   154a8:	ldr	r0, [r5, #4]
   154ac:	cmp	r0, #0
   154b0:	beq	1549c <__mempcpy_chk@plt+0x3dd8>
   154b4:	ldr	r6, [r0, #4]
   154b8:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   154bc:	cmp	r6, #0
   154c0:	mov	r0, r6
   154c4:	bne	154b4 <__mempcpy_chk@plt+0x3df0>
   154c8:	ldr	r1, [r4, #4]
   154cc:	b	1549c <__mempcpy_chk@plt+0x3dd8>
   154d0:	ldr	r0, [r4, #36]	; 0x24
   154d4:	cmp	r0, #0
   154d8:	beq	154f0 <__mempcpy_chk@plt+0x3e2c>
   154dc:	ldr	r5, [r0, #4]
   154e0:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   154e4:	cmp	r5, #0
   154e8:	mov	r0, r5
   154ec:	bne	154dc <__mempcpy_chk@plt+0x3e18>
   154f0:	ldr	r0, [r4]
   154f4:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   154f8:	mov	r0, r4
   154fc:	pop	{r4, r5, r6, sl, fp, lr}
   15500:	b	14b1c <__mempcpy_chk@plt+0x3458>
   15504:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15508:	add	fp, sp, #28
   1550c:	sub	sp, sp, #44	; 0x2c
   15510:	mov	r7, r0
   15514:	mov	r4, r0
   15518:	ldr	r0, [r7, #20]!
   1551c:	ldrb	r2, [r0, #16]
   15520:	cmp	r2, #0
   15524:	bne	15554 <__mempcpy_chk@plt+0x3e90>
   15528:	vmov	s2, r1
   1552c:	vldr	s0, [r0, #8]
   15530:	vldr	s4, [pc, #592]	; 15788 <__mempcpy_chk@plt+0x40c4>
   15534:	mov	r5, #0
   15538:	vcvt.f32.u32	s2, s2
   1553c:	vdiv.f32	s2, s2, s0
   15540:	vcvt.u32.f32	s0, s2
   15544:	vcmpe.f32	s2, s4
   15548:	vmrs	APSR_nzcv, fpscr
   1554c:	bge	15678 <__mempcpy_chk@plt+0x3fb4>
   15550:	vmov	r1, s0
   15554:	cmp	r1, #10
   15558:	mov	r5, #0
   1555c:	movls	r1, #10
   15560:	orr	r6, r1, #1
   15564:	cmn	r6, #1
   15568:	beq	15678 <__mempcpy_chk@plt+0x3fb4>
   1556c:	mov	r0, #3
   15570:	cmp	r6, #10
   15574:	bcc	155ac <__mempcpy_chk@plt+0x3ee8>
   15578:	mov	r0, #3
   1557c:	mov	r2, #9
   15580:	mov	r1, #12
   15584:	udiv	r3, r6, r0
   15588:	mls	r3, r3, r0, r6
   1558c:	cmp	r3, #0
   15590:	beq	155ac <__mempcpy_chk@plt+0x3ee8>
   15594:	add	r2, r2, r1
   15598:	add	r1, r1, #8
   1559c:	add	r0, r0, #2
   155a0:	add	r2, r2, #4
   155a4:	cmp	r2, r6
   155a8:	bcc	15584 <__mempcpy_chk@plt+0x3ec0>
   155ac:	udiv	r1, r6, r0
   155b0:	mls	r0, r1, r0, r6
   155b4:	cmp	r0, #0
   155b8:	bne	155cc <__mempcpy_chk@plt+0x3f08>
   155bc:	add	r6, r6, #2
   155c0:	cmn	r6, #1
   155c4:	bne	1556c <__mempcpy_chk@plt+0x3ea8>
   155c8:	b	15678 <__mempcpy_chk@plt+0x3fb4>
   155cc:	sub	r0, r6, #1
   155d0:	cmn	r0, #-536870910	; 0xe0000002
   155d4:	bhi	15678 <__mempcpy_chk@plt+0x3fb4>
   155d8:	ldr	r0, [r4, #8]
   155dc:	cmp	r6, r0
   155e0:	bne	155f4 <__mempcpy_chk@plt+0x3f30>
   155e4:	mov	r5, #1
   155e8:	mov	r0, r5
   155ec:	sub	sp, fp, #28
   155f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155f4:	mov	r0, r6
   155f8:	mov	r1, #8
   155fc:	bl	19874 <__mempcpy_chk@plt+0x81b0>
   15600:	cmp	r0, #0
   15604:	str	r0, [sp, #4]
   15608:	beq	15678 <__mempcpy_chk@plt+0x3fb4>
   1560c:	add	r0, r0, r6, lsl #3
   15610:	mov	r1, #0
   15614:	add	r5, sp, #4
   15618:	mov	sl, r4
   1561c:	mov	r2, #0
   15620:	str	r1, [sp, #20]
   15624:	str	r1, [sp, #16]
   15628:	str	r6, [sp, #12]
   1562c:	mov	r1, r4
   15630:	str	r0, [sp, #8]
   15634:	add	r0, r5, #20
   15638:	vld1.32	{d16-d17}, [r7]
   1563c:	vst1.32	{d16-d17}, [r0]
   15640:	ldr	r0, [sl, #36]!	; 0x24
   15644:	str	r0, [sp, #40]	; 0x28
   15648:	mov	r0, r5
   1564c:	bl	1578c <__mempcpy_chk@plt+0x40c8>
   15650:	cmp	r0, #0
   15654:	beq	15684 <__mempcpy_chk@plt+0x3fc0>
   15658:	ldr	r0, [r4]
   1565c:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   15660:	mov	r0, #36	; 0x24
   15664:	vld1.32	{d16-d17}, [r5], r0
   15668:	vst1.32	{d16-d17}, [r4], r0
   1566c:	ldr	r0, [r5]
   15670:	mov	r5, #1
   15674:	str	r0, [r4]
   15678:	mov	r0, r5
   1567c:	sub	sp, fp, #28
   15680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15684:	ldr	r0, [sp, #40]	; 0x28
   15688:	str	r0, [sl]
   1568c:	ldr	r0, [sp, #8]
   15690:	ldr	r8, [sp, #4]
   15694:	cmp	r8, r0
   15698:	str	r0, [sp]
   1569c:	bcs	15754 <__mempcpy_chk@plt+0x4090>
   156a0:	mov	r9, #0
   156a4:	ldr	r0, [r8]
   156a8:	cmp	r0, #0
   156ac:	bne	156d4 <__mempcpy_chk@plt+0x4010>
   156b0:	b	156b8 <__mempcpy_chk@plt+0x3ff4>
   156b4:	str	r9, [r8, #4]
   156b8:	ldr	r0, [sp]
   156bc:	add	r8, r8, #8
   156c0:	cmp	r8, r0
   156c4:	bcs	15754 <__mempcpy_chk@plt+0x4090>
   156c8:	ldr	r0, [r8]
   156cc:	cmp	r0, #0
   156d0:	beq	156b8 <__mempcpy_chk@plt+0x3ff4>
   156d4:	ldr	r6, [r8, #4]
   156d8:	cmp	r6, #0
   156dc:	beq	156b4 <__mempcpy_chk@plt+0x3ff0>
   156e0:	ldr	r1, [r4, #8]
   156e4:	b	15708 <__mempcpy_chk@plt+0x4044>
   156e8:	add	r0, r3, r0, lsl #3
   156ec:	add	r0, r0, #4
   156f0:	ldr	r3, [r0]
   156f4:	cmp	r2, #0
   156f8:	str	r3, [r6, #4]
   156fc:	str	r6, [r0]
   15700:	mov	r6, r2
   15704:	beq	156b4 <__mempcpy_chk@plt+0x3ff0>
   15708:	ldr	r5, [r6]
   1570c:	ldr	r2, [r4, #24]
   15710:	mov	r0, r5
   15714:	blx	r2
   15718:	ldr	r1, [r4, #8]
   1571c:	cmp	r0, r1
   15720:	bcs	15784 <__mempcpy_chk@plt+0x40c0>
   15724:	ldr	r3, [r4]
   15728:	ldr	r2, [r6, #4]
   1572c:	ldr	r7, [r3, r0, lsl #3]
   15730:	cmp	r7, #0
   15734:	bne	156e8 <__mempcpy_chk@plt+0x4024>
   15738:	str	r5, [r3, r0, lsl #3]
   1573c:	ldr	r0, [r4, #12]
   15740:	add	r0, r0, #1
   15744:	str	r0, [r4, #12]
   15748:	mov	r0, sl
   1574c:	str	r9, [r6]
   15750:	b	156f0 <__mempcpy_chk@plt+0x402c>
   15754:	add	r1, sp, #4
   15758:	mov	r0, r4
   1575c:	mov	r2, #0
   15760:	mov	r5, #0
   15764:	bl	1578c <__mempcpy_chk@plt+0x40c8>
   15768:	cmp	r0, #0
   1576c:	beq	15784 <__mempcpy_chk@plt+0x40c0>
   15770:	ldr	r0, [sp, #4]
   15774:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   15778:	mov	r0, r5
   1577c:	sub	sp, fp, #28
   15780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15784:	bl	11688 <abort@plt>
   15788:	svcmi	0x00800000
   1578c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15790:	add	fp, sp, #28
   15794:	sub	sp, sp, #4
   15798:	ldr	r8, [r1]
   1579c:	ldr	r3, [r1, #4]
   157a0:	mov	r6, r0
   157a4:	mov	r0, #1
   157a8:	str	r1, [sp]
   157ac:	cmp	r8, r3
   157b0:	bcs	159c4 <__mempcpy_chk@plt+0x4300>
   157b4:	add	sl, r6, #36	; 0x24
   157b8:	cmp	r2, #0
   157bc:	beq	15878 <__mempcpy_chk@plt+0x41b4>
   157c0:	mov	r9, #0
   157c4:	ldr	r1, [r8]
   157c8:	cmp	r1, #0
   157cc:	bne	157f8 <__mempcpy_chk@plt+0x4134>
   157d0:	b	157e0 <__mempcpy_chk@plt+0x411c>
   157d4:	ldr	r0, [sp]
   157d8:	ldr	r3, [r0, #4]
   157dc:	str	r9, [r8, #4]
   157e0:	add	r8, r8, #8
   157e4:	cmp	r8, r3
   157e8:	bcs	159c0 <__mempcpy_chk@plt+0x42fc>
   157ec:	ldr	r1, [r8]
   157f0:	cmp	r1, #0
   157f4:	beq	157e0 <__mempcpy_chk@plt+0x411c>
   157f8:	ldr	r7, [r8, #4]
   157fc:	cmp	r7, #0
   15800:	beq	157dc <__mempcpy_chk@plt+0x4118>
   15804:	ldr	r1, [r6, #8]
   15808:	b	1583c <__mempcpy_chk@plt+0x4178>
   1580c:	str	r4, [r3, r0, lsl #3]
   15810:	ldr	r0, [r6, #12]
   15814:	add	r0, r0, #1
   15818:	str	r0, [r6, #12]
   1581c:	mov	r0, sl
   15820:	str	r9, [r7]
   15824:	ldr	r3, [r0]
   15828:	cmp	r2, #0
   1582c:	str	r3, [r7, #4]
   15830:	str	r7, [r0]
   15834:	mov	r7, r2
   15838:	beq	157d4 <__mempcpy_chk@plt+0x4110>
   1583c:	ldr	r4, [r7]
   15840:	ldr	r2, [r6, #24]
   15844:	mov	r0, r4
   15848:	blx	r2
   1584c:	ldr	r1, [r6, #8]
   15850:	cmp	r0, r1
   15854:	bcs	159d8 <__mempcpy_chk@plt+0x4314>
   15858:	ldr	r3, [r6]
   1585c:	ldr	r2, [r7, #4]
   15860:	ldr	r5, [r3, r0, lsl #3]
   15864:	cmp	r5, #0
   15868:	beq	1580c <__mempcpy_chk@plt+0x4148>
   1586c:	add	r0, r3, r0, lsl #3
   15870:	add	r0, r0, #4
   15874:	b	15824 <__mempcpy_chk@plt+0x4160>
   15878:	mov	r5, #0
   1587c:	ldr	r7, [r8]
   15880:	cmp	r7, #0
   15884:	bne	158cc <__mempcpy_chk@plt+0x4208>
   15888:	b	158b4 <__mempcpy_chk@plt+0x41f0>
   1588c:	str	r7, [r9, r4, lsl #3]
   15890:	ldr	r0, [r6, #12]
   15894:	add	r0, r0, #1
   15898:	str	r0, [r6, #12]
   1589c:	ldr	r0, [sp]
   158a0:	str	r5, [r8]
   158a4:	ldr	r1, [r0, #12]
   158a8:	ldr	r3, [r0, #4]
   158ac:	sub	r1, r1, #1
   158b0:	str	r1, [r0, #12]
   158b4:	add	r8, r8, #8
   158b8:	cmp	r8, r3
   158bc:	bcs	159c0 <__mempcpy_chk@plt+0x42fc>
   158c0:	ldr	r7, [r8]
   158c4:	cmp	r7, #0
   158c8:	beq	158b4 <__mempcpy_chk@plt+0x41f0>
   158cc:	ldr	r9, [r8, #4]
   158d0:	ldr	r1, [r6, #8]
   158d4:	cmp	r9, #0
   158d8:	bne	15900 <__mempcpy_chk@plt+0x423c>
   158dc:	b	15950 <__mempcpy_chk@plt+0x428c>
   158e0:	add	r0, r3, r0, lsl #3
   158e4:	add	r0, r0, #4
   158e8:	ldr	r3, [r0]
   158ec:	cmp	r2, #0
   158f0:	str	r3, [r9, #4]
   158f4:	str	r9, [r0]
   158f8:	mov	r9, r2
   158fc:	beq	1594c <__mempcpy_chk@plt+0x4288>
   15900:	ldr	r4, [r9]
   15904:	ldr	r2, [r6, #24]
   15908:	mov	r0, r4
   1590c:	blx	r2
   15910:	ldr	r1, [r6, #8]
   15914:	cmp	r0, r1
   15918:	bcs	159d8 <__mempcpy_chk@plt+0x4314>
   1591c:	ldr	r3, [r6]
   15920:	ldr	r2, [r9, #4]
   15924:	ldr	r7, [r3, r0, lsl #3]
   15928:	cmp	r7, #0
   1592c:	bne	158e0 <__mempcpy_chk@plt+0x421c>
   15930:	str	r4, [r3, r0, lsl #3]
   15934:	ldr	r0, [r6, #12]
   15938:	add	r0, r0, #1
   1593c:	str	r0, [r6, #12]
   15940:	mov	r0, sl
   15944:	str	r5, [r9]
   15948:	b	158e8 <__mempcpy_chk@plt+0x4224>
   1594c:	ldr	r7, [r8]
   15950:	str	r5, [r8, #4]
   15954:	mov	r0, r7
   15958:	ldr	r2, [r6, #24]
   1595c:	blx	r2
   15960:	mov	r4, r0
   15964:	ldr	r0, [r6, #8]
   15968:	cmp	r4, r0
   1596c:	bcs	159d8 <__mempcpy_chk@plt+0x4314>
   15970:	ldr	r9, [r6]
   15974:	ldr	r0, [r9, r4, lsl #3]
   15978:	cmp	r0, #0
   1597c:	beq	1588c <__mempcpy_chk@plt+0x41c8>
   15980:	ldr	r0, [sl]
   15984:	cmp	r0, #0
   15988:	beq	15998 <__mempcpy_chk@plt+0x42d4>
   1598c:	ldr	r1, [r0, #4]
   15990:	str	r1, [sl]
   15994:	b	159a8 <__mempcpy_chk@plt+0x42e4>
   15998:	mov	r0, #8
   1599c:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   159a0:	cmp	r0, #0
   159a4:	beq	159cc <__mempcpy_chk@plt+0x4308>
   159a8:	add	r1, r9, r4, lsl #3
   159ac:	str	r7, [r0]
   159b0:	ldr	r2, [r1, #4]
   159b4:	str	r2, [r0, #4]
   159b8:	str	r0, [r1, #4]
   159bc:	b	1589c <__mempcpy_chk@plt+0x41d8>
   159c0:	mov	r0, #1
   159c4:	sub	sp, fp, #28
   159c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159cc:	mov	r0, #0
   159d0:	sub	sp, fp, #28
   159d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159d8:	bl	11688 <abort@plt>
   159dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159e0:	add	fp, sp, #28
   159e4:	sub	sp, sp, #4
   159e8:	cmp	r1, #0
   159ec:	beq	15d28 <__mempcpy_chk@plt+0x4664>
   159f0:	mov	r8, r2
   159f4:	mov	sl, r1
   159f8:	ldr	r1, [r0, #8]
   159fc:	ldr	r2, [r0, #24]
   15a00:	mov	r4, r0
   15a04:	mov	r0, sl
   15a08:	blx	r2
   15a0c:	mov	r7, r0
   15a10:	ldr	r0, [r4, #8]
   15a14:	cmp	r7, r0
   15a18:	bcs	15d28 <__mempcpy_chk@plt+0x4664>
   15a1c:	ldr	r5, [r4]
   15a20:	mov	r9, r5
   15a24:	ldr	r1, [r9, r7, lsl #3]!
   15a28:	cmp	r1, #0
   15a2c:	beq	15ac0 <__mempcpy_chk@plt+0x43fc>
   15a30:	cmp	r1, sl
   15a34:	beq	15a60 <__mempcpy_chk@plt+0x439c>
   15a38:	ldr	r2, [r4, #28]
   15a3c:	mov	r0, sl
   15a40:	blx	r2
   15a44:	cmp	r0, #0
   15a48:	mov	r6, r9
   15a4c:	beq	15a7c <__mempcpy_chk@plt+0x43b8>
   15a50:	ldr	r0, [r6]
   15a54:	cmp	r0, #0
   15a58:	bne	15a64 <__mempcpy_chk@plt+0x43a0>
   15a5c:	b	15ac0 <__mempcpy_chk@plt+0x43fc>
   15a60:	mov	r0, sl
   15a64:	cmp	r8, #0
   15a68:	mov	r7, #0
   15a6c:	strne	r0, [r8]
   15a70:	mov	r0, r7
   15a74:	sub	sp, fp, #28
   15a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a7c:	add	r6, r5, r7, lsl #3
   15a80:	ldr	r0, [r6, #4]!
   15a84:	cmp	r0, #0
   15a88:	beq	15ac0 <__mempcpy_chk@plt+0x43fc>
   15a8c:	ldr	r1, [r0]
   15a90:	cmp	r1, sl
   15a94:	beq	15ab4 <__mempcpy_chk@plt+0x43f0>
   15a98:	ldr	r2, [r4, #28]
   15a9c:	mov	r0, sl
   15aa0:	blx	r2
   15aa4:	ldr	r6, [r6]
   15aa8:	cmp	r0, #0
   15aac:	beq	15a80 <__mempcpy_chk@plt+0x43bc>
   15ab0:	b	15a50 <__mempcpy_chk@plt+0x438c>
   15ab4:	mov	r0, sl
   15ab8:	cmp	r0, #0
   15abc:	bne	15a64 <__mempcpy_chk@plt+0x43a0>
   15ac0:	vldr	s0, [r4, #8]
   15ac4:	vldr	s2, [r4, #12]
   15ac8:	ldr	r0, [r4, #20]
   15acc:	vcvt.f32.u32	s0, s0
   15ad0:	vcvt.f32.u32	s4, s2
   15ad4:	vldr	s2, [r0, #8]
   15ad8:	vmul.f32	s6, s2, s0
   15adc:	vcmpe.f32	s6, s4
   15ae0:	vmrs	APSR_nzcv, fpscr
   15ae4:	bpl	15c48 <__mempcpy_chk@plt+0x4584>
   15ae8:	movw	r1, #47016	; 0xb7a8
   15aec:	movt	r1, #1
   15af0:	cmp	r0, r1
   15af4:	beq	15b90 <__mempcpy_chk@plt+0x44cc>
   15af8:	vldr	s6, [pc, #556]	; 15d2c <__mempcpy_chk@plt+0x4668>
   15afc:	vcmpe.f32	s2, s6
   15b00:	vmrs	APSR_nzcv, fpscr
   15b04:	ble	15b6c <__mempcpy_chk@plt+0x44a8>
   15b08:	vldr	s8, [pc, #544]	; 15d30 <__mempcpy_chk@plt+0x466c>
   15b0c:	vcmpe.f32	s2, s8
   15b10:	vmrs	APSR_nzcv, fpscr
   15b14:	bpl	15b6c <__mempcpy_chk@plt+0x44a8>
   15b18:	vldr	s8, [pc, #532]	; 15d34 <__mempcpy_chk@plt+0x4670>
   15b1c:	vldr	s10, [r0, #12]
   15b20:	vcmpe.f32	s10, s8
   15b24:	vmrs	APSR_nzcv, fpscr
   15b28:	ble	15b6c <__mempcpy_chk@plt+0x44a8>
   15b2c:	vldr	s8, [r0]
   15b30:	vcmpe.f32	s8, #0.0
   15b34:	vmrs	APSR_nzcv, fpscr
   15b38:	blt	15b6c <__mempcpy_chk@plt+0x44a8>
   15b3c:	vadd.f32	s6, s8, s6
   15b40:	vcmpe.f32	s6, s2
   15b44:	vmrs	APSR_nzcv, fpscr
   15b48:	bpl	15b6c <__mempcpy_chk@plt+0x44a8>
   15b4c:	vldr	s8, [r0, #4]
   15b50:	vmov.f32	s10, #112	; 0x3f800000  1.0
   15b54:	vcmpe.f32	s8, s10
   15b58:	vmrs	APSR_nzcv, fpscr
   15b5c:	bhi	15b6c <__mempcpy_chk@plt+0x44a8>
   15b60:	vcmpe.f32	s6, s8
   15b64:	vmrs	APSR_nzcv, fpscr
   15b68:	bmi	15b7c <__mempcpy_chk@plt+0x44b8>
   15b6c:	vldr	s2, [pc, #452]	; 15d38 <__mempcpy_chk@plt+0x4674>
   15b70:	movw	r0, #47016	; 0xb7a8
   15b74:	movt	r0, #1
   15b78:	str	r0, [r4, #20]
   15b7c:	vmul.f32	s6, s2, s0
   15b80:	vcmpe.f32	s6, s4
   15b84:	vmrs	APSR_nzcv, fpscr
   15b88:	bmi	15ba4 <__mempcpy_chk@plt+0x44e0>
   15b8c:	b	15c48 <__mempcpy_chk@plt+0x4584>
   15b90:	mov	r0, r1
   15b94:	vmul.f32	s6, s2, s0
   15b98:	vcmpe.f32	s6, s4
   15b9c:	vmrs	APSR_nzcv, fpscr
   15ba0:	bpl	15c48 <__mempcpy_chk@plt+0x4584>
   15ba4:	vldr	s4, [r0, #12]
   15ba8:	ldrb	r0, [r0, #16]
   15bac:	mvn	r7, #0
   15bb0:	cmp	r0, #0
   15bb4:	vmul.f32	s0, s4, s0
   15bb8:	vldr	s4, [pc, #380]	; 15d3c <__mempcpy_chk@plt+0x4678>
   15bbc:	vmul.f32	s2, s2, s0
   15bc0:	vseleq.f32	s0, s2, s0
   15bc4:	vcmpe.f32	s0, s4
   15bc8:	vmrs	APSR_nzcv, fpscr
   15bcc:	bge	15cbc <__mempcpy_chk@plt+0x45f8>
   15bd0:	vcvt.u32.f32	s0, s0
   15bd4:	mov	r0, r4
   15bd8:	vmov	r1, s0
   15bdc:	bl	15504 <__mempcpy_chk@plt+0x3e40>
   15be0:	cmp	r0, #0
   15be4:	beq	15cbc <__mempcpy_chk@plt+0x45f8>
   15be8:	ldr	r1, [r4, #8]
   15bec:	ldr	r2, [r4, #24]
   15bf0:	mov	r0, sl
   15bf4:	blx	r2
   15bf8:	mov	r7, r0
   15bfc:	ldr	r0, [r4, #8]
   15c00:	cmp	r7, r0
   15c04:	bcs	15d28 <__mempcpy_chk@plt+0x4664>
   15c08:	ldr	r5, [r4]
   15c0c:	mov	r9, r5
   15c10:	ldr	r1, [r9, r7, lsl #3]!
   15c14:	cmp	r1, #0
   15c18:	beq	15c48 <__mempcpy_chk@plt+0x4584>
   15c1c:	cmp	r1, sl
   15c20:	mov	r0, sl
   15c24:	beq	15c40 <__mempcpy_chk@plt+0x457c>
   15c28:	ldr	r2, [r4, #28]
   15c2c:	mov	r0, sl
   15c30:	blx	r2
   15c34:	cmp	r0, #0
   15c38:	beq	15cd8 <__mempcpy_chk@plt+0x4614>
   15c3c:	ldr	r0, [r9]
   15c40:	cmp	r0, #0
   15c44:	bne	15d28 <__mempcpy_chk@plt+0x4664>
   15c48:	ldr	r0, [r9]
   15c4c:	cmp	r0, #0
   15c50:	beq	15c6c <__mempcpy_chk@plt+0x45a8>
   15c54:	ldr	r0, [r4, #36]	; 0x24
   15c58:	cmp	r0, #0
   15c5c:	beq	15c8c <__mempcpy_chk@plt+0x45c8>
   15c60:	ldr	r1, [r0, #4]
   15c64:	str	r1, [r4, #36]	; 0x24
   15c68:	b	15c9c <__mempcpy_chk@plt+0x45d8>
   15c6c:	str	sl, [r9]
   15c70:	ldr	r0, [r4, #12]
   15c74:	ldr	r1, [r4, #16]
   15c78:	add	r0, r0, #1
   15c7c:	add	r1, r1, #1
   15c80:	str	r0, [r4, #12]
   15c84:	str	r1, [r4, #16]
   15c88:	b	15cb8 <__mempcpy_chk@plt+0x45f4>
   15c8c:	mov	r0, #8
   15c90:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   15c94:	cmp	r0, #0
   15c98:	beq	15cc8 <__mempcpy_chk@plt+0x4604>
   15c9c:	str	sl, [r0]
   15ca0:	ldr	r1, [r9, #4]
   15ca4:	str	r1, [r0, #4]
   15ca8:	str	r0, [r9, #4]
   15cac:	ldr	r0, [r4, #16]
   15cb0:	add	r0, r0, #1
   15cb4:	str	r0, [r4, #16]
   15cb8:	mov	r7, #1
   15cbc:	mov	r0, r7
   15cc0:	sub	sp, fp, #28
   15cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cc8:	mvn	r7, #0
   15ccc:	mov	r0, r7
   15cd0:	sub	sp, fp, #28
   15cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cd8:	add	r6, r5, r7, lsl #3
   15cdc:	ldr	r0, [r6, #4]!
   15ce0:	cmp	r0, #0
   15ce4:	beq	15c48 <__mempcpy_chk@plt+0x4584>
   15ce8:	ldr	r1, [r0]
   15cec:	cmp	r1, sl
   15cf0:	beq	15d1c <__mempcpy_chk@plt+0x4658>
   15cf4:	ldr	r2, [r4, #28]
   15cf8:	mov	r0, sl
   15cfc:	blx	r2
   15d00:	ldr	r6, [r6]
   15d04:	cmp	r0, #0
   15d08:	beq	15cdc <__mempcpy_chk@plt+0x4618>
   15d0c:	ldr	r0, [r6]
   15d10:	cmp	r0, #0
   15d14:	beq	15c48 <__mempcpy_chk@plt+0x4584>
   15d18:	b	15d28 <__mempcpy_chk@plt+0x4664>
   15d1c:	mov	r0, sl
   15d20:	cmp	r0, #0
   15d24:	beq	15c48 <__mempcpy_chk@plt+0x4584>
   15d28:	bl	11688 <abort@plt>
   15d2c:	stclcc	12, cr12, [ip, #820]	; 0x334
   15d30:	svccc	0x00666666
   15d34:	svccc	0x008ccccd
   15d38:	svccc	0x004ccccd
   15d3c:	svcmi	0x00800000
   15d40:	push	{r4, sl, fp, lr}
   15d44:	add	fp, sp, #8
   15d48:	sub	sp, sp, #8
   15d4c:	add	r2, sp, #4
   15d50:	mov	r4, r1
   15d54:	bl	159dc <__mempcpy_chk@plt+0x4318>
   15d58:	cmn	r0, #1
   15d5c:	beq	15d78 <__mempcpy_chk@plt+0x46b4>
   15d60:	ldr	r1, [sp, #4]
   15d64:	cmp	r0, #0
   15d68:	moveq	r4, r1
   15d6c:	mov	r0, r4
   15d70:	sub	sp, fp, #8
   15d74:	pop	{r4, sl, fp, pc}
   15d78:	mov	r4, #0
   15d7c:	mov	r0, r4
   15d80:	sub	sp, fp, #8
   15d84:	pop	{r4, sl, fp, pc}
   15d88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15d8c:	add	fp, sp, #24
   15d90:	mov	r9, r1
   15d94:	ldr	r1, [r0, #8]
   15d98:	ldr	r2, [r0, #24]
   15d9c:	mov	r5, r0
   15da0:	mov	r0, r9
   15da4:	blx	r2
   15da8:	mov	r7, r0
   15dac:	ldr	r0, [r5, #8]
   15db0:	cmp	r7, r0
   15db4:	bcs	16028 <__mempcpy_chk@plt+0x4964>
   15db8:	ldr	r6, [r5]
   15dbc:	mov	r8, #0
   15dc0:	mov	r4, r6
   15dc4:	ldr	r1, [r4, r7, lsl #3]!
   15dc8:	cmp	r1, #0
   15dcc:	beq	15e80 <__mempcpy_chk@plt+0x47bc>
   15dd0:	cmp	r1, r9
   15dd4:	beq	15df0 <__mempcpy_chk@plt+0x472c>
   15dd8:	ldr	r2, [r5, #28]
   15ddc:	mov	r0, r9
   15de0:	blx	r2
   15de4:	cmp	r0, #0
   15de8:	beq	15e28 <__mempcpy_chk@plt+0x4764>
   15dec:	ldr	r9, [r4]
   15df0:	add	r0, r6, r7, lsl #3
   15df4:	ldr	r0, [r0, #4]
   15df8:	cmp	r0, #0
   15dfc:	beq	15e70 <__mempcpy_chk@plt+0x47ac>
   15e00:	ldm	r0, {r1, r2}
   15e04:	stm	r4, {r1, r2}
   15e08:	mov	r1, #0
   15e0c:	str	r1, [r0]
   15e10:	ldr	r1, [r5, #36]	; 0x24
   15e14:	str	r1, [r0, #4]
   15e18:	str	r0, [r5, #36]	; 0x24
   15e1c:	cmp	r9, #0
   15e20:	bne	15eb8 <__mempcpy_chk@plt+0x47f4>
   15e24:	b	15e80 <__mempcpy_chk@plt+0x47bc>
   15e28:	add	r7, r6, r7, lsl #3
   15e2c:	ldr	r0, [r7, #4]!
   15e30:	cmp	r0, #0
   15e34:	beq	15e80 <__mempcpy_chk@plt+0x47bc>
   15e38:	ldr	r1, [r0]
   15e3c:	cmp	r1, r9
   15e40:	beq	15e88 <__mempcpy_chk@plt+0x47c4>
   15e44:	ldr	r2, [r5, #28]
   15e48:	mov	r0, r9
   15e4c:	blx	r2
   15e50:	ldr	r1, [r7]
   15e54:	cmp	r0, #0
   15e58:	bne	15e90 <__mempcpy_chk@plt+0x47cc>
   15e5c:	ldr	r0, [r1, #4]!
   15e60:	mov	r7, r1
   15e64:	cmp	r0, #0
   15e68:	bne	15e38 <__mempcpy_chk@plt+0x4774>
   15e6c:	b	15e80 <__mempcpy_chk@plt+0x47bc>
   15e70:	mov	r0, #0
   15e74:	str	r0, [r4]
   15e78:	cmp	r9, #0
   15e7c:	bne	15eb8 <__mempcpy_chk@plt+0x47f4>
   15e80:	mov	r0, r8
   15e84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15e88:	mov	r1, r0
   15e8c:	b	15e94 <__mempcpy_chk@plt+0x47d0>
   15e90:	ldr	r9, [r1]
   15e94:	ldr	r0, [r1, #4]
   15e98:	str	r0, [r7]
   15e9c:	mov	r0, #0
   15ea0:	str	r0, [r1]
   15ea4:	ldr	r0, [r5, #36]	; 0x24
   15ea8:	str	r0, [r1, #4]
   15eac:	str	r1, [r5, #36]	; 0x24
   15eb0:	cmp	r9, #0
   15eb4:	beq	15e80 <__mempcpy_chk@plt+0x47bc>
   15eb8:	ldr	r0, [r5, #16]
   15ebc:	sub	r0, r0, #1
   15ec0:	str	r0, [r5, #16]
   15ec4:	ldr	r0, [r4]
   15ec8:	cmp	r0, #0
   15ecc:	bne	1601c <__mempcpy_chk@plt+0x4958>
   15ed0:	ldr	r0, [r5, #12]
   15ed4:	vldr	s0, [r5, #8]
   15ed8:	sub	r1, r0, #1
   15edc:	str	r1, [r5, #12]
   15ee0:	vmov	s2, r1
   15ee4:	ldr	r0, [r5, #20]
   15ee8:	vcvt.f32.u32	s0, s0
   15eec:	vcvt.f32.u32	s2, s2
   15ef0:	vldr	s4, [r0]
   15ef4:	vmul.f32	s6, s4, s0
   15ef8:	vcmpe.f32	s6, s2
   15efc:	vmrs	APSR_nzcv, fpscr
   15f00:	ble	1601c <__mempcpy_chk@plt+0x4958>
   15f04:	movw	r1, #47016	; 0xb7a8
   15f08:	movt	r1, #1
   15f0c:	cmp	r0, r1
   15f10:	beq	15fac <__mempcpy_chk@plt+0x48e8>
   15f14:	vldr	s8, [pc, #272]	; 1602c <__mempcpy_chk@plt+0x4968>
   15f18:	vldr	s6, [r0, #8]
   15f1c:	vcmpe.f32	s6, s8
   15f20:	vmrs	APSR_nzcv, fpscr
   15f24:	ble	15f88 <__mempcpy_chk@plt+0x48c4>
   15f28:	vldr	s10, [pc, #256]	; 16030 <__mempcpy_chk@plt+0x496c>
   15f2c:	vcmpe.f32	s6, s10
   15f30:	vmrs	APSR_nzcv, fpscr
   15f34:	bpl	15f88 <__mempcpy_chk@plt+0x48c4>
   15f38:	vcmpe.f32	s4, #0.0
   15f3c:	vmrs	APSR_nzcv, fpscr
   15f40:	blt	15f88 <__mempcpy_chk@plt+0x48c4>
   15f44:	vldr	s10, [r0, #12]
   15f48:	vldr	s12, [pc, #228]	; 16034 <__mempcpy_chk@plt+0x4970>
   15f4c:	vcmpe.f32	s10, s12
   15f50:	vmrs	APSR_nzcv, fpscr
   15f54:	ble	15f88 <__mempcpy_chk@plt+0x48c4>
   15f58:	vadd.f32	s8, s4, s8
   15f5c:	vcmpe.f32	s8, s6
   15f60:	vmrs	APSR_nzcv, fpscr
   15f64:	bpl	15f88 <__mempcpy_chk@plt+0x48c4>
   15f68:	vldr	s6, [r0, #4]
   15f6c:	vmov.f32	s10, #112	; 0x3f800000  1.0
   15f70:	vcmpe.f32	s6, s10
   15f74:	vmrs	APSR_nzcv, fpscr
   15f78:	bhi	15f88 <__mempcpy_chk@plt+0x48c4>
   15f7c:	vcmpe.f32	s8, s6
   15f80:	vmrs	APSR_nzcv, fpscr
   15f84:	bmi	15f98 <__mempcpy_chk@plt+0x48d4>
   15f88:	vldr	s4, [pc, #168]	; 16038 <__mempcpy_chk@plt+0x4974>
   15f8c:	movw	r0, #47016	; 0xb7a8
   15f90:	movt	r0, #1
   15f94:	str	r0, [r5, #20]
   15f98:	vmul.f32	s4, s4, s0
   15f9c:	vcmpe.f32	s4, s2
   15fa0:	vmrs	APSR_nzcv, fpscr
   15fa4:	bgt	15fc0 <__mempcpy_chk@plt+0x48fc>
   15fa8:	b	1601c <__mempcpy_chk@plt+0x4958>
   15fac:	mov	r0, r1
   15fb0:	vmul.f32	s4, s4, s0
   15fb4:	vcmpe.f32	s4, s2
   15fb8:	vmrs	APSR_nzcv, fpscr
   15fbc:	ble	1601c <__mempcpy_chk@plt+0x4958>
   15fc0:	vldr	s2, [r0, #4]
   15fc4:	ldrb	r1, [r0, #16]
   15fc8:	cmp	r1, #0
   15fcc:	vmul.f32	s0, s2, s0
   15fd0:	bne	15fdc <__mempcpy_chk@plt+0x4918>
   15fd4:	vldr	s2, [r0, #8]
   15fd8:	vmul.f32	s0, s0, s2
   15fdc:	vcvt.u32.f32	s0, s0
   15fe0:	mov	r0, r5
   15fe4:	vmov	r1, s0
   15fe8:	bl	15504 <__mempcpy_chk@plt+0x3e40>
   15fec:	cmp	r0, #0
   15ff0:	bne	1601c <__mempcpy_chk@plt+0x4958>
   15ff4:	ldr	r0, [r5, #36]	; 0x24
   15ff8:	cmp	r0, #0
   15ffc:	beq	16014 <__mempcpy_chk@plt+0x4950>
   16000:	ldr	r4, [r0, #4]
   16004:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   16008:	cmp	r4, #0
   1600c:	mov	r0, r4
   16010:	bne	16000 <__mempcpy_chk@plt+0x493c>
   16014:	mov	r0, #0
   16018:	str	r0, [r5, #36]	; 0x24
   1601c:	mov	r8, r9
   16020:	mov	r0, r8
   16024:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16028:	bl	11688 <abort@plt>
   1602c:	stclcc	12, cr12, [ip, #820]	; 0x334
   16030:	svccc	0x00666666
   16034:	svccc	0x008ccccd
   16038:	andeq	r0, r0, r0
   1603c:	b	15d88 <__mempcpy_chk@plt+0x46c4>
   16040:	push	{fp, lr}
   16044:	mov	fp, sp
   16048:	mov	r2, r1
   1604c:	ldrd	r0, [r0, #8]
   16050:	mov	r3, #0
   16054:	bl	1a3c0 <__mempcpy_chk@plt+0x8cfc>
   16058:	mov	r0, r2
   1605c:	pop	{fp, pc}
   16060:	push	{r4, r5, fp, lr}
   16064:	add	fp, sp, #8
   16068:	mov	lr, r1
   1606c:	mov	r3, r0
   16070:	ldr	r2, [r3, #8]!
   16074:	ldr	ip, [lr, #8]!
   16078:	ldr	r4, [r3, #4]
   1607c:	eor	ip, r2, ip
   16080:	ldr	r2, [lr, #4]
   16084:	eor	r2, r4, r2
   16088:	orrs	r2, ip, r2
   1608c:	bne	160c0 <__mempcpy_chk@plt+0x49fc>
   16090:	ldr	r4, [r3, #8]
   16094:	ldr	r2, [lr, #8]
   16098:	ldr	r5, [lr, #12]
   1609c:	ldr	r3, [r3, #12]
   160a0:	eor	r3, r3, r5
   160a4:	eor	r2, r4, r2
   160a8:	orrs	r2, r2, r3
   160ac:	bne	160c0 <__mempcpy_chk@plt+0x49fc>
   160b0:	ldr	r1, [r1]
   160b4:	ldr	r0, [r0]
   160b8:	pop	{r4, r5, fp, lr}
   160bc:	b	18410 <__mempcpy_chk@plt+0x6d4c>
   160c0:	mov	r0, #0
   160c4:	pop	{r4, r5, fp, pc}
   160c8:	push	{r4, r5, fp, lr}
   160cc:	add	fp, sp, #8
   160d0:	mov	r5, r0
   160d4:	ldr	r0, [r0]
   160d8:	mov	r4, r1
   160dc:	bl	19fac <__mempcpy_chk@plt+0x88e8>
   160e0:	ldrd	r2, [r5, #8]
   160e4:	eor	r0, r2, r0
   160e8:	mov	r1, r3
   160ec:	mov	r2, r4
   160f0:	mov	r3, #0
   160f4:	bl	1a3c0 <__mempcpy_chk@plt+0x8cfc>
   160f8:	mov	r0, r2
   160fc:	pop	{r4, r5, fp, pc}
   16100:	push	{r4, r5, fp, lr}
   16104:	add	fp, sp, #8
   16108:	mov	lr, r1
   1610c:	mov	r2, r0
   16110:	ldr	r3, [r2, #8]!
   16114:	ldr	ip, [lr, #8]!
   16118:	ldr	r4, [r2, #4]
   1611c:	eor	ip, r3, ip
   16120:	ldr	r3, [lr, #4]
   16124:	eor	r3, r4, r3
   16128:	orrs	r3, ip, r3
   1612c:	mov	ip, #0
   16130:	bne	16160 <__mempcpy_chk@plt+0x4a9c>
   16134:	ldrd	r4, [lr, #8]
   16138:	ldrd	r2, [r2, #8]
   1613c:	eor	r3, r3, r5
   16140:	eor	r2, r2, r4
   16144:	orrs	r2, r2, r3
   16148:	bne	16160 <__mempcpy_chk@plt+0x4a9c>
   1614c:	ldr	r1, [r1]
   16150:	ldr	r0, [r0]
   16154:	bl	11370 <strcmp@plt>
   16158:	clz	r0, r0
   1615c:	lsr	ip, r0, #5
   16160:	mov	r0, ip
   16164:	pop	{r4, r5, fp, pc}
   16168:	push	{r4, sl, fp, lr}
   1616c:	add	fp, sp, #8
   16170:	mov	r4, r0
   16174:	ldr	r0, [r0]
   16178:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   1617c:	mov	r0, r4
   16180:	pop	{r4, sl, fp, lr}
   16184:	b	14b1c <__mempcpy_chk@plt+0x3458>
   16188:	sub	sp, sp, #4
   1618c:	push	{fp, lr}
   16190:	mov	fp, sp
   16194:	sub	sp, sp, #4
   16198:	str	r3, [fp, #8]
   1619c:	tst	r2, #64	; 0x40
   161a0:	mov	r3, #0
   161a4:	ldrne	r3, [fp, #8]
   161a8:	bl	11544 <openat64@plt>
   161ac:	bl	18b6c <__mempcpy_chk@plt+0x74a8>
   161b0:	mov	sp, fp
   161b4:	pop	{fp, lr}
   161b8:	add	sp, sp, #4
   161bc:	bx	lr
   161c0:	push	{r4, r5, r6, sl, fp, lr}
   161c4:	add	fp, sp, #16
   161c8:	orr	r2, r2, #18688	; 0x4900
   161cc:	mov	r4, r3
   161d0:	orr	r2, r2, #524288	; 0x80000
   161d4:	bl	16188 <__mempcpy_chk@plt+0x4ac4>
   161d8:	mov	r5, r0
   161dc:	mov	r0, #0
   161e0:	cmp	r5, #0
   161e4:	bmi	1621c <__mempcpy_chk@plt+0x4b58>
   161e8:	mov	r0, r5
   161ec:	bl	11634 <fdopendir@plt>
   161f0:	cmp	r0, #0
   161f4:	beq	16200 <__mempcpy_chk@plt+0x4b3c>
   161f8:	str	r5, [r4]
   161fc:	pop	{r4, r5, r6, sl, fp, pc}
   16200:	bl	11550 <__errno_location@plt>
   16204:	ldr	r6, [r0]
   16208:	mov	r4, r0
   1620c:	mov	r0, r5
   16210:	bl	11694 <close@plt>
   16214:	mov	r0, #0
   16218:	str	r6, [r4]
   1621c:	pop	{r4, r5, r6, sl, fp, pc}
   16220:	push	{r4, r5, fp, lr}
   16224:	add	fp, sp, #8
   16228:	cmp	r0, #0
   1622c:	beq	162c0 <__mempcpy_chk@plt+0x4bfc>
   16230:	mov	r1, #47	; 0x2f
   16234:	mov	r4, r0
   16238:	bl	11610 <strrchr@plt>
   1623c:	cmp	r0, #0
   16240:	mov	r5, r4
   16244:	addne	r5, r0, #1
   16248:	sub	r0, r5, r4
   1624c:	cmp	r0, #7
   16250:	blt	162a4 <__mempcpy_chk@plt+0x4be0>
   16254:	movw	r1, #47092	; 0xb7f4
   16258:	sub	r0, r5, #7
   1625c:	mov	r2, #7
   16260:	movt	r1, #1
   16264:	bl	1167c <strncmp@plt>
   16268:	cmp	r0, #0
   1626c:	bne	162a4 <__mempcpy_chk@plt+0x4be0>
   16270:	movw	r1, #47100	; 0xb7fc
   16274:	mov	r0, r5
   16278:	mov	r2, #3
   1627c:	movt	r1, #1
   16280:	bl	1167c <strncmp@plt>
   16284:	cmp	r0, #0
   16288:	beq	16294 <__mempcpy_chk@plt+0x4bd0>
   1628c:	mov	r4, r5
   16290:	b	162a4 <__mempcpy_chk@plt+0x4be0>
   16294:	movw	r0, #49560	; 0xc198
   16298:	add	r4, r5, #3
   1629c:	movt	r0, #2
   162a0:	str	r4, [r0]
   162a4:	movw	r0, #49564	; 0xc19c
   162a8:	movt	r0, #2
   162ac:	str	r4, [r0]
   162b0:	movw	r0, #49632	; 0xc1e0
   162b4:	movt	r0, #2
   162b8:	str	r4, [r0]
   162bc:	pop	{r4, r5, fp, pc}
   162c0:	movw	r0, #49576	; 0xc1a8
   162c4:	mov	r1, #55	; 0x37
   162c8:	mov	r2, #1
   162cc:	movt	r0, #2
   162d0:	ldr	r3, [r0]
   162d4:	movw	r0, #47036	; 0xb7bc
   162d8:	movt	r0, #1
   162dc:	bl	11460 <fwrite@plt>
   162e0:	bl	11688 <abort@plt>
   162e4:	push	{r4, r5, r6, sl, fp, lr}
   162e8:	add	fp, sp, #16
   162ec:	mov	r4, r0
   162f0:	movw	r0, #49640	; 0xc1e8
   162f4:	movt	r0, #2
   162f8:	cmp	r4, #0
   162fc:	moveq	r4, r0
   16300:	bl	11550 <__errno_location@plt>
   16304:	ldr	r6, [r0]
   16308:	mov	r5, r0
   1630c:	mov	r0, r4
   16310:	mov	r1, #48	; 0x30
   16314:	bl	196d4 <__mempcpy_chk@plt+0x8010>
   16318:	str	r6, [r5]
   1631c:	pop	{r4, r5, r6, sl, fp, pc}
   16320:	movw	r1, #49640	; 0xc1e8
   16324:	cmp	r0, #0
   16328:	movt	r1, #2
   1632c:	movne	r1, r0
   16330:	ldr	r0, [r1]
   16334:	bx	lr
   16338:	movw	r2, #49640	; 0xc1e8
   1633c:	cmp	r0, #0
   16340:	movt	r2, #2
   16344:	movne	r2, r0
   16348:	str	r1, [r2]
   1634c:	bx	lr
   16350:	movw	r3, #49640	; 0xc1e8
   16354:	cmp	r0, #0
   16358:	and	r2, r2, #1
   1635c:	movt	r3, #2
   16360:	movne	r3, r0
   16364:	ubfx	r0, r1, #5, #3
   16368:	and	r1, r1, #31
   1636c:	add	ip, r3, r0, lsl #2
   16370:	mov	r0, #1
   16374:	ldr	r3, [ip, #8]
   16378:	and	r0, r0, r3, lsr r1
   1637c:	eor	r2, r0, r2
   16380:	eor	r1, r3, r2, lsl r1
   16384:	str	r1, [ip, #8]
   16388:	bx	lr
   1638c:	movw	r2, #49640	; 0xc1e8
   16390:	cmp	r0, #0
   16394:	movt	r2, #2
   16398:	movne	r2, r0
   1639c:	ldr	r0, [r2, #4]
   163a0:	str	r1, [r2, #4]
   163a4:	bx	lr
   163a8:	push	{fp, lr}
   163ac:	mov	fp, sp
   163b0:	movw	r3, #49640	; 0xc1e8
   163b4:	cmp	r0, #0
   163b8:	movt	r3, #2
   163bc:	movne	r3, r0
   163c0:	cmp	r1, #0
   163c4:	mov	r0, #10
   163c8:	cmpne	r2, #0
   163cc:	str	r0, [r3]
   163d0:	bne	163d8 <__mempcpy_chk@plt+0x4d14>
   163d4:	bl	11688 <abort@plt>
   163d8:	str	r1, [r3, #40]	; 0x28
   163dc:	str	r2, [r3, #44]	; 0x2c
   163e0:	pop	{fp, pc}
   163e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163e8:	add	fp, sp, #28
   163ec:	sub	sp, sp, #20
   163f0:	mov	r7, r0
   163f4:	ldr	r0, [fp, #8]
   163f8:	movw	r5, #49640	; 0xc1e8
   163fc:	mov	r8, r3
   16400:	mov	r9, r2
   16404:	mov	sl, r1
   16408:	movt	r5, #2
   1640c:	cmp	r0, #0
   16410:	movne	r5, r0
   16414:	bl	11550 <__errno_location@plt>
   16418:	ldr	r2, [r5, #40]	; 0x28
   1641c:	ldr	r3, [r5, #44]	; 0x2c
   16420:	mov	r4, r0
   16424:	ldm	r5, {r0, r1}
   16428:	add	r5, r5, #8
   1642c:	ldr	r6, [r4]
   16430:	stm	sp, {r0, r1, r5}
   16434:	mov	r0, r7
   16438:	mov	r1, sl
   1643c:	str	r2, [sp, #12]
   16440:	str	r3, [sp, #16]
   16444:	mov	r2, r9
   16448:	mov	r3, r8
   1644c:	bl	1645c <__mempcpy_chk@plt+0x4d98>
   16450:	str	r6, [r4]
   16454:	sub	sp, fp, #28
   16458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1645c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16460:	add	fp, sp, #28
   16464:	sub	sp, sp, #156	; 0x9c
   16468:	str	r0, [fp, #-84]	; 0xffffffac
   1646c:	add	r0, r2, #1
   16470:	mov	r6, r1
   16474:	mov	r7, r3
   16478:	str	r2, [fp, #-80]	; 0xffffffb0
   1647c:	str	r0, [sp, #80]	; 0x50
   16480:	ldr	r0, [fp, #12]
   16484:	and	r1, r0, #1
   16488:	str	r1, [sp, #36]	; 0x24
   1648c:	and	r1, r0, #4
   16490:	str	r1, [sp, #32]
   16494:	ubfx	r8, r0, #1, #1
   16498:	bl	11478 <__ctype_get_mb_cur_max@plt>
   1649c:	str	r0, [sp, #40]	; 0x28
   164a0:	ldr	r0, [fp, #24]
   164a4:	ldr	r4, [fp, #8]
   164a8:	mov	r1, #0
   164ac:	str	r1, [fp, #-52]	; 0xffffffcc
   164b0:	mov	r1, #0
   164b4:	str	r1, [sp, #60]	; 0x3c
   164b8:	mov	r1, #1
   164bc:	str	r1, [sp, #84]	; 0x54
   164c0:	str	r0, [sp, #76]	; 0x4c
   164c4:	ldr	r0, [fp, #20]
   164c8:	str	r0, [sp, #72]	; 0x48
   164cc:	mov	r0, #0
   164d0:	str	r0, [sp, #56]	; 0x38
   164d4:	mov	r0, #0
   164d8:	str	r0, [fp, #-88]	; 0xffffffa8
   164dc:	mov	r0, #0
   164e0:	str	r0, [fp, #-72]	; 0xffffffb8
   164e4:	mov	r0, #0
   164e8:	cmp	r4, #10
   164ec:	bhi	17808 <__mempcpy_chk@plt+0x6144>
   164f0:	add	r1, pc, #24
   164f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   164f8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   164fc:	mov	r5, r6
   16500:	mov	r9, #0
   16504:	mov	r2, #1
   16508:	mov	r3, #0
   1650c:	ldr	pc, [r1, r4, lsl #2]
   16510:	ldrdeq	r6, [r1], -r8
   16514:	andeq	r6, r1, r4, lsl r6
   16518:	andeq	r6, r1, r8, ror #11
   1651c:	ldrdeq	r6, [r1], -r0
   16520:	andeq	r6, r1, r8, lsl #12
   16524:	andeq	r6, r1, ip, ror #12
   16528:	strdeq	r6, [r1], -r8
   1652c:	andeq	r6, r1, r4, ror #17
   16530:	andeq	r6, r1, ip, lsr r5
   16534:	andeq	r6, r1, ip, lsr r5
   16538:	andeq	r6, r1, r4, ror r7
   1653c:	movw	r6, #47182	; 0xb84e
   16540:	mov	r0, #0
   16544:	mov	r2, #5
   16548:	movt	r6, #1
   1654c:	mov	r1, r6
   16550:	bl	1140c <dcgettext@plt>
   16554:	cmp	r0, r6
   16558:	str	r0, [sp, #72]	; 0x48
   1655c:	bne	1674c <__mempcpy_chk@plt+0x5088>
   16560:	bl	19ff0 <__mempcpy_chk@plt+0x892c>
   16564:	ldrb	r1, [r0]
   16568:	and	r1, r1, #223	; 0xdf
   1656c:	cmp	r1, #71	; 0x47
   16570:	beq	166cc <__mempcpy_chk@plt+0x5008>
   16574:	cmp	r1, #85	; 0x55
   16578:	bne	16730 <__mempcpy_chk@plt+0x506c>
   1657c:	ldrb	r1, [r0, #1]
   16580:	and	r1, r1, #223	; 0xdf
   16584:	cmp	r1, #84	; 0x54
   16588:	bne	16730 <__mempcpy_chk@plt+0x506c>
   1658c:	ldrb	r1, [r0, #2]
   16590:	and	r1, r1, #223	; 0xdf
   16594:	cmp	r1, #70	; 0x46
   16598:	bne	16730 <__mempcpy_chk@plt+0x506c>
   1659c:	ldrb	r1, [r0, #3]
   165a0:	cmp	r1, #45	; 0x2d
   165a4:	bne	16730 <__mempcpy_chk@plt+0x506c>
   165a8:	ldrb	r1, [r0, #4]
   165ac:	cmp	r1, #56	; 0x38
   165b0:	bne	16730 <__mempcpy_chk@plt+0x506c>
   165b4:	ldrb	r0, [r0, #5]
   165b8:	cmp	r0, #0
   165bc:	movw	r0, #47186	; 0xb852
   165c0:	movt	r0, #1
   165c4:	str	r0, [sp, #72]	; 0x48
   165c8:	bne	16730 <__mempcpy_chk@plt+0x506c>
   165cc:	b	1674c <__mempcpy_chk@plt+0x5088>
   165d0:	mov	r0, #1
   165d4:	b	16614 <__mempcpy_chk@plt+0x4f50>
   165d8:	mov	r4, #0
   165dc:	mov	r9, #0
   165e0:	mov	r2, r0
   165e4:	b	16664 <__mempcpy_chk@plt+0x4fa0>
   165e8:	tst	r8, #1
   165ec:	bne	16614 <__mempcpy_chk@plt+0x4f50>
   165f0:	mov	r2, r0
   165f4:	b	1663c <__mempcpy_chk@plt+0x4f78>
   165f8:	mov	r0, #1
   165fc:	mov	r9, #0
   16600:	mov	r4, #5
   16604:	b	16680 <__mempcpy_chk@plt+0x4fbc>
   16608:	mov	r2, #1
   1660c:	tst	r8, #1
   16610:	beq	1663c <__mempcpy_chk@plt+0x4f78>
   16614:	mov	r1, #1
   16618:	mov	r9, #0
   1661c:	mov	r4, #2
   16620:	mov	r2, r0
   16624:	mov	r3, #1
   16628:	str	r1, [fp, #-72]	; 0xffffffb8
   1662c:	movw	r1, #47184	; 0xb850
   16630:	movt	r1, #1
   16634:	str	r1, [fp, #-88]	; 0xffffffa8
   16638:	b	168e4 <__mempcpy_chk@plt+0x5220>
   1663c:	cmp	r5, #0
   16640:	mov	r9, #1
   16644:	mov	r4, #2
   16648:	movne	r0, #39	; 0x27
   1664c:	strbne	r0, [ip]
   16650:	movw	r0, #47184	; 0xb850
   16654:	movt	r0, #1
   16658:	str	r0, [fp, #-88]	; 0xffffffa8
   1665c:	mov	r0, #1
   16660:	str	r0, [fp, #-72]	; 0xffffffb8
   16664:	mov	r3, #0
   16668:	b	168e4 <__mempcpy_chk@plt+0x5220>
   1666c:	mov	r4, #5
   16670:	tst	r8, #1
   16674:	beq	1669c <__mempcpy_chk@plt+0x4fd8>
   16678:	mov	r0, #1
   1667c:	mov	r9, #0
   16680:	str	r0, [fp, #-72]	; 0xffffffb8
   16684:	movw	r0, #47180	; 0xb84c
   16688:	mov	r2, #1
   1668c:	mov	r3, #1
   16690:	movt	r0, #1
   16694:	str	r0, [fp, #-88]	; 0xffffffa8
   16698:	b	168e4 <__mempcpy_chk@plt+0x5220>
   1669c:	cmp	r5, #0
   166a0:	mov	r3, #0
   166a4:	mov	r9, #1
   166a8:	mov	r2, #1
   166ac:	movne	r0, #34	; 0x22
   166b0:	strbne	r0, [ip]
   166b4:	movw	r0, #47180	; 0xb84c
   166b8:	movt	r0, #1
   166bc:	str	r0, [fp, #-88]	; 0xffffffa8
   166c0:	mov	r0, #1
   166c4:	str	r0, [fp, #-72]	; 0xffffffb8
   166c8:	b	168e4 <__mempcpy_chk@plt+0x5220>
   166cc:	ldrb	r1, [r0, #1]
   166d0:	and	r1, r1, #223	; 0xdf
   166d4:	cmp	r1, #66	; 0x42
   166d8:	bne	16730 <__mempcpy_chk@plt+0x506c>
   166dc:	ldrb	r1, [r0, #2]
   166e0:	cmp	r1, #49	; 0x31
   166e4:	bne	16730 <__mempcpy_chk@plt+0x506c>
   166e8:	ldrb	r1, [r0, #3]
   166ec:	cmp	r1, #56	; 0x38
   166f0:	bne	16730 <__mempcpy_chk@plt+0x506c>
   166f4:	ldrb	r1, [r0, #4]
   166f8:	cmp	r1, #48	; 0x30
   166fc:	bne	16730 <__mempcpy_chk@plt+0x506c>
   16700:	ldrb	r1, [r0, #5]
   16704:	cmp	r1, #51	; 0x33
   16708:	bne	16730 <__mempcpy_chk@plt+0x506c>
   1670c:	ldrb	r1, [r0, #6]
   16710:	cmp	r1, #48	; 0x30
   16714:	bne	16730 <__mempcpy_chk@plt+0x506c>
   16718:	ldrb	r0, [r0, #7]
   1671c:	cmp	r0, #0
   16720:	movw	r0, #47194	; 0xb85a
   16724:	movt	r0, #1
   16728:	str	r0, [sp, #72]	; 0x48
   1672c:	beq	1674c <__mempcpy_chk@plt+0x5088>
   16730:	movw	r1, #47180	; 0xb84c
   16734:	movw	r0, #47184	; 0xb850
   16738:	cmp	r4, #9
   1673c:	movt	r1, #1
   16740:	movt	r0, #1
   16744:	moveq	r0, r1
   16748:	str	r0, [sp, #72]	; 0x48
   1674c:	movw	r6, #47184	; 0xb850
   16750:	mov	r0, #0
   16754:	mov	r2, #5
   16758:	movt	r6, #1
   1675c:	mov	r1, r6
   16760:	bl	1140c <dcgettext@plt>
   16764:	cmp	r0, r6
   16768:	str	r0, [sp, #76]	; 0x4c
   1676c:	beq	167b8 <__mempcpy_chk@plt+0x50f4>
   16770:	ldr	ip, [fp, #-84]	; 0xffffffac
   16774:	mov	r9, #0
   16778:	tst	r8, #1
   1677c:	bne	168c0 <__mempcpy_chk@plt+0x51fc>
   16780:	ldr	r0, [sp, #72]	; 0x48
   16784:	ldrb	r0, [r0]
   16788:	cmp	r0, #0
   1678c:	beq	168c0 <__mempcpy_chk@plt+0x51fc>
   16790:	ldr	r1, [sp, #72]	; 0x48
   16794:	mov	r9, #0
   16798:	add	r1, r1, #1
   1679c:	cmp	r9, r5
   167a0:	strbcc	r0, [ip, r9]
   167a4:	ldrb	r0, [r1, r9]
   167a8:	add	r9, r9, #1
   167ac:	cmp	r0, #0
   167b0:	bne	1679c <__mempcpy_chk@plt+0x50d8>
   167b4:	b	168c0 <__mempcpy_chk@plt+0x51fc>
   167b8:	bl	19ff0 <__mempcpy_chk@plt+0x892c>
   167bc:	ldrb	r1, [r0]
   167c0:	and	r1, r1, #223	; 0xdf
   167c4:	cmp	r1, #71	; 0x47
   167c8:	beq	16838 <__mempcpy_chk@plt+0x5174>
   167cc:	ldr	ip, [fp, #-84]	; 0xffffffac
   167d0:	cmp	r1, #85	; 0x55
   167d4:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   167d8:	ldrb	r1, [r0, #1]
   167dc:	and	r1, r1, #223	; 0xdf
   167e0:	cmp	r1, #84	; 0x54
   167e4:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   167e8:	ldrb	r1, [r0, #2]
   167ec:	and	r1, r1, #223	; 0xdf
   167f0:	cmp	r1, #70	; 0x46
   167f4:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   167f8:	ldrb	r1, [r0, #3]
   167fc:	cmp	r1, #45	; 0x2d
   16800:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   16804:	ldrb	r1, [r0, #4]
   16808:	cmp	r1, #56	; 0x38
   1680c:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   16810:	ldrb	r0, [r0, #5]
   16814:	cmp	r0, #0
   16818:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   1681c:	movw	r0, #47190	; 0xb856
   16820:	movt	r0, #1
   16824:	str	r0, [sp, #76]	; 0x4c
   16828:	mov	r9, #0
   1682c:	tst	r8, #1
   16830:	beq	16780 <__mempcpy_chk@plt+0x50bc>
   16834:	b	168c0 <__mempcpy_chk@plt+0x51fc>
   16838:	ldrb	r1, [r0, #1]
   1683c:	ldr	ip, [fp, #-84]	; 0xffffffac
   16840:	and	r1, r1, #223	; 0xdf
   16844:	cmp	r1, #66	; 0x42
   16848:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   1684c:	ldrb	r1, [r0, #2]
   16850:	cmp	r1, #49	; 0x31
   16854:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   16858:	ldrb	r1, [r0, #3]
   1685c:	cmp	r1, #56	; 0x38
   16860:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   16864:	ldrb	r1, [r0, #4]
   16868:	cmp	r1, #48	; 0x30
   1686c:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   16870:	ldrb	r1, [r0, #5]
   16874:	cmp	r1, #51	; 0x33
   16878:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   1687c:	ldrb	r1, [r0, #6]
   16880:	cmp	r1, #48	; 0x30
   16884:	bne	16894 <__mempcpy_chk@plt+0x51d0>
   16888:	ldrb	r0, [r0, #7]
   1688c:	cmp	r0, #0
   16890:	beq	176a8 <__mempcpy_chk@plt+0x5fe4>
   16894:	movw	r0, #47184	; 0xb850
   16898:	cmp	r4, #9
   1689c:	movt	r0, #1
   168a0:	mov	r1, r0
   168a4:	movw	r0, #47180	; 0xb84c
   168a8:	movt	r0, #1
   168ac:	moveq	r1, r0
   168b0:	str	r1, [sp, #76]	; 0x4c
   168b4:	mov	r9, #0
   168b8:	tst	r8, #1
   168bc:	beq	16780 <__mempcpy_chk@plt+0x50bc>
   168c0:	ldr	r6, [sp, #76]	; 0x4c
   168c4:	mov	r0, r6
   168c8:	bl	11538 <strlen@plt>
   168cc:	ldr	ip, [fp, #-84]	; 0xffffffac
   168d0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   168d4:	str	r0, [fp, #-72]	; 0xffffffb8
   168d8:	str	r6, [fp, #-88]	; 0xffffffa8
   168dc:	mov	r2, #1
   168e0:	mov	r3, r8
   168e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   168e8:	str	r4, [fp, #-64]	; 0xffffffc0
   168ec:	mov	sl, #0
   168f0:	str	r3, [fp, #-76]	; 0xffffffb4
   168f4:	str	r2, [sp, #88]	; 0x58
   168f8:	cmp	r0, #0
   168fc:	movwne	r0, #1
   16900:	and	r1, r0, r3
   16904:	and	r1, r2, r1
   16908:	str	r1, [sp, #48]	; 0x30
   1690c:	sub	r1, r4, #2
   16910:	clz	r1, r1
   16914:	lsr	r1, r1, #5
   16918:	and	r1, r1, r3
   1691c:	str	r1, [sp, #44]	; 0x2c
   16920:	subs	r1, r4, #2
   16924:	eor	r4, r3, #1
   16928:	movwne	r1, #1
   1692c:	str	r4, [sp, #92]	; 0x5c
   16930:	orr	r4, r1, r4
   16934:	and	r1, r1, r2
   16938:	and	r0, r0, r1
   1693c:	str	r4, [sp, #64]	; 0x40
   16940:	ldr	r4, [sp, #84]	; 0x54
   16944:	str	r0, [fp, #-60]	; 0xffffffc4
   16948:	orr	r0, r1, r3
   1694c:	ldr	r1, [fp, #16]
   16950:	eor	r0, r0, #1
   16954:	clz	r1, r1
   16958:	lsr	r1, r1, #5
   1695c:	orr	r0, r1, r0
   16960:	str	r0, [fp, #-68]	; 0xffffffbc
   16964:	eor	r0, r2, #1
   16968:	str	r0, [sp, #52]	; 0x34
   1696c:	cmn	r7, #1
   16970:	beq	16980 <__mempcpy_chk@plt+0x52bc>
   16974:	cmp	sl, r7
   16978:	bne	1698c <__mempcpy_chk@plt+0x52c8>
   1697c:	b	17620 <__mempcpy_chk@plt+0x5f5c>
   16980:	ldrb	r0, [lr, sl]
   16984:	cmp	r0, #0
   16988:	beq	17628 <__mempcpy_chk@plt+0x5f64>
   1698c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16990:	cmp	r0, #0
   16994:	beq	169f4 <__mempcpy_chk@plt+0x5330>
   16998:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1699c:	mov	r6, r5
   169a0:	add	r5, sl, r0
   169a4:	cmp	r0, #2
   169a8:	bcc	16a14 <__mempcpy_chk@plt+0x5350>
   169ac:	mov	r0, #0
   169b0:	cmn	r7, #1
   169b4:	str	r0, [fp, #-56]	; 0xffffffc8
   169b8:	bne	169d0 <__mempcpy_chk@plt+0x530c>
   169bc:	mov	r0, lr
   169c0:	bl	11538 <strlen@plt>
   169c4:	ldr	lr, [fp, #-80]	; 0xffffffb0
   169c8:	ldr	ip, [fp, #-84]	; 0xffffffac
   169cc:	mov	r7, r0
   169d0:	cmp	r5, r7
   169d4:	bls	16a24 <__mempcpy_chk@plt+0x5360>
   169d8:	mov	r0, #0
   169dc:	mov	r5, r6
   169e0:	str	r0, [fp, #-48]	; 0xffffffd0
   169e4:	ldrb	r6, [lr, sl]
   169e8:	cmp	r6, #126	; 0x7e
   169ec:	bls	16a74 <__mempcpy_chk@plt+0x53b0>
   169f0:	b	16fd0 <__mempcpy_chk@plt+0x590c>
   169f4:	mov	r0, #0
   169f8:	str	r0, [fp, #-56]	; 0xffffffc8
   169fc:	mov	r0, #0
   16a00:	str	r0, [fp, #-48]	; 0xffffffd0
   16a04:	ldrb	r6, [lr, sl]
   16a08:	cmp	r6, #126	; 0x7e
   16a0c:	bls	16a74 <__mempcpy_chk@plt+0x53b0>
   16a10:	b	16fd0 <__mempcpy_chk@plt+0x590c>
   16a14:	mov	r0, #0
   16a18:	str	r0, [fp, #-56]	; 0xffffffc8
   16a1c:	cmp	r5, r7
   16a20:	bhi	169d8 <__mempcpy_chk@plt+0x5314>
   16a24:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16a28:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16a2c:	add	r0, lr, sl
   16a30:	bl	1152c <bcmp@plt>
   16a34:	ldr	r2, [sp, #92]	; 0x5c
   16a38:	cmp	r0, #0
   16a3c:	mov	r1, r0
   16a40:	mov	r5, r6
   16a44:	movwne	r1, #1
   16a48:	orr	r1, r1, r2
   16a4c:	tst	r1, #1
   16a50:	beq	176e8 <__mempcpy_chk@plt+0x6024>
   16a54:	ldr	ip, [fp, #-84]	; 0xffffffac
   16a58:	ldr	lr, [fp, #-80]	; 0xffffffb0
   16a5c:	clz	r0, r0
   16a60:	lsr	r0, r0, #5
   16a64:	str	r0, [fp, #-48]	; 0xffffffd0
   16a68:	ldrb	r6, [lr, sl]
   16a6c:	cmp	r6, #126	; 0x7e
   16a70:	bhi	16fd0 <__mempcpy_chk@plt+0x590c>
   16a74:	add	r3, pc, #16
   16a78:	mov	r8, #1
   16a7c:	mov	r2, #110	; 0x6e
   16a80:	mov	r0, #97	; 0x61
   16a84:	mov	r1, #0
   16a88:	ldr	pc, [r3, r6, lsl #2]
   16a8c:	andeq	r6, r1, r8, lsl #27
   16a90:	ldrdeq	r6, [r1], -r0
   16a94:	ldrdeq	r6, [r1], -r0
   16a98:	ldrdeq	r6, [r1], -r0
   16a9c:	ldrdeq	r6, [r1], -r0
   16aa0:	ldrdeq	r6, [r1], -r0
   16aa4:	ldrdeq	r6, [r1], -r0
   16aa8:	andeq	r7, r1, r4, lsl #1
   16aac:	andeq	r6, r1, r8, ror #26
   16ab0:	andeq	r6, r1, r0, ror #26
   16ab4:	andeq	r6, r1, r4, ror sp
   16ab8:	andeq	r6, r1, r4, lsr #29
   16abc:	andeq	r6, r1, r8, asr sp
   16ac0:	andeq	r6, r1, r0, ror sp
   16ac4:	ldrdeq	r6, [r1], -r0
   16ac8:	ldrdeq	r6, [r1], -r0
   16acc:	ldrdeq	r6, [r1], -r0
   16ad0:	ldrdeq	r6, [r1], -r0
   16ad4:	ldrdeq	r6, [r1], -r0
   16ad8:	ldrdeq	r6, [r1], -r0
   16adc:	ldrdeq	r6, [r1], -r0
   16ae0:	ldrdeq	r6, [r1], -r0
   16ae4:	ldrdeq	r6, [r1], -r0
   16ae8:	ldrdeq	r6, [r1], -r0
   16aec:	ldrdeq	r6, [r1], -r0
   16af0:	ldrdeq	r6, [r1], -r0
   16af4:	ldrdeq	r6, [r1], -r0
   16af8:	ldrdeq	r6, [r1], -r0
   16afc:	ldrdeq	r6, [r1], -r0
   16b00:	ldrdeq	r6, [r1], -r0
   16b04:	ldrdeq	r6, [r1], -r0
   16b08:	ldrdeq	r6, [r1], -r0
   16b0c:	strdeq	r6, [r1], -ip
   16b10:	andeq	r6, r1, r0, lsl #26
   16b14:	andeq	r6, r1, r0, lsl #26
   16b18:	strdeq	r6, [r1], -r0
   16b1c:	andeq	r6, r1, r0, lsl #26
   16b20:	andeq	r6, r1, r8, lsl #25
   16b24:	andeq	r6, r1, r0, lsl #26
   16b28:	andeq	r6, r1, ip, lsr #29
   16b2c:	andeq	r6, r1, r0, lsl #26
   16b30:	andeq	r6, r1, r0, lsl #26
   16b34:	andeq	r6, r1, r0, lsl #26
   16b38:	andeq	r6, r1, r8, lsl #25
   16b3c:	andeq	r6, r1, r8, lsl #25
   16b40:	andeq	r6, r1, r8, lsl #25
   16b44:	andeq	r6, r1, r8, lsl #25
   16b48:	andeq	r6, r1, r8, lsl #25
   16b4c:	andeq	r6, r1, r8, lsl #25
   16b50:	andeq	r6, r1, r8, lsl #25
   16b54:	andeq	r6, r1, r8, lsl #25
   16b58:	andeq	r6, r1, r8, lsl #25
   16b5c:	andeq	r6, r1, r8, lsl #25
   16b60:	andeq	r6, r1, r8, lsl #25
   16b64:	andeq	r6, r1, r8, lsl #25
   16b68:	andeq	r6, r1, r8, lsl #25
   16b6c:	andeq	r6, r1, r8, lsl #25
   16b70:	andeq	r6, r1, r8, lsl #25
   16b74:	andeq	r6, r1, r8, lsl #25
   16b78:	andeq	r6, r1, r0, lsl #26
   16b7c:	andeq	r6, r1, r0, lsl #26
   16b80:	andeq	r6, r1, r0, lsl #26
   16b84:	andeq	r6, r1, r0, lsl #26
   16b88:	andeq	r6, r1, r0, ror lr
   16b8c:	ldrdeq	r6, [r1], -r0
   16b90:	andeq	r6, r1, r8, lsl #25
   16b94:	andeq	r6, r1, r8, lsl #25
   16b98:	andeq	r6, r1, r8, lsl #25
   16b9c:	andeq	r6, r1, r8, lsl #25
   16ba0:	andeq	r6, r1, r8, lsl #25
   16ba4:	andeq	r6, r1, r8, lsl #25
   16ba8:	andeq	r6, r1, r8, lsl #25
   16bac:	andeq	r6, r1, r8, lsl #25
   16bb0:	andeq	r6, r1, r8, lsl #25
   16bb4:	andeq	r6, r1, r8, lsl #25
   16bb8:	andeq	r6, r1, r8, lsl #25
   16bbc:	andeq	r6, r1, r8, lsl #25
   16bc0:	andeq	r6, r1, r8, lsl #25
   16bc4:	andeq	r6, r1, r8, lsl #25
   16bc8:	andeq	r6, r1, r8, lsl #25
   16bcc:	andeq	r6, r1, r8, lsl #25
   16bd0:	andeq	r6, r1, r8, lsl #25
   16bd4:	andeq	r6, r1, r8, lsl #25
   16bd8:	andeq	r6, r1, r8, lsl #25
   16bdc:	andeq	r6, r1, r8, lsl #25
   16be0:	andeq	r6, r1, r8, lsl #25
   16be4:	andeq	r6, r1, r8, lsl #25
   16be8:	andeq	r6, r1, r8, lsl #25
   16bec:	andeq	r6, r1, r8, lsl #25
   16bf0:	andeq	r6, r1, r8, lsl #25
   16bf4:	andeq	r6, r1, r8, lsl #25
   16bf8:	andeq	r6, r1, r0, lsl #26
   16bfc:	andeq	r6, r1, r4, lsr sp
   16c00:	andeq	r6, r1, r8, lsl #25
   16c04:	andeq	r6, r1, r0, lsl #26
   16c08:	andeq	r6, r1, r8, lsl #25
   16c0c:	andeq	r6, r1, r0, lsl #26
   16c10:	andeq	r6, r1, r8, lsl #25
   16c14:	andeq	r6, r1, r8, lsl #25
   16c18:	andeq	r6, r1, r8, lsl #25
   16c1c:	andeq	r6, r1, r8, lsl #25
   16c20:	andeq	r6, r1, r8, lsl #25
   16c24:	andeq	r6, r1, r8, lsl #25
   16c28:	andeq	r6, r1, r8, lsl #25
   16c2c:	andeq	r6, r1, r8, lsl #25
   16c30:	andeq	r6, r1, r8, lsl #25
   16c34:	andeq	r6, r1, r8, lsl #25
   16c38:	andeq	r6, r1, r8, lsl #25
   16c3c:	andeq	r6, r1, r8, lsl #25
   16c40:	andeq	r6, r1, r8, lsl #25
   16c44:	andeq	r6, r1, r8, lsl #25
   16c48:	andeq	r6, r1, r8, lsl #25
   16c4c:	andeq	r6, r1, r8, lsl #25
   16c50:	andeq	r6, r1, r8, lsl #25
   16c54:	andeq	r6, r1, r8, lsl #25
   16c58:	andeq	r6, r1, r8, lsl #25
   16c5c:	andeq	r6, r1, r8, lsl #25
   16c60:	andeq	r6, r1, r8, lsl #25
   16c64:	andeq	r6, r1, r8, lsl #25
   16c68:	andeq	r6, r1, r8, lsl #25
   16c6c:	andeq	r6, r1, r8, lsl #25
   16c70:	andeq	r6, r1, r8, lsl #25
   16c74:	andeq	r6, r1, r8, lsl #25
   16c78:	andeq	r6, r1, r8, asr #25
   16c7c:	andeq	r6, r1, r0, lsl #26
   16c80:	andeq	r6, r1, r8, asr #25
   16c84:	strdeq	r6, [r1], -r0
   16c88:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16c8c:	tst	r0, #1
   16c90:	bne	16f48 <__mempcpy_chk@plt+0x5884>
   16c94:	ldr	r1, [fp, #16]
   16c98:	ubfx	r0, r6, #5, #3
   16c9c:	mov	r2, #1
   16ca0:	ldr	r0, [r1, r0, lsl #2]
   16ca4:	and	r1, r6, #31
   16ca8:	tst	r0, r2, lsl r1
   16cac:	beq	16f48 <__mempcpy_chk@plt+0x5884>
   16cb0:	mov	r0, r6
   16cb4:	mov	r1, r8
   16cb8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16cbc:	tst	r2, #1
   16cc0:	beq	16f68 <__mempcpy_chk@plt+0x58a4>
   16cc4:	b	176c4 <__mempcpy_chk@plt+0x6000>
   16cc8:	cmp	r7, #1
   16ccc:	beq	16cf0 <__mempcpy_chk@plt+0x562c>
   16cd0:	mov	r8, #0
   16cd4:	cmn	r7, #1
   16cd8:	bne	16f34 <__mempcpy_chk@plt+0x5870>
   16cdc:	ldrb	r0, [lr, #1]
   16ce0:	cmp	r0, #0
   16ce4:	beq	16cf0 <__mempcpy_chk@plt+0x562c>
   16ce8:	mvn	r7, #0
   16cec:	b	16f34 <__mempcpy_chk@plt+0x5870>
   16cf0:	mov	r8, #0
   16cf4:	cmp	sl, #0
   16cf8:	bne	16f34 <__mempcpy_chk@plt+0x5870>
   16cfc:	mov	r1, #1
   16d00:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16d04:	cmp	r0, #2
   16d08:	bne	16d20 <__mempcpy_chk@plt+0x565c>
   16d0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16d10:	mov	r8, r1
   16d14:	tst	r0, #1
   16d18:	beq	16c88 <__mempcpy_chk@plt+0x55c4>
   16d1c:	b	176c4 <__mempcpy_chk@plt+0x6000>
   16d20:	mov	r8, r1
   16d24:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16d28:	tst	r0, #1
   16d2c:	beq	16c94 <__mempcpy_chk@plt+0x55d0>
   16d30:	b	16f48 <__mempcpy_chk@plt+0x5884>
   16d34:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16d38:	cmp	r0, #2
   16d3c:	bne	16ffc <__mempcpy_chk@plt+0x5938>
   16d40:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16d44:	tst	r0, #1
   16d48:	bne	176c4 <__mempcpy_chk@plt+0x6000>
   16d4c:	mov	r0, #0
   16d50:	str	r0, [fp, #-56]	; 0xffffffc8
   16d54:	b	17014 <__mempcpy_chk@plt+0x5950>
   16d58:	mov	r0, #102	; 0x66
   16d5c:	b	17084 <__mempcpy_chk@plt+0x59c0>
   16d60:	mov	r2, #116	; 0x74
   16d64:	b	16d74 <__mempcpy_chk@plt+0x56b0>
   16d68:	mov	r0, #98	; 0x62
   16d6c:	b	17084 <__mempcpy_chk@plt+0x59c0>
   16d70:	mov	r2, #114	; 0x72
   16d74:	ldr	r0, [sp, #64]	; 0x40
   16d78:	tst	r0, #1
   16d7c:	mov	r0, r2
   16d80:	bne	17084 <__mempcpy_chk@plt+0x59c0>
   16d84:	b	176c4 <__mempcpy_chk@plt+0x6000>
   16d88:	ldr	r0, [sp, #88]	; 0x58
   16d8c:	tst	r0, #1
   16d90:	beq	170a4 <__mempcpy_chk@plt+0x59e0>
   16d94:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16d98:	tst	r0, #1
   16d9c:	bne	17800 <__mempcpy_chk@plt+0x613c>
   16da0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16da4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16da8:	subs	r0, r0, #2
   16dac:	movwne	r0, #1
   16db0:	orr	r0, r0, r1
   16db4:	tst	r0, #1
   16db8:	bne	16df4 <__mempcpy_chk@plt+0x5730>
   16dbc:	cmp	r9, r5
   16dc0:	movcc	r0, #39	; 0x27
   16dc4:	strbcc	r0, [ip, r9]
   16dc8:	add	r0, r9, #1
   16dcc:	cmp	r0, r5
   16dd0:	movcc	r1, #36	; 0x24
   16dd4:	strbcc	r1, [ip, r0]
   16dd8:	add	r0, r9, #2
   16ddc:	add	r9, r9, #3
   16de0:	cmp	r0, r5
   16de4:	movcc	r1, #39	; 0x27
   16de8:	strbcc	r1, [ip, r0]
   16dec:	mov	r0, #1
   16df0:	str	r0, [fp, #-52]	; 0xffffffcc
   16df4:	mov	r1, #1
   16df8:	cmp	r9, r5
   16dfc:	mov	r8, #0
   16e00:	mov	r6, #48	; 0x30
   16e04:	str	r1, [fp, #-56]	; 0xffffffc8
   16e08:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16e0c:	movcc	r0, #92	; 0x5c
   16e10:	strbcc	r0, [ip, r9]
   16e14:	add	r0, r9, #1
   16e18:	cmp	r1, #2
   16e1c:	beq	17270 <__mempcpy_chk@plt+0x5bac>
   16e20:	add	r1, sl, #1
   16e24:	cmp	r1, r7
   16e28:	bcs	17270 <__mempcpy_chk@plt+0x5bac>
   16e2c:	ldrb	r1, [lr, r1]
   16e30:	sub	r1, r1, #48	; 0x30
   16e34:	uxtb	r1, r1
   16e38:	cmp	r1, #9
   16e3c:	bhi	17270 <__mempcpy_chk@plt+0x5bac>
   16e40:	cmp	r0, r5
   16e44:	movcc	r1, #48	; 0x30
   16e48:	strbcc	r1, [ip, r0]
   16e4c:	add	r0, r9, #2
   16e50:	add	r9, r9, #3
   16e54:	cmp	r0, r5
   16e58:	movcc	r1, #48	; 0x30
   16e5c:	strbcc	r1, [ip, r0]
   16e60:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16e64:	tst	r0, #1
   16e68:	beq	16c94 <__mempcpy_chk@plt+0x55d0>
   16e6c:	b	16f48 <__mempcpy_chk@plt+0x5884>
   16e70:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16e74:	mov	r6, #63	; 0x3f
   16e78:	cmp	r0, #5
   16e7c:	beq	17284 <__mempcpy_chk@plt+0x5bc0>
   16e80:	mov	r1, #0
   16e84:	cmp	r0, #2
   16e88:	str	r1, [fp, #-56]	; 0xffffffc8
   16e8c:	bne	1734c <__mempcpy_chk@plt+0x5c88>
   16e90:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16e94:	mov	r8, #0
   16e98:	tst	r0, #1
   16e9c:	beq	16c88 <__mempcpy_chk@plt+0x55c4>
   16ea0:	b	176c4 <__mempcpy_chk@plt+0x6000>
   16ea4:	mov	r0, #118	; 0x76
   16ea8:	b	17084 <__mempcpy_chk@plt+0x59c0>
   16eac:	mov	r0, #1
   16eb0:	mov	r6, #39	; 0x27
   16eb4:	str	r0, [sp, #60]	; 0x3c
   16eb8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16ebc:	cmp	r0, #2
   16ec0:	bne	170c4 <__mempcpy_chk@plt+0x5a00>
   16ec4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16ec8:	tst	r0, #1
   16ecc:	bne	176c4 <__mempcpy_chk@plt+0x6000>
   16ed0:	ldr	r2, [sp, #56]	; 0x38
   16ed4:	clz	r1, r5
   16ed8:	mov	r8, #1
   16edc:	lsr	r1, r1, #5
   16ee0:	cmp	r2, #0
   16ee4:	mov	r0, r2
   16ee8:	movwne	r0, #1
   16eec:	orrs	r0, r0, r1
   16ef0:	moveq	r2, r5
   16ef4:	moveq	r5, r0
   16ef8:	cmp	r9, r5
   16efc:	str	r2, [sp, #56]	; 0x38
   16f00:	movcc	r0, #39	; 0x27
   16f04:	strbcc	r0, [ip, r9]
   16f08:	add	r0, r9, #1
   16f0c:	cmp	r0, r5
   16f10:	movcc	r1, #92	; 0x5c
   16f14:	strbcc	r1, [ip, r0]
   16f18:	add	r0, r9, #2
   16f1c:	add	r9, r9, #3
   16f20:	cmp	r0, r5
   16f24:	movcc	r1, #39	; 0x27
   16f28:	strbcc	r1, [ip, r0]
   16f2c:	mov	r0, #0
   16f30:	str	r0, [fp, #-52]	; 0xffffffcc
   16f34:	mov	r0, #0
   16f38:	str	r0, [fp, #-56]	; 0xffffffc8
   16f3c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16f40:	tst	r0, #1
   16f44:	beq	16c94 <__mempcpy_chk@plt+0x55d0>
   16f48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16f4c:	mov	r1, r8
   16f50:	cmp	r0, #0
   16f54:	mov	r0, r6
   16f58:	beq	1701c <__mempcpy_chk@plt+0x5958>
   16f5c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16f60:	tst	r2, #1
   16f64:	bne	176c4 <__mempcpy_chk@plt+0x6000>
   16f68:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16f6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f70:	subs	r2, r2, #2
   16f74:	movwne	r2, #1
   16f78:	orr	r2, r2, r3
   16f7c:	tst	r2, #1
   16f80:	bne	16fbc <__mempcpy_chk@plt+0x58f8>
   16f84:	cmp	r9, r5
   16f88:	movcc	r2, #39	; 0x27
   16f8c:	strbcc	r2, [ip, r9]
   16f90:	add	r2, r9, #1
   16f94:	cmp	r2, r5
   16f98:	movcc	r3, #36	; 0x24
   16f9c:	strbcc	r3, [ip, r2]
   16fa0:	add	r2, r9, #2
   16fa4:	add	r9, r9, #3
   16fa8:	cmp	r2, r5
   16fac:	movcc	r3, #39	; 0x27
   16fb0:	strbcc	r3, [ip, r2]
   16fb4:	mov	r2, #1
   16fb8:	str	r2, [fp, #-52]	; 0xffffffcc
   16fbc:	cmp	r9, r5
   16fc0:	movcc	r2, #92	; 0x5c
   16fc4:	strbcc	r2, [ip, r9]
   16fc8:	add	r9, r9, #1
   16fcc:	b	17064 <__mempcpy_chk@plt+0x59a0>
   16fd0:	ldr	r0, [sp, #40]	; 0x28
   16fd4:	cmp	r0, #1
   16fd8:	bne	170d8 <__mempcpy_chk@plt+0x5a14>
   16fdc:	bl	11508 <__ctype_b_loc@plt>
   16fe0:	ldr	r0, [r0]
   16fe4:	ldr	lr, [fp, #-80]	; 0xffffffb0
   16fe8:	mov	r1, #1
   16fec:	add	r0, r0, r6, lsl #1
   16ff0:	ldrb	r0, [r0, #1]
   16ff4:	ubfx	r8, r0, #6, #1
   16ff8:	b	17430 <__mempcpy_chk@plt+0x5d6c>
   16ffc:	ldr	r1, [sp, #48]	; 0x30
   17000:	mov	r0, #0
   17004:	str	r0, [fp, #-56]	; 0xffffffc8
   17008:	mov	r0, #92	; 0x5c
   1700c:	cmp	r1, #0
   17010:	beq	17084 <__mempcpy_chk@plt+0x59c0>
   17014:	mov	r6, #92	; 0x5c
   17018:	mov	r8, #0
   1701c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17020:	cmp	r0, #0
   17024:	bne	1705c <__mempcpy_chk@plt+0x5998>
   17028:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1702c:	tst	r0, #1
   17030:	beq	1705c <__mempcpy_chk@plt+0x5998>
   17034:	cmp	r9, r5
   17038:	movcc	r0, #39	; 0x27
   1703c:	strbcc	r0, [ip, r9]
   17040:	add	r0, r9, #1
   17044:	add	r9, r9, #2
   17048:	cmp	r0, r5
   1704c:	movcc	r1, #39	; 0x27
   17050:	strbcc	r1, [ip, r0]
   17054:	mov	r0, #0
   17058:	str	r0, [fp, #-52]	; 0xffffffcc
   1705c:	mov	r1, r8
   17060:	mov	r0, r6
   17064:	cmp	r9, r5
   17068:	and	r4, r4, r1
   1706c:	strbcc	r0, [ip, r9]
   17070:	add	r9, r9, #1
   17074:	add	sl, sl, #1
   17078:	cmn	r7, #1
   1707c:	bne	16974 <__mempcpy_chk@plt+0x52b0>
   17080:	b	16980 <__mempcpy_chk@plt+0x52bc>
   17084:	mov	r1, #0
   17088:	mov	r8, #0
   1708c:	str	r1, [fp, #-56]	; 0xffffffc8
   17090:	ldr	r1, [sp, #88]	; 0x58
   17094:	tst	r1, #1
   17098:	mov	r1, #0
   1709c:	beq	16c88 <__mempcpy_chk@plt+0x55c4>
   170a0:	b	16f5c <__mempcpy_chk@plt+0x5898>
   170a4:	ldr	r0, [sp, #36]	; 0x24
   170a8:	mov	r6, #0
   170ac:	mov	r8, #0
   170b0:	cmp	r0, #0
   170b4:	mov	r0, #0
   170b8:	str	r0, [fp, #-56]	; 0xffffffc8
   170bc:	bne	17074 <__mempcpy_chk@plt+0x59b0>
   170c0:	b	16c88 <__mempcpy_chk@plt+0x55c4>
   170c4:	mov	r8, #1
   170c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   170cc:	tst	r0, #1
   170d0:	beq	16c94 <__mempcpy_chk@plt+0x55d0>
   170d4:	b	16f48 <__mempcpy_chk@plt+0x5884>
   170d8:	mov	r0, #0
   170dc:	cmn	r7, #1
   170e0:	str	r0, [fp, #-36]	; 0xffffffdc
   170e4:	str	r0, [fp, #-40]	; 0xffffffd8
   170e8:	bne	170fc <__mempcpy_chk@plt+0x5a38>
   170ec:	mov	r0, lr
   170f0:	bl	11538 <strlen@plt>
   170f4:	ldr	lr, [fp, #-80]	; 0xffffffb0
   170f8:	mov	r7, r0
   170fc:	ldr	r0, [sp, #44]	; 0x2c
   17100:	str	r4, [sp, #84]	; 0x54
   17104:	str	r5, [sp, #28]
   17108:	cmp	r0, #0
   1710c:	beq	17360 <__mempcpy_chk@plt+0x5c9c>
   17110:	ldr	r0, [sp, #80]	; 0x50
   17114:	mov	r8, #1
   17118:	mov	r5, #0
   1711c:	add	r0, r0, sl
   17120:	str	r0, [sp, #24]
   17124:	sub	r0, fp, #40	; 0x28
   17128:	mov	r3, r0
   1712c:	b	17168 <__mempcpy_chk@plt+0x5aa4>
   17130:	ldr	r5, [sp, #68]	; 0x44
   17134:	add	r5, r0, r5
   17138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1713c:	bl	11448 <iswprint@plt>
   17140:	cmp	r0, #0
   17144:	sub	r4, fp, #40	; 0x28
   17148:	movwne	r0, #1
   1714c:	and	r8, r8, r0
   17150:	mov	r0, r4
   17154:	bl	113f4 <mbsinit@plt>
   17158:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1715c:	mov	r3, r4
   17160:	cmp	r0, #0
   17164:	bne	17424 <__mempcpy_chk@plt+0x5d60>
   17168:	str	r5, [sp, #68]	; 0x44
   1716c:	add	r5, r5, sl
   17170:	sub	r0, fp, #44	; 0x2c
   17174:	add	r1, lr, r5
   17178:	sub	r2, r7, r5
   1717c:	bl	1a028 <__mempcpy_chk@plt+0x8964>
   17180:	cmn	r0, #2
   17184:	beq	173e4 <__mempcpy_chk@plt+0x5d20>
   17188:	ldr	ip, [fp, #-84]	; 0xffffffac
   1718c:	cmn	r0, #1
   17190:	beq	173d8 <__mempcpy_chk@plt+0x5d14>
   17194:	cmp	r0, #0
   17198:	beq	173dc <__mempcpy_chk@plt+0x5d18>
   1719c:	cmp	r0, #2
   171a0:	bcc	17130 <__mempcpy_chk@plt+0x5a6c>
   171a4:	ldr	r1, [sp, #68]	; 0x44
   171a8:	ldr	r2, [sp, #24]
   171ac:	add	r1, r2, r1
   171b0:	sub	r2, r0, #1
   171b4:	ldrb	r3, [r1]
   171b8:	sub	r3, r3, #91	; 0x5b
   171bc:	cmp	r3, #33	; 0x21
   171c0:	bls	171e0 <__mempcpy_chk@plt+0x5b1c>
   171c4:	add	r1, r1, #1
   171c8:	subs	r2, r2, #1
   171cc:	beq	17130 <__mempcpy_chk@plt+0x5a6c>
   171d0:	ldrb	r3, [r1]
   171d4:	sub	r3, r3, #91	; 0x5b
   171d8:	cmp	r3, #33	; 0x21
   171dc:	bhi	171c4 <__mempcpy_chk@plt+0x5b00>
   171e0:	add	r5, pc, #0
   171e4:	ldr	pc, [r5, r3, lsl #2]
   171e8:	strdeq	r7, [r1], -ip
   171ec:	strdeq	r7, [r1], -ip
   171f0:	andeq	r7, r1, r4, asr #3
   171f4:	strdeq	r7, [r1], -ip
   171f8:	andeq	r7, r1, r4, asr #3
   171fc:	strdeq	r7, [r1], -ip
   17200:	andeq	r7, r1, r4, asr #3
   17204:	andeq	r7, r1, r4, asr #3
   17208:	andeq	r7, r1, r4, asr #3
   1720c:	andeq	r7, r1, r4, asr #3
   17210:	andeq	r7, r1, r4, asr #3
   17214:	andeq	r7, r1, r4, asr #3
   17218:	andeq	r7, r1, r4, asr #3
   1721c:	andeq	r7, r1, r4, asr #3
   17220:	andeq	r7, r1, r4, asr #3
   17224:	andeq	r7, r1, r4, asr #3
   17228:	andeq	r7, r1, r4, asr #3
   1722c:	andeq	r7, r1, r4, asr #3
   17230:	andeq	r7, r1, r4, asr #3
   17234:	andeq	r7, r1, r4, asr #3
   17238:	andeq	r7, r1, r4, asr #3
   1723c:	andeq	r7, r1, r4, asr #3
   17240:	andeq	r7, r1, r4, asr #3
   17244:	andeq	r7, r1, r4, asr #3
   17248:	andeq	r7, r1, r4, asr #3
   1724c:	andeq	r7, r1, r4, asr #3
   17250:	andeq	r7, r1, r4, asr #3
   17254:	andeq	r7, r1, r4, asr #3
   17258:	andeq	r7, r1, r4, asr #3
   1725c:	andeq	r7, r1, r4, asr #3
   17260:	andeq	r7, r1, r4, asr #3
   17264:	andeq	r7, r1, r4, asr #3
   17268:	andeq	r7, r1, r4, asr #3
   1726c:	strdeq	r7, [r1], -ip
   17270:	mov	r9, r0
   17274:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17278:	tst	r0, #1
   1727c:	beq	16c94 <__mempcpy_chk@plt+0x55d0>
   17280:	b	16f48 <__mempcpy_chk@plt+0x5884>
   17284:	mov	r0, #0
   17288:	str	r0, [fp, #-56]	; 0xffffffc8
   1728c:	ldr	r0, [sp, #32]
   17290:	cmp	r0, #0
   17294:	beq	1734c <__mempcpy_chk@plt+0x5c88>
   17298:	add	r0, sl, #2
   1729c:	mov	r1, r7
   172a0:	cmp	r0, r7
   172a4:	bcs	1734c <__mempcpy_chk@plt+0x5c88>
   172a8:	add	r1, sl, lr
   172ac:	ldrb	r1, [r1, #1]
   172b0:	cmp	r1, #63	; 0x3f
   172b4:	bne	1734c <__mempcpy_chk@plt+0x5c88>
   172b8:	ldrb	r8, [lr, r0]
   172bc:	sub	r2, r8, #33	; 0x21
   172c0:	cmp	r2, #29
   172c4:	bhi	1734c <__mempcpy_chk@plt+0x5c88>
   172c8:	mov	r1, r4
   172cc:	movw	r4, #20929	; 0x51c1
   172d0:	mov	r3, #1
   172d4:	movt	r4, #14336	; 0x3800
   172d8:	tst	r4, r3, lsl r2
   172dc:	beq	17608 <__mempcpy_chk@plt+0x5f44>
   172e0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   172e4:	tst	r2, #1
   172e8:	bne	176c4 <__mempcpy_chk@plt+0x6000>
   172ec:	cmp	r9, r5
   172f0:	mov	r6, r8
   172f4:	mov	r4, r1
   172f8:	mov	sl, r0
   172fc:	mov	r8, #0
   17300:	movcc	r2, #63	; 0x3f
   17304:	strbcc	r2, [ip, r9]
   17308:	add	r2, r9, #1
   1730c:	cmp	r2, r5
   17310:	movcc	r3, #34	; 0x22
   17314:	strbcc	r3, [ip, r2]
   17318:	add	r2, r9, #2
   1731c:	cmp	r2, r5
   17320:	movcc	r3, #34	; 0x22
   17324:	strbcc	r3, [ip, r2]
   17328:	add	r2, r9, #3
   1732c:	add	r9, r9, #4
   17330:	cmp	r2, r5
   17334:	movcc	r3, #63	; 0x3f
   17338:	strbcc	r3, [ip, r2]
   1733c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17340:	tst	r0, #1
   17344:	beq	16c94 <__mempcpy_chk@plt+0x55d0>
   17348:	b	16f48 <__mempcpy_chk@plt+0x5884>
   1734c:	mov	r8, #0
   17350:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17354:	tst	r0, #1
   17358:	beq	16c94 <__mempcpy_chk@plt+0x55d0>
   1735c:	b	16f48 <__mempcpy_chk@plt+0x5884>
   17360:	mov	r8, #1
   17364:	mov	r5, #0
   17368:	sub	r4, fp, #40	; 0x28
   1736c:	str	r5, [sp, #68]	; 0x44
   17370:	add	r5, r5, sl
   17374:	sub	r0, fp, #44	; 0x2c
   17378:	mov	r3, r4
   1737c:	add	r1, lr, r5
   17380:	sub	r2, r7, r5
   17384:	bl	1a028 <__mempcpy_chk@plt+0x8964>
   17388:	cmn	r0, #2
   1738c:	beq	173e4 <__mempcpy_chk@plt+0x5d20>
   17390:	cmn	r0, #1
   17394:	beq	173d8 <__mempcpy_chk@plt+0x5d14>
   17398:	ldr	r5, [sp, #68]	; 0x44
   1739c:	cmp	r0, #0
   173a0:	beq	17420 <__mempcpy_chk@plt+0x5d5c>
   173a4:	add	r5, r0, r5
   173a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   173ac:	bl	11448 <iswprint@plt>
   173b0:	cmp	r0, #0
   173b4:	sub	r4, fp, #40	; 0x28
   173b8:	movwne	r0, #1
   173bc:	and	r8, r8, r0
   173c0:	mov	r0, r4
   173c4:	bl	113f4 <mbsinit@plt>
   173c8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   173cc:	cmp	r0, #0
   173d0:	beq	1736c <__mempcpy_chk@plt+0x5ca8>
   173d4:	b	17424 <__mempcpy_chk@plt+0x5d60>
   173d8:	mov	r8, #0
   173dc:	ldr	lr, [fp, #-80]	; 0xffffffb0
   173e0:	b	17418 <__mempcpy_chk@plt+0x5d54>
   173e4:	ldr	lr, [fp, #-80]	; 0xffffffb0
   173e8:	mov	r8, #0
   173ec:	cmp	r5, r7
   173f0:	bcs	17418 <__mempcpy_chk@plt+0x5d54>
   173f4:	ldrb	r0, [lr, r5]
   173f8:	cmp	r0, #0
   173fc:	beq	17418 <__mempcpy_chk@plt+0x5d54>
   17400:	ldr	r0, [sp, #68]	; 0x44
   17404:	add	r0, r0, #1
   17408:	add	r5, r0, sl
   1740c:	str	r0, [sp, #68]	; 0x44
   17410:	cmp	r5, r7
   17414:	bcc	173f4 <__mempcpy_chk@plt+0x5d30>
   17418:	ldr	r5, [sp, #68]	; 0x44
   1741c:	b	17424 <__mempcpy_chk@plt+0x5d60>
   17420:	ldr	lr, [fp, #-80]	; 0xffffffb0
   17424:	mov	r1, r5
   17428:	ldr	r5, [sp, #28]
   1742c:	ldr	r4, [sp, #84]	; 0x54
   17430:	ldr	r0, [sp, #52]	; 0x34
   17434:	ldr	ip, [fp, #-84]	; 0xffffffac
   17438:	cmp	r1, #1
   1743c:	orr	r2, r8, r0
   17440:	mov	r0, r1
   17444:	bhi	17450 <__mempcpy_chk@plt+0x5d8c>
   17448:	tst	r2, #1
   1744c:	bne	16c88 <__mempcpy_chk@plt+0x55c4>
   17450:	add	r0, r0, sl
   17454:	str	r2, [sp, #84]	; 0x54
   17458:	str	r0, [fp, #-56]	; 0xffffffc8
   1745c:	mov	r0, #0
   17460:	tst	r2, #1
   17464:	bne	17544 <__mempcpy_chk@plt+0x5e80>
   17468:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1746c:	tst	r1, #1
   17470:	bne	176c4 <__mempcpy_chk@plt+0x6000>
   17474:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17478:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1747c:	subs	r2, r1, #2
   17480:	movwne	r2, #1
   17484:	orr	r2, r2, r0
   17488:	tst	r2, #1
   1748c:	bne	174c8 <__mempcpy_chk@plt+0x5e04>
   17490:	cmp	r9, r5
   17494:	add	r2, r9, #1
   17498:	mov	r0, #1
   1749c:	movcc	r1, #39	; 0x27
   174a0:	str	r0, [fp, #-52]	; 0xffffffcc
   174a4:	strbcc	r1, [ip, r9]
   174a8:	cmp	r2, r5
   174ac:	movcc	r1, #36	; 0x24
   174b0:	strbcc	r1, [ip, r2]
   174b4:	add	r2, r9, #2
   174b8:	add	r9, r9, #3
   174bc:	cmp	r2, r5
   174c0:	movcc	r1, #39	; 0x27
   174c4:	strbcc	r1, [ip, r2]
   174c8:	cmp	r9, r5
   174cc:	add	r2, r9, #1
   174d0:	movcc	r1, #92	; 0x5c
   174d4:	strbcc	r1, [ip, r9]
   174d8:	cmp	r2, r5
   174dc:	bcs	174f0 <__mempcpy_chk@plt+0x5e2c>
   174e0:	uxtb	r3, r6
   174e4:	mov	r1, #48	; 0x30
   174e8:	orr	r3, r1, r3, lsr #6
   174ec:	strb	r3, [ip, r2]
   174f0:	add	r2, r9, #2
   174f4:	add	r9, r9, #3
   174f8:	cmp	r2, r5
   174fc:	lsrcc	r3, r6, #3
   17500:	movcc	r1, #6
   17504:	bficc	r3, r1, #3, #29
   17508:	mov	r1, #6
   1750c:	bfi	r6, r1, #3, #29
   17510:	strbcc	r3, [ip, r2]
   17514:	mov	r2, #1
   17518:	b	17578 <__mempcpy_chk@plt+0x5eb4>
   1751c:	ldr	r1, [sp, #80]	; 0x50
   17520:	cmp	r9, r2
   17524:	mov	r5, r2
   17528:	ldr	r2, [sp, #84]	; 0x54
   1752c:	strbcc	r6, [ip, r9]
   17530:	add	r9, r9, #1
   17534:	ldrb	r6, [r1, sl]
   17538:	mov	sl, r3
   1753c:	tst	r2, #1
   17540:	beq	17468 <__mempcpy_chk@plt+0x5da4>
   17544:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17548:	tst	r1, #1
   1754c:	beq	1756c <__mempcpy_chk@plt+0x5ea8>
   17550:	cmp	r9, r5
   17554:	mov	r2, r0
   17558:	movcc	r1, #92	; 0x5c
   1755c:	strbcc	r1, [ip, r9]
   17560:	add	r9, r9, #1
   17564:	mov	r1, #0
   17568:	b	17574 <__mempcpy_chk@plt+0x5eb0>
   1756c:	mov	r1, #0
   17570:	mov	r2, r0
   17574:	str	r1, [fp, #-48]	; 0xffffffd0
   17578:	mov	r0, r2
   1757c:	and	r1, r2, #1
   17580:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17584:	add	r3, sl, #1
   17588:	cmp	r2, r3
   1758c:	bls	175ec <__mempcpy_chk@plt+0x5f28>
   17590:	mov	r2, r5
   17594:	ldr	r5, [fp, #-52]	; 0xffffffcc
   17598:	cmp	r1, #0
   1759c:	movwne	r1, #1
   175a0:	mvn	r5, r5
   175a4:	orr	r5, r5, r1
   175a8:	tst	r5, #1
   175ac:	bne	1751c <__mempcpy_chk@plt+0x5e58>
   175b0:	cmp	r9, r2
   175b4:	movcc	r5, r4
   175b8:	movcc	r4, #39	; 0x27
   175bc:	strbcc	r4, [ip, r9]
   175c0:	movcc	r4, r5
   175c4:	add	r5, r9, #1
   175c8:	add	r9, r9, #2
   175cc:	cmp	r5, r2
   175d0:	movcc	r1, r4
   175d4:	movcc	r4, #39	; 0x27
   175d8:	strbcc	r4, [ip, r5]
   175dc:	movcc	r4, r1
   175e0:	mov	r1, #0
   175e4:	str	r1, [fp, #-52]	; 0xffffffcc
   175e8:	b	1751c <__mempcpy_chk@plt+0x5e58>
   175ec:	cmp	r1, #0
   175f0:	movwne	r1, #1
   175f4:	str	r1, [fp, #-56]	; 0xffffffc8
   175f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   175fc:	cmp	r0, #0
   17600:	beq	17028 <__mempcpy_chk@plt+0x5964>
   17604:	b	1705c <__mempcpy_chk@plt+0x5998>
   17608:	mov	r8, #0
   1760c:	mov	r4, r1
   17610:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17614:	tst	r0, #1
   17618:	beq	16c94 <__mempcpy_chk@plt+0x55d0>
   1761c:	b	16f48 <__mempcpy_chk@plt+0x5884>
   17620:	mov	r7, sl
   17624:	b	1762c <__mempcpy_chk@plt+0x5f68>
   17628:	mvn	r7, #0
   1762c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17630:	ldr	r3, [fp, #-76]	; 0xffffffb4
   17634:	ldr	r2, [sp, #88]	; 0x58
   17638:	eor	r0, r1, #2
   1763c:	orr	r0, r0, r9
   17640:	clz	r0, r0
   17644:	lsr	r0, r0, #5
   17648:	tst	r3, r0
   1764c:	bne	176c4 <__mempcpy_chk@plt+0x6000>
   17650:	subs	r0, r1, #2
   17654:	movwne	r0, #1
   17658:	orr	r0, r3, r0
   1765c:	tst	r0, #1
   17660:	ldreq	r0, [sp, #60]	; 0x3c
   17664:	eoreq	r0, r0, #1
   17668:	tsteq	r0, #1
   1766c:	bne	177a0 <__mempcpy_chk@plt+0x60dc>
   17670:	tst	r4, #1
   17674:	bne	17764 <__mempcpy_chk@plt+0x60a0>
   17678:	ldr	r6, [sp, #56]	; 0x38
   1767c:	mov	r8, #0
   17680:	cmp	r6, #0
   17684:	beq	1779c <__mempcpy_chk@plt+0x60d8>
   17688:	mov	r1, #0
   1768c:	mov	r4, #2
   17690:	cmp	r5, #0
   17694:	mov	r0, r2
   17698:	mov	r3, #0
   1769c:	str	r1, [sp, #84]	; 0x54
   176a0:	beq	164e8 <__mempcpy_chk@plt+0x4e24>
   176a4:	b	177a0 <__mempcpy_chk@plt+0x60dc>
   176a8:	movw	r0, #47198	; 0xb85e
   176ac:	movt	r0, #1
   176b0:	str	r0, [sp, #76]	; 0x4c
   176b4:	mov	r9, #0
   176b8:	tst	r8, #1
   176bc:	beq	16780 <__mempcpy_chk@plt+0x50bc>
   176c0:	b	168c0 <__mempcpy_chk@plt+0x51fc>
   176c4:	ldr	r1, [sp, #88]	; 0x58
   176c8:	mov	r0, #2
   176cc:	tst	r1, #1
   176d0:	movwne	r0, #4
   176d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   176d8:	ldr	r1, [fp, #12]
   176dc:	cmp	r2, #2
   176e0:	moveq	r2, r0
   176e4:	b	1771c <__mempcpy_chk@plt+0x6058>
   176e8:	ldr	ip, [fp, #-84]	; 0xffffffac
   176ec:	ldr	lr, [fp, #-80]	; 0xffffffb0
   176f0:	ldr	r1, [fp, #12]
   176f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   176f8:	b	1771c <__mempcpy_chk@plt+0x6058>
   176fc:	ldr	r1, [sp, #88]	; 0x58
   17700:	ldr	lr, [fp, #-80]	; 0xffffffb0
   17704:	ldr	r5, [sp, #28]
   17708:	mov	r0, #2
   1770c:	tst	r1, #1
   17710:	ldr	r1, [fp, #12]
   17714:	movwne	r0, #4
   17718:	mov	r2, r0
   1771c:	mov	r0, #0
   17720:	bic	r1, r1, #2
   17724:	str	r2, [sp]
   17728:	mov	r2, lr
   1772c:	str	r0, [sp, #8]
   17730:	ldr	r0, [sp, #72]	; 0x48
   17734:	str	r1, [sp, #4]
   17738:	mov	r1, r5
   1773c:	str	r0, [sp, #12]
   17740:	ldr	r0, [sp, #76]	; 0x4c
   17744:	str	r0, [sp, #16]
   17748:	mov	r0, ip
   1774c:	mov	r3, r7
   17750:	bl	1645c <__mempcpy_chk@plt+0x4d98>
   17754:	mov	r9, r0
   17758:	mov	r0, r9
   1775c:	sub	sp, fp, #28
   17760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17764:	mov	r0, #5
   17768:	ldr	r1, [sp, #56]	; 0x38
   1776c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   17770:	str	r0, [sp]
   17774:	ldr	r0, [fp, #12]
   17778:	str	r0, [sp, #4]
   1777c:	ldr	r0, [fp, #16]
   17780:	str	r0, [sp, #8]
   17784:	ldr	r0, [sp, #72]	; 0x48
   17788:	str	r0, [sp, #12]
   1778c:	ldr	r0, [sp, #76]	; 0x4c
   17790:	str	r0, [sp, #16]
   17794:	ldr	r0, [fp, #-84]	; 0xffffffac
   17798:	b	1774c <__mempcpy_chk@plt+0x6088>
   1779c:	mov	r3, #0
   177a0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   177a4:	cmp	r1, #0
   177a8:	beq	177e4 <__mempcpy_chk@plt+0x6120>
   177ac:	ldr	r2, [fp, #-84]	; 0xffffffac
   177b0:	tst	r3, #1
   177b4:	bne	177e8 <__mempcpy_chk@plt+0x6124>
   177b8:	ldrb	r0, [r1]
   177bc:	cmp	r0, #0
   177c0:	beq	177e8 <__mempcpy_chk@plt+0x6124>
   177c4:	add	r1, r1, #1
   177c8:	cmp	r9, r5
   177cc:	strbcc	r0, [r2, r9]
   177d0:	add	r9, r9, #1
   177d4:	ldrb	r0, [r1], #1
   177d8:	cmp	r0, #0
   177dc:	bne	177c8 <__mempcpy_chk@plt+0x6104>
   177e0:	b	177e8 <__mempcpy_chk@plt+0x6124>
   177e4:	ldr	r2, [fp, #-84]	; 0xffffffac
   177e8:	cmp	r9, r5
   177ec:	movcc	r0, #0
   177f0:	strbcc	r0, [r2, r9]
   177f4:	mov	r0, r9
   177f8:	sub	sp, fp, #28
   177fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17800:	mov	r0, #4
   17804:	b	176d4 <__mempcpy_chk@plt+0x6010>
   17808:	bl	11688 <abort@plt>
   1780c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17810:	add	fp, sp, #28
   17814:	sub	sp, sp, #28
   17818:	movw	r5, #49640	; 0xc1e8
   1781c:	cmp	r2, #0
   17820:	mov	r4, r1
   17824:	mov	r7, r0
   17828:	str	r0, [sp, #20]
   1782c:	movt	r5, #2
   17830:	movne	r5, r2
   17834:	bl	11550 <__errno_location@plt>
   17838:	mov	sl, r0
   1783c:	ldr	r2, [r5, #40]	; 0x28
   17840:	ldr	r3, [r5, #44]	; 0x2c
   17844:	ldm	r5, {r0, r1}
   17848:	orr	r8, r1, #1
   1784c:	add	r9, r5, #8
   17850:	mov	r1, #0
   17854:	ldr	r6, [sl]
   17858:	stm	sp, {r0, r8, r9}
   1785c:	mov	r0, #0
   17860:	str	r2, [sp, #12]
   17864:	str	r3, [sp, #16]
   17868:	mov	r2, r7
   1786c:	mov	r3, r4
   17870:	str	r6, [sp, #24]
   17874:	mov	r6, r4
   17878:	bl	1645c <__mempcpy_chk@plt+0x4d98>
   1787c:	add	r7, r0, #1
   17880:	mov	r0, r7
   17884:	bl	192a4 <__mempcpy_chk@plt+0x7be0>
   17888:	mov	r4, r0
   1788c:	ldr	r0, [r5]
   17890:	ldr	r2, [r5, #44]	; 0x2c
   17894:	ldr	r1, [r5, #40]	; 0x28
   17898:	mov	r3, r6
   1789c:	stm	sp, {r0, r8, r9}
   178a0:	str	r2, [sp, #16]
   178a4:	ldr	r2, [sp, #20]
   178a8:	str	r1, [sp, #12]
   178ac:	mov	r0, r4
   178b0:	mov	r1, r7
   178b4:	bl	1645c <__mempcpy_chk@plt+0x4d98>
   178b8:	ldr	r0, [sp, #24]
   178bc:	str	r0, [sl]
   178c0:	mov	r0, r4
   178c4:	sub	sp, fp, #28
   178c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   178cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178d0:	add	fp, sp, #28
   178d4:	sub	sp, sp, #36	; 0x24
   178d8:	movw	r8, #49640	; 0xc1e8
   178dc:	cmp	r3, #0
   178e0:	mov	r4, r2
   178e4:	str	r2, [sp, #24]
   178e8:	mov	r5, r1
   178ec:	mov	r6, r0
   178f0:	str	r0, [sp, #20]
   178f4:	movt	r8, #2
   178f8:	movne	r8, r3
   178fc:	bl	11550 <__errno_location@plt>
   17900:	str	r0, [sp, #28]
   17904:	ldr	r1, [r8, #40]	; 0x28
   17908:	ldr	r2, [r8, #44]	; 0x2c
   1790c:	ldr	r7, [r0]
   17910:	cmp	r4, #0
   17914:	add	sl, r8, #8
   17918:	mov	r0, #0
   1791c:	ldm	r8, {r3, r9}
   17920:	orreq	r9, r9, #1
   17924:	stm	sp, {r3, r9, sl}
   17928:	str	r1, [sp, #12]
   1792c:	str	r2, [sp, #16]
   17930:	mov	r1, #0
   17934:	mov	r2, r6
   17938:	mov	r3, r5
   1793c:	str	r7, [sp, #32]
   17940:	mov	r7, r5
   17944:	bl	1645c <__mempcpy_chk@plt+0x4d98>
   17948:	add	r4, r0, #1
   1794c:	mov	r5, r0
   17950:	mov	r0, r4
   17954:	bl	192a4 <__mempcpy_chk@plt+0x7be0>
   17958:	mov	r6, r0
   1795c:	ldr	r0, [r8]
   17960:	ldr	r2, [r8, #44]	; 0x2c
   17964:	ldr	r1, [r8, #40]	; 0x28
   17968:	mov	r3, r7
   1796c:	stm	sp, {r0, r9, sl}
   17970:	str	r2, [sp, #16]
   17974:	ldr	r2, [sp, #20]
   17978:	str	r1, [sp, #12]
   1797c:	mov	r0, r6
   17980:	mov	r1, r4
   17984:	bl	1645c <__mempcpy_chk@plt+0x4d98>
   17988:	ldr	r0, [sp, #24]
   1798c:	ldr	r1, [sp, #32]
   17990:	ldr	r2, [sp, #28]
   17994:	cmp	r0, #0
   17998:	str	r1, [r2]
   1799c:	strne	r5, [r0]
   179a0:	mov	r0, r6
   179a4:	sub	sp, fp, #28
   179a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179ac:	push	{r4, r5, r6, r7, fp, lr}
   179b0:	add	fp, sp, #16
   179b4:	movw	r4, #49536	; 0xc180
   179b8:	movt	r4, #2
   179bc:	ldrd	r6, [r4]
   179c0:	cmp	r7, #2
   179c4:	blt	179f0 <__mempcpy_chk@plt+0x632c>
   179c8:	add	r5, r6, #12
   179cc:	mov	r7, #0
   179d0:	ldr	r0, [r5, r7, lsl #3]
   179d4:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   179d8:	ldr	r1, [r4, #4]
   179dc:	add	r2, r7, #2
   179e0:	add	r0, r7, #1
   179e4:	mov	r7, r0
   179e8:	cmp	r2, r1
   179ec:	blt	179d0 <__mempcpy_chk@plt+0x630c>
   179f0:	ldr	r0, [r6, #4]
   179f4:	movw	r5, #49688	; 0xc218
   179f8:	movt	r5, #2
   179fc:	cmp	r0, r5
   17a00:	beq	17a14 <__mempcpy_chk@plt+0x6350>
   17a04:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   17a08:	mov	r0, #256	; 0x100
   17a0c:	str	r0, [r4, #8]
   17a10:	str	r5, [r4, #12]
   17a14:	add	r5, r4, #8
   17a18:	cmp	r6, r5
   17a1c:	beq	17a2c <__mempcpy_chk@plt+0x6368>
   17a20:	mov	r0, r6
   17a24:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   17a28:	str	r5, [r4]
   17a2c:	mov	r0, #1
   17a30:	str	r0, [r4, #4]
   17a34:	pop	{r4, r5, r6, r7, fp, pc}
   17a38:	movw	r3, #49640	; 0xc1e8
   17a3c:	mvn	r2, #0
   17a40:	movt	r3, #2
   17a44:	b	17a48 <__mempcpy_chk@plt+0x6384>
   17a48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a4c:	add	fp, sp, #28
   17a50:	sub	sp, sp, #44	; 0x2c
   17a54:	mov	r7, r3
   17a58:	str	r2, [sp, #36]	; 0x24
   17a5c:	str	r1, [sp, #32]
   17a60:	mov	r5, r0
   17a64:	bl	11550 <__errno_location@plt>
   17a68:	cmp	r5, #0
   17a6c:	bmi	17bd4 <__mempcpy_chk@plt+0x6510>
   17a70:	cmn	r5, #-2147483647	; 0x80000001
   17a74:	beq	17bd4 <__mempcpy_chk@plt+0x6510>
   17a78:	movw	r8, #49536	; 0xc180
   17a7c:	mov	r4, r0
   17a80:	ldr	r0, [r0]
   17a84:	movt	r8, #2
   17a88:	str	r4, [sp, #28]
   17a8c:	ldr	r1, [r8, #4]
   17a90:	ldr	r6, [r8]
   17a94:	str	r0, [sp, #24]
   17a98:	cmp	r1, r5
   17a9c:	ble	17aa8 <__mempcpy_chk@plt+0x63e4>
   17aa0:	mov	sl, r6
   17aa4:	b	17b10 <__mempcpy_chk@plt+0x644c>
   17aa8:	mov	r0, #8
   17aac:	add	r9, r8, #8
   17ab0:	str	r1, [fp, #-32]	; 0xffffffe0
   17ab4:	sub	r1, r5, r1
   17ab8:	mvn	r3, #-2147483648	; 0x80000000
   17abc:	str	r0, [sp]
   17ac0:	subs	r0, r6, r9
   17ac4:	add	r2, r1, #1
   17ac8:	sub	r1, fp, #32
   17acc:	movne	r0, r6
   17ad0:	bl	194a4 <__mempcpy_chk@plt+0x7de0>
   17ad4:	mov	sl, r0
   17ad8:	cmp	r6, r9
   17adc:	str	r0, [r8]
   17ae0:	bne	17aec <__mempcpy_chk@plt+0x6428>
   17ae4:	ldrd	r0, [r8, #8]
   17ae8:	stm	sl, {r0, r1}
   17aec:	ldr	r1, [r8, #4]
   17af0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17af4:	add	r0, sl, r1, lsl #3
   17af8:	sub	r1, r2, r1
   17afc:	lsl	r2, r1, #3
   17b00:	mov	r1, #0
   17b04:	bl	11574 <memset@plt>
   17b08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17b0c:	str	r0, [r8, #4]
   17b10:	mov	r9, sl
   17b14:	ldm	r7, {r0, r1}
   17b18:	orr	r8, r1, #1
   17b1c:	add	r1, r7, #8
   17b20:	ldr	r2, [r7, #40]	; 0x28
   17b24:	ldr	r3, [r7, #44]	; 0x2c
   17b28:	ldr	r6, [r9, r5, lsl #3]!
   17b2c:	str	r1, [sp, #20]
   17b30:	ldr	r4, [r9, #4]!
   17b34:	stm	sp, {r0, r8}
   17b38:	add	r0, sp, #8
   17b3c:	stm	r0, {r1, r2, r3}
   17b40:	ldr	r2, [sp, #32]
   17b44:	ldr	r3, [sp, #36]	; 0x24
   17b48:	mov	r1, r6
   17b4c:	mov	r0, r4
   17b50:	bl	1645c <__mempcpy_chk@plt+0x4d98>
   17b54:	cmp	r6, r0
   17b58:	bhi	17bbc <__mempcpy_chk@plt+0x64f8>
   17b5c:	add	r6, r0, #1
   17b60:	movw	r0, #49688	; 0xc218
   17b64:	movt	r0, #2
   17b68:	str	r6, [sl, r5, lsl #3]
   17b6c:	cmp	r4, r0
   17b70:	beq	17b7c <__mempcpy_chk@plt+0x64b8>
   17b74:	mov	r0, r4
   17b78:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   17b7c:	mov	r0, r6
   17b80:	bl	192a4 <__mempcpy_chk@plt+0x7be0>
   17b84:	str	r0, [r9]
   17b88:	mov	r4, r0
   17b8c:	add	r3, sp, #8
   17b90:	ldr	r0, [r7]
   17b94:	ldr	r1, [r7, #40]	; 0x28
   17b98:	ldr	r2, [r7, #44]	; 0x2c
   17b9c:	stm	sp, {r0, r8}
   17ba0:	ldr	r0, [sp, #20]
   17ba4:	stm	r3, {r0, r1, r2}
   17ba8:	ldr	r2, [sp, #32]
   17bac:	ldr	r3, [sp, #36]	; 0x24
   17bb0:	mov	r0, r4
   17bb4:	mov	r1, r6
   17bb8:	bl	1645c <__mempcpy_chk@plt+0x4d98>
   17bbc:	ldr	r1, [sp, #24]
   17bc0:	ldr	r0, [sp, #28]
   17bc4:	str	r1, [r0]
   17bc8:	mov	r0, r4
   17bcc:	sub	sp, fp, #28
   17bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bd4:	bl	11688 <abort@plt>
   17bd8:	movw	r3, #49640	; 0xc1e8
   17bdc:	movt	r3, #2
   17be0:	b	17a48 <__mempcpy_chk@plt+0x6384>
   17be4:	movw	r3, #49640	; 0xc1e8
   17be8:	mov	r1, r0
   17bec:	mov	r0, #0
   17bf0:	mvn	r2, #0
   17bf4:	movt	r3, #2
   17bf8:	b	17a48 <__mempcpy_chk@plt+0x6384>
   17bfc:	movw	r3, #49640	; 0xc1e8
   17c00:	mov	r2, r1
   17c04:	mov	r1, r0
   17c08:	mov	r0, #0
   17c0c:	movt	r3, #2
   17c10:	b	17a48 <__mempcpy_chk@plt+0x6384>
   17c14:	push	{fp, lr}
   17c18:	mov	fp, sp
   17c1c:	sub	sp, sp, #48	; 0x30
   17c20:	vmov.i32	q8, #0	; 0x00000000
   17c24:	mov	ip, #32
   17c28:	mov	r3, sp
   17c2c:	mov	lr, r2
   17c30:	cmp	r1, #10
   17c34:	add	r2, r3, #16
   17c38:	vst1.64	{d16-d17}, [r3], ip
   17c3c:	vst1.64	{d16-d17}, [r2]
   17c40:	vst1.64	{d16-d17}, [r3]
   17c44:	beq	17c64 <__mempcpy_chk@plt+0x65a0>
   17c48:	str	r1, [sp]
   17c4c:	mov	r3, sp
   17c50:	mov	r1, lr
   17c54:	mvn	r2, #0
   17c58:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   17c5c:	mov	sp, fp
   17c60:	pop	{fp, pc}
   17c64:	bl	11688 <abort@plt>
   17c68:	push	{r4, sl, fp, lr}
   17c6c:	add	fp, sp, #8
   17c70:	sub	sp, sp, #48	; 0x30
   17c74:	vmov.i32	q8, #0	; 0x00000000
   17c78:	mov	ip, r3
   17c7c:	mov	r3, sp
   17c80:	mov	lr, #32
   17c84:	cmp	r1, #10
   17c88:	add	r4, r3, #16
   17c8c:	vst1.64	{d16-d17}, [r3], lr
   17c90:	vst1.64	{d16-d17}, [r4]
   17c94:	vst1.64	{d16-d17}, [r3]
   17c98:	beq	17cb8 <__mempcpy_chk@plt+0x65f4>
   17c9c:	str	r1, [sp]
   17ca0:	mov	r1, r2
   17ca4:	mov	r3, sp
   17ca8:	mov	r2, ip
   17cac:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   17cb0:	sub	sp, fp, #8
   17cb4:	pop	{r4, sl, fp, pc}
   17cb8:	bl	11688 <abort@plt>
   17cbc:	push	{fp, lr}
   17cc0:	mov	fp, sp
   17cc4:	sub	sp, sp, #48	; 0x30
   17cc8:	vmov.i32	q8, #0	; 0x00000000
   17ccc:	mov	r3, sp
   17cd0:	mov	ip, #32
   17cd4:	cmp	r0, #10
   17cd8:	add	r2, r3, #16
   17cdc:	vst1.64	{d16-d17}, [r3], ip
   17ce0:	vst1.64	{d16-d17}, [r2]
   17ce4:	vst1.64	{d16-d17}, [r3]
   17ce8:	beq	17d08 <__mempcpy_chk@plt+0x6644>
   17cec:	str	r0, [sp]
   17cf0:	mov	r3, sp
   17cf4:	mov	r0, #0
   17cf8:	mvn	r2, #0
   17cfc:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   17d00:	mov	sp, fp
   17d04:	pop	{fp, pc}
   17d08:	bl	11688 <abort@plt>
   17d0c:	push	{fp, lr}
   17d10:	mov	fp, sp
   17d14:	sub	sp, sp, #48	; 0x30
   17d18:	vmov.i32	q8, #0	; 0x00000000
   17d1c:	mov	r3, sp
   17d20:	mov	ip, #32
   17d24:	cmp	r0, #10
   17d28:	add	lr, r3, #16
   17d2c:	vst1.64	{d16-d17}, [r3], ip
   17d30:	vst1.64	{d16-d17}, [lr]
   17d34:	vst1.64	{d16-d17}, [r3]
   17d38:	beq	17d54 <__mempcpy_chk@plt+0x6690>
   17d3c:	str	r0, [sp]
   17d40:	mov	r3, sp
   17d44:	mov	r0, #0
   17d48:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   17d4c:	mov	sp, fp
   17d50:	pop	{fp, pc}
   17d54:	bl	11688 <abort@plt>
   17d58:	push	{r4, sl, fp, lr}
   17d5c:	add	fp, sp, #8
   17d60:	sub	sp, sp, #48	; 0x30
   17d64:	mov	lr, r0
   17d68:	movw	r0, #49640	; 0xc1e8
   17d6c:	mov	ip, r1
   17d70:	mov	r1, #32
   17d74:	mov	r4, #1
   17d78:	movt	r0, #2
   17d7c:	add	r3, r0, #16
   17d80:	vld1.64	{d16-d17}, [r0], r1
   17d84:	vld1.64	{d20-d21}, [r0]
   17d88:	vld1.64	{d18-d19}, [r3]
   17d8c:	mov	r3, sp
   17d90:	add	r0, r3, #32
   17d94:	add	r1, r3, #16
   17d98:	vst1.64	{d20-d21}, [r0]
   17d9c:	mov	r0, #28
   17da0:	vst1.64	{d18-d19}, [r1]
   17da4:	mov	r1, r3
   17da8:	and	r0, r0, r2, lsr #3
   17dac:	and	r2, r2, #31
   17db0:	vst1.64	{d16-d17}, [r1], r0
   17db4:	ldr	r0, [r1, #8]
   17db8:	bic	r4, r4, r0, lsr r2
   17dbc:	eor	r0, r0, r4, lsl r2
   17dc0:	mov	r2, ip
   17dc4:	str	r0, [r1, #8]
   17dc8:	mov	r0, #0
   17dcc:	mov	r1, lr
   17dd0:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   17dd4:	sub	sp, fp, #8
   17dd8:	pop	{r4, sl, fp, pc}
   17ddc:	push	{fp, lr}
   17de0:	mov	fp, sp
   17de4:	sub	sp, sp, #48	; 0x30
   17de8:	mov	ip, r0
   17dec:	movw	r0, #49640	; 0xc1e8
   17df0:	mov	r2, #32
   17df4:	movt	r0, #2
   17df8:	add	r3, r0, #16
   17dfc:	vld1.64	{d16-d17}, [r0], r2
   17e00:	vld1.64	{d20-d21}, [r0]
   17e04:	vld1.64	{d18-d19}, [r3]
   17e08:	mov	r3, sp
   17e0c:	add	r0, r3, #32
   17e10:	add	r2, r3, #16
   17e14:	vst1.64	{d20-d21}, [r0]
   17e18:	mov	r0, #28
   17e1c:	vst1.64	{d18-d19}, [r2]
   17e20:	mov	r2, r3
   17e24:	and	r0, r0, r1, lsr #3
   17e28:	and	r1, r1, #31
   17e2c:	vst1.64	{d16-d17}, [r2], r0
   17e30:	mov	r0, #1
   17e34:	ldr	lr, [r2, #8]
   17e38:	bic	r0, r0, lr, lsr r1
   17e3c:	eor	r0, lr, r0, lsl r1
   17e40:	mov	r1, ip
   17e44:	str	r0, [r2, #8]
   17e48:	mov	r0, #0
   17e4c:	mvn	r2, #0
   17e50:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   17e54:	mov	sp, fp
   17e58:	pop	{fp, pc}
   17e5c:	push	{fp, lr}
   17e60:	mov	fp, sp
   17e64:	sub	sp, sp, #48	; 0x30
   17e68:	mov	r1, r0
   17e6c:	movw	r0, #49640	; 0xc1e8
   17e70:	mov	r3, #32
   17e74:	movt	r0, #2
   17e78:	add	r2, r0, #16
   17e7c:	vld1.64	{d16-d17}, [r0], r3
   17e80:	mov	r3, sp
   17e84:	vld1.64	{d18-d19}, [r2]
   17e88:	vld1.64	{d20-d21}, [r0]
   17e8c:	add	r2, r3, #16
   17e90:	add	r0, r3, #32
   17e94:	vst1.64	{d18-d19}, [r2]
   17e98:	vst1.64	{d20-d21}, [r0]
   17e9c:	mov	r0, #12
   17ea0:	mov	r2, r3
   17ea4:	vst1.64	{d16-d17}, [r2], r0
   17ea8:	ldr	r0, [r2]
   17eac:	orr	r0, r0, #67108864	; 0x4000000
   17eb0:	str	r0, [r2]
   17eb4:	mov	r0, #0
   17eb8:	mvn	r2, #0
   17ebc:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   17ec0:	mov	sp, fp
   17ec4:	pop	{fp, pc}
   17ec8:	push	{fp, lr}
   17ecc:	mov	fp, sp
   17ed0:	sub	sp, sp, #48	; 0x30
   17ed4:	mov	ip, r1
   17ed8:	mov	r1, r0
   17edc:	movw	r0, #49640	; 0xc1e8
   17ee0:	mov	r2, #32
   17ee4:	movt	r0, #2
   17ee8:	add	r3, r0, #16
   17eec:	vld1.64	{d16-d17}, [r0], r2
   17ef0:	vld1.64	{d18-d19}, [r3]
   17ef4:	vld1.64	{d20-d21}, [r0]
   17ef8:	mov	r3, sp
   17efc:	add	r2, r3, #16
   17f00:	add	r0, r3, #32
   17f04:	vst1.64	{d18-d19}, [r2]
   17f08:	vst1.64	{d20-d21}, [r0]
   17f0c:	mov	r0, #12
   17f10:	mov	r2, r3
   17f14:	vst1.64	{d16-d17}, [r2], r0
   17f18:	ldr	r0, [r2]
   17f1c:	orr	r0, r0, #67108864	; 0x4000000
   17f20:	str	r0, [r2]
   17f24:	mov	r0, #0
   17f28:	mov	r2, ip
   17f2c:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   17f30:	mov	sp, fp
   17f34:	pop	{fp, pc}
   17f38:	push	{r4, sl, fp, lr}
   17f3c:	add	fp, sp, #8
   17f40:	sub	sp, sp, #96	; 0x60
   17f44:	vmov.i32	q8, #0	; 0x00000000
   17f48:	mov	ip, r2
   17f4c:	mov	r2, sp
   17f50:	mov	r4, #28
   17f54:	cmp	r1, #10
   17f58:	mov	r3, r2
   17f5c:	add	lr, r2, #16
   17f60:	vst1.64	{d16-d17}, [r3], r4
   17f64:	vst1.64	{d16-d17}, [lr]
   17f68:	vst1.32	{d16-d17}, [r3]
   17f6c:	beq	17fbc <__mempcpy_chk@plt+0x68f8>
   17f70:	vld1.64	{d16-d17}, [r2], r4
   17f74:	vld1.64	{d18-d19}, [lr]
   17f78:	add	r3, sp, #48	; 0x30
   17f7c:	vld1.32	{d20-d21}, [r2]
   17f80:	add	r2, r3, #20
   17f84:	add	r4, r3, #4
   17f88:	vst1.32	{d18-d19}, [r2]
   17f8c:	add	r2, r3, #32
   17f90:	vst1.32	{d16-d17}, [r4]
   17f94:	vst1.32	{d20-d21}, [r2]
   17f98:	str	r1, [sp, #48]	; 0x30
   17f9c:	mvn	r2, #0
   17fa0:	ldr	r1, [sp, #60]	; 0x3c
   17fa4:	orr	r1, r1, #67108864	; 0x4000000
   17fa8:	str	r1, [sp, #60]	; 0x3c
   17fac:	mov	r1, ip
   17fb0:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   17fb4:	sub	sp, fp, #8
   17fb8:	pop	{r4, sl, fp, pc}
   17fbc:	bl	11688 <abort@plt>
   17fc0:	push	{r4, r5, r6, sl, fp, lr}
   17fc4:	add	fp, sp, #16
   17fc8:	sub	sp, sp, #48	; 0x30
   17fcc:	mov	ip, r3
   17fd0:	movw	r3, #49640	; 0xc1e8
   17fd4:	mov	r6, #32
   17fd8:	cmp	r1, #0
   17fdc:	mov	r4, sp
   17fe0:	movt	r3, #2
   17fe4:	cmpne	r2, #0
   17fe8:	add	r5, r4, #16
   17fec:	add	lr, r3, #16
   17ff0:	vld1.64	{d16-d17}, [r3], r6
   17ff4:	vld1.64	{d18-d19}, [lr]
   17ff8:	vld1.64	{d20-d21}, [r3]
   17ffc:	mov	r3, #10
   18000:	vst1.64	{d16-d17}, [r4], r6
   18004:	vst1.64	{d18-d19}, [r5]
   18008:	vst1.64	{d20-d21}, [r4]
   1800c:	str	r3, [sp]
   18010:	bne	18018 <__mempcpy_chk@plt+0x6954>
   18014:	bl	11688 <abort@plt>
   18018:	str	r2, [sp, #44]	; 0x2c
   1801c:	str	r1, [sp, #40]	; 0x28
   18020:	mov	r3, sp
   18024:	mov	r1, ip
   18028:	mvn	r2, #0
   1802c:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   18030:	sub	sp, fp, #16
   18034:	pop	{r4, r5, r6, sl, fp, pc}
   18038:	push	{r4, r5, r6, sl, fp, lr}
   1803c:	add	fp, sp, #16
   18040:	sub	sp, sp, #48	; 0x30
   18044:	mov	lr, r3
   18048:	movw	r3, #49640	; 0xc1e8
   1804c:	mov	r6, #32
   18050:	cmp	r1, #0
   18054:	mov	r4, sp
   18058:	movt	r3, #2
   1805c:	cmpne	r2, #0
   18060:	add	r5, r4, #16
   18064:	add	ip, r3, #16
   18068:	vld1.64	{d16-d17}, [r3], r6
   1806c:	vld1.64	{d18-d19}, [ip]
   18070:	vld1.64	{d20-d21}, [r3]
   18074:	mov	r3, #10
   18078:	vst1.64	{d16-d17}, [r4], r6
   1807c:	vst1.64	{d18-d19}, [r5]
   18080:	vst1.64	{d20-d21}, [r4]
   18084:	str	r3, [sp]
   18088:	bne	18090 <__mempcpy_chk@plt+0x69cc>
   1808c:	bl	11688 <abort@plt>
   18090:	ldr	ip, [fp, #8]
   18094:	str	r2, [sp, #44]	; 0x2c
   18098:	str	r1, [sp, #40]	; 0x28
   1809c:	mov	r3, sp
   180a0:	mov	r1, lr
   180a4:	mov	r2, ip
   180a8:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   180ac:	sub	sp, fp, #16
   180b0:	pop	{r4, r5, r6, sl, fp, pc}
   180b4:	push	{r4, sl, fp, lr}
   180b8:	add	fp, sp, #8
   180bc:	sub	sp, sp, #48	; 0x30
   180c0:	movw	r3, #49640	; 0xc1e8
   180c4:	mov	lr, #32
   180c8:	mov	ip, r2
   180cc:	cmp	r0, #0
   180d0:	movt	r3, #2
   180d4:	cmpne	r1, #0
   180d8:	add	r2, r3, #16
   180dc:	vld1.64	{d16-d17}, [r3], lr
   180e0:	vld1.64	{d20-d21}, [r3]
   180e4:	vld1.64	{d18-d19}, [r2]
   180e8:	mov	r2, sp
   180ec:	add	r4, r2, #16
   180f0:	vst1.64	{d16-d17}, [r2], lr
   180f4:	vst1.64	{d20-d21}, [r2]
   180f8:	mov	r2, #10
   180fc:	vst1.64	{d18-d19}, [r4]
   18100:	str	r2, [sp]
   18104:	bne	1810c <__mempcpy_chk@plt+0x6a48>
   18108:	bl	11688 <abort@plt>
   1810c:	str	r1, [sp, #44]	; 0x2c
   18110:	str	r0, [sp, #40]	; 0x28
   18114:	mov	r3, sp
   18118:	mov	r0, #0
   1811c:	mov	r1, ip
   18120:	mvn	r2, #0
   18124:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   18128:	sub	sp, fp, #8
   1812c:	pop	{r4, sl, fp, pc}
   18130:	push	{r4, r5, fp, lr}
   18134:	add	fp, sp, #8
   18138:	sub	sp, sp, #48	; 0x30
   1813c:	mov	ip, r3
   18140:	movw	r3, #49640	; 0xc1e8
   18144:	mov	r4, #32
   18148:	mov	lr, r2
   1814c:	cmp	r0, #0
   18150:	movt	r3, #2
   18154:	cmpne	r1, #0
   18158:	add	r2, r3, #16
   1815c:	vld1.64	{d16-d17}, [r3], r4
   18160:	vld1.64	{d20-d21}, [r3]
   18164:	vld1.64	{d18-d19}, [r2]
   18168:	mov	r2, sp
   1816c:	add	r5, r2, #16
   18170:	vst1.64	{d16-d17}, [r2], r4
   18174:	vst1.64	{d20-d21}, [r2]
   18178:	mov	r2, #10
   1817c:	vst1.64	{d18-d19}, [r5]
   18180:	str	r2, [sp]
   18184:	bne	1818c <__mempcpy_chk@plt+0x6ac8>
   18188:	bl	11688 <abort@plt>
   1818c:	str	r1, [sp, #44]	; 0x2c
   18190:	str	r0, [sp, #40]	; 0x28
   18194:	mov	r3, sp
   18198:	mov	r0, #0
   1819c:	mov	r1, lr
   181a0:	mov	r2, ip
   181a4:	bl	17a48 <__mempcpy_chk@plt+0x6384>
   181a8:	sub	sp, fp, #8
   181ac:	pop	{r4, r5, fp, pc}
   181b0:	movw	r3, #49488	; 0xc150
   181b4:	movt	r3, #2
   181b8:	b	17a48 <__mempcpy_chk@plt+0x6384>
   181bc:	movw	r3, #49488	; 0xc150
   181c0:	mov	r2, r1
   181c4:	mov	r1, r0
   181c8:	mov	r0, #0
   181cc:	movt	r3, #2
   181d0:	b	17a48 <__mempcpy_chk@plt+0x6384>
   181d4:	movw	r3, #49488	; 0xc150
   181d8:	mvn	r2, #0
   181dc:	movt	r3, #2
   181e0:	b	17a48 <__mempcpy_chk@plt+0x6384>
   181e4:	movw	r3, #49488	; 0xc150
   181e8:	mov	r1, r0
   181ec:	mov	r0, #0
   181f0:	mvn	r2, #0
   181f4:	movt	r3, #2
   181f8:	b	17a48 <__mempcpy_chk@plt+0x6384>
   181fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18200:	add	fp, sp, #28
   18204:	sub	sp, sp, #220	; 0xdc
   18208:	ldr	r7, [fp, #8]
   1820c:	mov	r4, r3
   18210:	mov	r9, r2
   18214:	mov	r6, r1
   18218:	mov	sl, r0
   1821c:	str	r7, [sp]
   18220:	bl	1158c <renameat2@plt>
   18224:	mov	r5, r0
   18228:	bl	11550 <__errno_location@plt>
   1822c:	cmn	r5, #1
   18230:	bgt	182fc <__mempcpy_chk@plt+0x6c38>
   18234:	mov	r8, r0
   18238:	ldr	r0, [r0]
   1823c:	cmp	r0, #22
   18240:	cmpne	r0, #95	; 0x5f
   18244:	bne	1829c <__mempcpy_chk@plt+0x6bd8>
   18248:	cmp	r7, #0
   1824c:	beq	182a8 <__mempcpy_chk@plt+0x6be4>
   18250:	cmp	r7, #1
   18254:	bne	182f0 <__mempcpy_chk@plt+0x6c2c>
   18258:	mov	r0, #256	; 0x100
   1825c:	add	r3, sp, #8
   18260:	mov	r1, r9
   18264:	mov	r2, r4
   18268:	str	r0, [sp]
   1826c:	mov	r0, #3
   18270:	bl	1143c <__fxstatat64@plt>
   18274:	cmp	r0, #0
   18278:	beq	18294 <__mempcpy_chk@plt+0x6bd0>
   1827c:	ldr	r0, [r8]
   18280:	cmp	r0, #2
   18284:	beq	1837c <__mempcpy_chk@plt+0x6cb8>
   18288:	mvn	r5, #0
   1828c:	cmp	r0, #75	; 0x4b
   18290:	bne	182fc <__mempcpy_chk@plt+0x6c38>
   18294:	mov	r0, #17
   18298:	b	182f4 <__mempcpy_chk@plt+0x6c30>
   1829c:	cmp	r0, #38	; 0x26
   182a0:	beq	18248 <__mempcpy_chk@plt+0x6b84>
   182a4:	b	182fc <__mempcpy_chk@plt+0x6c38>
   182a8:	mov	r7, #0
   182ac:	mov	r0, r6
   182b0:	bl	11538 <strlen@plt>
   182b4:	mov	r5, r0
   182b8:	mov	r0, r4
   182bc:	bl	11538 <strlen@plt>
   182c0:	cmp	r5, #0
   182c4:	cmpne	r0, #0
   182c8:	bne	18308 <__mempcpy_chk@plt+0x6c44>
   182cc:	mov	r0, sl
   182d0:	mov	r1, r6
   182d4:	mov	r2, r9
   182d8:	mov	r3, r4
   182dc:	bl	11640 <renameat@plt>
   182e0:	mov	r5, r0
   182e4:	mov	r0, r5
   182e8:	sub	sp, fp, #28
   182ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   182f0:	mov	r0, #95	; 0x5f
   182f4:	str	r0, [r8]
   182f8:	mvn	r5, #0
   182fc:	mov	r0, r5
   18300:	sub	sp, fp, #28
   18304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18308:	add	r1, r5, r6
   1830c:	ldrb	r1, [r1, #-1]
   18310:	cmp	r1, #47	; 0x2f
   18314:	beq	18328 <__mempcpy_chk@plt+0x6c64>
   18318:	add	r0, r0, r4
   1831c:	ldrb	r0, [r0, #-1]
   18320:	cmp	r0, #47	; 0x2f
   18324:	bne	182cc <__mempcpy_chk@plt+0x6c08>
   18328:	mov	r0, #256	; 0x100
   1832c:	add	r3, sp, #112	; 0x70
   18330:	mov	r1, sl
   18334:	mov	r2, r6
   18338:	str	r0, [sp]
   1833c:	mov	r0, #3
   18340:	bl	1143c <__fxstatat64@plt>
   18344:	mvn	r5, #0
   18348:	cmp	r0, #0
   1834c:	bne	182fc <__mempcpy_chk@plt+0x6c38>
   18350:	cmp	r7, #0
   18354:	beq	18384 <__mempcpy_chk@plt+0x6cc0>
   18358:	ldr	r0, [sp, #128]	; 0x80
   1835c:	and	r0, r0, #61440	; 0xf000
   18360:	cmp	r0, #16384	; 0x4000
   18364:	beq	182cc <__mempcpy_chk@plt+0x6c08>
   18368:	mov	r0, #2
   1836c:	str	r0, [r8]
   18370:	mov	r0, r5
   18374:	sub	sp, fp, #28
   18378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1837c:	mov	r7, #1
   18380:	b	182ac <__mempcpy_chk@plt+0x6be8>
   18384:	mov	r0, #256	; 0x100
   18388:	add	r3, sp, #8
   1838c:	mov	r1, r9
   18390:	mov	r2, r4
   18394:	str	r0, [sp]
   18398:	mov	r0, #3
   1839c:	bl	1143c <__fxstatat64@plt>
   183a0:	cmp	r0, #0
   183a4:	beq	183c8 <__mempcpy_chk@plt+0x6d04>
   183a8:	ldr	r0, [r8]
   183ac:	cmp	r0, #2
   183b0:	bne	182fc <__mempcpy_chk@plt+0x6c38>
   183b4:	ldr	r0, [sp, #128]	; 0x80
   183b8:	and	r0, r0, #61440	; 0xf000
   183bc:	cmp	r0, #16384	; 0x4000
   183c0:	beq	182cc <__mempcpy_chk@plt+0x6c08>
   183c4:	b	182fc <__mempcpy_chk@plt+0x6c38>
   183c8:	ldr	r0, [sp, #24]
   183cc:	and	r0, r0, #61440	; 0xf000
   183d0:	cmp	r0, #16384	; 0x4000
   183d4:	bne	183fc <__mempcpy_chk@plt+0x6d38>
   183d8:	ldr	r0, [sp, #128]	; 0x80
   183dc:	and	r0, r0, #61440	; 0xf000
   183e0:	cmp	r0, #16384	; 0x4000
   183e4:	beq	182cc <__mempcpy_chk@plt+0x6c08>
   183e8:	mov	r0, #21
   183ec:	str	r0, [r8]
   183f0:	mov	r0, r5
   183f4:	sub	sp, fp, #28
   183f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183fc:	mov	r0, #20
   18400:	str	r0, [r8]
   18404:	mov	r0, r5
   18408:	sub	sp, fp, #28
   1840c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18410:	mov	r3, r1
   18414:	mov	r1, r0
   18418:	mvn	r0, #99	; 0x63
   1841c:	mvn	r2, #99	; 0x63
   18420:	b	18424 <__mempcpy_chk@plt+0x6d60>
   18424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18428:	add	fp, sp, #28
   1842c:	sub	sp, sp, #228	; 0xe4
   18430:	mov	sl, r0
   18434:	mov	r0, r1
   18438:	mov	r9, r3
   1843c:	str	r2, [sp, #12]
   18440:	mov	r7, r1
   18444:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   18448:	mov	r6, r0
   1844c:	mov	r0, r9
   18450:	bl	13cf8 <__mempcpy_chk@plt+0x2634>
   18454:	mov	r5, r0
   18458:	mov	r0, r6
   1845c:	bl	13d58 <__mempcpy_chk@plt+0x2694>
   18460:	mov	r8, r0
   18464:	mov	r0, r5
   18468:	bl	13d58 <__mempcpy_chk@plt+0x2694>
   1846c:	mov	r4, #0
   18470:	cmp	r8, r0
   18474:	bne	18494 <__mempcpy_chk@plt+0x6dd0>
   18478:	mov	r0, r6
   1847c:	mov	r1, r5
   18480:	mov	r2, r8
   18484:	stmib	sp, {r9, sl}
   18488:	bl	1152c <bcmp@plt>
   1848c:	cmp	r0, #0
   18490:	beq	184a0 <__mempcpy_chk@plt+0x6ddc>
   18494:	mov	r0, r4
   18498:	sub	sp, fp, #28
   1849c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   184a0:	mov	r0, r7
   184a4:	bl	14784 <__mempcpy_chk@plt+0x30c0>
   184a8:	ldr	r1, [sp, #8]
   184ac:	mov	r4, r0
   184b0:	mov	r6, #256	; 0x100
   184b4:	add	r3, sp, #120	; 0x78
   184b8:	mov	r0, #3
   184bc:	mov	r2, r4
   184c0:	str	r6, [sp]
   184c4:	bl	1143c <__fxstatat64@plt>
   184c8:	cmp	r0, #0
   184cc:	beq	184ec <__mempcpy_chk@plt+0x6e28>
   184d0:	bl	11550 <__errno_location@plt>
   184d4:	ldr	r1, [r0]
   184d8:	movw	r2, #48251	; 0xbc7b
   184dc:	mov	r0, #1
   184e0:	mov	r3, r4
   184e4:	movt	r2, #1
   184e8:	bl	114a8 <error@plt>
   184ec:	mov	r0, r4
   184f0:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   184f4:	ldr	r0, [sp, #4]
   184f8:	bl	14784 <__mempcpy_chk@plt+0x30c0>
   184fc:	ldr	r1, [sp, #12]
   18500:	mov	r5, r0
   18504:	add	r3, sp, #16
   18508:	mov	r0, #3
   1850c:	str	r6, [sp]
   18510:	mov	r2, r5
   18514:	bl	1143c <__fxstatat64@plt>
   18518:	cmp	r0, #0
   1851c:	beq	1853c <__mempcpy_chk@plt+0x6e78>
   18520:	bl	11550 <__errno_location@plt>
   18524:	ldr	r1, [r0]
   18528:	movw	r2, #48251	; 0xbc7b
   1852c:	mov	r0, #1
   18530:	mov	r3, r5
   18534:	movt	r2, #1
   18538:	bl	114a8 <error@plt>
   1853c:	ldr	r0, [sp, #112]	; 0x70
   18540:	ldr	r2, [sp, #216]	; 0xd8
   18544:	ldr	r1, [sp, #116]	; 0x74
   18548:	ldr	r3, [sp, #220]	; 0xdc
   1854c:	mov	r4, #0
   18550:	eor	r1, r3, r1
   18554:	eor	r0, r2, r0
   18558:	orrs	r0, r0, r1
   1855c:	bne	18584 <__mempcpy_chk@plt+0x6ec0>
   18560:	ldr	r0, [sp, #16]
   18564:	ldr	r2, [sp, #120]	; 0x78
   18568:	ldr	r1, [sp, #20]
   1856c:	ldr	r3, [sp, #124]	; 0x7c
   18570:	eor	r1, r3, r1
   18574:	eor	r0, r2, r0
   18578:	orr	r0, r0, r1
   1857c:	clz	r0, r0
   18580:	lsr	r4, r0, #5
   18584:	mov	r0, r5
   18588:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   1858c:	mov	r0, r4
   18590:	sub	sp, fp, #28
   18594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18598:	push	{r4, r5, r6, sl, fp, lr}
   1859c:	add	fp, sp, #16
   185a0:	ldr	r4, [r0], #8
   185a4:	mov	r5, r1
   185a8:	cmp	r4, r0
   185ac:	beq	185d0 <__mempcpy_chk@plt+0x6f0c>
   185b0:	mov	r0, r4
   185b4:	mov	r1, r5
   185b8:	bl	198f8 <__mempcpy_chk@plt+0x8234>
   185bc:	cmp	r0, #0
   185c0:	mov	r6, r0
   185c4:	moveq	r6, r4
   185c8:	mov	r0, r6
   185cc:	pop	{r4, r5, r6, sl, fp, pc}
   185d0:	mov	r0, r5
   185d4:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   185d8:	cmp	r0, #0
   185dc:	beq	185f8 <__mempcpy_chk@plt+0x6f34>
   185e0:	mov	r1, r4
   185e4:	mov	r2, r5
   185e8:	mov	r6, r0
   185ec:	bl	113e8 <memcpy@plt>
   185f0:	mov	r0, r6
   185f4:	pop	{r4, r5, r6, sl, fp, pc}
   185f8:	mov	r6, #0
   185fc:	mov	r0, r6
   18600:	pop	{r4, r5, r6, sl, fp, pc}
   18604:	push	{r4, r5, r6, sl, fp, lr}
   18608:	add	fp, sp, #16
   1860c:	mov	r4, r0
   18610:	add	r6, r0, #8
   18614:	ldrd	r0, [r0]
   18618:	lsl	r5, r1, #1
   1861c:	cmp	r0, r6
   18620:	beq	1862c <__mempcpy_chk@plt+0x6f68>
   18624:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   18628:	ldr	r1, [r4, #4]
   1862c:	cmp	r5, r1
   18630:	bcc	18654 <__mempcpy_chk@plt+0x6f90>
   18634:	mov	r0, r5
   18638:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   1863c:	cmp	r0, #0
   18640:	strne	r0, [r4]
   18644:	movne	r0, #1
   18648:	strne	r5, [r4, #4]
   1864c:	popne	{r4, r5, r6, sl, fp, pc}
   18650:	b	18660 <__mempcpy_chk@plt+0x6f9c>
   18654:	bl	11550 <__errno_location@plt>
   18658:	mov	r1, #12
   1865c:	str	r1, [r0]
   18660:	mov	r0, #0
   18664:	mov	r5, #1024	; 0x400
   18668:	str	r6, [r4]
   1866c:	str	r5, [r4, #4]
   18670:	pop	{r4, r5, r6, sl, fp, pc}
   18674:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18678:	add	fp, sp, #24
   1867c:	ldrd	r8, [r0]
   18680:	add	r7, r0, #8
   18684:	mov	r4, r0
   18688:	lsl	r5, r9, #1
   1868c:	cmp	r8, r7
   18690:	beq	186c4 <__mempcpy_chk@plt+0x7000>
   18694:	cmp	r5, r9
   18698:	bcc	186fc <__mempcpy_chk@plt+0x7038>
   1869c:	mov	r0, r8
   186a0:	mov	r1, r5
   186a4:	bl	198f8 <__mempcpy_chk@plt+0x8234>
   186a8:	mov	r6, r0
   186ac:	cmp	r0, #0
   186b0:	beq	1870c <__mempcpy_chk@plt+0x7048>
   186b4:	mov	r0, #1
   186b8:	str	r6, [r4]
   186bc:	str	r5, [r4, #4]
   186c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   186c4:	mov	r0, r5
   186c8:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   186cc:	cmp	r0, #0
   186d0:	beq	186f4 <__mempcpy_chk@plt+0x7030>
   186d4:	ldr	r2, [r4, #4]
   186d8:	mov	r1, r8
   186dc:	mov	r6, r0
   186e0:	bl	113e8 <memcpy@plt>
   186e4:	mov	r0, #1
   186e8:	str	r6, [r4]
   186ec:	str	r5, [r4, #4]
   186f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   186f4:	mov	r0, #0
   186f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   186fc:	bl	11550 <__errno_location@plt>
   18700:	mov	r1, #12
   18704:	str	r1, [r0]
   18708:	b	18710 <__mempcpy_chk@plt+0x704c>
   1870c:	ldr	r8, [r4]
   18710:	mov	r0, r8
   18714:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   18718:	mov	r0, #0
   1871c:	mov	r5, #1024	; 0x400
   18720:	str	r7, [r4]
   18724:	str	r5, [r4, #4]
   18728:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1872c:	push	{fp, lr}
   18730:	mov	fp, sp
   18734:	sub	sp, sp, #8
   18738:	str	r2, [sp, #4]
   1873c:	ldr	r2, [fp, #8]
   18740:	str	r2, [sp]
   18744:	movw	r2, #47288	; 0xb8b8
   18748:	movt	r2, #1
   1874c:	ldr	r3, [r2, r3, lsl #2]
   18750:	add	r2, sp, #4
   18754:	bl	187d0 <__mempcpy_chk@plt+0x710c>
   18758:	mov	sp, fp
   1875c:	pop	{fp, pc}
   18760:	ldr	r1, [r1]
   18764:	mov	r2, #384	; 0x180
   18768:	orr	r1, r1, #194	; 0xc2
   1876c:	bic	r1, r1, #1
   18770:	b	114b4 <open64@plt>
   18774:	mov	r1, #448	; 0x1c0
   18778:	b	11568 <mkdir@plt>
   1877c:	push	{r4, sl, fp, lr}
   18780:	add	fp, sp, #8
   18784:	sub	sp, sp, #104	; 0x68
   18788:	mov	r1, r0
   1878c:	mov	r2, sp
   18790:	mov	r0, #3
   18794:	bl	116a0 <__lxstat64@plt>
   18798:	mov	r4, r0
   1879c:	bl	11550 <__errno_location@plt>
   187a0:	cmp	r4, #0
   187a4:	beq	187b4 <__mempcpy_chk@plt+0x70f0>
   187a8:	ldr	r1, [r0]
   187ac:	cmp	r1, #75	; 0x4b
   187b0:	bne	187bc <__mempcpy_chk@plt+0x70f8>
   187b4:	mov	r1, #17
   187b8:	str	r1, [r0]
   187bc:	ldr	r0, [r0]
   187c0:	subs	r0, r0, #2
   187c4:	mvnne	r0, #0
   187c8:	sub	sp, fp, #8
   187cc:	pop	{r4, sl, fp, pc}
   187d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187d4:	add	fp, sp, #28
   187d8:	sub	sp, sp, #68	; 0x44
   187dc:	mov	r8, r3
   187e0:	mov	r9, r2
   187e4:	mov	r5, r1
   187e8:	mov	r6, r0
   187ec:	bl	11550 <__errno_location@plt>
   187f0:	mov	r7, r0
   187f4:	ldr	sl, [r0]
   187f8:	mov	r0, #0
   187fc:	str	r0, [sp, #44]	; 0x2c
   18800:	add	r0, sp, #40	; 0x28
   18804:	lsr	r0, r0, #3
   18808:	str	r0, [sp, #40]	; 0x28
   1880c:	ldr	r0, [fp, #8]
   18810:	add	r4, r0, r5
   18814:	mov	r5, r0
   18818:	mov	r0, r6
   1881c:	bl	11538 <strlen@plt>
   18820:	cmp	r0, r4
   18824:	bcc	18848 <__mempcpy_chk@plt+0x7184>
   18828:	movw	r1, #46727	; 0xb687
   1882c:	sub	r0, r0, r4
   18830:	movt	r1, #1
   18834:	add	r0, r6, r0
   18838:	str	r0, [sp, #32]
   1883c:	bl	116b8 <strspn@plt>
   18840:	cmp	r0, r5
   18844:	bcs	1885c <__mempcpy_chk@plt+0x7198>
   18848:	mov	r0, #22
   1884c:	str	r0, [r7]
   18850:	mvn	r0, #0
   18854:	sub	sp, fp, #28
   18858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1885c:	cmp	r5, #0
   18860:	str	r6, [sp, #20]
   18864:	str	sl, [sp, #4]
   18868:	beq	18ac0 <__mempcpy_chk@plt+0x73fc>
   1886c:	movw	r0, #34684	; 0x877c
   18870:	movw	r4, #39131	; 0x98db
   18874:	movw	r6, #21503	; 0x53ff
   18878:	mov	r2, #0
   1887c:	mov	r1, #0
   18880:	str	r7, [sp, #8]
   18884:	str	r8, [sp, #16]
   18888:	str	r9, [sp, #12]
   1888c:	movt	r0, #1
   18890:	movt	r4, #62617	; 0xf499
   18894:	movt	r6, #2727	; 0xaa7
   18898:	sub	r0, r8, r0
   1889c:	clz	r0, r0
   188a0:	lsr	r0, r0, #5
   188a4:	str	r0, [sp, #28]
   188a8:	mov	sl, #0
   188ac:	sub	r7, fp, #40	; 0x28
   188b0:	str	r1, [sp, #24]
   188b4:	ldr	r8, [sp, #40]	; 0x28
   188b8:	ldr	r9, [sp, #44]	; 0x2c
   188bc:	cmp	r2, #0
   188c0:	beq	18928 <__mempcpy_chk@plt+0x7264>
   188c4:	str	r2, [sp, #36]	; 0x24
   188c8:	mov	r0, r8
   188cc:	mov	r1, r9
   188d0:	mov	r2, #62	; 0x3e
   188d4:	mov	r3, #0
   188d8:	bl	1a3c0 <__mempcpy_chk@plt+0x8cfc>
   188dc:	rsb	r2, r0, r0, lsl #5
   188e0:	movw	r3, #47300	; 0xb8c4
   188e4:	movt	r3, #1
   188e8:	sub	r2, r8, r2, lsl #1
   188ec:	ldrb	r2, [r3, r2]
   188f0:	ldr	r3, [sp, #32]
   188f4:	strb	r2, [r3, sl]
   188f8:	ldr	r2, [sp, #36]	; 0x24
   188fc:	str	r0, [sp, #40]	; 0x28
   18900:	ldr	r0, [fp, #8]
   18904:	add	sl, sl, #1
   18908:	str	r1, [sp, #44]	; 0x2c
   1890c:	sub	r2, r2, #1
   18910:	cmp	sl, r0
   18914:	beq	18a70 <__mempcpy_chk@plt+0x73ac>
   18918:	ldr	r8, [sp, #40]	; 0x28
   1891c:	ldr	r9, [sp, #44]	; 0x2c
   18920:	cmp	r2, #0
   18924:	bne	188c4 <__mempcpy_chk@plt+0x7200>
   18928:	ldr	r0, [sp, #28]
   1892c:	tst	r0, #1
   18930:	beq	18958 <__mempcpy_chk@plt+0x7294>
   18934:	mov	r0, r7
   18938:	mov	r1, #8
   1893c:	mov	r2, #1
   18940:	bl	11658 <getrandom@plt>
   18944:	cmp	r0, #8
   18948:	bne	18958 <__mempcpy_chk@plt+0x7294>
   1894c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   18950:	ldr	r9, [fp, #-36]	; 0xffffffdc
   18954:	b	189a0 <__mempcpy_chk@plt+0x72dc>
   18958:	mov	r0, #1
   1895c:	add	r1, sp, #48	; 0x30
   18960:	bl	113d0 <clock_gettime@plt>
   18964:	ldr	r0, [sp, #52]	; 0x34
   18968:	movw	r2, #45309	; 0xb0fd
   1896c:	movw	r5, #12006	; 0x2ee6
   18970:	movt	r2, #34736	; 0x87b0
   18974:	movt	r5, #10171	; 0x27bb
   18978:	mov	ip, r2
   1897c:	eor	r1, r8, r0
   18980:	eor	r0, r9, r0, asr #31
   18984:	umull	r2, r3, r1, r2
   18988:	mul	r0, r0, ip
   1898c:	mla	r1, r1, r5, r3
   18990:	movw	r3, #62253	; 0xf32d
   18994:	movt	r3, #46340	; 0xb504
   18998:	adds	r8, r2, r3
   1899c:	adc	r9, r1, r0
   189a0:	subs	r0, r6, r8
   189a4:	str	r8, [sp, #40]	; 0x28
   189a8:	str	r9, [sp, #44]	; 0x2c
   189ac:	sbcs	r0, r4, r9
   189b0:	bcs	18a5c <__mempcpy_chk@plt+0x7398>
   189b4:	mov	r0, #10
   189b8:	str	r0, [sp, #36]	; 0x24
   189bc:	mov	r0, #1
   189c0:	str	r0, [sp, #28]
   189c4:	b	189e4 <__mempcpy_chk@plt+0x7320>
   189c8:	ldr	r8, [fp, #-40]	; 0xffffffd8
   189cc:	ldr	r9, [fp, #-36]	; 0xffffffdc
   189d0:	subs	r0, r6, r8
   189d4:	str	r8, [sp, #40]	; 0x28
   189d8:	str	r9, [sp, #44]	; 0x2c
   189dc:	sbcs	r0, r4, r9
   189e0:	bcs	188c8 <__mempcpy_chk@plt+0x7204>
   189e4:	mov	r0, r7
   189e8:	mov	r1, #8
   189ec:	mov	r2, #1
   189f0:	bl	11658 <getrandom@plt>
   189f4:	cmp	r0, #8
   189f8:	beq	189c8 <__mempcpy_chk@plt+0x7304>
   189fc:	mov	r0, #1
   18a00:	add	r1, sp, #48	; 0x30
   18a04:	bl	113d0 <clock_gettime@plt>
   18a08:	ldr	r0, [sp, #52]	; 0x34
   18a0c:	movw	r2, #45309	; 0xb0fd
   18a10:	mov	r5, r6
   18a14:	mov	r6, r4
   18a18:	movw	r4, #12006	; 0x2ee6
   18a1c:	movt	r2, #34736	; 0x87b0
   18a20:	movt	r4, #10171	; 0x27bb
   18a24:	mov	r7, r2
   18a28:	eor	r1, r8, r0
   18a2c:	eor	r0, r9, r0, asr #31
   18a30:	umull	r2, r3, r1, r2
   18a34:	mul	r0, r0, r7
   18a38:	sub	r7, fp, #40	; 0x28
   18a3c:	mla	r1, r1, r4, r3
   18a40:	movw	r3, #62253	; 0xf32d
   18a44:	mov	r4, r6
   18a48:	mov	r6, r5
   18a4c:	movt	r3, #46340	; 0xb504
   18a50:	adds	r8, r2, r3
   18a54:	adc	r9, r1, r0
   18a58:	b	189d0 <__mempcpy_chk@plt+0x730c>
   18a5c:	mov	r0, #10
   18a60:	str	r0, [sp, #36]	; 0x24
   18a64:	mov	r0, #1
   18a68:	str	r0, [sp, #28]
   18a6c:	b	188c8 <__mempcpy_chk@plt+0x7204>
   18a70:	ldr	r9, [sp, #12]
   18a74:	ldr	r0, [sp, #20]
   18a78:	ldr	r8, [sp, #16]
   18a7c:	mov	r5, r2
   18a80:	mov	r1, r9
   18a84:	blx	r8
   18a88:	cmn	r0, #1
   18a8c:	bgt	18b04 <__mempcpy_chk@plt+0x7440>
   18a90:	ldr	r7, [sp, #8]
   18a94:	ldr	r0, [r7]
   18a98:	cmp	r0, #17
   18a9c:	bne	18850 <__mempcpy_chk@plt+0x718c>
   18aa0:	ldr	r1, [sp, #24]
   18aa4:	movw	r0, #41720	; 0xa2f8
   18aa8:	mov	r2, r5
   18aac:	movt	r0, #3
   18ab0:	add	r1, r1, #1
   18ab4:	cmp	r1, r0
   18ab8:	bne	188a8 <__mempcpy_chk@plt+0x71e4>
   18abc:	b	18af0 <__mempcpy_chk@plt+0x742c>
   18ac0:	movw	r4, #41720	; 0xa2f8
   18ac4:	movt	r4, #3
   18ac8:	ldr	r0, [sp, #20]
   18acc:	mov	r1, r9
   18ad0:	blx	r8
   18ad4:	cmp	r0, #0
   18ad8:	bpl	18b08 <__mempcpy_chk@plt+0x7444>
   18adc:	ldr	r0, [r7]
   18ae0:	cmp	r0, #17
   18ae4:	bne	18850 <__mempcpy_chk@plt+0x718c>
   18ae8:	subs	r4, r4, #1
   18aec:	bne	18ac8 <__mempcpy_chk@plt+0x7404>
   18af0:	mov	r0, #17
   18af4:	str	r0, [r7]
   18af8:	mvn	r0, #0
   18afc:	sub	sp, fp, #28
   18b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b04:	ldr	r7, [sp, #8]
   18b08:	ldr	r1, [sp, #4]
   18b0c:	str	r1, [r7]
   18b10:	sub	sp, fp, #28
   18b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b18:	push	{fp, lr}
   18b1c:	mov	fp, sp
   18b20:	sub	sp, sp, #8
   18b24:	str	r2, [sp, #4]
   18b28:	mov	r2, #6
   18b2c:	str	r2, [sp]
   18b30:	movw	r2, #47288	; 0xb8b8
   18b34:	movt	r2, #1
   18b38:	ldr	r3, [r2, r3, lsl #2]
   18b3c:	add	r2, sp, #4
   18b40:	bl	187d0 <__mempcpy_chk@plt+0x710c>
   18b44:	mov	sp, fp
   18b48:	pop	{fp, pc}
   18b4c:	push	{fp, lr}
   18b50:	mov	fp, sp
   18b54:	sub	sp, sp, #8
   18b58:	mov	ip, #6
   18b5c:	str	ip, [sp]
   18b60:	bl	187d0 <__mempcpy_chk@plt+0x710c>
   18b64:	mov	sp, fp
   18b68:	pop	{fp, pc}
   18b6c:	push	{r4, r5, r6, r7, fp, lr}
   18b70:	add	fp, sp, #16
   18b74:	mov	r4, r0
   18b78:	cmp	r0, #2
   18b7c:	bhi	18bac <__mempcpy_chk@plt+0x74e8>
   18b80:	mov	r0, r4
   18b84:	bl	1a0c8 <__mempcpy_chk@plt+0x8a04>
   18b88:	mov	r5, r0
   18b8c:	bl	11550 <__errno_location@plt>
   18b90:	ldr	r7, [r0]
   18b94:	mov	r6, r0
   18b98:	mov	r0, r4
   18b9c:	bl	11694 <close@plt>
   18ba0:	mov	r0, r5
   18ba4:	str	r7, [r6]
   18ba8:	pop	{r4, r5, r6, r7, fp, pc}
   18bac:	mov	r0, r4
   18bb0:	pop	{r4, r5, r6, r7, fp, pc}
   18bb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18bb8:	add	fp, sp, #24
   18bbc:	sub	sp, sp, #32
   18bc0:	ldr	r6, [fp, #12]
   18bc4:	ldr	r7, [fp, #8]
   18bc8:	mov	r4, r2
   18bcc:	mov	r8, r0
   18bd0:	cmp	r1, #0
   18bd4:	beq	18bfc <__mempcpy_chk@plt+0x7538>
   18bd8:	movw	r2, #47363	; 0xb903
   18bdc:	mov	r5, r1
   18be0:	str	r3, [sp, #4]
   18be4:	str	r4, [sp]
   18be8:	mov	r0, r8
   18bec:	mov	r1, #1
   18bf0:	movt	r2, #1
   18bf4:	mov	r3, r5
   18bf8:	b	18c14 <__mempcpy_chk@plt+0x7550>
   18bfc:	movw	r2, #47375	; 0xb90f
   18c00:	str	r3, [sp]
   18c04:	mov	r0, r8
   18c08:	mov	r1, #1
   18c0c:	mov	r3, r4
   18c10:	movt	r2, #1
   18c14:	bl	115b0 <__fprintf_chk@plt>
   18c18:	movw	r1, #47382	; 0xb916
   18c1c:	mov	r0, #0
   18c20:	mov	r2, #5
   18c24:	movt	r1, #1
   18c28:	bl	1140c <dcgettext@plt>
   18c2c:	movw	r2, #48100	; 0xbbe4
   18c30:	mov	r3, r0
   18c34:	movw	r0, #2022	; 0x7e6
   18c38:	mov	r1, #1
   18c3c:	movt	r2, #1
   18c40:	str	r0, [sp]
   18c44:	mov	r0, r8
   18c48:	bl	115b0 <__fprintf_chk@plt>
   18c4c:	movw	r4, #45315	; 0xb103
   18c50:	mov	r1, r8
   18c54:	movt	r4, #1
   18c58:	mov	r0, r4
   18c5c:	bl	1134c <fputs_unlocked@plt>
   18c60:	movw	r1, #47386	; 0xb91a
   18c64:	mov	r0, #0
   18c68:	mov	r2, #5
   18c6c:	movt	r1, #1
   18c70:	bl	1140c <dcgettext@plt>
   18c74:	movw	r3, #47557	; 0xb9c5
   18c78:	mov	r2, r0
   18c7c:	mov	r0, r8
   18c80:	mov	r1, #1
   18c84:	movt	r3, #1
   18c88:	bl	115b0 <__fprintf_chk@plt>
   18c8c:	mov	r0, r4
   18c90:	mov	r1, r8
   18c94:	bl	1134c <fputs_unlocked@plt>
   18c98:	cmp	r6, #9
   18c9c:	bhi	18cd8 <__mempcpy_chk@plt+0x7614>
   18ca0:	add	r0, pc, #0
   18ca4:	ldr	pc, [r0, r6, lsl #2]
   18ca8:	ldrdeq	r8, [r1], -r0
   18cac:	andeq	r8, r1, r4, ror #25
   18cb0:	andeq	r8, r1, r4, lsl sp
   18cb4:	andeq	r8, r1, ip, lsr sp
   18cb8:	andeq	r8, r1, r4, ror #26
   18cbc:	andeq	r8, r1, ip, lsl #27
   18cc0:			; <UNDEFINED> instruction: 0x00018db4
   18cc4:	andeq	r8, r1, ip, ror #27
   18cc8:	muleq	r1, r4, lr
   18ccc:	andeq	r8, r1, ip, lsr lr
   18cd0:	sub	sp, fp, #24
   18cd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18cd8:	movw	r1, #47910	; 0xbb26
   18cdc:	movt	r1, #1
   18ce0:	b	18e44 <__mempcpy_chk@plt+0x7780>
   18ce4:	movw	r1, #47591	; 0xb9e7
   18ce8:	mov	r0, #0
   18cec:	mov	r2, #5
   18cf0:	movt	r1, #1
   18cf4:	bl	1140c <dcgettext@plt>
   18cf8:	ldr	r3, [r7]
   18cfc:	mov	r2, r0
   18d00:	mov	r0, r8
   18d04:	mov	r1, #1
   18d08:	sub	sp, fp, #24
   18d0c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18d10:	b	115b0 <__fprintf_chk@plt>
   18d14:	movw	r1, #47607	; 0xb9f7
   18d18:	mov	r0, #0
   18d1c:	mov	r2, #5
   18d20:	movt	r1, #1
   18d24:	bl	1140c <dcgettext@plt>
   18d28:	mov	r2, r0
   18d2c:	ldr	r3, [r7]
   18d30:	ldr	r0, [r7, #4]
   18d34:	str	r0, [sp]
   18d38:	b	18e28 <__mempcpy_chk@plt+0x7764>
   18d3c:	movw	r1, #47630	; 0xba0e
   18d40:	mov	r0, #0
   18d44:	mov	r2, #5
   18d48:	movt	r1, #1
   18d4c:	bl	1140c <dcgettext@plt>
   18d50:	mov	r2, r0
   18d54:	ldr	r3, [r7]
   18d58:	ldmib	r7, {r0, r1}
   18d5c:	stm	sp, {r0, r1}
   18d60:	b	18e28 <__mempcpy_chk@plt+0x7764>
   18d64:	movw	r1, #47658	; 0xba2a
   18d68:	mov	r0, #0
   18d6c:	mov	r2, #5
   18d70:	movt	r1, #1
   18d74:	bl	1140c <dcgettext@plt>
   18d78:	ldr	r3, [r7]
   18d7c:	mov	r2, r0
   18d80:	ldmib	r7, {r0, r1, r7}
   18d84:	stm	sp, {r0, r1, r7}
   18d88:	b	18e28 <__mempcpy_chk@plt+0x7764>
   18d8c:	movw	r1, #47690	; 0xba4a
   18d90:	mov	r0, #0
   18d94:	mov	r2, #5
   18d98:	movt	r1, #1
   18d9c:	bl	1140c <dcgettext@plt>
   18da0:	ldr	r3, [r7]
   18da4:	mov	r2, r0
   18da8:	ldmib	r7, {r0, r1, r6, r7}
   18dac:	stm	sp, {r0, r1, r6, r7}
   18db0:	b	18e28 <__mempcpy_chk@plt+0x7764>
   18db4:	movw	r1, #47726	; 0xba6e
   18db8:	mov	r0, #0
   18dbc:	mov	r2, #5
   18dc0:	movt	r1, #1
   18dc4:	bl	1140c <dcgettext@plt>
   18dc8:	mov	r2, r0
   18dcc:	ldr	r3, [r7]
   18dd0:	ldmib	r7, {r0, r1, r6}
   18dd4:	ldr	r5, [r7, #16]
   18dd8:	ldr	r7, [r7, #20]
   18ddc:	stm	sp, {r0, r1, r6}
   18de0:	str	r5, [sp, #12]
   18de4:	str	r7, [sp, #16]
   18de8:	b	18e28 <__mempcpy_chk@plt+0x7764>
   18dec:	movw	r1, #47766	; 0xba96
   18df0:	mov	r0, #0
   18df4:	mov	r2, #5
   18df8:	movt	r1, #1
   18dfc:	bl	1140c <dcgettext@plt>
   18e00:	mov	r2, r0
   18e04:	ldr	r3, [r7]
   18e08:	ldmib	r7, {r0, r1, r6}
   18e0c:	ldr	r5, [r7, #16]
   18e10:	ldr	r4, [r7, #20]
   18e14:	ldr	r7, [r7, #24]
   18e18:	stm	sp, {r0, r1, r6}
   18e1c:	str	r5, [sp, #12]
   18e20:	str	r4, [sp, #16]
   18e24:	str	r7, [sp, #20]
   18e28:	mov	r0, r8
   18e2c:	mov	r1, #1
   18e30:	bl	115b0 <__fprintf_chk@plt>
   18e34:	sub	sp, fp, #24
   18e38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18e3c:	movw	r1, #47858	; 0xbaf2
   18e40:	movt	r1, #1
   18e44:	mov	r0, #0
   18e48:	mov	r2, #5
   18e4c:	bl	1140c <dcgettext@plt>
   18e50:	mov	ip, r0
   18e54:	ldr	r3, [r7]
   18e58:	ldr	r0, [r7, #4]
   18e5c:	ldr	r1, [r7, #8]
   18e60:	ldr	r6, [r7, #12]
   18e64:	ldr	r5, [r7, #16]
   18e68:	ldr	r4, [r7, #20]
   18e6c:	ldr	r2, [r7, #24]
   18e70:	ldr	lr, [r7, #28]
   18e74:	ldr	r7, [r7, #32]
   18e78:	stm	sp, {r0, r1, r6}
   18e7c:	str	r5, [sp, #12]
   18e80:	str	r4, [sp, #16]
   18e84:	str	r2, [sp, #20]
   18e88:	str	lr, [sp, #24]
   18e8c:	str	r7, [sp, #28]
   18e90:	b	18ed8 <__mempcpy_chk@plt+0x7814>
   18e94:	movw	r1, #47810	; 0xbac2
   18e98:	mov	r0, #0
   18e9c:	mov	r2, #5
   18ea0:	movt	r1, #1
   18ea4:	bl	1140c <dcgettext@plt>
   18ea8:	mov	ip, r0
   18eac:	ldr	r3, [r7]
   18eb0:	ldmib	r7, {r0, r1, r6}
   18eb4:	ldr	r5, [r7, #16]
   18eb8:	ldr	r4, [r7, #20]
   18ebc:	ldr	r2, [r7, #24]
   18ec0:	ldr	r7, [r7, #28]
   18ec4:	stm	sp, {r0, r1, r6}
   18ec8:	str	r5, [sp, #12]
   18ecc:	str	r4, [sp, #16]
   18ed0:	str	r2, [sp, #20]
   18ed4:	str	r7, [sp, #24]
   18ed8:	mov	r0, r8
   18edc:	mov	r1, #1
   18ee0:	mov	r2, ip
   18ee4:	bl	115b0 <__fprintf_chk@plt>
   18ee8:	sub	sp, fp, #24
   18eec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18ef0:	push	{r4, sl, fp, lr}
   18ef4:	add	fp, sp, #8
   18ef8:	sub	sp, sp, #8
   18efc:	ldr	ip, [fp, #8]
   18f00:	mov	lr, #0
   18f04:	ldr	r4, [ip, lr, lsl #2]
   18f08:	add	lr, lr, #1
   18f0c:	cmp	r4, #0
   18f10:	bne	18f04 <__mempcpy_chk@plt+0x7840>
   18f14:	sub	r4, lr, #1
   18f18:	str	ip, [sp]
   18f1c:	str	r4, [sp, #4]
   18f20:	bl	18bb4 <__mempcpy_chk@plt+0x74f0>
   18f24:	sub	sp, fp, #8
   18f28:	pop	{r4, sl, fp, pc}
   18f2c:	push	{fp, lr}
   18f30:	mov	fp, sp
   18f34:	sub	sp, sp, #48	; 0x30
   18f38:	ldr	ip, [fp, #8]
   18f3c:	ldr	lr, [ip]
   18f40:	cmp	lr, #0
   18f44:	str	lr, [sp, #8]
   18f48:	beq	18fe4 <__mempcpy_chk@plt+0x7920>
   18f4c:	ldr	lr, [ip, #4]
   18f50:	cmp	lr, #0
   18f54:	str	lr, [sp, #12]
   18f58:	beq	18fec <__mempcpy_chk@plt+0x7928>
   18f5c:	ldr	lr, [ip, #8]
   18f60:	cmp	lr, #0
   18f64:	str	lr, [sp, #16]
   18f68:	beq	18ff4 <__mempcpy_chk@plt+0x7930>
   18f6c:	ldr	lr, [ip, #12]
   18f70:	cmp	lr, #0
   18f74:	str	lr, [sp, #20]
   18f78:	beq	18ffc <__mempcpy_chk@plt+0x7938>
   18f7c:	ldr	lr, [ip, #16]
   18f80:	cmp	lr, #0
   18f84:	str	lr, [sp, #24]
   18f88:	beq	19004 <__mempcpy_chk@plt+0x7940>
   18f8c:	ldr	lr, [ip, #20]
   18f90:	cmp	lr, #0
   18f94:	str	lr, [sp, #28]
   18f98:	beq	1900c <__mempcpy_chk@plt+0x7948>
   18f9c:	ldr	lr, [ip, #24]
   18fa0:	cmp	lr, #0
   18fa4:	str	lr, [sp, #32]
   18fa8:	beq	19014 <__mempcpy_chk@plt+0x7950>
   18fac:	ldr	lr, [ip, #28]
   18fb0:	cmp	lr, #0
   18fb4:	str	lr, [sp, #36]	; 0x24
   18fb8:	beq	1901c <__mempcpy_chk@plt+0x7958>
   18fbc:	ldr	lr, [ip, #32]
   18fc0:	cmp	lr, #0
   18fc4:	str	lr, [sp, #40]	; 0x28
   18fc8:	beq	19024 <__mempcpy_chk@plt+0x7960>
   18fcc:	ldr	lr, [ip, #36]	; 0x24
   18fd0:	mov	ip, #10
   18fd4:	cmp	lr, #0
   18fd8:	str	lr, [sp, #44]	; 0x2c
   18fdc:	movweq	ip, #9
   18fe0:	b	19028 <__mempcpy_chk@plt+0x7964>
   18fe4:	mov	ip, #0
   18fe8:	b	19028 <__mempcpy_chk@plt+0x7964>
   18fec:	mov	ip, #1
   18ff0:	b	19028 <__mempcpy_chk@plt+0x7964>
   18ff4:	mov	ip, #2
   18ff8:	b	19028 <__mempcpy_chk@plt+0x7964>
   18ffc:	mov	ip, #3
   19000:	b	19028 <__mempcpy_chk@plt+0x7964>
   19004:	mov	ip, #4
   19008:	b	19028 <__mempcpy_chk@plt+0x7964>
   1900c:	mov	ip, #5
   19010:	b	19028 <__mempcpy_chk@plt+0x7964>
   19014:	mov	ip, #6
   19018:	b	19028 <__mempcpy_chk@plt+0x7964>
   1901c:	mov	ip, #7
   19020:	b	19028 <__mempcpy_chk@plt+0x7964>
   19024:	mov	ip, #8
   19028:	add	lr, sp, #8
   1902c:	str	ip, [sp, #4]
   19030:	str	lr, [sp]
   19034:	bl	18bb4 <__mempcpy_chk@plt+0x74f0>
   19038:	mov	sp, fp
   1903c:	pop	{fp, pc}
   19040:	push	{fp, lr}
   19044:	mov	fp, sp
   19048:	sub	sp, sp, #56	; 0x38
   1904c:	add	ip, fp, #8
   19050:	str	ip, [sp, #12]
   19054:	ldr	lr, [fp, #8]
   19058:	cmp	lr, #0
   1905c:	str	lr, [sp, #16]
   19060:	beq	190fc <__mempcpy_chk@plt+0x7a38>
   19064:	ldr	lr, [ip, #4]
   19068:	cmp	lr, #0
   1906c:	str	lr, [sp, #20]
   19070:	beq	19104 <__mempcpy_chk@plt+0x7a40>
   19074:	ldr	lr, [ip, #8]
   19078:	cmp	lr, #0
   1907c:	str	lr, [sp, #24]
   19080:	beq	1910c <__mempcpy_chk@plt+0x7a48>
   19084:	ldr	lr, [ip, #12]
   19088:	cmp	lr, #0
   1908c:	str	lr, [sp, #28]
   19090:	beq	19114 <__mempcpy_chk@plt+0x7a50>
   19094:	ldr	lr, [ip, #16]
   19098:	cmp	lr, #0
   1909c:	str	lr, [sp, #32]
   190a0:	beq	1911c <__mempcpy_chk@plt+0x7a58>
   190a4:	ldr	lr, [ip, #20]
   190a8:	cmp	lr, #0
   190ac:	str	lr, [sp, #36]	; 0x24
   190b0:	beq	19124 <__mempcpy_chk@plt+0x7a60>
   190b4:	ldr	lr, [ip, #24]
   190b8:	cmp	lr, #0
   190bc:	str	lr, [sp, #40]	; 0x28
   190c0:	beq	1912c <__mempcpy_chk@plt+0x7a68>
   190c4:	ldr	lr, [ip, #28]
   190c8:	cmp	lr, #0
   190cc:	str	lr, [sp, #44]	; 0x2c
   190d0:	beq	19134 <__mempcpy_chk@plt+0x7a70>
   190d4:	ldr	lr, [ip, #32]
   190d8:	cmp	lr, #0
   190dc:	str	lr, [sp, #48]	; 0x30
   190e0:	beq	1913c <__mempcpy_chk@plt+0x7a78>
   190e4:	ldr	lr, [ip, #36]	; 0x24
   190e8:	mov	ip, #10
   190ec:	cmp	lr, #0
   190f0:	str	lr, [sp, #52]	; 0x34
   190f4:	movweq	ip, #9
   190f8:	b	19140 <__mempcpy_chk@plt+0x7a7c>
   190fc:	mov	ip, #0
   19100:	b	19140 <__mempcpy_chk@plt+0x7a7c>
   19104:	mov	ip, #1
   19108:	b	19140 <__mempcpy_chk@plt+0x7a7c>
   1910c:	mov	ip, #2
   19110:	b	19140 <__mempcpy_chk@plt+0x7a7c>
   19114:	mov	ip, #3
   19118:	b	19140 <__mempcpy_chk@plt+0x7a7c>
   1911c:	mov	ip, #4
   19120:	b	19140 <__mempcpy_chk@plt+0x7a7c>
   19124:	mov	ip, #5
   19128:	b	19140 <__mempcpy_chk@plt+0x7a7c>
   1912c:	mov	ip, #6
   19130:	b	19140 <__mempcpy_chk@plt+0x7a7c>
   19134:	mov	ip, #7
   19138:	b	19140 <__mempcpy_chk@plt+0x7a7c>
   1913c:	mov	ip, #8
   19140:	add	lr, sp, #16
   19144:	str	ip, [sp, #4]
   19148:	str	lr, [sp]
   1914c:	bl	18bb4 <__mempcpy_chk@plt+0x74f0>
   19150:	mov	sp, fp
   19154:	pop	{fp, pc}
   19158:	push	{fp, lr}
   1915c:	mov	fp, sp
   19160:	movw	r0, #49588	; 0xc1b4
   19164:	movt	r0, #2
   19168:	ldr	r1, [r0]
   1916c:	movw	r0, #45315	; 0xb103
   19170:	movt	r0, #1
   19174:	bl	1134c <fputs_unlocked@plt>
   19178:	movw	r1, #47970	; 0xbb62
   1917c:	mov	r0, #0
   19180:	mov	r2, #5
   19184:	movt	r1, #1
   19188:	bl	1140c <dcgettext@plt>
   1918c:	movw	r2, #47990	; 0xbb76
   19190:	mov	r1, r0
   19194:	mov	r0, #1
   19198:	movt	r2, #1
   1919c:	bl	11598 <__printf_chk@plt>
   191a0:	movw	r1, #48012	; 0xbb8c
   191a4:	mov	r0, #0
   191a8:	mov	r2, #5
   191ac:	movt	r1, #1
   191b0:	bl	1140c <dcgettext@plt>
   191b4:	movw	r2, #44777	; 0xaee9
   191b8:	movw	r3, #45657	; 0xb259
   191bc:	mov	r1, r0
   191c0:	mov	r0, #1
   191c4:	movt	r2, #1
   191c8:	movt	r3, #1
   191cc:	bl	11598 <__printf_chk@plt>
   191d0:	movw	r1, #48032	; 0xbba0
   191d4:	mov	r0, #0
   191d8:	mov	r2, #5
   191dc:	movt	r1, #1
   191e0:	bl	1140c <dcgettext@plt>
   191e4:	movw	r2, #48071	; 0xbbc7
   191e8:	mov	r1, r0
   191ec:	mov	r0, #1
   191f0:	movt	r2, #1
   191f4:	pop	{fp, lr}
   191f8:	b	11598 <__printf_chk@plt>
   191fc:	push	{r4, r5, r6, sl, fp, lr}
   19200:	add	fp, sp, #16
   19204:	mov	r4, r2
   19208:	mov	r5, r1
   1920c:	mov	r6, r0
   19210:	bl	1a08c <__mempcpy_chk@plt+0x89c8>
   19214:	cmp	r0, #0
   19218:	popne	{r4, r5, r6, sl, fp, pc}
   1921c:	cmp	r6, #0
   19220:	beq	19234 <__mempcpy_chk@plt+0x7b70>
   19224:	cmp	r5, #0
   19228:	cmpne	r4, #0
   1922c:	bne	19234 <__mempcpy_chk@plt+0x7b70>
   19230:	pop	{r4, r5, r6, sl, fp, pc}
   19234:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   19238:	push	{r4, r5, r6, sl, fp, lr}
   1923c:	add	fp, sp, #16
   19240:	mov	r4, r2
   19244:	mov	r5, r1
   19248:	mov	r6, r0
   1924c:	bl	1a08c <__mempcpy_chk@plt+0x89c8>
   19250:	cmp	r0, #0
   19254:	popne	{r4, r5, r6, sl, fp, pc}
   19258:	cmp	r6, #0
   1925c:	beq	19270 <__mempcpy_chk@plt+0x7bac>
   19260:	cmp	r5, #0
   19264:	cmpne	r4, #0
   19268:	bne	19270 <__mempcpy_chk@plt+0x7bac>
   1926c:	pop	{r4, r5, r6, sl, fp, pc}
   19270:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   19274:	push	{fp, lr}
   19278:	mov	fp, sp
   1927c:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   19280:	cmp	r0, #0
   19284:	popne	{fp, pc}
   19288:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   1928c:	push	{fp, lr}
   19290:	mov	fp, sp
   19294:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   19298:	cmp	r0, #0
   1929c:	popne	{fp, pc}
   192a0:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   192a4:	push	{fp, lr}
   192a8:	mov	fp, sp
   192ac:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   192b0:	cmp	r0, #0
   192b4:	popne	{fp, pc}
   192b8:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   192bc:	push	{r4, r5, fp, lr}
   192c0:	add	fp, sp, #8
   192c4:	mov	r4, r1
   192c8:	mov	r5, r0
   192cc:	bl	198f8 <__mempcpy_chk@plt+0x8234>
   192d0:	cmp	r0, #0
   192d4:	popne	{r4, r5, fp, pc}
   192d8:	cmp	r5, #0
   192dc:	beq	192ec <__mempcpy_chk@plt+0x7c28>
   192e0:	cmp	r4, #0
   192e4:	bne	192ec <__mempcpy_chk@plt+0x7c28>
   192e8:	pop	{r4, r5, fp, pc}
   192ec:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   192f0:	push	{fp, lr}
   192f4:	mov	fp, sp
   192f8:	cmp	r1, #0
   192fc:	orreq	r1, r1, #1
   19300:	bl	198f8 <__mempcpy_chk@plt+0x8234>
   19304:	cmp	r0, #0
   19308:	popne	{fp, pc}
   1930c:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   19310:	push	{fp, lr}
   19314:	mov	fp, sp
   19318:	clz	r3, r2
   1931c:	lsr	ip, r3, #5
   19320:	clz	r3, r1
   19324:	lsr	r3, r3, #5
   19328:	orrs	r3, r3, ip
   1932c:	movwne	r1, #1
   19330:	movwne	r2, #1
   19334:	bl	1a08c <__mempcpy_chk@plt+0x89c8>
   19338:	cmp	r0, #0
   1933c:	popne	{fp, pc}
   19340:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   19344:	push	{fp, lr}
   19348:	mov	fp, sp
   1934c:	mov	r2, r1
   19350:	mov	r1, r0
   19354:	mov	r0, #0
   19358:	bl	1a08c <__mempcpy_chk@plt+0x89c8>
   1935c:	cmp	r0, #0
   19360:	popne	{fp, pc}
   19364:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   19368:	push	{fp, lr}
   1936c:	mov	fp, sp
   19370:	mov	r2, r1
   19374:	mov	r1, r0
   19378:	clz	r0, r2
   1937c:	clz	r3, r1
   19380:	lsr	r0, r0, #5
   19384:	lsr	r3, r3, #5
   19388:	orrs	r0, r3, r0
   1938c:	mov	r0, #0
   19390:	movwne	r1, #1
   19394:	movwne	r2, #1
   19398:	bl	1a08c <__mempcpy_chk@plt+0x89c8>
   1939c:	cmp	r0, #0
   193a0:	popne	{fp, pc}
   193a4:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   193a8:	push	{r4, r5, r6, sl, fp, lr}
   193ac:	add	fp, sp, #16
   193b0:	ldr	r5, [r1]
   193b4:	mov	r4, r1
   193b8:	mov	r6, r0
   193bc:	cmp	r0, #0
   193c0:	beq	193d8 <__mempcpy_chk@plt+0x7d14>
   193c4:	mov	r0, #1
   193c8:	add	r0, r0, r5, lsr #1
   193cc:	adds	r5, r5, r0
   193d0:	bcc	193e0 <__mempcpy_chk@plt+0x7d1c>
   193d4:	b	1941c <__mempcpy_chk@plt+0x7d58>
   193d8:	cmp	r5, #0
   193dc:	movweq	r5, #64	; 0x40
   193e0:	mov	r0, r6
   193e4:	mov	r1, r5
   193e8:	mov	r2, #1
   193ec:	bl	1a08c <__mempcpy_chk@plt+0x89c8>
   193f0:	cmp	r5, #0
   193f4:	mov	r1, r5
   193f8:	movwne	r1, #1
   193fc:	cmp	r0, #0
   19400:	bne	19414 <__mempcpy_chk@plt+0x7d50>
   19404:	clz	r2, r6
   19408:	lsr	r2, r2, #5
   1940c:	orrs	r1, r2, r1
   19410:	bne	1941c <__mempcpy_chk@plt+0x7d58>
   19414:	str	r5, [r4]
   19418:	pop	{r4, r5, r6, sl, fp, pc}
   1941c:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   19420:	push	{r4, r5, r6, r7, fp, lr}
   19424:	add	fp, sp, #16
   19428:	ldr	r5, [r1]
   1942c:	mov	r6, r2
   19430:	mov	r4, r1
   19434:	mov	r7, r0
   19438:	cmp	r0, #0
   1943c:	beq	19454 <__mempcpy_chk@plt+0x7d90>
   19440:	mov	r0, #1
   19444:	add	r0, r0, r5, lsr #1
   19448:	adds	r5, r5, r0
   1944c:	bcc	1946c <__mempcpy_chk@plt+0x7da8>
   19450:	b	194a0 <__mempcpy_chk@plt+0x7ddc>
   19454:	cmp	r5, #0
   19458:	bne	1946c <__mempcpy_chk@plt+0x7da8>
   1945c:	mov	r0, #64	; 0x40
   19460:	cmp	r6, #64	; 0x40
   19464:	udiv	r5, r0, r6
   19468:	addhi	r5, r5, #1
   1946c:	mov	r0, r7
   19470:	mov	r1, r5
   19474:	mov	r2, r6
   19478:	bl	1a08c <__mempcpy_chk@plt+0x89c8>
   1947c:	cmp	r0, #0
   19480:	bne	19498 <__mempcpy_chk@plt+0x7dd4>
   19484:	cmp	r7, #0
   19488:	beq	194a0 <__mempcpy_chk@plt+0x7ddc>
   1948c:	cmp	r6, #0
   19490:	cmpne	r5, #0
   19494:	bne	194a0 <__mempcpy_chk@plt+0x7ddc>
   19498:	str	r5, [r4]
   1949c:	pop	{r4, r5, r6, r7, fp, pc}
   194a0:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   194a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   194a8:	add	fp, sp, #24
   194ac:	mov	r8, r1
   194b0:	ldr	r1, [r1]
   194b4:	mov	r5, r0
   194b8:	add	r0, r1, r1, asr #1
   194bc:	cmp	r0, r1
   194c0:	mvnvs	r0, #-2147483648	; 0x80000000
   194c4:	cmp	r0, r3
   194c8:	mov	r7, r0
   194cc:	movgt	r7, r3
   194d0:	cmn	r3, #1
   194d4:	movle	r7, r0
   194d8:	ldr	r0, [fp, #8]
   194dc:	cmn	r0, #1
   194e0:	ble	19508 <__mempcpy_chk@plt+0x7e44>
   194e4:	cmp	r0, #0
   194e8:	beq	1955c <__mempcpy_chk@plt+0x7e98>
   194ec:	cmn	r7, #1
   194f0:	ble	19530 <__mempcpy_chk@plt+0x7e6c>
   194f4:	mvn	r4, #-2147483648	; 0x80000000
   194f8:	udiv	r6, r4, r0
   194fc:	cmp	r6, r7
   19500:	bge	1955c <__mempcpy_chk@plt+0x7e98>
   19504:	b	1956c <__mempcpy_chk@plt+0x7ea8>
   19508:	cmn	r7, #1
   1950c:	ble	1954c <__mempcpy_chk@plt+0x7e88>
   19510:	cmn	r0, #1
   19514:	beq	1955c <__mempcpy_chk@plt+0x7e98>
   19518:	mov	r6, #-2147483648	; 0x80000000
   1951c:	mvn	r4, #-2147483648	; 0x80000000
   19520:	sdiv	r6, r6, r0
   19524:	cmp	r6, r7
   19528:	bge	1955c <__mempcpy_chk@plt+0x7e98>
   1952c:	b	1956c <__mempcpy_chk@plt+0x7ea8>
   19530:	beq	1955c <__mempcpy_chk@plt+0x7e98>
   19534:	mov	r6, #-2147483648	; 0x80000000
   19538:	mvn	r4, #-2147483648	; 0x80000000
   1953c:	sdiv	r6, r6, r7
   19540:	cmp	r6, r0
   19544:	bge	1955c <__mempcpy_chk@plt+0x7e98>
   19548:	b	1956c <__mempcpy_chk@plt+0x7ea8>
   1954c:	mvn	r4, #-2147483648	; 0x80000000
   19550:	sdiv	r6, r4, r0
   19554:	cmp	r7, r6
   19558:	blt	1956c <__mempcpy_chk@plt+0x7ea8>
   1955c:	mul	r6, r7, r0
   19560:	mov	r4, #64	; 0x40
   19564:	cmp	r6, #63	; 0x3f
   19568:	bgt	19574 <__mempcpy_chk@plt+0x7eb0>
   1956c:	sdiv	r7, r4, r0
   19570:	mul	r6, r7, r0
   19574:	cmp	r5, #0
   19578:	moveq	r4, #0
   1957c:	streq	r4, [r8]
   19580:	sub	r4, r7, r1
   19584:	cmp	r4, r2
   19588:	bge	19634 <__mempcpy_chk@plt+0x7f70>
   1958c:	add	r7, r1, r2
   19590:	mov	r6, #0
   19594:	mov	r2, #0
   19598:	cmp	r7, r3
   1959c:	movwgt	r6, #1
   195a0:	cmn	r3, #1
   195a4:	movwgt	r2, #1
   195a8:	cmp	r7, r1
   195ac:	bvs	19668 <__mempcpy_chk@plt+0x7fa4>
   195b0:	ands	r1, r2, r6
   195b4:	bne	19668 <__mempcpy_chk@plt+0x7fa4>
   195b8:	cmn	r0, #1
   195bc:	ble	195e4 <__mempcpy_chk@plt+0x7f20>
   195c0:	cmp	r0, #0
   195c4:	beq	19630 <__mempcpy_chk@plt+0x7f6c>
   195c8:	cmn	r7, #1
   195cc:	ble	19608 <__mempcpy_chk@plt+0x7f44>
   195d0:	mvn	r1, #-2147483648	; 0x80000000
   195d4:	udiv	r1, r1, r0
   195d8:	cmp	r1, r7
   195dc:	bge	19630 <__mempcpy_chk@plt+0x7f6c>
   195e0:	b	19668 <__mempcpy_chk@plt+0x7fa4>
   195e4:	cmn	r7, #1
   195e8:	ble	19620 <__mempcpy_chk@plt+0x7f5c>
   195ec:	cmn	r0, #1
   195f0:	beq	19630 <__mempcpy_chk@plt+0x7f6c>
   195f4:	mov	r1, #-2147483648	; 0x80000000
   195f8:	sdiv	r1, r1, r0
   195fc:	cmp	r1, r7
   19600:	bge	19630 <__mempcpy_chk@plt+0x7f6c>
   19604:	b	19668 <__mempcpy_chk@plt+0x7fa4>
   19608:	beq	19630 <__mempcpy_chk@plt+0x7f6c>
   1960c:	mov	r1, #-2147483648	; 0x80000000
   19610:	sdiv	r1, r1, r7
   19614:	cmp	r1, r0
   19618:	bge	19630 <__mempcpy_chk@plt+0x7f6c>
   1961c:	b	19668 <__mempcpy_chk@plt+0x7fa4>
   19620:	mvn	r1, #-2147483648	; 0x80000000
   19624:	sdiv	r1, r1, r0
   19628:	cmp	r7, r1
   1962c:	blt	19668 <__mempcpy_chk@plt+0x7fa4>
   19630:	mul	r6, r7, r0
   19634:	mov	r0, r5
   19638:	mov	r1, r6
   1963c:	bl	198f8 <__mempcpy_chk@plt+0x8234>
   19640:	cmp	r6, #0
   19644:	movwne	r6, #1
   19648:	cmp	r0, #0
   1964c:	bne	19660 <__mempcpy_chk@plt+0x7f9c>
   19650:	clz	r1, r5
   19654:	lsr	r1, r1, #5
   19658:	orrs	r1, r1, r6
   1965c:	bne	19668 <__mempcpy_chk@plt+0x7fa4>
   19660:	str	r7, [r8]
   19664:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19668:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   1966c:	push	{fp, lr}
   19670:	mov	fp, sp
   19674:	mov	r1, #1
   19678:	bl	19874 <__mempcpy_chk@plt+0x81b0>
   1967c:	cmp	r0, #0
   19680:	popne	{fp, pc}
   19684:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   19688:	push	{fp, lr}
   1968c:	mov	fp, sp
   19690:	bl	19874 <__mempcpy_chk@plt+0x81b0>
   19694:	cmp	r0, #0
   19698:	popne	{fp, pc}
   1969c:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   196a0:	push	{fp, lr}
   196a4:	mov	fp, sp
   196a8:	mov	r1, #1
   196ac:	bl	19874 <__mempcpy_chk@plt+0x81b0>
   196b0:	cmp	r0, #0
   196b4:	popne	{fp, pc}
   196b8:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   196bc:	push	{fp, lr}
   196c0:	mov	fp, sp
   196c4:	bl	19874 <__mempcpy_chk@plt+0x81b0>
   196c8:	cmp	r0, #0
   196cc:	popne	{fp, pc}
   196d0:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   196d4:	push	{r4, r5, fp, lr}
   196d8:	add	fp, sp, #8
   196dc:	mov	r5, r0
   196e0:	mov	r0, r1
   196e4:	mov	r4, r1
   196e8:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   196ec:	cmp	r0, #0
   196f0:	beq	19704 <__mempcpy_chk@plt+0x8040>
   196f4:	mov	r1, r5
   196f8:	mov	r2, r4
   196fc:	pop	{r4, r5, fp, lr}
   19700:	b	113e8 <memcpy@plt>
   19704:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   19708:	push	{r4, r5, fp, lr}
   1970c:	add	fp, sp, #8
   19710:	mov	r5, r0
   19714:	mov	r0, r1
   19718:	mov	r4, r1
   1971c:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   19720:	cmp	r0, #0
   19724:	beq	19738 <__mempcpy_chk@plt+0x8074>
   19728:	mov	r1, r5
   1972c:	mov	r2, r4
   19730:	pop	{r4, r5, fp, lr}
   19734:	b	113e8 <memcpy@plt>
   19738:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   1973c:	push	{r4, r5, fp, lr}
   19740:	add	fp, sp, #8
   19744:	mov	r5, r0
   19748:	add	r0, r1, #1
   1974c:	mov	r4, r1
   19750:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   19754:	cmp	r0, #0
   19758:	beq	19774 <__mempcpy_chk@plt+0x80b0>
   1975c:	mov	r1, #0
   19760:	mov	r2, r4
   19764:	strb	r1, [r0, r4]
   19768:	mov	r1, r5
   1976c:	pop	{r4, r5, fp, lr}
   19770:	b	113e8 <memcpy@plt>
   19774:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   19778:	push	{r4, r5, fp, lr}
   1977c:	add	fp, sp, #8
   19780:	mov	r4, r0
   19784:	bl	11538 <strlen@plt>
   19788:	add	r5, r0, #1
   1978c:	mov	r0, r5
   19790:	bl	198c8 <__mempcpy_chk@plt+0x8204>
   19794:	cmp	r0, #0
   19798:	beq	197ac <__mempcpy_chk@plt+0x80e8>
   1979c:	mov	r1, r4
   197a0:	mov	r2, r5
   197a4:	pop	{r4, r5, fp, lr}
   197a8:	b	113e8 <memcpy@plt>
   197ac:	bl	197b0 <__mempcpy_chk@plt+0x80ec>
   197b0:	push	{fp, lr}
   197b4:	mov	fp, sp
   197b8:	movw	r0, #49484	; 0xc14c
   197bc:	movw	r1, #48147	; 0xbc13
   197c0:	mov	r2, #5
   197c4:	movt	r0, #2
   197c8:	movt	r1, #1
   197cc:	ldr	r4, [r0]
   197d0:	mov	r0, #0
   197d4:	bl	1140c <dcgettext@plt>
   197d8:	movw	r2, #48251	; 0xbc7b
   197dc:	mov	r3, r0
   197e0:	mov	r0, r4
   197e4:	mov	r1, #0
   197e8:	movt	r2, #1
   197ec:	bl	114a8 <error@plt>
   197f0:	bl	11688 <abort@plt>
   197f4:	push	{r4, sl, fp, lr}
   197f8:	add	fp, sp, #8
   197fc:	sub	sp, sp, #8
   19800:	movw	r0, #49584	; 0xc1b0
   19804:	mov	r4, #0
   19808:	mov	r1, sp
   1980c:	mov	r2, #10
   19810:	movt	r0, #2
   19814:	str	r4, [sp, #4]
   19818:	str	r4, [sp]
   1981c:	ldr	r3, [r0]
   19820:	add	r0, sp, #4
   19824:	bl	11364 <__getdelim@plt>
   19828:	cmp	r0, #1
   1982c:	blt	19860 <__mempcpy_chk@plt+0x819c>
   19830:	sub	r1, r0, #1
   19834:	ldr	r0, [sp, #4]
   19838:	ldrb	r2, [r0, r1]
   1983c:	cmp	r2, #10
   19840:	bne	19850 <__mempcpy_chk@plt+0x818c>
   19844:	mov	r2, #0
   19848:	strb	r2, [r0, r1]
   1984c:	ldr	r0, [sp, #4]
   19850:	bl	115ec <rpmatch@plt>
   19854:	cmp	r0, #0
   19858:	mov	r4, #0
   1985c:	movwgt	r4, #1
   19860:	ldr	r0, [sp, #4]
   19864:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   19868:	mov	r0, r4
   1986c:	sub	sp, fp, #8
   19870:	pop	{r4, sl, fp, pc}
   19874:	clz	r2, r1
   19878:	clz	r3, r0
   1987c:	lsr	r2, r2, #5
   19880:	lsr	r3, r3, #5
   19884:	orrs	r2, r3, r2
   19888:	movwne	r1, #1
   1988c:	movwne	r0, #1
   19890:	cmp	r1, #0
   19894:	beq	198c4 <__mempcpy_chk@plt+0x8200>
   19898:	mvn	r2, #-2147483648	; 0x80000000
   1989c:	udiv	r2, r2, r1
   198a0:	cmp	r2, r0
   198a4:	bcs	198c4 <__mempcpy_chk@plt+0x8200>
   198a8:	push	{fp, lr}
   198ac:	mov	fp, sp
   198b0:	bl	11550 <__errno_location@plt>
   198b4:	mov	r1, #12
   198b8:	str	r1, [r0]
   198bc:	mov	r0, #0
   198c0:	pop	{fp, pc}
   198c4:	b	11340 <calloc@plt>
   198c8:	cmp	r0, #0
   198cc:	movweq	r0, #1
   198d0:	cmn	r0, #1
   198d4:	ble	198dc <__mempcpy_chk@plt+0x8218>
   198d8:	b	114cc <malloc@plt>
   198dc:	push	{fp, lr}
   198e0:	mov	fp, sp
   198e4:	bl	11550 <__errno_location@plt>
   198e8:	mov	r1, #12
   198ec:	str	r1, [r0]
   198f0:	mov	r0, #0
   198f4:	pop	{fp, pc}
   198f8:	push	{fp, lr}
   198fc:	mov	fp, sp
   19900:	cmp	r0, #0
   19904:	beq	19920 <__mempcpy_chk@plt+0x825c>
   19908:	cmp	r1, #0
   1990c:	beq	1992c <__mempcpy_chk@plt+0x8268>
   19910:	cmn	r1, #1
   19914:	ble	19938 <__mempcpy_chk@plt+0x8274>
   19918:	pop	{fp, lr}
   1991c:	b	11418 <realloc@plt>
   19920:	mov	r0, r1
   19924:	pop	{fp, lr}
   19928:	b	198c8 <__mempcpy_chk@plt+0x8204>
   1992c:	bl	14b1c <__mempcpy_chk@plt+0x3458>
   19930:	mov	r0, #0
   19934:	pop	{fp, pc}
   19938:	bl	11550 <__errno_location@plt>
   1993c:	mov	r1, #12
   19940:	str	r1, [r0]
   19944:	mov	r0, #0
   19948:	pop	{fp, pc}
   1994c:	mov	r0, #1
   19950:	b	117c0 <__mempcpy_chk@plt+0xfc>
   19954:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19958:	add	fp, sp, #28
   1995c:	sub	sp, sp, #12
   19960:	mov	r4, r3
   19964:	mov	r9, r2
   19968:	mov	r7, r1
   1996c:	mov	r8, r0
   19970:	bl	11538 <strlen@plt>
   19974:	ldr	r6, [r7]
   19978:	cmp	r6, #0
   1997c:	beq	19a28 <__mempcpy_chk@plt+0x8364>
   19980:	mov	r5, r0
   19984:	cmp	r9, #0
   19988:	beq	19a38 <__mempcpy_chk@plt+0x8374>
   1998c:	add	r0, r7, #4
   19990:	mvn	sl, #0
   19994:	mov	r7, #0
   19998:	str	r9, [sp]
   1999c:	str	r0, [sp, #8]
   199a0:	mov	r0, #0
   199a4:	str	r0, [sp, #4]
   199a8:	mov	r0, r9
   199ac:	b	199f0 <__mempcpy_chk@plt+0x832c>
   199b0:	ldr	r0, [sp]
   199b4:	mov	r1, r9
   199b8:	mov	r2, r4
   199bc:	mla	r0, sl, r4, r0
   199c0:	bl	1152c <bcmp@plt>
   199c4:	ldr	r1, [sp, #4]
   199c8:	cmp	r0, #0
   199cc:	movwne	r0, #1
   199d0:	orr	r1, r1, r0
   199d4:	str	r1, [sp, #4]
   199d8:	ldr	r0, [sp, #8]
   199dc:	add	r9, r9, r4
   199e0:	ldr	r6, [r0, r7, lsl #2]
   199e4:	add	r7, r7, #1
   199e8:	cmp	r6, #0
   199ec:	beq	19aac <__mempcpy_chk@plt+0x83e8>
   199f0:	mov	r0, r6
   199f4:	mov	r1, r8
   199f8:	mov	r2, r5
   199fc:	bl	1167c <strncmp@plt>
   19a00:	cmp	r0, #0
   19a04:	bne	199d8 <__mempcpy_chk@plt+0x8314>
   19a08:	mov	r0, r6
   19a0c:	bl	11538 <strlen@plt>
   19a10:	cmp	r0, r5
   19a14:	beq	19a2c <__mempcpy_chk@plt+0x8368>
   19a18:	cmn	sl, #1
   19a1c:	bne	199b0 <__mempcpy_chk@plt+0x82ec>
   19a20:	mov	sl, r7
   19a24:	b	199d8 <__mempcpy_chk@plt+0x8314>
   19a28:	mvn	r7, #0
   19a2c:	mov	r0, r7
   19a30:	sub	sp, fp, #28
   19a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a38:	add	r4, r7, #4
   19a3c:	mov	r0, #0
   19a40:	mvn	r9, #0
   19a44:	mvn	sl, #0
   19a48:	mov	r7, #0
   19a4c:	str	r0, [sp, #4]
   19a50:	b	19a80 <__mempcpy_chk@plt+0x83bc>
   19a54:	ldr	r1, [sp, #4]
   19a58:	subs	r0, sl, r9
   19a5c:	movwne	r0, #1
   19a60:	cmn	sl, #1
   19a64:	moveq	sl, r7
   19a68:	orr	r1, r1, r0
   19a6c:	str	r1, [sp, #4]
   19a70:	ldr	r6, [r4, r7, lsl #2]
   19a74:	add	r7, r7, #1
   19a78:	cmp	r6, #0
   19a7c:	beq	19aac <__mempcpy_chk@plt+0x83e8>
   19a80:	mov	r0, r6
   19a84:	mov	r1, r8
   19a88:	mov	r2, r5
   19a8c:	bl	1167c <strncmp@plt>
   19a90:	cmp	r0, #0
   19a94:	bne	19a70 <__mempcpy_chk@plt+0x83ac>
   19a98:	mov	r0, r6
   19a9c:	bl	11538 <strlen@plt>
   19aa0:	cmp	r0, r5
   19aa4:	bne	19a54 <__mempcpy_chk@plt+0x8390>
   19aa8:	b	19a2c <__mempcpy_chk@plt+0x8368>
   19aac:	ldr	r0, [sp, #4]
   19ab0:	tst	r0, #1
   19ab4:	mvnne	sl, #1
   19ab8:	mov	r0, sl
   19abc:	sub	sp, fp, #28
   19ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ac4:	push	{r4, r5, r6, r7, fp, lr}
   19ac8:	add	fp, sp, #16
   19acc:	mov	r5, r0
   19ad0:	ldr	r0, [r1]
   19ad4:	mvn	r4, #0
   19ad8:	cmp	r0, #0
   19adc:	beq	19b08 <__mempcpy_chk@plt+0x8444>
   19ae0:	add	r7, r1, #4
   19ae4:	mov	r6, #0
   19ae8:	mov	r1, r5
   19aec:	bl	11370 <strcmp@plt>
   19af0:	cmp	r0, #0
   19af4:	beq	19b10 <__mempcpy_chk@plt+0x844c>
   19af8:	ldr	r0, [r7, r6, lsl #2]
   19afc:	add	r6, r6, #1
   19b00:	cmp	r0, #0
   19b04:	bne	19ae8 <__mempcpy_chk@plt+0x8424>
   19b08:	mov	r0, r4
   19b0c:	pop	{r4, r5, r6, r7, fp, pc}
   19b10:	mov	r0, r6
   19b14:	pop	{r4, r5, r6, r7, fp, pc}
   19b18:	push	{r4, r5, r6, sl, fp, lr}
   19b1c:	add	fp, sp, #16
   19b20:	sub	sp, sp, #8
   19b24:	mov	r5, r0
   19b28:	movw	r0, #48164	; 0xbc24
   19b2c:	mov	r4, r1
   19b30:	movw	r1, #48191	; 0xbc3f
   19b34:	cmn	r2, #1
   19b38:	mov	r2, #5
   19b3c:	movt	r0, #1
   19b40:	movt	r1, #1
   19b44:	moveq	r1, r0
   19b48:	mov	r0, #0
   19b4c:	bl	1140c <dcgettext@plt>
   19b50:	mov	r6, r0
   19b54:	mov	r0, #0
   19b58:	mov	r1, #8
   19b5c:	mov	r2, r4
   19b60:	bl	17c14 <__mempcpy_chk@plt+0x6550>
   19b64:	mov	r4, r0
   19b68:	mov	r0, #1
   19b6c:	mov	r1, r5
   19b70:	bl	181d4 <__mempcpy_chk@plt+0x6b10>
   19b74:	str	r0, [sp]
   19b78:	mov	r0, #0
   19b7c:	mov	r1, #0
   19b80:	mov	r2, r6
   19b84:	mov	r3, r4
   19b88:	bl	114a8 <error@plt>
   19b8c:	sub	sp, fp, #16
   19b90:	pop	{r4, r5, r6, sl, fp, pc}
   19b94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b98:	add	fp, sp, #28
   19b9c:	sub	sp, sp, #4
   19ba0:	mov	sl, r1
   19ba4:	movw	r1, #48220	; 0xbc5c
   19ba8:	mov	r4, r2
   19bac:	mov	r6, r0
   19bb0:	mov	r0, #0
   19bb4:	mov	r2, #5
   19bb8:	mov	r8, #0
   19bbc:	movt	r1, #1
   19bc0:	bl	1140c <dcgettext@plt>
   19bc4:	movw	r1, #49576	; 0xc1a8
   19bc8:	movt	r1, #2
   19bcc:	ldr	r1, [r1]
   19bd0:	bl	1134c <fputs_unlocked@plt>
   19bd4:	ldr	r7, [r6]
   19bd8:	cmp	r7, #0
   19bdc:	beq	19c98 <__mempcpy_chk@plt+0x85d4>
   19be0:	add	r0, r6, #4
   19be4:	mov	r9, #0
   19be8:	mov	r6, #0
   19bec:	str	r0, [sp]
   19bf0:	cmp	r9, #0
   19bf4:	bne	19c4c <__mempcpy_chk@plt+0x8588>
   19bf8:	mov	r5, #0
   19bfc:	movw	r0, #49576	; 0xc1a8
   19c00:	movt	r0, #2
   19c04:	ldr	r6, [r0]
   19c08:	mov	r0, r7
   19c0c:	bl	181e4 <__mempcpy_chk@plt+0x6b20>
   19c10:	movw	r2, #48241	; 0xbc71
   19c14:	mov	r3, r0
   19c18:	mov	r0, r6
   19c1c:	mov	r1, #1
   19c20:	movt	r2, #1
   19c24:	bl	115b0 <__fprintf_chk@plt>
   19c28:	add	r6, sl, r5
   19c2c:	ldr	r0, [sp]
   19c30:	add	r8, r8, r4
   19c34:	ldr	r7, [r0, -r9, lsl #2]
   19c38:	sub	r9, r9, #1
   19c3c:	cmp	r7, #0
   19c40:	beq	19c98 <__mempcpy_chk@plt+0x85d4>
   19c44:	cmp	r9, #0
   19c48:	beq	19bf8 <__mempcpy_chk@plt+0x8534>
   19c4c:	add	r1, sl, r8
   19c50:	mov	r0, r6
   19c54:	mov	r2, r4
   19c58:	bl	1152c <bcmp@plt>
   19c5c:	cmp	r0, #0
   19c60:	mov	r5, r8
   19c64:	bne	19bfc <__mempcpy_chk@plt+0x8538>
   19c68:	movw	r0, #49576	; 0xc1a8
   19c6c:	movt	r0, #2
   19c70:	ldr	r5, [r0]
   19c74:	mov	r0, r7
   19c78:	bl	181e4 <__mempcpy_chk@plt+0x6b20>
   19c7c:	movw	r2, #48249	; 0xbc79
   19c80:	mov	r3, r0
   19c84:	mov	r0, r5
   19c88:	mov	r1, #1
   19c8c:	movt	r2, #1
   19c90:	bl	115b0 <__fprintf_chk@plt>
   19c94:	b	19c2c <__mempcpy_chk@plt+0x8568>
   19c98:	movw	r0, #49576	; 0xc1a8
   19c9c:	movt	r0, #2
   19ca0:	ldr	r0, [r0]
   19ca4:	ldr	r1, [r0, #20]
   19ca8:	ldr	r2, [r0, #24]
   19cac:	cmp	r1, r2
   19cb0:	addcc	r2, r1, #1
   19cb4:	strcc	r2, [r0, #20]
   19cb8:	movcc	r0, #10
   19cbc:	strbcc	r0, [r1]
   19cc0:	subcc	sp, fp, #28
   19cc4:	popcc	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cc8:	mov	r1, #10
   19ccc:	sub	sp, fp, #28
   19cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19cd4:	b	115f8 <__overflow@plt>
   19cd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19cdc:	add	fp, sp, #28
   19ce0:	sub	sp, sp, #12
   19ce4:	mov	sl, r0
   19ce8:	ldr	r0, [fp, #16]
   19cec:	ldr	r9, [fp, #8]
   19cf0:	mov	r5, r3
   19cf4:	mov	r8, r2
   19cf8:	mov	r6, r1
   19cfc:	cmp	r0, #0
   19d00:	beq	19d30 <__mempcpy_chk@plt+0x866c>
   19d04:	mov	r0, r6
   19d08:	mov	r1, r8
   19d0c:	mov	r2, r5
   19d10:	mov	r3, r9
   19d14:	bl	19954 <__mempcpy_chk@plt+0x8290>
   19d18:	mov	r4, r0
   19d1c:	cmn	r4, #1
   19d20:	ble	19d80 <__mempcpy_chk@plt+0x86bc>
   19d24:	mov	r0, r4
   19d28:	sub	sp, fp, #28
   19d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19d30:	ldr	r0, [r8]
   19d34:	movw	r7, #48164	; 0xbc24
   19d38:	str	r5, [sp, #8]
   19d3c:	movt	r7, #1
   19d40:	cmp	r0, #0
   19d44:	beq	19d98 <__mempcpy_chk@plt+0x86d4>
   19d48:	add	r5, r8, #4
   19d4c:	mov	r4, #0
   19d50:	mov	r1, r6
   19d54:	bl	11370 <strcmp@plt>
   19d58:	cmp	r0, #0
   19d5c:	beq	19d74 <__mempcpy_chk@plt+0x86b0>
   19d60:	ldr	r0, [r5, r4, lsl #2]
   19d64:	add	r4, r4, #1
   19d68:	cmp	r0, #0
   19d6c:	bne	19d50 <__mempcpy_chk@plt+0x868c>
   19d70:	b	19d98 <__mempcpy_chk@plt+0x86d4>
   19d74:	ldr	r5, [sp, #8]
   19d78:	cmn	r4, #1
   19d7c:	bgt	19d24 <__mempcpy_chk@plt+0x8660>
   19d80:	movw	r0, #48164	; 0xbc24
   19d84:	movw	r7, #48191	; 0xbc3f
   19d88:	str	r5, [sp, #8]
   19d8c:	movt	r0, #1
   19d90:	movt	r7, #1
   19d94:	moveq	r7, r0
   19d98:	ldr	r5, [fp, #12]
   19d9c:	mov	r0, #0
   19da0:	mov	r1, r7
   19da4:	mov	r2, #5
   19da8:	bl	1140c <dcgettext@plt>
   19dac:	mov	r4, r0
   19db0:	mov	r0, #0
   19db4:	mov	r1, #8
   19db8:	mov	r2, r6
   19dbc:	bl	17c14 <__mempcpy_chk@plt+0x6550>
   19dc0:	mov	r6, r0
   19dc4:	mov	r0, #1
   19dc8:	mov	r1, sl
   19dcc:	bl	181d4 <__mempcpy_chk@plt+0x6b10>
   19dd0:	str	r0, [sp]
   19dd4:	mov	r0, #0
   19dd8:	mov	r1, #0
   19ddc:	mov	r2, r4
   19de0:	mov	r3, r6
   19de4:	bl	114a8 <error@plt>
   19de8:	ldr	r1, [sp, #8]
   19dec:	mov	r0, r8
   19df0:	mov	r2, r9
   19df4:	bl	19b94 <__mempcpy_chk@plt+0x84d0>
   19df8:	blx	r5
   19dfc:	mvn	r4, #0
   19e00:	mov	r0, r4
   19e04:	sub	sp, fp, #28
   19e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19e10:	add	fp, sp, #24
   19e14:	ldr	r6, [r1]
   19e18:	cmp	r6, #0
   19e1c:	beq	19e80 <__mempcpy_chk@plt+0x87bc>
   19e20:	mov	r8, r1
   19e24:	mov	r7, r2
   19e28:	mov	r1, r2
   19e2c:	mov	r2, r3
   19e30:	mov	r4, r3
   19e34:	mov	r9, r0
   19e38:	bl	1152c <bcmp@plt>
   19e3c:	cmp	r0, #0
   19e40:	beq	19e78 <__mempcpy_chk@plt+0x87b4>
   19e44:	add	r7, r7, r4
   19e48:	add	r5, r8, #4
   19e4c:	ldr	r6, [r5]
   19e50:	cmp	r6, #0
   19e54:	beq	19e80 <__mempcpy_chk@plt+0x87bc>
   19e58:	mov	r0, r9
   19e5c:	mov	r1, r7
   19e60:	mov	r2, r4
   19e64:	bl	1152c <bcmp@plt>
   19e68:	add	r7, r7, r4
   19e6c:	add	r5, r5, #4
   19e70:	cmp	r0, #0
   19e74:	bne	19e4c <__mempcpy_chk@plt+0x8788>
   19e78:	mov	r0, r6
   19e7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19e80:	mov	r6, #0
   19e84:	mov	r0, r6
   19e88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19e8c:	push	{r4, r5, r6, sl, fp, lr}
   19e90:	add	fp, sp, #16
   19e94:	mov	r4, r0
   19e98:	bl	11490 <__fpending@plt>
   19e9c:	ldr	r6, [r4]
   19ea0:	mov	r5, r0
   19ea4:	mov	r0, r4
   19ea8:	bl	19f10 <__mempcpy_chk@plt+0x884c>
   19eac:	tst	r6, #32
   19eb0:	bne	19ee8 <__mempcpy_chk@plt+0x8824>
   19eb4:	cmp	r0, #0
   19eb8:	mov	r4, r0
   19ebc:	mvnne	r4, #0
   19ec0:	cmp	r5, #0
   19ec4:	bne	19ef4 <__mempcpy_chk@plt+0x8830>
   19ec8:	cmp	r0, #0
   19ecc:	beq	19ef4 <__mempcpy_chk@plt+0x8830>
   19ed0:	bl	11550 <__errno_location@plt>
   19ed4:	ldr	r0, [r0]
   19ed8:	subs	r4, r0, #9
   19edc:	mvnne	r4, #0
   19ee0:	mov	r0, r4
   19ee4:	pop	{r4, r5, r6, sl, fp, pc}
   19ee8:	mvn	r4, #0
   19eec:	cmp	r0, #0
   19ef0:	beq	19efc <__mempcpy_chk@plt+0x8838>
   19ef4:	mov	r0, r4
   19ef8:	pop	{r4, r5, r6, sl, fp, pc}
   19efc:	bl	11550 <__errno_location@plt>
   19f00:	mov	r1, #0
   19f04:	str	r1, [r0]
   19f08:	mov	r0, r4
   19f0c:	pop	{r4, r5, r6, sl, fp, pc}
   19f10:	push	{r4, r5, r6, sl, fp, lr}
   19f14:	add	fp, sp, #16
   19f18:	sub	sp, sp, #8
   19f1c:	mov	r4, r0
   19f20:	bl	115a4 <fileno@plt>
   19f24:	cmn	r0, #1
   19f28:	ble	19f9c <__mempcpy_chk@plt+0x88d8>
   19f2c:	mov	r0, r4
   19f30:	bl	114e4 <__freading@plt>
   19f34:	cmp	r0, #0
   19f38:	beq	19f64 <__mempcpy_chk@plt+0x88a0>
   19f3c:	mov	r0, r4
   19f40:	bl	115a4 <fileno@plt>
   19f44:	mov	r1, #1
   19f48:	mov	r2, #0
   19f4c:	mov	r3, #0
   19f50:	str	r1, [sp]
   19f54:	bl	1146c <lseek64@plt>
   19f58:	and	r0, r0, r1
   19f5c:	cmn	r0, #1
   19f60:	beq	19f9c <__mempcpy_chk@plt+0x88d8>
   19f64:	mov	r0, r4
   19f68:	bl	148bc <__mempcpy_chk@plt+0x31f8>
   19f6c:	cmp	r0, #0
   19f70:	beq	19f9c <__mempcpy_chk@plt+0x88d8>
   19f74:	bl	11550 <__errno_location@plt>
   19f78:	ldr	r6, [r0]
   19f7c:	mov	r5, r0
   19f80:	mov	r0, r4
   19f84:	bl	115bc <fclose@plt>
   19f88:	cmp	r6, #0
   19f8c:	strne	r6, [r5]
   19f90:	mvnne	r0, #0
   19f94:	sub	sp, fp, #16
   19f98:	pop	{r4, r5, r6, sl, fp, pc}
   19f9c:	mov	r0, r4
   19fa0:	sub	sp, fp, #16
   19fa4:	pop	{r4, r5, r6, sl, fp, lr}
   19fa8:	b	115bc <fclose@plt>
   19fac:	ldrb	r2, [r0]
   19fb0:	cmp	r2, #0
   19fb4:	beq	19fe0 <__mempcpy_chk@plt+0x891c>
   19fb8:	add	r3, r0, #1
   19fbc:	mov	r0, #0
   19fc0:	ror	r0, r0, #23
   19fc4:	uxtab	r0, r0, r2
   19fc8:	ldrb	r2, [r3], #1
   19fcc:	cmp	r2, #0
   19fd0:	bne	19fc0 <__mempcpy_chk@plt+0x88fc>
   19fd4:	udiv	r2, r0, r1
   19fd8:	mls	r0, r2, r1, r0
   19fdc:	bx	lr
   19fe0:	mov	r0, #0
   19fe4:	udiv	r2, r0, r1
   19fe8:	mls	r0, r2, r1, r0
   19fec:	bx	lr
   19ff0:	push	{fp, lr}
   19ff4:	mov	fp, sp
   19ff8:	mov	r0, #14
   19ffc:	bl	1161c <nl_langinfo@plt>
   1a000:	movw	r1, #45316	; 0xb104
   1a004:	cmp	r0, #0
   1a008:	movt	r1, #1
   1a00c:	movne	r1, r0
   1a010:	movw	r0, #48254	; 0xbc7e
   1a014:	ldrb	r2, [r1]
   1a018:	movt	r0, #1
   1a01c:	cmp	r2, #0
   1a020:	movne	r0, r1
   1a024:	pop	{fp, pc}
   1a028:	push	{r4, r5, r6, r7, fp, lr}
   1a02c:	add	fp, sp, #16
   1a030:	sub	sp, sp, #8
   1a034:	cmp	r0, #0
   1a038:	add	r5, sp, #4
   1a03c:	mov	r7, r2
   1a040:	mov	r4, r1
   1a044:	movne	r5, r0
   1a048:	mov	r0, r5
   1a04c:	bl	1149c <mbrtowc@plt>
   1a050:	mov	r6, r0
   1a054:	cmp	r7, #0
   1a058:	beq	1a080 <__mempcpy_chk@plt+0x89bc>
   1a05c:	cmn	r6, #2
   1a060:	bcc	1a080 <__mempcpy_chk@plt+0x89bc>
   1a064:	mov	r0, #0
   1a068:	bl	1a2b4 <__mempcpy_chk@plt+0x8bf0>
   1a06c:	cmp	r0, #0
   1a070:	bne	1a080 <__mempcpy_chk@plt+0x89bc>
   1a074:	ldrb	r0, [r4]
   1a078:	mov	r6, #1
   1a07c:	str	r0, [r5]
   1a080:	mov	r0, r6
   1a084:	sub	sp, fp, #16
   1a088:	pop	{r4, r5, r6, r7, fp, pc}
   1a08c:	cmp	r2, #0
   1a090:	beq	1a0c0 <__mempcpy_chk@plt+0x89fc>
   1a094:	mvn	r3, #0
   1a098:	udiv	r3, r3, r2
   1a09c:	cmp	r3, r1
   1a0a0:	bcs	1a0c0 <__mempcpy_chk@plt+0x89fc>
   1a0a4:	push	{fp, lr}
   1a0a8:	mov	fp, sp
   1a0ac:	bl	11550 <__errno_location@plt>
   1a0b0:	mov	r1, #12
   1a0b4:	str	r1, [r0]
   1a0b8:	mov	r0, #0
   1a0bc:	pop	{fp, pc}
   1a0c0:	mul	r1, r2, r1
   1a0c4:	b	198f8 <__mempcpy_chk@plt+0x8234>
   1a0c8:	mov	r1, #0
   1a0cc:	mov	r2, #3
   1a0d0:	b	1a0d4 <__mempcpy_chk@plt+0x8a10>
   1a0d4:	sub	sp, sp, #8
   1a0d8:	push	{r4, r5, r6, r7, fp, lr}
   1a0dc:	add	fp, sp, #16
   1a0e0:	sub	sp, sp, #8
   1a0e4:	mov	r5, r0
   1a0e8:	add	r0, fp, #8
   1a0ec:	cmp	r1, #11
   1a0f0:	str	r2, [fp, #8]
   1a0f4:	str	r3, [fp, #12]
   1a0f8:	str	r0, [sp, #4]
   1a0fc:	bhi	1a138 <__mempcpy_chk@plt+0x8a74>
   1a100:	mov	r0, #1
   1a104:	movw	r2, #1300	; 0x514
   1a108:	tst	r2, r0, lsl r1
   1a10c:	bne	1a1f8 <__mempcpy_chk@plt+0x8b34>
   1a110:	movw	r2, #2570	; 0xa0a
   1a114:	tst	r2, r0, lsl r1
   1a118:	bne	1a160 <__mempcpy_chk@plt+0x8a9c>
   1a11c:	cmp	r1, #0
   1a120:	bne	1a138 <__mempcpy_chk@plt+0x8a74>
   1a124:	ldr	r0, [sp, #4]
   1a128:	add	r1, r0, #4
   1a12c:	str	r1, [sp, #4]
   1a130:	mov	r1, #0
   1a134:	b	1a204 <__mempcpy_chk@plt+0x8b40>
   1a138:	sub	r0, r1, #1024	; 0x400
   1a13c:	cmp	r0, #10
   1a140:	bhi	1a1f8 <__mempcpy_chk@plt+0x8b34>
   1a144:	mov	r2, #1
   1a148:	movw	r3, #645	; 0x285
   1a14c:	tst	r3, r2, lsl r0
   1a150:	bne	1a1f8 <__mempcpy_chk@plt+0x8b34>
   1a154:	movw	r3, #1282	; 0x502
   1a158:	tst	r3, r2, lsl r0
   1a15c:	beq	1a16c <__mempcpy_chk@plt+0x8aa8>
   1a160:	mov	r0, r5
   1a164:	bl	115e0 <fcntl64@plt>
   1a168:	b	1a210 <__mempcpy_chk@plt+0x8b4c>
   1a16c:	cmp	r0, #6
   1a170:	bne	1a1f8 <__mempcpy_chk@plt+0x8b34>
   1a174:	ldr	r0, [sp, #4]
   1a178:	movw	r7, #49944	; 0xc318
   1a17c:	movt	r7, #2
   1a180:	add	r1, r0, #4
   1a184:	str	r1, [sp, #4]
   1a188:	ldr	r6, [r0]
   1a18c:	ldr	r0, [r7]
   1a190:	cmp	r0, #0
   1a194:	bmi	1a234 <__mempcpy_chk@plt+0x8b70>
   1a198:	mov	r0, r5
   1a19c:	movw	r1, #1030	; 0x406
   1a1a0:	mov	r2, r6
   1a1a4:	bl	115e0 <fcntl64@plt>
   1a1a8:	mov	r4, r0
   1a1ac:	cmn	r0, #1
   1a1b0:	bgt	1a228 <__mempcpy_chk@plt+0x8b64>
   1a1b4:	bl	11550 <__errno_location@plt>
   1a1b8:	ldr	r0, [r0]
   1a1bc:	cmp	r0, #22
   1a1c0:	bne	1a228 <__mempcpy_chk@plt+0x8b64>
   1a1c4:	mov	r0, r5
   1a1c8:	mov	r1, #0
   1a1cc:	mov	r2, r6
   1a1d0:	bl	115e0 <fcntl64@plt>
   1a1d4:	mov	r4, r0
   1a1d8:	cmp	r0, #0
   1a1dc:	bmi	1a214 <__mempcpy_chk@plt+0x8b50>
   1a1e0:	mvn	r0, #0
   1a1e4:	str	r0, [r7]
   1a1e8:	mov	r0, #1
   1a1ec:	cmp	r0, #0
   1a1f0:	bne	1a260 <__mempcpy_chk@plt+0x8b9c>
   1a1f4:	b	1a214 <__mempcpy_chk@plt+0x8b50>
   1a1f8:	ldr	r0, [sp, #4]
   1a1fc:	add	r2, r0, #4
   1a200:	str	r2, [sp, #4]
   1a204:	ldr	r2, [r0]
   1a208:	mov	r0, r5
   1a20c:	bl	115e0 <fcntl64@plt>
   1a210:	mov	r4, r0
   1a214:	mov	r0, r4
   1a218:	sub	sp, fp, #16
   1a21c:	pop	{r4, r5, r6, r7, fp, lr}
   1a220:	add	sp, sp, #8
   1a224:	bx	lr
   1a228:	mov	r0, #1
   1a22c:	str	r0, [r7]
   1a230:	b	1a214 <__mempcpy_chk@plt+0x8b50>
   1a234:	mov	r0, r5
   1a238:	mov	r1, #0
   1a23c:	mov	r2, r6
   1a240:	bl	115e0 <fcntl64@plt>
   1a244:	mov	r4, r0
   1a248:	ldr	r0, [r7]
   1a24c:	add	r0, r0, #1
   1a250:	clz	r0, r0
   1a254:	lsr	r0, r0, #5
   1a258:	cmp	r0, #0
   1a25c:	beq	1a214 <__mempcpy_chk@plt+0x8b50>
   1a260:	cmp	r4, #0
   1a264:	bmi	1a214 <__mempcpy_chk@plt+0x8b50>
   1a268:	mov	r0, r4
   1a26c:	mov	r1, #1
   1a270:	bl	115e0 <fcntl64@plt>
   1a274:	cmp	r0, #0
   1a278:	bmi	1a294 <__mempcpy_chk@plt+0x8bd0>
   1a27c:	orr	r2, r0, #1
   1a280:	mov	r0, r4
   1a284:	mov	r1, #2
   1a288:	bl	115e0 <fcntl64@plt>
   1a28c:	cmn	r0, #1
   1a290:	bne	1a214 <__mempcpy_chk@plt+0x8b50>
   1a294:	bl	11550 <__errno_location@plt>
   1a298:	ldr	r6, [r0]
   1a29c:	mov	r5, r0
   1a2a0:	mov	r0, r4
   1a2a4:	bl	11694 <close@plt>
   1a2a8:	str	r6, [r5]
   1a2ac:	mvn	r4, #0
   1a2b0:	b	1a214 <__mempcpy_chk@plt+0x8b50>
   1a2b4:	push	{r4, sl, fp, lr}
   1a2b8:	add	fp, sp, #8
   1a2bc:	sub	sp, sp, #264	; 0x108
   1a2c0:	add	r1, sp, #7
   1a2c4:	movw	r2, #257	; 0x101
   1a2c8:	bl	1a320 <__mempcpy_chk@plt+0x8c5c>
   1a2cc:	mov	r4, #0
   1a2d0:	cmp	r0, #0
   1a2d4:	bne	1a314 <__mempcpy_chk@plt+0x8c50>
   1a2d8:	movw	r1, #48260	; 0xbc84
   1a2dc:	add	r0, sp, #7
   1a2e0:	mov	r2, #2
   1a2e4:	movt	r1, #1
   1a2e8:	bl	1152c <bcmp@plt>
   1a2ec:	cmp	r0, #0
   1a2f0:	beq	1a314 <__mempcpy_chk@plt+0x8c50>
   1a2f4:	movw	r1, #48262	; 0xbc86
   1a2f8:	add	r0, sp, #7
   1a2fc:	mov	r2, #6
   1a300:	movt	r1, #1
   1a304:	bl	1152c <bcmp@plt>
   1a308:	cmp	r0, #0
   1a30c:	mov	r4, r0
   1a310:	movwne	r4, #1
   1a314:	mov	r0, r4
   1a318:	sub	sp, fp, #8
   1a31c:	pop	{r4, sl, fp, pc}
   1a320:	push	{r4, r5, r6, r7, fp, lr}
   1a324:	add	fp, sp, #16
   1a328:	mov	r4, r1
   1a32c:	mov	r1, #0
   1a330:	mov	r6, r2
   1a334:	bl	11604 <setlocale@plt>
   1a338:	cmp	r0, #0
   1a33c:	beq	1a36c <__mempcpy_chk@plt+0x8ca8>
   1a340:	mov	r7, r0
   1a344:	bl	11538 <strlen@plt>
   1a348:	cmp	r0, r6
   1a34c:	bcs	1a388 <__mempcpy_chk@plt+0x8cc4>
   1a350:	add	r2, r0, #1
   1a354:	mov	r0, r4
   1a358:	mov	r1, r7
   1a35c:	bl	113e8 <memcpy@plt>
   1a360:	mov	r5, #0
   1a364:	mov	r0, r5
   1a368:	pop	{r4, r5, r6, r7, fp, pc}
   1a36c:	mov	r5, #22
   1a370:	cmp	r6, #0
   1a374:	beq	1a3b0 <__mempcpy_chk@plt+0x8cec>
   1a378:	mov	r0, #0
   1a37c:	strb	r0, [r4]
   1a380:	mov	r0, r5
   1a384:	pop	{r4, r5, r6, r7, fp, pc}
   1a388:	mov	r5, #34	; 0x22
   1a38c:	cmp	r6, #0
   1a390:	beq	1a3b0 <__mempcpy_chk@plt+0x8cec>
   1a394:	sub	r6, r6, #1
   1a398:	mov	r0, r4
   1a39c:	mov	r1, r7
   1a3a0:	mov	r2, r6
   1a3a4:	bl	113e8 <memcpy@plt>
   1a3a8:	mov	r0, #0
   1a3ac:	strb	r0, [r4, r6]
   1a3b0:	mov	r0, r5
   1a3b4:	pop	{r4, r5, r6, r7, fp, pc}
   1a3b8:	mov	r1, #0
   1a3bc:	b	11604 <setlocale@plt>
   1a3c0:	cmp	r3, #0
   1a3c4:	cmpeq	r2, #0
   1a3c8:	bne	1a3e0 <__mempcpy_chk@plt+0x8d1c>
   1a3cc:	cmp	r1, #0
   1a3d0:	cmpeq	r0, #0
   1a3d4:	mvnne	r1, #0
   1a3d8:	mvnne	r0, #0
   1a3dc:	b	1a3fc <__mempcpy_chk@plt+0x8d38>
   1a3e0:	sub	sp, sp, #8
   1a3e4:	push	{sp, lr}
   1a3e8:	bl	1a40c <__mempcpy_chk@plt+0x8d48>
   1a3ec:	ldr	lr, [sp, #4]
   1a3f0:	add	sp, sp, #8
   1a3f4:	pop	{r2, r3}
   1a3f8:	bx	lr
   1a3fc:	push	{r1, lr}
   1a400:	mov	r0, #8
   1a404:	bl	11358 <raise@plt>
   1a408:	pop	{r1, pc}
   1a40c:	cmp	r1, r3
   1a410:	cmpeq	r0, r2
   1a414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a418:	mov	r4, r0
   1a41c:	movcc	r0, #0
   1a420:	mov	r5, r1
   1a424:	ldr	lr, [sp, #36]	; 0x24
   1a428:	movcc	r1, r0
   1a42c:	bcc	1a528 <__mempcpy_chk@plt+0x8e64>
   1a430:	cmp	r3, #0
   1a434:	clzeq	ip, r2
   1a438:	clzne	ip, r3
   1a43c:	addeq	ip, ip, #32
   1a440:	cmp	r5, #0
   1a444:	clzeq	r1, r4
   1a448:	addeq	r1, r1, #32
   1a44c:	clzne	r1, r5
   1a450:	sub	ip, ip, r1
   1a454:	sub	sl, ip, #32
   1a458:	lsl	r9, r3, ip
   1a45c:	rsb	fp, ip, #32
   1a460:	orr	r9, r9, r2, lsl sl
   1a464:	orr	r9, r9, r2, lsr fp
   1a468:	lsl	r8, r2, ip
   1a46c:	cmp	r5, r9
   1a470:	cmpeq	r4, r8
   1a474:	movcc	r0, #0
   1a478:	movcc	r1, r0
   1a47c:	bcc	1a498 <__mempcpy_chk@plt+0x8dd4>
   1a480:	mov	r0, #1
   1a484:	subs	r4, r4, r8
   1a488:	lsl	r1, r0, sl
   1a48c:	orr	r1, r1, r0, lsr fp
   1a490:	lsl	r0, r0, ip
   1a494:	sbc	r5, r5, r9
   1a498:	cmp	ip, #0
   1a49c:	beq	1a528 <__mempcpy_chk@plt+0x8e64>
   1a4a0:	lsr	r6, r8, #1
   1a4a4:	orr	r6, r6, r9, lsl #31
   1a4a8:	lsr	r7, r9, #1
   1a4ac:	mov	r2, ip
   1a4b0:	b	1a4d4 <__mempcpy_chk@plt+0x8e10>
   1a4b4:	subs	r3, r4, r6
   1a4b8:	sbc	r8, r5, r7
   1a4bc:	adds	r3, r3, r3
   1a4c0:	adc	r8, r8, r8
   1a4c4:	adds	r4, r3, #1
   1a4c8:	adc	r5, r8, #0
   1a4cc:	subs	r2, r2, #1
   1a4d0:	beq	1a4f0 <__mempcpy_chk@plt+0x8e2c>
   1a4d4:	cmp	r5, r7
   1a4d8:	cmpeq	r4, r6
   1a4dc:	bcs	1a4b4 <__mempcpy_chk@plt+0x8df0>
   1a4e0:	adds	r4, r4, r4
   1a4e4:	adc	r5, r5, r5
   1a4e8:	subs	r2, r2, #1
   1a4ec:	bne	1a4d4 <__mempcpy_chk@plt+0x8e10>
   1a4f0:	lsr	r3, r4, ip
   1a4f4:	orr	r3, r3, r5, lsl fp
   1a4f8:	lsr	r2, r5, ip
   1a4fc:	orr	r3, r3, r5, lsr sl
   1a500:	adds	r0, r0, r4
   1a504:	mov	r4, r3
   1a508:	lsl	r3, r2, ip
   1a50c:	orr	r3, r3, r4, lsl sl
   1a510:	lsl	ip, r4, ip
   1a514:	orr	r3, r3, r4, lsr fp
   1a518:	adc	r1, r1, r5
   1a51c:	subs	r0, r0, ip
   1a520:	mov	r5, r2
   1a524:	sbc	r1, r1, r3
   1a528:	cmp	lr, #0
   1a52c:	strdne	r4, [lr]
   1a530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a534:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a538:	mov	r7, r0
   1a53c:	ldr	r6, [pc, #72]	; 1a58c <__mempcpy_chk@plt+0x8ec8>
   1a540:	ldr	r5, [pc, #72]	; 1a590 <__mempcpy_chk@plt+0x8ecc>
   1a544:	add	r6, pc, r6
   1a548:	add	r5, pc, r5
   1a54c:	sub	r6, r6, r5
   1a550:	mov	r8, r1
   1a554:	mov	r9, r2
   1a558:	bl	11320 <calloc@plt-0x20>
   1a55c:	asrs	r6, r6, #2
   1a560:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a564:	mov	r4, #0
   1a568:	add	r4, r4, #1
   1a56c:	ldr	r3, [r5], #4
   1a570:	mov	r2, r9
   1a574:	mov	r1, r8
   1a578:	mov	r0, r7
   1a57c:	blx	r3
   1a580:	cmp	r6, r4
   1a584:	bne	1a568 <__mempcpy_chk@plt+0x8ea4>
   1a588:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a58c:	andeq	r1, r1, r0, asr #19
   1a590:			; <UNDEFINED> instruction: 0x000119b8
   1a594:	bx	lr
   1a598:	ldr	r3, [pc, #12]	; 1a5ac <__mempcpy_chk@plt+0x8ee8>
   1a59c:	mov	r1, #0
   1a5a0:	add	r3, pc, r3
   1a5a4:	ldr	r2, [r3]
   1a5a8:	b	1155c <__cxa_atexit@plt>
   1a5ac:	muleq	r1, ip, fp

Disassembly of section .fini:

0001a5b0 <.fini>:
   1a5b0:	push	{r3, lr}
   1a5b4:	pop	{r3, pc}
