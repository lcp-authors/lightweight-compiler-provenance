
../repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010ce8 <.init>:
   10ce8:	push	{r3, lr}
   10cec:	bl	10ff8 <_start@@Base+0x3c>
   10cf0:	pop	{r3, pc}

Disassembly of section .plt:

00010cf4 <strcmp@plt-0x14>:
   10cf4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cf8:	ldr	lr, [pc, #4]	; 10d04 <strcmp@plt-0x4>
   10cfc:	add	lr, pc, lr
   10d00:	ldr	pc, [lr, #8]!
   10d04:	strdeq	r2, [r1], -ip

00010d08 <strcmp@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #764]!	; 0x2fc

00010d14 <printf@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d20 <fopen@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #748]!	; 0x2ec

00010d2c <free@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #740]!	; 0x2e4

00010d38 <fgets@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #73728	; 0x12000
   10d40:	ldr	pc, [ip, #732]!	; 0x2dc

00010d44 <memcpy@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #73728	; 0x12000
   10d4c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d50 <stpcpy@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #73728	; 0x12000
   10d58:	ldr	pc, [ip, #716]!	; 0x2cc

00010d5c <realloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #73728	; 0x12000
   10d64:	ldr	pc, [ip, #708]!	; 0x2c4

00010d68 <strcpy@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #700]!	; 0x2bc

00010d74 <puts@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #692]!	; 0x2b4

00010d80 <malloc@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #73728	; 0x12000
   10d88:	ldr	pc, [ip, #684]!	; 0x2ac

00010d8c <__libc_start_main@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #73728	; 0x12000
   10d94:	ldr	pc, [ip, #676]!	; 0x2a4

00010d98 <__gmon_start__@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #73728	; 0x12000
   10da0:	ldr	pc, [ip, #668]!	; 0x29c

00010da4 <strlen@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #73728	; 0x12000
   10dac:	ldr	pc, [ip, #660]!	; 0x294

00010db0 <putchar@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #73728	; 0x12000
   10db8:	ldr	pc, [ip, #652]!	; 0x28c

00010dbc <fclose@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #73728	; 0x12000
   10dc4:	ldr	pc, [ip, #644]!	; 0x284

00010dc8 <strtok@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #73728	; 0x12000
   10dd0:	ldr	pc, [ip, #636]!	; 0x27c

00010dd4 <abort@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #73728	; 0x12000
   10ddc:	ldr	pc, [ip, #628]!	; 0x274

Disassembly of section .text:

00010de0 <main@@Base>:
   10de0:	movw	r0, #11200	; 0x2bc0
   10de4:	movt	r0, #1
   10de8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10dec:	strd	r6, [sp, #8]
   10df0:	str	r8, [sp, #16]
   10df4:	str	lr, [sp, #20]
   10df8:	sub	sp, sp, #144	; 0x90
   10dfc:	bl	10d74 <puts@plt>
   10e00:	movw	ip, #11160	; 0x2b98
   10e04:	movt	ip, #1
   10e08:	ldrd	r0, [ip]
   10e0c:	add	r6, sp, #44	; 0x2c
   10e10:	add	r7, sp, #4
   10e14:	ldrd	r2, [ip, #8]
   10e18:	ldrd	r4, [ip, #16]
   10e1c:	strd	r0, [sp, #4]
   10e20:	ldrd	r0, [ip, #24]
   10e24:	strd	r2, [sp, #12]
   10e28:	ldrd	r2, [ip, #32]
   10e2c:	strd	r4, [sp, #20]
   10e30:	strd	r0, [sp, #28]
   10e34:	strd	r2, [sp, #36]	; 0x24
   10e38:	bl	122d8 <bst_nova@@Base>
   10e3c:	mov	r5, r0
   10e40:	ldr	r1, [r7], #4
   10e44:	mov	r0, r5
   10e48:	bl	12560 <bst_insere@@Base>
   10e4c:	cmp	r6, r7
   10e50:	bne	10e40 <main@@Base+0x60>
   10e54:	ldr	r0, [r5]
   10e58:	movw	r4, #11244	; 0x2bec
   10e5c:	movt	r4, #1
   10e60:	bl	129bc <bst_altura@@Base>
   10e64:	mov	r1, r0
   10e68:	movw	r0, #11204	; 0x2bc4
   10e6c:	movt	r0, #1
   10e70:	mov	r8, #0
   10e74:	bl	10d14 <printf@plt>
   10e78:	mov	r0, r5
   10e7c:	bl	12aac <bst_imprime@@Base>
   10e80:	movw	r0, #11224	; 0x2bd8
   10e84:	movt	r0, #1
   10e88:	bl	10d74 <puts@plt>
   10e8c:	bl	110ac <avl_nova@@Base>
   10e90:	mov	r5, r0
   10e94:	movw	r1, #11228	; 0x2bdc
   10e98:	movt	r1, #1
   10e9c:	movw	r0, #11232	; 0x2be0
   10ea0:	movt	r0, #1
   10ea4:	bl	10d20 <fopen@plt>
   10ea8:	mov	r7, r0
   10eac:	b	10ef4 <main@@Base+0x114>
   10eb0:	bl	10dc8 <strtok@plt>
   10eb4:	mov	r1, r0
   10eb8:	mov	r0, r6
   10ebc:	bl	10d68 <strcpy@plt>
   10ec0:	mov	r1, r4
   10ec4:	mov	r0, #0
   10ec8:	bl	10dc8 <strtok@plt>
   10ecc:	mov	r1, r0
   10ed0:	mov	r0, r6
   10ed4:	bl	10d50 <stpcpy@plt>
   10ed8:	sub	r0, r0, r6
   10edc:	add	r3, sp, #144	; 0x90
   10ee0:	add	r3, r3, r0
   10ee4:	mov	r1, r6
   10ee8:	mov	r0, r5
   10eec:	strb	r8, [r3, #-101]	; 0xffffff9b
   10ef0:	bl	117cc <avl_insere@@Base>
   10ef4:	mov	r1, #100	; 0x64
   10ef8:	mov	r2, r7
   10efc:	mov	r0, r6
   10f00:	bl	10d38 <fgets@plt>
   10f04:	cmp	r0, #0
   10f08:	mov	r1, r4
   10f0c:	mov	r0, r6
   10f10:	bne	10eb0 <main@@Base+0xd0>
   10f14:	mov	r0, r7
   10f18:	bl	10dbc <fclose@plt>
   10f1c:	movw	r1, #11248	; 0x2bf0
   10f20:	movt	r1, #1
   10f24:	mov	r0, r5
   10f28:	bl	110d4 <avl_pesquisa@@Base>
   10f2c:	subs	r3, r0, #0
   10f30:	beq	10f48 <main@@Base+0x168>
   10f34:	movw	r0, #11260	; 0x2bfc
   10f38:	movt	r0, #1
   10f3c:	ldr	r1, [r3]
   10f40:	ldr	r2, [r3, #16]
   10f44:	bl	10d14 <printf@plt>
   10f48:	movw	r1, #11272	; 0x2c08
   10f4c:	movt	r1, #1
   10f50:	mov	r0, r5
   10f54:	bl	110d4 <avl_pesquisa@@Base>
   10f58:	subs	r3, r0, #0
   10f5c:	beq	10f74 <main@@Base+0x194>
   10f60:	movw	r0, #11260	; 0x2bfc
   10f64:	movt	r0, #1
   10f68:	ldr	r1, [r3]
   10f6c:	ldr	r2, [r3, #16]
   10f70:	bl	10d14 <printf@plt>
   10f74:	mov	r0, r5
   10f78:	movw	r1, #11280	; 0x2c10
   10f7c:	movt	r1, #1
   10f80:	bl	110d4 <avl_pesquisa@@Base>
   10f84:	subs	r3, r0, #0
   10f88:	beq	10fa0 <main@@Base+0x1c0>
   10f8c:	movw	r0, #11260	; 0x2bfc
   10f90:	movt	r0, #1
   10f94:	ldr	r1, [r3]
   10f98:	ldr	r2, [r3, #16]
   10f9c:	bl	10d14 <printf@plt>
   10fa0:	mov	r0, #0
   10fa4:	add	sp, sp, #144	; 0x90
   10fa8:	ldrd	r4, [sp]
   10fac:	ldrd	r6, [sp, #8]
   10fb0:	ldr	r8, [sp, #16]
   10fb4:	add	sp, sp, #20
   10fb8:	pop	{pc}		; (ldr pc, [sp], #4)

00010fbc <_start@@Base>:
   10fbc:	mov	fp, #0
   10fc0:	mov	lr, #0
   10fc4:	pop	{r1}		; (ldr r1, [sp], #4)
   10fc8:	mov	r2, sp
   10fcc:	push	{r2}		; (str r2, [sp, #-4]!)
   10fd0:	push	{r0}		; (str r0, [sp, #-4]!)
   10fd4:	ldr	ip, [pc, #16]	; 10fec <_start@@Base+0x30>
   10fd8:	push	{ip}		; (str ip, [sp, #-4]!)
   10fdc:	ldr	r0, [pc, #12]	; 10ff0 <_start@@Base+0x34>
   10fe0:	ldr	r3, [pc, #12]	; 10ff4 <_start@@Base+0x38>
   10fe4:	bl	10d8c <__libc_start_main@plt>
   10fe8:	bl	10dd4 <abort@plt>
   10fec:	andeq	r2, r1, r8, lsl #23
   10ff0:	andeq	r0, r1, r0, ror #27
   10ff4:	andeq	r2, r1, r8, lsr #22
   10ff8:	ldr	r3, [pc, #20]	; 11014 <_start@@Base+0x58>
   10ffc:	ldr	r2, [pc, #20]	; 11018 <_start@@Base+0x5c>
   11000:	add	r3, pc, r3
   11004:	ldr	r2, [r3, r2]
   11008:	cmp	r2, #0
   1100c:	bxeq	lr
   11010:	b	10d98 <__gmon_start__@plt>
   11014:	strdeq	r1, [r1], -r8
   11018:	andeq	r0, r0, r4, asr r0
   1101c:	ldr	r0, [pc, #24]	; 1103c <_start@@Base+0x80>
   11020:	ldr	r3, [pc, #24]	; 11040 <_start@@Base+0x84>
   11024:	cmp	r3, r0
   11028:	bxeq	lr
   1102c:	ldr	r3, [pc, #16]	; 11044 <_start@@Base+0x88>
   11030:	cmp	r3, #0
   11034:	bxeq	lr
   11038:	bx	r3
   1103c:	andeq	r3, r2, r0, rrx
   11040:	andeq	r3, r2, r0, rrx
   11044:	andeq	r0, r0, r0
   11048:	ldr	r0, [pc, #36]	; 11074 <_start@@Base+0xb8>
   1104c:	ldr	r1, [pc, #36]	; 11078 <_start@@Base+0xbc>
   11050:	sub	r1, r1, r0
   11054:	asr	r1, r1, #2
   11058:	add	r1, r1, r1, lsr #31
   1105c:	asrs	r1, r1, #1
   11060:	bxeq	lr
   11064:	ldr	r3, [pc, #16]	; 1107c <_start@@Base+0xc0>
   11068:	cmp	r3, #0
   1106c:	bxeq	lr
   11070:	bx	r3
   11074:	andeq	r3, r2, r0, rrx
   11078:	andeq	r3, r2, r0, rrx
   1107c:	andeq	r0, r0, r0
   11080:	push	{r4, lr}
   11084:	ldr	r4, [pc, #24]	; 110a4 <_start@@Base+0xe8>
   11088:	ldrb	r3, [r4]
   1108c:	cmp	r3, #0
   11090:	popne	{r4, pc}
   11094:	bl	1101c <_start@@Base+0x60>
   11098:	mov	r3, #1
   1109c:	strb	r3, [r4]
   110a0:	pop	{r4, pc}
   110a4:	andeq	r3, r2, r0, rrx
   110a8:	b	11048 <_start@@Base+0x8c>

000110ac <avl_nova@@Base>:
   110ac:	mov	r0, #4
   110b0:	str	r4, [sp, #-8]!
   110b4:	str	lr, [sp, #4]
   110b8:	bl	10d80 <malloc@plt>
   110bc:	cmp	r0, #0
   110c0:	ldr	r4, [sp]
   110c4:	add	sp, sp, #4
   110c8:	movne	r3, #0
   110cc:	strne	r3, [r0]
   110d0:	pop	{pc}		; (ldr pc, [sp], #4)

000110d4 <avl_pesquisa@@Base>:
   110d4:	cmp	r1, #0
   110d8:	cmpne	r0, #0
   110dc:	strd	r4, [sp, #-16]!
   110e0:	moveq	r4, #0
   110e4:	str	r6, [sp, #8]
   110e8:	str	lr, [sp, #12]
   110ec:	beq	11134 <avl_pesquisa@@Base+0x60>
   110f0:	ldr	r4, [r0]
   110f4:	mov	r5, r1
   110f8:	cmp	r4, #0
   110fc:	bne	11114 <avl_pesquisa@@Base+0x40>
   11100:	b	11134 <avl_pesquisa@@Base+0x60>
   11104:	beq	11134 <avl_pesquisa@@Base+0x60>
   11108:	ldr	r4, [r4, #8]
   1110c:	cmp	r4, #0
   11110:	beq	11134 <avl_pesquisa@@Base+0x60>
   11114:	mov	r0, r5
   11118:	ldr	r1, [r4]
   1111c:	bl	10d08 <strcmp@plt>
   11120:	cmp	r0, #0
   11124:	bge	11104 <avl_pesquisa@@Base+0x30>
   11128:	ldr	r4, [r4, #4]
   1112c:	cmp	r4, #0
   11130:	bne	11114 <avl_pesquisa@@Base+0x40>
   11134:	mov	r0, r4
   11138:	ldrd	r4, [sp]
   1113c:	ldr	r6, [sp, #8]
   11140:	add	sp, sp, #12
   11144:	pop	{pc}		; (ldr pc, [sp], #4)

00011148 <avl_min@@Base>:
   11148:	cmp	r0, #0
   1114c:	beq	1116c <avl_min@@Base+0x24>
   11150:	ldr	r2, [r0]
   11154:	b	1115c <avl_min@@Base+0x14>
   11158:	mov	r2, r3
   1115c:	ldr	r3, [r2, #4]
   11160:	cmp	r3, #0
   11164:	bne	11158 <avl_min@@Base+0x10>
   11168:	ldr	r0, [r2]
   1116c:	bx	lr

00011170 <avl_max@@Base>:
   11170:	cmp	r0, #0
   11174:	beq	11194 <avl_max@@Base+0x24>
   11178:	ldr	r2, [r0]
   1117c:	b	11184 <avl_max@@Base+0x14>
   11180:	mov	r2, r3
   11184:	ldr	r3, [r2, #8]
   11188:	cmp	r3, #0
   1118c:	bne	11180 <avl_max@@Base+0x10>
   11190:	ldr	r0, [r2]
   11194:	bx	lr

00011198 <avl_altura@@Base>:
   11198:	cmp	r0, #0
   1119c:	ldrne	r0, [r0, #12]
   111a0:	mvneq	r0, #0
   111a4:	bx	lr

000111a8 <max@@Base>:
   111a8:	cmp	r1, r0
   111ac:	movge	r0, r1
   111b0:	bx	lr

000111b4 <avl_novo_no@@Base>:
   111b4:	strd	r4, [sp, #-16]!
   111b8:	mov	r5, r0
   111bc:	mov	r0, #20
   111c0:	str	r6, [sp, #8]
   111c4:	str	lr, [sp, #12]
   111c8:	bl	10d80 <malloc@plt>
   111cc:	mov	r4, r0
   111d0:	mov	r0, r5
   111d4:	bl	10da4 <strlen@plt>
   111d8:	add	r6, r0, #1
   111dc:	mov	r0, r6
   111e0:	bl	10d80 <malloc@plt>
   111e4:	mov	r2, r6
   111e8:	mov	r1, r5
   111ec:	str	r0, [r4]
   111f0:	bl	10d44 <memcpy@plt>
   111f4:	mov	r3, #0
   111f8:	mov	r2, #1
   111fc:	ldr	r6, [sp, #8]
   11200:	mov	r0, r4
   11204:	str	r3, [r4, #4]
   11208:	str	r3, [r4, #8]
   1120c:	str	r3, [r4, #12]
   11210:	str	r2, [r4, #16]
   11214:	ldrd	r4, [sp]
   11218:	add	sp, sp, #12
   1121c:	pop	{pc}		; (ldr pc, [sp], #4)

00011220 <roda_direita@@Base>:
   11220:	ldr	r2, [r0, #4]
   11224:	ldr	r3, [r2, #8]
   11228:	str	r0, [r2, #8]
   1122c:	cmp	r3, #0
   11230:	str	r3, [r0, #4]
   11234:	ldrne	r1, [r3, #12]
   11238:	mvneq	r1, #0
   1123c:	ldr	r3, [r0, #8]
   11240:	ldr	ip, [r2, #4]
   11244:	cmp	r3, #0
   11248:	ldrne	r3, [r3, #12]
   1124c:	mvneq	r3, #0
   11250:	cmp	r3, r1
   11254:	movlt	r3, r1
   11258:	cmp	ip, #0
   1125c:	add	r3, r3, #1
   11260:	mvneq	r1, #0
   11264:	str	r3, [r0, #12]
   11268:	mov	r0, r2
   1126c:	ldrne	r1, [ip, #12]
   11270:	cmp	r3, r1
   11274:	movlt	r3, r1
   11278:	add	r3, r3, #1
   1127c:	str	r3, [r2, #12]
   11280:	bx	lr

00011284 <roda_esquerda@@Base>:
   11284:	ldr	r2, [r0, #8]
   11288:	ldr	r1, [r2, #4]
   1128c:	str	r0, [r2, #4]
   11290:	ldr	r3, [r0, #4]
   11294:	str	r1, [r0, #8]
   11298:	cmp	r3, #0
   1129c:	ldrne	ip, [r3, #12]
   112a0:	mvneq	ip, #0
   112a4:	cmp	r1, #0
   112a8:	mvneq	r3, #0
   112ac:	ldrne	r3, [r1, #12]
   112b0:	ldr	r1, [r2, #8]
   112b4:	cmp	r3, ip
   112b8:	movlt	r3, ip
   112bc:	add	r3, r3, #1
   112c0:	cmp	r1, #0
   112c4:	mvneq	r1, #0
   112c8:	str	r3, [r0, #12]
   112cc:	mov	r0, r2
   112d0:	ldrne	r1, [r1, #12]
   112d4:	cmp	r3, r1
   112d8:	movlt	r3, r1
   112dc:	add	r3, r3, #1
   112e0:	str	r3, [r2, #12]
   112e4:	bx	lr

000112e8 <calc_balanceamento@@Base>:
   112e8:	cmp	r0, #0
   112ec:	beq	11314 <calc_balanceamento@@Base+0x2c>
   112f0:	ldr	r3, [r0, #8]
   112f4:	cmp	r3, #0
   112f8:	ldrne	r2, [r3, #12]
   112fc:	mvneq	r2, #0
   11300:	ldr	r3, [r0, #4]
   11304:	cmp	r3, #0
   11308:	ldrne	r0, [r3, #12]
   1130c:	mvneq	r0, #0
   11310:	sub	r0, r2, r0
   11314:	bx	lr

00011318 <avl_pesquisa_impl@@Base>:
   11318:	strd	r4, [sp, #-16]!
   1131c:	subs	r4, r0, #0
   11320:	movne	r5, r1
   11324:	str	r6, [sp, #8]
   11328:	str	lr, [sp, #12]
   1132c:	bne	11344 <avl_pesquisa_impl@@Base+0x2c>
   11330:	b	11364 <avl_pesquisa_impl@@Base+0x4c>
   11334:	beq	11364 <avl_pesquisa_impl@@Base+0x4c>
   11338:	ldr	r4, [r4, #8]
   1133c:	cmp	r4, #0
   11340:	beq	11364 <avl_pesquisa_impl@@Base+0x4c>
   11344:	mov	r0, r5
   11348:	ldr	r1, [r4]
   1134c:	bl	10d08 <strcmp@plt>
   11350:	cmp	r0, #0
   11354:	bge	11334 <avl_pesquisa_impl@@Base+0x1c>
   11358:	ldr	r4, [r4, #4]
   1135c:	cmp	r4, #0
   11360:	bne	11344 <avl_pesquisa_impl@@Base+0x2c>
   11364:	mov	r0, r4
   11368:	ldrd	r4, [sp]
   1136c:	ldr	r6, [sp, #8]
   11370:	add	sp, sp, #12
   11374:	pop	{pc}		; (ldr pc, [sp], #4)

00011378 <avl_insere_impl@@Base>:
   11378:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1137c:	subs	r5, r0, #0
   11380:	strd	r6, [sp, #8]
   11384:	mov	r6, r1
   11388:	str	r8, [sp, #16]
   1138c:	str	lr, [sp, #20]
   11390:	beq	1154c <avl_insere_impl@@Base+0x1d4>
   11394:	mov	r0, r1
   11398:	ldr	r1, [r5]
   1139c:	bl	10d08 <strcmp@plt>
   113a0:	cmp	r0, #0
   113a4:	blt	114b8 <avl_insere_impl@@Base+0x140>
   113a8:	beq	11494 <avl_insere_impl@@Base+0x11c>
   113ac:	mov	r1, r6
   113b0:	ldr	r0, [r5, #8]
   113b4:	bl	11378 <avl_insere_impl@@Base>
   113b8:	mov	r4, r0
   113bc:	ldr	r0, [r5, #4]
   113c0:	str	r4, [r5, #8]
   113c4:	cmp	r0, #0
   113c8:	beq	116e0 <avl_insere_impl@@Base+0x368>
   113cc:	cmp	r4, #0
   113d0:	ldr	r3, [r0, #12]
   113d4:	beq	116c4 <avl_insere_impl@@Base+0x34c>
   113d8:	ldr	r2, [r4, #12]
   113dc:	cmp	r3, r2
   113e0:	movlt	r3, r2
   113e4:	add	r3, r3, #1
   113e8:	str	r3, [r5, #12]
   113ec:	ldr	r2, [r4, #12]
   113f0:	ldr	r3, [r0, #12]
   113f4:	sub	r3, r2, r3
   113f8:	cmp	r3, #1
   113fc:	ble	114a8 <avl_insere_impl@@Base+0x130>
   11400:	ldrd	r2, [r4, #4]
   11404:	cmp	r3, #0
   11408:	beq	1170c <avl_insere_impl@@Base+0x394>
   1140c:	cmp	r2, #0
   11410:	ldr	r3, [r3, #12]
   11414:	beq	11724 <avl_insere_impl@@Base+0x3ac>
   11418:	ldr	r1, [r2, #12]
   1141c:	sub	r3, r3, r1
   11420:	cmp	r3, #0
   11424:	blt	11594 <avl_insere_impl@@Base+0x21c>
   11428:	str	r5, [r4, #4]
   1142c:	ldr	r3, [r5, #4]
   11430:	str	r2, [r5, #8]
   11434:	cmp	r3, #0
   11438:	beq	1171c <avl_insere_impl@@Base+0x3a4>
   1143c:	ldr	r1, [r3, #12]
   11440:	cmp	r2, #0
   11444:	ldrne	r3, [r2, #12]
   11448:	mvneq	r3, #0
   1144c:	ldr	r2, [r4, #8]
   11450:	cmp	r3, r1
   11454:	movlt	r3, r1
   11458:	cmp	r2, #0
   1145c:	add	r3, r3, #1
   11460:	mvneq	r2, #0
   11464:	str	r3, [r5, #12]
   11468:	ldrne	r2, [r2, #12]
   1146c:	cmp	r3, r2
   11470:	movlt	r3, r2
   11474:	add	r3, r3, #1
   11478:	str	r3, [r4, #12]
   1147c:	mov	r0, r4
   11480:	ldrd	r4, [sp]
   11484:	ldrd	r6, [sp, #8]
   11488:	ldr	r8, [sp, #16]
   1148c:	add	sp, sp, #20
   11490:	pop	{pc}		; (ldr pc, [sp], #4)
   11494:	ldr	r3, [r5, #16]
   11498:	mov	r4, r5
   1149c:	add	r3, r3, #1
   114a0:	str	r3, [r5, #16]
   114a4:	b	1147c <avl_insere_impl@@Base+0x104>
   114a8:	cmn	r3, #1
   114ac:	blt	114d0 <avl_insere_impl@@Base+0x158>
   114b0:	mov	r4, r5
   114b4:	b	1147c <avl_insere_impl@@Base+0x104>
   114b8:	mov	r1, r6
   114bc:	ldr	r0, [r5, #4]
   114c0:	bl	11378 <avl_insere_impl@@Base>
   114c4:	str	r0, [r5, #4]
   114c8:	ldr	r4, [r5, #8]
   114cc:	b	113c4 <avl_insere_impl@@Base+0x4c>
   114d0:	ldmib	r0, {r2, r4}
   114d4:	cmp	r4, #0
   114d8:	beq	1172c <avl_insere_impl@@Base+0x3b4>
   114dc:	cmp	r2, #0
   114e0:	ldr	r3, [r4, #12]
   114e4:	beq	11640 <avl_insere_impl@@Base+0x2c8>
   114e8:	ldr	r2, [r2, #12]
   114ec:	sub	r2, r3, r2
   114f0:	cmp	r2, #0
   114f4:	bgt	11648 <avl_insere_impl@@Base+0x2d0>
   114f8:	mov	r2, r3
   114fc:	str	r5, [r0, #8]
   11500:	str	r4, [r5, #4]
   11504:	ldr	r3, [r5, #8]
   11508:	mov	r4, r0
   1150c:	ldr	r1, [r0, #4]
   11510:	cmp	r3, #0
   11514:	ldrne	r3, [r3, #12]
   11518:	mvneq	r3, #0
   1151c:	cmp	r3, r2
   11520:	movlt	r3, r2
   11524:	cmp	r1, #0
   11528:	add	r3, r3, #1
   1152c:	mvneq	r2, #0
   11530:	str	r3, [r5, #12]
   11534:	ldrne	r2, [r1, #12]
   11538:	cmp	r3, r2
   1153c:	movlt	r3, r2
   11540:	add	r3, r3, #1
   11544:	str	r3, [r0, #12]
   11548:	b	1147c <avl_insere_impl@@Base+0x104>
   1154c:	mov	r0, #20
   11550:	bl	10d80 <malloc@plt>
   11554:	mov	r4, r0
   11558:	mov	r0, r6
   1155c:	bl	10da4 <strlen@plt>
   11560:	add	r7, r0, #1
   11564:	mov	r0, r7
   11568:	bl	10d80 <malloc@plt>
   1156c:	mov	r2, r7
   11570:	mov	r1, r6
   11574:	str	r0, [r4]
   11578:	bl	10d44 <memcpy@plt>
   1157c:	mov	r3, #1
   11580:	str	r5, [r4, #4]
   11584:	str	r5, [r4, #8]
   11588:	str	r5, [r4, #12]
   1158c:	str	r3, [r4, #16]
   11590:	b	1147c <avl_insere_impl@@Base+0x104>
   11594:	ldr	r3, [r2, #8]
   11598:	str	r4, [r2, #8]
   1159c:	ldr	r1, [r4, #8]
   115a0:	cmp	r3, #0
   115a4:	str	r3, [r4, #4]
   115a8:	ldrne	r3, [r3, #12]
   115ac:	mvneq	r3, #0
   115b0:	cmp	r1, #0
   115b4:	ldrne	r1, [r1, #12]
   115b8:	mvneq	r1, #0
   115bc:	ldr	r0, [r2, #4]
   115c0:	cmp	r1, r3
   115c4:	movlt	r1, r3
   115c8:	add	r1, r1, #1
   115cc:	cmp	r0, #0
   115d0:	str	r1, [r4, #12]
   115d4:	beq	11750 <avl_insere_impl@@Base+0x3d8>
   115d8:	ldr	ip, [r0, #12]
   115dc:	str	r5, [r2, #4]
   115e0:	ldr	r3, [r5, #4]
   115e4:	cmp	r1, ip
   115e8:	movlt	r1, ip
   115ec:	add	r1, r1, #1
   115f0:	cmp	r3, #0
   115f4:	str	r1, [r2, #12]
   115f8:	mvneq	r1, #0
   115fc:	ldrne	r1, [r3, #12]
   11600:	str	r0, [r5, #8]
   11604:	ldr	r3, [r0, #12]
   11608:	cmp	r3, r1
   1160c:	mov	r4, r2
   11610:	ldr	r0, [r2, #8]
   11614:	movlt	r3, r1
   11618:	add	r3, r3, #1
   1161c:	str	r3, [r5, #12]
   11620:	cmp	r0, #0
   11624:	ldrne	r1, [r0, #12]
   11628:	mvneq	r1, #0
   1162c:	cmp	r3, r1
   11630:	movlt	r3, r1
   11634:	add	r3, r3, #1
   11638:	str	r3, [r2, #12]
   1163c:	b	1147c <avl_insere_impl@@Base+0x104>
   11640:	cmp	r3, #0
   11644:	blt	114f8 <avl_insere_impl@@Base+0x180>
   11648:	ldr	r2, [r4, #4]
   1164c:	str	r0, [r4, #4]
   11650:	ldr	r3, [r0, #4]
   11654:	str	r2, [r0, #8]
   11658:	cmp	r3, #0
   1165c:	ldrne	r1, [r3, #12]
   11660:	mvneq	r1, #0
   11664:	cmp	r2, #0
   11668:	mvneq	r3, #0
   1166c:	ldrne	r3, [r2, #12]
   11670:	ldr	r2, [r4, #8]
   11674:	cmp	r3, r1
   11678:	movlt	r3, r1
   1167c:	add	r3, r3, #1
   11680:	cmp	r2, #0
   11684:	str	r3, [r0, #12]
   11688:	beq	11780 <avl_insere_impl@@Base+0x408>
   1168c:	ldr	r1, [r2, #12]
   11690:	str	r5, [r4, #8]
   11694:	cmp	r3, r1
   11698:	movlt	r3, r1
   1169c:	add	r3, r3, #1
   116a0:	str	r3, [r4, #12]
   116a4:	ldr	r1, [r2, #12]
   116a8:	str	r2, [r5, #4]
   116ac:	ldr	r3, [r5, #8]
   116b0:	ldr	r2, [r4, #4]
   116b4:	cmp	r3, #0
   116b8:	ldrne	r3, [r3, #12]
   116bc:	mvneq	r3, #0
   116c0:	b	11450 <avl_insere_impl@@Base+0xd8>
   116c4:	mvn	r1, #0
   116c8:	cmp	r3, r1
   116cc:	mov	r2, r1
   116d0:	movlt	r3, r1
   116d4:	add	r3, r3, #1
   116d8:	str	r3, [r5, #12]
   116dc:	b	113f0 <avl_insere_impl@@Base+0x78>
   116e0:	cmp	r4, #0
   116e4:	beq	117c4 <avl_insere_impl@@Base+0x44c>
   116e8:	ldr	r2, [r4, #12]
   116ec:	mvn	r1, #0
   116f0:	mov	r3, r1
   116f4:	cmp	r2, r1
   116f8:	movlt	r2, r1
   116fc:	add	r2, r2, #1
   11700:	str	r2, [r5, #12]
   11704:	ldr	r2, [r4, #12]
   11708:	b	113f4 <avl_insere_impl@@Base+0x7c>
   1170c:	cmp	r2, #0
   11710:	beq	117a4 <avl_insere_impl@@Base+0x42c>
   11714:	mvn	r3, #0
   11718:	b	11418 <avl_insere_impl@@Base+0xa0>
   1171c:	mvn	r1, #0
   11720:	b	11440 <avl_insere_impl@@Base+0xc8>
   11724:	mvn	r1, #0
   11728:	b	1141c <avl_insere_impl@@Base+0xa4>
   1172c:	cmp	r2, #0
   11730:	beq	11740 <avl_insere_impl@@Base+0x3c8>
   11734:	ldr	r3, [r2, #12]
   11738:	cmn	r3, #1
   1173c:	blt	11648 <avl_insere_impl@@Base+0x2d0>
   11740:	mvn	r2, #0
   11744:	str	r5, [r0, #8]
   11748:	str	r4, [r5, #4]
   1174c:	b	11504 <avl_insere_impl@@Base+0x18c>
   11750:	str	r5, [r2, #4]
   11754:	mvn	r3, #0
   11758:	ldr	ip, [r5, #4]
   1175c:	cmp	r1, r3
   11760:	movlt	r1, r3
   11764:	add	r1, r1, #1
   11768:	str	r1, [r2, #12]
   1176c:	cmp	ip, #0
   11770:	str	r0, [r5, #8]
   11774:	ldrne	r1, [ip, #12]
   11778:	moveq	r1, r3
   1177c:	b	11608 <avl_insere_impl@@Base+0x290>
   11780:	mvn	r0, #0
   11784:	str	r5, [r4, #8]
   11788:	cmp	r3, r0
   1178c:	mov	r1, r0
   11790:	movlt	r3, r0
   11794:	add	r3, r3, #1
   11798:	str	r3, [r4, #12]
   1179c:	str	r2, [r5, #4]
   117a0:	b	116ac <avl_insere_impl@@Base+0x334>
   117a4:	str	r5, [r4, #4]
   117a8:	ldr	r3, [r5, #4]
   117ac:	str	r2, [r5, #8]
   117b0:	cmp	r3, #0
   117b4:	bne	1143c <avl_insere_impl@@Base+0xc4>
   117b8:	mvn	r1, #0
   117bc:	mov	r3, r1
   117c0:	b	1144c <avl_insere_impl@@Base+0xd4>
   117c4:	str	r4, [r5, #12]
   117c8:	b	114b0 <avl_insere_impl@@Base+0x138>

000117cc <avl_insere@@Base>:
   117cc:	clz	r3, r1
   117d0:	cmp	r0, #0
   117d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   117d8:	lsr	r3, r3, #5
   117dc:	moveq	r5, #1
   117e0:	strd	r6, [sp, #8]
   117e4:	str	r8, [sp, #16]
   117e8:	movne	r5, r3
   117ec:	str	lr, [sp, #20]
   117f0:	cmp	r5, #0
   117f4:	bne	11b58 <avl_insere@@Base+0x38c>
   117f8:	ldr	r4, [r0]
   117fc:	mov	r7, r1
   11800:	mov	r6, r0
   11804:	cmp	r4, #0
   11808:	beq	119b0 <avl_insere@@Base+0x1e4>
   1180c:	mov	r0, r1
   11810:	ldr	r1, [r4]
   11814:	bl	10d08 <strcmp@plt>
   11818:	cmp	r0, #0
   1181c:	blt	11994 <avl_insere@@Base+0x1c8>
   11820:	beq	11910 <avl_insere@@Base+0x144>
   11824:	mov	r1, r7
   11828:	ldr	r0, [r4, #8]
   1182c:	bl	11378 <avl_insere_impl@@Base>
   11830:	ldr	r2, [r4, #4]
   11834:	str	r0, [r4, #8]
   11838:	cmp	r2, #0
   1183c:	beq	11b60 <avl_insere@@Base+0x394>
   11840:	cmp	r0, #0
   11844:	ldr	r3, [r2, #12]
   11848:	beq	11b8c <avl_insere@@Base+0x3c0>
   1184c:	ldr	r1, [r0, #12]
   11850:	cmp	r3, r1
   11854:	movlt	r3, r1
   11858:	add	r3, r3, #1
   1185c:	str	r3, [r4, #12]
   11860:	ldr	r1, [r0, #12]
   11864:	ldr	r3, [r2, #12]
   11868:	sub	r3, r1, r3
   1186c:	cmp	r3, #1
   11870:	ble	11920 <avl_insere@@Base+0x154>
   11874:	ldrd	r2, [r0, #4]
   11878:	cmp	r3, #0
   1187c:	beq	11bb0 <avl_insere@@Base+0x3e4>
   11880:	cmp	r2, #0
   11884:	ldr	r3, [r3, #12]
   11888:	beq	11bc0 <avl_insere@@Base+0x3f4>
   1188c:	ldr	r1, [r2, #12]
   11890:	sub	r3, r3, r1
   11894:	cmp	r3, #0
   11898:	blt	119f8 <avl_insere@@Base+0x22c>
   1189c:	str	r4, [r0, #4]
   118a0:	ldr	r3, [r4, #4]
   118a4:	str	r2, [r4, #8]
   118a8:	cmp	r3, #0
   118ac:	beq	11ba8 <avl_insere@@Base+0x3dc>
   118b0:	ldr	r1, [r3, #12]
   118b4:	cmp	r2, #0
   118b8:	ldrne	r3, [r2, #12]
   118bc:	mvneq	r3, #0
   118c0:	cmp	r3, r1
   118c4:	ldr	r2, [r0, #8]
   118c8:	movlt	r3, r1
   118cc:	add	r3, r3, #1
   118d0:	str	r3, [r4, #12]
   118d4:	mov	r4, r0
   118d8:	cmp	r2, #0
   118dc:	ldrne	r2, [r2, #12]
   118e0:	mvneq	r2, #0
   118e4:	cmp	r3, r2
   118e8:	movlt	r3, r2
   118ec:	add	r3, r3, #1
   118f0:	str	r3, [r0, #12]
   118f4:	mov	r0, #0
   118f8:	str	r4, [r6]
   118fc:	ldrd	r4, [sp]
   11900:	ldrd	r6, [sp, #8]
   11904:	ldr	r8, [sp, #16]
   11908:	add	sp, sp, #20
   1190c:	pop	{pc}		; (ldr pc, [sp], #4)
   11910:	ldr	r3, [r4, #16]
   11914:	add	r3, r3, #1
   11918:	str	r3, [r4, #16]
   1191c:	b	118f4 <avl_insere@@Base+0x128>
   11920:	cmn	r3, #1
   11924:	bge	118f4 <avl_insere@@Base+0x128>
   11928:	ldr	ip, [r2, #4]
   1192c:	ldr	r1, [r2, #8]
   11930:	cmp	r1, #0
   11934:	beq	11bd0 <avl_insere@@Base+0x404>
   11938:	cmp	ip, #0
   1193c:	ldr	r3, [r1, #12]
   11940:	beq	11aa4 <avl_insere@@Base+0x2d8>
   11944:	ldr	r0, [ip, #12]
   11948:	sub	r0, r3, r0
   1194c:	cmp	r0, #0
   11950:	bgt	11aac <avl_insere@@Base+0x2e0>
   11954:	mov	r0, r3
   11958:	str	r4, [r2, #8]
   1195c:	str	r1, [r4, #4]
   11960:	ldr	r3, [r4, #8]
   11964:	ldr	r1, [r2, #4]
   11968:	cmp	r3, #0
   1196c:	ldrne	r3, [r3, #12]
   11970:	mvneq	r3, #0
   11974:	cmp	r3, r0
   11978:	movlt	r3, r0
   1197c:	cmp	r1, #0
   11980:	add	r3, r3, #1
   11984:	str	r3, [r4, #12]
   11988:	beq	11bc8 <avl_insere@@Base+0x3fc>
   1198c:	ldr	r1, [r1, #12]
   11990:	b	11a8c <avl_insere@@Base+0x2c0>
   11994:	mov	r1, r7
   11998:	ldr	r0, [r4, #4]
   1199c:	bl	11378 <avl_insere_impl@@Base>
   119a0:	mov	r2, r0
   119a4:	ldr	r0, [r4, #8]
   119a8:	str	r2, [r4, #4]
   119ac:	b	11838 <avl_insere@@Base+0x6c>
   119b0:	mov	r0, #20
   119b4:	bl	10d80 <malloc@plt>
   119b8:	mov	r4, r0
   119bc:	mov	r0, r7
   119c0:	bl	10da4 <strlen@plt>
   119c4:	add	r8, r0, #1
   119c8:	mov	r0, r8
   119cc:	bl	10d80 <malloc@plt>
   119d0:	mov	r2, r8
   119d4:	mov	r1, r7
   119d8:	str	r0, [r4]
   119dc:	bl	10d44 <memcpy@plt>
   119e0:	mov	r3, #1
   119e4:	str	r5, [r4, #4]
   119e8:	str	r5, [r4, #8]
   119ec:	str	r5, [r4, #12]
   119f0:	str	r3, [r4, #16]
   119f4:	b	118f4 <avl_insere@@Base+0x128>
   119f8:	ldr	r3, [r2, #8]
   119fc:	str	r0, [r2, #8]
   11a00:	cmp	r3, #0
   11a04:	str	r3, [r0, #4]
   11a08:	ldrne	r1, [r3, #12]
   11a0c:	mvneq	r1, #0
   11a10:	ldr	r3, [r0, #8]
   11a14:	ldr	ip, [r2, #4]
   11a18:	cmp	r3, #0
   11a1c:	ldrne	r3, [r3, #12]
   11a20:	mvneq	r3, #0
   11a24:	cmp	r3, r1
   11a28:	movlt	r3, r1
   11a2c:	cmp	ip, #0
   11a30:	add	r3, r3, #1
   11a34:	str	r3, [r0, #12]
   11a38:	beq	11bf4 <avl_insere@@Base+0x428>
   11a3c:	ldr	r0, [ip, #12]
   11a40:	str	r4, [r2, #4]
   11a44:	ldr	r1, [r4, #4]
   11a48:	cmp	r3, r0
   11a4c:	movlt	r3, r0
   11a50:	add	r3, r3, #1
   11a54:	cmp	r1, #0
   11a58:	mvneq	r1, #0
   11a5c:	str	r3, [r2, #12]
   11a60:	ldrne	r1, [r1, #12]
   11a64:	str	ip, [r4, #8]
   11a68:	ldr	r3, [ip, #12]
   11a6c:	cmp	r3, r1
   11a70:	ldr	r0, [r2, #8]
   11a74:	movlt	r3, r1
   11a78:	add	r3, r3, #1
   11a7c:	str	r3, [r4, #12]
   11a80:	cmp	r0, #0
   11a84:	beq	11bc8 <avl_insere@@Base+0x3fc>
   11a88:	ldr	r1, [r0, #12]
   11a8c:	cmp	r3, r1
   11a90:	mov	r4, r2
   11a94:	movlt	r3, r1
   11a98:	add	r3, r3, #1
   11a9c:	str	r3, [r2, #12]
   11aa0:	b	118f4 <avl_insere@@Base+0x128>
   11aa4:	cmp	r3, #0
   11aa8:	blt	11954 <avl_insere@@Base+0x188>
   11aac:	ldr	r0, [r1, #4]
   11ab0:	str	r2, [r1, #4]
   11ab4:	ldr	r3, [r2, #4]
   11ab8:	str	r0, [r2, #8]
   11abc:	cmp	r3, #0
   11ac0:	ldrne	ip, [r3, #12]
   11ac4:	mvneq	ip, #0
   11ac8:	cmp	r0, #0
   11acc:	mvneq	r3, #0
   11ad0:	ldrne	r3, [r0, #12]
   11ad4:	ldr	r0, [r1, #8]
   11ad8:	cmp	r3, ip
   11adc:	movlt	r3, ip
   11ae0:	add	r3, r3, #1
   11ae4:	cmp	r0, #0
   11ae8:	str	r3, [r2, #12]
   11aec:	beq	11c28 <avl_insere@@Base+0x45c>
   11af0:	ldr	r2, [r0, #12]
   11af4:	str	r4, [r1, #8]
   11af8:	cmp	r3, r2
   11afc:	movlt	r3, r2
   11b00:	add	r3, r3, #1
   11b04:	str	r3, [r1, #12]
   11b08:	ldr	r2, [r0, #12]
   11b0c:	str	r0, [r4, #4]
   11b10:	ldr	r3, [r4, #8]
   11b14:	ldr	r0, [r1, #4]
   11b18:	cmp	r3, #0
   11b1c:	ldrne	r3, [r3, #12]
   11b20:	mvneq	r3, #0
   11b24:	cmp	r3, r2
   11b28:	movlt	r3, r2
   11b2c:	cmp	r0, #0
   11b30:	add	r3, r3, #1
   11b34:	mvneq	r2, #0
   11b38:	str	r3, [r4, #12]
   11b3c:	mov	r4, r1
   11b40:	ldrne	r2, [r0, #12]
   11b44:	cmp	r3, r2
   11b48:	movlt	r3, r2
   11b4c:	add	r3, r3, #1
   11b50:	str	r3, [r1, #12]
   11b54:	b	118f4 <avl_insere@@Base+0x128>
   11b58:	mvn	r0, #0
   11b5c:	b	118fc <avl_insere@@Base+0x130>
   11b60:	cmp	r0, #0
   11b64:	beq	11c4c <avl_insere@@Base+0x480>
   11b68:	ldr	r1, [r0, #12]
   11b6c:	mvn	ip, #0
   11b70:	mov	r3, ip
   11b74:	cmp	r1, ip
   11b78:	movlt	r1, ip
   11b7c:	add	r1, r1, #1
   11b80:	str	r1, [r4, #12]
   11b84:	ldr	r1, [r0, #12]
   11b88:	b	11868 <avl_insere@@Base+0x9c>
   11b8c:	mvn	ip, #0
   11b90:	cmp	r3, ip
   11b94:	mov	r1, ip
   11b98:	movlt	r3, ip
   11b9c:	add	r3, r3, #1
   11ba0:	str	r3, [r4, #12]
   11ba4:	b	11864 <avl_insere@@Base+0x98>
   11ba8:	mvn	r1, #0
   11bac:	b	118b4 <avl_insere@@Base+0xe8>
   11bb0:	cmp	r2, #0
   11bb4:	beq	11c54 <avl_insere@@Base+0x488>
   11bb8:	mvn	r3, #0
   11bbc:	b	1188c <avl_insere@@Base+0xc0>
   11bc0:	mvn	r1, #0
   11bc4:	b	11890 <avl_insere@@Base+0xc4>
   11bc8:	mvn	r1, #0
   11bcc:	b	11a8c <avl_insere@@Base+0x2c0>
   11bd0:	cmp	ip, #0
   11bd4:	beq	11c74 <avl_insere@@Base+0x4a8>
   11bd8:	ldr	r3, [ip, #12]
   11bdc:	cmn	r3, #1
   11be0:	blt	11aac <avl_insere@@Base+0x2e0>
   11be4:	mvn	r0, #0
   11be8:	str	r4, [r2, #8]
   11bec:	str	r1, [r4, #4]
   11bf0:	b	11960 <avl_insere@@Base+0x194>
   11bf4:	str	r4, [r2, #4]
   11bf8:	mvn	r1, #0
   11bfc:	ldr	r0, [r4, #4]
   11c00:	cmp	r3, r1
   11c04:	movlt	r3, r1
   11c08:	add	r3, r3, #1
   11c0c:	str	r3, [r2, #12]
   11c10:	cmp	r0, #0
   11c14:	str	ip, [r4, #8]
   11c18:	movne	r3, r1
   11c1c:	ldrne	r1, [r0, #12]
   11c20:	moveq	r3, r1
   11c24:	b	11a6c <avl_insere@@Base+0x2a0>
   11c28:	mvn	ip, #0
   11c2c:	str	r4, [r1, #8]
   11c30:	cmp	r3, ip
   11c34:	mov	r2, ip
   11c38:	movlt	r3, ip
   11c3c:	add	r3, r3, #1
   11c40:	str	r3, [r1, #12]
   11c44:	str	r0, [r4, #4]
   11c48:	b	11b10 <avl_insere@@Base+0x344>
   11c4c:	str	r0, [r4, #12]
   11c50:	b	118f4 <avl_insere@@Base+0x128>
   11c54:	str	r4, [r0, #4]
   11c58:	ldr	r3, [r4, #4]
   11c5c:	str	r2, [r4, #8]
   11c60:	cmp	r3, #0
   11c64:	bne	118b0 <avl_insere@@Base+0xe4>
   11c68:	mvn	r1, #0
   11c6c:	mov	r3, r1
   11c70:	b	118c0 <avl_insere@@Base+0xf4>
   11c74:	mvn	r0, #0
   11c78:	str	r4, [r2, #8]
   11c7c:	str	ip, [r4, #4]
   11c80:	b	11960 <avl_insere@@Base+0x194>

00011c84 <avl_no_valormin@@Base>:
   11c84:	b	11c8c <avl_no_valormin@@Base+0x8>
   11c88:	mov	r0, r3
   11c8c:	ldr	r3, [r0, #4]
   11c90:	cmp	r3, #0
   11c94:	bne	11c88 <avl_no_valormin@@Base+0x4>
   11c98:	bx	lr

00011c9c <avl_no_valormax@@Base>:
   11c9c:	b	11ca4 <avl_no_valormax@@Base+0x8>
   11ca0:	mov	r0, r3
   11ca4:	ldr	r3, [r0, #8]
   11ca8:	cmp	r3, #0
   11cac:	bne	11ca0 <avl_no_valormax@@Base+0x4>
   11cb0:	bx	lr

00011cb4 <avl_remove_impl@@Base>:
   11cb4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11cb8:	subs	r5, r0, #0
   11cbc:	strd	r6, [sp, #8]
   11cc0:	str	r8, [sp, #16]
   11cc4:	str	lr, [sp, #20]
   11cc8:	beq	11e80 <avl_remove_impl@@Base+0x1cc>
   11ccc:	ldr	r7, [r5]
   11cd0:	mov	r0, r1
   11cd4:	mov	r6, r1
   11cd8:	mov	r1, r7
   11cdc:	bl	10d08 <strcmp@plt>
   11ce0:	cmp	r0, #0
   11ce4:	blt	11e88 <avl_remove_impl@@Base+0x1d4>
   11ce8:	ldr	r4, [r5, #8]
   11cec:	bne	11d90 <avl_remove_impl@@Base+0xdc>
   11cf0:	ldr	r6, [r5, #4]
   11cf4:	cmp	r6, #0
   11cf8:	beq	11fc8 <avl_remove_impl@@Base+0x314>
   11cfc:	cmp	r4, #0
   11d00:	bne	11d48 <avl_remove_impl@@Base+0x94>
   11d04:	ldr	r0, [r6]
   11d08:	bl	10da4 <strlen@plt>
   11d0c:	add	r1, r0, #1
   11d10:	mov	r0, r7
   11d14:	bl	10d5c <realloc@plt>
   11d18:	str	r0, [r5]
   11d1c:	ldr	r1, [r6]
   11d20:	bl	10d68 <strcpy@plt>
   11d24:	ldrd	r0, [r6]
   11d28:	ldrd	r2, [r6, #8]
   11d2c:	stmib	r5, {r1, r2, r3}
   11d30:	bl	10d2c <free@plt>
   11d34:	mov	r0, r6
   11d38:	bl	10d2c <free@plt>
   11d3c:	ldmib	r5, {r0, r4}
   11d40:	b	11da8 <avl_remove_impl@@Base+0xf4>
   11d44:	mov	r4, r3
   11d48:	ldr	r3, [r4, #4]
   11d4c:	cmp	r3, #0
   11d50:	bne	11d44 <avl_remove_impl@@Base+0x90>
   11d54:	ldr	r0, [r4]
   11d58:	bl	10da4 <strlen@plt>
   11d5c:	add	r1, r0, #1
   11d60:	mov	r0, r7
   11d64:	bl	10d5c <realloc@plt>
   11d68:	str	r0, [r5]
   11d6c:	ldr	r1, [r4]
   11d70:	bl	10d68 <strcpy@plt>
   11d74:	ldr	r1, [r4]
   11d78:	ldr	r0, [r5, #8]
   11d7c:	bl	11cb4 <avl_remove_impl@@Base>
   11d80:	mov	r4, r0
   11d84:	ldr	r0, [r5, #4]
   11d88:	str	r4, [r5, #8]
   11d8c:	b	11da8 <avl_remove_impl@@Base+0xf4>
   11d90:	mov	r0, r4
   11d94:	mov	r1, r6
   11d98:	bl	11cb4 <avl_remove_impl@@Base>
   11d9c:	mov	r4, r0
   11da0:	ldr	r0, [r5, #4]
   11da4:	str	r4, [r5, #8]
   11da8:	cmp	r0, #0
   11dac:	beq	12068 <avl_remove_impl@@Base+0x3b4>
   11db0:	cmp	r4, #0
   11db4:	ldr	r3, [r0, #12]
   11db8:	beq	12094 <avl_remove_impl@@Base+0x3e0>
   11dbc:	ldr	r2, [r4, #12]
   11dc0:	cmp	r3, r2
   11dc4:	movlt	r3, r2
   11dc8:	add	r3, r3, #1
   11dcc:	str	r3, [r5, #12]
   11dd0:	ldr	r2, [r4, #12]
   11dd4:	ldr	r3, [r0, #12]
   11dd8:	sub	r3, r2, r3
   11ddc:	cmp	r3, #1
   11de0:	ble	11e78 <avl_remove_impl@@Base+0x1c4>
   11de4:	ldrd	r2, [r4, #4]
   11de8:	cmp	r3, #0
   11dec:	beq	120b0 <avl_remove_impl@@Base+0x3fc>
   11df0:	cmp	r2, #0
   11df4:	ldr	r3, [r3, #12]
   11df8:	beq	120c0 <avl_remove_impl@@Base+0x40c>
   11dfc:	ldr	r1, [r2, #12]
   11e00:	sub	r3, r3, r1
   11e04:	cmp	r3, #0
   11e08:	blt	11f1c <avl_remove_impl@@Base+0x268>
   11e0c:	str	r5, [r4, #4]
   11e10:	ldr	r3, [r5, #4]
   11e14:	str	r2, [r5, #8]
   11e18:	cmp	r3, #0
   11e1c:	beq	120c8 <avl_remove_impl@@Base+0x414>
   11e20:	ldr	r1, [r3, #12]
   11e24:	cmp	r2, #0
   11e28:	ldrne	r3, [r2, #12]
   11e2c:	mvneq	r3, #0
   11e30:	ldr	r2, [r4, #8]
   11e34:	cmp	r3, r1
   11e38:	movlt	r3, r1
   11e3c:	cmp	r2, #0
   11e40:	add	r3, r3, #1
   11e44:	mvneq	r2, #0
   11e48:	str	r3, [r5, #12]
   11e4c:	ldrne	r2, [r2, #12]
   11e50:	cmp	r3, r2
   11e54:	movlt	r3, r2
   11e58:	add	r3, r3, #1
   11e5c:	str	r3, [r4, #12]
   11e60:	mov	r0, r4
   11e64:	ldrd	r4, [sp]
   11e68:	ldrd	r6, [sp, #8]
   11e6c:	ldr	r8, [sp, #16]
   11e70:	add	sp, sp, #20
   11e74:	pop	{pc}		; (ldr pc, [sp], #4)
   11e78:	cmn	r3, #1
   11e7c:	blt	11ea0 <avl_remove_impl@@Base+0x1ec>
   11e80:	mov	r4, r5
   11e84:	b	11e60 <avl_remove_impl@@Base+0x1ac>
   11e88:	mov	r1, r6
   11e8c:	ldr	r0, [r5, #4]
   11e90:	bl	11cb4 <avl_remove_impl@@Base>
   11e94:	str	r0, [r5, #4]
   11e98:	ldr	r4, [r5, #8]
   11e9c:	b	11da8 <avl_remove_impl@@Base+0xf4>
   11ea0:	ldmib	r0, {r2, r4}
   11ea4:	cmp	r4, #0
   11ea8:	beq	120d0 <avl_remove_impl@@Base+0x41c>
   11eac:	cmp	r2, #0
   11eb0:	ldr	r3, [r4, #12]
   11eb4:	beq	11fe4 <avl_remove_impl@@Base+0x330>
   11eb8:	ldr	r2, [r2, #12]
   11ebc:	sub	r2, r3, r2
   11ec0:	cmp	r2, #0
   11ec4:	bgt	11fec <avl_remove_impl@@Base+0x338>
   11ec8:	mov	r2, r3
   11ecc:	str	r5, [r0, #8]
   11ed0:	str	r4, [r5, #4]
   11ed4:	ldr	r3, [r5, #8]
   11ed8:	mov	r4, r0
   11edc:	ldr	r1, [r0, #4]
   11ee0:	cmp	r3, #0
   11ee4:	ldrne	r3, [r3, #12]
   11ee8:	mvneq	r3, #0
   11eec:	cmp	r3, r2
   11ef0:	movlt	r3, r2
   11ef4:	cmp	r1, #0
   11ef8:	add	r3, r3, #1
   11efc:	mvneq	r2, #0
   11f00:	str	r3, [r5, #12]
   11f04:	ldrne	r2, [r1, #12]
   11f08:	cmp	r3, r2
   11f0c:	movlt	r3, r2
   11f10:	add	r3, r3, #1
   11f14:	str	r3, [r0, #12]
   11f18:	b	11e60 <avl_remove_impl@@Base+0x1ac>
   11f1c:	ldr	r3, [r2, #8]
   11f20:	str	r4, [r2, #8]
   11f24:	ldr	r1, [r4, #8]
   11f28:	cmp	r3, #0
   11f2c:	str	r3, [r4, #4]
   11f30:	ldrne	r3, [r3, #12]
   11f34:	mvneq	r3, #0
   11f38:	cmp	r1, #0
   11f3c:	ldrne	r1, [r1, #12]
   11f40:	mvneq	r1, #0
   11f44:	ldr	r0, [r2, #4]
   11f48:	cmp	r1, r3
   11f4c:	movlt	r1, r3
   11f50:	add	r1, r1, #1
   11f54:	cmp	r0, #0
   11f58:	str	r1, [r4, #12]
   11f5c:	beq	120f4 <avl_remove_impl@@Base+0x440>
   11f60:	ldr	ip, [r0, #12]
   11f64:	str	r5, [r2, #4]
   11f68:	ldr	r3, [r5, #4]
   11f6c:	cmp	r1, ip
   11f70:	movlt	r1, ip
   11f74:	add	r1, r1, #1
   11f78:	cmp	r3, #0
   11f7c:	str	r1, [r2, #12]
   11f80:	mvneq	r1, #0
   11f84:	ldrne	r1, [r3, #12]
   11f88:	str	r0, [r5, #8]
   11f8c:	ldr	r3, [r0, #12]
   11f90:	cmp	r3, r1
   11f94:	mov	r4, r2
   11f98:	ldr	r0, [r2, #8]
   11f9c:	movlt	r3, r1
   11fa0:	add	r3, r3, #1
   11fa4:	str	r3, [r5, #12]
   11fa8:	cmp	r0, #0
   11fac:	ldrne	r1, [r0, #12]
   11fb0:	mvneq	r1, #0
   11fb4:	cmp	r3, r1
   11fb8:	movlt	r3, r1
   11fbc:	add	r3, r3, #1
   11fc0:	str	r3, [r2, #12]
   11fc4:	b	11e60 <avl_remove_impl@@Base+0x1ac>
   11fc8:	cmp	r4, #0
   11fcc:	bne	12170 <avl_remove_impl@@Base+0x4bc>
   11fd0:	mov	r0, r7
   11fd4:	bl	10d2c <free@plt>
   11fd8:	mov	r0, r5
   11fdc:	bl	10d2c <free@plt>
   11fe0:	b	11e60 <avl_remove_impl@@Base+0x1ac>
   11fe4:	cmp	r3, #0
   11fe8:	blt	11ec8 <avl_remove_impl@@Base+0x214>
   11fec:	ldr	r2, [r4, #4]
   11ff0:	str	r0, [r4, #4]
   11ff4:	ldr	r3, [r0, #4]
   11ff8:	str	r2, [r0, #8]
   11ffc:	cmp	r3, #0
   12000:	ldrne	r1, [r3, #12]
   12004:	mvneq	r1, #0
   12008:	cmp	r2, #0
   1200c:	mvneq	r3, #0
   12010:	ldrne	r3, [r2, #12]
   12014:	ldr	r2, [r4, #8]
   12018:	cmp	r3, r1
   1201c:	movlt	r3, r1
   12020:	add	r3, r3, #1
   12024:	cmp	r2, #0
   12028:	str	r3, [r0, #12]
   1202c:	beq	12124 <avl_remove_impl@@Base+0x470>
   12030:	ldr	r1, [r2, #12]
   12034:	str	r5, [r4, #8]
   12038:	cmp	r3, r1
   1203c:	movlt	r3, r1
   12040:	add	r3, r3, #1
   12044:	str	r3, [r4, #12]
   12048:	ldr	r1, [r2, #12]
   1204c:	str	r2, [r5, #4]
   12050:	ldr	r3, [r5, #8]
   12054:	ldr	r2, [r4, #4]
   12058:	cmp	r3, #0
   1205c:	ldrne	r3, [r3, #12]
   12060:	mvneq	r3, #0
   12064:	b	11e34 <avl_remove_impl@@Base+0x180>
   12068:	cmp	r4, #0
   1206c:	beq	12148 <avl_remove_impl@@Base+0x494>
   12070:	ldr	r2, [r4, #12]
   12074:	mvn	r1, #0
   12078:	mov	r3, r1
   1207c:	cmp	r2, r1
   12080:	movlt	r2, r1
   12084:	add	r2, r2, #1
   12088:	str	r2, [r5, #12]
   1208c:	ldr	r2, [r4, #12]
   12090:	b	11dd8 <avl_remove_impl@@Base+0x124>
   12094:	mvn	r1, #0
   12098:	cmp	r3, r1
   1209c:	mov	r2, r1
   120a0:	movlt	r3, r1
   120a4:	add	r3, r3, #1
   120a8:	str	r3, [r5, #12]
   120ac:	b	11dd4 <avl_remove_impl@@Base+0x120>
   120b0:	cmp	r2, #0
   120b4:	beq	12150 <avl_remove_impl@@Base+0x49c>
   120b8:	mvn	r3, #0
   120bc:	b	11dfc <avl_remove_impl@@Base+0x148>
   120c0:	mvn	r1, #0
   120c4:	b	11e00 <avl_remove_impl@@Base+0x14c>
   120c8:	mvn	r1, #0
   120cc:	b	11e24 <avl_remove_impl@@Base+0x170>
   120d0:	cmp	r2, #0
   120d4:	beq	120e4 <avl_remove_impl@@Base+0x430>
   120d8:	ldr	r3, [r2, #12]
   120dc:	cmn	r3, #1
   120e0:	blt	11fec <avl_remove_impl@@Base+0x338>
   120e4:	mvn	r2, #0
   120e8:	str	r5, [r0, #8]
   120ec:	str	r4, [r5, #4]
   120f0:	b	11ed4 <avl_remove_impl@@Base+0x220>
   120f4:	str	r5, [r2, #4]
   120f8:	mvn	r3, #0
   120fc:	ldr	ip, [r5, #4]
   12100:	cmp	r1, r3
   12104:	movlt	r1, r3
   12108:	add	r1, r1, #1
   1210c:	str	r1, [r2, #12]
   12110:	cmp	ip, #0
   12114:	str	r0, [r5, #8]
   12118:	ldrne	r1, [ip, #12]
   1211c:	moveq	r1, r3
   12120:	b	11f90 <avl_remove_impl@@Base+0x2dc>
   12124:	mvn	r0, #0
   12128:	str	r5, [r4, #8]
   1212c:	cmp	r3, r0
   12130:	mov	r1, r0
   12134:	movlt	r3, r0
   12138:	add	r3, r3, #1
   1213c:	str	r3, [r4, #12]
   12140:	str	r2, [r5, #4]
   12144:	b	12050 <avl_remove_impl@@Base+0x39c>
   12148:	str	r4, [r5, #12]
   1214c:	b	11e80 <avl_remove_impl@@Base+0x1cc>
   12150:	str	r5, [r4, #4]
   12154:	ldr	r3, [r5, #4]
   12158:	str	r2, [r5, #8]
   1215c:	cmp	r3, #0
   12160:	bne	11e20 <avl_remove_impl@@Base+0x16c>
   12164:	mvn	r1, #0
   12168:	mov	r3, r1
   1216c:	b	11e30 <avl_remove_impl@@Base+0x17c>
   12170:	mov	r6, r4
   12174:	b	11d04 <avl_remove_impl@@Base+0x50>

00012178 <avl_apaga@@Base>:
   12178:	str	r4, [sp, #-8]!
   1217c:	subs	r4, r0, #0
   12180:	str	lr, [sp, #4]
   12184:	beq	121c4 <avl_apaga@@Base+0x4c>
   12188:	ldr	r3, [r4]
   1218c:	cmp	r3, #0
   12190:	beq	121b0 <avl_apaga@@Base+0x38>
   12194:	mov	r0, r3
   12198:	ldr	r1, [r3]
   1219c:	bl	11cb4 <avl_remove_impl@@Base>
   121a0:	cmp	r0, #0
   121a4:	mov	r3, r0
   121a8:	str	r0, [r4]
   121ac:	bne	12194 <avl_apaga@@Base+0x1c>
   121b0:	mov	r0, r4
   121b4:	ldr	r4, [sp]
   121b8:	ldr	lr, [sp, #4]
   121bc:	add	sp, sp, #8
   121c0:	b	10d2c <free@plt>
   121c4:	ldr	r4, [sp]
   121c8:	add	sp, sp, #4
   121cc:	pop	{pc}		; (ldr pc, [sp], #4)

000121d0 <avl_remove@@Base>:
   121d0:	clz	r3, r1
   121d4:	cmp	r0, #0
   121d8:	strd	r4, [sp, #-16]!
   121dc:	lsr	r3, r3, #5
   121e0:	moveq	r4, #1
   121e4:	str	r6, [sp, #8]
   121e8:	str	lr, [sp, #12]
   121ec:	movne	r4, r3
   121f0:	cmp	r4, #0
   121f4:	bne	1221c <avl_remove@@Base+0x4c>
   121f8:	mov	r5, r0
   121fc:	ldr	r0, [r0]
   12200:	bl	11cb4 <avl_remove_impl@@Base>
   12204:	str	r0, [r5]
   12208:	mov	r0, r4
   1220c:	ldrd	r4, [sp]
   12210:	ldr	r6, [sp, #8]
   12214:	add	sp, sp, #12
   12218:	pop	{pc}		; (ldr pc, [sp], #4)
   1221c:	mvn	r4, #0
   12220:	b	12208 <avl_remove@@Base+0x38>

00012224 <avl_preordem_impl@@Base>:
   12224:	strd	r4, [sp, #-16]!
   12228:	subs	r4, r0, #0
   1222c:	str	r6, [sp, #8]
   12230:	str	lr, [sp, #12]
   12234:	beq	12264 <avl_preordem_impl@@Base+0x40>
   12238:	movw	r5, #11328	; 0x2c40
   1223c:	movt	r5, #1
   12240:	mov	r0, r5
   12244:	ldr	r1, [r4]
   12248:	ldr	r2, [r4, #16]
   1224c:	bl	10d14 <printf@plt>
   12250:	ldr	r0, [r4, #4]
   12254:	bl	12224 <avl_preordem_impl@@Base>
   12258:	ldr	r4, [r4, #8]
   1225c:	cmp	r4, #0
   12260:	bne	12240 <avl_preordem_impl@@Base+0x1c>
   12264:	ldrd	r4, [sp]
   12268:	ldr	r6, [sp, #8]
   1226c:	add	sp, sp, #12
   12270:	pop	{pc}		; (ldr pc, [sp], #4)

00012274 <avl_imprime@@Base>:
   12274:	cmp	r0, #0
   12278:	bxeq	lr
   1227c:	strd	r4, [sp, #-16]!
   12280:	ldr	r4, [r0]
   12284:	str	r6, [sp, #8]
   12288:	str	lr, [sp, #12]
   1228c:	cmp	r4, #0
   12290:	beq	122c0 <avl_imprime@@Base+0x4c>
   12294:	movw	r5, #11328	; 0x2c40
   12298:	movt	r5, #1
   1229c:	mov	r0, r5
   122a0:	ldr	r1, [r4]
   122a4:	ldr	r2, [r4, #16]
   122a8:	bl	10d14 <printf@plt>
   122ac:	ldr	r0, [r4, #4]
   122b0:	bl	12224 <avl_preordem_impl@@Base>
   122b4:	ldr	r4, [r4, #8]
   122b8:	cmp	r4, #0
   122bc:	bne	1229c <avl_imprime@@Base+0x28>
   122c0:	mov	r0, #10
   122c4:	ldrd	r4, [sp]
   122c8:	ldr	r6, [sp, #8]
   122cc:	ldr	lr, [sp, #12]
   122d0:	add	sp, sp, #16
   122d4:	b	10db0 <putchar@plt>

000122d8 <bst_nova@@Base>:
   122d8:	mov	r0, #4
   122dc:	str	r4, [sp, #-8]!
   122e0:	str	lr, [sp, #4]
   122e4:	bl	10d80 <malloc@plt>
   122e8:	cmp	r0, #0
   122ec:	ldr	r4, [sp]
   122f0:	add	sp, sp, #4
   122f4:	movne	r3, #0
   122f8:	strne	r3, [r0]
   122fc:	pop	{pc}		; (ldr pc, [sp], #4)

00012300 <bst_pesquisa@@Base>:
   12300:	cmp	r1, #0
   12304:	cmpne	r0, #0
   12308:	strd	r4, [sp, #-16]!
   1230c:	moveq	r4, #0
   12310:	str	r6, [sp, #8]
   12314:	str	lr, [sp, #12]
   12318:	beq	12360 <bst_pesquisa@@Base+0x60>
   1231c:	ldr	r4, [r0]
   12320:	mov	r5, r1
   12324:	cmp	r4, #0
   12328:	bne	12340 <bst_pesquisa@@Base+0x40>
   1232c:	b	12360 <bst_pesquisa@@Base+0x60>
   12330:	beq	12360 <bst_pesquisa@@Base+0x60>
   12334:	ldr	r4, [r4, #8]
   12338:	cmp	r4, #0
   1233c:	beq	12360 <bst_pesquisa@@Base+0x60>
   12340:	mov	r0, r5
   12344:	ldr	r1, [r4]
   12348:	bl	10d08 <strcmp@plt>
   1234c:	cmp	r0, #0
   12350:	bge	12330 <bst_pesquisa@@Base+0x30>
   12354:	ldr	r4, [r4, #4]
   12358:	cmp	r4, #0
   1235c:	bne	12340 <bst_pesquisa@@Base+0x40>
   12360:	mov	r0, r4
   12364:	ldrd	r4, [sp]
   12368:	ldr	r6, [sp, #8]
   1236c:	add	sp, sp, #12
   12370:	pop	{pc}		; (ldr pc, [sp], #4)

00012374 <bst_min@@Base>:
   12374:	cmp	r0, #0
   12378:	beq	12398 <bst_min@@Base+0x24>
   1237c:	ldr	r2, [r0]
   12380:	b	12388 <bst_min@@Base+0x14>
   12384:	mov	r2, r3
   12388:	ldr	r3, [r2, #4]
   1238c:	cmp	r3, #0
   12390:	bne	12384 <bst_min@@Base+0x10>
   12394:	ldr	r0, [r2]
   12398:	bx	lr

0001239c <bst_max@@Base>:
   1239c:	cmp	r0, #0
   123a0:	beq	123c0 <bst_max@@Base+0x24>
   123a4:	ldr	r2, [r0]
   123a8:	b	123b0 <bst_max@@Base+0x14>
   123ac:	mov	r2, r3
   123b0:	ldr	r3, [r2, #8]
   123b4:	cmp	r3, #0
   123b8:	bne	123ac <bst_max@@Base+0x10>
   123bc:	ldr	r0, [r2]
   123c0:	bx	lr

000123c4 <bst_novo_no@@Base>:
   123c4:	strd	r4, [sp, #-16]!
   123c8:	mov	r5, r0
   123cc:	mov	r0, #12
   123d0:	str	r6, [sp, #8]
   123d4:	str	lr, [sp, #12]
   123d8:	bl	10d80 <malloc@plt>
   123dc:	mov	r4, r0
   123e0:	mov	r0, r5
   123e4:	bl	10da4 <strlen@plt>
   123e8:	add	r6, r0, #1
   123ec:	mov	r0, r6
   123f0:	bl	10d80 <malloc@plt>
   123f4:	mov	r2, r6
   123f8:	mov	r1, r5
   123fc:	str	r0, [r4]
   12400:	bl	10d44 <memcpy@plt>
   12404:	mov	r3, #0
   12408:	mov	r0, r4
   1240c:	ldr	r6, [sp, #8]
   12410:	str	r3, [r4, #4]
   12414:	str	r3, [r4, #8]
   12418:	ldrd	r4, [sp]
   1241c:	add	sp, sp, #12
   12420:	pop	{pc}		; (ldr pc, [sp], #4)

00012424 <bst_no_valormin@@Base>:
   12424:	b	1242c <bst_no_valormin@@Base+0x8>
   12428:	mov	r0, r3
   1242c:	ldr	r3, [r0, #4]
   12430:	cmp	r3, #0
   12434:	bne	12428 <bst_no_valormin@@Base+0x4>
   12438:	bx	lr

0001243c <bst_no_valormax@@Base>:
   1243c:	b	12444 <bst_no_valormax@@Base+0x8>
   12440:	mov	r0, r3
   12444:	ldr	r3, [r0, #8]
   12448:	cmp	r3, #0
   1244c:	bne	12440 <bst_no_valormax@@Base+0x4>
   12450:	bx	lr

00012454 <bst_pesquisa_impl@@Base>:
   12454:	strd	r4, [sp, #-16]!
   12458:	subs	r4, r0, #0
   1245c:	movne	r5, r1
   12460:	str	r6, [sp, #8]
   12464:	str	lr, [sp, #12]
   12468:	bne	12480 <bst_pesquisa_impl@@Base+0x2c>
   1246c:	b	124a0 <bst_pesquisa_impl@@Base+0x4c>
   12470:	beq	124a0 <bst_pesquisa_impl@@Base+0x4c>
   12474:	ldr	r4, [r4, #8]
   12478:	cmp	r4, #0
   1247c:	beq	124a0 <bst_pesquisa_impl@@Base+0x4c>
   12480:	mov	r0, r5
   12484:	ldr	r1, [r4]
   12488:	bl	10d08 <strcmp@plt>
   1248c:	cmp	r0, #0
   12490:	bge	12470 <bst_pesquisa_impl@@Base+0x1c>
   12494:	ldr	r4, [r4, #4]
   12498:	cmp	r4, #0
   1249c:	bne	12480 <bst_pesquisa_impl@@Base+0x2c>
   124a0:	mov	r0, r4
   124a4:	ldrd	r4, [sp]
   124a8:	ldr	r6, [sp, #8]
   124ac:	add	sp, sp, #12
   124b0:	pop	{pc}		; (ldr pc, [sp], #4)

000124b4 <bst_insere_impl@@Base>:
   124b4:	strd	r4, [sp, #-16]!
   124b8:	subs	r4, r0, #0
   124bc:	mov	r5, r1
   124c0:	str	r6, [sp, #8]
   124c4:	str	lr, [sp, #12]
   124c8:	beq	12520 <bst_insere_impl@@Base+0x6c>
   124cc:	mov	r0, r1
   124d0:	ldr	r1, [r4]
   124d4:	bl	10d08 <strcmp@plt>
   124d8:	cmp	r0, #0
   124dc:	blt	1250c <bst_insere_impl@@Base+0x58>
   124e0:	bne	124f8 <bst_insere_impl@@Base+0x44>
   124e4:	mov	r0, r4
   124e8:	ldrd	r4, [sp]
   124ec:	ldr	r6, [sp, #8]
   124f0:	add	sp, sp, #12
   124f4:	pop	{pc}		; (ldr pc, [sp], #4)
   124f8:	mov	r1, r5
   124fc:	ldr	r0, [r4, #8]
   12500:	bl	124b4 <bst_insere_impl@@Base>
   12504:	str	r0, [r4, #8]
   12508:	b	124e4 <bst_insere_impl@@Base+0x30>
   1250c:	mov	r1, r5
   12510:	ldr	r0, [r4, #4]
   12514:	bl	124b4 <bst_insere_impl@@Base>
   12518:	str	r0, [r4, #4]
   1251c:	b	124e4 <bst_insere_impl@@Base+0x30>
   12520:	mov	r0, #12
   12524:	bl	10d80 <malloc@plt>
   12528:	mov	r4, r0
   1252c:	mov	r0, r5
   12530:	bl	10da4 <strlen@plt>
   12534:	add	r6, r0, #1
   12538:	mov	r0, r6
   1253c:	bl	10d80 <malloc@plt>
   12540:	mov	r2, r6
   12544:	mov	r1, r5
   12548:	str	r0, [r4]
   1254c:	bl	10d44 <memcpy@plt>
   12550:	mov	r3, #0
   12554:	str	r3, [r4, #4]
   12558:	str	r3, [r4, #8]
   1255c:	b	124e4 <bst_insere_impl@@Base+0x30>

00012560 <bst_insere@@Base>:
   12560:	clz	r3, r1
   12564:	cmp	r0, #0
   12568:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1256c:	lsr	r3, r3, #5
   12570:	moveq	r4, #1
   12574:	strd	r6, [sp, #8]
   12578:	str	r8, [sp, #16]
   1257c:	movne	r4, r3
   12580:	str	lr, [sp, #20]
   12584:	cmp	r4, #0
   12588:	bne	12638 <bst_insere@@Base+0xd8>
   1258c:	ldr	r6, [r0]
   12590:	mov	r7, r1
   12594:	mov	r5, r0
   12598:	cmp	r6, #0
   1259c:	beq	125fc <bst_insere@@Base+0x9c>
   125a0:	mov	r0, r1
   125a4:	ldr	r1, [r6]
   125a8:	bl	10d08 <strcmp@plt>
   125ac:	cmp	r0, #0
   125b0:	blt	125e8 <bst_insere@@Base+0x88>
   125b4:	bne	125d4 <bst_insere@@Base+0x74>
   125b8:	mov	r0, #0
   125bc:	str	r6, [r5]
   125c0:	ldrd	r4, [sp]
   125c4:	ldrd	r6, [sp, #8]
   125c8:	ldr	r8, [sp, #16]
   125cc:	add	sp, sp, #20
   125d0:	pop	{pc}		; (ldr pc, [sp], #4)
   125d4:	mov	r1, r7
   125d8:	ldr	r0, [r6, #8]
   125dc:	bl	124b4 <bst_insere_impl@@Base>
   125e0:	str	r0, [r6, #8]
   125e4:	b	125b8 <bst_insere@@Base+0x58>
   125e8:	mov	r1, r7
   125ec:	ldr	r0, [r6, #4]
   125f0:	bl	124b4 <bst_insere_impl@@Base>
   125f4:	str	r0, [r6, #4]
   125f8:	b	125b8 <bst_insere@@Base+0x58>
   125fc:	mov	r0, #12
   12600:	bl	10d80 <malloc@plt>
   12604:	mov	r6, r0
   12608:	mov	r0, r7
   1260c:	bl	10da4 <strlen@plt>
   12610:	add	r8, r0, #1
   12614:	mov	r0, r8
   12618:	bl	10d80 <malloc@plt>
   1261c:	mov	r2, r8
   12620:	mov	r1, r7
   12624:	str	r0, [r6]
   12628:	bl	10d44 <memcpy@plt>
   1262c:	str	r4, [r6, #4]
   12630:	str	r4, [r6, #8]
   12634:	b	125b8 <bst_insere@@Base+0x58>
   12638:	mvn	r0, #0
   1263c:	b	125c0 <bst_insere@@Base+0x60>

00012640 <bst_remove_impl@@Base>:
   12640:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12644:	subs	r5, r0, #0
   12648:	strd	r6, [sp, #8]
   1264c:	str	r8, [sp, #16]
   12650:	str	lr, [sp, #20]
   12654:	beq	12774 <bst_remove_impl@@Base+0x134>
   12658:	ldr	r6, [r5]
   1265c:	mov	r0, r1
   12660:	mov	r7, r1
   12664:	mov	r1, r6
   12668:	bl	10d08 <strcmp@plt>
   1266c:	cmp	r0, #0
   12670:	blt	1274c <bst_remove_impl@@Base+0x10c>
   12674:	ldr	r4, [r5, #8]
   12678:	bne	12720 <bst_remove_impl@@Base+0xe0>
   1267c:	ldr	r7, [r5, #4]
   12680:	cmp	r7, #0
   12684:	beq	12764 <bst_remove_impl@@Base+0x124>
   12688:	cmp	r4, #0
   1268c:	bne	126dc <bst_remove_impl@@Base+0x9c>
   12690:	ldr	r0, [r7]
   12694:	mov	r4, r5
   12698:	bl	10da4 <strlen@plt>
   1269c:	add	r1, r0, #1
   126a0:	mov	r0, r6
   126a4:	bl	10d5c <realloc@plt>
   126a8:	str	r0, [r5]
   126ac:	ldr	r1, [r7]
   126b0:	bl	10d68 <strcpy@plt>
   126b4:	ldr	r6, [r7]
   126b8:	ldrd	r2, [r7, #4]
   126bc:	strd	r2, [r5, #4]
   126c0:	mov	r5, r7
   126c4:	mov	r0, r6
   126c8:	bl	10d2c <free@plt>
   126cc:	mov	r0, r5
   126d0:	bl	10d2c <free@plt>
   126d4:	b	12734 <bst_remove_impl@@Base+0xf4>
   126d8:	mov	r4, r3
   126dc:	ldr	r3, [r4, #4]
   126e0:	cmp	r3, #0
   126e4:	bne	126d8 <bst_remove_impl@@Base+0x98>
   126e8:	ldr	r0, [r4]
   126ec:	bl	10da4 <strlen@plt>
   126f0:	add	r1, r0, #1
   126f4:	mov	r0, r6
   126f8:	bl	10d5c <realloc@plt>
   126fc:	str	r0, [r5]
   12700:	ldr	r1, [r4]
   12704:	bl	10d68 <strcpy@plt>
   12708:	ldr	r1, [r4]
   1270c:	mov	r4, r5
   12710:	ldr	r0, [r5, #8]
   12714:	bl	12640 <bst_remove_impl@@Base>
   12718:	str	r0, [r5, #8]
   1271c:	b	12734 <bst_remove_impl@@Base+0xf4>
   12720:	mov	r0, r4
   12724:	mov	r1, r7
   12728:	mov	r4, r5
   1272c:	bl	12640 <bst_remove_impl@@Base>
   12730:	str	r0, [r5, #8]
   12734:	mov	r0, r4
   12738:	ldrd	r4, [sp]
   1273c:	ldrd	r6, [sp, #8]
   12740:	ldr	r8, [sp, #16]
   12744:	add	sp, sp, #20
   12748:	pop	{pc}		; (ldr pc, [sp], #4)
   1274c:	mov	r1, r7
   12750:	ldr	r0, [r5, #4]
   12754:	mov	r4, r5
   12758:	bl	12640 <bst_remove_impl@@Base>
   1275c:	str	r0, [r5, #4]
   12760:	b	12734 <bst_remove_impl@@Base+0xf4>
   12764:	cmp	r4, #0
   12768:	beq	126c4 <bst_remove_impl@@Base+0x84>
   1276c:	mov	r7, r4
   12770:	b	12690 <bst_remove_impl@@Base+0x50>
   12774:	mov	r4, r5
   12778:	b	12734 <bst_remove_impl@@Base+0xf4>

0001277c <bst_apaga@@Base>:
   1277c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12780:	ldr	r4, [r0]
   12784:	strd	r6, [sp, #8]
   12788:	str	r8, [sp, #16]
   1278c:	mov	r8, r0
   12790:	str	lr, [sp, #20]
   12794:	cmp	r4, #0
   12798:	beq	1281c <bst_apaga@@Base+0xa0>
   1279c:	ldr	r7, [r4]
   127a0:	ldr	r6, [r4, #4]
   127a4:	ldr	r5, [r4, #8]
   127a8:	cmp	r6, #0
   127ac:	beq	12804 <bst_apaga@@Base+0x88>
   127b0:	cmp	r5, #0
   127b4:	bne	127c0 <bst_apaga@@Base+0x44>
   127b8:	b	1283c <bst_apaga@@Base+0xc0>
   127bc:	mov	r5, r3
   127c0:	ldr	r3, [r5, #4]
   127c4:	cmp	r3, #0
   127c8:	bne	127bc <bst_apaga@@Base+0x40>
   127cc:	ldr	r0, [r5]
   127d0:	bl	10da4 <strlen@plt>
   127d4:	add	r1, r0, #1
   127d8:	mov	r0, r7
   127dc:	bl	10d5c <realloc@plt>
   127e0:	str	r0, [r4]
   127e4:	ldr	r1, [r5]
   127e8:	bl	10d68 <strcpy@plt>
   127ec:	ldr	r1, [r5]
   127f0:	ldr	r0, [r4, #8]
   127f4:	bl	12640 <bst_remove_impl@@Base>
   127f8:	str	r0, [r4, #8]
   127fc:	str	r4, [r8]
   12800:	b	1279c <bst_apaga@@Base+0x20>
   12804:	cmp	r5, #0
   12808:	bne	12838 <bst_apaga@@Base+0xbc>
   1280c:	mov	r0, r7
   12810:	bl	10d2c <free@plt>
   12814:	mov	r0, r4
   12818:	bl	10d2c <free@plt>
   1281c:	mov	r0, r8
   12820:	ldrd	r4, [sp]
   12824:	ldrd	r6, [sp, #8]
   12828:	ldr	r8, [sp, #16]
   1282c:	ldr	lr, [sp, #20]
   12830:	add	sp, sp, #24
   12834:	b	10d2c <free@plt>
   12838:	mov	r6, r5
   1283c:	ldr	r0, [r6]
   12840:	bl	10da4 <strlen@plt>
   12844:	add	r1, r0, #1
   12848:	mov	r0, r7
   1284c:	bl	10d5c <realloc@plt>
   12850:	str	r0, [r4]
   12854:	ldr	r1, [r6]
   12858:	bl	10d68 <strcpy@plt>
   1285c:	ldm	r6, {r0, r2, r3}
   12860:	strd	r2, [r4, #4]
   12864:	bl	10d2c <free@plt>
   12868:	mov	r0, r6
   1286c:	bl	10d2c <free@plt>
   12870:	b	127fc <bst_apaga@@Base+0x80>

00012874 <bst_remove@@Base>:
   12874:	cmp	r1, #0
   12878:	cmpne	r0, #0
   1287c:	beq	129b4 <bst_remove@@Base+0x140>
   12880:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12884:	mov	r5, r0
   12888:	ldr	r4, [r0]
   1288c:	strd	r6, [sp, #8]
   12890:	mov	r6, r1
   12894:	str	r8, [sp, #16]
   12898:	str	lr, [sp, #20]
   1289c:	cmp	r4, #0
   128a0:	beq	12914 <bst_remove@@Base+0xa0>
   128a4:	ldr	r8, [r4]
   128a8:	mov	r0, r1
   128ac:	mov	r1, r8
   128b0:	bl	10d08 <strcmp@plt>
   128b4:	cmp	r0, #0
   128b8:	blt	12988 <bst_remove@@Base+0x114>
   128bc:	ldr	r7, [r4, #8]
   128c0:	bne	12974 <bst_remove@@Base+0x100>
   128c4:	ldr	r6, [r4, #4]
   128c8:	cmp	r6, #0
   128cc:	beq	1299c <bst_remove@@Base+0x128>
   128d0:	cmp	r7, #0
   128d4:	bne	12934 <bst_remove@@Base+0xc0>
   128d8:	ldr	r0, [r6]
   128dc:	bl	10da4 <strlen@plt>
   128e0:	add	r1, r0, #1
   128e4:	mov	r0, r8
   128e8:	bl	10d5c <realloc@plt>
   128ec:	str	r0, [r4]
   128f0:	ldr	r1, [r6]
   128f4:	bl	10d68 <strcpy@plt>
   128f8:	ldr	r8, [r6]
   128fc:	ldrd	r2, [r6, #4]
   12900:	strd	r2, [r4, #4]
   12904:	mov	r0, r8
   12908:	bl	10d2c <free@plt>
   1290c:	mov	r0, r6
   12910:	bl	10d2c <free@plt>
   12914:	ldrd	r6, [sp, #8]
   12918:	mov	r0, #0
   1291c:	ldr	r8, [sp, #16]
   12920:	str	r4, [r5]
   12924:	ldrd	r4, [sp]
   12928:	add	sp, sp, #20
   1292c:	pop	{pc}		; (ldr pc, [sp], #4)
   12930:	mov	r7, r3
   12934:	ldr	r3, [r7, #4]
   12938:	cmp	r3, #0
   1293c:	bne	12930 <bst_remove@@Base+0xbc>
   12940:	ldr	r0, [r7]
   12944:	bl	10da4 <strlen@plt>
   12948:	add	r1, r0, #1
   1294c:	mov	r0, r8
   12950:	bl	10d5c <realloc@plt>
   12954:	str	r0, [r4]
   12958:	ldr	r1, [r7]
   1295c:	bl	10d68 <strcpy@plt>
   12960:	ldr	r1, [r7]
   12964:	ldr	r0, [r4, #8]
   12968:	bl	12640 <bst_remove_impl@@Base>
   1296c:	str	r0, [r4, #8]
   12970:	b	12914 <bst_remove@@Base+0xa0>
   12974:	mov	r1, r6
   12978:	mov	r0, r7
   1297c:	bl	12640 <bst_remove_impl@@Base>
   12980:	str	r0, [r4, #8]
   12984:	b	12914 <bst_remove@@Base+0xa0>
   12988:	mov	r1, r6
   1298c:	ldr	r0, [r4, #4]
   12990:	bl	12640 <bst_remove_impl@@Base>
   12994:	str	r0, [r4, #4]
   12998:	b	12914 <bst_remove@@Base+0xa0>
   1299c:	cmp	r7, #0
   129a0:	moveq	r6, r4
   129a4:	moveq	r4, r7
   129a8:	beq	12904 <bst_remove@@Base+0x90>
   129ac:	mov	r6, r7
   129b0:	b	128d8 <bst_remove@@Base+0x64>
   129b4:	mvn	r0, #0
   129b8:	bx	lr

000129bc <bst_altura@@Base>:
   129bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   129c0:	subs	r4, r0, #0
   129c4:	strd	r6, [sp, #8]
   129c8:	str	r8, [sp, #16]
   129cc:	str	lr, [sp, #20]
   129d0:	beq	12a58 <bst_altura@@Base+0x9c>
   129d4:	mov	r6, #0
   129d8:	ldrd	r4, [r4, #4]
   129dc:	mov	r7, r6
   129e0:	cmp	r5, #0
   129e4:	mov	r0, r4
   129e8:	beq	12a30 <bst_altura@@Base+0x74>
   129ec:	bl	129bc <bst_altura@@Base>
   129f0:	mov	r8, r0
   129f4:	mov	r0, r5
   129f8:	bl	129bc <bst_altura@@Base>
   129fc:	cmp	r8, r0
   12a00:	addle	r6, r6, #1
   12a04:	movle	r4, r5
   12a08:	ble	129d8 <bst_altura@@Base+0x1c>
   12a0c:	cmp	r4, #0
   12a10:	add	r6, r6, #1
   12a14:	bne	129d8 <bst_altura@@Base+0x1c>
   12a18:	mov	r0, r7
   12a1c:	ldrd	r4, [sp]
   12a20:	ldrd	r6, [sp, #8]
   12a24:	ldr	r8, [sp, #16]
   12a28:	add	sp, sp, #20
   12a2c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a30:	cmp	r4, #0
   12a34:	beq	12a18 <bst_altura@@Base+0x5c>
   12a38:	bl	129bc <bst_altura@@Base>
   12a3c:	mov	r8, r0
   12a40:	mov	r0, r5
   12a44:	bl	129bc <bst_altura@@Base>
   12a48:	cmp	r0, r8
   12a4c:	add	r6, r6, #1
   12a50:	blt	129d8 <bst_altura@@Base+0x1c>
   12a54:	b	12a18 <bst_altura@@Base+0x5c>
   12a58:	mvn	r7, #0
   12a5c:	b	12a18 <bst_altura@@Base+0x5c>

00012a60 <bst_preordem_impl@@Base>:
   12a60:	strd	r4, [sp, #-16]!
   12a64:	subs	r4, r0, #0
   12a68:	str	r6, [sp, #8]
   12a6c:	str	lr, [sp, #12]
   12a70:	beq	12a9c <bst_preordem_impl@@Base+0x3c>
   12a74:	movw	r5, #11336	; 0x2c48
   12a78:	movt	r5, #1
   12a7c:	mov	r0, r5
   12a80:	ldr	r1, [r4]
   12a84:	bl	10d14 <printf@plt>
   12a88:	ldr	r0, [r4, #4]
   12a8c:	bl	12a60 <bst_preordem_impl@@Base>
   12a90:	ldr	r4, [r4, #8]
   12a94:	cmp	r4, #0
   12a98:	bne	12a7c <bst_preordem_impl@@Base+0x1c>
   12a9c:	ldrd	r4, [sp]
   12aa0:	ldr	r6, [sp, #8]
   12aa4:	add	sp, sp, #12
   12aa8:	pop	{pc}		; (ldr pc, [sp], #4)

00012aac <bst_imprime@@Base>:
   12aac:	strd	r4, [sp, #-16]!
   12ab0:	subs	r4, r0, #0
   12ab4:	str	r6, [sp, #8]
   12ab8:	str	lr, [sp, #12]
   12abc:	beq	12b18 <bst_imprime@@Base+0x6c>
   12ac0:	movw	r0, #11340	; 0x2c4c
   12ac4:	movt	r0, #1
   12ac8:	bl	10d14 <printf@plt>
   12acc:	ldr	r4, [r4]
   12ad0:	cmp	r4, #0
   12ad4:	beq	12b00 <bst_imprime@@Base+0x54>
   12ad8:	movw	r5, #11336	; 0x2c48
   12adc:	movt	r5, #1
   12ae0:	mov	r0, r5
   12ae4:	ldr	r1, [r4]
   12ae8:	bl	10d14 <printf@plt>
   12aec:	ldr	r0, [r4, #4]
   12af0:	bl	12a60 <bst_preordem_impl@@Base>
   12af4:	ldr	r4, [r4, #8]
   12af8:	cmp	r4, #0
   12afc:	bne	12ae0 <bst_imprime@@Base+0x34>
   12b00:	mov	r0, #10
   12b04:	ldrd	r4, [sp]
   12b08:	ldr	r6, [sp, #8]
   12b0c:	ldr	lr, [sp, #12]
   12b10:	add	sp, sp, #16
   12b14:	b	10db0 <putchar@plt>
   12b18:	ldrd	r4, [sp]
   12b1c:	ldr	r6, [sp, #8]
   12b20:	add	sp, sp, #12
   12b24:	pop	{pc}		; (ldr pc, [sp], #4)

00012b28 <__libc_csu_init@@Base>:
   12b28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b2c:	mov	r7, r0
   12b30:	ldr	r6, [pc, #72]	; 12b80 <__libc_csu_init@@Base+0x58>
   12b34:	ldr	r5, [pc, #72]	; 12b84 <__libc_csu_init@@Base+0x5c>
   12b38:	add	r6, pc, r6
   12b3c:	add	r5, pc, r5
   12b40:	sub	r6, r6, r5
   12b44:	mov	r8, r1
   12b48:	mov	r9, r2
   12b4c:	bl	10ce8 <strcmp@plt-0x20>
   12b50:	asrs	r6, r6, #2
   12b54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b58:	mov	r4, #0
   12b5c:	add	r4, r4, #1
   12b60:	ldr	r3, [r5], #4
   12b64:	mov	r2, r9
   12b68:	mov	r1, r8
   12b6c:	mov	r0, r7
   12b70:	blx	r3
   12b74:	cmp	r6, r4
   12b78:	bne	12b5c <__libc_csu_init@@Base+0x34>
   12b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b80:	ldrdeq	r0, [r1], -r4
   12b84:	andeq	r0, r1, ip, asr #7

00012b88 <__libc_csu_fini@@Base>:
   12b88:	bx	lr

Disassembly of section .fini:

00012b8c <.fini>:
   12b8c:	push	{r3, lr}
   12b90:	pop	{r3, pc}
