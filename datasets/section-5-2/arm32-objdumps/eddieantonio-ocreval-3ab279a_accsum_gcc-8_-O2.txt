
../repos/eddieantonio-ocreval-3ab279a/accsum/accsum:     file format elf32-littlearm


Disassembly of section .init:

0001088c <.init>:
   1088c:	push	{r3, lr}
   10890:	bl	10af4 <getc@plt+0xe0>
   10894:	pop	{r3, pc}

Disassembly of section .plt:

00010898 <calloc@plt-0x14>:
   10898:	push	{lr}		; (str lr, [sp, #-4]!)
   1089c:	ldr	lr, [pc, #4]	; 108a8 <calloc@plt-0x4>
   108a0:	add	lr, pc, lr
   108a4:	ldr	pc, [lr, #8]!
   108a8:	andeq	r3, r1, r8, asr r7

000108ac <calloc@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #77824	; 0x13000
   108b4:	ldr	pc, [ip, #1880]!	; 0x758

000108b8 <strcmp@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #77824	; 0x13000
   108c0:	ldr	pc, [ip, #1872]!	; 0x750

000108c4 <fopen@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #77824	; 0x13000
   108cc:	ldr	pc, [ip, #1864]!	; 0x748

000108d0 <free@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #77824	; 0x13000
   108d8:	ldr	pc, [ip, #1856]!	; 0x740

000108dc <utf8proc_get_property@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #77824	; 0x13000
   108e4:	ldr	pc, [ip, #1848]!	; 0x738

000108e8 <fgets@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #77824	; 0x13000
   108f0:	ldr	pc, [ip, #1840]!	; 0x730

000108f4 <utf8proc_encode_char@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #77824	; 0x13000
   108fc:	ldr	pc, [ip, #1832]!	; 0x728

00010900 <strdup@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #77824	; 0x13000
   10908:	ldr	pc, [ip, #1824]!	; 0x720

0001090c <rewind@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #77824	; 0x13000
   10914:	ldr	pc, [ip, #1816]!	; 0x718

00010918 <unlink@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #77824	; 0x13000
   10920:	ldr	pc, [ip, #1808]!	; 0x710

00010924 <utf8proc_tolower@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #77824	; 0x13000
   1092c:	ldr	pc, [ip, #1800]!	; 0x708

00010930 <__xstat@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #77824	; 0x13000
   10938:	ldr	pc, [ip, #1792]!	; 0x700

0001093c <fwrite@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #77824	; 0x13000
   10944:	ldr	pc, [ip, #1784]!	; 0x6f8

00010948 <fread@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #77824	; 0x13000
   10950:	ldr	pc, [ip, #1776]!	; 0x6f0

00010954 <utf8proc_iterate@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #77824	; 0x13000
   1095c:	ldr	pc, [ip, #1768]!	; 0x6e8

00010960 <__libc_start_main@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #77824	; 0x13000
   10968:	ldr	pc, [ip, #1760]!	; 0x6e0

0001096c <__sysv_signal@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #77824	; 0x13000
   10974:	ldr	pc, [ip, #1752]!	; 0x6d8

00010978 <__gmon_start__@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #77824	; 0x13000
   10980:	ldr	pc, [ip, #1744]!	; 0x6d0

00010984 <getpid@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #77824	; 0x13000
   1098c:	ldr	pc, [ip, #1736]!	; 0x6c8

00010990 <exit@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #77824	; 0x13000
   10998:	ldr	pc, [ip, #1728]!	; 0x6c0

0001099c <utf8proc_category@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #77824	; 0x13000
   109a4:	ldr	pc, [ip, #1720]!	; 0x6b8

000109a8 <strlen@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #77824	; 0x13000
   109b0:	ldr	pc, [ip, #1712]!	; 0x6b0

000109b4 <fprintf@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #77824	; 0x13000
   109bc:	ldr	pc, [ip, #1704]!	; 0x6a8

000109c0 <__isoc99_sscanf@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #77824	; 0x13000
   109c8:	ldr	pc, [ip, #1696]!	; 0x6a0

000109cc <fclose@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #77824	; 0x13000
   109d4:	ldr	pc, [ip, #1688]!	; 0x698

000109d8 <sprintf@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #77824	; 0x13000
   109e0:	ldr	pc, [ip, #1680]!	; 0x690

000109e4 <utf8proc_errmsg@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #77824	; 0x13000
   109ec:	ldr	pc, [ip, #1672]!	; 0x688

000109f0 <fputs@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #77824	; 0x13000
   109f8:	ldr	pc, [ip, #1664]!	; 0x680

000109fc <strncmp@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #77824	; 0x13000
   10a04:	ldr	pc, [ip, #1656]!	; 0x678

00010a08 <abort@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #77824	; 0x13000
   10a10:	ldr	pc, [ip, #1648]!	; 0x670

00010a14 <getc@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #77824	; 0x13000
   10a1c:	ldr	pc, [ip, #1640]!	; 0x668

Disassembly of section .text:

00010a20 <error@@Base-0x16fc>:
   10a20:	ldr	r2, [pc, #128]	; 10aa8 <getc@plt+0x94>
   10a24:	mov	r3, #0
   10a28:	strd	r4, [sp, #-16]!
   10a2c:	mov	r5, r1
   10a30:	str	r6, [sp, #8]
   10a34:	str	lr, [sp, #12]
   10a38:	sub	sp, sp, #8
   10a3c:	add	r2, pc, r2
   10a40:	str	r0, [sp, #4]
   10a44:	add	r0, sp, #4
   10a48:	bl	12300 <error@@Base+0x1e4>
   10a4c:	ldr	r3, [sp, #4]
   10a50:	ldr	r2, [pc, #84]	; 10aac <getc@plt+0x98>
   10a54:	cmp	r3, #1
   10a58:	add	r2, pc, r2
   10a5c:	ble	10a9c <getc@plt+0x88>
   10a60:	ldr	r3, [pc, #72]	; 10ab0 <getc@plt+0x9c>
   10a64:	sub	r5, r5, #4
   10a68:	mov	r4, #0
   10a6c:	ldr	r6, [r2, r3]
   10a70:	mov	r0, r6
   10a74:	add	r4, r4, #1
   10a78:	ldr	r1, [r5, #4]!
   10a7c:	bl	10ff8 <getc@plt+0x5e4>
   10a80:	ldr	r3, [sp, #4]
   10a84:	cmp	r3, r4
   10a88:	bgt	10a70 <getc@plt+0x5c>
   10a8c:	mov	r0, r6
   10a90:	mov	r1, #0
   10a94:	bl	113bc <getc@plt+0x9a8>
   10a98:	bl	120a0 <getc@plt+0x168c>
   10a9c:	ldr	r0, [pc, #16]	; 10ab4 <getc@plt+0xa0>
   10aa0:	add	r0, pc, r0
   10aa4:	bl	1211c <error@@Base>
   10aa8:	ldrdeq	r2, [r0], -r8
   10aac:	andeq	r3, r1, r0, lsr #11
   10ab0:	andeq	r0, r0, ip, lsl #1
   10ab4:	andeq	r2, r0, ip, lsr #11
   10ab8:	mov	fp, #0
   10abc:	mov	lr, #0
   10ac0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ac4:	mov	r2, sp
   10ac8:	push	{r2}		; (str r2, [sp, #-4]!)
   10acc:	push	{r0}		; (str r0, [sp, #-4]!)
   10ad0:	ldr	ip, [pc, #16]	; 10ae8 <getc@plt+0xd4>
   10ad4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ad8:	ldr	r0, [pc, #12]	; 10aec <getc@plt+0xd8>
   10adc:	ldr	r3, [pc, #12]	; 10af0 <getc@plt+0xdc>
   10ae0:	bl	10960 <__libc_start_main@plt>
   10ae4:	bl	10a08 <abort@plt>
   10ae8:	andeq	r3, r1, ip
   10aec:	andeq	r0, r1, r0, lsr #20
   10af0:	andeq	r2, r1, ip, lsr #31
   10af4:	ldr	r3, [pc, #20]	; 10b10 <getc@plt+0xfc>
   10af8:	ldr	r2, [pc, #20]	; 10b14 <getc@plt+0x100>
   10afc:	add	r3, pc, r3
   10b00:	ldr	r2, [r3, r2]
   10b04:	cmp	r2, #0
   10b08:	bxeq	lr
   10b0c:	b	10978 <__gmon_start__@plt>
   10b10:	strdeq	r3, [r1], -ip
   10b14:	muleq	r0, r8, r0
   10b18:	ldr	r0, [pc, #24]	; 10b38 <getc@plt+0x124>
   10b1c:	ldr	r3, [pc, #24]	; 10b3c <getc@plt+0x128>
   10b20:	cmp	r3, r0
   10b24:	bxeq	lr
   10b28:	ldr	r3, [pc, #16]	; 10b40 <getc@plt+0x12c>
   10b2c:	cmp	r3, #0
   10b30:	bxeq	lr
   10b34:	bx	r3
   10b38:	andeq	r4, r2, r4, asr #1
   10b3c:	andeq	r4, r2, r4, asr #1
   10b40:	andeq	r0, r0, r0
   10b44:	ldr	r0, [pc, #36]	; 10b70 <getc@plt+0x15c>
   10b48:	ldr	r1, [pc, #36]	; 10b74 <getc@plt+0x160>
   10b4c:	sub	r1, r1, r0
   10b50:	asr	r1, r1, #2
   10b54:	add	r1, r1, r1, lsr #31
   10b58:	asrs	r1, r1, #1
   10b5c:	bxeq	lr
   10b60:	ldr	r3, [pc, #16]	; 10b78 <getc@plt+0x164>
   10b64:	cmp	r3, #0
   10b68:	bxeq	lr
   10b6c:	bx	r3
   10b70:	andeq	r4, r2, r4, asr #1
   10b74:	andeq	r4, r2, r4, asr #1
   10b78:	andeq	r0, r0, r0
   10b7c:	push	{r4, lr}
   10b80:	ldr	r4, [pc, #24]	; 10ba0 <getc@plt+0x18c>
   10b84:	ldrb	r3, [r4]
   10b88:	cmp	r3, #0
   10b8c:	popne	{r4, pc}
   10b90:	bl	10b18 <getc@plt+0x104>
   10b94:	mov	r3, #1
   10b98:	strb	r3, [r4]
   10b9c:	pop	{r4, pc}
   10ba0:	andeq	r4, r2, r4, asr #1
   10ba4:	b	10b44 <getc@plt+0x130>
   10ba8:	strd	r4, [sp, #-16]!
   10bac:	mov	r5, r1
   10bb0:	mov	r1, #99	; 0x63
   10bb4:	ldr	r4, [pc, #112]	; 10c2c <getc@plt+0x218>
   10bb8:	str	r6, [sp, #8]
   10bbc:	mov	r6, r2
   10bc0:	mov	r2, r0
   10bc4:	str	lr, [sp, #12]
   10bc8:	add	r4, pc, r4
   10bcc:	mov	r0, r4
   10bd0:	bl	108e8 <fgets@plt>
   10bd4:	cmp	r0, #0
   10bd8:	beq	10bf8 <getc@plt+0x1e4>
   10bdc:	ldr	r1, [pc, #76]	; 10c30 <getc@plt+0x21c>
   10be0:	mov	r0, r4
   10be4:	mov	r2, r5
   10be8:	add	r1, pc, r1
   10bec:	bl	109c0 <__isoc99_sscanf@plt>
   10bf0:	cmp	r0, #1
   10bf4:	beq	10c0c <getc@plt+0x1f8>
   10bf8:	ldrd	r4, [sp]
   10bfc:	mov	r0, #0
   10c00:	ldr	r6, [sp, #8]
   10c04:	add	sp, sp, #12
   10c08:	pop	{pc}		; (ldr pc, [sp], #4)
   10c0c:	ldr	r2, [r5]
   10c10:	ldr	r3, [r6]
   10c14:	ldrd	r4, [sp]
   10c18:	add	r3, r3, r2
   10c1c:	str	r3, [r6]
   10c20:	ldr	r6, [sp, #8]
   10c24:	add	sp, sp, #12
   10c28:	pop	{pc}		; (ldr pc, [sp], #4)
   10c2c:	strdeq	r3, [r1], -r8
   10c30:	andeq	r2, r0, r8, lsl #9
   10c34:	strd	r4, [sp, #-16]!
   10c38:	mov	r2, r0
   10c3c:	mov	r4, r1
   10c40:	ldr	r5, [pc, #160]	; 10ce8 <getc@plt+0x2d4>
   10c44:	mov	r1, #99	; 0x63
   10c48:	str	r6, [sp, #8]
   10c4c:	str	lr, [sp, #12]
   10c50:	sub	sp, sp, #24
   10c54:	add	r5, pc, r5
   10c58:	mov	r0, r5
   10c5c:	bl	108e8 <fgets@plt>
   10c60:	cmp	r0, #0
   10c64:	beq	10c94 <getc@plt+0x280>
   10c68:	ldr	r1, [pc, #124]	; 10cec <getc@plt+0x2d8>
   10c6c:	add	r2, sp, #16
   10c70:	add	ip, sp, #20
   10c74:	mov	r0, r5
   10c78:	add	r3, sp, #12
   10c7c:	stm	sp, {r2, ip}
   10c80:	add	r2, sp, #8
   10c84:	add	r1, pc, r1
   10c88:	bl	109c0 <__isoc99_sscanf@plt>
   10c8c:	cmp	r0, #4
   10c90:	beq	10cac <getc@plt+0x298>
   10c94:	mov	r0, #0
   10c98:	add	sp, sp, #24
   10c9c:	ldrd	r4, [sp]
   10ca0:	ldr	r6, [sp, #8]
   10ca4:	add	sp, sp, #12
   10ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   10cac:	ldr	ip, [r4]
   10cb0:	mov	r0, #1
   10cb4:	ldr	r3, [sp, #8]
   10cb8:	ldmib	r4, {r1, r2}
   10cbc:	ldr	r6, [sp, #12]
   10cc0:	add	ip, ip, r3
   10cc4:	ldr	r3, [r4, #12]
   10cc8:	str	ip, [r4]
   10ccc:	ldr	r5, [sp, #16]
   10cd0:	add	r1, r1, r6
   10cd4:	ldr	lr, [sp, #20]
   10cd8:	add	r2, r2, r5
   10cdc:	add	r3, r3, lr
   10ce0:	stmib	r4, {r1, r2, r3}
   10ce4:	b	10c98 <getc@plt+0x284>
   10ce8:	andeq	r3, r1, ip, ror #8
   10cec:	andeq	r2, r0, r0, ror #7
   10cf0:	strd	r4, [sp, #-16]!
   10cf4:	mov	r5, r1
   10cf8:	mov	r1, #99	; 0x63
   10cfc:	ldr	r4, [pc, #84]	; 10d58 <getc@plt+0x344>
   10d00:	str	r6, [sp, #8]
   10d04:	mov	r6, r2
   10d08:	mov	r2, r0
   10d0c:	str	lr, [sp, #12]
   10d10:	add	r4, pc, r4
   10d14:	mov	r0, r4
   10d18:	bl	108e8 <fgets@plt>
   10d1c:	cmp	r0, #0
   10d20:	beq	10d48 <getc@plt+0x334>
   10d24:	ldr	r1, [pc, #48]	; 10d5c <getc@plt+0x348>
   10d28:	mov	r3, r6
   10d2c:	mov	r2, r5
   10d30:	mov	r0, r4
   10d34:	add	r1, pc, r1
   10d38:	bl	109c0 <__isoc99_sscanf@plt>
   10d3c:	sub	r0, r0, #2
   10d40:	clz	r0, r0
   10d44:	lsr	r0, r0, #5
   10d48:	ldrd	r4, [sp]
   10d4c:	ldr	r6, [sp, #8]
   10d50:	add	sp, sp, #12
   10d54:	pop	{pc}		; (ldr pc, [sp], #4)
   10d58:			; <UNDEFINED> instruction: 0x000133b0
   10d5c:	andeq	r2, r0, r8, lsr r3
   10d60:	sub	sp, sp, #8
   10d64:	cmp	r2, #0
   10d68:	str	r1, [sp, #4]
   10d6c:	bne	10d8c <getc@plt+0x378>
   10d70:	mov	r3, r0
   10d74:	ldr	r0, [pc, #76]	; 10dc8 <getc@plt+0x3b4>
   10d78:	mov	r2, #8
   10d7c:	mov	r1, #1
   10d80:	add	r0, pc, r0
   10d84:	add	sp, sp, #8
   10d88:	b	1093c <fwrite@plt>
   10d8c:	vldr	s15, [sp, #4]
   10d90:	vmov	s13, r2
   10d94:	vldr	d5, [pc, #36]	; 10dc0 <getc@plt+0x3ac>
   10d98:	ldr	r1, [pc, #44]	; 10dcc <getc@plt+0x3b8>
   10d9c:	vcvt.f64.s32	d7, s15
   10da0:	add	r1, pc, r1
   10da4:	vcvt.f64.s32	d6, s13
   10da8:	vmul.f64	d7, d7, d5
   10dac:	vdiv.f64	d7, d7, d6
   10db0:	vmov	r2, r3, d7
   10db4:	add	sp, sp, #8
   10db8:	b	109b4 <fprintf@plt>
   10dbc:	nop	{0}
   10dc0:	andeq	r0, r0, r0
   10dc4:	subsmi	r0, r9, r0
   10dc8:	strdeq	r2, [r0], -r4
   10dcc:	andeq	r2, r0, r0, ror #5
   10dd0:	ldr	r2, [r0, #12]
   10dd4:	ldr	r3, [r1, #12]
   10dd8:	cmp	r2, r3
   10ddc:	bne	10df0 <getc@plt+0x3dc>
   10de0:	ldr	r2, [r0, #16]
   10de4:	ldr	r3, [r1, #16]
   10de8:	cmp	r2, r3
   10dec:	beq	10df8 <getc@plt+0x3e4>
   10df0:	sub	r0, r3, r2
   10df4:	bx	lr
   10df8:	ldr	r0, [r0, #8]
   10dfc:	ldr	r1, [r1, #8]
   10e00:	b	11f24 <getc@plt+0x1510>
   10e04:	strd	r4, [sp, #-20]!	; 0xffffffec
   10e08:	mov	r4, r1
   10e0c:	mov	r5, r0
   10e10:	ldr	r1, [pc, #144]	; 10ea8 <getc@plt+0x494>
   10e14:	strd	r6, [sp, #8]
   10e18:	mov	r6, r2
   10e1c:	mov	r7, r3
   10e20:	str	lr, [sp, #16]
   10e24:	sub	sp, sp, #20
   10e28:	ldrd	r2, [r4]
   10e2c:	add	r1, pc, r1
   10e30:	bl	109b4 <fprintf@plt>
   10e34:	ldr	r2, [r4]
   10e38:	mov	r0, r5
   10e3c:	ldr	r1, [r4, #4]
   10e40:	sub	r1, r2, r1
   10e44:	bl	10d60 <getc@plt+0x34c>
   10e48:	cmp	r6, #0
   10e4c:	beq	10e78 <getc@plt+0x464>
   10e50:	ldr	r1, [pc, #84]	; 10eac <getc@plt+0x498>
   10e54:	mov	r2, r6
   10e58:	mov	r0, r5
   10e5c:	add	r1, pc, r1
   10e60:	bl	109b4 <fprintf@plt>
   10e64:	add	sp, sp, #20
   10e68:	ldrd	r4, [sp]
   10e6c:	ldrd	r6, [sp, #8]
   10e70:	add	sp, sp, #16
   10e74:	pop	{pc}		; (ldr pc, [sp], #4)
   10e78:	add	r4, sp, #4
   10e7c:	mov	r1, r7
   10e80:	mov	r0, r6
   10e84:	mov	r2, r4
   10e88:	mov	r3, #1
   10e8c:	bl	12a40 <error@@Base+0x924>
   10e90:	ldr	r1, [pc, #24]	; 10eb0 <getc@plt+0x49c>
   10e94:	mov	r2, r4
   10e98:	mov	r0, r5
   10e9c:	add	r1, pc, r1
   10ea0:	bl	109b4 <fprintf@plt>
   10ea4:	b	10e64 <getc@plt+0x450>
   10ea8:	andeq	r2, r0, ip, asr r2
   10eac:	ldrdeq	r2, [r0], -ip
   10eb0:	strdeq	r2, [r0], -r8
   10eb4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10eb8:	mov	r5, r0
   10ebc:	mov	r0, r1
   10ec0:	mov	r4, r1
   10ec4:	strd	r6, [sp, #8]
   10ec8:	mov	r7, r2
   10ecc:	mov	r6, r3
   10ed0:	str	r8, [sp, #16]
   10ed4:	str	lr, [sp, #20]
   10ed8:	bl	11d70 <getc@plt+0x135c>
   10edc:	lsl	r0, r0, #3
   10ee0:	ldr	r8, [sp, #16]
   10ee4:	lsl	r1, r4, #3
   10ee8:	add	r0, r0, #68	; 0x44
   10eec:	ldr	r3, [r5, r0]
   10ef0:	add	r2, r5, r0
   10ef4:	add	r1, r1, #10176	; 0x27c0
   10ef8:	add	r1, r1, #4
   10efc:	add	ip, r5, r1
   10f00:	add	r3, r3, r7
   10f04:	str	r3, [r5, r0]
   10f08:	ldr	r3, [r2, #4]
   10f0c:	add	r3, r3, r6
   10f10:	str	r3, [r2, #4]
   10f14:	ldr	r2, [r5, #2116]	; 0x844
   10f18:	ldr	r3, [r5, #2120]	; 0x848
   10f1c:	add	r2, r2, r7
   10f20:	add	r3, r3, r6
   10f24:	str	r2, [r5, #2116]	; 0x844
   10f28:	str	r3, [r5, #2120]	; 0x848
   10f2c:	ldr	r3, [r5, r1]
   10f30:	add	r3, r3, r7
   10f34:	str	r3, [r5, r1]
   10f38:	ldr	r2, [ip, #4]
   10f3c:	ldrd	r4, [sp]
   10f40:	add	r2, r2, r6
   10f44:	ldrd	r6, [sp, #8]
   10f48:	add	sp, sp, #20
   10f4c:	str	r2, [ip, #4]
   10f50:	pop	{pc}		; (ldr pc, [sp], #4)
   10f54:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10f58:	add	r4, r0, #2112	; 0x840
   10f5c:	mov	r5, r3
   10f60:	add	r4, r4, #12
   10f64:	strd	r6, [sp, #8]
   10f68:	mov	r6, r2
   10f6c:	mov	r0, r4
   10f70:	mov	r7, r1
   10f74:	str	r8, [sp, #16]
   10f78:	str	lr, [sp, #20]
   10f7c:	bl	119ac <getc@plt+0xf98>
   10f80:	cmp	r0, #0
   10f84:	beq	10fb4 <getc@plt+0x5a0>
   10f88:	ldr	ip, [r0, #12]
   10f8c:	ldr	r1, [r0, #16]
   10f90:	ldr	r8, [sp, #16]
   10f94:	add	ip, ip, r6
   10f98:	ldrd	r6, [sp, #8]
   10f9c:	add	r1, r1, r5
   10fa0:	ldrd	r4, [sp]
   10fa4:	add	sp, sp, #20
   10fa8:	str	ip, [r0, #12]
   10fac:	str	r1, [r0, #16]
   10fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   10fb4:	mov	r1, #20
   10fb8:	mov	r0, #1
   10fbc:	bl	12178 <error@@Base+0x5c>
   10fc0:	mov	r8, r0
   10fc4:	mov	r0, r7
   10fc8:	bl	10900 <strdup@plt>
   10fcc:	mov	r1, r8
   10fd0:	ldr	lr, [sp, #20]
   10fd4:	str	r0, [r8, #8]
   10fd8:	mov	r0, r4
   10fdc:	str	r6, [r8, #12]
   10fe0:	str	r5, [r8, #16]
   10fe4:	ldrd	r4, [sp]
   10fe8:	ldrd	r6, [sp, #8]
   10fec:	ldr	r8, [sp, #16]
   10ff0:	add	sp, sp, #24
   10ff4:	b	11a38 <getc@plt+0x1024>
   10ff8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10ffc:	strd	r6, [sp, #8]
   11000:	mov	r6, r0
   11004:	mov	r0, r1
   11008:	strd	r8, [sp, #16]
   1100c:	mov	r8, r1
   11010:	ldr	r1, [pc, #884]	; 1138c <getc@plt+0x978>
   11014:	str	sl, [sp, #24]
   11018:	ldr	r5, [pc, #880]	; 11390 <getc@plt+0x97c>
   1101c:	str	lr, [sp, #28]
   11020:	sub	sp, sp, #24
   11024:	add	r1, pc, r1
   11028:	bl	12240 <error@@Base+0x124>
   1102c:	add	r5, pc, r5
   11030:	mov	r2, r0
   11034:	mov	r4, r0
   11038:	mov	r1, #99	; 0x63
   1103c:	mov	r0, r5
   11040:	bl	108e8 <fgets@plt>
   11044:	cmp	r0, #0
   11048:	beq	11368 <getc@plt+0x954>
   1104c:	ldr	r1, [pc, #832]	; 11394 <getc@plt+0x980>
   11050:	mov	r2, #40	; 0x28
   11054:	mov	r0, r5
   11058:	add	r1, pc, r1
   1105c:	bl	109fc <strncmp@plt>
   11060:	cmp	r0, #0
   11064:	bne	11368 <getc@plt+0x954>
   11068:	mov	r2, r4
   1106c:	mov	r1, #99	; 0x63
   11070:	mov	r0, r5
   11074:	bl	108e8 <fgets@plt>
   11078:	cmp	r0, #0
   1107c:	beq	11368 <getc@plt+0x954>
   11080:	ldr	r1, [pc, #784]	; 11398 <getc@plt+0x984>
   11084:	mov	r0, r5
   11088:	add	r1, pc, r1
   1108c:	bl	108b8 <strcmp@plt>
   11090:	cmp	r0, #0
   11094:	bne	11368 <getc@plt+0x954>
   11098:	mov	r2, r6
   1109c:	add	r1, sp, #4
   110a0:	mov	r0, r4
   110a4:	bl	10ba8 <getc@plt+0x194>
   110a8:	cmp	r0, #0
   110ac:	beq	11368 <getc@plt+0x954>
   110b0:	add	r2, r6, #4
   110b4:	add	r1, sp, #8
   110b8:	mov	r0, r4
   110bc:	bl	10ba8 <getc@plt+0x194>
   110c0:	cmp	r0, #0
   110c4:	beq	11368 <getc@plt+0x954>
   110c8:	mov	r2, r4
   110cc:	mov	r1, #99	; 0x63
   110d0:	mov	r0, r5
   110d4:	bl	108e8 <fgets@plt>
   110d8:	cmp	r0, #0
   110dc:	beq	11368 <getc@plt+0x954>
   110e0:	mov	r0, r5
   110e4:	mov	r2, r4
   110e8:	mov	r1, #99	; 0x63
   110ec:	bl	108e8 <fgets@plt>
   110f0:	cmp	r0, #0
   110f4:	beq	11368 <getc@plt+0x954>
   110f8:	add	r7, sp, #12
   110fc:	add	r2, r6, #8
   11100:	mov	r1, r7
   11104:	mov	r0, r4
   11108:	bl	10ba8 <getc@plt+0x194>
   1110c:	cmp	r0, #0
   11110:	beq	11368 <getc@plt+0x954>
   11114:	add	r2, r6, #12
   11118:	mov	r1, r7
   1111c:	mov	r0, r4
   11120:	bl	10ba8 <getc@plt+0x194>
   11124:	cmp	r0, #0
   11128:	beq	11368 <getc@plt+0x954>
   1112c:	add	r2, r6, #16
   11130:	mov	r1, r7
   11134:	mov	r0, r4
   11138:	bl	10ba8 <getc@plt+0x194>
   1113c:	cmp	r0, #0
   11140:	beq	11368 <getc@plt+0x954>
   11144:	ldr	r5, [pc, #592]	; 1139c <getc@plt+0x988>
   11148:	mov	r2, r4
   1114c:	mov	r1, #99	; 0x63
   11150:	add	r5, pc, r5
   11154:	mov	r0, r5
   11158:	bl	108e8 <fgets@plt>
   1115c:	cmp	r0, #0
   11160:	beq	11368 <getc@plt+0x954>
   11164:	mov	r2, r4
   11168:	mov	r1, #99	; 0x63
   1116c:	mov	r0, r5
   11170:	bl	108e8 <fgets@plt>
   11174:	cmp	r0, #0
   11178:	beq	11368 <getc@plt+0x954>
   1117c:	mov	r2, r4
   11180:	mov	r1, #99	; 0x63
   11184:	mov	r0, r5
   11188:	bl	108e8 <fgets@plt>
   1118c:	cmp	r0, #0
   11190:	beq	11368 <getc@plt+0x954>
   11194:	mov	r2, r4
   11198:	mov	r1, #99	; 0x63
   1119c:	mov	r0, r5
   111a0:	bl	108e8 <fgets@plt>
   111a4:	cmp	r0, #0
   111a8:	beq	11368 <getc@plt+0x954>
   111ac:	add	r1, r6, #20
   111b0:	mov	r0, r4
   111b4:	bl	10c34 <getc@plt+0x220>
   111b8:	cmp	r0, #0
   111bc:	beq	11368 <getc@plt+0x954>
   111c0:	add	r1, r6, #36	; 0x24
   111c4:	mov	r0, r4
   111c8:	bl	10c34 <getc@plt+0x220>
   111cc:	cmp	r0, #0
   111d0:	beq	11368 <getc@plt+0x954>
   111d4:	add	r1, r6, #52	; 0x34
   111d8:	mov	r0, r4
   111dc:	bl	10c34 <getc@plt+0x220>
   111e0:	cmp	r0, #0
   111e4:	beq	11368 <getc@plt+0x954>
   111e8:	mov	r2, r4
   111ec:	mov	r1, #99	; 0x63
   111f0:	mov	r0, r5
   111f4:	bl	108e8 <fgets@plt>
   111f8:	cmp	r0, #0
   111fc:	bne	11210 <getc@plt+0x7fc>
   11200:	b	11368 <getc@plt+0x954>
   11204:	ldrb	r3, [r5]
   11208:	cmp	r3, #10
   1120c:	beq	11228 <getc@plt+0x814>
   11210:	mov	r2, r4
   11214:	mov	r1, #99	; 0x63
   11218:	mov	r0, r5
   1121c:	bl	108e8 <fgets@plt>
   11220:	cmp	r0, #0
   11224:	bne	11204 <getc@plt+0x7f0>
   11228:	ldr	r3, [sp, #8]
   1122c:	cmp	r3, #0
   11230:	bgt	11264 <getc@plt+0x850>
   11234:	ldr	r3, [sp, #4]
   11238:	cmp	r3, #0
   1123c:	bgt	112c8 <getc@plt+0x8b4>
   11240:	mov	r0, r4
   11244:	bl	11f7c <getc@plt+0x1568>
   11248:	add	sp, sp, #24
   1124c:	ldrd	r4, [sp]
   11250:	ldrd	r6, [sp, #8]
   11254:	ldrd	r8, [sp, #16]
   11258:	ldr	sl, [sp, #24]
   1125c:	add	sp, sp, #28
   11260:	pop	{pc}		; (ldr pc, [sp], #4)
   11264:	ldr	r0, [pc, #308]	; 113a0 <getc@plt+0x98c>
   11268:	mov	r2, r4
   1126c:	mov	r1, #99	; 0x63
   11270:	add	r0, pc, r0
   11274:	bl	108e8 <fgets@plt>
   11278:	cmp	r0, #0
   1127c:	beq	11234 <getc@plt+0x820>
   11280:	ldr	r8, [pc, #284]	; 113a4 <getc@plt+0x990>
   11284:	add	r5, sp, #16
   11288:	add	r8, pc, r8
   1128c:	add	r8, r8, #20
   11290:	b	112a4 <getc@plt+0x890>
   11294:	mov	r1, r8
   11298:	mov	r0, r6
   1129c:	ldrd	r2, [sp, #12]
   112a0:	bl	10f54 <getc@plt+0x540>
   112a4:	mov	r2, r5
   112a8:	mov	r1, r7
   112ac:	mov	r0, r4
   112b0:	bl	10cf0 <getc@plt+0x2dc>
   112b4:	cmp	r0, #0
   112b8:	bne	11294 <getc@plt+0x880>
   112bc:	ldr	r3, [sp, #4]
   112c0:	cmp	r3, #0
   112c4:	ble	11240 <getc@plt+0x82c>
   112c8:	ldr	r0, [pc, #216]	; 113a8 <getc@plt+0x994>
   112cc:	mov	r2, r4
   112d0:	mov	r1, #99	; 0x63
   112d4:	add	r0, pc, r0
   112d8:	bl	108e8 <fgets@plt>
   112dc:	cmp	r0, #0
   112e0:	beq	11240 <getc@plt+0x82c>
   112e4:	ldr	r8, [pc, #192]	; 113ac <getc@plt+0x998>
   112e8:	add	r5, sp, #16
   112ec:	ldr	sl, [pc, #188]	; 113b0 <getc@plt+0x99c>
   112f0:	add	r8, pc, r8
   112f4:	add	r9, r8, #31
   112f8:	add	sl, pc, sl
   112fc:	b	11320 <getc@plt+0x90c>
   11300:	cmp	r3, #92	; 0x5c
   11304:	bne	11350 <getc@plt+0x93c>
   11308:	mov	r3, #10
   1130c:	mov	r1, r3
   11310:	str	r3, [sp, #20]
   11314:	mov	r0, r6
   11318:	ldrd	r2, [sp, #12]
   1131c:	bl	10eb4 <getc@plt+0x4a0>
   11320:	mov	r2, r5
   11324:	mov	r1, r7
   11328:	mov	r0, r4
   1132c:	bl	10cf0 <getc@plt+0x2dc>
   11330:	cmp	r0, #0
   11334:	beq	11240 <getc@plt+0x82c>
   11338:	ldrb	r3, [r8, #31]
   1133c:	cmp	r3, #125	; 0x7d
   11340:	bne	11300 <getc@plt+0x8ec>
   11344:	ldrb	r1, [r8, #30]
   11348:	str	r1, [sp, #20]
   1134c:	b	11314 <getc@plt+0x900>
   11350:	mov	r1, sl
   11354:	add	r2, sp, #20
   11358:	mov	r0, r9
   1135c:	bl	109c0 <__isoc99_sscanf@plt>
   11360:	ldr	r1, [sp, #20]
   11364:	b	11314 <getc@plt+0x900>
   11368:	cmp	r8, #0
   1136c:	beq	11380 <getc@plt+0x96c>
   11370:	ldr	r0, [pc, #60]	; 113b4 <getc@plt+0x9a0>
   11374:	mov	r1, r8
   11378:	add	r0, pc, r0
   1137c:	bl	121e0 <error@@Base+0xc4>
   11380:	ldr	r8, [pc, #48]	; 113b8 <getc@plt+0x9a4>
   11384:	add	r8, pc, r8
   11388:	b	11370 <getc@plt+0x95c>
   1138c:	andeq	r2, r0, r4, lsl #1
   11390:	muleq	r1, r4, r0
   11394:	andeq	r2, r0, r4, asr r0
   11398:	andeq	r2, r0, r0, asr r0
   1139c:	andeq	r2, r1, r0, ror pc
   113a0:	andeq	r2, r1, r0, asr lr
   113a4:	andeq	r2, r1, r8, lsr lr
   113a8:	andeq	r2, r1, ip, ror #27
   113ac:	ldrdeq	r2, [r1], -r0
   113b0:	andeq	r1, r0, ip, lsl #28
   113b4:	muleq	r0, r0, sp
   113b8:	andeq	r1, r0, ip, lsl sp
   113bc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   113c0:	mov	r4, #0
   113c4:	strd	r6, [sp, #8]
   113c8:	mov	r6, r0
   113cc:	mov	r0, r1
   113d0:	ldr	r1, [pc, #848]	; 11728 <getc@plt+0xd14>
   113d4:	add	r5, r6, #68	; 0x44
   113d8:	strd	r8, [sp, #16]
   113dc:	str	lr, [sp, #24]
   113e0:	sub	sp, sp, #20
   113e4:	ldr	r8, [pc, #832]	; 1172c <getc@plt+0xd18>
   113e8:	add	r1, pc, r1
   113ec:	ldr	r9, [pc, #828]	; 11730 <getc@plt+0xd1c>
   113f0:	bl	12240 <error@@Base+0x124>
   113f4:	ldr	r3, [pc, #824]	; 11734 <getc@plt+0xd20>
   113f8:	mov	r7, r0
   113fc:	add	r8, pc, r8
   11400:	ldr	r2, [pc, #816]	; 11738 <getc@plt+0xd24>
   11404:	add	r9, pc, r9
   11408:	ldr	r1, [pc, #812]	; 1173c <getc@plt+0xd28>
   1140c:	add	r3, pc, r3
   11410:	add	r2, pc, r2
   11414:	add	r1, pc, r1
   11418:	bl	109b4 <fprintf@plt>
   1141c:	ldr	r3, [pc, #796]	; 11740 <getc@plt+0xd2c>
   11420:	mov	r1, r8
   11424:	mov	r0, r7
   11428:	ldr	r2, [r6]
   1142c:	add	r3, pc, r3
   11430:	bl	109b4 <fprintf@plt>
   11434:	ldr	r3, [pc, #776]	; 11744 <getc@plt+0xd30>
   11438:	mov	r1, r8
   1143c:	mov	r0, r7
   11440:	ldr	r2, [r6, #4]
   11444:	add	r3, pc, r3
   11448:	bl	109b4 <fprintf@plt>
   1144c:	ldr	r2, [r6]
   11450:	mov	r0, r7
   11454:	ldr	r1, [r6, #4]
   11458:	sub	r1, r2, r1
   1145c:	bl	10d60 <getc@plt+0x34c>
   11460:	ldr	r1, [pc, #736]	; 11748 <getc@plt+0xd34>
   11464:	mov	r0, r7
   11468:	add	r1, pc, r1
   1146c:	bl	109b4 <fprintf@plt>
   11470:	ldr	r3, [pc, #724]	; 1174c <getc@plt+0xd38>
   11474:	mov	r1, r8
   11478:	mov	r0, r7
   1147c:	ldr	r2, [r6, #8]
   11480:	add	r3, pc, r3
   11484:	bl	109b4 <fprintf@plt>
   11488:	ldr	r3, [pc, #704]	; 11750 <getc@plt+0xd3c>
   1148c:	mov	r1, r8
   11490:	mov	r0, r7
   11494:	ldr	r2, [r6, #12]
   11498:	add	r3, pc, r3
   1149c:	bl	109b4 <fprintf@plt>
   114a0:	ldr	r3, [pc, #684]	; 11754 <getc@plt+0xd40>
   114a4:	mov	r1, r8
   114a8:	mov	r0, r7
   114ac:	ldr	r2, [r6, #16]
   114b0:	add	r3, pc, r3
   114b4:	bl	109b4 <fprintf@plt>
   114b8:	mov	r0, r7
   114bc:	ldr	r2, [r6]
   114c0:	ldr	r1, [r6, #8]
   114c4:	ldr	r3, [r6, #12]
   114c8:	add	r1, r1, r3
   114cc:	bl	10d60 <getc@plt+0x34c>
   114d0:	ldr	r1, [pc, #640]	; 11758 <getc@plt+0xd44>
   114d4:	mov	r0, r7
   114d8:	add	r1, pc, r1
   114dc:	bl	109b4 <fprintf@plt>
   114e0:	ldr	r2, [r6]
   114e4:	mov	r0, r7
   114e8:	ldr	r1, [r6, #48]	; 0x30
   114ec:	sub	r1, r2, r1
   114f0:	bl	10d60 <getc@plt+0x34c>
   114f4:	ldr	r1, [pc, #608]	; 1175c <getc@plt+0xd48>
   114f8:	mov	r0, r7
   114fc:	add	r1, pc, r1
   11500:	bl	109b4 <fprintf@plt>
   11504:	ldr	r0, [pc, #596]	; 11760 <getc@plt+0xd4c>
   11508:	mov	r3, r7
   1150c:	mov	r2, #37	; 0x25
   11510:	mov	r1, #1
   11514:	add	r0, pc, r0
   11518:	bl	1093c <fwrite@plt>
   1151c:	ldr	r3, [pc, #576]	; 11764 <getc@plt+0xd50>
   11520:	mov	r1, r9
   11524:	mov	r0, r7
   11528:	ldr	lr, [r6, #28]
   1152c:	ldr	ip, [r6, #32]
   11530:	add	r3, pc, r3
   11534:	str	r3, [sp, #8]
   11538:	ldr	r2, [r6, #20]
   1153c:	str	lr, [sp]
   11540:	ldr	r3, [r6, #24]
   11544:	str	ip, [sp, #4]
   11548:	bl	109b4 <fprintf@plt>
   1154c:	ldr	r3, [pc, #532]	; 11768 <getc@plt+0xd54>
   11550:	mov	r1, r9
   11554:	mov	r0, r7
   11558:	ldr	r2, [r6, #44]	; 0x2c
   1155c:	ldr	ip, [r6, #48]	; 0x30
   11560:	add	r3, pc, r3
   11564:	str	r2, [sp]
   11568:	str	r3, [sp, #8]
   1156c:	ldr	r2, [r6, #36]	; 0x24
   11570:	str	ip, [sp, #4]
   11574:	ldr	r3, [r6, #40]	; 0x28
   11578:	bl	109b4 <fprintf@plt>
   1157c:	ldr	r3, [pc, #488]	; 1176c <getc@plt+0xd58>
   11580:	mov	r1, r9
   11584:	mov	r0, r7
   11588:	ldr	lr, [r6, #60]	; 0x3c
   1158c:	ldr	ip, [r6, #64]	; 0x40
   11590:	add	r3, pc, r3
   11594:	str	r3, [sp, #8]
   11598:	ldr	r2, [r6, #52]	; 0x34
   1159c:	str	lr, [sp]
   115a0:	ldr	r3, [r6, #56]	; 0x38
   115a4:	str	ip, [sp, #4]
   115a8:	bl	109b4 <fprintf@plt>
   115ac:	ldr	r1, [pc, #444]	; 11770 <getc@plt+0xd5c>
   115b0:	mov	r0, r7
   115b4:	add	r1, pc, r1
   115b8:	bl	109b4 <fprintf@plt>
   115bc:	ldr	r3, [r5, r4, lsl #3]
   115c0:	mov	r0, r4
   115c4:	cmp	r3, #0
   115c8:	ble	115e4 <getc@plt+0xbd0>
   115cc:	bl	11db8 <getc@plt+0x13a4>
   115d0:	mov	r2, r0
   115d4:	mov	r3, #0
   115d8:	add	r1, r5, r4, lsl #3
   115dc:	mov	r0, r7
   115e0:	bl	10e04 <getc@plt+0x3f0>
   115e4:	add	r4, r4, #1
   115e8:	cmp	r4, #256	; 0x100
   115ec:	bne	115bc <getc@plt+0xba8>
   115f0:	ldr	r2, [pc, #380]	; 11774 <getc@plt+0xd60>
   115f4:	add	r1, r6, #2112	; 0x840
   115f8:	mov	r3, #0
   115fc:	add	r1, r1, #4
   11600:	mov	r0, r7
   11604:	add	r2, pc, r2
   11608:	bl	10e04 <getc@plt+0x3f0>
   1160c:	ldr	r3, [r6, #4]
   11610:	cmp	r3, #0
   11614:	bgt	11644 <getc@plt+0xc30>
   11618:	ldr	r3, [r6]
   1161c:	cmp	r3, #0
   11620:	bgt	116d4 <getc@plt+0xcc0>
   11624:	mov	r0, r7
   11628:	add	sp, sp, #20
   1162c:	ldrd	r4, [sp]
   11630:	ldrd	r6, [sp, #8]
   11634:	ldrd	r8, [sp, #16]
   11638:	ldr	lr, [sp, #24]
   1163c:	add	sp, sp, #28
   11640:	b	11f7c <getc@plt+0x1568>
   11644:	add	r0, r6, #2112	; 0x840
   11648:	add	r5, r6, #8192	; 0x2000
   1164c:	add	r0, r0, #12
   11650:	bl	11b40 <getc@plt+0x112c>
   11654:	ldr	r2, [pc, #284]	; 11778 <getc@plt+0xd64>
   11658:	ldr	r1, [r5, #1980]	; 0x7bc
   1165c:	ldr	r0, [r5, #1984]	; 0x7c0
   11660:	add	r2, pc, r2
   11664:	bl	1192c <getc@plt+0xf18>
   11668:	ldr	r0, [pc, #268]	; 1177c <getc@plt+0xd68>
   1166c:	mov	r3, r7
   11670:	mov	r2, #39	; 0x27
   11674:	mov	r1, #1
   11678:	add	r0, pc, r0
   1167c:	bl	1093c <fwrite@plt>
   11680:	ldr	r3, [r5, #1984]	; 0x7c0
   11684:	cmp	r3, #0
   11688:	ble	11618 <getc@plt+0xc04>
   1168c:	ldr	r8, [pc, #236]	; 11780 <getc@plt+0xd6c>
   11690:	mov	r4, #0
   11694:	add	r8, pc, r8
   11698:	ldr	r3, [r5, #1980]	; 0x7bc
   1169c:	mov	r1, r8
   116a0:	mov	r0, r7
   116a4:	ldr	r3, [r3, r4, lsl #2]
   116a8:	add	r4, r4, #1
   116ac:	ldr	ip, [r3, #8]
   116b0:	ldrd	r2, [r3, #12]
   116b4:	str	ip, [sp]
   116b8:	bl	109b4 <fprintf@plt>
   116bc:	ldr	r3, [r5, #1984]	; 0x7c0
   116c0:	cmp	r3, r4
   116c4:	bgt	11698 <getc@plt+0xc84>
   116c8:	ldr	r3, [r6]
   116cc:	cmp	r3, #0
   116d0:	ble	11624 <getc@plt+0xc10>
   116d4:	ldr	r1, [pc, #168]	; 11784 <getc@plt+0xd70>
   116d8:	add	r5, r6, #10176	; 0x27c0
   116dc:	mov	r0, r7
   116e0:	movw	r6, #65535	; 0xffff
   116e4:	movt	r6, #16
   116e8:	add	r5, r5, #4
   116ec:	mov	r4, #0
   116f0:	add	r1, pc, r1
   116f4:	bl	109b4 <fprintf@plt>
   116f8:	ldr	ip, [r5, r4, lsl #3]
   116fc:	mov	r2, #0
   11700:	mov	r3, r4
   11704:	add	r1, r5, r4, lsl #3
   11708:	mov	r0, r7
   1170c:	add	r4, r4, #1
   11710:	cmp	ip, r2
   11714:	ble	1171c <getc@plt+0xd08>
   11718:	bl	10e04 <getc@plt+0x3f0>
   1171c:	cmp	r4, r6
   11720:	bne	116f8 <getc@plt+0xce4>
   11724:	b	11624 <getc@plt+0xc10>
   11728:	andeq	r1, r0, r4, lsr sp
   1172c:	andeq	r1, r0, r8, lsr sp
   11730:	andeq	r1, r0, r4, ror #27
   11734:	andeq	r1, r0, ip, asr #25
   11738:	muleq	r0, ip, ip
   1173c:	andeq	r1, r0, ip, lsl #26
   11740:	strdeq	r1, [r0], -ip
   11744:	strdeq	r1, [r0], -ip
   11748:	andeq	r1, r0, r0, ror #25
   1174c:	ldrdeq	r1, [r0], -r8
   11750:	ldrdeq	r1, [r0], -r4
   11754:	andeq	r1, r0, ip, asr #25
   11758:			; <UNDEFINED> instruction: 0x00001cb0
   1175c:	andeq	r1, r0, r4, lsr #25
   11760:	andeq	r1, r0, ip, lsr #25
   11764:	ldrdeq	r1, [r0], -r4
   11768:	andeq	r1, r0, ip, lsr #25
   1176c:	andeq	r1, r0, r8, lsl #25
   11770:	andeq	r1, r0, ip, ror #24
   11774:	andeq	r1, r0, r4, lsl ip
   11778:			; <UNDEFINED> instruction: 0xfffff768
   1177c:	andeq	r1, r0, r8, asr #23
   11780:	ldrdeq	r1, [r0], -r4
   11784:	andeq	r1, r0, r0, lsr fp
   11788:	ldr	r3, [pc, #400]	; 11920 <getc@plt+0xf0c>
   1178c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11790:	strd	r6, [sp, #8]
   11794:	ldr	r6, [pc, #392]	; 11924 <getc@plt+0xf10>
   11798:	strd	r8, [sp, #16]
   1179c:	add	r3, pc, r3
   117a0:	strd	sl, [sp, #24]
   117a4:	str	lr, [sp, #32]
   117a8:	sub	sp, sp, #20
   117ac:	add	r6, pc, r6
   117b0:	str	r0, [sp]
   117b4:	str	r3, [sp, #8]
   117b8:	lsl	r3, r1, #2
   117bc:	str	r1, [sp, #4]
   117c0:	str	r3, [sp, #12]
   117c4:	ldr	r3, [sp]
   117c8:	ldr	r2, [sp, #4]
   117cc:	cmp	r3, r2
   117d0:	ldr	r2, [sp, #8]
   117d4:	ldr	r1, [r2]
   117d8:	ldr	r4, [r1, r3, lsl #2]
   117dc:	bge	11910 <getc@plt+0xefc>
   117e0:	ldr	r5, [pc, #320]	; 11928 <getc@plt+0xf14>
   117e4:	ldm	sp, {r8, fp}
   117e8:	add	r5, pc, r5
   117ec:	mov	r0, r4
   117f0:	ldr	r1, [r1, fp, lsl #2]
   117f4:	lsl	r9, fp, #2
   117f8:	ldr	r3, [r5, #4]
   117fc:	blx	r3
   11800:	cmp	r0, #0
   11804:	bge	11898 <getc@plt+0xe84>
   11808:	sub	fp, fp, #1
   1180c:	ldr	r1, [r5]
   11810:	cmp	r8, fp
   11814:	lslge	r9, fp, #2
   11818:	blt	117ec <getc@plt+0xdd8>
   1181c:	cmp	fp, r8
   11820:	add	r7, r1, r9
   11824:	beq	118a8 <getc@plt+0xe94>
   11828:	ldr	r3, [r1, r9]
   1182c:	add	sl, r8, #1
   11830:	lsl	r7, r8, #2
   11834:	cmp	fp, sl
   11838:	str	r3, [r1, r8, lsl #2]
   1183c:	bgt	11854 <getc@plt+0xe40>
   11840:	b	118f0 <getc@plt+0xedc>
   11844:	add	sl, sl, #1
   11848:	ldr	r1, [r6]
   1184c:	cmp	fp, sl
   11850:	beq	118a0 <getc@plt+0xe8c>
   11854:	mov	r0, r4
   11858:	ldr	r1, [r1, sl, lsl #2]
   1185c:	lsl	r7, sl, #2
   11860:	ldr	r3, [r6, #4]
   11864:	blx	r3
   11868:	cmp	r0, #0
   1186c:	bgt	11844 <getc@plt+0xe30>
   11870:	ldr	r1, [r6]
   11874:	mov	r8, sl
   11878:	add	r7, r1, r7
   1187c:	ldr	r3, [r7]
   11880:	sub	fp, fp, #1
   11884:	cmp	fp, sl
   11888:	str	r3, [r1, r9]
   1188c:	bgt	117ec <getc@plt+0xdd8>
   11890:	add	r7, r1, fp, lsl #2
   11894:	b	118ac <getc@plt+0xe98>
   11898:	ldr	r1, [r5]
   1189c:	b	1181c <getc@plt+0xe08>
   118a0:	add	r7, r1, r9
   118a4:	mov	r8, fp
   118a8:	mov	fp, r8
   118ac:	ldr	r3, [sp]
   118b0:	sub	r1, fp, #1
   118b4:	str	r4, [r7]
   118b8:	cmp	r3, r1
   118bc:	blt	11904 <getc@plt+0xef0>
   118c0:	ldr	r2, [sp, #4]
   118c4:	add	r3, r8, #1
   118c8:	str	r3, [sp]
   118cc:	cmp	r3, r2
   118d0:	blt	117c4 <getc@plt+0xdb0>
   118d4:	add	sp, sp, #20
   118d8:	ldrd	r4, [sp]
   118dc:	ldrd	r6, [sp, #8]
   118e0:	ldrd	r8, [sp, #16]
   118e4:	ldrd	sl, [sp, #24]
   118e8:	add	sp, sp, #32
   118ec:	pop	{pc}		; (ldr pc, [sp], #4)
   118f0:	add	r7, r7, #4
   118f4:	add	r7, r1, r7
   118f8:	beq	118a4 <getc@plt+0xe90>
   118fc:	mov	r8, sl
   11900:	b	1187c <getc@plt+0xe68>
   11904:	mov	r0, r3
   11908:	bl	11788 <getc@plt+0xd74>
   1190c:	b	118c0 <getc@plt+0xeac>
   11910:	ldm	sp, {r8, fp}
   11914:	ldr	r3, [sp, #12]
   11918:	add	r7, r1, r3
   1191c:	b	118ac <getc@plt+0xe98>
   11920:	andeq	r2, r1, r8, lsl #19
   11924:	andeq	r2, r1, r8, ror r9
   11928:	andeq	r2, r1, ip, lsr r9
   1192c:	cmp	r0, #1
   11930:	mov	ip, r1
   11934:	ble	11954 <getc@plt+0xf40>
   11938:	ldr	r3, [pc, #24]	; 11958 <getc@plt+0xf44>
   1193c:	sub	r1, r0, #1
   11940:	mov	r0, #0
   11944:	add	r3, pc, r3
   11948:	str	ip, [r3]
   1194c:	str	r2, [r3, #4]
   11950:	b	11788 <getc@plt+0xd74>
   11954:	bx	lr
   11958:	andeq	r2, r1, r0, ror #15
   1195c:	strd	r4, [sp, #-16]!
   11960:	add	r5, r0, #8000	; 0x1f40
   11964:	mov	r4, r0
   11968:	add	r5, r5, #48	; 0x30
   1196c:	str	r6, [sp, #8]
   11970:	mov	r6, r0
   11974:	str	lr, [sp, #12]
   11978:	mov	r0, r4
   1197c:	add	r4, r4, #16
   11980:	bl	12d18 <error@@Base+0xbfc>
   11984:	cmp	r4, r5
   11988:	bne	11978 <getc@plt+0xf64>
   1198c:	add	r6, r6, #4096	; 0x1000
   11990:	mov	r3, #0
   11994:	ldrd	r4, [sp]
   11998:	str	r3, [r6, #3952]	; 0xf70
   1199c:	str	r3, [r6, #3956]	; 0xf74
   119a0:	ldr	r6, [sp, #8]
   119a4:	add	sp, sp, #12
   119a8:	pop	{pc}		; (ldr pc, [sp], #4)
   119ac:	strd	r4, [sp, #-16]!
   119b0:	mov	r5, r1
   119b4:	str	r6, [sp, #8]
   119b8:	str	lr, [sp, #12]
   119bc:	ldrb	r3, [r1]
   119c0:	cmp	r3, #0
   119c4:	beq	119f4 <getc@plt+0xfe0>
   119c8:	mov	r2, #0
   119cc:	add	r2, r2, r3
   119d0:	ldrb	r3, [r1, #1]!
   119d4:	cmp	r3, #0
   119d8:	bne	119cc <getc@plt+0xfb8>
   119dc:	movw	r3, #20065	; 0x4e61
   119e0:	movt	r3, #33354	; 0x824a
   119e4:	movw	r1, #503	; 0x1f7
   119e8:	umull	ip, r3, r3, r2
   119ec:	lsr	r3, r3, #8
   119f0:	mls	r3, r1, r3, r2
   119f4:	ldr	r4, [r0, r3, lsl #4]
   119f8:	cmp	r4, #0
   119fc:	bne	11a10 <getc@plt+0xffc>
   11a00:	b	11a24 <getc@plt+0x1010>
   11a04:	ldr	r4, [r4, #4]
   11a08:	cmp	r4, #0
   11a0c:	beq	11a24 <getc@plt+0x1010>
   11a10:	mov	r0, r5
   11a14:	ldr	r1, [r4, #8]
   11a18:	bl	108b8 <strcmp@plt>
   11a1c:	cmp	r0, #0
   11a20:	bne	11a04 <getc@plt+0xff0>
   11a24:	mov	r0, r4
   11a28:	ldrd	r4, [sp]
   11a2c:	ldr	r6, [sp, #8]
   11a30:	add	sp, sp, #12
   11a34:	pop	{pc}		; (ldr pc, [sp], #4)
   11a38:	ldr	r2, [r1, #8]
   11a3c:	str	r4, [sp, #-8]!
   11a40:	mov	r4, r0
   11a44:	str	lr, [sp, #4]
   11a48:	ldrb	r3, [r2]
   11a4c:	cmp	r3, #0
   11a50:	beq	11a84 <getc@plt+0x1070>
   11a54:	mov	r0, #0
   11a58:	add	r0, r0, r3
   11a5c:	ldrb	r3, [r2, #1]!
   11a60:	cmp	r3, #0
   11a64:	bne	11a58 <getc@plt+0x1044>
   11a68:	movw	r3, #20065	; 0x4e61
   11a6c:	movt	r3, #33354	; 0x824a
   11a70:	movw	r2, #503	; 0x1f7
   11a74:	umull	ip, r3, r3, r0
   11a78:	lsr	r3, r3, #8
   11a7c:	mls	r0, r2, r3, r0
   11a80:	add	r0, r4, r0, lsl #4
   11a84:	add	r4, r4, #4096	; 0x1000
   11a88:	bl	12d30 <error@@Base+0xc14>
   11a8c:	ldr	r0, [r4, #3952]	; 0xf70
   11a90:	cmp	r0, #0
   11a94:	beq	11aa4 <getc@plt+0x1090>
   11a98:	bl	108d0 <free@plt>
   11a9c:	mov	r3, #0
   11aa0:	str	r3, [r4, #3952]	; 0xf70
   11aa4:	ldr	r3, [r4, #3956]	; 0xf74
   11aa8:	add	r3, r3, #1
   11aac:	str	r3, [r4, #3956]	; 0xf74
   11ab0:	ldr	r4, [sp]
   11ab4:	add	sp, sp, #4
   11ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   11abc:	ldr	r2, [r1, #8]
   11ac0:	str	r4, [sp, #-8]!
   11ac4:	mov	r4, r0
   11ac8:	str	lr, [sp, #4]
   11acc:	ldrb	r3, [r2]
   11ad0:	cmp	r3, #0
   11ad4:	beq	11b08 <getc@plt+0x10f4>
   11ad8:	mov	r0, #0
   11adc:	add	r0, r0, r3
   11ae0:	ldrb	r3, [r2, #1]!
   11ae4:	cmp	r3, #0
   11ae8:	bne	11adc <getc@plt+0x10c8>
   11aec:	movw	r3, #20065	; 0x4e61
   11af0:	movt	r3, #33354	; 0x824a
   11af4:	movw	r2, #503	; 0x1f7
   11af8:	umull	ip, r3, r3, r0
   11afc:	lsr	r3, r3, #8
   11b00:	mls	r0, r2, r3, r0
   11b04:	add	r0, r4, r0, lsl #4
   11b08:	add	r4, r4, #4096	; 0x1000
   11b0c:	bl	12e90 <error@@Base+0xd74>
   11b10:	ldr	r0, [r4, #3952]	; 0xf70
   11b14:	cmp	r0, #0
   11b18:	beq	11b28 <getc@plt+0x1114>
   11b1c:	bl	108d0 <free@plt>
   11b20:	mov	r3, #0
   11b24:	str	r3, [r4, #3952]	; 0xf70
   11b28:	ldr	r3, [r4, #3956]	; 0xf74
   11b2c:	sub	r3, r3, #1
   11b30:	str	r3, [r4, #3956]	; 0xf74
   11b34:	ldr	r4, [sp]
   11b38:	add	sp, sp, #4
   11b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b40:	strd	r4, [sp, #-16]!
   11b44:	str	r6, [sp, #8]
   11b48:	add	r6, r0, #4096	; 0x1000
   11b4c:	ldr	r4, [r6, #3952]	; 0xf70
   11b50:	str	lr, [sp, #12]
   11b54:	cmp	r4, #0
   11b58:	beq	11b6c <getc@plt+0x1158>
   11b5c:	ldrd	r4, [sp]
   11b60:	ldr	r6, [sp, #8]
   11b64:	add	sp, sp, #12
   11b68:	pop	{pc}		; (ldr pc, [sp], #4)
   11b6c:	ldr	r3, [r6, #3956]	; 0xf74
   11b70:	cmp	r3, #0
   11b74:	beq	11b5c <getc@plt+0x1148>
   11b78:	mov	r5, r0
   11b7c:	mov	r1, #4
   11b80:	mov	r0, r3
   11b84:	bl	12178 <error@@Base+0x5c>
   11b88:	mov	r2, r4
   11b8c:	mov	ip, r4
   11b90:	str	r0, [r6, #3952]	; 0xf70
   11b94:	movw	lr, #503	; 0x1f7
   11b98:	ldr	r3, [r5, ip, lsl #4]
   11b9c:	cmp	r3, #0
   11ba0:	beq	11bbc <getc@plt+0x11a8>
   11ba4:	add	r1, r0, r2, lsl #2
   11ba8:	str	r3, [r1], #4
   11bac:	add	r2, r2, #1
   11bb0:	ldr	r3, [r3, #4]
   11bb4:	cmp	r3, #0
   11bb8:	bne	11ba8 <getc@plt+0x1194>
   11bbc:	add	ip, ip, #1
   11bc0:	cmp	ip, lr
   11bc4:	bne	11b98 <getc@plt+0x1184>
   11bc8:	ldrd	r4, [sp]
   11bcc:	ldr	r6, [sp, #8]
   11bd0:	add	sp, sp, #12
   11bd4:	pop	{pc}		; (ldr pc, [sp], #4)
   11bd8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11bdc:	add	r5, r0, #8000	; 0x1f40
   11be0:	mov	r4, r0
   11be4:	add	r5, r5, #48	; 0x30
   11be8:	strd	r6, [sp, #8]
   11bec:	mov	r7, r0
   11bf0:	mov	r6, r1
   11bf4:	str	r8, [sp, #16]
   11bf8:	str	lr, [sp, #20]
   11bfc:	mov	r0, r4
   11c00:	mov	r1, r6
   11c04:	add	r4, r4, #16
   11c08:	bl	12f5c <error@@Base+0xe40>
   11c0c:	cmp	r4, r5
   11c10:	bne	11bfc <getc@plt+0x11e8>
   11c14:	add	r7, r7, #4096	; 0x1000
   11c18:	ldr	r0, [r7, #3952]	; 0xf70
   11c1c:	cmp	r0, #0
   11c20:	beq	11c30 <getc@plt+0x121c>
   11c24:	bl	108d0 <free@plt>
   11c28:	mov	r3, #0
   11c2c:	str	r3, [r7, #3952]	; 0xf70
   11c30:	mov	r3, #0
   11c34:	ldrd	r4, [sp]
   11c38:	ldr	r8, [sp, #16]
   11c3c:	str	r3, [r7, #3956]	; 0xf74
   11c40:	ldrd	r6, [sp, #8]
   11c44:	add	sp, sp, #20
   11c48:	pop	{pc}		; (ldr pc, [sp], #4)
   11c4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11c50:	ldr	r5, [pc, #260]	; 11d5c <getc@plt+0x1348>
   11c54:	strd	r6, [sp, #8]
   11c58:	ldr	r3, [pc, #256]	; 11d60 <getc@plt+0x134c>
   11c5c:	strd	r8, [sp, #16]
   11c60:	ldr	r6, [pc, #252]	; 11d64 <getc@plt+0x1350>
   11c64:	add	r5, pc, r5
   11c68:	strd	sl, [sp, #24]
   11c6c:	ldr	r8, [pc, #244]	; 11d68 <getc@plt+0x1354>
   11c70:	add	r7, r5, #1088	; 0x440
   11c74:	add	r3, pc, r3
   11c78:	add	r7, r7, #4
   11c7c:	str	lr, [sp, #32]
   11c80:	sub	sp, sp, #12
   11c84:	add	r6, pc, r6
   11c88:	str	r3, [sp, #4]
   11c8c:	add	r8, pc, r8
   11c90:	ldrsh	sl, [r6]
   11c94:	cmp	sl, #0
   11c98:	ble	11d20 <getc@plt+0x130c>
   11c9c:	mov	r9, r6
   11ca0:	mov	r4, #0
   11ca4:	ldr	fp, [r5, #8]
   11ca8:	b	11cb8 <getc@plt+0x12a4>
   11cac:	add	r4, r4, #1
   11cb0:	cmp	sl, r4
   11cb4:	beq	11d2c <getc@plt+0x1318>
   11cb8:	mov	r0, fp
   11cbc:	ldr	r1, [r9, #4]!
   11cc0:	bl	108b8 <strcmp@plt>
   11cc4:	cmp	r0, #0
   11cc8:	bne	11cac <getc@plt+0x1298>
   11ccc:	ldr	r3, [r5]
   11cd0:	ldr	r1, [r5, #4]
   11cd4:	cmp	r3, r1
   11cd8:	subls	r2, r3, #1
   11cdc:	uxtbls	r4, r4
   11ce0:	addls	r2, r2, r8
   11ce4:	bhi	11cf8 <getc@plt+0x12e4>
   11ce8:	add	r3, r3, #1
   11cec:	strb	r4, [r2, #1]!
   11cf0:	cmp	r3, r1
   11cf4:	bls	11ce8 <getc@plt+0x12d4>
   11cf8:	add	r5, r5, #12
   11cfc:	cmp	r5, r7
   11d00:	bne	11c90 <getc@plt+0x127c>
   11d04:	add	sp, sp, #12
   11d08:	ldrd	r4, [sp]
   11d0c:	ldrd	r6, [sp, #8]
   11d10:	ldrd	r8, [sp, #16]
   11d14:	ldrd	sl, [sp, #24]
   11d18:	add	sp, sp, #32
   11d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d20:	movne	r4, #0
   11d24:	bne	11ccc <getc@plt+0x12b8>
   11d28:	mov	r4, sl
   11d2c:	cmp	sl, #256	; 0x100
   11d30:	beq	11d50 <getc@plt+0x133c>
   11d34:	ldr	r1, [sp, #4]
   11d38:	add	sl, sl, #1
   11d3c:	ldr	r2, [r5, #8]
   11d40:	add	r3, r1, r4, lsl #2
   11d44:	strh	sl, [r1]
   11d48:	str	r2, [r3, #4]
   11d4c:	b	11ccc <getc@plt+0x12b8>
   11d50:	ldr	r0, [pc, #20]	; 11d6c <getc@plt+0x1358>
   11d54:	add	r0, pc, r0
   11d58:	bl	1211c <error@@Base>
   11d5c:	andeq	r1, r1, r8, asr lr
   11d60:			; <UNDEFINED> instruction: 0x000124b8
   11d64:	andeq	r2, r1, r8, lsr #9
   11d68:	andeq	r2, r1, r4, lsr #17
   11d6c:	andeq	r1, r0, r4, lsr #10
   11d70:	ldr	r3, [pc, #56]	; 11db0 <getc@plt+0x139c>
   11d74:	str	r4, [sp, #-8]!
   11d78:	mov	r4, r0
   11d7c:	add	r3, pc, r3
   11d80:	ldrsh	r3, [r3]
   11d84:	str	lr, [sp, #4]
   11d88:	cmp	r3, #0
   11d8c:	beq	11da8 <getc@plt+0x1394>
   11d90:	ldr	r3, [pc, #28]	; 11db4 <getc@plt+0x13a0>
   11d94:	add	r3, pc, r3
   11d98:	ldrb	r0, [r3, r4]
   11d9c:	ldr	r4, [sp]
   11da0:	add	sp, sp, #4
   11da4:	pop	{pc}		; (ldr pc, [sp], #4)
   11da8:	bl	11c4c <getc@plt+0x1238>
   11dac:	b	11d90 <getc@plt+0x137c>
   11db0:			; <UNDEFINED> instruction: 0x000123b0
   11db4:	muleq	r1, ip, r7
   11db8:	strd	r4, [sp, #-16]!
   11dbc:	uxtb	r4, r0
   11dc0:	ldr	r5, [pc, #84]	; 11e1c <getc@plt+0x1408>
   11dc4:	add	r5, pc, r5
   11dc8:	ldrsh	r2, [r5]
   11dcc:	str	r6, [sp, #8]
   11dd0:	str	lr, [sp, #12]
   11dd4:	cmp	r2, #0
   11dd8:	beq	11e04 <getc@plt+0x13f0>
   11ddc:	cmp	r4, r2
   11de0:	bge	11e10 <getc@plt+0x13fc>
   11de4:	ldr	r3, [pc, #52]	; 11e20 <getc@plt+0x140c>
   11de8:	ldr	r6, [sp, #8]
   11dec:	add	r3, pc, r3
   11df0:	add	r3, r3, r4, lsl #2
   11df4:	ldrd	r4, [sp]
   11df8:	add	sp, sp, #12
   11dfc:	ldr	r0, [r3, #4]
   11e00:	pop	{pc}		; (ldr pc, [sp], #4)
   11e04:	bl	11c4c <getc@plt+0x1238>
   11e08:	ldrsh	r2, [r5]
   11e0c:	b	11ddc <getc@plt+0x13c8>
   11e10:	ldr	r0, [pc, #12]	; 11e24 <getc@plt+0x1410>
   11e14:	add	r0, pc, r0
   11e18:	bl	1211c <error@@Base>
   11e1c:	andeq	r2, r1, r8, ror #6
   11e20:	andeq	r2, r1, r0, asr #6
   11e24:	andeq	r1, r0, r0, lsl #9
   11e28:	ldr	r3, [pc, #96]	; 11e90 <getc@plt+0x147c>
   11e2c:	strd	r4, [sp, #-16]!
   11e30:	ldr	r2, [pc, #92]	; 11e94 <getc@plt+0x1480>
   11e34:	str	r6, [sp, #8]
   11e38:	mov	r6, r0
   11e3c:	str	lr, [sp, #12]
   11e40:	sub	sp, sp, #112	; 0x70
   11e44:	add	r3, pc, r3
   11e48:	add	r4, sp, #12
   11e4c:	ldr	r3, [r3, r2]
   11e50:	ldr	r5, [r3]
   11e54:	bl	10984 <getpid@plt>
   11e58:	ldr	r1, [pc, #56]	; 11e98 <getc@plt+0x1484>
   11e5c:	mov	r3, r0
   11e60:	mov	r0, r4
   11e64:	str	r6, [sp]
   11e68:	mov	r2, r5
   11e6c:	add	r1, pc, r1
   11e70:	bl	109d8 <sprintf@plt>
   11e74:	mov	r0, r4
   11e78:	bl	10900 <strdup@plt>
   11e7c:	add	sp, sp, #112	; 0x70
   11e80:	ldrd	r4, [sp]
   11e84:	ldr	r6, [sp, #8]
   11e88:	add	sp, sp, #12
   11e8c:	pop	{pc}		; (ldr pc, [sp], #4)
   11e90:			; <UNDEFINED> instruction: 0x000121b4
   11e94:	muleq	r0, ip, r0
   11e98:	andeq	r1, r0, r8, ror sl
   11e9c:	ldr	r3, [pc, #116]	; 11f18 <getc@plt+0x1504>
   11ea0:	mov	r6, r0
   11ea4:	str	r7, [sp, #-8]!
   11ea8:	ldr	r2, [pc, #108]	; 11f1c <getc@plt+0x1508>
   11eac:	str	lr, [sp, #4]
   11eb0:	add	r3, pc, r3
   11eb4:	ldr	r3, [r3, r2]
   11eb8:	ldr	r3, [r3]
   11ebc:	cmp	r3, #0
   11ec0:	beq	11ec8 <getc@plt+0x14b4>
   11ec4:	blx	r3
   11ec8:	ldr	r3, [pc, #80]	; 11f20 <getc@plt+0x150c>
   11ecc:	add	r3, pc, r3
   11ed0:	ldrsh	r2, [r3]
   11ed4:	cmp	r2, #0
   11ed8:	ble	11f10 <getc@plt+0x14fc>
   11edc:	mov	r5, r3
   11ee0:	mov	r4, #1
   11ee4:	mov	r0, r4
   11ee8:	add	r4, r4, #1
   11eec:	bl	11e28 <getc@plt+0x1414>
   11ef0:	mov	r7, r0
   11ef4:	sxth	r4, r4
   11ef8:	bl	10918 <unlink@plt>
   11efc:	mov	r0, r7
   11f00:	bl	108d0 <free@plt>
   11f04:	ldrsh	r3, [r5]
   11f08:	cmp	r3, r4
   11f0c:	bge	11ee4 <getc@plt+0x14d0>
   11f10:	mov	r0, r6
   11f14:	bl	10990 <exit@plt>
   11f18:	andeq	r2, r1, r8, asr #2
   11f1c:	andeq	r0, r0, r0, lsr #1
   11f20:	andseq	r2, r2, r4, ror #12
   11f24:	ldrb	r3, [r0]
   11f28:	ldrb	r2, [r1]
   11f2c:	cmp	r3, #0
   11f30:	beq	11f58 <getc@plt+0x1544>
   11f34:	cmp	r2, r3
   11f38:	beq	11f48 <getc@plt+0x1534>
   11f3c:	b	11f64 <getc@plt+0x1550>
   11f40:	cmp	r3, r2
   11f44:	bne	11f64 <getc@plt+0x1550>
   11f48:	ldrb	r3, [r0, #1]!
   11f4c:	ldrb	r2, [r1, #1]!
   11f50:	cmp	r3, #0
   11f54:	bne	11f40 <getc@plt+0x152c>
   11f58:	cmp	r2, #0
   11f5c:	beq	11f74 <getc@plt+0x1560>
   11f60:	mov	r3, #0
   11f64:	cmp	r3, r2
   11f68:	mvncc	r0, #0
   11f6c:	movcs	r0, #1
   11f70:	bx	lr
   11f74:	mov	r0, r2
   11f78:	bx	lr
   11f7c:	ldr	r3, [pc, #48]	; 11fb4 <getc@plt+0x15a0>
   11f80:	ldr	r1, [pc, #48]	; 11fb8 <getc@plt+0x15a4>
   11f84:	add	r3, pc, r3
   11f88:	ldr	r1, [r3, r1]
   11f8c:	ldr	r1, [r1]
   11f90:	cmp	r1, r0
   11f94:	beq	11fb0 <getc@plt+0x159c>
   11f98:	ldr	r1, [pc, #28]	; 11fbc <getc@plt+0x15a8>
   11f9c:	ldr	r3, [r3, r1]
   11fa0:	ldr	r3, [r3]
   11fa4:	cmp	r3, r0
   11fa8:	beq	11fb0 <getc@plt+0x159c>
   11fac:	b	109cc <fclose@plt>
   11fb0:	bx	lr
   11fb4:	andeq	r2, r1, r4, ror r0
   11fb8:	andeq	r0, r0, r8, lsr #1
   11fbc:	andeq	r0, r0, ip, lsr #1
   11fc0:	push	{lr}		; (str lr, [sp, #-4]!)
   11fc4:	sub	sp, sp, #92	; 0x5c
   11fc8:	mov	r1, r0
   11fcc:	mov	r2, sp
   11fd0:	mov	r0, #3
   11fd4:	bl	10930 <__xstat@plt>
   11fd8:	clz	r0, r0
   11fdc:	lsr	r0, r0, #5
   11fe0:	add	sp, sp, #92	; 0x5c
   11fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   11fe8:	ldr	r2, [pc, #56]	; 12028 <getc@plt+0x1614>
   11fec:	str	r4, [sp, #-8]!
   11ff0:	add	r2, pc, r2
   11ff4:	ldrh	r3, [r2]
   11ff8:	str	lr, [sp, #4]
   11ffc:	add	r3, r3, #1
   12000:	sxth	r3, r3
   12004:	mov	r0, r3
   12008:	strh	r3, [r2]
   1200c:	bl	11e28 <getc@plt+0x1414>
   12010:	mov	r4, r0
   12014:	bl	10918 <unlink@plt>
   12018:	mov	r0, r4
   1201c:	ldr	r4, [sp]
   12020:	add	sp, sp, #4
   12024:	pop	{pc}		; (ldr pc, [sp], #4)
   12028:	andseq	r2, r2, r0, asr #10
   1202c:	str	r4, [sp, #-8]!
   12030:	mov	r4, r0
   12034:	str	lr, [sp, #4]
   12038:	bl	109a8 <strlen@plt>
   1203c:	uxth	r0, r0
   12040:	sub	r3, r0, #1
   12044:	sxth	r3, r3
   12048:	cmp	r3, #0
   1204c:	blt	1208c <getc@plt+0x1678>
   12050:	ldrb	r2, [r4, r3]
   12054:	cmp	r2, #47	; 0x2f
   12058:	beq	1208c <getc@plt+0x1678>
   1205c:	sub	r0, r0, #2
   12060:	sxth	r3, r0
   12064:	add	r2, r3, #1
   12068:	add	r2, r4, r2
   1206c:	b	12080 <getc@plt+0x166c>
   12070:	ldrb	r0, [r2, #-1]!
   12074:	cmp	r0, #47	; 0x2f
   12078:	beq	1208c <getc@plt+0x1678>
   1207c:	mov	r3, r1
   12080:	tst	r3, #32768	; 0x8000
   12084:	sub	r1, r3, #1
   12088:	beq	12070 <getc@plt+0x165c>
   1208c:	add	r0, r3, #1
   12090:	add	r0, r4, r0
   12094:	ldr	r4, [sp]
   12098:	add	sp, sp, #4
   1209c:	pop	{pc}		; (ldr pc, [sp], #4)
   120a0:	mov	r0, #0
   120a4:	str	r4, [sp, #-8]!
   120a8:	str	lr, [sp, #4]
   120ac:	bl	11e9c <getc@plt+0x1488>
   120b0:	ldr	r2, [pc, #80]	; 12108 <getc@plt+0x16f4>
   120b4:	str	r4, [sp, #-8]!
   120b8:	ldr	r1, [pc, #76]	; 1210c <getc@plt+0x16f8>
   120bc:	str	lr, [sp, #4]
   120c0:	add	r2, pc, r2
   120c4:	ldr	r1, [r2, r1]
   120c8:	ldr	r1, [r1]
   120cc:	cmp	r1, #0
   120d0:	beq	120dc <getc@plt+0x16c8>
   120d4:	blx	r1
   120d8:	bl	120a0 <getc@plt+0x168c>
   120dc:	mov	r3, r0
   120e0:	ldr	ip, [pc, #40]	; 12110 <getc@plt+0x16fc>
   120e4:	ldr	r0, [pc, #40]	; 12114 <getc@plt+0x1700>
   120e8:	ldr	r1, [pc, #40]	; 12118 <getc@plt+0x1704>
   120ec:	ldr	ip, [r2, ip]
   120f0:	ldr	r0, [r2, r0]
   120f4:	add	r1, pc, r1
   120f8:	ldr	r2, [ip]
   120fc:	ldr	r0, [r0]
   12100:	bl	109b4 <fprintf@plt>
   12104:	b	120d8 <getc@plt+0x16c4>
   12108:	andeq	r1, r1, r8, lsr pc
   1210c:	muleq	r0, r0, r0
   12110:	muleq	r0, ip, r0
   12114:	muleq	r0, r4, r0
   12118:	andeq	r1, r0, r0, lsl #16

0001211c <error@@Base>:
   1211c:	str	r4, [sp, #-8]!
   12120:	mov	r3, r0
   12124:	ldr	r4, [pc, #56]	; 12164 <error@@Base+0x48>
   12128:	str	lr, [sp, #4]
   1212c:	ldr	r0, [pc, #52]	; 12168 <error@@Base+0x4c>
   12130:	ldr	r2, [pc, #52]	; 1216c <error@@Base+0x50>
   12134:	add	r4, pc, r4
   12138:	ldr	r1, [pc, #48]	; 12170 <error@@Base+0x54>
   1213c:	ldr	ip, [r4, r0]
   12140:	ldr	r0, [r4, r2]
   12144:	add	r1, pc, r1
   12148:	ldr	r2, [ip]
   1214c:	ldr	r0, [r0]
   12150:	bl	109b4 <fprintf@plt>
   12154:	ldr	r3, [pc, #24]	; 12174 <error@@Base+0x58>
   12158:	ldr	r3, [r4, r3]
   1215c:	ldr	r0, [r3]
   12160:	bl	11e9c <getc@plt+0x1488>
   12164:	andeq	r1, r1, r4, asr #29
   12168:	muleq	r0, ip, r0
   1216c:	muleq	r0, r4, r0
   12170:	andeq	r1, r0, r0, asr #15
   12174:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12178:	str	r4, [sp, #-8]!
   1217c:	str	lr, [sp, #4]
   12180:	bl	108ac <calloc@plt>
   12184:	cmp	r0, #0
   12188:	beq	12198 <error@@Base+0x7c>
   1218c:	ldr	r4, [sp]
   12190:	add	sp, sp, #4
   12194:	pop	{pc}		; (ldr pc, [sp], #4)
   12198:	ldr	r0, [pc, #4]	; 121a4 <error@@Base+0x88>
   1219c:	add	r0, pc, r0
   121a0:	bl	1211c <error@@Base>
   121a4:	andeq	r1, r0, r0, ror r7
   121a8:	ldr	r3, [pc, #40]	; 121d8 <error@@Base+0xbc>
   121ac:	add	r3, pc, r3
   121b0:	ldrb	r2, [r3, #2]
   121b4:	cmp	r2, #0
   121b8:	bxne	lr
   121bc:	ldr	r0, [pc, #24]	; 121dc <error@@Base+0xc0>
   121c0:	mov	r2, #1
   121c4:	str	r4, [sp, #-8]!
   121c8:	str	lr, [sp, #4]
   121cc:	strb	r2, [r3, #2]
   121d0:	add	r0, pc, r0
   121d4:	bl	1211c <error@@Base>
   121d8:	andseq	r2, r2, r4, lsl #7
   121dc:	andeq	r1, r0, r8, asr r7
   121e0:	ldr	r4, [pc, #68]	; 1222c <error@@Base+0x110>
   121e4:	mov	r3, r0
   121e8:	push	{lr}		; (str lr, [sp, #-4]!)
   121ec:	sub	sp, sp, #12
   121f0:	ldr	r0, [pc, #56]	; 12230 <error@@Base+0x114>
   121f4:	ldr	r2, [pc, #56]	; 12234 <error@@Base+0x118>
   121f8:	add	r4, pc, r4
   121fc:	ldr	ip, [r4, r0]
   12200:	ldr	r0, [r4, r2]
   12204:	str	r1, [sp]
   12208:	ldr	r1, [pc, #40]	; 12238 <error@@Base+0x11c>
   1220c:	ldr	r2, [ip]
   12210:	ldr	r0, [r0]
   12214:	add	r1, pc, r1
   12218:	bl	109b4 <fprintf@plt>
   1221c:	ldr	r3, [pc, #24]	; 1223c <error@@Base+0x120>
   12220:	ldr	r3, [r4, r3]
   12224:	ldr	r0, [r3]
   12228:	bl	11e9c <getc@plt+0x1488>
   1222c:	andeq	r1, r1, r0, lsl #28
   12230:	muleq	r0, ip, r0
   12234:	muleq	r0, r4, r0
   12238:	andeq	r1, r0, r4, lsr #14
   1223c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12240:	ldr	ip, [pc, #164]	; 122ec <error@@Base+0x1d0>
   12244:	subs	r2, r0, #0
   12248:	strd	r4, [sp, #-16]!
   1224c:	mov	r4, r1
   12250:	str	r6, [sp, #8]
   12254:	str	lr, [sp, #12]
   12258:	add	ip, pc, ip
   1225c:	beq	1229c <error@@Base+0x180>
   12260:	mov	r5, r2
   12264:	bl	108c4 <fopen@plt>
   12268:	cmp	r0, #0
   1226c:	beq	12280 <error@@Base+0x164>
   12270:	ldrd	r4, [sp]
   12274:	ldr	r6, [sp, #8]
   12278:	add	sp, sp, #12
   1227c:	pop	{pc}		; (ldr pc, [sp], #4)
   12280:	ldrb	r3, [r4]
   12284:	mov	r1, r5
   12288:	cmp	r3, #119	; 0x77
   1228c:	beq	122c4 <error@@Base+0x1a8>
   12290:	ldr	r0, [pc, #88]	; 122f0 <error@@Base+0x1d4>
   12294:	add	r0, pc, r0
   12298:	bl	121e0 <error@@Base+0xc4>
   1229c:	ldrb	r3, [r1]
   122a0:	cmp	r3, #114	; 0x72
   122a4:	beq	122d0 <error@@Base+0x1b4>
   122a8:	ldr	r3, [pc, #68]	; 122f4 <error@@Base+0x1d8>
   122ac:	ldrd	r4, [sp]
   122b0:	ldr	r6, [sp, #8]
   122b4:	add	sp, sp, #12
   122b8:	ldr	r3, [ip, r3]
   122bc:	ldr	r0, [r3]
   122c0:	pop	{pc}		; (ldr pc, [sp], #4)
   122c4:	ldr	r0, [pc, #44]	; 122f8 <error@@Base+0x1dc>
   122c8:	add	r0, pc, r0
   122cc:	bl	121e0 <error@@Base+0xc4>
   122d0:	ldr	r3, [pc, #36]	; 122fc <error@@Base+0x1e0>
   122d4:	ldrd	r4, [sp]
   122d8:	ldr	r6, [sp, #8]
   122dc:	add	sp, sp, #12
   122e0:	ldr	r3, [ip, r3]
   122e4:	ldr	r0, [r3]
   122e8:	pop	{pc}		; (ldr pc, [sp], #4)
   122ec:	andeq	r1, r1, r0, lsr #27
   122f0:	andeq	r1, r0, ip, asr #13
   122f4:	andeq	r0, r0, ip, lsr #1
   122f8:	andeq	r1, r0, r0, lsl #13
   122fc:	andeq	r0, r0, r8, lsr #1
   12300:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12304:	strd	r6, [sp, #8]
   12308:	mov	r6, r0
   1230c:	strd	r8, [sp, #16]
   12310:	mov	r9, r1
   12314:	mov	r8, r3
   12318:	strd	sl, [sp, #24]
   1231c:	str	lr, [sp, #32]
   12320:	sub	sp, sp, #20
   12324:	ldr	r5, [pc, #600]	; 12584 <error@@Base+0x468>
   12328:	str	r0, [sp]
   1232c:	ldr	r0, [r1]
   12330:	str	r2, [sp, #12]
   12334:	bl	1202c <getc@plt+0x1618>
   12338:	ldr	r3, [pc, #584]	; 12588 <error@@Base+0x46c>
   1233c:	add	r5, pc, r5
   12340:	ldr	r4, [pc, #580]	; 1258c <error@@Base+0x470>
   12344:	ldr	r3, [r5, r3]
   12348:	add	r4, pc, r4
   1234c:	mov	r1, r4
   12350:	str	r0, [r3]
   12354:	mov	r0, #2
   12358:	bl	1096c <__sysv_signal@plt>
   1235c:	mov	r1, r4
   12360:	mov	r0, #15
   12364:	bl	1096c <__sysv_signal@plt>
   12368:	ldr	sl, [r6]
   1236c:	cmp	sl, #1
   12370:	beq	12548 <error@@Base+0x42c>
   12374:	movle	r6, #0
   12378:	ble	124d0 <error@@Base+0x3b4>
   1237c:	ldr	r3, [pc, #524]	; 12590 <error@@Base+0x474>
   12380:	mov	r7, #1
   12384:	mov	r6, #0
   12388:	mov	r4, r7
   1238c:	add	r3, pc, r3
   12390:	str	r3, [sp, #8]
   12394:	mov	r3, sl
   12398:	mov	sl, r9
   1239c:	b	123c0 <error@@Base+0x2a4>
   123a0:	add	r4, r4, #1
   123a4:	add	r2, r6, #1
   123a8:	str	r5, [sl, r6, lsl #2]
   123ac:	sxth	r4, r4
   123b0:	sxth	r6, r2
   123b4:	cmp	r4, r3
   123b8:	mov	r7, r4
   123bc:	bge	124d0 <error@@Base+0x3b4>
   123c0:	ldr	r5, [sl, r4, lsl #2]
   123c4:	lsl	r9, r4, #2
   123c8:	ldrb	r2, [r5]
   123cc:	cmp	r2, #45	; 0x2d
   123d0:	bne	123a0 <error@@Base+0x284>
   123d4:	ldrb	fp, [r5, #1]
   123d8:	cmp	fp, #0
   123dc:	beq	123a0 <error@@Base+0x284>
   123e0:	mov	r0, r5
   123e4:	str	r3, [sp, #4]
   123e8:	bl	109a8 <strlen@plt>
   123ec:	mov	r2, r0
   123f0:	mov	r1, r5
   123f4:	ldr	r0, [sp, #8]
   123f8:	bl	109fc <strncmp@plt>
   123fc:	cmp	r0, #0
   12400:	beq	1255c <error@@Base+0x440>
   12404:	ldr	r3, [sp, #4]
   12408:	add	r7, r7, #1
   1240c:	cmp	r7, r3
   12410:	addlt	r9, sl, r9
   12414:	movge	r0, #0
   12418:	ldrlt	r0, [r9, #4]
   1241c:	cmp	r8, #0
   12420:	beq	12464 <error@@Base+0x348>
   12424:	ldrb	r2, [r8]
   12428:	cmp	r2, #0
   1242c:	beq	12464 <error@@Base+0x348>
   12430:	cmp	fp, r2
   12434:	beq	12474 <error@@Base+0x358>
   12438:	mov	r2, #0
   1243c:	b	12448 <error@@Base+0x32c>
   12440:	cmp	fp, ip
   12444:	beq	12478 <error@@Base+0x35c>
   12448:	add	r2, r2, #1
   1244c:	sxth	r2, r2
   12450:	add	r1, r2, r2, lsl #1
   12454:	ldrb	ip, [r8, r1, lsl #2]
   12458:	add	r1, r8, r1, lsl #2
   1245c:	cmp	ip, #0
   12460:	bne	12440 <error@@Base+0x324>
   12464:	ldr	r0, [pc, #296]	; 12594 <error@@Base+0x478>
   12468:	mov	r1, r5
   1246c:	add	r0, pc, r0
   12470:	bl	121e0 <error@@Base+0xc4>
   12474:	mov	r1, r8
   12478:	ldr	r2, [r1, #4]
   1247c:	cmp	r2, #0
   12480:	beq	12508 <error@@Base+0x3ec>
   12484:	ldrb	ip, [r5, #2]
   12488:	cmp	ip, #0
   1248c:	bne	124f4 <error@@Base+0x3d8>
   12490:	cmp	r0, #0
   12494:	beq	12564 <error@@Base+0x448>
   12498:	ldr	r1, [r2]
   1249c:	cmp	r1, #0
   124a0:	bne	12574 <error@@Base+0x458>
   124a4:	str	r0, [r2]
   124a8:	uxth	r2, r4
   124ac:	ldrb	r1, [r5, #2]
   124b0:	add	r4, r2, #1
   124b4:	sxth	r4, r4
   124b8:	cmp	r1, #0
   124bc:	addeq	r4, r2, #2
   124c0:	sxtheq	r4, r4
   124c4:	cmp	r4, r3
   124c8:	mov	r7, r4
   124cc:	blt	123c0 <error@@Base+0x2a4>
   124d0:	ldr	r3, [sp]
   124d4:	str	r6, [r3]
   124d8:	add	sp, sp, #20
   124dc:	ldrd	r4, [sp]
   124e0:	ldrd	r6, [sp, #8]
   124e4:	ldrd	r8, [sp, #16]
   124e8:	ldrd	sl, [sp, #24]
   124ec:	add	sp, sp, #32
   124f0:	pop	{pc}		; (ldr pc, [sp], #4)
   124f4:	ldr	r1, [r2]
   124f8:	cmp	r1, #0
   124fc:	bne	12574 <error@@Base+0x458>
   12500:	add	r0, r5, #2
   12504:	b	124a4 <error@@Base+0x388>
   12508:	ldr	r3, [r1, #8]
   1250c:	cmp	r3, #0
   12510:	beq	12464 <error@@Base+0x348>
   12514:	ldrb	r2, [r5, #2]
   12518:	cmp	r2, #0
   1251c:	bne	12464 <error@@Base+0x348>
   12520:	ldrb	r2, [r3]
   12524:	cmp	r2, #0
   12528:	bne	12574 <error@@Base+0x458>
   1252c:	mov	r2, #1
   12530:	add	r4, r4, #1
   12534:	sxth	r4, r4
   12538:	strb	r2, [r3]
   1253c:	ldr	r3, [sp]
   12540:	ldr	r3, [r3]
   12544:	b	123b4 <error@@Base+0x298>
   12548:	ldr	r3, [pc, #72]	; 12598 <error@@Base+0x47c>
   1254c:	ldr	r3, [r5, r3]
   12550:	ldrb	r6, [r3]
   12554:	cmp	r6, #0
   12558:	beq	124d0 <error@@Base+0x3b4>
   1255c:	ldr	r0, [sp, #12]
   12560:	bl	120b0 <getc@plt+0x169c>
   12564:	ldr	r3, [r1, #8]
   12568:	cmp	r3, #0
   1256c:	bne	12520 <error@@Base+0x404>
   12570:	b	12464 <error@@Base+0x348>
   12574:	ldr	r0, [pc, #32]	; 1259c <error@@Base+0x480>
   12578:	mov	r1, r5
   1257c:	add	r0, pc, r0
   12580:	bl	121e0 <error@@Base+0xc4>
   12584:			; <UNDEFINED> instruction: 0x00011cbc
   12588:	muleq	r0, ip, r0
   1258c:			; <UNDEFINED> instruction: 0xfffffe58
   12590:	andeq	r1, r0, r8, ror #11
   12594:	andeq	r1, r0, r0, lsl r5
   12598:	andeq	r0, r0, r8, lsl #1
   1259c:	andeq	r1, r0, r0, lsl r4
   125a0:	ldr	r2, [pc, #60]	; 125e4 <error@@Base+0x4c8>
   125a4:	mov	r3, r0
   125a8:	push	{lr}		; (str lr, [sp, #-4]!)
   125ac:	sub	sp, sp, #12
   125b0:	ldr	ip, [pc, #48]	; 125e8 <error@@Base+0x4cc>
   125b4:	ldr	r0, [pc, #48]	; 125ec <error@@Base+0x4d0>
   125b8:	add	r2, pc, r2
   125bc:	ldr	ip, [r2, ip]
   125c0:	ldr	r0, [r2, r0]
   125c4:	str	r1, [sp]
   125c8:	ldr	r1, [pc, #32]	; 125f0 <error@@Base+0x4d4>
   125cc:	ldr	r2, [ip]
   125d0:	ldr	r0, [r0]
   125d4:	add	r1, pc, r1
   125d8:	bl	109b4 <fprintf@plt>
   125dc:	add	sp, sp, #12
   125e0:	pop	{pc}		; (ldr pc, [sp], #4)
   125e4:	andeq	r1, r1, r0, asr #20
   125e8:	muleq	r0, ip, r0
   125ec:	muleq	r0, r4, r0
   125f0:	andeq	r1, r0, r4, ror #6
   125f4:	strd	r4, [sp, #-16]!
   125f8:	uxtb	r5, r1
   125fc:	mov	r1, #16
   12600:	str	r6, [sp, #8]
   12604:	mov	r6, r0
   12608:	mov	r0, #1
   1260c:	mov	r4, r2
   12610:	str	lr, [sp, #12]
   12614:	bl	12178 <error@@Base+0x5c>
   12618:	mov	r3, r0
   1261c:	mov	r0, r6
   12620:	mov	r1, r3
   12624:	strb	r5, [r3, #8]
   12628:	str	r4, [r3, #12]
   1262c:	ldrd	r4, [sp]
   12630:	ldr	r6, [sp, #8]
   12634:	ldr	lr, [sp, #12]
   12638:	add	sp, sp, #16
   1263c:	b	12d88 <error@@Base+0xc6c>
   12640:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12644:	clz	r3, r1
   12648:	strd	r6, [sp, #8]
   1264c:	lsr	r3, r3, #5
   12650:	strd	r8, [sp, #16]
   12654:	strd	sl, [sp, #24]
   12658:	mov	sl, r2
   1265c:	str	lr, [sp, #32]
   12660:	sub	sp, sp, #124	; 0x7c
   12664:	ldrb	r2, [r2]
   12668:	ldr	r4, [pc, #888]	; 129e8 <error@@Base+0x8cc>
   1266c:	cmp	r2, #0
   12670:	moveq	r3, #0
   12674:	cmp	r3, #0
   12678:	add	r4, pc, r4
   1267c:	bne	129d4 <error@@Base+0x8b8>
   12680:	mov	r9, r0
   12684:	mov	r0, r1
   12688:	ldr	r1, [pc, #860]	; 129ec <error@@Base+0x8d0>
   1268c:	ldr	r3, [r9, #4]
   12690:	add	r1, pc, r1
   12694:	str	r3, [sp, #8]
   12698:	bl	12240 <error@@Base+0x124>
   1269c:	ldrb	r3, [sl]
   126a0:	mov	r7, r0
   126a4:	cmp	r3, #0
   126a8:	bne	1291c <error@@Base+0x800>
   126ac:	ldr	r8, [sl, #4]
   126b0:	mov	r0, r7
   126b4:	ldrb	r3, [sl, #1]
   126b8:	cmp	r8, #0
   126bc:	moveq	r8, #94	; 0x5e
   126c0:	mov	r5, r3
   126c4:	bl	10a14 <getc@plt>
   126c8:	cmn	r0, #1
   126cc:	beq	12794 <error@@Base+0x678>
   126d0:	ldr	r3, [pc, #792]	; 129f0 <error@@Base+0x8d4>
   126d4:	ldr	r3, [r4, r3]
   126d8:	ldrsb	r4, [r3, r0]
   126dc:	str	r3, [sp]
   126e0:	cmp	r4, #0
   126e4:	ble	129b4 <error@@Base+0x898>
   126e8:	add	r3, sp, #20
   126ec:	mov	r6, #0
   126f0:	add	fp, sp, #17
   126f4:	str	r3, [sp, #4]
   126f8:	str	sl, [sp, #12]
   126fc:	mov	sl, r5
   12700:	b	12714 <error@@Base+0x5f8>
   12704:	ldr	r3, [sp]
   12708:	ldrsb	r4, [r3, r0]
   1270c:	cmp	r4, #0
   12710:	ble	129b4 <error@@Base+0x898>
   12714:	cmp	r4, #1
   12718:	strb	r0, [sp, #16]
   1271c:	beq	12740 <error@@Base+0x624>
   12720:	sub	r5, r4, #1
   12724:	mov	r3, r7
   12728:	mov	r2, r5
   1272c:	mov	r1, #1
   12730:	mov	r0, fp
   12734:	bl	10948 <fread@plt>
   12738:	cmp	r5, r0
   1273c:	bne	129c8 <error@@Base+0x8ac>
   12740:	mov	r1, #4
   12744:	add	r0, sp, #16
   12748:	ldr	r2, [sp, #4]
   1274c:	bl	10954 <utf8proc_iterate@plt>
   12750:	cmp	r0, r4
   12754:	bne	129c0 <error@@Base+0x8a4>
   12758:	cmp	sl, #0
   1275c:	ldr	r2, [sp, #20]
   12760:	beq	12770 <error@@Base+0x654>
   12764:	cmp	r2, r8
   12768:	moveq	r6, #1
   1276c:	beq	12780 <error@@Base+0x664>
   12770:	mov	r1, r6
   12774:	mov	r0, r9
   12778:	mov	r6, #0
   1277c:	bl	125f4 <error@@Base+0x4d8>
   12780:	mov	r0, r7
   12784:	bl	10a14 <getc@plt>
   12788:	cmn	r0, #1
   1278c:	bne	12704 <error@@Base+0x5e8>
   12790:	ldr	sl, [sp, #12]
   12794:	mov	r0, r7
   12798:	bl	11f7c <getc@plt+0x1568>
   1279c:	ldrb	r3, [sl, #9]
   127a0:	cmp	r3, #0
   127a4:	beq	1281c <error@@Base+0x700>
   127a8:	ldr	r3, [sp, #8]
   127ac:	cmp	r3, #0
   127b0:	ldrne	r6, [r3, #4]
   127b4:	ldreq	r6, [r9]
   127b8:	cmp	r6, #0
   127bc:	beq	1281c <error@@Base+0x700>
   127c0:	mov	r5, r6
   127c4:	mov	r7, #32
   127c8:	b	127d8 <error@@Base+0x6bc>
   127cc:	ldr	r5, [r5, #4]
   127d0:	cmp	r5, #0
   127d4:	beq	12894 <error@@Base+0x778>
   127d8:	ldr	r4, [r5, #12]
   127dc:	mov	r0, r4
   127e0:	bl	108dc <utf8proc_get_property@plt>
   127e4:	cmp	r4, #13
   127e8:	bhi	12910 <error@@Base+0x7f4>
   127ec:	cmp	r4, #11
   127f0:	bcs	12814 <error@@Base+0x6f8>
   127f4:	cmp	r4, #9
   127f8:	beq	12814 <error@@Base+0x6f8>
   127fc:	cmp	r4, #10
   12800:	beq	127cc <error@@Base+0x6b0>
   12804:	ldrsh	r3, [r0]
   12808:	sub	r3, r3, #23
   1280c:	cmp	r3, #2
   12810:	bhi	127cc <error@@Base+0x6b0>
   12814:	str	r7, [r5, #12]
   12818:	b	127cc <error@@Base+0x6b0>
   1281c:	ldrb	r3, [sl, #10]
   12820:	cmp	r3, #0
   12824:	beq	12854 <error@@Base+0x738>
   12828:	ldr	r3, [sp, #8]
   1282c:	cmp	r3, #0
   12830:	ldrne	r4, [r3, #4]
   12834:	ldreq	r4, [r9]
   12838:	b	1284c <error@@Base+0x730>
   1283c:	ldr	r0, [r4, #12]
   12840:	bl	10924 <utf8proc_tolower@plt>
   12844:	str	r0, [r4, #12]
   12848:	ldr	r4, [r4, #4]
   1284c:	cmp	r4, #0
   12850:	bne	1283c <error@@Base+0x720>
   12854:	add	sp, sp, #124	; 0x7c
   12858:	ldrd	r4, [sp]
   1285c:	ldrd	r6, [sp, #8]
   12860:	ldrd	r8, [sp, #16]
   12864:	ldrd	sl, [sp, #24]
   12868:	add	sp, sp, #32
   1286c:	pop	{pc}		; (ldr pc, [sp], #4)
   12870:	cmp	r3, #10
   12874:	movne	r2, #0
   12878:	andeq	r2, r2, #1
   1287c:	cmp	r2, #0
   12880:	bne	128f8 <error@@Base+0x7dc>
   12884:	subs	r5, r3, #10
   12888:	movne	r5, #1
   1288c:	subs	r6, r4, #0
   12890:	beq	1281c <error@@Base+0x700>
   12894:	eor	r2, r5, #1
   12898:	ldr	r4, [r6, #4]
   1289c:	ldr	r3, [r6, #12]
   128a0:	cmp	r3, #32
   128a4:	bne	12870 <error@@Base+0x754>
   128a8:	cmp	r4, #0
   128ac:	moveq	r2, #1
   128b0:	cmp	r2, #0
   128b4:	bne	128c8 <error@@Base+0x7ac>
   128b8:	ldr	r2, [r4, #12]
   128bc:	cmp	r2, #10
   128c0:	cmpne	r2, #32
   128c4:	bne	12884 <error@@Base+0x768>
   128c8:	cmp	r4, #0
   128cc:	movne	r3, r5
   128d0:	moveq	r3, #0
   128d4:	cmp	r3, #0
   128d8:	beq	128f8 <error@@Base+0x7dc>
   128dc:	ldr	r3, [r4, #12]
   128e0:	cmp	r3, #32
   128e4:	bne	128f8 <error@@Base+0x7dc>
   128e8:	ldrb	r3, [r4, #8]
   128ec:	ldrb	r2, [r6, #8]
   128f0:	orr	r3, r3, r2
   128f4:	strb	r3, [r4, #8]
   128f8:	mov	r0, r9
   128fc:	mov	r1, r6
   12900:	bl	12e90 <error@@Base+0xd74>
   12904:	mov	r0, r6
   12908:	bl	108d0 <free@plt>
   1290c:	b	1288c <error@@Base+0x770>
   12910:	cmp	r4, #160	; 0xa0
   12914:	bne	12804 <error@@Base+0x6e8>
   12918:	b	12814 <error@@Base+0x6f8>
   1291c:	add	r5, sp, #20
   12920:	mov	r2, r0
   12924:	mov	r1, #99	; 0x63
   12928:	mov	r0, r5
   1292c:	bl	108e8 <fgets@plt>
   12930:	cmp	r0, #0
   12934:	beq	12954 <error@@Base+0x838>
   12938:	ldr	r1, [pc, #180]	; 129f4 <error@@Base+0x8d8>
   1293c:	mov	r2, #51	; 0x33
   12940:	mov	r0, r5
   12944:	add	r1, pc, r1
   12948:	bl	109fc <strncmp@plt>
   1294c:	subs	r6, r0, #0
   12950:	beq	12968 <error@@Base+0x84c>
   12954:	mov	r0, r7
   12958:	bl	1090c <rewind@plt>
   1295c:	mov	r3, #0
   12960:	strb	r3, [sl, #11]
   12964:	b	126ac <error@@Base+0x590>
   12968:	ldr	r8, [pc, #136]	; 129f8 <error@@Base+0x8dc>
   1296c:	add	r8, pc, r8
   12970:	mov	r2, r7
   12974:	mov	r1, #99	; 0x63
   12978:	mov	r0, r5
   1297c:	bl	108e8 <fgets@plt>
   12980:	cmp	r0, #0
   12984:	beq	129ac <error@@Base+0x890>
   12988:	mov	r1, r8
   1298c:	mov	r0, r5
   12990:	bl	108b8 <strcmp@plt>
   12994:	cmp	r0, #0
   12998:	bne	12970 <error@@Base+0x854>
   1299c:	add	r6, r6, #1
   129a0:	sxth	r6, r6
   129a4:	cmp	r6, #2
   129a8:	bne	12970 <error@@Base+0x854>
   129ac:	mov	r3, #1
   129b0:	b	12960 <error@@Base+0x844>
   129b4:	ldr	r0, [pc, #64]	; 129fc <error@@Base+0x8e0>
   129b8:	add	r0, pc, r0
   129bc:	bl	1211c <error@@Base>
   129c0:	bl	109e4 <utf8proc_errmsg@plt>
   129c4:	bl	1211c <error@@Base>
   129c8:	ldr	r0, [pc, #48]	; 12a00 <error@@Base+0x8e4>
   129cc:	add	r0, pc, r0
   129d0:	bl	1211c <error@@Base>
   129d4:	ldr	r1, [pc, #40]	; 12a04 <error@@Base+0x8e8>
   129d8:	ldr	r0, [pc, #40]	; 12a08 <error@@Base+0x8ec>
   129dc:	add	r1, pc, r1
   129e0:	add	r0, pc, r0
   129e4:	bl	121e0 <error@@Base+0xc4>
   129e8:	andeq	r1, r1, r0, lsl #19
   129ec:	andeq	r0, r0, r8, lsl sl
   129f0:	andeq	r0, r0, r4, lsr #1
   129f4:	andeq	r1, r0, r8, ror r0
   129f8:	andeq	r1, r0, r8, lsl #1
   129fc:	andeq	r1, r0, r4, ror r0
   12a00:	andeq	r1, r0, r8, ror r0
   12a04:	andeq	r0, r0, r4, asr #31
   12a08:	andeq	r0, r0, ip, asr #31
   12a0c:	str	r4, [sp, #-8]!
   12a10:	str	lr, [sp, #4]
   12a14:	bl	108f4 <utf8proc_encode_char@plt>
   12a18:	cmp	r0, #0
   12a1c:	ble	12a30 <error@@Base+0x914>
   12a20:	ldr	r4, [sp]
   12a24:	add	sp, sp, #4
   12a28:	sxtb	r0, r0
   12a2c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a30:	ldr	r0, [pc, #4]	; 12a3c <error@@Base+0x920>
   12a34:	add	r0, pc, r0
   12a38:	bl	1211c <error@@Base>
   12a3c:	andeq	r1, r0, r8, lsr #32
   12a40:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12a44:	uxtb	r4, r0
   12a48:	mov	r5, r1
   12a4c:	cmp	r4, #0
   12a50:	strd	r6, [sp, #8]
   12a54:	mov	r7, r2
   12a58:	moveq	r6, r2
   12a5c:	str	r8, [sp, #16]
   12a60:	uxtb	r8, r3
   12a64:	str	lr, [sp, #20]
   12a68:	bne	12b68 <error@@Base+0xa4c>
   12a6c:	cmp	r5, #10
   12a70:	bne	12aac <error@@Base+0x990>
   12a74:	cmp	r8, #0
   12a78:	bne	12aa0 <error@@Base+0x984>
   12a7c:	ldr	r1, [pc, #272]	; 12b94 <error@@Base+0xa78>
   12a80:	add	r1, pc, r1
   12a84:	mov	r0, r6
   12a88:	ldrd	r4, [sp]
   12a8c:	ldrd	r6, [sp, #8]
   12a90:	ldr	r8, [sp, #16]
   12a94:	ldr	lr, [sp, #20]
   12a98:	add	sp, sp, #24
   12a9c:	b	109d8 <sprintf@plt>
   12aa0:	ldr	r1, [pc, #240]	; 12b98 <error@@Base+0xa7c>
   12aa4:	add	r1, pc, r1
   12aa8:	b	12a84 <error@@Base+0x968>
   12aac:	mov	r0, r5
   12ab0:	bl	108dc <utf8proc_get_property@plt>
   12ab4:	cmp	r5, #32
   12ab8:	beq	12ad8 <error@@Base+0x9bc>
   12abc:	ldrsh	r3, [r0]
   12ac0:	cmp	r3, #0
   12ac4:	ble	12b38 <error@@Base+0xa1c>
   12ac8:	cmp	r3, #22
   12acc:	ble	12ad8 <error@@Base+0x9bc>
   12ad0:	cmp	r3, #29
   12ad4:	bne	12b38 <error@@Base+0xa1c>
   12ad8:	mov	r0, r5
   12adc:	uxth	r4, r4
   12ae0:	bl	1099c <utf8proc_category@plt>
   12ae4:	sub	r0, r0, #6
   12ae8:	cmp	r0, #2
   12aec:	bhi	12b08 <error@@Base+0x9ec>
   12af0:	mov	r1, r6
   12af4:	movw	r0, #9676	; 0x25cc
   12af8:	bl	12a0c <error@@Base+0x8f0>
   12afc:	add	r4, r4, r0
   12b00:	uxth	r4, r4
   12b04:	sxtah	r6, r7, r4
   12b08:	mov	r1, r6
   12b0c:	mov	r0, r5
   12b10:	bl	12a0c <error@@Base+0x8f0>
   12b14:	add	r4, r4, r0
   12b18:	mov	r3, #0
   12b1c:	sxth	r4, r4
   12b20:	strb	r3, [r7, r4]
   12b24:	ldrd	r4, [sp]
   12b28:	ldrd	r6, [sp, #8]
   12b2c:	ldr	r8, [sp, #16]
   12b30:	add	sp, sp, #20
   12b34:	pop	{pc}		; (ldr pc, [sp], #4)
   12b38:	cmp	r5, #255	; 0xff
   12b3c:	bls	12b80 <error@@Base+0xa64>
   12b40:	ldr	r1, [pc, #84]	; 12b9c <error@@Base+0xa80>
   12b44:	mov	r2, r5
   12b48:	mov	r0, r6
   12b4c:	add	r1, pc, r1
   12b50:	ldrd	r4, [sp]
   12b54:	ldrd	r6, [sp, #8]
   12b58:	ldr	r8, [sp, #16]
   12b5c:	ldr	lr, [sp, #20]
   12b60:	add	sp, sp, #24
   12b64:	b	109d8 <sprintf@plt>
   12b68:	mov	r1, r2
   12b6c:	mov	r0, #94	; 0x5e
   12b70:	bl	12a0c <error@@Base+0x8f0>
   12b74:	sxth	r4, r0
   12b78:	add	r6, r7, r0
   12b7c:	b	12a6c <error@@Base+0x950>
   12b80:	ldr	r1, [pc, #24]	; 12ba0 <error@@Base+0xa84>
   12b84:	mov	r2, r5
   12b88:	mov	r0, r6
   12b8c:	add	r1, pc, r1
   12b90:	b	12b50 <error@@Base+0xa34>
   12b94:	andeq	r0, r0, r0, lsl #15
   12b98:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12b9c:	andeq	r0, r0, r8, lsr pc
   12ba0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12ba4:	mov	r3, r1
   12ba8:	ldr	r1, [pc, #212]	; 12c84 <error@@Base+0xb68>
   12bac:	strd	r4, [sp, #-20]!	; 0xffffffec
   12bb0:	mov	r5, r2
   12bb4:	strd	r6, [sp, #8]
   12bb8:	mov	r7, r0
   12bbc:	mov	r0, r3
   12bc0:	str	lr, [sp, #16]
   12bc4:	sub	sp, sp, #20
   12bc8:	add	r1, pc, r1
   12bcc:	bl	12240 <error@@Base+0x124>
   12bd0:	cmp	r5, #0
   12bd4:	mov	r6, r0
   12bd8:	beq	12c2c <error@@Base+0xb10>
   12bdc:	mov	r3, r0
   12be0:	ldr	r4, [pc, #160]	; 12c88 <error@@Base+0xb6c>
   12be4:	mov	r2, #55	; 0x37
   12be8:	mov	r1, #1
   12bec:	ldr	r0, [pc, #152]	; 12c8c <error@@Base+0xb70>
   12bf0:	add	r4, pc, r4
   12bf4:	add	r0, pc, r0
   12bf8:	bl	1093c <fwrite@plt>
   12bfc:	mov	r3, r6
   12c00:	mov	r2, #55	; 0x37
   12c04:	mov	r1, #1
   12c08:	mov	r0, r4
   12c0c:	bl	1093c <fwrite@plt>
   12c10:	mov	r0, r6
   12c14:	blx	r5
   12c18:	mov	r3, r6
   12c1c:	mov	r0, r4
   12c20:	mov	r2, #55	; 0x37
   12c24:	mov	r1, #1
   12c28:	bl	1093c <fwrite@plt>
   12c2c:	ldr	r4, [r7]
   12c30:	cmp	r4, #0
   12c34:	beq	12c68 <error@@Base+0xb4c>
   12c38:	add	r5, sp, #4
   12c3c:	ldrb	r0, [r4, #8]
   12c40:	mov	r3, #0
   12c44:	mov	r2, r5
   12c48:	ldr	r1, [r4, #12]
   12c4c:	bl	12a40 <error@@Base+0x924>
   12c50:	mov	r1, r6
   12c54:	mov	r0, r5
   12c58:	bl	109f0 <fputs@plt>
   12c5c:	ldr	r4, [r4, #4]
   12c60:	cmp	r4, #0
   12c64:	bne	12c3c <error@@Base+0xb20>
   12c68:	mov	r0, r6
   12c6c:	bl	11f7c <getc@plt+0x1568>
   12c70:	add	sp, sp, #20
   12c74:	ldrd	r4, [sp]
   12c78:	ldrd	r6, [sp, #8]
   12c7c:	add	sp, sp, #16
   12c80:	pop	{pc}		; (ldr pc, [sp], #4)
   12c84:	andeq	r0, r0, r4, asr r5
   12c88:	andeq	r0, r0, r4, lsl #28
   12c8c:	andeq	r0, r0, r8, asr #27
   12c90:	strd	r4, [sp, #-20]!	; 0xffffffec
   12c94:	mov	r2, #0
   12c98:	strd	r6, [sp, #8]
   12c9c:	str	lr, [sp, #16]
   12ca0:	sub	sp, sp, #12
   12ca4:	ldrb	r3, [r1]
   12ca8:	str	r2, [sp, #4]
   12cac:	cmp	r3, r2
   12cb0:	beq	12d00 <error@@Base+0xbe4>
   12cb4:	mov	r4, r1
   12cb8:	mov	r5, r0
   12cbc:	add	r6, sp, #4
   12cc0:	b	12cd8 <error@@Base+0xbbc>
   12cc4:	ldr	r2, [sp, #4]
   12cc8:	bl	125f4 <error@@Base+0x4d8>
   12ccc:	ldrb	r3, [r4, r7]!
   12cd0:	cmp	r3, #0
   12cd4:	beq	12d00 <error@@Base+0xbe4>
   12cd8:	mvn	r1, #0
   12cdc:	mov	r2, r6
   12ce0:	mov	r0, r4
   12ce4:	bl	10954 <utf8proc_iterate@plt>
   12ce8:	subs	r7, r0, #0
   12cec:	mov	r1, #0
   12cf0:	mov	r0, r5
   12cf4:	bgt	12cc4 <error@@Base+0xba8>
   12cf8:	mov	r0, #0
   12cfc:	b	12d04 <error@@Base+0xbe8>
   12d00:	mov	r0, #1
   12d04:	add	sp, sp, #12
   12d08:	ldrd	r4, [sp]
   12d0c:	ldrd	r6, [sp, #8]
   12d10:	add	sp, sp, #16
   12d14:	pop	{pc}		; (ldr pc, [sp], #4)
   12d18:	mov	r3, #0
   12d1c:	str	r3, [r0]
   12d20:	str	r3, [r0, #4]
   12d24:	str	r3, [r0, #8]
   12d28:	str	r3, [r0, #12]
   12d2c:	bx	lr
   12d30:	ldr	r3, [r0]
   12d34:	mov	r2, #0
   12d38:	str	r4, [sp, #-8]!
   12d3c:	mov	r4, r0
   12d40:	str	lr, [sp, #4]
   12d44:	cmp	r3, r2
   12d48:	strd	r2, [r1]
   12d4c:	str	r1, [r0]
   12d50:	streq	r1, [r0, #4]
   12d54:	ldr	r0, [r0, #8]
   12d58:	strne	r1, [r3]
   12d5c:	cmp	r0, #0
   12d60:	beq	12d70 <error@@Base+0xc54>
   12d64:	bl	108d0 <free@plt>
   12d68:	mov	r3, #0
   12d6c:	str	r3, [r4, #8]
   12d70:	ldr	r3, [r4, #12]
   12d74:	add	r3, r3, #1
   12d78:	str	r3, [r4, #12]
   12d7c:	ldr	r4, [sp]
   12d80:	add	sp, sp, #4
   12d84:	pop	{pc}		; (ldr pc, [sp], #4)
   12d88:	ldr	r3, [r0, #4]
   12d8c:	mov	r2, #0
   12d90:	str	r4, [sp, #-8]!
   12d94:	mov	r4, r0
   12d98:	str	lr, [sp, #4]
   12d9c:	cmp	r3, r2
   12da0:	str	r3, [r1]
   12da4:	str	r2, [r1, #4]
   12da8:	streq	r1, [r0]
   12dac:	ldr	r0, [r0, #8]
   12db0:	strne	r1, [r3, #4]
   12db4:	str	r1, [r4, #4]
   12db8:	cmp	r0, #0
   12dbc:	beq	12dcc <error@@Base+0xcb0>
   12dc0:	bl	108d0 <free@plt>
   12dc4:	mov	r3, #0
   12dc8:	str	r3, [r4, #8]
   12dcc:	ldr	r3, [r4, #12]
   12dd0:	add	r3, r3, #1
   12dd4:	str	r3, [r4, #12]
   12dd8:	ldr	r4, [sp]
   12ddc:	add	sp, sp, #4
   12de0:	pop	{pc}		; (ldr pc, [sp], #4)
   12de4:	ldr	r3, [r2]
   12de8:	str	r4, [sp, #-8]!
   12dec:	mov	r4, r0
   12df0:	str	lr, [sp, #4]
   12df4:	cmp	r3, #0
   12df8:	str	r3, [r1]
   12dfc:	str	r2, [r1, #4]
   12e00:	streq	r1, [r0]
   12e04:	ldr	r0, [r0, #8]
   12e08:	strne	r1, [r3, #4]
   12e0c:	str	r1, [r2]
   12e10:	cmp	r0, #0
   12e14:	beq	12e24 <error@@Base+0xd08>
   12e18:	bl	108d0 <free@plt>
   12e1c:	mov	r3, #0
   12e20:	str	r3, [r4, #8]
   12e24:	ldr	r3, [r4, #12]
   12e28:	add	r3, r3, #1
   12e2c:	str	r3, [r4, #12]
   12e30:	ldr	r4, [sp]
   12e34:	add	sp, sp, #4
   12e38:	pop	{pc}		; (ldr pc, [sp], #4)
   12e3c:	ldr	r3, [r1, #4]
   12e40:	str	r4, [sp, #-8]!
   12e44:	mov	r4, r0
   12e48:	str	lr, [sp, #4]
   12e4c:	cmp	r3, #0
   12e50:	stm	r2, {r1, r3}
   12e54:	str	r2, [r1, #4]
   12e58:	streq	r2, [r0, #4]
   12e5c:	ldr	r0, [r0, #8]
   12e60:	strne	r2, [r3]
   12e64:	cmp	r0, #0
   12e68:	beq	12e78 <error@@Base+0xd5c>
   12e6c:	bl	108d0 <free@plt>
   12e70:	mov	r3, #0
   12e74:	str	r3, [r4, #8]
   12e78:	ldr	r3, [r4, #12]
   12e7c:	add	r3, r3, #1
   12e80:	str	r3, [r4, #12]
   12e84:	ldr	r4, [sp]
   12e88:	add	sp, sp, #4
   12e8c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e90:	ldrd	r2, [r1]
   12e94:	strd	r4, [sp, #-16]!
   12e98:	mov	r4, r0
   12e9c:	mov	r5, #0
   12ea0:	str	r6, [sp, #8]
   12ea4:	str	lr, [sp, #12]
   12ea8:	cmp	r2, #0
   12eac:	strne	r3, [r2, #4]
   12eb0:	ldrne	r3, [r1, #4]
   12eb4:	streq	r3, [r0]
   12eb8:	cmp	r3, #0
   12ebc:	streq	r2, [r0, #4]
   12ec0:	ldr	r0, [r0, #8]
   12ec4:	strne	r2, [r3]
   12ec8:	str	r5, [r1]
   12ecc:	str	r5, [r1, #4]
   12ed0:	cmp	r0, r5
   12ed4:	beq	12ee0 <error@@Base+0xdc4>
   12ed8:	bl	108d0 <free@plt>
   12edc:	str	r5, [r4, #8]
   12ee0:	ldr	r3, [r4, #12]
   12ee4:	ldr	r6, [sp, #8]
   12ee8:	sub	r3, r3, #1
   12eec:	str	r3, [r4, #12]
   12ef0:	ldrd	r4, [sp]
   12ef4:	add	sp, sp, #12
   12ef8:	pop	{pc}		; (ldr pc, [sp], #4)
   12efc:	ldr	r3, [r0, #8]
   12f00:	cmp	r3, #0
   12f04:	bxne	lr
   12f08:	ldr	r3, [r0, #12]
   12f0c:	cmp	r3, #0
   12f10:	bxeq	lr
   12f14:	mov	r1, #4
   12f18:	str	r4, [sp, #-8]!
   12f1c:	mov	r4, r0
   12f20:	mov	r0, r3
   12f24:	str	lr, [sp, #4]
   12f28:	bl	12178 <error@@Base+0x5c>
   12f2c:	ldr	r3, [r4]
   12f30:	str	r0, [r4, #8]
   12f34:	cmp	r3, #0
   12f38:	beq	12f50 <error@@Base+0xe34>
   12f3c:	sub	r0, r0, #4
   12f40:	str	r3, [r0, #4]!
   12f44:	ldr	r3, [r3, #4]
   12f48:	cmp	r3, #0
   12f4c:	bne	12f40 <error@@Base+0xe24>
   12f50:	ldr	r4, [sp]
   12f54:	add	sp, sp, #4
   12f58:	pop	{pc}		; (ldr pc, [sp], #4)
   12f5c:	strd	r4, [sp, #-16]!
   12f60:	ldr	r4, [r0]
   12f64:	str	r6, [sp, #8]
   12f68:	str	lr, [sp, #12]
   12f6c:	cmp	r4, #0
   12f70:	beq	12f9c <error@@Base+0xe80>
   12f74:	mov	r5, r0
   12f78:	mov	r6, r1
   12f7c:	mov	r1, r4
   12f80:	mov	r0, r5
   12f84:	bl	12e90 <error@@Base+0xd74>
   12f88:	mov	r0, r4
   12f8c:	blx	r6
   12f90:	ldr	r4, [r5]
   12f94:	cmp	r4, #0
   12f98:	bne	12f7c <error@@Base+0xe60>
   12f9c:	ldrd	r4, [sp]
   12fa0:	ldr	r6, [sp, #8]
   12fa4:	add	sp, sp, #12
   12fa8:	pop	{pc}		; (ldr pc, [sp], #4)
   12fac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12fb0:	mov	r7, r0
   12fb4:	ldr	r6, [pc, #72]	; 13004 <error@@Base+0xee8>
   12fb8:	ldr	r5, [pc, #72]	; 13008 <error@@Base+0xeec>
   12fbc:	add	r6, pc, r6
   12fc0:	add	r5, pc, r5
   12fc4:	sub	r6, r6, r5
   12fc8:	mov	r8, r1
   12fcc:	mov	r9, r2
   12fd0:	bl	1088c <calloc@plt-0x20>
   12fd4:	asrs	r6, r6, #2
   12fd8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12fdc:	mov	r4, #0
   12fe0:	add	r4, r4, #1
   12fe4:	ldr	r3, [r5], #4
   12fe8:	mov	r2, r9
   12fec:	mov	r1, r8
   12ff0:	mov	r0, r7
   12ff4:	blx	r3
   12ff8:	cmp	r6, r4
   12ffc:	bne	12fe0 <error@@Base+0xec4>
   13000:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13004:	strdeq	r0, [r1], -ip
   13008:	strdeq	r0, [r1], -r4
   1300c:	bx	lr

Disassembly of section .fini:

00013010 <.fini>:
   13010:	push	{r3, lr}
   13014:	pop	{r3, pc}
