
../repos/coreutils/src/fold:     file format elf32-littlearm


Disassembly of section .init:

00010e28 <.init>:
   10e28:	push	{r3, lr}
   10e2c:	bl	11100 <__assert_fail@plt+0x48>
   10e30:	pop	{r3, pc}

Disassembly of section .plt:

00010e34 <calloc@plt-0x14>:
   10e34:	push	{lr}		; (str lr, [sp, #-4]!)
   10e38:	ldr	lr, [pc, #4]	; 10e44 <calloc@plt-0x4>
   10e3c:	add	lr, pc, lr
   10e40:	ldr	pc, [lr, #8]!
   10e44:			; <UNDEFINED> instruction: 0x0001d1bc

00010e48 <calloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #118784	; 0x1d000
   10e50:	ldr	pc, [ip, #444]!	; 0x1bc

00010e54 <fputs_unlocked@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #118784	; 0x1d000
   10e5c:	ldr	pc, [ip, #436]!	; 0x1b4

00010e60 <raise@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #118784	; 0x1d000
   10e68:	ldr	pc, [ip, #428]!	; 0x1ac

00010e6c <strcmp@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #118784	; 0x1d000
   10e74:	ldr	pc, [ip, #420]!	; 0x1a4

00010e78 <posix_fadvise64@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #118784	; 0x1d000
   10e80:	ldr	pc, [ip, #412]!	; 0x19c

00010e84 <printf@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #118784	; 0x1d000
   10e8c:	ldr	pc, [ip, #404]!	; 0x194

00010e90 <fflush@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #118784	; 0x1d000
   10e98:	ldr	pc, [ip, #396]!	; 0x18c

00010e9c <memmove@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #118784	; 0x1d000
   10ea4:	ldr	pc, [ip, #388]!	; 0x184

00010ea8 <free@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #118784	; 0x1d000
   10eb0:	ldr	pc, [ip, #380]!	; 0x17c

00010eb4 <_exit@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #118784	; 0x1d000
   10ebc:	ldr	pc, [ip, #372]!	; 0x174

00010ec0 <memcpy@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #118784	; 0x1d000
   10ec8:	ldr	pc, [ip, #364]!	; 0x16c

00010ecc <mbsinit@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #118784	; 0x1d000
   10ed4:	ldr	pc, [ip, #356]!	; 0x164

00010ed8 <fwrite_unlocked@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #118784	; 0x1d000
   10ee0:	ldr	pc, [ip, #348]!	; 0x15c

00010ee4 <memcmp@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #118784	; 0x1d000
   10eec:	ldr	pc, [ip, #340]!	; 0x154

00010ef0 <getc_unlocked@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #118784	; 0x1d000
   10ef8:	ldr	pc, [ip, #332]!	; 0x14c

00010efc <realloc@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #118784	; 0x1d000
   10f04:	ldr	pc, [ip, #324]!	; 0x144

00010f08 <textdomain@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #118784	; 0x1d000
   10f10:	ldr	pc, [ip, #316]!	; 0x13c

00010f14 <iswprint@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #118784	; 0x1d000
   10f1c:	ldr	pc, [ip, #308]!	; 0x134

00010f20 <lseek64@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #118784	; 0x1d000
   10f28:	ldr	pc, [ip, #300]!	; 0x12c

00010f2c <__ctype_get_mb_cur_max@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #118784	; 0x1d000
   10f34:	ldr	pc, [ip, #292]!	; 0x124

00010f38 <__fpending@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #118784	; 0x1d000
   10f40:	ldr	pc, [ip, #284]!	; 0x11c

00010f44 <ferror_unlocked@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #118784	; 0x1d000
   10f4c:	ldr	pc, [ip, #276]!	; 0x114

00010f50 <mbrtowc@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #118784	; 0x1d000
   10f58:	ldr	pc, [ip, #268]!	; 0x10c

00010f5c <error@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #118784	; 0x1d000
   10f64:	ldr	pc, [ip, #260]!	; 0x104

00010f68 <malloc@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #118784	; 0x1d000
   10f70:	ldr	pc, [ip, #252]!	; 0xfc

00010f74 <__libc_start_main@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #118784	; 0x1d000
   10f7c:	ldr	pc, [ip, #244]!	; 0xf4

00010f80 <__freading@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #118784	; 0x1d000
   10f88:	ldr	pc, [ip, #236]!	; 0xec

00010f8c <__gmon_start__@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #118784	; 0x1d000
   10f94:	ldr	pc, [ip, #228]!	; 0xe4

00010f98 <getopt_long@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #118784	; 0x1d000
   10fa0:	ldr	pc, [ip, #220]!	; 0xdc

00010fa4 <__ctype_b_loc@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #118784	; 0x1d000
   10fac:	ldr	pc, [ip, #212]!	; 0xd4

00010fb0 <exit@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #118784	; 0x1d000
   10fb8:	ldr	pc, [ip, #204]!	; 0xcc

00010fbc <gettext@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #118784	; 0x1d000
   10fc4:	ldr	pc, [ip, #196]!	; 0xc4

00010fc8 <strlen@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #118784	; 0x1d000
   10fd0:	ldr	pc, [ip, #188]!	; 0xbc

00010fd4 <strchr@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #118784	; 0x1d000
   10fdc:	ldr	pc, [ip, #180]!	; 0xb4

00010fe0 <fprintf@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #118784	; 0x1d000
   10fe8:	ldr	pc, [ip, #172]!	; 0xac

00010fec <__errno_location@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #118784	; 0x1d000
   10ff4:	ldr	pc, [ip, #164]!	; 0xa4

00010ff8 <__cxa_atexit@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #118784	; 0x1d000
   11000:	ldr	pc, [ip, #156]!	; 0x9c

00011004 <memset@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #118784	; 0x1d000
   1100c:	ldr	pc, [ip, #148]!	; 0x94

00011010 <fileno@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #118784	; 0x1d000
   11018:	ldr	pc, [ip, #140]!	; 0x8c

0001101c <strtoumax@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #118784	; 0x1d000
   11024:	ldr	pc, [ip, #132]!	; 0x84

00011028 <fclose@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #118784	; 0x1d000
   11030:	ldr	pc, [ip, #124]!	; 0x7c

00011034 <fseeko64@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #118784	; 0x1d000
   1103c:	ldr	pc, [ip, #116]!	; 0x74

00011040 <setlocale@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #118784	; 0x1d000
   11048:	ldr	pc, [ip, #108]!	; 0x6c

0001104c <strrchr@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #118784	; 0x1d000
   11054:	ldr	pc, [ip, #100]!	; 0x64

00011058 <nl_langinfo@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #118784	; 0x1d000
   11060:	ldr	pc, [ip, #92]!	; 0x5c

00011064 <clearerr_unlocked@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #118784	; 0x1d000
   1106c:	ldr	pc, [ip, #84]!	; 0x54

00011070 <fopen64@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #118784	; 0x1d000
   11078:	ldr	pc, [ip, #76]!	; 0x4c

0001107c <bindtextdomain@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #118784	; 0x1d000
   11084:	ldr	pc, [ip, #68]!	; 0x44

00011088 <fputs@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #118784	; 0x1d000
   11090:	ldr	pc, [ip, #60]!	; 0x3c

00011094 <strncmp@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #118784	; 0x1d000
   1109c:	ldr	pc, [ip, #52]!	; 0x34

000110a0 <abort@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #118784	; 0x1d000
   110a8:	ldr	pc, [ip, #44]!	; 0x2c

000110ac <putchar_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #118784	; 0x1d000
   110b4:	ldr	pc, [ip, #36]!	; 0x24

000110b8 <__assert_fail@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #118784	; 0x1d000
   110c0:	ldr	pc, [ip, #28]!

Disassembly of section .text:

000110c4 <.text>:
   110c4:	mov	fp, #0
   110c8:	mov	lr, #0
   110cc:	pop	{r1}		; (ldr r1, [sp], #4)
   110d0:	mov	r2, sp
   110d4:	push	{r2}		; (str r2, [sp, #-4]!)
   110d8:	push	{r0}		; (str r0, [sp, #-4]!)
   110dc:	ldr	ip, [pc, #16]	; 110f4 <__assert_fail@plt+0x3c>
   110e0:	push	{ip}		; (str ip, [sp, #-4]!)
   110e4:	ldr	r0, [pc, #12]	; 110f8 <__assert_fail@plt+0x40>
   110e8:	ldr	r3, [pc, #12]	; 110fc <__assert_fail@plt+0x44>
   110ec:	bl	10f74 <__libc_start_main@plt>
   110f0:	bl	110a0 <abort@plt>
   110f4:	andeq	ip, r1, ip, lsl #26
   110f8:	andeq	r1, r1, r4, lsl #10
   110fc:	andeq	ip, r1, ip, lsr #25
   11100:	ldr	r3, [pc, #20]	; 1111c <__assert_fail@plt+0x64>
   11104:	ldr	r2, [pc, #20]	; 11120 <__assert_fail@plt+0x68>
   11108:	add	r3, pc, r3
   1110c:	ldr	r2, [r3, r2]
   11110:	cmp	r2, #0
   11114:	bxeq	lr
   11118:	b	10f8c <__gmon_start__@plt>
   1111c:	strdeq	ip, [r1], -r0
   11120:	andeq	r0, r0, r0, ror #1
   11124:	ldr	r0, [pc, #24]	; 11144 <__assert_fail@plt+0x8c>
   11128:	ldr	r3, [pc, #24]	; 11148 <__assert_fail@plt+0x90>
   1112c:	cmp	r3, r0
   11130:	bxeq	lr
   11134:	ldr	r3, [pc, #16]	; 1114c <__assert_fail@plt+0x94>
   11138:	cmp	r3, #0
   1113c:	bxeq	lr
   11140:	bx	r3
   11144:	andeq	lr, r2, r4, lsr r1
   11148:	andeq	lr, r2, r4, lsr r1
   1114c:	andeq	r0, r0, r0
   11150:	ldr	r0, [pc, #36]	; 1117c <__assert_fail@plt+0xc4>
   11154:	ldr	r1, [pc, #36]	; 11180 <__assert_fail@plt+0xc8>
   11158:	sub	r1, r1, r0
   1115c:	asr	r1, r1, #2
   11160:	add	r1, r1, r1, lsr #31
   11164:	asrs	r1, r1, #1
   11168:	bxeq	lr
   1116c:	ldr	r3, [pc, #16]	; 11184 <__assert_fail@plt+0xcc>
   11170:	cmp	r3, #0
   11174:	bxeq	lr
   11178:	bx	r3
   1117c:	andeq	lr, r2, r4, lsr r1
   11180:	andeq	lr, r2, r4, lsr r1
   11184:	andeq	r0, r0, r0
   11188:	push	{r4, lr}
   1118c:	ldr	r4, [pc, #24]	; 111ac <__assert_fail@plt+0xf4>
   11190:	ldrb	r3, [r4]
   11194:	cmp	r3, #0
   11198:	popne	{r4, pc}
   1119c:	bl	11124 <__assert_fail@plt+0x6c>
   111a0:	mov	r3, #1
   111a4:	strb	r3, [r4]
   111a8:	pop	{r4, pc}
   111ac:	andeq	lr, r2, ip, asr r1
   111b0:	b	11150 <__assert_fail@plt+0x98>
   111b4:	push	{fp, lr}
   111b8:	mov	fp, sp
   111bc:	sub	sp, sp, #40	; 0x28
   111c0:	str	r0, [fp, #-4]
   111c4:	ldr	r0, [fp, #-4]
   111c8:	cmp	r0, #0
   111cc:	beq	1121c <__assert_fail@plt+0x164>
   111d0:	b	111d4 <__assert_fail@plt+0x11c>
   111d4:	movw	r0, #57672	; 0xe148
   111d8:	movt	r0, #2
   111dc:	ldr	r0, [r0]
   111e0:	movw	r1, #52532	; 0xcd34
   111e4:	movt	r1, #1
   111e8:	str	r0, [fp, #-8]
   111ec:	mov	r0, r1
   111f0:	bl	10fbc <gettext@plt>
   111f4:	movw	r1, #57716	; 0xe174
   111f8:	movt	r1, #2
   111fc:	ldr	r2, [r1]
   11200:	ldr	r1, [fp, #-8]
   11204:	str	r0, [fp, #-12]
   11208:	mov	r0, r1
   1120c:	ldr	r1, [fp, #-12]
   11210:	bl	10fe0 <fprintf@plt>
   11214:	str	r0, [fp, #-16]
   11218:	b	112e0 <__assert_fail@plt+0x228>
   1121c:	movw	r0, #52571	; 0xcd5b
   11220:	movt	r0, #1
   11224:	bl	10fbc <gettext@plt>
   11228:	movw	lr, #57716	; 0xe174
   1122c:	movt	lr, #2
   11230:	ldr	r1, [lr]
   11234:	bl	10e84 <printf@plt>
   11238:	movw	r1, #52604	; 0xcd7c
   1123c:	movt	r1, #1
   11240:	str	r0, [sp, #20]
   11244:	mov	r0, r1
   11248:	bl	10fbc <gettext@plt>
   1124c:	movw	r1, #57684	; 0xe154
   11250:	movt	r1, #2
   11254:	ldr	r1, [r1]
   11258:	bl	10e54 <fputs_unlocked@plt>
   1125c:	str	r0, [sp, #16]
   11260:	bl	112e8 <__assert_fail@plt+0x230>
   11264:	bl	1131c <__assert_fail@plt+0x264>
   11268:	movw	r0, #52664	; 0xcdb8
   1126c:	movt	r0, #1
   11270:	bl	10fbc <gettext@plt>
   11274:	movw	r1, #57684	; 0xe154
   11278:	movt	r1, #2
   1127c:	ldr	r1, [r1]
   11280:	bl	10e54 <fputs_unlocked@plt>
   11284:	movw	r1, #52811	; 0xce4b
   11288:	movt	r1, #1
   1128c:	str	r0, [sp, #12]
   11290:	mov	r0, r1
   11294:	bl	10fbc <gettext@plt>
   11298:	movw	r1, #57684	; 0xe154
   1129c:	movt	r1, #2
   112a0:	ldr	r1, [r1]
   112a4:	bl	10e54 <fputs_unlocked@plt>
   112a8:	movw	r1, #52856	; 0xce78
   112ac:	movt	r1, #1
   112b0:	str	r0, [sp, #8]
   112b4:	mov	r0, r1
   112b8:	bl	10fbc <gettext@plt>
   112bc:	movw	r1, #57684	; 0xe154
   112c0:	movt	r1, #2
   112c4:	ldr	r1, [r1]
   112c8:	bl	10e54 <fputs_unlocked@plt>
   112cc:	movw	r1, #52910	; 0xceae
   112d0:	movt	r1, #1
   112d4:	str	r0, [sp, #4]
   112d8:	mov	r0, r1
   112dc:	bl	11350 <__assert_fail@plt+0x298>
   112e0:	ldr	r0, [fp, #-4]
   112e4:	bl	10fb0 <exit@plt>
   112e8:	push	{fp, lr}
   112ec:	mov	fp, sp
   112f0:	sub	sp, sp, #8
   112f4:	movw	r0, #52995	; 0xcf03
   112f8:	movt	r0, #1
   112fc:	bl	10fbc <gettext@plt>
   11300:	movw	lr, #57684	; 0xe154
   11304:	movt	lr, #2
   11308:	ldr	r1, [lr]
   1130c:	bl	10e54 <fputs_unlocked@plt>
   11310:	str	r0, [sp, #4]
   11314:	mov	sp, fp
   11318:	pop	{fp, pc}
   1131c:	push	{fp, lr}
   11320:	mov	fp, sp
   11324:	sub	sp, sp, #8
   11328:	movw	r0, #53051	; 0xcf3b
   1132c:	movt	r0, #1
   11330:	bl	10fbc <gettext@plt>
   11334:	movw	lr, #57684	; 0xe154
   11338:	movt	lr, #2
   1133c:	ldr	r1, [lr]
   11340:	bl	10e54 <fputs_unlocked@plt>
   11344:	str	r0, [sp, #4]
   11348:	mov	sp, fp
   1134c:	pop	{fp, pc}
   11350:	push	{fp, lr}
   11354:	mov	fp, sp
   11358:	sub	sp, sp, #96	; 0x60
   1135c:	add	r1, sp, #36	; 0x24
   11360:	movw	r2, #53604	; 0xd164
   11364:	movt	r2, #1
   11368:	str	r0, [fp, #-4]
   1136c:	mov	r0, r1
   11370:	str	r1, [sp, #20]
   11374:	mov	r1, r2
   11378:	movw	r2, #56	; 0x38
   1137c:	bl	10ec0 <memcpy@plt>
   11380:	ldr	r0, [fp, #-4]
   11384:	str	r0, [sp, #32]
   11388:	ldr	r0, [sp, #20]
   1138c:	str	r0, [sp, #28]
   11390:	ldr	r0, [sp, #28]
   11394:	ldr	r0, [r0]
   11398:	movw	r1, #0
   1139c:	cmp	r0, r1
   113a0:	movw	r0, #0
   113a4:	str	r0, [sp, #16]
   113a8:	beq	113d4 <__assert_fail@plt+0x31c>
   113ac:	ldr	r0, [fp, #-4]
   113b0:	ldr	r1, [sp, #28]
   113b4:	ldr	r1, [r1]
   113b8:	bl	10e6c <strcmp@plt>
   113bc:	cmp	r0, #0
   113c0:	movw	r0, #0
   113c4:	moveq	r0, #1
   113c8:	mvn	r1, #0
   113cc:	eor	r0, r0, r1
   113d0:	str	r0, [sp, #16]
   113d4:	ldr	r0, [sp, #16]
   113d8:	tst	r0, #1
   113dc:	beq	113f0 <__assert_fail@plt+0x338>
   113e0:	ldr	r0, [sp, #28]
   113e4:	add	r0, r0, #8
   113e8:	str	r0, [sp, #28]
   113ec:	b	11390 <__assert_fail@plt+0x2d8>
   113f0:	ldr	r0, [sp, #28]
   113f4:	ldr	r0, [r0, #4]
   113f8:	movw	r1, #0
   113fc:	cmp	r0, r1
   11400:	beq	11410 <__assert_fail@plt+0x358>
   11404:	ldr	r0, [sp, #28]
   11408:	ldr	r0, [r0, #4]
   1140c:	str	r0, [sp, #32]
   11410:	movw	r0, #53221	; 0xcfe5
   11414:	movt	r0, #1
   11418:	bl	10fbc <gettext@plt>
   1141c:	movw	r1, #52965	; 0xcee5
   11420:	movt	r1, #1
   11424:	movw	r2, #53244	; 0xcffc
   11428:	movt	r2, #1
   1142c:	bl	10e84 <printf@plt>
   11430:	movw	r1, #5
   11434:	str	r0, [sp, #12]
   11438:	mov	r0, r1
   1143c:	movw	r1, #0
   11440:	bl	11040 <setlocale@plt>
   11444:	str	r0, [sp, #24]
   11448:	ldr	r0, [sp, #24]
   1144c:	movw	r1, #0
   11450:	cmp	r0, r1
   11454:	beq	11494 <__assert_fail@plt+0x3dc>
   11458:	ldr	r0, [sp, #24]
   1145c:	movw	r1, #53284	; 0xd024
   11460:	movt	r1, #1
   11464:	movw	r2, #3
   11468:	bl	11094 <strncmp@plt>
   1146c:	cmp	r0, #0
   11470:	beq	11494 <__assert_fail@plt+0x3dc>
   11474:	movw	r0, #53288	; 0xd028
   11478:	movt	r0, #1
   1147c:	bl	10fbc <gettext@plt>
   11480:	movw	lr, #57684	; 0xe154
   11484:	movt	lr, #2
   11488:	ldr	r1, [lr]
   1148c:	bl	10e54 <fputs_unlocked@plt>
   11490:	str	r0, [sp, #8]
   11494:	movw	r0, #53359	; 0xd06f
   11498:	movt	r0, #1
   1149c:	bl	10fbc <gettext@plt>
   114a0:	ldr	r2, [fp, #-4]
   114a4:	movw	r1, #53244	; 0xcffc
   114a8:	movt	r1, #1
   114ac:	bl	10e84 <printf@plt>
   114b0:	movw	r1, #53386	; 0xd08a
   114b4:	movt	r1, #1
   114b8:	str	r0, [sp, #4]
   114bc:	mov	r0, r1
   114c0:	bl	10fbc <gettext@plt>
   114c4:	ldr	r1, [sp, #32]
   114c8:	ldr	r2, [sp, #32]
   114cc:	ldr	lr, [fp, #-4]
   114d0:	cmp	r2, lr
   114d4:	movw	r2, #0
   114d8:	moveq	r2, #1
   114dc:	tst	r2, #1
   114e0:	movw	r2, #53436	; 0xd0bc
   114e4:	movt	r2, #1
   114e8:	movw	lr, #53154	; 0xcfa2
   114ec:	movt	lr, #1
   114f0:	movne	r2, lr
   114f4:	bl	10e84 <printf@plt>
   114f8:	str	r0, [sp]
   114fc:	mov	sp, fp
   11500:	pop	{fp, pc}
   11504:	push	{fp, lr}
   11508:	mov	fp, sp
   1150c:	sub	sp, sp, #80	; 0x50
   11510:	movw	r2, #0
   11514:	str	r2, [fp, #-4]
   11518:	str	r0, [fp, #-8]
   1151c:	str	r1, [fp, #-12]
   11520:	movw	r0, #80	; 0x50
   11524:	str	r0, [fp, #-16]
   11528:	ldr	r0, [fp, #-12]
   1152c:	ldr	r0, [r0]
   11530:	bl	124e0 <__assert_fail@plt+0x1428>
   11534:	movw	r0, #6
   11538:	movw	r1, #53436	; 0xd0bc
   1153c:	movt	r1, #1
   11540:	bl	11040 <setlocale@plt>
   11544:	movw	r1, #52969	; 0xcee9
   11548:	movt	r1, #1
   1154c:	str	r0, [fp, #-32]	; 0xffffffe0
   11550:	mov	r0, r1
   11554:	movw	r1, #52915	; 0xceb3
   11558:	movt	r1, #1
   1155c:	bl	1107c <bindtextdomain@plt>
   11560:	movw	r1, #52969	; 0xcee9
   11564:	movt	r1, #1
   11568:	str	r0, [fp, #-36]	; 0xffffffdc
   1156c:	mov	r0, r1
   11570:	bl	10f08 <textdomain@plt>
   11574:	movw	r1, #8280	; 0x2058
   11578:	movt	r1, #1
   1157c:	str	r0, [sp, #40]	; 0x28
   11580:	mov	r0, r1
   11584:	bl	1cd10 <__assert_fail@plt+0xbc58>
   11588:	movw	r1, #57696	; 0xe160
   1158c:	movt	r1, #2
   11590:	movw	r2, #0
   11594:	strb	r2, [r1]
   11598:	movw	r1, #57697	; 0xe161
   1159c:	movt	r1, #2
   115a0:	strb	r2, [r1]
   115a4:	movw	r1, #57698	; 0xe162
   115a8:	movt	r1, #2
   115ac:	strb	r2, [r1]
   115b0:	str	r0, [sp, #36]	; 0x24
   115b4:	ldr	r0, [fp, #-8]
   115b8:	ldr	r1, [fp, #-12]
   115bc:	movw	r2, #53472	; 0xd0e0
   115c0:	movt	r2, #1
   115c4:	movw	r3, #53508	; 0xd104
   115c8:	movt	r3, #1
   115cc:	movw	ip, #0
   115d0:	str	ip, [sp]
   115d4:	bl	10f98 <getopt_long@plt>
   115d8:	str	r0, [fp, #-24]	; 0xffffffe8
   115dc:	cmn	r0, #1
   115e0:	beq	11934 <__assert_fail@plt+0x87c>
   115e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115e8:	add	r0, r0, #3
   115ec:	cmp	r0, #122	; 0x7a
   115f0:	str	r0, [sp, #32]
   115f4:	bhi	11928 <__assert_fail@plt+0x870>
   115f8:	add	r0, pc, #8
   115fc:	ldr	r1, [sp, #32]
   11600:	ldr	r0, [r0, r1, lsl #2]
   11604:	mov	pc, r0
   11608:	andeq	r1, r1, r0, ror #17
   1160c:	ldrdeq	r1, [r1], -r8
   11610:	andeq	r1, r1, r8, lsr #18
   11614:	andeq	r1, r1, r8, lsr #18
   11618:	andeq	r1, r1, r8, lsr #18
   1161c:	andeq	r1, r1, r8, lsr #18
   11620:	andeq	r1, r1, r8, lsr #18
   11624:	andeq	r1, r1, r8, lsr #18
   11628:	andeq	r1, r1, r8, lsr #18
   1162c:	andeq	r1, r1, r8, lsr #18
   11630:	andeq	r1, r1, r8, lsr #18
   11634:	andeq	r1, r1, r8, lsr #18
   11638:	andeq	r1, r1, r8, lsr #18
   1163c:	andeq	r1, r1, r8, lsr #18
   11640:	andeq	r1, r1, r8, lsr #18
   11644:	andeq	r1, r1, r8, lsr #18
   11648:	andeq	r1, r1, r8, lsr #18
   1164c:	andeq	r1, r1, r8, lsr #18
   11650:	andeq	r1, r1, r8, lsr #18
   11654:	andeq	r1, r1, r8, lsr #18
   11658:	andeq	r1, r1, r8, lsr #18
   1165c:	andeq	r1, r1, r8, lsr #18
   11660:	andeq	r1, r1, r8, lsr #18
   11664:	andeq	r1, r1, r8, lsr #18
   11668:	andeq	r1, r1, r8, lsr #18
   1166c:	andeq	r1, r1, r8, lsr #18
   11670:	andeq	r1, r1, r8, lsr #18
   11674:	andeq	r1, r1, r8, lsr #18
   11678:	andeq	r1, r1, r8, lsr #18
   1167c:	andeq	r1, r1, r8, lsr #18
   11680:	andeq	r1, r1, r8, lsr #18
   11684:	andeq	r1, r1, r8, lsr #18
   11688:	andeq	r1, r1, r8, lsr #18
   1168c:	andeq	r1, r1, r8, lsr #18
   11690:	andeq	r1, r1, r8, lsr #18
   11694:	andeq	r1, r1, r8, lsr #18
   11698:	andeq	r1, r1, r8, lsr #18
   1169c:	andeq	r1, r1, r8, lsr #18
   116a0:	andeq	r1, r1, r8, lsr #18
   116a4:	andeq	r1, r1, r8, lsr #18
   116a8:	andeq	r1, r1, r8, lsr #18
   116ac:	andeq	r1, r1, r8, lsr #18
   116b0:	andeq	r1, r1, r8, lsr #18
   116b4:	andeq	r1, r1, r8, lsr #18
   116b8:	andeq	r1, r1, r8, lsr #18
   116bc:	andeq	r1, r1, r8, lsr #18
   116c0:	andeq	r1, r1, r8, lsr #18
   116c4:	andeq	r1, r1, r8, lsr #18
   116c8:	andeq	r1, r1, r8, lsr #18
   116cc:	andeq	r1, r1, r8, lsr #18
   116d0:	andeq	r1, r1, r8, lsr #18
   116d4:	andeq	r1, r1, ip, lsl r8
   116d8:	andeq	r1, r1, ip, lsl r8
   116dc:	andeq	r1, r1, ip, lsl r8
   116e0:	andeq	r1, r1, ip, lsl r8
   116e4:	andeq	r1, r1, ip, lsl r8
   116e8:	andeq	r1, r1, ip, lsl r8
   116ec:	andeq	r1, r1, ip, lsl r8
   116f0:	andeq	r1, r1, ip, lsl r8
   116f4:	andeq	r1, r1, ip, lsl r8
   116f8:	andeq	r1, r1, ip, lsl r8
   116fc:	andeq	r1, r1, r8, lsr #18
   11700:	andeq	r1, r1, r8, lsr #18
   11704:	andeq	r1, r1, r8, lsr #18
   11708:	andeq	r1, r1, r8, lsr #18
   1170c:	andeq	r1, r1, r8, lsr #18
   11710:	andeq	r1, r1, r8, lsr #18
   11714:	andeq	r1, r1, r8, lsr #18
   11718:	andeq	r1, r1, r8, lsr #18
   1171c:	andeq	r1, r1, r8, lsr #18
   11720:	andeq	r1, r1, r8, lsr #18
   11724:	andeq	r1, r1, r8, lsr #18
   11728:	andeq	r1, r1, r8, lsr #18
   1172c:	andeq	r1, r1, r8, lsr #18
   11730:	andeq	r1, r1, r8, lsr #18
   11734:	andeq	r1, r1, r8, lsr #18
   11738:	andeq	r1, r1, r8, lsr #18
   1173c:	andeq	r1, r1, r8, lsr #18
   11740:	andeq	r1, r1, r8, lsr #18
   11744:	andeq	r1, r1, r8, lsr #18
   11748:	andeq	r1, r1, r8, lsr #18
   1174c:	andeq	r1, r1, r8, lsr #18
   11750:	andeq	r1, r1, r8, lsr #18
   11754:	andeq	r1, r1, r8, lsr #18
   11758:	andeq	r1, r1, r8, lsr #18
   1175c:	andeq	r1, r1, r8, lsr #18
   11760:	andeq	r1, r1, r8, lsr #18
   11764:	andeq	r1, r1, r8, lsr #18
   11768:	andeq	r1, r1, r8, lsr #18
   1176c:	andeq	r1, r1, r8, lsr #18
   11770:	andeq	r1, r1, r8, lsr #18
   11774:	andeq	r1, r1, r8, lsr #18
   11778:	andeq	r1, r1, r8, lsr #18
   1177c:	andeq	r1, r1, r8, lsr #18
   11780:	andeq	r1, r1, r8, lsr #18
   11784:	andeq	r1, r1, r8, lsr #18
   11788:	andeq	r1, r1, r8, lsr #18
   1178c:	andeq	r1, r1, r8, lsr #18
   11790:	andeq	r1, r1, r8, lsr #18
   11794:	andeq	r1, r1, r8, lsr #18
   11798:	andeq	r1, r1, r8, lsr #18
   1179c:	strdeq	r1, [r1], -r4
   117a0:	andeq	r1, r1, r8, lsr #18
   117a4:	andeq	r1, r1, r8, lsr #18
   117a8:	andeq	r1, r1, r8, lsr #18
   117ac:	andeq	r1, r1, r8, lsr #18
   117b0:	andeq	r1, r1, r8, lsr #18
   117b4:	andeq	r1, r1, r8, lsr #18
   117b8:	andeq	r1, r1, r8, lsr #18
   117bc:	andeq	r1, r1, r8, lsr #18
   117c0:	andeq	r1, r1, r8, lsr #18
   117c4:	andeq	r1, r1, r8, lsr #18
   117c8:	andeq	r1, r1, r8, lsr #18
   117cc:	andeq	r1, r1, r8, lsr #18
   117d0:	andeq	r1, r1, r8, lsr #18
   117d4:	andeq	r1, r1, r8, lsr #18
   117d8:	andeq	r1, r1, r8, lsr #18
   117dc:	andeq	r1, r1, r8, lsr #18
   117e0:	andeq	r1, r1, r8, lsl #16
   117e4:	andeq	r1, r1, r8, lsr #18
   117e8:	andeq	r1, r1, r8, lsr #18
   117ec:	andeq	r1, r1, r8, lsr #18
   117f0:	andeq	r1, r1, r4, ror r8
   117f4:	movw	r0, #57697	; 0xe161
   117f8:	movt	r0, #2
   117fc:	movw	r1, #1
   11800:	strb	r1, [r0]
   11804:	b	11930 <__assert_fail@plt+0x878>
   11808:	movw	r0, #57698	; 0xe162
   1180c:	movt	r0, #2
   11810:	movw	r1, #1
   11814:	strb	r1, [r0]
   11818:	b	11930 <__assert_fail@plt+0x878>
   1181c:	movw	r0, #57688	; 0xe158
   11820:	movt	r0, #2
   11824:	ldr	r0, [r0]
   11828:	movw	r1, #0
   1182c:	cmp	r0, r1
   11830:	beq	11850 <__assert_fail@plt+0x798>
   11834:	movw	r0, #57688	; 0xe158
   11838:	movt	r0, #2
   1183c:	ldr	r1, [r0]
   11840:	mvn	r2, #0
   11844:	add	r1, r1, r2
   11848:	str	r1, [r0]
   1184c:	b	11870 <__assert_fail@plt+0x7b8>
   11850:	sub	r0, fp, #27
   11854:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11858:	strb	r1, [fp, #-27]	; 0xffffffe5
   1185c:	movw	r1, #0
   11860:	strb	r1, [fp, #-26]	; 0xffffffe6
   11864:	movw	r1, #57688	; 0xe158
   11868:	movt	r1, #2
   1186c:	str	r0, [r1]
   11870:	b	11874 <__assert_fail@plt+0x7bc>
   11874:	movw	r0, #57688	; 0xe158
   11878:	movt	r0, #2
   1187c:	ldr	r0, [r0]
   11880:	movw	r1, #52939	; 0xcecb
   11884:	movt	r1, #1
   11888:	str	r0, [sp, #28]
   1188c:	mov	r0, r1
   11890:	bl	10fbc <gettext@plt>
   11894:	mov	r1, sp
   11898:	mov	lr, #0
   1189c:	str	lr, [r1, #16]
   118a0:	str	r0, [r1, #12]
   118a4:	movw	r0, #53436	; 0xd0bc
   118a8:	movt	r0, #1
   118ac:	str	r0, [r1, #8]
   118b0:	str	lr, [r1, #4]
   118b4:	mvn	r0, #9
   118b8:	str	r0, [r1]
   118bc:	mov	r2, #1
   118c0:	ldr	r0, [sp, #28]
   118c4:	mov	r3, lr
   118c8:	bl	185bc <__assert_fail@plt+0x7504>
   118cc:	str	r0, [fp, #-16]
   118d0:	str	r1, [sp, #24]
   118d4:	b	11930 <__assert_fail@plt+0x878>
   118d8:	movw	r0, #0
   118dc:	bl	111b4 <__assert_fail@plt+0xfc>
   118e0:	movw	r0, #57684	; 0xe154
   118e4:	movt	r0, #2
   118e8:	ldr	r0, [r0]
   118ec:	movw	r1, #57580	; 0xe0ec
   118f0:	movt	r1, #2
   118f4:	ldr	r3, [r1]
   118f8:	movw	r1, #52910	; 0xceae
   118fc:	movt	r1, #1
   11900:	movw	r2, #52965	; 0xcee5
   11904:	movt	r2, #1
   11908:	movw	ip, #52979	; 0xcef3
   1190c:	movt	ip, #1
   11910:	str	ip, [sp]
   11914:	movw	ip, #0
   11918:	str	ip, [sp, #4]
   1191c:	bl	153f8 <__assert_fail@plt+0x4340>
   11920:	movw	r0, #0
   11924:	bl	10fb0 <exit@plt>
   11928:	movw	r0, #1
   1192c:	bl	111b4 <__assert_fail@plt+0xfc>
   11930:	b	115b4 <__assert_fail@plt+0x4fc>
   11934:	ldr	r0, [fp, #-8]
   11938:	movw	r1, #57664	; 0xe140
   1193c:	movt	r1, #2
   11940:	ldr	r1, [r1]
   11944:	cmp	r0, r1
   11948:	bne	11968 <__assert_fail@plt+0x8b0>
   1194c:	ldr	r1, [fp, #-16]
   11950:	movw	r0, #53760	; 0xd200
   11954:	movt	r0, #1
   11958:	bl	11a3c <__assert_fail@plt+0x984>
   1195c:	and	r0, r0, #1
   11960:	strb	r0, [fp, #-25]	; 0xffffffe7
   11964:	b	119e0 <__assert_fail@plt+0x928>
   11968:	movw	r0, #1
   1196c:	strb	r0, [fp, #-25]	; 0xffffffe7
   11970:	movw	r0, #57664	; 0xe140
   11974:	movt	r0, #2
   11978:	ldr	r0, [r0]
   1197c:	str	r0, [fp, #-20]	; 0xffffffec
   11980:	ldr	r0, [fp, #-20]	; 0xffffffec
   11984:	ldr	r1, [fp, #-8]
   11988:	cmp	r0, r1
   1198c:	bge	119dc <__assert_fail@plt+0x924>
   11990:	ldr	r0, [fp, #-12]
   11994:	ldr	r1, [fp, #-20]	; 0xffffffec
   11998:	add	r0, r0, r1, lsl #2
   1199c:	ldr	r0, [r0]
   119a0:	ldr	r1, [fp, #-16]
   119a4:	bl	11a3c <__assert_fail@plt+0x984>
   119a8:	and	r0, r0, #1
   119ac:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   119b0:	and	r1, r1, #1
   119b4:	and	r0, r1, r0
   119b8:	cmp	r0, #0
   119bc:	movw	r0, #0
   119c0:	movne	r0, #1
   119c4:	and	r0, r0, #1
   119c8:	strb	r0, [fp, #-25]	; 0xffffffe7
   119cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   119d0:	add	r0, r0, #1
   119d4:	str	r0, [fp, #-20]	; 0xffffffec
   119d8:	b	11980 <__assert_fail@plt+0x8c8>
   119dc:	b	119e0 <__assert_fail@plt+0x928>
   119e0:	movw	r0, #57696	; 0xe160
   119e4:	movt	r0, #2
   119e8:	ldrb	r0, [r0]
   119ec:	tst	r0, #1
   119f0:	beq	11a24 <__assert_fail@plt+0x96c>
   119f4:	movw	r0, #57680	; 0xe150
   119f8:	movt	r0, #2
   119fc:	ldr	r0, [r0]
   11a00:	bl	12238 <__assert_fail@plt+0x1180>
   11a04:	cmn	r0, #1
   11a08:	bne	11a24 <__assert_fail@plt+0x96c>
   11a0c:	bl	10fec <__errno_location@plt>
   11a10:	ldr	r1, [r0]
   11a14:	movw	r0, #1
   11a18:	movw	r2, #53760	; 0xd200
   11a1c:	movt	r2, #1
   11a20:	bl	10f5c <error@plt>
   11a24:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11a28:	tst	r0, #1
   11a2c:	movw	r0, #0
   11a30:	moveq	r0, #1
   11a34:	mov	sp, fp
   11a38:	pop	{fp, pc}
   11a3c:	push	{fp, lr}
   11a40:	mov	fp, sp
   11a44:	sub	sp, sp, #88	; 0x58
   11a48:	str	r0, [fp, #-8]
   11a4c:	str	r1, [fp, #-12]
   11a50:	movw	r0, #0
   11a54:	str	r0, [fp, #-24]	; 0xffffffe8
   11a58:	str	r0, [fp, #-28]	; 0xffffffe4
   11a5c:	ldr	r0, [fp, #-8]
   11a60:	movw	r1, #53760	; 0xd200
   11a64:	movt	r1, #1
   11a68:	bl	10e6c <strcmp@plt>
   11a6c:	cmp	r0, #0
   11a70:	bne	11a98 <__assert_fail@plt+0x9e0>
   11a74:	movw	r0, #57680	; 0xe150
   11a78:	movt	r0, #2
   11a7c:	ldr	r0, [r0]
   11a80:	str	r0, [fp, #-16]
   11a84:	movw	r0, #57696	; 0xe160
   11a88:	movt	r0, #2
   11a8c:	movw	r1, #1
   11a90:	strb	r1, [r0]
   11a94:	b	11aac <__assert_fail@plt+0x9f4>
   11a98:	ldr	r0, [fp, #-8]
   11a9c:	movw	r1, #53685	; 0xd1b5
   11aa0:	movt	r1, #1
   11aa4:	bl	11070 <fopen64@plt>
   11aa8:	str	r0, [fp, #-16]
   11aac:	ldr	r0, [fp, #-16]
   11ab0:	movw	r1, #0
   11ab4:	cmp	r0, r1
   11ab8:	bne	11b0c <__assert_fail@plt+0xa54>
   11abc:	bl	10fec <__errno_location@plt>
   11ac0:	ldr	r1, [r0]
   11ac4:	ldr	r2, [fp, #-8]
   11ac8:	movw	r0, #0
   11acc:	movw	lr, #3
   11ad0:	str	r1, [sp, #40]	; 0x28
   11ad4:	mov	r1, lr
   11ad8:	bl	148f8 <__assert_fail@plt+0x3840>
   11adc:	movw	r1, #0
   11ae0:	str	r0, [sp, #36]	; 0x24
   11ae4:	mov	r0, r1
   11ae8:	ldr	r1, [sp, #40]	; 0x28
   11aec:	movw	r2, #53691	; 0xd1bb
   11af0:	movt	r2, #1
   11af4:	ldr	r3, [sp, #36]	; 0x24
   11af8:	bl	10f5c <error@plt>
   11afc:	movw	r0, #0
   11b00:	and	r0, r0, #1
   11b04:	strb	r0, [fp, #-1]
   11b08:	b	11f2c <__assert_fail@plt+0xe74>
   11b0c:	ldr	r0, [fp, #-16]
   11b10:	movw	r1, #2
   11b14:	bl	121e0 <__assert_fail@plt+0x1128>
   11b18:	ldr	r0, [fp, #-16]
   11b1c:	bl	10ef0 <getc_unlocked@plt>
   11b20:	str	r0, [fp, #-20]	; 0xffffffec
   11b24:	cmn	r0, #1
   11b28:	beq	11e20 <__assert_fail@plt+0xd68>
   11b2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11b30:	add	r0, r0, #1
   11b34:	movw	r1, #57704	; 0xe168
   11b38:	movt	r1, #2
   11b3c:	ldr	r1, [r1]
   11b40:	cmp	r0, r1
   11b44:	bcc	11b6c <__assert_fail@plt+0xab4>
   11b48:	movw	r0, #57700	; 0xe164
   11b4c:	movt	r0, #2
   11b50:	ldr	r0, [r0]
   11b54:	movw	r1, #57704	; 0xe168
   11b58:	movt	r1, #2
   11b5c:	bl	15738 <__assert_fail@plt+0x4680>
   11b60:	movw	r1, #57700	; 0xe164
   11b64:	movt	r1, #2
   11b68:	str	r0, [r1]
   11b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b70:	cmp	r0, #10
   11b74:	bne	11bcc <__assert_fail@plt+0xb14>
   11b78:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b7c:	movw	r1, #57700	; 0xe164
   11b80:	movt	r1, #2
   11b84:	ldr	r2, [r1]
   11b88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11b8c:	add	ip, r3, #1
   11b90:	str	ip, [fp, #-28]	; 0xffffffe4
   11b94:	add	r2, r2, r3
   11b98:	strb	r0, [r2]
   11b9c:	ldr	r0, [r1]
   11ba0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11ba4:	movw	r1, #57684	; 0xe154
   11ba8:	movt	r1, #2
   11bac:	ldr	r3, [r1]
   11bb0:	movw	r1, #1
   11bb4:	bl	10ed8 <fwrite_unlocked@plt>
   11bb8:	movw	r1, #0
   11bbc:	str	r1, [fp, #-28]	; 0xffffffe4
   11bc0:	str	r1, [fp, #-24]	; 0xffffffe8
   11bc4:	str	r0, [sp, #32]
   11bc8:	b	11b18 <__assert_fail@plt+0xa60>
   11bcc:	b	11bd0 <__assert_fail@plt+0xb18>
   11bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11bd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   11bd8:	and	r1, r1, #255	; 0xff
   11bdc:	bl	11f3c <__assert_fail@plt+0xe84>
   11be0:	str	r0, [fp, #-24]	; 0xffffffe8
   11be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11be8:	ldr	r1, [fp, #-12]
   11bec:	cmp	r0, r1
   11bf0:	bls	11df8 <__assert_fail@plt+0xd40>
   11bf4:	movw	r0, #57698	; 0xe162
   11bf8:	movt	r0, #2
   11bfc:	ldrb	r0, [r0]
   11c00:	tst	r0, #1
   11c04:	beq	11d70 <__assert_fail@plt+0xcb8>
   11c08:	movw	r0, #0
   11c0c:	strb	r0, [fp, #-33]	; 0xffffffdf
   11c10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c14:	str	r0, [fp, #-40]	; 0xffffffd8
   11c18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11c1c:	cmp	r0, #0
   11c20:	beq	11c88 <__assert_fail@plt+0xbd0>
   11c24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11c28:	sub	r0, r0, #1
   11c2c:	str	r0, [fp, #-40]	; 0xffffffd8
   11c30:	bl	10fa4 <__ctype_b_loc@plt>
   11c34:	ldr	r0, [r0]
   11c38:	movw	lr, #57700	; 0xe164
   11c3c:	movt	lr, #2
   11c40:	ldr	lr, [lr]
   11c44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11c48:	ldrb	r1, [lr, r1]
   11c4c:	str	r0, [sp, #28]
   11c50:	mov	r0, r1
   11c54:	bl	11ffc <__assert_fail@plt+0xf44>
   11c58:	mov	r1, r0
   11c5c:	ldr	lr, [sp, #28]
   11c60:	add	r0, lr, r0, lsl #1
   11c64:	ldrh	r0, [r0]
   11c68:	and	r0, r0, #1
   11c6c:	cmp	r0, #0
   11c70:	str	r1, [sp, #24]
   11c74:	beq	11c84 <__assert_fail@plt+0xbcc>
   11c78:	movw	r0, #1
   11c7c:	strb	r0, [fp, #-33]	; 0xffffffdf
   11c80:	b	11c88 <__assert_fail@plt+0xbd0>
   11c84:	b	11c18 <__assert_fail@plt+0xb60>
   11c88:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   11c8c:	tst	r0, #1
   11c90:	beq	11d6c <__assert_fail@plt+0xcb4>
   11c94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11c98:	add	r0, r0, #1
   11c9c:	str	r0, [fp, #-40]	; 0xffffffd8
   11ca0:	movw	r0, #57700	; 0xe164
   11ca4:	movt	r0, #2
   11ca8:	ldr	r0, [r0]
   11cac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11cb0:	movw	r1, #57684	; 0xe154
   11cb4:	movt	r1, #2
   11cb8:	ldr	r3, [r1]
   11cbc:	movw	r1, #1
   11cc0:	bl	10ed8 <fwrite_unlocked@plt>
   11cc4:	movw	r1, #10
   11cc8:	str	r0, [sp, #20]
   11ccc:	mov	r0, r1
   11cd0:	bl	110ac <putchar_unlocked@plt>
   11cd4:	movw	r1, #57700	; 0xe164
   11cd8:	movt	r1, #2
   11cdc:	ldr	r2, [r1]
   11ce0:	ldr	r1, [r1]
   11ce4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11ce8:	add	r1, r1, r3
   11cec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11cf0:	ldr	lr, [fp, #-40]	; 0xffffffd8
   11cf4:	sub	r3, r3, lr
   11cf8:	str	r0, [sp, #16]
   11cfc:	mov	r0, r2
   11d00:	mov	r2, r3
   11d04:	bl	10e9c <memmove@plt>
   11d08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11d0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11d10:	sub	r0, r1, r0
   11d14:	str	r0, [fp, #-28]	; 0xffffffe4
   11d18:	movw	r0, #0
   11d1c:	str	r0, [sp, #44]	; 0x2c
   11d20:	str	r0, [fp, #-24]	; 0xffffffe8
   11d24:	ldr	r0, [sp, #44]	; 0x2c
   11d28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11d2c:	cmp	r0, r1
   11d30:	bcs	11d68 <__assert_fail@plt+0xcb0>
   11d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d38:	movw	r1, #57700	; 0xe164
   11d3c:	movt	r1, #2
   11d40:	ldr	r1, [r1]
   11d44:	ldr	r2, [sp, #44]	; 0x2c
   11d48:	add	r1, r1, r2
   11d4c:	ldrb	r1, [r1]
   11d50:	bl	11f3c <__assert_fail@plt+0xe84>
   11d54:	str	r0, [fp, #-24]	; 0xffffffe8
   11d58:	ldr	r0, [sp, #44]	; 0x2c
   11d5c:	add	r0, r0, #1
   11d60:	str	r0, [sp, #44]	; 0x2c
   11d64:	b	11d24 <__assert_fail@plt+0xc6c>
   11d68:	b	11bd0 <__assert_fail@plt+0xb18>
   11d6c:	b	11d70 <__assert_fail@plt+0xcb8>
   11d70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d74:	cmp	r0, #0
   11d78:	bne	11da4 <__assert_fail@plt+0xcec>
   11d7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d80:	movw	r1, #57700	; 0xe164
   11d84:	movt	r1, #2
   11d88:	ldr	r1, [r1]
   11d8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11d90:	add	r3, r2, #1
   11d94:	str	r3, [fp, #-28]	; 0xffffffe4
   11d98:	add	r1, r1, r2
   11d9c:	strb	r0, [r1]
   11da0:	b	11b18 <__assert_fail@plt+0xa60>
   11da4:	movw	r0, #57700	; 0xe164
   11da8:	movt	r0, #2
   11dac:	ldr	r1, [r0]
   11db0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11db4:	add	r3, r2, #1
   11db8:	str	r3, [fp, #-28]	; 0xffffffe4
   11dbc:	add	r1, r1, r2
   11dc0:	movw	r2, #10
   11dc4:	strb	r2, [r1]
   11dc8:	ldr	r0, [r0]
   11dcc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11dd0:	movw	r1, #57684	; 0xe154
   11dd4:	movt	r1, #2
   11dd8:	ldr	r3, [r1]
   11ddc:	movw	r1, #1
   11de0:	bl	10ed8 <fwrite_unlocked@plt>
   11de4:	movw	r1, #0
   11de8:	str	r1, [fp, #-28]	; 0xffffffe4
   11dec:	str	r1, [fp, #-24]	; 0xffffffe8
   11df0:	str	r0, [sp, #12]
   11df4:	b	11bd0 <__assert_fail@plt+0xb18>
   11df8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11dfc:	movw	r1, #57700	; 0xe164
   11e00:	movt	r1, #2
   11e04:	ldr	r1, [r1]
   11e08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e0c:	add	r3, r2, #1
   11e10:	str	r3, [fp, #-28]	; 0xffffffe4
   11e14:	add	r1, r1, r2
   11e18:	strb	r0, [r1]
   11e1c:	b	11b18 <__assert_fail@plt+0xa60>
   11e20:	bl	10fec <__errno_location@plt>
   11e24:	ldr	r0, [r0]
   11e28:	str	r0, [fp, #-32]	; 0xffffffe0
   11e2c:	ldr	r0, [fp, #-16]
   11e30:	bl	10f44 <ferror_unlocked@plt>
   11e34:	cmp	r0, #0
   11e38:	bne	11e44 <__assert_fail@plt+0xd8c>
   11e3c:	movw	r0, #0
   11e40:	str	r0, [fp, #-32]	; 0xffffffe0
   11e44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11e48:	cmp	r0, #0
   11e4c:	beq	11e78 <__assert_fail@plt+0xdc0>
   11e50:	movw	r0, #57700	; 0xe164
   11e54:	movt	r0, #2
   11e58:	ldr	r0, [r0]
   11e5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e60:	movw	r1, #57684	; 0xe154
   11e64:	movt	r1, #2
   11e68:	ldr	r3, [r1]
   11e6c:	movw	r1, #1
   11e70:	bl	10ed8 <fwrite_unlocked@plt>
   11e74:	str	r0, [sp, #8]
   11e78:	ldr	r0, [fp, #-8]
   11e7c:	movw	r1, #53760	; 0xd200
   11e80:	movt	r1, #1
   11e84:	bl	10e6c <strcmp@plt>
   11e88:	cmp	r0, #0
   11e8c:	bne	11e9c <__assert_fail@plt+0xde4>
   11e90:	ldr	r0, [fp, #-16]
   11e94:	bl	11064 <clearerr_unlocked@plt>
   11e98:	b	11ec8 <__assert_fail@plt+0xe10>
   11e9c:	ldr	r0, [fp, #-16]
   11ea0:	bl	12238 <__assert_fail@plt+0x1180>
   11ea4:	cmp	r0, #0
   11ea8:	beq	11ec4 <__assert_fail@plt+0xe0c>
   11eac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11eb0:	cmp	r0, #0
   11eb4:	bne	11ec4 <__assert_fail@plt+0xe0c>
   11eb8:	bl	10fec <__errno_location@plt>
   11ebc:	ldr	r0, [r0]
   11ec0:	str	r0, [fp, #-32]	; 0xffffffe0
   11ec4:	b	11ec8 <__assert_fail@plt+0xe10>
   11ec8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ecc:	cmp	r0, #0
   11ed0:	beq	11f20 <__assert_fail@plt+0xe68>
   11ed4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11ed8:	ldr	r2, [fp, #-8]
   11edc:	movw	r0, #0
   11ee0:	movw	r3, #3
   11ee4:	str	r1, [sp, #4]
   11ee8:	mov	r1, r3
   11eec:	bl	148f8 <__assert_fail@plt+0x3840>
   11ef0:	movw	r1, #0
   11ef4:	str	r0, [sp]
   11ef8:	mov	r0, r1
   11efc:	ldr	r1, [sp, #4]
   11f00:	movw	r2, #53691	; 0xd1bb
   11f04:	movt	r2, #1
   11f08:	ldr	r3, [sp]
   11f0c:	bl	10f5c <error@plt>
   11f10:	movw	r0, #0
   11f14:	and	r0, r0, #1
   11f18:	strb	r0, [fp, #-1]
   11f1c:	b	11f2c <__assert_fail@plt+0xe74>
   11f20:	movw	r0, #1
   11f24:	and	r0, r0, #1
   11f28:	strb	r0, [fp, #-1]
   11f2c:	ldrb	r0, [fp, #-1]
   11f30:	and	r0, r0, #1
   11f34:	mov	sp, fp
   11f38:	pop	{fp, pc}
   11f3c:	sub	sp, sp, #8
   11f40:	str	r0, [sp, #4]
   11f44:	strb	r1, [sp, #3]
   11f48:	movw	r0, #57697	; 0xe161
   11f4c:	movt	r0, #2
   11f50:	ldrb	r0, [r0]
   11f54:	tst	r0, #1
   11f58:	bne	11fe4 <__assert_fail@plt+0xf2c>
   11f5c:	ldrb	r0, [sp, #3]
   11f60:	cmp	r0, #8
   11f64:	bne	11f88 <__assert_fail@plt+0xed0>
   11f68:	ldr	r0, [sp, #4]
   11f6c:	cmp	r0, #0
   11f70:	bls	11f84 <__assert_fail@plt+0xecc>
   11f74:	ldr	r0, [sp, #4]
   11f78:	mvn	r1, #0
   11f7c:	add	r0, r0, r1
   11f80:	str	r0, [sp, #4]
   11f84:	b	11fe0 <__assert_fail@plt+0xf28>
   11f88:	ldrb	r0, [sp, #3]
   11f8c:	cmp	r0, #13
   11f90:	bne	11fa0 <__assert_fail@plt+0xee8>
   11f94:	movw	r0, #0
   11f98:	str	r0, [sp, #4]
   11f9c:	b	11fdc <__assert_fail@plt+0xf24>
   11fa0:	ldrb	r0, [sp, #3]
   11fa4:	cmp	r0, #9
   11fa8:	bne	11fcc <__assert_fail@plt+0xf14>
   11fac:	ldr	r0, [sp, #4]
   11fb0:	and	r0, r0, #7
   11fb4:	movw	r1, #8
   11fb8:	sub	r0, r1, r0
   11fbc:	ldr	r1, [sp, #4]
   11fc0:	add	r0, r1, r0
   11fc4:	str	r0, [sp, #4]
   11fc8:	b	11fd8 <__assert_fail@plt+0xf20>
   11fcc:	ldr	r0, [sp, #4]
   11fd0:	add	r0, r0, #1
   11fd4:	str	r0, [sp, #4]
   11fd8:	b	11fdc <__assert_fail@plt+0xf24>
   11fdc:	b	11fe0 <__assert_fail@plt+0xf28>
   11fe0:	b	11ff0 <__assert_fail@plt+0xf38>
   11fe4:	ldr	r0, [sp, #4]
   11fe8:	add	r0, r0, #1
   11fec:	str	r0, [sp, #4]
   11ff0:	ldr	r0, [sp, #4]
   11ff4:	add	sp, sp, #8
   11ff8:	bx	lr
   11ffc:	sub	sp, sp, #4
   12000:	strb	r0, [sp, #3]
   12004:	ldrb	r0, [sp, #3]
   12008:	add	sp, sp, #4
   1200c:	bx	lr
   12010:	sub	sp, sp, #4
   12014:	str	r0, [sp]
   12018:	ldr	r0, [sp]
   1201c:	movw	r1, #57708	; 0xe16c
   12020:	movt	r1, #2
   12024:	str	r0, [r1]
   12028:	add	sp, sp, #4
   1202c:	bx	lr
   12030:	sub	sp, sp, #4
   12034:	and	r0, r0, #1
   12038:	strb	r0, [sp, #3]
   1203c:	ldrb	r0, [sp, #3]
   12040:	and	r0, r0, #1
   12044:	movw	r1, #57712	; 0xe170
   12048:	movt	r1, #2
   1204c:	strb	r0, [r1]
   12050:	add	sp, sp, #4
   12054:	bx	lr
   12058:	push	{fp, lr}
   1205c:	mov	fp, sp
   12060:	sub	sp, sp, #24
   12064:	movw	r0, #57684	; 0xe154
   12068:	movt	r0, #2
   1206c:	ldr	r0, [r0]
   12070:	bl	1aaac <__assert_fail@plt+0x99f4>
   12074:	cmp	r0, #0
   12078:	beq	12148 <__assert_fail@plt+0x1090>
   1207c:	movw	r0, #57712	; 0xe170
   12080:	movt	r0, #2
   12084:	ldrb	r0, [r0]
   12088:	tst	r0, #1
   1208c:	beq	120a0 <__assert_fail@plt+0xfe8>
   12090:	bl	10fec <__errno_location@plt>
   12094:	ldr	r0, [r0]
   12098:	cmp	r0, #32
   1209c:	beq	12148 <__assert_fail@plt+0x1090>
   120a0:	movw	r0, #53675	; 0xd1ab
   120a4:	movt	r0, #1
   120a8:	bl	10fbc <gettext@plt>
   120ac:	str	r0, [fp, #-4]
   120b0:	movw	r0, #57708	; 0xe16c
   120b4:	movt	r0, #2
   120b8:	ldr	r0, [r0]
   120bc:	movw	lr, #0
   120c0:	cmp	r0, lr
   120c4:	beq	1211c <__assert_fail@plt+0x1064>
   120c8:	bl	10fec <__errno_location@plt>
   120cc:	ldr	r1, [r0]
   120d0:	movw	r0, #57708	; 0xe16c
   120d4:	movt	r0, #2
   120d8:	ldr	r0, [r0]
   120dc:	str	r1, [fp, #-8]
   120e0:	bl	148a0 <__assert_fail@plt+0x37e8>
   120e4:	ldr	r1, [fp, #-4]
   120e8:	movw	lr, #0
   120ec:	str	r0, [sp, #12]
   120f0:	mov	r0, lr
   120f4:	ldr	lr, [fp, #-8]
   120f8:	str	r1, [sp, #8]
   120fc:	mov	r1, lr
   12100:	movw	r2, #53687	; 0xd1b7
   12104:	movt	r2, #1
   12108:	ldr	r3, [sp, #12]
   1210c:	ldr	ip, [sp, #8]
   12110:	str	ip, [sp]
   12114:	bl	10f5c <error@plt>
   12118:	b	12138 <__assert_fail@plt+0x1080>
   1211c:	bl	10fec <__errno_location@plt>
   12120:	ldr	r1, [r0]
   12124:	ldr	r3, [fp, #-4]
   12128:	movw	r0, #0
   1212c:	movw	r2, #53691	; 0xd1bb
   12130:	movt	r2, #1
   12134:	bl	10f5c <error@plt>
   12138:	movw	r0, #57584	; 0xe0f0
   1213c:	movt	r0, #2
   12140:	ldr	r0, [r0]
   12144:	bl	10eb4 <_exit@plt>
   12148:	movw	r0, #57672	; 0xe148
   1214c:	movt	r0, #2
   12150:	ldr	r0, [r0]
   12154:	bl	1aaac <__assert_fail@plt+0x99f4>
   12158:	cmp	r0, #0
   1215c:	beq	12170 <__assert_fail@plt+0x10b8>
   12160:	movw	r0, #57584	; 0xe0f0
   12164:	movt	r0, #2
   12168:	ldr	r0, [r0]
   1216c:	bl	10eb4 <_exit@plt>
   12170:	mov	sp, fp
   12174:	pop	{fp, pc}
   12178:	push	{r4, r5, fp, lr}
   1217c:	add	fp, sp, #8
   12180:	sub	sp, sp, #48	; 0x30
   12184:	ldr	r1, [fp, #12]
   12188:	ldr	ip, [fp, #8]
   1218c:	ldr	lr, [fp, #16]
   12190:	str	r0, [fp, #-12]
   12194:	str	r3, [fp, #-20]	; 0xffffffec
   12198:	str	r2, [fp, #-24]	; 0xffffffe8
   1219c:	str	r1, [sp, #28]
   121a0:	str	ip, [sp, #24]
   121a4:	ldr	r0, [fp, #-12]
   121a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   121b0:	ldr	r1, [sp, #24]
   121b4:	ldr	ip, [sp, #28]
   121b8:	ldr	r4, [fp, #16]
   121bc:	mov	r5, sp
   121c0:	str	r4, [r5, #8]
   121c4:	str	ip, [r5, #4]
   121c8:	str	r1, [r5]
   121cc:	str	lr, [sp, #20]
   121d0:	bl	10e78 <posix_fadvise64@plt>
   121d4:	str	r0, [sp, #16]
   121d8:	sub	sp, fp, #8
   121dc:	pop	{r4, r5, fp, pc}
   121e0:	push	{fp, lr}
   121e4:	mov	fp, sp
   121e8:	sub	sp, sp, #24
   121ec:	str	r0, [fp, #-4]
   121f0:	str	r1, [fp, #-8]
   121f4:	ldr	r0, [fp, #-4]
   121f8:	movw	r1, #0
   121fc:	cmp	r0, r1
   12200:	beq	12230 <__assert_fail@plt+0x1178>
   12204:	ldr	r0, [fp, #-4]
   12208:	bl	11010 <fileno@plt>
   1220c:	ldr	lr, [fp, #-8]
   12210:	mov	r1, sp
   12214:	str	lr, [r1, #8]
   12218:	mov	lr, #0
   1221c:	str	lr, [r1, #4]
   12220:	str	lr, [r1]
   12224:	mov	r2, lr
   12228:	mov	r3, lr
   1222c:	bl	12178 <__assert_fail@plt+0x10c0>
   12230:	mov	sp, fp
   12234:	pop	{fp, pc}
   12238:	push	{fp, lr}
   1223c:	mov	fp, sp
   12240:	sub	sp, sp, #32
   12244:	str	r0, [fp, #-8]
   12248:	movw	r0, #0
   1224c:	str	r0, [fp, #-12]
   12250:	str	r0, [sp, #12]
   12254:	ldr	r0, [fp, #-8]
   12258:	bl	11010 <fileno@plt>
   1225c:	str	r0, [sp, #16]
   12260:	ldr	r0, [sp, #16]
   12264:	cmp	r0, #0
   12268:	bge	1227c <__assert_fail@plt+0x11c4>
   1226c:	ldr	r0, [fp, #-8]
   12270:	bl	11028 <fclose@plt>
   12274:	str	r0, [fp, #-4]
   12278:	b	12318 <__assert_fail@plt+0x1260>
   1227c:	ldr	r0, [fp, #-8]
   12280:	bl	10f80 <__freading@plt>
   12284:	cmp	r0, #0
   12288:	beq	122c0 <__assert_fail@plt+0x1208>
   1228c:	ldr	r0, [fp, #-8]
   12290:	bl	11010 <fileno@plt>
   12294:	mov	lr, sp
   12298:	mov	r1, #1
   1229c:	str	r1, [lr]
   122a0:	mov	r1, #0
   122a4:	mov	r2, r1
   122a8:	mov	r3, r1
   122ac:	bl	10f20 <lseek64@plt>
   122b0:	and	r0, r0, r1
   122b4:	cmn	r0, #1
   122b8:	beq	122dc <__assert_fail@plt+0x1224>
   122bc:	b	122c0 <__assert_fail@plt+0x1208>
   122c0:	ldr	r0, [fp, #-8]
   122c4:	bl	12324 <__assert_fail@plt+0x126c>
   122c8:	cmp	r0, #0
   122cc:	beq	122dc <__assert_fail@plt+0x1224>
   122d0:	bl	10fec <__errno_location@plt>
   122d4:	ldr	r0, [r0]
   122d8:	str	r0, [fp, #-12]
   122dc:	ldr	r0, [fp, #-8]
   122e0:	bl	11028 <fclose@plt>
   122e4:	str	r0, [sp, #12]
   122e8:	ldr	r0, [fp, #-12]
   122ec:	cmp	r0, #0
   122f0:	beq	12310 <__assert_fail@plt+0x1258>
   122f4:	ldr	r0, [fp, #-12]
   122f8:	str	r0, [sp, #8]
   122fc:	bl	10fec <__errno_location@plt>
   12300:	ldr	lr, [sp, #8]
   12304:	str	lr, [r0]
   12308:	mvn	r0, #0
   1230c:	str	r0, [sp, #12]
   12310:	ldr	r0, [sp, #12]
   12314:	str	r0, [fp, #-4]
   12318:	ldr	r0, [fp, #-4]
   1231c:	mov	sp, fp
   12320:	pop	{fp, pc}
   12324:	push	{fp, lr}
   12328:	mov	fp, sp
   1232c:	sub	sp, sp, #8
   12330:	str	r0, [sp]
   12334:	ldr	r0, [sp]
   12338:	movw	r1, #0
   1233c:	cmp	r0, r1
   12340:	beq	12354 <__assert_fail@plt+0x129c>
   12344:	ldr	r0, [sp]
   12348:	bl	10f80 <__freading@plt>
   1234c:	cmp	r0, #0
   12350:	bne	12364 <__assert_fail@plt+0x12ac>
   12354:	ldr	r0, [sp]
   12358:	bl	10e90 <fflush@plt>
   1235c:	str	r0, [sp, #4]
   12360:	b	12378 <__assert_fail@plt+0x12c0>
   12364:	ldr	r0, [sp]
   12368:	bl	12384 <__assert_fail@plt+0x12cc>
   1236c:	ldr	r0, [sp]
   12370:	bl	10e90 <fflush@plt>
   12374:	str	r0, [sp, #4]
   12378:	ldr	r0, [sp, #4]
   1237c:	mov	sp, fp
   12380:	pop	{fp, pc}
   12384:	push	{fp, lr}
   12388:	mov	fp, sp
   1238c:	sub	sp, sp, #16
   12390:	str	r0, [fp, #-4]
   12394:	ldr	r0, [fp, #-4]
   12398:	ldr	r0, [r0]
   1239c:	and	r0, r0, #256	; 0x100
   123a0:	cmp	r0, #0
   123a4:	beq	123cc <__assert_fail@plt+0x1314>
   123a8:	ldr	r0, [fp, #-4]
   123ac:	mov	r1, sp
   123b0:	mov	r2, #1
   123b4:	str	r2, [r1]
   123b8:	mov	r1, #0
   123bc:	mov	r2, r1
   123c0:	mov	r3, r1
   123c4:	bl	123d4 <__assert_fail@plt+0x131c>
   123c8:	str	r0, [sp, #8]
   123cc:	mov	sp, fp
   123d0:	pop	{fp, pc}
   123d4:	push	{fp, lr}
   123d8:	mov	fp, sp
   123dc:	sub	sp, sp, #32
   123e0:	ldr	r1, [fp, #8]
   123e4:	str	r0, [fp, #-8]
   123e8:	str	r3, [sp, #20]
   123ec:	str	r2, [sp, #16]
   123f0:	ldr	r0, [fp, #-8]
   123f4:	ldr	r0, [r0, #8]
   123f8:	ldr	r2, [fp, #-8]
   123fc:	ldr	r2, [r2, #4]
   12400:	cmp	r0, r2
   12404:	str	r1, [sp, #4]
   12408:	bne	124b4 <__assert_fail@plt+0x13fc>
   1240c:	ldr	r0, [fp, #-8]
   12410:	ldr	r0, [r0, #20]
   12414:	ldr	r1, [fp, #-8]
   12418:	ldr	r1, [r1, #16]
   1241c:	cmp	r0, r1
   12420:	bne	124b4 <__assert_fail@plt+0x13fc>
   12424:	ldr	r0, [fp, #-8]
   12428:	ldr	r0, [r0, #36]	; 0x24
   1242c:	movw	r1, #0
   12430:	cmp	r0, r1
   12434:	bne	124b4 <__assert_fail@plt+0x13fc>
   12438:	ldr	r0, [fp, #-8]
   1243c:	bl	11010 <fileno@plt>
   12440:	ldr	r2, [sp, #16]
   12444:	ldr	r3, [sp, #20]
   12448:	ldr	lr, [fp, #8]
   1244c:	mov	r1, sp
   12450:	str	lr, [r1]
   12454:	bl	10f20 <lseek64@plt>
   12458:	str	r1, [sp, #12]
   1245c:	str	r0, [sp, #8]
   12460:	ldr	r0, [sp, #8]
   12464:	ldr	r1, [sp, #12]
   12468:	and	r0, r0, r1
   1246c:	cmn	r0, #1
   12470:	bne	12484 <__assert_fail@plt+0x13cc>
   12474:	b	12478 <__assert_fail@plt+0x13c0>
   12478:	mvn	r0, #0
   1247c:	str	r0, [fp, #-4]
   12480:	b	124d4 <__assert_fail@plt+0x141c>
   12484:	ldr	r0, [fp, #-8]
   12488:	ldr	r1, [r0]
   1248c:	bic	r1, r1, #16
   12490:	str	r1, [r0]
   12494:	ldr	r0, [sp, #8]
   12498:	ldr	r1, [sp, #12]
   1249c:	ldr	r2, [fp, #-8]
   124a0:	str	r1, [r2, #84]	; 0x54
   124a4:	str	r0, [r2, #80]	; 0x50
   124a8:	movw	r0, #0
   124ac:	str	r0, [fp, #-4]
   124b0:	b	124d4 <__assert_fail@plt+0x141c>
   124b4:	ldr	r0, [fp, #-8]
   124b8:	ldr	r2, [sp, #16]
   124bc:	ldr	r3, [sp, #20]
   124c0:	ldr	r1, [fp, #8]
   124c4:	mov	ip, sp
   124c8:	str	r1, [ip]
   124cc:	bl	11034 <fseeko64@plt>
   124d0:	str	r0, [fp, #-4]
   124d4:	ldr	r0, [fp, #-4]
   124d8:	mov	sp, fp
   124dc:	pop	{fp, pc}
   124e0:	push	{fp, lr}
   124e4:	mov	fp, sp
   124e8:	sub	sp, sp, #24
   124ec:	str	r0, [fp, #-4]
   124f0:	ldr	r0, [fp, #-4]
   124f4:	movw	r1, #0
   124f8:	cmp	r0, r1
   124fc:	bne	12520 <__assert_fail@plt+0x1468>
   12500:	movw	r0, #57672	; 0xe148
   12504:	movt	r0, #2
   12508:	ldr	r1, [r0]
   1250c:	movw	r0, #53694	; 0xd1be
   12510:	movt	r0, #1
   12514:	bl	11088 <fputs@plt>
   12518:	str	r0, [sp, #8]
   1251c:	bl	110a0 <abort@plt>
   12520:	ldr	r0, [fp, #-4]
   12524:	movw	r1, #47	; 0x2f
   12528:	bl	1104c <strrchr@plt>
   1252c:	str	r0, [fp, #-8]
   12530:	ldr	r0, [fp, #-8]
   12534:	movw	r1, #0
   12538:	cmp	r0, r1
   1253c:	beq	12550 <__assert_fail@plt+0x1498>
   12540:	ldr	r0, [fp, #-8]
   12544:	add	r0, r0, #1
   12548:	str	r0, [sp, #4]
   1254c:	b	12558 <__assert_fail@plt+0x14a0>
   12550:	ldr	r0, [fp, #-4]
   12554:	str	r0, [sp, #4]
   12558:	ldr	r0, [sp, #4]
   1255c:	str	r0, [sp, #12]
   12560:	ldr	r0, [sp, #12]
   12564:	ldr	r1, [fp, #-4]
   12568:	sub	r0, r0, r1
   1256c:	cmp	r0, #7
   12570:	blt	125dc <__assert_fail@plt+0x1524>
   12574:	ldr	r0, [sp, #12]
   12578:	mvn	r1, #6
   1257c:	add	r0, r0, r1
   12580:	movw	r1, #53750	; 0xd1f6
   12584:	movt	r1, #1
   12588:	movw	r2, #7
   1258c:	bl	11094 <strncmp@plt>
   12590:	cmp	r0, #0
   12594:	bne	125dc <__assert_fail@plt+0x1524>
   12598:	ldr	r0, [sp, #12]
   1259c:	str	r0, [fp, #-4]
   125a0:	ldr	r0, [sp, #12]
   125a4:	movw	r1, #53758	; 0xd1fe
   125a8:	movt	r1, #1
   125ac:	movw	r2, #3
   125b0:	bl	11094 <strncmp@plt>
   125b4:	cmp	r0, #0
   125b8:	bne	125d8 <__assert_fail@plt+0x1520>
   125bc:	ldr	r0, [sp, #12]
   125c0:	add	r0, r0, #3
   125c4:	str	r0, [fp, #-4]
   125c8:	ldr	r0, [fp, #-4]
   125cc:	movw	r1, #57656	; 0xe138
   125d0:	movt	r1, #2
   125d4:	str	r0, [r1]
   125d8:	b	125dc <__assert_fail@plt+0x1524>
   125dc:	ldr	r0, [fp, #-4]
   125e0:	movw	r1, #57716	; 0xe174
   125e4:	movt	r1, #2
   125e8:	str	r0, [r1]
   125ec:	ldr	r0, [fp, #-4]
   125f0:	movw	r1, #57660	; 0xe13c
   125f4:	movt	r1, #2
   125f8:	str	r0, [r1]
   125fc:	mov	sp, fp
   12600:	pop	{fp, pc}
   12604:	push	{fp, lr}
   12608:	mov	fp, sp
   1260c:	sub	sp, sp, #24
   12610:	str	r0, [fp, #-4]
   12614:	bl	10fec <__errno_location@plt>
   12618:	ldr	r0, [r0]
   1261c:	str	r0, [fp, #-8]
   12620:	ldr	r0, [fp, #-4]
   12624:	movw	lr, #0
   12628:	cmp	r0, lr
   1262c:	beq	1263c <__assert_fail@plt+0x1584>
   12630:	ldr	r0, [fp, #-4]
   12634:	str	r0, [sp, #8]
   12638:	b	1264c <__assert_fail@plt+0x1594>
   1263c:	movw	r0, #57720	; 0xe178
   12640:	movt	r0, #2
   12644:	str	r0, [sp, #8]
   12648:	b	1264c <__assert_fail@plt+0x1594>
   1264c:	ldr	r0, [sp, #8]
   12650:	movw	r1, #48	; 0x30
   12654:	bl	18264 <__assert_fail@plt+0x71ac>
   12658:	str	r0, [sp, #12]
   1265c:	ldr	r0, [fp, #-8]
   12660:	str	r0, [sp, #4]
   12664:	bl	10fec <__errno_location@plt>
   12668:	ldr	r1, [sp, #4]
   1266c:	str	r1, [r0]
   12670:	ldr	r0, [sp, #12]
   12674:	mov	sp, fp
   12678:	pop	{fp, pc}
   1267c:	sub	sp, sp, #8
   12680:	str	r0, [sp, #4]
   12684:	ldr	r0, [sp, #4]
   12688:	movw	r1, #0
   1268c:	cmp	r0, r1
   12690:	beq	126a0 <__assert_fail@plt+0x15e8>
   12694:	ldr	r0, [sp, #4]
   12698:	str	r0, [sp]
   1269c:	b	126b0 <__assert_fail@plt+0x15f8>
   126a0:	movw	r0, #57720	; 0xe178
   126a4:	movt	r0, #2
   126a8:	str	r0, [sp]
   126ac:	b	126b0 <__assert_fail@plt+0x15f8>
   126b0:	ldr	r0, [sp]
   126b4:	ldr	r0, [r0]
   126b8:	add	sp, sp, #8
   126bc:	bx	lr
   126c0:	sub	sp, sp, #16
   126c4:	str	r0, [sp, #12]
   126c8:	str	r1, [sp, #8]
   126cc:	ldr	r0, [sp, #8]
   126d0:	ldr	r1, [sp, #12]
   126d4:	movw	r2, #0
   126d8:	cmp	r1, r2
   126dc:	str	r0, [sp, #4]
   126e0:	beq	126f0 <__assert_fail@plt+0x1638>
   126e4:	ldr	r0, [sp, #12]
   126e8:	str	r0, [sp]
   126ec:	b	12700 <__assert_fail@plt+0x1648>
   126f0:	movw	r0, #57720	; 0xe178
   126f4:	movt	r0, #2
   126f8:	str	r0, [sp]
   126fc:	b	12700 <__assert_fail@plt+0x1648>
   12700:	ldr	r0, [sp]
   12704:	ldr	r1, [sp, #4]
   12708:	str	r1, [r0]
   1270c:	add	sp, sp, #16
   12710:	bx	lr
   12714:	sub	sp, sp, #32
   12718:	str	r0, [sp, #28]
   1271c:	strb	r1, [sp, #27]
   12720:	str	r2, [sp, #20]
   12724:	ldrb	r0, [sp, #27]
   12728:	strb	r0, [sp, #19]
   1272c:	ldr	r0, [sp, #28]
   12730:	movw	r1, #0
   12734:	cmp	r0, r1
   12738:	beq	12748 <__assert_fail@plt+0x1690>
   1273c:	ldr	r0, [sp, #28]
   12740:	str	r0, [sp]
   12744:	b	12758 <__assert_fail@plt+0x16a0>
   12748:	movw	r0, #57720	; 0xe178
   1274c:	movt	r0, #2
   12750:	str	r0, [sp]
   12754:	b	12758 <__assert_fail@plt+0x16a0>
   12758:	ldr	r0, [sp]
   1275c:	add	r0, r0, #8
   12760:	ldrb	r1, [sp, #19]
   12764:	lsr	r1, r1, #5
   12768:	add	r0, r0, r1, lsl #2
   1276c:	str	r0, [sp, #12]
   12770:	ldrb	r0, [sp, #19]
   12774:	and	r0, r0, #31
   12778:	str	r0, [sp, #8]
   1277c:	ldr	r0, [sp, #12]
   12780:	ldr	r0, [r0]
   12784:	ldr	r1, [sp, #8]
   12788:	lsr	r0, r0, r1
   1278c:	and	r0, r0, #1
   12790:	str	r0, [sp, #4]
   12794:	ldr	r0, [sp, #20]
   12798:	and	r0, r0, #1
   1279c:	ldr	r1, [sp, #4]
   127a0:	eor	r0, r0, r1
   127a4:	ldr	r1, [sp, #8]
   127a8:	lsl	r0, r0, r1
   127ac:	ldr	r1, [sp, #12]
   127b0:	ldr	r2, [r1]
   127b4:	eor	r0, r2, r0
   127b8:	str	r0, [r1]
   127bc:	ldr	r0, [sp, #4]
   127c0:	add	sp, sp, #32
   127c4:	bx	lr
   127c8:	sub	sp, sp, #12
   127cc:	str	r0, [sp, #8]
   127d0:	str	r1, [sp, #4]
   127d4:	ldr	r0, [sp, #8]
   127d8:	movw	r1, #0
   127dc:	cmp	r0, r1
   127e0:	bne	127f0 <__assert_fail@plt+0x1738>
   127e4:	movw	r0, #57720	; 0xe178
   127e8:	movt	r0, #2
   127ec:	str	r0, [sp, #8]
   127f0:	ldr	r0, [sp, #8]
   127f4:	ldr	r0, [r0, #4]
   127f8:	str	r0, [sp]
   127fc:	ldr	r0, [sp, #4]
   12800:	ldr	r1, [sp, #8]
   12804:	str	r0, [r1, #4]
   12808:	ldr	r0, [sp]
   1280c:	add	sp, sp, #12
   12810:	bx	lr
   12814:	push	{fp, lr}
   12818:	mov	fp, sp
   1281c:	sub	sp, sp, #16
   12820:	str	r0, [fp, #-4]
   12824:	str	r1, [sp, #8]
   12828:	str	r2, [sp, #4]
   1282c:	ldr	r0, [fp, #-4]
   12830:	movw	r1, #0
   12834:	cmp	r0, r1
   12838:	bne	12848 <__assert_fail@plt+0x1790>
   1283c:	movw	r0, #57720	; 0xe178
   12840:	movt	r0, #2
   12844:	str	r0, [fp, #-4]
   12848:	ldr	r0, [fp, #-4]
   1284c:	movw	r1, #10
   12850:	str	r1, [r0]
   12854:	ldr	r0, [sp, #8]
   12858:	movw	r1, #0
   1285c:	cmp	r0, r1
   12860:	beq	12874 <__assert_fail@plt+0x17bc>
   12864:	ldr	r0, [sp, #4]
   12868:	movw	r1, #0
   1286c:	cmp	r0, r1
   12870:	bne	12878 <__assert_fail@plt+0x17c0>
   12874:	bl	110a0 <abort@plt>
   12878:	ldr	r0, [sp, #8]
   1287c:	ldr	r1, [fp, #-4]
   12880:	str	r0, [r1, #40]	; 0x28
   12884:	ldr	r0, [sp, #4]
   12888:	ldr	r1, [fp, #-4]
   1288c:	str	r0, [r1, #44]	; 0x2c
   12890:	mov	sp, fp
   12894:	pop	{fp, pc}
   12898:	push	{r4, r5, r6, sl, fp, lr}
   1289c:	add	fp, sp, #16
   128a0:	sub	sp, sp, #64	; 0x40
   128a4:	ldr	ip, [fp, #8]
   128a8:	str	r0, [fp, #-20]	; 0xffffffec
   128ac:	str	r1, [fp, #-24]	; 0xffffffe8
   128b0:	str	r2, [fp, #-28]	; 0xffffffe4
   128b4:	str	r3, [fp, #-32]	; 0xffffffe0
   128b8:	ldr	r0, [fp, #8]
   128bc:	movw	r1, #0
   128c0:	cmp	r0, r1
   128c4:	str	ip, [sp, #32]
   128c8:	beq	128d8 <__assert_fail@plt+0x1820>
   128cc:	ldr	r0, [fp, #8]
   128d0:	str	r0, [sp, #28]
   128d4:	b	128e8 <__assert_fail@plt+0x1830>
   128d8:	movw	r0, #57720	; 0xe178
   128dc:	movt	r0, #2
   128e0:	str	r0, [sp, #28]
   128e4:	b	128e8 <__assert_fail@plt+0x1830>
   128e8:	ldr	r0, [sp, #28]
   128ec:	str	r0, [fp, #-36]	; 0xffffffdc
   128f0:	bl	10fec <__errno_location@plt>
   128f4:	ldr	r0, [r0]
   128f8:	str	r0, [sp, #40]	; 0x28
   128fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12904:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12908:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1290c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   12910:	ldr	lr, [lr]
   12914:	ldr	ip, [fp, #-36]	; 0xffffffdc
   12918:	ldr	ip, [ip, #4]
   1291c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   12920:	add	r4, r4, #8
   12924:	ldr	r5, [fp, #-36]	; 0xffffffdc
   12928:	ldr	r5, [r5, #40]	; 0x28
   1292c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   12930:	ldr	r6, [r6, #44]	; 0x2c
   12934:	str	lr, [sp]
   12938:	str	ip, [sp, #4]
   1293c:	str	r4, [sp, #8]
   12940:	str	r5, [sp, #12]
   12944:	str	r6, [sp, #16]
   12948:	bl	12970 <__assert_fail@plt+0x18b8>
   1294c:	str	r0, [sp, #36]	; 0x24
   12950:	ldr	r0, [sp, #40]	; 0x28
   12954:	str	r0, [sp, #24]
   12958:	bl	10fec <__errno_location@plt>
   1295c:	ldr	r1, [sp, #24]
   12960:	str	r1, [r0]
   12964:	ldr	r0, [sp, #36]	; 0x24
   12968:	sub	sp, fp, #16
   1296c:	pop	{r4, r5, r6, sl, fp, pc}
   12970:	push	{r4, r5, r6, sl, fp, lr}
   12974:	add	fp, sp, #16
   12978:	sub	sp, sp, #168	; 0xa8
   1297c:	ldr	ip, [fp, #24]
   12980:	ldr	lr, [fp, #20]
   12984:	ldr	r4, [fp, #16]
   12988:	ldr	r5, [fp, #12]
   1298c:	ldr	r6, [fp, #8]
   12990:	str	r0, [fp, #-24]	; 0xffffffe8
   12994:	str	r1, [fp, #-28]	; 0xffffffe4
   12998:	str	r2, [fp, #-32]	; 0xffffffe0
   1299c:	str	r3, [fp, #-36]	; 0xffffffdc
   129a0:	movw	r0, #0
   129a4:	str	r0, [fp, #-44]	; 0xffffffd4
   129a8:	str	r0, [fp, #-48]	; 0xffffffd0
   129ac:	str	r0, [fp, #-52]	; 0xffffffcc
   129b0:	str	r0, [fp, #-56]	; 0xffffffc8
   129b4:	movw	r0, #0
   129b8:	strb	r0, [fp, #-57]	; 0xffffffc7
   129bc:	str	r6, [sp, #80]	; 0x50
   129c0:	str	lr, [sp, #76]	; 0x4c
   129c4:	str	r4, [sp, #72]	; 0x48
   129c8:	str	r5, [sp, #68]	; 0x44
   129cc:	str	ip, [sp, #64]	; 0x40
   129d0:	bl	10f2c <__ctype_get_mb_cur_max@plt>
   129d4:	cmp	r0, #1
   129d8:	movw	r0, #0
   129dc:	moveq	r0, #1
   129e0:	and	r0, r0, #1
   129e4:	strb	r0, [fp, #-58]	; 0xffffffc6
   129e8:	ldr	r0, [fp, #12]
   129ec:	and	r0, r0, #2
   129f0:	cmp	r0, #0
   129f4:	movw	r0, #0
   129f8:	movne	r0, #1
   129fc:	and	r0, r0, #1
   12a00:	strb	r0, [fp, #-59]	; 0xffffffc5
   12a04:	movw	r0, #0
   12a08:	strb	r0, [fp, #-60]	; 0xffffffc4
   12a0c:	strb	r0, [fp, #-61]	; 0xffffffc3
   12a10:	movw	r0, #1
   12a14:	strb	r0, [fp, #-62]	; 0xffffffc2
   12a18:	ldr	r0, [fp, #8]
   12a1c:	cmp	r0, #10
   12a20:	str	r0, [sp, #60]	; 0x3c
   12a24:	bhi	12c4c <__assert_fail@plt+0x1b94>
   12a28:	add	r0, pc, #8
   12a2c:	ldr	r1, [sp, #60]	; 0x3c
   12a30:	ldr	r0, [r0, r1, lsl #2]
   12a34:	mov	pc, r0
   12a38:	andeq	r2, r1, r0, asr #24
   12a3c:			; <UNDEFINED> instruction: 0x00012bbc
   12a40:	ldrdeq	r2, [r1], -ip
   12a44:			; <UNDEFINED> instruction: 0x00012bb4
   12a48:	andeq	r2, r1, r4, asr #23
   12a4c:	andeq	r2, r1, r4, ror sl
   12a50:	andeq	r2, r1, r4, ror #20
   12a54:	ldrdeq	r2, [r1], -r8
   12a58:	andeq	r2, r1, ip, ror #21
   12a5c:	andeq	r2, r1, ip, ror #21
   12a60:	andeq	r2, r1, ip, ror #21
   12a64:	movw	r0, #5
   12a68:	str	r0, [fp, #8]
   12a6c:	movw	r0, #1
   12a70:	strb	r0, [fp, #-59]	; 0xffffffc5
   12a74:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12a78:	tst	r0, #1
   12a7c:	bne	12ab8 <__assert_fail@plt+0x1a00>
   12a80:	b	12a84 <__assert_fail@plt+0x19cc>
   12a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a8c:	cmp	r0, r1
   12a90:	bcs	12aa8 <__assert_fail@plt+0x19f0>
   12a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a9c:	add	r0, r0, r1
   12aa0:	movw	r1, #34	; 0x22
   12aa4:	strb	r1, [r0]
   12aa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12aac:	add	r0, r0, #1
   12ab0:	str	r0, [fp, #-44]	; 0xffffffd4
   12ab4:	b	12ab8 <__assert_fail@plt+0x1a00>
   12ab8:	movw	r0, #1
   12abc:	strb	r0, [fp, #-57]	; 0xffffffc7
   12ac0:	movw	r0, #53838	; 0xd24e
   12ac4:	movt	r0, #1
   12ac8:	str	r0, [fp, #-52]	; 0xffffffcc
   12acc:	movw	r0, #1
   12ad0:	str	r0, [fp, #-56]	; 0xffffffc8
   12ad4:	b	12c50 <__assert_fail@plt+0x1b98>
   12ad8:	movw	r0, #1
   12adc:	strb	r0, [fp, #-57]	; 0xffffffc7
   12ae0:	movw	r0, #0
   12ae4:	strb	r0, [fp, #-59]	; 0xffffffc5
   12ae8:	b	12c50 <__assert_fail@plt+0x1b98>
   12aec:	ldr	r0, [fp, #8]
   12af0:	cmp	r0, #10
   12af4:	beq	12b20 <__assert_fail@plt+0x1a68>
   12af8:	ldr	r1, [fp, #8]
   12afc:	movw	r0, #53840	; 0xd250
   12b00:	movt	r0, #1
   12b04:	bl	14b60 <__assert_fail@plt+0x3aa8>
   12b08:	str	r0, [fp, #20]
   12b0c:	ldr	r1, [fp, #8]
   12b10:	movw	r0, #53842	; 0xd252
   12b14:	movt	r0, #1
   12b18:	bl	14b60 <__assert_fail@plt+0x3aa8>
   12b1c:	str	r0, [fp, #24]
   12b20:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b24:	tst	r0, #1
   12b28:	bne	12b94 <__assert_fail@plt+0x1adc>
   12b2c:	ldr	r0, [fp, #20]
   12b30:	str	r0, [fp, #-52]	; 0xffffffcc
   12b34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12b38:	ldrsb	r0, [r0]
   12b3c:	cmp	r0, #0
   12b40:	beq	12b90 <__assert_fail@plt+0x1ad8>
   12b44:	b	12b48 <__assert_fail@plt+0x1a90>
   12b48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12b50:	cmp	r0, r1
   12b54:	bcs	12b70 <__assert_fail@plt+0x1ab8>
   12b58:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12b5c:	ldrb	r0, [r0]
   12b60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12b64:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12b68:	add	r1, r1, r2
   12b6c:	strb	r0, [r1]
   12b70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b74:	add	r0, r0, #1
   12b78:	str	r0, [fp, #-44]	; 0xffffffd4
   12b7c:	b	12b80 <__assert_fail@plt+0x1ac8>
   12b80:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12b84:	add	r0, r0, #1
   12b88:	str	r0, [fp, #-52]	; 0xffffffcc
   12b8c:	b	12b34 <__assert_fail@plt+0x1a7c>
   12b90:	b	12b94 <__assert_fail@plt+0x1adc>
   12b94:	movw	r0, #1
   12b98:	strb	r0, [fp, #-57]	; 0xffffffc7
   12b9c:	ldr	r0, [fp, #24]
   12ba0:	str	r0, [fp, #-52]	; 0xffffffcc
   12ba4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12ba8:	bl	10fc8 <strlen@plt>
   12bac:	str	r0, [fp, #-56]	; 0xffffffc8
   12bb0:	b	12c50 <__assert_fail@plt+0x1b98>
   12bb4:	movw	r0, #1
   12bb8:	strb	r0, [fp, #-57]	; 0xffffffc7
   12bbc:	movw	r0, #1
   12bc0:	strb	r0, [fp, #-59]	; 0xffffffc5
   12bc4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12bc8:	tst	r0, #1
   12bcc:	bne	12bd8 <__assert_fail@plt+0x1b20>
   12bd0:	movw	r0, #1
   12bd4:	strb	r0, [fp, #-57]	; 0xffffffc7
   12bd8:	b	12bdc <__assert_fail@plt+0x1b24>
   12bdc:	movw	r0, #2
   12be0:	str	r0, [fp, #8]
   12be4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12be8:	tst	r0, #1
   12bec:	bne	12c28 <__assert_fail@plt+0x1b70>
   12bf0:	b	12bf4 <__assert_fail@plt+0x1b3c>
   12bf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bfc:	cmp	r0, r1
   12c00:	bcs	12c18 <__assert_fail@plt+0x1b60>
   12c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c0c:	add	r0, r0, r1
   12c10:	movw	r1, #39	; 0x27
   12c14:	strb	r1, [r0]
   12c18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c1c:	add	r0, r0, #1
   12c20:	str	r0, [fp, #-44]	; 0xffffffd4
   12c24:	b	12c28 <__assert_fail@plt+0x1b70>
   12c28:	movw	r0, #53842	; 0xd252
   12c2c:	movt	r0, #1
   12c30:	str	r0, [fp, #-52]	; 0xffffffcc
   12c34:	movw	r0, #1
   12c38:	str	r0, [fp, #-56]	; 0xffffffc8
   12c3c:	b	12c50 <__assert_fail@plt+0x1b98>
   12c40:	movw	r0, #0
   12c44:	strb	r0, [fp, #-59]	; 0xffffffc5
   12c48:	b	12c50 <__assert_fail@plt+0x1b98>
   12c4c:	bl	110a0 <abort@plt>
   12c50:	movw	r0, #0
   12c54:	str	r0, [fp, #-40]	; 0xffffffd8
   12c58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12c5c:	cmn	r0, #1
   12c60:	bne	12c8c <__assert_fail@plt+0x1bd4>
   12c64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12c6c:	add	r0, r0, r1
   12c70:	ldrb	r0, [r0]
   12c74:	cmp	r0, #0
   12c78:	movw	r0, #0
   12c7c:	moveq	r0, #1
   12c80:	and	r0, r0, #1
   12c84:	str	r0, [sp, #56]	; 0x38
   12c88:	b	12ca8 <__assert_fail@plt+0x1bf0>
   12c8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12c90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12c94:	cmp	r0, r1
   12c98:	movw	r0, #0
   12c9c:	moveq	r0, #1
   12ca0:	and	r0, r0, #1
   12ca4:	str	r0, [sp, #56]	; 0x38
   12ca8:	ldr	r0, [sp, #56]	; 0x38
   12cac:	cmp	r0, #0
   12cb0:	movw	r0, #0
   12cb4:	movne	r0, #1
   12cb8:	mvn	r1, #0
   12cbc:	eor	r0, r0, r1
   12cc0:	tst	r0, #1
   12cc4:	beq	13eb4 <__assert_fail@plt+0x2dfc>
   12cc8:	movw	r0, #0
   12ccc:	strb	r0, [fp, #-65]	; 0xffffffbf
   12cd0:	strb	r0, [fp, #-66]	; 0xffffffbe
   12cd4:	strb	r0, [fp, #-67]	; 0xffffffbd
   12cd8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12cdc:	tst	r0, #1
   12ce0:	beq	12d8c <__assert_fail@plt+0x1cd4>
   12ce4:	ldr	r0, [fp, #8]
   12ce8:	cmp	r0, #2
   12cec:	beq	12d8c <__assert_fail@plt+0x1cd4>
   12cf0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12cf4:	cmp	r0, #0
   12cf8:	beq	12d8c <__assert_fail@plt+0x1cd4>
   12cfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d00:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12d04:	add	r0, r0, r1
   12d08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12d0c:	cmn	r1, #1
   12d10:	str	r0, [sp, #52]	; 0x34
   12d14:	bne	12d3c <__assert_fail@plt+0x1c84>
   12d18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12d1c:	movw	r1, #1
   12d20:	cmp	r1, r0
   12d24:	bcs	12d3c <__assert_fail@plt+0x1c84>
   12d28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d2c:	bl	10fc8 <strlen@plt>
   12d30:	str	r0, [fp, #-36]	; 0xffffffdc
   12d34:	str	r0, [sp, #48]	; 0x30
   12d38:	b	12d44 <__assert_fail@plt+0x1c8c>
   12d3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d40:	str	r0, [sp, #48]	; 0x30
   12d44:	ldr	r0, [sp, #48]	; 0x30
   12d48:	ldr	r1, [sp, #52]	; 0x34
   12d4c:	cmp	r1, r0
   12d50:	bhi	12d8c <__assert_fail@plt+0x1cd4>
   12d54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d58:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d5c:	add	r0, r0, r1
   12d60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12d64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12d68:	bl	10ee4 <memcmp@plt>
   12d6c:	cmp	r0, #0
   12d70:	bne	12d8c <__assert_fail@plt+0x1cd4>
   12d74:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12d78:	tst	r0, #1
   12d7c:	beq	12d84 <__assert_fail@plt+0x1ccc>
   12d80:	b	14034 <__assert_fail@plt+0x2f7c>
   12d84:	movw	r0, #1
   12d88:	strb	r0, [fp, #-65]	; 0xffffffbf
   12d8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d94:	ldrb	r0, [r0, r1]
   12d98:	strb	r0, [fp, #-63]	; 0xffffffc1
   12d9c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12da0:	mov	r1, r0
   12da4:	cmp	r0, #126	; 0x7e
   12da8:	str	r1, [sp, #44]	; 0x2c
   12dac:	bhi	1361c <__assert_fail@plt+0x2564>
   12db0:	add	r0, pc, #8
   12db4:	ldr	r1, [sp, #44]	; 0x2c
   12db8:	ldr	r0, [r0, r1, lsl #2]
   12dbc:	mov	pc, r0
   12dc0:			; <UNDEFINED> instruction: 0x00012fbc
   12dc4:	andeq	r3, r1, ip, lsl r6
   12dc8:	andeq	r3, r1, ip, lsl r6
   12dcc:	andeq	r3, r1, ip, lsl r6
   12dd0:	andeq	r3, r1, ip, lsl r6
   12dd4:	andeq	r3, r1, ip, lsl r6
   12dd8:	andeq	r3, r1, ip, lsl r6
   12ddc:	andeq	r3, r1, r4, asr #7
   12de0:	ldrdeq	r3, [r1], -r0
   12de4:	andeq	r3, r1, r0, lsl #8
   12de8:	andeq	r3, r1, r8, ror #7
   12dec:	andeq	r3, r1, ip, lsl #8
   12df0:	ldrdeq	r3, [r1], -ip
   12df4:	strdeq	r3, [r1], -r4
   12df8:	andeq	r3, r1, ip, lsl r6
   12dfc:	andeq	r3, r1, ip, lsl r6
   12e00:	andeq	r3, r1, ip, lsl r6
   12e04:	andeq	r3, r1, ip, lsl r6
   12e08:	andeq	r3, r1, ip, lsl r6
   12e0c:	andeq	r3, r1, ip, lsl r6
   12e10:	andeq	r3, r1, ip, lsl r6
   12e14:	andeq	r3, r1, ip, lsl r6
   12e18:	andeq	r3, r1, ip, lsl r6
   12e1c:	andeq	r3, r1, ip, lsl r6
   12e20:	andeq	r3, r1, ip, lsl r6
   12e24:	andeq	r3, r1, ip, lsl r6
   12e28:	andeq	r3, r1, ip, lsl r6
   12e2c:	andeq	r3, r1, ip, lsl r6
   12e30:	andeq	r3, r1, ip, lsl r6
   12e34:	andeq	r3, r1, ip, lsl r6
   12e38:	andeq	r3, r1, ip, lsl r6
   12e3c:	andeq	r3, r1, ip, lsl r6
   12e40:	strdeq	r3, [r1], -r0
   12e44:	strdeq	r3, [r1], -r8
   12e48:	strdeq	r3, [r1], -r8
   12e4c:	ldrdeq	r3, [r1], -ip
   12e50:	strdeq	r3, [r1], -r8
   12e54:	andeq	r3, r1, r0, lsl r6
   12e58:	strdeq	r3, [r1], -r8
   12e5c:	andeq	r3, r1, r8, lsl r5
   12e60:	strdeq	r3, [r1], -r8
   12e64:	strdeq	r3, [r1], -r8
   12e68:	strdeq	r3, [r1], -r8
   12e6c:	andeq	r3, r1, r0, lsl r6
   12e70:	andeq	r3, r1, r0, lsl r6
   12e74:	andeq	r3, r1, r0, lsl r6
   12e78:	andeq	r3, r1, r0, lsl r6
   12e7c:	andeq	r3, r1, r0, lsl r6
   12e80:	andeq	r3, r1, r0, lsl r6
   12e84:	andeq	r3, r1, r0, lsl r6
   12e88:	andeq	r3, r1, r0, lsl r6
   12e8c:	andeq	r3, r1, r0, lsl r6
   12e90:	andeq	r3, r1, r0, lsl r6
   12e94:	andeq	r3, r1, r0, lsl r6
   12e98:	andeq	r3, r1, r0, lsl r6
   12e9c:	andeq	r3, r1, r0, lsl r6
   12ea0:	andeq	r3, r1, r0, lsl r6
   12ea4:	andeq	r3, r1, r0, lsl r6
   12ea8:	andeq	r3, r1, r0, lsl r6
   12eac:	strdeq	r3, [r1], -r8
   12eb0:	strdeq	r3, [r1], -r8
   12eb4:	strdeq	r3, [r1], -r8
   12eb8:	strdeq	r3, [r1], -r8
   12ebc:	andeq	r3, r1, r8, asr #3
   12ec0:	andeq	r3, r1, ip, lsl r6
   12ec4:	andeq	r3, r1, r0, lsl r6
   12ec8:	andeq	r3, r1, r0, lsl r6
   12ecc:	andeq	r3, r1, r0, lsl r6
   12ed0:	andeq	r3, r1, r0, lsl r6
   12ed4:	andeq	r3, r1, r0, lsl r6
   12ed8:	andeq	r3, r1, r0, lsl r6
   12edc:	andeq	r3, r1, r0, lsl r6
   12ee0:	andeq	r3, r1, r0, lsl r6
   12ee4:	andeq	r3, r1, r0, lsl r6
   12ee8:	andeq	r3, r1, r0, lsl r6
   12eec:	andeq	r3, r1, r0, lsl r6
   12ef0:	andeq	r3, r1, r0, lsl r6
   12ef4:	andeq	r3, r1, r0, lsl r6
   12ef8:	andeq	r3, r1, r0, lsl r6
   12efc:	andeq	r3, r1, r0, lsl r6
   12f00:	andeq	r3, r1, r0, lsl r6
   12f04:	andeq	r3, r1, r0, lsl r6
   12f08:	andeq	r3, r1, r0, lsl r6
   12f0c:	andeq	r3, r1, r0, lsl r6
   12f10:	andeq	r3, r1, r0, lsl r6
   12f14:	andeq	r3, r1, r0, lsl r6
   12f18:	andeq	r3, r1, r0, lsl r6
   12f1c:	andeq	r3, r1, r0, lsl r6
   12f20:	andeq	r3, r1, r0, lsl r6
   12f24:	andeq	r3, r1, r0, lsl r6
   12f28:	andeq	r3, r1, r0, lsl r6
   12f2c:	strdeq	r3, [r1], -r8
   12f30:	andeq	r3, r1, r8, lsl r4
   12f34:	andeq	r3, r1, r0, lsl r6
   12f38:	strdeq	r3, [r1], -r8
   12f3c:	andeq	r3, r1, r0, lsl r6
   12f40:	strdeq	r3, [r1], -r8
   12f44:	andeq	r3, r1, r0, lsl r6
   12f48:	andeq	r3, r1, r0, lsl r6
   12f4c:	andeq	r3, r1, r0, lsl r6
   12f50:	andeq	r3, r1, r0, lsl r6
   12f54:	andeq	r3, r1, r0, lsl r6
   12f58:	andeq	r3, r1, r0, lsl r6
   12f5c:	andeq	r3, r1, r0, lsl r6
   12f60:	andeq	r3, r1, r0, lsl r6
   12f64:	andeq	r3, r1, r0, lsl r6
   12f68:	andeq	r3, r1, r0, lsl r6
   12f6c:	andeq	r3, r1, r0, lsl r6
   12f70:	andeq	r3, r1, r0, lsl r6
   12f74:	andeq	r3, r1, r0, lsl r6
   12f78:	andeq	r3, r1, r0, lsl r6
   12f7c:	andeq	r3, r1, r0, lsl r6
   12f80:	andeq	r3, r1, r0, lsl r6
   12f84:	andeq	r3, r1, r0, lsl r6
   12f88:	andeq	r3, r1, r0, lsl r6
   12f8c:	andeq	r3, r1, r0, lsl r6
   12f90:	andeq	r3, r1, r0, lsl r6
   12f94:	andeq	r3, r1, r0, lsl r6
   12f98:	andeq	r3, r1, r0, lsl r6
   12f9c:	andeq	r3, r1, r0, lsl r6
   12fa0:	andeq	r3, r1, r0, lsl r6
   12fa4:	andeq	r3, r1, r0, lsl r6
   12fa8:	andeq	r3, r1, r0, lsl r6
   12fac:	andeq	r3, r1, r8, lsr #9
   12fb0:	strdeq	r3, [r1], -r8
   12fb4:	andeq	r3, r1, r8, lsr #9
   12fb8:	ldrdeq	r3, [r1], -ip
   12fbc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12fc0:	tst	r0, #1
   12fc4:	beq	131ac <__assert_fail@plt+0x20f4>
   12fc8:	b	12fcc <__assert_fail@plt+0x1f14>
   12fcc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12fd0:	tst	r0, #1
   12fd4:	beq	12fdc <__assert_fail@plt+0x1f24>
   12fd8:	b	14034 <__assert_fail@plt+0x2f7c>
   12fdc:	movw	r0, #1
   12fe0:	strb	r0, [fp, #-66]	; 0xffffffbe
   12fe4:	ldr	r0, [fp, #8]
   12fe8:	cmp	r0, #2
   12fec:	bne	130a0 <__assert_fail@plt+0x1fe8>
   12ff0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   12ff4:	tst	r0, #1
   12ff8:	bne	130a0 <__assert_fail@plt+0x1fe8>
   12ffc:	b	13000 <__assert_fail@plt+0x1f48>
   13000:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13004:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13008:	cmp	r0, r1
   1300c:	bcs	13024 <__assert_fail@plt+0x1f6c>
   13010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13014:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13018:	add	r0, r0, r1
   1301c:	movw	r1, #39	; 0x27
   13020:	strb	r1, [r0]
   13024:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13028:	add	r0, r0, #1
   1302c:	str	r0, [fp, #-44]	; 0xffffffd4
   13030:	b	13034 <__assert_fail@plt+0x1f7c>
   13034:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13038:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1303c:	cmp	r0, r1
   13040:	bcs	13058 <__assert_fail@plt+0x1fa0>
   13044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13048:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1304c:	add	r0, r0, r1
   13050:	movw	r1, #36	; 0x24
   13054:	strb	r1, [r0]
   13058:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1305c:	add	r0, r0, #1
   13060:	str	r0, [fp, #-44]	; 0xffffffd4
   13064:	b	13068 <__assert_fail@plt+0x1fb0>
   13068:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1306c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13070:	cmp	r0, r1
   13074:	bcs	1308c <__assert_fail@plt+0x1fd4>
   13078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1307c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13080:	add	r0, r0, r1
   13084:	movw	r1, #39	; 0x27
   13088:	strb	r1, [r0]
   1308c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13090:	add	r0, r0, #1
   13094:	str	r0, [fp, #-44]	; 0xffffffd4
   13098:	movw	r0, #1
   1309c:	strb	r0, [fp, #-60]	; 0xffffffc4
   130a0:	b	130a4 <__assert_fail@plt+0x1fec>
   130a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130ac:	cmp	r0, r1
   130b0:	bcs	130c8 <__assert_fail@plt+0x2010>
   130b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130bc:	add	r0, r0, r1
   130c0:	movw	r1, #92	; 0x5c
   130c4:	strb	r1, [r0]
   130c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130cc:	add	r0, r0, #1
   130d0:	str	r0, [fp, #-44]	; 0xffffffd4
   130d4:	b	130d8 <__assert_fail@plt+0x2020>
   130d8:	ldr	r0, [fp, #8]
   130dc:	cmp	r0, #2
   130e0:	beq	131a0 <__assert_fail@plt+0x20e8>
   130e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   130e8:	add	r0, r0, #1
   130ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   130f0:	cmp	r0, r1
   130f4:	bcs	131a0 <__assert_fail@plt+0x20e8>
   130f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   130fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13100:	add	r1, r1, #1
   13104:	add	r0, r0, r1
   13108:	ldrb	r0, [r0]
   1310c:	movw	r1, #48	; 0x30
   13110:	cmp	r1, r0
   13114:	bgt	131a0 <__assert_fail@plt+0x20e8>
   13118:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1311c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13120:	add	r1, r1, #1
   13124:	add	r0, r0, r1
   13128:	ldrb	r0, [r0]
   1312c:	cmp	r0, #57	; 0x39
   13130:	bgt	131a0 <__assert_fail@plt+0x20e8>
   13134:	b	13138 <__assert_fail@plt+0x2080>
   13138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1313c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13140:	cmp	r0, r1
   13144:	bcs	1315c <__assert_fail@plt+0x20a4>
   13148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1314c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13150:	add	r0, r0, r1
   13154:	movw	r1, #48	; 0x30
   13158:	strb	r1, [r0]
   1315c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13160:	add	r0, r0, #1
   13164:	str	r0, [fp, #-44]	; 0xffffffd4
   13168:	b	1316c <__assert_fail@plt+0x20b4>
   1316c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13170:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13174:	cmp	r0, r1
   13178:	bcs	13190 <__assert_fail@plt+0x20d8>
   1317c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13180:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13184:	add	r0, r0, r1
   13188:	movw	r1, #48	; 0x30
   1318c:	strb	r1, [r0]
   13190:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13194:	add	r0, r0, #1
   13198:	str	r0, [fp, #-44]	; 0xffffffd4
   1319c:	b	131a0 <__assert_fail@plt+0x20e8>
   131a0:	movw	r0, #48	; 0x30
   131a4:	strb	r0, [fp, #-63]	; 0xffffffc1
   131a8:	b	131c4 <__assert_fail@plt+0x210c>
   131ac:	ldr	r0, [fp, #12]
   131b0:	and	r0, r0, #1
   131b4:	cmp	r0, #0
   131b8:	beq	131c0 <__assert_fail@plt+0x2108>
   131bc:	b	13ea4 <__assert_fail@plt+0x2dec>
   131c0:	b	131c4 <__assert_fail@plt+0x210c>
   131c4:	b	13c40 <__assert_fail@plt+0x2b88>
   131c8:	ldr	r0, [fp, #8]
   131cc:	cmp	r0, #2
   131d0:	str	r0, [sp, #40]	; 0x28
   131d4:	beq	131ec <__assert_fail@plt+0x2134>
   131d8:	b	131dc <__assert_fail@plt+0x2124>
   131dc:	ldr	r0, [sp, #40]	; 0x28
   131e0:	cmp	r0, #5
   131e4:	beq	13200 <__assert_fail@plt+0x2148>
   131e8:	b	133bc <__assert_fail@plt+0x2304>
   131ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   131f0:	tst	r0, #1
   131f4:	beq	131fc <__assert_fail@plt+0x2144>
   131f8:	b	14034 <__assert_fail@plt+0x2f7c>
   131fc:	b	133c0 <__assert_fail@plt+0x2308>
   13200:	ldr	r0, [fp, #12]
   13204:	and	r0, r0, #4
   13208:	cmp	r0, #0
   1320c:	beq	133b8 <__assert_fail@plt+0x2300>
   13210:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13214:	add	r0, r0, #2
   13218:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1321c:	cmp	r0, r1
   13220:	bcs	133b8 <__assert_fail@plt+0x2300>
   13224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13228:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1322c:	add	r1, r1, #1
   13230:	add	r0, r0, r1
   13234:	ldrb	r0, [r0]
   13238:	cmp	r0, #63	; 0x3f
   1323c:	bne	133b8 <__assert_fail@plt+0x2300>
   13240:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13244:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13248:	add	r0, r0, r1
   1324c:	ldrb	r0, [r0, #2]
   13250:	mov	r1, r0
   13254:	cmp	r0, #33	; 0x21
   13258:	str	r1, [sp, #36]	; 0x24
   1325c:	beq	132ac <__assert_fail@plt+0x21f4>
   13260:	b	13264 <__assert_fail@plt+0x21ac>
   13264:	ldr	r0, [sp, #36]	; 0x24
   13268:	sub	r1, r0, #39	; 0x27
   1326c:	cmp	r1, #3
   13270:	bcc	132ac <__assert_fail@plt+0x21f4>
   13274:	b	13278 <__assert_fail@plt+0x21c0>
   13278:	ldr	r0, [sp, #36]	; 0x24
   1327c:	cmp	r0, #45	; 0x2d
   13280:	beq	132ac <__assert_fail@plt+0x21f4>
   13284:	b	13288 <__assert_fail@plt+0x21d0>
   13288:	ldr	r0, [sp, #36]	; 0x24
   1328c:	cmp	r0, #47	; 0x2f
   13290:	beq	132ac <__assert_fail@plt+0x21f4>
   13294:	b	13298 <__assert_fail@plt+0x21e0>
   13298:	ldr	r0, [sp, #36]	; 0x24
   1329c:	sub	r1, r0, #60	; 0x3c
   132a0:	cmp	r1, #2
   132a4:	bhi	133b0 <__assert_fail@plt+0x22f8>
   132a8:	b	132ac <__assert_fail@plt+0x21f4>
   132ac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   132b0:	tst	r0, #1
   132b4:	beq	132bc <__assert_fail@plt+0x2204>
   132b8:	b	14034 <__assert_fail@plt+0x2f7c>
   132bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   132c4:	add	r1, r1, #2
   132c8:	add	r0, r0, r1
   132cc:	ldrb	r0, [r0]
   132d0:	strb	r0, [fp, #-63]	; 0xffffffc1
   132d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   132d8:	add	r0, r0, #2
   132dc:	str	r0, [fp, #-40]	; 0xffffffd8
   132e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132e8:	cmp	r0, r1
   132ec:	bcs	13304 <__assert_fail@plt+0x224c>
   132f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132f8:	add	r0, r0, r1
   132fc:	movw	r1, #63	; 0x3f
   13300:	strb	r1, [r0]
   13304:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13308:	add	r0, r0, #1
   1330c:	str	r0, [fp, #-44]	; 0xffffffd4
   13310:	b	13314 <__assert_fail@plt+0x225c>
   13314:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13318:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1331c:	cmp	r0, r1
   13320:	bcs	13338 <__assert_fail@plt+0x2280>
   13324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13328:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1332c:	add	r0, r0, r1
   13330:	movw	r1, #34	; 0x22
   13334:	strb	r1, [r0]
   13338:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1333c:	add	r0, r0, #1
   13340:	str	r0, [fp, #-44]	; 0xffffffd4
   13344:	b	13348 <__assert_fail@plt+0x2290>
   13348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1334c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13350:	cmp	r0, r1
   13354:	bcs	1336c <__assert_fail@plt+0x22b4>
   13358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1335c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13360:	add	r0, r0, r1
   13364:	movw	r1, #34	; 0x22
   13368:	strb	r1, [r0]
   1336c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13370:	add	r0, r0, #1
   13374:	str	r0, [fp, #-44]	; 0xffffffd4
   13378:	b	1337c <__assert_fail@plt+0x22c4>
   1337c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13380:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13384:	cmp	r0, r1
   13388:	bcs	133a0 <__assert_fail@plt+0x22e8>
   1338c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13390:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13394:	add	r0, r0, r1
   13398:	movw	r1, #63	; 0x3f
   1339c:	strb	r1, [r0]
   133a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133a4:	add	r0, r0, #1
   133a8:	str	r0, [fp, #-44]	; 0xffffffd4
   133ac:	b	133b4 <__assert_fail@plt+0x22fc>
   133b0:	b	133b4 <__assert_fail@plt+0x22fc>
   133b4:	b	133b8 <__assert_fail@plt+0x2300>
   133b8:	b	133c0 <__assert_fail@plt+0x2308>
   133bc:	b	133c0 <__assert_fail@plt+0x2308>
   133c0:	b	13c40 <__assert_fail@plt+0x2b88>
   133c4:	movw	r0, #97	; 0x61
   133c8:	strb	r0, [fp, #-64]	; 0xffffffc0
   133cc:	b	1348c <__assert_fail@plt+0x23d4>
   133d0:	movw	r0, #98	; 0x62
   133d4:	strb	r0, [fp, #-64]	; 0xffffffc0
   133d8:	b	1348c <__assert_fail@plt+0x23d4>
   133dc:	movw	r0, #102	; 0x66
   133e0:	strb	r0, [fp, #-64]	; 0xffffffc0
   133e4:	b	1348c <__assert_fail@plt+0x23d4>
   133e8:	movw	r0, #110	; 0x6e
   133ec:	strb	r0, [fp, #-64]	; 0xffffffc0
   133f0:	b	1346c <__assert_fail@plt+0x23b4>
   133f4:	movw	r0, #114	; 0x72
   133f8:	strb	r0, [fp, #-64]	; 0xffffffc0
   133fc:	b	1346c <__assert_fail@plt+0x23b4>
   13400:	movw	r0, #116	; 0x74
   13404:	strb	r0, [fp, #-64]	; 0xffffffc0
   13408:	b	1346c <__assert_fail@plt+0x23b4>
   1340c:	movw	r0, #118	; 0x76
   13410:	strb	r0, [fp, #-64]	; 0xffffffc0
   13414:	b	1348c <__assert_fail@plt+0x23d4>
   13418:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1341c:	strb	r0, [fp, #-64]	; 0xffffffc0
   13420:	ldr	r0, [fp, #8]
   13424:	cmp	r0, #2
   13428:	bne	13440 <__assert_fail@plt+0x2388>
   1342c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13430:	tst	r0, #1
   13434:	beq	1343c <__assert_fail@plt+0x2384>
   13438:	b	14034 <__assert_fail@plt+0x2f7c>
   1343c:	b	13dc8 <__assert_fail@plt+0x2d10>
   13440:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13444:	tst	r0, #1
   13448:	beq	13468 <__assert_fail@plt+0x23b0>
   1344c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13450:	tst	r0, #1
   13454:	beq	13468 <__assert_fail@plt+0x23b0>
   13458:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1345c:	cmp	r0, #0
   13460:	beq	13468 <__assert_fail@plt+0x23b0>
   13464:	b	13dc8 <__assert_fail@plt+0x2d10>
   13468:	b	1346c <__assert_fail@plt+0x23b4>
   1346c:	ldr	r0, [fp, #8]
   13470:	cmp	r0, #2
   13474:	bne	13488 <__assert_fail@plt+0x23d0>
   13478:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1347c:	tst	r0, #1
   13480:	beq	13488 <__assert_fail@plt+0x23d0>
   13484:	b	14034 <__assert_fail@plt+0x2f7c>
   13488:	b	1348c <__assert_fail@plt+0x23d4>
   1348c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13490:	tst	r0, #1
   13494:	beq	134a4 <__assert_fail@plt+0x23ec>
   13498:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   1349c:	strb	r0, [fp, #-63]	; 0xffffffc1
   134a0:	b	13cb4 <__assert_fail@plt+0x2bfc>
   134a4:	b	13c40 <__assert_fail@plt+0x2b88>
   134a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   134ac:	cmn	r0, #1
   134b0:	bne	134c8 <__assert_fail@plt+0x2410>
   134b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   134b8:	ldrb	r0, [r0, #1]
   134bc:	cmp	r0, #0
   134c0:	beq	134d8 <__assert_fail@plt+0x2420>
   134c4:	b	134d4 <__assert_fail@plt+0x241c>
   134c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   134cc:	cmp	r0, #1
   134d0:	beq	134d8 <__assert_fail@plt+0x2420>
   134d4:	b	13c40 <__assert_fail@plt+0x2b88>
   134d8:	b	134dc <__assert_fail@plt+0x2424>
   134dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   134e0:	cmp	r0, #0
   134e4:	beq	134ec <__assert_fail@plt+0x2434>
   134e8:	b	13c40 <__assert_fail@plt+0x2b88>
   134ec:	b	134f0 <__assert_fail@plt+0x2438>
   134f0:	movw	r0, #1
   134f4:	strb	r0, [fp, #-67]	; 0xffffffbd
   134f8:	ldr	r0, [fp, #8]
   134fc:	cmp	r0, #2
   13500:	bne	13514 <__assert_fail@plt+0x245c>
   13504:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13508:	tst	r0, #1
   1350c:	beq	13514 <__assert_fail@plt+0x245c>
   13510:	b	14034 <__assert_fail@plt+0x2f7c>
   13514:	b	13c40 <__assert_fail@plt+0x2b88>
   13518:	movw	r0, #1
   1351c:	strb	r0, [fp, #-61]	; 0xffffffc3
   13520:	strb	r0, [fp, #-67]	; 0xffffffbd
   13524:	ldr	r0, [fp, #8]
   13528:	cmp	r0, #2
   1352c:	bne	1360c <__assert_fail@plt+0x2554>
   13530:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13534:	tst	r0, #1
   13538:	beq	13540 <__assert_fail@plt+0x2488>
   1353c:	b	14034 <__assert_fail@plt+0x2f7c>
   13540:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13544:	cmp	r0, #0
   13548:	beq	13568 <__assert_fail@plt+0x24b0>
   1354c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13550:	cmp	r0, #0
   13554:	bne	13568 <__assert_fail@plt+0x24b0>
   13558:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1355c:	str	r0, [fp, #-48]	; 0xffffffd0
   13560:	movw	r0, #0
   13564:	str	r0, [fp, #-28]	; 0xffffffe4
   13568:	b	1356c <__assert_fail@plt+0x24b4>
   1356c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13570:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13574:	cmp	r0, r1
   13578:	bcs	13590 <__assert_fail@plt+0x24d8>
   1357c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13580:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13584:	add	r0, r0, r1
   13588:	movw	r1, #39	; 0x27
   1358c:	strb	r1, [r0]
   13590:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13594:	add	r0, r0, #1
   13598:	str	r0, [fp, #-44]	; 0xffffffd4
   1359c:	b	135a0 <__assert_fail@plt+0x24e8>
   135a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   135a8:	cmp	r0, r1
   135ac:	bcs	135c4 <__assert_fail@plt+0x250c>
   135b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135b8:	add	r0, r0, r1
   135bc:	movw	r1, #92	; 0x5c
   135c0:	strb	r1, [r0]
   135c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135c8:	add	r0, r0, #1
   135cc:	str	r0, [fp, #-44]	; 0xffffffd4
   135d0:	b	135d4 <__assert_fail@plt+0x251c>
   135d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   135dc:	cmp	r0, r1
   135e0:	bcs	135f8 <__assert_fail@plt+0x2540>
   135e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135ec:	add	r0, r0, r1
   135f0:	movw	r1, #39	; 0x27
   135f4:	strb	r1, [r0]
   135f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135fc:	add	r0, r0, #1
   13600:	str	r0, [fp, #-44]	; 0xffffffd4
   13604:	movw	r0, #0
   13608:	strb	r0, [fp, #-60]	; 0xffffffc4
   1360c:	b	13c40 <__assert_fail@plt+0x2b88>
   13610:	movw	r0, #1
   13614:	strb	r0, [fp, #-67]	; 0xffffffbd
   13618:	b	13c40 <__assert_fail@plt+0x2b88>
   1361c:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   13620:	tst	r0, #1
   13624:	beq	13668 <__assert_fail@plt+0x25b0>
   13628:	mov	r0, #1
   1362c:	str	r0, [fp, #-72]	; 0xffffffb8
   13630:	bl	10fa4 <__ctype_b_loc@plt>
   13634:	ldr	r0, [r0]
   13638:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   1363c:	mov	r1, lr
   13640:	add	r0, r0, lr, lsl #1
   13644:	ldrh	r0, [r0]
   13648:	and	r0, r0, #16384	; 0x4000
   1364c:	cmp	r0, #0
   13650:	movw	r0, #0
   13654:	movne	r0, #1
   13658:	and	r0, r0, #1
   1365c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13660:	str	r1, [sp, #32]
   13664:	b	138f4 <__assert_fail@plt+0x283c>
   13668:	sub	r0, fp, #84	; 0x54
   1366c:	movw	r1, #0
   13670:	and	r1, r1, #255	; 0xff
   13674:	movw	r2, #8
   13678:	bl	11004 <memset@plt>
   1367c:	movw	r0, #0
   13680:	str	r0, [fp, #-72]	; 0xffffffb8
   13684:	movw	r0, #1
   13688:	strb	r0, [fp, #-73]	; 0xffffffb7
   1368c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13690:	cmn	r0, #1
   13694:	bne	136a4 <__assert_fail@plt+0x25ec>
   13698:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1369c:	bl	10fc8 <strlen@plt>
   136a0:	str	r0, [fp, #-36]	; 0xffffffdc
   136a4:	b	136a8 <__assert_fail@plt+0x25f0>
   136a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   136ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   136b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   136b4:	add	r1, r1, r2
   136b8:	add	r1, r0, r1
   136bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   136c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   136c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   136c8:	add	r2, r2, r3
   136cc:	sub	r2, r0, r2
   136d0:	sub	r0, fp, #88	; 0x58
   136d4:	sub	r3, fp, #84	; 0x54
   136d8:	bl	1adec <__assert_fail@plt+0x9d34>
   136dc:	str	r0, [sp, #92]	; 0x5c
   136e0:	ldr	r0, [sp, #92]	; 0x5c
   136e4:	cmp	r0, #0
   136e8:	bne	136f0 <__assert_fail@plt+0x2638>
   136ec:	b	138f0 <__assert_fail@plt+0x2838>
   136f0:	ldr	r0, [sp, #92]	; 0x5c
   136f4:	cmn	r0, #1
   136f8:	bne	13708 <__assert_fail@plt+0x2650>
   136fc:	movw	r0, #0
   13700:	strb	r0, [fp, #-73]	; 0xffffffb7
   13704:	b	138f0 <__assert_fail@plt+0x2838>
   13708:	ldr	r0, [sp, #92]	; 0x5c
   1370c:	cmn	r0, #2
   13710:	bne	13784 <__assert_fail@plt+0x26cc>
   13714:	movw	r0, #0
   13718:	strb	r0, [fp, #-73]	; 0xffffffb7
   1371c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13720:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13724:	add	r0, r0, r1
   13728:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1372c:	cmp	r0, r1
   13730:	movw	r0, #0
   13734:	str	r0, [sp, #28]
   13738:	bcs	13764 <__assert_fail@plt+0x26ac>
   1373c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13740:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13744:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13748:	add	r1, r1, r2
   1374c:	add	r0, r0, r1
   13750:	ldrb	r0, [r0]
   13754:	cmp	r0, #0
   13758:	movw	r0, #0
   1375c:	movne	r0, #1
   13760:	str	r0, [sp, #28]
   13764:	ldr	r0, [sp, #28]
   13768:	tst	r0, #1
   1376c:	beq	13780 <__assert_fail@plt+0x26c8>
   13770:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13774:	add	r0, r0, #1
   13778:	str	r0, [fp, #-72]	; 0xffffffb8
   1377c:	b	1371c <__assert_fail@plt+0x2664>
   13780:	b	138f0 <__assert_fail@plt+0x2838>
   13784:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13788:	tst	r0, #1
   1378c:	beq	13898 <__assert_fail@plt+0x27e0>
   13790:	ldr	r0, [fp, #8]
   13794:	cmp	r0, #2
   13798:	bne	13898 <__assert_fail@plt+0x27e0>
   1379c:	movw	r0, #1
   137a0:	str	r0, [sp, #88]	; 0x58
   137a4:	ldr	r0, [sp, #88]	; 0x58
   137a8:	ldr	r1, [sp, #92]	; 0x5c
   137ac:	cmp	r0, r1
   137b0:	bcs	13894 <__assert_fail@plt+0x27dc>
   137b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   137bc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   137c0:	add	r1, r1, r2
   137c4:	ldr	r2, [sp, #88]	; 0x58
   137c8:	add	r1, r1, r2
   137cc:	ldrb	r0, [r0, r1]
   137d0:	sub	r0, r0, #91	; 0x5b
   137d4:	cmp	r0, #33	; 0x21
   137d8:	str	r0, [sp, #24]
   137dc:	bhi	1387c <__assert_fail@plt+0x27c4>
   137e0:	add	r0, pc, #8
   137e4:	ldr	r1, [sp, #24]
   137e8:	ldr	r0, [r0, r1, lsl #2]
   137ec:	mov	pc, r0
   137f0:	andeq	r3, r1, r8, ror r8
   137f4:	andeq	r3, r1, r8, ror r8
   137f8:	andeq	r3, r1, ip, ror r8
   137fc:	andeq	r3, r1, r8, ror r8
   13800:	andeq	r3, r1, ip, ror r8
   13804:	andeq	r3, r1, r8, ror r8
   13808:	andeq	r3, r1, ip, ror r8
   1380c:	andeq	r3, r1, ip, ror r8
   13810:	andeq	r3, r1, ip, ror r8
   13814:	andeq	r3, r1, ip, ror r8
   13818:	andeq	r3, r1, ip, ror r8
   1381c:	andeq	r3, r1, ip, ror r8
   13820:	andeq	r3, r1, ip, ror r8
   13824:	andeq	r3, r1, ip, ror r8
   13828:	andeq	r3, r1, ip, ror r8
   1382c:	andeq	r3, r1, ip, ror r8
   13830:	andeq	r3, r1, ip, ror r8
   13834:	andeq	r3, r1, ip, ror r8
   13838:	andeq	r3, r1, ip, ror r8
   1383c:	andeq	r3, r1, ip, ror r8
   13840:	andeq	r3, r1, ip, ror r8
   13844:	andeq	r3, r1, ip, ror r8
   13848:	andeq	r3, r1, ip, ror r8
   1384c:	andeq	r3, r1, ip, ror r8
   13850:	andeq	r3, r1, ip, ror r8
   13854:	andeq	r3, r1, ip, ror r8
   13858:	andeq	r3, r1, ip, ror r8
   1385c:	andeq	r3, r1, ip, ror r8
   13860:	andeq	r3, r1, ip, ror r8
   13864:	andeq	r3, r1, ip, ror r8
   13868:	andeq	r3, r1, ip, ror r8
   1386c:	andeq	r3, r1, ip, ror r8
   13870:	andeq	r3, r1, ip, ror r8
   13874:	andeq	r3, r1, r8, ror r8
   13878:	b	14034 <__assert_fail@plt+0x2f7c>
   1387c:	b	13880 <__assert_fail@plt+0x27c8>
   13880:	b	13884 <__assert_fail@plt+0x27cc>
   13884:	ldr	r0, [sp, #88]	; 0x58
   13888:	add	r0, r0, #1
   1388c:	str	r0, [sp, #88]	; 0x58
   13890:	b	137a4 <__assert_fail@plt+0x26ec>
   13894:	b	13898 <__assert_fail@plt+0x27e0>
   13898:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1389c:	bl	10f14 <iswprint@plt>
   138a0:	cmp	r0, #0
   138a4:	bne	138b0 <__assert_fail@plt+0x27f8>
   138a8:	movw	r0, #0
   138ac:	strb	r0, [fp, #-73]	; 0xffffffb7
   138b0:	ldr	r0, [sp, #92]	; 0x5c
   138b4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   138b8:	add	r0, r1, r0
   138bc:	str	r0, [fp, #-72]	; 0xffffffb8
   138c0:	b	138c4 <__assert_fail@plt+0x280c>
   138c4:	b	138c8 <__assert_fail@plt+0x2810>
   138c8:	b	138cc <__assert_fail@plt+0x2814>
   138cc:	sub	r0, fp, #84	; 0x54
   138d0:	bl	10ecc <mbsinit@plt>
   138d4:	cmp	r0, #0
   138d8:	movw	r0, #0
   138dc:	movne	r0, #1
   138e0:	mvn	lr, #0
   138e4:	eor	r0, r0, lr
   138e8:	tst	r0, #1
   138ec:	bne	136a8 <__assert_fail@plt+0x25f0>
   138f0:	b	138f4 <__assert_fail@plt+0x283c>
   138f4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   138f8:	and	r0, r0, #1
   138fc:	strb	r0, [fp, #-67]	; 0xffffffbd
   13900:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13904:	movw	r1, #1
   13908:	cmp	r1, r0
   1390c:	bcc	13928 <__assert_fail@plt+0x2870>
   13910:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13914:	tst	r0, #1
   13918:	beq	13c3c <__assert_fail@plt+0x2b84>
   1391c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13920:	tst	r0, #1
   13924:	bne	13c3c <__assert_fail@plt+0x2b84>
   13928:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1392c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13930:	add	r0, r0, r1
   13934:	str	r0, [sp, #84]	; 0x54
   13938:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1393c:	tst	r0, #1
   13940:	beq	13af0 <__assert_fail@plt+0x2a38>
   13944:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13948:	tst	r0, #1
   1394c:	bne	13af0 <__assert_fail@plt+0x2a38>
   13950:	b	13954 <__assert_fail@plt+0x289c>
   13954:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13958:	tst	r0, #1
   1395c:	beq	13964 <__assert_fail@plt+0x28ac>
   13960:	b	14034 <__assert_fail@plt+0x2f7c>
   13964:	movw	r0, #1
   13968:	strb	r0, [fp, #-66]	; 0xffffffbe
   1396c:	ldr	r0, [fp, #8]
   13970:	cmp	r0, #2
   13974:	bne	13a28 <__assert_fail@plt+0x2970>
   13978:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1397c:	tst	r0, #1
   13980:	bne	13a28 <__assert_fail@plt+0x2970>
   13984:	b	13988 <__assert_fail@plt+0x28d0>
   13988:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1398c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13990:	cmp	r0, r1
   13994:	bcs	139ac <__assert_fail@plt+0x28f4>
   13998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1399c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   139a0:	add	r0, r0, r1
   139a4:	movw	r1, #39	; 0x27
   139a8:	strb	r1, [r0]
   139ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139b0:	add	r0, r0, #1
   139b4:	str	r0, [fp, #-44]	; 0xffffffd4
   139b8:	b	139bc <__assert_fail@plt+0x2904>
   139bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   139c4:	cmp	r0, r1
   139c8:	bcs	139e0 <__assert_fail@plt+0x2928>
   139cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   139d4:	add	r0, r0, r1
   139d8:	movw	r1, #36	; 0x24
   139dc:	strb	r1, [r0]
   139e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139e4:	add	r0, r0, #1
   139e8:	str	r0, [fp, #-44]	; 0xffffffd4
   139ec:	b	139f0 <__assert_fail@plt+0x2938>
   139f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   139f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   139f8:	cmp	r0, r1
   139fc:	bcs	13a14 <__assert_fail@plt+0x295c>
   13a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a08:	add	r0, r0, r1
   13a0c:	movw	r1, #39	; 0x27
   13a10:	strb	r1, [r0]
   13a14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a18:	add	r0, r0, #1
   13a1c:	str	r0, [fp, #-44]	; 0xffffffd4
   13a20:	movw	r0, #1
   13a24:	strb	r0, [fp, #-60]	; 0xffffffc4
   13a28:	b	13a2c <__assert_fail@plt+0x2974>
   13a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a34:	cmp	r0, r1
   13a38:	bcs	13a50 <__assert_fail@plt+0x2998>
   13a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a44:	add	r0, r0, r1
   13a48:	movw	r1, #92	; 0x5c
   13a4c:	strb	r1, [r0]
   13a50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a54:	add	r0, r0, #1
   13a58:	str	r0, [fp, #-44]	; 0xffffffd4
   13a5c:	b	13a60 <__assert_fail@plt+0x29a8>
   13a60:	b	13a64 <__assert_fail@plt+0x29ac>
   13a64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a6c:	cmp	r0, r1
   13a70:	bcs	13a90 <__assert_fail@plt+0x29d8>
   13a74:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13a78:	asr	r0, r0, #6
   13a7c:	add	r0, r0, #48	; 0x30
   13a80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13a84:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13a88:	add	r1, r1, r2
   13a8c:	strb	r0, [r1]
   13a90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a94:	add	r0, r0, #1
   13a98:	str	r0, [fp, #-44]	; 0xffffffd4
   13a9c:	b	13aa0 <__assert_fail@plt+0x29e8>
   13aa0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13aa4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13aa8:	cmp	r0, r1
   13aac:	bcs	13ad0 <__assert_fail@plt+0x2a18>
   13ab0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13ab4:	asr	r0, r0, #3
   13ab8:	and	r0, r0, #7
   13abc:	add	r0, r0, #48	; 0x30
   13ac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ac4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13ac8:	add	r1, r1, r2
   13acc:	strb	r0, [r1]
   13ad0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ad4:	add	r0, r0, #1
   13ad8:	str	r0, [fp, #-44]	; 0xffffffd4
   13adc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13ae0:	and	r0, r0, #7
   13ae4:	add	r0, r0, #48	; 0x30
   13ae8:	strb	r0, [fp, #-63]	; 0xffffffc1
   13aec:	b	13b3c <__assert_fail@plt+0x2a84>
   13af0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13af4:	tst	r0, #1
   13af8:	beq	13b38 <__assert_fail@plt+0x2a80>
   13afc:	b	13b00 <__assert_fail@plt+0x2a48>
   13b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b08:	cmp	r0, r1
   13b0c:	bcs	13b24 <__assert_fail@plt+0x2a6c>
   13b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13b18:	add	r0, r0, r1
   13b1c:	movw	r1, #92	; 0x5c
   13b20:	strb	r1, [r0]
   13b24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b28:	add	r0, r0, #1
   13b2c:	str	r0, [fp, #-44]	; 0xffffffd4
   13b30:	movw	r0, #0
   13b34:	strb	r0, [fp, #-65]	; 0xffffffbf
   13b38:	b	13b3c <__assert_fail@plt+0x2a84>
   13b3c:	ldr	r0, [sp, #84]	; 0x54
   13b40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13b44:	add	r1, r1, #1
   13b48:	cmp	r0, r1
   13b4c:	bhi	13b54 <__assert_fail@plt+0x2a9c>
   13b50:	b	13c38 <__assert_fail@plt+0x2b80>
   13b54:	b	13b58 <__assert_fail@plt+0x2aa0>
   13b58:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13b5c:	tst	r0, #1
   13b60:	beq	13be0 <__assert_fail@plt+0x2b28>
   13b64:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13b68:	tst	r0, #1
   13b6c:	bne	13be0 <__assert_fail@plt+0x2b28>
   13b70:	b	13b74 <__assert_fail@plt+0x2abc>
   13b74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b7c:	cmp	r0, r1
   13b80:	bcs	13b98 <__assert_fail@plt+0x2ae0>
   13b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13b8c:	add	r0, r0, r1
   13b90:	movw	r1, #39	; 0x27
   13b94:	strb	r1, [r0]
   13b98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b9c:	add	r0, r0, #1
   13ba0:	str	r0, [fp, #-44]	; 0xffffffd4
   13ba4:	b	13ba8 <__assert_fail@plt+0x2af0>
   13ba8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13bac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13bb0:	cmp	r0, r1
   13bb4:	bcs	13bcc <__assert_fail@plt+0x2b14>
   13bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13bc0:	add	r0, r0, r1
   13bc4:	movw	r1, #39	; 0x27
   13bc8:	strb	r1, [r0]
   13bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13bd0:	add	r0, r0, #1
   13bd4:	str	r0, [fp, #-44]	; 0xffffffd4
   13bd8:	movw	r0, #0
   13bdc:	strb	r0, [fp, #-60]	; 0xffffffc4
   13be0:	b	13be4 <__assert_fail@plt+0x2b2c>
   13be4:	b	13be8 <__assert_fail@plt+0x2b30>
   13be8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13bec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13bf0:	cmp	r0, r1
   13bf4:	bcs	13c0c <__assert_fail@plt+0x2b54>
   13bf8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13bfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c00:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13c04:	add	r1, r1, r2
   13c08:	strb	r0, [r1]
   13c0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c10:	add	r0, r0, #1
   13c14:	str	r0, [fp, #-44]	; 0xffffffd4
   13c18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13c20:	add	r1, r1, #1
   13c24:	str	r1, [fp, #-40]	; 0xffffffd8
   13c28:	add	r0, r0, r1
   13c2c:	ldrb	r0, [r0]
   13c30:	strb	r0, [fp, #-63]	; 0xffffffc1
   13c34:	b	13938 <__assert_fail@plt+0x2880>
   13c38:	b	13dc8 <__assert_fail@plt+0x2d10>
   13c3c:	b	13c40 <__assert_fail@plt+0x2b88>
   13c40:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13c44:	tst	r0, #1
   13c48:	beq	13c58 <__assert_fail@plt+0x2ba0>
   13c4c:	ldr	r0, [fp, #8]
   13c50:	cmp	r0, #2
   13c54:	bne	13c64 <__assert_fail@plt+0x2bac>
   13c58:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c5c:	tst	r0, #1
   13c60:	beq	13ca0 <__assert_fail@plt+0x2be8>
   13c64:	ldr	r0, [fp, #16]
   13c68:	movw	r1, #0
   13c6c:	cmp	r0, r1
   13c70:	beq	13ca0 <__assert_fail@plt+0x2be8>
   13c74:	ldr	r0, [fp, #16]
   13c78:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13c7c:	lsr	r1, r1, #5
   13c80:	add	r0, r0, r1, lsl #2
   13c84:	ldr	r0, [r0]
   13c88:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13c8c:	and	r1, r1, #31
   13c90:	lsr	r0, r0, r1
   13c94:	and	r0, r0, #1
   13c98:	cmp	r0, #0
   13c9c:	bne	13cb0 <__assert_fail@plt+0x2bf8>
   13ca0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13ca4:	tst	r0, #1
   13ca8:	bne	13cb0 <__assert_fail@plt+0x2bf8>
   13cac:	b	13dc8 <__assert_fail@plt+0x2d10>
   13cb0:	b	13cb4 <__assert_fail@plt+0x2bfc>
   13cb4:	b	13cb8 <__assert_fail@plt+0x2c00>
   13cb8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13cbc:	tst	r0, #1
   13cc0:	beq	13cc8 <__assert_fail@plt+0x2c10>
   13cc4:	b	14034 <__assert_fail@plt+0x2f7c>
   13cc8:	movw	r0, #1
   13ccc:	strb	r0, [fp, #-66]	; 0xffffffbe
   13cd0:	ldr	r0, [fp, #8]
   13cd4:	cmp	r0, #2
   13cd8:	bne	13d8c <__assert_fail@plt+0x2cd4>
   13cdc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13ce0:	tst	r0, #1
   13ce4:	bne	13d8c <__assert_fail@plt+0x2cd4>
   13ce8:	b	13cec <__assert_fail@plt+0x2c34>
   13cec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cf4:	cmp	r0, r1
   13cf8:	bcs	13d10 <__assert_fail@plt+0x2c58>
   13cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d04:	add	r0, r0, r1
   13d08:	movw	r1, #39	; 0x27
   13d0c:	strb	r1, [r0]
   13d10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d14:	add	r0, r0, #1
   13d18:	str	r0, [fp, #-44]	; 0xffffffd4
   13d1c:	b	13d20 <__assert_fail@plt+0x2c68>
   13d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d28:	cmp	r0, r1
   13d2c:	bcs	13d44 <__assert_fail@plt+0x2c8c>
   13d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d38:	add	r0, r0, r1
   13d3c:	movw	r1, #36	; 0x24
   13d40:	strb	r1, [r0]
   13d44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d48:	add	r0, r0, #1
   13d4c:	str	r0, [fp, #-44]	; 0xffffffd4
   13d50:	b	13d54 <__assert_fail@plt+0x2c9c>
   13d54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d5c:	cmp	r0, r1
   13d60:	bcs	13d78 <__assert_fail@plt+0x2cc0>
   13d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d6c:	add	r0, r0, r1
   13d70:	movw	r1, #39	; 0x27
   13d74:	strb	r1, [r0]
   13d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d7c:	add	r0, r0, #1
   13d80:	str	r0, [fp, #-44]	; 0xffffffd4
   13d84:	movw	r0, #1
   13d88:	strb	r0, [fp, #-60]	; 0xffffffc4
   13d8c:	b	13d90 <__assert_fail@plt+0x2cd8>
   13d90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d98:	cmp	r0, r1
   13d9c:	bcs	13db4 <__assert_fail@plt+0x2cfc>
   13da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13da4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13da8:	add	r0, r0, r1
   13dac:	movw	r1, #92	; 0x5c
   13db0:	strb	r1, [r0]
   13db4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13db8:	add	r0, r0, #1
   13dbc:	str	r0, [fp, #-44]	; 0xffffffd4
   13dc0:	b	13dc4 <__assert_fail@plt+0x2d0c>
   13dc4:	b	13dc8 <__assert_fail@plt+0x2d10>
   13dc8:	b	13dcc <__assert_fail@plt+0x2d14>
   13dcc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13dd0:	tst	r0, #1
   13dd4:	beq	13e54 <__assert_fail@plt+0x2d9c>
   13dd8:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13ddc:	tst	r0, #1
   13de0:	bne	13e54 <__assert_fail@plt+0x2d9c>
   13de4:	b	13de8 <__assert_fail@plt+0x2d30>
   13de8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13dec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13df0:	cmp	r0, r1
   13df4:	bcs	13e0c <__assert_fail@plt+0x2d54>
   13df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13dfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e00:	add	r0, r0, r1
   13e04:	movw	r1, #39	; 0x27
   13e08:	strb	r1, [r0]
   13e0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e10:	add	r0, r0, #1
   13e14:	str	r0, [fp, #-44]	; 0xffffffd4
   13e18:	b	13e1c <__assert_fail@plt+0x2d64>
   13e1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e24:	cmp	r0, r1
   13e28:	bcs	13e40 <__assert_fail@plt+0x2d88>
   13e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e34:	add	r0, r0, r1
   13e38:	movw	r1, #39	; 0x27
   13e3c:	strb	r1, [r0]
   13e40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e44:	add	r0, r0, #1
   13e48:	str	r0, [fp, #-44]	; 0xffffffd4
   13e4c:	movw	r0, #0
   13e50:	strb	r0, [fp, #-60]	; 0xffffffc4
   13e54:	b	13e58 <__assert_fail@plt+0x2da0>
   13e58:	b	13e5c <__assert_fail@plt+0x2da4>
   13e5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e64:	cmp	r0, r1
   13e68:	bcs	13e80 <__assert_fail@plt+0x2dc8>
   13e6c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13e70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13e74:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13e78:	add	r1, r1, r2
   13e7c:	strb	r0, [r1]
   13e80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e84:	add	r0, r0, #1
   13e88:	str	r0, [fp, #-44]	; 0xffffffd4
   13e8c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   13e90:	tst	r0, #1
   13e94:	bne	13ea0 <__assert_fail@plt+0x2de8>
   13e98:	movw	r0, #0
   13e9c:	strb	r0, [fp, #-62]	; 0xffffffc2
   13ea0:	b	13ea4 <__assert_fail@plt+0x2dec>
   13ea4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ea8:	add	r0, r0, #1
   13eac:	str	r0, [fp, #-40]	; 0xffffffd8
   13eb0:	b	12c58 <__assert_fail@plt+0x1ba0>
   13eb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13eb8:	cmp	r0, #0
   13ebc:	bne	13edc <__assert_fail@plt+0x2e24>
   13ec0:	ldr	r0, [fp, #8]
   13ec4:	cmp	r0, #2
   13ec8:	bne	13edc <__assert_fail@plt+0x2e24>
   13ecc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13ed0:	tst	r0, #1
   13ed4:	beq	13edc <__assert_fail@plt+0x2e24>
   13ed8:	b	14034 <__assert_fail@plt+0x2f7c>
   13edc:	ldr	r0, [fp, #8]
   13ee0:	cmp	r0, #2
   13ee4:	bne	13f84 <__assert_fail@plt+0x2ecc>
   13ee8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13eec:	tst	r0, #1
   13ef0:	bne	13f84 <__assert_fail@plt+0x2ecc>
   13ef4:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   13ef8:	tst	r0, #1
   13efc:	beq	13f84 <__assert_fail@plt+0x2ecc>
   13f00:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   13f04:	tst	r0, #1
   13f08:	beq	13f50 <__assert_fail@plt+0x2e98>
   13f0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f10:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13f14:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13f1c:	ldr	ip, [fp, #12]
   13f20:	ldr	lr, [fp, #16]
   13f24:	ldr	r4, [fp, #20]
   13f28:	ldr	r5, [fp, #24]
   13f2c:	movw	r6, #5
   13f30:	str	r6, [sp]
   13f34:	str	ip, [sp, #4]
   13f38:	str	lr, [sp, #8]
   13f3c:	str	r4, [sp, #12]
   13f40:	str	r5, [sp, #16]
   13f44:	bl	12970 <__assert_fail@plt+0x18b8>
   13f48:	str	r0, [fp, #-20]	; 0xffffffec
   13f4c:	b	1409c <__assert_fail@plt+0x2fe4>
   13f50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13f54:	cmp	r0, #0
   13f58:	bne	13f7c <__assert_fail@plt+0x2ec4>
   13f5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f60:	cmp	r0, #0
   13f64:	beq	13f7c <__assert_fail@plt+0x2ec4>
   13f68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f6c:	str	r0, [fp, #-28]	; 0xffffffe4
   13f70:	movw	r0, #0
   13f74:	str	r0, [fp, #-44]	; 0xffffffd4
   13f78:	b	12a18 <__assert_fail@plt+0x1960>
   13f7c:	b	13f80 <__assert_fail@plt+0x2ec8>
   13f80:	b	13f84 <__assert_fail@plt+0x2ecc>
   13f84:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13f88:	movw	r1, #0
   13f8c:	cmp	r0, r1
   13f90:	beq	14004 <__assert_fail@plt+0x2f4c>
   13f94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13f98:	tst	r0, #1
   13f9c:	bne	14004 <__assert_fail@plt+0x2f4c>
   13fa0:	b	13fa4 <__assert_fail@plt+0x2eec>
   13fa4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13fa8:	ldrsb	r0, [r0]
   13fac:	cmp	r0, #0
   13fb0:	beq	14000 <__assert_fail@plt+0x2f48>
   13fb4:	b	13fb8 <__assert_fail@plt+0x2f00>
   13fb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fc0:	cmp	r0, r1
   13fc4:	bcs	13fe0 <__assert_fail@plt+0x2f28>
   13fc8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13fcc:	ldrb	r0, [r0]
   13fd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13fd4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13fd8:	add	r1, r1, r2
   13fdc:	strb	r0, [r1]
   13fe0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fe4:	add	r0, r0, #1
   13fe8:	str	r0, [fp, #-44]	; 0xffffffd4
   13fec:	b	13ff0 <__assert_fail@plt+0x2f38>
   13ff0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13ff4:	add	r0, r0, #1
   13ff8:	str	r0, [fp, #-52]	; 0xffffffcc
   13ffc:	b	13fa4 <__assert_fail@plt+0x2eec>
   14000:	b	14004 <__assert_fail@plt+0x2f4c>
   14004:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14008:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1400c:	cmp	r0, r1
   14010:	bcs	14028 <__assert_fail@plt+0x2f70>
   14014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14018:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1401c:	add	r0, r0, r1
   14020:	movw	r1, #0
   14024:	strb	r1, [r0]
   14028:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1402c:	str	r0, [fp, #-20]	; 0xffffffec
   14030:	b	1409c <__assert_fail@plt+0x2fe4>
   14034:	ldr	r0, [fp, #8]
   14038:	cmp	r0, #2
   1403c:	bne	14054 <__assert_fail@plt+0x2f9c>
   14040:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14044:	tst	r0, #1
   14048:	beq	14054 <__assert_fail@plt+0x2f9c>
   1404c:	movw	r0, #4
   14050:	str	r0, [fp, #8]
   14054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14058:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1405c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14060:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14064:	ldr	ip, [fp, #8]
   14068:	ldr	lr, [fp, #12]
   1406c:	mvn	r4, #2
   14070:	and	lr, lr, r4
   14074:	ldr	r4, [fp, #20]
   14078:	ldr	r5, [fp, #24]
   1407c:	str	ip, [sp]
   14080:	str	lr, [sp, #4]
   14084:	movw	ip, #0
   14088:	str	ip, [sp, #8]
   1408c:	str	r4, [sp, #12]
   14090:	str	r5, [sp, #16]
   14094:	bl	12970 <__assert_fail@plt+0x18b8>
   14098:	str	r0, [fp, #-20]	; 0xffffffec
   1409c:	ldr	r0, [fp, #-20]	; 0xffffffec
   140a0:	sub	sp, fp, #16
   140a4:	pop	{r4, r5, r6, sl, fp, pc}
   140a8:	push	{fp, lr}
   140ac:	mov	fp, sp
   140b0:	sub	sp, sp, #16
   140b4:	str	r0, [fp, #-4]
   140b8:	str	r1, [sp, #8]
   140bc:	str	r2, [sp, #4]
   140c0:	ldr	r0, [fp, #-4]
   140c4:	ldr	r1, [sp, #8]
   140c8:	ldr	r3, [sp, #4]
   140cc:	movw	r2, #0
   140d0:	bl	140dc <__assert_fail@plt+0x3024>
   140d4:	mov	sp, fp
   140d8:	pop	{fp, pc}
   140dc:	push	{r4, r5, r6, sl, fp, lr}
   140e0:	add	fp, sp, #16
   140e4:	sub	sp, sp, #72	; 0x48
   140e8:	str	r0, [fp, #-20]	; 0xffffffec
   140ec:	str	r1, [fp, #-24]	; 0xffffffe8
   140f0:	str	r2, [fp, #-28]	; 0xffffffe4
   140f4:	str	r3, [fp, #-32]	; 0xffffffe0
   140f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   140fc:	movw	r1, #0
   14100:	cmp	r0, r1
   14104:	beq	14114 <__assert_fail@plt+0x305c>
   14108:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1410c:	str	r0, [sp, #32]
   14110:	b	14124 <__assert_fail@plt+0x306c>
   14114:	movw	r0, #57720	; 0xe178
   14118:	movt	r0, #2
   1411c:	str	r0, [sp, #32]
   14120:	b	14124 <__assert_fail@plt+0x306c>
   14124:	ldr	r0, [sp, #32]
   14128:	str	r0, [fp, #-36]	; 0xffffffdc
   1412c:	bl	10fec <__errno_location@plt>
   14130:	ldr	r0, [r0]
   14134:	str	r0, [fp, #-40]	; 0xffffffd8
   14138:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1413c:	ldr	r0, [r0, #4]
   14140:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14144:	movw	r1, #0
   14148:	cmp	lr, r1
   1414c:	movw	lr, #0
   14150:	movne	lr, #1
   14154:	tst	lr, #1
   14158:	mov	lr, r1
   1415c:	moveq	lr, #1
   14160:	orr	r0, r0, lr
   14164:	str	r0, [sp, #44]	; 0x2c
   14168:	ldr	r2, [fp, #-20]	; 0xffffffec
   1416c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14170:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14174:	ldr	r0, [r0]
   14178:	ldr	lr, [sp, #44]	; 0x2c
   1417c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14180:	add	ip, ip, #8
   14184:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14188:	ldr	r4, [r4, #40]	; 0x28
   1418c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14190:	ldr	r5, [r5, #44]	; 0x2c
   14194:	str	r0, [sp, #28]
   14198:	mov	r0, r1
   1419c:	ldr	r6, [sp, #28]
   141a0:	str	r6, [sp]
   141a4:	str	lr, [sp, #4]
   141a8:	str	ip, [sp, #8]
   141ac:	str	r4, [sp, #12]
   141b0:	str	r5, [sp, #16]
   141b4:	bl	12970 <__assert_fail@plt+0x18b8>
   141b8:	add	r0, r0, #1
   141bc:	str	r0, [sp, #40]	; 0x28
   141c0:	ldr	r0, [sp, #40]	; 0x28
   141c4:	bl	15600 <__assert_fail@plt+0x4548>
   141c8:	str	r0, [sp, #36]	; 0x24
   141cc:	ldr	r0, [sp, #36]	; 0x24
   141d0:	ldr	r1, [sp, #40]	; 0x28
   141d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   141d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   141dc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   141e0:	ldr	ip, [ip]
   141e4:	ldr	lr, [sp, #44]	; 0x2c
   141e8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   141ec:	add	r4, r4, #8
   141f0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   141f4:	ldr	r5, [r5, #40]	; 0x28
   141f8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   141fc:	ldr	r6, [r6, #44]	; 0x2c
   14200:	str	ip, [sp]
   14204:	str	lr, [sp, #4]
   14208:	str	r4, [sp, #8]
   1420c:	str	r5, [sp, #12]
   14210:	str	r6, [sp, #16]
   14214:	bl	12970 <__assert_fail@plt+0x18b8>
   14218:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1421c:	str	r0, [sp, #24]
   14220:	str	r1, [sp, #20]
   14224:	bl	10fec <__errno_location@plt>
   14228:	ldr	r1, [sp, #20]
   1422c:	str	r1, [r0]
   14230:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14234:	movw	r2, #0
   14238:	cmp	r0, r2
   1423c:	beq	14250 <__assert_fail@plt+0x3198>
   14240:	ldr	r0, [sp, #40]	; 0x28
   14244:	sub	r0, r0, #1
   14248:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1424c:	str	r0, [r1]
   14250:	ldr	r0, [sp, #36]	; 0x24
   14254:	sub	sp, fp, #16
   14258:	pop	{r4, r5, r6, sl, fp, pc}
   1425c:	push	{fp, lr}
   14260:	mov	fp, sp
   14264:	sub	sp, sp, #8
   14268:	movw	r0, #57588	; 0xe0f4
   1426c:	movt	r0, #2
   14270:	ldr	r0, [r0]
   14274:	str	r0, [sp, #4]
   14278:	movw	r0, #1
   1427c:	str	r0, [sp]
   14280:	ldr	r0, [sp]
   14284:	movw	r1, #57592	; 0xe0f8
   14288:	movt	r1, #2
   1428c:	ldr	r1, [r1]
   14290:	cmp	r0, r1
   14294:	bge	142bc <__assert_fail@plt+0x3204>
   14298:	ldr	r0, [sp, #4]
   1429c:	ldr	r1, [sp]
   142a0:	add	r0, r0, r1, lsl #3
   142a4:	ldr	r0, [r0, #4]
   142a8:	bl	1ab7c <__assert_fail@plt+0x9ac4>
   142ac:	ldr	r0, [sp]
   142b0:	add	r0, r0, #1
   142b4:	str	r0, [sp]
   142b8:	b	14280 <__assert_fail@plt+0x31c8>
   142bc:	ldr	r0, [sp, #4]
   142c0:	ldr	r0, [r0, #4]
   142c4:	movw	r1, #57768	; 0xe1a8
   142c8:	movt	r1, #2
   142cc:	cmp	r0, r1
   142d0:	beq	142fc <__assert_fail@plt+0x3244>
   142d4:	ldr	r0, [sp, #4]
   142d8:	ldr	r0, [r0, #4]
   142dc:	bl	1ab7c <__assert_fail@plt+0x9ac4>
   142e0:	movw	r0, #256	; 0x100
   142e4:	movw	lr, #57596	; 0xe0fc
   142e8:	movt	lr, #2
   142ec:	str	r0, [lr]
   142f0:	movw	r0, #57768	; 0xe1a8
   142f4:	movt	r0, #2
   142f8:	str	r0, [lr, #4]
   142fc:	ldr	r0, [sp, #4]
   14300:	movw	r1, #57596	; 0xe0fc
   14304:	movt	r1, #2
   14308:	cmp	r0, r1
   1430c:	beq	1432c <__assert_fail@plt+0x3274>
   14310:	ldr	r0, [sp, #4]
   14314:	bl	1ab7c <__assert_fail@plt+0x9ac4>
   14318:	movw	r0, #57588	; 0xe0f4
   1431c:	movt	r0, #2
   14320:	movw	lr, #57596	; 0xe0fc
   14324:	movt	lr, #2
   14328:	str	lr, [r0]
   1432c:	movw	r0, #57592	; 0xe0f8
   14330:	movt	r0, #2
   14334:	movw	r1, #1
   14338:	str	r1, [r0]
   1433c:	mov	sp, fp
   14340:	pop	{fp, pc}
   14344:	push	{fp, lr}
   14348:	mov	fp, sp
   1434c:	sub	sp, sp, #8
   14350:	str	r0, [sp, #4]
   14354:	str	r1, [sp]
   14358:	ldr	r0, [sp, #4]
   1435c:	ldr	r1, [sp]
   14360:	mvn	r2, #0
   14364:	movw	r3, #57720	; 0xe178
   14368:	movt	r3, #2
   1436c:	bl	14378 <__assert_fail@plt+0x32c0>
   14370:	mov	sp, fp
   14374:	pop	{fp, pc}
   14378:	push	{r4, r5, r6, sl, fp, lr}
   1437c:	add	fp, sp, #16
   14380:	sub	sp, sp, #88	; 0x58
   14384:	str	r0, [fp, #-20]	; 0xffffffec
   14388:	str	r1, [fp, #-24]	; 0xffffffe8
   1438c:	str	r2, [fp, #-28]	; 0xffffffe4
   14390:	str	r3, [fp, #-32]	; 0xffffffe0
   14394:	bl	10fec <__errno_location@plt>
   14398:	ldr	r1, [pc, #676]	; 14644 <__assert_fail@plt+0x358c>
   1439c:	ldr	r0, [r0]
   143a0:	str	r0, [fp, #-36]	; 0xffffffdc
   143a4:	movw	r0, #57588	; 0xe0f4
   143a8:	movt	r0, #2
   143ac:	ldr	r0, [r0]
   143b0:	str	r0, [fp, #-40]	; 0xffffffd8
   143b4:	str	r1, [fp, #-44]	; 0xffffffd4
   143b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   143bc:	movw	r1, #0
   143c0:	cmp	r1, r0
   143c4:	bgt	143d8 <__assert_fail@plt+0x3320>
   143c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   143cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   143d0:	cmp	r0, r1
   143d4:	blt	143dc <__assert_fail@plt+0x3324>
   143d8:	bl	110a0 <abort@plt>
   143dc:	movw	r0, #57592	; 0xe0f8
   143e0:	movt	r0, #2
   143e4:	ldr	r0, [r0]
   143e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   143ec:	cmp	r0, r1
   143f0:	bgt	144e8 <__assert_fail@plt+0x3430>
   143f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   143f8:	movw	r1, #57596	; 0xe0fc
   143fc:	movt	r1, #2
   14400:	cmp	r0, r1
   14404:	movw	r0, #0
   14408:	moveq	r0, #1
   1440c:	and	r0, r0, #1
   14410:	strb	r0, [fp, #-45]	; 0xffffffd3
   14414:	movw	r0, #57592	; 0xe0f8
   14418:	movt	r0, #2
   1441c:	ldr	r0, [r0]
   14420:	str	r0, [sp, #52]	; 0x34
   14424:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14428:	tst	r0, #1
   1442c:	beq	1443c <__assert_fail@plt+0x3384>
   14430:	movw	r0, #0
   14434:	str	r0, [sp, #32]
   14438:	b	14444 <__assert_fail@plt+0x338c>
   1443c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14440:	str	r0, [sp, #32]
   14444:	ldr	r0, [sp, #32]
   14448:	ldr	r1, [fp, #-20]	; 0xffffffec
   1444c:	movw	r2, #57592	; 0xe0f8
   14450:	movt	r2, #2
   14454:	ldr	r2, [r2]
   14458:	sub	r1, r1, r2
   1445c:	add	r2, r1, #1
   14460:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14464:	add	r1, sp, #52	; 0x34
   14468:	movw	ip, #8
   1446c:	str	ip, [sp]
   14470:	bl	1583c <__assert_fail@plt+0x4784>
   14474:	str	r0, [fp, #-40]	; 0xffffffd8
   14478:	movw	r1, #57588	; 0xe0f4
   1447c:	movt	r1, #2
   14480:	str	r0, [r1]
   14484:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14488:	tst	r0, #1
   1448c:	beq	144ac <__assert_fail@plt+0x33f4>
   14490:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14494:	movw	r1, #57596	; 0xe0fc
   14498:	movt	r1, #2
   1449c:	ldr	r2, [r1]
   144a0:	str	r2, [r0]
   144a4:	ldr	r1, [r1, #4]
   144a8:	str	r1, [r0, #4]
   144ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144b0:	movw	r1, #57592	; 0xe0f8
   144b4:	movt	r1, #2
   144b8:	ldr	r1, [r1]
   144bc:	add	r0, r0, r1, lsl #3
   144c0:	ldr	r2, [sp, #52]	; 0x34
   144c4:	sub	r1, r2, r1
   144c8:	lsl	r2, r1, #3
   144cc:	movw	r1, #0
   144d0:	and	r1, r1, #255	; 0xff
   144d4:	bl	11004 <memset@plt>
   144d8:	ldr	r0, [sp, #52]	; 0x34
   144dc:	movw	r1, #57592	; 0xe0f8
   144e0:	movt	r1, #2
   144e4:	str	r0, [r1]
   144e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   144f0:	ldr	r0, [r0, r1, lsl #3]
   144f4:	str	r0, [sp, #48]	; 0x30
   144f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14500:	add	r0, r0, r1, lsl #3
   14504:	ldr	r0, [r0, #4]
   14508:	str	r0, [sp, #44]	; 0x2c
   1450c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14510:	ldr	r0, [r0, #4]
   14514:	orr	r0, r0, #1
   14518:	str	r0, [sp, #40]	; 0x28
   1451c:	ldr	r0, [sp, #44]	; 0x2c
   14520:	ldr	r1, [sp, #48]	; 0x30
   14524:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14528:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1452c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14530:	ldr	ip, [ip]
   14534:	ldr	lr, [sp, #40]	; 0x28
   14538:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1453c:	add	r4, r4, #8
   14540:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14544:	ldr	r5, [r5, #40]	; 0x28
   14548:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1454c:	ldr	r6, [r6, #44]	; 0x2c
   14550:	str	ip, [sp]
   14554:	str	lr, [sp, #4]
   14558:	str	r4, [sp, #8]
   1455c:	str	r5, [sp, #12]
   14560:	str	r6, [sp, #16]
   14564:	bl	12970 <__assert_fail@plt+0x18b8>
   14568:	str	r0, [sp, #36]	; 0x24
   1456c:	ldr	r0, [sp, #48]	; 0x30
   14570:	ldr	r1, [sp, #36]	; 0x24
   14574:	cmp	r0, r1
   14578:	bhi	14624 <__assert_fail@plt+0x356c>
   1457c:	ldr	r0, [sp, #36]	; 0x24
   14580:	add	r0, r0, #1
   14584:	str	r0, [sp, #48]	; 0x30
   14588:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1458c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14590:	add	r1, r1, r2, lsl #3
   14594:	str	r0, [r1]
   14598:	ldr	r0, [sp, #44]	; 0x2c
   1459c:	movw	r1, #57768	; 0xe1a8
   145a0:	movt	r1, #2
   145a4:	cmp	r0, r1
   145a8:	beq	145b4 <__assert_fail@plt+0x34fc>
   145ac:	ldr	r0, [sp, #44]	; 0x2c
   145b0:	bl	1ab7c <__assert_fail@plt+0x9ac4>
   145b4:	ldr	r0, [sp, #48]	; 0x30
   145b8:	bl	15600 <__assert_fail@plt+0x4548>
   145bc:	mov	lr, r0
   145c0:	str	r0, [sp, #44]	; 0x2c
   145c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   145c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   145cc:	add	r0, r0, r1, lsl #3
   145d0:	str	lr, [r0, #4]
   145d4:	ldr	r0, [sp, #44]	; 0x2c
   145d8:	ldr	r1, [sp, #48]	; 0x30
   145dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   145e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   145e4:	ldr	lr, [fp, #-32]	; 0xffffffe0
   145e8:	ldr	lr, [lr]
   145ec:	ldr	ip, [sp, #40]	; 0x28
   145f0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   145f4:	add	r4, r4, #8
   145f8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   145fc:	ldr	r5, [r5, #40]	; 0x28
   14600:	ldr	r6, [fp, #-32]	; 0xffffffe0
   14604:	ldr	r6, [r6, #44]	; 0x2c
   14608:	str	lr, [sp]
   1460c:	str	ip, [sp, #4]
   14610:	str	r4, [sp, #8]
   14614:	str	r5, [sp, #12]
   14618:	str	r6, [sp, #16]
   1461c:	bl	12970 <__assert_fail@plt+0x18b8>
   14620:	str	r0, [sp, #28]
   14624:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14628:	str	r0, [sp, #24]
   1462c:	bl	10fec <__errno_location@plt>
   14630:	ldr	lr, [sp, #24]
   14634:	str	lr, [r0]
   14638:	ldr	r0, [sp, #44]	; 0x2c
   1463c:	sub	sp, fp, #16
   14640:	pop	{r4, r5, r6, sl, fp, pc}
   14644:	svcvc	0x00ffffff
   14648:	push	{fp, lr}
   1464c:	mov	fp, sp
   14650:	sub	sp, sp, #16
   14654:	str	r0, [fp, #-4]
   14658:	str	r1, [sp, #8]
   1465c:	str	r2, [sp, #4]
   14660:	ldr	r0, [fp, #-4]
   14664:	ldr	r1, [sp, #8]
   14668:	ldr	r2, [sp, #4]
   1466c:	movw	r3, #57720	; 0xe178
   14670:	movt	r3, #2
   14674:	bl	14378 <__assert_fail@plt+0x32c0>
   14678:	mov	sp, fp
   1467c:	pop	{fp, pc}
   14680:	push	{fp, lr}
   14684:	mov	fp, sp
   14688:	sub	sp, sp, #8
   1468c:	str	r0, [sp, #4]
   14690:	ldr	r1, [sp, #4]
   14694:	movw	r0, #0
   14698:	bl	14344 <__assert_fail@plt+0x328c>
   1469c:	mov	sp, fp
   146a0:	pop	{fp, pc}
   146a4:	push	{fp, lr}
   146a8:	mov	fp, sp
   146ac:	sub	sp, sp, #8
   146b0:	str	r0, [sp, #4]
   146b4:	str	r1, [sp]
   146b8:	ldr	r1, [sp, #4]
   146bc:	ldr	r2, [sp]
   146c0:	movw	r0, #0
   146c4:	bl	14648 <__assert_fail@plt+0x3590>
   146c8:	mov	sp, fp
   146cc:	pop	{fp, pc}
   146d0:	push	{fp, lr}
   146d4:	mov	fp, sp
   146d8:	sub	sp, sp, #64	; 0x40
   146dc:	str	r0, [fp, #-4]
   146e0:	str	r1, [fp, #-8]
   146e4:	str	r2, [fp, #-12]
   146e8:	ldr	r1, [fp, #-8]
   146ec:	add	r0, sp, #4
   146f0:	bl	14710 <__assert_fail@plt+0x3658>
   146f4:	ldr	r0, [fp, #-4]
   146f8:	ldr	r1, [fp, #-12]
   146fc:	mvn	r2, #0
   14700:	add	r3, sp, #4
   14704:	bl	14378 <__assert_fail@plt+0x32c0>
   14708:	mov	sp, fp
   1470c:	pop	{fp, pc}
   14710:	push	{fp, lr}
   14714:	mov	fp, sp
   14718:	sub	sp, sp, #8
   1471c:	str	r1, [sp, #4]
   14720:	mov	r1, r0
   14724:	str	r0, [sp]
   14728:	mov	r0, r1
   1472c:	movw	r1, #0
   14730:	and	r1, r1, #255	; 0xff
   14734:	movw	r2, #48	; 0x30
   14738:	bl	11004 <memset@plt>
   1473c:	ldr	r0, [sp, #4]
   14740:	cmp	r0, #10
   14744:	bne	1474c <__assert_fail@plt+0x3694>
   14748:	bl	110a0 <abort@plt>
   1474c:	ldr	r0, [sp, #4]
   14750:	ldr	r1, [sp]
   14754:	str	r0, [r1]
   14758:	mov	sp, fp
   1475c:	pop	{fp, pc}
   14760:	push	{fp, lr}
   14764:	mov	fp, sp
   14768:	sub	sp, sp, #64	; 0x40
   1476c:	str	r0, [fp, #-4]
   14770:	str	r1, [fp, #-8]
   14774:	str	r2, [fp, #-12]
   14778:	str	r3, [fp, #-16]
   1477c:	ldr	r1, [fp, #-8]
   14780:	mov	r0, sp
   14784:	bl	14710 <__assert_fail@plt+0x3658>
   14788:	ldr	r0, [fp, #-4]
   1478c:	ldr	r1, [fp, #-12]
   14790:	ldr	r2, [fp, #-16]
   14794:	mov	r3, sp
   14798:	bl	14378 <__assert_fail@plt+0x32c0>
   1479c:	mov	sp, fp
   147a0:	pop	{fp, pc}
   147a4:	push	{fp, lr}
   147a8:	mov	fp, sp
   147ac:	sub	sp, sp, #8
   147b0:	str	r0, [sp, #4]
   147b4:	str	r1, [sp]
   147b8:	ldr	r1, [sp, #4]
   147bc:	ldr	r2, [sp]
   147c0:	movw	r0, #0
   147c4:	bl	146d0 <__assert_fail@plt+0x3618>
   147c8:	mov	sp, fp
   147cc:	pop	{fp, pc}
   147d0:	push	{fp, lr}
   147d4:	mov	fp, sp
   147d8:	sub	sp, sp, #16
   147dc:	str	r0, [fp, #-4]
   147e0:	str	r1, [sp, #8]
   147e4:	str	r2, [sp, #4]
   147e8:	ldr	r1, [fp, #-4]
   147ec:	ldr	r2, [sp, #8]
   147f0:	ldr	r3, [sp, #4]
   147f4:	movw	r0, #0
   147f8:	bl	14760 <__assert_fail@plt+0x36a8>
   147fc:	mov	sp, fp
   14800:	pop	{fp, pc}
   14804:	push	{fp, lr}
   14808:	mov	fp, sp
   1480c:	sub	sp, sp, #72	; 0x48
   14810:	movw	r3, #57720	; 0xe178
   14814:	movt	r3, #2
   14818:	str	r0, [fp, #-4]
   1481c:	str	r1, [fp, #-8]
   14820:	strb	r2, [fp, #-9]
   14824:	add	r0, sp, #12
   14828:	mov	r1, r0
   1482c:	str	r0, [sp, #8]
   14830:	mov	r0, r1
   14834:	mov	r1, r3
   14838:	movw	r2, #48	; 0x30
   1483c:	bl	10ec0 <memcpy@plt>
   14840:	ldr	r0, [sp, #8]
   14844:	ldrb	r1, [fp, #-9]
   14848:	movw	r2, #1
   1484c:	bl	12714 <__assert_fail@plt+0x165c>
   14850:	ldr	r1, [fp, #-4]
   14854:	ldr	r2, [fp, #-8]
   14858:	movw	r3, #0
   1485c:	str	r0, [sp, #4]
   14860:	mov	r0, r3
   14864:	add	r3, sp, #12
   14868:	bl	14378 <__assert_fail@plt+0x32c0>
   1486c:	mov	sp, fp
   14870:	pop	{fp, pc}
   14874:	push	{fp, lr}
   14878:	mov	fp, sp
   1487c:	sub	sp, sp, #8
   14880:	str	r0, [sp, #4]
   14884:	strb	r1, [sp, #3]
   14888:	ldr	r0, [sp, #4]
   1488c:	mvn	r1, #0
   14890:	ldrb	r2, [sp, #3]
   14894:	bl	14804 <__assert_fail@plt+0x374c>
   14898:	mov	sp, fp
   1489c:	pop	{fp, pc}
   148a0:	push	{fp, lr}
   148a4:	mov	fp, sp
   148a8:	sub	sp, sp, #8
   148ac:	str	r0, [sp, #4]
   148b0:	ldr	r0, [sp, #4]
   148b4:	movw	r1, #58	; 0x3a
   148b8:	and	r1, r1, #255	; 0xff
   148bc:	bl	14874 <__assert_fail@plt+0x37bc>
   148c0:	mov	sp, fp
   148c4:	pop	{fp, pc}
   148c8:	push	{fp, lr}
   148cc:	mov	fp, sp
   148d0:	sub	sp, sp, #8
   148d4:	str	r0, [sp, #4]
   148d8:	str	r1, [sp]
   148dc:	ldr	r0, [sp, #4]
   148e0:	ldr	r1, [sp]
   148e4:	movw	r2, #58	; 0x3a
   148e8:	and	r2, r2, #255	; 0xff
   148ec:	bl	14804 <__assert_fail@plt+0x374c>
   148f0:	mov	sp, fp
   148f4:	pop	{fp, pc}
   148f8:	push	{fp, lr}
   148fc:	mov	fp, sp
   14900:	sub	sp, sp, #120	; 0x78
   14904:	str	r0, [fp, #-4]
   14908:	str	r1, [fp, #-8]
   1490c:	str	r2, [fp, #-12]
   14910:	ldr	r1, [fp, #-8]
   14914:	add	r0, sp, #12
   14918:	bl	14710 <__assert_fail@plt+0x3658>
   1491c:	add	r0, sp, #60	; 0x3c
   14920:	mov	r1, r0
   14924:	add	r2, sp, #12
   14928:	str	r0, [sp, #8]
   1492c:	mov	r0, r1
   14930:	mov	r1, r2
   14934:	movw	r2, #48	; 0x30
   14938:	bl	10ec0 <memcpy@plt>
   1493c:	ldr	r0, [sp, #8]
   14940:	movw	r1, #58	; 0x3a
   14944:	and	r1, r1, #255	; 0xff
   14948:	movw	r2, #1
   1494c:	bl	12714 <__assert_fail@plt+0x165c>
   14950:	ldr	r1, [fp, #-4]
   14954:	ldr	r2, [fp, #-12]
   14958:	str	r0, [sp, #4]
   1495c:	mov	r0, r1
   14960:	mov	r1, r2
   14964:	mvn	r2, #0
   14968:	add	r3, sp, #60	; 0x3c
   1496c:	bl	14378 <__assert_fail@plt+0x32c0>
   14970:	mov	sp, fp
   14974:	pop	{fp, pc}
   14978:	push	{fp, lr}
   1497c:	mov	fp, sp
   14980:	sub	sp, sp, #24
   14984:	str	r0, [fp, #-4]
   14988:	str	r1, [fp, #-8]
   1498c:	str	r2, [sp, #12]
   14990:	str	r3, [sp, #8]
   14994:	ldr	r0, [fp, #-4]
   14998:	ldr	r1, [fp, #-8]
   1499c:	ldr	r2, [sp, #12]
   149a0:	ldr	r3, [sp, #8]
   149a4:	mvn	ip, #0
   149a8:	str	ip, [sp]
   149ac:	bl	149b8 <__assert_fail@plt+0x3900>
   149b0:	mov	sp, fp
   149b4:	pop	{fp, pc}
   149b8:	push	{fp, lr}
   149bc:	mov	fp, sp
   149c0:	sub	sp, sp, #72	; 0x48
   149c4:	ldr	ip, [fp, #8]
   149c8:	movw	lr, #57720	; 0xe178
   149cc:	movt	lr, #2
   149d0:	str	r0, [fp, #-4]
   149d4:	str	r1, [fp, #-8]
   149d8:	str	r2, [fp, #-12]
   149dc:	str	r3, [fp, #-16]
   149e0:	add	r0, sp, #8
   149e4:	mov	r1, r0
   149e8:	str	r0, [sp, #4]
   149ec:	mov	r0, r1
   149f0:	mov	r1, lr
   149f4:	movw	r2, #48	; 0x30
   149f8:	str	ip, [sp]
   149fc:	bl	10ec0 <memcpy@plt>
   14a00:	ldr	r1, [fp, #-8]
   14a04:	ldr	r2, [fp, #-12]
   14a08:	ldr	r0, [sp, #4]
   14a0c:	bl	12814 <__assert_fail@plt+0x175c>
   14a10:	ldr	r0, [fp, #-4]
   14a14:	ldr	r1, [fp, #-16]
   14a18:	ldr	r2, [fp, #8]
   14a1c:	add	r3, sp, #8
   14a20:	bl	14378 <__assert_fail@plt+0x32c0>
   14a24:	mov	sp, fp
   14a28:	pop	{fp, pc}
   14a2c:	push	{fp, lr}
   14a30:	mov	fp, sp
   14a34:	sub	sp, sp, #16
   14a38:	str	r0, [fp, #-4]
   14a3c:	str	r1, [sp, #8]
   14a40:	str	r2, [sp, #4]
   14a44:	ldr	r1, [fp, #-4]
   14a48:	ldr	r2, [sp, #8]
   14a4c:	ldr	r3, [sp, #4]
   14a50:	movw	r0, #0
   14a54:	bl	14978 <__assert_fail@plt+0x38c0>
   14a58:	mov	sp, fp
   14a5c:	pop	{fp, pc}
   14a60:	push	{fp, lr}
   14a64:	mov	fp, sp
   14a68:	sub	sp, sp, #24
   14a6c:	str	r0, [fp, #-4]
   14a70:	str	r1, [fp, #-8]
   14a74:	str	r2, [sp, #12]
   14a78:	str	r3, [sp, #8]
   14a7c:	ldr	r1, [fp, #-4]
   14a80:	ldr	r2, [fp, #-8]
   14a84:	ldr	r3, [sp, #12]
   14a88:	ldr	r0, [sp, #8]
   14a8c:	movw	ip, #0
   14a90:	str	r0, [sp, #4]
   14a94:	mov	r0, ip
   14a98:	ldr	ip, [sp, #4]
   14a9c:	str	ip, [sp]
   14aa0:	bl	149b8 <__assert_fail@plt+0x3900>
   14aa4:	mov	sp, fp
   14aa8:	pop	{fp, pc}
   14aac:	push	{fp, lr}
   14ab0:	mov	fp, sp
   14ab4:	sub	sp, sp, #16
   14ab8:	str	r0, [fp, #-4]
   14abc:	str	r1, [sp, #8]
   14ac0:	str	r2, [sp, #4]
   14ac4:	ldr	r0, [fp, #-4]
   14ac8:	ldr	r1, [sp, #8]
   14acc:	ldr	r2, [sp, #4]
   14ad0:	movw	r3, #57604	; 0xe104
   14ad4:	movt	r3, #2
   14ad8:	bl	14378 <__assert_fail@plt+0x32c0>
   14adc:	mov	sp, fp
   14ae0:	pop	{fp, pc}
   14ae4:	push	{fp, lr}
   14ae8:	mov	fp, sp
   14aec:	sub	sp, sp, #8
   14af0:	str	r0, [sp, #4]
   14af4:	str	r1, [sp]
   14af8:	ldr	r1, [sp, #4]
   14afc:	ldr	r2, [sp]
   14b00:	movw	r0, #0
   14b04:	bl	14aac <__assert_fail@plt+0x39f4>
   14b08:	mov	sp, fp
   14b0c:	pop	{fp, pc}
   14b10:	push	{fp, lr}
   14b14:	mov	fp, sp
   14b18:	sub	sp, sp, #8
   14b1c:	str	r0, [sp, #4]
   14b20:	str	r1, [sp]
   14b24:	ldr	r0, [sp, #4]
   14b28:	ldr	r1, [sp]
   14b2c:	mvn	r2, #0
   14b30:	bl	14aac <__assert_fail@plt+0x39f4>
   14b34:	mov	sp, fp
   14b38:	pop	{fp, pc}
   14b3c:	push	{fp, lr}
   14b40:	mov	fp, sp
   14b44:	sub	sp, sp, #8
   14b48:	str	r0, [sp, #4]
   14b4c:	ldr	r1, [sp, #4]
   14b50:	movw	r0, #0
   14b54:	bl	14b10 <__assert_fail@plt+0x3a58>
   14b58:	mov	sp, fp
   14b5c:	pop	{fp, pc}
   14b60:	push	{fp, lr}
   14b64:	mov	fp, sp
   14b68:	sub	sp, sp, #24
   14b6c:	str	r0, [fp, #-8]
   14b70:	str	r1, [sp, #12]
   14b74:	ldr	r0, [fp, #-8]
   14b78:	bl	10fbc <gettext@plt>
   14b7c:	str	r0, [sp, #8]
   14b80:	ldr	r0, [sp, #8]
   14b84:	ldr	r1, [fp, #-8]
   14b88:	cmp	r0, r1
   14b8c:	beq	14b9c <__assert_fail@plt+0x3ae4>
   14b90:	ldr	r0, [sp, #8]
   14b94:	str	r0, [fp, #-4]
   14b98:	b	14c68 <__assert_fail@plt+0x3bb0>
   14b9c:	bl	1ad90 <__assert_fail@plt+0x9cd8>
   14ba0:	str	r0, [sp, #4]
   14ba4:	ldr	r0, [sp, #4]
   14ba8:	movw	r1, #53844	; 0xd254
   14bac:	movt	r1, #1
   14bb0:	bl	1a9f4 <__assert_fail@plt+0x993c>
   14bb4:	cmp	r0, #0
   14bb8:	bne	14bf0 <__assert_fail@plt+0x3b38>
   14bbc:	ldr	r0, [fp, #-8]
   14bc0:	ldrb	r0, [r0]
   14bc4:	cmp	r0, #96	; 0x60
   14bc8:	movw	r0, #0
   14bcc:	moveq	r0, #1
   14bd0:	tst	r0, #1
   14bd4:	movw	r0, #53854	; 0xd25e
   14bd8:	movt	r0, #1
   14bdc:	movw	r1, #53850	; 0xd25a
   14be0:	movt	r1, #1
   14be4:	movne	r0, r1
   14be8:	str	r0, [fp, #-4]
   14bec:	b	14c68 <__assert_fail@plt+0x3bb0>
   14bf0:	ldr	r0, [sp, #4]
   14bf4:	movw	r1, #53858	; 0xd262
   14bf8:	movt	r1, #1
   14bfc:	bl	1a9f4 <__assert_fail@plt+0x993c>
   14c00:	cmp	r0, #0
   14c04:	bne	14c3c <__assert_fail@plt+0x3b84>
   14c08:	ldr	r0, [fp, #-8]
   14c0c:	ldrb	r0, [r0]
   14c10:	cmp	r0, #96	; 0x60
   14c14:	movw	r0, #0
   14c18:	moveq	r0, #1
   14c1c:	tst	r0, #1
   14c20:	movw	r0, #53870	; 0xd26e
   14c24:	movt	r0, #1
   14c28:	movw	r1, #53866	; 0xd26a
   14c2c:	movt	r1, #1
   14c30:	movne	r0, r1
   14c34:	str	r0, [fp, #-4]
   14c38:	b	14c68 <__assert_fail@plt+0x3bb0>
   14c3c:	ldr	r0, [sp, #12]
   14c40:	cmp	r0, #9
   14c44:	movw	r0, #0
   14c48:	moveq	r0, #1
   14c4c:	tst	r0, #1
   14c50:	movw	r0, #53842	; 0xd252
   14c54:	movt	r0, #1
   14c58:	movw	r1, #53838	; 0xd24e
   14c5c:	movt	r1, #1
   14c60:	movne	r0, r1
   14c64:	str	r0, [fp, #-4]
   14c68:	ldr	r0, [fp, #-4]
   14c6c:	mov	sp, fp
   14c70:	pop	{fp, pc}
   14c74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c78:	add	fp, sp, #28
   14c7c:	sub	sp, sp, #260	; 0x104
   14c80:	ldr	ip, [fp, #12]
   14c84:	ldr	lr, [fp, #8]
   14c88:	str	r0, [fp, #-32]	; 0xffffffe0
   14c8c:	str	r1, [fp, #-36]	; 0xffffffdc
   14c90:	str	r2, [fp, #-40]	; 0xffffffd8
   14c94:	str	r3, [fp, #-44]	; 0xffffffd4
   14c98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14c9c:	movw	r1, #0
   14ca0:	cmp	r0, r1
   14ca4:	str	lr, [fp, #-48]	; 0xffffffd0
   14ca8:	str	ip, [fp, #-52]	; 0xffffffcc
   14cac:	beq	14ce4 <__assert_fail@plt+0x3c2c>
   14cb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14cb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14cb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14cbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14cc0:	movw	ip, #53960	; 0xd2c8
   14cc4:	movt	ip, #1
   14cc8:	str	r1, [fp, #-56]	; 0xffffffc8
   14ccc:	mov	r1, ip
   14cd0:	ldr	ip, [fp, #-56]	; 0xffffffc8
   14cd4:	str	ip, [sp]
   14cd8:	bl	10fe0 <fprintf@plt>
   14cdc:	str	r0, [fp, #-60]	; 0xffffffc4
   14ce0:	b	14d00 <__assert_fail@plt+0x3c48>
   14ce4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ce8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14cec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14cf0:	movw	r1, #53972	; 0xd2d4
   14cf4:	movt	r1, #1
   14cf8:	bl	10fe0 <fprintf@plt>
   14cfc:	str	r0, [fp, #-64]	; 0xffffffc0
   14d00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d04:	movw	r1, #53979	; 0xd2db
   14d08:	movt	r1, #1
   14d0c:	str	r0, [fp, #-68]	; 0xffffffbc
   14d10:	mov	r0, r1
   14d14:	bl	10fbc <gettext@plt>
   14d18:	movw	r1, #54697	; 0xd5a9
   14d1c:	movt	r1, #1
   14d20:	movw	r3, #2022	; 0x7e6
   14d24:	ldr	lr, [fp, #-68]	; 0xffffffbc
   14d28:	str	r0, [fp, #-72]	; 0xffffffb8
   14d2c:	mov	r0, lr
   14d30:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14d34:	bl	10fe0 <fprintf@plt>
   14d38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14d3c:	movw	r2, #53435	; 0xd0bb
   14d40:	movt	r2, #1
   14d44:	str	r0, [fp, #-76]	; 0xffffffb4
   14d48:	mov	r0, r2
   14d4c:	str	r2, [fp, #-80]	; 0xffffffb0
   14d50:	bl	10e54 <fputs_unlocked@plt>
   14d54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14d58:	movw	r2, #53983	; 0xd2df
   14d5c:	movt	r2, #1
   14d60:	str	r0, [fp, #-84]	; 0xffffffac
   14d64:	mov	r0, r2
   14d68:	str	r1, [fp, #-88]	; 0xffffffa8
   14d6c:	bl	10fbc <gettext@plt>
   14d70:	movw	r2, #54154	; 0xd38a
   14d74:	movt	r2, #1
   14d78:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14d7c:	str	r0, [fp, #-92]	; 0xffffffa4
   14d80:	mov	r0, r1
   14d84:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14d88:	bl	10fe0 <fprintf@plt>
   14d8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14d90:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14d94:	str	r0, [fp, #-96]	; 0xffffffa0
   14d98:	mov	r0, r2
   14d9c:	bl	10e54 <fputs_unlocked@plt>
   14da0:	ldr	r1, [fp, #12]
   14da4:	cmp	r1, #9
   14da8:	str	r0, [fp, #-100]	; 0xffffff9c
   14dac:	str	r1, [fp, #-104]	; 0xffffff98
   14db0:	bhi	151f0 <__assert_fail@plt+0x4138>
   14db4:	add	r0, pc, #8
   14db8:	ldr	r1, [fp, #-104]	; 0xffffff98
   14dbc:	ldr	r0, [r0, r1, lsl #2]
   14dc0:	mov	pc, r0
   14dc4:	andeq	r4, r1, ip, ror #27
   14dc8:	strdeq	r4, [r1], -r0
   14dcc:	andeq	r4, r1, ip, lsr #28
   14dd0:	andeq	r4, r1, r0, ror lr
   14dd4:	andeq	r4, r1, ip, asr #29
   14dd8:	andeq	r4, r1, r4, lsr pc
   14ddc:	andeq	r4, r1, r8, lsr #31
   14de0:	andeq	r5, r1, r8, lsr #32
   14de4:	strheq	r5, [r1], -r4
   14de8:	andeq	r5, r1, ip, asr #2
   14dec:	b	15290 <__assert_fail@plt+0x41d8>
   14df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14df4:	movw	r1, #54188	; 0xd3ac
   14df8:	movt	r1, #1
   14dfc:	str	r0, [fp, #-108]	; 0xffffff94
   14e00:	mov	r0, r1
   14e04:	bl	10fbc <gettext@plt>
   14e08:	ldr	r1, [fp, #8]
   14e0c:	ldr	r2, [r1]
   14e10:	ldr	r1, [fp, #-108]	; 0xffffff94
   14e14:	str	r0, [fp, #-112]	; 0xffffff90
   14e18:	mov	r0, r1
   14e1c:	ldr	r1, [fp, #-112]	; 0xffffff90
   14e20:	bl	10fe0 <fprintf@plt>
   14e24:	str	r0, [fp, #-116]	; 0xffffff8c
   14e28:	b	15290 <__assert_fail@plt+0x41d8>
   14e2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e30:	movw	r1, #54204	; 0xd3bc
   14e34:	movt	r1, #1
   14e38:	str	r0, [fp, #-120]	; 0xffffff88
   14e3c:	mov	r0, r1
   14e40:	bl	10fbc <gettext@plt>
   14e44:	ldr	r1, [fp, #8]
   14e48:	ldr	r2, [r1]
   14e4c:	ldr	r1, [fp, #8]
   14e50:	ldr	r3, [r1, #4]
   14e54:	ldr	r1, [fp, #-120]	; 0xffffff88
   14e58:	str	r0, [fp, #-124]	; 0xffffff84
   14e5c:	mov	r0, r1
   14e60:	ldr	r1, [fp, #-124]	; 0xffffff84
   14e64:	bl	10fe0 <fprintf@plt>
   14e68:	str	r0, [fp, #-128]	; 0xffffff80
   14e6c:	b	15290 <__assert_fail@plt+0x41d8>
   14e70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e74:	movw	r1, #54227	; 0xd3d3
   14e78:	movt	r1, #1
   14e7c:	str	r0, [fp, #-132]	; 0xffffff7c
   14e80:	mov	r0, r1
   14e84:	bl	10fbc <gettext@plt>
   14e88:	ldr	r1, [fp, #8]
   14e8c:	ldr	r2, [r1]
   14e90:	ldr	r1, [fp, #8]
   14e94:	ldr	r3, [r1, #4]
   14e98:	ldr	r1, [fp, #8]
   14e9c:	ldr	r1, [r1, #8]
   14ea0:	ldr	lr, [fp, #-132]	; 0xffffff7c
   14ea4:	str	r0, [fp, #-136]	; 0xffffff78
   14ea8:	mov	r0, lr
   14eac:	ldr	ip, [fp, #-136]	; 0xffffff78
   14eb0:	str	r1, [fp, #-140]	; 0xffffff74
   14eb4:	mov	r1, ip
   14eb8:	ldr	r4, [fp, #-140]	; 0xffffff74
   14ebc:	str	r4, [sp]
   14ec0:	bl	10fe0 <fprintf@plt>
   14ec4:	str	r0, [sp, #144]	; 0x90
   14ec8:	b	15290 <__assert_fail@plt+0x41d8>
   14ecc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ed0:	movw	r1, #54255	; 0xd3ef
   14ed4:	movt	r1, #1
   14ed8:	str	r0, [sp, #140]	; 0x8c
   14edc:	mov	r0, r1
   14ee0:	bl	10fbc <gettext@plt>
   14ee4:	ldr	r1, [fp, #8]
   14ee8:	ldr	r2, [r1]
   14eec:	ldr	r1, [fp, #8]
   14ef0:	ldr	r3, [r1, #4]
   14ef4:	ldr	r1, [fp, #8]
   14ef8:	ldr	r1, [r1, #8]
   14efc:	ldr	lr, [fp, #8]
   14f00:	ldr	lr, [lr, #12]
   14f04:	ldr	ip, [sp, #140]	; 0x8c
   14f08:	str	r0, [sp, #136]	; 0x88
   14f0c:	mov	r0, ip
   14f10:	ldr	r4, [sp, #136]	; 0x88
   14f14:	str	r1, [sp, #132]	; 0x84
   14f18:	mov	r1, r4
   14f1c:	ldr	r5, [sp, #132]	; 0x84
   14f20:	str	r5, [sp]
   14f24:	str	lr, [sp, #4]
   14f28:	bl	10fe0 <fprintf@plt>
   14f2c:	str	r0, [sp, #128]	; 0x80
   14f30:	b	15290 <__assert_fail@plt+0x41d8>
   14f34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f38:	movw	r1, #54287	; 0xd40f
   14f3c:	movt	r1, #1
   14f40:	str	r0, [sp, #124]	; 0x7c
   14f44:	mov	r0, r1
   14f48:	bl	10fbc <gettext@plt>
   14f4c:	ldr	r1, [fp, #8]
   14f50:	ldr	r2, [r1]
   14f54:	ldr	r1, [fp, #8]
   14f58:	ldr	r3, [r1, #4]
   14f5c:	ldr	r1, [fp, #8]
   14f60:	ldr	r1, [r1, #8]
   14f64:	ldr	lr, [fp, #8]
   14f68:	ldr	lr, [lr, #12]
   14f6c:	ldr	ip, [fp, #8]
   14f70:	ldr	ip, [ip, #16]
   14f74:	ldr	r4, [sp, #124]	; 0x7c
   14f78:	str	r0, [sp, #120]	; 0x78
   14f7c:	mov	r0, r4
   14f80:	ldr	r5, [sp, #120]	; 0x78
   14f84:	str	r1, [sp, #116]	; 0x74
   14f88:	mov	r1, r5
   14f8c:	ldr	r6, [sp, #116]	; 0x74
   14f90:	str	r6, [sp]
   14f94:	str	lr, [sp, #4]
   14f98:	str	ip, [sp, #8]
   14f9c:	bl	10fe0 <fprintf@plt>
   14fa0:	str	r0, [sp, #112]	; 0x70
   14fa4:	b	15290 <__assert_fail@plt+0x41d8>
   14fa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14fac:	movw	r1, #54323	; 0xd433
   14fb0:	movt	r1, #1
   14fb4:	str	r0, [sp, #108]	; 0x6c
   14fb8:	mov	r0, r1
   14fbc:	bl	10fbc <gettext@plt>
   14fc0:	ldr	r1, [fp, #8]
   14fc4:	ldr	r2, [r1]
   14fc8:	ldr	r1, [fp, #8]
   14fcc:	ldr	r3, [r1, #4]
   14fd0:	ldr	r1, [fp, #8]
   14fd4:	ldr	r1, [r1, #8]
   14fd8:	ldr	lr, [fp, #8]
   14fdc:	ldr	lr, [lr, #12]
   14fe0:	ldr	ip, [fp, #8]
   14fe4:	ldr	ip, [ip, #16]
   14fe8:	ldr	r4, [fp, #8]
   14fec:	ldr	r4, [r4, #20]
   14ff0:	ldr	r5, [sp, #108]	; 0x6c
   14ff4:	str	r0, [sp, #104]	; 0x68
   14ff8:	mov	r0, r5
   14ffc:	ldr	r6, [sp, #104]	; 0x68
   15000:	str	r1, [sp, #100]	; 0x64
   15004:	mov	r1, r6
   15008:	ldr	r7, [sp, #100]	; 0x64
   1500c:	str	r7, [sp]
   15010:	str	lr, [sp, #4]
   15014:	str	ip, [sp, #8]
   15018:	str	r4, [sp, #12]
   1501c:	bl	10fe0 <fprintf@plt>
   15020:	str	r0, [sp, #96]	; 0x60
   15024:	b	15290 <__assert_fail@plt+0x41d8>
   15028:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1502c:	movw	r1, #54363	; 0xd45b
   15030:	movt	r1, #1
   15034:	str	r0, [sp, #92]	; 0x5c
   15038:	mov	r0, r1
   1503c:	bl	10fbc <gettext@plt>
   15040:	ldr	r1, [fp, #8]
   15044:	ldr	r2, [r1]
   15048:	ldr	r1, [fp, #8]
   1504c:	ldr	r3, [r1, #4]
   15050:	ldr	r1, [fp, #8]
   15054:	ldr	r1, [r1, #8]
   15058:	ldr	lr, [fp, #8]
   1505c:	ldr	lr, [lr, #12]
   15060:	ldr	ip, [fp, #8]
   15064:	ldr	ip, [ip, #16]
   15068:	ldr	r4, [fp, #8]
   1506c:	ldr	r4, [r4, #20]
   15070:	ldr	r5, [fp, #8]
   15074:	ldr	r5, [r5, #24]
   15078:	ldr	r6, [sp, #92]	; 0x5c
   1507c:	str	r0, [sp, #88]	; 0x58
   15080:	mov	r0, r6
   15084:	ldr	r7, [sp, #88]	; 0x58
   15088:	str	r1, [sp, #84]	; 0x54
   1508c:	mov	r1, r7
   15090:	ldr	r8, [sp, #84]	; 0x54
   15094:	str	r8, [sp]
   15098:	str	lr, [sp, #4]
   1509c:	str	ip, [sp, #8]
   150a0:	str	r4, [sp, #12]
   150a4:	str	r5, [sp, #16]
   150a8:	bl	10fe0 <fprintf@plt>
   150ac:	str	r0, [sp, #80]	; 0x50
   150b0:	b	15290 <__assert_fail@plt+0x41d8>
   150b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150b8:	movw	r1, #54407	; 0xd487
   150bc:	movt	r1, #1
   150c0:	str	r0, [sp, #76]	; 0x4c
   150c4:	mov	r0, r1
   150c8:	bl	10fbc <gettext@plt>
   150cc:	ldr	r1, [fp, #8]
   150d0:	ldr	r2, [r1]
   150d4:	ldr	r1, [fp, #8]
   150d8:	ldr	r3, [r1, #4]
   150dc:	ldr	r1, [fp, #8]
   150e0:	ldr	r1, [r1, #8]
   150e4:	ldr	lr, [fp, #8]
   150e8:	ldr	lr, [lr, #12]
   150ec:	ldr	ip, [fp, #8]
   150f0:	ldr	ip, [ip, #16]
   150f4:	ldr	r4, [fp, #8]
   150f8:	ldr	r4, [r4, #20]
   150fc:	ldr	r5, [fp, #8]
   15100:	ldr	r5, [r5, #24]
   15104:	ldr	r6, [fp, #8]
   15108:	ldr	r6, [r6, #28]
   1510c:	ldr	r7, [sp, #76]	; 0x4c
   15110:	str	r0, [sp, #72]	; 0x48
   15114:	mov	r0, r7
   15118:	ldr	r8, [sp, #72]	; 0x48
   1511c:	str	r1, [sp, #68]	; 0x44
   15120:	mov	r1, r8
   15124:	ldr	r9, [sp, #68]	; 0x44
   15128:	str	r9, [sp]
   1512c:	str	lr, [sp, #4]
   15130:	str	ip, [sp, #8]
   15134:	str	r4, [sp, #12]
   15138:	str	r5, [sp, #16]
   1513c:	str	r6, [sp, #20]
   15140:	bl	10fe0 <fprintf@plt>
   15144:	str	r0, [sp, #64]	; 0x40
   15148:	b	15290 <__assert_fail@plt+0x41d8>
   1514c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15150:	movw	r1, #54455	; 0xd4b7
   15154:	movt	r1, #1
   15158:	str	r0, [sp, #60]	; 0x3c
   1515c:	mov	r0, r1
   15160:	bl	10fbc <gettext@plt>
   15164:	ldr	r1, [fp, #8]
   15168:	ldr	r2, [r1]
   1516c:	ldr	r1, [fp, #8]
   15170:	ldr	r3, [r1, #4]
   15174:	ldr	r1, [fp, #8]
   15178:	ldr	r1, [r1, #8]
   1517c:	ldr	lr, [fp, #8]
   15180:	ldr	lr, [lr, #12]
   15184:	ldr	ip, [fp, #8]
   15188:	ldr	ip, [ip, #16]
   1518c:	ldr	r4, [fp, #8]
   15190:	ldr	r4, [r4, #20]
   15194:	ldr	r5, [fp, #8]
   15198:	ldr	r5, [r5, #24]
   1519c:	ldr	r6, [fp, #8]
   151a0:	ldr	r6, [r6, #28]
   151a4:	ldr	r7, [fp, #8]
   151a8:	ldr	r7, [r7, #32]
   151ac:	ldr	r8, [sp, #60]	; 0x3c
   151b0:	str	r0, [sp, #56]	; 0x38
   151b4:	mov	r0, r8
   151b8:	ldr	r9, [sp, #56]	; 0x38
   151bc:	str	r1, [sp, #52]	; 0x34
   151c0:	mov	r1, r9
   151c4:	ldr	sl, [sp, #52]	; 0x34
   151c8:	str	sl, [sp]
   151cc:	str	lr, [sp, #4]
   151d0:	str	ip, [sp, #8]
   151d4:	str	r4, [sp, #12]
   151d8:	str	r5, [sp, #16]
   151dc:	str	r6, [sp, #20]
   151e0:	str	r7, [sp, #24]
   151e4:	bl	10fe0 <fprintf@plt>
   151e8:	str	r0, [sp, #48]	; 0x30
   151ec:	b	15290 <__assert_fail@plt+0x41d8>
   151f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151f4:	movw	r1, #54507	; 0xd4eb
   151f8:	movt	r1, #1
   151fc:	str	r0, [sp, #44]	; 0x2c
   15200:	mov	r0, r1
   15204:	bl	10fbc <gettext@plt>
   15208:	ldr	r1, [fp, #8]
   1520c:	ldr	r2, [r1]
   15210:	ldr	r1, [fp, #8]
   15214:	ldr	r3, [r1, #4]
   15218:	ldr	r1, [fp, #8]
   1521c:	ldr	r1, [r1, #8]
   15220:	ldr	lr, [fp, #8]
   15224:	ldr	lr, [lr, #12]
   15228:	ldr	ip, [fp, #8]
   1522c:	ldr	ip, [ip, #16]
   15230:	ldr	r4, [fp, #8]
   15234:	ldr	r4, [r4, #20]
   15238:	ldr	r5, [fp, #8]
   1523c:	ldr	r5, [r5, #24]
   15240:	ldr	r6, [fp, #8]
   15244:	ldr	r6, [r6, #28]
   15248:	ldr	r7, [fp, #8]
   1524c:	ldr	r7, [r7, #32]
   15250:	ldr	r8, [sp, #44]	; 0x2c
   15254:	str	r0, [sp, #40]	; 0x28
   15258:	mov	r0, r8
   1525c:	ldr	r9, [sp, #40]	; 0x28
   15260:	str	r1, [sp, #36]	; 0x24
   15264:	mov	r1, r9
   15268:	ldr	sl, [sp, #36]	; 0x24
   1526c:	str	sl, [sp]
   15270:	str	lr, [sp, #4]
   15274:	str	ip, [sp, #8]
   15278:	str	r4, [sp, #12]
   1527c:	str	r5, [sp, #16]
   15280:	str	r6, [sp, #20]
   15284:	str	r7, [sp, #24]
   15288:	bl	10fe0 <fprintf@plt>
   1528c:	str	r0, [sp, #32]
   15290:	sub	sp, fp, #28
   15294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15298:	push	{fp, lr}
   1529c:	mov	fp, sp
   152a0:	sub	sp, sp, #32
   152a4:	ldr	ip, [fp, #8]
   152a8:	str	r0, [fp, #-4]
   152ac:	str	r1, [fp, #-8]
   152b0:	str	r2, [fp, #-12]
   152b4:	str	r3, [sp, #16]
   152b8:	movw	r0, #0
   152bc:	str	r0, [sp, #12]
   152c0:	str	ip, [sp, #8]
   152c4:	ldr	r0, [fp, #8]
   152c8:	ldr	r1, [sp, #12]
   152cc:	add	r0, r0, r1, lsl #2
   152d0:	ldr	r0, [r0]
   152d4:	movw	r1, #0
   152d8:	cmp	r0, r1
   152dc:	beq	152f4 <__assert_fail@plt+0x423c>
   152e0:	b	152e4 <__assert_fail@plt+0x422c>
   152e4:	ldr	r0, [sp, #12]
   152e8:	add	r0, r0, #1
   152ec:	str	r0, [sp, #12]
   152f0:	b	152c4 <__assert_fail@plt+0x420c>
   152f4:	ldr	r0, [fp, #-4]
   152f8:	ldr	r1, [fp, #-8]
   152fc:	ldr	r2, [fp, #-12]
   15300:	ldr	r3, [sp, #16]
   15304:	ldr	ip, [fp, #8]
   15308:	ldr	lr, [sp, #12]
   1530c:	str	ip, [sp]
   15310:	str	lr, [sp, #4]
   15314:	bl	14c74 <__assert_fail@plt+0x3bbc>
   15318:	mov	sp, fp
   1531c:	pop	{fp, pc}
   15320:	push	{fp, lr}
   15324:	mov	fp, sp
   15328:	sub	sp, sp, #80	; 0x50
   1532c:	ldr	ip, [fp, #8]
   15330:	str	ip, [fp, #-4]
   15334:	str	r0, [fp, #-8]
   15338:	str	r1, [fp, #-12]
   1533c:	str	r2, [fp, #-16]
   15340:	str	r3, [fp, #-20]	; 0xffffffec
   15344:	movw	r0, #0
   15348:	str	r0, [fp, #-24]	; 0xffffffe8
   1534c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15350:	cmp	r0, #10
   15354:	movw	r0, #0
   15358:	str	r0, [sp, #12]
   1535c:	bcs	15394 <__assert_fail@plt+0x42dc>
   15360:	ldr	r0, [fp, #-4]
   15364:	add	r1, r0, #4
   15368:	str	r1, [fp, #-4]
   1536c:	ldr	r0, [r0]
   15370:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15374:	add	r2, sp, #16
   15378:	add	r1, r2, r1, lsl #2
   1537c:	str	r0, [r1]
   15380:	movw	r1, #0
   15384:	cmp	r0, r1
   15388:	movw	r0, #0
   1538c:	movne	r0, #1
   15390:	str	r0, [sp, #12]
   15394:	ldr	r0, [sp, #12]
   15398:	tst	r0, #1
   1539c:	beq	153b4 <__assert_fail@plt+0x42fc>
   153a0:	b	153a4 <__assert_fail@plt+0x42ec>
   153a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153a8:	add	r0, r0, #1
   153ac:	str	r0, [fp, #-24]	; 0xffffffe8
   153b0:	b	1534c <__assert_fail@plt+0x4294>
   153b4:	add	r0, sp, #16
   153b8:	ldr	r1, [fp, #-8]
   153bc:	ldr	r2, [fp, #-12]
   153c0:	ldr	r3, [fp, #-16]
   153c4:	ldr	ip, [fp, #-20]	; 0xffffffec
   153c8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   153cc:	str	r0, [sp, #8]
   153d0:	mov	r0, r1
   153d4:	mov	r1, r2
   153d8:	mov	r2, r3
   153dc:	mov	r3, ip
   153e0:	ldr	ip, [sp, #8]
   153e4:	str	ip, [sp]
   153e8:	str	lr, [sp, #4]
   153ec:	bl	14c74 <__assert_fail@plt+0x3bbc>
   153f0:	mov	sp, fp
   153f4:	pop	{fp, pc}
   153f8:	push	{fp, lr}
   153fc:	mov	fp, sp
   15400:	sub	sp, sp, #32
   15404:	str	r0, [fp, #-4]
   15408:	str	r1, [fp, #-8]
   1540c:	str	r2, [fp, #-12]
   15410:	str	r3, [sp, #16]
   15414:	add	r0, fp, #8
   15418:	str	r0, [sp, #12]
   1541c:	ldr	r0, [fp, #-4]
   15420:	ldr	r1, [fp, #-8]
   15424:	ldr	r2, [fp, #-12]
   15428:	ldr	r3, [sp, #16]
   1542c:	ldr	ip, [sp, #12]
   15430:	mov	lr, sp
   15434:	str	ip, [lr]
   15438:	bl	15320 <__assert_fail@plt+0x4268>
   1543c:	add	r0, sp, #12
   15440:	str	r0, [sp, #8]
   15444:	mov	sp, fp
   15448:	pop	{fp, pc}
   1544c:	push	{fp, lr}
   15450:	mov	fp, sp
   15454:	sub	sp, sp, #16
   15458:	movw	r0, #57684	; 0xe154
   1545c:	movt	r0, #2
   15460:	ldr	r1, [r0]
   15464:	movw	r0, #53435	; 0xd0bb
   15468:	movt	r0, #1
   1546c:	bl	10e54 <fputs_unlocked@plt>
   15470:	movw	r1, #54567	; 0xd527
   15474:	movt	r1, #1
   15478:	str	r0, [fp, #-4]
   1547c:	mov	r0, r1
   15480:	bl	10fbc <gettext@plt>
   15484:	movw	r1, #54587	; 0xd53b
   15488:	movt	r1, #1
   1548c:	bl	10e84 <printf@plt>
   15490:	movw	r1, #54609	; 0xd551
   15494:	movt	r1, #1
   15498:	str	r0, [sp, #8]
   1549c:	mov	r0, r1
   154a0:	bl	10fbc <gettext@plt>
   154a4:	movw	r1, #52965	; 0xcee5
   154a8:	movt	r1, #1
   154ac:	movw	r2, #53244	; 0xcffc
   154b0:	movt	r2, #1
   154b4:	bl	10e84 <printf@plt>
   154b8:	movw	r1, #54629	; 0xd565
   154bc:	movt	r1, #1
   154c0:	str	r0, [sp, #4]
   154c4:	mov	r0, r1
   154c8:	bl	10fbc <gettext@plt>
   154cc:	movw	r1, #54668	; 0xd58c
   154d0:	movt	r1, #1
   154d4:	bl	10e84 <printf@plt>
   154d8:	str	r0, [sp]
   154dc:	mov	sp, fp
   154e0:	pop	{fp, pc}
   154e4:	push	{fp, lr}
   154e8:	mov	fp, sp
   154ec:	sub	sp, sp, #16
   154f0:	str	r0, [fp, #-4]
   154f4:	str	r1, [sp, #8]
   154f8:	str	r2, [sp, #4]
   154fc:	ldr	r0, [fp, #-4]
   15500:	ldr	r1, [sp, #8]
   15504:	ldr	r2, [sp, #4]
   15508:	bl	15514 <__assert_fail@plt+0x445c>
   1550c:	mov	sp, fp
   15510:	pop	{fp, pc}
   15514:	push	{fp, lr}
   15518:	mov	fp, sp
   1551c:	sub	sp, sp, #16
   15520:	str	r0, [fp, #-4]
   15524:	str	r1, [sp, #8]
   15528:	str	r2, [sp, #4]
   1552c:	ldr	r0, [fp, #-4]
   15530:	ldr	r1, [sp, #8]
   15534:	ldr	r2, [sp, #4]
   15538:	bl	1ae9c <__assert_fail@plt+0x9de4>
   1553c:	str	r0, [sp]
   15540:	ldr	r0, [sp]
   15544:	movw	r1, #0
   15548:	cmp	r0, r1
   1554c:	bne	1557c <__assert_fail@plt+0x44c4>
   15550:	ldr	r0, [fp, #-4]
   15554:	movw	r1, #0
   15558:	cmp	r0, r1
   1555c:	beq	15578 <__assert_fail@plt+0x44c0>
   15560:	ldr	r0, [sp, #8]
   15564:	cmp	r0, #0
   15568:	beq	1557c <__assert_fail@plt+0x44c4>
   1556c:	ldr	r0, [sp, #4]
   15570:	cmp	r0, #0
   15574:	beq	1557c <__assert_fail@plt+0x44c4>
   15578:	bl	18364 <__assert_fail@plt+0x72ac>
   1557c:	ldr	r0, [sp]
   15580:	mov	sp, fp
   15584:	pop	{fp, pc}
   15588:	push	{fp, lr}
   1558c:	mov	fp, sp
   15590:	sub	sp, sp, #8
   15594:	str	r0, [sp, #4]
   15598:	ldr	r0, [sp, #4]
   1559c:	bl	1a8e0 <__assert_fail@plt+0x9828>
   155a0:	bl	155ac <__assert_fail@plt+0x44f4>
   155a4:	mov	sp, fp
   155a8:	pop	{fp, pc}
   155ac:	push	{fp, lr}
   155b0:	mov	fp, sp
   155b4:	sub	sp, sp, #8
   155b8:	str	r0, [sp, #4]
   155bc:	ldr	r0, [sp, #4]
   155c0:	movw	r1, #0
   155c4:	cmp	r0, r1
   155c8:	bne	155d0 <__assert_fail@plt+0x4518>
   155cc:	bl	18364 <__assert_fail@plt+0x72ac>
   155d0:	ldr	r0, [sp, #4]
   155d4:	mov	sp, fp
   155d8:	pop	{fp, pc}
   155dc:	push	{fp, lr}
   155e0:	mov	fp, sp
   155e4:	sub	sp, sp, #8
   155e8:	str	r0, [sp, #4]
   155ec:	ldr	r0, [sp, #4]
   155f0:	bl	1abd8 <__assert_fail@plt+0x9b20>
   155f4:	bl	155ac <__assert_fail@plt+0x44f4>
   155f8:	mov	sp, fp
   155fc:	pop	{fp, pc}
   15600:	push	{fp, lr}
   15604:	mov	fp, sp
   15608:	sub	sp, sp, #8
   1560c:	str	r0, [sp, #4]
   15610:	ldr	r0, [sp, #4]
   15614:	bl	15588 <__assert_fail@plt+0x44d0>
   15618:	mov	sp, fp
   1561c:	pop	{fp, pc}
   15620:	push	{fp, lr}
   15624:	mov	fp, sp
   15628:	sub	sp, sp, #16
   1562c:	str	r0, [fp, #-4]
   15630:	str	r1, [sp, #8]
   15634:	ldr	r0, [fp, #-4]
   15638:	ldr	r1, [sp, #8]
   1563c:	bl	1a950 <__assert_fail@plt+0x9898>
   15640:	str	r0, [sp, #4]
   15644:	ldr	r0, [sp, #4]
   15648:	movw	r1, #0
   1564c:	cmp	r0, r1
   15650:	bne	15674 <__assert_fail@plt+0x45bc>
   15654:	ldr	r0, [fp, #-4]
   15658:	movw	r1, #0
   1565c:	cmp	r0, r1
   15660:	beq	15670 <__assert_fail@plt+0x45b8>
   15664:	ldr	r0, [sp, #8]
   15668:	cmp	r0, #0
   1566c:	beq	15674 <__assert_fail@plt+0x45bc>
   15670:	bl	18364 <__assert_fail@plt+0x72ac>
   15674:	ldr	r0, [sp, #4]
   15678:	mov	sp, fp
   1567c:	pop	{fp, pc}
   15680:	push	{fp, lr}
   15684:	mov	fp, sp
   15688:	sub	sp, sp, #8
   1568c:	str	r0, [sp, #4]
   15690:	str	r1, [sp]
   15694:	ldr	r0, [sp, #4]
   15698:	ldr	r1, [sp]
   1569c:	bl	1ac18 <__assert_fail@plt+0x9b60>
   156a0:	bl	155ac <__assert_fail@plt+0x44f4>
   156a4:	mov	sp, fp
   156a8:	pop	{fp, pc}
   156ac:	push	{fp, lr}
   156b0:	mov	fp, sp
   156b4:	sub	sp, sp, #16
   156b8:	str	r0, [fp, #-4]
   156bc:	str	r1, [sp, #8]
   156c0:	str	r2, [sp, #4]
   156c4:	ldr	r0, [fp, #-4]
   156c8:	ldr	r1, [sp, #8]
   156cc:	ldr	r2, [sp, #4]
   156d0:	bl	1ad10 <__assert_fail@plt+0x9c58>
   156d4:	bl	155ac <__assert_fail@plt+0x44f4>
   156d8:	mov	sp, fp
   156dc:	pop	{fp, pc}
   156e0:	push	{fp, lr}
   156e4:	mov	fp, sp
   156e8:	sub	sp, sp, #8
   156ec:	str	r0, [sp, #4]
   156f0:	str	r1, [sp]
   156f4:	ldr	r1, [sp, #4]
   156f8:	ldr	r2, [sp]
   156fc:	movw	r0, #0
   15700:	bl	15514 <__assert_fail@plt+0x445c>
   15704:	mov	sp, fp
   15708:	pop	{fp, pc}
   1570c:	push	{fp, lr}
   15710:	mov	fp, sp
   15714:	sub	sp, sp, #8
   15718:	str	r0, [sp, #4]
   1571c:	str	r1, [sp]
   15720:	ldr	r1, [sp, #4]
   15724:	ldr	r2, [sp]
   15728:	movw	r0, #0
   1572c:	bl	156ac <__assert_fail@plt+0x45f4>
   15730:	mov	sp, fp
   15734:	pop	{fp, pc}
   15738:	push	{fp, lr}
   1573c:	mov	fp, sp
   15740:	sub	sp, sp, #8
   15744:	str	r0, [sp, #4]
   15748:	str	r1, [sp]
   1574c:	ldr	r0, [sp, #4]
   15750:	ldr	r1, [sp]
   15754:	movw	r2, #1
   15758:	bl	15764 <__assert_fail@plt+0x46ac>
   1575c:	mov	sp, fp
   15760:	pop	{fp, pc}
   15764:	push	{fp, lr}
   15768:	mov	fp, sp
   1576c:	sub	sp, sp, #16
   15770:	str	r0, [fp, #-4]
   15774:	str	r1, [sp, #8]
   15778:	str	r2, [sp, #4]
   1577c:	ldr	r0, [sp, #8]
   15780:	ldr	r0, [r0]
   15784:	str	r0, [sp]
   15788:	ldr	r0, [fp, #-4]
   1578c:	movw	r1, #0
   15790:	cmp	r0, r1
   15794:	bne	157e0 <__assert_fail@plt+0x4728>
   15798:	ldr	r0, [sp]
   1579c:	cmp	r0, #0
   157a0:	bne	157dc <__assert_fail@plt+0x4724>
   157a4:	ldr	r0, [sp, #4]
   157a8:	movw	r1, #64	; 0x40
   157ac:	udiv	r0, r1, r0
   157b0:	str	r0, [sp]
   157b4:	ldr	r0, [sp]
   157b8:	cmp	r0, #0
   157bc:	movw	r0, #0
   157c0:	movne	r0, #1
   157c4:	mvn	r1, #0
   157c8:	eor	r0, r0, r1
   157cc:	and	r0, r0, #1
   157d0:	ldr	r1, [sp]
   157d4:	add	r0, r1, r0
   157d8:	str	r0, [sp]
   157dc:	b	15810 <__assert_fail@plt+0x4758>
   157e0:	ldr	r0, [sp]
   157e4:	ldr	r1, [sp]
   157e8:	lsr	r1, r1, #1
   157ec:	add	r1, r1, #1
   157f0:	adds	r0, r0, r1
   157f4:	mov	r1, #0
   157f8:	adc	r1, r1, #0
   157fc:	str	r0, [sp]
   15800:	tst	r1, #1
   15804:	beq	1580c <__assert_fail@plt+0x4754>
   15808:	bl	18364 <__assert_fail@plt+0x72ac>
   1580c:	b	15810 <__assert_fail@plt+0x4758>
   15810:	ldr	r0, [fp, #-4]
   15814:	ldr	r1, [sp]
   15818:	ldr	r2, [sp, #4]
   1581c:	bl	15514 <__assert_fail@plt+0x445c>
   15820:	str	r0, [fp, #-4]
   15824:	ldr	r0, [sp]
   15828:	ldr	r1, [sp, #8]
   1582c:	str	r0, [r1]
   15830:	ldr	r0, [fp, #-4]
   15834:	mov	sp, fp
   15838:	pop	{fp, pc}
   1583c:	push	{fp, lr}
   15840:	mov	fp, sp
   15844:	sub	sp, sp, #376	; 0x178
   15848:	ldr	ip, [fp, #8]
   1584c:	str	r0, [fp, #-4]
   15850:	str	r1, [fp, #-8]
   15854:	str	r2, [fp, #-12]
   15858:	str	r3, [fp, #-16]
   1585c:	ldr	r0, [fp, #-8]
   15860:	ldr	r0, [r0]
   15864:	str	r0, [fp, #-20]	; 0xffffffec
   15868:	ldr	r0, [fp, #-20]	; 0xffffffec
   1586c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15870:	asr	r1, r1, #1
   15874:	add	r1, r0, r1
   15878:	mov	r2, #1
   1587c:	cmp	r1, r0
   15880:	movwvc	r2, #0
   15884:	str	r1, [fp, #-24]	; 0xffffffe8
   15888:	tst	r2, #1
   1588c:	str	ip, [fp, #-36]	; 0xffffffdc
   15890:	beq	1589c <__assert_fail@plt+0x47e4>
   15894:	ldr	r0, [pc, #4044]	; 16868 <__assert_fail@plt+0x57b0>
   15898:	str	r0, [fp, #-24]	; 0xffffffe8
   1589c:	ldr	r0, [fp, #-16]
   158a0:	movw	r1, #0
   158a4:	cmp	r1, r0
   158a8:	bgt	158c4 <__assert_fail@plt+0x480c>
   158ac:	ldr	r0, [fp, #-16]
   158b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158b4:	cmp	r0, r1
   158b8:	bge	158c4 <__assert_fail@plt+0x480c>
   158bc:	ldr	r0, [fp, #-16]
   158c0:	str	r0, [fp, #-24]	; 0xffffffe8
   158c4:	b	15c9c <__assert_fail@plt+0x4be4>
   158c8:	b	158cc <__assert_fail@plt+0x4814>
   158cc:	ldr	r0, [fp, #8]
   158d0:	cmp	r0, #0
   158d4:	bge	159e8 <__assert_fail@plt+0x4930>
   158d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158dc:	cmp	r0, #0
   158e0:	bge	1596c <__assert_fail@plt+0x48b4>
   158e4:	b	158e8 <__assert_fail@plt+0x4830>
   158e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158ec:	ldr	r1, [fp, #8]
   158f0:	movw	r2, #127	; 0x7f
   158f4:	sdiv	r1, r2, r1
   158f8:	cmp	r0, r1
   158fc:	blt	15a88 <__assert_fail@plt+0x49d0>
   15900:	b	15aa0 <__assert_fail@plt+0x49e8>
   15904:	b	15908 <__assert_fail@plt+0x4850>
   15908:	ldr	r0, [pc, #4076]	; 168fc <__assert_fail@plt+0x5844>
   1590c:	ldr	r1, [fp, #8]
   15910:	cmp	r1, r0
   15914:	blt	1592c <__assert_fail@plt+0x4874>
   15918:	b	15938 <__assert_fail@plt+0x4880>
   1591c:	ldr	r0, [fp, #8]
   15920:	movw	r1, #0
   15924:	cmp	r1, r0
   15928:	bge	15938 <__assert_fail@plt+0x4880>
   1592c:	movw	r0, #0
   15930:	str	r0, [fp, #-40]	; 0xffffffd8
   15934:	b	15950 <__assert_fail@plt+0x4898>
   15938:	ldr	r0, [fp, #8]
   1593c:	movw	r1, #0
   15940:	sub	r0, r1, r0
   15944:	movw	r1, #127	; 0x7f
   15948:	sdiv	r0, r1, r0
   1594c:	str	r0, [fp, #-40]	; 0xffffffd8
   15950:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15954:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15958:	mvn	r2, #0
   1595c:	sub	r1, r2, r1
   15960:	cmp	r0, r1
   15964:	ble	15a88 <__assert_fail@plt+0x49d0>
   15968:	b	15aa0 <__assert_fail@plt+0x49e8>
   1596c:	b	15970 <__assert_fail@plt+0x48b8>
   15970:	b	159cc <__assert_fail@plt+0x4914>
   15974:	b	159cc <__assert_fail@plt+0x4914>
   15978:	ldr	r0, [fp, #8]
   1597c:	cmn	r0, #1
   15980:	bne	159cc <__assert_fail@plt+0x4914>
   15984:	b	15988 <__assert_fail@plt+0x48d0>
   15988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1598c:	mvn	r1, #127	; 0x7f
   15990:	add	r0, r0, r1
   15994:	movw	r1, #0
   15998:	cmp	r1, r0
   1599c:	blt	15a88 <__assert_fail@plt+0x49d0>
   159a0:	b	15aa0 <__assert_fail@plt+0x49e8>
   159a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159a8:	movw	r1, #0
   159ac:	cmp	r1, r0
   159b0:	bge	15aa0 <__assert_fail@plt+0x49e8>
   159b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159b8:	sub	r0, r0, #1
   159bc:	movw	r1, #127	; 0x7f
   159c0:	cmp	r1, r0
   159c4:	blt	15a88 <__assert_fail@plt+0x49d0>
   159c8:	b	15aa0 <__assert_fail@plt+0x49e8>
   159cc:	ldr	r0, [fp, #8]
   159d0:	mvn	r1, #127	; 0x7f
   159d4:	sdiv	r0, r1, r0
   159d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159dc:	cmp	r0, r1
   159e0:	blt	15a88 <__assert_fail@plt+0x49d0>
   159e4:	b	15aa0 <__assert_fail@plt+0x49e8>
   159e8:	ldr	r0, [fp, #8]
   159ec:	cmp	r0, #0
   159f0:	bne	159f8 <__assert_fail@plt+0x4940>
   159f4:	b	15aa0 <__assert_fail@plt+0x49e8>
   159f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159fc:	cmp	r0, #0
   15a00:	bge	15a70 <__assert_fail@plt+0x49b8>
   15a04:	b	15a08 <__assert_fail@plt+0x4950>
   15a08:	b	15a54 <__assert_fail@plt+0x499c>
   15a0c:	b	15a54 <__assert_fail@plt+0x499c>
   15a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a14:	cmn	r0, #1
   15a18:	bne	15a54 <__assert_fail@plt+0x499c>
   15a1c:	b	15a20 <__assert_fail@plt+0x4968>
   15a20:	ldr	r0, [fp, #8]
   15a24:	mvn	r1, #127	; 0x7f
   15a28:	add	r0, r0, r1
   15a2c:	movw	r1, #0
   15a30:	cmp	r1, r0
   15a34:	blt	15a88 <__assert_fail@plt+0x49d0>
   15a38:	b	15aa0 <__assert_fail@plt+0x49e8>
   15a3c:	ldr	r0, [fp, #8]
   15a40:	sub	r0, r0, #1
   15a44:	movw	r1, #127	; 0x7f
   15a48:	cmp	r1, r0
   15a4c:	blt	15a88 <__assert_fail@plt+0x49d0>
   15a50:	b	15aa0 <__assert_fail@plt+0x49e8>
   15a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a58:	mvn	r1, #127	; 0x7f
   15a5c:	sdiv	r0, r1, r0
   15a60:	ldr	r1, [fp, #8]
   15a64:	cmp	r0, r1
   15a68:	blt	15a88 <__assert_fail@plt+0x49d0>
   15a6c:	b	15aa0 <__assert_fail@plt+0x49e8>
   15a70:	ldr	r0, [fp, #8]
   15a74:	movw	r1, #127	; 0x7f
   15a78:	sdiv	r0, r1, r0
   15a7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a80:	cmp	r0, r1
   15a84:	bge	15aa0 <__assert_fail@plt+0x49e8>
   15a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a8c:	ldr	r1, [fp, #8]
   15a90:	mul	r0, r0, r1
   15a94:	sxtb	r0, r0
   15a98:	str	r0, [fp, #-28]	; 0xffffffe4
   15a9c:	b	16cb4 <__assert_fail@plt+0x5bfc>
   15aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15aa4:	ldr	r1, [fp, #8]
   15aa8:	mul	r0, r0, r1
   15aac:	sxtb	r0, r0
   15ab0:	str	r0, [fp, #-28]	; 0xffffffe4
   15ab4:	b	16cc4 <__assert_fail@plt+0x5c0c>
   15ab8:	ldr	r0, [fp, #8]
   15abc:	cmp	r0, #0
   15ac0:	bge	15bd0 <__assert_fail@plt+0x4b18>
   15ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ac8:	cmp	r0, #0
   15acc:	bge	15b58 <__assert_fail@plt+0x4aa0>
   15ad0:	b	15ad4 <__assert_fail@plt+0x4a1c>
   15ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ad8:	ldr	r1, [fp, #8]
   15adc:	movw	r2, #255	; 0xff
   15ae0:	sdiv	r1, r2, r1
   15ae4:	cmp	r0, r1
   15ae8:	blt	15c6c <__assert_fail@plt+0x4bb4>
   15aec:	b	15c84 <__assert_fail@plt+0x4bcc>
   15af0:	b	15af4 <__assert_fail@plt+0x4a3c>
   15af4:	ldr	r0, [pc, #3584]	; 168fc <__assert_fail@plt+0x5844>
   15af8:	ldr	r1, [fp, #8]
   15afc:	cmp	r1, r0
   15b00:	blt	15b18 <__assert_fail@plt+0x4a60>
   15b04:	b	15b24 <__assert_fail@plt+0x4a6c>
   15b08:	ldr	r0, [fp, #8]
   15b0c:	movw	r1, #0
   15b10:	cmp	r1, r0
   15b14:	bge	15b24 <__assert_fail@plt+0x4a6c>
   15b18:	movw	r0, #0
   15b1c:	str	r0, [fp, #-44]	; 0xffffffd4
   15b20:	b	15b3c <__assert_fail@plt+0x4a84>
   15b24:	ldr	r0, [fp, #8]
   15b28:	movw	r1, #0
   15b2c:	sub	r0, r1, r0
   15b30:	movw	r1, #255	; 0xff
   15b34:	sdiv	r0, r1, r0
   15b38:	str	r0, [fp, #-44]	; 0xffffffd4
   15b3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b44:	mvn	r2, #0
   15b48:	sub	r1, r2, r1
   15b4c:	cmp	r0, r1
   15b50:	ble	15c6c <__assert_fail@plt+0x4bb4>
   15b54:	b	15c84 <__assert_fail@plt+0x4bcc>
   15b58:	b	15b5c <__assert_fail@plt+0x4aa4>
   15b5c:	b	15bb4 <__assert_fail@plt+0x4afc>
   15b60:	b	15bb4 <__assert_fail@plt+0x4afc>
   15b64:	ldr	r0, [fp, #8]
   15b68:	cmn	r0, #1
   15b6c:	bne	15bb4 <__assert_fail@plt+0x4afc>
   15b70:	b	15b74 <__assert_fail@plt+0x4abc>
   15b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b78:	add	r0, r0, #0
   15b7c:	movw	r1, #0
   15b80:	cmp	r1, r0
   15b84:	blt	15c6c <__assert_fail@plt+0x4bb4>
   15b88:	b	15c84 <__assert_fail@plt+0x4bcc>
   15b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b90:	movw	r1, #0
   15b94:	cmp	r1, r0
   15b98:	bge	15c84 <__assert_fail@plt+0x4bcc>
   15b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ba0:	sub	r0, r0, #1
   15ba4:	mvn	r1, #0
   15ba8:	cmp	r1, r0
   15bac:	blt	15c6c <__assert_fail@plt+0x4bb4>
   15bb0:	b	15c84 <__assert_fail@plt+0x4bcc>
   15bb4:	ldr	r0, [fp, #8]
   15bb8:	movw	r1, #0
   15bbc:	sdiv	r0, r1, r0
   15bc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bc4:	cmp	r0, r1
   15bc8:	blt	15c6c <__assert_fail@plt+0x4bb4>
   15bcc:	b	15c84 <__assert_fail@plt+0x4bcc>
   15bd0:	ldr	r0, [fp, #8]
   15bd4:	cmp	r0, #0
   15bd8:	bne	15be0 <__assert_fail@plt+0x4b28>
   15bdc:	b	15c84 <__assert_fail@plt+0x4bcc>
   15be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15be4:	cmp	r0, #0
   15be8:	bge	15c54 <__assert_fail@plt+0x4b9c>
   15bec:	b	15bf0 <__assert_fail@plt+0x4b38>
   15bf0:	b	15c38 <__assert_fail@plt+0x4b80>
   15bf4:	b	15c38 <__assert_fail@plt+0x4b80>
   15bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bfc:	cmn	r0, #1
   15c00:	bne	15c38 <__assert_fail@plt+0x4b80>
   15c04:	b	15c08 <__assert_fail@plt+0x4b50>
   15c08:	ldr	r0, [fp, #8]
   15c0c:	add	r0, r0, #0
   15c10:	movw	r1, #0
   15c14:	cmp	r1, r0
   15c18:	blt	15c6c <__assert_fail@plt+0x4bb4>
   15c1c:	b	15c84 <__assert_fail@plt+0x4bcc>
   15c20:	ldr	r0, [fp, #8]
   15c24:	sub	r0, r0, #1
   15c28:	mvn	r1, #0
   15c2c:	cmp	r1, r0
   15c30:	blt	15c6c <__assert_fail@plt+0x4bb4>
   15c34:	b	15c84 <__assert_fail@plt+0x4bcc>
   15c38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c3c:	movw	r1, #0
   15c40:	sdiv	r0, r1, r0
   15c44:	ldr	r1, [fp, #8]
   15c48:	cmp	r0, r1
   15c4c:	blt	15c6c <__assert_fail@plt+0x4bb4>
   15c50:	b	15c84 <__assert_fail@plt+0x4bcc>
   15c54:	ldr	r0, [fp, #8]
   15c58:	movw	r1, #255	; 0xff
   15c5c:	sdiv	r0, r1, r0
   15c60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c64:	cmp	r0, r1
   15c68:	bge	15c84 <__assert_fail@plt+0x4bcc>
   15c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c70:	ldr	r1, [fp, #8]
   15c74:	mul	r0, r0, r1
   15c78:	and	r0, r0, #255	; 0xff
   15c7c:	str	r0, [fp, #-28]	; 0xffffffe4
   15c80:	b	16cb4 <__assert_fail@plt+0x5bfc>
   15c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c88:	ldr	r1, [fp, #8]
   15c8c:	mul	r0, r0, r1
   15c90:	and	r0, r0, #255	; 0xff
   15c94:	str	r0, [fp, #-28]	; 0xffffffe4
   15c98:	b	16cc4 <__assert_fail@plt+0x5c0c>
   15c9c:	b	16074 <__assert_fail@plt+0x4fbc>
   15ca0:	b	15ca4 <__assert_fail@plt+0x4bec>
   15ca4:	ldr	r0, [fp, #8]
   15ca8:	cmp	r0, #0
   15cac:	bge	15dc0 <__assert_fail@plt+0x4d08>
   15cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cb4:	cmp	r0, #0
   15cb8:	bge	15d44 <__assert_fail@plt+0x4c8c>
   15cbc:	b	15cc0 <__assert_fail@plt+0x4c08>
   15cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cc4:	ldr	r1, [fp, #8]
   15cc8:	movw	r2, #32767	; 0x7fff
   15ccc:	sdiv	r1, r2, r1
   15cd0:	cmp	r0, r1
   15cd4:	blt	15e60 <__assert_fail@plt+0x4da8>
   15cd8:	b	15e78 <__assert_fail@plt+0x4dc0>
   15cdc:	b	15ce0 <__assert_fail@plt+0x4c28>
   15ce0:	ldr	r0, [pc, #3092]	; 168fc <__assert_fail@plt+0x5844>
   15ce4:	ldr	r1, [fp, #8]
   15ce8:	cmp	r1, r0
   15cec:	blt	15d04 <__assert_fail@plt+0x4c4c>
   15cf0:	b	15d10 <__assert_fail@plt+0x4c58>
   15cf4:	ldr	r0, [fp, #8]
   15cf8:	movw	r1, #0
   15cfc:	cmp	r1, r0
   15d00:	bge	15d10 <__assert_fail@plt+0x4c58>
   15d04:	movw	r0, #0
   15d08:	str	r0, [fp, #-48]	; 0xffffffd0
   15d0c:	b	15d28 <__assert_fail@plt+0x4c70>
   15d10:	ldr	r0, [fp, #8]
   15d14:	movw	r1, #0
   15d18:	sub	r0, r1, r0
   15d1c:	movw	r1, #32767	; 0x7fff
   15d20:	sdiv	r0, r1, r0
   15d24:	str	r0, [fp, #-48]	; 0xffffffd0
   15d28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d30:	mvn	r2, #0
   15d34:	sub	r1, r2, r1
   15d38:	cmp	r0, r1
   15d3c:	ble	15e60 <__assert_fail@plt+0x4da8>
   15d40:	b	15e78 <__assert_fail@plt+0x4dc0>
   15d44:	b	15d48 <__assert_fail@plt+0x4c90>
   15d48:	b	15da4 <__assert_fail@plt+0x4cec>
   15d4c:	b	15da4 <__assert_fail@plt+0x4cec>
   15d50:	ldr	r0, [fp, #8]
   15d54:	cmn	r0, #1
   15d58:	bne	15da4 <__assert_fail@plt+0x4cec>
   15d5c:	b	15d60 <__assert_fail@plt+0x4ca8>
   15d60:	ldr	r0, [pc, #3928]	; 16cc0 <__assert_fail@plt+0x5c08>
   15d64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d68:	add	r0, r1, r0
   15d6c:	movw	r1, #0
   15d70:	cmp	r1, r0
   15d74:	blt	15e60 <__assert_fail@plt+0x4da8>
   15d78:	b	15e78 <__assert_fail@plt+0x4dc0>
   15d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d80:	movw	r1, #0
   15d84:	cmp	r1, r0
   15d88:	bge	15e78 <__assert_fail@plt+0x4dc0>
   15d8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d90:	sub	r0, r0, #1
   15d94:	movw	r1, #32767	; 0x7fff
   15d98:	cmp	r1, r0
   15d9c:	blt	15e60 <__assert_fail@plt+0x4da8>
   15da0:	b	15e78 <__assert_fail@plt+0x4dc0>
   15da4:	ldr	r0, [pc, #3860]	; 16cc0 <__assert_fail@plt+0x5c08>
   15da8:	ldr	r1, [fp, #8]
   15dac:	sdiv	r0, r0, r1
   15db0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15db4:	cmp	r0, r1
   15db8:	blt	15e60 <__assert_fail@plt+0x4da8>
   15dbc:	b	15e78 <__assert_fail@plt+0x4dc0>
   15dc0:	ldr	r0, [fp, #8]
   15dc4:	cmp	r0, #0
   15dc8:	bne	15dd0 <__assert_fail@plt+0x4d18>
   15dcc:	b	15e78 <__assert_fail@plt+0x4dc0>
   15dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dd4:	cmp	r0, #0
   15dd8:	bge	15e48 <__assert_fail@plt+0x4d90>
   15ddc:	b	15de0 <__assert_fail@plt+0x4d28>
   15de0:	b	15e2c <__assert_fail@plt+0x4d74>
   15de4:	b	15e2c <__assert_fail@plt+0x4d74>
   15de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dec:	cmn	r0, #1
   15df0:	bne	15e2c <__assert_fail@plt+0x4d74>
   15df4:	b	15df8 <__assert_fail@plt+0x4d40>
   15df8:	ldr	r0, [pc, #3776]	; 16cc0 <__assert_fail@plt+0x5c08>
   15dfc:	ldr	r1, [fp, #8]
   15e00:	add	r0, r1, r0
   15e04:	movw	r1, #0
   15e08:	cmp	r1, r0
   15e0c:	blt	15e60 <__assert_fail@plt+0x4da8>
   15e10:	b	15e78 <__assert_fail@plt+0x4dc0>
   15e14:	ldr	r0, [fp, #8]
   15e18:	sub	r0, r0, #1
   15e1c:	movw	r1, #32767	; 0x7fff
   15e20:	cmp	r1, r0
   15e24:	blt	15e60 <__assert_fail@plt+0x4da8>
   15e28:	b	15e78 <__assert_fail@plt+0x4dc0>
   15e2c:	ldr	r0, [pc, #3724]	; 16cc0 <__assert_fail@plt+0x5c08>
   15e30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e34:	sdiv	r0, r0, r1
   15e38:	ldr	r1, [fp, #8]
   15e3c:	cmp	r0, r1
   15e40:	blt	15e60 <__assert_fail@plt+0x4da8>
   15e44:	b	15e78 <__assert_fail@plt+0x4dc0>
   15e48:	ldr	r0, [fp, #8]
   15e4c:	movw	r1, #32767	; 0x7fff
   15e50:	sdiv	r0, r1, r0
   15e54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e58:	cmp	r0, r1
   15e5c:	bge	15e78 <__assert_fail@plt+0x4dc0>
   15e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e64:	ldr	r1, [fp, #8]
   15e68:	mul	r0, r0, r1
   15e6c:	sxth	r0, r0
   15e70:	str	r0, [fp, #-28]	; 0xffffffe4
   15e74:	b	16cb4 <__assert_fail@plt+0x5bfc>
   15e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e7c:	ldr	r1, [fp, #8]
   15e80:	mul	r0, r0, r1
   15e84:	sxth	r0, r0
   15e88:	str	r0, [fp, #-28]	; 0xffffffe4
   15e8c:	b	16cc4 <__assert_fail@plt+0x5c0c>
   15e90:	ldr	r0, [fp, #8]
   15e94:	cmp	r0, #0
   15e98:	bge	15fa8 <__assert_fail@plt+0x4ef0>
   15e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ea0:	cmp	r0, #0
   15ea4:	bge	15f30 <__assert_fail@plt+0x4e78>
   15ea8:	b	15eac <__assert_fail@plt+0x4df4>
   15eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15eb0:	ldr	r1, [fp, #8]
   15eb4:	movw	r2, #65535	; 0xffff
   15eb8:	sdiv	r1, r2, r1
   15ebc:	cmp	r0, r1
   15ec0:	blt	16044 <__assert_fail@plt+0x4f8c>
   15ec4:	b	1605c <__assert_fail@plt+0x4fa4>
   15ec8:	b	15ecc <__assert_fail@plt+0x4e14>
   15ecc:	ldr	r0, [pc, #2600]	; 168fc <__assert_fail@plt+0x5844>
   15ed0:	ldr	r1, [fp, #8]
   15ed4:	cmp	r1, r0
   15ed8:	blt	15ef0 <__assert_fail@plt+0x4e38>
   15edc:	b	15efc <__assert_fail@plt+0x4e44>
   15ee0:	ldr	r0, [fp, #8]
   15ee4:	movw	r1, #0
   15ee8:	cmp	r1, r0
   15eec:	bge	15efc <__assert_fail@plt+0x4e44>
   15ef0:	movw	r0, #0
   15ef4:	str	r0, [fp, #-52]	; 0xffffffcc
   15ef8:	b	15f14 <__assert_fail@plt+0x4e5c>
   15efc:	ldr	r0, [fp, #8]
   15f00:	movw	r1, #0
   15f04:	sub	r0, r1, r0
   15f08:	movw	r1, #65535	; 0xffff
   15f0c:	sdiv	r0, r1, r0
   15f10:	str	r0, [fp, #-52]	; 0xffffffcc
   15f14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15f18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f1c:	mvn	r2, #0
   15f20:	sub	r1, r2, r1
   15f24:	cmp	r0, r1
   15f28:	ble	16044 <__assert_fail@plt+0x4f8c>
   15f2c:	b	1605c <__assert_fail@plt+0x4fa4>
   15f30:	b	15f34 <__assert_fail@plt+0x4e7c>
   15f34:	b	15f8c <__assert_fail@plt+0x4ed4>
   15f38:	b	15f8c <__assert_fail@plt+0x4ed4>
   15f3c:	ldr	r0, [fp, #8]
   15f40:	cmn	r0, #1
   15f44:	bne	15f8c <__assert_fail@plt+0x4ed4>
   15f48:	b	15f4c <__assert_fail@plt+0x4e94>
   15f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f50:	add	r0, r0, #0
   15f54:	movw	r1, #0
   15f58:	cmp	r1, r0
   15f5c:	blt	16044 <__assert_fail@plt+0x4f8c>
   15f60:	b	1605c <__assert_fail@plt+0x4fa4>
   15f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f68:	movw	r1, #0
   15f6c:	cmp	r1, r0
   15f70:	bge	1605c <__assert_fail@plt+0x4fa4>
   15f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f78:	sub	r0, r0, #1
   15f7c:	mvn	r1, #0
   15f80:	cmp	r1, r0
   15f84:	blt	16044 <__assert_fail@plt+0x4f8c>
   15f88:	b	1605c <__assert_fail@plt+0x4fa4>
   15f8c:	ldr	r0, [fp, #8]
   15f90:	movw	r1, #0
   15f94:	sdiv	r0, r1, r0
   15f98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f9c:	cmp	r0, r1
   15fa0:	blt	16044 <__assert_fail@plt+0x4f8c>
   15fa4:	b	1605c <__assert_fail@plt+0x4fa4>
   15fa8:	ldr	r0, [fp, #8]
   15fac:	cmp	r0, #0
   15fb0:	bne	15fb8 <__assert_fail@plt+0x4f00>
   15fb4:	b	1605c <__assert_fail@plt+0x4fa4>
   15fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fbc:	cmp	r0, #0
   15fc0:	bge	1602c <__assert_fail@plt+0x4f74>
   15fc4:	b	15fc8 <__assert_fail@plt+0x4f10>
   15fc8:	b	16010 <__assert_fail@plt+0x4f58>
   15fcc:	b	16010 <__assert_fail@plt+0x4f58>
   15fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fd4:	cmn	r0, #1
   15fd8:	bne	16010 <__assert_fail@plt+0x4f58>
   15fdc:	b	15fe0 <__assert_fail@plt+0x4f28>
   15fe0:	ldr	r0, [fp, #8]
   15fe4:	add	r0, r0, #0
   15fe8:	movw	r1, #0
   15fec:	cmp	r1, r0
   15ff0:	blt	16044 <__assert_fail@plt+0x4f8c>
   15ff4:	b	1605c <__assert_fail@plt+0x4fa4>
   15ff8:	ldr	r0, [fp, #8]
   15ffc:	sub	r0, r0, #1
   16000:	mvn	r1, #0
   16004:	cmp	r1, r0
   16008:	blt	16044 <__assert_fail@plt+0x4f8c>
   1600c:	b	1605c <__assert_fail@plt+0x4fa4>
   16010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16014:	movw	r1, #0
   16018:	sdiv	r0, r1, r0
   1601c:	ldr	r1, [fp, #8]
   16020:	cmp	r0, r1
   16024:	blt	16044 <__assert_fail@plt+0x4f8c>
   16028:	b	1605c <__assert_fail@plt+0x4fa4>
   1602c:	ldr	r0, [fp, #8]
   16030:	movw	r1, #65535	; 0xffff
   16034:	sdiv	r0, r1, r0
   16038:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1603c:	cmp	r0, r1
   16040:	bge	1605c <__assert_fail@plt+0x4fa4>
   16044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16048:	ldr	r1, [fp, #8]
   1604c:	mul	r0, r0, r1
   16050:	uxth	r0, r0
   16054:	str	r0, [fp, #-28]	; 0xffffffe4
   16058:	b	16cb4 <__assert_fail@plt+0x5bfc>
   1605c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16060:	ldr	r1, [fp, #8]
   16064:	mul	r0, r0, r1
   16068:	uxth	r0, r0
   1606c:	str	r0, [fp, #-28]	; 0xffffffe4
   16070:	b	16cc4 <__assert_fail@plt+0x5c0c>
   16074:	b	16078 <__assert_fail@plt+0x4fc0>
   16078:	b	1607c <__assert_fail@plt+0x4fc4>
   1607c:	ldr	r0, [fp, #8]
   16080:	cmp	r0, #0
   16084:	bge	16188 <__assert_fail@plt+0x50d0>
   16088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1608c:	cmp	r0, #0
   16090:	bge	1611c <__assert_fail@plt+0x5064>
   16094:	b	16098 <__assert_fail@plt+0x4fe0>
   16098:	ldr	r0, [pc, #1992]	; 16868 <__assert_fail@plt+0x57b0>
   1609c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   160a0:	ldr	r2, [fp, #8]
   160a4:	sdiv	r0, r0, r2
   160a8:	cmp	r1, r0
   160ac:	blt	16218 <__assert_fail@plt+0x5160>
   160b0:	b	1622c <__assert_fail@plt+0x5174>
   160b4:	b	160b8 <__assert_fail@plt+0x5000>
   160b8:	ldr	r0, [pc, #2108]	; 168fc <__assert_fail@plt+0x5844>
   160bc:	ldr	r1, [fp, #8]
   160c0:	cmp	r1, r0
   160c4:	blt	160dc <__assert_fail@plt+0x5024>
   160c8:	b	160e8 <__assert_fail@plt+0x5030>
   160cc:	ldr	r0, [fp, #8]
   160d0:	movw	r1, #0
   160d4:	cmp	r1, r0
   160d8:	bge	160e8 <__assert_fail@plt+0x5030>
   160dc:	movw	r0, #0
   160e0:	str	r0, [fp, #-56]	; 0xffffffc8
   160e4:	b	16100 <__assert_fail@plt+0x5048>
   160e8:	ldr	r0, [pc, #1912]	; 16868 <__assert_fail@plt+0x57b0>
   160ec:	ldr	r1, [fp, #8]
   160f0:	movw	r2, #0
   160f4:	sub	r1, r2, r1
   160f8:	sdiv	r0, r0, r1
   160fc:	str	r0, [fp, #-56]	; 0xffffffc8
   16100:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16104:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16108:	mvn	r2, #0
   1610c:	sub	r1, r2, r1
   16110:	cmp	r0, r1
   16114:	ble	16218 <__assert_fail@plt+0x5160>
   16118:	b	1622c <__assert_fail@plt+0x5174>
   1611c:	ldr	r0, [fp, #8]
   16120:	cmn	r0, #1
   16124:	bne	1616c <__assert_fail@plt+0x50b4>
   16128:	b	1612c <__assert_fail@plt+0x5074>
   1612c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16130:	add	r0, r0, #-2147483648	; 0x80000000
   16134:	movw	r1, #0
   16138:	cmp	r1, r0
   1613c:	blt	16218 <__assert_fail@plt+0x5160>
   16140:	b	1622c <__assert_fail@plt+0x5174>
   16144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16148:	movw	r1, #0
   1614c:	cmp	r1, r0
   16150:	bge	1622c <__assert_fail@plt+0x5174>
   16154:	ldr	r0, [pc, #1804]	; 16868 <__assert_fail@plt+0x57b0>
   16158:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1615c:	sub	r1, r1, #1
   16160:	cmp	r0, r1
   16164:	blt	16218 <__assert_fail@plt+0x5160>
   16168:	b	1622c <__assert_fail@plt+0x5174>
   1616c:	ldr	r0, [pc, #4072]	; 1715c <__assert_fail@plt+0x60a4>
   16170:	ldr	r1, [fp, #8]
   16174:	sdiv	r0, r0, r1
   16178:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1617c:	cmp	r0, r1
   16180:	blt	16218 <__assert_fail@plt+0x5160>
   16184:	b	1622c <__assert_fail@plt+0x5174>
   16188:	ldr	r0, [fp, #8]
   1618c:	cmp	r0, #0
   16190:	bne	16198 <__assert_fail@plt+0x50e0>
   16194:	b	1622c <__assert_fail@plt+0x5174>
   16198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1619c:	cmp	r0, #0
   161a0:	bge	16200 <__assert_fail@plt+0x5148>
   161a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161a8:	cmn	r0, #1
   161ac:	bne	161e4 <__assert_fail@plt+0x512c>
   161b0:	b	161b4 <__assert_fail@plt+0x50fc>
   161b4:	ldr	r0, [fp, #8]
   161b8:	add	r0, r0, #-2147483648	; 0x80000000
   161bc:	movw	r1, #0
   161c0:	cmp	r1, r0
   161c4:	blt	16218 <__assert_fail@plt+0x5160>
   161c8:	b	1622c <__assert_fail@plt+0x5174>
   161cc:	ldr	r0, [pc, #1684]	; 16868 <__assert_fail@plt+0x57b0>
   161d0:	ldr	r1, [fp, #8]
   161d4:	sub	r1, r1, #1
   161d8:	cmp	r0, r1
   161dc:	blt	16218 <__assert_fail@plt+0x5160>
   161e0:	b	1622c <__assert_fail@plt+0x5174>
   161e4:	ldr	r0, [pc, #3952]	; 1715c <__assert_fail@plt+0x60a4>
   161e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161ec:	sdiv	r0, r0, r1
   161f0:	ldr	r1, [fp, #8]
   161f4:	cmp	r0, r1
   161f8:	blt	16218 <__assert_fail@plt+0x5160>
   161fc:	b	1622c <__assert_fail@plt+0x5174>
   16200:	ldr	r0, [pc, #1632]	; 16868 <__assert_fail@plt+0x57b0>
   16204:	ldr	r1, [fp, #8]
   16208:	sdiv	r0, r0, r1
   1620c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16210:	cmp	r0, r1
   16214:	bge	1622c <__assert_fail@plt+0x5174>
   16218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1621c:	ldr	r1, [fp, #8]
   16220:	mul	r0, r0, r1
   16224:	str	r0, [fp, #-28]	; 0xffffffe4
   16228:	b	16cb4 <__assert_fail@plt+0x5bfc>
   1622c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16230:	ldr	r1, [fp, #8]
   16234:	mul	r0, r0, r1
   16238:	str	r0, [fp, #-28]	; 0xffffffe4
   1623c:	b	16cc4 <__assert_fail@plt+0x5c0c>
   16240:	ldr	r0, [fp, #8]
   16244:	cmp	r0, #0
   16248:	bge	16358 <__assert_fail@plt+0x52a0>
   1624c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16250:	cmp	r0, #0
   16254:	bge	162e0 <__assert_fail@plt+0x5228>
   16258:	b	16278 <__assert_fail@plt+0x51c0>
   1625c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16260:	ldr	r1, [fp, #8]
   16264:	mvn	r2, #0
   16268:	udiv	r1, r2, r1
   1626c:	cmp	r0, r1
   16270:	bcc	163f4 <__assert_fail@plt+0x533c>
   16274:	b	16408 <__assert_fail@plt+0x5350>
   16278:	b	1627c <__assert_fail@plt+0x51c4>
   1627c:	ldr	r0, [pc, #1656]	; 168fc <__assert_fail@plt+0x5844>
   16280:	ldr	r1, [fp, #8]
   16284:	cmp	r1, r0
   16288:	blt	162a0 <__assert_fail@plt+0x51e8>
   1628c:	b	162ac <__assert_fail@plt+0x51f4>
   16290:	ldr	r0, [fp, #8]
   16294:	movw	r1, #0
   16298:	cmp	r1, r0
   1629c:	bge	162ac <__assert_fail@plt+0x51f4>
   162a0:	movw	r0, #1
   162a4:	str	r0, [fp, #-60]	; 0xffffffc4
   162a8:	b	162c4 <__assert_fail@plt+0x520c>
   162ac:	ldr	r0, [fp, #8]
   162b0:	movw	r1, #0
   162b4:	sub	r0, r1, r0
   162b8:	mvn	r1, #0
   162bc:	udiv	r0, r1, r0
   162c0:	str	r0, [fp, #-60]	; 0xffffffc4
   162c4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   162c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   162cc:	mvn	r2, #0
   162d0:	sub	r1, r2, r1
   162d4:	cmp	r0, r1
   162d8:	bls	163f4 <__assert_fail@plt+0x533c>
   162dc:	b	16408 <__assert_fail@plt+0x5350>
   162e0:	b	162e4 <__assert_fail@plt+0x522c>
   162e4:	b	1633c <__assert_fail@plt+0x5284>
   162e8:	b	1633c <__assert_fail@plt+0x5284>
   162ec:	ldr	r0, [fp, #8]
   162f0:	cmn	r0, #1
   162f4:	bne	1633c <__assert_fail@plt+0x5284>
   162f8:	b	162fc <__assert_fail@plt+0x5244>
   162fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16300:	add	r0, r0, #0
   16304:	movw	r1, #0
   16308:	cmp	r1, r0
   1630c:	blt	163f4 <__assert_fail@plt+0x533c>
   16310:	b	16408 <__assert_fail@plt+0x5350>
   16314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16318:	movw	r1, #0
   1631c:	cmp	r1, r0
   16320:	bge	16408 <__assert_fail@plt+0x5350>
   16324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16328:	sub	r0, r0, #1
   1632c:	mvn	r1, #0
   16330:	cmp	r1, r0
   16334:	blt	163f4 <__assert_fail@plt+0x533c>
   16338:	b	16408 <__assert_fail@plt+0x5350>
   1633c:	ldr	r0, [fp, #8]
   16340:	movw	r1, #0
   16344:	sdiv	r0, r1, r0
   16348:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1634c:	cmp	r0, r1
   16350:	blt	163f4 <__assert_fail@plt+0x533c>
   16354:	b	16408 <__assert_fail@plt+0x5350>
   16358:	ldr	r0, [fp, #8]
   1635c:	cmp	r0, #0
   16360:	bne	16368 <__assert_fail@plt+0x52b0>
   16364:	b	16408 <__assert_fail@plt+0x5350>
   16368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1636c:	cmp	r0, #0
   16370:	bge	163dc <__assert_fail@plt+0x5324>
   16374:	b	16378 <__assert_fail@plt+0x52c0>
   16378:	b	163c0 <__assert_fail@plt+0x5308>
   1637c:	b	163c0 <__assert_fail@plt+0x5308>
   16380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16384:	cmn	r0, #1
   16388:	bne	163c0 <__assert_fail@plt+0x5308>
   1638c:	b	16390 <__assert_fail@plt+0x52d8>
   16390:	ldr	r0, [fp, #8]
   16394:	add	r0, r0, #0
   16398:	movw	r1, #0
   1639c:	cmp	r1, r0
   163a0:	blt	163f4 <__assert_fail@plt+0x533c>
   163a4:	b	16408 <__assert_fail@plt+0x5350>
   163a8:	ldr	r0, [fp, #8]
   163ac:	sub	r0, r0, #1
   163b0:	mvn	r1, #0
   163b4:	cmp	r1, r0
   163b8:	blt	163f4 <__assert_fail@plt+0x533c>
   163bc:	b	16408 <__assert_fail@plt+0x5350>
   163c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163c4:	movw	r1, #0
   163c8:	sdiv	r0, r1, r0
   163cc:	ldr	r1, [fp, #8]
   163d0:	cmp	r0, r1
   163d4:	blt	163f4 <__assert_fail@plt+0x533c>
   163d8:	b	16408 <__assert_fail@plt+0x5350>
   163dc:	ldr	r0, [fp, #8]
   163e0:	mvn	r1, #0
   163e4:	udiv	r0, r1, r0
   163e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   163ec:	cmp	r0, r1
   163f0:	bcs	16408 <__assert_fail@plt+0x5350>
   163f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163f8:	ldr	r1, [fp, #8]
   163fc:	mul	r0, r0, r1
   16400:	str	r0, [fp, #-28]	; 0xffffffe4
   16404:	b	16cb4 <__assert_fail@plt+0x5bfc>
   16408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1640c:	ldr	r1, [fp, #8]
   16410:	mul	r0, r0, r1
   16414:	str	r0, [fp, #-28]	; 0xffffffe4
   16418:	b	16cc4 <__assert_fail@plt+0x5c0c>
   1641c:	b	16420 <__assert_fail@plt+0x5368>
   16420:	b	16424 <__assert_fail@plt+0x536c>
   16424:	ldr	r0, [fp, #8]
   16428:	cmp	r0, #0
   1642c:	bge	16530 <__assert_fail@plt+0x5478>
   16430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16434:	cmp	r0, #0
   16438:	bge	164c4 <__assert_fail@plt+0x540c>
   1643c:	b	16440 <__assert_fail@plt+0x5388>
   16440:	ldr	r0, [pc, #1056]	; 16868 <__assert_fail@plt+0x57b0>
   16444:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16448:	ldr	r2, [fp, #8]
   1644c:	sdiv	r0, r0, r2
   16450:	cmp	r1, r0
   16454:	blt	165c0 <__assert_fail@plt+0x5508>
   16458:	b	165d4 <__assert_fail@plt+0x551c>
   1645c:	b	16460 <__assert_fail@plt+0x53a8>
   16460:	ldr	r0, [pc, #1172]	; 168fc <__assert_fail@plt+0x5844>
   16464:	ldr	r1, [fp, #8]
   16468:	cmp	r1, r0
   1646c:	blt	16484 <__assert_fail@plt+0x53cc>
   16470:	b	16490 <__assert_fail@plt+0x53d8>
   16474:	ldr	r0, [fp, #8]
   16478:	movw	r1, #0
   1647c:	cmp	r1, r0
   16480:	bge	16490 <__assert_fail@plt+0x53d8>
   16484:	movw	r0, #0
   16488:	str	r0, [fp, #-64]	; 0xffffffc0
   1648c:	b	164a8 <__assert_fail@plt+0x53f0>
   16490:	ldr	r0, [pc, #976]	; 16868 <__assert_fail@plt+0x57b0>
   16494:	ldr	r1, [fp, #8]
   16498:	movw	r2, #0
   1649c:	sub	r1, r2, r1
   164a0:	sdiv	r0, r0, r1
   164a4:	str	r0, [fp, #-64]	; 0xffffffc0
   164a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   164ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164b0:	mvn	r2, #0
   164b4:	sub	r1, r2, r1
   164b8:	cmp	r0, r1
   164bc:	ble	165c0 <__assert_fail@plt+0x5508>
   164c0:	b	165d4 <__assert_fail@plt+0x551c>
   164c4:	ldr	r0, [fp, #8]
   164c8:	cmn	r0, #1
   164cc:	bne	16514 <__assert_fail@plt+0x545c>
   164d0:	b	164d4 <__assert_fail@plt+0x541c>
   164d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164d8:	add	r0, r0, #-2147483648	; 0x80000000
   164dc:	movw	r1, #0
   164e0:	cmp	r1, r0
   164e4:	blt	165c0 <__assert_fail@plt+0x5508>
   164e8:	b	165d4 <__assert_fail@plt+0x551c>
   164ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164f0:	movw	r1, #0
   164f4:	cmp	r1, r0
   164f8:	bge	165d4 <__assert_fail@plt+0x551c>
   164fc:	ldr	r0, [pc, #868]	; 16868 <__assert_fail@plt+0x57b0>
   16500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16504:	sub	r1, r1, #1
   16508:	cmp	r0, r1
   1650c:	blt	165c0 <__assert_fail@plt+0x5508>
   16510:	b	165d4 <__assert_fail@plt+0x551c>
   16514:	ldr	r0, [pc, #3136]	; 1715c <__assert_fail@plt+0x60a4>
   16518:	ldr	r1, [fp, #8]
   1651c:	sdiv	r0, r0, r1
   16520:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16524:	cmp	r0, r1
   16528:	blt	165c0 <__assert_fail@plt+0x5508>
   1652c:	b	165d4 <__assert_fail@plt+0x551c>
   16530:	ldr	r0, [fp, #8]
   16534:	cmp	r0, #0
   16538:	bne	16540 <__assert_fail@plt+0x5488>
   1653c:	b	165d4 <__assert_fail@plt+0x551c>
   16540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16544:	cmp	r0, #0
   16548:	bge	165a8 <__assert_fail@plt+0x54f0>
   1654c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16550:	cmn	r0, #1
   16554:	bne	1658c <__assert_fail@plt+0x54d4>
   16558:	b	1655c <__assert_fail@plt+0x54a4>
   1655c:	ldr	r0, [fp, #8]
   16560:	add	r0, r0, #-2147483648	; 0x80000000
   16564:	movw	r1, #0
   16568:	cmp	r1, r0
   1656c:	blt	165c0 <__assert_fail@plt+0x5508>
   16570:	b	165d4 <__assert_fail@plt+0x551c>
   16574:	ldr	r0, [pc, #748]	; 16868 <__assert_fail@plt+0x57b0>
   16578:	ldr	r1, [fp, #8]
   1657c:	sub	r1, r1, #1
   16580:	cmp	r0, r1
   16584:	blt	165c0 <__assert_fail@plt+0x5508>
   16588:	b	165d4 <__assert_fail@plt+0x551c>
   1658c:	ldr	r0, [pc, #3016]	; 1715c <__assert_fail@plt+0x60a4>
   16590:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16594:	sdiv	r0, r0, r1
   16598:	ldr	r1, [fp, #8]
   1659c:	cmp	r0, r1
   165a0:	blt	165c0 <__assert_fail@plt+0x5508>
   165a4:	b	165d4 <__assert_fail@plt+0x551c>
   165a8:	ldr	r0, [pc, #696]	; 16868 <__assert_fail@plt+0x57b0>
   165ac:	ldr	r1, [fp, #8]
   165b0:	sdiv	r0, r0, r1
   165b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165b8:	cmp	r0, r1
   165bc:	bge	165d4 <__assert_fail@plt+0x551c>
   165c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165c4:	ldr	r1, [fp, #8]
   165c8:	mul	r0, r0, r1
   165cc:	str	r0, [fp, #-28]	; 0xffffffe4
   165d0:	b	16cb4 <__assert_fail@plt+0x5bfc>
   165d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165d8:	ldr	r1, [fp, #8]
   165dc:	mul	r0, r0, r1
   165e0:	str	r0, [fp, #-28]	; 0xffffffe4
   165e4:	b	16cc4 <__assert_fail@plt+0x5c0c>
   165e8:	ldr	r0, [fp, #8]
   165ec:	cmp	r0, #0
   165f0:	bge	16700 <__assert_fail@plt+0x5648>
   165f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165f8:	cmp	r0, #0
   165fc:	bge	16688 <__assert_fail@plt+0x55d0>
   16600:	b	16620 <__assert_fail@plt+0x5568>
   16604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16608:	ldr	r1, [fp, #8]
   1660c:	mvn	r2, #0
   16610:	udiv	r1, r2, r1
   16614:	cmp	r0, r1
   16618:	bcc	1679c <__assert_fail@plt+0x56e4>
   1661c:	b	167b0 <__assert_fail@plt+0x56f8>
   16620:	b	16624 <__assert_fail@plt+0x556c>
   16624:	ldr	r0, [pc, #720]	; 168fc <__assert_fail@plt+0x5844>
   16628:	ldr	r1, [fp, #8]
   1662c:	cmp	r1, r0
   16630:	blt	16648 <__assert_fail@plt+0x5590>
   16634:	b	16654 <__assert_fail@plt+0x559c>
   16638:	ldr	r0, [fp, #8]
   1663c:	movw	r1, #0
   16640:	cmp	r1, r0
   16644:	bge	16654 <__assert_fail@plt+0x559c>
   16648:	movw	r0, #1
   1664c:	str	r0, [fp, #-68]	; 0xffffffbc
   16650:	b	1666c <__assert_fail@plt+0x55b4>
   16654:	ldr	r0, [fp, #8]
   16658:	movw	r1, #0
   1665c:	sub	r0, r1, r0
   16660:	mvn	r1, #0
   16664:	udiv	r0, r1, r0
   16668:	str	r0, [fp, #-68]	; 0xffffffbc
   1666c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16670:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16674:	mvn	r2, #0
   16678:	sub	r1, r2, r1
   1667c:	cmp	r0, r1
   16680:	bls	1679c <__assert_fail@plt+0x56e4>
   16684:	b	167b0 <__assert_fail@plt+0x56f8>
   16688:	b	1668c <__assert_fail@plt+0x55d4>
   1668c:	b	166e4 <__assert_fail@plt+0x562c>
   16690:	b	166e4 <__assert_fail@plt+0x562c>
   16694:	ldr	r0, [fp, #8]
   16698:	cmn	r0, #1
   1669c:	bne	166e4 <__assert_fail@plt+0x562c>
   166a0:	b	166a4 <__assert_fail@plt+0x55ec>
   166a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166a8:	add	r0, r0, #0
   166ac:	movw	r1, #0
   166b0:	cmp	r1, r0
   166b4:	blt	1679c <__assert_fail@plt+0x56e4>
   166b8:	b	167b0 <__assert_fail@plt+0x56f8>
   166bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166c0:	movw	r1, #0
   166c4:	cmp	r1, r0
   166c8:	bge	167b0 <__assert_fail@plt+0x56f8>
   166cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166d0:	sub	r0, r0, #1
   166d4:	mvn	r1, #0
   166d8:	cmp	r1, r0
   166dc:	blt	1679c <__assert_fail@plt+0x56e4>
   166e0:	b	167b0 <__assert_fail@plt+0x56f8>
   166e4:	ldr	r0, [fp, #8]
   166e8:	movw	r1, #0
   166ec:	sdiv	r0, r1, r0
   166f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166f4:	cmp	r0, r1
   166f8:	blt	1679c <__assert_fail@plt+0x56e4>
   166fc:	b	167b0 <__assert_fail@plt+0x56f8>
   16700:	ldr	r0, [fp, #8]
   16704:	cmp	r0, #0
   16708:	bne	16710 <__assert_fail@plt+0x5658>
   1670c:	b	167b0 <__assert_fail@plt+0x56f8>
   16710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16714:	cmp	r0, #0
   16718:	bge	16784 <__assert_fail@plt+0x56cc>
   1671c:	b	16720 <__assert_fail@plt+0x5668>
   16720:	b	16768 <__assert_fail@plt+0x56b0>
   16724:	b	16768 <__assert_fail@plt+0x56b0>
   16728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1672c:	cmn	r0, #1
   16730:	bne	16768 <__assert_fail@plt+0x56b0>
   16734:	b	16738 <__assert_fail@plt+0x5680>
   16738:	ldr	r0, [fp, #8]
   1673c:	add	r0, r0, #0
   16740:	movw	r1, #0
   16744:	cmp	r1, r0
   16748:	blt	1679c <__assert_fail@plt+0x56e4>
   1674c:	b	167b0 <__assert_fail@plt+0x56f8>
   16750:	ldr	r0, [fp, #8]
   16754:	sub	r0, r0, #1
   16758:	mvn	r1, #0
   1675c:	cmp	r1, r0
   16760:	blt	1679c <__assert_fail@plt+0x56e4>
   16764:	b	167b0 <__assert_fail@plt+0x56f8>
   16768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1676c:	movw	r1, #0
   16770:	sdiv	r0, r1, r0
   16774:	ldr	r1, [fp, #8]
   16778:	cmp	r0, r1
   1677c:	blt	1679c <__assert_fail@plt+0x56e4>
   16780:	b	167b0 <__assert_fail@plt+0x56f8>
   16784:	ldr	r0, [fp, #8]
   16788:	mvn	r1, #0
   1678c:	udiv	r0, r1, r0
   16790:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16794:	cmp	r0, r1
   16798:	bcs	167b0 <__assert_fail@plt+0x56f8>
   1679c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167a0:	ldr	r1, [fp, #8]
   167a4:	mul	r0, r0, r1
   167a8:	str	r0, [fp, #-28]	; 0xffffffe4
   167ac:	b	16cb4 <__assert_fail@plt+0x5bfc>
   167b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167b4:	ldr	r1, [fp, #8]
   167b8:	mul	r0, r0, r1
   167bc:	str	r0, [fp, #-28]	; 0xffffffe4
   167c0:	b	16cc4 <__assert_fail@plt+0x5c0c>
   167c4:	b	167c8 <__assert_fail@plt+0x5710>
   167c8:	ldr	r0, [fp, #8]
   167cc:	cmp	r0, #0
   167d0:	bge	16960 <__assert_fail@plt+0x58a8>
   167d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167d8:	cmp	r0, #0
   167dc:	bge	168c8 <__assert_fail@plt+0x5810>
   167e0:	b	167e4 <__assert_fail@plt+0x572c>
   167e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167e8:	ldr	r1, [fp, #8]
   167ec:	asr	r3, r1, #31
   167f0:	mvn	r2, #0
   167f4:	mvn	ip, #-2147483648	; 0x80000000
   167f8:	str	r0, [fp, #-72]	; 0xffffffb8
   167fc:	mov	r0, r2
   16800:	str	r1, [fp, #-76]	; 0xffffffb4
   16804:	mov	r1, ip
   16808:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1680c:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   16810:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16814:	subs	r0, r2, r0
   16818:	rscs	r1, r1, r2, asr #31
   1681c:	str	r0, [fp, #-80]	; 0xffffffb0
   16820:	str	r1, [fp, #-84]	; 0xffffffac
   16824:	blt	16a40 <__assert_fail@plt+0x5988>
   16828:	b	16a54 <__assert_fail@plt+0x599c>
   1682c:	b	16830 <__assert_fail@plt+0x5778>
   16830:	ldr	r0, [pc, #196]	; 168fc <__assert_fail@plt+0x5844>
   16834:	ldr	r1, [fp, #8]
   16838:	cmp	r1, r0
   1683c:	blt	16854 <__assert_fail@plt+0x579c>
   16840:	b	1686c <__assert_fail@plt+0x57b4>
   16844:	ldr	r0, [fp, #8]
   16848:	movw	r1, #0
   1684c:	cmp	r1, r0
   16850:	bge	1686c <__assert_fail@plt+0x57b4>
   16854:	mov	r0, #0
   16858:	mvn	r1, #0
   1685c:	str	r1, [fp, #-88]	; 0xffffffa8
   16860:	str	r0, [fp, #-92]	; 0xffffffa4
   16864:	b	168a0 <__assert_fail@plt+0x57e8>
   16868:	svcvc	0x00ffffff
   1686c:	ldr	r0, [fp, #8]
   16870:	rsb	r0, r0, #0
   16874:	asr	r3, r0, #31
   16878:	mvn	r1, #0
   1687c:	mvn	r2, #-2147483648	; 0x80000000
   16880:	str	r0, [fp, #-96]	; 0xffffffa0
   16884:	mov	r0, r1
   16888:	mov	r1, r2
   1688c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16890:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   16894:	str	r0, [fp, #-88]	; 0xffffffa8
   16898:	str	r1, [fp, #-92]	; 0xffffffa4
   1689c:	b	168a0 <__assert_fail@plt+0x57e8>
   168a0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   168a4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   168a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   168ac:	mvn	r2, r2
   168b0:	subs	r1, r2, r1
   168b4:	rscs	r0, r0, r2, asr #31
   168b8:	str	r1, [fp, #-100]	; 0xffffff9c
   168bc:	str	r0, [fp, #-104]	; 0xffffff98
   168c0:	bge	16a40 <__assert_fail@plt+0x5988>
   168c4:	b	16a54 <__assert_fail@plt+0x599c>
   168c8:	ldr	r0, [fp, #8]
   168cc:	cmn	r0, #1
   168d0:	bne	16920 <__assert_fail@plt+0x5868>
   168d4:	b	168d8 <__assert_fail@plt+0x5820>
   168d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168dc:	mov	r1, #-2147483648	; 0x80000000
   168e0:	add	r1, r1, r0, asr #31
   168e4:	rsbs	r0, r0, #0
   168e8:	rscs	r1, r1, #0
   168ec:	str	r0, [fp, #-108]	; 0xffffff94
   168f0:	str	r1, [fp, #-112]	; 0xffffff90
   168f4:	blt	16a40 <__assert_fail@plt+0x5988>
   168f8:	b	16a54 <__assert_fail@plt+0x599c>
   168fc:	andhi	r0, r0, r1
   16900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16904:	movw	r1, #0
   16908:	cmp	r1, r0
   1690c:	bge	16a54 <__assert_fail@plt+0x599c>
   16910:	mov	r0, #0
   16914:	cmp	r0, #0
   16918:	bne	16a40 <__assert_fail@plt+0x5988>
   1691c:	b	16a54 <__assert_fail@plt+0x599c>
   16920:	ldr	r0, [fp, #8]
   16924:	asr	r3, r0, #31
   16928:	mov	r1, #0
   1692c:	mov	r2, #-2147483648	; 0x80000000
   16930:	str	r0, [fp, #-116]	; 0xffffff8c
   16934:	mov	r0, r1
   16938:	mov	r1, r2
   1693c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16940:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   16944:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16948:	subs	r0, r0, r2
   1694c:	sbcs	r1, r1, r2, asr #31
   16950:	str	r0, [fp, #-120]	; 0xffffff88
   16954:	str	r1, [fp, #-124]	; 0xffffff84
   16958:	blt	16a40 <__assert_fail@plt+0x5988>
   1695c:	b	16a54 <__assert_fail@plt+0x599c>
   16960:	ldr	r0, [fp, #8]
   16964:	cmp	r0, #0
   16968:	bne	16970 <__assert_fail@plt+0x58b8>
   1696c:	b	16a54 <__assert_fail@plt+0x599c>
   16970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16974:	cmp	r0, #0
   16978:	bge	16a00 <__assert_fail@plt+0x5948>
   1697c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16980:	cmn	r0, #1
   16984:	bne	169c0 <__assert_fail@plt+0x5908>
   16988:	b	1698c <__assert_fail@plt+0x58d4>
   1698c:	ldr	r0, [fp, #8]
   16990:	mov	r1, #-2147483648	; 0x80000000
   16994:	add	r1, r1, r0, asr #31
   16998:	rsbs	r0, r0, #0
   1699c:	rscs	r1, r1, #0
   169a0:	str	r0, [fp, #-128]	; 0xffffff80
   169a4:	str	r1, [fp, #-132]	; 0xffffff7c
   169a8:	blt	16a40 <__assert_fail@plt+0x5988>
   169ac:	b	16a54 <__assert_fail@plt+0x599c>
   169b0:	mov	r0, #0
   169b4:	cmp	r0, #0
   169b8:	bne	16a40 <__assert_fail@plt+0x5988>
   169bc:	b	16a54 <__assert_fail@plt+0x599c>
   169c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169c4:	asr	r3, r0, #31
   169c8:	mov	r1, #0
   169cc:	mov	r2, #-2147483648	; 0x80000000
   169d0:	str	r0, [fp, #-136]	; 0xffffff78
   169d4:	mov	r0, r1
   169d8:	mov	r1, r2
   169dc:	ldr	r2, [fp, #-136]	; 0xffffff78
   169e0:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   169e4:	ldr	r2, [fp, #8]
   169e8:	subs	r0, r0, r2
   169ec:	sbcs	r1, r1, r2, asr #31
   169f0:	str	r0, [fp, #-140]	; 0xffffff74
   169f4:	str	r1, [fp, #-144]	; 0xffffff70
   169f8:	blt	16a40 <__assert_fail@plt+0x5988>
   169fc:	b	16a54 <__assert_fail@plt+0x599c>
   16a00:	ldr	r0, [fp, #8]
   16a04:	asr	r3, r0, #31
   16a08:	mvn	r1, #0
   16a0c:	mvn	r2, #-2147483648	; 0x80000000
   16a10:	str	r0, [fp, #-148]	; 0xffffff6c
   16a14:	mov	r0, r1
   16a18:	mov	r1, r2
   16a1c:	ldr	r2, [fp, #-148]	; 0xffffff6c
   16a20:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   16a24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16a28:	subs	r0, r0, r2
   16a2c:	sbcs	r1, r1, r2, asr #31
   16a30:	str	r0, [fp, #-152]	; 0xffffff68
   16a34:	str	r1, [fp, #-156]	; 0xffffff64
   16a38:	bge	16a54 <__assert_fail@plt+0x599c>
   16a3c:	b	16a40 <__assert_fail@plt+0x5988>
   16a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a44:	ldr	r1, [fp, #8]
   16a48:	mul	r0, r0, r1
   16a4c:	str	r0, [fp, #-28]	; 0xffffffe4
   16a50:	b	16cb4 <__assert_fail@plt+0x5bfc>
   16a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a58:	ldr	r1, [fp, #8]
   16a5c:	mul	r0, r0, r1
   16a60:	str	r0, [fp, #-28]	; 0xffffffe4
   16a64:	b	16cc4 <__assert_fail@plt+0x5c0c>
   16a68:	ldr	r0, [fp, #8]
   16a6c:	cmp	r0, #0
   16a70:	bge	16bd0 <__assert_fail@plt+0x5b18>
   16a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a78:	cmp	r0, #0
   16a7c:	bge	16b58 <__assert_fail@plt+0x5aa0>
   16a80:	b	16ac8 <__assert_fail@plt+0x5a10>
   16a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a88:	ldr	r1, [fp, #8]
   16a8c:	asr	r3, r1, #31
   16a90:	mvn	r2, #0
   16a94:	str	r0, [fp, #-160]	; 0xffffff60
   16a98:	mov	r0, r2
   16a9c:	str	r1, [fp, #-164]	; 0xffffff5c
   16aa0:	mov	r1, r2
   16aa4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16aa8:	bl	1cb38 <__assert_fail@plt+0xba80>
   16aac:	ldr	r2, [fp, #-160]	; 0xffffff60
   16ab0:	subs	r0, r2, r0
   16ab4:	rscs	r1, r1, r2, asr #31
   16ab8:	str	r0, [fp, #-168]	; 0xffffff58
   16abc:	str	r1, [fp, #-172]	; 0xffffff54
   16ac0:	bcc	16c8c <__assert_fail@plt+0x5bd4>
   16ac4:	b	16ca0 <__assert_fail@plt+0x5be8>
   16ac8:	b	16acc <__assert_fail@plt+0x5a14>
   16acc:	ldr	r0, [pc, #-472]	; 168fc <__assert_fail@plt+0x5844>
   16ad0:	ldr	r1, [fp, #8]
   16ad4:	cmp	r1, r0
   16ad8:	blt	16af0 <__assert_fail@plt+0x5a38>
   16adc:	b	16b04 <__assert_fail@plt+0x5a4c>
   16ae0:	ldr	r0, [fp, #8]
   16ae4:	movw	r1, #0
   16ae8:	cmp	r1, r0
   16aec:	bge	16b04 <__assert_fail@plt+0x5a4c>
   16af0:	mov	r0, #1
   16af4:	mvn	r1, #0
   16af8:	str	r1, [fp, #-176]	; 0xffffff50
   16afc:	str	r0, [fp, #-180]	; 0xffffff4c
   16b00:	b	16b30 <__assert_fail@plt+0x5a78>
   16b04:	ldr	r0, [fp, #8]
   16b08:	rsb	r0, r0, #0
   16b0c:	asr	r3, r0, #31
   16b10:	mvn	r1, #0
   16b14:	str	r0, [fp, #-184]	; 0xffffff48
   16b18:	mov	r0, r1
   16b1c:	ldr	r2, [fp, #-184]	; 0xffffff48
   16b20:	bl	1cb38 <__assert_fail@plt+0xba80>
   16b24:	str	r0, [fp, #-176]	; 0xffffff50
   16b28:	str	r1, [fp, #-180]	; 0xffffff4c
   16b2c:	b	16b30 <__assert_fail@plt+0x5a78>
   16b30:	ldr	r0, [fp, #-180]	; 0xffffff4c
   16b34:	ldr	r1, [fp, #-176]	; 0xffffff50
   16b38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16b3c:	mvn	r2, r2
   16b40:	subs	r1, r2, r1
   16b44:	rscs	r0, r0, r2, asr #31
   16b48:	str	r1, [sp, #188]	; 0xbc
   16b4c:	str	r0, [sp, #184]	; 0xb8
   16b50:	bcs	16c8c <__assert_fail@plt+0x5bd4>
   16b54:	b	16ca0 <__assert_fail@plt+0x5be8>
   16b58:	b	16b5c <__assert_fail@plt+0x5aa4>
   16b5c:	b	16bb4 <__assert_fail@plt+0x5afc>
   16b60:	b	16bb4 <__assert_fail@plt+0x5afc>
   16b64:	ldr	r0, [fp, #8]
   16b68:	cmn	r0, #1
   16b6c:	bne	16bb4 <__assert_fail@plt+0x5afc>
   16b70:	b	16b74 <__assert_fail@plt+0x5abc>
   16b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b78:	add	r0, r0, #0
   16b7c:	movw	r1, #0
   16b80:	cmp	r1, r0
   16b84:	blt	16c8c <__assert_fail@plt+0x5bd4>
   16b88:	b	16ca0 <__assert_fail@plt+0x5be8>
   16b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b90:	movw	r1, #0
   16b94:	cmp	r1, r0
   16b98:	bge	16ca0 <__assert_fail@plt+0x5be8>
   16b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ba0:	sub	r0, r0, #1
   16ba4:	mvn	r1, #0
   16ba8:	cmp	r1, r0
   16bac:	blt	16c8c <__assert_fail@plt+0x5bd4>
   16bb0:	b	16ca0 <__assert_fail@plt+0x5be8>
   16bb4:	ldr	r0, [fp, #8]
   16bb8:	movw	r1, #0
   16bbc:	sdiv	r0, r1, r0
   16bc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16bc4:	cmp	r0, r1
   16bc8:	blt	16c8c <__assert_fail@plt+0x5bd4>
   16bcc:	b	16ca0 <__assert_fail@plt+0x5be8>
   16bd0:	ldr	r0, [fp, #8]
   16bd4:	cmp	r0, #0
   16bd8:	bne	16be0 <__assert_fail@plt+0x5b28>
   16bdc:	b	16ca0 <__assert_fail@plt+0x5be8>
   16be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16be4:	cmp	r0, #0
   16be8:	bge	16c54 <__assert_fail@plt+0x5b9c>
   16bec:	b	16bf0 <__assert_fail@plt+0x5b38>
   16bf0:	b	16c38 <__assert_fail@plt+0x5b80>
   16bf4:	b	16c38 <__assert_fail@plt+0x5b80>
   16bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bfc:	cmn	r0, #1
   16c00:	bne	16c38 <__assert_fail@plt+0x5b80>
   16c04:	b	16c08 <__assert_fail@plt+0x5b50>
   16c08:	ldr	r0, [fp, #8]
   16c0c:	add	r0, r0, #0
   16c10:	movw	r1, #0
   16c14:	cmp	r1, r0
   16c18:	blt	16c8c <__assert_fail@plt+0x5bd4>
   16c1c:	b	16ca0 <__assert_fail@plt+0x5be8>
   16c20:	ldr	r0, [fp, #8]
   16c24:	sub	r0, r0, #1
   16c28:	mvn	r1, #0
   16c2c:	cmp	r1, r0
   16c30:	blt	16c8c <__assert_fail@plt+0x5bd4>
   16c34:	b	16ca0 <__assert_fail@plt+0x5be8>
   16c38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c3c:	movw	r1, #0
   16c40:	sdiv	r0, r1, r0
   16c44:	ldr	r1, [fp, #8]
   16c48:	cmp	r0, r1
   16c4c:	blt	16c8c <__assert_fail@plt+0x5bd4>
   16c50:	b	16ca0 <__assert_fail@plt+0x5be8>
   16c54:	ldr	r0, [fp, #8]
   16c58:	asr	r3, r0, #31
   16c5c:	mvn	r1, #0
   16c60:	str	r0, [sp, #180]	; 0xb4
   16c64:	mov	r0, r1
   16c68:	ldr	r2, [sp, #180]	; 0xb4
   16c6c:	bl	1cb38 <__assert_fail@plt+0xba80>
   16c70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c74:	subs	r0, r0, r2
   16c78:	sbcs	r1, r1, r2, asr #31
   16c7c:	str	r0, [sp, #176]	; 0xb0
   16c80:	str	r1, [sp, #172]	; 0xac
   16c84:	bcs	16ca0 <__assert_fail@plt+0x5be8>
   16c88:	b	16c8c <__assert_fail@plt+0x5bd4>
   16c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c90:	ldr	r1, [fp, #8]
   16c94:	mul	r0, r0, r1
   16c98:	str	r0, [fp, #-28]	; 0xffffffe4
   16c9c:	b	16cb4 <__assert_fail@plt+0x5bfc>
   16ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ca4:	ldr	r1, [fp, #8]
   16ca8:	mul	r0, r0, r1
   16cac:	str	r0, [fp, #-28]	; 0xffffffe4
   16cb0:	b	16cc4 <__assert_fail@plt+0x5c0c>
   16cb4:	ldr	r0, [pc, #-1108]	; 16868 <__assert_fail@plt+0x57b0>
   16cb8:	str	r0, [sp, #168]	; 0xa8
   16cbc:	b	16ce4 <__assert_fail@plt+0x5c2c>
   16cc0:			; <UNDEFINED> instruction: 0xffff8000
   16cc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16cc8:	cmp	r0, #64	; 0x40
   16ccc:	movw	r0, #0
   16cd0:	movlt	r0, #1
   16cd4:	tst	r0, #1
   16cd8:	movw	r0, #64	; 0x40
   16cdc:	moveq	r0, #0
   16ce0:	str	r0, [sp, #168]	; 0xa8
   16ce4:	ldr	r0, [sp, #168]	; 0xa8
   16ce8:	str	r0, [fp, #-32]	; 0xffffffe0
   16cec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16cf0:	cmp	r0, #0
   16cf4:	beq	16d24 <__assert_fail@plt+0x5c6c>
   16cf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16cfc:	ldr	r1, [fp, #8]
   16d00:	sdiv	r0, r0, r1
   16d04:	str	r0, [fp, #-24]	; 0xffffffe8
   16d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d0c:	mov	r1, r0
   16d10:	ldr	r2, [fp, #8]
   16d14:	sdiv	r3, r0, r2
   16d18:	mls	r0, r3, r2, r0
   16d1c:	sub	r0, r1, r0
   16d20:	str	r0, [fp, #-28]	; 0xffffffe4
   16d24:	ldr	r0, [fp, #-4]
   16d28:	movw	r1, #0
   16d2c:	cmp	r0, r1
   16d30:	bne	16d40 <__assert_fail@plt+0x5c88>
   16d34:	ldr	r0, [fp, #-8]
   16d38:	movw	r1, #0
   16d3c:	str	r1, [r0]
   16d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d44:	ldr	r1, [fp, #-20]	; 0xffffffec
   16d48:	sub	r0, r0, r1
   16d4c:	ldr	r1, [fp, #-12]
   16d50:	cmp	r0, r1
   16d54:	bge	1818c <__assert_fail@plt+0x70d4>
   16d58:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d5c:	ldr	r1, [fp, #-12]
   16d60:	add	r1, r0, r1
   16d64:	mov	r2, #1
   16d68:	cmp	r1, r0
   16d6c:	movwvc	r2, #0
   16d70:	str	r1, [fp, #-24]	; 0xffffffe8
   16d74:	tst	r2, #1
   16d78:	bne	18188 <__assert_fail@plt+0x70d0>
   16d7c:	ldr	r0, [fp, #-16]
   16d80:	movw	r1, #0
   16d84:	cmp	r1, r0
   16d88:	bgt	16d9c <__assert_fail@plt+0x5ce4>
   16d8c:	ldr	r0, [fp, #-16]
   16d90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d94:	cmp	r0, r1
   16d98:	blt	18188 <__assert_fail@plt+0x70d0>
   16d9c:	b	17178 <__assert_fail@plt+0x60c0>
   16da0:	b	16da4 <__assert_fail@plt+0x5cec>
   16da4:	ldr	r0, [fp, #8]
   16da8:	cmp	r0, #0
   16dac:	bge	16ec0 <__assert_fail@plt+0x5e08>
   16db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16db4:	cmp	r0, #0
   16db8:	bge	16e44 <__assert_fail@plt+0x5d8c>
   16dbc:	b	16dc0 <__assert_fail@plt+0x5d08>
   16dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dc4:	ldr	r1, [fp, #8]
   16dc8:	movw	r2, #127	; 0x7f
   16dcc:	sdiv	r1, r2, r1
   16dd0:	cmp	r0, r1
   16dd4:	blt	16f60 <__assert_fail@plt+0x5ea8>
   16dd8:	b	16f78 <__assert_fail@plt+0x5ec0>
   16ddc:	b	16de0 <__assert_fail@plt+0x5d28>
   16de0:	ldr	r0, [pc, #-1260]	; 168fc <__assert_fail@plt+0x5844>
   16de4:	ldr	r1, [fp, #8]
   16de8:	cmp	r1, r0
   16dec:	blt	16e04 <__assert_fail@plt+0x5d4c>
   16df0:	b	16e10 <__assert_fail@plt+0x5d58>
   16df4:	ldr	r0, [fp, #8]
   16df8:	movw	r1, #0
   16dfc:	cmp	r1, r0
   16e00:	bge	16e10 <__assert_fail@plt+0x5d58>
   16e04:	movw	r0, #0
   16e08:	str	r0, [sp, #164]	; 0xa4
   16e0c:	b	16e28 <__assert_fail@plt+0x5d70>
   16e10:	ldr	r0, [fp, #8]
   16e14:	movw	r1, #0
   16e18:	sub	r0, r1, r0
   16e1c:	movw	r1, #127	; 0x7f
   16e20:	sdiv	r0, r1, r0
   16e24:	str	r0, [sp, #164]	; 0xa4
   16e28:	ldr	r0, [sp, #164]	; 0xa4
   16e2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e30:	mvn	r2, #0
   16e34:	sub	r1, r2, r1
   16e38:	cmp	r0, r1
   16e3c:	ble	16f60 <__assert_fail@plt+0x5ea8>
   16e40:	b	16f78 <__assert_fail@plt+0x5ec0>
   16e44:	b	16e48 <__assert_fail@plt+0x5d90>
   16e48:	b	16ea4 <__assert_fail@plt+0x5dec>
   16e4c:	b	16ea4 <__assert_fail@plt+0x5dec>
   16e50:	ldr	r0, [fp, #8]
   16e54:	cmn	r0, #1
   16e58:	bne	16ea4 <__assert_fail@plt+0x5dec>
   16e5c:	b	16e60 <__assert_fail@plt+0x5da8>
   16e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e64:	mvn	r1, #127	; 0x7f
   16e68:	add	r0, r0, r1
   16e6c:	movw	r1, #0
   16e70:	cmp	r1, r0
   16e74:	blt	16f60 <__assert_fail@plt+0x5ea8>
   16e78:	b	16f78 <__assert_fail@plt+0x5ec0>
   16e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e80:	movw	r1, #0
   16e84:	cmp	r1, r0
   16e88:	bge	16f78 <__assert_fail@plt+0x5ec0>
   16e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e90:	sub	r0, r0, #1
   16e94:	movw	r1, #127	; 0x7f
   16e98:	cmp	r1, r0
   16e9c:	blt	16f60 <__assert_fail@plt+0x5ea8>
   16ea0:	b	16f78 <__assert_fail@plt+0x5ec0>
   16ea4:	ldr	r0, [fp, #8]
   16ea8:	mvn	r1, #127	; 0x7f
   16eac:	sdiv	r0, r1, r0
   16eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16eb4:	cmp	r0, r1
   16eb8:	blt	16f60 <__assert_fail@plt+0x5ea8>
   16ebc:	b	16f78 <__assert_fail@plt+0x5ec0>
   16ec0:	ldr	r0, [fp, #8]
   16ec4:	cmp	r0, #0
   16ec8:	bne	16ed0 <__assert_fail@plt+0x5e18>
   16ecc:	b	16f78 <__assert_fail@plt+0x5ec0>
   16ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ed4:	cmp	r0, #0
   16ed8:	bge	16f48 <__assert_fail@plt+0x5e90>
   16edc:	b	16ee0 <__assert_fail@plt+0x5e28>
   16ee0:	b	16f2c <__assert_fail@plt+0x5e74>
   16ee4:	b	16f2c <__assert_fail@plt+0x5e74>
   16ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eec:	cmn	r0, #1
   16ef0:	bne	16f2c <__assert_fail@plt+0x5e74>
   16ef4:	b	16ef8 <__assert_fail@plt+0x5e40>
   16ef8:	ldr	r0, [fp, #8]
   16efc:	mvn	r1, #127	; 0x7f
   16f00:	add	r0, r0, r1
   16f04:	movw	r1, #0
   16f08:	cmp	r1, r0
   16f0c:	blt	16f60 <__assert_fail@plt+0x5ea8>
   16f10:	b	16f78 <__assert_fail@plt+0x5ec0>
   16f14:	ldr	r0, [fp, #8]
   16f18:	sub	r0, r0, #1
   16f1c:	movw	r1, #127	; 0x7f
   16f20:	cmp	r1, r0
   16f24:	blt	16f60 <__assert_fail@plt+0x5ea8>
   16f28:	b	16f78 <__assert_fail@plt+0x5ec0>
   16f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f30:	mvn	r1, #127	; 0x7f
   16f34:	sdiv	r0, r1, r0
   16f38:	ldr	r1, [fp, #8]
   16f3c:	cmp	r0, r1
   16f40:	blt	16f60 <__assert_fail@plt+0x5ea8>
   16f44:	b	16f78 <__assert_fail@plt+0x5ec0>
   16f48:	ldr	r0, [fp, #8]
   16f4c:	movw	r1, #127	; 0x7f
   16f50:	sdiv	r0, r1, r0
   16f54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f58:	cmp	r0, r1
   16f5c:	bge	16f78 <__assert_fail@plt+0x5ec0>
   16f60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f64:	ldr	r1, [fp, #8]
   16f68:	mul	r0, r0, r1
   16f6c:	sxtb	r0, r0
   16f70:	str	r0, [fp, #-28]	; 0xffffffe4
   16f74:	b	18188 <__assert_fail@plt+0x70d0>
   16f78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f7c:	ldr	r1, [fp, #8]
   16f80:	mul	r0, r0, r1
   16f84:	sxtb	r0, r0
   16f88:	str	r0, [fp, #-28]	; 0xffffffe4
   16f8c:	b	1818c <__assert_fail@plt+0x70d4>
   16f90:	ldr	r0, [fp, #8]
   16f94:	cmp	r0, #0
   16f98:	bge	170a8 <__assert_fail@plt+0x5ff0>
   16f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fa0:	cmp	r0, #0
   16fa4:	bge	17030 <__assert_fail@plt+0x5f78>
   16fa8:	b	16fac <__assert_fail@plt+0x5ef4>
   16fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fb0:	ldr	r1, [fp, #8]
   16fb4:	movw	r2, #255	; 0xff
   16fb8:	sdiv	r1, r2, r1
   16fbc:	cmp	r0, r1
   16fc0:	blt	17144 <__assert_fail@plt+0x608c>
   16fc4:	b	17160 <__assert_fail@plt+0x60a8>
   16fc8:	b	16fcc <__assert_fail@plt+0x5f14>
   16fcc:	ldr	r0, [pc, #-1752]	; 168fc <__assert_fail@plt+0x5844>
   16fd0:	ldr	r1, [fp, #8]
   16fd4:	cmp	r1, r0
   16fd8:	blt	16ff0 <__assert_fail@plt+0x5f38>
   16fdc:	b	16ffc <__assert_fail@plt+0x5f44>
   16fe0:	ldr	r0, [fp, #8]
   16fe4:	movw	r1, #0
   16fe8:	cmp	r1, r0
   16fec:	bge	16ffc <__assert_fail@plt+0x5f44>
   16ff0:	movw	r0, #0
   16ff4:	str	r0, [sp, #160]	; 0xa0
   16ff8:	b	17014 <__assert_fail@plt+0x5f5c>
   16ffc:	ldr	r0, [fp, #8]
   17000:	movw	r1, #0
   17004:	sub	r0, r1, r0
   17008:	movw	r1, #255	; 0xff
   1700c:	sdiv	r0, r1, r0
   17010:	str	r0, [sp, #160]	; 0xa0
   17014:	ldr	r0, [sp, #160]	; 0xa0
   17018:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1701c:	mvn	r2, #0
   17020:	sub	r1, r2, r1
   17024:	cmp	r0, r1
   17028:	ble	17144 <__assert_fail@plt+0x608c>
   1702c:	b	17160 <__assert_fail@plt+0x60a8>
   17030:	b	17034 <__assert_fail@plt+0x5f7c>
   17034:	b	1708c <__assert_fail@plt+0x5fd4>
   17038:	b	1708c <__assert_fail@plt+0x5fd4>
   1703c:	ldr	r0, [fp, #8]
   17040:	cmn	r0, #1
   17044:	bne	1708c <__assert_fail@plt+0x5fd4>
   17048:	b	1704c <__assert_fail@plt+0x5f94>
   1704c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17050:	add	r0, r0, #0
   17054:	movw	r1, #0
   17058:	cmp	r1, r0
   1705c:	blt	17144 <__assert_fail@plt+0x608c>
   17060:	b	17160 <__assert_fail@plt+0x60a8>
   17064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17068:	movw	r1, #0
   1706c:	cmp	r1, r0
   17070:	bge	17160 <__assert_fail@plt+0x60a8>
   17074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17078:	sub	r0, r0, #1
   1707c:	mvn	r1, #0
   17080:	cmp	r1, r0
   17084:	blt	17144 <__assert_fail@plt+0x608c>
   17088:	b	17160 <__assert_fail@plt+0x60a8>
   1708c:	ldr	r0, [fp, #8]
   17090:	movw	r1, #0
   17094:	sdiv	r0, r1, r0
   17098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1709c:	cmp	r0, r1
   170a0:	blt	17144 <__assert_fail@plt+0x608c>
   170a4:	b	17160 <__assert_fail@plt+0x60a8>
   170a8:	ldr	r0, [fp, #8]
   170ac:	cmp	r0, #0
   170b0:	bne	170b8 <__assert_fail@plt+0x6000>
   170b4:	b	17160 <__assert_fail@plt+0x60a8>
   170b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170bc:	cmp	r0, #0
   170c0:	bge	1712c <__assert_fail@plt+0x6074>
   170c4:	b	170c8 <__assert_fail@plt+0x6010>
   170c8:	b	17110 <__assert_fail@plt+0x6058>
   170cc:	b	17110 <__assert_fail@plt+0x6058>
   170d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170d4:	cmn	r0, #1
   170d8:	bne	17110 <__assert_fail@plt+0x6058>
   170dc:	b	170e0 <__assert_fail@plt+0x6028>
   170e0:	ldr	r0, [fp, #8]
   170e4:	add	r0, r0, #0
   170e8:	movw	r1, #0
   170ec:	cmp	r1, r0
   170f0:	blt	17144 <__assert_fail@plt+0x608c>
   170f4:	b	17160 <__assert_fail@plt+0x60a8>
   170f8:	ldr	r0, [fp, #8]
   170fc:	sub	r0, r0, #1
   17100:	mvn	r1, #0
   17104:	cmp	r1, r0
   17108:	blt	17144 <__assert_fail@plt+0x608c>
   1710c:	b	17160 <__assert_fail@plt+0x60a8>
   17110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17114:	movw	r1, #0
   17118:	sdiv	r0, r1, r0
   1711c:	ldr	r1, [fp, #8]
   17120:	cmp	r0, r1
   17124:	blt	17144 <__assert_fail@plt+0x608c>
   17128:	b	17160 <__assert_fail@plt+0x60a8>
   1712c:	ldr	r0, [fp, #8]
   17130:	movw	r1, #255	; 0xff
   17134:	sdiv	r0, r1, r0
   17138:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1713c:	cmp	r0, r1
   17140:	bge	17160 <__assert_fail@plt+0x60a8>
   17144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17148:	ldr	r1, [fp, #8]
   1714c:	mul	r0, r0, r1
   17150:	and	r0, r0, #255	; 0xff
   17154:	str	r0, [fp, #-28]	; 0xffffffe4
   17158:	b	18188 <__assert_fail@plt+0x70d0>
   1715c:	andhi	r0, r0, r0
   17160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17164:	ldr	r1, [fp, #8]
   17168:	mul	r0, r0, r1
   1716c:	and	r0, r0, #255	; 0xff
   17170:	str	r0, [fp, #-28]	; 0xffffffe4
   17174:	b	1818c <__assert_fail@plt+0x70d4>
   17178:	b	17550 <__assert_fail@plt+0x6498>
   1717c:	b	17180 <__assert_fail@plt+0x60c8>
   17180:	ldr	r0, [fp, #8]
   17184:	cmp	r0, #0
   17188:	bge	1729c <__assert_fail@plt+0x61e4>
   1718c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17190:	cmp	r0, #0
   17194:	bge	17220 <__assert_fail@plt+0x6168>
   17198:	b	1719c <__assert_fail@plt+0x60e4>
   1719c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171a0:	ldr	r1, [fp, #8]
   171a4:	movw	r2, #32767	; 0x7fff
   171a8:	sdiv	r1, r2, r1
   171ac:	cmp	r0, r1
   171b0:	blt	1733c <__assert_fail@plt+0x6284>
   171b4:	b	17354 <__assert_fail@plt+0x629c>
   171b8:	b	171bc <__assert_fail@plt+0x6104>
   171bc:	ldr	r0, [pc, #4084]	; 181b8 <__assert_fail@plt+0x7100>
   171c0:	ldr	r1, [fp, #8]
   171c4:	cmp	r1, r0
   171c8:	blt	171e0 <__assert_fail@plt+0x6128>
   171cc:	b	171ec <__assert_fail@plt+0x6134>
   171d0:	ldr	r0, [fp, #8]
   171d4:	movw	r1, #0
   171d8:	cmp	r1, r0
   171dc:	bge	171ec <__assert_fail@plt+0x6134>
   171e0:	movw	r0, #0
   171e4:	str	r0, [sp, #156]	; 0x9c
   171e8:	b	17204 <__assert_fail@plt+0x614c>
   171ec:	ldr	r0, [fp, #8]
   171f0:	movw	r1, #0
   171f4:	sub	r0, r1, r0
   171f8:	movw	r1, #32767	; 0x7fff
   171fc:	sdiv	r0, r1, r0
   17200:	str	r0, [sp, #156]	; 0x9c
   17204:	ldr	r0, [sp, #156]	; 0x9c
   17208:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1720c:	mvn	r2, #0
   17210:	sub	r1, r2, r1
   17214:	cmp	r0, r1
   17218:	ble	1733c <__assert_fail@plt+0x6284>
   1721c:	b	17354 <__assert_fail@plt+0x629c>
   17220:	b	17224 <__assert_fail@plt+0x616c>
   17224:	b	17280 <__assert_fail@plt+0x61c8>
   17228:	b	17280 <__assert_fail@plt+0x61c8>
   1722c:	ldr	r0, [fp, #8]
   17230:	cmn	r0, #1
   17234:	bne	17280 <__assert_fail@plt+0x61c8>
   17238:	b	1723c <__assert_fail@plt+0x6184>
   1723c:	ldr	r0, [pc, #3964]	; 181c0 <__assert_fail@plt+0x7108>
   17240:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17244:	add	r0, r1, r0
   17248:	movw	r1, #0
   1724c:	cmp	r1, r0
   17250:	blt	1733c <__assert_fail@plt+0x6284>
   17254:	b	17354 <__assert_fail@plt+0x629c>
   17258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1725c:	movw	r1, #0
   17260:	cmp	r1, r0
   17264:	bge	17354 <__assert_fail@plt+0x629c>
   17268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1726c:	sub	r0, r0, #1
   17270:	movw	r1, #32767	; 0x7fff
   17274:	cmp	r1, r0
   17278:	blt	1733c <__assert_fail@plt+0x6284>
   1727c:	b	17354 <__assert_fail@plt+0x629c>
   17280:	ldr	r0, [pc, #3896]	; 181c0 <__assert_fail@plt+0x7108>
   17284:	ldr	r1, [fp, #8]
   17288:	sdiv	r0, r0, r1
   1728c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17290:	cmp	r0, r1
   17294:	blt	1733c <__assert_fail@plt+0x6284>
   17298:	b	17354 <__assert_fail@plt+0x629c>
   1729c:	ldr	r0, [fp, #8]
   172a0:	cmp	r0, #0
   172a4:	bne	172ac <__assert_fail@plt+0x61f4>
   172a8:	b	17354 <__assert_fail@plt+0x629c>
   172ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172b0:	cmp	r0, #0
   172b4:	bge	17324 <__assert_fail@plt+0x626c>
   172b8:	b	172bc <__assert_fail@plt+0x6204>
   172bc:	b	17308 <__assert_fail@plt+0x6250>
   172c0:	b	17308 <__assert_fail@plt+0x6250>
   172c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172c8:	cmn	r0, #1
   172cc:	bne	17308 <__assert_fail@plt+0x6250>
   172d0:	b	172d4 <__assert_fail@plt+0x621c>
   172d4:	ldr	r0, [pc, #3812]	; 181c0 <__assert_fail@plt+0x7108>
   172d8:	ldr	r1, [fp, #8]
   172dc:	add	r0, r1, r0
   172e0:	movw	r1, #0
   172e4:	cmp	r1, r0
   172e8:	blt	1733c <__assert_fail@plt+0x6284>
   172ec:	b	17354 <__assert_fail@plt+0x629c>
   172f0:	ldr	r0, [fp, #8]
   172f4:	sub	r0, r0, #1
   172f8:	movw	r1, #32767	; 0x7fff
   172fc:	cmp	r1, r0
   17300:	blt	1733c <__assert_fail@plt+0x6284>
   17304:	b	17354 <__assert_fail@plt+0x629c>
   17308:	ldr	r0, [pc, #3760]	; 181c0 <__assert_fail@plt+0x7108>
   1730c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17310:	sdiv	r0, r0, r1
   17314:	ldr	r1, [fp, #8]
   17318:	cmp	r0, r1
   1731c:	blt	1733c <__assert_fail@plt+0x6284>
   17320:	b	17354 <__assert_fail@plt+0x629c>
   17324:	ldr	r0, [fp, #8]
   17328:	movw	r1, #32767	; 0x7fff
   1732c:	sdiv	r0, r1, r0
   17330:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17334:	cmp	r0, r1
   17338:	bge	17354 <__assert_fail@plt+0x629c>
   1733c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17340:	ldr	r1, [fp, #8]
   17344:	mul	r0, r0, r1
   17348:	sxth	r0, r0
   1734c:	str	r0, [fp, #-28]	; 0xffffffe4
   17350:	b	18188 <__assert_fail@plt+0x70d0>
   17354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17358:	ldr	r1, [fp, #8]
   1735c:	mul	r0, r0, r1
   17360:	sxth	r0, r0
   17364:	str	r0, [fp, #-28]	; 0xffffffe4
   17368:	b	1818c <__assert_fail@plt+0x70d4>
   1736c:	ldr	r0, [fp, #8]
   17370:	cmp	r0, #0
   17374:	bge	17484 <__assert_fail@plt+0x63cc>
   17378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1737c:	cmp	r0, #0
   17380:	bge	1740c <__assert_fail@plt+0x6354>
   17384:	b	17388 <__assert_fail@plt+0x62d0>
   17388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1738c:	ldr	r1, [fp, #8]
   17390:	movw	r2, #65535	; 0xffff
   17394:	sdiv	r1, r2, r1
   17398:	cmp	r0, r1
   1739c:	blt	17520 <__assert_fail@plt+0x6468>
   173a0:	b	17538 <__assert_fail@plt+0x6480>
   173a4:	b	173a8 <__assert_fail@plt+0x62f0>
   173a8:	ldr	r0, [pc, #3592]	; 181b8 <__assert_fail@plt+0x7100>
   173ac:	ldr	r1, [fp, #8]
   173b0:	cmp	r1, r0
   173b4:	blt	173cc <__assert_fail@plt+0x6314>
   173b8:	b	173d8 <__assert_fail@plt+0x6320>
   173bc:	ldr	r0, [fp, #8]
   173c0:	movw	r1, #0
   173c4:	cmp	r1, r0
   173c8:	bge	173d8 <__assert_fail@plt+0x6320>
   173cc:	movw	r0, #0
   173d0:	str	r0, [sp, #152]	; 0x98
   173d4:	b	173f0 <__assert_fail@plt+0x6338>
   173d8:	ldr	r0, [fp, #8]
   173dc:	movw	r1, #0
   173e0:	sub	r0, r1, r0
   173e4:	movw	r1, #65535	; 0xffff
   173e8:	sdiv	r0, r1, r0
   173ec:	str	r0, [sp, #152]	; 0x98
   173f0:	ldr	r0, [sp, #152]	; 0x98
   173f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173f8:	mvn	r2, #0
   173fc:	sub	r1, r2, r1
   17400:	cmp	r0, r1
   17404:	ble	17520 <__assert_fail@plt+0x6468>
   17408:	b	17538 <__assert_fail@plt+0x6480>
   1740c:	b	17410 <__assert_fail@plt+0x6358>
   17410:	b	17468 <__assert_fail@plt+0x63b0>
   17414:	b	17468 <__assert_fail@plt+0x63b0>
   17418:	ldr	r0, [fp, #8]
   1741c:	cmn	r0, #1
   17420:	bne	17468 <__assert_fail@plt+0x63b0>
   17424:	b	17428 <__assert_fail@plt+0x6370>
   17428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1742c:	add	r0, r0, #0
   17430:	movw	r1, #0
   17434:	cmp	r1, r0
   17438:	blt	17520 <__assert_fail@plt+0x6468>
   1743c:	b	17538 <__assert_fail@plt+0x6480>
   17440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17444:	movw	r1, #0
   17448:	cmp	r1, r0
   1744c:	bge	17538 <__assert_fail@plt+0x6480>
   17450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17454:	sub	r0, r0, #1
   17458:	mvn	r1, #0
   1745c:	cmp	r1, r0
   17460:	blt	17520 <__assert_fail@plt+0x6468>
   17464:	b	17538 <__assert_fail@plt+0x6480>
   17468:	ldr	r0, [fp, #8]
   1746c:	movw	r1, #0
   17470:	sdiv	r0, r1, r0
   17474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17478:	cmp	r0, r1
   1747c:	blt	17520 <__assert_fail@plt+0x6468>
   17480:	b	17538 <__assert_fail@plt+0x6480>
   17484:	ldr	r0, [fp, #8]
   17488:	cmp	r0, #0
   1748c:	bne	17494 <__assert_fail@plt+0x63dc>
   17490:	b	17538 <__assert_fail@plt+0x6480>
   17494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17498:	cmp	r0, #0
   1749c:	bge	17508 <__assert_fail@plt+0x6450>
   174a0:	b	174a4 <__assert_fail@plt+0x63ec>
   174a4:	b	174ec <__assert_fail@plt+0x6434>
   174a8:	b	174ec <__assert_fail@plt+0x6434>
   174ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174b0:	cmn	r0, #1
   174b4:	bne	174ec <__assert_fail@plt+0x6434>
   174b8:	b	174bc <__assert_fail@plt+0x6404>
   174bc:	ldr	r0, [fp, #8]
   174c0:	add	r0, r0, #0
   174c4:	movw	r1, #0
   174c8:	cmp	r1, r0
   174cc:	blt	17520 <__assert_fail@plt+0x6468>
   174d0:	b	17538 <__assert_fail@plt+0x6480>
   174d4:	ldr	r0, [fp, #8]
   174d8:	sub	r0, r0, #1
   174dc:	mvn	r1, #0
   174e0:	cmp	r1, r0
   174e4:	blt	17520 <__assert_fail@plt+0x6468>
   174e8:	b	17538 <__assert_fail@plt+0x6480>
   174ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174f0:	movw	r1, #0
   174f4:	sdiv	r0, r1, r0
   174f8:	ldr	r1, [fp, #8]
   174fc:	cmp	r0, r1
   17500:	blt	17520 <__assert_fail@plt+0x6468>
   17504:	b	17538 <__assert_fail@plt+0x6480>
   17508:	ldr	r0, [fp, #8]
   1750c:	movw	r1, #65535	; 0xffff
   17510:	sdiv	r0, r1, r0
   17514:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17518:	cmp	r0, r1
   1751c:	bge	17538 <__assert_fail@plt+0x6480>
   17520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17524:	ldr	r1, [fp, #8]
   17528:	mul	r0, r0, r1
   1752c:	uxth	r0, r0
   17530:	str	r0, [fp, #-28]	; 0xffffffe4
   17534:	b	18188 <__assert_fail@plt+0x70d0>
   17538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1753c:	ldr	r1, [fp, #8]
   17540:	mul	r0, r0, r1
   17544:	uxth	r0, r0
   17548:	str	r0, [fp, #-28]	; 0xffffffe4
   1754c:	b	1818c <__assert_fail@plt+0x70d4>
   17550:	b	17554 <__assert_fail@plt+0x649c>
   17554:	b	17558 <__assert_fail@plt+0x64a0>
   17558:	ldr	r0, [fp, #8]
   1755c:	cmp	r0, #0
   17560:	bge	17664 <__assert_fail@plt+0x65ac>
   17564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17568:	cmp	r0, #0
   1756c:	bge	175f8 <__assert_fail@plt+0x6540>
   17570:	b	17574 <__assert_fail@plt+0x64bc>
   17574:	ldr	r0, [pc, #3128]	; 181b4 <__assert_fail@plt+0x70fc>
   17578:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1757c:	ldr	r2, [fp, #8]
   17580:	sdiv	r0, r0, r2
   17584:	cmp	r1, r0
   17588:	blt	176f4 <__assert_fail@plt+0x663c>
   1758c:	b	17708 <__assert_fail@plt+0x6650>
   17590:	b	17594 <__assert_fail@plt+0x64dc>
   17594:	ldr	r0, [pc, #3100]	; 181b8 <__assert_fail@plt+0x7100>
   17598:	ldr	r1, [fp, #8]
   1759c:	cmp	r1, r0
   175a0:	blt	175b8 <__assert_fail@plt+0x6500>
   175a4:	b	175c4 <__assert_fail@plt+0x650c>
   175a8:	ldr	r0, [fp, #8]
   175ac:	movw	r1, #0
   175b0:	cmp	r1, r0
   175b4:	bge	175c4 <__assert_fail@plt+0x650c>
   175b8:	movw	r0, #0
   175bc:	str	r0, [sp, #148]	; 0x94
   175c0:	b	175dc <__assert_fail@plt+0x6524>
   175c4:	ldr	r0, [pc, #3048]	; 181b4 <__assert_fail@plt+0x70fc>
   175c8:	ldr	r1, [fp, #8]
   175cc:	movw	r2, #0
   175d0:	sub	r1, r2, r1
   175d4:	sdiv	r0, r0, r1
   175d8:	str	r0, [sp, #148]	; 0x94
   175dc:	ldr	r0, [sp, #148]	; 0x94
   175e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175e4:	mvn	r2, #0
   175e8:	sub	r1, r2, r1
   175ec:	cmp	r0, r1
   175f0:	ble	176f4 <__assert_fail@plt+0x663c>
   175f4:	b	17708 <__assert_fail@plt+0x6650>
   175f8:	ldr	r0, [fp, #8]
   175fc:	cmn	r0, #1
   17600:	bne	17648 <__assert_fail@plt+0x6590>
   17604:	b	17608 <__assert_fail@plt+0x6550>
   17608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1760c:	add	r0, r0, #-2147483648	; 0x80000000
   17610:	movw	r1, #0
   17614:	cmp	r1, r0
   17618:	blt	176f4 <__assert_fail@plt+0x663c>
   1761c:	b	17708 <__assert_fail@plt+0x6650>
   17620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17624:	movw	r1, #0
   17628:	cmp	r1, r0
   1762c:	bge	17708 <__assert_fail@plt+0x6650>
   17630:	ldr	r0, [pc, #2940]	; 181b4 <__assert_fail@plt+0x70fc>
   17634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17638:	sub	r1, r1, #1
   1763c:	cmp	r0, r1
   17640:	blt	176f4 <__assert_fail@plt+0x663c>
   17644:	b	17708 <__assert_fail@plt+0x6650>
   17648:	ldr	r0, [pc, #2924]	; 181bc <__assert_fail@plt+0x7104>
   1764c:	ldr	r1, [fp, #8]
   17650:	sdiv	r0, r0, r1
   17654:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17658:	cmp	r0, r1
   1765c:	blt	176f4 <__assert_fail@plt+0x663c>
   17660:	b	17708 <__assert_fail@plt+0x6650>
   17664:	ldr	r0, [fp, #8]
   17668:	cmp	r0, #0
   1766c:	bne	17674 <__assert_fail@plt+0x65bc>
   17670:	b	17708 <__assert_fail@plt+0x6650>
   17674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17678:	cmp	r0, #0
   1767c:	bge	176dc <__assert_fail@plt+0x6624>
   17680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17684:	cmn	r0, #1
   17688:	bne	176c0 <__assert_fail@plt+0x6608>
   1768c:	b	17690 <__assert_fail@plt+0x65d8>
   17690:	ldr	r0, [fp, #8]
   17694:	add	r0, r0, #-2147483648	; 0x80000000
   17698:	movw	r1, #0
   1769c:	cmp	r1, r0
   176a0:	blt	176f4 <__assert_fail@plt+0x663c>
   176a4:	b	17708 <__assert_fail@plt+0x6650>
   176a8:	ldr	r0, [pc, #2820]	; 181b4 <__assert_fail@plt+0x70fc>
   176ac:	ldr	r1, [fp, #8]
   176b0:	sub	r1, r1, #1
   176b4:	cmp	r0, r1
   176b8:	blt	176f4 <__assert_fail@plt+0x663c>
   176bc:	b	17708 <__assert_fail@plt+0x6650>
   176c0:	ldr	r0, [pc, #2804]	; 181bc <__assert_fail@plt+0x7104>
   176c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176c8:	sdiv	r0, r0, r1
   176cc:	ldr	r1, [fp, #8]
   176d0:	cmp	r0, r1
   176d4:	blt	176f4 <__assert_fail@plt+0x663c>
   176d8:	b	17708 <__assert_fail@plt+0x6650>
   176dc:	ldr	r0, [pc, #2768]	; 181b4 <__assert_fail@plt+0x70fc>
   176e0:	ldr	r1, [fp, #8]
   176e4:	sdiv	r0, r0, r1
   176e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176ec:	cmp	r0, r1
   176f0:	bge	17708 <__assert_fail@plt+0x6650>
   176f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176f8:	ldr	r1, [fp, #8]
   176fc:	mul	r0, r0, r1
   17700:	str	r0, [fp, #-28]	; 0xffffffe4
   17704:	b	18188 <__assert_fail@plt+0x70d0>
   17708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1770c:	ldr	r1, [fp, #8]
   17710:	mul	r0, r0, r1
   17714:	str	r0, [fp, #-28]	; 0xffffffe4
   17718:	b	1818c <__assert_fail@plt+0x70d4>
   1771c:	ldr	r0, [fp, #8]
   17720:	cmp	r0, #0
   17724:	bge	17834 <__assert_fail@plt+0x677c>
   17728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1772c:	cmp	r0, #0
   17730:	bge	177bc <__assert_fail@plt+0x6704>
   17734:	b	17754 <__assert_fail@plt+0x669c>
   17738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1773c:	ldr	r1, [fp, #8]
   17740:	mvn	r2, #0
   17744:	udiv	r1, r2, r1
   17748:	cmp	r0, r1
   1774c:	bcc	178d0 <__assert_fail@plt+0x6818>
   17750:	b	178e4 <__assert_fail@plt+0x682c>
   17754:	b	17758 <__assert_fail@plt+0x66a0>
   17758:	ldr	r0, [pc, #2648]	; 181b8 <__assert_fail@plt+0x7100>
   1775c:	ldr	r1, [fp, #8]
   17760:	cmp	r1, r0
   17764:	blt	1777c <__assert_fail@plt+0x66c4>
   17768:	b	17788 <__assert_fail@plt+0x66d0>
   1776c:	ldr	r0, [fp, #8]
   17770:	movw	r1, #0
   17774:	cmp	r1, r0
   17778:	bge	17788 <__assert_fail@plt+0x66d0>
   1777c:	movw	r0, #1
   17780:	str	r0, [sp, #144]	; 0x90
   17784:	b	177a0 <__assert_fail@plt+0x66e8>
   17788:	ldr	r0, [fp, #8]
   1778c:	movw	r1, #0
   17790:	sub	r0, r1, r0
   17794:	mvn	r1, #0
   17798:	udiv	r0, r1, r0
   1779c:	str	r0, [sp, #144]	; 0x90
   177a0:	ldr	r0, [sp, #144]	; 0x90
   177a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177a8:	mvn	r2, #0
   177ac:	sub	r1, r2, r1
   177b0:	cmp	r0, r1
   177b4:	bls	178d0 <__assert_fail@plt+0x6818>
   177b8:	b	178e4 <__assert_fail@plt+0x682c>
   177bc:	b	177c0 <__assert_fail@plt+0x6708>
   177c0:	b	17818 <__assert_fail@plt+0x6760>
   177c4:	b	17818 <__assert_fail@plt+0x6760>
   177c8:	ldr	r0, [fp, #8]
   177cc:	cmn	r0, #1
   177d0:	bne	17818 <__assert_fail@plt+0x6760>
   177d4:	b	177d8 <__assert_fail@plt+0x6720>
   177d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177dc:	add	r0, r0, #0
   177e0:	movw	r1, #0
   177e4:	cmp	r1, r0
   177e8:	blt	178d0 <__assert_fail@plt+0x6818>
   177ec:	b	178e4 <__assert_fail@plt+0x682c>
   177f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177f4:	movw	r1, #0
   177f8:	cmp	r1, r0
   177fc:	bge	178e4 <__assert_fail@plt+0x682c>
   17800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17804:	sub	r0, r0, #1
   17808:	mvn	r1, #0
   1780c:	cmp	r1, r0
   17810:	blt	178d0 <__assert_fail@plt+0x6818>
   17814:	b	178e4 <__assert_fail@plt+0x682c>
   17818:	ldr	r0, [fp, #8]
   1781c:	movw	r1, #0
   17820:	sdiv	r0, r1, r0
   17824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17828:	cmp	r0, r1
   1782c:	blt	178d0 <__assert_fail@plt+0x6818>
   17830:	b	178e4 <__assert_fail@plt+0x682c>
   17834:	ldr	r0, [fp, #8]
   17838:	cmp	r0, #0
   1783c:	bne	17844 <__assert_fail@plt+0x678c>
   17840:	b	178e4 <__assert_fail@plt+0x682c>
   17844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17848:	cmp	r0, #0
   1784c:	bge	178b8 <__assert_fail@plt+0x6800>
   17850:	b	17854 <__assert_fail@plt+0x679c>
   17854:	b	1789c <__assert_fail@plt+0x67e4>
   17858:	b	1789c <__assert_fail@plt+0x67e4>
   1785c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17860:	cmn	r0, #1
   17864:	bne	1789c <__assert_fail@plt+0x67e4>
   17868:	b	1786c <__assert_fail@plt+0x67b4>
   1786c:	ldr	r0, [fp, #8]
   17870:	add	r0, r0, #0
   17874:	movw	r1, #0
   17878:	cmp	r1, r0
   1787c:	blt	178d0 <__assert_fail@plt+0x6818>
   17880:	b	178e4 <__assert_fail@plt+0x682c>
   17884:	ldr	r0, [fp, #8]
   17888:	sub	r0, r0, #1
   1788c:	mvn	r1, #0
   17890:	cmp	r1, r0
   17894:	blt	178d0 <__assert_fail@plt+0x6818>
   17898:	b	178e4 <__assert_fail@plt+0x682c>
   1789c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178a0:	movw	r1, #0
   178a4:	sdiv	r0, r1, r0
   178a8:	ldr	r1, [fp, #8]
   178ac:	cmp	r0, r1
   178b0:	blt	178d0 <__assert_fail@plt+0x6818>
   178b4:	b	178e4 <__assert_fail@plt+0x682c>
   178b8:	ldr	r0, [fp, #8]
   178bc:	mvn	r1, #0
   178c0:	udiv	r0, r1, r0
   178c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178c8:	cmp	r0, r1
   178cc:	bcs	178e4 <__assert_fail@plt+0x682c>
   178d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178d4:	ldr	r1, [fp, #8]
   178d8:	mul	r0, r0, r1
   178dc:	str	r0, [fp, #-28]	; 0xffffffe4
   178e0:	b	18188 <__assert_fail@plt+0x70d0>
   178e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178e8:	ldr	r1, [fp, #8]
   178ec:	mul	r0, r0, r1
   178f0:	str	r0, [fp, #-28]	; 0xffffffe4
   178f4:	b	1818c <__assert_fail@plt+0x70d4>
   178f8:	b	178fc <__assert_fail@plt+0x6844>
   178fc:	b	17900 <__assert_fail@plt+0x6848>
   17900:	ldr	r0, [fp, #8]
   17904:	cmp	r0, #0
   17908:	bge	17a0c <__assert_fail@plt+0x6954>
   1790c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17910:	cmp	r0, #0
   17914:	bge	179a0 <__assert_fail@plt+0x68e8>
   17918:	b	1791c <__assert_fail@plt+0x6864>
   1791c:	ldr	r0, [pc, #2192]	; 181b4 <__assert_fail@plt+0x70fc>
   17920:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17924:	ldr	r2, [fp, #8]
   17928:	sdiv	r0, r0, r2
   1792c:	cmp	r1, r0
   17930:	blt	17a9c <__assert_fail@plt+0x69e4>
   17934:	b	17ab0 <__assert_fail@plt+0x69f8>
   17938:	b	1793c <__assert_fail@plt+0x6884>
   1793c:	ldr	r0, [pc, #2164]	; 181b8 <__assert_fail@plt+0x7100>
   17940:	ldr	r1, [fp, #8]
   17944:	cmp	r1, r0
   17948:	blt	17960 <__assert_fail@plt+0x68a8>
   1794c:	b	1796c <__assert_fail@plt+0x68b4>
   17950:	ldr	r0, [fp, #8]
   17954:	movw	r1, #0
   17958:	cmp	r1, r0
   1795c:	bge	1796c <__assert_fail@plt+0x68b4>
   17960:	movw	r0, #0
   17964:	str	r0, [sp, #140]	; 0x8c
   17968:	b	17984 <__assert_fail@plt+0x68cc>
   1796c:	ldr	r0, [pc, #2112]	; 181b4 <__assert_fail@plt+0x70fc>
   17970:	ldr	r1, [fp, #8]
   17974:	movw	r2, #0
   17978:	sub	r1, r2, r1
   1797c:	sdiv	r0, r0, r1
   17980:	str	r0, [sp, #140]	; 0x8c
   17984:	ldr	r0, [sp, #140]	; 0x8c
   17988:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1798c:	mvn	r2, #0
   17990:	sub	r1, r2, r1
   17994:	cmp	r0, r1
   17998:	ble	17a9c <__assert_fail@plt+0x69e4>
   1799c:	b	17ab0 <__assert_fail@plt+0x69f8>
   179a0:	ldr	r0, [fp, #8]
   179a4:	cmn	r0, #1
   179a8:	bne	179f0 <__assert_fail@plt+0x6938>
   179ac:	b	179b0 <__assert_fail@plt+0x68f8>
   179b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179b4:	add	r0, r0, #-2147483648	; 0x80000000
   179b8:	movw	r1, #0
   179bc:	cmp	r1, r0
   179c0:	blt	17a9c <__assert_fail@plt+0x69e4>
   179c4:	b	17ab0 <__assert_fail@plt+0x69f8>
   179c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179cc:	movw	r1, #0
   179d0:	cmp	r1, r0
   179d4:	bge	17ab0 <__assert_fail@plt+0x69f8>
   179d8:	ldr	r0, [pc, #2004]	; 181b4 <__assert_fail@plt+0x70fc>
   179dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179e0:	sub	r1, r1, #1
   179e4:	cmp	r0, r1
   179e8:	blt	17a9c <__assert_fail@plt+0x69e4>
   179ec:	b	17ab0 <__assert_fail@plt+0x69f8>
   179f0:	ldr	r0, [pc, #1988]	; 181bc <__assert_fail@plt+0x7104>
   179f4:	ldr	r1, [fp, #8]
   179f8:	sdiv	r0, r0, r1
   179fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a00:	cmp	r0, r1
   17a04:	blt	17a9c <__assert_fail@plt+0x69e4>
   17a08:	b	17ab0 <__assert_fail@plt+0x69f8>
   17a0c:	ldr	r0, [fp, #8]
   17a10:	cmp	r0, #0
   17a14:	bne	17a1c <__assert_fail@plt+0x6964>
   17a18:	b	17ab0 <__assert_fail@plt+0x69f8>
   17a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a20:	cmp	r0, #0
   17a24:	bge	17a84 <__assert_fail@plt+0x69cc>
   17a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a2c:	cmn	r0, #1
   17a30:	bne	17a68 <__assert_fail@plt+0x69b0>
   17a34:	b	17a38 <__assert_fail@plt+0x6980>
   17a38:	ldr	r0, [fp, #8]
   17a3c:	add	r0, r0, #-2147483648	; 0x80000000
   17a40:	movw	r1, #0
   17a44:	cmp	r1, r0
   17a48:	blt	17a9c <__assert_fail@plt+0x69e4>
   17a4c:	b	17ab0 <__assert_fail@plt+0x69f8>
   17a50:	ldr	r0, [pc, #1884]	; 181b4 <__assert_fail@plt+0x70fc>
   17a54:	ldr	r1, [fp, #8]
   17a58:	sub	r1, r1, #1
   17a5c:	cmp	r0, r1
   17a60:	blt	17a9c <__assert_fail@plt+0x69e4>
   17a64:	b	17ab0 <__assert_fail@plt+0x69f8>
   17a68:	ldr	r0, [pc, #1868]	; 181bc <__assert_fail@plt+0x7104>
   17a6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a70:	sdiv	r0, r0, r1
   17a74:	ldr	r1, [fp, #8]
   17a78:	cmp	r0, r1
   17a7c:	blt	17a9c <__assert_fail@plt+0x69e4>
   17a80:	b	17ab0 <__assert_fail@plt+0x69f8>
   17a84:	ldr	r0, [pc, #1832]	; 181b4 <__assert_fail@plt+0x70fc>
   17a88:	ldr	r1, [fp, #8]
   17a8c:	sdiv	r0, r0, r1
   17a90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a94:	cmp	r0, r1
   17a98:	bge	17ab0 <__assert_fail@plt+0x69f8>
   17a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17aa0:	ldr	r1, [fp, #8]
   17aa4:	mul	r0, r0, r1
   17aa8:	str	r0, [fp, #-28]	; 0xffffffe4
   17aac:	b	18188 <__assert_fail@plt+0x70d0>
   17ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ab4:	ldr	r1, [fp, #8]
   17ab8:	mul	r0, r0, r1
   17abc:	str	r0, [fp, #-28]	; 0xffffffe4
   17ac0:	b	1818c <__assert_fail@plt+0x70d4>
   17ac4:	ldr	r0, [fp, #8]
   17ac8:	cmp	r0, #0
   17acc:	bge	17bdc <__assert_fail@plt+0x6b24>
   17ad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ad4:	cmp	r0, #0
   17ad8:	bge	17b64 <__assert_fail@plt+0x6aac>
   17adc:	b	17afc <__assert_fail@plt+0x6a44>
   17ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ae4:	ldr	r1, [fp, #8]
   17ae8:	mvn	r2, #0
   17aec:	udiv	r1, r2, r1
   17af0:	cmp	r0, r1
   17af4:	bcc	17c78 <__assert_fail@plt+0x6bc0>
   17af8:	b	17c8c <__assert_fail@plt+0x6bd4>
   17afc:	b	17b00 <__assert_fail@plt+0x6a48>
   17b00:	ldr	r0, [pc, #1712]	; 181b8 <__assert_fail@plt+0x7100>
   17b04:	ldr	r1, [fp, #8]
   17b08:	cmp	r1, r0
   17b0c:	blt	17b24 <__assert_fail@plt+0x6a6c>
   17b10:	b	17b30 <__assert_fail@plt+0x6a78>
   17b14:	ldr	r0, [fp, #8]
   17b18:	movw	r1, #0
   17b1c:	cmp	r1, r0
   17b20:	bge	17b30 <__assert_fail@plt+0x6a78>
   17b24:	movw	r0, #1
   17b28:	str	r0, [sp, #136]	; 0x88
   17b2c:	b	17b48 <__assert_fail@plt+0x6a90>
   17b30:	ldr	r0, [fp, #8]
   17b34:	movw	r1, #0
   17b38:	sub	r0, r1, r0
   17b3c:	mvn	r1, #0
   17b40:	udiv	r0, r1, r0
   17b44:	str	r0, [sp, #136]	; 0x88
   17b48:	ldr	r0, [sp, #136]	; 0x88
   17b4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b50:	mvn	r2, #0
   17b54:	sub	r1, r2, r1
   17b58:	cmp	r0, r1
   17b5c:	bls	17c78 <__assert_fail@plt+0x6bc0>
   17b60:	b	17c8c <__assert_fail@plt+0x6bd4>
   17b64:	b	17b68 <__assert_fail@plt+0x6ab0>
   17b68:	b	17bc0 <__assert_fail@plt+0x6b08>
   17b6c:	b	17bc0 <__assert_fail@plt+0x6b08>
   17b70:	ldr	r0, [fp, #8]
   17b74:	cmn	r0, #1
   17b78:	bne	17bc0 <__assert_fail@plt+0x6b08>
   17b7c:	b	17b80 <__assert_fail@plt+0x6ac8>
   17b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b84:	add	r0, r0, #0
   17b88:	movw	r1, #0
   17b8c:	cmp	r1, r0
   17b90:	blt	17c78 <__assert_fail@plt+0x6bc0>
   17b94:	b	17c8c <__assert_fail@plt+0x6bd4>
   17b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b9c:	movw	r1, #0
   17ba0:	cmp	r1, r0
   17ba4:	bge	17c8c <__assert_fail@plt+0x6bd4>
   17ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bac:	sub	r0, r0, #1
   17bb0:	mvn	r1, #0
   17bb4:	cmp	r1, r0
   17bb8:	blt	17c78 <__assert_fail@plt+0x6bc0>
   17bbc:	b	17c8c <__assert_fail@plt+0x6bd4>
   17bc0:	ldr	r0, [fp, #8]
   17bc4:	movw	r1, #0
   17bc8:	sdiv	r0, r1, r0
   17bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bd0:	cmp	r0, r1
   17bd4:	blt	17c78 <__assert_fail@plt+0x6bc0>
   17bd8:	b	17c8c <__assert_fail@plt+0x6bd4>
   17bdc:	ldr	r0, [fp, #8]
   17be0:	cmp	r0, #0
   17be4:	bne	17bec <__assert_fail@plt+0x6b34>
   17be8:	b	17c8c <__assert_fail@plt+0x6bd4>
   17bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bf0:	cmp	r0, #0
   17bf4:	bge	17c60 <__assert_fail@plt+0x6ba8>
   17bf8:	b	17bfc <__assert_fail@plt+0x6b44>
   17bfc:	b	17c44 <__assert_fail@plt+0x6b8c>
   17c00:	b	17c44 <__assert_fail@plt+0x6b8c>
   17c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c08:	cmn	r0, #1
   17c0c:	bne	17c44 <__assert_fail@plt+0x6b8c>
   17c10:	b	17c14 <__assert_fail@plt+0x6b5c>
   17c14:	ldr	r0, [fp, #8]
   17c18:	add	r0, r0, #0
   17c1c:	movw	r1, #0
   17c20:	cmp	r1, r0
   17c24:	blt	17c78 <__assert_fail@plt+0x6bc0>
   17c28:	b	17c8c <__assert_fail@plt+0x6bd4>
   17c2c:	ldr	r0, [fp, #8]
   17c30:	sub	r0, r0, #1
   17c34:	mvn	r1, #0
   17c38:	cmp	r1, r0
   17c3c:	blt	17c78 <__assert_fail@plt+0x6bc0>
   17c40:	b	17c8c <__assert_fail@plt+0x6bd4>
   17c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c48:	movw	r1, #0
   17c4c:	sdiv	r0, r1, r0
   17c50:	ldr	r1, [fp, #8]
   17c54:	cmp	r0, r1
   17c58:	blt	17c78 <__assert_fail@plt+0x6bc0>
   17c5c:	b	17c8c <__assert_fail@plt+0x6bd4>
   17c60:	ldr	r0, [fp, #8]
   17c64:	mvn	r1, #0
   17c68:	udiv	r0, r1, r0
   17c6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c70:	cmp	r0, r1
   17c74:	bcs	17c8c <__assert_fail@plt+0x6bd4>
   17c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c7c:	ldr	r1, [fp, #8]
   17c80:	mul	r0, r0, r1
   17c84:	str	r0, [fp, #-28]	; 0xffffffe4
   17c88:	b	18188 <__assert_fail@plt+0x70d0>
   17c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c90:	ldr	r1, [fp, #8]
   17c94:	mul	r0, r0, r1
   17c98:	str	r0, [fp, #-28]	; 0xffffffe4
   17c9c:	b	1818c <__assert_fail@plt+0x70d4>
   17ca0:	b	17ca4 <__assert_fail@plt+0x6bec>
   17ca4:	ldr	r0, [fp, #8]
   17ca8:	cmp	r0, #0
   17cac:	bge	17e34 <__assert_fail@plt+0x6d7c>
   17cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cb4:	cmp	r0, #0
   17cb8:	bge	17da0 <__assert_fail@plt+0x6ce8>
   17cbc:	b	17cc0 <__assert_fail@plt+0x6c08>
   17cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cc4:	ldr	r1, [fp, #8]
   17cc8:	asr	r3, r1, #31
   17ccc:	mvn	r2, #0
   17cd0:	mvn	ip, #-2147483648	; 0x80000000
   17cd4:	str	r0, [sp, #132]	; 0x84
   17cd8:	mov	r0, r2
   17cdc:	str	r1, [sp, #128]	; 0x80
   17ce0:	mov	r1, ip
   17ce4:	ldr	r2, [sp, #128]	; 0x80
   17ce8:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   17cec:	ldr	r2, [sp, #132]	; 0x84
   17cf0:	subs	r0, r2, r0
   17cf4:	rscs	r1, r1, r2, asr #31
   17cf8:	str	r0, [sp, #124]	; 0x7c
   17cfc:	str	r1, [sp, #120]	; 0x78
   17d00:	blt	17f14 <__assert_fail@plt+0x6e5c>
   17d04:	b	17f28 <__assert_fail@plt+0x6e70>
   17d08:	b	17d0c <__assert_fail@plt+0x6c54>
   17d0c:	ldr	r0, [pc, #1188]	; 181b8 <__assert_fail@plt+0x7100>
   17d10:	ldr	r1, [fp, #8]
   17d14:	cmp	r1, r0
   17d18:	blt	17d30 <__assert_fail@plt+0x6c78>
   17d1c:	b	17d44 <__assert_fail@plt+0x6c8c>
   17d20:	ldr	r0, [fp, #8]
   17d24:	movw	r1, #0
   17d28:	cmp	r1, r0
   17d2c:	bge	17d44 <__assert_fail@plt+0x6c8c>
   17d30:	mov	r0, #0
   17d34:	mvn	r1, #0
   17d38:	str	r1, [sp, #116]	; 0x74
   17d3c:	str	r0, [sp, #112]	; 0x70
   17d40:	b	17d78 <__assert_fail@plt+0x6cc0>
   17d44:	ldr	r0, [fp, #8]
   17d48:	rsb	r0, r0, #0
   17d4c:	asr	r3, r0, #31
   17d50:	mvn	r1, #0
   17d54:	mvn	r2, #-2147483648	; 0x80000000
   17d58:	str	r0, [sp, #108]	; 0x6c
   17d5c:	mov	r0, r1
   17d60:	mov	r1, r2
   17d64:	ldr	r2, [sp, #108]	; 0x6c
   17d68:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   17d6c:	str	r0, [sp, #116]	; 0x74
   17d70:	str	r1, [sp, #112]	; 0x70
   17d74:	b	17d78 <__assert_fail@plt+0x6cc0>
   17d78:	ldr	r0, [sp, #112]	; 0x70
   17d7c:	ldr	r1, [sp, #116]	; 0x74
   17d80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d84:	mvn	r2, r2
   17d88:	subs	r1, r2, r1
   17d8c:	rscs	r0, r0, r2, asr #31
   17d90:	str	r1, [sp, #104]	; 0x68
   17d94:	str	r0, [sp, #100]	; 0x64
   17d98:	bge	17f14 <__assert_fail@plt+0x6e5c>
   17d9c:	b	17f28 <__assert_fail@plt+0x6e70>
   17da0:	ldr	r0, [fp, #8]
   17da4:	cmn	r0, #1
   17da8:	bne	17df4 <__assert_fail@plt+0x6d3c>
   17dac:	b	17db0 <__assert_fail@plt+0x6cf8>
   17db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17db4:	mov	r1, #-2147483648	; 0x80000000
   17db8:	add	r1, r1, r0, asr #31
   17dbc:	rsbs	r0, r0, #0
   17dc0:	rscs	r1, r1, #0
   17dc4:	str	r0, [sp, #96]	; 0x60
   17dc8:	str	r1, [sp, #92]	; 0x5c
   17dcc:	blt	17f14 <__assert_fail@plt+0x6e5c>
   17dd0:	b	17f28 <__assert_fail@plt+0x6e70>
   17dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dd8:	movw	r1, #0
   17ddc:	cmp	r1, r0
   17de0:	bge	17f28 <__assert_fail@plt+0x6e70>
   17de4:	mov	r0, #0
   17de8:	cmp	r0, #0
   17dec:	bne	17f14 <__assert_fail@plt+0x6e5c>
   17df0:	b	17f28 <__assert_fail@plt+0x6e70>
   17df4:	ldr	r0, [fp, #8]
   17df8:	asr	r3, r0, #31
   17dfc:	mov	r1, #0
   17e00:	mov	r2, #-2147483648	; 0x80000000
   17e04:	str	r0, [sp, #88]	; 0x58
   17e08:	mov	r0, r1
   17e0c:	mov	r1, r2
   17e10:	ldr	r2, [sp, #88]	; 0x58
   17e14:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   17e18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17e1c:	subs	r0, r0, r2
   17e20:	sbcs	r1, r1, r2, asr #31
   17e24:	str	r0, [sp, #84]	; 0x54
   17e28:	str	r1, [sp, #80]	; 0x50
   17e2c:	blt	17f14 <__assert_fail@plt+0x6e5c>
   17e30:	b	17f28 <__assert_fail@plt+0x6e70>
   17e34:	ldr	r0, [fp, #8]
   17e38:	cmp	r0, #0
   17e3c:	bne	17e44 <__assert_fail@plt+0x6d8c>
   17e40:	b	17f28 <__assert_fail@plt+0x6e70>
   17e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e48:	cmp	r0, #0
   17e4c:	bge	17ed4 <__assert_fail@plt+0x6e1c>
   17e50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e54:	cmn	r0, #1
   17e58:	bne	17e94 <__assert_fail@plt+0x6ddc>
   17e5c:	b	17e60 <__assert_fail@plt+0x6da8>
   17e60:	ldr	r0, [fp, #8]
   17e64:	mov	r1, #-2147483648	; 0x80000000
   17e68:	add	r1, r1, r0, asr #31
   17e6c:	rsbs	r0, r0, #0
   17e70:	rscs	r1, r1, #0
   17e74:	str	r0, [sp, #76]	; 0x4c
   17e78:	str	r1, [sp, #72]	; 0x48
   17e7c:	blt	17f14 <__assert_fail@plt+0x6e5c>
   17e80:	b	17f28 <__assert_fail@plt+0x6e70>
   17e84:	mov	r0, #0
   17e88:	cmp	r0, #0
   17e8c:	bne	17f14 <__assert_fail@plt+0x6e5c>
   17e90:	b	17f28 <__assert_fail@plt+0x6e70>
   17e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e98:	asr	r3, r0, #31
   17e9c:	mov	r1, #0
   17ea0:	mov	r2, #-2147483648	; 0x80000000
   17ea4:	str	r0, [sp, #68]	; 0x44
   17ea8:	mov	r0, r1
   17eac:	mov	r1, r2
   17eb0:	ldr	r2, [sp, #68]	; 0x44
   17eb4:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   17eb8:	ldr	r2, [fp, #8]
   17ebc:	subs	r0, r0, r2
   17ec0:	sbcs	r1, r1, r2, asr #31
   17ec4:	str	r0, [sp, #64]	; 0x40
   17ec8:	str	r1, [sp, #60]	; 0x3c
   17ecc:	blt	17f14 <__assert_fail@plt+0x6e5c>
   17ed0:	b	17f28 <__assert_fail@plt+0x6e70>
   17ed4:	ldr	r0, [fp, #8]
   17ed8:	asr	r3, r0, #31
   17edc:	mvn	r1, #0
   17ee0:	mvn	r2, #-2147483648	; 0x80000000
   17ee4:	str	r0, [sp, #56]	; 0x38
   17ee8:	mov	r0, r1
   17eec:	mov	r1, r2
   17ef0:	ldr	r2, [sp, #56]	; 0x38
   17ef4:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   17ef8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17efc:	subs	r0, r0, r2
   17f00:	sbcs	r1, r1, r2, asr #31
   17f04:	str	r0, [sp, #52]	; 0x34
   17f08:	str	r1, [sp, #48]	; 0x30
   17f0c:	bge	17f28 <__assert_fail@plt+0x6e70>
   17f10:	b	17f14 <__assert_fail@plt+0x6e5c>
   17f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f18:	ldr	r1, [fp, #8]
   17f1c:	mul	r0, r0, r1
   17f20:	str	r0, [fp, #-28]	; 0xffffffe4
   17f24:	b	18188 <__assert_fail@plt+0x70d0>
   17f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f2c:	ldr	r1, [fp, #8]
   17f30:	mul	r0, r0, r1
   17f34:	str	r0, [fp, #-28]	; 0xffffffe4
   17f38:	b	1818c <__assert_fail@plt+0x70d4>
   17f3c:	ldr	r0, [fp, #8]
   17f40:	cmp	r0, #0
   17f44:	bge	180a4 <__assert_fail@plt+0x6fec>
   17f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f4c:	cmp	r0, #0
   17f50:	bge	1802c <__assert_fail@plt+0x6f74>
   17f54:	b	17f9c <__assert_fail@plt+0x6ee4>
   17f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f5c:	ldr	r1, [fp, #8]
   17f60:	asr	r3, r1, #31
   17f64:	mvn	r2, #0
   17f68:	str	r0, [sp, #44]	; 0x2c
   17f6c:	mov	r0, r2
   17f70:	str	r1, [sp, #40]	; 0x28
   17f74:	mov	r1, r2
   17f78:	ldr	r2, [sp, #40]	; 0x28
   17f7c:	bl	1cb38 <__assert_fail@plt+0xba80>
   17f80:	ldr	r2, [sp, #44]	; 0x2c
   17f84:	subs	r0, r2, r0
   17f88:	rscs	r1, r1, r2, asr #31
   17f8c:	str	r0, [sp, #36]	; 0x24
   17f90:	str	r1, [sp, #32]
   17f94:	bcc	18160 <__assert_fail@plt+0x70a8>
   17f98:	b	18174 <__assert_fail@plt+0x70bc>
   17f9c:	b	17fa0 <__assert_fail@plt+0x6ee8>
   17fa0:	ldr	r0, [pc, #528]	; 181b8 <__assert_fail@plt+0x7100>
   17fa4:	ldr	r1, [fp, #8]
   17fa8:	cmp	r1, r0
   17fac:	blt	17fc4 <__assert_fail@plt+0x6f0c>
   17fb0:	b	17fd8 <__assert_fail@plt+0x6f20>
   17fb4:	ldr	r0, [fp, #8]
   17fb8:	movw	r1, #0
   17fbc:	cmp	r1, r0
   17fc0:	bge	17fd8 <__assert_fail@plt+0x6f20>
   17fc4:	mov	r0, #1
   17fc8:	mvn	r1, #0
   17fcc:	str	r1, [sp, #28]
   17fd0:	str	r0, [sp, #24]
   17fd4:	b	18004 <__assert_fail@plt+0x6f4c>
   17fd8:	ldr	r0, [fp, #8]
   17fdc:	rsb	r0, r0, #0
   17fe0:	asr	r3, r0, #31
   17fe4:	mvn	r1, #0
   17fe8:	str	r0, [sp, #20]
   17fec:	mov	r0, r1
   17ff0:	ldr	r2, [sp, #20]
   17ff4:	bl	1cb38 <__assert_fail@plt+0xba80>
   17ff8:	str	r0, [sp, #28]
   17ffc:	str	r1, [sp, #24]
   18000:	b	18004 <__assert_fail@plt+0x6f4c>
   18004:	ldr	r0, [sp, #24]
   18008:	ldr	r1, [sp, #28]
   1800c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18010:	mvn	r2, r2
   18014:	subs	r1, r2, r1
   18018:	rscs	r0, r0, r2, asr #31
   1801c:	str	r1, [sp, #16]
   18020:	str	r0, [sp, #12]
   18024:	bcs	18160 <__assert_fail@plt+0x70a8>
   18028:	b	18174 <__assert_fail@plt+0x70bc>
   1802c:	b	18030 <__assert_fail@plt+0x6f78>
   18030:	b	18088 <__assert_fail@plt+0x6fd0>
   18034:	b	18088 <__assert_fail@plt+0x6fd0>
   18038:	ldr	r0, [fp, #8]
   1803c:	cmn	r0, #1
   18040:	bne	18088 <__assert_fail@plt+0x6fd0>
   18044:	b	18048 <__assert_fail@plt+0x6f90>
   18048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1804c:	add	r0, r0, #0
   18050:	movw	r1, #0
   18054:	cmp	r1, r0
   18058:	blt	18160 <__assert_fail@plt+0x70a8>
   1805c:	b	18174 <__assert_fail@plt+0x70bc>
   18060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18064:	movw	r1, #0
   18068:	cmp	r1, r0
   1806c:	bge	18174 <__assert_fail@plt+0x70bc>
   18070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18074:	sub	r0, r0, #1
   18078:	mvn	r1, #0
   1807c:	cmp	r1, r0
   18080:	blt	18160 <__assert_fail@plt+0x70a8>
   18084:	b	18174 <__assert_fail@plt+0x70bc>
   18088:	ldr	r0, [fp, #8]
   1808c:	movw	r1, #0
   18090:	sdiv	r0, r1, r0
   18094:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18098:	cmp	r0, r1
   1809c:	blt	18160 <__assert_fail@plt+0x70a8>
   180a0:	b	18174 <__assert_fail@plt+0x70bc>
   180a4:	ldr	r0, [fp, #8]
   180a8:	cmp	r0, #0
   180ac:	bne	180b4 <__assert_fail@plt+0x6ffc>
   180b0:	b	18174 <__assert_fail@plt+0x70bc>
   180b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180b8:	cmp	r0, #0
   180bc:	bge	18128 <__assert_fail@plt+0x7070>
   180c0:	b	180c4 <__assert_fail@plt+0x700c>
   180c4:	b	1810c <__assert_fail@plt+0x7054>
   180c8:	b	1810c <__assert_fail@plt+0x7054>
   180cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180d0:	cmn	r0, #1
   180d4:	bne	1810c <__assert_fail@plt+0x7054>
   180d8:	b	180dc <__assert_fail@plt+0x7024>
   180dc:	ldr	r0, [fp, #8]
   180e0:	add	r0, r0, #0
   180e4:	movw	r1, #0
   180e8:	cmp	r1, r0
   180ec:	blt	18160 <__assert_fail@plt+0x70a8>
   180f0:	b	18174 <__assert_fail@plt+0x70bc>
   180f4:	ldr	r0, [fp, #8]
   180f8:	sub	r0, r0, #1
   180fc:	mvn	r1, #0
   18100:	cmp	r1, r0
   18104:	blt	18160 <__assert_fail@plt+0x70a8>
   18108:	b	18174 <__assert_fail@plt+0x70bc>
   1810c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18110:	movw	r1, #0
   18114:	sdiv	r0, r1, r0
   18118:	ldr	r1, [fp, #8]
   1811c:	cmp	r0, r1
   18120:	blt	18160 <__assert_fail@plt+0x70a8>
   18124:	b	18174 <__assert_fail@plt+0x70bc>
   18128:	ldr	r0, [fp, #8]
   1812c:	asr	r3, r0, #31
   18130:	mvn	r1, #0
   18134:	str	r0, [sp, #8]
   18138:	mov	r0, r1
   1813c:	ldr	r2, [sp, #8]
   18140:	bl	1cb38 <__assert_fail@plt+0xba80>
   18144:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18148:	subs	r0, r0, r2
   1814c:	sbcs	r1, r1, r2, asr #31
   18150:	str	r0, [sp, #4]
   18154:	str	r1, [sp]
   18158:	bcs	18174 <__assert_fail@plt+0x70bc>
   1815c:	b	18160 <__assert_fail@plt+0x70a8>
   18160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18164:	ldr	r1, [fp, #8]
   18168:	mul	r0, r0, r1
   1816c:	str	r0, [fp, #-28]	; 0xffffffe4
   18170:	b	18188 <__assert_fail@plt+0x70d0>
   18174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18178:	ldr	r1, [fp, #8]
   1817c:	mul	r0, r0, r1
   18180:	str	r0, [fp, #-28]	; 0xffffffe4
   18184:	b	1818c <__assert_fail@plt+0x70d4>
   18188:	bl	18364 <__assert_fail@plt+0x72ac>
   1818c:	ldr	r0, [fp, #-4]
   18190:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18194:	bl	15620 <__assert_fail@plt+0x4568>
   18198:	str	r0, [fp, #-4]
   1819c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181a0:	ldr	r1, [fp, #-8]
   181a4:	str	r0, [r1]
   181a8:	ldr	r0, [fp, #-4]
   181ac:	mov	sp, fp
   181b0:	pop	{fp, pc}
   181b4:	svcvc	0x00ffffff
   181b8:	andhi	r0, r0, r1
   181bc:	andhi	r0, r0, r0
   181c0:			; <UNDEFINED> instruction: 0xffff8000
   181c4:	push	{fp, lr}
   181c8:	mov	fp, sp
   181cc:	sub	sp, sp, #8
   181d0:	str	r0, [sp, #4]
   181d4:	ldr	r0, [sp, #4]
   181d8:	movw	r1, #1
   181dc:	bl	181e8 <__assert_fail@plt+0x7130>
   181e0:	mov	sp, fp
   181e4:	pop	{fp, pc}
   181e8:	push	{fp, lr}
   181ec:	mov	fp, sp
   181f0:	sub	sp, sp, #8
   181f4:	str	r0, [sp, #4]
   181f8:	str	r1, [sp]
   181fc:	ldr	r0, [sp, #4]
   18200:	ldr	r1, [sp]
   18204:	bl	1a844 <__assert_fail@plt+0x978c>
   18208:	bl	155ac <__assert_fail@plt+0x44f4>
   1820c:	mov	sp, fp
   18210:	pop	{fp, pc}
   18214:	push	{fp, lr}
   18218:	mov	fp, sp
   1821c:	sub	sp, sp, #8
   18220:	str	r0, [sp, #4]
   18224:	ldr	r0, [sp, #4]
   18228:	movw	r1, #1
   1822c:	bl	18238 <__assert_fail@plt+0x7180>
   18230:	mov	sp, fp
   18234:	pop	{fp, pc}
   18238:	push	{fp, lr}
   1823c:	mov	fp, sp
   18240:	sub	sp, sp, #8
   18244:	str	r0, [sp, #4]
   18248:	str	r1, [sp]
   1824c:	ldr	r0, [sp, #4]
   18250:	ldr	r1, [sp]
   18254:	bl	1ac80 <__assert_fail@plt+0x9bc8>
   18258:	bl	155ac <__assert_fail@plt+0x44f4>
   1825c:	mov	sp, fp
   18260:	pop	{fp, pc}
   18264:	push	{fp, lr}
   18268:	mov	fp, sp
   1826c:	sub	sp, sp, #16
   18270:	str	r0, [fp, #-4]
   18274:	str	r1, [sp, #8]
   18278:	ldr	r0, [sp, #8]
   1827c:	bl	15588 <__assert_fail@plt+0x44d0>
   18280:	ldr	r1, [fp, #-4]
   18284:	ldr	r2, [sp, #8]
   18288:	str	r0, [sp, #4]
   1828c:	bl	10ec0 <memcpy@plt>
   18290:	ldr	r0, [sp, #4]
   18294:	mov	sp, fp
   18298:	pop	{fp, pc}
   1829c:	push	{fp, lr}
   182a0:	mov	fp, sp
   182a4:	sub	sp, sp, #16
   182a8:	str	r0, [fp, #-4]
   182ac:	str	r1, [sp, #8]
   182b0:	ldr	r0, [sp, #8]
   182b4:	bl	155dc <__assert_fail@plt+0x4524>
   182b8:	ldr	r1, [fp, #-4]
   182bc:	ldr	r2, [sp, #8]
   182c0:	str	r0, [sp, #4]
   182c4:	bl	10ec0 <memcpy@plt>
   182c8:	ldr	r0, [sp, #4]
   182cc:	mov	sp, fp
   182d0:	pop	{fp, pc}
   182d4:	push	{fp, lr}
   182d8:	mov	fp, sp
   182dc:	sub	sp, sp, #16
   182e0:	str	r0, [fp, #-4]
   182e4:	str	r1, [sp, #8]
   182e8:	ldr	r0, [sp, #8]
   182ec:	add	r0, r0, #1
   182f0:	bl	155dc <__assert_fail@plt+0x4524>
   182f4:	str	r0, [sp, #4]
   182f8:	ldr	r0, [sp, #4]
   182fc:	ldr	r1, [sp, #8]
   18300:	add	r0, r0, r1
   18304:	movw	r1, #0
   18308:	strb	r1, [r0]
   1830c:	ldr	r0, [sp, #4]
   18310:	ldr	r1, [fp, #-4]
   18314:	ldr	r2, [sp, #8]
   18318:	str	r0, [sp]
   1831c:	bl	10ec0 <memcpy@plt>
   18320:	ldr	r0, [sp]
   18324:	mov	sp, fp
   18328:	pop	{fp, pc}
   1832c:	push	{fp, lr}
   18330:	mov	fp, sp
   18334:	sub	sp, sp, #8
   18338:	str	r0, [sp, #4]
   1833c:	ldr	r0, [sp, #4]
   18340:	ldr	r1, [sp, #4]
   18344:	str	r0, [sp]
   18348:	mov	r0, r1
   1834c:	bl	10fc8 <strlen@plt>
   18350:	add	r1, r0, #1
   18354:	ldr	r0, [sp]
   18358:	bl	18264 <__assert_fail@plt+0x71ac>
   1835c:	mov	sp, fp
   18360:	pop	{fp, pc}
   18364:	push	{fp, lr}
   18368:	mov	fp, sp
   1836c:	sub	sp, sp, #8
   18370:	movw	r0, #57584	; 0xe0f0
   18374:	movt	r0, #2
   18378:	ldr	r0, [r0]
   1837c:	movw	r1, #54744	; 0xd5d8
   18380:	movt	r1, #1
   18384:	str	r0, [sp, #4]
   18388:	mov	r0, r1
   1838c:	bl	10fbc <gettext@plt>
   18390:	ldr	r1, [sp, #4]
   18394:	str	r0, [sp]
   18398:	mov	r0, r1
   1839c:	movw	r1, #0
   183a0:	movw	r2, #53691	; 0xd1bb
   183a4:	movt	r2, #1
   183a8:	ldr	r3, [sp]
   183ac:	bl	10f5c <error@plt>
   183b0:	bl	110a0 <abort@plt>
   183b4:	push	{r4, r5, r6, sl, fp, lr}
   183b8:	add	fp, sp, #16
   183bc:	sub	sp, sp, #112	; 0x70
   183c0:	ldr	ip, [fp, #12]
   183c4:	ldr	lr, [fp, #8]
   183c8:	ldr	r4, [fp, #24]
   183cc:	ldr	r5, [fp, #20]
   183d0:	ldr	r6, [fp, #16]
   183d4:	str	r0, [fp, #-20]	; 0xffffffec
   183d8:	str	r1, [fp, #-24]	; 0xffffffe8
   183dc:	str	r3, [fp, #-28]	; 0xffffffe4
   183e0:	str	r2, [fp, #-32]	; 0xffffffe0
   183e4:	str	ip, [fp, #-36]	; 0xffffffdc
   183e8:	str	lr, [fp, #-40]	; 0xffffffd8
   183ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   183f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   183f4:	ldr	r1, [fp, #16]
   183f8:	movw	r3, #0
   183fc:	str	r1, [fp, #-60]	; 0xffffffc4
   18400:	mov	r1, r3
   18404:	sub	r3, fp, #56	; 0x38
   18408:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1840c:	str	ip, [sp]
   18410:	str	r5, [sp, #64]	; 0x40
   18414:	str	r4, [sp, #60]	; 0x3c
   18418:	str	r6, [sp, #56]	; 0x38
   1841c:	bl	18644 <__assert_fail@plt+0x758c>
   18420:	str	r0, [fp, #-44]	; 0xffffffd4
   18424:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18428:	cmp	r0, #0
   1842c:	bne	184cc <__assert_fail@plt+0x7414>
   18430:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18434:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18438:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1843c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18440:	subs	r0, r0, r2
   18444:	sbcs	r1, r1, r3
   18448:	str	r0, [sp, #52]	; 0x34
   1844c:	str	r1, [sp, #48]	; 0x30
   18450:	bcc	18480 <__assert_fail@plt+0x73c8>
   18454:	b	18458 <__assert_fail@plt+0x73a0>
   18458:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1845c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18460:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18464:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18468:	subs	r0, r0, r2
   1846c:	sbcs	r1, r1, r3
   18470:	str	r0, [sp, #44]	; 0x2c
   18474:	str	r1, [sp, #40]	; 0x28
   18478:	bcs	184c8 <__assert_fail@plt+0x7410>
   1847c:	b	18480 <__assert_fail@plt+0x73c8>
   18480:	mov	r0, #1
   18484:	str	r0, [fp, #-44]	; 0xffffffd4
   18488:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1848c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18490:	subs	r0, r0, #1073741824	; 0x40000000
   18494:	sbcs	r1, r1, #0
   18498:	str	r0, [sp, #36]	; 0x24
   1849c:	str	r1, [sp, #32]
   184a0:	bcc	184b8 <__assert_fail@plt+0x7400>
   184a4:	b	184a8 <__assert_fail@plt+0x73f0>
   184a8:	bl	10fec <__errno_location@plt>
   184ac:	movw	lr, #75	; 0x4b
   184b0:	str	lr, [r0]
   184b4:	b	184c4 <__assert_fail@plt+0x740c>
   184b8:	bl	10fec <__errno_location@plt>
   184bc:	movw	lr, #34	; 0x22
   184c0:	str	lr, [r0]
   184c4:	b	184c8 <__assert_fail@plt+0x7410>
   184c8:	b	18508 <__assert_fail@plt+0x7450>
   184cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   184d0:	cmp	r0, #1
   184d4:	bne	184e8 <__assert_fail@plt+0x7430>
   184d8:	bl	10fec <__errno_location@plt>
   184dc:	movw	lr, #75	; 0x4b
   184e0:	str	lr, [r0]
   184e4:	b	18504 <__assert_fail@plt+0x744c>
   184e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   184ec:	cmp	r0, #3
   184f0:	bne	18500 <__assert_fail@plt+0x7448>
   184f4:	bl	10fec <__errno_location@plt>
   184f8:	movw	lr, #0
   184fc:	str	lr, [r0]
   18500:	b	18504 <__assert_fail@plt+0x744c>
   18504:	b	18508 <__assert_fail@plt+0x7450>
   18508:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1850c:	cmp	r0, #0
   18510:	beq	185ac <__assert_fail@plt+0x74f4>
   18514:	ldr	r0, [fp, #24]
   18518:	cmp	r0, #0
   1851c:	beq	1852c <__assert_fail@plt+0x7474>
   18520:	ldr	r0, [fp, #24]
   18524:	str	r0, [sp, #28]
   18528:	b	18538 <__assert_fail@plt+0x7480>
   1852c:	movw	r0, #1
   18530:	str	r0, [sp, #28]
   18534:	b	18538 <__assert_fail@plt+0x7480>
   18538:	ldr	r0, [sp, #28]
   1853c:	str	r0, [sp, #24]
   18540:	bl	10fec <__errno_location@plt>
   18544:	ldr	r0, [r0]
   18548:	cmp	r0, #22
   1854c:	bne	1855c <__assert_fail@plt+0x74a4>
   18550:	movw	r0, #0
   18554:	str	r0, [sp, #20]
   18558:	b	18568 <__assert_fail@plt+0x74b0>
   1855c:	bl	10fec <__errno_location@plt>
   18560:	ldr	r0, [r0]
   18564:	str	r0, [sp, #20]
   18568:	ldr	r0, [sp, #20]
   1856c:	ldr	r3, [fp, #20]
   18570:	ldr	r1, [fp, #-20]	; 0xffffffec
   18574:	str	r0, [sp, #16]
   18578:	mov	r0, r1
   1857c:	str	r3, [sp, #12]
   18580:	bl	14b3c <__assert_fail@plt+0x3a84>
   18584:	ldr	r1, [sp, #24]
   18588:	str	r0, [sp, #8]
   1858c:	mov	r0, r1
   18590:	ldr	r1, [sp, #16]
   18594:	movw	r2, #53687	; 0xd1b7
   18598:	movt	r2, #1
   1859c:	ldr	r3, [sp, #12]
   185a0:	ldr	lr, [sp, #8]
   185a4:	str	lr, [sp]
   185a8:	bl	10f5c <error@plt>
   185ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   185b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   185b4:	sub	sp, fp, #16
   185b8:	pop	{r4, r5, r6, sl, fp, pc}
   185bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   185c0:	add	fp, sp, #24
   185c4:	sub	sp, sp, #56	; 0x38
   185c8:	ldr	r1, [fp, #12]
   185cc:	ldr	ip, [fp, #8]
   185d0:	ldr	lr, [fp, #24]
   185d4:	ldr	r4, [fp, #20]
   185d8:	ldr	r5, [fp, #16]
   185dc:	str	r0, [fp, #-28]	; 0xffffffe4
   185e0:	str	r3, [sp, #44]	; 0x2c
   185e4:	str	r2, [sp, #40]	; 0x28
   185e8:	str	r1, [sp, #36]	; 0x24
   185ec:	str	ip, [sp, #32]
   185f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   185f4:	ldr	r2, [sp, #40]	; 0x28
   185f8:	ldr	r3, [sp, #44]	; 0x2c
   185fc:	ldr	r1, [sp, #32]
   18600:	ldr	ip, [sp, #36]	; 0x24
   18604:	ldr	r6, [fp, #16]
   18608:	ldr	r7, [fp, #20]
   1860c:	ldr	r8, [fp, #24]
   18610:	mov	r9, sp
   18614:	str	r8, [r9, #16]
   18618:	str	r7, [r9, #12]
   1861c:	str	r6, [r9, #8]
   18620:	str	ip, [r9, #4]
   18624:	str	r1, [r9]
   18628:	mov	r1, #10
   1862c:	str	lr, [sp, #28]
   18630:	str	r4, [sp, #24]
   18634:	str	r5, [sp, #20]
   18638:	bl	183b4 <__assert_fail@plt+0x72fc>
   1863c:	sub	sp, fp, #24
   18640:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18644:	push	{fp, lr}
   18648:	mov	fp, sp
   1864c:	sub	sp, sp, #88	; 0x58
   18650:	ldr	ip, [fp, #8]
   18654:	str	r0, [fp, #-8]
   18658:	str	r1, [fp, #-12]
   1865c:	str	r2, [fp, #-16]
   18660:	str	r3, [fp, #-20]	; 0xffffffec
   18664:	movw	r0, #0
   18668:	str	r0, [sp, #44]	; 0x2c
   1866c:	ldr	r1, [fp, #-16]
   18670:	cmp	r0, r1
   18674:	str	ip, [sp, #20]
   18678:	bgt	1868c <__assert_fail@plt+0x75d4>
   1867c:	ldr	r0, [fp, #-16]
   18680:	cmp	r0, #36	; 0x24
   18684:	bgt	1868c <__assert_fail@plt+0x75d4>
   18688:	b	186ac <__assert_fail@plt+0x75f4>
   1868c:	movw	r0, #54761	; 0xd5e9
   18690:	movt	r0, #1
   18694:	movw	r1, #54799	; 0xd60f
   18698:	movt	r1, #1
   1869c:	movw	r2, #85	; 0x55
   186a0:	movw	r3, #54815	; 0xd61f
   186a4:	movt	r3, #1
   186a8:	bl	110b8 <__assert_fail@plt>
   186ac:	ldr	r0, [fp, #-12]
   186b0:	movw	r1, #0
   186b4:	cmp	r0, r1
   186b8:	beq	186c8 <__assert_fail@plt+0x7610>
   186bc:	ldr	r0, [fp, #-12]
   186c0:	str	r0, [sp, #16]
   186c4:	b	186d4 <__assert_fail@plt+0x761c>
   186c8:	sub	r0, fp, #24
   186cc:	str	r0, [sp, #16]
   186d0:	b	186d4 <__assert_fail@plt+0x761c>
   186d4:	ldr	r0, [sp, #16]
   186d8:	str	r0, [fp, #-28]	; 0xffffffe4
   186dc:	bl	10fec <__errno_location@plt>
   186e0:	movw	lr, #0
   186e4:	str	lr, [r0]
   186e8:	ldr	r0, [fp, #-8]
   186ec:	str	r0, [sp, #40]	; 0x28
   186f0:	ldr	r0, [sp, #40]	; 0x28
   186f4:	ldrb	r0, [r0]
   186f8:	strb	r0, [sp, #39]	; 0x27
   186fc:	bl	10fa4 <__ctype_b_loc@plt>
   18700:	ldr	r0, [r0]
   18704:	ldrb	lr, [sp, #39]	; 0x27
   18708:	mov	r1, lr
   1870c:	add	r0, r0, lr, lsl #1
   18710:	ldrh	r0, [r0]
   18714:	and	r0, r0, #8192	; 0x2000
   18718:	cmp	r0, #0
   1871c:	str	r1, [sp, #12]
   18720:	beq	1873c <__assert_fail@plt+0x7684>
   18724:	ldr	r0, [sp, #40]	; 0x28
   18728:	add	r1, r0, #1
   1872c:	str	r1, [sp, #40]	; 0x28
   18730:	ldrb	r0, [r0, #1]
   18734:	strb	r0, [sp, #39]	; 0x27
   18738:	b	186fc <__assert_fail@plt+0x7644>
   1873c:	ldrb	r0, [sp, #39]	; 0x27
   18740:	cmp	r0, #45	; 0x2d
   18744:	bne	18754 <__assert_fail@plt+0x769c>
   18748:	movw	r0, #4
   1874c:	str	r0, [fp, #-4]
   18750:	b	18cd0 <__assert_fail@plt+0x7c18>
   18754:	ldr	r0, [fp, #-8]
   18758:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1875c:	ldr	r2, [fp, #-16]
   18760:	bl	1101c <strtoumax@plt>
   18764:	str	r1, [fp, #-36]	; 0xffffffdc
   18768:	str	r0, [fp, #-40]	; 0xffffffd8
   1876c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18770:	ldr	r0, [r0]
   18774:	ldr	r1, [fp, #-8]
   18778:	cmp	r0, r1
   1877c:	bne	187e8 <__assert_fail@plt+0x7730>
   18780:	ldr	r0, [fp, #8]
   18784:	movw	r1, #0
   18788:	cmp	r0, r1
   1878c:	beq	187d8 <__assert_fail@plt+0x7720>
   18790:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18794:	ldr	r0, [r0]
   18798:	ldrb	r0, [r0]
   1879c:	cmp	r0, #0
   187a0:	beq	187d8 <__assert_fail@plt+0x7720>
   187a4:	ldr	r0, [fp, #8]
   187a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   187ac:	ldr	r1, [r1]
   187b0:	ldrb	r1, [r1]
   187b4:	bl	10fd4 <strchr@plt>
   187b8:	movw	r1, #0
   187bc:	cmp	r0, r1
   187c0:	beq	187d8 <__assert_fail@plt+0x7720>
   187c4:	mov	r0, #0
   187c8:	str	r0, [fp, #-36]	; 0xffffffdc
   187cc:	mov	r0, #1
   187d0:	str	r0, [fp, #-40]	; 0xffffffd8
   187d4:	b	187e4 <__assert_fail@plt+0x772c>
   187d8:	movw	r0, #4
   187dc:	str	r0, [fp, #-4]
   187e0:	b	18cd0 <__assert_fail@plt+0x7c18>
   187e4:	b	18820 <__assert_fail@plt+0x7768>
   187e8:	bl	10fec <__errno_location@plt>
   187ec:	ldr	r0, [r0]
   187f0:	cmp	r0, #0
   187f4:	beq	1881c <__assert_fail@plt+0x7764>
   187f8:	bl	10fec <__errno_location@plt>
   187fc:	ldr	r0, [r0]
   18800:	cmp	r0, #34	; 0x22
   18804:	beq	18814 <__assert_fail@plt+0x775c>
   18808:	movw	r0, #4
   1880c:	str	r0, [fp, #-4]
   18810:	b	18cd0 <__assert_fail@plt+0x7c18>
   18814:	movw	r0, #1
   18818:	str	r0, [sp, #44]	; 0x2c
   1881c:	b	18820 <__assert_fail@plt+0x7768>
   18820:	ldr	r0, [fp, #8]
   18824:	movw	r1, #0
   18828:	cmp	r0, r1
   1882c:	bne	18850 <__assert_fail@plt+0x7798>
   18830:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18834:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18838:	ldr	r2, [fp, #-20]	; 0xffffffec
   1883c:	str	r1, [r2, #4]
   18840:	str	r0, [r2]
   18844:	ldr	r0, [sp, #44]	; 0x2c
   18848:	str	r0, [fp, #-4]
   1884c:	b	18cd0 <__assert_fail@plt+0x7c18>
   18850:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18854:	ldr	r0, [r0]
   18858:	ldrb	r0, [r0]
   1885c:	cmp	r0, #0
   18860:	beq	18cb4 <__assert_fail@plt+0x7bfc>
   18864:	movw	r0, #1024	; 0x400
   18868:	str	r0, [sp, #32]
   1886c:	movw	r0, #1
   18870:	str	r0, [sp, #28]
   18874:	ldr	r0, [fp, #8]
   18878:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1887c:	ldr	r1, [r1]
   18880:	ldrb	r1, [r1]
   18884:	bl	10fd4 <strchr@plt>
   18888:	movw	r1, #0
   1888c:	cmp	r0, r1
   18890:	bne	188b8 <__assert_fail@plt+0x7800>
   18894:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18898:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1889c:	ldr	r2, [fp, #-20]	; 0xffffffec
   188a0:	str	r1, [r2, #4]
   188a4:	str	r0, [r2]
   188a8:	ldr	r0, [sp, #44]	; 0x2c
   188ac:	orr	r0, r0, #2
   188b0:	str	r0, [fp, #-4]
   188b4:	b	18cd0 <__assert_fail@plt+0x7c18>
   188b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   188bc:	ldr	r0, [r0]
   188c0:	ldrb	r0, [r0]
   188c4:	sub	r0, r0, #69	; 0x45
   188c8:	cmp	r0, #47	; 0x2f
   188cc:	str	r0, [sp, #8]
   188d0:	bhi	18a3c <__assert_fail@plt+0x7984>
   188d4:	add	r0, pc, #8
   188d8:	ldr	r1, [sp, #8]
   188dc:	ldr	r0, [r0, r1, lsl #2]
   188e0:	mov	pc, r0
   188e4:	andeq	r8, r1, r4, lsr #19
   188e8:	andeq	r8, r1, ip, lsr sl
   188ec:	andeq	r8, r1, r4, lsr #19
   188f0:	andeq	r8, r1, ip, lsr sl
   188f4:	andeq	r8, r1, ip, lsr sl
   188f8:	andeq	r8, r1, ip, lsr sl
   188fc:	andeq	r8, r1, r4, lsr #19
   18900:	andeq	r8, r1, ip, lsr sl
   18904:	andeq	r8, r1, r4, lsr #19
   18908:	andeq	r8, r1, ip, lsr sl
   1890c:	andeq	r8, r1, ip, lsr sl
   18910:	andeq	r8, r1, r4, lsr #19
   18914:	andeq	r8, r1, ip, lsr sl
   18918:	andeq	r8, r1, ip, lsr sl
   1891c:	andeq	r8, r1, ip, lsr sl
   18920:	andeq	r8, r1, r4, lsr #19
   18924:	andeq	r8, r1, ip, lsr sl
   18928:	andeq	r8, r1, ip, lsr sl
   1892c:	andeq	r8, r1, ip, lsr sl
   18930:	andeq	r8, r1, ip, lsr sl
   18934:	andeq	r8, r1, r4, lsr #19
   18938:	andeq	r8, r1, r4, lsr #19
   1893c:	andeq	r8, r1, ip, lsr sl
   18940:	andeq	r8, r1, ip, lsr sl
   18944:	andeq	r8, r1, ip, lsr sl
   18948:	andeq	r8, r1, ip, lsr sl
   1894c:	andeq	r8, r1, ip, lsr sl
   18950:	andeq	r8, r1, ip, lsr sl
   18954:	andeq	r8, r1, ip, lsr sl
   18958:	andeq	r8, r1, ip, lsr sl
   1895c:	andeq	r8, r1, ip, lsr sl
   18960:	andeq	r8, r1, ip, lsr sl
   18964:	andeq	r8, r1, ip, lsr sl
   18968:	andeq	r8, r1, ip, lsr sl
   1896c:	andeq	r8, r1, r4, lsr #19
   18970:	andeq	r8, r1, ip, lsr sl
   18974:	andeq	r8, r1, ip, lsr sl
   18978:	andeq	r8, r1, ip, lsr sl
   1897c:	andeq	r8, r1, r4, lsr #19
   18980:	andeq	r8, r1, ip, lsr sl
   18984:	andeq	r8, r1, r4, lsr #19
   18988:	andeq	r8, r1, ip, lsr sl
   1898c:	andeq	r8, r1, ip, lsr sl
   18990:	andeq	r8, r1, ip, lsr sl
   18994:	andeq	r8, r1, ip, lsr sl
   18998:	andeq	r8, r1, ip, lsr sl
   1899c:	andeq	r8, r1, ip, lsr sl
   189a0:	andeq	r8, r1, r4, lsr #19
   189a4:	ldr	r0, [fp, #8]
   189a8:	movw	r1, #48	; 0x30
   189ac:	bl	10fd4 <strchr@plt>
   189b0:	movw	r1, #0
   189b4:	cmp	r0, r1
   189b8:	beq	18a38 <__assert_fail@plt+0x7980>
   189bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   189c0:	ldr	r0, [r0]
   189c4:	ldrb	r0, [r0, #1]
   189c8:	mov	r1, r0
   189cc:	cmp	r0, #66	; 0x42
   189d0:	str	r1, [sp, #4]
   189d4:	beq	18a20 <__assert_fail@plt+0x7968>
   189d8:	b	189dc <__assert_fail@plt+0x7924>
   189dc:	ldr	r0, [sp, #4]
   189e0:	cmp	r0, #68	; 0x44
   189e4:	beq	18a20 <__assert_fail@plt+0x7968>
   189e8:	b	189ec <__assert_fail@plt+0x7934>
   189ec:	ldr	r0, [sp, #4]
   189f0:	cmp	r0, #105	; 0x69
   189f4:	bne	18a34 <__assert_fail@plt+0x797c>
   189f8:	b	189fc <__assert_fail@plt+0x7944>
   189fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18a00:	ldr	r0, [r0]
   18a04:	ldrb	r0, [r0, #2]
   18a08:	cmp	r0, #66	; 0x42
   18a0c:	bne	18a1c <__assert_fail@plt+0x7964>
   18a10:	ldr	r0, [sp, #28]
   18a14:	add	r0, r0, #2
   18a18:	str	r0, [sp, #28]
   18a1c:	b	18a34 <__assert_fail@plt+0x797c>
   18a20:	movw	r0, #1000	; 0x3e8
   18a24:	str	r0, [sp, #32]
   18a28:	ldr	r0, [sp, #28]
   18a2c:	add	r0, r0, #1
   18a30:	str	r0, [sp, #28]
   18a34:	b	18a38 <__assert_fail@plt+0x7980>
   18a38:	b	18a3c <__assert_fail@plt+0x7984>
   18a3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18a40:	ldr	r0, [r0]
   18a44:	ldrb	r0, [r0]
   18a48:	sub	r0, r0, #66	; 0x42
   18a4c:	cmp	r0, #53	; 0x35
   18a50:	str	r0, [sp]
   18a54:	bhi	18c48 <__assert_fail@plt+0x7b90>
   18a58:	add	r0, pc, #8
   18a5c:	ldr	r1, [sp]
   18a60:	ldr	r0, [r0, r1, lsl #2]
   18a64:	mov	pc, r0
   18a68:	andeq	r8, r1, r4, asr fp
   18a6c:	andeq	r8, r1, r8, asr #24
   18a70:	andeq	r8, r1, r8, asr #24
   18a74:	andeq	r8, r1, r4, ror fp
   18a78:	andeq	r8, r1, r8, asr #24
   18a7c:	andeq	r8, r1, ip, lsl #23
   18a80:	andeq	r8, r1, r8, asr #24
   18a84:	andeq	r8, r1, r8, asr #24
   18a88:	andeq	r8, r1, r8, asr #24
   18a8c:	andeq	r8, r1, r4, lsr #23
   18a90:	andeq	r8, r1, r8, asr #24
   18a94:			; <UNDEFINED> instruction: 0x00018bbc
   18a98:	andeq	r8, r1, r8, asr #24
   18a9c:	andeq	r8, r1, r8, asr #24
   18aa0:	ldrdeq	r8, [r1], -r4
   18aa4:	andeq	r8, r1, r8, asr #24
   18aa8:	andeq	r8, r1, r8, asr #24
   18aac:	andeq	r8, r1, r8, asr #24
   18ab0:	andeq	r8, r1, ip, ror #23
   18ab4:	andeq	r8, r1, r8, asr #24
   18ab8:	andeq	r8, r1, r8, asr #24
   18abc:	andeq	r8, r1, r8, asr #24
   18ac0:	andeq	r8, r1, r8, asr #24
   18ac4:	andeq	r8, r1, r8, lsl ip
   18ac8:	andeq	r8, r1, r0, lsr ip
   18acc:	andeq	r8, r1, r8, asr #24
   18ad0:	andeq	r8, r1, r8, asr #24
   18ad4:	andeq	r8, r1, r8, asr #24
   18ad8:	andeq	r8, r1, r8, asr #24
   18adc:	andeq	r8, r1, r8, asr #24
   18ae0:	andeq	r8, r1, r8, asr #24
   18ae4:	andeq	r8, r1, r8, asr #24
   18ae8:	andeq	r8, r1, r0, asr #22
   18aec:	andeq	r8, r1, r8, ror #22
   18af0:	andeq	r8, r1, r8, asr #24
   18af4:	andeq	r8, r1, r8, asr #24
   18af8:	andeq	r8, r1, r8, asr #24
   18afc:	andeq	r8, r1, ip, lsl #23
   18b00:	andeq	r8, r1, r8, asr #24
   18b04:	andeq	r8, r1, r8, asr #24
   18b08:	andeq	r8, r1, r8, asr #24
   18b0c:	andeq	r8, r1, r4, lsr #23
   18b10:	andeq	r8, r1, r8, asr #24
   18b14:			; <UNDEFINED> instruction: 0x00018bbc
   18b18:	andeq	r8, r1, r8, asr #24
   18b1c:	andeq	r8, r1, r8, asr #24
   18b20:	andeq	r8, r1, r8, asr #24
   18b24:	andeq	r8, r1, r8, asr #24
   18b28:	andeq	r8, r1, r8, asr #24
   18b2c:	andeq	r8, r1, r8, asr #24
   18b30:	andeq	r8, r1, ip, ror #23
   18b34:	andeq	r8, r1, r8, asr #24
   18b38:	andeq	r8, r1, r8, asr #24
   18b3c:	andeq	r8, r1, r4, lsl #24
   18b40:	sub	r0, fp, #40	; 0x28
   18b44:	movw	r1, #512	; 0x200
   18b48:	bl	18cdc <__assert_fail@plt+0x7c24>
   18b4c:	str	r0, [sp, #24]
   18b50:	b	18c6c <__assert_fail@plt+0x7bb4>
   18b54:	sub	r0, fp, #40	; 0x28
   18b58:	movw	r1, #1024	; 0x400
   18b5c:	bl	18cdc <__assert_fail@plt+0x7c24>
   18b60:	str	r0, [sp, #24]
   18b64:	b	18c6c <__assert_fail@plt+0x7bb4>
   18b68:	movw	r0, #0
   18b6c:	str	r0, [sp, #24]
   18b70:	b	18c6c <__assert_fail@plt+0x7bb4>
   18b74:	ldr	r1, [sp, #32]
   18b78:	sub	r0, fp, #40	; 0x28
   18b7c:	movw	r2, #6
   18b80:	bl	1a7e4 <__assert_fail@plt+0x972c>
   18b84:	str	r0, [sp, #24]
   18b88:	b	18c6c <__assert_fail@plt+0x7bb4>
   18b8c:	ldr	r1, [sp, #32]
   18b90:	sub	r0, fp, #40	; 0x28
   18b94:	movw	r2, #3
   18b98:	bl	1a7e4 <__assert_fail@plt+0x972c>
   18b9c:	str	r0, [sp, #24]
   18ba0:	b	18c6c <__assert_fail@plt+0x7bb4>
   18ba4:	ldr	r1, [sp, #32]
   18ba8:	sub	r0, fp, #40	; 0x28
   18bac:	movw	r2, #1
   18bb0:	bl	1a7e4 <__assert_fail@plt+0x972c>
   18bb4:	str	r0, [sp, #24]
   18bb8:	b	18c6c <__assert_fail@plt+0x7bb4>
   18bbc:	ldr	r1, [sp, #32]
   18bc0:	sub	r0, fp, #40	; 0x28
   18bc4:	movw	r2, #2
   18bc8:	bl	1a7e4 <__assert_fail@plt+0x972c>
   18bcc:	str	r0, [sp, #24]
   18bd0:	b	18c6c <__assert_fail@plt+0x7bb4>
   18bd4:	ldr	r1, [sp, #32]
   18bd8:	sub	r0, fp, #40	; 0x28
   18bdc:	movw	r2, #5
   18be0:	bl	1a7e4 <__assert_fail@plt+0x972c>
   18be4:	str	r0, [sp, #24]
   18be8:	b	18c6c <__assert_fail@plt+0x7bb4>
   18bec:	ldr	r1, [sp, #32]
   18bf0:	sub	r0, fp, #40	; 0x28
   18bf4:	movw	r2, #4
   18bf8:	bl	1a7e4 <__assert_fail@plt+0x972c>
   18bfc:	str	r0, [sp, #24]
   18c00:	b	18c6c <__assert_fail@plt+0x7bb4>
   18c04:	sub	r0, fp, #40	; 0x28
   18c08:	movw	r1, #2
   18c0c:	bl	18cdc <__assert_fail@plt+0x7c24>
   18c10:	str	r0, [sp, #24]
   18c14:	b	18c6c <__assert_fail@plt+0x7bb4>
   18c18:	ldr	r1, [sp, #32]
   18c1c:	sub	r0, fp, #40	; 0x28
   18c20:	movw	r2, #8
   18c24:	bl	1a7e4 <__assert_fail@plt+0x972c>
   18c28:	str	r0, [sp, #24]
   18c2c:	b	18c6c <__assert_fail@plt+0x7bb4>
   18c30:	ldr	r1, [sp, #32]
   18c34:	sub	r0, fp, #40	; 0x28
   18c38:	movw	r2, #7
   18c3c:	bl	1a7e4 <__assert_fail@plt+0x972c>
   18c40:	str	r0, [sp, #24]
   18c44:	b	18c6c <__assert_fail@plt+0x7bb4>
   18c48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18c50:	ldr	r2, [fp, #-20]	; 0xffffffec
   18c54:	str	r1, [r2, #4]
   18c58:	str	r0, [r2]
   18c5c:	ldr	r0, [sp, #44]	; 0x2c
   18c60:	orr	r0, r0, #2
   18c64:	str	r0, [fp, #-4]
   18c68:	b	18cd0 <__assert_fail@plt+0x7c18>
   18c6c:	ldr	r0, [sp, #24]
   18c70:	ldr	r1, [sp, #44]	; 0x2c
   18c74:	orr	r0, r1, r0
   18c78:	str	r0, [sp, #44]	; 0x2c
   18c7c:	ldr	r0, [sp, #28]
   18c80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18c84:	ldr	r2, [r1]
   18c88:	add	r0, r2, r0
   18c8c:	str	r0, [r1]
   18c90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18c94:	ldr	r0, [r0]
   18c98:	ldrsb	r0, [r0]
   18c9c:	cmp	r0, #0
   18ca0:	beq	18cb0 <__assert_fail@plt+0x7bf8>
   18ca4:	ldr	r0, [sp, #44]	; 0x2c
   18ca8:	orr	r0, r0, #2
   18cac:	str	r0, [sp, #44]	; 0x2c
   18cb0:	b	18cb4 <__assert_fail@plt+0x7bfc>
   18cb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18cb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18cbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   18cc0:	str	r1, [r2, #4]
   18cc4:	str	r0, [r2]
   18cc8:	ldr	r0, [sp, #44]	; 0x2c
   18ccc:	str	r0, [fp, #-4]
   18cd0:	ldr	r0, [fp, #-4]
   18cd4:	mov	sp, fp
   18cd8:	pop	{fp, pc}
   18cdc:	push	{fp, lr}
   18ce0:	mov	fp, sp
   18ce4:	sub	sp, sp, #568	; 0x238
   18ce8:	str	r0, [fp, #-8]
   18cec:	str	r1, [fp, #-12]
   18cf0:	b	19224 <__assert_fail@plt+0x816c>
   18cf4:	b	18f98 <__assert_fail@plt+0x7ee0>
   18cf8:	ldr	r0, [fp, #-12]
   18cfc:	cmp	r0, #0
   18d00:	bge	18e78 <__assert_fail@plt+0x7dc0>
   18d04:	mov	r0, #1
   18d08:	cmp	r0, #0
   18d0c:	bne	18dc4 <__assert_fail@plt+0x7d0c>
   18d10:	b	18d14 <__assert_fail@plt+0x7c5c>
   18d14:	b	18d18 <__assert_fail@plt+0x7c60>
   18d18:	ldr	r0, [fp, #-8]
   18d1c:	ldr	r1, [r0]
   18d20:	ldr	r0, [r0, #4]
   18d24:	ldr	r2, [fp, #-12]
   18d28:	mov	r3, #127	; 0x7f
   18d2c:	sdiv	r2, r3, r2
   18d30:	subs	r1, r1, r2
   18d34:	sbcs	r0, r0, r2, asr #31
   18d38:	str	r1, [fp, #-28]	; 0xffffffe4
   18d3c:	str	r0, [fp, #-32]	; 0xffffffe0
   18d40:	bcc	18f50 <__assert_fail@plt+0x7e98>
   18d44:	b	18f74 <__assert_fail@plt+0x7ebc>
   18d48:	b	18d4c <__assert_fail@plt+0x7c94>
   18d4c:	ldr	r0, [pc, #4088]	; 19d4c <__assert_fail@plt+0x8c94>
   18d50:	ldr	r1, [fp, #-12]
   18d54:	cmp	r1, r0
   18d58:	blt	18d70 <__assert_fail@plt+0x7cb8>
   18d5c:	b	18d7c <__assert_fail@plt+0x7cc4>
   18d60:	ldr	r0, [fp, #-12]
   18d64:	movw	r1, #0
   18d68:	cmp	r1, r0
   18d6c:	bge	18d7c <__assert_fail@plt+0x7cc4>
   18d70:	movw	r0, #0
   18d74:	str	r0, [fp, #-36]	; 0xffffffdc
   18d78:	b	18d94 <__assert_fail@plt+0x7cdc>
   18d7c:	ldr	r0, [fp, #-12]
   18d80:	movw	r1, #0
   18d84:	sub	r0, r1, r0
   18d88:	movw	r1, #127	; 0x7f
   18d8c:	sdiv	r0, r1, r0
   18d90:	str	r0, [fp, #-36]	; 0xffffffdc
   18d94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18d98:	ldr	r1, [fp, #-8]
   18d9c:	ldr	r2, [r1]
   18da0:	ldr	r1, [r1, #4]
   18da4:	mvn	r1, r1
   18da8:	mvn	r2, r2
   18dac:	subs	r2, r2, r0
   18db0:	sbcs	r0, r1, r0, asr #31
   18db4:	str	r2, [fp, #-40]	; 0xffffffd8
   18db8:	str	r0, [fp, #-44]	; 0xffffffd4
   18dbc:	bcs	18f50 <__assert_fail@plt+0x7e98>
   18dc0:	b	18f74 <__assert_fail@plt+0x7ebc>
   18dc4:	b	18dc8 <__assert_fail@plt+0x7d10>
   18dc8:	b	18e48 <__assert_fail@plt+0x7d90>
   18dcc:	b	18e48 <__assert_fail@plt+0x7d90>
   18dd0:	ldr	r0, [fp, #-12]
   18dd4:	cmn	r0, #1
   18dd8:	bne	18e48 <__assert_fail@plt+0x7d90>
   18ddc:	b	18e00 <__assert_fail@plt+0x7d48>
   18de0:	ldr	r0, [fp, #-8]
   18de4:	ldr	r1, [r0]
   18de8:	ldr	r0, [r0, #4]
   18dec:	eor	r1, r1, #128	; 0x80
   18df0:	orr	r0, r1, r0
   18df4:	cmp	r0, #0
   18df8:	bne	18f50 <__assert_fail@plt+0x7e98>
   18dfc:	b	18f74 <__assert_fail@plt+0x7ebc>
   18e00:	ldr	r0, [fp, #-8]
   18e04:	ldr	r1, [r0]
   18e08:	ldr	r0, [r0, #4]
   18e0c:	orr	r0, r1, r0
   18e10:	cmp	r0, #0
   18e14:	beq	18f74 <__assert_fail@plt+0x7ebc>
   18e18:	b	18e1c <__assert_fail@plt+0x7d64>
   18e1c:	ldr	r0, [fp, #-8]
   18e20:	ldr	r1, [r0]
   18e24:	ldr	r0, [r0, #4]
   18e28:	subs	r1, r1, #1
   18e2c:	sbc	r0, r0, #0
   18e30:	rsbs	r1, r1, #127	; 0x7f
   18e34:	rscs	r0, r0, #0
   18e38:	str	r1, [fp, #-48]	; 0xffffffd0
   18e3c:	str	r0, [fp, #-52]	; 0xffffffcc
   18e40:	bcc	18f50 <__assert_fail@plt+0x7e98>
   18e44:	b	18f74 <__assert_fail@plt+0x7ebc>
   18e48:	ldr	r0, [fp, #-12]
   18e4c:	mvn	r1, #127	; 0x7f
   18e50:	sdiv	r0, r1, r0
   18e54:	ldr	r1, [fp, #-8]
   18e58:	ldr	r2, [r1]
   18e5c:	ldr	r1, [r1, #4]
   18e60:	subs	r2, r0, r2
   18e64:	rscs	r0, r1, r0, asr #31
   18e68:	str	r2, [fp, #-56]	; 0xffffffc8
   18e6c:	str	r0, [fp, #-60]	; 0xffffffc4
   18e70:	bcc	18f50 <__assert_fail@plt+0x7e98>
   18e74:	b	18f74 <__assert_fail@plt+0x7ebc>
   18e78:	ldr	r0, [fp, #-12]
   18e7c:	cmp	r0, #0
   18e80:	bne	18e88 <__assert_fail@plt+0x7dd0>
   18e84:	b	18f74 <__assert_fail@plt+0x7ebc>
   18e88:	mov	r0, #1
   18e8c:	cmp	r0, #0
   18e90:	bne	18f20 <__assert_fail@plt+0x7e68>
   18e94:	b	18e98 <__assert_fail@plt+0x7de0>
   18e98:	ldr	r0, [fp, #-8]
   18e9c:	ldr	r1, [r0]
   18ea0:	ldr	r0, [r0, #4]
   18ea4:	and	r0, r1, r0
   18ea8:	cmn	r0, #1
   18eac:	bne	18eec <__assert_fail@plt+0x7e34>
   18eb0:	b	18eb4 <__assert_fail@plt+0x7dfc>
   18eb4:	b	18eb8 <__assert_fail@plt+0x7e00>
   18eb8:	ldr	r0, [fp, #-12]
   18ebc:	mvn	r1, #127	; 0x7f
   18ec0:	add	r0, r0, r1
   18ec4:	movw	r1, #0
   18ec8:	cmp	r1, r0
   18ecc:	blt	18f50 <__assert_fail@plt+0x7e98>
   18ed0:	b	18f74 <__assert_fail@plt+0x7ebc>
   18ed4:	ldr	r0, [fp, #-12]
   18ed8:	sub	r0, r0, #1
   18edc:	movw	r1, #127	; 0x7f
   18ee0:	cmp	r1, r0
   18ee4:	blt	18f50 <__assert_fail@plt+0x7e98>
   18ee8:	b	18f74 <__assert_fail@plt+0x7ebc>
   18eec:	ldr	r0, [fp, #-8]
   18ef0:	ldr	r2, [r0]
   18ef4:	ldr	r3, [r0, #4]
   18ef8:	mvn	r0, #127	; 0x7f
   18efc:	mvn	r1, #0
   18f00:	bl	1cb38 <__assert_fail@plt+0xba80>
   18f04:	ldr	r2, [fp, #-12]
   18f08:	subs	r0, r0, r2
   18f0c:	sbcs	r1, r1, r2, asr #31
   18f10:	str	r0, [fp, #-64]	; 0xffffffc0
   18f14:	str	r1, [fp, #-68]	; 0xffffffbc
   18f18:	bcc	18f50 <__assert_fail@plt+0x7e98>
   18f1c:	b	18f74 <__assert_fail@plt+0x7ebc>
   18f20:	ldr	r0, [fp, #-12]
   18f24:	mov	r1, #127	; 0x7f
   18f28:	sdiv	r0, r1, r0
   18f2c:	ldr	r1, [fp, #-8]
   18f30:	ldr	r2, [r1]
   18f34:	ldr	r1, [r1, #4]
   18f38:	subs	r2, r0, r2
   18f3c:	rscs	r0, r1, r0, asr #31
   18f40:	str	r2, [fp, #-72]	; 0xffffffb8
   18f44:	str	r0, [fp, #-76]	; 0xffffffb4
   18f48:	bcs	18f74 <__assert_fail@plt+0x7ebc>
   18f4c:	b	18f50 <__assert_fail@plt+0x7e98>
   18f50:	ldr	r0, [fp, #-8]
   18f54:	ldr	r0, [r0]
   18f58:	ldr	r1, [fp, #-12]
   18f5c:	mul	r0, r0, r1
   18f60:	sxtb	r0, r0
   18f64:	asr	r1, r0, #31
   18f68:	str	r0, [fp, #-24]	; 0xffffffe8
   18f6c:	str	r1, [fp, #-20]	; 0xffffffec
   18f70:	b	1a798 <__assert_fail@plt+0x96e0>
   18f74:	ldr	r0, [fp, #-8]
   18f78:	ldr	r0, [r0]
   18f7c:	ldr	r1, [fp, #-12]
   18f80:	mul	r0, r0, r1
   18f84:	sxtb	r0, r0
   18f88:	asr	r1, r0, #31
   18f8c:	str	r0, [fp, #-24]	; 0xffffffe8
   18f90:	str	r1, [fp, #-20]	; 0xffffffec
   18f94:	b	1a7b4 <__assert_fail@plt+0x96fc>
   18f98:	ldr	r0, [fp, #-12]
   18f9c:	cmp	r0, #0
   18fa0:	bge	190f8 <__assert_fail@plt+0x8040>
   18fa4:	mov	r0, #1
   18fa8:	cmp	r0, #0
   18fac:	bne	19064 <__assert_fail@plt+0x7fac>
   18fb0:	b	18fb4 <__assert_fail@plt+0x7efc>
   18fb4:	b	18fb8 <__assert_fail@plt+0x7f00>
   18fb8:	ldr	r0, [fp, #-8]
   18fbc:	ldr	r1, [r0]
   18fc0:	ldr	r0, [r0, #4]
   18fc4:	ldr	r2, [fp, #-12]
   18fc8:	mov	r3, #255	; 0xff
   18fcc:	sdiv	r2, r3, r2
   18fd0:	subs	r1, r1, r2
   18fd4:	sbcs	r0, r0, r2, asr #31
   18fd8:	str	r1, [fp, #-80]	; 0xffffffb0
   18fdc:	str	r0, [fp, #-84]	; 0xffffffac
   18fe0:	bcc	191dc <__assert_fail@plt+0x8124>
   18fe4:	b	19200 <__assert_fail@plt+0x8148>
   18fe8:	b	18fec <__assert_fail@plt+0x7f34>
   18fec:	ldr	r0, [pc, #3416]	; 19d4c <__assert_fail@plt+0x8c94>
   18ff0:	ldr	r1, [fp, #-12]
   18ff4:	cmp	r1, r0
   18ff8:	blt	19010 <__assert_fail@plt+0x7f58>
   18ffc:	b	1901c <__assert_fail@plt+0x7f64>
   19000:	ldr	r0, [fp, #-12]
   19004:	movw	r1, #0
   19008:	cmp	r1, r0
   1900c:	bge	1901c <__assert_fail@plt+0x7f64>
   19010:	movw	r0, #0
   19014:	str	r0, [fp, #-88]	; 0xffffffa8
   19018:	b	19034 <__assert_fail@plt+0x7f7c>
   1901c:	ldr	r0, [fp, #-12]
   19020:	movw	r1, #0
   19024:	sub	r0, r1, r0
   19028:	movw	r1, #255	; 0xff
   1902c:	sdiv	r0, r1, r0
   19030:	str	r0, [fp, #-88]	; 0xffffffa8
   19034:	ldr	r0, [fp, #-88]	; 0xffffffa8
   19038:	ldr	r1, [fp, #-8]
   1903c:	ldr	r2, [r1]
   19040:	ldr	r1, [r1, #4]
   19044:	mvn	r1, r1
   19048:	mvn	r2, r2
   1904c:	subs	r2, r2, r0
   19050:	sbcs	r0, r1, r0, asr #31
   19054:	str	r2, [fp, #-92]	; 0xffffffa4
   19058:	str	r0, [fp, #-96]	; 0xffffffa0
   1905c:	bcs	191dc <__assert_fail@plt+0x8124>
   19060:	b	19200 <__assert_fail@plt+0x8148>
   19064:	b	19068 <__assert_fail@plt+0x7fb0>
   19068:	b	190c8 <__assert_fail@plt+0x8010>
   1906c:	b	190c8 <__assert_fail@plt+0x8010>
   19070:	ldr	r0, [fp, #-12]
   19074:	cmn	r0, #1
   19078:	bne	190c8 <__assert_fail@plt+0x8010>
   1907c:	b	1909c <__assert_fail@plt+0x7fe4>
   19080:	ldr	r0, [fp, #-8]
   19084:	ldr	r1, [r0]
   19088:	ldr	r0, [r0, #4]
   1908c:	orr	r0, r1, r0
   19090:	cmp	r0, #0
   19094:	bne	191dc <__assert_fail@plt+0x8124>
   19098:	b	19200 <__assert_fail@plt+0x8148>
   1909c:	ldr	r0, [fp, #-8]
   190a0:	ldr	r1, [r0]
   190a4:	ldr	r0, [r0, #4]
   190a8:	orr	r0, r1, r0
   190ac:	cmp	r0, #0
   190b0:	beq	19200 <__assert_fail@plt+0x8148>
   190b4:	b	190b8 <__assert_fail@plt+0x8000>
   190b8:	mov	r0, #0
   190bc:	cmp	r0, #0
   190c0:	bne	191dc <__assert_fail@plt+0x8124>
   190c4:	b	19200 <__assert_fail@plt+0x8148>
   190c8:	ldr	r0, [fp, #-12]
   190cc:	mov	r1, #0
   190d0:	sdiv	r0, r1, r0
   190d4:	ldr	r1, [fp, #-8]
   190d8:	ldr	r2, [r1]
   190dc:	ldr	r1, [r1, #4]
   190e0:	subs	r2, r0, r2
   190e4:	rscs	r0, r1, r0, asr #31
   190e8:	str	r2, [fp, #-100]	; 0xffffff9c
   190ec:	str	r0, [fp, #-104]	; 0xffffff98
   190f0:	bcc	191dc <__assert_fail@plt+0x8124>
   190f4:	b	19200 <__assert_fail@plt+0x8148>
   190f8:	ldr	r0, [fp, #-12]
   190fc:	cmp	r0, #0
   19100:	bne	19108 <__assert_fail@plt+0x8050>
   19104:	b	19200 <__assert_fail@plt+0x8148>
   19108:	mov	r0, #1
   1910c:	cmp	r0, #0
   19110:	bne	191ac <__assert_fail@plt+0x80f4>
   19114:	b	19118 <__assert_fail@plt+0x8060>
   19118:	b	19120 <__assert_fail@plt+0x8068>
   1911c:	b	19124 <__assert_fail@plt+0x806c>
   19120:	b	19174 <__assert_fail@plt+0x80bc>
   19124:	ldr	r0, [fp, #-8]
   19128:	ldr	r1, [r0]
   1912c:	ldr	r0, [r0, #4]
   19130:	and	r0, r1, r0
   19134:	cmn	r0, #1
   19138:	bne	19174 <__assert_fail@plt+0x80bc>
   1913c:	b	19140 <__assert_fail@plt+0x8088>
   19140:	b	19144 <__assert_fail@plt+0x808c>
   19144:	ldr	r0, [fp, #-12]
   19148:	add	r0, r0, #0
   1914c:	movw	r1, #0
   19150:	cmp	r1, r0
   19154:	blt	191dc <__assert_fail@plt+0x8124>
   19158:	b	19200 <__assert_fail@plt+0x8148>
   1915c:	ldr	r0, [fp, #-12]
   19160:	sub	r0, r0, #1
   19164:	mvn	r1, #0
   19168:	cmp	r1, r0
   1916c:	blt	191dc <__assert_fail@plt+0x8124>
   19170:	b	19200 <__assert_fail@plt+0x8148>
   19174:	ldr	r0, [fp, #-8]
   19178:	ldr	r2, [r0]
   1917c:	ldr	r3, [r0, #4]
   19180:	mov	r0, #0
   19184:	str	r0, [fp, #-108]	; 0xffffff94
   19188:	ldr	r1, [fp, #-108]	; 0xffffff94
   1918c:	bl	1cb38 <__assert_fail@plt+0xba80>
   19190:	ldr	r2, [fp, #-12]
   19194:	subs	r0, r0, r2
   19198:	sbcs	r1, r1, r2, asr #31
   1919c:	str	r0, [fp, #-112]	; 0xffffff90
   191a0:	str	r1, [fp, #-116]	; 0xffffff8c
   191a4:	bcc	191dc <__assert_fail@plt+0x8124>
   191a8:	b	19200 <__assert_fail@plt+0x8148>
   191ac:	ldr	r0, [fp, #-12]
   191b0:	mov	r1, #255	; 0xff
   191b4:	sdiv	r0, r1, r0
   191b8:	ldr	r1, [fp, #-8]
   191bc:	ldr	r2, [r1]
   191c0:	ldr	r1, [r1, #4]
   191c4:	subs	r2, r0, r2
   191c8:	rscs	r0, r1, r0, asr #31
   191cc:	str	r2, [fp, #-120]	; 0xffffff88
   191d0:	str	r0, [fp, #-124]	; 0xffffff84
   191d4:	bcs	19200 <__assert_fail@plt+0x8148>
   191d8:	b	191dc <__assert_fail@plt+0x8124>
   191dc:	ldr	r0, [fp, #-8]
   191e0:	ldr	r0, [r0]
   191e4:	ldr	r1, [fp, #-12]
   191e8:	mul	r0, r0, r1
   191ec:	uxtb	r0, r0
   191f0:	mov	r1, #0
   191f4:	str	r1, [fp, #-20]	; 0xffffffec
   191f8:	str	r0, [fp, #-24]	; 0xffffffe8
   191fc:	b	1a798 <__assert_fail@plt+0x96e0>
   19200:	ldr	r0, [fp, #-8]
   19204:	ldr	r0, [r0]
   19208:	ldr	r1, [fp, #-12]
   1920c:	mul	r0, r0, r1
   19210:	uxtb	r0, r0
   19214:	mov	r1, #0
   19218:	str	r1, [fp, #-20]	; 0xffffffec
   1921c:	str	r0, [fp, #-24]	; 0xffffffe8
   19220:	b	1a7b4 <__assert_fail@plt+0x96fc>
   19224:	b	19760 <__assert_fail@plt+0x86a8>
   19228:	b	194d4 <__assert_fail@plt+0x841c>
   1922c:	ldr	r0, [fp, #-12]
   19230:	cmp	r0, #0
   19234:	bge	193b0 <__assert_fail@plt+0x82f8>
   19238:	mov	r0, #1
   1923c:	cmp	r0, #0
   19240:	bne	192f8 <__assert_fail@plt+0x8240>
   19244:	b	19248 <__assert_fail@plt+0x8190>
   19248:	b	1924c <__assert_fail@plt+0x8194>
   1924c:	ldr	r0, [fp, #-8]
   19250:	ldr	r1, [r0]
   19254:	ldr	r0, [r0, #4]
   19258:	ldr	r2, [fp, #-12]
   1925c:	movw	r3, #32767	; 0x7fff
   19260:	sdiv	r2, r3, r2
   19264:	subs	r1, r1, r2
   19268:	sbcs	r0, r0, r2, asr #31
   1926c:	str	r1, [fp, #-128]	; 0xffffff80
   19270:	str	r0, [fp, #-132]	; 0xffffff7c
   19274:	bcc	1948c <__assert_fail@plt+0x83d4>
   19278:	b	194b0 <__assert_fail@plt+0x83f8>
   1927c:	b	19280 <__assert_fail@plt+0x81c8>
   19280:	ldr	r0, [pc, #2756]	; 19d4c <__assert_fail@plt+0x8c94>
   19284:	ldr	r1, [fp, #-12]
   19288:	cmp	r1, r0
   1928c:	blt	192a4 <__assert_fail@plt+0x81ec>
   19290:	b	192b0 <__assert_fail@plt+0x81f8>
   19294:	ldr	r0, [fp, #-12]
   19298:	movw	r1, #0
   1929c:	cmp	r1, r0
   192a0:	bge	192b0 <__assert_fail@plt+0x81f8>
   192a4:	movw	r0, #0
   192a8:	str	r0, [fp, #-136]	; 0xffffff78
   192ac:	b	192c8 <__assert_fail@plt+0x8210>
   192b0:	ldr	r0, [fp, #-12]
   192b4:	movw	r1, #0
   192b8:	sub	r0, r1, r0
   192bc:	movw	r1, #32767	; 0x7fff
   192c0:	sdiv	r0, r1, r0
   192c4:	str	r0, [fp, #-136]	; 0xffffff78
   192c8:	ldr	r0, [fp, #-136]	; 0xffffff78
   192cc:	ldr	r1, [fp, #-8]
   192d0:	ldr	r2, [r1]
   192d4:	ldr	r1, [r1, #4]
   192d8:	mvn	r1, r1
   192dc:	mvn	r2, r2
   192e0:	subs	r2, r2, r0
   192e4:	sbcs	r0, r1, r0, asr #31
   192e8:	str	r2, [fp, #-140]	; 0xffffff74
   192ec:	str	r0, [fp, #-144]	; 0xffffff70
   192f0:	bcs	1948c <__assert_fail@plt+0x83d4>
   192f4:	b	194b0 <__assert_fail@plt+0x83f8>
   192f8:	b	192fc <__assert_fail@plt+0x8244>
   192fc:	b	1937c <__assert_fail@plt+0x82c4>
   19300:	b	1937c <__assert_fail@plt+0x82c4>
   19304:	ldr	r0, [fp, #-12]
   19308:	cmn	r0, #1
   1930c:	bne	1937c <__assert_fail@plt+0x82c4>
   19310:	b	19334 <__assert_fail@plt+0x827c>
   19314:	ldr	r0, [fp, #-8]
   19318:	ldr	r1, [r0]
   1931c:	ldr	r0, [r0, #4]
   19320:	eor	r1, r1, #32768	; 0x8000
   19324:	orr	r0, r1, r0
   19328:	cmp	r0, #0
   1932c:	bne	1948c <__assert_fail@plt+0x83d4>
   19330:	b	194b0 <__assert_fail@plt+0x83f8>
   19334:	ldr	r0, [fp, #-8]
   19338:	ldr	r1, [r0]
   1933c:	ldr	r0, [r0, #4]
   19340:	orr	r0, r1, r0
   19344:	cmp	r0, #0
   19348:	beq	194b0 <__assert_fail@plt+0x83f8>
   1934c:	b	19350 <__assert_fail@plt+0x8298>
   19350:	ldr	r0, [fp, #-8]
   19354:	ldr	r1, [r0]
   19358:	ldr	r0, [r0, #4]
   1935c:	subs	r1, r1, #1
   19360:	sbc	r0, r0, #0
   19364:	lsr	r1, r1, #15
   19368:	orr	r1, r1, r0, lsl #17
   1936c:	orr	r0, r1, r0, lsr #15
   19370:	cmp	r0, #0
   19374:	bne	1948c <__assert_fail@plt+0x83d4>
   19378:	b	194b0 <__assert_fail@plt+0x83f8>
   1937c:	ldr	r0, [fp, #-12]
   19380:	movw	r1, #32768	; 0x8000
   19384:	movt	r1, #65535	; 0xffff
   19388:	sdiv	r0, r1, r0
   1938c:	ldr	r1, [fp, #-8]
   19390:	ldr	r2, [r1]
   19394:	ldr	r1, [r1, #4]
   19398:	subs	r2, r0, r2
   1939c:	rscs	r0, r1, r0, asr #31
   193a0:	str	r2, [fp, #-148]	; 0xffffff6c
   193a4:	str	r0, [fp, #-152]	; 0xffffff68
   193a8:	bcc	1948c <__assert_fail@plt+0x83d4>
   193ac:	b	194b0 <__assert_fail@plt+0x83f8>
   193b0:	ldr	r0, [fp, #-12]
   193b4:	cmp	r0, #0
   193b8:	bne	193c0 <__assert_fail@plt+0x8308>
   193bc:	b	194b0 <__assert_fail@plt+0x83f8>
   193c0:	mov	r0, #1
   193c4:	cmp	r0, #0
   193c8:	bne	1945c <__assert_fail@plt+0x83a4>
   193cc:	b	193d0 <__assert_fail@plt+0x8318>
   193d0:	ldr	r0, [fp, #-8]
   193d4:	ldr	r1, [r0]
   193d8:	ldr	r0, [r0, #4]
   193dc:	and	r0, r1, r0
   193e0:	cmn	r0, #1
   193e4:	bne	19424 <__assert_fail@plt+0x836c>
   193e8:	b	193ec <__assert_fail@plt+0x8334>
   193ec:	b	193f0 <__assert_fail@plt+0x8338>
   193f0:	ldr	r0, [pc, #4064]	; 1a3d8 <__assert_fail@plt+0x9320>
   193f4:	ldr	r1, [fp, #-12]
   193f8:	add	r0, r1, r0
   193fc:	movw	r1, #0
   19400:	cmp	r1, r0
   19404:	blt	1948c <__assert_fail@plt+0x83d4>
   19408:	b	194b0 <__assert_fail@plt+0x83f8>
   1940c:	ldr	r0, [fp, #-12]
   19410:	sub	r0, r0, #1
   19414:	movw	r1, #32767	; 0x7fff
   19418:	cmp	r1, r0
   1941c:	blt	1948c <__assert_fail@plt+0x83d4>
   19420:	b	194b0 <__assert_fail@plt+0x83f8>
   19424:	ldr	r0, [fp, #-8]
   19428:	ldr	r2, [r0]
   1942c:	ldr	r3, [r0, #4]
   19430:	movw	r0, #32768	; 0x8000
   19434:	movt	r0, #65535	; 0xffff
   19438:	mvn	r1, #0
   1943c:	bl	1cb38 <__assert_fail@plt+0xba80>
   19440:	ldr	r2, [fp, #-12]
   19444:	subs	r0, r0, r2
   19448:	sbcs	r1, r1, r2, asr #31
   1944c:	str	r0, [fp, #-156]	; 0xffffff64
   19450:	str	r1, [fp, #-160]	; 0xffffff60
   19454:	bcc	1948c <__assert_fail@plt+0x83d4>
   19458:	b	194b0 <__assert_fail@plt+0x83f8>
   1945c:	ldr	r0, [fp, #-12]
   19460:	movw	r1, #32767	; 0x7fff
   19464:	sdiv	r0, r1, r0
   19468:	ldr	r1, [fp, #-8]
   1946c:	ldr	r2, [r1]
   19470:	ldr	r1, [r1, #4]
   19474:	subs	r2, r0, r2
   19478:	rscs	r0, r1, r0, asr #31
   1947c:	str	r2, [fp, #-164]	; 0xffffff5c
   19480:	str	r0, [fp, #-168]	; 0xffffff58
   19484:	bcs	194b0 <__assert_fail@plt+0x83f8>
   19488:	b	1948c <__assert_fail@plt+0x83d4>
   1948c:	ldr	r0, [fp, #-8]
   19490:	ldr	r0, [r0]
   19494:	ldr	r1, [fp, #-12]
   19498:	mul	r0, r0, r1
   1949c:	sxth	r0, r0
   194a0:	asr	r1, r0, #31
   194a4:	str	r0, [fp, #-24]	; 0xffffffe8
   194a8:	str	r1, [fp, #-20]	; 0xffffffec
   194ac:	b	1a798 <__assert_fail@plt+0x96e0>
   194b0:	ldr	r0, [fp, #-8]
   194b4:	ldr	r0, [r0]
   194b8:	ldr	r1, [fp, #-12]
   194bc:	mul	r0, r0, r1
   194c0:	sxth	r0, r0
   194c4:	asr	r1, r0, #31
   194c8:	str	r0, [fp, #-24]	; 0xffffffe8
   194cc:	str	r1, [fp, #-20]	; 0xffffffec
   194d0:	b	1a7b4 <__assert_fail@plt+0x96fc>
   194d4:	ldr	r0, [fp, #-12]
   194d8:	cmp	r0, #0
   194dc:	bge	19634 <__assert_fail@plt+0x857c>
   194e0:	mov	r0, #1
   194e4:	cmp	r0, #0
   194e8:	bne	195a0 <__assert_fail@plt+0x84e8>
   194ec:	b	194f0 <__assert_fail@plt+0x8438>
   194f0:	b	194f4 <__assert_fail@plt+0x843c>
   194f4:	ldr	r0, [fp, #-8]
   194f8:	ldr	r1, [r0]
   194fc:	ldr	r0, [r0, #4]
   19500:	ldr	r2, [fp, #-12]
   19504:	movw	r3, #65535	; 0xffff
   19508:	sdiv	r2, r3, r2
   1950c:	subs	r1, r1, r2
   19510:	sbcs	r0, r0, r2, asr #31
   19514:	str	r1, [fp, #-172]	; 0xffffff54
   19518:	str	r0, [fp, #-176]	; 0xffffff50
   1951c:	bcc	19718 <__assert_fail@plt+0x8660>
   19520:	b	1973c <__assert_fail@plt+0x8684>
   19524:	b	19528 <__assert_fail@plt+0x8470>
   19528:	ldr	r0, [pc, #2076]	; 19d4c <__assert_fail@plt+0x8c94>
   1952c:	ldr	r1, [fp, #-12]
   19530:	cmp	r1, r0
   19534:	blt	1954c <__assert_fail@plt+0x8494>
   19538:	b	19558 <__assert_fail@plt+0x84a0>
   1953c:	ldr	r0, [fp, #-12]
   19540:	movw	r1, #0
   19544:	cmp	r1, r0
   19548:	bge	19558 <__assert_fail@plt+0x84a0>
   1954c:	movw	r0, #0
   19550:	str	r0, [fp, #-180]	; 0xffffff4c
   19554:	b	19570 <__assert_fail@plt+0x84b8>
   19558:	ldr	r0, [fp, #-12]
   1955c:	movw	r1, #0
   19560:	sub	r0, r1, r0
   19564:	movw	r1, #65535	; 0xffff
   19568:	sdiv	r0, r1, r0
   1956c:	str	r0, [fp, #-180]	; 0xffffff4c
   19570:	ldr	r0, [fp, #-180]	; 0xffffff4c
   19574:	ldr	r1, [fp, #-8]
   19578:	ldr	r2, [r1]
   1957c:	ldr	r1, [r1, #4]
   19580:	mvn	r1, r1
   19584:	mvn	r2, r2
   19588:	subs	r2, r2, r0
   1958c:	sbcs	r0, r1, r0, asr #31
   19590:	str	r2, [fp, #-184]	; 0xffffff48
   19594:	str	r0, [fp, #-188]	; 0xffffff44
   19598:	bcs	19718 <__assert_fail@plt+0x8660>
   1959c:	b	1973c <__assert_fail@plt+0x8684>
   195a0:	b	195a4 <__assert_fail@plt+0x84ec>
   195a4:	b	19604 <__assert_fail@plt+0x854c>
   195a8:	b	19604 <__assert_fail@plt+0x854c>
   195ac:	ldr	r0, [fp, #-12]
   195b0:	cmn	r0, #1
   195b4:	bne	19604 <__assert_fail@plt+0x854c>
   195b8:	b	195d8 <__assert_fail@plt+0x8520>
   195bc:	ldr	r0, [fp, #-8]
   195c0:	ldr	r1, [r0]
   195c4:	ldr	r0, [r0, #4]
   195c8:	orr	r0, r1, r0
   195cc:	cmp	r0, #0
   195d0:	bne	19718 <__assert_fail@plt+0x8660>
   195d4:	b	1973c <__assert_fail@plt+0x8684>
   195d8:	ldr	r0, [fp, #-8]
   195dc:	ldr	r1, [r0]
   195e0:	ldr	r0, [r0, #4]
   195e4:	orr	r0, r1, r0
   195e8:	cmp	r0, #0
   195ec:	beq	1973c <__assert_fail@plt+0x8684>
   195f0:	b	195f4 <__assert_fail@plt+0x853c>
   195f4:	mov	r0, #0
   195f8:	cmp	r0, #0
   195fc:	bne	19718 <__assert_fail@plt+0x8660>
   19600:	b	1973c <__assert_fail@plt+0x8684>
   19604:	ldr	r0, [fp, #-12]
   19608:	mov	r1, #0
   1960c:	sdiv	r0, r1, r0
   19610:	ldr	r1, [fp, #-8]
   19614:	ldr	r2, [r1]
   19618:	ldr	r1, [r1, #4]
   1961c:	subs	r2, r0, r2
   19620:	rscs	r0, r1, r0, asr #31
   19624:	str	r2, [fp, #-192]	; 0xffffff40
   19628:	str	r0, [fp, #-196]	; 0xffffff3c
   1962c:	bcc	19718 <__assert_fail@plt+0x8660>
   19630:	b	1973c <__assert_fail@plt+0x8684>
   19634:	ldr	r0, [fp, #-12]
   19638:	cmp	r0, #0
   1963c:	bne	19644 <__assert_fail@plt+0x858c>
   19640:	b	1973c <__assert_fail@plt+0x8684>
   19644:	mov	r0, #1
   19648:	cmp	r0, #0
   1964c:	bne	196e8 <__assert_fail@plt+0x8630>
   19650:	b	19654 <__assert_fail@plt+0x859c>
   19654:	b	1965c <__assert_fail@plt+0x85a4>
   19658:	b	19660 <__assert_fail@plt+0x85a8>
   1965c:	b	196b0 <__assert_fail@plt+0x85f8>
   19660:	ldr	r0, [fp, #-8]
   19664:	ldr	r1, [r0]
   19668:	ldr	r0, [r0, #4]
   1966c:	and	r0, r1, r0
   19670:	cmn	r0, #1
   19674:	bne	196b0 <__assert_fail@plt+0x85f8>
   19678:	b	1967c <__assert_fail@plt+0x85c4>
   1967c:	b	19680 <__assert_fail@plt+0x85c8>
   19680:	ldr	r0, [fp, #-12]
   19684:	add	r0, r0, #0
   19688:	movw	r1, #0
   1968c:	cmp	r1, r0
   19690:	blt	19718 <__assert_fail@plt+0x8660>
   19694:	b	1973c <__assert_fail@plt+0x8684>
   19698:	ldr	r0, [fp, #-12]
   1969c:	sub	r0, r0, #1
   196a0:	mvn	r1, #0
   196a4:	cmp	r1, r0
   196a8:	blt	19718 <__assert_fail@plt+0x8660>
   196ac:	b	1973c <__assert_fail@plt+0x8684>
   196b0:	ldr	r0, [fp, #-8]
   196b4:	ldr	r2, [r0]
   196b8:	ldr	r3, [r0, #4]
   196bc:	mov	r0, #0
   196c0:	str	r0, [fp, #-200]	; 0xffffff38
   196c4:	ldr	r1, [fp, #-200]	; 0xffffff38
   196c8:	bl	1cb38 <__assert_fail@plt+0xba80>
   196cc:	ldr	r2, [fp, #-12]
   196d0:	subs	r0, r0, r2
   196d4:	sbcs	r1, r1, r2, asr #31
   196d8:	str	r0, [fp, #-204]	; 0xffffff34
   196dc:	str	r1, [fp, #-208]	; 0xffffff30
   196e0:	bcc	19718 <__assert_fail@plt+0x8660>
   196e4:	b	1973c <__assert_fail@plt+0x8684>
   196e8:	ldr	r0, [fp, #-12]
   196ec:	movw	r1, #65535	; 0xffff
   196f0:	sdiv	r0, r1, r0
   196f4:	ldr	r1, [fp, #-8]
   196f8:	ldr	r2, [r1]
   196fc:	ldr	r1, [r1, #4]
   19700:	subs	r2, r0, r2
   19704:	rscs	r0, r1, r0, asr #31
   19708:	str	r2, [fp, #-212]	; 0xffffff2c
   1970c:	str	r0, [fp, #-216]	; 0xffffff28
   19710:	bcs	1973c <__assert_fail@plt+0x8684>
   19714:	b	19718 <__assert_fail@plt+0x8660>
   19718:	ldr	r0, [fp, #-8]
   1971c:	ldr	r0, [r0]
   19720:	ldr	r1, [fp, #-12]
   19724:	mul	r0, r0, r1
   19728:	uxth	r0, r0
   1972c:	mov	r1, #0
   19730:	str	r1, [fp, #-20]	; 0xffffffec
   19734:	str	r0, [fp, #-24]	; 0xffffffe8
   19738:	b	1a798 <__assert_fail@plt+0x96e0>
   1973c:	ldr	r0, [fp, #-8]
   19740:	ldr	r0, [r0]
   19744:	ldr	r1, [fp, #-12]
   19748:	mul	r0, r0, r1
   1974c:	uxth	r0, r0
   19750:	mov	r1, #0
   19754:	str	r1, [fp, #-20]	; 0xffffffec
   19758:	str	r0, [fp, #-24]	; 0xffffffe8
   1975c:	b	1a7b4 <__assert_fail@plt+0x96fc>
   19760:	b	19c78 <__assert_fail@plt+0x8bc0>
   19764:	b	199f4 <__assert_fail@plt+0x893c>
   19768:	ldr	r0, [fp, #-12]
   1976c:	cmp	r0, #0
   19770:	bge	198e0 <__assert_fail@plt+0x8828>
   19774:	mov	r0, #1
   19778:	cmp	r0, #0
   1977c:	bne	19834 <__assert_fail@plt+0x877c>
   19780:	b	19784 <__assert_fail@plt+0x86cc>
   19784:	b	19788 <__assert_fail@plt+0x86d0>
   19788:	ldr	r0, [fp, #-8]
   1978c:	ldr	r1, [r0]
   19790:	ldr	r0, [r0, #4]
   19794:	ldr	r2, [fp, #-12]
   19798:	mvn	r3, #-2147483648	; 0x80000000
   1979c:	sdiv	r2, r3, r2
   197a0:	subs	r1, r1, r2
   197a4:	sbcs	r0, r0, r2, asr #31
   197a8:	str	r1, [fp, #-220]	; 0xffffff24
   197ac:	str	r0, [fp, #-224]	; 0xffffff20
   197b0:	bcc	199b4 <__assert_fail@plt+0x88fc>
   197b4:	b	199d4 <__assert_fail@plt+0x891c>
   197b8:	b	197bc <__assert_fail@plt+0x8704>
   197bc:	ldr	r0, [pc, #1416]	; 19d4c <__assert_fail@plt+0x8c94>
   197c0:	ldr	r1, [fp, #-12]
   197c4:	cmp	r1, r0
   197c8:	blt	197e0 <__assert_fail@plt+0x8728>
   197cc:	b	197ec <__assert_fail@plt+0x8734>
   197d0:	ldr	r0, [fp, #-12]
   197d4:	movw	r1, #0
   197d8:	cmp	r1, r0
   197dc:	bge	197ec <__assert_fail@plt+0x8734>
   197e0:	movw	r0, #0
   197e4:	str	r0, [fp, #-228]	; 0xffffff1c
   197e8:	b	19804 <__assert_fail@plt+0x874c>
   197ec:	ldr	r0, [pc, #4076]	; 1a7e0 <__assert_fail@plt+0x9728>
   197f0:	ldr	r1, [fp, #-12]
   197f4:	movw	r2, #0
   197f8:	sub	r1, r2, r1
   197fc:	sdiv	r0, r0, r1
   19800:	str	r0, [fp, #-228]	; 0xffffff1c
   19804:	ldr	r0, [fp, #-228]	; 0xffffff1c
   19808:	ldr	r1, [fp, #-8]
   1980c:	ldr	r2, [r1]
   19810:	ldr	r1, [r1, #4]
   19814:	mvn	r1, r1
   19818:	mvn	r2, r2
   1981c:	subs	r2, r2, r0
   19820:	sbcs	r0, r1, r0, asr #31
   19824:	str	r2, [fp, #-232]	; 0xffffff18
   19828:	str	r0, [fp, #-236]	; 0xffffff14
   1982c:	bcs	199b4 <__assert_fail@plt+0x88fc>
   19830:	b	199d4 <__assert_fail@plt+0x891c>
   19834:	ldr	r0, [fp, #-12]
   19838:	cmn	r0, #1
   1983c:	bne	198b0 <__assert_fail@plt+0x87f8>
   19840:	b	19864 <__assert_fail@plt+0x87ac>
   19844:	ldr	r0, [fp, #-8]
   19848:	ldr	r1, [r0]
   1984c:	ldr	r0, [r0, #4]
   19850:	eor	r1, r1, #-2147483648	; 0x80000000
   19854:	orr	r0, r1, r0
   19858:	cmp	r0, #0
   1985c:	bne	199b4 <__assert_fail@plt+0x88fc>
   19860:	b	199d4 <__assert_fail@plt+0x891c>
   19864:	ldr	r0, [fp, #-8]
   19868:	ldr	r1, [r0]
   1986c:	ldr	r0, [r0, #4]
   19870:	orr	r0, r1, r0
   19874:	cmp	r0, #0
   19878:	beq	199d4 <__assert_fail@plt+0x891c>
   1987c:	b	19880 <__assert_fail@plt+0x87c8>
   19880:	ldr	r0, [fp, #-8]
   19884:	ldr	r1, [r0]
   19888:	ldr	r0, [r0, #4]
   1988c:	subs	r1, r1, #1
   19890:	sbc	r0, r0, #0
   19894:	mvn	r2, #-2147483648	; 0x80000000
   19898:	subs	r1, r2, r1
   1989c:	rscs	r0, r0, #0
   198a0:	str	r1, [fp, #-240]	; 0xffffff10
   198a4:	str	r0, [fp, #-244]	; 0xffffff0c
   198a8:	bcc	199b4 <__assert_fail@plt+0x88fc>
   198ac:	b	199d4 <__assert_fail@plt+0x891c>
   198b0:	ldr	r0, [fp, #-12]
   198b4:	mov	r1, #-2147483648	; 0x80000000
   198b8:	sdiv	r0, r1, r0
   198bc:	ldr	r1, [fp, #-8]
   198c0:	ldr	r2, [r1]
   198c4:	ldr	r1, [r1, #4]
   198c8:	subs	r2, r0, r2
   198cc:	rscs	r0, r1, r0, asr #31
   198d0:	str	r2, [fp, #-248]	; 0xffffff08
   198d4:	str	r0, [fp, #-252]	; 0xffffff04
   198d8:	bcc	199b4 <__assert_fail@plt+0x88fc>
   198dc:	b	199d4 <__assert_fail@plt+0x891c>
   198e0:	ldr	r0, [fp, #-12]
   198e4:	cmp	r0, #0
   198e8:	bne	198f0 <__assert_fail@plt+0x8838>
   198ec:	b	199d4 <__assert_fail@plt+0x891c>
   198f0:	mov	r0, #1
   198f4:	cmp	r0, #0
   198f8:	bne	19984 <__assert_fail@plt+0x88cc>
   198fc:	b	19900 <__assert_fail@plt+0x8848>
   19900:	ldr	r0, [fp, #-8]
   19904:	ldr	r1, [r0]
   19908:	ldr	r0, [r0, #4]
   1990c:	and	r0, r1, r0
   19910:	cmn	r0, #1
   19914:	bne	19950 <__assert_fail@plt+0x8898>
   19918:	b	1991c <__assert_fail@plt+0x8864>
   1991c:	b	19920 <__assert_fail@plt+0x8868>
   19920:	ldr	r0, [fp, #-12]
   19924:	add	r0, r0, #-2147483648	; 0x80000000
   19928:	movw	r1, #0
   1992c:	cmp	r1, r0
   19930:	blt	199b4 <__assert_fail@plt+0x88fc>
   19934:	b	199d4 <__assert_fail@plt+0x891c>
   19938:	ldr	r0, [pc, #3744]	; 1a7e0 <__assert_fail@plt+0x9728>
   1993c:	ldr	r1, [fp, #-12]
   19940:	sub	r1, r1, #1
   19944:	cmp	r0, r1
   19948:	blt	199b4 <__assert_fail@plt+0x88fc>
   1994c:	b	199d4 <__assert_fail@plt+0x891c>
   19950:	ldr	r0, [fp, #-8]
   19954:	ldr	r2, [r0]
   19958:	ldr	r3, [r0, #4]
   1995c:	mov	r0, #-2147483648	; 0x80000000
   19960:	mvn	r1, #0
   19964:	bl	1cb38 <__assert_fail@plt+0xba80>
   19968:	ldr	r2, [fp, #-12]
   1996c:	subs	r0, r0, r2
   19970:	sbcs	r1, r1, r2, asr #31
   19974:	str	r0, [fp, #-256]	; 0xffffff00
   19978:	str	r1, [fp, #-260]	; 0xfffffefc
   1997c:	bcc	199b4 <__assert_fail@plt+0x88fc>
   19980:	b	199d4 <__assert_fail@plt+0x891c>
   19984:	ldr	r0, [fp, #-12]
   19988:	mvn	r1, #-2147483648	; 0x80000000
   1998c:	sdiv	r0, r1, r0
   19990:	ldr	r1, [fp, #-8]
   19994:	ldr	r2, [r1]
   19998:	ldr	r1, [r1, #4]
   1999c:	subs	r2, r0, r2
   199a0:	rscs	r0, r1, r0, asr #31
   199a4:	str	r2, [fp, #-264]	; 0xfffffef8
   199a8:	str	r0, [fp, #-268]	; 0xfffffef4
   199ac:	bcs	199d4 <__assert_fail@plt+0x891c>
   199b0:	b	199b4 <__assert_fail@plt+0x88fc>
   199b4:	ldr	r0, [fp, #-8]
   199b8:	ldr	r0, [r0]
   199bc:	ldr	r1, [fp, #-12]
   199c0:	mul	r0, r0, r1
   199c4:	asr	r1, r0, #31
   199c8:	str	r0, [fp, #-24]	; 0xffffffe8
   199cc:	str	r1, [fp, #-20]	; 0xffffffec
   199d0:	b	1a798 <__assert_fail@plt+0x96e0>
   199d4:	ldr	r0, [fp, #-8]
   199d8:	ldr	r0, [r0]
   199dc:	ldr	r1, [fp, #-12]
   199e0:	mul	r0, r0, r1
   199e4:	asr	r1, r0, #31
   199e8:	str	r0, [fp, #-24]	; 0xffffffe8
   199ec:	str	r1, [fp, #-20]	; 0xffffffec
   199f0:	b	1a7b4 <__assert_fail@plt+0x96fc>
   199f4:	ldr	r0, [fp, #-12]
   199f8:	cmp	r0, #0
   199fc:	bge	19b54 <__assert_fail@plt+0x8a9c>
   19a00:	mov	r0, #1
   19a04:	cmp	r0, #0
   19a08:	bne	19ac0 <__assert_fail@plt+0x8a08>
   19a0c:	b	19a10 <__assert_fail@plt+0x8958>
   19a10:	b	19a44 <__assert_fail@plt+0x898c>
   19a14:	ldr	r0, [fp, #-8]
   19a18:	ldr	r1, [r0]
   19a1c:	ldr	r0, [r0, #4]
   19a20:	ldr	r2, [fp, #-12]
   19a24:	mvn	r3, #0
   19a28:	udiv	r2, r3, r2
   19a2c:	subs	r1, r1, r2
   19a30:	sbcs	r0, r0, #0
   19a34:	str	r1, [fp, #-272]	; 0xfffffef0
   19a38:	str	r0, [fp, #-276]	; 0xfffffeec
   19a3c:	bcc	19c38 <__assert_fail@plt+0x8b80>
   19a40:	b	19c58 <__assert_fail@plt+0x8ba0>
   19a44:	b	19a48 <__assert_fail@plt+0x8990>
   19a48:	ldr	r0, [pc, #3468]	; 1a7dc <__assert_fail@plt+0x9724>
   19a4c:	ldr	r1, [fp, #-12]
   19a50:	cmp	r1, r0
   19a54:	blt	19a6c <__assert_fail@plt+0x89b4>
   19a58:	b	19a78 <__assert_fail@plt+0x89c0>
   19a5c:	ldr	r0, [fp, #-12]
   19a60:	movw	r1, #0
   19a64:	cmp	r1, r0
   19a68:	bge	19a78 <__assert_fail@plt+0x89c0>
   19a6c:	movw	r0, #1
   19a70:	str	r0, [fp, #-280]	; 0xfffffee8
   19a74:	b	19a90 <__assert_fail@plt+0x89d8>
   19a78:	ldr	r0, [fp, #-12]
   19a7c:	movw	r1, #0
   19a80:	sub	r0, r1, r0
   19a84:	mvn	r1, #0
   19a88:	udiv	r0, r1, r0
   19a8c:	str	r0, [fp, #-280]	; 0xfffffee8
   19a90:	ldr	r0, [fp, #-280]	; 0xfffffee8
   19a94:	ldr	r1, [fp, #-8]
   19a98:	ldr	r2, [r1]
   19a9c:	ldr	r1, [r1, #4]
   19aa0:	mvn	r1, r1
   19aa4:	mvn	r2, r2
   19aa8:	subs	r0, r2, r0
   19aac:	sbcs	r1, r1, #0
   19ab0:	str	r0, [sp, #284]	; 0x11c
   19ab4:	str	r1, [sp, #280]	; 0x118
   19ab8:	bcs	19c38 <__assert_fail@plt+0x8b80>
   19abc:	b	19c58 <__assert_fail@plt+0x8ba0>
   19ac0:	b	19ac4 <__assert_fail@plt+0x8a0c>
   19ac4:	b	19b24 <__assert_fail@plt+0x8a6c>
   19ac8:	b	19b24 <__assert_fail@plt+0x8a6c>
   19acc:	ldr	r0, [fp, #-12]
   19ad0:	cmn	r0, #1
   19ad4:	bne	19b24 <__assert_fail@plt+0x8a6c>
   19ad8:	b	19af8 <__assert_fail@plt+0x8a40>
   19adc:	ldr	r0, [fp, #-8]
   19ae0:	ldr	r1, [r0]
   19ae4:	ldr	r0, [r0, #4]
   19ae8:	orr	r0, r1, r0
   19aec:	cmp	r0, #0
   19af0:	bne	19c38 <__assert_fail@plt+0x8b80>
   19af4:	b	19c58 <__assert_fail@plt+0x8ba0>
   19af8:	ldr	r0, [fp, #-8]
   19afc:	ldr	r1, [r0]
   19b00:	ldr	r0, [r0, #4]
   19b04:	orr	r0, r1, r0
   19b08:	cmp	r0, #0
   19b0c:	beq	19c58 <__assert_fail@plt+0x8ba0>
   19b10:	b	19b14 <__assert_fail@plt+0x8a5c>
   19b14:	mov	r0, #0
   19b18:	cmp	r0, #0
   19b1c:	bne	19c38 <__assert_fail@plt+0x8b80>
   19b20:	b	19c58 <__assert_fail@plt+0x8ba0>
   19b24:	ldr	r0, [fp, #-12]
   19b28:	mov	r1, #0
   19b2c:	sdiv	r0, r1, r0
   19b30:	ldr	r1, [fp, #-8]
   19b34:	ldr	r2, [r1]
   19b38:	ldr	r1, [r1, #4]
   19b3c:	subs	r2, r0, r2
   19b40:	rscs	r0, r1, r0, asr #31
   19b44:	str	r2, [sp, #276]	; 0x114
   19b48:	str	r0, [sp, #272]	; 0x110
   19b4c:	bcc	19c38 <__assert_fail@plt+0x8b80>
   19b50:	b	19c58 <__assert_fail@plt+0x8ba0>
   19b54:	ldr	r0, [fp, #-12]
   19b58:	cmp	r0, #0
   19b5c:	bne	19b64 <__assert_fail@plt+0x8aac>
   19b60:	b	19c58 <__assert_fail@plt+0x8ba0>
   19b64:	mov	r0, #1
   19b68:	cmp	r0, #0
   19b6c:	bne	19c08 <__assert_fail@plt+0x8b50>
   19b70:	b	19b74 <__assert_fail@plt+0x8abc>
   19b74:	b	19b7c <__assert_fail@plt+0x8ac4>
   19b78:	b	19b80 <__assert_fail@plt+0x8ac8>
   19b7c:	b	19bd0 <__assert_fail@plt+0x8b18>
   19b80:	ldr	r0, [fp, #-8]
   19b84:	ldr	r1, [r0]
   19b88:	ldr	r0, [r0, #4]
   19b8c:	and	r0, r1, r0
   19b90:	cmn	r0, #1
   19b94:	bne	19bd0 <__assert_fail@plt+0x8b18>
   19b98:	b	19b9c <__assert_fail@plt+0x8ae4>
   19b9c:	b	19ba0 <__assert_fail@plt+0x8ae8>
   19ba0:	ldr	r0, [fp, #-12]
   19ba4:	add	r0, r0, #0
   19ba8:	movw	r1, #0
   19bac:	cmp	r1, r0
   19bb0:	blt	19c38 <__assert_fail@plt+0x8b80>
   19bb4:	b	19c58 <__assert_fail@plt+0x8ba0>
   19bb8:	ldr	r0, [fp, #-12]
   19bbc:	sub	r0, r0, #1
   19bc0:	mvn	r1, #0
   19bc4:	cmp	r1, r0
   19bc8:	blt	19c38 <__assert_fail@plt+0x8b80>
   19bcc:	b	19c58 <__assert_fail@plt+0x8ba0>
   19bd0:	ldr	r0, [fp, #-8]
   19bd4:	ldr	r2, [r0]
   19bd8:	ldr	r3, [r0, #4]
   19bdc:	mov	r0, #0
   19be0:	str	r0, [sp, #268]	; 0x10c
   19be4:	ldr	r1, [sp, #268]	; 0x10c
   19be8:	bl	1cb38 <__assert_fail@plt+0xba80>
   19bec:	ldr	r2, [fp, #-12]
   19bf0:	subs	r0, r0, r2
   19bf4:	sbcs	r1, r1, r2, asr #31
   19bf8:	str	r0, [sp, #264]	; 0x108
   19bfc:	str	r1, [sp, #260]	; 0x104
   19c00:	bcc	19c38 <__assert_fail@plt+0x8b80>
   19c04:	b	19c58 <__assert_fail@plt+0x8ba0>
   19c08:	ldr	r0, [fp, #-12]
   19c0c:	mvn	r1, #0
   19c10:	udiv	r0, r1, r0
   19c14:	ldr	r1, [fp, #-8]
   19c18:	ldr	r2, [r1]
   19c1c:	ldr	r1, [r1, #4]
   19c20:	subs	r0, r0, r2
   19c24:	rscs	r1, r1, #0
   19c28:	str	r0, [sp, #256]	; 0x100
   19c2c:	str	r1, [sp, #252]	; 0xfc
   19c30:	bcs	19c58 <__assert_fail@plt+0x8ba0>
   19c34:	b	19c38 <__assert_fail@plt+0x8b80>
   19c38:	ldr	r0, [fp, #-8]
   19c3c:	ldr	r0, [r0]
   19c40:	ldr	r1, [fp, #-12]
   19c44:	mul	r0, r0, r1
   19c48:	mov	r1, #0
   19c4c:	str	r1, [fp, #-20]	; 0xffffffec
   19c50:	str	r0, [fp, #-24]	; 0xffffffe8
   19c54:	b	1a798 <__assert_fail@plt+0x96e0>
   19c58:	ldr	r0, [fp, #-8]
   19c5c:	ldr	r0, [r0]
   19c60:	ldr	r1, [fp, #-12]
   19c64:	mul	r0, r0, r1
   19c68:	mov	r1, #0
   19c6c:	str	r1, [fp, #-20]	; 0xffffffec
   19c70:	str	r0, [fp, #-24]	; 0xffffffe8
   19c74:	b	1a7b4 <__assert_fail@plt+0x96fc>
   19c78:	b	1a194 <__assert_fail@plt+0x90dc>
   19c7c:	b	19f10 <__assert_fail@plt+0x8e58>
   19c80:	ldr	r0, [fp, #-12]
   19c84:	cmp	r0, #0
   19c88:	bge	19dfc <__assert_fail@plt+0x8d44>
   19c8c:	mov	r0, #1
   19c90:	cmp	r0, #0
   19c94:	bne	19d50 <__assert_fail@plt+0x8c98>
   19c98:	b	19c9c <__assert_fail@plt+0x8be4>
   19c9c:	b	19ca0 <__assert_fail@plt+0x8be8>
   19ca0:	ldr	r0, [fp, #-8]
   19ca4:	ldr	r1, [r0]
   19ca8:	ldr	r0, [r0, #4]
   19cac:	ldr	r2, [fp, #-12]
   19cb0:	mvn	r3, #-2147483648	; 0x80000000
   19cb4:	sdiv	r2, r3, r2
   19cb8:	subs	r1, r1, r2
   19cbc:	sbcs	r0, r0, r2, asr #31
   19cc0:	str	r1, [sp, #248]	; 0xf8
   19cc4:	str	r0, [sp, #244]	; 0xf4
   19cc8:	bcc	19ed0 <__assert_fail@plt+0x8e18>
   19ccc:	b	19ef0 <__assert_fail@plt+0x8e38>
   19cd0:	b	19cd4 <__assert_fail@plt+0x8c1c>
   19cd4:	ldr	r0, [pc, #2816]	; 1a7dc <__assert_fail@plt+0x9724>
   19cd8:	ldr	r1, [fp, #-12]
   19cdc:	cmp	r1, r0
   19ce0:	blt	19cf8 <__assert_fail@plt+0x8c40>
   19ce4:	b	19d04 <__assert_fail@plt+0x8c4c>
   19ce8:	ldr	r0, [fp, #-12]
   19cec:	movw	r1, #0
   19cf0:	cmp	r1, r0
   19cf4:	bge	19d04 <__assert_fail@plt+0x8c4c>
   19cf8:	movw	r0, #0
   19cfc:	str	r0, [sp, #240]	; 0xf0
   19d00:	b	19d1c <__assert_fail@plt+0x8c64>
   19d04:	ldr	r0, [pc, #2772]	; 1a7e0 <__assert_fail@plt+0x9728>
   19d08:	ldr	r1, [fp, #-12]
   19d0c:	movw	r2, #0
   19d10:	sub	r1, r2, r1
   19d14:	sdiv	r0, r0, r1
   19d18:	str	r0, [sp, #240]	; 0xf0
   19d1c:	ldr	r0, [sp, #240]	; 0xf0
   19d20:	ldr	r1, [fp, #-8]
   19d24:	ldr	r2, [r1]
   19d28:	ldr	r1, [r1, #4]
   19d2c:	mvn	r1, r1
   19d30:	mvn	r2, r2
   19d34:	subs	r2, r2, r0
   19d38:	sbcs	r0, r1, r0, asr #31
   19d3c:	str	r2, [sp, #236]	; 0xec
   19d40:	str	r0, [sp, #232]	; 0xe8
   19d44:	bcs	19ed0 <__assert_fail@plt+0x8e18>
   19d48:	b	19ef0 <__assert_fail@plt+0x8e38>
   19d4c:	andhi	r0, r0, r1
   19d50:	ldr	r0, [fp, #-12]
   19d54:	cmn	r0, #1
   19d58:	bne	19dcc <__assert_fail@plt+0x8d14>
   19d5c:	b	19d80 <__assert_fail@plt+0x8cc8>
   19d60:	ldr	r0, [fp, #-8]
   19d64:	ldr	r1, [r0]
   19d68:	ldr	r0, [r0, #4]
   19d6c:	eor	r1, r1, #-2147483648	; 0x80000000
   19d70:	orr	r0, r1, r0
   19d74:	cmp	r0, #0
   19d78:	bne	19ed0 <__assert_fail@plt+0x8e18>
   19d7c:	b	19ef0 <__assert_fail@plt+0x8e38>
   19d80:	ldr	r0, [fp, #-8]
   19d84:	ldr	r1, [r0]
   19d88:	ldr	r0, [r0, #4]
   19d8c:	orr	r0, r1, r0
   19d90:	cmp	r0, #0
   19d94:	beq	19ef0 <__assert_fail@plt+0x8e38>
   19d98:	b	19d9c <__assert_fail@plt+0x8ce4>
   19d9c:	ldr	r0, [fp, #-8]
   19da0:	ldr	r1, [r0]
   19da4:	ldr	r0, [r0, #4]
   19da8:	subs	r1, r1, #1
   19dac:	sbc	r0, r0, #0
   19db0:	mvn	r2, #-2147483648	; 0x80000000
   19db4:	subs	r1, r2, r1
   19db8:	rscs	r0, r0, #0
   19dbc:	str	r1, [sp, #228]	; 0xe4
   19dc0:	str	r0, [sp, #224]	; 0xe0
   19dc4:	bcc	19ed0 <__assert_fail@plt+0x8e18>
   19dc8:	b	19ef0 <__assert_fail@plt+0x8e38>
   19dcc:	ldr	r0, [fp, #-12]
   19dd0:	mov	r1, #-2147483648	; 0x80000000
   19dd4:	sdiv	r0, r1, r0
   19dd8:	ldr	r1, [fp, #-8]
   19ddc:	ldr	r2, [r1]
   19de0:	ldr	r1, [r1, #4]
   19de4:	subs	r2, r0, r2
   19de8:	rscs	r0, r1, r0, asr #31
   19dec:	str	r2, [sp, #220]	; 0xdc
   19df0:	str	r0, [sp, #216]	; 0xd8
   19df4:	bcc	19ed0 <__assert_fail@plt+0x8e18>
   19df8:	b	19ef0 <__assert_fail@plt+0x8e38>
   19dfc:	ldr	r0, [fp, #-12]
   19e00:	cmp	r0, #0
   19e04:	bne	19e0c <__assert_fail@plt+0x8d54>
   19e08:	b	19ef0 <__assert_fail@plt+0x8e38>
   19e0c:	mov	r0, #1
   19e10:	cmp	r0, #0
   19e14:	bne	19ea0 <__assert_fail@plt+0x8de8>
   19e18:	b	19e1c <__assert_fail@plt+0x8d64>
   19e1c:	ldr	r0, [fp, #-8]
   19e20:	ldr	r1, [r0]
   19e24:	ldr	r0, [r0, #4]
   19e28:	and	r0, r1, r0
   19e2c:	cmn	r0, #1
   19e30:	bne	19e6c <__assert_fail@plt+0x8db4>
   19e34:	b	19e38 <__assert_fail@plt+0x8d80>
   19e38:	b	19e3c <__assert_fail@plt+0x8d84>
   19e3c:	ldr	r0, [fp, #-12]
   19e40:	add	r0, r0, #-2147483648	; 0x80000000
   19e44:	movw	r1, #0
   19e48:	cmp	r1, r0
   19e4c:	blt	19ed0 <__assert_fail@plt+0x8e18>
   19e50:	b	19ef0 <__assert_fail@plt+0x8e38>
   19e54:	ldr	r0, [pc, #2436]	; 1a7e0 <__assert_fail@plt+0x9728>
   19e58:	ldr	r1, [fp, #-12]
   19e5c:	sub	r1, r1, #1
   19e60:	cmp	r0, r1
   19e64:	blt	19ed0 <__assert_fail@plt+0x8e18>
   19e68:	b	19ef0 <__assert_fail@plt+0x8e38>
   19e6c:	ldr	r0, [fp, #-8]
   19e70:	ldr	r2, [r0]
   19e74:	ldr	r3, [r0, #4]
   19e78:	mov	r0, #-2147483648	; 0x80000000
   19e7c:	mvn	r1, #0
   19e80:	bl	1cb38 <__assert_fail@plt+0xba80>
   19e84:	ldr	r2, [fp, #-12]
   19e88:	subs	r0, r0, r2
   19e8c:	sbcs	r1, r1, r2, asr #31
   19e90:	str	r0, [sp, #212]	; 0xd4
   19e94:	str	r1, [sp, #208]	; 0xd0
   19e98:	bcc	19ed0 <__assert_fail@plt+0x8e18>
   19e9c:	b	19ef0 <__assert_fail@plt+0x8e38>
   19ea0:	ldr	r0, [fp, #-12]
   19ea4:	mvn	r1, #-2147483648	; 0x80000000
   19ea8:	sdiv	r0, r1, r0
   19eac:	ldr	r1, [fp, #-8]
   19eb0:	ldr	r2, [r1]
   19eb4:	ldr	r1, [r1, #4]
   19eb8:	subs	r2, r0, r2
   19ebc:	rscs	r0, r1, r0, asr #31
   19ec0:	str	r2, [sp, #204]	; 0xcc
   19ec4:	str	r0, [sp, #200]	; 0xc8
   19ec8:	bcs	19ef0 <__assert_fail@plt+0x8e38>
   19ecc:	b	19ed0 <__assert_fail@plt+0x8e18>
   19ed0:	ldr	r0, [fp, #-8]
   19ed4:	ldr	r0, [r0]
   19ed8:	ldr	r1, [fp, #-12]
   19edc:	mul	r0, r0, r1
   19ee0:	asr	r1, r0, #31
   19ee4:	str	r0, [fp, #-24]	; 0xffffffe8
   19ee8:	str	r1, [fp, #-20]	; 0xffffffec
   19eec:	b	1a798 <__assert_fail@plt+0x96e0>
   19ef0:	ldr	r0, [fp, #-8]
   19ef4:	ldr	r0, [r0]
   19ef8:	ldr	r1, [fp, #-12]
   19efc:	mul	r0, r0, r1
   19f00:	asr	r1, r0, #31
   19f04:	str	r0, [fp, #-24]	; 0xffffffe8
   19f08:	str	r1, [fp, #-20]	; 0xffffffec
   19f0c:	b	1a7b4 <__assert_fail@plt+0x96fc>
   19f10:	ldr	r0, [fp, #-12]
   19f14:	cmp	r0, #0
   19f18:	bge	1a070 <__assert_fail@plt+0x8fb8>
   19f1c:	mov	r0, #1
   19f20:	cmp	r0, #0
   19f24:	bne	19fdc <__assert_fail@plt+0x8f24>
   19f28:	b	19f2c <__assert_fail@plt+0x8e74>
   19f2c:	b	19f60 <__assert_fail@plt+0x8ea8>
   19f30:	ldr	r0, [fp, #-8]
   19f34:	ldr	r1, [r0]
   19f38:	ldr	r0, [r0, #4]
   19f3c:	ldr	r2, [fp, #-12]
   19f40:	mvn	r3, #0
   19f44:	udiv	r2, r3, r2
   19f48:	subs	r1, r1, r2
   19f4c:	sbcs	r0, r0, #0
   19f50:	str	r1, [sp, #196]	; 0xc4
   19f54:	str	r0, [sp, #192]	; 0xc0
   19f58:	bcc	1a154 <__assert_fail@plt+0x909c>
   19f5c:	b	1a174 <__assert_fail@plt+0x90bc>
   19f60:	b	19f64 <__assert_fail@plt+0x8eac>
   19f64:	ldr	r0, [pc, #2160]	; 1a7dc <__assert_fail@plt+0x9724>
   19f68:	ldr	r1, [fp, #-12]
   19f6c:	cmp	r1, r0
   19f70:	blt	19f88 <__assert_fail@plt+0x8ed0>
   19f74:	b	19f94 <__assert_fail@plt+0x8edc>
   19f78:	ldr	r0, [fp, #-12]
   19f7c:	movw	r1, #0
   19f80:	cmp	r1, r0
   19f84:	bge	19f94 <__assert_fail@plt+0x8edc>
   19f88:	movw	r0, #1
   19f8c:	str	r0, [sp, #188]	; 0xbc
   19f90:	b	19fac <__assert_fail@plt+0x8ef4>
   19f94:	ldr	r0, [fp, #-12]
   19f98:	movw	r1, #0
   19f9c:	sub	r0, r1, r0
   19fa0:	mvn	r1, #0
   19fa4:	udiv	r0, r1, r0
   19fa8:	str	r0, [sp, #188]	; 0xbc
   19fac:	ldr	r0, [sp, #188]	; 0xbc
   19fb0:	ldr	r1, [fp, #-8]
   19fb4:	ldr	r2, [r1]
   19fb8:	ldr	r1, [r1, #4]
   19fbc:	mvn	r1, r1
   19fc0:	mvn	r2, r2
   19fc4:	subs	r0, r2, r0
   19fc8:	sbcs	r1, r1, #0
   19fcc:	str	r0, [sp, #184]	; 0xb8
   19fd0:	str	r1, [sp, #180]	; 0xb4
   19fd4:	bcs	1a154 <__assert_fail@plt+0x909c>
   19fd8:	b	1a174 <__assert_fail@plt+0x90bc>
   19fdc:	b	19fe0 <__assert_fail@plt+0x8f28>
   19fe0:	b	1a040 <__assert_fail@plt+0x8f88>
   19fe4:	b	1a040 <__assert_fail@plt+0x8f88>
   19fe8:	ldr	r0, [fp, #-12]
   19fec:	cmn	r0, #1
   19ff0:	bne	1a040 <__assert_fail@plt+0x8f88>
   19ff4:	b	1a014 <__assert_fail@plt+0x8f5c>
   19ff8:	ldr	r0, [fp, #-8]
   19ffc:	ldr	r1, [r0]
   1a000:	ldr	r0, [r0, #4]
   1a004:	orr	r0, r1, r0
   1a008:	cmp	r0, #0
   1a00c:	bne	1a154 <__assert_fail@plt+0x909c>
   1a010:	b	1a174 <__assert_fail@plt+0x90bc>
   1a014:	ldr	r0, [fp, #-8]
   1a018:	ldr	r1, [r0]
   1a01c:	ldr	r0, [r0, #4]
   1a020:	orr	r0, r1, r0
   1a024:	cmp	r0, #0
   1a028:	beq	1a174 <__assert_fail@plt+0x90bc>
   1a02c:	b	1a030 <__assert_fail@plt+0x8f78>
   1a030:	mov	r0, #0
   1a034:	cmp	r0, #0
   1a038:	bne	1a154 <__assert_fail@plt+0x909c>
   1a03c:	b	1a174 <__assert_fail@plt+0x90bc>
   1a040:	ldr	r0, [fp, #-12]
   1a044:	mov	r1, #0
   1a048:	sdiv	r0, r1, r0
   1a04c:	ldr	r1, [fp, #-8]
   1a050:	ldr	r2, [r1]
   1a054:	ldr	r1, [r1, #4]
   1a058:	subs	r2, r0, r2
   1a05c:	rscs	r0, r1, r0, asr #31
   1a060:	str	r2, [sp, #176]	; 0xb0
   1a064:	str	r0, [sp, #172]	; 0xac
   1a068:	bcc	1a154 <__assert_fail@plt+0x909c>
   1a06c:	b	1a174 <__assert_fail@plt+0x90bc>
   1a070:	ldr	r0, [fp, #-12]
   1a074:	cmp	r0, #0
   1a078:	bne	1a080 <__assert_fail@plt+0x8fc8>
   1a07c:	b	1a174 <__assert_fail@plt+0x90bc>
   1a080:	mov	r0, #1
   1a084:	cmp	r0, #0
   1a088:	bne	1a124 <__assert_fail@plt+0x906c>
   1a08c:	b	1a090 <__assert_fail@plt+0x8fd8>
   1a090:	b	1a098 <__assert_fail@plt+0x8fe0>
   1a094:	b	1a09c <__assert_fail@plt+0x8fe4>
   1a098:	b	1a0ec <__assert_fail@plt+0x9034>
   1a09c:	ldr	r0, [fp, #-8]
   1a0a0:	ldr	r1, [r0]
   1a0a4:	ldr	r0, [r0, #4]
   1a0a8:	and	r0, r1, r0
   1a0ac:	cmn	r0, #1
   1a0b0:	bne	1a0ec <__assert_fail@plt+0x9034>
   1a0b4:	b	1a0b8 <__assert_fail@plt+0x9000>
   1a0b8:	b	1a0bc <__assert_fail@plt+0x9004>
   1a0bc:	ldr	r0, [fp, #-12]
   1a0c0:	add	r0, r0, #0
   1a0c4:	movw	r1, #0
   1a0c8:	cmp	r1, r0
   1a0cc:	blt	1a154 <__assert_fail@plt+0x909c>
   1a0d0:	b	1a174 <__assert_fail@plt+0x90bc>
   1a0d4:	ldr	r0, [fp, #-12]
   1a0d8:	sub	r0, r0, #1
   1a0dc:	mvn	r1, #0
   1a0e0:	cmp	r1, r0
   1a0e4:	blt	1a154 <__assert_fail@plt+0x909c>
   1a0e8:	b	1a174 <__assert_fail@plt+0x90bc>
   1a0ec:	ldr	r0, [fp, #-8]
   1a0f0:	ldr	r2, [r0]
   1a0f4:	ldr	r3, [r0, #4]
   1a0f8:	mov	r0, #0
   1a0fc:	str	r0, [sp, #168]	; 0xa8
   1a100:	ldr	r1, [sp, #168]	; 0xa8
   1a104:	bl	1cb38 <__assert_fail@plt+0xba80>
   1a108:	ldr	r2, [fp, #-12]
   1a10c:	subs	r0, r0, r2
   1a110:	sbcs	r1, r1, r2, asr #31
   1a114:	str	r0, [sp, #164]	; 0xa4
   1a118:	str	r1, [sp, #160]	; 0xa0
   1a11c:	bcc	1a154 <__assert_fail@plt+0x909c>
   1a120:	b	1a174 <__assert_fail@plt+0x90bc>
   1a124:	ldr	r0, [fp, #-12]
   1a128:	mvn	r1, #0
   1a12c:	udiv	r0, r1, r0
   1a130:	ldr	r1, [fp, #-8]
   1a134:	ldr	r2, [r1]
   1a138:	ldr	r1, [r1, #4]
   1a13c:	subs	r0, r0, r2
   1a140:	rscs	r1, r1, #0
   1a144:	str	r0, [sp, #156]	; 0x9c
   1a148:	str	r1, [sp, #152]	; 0x98
   1a14c:	bcs	1a174 <__assert_fail@plt+0x90bc>
   1a150:	b	1a154 <__assert_fail@plt+0x909c>
   1a154:	ldr	r0, [fp, #-8]
   1a158:	ldr	r0, [r0]
   1a15c:	ldr	r1, [fp, #-12]
   1a160:	mul	r0, r0, r1
   1a164:	mov	r1, #0
   1a168:	str	r1, [fp, #-20]	; 0xffffffec
   1a16c:	str	r0, [fp, #-24]	; 0xffffffe8
   1a170:	b	1a798 <__assert_fail@plt+0x96e0>
   1a174:	ldr	r0, [fp, #-8]
   1a178:	ldr	r0, [r0]
   1a17c:	ldr	r1, [fp, #-12]
   1a180:	mul	r0, r0, r1
   1a184:	mov	r1, #0
   1a188:	str	r1, [fp, #-20]	; 0xffffffec
   1a18c:	str	r0, [fp, #-24]	; 0xffffffe8
   1a190:	b	1a7b4 <__assert_fail@plt+0x96fc>
   1a194:	b	1a4b0 <__assert_fail@plt+0x93f8>
   1a198:	ldr	r0, [fp, #-12]
   1a19c:	cmp	r0, #0
   1a1a0:	bge	1a364 <__assert_fail@plt+0x92ac>
   1a1a4:	mov	r0, #1
   1a1a8:	cmp	r0, #0
   1a1ac:	bne	1a2ac <__assert_fail@plt+0x91f4>
   1a1b0:	b	1a1b4 <__assert_fail@plt+0x90fc>
   1a1b4:	b	1a1b8 <__assert_fail@plt+0x9100>
   1a1b8:	ldr	r0, [fp, #-8]
   1a1bc:	ldr	r1, [r0]
   1a1c0:	ldr	r0, [r0, #4]
   1a1c4:	ldr	r2, [fp, #-12]
   1a1c8:	asr	r3, r2, #31
   1a1cc:	mvn	ip, #0
   1a1d0:	mvn	lr, #-2147483648	; 0x80000000
   1a1d4:	str	r0, [sp, #148]	; 0x94
   1a1d8:	mov	r0, ip
   1a1dc:	str	r1, [sp, #144]	; 0x90
   1a1e0:	mov	r1, lr
   1a1e4:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   1a1e8:	ldr	r2, [sp, #144]	; 0x90
   1a1ec:	subs	r0, r2, r0
   1a1f0:	ldr	r2, [sp, #148]	; 0x94
   1a1f4:	sbcs	r1, r2, r1
   1a1f8:	str	r0, [sp, #140]	; 0x8c
   1a1fc:	str	r1, [sp, #136]	; 0x88
   1a200:	bcc	1a458 <__assert_fail@plt+0x93a0>
   1a204:	b	1a484 <__assert_fail@plt+0x93cc>
   1a208:	b	1a20c <__assert_fail@plt+0x9154>
   1a20c:	ldr	r0, [pc, #1480]	; 1a7dc <__assert_fail@plt+0x9724>
   1a210:	ldr	r1, [fp, #-12]
   1a214:	cmp	r1, r0
   1a218:	blt	1a230 <__assert_fail@plt+0x9178>
   1a21c:	b	1a244 <__assert_fail@plt+0x918c>
   1a220:	ldr	r0, [fp, #-12]
   1a224:	movw	r1, #0
   1a228:	cmp	r1, r0
   1a22c:	bge	1a244 <__assert_fail@plt+0x918c>
   1a230:	mov	r0, #0
   1a234:	mvn	r1, #0
   1a238:	str	r1, [sp, #132]	; 0x84
   1a23c:	str	r0, [sp, #128]	; 0x80
   1a240:	b	1a278 <__assert_fail@plt+0x91c0>
   1a244:	ldr	r0, [fp, #-12]
   1a248:	rsb	r0, r0, #0
   1a24c:	asr	r3, r0, #31
   1a250:	mvn	r1, #0
   1a254:	mvn	r2, #-2147483648	; 0x80000000
   1a258:	str	r0, [sp, #124]	; 0x7c
   1a25c:	mov	r0, r1
   1a260:	mov	r1, r2
   1a264:	ldr	r2, [sp, #124]	; 0x7c
   1a268:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   1a26c:	str	r0, [sp, #132]	; 0x84
   1a270:	str	r1, [sp, #128]	; 0x80
   1a274:	b	1a278 <__assert_fail@plt+0x91c0>
   1a278:	ldr	r0, [sp, #128]	; 0x80
   1a27c:	ldr	r1, [sp, #132]	; 0x84
   1a280:	ldr	r2, [fp, #-8]
   1a284:	ldr	r3, [r2]
   1a288:	ldr	r2, [r2, #4]
   1a28c:	mvn	r2, r2
   1a290:	mvn	r3, r3
   1a294:	subs	r1, r3, r1
   1a298:	sbcs	r0, r2, r0
   1a29c:	str	r1, [sp, #120]	; 0x78
   1a2a0:	str	r0, [sp, #116]	; 0x74
   1a2a4:	bcs	1a458 <__assert_fail@plt+0x93a0>
   1a2a8:	b	1a484 <__assert_fail@plt+0x93cc>
   1a2ac:	ldr	r0, [fp, #-12]
   1a2b0:	cmn	r0, #1
   1a2b4:	bne	1a31c <__assert_fail@plt+0x9264>
   1a2b8:	b	1a2dc <__assert_fail@plt+0x9224>
   1a2bc:	ldr	r0, [fp, #-8]
   1a2c0:	ldr	r1, [r0]
   1a2c4:	ldr	r0, [r0, #4]
   1a2c8:	eor	r0, r0, #-2147483648	; 0x80000000
   1a2cc:	orr	r0, r1, r0
   1a2d0:	cmp	r0, #0
   1a2d4:	bne	1a458 <__assert_fail@plt+0x93a0>
   1a2d8:	b	1a484 <__assert_fail@plt+0x93cc>
   1a2dc:	ldr	r0, [fp, #-8]
   1a2e0:	ldr	r1, [r0]
   1a2e4:	ldr	r0, [r0, #4]
   1a2e8:	orr	r0, r1, r0
   1a2ec:	cmp	r0, #0
   1a2f0:	beq	1a484 <__assert_fail@plt+0x93cc>
   1a2f4:	b	1a2f8 <__assert_fail@plt+0x9240>
   1a2f8:	ldr	r0, [fp, #-8]
   1a2fc:	ldr	r1, [r0]
   1a300:	ldr	r0, [r0, #4]
   1a304:	subs	r1, r1, #1
   1a308:	sbc	r0, r0, #0
   1a30c:	cmp	r0, #0
   1a310:	str	r1, [sp, #112]	; 0x70
   1a314:	blt	1a458 <__assert_fail@plt+0x93a0>
   1a318:	b	1a484 <__assert_fail@plt+0x93cc>
   1a31c:	ldr	r0, [fp, #-12]
   1a320:	asr	r3, r0, #31
   1a324:	mov	r1, #0
   1a328:	mov	r2, #-2147483648	; 0x80000000
   1a32c:	str	r0, [sp, #108]	; 0x6c
   1a330:	mov	r0, r1
   1a334:	mov	r1, r2
   1a338:	ldr	r2, [sp, #108]	; 0x6c
   1a33c:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   1a340:	ldr	r2, [fp, #-8]
   1a344:	ldr	r3, [r2]
   1a348:	ldr	r2, [r2, #4]
   1a34c:	subs	r0, r0, r3
   1a350:	sbcs	r1, r1, r2
   1a354:	str	r0, [sp, #104]	; 0x68
   1a358:	str	r1, [sp, #100]	; 0x64
   1a35c:	bcc	1a458 <__assert_fail@plt+0x93a0>
   1a360:	b	1a484 <__assert_fail@plt+0x93cc>
   1a364:	ldr	r0, [fp, #-12]
   1a368:	cmp	r0, #0
   1a36c:	bne	1a374 <__assert_fail@plt+0x92bc>
   1a370:	b	1a484 <__assert_fail@plt+0x93cc>
   1a374:	mov	r0, #1
   1a378:	cmp	r0, #0
   1a37c:	bne	1a410 <__assert_fail@plt+0x9358>
   1a380:	b	1a384 <__assert_fail@plt+0x92cc>
   1a384:	ldr	r0, [fp, #-8]
   1a388:	ldr	r1, [r0]
   1a38c:	ldr	r0, [r0, #4]
   1a390:	and	r0, r1, r0
   1a394:	cmn	r0, #1
   1a398:	bne	1a3dc <__assert_fail@plt+0x9324>
   1a39c:	b	1a3a0 <__assert_fail@plt+0x92e8>
   1a3a0:	b	1a3a4 <__assert_fail@plt+0x92ec>
   1a3a4:	ldr	r0, [fp, #-12]
   1a3a8:	mov	r1, #-2147483648	; 0x80000000
   1a3ac:	add	r1, r1, r0, asr #31
   1a3b0:	rsbs	r0, r0, #0
   1a3b4:	rscs	r1, r1, #0
   1a3b8:	str	r0, [sp, #96]	; 0x60
   1a3bc:	str	r1, [sp, #92]	; 0x5c
   1a3c0:	blt	1a458 <__assert_fail@plt+0x93a0>
   1a3c4:	b	1a484 <__assert_fail@plt+0x93cc>
   1a3c8:	mov	r0, #0
   1a3cc:	cmp	r0, #0
   1a3d0:	bne	1a458 <__assert_fail@plt+0x93a0>
   1a3d4:	b	1a484 <__assert_fail@plt+0x93cc>
   1a3d8:			; <UNDEFINED> instruction: 0xffff8000
   1a3dc:	ldr	r0, [fp, #-8]
   1a3e0:	ldr	r2, [r0]
   1a3e4:	ldr	r3, [r0, #4]
   1a3e8:	mov	r0, #0
   1a3ec:	mov	r1, #-2147483648	; 0x80000000
   1a3f0:	bl	1cb38 <__assert_fail@plt+0xba80>
   1a3f4:	ldr	r2, [fp, #-12]
   1a3f8:	subs	r0, r0, r2
   1a3fc:	sbcs	r1, r1, r2, asr #31
   1a400:	str	r0, [sp, #88]	; 0x58
   1a404:	str	r1, [sp, #84]	; 0x54
   1a408:	bcc	1a458 <__assert_fail@plt+0x93a0>
   1a40c:	b	1a484 <__assert_fail@plt+0x93cc>
   1a410:	ldr	r0, [fp, #-12]
   1a414:	asr	r3, r0, #31
   1a418:	mvn	r1, #0
   1a41c:	mvn	r2, #-2147483648	; 0x80000000
   1a420:	str	r0, [sp, #80]	; 0x50
   1a424:	mov	r0, r1
   1a428:	mov	r1, r2
   1a42c:	ldr	r2, [sp, #80]	; 0x50
   1a430:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   1a434:	ldr	r2, [fp, #-8]
   1a438:	ldr	r3, [r2]
   1a43c:	ldr	r2, [r2, #4]
   1a440:	subs	r0, r0, r3
   1a444:	sbcs	r1, r1, r2
   1a448:	str	r0, [sp, #76]	; 0x4c
   1a44c:	str	r1, [sp, #72]	; 0x48
   1a450:	bcs	1a484 <__assert_fail@plt+0x93cc>
   1a454:	b	1a458 <__assert_fail@plt+0x93a0>
   1a458:	ldr	r0, [fp, #-8]
   1a45c:	ldr	r1, [r0]
   1a460:	ldr	r0, [r0, #4]
   1a464:	ldr	r2, [fp, #-12]
   1a468:	asr	r3, r2, #31
   1a46c:	umull	ip, lr, r1, r2
   1a470:	mla	r1, r1, r3, lr
   1a474:	mla	r0, r0, r2, r1
   1a478:	str	ip, [fp, #-24]	; 0xffffffe8
   1a47c:	str	r0, [fp, #-20]	; 0xffffffec
   1a480:	b	1a798 <__assert_fail@plt+0x96e0>
   1a484:	ldr	r0, [fp, #-8]
   1a488:	ldr	r1, [r0]
   1a48c:	ldr	r0, [r0, #4]
   1a490:	ldr	r2, [fp, #-12]
   1a494:	asr	r3, r2, #31
   1a498:	umull	ip, lr, r1, r2
   1a49c:	mla	r1, r1, r3, lr
   1a4a0:	mla	r0, r0, r2, r1
   1a4a4:	str	ip, [fp, #-24]	; 0xffffffe8
   1a4a8:	str	r0, [fp, #-20]	; 0xffffffec
   1a4ac:	b	1a7b4 <__assert_fail@plt+0x96fc>
   1a4b0:	ldr	r0, [fp, #-12]
   1a4b4:	cmp	r0, #0
   1a4b8:	bge	1a64c <__assert_fail@plt+0x9594>
   1a4bc:	mov	r0, #1
   1a4c0:	cmp	r0, #0
   1a4c4:	bne	1a5b8 <__assert_fail@plt+0x9500>
   1a4c8:	b	1a4cc <__assert_fail@plt+0x9414>
   1a4cc:	b	1a51c <__assert_fail@plt+0x9464>
   1a4d0:	ldr	r0, [fp, #-8]
   1a4d4:	ldr	r1, [r0]
   1a4d8:	ldr	r0, [r0, #4]
   1a4dc:	ldr	r2, [fp, #-12]
   1a4e0:	asr	r3, r2, #31
   1a4e4:	mvn	ip, #0
   1a4e8:	str	r0, [sp, #68]	; 0x44
   1a4ec:	mov	r0, ip
   1a4f0:	str	r1, [sp, #64]	; 0x40
   1a4f4:	mov	r1, ip
   1a4f8:	bl	1cb38 <__assert_fail@plt+0xba80>
   1a4fc:	ldr	r2, [sp, #64]	; 0x40
   1a500:	subs	r0, r2, r0
   1a504:	ldr	r2, [sp, #68]	; 0x44
   1a508:	sbcs	r1, r2, r1
   1a50c:	str	r0, [sp, #60]	; 0x3c
   1a510:	str	r1, [sp, #56]	; 0x38
   1a514:	bcc	1a740 <__assert_fail@plt+0x9688>
   1a518:	b	1a76c <__assert_fail@plt+0x96b4>
   1a51c:	b	1a520 <__assert_fail@plt+0x9468>
   1a520:	ldr	r0, [pc, #692]	; 1a7dc <__assert_fail@plt+0x9724>
   1a524:	ldr	r1, [fp, #-12]
   1a528:	cmp	r1, r0
   1a52c:	blt	1a544 <__assert_fail@plt+0x948c>
   1a530:	b	1a558 <__assert_fail@plt+0x94a0>
   1a534:	ldr	r0, [fp, #-12]
   1a538:	movw	r1, #0
   1a53c:	cmp	r1, r0
   1a540:	bge	1a558 <__assert_fail@plt+0x94a0>
   1a544:	mov	r0, #1
   1a548:	mvn	r1, #0
   1a54c:	str	r1, [sp, #52]	; 0x34
   1a550:	str	r0, [sp, #48]	; 0x30
   1a554:	b	1a584 <__assert_fail@plt+0x94cc>
   1a558:	ldr	r0, [fp, #-12]
   1a55c:	rsb	r0, r0, #0
   1a560:	asr	r3, r0, #31
   1a564:	mvn	r1, #0
   1a568:	str	r0, [sp, #44]	; 0x2c
   1a56c:	mov	r0, r1
   1a570:	ldr	r2, [sp, #44]	; 0x2c
   1a574:	bl	1cb38 <__assert_fail@plt+0xba80>
   1a578:	str	r0, [sp, #52]	; 0x34
   1a57c:	str	r1, [sp, #48]	; 0x30
   1a580:	b	1a584 <__assert_fail@plt+0x94cc>
   1a584:	ldr	r0, [sp, #48]	; 0x30
   1a588:	ldr	r1, [sp, #52]	; 0x34
   1a58c:	ldr	r2, [fp, #-8]
   1a590:	ldr	r3, [r2]
   1a594:	ldr	r2, [r2, #4]
   1a598:	mvn	r2, r2
   1a59c:	mvn	r3, r3
   1a5a0:	subs	r1, r3, r1
   1a5a4:	sbcs	r0, r2, r0
   1a5a8:	str	r1, [sp, #40]	; 0x28
   1a5ac:	str	r0, [sp, #36]	; 0x24
   1a5b0:	bcs	1a740 <__assert_fail@plt+0x9688>
   1a5b4:	b	1a76c <__assert_fail@plt+0x96b4>
   1a5b8:	b	1a5bc <__assert_fail@plt+0x9504>
   1a5bc:	b	1a61c <__assert_fail@plt+0x9564>
   1a5c0:	b	1a61c <__assert_fail@plt+0x9564>
   1a5c4:	ldr	r0, [fp, #-12]
   1a5c8:	cmn	r0, #1
   1a5cc:	bne	1a61c <__assert_fail@plt+0x9564>
   1a5d0:	b	1a5f0 <__assert_fail@plt+0x9538>
   1a5d4:	ldr	r0, [fp, #-8]
   1a5d8:	ldr	r1, [r0]
   1a5dc:	ldr	r0, [r0, #4]
   1a5e0:	orr	r0, r1, r0
   1a5e4:	cmp	r0, #0
   1a5e8:	bne	1a740 <__assert_fail@plt+0x9688>
   1a5ec:	b	1a76c <__assert_fail@plt+0x96b4>
   1a5f0:	ldr	r0, [fp, #-8]
   1a5f4:	ldr	r1, [r0]
   1a5f8:	ldr	r0, [r0, #4]
   1a5fc:	orr	r0, r1, r0
   1a600:	cmp	r0, #0
   1a604:	beq	1a76c <__assert_fail@plt+0x96b4>
   1a608:	b	1a60c <__assert_fail@plt+0x9554>
   1a60c:	mov	r0, #0
   1a610:	cmp	r0, #0
   1a614:	bne	1a740 <__assert_fail@plt+0x9688>
   1a618:	b	1a76c <__assert_fail@plt+0x96b4>
   1a61c:	ldr	r0, [fp, #-12]
   1a620:	mov	r1, #0
   1a624:	sdiv	r0, r1, r0
   1a628:	ldr	r1, [fp, #-8]
   1a62c:	ldr	r2, [r1]
   1a630:	ldr	r1, [r1, #4]
   1a634:	subs	r2, r0, r2
   1a638:	rscs	r0, r1, r0, asr #31
   1a63c:	str	r2, [sp, #32]
   1a640:	str	r0, [sp, #28]
   1a644:	bcc	1a740 <__assert_fail@plt+0x9688>
   1a648:	b	1a76c <__assert_fail@plt+0x96b4>
   1a64c:	ldr	r0, [fp, #-12]
   1a650:	cmp	r0, #0
   1a654:	bne	1a65c <__assert_fail@plt+0x95a4>
   1a658:	b	1a76c <__assert_fail@plt+0x96b4>
   1a65c:	mov	r0, #1
   1a660:	cmp	r0, #0
   1a664:	bne	1a700 <__assert_fail@plt+0x9648>
   1a668:	b	1a66c <__assert_fail@plt+0x95b4>
   1a66c:	b	1a674 <__assert_fail@plt+0x95bc>
   1a670:	b	1a678 <__assert_fail@plt+0x95c0>
   1a674:	b	1a6c8 <__assert_fail@plt+0x9610>
   1a678:	ldr	r0, [fp, #-8]
   1a67c:	ldr	r1, [r0]
   1a680:	ldr	r0, [r0, #4]
   1a684:	and	r0, r1, r0
   1a688:	cmn	r0, #1
   1a68c:	bne	1a6c8 <__assert_fail@plt+0x9610>
   1a690:	b	1a694 <__assert_fail@plt+0x95dc>
   1a694:	b	1a698 <__assert_fail@plt+0x95e0>
   1a698:	ldr	r0, [fp, #-12]
   1a69c:	add	r0, r0, #0
   1a6a0:	movw	r1, #0
   1a6a4:	cmp	r1, r0
   1a6a8:	blt	1a740 <__assert_fail@plt+0x9688>
   1a6ac:	b	1a76c <__assert_fail@plt+0x96b4>
   1a6b0:	ldr	r0, [fp, #-12]
   1a6b4:	sub	r0, r0, #1
   1a6b8:	mvn	r1, #0
   1a6bc:	cmp	r1, r0
   1a6c0:	blt	1a740 <__assert_fail@plt+0x9688>
   1a6c4:	b	1a76c <__assert_fail@plt+0x96b4>
   1a6c8:	ldr	r0, [fp, #-8]
   1a6cc:	ldr	r2, [r0]
   1a6d0:	ldr	r3, [r0, #4]
   1a6d4:	mov	r0, #0
   1a6d8:	str	r0, [sp, #24]
   1a6dc:	ldr	r1, [sp, #24]
   1a6e0:	bl	1cb38 <__assert_fail@plt+0xba80>
   1a6e4:	ldr	r2, [fp, #-12]
   1a6e8:	subs	r0, r0, r2
   1a6ec:	sbcs	r1, r1, r2, asr #31
   1a6f0:	str	r0, [sp, #20]
   1a6f4:	str	r1, [sp, #16]
   1a6f8:	bcc	1a740 <__assert_fail@plt+0x9688>
   1a6fc:	b	1a76c <__assert_fail@plt+0x96b4>
   1a700:	ldr	r0, [fp, #-12]
   1a704:	asr	r3, r0, #31
   1a708:	mvn	r1, #0
   1a70c:	str	r0, [sp, #12]
   1a710:	mov	r0, r1
   1a714:	ldr	r2, [sp, #12]
   1a718:	bl	1cb38 <__assert_fail@plt+0xba80>
   1a71c:	ldr	r2, [fp, #-8]
   1a720:	ldr	r3, [r2]
   1a724:	ldr	r2, [r2, #4]
   1a728:	subs	r0, r0, r3
   1a72c:	sbcs	r1, r1, r2
   1a730:	str	r0, [sp, #8]
   1a734:	str	r1, [sp, #4]
   1a738:	bcs	1a76c <__assert_fail@plt+0x96b4>
   1a73c:	b	1a740 <__assert_fail@plt+0x9688>
   1a740:	ldr	r0, [fp, #-8]
   1a744:	ldr	r1, [r0]
   1a748:	ldr	r0, [r0, #4]
   1a74c:	ldr	r2, [fp, #-12]
   1a750:	asr	r3, r2, #31
   1a754:	umull	ip, lr, r1, r2
   1a758:	mla	r1, r1, r3, lr
   1a75c:	mla	r0, r0, r2, r1
   1a760:	str	ip, [fp, #-24]	; 0xffffffe8
   1a764:	str	r0, [fp, #-20]	; 0xffffffec
   1a768:	b	1a798 <__assert_fail@plt+0x96e0>
   1a76c:	ldr	r0, [fp, #-8]
   1a770:	ldr	r1, [r0]
   1a774:	ldr	r0, [r0, #4]
   1a778:	ldr	r2, [fp, #-12]
   1a77c:	asr	r3, r2, #31
   1a780:	umull	ip, lr, r1, r2
   1a784:	mla	r1, r1, r3, lr
   1a788:	mla	r0, r0, r2, r1
   1a78c:	str	ip, [fp, #-24]	; 0xffffffe8
   1a790:	str	r0, [fp, #-20]	; 0xffffffec
   1a794:	b	1a7b4 <__assert_fail@plt+0x96fc>
   1a798:	ldr	r0, [fp, #-8]
   1a79c:	mvn	r1, #0
   1a7a0:	str	r1, [r0, #4]
   1a7a4:	str	r1, [r0]
   1a7a8:	movw	r0, #1
   1a7ac:	str	r0, [fp, #-4]
   1a7b0:	b	1a7d0 <__assert_fail@plt+0x9718>
   1a7b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a7bc:	ldr	r2, [fp, #-8]
   1a7c0:	str	r1, [r2, #4]
   1a7c4:	str	r0, [r2]
   1a7c8:	movw	r0, #0
   1a7cc:	str	r0, [fp, #-4]
   1a7d0:	ldr	r0, [fp, #-4]
   1a7d4:	mov	sp, fp
   1a7d8:	pop	{fp, pc}
   1a7dc:	andhi	r0, r0, r1
   1a7e0:	svcvc	0x00ffffff
   1a7e4:	push	{fp, lr}
   1a7e8:	mov	fp, sp
   1a7ec:	sub	sp, sp, #16
   1a7f0:	str	r0, [fp, #-4]
   1a7f4:	str	r1, [sp, #8]
   1a7f8:	str	r2, [sp, #4]
   1a7fc:	movw	r0, #0
   1a800:	str	r0, [sp]
   1a804:	ldr	r0, [sp, #4]
   1a808:	mvn	r1, #0
   1a80c:	add	r1, r0, r1
   1a810:	str	r1, [sp, #4]
   1a814:	cmp	r0, #0
   1a818:	beq	1a838 <__assert_fail@plt+0x9780>
   1a81c:	ldr	r0, [fp, #-4]
   1a820:	ldr	r1, [sp, #8]
   1a824:	bl	18cdc <__assert_fail@plt+0x7c24>
   1a828:	ldr	r1, [sp]
   1a82c:	orr	r0, r1, r0
   1a830:	str	r0, [sp]
   1a834:	b	1a804 <__assert_fail@plt+0x974c>
   1a838:	ldr	r0, [sp]
   1a83c:	mov	sp, fp
   1a840:	pop	{fp, pc}
   1a844:	push	{fp, lr}
   1a848:	mov	fp, sp
   1a84c:	sub	sp, sp, #16
   1a850:	str	r0, [sp, #8]
   1a854:	str	r1, [sp, #4]
   1a858:	ldr	r0, [sp, #8]
   1a85c:	cmp	r0, #0
   1a860:	beq	1a870 <__assert_fail@plt+0x97b8>
   1a864:	ldr	r0, [sp, #4]
   1a868:	cmp	r0, #0
   1a86c:	bne	1a87c <__assert_fail@plt+0x97c4>
   1a870:	movw	r0, #1
   1a874:	str	r0, [sp, #4]
   1a878:	str	r0, [sp, #8]
   1a87c:	ldr	r0, [sp, #4]
   1a880:	cmp	r0, #0
   1a884:	beq	1a8b8 <__assert_fail@plt+0x9800>
   1a888:	ldr	r0, [pc, #76]	; 1a8dc <__assert_fail@plt+0x9824>
   1a88c:	ldr	r1, [sp, #4]
   1a890:	udiv	r0, r0, r1
   1a894:	ldr	r1, [sp, #8]
   1a898:	cmp	r0, r1
   1a89c:	bcs	1a8b8 <__assert_fail@plt+0x9800>
   1a8a0:	bl	10fec <__errno_location@plt>
   1a8a4:	movw	lr, #12
   1a8a8:	str	lr, [r0]
   1a8ac:	movw	r0, #0
   1a8b0:	str	r0, [fp, #-4]
   1a8b4:	b	1a8d0 <__assert_fail@plt+0x9818>
   1a8b8:	ldr	r0, [sp, #8]
   1a8bc:	ldr	r1, [sp, #4]
   1a8c0:	bl	10e48 <calloc@plt>
   1a8c4:	str	r0, [sp]
   1a8c8:	ldr	r0, [sp]
   1a8cc:	str	r0, [fp, #-4]
   1a8d0:	ldr	r0, [fp, #-4]
   1a8d4:	mov	sp, fp
   1a8d8:	pop	{fp, pc}
   1a8dc:	svcvc	0x00ffffff
   1a8e0:	push	{fp, lr}
   1a8e4:	mov	fp, sp
   1a8e8:	sub	sp, sp, #16
   1a8ec:	str	r0, [sp, #8]
   1a8f0:	ldr	r0, [sp, #8]
   1a8f4:	cmp	r0, #0
   1a8f8:	bne	1a904 <__assert_fail@plt+0x984c>
   1a8fc:	movw	r0, #1
   1a900:	str	r0, [sp, #8]
   1a904:	ldr	r0, [pc, #64]	; 1a94c <__assert_fail@plt+0x9894>
   1a908:	ldr	r1, [sp, #8]
   1a90c:	cmp	r0, r1
   1a910:	bcs	1a92c <__assert_fail@plt+0x9874>
   1a914:	bl	10fec <__errno_location@plt>
   1a918:	movw	lr, #12
   1a91c:	str	lr, [r0]
   1a920:	movw	r0, #0
   1a924:	str	r0, [fp, #-4]
   1a928:	b	1a940 <__assert_fail@plt+0x9888>
   1a92c:	ldr	r0, [sp, #8]
   1a930:	bl	10f68 <malloc@plt>
   1a934:	str	r0, [sp, #4]
   1a938:	ldr	r0, [sp, #4]
   1a93c:	str	r0, [fp, #-4]
   1a940:	ldr	r0, [fp, #-4]
   1a944:	mov	sp, fp
   1a948:	pop	{fp, pc}
   1a94c:	svcvc	0x00ffffff
   1a950:	push	{fp, lr}
   1a954:	mov	fp, sp
   1a958:	sub	sp, sp, #16
   1a95c:	str	r0, [sp, #8]
   1a960:	str	r1, [sp, #4]
   1a964:	ldr	r0, [sp, #8]
   1a968:	movw	r1, #0
   1a96c:	cmp	r0, r1
   1a970:	bne	1a984 <__assert_fail@plt+0x98cc>
   1a974:	ldr	r0, [sp, #4]
   1a978:	bl	1a8e0 <__assert_fail@plt+0x9828>
   1a97c:	str	r0, [fp, #-4]
   1a980:	b	1a9e4 <__assert_fail@plt+0x992c>
   1a984:	ldr	r0, [sp, #4]
   1a988:	cmp	r0, #0
   1a98c:	bne	1a9a4 <__assert_fail@plt+0x98ec>
   1a990:	ldr	r0, [sp, #8]
   1a994:	bl	1ab7c <__assert_fail@plt+0x9ac4>
   1a998:	movw	r0, #0
   1a99c:	str	r0, [fp, #-4]
   1a9a0:	b	1a9e4 <__assert_fail@plt+0x992c>
   1a9a4:	ldr	r0, [pc, #68]	; 1a9f0 <__assert_fail@plt+0x9938>
   1a9a8:	ldr	r1, [sp, #4]
   1a9ac:	cmp	r0, r1
   1a9b0:	bcs	1a9cc <__assert_fail@plt+0x9914>
   1a9b4:	bl	10fec <__errno_location@plt>
   1a9b8:	movw	lr, #12
   1a9bc:	str	lr, [r0]
   1a9c0:	movw	r0, #0
   1a9c4:	str	r0, [fp, #-4]
   1a9c8:	b	1a9e4 <__assert_fail@plt+0x992c>
   1a9cc:	ldr	r0, [sp, #8]
   1a9d0:	ldr	r1, [sp, #4]
   1a9d4:	bl	10efc <realloc@plt>
   1a9d8:	str	r0, [sp]
   1a9dc:	ldr	r0, [sp]
   1a9e0:	str	r0, [fp, #-4]
   1a9e4:	ldr	r0, [fp, #-4]
   1a9e8:	mov	sp, fp
   1a9ec:	pop	{fp, pc}
   1a9f0:	svcvc	0x00ffffff
   1a9f4:	push	{fp, lr}
   1a9f8:	mov	fp, sp
   1a9fc:	sub	sp, sp, #24
   1aa00:	str	r0, [fp, #-8]
   1aa04:	str	r1, [sp, #12]
   1aa08:	ldr	r0, [fp, #-8]
   1aa0c:	str	r0, [sp, #8]
   1aa10:	ldr	r0, [sp, #12]
   1aa14:	str	r0, [sp, #4]
   1aa18:	ldr	r0, [sp, #8]
   1aa1c:	ldr	r1, [sp, #4]
   1aa20:	cmp	r0, r1
   1aa24:	bne	1aa34 <__assert_fail@plt+0x997c>
   1aa28:	movw	r0, #0
   1aa2c:	str	r0, [fp, #-4]
   1aa30:	b	1aaa0 <__assert_fail@plt+0x99e8>
   1aa34:	b	1aa38 <__assert_fail@plt+0x9980>
   1aa38:	ldr	r0, [sp, #8]
   1aa3c:	ldrb	r0, [r0]
   1aa40:	bl	1c7e4 <__assert_fail@plt+0xb72c>
   1aa44:	strb	r0, [sp, #3]
   1aa48:	ldr	r0, [sp, #4]
   1aa4c:	ldrb	r0, [r0]
   1aa50:	bl	1c7e4 <__assert_fail@plt+0xb72c>
   1aa54:	strb	r0, [sp, #2]
   1aa58:	ldrb	r0, [sp, #3]
   1aa5c:	cmp	r0, #0
   1aa60:	bne	1aa68 <__assert_fail@plt+0x99b0>
   1aa64:	b	1aa90 <__assert_fail@plt+0x99d8>
   1aa68:	ldr	r0, [sp, #8]
   1aa6c:	add	r0, r0, #1
   1aa70:	str	r0, [sp, #8]
   1aa74:	ldr	r0, [sp, #4]
   1aa78:	add	r0, r0, #1
   1aa7c:	str	r0, [sp, #4]
   1aa80:	ldrb	r0, [sp, #3]
   1aa84:	ldrb	r1, [sp, #2]
   1aa88:	cmp	r0, r1
   1aa8c:	beq	1aa38 <__assert_fail@plt+0x9980>
   1aa90:	ldrb	r0, [sp, #3]
   1aa94:	ldrb	r1, [sp, #2]
   1aa98:	sub	r0, r0, r1
   1aa9c:	str	r0, [fp, #-4]
   1aaa0:	ldr	r0, [fp, #-4]
   1aaa4:	mov	sp, fp
   1aaa8:	pop	{fp, pc}
   1aaac:	push	{fp, lr}
   1aab0:	mov	fp, sp
   1aab4:	sub	sp, sp, #16
   1aab8:	str	r0, [sp, #8]
   1aabc:	ldr	r0, [sp, #8]
   1aac0:	bl	10f38 <__fpending@plt>
   1aac4:	cmp	r0, #0
   1aac8:	movw	r0, #0
   1aacc:	movne	r0, #1
   1aad0:	and	r0, r0, #1
   1aad4:	strb	r0, [sp, #7]
   1aad8:	ldr	r0, [sp, #8]
   1aadc:	bl	10f44 <ferror_unlocked@plt>
   1aae0:	cmp	r0, #0
   1aae4:	movw	r0, #0
   1aae8:	movne	r0, #1
   1aaec:	and	r0, r0, #1
   1aaf0:	strb	r0, [sp, #6]
   1aaf4:	ldr	r0, [sp, #8]
   1aaf8:	bl	12238 <__assert_fail@plt+0x1180>
   1aafc:	cmp	r0, #0
   1ab00:	movw	r0, #0
   1ab04:	movne	r0, #1
   1ab08:	and	r0, r0, #1
   1ab0c:	strb	r0, [sp, #5]
   1ab10:	ldrb	r0, [sp, #6]
   1ab14:	tst	r0, #1
   1ab18:	bne	1ab44 <__assert_fail@plt+0x9a8c>
   1ab1c:	ldrb	r0, [sp, #5]
   1ab20:	tst	r0, #1
   1ab24:	beq	1ab68 <__assert_fail@plt+0x9ab0>
   1ab28:	ldrb	r0, [sp, #7]
   1ab2c:	tst	r0, #1
   1ab30:	bne	1ab44 <__assert_fail@plt+0x9a8c>
   1ab34:	bl	10fec <__errno_location@plt>
   1ab38:	ldr	r0, [r0]
   1ab3c:	cmp	r0, #9
   1ab40:	beq	1ab68 <__assert_fail@plt+0x9ab0>
   1ab44:	ldrb	r0, [sp, #5]
   1ab48:	tst	r0, #1
   1ab4c:	bne	1ab5c <__assert_fail@plt+0x9aa4>
   1ab50:	bl	10fec <__errno_location@plt>
   1ab54:	movw	lr, #0
   1ab58:	str	lr, [r0]
   1ab5c:	mvn	r0, #0
   1ab60:	str	r0, [fp, #-4]
   1ab64:	b	1ab70 <__assert_fail@plt+0x9ab8>
   1ab68:	movw	r0, #0
   1ab6c:	str	r0, [fp, #-4]
   1ab70:	ldr	r0, [fp, #-4]
   1ab74:	mov	sp, fp
   1ab78:	pop	{fp, pc}
   1ab7c:	push	{fp, lr}
   1ab80:	mov	fp, sp
   1ab84:	sub	sp, sp, #16
   1ab88:	str	r0, [fp, #-4]
   1ab8c:	bl	10fec <__errno_location@plt>
   1ab90:	ldr	r0, [r0]
   1ab94:	str	r0, [sp, #8]
   1ab98:	ldr	r0, [fp, #-4]
   1ab9c:	bl	10ea8 <free@plt>
   1aba0:	ldr	r0, [sp, #8]
   1aba4:	str	r0, [sp, #4]
   1aba8:	bl	10fec <__errno_location@plt>
   1abac:	ldr	lr, [sp, #4]
   1abb0:	str	lr, [r0]
   1abb4:	mov	sp, fp
   1abb8:	pop	{fp, pc}
   1abbc:	push	{fp, lr}
   1abc0:	mov	fp, sp
   1abc4:	bl	10fec <__errno_location@plt>
   1abc8:	movw	lr, #12
   1abcc:	str	lr, [r0]
   1abd0:	movw	r0, #0
   1abd4:	pop	{fp, pc}
   1abd8:	push	{fp, lr}
   1abdc:	mov	fp, sp
   1abe0:	sub	sp, sp, #8
   1abe4:	str	r0, [sp, #4]
   1abe8:	ldr	r0, [sp, #4]
   1abec:	cmn	r0, #1
   1abf0:	bhi	1ac04 <__assert_fail@plt+0x9b4c>
   1abf4:	ldr	r0, [sp, #4]
   1abf8:	bl	1a8e0 <__assert_fail@plt+0x9828>
   1abfc:	str	r0, [sp]
   1ac00:	b	1ac0c <__assert_fail@plt+0x9b54>
   1ac04:	bl	1abbc <__assert_fail@plt+0x9b04>
   1ac08:	str	r0, [sp]
   1ac0c:	ldr	r0, [sp]
   1ac10:	mov	sp, fp
   1ac14:	pop	{fp, pc}
   1ac18:	push	{fp, lr}
   1ac1c:	mov	fp, sp
   1ac20:	sub	sp, sp, #16
   1ac24:	str	r0, [fp, #-4]
   1ac28:	str	r1, [sp, #8]
   1ac2c:	ldr	r0, [sp, #8]
   1ac30:	cmn	r0, #1
   1ac34:	bhi	1ac6c <__assert_fail@plt+0x9bb4>
   1ac38:	ldr	r0, [fp, #-4]
   1ac3c:	ldr	r1, [sp, #8]
   1ac40:	ldr	r2, [sp, #8]
   1ac44:	cmp	r2, #0
   1ac48:	movw	r2, #0
   1ac4c:	movne	r2, #1
   1ac50:	mvn	r3, #0
   1ac54:	eor	r2, r2, r3
   1ac58:	and	r2, r2, #1
   1ac5c:	orr	r1, r1, r2
   1ac60:	bl	1a950 <__assert_fail@plt+0x9898>
   1ac64:	str	r0, [sp, #4]
   1ac68:	b	1ac74 <__assert_fail@plt+0x9bbc>
   1ac6c:	bl	1abbc <__assert_fail@plt+0x9b04>
   1ac70:	str	r0, [sp, #4]
   1ac74:	ldr	r0, [sp, #4]
   1ac78:	mov	sp, fp
   1ac7c:	pop	{fp, pc}
   1ac80:	push	{fp, lr}
   1ac84:	mov	fp, sp
   1ac88:	sub	sp, sp, #16
   1ac8c:	str	r0, [sp, #8]
   1ac90:	str	r1, [sp, #4]
   1ac94:	ldr	r0, [sp, #8]
   1ac98:	mvn	r1, #0
   1ac9c:	cmp	r1, r0
   1aca0:	bcs	1acc4 <__assert_fail@plt+0x9c0c>
   1aca4:	ldr	r0, [sp, #4]
   1aca8:	cmp	r0, #0
   1acac:	beq	1acbc <__assert_fail@plt+0x9c04>
   1acb0:	bl	1abbc <__assert_fail@plt+0x9b04>
   1acb4:	str	r0, [fp, #-4]
   1acb8:	b	1ad04 <__assert_fail@plt+0x9c4c>
   1acbc:	movw	r0, #0
   1acc0:	str	r0, [sp, #8]
   1acc4:	ldr	r0, [sp, #4]
   1acc8:	mvn	r1, #0
   1accc:	cmp	r1, r0
   1acd0:	bcs	1acf4 <__assert_fail@plt+0x9c3c>
   1acd4:	ldr	r0, [sp, #8]
   1acd8:	cmp	r0, #0
   1acdc:	beq	1acec <__assert_fail@plt+0x9c34>
   1ace0:	bl	1abbc <__assert_fail@plt+0x9b04>
   1ace4:	str	r0, [fp, #-4]
   1ace8:	b	1ad04 <__assert_fail@plt+0x9c4c>
   1acec:	movw	r0, #0
   1acf0:	str	r0, [sp, #4]
   1acf4:	ldr	r0, [sp, #8]
   1acf8:	ldr	r1, [sp, #4]
   1acfc:	bl	1a844 <__assert_fail@plt+0x978c>
   1ad00:	str	r0, [fp, #-4]
   1ad04:	ldr	r0, [fp, #-4]
   1ad08:	mov	sp, fp
   1ad0c:	pop	{fp, pc}
   1ad10:	push	{fp, lr}
   1ad14:	mov	fp, sp
   1ad18:	sub	sp, sp, #16
   1ad1c:	str	r0, [fp, #-4]
   1ad20:	str	r1, [sp, #8]
   1ad24:	str	r2, [sp, #4]
   1ad28:	ldr	r0, [sp, #8]
   1ad2c:	cmp	r0, #0
   1ad30:	beq	1ad40 <__assert_fail@plt+0x9c88>
   1ad34:	ldr	r0, [sp, #4]
   1ad38:	cmp	r0, #0
   1ad3c:	bne	1ad4c <__assert_fail@plt+0x9c94>
   1ad40:	movw	r0, #1
   1ad44:	str	r0, [sp, #4]
   1ad48:	str	r0, [sp, #8]
   1ad4c:	ldr	r0, [sp, #8]
   1ad50:	cmn	r0, #1
   1ad54:	bhi	1ad7c <__assert_fail@plt+0x9cc4>
   1ad58:	ldr	r0, [sp, #4]
   1ad5c:	cmn	r0, #1
   1ad60:	bhi	1ad7c <__assert_fail@plt+0x9cc4>
   1ad64:	ldr	r0, [fp, #-4]
   1ad68:	ldr	r1, [sp, #8]
   1ad6c:	ldr	r2, [sp, #4]
   1ad70:	bl	1ae9c <__assert_fail@plt+0x9de4>
   1ad74:	str	r0, [sp]
   1ad78:	b	1ad84 <__assert_fail@plt+0x9ccc>
   1ad7c:	bl	1abbc <__assert_fail@plt+0x9b04>
   1ad80:	str	r0, [sp]
   1ad84:	ldr	r0, [sp]
   1ad88:	mov	sp, fp
   1ad8c:	pop	{fp, pc}
   1ad90:	push	{fp, lr}
   1ad94:	mov	fp, sp
   1ad98:	sub	sp, sp, #8
   1ad9c:	movw	r0, #14
   1ada0:	bl	11058 <nl_langinfo@plt>
   1ada4:	str	r0, [sp, #4]
   1ada8:	ldr	r0, [sp, #4]
   1adac:	movw	lr, #0
   1adb0:	cmp	r0, lr
   1adb4:	bne	1adc4 <__assert_fail@plt+0x9d0c>
   1adb8:	movw	r0, #53436	; 0xd0bc
   1adbc:	movt	r0, #1
   1adc0:	str	r0, [sp, #4]
   1adc4:	ldr	r0, [sp, #4]
   1adc8:	ldrb	r0, [r0]
   1adcc:	cmp	r0, #0
   1add0:	bne	1ade0 <__assert_fail@plt+0x9d28>
   1add4:	movw	r0, #54894	; 0xd66e
   1add8:	movt	r0, #1
   1addc:	str	r0, [sp, #4]
   1ade0:	ldr	r0, [sp, #4]
   1ade4:	mov	sp, fp
   1ade8:	pop	{fp, pc}
   1adec:	push	{fp, lr}
   1adf0:	mov	fp, sp
   1adf4:	sub	sp, sp, #32
   1adf8:	str	r0, [fp, #-8]
   1adfc:	str	r1, [fp, #-12]
   1ae00:	str	r2, [sp, #16]
   1ae04:	str	r3, [sp, #12]
   1ae08:	ldr	r0, [fp, #-8]
   1ae0c:	movw	r1, #0
   1ae10:	cmp	r0, r1
   1ae14:	bne	1ae20 <__assert_fail@plt+0x9d68>
   1ae18:	add	r0, sp, #4
   1ae1c:	str	r0, [fp, #-8]
   1ae20:	ldr	r0, [fp, #-8]
   1ae24:	ldr	r1, [fp, #-12]
   1ae28:	ldr	r2, [sp, #16]
   1ae2c:	ldr	r3, [sp, #12]
   1ae30:	bl	10f50 <mbrtowc@plt>
   1ae34:	str	r0, [sp, #8]
   1ae38:	ldr	r0, [sp, #8]
   1ae3c:	mvn	r1, #1
   1ae40:	cmp	r1, r0
   1ae44:	bhi	1ae88 <__assert_fail@plt+0x9dd0>
   1ae48:	ldr	r0, [sp, #16]
   1ae4c:	cmp	r0, #0
   1ae50:	beq	1ae88 <__assert_fail@plt+0x9dd0>
   1ae54:	movw	r0, #0
   1ae58:	bl	1c86c <__assert_fail@plt+0xb7b4>
   1ae5c:	tst	r0, #1
   1ae60:	bne	1ae88 <__assert_fail@plt+0x9dd0>
   1ae64:	ldr	r0, [fp, #-12]
   1ae68:	ldrb	r0, [r0]
   1ae6c:	strb	r0, [sp, #3]
   1ae70:	ldrb	r0, [sp, #3]
   1ae74:	ldr	r1, [fp, #-8]
   1ae78:	str	r0, [r1]
   1ae7c:	movw	r0, #1
   1ae80:	str	r0, [fp, #-4]
   1ae84:	b	1ae90 <__assert_fail@plt+0x9dd8>
   1ae88:	ldr	r0, [sp, #8]
   1ae8c:	str	r0, [fp, #-4]
   1ae90:	ldr	r0, [fp, #-4]
   1ae94:	mov	sp, fp
   1ae98:	pop	{fp, pc}
   1ae9c:	push	{fp, lr}
   1aea0:	mov	fp, sp
   1aea4:	sub	sp, sp, #176	; 0xb0
   1aea8:	str	r0, [fp, #-8]
   1aeac:	str	r1, [fp, #-12]
   1aeb0:	str	r2, [fp, #-16]
   1aeb4:	b	1b26c <__assert_fail@plt+0xa1b4>
   1aeb8:	b	1b08c <__assert_fail@plt+0x9fd4>
   1aebc:	ldr	r0, [fp, #-16]
   1aec0:	cmp	r0, #0
   1aec4:	bcs	1afc8 <__assert_fail@plt+0x9f10>
   1aec8:	ldr	r0, [fp, #-12]
   1aecc:	cmp	r0, #0
   1aed0:	bcs	1af58 <__assert_fail@plt+0x9ea0>
   1aed4:	b	1aef4 <__assert_fail@plt+0x9e3c>
   1aed8:	ldr	r0, [fp, #-12]
   1aedc:	ldr	r1, [fp, #-16]
   1aee0:	movw	r2, #127	; 0x7f
   1aee4:	udiv	r1, r2, r1
   1aee8:	cmp	r0, r1
   1aeec:	bcc	1b05c <__assert_fail@plt+0x9fa4>
   1aef0:	b	1b074 <__assert_fail@plt+0x9fbc>
   1aef4:	b	1af08 <__assert_fail@plt+0x9e50>
   1aef8:	ldr	r0, [fp, #-16]
   1aefc:	cmp	r0, #1
   1af00:	bcc	1af18 <__assert_fail@plt+0x9e60>
   1af04:	b	1af24 <__assert_fail@plt+0x9e6c>
   1af08:	ldr	r0, [fp, #-16]
   1af0c:	movw	r1, #0
   1af10:	cmp	r1, r0
   1af14:	bcs	1af24 <__assert_fail@plt+0x9e6c>
   1af18:	movw	r0, #0
   1af1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1af20:	b	1af3c <__assert_fail@plt+0x9e84>
   1af24:	ldr	r0, [fp, #-16]
   1af28:	movw	r1, #0
   1af2c:	sub	r0, r1, r0
   1af30:	movw	r1, #127	; 0x7f
   1af34:	udiv	r0, r1, r0
   1af38:	str	r0, [fp, #-24]	; 0xffffffe8
   1af3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af40:	ldr	r1, [fp, #-12]
   1af44:	mvn	r2, #0
   1af48:	sub	r1, r2, r1
   1af4c:	cmp	r0, r1
   1af50:	bls	1b05c <__assert_fail@plt+0x9fa4>
   1af54:	b	1b074 <__assert_fail@plt+0x9fbc>
   1af58:	ldr	r0, [fp, #-16]
   1af5c:	cmn	r0, #1
   1af60:	bne	1afac <__assert_fail@plt+0x9ef4>
   1af64:	b	1af84 <__assert_fail@plt+0x9ecc>
   1af68:	ldr	r0, [fp, #-12]
   1af6c:	mvn	r1, #127	; 0x7f
   1af70:	add	r0, r0, r1
   1af74:	movw	r1, #0
   1af78:	cmp	r1, r0
   1af7c:	bcc	1b05c <__assert_fail@plt+0x9fa4>
   1af80:	b	1b074 <__assert_fail@plt+0x9fbc>
   1af84:	ldr	r0, [fp, #-12]
   1af88:	movw	r1, #0
   1af8c:	cmp	r1, r0
   1af90:	bcs	1b074 <__assert_fail@plt+0x9fbc>
   1af94:	ldr	r0, [fp, #-12]
   1af98:	sub	r0, r0, #1
   1af9c:	movw	r1, #127	; 0x7f
   1afa0:	cmp	r1, r0
   1afa4:	bcc	1b05c <__assert_fail@plt+0x9fa4>
   1afa8:	b	1b074 <__assert_fail@plt+0x9fbc>
   1afac:	ldr	r0, [fp, #-16]
   1afb0:	mvn	r1, #127	; 0x7f
   1afb4:	udiv	r0, r1, r0
   1afb8:	ldr	r1, [fp, #-12]
   1afbc:	cmp	r0, r1
   1afc0:	bcc	1b05c <__assert_fail@plt+0x9fa4>
   1afc4:	b	1b074 <__assert_fail@plt+0x9fbc>
   1afc8:	ldr	r0, [fp, #-16]
   1afcc:	cmp	r0, #0
   1afd0:	bne	1afd8 <__assert_fail@plt+0x9f20>
   1afd4:	b	1b074 <__assert_fail@plt+0x9fbc>
   1afd8:	ldr	r0, [fp, #-12]
   1afdc:	cmp	r0, #0
   1afe0:	bcs	1b044 <__assert_fail@plt+0x9f8c>
   1afe4:	ldr	r0, [fp, #-12]
   1afe8:	cmn	r0, #1
   1afec:	bne	1b028 <__assert_fail@plt+0x9f70>
   1aff0:	b	1b010 <__assert_fail@plt+0x9f58>
   1aff4:	ldr	r0, [fp, #-16]
   1aff8:	mvn	r1, #127	; 0x7f
   1affc:	add	r0, r0, r1
   1b000:	movw	r1, #0
   1b004:	cmp	r1, r0
   1b008:	bcc	1b05c <__assert_fail@plt+0x9fa4>
   1b00c:	b	1b074 <__assert_fail@plt+0x9fbc>
   1b010:	ldr	r0, [fp, #-16]
   1b014:	sub	r0, r0, #1
   1b018:	movw	r1, #127	; 0x7f
   1b01c:	cmp	r1, r0
   1b020:	bcc	1b05c <__assert_fail@plt+0x9fa4>
   1b024:	b	1b074 <__assert_fail@plt+0x9fbc>
   1b028:	ldr	r0, [fp, #-12]
   1b02c:	mvn	r1, #127	; 0x7f
   1b030:	udiv	r0, r1, r0
   1b034:	ldr	r1, [fp, #-16]
   1b038:	cmp	r0, r1
   1b03c:	bcc	1b05c <__assert_fail@plt+0x9fa4>
   1b040:	b	1b074 <__assert_fail@plt+0x9fbc>
   1b044:	ldr	r0, [fp, #-16]
   1b048:	movw	r1, #127	; 0x7f
   1b04c:	udiv	r0, r1, r0
   1b050:	ldr	r1, [fp, #-12]
   1b054:	cmp	r0, r1
   1b058:	bcs	1b074 <__assert_fail@plt+0x9fbc>
   1b05c:	ldr	r0, [fp, #-12]
   1b060:	ldr	r1, [fp, #-16]
   1b064:	mul	r0, r0, r1
   1b068:	sxtb	r0, r0
   1b06c:	str	r0, [fp, #-20]	; 0xffffffec
   1b070:	b	1c1ec <__assert_fail@plt+0xb134>
   1b074:	ldr	r0, [fp, #-12]
   1b078:	ldr	r1, [fp, #-16]
   1b07c:	mul	r0, r0, r1
   1b080:	sxtb	r0, r0
   1b084:	str	r0, [fp, #-20]	; 0xffffffec
   1b088:	b	1c204 <__assert_fail@plt+0xb14c>
   1b08c:	ldr	r0, [fp, #-16]
   1b090:	cmp	r0, #0
   1b094:	bcs	1b1a0 <__assert_fail@plt+0xa0e8>
   1b098:	ldr	r0, [fp, #-12]
   1b09c:	cmp	r0, #0
   1b0a0:	bcs	1b128 <__assert_fail@plt+0xa070>
   1b0a4:	b	1b0c4 <__assert_fail@plt+0xa00c>
   1b0a8:	ldr	r0, [fp, #-12]
   1b0ac:	ldr	r1, [fp, #-16]
   1b0b0:	movw	r2, #255	; 0xff
   1b0b4:	udiv	r1, r2, r1
   1b0b8:	cmp	r0, r1
   1b0bc:	bcc	1b23c <__assert_fail@plt+0xa184>
   1b0c0:	b	1b254 <__assert_fail@plt+0xa19c>
   1b0c4:	b	1b0d8 <__assert_fail@plt+0xa020>
   1b0c8:	ldr	r0, [fp, #-16]
   1b0cc:	cmp	r0, #1
   1b0d0:	bcc	1b0e8 <__assert_fail@plt+0xa030>
   1b0d4:	b	1b0f4 <__assert_fail@plt+0xa03c>
   1b0d8:	ldr	r0, [fp, #-16]
   1b0dc:	movw	r1, #0
   1b0e0:	cmp	r1, r0
   1b0e4:	bcs	1b0f4 <__assert_fail@plt+0xa03c>
   1b0e8:	movw	r0, #0
   1b0ec:	str	r0, [fp, #-28]	; 0xffffffe4
   1b0f0:	b	1b10c <__assert_fail@plt+0xa054>
   1b0f4:	ldr	r0, [fp, #-16]
   1b0f8:	movw	r1, #0
   1b0fc:	sub	r0, r1, r0
   1b100:	movw	r1, #255	; 0xff
   1b104:	udiv	r0, r1, r0
   1b108:	str	r0, [fp, #-28]	; 0xffffffe4
   1b10c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b110:	ldr	r1, [fp, #-12]
   1b114:	mvn	r2, #0
   1b118:	sub	r1, r2, r1
   1b11c:	cmp	r0, r1
   1b120:	bls	1b23c <__assert_fail@plt+0xa184>
   1b124:	b	1b254 <__assert_fail@plt+0xa19c>
   1b128:	b	1b130 <__assert_fail@plt+0xa078>
   1b12c:	b	1b134 <__assert_fail@plt+0xa07c>
   1b130:	b	1b184 <__assert_fail@plt+0xa0cc>
   1b134:	ldr	r0, [fp, #-16]
   1b138:	cmn	r0, #1
   1b13c:	bne	1b184 <__assert_fail@plt+0xa0cc>
   1b140:	b	1b15c <__assert_fail@plt+0xa0a4>
   1b144:	ldr	r0, [fp, #-12]
   1b148:	add	r0, r0, #0
   1b14c:	movw	r1, #0
   1b150:	cmp	r1, r0
   1b154:	bcc	1b23c <__assert_fail@plt+0xa184>
   1b158:	b	1b254 <__assert_fail@plt+0xa19c>
   1b15c:	ldr	r0, [fp, #-12]
   1b160:	movw	r1, #0
   1b164:	cmp	r1, r0
   1b168:	bcs	1b254 <__assert_fail@plt+0xa19c>
   1b16c:	ldr	r0, [fp, #-12]
   1b170:	sub	r0, r0, #1
   1b174:	mvn	r1, #0
   1b178:	cmp	r1, r0
   1b17c:	bcc	1b23c <__assert_fail@plt+0xa184>
   1b180:	b	1b254 <__assert_fail@plt+0xa19c>
   1b184:	ldr	r0, [fp, #-16]
   1b188:	movw	r1, #0
   1b18c:	udiv	r0, r1, r0
   1b190:	ldr	r1, [fp, #-12]
   1b194:	cmp	r0, r1
   1b198:	bcc	1b23c <__assert_fail@plt+0xa184>
   1b19c:	b	1b254 <__assert_fail@plt+0xa19c>
   1b1a0:	ldr	r0, [fp, #-16]
   1b1a4:	cmp	r0, #0
   1b1a8:	bne	1b1b0 <__assert_fail@plt+0xa0f8>
   1b1ac:	b	1b254 <__assert_fail@plt+0xa19c>
   1b1b0:	ldr	r0, [fp, #-12]
   1b1b4:	cmp	r0, #0
   1b1b8:	bcs	1b224 <__assert_fail@plt+0xa16c>
   1b1bc:	b	1b1c4 <__assert_fail@plt+0xa10c>
   1b1c0:	b	1b1c8 <__assert_fail@plt+0xa110>
   1b1c4:	b	1b208 <__assert_fail@plt+0xa150>
   1b1c8:	ldr	r0, [fp, #-12]
   1b1cc:	cmn	r0, #1
   1b1d0:	bne	1b208 <__assert_fail@plt+0xa150>
   1b1d4:	b	1b1f0 <__assert_fail@plt+0xa138>
   1b1d8:	ldr	r0, [fp, #-16]
   1b1dc:	add	r0, r0, #0
   1b1e0:	movw	r1, #0
   1b1e4:	cmp	r1, r0
   1b1e8:	bcc	1b23c <__assert_fail@plt+0xa184>
   1b1ec:	b	1b254 <__assert_fail@plt+0xa19c>
   1b1f0:	ldr	r0, [fp, #-16]
   1b1f4:	sub	r0, r0, #1
   1b1f8:	mvn	r1, #0
   1b1fc:	cmp	r1, r0
   1b200:	bcc	1b23c <__assert_fail@plt+0xa184>
   1b204:	b	1b254 <__assert_fail@plt+0xa19c>
   1b208:	ldr	r0, [fp, #-12]
   1b20c:	movw	r1, #0
   1b210:	udiv	r0, r1, r0
   1b214:	ldr	r1, [fp, #-16]
   1b218:	cmp	r0, r1
   1b21c:	bcc	1b23c <__assert_fail@plt+0xa184>
   1b220:	b	1b254 <__assert_fail@plt+0xa19c>
   1b224:	ldr	r0, [fp, #-16]
   1b228:	movw	r1, #255	; 0xff
   1b22c:	udiv	r0, r1, r0
   1b230:	ldr	r1, [fp, #-12]
   1b234:	cmp	r0, r1
   1b238:	bcs	1b254 <__assert_fail@plt+0xa19c>
   1b23c:	ldr	r0, [fp, #-12]
   1b240:	ldr	r1, [fp, #-16]
   1b244:	mul	r0, r0, r1
   1b248:	and	r0, r0, #255	; 0xff
   1b24c:	str	r0, [fp, #-20]	; 0xffffffec
   1b250:	b	1c1ec <__assert_fail@plt+0xb134>
   1b254:	ldr	r0, [fp, #-12]
   1b258:	ldr	r1, [fp, #-16]
   1b25c:	mul	r0, r0, r1
   1b260:	and	r0, r0, #255	; 0xff
   1b264:	str	r0, [fp, #-20]	; 0xffffffec
   1b268:	b	1c204 <__assert_fail@plt+0xb14c>
   1b26c:	b	1b624 <__assert_fail@plt+0xa56c>
   1b270:	b	1b444 <__assert_fail@plt+0xa38c>
   1b274:	ldr	r0, [fp, #-16]
   1b278:	cmp	r0, #0
   1b27c:	bcs	1b380 <__assert_fail@plt+0xa2c8>
   1b280:	ldr	r0, [fp, #-12]
   1b284:	cmp	r0, #0
   1b288:	bcs	1b310 <__assert_fail@plt+0xa258>
   1b28c:	b	1b2ac <__assert_fail@plt+0xa1f4>
   1b290:	ldr	r0, [fp, #-12]
   1b294:	ldr	r1, [fp, #-16]
   1b298:	movw	r2, #32767	; 0x7fff
   1b29c:	udiv	r1, r2, r1
   1b2a0:	cmp	r0, r1
   1b2a4:	bcc	1b414 <__assert_fail@plt+0xa35c>
   1b2a8:	b	1b42c <__assert_fail@plt+0xa374>
   1b2ac:	b	1b2c0 <__assert_fail@plt+0xa208>
   1b2b0:	ldr	r0, [fp, #-16]
   1b2b4:	cmp	r0, #1
   1b2b8:	bcc	1b2d0 <__assert_fail@plt+0xa218>
   1b2bc:	b	1b2dc <__assert_fail@plt+0xa224>
   1b2c0:	ldr	r0, [fp, #-16]
   1b2c4:	movw	r1, #0
   1b2c8:	cmp	r1, r0
   1b2cc:	bcs	1b2dc <__assert_fail@plt+0xa224>
   1b2d0:	movw	r0, #0
   1b2d4:	str	r0, [fp, #-32]	; 0xffffffe0
   1b2d8:	b	1b2f4 <__assert_fail@plt+0xa23c>
   1b2dc:	ldr	r0, [fp, #-16]
   1b2e0:	movw	r1, #0
   1b2e4:	sub	r0, r1, r0
   1b2e8:	movw	r1, #32767	; 0x7fff
   1b2ec:	udiv	r0, r1, r0
   1b2f0:	str	r0, [fp, #-32]	; 0xffffffe0
   1b2f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b2f8:	ldr	r1, [fp, #-12]
   1b2fc:	mvn	r2, #0
   1b300:	sub	r1, r2, r1
   1b304:	cmp	r0, r1
   1b308:	bls	1b414 <__assert_fail@plt+0xa35c>
   1b30c:	b	1b42c <__assert_fail@plt+0xa374>
   1b310:	ldr	r0, [fp, #-16]
   1b314:	cmn	r0, #1
   1b318:	bne	1b364 <__assert_fail@plt+0xa2ac>
   1b31c:	b	1b33c <__assert_fail@plt+0xa284>
   1b320:	ldr	r0, [pc, #3840]	; 1c228 <__assert_fail@plt+0xb170>
   1b324:	ldr	r1, [fp, #-12]
   1b328:	add	r0, r1, r0
   1b32c:	movw	r1, #0
   1b330:	cmp	r1, r0
   1b334:	bcc	1b414 <__assert_fail@plt+0xa35c>
   1b338:	b	1b42c <__assert_fail@plt+0xa374>
   1b33c:	ldr	r0, [fp, #-12]
   1b340:	movw	r1, #0
   1b344:	cmp	r1, r0
   1b348:	bcs	1b42c <__assert_fail@plt+0xa374>
   1b34c:	ldr	r0, [fp, #-12]
   1b350:	sub	r0, r0, #1
   1b354:	movw	r1, #32767	; 0x7fff
   1b358:	cmp	r1, r0
   1b35c:	bcc	1b414 <__assert_fail@plt+0xa35c>
   1b360:	b	1b42c <__assert_fail@plt+0xa374>
   1b364:	ldr	r0, [pc, #3772]	; 1c228 <__assert_fail@plt+0xb170>
   1b368:	ldr	r1, [fp, #-16]
   1b36c:	udiv	r0, r0, r1
   1b370:	ldr	r1, [fp, #-12]
   1b374:	cmp	r0, r1
   1b378:	bcc	1b414 <__assert_fail@plt+0xa35c>
   1b37c:	b	1b42c <__assert_fail@plt+0xa374>
   1b380:	ldr	r0, [fp, #-16]
   1b384:	cmp	r0, #0
   1b388:	bne	1b390 <__assert_fail@plt+0xa2d8>
   1b38c:	b	1b42c <__assert_fail@plt+0xa374>
   1b390:	ldr	r0, [fp, #-12]
   1b394:	cmp	r0, #0
   1b398:	bcs	1b3fc <__assert_fail@plt+0xa344>
   1b39c:	ldr	r0, [fp, #-12]
   1b3a0:	cmn	r0, #1
   1b3a4:	bne	1b3e0 <__assert_fail@plt+0xa328>
   1b3a8:	b	1b3c8 <__assert_fail@plt+0xa310>
   1b3ac:	ldr	r0, [pc, #3700]	; 1c228 <__assert_fail@plt+0xb170>
   1b3b0:	ldr	r1, [fp, #-16]
   1b3b4:	add	r0, r1, r0
   1b3b8:	movw	r1, #0
   1b3bc:	cmp	r1, r0
   1b3c0:	bcc	1b414 <__assert_fail@plt+0xa35c>
   1b3c4:	b	1b42c <__assert_fail@plt+0xa374>
   1b3c8:	ldr	r0, [fp, #-16]
   1b3cc:	sub	r0, r0, #1
   1b3d0:	movw	r1, #32767	; 0x7fff
   1b3d4:	cmp	r1, r0
   1b3d8:	bcc	1b414 <__assert_fail@plt+0xa35c>
   1b3dc:	b	1b42c <__assert_fail@plt+0xa374>
   1b3e0:	ldr	r0, [pc, #3648]	; 1c228 <__assert_fail@plt+0xb170>
   1b3e4:	ldr	r1, [fp, #-12]
   1b3e8:	udiv	r0, r0, r1
   1b3ec:	ldr	r1, [fp, #-16]
   1b3f0:	cmp	r0, r1
   1b3f4:	bcc	1b414 <__assert_fail@plt+0xa35c>
   1b3f8:	b	1b42c <__assert_fail@plt+0xa374>
   1b3fc:	ldr	r0, [fp, #-16]
   1b400:	movw	r1, #32767	; 0x7fff
   1b404:	udiv	r0, r1, r0
   1b408:	ldr	r1, [fp, #-12]
   1b40c:	cmp	r0, r1
   1b410:	bcs	1b42c <__assert_fail@plt+0xa374>
   1b414:	ldr	r0, [fp, #-12]
   1b418:	ldr	r1, [fp, #-16]
   1b41c:	mul	r0, r0, r1
   1b420:	sxth	r0, r0
   1b424:	str	r0, [fp, #-20]	; 0xffffffec
   1b428:	b	1c1ec <__assert_fail@plt+0xb134>
   1b42c:	ldr	r0, [fp, #-12]
   1b430:	ldr	r1, [fp, #-16]
   1b434:	mul	r0, r0, r1
   1b438:	sxth	r0, r0
   1b43c:	str	r0, [fp, #-20]	; 0xffffffec
   1b440:	b	1c204 <__assert_fail@plt+0xb14c>
   1b444:	ldr	r0, [fp, #-16]
   1b448:	cmp	r0, #0
   1b44c:	bcs	1b558 <__assert_fail@plt+0xa4a0>
   1b450:	ldr	r0, [fp, #-12]
   1b454:	cmp	r0, #0
   1b458:	bcs	1b4e0 <__assert_fail@plt+0xa428>
   1b45c:	b	1b47c <__assert_fail@plt+0xa3c4>
   1b460:	ldr	r0, [fp, #-12]
   1b464:	ldr	r1, [fp, #-16]
   1b468:	movw	r2, #65535	; 0xffff
   1b46c:	udiv	r1, r2, r1
   1b470:	cmp	r0, r1
   1b474:	bcc	1b5f4 <__assert_fail@plt+0xa53c>
   1b478:	b	1b60c <__assert_fail@plt+0xa554>
   1b47c:	b	1b490 <__assert_fail@plt+0xa3d8>
   1b480:	ldr	r0, [fp, #-16]
   1b484:	cmp	r0, #1
   1b488:	bcc	1b4a0 <__assert_fail@plt+0xa3e8>
   1b48c:	b	1b4ac <__assert_fail@plt+0xa3f4>
   1b490:	ldr	r0, [fp, #-16]
   1b494:	movw	r1, #0
   1b498:	cmp	r1, r0
   1b49c:	bcs	1b4ac <__assert_fail@plt+0xa3f4>
   1b4a0:	movw	r0, #0
   1b4a4:	str	r0, [fp, #-36]	; 0xffffffdc
   1b4a8:	b	1b4c4 <__assert_fail@plt+0xa40c>
   1b4ac:	ldr	r0, [fp, #-16]
   1b4b0:	movw	r1, #0
   1b4b4:	sub	r0, r1, r0
   1b4b8:	movw	r1, #65535	; 0xffff
   1b4bc:	udiv	r0, r1, r0
   1b4c0:	str	r0, [fp, #-36]	; 0xffffffdc
   1b4c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b4c8:	ldr	r1, [fp, #-12]
   1b4cc:	mvn	r2, #0
   1b4d0:	sub	r1, r2, r1
   1b4d4:	cmp	r0, r1
   1b4d8:	bls	1b5f4 <__assert_fail@plt+0xa53c>
   1b4dc:	b	1b60c <__assert_fail@plt+0xa554>
   1b4e0:	b	1b4e8 <__assert_fail@plt+0xa430>
   1b4e4:	b	1b4ec <__assert_fail@plt+0xa434>
   1b4e8:	b	1b53c <__assert_fail@plt+0xa484>
   1b4ec:	ldr	r0, [fp, #-16]
   1b4f0:	cmn	r0, #1
   1b4f4:	bne	1b53c <__assert_fail@plt+0xa484>
   1b4f8:	b	1b514 <__assert_fail@plt+0xa45c>
   1b4fc:	ldr	r0, [fp, #-12]
   1b500:	add	r0, r0, #0
   1b504:	movw	r1, #0
   1b508:	cmp	r1, r0
   1b50c:	bcc	1b5f4 <__assert_fail@plt+0xa53c>
   1b510:	b	1b60c <__assert_fail@plt+0xa554>
   1b514:	ldr	r0, [fp, #-12]
   1b518:	movw	r1, #0
   1b51c:	cmp	r1, r0
   1b520:	bcs	1b60c <__assert_fail@plt+0xa554>
   1b524:	ldr	r0, [fp, #-12]
   1b528:	sub	r0, r0, #1
   1b52c:	mvn	r1, #0
   1b530:	cmp	r1, r0
   1b534:	bcc	1b5f4 <__assert_fail@plt+0xa53c>
   1b538:	b	1b60c <__assert_fail@plt+0xa554>
   1b53c:	ldr	r0, [fp, #-16]
   1b540:	movw	r1, #0
   1b544:	udiv	r0, r1, r0
   1b548:	ldr	r1, [fp, #-12]
   1b54c:	cmp	r0, r1
   1b550:	bcc	1b5f4 <__assert_fail@plt+0xa53c>
   1b554:	b	1b60c <__assert_fail@plt+0xa554>
   1b558:	ldr	r0, [fp, #-16]
   1b55c:	cmp	r0, #0
   1b560:	bne	1b568 <__assert_fail@plt+0xa4b0>
   1b564:	b	1b60c <__assert_fail@plt+0xa554>
   1b568:	ldr	r0, [fp, #-12]
   1b56c:	cmp	r0, #0
   1b570:	bcs	1b5dc <__assert_fail@plt+0xa524>
   1b574:	b	1b57c <__assert_fail@plt+0xa4c4>
   1b578:	b	1b580 <__assert_fail@plt+0xa4c8>
   1b57c:	b	1b5c0 <__assert_fail@plt+0xa508>
   1b580:	ldr	r0, [fp, #-12]
   1b584:	cmn	r0, #1
   1b588:	bne	1b5c0 <__assert_fail@plt+0xa508>
   1b58c:	b	1b5a8 <__assert_fail@plt+0xa4f0>
   1b590:	ldr	r0, [fp, #-16]
   1b594:	add	r0, r0, #0
   1b598:	movw	r1, #0
   1b59c:	cmp	r1, r0
   1b5a0:	bcc	1b5f4 <__assert_fail@plt+0xa53c>
   1b5a4:	b	1b60c <__assert_fail@plt+0xa554>
   1b5a8:	ldr	r0, [fp, #-16]
   1b5ac:	sub	r0, r0, #1
   1b5b0:	mvn	r1, #0
   1b5b4:	cmp	r1, r0
   1b5b8:	bcc	1b5f4 <__assert_fail@plt+0xa53c>
   1b5bc:	b	1b60c <__assert_fail@plt+0xa554>
   1b5c0:	ldr	r0, [fp, #-12]
   1b5c4:	movw	r1, #0
   1b5c8:	udiv	r0, r1, r0
   1b5cc:	ldr	r1, [fp, #-16]
   1b5d0:	cmp	r0, r1
   1b5d4:	bcc	1b5f4 <__assert_fail@plt+0xa53c>
   1b5d8:	b	1b60c <__assert_fail@plt+0xa554>
   1b5dc:	ldr	r0, [fp, #-16]
   1b5e0:	movw	r1, #65535	; 0xffff
   1b5e4:	udiv	r0, r1, r0
   1b5e8:	ldr	r1, [fp, #-12]
   1b5ec:	cmp	r0, r1
   1b5f0:	bcs	1b60c <__assert_fail@plt+0xa554>
   1b5f4:	ldr	r0, [fp, #-12]
   1b5f8:	ldr	r1, [fp, #-16]
   1b5fc:	mul	r0, r0, r1
   1b600:	uxth	r0, r0
   1b604:	str	r0, [fp, #-20]	; 0xffffffec
   1b608:	b	1c1ec <__assert_fail@plt+0xb134>
   1b60c:	ldr	r0, [fp, #-12]
   1b610:	ldr	r1, [fp, #-16]
   1b614:	mul	r0, r0, r1
   1b618:	uxth	r0, r0
   1b61c:	str	r0, [fp, #-20]	; 0xffffffec
   1b620:	b	1c204 <__assert_fail@plt+0xb14c>
   1b624:	b	1b628 <__assert_fail@plt+0xa570>
   1b628:	b	1b7ec <__assert_fail@plt+0xa734>
   1b62c:	ldr	r0, [fp, #-16]
   1b630:	cmp	r0, #0
   1b634:	bcs	1b734 <__assert_fail@plt+0xa67c>
   1b638:	ldr	r0, [fp, #-12]
   1b63c:	cmp	r0, #0
   1b640:	bcs	1b6c8 <__assert_fail@plt+0xa610>
   1b644:	b	1b664 <__assert_fail@plt+0xa5ac>
   1b648:	ldr	r0, [pc, #3024]	; 1c220 <__assert_fail@plt+0xb168>
   1b64c:	ldr	r1, [fp, #-12]
   1b650:	ldr	r2, [fp, #-16]
   1b654:	udiv	r0, r0, r2
   1b658:	cmp	r1, r0
   1b65c:	bcc	1b7c4 <__assert_fail@plt+0xa70c>
   1b660:	b	1b7d8 <__assert_fail@plt+0xa720>
   1b664:	b	1b678 <__assert_fail@plt+0xa5c0>
   1b668:	ldr	r0, [fp, #-16]
   1b66c:	cmp	r0, #1
   1b670:	bcc	1b688 <__assert_fail@plt+0xa5d0>
   1b674:	b	1b694 <__assert_fail@plt+0xa5dc>
   1b678:	ldr	r0, [fp, #-16]
   1b67c:	movw	r1, #0
   1b680:	cmp	r1, r0
   1b684:	bcs	1b694 <__assert_fail@plt+0xa5dc>
   1b688:	movw	r0, #0
   1b68c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b690:	b	1b6ac <__assert_fail@plt+0xa5f4>
   1b694:	ldr	r0, [pc, #2948]	; 1c220 <__assert_fail@plt+0xb168>
   1b698:	ldr	r1, [fp, #-16]
   1b69c:	movw	r2, #0
   1b6a0:	sub	r1, r2, r1
   1b6a4:	udiv	r0, r0, r1
   1b6a8:	str	r0, [fp, #-40]	; 0xffffffd8
   1b6ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b6b0:	ldr	r1, [fp, #-12]
   1b6b4:	mvn	r2, #0
   1b6b8:	sub	r1, r2, r1
   1b6bc:	cmp	r0, r1
   1b6c0:	bls	1b7c4 <__assert_fail@plt+0xa70c>
   1b6c4:	b	1b7d8 <__assert_fail@plt+0xa720>
   1b6c8:	ldr	r0, [fp, #-16]
   1b6cc:	cmn	r0, #1
   1b6d0:	bne	1b718 <__assert_fail@plt+0xa660>
   1b6d4:	b	1b6f0 <__assert_fail@plt+0xa638>
   1b6d8:	ldr	r0, [fp, #-12]
   1b6dc:	add	r0, r0, #-2147483648	; 0x80000000
   1b6e0:	movw	r1, #0
   1b6e4:	cmp	r1, r0
   1b6e8:	bcc	1b7c4 <__assert_fail@plt+0xa70c>
   1b6ec:	b	1b7d8 <__assert_fail@plt+0xa720>
   1b6f0:	ldr	r0, [fp, #-12]
   1b6f4:	movw	r1, #0
   1b6f8:	cmp	r1, r0
   1b6fc:	bcs	1b7d8 <__assert_fail@plt+0xa720>
   1b700:	ldr	r0, [pc, #2840]	; 1c220 <__assert_fail@plt+0xb168>
   1b704:	ldr	r1, [fp, #-12]
   1b708:	sub	r1, r1, #1
   1b70c:	cmp	r0, r1
   1b710:	bcc	1b7c4 <__assert_fail@plt+0xa70c>
   1b714:	b	1b7d8 <__assert_fail@plt+0xa720>
   1b718:	ldr	r0, [pc, #2820]	; 1c224 <__assert_fail@plt+0xb16c>
   1b71c:	ldr	r1, [fp, #-16]
   1b720:	udiv	r0, r0, r1
   1b724:	ldr	r1, [fp, #-12]
   1b728:	cmp	r0, r1
   1b72c:	bcc	1b7c4 <__assert_fail@plt+0xa70c>
   1b730:	b	1b7d8 <__assert_fail@plt+0xa720>
   1b734:	ldr	r0, [fp, #-16]
   1b738:	cmp	r0, #0
   1b73c:	bne	1b744 <__assert_fail@plt+0xa68c>
   1b740:	b	1b7d8 <__assert_fail@plt+0xa720>
   1b744:	ldr	r0, [fp, #-12]
   1b748:	cmp	r0, #0
   1b74c:	bcs	1b7ac <__assert_fail@plt+0xa6f4>
   1b750:	ldr	r0, [fp, #-12]
   1b754:	cmn	r0, #1
   1b758:	bne	1b790 <__assert_fail@plt+0xa6d8>
   1b75c:	b	1b778 <__assert_fail@plt+0xa6c0>
   1b760:	ldr	r0, [fp, #-16]
   1b764:	add	r0, r0, #-2147483648	; 0x80000000
   1b768:	movw	r1, #0
   1b76c:	cmp	r1, r0
   1b770:	bcc	1b7c4 <__assert_fail@plt+0xa70c>
   1b774:	b	1b7d8 <__assert_fail@plt+0xa720>
   1b778:	ldr	r0, [pc, #2720]	; 1c220 <__assert_fail@plt+0xb168>
   1b77c:	ldr	r1, [fp, #-16]
   1b780:	sub	r1, r1, #1
   1b784:	cmp	r0, r1
   1b788:	bcc	1b7c4 <__assert_fail@plt+0xa70c>
   1b78c:	b	1b7d8 <__assert_fail@plt+0xa720>
   1b790:	ldr	r0, [pc, #2700]	; 1c224 <__assert_fail@plt+0xb16c>
   1b794:	ldr	r1, [fp, #-12]
   1b798:	udiv	r0, r0, r1
   1b79c:	ldr	r1, [fp, #-16]
   1b7a0:	cmp	r0, r1
   1b7a4:	bcc	1b7c4 <__assert_fail@plt+0xa70c>
   1b7a8:	b	1b7d8 <__assert_fail@plt+0xa720>
   1b7ac:	ldr	r0, [pc, #2668]	; 1c220 <__assert_fail@plt+0xb168>
   1b7b0:	ldr	r1, [fp, #-16]
   1b7b4:	udiv	r0, r0, r1
   1b7b8:	ldr	r1, [fp, #-12]
   1b7bc:	cmp	r0, r1
   1b7c0:	bcs	1b7d8 <__assert_fail@plt+0xa720>
   1b7c4:	ldr	r0, [fp, #-12]
   1b7c8:	ldr	r1, [fp, #-16]
   1b7cc:	mul	r0, r0, r1
   1b7d0:	str	r0, [fp, #-20]	; 0xffffffec
   1b7d4:	b	1c1ec <__assert_fail@plt+0xb134>
   1b7d8:	ldr	r0, [fp, #-12]
   1b7dc:	ldr	r1, [fp, #-16]
   1b7e0:	mul	r0, r0, r1
   1b7e4:	str	r0, [fp, #-20]	; 0xffffffec
   1b7e8:	b	1c204 <__assert_fail@plt+0xb14c>
   1b7ec:	ldr	r0, [fp, #-16]
   1b7f0:	cmp	r0, #0
   1b7f4:	bcs	1b900 <__assert_fail@plt+0xa848>
   1b7f8:	ldr	r0, [fp, #-12]
   1b7fc:	cmp	r0, #0
   1b800:	bcs	1b888 <__assert_fail@plt+0xa7d0>
   1b804:	b	1b824 <__assert_fail@plt+0xa76c>
   1b808:	ldr	r0, [fp, #-12]
   1b80c:	ldr	r1, [fp, #-16]
   1b810:	mvn	r2, #0
   1b814:	udiv	r1, r2, r1
   1b818:	cmp	r0, r1
   1b81c:	bcc	1b99c <__assert_fail@plt+0xa8e4>
   1b820:	b	1b9b0 <__assert_fail@plt+0xa8f8>
   1b824:	b	1b838 <__assert_fail@plt+0xa780>
   1b828:	ldr	r0, [fp, #-16]
   1b82c:	cmp	r0, #1
   1b830:	bcc	1b848 <__assert_fail@plt+0xa790>
   1b834:	b	1b854 <__assert_fail@plt+0xa79c>
   1b838:	ldr	r0, [fp, #-16]
   1b83c:	movw	r1, #0
   1b840:	cmp	r1, r0
   1b844:	bcs	1b854 <__assert_fail@plt+0xa79c>
   1b848:	movw	r0, #1
   1b84c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b850:	b	1b86c <__assert_fail@plt+0xa7b4>
   1b854:	ldr	r0, [fp, #-16]
   1b858:	movw	r1, #0
   1b85c:	sub	r0, r1, r0
   1b860:	mvn	r1, #0
   1b864:	udiv	r0, r1, r0
   1b868:	str	r0, [fp, #-44]	; 0xffffffd4
   1b86c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b870:	ldr	r1, [fp, #-12]
   1b874:	mvn	r2, #0
   1b878:	sub	r1, r2, r1
   1b87c:	cmp	r0, r1
   1b880:	bls	1b99c <__assert_fail@plt+0xa8e4>
   1b884:	b	1b9b0 <__assert_fail@plt+0xa8f8>
   1b888:	b	1b890 <__assert_fail@plt+0xa7d8>
   1b88c:	b	1b894 <__assert_fail@plt+0xa7dc>
   1b890:	b	1b8e4 <__assert_fail@plt+0xa82c>
   1b894:	ldr	r0, [fp, #-16]
   1b898:	cmn	r0, #1
   1b89c:	bne	1b8e4 <__assert_fail@plt+0xa82c>
   1b8a0:	b	1b8bc <__assert_fail@plt+0xa804>
   1b8a4:	ldr	r0, [fp, #-12]
   1b8a8:	add	r0, r0, #0
   1b8ac:	movw	r1, #0
   1b8b0:	cmp	r1, r0
   1b8b4:	bcc	1b99c <__assert_fail@plt+0xa8e4>
   1b8b8:	b	1b9b0 <__assert_fail@plt+0xa8f8>
   1b8bc:	ldr	r0, [fp, #-12]
   1b8c0:	movw	r1, #0
   1b8c4:	cmp	r1, r0
   1b8c8:	bcs	1b9b0 <__assert_fail@plt+0xa8f8>
   1b8cc:	ldr	r0, [fp, #-12]
   1b8d0:	sub	r0, r0, #1
   1b8d4:	mvn	r1, #0
   1b8d8:	cmp	r1, r0
   1b8dc:	bcc	1b99c <__assert_fail@plt+0xa8e4>
   1b8e0:	b	1b9b0 <__assert_fail@plt+0xa8f8>
   1b8e4:	ldr	r0, [fp, #-16]
   1b8e8:	movw	r1, #0
   1b8ec:	udiv	r0, r1, r0
   1b8f0:	ldr	r1, [fp, #-12]
   1b8f4:	cmp	r0, r1
   1b8f8:	bcc	1b99c <__assert_fail@plt+0xa8e4>
   1b8fc:	b	1b9b0 <__assert_fail@plt+0xa8f8>
   1b900:	ldr	r0, [fp, #-16]
   1b904:	cmp	r0, #0
   1b908:	bne	1b910 <__assert_fail@plt+0xa858>
   1b90c:	b	1b9b0 <__assert_fail@plt+0xa8f8>
   1b910:	ldr	r0, [fp, #-12]
   1b914:	cmp	r0, #0
   1b918:	bcs	1b984 <__assert_fail@plt+0xa8cc>
   1b91c:	b	1b924 <__assert_fail@plt+0xa86c>
   1b920:	b	1b928 <__assert_fail@plt+0xa870>
   1b924:	b	1b968 <__assert_fail@plt+0xa8b0>
   1b928:	ldr	r0, [fp, #-12]
   1b92c:	cmn	r0, #1
   1b930:	bne	1b968 <__assert_fail@plt+0xa8b0>
   1b934:	b	1b950 <__assert_fail@plt+0xa898>
   1b938:	ldr	r0, [fp, #-16]
   1b93c:	add	r0, r0, #0
   1b940:	movw	r1, #0
   1b944:	cmp	r1, r0
   1b948:	bcc	1b99c <__assert_fail@plt+0xa8e4>
   1b94c:	b	1b9b0 <__assert_fail@plt+0xa8f8>
   1b950:	ldr	r0, [fp, #-16]
   1b954:	sub	r0, r0, #1
   1b958:	mvn	r1, #0
   1b95c:	cmp	r1, r0
   1b960:	bcc	1b99c <__assert_fail@plt+0xa8e4>
   1b964:	b	1b9b0 <__assert_fail@plt+0xa8f8>
   1b968:	ldr	r0, [fp, #-12]
   1b96c:	movw	r1, #0
   1b970:	udiv	r0, r1, r0
   1b974:	ldr	r1, [fp, #-16]
   1b978:	cmp	r0, r1
   1b97c:	bcc	1b99c <__assert_fail@plt+0xa8e4>
   1b980:	b	1b9b0 <__assert_fail@plt+0xa8f8>
   1b984:	ldr	r0, [fp, #-16]
   1b988:	mvn	r1, #0
   1b98c:	udiv	r0, r1, r0
   1b990:	ldr	r1, [fp, #-12]
   1b994:	cmp	r0, r1
   1b998:	bcs	1b9b0 <__assert_fail@plt+0xa8f8>
   1b99c:	ldr	r0, [fp, #-12]
   1b9a0:	ldr	r1, [fp, #-16]
   1b9a4:	mul	r0, r0, r1
   1b9a8:	str	r0, [fp, #-20]	; 0xffffffec
   1b9ac:	b	1c1ec <__assert_fail@plt+0xb134>
   1b9b0:	ldr	r0, [fp, #-12]
   1b9b4:	ldr	r1, [fp, #-16]
   1b9b8:	mul	r0, r0, r1
   1b9bc:	str	r0, [fp, #-20]	; 0xffffffec
   1b9c0:	b	1c204 <__assert_fail@plt+0xb14c>
   1b9c4:	b	1b9c8 <__assert_fail@plt+0xa910>
   1b9c8:	b	1bb8c <__assert_fail@plt+0xaad4>
   1b9cc:	ldr	r0, [fp, #-16]
   1b9d0:	cmp	r0, #0
   1b9d4:	bcs	1bad4 <__assert_fail@plt+0xaa1c>
   1b9d8:	ldr	r0, [fp, #-12]
   1b9dc:	cmp	r0, #0
   1b9e0:	bcs	1ba68 <__assert_fail@plt+0xa9b0>
   1b9e4:	b	1ba04 <__assert_fail@plt+0xa94c>
   1b9e8:	ldr	r0, [pc, #2096]	; 1c220 <__assert_fail@plt+0xb168>
   1b9ec:	ldr	r1, [fp, #-12]
   1b9f0:	ldr	r2, [fp, #-16]
   1b9f4:	udiv	r0, r0, r2
   1b9f8:	cmp	r1, r0
   1b9fc:	bcc	1bb64 <__assert_fail@plt+0xaaac>
   1ba00:	b	1bb78 <__assert_fail@plt+0xaac0>
   1ba04:	b	1ba18 <__assert_fail@plt+0xa960>
   1ba08:	ldr	r0, [fp, #-16]
   1ba0c:	cmp	r0, #1
   1ba10:	bcc	1ba28 <__assert_fail@plt+0xa970>
   1ba14:	b	1ba34 <__assert_fail@plt+0xa97c>
   1ba18:	ldr	r0, [fp, #-16]
   1ba1c:	movw	r1, #0
   1ba20:	cmp	r1, r0
   1ba24:	bcs	1ba34 <__assert_fail@plt+0xa97c>
   1ba28:	movw	r0, #0
   1ba2c:	str	r0, [fp, #-48]	; 0xffffffd0
   1ba30:	b	1ba4c <__assert_fail@plt+0xa994>
   1ba34:	ldr	r0, [pc, #2020]	; 1c220 <__assert_fail@plt+0xb168>
   1ba38:	ldr	r1, [fp, #-16]
   1ba3c:	movw	r2, #0
   1ba40:	sub	r1, r2, r1
   1ba44:	udiv	r0, r0, r1
   1ba48:	str	r0, [fp, #-48]	; 0xffffffd0
   1ba4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ba50:	ldr	r1, [fp, #-12]
   1ba54:	mvn	r2, #0
   1ba58:	sub	r1, r2, r1
   1ba5c:	cmp	r0, r1
   1ba60:	bls	1bb64 <__assert_fail@plt+0xaaac>
   1ba64:	b	1bb78 <__assert_fail@plt+0xaac0>
   1ba68:	ldr	r0, [fp, #-16]
   1ba6c:	cmn	r0, #1
   1ba70:	bne	1bab8 <__assert_fail@plt+0xaa00>
   1ba74:	b	1ba90 <__assert_fail@plt+0xa9d8>
   1ba78:	ldr	r0, [fp, #-12]
   1ba7c:	add	r0, r0, #-2147483648	; 0x80000000
   1ba80:	movw	r1, #0
   1ba84:	cmp	r1, r0
   1ba88:	bcc	1bb64 <__assert_fail@plt+0xaaac>
   1ba8c:	b	1bb78 <__assert_fail@plt+0xaac0>
   1ba90:	ldr	r0, [fp, #-12]
   1ba94:	movw	r1, #0
   1ba98:	cmp	r1, r0
   1ba9c:	bcs	1bb78 <__assert_fail@plt+0xaac0>
   1baa0:	ldr	r0, [pc, #1912]	; 1c220 <__assert_fail@plt+0xb168>
   1baa4:	ldr	r1, [fp, #-12]
   1baa8:	sub	r1, r1, #1
   1baac:	cmp	r0, r1
   1bab0:	bcc	1bb64 <__assert_fail@plt+0xaaac>
   1bab4:	b	1bb78 <__assert_fail@plt+0xaac0>
   1bab8:	ldr	r0, [pc, #1892]	; 1c224 <__assert_fail@plt+0xb16c>
   1babc:	ldr	r1, [fp, #-16]
   1bac0:	udiv	r0, r0, r1
   1bac4:	ldr	r1, [fp, #-12]
   1bac8:	cmp	r0, r1
   1bacc:	bcc	1bb64 <__assert_fail@plt+0xaaac>
   1bad0:	b	1bb78 <__assert_fail@plt+0xaac0>
   1bad4:	ldr	r0, [fp, #-16]
   1bad8:	cmp	r0, #0
   1badc:	bne	1bae4 <__assert_fail@plt+0xaa2c>
   1bae0:	b	1bb78 <__assert_fail@plt+0xaac0>
   1bae4:	ldr	r0, [fp, #-12]
   1bae8:	cmp	r0, #0
   1baec:	bcs	1bb4c <__assert_fail@plt+0xaa94>
   1baf0:	ldr	r0, [fp, #-12]
   1baf4:	cmn	r0, #1
   1baf8:	bne	1bb30 <__assert_fail@plt+0xaa78>
   1bafc:	b	1bb18 <__assert_fail@plt+0xaa60>
   1bb00:	ldr	r0, [fp, #-16]
   1bb04:	add	r0, r0, #-2147483648	; 0x80000000
   1bb08:	movw	r1, #0
   1bb0c:	cmp	r1, r0
   1bb10:	bcc	1bb64 <__assert_fail@plt+0xaaac>
   1bb14:	b	1bb78 <__assert_fail@plt+0xaac0>
   1bb18:	ldr	r0, [pc, #1792]	; 1c220 <__assert_fail@plt+0xb168>
   1bb1c:	ldr	r1, [fp, #-16]
   1bb20:	sub	r1, r1, #1
   1bb24:	cmp	r0, r1
   1bb28:	bcc	1bb64 <__assert_fail@plt+0xaaac>
   1bb2c:	b	1bb78 <__assert_fail@plt+0xaac0>
   1bb30:	ldr	r0, [pc, #1772]	; 1c224 <__assert_fail@plt+0xb16c>
   1bb34:	ldr	r1, [fp, #-12]
   1bb38:	udiv	r0, r0, r1
   1bb3c:	ldr	r1, [fp, #-16]
   1bb40:	cmp	r0, r1
   1bb44:	bcc	1bb64 <__assert_fail@plt+0xaaac>
   1bb48:	b	1bb78 <__assert_fail@plt+0xaac0>
   1bb4c:	ldr	r0, [pc, #1740]	; 1c220 <__assert_fail@plt+0xb168>
   1bb50:	ldr	r1, [fp, #-16]
   1bb54:	udiv	r0, r0, r1
   1bb58:	ldr	r1, [fp, #-12]
   1bb5c:	cmp	r0, r1
   1bb60:	bcs	1bb78 <__assert_fail@plt+0xaac0>
   1bb64:	ldr	r0, [fp, #-12]
   1bb68:	ldr	r1, [fp, #-16]
   1bb6c:	mul	r0, r0, r1
   1bb70:	str	r0, [fp, #-20]	; 0xffffffec
   1bb74:	b	1c1ec <__assert_fail@plt+0xb134>
   1bb78:	ldr	r0, [fp, #-12]
   1bb7c:	ldr	r1, [fp, #-16]
   1bb80:	mul	r0, r0, r1
   1bb84:	str	r0, [fp, #-20]	; 0xffffffec
   1bb88:	b	1c204 <__assert_fail@plt+0xb14c>
   1bb8c:	ldr	r0, [fp, #-16]
   1bb90:	cmp	r0, #0
   1bb94:	bcs	1bca0 <__assert_fail@plt+0xabe8>
   1bb98:	ldr	r0, [fp, #-12]
   1bb9c:	cmp	r0, #0
   1bba0:	bcs	1bc28 <__assert_fail@plt+0xab70>
   1bba4:	b	1bbc4 <__assert_fail@plt+0xab0c>
   1bba8:	ldr	r0, [fp, #-12]
   1bbac:	ldr	r1, [fp, #-16]
   1bbb0:	mvn	r2, #0
   1bbb4:	udiv	r1, r2, r1
   1bbb8:	cmp	r0, r1
   1bbbc:	bcc	1bd3c <__assert_fail@plt+0xac84>
   1bbc0:	b	1bd50 <__assert_fail@plt+0xac98>
   1bbc4:	b	1bbd8 <__assert_fail@plt+0xab20>
   1bbc8:	ldr	r0, [fp, #-16]
   1bbcc:	cmp	r0, #1
   1bbd0:	bcc	1bbe8 <__assert_fail@plt+0xab30>
   1bbd4:	b	1bbf4 <__assert_fail@plt+0xab3c>
   1bbd8:	ldr	r0, [fp, #-16]
   1bbdc:	movw	r1, #0
   1bbe0:	cmp	r1, r0
   1bbe4:	bcs	1bbf4 <__assert_fail@plt+0xab3c>
   1bbe8:	movw	r0, #1
   1bbec:	str	r0, [fp, #-52]	; 0xffffffcc
   1bbf0:	b	1bc0c <__assert_fail@plt+0xab54>
   1bbf4:	ldr	r0, [fp, #-16]
   1bbf8:	movw	r1, #0
   1bbfc:	sub	r0, r1, r0
   1bc00:	mvn	r1, #0
   1bc04:	udiv	r0, r1, r0
   1bc08:	str	r0, [fp, #-52]	; 0xffffffcc
   1bc0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1bc10:	ldr	r1, [fp, #-12]
   1bc14:	mvn	r2, #0
   1bc18:	sub	r1, r2, r1
   1bc1c:	cmp	r0, r1
   1bc20:	bls	1bd3c <__assert_fail@plt+0xac84>
   1bc24:	b	1bd50 <__assert_fail@plt+0xac98>
   1bc28:	b	1bc30 <__assert_fail@plt+0xab78>
   1bc2c:	b	1bc34 <__assert_fail@plt+0xab7c>
   1bc30:	b	1bc84 <__assert_fail@plt+0xabcc>
   1bc34:	ldr	r0, [fp, #-16]
   1bc38:	cmn	r0, #1
   1bc3c:	bne	1bc84 <__assert_fail@plt+0xabcc>
   1bc40:	b	1bc5c <__assert_fail@plt+0xaba4>
   1bc44:	ldr	r0, [fp, #-12]
   1bc48:	add	r0, r0, #0
   1bc4c:	movw	r1, #0
   1bc50:	cmp	r1, r0
   1bc54:	bcc	1bd3c <__assert_fail@plt+0xac84>
   1bc58:	b	1bd50 <__assert_fail@plt+0xac98>
   1bc5c:	ldr	r0, [fp, #-12]
   1bc60:	movw	r1, #0
   1bc64:	cmp	r1, r0
   1bc68:	bcs	1bd50 <__assert_fail@plt+0xac98>
   1bc6c:	ldr	r0, [fp, #-12]
   1bc70:	sub	r0, r0, #1
   1bc74:	mvn	r1, #0
   1bc78:	cmp	r1, r0
   1bc7c:	bcc	1bd3c <__assert_fail@plt+0xac84>
   1bc80:	b	1bd50 <__assert_fail@plt+0xac98>
   1bc84:	ldr	r0, [fp, #-16]
   1bc88:	movw	r1, #0
   1bc8c:	udiv	r0, r1, r0
   1bc90:	ldr	r1, [fp, #-12]
   1bc94:	cmp	r0, r1
   1bc98:	bcc	1bd3c <__assert_fail@plt+0xac84>
   1bc9c:	b	1bd50 <__assert_fail@plt+0xac98>
   1bca0:	ldr	r0, [fp, #-16]
   1bca4:	cmp	r0, #0
   1bca8:	bne	1bcb0 <__assert_fail@plt+0xabf8>
   1bcac:	b	1bd50 <__assert_fail@plt+0xac98>
   1bcb0:	ldr	r0, [fp, #-12]
   1bcb4:	cmp	r0, #0
   1bcb8:	bcs	1bd24 <__assert_fail@plt+0xac6c>
   1bcbc:	b	1bcc4 <__assert_fail@plt+0xac0c>
   1bcc0:	b	1bcc8 <__assert_fail@plt+0xac10>
   1bcc4:	b	1bd08 <__assert_fail@plt+0xac50>
   1bcc8:	ldr	r0, [fp, #-12]
   1bccc:	cmn	r0, #1
   1bcd0:	bne	1bd08 <__assert_fail@plt+0xac50>
   1bcd4:	b	1bcf0 <__assert_fail@plt+0xac38>
   1bcd8:	ldr	r0, [fp, #-16]
   1bcdc:	add	r0, r0, #0
   1bce0:	movw	r1, #0
   1bce4:	cmp	r1, r0
   1bce8:	bcc	1bd3c <__assert_fail@plt+0xac84>
   1bcec:	b	1bd50 <__assert_fail@plt+0xac98>
   1bcf0:	ldr	r0, [fp, #-16]
   1bcf4:	sub	r0, r0, #1
   1bcf8:	mvn	r1, #0
   1bcfc:	cmp	r1, r0
   1bd00:	bcc	1bd3c <__assert_fail@plt+0xac84>
   1bd04:	b	1bd50 <__assert_fail@plt+0xac98>
   1bd08:	ldr	r0, [fp, #-12]
   1bd0c:	movw	r1, #0
   1bd10:	udiv	r0, r1, r0
   1bd14:	ldr	r1, [fp, #-16]
   1bd18:	cmp	r0, r1
   1bd1c:	bcc	1bd3c <__assert_fail@plt+0xac84>
   1bd20:	b	1bd50 <__assert_fail@plt+0xac98>
   1bd24:	ldr	r0, [fp, #-16]
   1bd28:	mvn	r1, #0
   1bd2c:	udiv	r0, r1, r0
   1bd30:	ldr	r1, [fp, #-12]
   1bd34:	cmp	r0, r1
   1bd38:	bcs	1bd50 <__assert_fail@plt+0xac98>
   1bd3c:	ldr	r0, [fp, #-12]
   1bd40:	ldr	r1, [fp, #-16]
   1bd44:	mul	r0, r0, r1
   1bd48:	str	r0, [fp, #-20]	; 0xffffffec
   1bd4c:	b	1c1ec <__assert_fail@plt+0xb134>
   1bd50:	ldr	r0, [fp, #-12]
   1bd54:	ldr	r1, [fp, #-16]
   1bd58:	mul	r0, r0, r1
   1bd5c:	str	r0, [fp, #-20]	; 0xffffffec
   1bd60:	b	1c204 <__assert_fail@plt+0xb14c>
   1bd64:	b	1bfb8 <__assert_fail@plt+0xaf00>
   1bd68:	ldr	r0, [fp, #-16]
   1bd6c:	cmp	r0, #0
   1bd70:	bcs	1bed0 <__assert_fail@plt+0xae18>
   1bd74:	ldr	r0, [fp, #-12]
   1bd78:	cmp	r0, #0
   1bd7c:	bcs	1be4c <__assert_fail@plt+0xad94>
   1bd80:	b	1bd84 <__assert_fail@plt+0xaccc>
   1bd84:	ldr	r0, [fp, #-12]
   1bd88:	ldr	r2, [fp, #-16]
   1bd8c:	mvn	r1, #0
   1bd90:	mvn	r3, #-2147483648	; 0x80000000
   1bd94:	mov	ip, #0
   1bd98:	str	r0, [fp, #-56]	; 0xffffffc8
   1bd9c:	mov	r0, r1
   1bda0:	mov	r1, r3
   1bda4:	mov	r3, ip
   1bda8:	bl	1cb38 <__assert_fail@plt+0xba80>
   1bdac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bdb0:	subs	r0, r2, r0
   1bdb4:	rscs	r1, r1, #0
   1bdb8:	str	r0, [fp, #-60]	; 0xffffffc4
   1bdbc:	str	r1, [fp, #-64]	; 0xffffffc0
   1bdc0:	blt	1bf90 <__assert_fail@plt+0xaed8>
   1bdc4:	b	1bfa4 <__assert_fail@plt+0xaeec>
   1bdc8:	b	1bddc <__assert_fail@plt+0xad24>
   1bdcc:	ldr	r0, [fp, #-16]
   1bdd0:	cmp	r0, #1
   1bdd4:	bcc	1bdec <__assert_fail@plt+0xad34>
   1bdd8:	b	1be00 <__assert_fail@plt+0xad48>
   1bddc:	ldr	r0, [fp, #-16]
   1bde0:	movw	r1, #0
   1bde4:	cmp	r1, r0
   1bde8:	bcs	1be00 <__assert_fail@plt+0xad48>
   1bdec:	mov	r0, #0
   1bdf0:	mvn	r1, #0
   1bdf4:	str	r1, [fp, #-68]	; 0xffffffbc
   1bdf8:	str	r0, [fp, #-72]	; 0xffffffb8
   1bdfc:	b	1be24 <__assert_fail@plt+0xad6c>
   1be00:	ldr	r0, [fp, #-16]
   1be04:	rsb	r2, r0, #0
   1be08:	mvn	r0, #0
   1be0c:	mvn	r1, #-2147483648	; 0x80000000
   1be10:	mov	r3, #0
   1be14:	bl	1cb38 <__assert_fail@plt+0xba80>
   1be18:	str	r0, [fp, #-68]	; 0xffffffbc
   1be1c:	str	r1, [fp, #-72]	; 0xffffffb8
   1be20:	b	1be24 <__assert_fail@plt+0xad6c>
   1be24:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1be28:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1be2c:	ldr	r2, [fp, #-12]
   1be30:	mvn	r2, r2
   1be34:	subs	r1, r2, r1
   1be38:	rscs	r0, r0, #0
   1be3c:	str	r1, [fp, #-76]	; 0xffffffb4
   1be40:	str	r0, [fp, #-80]	; 0xffffffb0
   1be44:	bge	1bf90 <__assert_fail@plt+0xaed8>
   1be48:	b	1bfa4 <__assert_fail@plt+0xaeec>
   1be4c:	ldr	r0, [fp, #-16]
   1be50:	cmn	r0, #1
   1be54:	bne	1be9c <__assert_fail@plt+0xade4>
   1be58:	b	1be7c <__assert_fail@plt+0xadc4>
   1be5c:	ldr	r0, [fp, #-12]
   1be60:	rsbs	r0, r0, #0
   1be64:	mov	r1, #0
   1be68:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1be6c:	str	r0, [fp, #-84]	; 0xffffffac
   1be70:	str	r1, [sp, #88]	; 0x58
   1be74:	blt	1bf90 <__assert_fail@plt+0xaed8>
   1be78:	b	1bfa4 <__assert_fail@plt+0xaeec>
   1be7c:	ldr	r0, [fp, #-12]
   1be80:	movw	r1, #0
   1be84:	cmp	r1, r0
   1be88:	bcs	1bfa4 <__assert_fail@plt+0xaeec>
   1be8c:	mov	r0, #0
   1be90:	cmp	r0, #0
   1be94:	bne	1bf90 <__assert_fail@plt+0xaed8>
   1be98:	b	1bfa4 <__assert_fail@plt+0xaeec>
   1be9c:	ldr	r2, [fp, #-16]
   1bea0:	mov	r1, #-2147483648	; 0x80000000
   1bea4:	mov	r0, #0
   1bea8:	str	r0, [sp, #84]	; 0x54
   1beac:	ldr	r3, [sp, #84]	; 0x54
   1beb0:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   1beb4:	ldr	r2, [fp, #-12]
   1beb8:	subs	r0, r0, r2
   1bebc:	sbcs	r1, r1, #0
   1bec0:	str	r0, [sp, #80]	; 0x50
   1bec4:	str	r1, [sp, #76]	; 0x4c
   1bec8:	blt	1bf90 <__assert_fail@plt+0xaed8>
   1becc:	b	1bfa4 <__assert_fail@plt+0xaeec>
   1bed0:	ldr	r0, [fp, #-16]
   1bed4:	cmp	r0, #0
   1bed8:	bne	1bee0 <__assert_fail@plt+0xae28>
   1bedc:	b	1bfa4 <__assert_fail@plt+0xaeec>
   1bee0:	ldr	r0, [fp, #-12]
   1bee4:	cmp	r0, #0
   1bee8:	bcs	1bf60 <__assert_fail@plt+0xaea8>
   1beec:	ldr	r0, [fp, #-12]
   1bef0:	cmn	r0, #1
   1bef4:	bne	1bf2c <__assert_fail@plt+0xae74>
   1bef8:	b	1bf1c <__assert_fail@plt+0xae64>
   1befc:	ldr	r0, [fp, #-16]
   1bf00:	rsbs	r0, r0, #0
   1bf04:	mov	r1, #0
   1bf08:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1bf0c:	str	r0, [sp, #72]	; 0x48
   1bf10:	str	r1, [sp, #68]	; 0x44
   1bf14:	blt	1bf90 <__assert_fail@plt+0xaed8>
   1bf18:	b	1bfa4 <__assert_fail@plt+0xaeec>
   1bf1c:	mov	r0, #0
   1bf20:	cmp	r0, #0
   1bf24:	bne	1bf90 <__assert_fail@plt+0xaed8>
   1bf28:	b	1bfa4 <__assert_fail@plt+0xaeec>
   1bf2c:	ldr	r2, [fp, #-12]
   1bf30:	mov	r1, #-2147483648	; 0x80000000
   1bf34:	mov	r0, #0
   1bf38:	str	r0, [sp, #64]	; 0x40
   1bf3c:	ldr	r3, [sp, #64]	; 0x40
   1bf40:	bl	1ca64 <__assert_fail@plt+0xb9ac>
   1bf44:	ldr	r2, [fp, #-16]
   1bf48:	subs	r0, r0, r2
   1bf4c:	sbcs	r1, r1, #0
   1bf50:	str	r0, [sp, #60]	; 0x3c
   1bf54:	str	r1, [sp, #56]	; 0x38
   1bf58:	blt	1bf90 <__assert_fail@plt+0xaed8>
   1bf5c:	b	1bfa4 <__assert_fail@plt+0xaeec>
   1bf60:	ldr	r2, [fp, #-16]
   1bf64:	mvn	r0, #0
   1bf68:	mvn	r1, #-2147483648	; 0x80000000
   1bf6c:	mov	r3, #0
   1bf70:	bl	1cb38 <__assert_fail@plt+0xba80>
   1bf74:	ldr	r2, [fp, #-12]
   1bf78:	subs	r0, r0, r2
   1bf7c:	sbcs	r1, r1, #0
   1bf80:	str	r0, [sp, #52]	; 0x34
   1bf84:	str	r1, [sp, #48]	; 0x30
   1bf88:	bge	1bfa4 <__assert_fail@plt+0xaeec>
   1bf8c:	b	1bf90 <__assert_fail@plt+0xaed8>
   1bf90:	ldr	r0, [fp, #-12]
   1bf94:	ldr	r1, [fp, #-16]
   1bf98:	mul	r0, r0, r1
   1bf9c:	str	r0, [fp, #-20]	; 0xffffffec
   1bfa0:	b	1c1ec <__assert_fail@plt+0xb134>
   1bfa4:	ldr	r0, [fp, #-12]
   1bfa8:	ldr	r1, [fp, #-16]
   1bfac:	mul	r0, r0, r1
   1bfb0:	str	r0, [fp, #-20]	; 0xffffffec
   1bfb4:	b	1c204 <__assert_fail@plt+0xb14c>
   1bfb8:	ldr	r0, [fp, #-16]
   1bfbc:	cmp	r0, #0
   1bfc0:	bcs	1c10c <__assert_fail@plt+0xb054>
   1bfc4:	ldr	r0, [fp, #-12]
   1bfc8:	cmp	r0, #0
   1bfcc:	bcs	1c094 <__assert_fail@plt+0xafdc>
   1bfd0:	b	1c00c <__assert_fail@plt+0xaf54>
   1bfd4:	ldr	r0, [fp, #-12]
   1bfd8:	ldr	r2, [fp, #-16]
   1bfdc:	mvn	r1, #0
   1bfe0:	mov	r3, #0
   1bfe4:	str	r0, [sp, #44]	; 0x2c
   1bfe8:	mov	r0, r1
   1bfec:	bl	1cb38 <__assert_fail@plt+0xba80>
   1bff0:	ldr	r2, [sp, #44]	; 0x2c
   1bff4:	subs	r0, r2, r0
   1bff8:	rscs	r1, r1, #0
   1bffc:	str	r0, [sp, #40]	; 0x28
   1c000:	str	r1, [sp, #36]	; 0x24
   1c004:	bcc	1c1c4 <__assert_fail@plt+0xb10c>
   1c008:	b	1c1d8 <__assert_fail@plt+0xb120>
   1c00c:	b	1c020 <__assert_fail@plt+0xaf68>
   1c010:	ldr	r0, [fp, #-16]
   1c014:	cmp	r0, #1
   1c018:	bcc	1c030 <__assert_fail@plt+0xaf78>
   1c01c:	b	1c044 <__assert_fail@plt+0xaf8c>
   1c020:	ldr	r0, [fp, #-16]
   1c024:	movw	r1, #0
   1c028:	cmp	r1, r0
   1c02c:	bcs	1c044 <__assert_fail@plt+0xaf8c>
   1c030:	mov	r0, #1
   1c034:	mvn	r1, #0
   1c038:	str	r1, [sp, #32]
   1c03c:	str	r0, [sp, #28]
   1c040:	b	1c06c <__assert_fail@plt+0xafb4>
   1c044:	ldr	r0, [fp, #-16]
   1c048:	rsb	r2, r0, #0
   1c04c:	mvn	r0, #0
   1c050:	mov	r3, #0
   1c054:	str	r0, [sp, #24]
   1c058:	ldr	r1, [sp, #24]
   1c05c:	bl	1cb38 <__assert_fail@plt+0xba80>
   1c060:	str	r0, [sp, #32]
   1c064:	str	r1, [sp, #28]
   1c068:	b	1c06c <__assert_fail@plt+0xafb4>
   1c06c:	ldr	r0, [sp, #28]
   1c070:	ldr	r1, [sp, #32]
   1c074:	ldr	r2, [fp, #-12]
   1c078:	mvn	r2, r2
   1c07c:	subs	r1, r2, r1
   1c080:	rscs	r0, r0, #0
   1c084:	str	r1, [sp, #20]
   1c088:	str	r0, [sp, #16]
   1c08c:	bcs	1c1c4 <__assert_fail@plt+0xb10c>
   1c090:	b	1c1d8 <__assert_fail@plt+0xb120>
   1c094:	b	1c09c <__assert_fail@plt+0xafe4>
   1c098:	b	1c0a0 <__assert_fail@plt+0xafe8>
   1c09c:	b	1c0f0 <__assert_fail@plt+0xb038>
   1c0a0:	ldr	r0, [fp, #-16]
   1c0a4:	cmn	r0, #1
   1c0a8:	bne	1c0f0 <__assert_fail@plt+0xb038>
   1c0ac:	b	1c0c8 <__assert_fail@plt+0xb010>
   1c0b0:	ldr	r0, [fp, #-12]
   1c0b4:	add	r0, r0, #0
   1c0b8:	movw	r1, #0
   1c0bc:	cmp	r1, r0
   1c0c0:	bcc	1c1c4 <__assert_fail@plt+0xb10c>
   1c0c4:	b	1c1d8 <__assert_fail@plt+0xb120>
   1c0c8:	ldr	r0, [fp, #-12]
   1c0cc:	movw	r1, #0
   1c0d0:	cmp	r1, r0
   1c0d4:	bcs	1c1d8 <__assert_fail@plt+0xb120>
   1c0d8:	ldr	r0, [fp, #-12]
   1c0dc:	sub	r0, r0, #1
   1c0e0:	mvn	r1, #0
   1c0e4:	cmp	r1, r0
   1c0e8:	bcc	1c1c4 <__assert_fail@plt+0xb10c>
   1c0ec:	b	1c1d8 <__assert_fail@plt+0xb120>
   1c0f0:	ldr	r0, [fp, #-16]
   1c0f4:	movw	r1, #0
   1c0f8:	udiv	r0, r1, r0
   1c0fc:	ldr	r1, [fp, #-12]
   1c100:	cmp	r0, r1
   1c104:	bcc	1c1c4 <__assert_fail@plt+0xb10c>
   1c108:	b	1c1d8 <__assert_fail@plt+0xb120>
   1c10c:	ldr	r0, [fp, #-16]
   1c110:	cmp	r0, #0
   1c114:	bne	1c11c <__assert_fail@plt+0xb064>
   1c118:	b	1c1d8 <__assert_fail@plt+0xb120>
   1c11c:	ldr	r0, [fp, #-12]
   1c120:	cmp	r0, #0
   1c124:	bcs	1c190 <__assert_fail@plt+0xb0d8>
   1c128:	b	1c130 <__assert_fail@plt+0xb078>
   1c12c:	b	1c134 <__assert_fail@plt+0xb07c>
   1c130:	b	1c174 <__assert_fail@plt+0xb0bc>
   1c134:	ldr	r0, [fp, #-12]
   1c138:	cmn	r0, #1
   1c13c:	bne	1c174 <__assert_fail@plt+0xb0bc>
   1c140:	b	1c15c <__assert_fail@plt+0xb0a4>
   1c144:	ldr	r0, [fp, #-16]
   1c148:	add	r0, r0, #0
   1c14c:	movw	r1, #0
   1c150:	cmp	r1, r0
   1c154:	bcc	1c1c4 <__assert_fail@plt+0xb10c>
   1c158:	b	1c1d8 <__assert_fail@plt+0xb120>
   1c15c:	ldr	r0, [fp, #-16]
   1c160:	sub	r0, r0, #1
   1c164:	mvn	r1, #0
   1c168:	cmp	r1, r0
   1c16c:	bcc	1c1c4 <__assert_fail@plt+0xb10c>
   1c170:	b	1c1d8 <__assert_fail@plt+0xb120>
   1c174:	ldr	r0, [fp, #-12]
   1c178:	movw	r1, #0
   1c17c:	udiv	r0, r1, r0
   1c180:	ldr	r1, [fp, #-16]
   1c184:	cmp	r0, r1
   1c188:	bcc	1c1c4 <__assert_fail@plt+0xb10c>
   1c18c:	b	1c1d8 <__assert_fail@plt+0xb120>
   1c190:	ldr	r2, [fp, #-16]
   1c194:	mvn	r0, #0
   1c198:	mov	r3, #0
   1c19c:	str	r0, [sp, #12]
   1c1a0:	ldr	r1, [sp, #12]
   1c1a4:	bl	1cb38 <__assert_fail@plt+0xba80>
   1c1a8:	ldr	r2, [fp, #-12]
   1c1ac:	subs	r0, r0, r2
   1c1b0:	sbcs	r1, r1, #0
   1c1b4:	str	r0, [sp, #8]
   1c1b8:	str	r1, [sp, #4]
   1c1bc:	bcs	1c1d8 <__assert_fail@plt+0xb120>
   1c1c0:	b	1c1c4 <__assert_fail@plt+0xb10c>
   1c1c4:	ldr	r0, [fp, #-12]
   1c1c8:	ldr	r1, [fp, #-16]
   1c1cc:	mul	r0, r0, r1
   1c1d0:	str	r0, [fp, #-20]	; 0xffffffec
   1c1d4:	b	1c1ec <__assert_fail@plt+0xb134>
   1c1d8:	ldr	r0, [fp, #-12]
   1c1dc:	ldr	r1, [fp, #-16]
   1c1e0:	mul	r0, r0, r1
   1c1e4:	str	r0, [fp, #-20]	; 0xffffffec
   1c1e8:	b	1c204 <__assert_fail@plt+0xb14c>
   1c1ec:	bl	10fec <__errno_location@plt>
   1c1f0:	movw	lr, #12
   1c1f4:	str	lr, [r0]
   1c1f8:	movw	r0, #0
   1c1fc:	str	r0, [fp, #-4]
   1c200:	b	1c214 <__assert_fail@plt+0xb15c>
   1c204:	ldr	r0, [fp, #-8]
   1c208:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c20c:	bl	1a950 <__assert_fail@plt+0x9898>
   1c210:	str	r0, [fp, #-4]
   1c214:	ldr	r0, [fp, #-4]
   1c218:	mov	sp, fp
   1c21c:	pop	{fp, pc}
   1c220:	svcvc	0x00ffffff
   1c224:	andhi	r0, r0, r0
   1c228:			; <UNDEFINED> instruction: 0xffff8000
   1c22c:	sub	sp, sp, #12
   1c230:	str	r0, [sp, #4]
   1c234:	ldr	r0, [sp, #4]
   1c238:	sub	r1, r0, #48	; 0x30
   1c23c:	cmp	r1, #10
   1c240:	str	r0, [sp]
   1c244:	bcc	1c274 <__assert_fail@plt+0xb1bc>
   1c248:	b	1c24c <__assert_fail@plt+0xb194>
   1c24c:	ldr	r0, [sp]
   1c250:	sub	r1, r0, #65	; 0x41
   1c254:	cmp	r1, #26
   1c258:	bcc	1c274 <__assert_fail@plt+0xb1bc>
   1c25c:	b	1c260 <__assert_fail@plt+0xb1a8>
   1c260:	ldr	r0, [sp]
   1c264:	sub	r1, r0, #97	; 0x61
   1c268:	cmp	r1, #25
   1c26c:	bhi	1c284 <__assert_fail@plt+0xb1cc>
   1c270:	b	1c274 <__assert_fail@plt+0xb1bc>
   1c274:	movw	r0, #1
   1c278:	and	r0, r0, #1
   1c27c:	strb	r0, [sp, #11]
   1c280:	b	1c290 <__assert_fail@plt+0xb1d8>
   1c284:	movw	r0, #0
   1c288:	and	r0, r0, #1
   1c28c:	strb	r0, [sp, #11]
   1c290:	ldrb	r0, [sp, #11]
   1c294:	and	r0, r0, #1
   1c298:	add	sp, sp, #12
   1c29c:	bx	lr
   1c2a0:	sub	sp, sp, #12
   1c2a4:	str	r0, [sp, #4]
   1c2a8:	ldr	r0, [sp, #4]
   1c2ac:	sub	r1, r0, #65	; 0x41
   1c2b0:	cmp	r1, #26
   1c2b4:	str	r0, [sp]
   1c2b8:	bcc	1c2d4 <__assert_fail@plt+0xb21c>
   1c2bc:	b	1c2c0 <__assert_fail@plt+0xb208>
   1c2c0:	ldr	r0, [sp]
   1c2c4:	sub	r1, r0, #97	; 0x61
   1c2c8:	cmp	r1, #25
   1c2cc:	bhi	1c2e4 <__assert_fail@plt+0xb22c>
   1c2d0:	b	1c2d4 <__assert_fail@plt+0xb21c>
   1c2d4:	movw	r0, #1
   1c2d8:	and	r0, r0, #1
   1c2dc:	strb	r0, [sp, #11]
   1c2e0:	b	1c2f0 <__assert_fail@plt+0xb238>
   1c2e4:	movw	r0, #0
   1c2e8:	and	r0, r0, #1
   1c2ec:	strb	r0, [sp, #11]
   1c2f0:	ldrb	r0, [sp, #11]
   1c2f4:	and	r0, r0, #1
   1c2f8:	add	sp, sp, #12
   1c2fc:	bx	lr
   1c300:	sub	sp, sp, #8
   1c304:	str	r0, [sp]
   1c308:	ldr	r0, [sp]
   1c30c:	cmp	r0, #127	; 0x7f
   1c310:	bhi	1c328 <__assert_fail@plt+0xb270>
   1c314:	b	1c318 <__assert_fail@plt+0xb260>
   1c318:	movw	r0, #1
   1c31c:	and	r0, r0, #1
   1c320:	strb	r0, [sp, #7]
   1c324:	b	1c334 <__assert_fail@plt+0xb27c>
   1c328:	movw	r0, #0
   1c32c:	and	r0, r0, #1
   1c330:	strb	r0, [sp, #7]
   1c334:	ldrb	r0, [sp, #7]
   1c338:	and	r0, r0, #1
   1c33c:	add	sp, sp, #8
   1c340:	bx	lr
   1c344:	sub	sp, sp, #8
   1c348:	str	r0, [sp, #4]
   1c34c:	ldr	r0, [sp, #4]
   1c350:	cmp	r0, #32
   1c354:	movw	r0, #1
   1c358:	str	r0, [sp]
   1c35c:	beq	1c374 <__assert_fail@plt+0xb2bc>
   1c360:	ldr	r0, [sp, #4]
   1c364:	cmp	r0, #9
   1c368:	movw	r0, #0
   1c36c:	moveq	r0, #1
   1c370:	str	r0, [sp]
   1c374:	ldr	r0, [sp]
   1c378:	and	r0, r0, #1
   1c37c:	add	sp, sp, #8
   1c380:	bx	lr
   1c384:	sub	sp, sp, #12
   1c388:	str	r0, [sp, #4]
   1c38c:	ldr	r0, [sp, #4]
   1c390:	cmp	r0, #32
   1c394:	str	r0, [sp]
   1c398:	bcc	1c3b0 <__assert_fail@plt+0xb2f8>
   1c39c:	b	1c3a0 <__assert_fail@plt+0xb2e8>
   1c3a0:	ldr	r0, [sp]
   1c3a4:	cmp	r0, #127	; 0x7f
   1c3a8:	bne	1c3c0 <__assert_fail@plt+0xb308>
   1c3ac:	b	1c3b0 <__assert_fail@plt+0xb2f8>
   1c3b0:	movw	r0, #1
   1c3b4:	and	r0, r0, #1
   1c3b8:	strb	r0, [sp, #11]
   1c3bc:	b	1c3cc <__assert_fail@plt+0xb314>
   1c3c0:	movw	r0, #0
   1c3c4:	and	r0, r0, #1
   1c3c8:	strb	r0, [sp, #11]
   1c3cc:	ldrb	r0, [sp, #11]
   1c3d0:	and	r0, r0, #1
   1c3d4:	add	sp, sp, #12
   1c3d8:	bx	lr
   1c3dc:	sub	sp, sp, #8
   1c3e0:	str	r0, [sp]
   1c3e4:	ldr	r0, [sp]
   1c3e8:	sub	r0, r0, #48	; 0x30
   1c3ec:	cmp	r0, #9
   1c3f0:	bhi	1c408 <__assert_fail@plt+0xb350>
   1c3f4:	b	1c3f8 <__assert_fail@plt+0xb340>
   1c3f8:	movw	r0, #1
   1c3fc:	and	r0, r0, #1
   1c400:	strb	r0, [sp, #7]
   1c404:	b	1c414 <__assert_fail@plt+0xb35c>
   1c408:	movw	r0, #0
   1c40c:	and	r0, r0, #1
   1c410:	strb	r0, [sp, #7]
   1c414:	ldrb	r0, [sp, #7]
   1c418:	and	r0, r0, #1
   1c41c:	add	sp, sp, #8
   1c420:	bx	lr
   1c424:	sub	sp, sp, #8
   1c428:	str	r0, [sp]
   1c42c:	ldr	r0, [sp]
   1c430:	sub	r0, r0, #33	; 0x21
   1c434:	cmp	r0, #93	; 0x5d
   1c438:	bhi	1c450 <__assert_fail@plt+0xb398>
   1c43c:	b	1c440 <__assert_fail@plt+0xb388>
   1c440:	movw	r0, #1
   1c444:	and	r0, r0, #1
   1c448:	strb	r0, [sp, #7]
   1c44c:	b	1c45c <__assert_fail@plt+0xb3a4>
   1c450:	movw	r0, #0
   1c454:	and	r0, r0, #1
   1c458:	strb	r0, [sp, #7]
   1c45c:	ldrb	r0, [sp, #7]
   1c460:	and	r0, r0, #1
   1c464:	add	sp, sp, #8
   1c468:	bx	lr
   1c46c:	sub	sp, sp, #8
   1c470:	str	r0, [sp]
   1c474:	ldr	r0, [sp]
   1c478:	sub	r0, r0, #97	; 0x61
   1c47c:	cmp	r0, #25
   1c480:	bhi	1c498 <__assert_fail@plt+0xb3e0>
   1c484:	b	1c488 <__assert_fail@plt+0xb3d0>
   1c488:	movw	r0, #1
   1c48c:	and	r0, r0, #1
   1c490:	strb	r0, [sp, #7]
   1c494:	b	1c4a4 <__assert_fail@plt+0xb3ec>
   1c498:	movw	r0, #0
   1c49c:	and	r0, r0, #1
   1c4a0:	strb	r0, [sp, #7]
   1c4a4:	ldrb	r0, [sp, #7]
   1c4a8:	and	r0, r0, #1
   1c4ac:	add	sp, sp, #8
   1c4b0:	bx	lr
   1c4b4:	sub	sp, sp, #8
   1c4b8:	str	r0, [sp]
   1c4bc:	ldr	r0, [sp]
   1c4c0:	sub	r0, r0, #32
   1c4c4:	cmp	r0, #94	; 0x5e
   1c4c8:	bhi	1c4e0 <__assert_fail@plt+0xb428>
   1c4cc:	b	1c4d0 <__assert_fail@plt+0xb418>
   1c4d0:	movw	r0, #1
   1c4d4:	and	r0, r0, #1
   1c4d8:	strb	r0, [sp, #7]
   1c4dc:	b	1c4ec <__assert_fail@plt+0xb434>
   1c4e0:	movw	r0, #0
   1c4e4:	and	r0, r0, #1
   1c4e8:	strb	r0, [sp, #7]
   1c4ec:	ldrb	r0, [sp, #7]
   1c4f0:	and	r0, r0, #1
   1c4f4:	add	sp, sp, #8
   1c4f8:	bx	lr
   1c4fc:	sub	sp, sp, #12
   1c500:	str	r0, [sp, #4]
   1c504:	ldr	r0, [sp, #4]
   1c508:	sub	r0, r0, #33	; 0x21
   1c50c:	cmp	r0, #93	; 0x5d
   1c510:	str	r0, [sp]
   1c514:	bhi	1c6b0 <__assert_fail@plt+0xb5f8>
   1c518:	add	r0, pc, #8
   1c51c:	ldr	r1, [sp]
   1c520:	ldr	r0, [r0, r1, lsl #2]
   1c524:	mov	pc, r0
   1c528:	andeq	ip, r1, r0, lsr #13
   1c52c:	andeq	ip, r1, r0, lsr #13
   1c530:	andeq	ip, r1, r0, lsr #13
   1c534:	andeq	ip, r1, r0, lsr #13
   1c538:	andeq	ip, r1, r0, lsr #13
   1c53c:	andeq	ip, r1, r0, lsr #13
   1c540:	andeq	ip, r1, r0, lsr #13
   1c544:	andeq	ip, r1, r0, lsr #13
   1c548:	andeq	ip, r1, r0, lsr #13
   1c54c:	andeq	ip, r1, r0, lsr #13
   1c550:	andeq	ip, r1, r0, lsr #13
   1c554:	andeq	ip, r1, r0, lsr #13
   1c558:	andeq	ip, r1, r0, lsr #13
   1c55c:	andeq	ip, r1, r0, lsr #13
   1c560:	andeq	ip, r1, r0, lsr #13
   1c564:			; <UNDEFINED> instruction: 0x0001c6b0
   1c568:			; <UNDEFINED> instruction: 0x0001c6b0
   1c56c:			; <UNDEFINED> instruction: 0x0001c6b0
   1c570:			; <UNDEFINED> instruction: 0x0001c6b0
   1c574:			; <UNDEFINED> instruction: 0x0001c6b0
   1c578:			; <UNDEFINED> instruction: 0x0001c6b0
   1c57c:			; <UNDEFINED> instruction: 0x0001c6b0
   1c580:			; <UNDEFINED> instruction: 0x0001c6b0
   1c584:			; <UNDEFINED> instruction: 0x0001c6b0
   1c588:			; <UNDEFINED> instruction: 0x0001c6b0
   1c58c:	andeq	ip, r1, r0, lsr #13
   1c590:	andeq	ip, r1, r0, lsr #13
   1c594:	andeq	ip, r1, r0, lsr #13
   1c598:	andeq	ip, r1, r0, lsr #13
   1c59c:	andeq	ip, r1, r0, lsr #13
   1c5a0:	andeq	ip, r1, r0, lsr #13
   1c5a4:	andeq	ip, r1, r0, lsr #13
   1c5a8:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5ac:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5b0:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5b4:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5b8:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5bc:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5c0:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5c4:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5c8:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5cc:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5d0:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5d4:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5d8:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5dc:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5e0:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5e4:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5e8:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5ec:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5f0:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5f4:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5f8:			; <UNDEFINED> instruction: 0x0001c6b0
   1c5fc:			; <UNDEFINED> instruction: 0x0001c6b0
   1c600:			; <UNDEFINED> instruction: 0x0001c6b0
   1c604:			; <UNDEFINED> instruction: 0x0001c6b0
   1c608:			; <UNDEFINED> instruction: 0x0001c6b0
   1c60c:			; <UNDEFINED> instruction: 0x0001c6b0
   1c610:	andeq	ip, r1, r0, lsr #13
   1c614:	andeq	ip, r1, r0, lsr #13
   1c618:	andeq	ip, r1, r0, lsr #13
   1c61c:	andeq	ip, r1, r0, lsr #13
   1c620:	andeq	ip, r1, r0, lsr #13
   1c624:	andeq	ip, r1, r0, lsr #13
   1c628:			; <UNDEFINED> instruction: 0x0001c6b0
   1c62c:			; <UNDEFINED> instruction: 0x0001c6b0
   1c630:			; <UNDEFINED> instruction: 0x0001c6b0
   1c634:			; <UNDEFINED> instruction: 0x0001c6b0
   1c638:			; <UNDEFINED> instruction: 0x0001c6b0
   1c63c:			; <UNDEFINED> instruction: 0x0001c6b0
   1c640:			; <UNDEFINED> instruction: 0x0001c6b0
   1c644:			; <UNDEFINED> instruction: 0x0001c6b0
   1c648:			; <UNDEFINED> instruction: 0x0001c6b0
   1c64c:			; <UNDEFINED> instruction: 0x0001c6b0
   1c650:			; <UNDEFINED> instruction: 0x0001c6b0
   1c654:			; <UNDEFINED> instruction: 0x0001c6b0
   1c658:			; <UNDEFINED> instruction: 0x0001c6b0
   1c65c:			; <UNDEFINED> instruction: 0x0001c6b0
   1c660:			; <UNDEFINED> instruction: 0x0001c6b0
   1c664:			; <UNDEFINED> instruction: 0x0001c6b0
   1c668:			; <UNDEFINED> instruction: 0x0001c6b0
   1c66c:			; <UNDEFINED> instruction: 0x0001c6b0
   1c670:			; <UNDEFINED> instruction: 0x0001c6b0
   1c674:			; <UNDEFINED> instruction: 0x0001c6b0
   1c678:			; <UNDEFINED> instruction: 0x0001c6b0
   1c67c:			; <UNDEFINED> instruction: 0x0001c6b0
   1c680:			; <UNDEFINED> instruction: 0x0001c6b0
   1c684:			; <UNDEFINED> instruction: 0x0001c6b0
   1c688:			; <UNDEFINED> instruction: 0x0001c6b0
   1c68c:			; <UNDEFINED> instruction: 0x0001c6b0
   1c690:	andeq	ip, r1, r0, lsr #13
   1c694:	andeq	ip, r1, r0, lsr #13
   1c698:	andeq	ip, r1, r0, lsr #13
   1c69c:	andeq	ip, r1, r0, lsr #13
   1c6a0:	movw	r0, #1
   1c6a4:	and	r0, r0, #1
   1c6a8:	strb	r0, [sp, #11]
   1c6ac:	b	1c6bc <__assert_fail@plt+0xb604>
   1c6b0:	movw	r0, #0
   1c6b4:	and	r0, r0, #1
   1c6b8:	strb	r0, [sp, #11]
   1c6bc:	ldrb	r0, [sp, #11]
   1c6c0:	and	r0, r0, #1
   1c6c4:	add	sp, sp, #12
   1c6c8:	bx	lr
   1c6cc:	sub	sp, sp, #12
   1c6d0:	str	r0, [sp, #4]
   1c6d4:	ldr	r0, [sp, #4]
   1c6d8:	sub	r1, r0, #9
   1c6dc:	cmp	r1, #5
   1c6e0:	str	r0, [sp]
   1c6e4:	bcc	1c6fc <__assert_fail@plt+0xb644>
   1c6e8:	b	1c6ec <__assert_fail@plt+0xb634>
   1c6ec:	ldr	r0, [sp]
   1c6f0:	cmp	r0, #32
   1c6f4:	bne	1c70c <__assert_fail@plt+0xb654>
   1c6f8:	b	1c6fc <__assert_fail@plt+0xb644>
   1c6fc:	movw	r0, #1
   1c700:	and	r0, r0, #1
   1c704:	strb	r0, [sp, #11]
   1c708:	b	1c718 <__assert_fail@plt+0xb660>
   1c70c:	movw	r0, #0
   1c710:	and	r0, r0, #1
   1c714:	strb	r0, [sp, #11]
   1c718:	ldrb	r0, [sp, #11]
   1c71c:	and	r0, r0, #1
   1c720:	add	sp, sp, #12
   1c724:	bx	lr
   1c728:	sub	sp, sp, #8
   1c72c:	str	r0, [sp]
   1c730:	ldr	r0, [sp]
   1c734:	sub	r0, r0, #65	; 0x41
   1c738:	cmp	r0, #25
   1c73c:	bhi	1c754 <__assert_fail@plt+0xb69c>
   1c740:	b	1c744 <__assert_fail@plt+0xb68c>
   1c744:	movw	r0, #1
   1c748:	and	r0, r0, #1
   1c74c:	strb	r0, [sp, #7]
   1c750:	b	1c760 <__assert_fail@plt+0xb6a8>
   1c754:	movw	r0, #0
   1c758:	and	r0, r0, #1
   1c75c:	strb	r0, [sp, #7]
   1c760:	ldrb	r0, [sp, #7]
   1c764:	and	r0, r0, #1
   1c768:	add	sp, sp, #8
   1c76c:	bx	lr
   1c770:	sub	sp, sp, #12
   1c774:	str	r0, [sp, #4]
   1c778:	ldr	r0, [sp, #4]
   1c77c:	sub	r1, r0, #48	; 0x30
   1c780:	cmp	r1, #10
   1c784:	str	r0, [sp]
   1c788:	bcc	1c7b8 <__assert_fail@plt+0xb700>
   1c78c:	b	1c790 <__assert_fail@plt+0xb6d8>
   1c790:	ldr	r0, [sp]
   1c794:	sub	r1, r0, #65	; 0x41
   1c798:	cmp	r1, #6
   1c79c:	bcc	1c7b8 <__assert_fail@plt+0xb700>
   1c7a0:	b	1c7a4 <__assert_fail@plt+0xb6ec>
   1c7a4:	ldr	r0, [sp]
   1c7a8:	sub	r1, r0, #97	; 0x61
   1c7ac:	cmp	r1, #5
   1c7b0:	bhi	1c7c8 <__assert_fail@plt+0xb710>
   1c7b4:	b	1c7b8 <__assert_fail@plt+0xb700>
   1c7b8:	movw	r0, #1
   1c7bc:	and	r0, r0, #1
   1c7c0:	strb	r0, [sp, #11]
   1c7c4:	b	1c7d4 <__assert_fail@plt+0xb71c>
   1c7c8:	movw	r0, #0
   1c7cc:	and	r0, r0, #1
   1c7d0:	strb	r0, [sp, #11]
   1c7d4:	ldrb	r0, [sp, #11]
   1c7d8:	and	r0, r0, #1
   1c7dc:	add	sp, sp, #12
   1c7e0:	bx	lr
   1c7e4:	sub	sp, sp, #8
   1c7e8:	str	r0, [sp]
   1c7ec:	ldr	r0, [sp]
   1c7f0:	sub	r0, r0, #65	; 0x41
   1c7f4:	cmp	r0, #25
   1c7f8:	bhi	1c814 <__assert_fail@plt+0xb75c>
   1c7fc:	b	1c800 <__assert_fail@plt+0xb748>
   1c800:	ldr	r0, [sp]
   1c804:	sub	r0, r0, #65	; 0x41
   1c808:	add	r0, r0, #97	; 0x61
   1c80c:	str	r0, [sp, #4]
   1c810:	b	1c81c <__assert_fail@plt+0xb764>
   1c814:	ldr	r0, [sp]
   1c818:	str	r0, [sp, #4]
   1c81c:	ldr	r0, [sp, #4]
   1c820:	add	sp, sp, #8
   1c824:	bx	lr
   1c828:	sub	sp, sp, #8
   1c82c:	str	r0, [sp]
   1c830:	ldr	r0, [sp]
   1c834:	sub	r0, r0, #97	; 0x61
   1c838:	cmp	r0, #25
   1c83c:	bhi	1c858 <__assert_fail@plt+0xb7a0>
   1c840:	b	1c844 <__assert_fail@plt+0xb78c>
   1c844:	ldr	r0, [sp]
   1c848:	sub	r0, r0, #97	; 0x61
   1c84c:	add	r0, r0, #65	; 0x41
   1c850:	str	r0, [sp, #4]
   1c854:	b	1c860 <__assert_fail@plt+0xb7a8>
   1c858:	ldr	r0, [sp]
   1c85c:	str	r0, [sp, #4]
   1c860:	ldr	r0, [sp, #4]
   1c864:	add	sp, sp, #8
   1c868:	bx	lr
   1c86c:	push	{r4, r5, fp, lr}
   1c870:	add	fp, sp, #8
   1c874:	sub	sp, sp, #272	; 0x110
   1c878:	add	r1, sp, #7
   1c87c:	str	r0, [fp, #-16]
   1c880:	ldr	r0, [fp, #-16]
   1c884:	movw	r2, #257	; 0x101
   1c888:	bl	1c908 <__assert_fail@plt+0xb850>
   1c88c:	cmp	r0, #0
   1c890:	beq	1c8a4 <__assert_fail@plt+0xb7ec>
   1c894:	movw	r0, #0
   1c898:	and	r0, r0, #1
   1c89c:	strb	r0, [fp, #-9]
   1c8a0:	b	1c8f8 <__assert_fail@plt+0xb840>
   1c8a4:	add	r0, sp, #7
   1c8a8:	movw	r1, #54900	; 0xd674
   1c8ac:	movt	r1, #1
   1c8b0:	bl	10e6c <strcmp@plt>
   1c8b4:	cmp	r0, #0
   1c8b8:	movw	r0, #1
   1c8bc:	str	r0, [sp]
   1c8c0:	beq	1c8e4 <__assert_fail@plt+0xb82c>
   1c8c4:	add	r0, sp, #7
   1c8c8:	movw	r1, #54902	; 0xd676
   1c8cc:	movt	r1, #1
   1c8d0:	bl	10e6c <strcmp@plt>
   1c8d4:	cmp	r0, #0
   1c8d8:	movw	r0, #0
   1c8dc:	moveq	r0, #1
   1c8e0:	str	r0, [sp]
   1c8e4:	ldr	r0, [sp]
   1c8e8:	mvn	r1, #0
   1c8ec:	eor	r0, r0, r1
   1c8f0:	and	r0, r0, #1
   1c8f4:	strb	r0, [fp, #-9]
   1c8f8:	ldrb	r0, [fp, #-9]
   1c8fc:	and	r0, r0, #1
   1c900:	sub	sp, fp, #8
   1c904:	pop	{r4, r5, fp, pc}
   1c908:	push	{fp, lr}
   1c90c:	mov	fp, sp
   1c910:	sub	sp, sp, #16
   1c914:	str	r0, [fp, #-4]
   1c918:	str	r1, [sp, #8]
   1c91c:	str	r2, [sp, #4]
   1c920:	ldr	r0, [fp, #-4]
   1c924:	ldr	r1, [sp, #8]
   1c928:	ldr	r2, [sp, #4]
   1c92c:	bl	1c938 <__assert_fail@plt+0xb880>
   1c930:	mov	sp, fp
   1c934:	pop	{fp, pc}
   1c938:	push	{fp, lr}
   1c93c:	mov	fp, sp
   1c940:	sub	sp, sp, #24
   1c944:	str	r0, [fp, #-8]
   1c948:	str	r1, [sp, #12]
   1c94c:	str	r2, [sp, #8]
   1c950:	ldr	r0, [fp, #-8]
   1c954:	bl	1ca38 <__assert_fail@plt+0xb980>
   1c958:	str	r0, [sp, #4]
   1c95c:	ldr	r0, [sp, #4]
   1c960:	movw	r1, #0
   1c964:	cmp	r0, r1
   1c968:	bne	1c990 <__assert_fail@plt+0xb8d8>
   1c96c:	ldr	r0, [sp, #8]
   1c970:	cmp	r0, #0
   1c974:	bls	1c984 <__assert_fail@plt+0xb8cc>
   1c978:	ldr	r0, [sp, #12]
   1c97c:	movw	r1, #0
   1c980:	strb	r1, [r0]
   1c984:	movw	r0, #22
   1c988:	str	r0, [fp, #-4]
   1c98c:	b	1ca0c <__assert_fail@plt+0xb954>
   1c990:	ldr	r0, [sp, #4]
   1c994:	bl	10fc8 <strlen@plt>
   1c998:	str	r0, [sp]
   1c99c:	ldr	r0, [sp]
   1c9a0:	ldr	lr, [sp, #8]
   1c9a4:	cmp	r0, lr
   1c9a8:	bcs	1c9cc <__assert_fail@plt+0xb914>
   1c9ac:	ldr	r0, [sp, #12]
   1c9b0:	ldr	r1, [sp, #4]
   1c9b4:	ldr	r2, [sp]
   1c9b8:	add	r2, r2, #1
   1c9bc:	bl	10ec0 <memcpy@plt>
   1c9c0:	movw	r0, #0
   1c9c4:	str	r0, [fp, #-4]
   1c9c8:	b	1ca0c <__assert_fail@plt+0xb954>
   1c9cc:	ldr	r0, [sp, #8]
   1c9d0:	cmp	r0, #0
   1c9d4:	bls	1ca04 <__assert_fail@plt+0xb94c>
   1c9d8:	ldr	r0, [sp, #12]
   1c9dc:	ldr	r1, [sp, #4]
   1c9e0:	ldr	r2, [sp, #8]
   1c9e4:	sub	r2, r2, #1
   1c9e8:	bl	10ec0 <memcpy@plt>
   1c9ec:	ldr	r0, [sp, #12]
   1c9f0:	ldr	r1, [sp, #8]
   1c9f4:	sub	r1, r1, #1
   1c9f8:	add	r0, r0, r1
   1c9fc:	movw	r1, #0
   1ca00:	strb	r1, [r0]
   1ca04:	movw	r0, #34	; 0x22
   1ca08:	str	r0, [fp, #-4]
   1ca0c:	ldr	r0, [fp, #-4]
   1ca10:	mov	sp, fp
   1ca14:	pop	{fp, pc}
   1ca18:	push	{fp, lr}
   1ca1c:	mov	fp, sp
   1ca20:	sub	sp, sp, #8
   1ca24:	str	r0, [sp, #4]
   1ca28:	ldr	r0, [sp, #4]
   1ca2c:	bl	1ca38 <__assert_fail@plt+0xb980>
   1ca30:	mov	sp, fp
   1ca34:	pop	{fp, pc}
   1ca38:	push	{fp, lr}
   1ca3c:	mov	fp, sp
   1ca40:	sub	sp, sp, #8
   1ca44:	str	r0, [sp, #4]
   1ca48:	ldr	r0, [sp, #4]
   1ca4c:	movw	r1, #0
   1ca50:	bl	11040 <setlocale@plt>
   1ca54:	str	r0, [sp]
   1ca58:	ldr	r0, [sp]
   1ca5c:	mov	sp, fp
   1ca60:	pop	{fp, pc}
   1ca64:	cmp	r3, #0
   1ca68:	cmpeq	r2, #0
   1ca6c:	bne	1ca90 <__assert_fail@plt+0xb9d8>
   1ca70:	cmp	r1, #0
   1ca74:	movlt	r1, #-2147483648	; 0x80000000
   1ca78:	movlt	r0, #0
   1ca7c:	blt	1ca8c <__assert_fail@plt+0xb9d4>
   1ca80:	cmpeq	r0, #0
   1ca84:	mvnne	r1, #-2147483648	; 0x80000000
   1ca88:	mvnne	r0, #0
   1ca8c:	b	1cb74 <__assert_fail@plt+0xbabc>
   1ca90:	sub	sp, sp, #8
   1ca94:	push	{sp, lr}
   1ca98:	cmp	r1, #0
   1ca9c:	blt	1cabc <__assert_fail@plt+0xba04>
   1caa0:	cmp	r3, #0
   1caa4:	blt	1caf0 <__assert_fail@plt+0xba38>
   1caa8:	bl	1cb84 <__assert_fail@plt+0xbacc>
   1caac:	ldr	lr, [sp, #4]
   1cab0:	add	sp, sp, #8
   1cab4:	pop	{r2, r3}
   1cab8:	bx	lr
   1cabc:	rsbs	r0, r0, #0
   1cac0:	sbc	r1, r1, r1, lsl #1
   1cac4:	cmp	r3, #0
   1cac8:	blt	1cb14 <__assert_fail@plt+0xba5c>
   1cacc:	bl	1cb84 <__assert_fail@plt+0xbacc>
   1cad0:	ldr	lr, [sp, #4]
   1cad4:	add	sp, sp, #8
   1cad8:	pop	{r2, r3}
   1cadc:	rsbs	r0, r0, #0
   1cae0:	sbc	r1, r1, r1, lsl #1
   1cae4:	rsbs	r2, r2, #0
   1cae8:	sbc	r3, r3, r3, lsl #1
   1caec:	bx	lr
   1caf0:	rsbs	r2, r2, #0
   1caf4:	sbc	r3, r3, r3, lsl #1
   1caf8:	bl	1cb84 <__assert_fail@plt+0xbacc>
   1cafc:	ldr	lr, [sp, #4]
   1cb00:	add	sp, sp, #8
   1cb04:	pop	{r2, r3}
   1cb08:	rsbs	r0, r0, #0
   1cb0c:	sbc	r1, r1, r1, lsl #1
   1cb10:	bx	lr
   1cb14:	rsbs	r2, r2, #0
   1cb18:	sbc	r3, r3, r3, lsl #1
   1cb1c:	bl	1cb84 <__assert_fail@plt+0xbacc>
   1cb20:	ldr	lr, [sp, #4]
   1cb24:	add	sp, sp, #8
   1cb28:	pop	{r2, r3}
   1cb2c:	rsbs	r2, r2, #0
   1cb30:	sbc	r3, r3, r3, lsl #1
   1cb34:	bx	lr
   1cb38:	cmp	r3, #0
   1cb3c:	cmpeq	r2, #0
   1cb40:	bne	1cb58 <__assert_fail@plt+0xbaa0>
   1cb44:	cmp	r1, #0
   1cb48:	cmpeq	r0, #0
   1cb4c:	mvnne	r1, #0
   1cb50:	mvnne	r0, #0
   1cb54:	b	1cb74 <__assert_fail@plt+0xbabc>
   1cb58:	sub	sp, sp, #8
   1cb5c:	push	{sp, lr}
   1cb60:	bl	1cb84 <__assert_fail@plt+0xbacc>
   1cb64:	ldr	lr, [sp, #4]
   1cb68:	add	sp, sp, #8
   1cb6c:	pop	{r2, r3}
   1cb70:	bx	lr
   1cb74:	push	{r1, lr}
   1cb78:	mov	r0, #8
   1cb7c:	bl	10e60 <raise@plt>
   1cb80:	pop	{r1, pc}
   1cb84:	cmp	r1, r3
   1cb88:	cmpeq	r0, r2
   1cb8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb90:	mov	r4, r0
   1cb94:	movcc	r0, #0
   1cb98:	mov	r5, r1
   1cb9c:	ldr	lr, [sp, #36]	; 0x24
   1cba0:	movcc	r1, r0
   1cba4:	bcc	1cca0 <__assert_fail@plt+0xbbe8>
   1cba8:	cmp	r3, #0
   1cbac:	clzeq	ip, r2
   1cbb0:	clzne	ip, r3
   1cbb4:	addeq	ip, ip, #32
   1cbb8:	cmp	r5, #0
   1cbbc:	clzeq	r1, r4
   1cbc0:	addeq	r1, r1, #32
   1cbc4:	clzne	r1, r5
   1cbc8:	sub	ip, ip, r1
   1cbcc:	sub	sl, ip, #32
   1cbd0:	lsl	r9, r3, ip
   1cbd4:	rsb	fp, ip, #32
   1cbd8:	orr	r9, r9, r2, lsl sl
   1cbdc:	orr	r9, r9, r2, lsr fp
   1cbe0:	lsl	r8, r2, ip
   1cbe4:	cmp	r5, r9
   1cbe8:	cmpeq	r4, r8
   1cbec:	movcc	r0, #0
   1cbf0:	movcc	r1, r0
   1cbf4:	bcc	1cc10 <__assert_fail@plt+0xbb58>
   1cbf8:	mov	r0, #1
   1cbfc:	subs	r4, r4, r8
   1cc00:	lsl	r1, r0, sl
   1cc04:	orr	r1, r1, r0, lsr fp
   1cc08:	lsl	r0, r0, ip
   1cc0c:	sbc	r5, r5, r9
   1cc10:	cmp	ip, #0
   1cc14:	beq	1cca0 <__assert_fail@plt+0xbbe8>
   1cc18:	lsr	r6, r8, #1
   1cc1c:	orr	r6, r6, r9, lsl #31
   1cc20:	lsr	r7, r9, #1
   1cc24:	mov	r2, ip
   1cc28:	b	1cc4c <__assert_fail@plt+0xbb94>
   1cc2c:	subs	r3, r4, r6
   1cc30:	sbc	r8, r5, r7
   1cc34:	adds	r3, r3, r3
   1cc38:	adc	r8, r8, r8
   1cc3c:	adds	r4, r3, #1
   1cc40:	adc	r5, r8, #0
   1cc44:	subs	r2, r2, #1
   1cc48:	beq	1cc68 <__assert_fail@plt+0xbbb0>
   1cc4c:	cmp	r5, r7
   1cc50:	cmpeq	r4, r6
   1cc54:	bcs	1cc2c <__assert_fail@plt+0xbb74>
   1cc58:	adds	r4, r4, r4
   1cc5c:	adc	r5, r5, r5
   1cc60:	subs	r2, r2, #1
   1cc64:	bne	1cc4c <__assert_fail@plt+0xbb94>
   1cc68:	lsr	r3, r4, ip
   1cc6c:	orr	r3, r3, r5, lsl fp
   1cc70:	lsr	r2, r5, ip
   1cc74:	orr	r3, r3, r5, lsr sl
   1cc78:	adds	r0, r0, r4
   1cc7c:	mov	r4, r3
   1cc80:	lsl	r3, r2, ip
   1cc84:	orr	r3, r3, r4, lsl sl
   1cc88:	lsl	ip, r4, ip
   1cc8c:	orr	r3, r3, r4, lsr fp
   1cc90:	adc	r1, r1, r5
   1cc94:	subs	r0, r0, ip
   1cc98:	mov	r5, r2
   1cc9c:	sbc	r1, r1, r3
   1cca0:	cmp	lr, #0
   1cca4:	strdne	r4, [lr]
   1cca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ccac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ccb0:	mov	r7, r0
   1ccb4:	ldr	r6, [pc, #72]	; 1cd04 <__assert_fail@plt+0xbc4c>
   1ccb8:	ldr	r5, [pc, #72]	; 1cd08 <__assert_fail@plt+0xbc50>
   1ccbc:	add	r6, pc, r6
   1ccc0:	add	r5, pc, r5
   1ccc4:	sub	r6, r6, r5
   1ccc8:	mov	r8, r1
   1cccc:	mov	r9, r2
   1ccd0:	bl	10e28 <calloc@plt-0x20>
   1ccd4:	asrs	r6, r6, #2
   1ccd8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ccdc:	mov	r4, #0
   1cce0:	add	r4, r4, #1
   1cce4:	ldr	r3, [r5], #4
   1cce8:	mov	r2, r9
   1ccec:	mov	r1, r8
   1ccf0:	mov	r0, r7
   1ccf4:	blx	r3
   1ccf8:	cmp	r6, r4
   1ccfc:	bne	1cce0 <__assert_fail@plt+0xbc28>
   1cd00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cd04:	andeq	r1, r1, r8, asr #4
   1cd08:	andeq	r1, r1, r0, asr #4
   1cd0c:	bx	lr
   1cd10:	ldr	r3, [pc, #12]	; 1cd24 <__assert_fail@plt+0xbc6c>
   1cd14:	mov	r1, #0
   1cd18:	add	r3, pc, r3
   1cd1c:	ldr	r2, [r3]
   1cd20:	b	10ff8 <__cxa_atexit@plt>
   1cd24:	andeq	r1, r1, r8, asr #7

Disassembly of section .fini:

0001cd28 <.fini>:
   1cd28:	push	{r3, lr}
   1cd2c:	pop	{r3, pc}
