
../repos/charybdis/modules/.libs/m_capab.so:     file format elf32-littlearm


Disassembly of section .init:

0000056c <_init>:
 56c:	push	{r3, lr}
 570:	bl	604 <call_weak_fn>
 574:	pop	{r3, pc}

Disassembly of section .plt:

00000578 <.plt>:
 578:	push	{lr}		; (str lr, [sp, #-4]!)
 57c:	ldr	lr, [pc, #4]	; 588 <.plt+0x10>
 580:	add	lr, pc, lr
 584:	ldr	pc, [lr, #8]!
 588:	.word	0x00010a78

0000058c <__cxa_finalize@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2680]!	; 0xa78

00000598 <free@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2672]!	; 0xa70

000005a4 <rb_outofmemory@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2664]!	; 0xa68

000005b0 <strcpy@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2656]!	; 0xa60

000005bc <malloc@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2648]!	; 0xa58

000005c8 <__gmon_start__@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2640]!	; 0xa50

000005d4 <strlen@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2632]!	; 0xa48

000005e0 <capability_get@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2624]!	; 0xa40

000005ec <rb_strtok_r@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2616]!	; 0xa38

000005f8 <exit_client@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2608]!	; 0xa30

Disassembly of section .text:

00000604 <call_weak_fn>:
 604:	ldr	r3, [pc, #20]	; 620 <call_weak_fn+0x1c>
 608:	ldr	r2, [pc, #20]	; 624 <call_weak_fn+0x20>
 60c:	add	r3, pc, r3
 610:	ldr	r2, [r3, r2]
 614:	cmp	r2, #0
 618:	bxeq	lr
 61c:	b	5c8 <__gmon_start__@plt>
 620:	.word	0x000109ec
 624:	.word	0x00000048

00000628 <deregister_tm_clones>:
 628:	ldr	r3, [pc, #52]	; 664 <deregister_tm_clones+0x3c>
 62c:	ldr	r0, [pc, #52]	; 668 <deregister_tm_clones+0x40>
 630:	add	r3, pc, r3
 634:	add	r0, pc, r0
 638:	add	r3, r3, #3
 63c:	sub	r3, r3, r0
 640:	cmp	r3, #6
 644:	ldr	r3, [pc, #32]	; 66c <deregister_tm_clones+0x44>
 648:	add	r3, pc, r3
 64c:	bxls	lr
 650:	ldr	r2, [pc, #24]	; 670 <deregister_tm_clones+0x48>
 654:	ldr	r3, [r3, r2]
 658:	cmp	r3, #0
 65c:	bxeq	lr
 660:	bx	r3
 664:	.word	0x00010adc
 668:	.word	0x00010ad8
 66c:	.word	0x000109b0
 670:	.word	0x00000040

00000674 <register_tm_clones>:
 674:	ldr	r1, [pc, #56]	; 6b4 <register_tm_clones+0x40>
 678:	ldr	r0, [pc, #56]	; 6b8 <register_tm_clones+0x44>
 67c:	add	r1, pc, r1
 680:	add	r0, pc, r0
 684:	sub	r1, r1, r0
 688:	ldr	r3, [pc, #44]	; 6bc <register_tm_clones+0x48>
 68c:	asr	r1, r1, #2
 690:	add	r3, pc, r3
 694:	add	r1, r1, r1, lsr #31
 698:	asrs	r1, r1, #1
 69c:	bxeq	lr
 6a0:	ldr	r2, [pc, #24]	; 6c0 <register_tm_clones+0x4c>
 6a4:	ldr	r3, [r3, r2]
 6a8:	cmp	r3, #0
 6ac:	bxeq	lr
 6b0:	bx	r3
 6b4:	.word	0x00010a90
 6b8:	.word	0x00010a8c
 6bc:	.word	0x00010968
 6c0:	.word	0x00000050

000006c4 <__do_global_dtors_aux>:
 6c4:	ldr	r3, [pc, #76]	; 718 <__do_global_dtors_aux+0x54>
 6c8:	ldr	r2, [pc, #76]	; 71c <__do_global_dtors_aux+0x58>
 6cc:	add	r3, pc, r3
 6d0:	add	r2, pc, r2
 6d4:	ldrb	r3, [r3]
 6d8:	cmp	r3, #0
 6dc:	bxne	lr
 6e0:	ldr	r3, [pc, #56]	; 720 <__do_global_dtors_aux+0x5c>
 6e4:	push	{r4, lr}
 6e8:	ldr	r3, [r2, r3]
 6ec:	cmp	r3, #0
 6f0:	beq	700 <__do_global_dtors_aux+0x3c>
 6f4:	ldr	r3, [pc, #40]	; 724 <__do_global_dtors_aux+0x60>
 6f8:	ldr	r0, [pc, r3]
 6fc:	bl	58c <__cxa_finalize@plt>
 700:	bl	628 <deregister_tm_clones>
 704:	ldr	r3, [pc, #28]	; 728 <__do_global_dtors_aux+0x64>
 708:	mov	r2, #1
 70c:	add	r3, pc, r3
 710:	strb	r2, [r3]
 714:	pop	{r4, pc}
 718:	.word	0x00010a40
 71c:	.word	0x00010928
 720:	.word	0x00000038
 724:	.word	0x00010954
 728:	.word	0x00010a00

0000072c <frame_dummy>:
 72c:	ldr	r0, [pc, #56]	; 76c <frame_dummy+0x40>
 730:	ldr	r3, [pc, #56]	; 770 <frame_dummy+0x44>
 734:	add	r0, pc, r0
 738:	ldr	r2, [r0]
 73c:	add	r3, pc, r3
 740:	cmp	r2, #0
 744:	bne	74c <frame_dummy+0x20>
 748:	b	674 <register_tm_clones>
 74c:	ldr	r2, [pc, #32]	; 774 <frame_dummy+0x48>
 750:	ldr	r3, [r3, r2]
 754:	cmp	r3, #0
 758:	beq	748 <frame_dummy+0x1c>
 75c:	push	{r4, lr}
 760:	blx	r3
 764:	pop	{r4, lr}
 768:	b	674 <register_tm_clones>
 76c:	.word	0x000107c0
 770:	.word	0x000108bc
 774:	.word	0x0000004c

00000778 <rb_strdup>:
 778:	push	{r4, r5, r6, lr}
 77c:	mov	r5, r0
 780:	bl	5d4 <strlen@plt>
 784:	add	r0, r0, #1
 788:	bl	5bc <malloc@plt>
 78c:	subs	r4, r0, #0
 790:	bne	798 <rb_strdup+0x20>
 794:	bl	5a4 <rb_outofmemory@plt>
 798:	mov	r1, r5
 79c:	bl	5b0 <strcpy@plt>
 7a0:	mov	r0, r4
 7a4:	pop	{r4, r5, r6, pc}

000007a8 <mr_capab>:
 7a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 7ac:	add	fp, sp, #32
 7b0:	sub	sp, sp, #20
 7b4:	ldr	r2, [r1, #432]	; 0x1b0
 7b8:	ldr	r5, [pc, #304]	; 8f0 <mr_capab+0x148>
 7bc:	cmp	r2, #0
 7c0:	add	r5, pc, r5
 7c4:	beq	808 <mr_capab+0x60>
 7c8:	ldr	r0, [r1, #24]
 7cc:	mov	r4, r1
 7d0:	cmp	r0, #0
 7d4:	bne	808 <mr_capab+0x60>
 7d8:	str	r3, [fp, #-48]	; 0xffffffd0
 7dc:	ldr	r3, [pc, #272]	; 8f4 <mr_capab+0x14c>
 7e0:	ldr	r0, [r2, #296]	; 0x128
 7e4:	ldr	r3, [r5, r3]
 7e8:	ldr	r3, [r3]
 7ec:	bics	r3, r0, r3
 7f0:	beq	810 <mr_capab+0x68>
 7f4:	ldr	r3, [pc, #252]	; 8f8 <mr_capab+0x150>
 7f8:	mov	r2, r1
 7fc:	add	r3, pc, r3
 800:	mov	r0, r1
 804:	bl	5f8 <exit_client@plt>
 808:	sub	sp, fp, #32
 80c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810:	ldr	r3, [pc, #228]	; 8fc <mr_capab+0x154>
 814:	ldr	r3, [r5, r3]
 818:	ldr	r3, [r3]
 81c:	orr	r3, r3, r0
 820:	ldr	r0, [r2, #288]	; 0x120
 824:	str	r3, [r2, #296]	; 0x128
 828:	cmp	r0, #0
 82c:	beq	834 <mr_capab+0x8c>
 830:	bl	598 <free@plt>
 834:	ldr	r3, [fp, #4]
 838:	ldr	r7, [r4, #432]	; 0x1b0
 83c:	ldr	r9, [pc, #188]	; 900 <mr_capab+0x158>
 840:	ldr	r0, [r3, #4]
 844:	bl	778 <rb_strdup>
 848:	ldr	sl, [pc, #180]	; 904 <mr_capab+0x15c>
 84c:	mov	r6, #1
 850:	add	r9, pc, r9
 854:	add	sl, pc, sl
 858:	str	r0, [r7, #288]	; 0x120
 85c:	ldr	r3, [fp, #-48]	; 0xffffffd0
 860:	cmp	r6, r3
 864:	bge	808 <mr_capab+0x60>
 868:	ldr	r3, [fp, #4]
 86c:	mov	r8, #0
 870:	ldr	r7, [r3, r6, lsl #2]
 874:	mov	r0, r7
 878:	bl	5d4 <strlen@plt>
 87c:	mov	r1, r7
 880:	sub	r7, fp, #40	; 0x28
 884:	add	r0, r0, #15
 888:	bic	r0, r0, #7
 88c:	sub	sp, sp, r0
 890:	mov	r0, sp
 894:	bl	5b0 <strcpy@plt>
 898:	mov	r2, r7
 89c:	mov	r1, r9
 8a0:	mov	r0, sp
 8a4:	bl	5ec <rb_strtok_r@plt>
 8a8:	cmp	r0, #0
 8ac:	addeq	r6, r6, #1
 8b0:	beq	85c <mr_capab+0xb4>
 8b4:	ldr	r2, [pc, #76]	; 908 <mr_capab+0x160>
 8b8:	mov	r1, r0
 8bc:	ldr	ip, [r5, r2]
 8c0:	mov	r2, r8
 8c4:	ldr	r0, [ip]
 8c8:	bl	5e0 <capability_get@plt>
 8cc:	ldr	r1, [r4, #432]	; 0x1b0
 8d0:	ldr	r2, [r1, #296]	; 0x128
 8d4:	orr	r0, r2, r0
 8d8:	str	r0, [r1, #296]	; 0x128
 8dc:	mov	r2, r7
 8e0:	mov	r1, sl
 8e4:	mov	r0, r8
 8e8:	bl	5ec <rb_strtok_r@plt>
 8ec:	b	8a8 <mr_capab+0x100>
 8f0:	.word	0x00010838
 8f4:	.word	0x00000044
 8f8:	.word	0x0000025f
 8fc:	.word	0x00000034
 900:	.word	0x00000220
 904:	.word	0x0000021c
 908:	.word	0x0000003c

0000090c <me_gcap>:
 90c:	push	{r4, r5, r6, r7, r8, fp, lr}
 910:	add	fp, sp, #24
 914:	sub	sp, sp, #12
 918:	ldr	r5, [fp, #4]
 91c:	mov	r4, r2
 920:	ldr	r6, [pc, #220]	; a04 <me_gcap+0xf8>
 924:	ldr	r8, [r5, #4]
 928:	add	r6, pc, r6
 92c:	mov	r0, r8
 930:	bl	5d4 <strlen@plt>
 934:	mov	r1, r8
 938:	add	r0, r0, #15
 93c:	bic	r0, r0, #7
 940:	sub	sp, sp, r0
 944:	mov	r0, sp
 948:	bl	5b0 <strcpy@plt>
 94c:	ldrh	r3, [r4, #80]	; 0x50
 950:	cmp	r3, #32
 954:	bne	9c0 <me_gcap+0xb4>
 958:	ldr	r3, [r4, #28]
 95c:	mov	r7, sp
 960:	ldr	r0, [r3, #64]	; 0x40
 964:	cmp	r0, #0
 968:	beq	984 <me_gcap+0x78>
 96c:	ldrb	r2, [r0]
 970:	cmp	r2, #0
 974:	beq	984 <me_gcap+0x78>
 978:	mov	r2, #0
 97c:	str	r2, [r3, #60]	; 0x3c
 980:	bl	598 <free@plt>
 984:	ldr	r0, [r5, #4]
 988:	ldr	r8, [r4, #28]
 98c:	bl	778 <rb_strdup>
 990:	ldr	r1, [pc, #112]	; a08 <me_gcap+0xfc>
 994:	sub	r5, fp, #32
 998:	mov	r2, r5
 99c:	add	r1, pc, r1
 9a0:	str	r0, [r8, #64]	; 0x40
 9a4:	mov	r0, r7
 9a8:	bl	5ec <rb_strtok_r@plt>
 9ac:	ldr	r8, [pc, #88]	; a0c <me_gcap+0x100>
 9b0:	mov	r7, #0
 9b4:	add	r8, pc, r8
 9b8:	cmp	r0, #0
 9bc:	bne	9c8 <me_gcap+0xbc>
 9c0:	sub	sp, fp, #24
 9c4:	pop	{r4, r5, r6, r7, r8, fp, pc}
 9c8:	ldr	r3, [pc, #64]	; a10 <me_gcap+0x104>
 9cc:	mov	r2, r7
 9d0:	mov	r1, r0
 9d4:	ldr	r3, [r6, r3]
 9d8:	ldr	r0, [r3]
 9dc:	bl	5e0 <capability_get@plt>
 9e0:	ldr	r2, [r4, #28]
 9e4:	mov	r1, r8
 9e8:	ldr	r3, [r2, #60]	; 0x3c
 9ec:	orr	r0, r3, r0
 9f0:	str	r0, [r2, #60]	; 0x3c
 9f4:	mov	r2, r5
 9f8:	mov	r0, r7
 9fc:	bl	5ec <rb_strtok_r@plt>
 a00:	b	9b8 <me_gcap+0xac>
 a04:	.word	0x000106d0
 a08:	.word	0x000000d4
 a0c:	.word	0x000000bc
 a10:	.word	0x0000003c

Disassembly of section .fini:

00000a14 <_fini>:
 a14:	push	{r3, lr}
 a18:	pop	{r3, pc}
