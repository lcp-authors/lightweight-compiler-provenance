
../repos/inetutils/src/rshd:     file format elf32-littlearm


Disassembly of section .init:

00011530 <.init>:
   11530:	push	{r3, lr}
   11534:	bl	11b5c <__assert_fail@plt+0x1d4>
   11538:	pop	{r3, pc}

Disassembly of section .plt:

0001153c <calloc@plt-0x14>:
   1153c:	push	{lr}		; (str lr, [sp, #-4]!)
   11540:	ldr	lr, [pc, #4]	; 1154c <calloc@plt-0x4>
   11544:	add	lr, pc, lr
   11548:	ldr	pc, [lr, #8]!
   1154c:			; <UNDEFINED> instruction: 0x00019ab4

00011550 <calloc@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #102400	; 0x19000
   11558:	ldr	pc, [ip, #2740]!	; 0xab4

0001155c <fputs_unlocked@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #102400	; 0x19000
   11564:	ldr	pc, [ip, #2732]!	; 0xaac

00011568 <raise@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #102400	; 0x19000
   11570:	ldr	pc, [ip, #2724]!	; 0xaa4

00011574 <strcmp@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #102400	; 0x19000
   1157c:	ldr	pc, [ip, #2716]!	; 0xa9c

00011580 <strtol@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #102400	; 0x19000
   11588:	ldr	pc, [ip, #2708]!	; 0xa94

0001158c <setsockopt@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #102400	; 0x19000
   11594:	ldr	pc, [ip, #2700]!	; 0xa8c

00011598 <printf@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #102400	; 0x19000
   115a0:	ldr	pc, [ip, #2692]!	; 0xa84

000115a4 <read@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #102400	; 0x19000
   115ac:	ldr	pc, [ip, #2684]!	; 0xa7c

000115b0 <getprotobyname@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #102400	; 0x19000
   115b8:	ldr	pc, [ip, #2676]!	; 0xa74

000115bc <getspnam@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #102400	; 0x19000
   115c4:	ldr	pc, [ip, #2668]!	; 0xa6c

000115c8 <memmove@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #102400	; 0x19000
   115d0:	ldr	pc, [ip, #2660]!	; 0xa64

000115d4 <strchrnul@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #102400	; 0x19000
   115dc:	ldr	pc, [ip, #2652]!	; 0xa5c

000115e0 <free@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #102400	; 0x19000
   115e8:	ldr	pc, [ip, #2644]!	; 0xa54

000115ec <gai_strerror@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #102400	; 0x19000
   115f4:	ldr	pc, [ip, #2636]!	; 0xa4c

000115f8 <strndup@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #102400	; 0x19000
   11600:	ldr	pc, [ip, #2628]!	; 0xa44

00011604 <_exit@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #102400	; 0x19000
   1160c:	ldr	pc, [ip, #2620]!	; 0xa3c

00011610 <memcpy@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #102400	; 0x19000
   11618:	ldr	pc, [ip, #2612]!	; 0xa34

0001161c <signal@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #102400	; 0x19000
   11624:	ldr	pc, [ip, #2604]!	; 0xa2c

00011628 <time@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #102400	; 0x19000
   11630:	ldr	pc, [ip, #2596]!	; 0xa24

00011634 <fwrite_unlocked@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #102400	; 0x19000
   1163c:	ldr	pc, [ip, #2588]!	; 0xa1c

00011640 <select@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #102400	; 0x19000
   11648:	ldr	pc, [ip, #2580]!	; 0xa14

0001164c <sleep@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #102400	; 0x19000
   11654:	ldr	pc, [ip, #2572]!	; 0xa0c

00011658 <strdup@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #102400	; 0x19000
   11660:	ldr	pc, [ip, #2564]!	; 0xa04

00011664 <alarm@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #102400	; 0x19000
   1166c:	ldr	pc, [ip, #2556]!	; 0x9fc

00011670 <sysconf@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #102400	; 0x19000
   11678:	ldr	pc, [ip, #2548]!	; 0x9f4

0001167c <dup2@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #102400	; 0x19000
   11684:	ldr	pc, [ip, #2540]!	; 0x9ec

00011688 <realloc@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #102400	; 0x19000
   11690:	ldr	pc, [ip, #2532]!	; 0x9e4

00011694 <killpg@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #102400	; 0x19000
   1169c:	ldr	pc, [ip, #2524]!	; 0x9dc

000116a0 <initgroups@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #102400	; 0x19000
   116a8:	ldr	pc, [ip, #2516]!	; 0x9d4

000116ac <chdir@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #102400	; 0x19000
   116b4:	ldr	pc, [ip, #2508]!	; 0x9cc

000116b8 <strcasecmp@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #102400	; 0x19000
   116c0:	ldr	pc, [ip, #2500]!	; 0x9c4

000116c4 <funlockfile@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #102400	; 0x19000
   116cc:	ldr	pc, [ip, #2492]!	; 0x9bc

000116d0 <perror@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #102400	; 0x19000
   116d8:	ldr	pc, [ip, #2484]!	; 0x9b4

000116dc <fwrite@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #102400	; 0x19000
   116e4:	ldr	pc, [ip, #2476]!	; 0x9ac

000116e8 <getsockopt@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #102400	; 0x19000
   116f0:	ldr	pc, [ip, #2468]!	; 0x9a4

000116f4 <ioctl@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #102400	; 0x19000
   116fc:	ldr	pc, [ip, #2460]!	; 0x99c

00011700 <error@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #102400	; 0x19000
   11708:	ldr	pc, [ip, #2452]!	; 0x994

0001170c <gethostname@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #102400	; 0x19000
   11714:	ldr	pc, [ip, #2444]!	; 0x98c

00011718 <getenv@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #102400	; 0x19000
   11720:	ldr	pc, [ip, #2436]!	; 0x984

00011724 <iruserok_af@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #102400	; 0x19000
   1172c:	ldr	pc, [ip, #2428]!	; 0x97c

00011730 <setgid@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #102400	; 0x19000
   11738:	ldr	pc, [ip, #2420]!	; 0x974

0001173c <malloc@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #102400	; 0x19000
   11744:	ldr	pc, [ip, #2412]!	; 0x96c

00011748 <__libc_start_main@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #102400	; 0x19000
   11750:	ldr	pc, [ip, #2404]!	; 0x964

00011754 <strerror@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #102400	; 0x19000
   1175c:	ldr	pc, [ip, #2396]!	; 0x95c

00011760 <__ctype_tolower_loc@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #102400	; 0x19000
   11768:	ldr	pc, [ip, #2388]!	; 0x954

0001176c <__gmon_start__@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #102400	; 0x19000
   11774:	ldr	pc, [ip, #2380]!	; 0x94c

00011778 <mempcpy@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #102400	; 0x19000
   11780:	ldr	pc, [ip, #2372]!	; 0x944

00011784 <__ctype_b_loc@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #102400	; 0x19000
   1178c:	ldr	pc, [ip, #2364]!	; 0x93c

00011790 <getpid@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #102400	; 0x19000
   11798:	ldr	pc, [ip, #2356]!	; 0x934

0001179c <exit@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #102400	; 0x19000
   117a4:	ldr	pc, [ip, #2348]!	; 0x92c

000117a8 <rresvport_af@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #102400	; 0x19000
   117b0:	ldr	pc, [ip, #2340]!	; 0x924

000117b4 <strlen@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #102400	; 0x19000
   117bc:	ldr	pc, [ip, #2332]!	; 0x91c

000117c0 <strchr@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #102400	; 0x19000
   117c8:	ldr	pc, [ip, #2324]!	; 0x914

000117cc <getpwnam_r@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #102400	; 0x19000
   117d4:	ldr	pc, [ip, #2316]!	; 0x90c

000117d8 <fprintf@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #102400	; 0x19000
   117e0:	ldr	pc, [ip, #2308]!	; 0x904

000117e4 <setpwent@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #102400	; 0x19000
   117ec:	ldr	pc, [ip, #2300]!	; 0x8fc

000117f0 <__errno_location@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #102400	; 0x19000
   117f8:	ldr	pc, [ip, #2292]!	; 0x8f4

000117fc <strerror_r@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #102400	; 0x19000
   11804:	ldr	pc, [ip, #2284]!	; 0x8ec

00011808 <memset@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #102400	; 0x19000
   11810:	ldr	pc, [ip, #2276]!	; 0x8e4

00011814 <write@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #102400	; 0x19000
   1181c:	ldr	pc, [ip, #2268]!	; 0x8dc

00011820 <difftime@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #102400	; 0x19000
   11828:	ldr	pc, [ip, #2260]!	; 0x8d4

0001182c <memchr@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #102400	; 0x19000
   11834:	ldr	pc, [ip, #2252]!	; 0x8cc

00011838 <access@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #102400	; 0x19000
   11840:	ldr	pc, [ip, #2244]!	; 0x8c4

00011844 <setegid@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #102400	; 0x19000
   1184c:	ldr	pc, [ip, #2236]!	; 0x8bc

00011850 <pipe@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #102400	; 0x19000
   11858:	ldr	pc, [ip, #2228]!	; 0x8b4

0001185c <shutdown@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #102400	; 0x19000
   11864:	ldr	pc, [ip, #2220]!	; 0x8ac

00011868 <__overflow@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #102400	; 0x19000
   11870:	ldr	pc, [ip, #2212]!	; 0x8a4

00011874 <fork@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #102400	; 0x19000
   1187c:	ldr	pc, [ip, #2204]!	; 0x89c

00011880 <getnameinfo@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #102400	; 0x19000
   11888:	ldr	pc, [ip, #2196]!	; 0x894

0001188c <endpwent@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #102400	; 0x19000
   11894:	ldr	pc, [ip, #2188]!	; 0x88c

00011898 <execl@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #102400	; 0x19000
   118a0:	ldr	pc, [ip, #2180]!	; 0x884

000118a4 <strrchr@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #102400	; 0x19000
   118ac:	ldr	pc, [ip, #2172]!	; 0x87c

000118b0 <vfprintf@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #102400	; 0x19000
   118b8:	ldr	pc, [ip, #2164]!	; 0x874

000118bc <fputc@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #102400	; 0x19000
   118c4:	ldr	pc, [ip, #2156]!	; 0x86c

000118c8 <syslog@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #102400	; 0x19000
   118d0:	ldr	pc, [ip, #2148]!	; 0x864

000118d4 <setuid@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #102400	; 0x19000
   118dc:	ldr	pc, [ip, #2140]!	; 0x85c

000118e0 <setpgid@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #102400	; 0x19000
   118e8:	ldr	pc, [ip, #2132]!	; 0x854

000118ec <sprintf@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #102400	; 0x19000
   118f4:	ldr	pc, [ip, #2124]!	; 0x84c

000118f8 <openlog@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #102400	; 0x19000
   11900:	ldr	pc, [ip, #2116]!	; 0x844

00011904 <flockfile@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #102400	; 0x19000
   1190c:	ldr	pc, [ip, #2108]!	; 0x83c

00011910 <vsnprintf@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #102400	; 0x19000
   11918:	ldr	pc, [ip, #2100]!	; 0x834

0001191c <qsort@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #102400	; 0x19000
   11924:	ldr	pc, [ip, #2092]!	; 0x82c

00011928 <getpeername@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #102400	; 0x19000
   11930:	ldr	pc, [ip, #2084]!	; 0x824

00011934 <freeaddrinfo@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #102400	; 0x19000
   1193c:	ldr	pc, [ip, #2076]!	; 0x81c

00011940 <getaddrinfo@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #102400	; 0x19000
   11948:	ldr	pc, [ip, #2068]!	; 0x814

0001194c <strncat@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #102400	; 0x19000
   11954:	ldr	pc, [ip, #2060]!	; 0x80c

00011958 <strncmp@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #102400	; 0x19000
   11960:	ldr	pc, [ip, #2052]!	; 0x804

00011964 <abort@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #102400	; 0x19000
   1196c:	ldr	pc, [ip, #2044]!	; 0x7fc

00011970 <close@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #102400	; 0x19000
   11978:	ldr	pc, [ip, #2036]!	; 0x7f4

0001197c <connect@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #102400	; 0x19000
   11984:	ldr	pc, [ip, #2028]!	; 0x7ec

00011988 <__assert_fail@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #102400	; 0x19000
   11990:	ldr	pc, [ip, #2020]!	; 0x7e4

Disassembly of section .text:

00011994 <argp_parse@@Base-0x1a8c>:
   11994:	push	{r4, r5, r6, r7, r8, lr}
   11998:	sub	sp, sp, #160	; 0xa0
   1199c:	mov	r4, r0
   119a0:	mov	r8, #1
   119a4:	ldr	r0, [r1]
   119a8:	mov	r6, r1
   119ac:	str	r8, [sp, #16]
   119b0:	bl	143f0 <argp_parse@@Base+0xfd0>
   119b4:	ldr	r3, [pc, #320]	; 11afc <__assert_fail@plt+0x174>
   119b8:	ldr	r2, [pc, #320]	; 11b00 <__assert_fail@plt+0x178>
   119bc:	ldr	r1, [pc, #320]	; 11b04 <__assert_fail@plt+0x17c>
   119c0:	ldr	r0, [pc, #320]	; 11b08 <__assert_fail@plt+0x180>
   119c4:	ldr	r7, [pc, #320]	; 11b0c <__assert_fail@plt+0x184>
   119c8:	str	r2, [r3]
   119cc:	mov	r5, #0
   119d0:	bl	141e4 <argp_parse@@Base+0xdc4>
   119d4:	add	ip, sp, #12
   119d8:	mov	r2, r6
   119dc:	mov	r1, r4
   119e0:	mov	r3, r5
   119e4:	str	ip, [sp]
   119e8:	add	r0, r7, #608	; 0x260
   119ec:	str	r5, [sp, #4]
   119f0:	bl	13420 <argp_parse@@Base>
   119f4:	mov	r2, #24
   119f8:	mov	r1, #5
   119fc:	ldr	r0, [pc, #260]	; 11b08 <__assert_fail@plt+0x180>
   11a00:	bl	118f8 <openlog@plt>
   11a04:	ldr	r2, [sp, #12]
   11a08:	sub	r2, r4, r2
   11a0c:	cmp	r2, r5
   11a10:	bgt	11ae8 <__assert_fail@plt+0x160>
   11a14:	mov	r3, #128	; 0x80
   11a18:	add	r1, sp, #32
   11a1c:	add	r2, sp, #20
   11a20:	mov	r0, r5
   11a24:	str	r3, [sp, #20]
   11a28:	bl	11928 <getpeername@plt>
   11a2c:	cmp	r0, #0
   11a30:	blt	11ad4 <__assert_fail@plt+0x14c>
   11a34:	ldr	r3, [r7]
   11a38:	cmp	r3, #0
   11a3c:	bne	11a90 <__assert_fail@plt+0x108>
   11a40:	mov	ip, #1
   11a44:	mov	r3, #8
   11a48:	str	r3, [sp]
   11a4c:	mov	lr, #60	; 0x3c
   11a50:	mov	r1, ip
   11a54:	add	r3, sp, #24
   11a58:	mov	r2, #13
   11a5c:	mov	r0, #0
   11a60:	str	ip, [sp, #24]
   11a64:	str	lr, [sp, #28]
   11a68:	bl	1158c <setsockopt@plt>
   11a6c:	cmp	r0, #0
   11a70:	blt	11ac4 <__assert_fail@plt+0x13c>
   11a74:	add	r1, sp, #32
   11a78:	ldr	r2, [sp, #20]
   11a7c:	mov	r0, #0
   11a80:	bl	11fa0 <__assert_fail@plt+0x618>
   11a84:	mov	r0, #0
   11a88:	add	sp, sp, #160	; 0xa0
   11a8c:	pop	{r4, r5, r6, r7, r8, pc}
   11a90:	mov	r4, #4
   11a94:	mov	r1, r8
   11a98:	mov	r0, r5
   11a9c:	str	r4, [sp]
   11aa0:	add	r3, sp, #16
   11aa4:	mov	r2, #9
   11aa8:	bl	1158c <setsockopt@plt>
   11aac:	cmp	r0, #0
   11ab0:	bge	11a40 <__assert_fail@plt+0xb8>
   11ab4:	mov	r0, r4
   11ab8:	ldr	r1, [pc, #80]	; 11b10 <__assert_fail@plt+0x188>
   11abc:	bl	118c8 <syslog@plt>
   11ac0:	b	11a40 <__assert_fail@plt+0xb8>
   11ac4:	ldr	r1, [pc, #72]	; 11b14 <__assert_fail@plt+0x18c>
   11ac8:	mov	r0, #4
   11acc:	bl	118c8 <syslog@plt>
   11ad0:	b	11a74 <__assert_fail@plt+0xec>
   11ad4:	mov	r0, #3
   11ad8:	ldr	r1, [pc, #56]	; 11b18 <__assert_fail@plt+0x190>
   11adc:	bl	118c8 <syslog@plt>
   11ae0:	mov	r0, r8
   11ae4:	bl	11604 <_exit@plt>
   11ae8:	mov	r0, #3
   11aec:	ldr	r1, [pc, #40]	; 11b1c <__assert_fail@plt+0x194>
   11af0:	bl	118c8 <syslog@plt>
   11af4:	mov	r0, r8
   11af8:	bl	1179c <exit@plt>
   11afc:	andeq	fp, r2, r0, asr #10
   11b00:	andeq	r9, r1, ip, asr #31
   11b04:	muleq	r2, r0, r4
   11b08:	andeq	r9, r1, r4, ror #31
   11b0c:	andeq	fp, r2, r4, lsl #3
   11b10:	andeq	sl, r1, r0, lsl r0
   11b14:	andeq	sl, r1, r0, lsr r0
   11b18:	andeq	sl, r1, r0
   11b1c:	andeq	r9, r1, ip, ror #31
   11b20:	mov	fp, #0
   11b24:	mov	lr, #0
   11b28:	pop	{r1}		; (ldr r1, [sp], #4)
   11b2c:	mov	r2, sp
   11b30:	push	{r2}		; (str r2, [sp, #-4]!)
   11b34:	push	{r0}		; (str r0, [sp, #-4]!)
   11b38:	ldr	ip, [pc, #16]	; 11b50 <__assert_fail@plt+0x1c8>
   11b3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11b40:	ldr	r0, [pc, #12]	; 11b54 <__assert_fail@plt+0x1cc>
   11b44:	ldr	r3, [pc, #12]	; 11b58 <__assert_fail@plt+0x1d0>
   11b48:	bl	11748 <__libc_start_main@plt>
   11b4c:	bl	11964 <abort@plt>
   11b50:	andeq	r9, r1, r0, ror #21
   11b54:	muleq	r1, r4, r9
   11b58:	andeq	r9, r1, r0, lsl #21
   11b5c:	ldr	r3, [pc, #20]	; 11b78 <__assert_fail@plt+0x1f0>
   11b60:	ldr	r2, [pc, #20]	; 11b7c <__assert_fail@plt+0x1f4>
   11b64:	add	r3, pc, r3
   11b68:	ldr	r2, [r3, r2]
   11b6c:	cmp	r2, #0
   11b70:	bxeq	lr
   11b74:	b	1176c <__gmon_start__@plt>
   11b78:	muleq	r1, r4, r4
   11b7c:	andeq	r0, r0, r8, ror r1
   11b80:	ldr	r3, [pc, #28]	; 11ba4 <__assert_fail@plt+0x21c>
   11b84:	ldr	r0, [pc, #28]	; 11ba8 <__assert_fail@plt+0x220>
   11b88:	sub	r3, r3, r0
   11b8c:	cmp	r3, #6
   11b90:	bxls	lr
   11b94:	ldr	r3, [pc, #16]	; 11bac <__assert_fail@plt+0x224>
   11b98:	cmp	r3, #0
   11b9c:	bxeq	lr
   11ba0:	bx	r3
   11ba4:	ldrdeq	fp, [r2], -r7
   11ba8:	ldrdeq	fp, [r2], -r4
   11bac:	andeq	r0, r0, r0
   11bb0:	ldr	r1, [pc, #36]	; 11bdc <__assert_fail@plt+0x254>
   11bb4:	ldr	r0, [pc, #36]	; 11be0 <__assert_fail@plt+0x258>
   11bb8:	sub	r1, r1, r0
   11bbc:	asr	r1, r1, #2
   11bc0:	add	r1, r1, r1, lsr #31
   11bc4:	asrs	r1, r1, #1
   11bc8:	bxeq	lr
   11bcc:	ldr	r3, [pc, #16]	; 11be4 <__assert_fail@plt+0x25c>
   11bd0:	cmp	r3, #0
   11bd4:	bxeq	lr
   11bd8:	bx	r3
   11bdc:	ldrdeq	fp, [r2], -r4
   11be0:	ldrdeq	fp, [r2], -r4
   11be4:	andeq	r0, r0, r0
   11be8:	push	{r4, lr}
   11bec:	ldr	r4, [pc, #24]	; 11c0c <__assert_fail@plt+0x284>
   11bf0:	ldrb	r3, [r4]
   11bf4:	cmp	r3, #0
   11bf8:	popne	{r4, pc}
   11bfc:	bl	11b80 <__assert_fail@plt+0x1f8>
   11c00:	mov	r3, #1
   11c04:	strb	r3, [r4]
   11c08:	pop	{r4, pc}
   11c0c:	strdeq	fp, [r2], -r4
   11c10:	ldr	r0, [pc, #40]	; 11c40 <__assert_fail@plt+0x2b8>
   11c14:	ldr	r3, [r0]
   11c18:	cmp	r3, #0
   11c1c:	bne	11c24 <__assert_fail@plt+0x29c>
   11c20:	b	11bb0 <__assert_fail@plt+0x228>
   11c24:	ldr	r3, [pc, #24]	; 11c44 <__assert_fail@plt+0x2bc>
   11c28:	cmp	r3, #0
   11c2c:	beq	11c20 <__assert_fail@plt+0x298>
   11c30:	push	{r4, lr}
   11c34:	blx	r3
   11c38:	pop	{r4, lr}
   11c3c:	b	11bb0 <__assert_fail@plt+0x228>
   11c40:	andeq	sl, r2, ip, lsl #30
   11c44:	andeq	r0, r0, r0
   11c48:	sub	r0, r0, #76	; 0x4c
   11c4c:	cmp	r0, #38	; 0x26
   11c50:	ldrls	pc, [pc, r0, lsl #2]
   11c54:	b	11d58 <__assert_fail@plt+0x3d0>
   11c58:	andeq	r1, r1, r8, lsl #26
   11c5c:	andeq	r1, r1, r8, asr sp
   11c60:	andeq	r1, r1, r8, asr sp
   11c64:	andeq	r1, r1, r8, asr sp
   11c68:	andeq	r1, r1, r8, asr sp
   11c6c:	andeq	r1, r1, r8, asr sp
   11c70:	andeq	r1, r1, r8, asr sp
   11c74:	andeq	r1, r1, r8, asr sp
   11c78:	andeq	r1, r1, r8, asr sp
   11c7c:	andeq	r1, r1, r8, asr sp
   11c80:	andeq	r1, r1, r8, asr sp
   11c84:	andeq	r1, r1, r8, asr sp
   11c88:	andeq	r1, r1, r8, asr sp
   11c8c:	andeq	r1, r1, r8, asr sp
   11c90:	andeq	r1, r1, r8, asr sp
   11c94:	andeq	r1, r1, r8, asr sp
   11c98:	andeq	r1, r1, r8, asr sp
   11c9c:	andeq	r1, r1, r8, asr sp
   11ca0:	andeq	r1, r1, r8, asr sp
   11ca4:	andeq	r1, r1, r8, asr sp
   11ca8:	andeq	r1, r1, r8, asr sp
   11cac:	andeq	r1, r1, ip, lsl sp
   11cb0:	andeq	r1, r1, r8, asr sp
   11cb4:	andeq	r1, r1, r8, asr sp
   11cb8:	andeq	r1, r1, r8, asr sp
   11cbc:	andeq	r1, r1, r8, asr sp
   11cc0:	andeq	r1, r1, r8, asr sp
   11cc4:	andeq	r1, r1, r8, asr sp
   11cc8:	andeq	r1, r1, r8, asr sp
   11ccc:	andeq	r1, r1, r8, asr sp
   11cd0:	andeq	r1, r1, r8, asr sp
   11cd4:	andeq	r1, r1, r8, asr sp
   11cd8:	andeq	r1, r1, r0, lsr sp
   11cdc:	andeq	r1, r1, r8, asr sp
   11ce0:	andeq	r1, r1, r4, asr #26
   11ce4:	andeq	r1, r1, r8, asr sp
   11ce8:	andeq	r1, r1, r8, asr sp
   11cec:	andeq	r1, r1, r8, asr sp
   11cf0:	strdeq	r1, [r1], -r4
   11cf4:	ldr	r3, [pc, #100]	; 11d60 <__assert_fail@plt+0x3d8>
   11cf8:	mov	r2, #1
   11cfc:	mov	r0, #0
   11d00:	str	r2, [r3]
   11d04:	bx	lr
   11d08:	ldr	r3, [pc, #84]	; 11d64 <__assert_fail@plt+0x3dc>
   11d0c:	mov	r2, #1
   11d10:	mov	r0, #0
   11d14:	str	r2, [r3]
   11d18:	bx	lr
   11d1c:	ldr	r3, [pc, #68]	; 11d68 <__assert_fail@plt+0x3e0>
   11d20:	mov	r2, #1
   11d24:	mov	r0, #0
   11d28:	str	r2, [r3]
   11d2c:	bx	lr
   11d30:	ldr	r2, [pc, #52]	; 11d6c <__assert_fail@plt+0x3e4>
   11d34:	mov	r3, #0
   11d38:	mov	r0, r3
   11d3c:	str	r3, [r2]
   11d40:	bx	lr
   11d44:	ldr	r2, [pc, #36]	; 11d70 <__assert_fail@plt+0x3e8>
   11d48:	mov	r3, #0
   11d4c:	mov	r0, r3
   11d50:	str	r3, [r2]
   11d54:	bx	lr
   11d58:	mov	r0, #7
   11d5c:	bx	lr
   11d60:	strdeq	fp, [r2], -r8
   11d64:	andeq	fp, r2, r8, lsr r5
   11d68:	andeq	fp, r2, r4, lsr r5
   11d6c:	andeq	fp, r2, r0, ror #9
   11d70:	andeq	fp, r2, r4, lsl #3
   11d74:	push	{r0, r1, r2, r3}
   11d78:	ldr	r2, [pc, #120]	; 11df8 <__assert_fail@plt+0x470>
   11d7c:	push	{r4, r5, lr}
   11d80:	sub	sp, sp, #8192	; 0x2000
   11d84:	ldr	r2, [r2]
   11d88:	sub	sp, sp, #12
   11d8c:	cmp	r2, #0
   11d90:	add	r3, sp, #8192	; 0x2000
   11d94:	add	r2, sp, #8192	; 0x2000
   11d98:	addeq	r4, sp, #8
   11d9c:	add	r3, r3, #28
   11da0:	add	r2, r2, #24
   11da4:	moveq	r5, #1
   11da8:	addne	r4, sp, #8
   11dac:	str	r3, [sp, #4]
   11db0:	strbeq	r5, [r4], #1
   11db4:	ldr	r3, [sp, #4]
   11db8:	ldr	r2, [r2]
   11dbc:	ldr	r1, [pc, #56]	; 11dfc <__assert_fail@plt+0x474>
   11dc0:	mov	r0, r4
   11dc4:	movne	r5, #0
   11dc8:	bl	11910 <vsnprintf@plt>
   11dcc:	mov	r0, r4
   11dd0:	bl	117b4 <strlen@plt>
   11dd4:	add	r1, sp, #8
   11dd8:	add	r2, r0, r5
   11ddc:	mov	r0, #2
   11de0:	bl	11814 <write@plt>
   11de4:	add	sp, sp, #8192	; 0x2000
   11de8:	add	sp, sp, #12
   11dec:	pop	{r4, r5, lr}
   11df0:	add	sp, sp, #16
   11df4:	bx	lr
   11df8:	andeq	fp, r2, ip, lsr r5
   11dfc:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11e00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e04:	mov	r9, r0
   11e08:	mov	r0, #100	; 0x64
   11e0c:	bl	14e54 <argp_parse@@Base+0x1a34>
   11e10:	subs	r6, r0, #0
   11e14:	movne	r4, r6
   11e18:	movne	r5, #100	; 0x64
   11e1c:	movne	r8, #1
   11e20:	movne	r7, #0
   11e24:	bne	11e38 <__assert_fail@plt+0x4b0>
   11e28:	b	11ebc <__assert_fail@plt+0x534>
   11e2c:	ldrb	r3, [r4, #-1]
   11e30:	cmp	r3, #0
   11e34:	beq	11e90 <__assert_fail@plt+0x508>
   11e38:	mov	r2, r8
   11e3c:	mov	r1, r4
   11e40:	mov	r0, r7
   11e44:	bl	115a4 <read@plt>
   11e48:	cmp	r0, #0
   11e4c:	ble	11e98 <__assert_fail@plt+0x510>
   11e50:	add	r4, r4, r0
   11e54:	add	r3, r6, r5
   11e58:	sub	r3, r3, r4
   11e5c:	cmp	r3, r5, lsr #3
   11e60:	bge	11e2c <__assert_fail@plt+0x4a4>
   11e64:	lsl	r5, r5, #1
   11e68:	mov	r0, r6
   11e6c:	mov	r1, r5
   11e70:	bl	14e80 <argp_parse@@Base+0x1a60>
   11e74:	sub	r4, r4, r6
   11e78:	subs	r6, r0, #0
   11e7c:	beq	11ebc <__assert_fail@plt+0x534>
   11e80:	add	r4, r6, r4
   11e84:	ldrb	r3, [r4, #-1]
   11e88:	cmp	r3, #0
   11e8c:	bne	11e38 <__assert_fail@plt+0x4b0>
   11e90:	mov	r0, r6
   11e94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e98:	bne	11eb0 <__assert_fail@plt+0x528>
   11e9c:	mov	r1, r9
   11ea0:	ldr	r0, [pc, #40]	; 11ed0 <__assert_fail@plt+0x548>
   11ea4:	bl	11d74 <__assert_fail@plt+0x3ec>
   11ea8:	mov	r0, #1
   11eac:	bl	1179c <exit@plt>
   11eb0:	mov	r0, r9
   11eb4:	bl	116d0 <perror@plt>
   11eb8:	b	11ea8 <__assert_fail@plt+0x520>
   11ebc:	ldr	r0, [pc, #16]	; 11ed4 <__assert_fail@plt+0x54c>
   11ec0:	mov	r1, r9
   11ec4:	bl	11d74 <__assert_fail@plt+0x3ec>
   11ec8:	mov	r0, #1
   11ecc:	bl	1179c <exit@plt>
   11ed0:	andeq	r9, r1, r8, lsr #22
   11ed4:	andeq	r9, r1, ip, lsl #22
   11ed8:	push	{r4, lr}
   11edc:	mov	r4, r0
   11ee0:	bl	117b4 <strlen@plt>
   11ee4:	adds	r3, r4, r0
   11ee8:	bcs	11f34 <__assert_fail@plt+0x5ac>
   11eec:	mov	ip, #0
   11ef0:	mov	r0, ip
   11ef4:	mov	lr, #1
   11ef8:	b	11f04 <__assert_fail@plt+0x57c>
   11efc:	cmp	r4, r3
   11f00:	bhi	11f30 <__assert_fail@plt+0x5a8>
   11f04:	mov	r2, r3
   11f08:	sub	r3, r3, #1
   11f0c:	ldrb	r1, [r2]
   11f10:	cmp	r1, #46	; 0x2e
   11f14:	bne	11efc <__assert_fail@plt+0x574>
   11f18:	cmp	ip, #1
   11f1c:	mov	r0, r2
   11f20:	mov	ip, lr
   11f24:	bne	11efc <__assert_fail@plt+0x574>
   11f28:	mov	r0, r2
   11f2c:	pop	{r4, pc}
   11f30:	pop	{r4, pc}
   11f34:	mov	r0, #0
   11f38:	pop	{r4, pc}
   11f3c:	push	{r4, r5, r6, lr}
   11f40:	mov	r6, r0
   11f44:	bl	12d64 <__assert_fail@plt+0x13dc>
   11f48:	subs	r4, r0, #0
   11f4c:	beq	11f80 <__assert_fail@plt+0x5f8>
   11f50:	bl	11ed8 <__assert_fail@plt+0x550>
   11f54:	mov	r5, r0
   11f58:	mov	r0, r6
   11f5c:	bl	11ed8 <__assert_fail@plt+0x550>
   11f60:	cmp	r0, #0
   11f64:	cmpne	r5, #0
   11f68:	moveq	r3, #1
   11f6c:	movne	r3, #0
   11f70:	bne	11f88 <__assert_fail@plt+0x600>
   11f74:	mov	r0, r4
   11f78:	mov	r4, r3
   11f7c:	bl	142b8 <argp_parse@@Base+0xe98>
   11f80:	mov	r0, r4
   11f84:	pop	{r4, r5, r6, pc}
   11f88:	mov	r1, r0
   11f8c:	mov	r0, r5
   11f90:	bl	116b8 <strcasecmp@plt>
   11f94:	clz	r3, r0
   11f98:	lsr	r3, r3, #5
   11f9c:	b	11f74 <__assert_fail@plt+0x5ec>
   11fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fa4:	sub	sp, sp, #11328	; 0x2c40
   11fa8:	sub	sp, sp, #4
   11fac:	mov	r5, r0
   11fb0:	mov	r4, #1
   11fb4:	mov	r0, #70	; 0x46
   11fb8:	mov	r8, r2
   11fbc:	mov	r6, r1
   11fc0:	str	r1, [sp, #20]
   11fc4:	str	r4, [sp, #52]	; 0x34
   11fc8:	bl	11670 <sysconf@plt>
   11fcc:	subs	r3, r0, #0
   11fd0:	movle	r3, #1024	; 0x400
   11fd4:	mov	r0, r3
   11fd8:	str	r3, [sp, #28]
   11fdc:	bl	14898 <argp_parse@@Base+0x1478>
   11fe0:	mov	r1, #0
   11fe4:	str	r0, [sp, #32]
   11fe8:	mov	r0, #2
   11fec:	bl	1161c <signal@plt>
   11ff0:	mov	r1, #0
   11ff4:	mov	r0, #3
   11ff8:	bl	1161c <signal@plt>
   11ffc:	mov	r1, #0
   12000:	mov	r0, #15
   12004:	bl	1161c <signal@plt>
   12008:	mov	ip, #3
   1200c:	mov	r3, #8
   12010:	add	r2, sp, #100	; 0x64
   12014:	stmib	sp, {r3, ip}
   12018:	add	r3, sp, #64	; 0x40
   1201c:	str	r3, [sp]
   12020:	mov	r1, r8
   12024:	mov	r0, r6
   12028:	mov	r3, #46	; 0x2e
   1202c:	bl	11880 <getnameinfo@plt>
   12030:	subs	r7, r0, #0
   12034:	bne	12920 <__assert_fail@plt+0xf98>
   12038:	mov	r1, r7
   1203c:	mov	r2, #10
   12040:	add	r0, sp, #64	; 0x40
   12044:	bl	11580 <strtol@plt>
   12048:	ldr	r3, [pc, #3120]	; 12c80 <__assert_fail@plt+0x12f8>
   1204c:	add	r9, sp, #276	; 0x114
   12050:	str	r3, [sp, #276]	; 0x114
   12054:	uxth	sl, r0
   12058:	ldr	r0, [pc, #3108]	; 12c84 <__assert_fail@plt+0x12fc>
   1205c:	bl	115b0 <getprotobyname@plt>
   12060:	add	r3, sp, #404	; 0x194
   12064:	str	r3, [sp, #24]
   12068:	ldr	r3, [sp, #24]
   1206c:	mov	r2, #4
   12070:	cmp	r0, #0
   12074:	ldrne	r7, [r0, #8]
   12078:	str	r9, [sp]
   1207c:	mov	r1, r7
   12080:	mov	r0, r5
   12084:	bl	116e8 <getsockopt@plt>
   12088:	cmp	r0, #0
   1208c:	bne	1209c <__assert_fail@plt+0x714>
   12090:	ldr	r3, [sp, #276]	; 0x114
   12094:	cmp	r3, #0
   12098:	bne	12608 <__assert_fail@plt+0xc80>
   1209c:	sub	sl, sl, #512	; 0x200
   120a0:	cmp	sl, #512	; 0x200
   120a4:	bcs	128e4 <__assert_fail@plt+0xf5c>
   120a8:	mov	r0, #60	; 0x3c
   120ac:	bl	11664 <alarm@plt>
   120b0:	mov	r4, #0
   120b4:	mov	r6, #1
   120b8:	b	120cc <__assert_fail@plt+0x744>
   120bc:	add	r4, r4, r4, lsl #2
   120c0:	sub	r3, r3, #48	; 0x30
   120c4:	add	r3, r3, r4, lsl #1
   120c8:	uxth	r4, r3
   120cc:	mov	r2, r6
   120d0:	add	r1, sp, #3136	; 0xc40
   120d4:	mov	r0, r5
   120d8:	bl	115a4 <read@plt>
   120dc:	cmp	r0, #1
   120e0:	bne	1280c <__assert_fail@plt+0xe84>
   120e4:	ldrb	r3, [sp, #3136]	; 0xc40
   120e8:	cmp	r3, #0
   120ec:	bne	120bc <__assert_fail@plt+0x734>
   120f0:	mov	r7, r0
   120f4:	mov	r0, r3
   120f8:	bl	11664 <alarm@plt>
   120fc:	cmp	r4, #0
   12100:	streq	r5, [sp, #36]	; 0x24
   12104:	bne	126e0 <__assert_fail@plt+0xd58>
   12108:	cmp	r5, #0
   1210c:	bne	126b8 <__assert_fail@plt+0xd30>
   12110:	mov	r3, #0
   12114:	mov	r2, #8
   12118:	str	r2, [sp, #8]
   1211c:	str	r3, [sp, #4]
   12120:	str	r3, [sp]
   12124:	mov	r1, r8
   12128:	ldr	r3, [pc, #2904]	; 12c88 <__assert_fail@plt+0x1300>
   1212c:	ldr	r2, [sp, #24]
   12130:	ldr	r0, [sp, #20]
   12134:	bl	11880 <getnameinfo@plt>
   12138:	cmp	r0, #0
   1213c:	beq	12494 <__assert_fail@plt+0xb0c>
   12140:	ldr	r3, [pc, #2884]	; 12c8c <__assert_fail@plt+0x1304>
   12144:	ldr	r3, [r3]
   12148:	cmp	r3, #0
   1214c:	addeq	fp, sp, #100	; 0x64
   12150:	moveq	r5, fp
   12154:	bne	12900 <__assert_fail@plt+0xf78>
   12158:	ldr	r0, [pc, #2864]	; 12c90 <__assert_fail@plt+0x1308>
   1215c:	bl	11e00 <__assert_fail@plt+0x478>
   12160:	mov	sl, r0
   12164:	ldr	r0, [pc, #2856]	; 12c94 <__assert_fail@plt+0x130c>
   12168:	bl	11e00 <__assert_fail@plt+0x478>
   1216c:	mov	r7, r0
   12170:	ldr	r0, [pc, #2848]	; 12c98 <__assert_fail@plt+0x1310>
   12174:	bl	11e00 <__assert_fail@plt+0x478>
   12178:	mov	r8, r0
   1217c:	bl	117e4 <setpwent@plt>
   12180:	add	ip, sp, #48	; 0x30
   12184:	ldr	r3, [sp, #28]
   12188:	ldr	r2, [sp, #32]
   1218c:	add	r1, sp, #72	; 0x48
   12190:	mov	r0, r7
   12194:	str	ip, [sp]
   12198:	bl	117cc <getpwnam_r@plt>
   1219c:	subs	r6, r0, #0
   121a0:	bne	12870 <__assert_fail@plt+0xee8>
   121a4:	ldr	r3, [sp, #48]	; 0x30
   121a8:	cmp	r3, #0
   121ac:	beq	125e0 <__assert_fail@plt+0xc58>
   121b0:	ldr	r0, [r3]
   121b4:	bl	115bc <getspnam@plt>
   121b8:	subs	r9, r0, #0
   121bc:	beq	128a0 <__assert_fail@plt+0xf18>
   121c0:	ldr	r1, [r9, #4]
   121c4:	ldrb	r3, [r1]
   121c8:	cmp	r3, #33	; 0x21
   121cc:	beq	128bc <__assert_fail@plt+0xf34>
   121d0:	mov	r2, #4
   121d4:	ldr	r0, [pc, #2752]	; 12c9c <__assert_fail@plt+0x1314>
   121d8:	bl	11958 <strncmp@plt>
   121dc:	cmp	r0, #0
   121e0:	beq	128bc <__assert_fail@plt+0xf34>
   121e4:	add	r0, sp, #3136	; 0xc40
   121e8:	bl	11628 <time@plt>
   121ec:	ldr	r3, [r9, #28]
   121f0:	cmp	r3, #0
   121f4:	ble	12214 <__assert_fail@plt+0x88c>
   121f8:	ldr	r1, [pc, #2720]	; 12ca0 <__assert_fail@plt+0x1318>
   121fc:	ldr	r0, [sp, #3136]	; 0xc40
   12200:	mul	r1, r1, r3
   12204:	bl	11820 <difftime@plt>
   12208:	vcmpe.f64	d0, #0.0
   1220c:	vmrs	APSR_nzcv, fpscr
   12210:	bgt	12b00 <__assert_fail@plt+0x1178>
   12214:	ldr	r3, [sp, #20]
   12218:	ldrh	ip, [r3]
   1221c:	cmp	ip, #10
   12220:	addeq	r0, r3, #8
   12224:	ldrne	r3, [sp, #20]
   12228:	addne	r0, r3, #4
   1222c:	cmp	r6, #0
   12230:	bne	12b6c <__assert_fail@plt+0x11e4>
   12234:	ldr	r3, [sp, #48]	; 0x30
   12238:	ldr	r2, [r3, #4]
   1223c:	cmp	r2, #0
   12240:	beq	12250 <__assert_fail@plt+0x8c8>
   12244:	ldrb	r2, [r2]
   12248:	cmp	r2, #0
   1224c:	bne	127a8 <__assert_fail@plt+0xe20>
   12250:	ldr	r3, [r3, #8]
   12254:	cmp	r3, #0
   12258:	beq	12270 <__assert_fail@plt+0x8e8>
   1225c:	mov	r1, #0
   12260:	ldr	r0, [pc, #2620]	; 12ca4 <__assert_fail@plt+0x131c>
   12264:	bl	11838 <access@plt>
   12268:	cmp	r0, #0
   1226c:	beq	12b4c <__assert_fail@plt+0x11c4>
   12270:	mov	r2, #1
   12274:	ldr	r1, [pc, #2604]	; 12ca8 <__assert_fail@plt+0x1320>
   12278:	mov	r0, #2
   1227c:	bl	11814 <write@plt>
   12280:	cmp	r0, #0
   12284:	blt	12b5c <__assert_fail@plt+0x11d4>
   12288:	ldr	r3, [pc, #2588]	; 12cac <__assert_fail@plt+0x1324>
   1228c:	mov	r6, #1
   12290:	cmp	r4, #0
   12294:	str	r6, [r3]
   12298:	beq	122e8 <__assert_fail@plt+0x960>
   1229c:	add	r0, sp, #56	; 0x38
   122a0:	bl	11850 <pipe@plt>
   122a4:	cmp	r0, #0
   122a8:	blt	12850 <__assert_fail@plt+0xec8>
   122ac:	bl	11874 <fork@plt>
   122b0:	cmn	r0, #1
   122b4:	mov	r4, r0
   122b8:	beq	12860 <__assert_fail@plt+0xed8>
   122bc:	cmp	r0, #0
   122c0:	bne	1293c <__assert_fail@plt+0xfb4>
   122c4:	ldr	r0, [sp, #36]	; 0x24
   122c8:	bl	11970 <close@plt>
   122cc:	ldr	r0, [sp, #56]	; 0x38
   122d0:	bl	11970 <close@plt>
   122d4:	mov	r1, #2
   122d8:	ldr	r0, [sp, #60]	; 0x3c
   122dc:	bl	1167c <dup2@plt>
   122e0:	ldr	r0, [sp, #60]	; 0x3c
   122e4:	bl	11970 <close@plt>
   122e8:	bl	11790 <getpid@plt>
   122ec:	mov	r1, r0
   122f0:	mov	r0, #0
   122f4:	bl	118e0 <setpgid@plt>
   122f8:	ldr	r3, [sp, #48]	; 0x30
   122fc:	ldr	r2, [r3, #24]
   12300:	ldr	r0, [r3, #12]
   12304:	ldrb	r2, [r2]
   12308:	cmp	r2, #0
   1230c:	ldreq	r2, [pc, #2460]	; 12cb0 <__assert_fail@plt+0x1328>
   12310:	streq	r2, [r3, #24]
   12314:	bl	11844 <setegid@plt>
   12318:	ldr	r3, [sp, #48]	; 0x30
   1231c:	ldr	r0, [r3, #12]
   12320:	bl	11730 <setgid@plt>
   12324:	ldr	r3, [sp, #48]	; 0x30
   12328:	ldr	r1, [r3, #12]
   1232c:	ldr	r0, [r3]
   12330:	bl	116a0 <initgroups@plt>
   12334:	ldr	r3, [sp, #48]	; 0x30
   12338:	ldr	r0, [r3, #8]
   1233c:	bl	118d4 <setuid@plt>
   12340:	ldr	r3, [sp, #48]	; 0x30
   12344:	ldr	r0, [r3, #20]
   12348:	bl	116ac <chdir@plt>
   1234c:	cmp	r0, #0
   12350:	blt	12758 <__assert_fail@plt+0xdd0>
   12354:	ldr	r6, [sp, #48]	; 0x30
   12358:	ldr	r4, [pc, #2388]	; 12cb4 <__assert_fail@plt+0x132c>
   1235c:	mov	r2, #255	; 0xff
   12360:	ldr	r1, [r6, #20]
   12364:	sub	r0, r4, #264	; 0x108
   12368:	bl	1194c <strncat@plt>
   1236c:	mov	r0, r4
   12370:	bl	117b4 <strlen@plt>
   12374:	ldr	r3, [pc, #2364]	; 12cb8 <__assert_fail@plt+0x1330>
   12378:	add	ip, r4, r0
   1237c:	mov	lr, r0
   12380:	ldm	r3!, {r0, r1, r2}
   12384:	ldrh	r3, [r3]
   12388:	str	r0, [r4, lr]
   1238c:	str	r2, [ip, #8]
   12390:	strh	r3, [ip, #12]
   12394:	str	r1, [ip, #4]
   12398:	add	r0, r4, #20
   1239c:	ldr	r1, [r6, #24]
   123a0:	mov	r2, #63	; 0x3f
   123a4:	bl	1194c <strncat@plt>
   123a8:	ldr	r1, [r6]
   123ac:	add	r0, r4, #92	; 0x5c
   123b0:	mov	r2, #31
   123b4:	bl	1194c <strncat@plt>
   123b8:	ldr	r1, [r6]
   123bc:	add	r0, r4, #132	; 0x84
   123c0:	mov	r2, #31
   123c4:	bl	1194c <strncat@plt>
   123c8:	mov	r2, #127	; 0x7f
   123cc:	add	r0, r4, #176	; 0xb0
   123d0:	mov	r1, r5
   123d4:	bl	1194c <strncat@plt>
   123d8:	ldr	r3, [pc, #2268]	; 12cbc <__assert_fail@plt+0x1334>
   123dc:	ldr	r6, [r6, #24]
   123e0:	mov	r1, #47	; 0x2f
   123e4:	mov	r0, r6
   123e8:	add	r4, r4, #312	; 0x138
   123ec:	str	r4, [r3]
   123f0:	bl	118a4 <strrchr@plt>
   123f4:	cmp	r0, #0
   123f8:	addne	r6, r0, #1
   123fc:	bl	1188c <endpwent@plt>
   12400:	ldr	r3, [pc, #2232]	; 12cc0 <__assert_fail@plt+0x1338>
   12404:	ldr	r3, [r3]
   12408:	cmp	r3, #0
   1240c:	bne	12420 <__assert_fail@plt+0xa98>
   12410:	ldr	r3, [sp, #48]	; 0x30
   12414:	ldr	r2, [r3, #8]
   12418:	cmp	r2, #0
   1241c:	bne	1243c <__assert_fail@plt+0xab4>
   12420:	mov	r3, sl
   12424:	stm	sp, {r5, r7, r8}
   12428:	mov	r0, #38	; 0x26
   1242c:	ldr	r2, [pc, #2192]	; 12cc4 <__assert_fail@plt+0x133c>
   12430:	ldr	r1, [pc, #2192]	; 12cc8 <__assert_fail@plt+0x1340>
   12434:	bl	118c8 <syslog@plt>
   12438:	ldr	r3, [sp, #48]	; 0x30
   1243c:	mov	r2, #0
   12440:	ldr	r0, [r3, #24]
   12444:	mov	r1, r6
   12448:	mov	r3, r8
   1244c:	str	r2, [sp]
   12450:	ldr	r2, [pc, #2164]	; 12ccc <__assert_fail@plt+0x1344>
   12454:	bl	11898 <execl@plt>
   12458:	ldr	r3, [sp, #48]	; 0x30
   1245c:	ldr	r1, [pc, #2156]	; 12cd0 <__assert_fail@plt+0x1348>
   12460:	mov	r0, #3
   12464:	ldr	r2, [r3]
   12468:	bl	118c8 <syslog@plt>
   1246c:	bl	117f0 <__errno_location@plt>
   12470:	ldr	r3, [sp, #48]	; 0x30
   12474:	ldr	r2, [pc, #2136]	; 12cd4 <__assert_fail@plt+0x134c>
   12478:	ldr	r3, [r3, #24]
   1247c:	ldr	r1, [r0]
   12480:	mov	r0, #1
   12484:	bl	11700 <error@plt>
   12488:	add	sp, sp, #11328	; 0x2c40
   1248c:	add	sp, sp, #4
   12490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12494:	ldr	r3, [pc, #2108]	; 12cd8 <__assert_fail@plt+0x1350>
   12498:	ldr	r3, [r3]
   1249c:	cmp	r3, #0
   124a0:	bne	124b4 <__assert_fail@plt+0xb2c>
   124a4:	ldr	r0, [sp, #24]
   124a8:	bl	11f3c <__assert_fail@plt+0x5b4>
   124ac:	subs	fp, r0, #0
   124b0:	beq	127d4 <__assert_fail@plt+0xe4c>
   124b4:	mov	r2, #32
   124b8:	mov	r1, #0
   124bc:	mov	r0, r9
   124c0:	bl	11808 <memset@plt>
   124c4:	ldr	r3, [sp, #20]
   124c8:	mov	r2, r9
   124cc:	mov	r8, #1
   124d0:	ldrh	ip, [r3]
   124d4:	mov	r1, #0
   124d8:	add	r3, sp, #148	; 0x94
   124dc:	ldr	r0, [sp, #24]
   124e0:	str	ip, [sp, #280]	; 0x118
   124e4:	str	r8, [sp, #284]	; 0x11c
   124e8:	bl	11940 <getaddrinfo@plt>
   124ec:	subs	r7, r0, #0
   124f0:	bne	127dc <__assert_fail@plt+0xe54>
   124f4:	ldr	r5, [sp, #148]	; 0x94
   124f8:	cmp	r5, #0
   124fc:	beq	1256c <__assert_fail@plt+0xbe4>
   12500:	add	r3, sp, #3136	; 0xc40
   12504:	add	fp, r3, #4
   12508:	mov	sl, #42	; 0x2a
   1250c:	mov	r9, #46	; 0x2e
   12510:	mov	r2, sl
   12514:	mov	r1, #0
   12518:	mov	r0, fp
   1251c:	str	r7, [sp, #3136]	; 0xc40
   12520:	bl	11808 <memset@plt>
   12524:	ldr	r1, [r5, #16]
   12528:	ldr	r0, [r5, #20]
   1252c:	mov	r3, r9
   12530:	stmib	sp, {r7, r8}
   12534:	str	r7, [sp]
   12538:	add	r2, sp, #3136	; 0xc40
   1253c:	bl	11880 <getnameinfo@plt>
   12540:	cmp	r0, #0
   12544:	bne	1255c <__assert_fail@plt+0xbd4>
   12548:	add	r1, sp, #3136	; 0xc40
   1254c:	add	r0, sp, #100	; 0x64
   12550:	bl	11574 <strcmp@plt>
   12554:	cmp	r0, #0
   12558:	beq	127f8 <__assert_fail@plt+0xe70>
   1255c:	ldr	r5, [r5, #28]
   12560:	cmp	r5, #0
   12564:	bne	12510 <__assert_fail@plt+0xb88>
   12568:	ldr	r5, [sp, #148]	; 0x94
   1256c:	mov	r0, r5
   12570:	bl	11934 <freeaddrinfo@plt>
   12574:	add	r2, sp, #100	; 0x64
   12578:	ldr	r3, [sp, #24]
   1257c:	ldr	r1, [pc, #1880]	; 12cdc <__assert_fail@plt+0x1354>
   12580:	mov	r0, #5
   12584:	mov	r5, r2
   12588:	bl	118c8 <syslog@plt>
   1258c:	ldr	r6, [pc, #1868]	; 12ce0 <__assert_fail@plt+0x1358>
   12590:	ldr	r0, [pc, #1784]	; 12c90 <__assert_fail@plt+0x1308>
   12594:	bl	11e00 <__assert_fail@plt+0x478>
   12598:	mov	sl, r0
   1259c:	ldr	r0, [pc, #1776]	; 12c94 <__assert_fail@plt+0x130c>
   125a0:	bl	11e00 <__assert_fail@plt+0x478>
   125a4:	mov	r7, r0
   125a8:	ldr	r0, [pc, #1768]	; 12c98 <__assert_fail@plt+0x1310>
   125ac:	bl	11e00 <__assert_fail@plt+0x478>
   125b0:	mov	r8, r0
   125b4:	bl	117e4 <setpwent@plt>
   125b8:	add	ip, sp, #48	; 0x30
   125bc:	ldr	r3, [sp, #28]
   125c0:	ldr	r2, [sp, #32]
   125c4:	add	r1, sp, #72	; 0x48
   125c8:	mov	r0, r7
   125cc:	str	ip, [sp]
   125d0:	bl	117cc <getpwnam_r@plt>
   125d4:	ldr	fp, [sp, #24]
   125d8:	cmp	r0, #0
   125dc:	beq	121a4 <__assert_fail@plt+0x81c>
   125e0:	mov	r3, r5
   125e4:	stm	sp, {r7, r8}
   125e8:	mov	r2, sl
   125ec:	ldr	r1, [pc, #1776]	; 12ce4 <__assert_fail@plt+0x135c>
   125f0:	mov	r0, #38	; 0x26
   125f4:	bl	118c8 <syslog@plt>
   125f8:	ldr	r3, [pc, #1768]	; 12ce8 <__assert_fail@plt+0x1360>
   125fc:	cmp	r6, #0
   12600:	moveq	r6, r3
   12604:	b	1288c <__assert_fail@plt+0xf04>
   12608:	ldr	r6, [pc, #1756]	; 12cec <__assert_fail@plt+0x1364>
   1260c:	ldr	r4, [sp, #24]
   12610:	add	fp, sp, #3136	; 0xc40
   12614:	mov	r0, fp
   12618:	ldrb	r2, [r4]
   1261c:	mov	r1, r6
   12620:	bl	118ec <sprintf@plt>
   12624:	ldrb	r3, [r4]
   12628:	add	fp, fp, #3
   1262c:	cmp	r3, #131	; 0x83
   12630:	cmpne	r3, #137	; 0x89
   12634:	beq	12828 <__assert_fail@plt+0xea0>
   12638:	cmp	r3, #0
   1263c:	beq	1266c <__assert_fail@plt+0xce4>
   12640:	cmp	r3, #1
   12644:	addeq	r4, r4, #1
   12648:	ldrbne	r2, [r4, #1]
   1264c:	ldreq	r3, [sp, #276]	; 0x114
   12650:	ldrne	r3, [sp, #276]	; 0x114
   12654:	subeq	r3, r3, #1
   12658:	subne	r3, r3, r2
   1265c:	addne	r4, r4, r2
   12660:	cmp	r3, #0
   12664:	str	r3, [sp, #276]	; 0x114
   12668:	bne	12614 <__assert_fail@plt+0xc8c>
   1266c:	add	r3, sp, #3136	; 0xc40
   12670:	add	r2, sp, #100	; 0x64
   12674:	ldr	r1, [pc, #1652]	; 12cf0 <__assert_fail@plt+0x1368>
   12678:	mov	r0, #5
   1267c:	bl	118c8 <syslog@plt>
   12680:	ldr	r3, [sp, #276]	; 0x114
   12684:	mov	r1, r7
   12688:	str	r3, [sp]
   1268c:	mov	r2, #4
   12690:	mov	r3, #0
   12694:	mov	r0, r5
   12698:	bl	1158c <setsockopt@plt>
   1269c:	cmp	r0, #0
   126a0:	beq	1209c <__assert_fail@plt+0x714>
   126a4:	mov	r0, #3
   126a8:	ldr	r1, [pc, #1604]	; 12cf4 <__assert_fail@plt+0x136c>
   126ac:	bl	118c8 <syslog@plt>
   126b0:	mov	r0, #1
   126b4:	bl	1179c <exit@plt>
   126b8:	mov	r1, #0
   126bc:	mov	r0, r5
   126c0:	bl	1167c <dup2@plt>
   126c4:	mov	r1, #1
   126c8:	mov	r0, r5
   126cc:	bl	1167c <dup2@plt>
   126d0:	mov	r0, r5
   126d4:	mov	r1, #2
   126d8:	bl	1167c <dup2@plt>
   126dc:	b	12110 <__assert_fail@plt+0x788>
   126e0:	ldr	r2, [sp, #20]
   126e4:	ldr	r3, [pc, #1548]	; 12cf8 <__assert_fail@plt+0x1370>
   126e8:	add	r0, sp, #3136	; 0xc40
   126ec:	ldrh	r1, [r2]
   126f0:	str	r3, [sp, #3136]	; 0xc40
   126f4:	bl	117a8 <rresvport_af@plt>
   126f8:	subs	r3, r0, #0
   126fc:	str	r3, [sp, #36]	; 0x24
   12700:	blt	12b24 <__assert_fail@plt+0x119c>
   12704:	sub	r3, r4, #512	; 0x200
   12708:	cmp	r3, #512	; 0x200
   1270c:	bcs	12b38 <__assert_fail@plt+0x11b0>
   12710:	ldr	r2, [sp, #20]
   12714:	ldr	r1, [sp, #20]
   12718:	ldr	r0, [sp, #36]	; 0x24
   1271c:	ldrh	r3, [r2]
   12720:	cmp	r3, #10
   12724:	rev16	r3, r4
   12728:	ldrne	r2, [sp, #20]
   1272c:	strh	r3, [r2, #2]
   12730:	mov	r2, r8
   12734:	bl	1197c <connect@plt>
   12738:	cmp	r0, #0
   1273c:	bge	12108 <__assert_fail@plt+0x780>
   12740:	mov	r0, #6
   12744:	mov	r2, r4
   12748:	ldr	r1, [pc, #1452]	; 12cfc <__assert_fail@plt+0x1374>
   1274c:	bl	118c8 <syslog@plt>
   12750:	mov	r0, #1
   12754:	bl	1179c <exit@plt>
   12758:	mov	r3, r5
   1275c:	mov	r2, sl
   12760:	ldr	r1, [pc, #1432]	; 12d00 <__assert_fail@plt+0x1378>
   12764:	mov	r0, #38	; 0x26
   12768:	stm	sp, {r7, r8}
   1276c:	bl	118c8 <syslog@plt>
   12770:	ldr	r0, [pc, #1420]	; 12d04 <__assert_fail@plt+0x137c>
   12774:	bl	11d74 <__assert_fail@plt+0x3ec>
   12778:	ldr	r0, [pc, #1416]	; 12d08 <__assert_fail@plt+0x1380>
   1277c:	bl	116ac <chdir@plt>
   12780:	cmp	r0, #0
   12784:	bge	12354 <__assert_fail@plt+0x9cc>
   12788:	mov	r0, #35	; 0x23
   1278c:	str	r7, [sp]
   12790:	mov	r3, r5
   12794:	mov	r2, sl
   12798:	ldr	r1, [pc, #1388]	; 12d0c <__assert_fail@plt+0x1384>
   1279c:	bl	118c8 <syslog@plt>
   127a0:	mov	r0, #1
   127a4:	bl	1179c <exit@plt>
   127a8:	ldr	r1, [r3, #8]
   127ac:	mov	r2, sl
   127b0:	clz	r1, r1
   127b4:	str	ip, [sp]
   127b8:	lsr	r1, r1, #5
   127bc:	mov	r3, r7
   127c0:	bl	11724 <iruserok_af@plt>
   127c4:	cmp	r0, #0
   127c8:	blt	12b6c <__assert_fail@plt+0x11e4>
   127cc:	ldr	r3, [sp, #48]	; 0x30
   127d0:	b	12250 <__assert_fail@plt+0x8c8>
   127d4:	ldr	r5, [sp, #24]
   127d8:	b	12158 <__assert_fail@plt+0x7d0>
   127dc:	ldr	r2, [sp, #24]
   127e0:	ldr	r1, [pc, #1320]	; 12d10 <__assert_fail@plt+0x1388>
   127e4:	mov	r0, #6
   127e8:	add	r5, sp, #100	; 0x64
   127ec:	bl	118c8 <syslog@plt>
   127f0:	ldr	r6, [pc, #1308]	; 12d14 <__assert_fail@plt+0x138c>
   127f4:	b	12590 <__assert_fail@plt+0xc08>
   127f8:	mov	r6, r0
   127fc:	ldr	r0, [sp, #148]	; 0x94
   12800:	bl	11934 <freeaddrinfo@plt>
   12804:	ldr	r5, [sp, #24]
   12808:	b	12590 <__assert_fail@plt+0xc08>
   1280c:	cmp	r0, #0
   12810:	blt	12840 <__assert_fail@plt+0xeb8>
   12814:	mov	r0, r5
   12818:	mov	r1, #2
   1281c:	bl	1185c <shutdown@plt>
   12820:	mov	r0, #1
   12824:	bl	1179c <exit@plt>
   12828:	mov	r0, #5
   1282c:	add	r2, sp, #100	; 0x64
   12830:	ldr	r1, [pc, #1248]	; 12d18 <__assert_fail@plt+0x1390>
   12834:	bl	118c8 <syslog@plt>
   12838:	mov	r0, #1
   1283c:	bl	1179c <exit@plt>
   12840:	ldr	r1, [pc, #1236]	; 12d1c <__assert_fail@plt+0x1394>
   12844:	mov	r0, #5
   12848:	bl	118c8 <syslog@plt>
   1284c:	b	12814 <__assert_fail@plt+0xe8c>
   12850:	ldr	r0, [pc, #1224]	; 12d20 <__assert_fail@plt+0x1398>
   12854:	bl	11d74 <__assert_fail@plt+0x3ec>
   12858:	mov	r0, r6
   1285c:	bl	1179c <exit@plt>
   12860:	ldr	r0, [pc, #1212]	; 12d24 <__assert_fail@plt+0x139c>
   12864:	bl	11d74 <__assert_fail@plt+0x3ec>
   12868:	mov	r0, r6
   1286c:	bl	1179c <exit@plt>
   12870:	stm	sp, {r7, r8}
   12874:	mov	r3, r5
   12878:	mov	r2, sl
   1287c:	ldr	r1, [pc, #1120]	; 12ce4 <__assert_fail@plt+0x135c>
   12880:	mov	r0, #38	; 0x26
   12884:	bl	118c8 <syslog@plt>
   12888:	ldr	r6, [pc, #1112]	; 12ce8 <__assert_fail@plt+0x1360>
   1288c:	mov	r0, r6
   12890:	mov	r1, fp
   12894:	bl	11d74 <__assert_fail@plt+0x3ec>
   12898:	mov	r0, #1
   1289c:	bl	1179c <exit@plt>
   128a0:	ldr	r1, [pc, #1152]	; 12d28 <__assert_fail@plt+0x13a0>
   128a4:	mov	r0, #35	; 0x23
   128a8:	bl	118c8 <syslog@plt>
   128ac:	ldr	r3, [pc, #1076]	; 12ce8 <__assert_fail@plt+0x1360>
   128b0:	cmp	r6, #0
   128b4:	moveq	r6, r3
   128b8:	b	1288c <__assert_fail@plt+0xf04>
   128bc:	stm	sp, {r7, r8}
   128c0:	mov	r3, r5
   128c4:	mov	r2, sl
   128c8:	ldr	r1, [pc, #1116]	; 12d2c <__assert_fail@plt+0x13a4>
   128cc:	mov	r0, #38	; 0x26
   128d0:	bl	118c8 <syslog@plt>
   128d4:	cmp	r6, #0
   128d8:	bne	1288c <__assert_fail@plt+0xf04>
   128dc:	ldr	r6, [pc, #1100]	; 12d30 <__assert_fail@plt+0x13a8>
   128e0:	b	1288c <__assert_fail@plt+0xf04>
   128e4:	mov	r0, #37	; 0x25
   128e8:	add	r3, sp, #64	; 0x40
   128ec:	add	r2, sp, #100	; 0x64
   128f0:	ldr	r1, [pc, #1084]	; 12d34 <__assert_fail@plt+0x13ac>
   128f4:	bl	118c8 <syslog@plt>
   128f8:	mov	r0, #1
   128fc:	bl	1179c <exit@plt>
   12900:	add	r2, sp, #100	; 0x64
   12904:	ldr	r1, [pc, #1068]	; 12d38 <__assert_fail@plt+0x13b0>
   12908:	mov	r0, #5
   1290c:	bl	118c8 <syslog@plt>
   12910:	ldr	r0, [pc, #1048]	; 12d30 <__assert_fail@plt+0x13a8>
   12914:	bl	11d74 <__assert_fail@plt+0x3ec>
   12918:	mov	r0, #1
   1291c:	bl	1179c <exit@plt>
   12920:	bl	115ec <gai_strerror@plt>
   12924:	ldr	r1, [pc, #1040]	; 12d3c <__assert_fail@plt+0x13b4>
   12928:	mov	r2, r0
   1292c:	mov	r0, #4
   12930:	bl	118c8 <syslog@plt>
   12934:	mov	r0, r4
   12938:	bl	1179c <exit@plt>
   1293c:	mov	r0, #0
   12940:	bl	11970 <close@plt>
   12944:	mov	r0, r6
   12948:	bl	11970 <close@plt>
   1294c:	mov	r0, #2
   12950:	bl	11970 <close@plt>
   12954:	ldr	r0, [sp, #60]	; 0x3c
   12958:	bl	11970 <close@plt>
   1295c:	add	r3, sp, #272	; 0x110
   12960:	add	r1, sp, #400	; 0x190
   12964:	mov	r2, #0
   12968:	str	r2, [r3, #4]!
   1296c:	cmp	r3, r1
   12970:	bne	12968 <__assert_fail@plt+0xfe0>
   12974:	ldr	r3, [sp, #36]	; 0x24
   12978:	ldr	r7, [sp, #56]	; 0x38
   1297c:	cmp	r3, #0
   12980:	asr	r2, r3, #31
   12984:	add	r6, r3, #31
   12988:	movge	r6, r3
   1298c:	lsr	r2, r2, #27
   12990:	add	r8, r3, r2
   12994:	cmp	r7, #0
   12998:	asr	r6, r6, #5
   1299c:	add	ip, r7, #31
   129a0:	and	r8, r8, #31
   129a4:	movge	ip, r7
   129a8:	add	r0, sp, #3136	; 0xc40
   129ac:	mov	r1, #1
   129b0:	add	r6, r0, r6, lsl #2
   129b4:	sub	r2, r8, r2
   129b8:	asr	r0, r7, #31
   129bc:	asr	ip, ip, #5
   129c0:	ldr	lr, [r6, #-2860]	; 0xfffff4d4
   129c4:	lsl	r8, r1, r2
   129c8:	lsr	r0, r0, #27
   129cc:	add	r2, sp, #3136	; 0xc40
   129d0:	add	ip, r2, ip, lsl #2
   129d4:	add	r2, r7, r0
   129d8:	orr	lr, lr, r8
   129dc:	and	r2, r2, #31
   129e0:	str	lr, [r6, #-2860]	; 0xfffff4d4
   129e4:	sub	r2, r2, r0
   129e8:	ldr	lr, [ip, #-2860]	; 0xfffff4d4
   129ec:	cmp	r3, r7
   129f0:	orr	lr, lr, r1, lsl r2
   129f4:	mov	r0, r7
   129f8:	add	r2, sp, #52	; 0x34
   129fc:	ldr	r1, [pc, #828]	; 12d40 <__assert_fail@plt+0x13b8>
   12a00:	movge	r7, r3
   12a04:	str	lr, [ip, #-2860]	; 0xfffff4d4
   12a08:	bl	143c0 <argp_parse@@Base+0xfa0>
   12a0c:	add	r3, sp, #3136	; 0xc40
   12a10:	sub	r3, r3, #2848	; 0xb20
   12a14:	sub	r3, r3, #12
   12a18:	add	r7, r7, #1
   12a1c:	add	sl, sp, #47	; 0x2f
   12a20:	add	fp, sp, #148	; 0x94
   12a24:	str	r3, [sp, #20]
   12a28:	mov	r9, #0
   12a2c:	b	12ac8 <__assert_fail@plt+0x1140>
   12a30:	ldr	r3, [r6, #-2988]	; 0xfffff454
   12a34:	tst	r8, r3
   12a38:	bne	12bfc <__assert_fail@plt+0x1274>
   12a3c:	ldr	r1, [sp, #56]	; 0x38
   12a40:	add	r2, sp, #3136	; 0xc40
   12a44:	cmp	r1, #0
   12a48:	add	r3, r1, #31
   12a4c:	movge	r3, r1
   12a50:	asr	r0, r1, #31
   12a54:	asr	r3, r3, #5
   12a58:	lsr	r0, r0, #27
   12a5c:	add	r3, r2, r3, lsl #2
   12a60:	add	r2, r1, r0
   12a64:	and	r2, r2, #31
   12a68:	ldr	ip, [r3, #-2988]	; 0xfffff454
   12a6c:	mov	r5, #1
   12a70:	sub	r3, r2, r0
   12a74:	ands	r3, ip, r5, lsl r3
   12a78:	bne	12bc4 <__assert_fail@plt+0x123c>
   12a7c:	ldr	r3, [r6, #-2860]	; 0xfffff4d4
   12a80:	tst	r8, r3
   12a84:	bne	12ac8 <__assert_fail@plt+0x1140>
   12a88:	ldr	r3, [sp, #56]	; 0x38
   12a8c:	add	ip, sp, #3136	; 0xc40
   12a90:	cmp	r3, #0
   12a94:	add	r2, r3, #31
   12a98:	movge	r2, r3
   12a9c:	asr	r0, r3, #31
   12aa0:	asr	r2, r2, #5
   12aa4:	lsr	r0, r0, #27
   12aa8:	add	r2, ip, r2, lsl #2
   12aac:	add	r3, r3, r0
   12ab0:	and	r3, r3, #31
   12ab4:	mov	r1, #1
   12ab8:	ldr	r2, [r2, #-2860]	; 0xfffff4d4
   12abc:	sub	r3, r3, r0
   12ac0:	ands	r3, r2, r1, lsl r3
   12ac4:	beq	12af8 <__assert_fail@plt+0x1170>
   12ac8:	mov	r2, #128	; 0x80
   12acc:	ldr	r1, [sp, #20]
   12ad0:	mov	r0, fp
   12ad4:	bl	11610 <memcpy@plt>
   12ad8:	mov	r3, #0
   12adc:	str	r9, [sp]
   12ae0:	mov	r2, r3
   12ae4:	add	r1, sp, #148	; 0x94
   12ae8:	mov	r0, r7
   12aec:	bl	11640 <select@plt>
   12af0:	cmp	r0, #0
   12af4:	bge	12a30 <__assert_fail@plt+0x10a8>
   12af8:	mov	r0, #0
   12afc:	bl	1179c <exit@plt>
   12b00:	stm	sp, {r7, r8}
   12b04:	mov	r3, r5
   12b08:	mov	r2, sl
   12b0c:	ldr	r1, [pc, #560]	; 12d44 <__assert_fail@plt+0x13bc>
   12b10:	mov	r0, #38	; 0x26
   12b14:	bl	118c8 <syslog@plt>
   12b18:	cmp	r6, #0
   12b1c:	bne	1288c <__assert_fail@plt+0xf04>
   12b20:	b	128dc <__assert_fail@plt+0xf54>
   12b24:	mov	r0, #3
   12b28:	ldr	r1, [pc, #536]	; 12d48 <__assert_fail@plt+0x13c0>
   12b2c:	bl	118c8 <syslog@plt>
   12b30:	mov	r0, r7
   12b34:	bl	1179c <exit@plt>
   12b38:	mov	r0, #3
   12b3c:	ldr	r1, [pc, #520]	; 12d4c <__assert_fail@plt+0x13c4>
   12b40:	bl	118c8 <syslog@plt>
   12b44:	mov	r0, r7
   12b48:	bl	1179c <exit@plt>
   12b4c:	ldr	r0, [pc, #508]	; 12d50 <__assert_fail@plt+0x13c8>
   12b50:	bl	11d74 <__assert_fail@plt+0x3ec>
   12b54:	mov	r0, #1
   12b58:	bl	1179c <exit@plt>
   12b5c:	ldr	r0, [pc, #496]	; 12d54 <__assert_fail@plt+0x13cc>
   12b60:	bl	11d74 <__assert_fail@plt+0x3ec>
   12b64:	mov	r0, #1
   12b68:	bl	1179c <exit@plt>
   12b6c:	ldr	r3, [pc, #484]	; 12d58 <__assert_fail@plt+0x13d0>
   12b70:	ldr	r3, [r3]
   12b74:	cmp	r3, #0
   12b78:	beq	12ba8 <__assert_fail@plt+0x1220>
   12b7c:	stmib	sp, {r3, r8}
   12b80:	str	r7, [sp]
   12b84:	mov	r3, r5
   12b88:	mov	r2, sl
   12b8c:	ldr	r1, [pc, #456]	; 12d5c <__assert_fail@plt+0x13d4>
   12b90:	mov	r0, #38	; 0x26
   12b94:	bl	118c8 <syslog@plt>
   12b98:	ldr	r3, [pc, #400]	; 12d30 <__assert_fail@plt+0x13a8>
   12b9c:	cmp	r6, #0
   12ba0:	moveq	r6, r3
   12ba4:	b	1288c <__assert_fail@plt+0xf04>
   12ba8:	stm	sp, {r7, r8}
   12bac:	mov	r3, r5
   12bb0:	mov	r2, sl
   12bb4:	ldr	r1, [pc, #420]	; 12d60 <__assert_fail@plt+0x13d8>
   12bb8:	mov	r0, #38	; 0x26
   12bbc:	bl	118c8 <syslog@plt>
   12bc0:	b	12b98 <__assert_fail@plt+0x1210>
   12bc4:	str	r1, [sp, #24]
   12bc8:	bl	117f0 <__errno_location@plt>
   12bcc:	ldr	r1, [sp, #24]
   12bd0:	mov	r2, #8192	; 0x2000
   12bd4:	str	r9, [r0]
   12bd8:	mov	r0, r1
   12bdc:	add	r1, sp, #3136	; 0xc40
   12be0:	bl	115a4 <read@plt>
   12be4:	subs	r2, r0, #0
   12be8:	ble	12c24 <__assert_fail@plt+0x129c>
   12bec:	add	r1, sp, #3136	; 0xc40
   12bf0:	ldr	r0, [sp, #36]	; 0x24
   12bf4:	bl	11814 <write@plt>
   12bf8:	b	12a7c <__assert_fail@plt+0x10f4>
   12bfc:	mov	r2, #1
   12c00:	mov	r1, sl
   12c04:	ldr	r0, [sp, #36]	; 0x24
   12c08:	bl	115a4 <read@plt>
   12c0c:	cmp	r0, #0
   12c10:	ble	12c70 <__assert_fail@plt+0x12e8>
   12c14:	ldrb	r1, [sp, #47]	; 0x2f
   12c18:	mov	r0, r4
   12c1c:	bl	11694 <killpg@plt>
   12c20:	b	12a3c <__assert_fail@plt+0x10b4>
   12c24:	mov	r1, #2
   12c28:	ldr	r0, [sp, #36]	; 0x24
   12c2c:	bl	1185c <shutdown@plt>
   12c30:	ldr	r3, [sp, #56]	; 0x38
   12c34:	add	r0, sp, #3136	; 0xc40
   12c38:	cmp	r3, #0
   12c3c:	add	r2, r3, #31
   12c40:	movge	r2, r3
   12c44:	asr	r1, r3, #31
   12c48:	asr	r2, r2, #5
   12c4c:	lsr	r1, r1, #27
   12c50:	add	r2, r0, r2, lsl #2
   12c54:	add	r3, r3, r1
   12c58:	and	r3, r3, #31
   12c5c:	ldr	r0, [r2, #-2860]	; 0xfffff4d4
   12c60:	sub	r3, r3, r1
   12c64:	bic	r3, r0, r5, lsl r3
   12c68:	str	r3, [r2, #-2860]	; 0xfffff4d4
   12c6c:	b	12a7c <__assert_fail@plt+0x10f4>
   12c70:	ldr	r3, [r6, #-2860]	; 0xfffff4d4
   12c74:	bic	r3, r3, r8
   12c78:	str	r3, [r6, #-2860]	; 0xfffff4d4
   12c7c:	b	12a3c <__assert_fail@plt+0x10b4>
   12c80:	andeq	r0, r0, sl, lsr #21
   12c84:	andeq	r9, r1, r0, asr #23
   12c88:	andeq	r0, r0, r1, lsl #8
   12c8c:	strdeq	fp, [r2], -r8
   12c90:	andeq	r9, r1, r4, lsl sp
   12c94:	andeq	r9, r1, ip, lsl sp
   12c98:	andeq	r9, r1, r4, lsr #26
   12c9c:	muleq	r1, r8, sp
   12ca0:	andeq	r5, r1, r0, lsl #3
   12ca4:	andeq	r9, r1, ip, asr lr
   12ca8:	strdeq	r9, [r1], -r0
   12cac:	andeq	fp, r2, ip, lsr r5
   12cb0:	andeq	r9, r1, r8, asr #29
   12cb4:	muleq	r2, r0, r2
   12cb8:	andeq	r9, r1, ip, lsr pc
   12cbc:	ldrdeq	fp, [r2], -ip
   12cc0:	andeq	fp, r2, r8, lsr r5
   12cc4:	andeq	sl, r1, r0, lsl ip
   12cc8:	andeq	r9, r1, ip, asr #30
   12ccc:	andeq	r9, r1, r0, ror pc
   12cd0:	andeq	r9, r1, r4, ror pc
   12cd4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12cd8:	andeq	fp, r2, r4, lsr r5
   12cdc:	andeq	r9, r1, r4, lsr #31
   12ce0:	andeq	r9, r1, r8, ror #22
   12ce4:	andeq	r9, r1, ip, asr #26
   12ce8:	andeq	r9, r1, r8, lsl #23
   12cec:	andeq	r9, r1, r4, asr #23
   12cf0:	andeq	r9, r1, r4, lsl #24
   12cf4:	andeq	r9, r1, r0, asr #24
   12cf8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   12cfc:	ldrdeq	r9, [r1], -r4
   12d00:	ldrdeq	r9, [r1], -r0
   12d04:	strdeq	r9, [r1], -ip
   12d08:	andeq	r9, r1, r4, lsl pc
   12d0c:	andeq	r9, r1, r8, lsl pc
   12d10:	strdeq	r9, [r1], -r0
   12d14:	andeq	r9, r1, r8, lsr fp
   12d18:	andeq	r9, r1, ip, asr #23
   12d1c:	andeq	r9, r1, r8, lsl #25
   12d20:	muleq	r1, ip, lr
   12d24:			; <UNDEFINED> instruction: 0x00019eb0
   12d28:	andeq	r9, r1, r4, ror sp
   12d2c:	andeq	r9, r1, r0, lsr #27
   12d30:	muleq	r1, ip, fp
   12d34:	andeq	r9, r1, r0, ror #24
   12d38:	andeq	r9, r1, ip, lsr #26
   12d3c:			; <UNDEFINED> instruction: 0x00019bb0
   12d40:	andeq	r5, r0, r1, lsr #8
   12d44:	andeq	r9, r1, ip, asr #27
   12d48:	muleq	r1, r4, ip
   12d4c:			; <UNDEFINED> instruction: 0x00019cb0
   12d50:	andeq	r9, r1, ip, ror #28
   12d54:	andeq	r9, r1, r8, lsl #29
   12d58:	strdeq	fp, [r2], -r0
   12d5c:	strdeq	r9, [r1], -ip
   12d60:	andeq	r9, r1, r0, lsr lr
   12d64:	push	{r4, r5, r6, r7, r8, r9, lr}
   12d68:	sub	sp, sp, #1088	; 0x440
   12d6c:	sub	sp, sp, #4
   12d70:	bl	117f0 <__errno_location@plt>
   12d74:	mov	r4, #0
   12d78:	mov	r6, r4
   12d7c:	mov	r7, r4
   12d80:	mov	r8, r0
   12d84:	b	12dbc <__assert_fail@plt+0x1434>
   12d88:	bl	1170c <gethostname@plt>
   12d8c:	mov	r6, r5
   12d90:	mov	r2, r4
   12d94:	mov	r1, r7
   12d98:	subs	r9, r0, #0
   12d9c:	mov	r0, r5
   12da0:	bne	12db0 <__assert_fail@plt+0x1428>
   12da4:	bl	1182c <memchr@plt>
   12da8:	cmp	r0, #0
   12dac:	beq	12dbc <__assert_fail@plt+0x1434>
   12db0:	ldr	r3, [r8]
   12db4:	cmp	r3, #36	; 0x24
   12db8:	bne	12dfc <__assert_fail@plt+0x1474>
   12dbc:	add	r4, r4, #256	; 0x100
   12dc0:	mov	r1, r4
   12dc4:	str	r7, [r8]
   12dc8:	mov	r0, r6
   12dcc:	bl	14e80 <argp_parse@@Base+0x1a60>
   12dd0:	mov	r1, r4
   12dd4:	subs	r5, r0, #0
   12dd8:	bne	12d88 <__assert_fail@plt+0x1400>
   12ddc:	mov	r3, #12
   12de0:	mov	r0, r6
   12de4:	str	r3, [r8]
   12de8:	bl	142b8 <argp_parse@@Base+0xe98>
   12dec:	mov	r0, r5
   12df0:	add	sp, sp, #1088	; 0x440
   12df4:	add	sp, sp, #4
   12df8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12dfc:	cmp	r3, #0
   12e00:	cmpne	r9, #0
   12e04:	movne	r9, #1
   12e08:	moveq	r9, #0
   12e0c:	bne	12eac <__assert_fail@plt+0x1524>
   12e10:	mov	r2, #32
   12e14:	mov	r1, r9
   12e18:	add	r0, sp, #28
   12e1c:	bl	11808 <memset@plt>
   12e20:	add	r3, sp, #24
   12e24:	mov	ip, #2
   12e28:	add	r2, sp, #28
   12e2c:	mov	r1, r9
   12e30:	mov	r0, r5
   12e34:	str	ip, [sp, #32]
   12e38:	bl	11940 <getaddrinfo@plt>
   12e3c:	subs	r3, r0, #0
   12e40:	bne	12dec <__assert_fail@plt+0x1464>
   12e44:	ldr	r2, [sp, #24]
   12e48:	add	r1, sp, #60	; 0x3c
   12e4c:	str	r1, [sp, #20]
   12e50:	mov	ip, #8
   12e54:	ldr	r1, [r2, #16]
   12e58:	ldr	r0, [r2, #20]
   12e5c:	str	r3, [sp, #4]
   12e60:	str	r3, [sp]
   12e64:	ldr	r2, [sp, #20]
   12e68:	str	ip, [sp, #8]
   12e6c:	ldr	r3, [pc, #72]	; 12ebc <__assert_fail@plt+0x1534>
   12e70:	bl	11880 <getnameinfo@plt>
   12e74:	cmp	r0, #0
   12e78:	beq	12e94 <__assert_fail@plt+0x150c>
   12e7c:	ldr	r0, [sp, #24]
   12e80:	bl	11934 <freeaddrinfo@plt>
   12e84:	mov	r0, r5
   12e88:	add	sp, sp, #1088	; 0x440
   12e8c:	add	sp, sp, #4
   12e90:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12e94:	mov	r0, r5
   12e98:	bl	142b8 <argp_parse@@Base+0xe98>
   12e9c:	ldr	r0, [sp, #20]
   12ea0:	bl	11658 <strdup@plt>
   12ea4:	mov	r5, r0
   12ea8:	b	12e7c <__assert_fail@plt+0x14f4>
   12eac:	mov	r0, r5
   12eb0:	bl	142b8 <argp_parse@@Base+0xe98>
   12eb4:	mov	r5, #0
   12eb8:	b	12dec <__assert_fail@plt+0x1464>
   12ebc:	andeq	r0, r0, r1, lsl #8
   12ec0:	ldr	r3, [r0]
   12ec4:	push	{r4, r5, r6, lr}
   12ec8:	cmp	r3, #0
   12ecc:	ldr	r5, [r0, #16]
   12ed0:	beq	12f38 <__assert_fail@plt+0x15b0>
   12ed4:	ldr	r0, [r1, #8]
   12ed8:	mov	r2, #0
   12edc:	add	r0, r0, #1
   12ee0:	str	r0, [r1, #8]
   12ee4:	b	12eec <__assert_fail@plt+0x1564>
   12ee8:	add	r2, r2, #1
   12eec:	add	r3, r3, #24
   12ef0:	ldr	r0, [r3, #-20]	; 0xffffffec
   12ef4:	cmp	r0, #0
   12ef8:	bne	12ee8 <__assert_fail@plt+0x1560>
   12efc:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12f00:	cmp	r0, #0
   12f04:	bne	12ee8 <__assert_fail@plt+0x1560>
   12f08:	ldr	r0, [r3, #-8]
   12f0c:	cmp	r0, #0
   12f10:	bne	12ee8 <__assert_fail@plt+0x1560>
   12f14:	ldr	r0, [r3, #-4]
   12f18:	cmp	r0, #0
   12f1c:	bne	12ee8 <__assert_fail@plt+0x1560>
   12f20:	ldm	r1, {r0, r3}
   12f24:	add	ip, r2, r2, lsl #1
   12f28:	add	r0, r0, ip
   12f2c:	add	r2, r3, r2
   12f30:	stm	r1, {r0, r2}
   12f34:	b	12f4c <__assert_fail@plt+0x15c4>
   12f38:	ldr	r3, [r0, #4]
   12f3c:	cmp	r3, #0
   12f40:	ldrne	r3, [r1, #8]
   12f44:	addne	r3, r3, #1
   12f48:	strne	r3, [r1, #8]
   12f4c:	cmp	r5, #0
   12f50:	popeq	{r4, r5, r6, pc}
   12f54:	ldr	r0, [r5]
   12f58:	cmp	r0, #0
   12f5c:	popeq	{r4, r5, r6, pc}
   12f60:	mov	r4, r1
   12f64:	mov	r1, r4
   12f68:	bl	12ec0 <__assert_fail@plt+0x1538>
   12f6c:	ldr	r3, [r4, #12]
   12f70:	ldr	r0, [r5, #16]!
   12f74:	add	r3, r3, #1
   12f78:	cmp	r0, #0
   12f7c:	str	r3, [r4, #12]
   12f80:	bne	12f64 <__assert_fail@plt+0x15dc>
   12f84:	pop	{r4, r5, r6, pc}
   12f88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f8c:	sub	sp, sp, #36	; 0x24
   12f90:	ldr	sl, [r0]
   12f94:	str	r0, [sp, #12]
   12f98:	cmp	sl, #0
   12f9c:	str	r1, [sp, #16]
   12fa0:	str	r2, [sp, #20]
   12fa4:	mov	r9, r3
   12fa8:	ldr	r8, [r0, #16]
   12fac:	ldr	r7, [sp, #72]	; 0x48
   12fb0:	beq	1317c <__assert_fail@plt+0x17f4>
   12fb4:	add	fp, sl, #24
   12fb8:	str	r8, [sp, #28]
   12fbc:	str	r3, [sp, #24]
   12fc0:	ldr	r4, [fp, #-20]	; 0xffffffec
   12fc4:	sub	r1, fp, #24
   12fc8:	cmp	r4, #0
   12fcc:	bne	12fdc <__assert_fail@plt+0x1654>
   12fd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12fd4:	cmp	r3, #0
   12fd8:	beq	13150 <__assert_fail@plt+0x17c8>
   12fdc:	ldr	r3, [fp, #-12]
   12fe0:	tst	r3, #4
   12fe4:	moveq	sl, r1
   12fe8:	moveq	r5, r3
   12fec:	ldrne	r5, [sl, #12]
   12ff0:	ands	r5, r5, #8
   12ff4:	bne	13138 <__assert_fail@plt+0x17b0>
   12ff8:	tst	r3, #8
   12ffc:	bne	13078 <__assert_fail@plt+0x16f0>
   13000:	sub	r3, r4, #1
   13004:	cmp	r3, #254	; 0xfe
   13008:	bhi	13078 <__assert_fail@plt+0x16f0>
   1300c:	bl	11784 <__ctype_b_loc@plt>
   13010:	lsl	r3, r4, #1
   13014:	ldr	r1, [r0]
   13018:	ldrh	r3, [r1, r3]
   1301c:	tst	r3, #16384	; 0x4000
   13020:	beq	13078 <__assert_fail@plt+0x16f0>
   13024:	ldr	r3, [r7, #4]
   13028:	add	r1, r3, #1
   1302c:	str	r1, [r7, #4]
   13030:	strb	r4, [r3]
   13034:	ldr	r3, [sl, #8]
   13038:	cmp	r3, #0
   1303c:	beq	1306c <__assert_fail@plt+0x16e4>
   13040:	ldr	r3, [r7, #4]
   13044:	mov	r2, #58	; 0x3a
   13048:	add	r1, r3, #1
   1304c:	str	r1, [r7, #4]
   13050:	strb	r2, [r3]
   13054:	ldr	r3, [sl, #12]
   13058:	tst	r3, #1
   1305c:	ldrne	r3, [r7, #4]
   13060:	addne	r1, r3, #1
   13064:	strne	r1, [r7, #4]
   13068:	strbne	r2, [r3]
   1306c:	ldr	r3, [r7, #4]
   13070:	mov	r2, #0
   13074:	strb	r2, [r3]
   13078:	ldr	r4, [fp, #-24]	; 0xffffffe8
   1307c:	cmp	r4, #0
   13080:	beq	13138 <__assert_fail@plt+0x17b0>
   13084:	ldr	r8, [r7]
   13088:	ldr	r6, [r8, #8]
   1308c:	ldr	r0, [r6]
   13090:	cmp	r0, #0
   13094:	beq	130b8 <__assert_fail@plt+0x1730>
   13098:	mov	r9, r6
   1309c:	mov	r1, r4
   130a0:	bl	11574 <strcmp@plt>
   130a4:	cmp	r0, #0
   130a8:	beq	13140 <__assert_fail@plt+0x17b8>
   130ac:	ldr	r0, [r9, #16]!
   130b0:	cmp	r0, #0
   130b4:	bne	1309c <__assert_fail@plt+0x1714>
   130b8:	ldr	r3, [sl, #8]
   130bc:	ldr	r1, [r7, #8]
   130c0:	cmp	r3, #0
   130c4:	str	r4, [r1]
   130c8:	beq	130dc <__assert_fail@plt+0x1754>
   130cc:	ldr	r3, [sl, #12]
   130d0:	tst	r3, #1
   130d4:	moveq	r5, #1
   130d8:	movne	r5, #2
   130dc:	str	r5, [r1, #4]
   130e0:	ldr	ip, [fp, #-20]	; 0xffffffec
   130e4:	mov	r3, #0
   130e8:	cmp	ip, r3
   130ec:	str	r3, [r1, #8]
   130f0:	ldr	r2, [sp, #24]
   130f4:	ldr	r3, [r8, #48]	; 0x30
   130f8:	ldreq	ip, [sl, #4]
   130fc:	sub	r3, r2, r3
   13100:	bic	ip, ip, #-16777216	; 0xff000000
   13104:	asr	r3, r3, #2
   13108:	add	lr, r1, #16
   1310c:	rsb	r0, r3, r3, lsl #3
   13110:	add	r0, r0, r0, lsl #6
   13114:	add	r0, r3, r0, lsl #3
   13118:	rsb	r0, r0, r0, lsl #15
   1311c:	add	r3, r3, r0, lsl #3
   13120:	add	r3, r3, #1
   13124:	add	r3, ip, r3, lsl #24
   13128:	str	r3, [r1, #12]
   1312c:	mov	r3, #0
   13130:	str	lr, [r7, #8]
   13134:	str	r3, [r1, #16]
   13138:	add	fp, fp, #24
   1313c:	b	12fc0 <__assert_fail@plt+0x1638>
   13140:	sub	r6, r9, r6
   13144:	cmn	r6, #15
   13148:	bge	13138 <__assert_fail@plt+0x17b0>
   1314c:	b	130b8 <__assert_fail@plt+0x1730>
   13150:	ldr	r3, [fp, #-8]
   13154:	cmp	r3, #0
   13158:	bne	12fdc <__assert_fail@plt+0x1654>
   1315c:	ldr	r3, [fp, #-4]
   13160:	cmp	r3, #0
   13164:	bne	12fdc <__assert_fail@plt+0x1654>
   13168:	ldr	r3, [sp, #12]
   1316c:	ldr	r8, [sp, #28]
   13170:	ldr	r9, [sp, #24]
   13174:	ldr	r3, [r3, #4]
   13178:	b	13194 <__assert_fail@plt+0x180c>
   1317c:	ldr	r3, [sp, #12]
   13180:	ldr	r3, [r3, #4]
   13184:	cmp	r3, #0
   13188:	moveq	r0, r9
   1318c:	moveq	r9, r3
   13190:	beq	13204 <__assert_fail@plt+0x187c>
   13194:	ldr	r2, [r7, #4]
   13198:	ldr	r1, [sp, #12]
   1319c:	str	r3, [r9]
   131a0:	cmp	r8, #0
   131a4:	stmib	r9, {r1, r2}
   131a8:	ldr	r2, [sp, #16]
   131ac:	mov	r3, #0
   131b0:	str	r2, [r9, #16]
   131b4:	ldr	r2, [sp, #20]
   131b8:	str	r3, [r9, #12]
   131bc:	str	r2, [r9, #20]
   131c0:	str	r3, [r9, #24]
   131c4:	str	r3, [r9, #32]
   131c8:	str	r3, [r9, #28]
   131cc:	beq	13200 <__assert_fail@plt+0x1878>
   131d0:	ldr	r2, [r8]
   131d4:	cmp	r2, r3
   131d8:	beq	1324c <__assert_fail@plt+0x18c4>
   131dc:	add	r3, r3, #1
   131e0:	ldr	r2, [r8, r3, lsl #4]
   131e4:	cmp	r2, #0
   131e8:	bne	131dc <__assert_fail@plt+0x1854>
   131ec:	lsl	r3, r3, #2
   131f0:	ldr	r2, [r7, #12]
   131f4:	add	r3, r2, r3
   131f8:	str	r2, [r9, #28]
   131fc:	str	r3, [r7, #12]
   13200:	add	r0, r9, #36	; 0x24
   13204:	cmp	r8, #0
   13208:	beq	13244 <__assert_fail@plt+0x18bc>
   1320c:	ldr	r1, [r8]
   13210:	cmp	r1, #0
   13214:	beq	13244 <__assert_fail@plt+0x18bc>
   13218:	mov	r2, #0
   1321c:	add	r4, r2, #1
   13220:	mov	r3, r0
   13224:	str	r7, [sp]
   13228:	mov	r0, r1
   1322c:	mov	r1, r9
   13230:	bl	12f88 <__assert_fail@plt+0x1600>
   13234:	ldr	r1, [r8, r4, lsl #4]
   13238:	mov	r2, r4
   1323c:	cmp	r1, #0
   13240:	bne	1321c <__assert_fail@plt+0x1894>
   13244:	add	sp, sp, #36	; 0x24
   13248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1324c:	mov	r3, r2
   13250:	b	131f0 <__assert_fail@plt+0x1868>
   13254:	cmp	r0, #86	; 0x56
   13258:	beq	13264 <__assert_fail@plt+0x18dc>
   1325c:	mov	r0, #7
   13260:	bx	lr
   13264:	ldr	r3, [pc, #104]	; 132d4 <__assert_fail@plt+0x194c>
   13268:	push	{r4, lr}
   1326c:	mov	r4, r2
   13270:	ldr	r3, [r3]
   13274:	cmp	r3, #0
   13278:	beq	1329c <__assert_fail@plt+0x1914>
   1327c:	mov	r1, r2
   13280:	ldr	r0, [r2, #48]	; 0x30
   13284:	blx	r3
   13288:	ldr	r0, [r4, #16]
   1328c:	ands	r0, r0, #32
   13290:	beq	132d0 <__assert_fail@plt+0x1948>
   13294:	mov	r0, #0
   13298:	pop	{r4, pc}
   1329c:	ldr	r3, [pc, #52]	; 132d8 <__assert_fail@plt+0x1950>
   132a0:	ldr	r2, [r3]
   132a4:	cmp	r2, #0
   132a8:	beq	132bc <__assert_fail@plt+0x1934>
   132ac:	ldr	r1, [pc, #40]	; 132dc <__assert_fail@plt+0x1954>
   132b0:	ldr	r0, [r4, #48]	; 0x30
   132b4:	bl	117d8 <fprintf@plt>
   132b8:	b	13288 <__assert_fail@plt+0x1900>
   132bc:	ldr	r2, [pc, #28]	; 132e0 <__assert_fail@plt+0x1958>
   132c0:	ldr	r1, [pc, #28]	; 132e4 <__assert_fail@plt+0x195c>
   132c4:	mov	r0, r4
   132c8:	bl	180d8 <argp_error@@Base>
   132cc:	b	13288 <__assert_fail@plt+0x1900>
   132d0:	bl	1179c <exit@plt>
   132d4:	andeq	fp, r2, r0, lsl #10
   132d8:	andeq	fp, r2, r4, asr #10
   132dc:	strdeq	sl, [r1], -r4
   132e0:	andeq	sl, r1, r4, asr r2
   132e4:	andeq	sl, r1, r8, ror r2
   132e8:	cmn	r0, #3
   132ec:	push	{r4, r5, lr}
   132f0:	mov	r4, r2
   132f4:	sub	sp, sp, #12
   132f8:	beq	133dc <__assert_fail@plt+0x1a54>
   132fc:	ble	1336c <__assert_fail@plt+0x19e4>
   13300:	cmn	r0, #2
   13304:	beq	1332c <__assert_fail@plt+0x19a4>
   13308:	cmp	r0, #63	; 0x3f
   1330c:	bne	133d0 <__assert_fail@plt+0x1a48>
   13310:	mov	r0, r4
   13314:	ldr	r2, [pc, #236]	; 13408 <__assert_fail@plt+0x1a80>
   13318:	ldr	r1, [r4, #48]	; 0x30
   1331c:	bl	18028 <argp_state_help@@Base>
   13320:	mov	r0, #0
   13324:	add	sp, sp, #12
   13328:	pop	{r4, r5, pc}
   1332c:	ldr	r3, [pc, #216]	; 1340c <__assert_fail@plt+0x1a84>
   13330:	mov	r0, r1
   13334:	str	r1, [sp, #4]
   13338:	str	r1, [r3]
   1333c:	bl	1420c <argp_parse@@Base+0xdec>
   13340:	ldr	r3, [r4, #16]
   13344:	ldr	r2, [pc, #196]	; 13410 <__assert_fail@plt+0x1a88>
   13348:	and	r3, r3, #3
   1334c:	cmp	r3, #1
   13350:	ldr	r1, [sp, #4]
   13354:	str	r0, [r4, #40]	; 0x28
   13358:	str	r0, [r2]
   1335c:	beq	133f8 <__assert_fail@plt+0x1a70>
   13360:	mov	r0, #0
   13364:	add	sp, sp, #12
   13368:	pop	{r4, r5, pc}
   1336c:	cmn	r0, #4
   13370:	bne	133d0 <__assert_fail@plt+0x1a48>
   13374:	cmp	r1, #0
   13378:	ldr	r0, [pc, #148]	; 13414 <__assert_fail@plt+0x1a8c>
   1337c:	mov	r2, #10
   13380:	movne	r0, r1
   13384:	mov	r1, #0
   13388:	bl	11580 <strtol@plt>
   1338c:	ldr	r4, [pc, #132]	; 13418 <__assert_fail@plt+0x1a90>
   13390:	str	r0, [r4]
   13394:	ldr	r3, [r4]
   13398:	cmp	r3, #0
   1339c:	sub	r3, r3, #1
   133a0:	str	r3, [r4]
   133a4:	ble	13360 <__assert_fail@plt+0x19d8>
   133a8:	mov	r5, #1
   133ac:	mov	r0, r5
   133b0:	bl	1164c <sleep@plt>
   133b4:	ldr	r3, [r4]
   133b8:	cmp	r3, #0
   133bc:	sub	r3, r3, #1
   133c0:	str	r3, [r4]
   133c4:	bgt	133ac <__assert_fail@plt+0x1a24>
   133c8:	mov	r0, #0
   133cc:	b	13364 <__assert_fail@plt+0x19dc>
   133d0:	mov	r0, #7
   133d4:	add	sp, sp, #12
   133d8:	pop	{r4, r5, pc}
   133dc:	mov	r0, r4
   133e0:	ldr	r2, [pc, #52]	; 1341c <__assert_fail@plt+0x1a94>
   133e4:	ldr	r1, [r4, #48]	; 0x30
   133e8:	bl	18028 <argp_state_help@@Base>
   133ec:	mov	r0, #0
   133f0:	add	sp, sp, #12
   133f4:	pop	{r4, r5, pc}
   133f8:	ldr	r3, [r4, #8]
   133fc:	mov	r0, #0
   13400:	str	r1, [r3]
   13404:	b	13324 <__assert_fail@plt+0x199c>
   13408:	andeq	r0, r0, sl, ror r2
   1340c:	andeq	fp, r2, r4, ror #9
   13410:	ldrdeq	fp, [r2], -r8
   13414:	andeq	sl, r1, ip, ror r2
   13418:	strdeq	fp, [r2], -ip
   1341c:	andeq	r0, r0, r1, lsl #4

00013420 <argp_parse@@Base>:
   13420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13424:	add	fp, sp, #32
   13428:	tst	r3, #1
   1342c:	sub	sp, sp, #228	; 0xe4
   13430:	mov	r6, r3
   13434:	mov	r7, r0
   13438:	str	r1, [fp, #-240]	; 0xffffff10
   1343c:	str	r2, [fp, #-232]	; 0xffffff18
   13440:	bne	1346c <argp_parse@@Base+0x4c>
   13444:	ldr	r3, [pc, #3260]	; 14108 <argp_parse@@Base+0xce8>
   13448:	ldr	r4, [pc, #3260]	; 1410c <argp_parse@@Base+0xcec>
   1344c:	ldr	r2, [r3]
   13450:	cmp	r2, #0
   13454:	ldreq	r2, [fp, #-232]	; 0xffffff18
   13458:	ldreq	r2, [r2]
   1345c:	streq	r2, [r3]
   13460:	ldr	r3, [r4]
   13464:	cmp	r3, #0
   13468:	beq	13b0c <argp_parse@@Base+0x6ec>
   1346c:	ands	r3, r6, #16
   13470:	beq	13a14 <argp_parse@@Base+0x5f4>
   13474:	sub	r4, fp, #196	; 0xc4
   13478:	mov	r0, r4
   1347c:	mov	r2, #36	; 0x24
   13480:	mov	r1, #0
   13484:	bl	11808 <memset@plt>
   13488:	ands	r3, r6, #4
   1348c:	str	r3, [fp, #-244]	; 0xffffff0c
   13490:	mov	r3, #0
   13494:	moveq	r0, #1
   13498:	movne	r0, #0
   1349c:	cmp	r7, r3
   134a0:	str	r3, [fp, #-224]	; 0xffffff20
   134a4:	str	r3, [fp, #-220]	; 0xffffff24
   134a8:	str	r3, [fp, #-216]	; 0xffffff28
   134ac:	str	r0, [fp, #-228]	; 0xffffff1c
   134b0:	beq	13918 <argp_parse@@Base+0x4f8>
   134b4:	mov	r0, r7
   134b8:	sub	r1, fp, #228	; 0xe4
   134bc:	bl	12ec0 <__assert_fail@plt+0x1538>
   134c0:	ldr	r5, [fp, #-220]	; 0xffffff24
   134c4:	ldr	r9, [fp, #-216]	; 0xffffff28
   134c8:	add	r5, r5, #1
   134cc:	ldr	r3, [fp, #-224]	; 0xffffff20
   134d0:	add	r5, r5, r5, lsl #3
   134d4:	lsl	r2, r9, #2
   134d8:	lsl	r5, r5, #2
   134dc:	add	r3, r3, #1
   134e0:	add	sl, r2, r5
   134e4:	ldr	r0, [fp, #-228]	; 0xffffff1c
   134e8:	add	r9, sl, r3, lsl #4
   134ec:	str	r2, [fp, #-236]	; 0xffffff14
   134f0:	add	r0, r9, r0
   134f4:	add	r0, r0, #1
   134f8:	bl	14e54 <argp_parse@@Base+0x1a34>
   134fc:	cmp	r0, #0
   13500:	mov	r8, r0
   13504:	str	r0, [fp, #-40]	; 0xffffffd8
   13508:	moveq	r5, #12
   1350c:	beq	1390c <argp_parse@@Base+0x4ec>
   13510:	mov	r3, #1
   13514:	str	r3, [fp, #-196]	; 0xffffff3c
   13518:	str	r3, [fp, #-192]	; 0xffffff40
   1351c:	ldm	r4!, {r0, r1, r2, r3}
   13520:	sub	ip, fp, #148	; 0x94
   13524:	add	r5, r8, r5
   13528:	str	r5, [fp, #-104]	; 0xffffff98
   1352c:	stmia	ip!, {r0, r1, r2, r3}
   13530:	add	r3, r8, sl
   13534:	mov	lr, r3
   13538:	ldm	r4!, {r0, r1, r2, r3}
   1353c:	add	sl, r8, r9
   13540:	str	lr, [fp, #-248]	; 0xffffff08
   13544:	str	lr, [fp, #-152]	; 0xffffff68
   13548:	ldr	lr, [r4]
   1354c:	stmia	ip!, {r0, r1, r2, r3}
   13550:	mov	r0, r5
   13554:	ldr	r2, [fp, #-236]	; 0xffffff14
   13558:	mov	r1, #0
   1355c:	str	lr, [ip]
   13560:	str	r8, [fp, #-112]	; 0xffffff90
   13564:	str	sl, [fp, #-156]	; 0xffffff64
   13568:	bl	11808 <memset@plt>
   1356c:	ldr	lr, [fp, #-248]	; 0xffffff08
   13570:	sub	r4, fp, #160	; 0xa0
   13574:	tst	r6, #8
   13578:	str	lr, [fp, #-204]	; 0xffffff34
   1357c:	str	sl, [fp, #-208]	; 0xffffff30
   13580:	str	r5, [fp, #-200]	; 0xffffff38
   13584:	str	r4, [fp, #-212]	; 0xffffff2c
   13588:	bne	1392c <argp_parse@@Base+0x50c>
   1358c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   13590:	cmp	r3, #0
   13594:	addne	r3, sl, #1
   13598:	movne	r2, #43	; 0x2b
   1359c:	strbne	r2, [sl]
   135a0:	movne	sl, r3
   135a4:	strne	r3, [fp, #-208]	; 0xffffff30
   135a8:	mov	r2, #0
   135ac:	strb	r2, [sl]
   135b0:	ldr	r3, [fp, #-204]	; 0xffffff34
   135b4:	cmp	r7, r2
   135b8:	str	r2, [r3]
   135bc:	str	r7, [fp, #-160]	; 0xffffff60
   135c0:	beq	13ad4 <argp_parse@@Base+0x6b4>
   135c4:	sub	r1, fp, #212	; 0xd4
   135c8:	mov	r0, r7
   135cc:	str	r1, [sp]
   135d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   135d4:	mov	r1, r2
   135d8:	bl	12f88 <__assert_fail@plt+0x1600>
   135dc:	ldr	r7, [fp, #-160]	; 0xffffff60
   135e0:	ldr	r5, [fp, #-112]	; 0xffffff90
   135e4:	mov	r8, r0
   135e8:	str	r0, [fp, #-108]	; 0xffffff94
   135ec:	mov	r2, #56	; 0x38
   135f0:	mov	r1, #0
   135f4:	sub	r0, fp, #96	; 0x60
   135f8:	bl	11808 <memset@plt>
   135fc:	ldr	r2, [pc, #2828]	; 14110 <argp_parse@@Base+0xcf0>
   13600:	ldr	r3, [pc, #2828]	; 14114 <argp_parse@@Base+0xcf4>
   13604:	ldr	r0, [fp, #-240]	; 0xffffff10
   13608:	ldr	r1, [r2]
   1360c:	str	r0, [fp, #-92]	; 0xffffffa4
   13610:	ldr	r2, [r3]
   13614:	ldr	r0, [fp, #-232]	; 0xffffff18
   13618:	mov	r3, #1
   1361c:	cmp	r5, r8
   13620:	str	r7, [fp, #-96]	; 0xffffffa0
   13624:	str	r0, [fp, #-88]	; 0xffffffa8
   13628:	str	r6, [fp, #-80]	; 0xffffffb0
   1362c:	str	r4, [fp, #-44]	; 0xffffffd4
   13630:	str	r1, [fp, #-52]	; 0xffffffcc
   13634:	str	r2, [fp, #-48]	; 0xffffffd0
   13638:	str	r3, [fp, #-100]	; 0xffffff9c
   1363c:	bcc	13940 <argp_parse@@Base+0x520>
   13640:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13644:	tst	r3, #2
   13648:	bne	13ae4 <argp_parse@@Base+0x6c4>
   1364c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13650:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13654:	mov	r2, #1
   13658:	str	r2, [fp, #-144]	; 0xffffff70
   1365c:	ldr	r2, [fp, #-232]	; 0xffffff18
   13660:	cmp	r2, r3
   13664:	beq	13fe4 <argp_parse@@Base+0xbc4>
   13668:	ldr	r3, [pc, #2716]	; 1410c <argp_parse@@Base+0xcec>
   1366c:	ldr	r3, [r3]
   13670:	str	r3, [fp, #-56]	; 0xffffffc8
   13674:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13678:	ldr	r5, [fp, #-84]	; 0xffffffac
   1367c:	ldr	sl, [pc, #2708]	; 14118 <argp_parse@@Base+0xcf8>
   13680:	mov	r0, r4
   13684:	mov	r6, #0
   13688:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1368c:	cmp	r3, #0
   13690:	beq	13b20 <argp_parse@@Base+0x700>
   13694:	cmp	r3, r5
   13698:	strgt	r6, [fp, #-72]	; 0xffffffb8
   1369c:	bgt	13b20 <argp_parse@@Base+0x700>
   136a0:	cmp	r5, r0
   136a4:	blt	13ebc <argp_parse@@Base+0xa9c>
   136a8:	cmp	r5, r0
   136ac:	bne	13ec8 <argp_parse@@Base+0xaa8>
   136b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   136b4:	ldr	ip, [fp, #-108]	; 0xffffff94
   136b8:	cmp	r3, ip
   136bc:	bcs	140ac <argp_parse@@Base+0xc8c>
   136c0:	mov	r5, #0
   136c4:	add	r4, r3, #36	; 0x24
   136c8:	mov	r7, r5
   136cc:	ldr	r6, [pc, #2632]	; 1411c <argp_parse@@Base+0xcfc>
   136d0:	mov	r0, r5
   136d4:	b	1371c <argp_parse@@Base+0x2fc>
   136d8:	ldr	ip, [r4, #-4]
   136dc:	str	ip, [fp, #-60]	; 0xffffffc4
   136e0:	ldr	ip, [r4, #-12]
   136e4:	str	ip, [fp, #-68]	; 0xffffffbc
   136e8:	ldr	ip, [r4, #-8]
   136ec:	str	r3, [fp, #-76]	; 0xffffffb4
   136f0:	str	ip, [fp, #-64]	; 0xffffffc0
   136f4:	blx	r5
   136f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   136fc:	str	r3, [r4, #-4]
   13700:	ldr	ip, [fp, #-108]	; 0xffffff94
   13704:	cmp	ip, r4
   13708:	bls	14054 <argp_parse@@Base+0xc34>
   1370c:	cmp	r0, #7
   13710:	cmpne	r0, #0
   13714:	bne	14030 <argp_parse@@Base+0xc10>
   13718:	add	r4, r4, #36	; 0x24
   1371c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   13720:	cmp	r3, #0
   13724:	bne	13704 <argp_parse@@Base+0x2e4>
   13728:	ldr	r5, [r4, #-36]	; 0xffffffdc
   1372c:	sub	r2, fp, #96	; 0x60
   13730:	cmp	r5, #0
   13734:	mov	r1, r7
   13738:	mov	r0, r6
   1373c:	bne	136d8 <argp_parse@@Base+0x2b8>
   13740:	cmp	ip, r4
   13744:	mov	r0, #7
   13748:	bhi	13718 <argp_parse@@Base+0x2f8>
   1374c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13750:	sub	r4, ip, #36	; 0x24
   13754:	cmp	r4, r3
   13758:	movcs	r5, #7
   1375c:	bcc	137e4 <argp_parse@@Base+0x3c4>
   13760:	cmp	r5, #7
   13764:	cmpne	r5, #0
   13768:	bne	14044 <argp_parse@@Base+0xc24>
   1376c:	sub	r4, r4, #36	; 0x24
   13770:	mov	r7, #0
   13774:	ldr	r6, [pc, #2468]	; 14120 <argp_parse@@Base+0xd00>
   13778:	b	137c4 <argp_parse@@Base+0x3a4>
   1377c:	ldr	r3, [r4, #68]	; 0x44
   13780:	ldr	ip, [r4, #48]	; 0x30
   13784:	str	r3, [fp, #-60]	; 0xffffffc4
   13788:	ldr	r3, [r4, #60]	; 0x3c
   1378c:	str	r3, [fp, #-68]	; 0xffffffbc
   13790:	ldr	r3, [r4, #64]	; 0x40
   13794:	str	ip, [fp, #-76]	; 0xffffffb4
   13798:	str	r3, [fp, #-64]	; 0xffffffc0
   1379c:	blx	r5
   137a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   137a4:	str	r3, [r4, #68]	; 0x44
   137a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   137ac:	cmp	r4, r3
   137b0:	bcc	140a4 <argp_parse@@Base+0xc84>
   137b4:	cmp	r0, #7
   137b8:	cmpne	r0, #0
   137bc:	bne	14014 <argp_parse@@Base+0xbf4>
   137c0:	sub	r4, r4, #36	; 0x24
   137c4:	ldr	r5, [r4, #36]	; 0x24
   137c8:	sub	r2, fp, #96	; 0x60
   137cc:	cmp	r5, #0
   137d0:	mov	r1, r7
   137d4:	mov	r0, r6
   137d8:	bne	1377c <argp_parse@@Base+0x35c>
   137dc:	cmp	r4, r3
   137e0:	bcs	137c0 <argp_parse@@Base+0x3a0>
   137e4:	ldr	r2, [fp, #4]
   137e8:	cmp	r2, #0
   137ec:	beq	13808 <argp_parse@@Base+0x3e8>
   137f0:	mov	r5, #0
   137f4:	ldr	r1, [fp, #4]
   137f8:	ldr	r2, [fp, #-84]	; 0xffffffac
   137fc:	str	r2, [r1]
   13800:	cmp	r5, #0
   13804:	bne	14024 <argp_parse@@Base+0xc04>
   13808:	ldr	ip, [fp, #-108]	; 0xffffff94
   1380c:	b	13ee0 <argp_parse@@Base+0xac0>
   13810:	ldr	r3, [fp, #-112]	; 0xffffff90
   13814:	mov	r5, r0
   13818:	ldr	ip, [fp, #-108]	; 0xffffff94
   1381c:	cmp	ip, r3
   13820:	bls	13fdc <argp_parse@@Base+0xbbc>
   13824:	ldr	r7, [pc, #2296]	; 14124 <argp_parse@@Base+0xd04>
   13828:	add	r4, r3, #36	; 0x24
   1382c:	mov	r8, #0
   13830:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13834:	sub	r2, fp, #96	; 0x60
   13838:	cmp	r3, #0
   1383c:	mov	r1, r8
   13840:	mov	r0, r7
   13844:	mov	r6, r4
   13848:	beq	1387c <argp_parse@@Base+0x45c>
   1384c:	ldr	ip, [r4, #-4]
   13850:	ldr	lr, [r4, #-24]	; 0xffffffe8
   13854:	str	ip, [fp, #-60]	; 0xffffffc4
   13858:	ldr	ip, [r4, #-12]
   1385c:	str	ip, [fp, #-68]	; 0xffffffbc
   13860:	ldr	ip, [r4, #-8]
   13864:	str	lr, [fp, #-76]	; 0xffffffb4
   13868:	str	ip, [fp, #-64]	; 0xffffffc0
   1386c:	blx	r3
   13870:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13874:	str	r3, [r4, #-4]
   13878:	ldr	ip, [fp, #-108]	; 0xffffff94
   1387c:	cmp	ip, r6
   13880:	add	r4, r4, #36	; 0x24
   13884:	bhi	13830 <argp_parse@@Base+0x410>
   13888:	ldr	r3, [fp, #-112]	; 0xffffff90
   1388c:	sub	ip, ip, #36	; 0x24
   13890:	cmp	r3, ip
   13894:	bhi	138fc <argp_parse@@Base+0x4dc>
   13898:	ldr	r8, [pc, #2184]	; 14128 <argp_parse@@Base+0xd08>
   1389c:	sub	r4, ip, #36	; 0x24
   138a0:	mov	r9, #0
   138a4:	ldr	r6, [r4, #36]	; 0x24
   138a8:	sub	r2, fp, #96	; 0x60
   138ac:	cmp	r6, #0
   138b0:	mov	r1, r9
   138b4:	mov	r0, r8
   138b8:	mov	r7, r4
   138bc:	beq	138f0 <argp_parse@@Base+0x4d0>
   138c0:	ldr	r3, [r4, #68]	; 0x44
   138c4:	ldr	ip, [r4, #48]	; 0x30
   138c8:	str	r3, [fp, #-60]	; 0xffffffc4
   138cc:	ldr	r3, [r4, #60]	; 0x3c
   138d0:	str	r3, [fp, #-68]	; 0xffffffbc
   138d4:	ldr	r3, [r4, #64]	; 0x40
   138d8:	str	ip, [fp, #-76]	; 0xffffffb4
   138dc:	str	r3, [fp, #-64]	; 0xffffffc0
   138e0:	blx	r6
   138e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   138e8:	str	r3, [r4, #68]	; 0x44
   138ec:	ldr	r3, [fp, #-112]	; 0xffffff90
   138f0:	cmp	r3, r7
   138f4:	sub	r4, r4, #36	; 0x24
   138f8:	bls	138a4 <argp_parse@@Base+0x484>
   138fc:	cmp	r5, #7
   13900:	moveq	r5, #22
   13904:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13908:	bl	142b8 <argp_parse@@Base+0xe98>
   1390c:	mov	r0, r5
   13910:	sub	sp, fp, #32
   13914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13918:	mov	sl, #36	; 0x24
   1391c:	mov	r5, sl
   13920:	mov	r9, #52	; 0x34
   13924:	str	r7, [fp, #-236]	; 0xffffff14
   13928:	b	134f0 <argp_parse@@Base+0xd0>
   1392c:	add	sl, sl, #1
   13930:	mov	r3, #45	; 0x2d
   13934:	str	sl, [fp, #-208]	; 0xffffff30
   13938:	strb	r3, [r8, r9]
   1393c:	b	135a8 <argp_parse@@Base+0x188>
   13940:	ldr	r3, [fp, #8]
   13944:	add	r4, r5, #36	; 0x24
   13948:	str	r3, [r5, #24]
   1394c:	mov	r7, #0
   13950:	ldr	r6, [pc, #2004]	; 1412c <argp_parse@@Base+0xd0c>
   13954:	b	139ac <argp_parse@@Base+0x58c>
   13958:	ldr	r2, [r4, #-4]
   1395c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13960:	str	r2, [fp, #-60]	; 0xffffffc4
   13964:	ldr	r1, [r4, #-12]
   13968:	sub	r2, fp, #96	; 0x60
   1396c:	str	r1, [fp, #-68]	; 0xffffffbc
   13970:	ldr	ip, [r4, #-8]
   13974:	mov	r1, r7
   13978:	str	r0, [fp, #-76]	; 0xffffffb4
   1397c:	str	ip, [fp, #-64]	; 0xffffffc0
   13980:	mov	r0, r6
   13984:	blx	r3
   13988:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1398c:	str	r3, [r4, #-4]
   13990:	ldr	r3, [fp, #-108]	; 0xffffff94
   13994:	cmp	r3, r4
   13998:	bls	140c8 <argp_parse@@Base+0xca8>
   1399c:	cmp	r0, #7
   139a0:	cmpne	r0, #0
   139a4:	bne	13ac4 <argp_parse@@Base+0x6a4>
   139a8:	add	r4, r4, #36	; 0x24
   139ac:	ldr	r3, [r4, #-20]	; 0xffffffec
   139b0:	cmp	r3, #0
   139b4:	ldrne	r3, [r3, #28]
   139b8:	ldrne	r2, [r4, #-16]
   139bc:	ldrne	r3, [r3, r2, lsl #2]
   139c0:	strne	r3, [r4, #-12]
   139c4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   139c8:	cmp	r3, #0
   139cc:	bne	13958 <argp_parse@@Base+0x538>
   139d0:	ldr	r3, [r4, #-32]	; 0xffffffe0
   139d4:	ldr	r3, [r3, #16]
   139d8:	cmp	r3, #0
   139dc:	beq	13a04 <argp_parse@@Base+0x5e4>
   139e0:	ldr	r3, [r3]
   139e4:	cmp	r3, #0
   139e8:	beq	13a04 <argp_parse@@Base+0x5e4>
   139ec:	ldr	r3, [r4, #-8]
   139f0:	ldr	r2, [r4, #-12]
   139f4:	str	r2, [r3]
   139f8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   139fc:	cmp	r3, #0
   13a00:	bne	13958 <argp_parse@@Base+0x538>
   13a04:	ldr	r3, [fp, #-108]	; 0xffffff94
   13a08:	cmp	r3, r4
   13a0c:	bhi	139a8 <argp_parse@@Base+0x588>
   13a10:	b	13640 <argp_parse@@Base+0x220>
   13a14:	sub	sp, sp, #72	; 0x48
   13a18:	add	r4, sp, #8
   13a1c:	sub	sp, sp, #40	; 0x28
   13a20:	add	r5, sp, #8
   13a24:	mov	r1, r3
   13a28:	mov	r0, r4
   13a2c:	mov	r2, #64	; 0x40
   13a30:	str	r3, [r5]
   13a34:	str	r3, [r5, #4]
   13a38:	str	r3, [r5, #8]
   13a3c:	str	r3, [r5, #12]
   13a40:	str	r3, [r5, #20]
   13a44:	str	r3, [r5, #24]
   13a48:	str	r4, [r5, #16]
   13a4c:	bl	11808 <memset@plt>
   13a50:	ldr	r3, [pc, #1752]	; 14130 <argp_parse@@Base+0xd10>
   13a54:	cmp	r7, #0
   13a58:	strne	r7, [r4]
   13a5c:	ldr	r3, [r3]
   13a60:	addne	r4, r4, #16
   13a64:	ldr	r2, [pc, #1736]	; 14134 <argp_parse@@Base+0xd14>
   13a68:	cmp	r3, #0
   13a6c:	str	r2, [r4]
   13a70:	beq	13ffc <argp_parse@@Base+0xbdc>
   13a74:	ldr	r2, [pc, #1724]	; 14138 <argp_parse@@Base+0xd18>
   13a78:	add	r3, r4, #32
   13a7c:	str	r2, [r4, #16]
   13a80:	mov	r8, #0
   13a84:	sub	r4, fp, #196	; 0xc4
   13a88:	str	r8, [r3]
   13a8c:	mov	r1, r8
   13a90:	mov	r0, r4
   13a94:	mov	r2, #36	; 0x24
   13a98:	bl	11808 <memset@plt>
   13a9c:	ands	r3, r6, #4
   13aa0:	str	r3, [fp, #-244]	; 0xffffff0c
   13aa4:	moveq	r3, #1
   13aa8:	movne	r3, r8
   13aac:	mov	r7, r5
   13ab0:	str	r8, [fp, #-224]	; 0xffffff20
   13ab4:	str	r8, [fp, #-220]	; 0xffffff24
   13ab8:	str	r8, [fp, #-216]	; 0xffffff28
   13abc:	str	r3, [fp, #-228]	; 0xffffff1c
   13ac0:	b	134b4 <argp_parse@@Base+0x94>
   13ac4:	mov	r5, r0
   13ac8:	mov	r0, r5
   13acc:	sub	sp, fp, #32
   13ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ad4:	ldr	r5, [fp, #-112]	; 0xffffff90
   13ad8:	mov	r8, r5
   13adc:	str	r5, [fp, #-108]	; 0xffffff94
   13ae0:	b	135ec <argp_parse@@Base+0x1cc>
   13ae4:	tst	r3, #1
   13ae8:	mov	r3, #0
   13aec:	str	r3, [fp, #-144]	; 0xffffff70
   13af0:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13af4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13af8:	subne	r3, r3, #4
   13afc:	addne	r4, r4, #1
   13b00:	strne	r3, [fp, #-88]	; 0xffffffa8
   13b04:	strne	r4, [fp, #-92]	; 0xffffffa4
   13b08:	b	1365c <argp_parse@@Base+0x23c>
   13b0c:	ldr	r3, [fp, #-232]	; 0xffffff18
   13b10:	ldr	r0, [r3]
   13b14:	bl	1420c <argp_parse@@Base+0xdec>
   13b18:	str	r0, [r4]
   13b1c:	b	1346c <argp_parse@@Base+0x4c>
   13b20:	cmp	r2, #0
   13b24:	beq	136a0 <argp_parse@@Base+0x280>
   13b28:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13b2c:	str	r5, [fp, #-148]	; 0xffffff6c
   13b30:	ands	ip, r3, #64	; 0x40
   13b34:	mvn	r3, #0
   13b38:	str	r3, [fp, #-140]	; 0xffffff74
   13b3c:	ldr	r2, [fp, #-156]	; 0xffffff64
   13b40:	ldr	r3, [fp, #-152]	; 0xffffff68
   13b44:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13b48:	beq	13e68 <argp_parse@@Base+0xa48>
   13b4c:	sub	ip, fp, #148	; 0x94
   13b50:	stm	sp, {r6, ip}
   13b54:	bl	1438c <argp_parse@@Base+0xf6c>
   13b58:	ldr	r5, [fp, #-148]	; 0xffffff6c
   13b5c:	str	r5, [fp, #-84]	; 0xffffffac
   13b60:	mov	r7, r0
   13b64:	cmn	r7, #1
   13b68:	beq	13e88 <argp_parse@@Base+0xa68>
   13b6c:	cmp	r7, #63	; 0x3f
   13b70:	beq	13f8c <argp_parse@@Base+0xb6c>
   13b74:	cmp	r7, #1
   13b78:	beq	13cd0 <argp_parse@@Base+0x8b0>
   13b7c:	asrs	r8, r7, #24
   13b80:	bne	13c2c <argp_parse@@Base+0x80c>
   13b84:	mov	r1, r7
   13b88:	ldr	r0, [fp, #-156]	; 0xffffff64
   13b8c:	bl	117c0 <strchr@plt>
   13b90:	cmp	r0, #0
   13b94:	beq	13c9c <argp_parse@@Base+0x87c>
   13b98:	ldr	r4, [fp, #-112]	; 0xffffff90
   13b9c:	ldr	r2, [fp, #-108]	; 0xffffff94
   13ba0:	cmp	r4, r2
   13ba4:	bcc	13bb8 <argp_parse@@Base+0x798>
   13ba8:	b	13c9c <argp_parse@@Base+0x87c>
   13bac:	add	r4, r4, #36	; 0x24
   13bb0:	cmp	r4, r2
   13bb4:	bcs	13c9c <argp_parse@@Base+0x87c>
   13bb8:	ldr	r3, [r4, #8]
   13bbc:	cmp	r0, r3
   13bc0:	bcs	13bac <argp_parse@@Base+0x78c>
   13bc4:	ldr	r3, [r4]
   13bc8:	cmp	r3, #0
   13bcc:	beq	13c9c <argp_parse@@Base+0x87c>
   13bd0:	ldr	r2, [r4, #32]
   13bd4:	ldr	r0, [r4, #28]
   13bd8:	ldr	ip, [r4, #24]
   13bdc:	str	r2, [fp, #-60]	; 0xffffffc4
   13be0:	ldr	r2, [r4, #12]
   13be4:	ldr	r1, [fp, #-136]	; 0xffffff78
   13be8:	str	r0, [fp, #-64]	; 0xffffffc0
   13bec:	str	r2, [fp, #-76]	; 0xffffffb4
   13bf0:	str	ip, [fp, #-68]	; 0xffffffbc
   13bf4:	sub	r2, fp, #96	; 0x60
   13bf8:	mov	r0, r7
   13bfc:	blx	r3
   13c00:	mov	r8, r6
   13c04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c08:	str	r3, [r4, #32]
   13c0c:	cmp	r0, #7
   13c10:	beq	13c94 <argp_parse@@Base+0x874>
   13c14:	cmp	r0, #0
   13c18:	bne	13810 <argp_parse@@Base+0x3f0>
   13c1c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13c20:	ldr	r5, [fp, #-84]	; 0xffffffac
   13c24:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13c28:	b	13688 <argp_parse@@Base+0x268>
   13c2c:	add	r3, r8, r8, lsl #3
   13c30:	ldr	r2, [fp, #-112]	; 0xffffff90
   13c34:	lsl	r3, r3, #2
   13c38:	sub	r3, r3, #36	; 0x24
   13c3c:	add	r4, r2, r3
   13c40:	ldr	r5, [r2, r3]
   13c44:	ands	r3, r7, #8388608	; 0x800000
   13c48:	movne	r3, #-16777216	; 0xff000000
   13c4c:	cmp	r5, #0
   13c50:	beq	13e20 <argp_parse@@Base+0xa00>
   13c54:	ldr	r0, [r4, #32]
   13c58:	ldr	r2, [r4, #24]
   13c5c:	str	r0, [fp, #-60]	; 0xffffffc4
   13c60:	ldr	r0, [r4, #28]
   13c64:	str	r2, [fp, #-68]	; 0xffffffbc
   13c68:	ldr	r2, [r4, #12]
   13c6c:	str	r0, [fp, #-64]	; 0xffffffc0
   13c70:	bic	r0, r7, #-16777216	; 0xff000000
   13c74:	str	r2, [fp, #-76]	; 0xffffffb4
   13c78:	orr	r0, r0, r3
   13c7c:	ldr	r1, [fp, #-136]	; 0xffffff78
   13c80:	sub	r2, fp, #96	; 0x60
   13c84:	blx	r5
   13c88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c8c:	str	r3, [r4, #32]
   13c90:	b	13c0c <argp_parse@@Base+0x7ec>
   13c94:	cmp	r8, #0
   13c98:	bne	13e20 <argp_parse@@Base+0xa00>
   13c9c:	mov	r2, r7
   13ca0:	ldr	r3, [pc, #1172]	; 1413c <argp_parse@@Base+0xd1c>
   13ca4:	ldr	r1, [pc, #1172]	; 14140 <argp_parse@@Base+0xd20>
   13ca8:	sub	r0, fp, #96	; 0x60
   13cac:	bl	180d8 <argp_error@@Base>
   13cb0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13cb4:	mov	r2, #260	; 0x104
   13cb8:	sub	r0, fp, #96	; 0x60
   13cbc:	bl	18028 <argp_state_help@@Base>
   13cc0:	mov	r5, #7
   13cc4:	ldr	r3, [fp, #-112]	; 0xffffff90
   13cc8:	ldr	ip, [fp, #-108]	; 0xffffff94
   13ccc:	b	1381c <argp_parse@@Base+0x3fc>
   13cd0:	ldr	r7, [fp, #-136]	; 0xffffff78
   13cd4:	ldr	r3, [fp, #-112]	; 0xffffff90
   13cd8:	ldr	ip, [fp, #-108]	; 0xffffff94
   13cdc:	sub	r8, r5, #1
   13ce0:	cmp	r3, ip
   13ce4:	str	r8, [fp, #-84]	; 0xffffffac
   13ce8:	bcs	13e14 <argp_parse@@Base+0x9f4>
   13cec:	mov	lr, r8
   13cf0:	add	r4, r3, #36	; 0x24
   13cf4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13cf8:	add	r5, lr, #1
   13cfc:	cmp	r3, #0
   13d00:	str	r5, [fp, #-84]	; 0xffffffac
   13d04:	sub	r2, fp, #96	; 0x60
   13d08:	mov	r1, r7
   13d0c:	mov	r0, r6
   13d10:	sub	r5, r4, #36	; 0x24
   13d14:	mov	r9, r4
   13d18:	streq	lr, [fp, #-84]	; 0xffffffac
   13d1c:	beq	13e08 <argp_parse@@Base+0x9e8>
   13d20:	ldr	ip, [r4, #-4]
   13d24:	ldr	lr, [r4, #-24]	; 0xffffffe8
   13d28:	str	ip, [fp, #-60]	; 0xffffffc4
   13d2c:	ldr	ip, [r4, #-12]
   13d30:	str	ip, [fp, #-68]	; 0xffffffbc
   13d34:	ldr	ip, [r4, #-8]
   13d38:	str	lr, [fp, #-76]	; 0xffffffb4
   13d3c:	str	ip, [fp, #-64]	; 0xffffffc0
   13d40:	blx	r3
   13d44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13d48:	str	r3, [r4, #-4]
   13d4c:	cmp	r0, #7
   13d50:	beq	13d8c <argp_parse@@Base+0x96c>
   13d54:	cmp	r0, #0
   13d58:	bne	13810 <argp_parse@@Base+0x3f0>
   13d5c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13d60:	ldr	r5, [fp, #-84]	; 0xffffffac
   13d64:	cmp	r8, r5
   13d68:	sublt	r8, r5, r8
   13d6c:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   13d70:	movge	r3, #1
   13d74:	addlt	r8, r3, r8
   13d78:	strlt	r8, [r4, #-24]	; 0xffffffe8
   13d7c:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   13d80:	strge	r3, [fp, #-100]	; 0xffffff9c
   13d84:	movge	r2, r3
   13d88:	b	13688 <argp_parse@@Base+0x268>
   13d8c:	ldr	lr, [fp, #-84]	; 0xffffffac
   13d90:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13d94:	sub	lr, lr, #1
   13d98:	cmp	r3, #0
   13d9c:	str	lr, [fp, #-84]	; 0xffffffac
   13da0:	beq	13e04 <argp_parse@@Base+0x9e4>
   13da4:	add	r0, r5, #24
   13da8:	ldr	r2, [r5, #12]
   13dac:	ldm	r0, {r0, r1, ip}
   13db0:	str	r2, [fp, #-76]	; 0xffffffb4
   13db4:	sub	r2, fp, #96	; 0x60
   13db8:	str	ip, [fp, #-60]	; 0xffffffc4
   13dbc:	str	r0, [fp, #-68]	; 0xffffffbc
   13dc0:	str	r1, [fp, #-64]	; 0xffffffc0
   13dc4:	mov	r0, sl
   13dc8:	mov	r1, r6
   13dcc:	blx	r3
   13dd0:	ldr	ip, [fp, #-108]	; 0xffffff94
   13dd4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13dd8:	cmp	r4, ip
   13ddc:	movcs	r1, #0
   13de0:	movcc	r1, #1
   13de4:	mov	r3, r4
   13de8:	str	r2, [r5, #32]
   13dec:	cmp	r0, #7
   13df0:	movne	r1, #0
   13df4:	cmp	r1, #0
   13df8:	beq	140e0 <argp_parse@@Base+0xcc0>
   13dfc:	ldr	lr, [fp, #-84]	; 0xffffffac
   13e00:	b	13cf0 <argp_parse@@Base+0x8d0>
   13e04:	ldr	ip, [fp, #-108]	; 0xffffff94
   13e08:	cmp	r9, ip
   13e0c:	add	r4, r4, #36	; 0x24
   13e10:	bcc	13cf4 <argp_parse@@Base+0x8d4>
   13e14:	ldr	r5, [fp, #-84]	; 0xffffffac
   13e18:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13e1c:	b	136a8 <argp_parse@@Base+0x288>
   13e20:	ldr	r3, [fp, #-152]	; 0xffffff68
   13e24:	ldr	r2, [r3, #12]
   13e28:	cmp	r2, r7
   13e2c:	bne	13e44 <argp_parse@@Base+0xa24>
   13e30:	b	13f78 <argp_parse@@Base+0xb58>
   13e34:	add	r3, r3, #16
   13e38:	ldr	r2, [r3, #12]
   13e3c:	cmp	r2, r7
   13e40:	beq	13f78 <argp_parse@@Base+0xb58>
   13e44:	ldr	r2, [r3]
   13e48:	cmp	r2, #0
   13e4c:	bne	13e34 <argp_parse@@Base+0xa14>
   13e50:	ldr	r2, [pc, #748]	; 14144 <argp_parse@@Base+0xd24>
   13e54:	ldr	r3, [pc, #736]	; 1413c <argp_parse@@Base+0xd1c>
   13e58:	ldr	r1, [pc, #744]	; 14148 <argp_parse@@Base+0xd28>
   13e5c:	sub	r0, fp, #96	; 0x60
   13e60:	bl	180d8 <argp_error@@Base>
   13e64:	b	13cb0 <argp_parse@@Base+0x890>
   13e68:	sub	lr, fp, #148	; 0x94
   13e6c:	stm	sp, {ip, lr}
   13e70:	bl	14338 <argp_parse@@Base+0xf18>
   13e74:	ldr	r5, [fp, #-148]	; 0xffffff6c
   13e78:	str	r5, [fp, #-84]	; 0xffffffac
   13e7c:	mov	r7, r0
   13e80:	cmn	r7, #1
   13e84:	bne	13b6c <argp_parse@@Base+0x74c>
   13e88:	cmp	r5, #1
   13e8c:	str	r6, [fp, #-100]	; 0xffffff9c
   13e90:	ble	13eb0 <argp_parse@@Base+0xa90>
   13e94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13e98:	sub	r3, r5, #-1073741823	; 0xc0000001
   13e9c:	ldr	r1, [pc, #680]	; 1414c <argp_parse@@Base+0xd2c>
   13ea0:	ldr	r0, [r2, r3, lsl #2]
   13ea4:	bl	11574 <strcmp@plt>
   13ea8:	cmp	r0, #0
   13eac:	streq	r5, [fp, #-72]	; 0xffffffb8
   13eb0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13eb4:	cmp	r5, r0
   13eb8:	bge	136a8 <argp_parse@@Base+0x288>
   13ebc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13ec0:	tst	r3, #4
   13ec4:	beq	13f9c <argp_parse@@Base+0xb7c>
   13ec8:	ldr	r3, [fp, #4]
   13ecc:	cmp	r3, #0
   13ed0:	beq	14074 <argp_parse@@Base+0xc54>
   13ed4:	str	r5, [r3]
   13ed8:	ldr	ip, [fp, #-108]	; 0xffffff94
   13edc:	ldr	r3, [fp, #-112]	; 0xffffff90
   13ee0:	sub	r2, ip, #36	; 0x24
   13ee4:	cmp	r3, r2
   13ee8:	bhi	13fd0 <argp_parse@@Base+0xbb0>
   13eec:	ldr	r6, [pc, #604]	; 14150 <argp_parse@@Base+0xd30>
   13ef0:	sub	r4, ip, #72	; 0x48
   13ef4:	mov	r7, #0
   13ef8:	ldr	r5, [r4, #36]	; 0x24
   13efc:	sub	r2, fp, #96	; 0x60
   13f00:	cmp	r5, #0
   13f04:	mov	r1, r7
   13f08:	mov	r0, r6
   13f0c:	beq	13f68 <argp_parse@@Base+0xb48>
   13f10:	ldr	r3, [r4, #68]	; 0x44
   13f14:	ldr	ip, [r4, #48]	; 0x30
   13f18:	str	r3, [fp, #-60]	; 0xffffffc4
   13f1c:	ldr	r3, [r4, #60]	; 0x3c
   13f20:	str	r3, [fp, #-68]	; 0xffffffbc
   13f24:	ldr	r3, [r4, #64]	; 0x40
   13f28:	str	ip, [fp, #-76]	; 0xffffffb4
   13f2c:	str	r3, [fp, #-64]	; 0xffffffc0
   13f30:	blx	r5
   13f34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13f38:	str	r3, [r4, #68]	; 0x44
   13f3c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13f40:	cmp	r4, r3
   13f44:	bcc	13fb0 <argp_parse@@Base+0xb90>
   13f48:	cmp	r0, #7
   13f4c:	cmpne	r0, #0
   13f50:	sub	r4, r4, #36	; 0x24
   13f54:	beq	13ef8 <argp_parse@@Base+0xad8>
   13f58:	ldr	ip, [fp, #-108]	; 0xffffff94
   13f5c:	mov	r5, r0
   13f60:	sub	ip, ip, #36	; 0x24
   13f64:	b	13890 <argp_parse@@Base+0x470>
   13f68:	cmp	r4, r3
   13f6c:	bcc	13fbc <argp_parse@@Base+0xb9c>
   13f70:	sub	r4, r4, #36	; 0x24
   13f74:	b	13ef8 <argp_parse@@Base+0xad8>
   13f78:	ldr	r2, [r3]
   13f7c:	ldr	r3, [pc, #448]	; 14144 <argp_parse@@Base+0xd24>
   13f80:	cmp	r2, #0
   13f84:	moveq	r2, r3
   13f88:	b	13e54 <argp_parse@@Base+0xa34>
   13f8c:	ldr	r3, [fp, #-140]	; 0xffffff74
   13f90:	cmn	r3, #1
   13f94:	bne	13cb0 <argp_parse@@Base+0x890>
   13f98:	b	13b84 <argp_parse@@Base+0x764>
   13f9c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13fa0:	ldr	r7, [r3, r5, lsl #2]
   13fa4:	add	r5, r5, #1
   13fa8:	str	r7, [fp, #-136]	; 0xffffff78
   13fac:	b	13cd4 <argp_parse@@Base+0x8b4>
   13fb0:	cmp	r0, #7
   13fb4:	mov	r5, r0
   13fb8:	bne	13fd8 <argp_parse@@Base+0xbb8>
   13fbc:	ldr	ip, [fp, #-108]	; 0xffffff94
   13fc0:	sub	ip, ip, #36	; 0x24
   13fc4:	cmp	ip, r3
   13fc8:	movcs	r5, #0
   13fcc:	bcs	13898 <argp_parse@@Base+0x478>
   13fd0:	mov	r5, #0
   13fd4:	b	13904 <argp_parse@@Base+0x4e4>
   13fd8:	ldr	ip, [fp, #-108]	; 0xffffff94
   13fdc:	sub	ip, ip, #36	; 0x24
   13fe0:	b	13890 <argp_parse@@Base+0x470>
   13fe4:	ldr	r0, [r2]
   13fe8:	cmp	r0, #0
   13fec:	beq	13668 <argp_parse@@Base+0x248>
   13ff0:	bl	1420c <argp_parse@@Base+0xdec>
   13ff4:	str	r0, [fp, #-56]	; 0xffffffc8
   13ff8:	b	13674 <argp_parse@@Base+0x254>
   13ffc:	ldr	r3, [pc, #336]	; 14154 <argp_parse@@Base+0xd34>
   14000:	ldr	r3, [r3]
   14004:	cmp	r3, #0
   14008:	addeq	r3, r4, #16
   1400c:	bne	13a74 <argp_parse@@Base+0x654>
   14010:	b	13a80 <argp_parse@@Base+0x660>
   14014:	mov	r5, r0
   14018:	ldr	r2, [fp, #4]
   1401c:	cmp	r2, #0
   14020:	bne	137f4 <argp_parse@@Base+0x3d4>
   14024:	cmp	r5, #7
   14028:	bne	13818 <argp_parse@@Base+0x3f8>
   1402c:	b	13cb0 <argp_parse@@Base+0x890>
   14030:	ldr	r3, [fp, #-112]	; 0xffffff90
   14034:	sub	ip, ip, #36	; 0x24
   14038:	cmp	r3, ip
   1403c:	mov	r5, r0
   14040:	bls	14018 <argp_parse@@Base+0xbf8>
   14044:	ldr	r2, [fp, #4]
   14048:	cmp	r2, #0
   1404c:	bne	137f4 <argp_parse@@Base+0x3d4>
   14050:	b	13800 <argp_parse@@Base+0x3e0>
   14054:	ldr	r3, [fp, #-112]	; 0xffffff90
   14058:	sub	r4, ip, #36	; 0x24
   1405c:	cmp	r4, r3
   14060:	mov	r5, r0
   14064:	bcs	13760 <argp_parse@@Base+0x340>
   14068:	cmp	r5, #7
   1406c:	beq	137e4 <argp_parse@@Base+0x3c4>
   14070:	b	14044 <argp_parse@@Base+0xc24>
   14074:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14078:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1407c:	tst	r3, #2
   14080:	bne	13cb4 <argp_parse@@Base+0x894>
   14084:	cmp	r1, #0
   14088:	beq	13cb4 <argp_parse@@Base+0x894>
   1408c:	mov	r0, r1
   14090:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14094:	ldr	r1, [pc, #188]	; 14158 <argp_parse@@Base+0xd38>
   14098:	bl	117d8 <fprintf@plt>
   1409c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   140a0:	b	13cb4 <argp_parse@@Base+0x894>
   140a4:	mov	r5, r0
   140a8:	b	14068 <argp_parse@@Base+0xc48>
   140ac:	sub	r4, ip, #36	; 0x24
   140b0:	cmp	r3, r4
   140b4:	bls	1376c <argp_parse@@Base+0x34c>
   140b8:	ldr	r2, [fp, #4]
   140bc:	cmp	r2, #0
   140c0:	bne	137f0 <argp_parse@@Base+0x3d0>
   140c4:	b	13ee0 <argp_parse@@Base+0xac0>
   140c8:	cmp	r0, #7
   140cc:	mov	r5, r0
   140d0:	beq	13640 <argp_parse@@Base+0x220>
   140d4:	cmp	r0, #0
   140d8:	beq	13640 <argp_parse@@Base+0x220>
   140dc:	b	1390c <argp_parse@@Base+0x4ec>
   140e0:	cmp	r0, #0
   140e4:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   140e8:	moveq	r5, r0
   140ec:	streq	r0, [fp, #-84]	; 0xffffffac
   140f0:	beq	13d64 <argp_parse@@Base+0x944>
   140f4:	cmp	r0, #7
   140f8:	mov	r5, r0
   140fc:	beq	13e14 <argp_parse@@Base+0x9f4>
   14100:	ldr	r3, [fp, #-112]	; 0xffffff90
   14104:	b	1381c <argp_parse@@Base+0x3fc>
   14108:	andeq	fp, r2, r4, ror #9
   1410c:	ldrdeq	fp, [r2], -r8
   14110:	andeq	fp, r2, r8, ror #9
   14114:	andeq	fp, r2, ip, ror #9
   14118:	tsteq	r0, r6
   1411c:	tsteq	r0, r2
   14120:	tsteq	r0, r1
   14124:	tsteq	r0, r5
   14128:	tsteq	r0, r7
   1412c:	tsteq	r0, r3
   14130:	andeq	fp, r2, r4, asr #10
   14134:	andeq	sl, r1, ip, lsr r1
   14138:	andeq	sl, r1, r8, asr r1
   1413c:	andeq	sl, r1, r4, ror r1
   14140:	andeq	sl, r1, ip, lsl #5
   14144:	andeq	sl, r1, r4, lsl #5
   14148:	muleq	r1, r4, r2
   1414c:	andeq	sl, r1, r8, lsl #5
   14150:	tsteq	r0, r4
   14154:	andeq	fp, r2, r0, lsl #10
   14158:	andeq	sl, r1, r0, lsr #5
   1415c:	cmp	r1, #0
   14160:	beq	141a0 <argp_parse@@Base+0xd80>
   14164:	ldr	r2, [r1, #52]	; 0x34
   14168:	ldr	r3, [r2, #48]	; 0x30
   1416c:	ldr	r1, [r2, #52]	; 0x34
   14170:	cmp	r3, r1
   14174:	bcs	141a0 <argp_parse@@Base+0xd80>
   14178:	ldr	r2, [r3, #4]
   1417c:	cmp	r0, r2
   14180:	bne	14194 <argp_parse@@Base+0xd74>
   14184:	b	141a8 <argp_parse@@Base+0xd88>
   14188:	ldr	r2, [r3, #4]
   1418c:	cmp	r2, r0
   14190:	beq	141a8 <argp_parse@@Base+0xd88>
   14194:	add	r3, r3, #36	; 0x24
   14198:	cmp	r3, r1
   1419c:	bcc	14188 <argp_parse@@Base+0xd68>
   141a0:	mov	r0, #0
   141a4:	bx	lr
   141a8:	ldr	r0, [r3, #24]
   141ac:	bx	lr
   141b0:	ldr	ip, [pc, #32]	; 141d8 <argp_parse@@Base+0xdb8>
   141b4:	push	{lr}		; (str lr, [sp, #-4]!)
   141b8:	sub	sp, sp, #12
   141bc:	ldm	ip, {r1, ip}
   141c0:	ldr	r3, [pc, #20]	; 141dc <argp_parse@@Base+0xdbc>
   141c4:	ldr	r2, [pc, #20]	; 141e0 <argp_parse@@Base+0xdc0>
   141c8:	str	ip, [sp]
   141cc:	bl	1474c <argp_parse@@Base+0x132c>
   141d0:	add	sp, sp, #12
   141d4:	pop	{pc}		; (ldr pc, [sp], #4)
   141d8:	andeq	fp, r2, r4, lsl #10
   141dc:	andeq	sl, r1, r8, lsl #7
   141e0:	muleq	r1, r8, r3
   141e4:	ldr	r3, [pc, #20]	; 14200 <argp_parse@@Base+0xde0>
   141e8:	ldr	r2, [pc, #20]	; 14204 <argp_parse@@Base+0xde4>
   141ec:	ldr	ip, [pc, #20]	; 14208 <argp_parse@@Base+0xde8>
   141f0:	str	r0, [r3]
   141f4:	str	ip, [r2]
   141f8:	str	r1, [r3, #4]
   141fc:	bx	lr
   14200:	andeq	fp, r2, r4, lsl #10
   14204:	andeq	fp, r2, r0, lsl #10
   14208:			; <UNDEFINED> instruction: 0x000141b0
   1420c:	ldrb	r3, [r0]
   14210:	cmp	r3, #47	; 0x2f
   14214:	bne	14224 <argp_parse@@Base+0xe04>
   14218:	ldrb	r3, [r0, #1]!
   1421c:	cmp	r3, #47	; 0x2f
   14220:	beq	14218 <argp_parse@@Base+0xdf8>
   14224:	cmp	r3, #0
   14228:	bxeq	lr
   1422c:	mov	r2, #0
   14230:	push	{lr}		; (str lr, [sp, #-4]!)
   14234:	mov	ip, r2
   14238:	mov	r1, r0
   1423c:	mov	lr, #1
   14240:	cmp	r3, #47	; 0x2f
   14244:	moveq	r2, lr
   14248:	beq	14258 <argp_parse@@Base+0xe38>
   1424c:	cmp	r2, #0
   14250:	movne	r0, r1
   14254:	movne	r2, ip
   14258:	ldrb	r3, [r1, #1]!
   1425c:	cmp	r3, #0
   14260:	bne	14240 <argp_parse@@Base+0xe20>
   14264:	pop	{pc}		; (ldr pc, [sp], #4)
   14268:	push	{r4, lr}
   1426c:	mov	r4, r0
   14270:	bl	117b4 <strlen@plt>
   14274:	cmp	r0, #1
   14278:	popls	{r4, pc}
   1427c:	sub	r3, r0, #1
   14280:	add	r2, r4, r3
   14284:	ldrb	r1, [r4, r3]
   14288:	cmp	r1, #47	; 0x2f
   1428c:	popne	{r4, pc}
   14290:	cmp	r3, #1
   14294:	beq	142a8 <argp_parse@@Base+0xe88>
   14298:	ldrb	r1, [r2, #-1]!
   1429c:	sub	r0, r3, #1
   142a0:	cmp	r1, #47	; 0x2f
   142a4:	beq	142b0 <argp_parse@@Base+0xe90>
   142a8:	mov	r0, r3
   142ac:	pop	{r4, pc}
   142b0:	mov	r3, r0
   142b4:	b	14290 <argp_parse@@Base+0xe70>
   142b8:	push	{r4, r5, lr}
   142bc:	sub	sp, sp, #12
   142c0:	mov	r5, r0
   142c4:	bl	117f0 <__errno_location@plt>
   142c8:	mov	r2, #0
   142cc:	mov	r4, r0
   142d0:	ldr	r3, [r0]
   142d4:	str	r2, [r4]
   142d8:	mov	r0, r5
   142dc:	str	r3, [sp]
   142e0:	str	r3, [sp, #4]
   142e4:	bl	115e0 <free@plt>
   142e8:	ldr	r3, [r4]
   142ec:	add	r2, sp, #8
   142f0:	cmp	r3, #0
   142f4:	moveq	r3, #4
   142f8:	movne	r3, #0
   142fc:	add	r3, r2, r3
   14300:	ldr	r3, [r3, #-8]
   14304:	str	r3, [r4]
   14308:	add	sp, sp, #12
   1430c:	pop	{r4, r5, pc}
   14310:	push	{lr}		; (str lr, [sp, #-4]!)
   14314:	sub	sp, sp, #20
   14318:	mov	ip, #0
   1431c:	ldr	lr, [sp, #24]
   14320:	str	ip, [sp, #8]
   14324:	str	lr, [sp]
   14328:	str	ip, [sp, #4]
   1432c:	bl	18d7c <argp_error@@Base+0xca4>
   14330:	add	sp, sp, #20
   14334:	pop	{pc}		; (ldr pc, [sp], #4)
   14338:	push	{r4, lr}
   1433c:	sub	sp, sp, #16
   14340:	mov	ip, #0
   14344:	ldr	r4, [sp, #24]
   14348:	ldr	lr, [sp, #28]
   1434c:	str	r4, [sp]
   14350:	str	lr, [sp, #8]
   14354:	str	ip, [sp, #12]
   14358:	str	ip, [sp, #4]
   1435c:	bl	1881c <argp_error@@Base+0x744>
   14360:	add	sp, sp, #16
   14364:	pop	{r4, pc}
   14368:	push	{r4, lr}
   1436c:	sub	sp, sp, #16
   14370:	mov	lr, #0
   14374:	ldr	r4, [sp, #24]
   14378:	mov	ip, #1
   1437c:	stm	sp, {r4, ip, lr}
   14380:	bl	18d7c <argp_error@@Base+0xca4>
   14384:	add	sp, sp, #16
   14388:	pop	{r4, pc}
   1438c:	push	{r4, r5, lr}
   14390:	sub	sp, sp, #20
   14394:	mov	lr, #0
   14398:	ldr	r5, [sp, #32]
   1439c:	ldr	r4, [sp, #36]	; 0x24
   143a0:	mov	ip, #1
   143a4:	str	r5, [sp]
   143a8:	str	r4, [sp, #8]
   143ac:	str	lr, [sp, #12]
   143b0:	str	ip, [sp, #4]
   143b4:	bl	1881c <argp_error@@Base+0x744>
   143b8:	add	sp, sp, #20
   143bc:	pop	{r4, r5, pc}
   143c0:	push	{r1, r2, r3}
   143c4:	push	{lr}		; (str lr, [sp, #-4]!)
   143c8:	sub	sp, sp, #8
   143cc:	add	r3, sp, #16
   143d0:	ldr	r2, [sp, #16]
   143d4:	ldr	r1, [sp, #12]
   143d8:	str	r3, [sp, #4]
   143dc:	bl	116f4 <ioctl@plt>
   143e0:	add	sp, sp, #8
   143e4:	pop	{lr}		; (ldr lr, [sp], #4)
   143e8:	add	sp, sp, #12
   143ec:	bx	lr
   143f0:	push	{r4, r5, r6, lr}
   143f4:	subs	r4, r0, #0
   143f8:	beq	1446c <argp_parse@@Base+0x104c>
   143fc:	mov	r1, #47	; 0x2f
   14400:	bl	118a4 <strrchr@plt>
   14404:	subs	r5, r0, #0
   14408:	beq	14458 <argp_parse@@Base+0x1038>
   1440c:	add	r6, r5, #1
   14410:	sub	r3, r6, r4
   14414:	cmp	r3, #6
   14418:	ble	14458 <argp_parse@@Base+0x1038>
   1441c:	mov	r2, #7
   14420:	ldr	r1, [pc, #96]	; 14488 <argp_parse@@Base+0x1068>
   14424:	sub	r0, r5, #6
   14428:	bl	11958 <strncmp@plt>
   1442c:	cmp	r0, #0
   14430:	bne	14458 <argp_parse@@Base+0x1038>
   14434:	mov	r2, #3
   14438:	ldr	r1, [pc, #76]	; 1448c <argp_parse@@Base+0x106c>
   1443c:	mov	r0, r6
   14440:	bl	11958 <strncmp@plt>
   14444:	cmp	r0, #0
   14448:	movne	r4, r6
   1444c:	ldreq	r3, [pc, #60]	; 14490 <argp_parse@@Base+0x1070>
   14450:	addeq	r4, r5, #4
   14454:	streq	r4, [r3]
   14458:	ldr	r2, [pc, #52]	; 14494 <argp_parse@@Base+0x1074>
   1445c:	ldr	r3, [pc, #52]	; 14498 <argp_parse@@Base+0x1078>
   14460:	str	r4, [r2]
   14464:	str	r4, [r3]
   14468:	pop	{r4, r5, r6, pc}
   1446c:	ldr	r3, [pc, #40]	; 1449c <argp_parse@@Base+0x107c>
   14470:	mov	r2, #55	; 0x37
   14474:	mov	r1, #1
   14478:	ldr	r3, [r3]
   1447c:	ldr	r0, [pc, #28]	; 144a0 <argp_parse@@Base+0x1080>
   14480:	bl	116dc <fwrite@plt>
   14484:	bl	11964 <abort@plt>
   14488:	andeq	sl, r1, r0, ror #7
   1448c:	andeq	sl, r1, r8, ror #7
   14490:	ldrdeq	fp, [r2], -r8
   14494:	andeq	fp, r2, ip, lsl #10
   14498:	andeq	fp, r2, r4, ror #9
   1449c:	andeq	fp, r2, r8, ror #9
   144a0:	andeq	sl, r1, r8, lsr #7
   144a4:	push	{r4, r5, r6, r7, lr}
   144a8:	sub	sp, sp, #36	; 0x24
   144ac:	cmp	r1, #0
   144b0:	mov	r4, r0
   144b4:	ldr	r5, [sp, #56]	; 0x38
   144b8:	ldr	r6, [sp, #60]	; 0x3c
   144bc:	beq	146fc <argp_parse@@Base+0x12dc>
   144c0:	str	r3, [sp]
   144c4:	mov	r3, r2
   144c8:	mov	r2, r1
   144cc:	ldr	r1, [pc, #564]	; 14708 <argp_parse@@Base+0x12e8>
   144d0:	bl	117d8 <fprintf@plt>
   144d4:	ldr	r3, [pc, #560]	; 1470c <argp_parse@@Base+0x12ec>
   144d8:	ldr	r2, [pc, #560]	; 14710 <argp_parse@@Base+0x12f0>
   144dc:	ldr	r1, [pc, #560]	; 14714 <argp_parse@@Base+0x12f4>
   144e0:	mov	r0, r4
   144e4:	bl	117d8 <fprintf@plt>
   144e8:	mov	r1, r4
   144ec:	mov	r0, #10
   144f0:	bl	118bc <fputc@plt>
   144f4:	ldr	r1, [pc, #540]	; 14718 <argp_parse@@Base+0x12f8>
   144f8:	ldr	r2, [pc, #540]	; 1471c <argp_parse@@Base+0x12fc>
   144fc:	mov	r0, r4
   14500:	bl	117d8 <fprintf@plt>
   14504:	mov	r1, r4
   14508:	mov	r0, #10
   1450c:	bl	118bc <fputc@plt>
   14510:	cmp	r6, #9
   14514:	ldrls	pc, [pc, r6, lsl #2]
   14518:	b	14544 <argp_parse@@Base+0x1124>
   1451c:	andeq	r4, r1, r4, lsl #11
   14520:	ldrdeq	r4, [r1], -r0
   14524:	andeq	r4, r1, r8, ror #11
   14528:	andeq	r4, r1, r0, lsl #12
   1452c:	andeq	r4, r1, r0, lsr #12
   14530:	andeq	r4, r1, r8, asr #12
   14534:	andeq	r4, r1, r8, ror #12
   14538:	muleq	r1, r0, r6
   1453c:	andeq	r4, r1, r0, asr #13
   14540:	andeq	r4, r1, ip, lsl #11
   14544:	ldr	ip, [r5, #32]
   14548:	ldr	r1, [r5, #28]
   1454c:	ldm	r5, {r2, r3}
   14550:	ldr	r7, [r5, #24]
   14554:	ldr	r6, [r5, #20]
   14558:	str	ip, [sp, #24]
   1455c:	ldr	lr, [r5, #16]
   14560:	str	r1, [sp, #20]
   14564:	ldr	r1, [r5, #8]
   14568:	ldr	ip, [r5, #12]
   1456c:	mov	r0, r4
   14570:	str	r7, [sp, #16]
   14574:	stm	sp, {r1, ip, lr}
   14578:	str	r6, [sp, #12]
   1457c:	ldr	r1, [pc, #412]	; 14720 <argp_parse@@Base+0x1300>
   14580:	bl	117d8 <fprintf@plt>
   14584:	add	sp, sp, #36	; 0x24
   14588:	pop	{r4, r5, r6, r7, pc}
   1458c:	ldr	ip, [r5, #32]
   14590:	ldr	r1, [r5, #28]
   14594:	ldm	r5, {r2, r3}
   14598:	ldr	r7, [r5, #24]
   1459c:	ldr	r6, [r5, #20]
   145a0:	str	ip, [sp, #24]
   145a4:	ldr	lr, [r5, #16]
   145a8:	str	r1, [sp, #20]
   145ac:	ldr	r1, [r5, #8]
   145b0:	ldr	ip, [r5, #12]
   145b4:	mov	r0, r4
   145b8:	str	r7, [sp, #16]
   145bc:	stm	sp, {r1, ip, lr}
   145c0:	str	r6, [sp, #12]
   145c4:	ldr	r1, [pc, #344]	; 14724 <argp_parse@@Base+0x1304>
   145c8:	bl	117d8 <fprintf@plt>
   145cc:	b	14584 <argp_parse@@Base+0x1164>
   145d0:	ldr	r2, [r5]
   145d4:	mov	r0, r4
   145d8:	ldr	r1, [pc, #328]	; 14728 <argp_parse@@Base+0x1308>
   145dc:	add	sp, sp, #36	; 0x24
   145e0:	pop	{r4, r5, r6, r7, lr}
   145e4:	b	117d8 <fprintf@plt>
   145e8:	mov	r0, r4
   145ec:	ldm	r5, {r2, r3}
   145f0:	ldr	r1, [pc, #308]	; 1472c <argp_parse@@Base+0x130c>
   145f4:	add	sp, sp, #36	; 0x24
   145f8:	pop	{r4, r5, r6, r7, lr}
   145fc:	b	117d8 <fprintf@plt>
   14600:	ldr	r1, [r5, #8]
   14604:	ldm	r5, {r2, r3}
   14608:	mov	r0, r4
   1460c:	str	r1, [sp, #56]	; 0x38
   14610:	ldr	r1, [pc, #280]	; 14730 <argp_parse@@Base+0x1310>
   14614:	add	sp, sp, #36	; 0x24
   14618:	pop	{r4, r5, r6, r7, lr}
   1461c:	b	117d8 <fprintf@plt>
   14620:	ldr	r1, [r5, #8]
   14624:	ldr	ip, [r5, #12]
   14628:	ldm	r5, {r2, r3}
   1462c:	mov	r0, r4
   14630:	str	r1, [sp, #56]	; 0x38
   14634:	str	ip, [sp, #60]	; 0x3c
   14638:	ldr	r1, [pc, #244]	; 14734 <argp_parse@@Base+0x1314>
   1463c:	add	sp, sp, #36	; 0x24
   14640:	pop	{r4, r5, r6, r7, lr}
   14644:	b	117d8 <fprintf@plt>
   14648:	add	r1, r5, #8
   1464c:	ldm	r5, {r2, r3}
   14650:	ldm	r1, {r1, ip, lr}
   14654:	mov	r0, r4
   14658:	stm	sp, {r1, ip, lr}
   1465c:	ldr	r1, [pc, #212]	; 14738 <argp_parse@@Base+0x1318>
   14660:	bl	117d8 <fprintf@plt>
   14664:	b	14584 <argp_parse@@Base+0x1164>
   14668:	add	r1, r5, #8
   1466c:	ldr	r6, [r5, #20]
   14670:	ldm	r1, {r1, ip, lr}
   14674:	mov	r0, r4
   14678:	ldm	r5, {r2, r3}
   1467c:	str	r6, [sp, #12]
   14680:	stm	sp, {r1, ip, lr}
   14684:	ldr	r1, [pc, #176]	; 1473c <argp_parse@@Base+0x131c>
   14688:	bl	117d8 <fprintf@plt>
   1468c:	b	14584 <argp_parse@@Base+0x1164>
   14690:	add	r1, r5, #8
   14694:	ldr	r7, [r5, #24]
   14698:	ldm	r1, {r1, ip, lr}
   1469c:	mov	r0, r4
   146a0:	ldr	r6, [r5, #20]
   146a4:	ldm	r5, {r2, r3}
   146a8:	stm	sp, {r1, ip, lr}
   146ac:	str	r7, [sp, #16]
   146b0:	str	r6, [sp, #12]
   146b4:	ldr	r1, [pc, #132]	; 14740 <argp_parse@@Base+0x1320>
   146b8:	bl	117d8 <fprintf@plt>
   146bc:	b	14584 <argp_parse@@Base+0x1164>
   146c0:	ldr	r1, [r5, #28]
   146c4:	ldm	r5, {r2, r3}
   146c8:	ldr	r7, [r5, #24]
   146cc:	ldr	r6, [r5, #20]
   146d0:	ldr	lr, [r5, #16]
   146d4:	str	r1, [sp, #20]
   146d8:	ldr	r1, [r5, #8]
   146dc:	ldr	ip, [r5, #12]
   146e0:	mov	r0, r4
   146e4:	str	r7, [sp, #16]
   146e8:	stm	sp, {r1, ip, lr}
   146ec:	str	r6, [sp, #12]
   146f0:	ldr	r1, [pc, #76]	; 14744 <argp_parse@@Base+0x1324>
   146f4:	bl	117d8 <fprintf@plt>
   146f8:	b	14584 <argp_parse@@Base+0x1164>
   146fc:	ldr	r1, [pc, #68]	; 14748 <argp_parse@@Base+0x1328>
   14700:	bl	117d8 <fprintf@plt>
   14704:	b	144d4 <argp_parse@@Base+0x10b4>
   14708:	andeq	sl, r1, ip, ror #7
   1470c:	andeq	r0, r0, r6, ror #15
   14710:	andeq	sl, r1, r0, lsl #8
   14714:	andeq	sl, r1, r0, lsl #14
   14718:	andeq	sl, r1, r8, lsr #8
   1471c:	andeq	sl, r1, r4, lsl #8
   14720:	andeq	sl, r1, r4, lsl r6
   14724:	andeq	sl, r1, r0, ror #11
   14728:	ldrdeq	sl, [r1], -r4
   1472c:	andeq	sl, r1, r4, ror #9
   14730:	strdeq	sl, [r1], -ip
   14734:	andeq	sl, r1, r8, lsl r5
   14738:	andeq	sl, r1, r8, lsr r5
   1473c:	andeq	sl, r1, ip, asr r5
   14740:	andeq	sl, r1, r4, lsl #11
   14744:			; <UNDEFINED> instruction: 0x0001a5b0
   14748:	strdeq	sl, [r1], -r8
   1474c:	push	{r4, r5, lr}
   14750:	sub	sp, sp, #12
   14754:	ldr	r5, [sp, #24]
   14758:	ldr	ip, [r5]
   1475c:	cmp	ip, #0
   14760:	beq	1477c <argp_parse@@Base+0x135c>
   14764:	mov	lr, r5
   14768:	mov	ip, #0
   1476c:	ldr	r4, [lr, #4]!
   14770:	add	ip, ip, #1
   14774:	cmp	r4, #0
   14778:	bne	1476c <argp_parse@@Base+0x134c>
   1477c:	stm	sp, {r5, ip}
   14780:	bl	144a4 <argp_parse@@Base+0x1084>
   14784:	add	sp, sp, #12
   14788:	pop	{r4, r5, pc}
   1478c:	push	{r4, r5, lr}
   14790:	sub	sp, sp, #52	; 0x34
   14794:	add	r5, sp, #4
   14798:	ldr	r4, [sp, #64]	; 0x40
   1479c:	mov	ip, #0
   147a0:	sub	r4, r4, #4
   147a4:	ldr	lr, [r4, #4]!
   147a8:	cmp	lr, #0
   147ac:	str	lr, [r5, #4]!
   147b0:	beq	147c0 <argp_parse@@Base+0x13a0>
   147b4:	add	ip, ip, #1
   147b8:	cmp	ip, #10
   147bc:	bne	147a4 <argp_parse@@Base+0x1384>
   147c0:	add	lr, sp, #8
   147c4:	str	ip, [sp, #4]
   147c8:	str	lr, [sp]
   147cc:	bl	144a4 <argp_parse@@Base+0x1084>
   147d0:	add	sp, sp, #52	; 0x34
   147d4:	pop	{r4, r5, pc}
   147d8:	push	{r3}		; (str r3, [sp, #-4]!)
   147dc:	push	{r4, lr}
   147e0:	sub	sp, sp, #60	; 0x3c
   147e4:	add	lr, sp, #56	; 0x38
   147e8:	add	r3, sp, #72	; 0x48
   147ec:	str	r3, [lr, #-44]!	; 0xffffffd4
   147f0:	add	r4, sp, #68	; 0x44
   147f4:	mov	r3, #0
   147f8:	ldr	ip, [r4, #4]!
   147fc:	cmp	ip, #0
   14800:	str	ip, [lr, #4]!
   14804:	beq	14814 <argp_parse@@Base+0x13f4>
   14808:	add	r3, r3, #1
   1480c:	cmp	r3, #10
   14810:	bne	147f8 <argp_parse@@Base+0x13d8>
   14814:	add	ip, sp, #16
   14818:	str	r3, [sp, #4]
   1481c:	str	ip, [sp]
   14820:	ldr	r3, [sp, #68]	; 0x44
   14824:	bl	144a4 <argp_parse@@Base+0x1084>
   14828:	add	sp, sp, #60	; 0x3c
   1482c:	pop	{r4, lr}
   14830:	add	sp, sp, #4
   14834:	bx	lr
   14838:	ldr	r3, [pc, #56]	; 14878 <argp_parse@@Base+0x1458>
   1483c:	push	{r4, lr}
   14840:	mov	r0, #10
   14844:	ldr	r1, [r3]
   14848:	bl	118bc <fputc@plt>
   1484c:	ldr	r1, [pc, #40]	; 1487c <argp_parse@@Base+0x145c>
   14850:	ldr	r0, [pc, #40]	; 14880 <argp_parse@@Base+0x1460>
   14854:	bl	11598 <printf@plt>
   14858:	ldr	r1, [pc, #36]	; 14884 <argp_parse@@Base+0x1464>
   1485c:	ldr	r2, [pc, #36]	; 14888 <argp_parse@@Base+0x1468>
   14860:	ldr	r0, [pc, #36]	; 1488c <argp_parse@@Base+0x146c>
   14864:	bl	11598 <printf@plt>
   14868:	ldr	r1, [pc, #32]	; 14890 <argp_parse@@Base+0x1470>
   1486c:	ldr	r0, [pc, #32]	; 14894 <argp_parse@@Base+0x1474>
   14870:	pop	{r4, lr}
   14874:	b	11598 <printf@plt>
   14878:	andeq	fp, r2, ip, ror #9
   1487c:	andeq	sl, r1, r0, asr r6
   14880:	andeq	sl, r1, r8, ror #12
   14884:	muleq	r1, r8, r3
   14888:	andeq	sl, r1, ip, ror r6
   1488c:	andeq	sl, r1, r4, lsr #13
   14890:			; <UNDEFINED> instruction: 0x0001a6b8
   14894:	ldrdeq	sl, [r1], -r8
   14898:	push	{r4, lr}
   1489c:	bl	14e54 <argp_parse@@Base+0x1a34>
   148a0:	cmp	r0, #0
   148a4:	popne	{r4, pc}
   148a8:	bl	14de0 <argp_parse@@Base+0x19c0>
   148ac:	push	{r4, lr}
   148b0:	bl	14e54 <argp_parse@@Base+0x1a34>
   148b4:	cmp	r0, #0
   148b8:	popne	{r4, pc}
   148bc:	bl	14de0 <argp_parse@@Base+0x19c0>
   148c0:	push	{r4, lr}
   148c4:	bl	14e54 <argp_parse@@Base+0x1a34>
   148c8:	cmp	r0, #0
   148cc:	popne	{r4, pc}
   148d0:	bl	14de0 <argp_parse@@Base+0x19c0>
   148d4:	push	{r4, r5, r6, lr}
   148d8:	mov	r5, r0
   148dc:	mov	r4, r1
   148e0:	bl	14e80 <argp_parse@@Base+0x1a60>
   148e4:	cmp	r0, #0
   148e8:	popne	{r4, r5, r6, pc}
   148ec:	adds	r4, r4, #0
   148f0:	movne	r4, #1
   148f4:	cmp	r5, #0
   148f8:	orreq	r4, r4, #1
   148fc:	cmp	r4, #0
   14900:	popeq	{r4, r5, r6, pc}
   14904:	bl	14de0 <argp_parse@@Base+0x19c0>
   14908:	push	{r4, lr}
   1490c:	cmp	r1, #0
   14910:	orreq	r1, r1, #1
   14914:	bl	14e80 <argp_parse@@Base+0x1a60>
   14918:	cmp	r0, #0
   1491c:	popne	{r4, pc}
   14920:	bl	14de0 <argp_parse@@Base+0x19c0>
   14924:	push	{r4, r5, r6, lr}
   14928:	mov	r6, r0
   1492c:	mov	r5, r1
   14930:	mov	r4, r2
   14934:	bl	18e10 <argp_error@@Base+0xd38>
   14938:	cmp	r0, #0
   1493c:	popne	{r4, r5, r6, pc}
   14940:	cmp	r6, #0
   14944:	beq	14954 <argp_parse@@Base+0x1534>
   14948:	cmp	r5, #0
   1494c:	cmpne	r4, #0
   14950:	popeq	{r4, r5, r6, pc}
   14954:	bl	14de0 <argp_parse@@Base+0x19c0>
   14958:	b	14924 <argp_parse@@Base+0x1504>
   1495c:	cmp	r2, #0
   14960:	cmpne	r1, #0
   14964:	moveq	r2, #1
   14968:	moveq	r1, r2
   1496c:	push	{r4, lr}
   14970:	bl	18e10 <argp_error@@Base+0xd38>
   14974:	cmp	r0, #0
   14978:	popne	{r4, pc}
   1497c:	bl	14de0 <argp_parse@@Base+0x19c0>
   14980:	mov	r2, r1
   14984:	mov	r1, r0
   14988:	mov	r0, #0
   1498c:	b	14924 <argp_parse@@Base+0x1504>
   14990:	mov	r2, r1
   14994:	mov	r1, r0
   14998:	mov	r0, #0
   1499c:	b	1495c <argp_parse@@Base+0x153c>
   149a0:	push	{r4, r5, r6, lr}
   149a4:	subs	r6, r0, #0
   149a8:	sub	sp, sp, #8
   149ac:	mov	r5, r1
   149b0:	ldr	r4, [r1]
   149b4:	beq	149f0 <argp_parse@@Base+0x15d0>
   149b8:	lsr	r1, r4, #1
   149bc:	add	r3, r1, #1
   149c0:	mvn	r3, r3
   149c4:	cmp	r4, r3
   149c8:	bhi	149ec <argp_parse@@Base+0x15cc>
   149cc:	add	r4, r4, #1
   149d0:	add	r4, r4, r1
   149d4:	mov	r0, r6
   149d8:	mov	r1, r4
   149dc:	bl	14924 <argp_parse@@Base+0x1504>
   149e0:	str	r4, [r5]
   149e4:	add	sp, sp, #8
   149e8:	pop	{r4, r5, r6, pc}
   149ec:	bl	14de0 <argp_parse@@Base+0x19c0>
   149f0:	cmp	r4, #0
   149f4:	bne	149d4 <argp_parse@@Base+0x15b4>
   149f8:	mov	r1, r2
   149fc:	mov	r0, #64	; 0x40
   14a00:	str	r2, [sp, #4]
   14a04:	bl	19624 <argp_error@@Base+0x154c>
   14a08:	ldr	r2, [sp, #4]
   14a0c:	cmp	r0, #0
   14a10:	movne	r4, r0
   14a14:	addeq	r4, r0, #1
   14a18:	b	149d4 <argp_parse@@Base+0x15b4>
   14a1c:	mov	r2, #1
   14a20:	b	149a0 <argp_parse@@Base+0x1580>
   14a24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a28:	sub	sp, sp, #12
   14a2c:	ldr	r6, [r1]
   14a30:	mov	sl, r1
   14a34:	mov	r9, r0
   14a38:	asrs	r4, r6, #1
   14a3c:	mov	r5, r2
   14a40:	mov	fp, r3
   14a44:	ldr	r7, [sp, #48]	; 0x30
   14a48:	bmi	14bb4 <argp_parse@@Base+0x1794>
   14a4c:	mvn	r3, #-2147483648	; 0x80000000
   14a50:	sub	r3, r3, r4
   14a54:	cmp	r6, r3
   14a58:	movle	r3, #0
   14a5c:	movgt	r3, #1
   14a60:	mvn	r8, fp
   14a64:	cmp	r3, #0
   14a68:	addeq	r4, r4, r6
   14a6c:	mvnne	r4, #-2147483648	; 0x80000000
   14a70:	lsr	r8, r8, #31
   14a74:	cmp	fp, r4
   14a78:	movge	r3, #0
   14a7c:	andlt	r3, r8, #1
   14a80:	cmp	r3, #0
   14a84:	beq	14b6c <argp_parse@@Base+0x174c>
   14a88:	cmp	r7, #0
   14a8c:	blt	14c3c <argp_parse@@Base+0x181c>
   14a90:	bne	14c34 <argp_parse@@Base+0x1814>
   14a94:	mov	r2, #64	; 0x40
   14a98:	mov	r1, r7
   14a9c:	mov	r0, r2
   14aa0:	str	r2, [sp, #4]
   14aa4:	bl	19830 <argp_error@@Base+0x1758>
   14aa8:	ldr	r2, [sp, #4]
   14aac:	mov	r1, r7
   14ab0:	mov	r4, r0
   14ab4:	mov	r0, r2
   14ab8:	bl	19a50 <argp_error@@Base+0x1978>
   14abc:	ldr	r2, [sp, #4]
   14ac0:	sub	r1, r2, r1
   14ac4:	cmp	r9, #0
   14ac8:	sub	r3, r4, r6
   14acc:	streq	r9, [sl]
   14ad0:	cmp	r3, r5
   14ad4:	bge	14b58 <argp_parse@@Base+0x1738>
   14ad8:	cmp	r5, #0
   14adc:	blt	14bc8 <argp_parse@@Base+0x17a8>
   14ae0:	cmp	r6, #0
   14ae4:	blt	14b04 <argp_parse@@Base+0x16e4>
   14ae8:	mvn	r3, #-2147483648	; 0x80000000
   14aec:	sub	r3, r3, r5
   14af0:	cmp	r6, r3
   14af4:	movle	r3, #0
   14af8:	movgt	r3, #1
   14afc:	cmp	r3, #0
   14b00:	bne	14cc4 <argp_parse@@Base+0x18a4>
   14b04:	add	r5, r6, r5
   14b08:	cmp	fp, r5
   14b0c:	movge	r8, #0
   14b10:	andlt	r8, r8, #1
   14b14:	cmp	r8, #0
   14b18:	mov	r4, r5
   14b1c:	bne	14cc4 <argp_parse@@Base+0x18a4>
   14b20:	cmp	r7, #0
   14b24:	blt	14bdc <argp_parse@@Base+0x17bc>
   14b28:	beq	14b54 <argp_parse@@Base+0x1734>
   14b2c:	cmp	r5, #0
   14b30:	blt	14c84 <argp_parse@@Base+0x1864>
   14b34:	mov	r1, r7
   14b38:	mvn	r0, #-2147483648	; 0x80000000
   14b3c:	bl	19830 <argp_error@@Base+0x1758>
   14b40:	cmp	r5, r0
   14b44:	movle	r0, #0
   14b48:	movgt	r0, #1
   14b4c:	cmp	r0, #0
   14b50:	bne	14cc4 <argp_parse@@Base+0x18a4>
   14b54:	mul	r1, r5, r7
   14b58:	mov	r0, r9
   14b5c:	bl	148d4 <argp_parse@@Base+0x14b4>
   14b60:	str	r4, [sl]
   14b64:	add	sp, sp, #12
   14b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b6c:	cmp	r7, #0
   14b70:	blt	14c08 <argp_parse@@Base+0x17e8>
   14b74:	beq	14a94 <argp_parse@@Base+0x1674>
   14b78:	cmp	r4, #0
   14b7c:	blt	14c44 <argp_parse@@Base+0x1824>
   14b80:	mov	r1, r7
   14b84:	mvn	r0, #-2147483648	; 0x80000000
   14b88:	bl	19830 <argp_error@@Base+0x1758>
   14b8c:	cmp	r0, r4
   14b90:	movge	r0, #0
   14b94:	movlt	r0, #1
   14b98:	cmp	r0, #0
   14b9c:	mvnne	r2, #-2147483648	; 0x80000000
   14ba0:	bne	14a98 <argp_parse@@Base+0x1678>
   14ba4:	mul	r1, r7, r4
   14ba8:	cmp	r1, #63	; 0x3f
   14bac:	bgt	14ac4 <argp_parse@@Base+0x16a4>
   14bb0:	b	14a94 <argp_parse@@Base+0x1674>
   14bb4:	rsb	r3, r4, #-2147483648	; 0x80000000
   14bb8:	cmp	r6, r3
   14bbc:	movge	r3, #0
   14bc0:	movlt	r3, #1
   14bc4:	b	14a60 <argp_parse@@Base+0x1640>
   14bc8:	rsb	r3, r5, #-2147483648	; 0x80000000
   14bcc:	cmp	r6, r3
   14bd0:	movge	r3, #0
   14bd4:	movlt	r3, #1
   14bd8:	b	14afc <argp_parse@@Base+0x16dc>
   14bdc:	cmp	r5, #0
   14be0:	blt	14c68 <argp_parse@@Base+0x1848>
   14be4:	cmn	r7, #1
   14be8:	beq	14b54 <argp_parse@@Base+0x1734>
   14bec:	mov	r1, r7
   14bf0:	mov	r0, #-2147483648	; 0x80000000
   14bf4:	bl	19830 <argp_error@@Base+0x1758>
   14bf8:	cmp	r5, r0
   14bfc:	movle	r0, #0
   14c00:	movgt	r0, #1
   14c04:	b	14b4c <argp_parse@@Base+0x172c>
   14c08:	cmp	r4, #0
   14c0c:	blt	14ca8 <argp_parse@@Base+0x1888>
   14c10:	cmn	r7, #1
   14c14:	beq	14ba4 <argp_parse@@Base+0x1784>
   14c18:	mov	r1, r7
   14c1c:	mov	r0, #-2147483648	; 0x80000000
   14c20:	bl	19830 <argp_error@@Base+0x1758>
   14c24:	cmp	r0, r4
   14c28:	movge	r0, #0
   14c2c:	movlt	r0, #1
   14c30:	b	14b98 <argp_parse@@Base+0x1778>
   14c34:	mov	r4, fp
   14c38:	b	14b80 <argp_parse@@Base+0x1760>
   14c3c:	mov	r4, fp
   14c40:	b	14c10 <argp_parse@@Base+0x17f0>
   14c44:	cmn	r4, #1
   14c48:	beq	14ba4 <argp_parse@@Base+0x1784>
   14c4c:	mov	r1, r4
   14c50:	mov	r0, #-2147483648	; 0x80000000
   14c54:	bl	19830 <argp_error@@Base+0x1758>
   14c58:	cmp	r7, r0
   14c5c:	movle	r0, #0
   14c60:	movgt	r0, #1
   14c64:	b	14b98 <argp_parse@@Base+0x1778>
   14c68:	mov	r1, r7
   14c6c:	mvn	r0, #-2147483648	; 0x80000000
   14c70:	bl	19830 <argp_error@@Base+0x1758>
   14c74:	cmp	r5, r0
   14c78:	movge	r0, #0
   14c7c:	movlt	r0, #1
   14c80:	b	14b4c <argp_parse@@Base+0x172c>
   14c84:	cmn	r5, #1
   14c88:	beq	14b54 <argp_parse@@Base+0x1734>
   14c8c:	mov	r1, r5
   14c90:	mov	r0, #-2147483648	; 0x80000000
   14c94:	bl	19830 <argp_error@@Base+0x1758>
   14c98:	cmp	r7, r0
   14c9c:	movle	r0, #0
   14ca0:	movgt	r0, #1
   14ca4:	b	14b4c <argp_parse@@Base+0x172c>
   14ca8:	mov	r1, r7
   14cac:	mvn	r0, #-2147483648	; 0x80000000
   14cb0:	bl	19830 <argp_error@@Base+0x1758>
   14cb4:	cmp	r0, r4
   14cb8:	movle	r0, #0
   14cbc:	movgt	r0, #1
   14cc0:	b	14b98 <argp_parse@@Base+0x1778>
   14cc4:	bl	14de0 <argp_parse@@Base+0x19c0>
   14cc8:	push	{r4, lr}
   14ccc:	mov	r1, #1
   14cd0:	bl	14e0c <argp_parse@@Base+0x19ec>
   14cd4:	cmp	r0, #0
   14cd8:	popne	{r4, pc}
   14cdc:	bl	14de0 <argp_parse@@Base+0x19c0>
   14ce0:	push	{r4, lr}
   14ce4:	mov	r1, #1
   14ce8:	bl	14e0c <argp_parse@@Base+0x19ec>
   14cec:	cmp	r0, #0
   14cf0:	popne	{r4, pc}
   14cf4:	bl	14de0 <argp_parse@@Base+0x19c0>
   14cf8:	push	{r4, lr}
   14cfc:	bl	14e0c <argp_parse@@Base+0x19ec>
   14d00:	cmp	r0, #0
   14d04:	popne	{r4, pc}
   14d08:	bl	14de0 <argp_parse@@Base+0x19c0>
   14d0c:	push	{r4, lr}
   14d10:	bl	14e0c <argp_parse@@Base+0x19ec>
   14d14:	cmp	r0, #0
   14d18:	popne	{r4, pc}
   14d1c:	bl	14de0 <argp_parse@@Base+0x19c0>
   14d20:	push	{r4, r5, r6, lr}
   14d24:	mov	r6, r0
   14d28:	mov	r0, r1
   14d2c:	mov	r4, r1
   14d30:	bl	14e54 <argp_parse@@Base+0x1a34>
   14d34:	subs	r5, r0, #0
   14d38:	beq	14d50 <argp_parse@@Base+0x1930>
   14d3c:	mov	r2, r4
   14d40:	mov	r1, r6
   14d44:	bl	11610 <memcpy@plt>
   14d48:	mov	r0, r5
   14d4c:	pop	{r4, r5, r6, pc}
   14d50:	bl	14de0 <argp_parse@@Base+0x19c0>
   14d54:	push	{r4, r5, r6, lr}
   14d58:	mov	r6, r0
   14d5c:	mov	r0, r1
   14d60:	mov	r4, r1
   14d64:	bl	14e54 <argp_parse@@Base+0x1a34>
   14d68:	subs	r5, r0, #0
   14d6c:	beq	14d84 <argp_parse@@Base+0x1964>
   14d70:	mov	r2, r4
   14d74:	mov	r1, r6
   14d78:	bl	11610 <memcpy@plt>
   14d7c:	mov	r0, r5
   14d80:	pop	{r4, r5, r6, pc}
   14d84:	bl	14de0 <argp_parse@@Base+0x19c0>
   14d88:	push	{r4, r5, r6, lr}
   14d8c:	mov	r6, r0
   14d90:	add	r0, r1, #1
   14d94:	mov	r4, r1
   14d98:	bl	14e54 <argp_parse@@Base+0x1a34>
   14d9c:	subs	r5, r0, #0
   14da0:	beq	14dc0 <argp_parse@@Base+0x19a0>
   14da4:	mov	r3, #0
   14da8:	mov	r1, r6
   14dac:	strb	r3, [r5, r4]
   14db0:	mov	r2, r4
   14db4:	bl	11610 <memcpy@plt>
   14db8:	mov	r0, r5
   14dbc:	pop	{r4, r5, r6, pc}
   14dc0:	bl	14de0 <argp_parse@@Base+0x19c0>
   14dc4:	push	{r4, lr}
   14dc8:	mov	r4, r0
   14dcc:	bl	117b4 <strlen@plt>
   14dd0:	add	r1, r0, #1
   14dd4:	mov	r0, r4
   14dd8:	pop	{r4, lr}
   14ddc:	b	14d20 <argp_parse@@Base+0x1900>
   14de0:	ldr	r1, [pc, #24]	; 14e00 <argp_parse@@Base+0x19e0>
   14de4:	push	{r4, lr}
   14de8:	ldr	r0, [r1]
   14dec:	ldr	r3, [pc, #16]	; 14e04 <argp_parse@@Base+0x19e4>
   14df0:	ldr	r2, [pc, #16]	; 14e08 <argp_parse@@Base+0x19e8>
   14df4:	mov	r1, #0
   14df8:	bl	11700 <error@plt>
   14dfc:	bl	11964 <abort@plt>
   14e00:	andeq	fp, r2, r0, asr #9
   14e04:	andeq	sl, r1, r0, lsr r7
   14e08:	andeq	sl, r1, r8, ror r2
   14e0c:	cmp	r1, #0
   14e10:	cmpne	r0, #0
   14e14:	moveq	r1, #1
   14e18:	moveq	r0, r1
   14e1c:	umull	r2, r3, r0, r1
   14e20:	adds	r3, r3, #0
   14e24:	movne	r3, #1
   14e28:	cmp	r2, #0
   14e2c:	blt	14e3c <argp_parse@@Base+0x1a1c>
   14e30:	cmp	r3, #0
   14e34:	bne	14e3c <argp_parse@@Base+0x1a1c>
   14e38:	b	11550 <calloc@plt>
   14e3c:	push	{r4, lr}
   14e40:	bl	117f0 <__errno_location@plt>
   14e44:	mov	r3, #12
   14e48:	str	r3, [r0]
   14e4c:	mov	r0, #0
   14e50:	pop	{r4, pc}
   14e54:	cmp	r0, #0
   14e58:	moveq	r0, #1
   14e5c:	cmp	r0, #0
   14e60:	blt	14e68 <argp_parse@@Base+0x1a48>
   14e64:	b	1173c <malloc@plt>
   14e68:	push	{r4, lr}
   14e6c:	bl	117f0 <__errno_location@plt>
   14e70:	mov	r3, #12
   14e74:	str	r3, [r0]
   14e78:	mov	r0, #0
   14e7c:	pop	{r4, pc}
   14e80:	cmp	r0, #0
   14e84:	beq	14ea8 <argp_parse@@Base+0x1a88>
   14e88:	cmp	r1, #0
   14e8c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e90:	sub	sp, sp, #12
   14e94:	beq	14eb0 <argp_parse@@Base+0x1a90>
   14e98:	blt	14ec8 <argp_parse@@Base+0x1aa8>
   14e9c:	add	sp, sp, #12
   14ea0:	pop	{lr}		; (ldr lr, [sp], #4)
   14ea4:	b	11688 <realloc@plt>
   14ea8:	mov	r0, r1
   14eac:	b	14e54 <argp_parse@@Base+0x1a34>
   14eb0:	str	r1, [sp, #4]
   14eb4:	bl	142b8 <argp_parse@@Base+0xe98>
   14eb8:	ldr	r3, [sp, #4]
   14ebc:	mov	r0, r3
   14ec0:	add	sp, sp, #12
   14ec4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ec8:	bl	117f0 <__errno_location@plt>
   14ecc:	mov	r2, #12
   14ed0:	mov	r3, #0
   14ed4:	str	r2, [r0]
   14ed8:	b	14ebc <argp_parse@@Base+0x1a9c>
   14edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ee0:	sub	sp, sp, #20
   14ee4:	ldr	r5, [r0, #4]
   14ee8:	ldr	r4, [r0]
   14eec:	cmp	r5, #0
   14ef0:	ldr	r7, [r0, #8]
   14ef4:	beq	14fcc <argp_parse@@Base+0x1bac>
   14ef8:	stmib	sp, {r1, r2, r3}
   14efc:	mov	r6, #1
   14f00:	str	r4, [sp]
   14f04:	mov	r8, #0
   14f08:	b	14f28 <argp_parse@@Base+0x1b08>
   14f0c:	mov	r3, r6
   14f10:	subs	r5, r5, #1
   14f14:	moveq	r3, #0
   14f18:	andne	r3, r3, #1
   14f1c:	cmp	r3, #0
   14f20:	add	r4, r4, #24
   14f24:	beq	14f94 <argp_parse@@Base+0x1b74>
   14f28:	ldr	fp, [r4, #12]
   14f2c:	ands	r9, fp, #8
   14f30:	movne	r3, r6
   14f34:	movne	r9, r8
   14f38:	bne	14f10 <argp_parse@@Base+0x1af0>
   14f3c:	ldr	sl, [r4, #4]
   14f40:	sub	r3, sl, #1
   14f44:	cmp	r3, #254	; 0xfe
   14f48:	bhi	14f0c <argp_parse@@Base+0x1aec>
   14f4c:	bl	11784 <__ctype_b_loc@plt>
   14f50:	lsl	r3, sl, #1
   14f54:	ldr	r1, [r0]
   14f58:	ldrh	r3, [r1, r3]
   14f5c:	tst	r3, #16384	; 0x4000
   14f60:	beq	14f0c <argp_parse@@Base+0x1aec>
   14f64:	ldrb	r3, [r7]
   14f68:	cmp	r3, sl
   14f6c:	bne	14f0c <argp_parse@@Base+0x1aec>
   14f70:	ldr	r3, [sp]
   14f74:	tst	fp, #4
   14f78:	moveq	r3, r4
   14f7c:	tst	fp, #2
   14f80:	str	r3, [sp]
   14f84:	movne	r3, r6
   14f88:	beq	14fa4 <argp_parse@@Base+0x1b84>
   14f8c:	add	r7, r7, #1
   14f90:	b	14f10 <argp_parse@@Base+0x1af0>
   14f94:	mov	sl, r9
   14f98:	mov	r0, sl
   14f9c:	add	sp, sp, #20
   14fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fa4:	ldr	r3, [sp, #12]
   14fa8:	ldr	r2, [sp, #8]
   14fac:	ldr	r1, [sp]
   14fb0:	mov	r0, r4
   14fb4:	ldr	ip, [sp, #4]
   14fb8:	blx	ip
   14fbc:	clz	r3, r0
   14fc0:	mov	r9, r0
   14fc4:	lsr	r3, r3, #5
   14fc8:	b	14f8c <argp_parse@@Base+0x1b6c>
   14fcc:	mov	sl, r5
   14fd0:	b	14f98 <argp_parse@@Base+0x1b78>
   14fd4:	push	{r4, r5, r6, lr}
   14fd8:	ldr	r4, [r0, #12]
   14fdc:	ands	r4, r4, #8
   14fe0:	movne	r4, #0
   14fe4:	bne	15010 <argp_parse@@Base+0x1bf0>
   14fe8:	ldr	r5, [r0, #4]
   14fec:	sub	r3, r5, #1
   14ff0:	cmp	r3, #254	; 0xfe
   14ff4:	bhi	15010 <argp_parse@@Base+0x1bf0>
   14ff8:	bl	11784 <__ctype_b_loc@plt>
   14ffc:	lsl	r3, r5, #1
   15000:	ldr	r2, [r0]
   15004:	ldrh	r3, [r2, r3]
   15008:	tst	r3, #16384	; 0x4000
   1500c:	movne	r4, r5
   15010:	mov	r0, r4
   15014:	pop	{r4, r5, r6, pc}
   15018:	push	{r4, lr}
   1501c:	mov	r4, r0
   15020:	bl	11784 <__ctype_b_loc@plt>
   15024:	ldr	r2, [r4]
   15028:	ldr	lr, [r0]
   1502c:	b	15034 <argp_parse@@Base+0x1c14>
   15030:	str	r2, [r4]
   15034:	ldrb	r1, [r2]
   15038:	mov	r3, r2
   1503c:	add	r2, r2, #1
   15040:	lsl	r0, r1, #1
   15044:	ldrh	ip, [lr, r0]
   15048:	tst	ip, #8192	; 0x2000
   1504c:	bne	15030 <argp_parse@@Base+0x1c10>
   15050:	subs	r0, r1, #45	; 0x2d
   15054:	movne	r0, #1
   15058:	cmp	r1, #0
   1505c:	popeq	{r4, pc}
   15060:	tst	ip, #8
   15064:	popne	{r4, pc}
   15068:	add	r3, r3, #1
   1506c:	str	r3, [r4]
   15070:	ldrb	r2, [r3]
   15074:	cmp	r2, #0
   15078:	lsl	r2, r2, #1
   1507c:	popeq	{r4, pc}
   15080:	ldrh	r2, [lr, r2]
   15084:	tst	r2, #8
   15088:	beq	15068 <argp_parse@@Base+0x1c48>
   1508c:	pop	{r4, pc}
   15090:	push	{r4, r5, r6, lr}
   15094:	mov	r5, r0
   15098:	ldr	r0, [r0, #12]
   1509c:	cmp	r0, #0
   150a0:	beq	150b4 <argp_parse@@Base+0x1c94>
   150a4:	ldr	r4, [r0, #24]
   150a8:	bl	142b8 <argp_parse@@Base+0xe98>
   150ac:	subs	r0, r4, #0
   150b0:	bne	150a4 <argp_parse@@Base+0x1c84>
   150b4:	ldr	r3, [r5, #4]
   150b8:	cmp	r3, #0
   150bc:	beq	150d0 <argp_parse@@Base+0x1cb0>
   150c0:	ldr	r0, [r5]
   150c4:	bl	142b8 <argp_parse@@Base+0xe98>
   150c8:	ldr	r0, [r5, #8]
   150cc:	bl	142b8 <argp_parse@@Base+0xe98>
   150d0:	mov	r0, r5
   150d4:	pop	{r4, r5, r6, lr}
   150d8:	b	142b8 <argp_parse@@Base+0xe98>
   150dc:	push	{r4, r5, r6, r7, r8, lr}
   150e0:	mov	r5, r1
   150e4:	ldr	r3, [r0, #28]
   150e8:	ldr	r1, [r0, #24]
   150ec:	ldr	r2, [r0, #16]
   150f0:	sub	r3, r3, r1
   150f4:	cmp	r3, r2
   150f8:	mov	r4, r0
   150fc:	bhi	15168 <argp_parse@@Base+0x1d48>
   15100:	ldr	r1, [r4, #20]
   15104:	mov	r6, #32
   15108:	cmp	r1, #0
   1510c:	subge	r5, r5, r1
   15110:	mov	r7, #1
   15114:	cmp	r5, #0
   15118:	sub	r5, r5, #1
   1511c:	ble	15148 <argp_parse@@Base+0x1d28>
   15120:	ldr	r3, [r4, #28]
   15124:	ldr	r2, [r4, #32]
   15128:	cmp	r3, r2
   1512c:	bcs	1514c <argp_parse@@Base+0x1d2c>
   15130:	add	r2, r3, #1
   15134:	cmp	r5, #0
   15138:	str	r2, [r4, #28]
   1513c:	sub	r5, r5, #1
   15140:	strb	r6, [r3]
   15144:	bgt	15120 <argp_parse@@Base+0x1d00>
   15148:	pop	{r4, r5, r6, r7, r8, pc}
   1514c:	mov	r1, r7
   15150:	mov	r0, r4
   15154:	bl	19568 <argp_error@@Base+0x1490>
   15158:	cmp	r0, #0
   1515c:	beq	15114 <argp_parse@@Base+0x1cf4>
   15160:	ldr	r3, [r4, #28]
   15164:	b	15130 <argp_parse@@Base+0x1d10>
   15168:	bl	18ed8 <argp_error@@Base+0xe00>
   1516c:	b	15100 <argp_parse@@Base+0x1ce0>
   15170:	push	{r4, r5, r6, lr}
   15174:	subs	r4, r2, #0
   15178:	popeq	{r4, r5, r6, pc}
   1517c:	ldr	ip, [r4, #20]
   15180:	cmp	ip, #0
   15184:	popeq	{r4, r5, r6, pc}
   15188:	mov	r6, r1
   1518c:	mov	r5, r0
   15190:	mov	r1, r3
   15194:	mov	r0, r4
   15198:	bl	1415c <argp_parse@@Base+0xd3c>
   1519c:	ldr	r3, [r4, #20]
   151a0:	mov	r1, r5
   151a4:	mov	r2, r0
   151a8:	mov	r0, r6
   151ac:	pop	{r4, r5, r6, lr}
   151b0:	bx	r3
   151b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151b8:	mov	r5, r2
   151bc:	sub	sp, sp, #12
   151c0:	mov	r2, r1
   151c4:	ldr	r3, [r5, #16]
   151c8:	ldr	r1, [pc, #488]	; 153b8 <argp_parse@@Base+0x1f98>
   151cc:	mov	r8, r0
   151d0:	bl	15170 <argp_parse@@Base+0x1d50>
   151d4:	subs	r6, r0, #0
   151d8:	beq	152e4 <argp_parse@@Base+0x1ec4>
   151dc:	ldrb	r3, [r6]
   151e0:	cmp	r3, #0
   151e4:	beq	152d8 <argp_parse@@Base+0x1eb8>
   151e8:	ldr	r3, [r5, #8]
   151ec:	ldr	r3, [r3]
   151f0:	cmp	r3, #0
   151f4:	beq	1521c <argp_parse@@Base+0x1dfc>
   151f8:	ldr	r4, [r5, #4]
   151fc:	ldr	r3, [r4, #28]
   15200:	ldr	r2, [r4, #32]
   15204:	cmp	r3, r2
   15208:	bcs	1539c <argp_parse@@Base+0x1f7c>
   1520c:	add	r1, r3, #1
   15210:	mov	r2, #10
   15214:	str	r1, [r4, #28]
   15218:	strb	r2, [r3]
   1521c:	ldr	sl, [pc, #408]	; 153bc <argp_parse@@Base+0x1f9c>
   15220:	ldr	r0, [r5, #4]
   15224:	ldr	r1, [sl, #24]
   15228:	bl	150dc <argp_parse@@Base+0x1cbc>
   1522c:	ldr	r4, [r5, #4]
   15230:	ldr	r9, [sl, #24]
   15234:	ldr	r7, [r4, #28]
   15238:	ldr	r3, [r4, #24]
   1523c:	ldr	r2, [r4, #16]
   15240:	sub	r3, r7, r3
   15244:	cmp	r3, r2
   15248:	strls	r9, [r4, #4]
   1524c:	movls	fp, r4
   15250:	bhi	15320 <argp_parse@@Base+0x1f00>
   15254:	str	r9, [fp, #12]
   15258:	mov	r0, r6
   1525c:	bl	117b4 <strlen@plt>
   15260:	subs	r9, r0, #0
   15264:	beq	1529c <argp_parse@@Base+0x1e7c>
   15268:	ldr	r2, [r4, #32]
   1526c:	add	r3, r7, r9
   15270:	cmp	r2, r3
   15274:	bcc	15304 <argp_parse@@Base+0x1ee4>
   15278:	mov	r2, r9
   1527c:	mov	r0, r7
   15280:	mov	r1, r6
   15284:	bl	11610 <memcpy@plt>
   15288:	ldr	r3, [r4, #28]
   1528c:	add	r9, r3, r9
   15290:	str	r9, [r4, #28]
   15294:	ldr	r4, [r5, #4]
   15298:	ldr	r7, [r4, #28]
   1529c:	ldr	r3, [r4, #24]
   152a0:	ldr	r2, [r4, #16]
   152a4:	sub	r3, r7, r3
   152a8:	cmp	r3, r2
   152ac:	movls	r9, r4
   152b0:	bhi	1536c <argp_parse@@Base+0x1f4c>
   152b4:	ldr	r2, [r9, #32]
   152b8:	mov	r3, #0
   152bc:	cmp	r2, r7
   152c0:	str	r3, [r4, #4]
   152c4:	bls	15380 <argp_parse@@Base+0x1f60>
   152c8:	add	r2, r7, #1
   152cc:	mov	r3, #10
   152d0:	str	r2, [r9, #28]
   152d4:	strb	r3, [r7]
   152d8:	ldr	r3, [r5, #8]
   152dc:	mov	r2, #1
   152e0:	str	r2, [r3, #4]
   152e4:	cmp	r8, r6
   152e8:	beq	152fc <argp_parse@@Base+0x1edc>
   152ec:	mov	r0, r6
   152f0:	add	sp, sp, #12
   152f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152f8:	b	142b8 <argp_parse@@Base+0xe98>
   152fc:	add	sp, sp, #12
   15300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15304:	mov	r1, r9
   15308:	mov	r0, r4
   1530c:	bl	19568 <argp_error@@Base+0x1490>
   15310:	cmp	r0, #0
   15314:	beq	15294 <argp_parse@@Base+0x1e74>
   15318:	ldr	r7, [r4, #28]
   1531c:	b	15278 <argp_parse@@Base+0x1e58>
   15320:	mov	r0, r4
   15324:	str	r9, [sp, #4]
   15328:	bl	18ed8 <argp_error@@Base+0xe00>
   1532c:	ldr	fp, [r5, #4]
   15330:	ldr	r3, [sp, #4]
   15334:	ldr	r9, [sl, #24]
   15338:	ldr	r7, [fp, #28]
   1533c:	ldr	r2, [fp, #24]
   15340:	ldr	r1, [fp, #16]
   15344:	sub	r2, r7, r2
   15348:	cmp	r2, r1
   1534c:	str	r3, [r4, #4]
   15350:	movls	r4, fp
   15354:	bls	15254 <argp_parse@@Base+0x1e34>
   15358:	mov	r0, fp
   1535c:	bl	18ed8 <argp_error@@Base+0xe00>
   15360:	ldr	r4, [r5, #4]
   15364:	ldr	r7, [r4, #28]
   15368:	b	15254 <argp_parse@@Base+0x1e34>
   1536c:	mov	r0, r4
   15370:	bl	18ed8 <argp_error@@Base+0xe00>
   15374:	ldr	r9, [r5, #4]
   15378:	ldr	r7, [r9, #28]
   1537c:	b	152b4 <argp_parse@@Base+0x1e94>
   15380:	mov	r1, #1
   15384:	mov	r0, r9
   15388:	bl	19568 <argp_error@@Base+0x1490>
   1538c:	cmp	r0, #0
   15390:	beq	152d8 <argp_parse@@Base+0x1eb8>
   15394:	ldr	r7, [r9, #28]
   15398:	b	152c8 <argp_parse@@Base+0x1ea8>
   1539c:	mov	r1, #1
   153a0:	mov	r0, r4
   153a4:	bl	19568 <argp_error@@Base+0x1490>
   153a8:	cmp	r0, #0
   153ac:	beq	1521c <argp_parse@@Base+0x1dfc>
   153b0:	ldr	r3, [r4, #28]
   153b4:	b	1520c <argp_parse@@Base+0x1dec>
   153b8:	andeq	r0, r0, #3
   153bc:	muleq	r2, r8, r4
   153c0:	ldr	r3, [r1, #12]
   153c4:	push	{r4, r5, r6, r7, r8, lr}
   153c8:	cmp	r3, #0
   153cc:	mov	r4, r1
   153d0:	mov	r6, r0
   153d4:	beq	154bc <argp_parse@@Base+0x209c>
   153d8:	ldr	r3, [r1, #8]
   153dc:	ldr	r2, [r1]
   153e0:	ldr	r7, [r3]
   153e4:	ldr	r3, [r3, #4]
   153e8:	ldr	r5, [r2, #16]
   153ec:	cmp	r3, #0
   153f0:	cmpne	r7, #0
   153f4:	beq	1542c <argp_parse@@Base+0x200c>
   153f8:	ldr	r2, [r2, #12]
   153fc:	ldr	r3, [r7, #12]
   15400:	cmp	r2, r3
   15404:	beq	1542c <argp_parse@@Base+0x200c>
   15408:	ldr	r8, [r1, #4]
   1540c:	ldr	r3, [r8, #28]
   15410:	ldr	r2, [r8, #32]
   15414:	cmp	r3, r2
   15418:	bcs	1554c <argp_parse@@Base+0x212c>
   1541c:	add	r1, r3, #1
   15420:	mov	r2, #10
   15424:	str	r1, [r8, #28]
   15428:	strb	r2, [r3]
   1542c:	cmp	r5, #0
   15430:	beq	15518 <argp_parse@@Base+0x20f8>
   15434:	ldr	r0, [r5]
   15438:	cmp	r0, #0
   1543c:	beq	15518 <argp_parse@@Base+0x20f8>
   15440:	ldrb	r3, [r0]
   15444:	cmp	r3, #0
   15448:	beq	15518 <argp_parse@@Base+0x20f8>
   1544c:	cmp	r7, #0
   15450:	beq	15480 <argp_parse@@Base+0x2060>
   15454:	ldr	r3, [r7, #16]
   15458:	cmp	r5, r3
   1545c:	beq	15518 <argp_parse@@Base+0x20f8>
   15460:	cmp	r3, #0
   15464:	beq	15480 <argp_parse@@Base+0x2060>
   15468:	ldr	r3, [r3, #12]
   1546c:	cmp	r3, #0
   15470:	cmpne	r5, r3
   15474:	bne	15468 <argp_parse@@Base+0x2048>
   15478:	cmp	r5, r3
   1547c:	beq	15518 <argp_parse@@Base+0x20f8>
   15480:	ldr	r3, [r4, #4]
   15484:	ldr	r1, [r5, #16]
   15488:	mov	r2, r4
   1548c:	ldr	r7, [r3, #12]
   15490:	bl	151b4 <argp_parse@@Base+0x1d94>
   15494:	ldr	r5, [r4, #4]
   15498:	mov	r0, r5
   1549c:	ldr	r3, [r5, #28]
   154a0:	ldr	r1, [r5, #24]
   154a4:	ldr	r2, [r5, #16]
   154a8:	sub	r3, r3, r1
   154ac:	cmp	r3, r2
   154b0:	bhi	15540 <argp_parse@@Base+0x2120>
   154b4:	str	r7, [r5, #12]
   154b8:	b	1551c <argp_parse@@Base+0x20fc>
   154bc:	ldr	r5, [r1, #4]
   154c0:	ldr	r3, [r5, #28]
   154c4:	ldr	r1, [r5, #32]
   154c8:	add	r2, r3, #2
   154cc:	cmp	r1, r2
   154d0:	bcc	154fc <argp_parse@@Base+0x20dc>
   154d4:	ldr	r2, [pc, #140]	; 15568 <argp_parse@@Base+0x2148>
   154d8:	mov	r1, r6
   154dc:	ldrh	r2, [r2]
   154e0:	strh	r2, [r3]
   154e4:	ldr	r3, [r5, #28]
   154e8:	ldr	r0, [r4, #4]
   154ec:	add	r3, r3, #2
   154f0:	str	r3, [r5, #28]
   154f4:	pop	{r4, r5, r6, r7, r8, lr}
   154f8:	b	150dc <argp_parse@@Base+0x1cbc>
   154fc:	mov	r1, #2
   15500:	mov	r0, r5
   15504:	bl	19568 <argp_error@@Base+0x1490>
   15508:	cmp	r0, #0
   1550c:	beq	15530 <argp_parse@@Base+0x2110>
   15510:	ldr	r3, [r5, #28]
   15514:	b	154d4 <argp_parse@@Base+0x20b4>
   15518:	ldr	r0, [r4, #4]
   1551c:	mov	r3, #0
   15520:	str	r3, [r4, #12]
   15524:	mov	r1, r6
   15528:	pop	{r4, r5, r6, r7, r8, lr}
   1552c:	b	150dc <argp_parse@@Base+0x1cbc>
   15530:	ldr	r0, [r4, #4]
   15534:	mov	r1, r6
   15538:	pop	{r4, r5, r6, r7, r8, lr}
   1553c:	b	150dc <argp_parse@@Base+0x1cbc>
   15540:	bl	18ed8 <argp_error@@Base+0xe00>
   15544:	ldr	r0, [r4, #4]
   15548:	b	154b4 <argp_parse@@Base+0x2094>
   1554c:	mov	r1, #1
   15550:	mov	r0, r8
   15554:	bl	19568 <argp_error@@Base+0x1490>
   15558:	cmp	r0, #0
   1555c:	beq	1542c <argp_parse@@Base+0x200c>
   15560:	ldr	r3, [r8, #28]
   15564:	b	1541c <argp_parse@@Base+0x1ffc>
   15568:	andeq	sl, r1, ip, ror #15
   1556c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15570:	mov	r7, r3
   15574:	ldr	sl, [r0, #12]
   15578:	sub	sp, sp, #36	; 0x24
   1557c:	ldr	r3, [r0, #16]
   15580:	cmp	sl, #0
   15584:	mov	fp, r0
   15588:	mov	r6, r2
   1558c:	str	r3, [sp, #16]
   15590:	mov	r9, r1
   15594:	ldr	r8, [sp, #72]	; 0x48
   15598:	ldr	r5, [sp, #76]	; 0x4c
   1559c:	beq	1596c <argp_parse@@Base+0x254c>
   155a0:	mov	r1, #11
   155a4:	mov	r0, sl
   155a8:	bl	117c0 <strchr@plt>
   155ac:	cmp	r6, #0
   155b0:	bne	15888 <argp_parse@@Base+0x2468>
   155b4:	cmp	r0, #0
   155b8:	ldr	r3, [fp, #20]
   155bc:	beq	15ac4 <argp_parse@@Base+0x26a4>
   155c0:	cmp	r3, #0
   155c4:	sub	r4, r0, sl
   155c8:	beq	15a5c <argp_parse@@Base+0x263c>
   155cc:	cmp	r4, #0
   155d0:	beq	159fc <argp_parse@@Base+0x25dc>
   155d4:	mov	r0, sl
   155d8:	mov	r1, r4
   155dc:	bl	115f8 <strndup@plt>
   155e0:	mov	r3, #1
   155e4:	str	r3, [sp, #24]
   155e8:	mov	sl, r0
   155ec:	adds	r3, r0, #0
   155f0:	movne	r3, #1
   155f4:	str	r3, [sp, #20]
   155f8:	mov	r1, r9
   155fc:	mov	r0, fp
   15600:	bl	1415c <argp_parse@@Base+0xd3c>
   15604:	ldr	r3, [fp, #20]
   15608:	str	r0, [sp, #12]
   1560c:	ldr	r0, [pc, #1272]	; 15b0c <argp_parse@@Base+0x26ec>
   15610:	ldr	r2, [sp, #12]
   15614:	mov	r1, sl
   15618:	blx	r3
   1561c:	subs	r3, r0, #0
   15620:	beq	159ac <argp_parse@@Base+0x258c>
   15624:	cmp	r7, #0
   15628:	beq	1564c <argp_parse@@Base+0x222c>
   1562c:	ldr	r2, [r5, #28]
   15630:	ldr	r1, [r5, #32]
   15634:	cmp	r2, r1
   15638:	bcs	159b4 <argp_parse@@Base+0x2594>
   1563c:	add	r0, r2, #1
   15640:	mov	r1, #10
   15644:	str	r0, [r5, #28]
   15648:	strb	r1, [r2]
   1564c:	ldr	r2, [sp, #24]
   15650:	cmp	r3, sl
   15654:	movne	r2, #0
   15658:	andeq	r2, r2, #1
   1565c:	cmp	r2, #0
   15660:	beq	158cc <argp_parse@@Base+0x24ac>
   15664:	ldr	r0, [r5, #28]
   15668:	ldr	r1, [r5, #32]
   1566c:	add	r2, r0, r4
   15670:	cmp	r1, r2
   15674:	bcs	1592c <argp_parse@@Base+0x250c>
   15678:	mov	r1, r4
   1567c:	mov	r0, r5
   15680:	str	r3, [sp, #24]
   15684:	bl	19568 <argp_error@@Base+0x1490>
   15688:	ldr	r3, [sp, #24]
   1568c:	cmp	r0, #0
   15690:	bne	15928 <argp_parse@@Base+0x2508>
   15694:	ldr	r4, [r5, #28]
   15698:	ldr	r1, [r5, #24]
   1569c:	ldr	r2, [r5, #16]
   156a0:	sub	r4, r4, r1
   156a4:	cmp	r4, r2
   156a8:	bhi	15950 <argp_parse@@Base+0x2530>
   156ac:	ldr	r2, [r5, #20]
   156b0:	ldr	r1, [r5, #4]
   156b4:	bic	r2, r2, r2, asr #31
   156b8:	cmp	r1, r2
   156bc:	bcs	156e0 <argp_parse@@Base+0x22c0>
   156c0:	ldr	r2, [r5, #28]
   156c4:	ldr	r1, [r5, #32]
   156c8:	cmp	r2, r1
   156cc:	bcs	159d8 <argp_parse@@Base+0x25b8>
   156d0:	add	r0, r2, #1
   156d4:	mov	r1, #10
   156d8:	str	r0, [r5, #28]
   156dc:	strb	r1, [r2]
   156e0:	cmp	r3, sl
   156e4:	moveq	r4, #1
   156e8:	beq	156f8 <argp_parse@@Base+0x22d8>
   156ec:	mov	r0, r3
   156f0:	bl	142b8 <argp_parse@@Base+0xe98>
   156f4:	mov	r4, #1
   156f8:	ldr	r3, [sp, #20]
   156fc:	cmp	r3, #0
   15700:	beq	15718 <argp_parse@@Base+0x22f8>
   15704:	ldr	r3, [fp, #20]
   15708:	cmp	r3, #0
   1570c:	beq	157fc <argp_parse@@Base+0x23dc>
   15710:	mov	r0, sl
   15714:	bl	142b8 <argp_parse@@Base+0xe98>
   15718:	cmp	r6, #0
   1571c:	beq	157fc <argp_parse@@Base+0x23dc>
   15720:	ldr	r3, [fp, #20]
   15724:	cmp	r3, #0
   15728:	beq	157fc <argp_parse@@Base+0x23dc>
   1572c:	ldr	r2, [sp, #12]
   15730:	mov	r1, #0
   15734:	ldr	r0, [pc, #980]	; 15b10 <argp_parse@@Base+0x26f0>
   15738:	blx	r3
   1573c:	subs	sl, r0, #0
   15740:	beq	157fc <argp_parse@@Base+0x23dc>
   15744:	orrs	r3, r7, r4
   15748:	beq	1576c <argp_parse@@Base+0x234c>
   1574c:	ldr	r3, [r5, #28]
   15750:	ldr	r2, [r5, #32]
   15754:	cmp	r3, r2
   15758:	bcs	15a94 <argp_parse@@Base+0x2674>
   1575c:	add	r1, r3, #1
   15760:	mov	r2, #10
   15764:	str	r1, [r5, #28]
   15768:	strb	r2, [r3]
   1576c:	mov	r0, sl
   15770:	bl	117b4 <strlen@plt>
   15774:	subs	r4, r0, #0
   15778:	beq	157a4 <argp_parse@@Base+0x2384>
   1577c:	ldr	r0, [r5, #28]
   15780:	ldr	r2, [r5, #32]
   15784:	add	r3, r0, r4
   15788:	cmp	r2, r3
   1578c:	bcs	15a0c <argp_parse@@Base+0x25ec>
   15790:	mov	r1, r4
   15794:	mov	r0, r5
   15798:	bl	19568 <argp_error@@Base+0x1490>
   1579c:	cmp	r0, #0
   157a0:	bne	15a08 <argp_parse@@Base+0x25e8>
   157a4:	mov	r0, sl
   157a8:	bl	142b8 <argp_parse@@Base+0xe98>
   157ac:	ldr	r3, [r5, #28]
   157b0:	ldr	r1, [r5, #24]
   157b4:	ldr	r2, [r5, #16]
   157b8:	sub	r3, r3, r1
   157bc:	cmp	r3, r2
   157c0:	bhi	15a28 <argp_parse@@Base+0x2608>
   157c4:	ldr	r3, [r5, #20]
   157c8:	ldr	r2, [r5, #4]
   157cc:	bic	r3, r3, r3, asr #31
   157d0:	cmp	r2, r3
   157d4:	bcs	15964 <argp_parse@@Base+0x2544>
   157d8:	ldr	r3, [r5, #28]
   157dc:	ldr	r2, [r5, #32]
   157e0:	cmp	r3, r2
   157e4:	bcs	15a78 <argp_parse@@Base+0x2658>
   157e8:	mov	r4, #1
   157ec:	add	r2, r3, r4
   157f0:	str	r2, [r5, #28]
   157f4:	mov	r2, #10
   157f8:	strb	r2, [r3]
   157fc:	ldr	fp, [sp, #16]
   15800:	cmp	fp, #0
   15804:	beq	1587c <argp_parse@@Base+0x245c>
   15808:	ldr	r3, [fp]
   1580c:	cmp	r3, #0
   15810:	beq	1587c <argp_parse@@Base+0x245c>
   15814:	eor	r2, r4, #1
   15818:	and	r2, r2, #1
   1581c:	clz	sl, r8
   15820:	lsr	sl, sl, #5
   15824:	orrs	r2, sl, r2
   15828:	bne	15844 <argp_parse@@Base+0x2424>
   1582c:	b	15ab0 <argp_parse@@Base+0x2690>
   15830:	cmp	r4, #0
   15834:	movne	r2, sl
   15838:	orreq	r2, sl, #1
   1583c:	cmp	r2, #0
   15840:	beq	1587c <argp_parse@@Base+0x245c>
   15844:	orrs	r2, r7, r4
   15848:	mov	r0, r3
   1584c:	str	r5, [sp, #4]
   15850:	movne	r3, #1
   15854:	moveq	r3, #0
   15858:	str	r8, [sp]
   1585c:	mov	r2, r6
   15860:	mov	r1, r9
   15864:	bl	1556c <argp_parse@@Base+0x214c>
   15868:	ldr	r3, [fp, #16]
   1586c:	add	fp, fp, #16
   15870:	cmp	r3, #0
   15874:	orr	r4, r4, r0
   15878:	bne	15830 <argp_parse@@Base+0x2410>
   1587c:	mov	r0, r4
   15880:	add	sp, sp, #36	; 0x24
   15884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15888:	cmp	r0, #0
   1588c:	addne	sl, r0, #1
   15890:	beq	15a54 <argp_parse@@Base+0x2634>
   15894:	ldr	r3, [fp, #20]
   15898:	cmp	r3, #0
   1589c:	beq	15a34 <argp_parse@@Base+0x2614>
   158a0:	mov	r3, #0
   158a4:	mov	r1, r9
   158a8:	mov	r0, fp
   158ac:	mov	r4, r3
   158b0:	str	r3, [sp, #20]
   158b4:	bl	1415c <argp_parse@@Base+0xd3c>
   158b8:	str	r4, [sp, #24]
   158bc:	ldr	r3, [fp, #20]
   158c0:	str	r0, [sp, #12]
   158c4:	ldr	r0, [pc, #584]	; 15b14 <argp_parse@@Base+0x26f4>
   158c8:	b	15610 <argp_parse@@Base+0x21f0>
   158cc:	mov	r0, r3
   158d0:	str	r3, [sp, #24]
   158d4:	bl	117b4 <strlen@plt>
   158d8:	ldr	r3, [sp, #24]
   158dc:	subs	r4, r0, #0
   158e0:	beq	15694 <argp_parse@@Base+0x2274>
   158e4:	ldr	r0, [r5, #28]
   158e8:	ldr	r1, [r5, #32]
   158ec:	add	r2, r0, r4
   158f0:	cmp	r1, r2
   158f4:	bcs	15918 <argp_parse@@Base+0x24f8>
   158f8:	mov	r1, r4
   158fc:	mov	r0, r5
   15900:	str	r3, [sp, #24]
   15904:	bl	19568 <argp_error@@Base+0x1490>
   15908:	ldr	r3, [sp, #24]
   1590c:	cmp	r0, #0
   15910:	beq	15694 <argp_parse@@Base+0x2274>
   15914:	ldr	r0, [r5, #28]
   15918:	mov	r2, r4
   1591c:	mov	r1, r3
   15920:	str	r3, [sp, #24]
   15924:	b	15938 <argp_parse@@Base+0x2518>
   15928:	ldr	r0, [r5, #28]
   1592c:	mov	r2, r4
   15930:	mov	r1, sl
   15934:	str	r3, [sp, #24]
   15938:	bl	11610 <memcpy@plt>
   1593c:	ldr	r2, [r5, #28]
   15940:	ldr	r3, [sp, #24]
   15944:	add	r4, r2, r4
   15948:	str	r4, [r5, #28]
   1594c:	b	15698 <argp_parse@@Base+0x2278>
   15950:	mov	r0, r5
   15954:	str	r3, [sp, #24]
   15958:	bl	18ed8 <argp_error@@Base+0xe00>
   1595c:	ldr	r3, [sp, #24]
   15960:	b	156ac <argp_parse@@Base+0x228c>
   15964:	mov	r4, #1
   15968:	b	157fc <argp_parse@@Base+0x23dc>
   1596c:	ldr	r4, [r0, #20]
   15970:	cmp	r4, #0
   15974:	beq	15abc <argp_parse@@Base+0x269c>
   15978:	bl	1415c <argp_parse@@Base+0xd3c>
   1597c:	cmp	r6, #0
   15980:	ldr	r3, [fp, #20]
   15984:	strne	sl, [sp, #20]
   15988:	strne	sl, [sp, #24]
   1598c:	movne	r4, sl
   15990:	streq	r6, [sp, #20]
   15994:	streq	r6, [sp, #24]
   15998:	moveq	r4, r6
   1599c:	str	r0, [sp, #12]
   159a0:	ldrne	r0, [pc, #364]	; 15b14 <argp_parse@@Base+0x26f4>
   159a4:	ldreq	r0, [pc, #352]	; 15b0c <argp_parse@@Base+0x26ec>
   159a8:	b	15610 <argp_parse@@Base+0x21f0>
   159ac:	mov	r4, r3
   159b0:	b	156f8 <argp_parse@@Base+0x22d8>
   159b4:	mov	r1, #1
   159b8:	mov	r0, r5
   159bc:	str	r3, [sp, #28]
   159c0:	bl	19568 <argp_error@@Base+0x1490>
   159c4:	ldr	r3, [sp, #28]
   159c8:	cmp	r0, #0
   159cc:	beq	1564c <argp_parse@@Base+0x222c>
   159d0:	ldr	r2, [r5, #28]
   159d4:	b	1563c <argp_parse@@Base+0x221c>
   159d8:	mov	r1, #1
   159dc:	mov	r0, r5
   159e0:	str	r3, [sp, #24]
   159e4:	bl	19568 <argp_error@@Base+0x1490>
   159e8:	ldr	r3, [sp, #24]
   159ec:	cmp	r0, #0
   159f0:	beq	156e0 <argp_parse@@Base+0x22c0>
   159f4:	ldr	r2, [r5, #28]
   159f8:	b	156d0 <argp_parse@@Base+0x22b0>
   159fc:	str	r4, [sp, #20]
   15a00:	str	r4, [sp, #24]
   15a04:	b	155f8 <argp_parse@@Base+0x21d8>
   15a08:	ldr	r0, [r5, #28]
   15a0c:	mov	r2, r4
   15a10:	mov	r1, sl
   15a14:	bl	11610 <memcpy@plt>
   15a18:	ldr	r3, [r5, #28]
   15a1c:	add	r4, r3, r4
   15a20:	str	r4, [r5, #28]
   15a24:	b	157a4 <argp_parse@@Base+0x2384>
   15a28:	mov	r0, r5
   15a2c:	bl	18ed8 <argp_error@@Base+0xe00>
   15a30:	b	157c4 <argp_parse@@Base+0x23a4>
   15a34:	cmp	sl, #0
   15a38:	beq	15ab8 <argp_parse@@Base+0x2698>
   15a3c:	str	r3, [sp, #20]
   15a40:	str	r3, [sp, #24]
   15a44:	mov	r4, r3
   15a48:	str	r3, [sp, #12]
   15a4c:	mov	r3, sl
   15a50:	b	15624 <argp_parse@@Base+0x2204>
   15a54:	mov	sl, r0
   15a58:	b	15894 <argp_parse@@Base+0x2474>
   15a5c:	adds	r3, r4, #0
   15a60:	movne	r3, #1
   15a64:	str	r3, [sp, #24]
   15a68:	str	r3, [sp, #20]
   15a6c:	str	r6, [sp, #12]
   15a70:	mov	r3, sl
   15a74:	b	15624 <argp_parse@@Base+0x2204>
   15a78:	mov	r1, #1
   15a7c:	mov	r0, r5
   15a80:	bl	19568 <argp_error@@Base+0x1490>
   15a84:	cmp	r0, #0
   15a88:	beq	15964 <argp_parse@@Base+0x2544>
   15a8c:	ldr	r3, [r5, #28]
   15a90:	b	157e8 <argp_parse@@Base+0x23c8>
   15a94:	mov	r1, #1
   15a98:	mov	r0, r5
   15a9c:	bl	19568 <argp_error@@Base+0x1490>
   15aa0:	cmp	r0, #0
   15aa4:	beq	1576c <argp_parse@@Base+0x234c>
   15aa8:	ldr	r3, [r5, #28]
   15aac:	b	1575c <argp_parse@@Base+0x233c>
   15ab0:	mov	r4, #1
   15ab4:	b	1587c <argp_parse@@Base+0x245c>
   15ab8:	mov	r4, sl
   15abc:	str	r4, [sp, #12]
   15ac0:	b	15718 <argp_parse@@Base+0x22f8>
   15ac4:	cmp	r3, #0
   15ac8:	beq	15af4 <argp_parse@@Base+0x26d4>
   15acc:	mov	r1, r9
   15ad0:	mov	r0, fp
   15ad4:	bl	1415c <argp_parse@@Base+0xd3c>
   15ad8:	mov	r4, r6
   15adc:	ldr	r3, [fp, #20]
   15ae0:	str	r6, [sp, #20]
   15ae4:	str	r6, [sp, #24]
   15ae8:	str	r0, [sp, #12]
   15aec:	ldr	r0, [pc, #24]	; 15b0c <argp_parse@@Base+0x26ec>
   15af0:	b	15610 <argp_parse@@Base+0x21f0>
   15af4:	mov	r3, sl
   15af8:	str	r6, [sp, #20]
   15afc:	str	r6, [sp, #24]
   15b00:	mov	r4, r6
   15b04:	str	r6, [sp, #12]
   15b08:	b	15624 <argp_parse@@Base+0x2204>
   15b0c:	andeq	r0, r0, #1
   15b10:	andeq	r0, r0, #4
   15b14:	andeq	r0, r0, #2
   15b18:	ldr	r3, [r0, #12]
   15b1c:	ldr	r2, [r1, #12]
   15b20:	push	{r4, r5, r6, lr}
   15b24:	cmp	r3, r2
   15b28:	beq	15b78 <argp_parse@@Base+0x2758>
   15b2c:	mov	r5, r1
   15b30:	mov	r4, r0
   15b34:	mov	r1, r2
   15b38:	mov	r0, r3
   15b3c:	bl	15b18 <argp_parse@@Base+0x26f8>
   15b40:	cmp	r0, #0
   15b44:	popne	{r4, r5, r6, pc}
   15b48:	ldr	r3, [r5, #8]
   15b4c:	ldr	r0, [r4, #8]
   15b50:	mvn	r2, r3
   15b54:	lsr	r2, r2, #31
   15b58:	cmp	r2, r0, lsr #31
   15b5c:	subne	r0, r0, r3
   15b60:	subeq	r0, r3, r0
   15b64:	cmp	r0, #0
   15b68:	ldreq	r3, [r5, #4]
   15b6c:	ldreq	r0, [r4, #4]
   15b70:	subeq	r0, r3, r0
   15b74:	pop	{r4, r5, r6, pc}
   15b78:	ldr	r3, [r1, #8]
   15b7c:	ldr	r2, [r0, #8]
   15b80:	mvn	ip, r3
   15b84:	ldr	lr, [r1, #4]
   15b88:	lsr	ip, ip, #31
   15b8c:	cmp	ip, r2, lsr #31
   15b90:	ldr	r1, [r0, #4]
   15b94:	subne	r0, r2, r3
   15b98:	subeq	r0, r3, r2
   15b9c:	cmp	r0, #0
   15ba0:	subeq	r0, lr, r1
   15ba4:	pop	{r4, r5, r6, pc}
   15ba8:	push	{r4, r5, r6, r7, r8, r9, lr}
   15bac:	sub	sp, sp, #12
   15bb0:	ldr	lr, [r0, #16]
   15bb4:	cmp	lr, #0
   15bb8:	movne	r2, lr
   15bbc:	bne	15bc8 <argp_parse@@Base+0x27a8>
   15bc0:	b	15e8c <argp_parse@@Base+0x2a6c>
   15bc4:	mov	r2, r3
   15bc8:	ldr	r3, [r2, #12]
   15bcc:	cmp	r3, #0
   15bd0:	bne	15bc4 <argp_parse@@Base+0x27a4>
   15bd4:	ldr	ip, [r1, #16]
   15bd8:	ldr	r4, [r2, #8]
   15bdc:	cmp	ip, #0
   15be0:	movne	r2, ip
   15be4:	bne	15bf0 <argp_parse@@Base+0x27d0>
   15be8:	b	15ea0 <argp_parse@@Base+0x2a80>
   15bec:	mov	r2, r3
   15bf0:	ldr	r3, [r2, #12]
   15bf4:	cmp	r3, #0
   15bf8:	bne	15bec <argp_parse@@Base+0x27cc>
   15bfc:	ldr	r3, [r2, #8]
   15c00:	mvn	r2, r3
   15c04:	lsr	r2, r2, #31
   15c08:	cmp	r2, r4, lsr #31
   15c0c:	subne	r4, r4, r3
   15c10:	subeq	r4, r3, r4
   15c14:	cmp	r4, #0
   15c18:	bne	15c80 <argp_parse@@Base+0x2860>
   15c1c:	adds	r4, ip, #0
   15c20:	movne	r4, #1
   15c24:	cmp	lr, #0
   15c28:	rsbeq	r4, r4, #0
   15c2c:	rsbne	r4, r4, #1
   15c30:	cmp	r4, #0
   15c34:	bne	15c80 <argp_parse@@Base+0x2860>
   15c38:	cmp	lr, #0
   15c3c:	mov	r5, r1
   15c40:	mov	r6, r0
   15c44:	beq	15c9c <argp_parse@@Base+0x287c>
   15c48:	ldr	r0, [lr, #20]
   15c4c:	ldr	r2, [ip, #20]
   15c50:	cmp	r0, r2
   15c54:	ble	15e60 <argp_parse@@Base+0x2a40>
   15c58:	mov	r0, lr
   15c5c:	ldr	r0, [r0, #12]
   15c60:	ldr	r3, [r0, #20]
   15c64:	cmp	r2, r3
   15c68:	blt	15c5c <argp_parse@@Base+0x283c>
   15c6c:	mov	r1, ip
   15c70:	bl	15b18 <argp_parse@@Base+0x26f8>
   15c74:	cmp	r0, #0
   15c78:	movne	r4, r0
   15c7c:	moveq	r4, #1
   15c80:	mov	r0, r4
   15c84:	add	sp, sp, #12
   15c88:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15c8c:	mov	r0, lr
   15c90:	bl	15b18 <argp_parse@@Base+0x26f8>
   15c94:	subs	r4, r0, #0
   15c98:	bne	15c80 <argp_parse@@Base+0x2860>
   15c9c:	ldr	r4, [r5, #12]
   15ca0:	ldr	r3, [r6, #12]
   15ca4:	mvn	r2, r4
   15ca8:	lsr	r2, r2, #31
   15cac:	cmp	r2, r3, lsr #31
   15cb0:	subne	r4, r3, r4
   15cb4:	subeq	r4, r4, r3
   15cb8:	cmp	r4, #0
   15cbc:	bne	15c80 <argp_parse@@Base+0x2860>
   15cc0:	ldr	r2, [r6, #4]
   15cc4:	ldr	lr, [r6]
   15cc8:	cmp	r2, #0
   15ccc:	beq	15cf8 <argp_parse@@Base+0x28d8>
   15cd0:	add	r3, lr, #24
   15cd4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15cd8:	cmp	r1, #0
   15cdc:	beq	15cec <argp_parse@@Base+0x28cc>
   15ce0:	ldr	r0, [r3, #-12]
   15ce4:	tst	r0, #2
   15ce8:	beq	15ea8 <argp_parse@@Base+0x2a88>
   15cec:	subs	r2, r2, #1
   15cf0:	add	r3, r3, #24
   15cf4:	bne	15cd4 <argp_parse@@Base+0x28b4>
   15cf8:	ldr	r2, [r5, #4]
   15cfc:	mov	ip, #0
   15d00:	cmp	r2, ip
   15d04:	str	ip, [sp]
   15d08:	ldr	r3, [r5]
   15d0c:	beq	15f18 <argp_parse@@Base+0x2af8>
   15d10:	add	r3, r3, #24
   15d14:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15d18:	cmp	r1, #0
   15d1c:	beq	15d2c <argp_parse@@Base+0x290c>
   15d20:	ldr	r0, [r3, #-12]
   15d24:	tst	r0, #2
   15d28:	beq	15d3c <argp_parse@@Base+0x291c>
   15d2c:	subs	r2, r2, #1
   15d30:	add	r3, r3, #24
   15d34:	bne	15d14 <argp_parse@@Base+0x28f4>
   15d38:	mov	r1, r2
   15d3c:	ldr	r3, [lr, #12]
   15d40:	str	r1, [sp, #4]
   15d44:	ands	r3, ip, r3, lsr #3
   15d48:	beq	15f10 <argp_parse@@Base+0x2af0>
   15d4c:	mov	r0, sp
   15d50:	bl	15018 <argp_parse@@Base+0x1bf8>
   15d54:	ldr	r3, [r5]
   15d58:	cmp	r0, #0
   15d5c:	bne	15efc <argp_parse@@Base+0x2adc>
   15d60:	ldr	r3, [r3, #12]
   15d64:	tst	r3, #8
   15d68:	beq	15d90 <argp_parse@@Base+0x2970>
   15d6c:	ldr	r3, [sp, #4]
   15d70:	cmp	r3, #0
   15d74:	beq	15d90 <argp_parse@@Base+0x2970>
   15d78:	add	r0, sp, #4
   15d7c:	bl	15018 <argp_parse@@Base+0x1bf8>
   15d80:	cmp	r0, #0
   15d84:	subne	r4, r4, #1
   15d88:	cmp	r4, #0
   15d8c:	bne	15c80 <argp_parse@@Base+0x2860>
   15d90:	ldr	r2, [r6, #20]
   15d94:	mov	r0, r6
   15d98:	mov	r3, #0
   15d9c:	ldr	r2, [r2, #24]
   15da0:	ldr	r1, [pc, #408]	; 15f40 <argp_parse@@Base+0x2b20>
   15da4:	bl	14edc <argp_parse@@Base+0x1abc>
   15da8:	ldr	r2, [r5, #20]
   15dac:	mov	r3, #0
   15db0:	ldr	r1, [pc, #392]	; 15f40 <argp_parse@@Base+0x2b20>
   15db4:	ldr	r2, [r2, #24]
   15db8:	uxtb	r6, r0
   15dbc:	mov	r0, r5
   15dc0:	bl	14edc <argp_parse@@Base+0x1abc>
   15dc4:	cmp	r6, #0
   15dc8:	lslne	r4, r6, #2
   15dcc:	movne	r7, r6
   15dd0:	uxtb	r5, r0
   15dd4:	beq	15ee0 <argp_parse@@Base+0x2ac0>
   15dd8:	cmp	r5, #0
   15ddc:	lslne	r9, r5, #2
   15de0:	movne	r8, r5
   15de4:	beq	15ec4 <argp_parse@@Base+0x2aa4>
   15de8:	bl	11760 <__ctype_tolower_loc@plt>
   15dec:	ldr	r3, [r0]
   15df0:	ldr	r4, [r3, r4]
   15df4:	ldr	r3, [r3, r9]
   15df8:	subs	r4, r4, r3
   15dfc:	bne	15c80 <argp_parse@@Base+0x2860>
   15e00:	subs	r4, r8, r7
   15e04:	bne	15c80 <argp_parse@@Base+0x2860>
   15e08:	adds	r4, r5, #0
   15e0c:	movne	r4, #1
   15e10:	cmp	r6, #0
   15e14:	rsbeq	r4, r4, #0
   15e18:	rsbne	r4, r4, #1
   15e1c:	cmp	r4, #0
   15e20:	bne	15c80 <argp_parse@@Base+0x2860>
   15e24:	cmp	r6, #0
   15e28:	bne	15c80 <argp_parse@@Base+0x2860>
   15e2c:	ldm	sp, {r0, r1}
   15e30:	adds	r4, r1, #0
   15e34:	movne	r4, #1
   15e38:	cmp	r0, #0
   15e3c:	rsbeq	r4, r4, #0
   15e40:	rsbne	r4, r4, #1
   15e44:	cmp	r4, #0
   15e48:	bne	15c80 <argp_parse@@Base+0x2860>
   15e4c:	cmp	r0, #0
   15e50:	beq	15c80 <argp_parse@@Base+0x2860>
   15e54:	bl	116b8 <strcasecmp@plt>
   15e58:	mov	r4, r0
   15e5c:	b	15c80 <argp_parse@@Base+0x2860>
   15e60:	mov	r1, ip
   15e64:	bge	15c8c <argp_parse@@Base+0x286c>
   15e68:	ldr	r1, [r1, #12]
   15e6c:	ldr	r3, [r1, #20]
   15e70:	cmp	r0, r3
   15e74:	blt	15e68 <argp_parse@@Base+0x2a48>
   15e78:	mov	r0, lr
   15e7c:	bl	15b18 <argp_parse@@Base+0x26f8>
   15e80:	subs	r4, r0, #0
   15e84:	mvneq	r4, #0
   15e88:	b	15c80 <argp_parse@@Base+0x2860>
   15e8c:	ldr	ip, [r1, #16]
   15e90:	ldr	r4, [r0, #12]
   15e94:	cmp	ip, #0
   15e98:	movne	r2, ip
   15e9c:	bne	15bf0 <argp_parse@@Base+0x27d0>
   15ea0:	ldr	r3, [r1, #12]
   15ea4:	b	15c00 <argp_parse@@Base+0x27e0>
   15ea8:	ldr	r2, [r5, #4]
   15eac:	str	r1, [sp]
   15eb0:	cmp	r2, #0
   15eb4:	ldr	r3, [r5]
   15eb8:	beq	15f20 <argp_parse@@Base+0x2b00>
   15ebc:	mov	ip, #1
   15ec0:	b	15d10 <argp_parse@@Base+0x28f0>
   15ec4:	ldr	r3, [sp, #4]
   15ec8:	cmp	r3, #0
   15ecc:	moveq	r9, r5
   15ed0:	ldrbne	r8, [r3]
   15ed4:	moveq	r8, r5
   15ed8:	lslne	r9, r8, #2
   15edc:	b	15de8 <argp_parse@@Base+0x29c8>
   15ee0:	ldr	r3, [sp]
   15ee4:	cmp	r3, #0
   15ee8:	moveq	r4, r6
   15eec:	ldrbne	r7, [r3]
   15ef0:	moveq	r7, r6
   15ef4:	lslne	r4, r7, #2
   15ef8:	b	15dd8 <argp_parse@@Base+0x29b8>
   15efc:	ldr	r3, [r3, #12]
   15f00:	tst	r3, #8
   15f04:	bne	15f2c <argp_parse@@Base+0x2b0c>
   15f08:	mov	r4, #1
   15f0c:	b	15c80 <argp_parse@@Base+0x2860>
   15f10:	ldr	r3, [r5]
   15f14:	b	15d60 <argp_parse@@Base+0x2940>
   15f18:	str	r2, [sp, #4]
   15f1c:	b	15d90 <argp_parse@@Base+0x2970>
   15f20:	mov	r1, r2
   15f24:	mov	ip, #1
   15f28:	b	15d3c <argp_parse@@Base+0x291c>
   15f2c:	ldr	r3, [sp, #4]
   15f30:	mov	r4, #1
   15f34:	cmp	r3, #0
   15f38:	bne	15d78 <argp_parse@@Base+0x2958>
   15f3c:	b	15c80 <argp_parse@@Base+0x2860>
   15f40:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15f44:	ldr	r3, [r0, #28]
   15f48:	ldr	r2, [r0, #24]
   15f4c:	push	{r4, r5, r6, lr}
   15f50:	mov	r5, r1
   15f54:	ldr	r1, [r0, #16]
   15f58:	sub	r2, r3, r2
   15f5c:	cmp	r2, r1
   15f60:	mov	r4, r0
   15f64:	movls	r2, r3
   15f68:	bhi	15fc4 <argp_parse@@Base+0x2ba4>
   15f6c:	ldr	r1, [r4, #20]
   15f70:	ldr	r0, [r4, #8]
   15f74:	cmp	r1, #0
   15f78:	addge	r5, r5, r1
   15f7c:	cmp	r5, r0
   15f80:	bcc	15fa4 <argp_parse@@Base+0x2b84>
   15f84:	ldr	r1, [r4, #32]
   15f88:	cmp	r1, r3
   15f8c:	bls	15fd4 <argp_parse@@Base+0x2bb4>
   15f90:	add	r1, r2, #1
   15f94:	mov	r3, #10
   15f98:	str	r1, [r4, #28]
   15f9c:	strb	r3, [r2]
   15fa0:	pop	{r4, r5, r6, pc}
   15fa4:	ldr	r2, [r4, #32]
   15fa8:	cmp	r2, r3
   15fac:	bls	15ff0 <argp_parse@@Base+0x2bd0>
   15fb0:	add	r1, r3, #1
   15fb4:	mov	r2, #32
   15fb8:	str	r1, [r4, #28]
   15fbc:	strb	r2, [r3]
   15fc0:	pop	{r4, r5, r6, pc}
   15fc4:	bl	18ed8 <argp_error@@Base+0xe00>
   15fc8:	ldr	r3, [r4, #28]
   15fcc:	mov	r2, r3
   15fd0:	b	15f6c <argp_parse@@Base+0x2b4c>
   15fd4:	mov	r1, #1
   15fd8:	mov	r0, r4
   15fdc:	bl	19568 <argp_error@@Base+0x1490>
   15fe0:	cmp	r0, #0
   15fe4:	popeq	{r4, r5, r6, pc}
   15fe8:	ldr	r2, [r4, #28]
   15fec:	b	15f90 <argp_parse@@Base+0x2b70>
   15ff0:	mov	r1, #1
   15ff4:	mov	r0, r4
   15ff8:	bl	19568 <argp_error@@Base+0x1490>
   15ffc:	cmp	r0, #0
   16000:	popeq	{r4, r5, r6, pc}
   16004:	ldr	r3, [r4, #28]
   16008:	b	15fb0 <argp_parse@@Base+0x2b90>
   1600c:	push	{r4, r5, r6, lr}
   16010:	ldr	r5, [r0, #8]
   16014:	ldr	r2, [r0, #12]
   16018:	ldr	ip, [r1, #12]
   1601c:	cmp	r5, #0
   16020:	orr	r2, r2, ip
   16024:	beq	1608c <argp_parse@@Base+0x2c6c>
   16028:	tst	r2, #16
   1602c:	bne	16068 <argp_parse@@Base+0x2c48>
   16030:	tst	r2, #1
   16034:	mov	r6, r3
   16038:	mov	r4, r0
   1603c:	bne	16070 <argp_parse@@Base+0x2c50>
   16040:	mov	r0, r5
   16044:	bl	117b4 <strlen@plt>
   16048:	add	r1, r0, #6
   1604c:	mov	r0, r6
   16050:	bl	15f44 <argp_parse@@Base+0x2b24>
   16054:	mov	r3, r5
   16058:	ldr	r2, [r4, #4]
   1605c:	mov	r0, r6
   16060:	ldr	r1, [pc, #56]	; 160a0 <argp_parse@@Base+0x2c80>
   16064:	bl	19588 <argp_error@@Base+0x14b0>
   16068:	mov	r0, #0
   1606c:	pop	{r4, r5, r6, pc}
   16070:	ldr	r2, [r0, #4]
   16074:	mov	r3, r5
   16078:	mov	r0, r6
   1607c:	ldr	r1, [pc, #32]	; 160a4 <argp_parse@@Base+0x2c84>
   16080:	bl	19588 <argp_error@@Base+0x14b0>
   16084:	mov	r0, #0
   16088:	pop	{r4, r5, r6, pc}
   1608c:	ldr	r5, [r1, #8]
   16090:	cmp	r5, #0
   16094:	bne	16028 <argp_parse@@Base+0x2c08>
   16098:	mov	r0, #0
   1609c:	pop	{r4, r5, r6, pc}
   160a0:	strdeq	sl, [r1], -ip
   160a4:	strdeq	sl, [r1], -r0
   160a8:	mov	ip, r0
   160ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160b0:	mov	r8, r2
   160b4:	sub	sp, sp, #28
   160b8:	mov	r2, ip
   160bc:	ldr	ip, [ip, #16]
   160c0:	mov	r9, r1
   160c4:	ldr	r1, [r0, #8]
   160c8:	str	ip, [sp, #8]
   160cc:	ldr	ip, [r8]
   160d0:	str	r1, [sp, #16]
   160d4:	mov	r0, r1
   160d8:	mov	r4, r3
   160dc:	ldr	r1, [pc, #456]	; 162ac <argp_parse@@Base+0x2e8c>
   160e0:	mov	r3, r9
   160e4:	mov	r5, ip
   160e8:	str	ip, [sp, #20]
   160ec:	ldr	r6, [sp, #64]	; 0x40
   160f0:	bl	15170 <argp_parse@@Base+0x1d50>
   160f4:	subs	r3, r0, #0
   160f8:	str	r3, [sp, #12]
   160fc:	beq	16258 <argp_parse@@Base+0x2e38>
   16100:	mov	r1, #10
   16104:	bl	115d4 <strchrnul@plt>
   16108:	ldrb	sl, [r0]
   1610c:	mov	r7, r0
   16110:	cmp	sl, #0
   16114:	bne	16214 <argp_parse@@Base+0x2df4>
   16118:	ldr	r5, [sp, #12]
   1611c:	add	r1, r7, #1
   16120:	sub	r1, r1, r5
   16124:	mov	r0, r6
   16128:	bl	15f44 <argp_parse@@Base+0x2b24>
   1612c:	ldr	r0, [r6, #28]
   16130:	sub	fp, r7, r5
   16134:	ldr	r1, [r6, #32]
   16138:	add	r2, r0, fp
   1613c:	cmp	r1, r2
   16140:	bcs	1615c <argp_parse@@Base+0x2d3c>
   16144:	mov	r1, fp
   16148:	mov	r0, r6
   1614c:	bl	19568 <argp_error@@Base+0x1490>
   16150:	cmp	r0, #0
   16154:	beq	16174 <argp_parse@@Base+0x2d54>
   16158:	ldr	r0, [r6, #28]
   1615c:	mov	r2, fp
   16160:	mov	r1, r5
   16164:	bl	11610 <memcpy@plt>
   16168:	ldr	r3, [r6, #28]
   1616c:	add	fp, r3, fp
   16170:	str	fp, [r6, #28]
   16174:	ldr	r3, [sp, #16]
   16178:	ldr	r2, [sp, #12]
   1617c:	cmp	r3, r2
   16180:	beq	1618c <argp_parse@@Base+0x2d6c>
   16184:	mov	r0, r2
   16188:	bl	142b8 <argp_parse@@Base+0xe98>
   1618c:	ldr	r3, [sp, #8]
   16190:	cmp	r3, #0
   16194:	beq	161d8 <argp_parse@@Base+0x2db8>
   16198:	ldr	r2, [r3]
   1619c:	cmp	r2, #0
   161a0:	beq	161d8 <argp_parse@@Base+0x2db8>
   161a4:	ldr	r5, [sp, #8]
   161a8:	mov	r3, r4
   161ac:	mov	r0, r2
   161b0:	str	r6, [sp]
   161b4:	mov	r2, r8
   161b8:	mov	r1, r9
   161bc:	bl	160a8 <argp_parse@@Base+0x2c88>
   161c0:	ldr	r2, [r5, #16]!
   161c4:	cmp	r2, #0
   161c8:	clz	r3, r0
   161cc:	lsr	r3, r3, #5
   161d0:	bne	161ac <argp_parse@@Base+0x2d8c>
   161d4:	mov	r4, r3
   161d8:	cmp	r4, #0
   161dc:	moveq	sl, #0
   161e0:	andne	sl, sl, #1
   161e4:	cmp	sl, #0
   161e8:	beq	16278 <argp_parse@@Base+0x2e58>
   161ec:	ldrb	r0, [r7]
   161f0:	cmp	r0, #0
   161f4:	bne	16288 <argp_parse@@Base+0x2e68>
   161f8:	ldr	r3, [sp, #20]
   161fc:	ldrb	r4, [r3]
   16200:	cmp	r4, #0
   16204:	moveq	r0, r4
   16208:	strbne	r0, [r3]
   1620c:	add	sp, sp, #28
   16210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16214:	ldrb	sl, [r5]
   16218:	cmp	sl, #0
   1621c:	beq	162a4 <argp_parse@@Base+0x2e84>
   16220:	mov	fp, #0
   16224:	add	r5, r0, #1
   16228:	add	fp, fp, #1
   1622c:	mov	r0, r5
   16230:	mov	r1, #10
   16234:	bl	115d4 <strchrnul@plt>
   16238:	cmp	fp, sl
   1623c:	bne	16224 <argp_parse@@Base+0x2e04>
   16240:	mov	r7, r0
   16244:	ldr	r2, [r8]
   16248:	mov	sl, #1
   1624c:	add	r2, r2, sl
   16250:	str	r2, [r8]
   16254:	b	1611c <argp_parse@@Base+0x2cfc>
   16258:	ldr	r3, [sp, #8]
   1625c:	cmp	r3, #0
   16260:	beq	16278 <argp_parse@@Base+0x2e58>
   16264:	ldr	r2, [r3]
   16268:	cmp	r2, #0
   1626c:	ldrne	r7, [sp, #12]
   16270:	movne	sl, r7
   16274:	bne	161a4 <argp_parse@@Base+0x2d84>
   16278:	clz	r0, r4
   1627c:	lsr	r0, r0, #5
   16280:	add	sp, sp, #28
   16284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16288:	ldr	r2, [sp, #20]
   1628c:	mov	r0, #1
   16290:	ldrb	r3, [r2]
   16294:	add	r3, r3, r0
   16298:	strb	r3, [r2]
   1629c:	add	sp, sp, #28
   162a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162a4:	ldr	r5, [sp, #12]
   162a8:	b	16244 <argp_parse@@Base+0x2e24>
   162ac:	andeq	r0, r0, #6
   162b0:	ldr	r2, [r0, #8]
   162b4:	cmp	r2, #0
   162b8:	beq	162c4 <argp_parse@@Base+0x2ea4>
   162bc:	mov	r0, #0
   162c0:	bx	lr
   162c4:	ldr	r2, [r1, #8]
   162c8:	cmp	r2, #0
   162cc:	bne	162bc <argp_parse@@Base+0x2e9c>
   162d0:	ldr	r1, [r1, #12]
   162d4:	ldr	r2, [r0, #12]
   162d8:	orr	r2, r2, r1
   162dc:	tst	r2, #16
   162e0:	ldreq	r2, [r3]
   162e4:	ldreq	r1, [r0, #4]
   162e8:	addeq	r0, r2, #1
   162ec:	streq	r0, [r3]
   162f0:	strbeq	r1, [r2]
   162f4:	b	162bc <argp_parse@@Base+0x2e9c>
   162f8:	mov	r3, r0
   162fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16300:	sub	sp, sp, #52	; 0x34
   16304:	ldr	r2, [r3, #16]
   16308:	str	r0, [sp, #24]
   1630c:	mov	r0, #16
   16310:	ldr	r4, [r3]
   16314:	str	r1, [sp, #28]
   16318:	str	r2, [sp, #8]
   1631c:	bl	14e54 <argp_parse@@Base+0x1a34>
   16320:	subs	r3, r0, #0
   16324:	str	r3, [sp, #20]
   16328:	beq	1698c <argp_parse@@Base+0x356c>
   1632c:	ldr	r2, [sp, #20]
   16330:	mov	r3, #0
   16334:	cmp	r4, #0
   16338:	str	r3, [r2, #4]
   1633c:	str	r3, [r2, #12]
   16340:	beq	16544 <argp_parse@@Base+0x3124>
   16344:	ldr	r5, [r4, #12]
   16348:	ands	r5, r5, #4
   1634c:	bne	169a0 <argp_parse@@Base+0x3580>
   16350:	add	r6, r4, #24
   16354:	mov	r9, r5
   16358:	mov	sl, r5
   1635c:	mov	fp, r2
   16360:	b	163a4 <argp_parse@@Base+0x2f84>
   16364:	ldr	r3, [r6, #-12]
   16368:	tst	r3, #4
   1636c:	addeq	r9, r9, #1
   16370:	streq	r9, [fp, #4]
   16374:	tst	r3, #8
   16378:	bne	163a0 <argp_parse@@Base+0x2f80>
   1637c:	sub	r3, r8, #1
   16380:	cmp	r3, #254	; 0xfe
   16384:	bhi	163a0 <argp_parse@@Base+0x2f80>
   16388:	bl	11784 <__ctype_b_loc@plt>
   1638c:	lsl	r8, r8, #1
   16390:	ldr	r3, [r0]
   16394:	ldrh	r3, [r3, r8]
   16398:	tst	r3, #16384	; 0x4000
   1639c:	addne	sl, sl, #1
   163a0:	add	r6, r6, #24
   163a4:	ldr	r8, [r6, #-20]	; 0xffffffec
   163a8:	cmp	r8, #0
   163ac:	bne	16364 <argp_parse@@Base+0x2f44>
   163b0:	ldr	r3, [r6, #-24]	; 0xffffffe8
   163b4:	cmp	r3, #0
   163b8:	bne	16364 <argp_parse@@Base+0x2f44>
   163bc:	ldr	r3, [r6, #-8]
   163c0:	cmp	r3, #0
   163c4:	bne	16364 <argp_parse@@Base+0x2f44>
   163c8:	ldr	r7, [r6, #-4]
   163cc:	cmp	r7, #0
   163d0:	bne	16364 <argp_parse@@Base+0x2f44>
   163d4:	rsb	r9, r9, r9, lsl #3
   163d8:	lsl	r0, r9, #2
   163dc:	bl	14e54 <argp_parse@@Base+0x1a34>
   163e0:	ldr	r6, [sp, #20]
   163e4:	str	r0, [r6]
   163e8:	add	r0, sl, #1
   163ec:	bl	14e54 <argp_parse@@Base+0x1a34>
   163f0:	ldr	r8, [r6]
   163f4:	mov	r3, r6
   163f8:	cmp	r0, #0
   163fc:	cmpne	r8, #0
   16400:	mov	sl, r0
   16404:	str	r0, [r3, #8]
   16408:	beq	16950 <argp_parse@@Base+0x3530>
   1640c:	ldr	r2, [sp, #20]
   16410:	ldr	r3, [pc, #1436]	; 169b4 <argp_parse@@Base+0x3594>
   16414:	ldr	r2, [r2, #4]
   16418:	cmp	r2, r3
   1641c:	bhi	1693c <argp_parse@@Base+0x351c>
   16420:	add	r8, r8, #28
   16424:	mov	r2, r8
   16428:	ldr	r3, [r4, #4]
   1642c:	mov	r8, sl
   16430:	mov	r9, r2
   16434:	cmp	r3, #0
   16438:	bne	16448 <argp_parse@@Base+0x3028>
   1643c:	ldr	r2, [r4]
   16440:	cmp	r2, #0
   16444:	beq	168f4 <argp_parse@@Base+0x34d4>
   16448:	str	r7, [r9, #-24]	; 0xffffffe8
   1644c:	ldr	r6, [r4, #20]
   16450:	str	r4, [r9, #-28]	; 0xffffffe4
   16454:	cmp	r6, #0
   16458:	str	sl, [r9, #-20]	; 0xffffffec
   1645c:	bne	16474 <argp_parse@@Base+0x3054>
   16460:	ldr	r2, [r4]
   16464:	cmp	r2, #0
   16468:	cmpeq	r3, #0
   1646c:	movne	r6, r5
   16470:	beq	16918 <argp_parse@@Base+0x34f8>
   16474:	ldr	r1, [sp, #28]
   16478:	str	r6, [r9, #-16]
   1647c:	mov	r5, r4
   16480:	ldr	r2, [r4, #12]
   16484:	mov	r3, r7
   16488:	str	r1, [r9, #-12]
   1648c:	ldr	r1, [sp, #24]
   16490:	str	r1, [r9, #-8]
   16494:	add	r3, r3, #1
   16498:	tst	r2, #8
   1649c:	str	r3, [r9, #-24]	; 0xffffffe8
   164a0:	bne	1650c <argp_parse@@Base+0x30ec>
   164a4:	ldr	fp, [r4, #4]
   164a8:	sub	r3, fp, #1
   164ac:	cmp	r3, #254	; 0xfe
   164b0:	bhi	1650c <argp_parse@@Base+0x30ec>
   164b4:	bl	11784 <__ctype_b_loc@plt>
   164b8:	lsl	r3, fp, #1
   164bc:	ldr	r2, [r0]
   164c0:	ldrh	r3, [r2, r3]
   164c4:	tst	r3, #16384	; 0x4000
   164c8:	beq	1650c <argp_parse@@Base+0x30ec>
   164cc:	cmp	r8, sl
   164d0:	uxtb	r1, fp
   164d4:	bcs	16504 <argp_parse@@Base+0x30e4>
   164d8:	ldrb	r3, [r8]
   164dc:	cmp	r3, r1
   164e0:	movne	r3, r8
   164e4:	subne	r0, sl, #1
   164e8:	bne	164fc <argp_parse@@Base+0x30dc>
   164ec:	b	1650c <argp_parse@@Base+0x30ec>
   164f0:	ldrb	r2, [r3, #1]!
   164f4:	cmp	r2, r1
   164f8:	beq	1650c <argp_parse@@Base+0x30ec>
   164fc:	cmp	r0, r3
   16500:	bne	164f0 <argp_parse@@Base+0x30d0>
   16504:	strb	r1, [sl]
   16508:	add	sl, sl, #1
   1650c:	ldr	r3, [r5, #28]
   16510:	add	r4, r4, #24
   16514:	cmp	r3, #0
   16518:	bne	16528 <argp_parse@@Base+0x3108>
   1651c:	ldr	r2, [r5, #24]
   16520:	cmp	r2, #0
   16524:	beq	168d0 <argp_parse@@Base+0x34b0>
   16528:	ldr	r2, [r5, #36]	; 0x24
   1652c:	tst	r2, #4
   16530:	beq	168e8 <argp_parse@@Base+0x34c8>
   16534:	ldr	r3, [r9, #-24]	; 0xffffffe8
   16538:	mov	r5, r4
   1653c:	b	16494 <argp_parse@@Base+0x3074>
   16540:	strb	r3, [sl]
   16544:	ldr	r3, [sp, #8]
   16548:	cmp	r3, #0
   1654c:	beq	16688 <argp_parse@@Base+0x3268>
   16550:	ldr	r3, [r3]
   16554:	cmp	r3, #0
   16558:	beq	16688 <argp_parse@@Base+0x3268>
   1655c:	ldr	r3, [sp, #20]
   16560:	add	r3, r3, #12
   16564:	str	r3, [sp, #44]	; 0x2c
   16568:	ldr	r3, [sp, #8]
   1656c:	ldr	r5, [r3, #12]
   16570:	cmp	r5, #0
   16574:	ldrne	r6, [r3, #8]
   16578:	bne	1658c <argp_parse@@Base+0x316c>
   1657c:	ldr	r3, [sp, #8]
   16580:	ldr	r6, [r3, #8]
   16584:	cmp	r6, #0
   16588:	beq	168b0 <argp_parse@@Base+0x3490>
   1658c:	ldr	r7, [sp, #24]
   16590:	ldr	r2, [sp, #8]
   16594:	mov	r0, #28
   16598:	ldr	r3, [r7, #16]
   1659c:	sub	r3, r2, r3
   165a0:	asr	r4, r3, #4
   165a4:	bl	14e54 <argp_parse@@Base+0x1a34>
   165a8:	subs	r1, r0, #0
   165ac:	beq	165ec <argp_parse@@Base+0x31cc>
   165b0:	ldr	r3, [sp, #28]
   165b4:	ldr	r0, [sp, #20]
   165b8:	cmp	r3, #0
   165bc:	str	r3, [r1, #12]
   165c0:	ldrne	r3, [r3, #20]
   165c4:	ldr	r2, [r0, #12]
   165c8:	addne	r3, r3, #1
   165cc:	moveq	r3, #0
   165d0:	str	r5, [r1, #8]
   165d4:	str	r6, [r1]
   165d8:	str	r4, [r1, #4]
   165dc:	str	r7, [r1, #16]
   165e0:	str	r3, [r1, #20]
   165e4:	str	r2, [r1, #24]
   165e8:	str	r1, [r0, #12]
   165ec:	ldr	r3, [sp, #8]
   165f0:	ldr	r0, [r3]
   165f4:	bl	162f8 <argp_parse@@Base+0x2ed8>
   165f8:	ldr	r3, [sp, #20]
   165fc:	ldr	r2, [r3, #12]
   16600:	cmp	r2, #0
   16604:	str	r0, [sp, #16]
   16608:	bne	16614 <argp_parse@@Base+0x31f4>
   1660c:	b	168b8 <argp_parse@@Base+0x3498>
   16610:	mov	r2, r3
   16614:	ldr	r3, [r2, #24]
   16618:	cmp	r3, #0
   1661c:	bne	16610 <argp_parse@@Base+0x31f0>
   16620:	add	r2, r2, #24
   16624:	ldr	r0, [sp, #16]
   16628:	mov	ip, r0
   1662c:	ldr	r3, [r0, #4]
   16630:	ldr	r1, [r0, #12]
   16634:	cmp	r3, #0
   16638:	str	r1, [r2]
   1663c:	mov	r2, #0
   16640:	str	r2, [r0, #12]
   16644:	beq	1666c <argp_parse@@Base+0x324c>
   16648:	ldr	lr, [sp, #20]
   1664c:	ldr	r2, [lr, #4]
   16650:	cmp	r2, #0
   16654:	bne	16694 <argp_parse@@Base+0x3274>
   16658:	ldr	r0, [r0]
   1665c:	ldr	r1, [ip, #8]
   16660:	stm	lr, {r0, r3}
   16664:	str	r1, [lr, #8]
   16668:	str	r2, [ip, #4]
   1666c:	ldr	r0, [sp, #16]
   16670:	bl	15090 <argp_parse@@Base+0x1c70>
   16674:	ldr	r2, [sp, #8]
   16678:	ldr	r3, [r2, #16]!
   1667c:	cmp	r3, #0
   16680:	str	r2, [sp, #8]
   16684:	bne	16568 <argp_parse@@Base+0x3148>
   16688:	ldr	r0, [sp, #20]
   1668c:	add	sp, sp, #52	; 0x34
   16690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16694:	add	r3, r3, r2
   16698:	str	r3, [sp, #36]	; 0x24
   1669c:	rsb	r0, r3, r3, lsl #3
   166a0:	lsl	r0, r0, #2
   166a4:	bl	14e54 <argp_parse@@Base+0x1a34>
   166a8:	ldr	r3, [sp, #20]
   166ac:	mov	r4, r0
   166b0:	str	r0, [sp, #32]
   166b4:	ldr	r0, [r3, #8]
   166b8:	bl	117b4 <strlen@plt>
   166bc:	ldr	r3, [sp, #16]
   166c0:	mov	r8, r0
   166c4:	ldr	r0, [r3, #8]
   166c8:	bl	117b4 <strlen@plt>
   166cc:	add	r0, r8, r0
   166d0:	add	r0, r0, #1
   166d4:	bl	14e54 <argp_parse@@Base+0x1a34>
   166d8:	cmp	r4, #0
   166dc:	cmpne	r0, #0
   166e0:	mov	r7, r0
   166e4:	beq	16964 <argp_parse@@Base+0x3544>
   166e8:	ldr	r3, [sp, #36]	; 0x24
   166ec:	ldr	r2, [pc, #704]	; 169b4 <argp_parse@@Base+0x3594>
   166f0:	cmp	r3, r2
   166f4:	bhi	16978 <argp_parse@@Base+0x3558>
   166f8:	ldr	r5, [sp, #20]
   166fc:	ldr	r9, [sp, #32]
   16700:	ldm	r5, {r3, r4}
   16704:	mov	r0, r9
   16708:	rsb	r6, r4, r4, lsl #3
   1670c:	mov	r1, r3
   16710:	lsl	r6, r6, #2
   16714:	mov	r2, r6
   16718:	str	r3, [sp, #40]	; 0x28
   1671c:	bl	11778 <mempcpy@plt>
   16720:	ldr	r3, [sp, #16]
   16724:	ldr	r1, [r3, #4]
   16728:	mov	ip, r1
   1672c:	str	r1, [sp, #4]
   16730:	rsb	r2, ip, ip, lsl #3
   16734:	ldr	r1, [r3]
   16738:	lsl	r2, r2, #2
   1673c:	bl	11610 <memcpy@plt>
   16740:	ldr	r5, [r5, #8]
   16744:	mov	r2, r8
   16748:	mov	r1, r5
   1674c:	mov	r0, r7
   16750:	bl	11610 <memcpy@plt>
   16754:	cmp	r4, #0
   16758:	beq	168c8 <argp_parse@@Base+0x34a8>
   1675c:	mov	r2, r9
   16760:	ldr	r3, [r2, #8]
   16764:	subs	r4, r4, #1
   16768:	sub	r3, r3, r5
   1676c:	add	r3, r7, r3
   16770:	str	r3, [r2, #8]
   16774:	add	r2, r2, #28
   16778:	bne	16760 <argp_parse@@Base+0x3340>
   1677c:	ldr	r3, [sp, #32]
   16780:	add	r1, r3, r6
   16784:	ldr	r3, [sp, #4]
   16788:	ldr	r2, [sp, #16]
   1678c:	cmp	r3, #0
   16790:	add	r3, r7, r8
   16794:	str	r3, [sp, #12]
   16798:	ldr	sl, [r2, #8]
   1679c:	beq	168c0 <argp_parse@@Base+0x34a0>
   167a0:	sub	r8, r3, #1
   167a4:	add	fp, r1, #28
   167a8:	mov	r9, r3
   167ac:	mov	r3, r8
   167b0:	mov	r8, fp
   167b4:	mov	fp, sl
   167b8:	mov	sl, r3
   167bc:	ldr	r5, [r8, #-24]	; 0xffffffe8
   167c0:	str	r9, [r8, #-20]	; 0xffffffec
   167c4:	cmp	r5, #0
   167c8:	ldr	r4, [r8, #-28]	; 0xffffffe4
   167cc:	bne	167e0 <argp_parse@@Base+0x33c0>
   167d0:	b	1686c <argp_parse@@Base+0x344c>
   167d4:	subs	r5, r5, #1
   167d8:	add	r4, r4, #24
   167dc:	beq	1686c <argp_parse@@Base+0x344c>
   167e0:	ldr	r3, [r4, #12]
   167e4:	tst	r3, #8
   167e8:	bne	167d4 <argp_parse@@Base+0x33b4>
   167ec:	ldr	r6, [r4, #4]
   167f0:	sub	r3, r6, #1
   167f4:	cmp	r3, #254	; 0xfe
   167f8:	bhi	167d4 <argp_parse@@Base+0x33b4>
   167fc:	bl	11784 <__ctype_b_loc@plt>
   16800:	lsl	r3, r6, #1
   16804:	ldr	r2, [r0]
   16808:	ldrh	r3, [r2, r3]
   1680c:	tst	r3, #16384	; 0x4000
   16810:	beq	167d4 <argp_parse@@Base+0x33b4>
   16814:	ldrb	r1, [fp]
   16818:	cmp	r1, r6
   1681c:	bne	167d4 <argp_parse@@Base+0x33b4>
   16820:	ldr	r3, [sp, #12]
   16824:	cmp	r7, r3
   16828:	bcs	16854 <argp_parse@@Base+0x3434>
   1682c:	ldrb	r3, [r7]
   16830:	cmp	r3, r1
   16834:	movne	r3, r7
   16838:	bne	1684c <argp_parse@@Base+0x342c>
   1683c:	b	1685c <argp_parse@@Base+0x343c>
   16840:	ldrb	r2, [r3, #1]!
   16844:	cmp	r2, r1
   16848:	beq	1685c <argp_parse@@Base+0x343c>
   1684c:	cmp	sl, r3
   16850:	bne	16840 <argp_parse@@Base+0x3420>
   16854:	strb	r1, [r9]
   16858:	add	r9, r9, #1
   1685c:	subs	r5, r5, #1
   16860:	add	fp, fp, #1
   16864:	add	r4, r4, #24
   16868:	bne	167e0 <argp_parse@@Base+0x33c0>
   1686c:	ldr	r3, [sp, #4]
   16870:	add	r8, r8, #28
   16874:	subs	r3, r3, #1
   16878:	str	r3, [sp, #4]
   1687c:	bne	167bc <argp_parse@@Base+0x339c>
   16880:	mov	r3, #0
   16884:	strb	r3, [r9]
   16888:	ldr	r0, [sp, #40]	; 0x28
   1688c:	bl	142b8 <argp_parse@@Base+0xe98>
   16890:	ldr	r4, [sp, #20]
   16894:	ldr	r0, [r4, #8]
   16898:	bl	142b8 <argp_parse@@Base+0xe98>
   1689c:	ldr	r2, [sp, #32]
   168a0:	str	r2, [r4]
   168a4:	ldr	r2, [sp, #36]	; 0x24
   168a8:	stmib	r4, {r2, r7}
   168ac:	b	1666c <argp_parse@@Base+0x324c>
   168b0:	ldr	r1, [sp, #28]
   168b4:	b	165ec <argp_parse@@Base+0x31cc>
   168b8:	ldr	r2, [sp, #44]	; 0x2c
   168bc:	b	16624 <argp_parse@@Base+0x3204>
   168c0:	ldr	r9, [sp, #12]
   168c4:	b	16880 <argp_parse@@Base+0x3460>
   168c8:	ldr	r1, [sp, #32]
   168cc:	b	16784 <argp_parse@@Base+0x3364>
   168d0:	ldr	r2, [r5, #40]	; 0x28
   168d4:	cmp	r2, #0
   168d8:	bne	16528 <argp_parse@@Base+0x3108>
   168dc:	ldr	r2, [r5, #44]	; 0x2c
   168e0:	cmp	r2, #0
   168e4:	bne	16528 <argp_parse@@Base+0x3108>
   168e8:	add	r9, r9, #28
   168ec:	mov	r5, r6
   168f0:	b	16434 <argp_parse@@Base+0x3014>
   168f4:	ldr	r2, [r4, #16]
   168f8:	cmp	r2, #0
   168fc:	beq	16920 <argp_parse@@Base+0x3500>
   16900:	str	r3, [r9, #-24]	; 0xffffffe8
   16904:	ldr	r6, [r4, #20]
   16908:	str	r4, [r9, #-28]	; 0xffffffe4
   1690c:	cmp	r6, #0
   16910:	str	sl, [r9, #-20]	; 0xffffffec
   16914:	bne	16474 <argp_parse@@Base+0x3054>
   16918:	add	r6, r5, #1
   1691c:	b	16474 <argp_parse@@Base+0x3054>
   16920:	ldr	r6, [r4, #20]
   16924:	cmp	r6, #0
   16928:	beq	16540 <argp_parse@@Base+0x3120>
   1692c:	str	r4, [r9, #-28]	; 0xffffffe4
   16930:	str	r3, [r9, #-24]	; 0xffffffe8
   16934:	str	sl, [r9, #-20]	; 0xffffffec
   16938:	b	16474 <argp_parse@@Base+0x3054>
   1693c:	ldr	r3, [pc, #116]	; 169b8 <argp_parse@@Base+0x3598>
   16940:	mov	r2, #476	; 0x1dc
   16944:	ldr	r1, [pc, #112]	; 169bc <argp_parse@@Base+0x359c>
   16948:	ldr	r0, [pc, #112]	; 169c0 <argp_parse@@Base+0x35a0>
   1694c:	bl	11988 <__assert_fail@plt>
   16950:	ldr	r3, [pc, #96]	; 169b8 <argp_parse@@Base+0x3598>
   16954:	ldr	r2, [pc, #104]	; 169c4 <argp_parse@@Base+0x35a4>
   16958:	ldr	r1, [pc, #92]	; 169bc <argp_parse@@Base+0x359c>
   1695c:	ldr	r0, [pc, #100]	; 169c8 <argp_parse@@Base+0x35a8>
   16960:	bl	11988 <__assert_fail@plt>
   16964:	ldr	r3, [pc, #96]	; 169cc <argp_parse@@Base+0x35ac>
   16968:	ldr	r2, [pc, #96]	; 169d0 <argp_parse@@Base+0x35b0>
   1696c:	ldr	r1, [pc, #72]	; 169bc <argp_parse@@Base+0x359c>
   16970:	ldr	r0, [pc, #92]	; 169d4 <argp_parse@@Base+0x35b4>
   16974:	bl	11988 <__assert_fail@plt>
   16978:	ldr	r3, [pc, #76]	; 169cc <argp_parse@@Base+0x35ac>
   1697c:	mov	r2, #972	; 0x3cc
   16980:	ldr	r1, [pc, #52]	; 169bc <argp_parse@@Base+0x359c>
   16984:	ldr	r0, [pc, #76]	; 169d8 <argp_parse@@Base+0x35b8>
   16988:	bl	11988 <__assert_fail@plt>
   1698c:	ldr	r3, [pc, #36]	; 169b8 <argp_parse@@Base+0x3598>
   16990:	ldr	r2, [pc, #68]	; 169dc <argp_parse@@Base+0x35bc>
   16994:	ldr	r1, [pc, #32]	; 169bc <argp_parse@@Base+0x359c>
   16998:	ldr	r0, [pc, #64]	; 169e0 <argp_parse@@Base+0x35c0>
   1699c:	bl	11988 <__assert_fail@plt>
   169a0:	ldr	r3, [pc, #16]	; 169b8 <argp_parse@@Base+0x3598>
   169a4:	mov	r2, #460	; 0x1cc
   169a8:	ldr	r1, [pc, #12]	; 169bc <argp_parse@@Base+0x359c>
   169ac:	ldr	r0, [pc, #48]	; 169e4 <argp_parse@@Base+0x35c4>
   169b0:	bl	11988 <__assert_fail@plt>
   169b4:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   169b8:	andeq	sl, r1, r4, asr #14
   169bc:	andeq	sl, r1, r8, lsl #16
   169c0:	andeq	sl, r1, ip, asr #16
   169c4:	ldrdeq	r0, [r0], -sl
   169c8:	andeq	sl, r1, r8, lsr #16
   169cc:	andeq	sl, r1, r0, asr r7
   169d0:	andeq	r0, r0, sl, asr #7
   169d4:	andeq	sl, r1, r8, lsl #17
   169d8:	andeq	sl, r1, r4, lsr #17
   169dc:	andeq	r0, r0, r2, asr #3
   169e0:	andeq	sl, r1, r4, lsl r8
   169e4:	andeq	sl, r1, r8, lsl r8
   169e8:	cmp	r1, #0
   169ec:	push	{r4, r5, r6, r7, r8, lr}
   169f0:	beq	16a68 <argp_parse@@Base+0x3648>
   169f4:	sub	r7, r1, #1
   169f8:	mov	r8, r2
   169fc:	mov	r6, r0
   16a00:	ldm	r6, {r4, r5}
   16a04:	cmp	r5, #0
   16a08:	sub	r5, r5, #1
   16a0c:	beq	16a4c <argp_parse@@Base+0x362c>
   16a10:	add	r4, r4, #24
   16a14:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16a18:	mov	r1, r8
   16a1c:	subs	r0, r3, #0
   16a20:	sub	r5, r5, #1
   16a24:	beq	16a40 <argp_parse@@Base+0x3620>
   16a28:	ldr	r3, [r4, #-12]
   16a2c:	tst	r3, #2
   16a30:	bne	16a40 <argp_parse@@Base+0x3620>
   16a34:	bl	11574 <strcmp@plt>
   16a38:	cmp	r0, #0
   16a3c:	beq	16a60 <argp_parse@@Base+0x3640>
   16a40:	cmn	r5, #1
   16a44:	add	r4, r4, #24
   16a48:	bne	16a14 <argp_parse@@Base+0x35f4>
   16a4c:	sub	r7, r7, #1
   16a50:	cmn	r7, #1
   16a54:	add	r6, r6, #28
   16a58:	bne	16a00 <argp_parse@@Base+0x35e0>
   16a5c:	mov	r6, #0
   16a60:	mov	r0, r6
   16a64:	pop	{r4, r5, r6, r7, r8, pc}
   16a68:	mov	r6, r1
   16a6c:	b	16a60 <argp_parse@@Base+0x3640>
   16a70:	push	{r4, r5, r6, lr}
   16a74:	subs	r4, r0, #0
   16a78:	mov	r5, r1
   16a7c:	beq	16a90 <argp_parse@@Base+0x3670>
   16a80:	mov	r1, #10
   16a84:	bl	117c0 <strchr@plt>
   16a88:	adds	r4, r0, #0
   16a8c:	movne	r4, #1
   16a90:	cmp	r5, #0
   16a94:	beq	16ac0 <argp_parse@@Base+0x36a0>
   16a98:	ldr	r3, [r5]
   16a9c:	cmp	r3, #0
   16aa0:	beq	16ac0 <argp_parse@@Base+0x36a0>
   16aa4:	ldr	r1, [r3, #16]
   16aa8:	ldr	r0, [r3, #8]
   16aac:	bl	16a70 <argp_parse@@Base+0x3650>
   16ab0:	ldr	r3, [r5, #16]!
   16ab4:	cmp	r3, #0
   16ab8:	add	r4, r4, r0
   16abc:	bne	16aa4 <argp_parse@@Base+0x3684>
   16ac0:	mov	r0, r4
   16ac4:	pop	{r4, r5, r6, pc}
   16ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16acc:	add	fp, sp, #32
   16ad0:	sub	sp, sp, #12
   16ad4:	ldr	r5, [r0, #4]
   16ad8:	cmp	r5, #0
   16adc:	bne	16ae8 <argp_parse@@Base+0x36c8>
   16ae0:	sub	sp, fp, #32
   16ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ae8:	mov	r6, r0
   16aec:	ldr	r0, [r0, #8]
   16af0:	mov	r9, r1
   16af4:	bl	117b4 <strlen@plt>
   16af8:	ldr	r8, [pc, #360]	; 16c68 <argp_parse@@Base+0x3848>
   16afc:	ldr	r4, [r6]
   16b00:	sub	r7, fp, #36	; 0x24
   16b04:	add	r3, r0, #15
   16b08:	bic	r3, r3, #7
   16b0c:	sub	sp, sp, r3
   16b10:	mov	sl, sp
   16b14:	str	sp, [r7, #-4]!
   16b18:	ldr	r2, [r4, #20]
   16b1c:	mov	r0, r4
   16b20:	mov	r3, r7
   16b24:	mov	r1, r8
   16b28:	ldr	r2, [r2, #24]
   16b2c:	bl	14edc <argp_parse@@Base+0x1abc>
   16b30:	subs	r5, r5, #1
   16b34:	add	r4, r4, #28
   16b38:	bne	16b18 <argp_parse@@Base+0x36f8>
   16b3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16b40:	cmp	sl, r3
   16b44:	bcc	16c48 <argp_parse@@Base+0x3828>
   16b48:	ldm	r6, {r4, r5}
   16b4c:	cmp	r5, #0
   16b50:	beq	16ae0 <argp_parse@@Base+0x36c0>
   16b54:	ldr	r7, [pc, #272]	; 16c6c <argp_parse@@Base+0x384c>
   16b58:	ldr	r2, [r4, #20]
   16b5c:	mov	r0, r4
   16b60:	mov	r3, r9
   16b64:	mov	r1, r7
   16b68:	ldr	r2, [r2, #24]
   16b6c:	bl	14edc <argp_parse@@Base+0x1abc>
   16b70:	subs	r5, r5, #1
   16b74:	add	r4, r4, #28
   16b78:	bne	16b58 <argp_parse@@Base+0x3738>
   16b7c:	ldm	r6, {r7, r8}
   16b80:	cmp	r8, #0
   16b84:	beq	16ae0 <argp_parse@@Base+0x36c0>
   16b88:	ldr	sl, [pc, #224]	; 16c70 <argp_parse@@Base+0x3850>
   16b8c:	add	r7, r7, #28
   16b90:	ldr	r5, [r7, #-24]	; 0xffffffe8
   16b94:	ldr	r4, [r7, #-28]	; 0xffffffe4
   16b98:	cmp	r5, #0
   16b9c:	movne	r6, r4
   16ba0:	bne	16bb4 <argp_parse@@Base+0x3794>
   16ba4:	b	16c10 <argp_parse@@Base+0x37f0>
   16ba8:	subs	r5, r5, #1
   16bac:	add	r4, r4, #24
   16bb0:	beq	16c10 <argp_parse@@Base+0x37f0>
   16bb4:	ldr	r2, [r4]
   16bb8:	cmp	r2, #0
   16bbc:	beq	16ba8 <argp_parse@@Base+0x3788>
   16bc0:	ldr	r1, [r4, #12]
   16bc4:	tst	r1, #4
   16bc8:	moveq	r6, r4
   16bcc:	tst	r1, #2
   16bd0:	bne	16ba8 <argp_parse@@Base+0x3788>
   16bd4:	ldr	r3, [r4, #8]
   16bd8:	ldr	r0, [r6, #12]
   16bdc:	cmp	r3, #0
   16be0:	orr	r1, r1, r0
   16be4:	beq	16c24 <argp_parse@@Base+0x3804>
   16be8:	tst	r1, #16
   16bec:	bne	16ba8 <argp_parse@@Base+0x3788>
   16bf0:	tst	r1, #1
   16bf4:	moveq	r1, sl
   16bf8:	ldrne	r1, [pc, #116]	; 16c74 <argp_parse@@Base+0x3854>
   16bfc:	mov	r0, r9
   16c00:	bl	19588 <argp_error@@Base+0x14b0>
   16c04:	subs	r5, r5, #1
   16c08:	add	r4, r4, #24
   16c0c:	bne	16bb4 <argp_parse@@Base+0x3794>
   16c10:	subs	r8, r8, #1
   16c14:	add	r7, r7, #28
   16c18:	bne	16b90 <argp_parse@@Base+0x3770>
   16c1c:	sub	sp, fp, #32
   16c20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c24:	tst	r1, #16
   16c28:	bne	16ba8 <argp_parse@@Base+0x3788>
   16c2c:	ldr	r3, [r6, #8]
   16c30:	cmp	r3, #0
   16c34:	bne	16bf0 <argp_parse@@Base+0x37d0>
   16c38:	ldr	r1, [pc, #56]	; 16c78 <argp_parse@@Base+0x3858>
   16c3c:	mov	r0, r9
   16c40:	bl	19588 <argp_error@@Base+0x14b0>
   16c44:	b	16ba8 <argp_parse@@Base+0x3788>
   16c48:	add	r1, r3, #1
   16c4c:	str	r1, [fp, #-40]	; 0xffffffd8
   16c50:	mov	r2, sl
   16c54:	ldr	r1, [pc, #32]	; 16c7c <argp_parse@@Base+0x385c>
   16c58:	strb	r5, [r3]
   16c5c:	mov	r0, r9
   16c60:	bl	19588 <argp_error@@Base+0x14b0>
   16c64:	b	16b48 <argp_parse@@Base+0x3728>
   16c68:			; <UNDEFINED> instruction: 0x000162b0
   16c6c:	andeq	r6, r1, ip
   16c70:	strdeq	sl, [r1], -r0
   16c74:	andeq	sl, r1, r0, ror #17
   16c78:	strdeq	sl, [r1], -ip
   16c7c:	ldrdeq	sl, [r1], -r8

00016c80 <argp_failure@@Base>:
   16c80:	push	{r3}		; (str r3, [sp, #-4]!)
   16c84:	push	{r4, r5, r6, r7, lr}
   16c88:	subs	r5, r0, #0
   16c8c:	sub	sp, sp, #200	; 0xc8
   16c90:	mov	r7, r1
   16c94:	mov	r6, r2
   16c98:	beq	16de8 <argp_failure@@Base+0x168>
   16c9c:	ldr	r3, [r5, #16]
   16ca0:	tst	r3, #2
   16ca4:	bne	16dd8 <argp_failure@@Base+0x158>
   16ca8:	ldr	r4, [r5, #44]	; 0x2c
   16cac:	cmp	r4, #0
   16cb0:	beq	16dd8 <argp_failure@@Base+0x158>
   16cb4:	mov	r0, r4
   16cb8:	bl	11904 <flockfile@plt>
   16cbc:	ldr	r0, [r5, #40]	; 0x28
   16cc0:	mov	r1, r4
   16cc4:	bl	1155c <fputs_unlocked@plt>
   16cc8:	ldr	r3, [sp, #220]	; 0xdc
   16ccc:	cmp	r3, #0
   16cd0:	beq	16d2c <argp_failure@@Base+0xac>
   16cd4:	ldr	r3, [r4, #20]
   16cd8:	ldr	r1, [r4, #24]
   16cdc:	add	r2, sp, #224	; 0xe0
   16ce0:	cmp	r3, r1
   16ce4:	str	r2, [sp]
   16ce8:	addcc	r1, r3, #1
   16cec:	movcc	r2, #58	; 0x3a
   16cf0:	strcc	r1, [r4, #20]
   16cf4:	strbcc	r2, [r3]
   16cf8:	bcs	16e34 <argp_failure@@Base+0x1b4>
   16cfc:	ldr	r3, [r4, #20]
   16d00:	ldr	r2, [r4, #24]
   16d04:	cmp	r3, r2
   16d08:	addcc	r1, r3, #1
   16d0c:	movcc	r2, #32
   16d10:	strcc	r1, [r4, #20]
   16d14:	strbcc	r2, [r3]
   16d18:	bcs	16e24 <argp_failure@@Base+0x1a4>
   16d1c:	ldr	r2, [sp]
   16d20:	ldr	r1, [sp, #220]	; 0xdc
   16d24:	mov	r0, r4
   16d28:	bl	118b0 <vfprintf@plt>
   16d2c:	cmp	r6, #0
   16d30:	beq	16d94 <argp_failure@@Base+0x114>
   16d34:	ldr	r3, [r4, #20]
   16d38:	ldr	r2, [r4, #24]
   16d3c:	cmp	r3, r2
   16d40:	addcc	r1, r3, #1
   16d44:	movcc	r2, #58	; 0x3a
   16d48:	strcc	r1, [r4, #20]
   16d4c:	strbcc	r2, [r3]
   16d50:	bcs	16e54 <argp_failure@@Base+0x1d4>
   16d54:	ldr	r3, [r4, #20]
   16d58:	ldr	r2, [r4, #24]
   16d5c:	cmp	r3, r2
   16d60:	addcc	r1, r3, #1
   16d64:	movcc	r2, #32
   16d68:	strcc	r1, [r4, #20]
   16d6c:	strbcc	r2, [r3]
   16d70:	bcs	16e44 <argp_failure@@Base+0x1c4>
   16d74:	mov	r2, #200	; 0xc8
   16d78:	mov	r1, sp
   16d7c:	mov	r0, r6
   16d80:	bl	117fc <strerror_r@plt>
   16d84:	cmp	r0, #0
   16d88:	beq	16e64 <argp_failure@@Base+0x1e4>
   16d8c:	mov	r1, r4
   16d90:	bl	1155c <fputs_unlocked@plt>
   16d94:	ldr	r3, [r4, #20]
   16d98:	ldr	r2, [r4, #24]
   16d9c:	cmp	r3, r2
   16da0:	addcc	r1, r3, #1
   16da4:	movcc	r2, #10
   16da8:	strcc	r1, [r4, #20]
   16dac:	strbcc	r2, [r3]
   16db0:	bcs	16e0c <argp_failure@@Base+0x18c>
   16db4:	mov	r0, r4
   16db8:	bl	116c4 <funlockfile@plt>
   16dbc:	cmp	r7, #0
   16dc0:	beq	16dd8 <argp_failure@@Base+0x158>
   16dc4:	cmp	r5, #0
   16dc8:	beq	16e1c <argp_failure@@Base+0x19c>
   16dcc:	ldr	r3, [r5, #16]
   16dd0:	tst	r3, #32
   16dd4:	beq	16e1c <argp_failure@@Base+0x19c>
   16dd8:	add	sp, sp, #200	; 0xc8
   16ddc:	pop	{r4, r5, r6, r7, lr}
   16de0:	add	sp, sp, #4
   16de4:	bx	lr
   16de8:	ldr	r3, [pc, #140]	; 16e7c <argp_failure@@Base+0x1fc>
   16dec:	ldr	r4, [r3]
   16df0:	cmp	r4, #0
   16df4:	beq	16dd8 <argp_failure@@Base+0x158>
   16df8:	mov	r0, r4
   16dfc:	bl	11904 <flockfile@plt>
   16e00:	ldr	r3, [pc, #120]	; 16e80 <argp_failure@@Base+0x200>
   16e04:	ldr	r0, [r3]
   16e08:	b	16cc0 <argp_failure@@Base+0x40>
   16e0c:	mov	r1, #10
   16e10:	mov	r0, r4
   16e14:	bl	11868 <__overflow@plt>
   16e18:	b	16db4 <argp_failure@@Base+0x134>
   16e1c:	mov	r0, r7
   16e20:	bl	1179c <exit@plt>
   16e24:	mov	r1, #32
   16e28:	mov	r0, r4
   16e2c:	bl	11868 <__overflow@plt>
   16e30:	b	16d1c <argp_failure@@Base+0x9c>
   16e34:	mov	r1, #58	; 0x3a
   16e38:	mov	r0, r4
   16e3c:	bl	11868 <__overflow@plt>
   16e40:	b	16cfc <argp_failure@@Base+0x7c>
   16e44:	mov	r1, #32
   16e48:	mov	r0, r4
   16e4c:	bl	11868 <__overflow@plt>
   16e50:	b	16d74 <argp_failure@@Base+0xf4>
   16e54:	mov	r1, #58	; 0x3a
   16e58:	mov	r0, r4
   16e5c:	bl	11868 <__overflow@plt>
   16e60:	b	16d54 <argp_failure@@Base+0xd4>
   16e64:	mov	r0, r6
   16e68:	bl	11754 <strerror@plt>
   16e6c:	ldr	r3, [pc, #16]	; 16e84 <argp_failure@@Base+0x204>
   16e70:	cmp	r0, #0
   16e74:	moveq	r0, r3
   16e78:	b	16d8c <argp_failure@@Base+0x10c>
   16e7c:	andeq	fp, r2, r8, ror #9
   16e80:	ldrdeq	fp, [r2], -r8
   16e84:	andeq	sl, r1, r4, lsl #18
   16e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e8c:	add	fp, sp, #32
   16e90:	cmp	r2, #0
   16e94:	sub	sp, sp, #116	; 0x74
   16e98:	str	r2, [fp, #-132]	; 0xffffff7c
   16e9c:	str	r0, [fp, #-112]	; 0xffffff90
   16ea0:	str	r1, [fp, #-104]	; 0xffffff98
   16ea4:	str	r3, [fp, #-96]	; 0xffffffa0
   16ea8:	beq	16f60 <argp_failure@@Base+0x2e0>
   16eac:	ldr	sl, [pc, #4064]	; 17e94 <argp_failure@@Base+0x1214>
   16eb0:	mov	r0, r2
   16eb4:	bl	11904 <flockfile@plt>
   16eb8:	ldr	r3, [sl, #36]	; 0x24
   16ebc:	cmp	r3, #0
   16ec0:	str	r3, [fp, #-108]	; 0xffffff94
   16ec4:	beq	17410 <argp_failure@@Base+0x790>
   16ec8:	mov	r3, #0
   16ecc:	mov	r1, r3
   16ed0:	ldr	r2, [sl, #32]
   16ed4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16ed8:	bl	18e5c <argp_error@@Base+0xd84>
   16edc:	subs	r9, r0, #0
   16ee0:	beq	17f54 <argp_failure@@Base+0x12d4>
   16ee4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16ee8:	ands	r3, r3, #11
   16eec:	streq	r3, [fp, #-136]	; 0xffffff78
   16ef0:	bne	1786c <argp_failure@@Base+0xbec>
   16ef4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16ef8:	ands	r4, r3, #3
   16efc:	bne	17660 <argp_failure@@Base+0x9e0>
   16f00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16f04:	tst	r3, #16
   16f08:	bne	1763c <argp_failure@@Base+0x9bc>
   16f0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16f10:	tst	r3, #4
   16f14:	bne	17620 <argp_failure@@Base+0x9a0>
   16f18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16f1c:	tst	r3, #8
   16f20:	bne	16fb4 <argp_failure@@Base+0x334>
   16f24:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16f28:	tst	r3, #32
   16f2c:	bne	173e8 <argp_failure@@Base+0x768>
   16f30:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16f34:	tst	r3, #64	; 0x40
   16f38:	bne	16f68 <argp_failure@@Base+0x2e8>
   16f3c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16f40:	bl	116c4 <funlockfile@plt>
   16f44:	ldr	r3, [fp, #-136]	; 0xffffff78
   16f48:	cmp	r3, #0
   16f4c:	beq	16f58 <argp_failure@@Base+0x2d8>
   16f50:	mov	r0, r3
   16f54:	bl	15090 <argp_parse@@Base+0x1c70>
   16f58:	mov	r0, r9
   16f5c:	bl	19448 <argp_error@@Base+0x1370>
   16f60:	sub	sp, fp, #32
   16f64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f68:	ldr	r5, [pc, #3880]	; 17e98 <argp_failure@@Base+0x1218>
   16f6c:	ldr	r2, [r5]
   16f70:	cmp	r2, #0
   16f74:	beq	16f3c <argp_failure@@Base+0x2bc>
   16f78:	cmp	r4, #0
   16f7c:	beq	16fa4 <argp_failure@@Base+0x324>
   16f80:	ldr	r3, [r9, #28]
   16f84:	ldr	r2, [r9, #32]
   16f88:	cmp	r3, r2
   16f8c:	bcs	17f38 <argp_failure@@Base+0x12b8>
   16f90:	add	r1, r3, #1
   16f94:	mov	r2, #10
   16f98:	str	r1, [r9, #28]
   16f9c:	strb	r2, [r3]
   16fa0:	ldr	r2, [r5]
   16fa4:	ldr	r1, [pc, #3824]	; 17e9c <argp_failure@@Base+0x121c>
   16fa8:	mov	r0, r9
   16fac:	bl	19588 <argp_error@@Base+0x14b0>
   16fb0:	b	16f3c <argp_failure@@Base+0x2bc>
   16fb4:	ldr	r3, [fp, #-136]	; 0xffffff78
   16fb8:	ldr	r3, [r3, #4]
   16fbc:	cmp	r3, #0
   16fc0:	str	r3, [fp, #-108]	; 0xffffff94
   16fc4:	beq	16f24 <argp_failure@@Base+0x2a4>
   16fc8:	cmp	r4, #0
   16fcc:	beq	17de8 <argp_failure@@Base+0x1168>
   16fd0:	ldr	r3, [r9, #28]
   16fd4:	ldr	r2, [r9, #32]
   16fd8:	cmp	r3, r2
   16fdc:	bcs	17f8c <argp_failure@@Base+0x130c>
   16fe0:	add	r1, r3, #1
   16fe4:	mov	r2, #10
   16fe8:	str	r1, [r9, #28]
   16fec:	strb	r2, [r3]
   16ff0:	ldr	r3, [fp, #-136]	; 0xffffff78
   16ff4:	ldr	r2, [fp, #-136]	; 0xffffff78
   16ff8:	ldr	r3, [r3, #4]
   16ffc:	ldr	r8, [r2]
   17000:	str	r3, [fp, #-108]	; 0xffffff94
   17004:	ldr	r3, [fp, #-108]	; 0xffffff94
   17008:	cmp	r3, #0
   1700c:	mov	r3, #0
   17010:	str	r3, [fp, #-88]	; 0xffffffa8
   17014:	str	r3, [fp, #-84]	; 0xffffffac
   17018:	str	r3, [fp, #-80]	; 0xffffffb0
   1701c:	beq	173d8 <argp_failure@@Base+0x758>
   17020:	str	sl, [fp, #-100]	; 0xffffff9c
   17024:	ldr	lr, [r9, #28]
   17028:	ldr	r3, [r9, #24]
   1702c:	ldr	r5, [r9, #16]
   17030:	sub	lr, lr, r3
   17034:	cmp	lr, r5
   17038:	ldr	r6, [r8]
   1703c:	ldr	sl, [r8, #8]
   17040:	bhi	17b40 <argp_failure@@Base+0xec0>
   17044:	ldr	r1, [r9, #4]
   17048:	ldr	r7, [r6, #12]
   1704c:	str	r1, [fp, #-116]	; 0xffffff8c
   17050:	ldr	r1, [r9, #12]
   17054:	mov	r3, #0
   17058:	str	r1, [fp, #-120]	; 0xffffff88
   1705c:	sub	r1, fp, #88	; 0x58
   17060:	str	r3, [r9, #4]
   17064:	and	r2, r7, #8
   17068:	str	r1, [fp, #-68]	; 0xffffffbc
   1706c:	ldr	r1, [fp, #-104]	; 0xffffff98
   17070:	mov	r0, #1
   17074:	cmp	r2, r3
   17078:	mov	r4, r2
   1707c:	str	r0, [fp, #-64]	; 0xffffffc0
   17080:	str	r8, [fp, #-76]	; 0xffffffb4
   17084:	str	r9, [fp, #-72]	; 0xffffffb8
   17088:	str	r1, [fp, #-60]	; 0xffffffc4
   1708c:	bne	179cc <argp_failure@@Base+0xd4c>
   17090:	ldr	ip, [r8, #4]
   17094:	cmp	ip, r3
   17098:	beq	170c4 <argp_failure@@Base+0x444>
   1709c:	add	r0, r6, #24
   170a0:	ldr	r3, [r0, #-24]	; 0xffffffe8
   170a4:	cmp	r3, #0
   170a8:	beq	170b8 <argp_failure@@Base+0x438>
   170ac:	ldr	r3, [r0, #-12]
   170b0:	tst	r3, #2
   170b4:	beq	179c8 <argp_failure@@Base+0xd48>
   170b8:	subs	ip, ip, #1
   170bc:	add	r0, r0, #24
   170c0:	bne	170a0 <argp_failure@@Base+0x420>
   170c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   170c8:	cmp	lr, r5
   170cc:	str	r2, [fp, #-128]	; 0xffffff80
   170d0:	ldr	r5, [r3, #8]
   170d4:	bhi	179e0 <argp_failure@@Base+0xd60>
   170d8:	str	r5, [r9, #12]
   170dc:	ldr	r5, [r8, #4]
   170e0:	cmp	r5, #0
   170e4:	beq	17168 <argp_failure@@Base+0x4e8>
   170e8:	mov	r4, r6
   170ec:	str	r8, [fp, #-124]	; 0xffffff84
   170f0:	b	17108 <argp_failure@@Base+0x488>
   170f4:	subs	r5, r5, #1
   170f8:	add	r4, r4, #24
   170fc:	beq	1715c <argp_failure@@Base+0x4dc>
   17100:	ldr	r7, [r4, #12]
   17104:	and	r2, r7, #8
   17108:	cmp	r2, #0
   1710c:	bne	170f4 <argp_failure@@Base+0x474>
   17110:	ldr	r8, [r4, #4]
   17114:	sub	r2, r8, #1
   17118:	cmp	r2, #254	; 0xfe
   1711c:	bhi	170f4 <argp_failure@@Base+0x474>
   17120:	bl	11784 <__ctype_b_loc@plt>
   17124:	lsl	r2, r8, #1
   17128:	ldr	r1, [r0]
   1712c:	ldrh	r2, [r1, r2]
   17130:	tst	r2, #16384	; 0x4000
   17134:	beq	170f4 <argp_failure@@Base+0x474>
   17138:	ldrb	r2, [sl]
   1713c:	cmp	r8, r2
   17140:	bne	170f4 <argp_failure@@Base+0x474>
   17144:	tst	r7, #2
   17148:	beq	17a8c <argp_failure@@Base+0xe0c>
   1714c:	subs	r5, r5, #1
   17150:	add	sl, sl, #1
   17154:	add	r4, r4, #24
   17158:	bne	17100 <argp_failure@@Base+0x480>
   1715c:	ldr	r4, [r6, #12]
   17160:	ldr	r8, [fp, #-124]	; 0xffffff84
   17164:	and	r4, r4, #8
   17168:	ldr	r3, [r9, #28]
   1716c:	ldr	r1, [r9, #24]
   17170:	cmp	r4, #0
   17174:	ldr	r2, [r9, #16]
   17178:	sub	r3, r3, r1
   1717c:	beq	179f8 <argp_failure@@Base+0xd78>
   17180:	cmp	r3, r2
   17184:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17188:	ldr	r4, [r3, #16]
   1718c:	bhi	17cc0 <argp_failure@@Base+0x1040>
   17190:	str	r4, [r9, #12]
   17194:	ldr	r5, [r8, #4]
   17198:	cmp	r5, #0
   1719c:	addne	r4, r6, #24
   171a0:	bne	171b4 <argp_failure@@Base+0x534>
   171a4:	b	17244 <argp_failure@@Base+0x5c4>
   171a8:	subs	r5, r5, #1
   171ac:	add	r4, r4, #24
   171b0:	beq	17244 <argp_failure@@Base+0x5c4>
   171b4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   171b8:	cmp	r3, #0
   171bc:	beq	171a8 <argp_failure@@Base+0x528>
   171c0:	ldr	r3, [r4, #-12]
   171c4:	tst	r3, #2
   171c8:	bne	171a8 <argp_failure@@Base+0x528>
   171cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   171d0:	sub	r1, fp, #76	; 0x4c
   171d4:	ldr	r0, [r3, #16]
   171d8:	bl	153c0 <argp_parse@@Base+0x1fa0>
   171dc:	ldr	sl, [r4, #-24]	; 0xffffffe8
   171e0:	mov	r0, sl
   171e4:	bl	117b4 <strlen@plt>
   171e8:	subs	r7, r0, #0
   171ec:	beq	171a8 <argp_failure@@Base+0x528>
   171f0:	ldr	r2, [r9, #28]
   171f4:	ldr	lr, [r9, #32]
   171f8:	add	ip, r2, r7
   171fc:	cmp	lr, ip
   17200:	mov	r1, r7
   17204:	mov	r0, r9
   17208:	bcs	1721c <argp_failure@@Base+0x59c>
   1720c:	bl	19568 <argp_error@@Base+0x1490>
   17210:	cmp	r0, #0
   17214:	beq	171a8 <argp_failure@@Base+0x528>
   17218:	ldr	r2, [r9, #28]
   1721c:	mov	r0, r2
   17220:	mov	r1, sl
   17224:	mov	r2, r7
   17228:	bl	11610 <memcpy@plt>
   1722c:	ldr	r2, [r9, #28]
   17230:	subs	r5, r5, #1
   17234:	add	r3, r2, r7
   17238:	str	r3, [r9, #28]
   1723c:	add	r4, r4, #24
   17240:	bne	171b4 <argp_failure@@Base+0x534>
   17244:	ldr	r3, [r9, #28]
   17248:	ldr	r1, [r9, #24]
   1724c:	ldr	r2, [r9, #16]
   17250:	sub	r3, r3, r1
   17254:	cmp	r3, r2
   17258:	bhi	17c74 <argp_failure@@Base+0xff4>
   1725c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17260:	mov	r3, #0
   17264:	cmp	r2, r3
   17268:	str	r3, [r9, #4]
   1726c:	beq	17b5c <argp_failure@@Base+0xedc>
   17270:	ldr	r3, [r6, #12]
   17274:	tst	r3, #8
   17278:	bne	172a4 <argp_failure@@Base+0x624>
   1727c:	ldr	r4, [r6, #4]
   17280:	sub	r3, r4, #1
   17284:	cmp	r3, #254	; 0xfe
   17288:	bhi	172a4 <argp_failure@@Base+0x624>
   1728c:	bl	11784 <__ctype_b_loc@plt>
   17290:	lsl	r4, r4, #1
   17294:	ldr	r3, [r0]
   17298:	ldrh	r3, [r3, r4]
   1729c:	tst	r3, #16384	; 0x4000
   172a0:	bne	172b0 <argp_failure@@Base+0x630>
   172a4:	ldr	r3, [r6]
   172a8:	cmp	r3, #0
   172ac:	beq	17f24 <argp_failure@@Base+0x12a4>
   172b0:	ldr	r3, [r9, #28]
   172b4:	ldr	r1, [r9, #24]
   172b8:	ldr	r2, [r9, #16]
   172bc:	sub	r3, r3, r1
   172c0:	cmp	r3, r2
   172c4:	bhi	17b0c <argp_failure@@Base+0xe8c>
   172c8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   172cc:	str	r3, [r9, #4]
   172d0:	ldr	r3, [fp, #-108]	; 0xffffff94
   172d4:	add	r8, r8, #28
   172d8:	subs	r3, r3, #1
   172dc:	str	r3, [fp, #-108]	; 0xffffff94
   172e0:	ldr	r3, [fp, #-120]	; 0xffffff88
   172e4:	str	r3, [r9, #12]
   172e8:	bne	17024 <argp_failure@@Base+0x3a4>
   172ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   172f0:	ldr	sl, [fp, #-100]	; 0xffffff9c
   172f4:	cmp	r3, #0
   172f8:	beq	173d8 <argp_failure@@Base+0x758>
   172fc:	ldr	r3, [sl, #4]
   17300:	cmp	r3, #0
   17304:	beq	173d8 <argp_failure@@Base+0x758>
   17308:	ldr	r3, [fp, #-104]	; 0xffffff98
   1730c:	ldr	r1, [pc, #2956]	; 17ea0 <argp_failure@@Base+0x1220>
   17310:	cmp	r3, #0
   17314:	ldr	r0, [pc, #2952]	; 17ea4 <argp_failure@@Base+0x1224>
   17318:	ldrne	r2, [r3]
   1731c:	ldreq	r2, [fp, #-104]	; 0xffffff98
   17320:	ldr	r3, [fp, #-104]	; 0xffffff98
   17324:	bl	15170 <argp_parse@@Base+0x1d50>
   17328:	subs	r4, r0, #0
   1732c:	beq	173d8 <argp_failure@@Base+0x758>
   17330:	ldrb	r3, [r4]
   17334:	cmp	r3, #0
   17338:	beq	173cc <argp_failure@@Base+0x74c>
   1733c:	ldr	r3, [r9, #28]
   17340:	ldr	r2, [r9, #32]
   17344:	cmp	r3, r2
   17348:	bcs	17fe8 <argp_failure@@Base+0x1368>
   1734c:	add	r1, r3, #1
   17350:	mov	r2, #10
   17354:	str	r1, [r9, #28]
   17358:	strb	r2, [r3]
   1735c:	mov	r0, r4
   17360:	bl	117b4 <strlen@plt>
   17364:	subs	r5, r0, #0
   17368:	beq	17fc4 <argp_failure@@Base+0x1344>
   1736c:	ldr	r0, [r9, #28]
   17370:	ldr	r2, [r9, #32]
   17374:	add	r3, r0, r5
   17378:	cmp	r2, r3
   1737c:	bcs	17398 <argp_failure@@Base+0x718>
   17380:	mov	r1, r5
   17384:	mov	r0, r9
   17388:	bl	19568 <argp_error@@Base+0x1490>
   1738c:	cmp	r0, #0
   17390:	beq	17fc4 <argp_failure@@Base+0x1344>
   17394:	ldr	r0, [r9, #28]
   17398:	mov	r2, r5
   1739c:	mov	r1, r4
   173a0:	bl	11610 <memcpy@plt>
   173a4:	ldr	r3, [r9, #28]
   173a8:	add	r3, r3, r5
   173ac:	str	r3, [r9, #28]
   173b0:	ldr	r2, [r9, #32]
   173b4:	cmp	r2, r3
   173b8:	bls	17fcc <argp_failure@@Base+0x134c>
   173bc:	add	r1, r3, #1
   173c0:	mov	r2, #10
   173c4:	str	r1, [r9, #28]
   173c8:	strb	r2, [r3]
   173cc:	ldr	r3, [pc, #2768]	; 17ea4 <argp_failure@@Base+0x1224>
   173d0:	cmp	r4, r3
   173d4:	bne	17f18 <argp_failure@@Base+0x1298>
   173d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   173dc:	mov	r4, #1
   173e0:	tst	r3, #32
   173e4:	beq	16f30 <argp_failure@@Base+0x2b0>
   173e8:	mov	r3, #0
   173ec:	str	r3, [sp]
   173f0:	str	r9, [sp, #4]
   173f4:	mov	r3, r4
   173f8:	ldr	r1, [fp, #-104]	; 0xffffff98
   173fc:	ldr	r0, [fp, #-112]	; 0xffffff90
   17400:	mov	r2, #1
   17404:	bl	1556c <argp_parse@@Base+0x214c>
   17408:	orr	r4, r4, r0
   1740c:	b	16f30 <argp_failure@@Base+0x2b0>
   17410:	ldr	r0, [pc, #2704]	; 17ea8 <argp_failure@@Base+0x1228>
   17414:	bl	11718 <getenv@plt>
   17418:	mov	lr, sl
   1741c:	sub	r3, fp, #76	; 0x4c
   17420:	mov	ip, r3
   17424:	str	r3, [fp, #-100]	; 0xffffff9c
   17428:	mov	r6, r0
   1742c:	ldm	lr!, {r0, r1, r2, r3}
   17430:	cmp	r6, #0
   17434:	stmia	ip!, {r0, r1, r2, r3}
   17438:	ldm	lr!, {r0, r1, r2, r3}
   1743c:	stmia	ip!, {r0, r1, r2, r3}
   17440:	ldm	lr, {r0, r1}
   17444:	stm	ip, {r0, r1}
   17448:	beq	16ec8 <argp_failure@@Base+0x248>
   1744c:	ldrb	r9, [r6]
   17450:	ldr	r8, [pc, #2644]	; 17eac <argp_failure@@Base+0x122c>
   17454:	cmp	r9, #0
   17458:	beq	175ac <argp_failure@@Base+0x92c>
   1745c:	bl	11784 <__ctype_b_loc@plt>
   17460:	mov	r5, r0
   17464:	ldr	r1, [r0]
   17468:	b	17470 <argp_failure@@Base+0x7f0>
   1746c:	ldrb	r9, [r6, #1]!
   17470:	lsl	r3, r9, #1
   17474:	ldrh	r3, [r1, r3]
   17478:	tst	r3, #8192	; 0x2000
   1747c:	bne	1746c <argp_failure@@Base+0x7ec>
   17480:	ands	r2, r3, #1024	; 0x400
   17484:	beq	175a4 <argp_failure@@Base+0x924>
   17488:	cmp	r9, #95	; 0x5f
   1748c:	cmpne	r9, #45	; 0x2d
   17490:	lsl	r3, r3, #28
   17494:	moveq	r7, #1
   17498:	movne	r7, #0
   1749c:	orrs	r3, r7, r3, lsr #31
   174a0:	beq	17d60 <argp_failure@@Base+0x10e0>
   174a4:	mov	r4, r6
   174a8:	ldrb	r3, [r4, #1]!
   174ac:	cmp	r3, #95	; 0x5f
   174b0:	cmpne	r3, #45	; 0x2d
   174b4:	lsl	r2, r3, #1
   174b8:	moveq	r0, #1
   174bc:	ldrh	r2, [r1, r2]
   174c0:	movne	r0, #0
   174c4:	lsl	ip, r2, #28
   174c8:	orrs	r0, r0, ip, lsr #31
   174cc:	bne	174a8 <argp_failure@@Base+0x828>
   174d0:	tst	r2, #8192	; 0x2000
   174d4:	sub	r7, r4, r6
   174d8:	beq	174f0 <argp_failure@@Base+0x870>
   174dc:	ldrb	r3, [r4, #1]!
   174e0:	lsl	r2, r3, #1
   174e4:	ldrh	r2, [r1, r2]
   174e8:	tst	r2, #8192	; 0x2000
   174ec:	bne	174dc <argp_failure@@Base+0x85c>
   174f0:	cmp	r3, #44	; 0x2c
   174f4:	cmpne	r3, #0
   174f8:	beq	1760c <argp_failure@@Base+0x98c>
   174fc:	cmp	r3, #61	; 0x3d
   17500:	beq	17968 <argp_failure@@Base+0xce8>
   17504:	ldrb	r3, [r4]
   17508:	lsl	r3, r3, #1
   1750c:	ldrh	r3, [r1, r3]
   17510:	tst	r3, #2048	; 0x800
   17514:	bne	17908 <argp_failure@@Base+0xc88>
   17518:	ldr	r3, [fp, #-108]	; 0xffffff94
   1751c:	mov	r9, r3
   17520:	str	r3, [fp, #-116]	; 0xffffff8c
   17524:	ldr	r5, [pc, #2436]	; 17eb0 <argp_failure@@Base+0x1230>
   17528:	b	17538 <argp_failure@@Base+0x8b8>
   1752c:	add	r5, r5, #16
   17530:	cmp	r5, r8
   17534:	beq	17dc8 <argp_failure@@Base+0x1148>
   17538:	mov	r0, r5
   1753c:	bl	117b4 <strlen@plt>
   17540:	cmp	r0, r7
   17544:	bne	1752c <argp_failure@@Base+0x8ac>
   17548:	mov	r2, r7
   1754c:	mov	r1, r5
   17550:	mov	r0, r6
   17554:	bl	11958 <strncmp@plt>
   17558:	cmp	r0, #0
   1755c:	bne	1752c <argp_failure@@Base+0x8ac>
   17560:	cmp	r9, #0
   17564:	beq	17574 <argp_failure@@Base+0x8f4>
   17568:	ldrb	r1, [r5, #14]
   1756c:	cmp	r1, #0
   17570:	beq	17fa8 <argp_failure@@Base+0x1328>
   17574:	ldrb	r3, [r5, #15]
   17578:	sub	r2, fp, #36	; 0x24
   1757c:	add	r3, r2, r3
   17580:	ldr	r2, [fp, #-116]	; 0xffffff8c
   17584:	str	r2, [r3, #-40]	; 0xffffffd8
   17588:	cmp	r5, r8
   1758c:	beq	17dc8 <argp_failure@@Base+0x1148>
   17590:	ldrb	r9, [r4]
   17594:	cmp	r9, #44	; 0x2c
   17598:	beq	17ca8 <argp_failure@@Base+0x1028>
   1759c:	mov	r6, r4
   175a0:	b	17454 <argp_failure@@Base+0x7d4>
   175a4:	cmp	r9, #0
   175a8:	bne	17f00 <argp_failure@@Base+0x1280>
   175ac:	ldr	lr, [fp, #-44]	; 0xffffffd4
   175b0:	ldr	r1, [pc, #2296]	; 17eb0 <argp_failure@@Base+0x1230>
   175b4:	add	r3, r1, #16
   175b8:	cmp	r3, r8
   175bc:	mov	r1, r3
   175c0:	beq	17d04 <argp_failure@@Base+0x1084>
   175c4:	ldrb	r2, [r3, #14]
   175c8:	cmp	r2, #0
   175cc:	bne	175b4 <argp_failure@@Base+0x934>
   175d0:	ldrb	r0, [r3, #15]
   175d4:	sub	ip, fp, #36	; 0x24
   175d8:	cmp	r0, #32
   175dc:	add	ip, ip, r0
   175e0:	beq	175b4 <argp_failure@@Base+0x934>
   175e4:	ldr	r0, [ip, #-40]	; 0xffffffd8
   175e8:	cmp	r0, lr
   175ec:	blt	175b4 <argp_failure@@Base+0x934>
   175f0:	ldr	r1, [pc, #2236]	; 17eb4 <argp_failure@@Base+0x1234>
   175f4:	ldr	r0, [fp, #-104]	; 0xffffff98
   175f8:	stm	sp, {r1, r3}
   175fc:	ldr	r3, [pc, #2228]	; 17eb8 <argp_failure@@Base+0x1238>
   17600:	mov	r1, r2
   17604:	bl	16c80 <argp_failure@@Base>
   17608:	b	16ec8 <argp_failure@@Base+0x248>
   1760c:	cmp	r9, #110	; 0x6e
   17610:	beq	17998 <argp_failure@@Base+0xd18>
   17614:	mov	r9, #1
   17618:	str	r9, [fp, #-116]	; 0xffffff8c
   1761c:	b	17524 <argp_failure@@Base+0x8a4>
   17620:	ldr	r3, [fp, #4]
   17624:	ldr	r1, [pc, #2192]	; 17ebc <argp_failure@@Base+0x123c>
   17628:	mov	r2, r3
   1762c:	mov	r0, r9
   17630:	bl	19588 <argp_error@@Base+0x14b0>
   17634:	mov	r4, #1
   17638:	b	16f18 <argp_failure@@Base+0x298>
   1763c:	mov	r2, #1
   17640:	mov	r3, #0
   17644:	stm	sp, {r2, r9}
   17648:	ldr	r1, [fp, #-104]	; 0xffffff98
   1764c:	mov	r2, r3
   17650:	ldr	r0, [fp, #-112]	; 0xffffff90
   17654:	bl	1556c <argp_parse@@Base+0x214c>
   17658:	orr	r4, r4, r0
   1765c:	b	16f0c <argp_failure@@Base+0x28c>
   17660:	ldr	r3, [fp, #-112]	; 0xffffff90
   17664:	mov	r4, #1
   17668:	mov	r6, r4
   1766c:	ldr	r1, [r3, #16]
   17670:	ldr	r0, [r3, #8]
   17674:	bl	16a70 <argp_parse@@Base+0x3650>
   17678:	mov	r1, #0
   1767c:	add	r3, r0, #14
   17680:	bic	r3, r3, #7
   17684:	sub	sp, sp, r3
   17688:	add	r7, sp, #8
   1768c:	mov	r2, r0
   17690:	mov	r0, r7
   17694:	bl	11808 <memset@plt>
   17698:	sub	r3, fp, #76	; 0x4c
   1769c:	str	r3, [fp, #-100]	; 0xffffff9c
   176a0:	ldr	r8, [fp, #-136]	; 0xffffff78
   176a4:	str	r7, [fp, #-108]	; 0xffffff94
   176a8:	b	177c4 <argp_failure@@Base+0xb44>
   176ac:	cmp	r4, #0
   176b0:	ldr	r3, [fp, #-108]	; 0xffffff94
   176b4:	ldr	r5, [r9, #12]
   176b8:	ldrne	r2, [pc, #2048]	; 17ec0 <argp_failure@@Base+0x1240>
   176bc:	str	r7, [r9, #12]
   176c0:	ldreq	r2, [pc, #2044]	; 17ec4 <argp_failure@@Base+0x1244>
   176c4:	str	r3, [fp, #-76]	; 0xffffffb4
   176c8:	ldr	r1, [pc, #2040]	; 17ec8 <argp_failure@@Base+0x1248>
   176cc:	ldr	r3, [fp, #4]
   176d0:	mov	r0, r9
   176d4:	bl	19588 <argp_error@@Base+0x14b0>
   176d8:	ldr	r3, [r9, #28]
   176dc:	ldr	r1, [r9, #24]
   176e0:	ldr	r2, [r9, #16]
   176e4:	sub	r3, r3, r1
   176e8:	cmp	r3, r2
   176ec:	ldr	r7, [sl, #28]
   176f0:	bhi	17858 <argp_failure@@Base+0xbd8>
   176f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   176f8:	ldr	r4, [r9, #4]
   176fc:	tst	r3, #2
   17700:	str	r7, [r9, #4]
   17704:	beq	1783c <argp_failure@@Base+0xbbc>
   17708:	ldr	r3, [r8, #4]
   1770c:	cmp	r3, #0
   17710:	beq	17760 <argp_failure@@Base+0xae0>
   17714:	ldr	ip, [r9, #28]
   17718:	ldr	r2, [r9, #32]
   1771c:	add	r3, ip, #12
   17720:	cmp	r2, r3
   17724:	bcs	17740 <argp_failure@@Base+0xac0>
   17728:	mov	r1, #12
   1772c:	mov	r0, r9
   17730:	bl	19568 <argp_error@@Base+0x1490>
   17734:	cmp	r0, #0
   17738:	beq	17760 <argp_failure@@Base+0xae0>
   1773c:	ldr	ip, [r9, #28]
   17740:	ldr	r3, [pc, #1924]	; 17ecc <argp_failure@@Base+0x124c>
   17744:	ldm	r3!, {r0, r1, r2}
   17748:	str	r0, [ip]
   1774c:	str	r1, [ip, #4]
   17750:	str	r2, [ip, #8]
   17754:	ldr	r3, [r9, #28]
   17758:	add	r3, r3, #12
   1775c:	str	r3, [r9, #28]
   17760:	mov	r3, r6
   17764:	ldr	r1, [fp, #-104]	; 0xffffff98
   17768:	str	r9, [sp]
   1776c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17770:	ldr	r0, [fp, #-112]	; 0xffffff90
   17774:	bl	160a8 <argp_parse@@Base+0x2c88>
   17778:	ldr	r3, [r9, #28]
   1777c:	ldr	r1, [r9, #24]
   17780:	sub	r1, r3, r1
   17784:	mov	r7, r0
   17788:	ldr	r0, [r9, #16]
   1778c:	cmp	r1, r0
   17790:	strls	r5, [r9, #12]
   17794:	bhi	17808 <argp_failure@@Base+0xb88>
   17798:	ldr	r1, [r9, #32]
   1779c:	str	r4, [r9, #4]
   177a0:	cmp	r1, r3
   177a4:	bls	177ec <argp_failure@@Base+0xb6c>
   177a8:	add	r1, r3, #1
   177ac:	mov	r2, #10
   177b0:	str	r1, [r9, #28]
   177b4:	strb	r2, [r3]
   177b8:	cmp	r7, #0
   177bc:	mov	r4, #0
   177c0:	beq	17864 <argp_failure@@Base+0xbe4>
   177c4:	ldr	r3, [r9, #28]
   177c8:	ldr	r1, [r9, #24]
   177cc:	ldr	r2, [r9, #16]
   177d0:	sub	r3, r3, r1
   177d4:	cmp	r3, r2
   177d8:	ldr	r7, [sl, #28]
   177dc:	bls	176ac <argp_failure@@Base+0xa2c>
   177e0:	mov	r0, r9
   177e4:	bl	18ed8 <argp_error@@Base+0xe00>
   177e8:	b	176ac <argp_failure@@Base+0xa2c>
   177ec:	mov	r1, r6
   177f0:	mov	r0, r9
   177f4:	bl	19568 <argp_error@@Base+0x1490>
   177f8:	cmp	r0, #0
   177fc:	beq	177b8 <argp_failure@@Base+0xb38>
   17800:	ldr	r3, [r9, #28]
   17804:	b	177a8 <argp_failure@@Base+0xb28>
   17808:	mov	r0, r9
   1780c:	bl	18ed8 <argp_error@@Base+0xe00>
   17810:	ldr	r3, [r9, #28]
   17814:	ldr	r1, [r9, #24]
   17818:	ldr	r0, [r9, #16]
   1781c:	sub	r1, r3, r1
   17820:	cmp	r1, r0
   17824:	str	r5, [r9, #12]
   17828:	bls	17798 <argp_failure@@Base+0xb18>
   1782c:	mov	r0, r9
   17830:	bl	18ed8 <argp_error@@Base+0xe00>
   17834:	ldr	r3, [r9, #28]
   17838:	b	17798 <argp_failure@@Base+0xb18>
   1783c:	mov	r1, r9
   17840:	mov	r0, r8
   17844:	bl	16ac8 <argp_parse@@Base+0x36a8>
   17848:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1784c:	orr	r3, r3, #2
   17850:	str	r3, [fp, #-96]	; 0xffffffa0
   17854:	b	17760 <argp_failure@@Base+0xae0>
   17858:	mov	r0, r9
   1785c:	bl	18ed8 <argp_error@@Base+0xe00>
   17860:	b	176f4 <argp_failure@@Base+0xa74>
   17864:	mov	r4, #1
   17868:	b	16f00 <argp_failure@@Base+0x280>
   1786c:	mov	r1, #0
   17870:	ldr	r0, [fp, #-112]	; 0xffffff90
   17874:	bl	162f8 <argp_parse@@Base+0x2ed8>
   17878:	ldr	r2, [pc, #1616]	; 17ed0 <argp_failure@@Base+0x1250>
   1787c:	ldr	r4, [r0, #4]
   17880:	ldr	r5, [r0]
   17884:	mov	r1, r4
   17888:	mov	r6, r0
   1788c:	str	r0, [fp, #-136]	; 0xffffff78
   17890:	mov	r0, r5
   17894:	bl	169e8 <argp_parse@@Base+0x35c8>
   17898:	ldr	r2, [pc, #1588]	; 17ed4 <argp_failure@@Base+0x1254>
   1789c:	cmp	r0, #0
   178a0:	mvnne	r3, #0
   178a4:	strne	r3, [r0, #12]
   178a8:	movne	r3, r6
   178ac:	mov	r0, r5
   178b0:	ldrne	r4, [r3, #4]
   178b4:	mov	r1, r4
   178b8:	bl	169e8 <argp_parse@@Base+0x35c8>
   178bc:	cmp	r0, #0
   178c0:	mvnne	r3, #0
   178c4:	strne	r3, [r0, #12]
   178c8:	ldrne	r3, [fp, #-136]	; 0xffffff78
   178cc:	ldrne	r4, [r3, #4]
   178d0:	cmp	r4, #0
   178d4:	beq	16ef4 <argp_failure@@Base+0x274>
   178d8:	mov	r3, r5
   178dc:	mov	r1, #0
   178e0:	str	r1, [r3, #24]
   178e4:	add	r1, r1, #1
   178e8:	cmp	r1, r4
   178ec:	add	r3, r3, #28
   178f0:	bne	178e0 <argp_failure@@Base+0xc60>
   178f4:	mov	r0, r5
   178f8:	ldr	r3, [pc, #1496]	; 17ed8 <argp_failure@@Base+0x1258>
   178fc:	mov	r2, #28
   17900:	bl	1191c <qsort@plt>
   17904:	b	16ef4 <argp_failure@@Base+0x274>
   17908:	mov	r2, #10
   1790c:	mov	r1, #0
   17910:	mov	r0, r4
   17914:	bl	11580 <strtol@plt>
   17918:	ldrb	r3, [r4]
   1791c:	ldr	r2, [r5]
   17920:	lsl	r3, r3, #1
   17924:	ldrh	r3, [r2, r3]
   17928:	tst	r3, #2048	; 0x800
   1792c:	str	r0, [fp, #-116]	; 0xffffff8c
   17930:	beq	17958 <argp_failure@@Base+0xcd8>
   17934:	ldrb	r3, [r4, #1]!
   17938:	lsl	r3, r3, #1
   1793c:	ldrh	r3, [r2, r3]
   17940:	tst	r3, #2048	; 0x800
   17944:	bne	17934 <argp_failure@@Base+0xcb4>
   17948:	b	17958 <argp_failure@@Base+0xcd8>
   1794c:	ldrb	r3, [r4, #1]!
   17950:	lsl	r3, r3, #1
   17954:	ldrh	r3, [r2, r3]
   17958:	tst	r3, #8192	; 0x2000
   1795c:	bne	1794c <argp_failure@@Base+0xccc>
   17960:	ldr	r9, [fp, #-108]	; 0xffffff94
   17964:	b	17524 <argp_failure@@Base+0x8a4>
   17968:	ldrb	r3, [r4, #1]
   1796c:	add	r4, r4, #1
   17970:	lsl	r3, r3, #1
   17974:	ldrh	r3, [r1, r3]
   17978:	tst	r3, #8192	; 0x2000
   1797c:	beq	17510 <argp_failure@@Base+0x890>
   17980:	ldrb	r3, [r4, #1]!
   17984:	lsl	r3, r3, #1
   17988:	ldrh	r3, [r1, r3]
   1798c:	tst	r3, #8192	; 0x2000
   17990:	bne	17980 <argp_failure@@Base+0xd00>
   17994:	b	17510 <argp_failure@@Base+0x890>
   17998:	ldrb	r3, [r6, #1]
   1799c:	cmp	r3, #111	; 0x6f
   179a0:	bne	17614 <argp_failure@@Base+0x994>
   179a4:	ldrb	r3, [r6, #2]
   179a8:	cmp	r3, #45	; 0x2d
   179ac:	bne	17614 <argp_failure@@Base+0x994>
   179b0:	ldr	r3, [fp, #-108]	; 0xffffff94
   179b4:	add	r6, r6, #3
   179b8:	sub	r7, r7, #3
   179bc:	str	r3, [fp, #-116]	; 0xffffff8c
   179c0:	mov	r9, #1
   179c4:	b	17524 <argp_failure@@Base+0x8a4>
   179c8:	mov	r3, #1
   179cc:	str	r3, [fp, #-128]	; 0xffffff80
   179d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   179d4:	cmp	lr, r5
   179d8:	ldr	r5, [r3, #8]
   179dc:	bls	170d8 <argp_failure@@Base+0x458>
   179e0:	mov	r0, r9
   179e4:	bl	18ed8 <argp_error@@Base+0xe00>
   179e8:	ldr	r7, [r6, #12]
   179ec:	and	r2, r7, #8
   179f0:	mov	r4, r2
   179f4:	b	170d8 <argp_failure@@Base+0x458>
   179f8:	cmp	r3, r2
   179fc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17a00:	ldr	r4, [r3, #12]
   17a04:	bhi	17cb4 <argp_failure@@Base+0x1034>
   17a08:	str	r4, [r9, #12]
   17a0c:	ldr	r5, [r8, #4]
   17a10:	cmp	r5, #0
   17a14:	beq	17244 <argp_failure@@Base+0x5c4>
   17a18:	add	r4, r6, #24
   17a1c:	ldr	r7, [fp, #-100]	; 0xffffff9c
   17a20:	b	17a30 <argp_failure@@Base+0xdb0>
   17a24:	subs	r5, r5, #1
   17a28:	add	r4, r4, #24
   17a2c:	beq	17244 <argp_failure@@Base+0x5c4>
   17a30:	ldr	r3, [r4, #-24]	; 0xffffffe8
   17a34:	cmp	r3, #0
   17a38:	beq	17a24 <argp_failure@@Base+0xda4>
   17a3c:	ldr	r3, [r4, #-12]
   17a40:	tst	r3, #2
   17a44:	bne	17a24 <argp_failure@@Base+0xda4>
   17a48:	sub	r1, fp, #76	; 0x4c
   17a4c:	ldr	r0, [r7, #12]
   17a50:	bl	153c0 <argp_parse@@Base+0x1fa0>
   17a54:	ldr	r2, [r4, #-24]	; 0xffffffe8
   17a58:	ldr	r1, [pc, #1148]	; 17edc <argp_failure@@Base+0x125c>
   17a5c:	mov	r0, r9
   17a60:	bl	19588 <argp_error@@Base+0x14b0>
   17a64:	ldr	r3, [r6, #8]
   17a68:	ldr	r1, [pc, #1136]	; 17ee0 <argp_failure@@Base+0x1260>
   17a6c:	subs	r2, r3, #0
   17a70:	mov	r0, r9
   17a74:	beq	17a24 <argp_failure@@Base+0xda4>
   17a78:	ldr	ip, [r6, #12]
   17a7c:	tst	ip, #1
   17a80:	ldrne	r1, [pc, #1116]	; 17ee4 <argp_failure@@Base+0x1264>
   17a84:	bl	19588 <argp_error@@Base+0x14b0>
   17a88:	b	17a24 <argp_failure@@Base+0xda4>
   17a8c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17a90:	sub	r1, fp, #76	; 0x4c
   17a94:	ldr	r0, [r3, #8]
   17a98:	bl	153c0 <argp_parse@@Base+0x1fa0>
   17a9c:	ldr	r3, [r9, #28]
   17aa0:	ldr	r2, [r9, #32]
   17aa4:	cmp	r3, r2
   17aa8:	bcs	17ce8 <argp_failure@@Base+0x1068>
   17aac:	add	r2, r3, #1
   17ab0:	str	r2, [r9, #28]
   17ab4:	mov	r2, #45	; 0x2d
   17ab8:	strb	r2, [r3]
   17abc:	ldr	r3, [r9, #28]
   17ac0:	ldr	r2, [r9, #32]
   17ac4:	ldrb	r7, [sl]
   17ac8:	cmp	r3, r2
   17acc:	bcs	17ccc <argp_failure@@Base+0x104c>
   17ad0:	add	r2, r3, #1
   17ad4:	str	r2, [r9, #28]
   17ad8:	strb	r7, [r3]
   17adc:	ldr	r3, [fp, #-128]	; 0xffffff80
   17ae0:	cmp	r3, #0
   17ae4:	beq	17c80 <argp_failure@@Base+0x1000>
   17ae8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17aec:	ldr	r3, [r3]
   17af0:	cmp	r3, #0
   17af4:	bne	17c80 <argp_failure@@Base+0x1000>
   17af8:	ldr	r3, [r6, #8]
   17afc:	cmp	r3, #0
   17b00:	movne	r3, #1
   17b04:	strne	r3, [fp, #-80]	; 0xffffffb0
   17b08:	b	1714c <argp_failure@@Base+0x4cc>
   17b0c:	mov	r0, r9
   17b10:	bl	18ed8 <argp_error@@Base+0xe00>
   17b14:	ldr	r2, [fp, #-116]	; 0xffffff8c
   17b18:	ldr	r3, [r9, #28]
   17b1c:	ldr	r1, [r9, #24]
   17b20:	str	r2, [r9, #4]
   17b24:	ldr	r2, [r9, #16]
   17b28:	sub	r3, r3, r1
   17b2c:	cmp	r3, r2
   17b30:	bls	172d0 <argp_failure@@Base+0x650>
   17b34:	mov	r0, r9
   17b38:	bl	18ed8 <argp_error@@Base+0xe00>
   17b3c:	b	172d0 <argp_failure@@Base+0x650>
   17b40:	mov	r0, r9
   17b44:	bl	18ed8 <argp_error@@Base+0xe00>
   17b48:	ldr	lr, [r9, #28]
   17b4c:	ldr	r2, [r9, #24]
   17b50:	ldr	r5, [r9, #16]
   17b54:	sub	lr, lr, r2
   17b58:	b	17044 <argp_failure@@Base+0x3c4>
   17b5c:	ldr	r4, [r6, #16]
   17b60:	ldr	r1, [r6, #4]
   17b64:	mov	r0, r4
   17b68:	ldr	r3, [fp, #-104]	; 0xffffff98
   17b6c:	ldr	r2, [r8, #20]
   17b70:	bl	15170 <argp_parse@@Base+0x1d50>
   17b74:	subs	r5, r0, #0
   17b78:	beq	17c30 <argp_failure@@Base+0xfb0>
   17b7c:	ldrb	r3, [r5]
   17b80:	cmp	r3, #0
   17b84:	beq	17c20 <argp_failure@@Base+0xfa0>
   17b88:	ldr	r3, [r9, #28]
   17b8c:	ldr	r1, [r9, #24]
   17b90:	ldr	r2, [r9, #16]
   17b94:	sub	r3, r3, r1
   17b98:	cmp	r3, r2
   17b9c:	bhi	17e20 <argp_failure@@Base+0x11a0>
   17ba0:	ldr	r7, [r9, #20]
   17ba4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17ba8:	bic	r7, r7, r7, asr #31
   17bac:	ldr	r6, [r3, #20]
   17bb0:	mov	r3, r6
   17bb4:	str	r6, [r9, #4]
   17bb8:	add	r2, r6, #3
   17bbc:	cmp	r2, r7
   17bc0:	str	r3, [r9, #12]
   17bc4:	bcs	17d70 <argp_failure@@Base+0x10f0>
   17bc8:	ldr	r3, [r9, #28]
   17bcc:	ldr	r2, [r9, #32]
   17bd0:	cmp	r3, r2
   17bd4:	bcs	17f70 <argp_failure@@Base+0x12f0>
   17bd8:	add	r1, r3, #1
   17bdc:	mov	r2, #10
   17be0:	str	r1, [r9, #28]
   17be4:	strb	r2, [r3]
   17be8:	mov	r0, r5
   17bec:	bl	117b4 <strlen@plt>
   17bf0:	subs	r6, r0, #0
   17bf4:	beq	17c20 <argp_failure@@Base+0xfa0>
   17bf8:	ldr	r0, [r9, #28]
   17bfc:	ldr	r2, [r9, #32]
   17c00:	add	r3, r0, r6
   17c04:	cmp	r2, r3
   17c08:	bcs	17e04 <argp_failure@@Base+0x1184>
   17c0c:	mov	r1, r6
   17c10:	mov	r0, r9
   17c14:	bl	19568 <argp_error@@Base+0x1490>
   17c18:	cmp	r0, #0
   17c1c:	bne	17e00 <argp_failure@@Base+0x1180>
   17c20:	cmp	r4, r5
   17c24:	beq	17c30 <argp_failure@@Base+0xfb0>
   17c28:	mov	r0, r5
   17c2c:	bl	142b8 <argp_parse@@Base+0xe98>
   17c30:	ldr	r3, [r9, #28]
   17c34:	ldr	r2, [r9, #24]
   17c38:	ldr	r1, [r9, #16]
   17c3c:	sub	r2, r3, r2
   17c40:	cmp	r2, r1
   17c44:	bhi	17d50 <argp_failure@@Base+0x10d0>
   17c48:	ldr	r1, [r9, #32]
   17c4c:	mov	r2, #0
   17c50:	cmp	r1, r3
   17c54:	str	r2, [r9, #4]
   17c58:	bls	17d34 <argp_failure@@Base+0x10b4>
   17c5c:	add	r1, r3, #1
   17c60:	mov	r2, #10
   17c64:	str	r1, [r9, #28]
   17c68:	strb	r2, [r3]
   17c6c:	str	r8, [fp, #-88]	; 0xffffffa8
   17c70:	b	172b0 <argp_failure@@Base+0x630>
   17c74:	mov	r0, r9
   17c78:	bl	18ed8 <argp_error@@Base+0xe00>
   17c7c:	b	1725c <argp_failure@@Base+0x5dc>
   17c80:	ldr	r2, [r6, #8]
   17c84:	cmp	r2, #0
   17c88:	beq	1714c <argp_failure@@Base+0x4cc>
   17c8c:	ldr	r3, [r6, #12]
   17c90:	mov	r0, r9
   17c94:	tst	r3, #1
   17c98:	ldrne	r1, [pc, #584]	; 17ee8 <argp_failure@@Base+0x1268>
   17c9c:	ldreq	r1, [pc, #584]	; 17eec <argp_failure@@Base+0x126c>
   17ca0:	bl	19588 <argp_error@@Base+0x14b0>
   17ca4:	b	1714c <argp_failure@@Base+0x4cc>
   17ca8:	ldrb	r9, [r4, #1]
   17cac:	add	r4, r4, #1
   17cb0:	b	1759c <argp_failure@@Base+0x91c>
   17cb4:	mov	r0, r9
   17cb8:	bl	18ed8 <argp_error@@Base+0xe00>
   17cbc:	b	17a08 <argp_failure@@Base+0xd88>
   17cc0:	mov	r0, r9
   17cc4:	bl	18ed8 <argp_error@@Base+0xe00>
   17cc8:	b	17190 <argp_failure@@Base+0x510>
   17ccc:	mov	r1, #1
   17cd0:	mov	r0, r9
   17cd4:	bl	19568 <argp_error@@Base+0x1490>
   17cd8:	cmp	r0, #0
   17cdc:	beq	17adc <argp_failure@@Base+0xe5c>
   17ce0:	ldr	r3, [r9, #28]
   17ce4:	b	17ad0 <argp_failure@@Base+0xe50>
   17ce8:	mov	r1, #1
   17cec:	mov	r0, r9
   17cf0:	bl	19568 <argp_error@@Base+0x1490>
   17cf4:	cmp	r0, #0
   17cf8:	beq	17abc <argp_failure@@Base+0xe3c>
   17cfc:	ldr	r3, [r9, #28]
   17d00:	b	17aac <argp_failure@@Base+0xe2c>
   17d04:	ldr	lr, [fp, #-100]	; 0xffffff9c
   17d08:	ldr	sl, [pc, #388]	; 17e94 <argp_failure@@Base+0x1214>
   17d0c:	mov	r4, #1
   17d10:	ldm	lr!, {r0, r1, r2, r3}
   17d14:	mov	ip, sl
   17d18:	stmia	ip!, {r0, r1, r2, r3}
   17d1c:	ldm	lr!, {r0, r1, r2, r3}
   17d20:	stmia	ip!, {r0, r1, r2, r3}
   17d24:	ldm	lr, {r0, r1}
   17d28:	stm	ip, {r0, r1}
   17d2c:	str	r4, [sl, #36]	; 0x24
   17d30:	b	16ec8 <argp_failure@@Base+0x248>
   17d34:	mov	r1, #1
   17d38:	mov	r0, r9
   17d3c:	bl	19568 <argp_error@@Base+0x1490>
   17d40:	cmp	r0, #0
   17d44:	beq	17c6c <argp_failure@@Base+0xfec>
   17d48:	ldr	r3, [r9, #28]
   17d4c:	b	17c5c <argp_failure@@Base+0xfdc>
   17d50:	mov	r0, r9
   17d54:	bl	18ed8 <argp_error@@Base+0xe00>
   17d58:	ldr	r3, [r9, #28]
   17d5c:	b	17c48 <argp_failure@@Base+0xfc8>
   17d60:	mov	r7, r3
   17d64:	mov	r4, r6
   17d68:	mov	r3, r9
   17d6c:	b	174f0 <argp_failure@@Base+0x870>
   17d70:	cmp	r6, r7
   17d74:	bhi	17f60 <argp_failure@@Base+0x12e0>
   17d78:	ldr	r3, [r9, #28]
   17d7c:	ldr	r1, [r9, #32]
   17d80:	add	r2, r3, #3
   17d84:	cmp	r1, r2
   17d88:	bcs	17da4 <argp_failure@@Base+0x1124>
   17d8c:	mov	r1, #3
   17d90:	mov	r0, r9
   17d94:	bl	19568 <argp_error@@Base+0x1490>
   17d98:	cmp	r0, #0
   17d9c:	beq	17be8 <argp_failure@@Base+0xf68>
   17da0:	ldr	r3, [r9, #28]
   17da4:	ldr	r2, [pc, #324]	; 17ef0 <argp_failure@@Base+0x1270>
   17da8:	ldrh	r1, [r2]
   17dac:	ldrb	r2, [r2, #2]
   17db0:	strh	r1, [r3]
   17db4:	strb	r2, [r3, #2]
   17db8:	ldr	r3, [r9, #28]
   17dbc:	add	r3, r3, #3
   17dc0:	str	r3, [r9, #28]
   17dc4:	b	17be8 <argp_failure@@Base+0xf68>
   17dc8:	mov	r2, #0
   17dcc:	str	r6, [sp, #4]
   17dd0:	str	r7, [sp]
   17dd4:	ldr	r3, [pc, #280]	; 17ef4 <argp_failure@@Base+0x1274>
   17dd8:	mov	r1, r2
   17ddc:	ldr	r0, [fp, #-104]	; 0xffffff98
   17de0:	bl	16c80 <argp_failure@@Base>
   17de4:	b	17590 <argp_failure@@Base+0x910>
   17de8:	ldr	r3, [fp, #-136]	; 0xffffff78
   17dec:	ldr	r8, [r3]
   17df0:	str	r4, [fp, #-88]	; 0xffffffa8
   17df4:	str	r4, [fp, #-84]	; 0xffffffac
   17df8:	str	r4, [fp, #-80]	; 0xffffffb0
   17dfc:	b	17020 <argp_failure@@Base+0x3a0>
   17e00:	ldr	r0, [r9, #28]
   17e04:	mov	r2, r6
   17e08:	mov	r1, r5
   17e0c:	bl	11610 <memcpy@plt>
   17e10:	ldr	r3, [r9, #28]
   17e14:	add	r6, r3, r6
   17e18:	str	r6, [r9, #28]
   17e1c:	b	17c20 <argp_failure@@Base+0xfa0>
   17e20:	mov	r0, r9
   17e24:	bl	18ed8 <argp_error@@Base+0xe00>
   17e28:	ldr	r3, [r9, #28]
   17e2c:	ldr	r1, [r9, #24]
   17e30:	ldr	r2, [r9, #16]
   17e34:	ldr	r7, [r9, #20]
   17e38:	ldr	sl, [fp, #-100]	; 0xffffff9c
   17e3c:	sub	r3, r3, r1
   17e40:	cmp	r3, r2
   17e44:	ldr	r6, [sl, #20]
   17e48:	bic	r7, r7, r7, asr #31
   17e4c:	bls	17bb0 <argp_failure@@Base+0xf30>
   17e50:	mov	r0, r9
   17e54:	bl	18ed8 <argp_error@@Base+0xe00>
   17e58:	ldr	r3, [r9, #28]
   17e5c:	ldr	r1, [r9, #24]
   17e60:	ldr	r2, [r9, #16]
   17e64:	sub	r3, r3, r1
   17e68:	cmp	r3, r2
   17e6c:	ldr	r3, [sl, #20]
   17e70:	str	r6, [r9, #4]
   17e74:	movls	r6, r3
   17e78:	bls	17bb8 <argp_failure@@Base+0xf38>
   17e7c:	mov	r0, r9
   17e80:	str	r3, [fp, #-124]	; 0xffffff84
   17e84:	bl	18ed8 <argp_error@@Base+0xe00>
   17e88:	ldr	r6, [sl, #20]
   17e8c:	ldr	r3, [fp, #-124]	; 0xffffff84
   17e90:	b	17bb8 <argp_failure@@Base+0xf38>
   17e94:	muleq	r2, r8, r4
   17e98:	andeq	fp, r2, r0, asr #10
   17e9c:	ldrdeq	sl, [r1], -r4
   17ea0:	andeq	r0, r0, #5
   17ea4:	andeq	sl, r1, r0, ror #20
   17ea8:	andeq	sl, r1, ip, lsl r9
   17eac:	andeq	sl, r1, ip, ror #15
   17eb0:	andeq	sl, r1, ip, asr r7
   17eb4:	ldrdeq	sl, [r1], -r8
   17eb8:	andeq	sl, r1, r4, lsr #19
   17ebc:	andeq	sl, r1, r8, lsl #20
   17ec0:	andeq	sl, r1, r0, ror #19
   17ec4:	strdeq	sl, [r1], -r0
   17ec8:	andeq	sl, r1, r8, ror #19
   17ecc:	strdeq	sl, [r1], -r8
   17ed0:	andeq	sl, r1, r0, ror #5
   17ed4:	andeq	sl, r1, r0, asr #5
   17ed8:	andeq	r5, r1, r8, lsr #23
   17edc:	andeq	sl, r1, r8, asr #20
   17ee0:	andeq	sl, r1, r8, asr sl
   17ee4:	andeq	sl, r1, r0, asr sl
   17ee8:	andeq	sl, r1, r0, asr #20
   17eec:	muleq	r1, r0, r2
   17ef0:	andeq	sl, r1, ip, asr sl
   17ef4:	andeq	sl, r1, ip, asr r9
   17ef8:	andeq	sl, r1, r4, lsl #19
   17efc:	andeq	sl, r1, ip, lsr #18
   17f00:	str	r6, [sp]
   17f04:	ldr	r3, [pc, #-20]	; 17ef8 <argp_failure@@Base+0x1278>
   17f08:	mov	r1, r2
   17f0c:	ldr	r0, [fp, #-104]	; 0xffffff98
   17f10:	bl	16c80 <argp_failure@@Base>
   17f14:	b	175ac <argp_failure@@Base+0x92c>
   17f18:	mov	r0, r4
   17f1c:	bl	142b8 <argp_parse@@Base+0xe98>
   17f20:	b	173d8 <argp_failure@@Base+0x758>
   17f24:	ldr	r0, [r6, #16]
   17f28:	sub	r2, fp, #76	; 0x4c
   17f2c:	ldr	r1, [r8, #20]
   17f30:	bl	151b4 <argp_parse@@Base+0x1d94>
   17f34:	b	17c6c <argp_failure@@Base+0xfec>
   17f38:	mov	r1, #1
   17f3c:	mov	r0, r9
   17f40:	bl	19568 <argp_error@@Base+0x1490>
   17f44:	cmp	r0, #0
   17f48:	beq	16fa0 <argp_failure@@Base+0x320>
   17f4c:	ldr	r3, [r9, #28]
   17f50:	b	16f90 <argp_failure@@Base+0x310>
   17f54:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17f58:	bl	116c4 <funlockfile@plt>
   17f5c:	b	16f60 <argp_failure@@Base+0x2e0>
   17f60:	mov	r1, r6
   17f64:	mov	r0, r9
   17f68:	bl	150dc <argp_parse@@Base+0x1cbc>
   17f6c:	b	17be8 <argp_failure@@Base+0xf68>
   17f70:	mov	r1, #1
   17f74:	mov	r0, r9
   17f78:	bl	19568 <argp_error@@Base+0x1490>
   17f7c:	cmp	r0, #0
   17f80:	beq	17be8 <argp_failure@@Base+0xf68>
   17f84:	ldr	r3, [r9, #28]
   17f88:	b	17bd8 <argp_failure@@Base+0xf58>
   17f8c:	mov	r1, #1
   17f90:	mov	r0, r9
   17f94:	bl	19568 <argp_error@@Base+0x1490>
   17f98:	cmp	r0, #0
   17f9c:	beq	16ff0 <argp_failure@@Base+0x370>
   17fa0:	ldr	r3, [r9, #28]
   17fa4:	b	16fe0 <argp_failure@@Base+0x360>
   17fa8:	str	r6, [sp, #4]
   17fac:	str	r7, [sp]
   17fb0:	ldr	r3, [pc, #-188]	; 17efc <argp_failure@@Base+0x127c>
   17fb4:	mov	r2, #0
   17fb8:	ldr	r0, [fp, #-104]	; 0xffffff98
   17fbc:	bl	16c80 <argp_failure@@Base>
   17fc0:	b	17588 <argp_failure@@Base+0x908>
   17fc4:	ldr	r3, [r9, #28]
   17fc8:	b	173b0 <argp_failure@@Base+0x730>
   17fcc:	mov	r1, #1
   17fd0:	mov	r0, r9
   17fd4:	bl	19568 <argp_error@@Base+0x1490>
   17fd8:	cmp	r0, #0
   17fdc:	beq	173cc <argp_failure@@Base+0x74c>
   17fe0:	ldr	r3, [r9, #28]
   17fe4:	b	173bc <argp_failure@@Base+0x73c>
   17fe8:	mov	r1, #1
   17fec:	mov	r0, r9
   17ff0:	bl	19568 <argp_error@@Base+0x1490>
   17ff4:	cmp	r0, #0
   17ff8:	beq	1735c <argp_failure@@Base+0x6dc>
   17ffc:	ldr	r3, [r9, #28]
   18000:	b	1734c <argp_failure@@Base+0x6cc>

00018004 <argp_help@@Base>:
   18004:	push	{lr}		; (str lr, [sp, #-4]!)
   18008:	sub	sp, sp, #12
   1800c:	str	r3, [sp]
   18010:	mov	r3, r2
   18014:	mov	r2, r1
   18018:	mov	r1, #0
   1801c:	bl	16e88 <argp_failure@@Base+0x208>
   18020:	add	sp, sp, #12
   18024:	pop	{pc}		; (ldr pc, [sp], #4)

00018028 <argp_state_help@@Base>:
   18028:	push	{r4, r5, lr}
   1802c:	subs	r4, r0, #0
   18030:	sub	sp, sp, #12
   18034:	mov	r5, r2
   18038:	beq	18098 <argp_state_help@@Base+0x70>
   1803c:	ldr	r3, [r4, #16]
   18040:	tst	r3, #2
   18044:	bne	18090 <argp_state_help@@Base+0x68>
   18048:	cmp	r1, #0
   1804c:	beq	18090 <argp_state_help@@Base+0x68>
   18050:	tst	r3, #64	; 0x40
   18054:	ldr	r3, [r4, #40]	; 0x28
   18058:	orrne	r5, r5, #128	; 0x80
   1805c:	ldr	r0, [r4]
   18060:	mov	r2, r1
   18064:	str	r3, [sp]
   18068:	mov	r1, r4
   1806c:	mov	r3, r5
   18070:	bl	16e88 <argp_failure@@Base+0x208>
   18074:	ldr	r3, [r4, #16]
   18078:	tst	r3, #32
   1807c:	bne	18090 <argp_state_help@@Base+0x68>
   18080:	ands	r0, r5, #256	; 0x100
   18084:	bne	180c4 <argp_state_help@@Base+0x9c>
   18088:	tst	r5, #512	; 0x200
   1808c:	bne	180c0 <argp_state_help@@Base+0x98>
   18090:	add	sp, sp, #12
   18094:	pop	{r4, r5, pc}
   18098:	cmp	r1, #0
   1809c:	beq	18090 <argp_state_help@@Base+0x68>
   180a0:	ldr	r3, [pc, #40]	; 180d0 <argp_state_help@@Base+0xa8>
   180a4:	mov	r2, r1
   180a8:	mov	r1, r4
   180ac:	ldr	ip, [r3]
   180b0:	mov	r3, r5
   180b4:	str	ip, [sp]
   180b8:	bl	16e88 <argp_failure@@Base+0x208>
   180bc:	b	18080 <argp_state_help@@Base+0x58>
   180c0:	bl	1179c <exit@plt>
   180c4:	ldr	r3, [pc, #8]	; 180d4 <argp_state_help@@Base+0xac>
   180c8:	ldr	r0, [r3]
   180cc:	bl	1179c <exit@plt>
   180d0:	ldrdeq	fp, [r2], -r8
   180d4:	ldrdeq	fp, [r2], -r0

000180d8 <argp_error@@Base>:
   180d8:	push	{r1, r2, r3}
   180dc:	push	{r4, r5, lr}
   180e0:	subs	r5, r0, #0
   180e4:	sub	sp, sp, #8
   180e8:	beq	181b8 <argp_error@@Base+0xe0>
   180ec:	ldr	r3, [r5, #16]
   180f0:	tst	r3, #2
   180f4:	bne	181a8 <argp_error@@Base+0xd0>
   180f8:	ldr	r4, [r5, #44]	; 0x2c
   180fc:	cmp	r4, #0
   18100:	beq	181a8 <argp_error@@Base+0xd0>
   18104:	mov	r0, r4
   18108:	bl	11904 <flockfile@plt>
   1810c:	ldr	r0, [r5, #40]	; 0x28
   18110:	add	r3, sp, #24
   18114:	str	r3, [sp, #4]
   18118:	mov	r1, r4
   1811c:	bl	1155c <fputs_unlocked@plt>
   18120:	ldr	r3, [r4, #20]
   18124:	ldr	r2, [r4, #24]
   18128:	cmp	r3, r2
   1812c:	addcc	r1, r3, #1
   18130:	movcc	r2, #58	; 0x3a
   18134:	strcc	r1, [r4, #20]
   18138:	strbcc	r2, [r3]
   1813c:	bcs	18204 <argp_error@@Base+0x12c>
   18140:	ldr	r3, [r4, #20]
   18144:	ldr	r2, [r4, #24]
   18148:	cmp	r3, r2
   1814c:	addcc	r1, r3, #1
   18150:	movcc	r2, #32
   18154:	strcc	r1, [r4, #20]
   18158:	strbcc	r2, [r3]
   1815c:	bcs	181f4 <argp_error@@Base+0x11c>
   18160:	ldr	r1, [sp, #20]
   18164:	ldr	r2, [sp, #4]
   18168:	mov	r0, r4
   1816c:	bl	118b0 <vfprintf@plt>
   18170:	ldr	r3, [r4, #20]
   18174:	ldr	r2, [r4, #24]
   18178:	cmp	r3, r2
   1817c:	addcc	r1, r3, #1
   18180:	movcc	r2, #10
   18184:	strcc	r1, [r4, #20]
   18188:	strbcc	r2, [r3]
   1818c:	bcs	181e4 <argp_error@@Base+0x10c>
   18190:	mov	r0, r5
   18194:	mov	r2, #260	; 0x104
   18198:	mov	r1, r4
   1819c:	bl	18028 <argp_state_help@@Base>
   181a0:	mov	r0, r4
   181a4:	bl	116c4 <funlockfile@plt>
   181a8:	add	sp, sp, #8
   181ac:	pop	{r4, r5, lr}
   181b0:	add	sp, sp, #12
   181b4:	bx	lr
   181b8:	ldr	r3, [pc, #84]	; 18214 <argp_error@@Base+0x13c>
   181bc:	ldr	r4, [r3]
   181c0:	cmp	r4, #0
   181c4:	beq	181a8 <argp_error@@Base+0xd0>
   181c8:	mov	r0, r4
   181cc:	bl	11904 <flockfile@plt>
   181d0:	ldr	r2, [pc, #64]	; 18218 <argp_error@@Base+0x140>
   181d4:	add	r3, sp, #24
   181d8:	str	r3, [sp, #4]
   181dc:	ldr	r0, [r2]
   181e0:	b	18118 <argp_error@@Base+0x40>
   181e4:	mov	r1, #10
   181e8:	mov	r0, r4
   181ec:	bl	11868 <__overflow@plt>
   181f0:	b	18190 <argp_error@@Base+0xb8>
   181f4:	mov	r1, #32
   181f8:	mov	r0, r4
   181fc:	bl	11868 <__overflow@plt>
   18200:	b	18160 <argp_error@@Base+0x88>
   18204:	mov	r1, #58	; 0x3a
   18208:	mov	r0, r4
   1820c:	bl	11868 <__overflow@plt>
   18210:	b	18140 <argp_error@@Base+0x68>
   18214:	andeq	fp, r2, r8, ror #9
   18218:	ldrdeq	fp, [r2], -r8
   1821c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18220:	ldr	r4, [r1, #32]
   18224:	ldr	r8, [r1, #28]
   18228:	ldr	r7, [r1]
   1822c:	add	r6, r0, r4, lsl #2
   18230:	mov	r2, r8
   18234:	mov	r5, r7
   18238:	cmp	r5, r4
   1823c:	movle	r3, #0
   18240:	movgt	r3, #1
   18244:	cmp	r2, r4
   18248:	movge	r3, #0
   1824c:	cmp	r3, #0
   18250:	beq	182c4 <argp_error@@Base+0x1ec>
   18254:	sub	r3, r5, r4
   18258:	sub	sl, r4, r2
   1825c:	cmp	r3, sl
   18260:	ble	18294 <argp_error@@Base+0x1bc>
   18264:	sub	r5, r5, sl
   18268:	add	sl, sl, r2
   1826c:	add	ip, r0, r5, lsl #2
   18270:	add	sl, r0, sl, lsl #2
   18274:	add	r3, r0, r2, lsl #2
   18278:	ldr	r9, [ip]
   1827c:	ldr	lr, [r3]
   18280:	str	r9, [r3], #4
   18284:	cmp	sl, r3
   18288:	str	lr, [ip], #4
   1828c:	bne	18278 <argp_error@@Base+0x1a0>
   18290:	b	18238 <argp_error@@Base+0x160>
   18294:	add	sl, r3, r2
   18298:	add	r3, r0, r2, lsl #2
   1829c:	add	r9, r0, sl, lsl #2
   182a0:	mov	r2, r6
   182a4:	ldr	lr, [r2]
   182a8:	ldr	ip, [r3]
   182ac:	str	lr, [r3], #4
   182b0:	cmp	r3, r9
   182b4:	str	ip, [r2], #4
   182b8:	bne	182a4 <argp_error@@Base+0x1cc>
   182bc:	mov	r2, sl
   182c0:	b	18238 <argp_error@@Base+0x160>
   182c4:	sub	r4, r7, r4
   182c8:	add	r8, r4, r8
   182cc:	str	r8, [r1, #28]
   182d0:	str	r7, [r1, #32]
   182d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   182d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182dc:	sub	sp, sp, #44	; 0x2c
   182e0:	str	r1, [sp, #20]
   182e4:	ldr	r1, [sp, #88]	; 0x58
   182e8:	str	r0, [sp, #24]
   182ec:	str	r2, [sp, #28]
   182f0:	ldr	r8, [r1, #20]
   182f4:	str	r3, [sp, #12]
   182f8:	mov	r7, r8
   182fc:	ldrb	r5, [r8]
   18300:	cmp	r5, #61	; 0x3d
   18304:	cmpne	r5, #0
   18308:	movne	r5, #1
   1830c:	moveq	r5, #0
   18310:	beq	18328 <argp_error@@Base+0x250>
   18314:	ldrb	r3, [r7, #1]!
   18318:	cmp	r3, #0
   1831c:	cmpne	r3, #61	; 0x3d
   18320:	bne	18314 <argp_error@@Base+0x23c>
   18324:	sub	r5, r7, r8
   18328:	ldr	r3, [sp, #12]
   1832c:	ldr	sl, [r3]
   18330:	cmp	sl, #0
   18334:	beq	185e8 <argp_error@@Base+0x510>
   18338:	mov	fp, r3
   1833c:	mov	r4, sl
   18340:	mov	r6, #0
   18344:	mov	r2, r5
   18348:	mov	r1, r8
   1834c:	mov	r0, r4
   18350:	bl	11958 <strncmp@plt>
   18354:	mov	r9, fp
   18358:	cmp	r0, #0
   1835c:	mov	r0, r4
   18360:	bne	18370 <argp_error@@Base+0x298>
   18364:	bl	117b4 <strlen@plt>
   18368:	cmp	r0, r5
   1836c:	beq	183fc <argp_error@@Base+0x324>
   18370:	ldr	r4, [fp, #16]!
   18374:	add	r6, r6, #1
   18378:	cmp	r4, #0
   1837c:	bne	18344 <argp_error@@Base+0x26c>
   18380:	ldr	r3, [sp, #12]
   18384:	ldr	fp, [sp, #88]	; 0x58
   18388:	mov	r0, sl
   1838c:	mov	r1, r8
   18390:	mov	r9, r4
   18394:	mov	sl, r4
   18398:	mov	r8, r3
   1839c:	mvn	r2, #0
   183a0:	str	r4, [sp, #36]	; 0x24
   183a4:	str	r4, [sp, #16]
   183a8:	str	r2, [sp, #32]
   183ac:	mov	r2, r5
   183b0:	bl	11958 <strncmp@plt>
   183b4:	cmp	r0, #0
   183b8:	bne	183d8 <argp_error@@Base+0x300>
   183bc:	cmp	r9, #0
   183c0:	beq	18658 <argp_error@@Base+0x580>
   183c4:	ldr	r3, [sp, #84]	; 0x54
   183c8:	cmp	r3, #0
   183cc:	beq	184a0 <argp_error@@Base+0x3c8>
   183d0:	cmp	r4, #0
   183d4:	beq	184d4 <argp_error@@Base+0x3fc>
   183d8:	ldr	r0, [r8, #16]!
   183dc:	add	sl, sl, #1
   183e0:	cmp	r0, #0
   183e4:	beq	18508 <argp_error@@Base+0x430>
   183e8:	ldr	r1, [fp, #20]
   183ec:	b	183ac <argp_error@@Base+0x2d4>
   183f0:	cmp	r9, #0
   183f4:	beq	185e8 <argp_error@@Base+0x510>
   183f8:	ldr	r6, [sp, #32]
   183fc:	ldr	r3, [sp, #88]	; 0x58
   18400:	ldr	r0, [sp, #88]	; 0x58
   18404:	mov	r1, #0
   18408:	ldr	r2, [r3]
   1840c:	str	r1, [r0, #20]
   18410:	add	r3, r2, #1
   18414:	str	r3, [r0]
   18418:	ldrb	r1, [r7]
   1841c:	cmp	r1, #0
   18420:	bne	18460 <argp_error@@Base+0x388>
   18424:	ldr	r1, [r9, #4]
   18428:	cmp	r1, #1
   1842c:	beq	18664 <argp_error@@Base+0x58c>
   18430:	ldr	r3, [sp, #80]	; 0x50
   18434:	ldr	r2, [r9, #8]
   18438:	cmp	r3, #0
   1843c:	strne	r6, [r3]
   18440:	cmp	r2, #0
   18444:	movne	r3, #0
   18448:	ldreq	r3, [r9, #12]
   1844c:	ldrne	r1, [r9, #12]
   18450:	strne	r1, [r2]
   18454:	mov	r0, r3
   18458:	add	sp, sp, #44	; 0x2c
   1845c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18460:	ldr	r3, [r9, #4]
   18464:	cmp	r3, #0
   18468:	movne	r3, r0
   1846c:	addne	r7, r7, #1
   18470:	strne	r7, [r3, #12]
   18474:	bne	18430 <argp_error@@Base+0x358>
   18478:	ldr	r3, [sp, #92]	; 0x5c
   1847c:	cmp	r3, #0
   18480:	bne	185b0 <argp_error@@Base+0x4d8>
   18484:	ldr	r1, [sp, #88]	; 0x58
   18488:	ldr	r2, [r9, #12]
   1848c:	mov	r3, #63	; 0x3f
   18490:	str	r2, [r1, #8]
   18494:	mov	r0, r3
   18498:	add	sp, sp, #44	; 0x2c
   1849c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   184a0:	ldr	r2, [r9, #4]
   184a4:	ldr	r3, [r8, #4]
   184a8:	cmp	r2, r3
   184ac:	bne	183d0 <argp_error@@Base+0x2f8>
   184b0:	ldr	r2, [r9, #8]
   184b4:	ldr	r3, [r8, #8]
   184b8:	cmp	r2, r3
   184bc:	bne	183d0 <argp_error@@Base+0x2f8>
   184c0:	ldr	r2, [r9, #12]
   184c4:	ldr	r3, [r8, #12]
   184c8:	cmp	r2, r3
   184cc:	bne	183d0 <argp_error@@Base+0x2f8>
   184d0:	b	183d8 <argp_error@@Base+0x300>
   184d4:	ldr	r3, [sp, #92]	; 0x5c
   184d8:	cmp	r3, #0
   184dc:	ldr	r3, [sp, #16]
   184e0:	beq	185a0 <argp_error@@Base+0x4c8>
   184e4:	cmp	r3, #0
   184e8:	beq	187bc <argp_error@@Base+0x6e4>
   184ec:	ldr	r3, [sp, #16]
   184f0:	ldr	r0, [r8, #16]!
   184f4:	mov	r2, #1
   184f8:	cmp	r0, #0
   184fc:	strb	r2, [r3, sl]
   18500:	add	sl, sl, #1
   18504:	bne	183e8 <argp_error@@Base+0x310>
   18508:	ldr	r3, [sp, #16]
   1850c:	cmp	r3, #0
   18510:	cmpeq	r4, #0
   18514:	beq	183f0 <argp_error@@Base+0x318>
   18518:	ldr	r3, [sp, #92]	; 0x5c
   1851c:	cmp	r3, #0
   18520:	beq	186a0 <argp_error@@Base+0x5c8>
   18524:	cmp	r4, #0
   18528:	bne	18728 <argp_error@@Base+0x650>
   1852c:	ldr	r5, [pc, #716]	; 18800 <argp_error@@Base+0x728>
   18530:	ldr	r8, [sp, #16]
   18534:	ldr	r7, [pc, #712]	; 18804 <argp_error@@Base+0x72c>
   18538:	ldr	r0, [r5]
   1853c:	bl	11904 <flockfile@plt>
   18540:	ldr	r3, [sp, #20]
   18544:	ldr	r0, [r5]
   18548:	ldr	r1, [pc, #696]	; 18808 <argp_error@@Base+0x730>
   1854c:	ldr	r2, [r3]
   18550:	ldr	r3, [sp, #88]	; 0x58
   18554:	add	r6, r8, r6
   18558:	ldr	r3, [r3, #20]
   1855c:	str	r3, [sp]
   18560:	ldr	r3, [sp, #96]	; 0x60
   18564:	bl	117d8 <fprintf@plt>
   18568:	ldr	r9, [sp, #12]
   1856c:	b	1857c <argp_error@@Base+0x4a4>
   18570:	cmp	r8, r6
   18574:	add	r4, r4, #1
   18578:	beq	1868c <argp_error@@Base+0x5b4>
   1857c:	ldrb	r3, [r8], #1
   18580:	cmp	r3, #0
   18584:	beq	18570 <argp_error@@Base+0x498>
   18588:	ldr	r3, [r9, r4, lsl #4]
   1858c:	ldr	r2, [sp, #96]	; 0x60
   18590:	mov	r1, r7
   18594:	ldr	r0, [r5]
   18598:	bl	117d8 <fprintf@plt>
   1859c:	b	18570 <argp_error@@Base+0x498>
   185a0:	cmp	r3, #0
   185a4:	mov	r4, #1
   185a8:	bne	184ec <argp_error@@Base+0x414>
   185ac:	b	183d8 <argp_error@@Base+0x300>
   185b0:	ldr	r3, [sp, #20]
   185b4:	ldr	r1, [pc, #580]	; 18800 <argp_error@@Base+0x728>
   185b8:	ldr	r2, [r3]
   185bc:	ldr	r3, [r9]
   185c0:	ldr	r0, [r1]
   185c4:	str	r3, [sp]
   185c8:	ldr	r1, [pc, #572]	; 1880c <argp_error@@Base+0x734>
   185cc:	ldr	r3, [sp, #96]	; 0x60
   185d0:	bl	117d8 <fprintf@plt>
   185d4:	ldr	r1, [sp, #88]	; 0x58
   185d8:	ldr	r2, [r9, #12]
   185dc:	mov	r3, #63	; 0x3f
   185e0:	str	r2, [r1, #8]
   185e4:	b	18494 <argp_error@@Base+0x3bc>
   185e8:	ldr	r3, [sp, #84]	; 0x54
   185ec:	cmp	r3, #0
   185f0:	bne	1877c <argp_error@@Base+0x6a4>
   185f4:	ldr	r3, [sp, #92]	; 0x5c
   185f8:	cmp	r3, #0
   185fc:	beq	18628 <argp_error@@Base+0x550>
   18600:	ldr	r3, [sp, #20]
   18604:	ldr	r1, [pc, #500]	; 18800 <argp_error@@Base+0x728>
   18608:	ldr	r2, [r3]
   1860c:	ldr	r3, [sp, #88]	; 0x58
   18610:	ldr	r0, [r1]
   18614:	ldr	r1, [pc, #500]	; 18810 <argp_error@@Base+0x738>
   18618:	ldr	r3, [r3, #20]
   1861c:	str	r3, [sp]
   18620:	ldr	r3, [sp, #96]	; 0x60
   18624:	bl	117d8 <fprintf@plt>
   18628:	ldr	r3, [sp, #88]	; 0x58
   1862c:	ldr	r1, [sp, #88]	; 0x58
   18630:	mov	r2, #0
   18634:	ldr	r3, [r3]
   18638:	str	r2, [r1, #20]
   1863c:	add	r3, r3, #1
   18640:	str	r3, [r1]
   18644:	mov	r3, #63	; 0x3f
   18648:	mov	r0, r3
   1864c:	str	r2, [r1, #8]
   18650:	add	sp, sp, #44	; 0x2c
   18654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18658:	str	sl, [sp, #32]
   1865c:	mov	r9, r8
   18660:	b	183d8 <argp_error@@Base+0x300>
   18664:	ldr	r1, [sp, #24]
   18668:	cmp	r3, r1
   1866c:	bge	186f8 <argp_error@@Base+0x620>
   18670:	ldr	r1, [sp, #20]
   18674:	add	r2, r2, #2
   18678:	ldr	r3, [r1, r3, lsl #2]
   1867c:	ldr	r1, [sp, #88]	; 0x58
   18680:	str	r3, [r1, #12]
   18684:	str	r2, [r1]
   18688:	b	18430 <argp_error@@Base+0x358>
   1868c:	ldr	r1, [r5]
   18690:	mov	r0, #10
   18694:	bl	118bc <fputc@plt>
   18698:	ldr	r0, [r5]
   1869c:	bl	116c4 <funlockfile@plt>
   186a0:	ldr	r3, [sp, #36]	; 0x24
   186a4:	cmp	r3, #0
   186a8:	beq	186b4 <argp_error@@Base+0x5dc>
   186ac:	ldr	r0, [sp, #16]
   186b0:	bl	142b8 <argp_parse@@Base+0xe98>
   186b4:	ldr	r3, [sp, #88]	; 0x58
   186b8:	ldr	r4, [r3, #20]
   186bc:	mov	r0, r4
   186c0:	bl	117b4 <strlen@plt>
   186c4:	ldr	r3, [sp, #88]	; 0x58
   186c8:	ldr	r1, [sp, #88]	; 0x58
   186cc:	mov	r2, #0
   186d0:	ldr	r3, [r3]
   186d4:	str	r2, [r1, #8]
   186d8:	add	r3, r3, #1
   186dc:	str	r3, [r1]
   186e0:	mov	r3, #63	; 0x3f
   186e4:	add	r0, r4, r0
   186e8:	str	r0, [r1, #20]
   186ec:	mov	r0, r3
   186f0:	add	sp, sp, #44	; 0x2c
   186f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186f8:	ldr	r3, [sp, #92]	; 0x5c
   186fc:	cmp	r3, #0
   18700:	bne	18754 <argp_error@@Base+0x67c>
   18704:	ldr	r2, [sp, #88]	; 0x58
   18708:	ldr	r3, [r9, #12]
   1870c:	str	r3, [r2, #8]
   18710:	ldr	r3, [sp, #28]
   18714:	ldrb	r3, [r3]
   18718:	cmp	r3, #58	; 0x3a
   1871c:	movne	r3, #63	; 0x3f
   18720:	moveq	r3, #58	; 0x3a
   18724:	b	18454 <argp_error@@Base+0x37c>
   18728:	ldr	r3, [sp, #20]
   1872c:	ldr	r1, [pc, #204]	; 18800 <argp_error@@Base+0x728>
   18730:	ldr	r2, [r3]
   18734:	ldr	r3, [sp, #88]	; 0x58
   18738:	ldr	r0, [r1]
   1873c:	ldr	r1, [pc, #208]	; 18814 <argp_error@@Base+0x73c>
   18740:	ldr	r3, [r3, #20]
   18744:	str	r3, [sp]
   18748:	ldr	r3, [sp, #96]	; 0x60
   1874c:	bl	117d8 <fprintf@plt>
   18750:	b	186a0 <argp_error@@Base+0x5c8>
   18754:	ldr	r3, [sp, #20]
   18758:	ldr	r1, [pc, #160]	; 18800 <argp_error@@Base+0x728>
   1875c:	ldr	r2, [r3]
   18760:	ldr	r3, [r9]
   18764:	ldr	r0, [r1]
   18768:	str	r3, [sp]
   1876c:	ldr	r1, [pc, #164]	; 18818 <argp_error@@Base+0x740>
   18770:	ldr	r3, [sp, #96]	; 0x60
   18774:	bl	117d8 <fprintf@plt>
   18778:	b	18704 <argp_error@@Base+0x62c>
   1877c:	ldr	r3, [sp, #88]	; 0x58
   18780:	ldr	r2, [sp, #20]
   18784:	ldr	r3, [r3]
   18788:	ldr	r3, [r2, r3, lsl #2]
   1878c:	ldrb	r3, [r3, #1]
   18790:	cmp	r3, #45	; 0x2d
   18794:	beq	185f4 <argp_error@@Base+0x51c>
   18798:	ldr	r3, [sp, #88]	; 0x58
   1879c:	ldr	r0, [sp, #28]
   187a0:	ldr	r3, [r3, #20]
   187a4:	ldrb	r1, [r3]
   187a8:	bl	117c0 <strchr@plt>
   187ac:	cmp	r0, #0
   187b0:	beq	185f4 <argp_error@@Base+0x51c>
   187b4:	mvn	r3, #0
   187b8:	b	18454 <argp_error@@Base+0x37c>
   187bc:	mov	r0, r6
   187c0:	bl	14e54 <argp_parse@@Base+0x1a34>
   187c4:	subs	r3, r0, #0
   187c8:	str	r3, [sp, #16]
   187cc:	beq	187f8 <argp_error@@Base+0x720>
   187d0:	mov	r2, r6
   187d4:	mov	r1, #0
   187d8:	bl	11808 <memset@plt>
   187dc:	mov	r3, #1
   187e0:	str	r3, [sp, #36]	; 0x24
   187e4:	ldr	r2, [sp, #32]
   187e8:	ldr	r3, [sp, #16]
   187ec:	mov	r1, #1
   187f0:	strb	r1, [r3, r2]
   187f4:	b	184ec <argp_error@@Base+0x414>
   187f8:	mov	r4, #1
   187fc:	b	183d8 <argp_error@@Base+0x300>
   18800:	andeq	fp, r2, r8, ror #9
   18804:	andeq	sl, r1, r8, lsr fp
   18808:	andeq	sl, r1, r8, lsl #22
   1880c:	andeq	sl, r1, r0, ror #22
   18810:	andeq	sl, r1, r0, asr #22
   18814:	andeq	sl, r1, r8, ror #21
   18818:	muleq	r1, r0, fp
   1881c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18820:	sub	sp, sp, #36	; 0x24
   18824:	subs	r6, r0, #0
   18828:	ldr	r4, [sp, #80]	; 0x50
   1882c:	ldr	r8, [r4, #4]
   18830:	ble	18a0c <argp_error@@Base+0x934>
   18834:	mov	sl, r3
   18838:	ldr	r3, [r4]
   1883c:	mov	r7, r2
   18840:	mov	r2, #0
   18844:	cmp	r3, r2
   18848:	mov	r9, r1
   1884c:	str	r2, [r4, #12]
   18850:	beq	18a94 <argp_error@@Base+0x9bc>
   18854:	ldr	r2, [r4, #16]
   18858:	cmp	r2, #0
   1885c:	bne	18a18 <argp_error@@Base+0x940>
   18860:	mov	r5, #0
   18864:	str	r3, [r4, #32]
   18868:	str	r3, [r4, #28]
   1886c:	str	r5, [r4, #20]
   18870:	ldrb	r3, [r7]
   18874:	cmp	r3, #45	; 0x2d
   18878:	moveq	r3, #2
   1887c:	addeq	r7, r7, #1
   18880:	streq	r3, [r4, #24]
   18884:	beq	188ac <argp_error@@Base+0x7d4>
   18888:	cmp	r3, #43	; 0x2b
   1888c:	streq	r5, [r4, #24]
   18890:	addeq	r7, r7, #1
   18894:	beq	188ac <argp_error@@Base+0x7d4>
   18898:	ldr	r3, [sp, #84]	; 0x54
   1889c:	cmp	r3, #0
   188a0:	beq	18b34 <argp_error@@Base+0xa5c>
   188a4:	mov	r3, #0
   188a8:	str	r3, [r4, #24]
   188ac:	mov	r3, #1
   188b0:	str	r3, [r4, #16]
   188b4:	ldrb	r3, [r7]
   188b8:	cmp	r3, #58	; 0x3a
   188bc:	moveq	r8, #0
   188c0:	cmp	r5, #0
   188c4:	beq	18978 <argp_error@@Base+0x8a0>
   188c8:	ldrb	r3, [r5]
   188cc:	cmp	r3, #0
   188d0:	beq	18978 <argp_error@@Base+0x8a0>
   188d4:	add	r3, r5, #1
   188d8:	str	r3, [r4, #20]
   188dc:	ldrb	fp, [r5]
   188e0:	mov	r0, r7
   188e4:	str	r3, [sp, #28]
   188e8:	mov	r1, fp
   188ec:	bl	117c0 <strchr@plt>
   188f0:	ldrb	r1, [r5, #1]
   188f4:	ldr	r3, [sp, #28]
   188f8:	cmp	r1, #0
   188fc:	ldreq	r1, [r4]
   18900:	addeq	r1, r1, #1
   18904:	streq	r1, [r4]
   18908:	sub	r1, fp, #58	; 0x3a
   1890c:	mov	r2, r0
   18910:	cmp	r2, #0
   18914:	cmpne	r1, #1
   18918:	mov	r0, fp
   1891c:	bls	18a64 <argp_error@@Base+0x98c>
   18920:	ldrb	r1, [r2]
   18924:	cmp	r1, #87	; 0x57
   18928:	ldrb	r1, [r2, #1]
   1892c:	beq	18bb8 <argp_error@@Base+0xae0>
   18930:	cmp	r1, #58	; 0x3a
   18934:	bne	18a5c <argp_error@@Base+0x984>
   18938:	ldrb	r2, [r2, #2]
   1893c:	cmp	r2, #58	; 0x3a
   18940:	ldrb	r2, [r5, #1]
   18944:	beq	18c40 <argp_error@@Base+0xb68>
   18948:	cmp	r2, #0
   1894c:	bne	18c4c <argp_error@@Base+0xb74>
   18950:	ldr	r3, [r4]
   18954:	cmp	r6, r3
   18958:	beq	18cec <argp_error@@Base+0xc14>
   1895c:	ldr	r2, [r9, r3, lsl #2]
   18960:	add	r3, r3, #1
   18964:	str	r2, [r4, #12]
   18968:	str	r3, [r4]
   1896c:	mov	r3, #0
   18970:	str	r3, [r4, #20]
   18974:	b	18a5c <argp_error@@Base+0x984>
   18978:	ldr	fp, [r4]
   1897c:	ldr	r3, [r4, #32]
   18980:	cmp	r3, fp
   18984:	ldr	r3, [r4, #28]
   18988:	strgt	fp, [r4, #32]
   1898c:	cmp	fp, r3
   18990:	ldr	r3, [r4, #24]
   18994:	strlt	fp, [r4, #28]
   18998:	cmp	r3, #1
   1899c:	beq	18aa4 <argp_error@@Base+0x9cc>
   189a0:	cmp	r6, fp
   189a4:	beq	18b1c <argp_error@@Base+0xa44>
   189a8:	ldr	r3, [pc, #944]	; 18d60 <argp_error@@Base+0xc88>
   189ac:	ldr	r5, [r9, fp, lsl #2]
   189b0:	mov	r1, r3
   189b4:	mov	r0, r5
   189b8:	str	r3, [sp, #28]
   189bc:	bl	11574 <strcmp@plt>
   189c0:	ldr	r3, [sp, #28]
   189c4:	cmp	r0, #0
   189c8:	bne	18a34 <argp_error@@Base+0x95c>
   189cc:	ldr	r3, [r4, #28]
   189d0:	ldr	r2, [r4, #32]
   189d4:	add	fp, fp, #1
   189d8:	cmp	r3, r2
   189dc:	str	fp, [r4]
   189e0:	beq	18bac <argp_error@@Base+0xad4>
   189e4:	cmp	fp, r2
   189e8:	beq	189fc <argp_error@@Base+0x924>
   189ec:	mov	r0, r9
   189f0:	mov	r1, r4
   189f4:	bl	1821c <argp_error@@Base+0x144>
   189f8:	ldr	r3, [r4, #28]
   189fc:	cmp	r3, r6
   18a00:	str	r6, [r4]
   18a04:	str	r6, [r4, #32]
   18a08:	strne	r3, [r4]
   18a0c:	mvn	r0, #0
   18a10:	add	sp, sp, #36	; 0x24
   18a14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a18:	ldrb	r3, [r7]
   18a1c:	ldr	r5, [r4, #20]
   18a20:	sub	r2, r3, #43	; 0x2b
   18a24:	tst	r2, #253	; 0xfd
   18a28:	ldrbeq	r3, [r7, #1]
   18a2c:	addeq	r7, r7, #1
   18a30:	b	188b8 <argp_error@@Base+0x7e0>
   18a34:	ldrb	r2, [r5]
   18a38:	cmp	r2, #45	; 0x2d
   18a3c:	beq	18b60 <argp_error@@Base+0xa88>
   18a40:	ldr	r3, [r4, #24]
   18a44:	cmp	r3, #0
   18a48:	beq	18a0c <argp_error@@Base+0x934>
   18a4c:	mov	r0, #1
   18a50:	add	fp, fp, #1
   18a54:	str	fp, [r4]
   18a58:	str	r5, [r4, #12]
   18a5c:	add	sp, sp, #36	; 0x24
   18a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a64:	cmp	r8, #0
   18a68:	beq	18a84 <argp_error@@Base+0x9ac>
   18a6c:	ldr	r1, [pc, #752]	; 18d64 <argp_error@@Base+0xc8c>
   18a70:	ldr	r2, [r9]
   18a74:	mov	r3, fp
   18a78:	ldr	r0, [r1]
   18a7c:	ldr	r1, [pc, #740]	; 18d68 <argp_error@@Base+0xc90>
   18a80:	bl	117d8 <fprintf@plt>
   18a84:	mov	r0, #63	; 0x3f
   18a88:	str	fp, [r4, #8]
   18a8c:	add	sp, sp, #36	; 0x24
   18a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a94:	mov	r2, #1
   18a98:	mov	r3, r2
   18a9c:	str	r2, [r4]
   18aa0:	b	18860 <argp_error@@Base+0x788>
   18aa4:	ldr	r2, [r4, #28]
   18aa8:	ldr	r3, [r4, #32]
   18aac:	cmp	r2, r3
   18ab0:	beq	18c30 <argp_error@@Base+0xb58>
   18ab4:	cmp	fp, r3
   18ab8:	beq	18acc <argp_error@@Base+0x9f4>
   18abc:	mov	r1, r4
   18ac0:	mov	r0, r9
   18ac4:	bl	1821c <argp_error@@Base+0x144>
   18ac8:	ldr	r3, [r4]
   18acc:	cmp	r6, r3
   18ad0:	movle	fp, r3
   18ad4:	ble	18b10 <argp_error@@Base+0xa38>
   18ad8:	add	r1, r9, r3, lsl #2
   18adc:	b	18af0 <argp_error@@Base+0xa18>
   18ae0:	add	r3, r3, #1
   18ae4:	cmp	r6, r3
   18ae8:	str	r3, [r4]
   18aec:	beq	18b54 <argp_error@@Base+0xa7c>
   18af0:	ldr	r2, [r1], #4
   18af4:	ldrb	r0, [r2]
   18af8:	cmp	r0, #45	; 0x2d
   18afc:	bne	18ae0 <argp_error@@Base+0xa08>
   18b00:	ldrb	r2, [r2, #1]
   18b04:	cmp	r2, #0
   18b08:	beq	18ae0 <argp_error@@Base+0xa08>
   18b0c:	ldr	fp, [r4]
   18b10:	str	r3, [r4, #32]
   18b14:	cmp	r6, fp
   18b18:	bne	189a8 <argp_error@@Base+0x8d0>
   18b1c:	ldr	r3, [r4, #28]
   18b20:	ldr	r6, [r4, #32]
   18b24:	mvn	r0, #0
   18b28:	cmp	r3, r6
   18b2c:	strne	r3, [r4]
   18b30:	b	18a10 <argp_error@@Base+0x938>
   18b34:	ldr	r0, [pc, #560]	; 18d6c <argp_error@@Base+0xc94>
   18b38:	bl	11718 <getenv@plt>
   18b3c:	ldr	r5, [r4, #20]
   18b40:	cmp	r0, #0
   18b44:	bne	188a4 <argp_error@@Base+0x7cc>
   18b48:	mov	r3, #1
   18b4c:	str	r3, [r4, #24]
   18b50:	b	188ac <argp_error@@Base+0x7d4>
   18b54:	mov	fp, r6
   18b58:	str	r3, [r4, #32]
   18b5c:	b	18b14 <argp_error@@Base+0xa3c>
   18b60:	ldrb	r1, [r5, #1]
   18b64:	cmp	r1, #0
   18b68:	beq	18a40 <argp_error@@Base+0x968>
   18b6c:	cmp	sl, #0
   18b70:	beq	18ba4 <argp_error@@Base+0xacc>
   18b74:	cmp	r1, #45	; 0x2d
   18b78:	beq	18cb0 <argp_error@@Base+0xbd8>
   18b7c:	ldr	r3, [sp, #76]	; 0x4c
   18b80:	cmp	r3, #0
   18b84:	beq	18ba4 <argp_error@@Base+0xacc>
   18b88:	ldrb	r3, [r5, #2]
   18b8c:	cmp	r3, #0
   18b90:	bne	18c60 <argp_error@@Base+0xb88>
   18b94:	mov	r0, r7
   18b98:	bl	117c0 <strchr@plt>
   18b9c:	cmp	r0, #0
   18ba0:	beq	18c60 <argp_error@@Base+0xb88>
   18ba4:	add	r5, r5, #1
   18ba8:	b	188d4 <argp_error@@Base+0x7fc>
   18bac:	mov	r3, fp
   18bb0:	str	fp, [r4, #28]
   18bb4:	b	189fc <argp_error@@Base+0x924>
   18bb8:	cmp	sl, #0
   18bbc:	sub	ip, r1, #59	; 0x3b
   18bc0:	clz	ip, ip
   18bc4:	lsr	ip, ip, #5
   18bc8:	moveq	ip, #0
   18bcc:	cmp	ip, #0
   18bd0:	beq	18930 <argp_error@@Base+0x858>
   18bd4:	ldrb	r2, [r5, #1]
   18bd8:	cmp	r2, #0
   18bdc:	bne	18bf0 <argp_error@@Base+0xb18>
   18be0:	ldr	r3, [r4]
   18be4:	cmp	r6, r3
   18be8:	ldrne	r3, [r9, r3, lsl #2]
   18bec:	beq	18d0c <argp_error@@Base+0xc34>
   18bf0:	str	r3, [r4, #20]
   18bf4:	ldr	lr, [pc, #372]	; 18d70 <argp_error@@Base+0xc98>
   18bf8:	ldr	r3, [sp, #72]	; 0x48
   18bfc:	mov	ip, #0
   18c00:	str	r3, [sp]
   18c04:	str	r8, [sp, #12]
   18c08:	str	r4, [sp, #8]
   18c0c:	str	lr, [sp, #16]
   18c10:	mov	r3, sl
   18c14:	str	ip, [r4, #12]
   18c18:	mov	r2, r7
   18c1c:	mov	r1, r9
   18c20:	mov	r0, r6
   18c24:	str	ip, [sp, #4]
   18c28:	bl	182d8 <argp_error@@Base+0x200>
   18c2c:	b	18a5c <argp_error@@Base+0x984>
   18c30:	cmp	fp, r3
   18c34:	movne	r3, fp
   18c38:	strne	fp, [r4, #28]
   18c3c:	b	18acc <argp_error@@Base+0x9f4>
   18c40:	cmp	r2, #0
   18c44:	streq	r2, [r4, #12]
   18c48:	beq	1896c <argp_error@@Base+0x894>
   18c4c:	ldr	r2, [r4]
   18c50:	str	r3, [r4, #12]
   18c54:	add	r3, r2, #1
   18c58:	str	r3, [r4]
   18c5c:	b	1896c <argp_error@@Base+0x894>
   18c60:	ldr	r2, [sp, #76]	; 0x4c
   18c64:	add	r5, r5, #1
   18c68:	str	r5, [r4, #20]
   18c6c:	ldr	r3, [pc, #256]	; 18d74 <argp_error@@Base+0xc9c>
   18c70:	str	r2, [sp, #4]
   18c74:	ldr	r2, [sp, #72]	; 0x48
   18c78:	str	r3, [sp, #16]
   18c7c:	str	r2, [sp]
   18c80:	str	r8, [sp, #12]
   18c84:	str	r4, [sp, #8]
   18c88:	mov	r3, sl
   18c8c:	mov	r2, r7
   18c90:	mov	r1, r9
   18c94:	mov	r0, r6
   18c98:	bl	182d8 <argp_error@@Base+0x200>
   18c9c:	cmn	r0, #1
   18ca0:	bne	18a5c <argp_error@@Base+0x984>
   18ca4:	ldr	r3, [r4]
   18ca8:	ldr	r5, [r9, r3, lsl #2]
   18cac:	b	18ba4 <argp_error@@Base+0xacc>
   18cb0:	add	r5, r5, #2
   18cb4:	str	r5, [r4, #20]
   18cb8:	str	r3, [sp, #16]
   18cbc:	ldr	r3, [sp, #76]	; 0x4c
   18cc0:	str	r8, [sp, #12]
   18cc4:	str	r3, [sp, #4]
   18cc8:	ldr	r3, [sp, #72]	; 0x48
   18ccc:	str	r4, [sp, #8]
   18cd0:	str	r3, [sp]
   18cd4:	mov	r2, r7
   18cd8:	mov	r3, sl
   18cdc:	mov	r1, r9
   18ce0:	mov	r0, r6
   18ce4:	bl	182d8 <argp_error@@Base+0x200>
   18ce8:	b	18a5c <argp_error@@Base+0x984>
   18cec:	cmp	r8, #0
   18cf0:	bne	18d44 <argp_error@@Base+0xc6c>
   18cf4:	str	fp, [r4, #8]
   18cf8:	ldrb	r0, [r7]
   18cfc:	cmp	r0, #58	; 0x3a
   18d00:	movne	r0, #63	; 0x3f
   18d04:	moveq	r0, #58	; 0x3a
   18d08:	b	1896c <argp_error@@Base+0x894>
   18d0c:	cmp	r8, #0
   18d10:	beq	18d2c <argp_error@@Base+0xc54>
   18d14:	ldr	r1, [pc, #72]	; 18d64 <argp_error@@Base+0xc8c>
   18d18:	ldr	r2, [r9]
   18d1c:	mov	r3, fp
   18d20:	ldr	r0, [r1]
   18d24:	ldr	r1, [pc, #76]	; 18d78 <argp_error@@Base+0xca0>
   18d28:	bl	117d8 <fprintf@plt>
   18d2c:	str	fp, [r4, #8]
   18d30:	ldrb	r0, [r7]
   18d34:	cmp	r0, #58	; 0x3a
   18d38:	movne	r0, #63	; 0x3f
   18d3c:	moveq	r0, #58	; 0x3a
   18d40:	b	18a5c <argp_error@@Base+0x984>
   18d44:	ldr	r1, [pc, #24]	; 18d64 <argp_error@@Base+0xc8c>
   18d48:	ldr	r2, [r9]
   18d4c:	mov	r3, fp
   18d50:	ldr	r0, [r1]
   18d54:	ldr	r1, [pc, #28]	; 18d78 <argp_error@@Base+0xca0>
   18d58:	bl	117d8 <fprintf@plt>
   18d5c:	b	18cf4 <argp_error@@Base+0xc1c>
   18d60:	andeq	sl, r1, r8, lsl #5
   18d64:	andeq	fp, r2, r8, ror #9
   18d68:	andeq	sl, r1, ip, asr #23
   18d6c:			; <UNDEFINED> instruction: 0x0001abb8
   18d70:	andeq	sl, r1, r4, lsl ip
   18d74:	andeq	sl, r1, r8, asr #23
   18d78:	andeq	sl, r1, r8, ror #23
   18d7c:	push	{r4, r5, r6, lr}
   18d80:	sub	sp, sp, #16
   18d84:	ldr	r5, [pc, #84]	; 18de0 <argp_error@@Base+0xd08>
   18d88:	ldr	ip, [sp, #32]
   18d8c:	ldr	r4, [pc, #80]	; 18de4 <argp_error@@Base+0xd0c>
   18d90:	str	ip, [sp]
   18d94:	ldr	ip, [sp, #40]	; 0x28
   18d98:	ldr	r6, [sp, #36]	; 0x24
   18d9c:	ldr	lr, [r5]
   18da0:	str	ip, [sp, #12]
   18da4:	ldr	ip, [r5, #4]
   18da8:	str	r4, [sp, #8]
   18dac:	str	r6, [sp, #4]
   18db0:	str	ip, [r4, #4]
   18db4:	str	lr, [r4]
   18db8:	bl	1881c <argp_error@@Base+0x744>
   18dbc:	ldr	r3, [pc, #36]	; 18de8 <argp_error@@Base+0xd10>
   18dc0:	ldr	ip, [r4]
   18dc4:	ldr	r1, [r4, #8]
   18dc8:	ldr	r2, [r4, #12]
   18dcc:	str	ip, [r5]
   18dd0:	str	r1, [r5, #8]
   18dd4:	str	r2, [r3]
   18dd8:	add	sp, sp, #16
   18ddc:	pop	{r4, r5, r6, pc}
   18de0:	andeq	fp, r2, r4, asr #9
   18de4:	andeq	fp, r2, r0, lsl r5
   18de8:	andeq	fp, r2, r8, asr #10
   18dec:	push	{lr}		; (str lr, [sp, #-4]!)
   18df0:	mov	r3, #0
   18df4:	sub	sp, sp, #20
   18df8:	mov	ip, #1
   18dfc:	str	r3, [sp]
   18e00:	stmib	sp, {r3, ip}
   18e04:	bl	18d7c <argp_error@@Base+0xca4>
   18e08:	add	sp, sp, #20
   18e0c:	pop	{pc}		; (ldr pc, [sp], #4)
   18e10:	push	{r4, r5, r6, lr}
   18e14:	subs	r4, r2, #0
   18e18:	mov	r6, r0
   18e1c:	mov	r5, r1
   18e20:	beq	18e4c <argp_error@@Base+0xd74>
   18e24:	mov	r1, r4
   18e28:	mvn	r0, #0
   18e2c:	bl	19624 <argp_error@@Base+0x154c>
   18e30:	cmp	r0, r5
   18e34:	bcs	18e4c <argp_error@@Base+0xd74>
   18e38:	bl	117f0 <__errno_location@plt>
   18e3c:	mov	r3, #12
   18e40:	str	r3, [r0]
   18e44:	mov	r0, #0
   18e48:	pop	{r4, r5, r6, pc}
   18e4c:	mul	r1, r5, r4
   18e50:	mov	r0, r6
   18e54:	pop	{r4, r5, r6, lr}
   18e58:	b	14e80 <argp_parse@@Base+0x1a60>
   18e5c:	push	{r4, r5, r6, r7, r8, lr}
   18e60:	mov	r8, r0
   18e64:	mov	r0, #36	; 0x24
   18e68:	mov	r7, r1
   18e6c:	mov	r6, r2
   18e70:	mov	r5, r3
   18e74:	bl	14e54 <argp_parse@@Base+0x1a34>
   18e78:	subs	r4, r0, #0
   18e7c:	beq	18ec0 <argp_error@@Base+0xde8>
   18e80:	mov	r0, #0
   18e84:	str	r5, [r4, #12]
   18e88:	str	r0, [r4, #20]
   18e8c:	str	r0, [r4, #16]
   18e90:	str	r8, [r4]
   18e94:	str	r7, [r4, #4]
   18e98:	str	r6, [r4, #8]
   18e9c:	mov	r0, #200	; 0xc8
   18ea0:	bl	14e54 <argp_parse@@Base+0x1a34>
   18ea4:	cmp	r0, #0
   18ea8:	addne	r3, r0, #200	; 0xc8
   18eac:	mov	r5, r0
   18eb0:	str	r0, [r4, #24]
   18eb4:	strne	r0, [r4, #28]
   18eb8:	strne	r3, [r4, #32]
   18ebc:	beq	18ec8 <argp_error@@Base+0xdf0>
   18ec0:	mov	r0, r4
   18ec4:	pop	{r4, r5, r6, r7, r8, pc}
   18ec8:	mov	r0, r4
   18ecc:	bl	142b8 <argp_parse@@Base+0xe98>
   18ed0:	mov	r4, r5
   18ed4:	b	18ec0 <argp_error@@Base+0xde8>
   18ed8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18edc:	mov	r7, r0
   18ee0:	ldr	r6, [r0, #24]
   18ee4:	ldr	r3, [r0, #16]
   18ee8:	ldr	fp, [r0, #28]
   18eec:	sub	sp, sp, #12
   18ef0:	add	r6, r6, r3
   18ef4:	mov	r9, #32
   18ef8:	cmp	r6, fp
   18efc:	bcs	18fd8 <argp_error@@Base+0xf00>
   18f00:	ldr	r8, [r7, #20]
   18f04:	cmp	r8, #0
   18f08:	bne	18f78 <argp_error@@Base+0xea0>
   18f0c:	ldr	r4, [r7, #4]
   18f10:	cmp	r4, #0
   18f14:	beq	1921c <argp_error@@Base+0x1144>
   18f18:	ldr	r2, [r7, #32]
   18f1c:	add	r3, fp, r4
   18f20:	cmp	r2, r3
   18f24:	bls	18f38 <argp_error@@Base+0xe60>
   18f28:	b	19364 <argp_error@@Base+0x128c>
   18f2c:	add	r8, r8, #1
   18f30:	cmp	r4, r8
   18f34:	beq	18f6c <argp_error@@Base+0xe94>
   18f38:	ldr	r0, [r7]
   18f3c:	ldr	r3, [r0, #20]
   18f40:	ldr	r2, [r0, #24]
   18f44:	add	r1, r3, #1
   18f48:	cmp	r3, r2
   18f4c:	strcc	r1, [r0, #20]
   18f50:	strbcc	r9, [r3]
   18f54:	bcc	18f2c <argp_error@@Base+0xe54>
   18f58:	mov	r1, r9
   18f5c:	add	r8, r8, #1
   18f60:	bl	11868 <__overflow@plt>
   18f64:	cmp	r4, r8
   18f68:	bne	18f38 <argp_error@@Base+0xe60>
   18f6c:	ldr	fp, [r7, #28]
   18f70:	mov	r8, r4
   18f74:	str	r4, [r7, #20]
   18f78:	sub	sl, fp, r6
   18f7c:	mov	r2, sl
   18f80:	mov	r1, #10
   18f84:	mov	r0, r6
   18f88:	bl	1182c <memchr@plt>
   18f8c:	cmp	r8, #0
   18f90:	movlt	r8, #0
   18f94:	movlt	r3, r8
   18f98:	str	r6, [sp]
   18f9c:	mov	r4, r0
   18fa0:	strlt	r3, [r7, #20]
   18fa4:	cmp	r4, #0
   18fa8:	beq	19240 <argp_error@@Base+0x1168>
   18fac:	sub	r2, r4, r6
   18fb0:	ldr	r3, [r7, #8]
   18fb4:	add	r2, r2, r8
   18fb8:	cmp	r2, r3
   18fbc:	bge	18fec <argp_error@@Base+0xf14>
   18fc0:	ldr	fp, [r7, #28]
   18fc4:	add	r6, r4, #1
   18fc8:	mov	r3, #0
   18fcc:	cmp	r6, fp
   18fd0:	str	r3, [r7, #20]
   18fd4:	bcc	18f00 <argp_error@@Base+0xe28>
   18fd8:	ldr	r3, [r7, #24]
   18fdc:	sub	r3, fp, r3
   18fe0:	str	r3, [r7, #16]
   18fe4:	add	sp, sp, #12
   18fe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fec:	ldr	r2, [r7, #12]
   18ff0:	sub	r5, r3, #1
   18ff4:	cmp	r2, #0
   18ff8:	str	r2, [sp, #4]
   18ffc:	blt	192f8 <argp_error@@Base+0x1220>
   19000:	add	r5, r5, #1
   19004:	sub	r8, r5, r8
   19008:	adds	r8, r6, r8
   1900c:	bcs	19278 <argp_error@@Base+0x11a0>
   19010:	bl	11784 <__ctype_b_loc@plt>
   19014:	mov	r3, r8
   19018:	ldr	r0, [r0]
   1901c:	b	19028 <argp_error@@Base+0xf50>
   19020:	cmp	r3, r6
   19024:	bcc	1927c <argp_error@@Base+0x11a4>
   19028:	mov	r1, r3
   1902c:	sub	r3, r3, #1
   19030:	ldrb	r2, [r1]
   19034:	mov	r5, r3
   19038:	lsl	r2, r2, #1
   1903c:	ldrh	r2, [r0, r2]
   19040:	tst	r2, #1
   19044:	beq	19020 <argp_error@@Base+0xf48>
   19048:	add	r5, r1, #1
   1904c:	cmp	r5, r6
   19050:	bls	19290 <argp_error@@Base+0x11b8>
   19054:	cmp	r1, r6
   19058:	bcc	19288 <argp_error@@Base+0x11b0>
   1905c:	mov	r1, r3
   19060:	sub	r8, r6, #1
   19064:	b	19080 <argp_error@@Base+0xfa8>
   19068:	ldrb	r3, [r1]
   1906c:	sub	r1, r1, #1
   19070:	lsl	r3, r3, #1
   19074:	ldrh	r3, [r0, r3]
   19078:	tst	r3, #1
   1907c:	beq	193a8 <argp_error@@Base+0x12d0>
   19080:	cmp	r8, r1
   19084:	mov	r2, r1
   19088:	bne	19068 <argp_error@@Base+0xf90>
   1908c:	add	r8, r8, #1
   19090:	add	r3, sl, #1
   19094:	add	r3, r6, r3
   19098:	cmp	r5, r3
   1909c:	beq	19184 <argp_error@@Base+0x10ac>
   190a0:	add	r3, r8, #1
   190a4:	ldr	r1, [sp, #4]
   190a8:	sub	r2, r5, r3
   190ac:	cmp	r2, r1
   190b0:	bge	191a0 <argp_error@@Base+0x10c8>
   190b4:	cmp	r5, fp
   190b8:	bcs	19198 <argp_error@@Base+0x10c0>
   190bc:	ldr	r3, [r7, #32]
   190c0:	ldr	r2, [sp, #4]
   190c4:	sub	r3, r3, fp
   190c8:	add	r0, r2, #1
   190cc:	cmp	r3, r0
   190d0:	bgt	193d8 <argp_error@@Base+0x1300>
   190d4:	ldr	r0, [r7, #24]
   190d8:	cmp	r8, r0
   190dc:	bls	190f0 <argp_error@@Base+0x1018>
   190e0:	sub	r2, r8, r0
   190e4:	ldr	r3, [r7]
   190e8:	mov	r1, #1
   190ec:	bl	11634 <fwrite_unlocked@plt>
   190f0:	ldr	r0, [r7]
   190f4:	ldr	r2, [r0, #24]
   190f8:	ldr	r3, [r0, #20]
   190fc:	cmp	r3, r2
   19100:	addcc	r2, r3, #1
   19104:	strcc	r2, [r0, #20]
   19108:	movcc	r2, #10
   1910c:	strbcc	r2, [r3]
   19110:	bcs	19418 <argp_error@@Base+0x1340>
   19114:	ldr	r6, [r7, #24]
   19118:	ldr	r3, [sp]
   1911c:	sub	r2, r5, r6
   19120:	sub	r3, r3, r6
   19124:	add	sl, sl, r3
   19128:	mov	fp, r2
   1912c:	mov	r4, r6
   19130:	ldr	r3, [r7, #12]
   19134:	cmp	r3, r2
   19138:	bgt	191c0 <argp_error@@Base+0x10e8>
   1913c:	cmp	r3, #0
   19140:	movgt	r2, r6
   19144:	ble	19160 <argp_error@@Base+0x1088>
   19148:	strb	r9, [r2], #1
   1914c:	ldr	r3, [r7, #12]
   19150:	sub	r1, r2, r6
   19154:	cmp	r3, r1
   19158:	bgt	19148 <argp_error@@Base+0x1070>
   1915c:	mov	r6, r2
   19160:	cmp	r6, r5
   19164:	bcc	19348 <argp_error@@Base+0x1270>
   19168:	sub	fp, sl, fp
   1916c:	cmp	r3, #0
   19170:	add	fp, r6, fp
   19174:	mvneq	r3, #0
   19178:	str	fp, [r7, #28]
   1917c:	str	r3, [r7, #20]
   19180:	b	18ef8 <argp_error@@Base+0xe20>
   19184:	ldr	r3, [r7, #32]
   19188:	ldr	r2, [sp, #4]
   1918c:	sub	r3, r3, r8
   19190:	cmp	r3, r2
   19194:	ble	190b4 <argp_error@@Base+0xfdc>
   19198:	add	r3, r8, #1
   1919c:	sub	r2, r5, r3
   191a0:	sub	fp, r5, r6
   191a4:	mov	r4, r6
   191a8:	mov	r6, r3
   191ac:	mov	r3, #10
   191b0:	strb	r3, [r8]
   191b4:	ldr	r3, [r7, #12]
   191b8:	cmp	r3, r2
   191bc:	ble	1913c <argp_error@@Base+0x1064>
   191c0:	add	r2, sl, #1
   191c4:	add	r2, r4, r2
   191c8:	cmp	r5, r2
   191cc:	beq	193c4 <argp_error@@Base+0x12ec>
   191d0:	cmp	r3, #0
   191d4:	movgt	r8, #0
   191d8:	bgt	191f0 <argp_error@@Base+0x1118>
   191dc:	b	19160 <argp_error@@Base+0x1088>
   191e0:	ldr	r3, [r7, #12]
   191e4:	add	r8, r8, #1
   191e8:	cmp	r3, r8
   191ec:	ble	19160 <argp_error@@Base+0x1088>
   191f0:	ldr	r0, [r7]
   191f4:	ldr	r3, [r0, #20]
   191f8:	ldr	r2, [r0, #24]
   191fc:	add	r1, r3, #1
   19200:	cmp	r3, r2
   19204:	strcc	r1, [r0, #20]
   19208:	strbcc	r9, [r3]
   1920c:	bcc	191e0 <argp_error@@Base+0x1108>
   19210:	mov	r1, r9
   19214:	bl	11868 <__overflow@plt>
   19218:	b	191e0 <argp_error@@Base+0x1108>
   1921c:	sub	sl, fp, r6
   19220:	mov	r2, sl
   19224:	mov	r1, #10
   19228:	mov	r0, r6
   1922c:	bl	1182c <memchr@plt>
   19230:	str	r6, [sp]
   19234:	mov	r4, r0
   19238:	cmp	r4, #0
   1923c:	bne	18fac <argp_error@@Base+0xed4>
   19240:	ldr	r5, [r7, #8]
   19244:	add	r3, r8, sl
   19248:	cmp	r3, r5
   1924c:	bcc	1943c <argp_error@@Base+0x1364>
   19250:	ldr	r2, [r7, #12]
   19254:	sub	r5, r5, #1
   19258:	cmp	r2, #0
   1925c:	str	r2, [sp, #4]
   19260:	blt	19428 <argp_error@@Base+0x1350>
   19264:	add	r5, r5, #1
   19268:	sub	r8, r5, r8
   1926c:	adds	r8, r6, r8
   19270:	mov	r4, fp
   19274:	bcc	19010 <argp_error@@Base+0xf38>
   19278:	mov	r5, r8
   1927c:	add	r5, r5, #1
   19280:	cmp	r5, r6
   19284:	bls	19290 <argp_error@@Base+0x11b8>
   19288:	mov	r8, r5
   1928c:	b	19090 <argp_error@@Base+0xfb8>
   19290:	cmp	r8, r4
   19294:	bcs	192cc <argp_error@@Base+0x11f4>
   19298:	add	r5, r8, #1
   1929c:	b	192c0 <argp_error@@Base+0x11e8>
   192a0:	bl	11784 <__ctype_b_loc@plt>
   192a4:	ldrb	r3, [r5]
   192a8:	add	r5, r5, #1
   192ac:	lsl	r3, r3, #1
   192b0:	ldr	r2, [r0]
   192b4:	ldrh	r3, [r2, r3]
   192b8:	tst	r3, #1
   192bc:	bne	192dc <argp_error@@Base+0x1204>
   192c0:	cmp	r5, r4
   192c4:	mov	r8, r5
   192c8:	bne	192a0 <argp_error@@Base+0x11c8>
   192cc:	cmp	r8, r4
   192d0:	beq	193b0 <argp_error@@Base+0x12d8>
   192d4:	bl	11784 <__ctype_b_loc@plt>
   192d8:	ldr	r2, [r0]
   192dc:	mov	r5, r8
   192e0:	ldrb	r3, [r5, #1]!
   192e4:	lsl	r3, r3, #1
   192e8:	ldrh	r3, [r2, r3]
   192ec:	tst	r3, #1
   192f0:	bne	192e0 <argp_error@@Base+0x1208>
   192f4:	b	19090 <argp_error@@Base+0xfb8>
   192f8:	cmp	r4, fp
   192fc:	str	r3, [sp]
   19300:	bcs	19424 <argp_error@@Base+0x134c>
   19304:	sub	r0, r5, r8
   19308:	sub	r2, fp, r4
   1930c:	add	r0, r6, r0
   19310:	mov	r1, r4
   19314:	bl	115c8 <memmove@plt>
   19318:	ldr	r2, [r7, #20]
   1931c:	ldr	fp, [r7, #28]
   19320:	sub	r5, r5, r2
   19324:	add	r5, r6, r5
   19328:	mov	r3, #0
   1932c:	sub	r4, r5, r4
   19330:	str	r3, [r7, #20]
   19334:	ldr	r3, [sp]
   19338:	sub	fp, fp, r4
   1933c:	add	r6, r6, r3
   19340:	str	fp, [r7, #28]
   19344:	b	18ef8 <argp_error@@Base+0xe20>
   19348:	add	r2, r4, sl
   1934c:	sub	r2, r2, r5
   19350:	mov	r1, r5
   19354:	mov	r0, r6
   19358:	bl	115c8 <memmove@plt>
   1935c:	ldr	r3, [r7, #12]
   19360:	b	19168 <argp_error@@Base+0x1090>
   19364:	add	r5, r6, r4
   19368:	sub	r2, fp, r6
   1936c:	mov	r1, r6
   19370:	mov	r0, r5
   19374:	bl	115c8 <memmove@plt>
   19378:	ldr	r3, [r7, #28]
   1937c:	mov	r0, r6
   19380:	add	r3, r3, r4
   19384:	str	r3, [r7, #28]
   19388:	mov	r2, r4
   1938c:	mov	r1, r9
   19390:	bl	11808 <memset@plt>
   19394:	mov	r6, r5
   19398:	ldr	fp, [r7, #28]
   1939c:	mov	r8, r4
   193a0:	str	r4, [r7, #20]
   193a4:	b	18f78 <argp_error@@Base+0xea0>
   193a8:	add	r8, r2, #1
   193ac:	b	19090 <argp_error@@Base+0xfb8>
   193b0:	mov	r3, #0
   193b4:	str	r3, [r7, #20]
   193b8:	add	r6, r8, #1
   193bc:	ldr	fp, [r7, #28]
   193c0:	b	18ef8 <argp_error@@Base+0xe20>
   193c4:	ldr	r2, [r7, #32]
   193c8:	sub	r2, r2, r5
   193cc:	cmp	r3, r2
   193d0:	ble	1913c <argp_error@@Base+0x1064>
   193d4:	b	191d0 <argp_error@@Base+0x10f8>
   193d8:	sub	fp, fp, r5
   193dc:	mov	r2, fp
   193e0:	mov	r1, r5
   193e4:	add	r0, r8, r0
   193e8:	bl	115c8 <memmove@plt>
   193ec:	ldr	r2, [r7, #12]
   193f0:	mov	r3, #10
   193f4:	add	r5, r2, #1
   193f8:	add	r5, r8, r5
   193fc:	add	fp, r5, fp
   19400:	sub	sl, fp, r6
   19404:	mov	r4, r6
   19408:	sub	fp, r5, r6
   1940c:	strb	r3, [r8]
   19410:	add	r6, r8, #1
   19414:	b	19130 <argp_error@@Base+0x1058>
   19418:	mov	r1, #10
   1941c:	bl	11868 <__overflow@plt>
   19420:	b	19114 <argp_error@@Base+0x103c>
   19424:	add	r3, r8, sl
   19428:	sub	r5, r5, r3
   1942c:	add	fp, fp, r5
   19430:	str	fp, [r7, #28]
   19434:	str	r3, [r7, #20]
   19438:	b	18fd8 <argp_error@@Base+0xf00>
   1943c:	str	r3, [r7, #20]
   19440:	ldr	fp, [r7, #28]
   19444:	b	18fd8 <argp_error@@Base+0xf00>
   19448:	push	{r4, lr}
   1944c:	mov	r4, r0
   19450:	bl	18ed8 <argp_error@@Base+0xe00>
   19454:	ldr	r2, [r4, #28]
   19458:	ldr	r0, [r4, #24]
   1945c:	cmp	r2, r0
   19460:	bls	19478 <argp_error@@Base+0x13a0>
   19464:	sub	r2, r2, r0
   19468:	ldr	r3, [r4]
   1946c:	mov	r1, #1
   19470:	bl	11634 <fwrite_unlocked@plt>
   19474:	ldr	r0, [r4, #24]
   19478:	bl	142b8 <argp_parse@@Base+0xe98>
   1947c:	mov	r0, r4
   19480:	pop	{r4, lr}
   19484:	b	142b8 <argp_parse@@Base+0xe98>
   19488:	push	{r4, r5, r6, lr}
   1948c:	mov	r4, r0
   19490:	mov	r5, r1
   19494:	bl	18ed8 <argp_error@@Base+0xe00>
   19498:	ldr	r3, [r4, #24]
   1949c:	ldr	r2, [r4, #28]
   194a0:	mov	r0, r3
   194a4:	sub	r2, r2, r3
   194a8:	mov	r1, #1
   194ac:	ldr	r3, [r4]
   194b0:	bl	11634 <fwrite_unlocked@plt>
   194b4:	ldr	r2, [r4, #28]
   194b8:	ldr	r3, [r4, #24]
   194bc:	sub	r1, r2, r3
   194c0:	cmp	r0, r1
   194c4:	bne	19508 <argp_error@@Base+0x1430>
   194c8:	ldr	r1, [r4, #32]
   194cc:	mov	r2, #0
   194d0:	sub	r1, r1, r3
   194d4:	cmp	r1, r5
   194d8:	str	r3, [r4, #28]
   194dc:	str	r2, [r4, #16]
   194e0:	movcs	r3, #1
   194e4:	bcs	19500 <argp_error@@Base+0x1428>
   194e8:	adds	r5, r1, r5
   194ec:	bcc	19538 <argp_error@@Base+0x1460>
   194f0:	bl	117f0 <__errno_location@plt>
   194f4:	mov	r3, #0
   194f8:	mov	r2, #12
   194fc:	str	r2, [r0]
   19500:	mov	r0, r3
   19504:	pop	{r4, r5, r6, pc}
   19508:	ldr	r1, [r4, #16]
   1950c:	sub	r2, r2, r0
   19510:	sub	r1, r1, r0
   19514:	str	r2, [r4, #28]
   19518:	str	r1, [r4, #16]
   1951c:	sub	r2, r2, r3
   19520:	add	r1, r3, r0
   19524:	mov	r0, r3
   19528:	bl	115c8 <memmove@plt>
   1952c:	mov	r3, #0
   19530:	mov	r0, r3
   19534:	pop	{r4, r5, r6, pc}
   19538:	mov	r0, r3
   1953c:	mov	r1, r5
   19540:	bl	14e80 <argp_parse@@Base+0x1a60>
   19544:	cmp	r0, #0
   19548:	beq	194f0 <argp_error@@Base+0x1418>
   1954c:	add	r1, r0, r5
   19550:	mov	r3, #1
   19554:	str	r0, [r4, #24]
   19558:	str	r0, [r4, #28]
   1955c:	str	r1, [r4, #32]
   19560:	mov	r0, r3
   19564:	pop	{r4, r5, r6, pc}
   19568:	ldr	r3, [r0, #32]
   1956c:	ldr	r2, [r0, #28]
   19570:	sub	r3, r3, r2
   19574:	cmp	r3, r1
   19578:	bcc	19584 <argp_error@@Base+0x14ac>
   1957c:	mov	r0, #1
   19580:	bx	lr
   19584:	b	19488 <argp_error@@Base+0x13b0>
   19588:	push	{r1, r2, r3}
   1958c:	mov	r1, #150	; 0x96
   19590:	push	{r4, r5, r6, r7, lr}
   19594:	sub	sp, sp, #8
   19598:	mov	r5, r0
   1959c:	ldr	r7, [sp, #28]
   195a0:	add	r6, sp, #32
   195a4:	ldr	r3, [r5, #32]
   195a8:	ldr	r0, [r5, #28]
   195ac:	sub	r2, r3, r0
   195b0:	cmp	r1, r2
   195b4:	bhi	195f8 <argp_error@@Base+0x1520>
   195b8:	sub	r4, r3, r0
   195bc:	mov	r1, r4
   195c0:	mov	r3, r6
   195c4:	mov	r2, r7
   195c8:	str	r6, [sp, #4]
   195cc:	bl	11910 <vsnprintf@plt>
   195d0:	cmp	r4, r0
   195d4:	addls	r1, r0, #1
   195d8:	bls	195a4 <argp_error@@Base+0x14cc>
   195dc:	ldr	r3, [r5, #28]
   195e0:	add	r3, r3, r0
   195e4:	str	r3, [r5, #28]
   195e8:	add	sp, sp, #8
   195ec:	pop	{r4, r5, r6, r7, lr}
   195f0:	add	sp, sp, #12
   195f4:	bx	lr
   195f8:	mov	r0, r5
   195fc:	bl	19488 <argp_error@@Base+0x13b0>
   19600:	cmp	r0, #0
   19604:	ldrne	r3, [r5, #32]
   19608:	ldrne	r0, [r5, #28]
   1960c:	bne	195b8 <argp_error@@Base+0x14e0>
   19610:	mvn	r0, #0
   19614:	add	sp, sp, #8
   19618:	pop	{r4, r5, r6, r7, lr}
   1961c:	add	sp, sp, #12
   19620:	bx	lr
   19624:	subs	r2, r1, #1
   19628:	bxeq	lr
   1962c:	bcc	19804 <argp_error@@Base+0x172c>
   19630:	cmp	r0, r1
   19634:	bls	197e8 <argp_error@@Base+0x1710>
   19638:	tst	r1, r2
   1963c:	beq	197f4 <argp_error@@Base+0x171c>
   19640:	clz	r3, r0
   19644:	clz	r2, r1
   19648:	sub	r3, r2, r3
   1964c:	rsbs	r3, r3, #31
   19650:	addne	r3, r3, r3, lsl #1
   19654:	mov	r2, #0
   19658:	addne	pc, pc, r3, lsl #2
   1965c:	nop			; (mov r0, r0)
   19660:	cmp	r0, r1, lsl #31
   19664:	adc	r2, r2, r2
   19668:	subcs	r0, r0, r1, lsl #31
   1966c:	cmp	r0, r1, lsl #30
   19670:	adc	r2, r2, r2
   19674:	subcs	r0, r0, r1, lsl #30
   19678:	cmp	r0, r1, lsl #29
   1967c:	adc	r2, r2, r2
   19680:	subcs	r0, r0, r1, lsl #29
   19684:	cmp	r0, r1, lsl #28
   19688:	adc	r2, r2, r2
   1968c:	subcs	r0, r0, r1, lsl #28
   19690:	cmp	r0, r1, lsl #27
   19694:	adc	r2, r2, r2
   19698:	subcs	r0, r0, r1, lsl #27
   1969c:	cmp	r0, r1, lsl #26
   196a0:	adc	r2, r2, r2
   196a4:	subcs	r0, r0, r1, lsl #26
   196a8:	cmp	r0, r1, lsl #25
   196ac:	adc	r2, r2, r2
   196b0:	subcs	r0, r0, r1, lsl #25
   196b4:	cmp	r0, r1, lsl #24
   196b8:	adc	r2, r2, r2
   196bc:	subcs	r0, r0, r1, lsl #24
   196c0:	cmp	r0, r1, lsl #23
   196c4:	adc	r2, r2, r2
   196c8:	subcs	r0, r0, r1, lsl #23
   196cc:	cmp	r0, r1, lsl #22
   196d0:	adc	r2, r2, r2
   196d4:	subcs	r0, r0, r1, lsl #22
   196d8:	cmp	r0, r1, lsl #21
   196dc:	adc	r2, r2, r2
   196e0:	subcs	r0, r0, r1, lsl #21
   196e4:	cmp	r0, r1, lsl #20
   196e8:	adc	r2, r2, r2
   196ec:	subcs	r0, r0, r1, lsl #20
   196f0:	cmp	r0, r1, lsl #19
   196f4:	adc	r2, r2, r2
   196f8:	subcs	r0, r0, r1, lsl #19
   196fc:	cmp	r0, r1, lsl #18
   19700:	adc	r2, r2, r2
   19704:	subcs	r0, r0, r1, lsl #18
   19708:	cmp	r0, r1, lsl #17
   1970c:	adc	r2, r2, r2
   19710:	subcs	r0, r0, r1, lsl #17
   19714:	cmp	r0, r1, lsl #16
   19718:	adc	r2, r2, r2
   1971c:	subcs	r0, r0, r1, lsl #16
   19720:	cmp	r0, r1, lsl #15
   19724:	adc	r2, r2, r2
   19728:	subcs	r0, r0, r1, lsl #15
   1972c:	cmp	r0, r1, lsl #14
   19730:	adc	r2, r2, r2
   19734:	subcs	r0, r0, r1, lsl #14
   19738:	cmp	r0, r1, lsl #13
   1973c:	adc	r2, r2, r2
   19740:	subcs	r0, r0, r1, lsl #13
   19744:	cmp	r0, r1, lsl #12
   19748:	adc	r2, r2, r2
   1974c:	subcs	r0, r0, r1, lsl #12
   19750:	cmp	r0, r1, lsl #11
   19754:	adc	r2, r2, r2
   19758:	subcs	r0, r0, r1, lsl #11
   1975c:	cmp	r0, r1, lsl #10
   19760:	adc	r2, r2, r2
   19764:	subcs	r0, r0, r1, lsl #10
   19768:	cmp	r0, r1, lsl #9
   1976c:	adc	r2, r2, r2
   19770:	subcs	r0, r0, r1, lsl #9
   19774:	cmp	r0, r1, lsl #8
   19778:	adc	r2, r2, r2
   1977c:	subcs	r0, r0, r1, lsl #8
   19780:	cmp	r0, r1, lsl #7
   19784:	adc	r2, r2, r2
   19788:	subcs	r0, r0, r1, lsl #7
   1978c:	cmp	r0, r1, lsl #6
   19790:	adc	r2, r2, r2
   19794:	subcs	r0, r0, r1, lsl #6
   19798:	cmp	r0, r1, lsl #5
   1979c:	adc	r2, r2, r2
   197a0:	subcs	r0, r0, r1, lsl #5
   197a4:	cmp	r0, r1, lsl #4
   197a8:	adc	r2, r2, r2
   197ac:	subcs	r0, r0, r1, lsl #4
   197b0:	cmp	r0, r1, lsl #3
   197b4:	adc	r2, r2, r2
   197b8:	subcs	r0, r0, r1, lsl #3
   197bc:	cmp	r0, r1, lsl #2
   197c0:	adc	r2, r2, r2
   197c4:	subcs	r0, r0, r1, lsl #2
   197c8:	cmp	r0, r1, lsl #1
   197cc:	adc	r2, r2, r2
   197d0:	subcs	r0, r0, r1, lsl #1
   197d4:	cmp	r0, r1
   197d8:	adc	r2, r2, r2
   197dc:	subcs	r0, r0, r1
   197e0:	mov	r0, r2
   197e4:	bx	lr
   197e8:	moveq	r0, #1
   197ec:	movne	r0, #0
   197f0:	bx	lr
   197f4:	clz	r2, r1
   197f8:	rsb	r2, r2, #31
   197fc:	lsr	r0, r0, r2
   19800:	bx	lr
   19804:	cmp	r0, #0
   19808:	mvnne	r0, #0
   1980c:	b	19a70 <argp_error@@Base+0x1998>
   19810:	cmp	r1, #0
   19814:	beq	19804 <argp_error@@Base+0x172c>
   19818:	push	{r0, r1, lr}
   1981c:	bl	19624 <argp_error@@Base+0x154c>
   19820:	pop	{r1, r2, lr}
   19824:	mul	r3, r2, r0
   19828:	sub	r1, r1, r3
   1982c:	bx	lr
   19830:	cmp	r1, #0
   19834:	beq	19a40 <argp_error@@Base+0x1968>
   19838:	eor	ip, r0, r1
   1983c:	rsbmi	r1, r1, #0
   19840:	subs	r2, r1, #1
   19844:	beq	19a0c <argp_error@@Base+0x1934>
   19848:	movs	r3, r0
   1984c:	rsbmi	r3, r0, #0
   19850:	cmp	r3, r1
   19854:	bls	19a18 <argp_error@@Base+0x1940>
   19858:	tst	r1, r2
   1985c:	beq	19a28 <argp_error@@Base+0x1950>
   19860:	clz	r2, r3
   19864:	clz	r0, r1
   19868:	sub	r2, r0, r2
   1986c:	rsbs	r2, r2, #31
   19870:	addne	r2, r2, r2, lsl #1
   19874:	mov	r0, #0
   19878:	addne	pc, pc, r2, lsl #2
   1987c:	nop			; (mov r0, r0)
   19880:	cmp	r3, r1, lsl #31
   19884:	adc	r0, r0, r0
   19888:	subcs	r3, r3, r1, lsl #31
   1988c:	cmp	r3, r1, lsl #30
   19890:	adc	r0, r0, r0
   19894:	subcs	r3, r3, r1, lsl #30
   19898:	cmp	r3, r1, lsl #29
   1989c:	adc	r0, r0, r0
   198a0:	subcs	r3, r3, r1, lsl #29
   198a4:	cmp	r3, r1, lsl #28
   198a8:	adc	r0, r0, r0
   198ac:	subcs	r3, r3, r1, lsl #28
   198b0:	cmp	r3, r1, lsl #27
   198b4:	adc	r0, r0, r0
   198b8:	subcs	r3, r3, r1, lsl #27
   198bc:	cmp	r3, r1, lsl #26
   198c0:	adc	r0, r0, r0
   198c4:	subcs	r3, r3, r1, lsl #26
   198c8:	cmp	r3, r1, lsl #25
   198cc:	adc	r0, r0, r0
   198d0:	subcs	r3, r3, r1, lsl #25
   198d4:	cmp	r3, r1, lsl #24
   198d8:	adc	r0, r0, r0
   198dc:	subcs	r3, r3, r1, lsl #24
   198e0:	cmp	r3, r1, lsl #23
   198e4:	adc	r0, r0, r0
   198e8:	subcs	r3, r3, r1, lsl #23
   198ec:	cmp	r3, r1, lsl #22
   198f0:	adc	r0, r0, r0
   198f4:	subcs	r3, r3, r1, lsl #22
   198f8:	cmp	r3, r1, lsl #21
   198fc:	adc	r0, r0, r0
   19900:	subcs	r3, r3, r1, lsl #21
   19904:	cmp	r3, r1, lsl #20
   19908:	adc	r0, r0, r0
   1990c:	subcs	r3, r3, r1, lsl #20
   19910:	cmp	r3, r1, lsl #19
   19914:	adc	r0, r0, r0
   19918:	subcs	r3, r3, r1, lsl #19
   1991c:	cmp	r3, r1, lsl #18
   19920:	adc	r0, r0, r0
   19924:	subcs	r3, r3, r1, lsl #18
   19928:	cmp	r3, r1, lsl #17
   1992c:	adc	r0, r0, r0
   19930:	subcs	r3, r3, r1, lsl #17
   19934:	cmp	r3, r1, lsl #16
   19938:	adc	r0, r0, r0
   1993c:	subcs	r3, r3, r1, lsl #16
   19940:	cmp	r3, r1, lsl #15
   19944:	adc	r0, r0, r0
   19948:	subcs	r3, r3, r1, lsl #15
   1994c:	cmp	r3, r1, lsl #14
   19950:	adc	r0, r0, r0
   19954:	subcs	r3, r3, r1, lsl #14
   19958:	cmp	r3, r1, lsl #13
   1995c:	adc	r0, r0, r0
   19960:	subcs	r3, r3, r1, lsl #13
   19964:	cmp	r3, r1, lsl #12
   19968:	adc	r0, r0, r0
   1996c:	subcs	r3, r3, r1, lsl #12
   19970:	cmp	r3, r1, lsl #11
   19974:	adc	r0, r0, r0
   19978:	subcs	r3, r3, r1, lsl #11
   1997c:	cmp	r3, r1, lsl #10
   19980:	adc	r0, r0, r0
   19984:	subcs	r3, r3, r1, lsl #10
   19988:	cmp	r3, r1, lsl #9
   1998c:	adc	r0, r0, r0
   19990:	subcs	r3, r3, r1, lsl #9
   19994:	cmp	r3, r1, lsl #8
   19998:	adc	r0, r0, r0
   1999c:	subcs	r3, r3, r1, lsl #8
   199a0:	cmp	r3, r1, lsl #7
   199a4:	adc	r0, r0, r0
   199a8:	subcs	r3, r3, r1, lsl #7
   199ac:	cmp	r3, r1, lsl #6
   199b0:	adc	r0, r0, r0
   199b4:	subcs	r3, r3, r1, lsl #6
   199b8:	cmp	r3, r1, lsl #5
   199bc:	adc	r0, r0, r0
   199c0:	subcs	r3, r3, r1, lsl #5
   199c4:	cmp	r3, r1, lsl #4
   199c8:	adc	r0, r0, r0
   199cc:	subcs	r3, r3, r1, lsl #4
   199d0:	cmp	r3, r1, lsl #3
   199d4:	adc	r0, r0, r0
   199d8:	subcs	r3, r3, r1, lsl #3
   199dc:	cmp	r3, r1, lsl #2
   199e0:	adc	r0, r0, r0
   199e4:	subcs	r3, r3, r1, lsl #2
   199e8:	cmp	r3, r1, lsl #1
   199ec:	adc	r0, r0, r0
   199f0:	subcs	r3, r3, r1, lsl #1
   199f4:	cmp	r3, r1
   199f8:	adc	r0, r0, r0
   199fc:	subcs	r3, r3, r1
   19a00:	cmp	ip, #0
   19a04:	rsbmi	r0, r0, #0
   19a08:	bx	lr
   19a0c:	teq	ip, r0
   19a10:	rsbmi	r0, r0, #0
   19a14:	bx	lr
   19a18:	movcc	r0, #0
   19a1c:	asreq	r0, ip, #31
   19a20:	orreq	r0, r0, #1
   19a24:	bx	lr
   19a28:	clz	r2, r1
   19a2c:	rsb	r2, r2, #31
   19a30:	cmp	ip, #0
   19a34:	lsr	r0, r3, r2
   19a38:	rsbmi	r0, r0, #0
   19a3c:	bx	lr
   19a40:	cmp	r0, #0
   19a44:	mvngt	r0, #-2147483648	; 0x80000000
   19a48:	movlt	r0, #-2147483648	; 0x80000000
   19a4c:	b	19a70 <argp_error@@Base+0x1998>
   19a50:	cmp	r1, #0
   19a54:	beq	19a40 <argp_error@@Base+0x1968>
   19a58:	push	{r0, r1, lr}
   19a5c:	bl	19838 <argp_error@@Base+0x1760>
   19a60:	pop	{r1, r2, lr}
   19a64:	mul	r3, r2, r0
   19a68:	sub	r1, r1, r3
   19a6c:	bx	lr
   19a70:	push	{r1, lr}
   19a74:	mov	r0, #8
   19a78:	bl	11568 <raise@plt>
   19a7c:	pop	{r1, pc}
   19a80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19a84:	mov	r7, r0
   19a88:	ldr	r6, [pc, #72]	; 19ad8 <argp_error@@Base+0x1a00>
   19a8c:	ldr	r5, [pc, #72]	; 19adc <argp_error@@Base+0x1a04>
   19a90:	add	r6, pc, r6
   19a94:	add	r5, pc, r5
   19a98:	sub	r6, r6, r5
   19a9c:	mov	r8, r1
   19aa0:	mov	r9, r2
   19aa4:	bl	11530 <calloc@plt-0x20>
   19aa8:	asrs	r6, r6, #2
   19aac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ab0:	mov	r4, #0
   19ab4:	add	r4, r4, #1
   19ab8:	ldr	r3, [r5], #4
   19abc:	mov	r2, r9
   19ac0:	mov	r1, r8
   19ac4:	mov	r0, r7
   19ac8:	blx	r3
   19acc:	cmp	r6, r4
   19ad0:	bne	19ab4 <argp_error@@Base+0x19dc>
   19ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ad8:	andeq	r1, r1, r0, ror r4
   19adc:	andeq	r1, r1, r8, ror #8
   19ae0:	bx	lr

Disassembly of section .fini:

00019ae4 <.fini>:
   19ae4:	push	{r3, lr}
   19ae8:	pop	{r3, pc}
