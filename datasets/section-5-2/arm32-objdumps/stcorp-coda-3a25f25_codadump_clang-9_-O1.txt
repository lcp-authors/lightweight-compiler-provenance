
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

000125fc <.init>:
   125fc:	push	{r3, lr}
   12600:	bl	12b08 <_start@@Base+0x3c>
   12604:	pop	{r3, pc}

Disassembly of section .plt:

00012608 <coda_cursor_get_byte_size@plt-0x14>:
   12608:	push	{lr}		; (str lr, [sp, #-4]!)
   1260c:	ldr	lr, [pc, #4]	; 12618 <coda_cursor_get_byte_size@plt-0x4>
   12610:	add	lr, pc, lr
   12614:	ldr	pc, [lr, #8]!
   12618:	andeq	r9, r1, r8, ror #19

0001261c <coda_cursor_get_byte_size@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #102400	; 0x19000
   12624:	ldr	pc, [ip, #2536]!	; 0x9e8

00012628 <coda_type_get_special_type_name@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #102400	; 0x19000
   12630:	ldr	pc, [ip, #2528]!	; 0x9e0

00012634 <coda_set_option_use_fast_size_expressions@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #102400	; 0x19000
   1263c:	ldr	pc, [ip, #2520]!	; 0x9d8

00012640 <raise@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #102400	; 0x19000
   12648:	ldr	pc, [ip, #2512]!	; 0x9d0

0001264c <coda_get_option_bypass_special_types@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #102400	; 0x19000
   12654:	ldr	pc, [ip, #2504]!	; 0x9c8

00012658 <coda_set_option_perform_boundary_checks@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #102400	; 0x19000
   12660:	ldr	pc, [ip, #2496]!	; 0x9c0

00012664 <strcmp@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #102400	; 0x19000
   1266c:	ldr	pc, [ip, #2488]!	; 0x9b8

00012670 <coda_type_get_record_field_hidden_status@plt>:
   12670:	add	ip, pc, #0, 12
   12674:	add	ip, ip, #102400	; 0x19000
   12678:	ldr	pc, [ip, #2480]!	; 0x9b0

0001267c <printf@plt>:
   1267c:	add	ip, pc, #0, 12
   12680:	add	ip, ip, #102400	; 0x19000
   12684:	ldr	pc, [ip, #2472]!	; 0x9a8

00012688 <coda_cursor_get_record_field_available_status@plt>:
   12688:	add	ip, pc, #0, 12
   1268c:	add	ip, ip, #102400	; 0x19000
   12690:	ldr	pc, [ip, #2464]!	; 0x9a0

00012694 <fopen@plt>:
   12694:	add	ip, pc, #0, 12
   12698:	add	ip, ip, #102400	; 0x19000
   1269c:	ldr	pc, [ip, #2456]!	; 0x998

000126a0 <coda_set_error@plt>:
   126a0:	add	ip, pc, #0, 12
   126a4:	add	ip, ip, #102400	; 0x19000
   126a8:	ldr	pc, [ip, #2448]!	; 0x990

000126ac <coda_open@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #102400	; 0x19000
   126b4:	ldr	pc, [ip, #2440]!	; 0x988

000126b8 <fflush@plt>:
   126b8:	add	ip, pc, #0, 12
   126bc:	add	ip, ip, #102400	; 0x19000
   126c0:	ldr	pc, [ip, #2432]!	; 0x980

000126c4 <coda_time_double_to_string@plt>:
   126c4:	add	ip, pc, #0, 12
   126c8:	add	ip, ip, #102400	; 0x19000
   126cc:	ldr	pc, [ip, #2424]!	; 0x978

000126d0 <coda_cursor_get_num_elements@plt>:
   126d0:	add	ip, pc, #0, 12
   126d4:	add	ip, ip, #102400	; 0x19000
   126d8:	ldr	pc, [ip, #2416]!	; 0x970

000126dc <coda_str64u@plt>:
   126dc:	add	ip, pc, #0, 12
   126e0:	add	ip, ip, #102400	; 0x19000
   126e4:	ldr	pc, [ip, #2408]!	; 0x968

000126e8 <free@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #102400	; 0x19000
   126f0:	ldr	pc, [ip, #2400]!	; 0x960

000126f4 <coda_set_option_use_mmap@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #102400	; 0x19000
   126fc:	ldr	pc, [ip, #2392]!	; 0x958

00012700 <coda_set_definition_path_conditional@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #102400	; 0x19000
   12708:	ldr	pc, [ip, #2384]!	; 0x950

0001270c <coda_cursor_read_uint32@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #102400	; 0x19000
   12714:	ldr	pc, [ip, #2376]!	; 0x948

00012718 <coda_set_option_bypass_special_types@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #102400	; 0x19000
   12720:	ldr	pc, [ip, #2368]!	; 0x940

00012724 <coda_type_get_record_field_type@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #102400	; 0x19000
   1272c:	ldr	pc, [ip, #2360]!	; 0x938

00012730 <coda_cursor_get_type@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #102400	; 0x19000
   12738:	ldr	pc, [ip, #2352]!	; 0x930

0001273c <memcpy@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #102400	; 0x19000
   12744:	ldr	pc, [ip, #2344]!	; 0x928

00012748 <coda_isInf@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #102400	; 0x19000
   12750:	ldr	pc, [ip, #2336]!	; 0x920

00012754 <coda_type_get_bit_size@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #102400	; 0x19000
   1275c:	ldr	pc, [ip, #2328]!	; 0x918

00012760 <coda_type_get_record_field_available_status@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #102400	; 0x19000
   12768:	ldr	pc, [ip, #2320]!	; 0x910

0001276c <coda_cursor_has_attributes@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #102400	; 0x19000
   12774:	ldr	pc, [ip, #2312]!	; 0x908

00012778 <coda_cursor_get_type_class@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #102400	; 0x19000
   12780:	ldr	pc, [ip, #2304]!	; 0x900

00012784 <coda_set_definition_path@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #102400	; 0x19000
   1278c:	ldr	pc, [ip, #2296]!	; 0x8f8

00012790 <coda_get_product_format@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #102400	; 0x19000
   12798:	ldr	pc, [ip, #2288]!	; 0x8f0

0001279c <coda_type_get_unit@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #102400	; 0x19000
   127a4:	ldr	pc, [ip, #2280]!	; 0x8e8

000127a8 <coda_type_get_description@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #102400	; 0x19000
   127b0:	ldr	pc, [ip, #2272]!	; 0x8e0

000127b4 <coda_cursor_get_special_type@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #102400	; 0x19000
   127bc:	ldr	pc, [ip, #2264]!	; 0x8d8

000127c0 <coda_cursor_goto_first_array_element@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #102400	; 0x19000
   127c8:	ldr	pc, [ip, #2256]!	; 0x8d0

000127cc <fwrite@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #102400	; 0x19000
   127d4:	ldr	pc, [ip, #2248]!	; 0x8c8

000127d8 <coda_cursor_set_product@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #102400	; 0x19000
   127e0:	ldr	pc, [ip, #2240]!	; 0x8c0

000127e4 <coda_cursor_goto_first_record_field@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #102400	; 0x19000
   127ec:	ldr	pc, [ip, #2232]!	; 0x8b8

000127f0 <coda_cursor_goto_record_field_by_index@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #102400	; 0x19000
   127f8:	ldr	pc, [ip, #2224]!	; 0x8b0

000127fc <coda_done@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #102400	; 0x19000
   12804:	ldr	pc, [ip, #2216]!	; 0x8a8

00012808 <puts@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #102400	; 0x19000
   12810:	ldr	pc, [ip, #2208]!	; 0x8a0

00012814 <coda_cursor_get_read_type@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #102400	; 0x19000
   1281c:	ldr	pc, [ip, #2200]!	; 0x898

00012820 <malloc@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #102400	; 0x19000
   12828:	ldr	pc, [ip, #2192]!	; 0x890

0001282c <__libc_start_main@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #102400	; 0x19000
   12834:	ldr	pc, [ip, #2184]!	; 0x888

00012838 <__gmon_start__@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #102400	; 0x19000
   12840:	ldr	pc, [ip, #2176]!	; 0x880

00012844 <coda_cursor_read_string@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #102400	; 0x19000
   1284c:	ldr	pc, [ip, #2168]!	; 0x878

00012850 <coda_cursor_goto_parent@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #102400	; 0x19000
   12858:	ldr	pc, [ip, #2160]!	; 0x870

0001285c <coda_type_get_num_record_fields@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #102400	; 0x19000
   12864:	ldr	pc, [ip, #2152]!	; 0x868

00012868 <exit@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #102400	; 0x19000
   12870:	ldr	pc, [ip, #2144]!	; 0x860

00012874 <coda_type_get_read_type@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #102400	; 0x19000
   1287c:	ldr	pc, [ip, #2136]!	; 0x858

00012880 <coda_cursor_get_string_length@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #102400	; 0x19000
   12888:	ldr	pc, [ip, #2128]!	; 0x850

0001288c <coda_cursor_read_uint64@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #102400	; 0x19000
   12894:	ldr	pc, [ip, #2120]!	; 0x848

00012898 <coda_cursor_read_double@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #102400	; 0x19000
   128a0:	ldr	pc, [ip, #2112]!	; 0x840

000128a4 <coda_isNaN@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #102400	; 0x19000
   128ac:	ldr	pc, [ip, #2104]!	; 0x838

000128b0 <fprintf@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #102400	; 0x19000
   128b8:	ldr	pc, [ip, #2096]!	; 0x830

000128bc <coda_cursor_goto_next_array_element@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #102400	; 0x19000
   128c4:	ldr	pc, [ip, #2088]!	; 0x828

000128c8 <coda_open_as@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #102400	; 0x19000
   128d0:	ldr	pc, [ip, #2080]!	; 0x820

000128d4 <coda_init@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #102400	; 0x19000
   128dc:	ldr	pc, [ip, #2072]!	; 0x818

000128e0 <coda_set_option_perform_conversions@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #102400	; 0x19000
   128e8:	ldr	pc, [ip, #2064]!	; 0x810

000128ec <coda_cursor_goto_attributes@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #102400	; 0x19000
   128f4:	ldr	pc, [ip, #2056]!	; 0x808

000128f8 <coda_cursor_read_char@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #102400	; 0x19000
   12900:	ldr	pc, [ip, #2048]!	; 0x800

00012904 <memset@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #102400	; 0x19000
   1290c:	ldr	pc, [ip, #2040]!	; 0x7f8

00012910 <putchar@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #102400	; 0x19000
   12918:	ldr	pc, [ip, #2032]!	; 0x7f0

0001291c <strncpy@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #102400	; 0x19000
   12924:	ldr	pc, [ip, #2024]!	; 0x7e8

00012928 <coda_type_get_special_type@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #102400	; 0x19000
   12930:	ldr	pc, [ip, #2016]!	; 0x7e0

00012934 <coda_type_get_record_union_status@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #102400	; 0x19000
   1293c:	ldr	pc, [ip, #2008]!	; 0x7d8

00012940 <coda_cursor_read_complex_double_split@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #102400	; 0x19000
   12948:	ldr	pc, [ip, #2000]!	; 0x7d0

0001294c <coda_type_get_array_base_type@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #102400	; 0x19000
   12954:	ldr	pc, [ip, #1992]!	; 0x7c8

00012958 <fclose@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #102400	; 0x19000
   12960:	ldr	pc, [ip, #1984]!	; 0x7c0

00012964 <coda_type_get_string_length@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #102400	; 0x19000
   1296c:	ldr	pc, [ip, #1976]!	; 0x7b8

00012970 <coda_type_get_native_type_name@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #102400	; 0x19000
   12978:	ldr	pc, [ip, #1968]!	; 0x7b0

0001297c <coda_cursor_get_array_dim@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #102400	; 0x19000
   12984:	ldr	pc, [ip, #1960]!	; 0x7a8

00012988 <coda_cursor_has_ascii_content@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #102400	; 0x19000
   12990:	ldr	pc, [ip, #1952]!	; 0x7a0

00012994 <coda_close@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #102400	; 0x19000
   1299c:	ldr	pc, [ip, #1944]!	; 0x798

000129a0 <coda_cursor_read_int64@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #102400	; 0x19000
   129a8:	ldr	pc, [ip, #1936]!	; 0x790

000129ac <vfprintf@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #102400	; 0x19000
   129b4:	ldr	pc, [ip, #1928]!	; 0x788

000129b8 <coda_cursor_goto@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #102400	; 0x19000
   129c0:	ldr	pc, [ip, #1920]!	; 0x780

000129c4 <coda_type_get_record_field_index_from_name@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #102400	; 0x19000
   129cc:	ldr	pc, [ip, #1912]!	; 0x778

000129d0 <coda_cursor_read_complex_double_pair@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #102400	; 0x19000
   129d8:	ldr	pc, [ip, #1904]!	; 0x770

000129dc <coda_cursor_goto_next_record_field@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #102400	; 0x19000
   129e4:	ldr	pc, [ip, #1896]!	; 0x768

000129e8 <fputc@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #102400	; 0x19000
   129f0:	ldr	pc, [ip, #1888]!	; 0x760

000129f4 <coda_type_get_array_dim@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #102400	; 0x19000
   129fc:	ldr	pc, [ip, #1880]!	; 0x758

00012a00 <coda_cursor_get_bit_size@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #102400	; 0x19000
   12a08:	ldr	pc, [ip, #1872]!	; 0x750

00012a0c <atoi@plt>:
   12a0c:	add	ip, pc, #0, 12
   12a10:	add	ip, ip, #102400	; 0x19000
   12a14:	ldr	pc, [ip, #1864]!	; 0x748

00012a18 <coda_errno_to_string@plt>:
   12a18:	add	ip, pc, #0, 12
   12a1c:	add	ip, ip, #102400	; 0x19000
   12a20:	ldr	pc, [ip, #1856]!	; 0x740

00012a24 <coda_cursor_use_base_type_of_special_type@plt>:
   12a24:	add	ip, pc, #0, 12
   12a28:	add	ip, ip, #102400	; 0x19000
   12a2c:	ldr	pc, [ip, #1848]!	; 0x738

00012a30 <coda_cursor_get_available_union_field_index@plt>:
   12a30:	add	ip, pc, #0, 12
   12a34:	add	ip, ip, #102400	; 0x19000
   12a38:	ldr	pc, [ip, #1840]!	; 0x730

00012a3c <coda_cursor_read_int32@plt>:
   12a3c:	add	ip, pc, #0, 12
   12a40:	add	ip, ip, #102400	; 0x19000
   12a44:	ldr	pc, [ip, #1832]!	; 0x728

00012a48 <coda_cursor_get_file_bit_offset@plt>:
   12a48:	add	ip, pc, #0, 12
   12a4c:	add	ip, ip, #102400	; 0x19000
   12a50:	ldr	pc, [ip, #1824]!	; 0x720

00012a54 <coda_get_libcoda_version@plt>:
   12a54:	add	ip, pc, #0, 12
   12a58:	add	ip, ip, #102400	; 0x19000
   12a5c:	ldr	pc, [ip, #1816]!	; 0x718

00012a60 <coda_get_errno@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #102400	; 0x19000
   12a68:	ldr	pc, [ip, #1808]!	; 0x710

00012a6c <coda_type_get_special_base_type@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #102400	; 0x19000
   12a74:	ldr	pc, [ip, #1800]!	; 0x708

00012a78 <coda_type_get_record_field_name@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #102400	; 0x19000
   12a80:	ldr	pc, [ip, #1792]!	; 0x700

00012a84 <fputs@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #102400	; 0x19000
   12a8c:	ldr	pc, [ip, #1784]!	; 0x6f8

00012a90 <abort@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #102400	; 0x19000
   12a98:	ldr	pc, [ip, #1776]!	; 0x6f0

00012a9c <coda_cursor_read_bits@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #102400	; 0x19000
   12aa4:	ldr	pc, [ip, #1768]!	; 0x6e8

00012aa8 <coda_str64@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #102400	; 0x19000
   12ab0:	ldr	pc, [ip, #1760]!	; 0x6e0

00012ab4 <__assert_fail@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #102400	; 0x19000
   12abc:	ldr	pc, [ip, #1752]!	; 0x6d8

00012ac0 <coda_type_get_class@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #102400	; 0x19000
   12ac8:	ldr	pc, [ip, #1744]!	; 0x6d0

Disassembly of section .text:

00012acc <_start@@Base>:
   12acc:	mov	fp, #0
   12ad0:	mov	lr, #0
   12ad4:	pop	{r1}		; (ldr r1, [sp], #4)
   12ad8:	mov	r2, sp
   12adc:	push	{r2}		; (str r2, [sp, #-4]!)
   12ae0:	push	{r0}		; (str r0, [sp, #-4]!)
   12ae4:	ldr	ip, [pc, #16]	; 12afc <_start@@Base+0x30>
   12ae8:	push	{ip}		; (str ip, [sp, #-4]!)
   12aec:	ldr	r0, [pc, #12]	; 12b00 <_start@@Base+0x34>
   12af0:	ldr	r3, [pc, #12]	; 12b04 <_start@@Base+0x38>
   12af4:	bl	1282c <__libc_start_main@plt>
   12af8:	bl	12a90 <abort@plt>
   12afc:	andeq	r9, r1, r8, lsr #25
   12b00:	andeq	r7, r1, ip, ror #30
   12b04:	andeq	r9, r1, r8, asr #24
   12b08:	ldr	r3, [pc, #20]	; 12b24 <_start@@Base+0x58>
   12b0c:	ldr	r2, [pc, #20]	; 12b28 <_start@@Base+0x5c>
   12b10:	add	r3, pc, r3
   12b14:	ldr	r2, [r3, r2]
   12b18:	cmp	r2, #0
   12b1c:	bxeq	lr
   12b20:	b	12838 <__gmon_start__@plt>
   12b24:	andeq	r9, r1, r8, ror #9
   12b28:	muleq	r0, ip, r1
   12b2c:	ldr	r0, [pc, #24]	; 12b4c <_start@@Base+0x80>
   12b30:	ldr	r3, [pc, #24]	; 12b50 <_start@@Base+0x84>
   12b34:	cmp	r3, r0
   12b38:	bxeq	lr
   12b3c:	ldr	r3, [pc, #16]	; 12b54 <_start@@Base+0x88>
   12b40:	cmp	r3, #0
   12b44:	bxeq	lr
   12b48:	bx	r3
   12b4c:			; <UNDEFINED> instruction: 0x0002c1b0
   12b50:			; <UNDEFINED> instruction: 0x0002c1b0
   12b54:	andeq	r0, r0, r0
   12b58:	ldr	r0, [pc, #36]	; 12b84 <_start@@Base+0xb8>
   12b5c:	ldr	r1, [pc, #36]	; 12b88 <_start@@Base+0xbc>
   12b60:	sub	r1, r1, r0
   12b64:	asr	r1, r1, #2
   12b68:	add	r1, r1, r1, lsr #31
   12b6c:	asrs	r1, r1, #1
   12b70:	bxeq	lr
   12b74:	ldr	r3, [pc, #16]	; 12b8c <_start@@Base+0xc0>
   12b78:	cmp	r3, #0
   12b7c:	bxeq	lr
   12b80:	bx	r3
   12b84:			; <UNDEFINED> instruction: 0x0002c1b0
   12b88:			; <UNDEFINED> instruction: 0x0002c1b0
   12b8c:	andeq	r0, r0, r0
   12b90:	push	{r4, lr}
   12b94:	ldr	r4, [pc, #24]	; 12bb4 <_start@@Base+0xe8>
   12b98:	ldrb	r3, [r4]
   12b9c:	cmp	r3, #0
   12ba0:	popne	{r4, pc}
   12ba4:	bl	12b2c <_start@@Base+0x60>
   12ba8:	mov	r3, #1
   12bac:	strb	r3, [r4]
   12bb0:	pop	{r4, pc}
   12bb4:			; <UNDEFINED> instruction: 0x0002c1b8
   12bb8:	b	12b58 <_start@@Base+0x8c>

00012bbc <export_data_element_to_ascii@@Base>:
   12bbc:	push	{r4, sl, fp, lr}
   12bc0:	add	fp, sp, #8
   12bc4:	movw	r0, #49596	; 0xc1bc
   12bc8:	movt	r0, #2
   12bcc:	ldrb	r1, [r0]
   12bd0:	cmp	r1, #0
   12bd4:	movw	r4, #53392	; 0xd090
   12bd8:	movt	r4, #2
   12bdc:	beq	12bf0 <export_data_element_to_ascii@@Base+0x34>
   12be0:	ldr	r1, [r4]
   12be4:	mov	r0, #10
   12be8:	bl	129e8 <fputc@plt>
   12bec:	b	12bf8 <export_data_element_to_ascii@@Base+0x3c>
   12bf0:	mov	r1, #1
   12bf4:	strb	r1, [r0]
   12bf8:	movw	r0, #53792	; 0xd220
   12bfc:	movt	r0, #2
   12c00:	ldr	r0, [r0]
   12c04:	cmp	r0, #0
   12c08:	beq	12c28 <export_data_element_to_ascii@@Base+0x6c>
   12c0c:	ldr	r0, [r4]
   12c10:	mov	r1, #2
   12c14:	mov	r2, #0
   12c18:	bl	167d0 <print_full_field_name@@Base>
   12c1c:	ldr	r1, [r4]
   12c20:	mov	r0, #10
   12c24:	bl	129e8 <fputc@plt>
   12c28:	movw	r0, #53424	; 0xd0b0
   12c2c:	movt	r0, #2
   12c30:	ldr	r1, [r0]
   12c34:	cmp	r1, #1
   12c38:	blt	12c50 <export_data_element_to_ascii@@Base+0x94>
   12c3c:	add	r0, r0, r1, lsl #3
   12c40:	ldr	r1, [r0, #296]	; 0x128
   12c44:	ldr	r0, [r0, #300]	; 0x12c
   12c48:	orrs	r0, r1, r0
   12c4c:	popeq	{r4, sl, fp, pc}
   12c50:	ldr	r0, [r4]
   12c54:	mov	r1, #0
   12c58:	mov	r2, #0
   12c5c:	mov	r3, #0
   12c60:	pop	{r4, sl, fp, lr}
   12c64:	b	12c68 <export_data_element_to_ascii@@Base+0xac>
   12c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c6c:	add	fp, sp, #28
   12c70:	sub	sp, sp, #76	; 0x4c
   12c74:	str	r3, [sp, #32]
   12c78:	mov	r9, r2
   12c7c:	mov	r6, r1
   12c80:	str	r0, [sp, #36]	; 0x24
   12c84:	movw	r4, #49640	; 0xc1e8
   12c88:	movt	r4, #2
   12c8c:	add	r0, r4, r1, lsl #2
   12c90:	ldr	r0, [r0, #8]
   12c94:	sub	r1, fp, #32
   12c98:	bl	12ac0 <coda_type_get_class@plt>
   12c9c:	cmp	r0, #0
   12ca0:	beq	12ca8 <export_data_element_to_ascii@@Base+0xec>
   12ca4:	bl	17f28 <handle_coda_error@@Base>
   12ca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12cac:	cmp	r0, #0
   12cb0:	beq	12d90 <export_data_element_to_ascii@@Base+0x1d4>
   12cb4:	cmp	r0, #1
   12cb8:	bne	12dfc <export_data_element_to_ascii@@Base+0x240>
   12cbc:	add	r0, r9, r9, lsl #2
   12cc0:	add	sl, r4, r0, lsl #4
   12cc4:	ldr	r1, [sl, #800]	; 0x320
   12cc8:	cmp	r9, #0
   12ccc:	moveq	r0, #0
   12cd0:	streq	r0, [sl, #844]	; 0x34c
   12cd4:	mov	r2, sl
   12cd8:	ldr	r0, [r2, #804]!	; 0x324
   12cdc:	str	r2, [sp, #12]
   12ce0:	add	r3, r0, r1
   12ce4:	movw	r2, #53424	; 0xd0b0
   12ce8:	movt	r2, #2
   12cec:	ldr	r7, [r2, #104]	; 0x68
   12cf0:	str	r3, [sp, #20]
   12cf4:	str	r7, [sp, #16]
   12cf8:	cmp	r7, r3
   12cfc:	blt	12d20 <export_data_element_to_ascii@@Base+0x164>
   12d00:	ldr	r3, [r4, #3360]	; 0xd20
   12d04:	sub	r3, r3, #1
   12d08:	cmp	r3, r9
   12d0c:	ble	12d20 <export_data_element_to_ascii@@Base+0x164>
   12d10:	ldr	r3, [sl, #840]	; 0x348
   12d14:	ldr	r7, [sl, #844]	; 0x34c
   12d18:	mul	r3, r3, r7
   12d1c:	str	r3, [sl, #924]	; 0x39c
   12d20:	cmp	r0, #1
   12d24:	str	r6, [sp]
   12d28:	blt	12e20 <export_data_element_to_ascii@@Base+0x264>
   12d2c:	mov	lr, r4
   12d30:	add	r1, r2, r1, lsl #2
   12d34:	add	r2, sl, #848	; 0x350
   12d38:	add	r3, sl, #844	; 0x34c
   12d3c:	mov	r8, #1
   12d40:	mov	ip, #0
   12d44:	add	r4, sp, #40	; 0x28
   12d48:	mov	r5, #0
   12d4c:	b	12d70 <export_data_element_to_ascii@@Base+0x1b4>
   12d50:	add	r7, r7, #4
   12d54:	ldr	r7, [r7]
   12d58:	str	r7, [r4, r5]
   12d5c:	str	ip, [r2, r5]
   12d60:	mul	r8, r7, r8
   12d64:	subs	r0, r0, #1
   12d68:	add	r5, r5, #4
   12d6c:	beq	12e10 <export_data_element_to_ascii@@Base+0x254>
   12d70:	add	r7, r1, r5
   12d74:	ldr	r6, [r7, #72]	; 0x48
   12d78:	cmp	r6, #0
   12d7c:	beq	12d50 <export_data_element_to_ascii@@Base+0x194>
   12d80:	ldr	r7, [r7, #108]	; 0x6c
   12d84:	ldr	r6, [r3]
   12d88:	add	r7, r7, r6, lsl #2
   12d8c:	b	12d54 <export_data_element_to_ascii@@Base+0x198>
   12d90:	ldr	r0, [sp, #32]
   12d94:	add	r5, r4, r0, lsl #2
   12d98:	ldr	r1, [r5, #3492]!	; 0xda4
   12d9c:	add	r4, r4, #144	; 0x90
   12da0:	add	r2, sp, #40	; 0x28
   12da4:	mov	r0, r4
   12da8:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   12dac:	cmp	r0, #0
   12db0:	beq	12db8 <export_data_element_to_ascii@@Base+0x1fc>
   12db4:	bl	17f28 <handle_coda_error@@Base>
   12db8:	ldr	r0, [sp, #40]	; 0x28
   12dbc:	cmp	r0, #0
   12dc0:	beq	12e08 <export_data_element_to_ascii@@Base+0x24c>
   12dc4:	ldr	r1, [r5]
   12dc8:	mov	r0, r4
   12dcc:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   12dd0:	cmp	r0, #0
   12dd4:	beq	12ddc <export_data_element_to_ascii@@Base+0x220>
   12dd8:	bl	17f28 <handle_coda_error@@Base>
   12ddc:	add	r1, r6, #1
   12de0:	ldr	r0, [sp, #32]
   12de4:	add	r3, r0, #1
   12de8:	ldr	r0, [sp, #36]	; 0x24
   12dec:	mov	r2, r9
   12df0:	bl	12c68 <export_data_element_to_ascii@@Base+0xac>
   12df4:	mov	r0, r4
   12df8:	b	12f54 <export_data_element_to_ascii@@Base+0x398>
   12dfc:	ldr	r0, [sp, #36]	; 0x24
   12e00:	mov	r1, r6
   12e04:	bl	12f60 <export_data_element_to_ascii@@Base+0x3a4>
   12e08:	sub	sp, fp, #28
   12e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e10:	cmp	r8, #0
   12e14:	mov	r4, lr
   12e18:	bne	12e24 <export_data_element_to_ascii@@Base+0x268>
   12e1c:	b	12e08 <export_data_element_to_ascii@@Base+0x24c>
   12e20:	mov	r8, #1
   12e24:	str	r9, [sp, #8]
   12e28:	add	r0, r4, #144	; 0x90
   12e2c:	str	r0, [sp, #24]
   12e30:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   12e34:	cmp	r0, #0
   12e38:	beq	12e40 <export_data_element_to_ascii@@Base+0x284>
   12e3c:	bl	17f28 <handle_coda_error@@Base>
   12e40:	cmp	r8, #1
   12e44:	blt	12f50 <export_data_element_to_ascii@@Base+0x394>
   12e48:	add	r9, sl, #844	; 0x34c
   12e4c:	add	r0, sl, #924	; 0x39c
   12e50:	str	r0, [sp, #4]
   12e54:	add	r0, sp, #40	; 0x28
   12e58:	sub	sl, r0, #4
   12e5c:	sub	r0, r8, #1
   12e60:	str	r0, [sp, #28]
   12e64:	ldr	r0, [sp, #8]
   12e68:	add	r7, r0, #1
   12e6c:	ldr	r0, [sp]
   12e70:	add	r5, r0, #1
   12e74:	mov	r4, #0
   12e78:	mov	r6, #0
   12e7c:	b	12e8c <export_data_element_to_ascii@@Base+0x2d0>
   12e80:	add	r6, r6, #1
   12e84:	cmp	r6, r8
   12e88:	beq	12f50 <export_data_element_to_ascii@@Base+0x394>
   12e8c:	ldr	r0, [sp, #36]	; 0x24
   12e90:	mov	r1, r5
   12e94:	mov	r2, r7
   12e98:	ldr	r3, [sp, #32]
   12e9c:	bl	12c68 <export_data_element_to_ascii@@Base+0xac>
   12ea0:	ldr	r0, [sp, #28]
   12ea4:	cmp	r6, r0
   12ea8:	bge	12e80 <export_data_element_to_ascii@@Base+0x2c4>
   12eac:	ldr	r0, [sp, #24]
   12eb0:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   12eb4:	cmp	r0, #0
   12eb8:	beq	12ec0 <export_data_element_to_ascii@@Base+0x304>
   12ebc:	bl	17f28 <handle_coda_error@@Base>
   12ec0:	ldr	r0, [sp, #20]
   12ec4:	ldr	r1, [sp, #16]
   12ec8:	cmp	r1, r0
   12ecc:	blt	12efc <export_data_element_to_ascii@@Base+0x340>
   12ed0:	movw	r0, #49640	; 0xc1e8
   12ed4:	movt	r0, #2
   12ed8:	ldr	r0, [r0, #3360]	; 0xd20
   12edc:	sub	r0, r0, #1
   12ee0:	ldr	r1, [sp, #8]
   12ee4:	cmp	r0, r1
   12ee8:	ble	12efc <export_data_element_to_ascii@@Base+0x340>
   12eec:	ldr	r1, [sp, #4]
   12ef0:	ldr	r0, [r1]
   12ef4:	add	r0, r0, #1
   12ef8:	str	r0, [r1]
   12efc:	movw	r0, #53408	; 0xd0a0
   12f00:	movt	r0, #2
   12f04:	ldr	r0, [r0]
   12f08:	cmp	r0, #0
   12f0c:	beq	12e80 <export_data_element_to_ascii@@Base+0x2c4>
   12f10:	ldr	r0, [sp, #12]
   12f14:	ldr	r0, [r0]
   12f18:	cmp	r0, #1
   12f1c:	blt	12e80 <export_data_element_to_ascii@@Base+0x2c4>
   12f20:	ldr	r1, [r9, r0, lsl #2]
   12f24:	add	r1, r1, #1
   12f28:	str	r1, [r9, r0, lsl #2]
   12f2c:	ldr	r2, [sl, r0, lsl #2]
   12f30:	cmp	r1, r2
   12f34:	bne	12e80 <export_data_element_to_ascii@@Base+0x2c4>
   12f38:	sub	r1, r0, #1
   12f3c:	str	r4, [r9, r0, lsl #2]
   12f40:	cmp	r1, #0
   12f44:	mov	r0, r1
   12f48:	bgt	12f20 <export_data_element_to_ascii@@Base+0x364>
   12f4c:	b	12e80 <export_data_element_to_ascii@@Base+0x2c4>
   12f50:	ldr	r0, [sp, #24]
   12f54:	bl	12850 <coda_cursor_goto_parent@plt>
   12f58:	sub	sp, fp, #28
   12f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f64:	add	fp, sp, #28
   12f68:	sub	sp, sp, #68	; 0x44
   12f6c:	mov	r5, r1
   12f70:	mov	r4, r0
   12f74:	movw	r0, #53408	; 0xd0a0
   12f78:	movt	r0, #2
   12f7c:	ldr	r0, [r0]
   12f80:	cmp	r0, #0
   12f84:	movne	r0, r4
   12f88:	blne	135b8 <export_data_element_to_ascii@@Base+0x9fc>
   12f8c:	movw	r6, #49640	; 0xc1e8
   12f90:	movt	r6, #2
   12f94:	add	r5, r6, r5, lsl #2
   12f98:	ldr	r0, [r5, #8]!
   12f9c:	sub	r1, fp, #32
   12fa0:	bl	12ac0 <coda_type_get_class@plt>
   12fa4:	cmp	r0, #0
   12fa8:	beq	12fb0 <export_data_element_to_ascii@@Base+0x3f4>
   12fac:	bl	17f28 <handle_coda_error@@Base>
   12fb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12fb4:	sub	r1, r0, #2
   12fb8:	cmp	r1, #4
   12fbc:	bcs	13050 <export_data_element_to_ascii@@Base+0x494>
   12fc0:	ldr	r0, [r5]
   12fc4:	sub	r1, fp, #36	; 0x24
   12fc8:	bl	12874 <coda_type_get_read_type@plt>
   12fcc:	cmp	r0, #0
   12fd0:	beq	12fd8 <export_data_element_to_ascii@@Base+0x41c>
   12fd4:	bl	17f28 <handle_coda_error@@Base>
   12fd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12fdc:	add	r0, r0, #1
   12fe0:	cmp	r0, #13
   12fe4:	bhi	13558 <export_data_element_to_ascii@@Base+0x99c>
   12fe8:	add	r1, pc, #0
   12fec:	ldr	pc, [r1, r0, lsl #2]
   12ff0:	muleq	r1, r8, r5
   12ff4:	andeq	r3, r1, r8, lsr #32
   12ff8:	andeq	r3, r1, r4, asr #2
   12ffc:	andeq	r3, r1, r8, lsr #32
   13000:	andeq	r3, r1, r4, asr #2
   13004:	andeq	r3, r1, r8, lsr #32
   13008:	andeq	r3, r1, r4, asr #2
   1300c:	andeq	r3, r1, r0, lsl #4
   13010:	andeq	r3, r1, r0, lsr #9
   13014:	andeq	r3, r1, r4, ror r1
   13018:	andeq	r3, r1, r4, ror r1
   1301c:	ldrdeq	r3, [r1], -ip
   13020:	andeq	r3, r1, r0, lsr r2
   13024:	ldrdeq	r3, [r1], -ip
   13028:	add	r0, r6, #144	; 0x90
   1302c:	add	r1, sp, #16
   13030:	bl	12a3c <coda_cursor_read_int32@plt>
   13034:	cmp	r0, #0
   13038:	beq	13040 <export_data_element_to_ascii@@Base+0x484>
   1303c:	bl	17f28 <handle_coda_error@@Base>
   13040:	ldr	r2, [sp, #16]
   13044:	movw	r1, #41936	; 0xa3d0
   13048:	movt	r1, #1
   1304c:	b	13168 <export_data_element_to_ascii@@Base+0x5ac>
   13050:	cmp	r0, #6
   13054:	beq	13080 <export_data_element_to_ascii@@Base+0x4c4>
   13058:	cmp	r0, #2
   1305c:	bcs	13558 <export_data_element_to_ascii@@Base+0x99c>
   13060:	movw	r0, #40674	; 0x9ee2
   13064:	movt	r0, #1
   13068:	movw	r1, #40182	; 0x9cf6
   1306c:	movt	r1, #1
   13070:	movw	r3, #40302	; 0x9d6e
   13074:	movt	r3, #1
   13078:	mov	r2, #368	; 0x170
   1307c:	bl	12ab4 <__assert_fail@plt>
   13080:	ldr	r0, [r5]
   13084:	sub	r1, fp, #36	; 0x24
   13088:	bl	12928 <coda_type_get_special_type@plt>
   1308c:	cmp	r0, #0
   13090:	beq	13098 <export_data_element_to_ascii@@Base+0x4dc>
   13094:	bl	17f28 <handle_coda_error@@Base>
   13098:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1309c:	sub	r1, r0, #1
   130a0:	cmp	r1, #2
   130a4:	bcs	131b4 <export_data_element_to_ascii@@Base+0x5f8>
   130a8:	add	r0, r6, #144	; 0x90
   130ac:	add	r1, sp, #48	; 0x30
   130b0:	bl	12898 <coda_cursor_read_double@plt>
   130b4:	cmp	r0, #0
   130b8:	beq	130c0 <export_data_element_to_ascii@@Base+0x504>
   130bc:	bl	17f28 <handle_coda_error@@Base>
   130c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   130c4:	cmp	r0, #2
   130c8:	bne	13518 <export_data_element_to_ascii@@Base+0x95c>
   130cc:	movw	r0, #49628	; 0xc1dc
   130d0:	movt	r0, #2
   130d4:	ldr	r0, [r0]
   130d8:	cmp	r0, #0
   130dc:	beq	13518 <export_data_element_to_ascii@@Base+0x95c>
   130e0:	vldr	d0, [sp, #48]	; 0x30
   130e4:	bl	128a4 <coda_isNaN@plt>
   130e8:	cmp	r0, #0
   130ec:	bne	13100 <export_data_element_to_ascii@@Base+0x544>
   130f0:	vldr	d0, [sp, #48]	; 0x30
   130f4:	bl	12748 <coda_isInf@plt>
   130f8:	cmp	r0, #0
   130fc:	beq	13574 <export_data_element_to_ascii@@Base+0x9b8>
   13100:	mov	r0, #11
   13104:	movw	r1, #40384	; 0x9dc0
   13108:	movt	r1, #1
   1310c:	vld1.64	{d16-d17}, [r1], r0
   13110:	vld1.8	{d18-d19}, [r1]
   13114:	add	r1, sp, #16
   13118:	vst1.64	{d16-d17}, [r1], r0
   1311c:	vst1.8	{d18-d19}, [r1]
   13120:	movw	r0, #53796	; 0xd224
   13124:	movt	r0, #2
   13128:	ldr	r0, [r0]
   1312c:	cmp	r0, #0
   13130:	beq	1356c <export_data_element_to_ascii@@Base+0x9b0>
   13134:	movw	r1, #42171	; 0xa4bb
   13138:	movt	r1, #1
   1313c:	add	r2, sp, #16
   13140:	b	13168 <export_data_element_to_ascii@@Base+0x5ac>
   13144:	add	r0, r6, #144	; 0x90
   13148:	add	r1, sp, #16
   1314c:	bl	1270c <coda_cursor_read_uint32@plt>
   13150:	cmp	r0, #0
   13154:	beq	1315c <export_data_element_to_ascii@@Base+0x5a0>
   13158:	bl	17f28 <handle_coda_error@@Base>
   1315c:	ldr	r2, [sp, #16]
   13160:	movw	r1, #40287	; 0x9d5f
   13164:	movt	r1, #1
   13168:	mov	r0, r4
   1316c:	bl	128b0 <fprintf@plt>
   13170:	b	13558 <export_data_element_to_ascii@@Base+0x99c>
   13174:	add	r0, r6, #144	; 0x90
   13178:	add	r1, sp, #16
   1317c:	bl	12898 <coda_cursor_read_double@plt>
   13180:	cmp	r0, #0
   13184:	beq	1318c <export_data_element_to_ascii@@Base+0x5d0>
   13188:	bl	17f28 <handle_coda_error@@Base>
   1318c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13190:	movw	r2, #40291	; 0x9d63
   13194:	movt	r2, #1
   13198:	movw	r1, #40296	; 0x9d68
   1319c:	movt	r1, #1
   131a0:	vldr	d16, [sp, #16]
   131a4:	cmp	r0, #8
   131a8:	moveq	r1, r2
   131ac:	vmov	r2, r3, d16
   131b0:	b	13528 <export_data_element_to_ascii@@Base+0x96c>
   131b4:	cmp	r0, #3
   131b8:	bne	13558 <export_data_element_to_ascii@@Base+0x99c>
   131bc:	add	r0, r6, #144	; 0x90
   131c0:	add	r1, sp, #16
   131c4:	bl	129d0 <coda_cursor_read_complex_double_pair@plt>
   131c8:	cmp	r0, #0
   131cc:	beq	131d4 <export_data_element_to_ascii@@Base+0x618>
   131d0:	bl	17f28 <handle_coda_error@@Base>
   131d4:	movw	r0, #53396	; 0xd094
   131d8:	movt	r0, #2
   131dc:	vldr	d16, [sp, #16]
   131e0:	vldr	d17, [sp, #24]
   131e4:	ldr	r0, [r0]
   131e8:	vstr	d17, [sp, #8]
   131ec:	str	r0, [sp]
   131f0:	vmov	r2, r3, d16
   131f4:	movw	r1, #40364	; 0x9dac
   131f8:	movt	r1, #1
   131fc:	b	13528 <export_data_element_to_ascii@@Base+0x96c>
   13200:	add	r0, r6, #144	; 0x90
   13204:	add	r1, sp, #48	; 0x30
   13208:	bl	129a0 <coda_cursor_read_int64@plt>
   1320c:	cmp	r0, #0
   13210:	beq	13218 <export_data_element_to_ascii@@Base+0x65c>
   13214:	bl	17f28 <handle_coda_error@@Base>
   13218:	ldr	r0, [sp, #48]	; 0x30
   1321c:	ldr	r1, [sp, #52]	; 0x34
   13220:	add	r5, sp, #16
   13224:	mov	r2, r5
   13228:	bl	12aa8 <coda_str64@plt>
   1322c:	b	134cc <export_data_element_to_ascii@@Base+0x910>
   13230:	add	r6, r6, #144	; 0x90
   13234:	add	r1, sp, #16
   13238:	mov	r0, r6
   1323c:	bl	12880 <coda_cursor_get_string_length@plt>
   13240:	cmp	r0, #0
   13244:	beq	1324c <export_data_element_to_ascii@@Base+0x690>
   13248:	bl	17f28 <handle_coda_error@@Base>
   1324c:	ldr	r0, [sp, #16]
   13250:	add	r7, r0, #1
   13254:	mov	r0, r7
   13258:	bl	12820 <malloc@plt>
   1325c:	mov	r5, r0
   13260:	cmp	r0, #0
   13264:	bne	13290 <export_data_element_to_ascii@@Base+0x6d4>
   13268:	mov	r0, #126	; 0x7e
   1326c:	str	r0, [sp]
   13270:	movw	r1, #40129	; 0x9cc1
   13274:	movt	r1, #1
   13278:	movw	r3, #40182	; 0x9cf6
   1327c:	movt	r3, #1
   13280:	mvn	r0, #0
   13284:	mov	r2, r7
   13288:	bl	126a0 <coda_set_error@plt>
   1328c:	bl	17f28 <handle_coda_error@@Base>
   13290:	ldr	r0, [sp, #16]
   13294:	add	r2, r0, #1
   13298:	mov	r0, r6
   1329c:	mov	r1, r5
   132a0:	bl	12844 <coda_cursor_read_string@plt>
   132a4:	cmp	r0, #0
   132a8:	beq	132b0 <export_data_element_to_ascii@@Base+0x6f4>
   132ac:	bl	17f28 <handle_coda_error@@Base>
   132b0:	movw	r0, #53796	; 0xd224
   132b4:	movt	r0, #2
   132b8:	ldr	r0, [r0]
   132bc:	cmp	r0, #0
   132c0:	beq	13534 <export_data_element_to_ascii@@Base+0x978>
   132c4:	movw	r1, #42171	; 0xa4bb
   132c8:	movt	r1, #1
   132cc:	mov	r0, r4
   132d0:	mov	r2, r5
   132d4:	bl	128b0 <fprintf@plt>
   132d8:	b	13540 <export_data_element_to_ascii@@Base+0x984>
   132dc:	add	r8, r6, #144	; 0x90
   132e0:	add	r1, sp, #16
   132e4:	mov	r0, r8
   132e8:	bl	12a00 <coda_cursor_get_bit_size@plt>
   132ec:	cmp	r0, #0
   132f0:	beq	132f8 <export_data_element_to_ascii@@Base+0x73c>
   132f4:	bl	17f28 <handle_coda_error@@Base>
   132f8:	ldr	r0, [sp, #16]
   132fc:	ldr	r1, [sp, #20]
   13300:	lsr	r2, r0, #3
   13304:	orr	r2, r2, r1, lsl #29
   13308:	asr	r7, r1, #3
   1330c:	adds	r5, r2, #1
   13310:	adc	r9, r7, #0
   13314:	ands	sl, r0, #7
   13318:	moveq	r5, r2
   1331c:	mov	r0, r5
   13320:	bl	12820 <malloc@plt>
   13324:	mov	r6, r0
   13328:	cmp	sl, #0
   1332c:	moveq	r9, r7
   13330:	cmp	r0, #0
   13334:	bne	13360 <export_data_element_to_ascii@@Base+0x7a4>
   13338:	mov	r0, #163	; 0xa3
   1333c:	str	r0, [sp]
   13340:	movw	r1, #40129	; 0x9cc1
   13344:	movt	r1, #1
   13348:	movw	r3, #40182	; 0x9cf6
   1334c:	movt	r3, #1
   13350:	mvn	r0, #0
   13354:	mov	r2, r5
   13358:	bl	126a0 <coda_set_error@plt>
   1335c:	bl	17f28 <handle_coda_error@@Base>
   13360:	ldr	r0, [sp, #16]
   13364:	ldr	r1, [sp, #20]
   13368:	stm	sp, {r0, r1}
   1336c:	mov	r0, r8
   13370:	mov	r1, r6
   13374:	mov	r2, #0
   13378:	mov	r3, #0
   1337c:	bl	12a9c <coda_cursor_read_bits@plt>
   13380:	cmp	r0, #0
   13384:	beq	1338c <export_data_element_to_ascii@@Base+0x7d0>
   13388:	bl	17f28 <handle_coda_error@@Base>
   1338c:	subs	r0, r5, #1
   13390:	sbcs	r0, r9, #0
   13394:	blt	13494 <export_data_element_to_ascii@@Base+0x8d8>
   13398:	mov	sl, #0
   1339c:	movw	r7, #40272	; 0x9d50
   133a0:	movt	r7, #1
   133a4:	movw	r8, #40275	; 0x9d53
   133a8:	movt	r8, #1
   133ac:	b	133d8 <export_data_element_to_ascii@@Base+0x81c>
   133b0:	movw	r0, #40269	; 0x9d4d
   133b4:	movt	r0, #1
   133b8:	mov	r1, #2
   133bc:	mov	r2, #1
   133c0:	mov	r3, r4
   133c4:	bl	127cc <fwrite@plt>
   133c8:	add	sl, sl, #1
   133cc:	subs	r0, sl, r5
   133d0:	rscs	r0, r9, #0
   133d4:	bge	13494 <export_data_element_to_ascii@@Base+0x8d8>
   133d8:	ldrb	r2, [r6, sl]
   133dc:	sub	r0, r2, #7
   133e0:	cmp	r0, #6
   133e4:	bhi	13418 <export_data_element_to_ascii@@Base+0x85c>
   133e8:	add	r1, pc, #0
   133ec:	ldr	pc, [r1, r0, lsl #2]
   133f0:	andeq	r3, r1, ip, lsl #8
   133f4:	andeq	r3, r1, r4, asr #8
   133f8:	andeq	r3, r1, ip, lsr #8
   133fc:	andeq	r3, r1, r8, lsr r4
   13400:			; <UNDEFINED> instruction: 0x000133b0
   13404:	andeq	r3, r1, r0, asr r4
   13408:	andeq	r3, r1, r8, asr r4
   1340c:	movw	r0, #40257	; 0x9d41
   13410:	movt	r0, #1
   13414:	b	133b8 <export_data_element_to_ascii@@Base+0x7fc>
   13418:	cmp	r2, #92	; 0x5c
   1341c:	bne	13460 <export_data_element_to_ascii@@Base+0x8a4>
   13420:	movw	r0, #40278	; 0x9d56
   13424:	movt	r0, #1
   13428:	b	133b8 <export_data_element_to_ascii@@Base+0x7fc>
   1342c:	movw	r0, #40263	; 0x9d47
   13430:	movt	r0, #1
   13434:	b	133b8 <export_data_element_to_ascii@@Base+0x7fc>
   13438:	movw	r0, #40266	; 0x9d4a
   1343c:	movt	r0, #1
   13440:	b	133b8 <export_data_element_to_ascii@@Base+0x7fc>
   13444:	movw	r0, #40260	; 0x9d44
   13448:	movt	r0, #1
   1344c:	b	133b8 <export_data_element_to_ascii@@Base+0x7fc>
   13450:	mov	r0, r7
   13454:	b	133b8 <export_data_element_to_ascii@@Base+0x7fc>
   13458:	mov	r0, r8
   1345c:	b	133b8 <export_data_element_to_ascii@@Base+0x7fc>
   13460:	sub	r0, r2, #32
   13464:	uxtb	r0, r0
   13468:	cmp	r0, #94	; 0x5e
   1346c:	bhi	13480 <export_data_element_to_ascii@@Base+0x8c4>
   13470:	mov	r0, r2
   13474:	mov	r1, r4
   13478:	bl	129e8 <fputc@plt>
   1347c:	b	133c8 <export_data_element_to_ascii@@Base+0x80c>
   13480:	mov	r0, r4
   13484:	movw	r1, #40281	; 0x9d59
   13488:	movt	r1, #1
   1348c:	bl	128b0 <fprintf@plt>
   13490:	b	133c8 <export_data_element_to_ascii@@Base+0x80c>
   13494:	mov	r0, r6
   13498:	bl	126e8 <free@plt>
   1349c:	b	13558 <export_data_element_to_ascii@@Base+0x99c>
   134a0:	add	r0, r6, #144	; 0x90
   134a4:	add	r1, sp, #48	; 0x30
   134a8:	bl	1288c <coda_cursor_read_uint64@plt>
   134ac:	cmp	r0, #0
   134b0:	beq	134b8 <export_data_element_to_ascii@@Base+0x8fc>
   134b4:	bl	17f28 <handle_coda_error@@Base>
   134b8:	ldr	r0, [sp, #48]	; 0x30
   134bc:	ldr	r1, [sp, #52]	; 0x34
   134c0:	add	r5, sp, #16
   134c4:	mov	r2, r5
   134c8:	bl	126dc <coda_str64u@plt>
   134cc:	mov	r0, r5
   134d0:	mov	r1, r4
   134d4:	bl	12a84 <fputs@plt>
   134d8:	b	13558 <export_data_element_to_ascii@@Base+0x99c>
   134dc:	add	r0, r6, #144	; 0x90
   134e0:	add	r1, sp, #16
   134e4:	bl	128f8 <coda_cursor_read_char@plt>
   134e8:	cmp	r0, #0
   134ec:	beq	134f4 <export_data_element_to_ascii@@Base+0x938>
   134f0:	bl	17f28 <handle_coda_error@@Base>
   134f4:	movw	r0, #53796	; 0xd224
   134f8:	movt	r0, #2
   134fc:	ldr	r0, [r0]
   13500:	ldrb	r2, [sp, #16]
   13504:	cmp	r0, #0
   13508:	beq	1354c <export_data_element_to_ascii@@Base+0x990>
   1350c:	movw	r1, #40124	; 0x9cbc
   13510:	movt	r1, #1
   13514:	b	13168 <export_data_element_to_ascii@@Base+0x5ac>
   13518:	vldr	d16, [sp, #48]	; 0x30
   1351c:	vmov	r2, r3, d16
   13520:	movw	r1, #40296	; 0x9d68
   13524:	movt	r1, #1
   13528:	mov	r0, r4
   1352c:	bl	128b0 <fprintf@plt>
   13530:	b	13558 <export_data_element_to_ascii@@Base+0x99c>
   13534:	mov	r0, r5
   13538:	mov	r1, r4
   1353c:	bl	12a84 <fputs@plt>
   13540:	mov	r0, r5
   13544:	bl	126e8 <free@plt>
   13548:	b	13558 <export_data_element_to_ascii@@Base+0x99c>
   1354c:	mov	r0, r2
   13550:	mov	r1, r4
   13554:	bl	129e8 <fputc@plt>
   13558:	mov	r0, #10
   1355c:	mov	r1, r4
   13560:	bl	129e8 <fputc@plt>
   13564:	sub	sp, fp, #28
   13568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1356c:	add	r0, sp, #16
   13570:	b	134d0 <export_data_element_to_ascii@@Base+0x914>
   13574:	vldr	d0, [sp, #48]	; 0x30
   13578:	movw	r0, #40337	; 0x9d91
   1357c:	movt	r0, #1
   13580:	add	r1, sp, #16
   13584:	bl	126c4 <coda_time_double_to_string@plt>
   13588:	cmp	r0, #0
   1358c:	beq	13120 <export_data_element_to_ascii@@Base+0x564>
   13590:	bl	17f28 <handle_coda_error@@Base>
   13594:	b	13120 <export_data_element_to_ascii@@Base+0x564>
   13598:	movw	r0, #40674	; 0x9ee2
   1359c:	movt	r0, #1
   135a0:	movw	r1, #40182	; 0x9cf6
   135a4:	movt	r1, #1
   135a8:	movw	r3, #40302	; 0x9d6e
   135ac:	movt	r3, #1
   135b0:	movw	r2, #294	; 0x126
   135b4:	bl	12ab4 <__assert_fail@plt>
   135b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135bc:	add	fp, sp, #28
   135c0:	sub	sp, sp, #12
   135c4:	mov	r4, r0
   135c8:	movw	r8, #49640	; 0xc1e8
   135cc:	movt	r8, #2
   135d0:	ldr	r0, [r8, #136]	; 0x88
   135d4:	cmp	r0, #1
   135d8:	blt	13694 <export_data_element_to_ascii@@Base+0xad8>
   135dc:	mov	r5, #0
   135e0:	add	r9, sp, #8
   135e4:	movw	r7, #53396	; 0xd094
   135e8:	movt	r7, #2
   135ec:	movw	r6, #40371	; 0x9db3
   135f0:	movt	r6, #1
   135f4:	mov	sl, #0
   135f8:	b	13620 <export_data_element_to_ascii@@Base+0xa64>
   135fc:	ldr	sl, [sp, #4]
   13600:	add	sl, sl, #1
   13604:	movw	r8, #49640	; 0xc1e8
   13608:	movt	r8, #2
   1360c:	add	r9, sp, #8
   13610:	add	r5, r5, #1
   13614:	ldr	r0, [r8, #136]	; 0x88
   13618:	cmp	r5, r0
   1361c:	bge	13694 <export_data_element_to_ascii@@Base+0xad8>
   13620:	add	r0, r8, r5, lsl #2
   13624:	ldr	r0, [r0, #8]
   13628:	mov	r1, r9
   1362c:	bl	12ac0 <coda_type_get_class@plt>
   13630:	cmp	r0, #0
   13634:	beq	1363c <export_data_element_to_ascii@@Base+0xa80>
   13638:	bl	17f28 <handle_coda_error@@Base>
   1363c:	ldr	r0, [sp, #8]
   13640:	cmp	r0, #1
   13644:	bne	13610 <export_data_element_to_ascii@@Base+0xa54>
   13648:	str	sl, [sp, #4]
   1364c:	add	r0, sl, sl, lsl #2
   13650:	add	r0, r8, r0, lsl #4
   13654:	mov	r8, r0
   13658:	ldr	r1, [r8, #804]!	; 0x324
   1365c:	cmp	r1, #1
   13660:	blt	135fc <export_data_element_to_ascii@@Base+0xa40>
   13664:	add	r9, r0, #848	; 0x350
   13668:	mov	sl, #0
   1366c:	ldr	r2, [r9, sl, lsl #2]
   13670:	ldr	r3, [r7]
   13674:	mov	r0, r4
   13678:	mov	r1, r6
   1367c:	bl	128b0 <fprintf@plt>
   13680:	add	sl, sl, #1
   13684:	ldr	r0, [r8]
   13688:	cmp	sl, r0
   1368c:	blt	1366c <export_data_element_to_ascii@@Base+0xab0>
   13690:	b	135fc <export_data_element_to_ascii@@Base+0xa40>
   13694:	sub	sp, fp, #28
   13698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001369c <print_debug_data@@Base>:
   1369c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   136a0:	add	fp, sp, #24
   136a4:	sub	sp, sp, #536	; 0x218
   136a8:	mov	r4, r2
   136ac:	mov	r5, r1
   136b0:	mov	r6, r0
   136b4:	movw	r7, #49640	; 0xc1e8
   136b8:	movt	r7, #2
   136bc:	ldr	r0, [r7]
   136c0:	sub	r1, fp, #28
   136c4:	cmp	r6, #0
   136c8:	beq	136ec <print_debug_data@@Base+0x50>
   136cc:	str	r1, [sp]
   136d0:	mov	r1, r6
   136d4:	mov	r2, r5
   136d8:	mov	r3, r4
   136dc:	bl	128c8 <coda_open_as@plt>
   136e0:	cmp	r0, #0
   136e4:	bne	136f8 <print_debug_data@@Base+0x5c>
   136e8:	b	13754 <print_debug_data@@Base+0xb8>
   136ec:	bl	126ac <coda_open@plt>
   136f0:	cmp	r0, #0
   136f4:	beq	13754 <print_debug_data@@Base+0xb8>
   136f8:	bl	12a60 <coda_get_errno@plt>
   136fc:	ldr	r0, [r0]
   13700:	cmn	r0, #21
   13704:	bne	13750 <print_debug_data@@Base+0xb4>
   13708:	mov	r0, #0
   1370c:	bl	126f4 <coda_set_option_use_mmap@plt>
   13710:	ldr	r0, [r7]
   13714:	sub	r1, fp, #28
   13718:	cmp	r6, #0
   1371c:	beq	13738 <print_debug_data@@Base+0x9c>
   13720:	str	r1, [sp]
   13724:	mov	r1, r6
   13728:	mov	r2, r5
   1372c:	mov	r3, r4
   13730:	bl	128c8 <coda_open_as@plt>
   13734:	b	1373c <print_debug_data@@Base+0xa0>
   13738:	bl	126ac <coda_open@plt>
   1373c:	mov	r4, r0
   13740:	mov	r0, #1
   13744:	bl	126f4 <coda_set_option_use_mmap@plt>
   13748:	cmp	r4, #0
   1374c:	beq	13754 <print_debug_data@@Base+0xb8>
   13750:	bl	17f28 <handle_coda_error@@Base>
   13754:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13758:	add	r1, sp, #4
   1375c:	bl	12790 <coda_get_product_format@plt>
   13760:	cmp	r0, #0
   13764:	beq	1376c <print_debug_data@@Base+0xd0>
   13768:	bl	17f28 <handle_coda_error@@Base>
   1376c:	ldr	r0, [sp, #4]
   13770:	mov	r1, #0
   13774:	cmp	r0, #3
   13778:	movwcc	r1, #1
   1377c:	movw	r0, #49576	; 0xc1a8
   13780:	movt	r0, #2
   13784:	str	r1, [r0]
   13788:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1378c:	add	r0, sp, #8
   13790:	bl	127d8 <coda_cursor_set_product@plt>
   13794:	cmp	r0, #0
   13798:	beq	137a0 <print_debug_data@@Base+0x104>
   1379c:	bl	17f28 <handle_coda_error@@Base>
   137a0:	movw	r0, #53416	; 0xd0a8
   137a4:	movt	r0, #2
   137a8:	ldr	r1, [r0]
   137ac:	cmp	r1, #0
   137b0:	beq	137c8 <print_debug_data@@Base+0x12c>
   137b4:	add	r0, sp, #8
   137b8:	bl	129b8 <coda_cursor_goto@plt>
   137bc:	cmp	r0, #0
   137c0:	beq	137c8 <print_debug_data@@Base+0x12c>
   137c4:	bl	17f28 <handle_coda_error@@Base>
   137c8:	mov	r0, #0
   137cc:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   137d0:	add	r0, sp, #8
   137d4:	mov	r1, #0
   137d8:	bl	137ec <print_debug_data@@Base+0x150>
   137dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137e0:	bl	12994 <coda_close@plt>
   137e4:	sub	sp, fp, #24
   137e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   137ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137f0:	add	fp, sp, #28
   137f4:	sub	sp, sp, #644	; 0x284
   137f8:	str	r1, [sp, #24]
   137fc:	mov	r4, r0
   13800:	sub	r1, fp, #40	; 0x28
   13804:	bl	1276c <coda_cursor_has_attributes@plt>
   13808:	cmp	r0, #0
   1380c:	beq	13814 <print_debug_data@@Base+0x178>
   13810:	bl	17f28 <handle_coda_error@@Base>
   13814:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13818:	cmp	r0, #0
   1381c:	str	r4, [sp, #28]
   13820:	beq	13880 <print_debug_data@@Base+0x1e4>
   13824:	mov	r0, r4
   13828:	bl	128ec <coda_cursor_goto_attributes@plt>
   1382c:	cmp	r0, #0
   13830:	beq	13838 <print_debug_data@@Base+0x19c>
   13834:	bl	17f28 <handle_coda_error@@Base>
   13838:	movw	r0, #40416	; 0x9de0
   1383c:	movt	r0, #1
   13840:	bl	143d0 <print_debug_data@@Base+0xd34>
   13844:	movw	r4, #49600	; 0xc1c0
   13848:	movt	r4, #2
   1384c:	ldr	r0, [r4]
   13850:	add	r0, r0, #1
   13854:	str	r0, [r4]
   13858:	ldr	r5, [sp, #28]
   1385c:	mov	r0, r5
   13860:	ldr	r1, [sp, #24]
   13864:	bl	137ec <print_debug_data@@Base+0x150>
   13868:	ldr	r0, [r4]
   1386c:	sub	r0, r0, #1
   13870:	str	r0, [r4]
   13874:	mov	r4, r5
   13878:	mov	r0, r5
   1387c:	bl	12850 <coda_cursor_goto_parent@plt>
   13880:	sub	r1, fp, #36	; 0x24
   13884:	mov	r0, r4
   13888:	bl	12778 <coda_cursor_get_type_class@plt>
   1388c:	cmp	r0, #0
   13890:	beq	13898 <print_debug_data@@Base+0x1fc>
   13894:	bl	17f28 <handle_coda_error@@Base>
   13898:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1389c:	cmp	r0, #6
   138a0:	bhi	14358 <print_debug_data@@Base+0xcbc>
   138a4:	add	r1, pc, #0
   138a8:	ldr	pc, [r1, r0, lsl #2]
   138ac:	andeq	r3, r1, ip, lsr #20
   138b0:			; <UNDEFINED> instruction: 0x00013bb4
   138b4:	andeq	r3, r1, r8, asr #17
   138b8:	andeq	r3, r1, r8, asr #17
   138bc:	andeq	r3, r1, r8, asr #17
   138c0:	andeq	r3, r1, r8, asr #17
   138c4:	andeq	r3, r1, r4, lsl ip
   138c8:	sub	r1, fp, #96	; 0x60
   138cc:	mov	r0, r4
   138d0:	bl	12988 <coda_cursor_has_ascii_content@plt>
   138d4:	cmp	r0, #0
   138d8:	beq	138e0 <print_debug_data@@Base+0x244>
   138dc:	bl	17f28 <handle_coda_error@@Base>
   138e0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   138e4:	cmp	r0, #0
   138e8:	beq	13998 <print_debug_data@@Base+0x2fc>
   138ec:	add	r1, sp, #32
   138f0:	mov	r0, r4
   138f4:	bl	12880 <coda_cursor_get_string_length@plt>
   138f8:	cmp	r0, #0
   138fc:	beq	13904 <print_debug_data@@Base+0x268>
   13900:	bl	17f28 <handle_coda_error@@Base>
   13904:	ldr	r0, [sp, #32]
   13908:	add	r6, r0, #1
   1390c:	mov	r0, r6
   13910:	bl	12820 <malloc@plt>
   13914:	mov	r5, r0
   13918:	cmp	r0, #0
   1391c:	bne	13948 <print_debug_data@@Base+0x2ac>
   13920:	movw	r0, #410	; 0x19a
   13924:	str	r0, [sp]
   13928:	movw	r1, #40129	; 0x9cc1
   1392c:	movt	r1, #1
   13930:	movw	r3, #40443	; 0x9dfb
   13934:	movt	r3, #1
   13938:	mvn	r0, #0
   1393c:	mov	r2, r6
   13940:	bl	126a0 <coda_set_error@plt>
   13944:	bl	17f28 <handle_coda_error@@Base>
   13948:	ldr	r0, [sp, #32]
   1394c:	add	r2, r0, #1
   13950:	mov	r0, r4
   13954:	mov	r1, r5
   13958:	bl	12844 <coda_cursor_read_string@plt>
   1395c:	cmp	r0, #0
   13960:	beq	13968 <print_debug_data@@Base+0x2cc>
   13964:	bl	17f28 <handle_coda_error@@Base>
   13968:	movw	r0, #41916	; 0xa3bc
   1396c:	movt	r0, #1
   13970:	bl	143d0 <print_debug_data@@Base+0xd34>
   13974:	ldr	r1, [sp, #32]
   13978:	mov	r0, r5
   1397c:	bl	14464 <print_debug_data@@Base+0xdc8>
   13980:	ldr	r1, [sp, #32]
   13984:	movw	r0, #40518	; 0x9e46
   13988:	movt	r0, #1
   1398c:	bl	1441c <print_debug_data@@Base+0xd80>
   13990:	mov	r0, r5
   13994:	bl	126e8 <free@plt>
   13998:	sub	r1, fp, #120	; 0x78
   1399c:	mov	r0, r4
   139a0:	bl	12814 <coda_cursor_get_read_type@plt>
   139a4:	cmp	r0, #0
   139a8:	beq	139b0 <print_debug_data@@Base+0x314>
   139ac:	bl	17f28 <handle_coda_error@@Base>
   139b0:	ldr	r0, [fp, #-120]	; 0xffffff88
   139b4:	add	r0, r0, #1
   139b8:	cmp	r0, #13
   139bc:	bhi	14358 <print_debug_data@@Base+0xcbc>
   139c0:	add	r1, pc, #0
   139c4:	ldr	pc, [r1, r0, lsl #2]
   139c8:	andeq	r3, r1, r0, lsl #20
   139cc:	andeq	r3, r1, r4, ror #25
   139d0:			; <UNDEFINED> instruction: 0x00013cbc
   139d4:	andeq	r3, r1, r4, ror #25
   139d8:			; <UNDEFINED> instruction: 0x00013cbc
   139dc:	andeq	r3, r1, r4, ror #25
   139e0:			; <UNDEFINED> instruction: 0x00013cbc
   139e4:	andeq	r3, r1, r4, asr sp
   139e8:	andeq	r3, r1, r4, lsl #27
   139ec:	andeq	r3, r1, ip, lsl #26
   139f0:	andeq	r3, r1, ip, lsl #26
   139f4:	andeq	r3, r1, r0, lsl #20
   139f8:	andeq	r3, r1, r0, lsl #20
   139fc:	andeq	r3, r1, r8, asr #27
   13a00:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a04:	cmp	r0, #0
   13a08:	bne	14358 <print_debug_data@@Base+0xcbc>
   13a0c:	movw	r0, #40559	; 0x9e6f
   13a10:	movt	r0, #1
   13a14:	movw	r1, #40443	; 0x9dfb
   13a18:	movt	r1, #1
   13a1c:	movw	r3, #40577	; 0x9e81
   13a20:	movt	r3, #1
   13a24:	mov	r2, #548	; 0x224
   13a28:	bl	12ab4 <__assert_fail@plt>
   13a2c:	sub	r1, fp, #120	; 0x78
   13a30:	mov	r0, r4
   13a34:	bl	126d0 <coda_cursor_get_num_elements@plt>
   13a38:	cmp	r0, #0
   13a3c:	beq	13a44 <print_debug_data@@Base+0x3a8>
   13a40:	bl	17f28 <handle_coda_error@@Base>
   13a44:	ldr	r0, [fp, #-120]	; 0xffffff88
   13a48:	cmp	r0, #1
   13a4c:	blt	14358 <print_debug_data@@Base+0xcbc>
   13a50:	sub	r1, fp, #96	; 0x60
   13a54:	mov	r0, r4
   13a58:	bl	12730 <coda_cursor_get_type@plt>
   13a5c:	cmp	r0, #0
   13a60:	beq	13a68 <print_debug_data@@Base+0x3cc>
   13a64:	bl	17f28 <handle_coda_error@@Base>
   13a68:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a6c:	sub	r1, fp, #44	; 0x2c
   13a70:	bl	12934 <coda_type_get_record_union_status@plt>
   13a74:	cmp	r0, #0
   13a78:	beq	13a80 <print_debug_data@@Base+0x3e4>
   13a7c:	bl	17f28 <handle_coda_error@@Base>
   13a80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a84:	cmp	r0, #0
   13a88:	beq	13ee4 <print_debug_data@@Base+0x848>
   13a8c:	sub	r1, fp, #48	; 0x30
   13a90:	mov	r0, r4
   13a94:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   13a98:	cmp	r0, #0
   13a9c:	beq	13aa4 <print_debug_data@@Base+0x408>
   13aa0:	bl	17f28 <handle_coda_error@@Base>
   13aa4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13aa8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13aac:	sub	r2, fp, #52	; 0x34
   13ab0:	bl	12a78 <coda_type_get_record_field_name@plt>
   13ab4:	cmp	r0, #0
   13ab8:	beq	13ac0 <print_debug_data@@Base+0x424>
   13abc:	bl	17f28 <handle_coda_error@@Base>
   13ac0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13ac4:	mov	r0, r4
   13ac8:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   13acc:	cmp	r0, #0
   13ad0:	beq	13ad8 <print_debug_data@@Base+0x43c>
   13ad4:	bl	17f28 <handle_coda_error@@Base>
   13ad8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13adc:	movw	r0, #42165	; 0xa4b5
   13ae0:	movt	r0, #1
   13ae4:	bl	143d0 <print_debug_data@@Base+0xd34>
   13ae8:	movw	r0, #49576	; 0xc1a8
   13aec:	movt	r0, #2
   13af0:	ldr	r0, [r0]
   13af4:	cmp	r0, #0
   13af8:	beq	13b60 <print_debug_data@@Base+0x4c4>
   13afc:	sub	r1, fp, #88	; 0x58
   13b00:	mov	r0, r4
   13b04:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   13b08:	cmp	r0, #0
   13b0c:	beq	13b14 <print_debug_data@@Base+0x478>
   13b10:	bl	17f28 <handle_coda_error@@Base>
   13b14:	ldr	r1, [fp, #-84]	; 0xffffffac
   13b18:	cmp	r1, #0
   13b1c:	bmi	13b60 <print_debug_data@@Base+0x4c4>
   13b20:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b24:	lsr	r0, r0, #3
   13b28:	orr	r0, r0, r1, lsl #29
   13b2c:	lsr	r1, r1, #3
   13b30:	add	r6, sp, #32
   13b34:	mov	r2, r6
   13b38:	bl	12aa8 <coda_str64@plt>
   13b3c:	movw	r0, #40430	; 0x9dee
   13b40:	movt	r0, #1
   13b44:	mov	r1, r6
   13b48:	bl	1441c <print_debug_data@@Base+0xd80>
   13b4c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b50:	ands	r1, r0, #7
   13b54:	movwne	r0, #40434	; 0x9df2
   13b58:	movtne	r0, #1
   13b5c:	blne	1441c <print_debug_data@@Base+0xd80>
   13b60:	movw	r0, #42550	; 0xa636
   13b64:	movt	r0, #1
   13b68:	bl	1441c <print_debug_data@@Base+0xd80>
   13b6c:	movw	r4, #49600	; 0xc1c0
   13b70:	movt	r4, #2
   13b74:	ldr	r0, [r4]
   13b78:	add	r0, r0, #1
   13b7c:	str	r0, [r4]
   13b80:	movw	r0, #49580	; 0xc1ac
   13b84:	movt	r0, #2
   13b88:	ldr	r0, [r0]
   13b8c:	cmp	r0, #0
   13b90:	bmi	14360 <print_debug_data@@Base+0xcc4>
   13b94:	ldr	r1, [sp, #24]
   13b98:	cmp	r0, r1
   13b9c:	bgt	14360 <print_debug_data@@Base+0xcc4>
   13ba0:	movw	r0, #40438	; 0x9df6
   13ba4:	movt	r0, #1
   13ba8:	bl	143d0 <print_debug_data@@Base+0xd34>
   13bac:	ldr	r5, [sp, #28]
   13bb0:	b	14374 <print_debug_data@@Base+0xcd8>
   13bb4:	sub	r1, fp, #44	; 0x2c
   13bb8:	add	r6, sp, #32
   13bbc:	mov	r0, r4
   13bc0:	mov	r2, r6
   13bc4:	bl	1297c <coda_cursor_get_array_dim@plt>
   13bc8:	cmp	r0, #0
   13bcc:	beq	13bd4 <print_debug_data@@Base+0x538>
   13bd0:	bl	17f28 <handle_coda_error@@Base>
   13bd4:	ldr	r4, [fp, #-44]	; 0xffffffd4
   13bd8:	cmp	r4, #0
   13bdc:	bmi	14358 <print_debug_data@@Base+0xcbc>
   13be0:	beq	14078 <print_debug_data@@Base+0x9dc>
   13be4:	lsl	r2, r4, #2
   13be8:	sub	r0, fp, #88	; 0x58
   13bec:	mov	r1, #0
   13bf0:	bl	12904 <memset@plt>
   13bf4:	mov	r7, #1
   13bf8:	ldr	r0, [r6], #4
   13bfc:	mul	r7, r0, r7
   13c00:	subs	r4, r4, #1
   13c04:	bne	13bf8 <print_debug_data@@Base+0x55c>
   13c08:	cmp	r7, #1
   13c0c:	bge	1407c <print_debug_data@@Base+0x9e0>
   13c10:	b	14358 <print_debug_data@@Base+0xcbc>
   13c14:	sub	r1, fp, #120	; 0x78
   13c18:	mov	r0, r4
   13c1c:	bl	127b4 <coda_cursor_get_special_type@plt>
   13c20:	cmp	r0, #0
   13c24:	beq	13c2c <print_debug_data@@Base+0x590>
   13c28:	bl	17f28 <handle_coda_error@@Base>
   13c2c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c30:	cmp	r0, #0
   13c34:	beq	13c6c <print_debug_data@@Base+0x5d0>
   13c38:	add	r6, sp, #32
   13c3c:	mov	r0, r6
   13c40:	mov	r1, r4
   13c44:	mov	r2, #520	; 0x208
   13c48:	bl	1273c <memcpy@plt>
   13c4c:	mov	r0, r6
   13c50:	bl	12a24 <coda_cursor_use_base_type_of_special_type@plt>
   13c54:	cmp	r0, #0
   13c58:	beq	13c60 <print_debug_data@@Base+0x5c4>
   13c5c:	bl	17f28 <handle_coda_error@@Base>
   13c60:	add	r0, sp, #32
   13c64:	ldr	r1, [sp, #24]
   13c68:	bl	137ec <print_debug_data@@Base+0x150>
   13c6c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c70:	bl	12628 <coda_type_get_special_type_name@plt>
   13c74:	mov	r1, r0
   13c78:	movw	r0, #40613	; 0x9ea5
   13c7c:	movt	r0, #1
   13c80:	bl	143d0 <print_debug_data@@Base+0xd34>
   13c84:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c88:	cmp	r0, #3
   13c8c:	bhi	14358 <print_debug_data@@Base+0xcbc>
   13c90:	add	r1, pc, #0
   13c94:	ldr	pc, [r1, r0, lsl #2]
   13c98:	andeq	r3, r1, r8, lsr #25
   13c9c:	andeq	r4, r1, ip, lsr #6
   13ca0:	andeq	r4, r1, r8, lsr #5
   13ca4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13ca8:	movw	r0, #42550	; 0xa636
   13cac:	movt	r0, #1
   13cb0:	bl	1441c <print_debug_data@@Base+0xd80>
   13cb4:	sub	sp, fp, #28
   13cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cbc:	add	r1, sp, #32
   13cc0:	mov	r0, r4
   13cc4:	bl	1270c <coda_cursor_read_uint32@plt>
   13cc8:	cmp	r0, #0
   13ccc:	beq	13cd4 <print_debug_data@@Base+0x638>
   13cd0:	bl	17f28 <handle_coda_error@@Base>
   13cd4:	ldr	r1, [sp, #32]
   13cd8:	movw	r0, #40548	; 0x9e64
   13cdc:	movt	r0, #1
   13ce0:	b	13dbc <print_debug_data@@Base+0x720>
   13ce4:	add	r1, sp, #32
   13ce8:	mov	r0, r4
   13cec:	bl	12a3c <coda_cursor_read_int32@plt>
   13cf0:	cmp	r0, #0
   13cf4:	beq	13cfc <print_debug_data@@Base+0x660>
   13cf8:	bl	17f28 <handle_coda_error@@Base>
   13cfc:	ldr	r1, [sp, #32]
   13d00:	movw	r0, #40543	; 0x9e5f
   13d04:	movt	r0, #1
   13d08:	b	13dbc <print_debug_data@@Base+0x720>
   13d0c:	add	r1, sp, #32
   13d10:	mov	r0, r4
   13d14:	bl	12898 <coda_cursor_read_double@plt>
   13d18:	cmp	r0, #0
   13d1c:	beq	13d24 <print_debug_data@@Base+0x688>
   13d20:	bl	17f28 <handle_coda_error@@Base>
   13d24:	ldr	r1, [fp, #-120]	; 0xffffff88
   13d28:	movw	r2, #40553	; 0x9e69
   13d2c:	movt	r2, #1
   13d30:	movw	r0, #40619	; 0x9eab
   13d34:	movt	r0, #1
   13d38:	vldr	d16, [sp, #32]
   13d3c:	cmp	r1, #8
   13d40:	moveq	r0, r2
   13d44:	vmov	r2, r3, d16
   13d48:	bl	143d0 <print_debug_data@@Base+0xd34>
   13d4c:	sub	sp, fp, #28
   13d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d54:	sub	r1, fp, #88	; 0x58
   13d58:	mov	r0, r4
   13d5c:	bl	129a0 <coda_cursor_read_int64@plt>
   13d60:	cmp	r0, #0
   13d64:	beq	13d6c <print_debug_data@@Base+0x6d0>
   13d68:	bl	17f28 <handle_coda_error@@Base>
   13d6c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13d70:	ldr	r1, [fp, #-84]	; 0xffffffac
   13d74:	add	r4, sp, #32
   13d78:	mov	r2, r4
   13d7c:	bl	12aa8 <coda_str64@plt>
   13d80:	b	13db0 <print_debug_data@@Base+0x714>
   13d84:	sub	r1, fp, #88	; 0x58
   13d88:	mov	r0, r4
   13d8c:	bl	1288c <coda_cursor_read_uint64@plt>
   13d90:	cmp	r0, #0
   13d94:	beq	13d9c <print_debug_data@@Base+0x700>
   13d98:	bl	17f28 <handle_coda_error@@Base>
   13d9c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13da0:	ldr	r1, [fp, #-84]	; 0xffffffac
   13da4:	add	r4, sp, #32
   13da8:	mov	r2, r4
   13dac:	bl	126dc <coda_str64u@plt>
   13db0:	movw	r0, #42293	; 0xa535
   13db4:	movt	r0, #1
   13db8:	mov	r1, r4
   13dbc:	bl	143d0 <print_debug_data@@Base+0xd34>
   13dc0:	sub	sp, fp, #28
   13dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dc8:	sub	r1, fp, #88	; 0x58
   13dcc:	mov	r0, r4
   13dd0:	bl	12a00 <coda_cursor_get_bit_size@plt>
   13dd4:	cmp	r0, #0
   13dd8:	beq	13de0 <print_debug_data@@Base+0x744>
   13ddc:	bl	17f28 <handle_coda_error@@Base>
   13de0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13de4:	ldr	r1, [fp, #-84]	; 0xffffffac
   13de8:	lsr	r2, r0, #3
   13dec:	orr	r6, r2, r1, lsl #29
   13df0:	tst	r0, #7
   13df4:	addne	r6, r6, #1
   13df8:	mov	r0, r6
   13dfc:	bl	12820 <malloc@plt>
   13e00:	mov	r5, r0
   13e04:	cmp	r0, #0
   13e08:	bne	13e34 <print_debug_data@@Base+0x798>
   13e0c:	movw	r0, #447	; 0x1bf
   13e10:	str	r0, [sp]
   13e14:	movw	r1, #40129	; 0x9cc1
   13e18:	movt	r1, #1
   13e1c:	movw	r3, #40443	; 0x9dfb
   13e20:	movt	r3, #1
   13e24:	mvn	r0, #0
   13e28:	mov	r2, r6
   13e2c:	bl	126a0 <coda_set_error@plt>
   13e30:	bl	17f28 <handle_coda_error@@Base>
   13e34:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e38:	ldr	r1, [fp, #-84]	; 0xffffffac
   13e3c:	stm	sp, {r0, r1}
   13e40:	mov	r0, r4
   13e44:	mov	r1, r5
   13e48:	mov	r2, #0
   13e4c:	mov	r3, #0
   13e50:	bl	12a9c <coda_cursor_read_bits@plt>
   13e54:	cmp	r0, #0
   13e58:	beq	13e60 <print_debug_data@@Base+0x7c4>
   13e5c:	bl	17f28 <handle_coda_error@@Base>
   13e60:	movw	r0, #41916	; 0xa3bc
   13e64:	movt	r0, #1
   13e68:	bl	143d0 <print_debug_data@@Base+0xd34>
   13e6c:	mov	r0, r5
   13e70:	mov	r1, r6
   13e74:	bl	14464 <print_debug_data@@Base+0xdc8>
   13e78:	movw	r0, #40534	; 0x9e56
   13e7c:	movt	r0, #1
   13e80:	bl	1441c <print_debug_data@@Base+0xd80>
   13e84:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e88:	ldr	r1, [fp, #-84]	; 0xffffffac
   13e8c:	lsr	r0, r0, #3
   13e90:	orr	r0, r0, r1, lsl #29
   13e94:	asr	r1, r1, #3
   13e98:	add	r4, sp, #32
   13e9c:	mov	r2, r4
   13ea0:	bl	12aa8 <coda_str64@plt>
   13ea4:	movw	r0, #42105	; 0xa479
   13ea8:	movt	r0, #1
   13eac:	mov	r1, r4
   13eb0:	bl	1441c <print_debug_data@@Base+0xd80>
   13eb4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13eb8:	ands	r1, r0, #7
   13ebc:	movwne	r0, #40434	; 0x9df2
   13ec0:	movtne	r0, #1
   13ec4:	blne	1441c <print_debug_data@@Base+0xd80>
   13ec8:	movw	r0, #40531	; 0x9e53
   13ecc:	movt	r0, #1
   13ed0:	bl	1441c <print_debug_data@@Base+0xd80>
   13ed4:	mov	r0, r5
   13ed8:	bl	126e8 <free@plt>
   13edc:	sub	sp, fp, #28
   13ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ee4:	mov	r0, r4
   13ee8:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   13eec:	cmp	r0, #0
   13ef0:	beq	13ef8 <print_debug_data@@Base+0x85c>
   13ef4:	bl	17f28 <handle_coda_error@@Base>
   13ef8:	mov	r1, #0
   13efc:	str	r1, [fp, #-48]	; 0xffffffd0
   13f00:	ldr	r0, [fp, #-120]	; 0xffffff88
   13f04:	cmp	r0, #1
   13f08:	blt	142a0 <print_debug_data@@Base+0xc04>
   13f0c:	ldr	r0, [sp, #24]
   13f10:	add	r0, r0, #1
   13f14:	str	r0, [sp, #20]
   13f18:	mvn	r4, #0
   13f1c:	movw	r7, #42165	; 0xa4b5
   13f20:	movt	r7, #1
   13f24:	movw	r9, #49576	; 0xc1a8
   13f28:	movt	r9, #2
   13f2c:	movw	r6, #42550	; 0xa636
   13f30:	movt	r6, #1
   13f34:	movw	sl, #49600	; 0xc1c0
   13f38:	movt	sl, #2
   13f3c:	movw	r8, #49580	; 0xc1ac
   13f40:	movt	r8, #2
   13f44:	b	13f60 <print_debug_data@@Base+0x8c4>
   13f48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f4c:	add	r1, r0, #1
   13f50:	str	r1, [fp, #-48]	; 0xffffffd0
   13f54:	ldr	r0, [fp, #-120]	; 0xffffff88
   13f58:	cmp	r1, r0
   13f5c:	bge	142a0 <print_debug_data@@Base+0xc04>
   13f60:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13f64:	sub	r2, fp, #52	; 0x34
   13f68:	bl	12a78 <coda_type_get_record_field_name@plt>
   13f6c:	cmp	r0, #0
   13f70:	beq	13f78 <print_debug_data@@Base+0x8dc>
   13f74:	bl	17f28 <handle_coda_error@@Base>
   13f78:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13f7c:	mov	r0, r7
   13f80:	bl	143d0 <print_debug_data@@Base+0xd34>
   13f84:	ldr	r0, [r9]
   13f88:	cmp	r0, #0
   13f8c:	beq	13ff8 <print_debug_data@@Base+0x95c>
   13f90:	ldr	r0, [sp, #28]
   13f94:	sub	r1, fp, #88	; 0x58
   13f98:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   13f9c:	cmp	r0, #0
   13fa0:	beq	13fa8 <print_debug_data@@Base+0x90c>
   13fa4:	bl	17f28 <handle_coda_error@@Base>
   13fa8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13fac:	ldr	r1, [fp, #-84]	; 0xffffffac
   13fb0:	subs	r2, r4, r0
   13fb4:	sbcs	r2, r4, r1
   13fb8:	bge	13ff8 <print_debug_data@@Base+0x95c>
   13fbc:	lsr	r0, r0, #3
   13fc0:	orr	r0, r0, r1, lsl #29
   13fc4:	lsr	r1, r1, #3
   13fc8:	add	r5, sp, #32
   13fcc:	mov	r2, r5
   13fd0:	bl	12aa8 <coda_str64@plt>
   13fd4:	movw	r0, #40430	; 0x9dee
   13fd8:	movt	r0, #1
   13fdc:	mov	r1, r5
   13fe0:	bl	1441c <print_debug_data@@Base+0xd80>
   13fe4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13fe8:	ands	r1, r0, #7
   13fec:	movwne	r0, #40434	; 0x9df2
   13ff0:	movtne	r0, #1
   13ff4:	blne	1441c <print_debug_data@@Base+0xd80>
   13ff8:	mov	r0, r6
   13ffc:	bl	1441c <print_debug_data@@Base+0xd80>
   14000:	ldr	r0, [sl]
   14004:	add	r0, r0, #1
   14008:	str	r0, [sl]
   1400c:	ldr	r0, [r8]
   14010:	cmp	r0, #0
   14014:	bmi	14034 <print_debug_data@@Base+0x998>
   14018:	ldr	r1, [sp, #24]
   1401c:	cmp	r0, r1
   14020:	bgt	14034 <print_debug_data@@Base+0x998>
   14024:	movw	r0, #40438	; 0x9df6
   14028:	movt	r0, #1
   1402c:	bl	143d0 <print_debug_data@@Base+0xd34>
   14030:	b	14040 <print_debug_data@@Base+0x9a4>
   14034:	ldr	r0, [sp, #28]
   14038:	ldr	r1, [sp, #20]
   1403c:	bl	137ec <print_debug_data@@Base+0x150>
   14040:	ldr	r0, [sl]
   14044:	sub	r0, r0, #1
   14048:	str	r0, [sl]
   1404c:	ldr	r0, [fp, #-120]	; 0xffffff88
   14050:	sub	r0, r0, #1
   14054:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14058:	cmp	r1, r0
   1405c:	bge	13f48 <print_debug_data@@Base+0x8ac>
   14060:	ldr	r0, [sp, #28]
   14064:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   14068:	cmp	r0, #0
   1406c:	beq	13f48 <print_debug_data@@Base+0x8ac>
   14070:	bl	17f28 <handle_coda_error@@Base>
   14074:	b	13f48 <print_debug_data@@Base+0x8ac>
   14078:	mov	r7, #1
   1407c:	ldr	r0, [sp, #28]
   14080:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   14084:	cmp	r0, #0
   14088:	beq	14090 <print_debug_data@@Base+0x9f4>
   1408c:	bl	17f28 <handle_coda_error@@Base>
   14090:	sub	r9, fp, #88	; 0x58
   14094:	sub	r5, r9, #4
   14098:	add	r0, sp, #32
   1409c:	sub	r8, r0, #4
   140a0:	str	r7, [sp, #20]
   140a4:	sub	r0, r7, #1
   140a8:	str	r0, [sp, #16]
   140ac:	ldr	r0, [sp, #24]
   140b0:	add	r0, r0, #1
   140b4:	str	r0, [sp, #12]
   140b8:	movw	r7, #40435	; 0x9df3
   140bc:	movt	r7, #1
   140c0:	movw	r6, #40848	; 0x9f90
   140c4:	movt	r6, #1
   140c8:	mov	sl, #0
   140cc:	b	140e0 <print_debug_data@@Base+0xa44>
   140d0:	add	sl, sl, #1
   140d4:	ldr	r0, [sp, #20]
   140d8:	cmp	sl, r0
   140dc:	beq	14298 <print_debug_data@@Base+0xbfc>
   140e0:	movw	r0, #40860	; 0x9f9c
   140e4:	movt	r0, #1
   140e8:	bl	143d0 <print_debug_data@@Base+0xd34>
   140ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140f0:	cmp	r0, #1
   140f4:	blt	1412c <print_debug_data@@Base+0xa90>
   140f8:	mov	r4, #0
   140fc:	ldr	r1, [r9, r4, lsl #2]
   14100:	mov	r0, r7
   14104:	bl	1441c <print_debug_data@@Base+0xd80>
   14108:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1410c:	sub	r0, r0, #1
   14110:	cmp	r4, r0
   14114:	movlt	r0, r6
   14118:	bllt	1441c <print_debug_data@@Base+0xd80>
   1411c:	add	r4, r4, #1
   14120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14124:	cmp	r4, r0
   14128:	blt	140fc <print_debug_data@@Base+0xa60>
   1412c:	movw	r0, #44230	; 0xacc6
   14130:	movt	r0, #1
   14134:	bl	1441c <print_debug_data@@Base+0xd80>
   14138:	movw	r0, #49576	; 0xc1a8
   1413c:	movt	r0, #2
   14140:	ldr	r0, [r0]
   14144:	cmp	r0, #0
   14148:	ldr	r4, [sp, #28]
   1414c:	beq	141c0 <print_debug_data@@Base+0xb24>
   14150:	mov	r0, r4
   14154:	sub	r1, fp, #96	; 0x60
   14158:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   1415c:	cmp	r0, #0
   14160:	beq	14168 <print_debug_data@@Base+0xacc>
   14164:	bl	17f28 <handle_coda_error@@Base>
   14168:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1416c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14170:	mvn	r3, #0
   14174:	subs	r2, r3, r0
   14178:	sbcs	r2, r3, r1
   1417c:	bge	141c0 <print_debug_data@@Base+0xb24>
   14180:	lsr	r0, r0, #3
   14184:	orr	r0, r0, r1, lsl #29
   14188:	lsr	r1, r1, #3
   1418c:	sub	r4, fp, #120	; 0x78
   14190:	mov	r2, r4
   14194:	bl	12aa8 <coda_str64@plt>
   14198:	movw	r0, #40430	; 0x9dee
   1419c:	movt	r0, #1
   141a0:	mov	r1, r4
   141a4:	bl	1441c <print_debug_data@@Base+0xd80>
   141a8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   141ac:	ands	r1, r0, #7
   141b0:	movwne	r0, #40434	; 0x9df2
   141b4:	movtne	r0, #1
   141b8:	blne	1441c <print_debug_data@@Base+0xd80>
   141bc:	ldr	r4, [sp, #28]
   141c0:	movw	r0, #42550	; 0xa636
   141c4:	movt	r0, #1
   141c8:	bl	1441c <print_debug_data@@Base+0xd80>
   141cc:	movw	r0, #49600	; 0xc1c0
   141d0:	movt	r0, #2
   141d4:	mov	r1, r0
   141d8:	ldr	r0, [r0]
   141dc:	add	r0, r0, #1
   141e0:	str	r0, [r1]
   141e4:	movw	r0, #49580	; 0xc1ac
   141e8:	movt	r0, #2
   141ec:	ldr	r0, [r0]
   141f0:	cmp	r0, #0
   141f4:	bmi	14214 <print_debug_data@@Base+0xb78>
   141f8:	ldr	r1, [sp, #24]
   141fc:	cmp	r0, r1
   14200:	bgt	14214 <print_debug_data@@Base+0xb78>
   14204:	movw	r0, #40438	; 0x9df6
   14208:	movt	r0, #1
   1420c:	bl	143d0 <print_debug_data@@Base+0xd34>
   14210:	b	14220 <print_debug_data@@Base+0xb84>
   14214:	mov	r0, r4
   14218:	ldr	r1, [sp, #12]
   1421c:	bl	137ec <print_debug_data@@Base+0x150>
   14220:	movw	r0, #49600	; 0xc1c0
   14224:	movt	r0, #2
   14228:	mov	r1, r0
   1422c:	ldr	r0, [r0]
   14230:	sub	r0, r0, #1
   14234:	str	r0, [r1]
   14238:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1423c:	cmp	r0, #1
   14240:	mov	r3, #0
   14244:	blt	14274 <print_debug_data@@Base+0xbd8>
   14248:	ldr	r1, [r5, r0, lsl #2]
   1424c:	add	r1, r1, #1
   14250:	str	r1, [r5, r0, lsl #2]
   14254:	ldr	r2, [r8, r0, lsl #2]
   14258:	cmp	r1, r2
   1425c:	bne	14274 <print_debug_data@@Base+0xbd8>
   14260:	sub	r1, r0, #1
   14264:	str	r3, [r5, r0, lsl #2]
   14268:	cmp	r1, #0
   1426c:	mov	r0, r1
   14270:	bgt	14248 <print_debug_data@@Base+0xbac>
   14274:	ldr	r0, [sp, #16]
   14278:	cmp	sl, r0
   1427c:	bge	140d0 <print_debug_data@@Base+0xa34>
   14280:	mov	r0, r4
   14284:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   14288:	cmp	r0, #0
   1428c:	beq	140d0 <print_debug_data@@Base+0xa34>
   14290:	bl	17f28 <handle_coda_error@@Base>
   14294:	b	140d0 <print_debug_data@@Base+0xa34>
   14298:	mov	r0, r4
   1429c:	b	14384 <print_debug_data@@Base+0xce8>
   142a0:	ldr	r0, [sp, #28]
   142a4:	b	14384 <print_debug_data@@Base+0xce8>
   142a8:	sub	r1, fp, #88	; 0x58
   142ac:	mov	r0, r4
   142b0:	bl	12898 <coda_cursor_read_double@plt>
   142b4:	cmp	r0, #0
   142b8:	beq	142c0 <print_debug_data@@Base+0xc24>
   142bc:	bl	17f28 <handle_coda_error@@Base>
   142c0:	vldr	d0, [fp, #-88]	; 0xffffffa8
   142c4:	bl	128a4 <coda_isNaN@plt>
   142c8:	cmp	r0, #0
   142cc:	bne	142e0 <print_debug_data@@Base+0xc44>
   142d0:	vldr	d0, [fp, #-88]	; 0xffffffa8
   142d4:	bl	12748 <coda_isInf@plt>
   142d8:	cmp	r0, #0
   142dc:	beq	14390 <print_debug_data@@Base+0xcf4>
   142e0:	vldr	d16, [fp, #-88]	; 0xffffffa8
   142e4:	vmov	r2, r3, d16
   142e8:	movw	r0, #40618	; 0x9eaa
   142ec:	movt	r0, #1
   142f0:	b	14354 <print_debug_data@@Base+0xcb8>
   142f4:	add	r1, sp, #32
   142f8:	sub	r2, fp, #88	; 0x58
   142fc:	mov	r0, r4
   14300:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   14304:	cmp	r0, #0
   14308:	beq	14310 <print_debug_data@@Base+0xc74>
   1430c:	bl	17f28 <handle_coda_error@@Base>
   14310:	vldr	d16, [sp, #32]
   14314:	vldr	d17, [fp, #-88]	; 0xffffffa8
   14318:	vstr	d17, [sp]
   1431c:	vmov	r2, r3, d16
   14320:	movw	r0, #40653	; 0x9ecd
   14324:	movt	r0, #1
   14328:	b	14354 <print_debug_data@@Base+0xcb8>
   1432c:	add	r1, sp, #32
   14330:	mov	r0, r4
   14334:	bl	12898 <coda_cursor_read_double@plt>
   14338:	cmp	r0, #0
   1433c:	beq	14344 <print_debug_data@@Base+0xca8>
   14340:	bl	17f28 <handle_coda_error@@Base>
   14344:	vldr	d16, [sp, #32]
   14348:	vmov	r2, r3, d16
   1434c:	movw	r0, #40619	; 0x9eab
   14350:	movt	r0, #1
   14354:	bl	1441c <print_debug_data@@Base+0xd80>
   14358:	sub	sp, fp, #28
   1435c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14360:	ldr	r0, [sp, #24]
   14364:	add	r1, r0, #1
   14368:	ldr	r5, [sp, #28]
   1436c:	mov	r0, r5
   14370:	bl	137ec <print_debug_data@@Base+0x150>
   14374:	ldr	r0, [r4]
   14378:	sub	r0, r0, #1
   1437c:	str	r0, [r4]
   14380:	mov	r0, r5
   14384:	bl	12850 <coda_cursor_goto_parent@plt>
   14388:	sub	sp, fp, #28
   1438c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14390:	vldr	d0, [fp, #-88]	; 0xffffffa8
   14394:	movw	r0, #40337	; 0x9d91
   14398:	movt	r0, #1
   1439c:	add	r1, sp, #32
   143a0:	bl	126c4 <coda_time_double_to_string@plt>
   143a4:	cmp	r0, #0
   143a8:	beq	143b8 <print_debug_data@@Base+0xd1c>
   143ac:	movw	r0, #40626	; 0x9eb2
   143b0:	movt	r0, #1
   143b4:	b	13cb0 <print_debug_data@@Base+0x614>
   143b8:	movw	r0, #42292	; 0xa534
   143bc:	movt	r0, #1
   143c0:	add	r1, sp, #32
   143c4:	bl	1441c <print_debug_data@@Base+0xd80>
   143c8:	sub	sp, fp, #28
   143cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143d0:	sub	sp, sp, #12
   143d4:	push	{r4, sl, fp, lr}
   143d8:	add	fp, sp, #8
   143dc:	sub	sp, sp, #4
   143e0:	mov	r4, r0
   143e4:	add	r0, fp, #8
   143e8:	stm	r0, {r1, r2, r3}
   143ec:	bl	14574 <print_debug_data@@Base+0xed8>
   143f0:	add	r2, fp, #8
   143f4:	str	r2, [sp]
   143f8:	movw	r0, #53392	; 0xd090
   143fc:	movt	r0, #2
   14400:	ldr	r0, [r0]
   14404:	mov	r1, r4
   14408:	bl	129ac <vfprintf@plt>
   1440c:	sub	sp, fp, #8
   14410:	pop	{r4, sl, fp, lr}
   14414:	add	sp, sp, #12
   14418:	bx	lr
   1441c:	sub	sp, sp, #12
   14420:	push	{fp, lr}
   14424:	mov	fp, sp
   14428:	sub	sp, sp, #4
   1442c:	mov	ip, r0
   14430:	add	r0, fp, #8
   14434:	stm	r0, {r1, r2, r3}
   14438:	add	r2, fp, #8
   1443c:	str	r2, [sp]
   14440:	movw	r0, #53392	; 0xd090
   14444:	movt	r0, #2
   14448:	ldr	r0, [r0]
   1444c:	mov	r1, ip
   14450:	bl	129ac <vfprintf@plt>
   14454:	mov	sp, fp
   14458:	pop	{fp, lr}
   1445c:	add	sp, sp, #12
   14460:	bx	lr
   14464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14468:	add	fp, sp, #28
   1446c:	sub	sp, sp, #4
   14470:	cmp	r1, #1
   14474:	blt	1456c <print_debug_data@@Base+0xed0>
   14478:	mov	r4, r1
   1447c:	mov	r5, r0
   14480:	movw	r8, #40263	; 0x9d47
   14484:	movt	r8, #1
   14488:	movw	r9, #40266	; 0x9d4a
   1448c:	movt	r9, #1
   14490:	movw	sl, #40269	; 0x9d4d
   14494:	movt	sl, #1
   14498:	movw	r7, #40272	; 0x9d50
   1449c:	movt	r7, #1
   144a0:	movw	r6, #40275	; 0x9d53
   144a4:	movt	r6, #1
   144a8:	b	144c4 <print_debug_data@@Base+0xe28>
   144ac:	movw	r0, #40278	; 0x9d56
   144b0:	movt	r0, #1
   144b4:	bl	1441c <print_debug_data@@Base+0xd80>
   144b8:	add	r5, r5, #1
   144bc:	subs	r4, r4, #1
   144c0:	beq	1456c <print_debug_data@@Base+0xed0>
   144c4:	ldrb	r1, [r5]
   144c8:	sub	r0, r1, #7
   144cc:	cmp	r0, #6
   144d0:	bhi	14504 <print_debug_data@@Base+0xe68>
   144d4:	add	r1, pc, #0
   144d8:	ldr	pc, [r1, r0, lsl #2]
   144dc:	strdeq	r4, [r1], -r8
   144e0:	andeq	r4, r1, r8, lsr #10
   144e4:	andeq	r4, r1, r4, lsr r5
   144e8:	andeq	r4, r1, ip, lsr r5
   144ec:	andeq	r4, r1, r4, asr #10
   144f0:	andeq	r4, r1, ip, asr #10
   144f4:	andeq	r4, r1, r4, asr r5
   144f8:	movw	r0, #40257	; 0x9d41
   144fc:	movt	r0, #1
   14500:	b	144b4 <print_debug_data@@Base+0xe18>
   14504:	cmp	r1, #92	; 0x5c
   14508:	beq	144ac <print_debug_data@@Base+0xe10>
   1450c:	sub	r0, r1, #32
   14510:	uxtb	r0, r0
   14514:	cmp	r0, #94	; 0x5e
   14518:	bhi	1455c <print_debug_data@@Base+0xec0>
   1451c:	movw	r0, #40697	; 0x9ef9
   14520:	movt	r0, #1
   14524:	b	14564 <print_debug_data@@Base+0xec8>
   14528:	movw	r0, #40260	; 0x9d44
   1452c:	movt	r0, #1
   14530:	b	144b4 <print_debug_data@@Base+0xe18>
   14534:	mov	r0, r8
   14538:	b	144b4 <print_debug_data@@Base+0xe18>
   1453c:	mov	r0, r9
   14540:	b	144b4 <print_debug_data@@Base+0xe18>
   14544:	mov	r0, sl
   14548:	b	144b4 <print_debug_data@@Base+0xe18>
   1454c:	mov	r0, r7
   14550:	b	144b4 <print_debug_data@@Base+0xe18>
   14554:	mov	r0, r6
   14558:	b	144b4 <print_debug_data@@Base+0xe18>
   1455c:	movw	r0, #40281	; 0x9d59
   14560:	movt	r0, #1
   14564:	bl	1441c <print_debug_data@@Base+0xd80>
   14568:	b	144b8 <print_debug_data@@Base+0xe1c>
   1456c:	sub	sp, fp, #28
   14570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14574:	push	{r4, r5, r6, sl, fp, lr}
   14578:	add	fp, sp, #16
   1457c:	movw	r0, #49600	; 0xc1c0
   14580:	movt	r0, #2
   14584:	ldr	r5, [r0]
   14588:	cmp	r5, #0
   1458c:	bmi	145c8 <print_debug_data@@Base+0xf2c>
   14590:	beq	145c4 <print_debug_data@@Base+0xf28>
   14594:	movw	r6, #53392	; 0xd090
   14598:	movt	r6, #2
   1459c:	movw	r4, #40694	; 0x9ef6
   145a0:	movt	r4, #1
   145a4:	ldr	r3, [r6]
   145a8:	mov	r0, r4
   145ac:	mov	r1, #2
   145b0:	mov	r2, #1
   145b4:	bl	127cc <fwrite@plt>
   145b8:	sub	r5, r5, #1
   145bc:	cmp	r5, #0
   145c0:	bgt	145a4 <print_debug_data@@Base+0xf08>
   145c4:	pop	{r4, r5, r6, sl, fp, pc}
   145c8:	movw	r0, #40664	; 0x9ed8
   145cc:	movt	r0, #1
   145d0:	movw	r1, #40443	; 0x9dfb
   145d4:	movt	r1, #1
   145d8:	movw	r3, #40676	; 0x9ee4
   145dc:	movt	r3, #1
   145e0:	mov	r2, #44	; 0x2c
   145e4:	bl	12ab4 <__assert_fail@plt>

000145e8 <dim_info_init@@Base>:
   145e8:	movw	r0, #53424	; 0xd0b0
   145ec:	movt	r0, #2
   145f0:	mvn	r1, #0
   145f4:	str	r1, [r0, #104]	; 0x68
   145f8:	mov	r1, #0
   145fc:	str	r1, [r0, #68]	; 0x44
   14600:	str	r1, [r0]
   14604:	bx	lr

00014608 <dim_info_done@@Base>:
   14608:	bx	lr

0001460c <print_all_distinct_dims@@Base>:
   1460c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14610:	add	fp, sp, #28
   14614:	sub	sp, sp, #4
   14618:	mov	sl, r0
   1461c:	movw	r9, #53424	; 0xd0b0
   14620:	movt	r9, #2
   14624:	ldr	r0, [r9]
   14628:	cmp	r0, sl
   1462c:	ble	147dc <print_all_distinct_dims@@Base+0x1d0>
   14630:	add	r8, r9, sl, lsl #2
   14634:	ldr	r0, [r8, #72]	; 0x48
   14638:	cmp	r0, #0
   1463c:	beq	147d4 <print_all_distinct_dims@@Base+0x1c8>
   14640:	mov	r7, r8
   14644:	ldr	r0, [r7, #4]!
   14648:	mov	r5, #4
   1464c:	add	r6, r5, r0, lsl #2
   14650:	mov	r0, r6
   14654:	bl	12820 <malloc@plt>
   14658:	mov	r4, r0
   1465c:	cmp	r0, #0
   14660:	bne	1468c <print_all_distinct_dims@@Base+0x80>
   14664:	mov	r0, #61	; 0x3d
   14668:	str	r0, [sp]
   1466c:	movw	r1, #40129	; 0x9cc1
   14670:	movt	r1, #1
   14674:	movw	r3, #40727	; 0x9f17
   14678:	movt	r3, #1
   1467c:	mvn	r0, #0
   14680:	mov	r2, r6
   14684:	bl	126a0 <coda_set_error@plt>
   14688:	bl	17f28 <handle_coda_error@@Base>
   1468c:	ldr	r0, [r7]
   14690:	add	r2, r5, r0, lsl #2
   14694:	mov	r6, #0
   14698:	mov	r0, r4
   1469c:	mov	r1, #0
   146a0:	bl	12904 <memset@plt>
   146a4:	mov	r1, r8
   146a8:	ldr	r0, [r1, #140]!	; 0x8c
   146ac:	add	r0, r9, r0, lsl #3
   146b0:	ldr	r3, [r0, #236]	; 0xec
   146b4:	ldr	r0, [r0, #232]	; 0xe8
   146b8:	subs	r0, r0, #1
   146bc:	sbcs	r0, r3, #0
   146c0:	blt	146f8 <print_all_distinct_dims@@Base+0xec>
   146c4:	ldr	r0, [r8, #108]	; 0x6c
   146c8:	ldr	r1, [r1]
   146cc:	add	r1, r9, r1, lsl #3
   146d0:	ldrd	r2, [r1, #232]	; 0xe8
   146d4:	ldr	r1, [r0, r6, lsl #2]
   146d8:	cmp	r1, #0
   146dc:	ldrpl	r5, [r4, r1, lsl #2]
   146e0:	addpl	r5, r5, #1
   146e4:	strpl	r5, [r4, r1, lsl #2]
   146e8:	add	r6, r6, #1
   146ec:	subs	r1, r6, r2
   146f0:	rscs	r1, r3, #0
   146f4:	blt	146d4 <print_all_distinct_dims@@Base+0xc8>
   146f8:	add	r1, sl, #1
   146fc:	movw	r0, #40834	; 0x9f82
   14700:	movt	r0, #1
   14704:	bl	1267c <printf@plt>
   14708:	ldr	r5, [r8, #36]!	; 0x24
   1470c:	ldr	r1, [r7]
   14710:	cmp	r5, r1
   14714:	bge	14750 <print_all_distinct_dims@@Base+0x144>
   14718:	movw	r6, #40846	; 0x9f8e
   1471c:	movt	r6, #1
   14720:	b	14734 <print_all_distinct_dims@@Base+0x128>
   14724:	add	r5, r5, #1
   14728:	ldr	r1, [r7]
   1472c:	cmp	r5, r1
   14730:	bge	14750 <print_all_distinct_dims@@Base+0x144>
   14734:	ldr	r0, [r4, r5, lsl #2]
   14738:	cmp	r0, #1
   1473c:	blt	14724 <print_all_distinct_dims@@Base+0x118>
   14740:	mov	r0, r6
   14744:	mov	r1, r5
   14748:	bl	1267c <printf@plt>
   1474c:	b	14724 <print_all_distinct_dims@@Base+0x118>
   14750:	movw	r0, #40850	; 0x9f92
   14754:	movt	r0, #1
   14758:	bl	1267c <printf@plt>
   1475c:	movw	r0, #40854	; 0x9f96
   14760:	movt	r0, #1
   14764:	bl	1267c <printf@plt>
   14768:	ldr	r0, [r7]
   1476c:	ldr	r6, [r8]
   14770:	cmp	r6, r0
   14774:	bge	147ac <print_all_distinct_dims@@Base+0x1a0>
   14778:	movw	r5, #40846	; 0x9f8e
   1477c:	movt	r5, #1
   14780:	b	14794 <print_all_distinct_dims@@Base+0x188>
   14784:	add	r6, r6, #1
   14788:	ldr	r0, [r7]
   1478c:	cmp	r6, r0
   14790:	bge	147ac <print_all_distinct_dims@@Base+0x1a0>
   14794:	ldr	r1, [r4, r6, lsl #2]
   14798:	cmp	r1, #1
   1479c:	blt	14784 <print_all_distinct_dims@@Base+0x178>
   147a0:	mov	r0, r5
   147a4:	bl	1267c <printf@plt>
   147a8:	b	14784 <print_all_distinct_dims@@Base+0x178>
   147ac:	ldr	r1, [r4, r0, lsl #2]
   147b0:	movw	r0, #40850	; 0x9f92
   147b4:	movt	r0, #1
   147b8:	bl	1267c <printf@plt>
   147bc:	mov	r0, #10
   147c0:	bl	12910 <putchar@plt>
   147c4:	mov	r0, r4
   147c8:	sub	sp, fp, #28
   147cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147d0:	b	126e8 <free@plt>
   147d4:	sub	sp, fp, #28
   147d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147dc:	movw	r0, #40700	; 0x9efc
   147e0:	movt	r0, #1
   147e4:	movw	r1, #40727	; 0x9f17
   147e8:	movt	r1, #1
   147ec:	movw	r3, #40800	; 0x9f60
   147f0:	movt	r3, #1
   147f4:	mov	r2, #50	; 0x32
   147f8:	bl	12ab4 <__assert_fail@plt>

000147fc <dim_enter_array@@Base>:
   147fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14800:	add	fp, sp, #28
   14804:	sub	sp, sp, #84	; 0x54
   14808:	movw	r4, #49640	; 0xc1e8
   1480c:	movt	r4, #2
   14810:	ldr	r5, [r4, #3360]	; 0xd20
   14814:	ldr	r0, [r4, #136]	; 0x88
   14818:	add	r0, r4, r0, lsl #2
   1481c:	ldr	r0, [r0, #8]
   14820:	sub	r1, fp, #32
   14824:	bl	12ac0 <coda_type_get_class@plt>
   14828:	cmp	r0, #0
   1482c:	beq	14834 <dim_enter_array@@Base+0x38>
   14830:	bl	17f28 <handle_coda_error@@Base>
   14834:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14838:	sub	r0, r0, #1
   1483c:	cmp	r0, #5
   14840:	bhi	14fcc <dim_enter_array@@Base+0x7d0>
   14844:	add	r1, r5, r5, lsl #2
   14848:	add	r6, r4, r1, lsl #4
   1484c:	add	r1, pc, #0
   14850:	ldr	pc, [r1, r0, lsl #2]
   14854:	andeq	r4, r1, ip, ror #16
   14858:	andeq	r4, r1, ip, asr #31
   1485c:	andeq	r4, r1, ip, asr #31
   14860:	strdeq	r4, [r1], -r0
   14864:	andeq	r4, r1, r4, lsr #18
   14868:			; <UNDEFINED> instruction: 0x000148b4
   1486c:	ldr	r0, [r4, #136]	; 0x88
   14870:	add	r0, r4, r0, lsl #2
   14874:	ldr	r0, [r0, #8]
   14878:	add	r1, sp, #44	; 0x2c
   1487c:	add	r2, sp, #48	; 0x30
   14880:	bl	129f4 <coda_type_get_array_dim@plt>
   14884:	cmp	r0, #0
   14888:	beq	14890 <dim_enter_array@@Base+0x94>
   1488c:	bl	17f28 <handle_coda_error@@Base>
   14890:	ldr	r1, [sp, #44]	; 0x2c
   14894:	str	r1, [r6, #804]	; 0x324
   14898:	cmp	r1, #1
   1489c:	blt	14978 <dim_enter_array@@Base+0x17c>
   148a0:	add	r0, r6, #808	; 0x328
   148a4:	lsl	r2, r1, #2
   148a8:	add	r1, sp, #48	; 0x30
   148ac:	bl	1273c <memcpy@plt>
   148b0:	b	14978 <dim_enter_array@@Base+0x17c>
   148b4:	ldr	r0, [r4, #136]	; 0x88
   148b8:	add	r0, r4, r0, lsl #2
   148bc:	ldr	r0, [r0, #8]
   148c0:	add	r1, sp, #48	; 0x30
   148c4:	bl	12928 <coda_type_get_special_type@plt>
   148c8:	cmp	r0, #0
   148cc:	beq	148d4 <dim_enter_array@@Base+0xd8>
   148d0:	bl	17f28 <handle_coda_error@@Base>
   148d4:	ldr	r0, [sp, #48]	; 0x30
   148d8:	cmp	r0, #3
   148dc:	bne	1500c <dim_enter_array@@Base+0x810>
   148e0:	mov	r0, #2
   148e4:	mov	r1, #1
   148e8:	str	r1, [r6, #804]	; 0x324
   148ec:	b	14974 <dim_enter_array@@Base+0x178>
   148f0:	ldr	r0, [r4, #136]	; 0x88
   148f4:	add	r0, r4, r0, lsl #2
   148f8:	ldr	r0, [r0, #8]
   148fc:	add	r1, sp, #48	; 0x30
   14900:	bl	12964 <coda_type_get_string_length@plt>
   14904:	cmp	r0, #0
   14908:	beq	14910 <dim_enter_array@@Base+0x114>
   1490c:	bl	17f28 <handle_coda_error@@Base>
   14910:	mov	r0, #1
   14914:	ldr	r1, [sp, #48]	; 0x30
   14918:	str	r0, [r6, #804]	; 0x324
   1491c:	str	r1, [r6, #808]	; 0x328
   14920:	b	14978 <dim_enter_array@@Base+0x17c>
   14924:	ldr	r0, [r4, #136]	; 0x88
   14928:	add	r0, r4, r0, lsl #2
   1492c:	ldr	r0, [r0, #8]
   14930:	add	r1, sp, #48	; 0x30
   14934:	bl	12754 <coda_type_get_bit_size@plt>
   14938:	cmp	r0, #0
   1493c:	beq	14944 <dim_enter_array@@Base+0x148>
   14940:	bl	17f28 <handle_coda_error@@Base>
   14944:	mov	r0, #1
   14948:	str	r0, [r6, #804]	; 0x324
   1494c:	ldr	r0, [sp, #52]	; 0x34
   14950:	cmp	r0, #0
   14954:	bmi	14970 <dim_enter_array@@Base+0x174>
   14958:	ldr	r1, [sp, #48]	; 0x30
   1495c:	lsr	r2, r1, #3
   14960:	orr	r0, r2, r0, lsl #29
   14964:	tst	r1, #7
   14968:	addne	r0, r0, #1
   1496c:	b	14974 <dim_enter_array@@Base+0x178>
   14970:	mvn	r0, #0
   14974:	str	r0, [r6, #808]	; 0x328
   14978:	add	r0, r6, #800	; 0x320
   1497c:	movw	r1, #49636	; 0xc1e4
   14980:	movt	r1, #2
   14984:	ldr	r1, [r1]
   14988:	cmp	r1, #0
   1498c:	beq	14a14 <dim_enter_array@@Base+0x218>
   14990:	movw	r8, #53424	; 0xd0b0
   14994:	movt	r8, #2
   14998:	ldr	ip, [r8]
   1499c:	str	ip, [r0]
   149a0:	mov	r7, r6
   149a4:	ldr	r0, [r7, #804]!	; 0x324
   149a8:	add	r3, r0, ip
   149ac:	cmp	r3, #9
   149b0:	bge	14fec <dim_enter_array@@Base+0x7f0>
   149b4:	str	r3, [r8]
   149b8:	cmp	ip, #0
   149bc:	str	ip, [sp, #32]
   149c0:	ble	14a30 <dim_enter_array@@Base+0x234>
   149c4:	add	r1, r8, ip, lsl #3
   149c8:	ldr	r3, [r1, #232]	; 0xe8
   149cc:	ldr	r2, [r1, #236]	; 0xec
   149d0:	str	r3, [sp, #24]
   149d4:	str	r2, [sp, #20]
   149d8:	ldr	r3, [r1, #296]	; 0x128
   149dc:	ldr	r2, [r1, #300]	; 0x12c
   149e0:	str	r3, [sp, #8]
   149e4:	rsbs	r1, r3, #0
   149e8:	mov	r1, r2
   149ec:	str	r2, [sp, #12]
   149f0:	rscs	r1, r2, #0
   149f4:	bge	14c2c <dim_enter_array@@Base+0x430>
   149f8:	cmp	r0, #1
   149fc:	blt	14c58 <dim_enter_array@@Base+0x45c>
   14a00:	ldr	r1, [sp, #8]
   14a04:	str	r1, [sp, #40]	; 0x28
   14a08:	ldr	r1, [sp, #12]
   14a0c:	str	r1, [sp, #36]	; 0x24
   14a10:	b	14a6c <dim_enter_array@@Base+0x270>
   14a14:	mvn	r1, #0
   14a18:	str	r1, [r0]
   14a1c:	mov	r0, #0
   14a20:	str	r0, [r6, #840]	; 0x348
   14a24:	str	r0, [r6, #844]	; 0x34c
   14a28:	sub	sp, fp, #28
   14a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a30:	mov	r1, #0
   14a34:	str	r1, [sp, #36]	; 0x24
   14a38:	mov	r1, #1
   14a3c:	str	r1, [sp, #40]	; 0x28
   14a40:	cmp	r0, #0
   14a44:	mov	r1, #1
   14a48:	str	r1, [sp, #24]
   14a4c:	mov	r1, #0
   14a50:	str	r1, [sp, #20]
   14a54:	mov	r1, #1
   14a58:	str	r1, [sp, #8]
   14a5c:	mov	r1, #0
   14a60:	str	r1, [sp, #12]
   14a64:	mov	r5, #0
   14a68:	ble	14ca8 <dim_enter_array@@Base+0x4ac>
   14a6c:	ldr	r1, [sp, #36]	; 0x24
   14a70:	str	r1, [sp, #12]
   14a74:	ldr	r1, [sp, #40]	; 0x28
   14a78:	str	r1, [sp, #8]
   14a7c:	add	r5, r8, ip, lsl #2
   14a80:	add	r1, r5, #72	; 0x48
   14a84:	str	r6, [sp, #16]
   14a88:	add	r2, r6, #808	; 0x328
   14a8c:	mov	r3, #0
   14a90:	mov	r6, #0
   14a94:	ldr	r4, [r2], #4
   14a98:	str	r3, [r1]
   14a9c:	str	r4, [r1, #-68]	; 0xffffffbc
   14aa0:	cmn	r4, #1
   14aa4:	movweq	r6, #1
   14aa8:	add	r1, r1, #4
   14aac:	subs	r0, r0, #1
   14ab0:	bne	14a94 <dim_enter_array@@Base+0x298>
   14ab4:	cmp	r6, #0
   14ab8:	beq	14c70 <dim_enter_array@@Base+0x474>
   14abc:	ldr	r0, [r7]
   14ac0:	cmp	r0, #1
   14ac4:	str	r7, [sp, #28]
   14ac8:	blt	14b88 <dim_enter_array@@Base+0x38c>
   14acc:	ldr	r0, [sp, #16]
   14ad0:	add	r6, r0, #808	; 0x328
   14ad4:	ldr	r0, [sp, #24]
   14ad8:	lsl	r4, r0, #2
   14adc:	mov	r9, #0
   14ae0:	b	14b00 <dim_enter_array@@Base+0x304>
   14ae4:	mov	r0, #0
   14ae8:	str	r0, [sl, #140]	; 0x8c
   14aec:	str	r0, [sl, #108]	; 0x6c
   14af0:	ldr	r0, [r7]
   14af4:	add	r9, r9, #1
   14af8:	cmp	r9, r0
   14afc:	bge	14b88 <dim_enter_array@@Base+0x38c>
   14b00:	ldr	r0, [r6, r9, lsl #2]
   14b04:	add	sl, r5, r9, lsl #2
   14b08:	cmn	r0, #1
   14b0c:	bne	14ae4 <dim_enter_array@@Base+0x2e8>
   14b10:	str	ip, [sl, #140]	; 0x8c
   14b14:	mov	r0, r4
   14b18:	bl	12820 <malloc@plt>
   14b1c:	str	r0, [sl, #108]	; 0x6c
   14b20:	cmp	r0, #0
   14b24:	bne	14b50 <dim_enter_array@@Base+0x354>
   14b28:	mov	r0, #456	; 0x1c8
   14b2c:	str	r0, [sp]
   14b30:	mvn	r0, #0
   14b34:	movw	r1, #40129	; 0x9cc1
   14b38:	movt	r1, #1
   14b3c:	mov	r2, r4
   14b40:	movw	r3, #40727	; 0x9f17
   14b44:	movt	r3, #1
   14b48:	bl	126a0 <coda_set_error@plt>
   14b4c:	bl	17f28 <handle_coda_error@@Base>
   14b50:	ldr	r0, [sp, #24]
   14b54:	rsbs	r0, r0, #0
   14b58:	ldr	r0, [sp, #20]
   14b5c:	rscs	r0, r0, #0
   14b60:	ldr	ip, [sp, #32]
   14b64:	ldr	r7, [sp, #28]
   14b68:	bge	14af0 <dim_enter_array@@Base+0x2f4>
   14b6c:	ldr	r0, [sl, #108]	; 0x6c
   14b70:	mov	r1, #255	; 0xff
   14b74:	mov	r2, r4
   14b78:	bl	12904 <memset@plt>
   14b7c:	ldr	r7, [sp, #28]
   14b80:	ldr	ip, [sp, #32]
   14b84:	b	14af0 <dim_enter_array@@Base+0x2f4>
   14b88:	mov	r0, #0
   14b8c:	ldr	r6, [sp, #16]
   14b90:	str	r0, [r6, #844]	; 0x34c
   14b94:	mov	r0, #0
   14b98:	mov	r1, #0
   14b9c:	mov	r2, #0
   14ba0:	bl	1502c <dim_enter_array@@Base+0x830>
   14ba4:	ldr	r7, [sp, #28]
   14ba8:	ldr	r0, [r7]
   14bac:	cmp	r0, #1
   14bb0:	blt	14c8c <dim_enter_array@@Base+0x490>
   14bb4:	str	r5, [sp, #40]	; 0x28
   14bb8:	add	r6, r6, #808	; 0x328
   14bbc:	mov	r4, #0
   14bc0:	mov	r5, #0
   14bc4:	ldr	ip, [sp, #32]
   14bc8:	mov	sl, #0
   14bcc:	b	14bfc <dim_enter_array@@Base+0x400>
   14bd0:	str	sl, [r9, #72]	; 0x48
   14bd4:	ldr	r0, [r9, #108]	; 0x6c
   14bd8:	bl	126e8 <free@plt>
   14bdc:	ldr	r7, [sp, #28]
   14be0:	ldr	ip, [sp, #32]
   14be4:	str	sl, [r9, #140]	; 0x8c
   14be8:	str	sl, [r9, #108]	; 0x6c
   14bec:	ldr	r0, [r7]
   14bf0:	add	r4, r4, #1
   14bf4:	cmp	r4, r0
   14bf8:	bge	14c74 <dim_enter_array@@Base+0x478>
   14bfc:	ldr	r0, [r6, r4, lsl #2]
   14c00:	cmn	r0, #1
   14c04:	bne	14bec <dim_enter_array@@Base+0x3f0>
   14c08:	ldr	r0, [sp, #40]	; 0x28
   14c0c:	add	r9, r0, r4, lsl #2
   14c10:	ldr	r0, [r9, #4]
   14c14:	ldr	r1, [r9, #36]	; 0x24
   14c18:	cmp	r0, r1
   14c1c:	beq	14bd0 <dim_enter_array@@Base+0x3d4>
   14c20:	mov	r5, #1
   14c24:	str	r5, [r9, #72]	; 0x48
   14c28:	b	14bec <dim_enter_array@@Base+0x3f0>
   14c2c:	cmp	r0, #1
   14c30:	blt	14c58 <dim_enter_array@@Base+0x45c>
   14c34:	add	r1, r8, ip, lsl #2
   14c38:	add	r1, r1, #72	; 0x48
   14c3c:	mov	r5, #0
   14c40:	str	r5, [r1]
   14c44:	str	r5, [r1, #-68]	; 0xffffffbc
   14c48:	add	r1, r1, #4
   14c4c:	subs	r0, r0, #1
   14c50:	bne	14c40 <dim_enter_array@@Base+0x444>
   14c54:	b	14c5c <dim_enter_array@@Base+0x460>
   14c58:	mov	r5, #0
   14c5c:	ldr	r0, [sp, #24]
   14c60:	str	r0, [sp, #40]	; 0x28
   14c64:	ldr	r0, [sp, #20]
   14c68:	str	r0, [sp, #36]	; 0x24
   14c6c:	b	14ca4 <dim_enter_array@@Base+0x4a8>
   14c70:	mov	r5, #0
   14c74:	ldr	r0, [sp, #24]
   14c78:	str	r0, [sp, #40]	; 0x28
   14c7c:	ldr	r0, [sp, #20]
   14c80:	str	r0, [sp, #36]	; 0x24
   14c84:	ldr	r6, [sp, #16]
   14c88:	b	14ca4 <dim_enter_array@@Base+0x4a8>
   14c8c:	ldr	r0, [sp, #24]
   14c90:	str	r0, [sp, #40]	; 0x28
   14c94:	ldr	r0, [sp, #20]
   14c98:	str	r0, [sp, #36]	; 0x24
   14c9c:	ldr	ip, [sp, #32]
   14ca0:	mov	r5, #0
   14ca4:	ldr	r3, [r8]
   14ca8:	mvn	r0, #0
   14cac:	str	r0, [r8, #104]	; 0x68
   14cb0:	mov	r0, #0
   14cb4:	str	r0, [r8, #68]	; 0x44
   14cb8:	cmp	r3, #1
   14cbc:	blt	14ce8 <dim_enter_array@@Base+0x4ec>
   14cc0:	ldr	r3, [r8]
   14cc4:	mov	r1, #1
   14cc8:	add	r2, r8, r0, lsl #2
   14ccc:	ldr	r2, [r2, #72]	; 0x48
   14cd0:	cmp	r2, #0
   14cd4:	strne	r0, [r8, #104]	; 0x68
   14cd8:	strne	r1, [r8, #68]	; 0x44
   14cdc:	add	r0, r0, #1
   14ce0:	cmp	r0, r3
   14ce4:	blt	14cc8 <dim_enter_array@@Base+0x4cc>
   14ce8:	str	r3, [sp, #24]
   14cec:	mov	r0, #1
   14cf0:	str	r0, [r6, #840]!	; 0x348
   14cf4:	ldr	r9, [r7]
   14cf8:	cmp	r9, #1
   14cfc:	blt	14da4 <dim_enter_array@@Base+0x5a8>
   14d00:	str	r5, [sp, #20]
   14d04:	add	r0, r8, ip, lsl #2
   14d08:	mov	r5, ip
   14d0c:	add	lr, r0, #4
   14d10:	add	r1, r8, ip, lsl #3
   14d14:	add	r2, r1, #240	; 0xf0
   14d18:	str	r6, [sp, #16]
   14d1c:	ldr	r1, [r6]
   14d20:	ldr	r9, [r7]
   14d24:	mov	r3, #0
   14d28:	str	r2, [sp, #28]
   14d2c:	ldr	r5, [sp, #40]	; 0x28
   14d30:	b	14d60 <dim_enter_array@@Base+0x564>
   14d34:	ldr	r0, [r2, #-8]
   14d38:	ldr	r7, [r2, #-4]
   14d3c:	umull	r4, sl, r0, r6
   14d40:	asr	ip, r6, #31
   14d44:	mla	r0, r0, ip, sl
   14d48:	mla	r7, r7, r6, r0
   14d4c:	stm	r2, {r4, r7}
   14d50:	add	r2, r2, #8
   14d54:	add	r3, r3, #1
   14d58:	cmp	r3, r9
   14d5c:	bge	14d94 <dim_enter_array@@Base+0x598>
   14d60:	ldr	r6, [lr, r3, lsl #2]
   14d64:	mul	r1, r1, r6
   14d68:	cmp	r3, #0
   14d6c:	bne	14d34 <dim_enter_array@@Base+0x538>
   14d70:	ldr	r6, [lr]
   14d74:	umull	r0, r7, r5, r6
   14d78:	asr	r4, r6, #31
   14d7c:	mla	r4, r5, r4, r7
   14d80:	ldr	r7, [sp, #36]	; 0x24
   14d84:	mla	r7, r7, r6, r4
   14d88:	ldr	r6, [sp, #28]
   14d8c:	stm	r6, {r0, r7}
   14d90:	b	14d50 <dim_enter_array@@Base+0x554>
   14d94:	ldr	r0, [sp, #16]
   14d98:	str	r1, [r0]
   14d9c:	ldr	ip, [sp, #32]
   14da0:	ldr	r5, [sp, #20]
   14da4:	cmp	r5, #0
   14da8:	beq	14e88 <dim_enter_array@@Base+0x68c>
   14dac:	cmp	r9, #1
   14db0:	blt	14dcc <dim_enter_array@@Base+0x5d0>
   14db4:	ldr	r0, [sp, #32]
   14db8:	add	r0, r8, r0, lsl #3
   14dbc:	add	r0, r0, #304	; 0x130
   14dc0:	lsl	r2, r9, #3
   14dc4:	mov	r1, #0
   14dc8:	bl	12904 <memset@plt>
   14dcc:	ldr	r0, [sp, #40]	; 0x28
   14dd0:	subs	r0, r0, #1
   14dd4:	ldr	r0, [sp, #36]	; 0x24
   14dd8:	sbcs	r0, r0, #0
   14ddc:	blt	14efc <dim_enter_array@@Base+0x700>
   14de0:	movw	r0, #65232	; 0xfed0
   14de4:	movt	r0, #65535	; 0xffff
   14de8:	ldr	r1, [sp, #32]
   14dec:	sub	ip, r0, r1, lsl #3
   14df0:	lsl	lr, r1, #2
   14df4:	mov	r2, #0
   14df8:	cmp	r9, #1
   14dfc:	bge	14e20 <dim_enter_array@@Base+0x624>
   14e00:	add	r2, r2, #1
   14e04:	ldr	r0, [sp, #40]	; 0x28
   14e08:	subs	r0, r2, r0
   14e0c:	ldr	r0, [sp, #36]	; 0x24
   14e10:	rscs	r0, r0, #0
   14e14:	bge	14efc <dim_enter_array@@Base+0x700>
   14e18:	cmp	r9, #1
   14e1c:	blt	14e00 <dim_enter_array@@Base+0x604>
   14e20:	mov	r3, #1
   14e24:	mov	r0, ip
   14e28:	mov	r1, lr
   14e2c:	mov	r6, r9
   14e30:	b	14e6c <dim_enter_array@@Base+0x670>
   14e34:	add	r4, r4, #4
   14e38:	mov	r7, r8
   14e3c:	ldr	r5, [r7, -r0]!
   14e40:	ldr	r4, [r4]
   14e44:	mul	r3, r4, r3
   14e48:	adds	r4, r5, r3
   14e4c:	str	r4, [r7]
   14e50:	ldr	r4, [r7, #4]
   14e54:	adc	r4, r4, r3, asr #31
   14e58:	str	r4, [r7, #4]
   14e5c:	sub	r0, r0, #8
   14e60:	add	r1, r1, #4
   14e64:	subs	r6, r6, #1
   14e68:	beq	14e00 <dim_enter_array@@Base+0x604>
   14e6c:	add	r4, r8, r1
   14e70:	ldr	r7, [r4, #72]	; 0x48
   14e74:	cmp	r7, #0
   14e78:	beq	14e34 <dim_enter_array@@Base+0x638>
   14e7c:	ldr	r4, [r4, #108]	; 0x6c
   14e80:	add	r4, r4, r2, lsl #2
   14e84:	b	14e38 <dim_enter_array@@Base+0x63c>
   14e88:	add	r2, r8, ip, lsl #3
   14e8c:	add	r0, r8, ip, lsl #2
   14e90:	ldr	r1, [r0, #4]
   14e94:	ldr	r5, [sp, #8]
   14e98:	umull	r3, r7, r5, r1
   14e9c:	asr	r6, r1, #31
   14ea0:	mla	r7, r5, r6, r7
   14ea4:	ldr	r6, [sp, #12]
   14ea8:	mla	r1, r6, r1, r7
   14eac:	str	r3, [r2, #304]	; 0x130
   14eb0:	str	r1, [r2, #308]	; 0x134
   14eb4:	cmp	r9, #2
   14eb8:	blt	14efc <dim_enter_array@@Base+0x700>
   14ebc:	add	r0, r0, #8
   14ec0:	add	r1, r2, #312	; 0x138
   14ec4:	ldr	r6, [r2, #304]	; 0x130
   14ec8:	ldr	r3, [r2, #308]	; 0x134
   14ecc:	sub	r2, r9, #1
   14ed0:	ldr	r7, [r0], #4
   14ed4:	umull	r4, ip, r6, r7
   14ed8:	asr	r5, r7, #31
   14edc:	mla	r6, r6, r5, ip
   14ee0:	mla	r3, r3, r7, r6
   14ee4:	str	r4, [r1]
   14ee8:	str	r3, [r1, #4]
   14eec:	add	r1, r1, #8
   14ef0:	subs	r2, r2, #1
   14ef4:	mov	r6, r4
   14ef8:	bne	14ed0 <dim_enter_array@@Base+0x6d4>
   14efc:	ldr	r5, [sp, #32]
   14f00:	add	r0, r5, r9
   14f04:	add	r1, r8, r0, lsl #3
   14f08:	ldr	r0, [r1, #296]	; 0x128
   14f0c:	ldr	r2, [r1, #300]	; 0x12c
   14f10:	subs	r0, r0, #1
   14f14:	sbcs	r0, r2, #0
   14f18:	blt	14fc4 <dim_enter_array@@Base+0x7c8>
   14f1c:	ldr	r0, [sp, #24]
   14f20:	sub	r0, r0, #1
   14f24:	add	r2, r8, r0, lsl #3
   14f28:	add	r0, r8, r0, lsl #2
   14f2c:	ldr	r0, [r0, #4]
   14f30:	asr	r3, r0, #31
   14f34:	str	r0, [r2, #176]	; 0xb0
   14f38:	str	r3, [r2, #180]	; 0xb4
   14f3c:	subs	r0, r9, #2
   14f40:	bmi	14f88 <dim_enter_array@@Base+0x78c>
   14f44:	add	r0, r8, r5, lsl #2
   14f48:	sub	ip, r0, #4
   14f4c:	add	r1, r1, #160	; 0xa0
   14f50:	ldr	r2, [ip, r9, lsl #2]
   14f54:	ldr	r4, [r1, #8]
   14f58:	ldr	r0, [r1, #12]
   14f5c:	umull	r6, r3, r4, r2
   14f60:	asr	r7, r2, #31
   14f64:	mla	r3, r4, r7, r3
   14f68:	mla	r7, r0, r2, r3
   14f6c:	strd	r6, [r1]
   14f70:	sub	r1, r1, #8
   14f74:	sub	r2, r9, #1
   14f78:	sub	r3, r9, #2
   14f7c:	cmp	r3, #0
   14f80:	mov	r9, r2
   14f84:	bgt	14f50 <dim_enter_array@@Base+0x754>
   14f88:	cmp	r5, #1
   14f8c:	blt	14fc4 <dim_enter_array@@Base+0x7c8>
   14f90:	add	r1, r8, r5, lsl #3
   14f94:	add	r0, r1, #168	; 0xa8
   14f98:	add	r1, r1, #176	; 0xb0
   14f9c:	ldrd	r2, [r1]
   14fa0:	ldm	r0, {r4, r9}
   14fa4:	umull	r6, r7, r4, r2
   14fa8:	mla	r3, r4, r3, r7
   14fac:	mla	r7, r9, r2, r3
   14fb0:	strd	r6, [r0]
   14fb4:	sub	r0, r0, #8
   14fb8:	sub	r5, r5, #1
   14fbc:	cmp	r5, #0
   14fc0:	bgt	14f9c <dim_enter_array@@Base+0x7a0>
   14fc4:	sub	sp, fp, #28
   14fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fcc:	movw	r0, #40674	; 0x9ee2
   14fd0:	movt	r0, #1
   14fd4:	movw	r1, #40727	; 0x9f17
   14fd8:	movt	r1, #1
   14fdc:	movw	r3, #40862	; 0x9f9e
   14fe0:	movt	r3, #1
   14fe4:	movw	r2, #386	; 0x182
   14fe8:	bl	12ab4 <__assert_fail@plt>
   14fec:	movw	r0, #40885	; 0x9fb5
   14ff0:	movt	r0, #1
   14ff4:	movw	r1, #40727	; 0x9f17
   14ff8:	movt	r1, #1
   14ffc:	movw	r3, #40862	; 0x9f9e
   15000:	movt	r3, #1
   15004:	movw	r2, #402	; 0x192
   15008:	bl	12ab4 <__assert_fail@plt>
   1500c:	movw	r0, #40674	; 0x9ee2
   15010:	movt	r0, #1
   15014:	movw	r1, #40727	; 0x9f17
   15018:	movt	r1, #1
   1501c:	movw	r3, #40862	; 0x9f9e
   15020:	movt	r3, #1
   15024:	movw	r2, #349	; 0x15d
   15028:	bl	12ab4 <__assert_fail@plt>
   1502c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15030:	add	fp, sp, #28
   15034:	sub	sp, sp, #44	; 0x2c
   15038:	str	r2, [sp]
   1503c:	mov	r8, r1
   15040:	mov	r9, r0
   15044:	movw	r7, #49640	; 0xc1e8
   15048:	movt	r7, #2
   1504c:	add	r5, r7, #144	; 0x90
   15050:	sub	r1, fp, #32
   15054:	mov	r0, r5
   15058:	bl	12778 <coda_cursor_get_type_class@plt>
   1505c:	cmp	r0, #0
   15060:	beq	15068 <dim_enter_array@@Base+0x86c>
   15064:	bl	17f28 <handle_coda_error@@Base>
   15068:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1506c:	sub	r1, r0, #4
   15070:	cmp	r1, #2
   15074:	bcc	15158 <dim_enter_array@@Base+0x95c>
   15078:	cmp	r0, #0
   1507c:	beq	15198 <dim_enter_array@@Base+0x99c>
   15080:	cmp	r0, #1
   15084:	bne	15430 <dim_enter_array@@Base+0xc34>
   15088:	add	r0, r8, r8, lsl #2
   1508c:	add	r4, r7, r0, lsl #4
   15090:	ldr	r6, [r4, #800]	; 0x320
   15094:	ldr	r0, [r7, #3360]	; 0xd20
   15098:	cmp	r0, r8
   1509c:	bne	15288 <dim_enter_array@@Base+0xa8c>
   150a0:	add	r1, sp, #4
   150a4:	add	r8, sp, #8
   150a8:	mov	r0, r5
   150ac:	mov	r2, r8
   150b0:	bl	1297c <coda_cursor_get_array_dim@plt>
   150b4:	cmp	r0, #0
   150b8:	beq	150c0 <dim_enter_array@@Base+0x8c4>
   150bc:	bl	17f28 <handle_coda_error@@Base>
   150c0:	mov	r0, r4
   150c4:	ldr	r1, [r0, #804]!	; 0x324
   150c8:	ldr	r2, [sp, #4]
   150cc:	cmp	r2, r1
   150d0:	bne	15470 <dim_enter_array@@Base+0xc74>
   150d4:	ldr	r1, [r0]
   150d8:	cmp	r1, #1
   150dc:	blt	1539c <dim_enter_array@@Base+0xba0>
   150e0:	movw	r1, #53424	; 0xd0b0
   150e4:	movt	r1, #2
   150e8:	add	ip, r1, r6, lsl #2
   150ec:	add	r2, r4, #808	; 0x328
   150f0:	add	r3, r4, #844	; 0x34c
   150f4:	mov	r7, #0
   150f8:	b	15120 <dim_enter_array@@Base+0x924>
   150fc:	cmp	r5, r6
   15100:	strlt	r6, [r4, #4]
   15104:	ldr	r1, [r4, #36]	; 0x24
   15108:	cmp	r1, r6
   1510c:	strgt	r6, [r4, #36]	; 0x24
   15110:	ldr	r1, [r0]
   15114:	add	r7, r7, #1
   15118:	cmp	r7, r1
   1511c:	bge	1539c <dim_enter_array@@Base+0xba0>
   15120:	ldr	r6, [r2, r7, lsl #2]
   15124:	cmn	r6, #1
   15128:	bne	15110 <dim_enter_array@@Base+0x914>
   1512c:	ldr	r6, [r8, r7, lsl #2]
   15130:	add	r4, ip, r7, lsl #2
   15134:	ldr	r5, [r4, #108]	; 0x6c
   15138:	ldr	r1, [r3]
   1513c:	str	r6, [r5, r1, lsl #2]
   15140:	ldr	r5, [r4, #4]
   15144:	cmn	r5, #1
   15148:	bne	150fc <dim_enter_array@@Base+0x900>
   1514c:	str	r6, [r4, #4]
   15150:	str	r6, [r4, #36]	; 0x24
   15154:	b	15110 <dim_enter_array@@Base+0x914>
   15158:	ldr	r1, [r7, #3360]	; 0xd20
   1515c:	cmp	r1, r8
   15160:	bne	15450 <dim_enter_array@@Base+0xc54>
   15164:	cmp	r0, #4
   15168:	bne	151fc <dim_enter_array@@Base+0xa00>
   1516c:	add	r1, sp, #4
   15170:	mov	r0, r5
   15174:	bl	12880 <coda_cursor_get_string_length@plt>
   15178:	cmp	r0, #0
   1517c:	beq	15184 <dim_enter_array@@Base+0x988>
   15180:	bl	17f28 <handle_coda_error@@Base>
   15184:	ldr	r0, [sp, #4]
   15188:	str	r0, [sp, #8]
   1518c:	asr	r0, r0, #31
   15190:	str	r0, [sp, #12]
   15194:	b	15214 <dim_enter_array@@Base+0xa18>
   15198:	ldr	r0, [sp]
   1519c:	add	r4, r7, r0, lsl #2
   151a0:	ldr	r1, [r4, #3492]!	; 0xda4
   151a4:	add	r2, sp, #8
   151a8:	mov	r0, r5
   151ac:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   151b0:	cmp	r0, #0
   151b4:	beq	151bc <dim_enter_array@@Base+0x9c0>
   151b8:	bl	17f28 <handle_coda_error@@Base>
   151bc:	ldr	r0, [sp, #8]
   151c0:	cmp	r0, #0
   151c4:	beq	15314 <dim_enter_array@@Base+0xb18>
   151c8:	ldr	r1, [r4]
   151cc:	mov	r0, r5
   151d0:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   151d4:	cmp	r0, #0
   151d8:	beq	151e0 <dim_enter_array@@Base+0x9e4>
   151dc:	bl	17f28 <handle_coda_error@@Base>
   151e0:	add	r0, r9, #1
   151e4:	ldr	r1, [sp]
   151e8:	add	r2, r1, #1
   151ec:	mov	r1, r8
   151f0:	bl	1502c <dim_enter_array@@Base+0x830>
   151f4:	mov	r0, r5
   151f8:	b	15424 <dim_enter_array@@Base+0xc28>
   151fc:	add	r1, sp, #8
   15200:	mov	r0, r5
   15204:	bl	1261c <coda_cursor_get_byte_size@plt>
   15208:	cmp	r0, #0
   1520c:	beq	15214 <dim_enter_array@@Base+0xa18>
   15210:	bl	17f28 <handle_coda_error@@Base>
   15214:	add	r0, r8, r8, lsl #2
   15218:	add	r0, r7, r0, lsl #4
   1521c:	ldr	r1, [r0, #800]	; 0x320
   15220:	ldr	r3, [r0, #844]	; 0x34c
   15224:	movw	r0, #53424	; 0xd0b0
   15228:	movt	r0, #2
   1522c:	add	r0, r0, r1, lsl #2
   15230:	ldr	r7, [r0, #108]	; 0x6c
   15234:	ldr	r1, [sp, #8]
   15238:	ldr	r2, [sp, #12]
   1523c:	str	r1, [r7, r3, lsl #2]
   15240:	mov	r3, r0
   15244:	ldr	r7, [r3, #4]!
   15248:	cmn	r7, #1
   1524c:	beq	15274 <dim_enter_array@@Base+0xa78>
   15250:	subs	r6, r7, r1
   15254:	rscs	r7, r2, r7, asr #31
   15258:	strlt	r1, [r3]
   1525c:	ldr	r3, [r0, #36]!	; 0x24
   15260:	subs	r7, r1, r3
   15264:	sbcs	r2, r2, r3, asr #31
   15268:	strlt	r1, [r0]
   1526c:	sub	sp, fp, #28
   15270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15274:	str	r1, [r3]
   15278:	add	r0, r0, #36	; 0x24
   1527c:	str	r1, [r0]
   15280:	sub	sp, fp, #28
   15284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15288:	cmp	r8, #0
   1528c:	moveq	r0, #0
   15290:	streq	r0, [r4, #844]	; 0x34c
   15294:	ldr	r1, [r4, #840]	; 0x348
   15298:	ldr	r0, [r4, #844]	; 0x34c
   1529c:	mul	r1, r1, r0
   152a0:	str	r1, [r4, #924]!	; 0x39c
   152a4:	mov	r1, r4
   152a8:	ldr	r2, [r1, #-120]!	; 0xffffff88
   152ac:	cmp	r2, #1
   152b0:	blt	153a4 <dim_enter_array@@Base+0xba8>
   152b4:	ldr	r1, [r1]
   152b8:	add	r1, r1, r6
   152bc:	movw	r2, #53424	; 0xd0b0
   152c0:	movt	r2, #2
   152c4:	add	r2, r2, r6, lsl #2
   152c8:	add	r2, r2, #72	; 0x48
   152cc:	add	r3, r6, #27
   152d0:	mov	r6, #1
   152d4:	b	152fc <dim_enter_array@@Base+0xb00>
   152d8:	sub	r7, r2, #68	; 0x44
   152dc:	ldr	r7, [r7]
   152e0:	mul	r6, r7, r6
   152e4:	add	r2, r2, #4
   152e8:	add	r7, r3, #1
   152ec:	sub	r3, r3, #26
   152f0:	cmp	r3, r1
   152f4:	mov	r3, r7
   152f8:	bge	15394 <dim_enter_array@@Base+0xb98>
   152fc:	ldr	r7, [r2]
   15300:	cmp	r7, #0
   15304:	beq	152d8 <dim_enter_array@@Base+0xadc>
   15308:	ldr	r7, [r2, #36]	; 0x24
   1530c:	add	r7, r7, r0, lsl #2
   15310:	b	152dc <dim_enter_array@@Base+0xae0>
   15314:	ldr	r0, [r7, #3360]	; 0xd20
   15318:	add	r0, r0, r0, lsl #2
   1531c:	add	r3, r7, r0, lsl #4
   15320:	mov	r0, r3
   15324:	ldr	r1, [r0, #804]!	; 0x324
   15328:	cmp	r1, #1
   1532c:	blt	1539c <dim_enter_array@@Base+0xba0>
   15330:	ldr	r1, [r0, #-4]
   15334:	movw	r2, #53424	; 0xd0b0
   15338:	movt	r2, #2
   1533c:	add	ip, r2, r1, lsl #2
   15340:	add	r2, r3, #808	; 0x328
   15344:	add	r3, r3, #844	; 0x34c
   15348:	mov	r7, #0
   1534c:	mov	r6, #0
   15350:	b	15364 <dim_enter_array@@Base+0xb68>
   15354:	ldr	r1, [r0]
   15358:	add	r6, r6, #1
   1535c:	cmp	r6, r1
   15360:	bge	1539c <dim_enter_array@@Base+0xba0>
   15364:	ldr	r5, [r2, r6, lsl #2]
   15368:	cmn	r5, #1
   1536c:	bne	15354 <dim_enter_array@@Base+0xb58>
   15370:	add	r5, ip, r6, lsl #2
   15374:	ldr	r4, [r5, #108]	; 0x6c
   15378:	ldr	r1, [r3]
   1537c:	str	r7, [r4, r1, lsl #2]
   15380:	ldr	r1, [r5, #4]
   15384:	cmn	r1, #1
   15388:	streq	r7, [r5, #4]
   1538c:	str	r7, [r5, #36]	; 0x24
   15390:	b	15354 <dim_enter_array@@Base+0xb58>
   15394:	cmp	r6, #1
   15398:	bge	153a8 <dim_enter_array@@Base+0xbac>
   1539c:	sub	sp, fp, #28
   153a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153a4:	mov	r6, #1
   153a8:	mov	r7, r9
   153ac:	mov	sl, r5
   153b0:	mov	r0, r5
   153b4:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   153b8:	cmp	r0, #0
   153bc:	beq	153c4 <dim_enter_array@@Base+0xbc8>
   153c0:	bl	17f28 <handle_coda_error@@Base>
   153c4:	add	r5, r8, #1
   153c8:	sub	r9, r6, #1
   153cc:	add	r7, r7, #1
   153d0:	mov	r8, #0
   153d4:	b	153f0 <dim_enter_array@@Base+0xbf4>
   153d8:	ldr	r0, [r4]
   153dc:	add	r0, r0, #1
   153e0:	str	r0, [r4]
   153e4:	add	r8, r8, #1
   153e8:	cmp	r6, r8
   153ec:	beq	15420 <dim_enter_array@@Base+0xc24>
   153f0:	mov	r0, r7
   153f4:	mov	r1, r5
   153f8:	ldr	r2, [sp]
   153fc:	bl	1502c <dim_enter_array@@Base+0x830>
   15400:	cmp	r8, r9
   15404:	bge	153e4 <dim_enter_array@@Base+0xbe8>
   15408:	mov	r0, sl
   1540c:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   15410:	cmp	r0, #0
   15414:	beq	153d8 <dim_enter_array@@Base+0xbdc>
   15418:	bl	17f28 <handle_coda_error@@Base>
   1541c:	b	153d8 <dim_enter_array@@Base+0xbdc>
   15420:	mov	r0, sl
   15424:	bl	12850 <coda_cursor_goto_parent@plt>
   15428:	sub	sp, fp, #28
   1542c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15430:	movw	r0, #40674	; 0x9ee2
   15434:	movt	r0, #1
   15438:	movw	r1, #40727	; 0x9f17
   1543c:	movt	r1, #1
   15440:	movw	r3, #41028	; 0xa044
   15444:	movt	r3, #1
   15448:	movw	r2, #294	; 0x126
   1544c:	bl	12ab4 <__assert_fail@plt>
   15450:	movw	r0, #41071	; 0xa06f
   15454:	movt	r0, #1
   15458:	movw	r1, #40727	; 0x9f17
   1545c:	movt	r1, #1
   15460:	movw	r3, #41028	; 0xa044
   15464:	movt	r3, #1
   15468:	mov	r2, #252	; 0xfc
   1546c:	bl	12ab4 <__assert_fail@plt>
   15470:	movw	r0, #40995	; 0xa023
   15474:	movt	r0, #1
   15478:	movw	r1, #40727	; 0x9f17
   1547c:	movt	r1, #1
   15480:	movw	r3, #41028	; 0xa044
   15484:	movt	r3, #1
   15488:	mov	r2, #125	; 0x7d
   1548c:	bl	12ab4 <__assert_fail@plt>

00015490 <dim_leave_array@@Base>:
   15490:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15494:	add	fp, sp, #24
   15498:	movw	r0, #49640	; 0xc1e8
   1549c:	movt	r0, #2
   154a0:	ldr	r1, [r0, #3360]	; 0xd20
   154a4:	cmn	r1, #1
   154a8:	ble	155a4 <dim_leave_array@@Base+0x114>
   154ac:	add	r1, r1, r1, lsl #2
   154b0:	add	r6, r0, r1, lsl #4
   154b4:	ldr	r0, [r6, #804]!	; 0x324
   154b8:	ldr	r4, [r6, #-4]
   154bc:	movw	r8, #53424	; 0xd0b0
   154c0:	movt	r8, #2
   154c4:	ldr	r1, [r8]
   154c8:	sub	r2, r1, r0
   154cc:	str	r2, [r8]
   154d0:	cmp	r0, #1
   154d4:	blt	15514 <dim_leave_array@@Base+0x84>
   154d8:	add	r7, r8, r4, lsl #2
   154dc:	mov	r5, #0
   154e0:	b	154f4 <dim_leave_array@@Base+0x64>
   154e4:	add	r5, r5, #1
   154e8:	ldr	r0, [r6]
   154ec:	cmp	r5, r0
   154f0:	bge	15510 <dim_leave_array@@Base+0x80>
   154f4:	add	r0, r7, r5, lsl #2
   154f8:	ldr	r1, [r0, #72]	; 0x48
   154fc:	cmp	r1, #0
   15500:	beq	154e4 <dim_leave_array@@Base+0x54>
   15504:	ldr	r0, [r0, #108]	; 0x6c
   15508:	bl	126e8 <free@plt>
   1550c:	b	154e4 <dim_leave_array@@Base+0x54>
   15510:	ldr	r2, [r8]
   15514:	mvn	r1, #0
   15518:	str	r1, [r8, #104]	; 0x68
   1551c:	mov	r1, #0
   15520:	str	r1, [r8, #68]	; 0x44
   15524:	cmp	r2, #1
   15528:	blt	15554 <dim_leave_array@@Base+0xc4>
   1552c:	ldr	r2, [r8]
   15530:	mov	r3, #1
   15534:	add	r7, r8, r1, lsl #2
   15538:	ldr	r7, [r7, #72]	; 0x48
   1553c:	cmp	r7, #0
   15540:	strne	r1, [r8, #104]	; 0x68
   15544:	strne	r3, [r8, #68]	; 0x44
   15548:	add	r1, r1, #1
   1554c:	cmp	r1, r2
   15550:	blt	15534 <dim_leave_array@@Base+0xa4>
   15554:	add	r0, r4, r0
   15558:	add	r0, r8, r0, lsl #3
   1555c:	ldr	r1, [r0, #296]	; 0x128
   15560:	ldr	r0, [r0, #300]	; 0x12c
   15564:	subs	r1, r1, #1
   15568:	sbcs	r0, r0, #0
   1556c:	cmpge	r4, #1
   15570:	blt	155a0 <dim_leave_array@@Base+0x110>
   15574:	add	r0, r8, r4, lsl #3
   15578:	add	r5, r0, #168	; 0xa8
   1557c:	add	r6, r0, #176	; 0xb0
   15580:	ldrd	r0, [r5]
   15584:	ldrd	r2, [r6]
   15588:	bl	19a3c <main@@Base+0x1ad0>
   1558c:	strd	r0, [r5]
   15590:	sub	r5, r5, #8
   15594:	sub	r4, r4, #1
   15598:	cmp	r4, #0
   1559c:	bgt	15580 <dim_leave_array@@Base+0xf0>
   155a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   155a4:	movw	r0, #40942	; 0x9fee
   155a8:	movt	r0, #1
   155ac:	movw	r1, #40727	; 0x9f17
   155b0:	movt	r1, #1
   155b4:	movw	r3, #40972	; 0xa00c
   155b8:	movt	r3, #1
   155bc:	movw	r2, #579	; 0x243
   155c0:	bl	12ab4 <__assert_fail@plt>

000155c4 <dim_record_field_available@@Base>:
   155c4:	mov	r0, #0
   155c8:	mov	r1, #0
   155cc:	mov	r2, #0
   155d0:	b	155d4 <dim_record_field_available@@Base+0x10>
   155d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155d8:	add	fp, sp, #28
   155dc:	sub	sp, sp, #12
   155e0:	mov	sl, r2
   155e4:	mov	r7, r1
   155e8:	mov	r9, r0
   155ec:	movw	r8, #49640	; 0xc1e8
   155f0:	movt	r8, #2
   155f4:	add	r0, r8, #144	; 0x90
   155f8:	add	r1, sp, #8
   155fc:	str	r0, [sp]
   15600:	bl	12778 <coda_cursor_get_type_class@plt>
   15604:	cmp	r0, #0
   15608:	beq	15610 <dim_record_field_available@@Base+0x4c>
   1560c:	bl	17f28 <handle_coda_error@@Base>
   15610:	ldr	r0, [sp, #8]
   15614:	cmp	r0, #0
   15618:	beq	156cc <dim_record_field_available@@Base+0x108>
   1561c:	cmp	r0, #1
   15620:	bne	15808 <dim_record_field_available@@Base+0x244>
   15624:	ldr	r0, [r8, #3360]	; 0xd20
   15628:	cmp	r0, r7
   1562c:	ble	15828 <dim_record_field_available@@Base+0x264>
   15630:	add	r0, r7, r7, lsl #2
   15634:	add	r2, r8, r0, lsl #4
   15638:	ldr	r3, [r2, #800]	; 0x320
   1563c:	cmp	r7, #0
   15640:	moveq	r0, #0
   15644:	streq	r0, [r2, #844]	; 0x34c
   15648:	mov	r0, r2
   1564c:	ldr	r1, [r0, #804]!	; 0x324
   15650:	ldrd	r4, [r0, #36]	; 0x24
   15654:	mul	r5, r4, r5
   15658:	str	r5, [r0, #120]	; 0x78
   1565c:	cmp	r1, #1
   15660:	blt	15758 <dim_record_field_available@@Base+0x194>
   15664:	ldr	r0, [r0]
   15668:	add	r0, r0, r3
   1566c:	movw	r1, #53424	; 0xd0b0
   15670:	movt	r1, #2
   15674:	add	r1, r1, r3, lsl #2
   15678:	add	r1, r1, #72	; 0x48
   1567c:	add	r2, r2, #844	; 0x34c
   15680:	add	r3, r3, #27
   15684:	mov	r4, #1
   15688:	b	156b0 <dim_record_field_available@@Base+0xec>
   1568c:	sub	r5, r1, #68	; 0x44
   15690:	ldr	r6, [r5]
   15694:	mul	r4, r6, r4
   15698:	add	r1, r1, #4
   1569c:	add	r6, r3, #1
   156a0:	sub	r3, r3, #26
   156a4:	cmp	r3, r0
   156a8:	mov	r3, r6
   156ac:	bge	1574c <dim_record_field_available@@Base+0x188>
   156b0:	ldr	r5, [r1]
   156b4:	cmp	r5, #0
   156b8:	beq	1568c <dim_record_field_available@@Base+0xc8>
   156bc:	ldr	r5, [r2]
   156c0:	ldr	r6, [r1, #36]	; 0x24
   156c4:	add	r5, r6, r5, lsl #2
   156c8:	b	15690 <dim_record_field_available@@Base+0xcc>
   156cc:	add	r4, r8, sl, lsl #2
   156d0:	ldr	r1, [r4, #3492]!	; 0xda4
   156d4:	add	r2, sp, #4
   156d8:	ldr	r0, [sp]
   156dc:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   156e0:	cmp	r0, #0
   156e4:	beq	156ec <dim_record_field_available@@Base+0x128>
   156e8:	bl	17f28 <handle_coda_error@@Base>
   156ec:	ldr	r0, [sp, #4]
   156f0:	cmp	r0, #0
   156f4:	beq	157fc <dim_record_field_available@@Base+0x238>
   156f8:	ldr	r0, [r8, #3748]	; 0xea4
   156fc:	sub	r0, r0, #1
   15700:	cmp	r0, sl
   15704:	beq	157e8 <dim_record_field_available@@Base+0x224>
   15708:	ldr	r1, [r4]
   1570c:	ldr	r0, [sp]
   15710:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   15714:	cmp	r0, #0
   15718:	beq	15720 <dim_record_field_available@@Base+0x15c>
   1571c:	bl	17f28 <handle_coda_error@@Base>
   15720:	add	r0, r9, #1
   15724:	add	r2, sl, #1
   15728:	mov	r1, r7
   1572c:	bl	155d4 <dim_record_field_available@@Base+0x10>
   15730:	str	r0, [sp, #4]
   15734:	ldr	r0, [sp]
   15738:	bl	12850 <coda_cursor_goto_parent@plt>
   1573c:	ldr	r0, [sp, #4]
   15740:	cmp	r0, #0
   15744:	bne	157e8 <dim_record_field_available@@Base+0x224>
   15748:	b	157fc <dim_record_field_available@@Base+0x238>
   1574c:	cmp	r4, #1
   15750:	bge	1575c <dim_record_field_available@@Base+0x198>
   15754:	b	157fc <dim_record_field_available@@Base+0x238>
   15758:	mov	r4, #1
   1575c:	ldr	r0, [sp]
   15760:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   15764:	cmp	r0, #0
   15768:	beq	15770 <dim_record_field_available@@Base+0x1ac>
   1576c:	bl	17f28 <handle_coda_error@@Base>
   15770:	add	r7, r7, #1
   15774:	add	r0, r7, r7, lsl #2
   15778:	add	r0, r8, r0, lsl #4
   1577c:	add	r5, r0, #844	; 0x34c
   15780:	sub	r8, r4, #1
   15784:	add	r6, r9, #1
   15788:	mov	r9, #0
   1578c:	b	157a8 <dim_record_field_available@@Base+0x1e4>
   15790:	ldr	r0, [r5]
   15794:	add	r0, r0, #1
   15798:	str	r0, [r5]
   1579c:	add	r9, r9, #1
   157a0:	cmp	r4, r9
   157a4:	beq	157f4 <dim_record_field_available@@Base+0x230>
   157a8:	mov	r0, r6
   157ac:	mov	r1, r7
   157b0:	mov	r2, sl
   157b4:	bl	155d4 <dim_record_field_available@@Base+0x10>
   157b8:	cmp	r0, #0
   157bc:	bne	157e0 <dim_record_field_available@@Base+0x21c>
   157c0:	cmp	r9, r8
   157c4:	bge	1579c <dim_record_field_available@@Base+0x1d8>
   157c8:	ldr	r0, [sp]
   157cc:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   157d0:	cmp	r0, #0
   157d4:	beq	15790 <dim_record_field_available@@Base+0x1cc>
   157d8:	bl	17f28 <handle_coda_error@@Base>
   157dc:	b	15790 <dim_record_field_available@@Base+0x1cc>
   157e0:	ldr	r0, [sp]
   157e4:	bl	12850 <coda_cursor_goto_parent@plt>
   157e8:	mov	r0, #1
   157ec:	sub	sp, fp, #28
   157f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157f4:	ldr	r0, [sp]
   157f8:	bl	12850 <coda_cursor_goto_parent@plt>
   157fc:	mov	r0, #0
   15800:	sub	sp, fp, #28
   15804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15808:	movw	r0, #40674	; 0x9ee2
   1580c:	movt	r0, #1
   15810:	movw	r1, #40727	; 0x9f17
   15814:	movt	r1, #1
   15818:	movw	r3, #41150	; 0xa0be
   1581c:	movt	r3, #1
   15820:	movw	r2, #729	; 0x2d9
   15824:	bl	12ab4 <__assert_fail@plt>
   15828:	movw	r0, #41111	; 0xa097
   1582c:	movt	r0, #1
   15830:	movw	r1, #40727	; 0x9f17
   15834:	movt	r1, #1
   15838:	movw	r3, #41150	; 0xa0be
   1583c:	movt	r3, #1
   15840:	movw	r2, #638	; 0x27e
   15844:	bl	12ab4 <__assert_fail@plt>

00015848 <codadump_filter_create@@Base>:
   15848:	push	{fp, lr}
   1584c:	mov	fp, sp
   15850:	sub	sp, sp, #8
   15854:	mov	r1, #0
   15858:	str	r1, [sp, #4]
   1585c:	add	r1, sp, #4
   15860:	bl	15870 <codadump_filter_create@@Base+0x28>
   15864:	ldr	r0, [sp, #4]
   15868:	mov	sp, fp
   1586c:	pop	{fp, pc}
   15870:	push	{r4, r5, r6, r7, fp, lr}
   15874:	add	fp, sp, #16
   15878:	sub	sp, sp, #8
   1587c:	mov	r4, r1
   15880:	mov	r1, #0
   15884:	stm	sp, {r0, r1}
   15888:	cmp	r0, #0
   1588c:	beq	158e0 <codadump_filter_create@@Base+0x98>
   15890:	ldr	r0, [sp]
   15894:	ldrb	r1, [r0]
   15898:	cmp	r1, #0
   1589c:	beq	158e0 <codadump_filter_create@@Base+0x98>
   158a0:	add	r5, sp, #4
   158a4:	mov	r6, sp
   158a8:	mov	r7, #0
   158ac:	mov	r1, r5
   158b0:	mov	r2, r6
   158b4:	bl	15a24 <codadump_filter_get_next_filter@@Base+0x34>
   158b8:	ldr	r1, [sp, #4]
   158bc:	cmp	r1, #0
   158c0:	beq	158e8 <codadump_filter_create@@Base+0xa0>
   158c4:	mov	r0, r4
   158c8:	bl	15c80 <codadump_filter_get_next_filter@@Base+0x290>
   158cc:	str	r7, [sp, #4]
   158d0:	ldr	r0, [sp]
   158d4:	ldrb	r1, [r0]
   158d8:	cmp	r1, #0
   158dc:	bne	158ac <codadump_filter_create@@Base+0x64>
   158e0:	sub	sp, fp, #16
   158e4:	pop	{r4, r5, r6, r7, fp, pc}
   158e8:	mov	r0, r4
   158ec:	bl	158f8 <codadump_filter_remove@@Base>
   158f0:	sub	sp, fp, #16
   158f4:	pop	{r4, r5, r6, r7, fp, pc}

000158f8 <codadump_filter_remove@@Base>:
   158f8:	push	{r4, sl, fp, lr}
   158fc:	add	fp, sp, #8
   15900:	cmp	r0, #0
   15904:	beq	15968 <codadump_filter_remove@@Base+0x70>
   15908:	mov	r4, r0
   1590c:	ldr	r0, [r0]
   15910:	cmp	r0, #0
   15914:	popeq	{r4, sl, fp, pc}
   15918:	ldr	r1, [r0, #8]!
   1591c:	cmp	r1, #0
   15920:	blne	158f8 <codadump_filter_remove@@Base>
   15924:	ldr	r0, [r4]
   15928:	ldr	r1, [r0, #4]!
   1592c:	cmp	r1, #0
   15930:	blne	158f8 <codadump_filter_remove@@Base>
   15934:	ldr	r0, [r4]
   15938:	ldr	r0, [r0]
   1593c:	cmp	r0, #0
   15940:	beq	15954 <codadump_filter_remove@@Base+0x5c>
   15944:	bl	126e8 <free@plt>
   15948:	ldr	r0, [r4]
   1594c:	mov	r1, #0
   15950:	str	r1, [r0]
   15954:	ldr	r0, [r4]
   15958:	bl	126e8 <free@plt>
   1595c:	mov	r0, #0
   15960:	str	r0, [r4]
   15964:	pop	{r4, sl, fp, pc}
   15968:	movw	r0, #41203	; 0xa0f3
   1596c:	movt	r0, #1
   15970:	movw	r1, #41218	; 0xa102
   15974:	movt	r1, #1
   15978:	movw	r3, #41294	; 0xa14e
   1597c:	movt	r3, #1
   15980:	mov	r2, #192	; 0xc0
   15984:	bl	12ab4 <__assert_fail@plt>

00015988 <codadump_filter_get_fieldname@@Base>:
   15988:	push	{fp, lr}
   1598c:	mov	fp, sp
   15990:	cmp	r0, #0
   15994:	ldrne	r0, [r0]
   15998:	popne	{fp, pc}
   1599c:	movw	r0, #41203	; 0xa0f3
   159a0:	movt	r0, #1
   159a4:	movw	r1, #41218	; 0xa102
   159a8:	movt	r1, #1
   159ac:	movw	r3, #41342	; 0xa17e
   159b0:	movt	r3, #1
   159b4:	mov	r2, #216	; 0xd8
   159b8:	bl	12ab4 <__assert_fail@plt>

000159bc <codadump_filter_get_subfilter@@Base>:
   159bc:	push	{fp, lr}
   159c0:	mov	fp, sp
   159c4:	cmp	r0, #0
   159c8:	ldrne	r0, [r0, #4]
   159cc:	popne	{fp, pc}
   159d0:	movw	r0, #41203	; 0xa0f3
   159d4:	movt	r0, #1
   159d8:	movw	r1, #41218	; 0xa102
   159dc:	movt	r1, #1
   159e0:	movw	r3, #41403	; 0xa1bb
   159e4:	movt	r3, #1
   159e8:	mov	r2, #223	; 0xdf
   159ec:	bl	12ab4 <__assert_fail@plt>

000159f0 <codadump_filter_get_next_filter@@Base>:
   159f0:	push	{fp, lr}
   159f4:	mov	fp, sp
   159f8:	cmp	r0, #0
   159fc:	ldrne	r0, [r0, #8]
   15a00:	popne	{fp, pc}
   15a04:	movw	r0, #41203	; 0xa0f3
   15a08:	movt	r0, #1
   15a0c:	movw	r1, #41218	; 0xa102
   15a10:	movt	r1, #1
   15a14:	movw	r3, #41469	; 0xa1fd
   15a18:	movt	r3, #1
   15a1c:	mov	r2, #230	; 0xe6
   15a20:	bl	12ab4 <__assert_fail@plt>
   15a24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15a28:	add	fp, sp, #24
   15a2c:	sub	sp, sp, #8
   15a30:	cmp	r0, #0
   15a34:	beq	15c20 <codadump_filter_get_next_filter@@Base+0x230>
   15a38:	mov	r4, r1
   15a3c:	cmp	r1, #0
   15a40:	beq	15c40 <codadump_filter_get_next_filter@@Base+0x250>
   15a44:	mov	r8, r2
   15a48:	cmp	r2, #0
   15a4c:	beq	15c60 <codadump_filter_get_next_filter@@Base+0x270>
   15a50:	mov	r6, r0
   15a54:	mov	r0, #1
   15a58:	movw	r5, #3
   15a5c:	movt	r5, #128	; 0x80
   15a60:	ldrb	r1, [r6]
   15a64:	sub	r1, r1, #9
   15a68:	cmp	r1, #23
   15a6c:	bhi	15a80 <codadump_filter_get_next_filter@@Base+0x90>
   15a70:	tst	r5, r0, lsl r1
   15a74:	beq	15a80 <codadump_filter_get_next_filter@@Base+0x90>
   15a78:	add	r6, r6, #1
   15a7c:	b	15a60 <codadump_filter_get_next_filter@@Base+0x70>
   15a80:	mov	r7, #0
   15a84:	mov	r0, #1
   15a88:	movw	r1, #32773	; 0x8005
   15a8c:	ldrb	r2, [r6, r7]
   15a90:	sub	r3, r2, #44	; 0x2c
   15a94:	cmp	r3, #15
   15a98:	bhi	15aa4 <codadump_filter_get_next_filter@@Base+0xb4>
   15a9c:	tst	r1, r0, lsl r3
   15aa0:	bne	15ab4 <codadump_filter_get_next_filter@@Base+0xc4>
   15aa4:	cmp	r2, #0
   15aa8:	beq	15ab4 <codadump_filter_get_next_filter@@Base+0xc4>
   15aac:	add	r7, r7, #1
   15ab0:	b	15a8c <codadump_filter_get_next_filter@@Base+0x9c>
   15ab4:	cmp	r7, #0
   15ab8:	beq	15bc8 <codadump_filter_get_next_filter@@Base+0x1d8>
   15abc:	mov	r0, #12
   15ac0:	bl	12820 <malloc@plt>
   15ac4:	str	r0, [r4]
   15ac8:	cmp	r0, #0
   15acc:	bne	15af8 <codadump_filter_get_next_filter@@Base+0x108>
   15ad0:	mov	r0, #69	; 0x45
   15ad4:	str	r0, [sp]
   15ad8:	movw	r1, #40129	; 0x9cc1
   15adc:	movt	r1, #1
   15ae0:	movw	r3, #41218	; 0xa102
   15ae4:	movt	r3, #1
   15ae8:	mvn	r0, #0
   15aec:	mov	r2, #12
   15af0:	bl	126a0 <coda_set_error@plt>
   15af4:	bl	17f28 <handle_coda_error@@Base>
   15af8:	add	r9, r7, #1
   15afc:	mov	r0, r9
   15b00:	bl	12820 <malloc@plt>
   15b04:	ldr	r1, [r4]
   15b08:	str	r0, [r1]
   15b0c:	ldr	r0, [r4]
   15b10:	ldr	r0, [r0]
   15b14:	cmp	r0, #0
   15b18:	bne	15b44 <codadump_filter_get_next_filter@@Base+0x154>
   15b1c:	mov	r0, #76	; 0x4c
   15b20:	str	r0, [sp]
   15b24:	movw	r1, #41634	; 0xa2a2
   15b28:	movt	r1, #1
   15b2c:	movw	r3, #41218	; 0xa102
   15b30:	movt	r3, #1
   15b34:	mvn	r0, #0
   15b38:	mov	r2, r9
   15b3c:	bl	126a0 <coda_set_error@plt>
   15b40:	bl	17f28 <handle_coda_error@@Base>
   15b44:	add	r9, r6, r7
   15b48:	ldr	r0, [r4]
   15b4c:	ldr	r0, [r0]
   15b50:	mov	r1, r6
   15b54:	mov	r2, r7
   15b58:	bl	1291c <strncpy@plt>
   15b5c:	ldr	r0, [r4]
   15b60:	mov	r1, #0
   15b64:	str	r1, [r0, #4]
   15b68:	ldr	r0, [r4]
   15b6c:	str	r1, [r0, #8]
   15b70:	ldr	r0, [r4]
   15b74:	ldr	r0, [r0]
   15b78:	add	r0, r0, r7
   15b7c:	mov	r1, #1
   15b80:	ldrb	r2, [r0, #-1]
   15b84:	sub	r2, r2, #9
   15b88:	cmp	r2, #23
   15b8c:	bhi	15ba0 <codadump_filter_get_next_filter@@Base+0x1b0>
   15b90:	tst	r5, r1, lsl r2
   15b94:	beq	15ba0 <codadump_filter_get_next_filter@@Base+0x1b0>
   15b98:	sub	r0, r0, #1
   15b9c:	b	15b80 <codadump_filter_get_next_filter@@Base+0x190>
   15ba0:	mov	r1, #0
   15ba4:	strb	r1, [r0]
   15ba8:	ldrb	r0, [r9]
   15bac:	cmp	r0, #44	; 0x2c
   15bb0:	cmpne	r0, #59	; 0x3b
   15bb4:	bne	15bd8 <codadump_filter_get_next_filter@@Base+0x1e8>
   15bb8:	add	r0, r9, #1
   15bbc:	str	r0, [r8]
   15bc0:	sub	sp, fp, #24
   15bc4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15bc8:	mov	r0, #0
   15bcc:	str	r0, [r4]
   15bd0:	sub	sp, fp, #24
   15bd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15bd8:	cmp	r0, #46	; 0x2e
   15bdc:	bne	15c14 <codadump_filter_get_next_filter@@Base+0x224>
   15be0:	add	r0, r9, #1
   15be4:	ldr	r1, [r4]
   15be8:	add	r1, r1, #4
   15bec:	mov	r2, r8
   15bf0:	bl	15a24 <codadump_filter_get_next_filter@@Base+0x34>
   15bf4:	ldr	r0, [r4]
   15bf8:	ldr	r0, [r0, #4]
   15bfc:	cmp	r0, #0
   15c00:	bne	15bd0 <codadump_filter_get_next_filter@@Base+0x1e0>
   15c04:	mov	r0, r4
   15c08:	sub	sp, fp, #24
   15c0c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   15c10:	b	158f8 <codadump_filter_remove@@Base>
   15c14:	str	r9, [r8]
   15c18:	sub	sp, fp, #24
   15c1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15c20:	movw	r0, #41537	; 0xa241
   15c24:	movt	r0, #1
   15c28:	movw	r1, #41218	; 0xa102
   15c2c:	movt	r1, #1
   15c30:	movw	r3, #41557	; 0xa255
   15c34:	movt	r3, #1
   15c38:	mov	r2, #44	; 0x2c
   15c3c:	bl	12ab4 <__assert_fail@plt>
   15c40:	movw	r0, #41203	; 0xa0f3
   15c44:	movt	r0, #1
   15c48:	movw	r1, #41218	; 0xa102
   15c4c:	movt	r1, #1
   15c50:	movw	r3, #41557	; 0xa255
   15c54:	movt	r3, #1
   15c58:	mov	r2, #45	; 0x2d
   15c5c:	bl	12ab4 <__assert_fail@plt>
   15c60:	movw	r0, #41621	; 0xa295
   15c64:	movt	r0, #1
   15c68:	movw	r1, #41218	; 0xa102
   15c6c:	movt	r1, #1
   15c70:	movw	r3, #41557	; 0xa255
   15c74:	movt	r3, #1
   15c78:	mov	r2, #46	; 0x2e
   15c7c:	bl	12ab4 <__assert_fail@plt>
   15c80:	push	{r4, r5, fp, lr}
   15c84:	add	fp, sp, #8
   15c88:	sub	sp, sp, #8
   15c8c:	str	r1, [sp, #4]
   15c90:	cmp	r0, #0
   15c94:	beq	15d40 <codadump_filter_get_next_filter@@Base+0x350>
   15c98:	mov	r4, r1
   15c9c:	cmp	r1, #0
   15ca0:	beq	15d24 <codadump_filter_get_next_filter@@Base+0x334>
   15ca4:	ldr	r5, [r0]
   15ca8:	cmp	r5, #0
   15cac:	beq	15ce4 <codadump_filter_get_next_filter@@Base+0x2f4>
   15cb0:	ldr	r1, [r4]
   15cb4:	ldr	r0, [r5]
   15cb8:	bl	12664 <strcmp@plt>
   15cbc:	cmp	r0, #0
   15cc0:	beq	15cf0 <codadump_filter_get_next_filter@@Base+0x300>
   15cc4:	ldr	r0, [r5, #8]!
   15cc8:	cmp	r0, #0
   15ccc:	beq	15d20 <codadump_filter_get_next_filter@@Base+0x330>
   15cd0:	mov	r0, r5
   15cd4:	mov	r1, r4
   15cd8:	sub	sp, fp, #8
   15cdc:	pop	{r4, r5, fp, lr}
   15ce0:	b	15c80 <codadump_filter_get_next_filter@@Base+0x290>
   15ce4:	str	r4, [r0]
   15ce8:	sub	sp, fp, #8
   15cec:	pop	{r4, r5, fp, pc}
   15cf0:	ldr	r0, [r5, #4]!
   15cf4:	cmp	r0, #0
   15cf8:	beq	15d30 <codadump_filter_get_next_filter@@Base+0x340>
   15cfc:	ldr	r1, [r4, #4]
   15d00:	mov	r0, r5
   15d04:	cmp	r1, #0
   15d08:	beq	15d2c <codadump_filter_get_next_filter@@Base+0x33c>
   15d0c:	bl	15c80 <codadump_filter_get_next_filter@@Base+0x290>
   15d10:	ldr	r0, [sp, #4]
   15d14:	mov	r1, #0
   15d18:	str	r1, [r0, #4]
   15d1c:	b	15d30 <codadump_filter_get_next_filter@@Base+0x340>
   15d20:	str	r4, [r5]
   15d24:	sub	sp, fp, #8
   15d28:	pop	{r4, r5, fp, pc}
   15d2c:	bl	158f8 <codadump_filter_remove@@Base>
   15d30:	add	r0, sp, #4
   15d34:	bl	158f8 <codadump_filter_remove@@Base>
   15d38:	sub	sp, fp, #8
   15d3c:	pop	{r4, r5, fp, pc}
   15d40:	movw	r0, #41203	; 0xa0f3
   15d44:	movt	r0, #1
   15d48:	movw	r1, #41218	; 0xa102
   15d4c:	movt	r1, #1
   15d50:	movw	r3, #41686	; 0xa2d6
   15d54:	movt	r3, #1
   15d58:	mov	r2, #117	; 0x75
   15d5c:	bl	12ab4 <__assert_fail@plt>

00015d60 <print_json_data@@Base>:
   15d60:	push	{r4, sl, fp, lr}
   15d64:	add	fp, sp, #8
   15d68:	sub	sp, sp, #528	; 0x210
   15d6c:	movw	r1, #49604	; 0xc1c4
   15d70:	movt	r1, #2
   15d74:	str	r0, [r1]
   15d78:	movw	r4, #49640	; 0xc1e8
   15d7c:	movt	r4, #2
   15d80:	ldr	r0, [r4]
   15d84:	sub	r1, fp, #12
   15d88:	bl	126ac <coda_open@plt>
   15d8c:	cmp	r0, #0
   15d90:	beq	15dd0 <print_json_data@@Base+0x70>
   15d94:	bl	12a60 <coda_get_errno@plt>
   15d98:	ldr	r0, [r0]
   15d9c:	cmn	r0, #21
   15da0:	bne	15dcc <print_json_data@@Base+0x6c>
   15da4:	mov	r0, #0
   15da8:	bl	126f4 <coda_set_option_use_mmap@plt>
   15dac:	ldr	r0, [r4]
   15db0:	sub	r1, fp, #12
   15db4:	bl	126ac <coda_open@plt>
   15db8:	mov	r4, r0
   15dbc:	mov	r0, #1
   15dc0:	bl	126f4 <coda_set_option_use_mmap@plt>
   15dc4:	cmp	r4, #0
   15dc8:	beq	15dd0 <print_json_data@@Base+0x70>
   15dcc:	bl	17f28 <handle_coda_error@@Base>
   15dd0:	ldr	r1, [fp, #-12]
   15dd4:	mov	r0, sp
   15dd8:	bl	127d8 <coda_cursor_set_product@plt>
   15ddc:	cmp	r0, #0
   15de0:	beq	15de8 <print_json_data@@Base+0x88>
   15de4:	bl	17f28 <handle_coda_error@@Base>
   15de8:	movw	r0, #53416	; 0xd0a8
   15dec:	movt	r0, #2
   15df0:	ldr	r1, [r0]
   15df4:	cmp	r1, #0
   15df8:	beq	15e10 <print_json_data@@Base+0xb0>
   15dfc:	mov	r0, sp
   15e00:	bl	129b8 <coda_cursor_goto@plt>
   15e04:	cmp	r0, #0
   15e08:	beq	15e10 <print_json_data@@Base+0xb0>
   15e0c:	bl	17f28 <handle_coda_error@@Base>
   15e10:	mov	r0, #0
   15e14:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   15e18:	mov	r0, sp
   15e1c:	bl	15e3c <print_json_data@@Base+0xdc>
   15e20:	movw	r0, #42550	; 0xa636
   15e24:	movt	r0, #1
   15e28:	bl	16634 <print_json_data@@Base+0x8d4>
   15e2c:	ldr	r0, [fp, #-12]
   15e30:	bl	12994 <coda_close@plt>
   15e34:	sub	sp, fp, #8
   15e38:	pop	{r4, sl, fp, pc}
   15e3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15e40:	add	fp, sp, #24
   15e44:	sub	sp, sp, #72	; 0x48
   15e48:	mov	r4, r0
   15e4c:	mov	r0, #0
   15e50:	str	r0, [fp, #-32]	; 0xffffffe0
   15e54:	movw	r0, #49604	; 0xc1c4
   15e58:	movt	r0, #2
   15e5c:	ldr	r0, [r0]
   15e60:	cmp	r0, #0
   15e64:	beq	15ec8 <print_json_data@@Base+0x168>
   15e68:	sub	r1, fp, #32
   15e6c:	mov	r0, r4
   15e70:	bl	1276c <coda_cursor_has_attributes@plt>
   15e74:	cmp	r0, #0
   15e78:	beq	15e80 <print_json_data@@Base+0x120>
   15e7c:	bl	17f28 <handle_coda_error@@Base>
   15e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e84:	cmp	r0, #0
   15e88:	beq	15ec8 <print_json_data@@Base+0x168>
   15e8c:	movw	r0, #41741	; 0xa30d
   15e90:	movt	r0, #1
   15e94:	bl	16634 <print_json_data@@Base+0x8d4>
   15e98:	mov	r0, r4
   15e9c:	bl	128ec <coda_cursor_goto_attributes@plt>
   15ea0:	cmp	r0, #0
   15ea4:	beq	15eac <print_json_data@@Base+0x14c>
   15ea8:	bl	17f28 <handle_coda_error@@Base>
   15eac:	mov	r0, r4
   15eb0:	bl	15e3c <print_json_data@@Base+0xdc>
   15eb4:	mov	r0, r4
   15eb8:	bl	12850 <coda_cursor_goto_parent@plt>
   15ebc:	movw	r0, #41750	; 0xa316
   15ec0:	movt	r0, #1
   15ec4:	bl	16634 <print_json_data@@Base+0x8d4>
   15ec8:	sub	r1, fp, #28
   15ecc:	mov	r0, r4
   15ed0:	bl	12778 <coda_cursor_get_type_class@plt>
   15ed4:	cmp	r0, #0
   15ed8:	beq	15ee0 <print_json_data@@Base+0x180>
   15edc:	bl	17f28 <handle_coda_error@@Base>
   15ee0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15ee4:	cmp	r0, #6
   15ee8:	bhi	165d8 <print_json_data@@Base+0x878>
   15eec:	add	r1, pc, #0
   15ef0:	ldr	pc, [r1, r0, lsl #2]
   15ef4:	andeq	r5, r1, r4, lsr #31
   15ef8:	andeq	r6, r1, r8, ror r0
   15efc:	andeq	r5, r1, r0, lsl pc
   15f00:	andeq	r5, r1, r0, lsl pc
   15f04:	andeq	r5, r1, r0, lsl pc
   15f08:	andeq	r5, r1, r0, lsl pc
   15f0c:	andeq	r6, r1, r4, lsr r1
   15f10:	sub	r1, fp, #36	; 0x24
   15f14:	mov	r0, r4
   15f18:	bl	12814 <coda_cursor_get_read_type@plt>
   15f1c:	cmp	r0, #0
   15f20:	beq	15f28 <print_json_data@@Base+0x1c8>
   15f24:	bl	17f28 <handle_coda_error@@Base>
   15f28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f2c:	add	r0, r0, #1
   15f30:	cmp	r0, #13
   15f34:	bhi	165d8 <print_json_data@@Base+0x878>
   15f38:	add	r1, pc, #0
   15f3c:	ldr	pc, [r1, r0, lsl #2]
   15f40:	andeq	r6, r1, r0, ror r1
   15f44:	andeq	r5, r1, r8, ror pc
   15f48:	andeq	r6, r1, r0, lsl #3
   15f4c:	andeq	r5, r1, r8, ror pc
   15f50:	andeq	r6, r1, r0, lsl #3
   15f54:	andeq	r5, r1, r8, ror pc
   15f58:	andeq	r6, r1, r0, lsl #3
   15f5c:	andeq	r6, r1, r4, lsl #4
   15f60:	andeq	r6, r1, r4, lsr r2
   15f64:	andeq	r6, r1, ip, lsr #3
   15f68:	andeq	r6, r1, ip, lsr #3
   15f6c:	andeq	r6, r1, r4, ror r2
   15f70:			; <UNDEFINED> instruction: 0x000162b4
   15f74:	andeq	r6, r1, r4, ror #6
   15f78:	add	r1, sp, #16
   15f7c:	mov	r0, r4
   15f80:	bl	12a3c <coda_cursor_read_int32@plt>
   15f84:	cmp	r0, #0
   15f88:	beq	15f90 <print_json_data@@Base+0x230>
   15f8c:	bl	17f28 <handle_coda_error@@Base>
   15f90:	ldr	r1, [sp, #16]
   15f94:	movw	r0, #41936	; 0xa3d0
   15f98:	movt	r0, #1
   15f9c:	bl	16634 <print_json_data@@Base+0x8d4>
   15fa0:	b	165d8 <print_json_data@@Base+0x878>
   15fa4:	movw	r0, #41759	; 0xa31f
   15fa8:	movt	r0, #1
   15fac:	bl	16634 <print_json_data@@Base+0x8d4>
   15fb0:	add	r1, sp, #16
   15fb4:	mov	r0, r4
   15fb8:	bl	126d0 <coda_cursor_get_num_elements@plt>
   15fbc:	cmp	r0, #0
   15fc0:	beq	15fc8 <print_json_data@@Base+0x268>
   15fc4:	bl	17f28 <handle_coda_error@@Base>
   15fc8:	ldr	r0, [sp, #16]
   15fcc:	cmp	r0, #1
   15fd0:	blt	16524 <print_json_data@@Base+0x7c4>
   15fd4:	add	r1, sp, #8
   15fd8:	mov	r0, r4
   15fdc:	bl	12730 <coda_cursor_get_type@plt>
   15fe0:	cmp	r0, #0
   15fe4:	beq	15fec <print_json_data@@Base+0x28c>
   15fe8:	bl	17f28 <handle_coda_error@@Base>
   15fec:	ldr	r0, [sp, #8]
   15ff0:	sub	r1, fp, #36	; 0x24
   15ff4:	bl	12934 <coda_type_get_record_union_status@plt>
   15ff8:	cmp	r0, #0
   15ffc:	beq	16004 <print_json_data@@Base+0x2a4>
   16000:	bl	17f28 <handle_coda_error@@Base>
   16004:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16008:	cmp	r0, #0
   1600c:	beq	1642c <print_json_data@@Base+0x6cc>
   16010:	sub	r1, fp, #40	; 0x28
   16014:	mov	r0, r4
   16018:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   1601c:	cmp	r0, #0
   16020:	beq	16028 <print_json_data@@Base+0x2c8>
   16024:	bl	17f28 <handle_coda_error@@Base>
   16028:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1602c:	ldr	r0, [sp, #8]
   16030:	sub	r2, fp, #44	; 0x2c
   16034:	bl	12a78 <coda_type_get_record_field_name@plt>
   16038:	cmp	r0, #0
   1603c:	beq	16044 <print_json_data@@Base+0x2e4>
   16040:	bl	17f28 <handle_coda_error@@Base>
   16044:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16048:	mov	r0, r4
   1604c:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   16050:	cmp	r0, #0
   16054:	beq	1605c <print_json_data@@Base+0x2fc>
   16058:	bl	17f28 <handle_coda_error@@Base>
   1605c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16060:	movw	r0, #41761	; 0xa321
   16064:	movt	r0, #1
   16068:	bl	16634 <print_json_data@@Base+0x8d4>
   1606c:	mov	r0, r4
   16070:	bl	15e3c <print_json_data@@Base+0xdc>
   16074:	b	1651c <print_json_data@@Base+0x7bc>
   16078:	movw	r0, #41930	; 0xa3ca
   1607c:	movt	r0, #1
   16080:	bl	16634 <print_json_data@@Base+0x8d4>
   16084:	add	r1, sp, #8
   16088:	add	r5, sp, #16
   1608c:	mov	r0, r4
   16090:	mov	r2, r5
   16094:	bl	1297c <coda_cursor_get_array_dim@plt>
   16098:	cmp	r0, #0
   1609c:	beq	160a4 <print_json_data@@Base+0x344>
   160a0:	bl	17f28 <handle_coda_error@@Base>
   160a4:	ldr	r0, [sp, #8]
   160a8:	cmp	r0, #0
   160ac:	bmi	161f4 <print_json_data@@Base+0x494>
   160b0:	mov	r6, #1
   160b4:	beq	160d0 <print_json_data@@Base+0x370>
   160b8:	ldr	r1, [r5], #4
   160bc:	mul	r6, r1, r6
   160c0:	subs	r0, r0, #1
   160c4:	bne	160b8 <print_json_data@@Base+0x358>
   160c8:	cmp	r6, #1
   160cc:	blt	161f4 <print_json_data@@Base+0x494>
   160d0:	mov	r0, r4
   160d4:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   160d8:	cmp	r0, #0
   160dc:	beq	160e4 <print_json_data@@Base+0x384>
   160e0:	bl	17f28 <handle_coda_error@@Base>
   160e4:	sub	r7, r6, #1
   160e8:	mov	r5, #0
   160ec:	movw	r8, #40848	; 0x9f90
   160f0:	movt	r8, #1
   160f4:	b	16104 <print_json_data@@Base+0x3a4>
   160f8:	add	r5, r5, #1
   160fc:	cmp	r6, r5
   16100:	beq	161ec <print_json_data@@Base+0x48c>
   16104:	mov	r0, r4
   16108:	bl	15e3c <print_json_data@@Base+0xdc>
   1610c:	cmp	r5, r7
   16110:	bge	160f8 <print_json_data@@Base+0x398>
   16114:	mov	r0, r8
   16118:	bl	16634 <print_json_data@@Base+0x8d4>
   1611c:	mov	r0, r4
   16120:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   16124:	cmp	r0, #0
   16128:	beq	160f8 <print_json_data@@Base+0x398>
   1612c:	bl	17f28 <handle_coda_error@@Base>
   16130:	b	160f8 <print_json_data@@Base+0x398>
   16134:	sub	r1, fp, #36	; 0x24
   16138:	mov	r0, r4
   1613c:	bl	127b4 <coda_cursor_get_special_type@plt>
   16140:	cmp	r0, #0
   16144:	beq	1614c <print_json_data@@Base+0x3ec>
   16148:	bl	17f28 <handle_coda_error@@Base>
   1614c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16150:	cmp	r0, #3
   16154:	bhi	165d8 <print_json_data@@Base+0x878>
   16158:	add	r1, pc, #0
   1615c:	ldr	pc, [r1, r0, lsl #2]
   16160:	andeq	r6, r1, r0, ror r1
   16164:	andeq	r6, r1, r4, lsr r5
   16168:	andeq	r6, r1, r4, asr r5
   1616c:	andeq	r6, r1, r0, lsr #11
   16170:	movw	r0, #41843	; 0xa373
   16174:	movt	r0, #1
   16178:	bl	16634 <print_json_data@@Base+0x8d4>
   1617c:	b	165d8 <print_json_data@@Base+0x878>
   16180:	add	r1, sp, #16
   16184:	mov	r0, r4
   16188:	bl	1270c <coda_cursor_read_uint32@plt>
   1618c:	cmp	r0, #0
   16190:	beq	16198 <print_json_data@@Base+0x438>
   16194:	bl	17f28 <handle_coda_error@@Base>
   16198:	ldr	r1, [sp, #16]
   1619c:	movw	r0, #40287	; 0x9d5f
   161a0:	movt	r0, #1
   161a4:	bl	16634 <print_json_data@@Base+0x8d4>
   161a8:	b	165d8 <print_json_data@@Base+0x878>
   161ac:	add	r1, sp, #16
   161b0:	mov	r0, r4
   161b4:	bl	12898 <coda_cursor_read_double@plt>
   161b8:	cmp	r0, #0
   161bc:	beq	161c4 <print_json_data@@Base+0x464>
   161c0:	bl	17f28 <handle_coda_error@@Base>
   161c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   161c8:	movw	r2, #40291	; 0x9d63
   161cc:	movt	r2, #1
   161d0:	movw	r0, #40296	; 0x9d68
   161d4:	movt	r0, #1
   161d8:	vldr	d16, [sp, #16]
   161dc:	cmp	r1, #8
   161e0:	moveq	r0, r2
   161e4:	vmov	r2, r3, d16
   161e8:	b	165d4 <print_json_data@@Base+0x874>
   161ec:	mov	r0, r4
   161f0:	bl	12850 <coda_cursor_goto_parent@plt>
   161f4:	movw	r0, #42168	; 0xa4b8
   161f8:	movt	r0, #1
   161fc:	bl	16634 <print_json_data@@Base+0x8d4>
   16200:	b	165d8 <print_json_data@@Base+0x878>
   16204:	add	r1, sp, #8
   16208:	mov	r0, r4
   1620c:	bl	129a0 <coda_cursor_read_int64@plt>
   16210:	cmp	r0, #0
   16214:	beq	1621c <print_json_data@@Base+0x4bc>
   16218:	bl	17f28 <handle_coda_error@@Base>
   1621c:	ldr	r0, [sp, #8]
   16220:	ldr	r1, [sp, #12]
   16224:	add	r4, sp, #16
   16228:	mov	r2, r4
   1622c:	bl	12aa8 <coda_str64@plt>
   16230:	b	16260 <print_json_data@@Base+0x500>
   16234:	add	r1, sp, #8
   16238:	mov	r0, r4
   1623c:	bl	1288c <coda_cursor_read_uint64@plt>
   16240:	cmp	r0, #0
   16244:	beq	1624c <print_json_data@@Base+0x4ec>
   16248:	bl	17f28 <handle_coda_error@@Base>
   1624c:	ldr	r0, [sp, #8]
   16250:	ldr	r1, [sp, #12]
   16254:	add	r4, sp, #16
   16258:	mov	r2, r4
   1625c:	bl	126dc <coda_str64u@plt>
   16260:	movw	r0, #42105	; 0xa479
   16264:	movt	r0, #1
   16268:	mov	r1, r4
   1626c:	bl	16634 <print_json_data@@Base+0x8d4>
   16270:	b	165d8 <print_json_data@@Base+0x878>
   16274:	add	r1, sp, #16
   16278:	mov	r0, r4
   1627c:	bl	128f8 <coda_cursor_read_char@plt>
   16280:	cmp	r0, #0
   16284:	beq	1628c <print_json_data@@Base+0x52c>
   16288:	bl	17f28 <handle_coda_error@@Base>
   1628c:	movw	r4, #41916	; 0xa3bc
   16290:	movt	r4, #1
   16294:	mov	r0, r4
   16298:	bl	16634 <print_json_data@@Base+0x8d4>
   1629c:	add	r0, sp, #16
   162a0:	mov	r1, #1
   162a4:	bl	1667c <print_json_data@@Base+0x91c>
   162a8:	mov	r0, r4
   162ac:	bl	16634 <print_json_data@@Base+0x8d4>
   162b0:	b	165d8 <print_json_data@@Base+0x878>
   162b4:	add	r1, sp, #16
   162b8:	mov	r0, r4
   162bc:	bl	12880 <coda_cursor_get_string_length@plt>
   162c0:	cmp	r0, #0
   162c4:	beq	162cc <print_json_data@@Base+0x56c>
   162c8:	bl	17f28 <handle_coda_error@@Base>
   162cc:	ldr	r0, [sp, #16]
   162d0:	add	r6, r0, #1
   162d4:	mov	r0, r6
   162d8:	bl	12820 <malloc@plt>
   162dc:	mov	r5, r0
   162e0:	cmp	r0, #0
   162e4:	bne	16310 <print_json_data@@Base+0x5b0>
   162e8:	movw	r0, #303	; 0x12f
   162ec:	str	r0, [sp]
   162f0:	movw	r1, #40129	; 0x9cc1
   162f4:	movt	r1, #1
   162f8:	movw	r3, #41769	; 0xa329
   162fc:	movt	r3, #1
   16300:	mvn	r0, #0
   16304:	mov	r2, r6
   16308:	bl	126a0 <coda_set_error@plt>
   1630c:	bl	17f28 <handle_coda_error@@Base>
   16310:	ldr	r0, [sp, #16]
   16314:	add	r2, r0, #1
   16318:	mov	r0, r4
   1631c:	mov	r1, r5
   16320:	bl	12844 <coda_cursor_read_string@plt>
   16324:	cmp	r0, #0
   16328:	beq	16330 <print_json_data@@Base+0x5d0>
   1632c:	bl	17f28 <handle_coda_error@@Base>
   16330:	movw	r4, #41916	; 0xa3bc
   16334:	movt	r4, #1
   16338:	mov	r0, r4
   1633c:	bl	16634 <print_json_data@@Base+0x8d4>
   16340:	ldr	r1, [sp, #16]
   16344:	mov	r0, r5
   16348:	bl	1667c <print_json_data@@Base+0x91c>
   1634c:	ldr	r1, [sp, #16]
   16350:	mov	r0, r4
   16354:	bl	16634 <print_json_data@@Base+0x8d4>
   16358:	mov	r0, r5
   1635c:	bl	126e8 <free@plt>
   16360:	b	165d8 <print_json_data@@Base+0x878>
   16364:	add	r1, sp, #16
   16368:	mov	r0, r4
   1636c:	bl	12a00 <coda_cursor_get_bit_size@plt>
   16370:	cmp	r0, #0
   16374:	beq	1637c <print_json_data@@Base+0x61c>
   16378:	bl	17f28 <handle_coda_error@@Base>
   1637c:	ldr	r0, [sp, #16]
   16380:	ldr	r1, [sp, #20]
   16384:	lsr	r2, r0, #3
   16388:	orr	r5, r2, r1, lsl #29
   1638c:	tst	r0, #7
   16390:	addne	r5, r5, #1
   16394:	mov	r0, r5
   16398:	bl	12820 <malloc@plt>
   1639c:	mov	r6, r0
   163a0:	cmp	r0, #0
   163a4:	bne	163d0 <print_json_data@@Base+0x670>
   163a8:	movw	r0, #334	; 0x14e
   163ac:	str	r0, [sp]
   163b0:	movw	r1, #40129	; 0x9cc1
   163b4:	movt	r1, #1
   163b8:	movw	r3, #41769	; 0xa329
   163bc:	movt	r3, #1
   163c0:	mvn	r0, #0
   163c4:	mov	r2, r5
   163c8:	bl	126a0 <coda_set_error@plt>
   163cc:	bl	17f28 <handle_coda_error@@Base>
   163d0:	ldr	r0, [sp, #16]
   163d4:	ldr	r1, [sp, #20]
   163d8:	stm	sp, {r0, r1}
   163dc:	mov	r0, r4
   163e0:	mov	r1, r6
   163e4:	mov	r2, #0
   163e8:	mov	r3, #0
   163ec:	bl	12a9c <coda_cursor_read_bits@plt>
   163f0:	cmp	r0, #0
   163f4:	beq	163fc <print_json_data@@Base+0x69c>
   163f8:	bl	17f28 <handle_coda_error@@Base>
   163fc:	movw	r4, #41916	; 0xa3bc
   16400:	movt	r4, #1
   16404:	mov	r0, r4
   16408:	bl	16634 <print_json_data@@Base+0x8d4>
   1640c:	mov	r0, r6
   16410:	mov	r1, r5
   16414:	bl	1667c <print_json_data@@Base+0x91c>
   16418:	mov	r0, r4
   1641c:	bl	16634 <print_json_data@@Base+0x8d4>
   16420:	mov	r0, r6
   16424:	bl	126e8 <free@plt>
   16428:	b	165d8 <print_json_data@@Base+0x878>
   1642c:	mov	r0, r4
   16430:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   16434:	cmp	r0, #0
   16438:	beq	16440 <print_json_data@@Base+0x6e0>
   1643c:	bl	17f28 <handle_coda_error@@Base>
   16440:	mov	r1, #0
   16444:	str	r1, [fp, #-40]	; 0xffffffd8
   16448:	ldr	r0, [sp, #16]
   1644c:	cmp	r0, #1
   16450:	blt	1651c <print_json_data@@Base+0x7bc>
   16454:	mov	r7, #1
   16458:	add	r5, sp, #48	; 0x30
   1645c:	movw	r8, #40848	; 0x9f90
   16460:	movt	r8, #1
   16464:	sub	r9, fp, #44	; 0x2c
   16468:	movw	r6, #41761	; 0xa321
   1646c:	movt	r6, #1
   16470:	b	1648c <print_json_data@@Base+0x72c>
   16474:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16478:	add	r1, r0, #1
   1647c:	str	r1, [fp, #-40]	; 0xffffffd8
   16480:	ldr	r0, [sp, #16]
   16484:	cmp	r1, r0
   16488:	bge	1651c <print_json_data@@Base+0x7bc>
   1648c:	ldr	r0, [sp, #8]
   16490:	mov	r2, r5
   16494:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   16498:	cmp	r0, #0
   1649c:	beq	164a4 <print_json_data@@Base+0x744>
   164a0:	bl	17f28 <handle_coda_error@@Base>
   164a4:	ldr	r0, [sp, #48]	; 0x30
   164a8:	cmp	r0, #0
   164ac:	bne	164f0 <print_json_data@@Base+0x790>
   164b0:	cmp	r7, #0
   164b4:	moveq	r0, r8
   164b8:	bleq	16634 <print_json_data@@Base+0x8d4>
   164bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   164c0:	ldr	r0, [sp, #8]
   164c4:	mov	r2, r9
   164c8:	bl	12a78 <coda_type_get_record_field_name@plt>
   164cc:	cmp	r0, #0
   164d0:	beq	164d8 <print_json_data@@Base+0x778>
   164d4:	bl	17f28 <handle_coda_error@@Base>
   164d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   164dc:	mov	r0, r6
   164e0:	bl	16634 <print_json_data@@Base+0x8d4>
   164e4:	mov	r0, r4
   164e8:	bl	15e3c <print_json_data@@Base+0xdc>
   164ec:	mov	r7, #0
   164f0:	ldr	r0, [sp, #16]
   164f4:	sub	r0, r0, #1
   164f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   164fc:	cmp	r1, r0
   16500:	bge	16474 <print_json_data@@Base+0x714>
   16504:	mov	r0, r4
   16508:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   1650c:	cmp	r0, #0
   16510:	beq	16474 <print_json_data@@Base+0x714>
   16514:	bl	17f28 <handle_coda_error@@Base>
   16518:	b	16474 <print_json_data@@Base+0x714>
   1651c:	mov	r0, r4
   16520:	bl	12850 <coda_cursor_goto_parent@plt>
   16524:	movw	r0, #41767	; 0xa327
   16528:	movt	r0, #1
   1652c:	bl	16634 <print_json_data@@Base+0x8d4>
   16530:	b	165d8 <print_json_data@@Base+0x878>
   16534:	add	r1, sp, #16
   16538:	mov	r0, r4
   1653c:	bl	12898 <coda_cursor_read_double@plt>
   16540:	cmp	r0, #0
   16544:	beq	1654c <print_json_data@@Base+0x7ec>
   16548:	bl	17f28 <handle_coda_error@@Base>
   1654c:	vldr	d16, [sp, #16]
   16550:	b	16590 <print_json_data@@Base+0x830>
   16554:	add	r1, sp, #8
   16558:	mov	r0, r4
   1655c:	bl	12898 <coda_cursor_read_double@plt>
   16560:	cmp	r0, #0
   16564:	beq	1656c <print_json_data@@Base+0x80c>
   16568:	bl	17f28 <handle_coda_error@@Base>
   1656c:	vldr	d0, [sp, #8]
   16570:	bl	128a4 <coda_isNaN@plt>
   16574:	cmp	r0, #0
   16578:	bne	1658c <print_json_data@@Base+0x82c>
   1657c:	vldr	d0, [sp, #8]
   16580:	bl	12748 <coda_isInf@plt>
   16584:	cmp	r0, #0
   16588:	beq	165f4 <print_json_data@@Base+0x894>
   1658c:	vldr	d16, [sp, #8]
   16590:	vmov	r2, r3, d16
   16594:	movw	r0, #40296	; 0x9d68
   16598:	movt	r0, #1
   1659c:	b	165d4 <print_json_data@@Base+0x874>
   165a0:	add	r1, sp, #16
   165a4:	add	r2, sp, #8
   165a8:	mov	r0, r4
   165ac:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   165b0:	cmp	r0, #0
   165b4:	beq	165bc <print_json_data@@Base+0x85c>
   165b8:	bl	17f28 <handle_coda_error@@Base>
   165bc:	vldr	d16, [sp, #16]
   165c0:	vldr	d17, [sp, #8]
   165c4:	vstr	d17, [sp]
   165c8:	vmov	r2, r3, d16
   165cc:	movw	r0, #41904	; 0xa3b0
   165d0:	movt	r0, #1
   165d4:	bl	16634 <print_json_data@@Base+0x8d4>
   165d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   165dc:	cmp	r0, #0
   165e0:	movwne	r0, #41767	; 0xa327
   165e4:	movtne	r0, #1
   165e8:	blne	16634 <print_json_data@@Base+0x8d4>
   165ec:	sub	sp, fp, #24
   165f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   165f4:	vldr	d0, [sp, #8]
   165f8:	movw	r0, #41848	; 0xa378
   165fc:	movt	r0, #1
   16600:	add	r1, sp, #16
   16604:	bl	126c4 <coda_time_double_to_string@plt>
   16608:	cmp	r0, #0
   1660c:	beq	16620 <print_json_data@@Base+0x8c0>
   16610:	movw	r0, #41877	; 0xa395
   16614:	movt	r0, #1
   16618:	bl	16634 <print_json_data@@Base+0x8d4>
   1661c:	b	165d8 <print_json_data@@Base+0x878>
   16620:	movw	r0, #42171	; 0xa4bb
   16624:	movt	r0, #1
   16628:	add	r1, sp, #16
   1662c:	bl	16634 <print_json_data@@Base+0x8d4>
   16630:	b	165d8 <print_json_data@@Base+0x878>
   16634:	sub	sp, sp, #12
   16638:	push	{fp, lr}
   1663c:	mov	fp, sp
   16640:	sub	sp, sp, #4
   16644:	mov	ip, r0
   16648:	add	r0, fp, #8
   1664c:	stm	r0, {r1, r2, r3}
   16650:	add	r2, fp, #8
   16654:	str	r2, [sp]
   16658:	movw	r0, #53392	; 0xd090
   1665c:	movt	r0, #2
   16660:	ldr	r0, [r0]
   16664:	mov	r1, ip
   16668:	bl	129ac <vfprintf@plt>
   1666c:	mov	sp, fp
   16670:	pop	{fp, lr}
   16674:	add	sp, sp, #12
   16678:	bx	lr
   1667c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16680:	add	fp, sp, #28
   16684:	sub	sp, sp, #4
   16688:	cmp	r1, #1
   1668c:	blt	167c8 <print_json_data@@Base+0xa68>
   16690:	mov	r4, r1
   16694:	mov	r5, r0
   16698:	movw	r6, #40263	; 0x9d47
   1669c:	movt	r6, #1
   166a0:	movw	r8, #40266	; 0x9d4a
   166a4:	movt	r8, #1
   166a8:	movw	r9, #40272	; 0x9d50
   166ac:	movt	r9, #1
   166b0:	movw	sl, #40275	; 0x9d53
   166b4:	movt	sl, #1
   166b8:	movw	r7, #41915	; 0xa3bb
   166bc:	movt	r7, #1
   166c0:	b	166d8 <print_json_data@@Base+0x978>
   166c4:	mov	r0, r7
   166c8:	bl	16634 <print_json_data@@Base+0x8d4>
   166cc:	add	r5, r5, #1
   166d0:	subs	r4, r4, #1
   166d4:	beq	167c8 <print_json_data@@Base+0xa68>
   166d8:	ldrb	r1, [r5]
   166dc:	sub	r0, r1, #8
   166e0:	cmp	r0, #26
   166e4:	bhi	16768 <print_json_data@@Base+0xa08>
   166e8:	add	r2, pc, #0
   166ec:	ldr	pc, [r2, r0, lsl #2]
   166f0:	andeq	r6, r1, ip, asr r7
   166f4:	muleq	r1, r8, r7
   166f8:	andeq	r6, r1, r0, lsr #15
   166fc:	andeq	r6, r1, ip, ror r7
   16700:	andeq	r6, r1, r8, lsr #15
   16704:			; <UNDEFINED> instruction: 0x000167b0
   16708:	andeq	r6, r1, ip, ror r7
   1670c:	andeq	r6, r1, ip, ror r7
   16710:	andeq	r6, r1, ip, ror r7
   16714:	andeq	r6, r1, ip, ror r7
   16718:	andeq	r6, r1, ip, ror r7
   1671c:	andeq	r6, r1, ip, ror r7
   16720:	andeq	r6, r1, ip, ror r7
   16724:	andeq	r6, r1, ip, ror r7
   16728:	andeq	r6, r1, ip, ror r7
   1672c:	andeq	r6, r1, ip, ror r7
   16730:	andeq	r6, r1, ip, ror r7
   16734:	andeq	r6, r1, ip, ror r7
   16738:	andeq	r6, r1, ip, ror r7
   1673c:	andeq	r6, r1, ip, ror r7
   16740:	andeq	r6, r1, ip, ror r7
   16744:	andeq	r6, r1, ip, ror r7
   16748:	andeq	r6, r1, ip, ror r7
   1674c:	andeq	r6, r1, ip, ror r7
   16750:	andeq	r6, r1, ip, ror r7
   16754:	andeq	r6, r1, ip, ror r7
   16758:	andeq	r6, r1, r4, asr #13
   1675c:	movw	r0, #40260	; 0x9d44
   16760:	movt	r0, #1
   16764:	b	166c8 <print_json_data@@Base+0x968>
   16768:	cmp	r1, #92	; 0x5c
   1676c:	bne	1677c <print_json_data@@Base+0xa1c>
   16770:	movw	r0, #40278	; 0x9d56
   16774:	movt	r0, #1
   16778:	b	166c8 <print_json_data@@Base+0x968>
   1677c:	sub	r0, r1, #32
   16780:	uxtb	r0, r0
   16784:	cmp	r0, #94	; 0x5e
   16788:	bhi	167b8 <print_json_data@@Base+0xa58>
   1678c:	movw	r0, #40697	; 0x9ef9
   16790:	movt	r0, #1
   16794:	b	167c0 <print_json_data@@Base+0xa60>
   16798:	mov	r0, r6
   1679c:	b	166c8 <print_json_data@@Base+0x968>
   167a0:	mov	r0, r8
   167a4:	b	166c8 <print_json_data@@Base+0x968>
   167a8:	mov	r0, r9
   167ac:	b	166c8 <print_json_data@@Base+0x968>
   167b0:	mov	r0, sl
   167b4:	b	166c8 <print_json_data@@Base+0x968>
   167b8:	movw	r0, #41918	; 0xa3be
   167bc:	movt	r0, #1
   167c0:	bl	16634 <print_json_data@@Base+0x8d4>
   167c4:	b	166cc <print_json_data@@Base+0x96c>
   167c8:	sub	sp, fp, #28
   167cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000167d0 <print_full_field_name@@Base>:
   167d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167d4:	add	fp, sp, #28
   167d8:	sub	sp, sp, #12
   167dc:	mov	sl, r2
   167e0:	mov	r4, r0
   167e4:	cmp	r1, #1
   167e8:	bne	168d0 <print_full_field_name@@Base+0x100>
   167ec:	str	sl, [sp]
   167f0:	movw	r5, #49640	; 0xc1e8
   167f4:	movt	r5, #2
   167f8:	ldr	r0, [r5, #136]	; 0x88
   167fc:	mov	r6, #0
   16800:	cmp	r0, #1
   16804:	blt	1692c <print_full_field_name@@Base+0x15c>
   16808:	add	sl, sp, #8
   1680c:	movw	r9, #41925	; 0xa3c5
   16810:	movt	r9, #1
   16814:	mov	r7, #0
   16818:	mov	r8, #0
   1681c:	b	16834 <print_full_field_name@@Base+0x64>
   16820:	add	r6, r6, #1
   16824:	add	r8, r8, #1
   16828:	ldr	r0, [r5, #136]	; 0x88
   1682c:	cmp	r8, r0
   16830:	bge	1692c <print_full_field_name@@Base+0x15c>
   16834:	add	r0, r5, r8, lsl #2
   16838:	ldr	r0, [r0, #8]
   1683c:	mov	r1, sl
   16840:	bl	12ac0 <coda_type_get_class@plt>
   16844:	cmp	r0, #0
   16848:	beq	16850 <print_full_field_name@@Base+0x80>
   1684c:	bl	17f28 <handle_coda_error@@Base>
   16850:	ldr	r0, [sp, #8]
   16854:	cmp	r0, #1
   16858:	beq	16880 <print_full_field_name@@Base+0xb0>
   1685c:	cmp	r0, #0
   16860:	bne	16824 <print_full_field_name@@Base+0x54>
   16864:	add	r0, r5, r7, lsl #2
   16868:	ldr	r2, [r0, #3620]	; 0xe24
   1686c:	mov	r0, r4
   16870:	mov	r1, r9
   16874:	bl	128b0 <fprintf@plt>
   16878:	add	r7, r7, #1
   1687c:	b	16824 <print_full_field_name@@Base+0x54>
   16880:	cmp	r8, #0
   16884:	bne	16894 <print_full_field_name@@Base+0xc4>
   16888:	mov	r0, #47	; 0x2f
   1688c:	mov	r1, r4
   16890:	bl	129e8 <fputc@plt>
   16894:	add	r0, r6, r6, lsl #2
   16898:	add	r0, r5, r0, lsl #4
   1689c:	ldr	r0, [r0, #804]	; 0x324
   168a0:	cmp	r0, #1
   168a4:	blt	16820 <print_full_field_name@@Base+0x50>
   168a8:	mov	r0, #91	; 0x5b
   168ac:	mov	r1, r4
   168b0:	bl	129e8 <fputc@plt>
   168b4:	mov	r0, r4
   168b8:	mov	r1, r6
   168bc:	bl	16a94 <print_full_field_name@@Base+0x2c4>
   168c0:	mov	r0, #93	; 0x5d
   168c4:	mov	r1, r4
   168c8:	bl	129e8 <fputc@plt>
   168cc:	b	16820 <print_full_field_name@@Base+0x50>
   168d0:	mov	r5, r1
   168d4:	movw	r7, #49640	; 0xc1e8
   168d8:	movt	r7, #2
   168dc:	ldr	r0, [r7, #3748]	; 0xea4
   168e0:	cmp	r0, #1
   168e4:	blt	16960 <print_full_field_name@@Base+0x190>
   168e8:	mov	r6, #0
   168ec:	cmp	r6, #0
   168f0:	bne	1691c <print_full_field_name@@Base+0x14c>
   168f4:	add	r0, r7, r6, lsl #2
   168f8:	ldr	r0, [r0, #3620]	; 0xe24
   168fc:	mov	r1, r4
   16900:	bl	12a84 <fputs@plt>
   16904:	add	r6, r6, #1
   16908:	ldr	r0, [r7, #3748]	; 0xea4
   1690c:	cmp	r6, r0
   16910:	bge	16960 <print_full_field_name@@Base+0x190>
   16914:	cmp	r6, #0
   16918:	beq	168f4 <print_full_field_name@@Base+0x124>
   1691c:	mov	r0, #46	; 0x2e
   16920:	mov	r1, r4
   16924:	bl	129e8 <fputc@plt>
   16928:	b	168f4 <print_full_field_name@@Base+0x124>
   1692c:	ldr	r0, [sp]
   16930:	cmp	r0, #0
   16934:	beq	16a8c <print_full_field_name@@Base+0x2bc>
   16938:	ldr	r0, [r5, #3360]	; 0xd20
   1693c:	cmp	r6, r0
   16940:	bge	16a8c <print_full_field_name@@Base+0x2bc>
   16944:	mov	r0, #91	; 0x5b
   16948:	mov	r1, r4
   1694c:	bl	129e8 <fputc@plt>
   16950:	mov	r0, r4
   16954:	mov	r1, r6
   16958:	bl	16a94 <print_full_field_name@@Base+0x2c4>
   1695c:	b	16a80 <print_full_field_name@@Base+0x2b0>
   16960:	cmp	r5, #2
   16964:	bne	16a8c <print_full_field_name@@Base+0x2bc>
   16968:	ldr	r0, [r7, #136]	; 0x88
   1696c:	mov	r6, #0
   16970:	cmp	r0, #1
   16974:	blt	16a18 <print_full_field_name@@Base+0x248>
   16978:	add	r8, sp, #4
   1697c:	movw	r9, #41929	; 0xa3c9
   16980:	movt	r9, #1
   16984:	mov	r5, #0
   16988:	b	169c0 <print_full_field_name@@Base+0x1f0>
   1698c:	mov	r0, r9
   16990:	mov	r1, #2
   16994:	mov	r2, #1
   16998:	mov	r3, r4
   1699c:	bl	127cc <fwrite@plt>
   169a0:	mov	r0, r4
   169a4:	mov	r1, r6
   169a8:	bl	16a94 <print_full_field_name@@Base+0x2c4>
   169ac:	add	r6, r6, #1
   169b0:	add	r5, r5, #1
   169b4:	ldr	r0, [r7, #136]	; 0x88
   169b8:	cmp	r5, r0
   169bc:	bge	16a18 <print_full_field_name@@Base+0x248>
   169c0:	add	r0, r7, r5, lsl #2
   169c4:	ldr	r0, [r0, #8]
   169c8:	mov	r1, r8
   169cc:	bl	12ac0 <coda_type_get_class@plt>
   169d0:	cmp	r0, #0
   169d4:	beq	169dc <print_full_field_name@@Base+0x20c>
   169d8:	bl	17f28 <handle_coda_error@@Base>
   169dc:	ldr	r0, [sp, #4]
   169e0:	cmp	r0, #1
   169e4:	bne	169b0 <print_full_field_name@@Base+0x1e0>
   169e8:	add	r0, r6, r6, lsl #2
   169ec:	add	r0, r7, r0, lsl #4
   169f0:	ldr	r1, [r0, #804]	; 0x324
   169f4:	cmp	r1, #1
   169f8:	blt	169b0 <print_full_field_name@@Base+0x1e0>
   169fc:	ldr	r0, [r0, #800]	; 0x320
   16a00:	cmp	r0, #0
   16a04:	beq	1698c <print_full_field_name@@Base+0x1bc>
   16a08:	mov	r0, #44	; 0x2c
   16a0c:	mov	r1, r4
   16a10:	bl	129e8 <fputc@plt>
   16a14:	b	169a0 <print_full_field_name@@Base+0x1d0>
   16a18:	cmp	sl, #0
   16a1c:	beq	16a78 <print_full_field_name@@Base+0x2a8>
   16a20:	ldr	r0, [r7, #3360]	; 0xd20
   16a24:	cmp	r6, r0
   16a28:	bge	16a78 <print_full_field_name@@Base+0x2a8>
   16a2c:	add	r0, r6, r6, lsl #2
   16a30:	add	r0, r7, r0, lsl #4
   16a34:	ldr	r0, [r0, #800]	; 0x320
   16a38:	cmp	r0, #0
   16a3c:	beq	16a50 <print_full_field_name@@Base+0x280>
   16a40:	mov	r0, #44	; 0x2c
   16a44:	mov	r1, r4
   16a48:	bl	129e8 <fputc@plt>
   16a4c:	b	16a68 <print_full_field_name@@Base+0x298>
   16a50:	movw	r0, #41929	; 0xa3c9
   16a54:	movt	r0, #1
   16a58:	mov	r1, #2
   16a5c:	mov	r2, #1
   16a60:	mov	r3, r4
   16a64:	bl	127cc <fwrite@plt>
   16a68:	mov	r0, r4
   16a6c:	mov	r1, r6
   16a70:	bl	16a94 <print_full_field_name@@Base+0x2c4>
   16a74:	add	r6, r6, #1
   16a78:	cmp	r6, #1
   16a7c:	blt	16a8c <print_full_field_name@@Base+0x2bc>
   16a80:	mov	r0, #93	; 0x5d
   16a84:	mov	r1, r4
   16a88:	bl	129e8 <fputc@plt>
   16a8c:	sub	sp, fp, #28
   16a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a98:	add	fp, sp, #28
   16a9c:	sub	sp, sp, #4
   16aa0:	mov	r4, r0
   16aa4:	add	r0, r1, r1, lsl #2
   16aa8:	movw	r1, #49640	; 0xc1e8
   16aac:	movt	r1, #2
   16ab0:	add	r0, r1, r0, lsl #4
   16ab4:	mov	r7, r0
   16ab8:	ldr	r1, [r7, #804]!	; 0x324
   16abc:	cmp	r1, #1
   16ac0:	blt	16b80 <print_full_field_name@@Base+0x3b0>
   16ac4:	add	sl, r0, #808	; 0x328
   16ac8:	add	r5, r0, #800	; 0x320
   16acc:	mov	r6, #0
   16ad0:	movw	r8, #49636	; 0xc1e4
   16ad4:	movt	r8, #2
   16ad8:	movw	r9, #53424	; 0xd0b0
   16adc:	movt	r9, #2
   16ae0:	cmp	r6, #0
   16ae4:	bne	16b18 <print_full_field_name@@Base+0x348>
   16ae8:	b	16b24 <print_full_field_name@@Base+0x354>
   16aec:	ldr	r2, [r0, #4]
   16af0:	mov	r0, r4
   16af4:	movw	r1, #41936	; 0xa3d0
   16af8:	movt	r1, #1
   16afc:	bl	128b0 <fprintf@plt>
   16b00:	ldr	r0, [r7]
   16b04:	add	r6, r6, #1
   16b08:	cmp	r6, r0
   16b0c:	bge	16b80 <print_full_field_name@@Base+0x3b0>
   16b10:	cmp	r6, #0
   16b14:	beq	16b24 <print_full_field_name@@Base+0x354>
   16b18:	mov	r0, #44	; 0x2c
   16b1c:	mov	r1, r4
   16b20:	bl	129e8 <fputc@plt>
   16b24:	ldr	r0, [r8]
   16b28:	cmp	r0, #0
   16b2c:	beq	16b64 <print_full_field_name@@Base+0x394>
   16b30:	ldr	r0, [r5]
   16b34:	add	r0, r6, r0
   16b38:	add	r0, r9, r0, lsl #2
   16b3c:	ldr	r1, [r0, #72]	; 0x48
   16b40:	cmp	r1, #0
   16b44:	beq	16aec <print_full_field_name@@Base+0x31c>
   16b48:	ldr	r3, [r0, #4]
   16b4c:	ldr	r2, [r0, #36]	; 0x24
   16b50:	mov	r0, r4
   16b54:	movw	r1, #41932	; 0xa3cc
   16b58:	movt	r1, #1
   16b5c:	bl	128b0 <fprintf@plt>
   16b60:	b	16b00 <print_full_field_name@@Base+0x330>
   16b64:	ldr	r2, [sl, r6, lsl #2]
   16b68:	cmn	r2, #1
   16b6c:	bne	16af0 <print_full_field_name@@Base+0x320>
   16b70:	mov	r0, #63	; 0x3f
   16b74:	mov	r1, r4
   16b78:	bl	129e8 <fputc@plt>
   16b7c:	b	16b00 <print_full_field_name@@Base+0x330>
   16b80:	sub	sp, fp, #28
   16b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016b88 <traverse_info_init@@Base>:
   16b88:	movw	r0, #49640	; 0xc1e8
   16b8c:	movt	r0, #2
   16b90:	mov	r1, #0
   16b94:	str	r1, [r0, #3748]	; 0xea4
   16b98:	str	r1, [r0, #3360]	; 0xd20
   16b9c:	str	r1, [r0, #136]	; 0x88
   16ba0:	str	r1, [r0, #4]
   16ba4:	bx	lr

00016ba8 <traverse_info_done@@Base>:
   16ba8:	push	{r4, sl, fp, lr}
   16bac:	add	fp, sp, #8
   16bb0:	movw	r4, #49640	; 0xc1e8
   16bb4:	movt	r4, #2
   16bb8:	ldr	r0, [r4, #4]
   16bbc:	cmp	r0, #0
   16bc0:	beq	16bc8 <traverse_info_done@@Base+0x20>
   16bc4:	bl	12994 <coda_close@plt>
   16bc8:	ldr	r0, [r4, #664]	; 0x298
   16bcc:	cmp	r0, #0
   16bd0:	popeq	{r4, sl, fp, pc}
   16bd4:	add	r0, r4, #664	; 0x298
   16bd8:	pop	{r4, sl, fp, lr}
   16bdc:	b	158f8 <codadump_filter_remove@@Base>

00016be0 <traverse_product@@Base>:
   16be0:	push	{r4, r5, fp, lr}
   16be4:	add	fp, sp, #8
   16be8:	movw	r5, #49640	; 0xc1e8
   16bec:	movt	r5, #2
   16bf0:	mov	r1, r5
   16bf4:	ldr	r0, [r1], #4
   16bf8:	bl	126ac <coda_open@plt>
   16bfc:	cmp	r0, #0
   16c00:	beq	16c40 <traverse_product@@Base+0x60>
   16c04:	bl	12a60 <coda_get_errno@plt>
   16c08:	ldr	r0, [r0]
   16c0c:	cmn	r0, #21
   16c10:	bne	16c3c <traverse_product@@Base+0x5c>
   16c14:	mov	r0, #0
   16c18:	bl	126f4 <coda_set_option_use_mmap@plt>
   16c1c:	mov	r1, r5
   16c20:	ldr	r0, [r1], #4
   16c24:	bl	126ac <coda_open@plt>
   16c28:	mov	r4, r0
   16c2c:	mov	r0, #1
   16c30:	bl	126f4 <coda_set_option_use_mmap@plt>
   16c34:	cmp	r4, #0
   16c38:	beq	16c40 <traverse_product@@Base+0x60>
   16c3c:	bl	17f28 <handle_coda_error@@Base>
   16c40:	ldr	r1, [r5, #4]
   16c44:	add	r4, r5, #144	; 0x90
   16c48:	mov	r0, r4
   16c4c:	bl	127d8 <coda_cursor_set_product@plt>
   16c50:	cmp	r0, #0
   16c54:	beq	16c5c <traverse_product@@Base+0x7c>
   16c58:	bl	17f28 <handle_coda_error@@Base>
   16c5c:	ldr	r0, [r5, #136]	; 0x88
   16c60:	add	r0, r5, r0, lsl #2
   16c64:	add	r1, r0, #8
   16c68:	mov	r0, r4
   16c6c:	bl	12730 <coda_cursor_get_type@plt>
   16c70:	cmp	r0, #0
   16c74:	beq	16c7c <traverse_product@@Base+0x9c>
   16c78:	bl	17f28 <handle_coda_error@@Base>
   16c7c:	bl	16c94 <traverse_product@@Base+0xb4>
   16c80:	ldr	r0, [r5, #4]
   16c84:	bl	12994 <coda_close@plt>
   16c88:	mov	r0, #0
   16c8c:	str	r0, [r5, #4]
   16c90:	pop	{r4, r5, fp, pc}
   16c94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16c98:	add	fp, sp, #24
   16c9c:	sub	sp, sp, #16
   16ca0:	movw	r6, #49640	; 0xc1e8
   16ca4:	movt	r6, #2
   16ca8:	ldr	r0, [r6, #136]	; 0x88
   16cac:	add	r0, r6, r0, lsl #2
   16cb0:	ldr	r0, [r0, #8]
   16cb4:	add	r1, sp, #12
   16cb8:	bl	12ac0 <coda_type_get_class@plt>
   16cbc:	cmp	r0, #0
   16cc0:	beq	16cc8 <traverse_product@@Base+0xe8>
   16cc4:	bl	17f28 <handle_coda_error@@Base>
   16cc8:	ldr	r0, [sp, #12]
   16ccc:	cmp	r0, #6
   16cd0:	bhi	16f34 <traverse_product@@Base+0x354>
   16cd4:	add	r1, pc, #0
   16cd8:	ldr	pc, [r1, r0, lsl #2]
   16cdc:	andeq	r6, r1, r4, asr sp
   16ce0:	andeq	r6, r1, r8, ror #28
   16ce4:	strdeq	r6, [r1], -r8
   16ce8:	strdeq	r6, [r1], -r8
   16cec:	strdeq	r6, [r1], -r8
   16cf0:	strdeq	r6, [r1], -r8
   16cf4:	andeq	r6, r1, r0, asr #29
   16cf8:	ldr	r0, [r6, #136]	; 0x88
   16cfc:	add	r0, r6, r0, lsl #2
   16d00:	ldr	r0, [r0, #8]
   16d04:	add	r1, sp, #8
   16d08:	bl	12874 <coda_type_get_read_type@plt>
   16d0c:	cmp	r0, #0
   16d10:	beq	16d18 <traverse_product@@Base+0x138>
   16d14:	bl	17f28 <handle_coda_error@@Base>
   16d18:	ldr	r0, [sp, #8]
   16d1c:	sub	r0, r0, #11
   16d20:	cmp	r0, #1
   16d24:	bhi	16f30 <traverse_product@@Base+0x350>
   16d28:	bl	147fc <dim_enter_array@@Base>
   16d2c:	ldr	r0, [r6, #3360]	; 0xd20
   16d30:	add	r0, r0, #1
   16d34:	str	r0, [r6, #3360]	; 0xd20
   16d38:	bl	170f8 <traverse_product@@Base+0x518>
   16d3c:	ldr	r0, [r6, #3360]	; 0xd20
   16d40:	sub	r0, r0, #1
   16d44:	str	r0, [r6, #3360]	; 0xd20
   16d48:	bl	15490 <dim_leave_array@@Base>
   16d4c:	sub	sp, fp, #24
   16d50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16d54:	ldr	r0, [r6, #136]	; 0x88
   16d58:	cmp	r0, #30
   16d5c:	bgt	16f34 <traverse_product@@Base+0x354>
   16d60:	ldr	r1, [r6, #3748]	; 0xea4
   16d64:	add	r1, r1, #1
   16d68:	str	r1, [r6, #3748]	; 0xea4
   16d6c:	add	r0, r6, r0, lsl #2
   16d70:	ldr	r0, [r0, #8]
   16d74:	add	r1, sp, #8
   16d78:	bl	1285c <coda_type_get_num_record_fields@plt>
   16d7c:	cmp	r0, #0
   16d80:	beq	16d88 <traverse_product@@Base+0x1a8>
   16d84:	bl	17f28 <handle_coda_error@@Base>
   16d88:	ldr	r0, [r6, #136]	; 0x88
   16d8c:	add	r0, r0, #1
   16d90:	str	r0, [r6, #136]	; 0x88
   16d94:	ldr	r0, [r6, #796]	; 0x31c
   16d98:	add	r0, r6, r0, lsl #2
   16d9c:	ldr	r8, [r0, #664]	; 0x298
   16da0:	cmp	r8, #0
   16da4:	beq	16f44 <traverse_product@@Base+0x364>
   16da8:	ldr	r0, [r6, #796]	; 0x31c
   16dac:	add	r1, r6, r0, lsl #2
   16db0:	ldr	r0, [r1, #664]!	; 0x298
   16db4:	cmp	r0, #0
   16db8:	beq	16f3c <traverse_product@@Base+0x35c>
   16dbc:	add	r4, sp, #4
   16dc0:	add	r7, r6, #664	; 0x298
   16dc4:	b	16e20 <traverse_product@@Base+0x240>
   16dc8:	ldr	r0, [r6, #796]	; 0x31c
   16dcc:	ldr	r0, [r7, r0, lsl #2]
   16dd0:	bl	159bc <codadump_filter_get_subfilter@@Base>
   16dd4:	ldr	r1, [r6, #796]	; 0x31c
   16dd8:	add	r1, r1, #1
   16ddc:	str	r0, [r7, r1, lsl #2]
   16de0:	str	r1, [r6, #796]	; 0x31c
   16de4:	ldr	r0, [sp, #4]
   16de8:	mov	r1, #1
   16dec:	bl	16fdc <traverse_product@@Base+0x3fc>
   16df0:	ldr	r0, [r6, #796]	; 0x31c
   16df4:	sub	r0, r0, #1
   16df8:	str	r0, [r6, #796]	; 0x31c
   16dfc:	ldr	r0, [r7, r0, lsl #2]
   16e00:	bl	159f0 <codadump_filter_get_next_filter@@Base>
   16e04:	ldr	r1, [r6, #796]	; 0x31c
   16e08:	str	r0, [r7, r1, lsl #2]
   16e0c:	ldr	r0, [r6, #796]	; 0x31c
   16e10:	mov	r1, r7
   16e14:	ldr	r0, [r1, r0, lsl #2]!
   16e18:	cmp	r0, #0
   16e1c:	beq	16f3c <traverse_product@@Base+0x35c>
   16e20:	bl	15988 <codadump_filter_get_fieldname@@Base>
   16e24:	cmp	r0, #0
   16e28:	beq	16f98 <traverse_product@@Base+0x3b8>
   16e2c:	mov	r5, r0
   16e30:	ldr	r0, [r6, #136]	; 0x88
   16e34:	add	r0, r6, r0, lsl #2
   16e38:	ldr	r0, [r0, #4]
   16e3c:	mov	r1, r5
   16e40:	mov	r2, r4
   16e44:	bl	129c4 <coda_type_get_record_field_index_from_name@plt>
   16e48:	cmp	r0, #0
   16e4c:	beq	16dc8 <traverse_product@@Base+0x1e8>
   16e50:	bl	12a60 <coda_get_errno@plt>
   16e54:	ldr	r0, [r0]
   16e58:	cmn	r0, #102	; 0x66
   16e5c:	beq	16fb8 <traverse_product@@Base+0x3d8>
   16e60:	bl	17f28 <handle_coda_error@@Base>
   16e64:	b	16dc8 <traverse_product@@Base+0x1e8>
   16e68:	ldr	r0, [r6, #136]	; 0x88
   16e6c:	cmp	r0, #30
   16e70:	bgt	16f34 <traverse_product@@Base+0x354>
   16e74:	bl	147fc <dim_enter_array@@Base>
   16e78:	ldr	r0, [r6, #3360]	; 0xd20
   16e7c:	add	r0, r0, #1
   16e80:	str	r0, [r6, #3360]	; 0xd20
   16e84:	ldr	r0, [r6, #136]	; 0x88
   16e88:	add	r1, r0, #1
   16e8c:	str	r1, [r6, #136]	; 0x88
   16e90:	add	r2, r6, #8
   16e94:	ldr	r0, [r2, r0, lsl #2]
   16e98:	add	r1, r2, r1, lsl #2
   16e9c:	bl	1294c <coda_type_get_array_base_type@plt>
   16ea0:	cmp	r0, #0
   16ea4:	beq	16eac <traverse_product@@Base+0x2cc>
   16ea8:	bl	17f28 <handle_coda_error@@Base>
   16eac:	bl	16c94 <traverse_product@@Base+0xb4>
   16eb0:	ldr	r0, [r6, #136]	; 0x88
   16eb4:	sub	r0, r0, #1
   16eb8:	str	r0, [r6, #136]	; 0x88
   16ebc:	b	16d3c <traverse_product@@Base+0x15c>
   16ec0:	bl	1264c <coda_get_option_bypass_special_types@plt>
   16ec4:	mov	r2, r0
   16ec8:	ldr	r0, [r6, #136]	; 0x88
   16ecc:	add	r1, r6, r0, lsl #2
   16ed0:	ldr	r0, [r1, #8]!
   16ed4:	cmp	r2, #0
   16ed8:	beq	16ef8 <traverse_product@@Base+0x318>
   16edc:	bl	12a6c <coda_type_get_special_base_type@plt>
   16ee0:	cmp	r0, #0
   16ee4:	beq	16eec <traverse_product@@Base+0x30c>
   16ee8:	bl	17f28 <handle_coda_error@@Base>
   16eec:	bl	16c94 <traverse_product@@Base+0xb4>
   16ef0:	sub	sp, fp, #24
   16ef4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ef8:	add	r1, sp, #8
   16efc:	bl	12928 <coda_type_get_special_type@plt>
   16f00:	cmp	r0, #0
   16f04:	beq	16f0c <traverse_product@@Base+0x32c>
   16f08:	bl	17f28 <handle_coda_error@@Base>
   16f0c:	ldr	r0, [sp, #8]
   16f10:	sub	r1, r0, #1
   16f14:	cmp	r1, #2
   16f18:	bcc	16f30 <traverse_product@@Base+0x350>
   16f1c:	cmp	r0, #0
   16f20:	beq	16f34 <traverse_product@@Base+0x354>
   16f24:	cmp	r0, #3
   16f28:	beq	16d28 <traverse_product@@Base+0x148>
   16f2c:	b	16f34 <traverse_product@@Base+0x354>
   16f30:	bl	170f8 <traverse_product@@Base+0x518>
   16f34:	sub	sp, fp, #24
   16f38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f3c:	str	r8, [r1]
   16f40:	b	16f78 <traverse_product@@Base+0x398>
   16f44:	mov	r0, #0
   16f48:	str	r0, [sp, #4]
   16f4c:	ldr	r1, [sp, #8]
   16f50:	cmp	r1, #1
   16f54:	blt	16f78 <traverse_product@@Base+0x398>
   16f58:	mov	r1, #0
   16f5c:	bl	16fdc <traverse_product@@Base+0x3fc>
   16f60:	ldr	r0, [sp, #4]
   16f64:	add	r0, r0, #1
   16f68:	str	r0, [sp, #4]
   16f6c:	ldr	r1, [sp, #8]
   16f70:	cmp	r0, r1
   16f74:	blt	16f58 <traverse_product@@Base+0x378>
   16f78:	ldr	r0, [r6, #136]	; 0x88
   16f7c:	sub	r0, r0, #1
   16f80:	str	r0, [r6, #136]	; 0x88
   16f84:	ldr	r0, [r6, #3748]	; 0xea4
   16f88:	sub	r0, r0, #1
   16f8c:	str	r0, [r6, #3748]	; 0xea4
   16f90:	sub	sp, fp, #24
   16f94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f98:	movw	r0, #41940	; 0xa3d4
   16f9c:	movt	r0, #1
   16fa0:	movw	r1, #41953	; 0xa3e1
   16fa4:	movt	r1, #1
   16fa8:	movw	r3, #42031	; 0xa42f
   16fac:	movt	r3, #1
   16fb0:	movw	r2, #393	; 0x189
   16fb4:	bl	12ab4 <__assert_fail@plt>
   16fb8:	movw	r0, #49584	; 0xc1b0
   16fbc:	movt	r0, #2
   16fc0:	ldr	r0, [r0]
   16fc4:	movw	r1, #42052	; 0xa444
   16fc8:	movt	r1, #1
   16fcc:	mov	r2, r5
   16fd0:	bl	128b0 <fprintf@plt>
   16fd4:	mov	r0, #1
   16fd8:	bl	12868 <exit@plt>
   16fdc:	push	{r4, r5, r6, sl, fp, lr}
   16fe0:	add	fp, sp, #16
   16fe4:	sub	sp, sp, #8
   16fe8:	mov	r5, r1
   16fec:	mov	r4, r0
   16ff0:	movw	r6, #49640	; 0xc1e8
   16ff4:	movt	r6, #2
   16ff8:	ldr	r0, [r6, #3748]	; 0xea4
   16ffc:	add	r0, r6, r0, lsl #2
   17000:	str	r4, [r0, #3488]	; 0xda0
   17004:	ldr	r0, [r6, #136]	; 0x88
   17008:	add	r0, r6, r0, lsl #2
   1700c:	ldr	r0, [r0, #4]
   17010:	add	r2, sp, #4
   17014:	mov	r1, r4
   17018:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   1701c:	cmp	r0, #0
   17020:	beq	17028 <traverse_product@@Base+0x448>
   17024:	bl	17f28 <handle_coda_error@@Base>
   17028:	cmp	r5, #0
   1702c:	bne	1703c <traverse_product@@Base+0x45c>
   17030:	ldr	r0, [sp, #4]
   17034:	cmp	r0, #0
   17038:	bne	170f0 <traverse_product@@Base+0x510>
   1703c:	movw	r0, #49636	; 0xc1e4
   17040:	movt	r0, #2
   17044:	ldr	r0, [r0]
   17048:	cmp	r0, #0
   1704c:	beq	1709c <traverse_product@@Base+0x4bc>
   17050:	ldr	r0, [r6, #136]	; 0x88
   17054:	add	r0, r6, r0, lsl #2
   17058:	ldr	r0, [r0, #4]
   1705c:	mov	r2, sp
   17060:	mov	r1, r4
   17064:	bl	12760 <coda_type_get_record_field_available_status@plt>
   17068:	cmp	r0, #0
   1706c:	beq	17074 <traverse_product@@Base+0x494>
   17070:	bl	17f28 <handle_coda_error@@Base>
   17074:	ldr	r0, [sp]
   17078:	cmn	r0, #1
   1707c:	bne	1708c <traverse_product@@Base+0x4ac>
   17080:	bl	155c4 <dim_record_field_available@@Base>
   17084:	cmp	r0, #0
   17088:	beq	170f0 <traverse_product@@Base+0x510>
   1708c:	ldr	r0, [r6, #136]	; 0x88
   17090:	add	r0, r6, r0, lsl #2
   17094:	ldr	r1, [sp]
   17098:	str	r1, [r0, #3360]	; 0xd20
   1709c:	ldr	r0, [r6, #136]	; 0x88
   170a0:	add	r0, r6, r0, lsl #2
   170a4:	ldr	r0, [r0, #4]
   170a8:	ldr	r1, [r6, #3748]	; 0xea4
   170ac:	add	r1, r6, r1, lsl #2
   170b0:	add	r2, r1, #3616	; 0xe20
   170b4:	mov	r1, r4
   170b8:	bl	12a78 <coda_type_get_record_field_name@plt>
   170bc:	cmp	r0, #0
   170c0:	beq	170c8 <traverse_product@@Base+0x4e8>
   170c4:	bl	17f28 <handle_coda_error@@Base>
   170c8:	ldr	r0, [r6, #136]	; 0x88
   170cc:	add	r1, r6, r0, lsl #2
   170d0:	ldr	r0, [r1, #4]
   170d4:	add	r2, r1, #8
   170d8:	mov	r1, r4
   170dc:	bl	12724 <coda_type_get_record_field_type@plt>
   170e0:	cmp	r0, #0
   170e4:	beq	170ec <traverse_product@@Base+0x50c>
   170e8:	bl	17f28 <handle_coda_error@@Base>
   170ec:	bl	16c94 <traverse_product@@Base+0xb4>
   170f0:	sub	sp, fp, #16
   170f4:	pop	{r4, r5, r6, sl, fp, pc}
   170f8:	push	{r4, r5, fp, lr}
   170fc:	add	fp, sp, #8
   17100:	sub	sp, sp, #8
   17104:	movw	r0, #53412	; 0xd0a4
   17108:	movt	r0, #2
   1710c:	ldr	r0, [r0]
   17110:	cmp	r0, #1
   17114:	beq	171bc <traverse_product@@Base+0x5dc>
   17118:	cmp	r0, #0
   1711c:	bne	17334 <traverse_product@@Base+0x754>
   17120:	movw	r5, #49588	; 0xc1b4
   17124:	movt	r5, #2
   17128:	ldr	r0, [r5]
   1712c:	mov	r1, #1
   17130:	mov	r2, #0
   17134:	bl	167d0 <print_full_field_name@@Base>
   17138:	movw	r0, #53400	; 0xd098
   1713c:	movt	r0, #2
   17140:	ldr	r0, [r0]
   17144:	cmp	r0, #0
   17148:	movw	r4, #49640	; 0xc1e8
   1714c:	movt	r4, #2
   17150:	beq	17238 <traverse_product@@Base+0x658>
   17154:	ldr	r0, [r4, #136]	; 0x88
   17158:	add	r0, r4, r0, lsl #2
   1715c:	ldr	r0, [r0, #8]
   17160:	add	r1, sp, #4
   17164:	bl	12ac0 <coda_type_get_class@plt>
   17168:	cmp	r0, #0
   1716c:	beq	17174 <traverse_product@@Base+0x594>
   17170:	bl	17f28 <handle_coda_error@@Base>
   17174:	ldr	r0, [sp, #4]
   17178:	cmp	r0, #6
   1717c:	bne	171c8 <traverse_product@@Base+0x5e8>
   17180:	ldr	r0, [r4, #136]	; 0x88
   17184:	add	r0, r4, r0, lsl #2
   17188:	ldr	r0, [r0, #8]
   1718c:	mov	r1, sp
   17190:	bl	12928 <coda_type_get_special_type@plt>
   17194:	cmp	r0, #0
   17198:	beq	171a0 <traverse_product@@Base+0x5c0>
   1719c:	bl	17f28 <handle_coda_error@@Base>
   171a0:	ldr	r0, [sp]
   171a4:	bl	12628 <coda_type_get_special_type_name@plt>
   171a8:	mov	r1, r0
   171ac:	movw	r0, #42104	; 0xa478
   171b0:	movt	r0, #1
   171b4:	bl	1267c <printf@plt>
   171b8:	b	17238 <traverse_product@@Base+0x658>
   171bc:	sub	sp, fp, #8
   171c0:	pop	{r4, r5, fp, lr}
   171c4:	b	12bbc <export_data_element_to_ascii@@Base>
   171c8:	ldr	r0, [r4, #136]	; 0x88
   171cc:	add	r0, r4, r0, lsl #2
   171d0:	ldr	r0, [r0, #8]
   171d4:	mov	r1, sp
   171d8:	bl	12874 <coda_type_get_read_type@plt>
   171dc:	cmp	r0, #0
   171e0:	beq	171e8 <traverse_product@@Base+0x608>
   171e4:	bl	17f28 <handle_coda_error@@Base>
   171e8:	ldr	r0, [sp]
   171ec:	bl	12970 <coda_type_get_native_type_name@plt>
   171f0:	mov	r1, r0
   171f4:	movw	r0, #42104	; 0xa478
   171f8:	movt	r0, #1
   171fc:	bl	1267c <printf@plt>
   17200:	ldr	r0, [sp]
   17204:	sub	r0, r0, #11
   17208:	cmp	r0, #1
   1720c:	bhi	17238 <traverse_product@@Base+0x658>
   17210:	mov	r0, #40	; 0x28
   17214:	bl	12910 <putchar@plt>
   17218:	ldr	r1, [r4, #3360]	; 0xd20
   1721c:	cmp	r1, #0
   17220:	ble	1733c <traverse_product@@Base+0x75c>
   17224:	ldr	r0, [r5]
   17228:	sub	r1, r1, #1
   1722c:	bl	16a94 <print_full_field_name@@Base+0x2c4>
   17230:	mov	r0, #41	; 0x29
   17234:	bl	12910 <putchar@plt>
   17238:	movw	r0, #49632	; 0xc1e0
   1723c:	movt	r0, #2
   17240:	ldr	r0, [r0]
   17244:	cmp	r0, #0
   17248:	beq	17290 <traverse_product@@Base+0x6b0>
   1724c:	ldr	r0, [r4, #136]	; 0x88
   17250:	add	r0, r4, r0, lsl #2
   17254:	ldr	r0, [r0, #8]
   17258:	add	r1, sp, #4
   1725c:	bl	1279c <coda_type_get_unit@plt>
   17260:	cmp	r0, #0
   17264:	beq	1726c <traverse_product@@Base+0x68c>
   17268:	bl	17f28 <handle_coda_error@@Base>
   1726c:	ldr	r1, [sp, #4]
   17270:	cmp	r1, #0
   17274:	beq	17290 <traverse_product@@Base+0x6b0>
   17278:	ldrb	r0, [r1]
   1727c:	cmp	r0, #0
   17280:	beq	17290 <traverse_product@@Base+0x6b0>
   17284:	movw	r0, #42164	; 0xa4b4
   17288:	movt	r0, #1
   1728c:	bl	1267c <printf@plt>
   17290:	movw	r0, #53404	; 0xd09c
   17294:	movt	r0, #2
   17298:	ldr	r0, [r0]
   1729c:	cmp	r0, #0
   172a0:	beq	172e8 <traverse_product@@Base+0x708>
   172a4:	ldr	r0, [r4, #136]	; 0x88
   172a8:	add	r0, r4, r0, lsl #2
   172ac:	ldr	r0, [r0, #8]
   172b0:	add	r1, sp, #4
   172b4:	bl	127a8 <coda_type_get_description@plt>
   172b8:	cmp	r0, #0
   172bc:	beq	172c4 <traverse_product@@Base+0x6e4>
   172c0:	bl	17f28 <handle_coda_error@@Base>
   172c4:	ldr	r1, [sp, #4]
   172c8:	cmp	r1, #0
   172cc:	beq	172e8 <traverse_product@@Base+0x708>
   172d0:	ldrb	r0, [r1]
   172d4:	cmp	r0, #0
   172d8:	beq	172e8 <traverse_product@@Base+0x708>
   172dc:	movw	r0, #42170	; 0xa4ba
   172e0:	movt	r0, #1
   172e4:	bl	1267c <printf@plt>
   172e8:	mov	r0, #10
   172ec:	bl	12910 <putchar@plt>
   172f0:	movw	r0, #49620	; 0xc1d4
   172f4:	movt	r0, #2
   172f8:	ldr	r0, [r0]
   172fc:	cmp	r0, #0
   17300:	beq	17334 <traverse_product@@Base+0x754>
   17304:	movw	r5, #53424	; 0xd0b0
   17308:	movt	r5, #2
   1730c:	ldr	r0, [r5]
   17310:	cmp	r0, #1
   17314:	blt	17334 <traverse_product@@Base+0x754>
   17318:	mov	r4, #0
   1731c:	mov	r0, r4
   17320:	bl	1460c <print_all_distinct_dims@@Base>
   17324:	add	r4, r4, #1
   17328:	ldr	r0, [r5]
   1732c:	cmp	r4, r0
   17330:	blt	1731c <traverse_product@@Base+0x73c>
   17334:	sub	sp, fp, #8
   17338:	pop	{r4, r5, fp, pc}
   1733c:	movw	r0, #42108	; 0xa47c
   17340:	movt	r0, #1
   17344:	movw	r1, #41953	; 0xa3e1
   17348:	movt	r1, #1
   1734c:	movw	r3, #42137	; 0xa499
   17350:	movt	r3, #1
   17354:	mov	r2, #238	; 0xee
   17358:	bl	12ab4 <__assert_fail@plt>

0001735c <print_yaml_data@@Base>:
   1735c:	push	{r4, sl, fp, lr}
   17360:	add	fp, sp, #8
   17364:	sub	sp, sp, #528	; 0x210
   17368:	movw	r1, #49608	; 0xc1c8
   1736c:	movt	r1, #2
   17370:	str	r0, [r1]
   17374:	movw	r4, #49640	; 0xc1e8
   17378:	movt	r4, #2
   1737c:	ldr	r0, [r4]
   17380:	sub	r1, fp, #12
   17384:	bl	126ac <coda_open@plt>
   17388:	cmp	r0, #0
   1738c:	beq	173cc <print_yaml_data@@Base+0x70>
   17390:	bl	12a60 <coda_get_errno@plt>
   17394:	ldr	r0, [r0]
   17398:	cmn	r0, #21
   1739c:	bne	173c8 <print_yaml_data@@Base+0x6c>
   173a0:	mov	r0, #0
   173a4:	bl	126f4 <coda_set_option_use_mmap@plt>
   173a8:	ldr	r0, [r4]
   173ac:	sub	r1, fp, #12
   173b0:	bl	126ac <coda_open@plt>
   173b4:	mov	r4, r0
   173b8:	mov	r0, #1
   173bc:	bl	126f4 <coda_set_option_use_mmap@plt>
   173c0:	cmp	r4, #0
   173c4:	beq	173cc <print_yaml_data@@Base+0x70>
   173c8:	bl	17f28 <handle_coda_error@@Base>
   173cc:	ldr	r1, [fp, #-12]
   173d0:	mov	r0, sp
   173d4:	bl	127d8 <coda_cursor_set_product@plt>
   173d8:	cmp	r0, #0
   173dc:	beq	173e4 <print_yaml_data@@Base+0x88>
   173e0:	bl	17f28 <handle_coda_error@@Base>
   173e4:	movw	r0, #53416	; 0xd0a8
   173e8:	movt	r0, #2
   173ec:	ldr	r1, [r0]
   173f0:	cmp	r1, #0
   173f4:	beq	1740c <print_yaml_data@@Base+0xb0>
   173f8:	mov	r0, sp
   173fc:	bl	129b8 <coda_cursor_goto@plt>
   17400:	cmp	r0, #0
   17404:	beq	1740c <print_yaml_data@@Base+0xb0>
   17408:	bl	17f28 <handle_coda_error@@Base>
   1740c:	mov	r0, #0
   17410:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   17414:	mov	r0, sp
   17418:	mov	r1, #0
   1741c:	bl	17430 <print_yaml_data@@Base+0xd4>
   17420:	ldr	r0, [fp, #-12]
   17424:	bl	12994 <coda_close@plt>
   17428:	sub	sp, fp, #8
   1742c:	pop	{r4, sl, fp, pc}
   17430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17434:	add	fp, sp, #28
   17438:	sub	sp, sp, #76	; 0x4c
   1743c:	mov	r5, r1
   17440:	mov	r9, r0
   17444:	mov	r0, #0
   17448:	str	r0, [fp, #-36]	; 0xffffffdc
   1744c:	movw	r0, #49608	; 0xc1c8
   17450:	movt	r0, #2
   17454:	ldr	r0, [r0]
   17458:	cmp	r0, #0
   1745c:	movw	r8, #49612	; 0xc1cc
   17460:	movt	r8, #2
   17464:	beq	17508 <print_yaml_data@@Base+0x1ac>
   17468:	sub	r1, fp, #36	; 0x24
   1746c:	mov	r0, r9
   17470:	bl	1276c <coda_cursor_has_attributes@plt>
   17474:	cmp	r0, #0
   17478:	beq	17480 <print_yaml_data@@Base+0x124>
   1747c:	bl	17f28 <handle_coda_error@@Base>
   17480:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17484:	cmp	r0, #0
   17488:	beq	17508 <print_yaml_data@@Base+0x1ac>
   1748c:	cmp	r5, #0
   17490:	beq	174a4 <print_yaml_data@@Base+0x148>
   17494:	movw	r0, #42550	; 0xa636
   17498:	movt	r0, #1
   1749c:	bl	17ccc <print_yaml_data@@Base+0x970>
   174a0:	bl	17d14 <print_yaml_data@@Base+0x9b8>
   174a4:	movw	r0, #42176	; 0xa4c0
   174a8:	movt	r0, #1
   174ac:	bl	17ccc <print_yaml_data@@Base+0x970>
   174b0:	mov	r0, r9
   174b4:	bl	128ec <coda_cursor_goto_attributes@plt>
   174b8:	cmp	r0, #0
   174bc:	beq	174c4 <print_yaml_data@@Base+0x168>
   174c0:	bl	17f28 <handle_coda_error@@Base>
   174c4:	ldr	r0, [r8]
   174c8:	add	r0, r0, #1
   174cc:	str	r0, [r8]
   174d0:	mov	r0, r9
   174d4:	mov	r1, #1
   174d8:	bl	17430 <print_yaml_data@@Base+0xd4>
   174dc:	ldr	r0, [r8]
   174e0:	sub	r0, r0, #1
   174e4:	str	r0, [r8]
   174e8:	mov	r0, r9
   174ec:	bl	12850 <coda_cursor_goto_parent@plt>
   174f0:	movw	r0, #42183	; 0xa4c7
   174f4:	movt	r0, #1
   174f8:	bl	17d88 <print_yaml_data@@Base+0xa2c>
   174fc:	ldr	r0, [r8]
   17500:	add	r0, r0, #1
   17504:	str	r0, [r8]
   17508:	sub	r1, fp, #32
   1750c:	mov	r0, r9
   17510:	bl	12778 <coda_cursor_get_type_class@plt>
   17514:	cmp	r0, #0
   17518:	beq	17520 <print_yaml_data@@Base+0x1c4>
   1751c:	bl	17f28 <handle_coda_error@@Base>
   17520:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17524:	cmp	r0, #6
   17528:	bhi	17c70 <print_yaml_data@@Base+0x914>
   1752c:	add	r1, pc, #0
   17530:	ldr	pc, [r1, r0, lsl #2]
   17534:	andeq	r7, r1, r4, ror #11
   17538:	andeq	r7, r1, r0, ror #13
   1753c:	andeq	r7, r1, r0, asr r5
   17540:	andeq	r7, r1, r0, asr r5
   17544:	andeq	r7, r1, r0, asr r5
   17548:	andeq	r7, r1, r0, asr r5
   1754c:			; <UNDEFINED> instruction: 0x000177b8
   17550:	sub	r1, fp, #40	; 0x28
   17554:	mov	r0, r9
   17558:	bl	12814 <coda_cursor_get_read_type@plt>
   1755c:	cmp	r0, #0
   17560:	beq	17568 <print_yaml_data@@Base+0x20c>
   17564:	bl	17f28 <handle_coda_error@@Base>
   17568:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1756c:	add	r0, r0, #1
   17570:	cmp	r0, #13
   17574:	bhi	17c70 <print_yaml_data@@Base+0x914>
   17578:	add	r1, pc, #0
   1757c:	ldr	pc, [r1, r0, lsl #2]
   17580:	strdeq	r7, [r1], -r4
   17584:			; <UNDEFINED> instruction: 0x000175b8
   17588:	andeq	r7, r1, r4, lsl #16
   1758c:			; <UNDEFINED> instruction: 0x000175b8
   17590:	andeq	r7, r1, r4, lsl #16
   17594:			; <UNDEFINED> instruction: 0x000175b8
   17598:	andeq	r7, r1, r4, lsl #16
   1759c:	muleq	r1, r0, r8
   175a0:	andeq	r7, r1, r0, asr #17
   175a4:	andeq	r7, r1, r0, lsr r8
   175a8:	andeq	r7, r1, r0, lsr r8
   175ac:	andeq	r7, r1, r0, lsl #18
   175b0:	andeq	r7, r1, r0, asr #18
   175b4:	andeq	r7, r1, r8, ror #19
   175b8:	add	r1, sp, #16
   175bc:	mov	r0, r9
   175c0:	bl	12a3c <coda_cursor_read_int32@plt>
   175c4:	cmp	r0, #0
   175c8:	beq	175d0 <print_yaml_data@@Base+0x274>
   175cc:	bl	17f28 <handle_coda_error@@Base>
   175d0:	ldr	r1, [sp, #16]
   175d4:	movw	r0, #40543	; 0x9e5f
   175d8:	movt	r0, #1
   175dc:	bl	17ccc <print_yaml_data@@Base+0x970>
   175e0:	b	17c70 <print_yaml_data@@Base+0x914>
   175e4:	add	r1, sp, #16
   175e8:	mov	r0, r9
   175ec:	bl	126d0 <coda_cursor_get_num_elements@plt>
   175f0:	cmp	r0, #0
   175f4:	beq	175fc <print_yaml_data@@Base+0x2a0>
   175f8:	bl	17f28 <handle_coda_error@@Base>
   175fc:	ldr	r0, [sp, #16]
   17600:	cmp	r0, #1
   17604:	blt	17880 <print_yaml_data@@Base+0x524>
   17608:	cmp	r5, #0
   1760c:	movwne	r0, #42550	; 0xa636
   17610:	movtne	r0, #1
   17614:	blne	17ccc <print_yaml_data@@Base+0x970>
   17618:	add	r1, sp, #8
   1761c:	mov	r0, r9
   17620:	bl	12730 <coda_cursor_get_type@plt>
   17624:	cmp	r0, #0
   17628:	beq	17630 <print_yaml_data@@Base+0x2d4>
   1762c:	bl	17f28 <handle_coda_error@@Base>
   17630:	ldr	r0, [sp, #8]
   17634:	sub	r1, fp, #40	; 0x28
   17638:	bl	12934 <coda_type_get_record_union_status@plt>
   1763c:	cmp	r0, #0
   17640:	beq	17648 <print_yaml_data@@Base+0x2ec>
   17644:	bl	17f28 <handle_coda_error@@Base>
   17648:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1764c:	cmp	r0, #0
   17650:	beq	17ab0 <print_yaml_data@@Base+0x754>
   17654:	sub	r1, fp, #44	; 0x2c
   17658:	mov	r0, r9
   1765c:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   17660:	cmp	r0, #0
   17664:	beq	1766c <print_yaml_data@@Base+0x310>
   17668:	bl	17f28 <handle_coda_error@@Base>
   1766c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17670:	ldr	r0, [sp, #8]
   17674:	sub	r2, fp, #48	; 0x30
   17678:	bl	12a78 <coda_type_get_record_field_name@plt>
   1767c:	cmp	r0, #0
   17680:	beq	17688 <print_yaml_data@@Base+0x32c>
   17684:	bl	17f28 <handle_coda_error@@Base>
   17688:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1768c:	mov	r0, r9
   17690:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   17694:	cmp	r0, #0
   17698:	beq	176a0 <print_yaml_data@@Base+0x344>
   1769c:	bl	17f28 <handle_coda_error@@Base>
   176a0:	cmp	r5, #0
   176a4:	blne	17d14 <print_yaml_data@@Base+0x9b8>
   176a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   176ac:	movw	r0, #42190	; 0xa4ce
   176b0:	movt	r0, #1
   176b4:	bl	17ccc <print_yaml_data@@Base+0x970>
   176b8:	ldr	r0, [r8]
   176bc:	add	r0, r0, #1
   176c0:	str	r0, [r8]
   176c4:	mov	r0, r9
   176c8:	mov	r1, #1
   176cc:	bl	17430 <print_yaml_data@@Base+0xd4>
   176d0:	ldr	r0, [r8]
   176d4:	sub	r0, r0, #1
   176d8:	str	r0, [r8]
   176dc:	b	17bc0 <print_yaml_data@@Base+0x864>
   176e0:	add	r1, sp, #8
   176e4:	add	r5, sp, #16
   176e8:	mov	r0, r9
   176ec:	mov	r2, r5
   176f0:	bl	1297c <coda_cursor_get_array_dim@plt>
   176f4:	cmp	r0, #0
   176f8:	beq	17700 <print_yaml_data@@Base+0x3a4>
   176fc:	bl	17f28 <handle_coda_error@@Base>
   17700:	ldr	r0, [sp, #8]
   17704:	cmp	r0, #0
   17708:	bmi	17870 <print_yaml_data@@Base+0x514>
   1770c:	mov	r6, #1
   17710:	beq	1772c <print_yaml_data@@Base+0x3d0>
   17714:	ldr	r1, [r5], #4
   17718:	mul	r6, r1, r6
   1771c:	subs	r0, r0, #1
   17720:	bne	17714 <print_yaml_data@@Base+0x3b8>
   17724:	cmp	r6, #1
   17728:	blt	17870 <print_yaml_data@@Base+0x514>
   1772c:	movw	r0, #42550	; 0xa636
   17730:	movt	r0, #1
   17734:	bl	17ccc <print_yaml_data@@Base+0x970>
   17738:	mov	r0, r9
   1773c:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   17740:	cmp	r0, #0
   17744:	beq	1774c <print_yaml_data@@Base+0x3f0>
   17748:	bl	17f28 <handle_coda_error@@Base>
   1774c:	sub	r7, r6, #1
   17750:	mov	r4, #0
   17754:	movw	r5, #42199	; 0xa4d7
   17758:	movt	r5, #1
   1775c:	b	1776c <print_yaml_data@@Base+0x410>
   17760:	add	r4, r4, #1
   17764:	cmp	r6, r4
   17768:	beq	17bc0 <print_yaml_data@@Base+0x864>
   1776c:	mov	r0, r5
   17770:	bl	17d88 <print_yaml_data@@Base+0xa2c>
   17774:	ldr	r0, [r8]
   17778:	add	r0, r0, #1
   1777c:	str	r0, [r8]
   17780:	mov	r0, r9
   17784:	mov	r1, #0
   17788:	bl	17430 <print_yaml_data@@Base+0xd4>
   1778c:	ldr	r0, [r8]
   17790:	sub	r0, r0, #1
   17794:	str	r0, [r8]
   17798:	cmp	r4, r7
   1779c:	bge	17760 <print_yaml_data@@Base+0x404>
   177a0:	mov	r0, r9
   177a4:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   177a8:	cmp	r0, #0
   177ac:	beq	17760 <print_yaml_data@@Base+0x404>
   177b0:	bl	17f28 <handle_coda_error@@Base>
   177b4:	b	17760 <print_yaml_data@@Base+0x404>
   177b8:	sub	r1, fp, #40	; 0x28
   177bc:	mov	r0, r9
   177c0:	bl	127b4 <coda_cursor_get_special_type@plt>
   177c4:	cmp	r0, #0
   177c8:	beq	177d0 <print_yaml_data@@Base+0x474>
   177cc:	bl	17f28 <handle_coda_error@@Base>
   177d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   177d4:	cmp	r0, #3
   177d8:	bhi	17c70 <print_yaml_data@@Base+0x914>
   177dc:	add	r1, pc, #0
   177e0:	ldr	pc, [r1, r0, lsl #2]
   177e4:	strdeq	r7, [r1], -r4
   177e8:	andeq	r7, r1, ip, asr #23
   177ec:	andeq	r7, r1, ip, ror #23
   177f0:	andeq	r7, r1, r8, lsr ip
   177f4:	movw	r0, #42280	; 0xa528
   177f8:	movt	r0, #1
   177fc:	bl	17ccc <print_yaml_data@@Base+0x970>
   17800:	b	17c70 <print_yaml_data@@Base+0x914>
   17804:	add	r1, sp, #16
   17808:	mov	r0, r9
   1780c:	bl	1270c <coda_cursor_read_uint32@plt>
   17810:	cmp	r0, #0
   17814:	beq	1781c <print_yaml_data@@Base+0x4c0>
   17818:	bl	17f28 <handle_coda_error@@Base>
   1781c:	ldr	r1, [sp, #16]
   17820:	movw	r0, #40548	; 0x9e64
   17824:	movt	r0, #1
   17828:	bl	17ccc <print_yaml_data@@Base+0x970>
   1782c:	b	17c70 <print_yaml_data@@Base+0x914>
   17830:	add	r1, sp, #16
   17834:	mov	r0, r9
   17838:	bl	12898 <coda_cursor_read_double@plt>
   1783c:	cmp	r0, #0
   17840:	beq	17848 <print_yaml_data@@Base+0x4ec>
   17844:	bl	17f28 <handle_coda_error@@Base>
   17848:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1784c:	movw	r2, #40553	; 0x9e69
   17850:	movt	r2, #1
   17854:	movw	r0, #40619	; 0x9eab
   17858:	movt	r0, #1
   1785c:	vldr	d16, [sp, #16]
   17860:	cmp	r1, #8
   17864:	moveq	r0, r2
   17868:	vmov	r2, r3, d16
   1786c:	b	17c6c <print_yaml_data@@Base+0x910>
   17870:	movw	r0, #42202	; 0xa4da
   17874:	movt	r0, #1
   17878:	bl	17ccc <print_yaml_data@@Base+0x970>
   1787c:	b	17c70 <print_yaml_data@@Base+0x914>
   17880:	movw	r0, #42195	; 0xa4d3
   17884:	movt	r0, #1
   17888:	bl	17ccc <print_yaml_data@@Base+0x970>
   1788c:	b	17c70 <print_yaml_data@@Base+0x914>
   17890:	add	r1, sp, #8
   17894:	mov	r0, r9
   17898:	bl	129a0 <coda_cursor_read_int64@plt>
   1789c:	cmp	r0, #0
   178a0:	beq	178a8 <print_yaml_data@@Base+0x54c>
   178a4:	bl	17f28 <handle_coda_error@@Base>
   178a8:	ldr	r0, [sp, #8]
   178ac:	ldr	r1, [sp, #12]
   178b0:	add	r4, sp, #16
   178b4:	mov	r2, r4
   178b8:	bl	12aa8 <coda_str64@plt>
   178bc:	b	178ec <print_yaml_data@@Base+0x590>
   178c0:	add	r1, sp, #8
   178c4:	mov	r0, r9
   178c8:	bl	1288c <coda_cursor_read_uint64@plt>
   178cc:	cmp	r0, #0
   178d0:	beq	178d8 <print_yaml_data@@Base+0x57c>
   178d4:	bl	17f28 <handle_coda_error@@Base>
   178d8:	ldr	r0, [sp, #8]
   178dc:	ldr	r1, [sp, #12]
   178e0:	add	r4, sp, #16
   178e4:	mov	r2, r4
   178e8:	bl	126dc <coda_str64u@plt>
   178ec:	movw	r0, #42293	; 0xa535
   178f0:	movt	r0, #1
   178f4:	mov	r1, r4
   178f8:	bl	17ccc <print_yaml_data@@Base+0x970>
   178fc:	b	17c70 <print_yaml_data@@Base+0x914>
   17900:	add	r1, sp, #16
   17904:	mov	r0, r9
   17908:	bl	128f8 <coda_cursor_read_char@plt>
   1790c:	cmp	r0, #0
   17910:	beq	17918 <print_yaml_data@@Base+0x5bc>
   17914:	bl	17f28 <handle_coda_error@@Base>
   17918:	movw	r0, #41916	; 0xa3bc
   1791c:	movt	r0, #1
   17920:	bl	17ccc <print_yaml_data@@Base+0x970>
   17924:	add	r0, sp, #16
   17928:	mov	r1, #1
   1792c:	bl	17dd4 <print_yaml_data@@Base+0xa78>
   17930:	movw	r0, #42549	; 0xa635
   17934:	movt	r0, #1
   17938:	bl	17ccc <print_yaml_data@@Base+0x970>
   1793c:	b	17c70 <print_yaml_data@@Base+0x914>
   17940:	add	r1, sp, #16
   17944:	mov	r0, r9
   17948:	bl	12880 <coda_cursor_get_string_length@plt>
   1794c:	cmp	r0, #0
   17950:	beq	17958 <print_yaml_data@@Base+0x5fc>
   17954:	bl	17f28 <handle_coda_error@@Base>
   17958:	ldr	r0, [sp, #16]
   1795c:	add	r6, r0, #1
   17960:	mov	r0, r6
   17964:	bl	12820 <malloc@plt>
   17968:	mov	r5, r0
   1796c:	cmp	r0, #0
   17970:	bne	1799c <print_yaml_data@@Base+0x640>
   17974:	movw	r0, #361	; 0x169
   17978:	str	r0, [sp]
   1797c:	movw	r1, #40129	; 0x9cc1
   17980:	movt	r1, #1
   17984:	movw	r3, #42206	; 0xa4de
   17988:	movt	r3, #1
   1798c:	mvn	r0, #0
   17990:	mov	r2, r6
   17994:	bl	126a0 <coda_set_error@plt>
   17998:	bl	17f28 <handle_coda_error@@Base>
   1799c:	ldr	r0, [sp, #16]
   179a0:	add	r2, r0, #1
   179a4:	mov	r0, r9
   179a8:	mov	r1, r5
   179ac:	bl	12844 <coda_cursor_read_string@plt>
   179b0:	cmp	r0, #0
   179b4:	beq	179bc <print_yaml_data@@Base+0x660>
   179b8:	bl	17f28 <handle_coda_error@@Base>
   179bc:	movw	r0, #41916	; 0xa3bc
   179c0:	movt	r0, #1
   179c4:	bl	17ccc <print_yaml_data@@Base+0x970>
   179c8:	ldr	r1, [sp, #16]
   179cc:	mov	r0, r5
   179d0:	bl	17dd4 <print_yaml_data@@Base+0xa78>
   179d4:	ldr	r1, [sp, #16]
   179d8:	movw	r0, #42549	; 0xa635
   179dc:	movt	r0, #1
   179e0:	bl	17ccc <print_yaml_data@@Base+0x970>
   179e4:	b	17aa4 <print_yaml_data@@Base+0x748>
   179e8:	add	r1, sp, #16
   179ec:	mov	r0, r9
   179f0:	bl	12a00 <coda_cursor_get_bit_size@plt>
   179f4:	cmp	r0, #0
   179f8:	beq	17a00 <print_yaml_data@@Base+0x6a4>
   179fc:	bl	17f28 <handle_coda_error@@Base>
   17a00:	ldr	r0, [sp, #16]
   17a04:	ldr	r1, [sp, #20]
   17a08:	lsr	r2, r0, #3
   17a0c:	orr	r6, r2, r1, lsl #29
   17a10:	tst	r0, #7
   17a14:	addne	r6, r6, #1
   17a18:	mov	r0, r6
   17a1c:	bl	12820 <malloc@plt>
   17a20:	mov	r5, r0
   17a24:	cmp	r0, #0
   17a28:	bne	17a54 <print_yaml_data@@Base+0x6f8>
   17a2c:	mov	r0, #392	; 0x188
   17a30:	str	r0, [sp]
   17a34:	movw	r1, #40129	; 0x9cc1
   17a38:	movt	r1, #1
   17a3c:	movw	r3, #42206	; 0xa4de
   17a40:	movt	r3, #1
   17a44:	mvn	r0, #0
   17a48:	mov	r2, r6
   17a4c:	bl	126a0 <coda_set_error@plt>
   17a50:	bl	17f28 <handle_coda_error@@Base>
   17a54:	ldr	r0, [sp, #16]
   17a58:	ldr	r1, [sp, #20]
   17a5c:	stm	sp, {r0, r1}
   17a60:	mov	r0, r9
   17a64:	mov	r1, r5
   17a68:	mov	r2, #0
   17a6c:	mov	r3, #0
   17a70:	bl	12a9c <coda_cursor_read_bits@plt>
   17a74:	cmp	r0, #0
   17a78:	beq	17a80 <print_yaml_data@@Base+0x724>
   17a7c:	bl	17f28 <handle_coda_error@@Base>
   17a80:	movw	r0, #41916	; 0xa3bc
   17a84:	movt	r0, #1
   17a88:	bl	17ccc <print_yaml_data@@Base+0x970>
   17a8c:	mov	r0, r5
   17a90:	mov	r1, r6
   17a94:	bl	17dd4 <print_yaml_data@@Base+0xa78>
   17a98:	movw	r0, #42549	; 0xa635
   17a9c:	movt	r0, #1
   17aa0:	bl	17ccc <print_yaml_data@@Base+0x970>
   17aa4:	mov	r0, r5
   17aa8:	bl	126e8 <free@plt>
   17aac:	b	17c70 <print_yaml_data@@Base+0x914>
   17ab0:	mov	r0, r9
   17ab4:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   17ab8:	cmp	r0, #0
   17abc:	beq	17ac4 <print_yaml_data@@Base+0x768>
   17ac0:	bl	17f28 <handle_coda_error@@Base>
   17ac4:	mov	r1, #0
   17ac8:	str	r1, [fp, #-44]	; 0xffffffd4
   17acc:	ldr	r0, [sp, #16]
   17ad0:	cmp	r0, #1
   17ad4:	blt	17bc0 <print_yaml_data@@Base+0x864>
   17ad8:	mov	r6, #1
   17adc:	add	sl, sp, #52	; 0x34
   17ae0:	sub	r7, fp, #48	; 0x30
   17ae4:	movw	r4, #42190	; 0xa4ce
   17ae8:	movt	r4, #1
   17aec:	b	17b08 <print_yaml_data@@Base+0x7ac>
   17af0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17af4:	add	r1, r0, #1
   17af8:	str	r1, [fp, #-44]	; 0xffffffd4
   17afc:	ldr	r0, [sp, #16]
   17b00:	cmp	r1, r0
   17b04:	bge	17bc0 <print_yaml_data@@Base+0x864>
   17b08:	ldr	r0, [sp, #8]
   17b0c:	mov	r2, sl
   17b10:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   17b14:	cmp	r0, #0
   17b18:	beq	17b20 <print_yaml_data@@Base+0x7c4>
   17b1c:	bl	17f28 <handle_coda_error@@Base>
   17b20:	ldr	r0, [sp, #52]	; 0x34
   17b24:	cmp	r0, #0
   17b28:	bne	17b94 <print_yaml_data@@Base+0x838>
   17b2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17b30:	ldr	r0, [sp, #8]
   17b34:	mov	r2, r7
   17b38:	bl	12a78 <coda_type_get_record_field_name@plt>
   17b3c:	cmp	r0, #0
   17b40:	beq	17b48 <print_yaml_data@@Base+0x7ec>
   17b44:	bl	17f28 <handle_coda_error@@Base>
   17b48:	cmp	r5, #0
   17b4c:	bne	17b5c <print_yaml_data@@Base+0x800>
   17b50:	cmp	r6, #0
   17b54:	bleq	17d14 <print_yaml_data@@Base+0x9b8>
   17b58:	b	17b60 <print_yaml_data@@Base+0x804>
   17b5c:	bl	17d14 <print_yaml_data@@Base+0x9b8>
   17b60:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17b64:	mov	r0, r4
   17b68:	bl	17ccc <print_yaml_data@@Base+0x970>
   17b6c:	ldr	r0, [r8]
   17b70:	add	r0, r0, #1
   17b74:	str	r0, [r8]
   17b78:	mov	r0, r9
   17b7c:	mov	r1, #1
   17b80:	bl	17430 <print_yaml_data@@Base+0xd4>
   17b84:	ldr	r0, [r8]
   17b88:	sub	r0, r0, #1
   17b8c:	str	r0, [r8]
   17b90:	mov	r6, #0
   17b94:	ldr	r0, [sp, #16]
   17b98:	sub	r0, r0, #1
   17b9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17ba0:	cmp	r1, r0
   17ba4:	bge	17af0 <print_yaml_data@@Base+0x794>
   17ba8:	mov	r0, r9
   17bac:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   17bb0:	cmp	r0, #0
   17bb4:	beq	17af0 <print_yaml_data@@Base+0x794>
   17bb8:	bl	17f28 <handle_coda_error@@Base>
   17bbc:	b	17af0 <print_yaml_data@@Base+0x794>
   17bc0:	mov	r0, r9
   17bc4:	bl	12850 <coda_cursor_goto_parent@plt>
   17bc8:	b	17c70 <print_yaml_data@@Base+0x914>
   17bcc:	add	r1, sp, #16
   17bd0:	mov	r0, r9
   17bd4:	bl	12898 <coda_cursor_read_double@plt>
   17bd8:	cmp	r0, #0
   17bdc:	beq	17be4 <print_yaml_data@@Base+0x888>
   17be0:	bl	17f28 <handle_coda_error@@Base>
   17be4:	vldr	d16, [sp, #16]
   17be8:	b	17c28 <print_yaml_data@@Base+0x8cc>
   17bec:	add	r1, sp, #8
   17bf0:	mov	r0, r9
   17bf4:	bl	12898 <coda_cursor_read_double@plt>
   17bf8:	cmp	r0, #0
   17bfc:	beq	17c04 <print_yaml_data@@Base+0x8a8>
   17c00:	bl	17f28 <handle_coda_error@@Base>
   17c04:	vldr	d0, [sp, #8]
   17c08:	bl	128a4 <coda_isNaN@plt>
   17c0c:	cmp	r0, #0
   17c10:	bne	17c24 <print_yaml_data@@Base+0x8c8>
   17c14:	vldr	d0, [sp, #8]
   17c18:	bl	12748 <coda_isInf@plt>
   17c1c:	cmp	r0, #0
   17c20:	beq	17c8c <print_yaml_data@@Base+0x930>
   17c24:	vldr	d16, [sp, #8]
   17c28:	vmov	r2, r3, d16
   17c2c:	movw	r0, #40619	; 0x9eab
   17c30:	movt	r0, #1
   17c34:	b	17c6c <print_yaml_data@@Base+0x910>
   17c38:	add	r1, sp, #16
   17c3c:	add	r2, sp, #8
   17c40:	mov	r0, r9
   17c44:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   17c48:	cmp	r0, #0
   17c4c:	beq	17c54 <print_yaml_data@@Base+0x8f8>
   17c50:	bl	17f28 <handle_coda_error@@Base>
   17c54:	vldr	d16, [sp, #16]
   17c58:	vldr	d17, [sp, #8]
   17c5c:	vstr	d17, [sp]
   17c60:	vmov	r2, r3, d16
   17c64:	movw	r0, #40654	; 0x9ece
   17c68:	movt	r0, #1
   17c6c:	bl	17ccc <print_yaml_data@@Base+0x970>
   17c70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17c74:	cmp	r0, #0
   17c78:	ldrne	r0, [r8]
   17c7c:	subne	r0, r0, #1
   17c80:	strne	r0, [r8]
   17c84:	sub	sp, fp, #28
   17c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c8c:	vldr	d0, [sp, #8]
   17c90:	movw	r0, #41848	; 0xa378
   17c94:	movt	r0, #1
   17c98:	add	r1, sp, #16
   17c9c:	bl	126c4 <coda_time_double_to_string@plt>
   17ca0:	cmp	r0, #0
   17ca4:	beq	17cb8 <print_yaml_data@@Base+0x95c>
   17ca8:	movw	r0, #41877	; 0xa395
   17cac:	movt	r0, #1
   17cb0:	bl	17ccc <print_yaml_data@@Base+0x970>
   17cb4:	b	17c70 <print_yaml_data@@Base+0x914>
   17cb8:	movw	r0, #42293	; 0xa535
   17cbc:	movt	r0, #1
   17cc0:	add	r1, sp, #16
   17cc4:	bl	17ccc <print_yaml_data@@Base+0x970>
   17cc8:	b	17c70 <print_yaml_data@@Base+0x914>
   17ccc:	sub	sp, sp, #12
   17cd0:	push	{fp, lr}
   17cd4:	mov	fp, sp
   17cd8:	sub	sp, sp, #4
   17cdc:	mov	ip, r0
   17ce0:	add	r0, fp, #8
   17ce4:	stm	r0, {r1, r2, r3}
   17ce8:	add	r2, fp, #8
   17cec:	str	r2, [sp]
   17cf0:	movw	r0, #53392	; 0xd090
   17cf4:	movt	r0, #2
   17cf8:	ldr	r0, [r0]
   17cfc:	mov	r1, ip
   17d00:	bl	129ac <vfprintf@plt>
   17d04:	mov	sp, fp
   17d08:	pop	{fp, lr}
   17d0c:	add	sp, sp, #12
   17d10:	bx	lr
   17d14:	push	{r4, r5, r6, sl, fp, lr}
   17d18:	add	fp, sp, #16
   17d1c:	movw	r0, #49612	; 0xc1cc
   17d20:	movt	r0, #2
   17d24:	ldr	r5, [r0]
   17d28:	cmp	r5, #0
   17d2c:	bmi	17d68 <print_yaml_data@@Base+0xa0c>
   17d30:	beq	17d64 <print_yaml_data@@Base+0xa08>
   17d34:	movw	r6, #53392	; 0xd090
   17d38:	movt	r6, #2
   17d3c:	movw	r4, #40694	; 0x9ef6
   17d40:	movt	r4, #1
   17d44:	ldr	r3, [r6]
   17d48:	mov	r0, r4
   17d4c:	mov	r1, #2
   17d50:	mov	r2, #1
   17d54:	bl	127cc <fwrite@plt>
   17d58:	sub	r5, r5, #1
   17d5c:	cmp	r5, #0
   17d60:	bgt	17d44 <print_yaml_data@@Base+0x9e8>
   17d64:	pop	{r4, r5, r6, sl, fp, pc}
   17d68:	movw	r0, #40664	; 0x9ed8
   17d6c:	movt	r0, #1
   17d70:	movw	r1, #42206	; 0xa4de
   17d74:	movt	r1, #1
   17d78:	movw	r3, #40676	; 0x9ee4
   17d7c:	movt	r3, #1
   17d80:	mov	r2, #44	; 0x2c
   17d84:	bl	12ab4 <__assert_fail@plt>
   17d88:	sub	sp, sp, #12
   17d8c:	push	{r4, sl, fp, lr}
   17d90:	add	fp, sp, #8
   17d94:	sub	sp, sp, #4
   17d98:	mov	r4, r0
   17d9c:	add	r0, fp, #8
   17da0:	stm	r0, {r1, r2, r3}
   17da4:	bl	17d14 <print_yaml_data@@Base+0x9b8>
   17da8:	add	r2, fp, #8
   17dac:	str	r2, [sp]
   17db0:	movw	r0, #53392	; 0xd090
   17db4:	movt	r0, #2
   17db8:	ldr	r0, [r0]
   17dbc:	mov	r1, r4
   17dc0:	bl	129ac <vfprintf@plt>
   17dc4:	sub	sp, fp, #8
   17dc8:	pop	{r4, sl, fp, lr}
   17dcc:	add	sp, sp, #12
   17dd0:	bx	lr
   17dd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17dd8:	add	fp, sp, #28
   17ddc:	sub	sp, sp, #4
   17de0:	cmp	r1, #1
   17de4:	blt	17f20 <print_yaml_data@@Base+0xbc4>
   17de8:	mov	r4, r1
   17dec:	mov	r5, r0
   17df0:	movw	r6, #40263	; 0x9d47
   17df4:	movt	r6, #1
   17df8:	movw	r8, #40266	; 0x9d4a
   17dfc:	movt	r8, #1
   17e00:	movw	r9, #40272	; 0x9d50
   17e04:	movt	r9, #1
   17e08:	movw	sl, #40275	; 0x9d53
   17e0c:	movt	sl, #1
   17e10:	movw	r7, #41915	; 0xa3bb
   17e14:	movt	r7, #1
   17e18:	b	17e30 <print_yaml_data@@Base+0xad4>
   17e1c:	mov	r0, r7
   17e20:	bl	17ccc <print_yaml_data@@Base+0x970>
   17e24:	add	r5, r5, #1
   17e28:	subs	r4, r4, #1
   17e2c:	beq	17f20 <print_yaml_data@@Base+0xbc4>
   17e30:	ldrb	r1, [r5]
   17e34:	sub	r0, r1, #8
   17e38:	cmp	r0, #26
   17e3c:	bhi	17ec0 <print_yaml_data@@Base+0xb64>
   17e40:	add	r2, pc, #0
   17e44:	ldr	pc, [r2, r0, lsl #2]
   17e48:			; <UNDEFINED> instruction: 0x00017eb4
   17e4c:	strdeq	r7, [r1], -r0
   17e50:	strdeq	r7, [r1], -r8
   17e54:	ldrdeq	r7, [r1], -r4
   17e58:	andeq	r7, r1, r0, lsl #30
   17e5c:	andeq	r7, r1, r8, lsl #30
   17e60:	ldrdeq	r7, [r1], -r4
   17e64:	ldrdeq	r7, [r1], -r4
   17e68:	ldrdeq	r7, [r1], -r4
   17e6c:	ldrdeq	r7, [r1], -r4
   17e70:	ldrdeq	r7, [r1], -r4
   17e74:	ldrdeq	r7, [r1], -r4
   17e78:	ldrdeq	r7, [r1], -r4
   17e7c:	ldrdeq	r7, [r1], -r4
   17e80:	ldrdeq	r7, [r1], -r4
   17e84:	ldrdeq	r7, [r1], -r4
   17e88:	ldrdeq	r7, [r1], -r4
   17e8c:	ldrdeq	r7, [r1], -r4
   17e90:	ldrdeq	r7, [r1], -r4
   17e94:	ldrdeq	r7, [r1], -r4
   17e98:	ldrdeq	r7, [r1], -r4
   17e9c:	ldrdeq	r7, [r1], -r4
   17ea0:	ldrdeq	r7, [r1], -r4
   17ea4:	ldrdeq	r7, [r1], -r4
   17ea8:	ldrdeq	r7, [r1], -r4
   17eac:	ldrdeq	r7, [r1], -r4
   17eb0:	andeq	r7, r1, ip, lsl lr
   17eb4:	movw	r0, #40260	; 0x9d44
   17eb8:	movt	r0, #1
   17ebc:	b	17e20 <print_yaml_data@@Base+0xac4>
   17ec0:	cmp	r1, #92	; 0x5c
   17ec4:	bne	17ed4 <print_yaml_data@@Base+0xb78>
   17ec8:	movw	r0, #40278	; 0x9d56
   17ecc:	movt	r0, #1
   17ed0:	b	17e20 <print_yaml_data@@Base+0xac4>
   17ed4:	sub	r0, r1, #32
   17ed8:	uxtb	r0, r0
   17edc:	cmp	r0, #94	; 0x5e
   17ee0:	bhi	17f10 <print_yaml_data@@Base+0xbb4>
   17ee4:	movw	r0, #40697	; 0x9ef9
   17ee8:	movt	r0, #1
   17eec:	b	17f18 <print_yaml_data@@Base+0xbbc>
   17ef0:	mov	r0, r6
   17ef4:	b	17e20 <print_yaml_data@@Base+0xac4>
   17ef8:	mov	r0, r8
   17efc:	b	17e20 <print_yaml_data@@Base+0xac4>
   17f00:	mov	r0, r9
   17f04:	b	17e20 <print_yaml_data@@Base+0xac4>
   17f08:	mov	r0, sl
   17f0c:	b	17e20 <print_yaml_data@@Base+0xac4>
   17f10:	movw	r0, #41918	; 0xa3be
   17f14:	movt	r0, #1
   17f18:	bl	17ccc <print_yaml_data@@Base+0x970>
   17f1c:	b	17e24 <print_yaml_data@@Base+0xac8>
   17f20:	sub	sp, fp, #28
   17f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017f28 <handle_coda_error@@Base>:
   17f28:	push	{fp, lr}
   17f2c:	mov	fp, sp
   17f30:	movw	r5, #49584	; 0xc1b0
   17f34:	movt	r5, #2
   17f38:	ldr	r4, [r5]
   17f3c:	bl	12a60 <coda_get_errno@plt>
   17f40:	ldr	r0, [r0]
   17f44:	bl	12a18 <coda_errno_to_string@plt>
   17f48:	mov	r2, r0
   17f4c:	movw	r1, #42286	; 0xa52e
   17f50:	movt	r1, #1
   17f54:	mov	r0, r4
   17f58:	bl	128b0 <fprintf@plt>
   17f5c:	ldr	r0, [r5]
   17f60:	bl	126b8 <fflush@plt>
   17f64:	mov	r0, #1
   17f68:	bl	12868 <exit@plt>

00017f6c <main@@Base>:
   17f6c:	push	{r4, r5, r6, r7, fp, lr}
   17f70:	add	fp, sp, #16
   17f74:	cmp	r0, #1
   17f78:	beq	1817c <main@@Base+0x210>
   17f7c:	mov	r4, r1
   17f80:	mov	r5, r0
   17f84:	ldr	r6, [r1, #4]
   17f88:	movw	r1, #42297	; 0xa539
   17f8c:	movt	r1, #1
   17f90:	mov	r0, r6
   17f94:	bl	12664 <strcmp@plt>
   17f98:	cmp	r0, #0
   17f9c:	beq	1817c <main@@Base+0x210>
   17fa0:	movw	r1, #45894	; 0xb346
   17fa4:	movt	r1, #1
   17fa8:	mov	r0, r6
   17fac:	bl	12664 <strcmp@plt>
   17fb0:	cmp	r0, #0
   17fb4:	beq	1817c <main@@Base+0x210>
   17fb8:	movw	r1, #42300	; 0xa53c
   17fbc:	movt	r1, #1
   17fc0:	mov	r0, r6
   17fc4:	bl	12664 <strcmp@plt>
   17fc8:	cmp	r0, #0
   17fcc:	beq	18188 <main@@Base+0x21c>
   17fd0:	movw	r1, #45948	; 0xb37c
   17fd4:	movt	r1, #1
   17fd8:	mov	r0, r6
   17fdc:	bl	12664 <strcmp@plt>
   17fe0:	cmp	r0, #0
   17fe4:	beq	18188 <main@@Base+0x21c>
   17fe8:	cmp	r5, #3
   17fec:	blt	18008 <main@@Base+0x9c>
   17ff0:	movw	r1, #42303	; 0xa53f
   17ff4:	movt	r1, #1
   17ff8:	mov	r0, r6
   17ffc:	bl	12664 <strcmp@plt>
   18000:	cmp	r0, #0
   18004:	beq	1811c <main@@Base+0x1b0>
   18008:	ldr	r0, [r4]
   1800c:	movw	r2, #42306	; 0xa542
   18010:	movt	r2, #1
   18014:	mov	r1, #0
   18018:	bl	12700 <coda_set_definition_path_conditional@plt>
   1801c:	mov	r7, #1
   18020:	cmp	r0, #0
   18024:	bne	18194 <main@@Base+0x228>
   18028:	ldr	r6, [r4, r7, lsl #2]
   1802c:	movw	r1, #42332	; 0xa55c
   18030:	movt	r1, #1
   18034:	mov	r0, r6
   18038:	bl	12664 <strcmp@plt>
   1803c:	cmp	r0, #0
   18040:	beq	180cc <main@@Base+0x160>
   18044:	movw	r1, #42337	; 0xa561
   18048:	movt	r1, #1
   1804c:	mov	r0, r6
   18050:	bl	12664 <strcmp@plt>
   18054:	cmp	r0, #0
   18058:	beq	180f4 <main@@Base+0x188>
   1805c:	movw	r1, #42343	; 0xa567
   18060:	movt	r1, #1
   18064:	mov	r0, r6
   18068:	bl	12664 <strcmp@plt>
   1806c:	cmp	r0, #0
   18070:	beq	1812c <main@@Base+0x1c0>
   18074:	movw	r1, #42348	; 0xa56c
   18078:	movt	r1, #1
   1807c:	mov	r0, r6
   18080:	bl	12664 <strcmp@plt>
   18084:	cmp	r0, #0
   18088:	beq	18154 <main@@Base+0x1e8>
   1808c:	movw	r1, #45249	; 0xb0c1
   18090:	movt	r1, #1
   18094:	mov	r0, r6
   18098:	bl	12664 <strcmp@plt>
   1809c:	cmp	r0, #0
   180a0:	bne	181c8 <main@@Base+0x25c>
   180a4:	movw	r0, #53412	; 0xd0a4
   180a8:	movt	r0, #2
   180ac:	mov	r1, #5
   180b0:	str	r1, [r0]
   180b4:	add	r1, r7, #1
   180b8:	sub	r0, r5, r1
   180bc:	add	r1, r4, r1, lsl #2
   180c0:	bl	190e0 <main@@Base+0x1174>
   180c4:	mov	r0, #0
   180c8:	pop	{r4, r5, r6, r7, fp, pc}
   180cc:	movw	r0, #53412	; 0xd0a4
   180d0:	movt	r0, #2
   180d4:	mov	r1, #0
   180d8:	str	r1, [r0]
   180dc:	add	r1, r7, #1
   180e0:	sub	r0, r5, r1
   180e4:	add	r1, r4, r1, lsl #2
   180e8:	bl	181f4 <main@@Base+0x288>
   180ec:	mov	r0, #0
   180f0:	pop	{r4, r5, r6, r7, fp, pc}
   180f4:	movw	r0, #53412	; 0xd0a4
   180f8:	movt	r0, #2
   180fc:	mov	r1, #1
   18100:	str	r1, [r0]
   18104:	add	r1, r7, #1
   18108:	sub	r0, r5, r1
   1810c:	add	r1, r4, r1, lsl #2
   18110:	bl	185a0 <main@@Base+0x634>
   18114:	mov	r0, #0
   18118:	pop	{r4, r5, r6, r7, fp, pc}
   1811c:	ldr	r0, [r4, #8]
   18120:	bl	12784 <coda_set_definition_path@plt>
   18124:	mov	r7, #3
   18128:	b	18028 <main@@Base+0xbc>
   1812c:	movw	r0, #53412	; 0xd0a4
   18130:	movt	r0, #2
   18134:	mov	r1, #3
   18138:	str	r1, [r0]
   1813c:	add	r1, r7, #1
   18140:	sub	r0, r5, r1
   18144:	add	r1, r4, r1, lsl #2
   18148:	bl	18a70 <main@@Base+0xb04>
   1814c:	mov	r0, #0
   18150:	pop	{r4, r5, r6, r7, fp, pc}
   18154:	movw	r0, #53412	; 0xd0a4
   18158:	movt	r0, #2
   1815c:	mov	r1, #4
   18160:	str	r1, [r0]
   18164:	add	r1, r7, #1
   18168:	sub	r0, r5, r1
   1816c:	add	r1, r4, r1, lsl #2
   18170:	bl	18da8 <main@@Base+0xe3c>
   18174:	mov	r0, #0
   18178:	pop	{r4, r5, r6, r7, fp, pc}
   1817c:	bl	19494 <main@@Base+0x1528>
   18180:	mov	r0, #0
   18184:	bl	12868 <exit@plt>
   18188:	bl	19a08 <main@@Base+0x1a9c>
   1818c:	mov	r0, #0
   18190:	bl	12868 <exit@plt>
   18194:	movw	r0, #49584	; 0xc1b0
   18198:	movt	r0, #2
   1819c:	ldr	r4, [r0]
   181a0:	bl	12a60 <coda_get_errno@plt>
   181a4:	ldr	r0, [r0]
   181a8:	bl	12a18 <coda_errno_to_string@plt>
   181ac:	mov	r2, r0
   181b0:	movw	r1, #42286	; 0xa52e
   181b4:	movt	r1, #1
   181b8:	mov	r0, r4
   181bc:	bl	128b0 <fprintf@plt>
   181c0:	mov	r0, #1
   181c4:	bl	12868 <exit@plt>
   181c8:	movw	r0, #49584	; 0xc1b0
   181cc:	movt	r0, #2
   181d0:	ldr	r3, [r0]
   181d4:	movw	r0, #42353	; 0xa571
   181d8:	movt	r0, #1
   181dc:	mov	r1, #25
   181e0:	mov	r2, #1
   181e4:	bl	127cc <fwrite@plt>
   181e8:	bl	19494 <main@@Base+0x1528>
   181ec:	mov	r0, #1
   181f0:	bl	12868 <exit@plt>
   181f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181f8:	add	fp, sp, #28
   181fc:	sub	sp, sp, #12
   18200:	mov	r9, r1
   18204:	mov	r5, r0
   18208:	movw	r0, #49640	; 0xc1e8
   1820c:	movt	r0, #2
   18210:	mov	r8, #0
   18214:	str	r8, [r0, #664]	; 0x298
   18218:	str	r8, [r0]
   1821c:	movw	r0, #49616	; 0xc1d0
   18220:	movt	r0, #2
   18224:	mov	r2, #1
   18228:	mov	r1, #1
   1822c:	str	r1, [sp, #8]
   18230:	str	r2, [r0]
   18234:	movw	r6, #49636	; 0xc1e4
   18238:	movt	r6, #2
   1823c:	str	r8, [r6]
   18240:	movw	r0, #49620	; 0xc1d4
   18244:	movt	r0, #2
   18248:	str	r8, [r0]
   1824c:	movw	r0, #53400	; 0xd098
   18250:	movt	r0, #2
   18254:	str	r8, [r0]
   18258:	movw	r0, #49632	; 0xc1e0
   1825c:	movt	r0, #2
   18260:	str	r8, [r0]
   18264:	movw	r0, #53404	; 0xd09c
   18268:	movt	r0, #2
   1826c:	str	r8, [r0]
   18270:	cmp	r5, #1
   18274:	mov	r7, #1
   18278:	blt	184bc <main@@Base+0x550>
   1827c:	sub	r0, r5, #1
   18280:	str	r0, [sp, #4]
   18284:	mov	r4, #1
   18288:	mov	r7, #1
   1828c:	mov	r0, #1
   18290:	str	r0, [sp, #8]
   18294:	b	182b4 <main@@Base+0x348>
   18298:	movw	r0, #49620	; 0xc1d4
   1829c:	movt	r0, #2
   182a0:	str	r4, [r0]
   182a4:	str	r4, [r6]
   182a8:	add	r8, r8, #1
   182ac:	cmp	r8, r5
   182b0:	bge	184bc <main@@Base+0x550>
   182b4:	ldr	sl, [r9, r8, lsl #2]
   182b8:	mov	r0, sl
   182bc:	movw	r1, #42400	; 0xa5a0
   182c0:	movt	r1, #1
   182c4:	bl	12664 <strcmp@plt>
   182c8:	cmp	r0, #0
   182cc:	beq	182a4 <main@@Base+0x338>
   182d0:	mov	r0, sl
   182d4:	movw	r1, #42746	; 0xa6fa
   182d8:	movt	r1, #1
   182dc:	bl	12664 <strcmp@plt>
   182e0:	cmp	r0, #0
   182e4:	beq	182a4 <main@@Base+0x338>
   182e8:	mov	r0, sl
   182ec:	movw	r1, #42403	; 0xa5a3
   182f0:	movt	r1, #1
   182f4:	bl	12664 <strcmp@plt>
   182f8:	cmp	r0, #0
   182fc:	beq	18440 <main@@Base+0x4d4>
   18300:	mov	r0, sl
   18304:	movw	r1, #42828	; 0xa74c
   18308:	movt	r1, #1
   1830c:	bl	12664 <strcmp@plt>
   18310:	cmp	r0, #0
   18314:	beq	18440 <main@@Base+0x4d4>
   18318:	mov	r4, r6
   1831c:	mov	r0, sl
   18320:	movw	r1, #42406	; 0xa5a6
   18324:	movt	r1, #1
   18328:	bl	12664 <strcmp@plt>
   1832c:	cmp	r0, #0
   18330:	beq	1834c <main@@Base+0x3e0>
   18334:	mov	r0, sl
   18338:	movw	r1, #42409	; 0xa5a9
   1833c:	movt	r1, #1
   18340:	bl	12664 <strcmp@plt>
   18344:	cmp	r0, #0
   18348:	bne	18368 <main@@Base+0x3fc>
   1834c:	add	r6, r8, #1
   18350:	cmp	r6, r5
   18354:	bge	18368 <main@@Base+0x3fc>
   18358:	ldr	r0, [r9, r6, lsl #2]
   1835c:	ldrb	r1, [r0]
   18360:	cmp	r1, #45	; 0x2d
   18364:	bne	18478 <main@@Base+0x50c>
   18368:	mov	r0, sl
   1836c:	movw	r1, #42459	; 0xa5db
   18370:	movt	r1, #1
   18374:	bl	12664 <strcmp@plt>
   18378:	cmp	r0, #0
   1837c:	beq	18448 <main@@Base+0x4dc>
   18380:	mov	r0, sl
   18384:	movw	r1, #43043	; 0xa823
   18388:	movt	r1, #1
   1838c:	bl	12664 <strcmp@plt>
   18390:	cmp	r0, #0
   18394:	beq	18448 <main@@Base+0x4dc>
   18398:	mov	r0, sl
   1839c:	movw	r1, #42462	; 0xa5de
   183a0:	movt	r1, #1
   183a4:	bl	12664 <strcmp@plt>
   183a8:	cmp	r0, #0
   183ac:	mov	r6, r4
   183b0:	beq	18464 <main@@Base+0x4f8>
   183b4:	mov	r0, sl
   183b8:	movw	r1, #43107	; 0xa863
   183bc:	movt	r1, #1
   183c0:	bl	12664 <strcmp@plt>
   183c4:	cmp	r0, #0
   183c8:	beq	18464 <main@@Base+0x4f8>
   183cc:	mov	r0, sl
   183d0:	movw	r1, #43168	; 0xa8a0
   183d4:	movt	r1, #1
   183d8:	bl	12664 <strcmp@plt>
   183dc:	cmp	r0, #0
   183e0:	mov	r4, #1
   183e4:	beq	184a0 <main@@Base+0x534>
   183e8:	mov	r0, sl
   183ec:	movw	r1, #43243	; 0xa8eb
   183f0:	movt	r1, #1
   183f4:	bl	12664 <strcmp@plt>
   183f8:	cmp	r0, #0
   183fc:	beq	18298 <main@@Base+0x32c>
   18400:	mov	r0, sl
   18404:	movw	r1, #43379	; 0xa973
   18408:	movt	r1, #1
   1840c:	bl	12664 <strcmp@plt>
   18410:	cmp	r0, #0
   18414:	beq	184b0 <main@@Base+0x544>
   18418:	ldr	r0, [sp, #4]
   1841c:	cmp	r8, r0
   18420:	bne	18524 <main@@Base+0x5b8>
   18424:	ldrb	r0, [sl]
   18428:	cmp	r0, #45	; 0x2d
   1842c:	beq	18524 <main@@Base+0x5b8>
   18430:	movw	r0, #49640	; 0xc1e8
   18434:	movt	r0, #2
   18438:	str	sl, [r0]
   1843c:	b	182a8 <main@@Base+0x33c>
   18440:	mov	r7, #0
   18444:	b	182a8 <main@@Base+0x33c>
   18448:	movw	r0, #53400	; 0xd098
   1844c:	movt	r0, #2
   18450:	mov	r1, #1
   18454:	str	r1, [r0]
   18458:	mov	r6, r4
   1845c:	mov	r4, #1
   18460:	b	182a8 <main@@Base+0x33c>
   18464:	movw	r0, #49632	; 0xc1e0
   18468:	movt	r0, #2
   1846c:	mov	r4, #1
   18470:	str	r4, [r0]
   18474:	b	182a8 <main@@Base+0x33c>
   18478:	bl	15848 <codadump_filter_create@@Base>
   1847c:	movw	r1, #49640	; 0xc1e8
   18480:	movt	r1, #2
   18484:	str	r0, [r1, #664]	; 0x298
   18488:	cmp	r0, #0
   1848c:	mov	r8, r6
   18490:	mov	r6, r4
   18494:	mov	r4, #1
   18498:	bne	182a8 <main@@Base+0x33c>
   1849c:	b	18540 <main@@Base+0x5d4>
   184a0:	movw	r0, #53404	; 0xd09c
   184a4:	movt	r0, #2
   184a8:	str	r4, [r0]
   184ac:	b	182a8 <main@@Base+0x33c>
   184b0:	mov	r0, #0
   184b4:	str	r0, [sp, #8]
   184b8:	b	182a8 <main@@Base+0x33c>
   184bc:	movw	r0, #49640	; 0xc1e8
   184c0:	movt	r0, #2
   184c4:	ldr	r0, [r0]
   184c8:	cmp	r0, #0
   184cc:	ldrbne	r0, [r0]
   184d0:	cmpne	r0, #0
   184d4:	beq	18524 <main@@Base+0x5b8>
   184d8:	bl	128d4 <coda_init@plt>
   184dc:	cmp	r0, #0
   184e0:	bne	1856c <main@@Base+0x600>
   184e4:	ldr	r0, [sp, #8]
   184e8:	clz	r0, r0
   184ec:	lsr	r0, r0, #5
   184f0:	bl	12718 <coda_set_option_bypass_special_types@plt>
   184f4:	mov	r0, #0
   184f8:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   184fc:	mov	r0, r7
   18500:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18504:	bl	16b88 <traverse_info_init@@Base>
   18508:	bl	145e8 <dim_info_init@@Base>
   1850c:	bl	16be0 <traverse_product@@Base>
   18510:	bl	14608 <dim_info_done@@Base>
   18514:	bl	16ba8 <traverse_info_done@@Base>
   18518:	sub	sp, fp, #28
   1851c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18520:	b	127fc <coda_done@plt>
   18524:	movw	r0, #49584	; 0xc1b0
   18528:	movt	r0, #2
   1852c:	ldr	r3, [r0]
   18530:	movw	r0, #42353	; 0xa571
   18534:	movt	r0, #1
   18538:	mov	r1, #25
   1853c:	b	18558 <main@@Base+0x5ec>
   18540:	movw	r0, #49584	; 0xc1b0
   18544:	movt	r0, #2
   18548:	ldr	r3, [r0]
   1854c:	movw	r0, #42418	; 0xa5b2
   18550:	movt	r0, #1
   18554:	mov	r1, #40	; 0x28
   18558:	mov	r2, #1
   1855c:	bl	127cc <fwrite@plt>
   18560:	bl	19494 <main@@Base+0x1528>
   18564:	mov	r0, #1
   18568:	bl	12868 <exit@plt>
   1856c:	movw	r0, #49584	; 0xc1b0
   18570:	movt	r0, #2
   18574:	ldr	r4, [r0]
   18578:	bl	12a60 <coda_get_errno@plt>
   1857c:	ldr	r0, [r0]
   18580:	bl	12a18 <coda_errno_to_string@plt>
   18584:	mov	r2, r0
   18588:	movw	r1, #42286	; 0xa52e
   1858c:	movt	r1, #1
   18590:	mov	r0, r4
   18594:	bl	128b0 <fprintf@plt>
   18598:	mov	r0, #1
   1859c:	bl	12868 <exit@plt>
   185a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185a4:	add	fp, sp, #28
   185a8:	sub	sp, sp, #12
   185ac:	mov	r4, r1
   185b0:	mov	r5, r0
   185b4:	movw	r0, #49640	; 0xc1e8
   185b8:	movt	r0, #2
   185bc:	mov	r8, #0
   185c0:	str	r8, [r0, #664]	; 0x298
   185c4:	str	r8, [r0]
   185c8:	movw	r0, #49624	; 0xc1d8
   185cc:	movt	r0, #2
   185d0:	str	r8, [r0]
   185d4:	movw	r1, #53396	; 0xd094
   185d8:	movt	r1, #2
   185dc:	movw	r0, #40695	; 0x9ef7
   185e0:	movt	r0, #1
   185e4:	str	r0, [r1]
   185e8:	movw	r0, #49616	; 0xc1d0
   185ec:	movt	r0, #2
   185f0:	mov	r2, #1
   185f4:	str	r2, [r0]
   185f8:	movw	r0, #49636	; 0xc1e4
   185fc:	movt	r0, #2
   18600:	mov	r1, #1
   18604:	str	r1, [sp, #8]
   18608:	str	r2, [r0]
   1860c:	movw	r0, #53408	; 0xd0a0
   18610:	movt	r0, #2
   18614:	str	r8, [r0]
   18618:	movw	r0, #53792	; 0xd220
   1861c:	movt	r0, #2
   18620:	str	r8, [r0]
   18624:	movw	r0, #53796	; 0xd224
   18628:	movt	r0, #2
   1862c:	str	r8, [r0]
   18630:	movw	r0, #49628	; 0xc1dc
   18634:	movt	r0, #2
   18638:	str	r8, [r0]
   1863c:	movw	r0, #49588	; 0xc1b4
   18640:	movt	r0, #2
   18644:	ldr	r0, [r0]
   18648:	movw	r1, #53392	; 0xd090
   1864c:	movt	r1, #2
   18650:	str	r0, [r1]
   18654:	cmp	r5, #1
   18658:	mov	r6, #1
   1865c:	blt	18928 <main@@Base+0x9bc>
   18660:	sub	r0, r5, #1
   18664:	str	r0, [sp, #4]
   18668:	movw	r7, #42403	; 0xa5a3
   1866c:	movt	r7, #1
   18670:	mov	r6, #1
   18674:	mov	r0, #1
   18678:	str	r0, [sp, #8]
   1867c:	ldr	sl, [r4, r8, lsl #2]
   18680:	mov	r0, sl
   18684:	mov	r1, r7
   18688:	bl	12664 <strcmp@plt>
   1868c:	cmp	r0, #0
   18690:	beq	18890 <main@@Base+0x924>
   18694:	mov	r0, sl
   18698:	movw	r1, #42828	; 0xa74c
   1869c:	movt	r1, #1
   186a0:	bl	12664 <strcmp@plt>
   186a4:	cmp	r0, #0
   186a8:	beq	18890 <main@@Base+0x924>
   186ac:	mov	r0, sl
   186b0:	movw	r1, #42406	; 0xa5a6
   186b4:	movt	r1, #1
   186b8:	bl	12664 <strcmp@plt>
   186bc:	cmp	r0, #0
   186c0:	beq	186dc <main@@Base+0x770>
   186c4:	mov	r0, sl
   186c8:	movw	r1, #42409	; 0xa5a9
   186cc:	movt	r1, #1
   186d0:	bl	12664 <strcmp@plt>
   186d4:	cmp	r0, #0
   186d8:	bne	186f8 <main@@Base+0x78c>
   186dc:	add	r9, r8, #1
   186e0:	cmp	r9, r5
   186e4:	bge	186f8 <main@@Base+0x78c>
   186e8:	ldr	r0, [r4, r9, lsl #2]
   186ec:	ldrb	r1, [r0]
   186f0:	cmp	r1, #45	; 0x2d
   186f4:	bne	188b0 <main@@Base+0x944>
   186f8:	mov	r0, sl
   186fc:	movw	r1, #42465	; 0xa5e1
   18700:	movt	r1, #1
   18704:	bl	12664 <strcmp@plt>
   18708:	cmp	r0, #0
   1870c:	beq	18898 <main@@Base+0x92c>
   18710:	mov	r0, sl
   18714:	movw	r1, #43734	; 0xaad6
   18718:	movt	r1, #1
   1871c:	bl	12664 <strcmp@plt>
   18720:	cmp	r0, #0
   18724:	beq	18898 <main@@Base+0x92c>
   18728:	mov	r0, sl
   1872c:	movw	r1, #42468	; 0xa5e4
   18730:	movt	r1, #1
   18734:	bl	12664 <strcmp@plt>
   18738:	cmp	r0, #0
   1873c:	beq	188a4 <main@@Base+0x938>
   18740:	mov	r0, sl
   18744:	movw	r1, #43823	; 0xab2f
   18748:	movt	r1, #1
   1874c:	bl	12664 <strcmp@plt>
   18750:	cmp	r0, #0
   18754:	beq	188a4 <main@@Base+0x938>
   18758:	mov	r0, sl
   1875c:	movw	r1, #42471	; 0xa5e7
   18760:	movt	r1, #1
   18764:	bl	12664 <strcmp@plt>
   18768:	cmp	r0, #0
   1876c:	beq	18788 <main@@Base+0x81c>
   18770:	mov	r0, sl
   18774:	movw	r1, #42474	; 0xa5ea
   18778:	movt	r1, #1
   1877c:	bl	12664 <strcmp@plt>
   18780:	cmp	r0, #0
   18784:	bne	187a4 <main@@Base+0x838>
   18788:	add	r9, r8, #1
   1878c:	cmp	r9, r5
   18790:	bge	187a4 <main@@Base+0x838>
   18794:	ldr	r0, [r4, r9, lsl #2]
   18798:	ldrb	r1, [r0]
   1879c:	cmp	r1, #45	; 0x2d
   187a0:	bne	188fc <main@@Base+0x990>
   187a4:	mov	r0, sl
   187a8:	movw	r1, #42483	; 0xa5f3
   187ac:	movt	r1, #1
   187b0:	bl	12664 <strcmp@plt>
   187b4:	cmp	r0, #0
   187b8:	beq	188cc <main@@Base+0x960>
   187bc:	mov	r0, sl
   187c0:	movw	r1, #44009	; 0xabe9
   187c4:	movt	r1, #1
   187c8:	bl	12664 <strcmp@plt>
   187cc:	cmp	r0, #0
   187d0:	beq	188cc <main@@Base+0x960>
   187d4:	mov	r0, sl
   187d8:	movw	r1, #42486	; 0xa5f6
   187dc:	movt	r1, #1
   187e0:	bl	12664 <strcmp@plt>
   187e4:	cmp	r0, #0
   187e8:	beq	18804 <main@@Base+0x898>
   187ec:	mov	r0, sl
   187f0:	movw	r1, #42489	; 0xa5f9
   187f4:	movt	r1, #1
   187f8:	bl	12664 <strcmp@plt>
   187fc:	cmp	r0, #0
   18800:	bne	18820 <main@@Base+0x8b4>
   18804:	add	r9, r8, #1
   18808:	cmp	r9, r5
   1880c:	bge	18820 <main@@Base+0x8b4>
   18810:	ldr	r0, [r4, r9, lsl #2]
   18814:	ldrb	r1, [r0]
   18818:	cmp	r1, #45	; 0x2d
   1881c:	bne	1890c <main@@Base+0x9a0>
   18820:	mov	r0, sl
   18824:	movw	r1, #42459	; 0xa5db
   18828:	movt	r1, #1
   1882c:	bl	12664 <strcmp@plt>
   18830:	cmp	r0, #0
   18834:	beq	188d8 <main@@Base+0x96c>
   18838:	mov	r0, sl
   1883c:	movw	r1, #44248	; 0xacd8
   18840:	movt	r1, #1
   18844:	bl	12664 <strcmp@plt>
   18848:	cmp	r0, #0
   1884c:	beq	188d8 <main@@Base+0x96c>
   18850:	mov	r0, sl
   18854:	movw	r1, #43379	; 0xa973
   18858:	movt	r1, #1
   1885c:	bl	12664 <strcmp@plt>
   18860:	cmp	r0, #0
   18864:	beq	1891c <main@@Base+0x9b0>
   18868:	ldr	r0, [sp, #4]
   1886c:	cmp	r8, r0
   18870:	bne	189d8 <main@@Base+0xa6c>
   18874:	ldrb	r0, [sl]
   18878:	cmp	r0, #45	; 0x2d
   1887c:	beq	189d8 <main@@Base+0xa6c>
   18880:	movw	r0, #49640	; 0xc1e8
   18884:	movt	r0, #2
   18888:	str	sl, [r0]
   1888c:	b	188e8 <main@@Base+0x97c>
   18890:	mov	r6, #0
   18894:	b	188e8 <main@@Base+0x97c>
   18898:	movw	r0, #53408	; 0xd0a0
   1889c:	movt	r0, #2
   188a0:	b	188e0 <main@@Base+0x974>
   188a4:	movw	r0, #53792	; 0xd220
   188a8:	movt	r0, #2
   188ac:	b	188e0 <main@@Base+0x974>
   188b0:	bl	15848 <codadump_filter_create@@Base>
   188b4:	movw	r1, #49640	; 0xc1e8
   188b8:	movt	r1, #2
   188bc:	str	r0, [r1, #664]	; 0x298
   188c0:	cmp	r0, #0
   188c4:	bne	188ec <main@@Base+0x980>
   188c8:	b	189f4 <main@@Base+0xa88>
   188cc:	movw	r0, #53796	; 0xd224
   188d0:	movt	r0, #2
   188d4:	b	188e0 <main@@Base+0x974>
   188d8:	movw	r0, #49628	; 0xc1dc
   188dc:	movt	r0, #2
   188e0:	mov	r1, #1
   188e4:	str	r1, [r0]
   188e8:	mov	r9, r8
   188ec:	add	r8, r9, #1
   188f0:	cmp	r8, r5
   188f4:	blt	1867c <main@@Base+0x710>
   188f8:	b	18928 <main@@Base+0x9bc>
   188fc:	movw	r1, #49624	; 0xc1d8
   18900:	movt	r1, #2
   18904:	str	r0, [r1]
   18908:	b	188ec <main@@Base+0x980>
   1890c:	movw	r1, #53396	; 0xd094
   18910:	movt	r1, #2
   18914:	str	r0, [r1]
   18918:	b	188ec <main@@Base+0x980>
   1891c:	mov	r0, #0
   18920:	str	r0, [sp, #8]
   18924:	b	188e8 <main@@Base+0x97c>
   18928:	movw	r0, #49640	; 0xc1e8
   1892c:	movt	r0, #2
   18930:	ldr	r0, [r0]
   18934:	cmp	r0, #0
   18938:	ldrbne	r0, [r0]
   1893c:	cmpne	r0, #0
   18940:	beq	189d8 <main@@Base+0xa6c>
   18944:	bl	128d4 <coda_init@plt>
   18948:	cmp	r0, #0
   1894c:	bne	18a20 <main@@Base+0xab4>
   18950:	ldr	r0, [sp, #8]
   18954:	clz	r0, r0
   18958:	lsr	r0, r0, #5
   1895c:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18960:	mov	r0, #0
   18964:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   18968:	mov	r0, r6
   1896c:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18970:	bl	16b88 <traverse_info_init@@Base>
   18974:	bl	145e8 <dim_info_init@@Base>
   18978:	movw	r4, #49624	; 0xc1d8
   1897c:	movt	r4, #2
   18980:	ldr	r0, [r4]
   18984:	cmp	r0, #0
   18988:	movw	r5, #53392	; 0xd090
   1898c:	movt	r5, #2
   18990:	beq	189ac <main@@Base+0xa40>
   18994:	movw	r1, #42508	; 0xa60c
   18998:	movt	r1, #1
   1899c:	bl	12694 <fopen@plt>
   189a0:	str	r0, [r5]
   189a4:	cmp	r0, #0
   189a8:	beq	18a4c <main@@Base+0xae0>
   189ac:	bl	16be0 <traverse_product@@Base>
   189b0:	ldr	r0, [r4]
   189b4:	cmp	r0, #0
   189b8:	beq	189c4 <main@@Base+0xa58>
   189bc:	ldr	r0, [r5]
   189c0:	bl	12958 <fclose@plt>
   189c4:	bl	14608 <dim_info_done@@Base>
   189c8:	bl	16ba8 <traverse_info_done@@Base>
   189cc:	sub	sp, fp, #28
   189d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189d4:	b	127fc <coda_done@plt>
   189d8:	movw	r0, #49584	; 0xc1b0
   189dc:	movt	r0, #2
   189e0:	ldr	r3, [r0]
   189e4:	movw	r0, #42353	; 0xa571
   189e8:	movt	r0, #1
   189ec:	mov	r1, #25
   189f0:	b	18a0c <main@@Base+0xaa0>
   189f4:	movw	r0, #49584	; 0xc1b0
   189f8:	movt	r0, #2
   189fc:	ldr	r3, [r0]
   18a00:	movw	r0, #42418	; 0xa5b2
   18a04:	movt	r0, #1
   18a08:	mov	r1, #40	; 0x28
   18a0c:	mov	r2, #1
   18a10:	bl	127cc <fwrite@plt>
   18a14:	bl	19494 <main@@Base+0x1528>
   18a18:	mov	r0, #1
   18a1c:	bl	12868 <exit@plt>
   18a20:	movw	r0, #49584	; 0xc1b0
   18a24:	movt	r0, #2
   18a28:	ldr	r4, [r0]
   18a2c:	bl	12a60 <coda_get_errno@plt>
   18a30:	ldr	r0, [r0]
   18a34:	bl	12a18 <coda_errno_to_string@plt>
   18a38:	mov	r2, r0
   18a3c:	movw	r1, #42286	; 0xa52e
   18a40:	movt	r1, #1
   18a44:	mov	r0, r4
   18a48:	b	18a64 <main@@Base+0xaf8>
   18a4c:	ldr	r2, [r4]
   18a50:	movw	r0, #49584	; 0xc1b0
   18a54:	movt	r0, #2
   18a58:	ldr	r0, [r0]
   18a5c:	movw	r1, #42510	; 0xa60e
   18a60:	movt	r1, #1
   18a64:	bl	128b0 <fprintf@plt>
   18a68:	mov	r0, #1
   18a6c:	bl	12868 <exit@plt>
   18a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a74:	add	fp, sp, #28
   18a78:	sub	sp, sp, #12
   18a7c:	mov	r6, r1
   18a80:	mov	r7, r0
   18a84:	movw	r0, #49624	; 0xc1d8
   18a88:	movt	r0, #2
   18a8c:	mov	r4, #0
   18a90:	str	r4, [r0]
   18a94:	movw	r0, #49640	; 0xc1e8
   18a98:	movt	r0, #2
   18a9c:	str	r4, [r0]
   18aa0:	movw	r0, #53416	; 0xd0a8
   18aa4:	movt	r0, #2
   18aa8:	str	r4, [r0]
   18aac:	movw	r0, #49588	; 0xc1b4
   18ab0:	movt	r0, #2
   18ab4:	ldr	r0, [r0]
   18ab8:	movw	r1, #53392	; 0xd090
   18abc:	movt	r1, #2
   18ac0:	str	r0, [r1]
   18ac4:	cmp	r7, #1
   18ac8:	blt	18c80 <main@@Base+0xd14>
   18acc:	sub	r0, r7, #1
   18ad0:	str	r0, [sp]
   18ad4:	mov	r0, #1
   18ad8:	str	r0, [sp, #8]
   18adc:	mov	r8, #0
   18ae0:	movw	r5, #42552	; 0xa638
   18ae4:	movt	r5, #1
   18ae8:	movw	r9, #44512	; 0xade0
   18aec:	movt	r9, #1
   18af0:	mov	r4, #0
   18af4:	mov	r0, #1
   18af8:	str	r0, [sp, #4]
   18afc:	ldr	sl, [r6, r8, lsl #2]
   18b00:	mov	r0, sl
   18b04:	mov	r1, r5
   18b08:	bl	12664 <strcmp@plt>
   18b0c:	cmp	r0, #0
   18b10:	beq	18c30 <main@@Base+0xcc4>
   18b14:	mov	r0, sl
   18b18:	mov	r1, r9
   18b1c:	bl	12664 <strcmp@plt>
   18b20:	cmp	r0, #0
   18b24:	beq	18c30 <main@@Base+0xcc4>
   18b28:	mov	r0, sl
   18b2c:	movw	r1, #42403	; 0xa5a3
   18b30:	movt	r1, #1
   18b34:	bl	12664 <strcmp@plt>
   18b38:	cmp	r0, #0
   18b3c:	beq	18c38 <main@@Base+0xccc>
   18b40:	mov	r0, sl
   18b44:	movw	r1, #42828	; 0xa74c
   18b48:	movt	r1, #1
   18b4c:	bl	12664 <strcmp@plt>
   18b50:	cmp	r0, #0
   18b54:	beq	18c38 <main@@Base+0xccc>
   18b58:	mov	r0, sl
   18b5c:	movw	r1, #42471	; 0xa5e7
   18b60:	movt	r1, #1
   18b64:	bl	12664 <strcmp@plt>
   18b68:	cmp	r0, #0
   18b6c:	beq	18b88 <main@@Base+0xc1c>
   18b70:	mov	r0, sl
   18b74:	movw	r1, #42474	; 0xa5ea
   18b78:	movt	r1, #1
   18b7c:	bl	12664 <strcmp@plt>
   18b80:	cmp	r0, #0
   18b84:	bne	18ba4 <main@@Base+0xc38>
   18b88:	add	r0, r8, #1
   18b8c:	cmp	r0, r7
   18b90:	bge	18ba4 <main@@Base+0xc38>
   18b94:	ldr	r1, [r6, r0, lsl #2]
   18b98:	ldrb	r2, [r1]
   18b9c:	cmp	r2, #45	; 0x2d
   18ba0:	bne	18c60 <main@@Base+0xcf4>
   18ba4:	mov	r0, sl
   18ba8:	movw	r1, #42555	; 0xa63b
   18bac:	movt	r1, #1
   18bb0:	bl	12664 <strcmp@plt>
   18bb4:	cmp	r0, #0
   18bb8:	beq	18bd4 <main@@Base+0xc68>
   18bbc:	mov	r0, sl
   18bc0:	movw	r1, #42558	; 0xa63e
   18bc4:	movt	r1, #1
   18bc8:	bl	12664 <strcmp@plt>
   18bcc:	cmp	r0, #0
   18bd0:	bne	18bf0 <main@@Base+0xc84>
   18bd4:	add	r0, r8, #1
   18bd8:	cmp	r0, r7
   18bdc:	bge	18bf0 <main@@Base+0xc84>
   18be0:	ldr	r1, [r6, r0, lsl #2]
   18be4:	ldrb	r2, [r1]
   18be8:	cmp	r2, #45	; 0x2d
   18bec:	bne	18c70 <main@@Base+0xd04>
   18bf0:	mov	r0, sl
   18bf4:	movw	r1, #43379	; 0xa973
   18bf8:	movt	r1, #1
   18bfc:	bl	12664 <strcmp@plt>
   18c00:	cmp	r0, #0
   18c04:	beq	18c54 <main@@Base+0xce8>
   18c08:	ldr	r0, [sp]
   18c0c:	cmp	r8, r0
   18c10:	bne	18cac <main@@Base+0xd40>
   18c14:	ldrb	r0, [sl]
   18c18:	cmp	r0, #45	; 0x2d
   18c1c:	beq	18cac <main@@Base+0xd40>
   18c20:	movw	r0, #49640	; 0xc1e8
   18c24:	movt	r0, #2
   18c28:	str	sl, [r0]
   18c2c:	b	18c40 <main@@Base+0xcd4>
   18c30:	mov	r4, #1
   18c34:	b	18c40 <main@@Base+0xcd4>
   18c38:	mov	r0, #0
   18c3c:	str	r0, [sp, #8]
   18c40:	mov	r0, r8
   18c44:	add	r8, r0, #1
   18c48:	cmp	r8, r7
   18c4c:	blt	18afc <main@@Base+0xb90>
   18c50:	b	18c90 <main@@Base+0xd24>
   18c54:	mov	r0, #0
   18c58:	str	r0, [sp, #4]
   18c5c:	b	18c40 <main@@Base+0xcd4>
   18c60:	movw	r2, #49624	; 0xc1d8
   18c64:	movt	r2, #2
   18c68:	str	r1, [r2]
   18c6c:	b	18c44 <main@@Base+0xcd8>
   18c70:	movw	r2, #53416	; 0xd0a8
   18c74:	movt	r2, #2
   18c78:	str	r1, [r2]
   18c7c:	b	18c44 <main@@Base+0xcd8>
   18c80:	mov	r0, #1
   18c84:	str	r0, [sp, #4]
   18c88:	mov	r0, #1
   18c8c:	str	r0, [sp, #8]
   18c90:	movw	r0, #49640	; 0xc1e8
   18c94:	movt	r0, #2
   18c98:	ldr	r0, [r0]
   18c9c:	cmp	r0, #0
   18ca0:	ldrbne	r0, [r0]
   18ca4:	cmpne	r0, #0
   18ca8:	bne	18cd8 <main@@Base+0xd6c>
   18cac:	movw	r0, #49584	; 0xc1b0
   18cb0:	movt	r0, #2
   18cb4:	ldr	r3, [r0]
   18cb8:	movw	r0, #42353	; 0xa571
   18cbc:	movt	r0, #1
   18cc0:	mov	r1, #25
   18cc4:	mov	r2, #1
   18cc8:	bl	127cc <fwrite@plt>
   18ccc:	bl	19494 <main@@Base+0x1528>
   18cd0:	mov	r0, #1
   18cd4:	bl	12868 <exit@plt>
   18cd8:	bl	128d4 <coda_init@plt>
   18cdc:	cmp	r0, #0
   18ce0:	movw	r5, #49624	; 0xc1d8
   18ce4:	movt	r5, #2
   18ce8:	movw	r6, #53392	; 0xd090
   18cec:	movt	r6, #2
   18cf0:	bne	18d58 <main@@Base+0xdec>
   18cf4:	ldr	r0, [sp, #4]
   18cf8:	clz	r0, r0
   18cfc:	lsr	r0, r0, #5
   18d00:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18d04:	ldr	r0, [sp, #8]
   18d08:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18d0c:	ldr	r0, [r5]
   18d10:	cmp	r0, #0
   18d14:	beq	18d30 <main@@Base+0xdc4>
   18d18:	movw	r1, #42508	; 0xa60c
   18d1c:	movt	r1, #1
   18d20:	bl	12694 <fopen@plt>
   18d24:	str	r0, [r6]
   18d28:	cmp	r0, #0
   18d2c:	beq	18d84 <main@@Base+0xe18>
   18d30:	mov	r0, r4
   18d34:	bl	15d60 <print_json_data@@Base>
   18d38:	ldr	r0, [r5]
   18d3c:	cmp	r0, #0
   18d40:	beq	18d4c <main@@Base+0xde0>
   18d44:	ldr	r0, [r6]
   18d48:	bl	12958 <fclose@plt>
   18d4c:	sub	sp, fp, #28
   18d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d54:	b	127fc <coda_done@plt>
   18d58:	movw	r0, #49584	; 0xc1b0
   18d5c:	movt	r0, #2
   18d60:	ldr	r4, [r0]
   18d64:	bl	12a60 <coda_get_errno@plt>
   18d68:	ldr	r0, [r0]
   18d6c:	bl	12a18 <coda_errno_to_string@plt>
   18d70:	mov	r2, r0
   18d74:	movw	r1, #42286	; 0xa52e
   18d78:	movt	r1, #1
   18d7c:	mov	r0, r4
   18d80:	b	18d9c <main@@Base+0xe30>
   18d84:	ldr	r2, [r5]
   18d88:	movw	r0, #49584	; 0xc1b0
   18d8c:	movt	r0, #2
   18d90:	ldr	r0, [r0]
   18d94:	movw	r1, #42510	; 0xa60e
   18d98:	movt	r1, #1
   18d9c:	bl	128b0 <fprintf@plt>
   18da0:	mov	r0, #1
   18da4:	bl	12868 <exit@plt>
   18da8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18dac:	add	fp, sp, #28
   18db0:	sub	sp, sp, #12
   18db4:	mov	r6, r1
   18db8:	mov	r7, r0
   18dbc:	movw	r0, #49624	; 0xc1d8
   18dc0:	movt	r0, #2
   18dc4:	mov	r4, #0
   18dc8:	str	r4, [r0]
   18dcc:	movw	r0, #49640	; 0xc1e8
   18dd0:	movt	r0, #2
   18dd4:	str	r4, [r0]
   18dd8:	movw	r0, #53416	; 0xd0a8
   18ddc:	movt	r0, #2
   18de0:	str	r4, [r0]
   18de4:	movw	r0, #49588	; 0xc1b4
   18de8:	movt	r0, #2
   18dec:	ldr	r0, [r0]
   18df0:	movw	r1, #53392	; 0xd090
   18df4:	movt	r1, #2
   18df8:	str	r0, [r1]
   18dfc:	cmp	r7, #1
   18e00:	blt	18fb8 <main@@Base+0x104c>
   18e04:	sub	r0, r7, #1
   18e08:	str	r0, [sp]
   18e0c:	mov	r0, #1
   18e10:	str	r0, [sp, #8]
   18e14:	mov	r8, #0
   18e18:	movw	r5, #42552	; 0xa638
   18e1c:	movt	r5, #1
   18e20:	movw	r9, #44512	; 0xade0
   18e24:	movt	r9, #1
   18e28:	mov	r4, #0
   18e2c:	mov	r0, #1
   18e30:	str	r0, [sp, #4]
   18e34:	ldr	sl, [r6, r8, lsl #2]
   18e38:	mov	r0, sl
   18e3c:	mov	r1, r5
   18e40:	bl	12664 <strcmp@plt>
   18e44:	cmp	r0, #0
   18e48:	beq	18f68 <main@@Base+0xffc>
   18e4c:	mov	r0, sl
   18e50:	mov	r1, r9
   18e54:	bl	12664 <strcmp@plt>
   18e58:	cmp	r0, #0
   18e5c:	beq	18f68 <main@@Base+0xffc>
   18e60:	mov	r0, sl
   18e64:	movw	r1, #42403	; 0xa5a3
   18e68:	movt	r1, #1
   18e6c:	bl	12664 <strcmp@plt>
   18e70:	cmp	r0, #0
   18e74:	beq	18f70 <main@@Base+0x1004>
   18e78:	mov	r0, sl
   18e7c:	movw	r1, #42828	; 0xa74c
   18e80:	movt	r1, #1
   18e84:	bl	12664 <strcmp@plt>
   18e88:	cmp	r0, #0
   18e8c:	beq	18f70 <main@@Base+0x1004>
   18e90:	mov	r0, sl
   18e94:	movw	r1, #42471	; 0xa5e7
   18e98:	movt	r1, #1
   18e9c:	bl	12664 <strcmp@plt>
   18ea0:	cmp	r0, #0
   18ea4:	beq	18ec0 <main@@Base+0xf54>
   18ea8:	mov	r0, sl
   18eac:	movw	r1, #42474	; 0xa5ea
   18eb0:	movt	r1, #1
   18eb4:	bl	12664 <strcmp@plt>
   18eb8:	cmp	r0, #0
   18ebc:	bne	18edc <main@@Base+0xf70>
   18ec0:	add	r0, r8, #1
   18ec4:	cmp	r0, r7
   18ec8:	bge	18edc <main@@Base+0xf70>
   18ecc:	ldr	r1, [r6, r0, lsl #2]
   18ed0:	ldrb	r2, [r1]
   18ed4:	cmp	r2, #45	; 0x2d
   18ed8:	bne	18f98 <main@@Base+0x102c>
   18edc:	mov	r0, sl
   18ee0:	movw	r1, #42555	; 0xa63b
   18ee4:	movt	r1, #1
   18ee8:	bl	12664 <strcmp@plt>
   18eec:	cmp	r0, #0
   18ef0:	beq	18f0c <main@@Base+0xfa0>
   18ef4:	mov	r0, sl
   18ef8:	movw	r1, #42558	; 0xa63e
   18efc:	movt	r1, #1
   18f00:	bl	12664 <strcmp@plt>
   18f04:	cmp	r0, #0
   18f08:	bne	18f28 <main@@Base+0xfbc>
   18f0c:	add	r0, r8, #1
   18f10:	cmp	r0, r7
   18f14:	bge	18f28 <main@@Base+0xfbc>
   18f18:	ldr	r1, [r6, r0, lsl #2]
   18f1c:	ldrb	r2, [r1]
   18f20:	cmp	r2, #45	; 0x2d
   18f24:	bne	18fa8 <main@@Base+0x103c>
   18f28:	mov	r0, sl
   18f2c:	movw	r1, #43379	; 0xa973
   18f30:	movt	r1, #1
   18f34:	bl	12664 <strcmp@plt>
   18f38:	cmp	r0, #0
   18f3c:	beq	18f8c <main@@Base+0x1020>
   18f40:	ldr	r0, [sp]
   18f44:	cmp	r8, r0
   18f48:	bne	18fe4 <main@@Base+0x1078>
   18f4c:	ldrb	r0, [sl]
   18f50:	cmp	r0, #45	; 0x2d
   18f54:	beq	18fe4 <main@@Base+0x1078>
   18f58:	movw	r0, #49640	; 0xc1e8
   18f5c:	movt	r0, #2
   18f60:	str	sl, [r0]
   18f64:	b	18f78 <main@@Base+0x100c>
   18f68:	mov	r4, #1
   18f6c:	b	18f78 <main@@Base+0x100c>
   18f70:	mov	r0, #0
   18f74:	str	r0, [sp, #8]
   18f78:	mov	r0, r8
   18f7c:	add	r8, r0, #1
   18f80:	cmp	r8, r7
   18f84:	blt	18e34 <main@@Base+0xec8>
   18f88:	b	18fc8 <main@@Base+0x105c>
   18f8c:	mov	r0, #0
   18f90:	str	r0, [sp, #4]
   18f94:	b	18f78 <main@@Base+0x100c>
   18f98:	movw	r2, #49624	; 0xc1d8
   18f9c:	movt	r2, #2
   18fa0:	str	r1, [r2]
   18fa4:	b	18f7c <main@@Base+0x1010>
   18fa8:	movw	r2, #53416	; 0xd0a8
   18fac:	movt	r2, #2
   18fb0:	str	r1, [r2]
   18fb4:	b	18f7c <main@@Base+0x1010>
   18fb8:	mov	r0, #1
   18fbc:	str	r0, [sp, #4]
   18fc0:	mov	r0, #1
   18fc4:	str	r0, [sp, #8]
   18fc8:	movw	r0, #49640	; 0xc1e8
   18fcc:	movt	r0, #2
   18fd0:	ldr	r0, [r0]
   18fd4:	cmp	r0, #0
   18fd8:	ldrbne	r0, [r0]
   18fdc:	cmpne	r0, #0
   18fe0:	bne	19010 <main@@Base+0x10a4>
   18fe4:	movw	r0, #49584	; 0xc1b0
   18fe8:	movt	r0, #2
   18fec:	ldr	r3, [r0]
   18ff0:	movw	r0, #42353	; 0xa571
   18ff4:	movt	r0, #1
   18ff8:	mov	r1, #25
   18ffc:	mov	r2, #1
   19000:	bl	127cc <fwrite@plt>
   19004:	bl	19494 <main@@Base+0x1528>
   19008:	mov	r0, #1
   1900c:	bl	12868 <exit@plt>
   19010:	bl	128d4 <coda_init@plt>
   19014:	cmp	r0, #0
   19018:	movw	r5, #49624	; 0xc1d8
   1901c:	movt	r5, #2
   19020:	movw	r6, #53392	; 0xd090
   19024:	movt	r6, #2
   19028:	bne	19090 <main@@Base+0x1124>
   1902c:	ldr	r0, [sp, #4]
   19030:	clz	r0, r0
   19034:	lsr	r0, r0, #5
   19038:	bl	12718 <coda_set_option_bypass_special_types@plt>
   1903c:	ldr	r0, [sp, #8]
   19040:	bl	128e0 <coda_set_option_perform_conversions@plt>
   19044:	ldr	r0, [r5]
   19048:	cmp	r0, #0
   1904c:	beq	19068 <main@@Base+0x10fc>
   19050:	movw	r1, #42508	; 0xa60c
   19054:	movt	r1, #1
   19058:	bl	12694 <fopen@plt>
   1905c:	str	r0, [r6]
   19060:	cmp	r0, #0
   19064:	beq	190bc <main@@Base+0x1150>
   19068:	mov	r0, r4
   1906c:	bl	1735c <print_yaml_data@@Base>
   19070:	ldr	r0, [r5]
   19074:	cmp	r0, #0
   19078:	beq	19084 <main@@Base+0x1118>
   1907c:	ldr	r0, [r6]
   19080:	bl	12958 <fclose@plt>
   19084:	sub	sp, fp, #28
   19088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1908c:	b	127fc <coda_done@plt>
   19090:	movw	r0, #49584	; 0xc1b0
   19094:	movt	r0, #2
   19098:	ldr	r4, [r0]
   1909c:	bl	12a60 <coda_get_errno@plt>
   190a0:	ldr	r0, [r0]
   190a4:	bl	12a18 <coda_errno_to_string@plt>
   190a8:	mov	r2, r0
   190ac:	movw	r1, #42286	; 0xa52e
   190b0:	movt	r1, #1
   190b4:	mov	r0, r4
   190b8:	b	190d4 <main@@Base+0x1168>
   190bc:	ldr	r2, [r5]
   190c0:	movw	r0, #49584	; 0xc1b0
   190c4:	movt	r0, #2
   190c8:	ldr	r0, [r0]
   190cc:	movw	r1, #42510	; 0xa60e
   190d0:	movt	r1, #1
   190d4:	bl	128b0 <fprintf@plt>
   190d8:	mov	r0, #1
   190dc:	bl	12868 <exit@plt>
   190e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190e4:	add	fp, sp, #28
   190e8:	sub	sp, sp, #20
   190ec:	mov	r5, r1
   190f0:	mov	r6, r0
   190f4:	movw	r0, #49624	; 0xc1d8
   190f8:	movt	r0, #2
   190fc:	mov	r1, #0
   19100:	str	r1, [r0]
   19104:	movw	r0, #49640	; 0xc1e8
   19108:	movt	r0, #2
   1910c:	str	r1, [r0]
   19110:	movw	r0, #53416	; 0xd0a8
   19114:	movt	r0, #2
   19118:	str	r1, [r0]
   1911c:	movw	r0, #49588	; 0xc1b4
   19120:	movt	r0, #2
   19124:	ldr	r0, [r0]
   19128:	movw	r1, #53392	; 0xd090
   1912c:	movt	r1, #2
   19130:	str	r0, [r1]
   19134:	cmp	r6, #1
   19138:	blt	19354 <main@@Base+0x13e8>
   1913c:	sub	r0, r6, #1
   19140:	str	r0, [sp, #16]
   19144:	mov	sl, #0
   19148:	mov	r7, #1
   1914c:	movw	r4, #42403	; 0xa5a3
   19150:	movt	r4, #1
   19154:	mov	r0, #0
   19158:	str	r0, [sp, #8]
   1915c:	mov	r0, #0
   19160:	str	r0, [sp, #4]
   19164:	mov	r0, #0
   19168:	str	r0, [sp, #12]
   1916c:	b	19184 <main@@Base+0x1218>
   19170:	mov	r7, #0
   19174:	mov	r8, sl
   19178:	add	sl, r8, #1
   1917c:	cmp	sl, r6
   19180:	bge	19370 <main@@Base+0x1404>
   19184:	ldr	r9, [r5, sl, lsl #2]
   19188:	mov	r0, r9
   1918c:	mov	r1, r4
   19190:	bl	12664 <strcmp@plt>
   19194:	cmp	r0, #0
   19198:	beq	19170 <main@@Base+0x1204>
   1919c:	mov	r0, r9
   191a0:	movw	r1, #45414	; 0xb166
   191a4:	movt	r1, #1
   191a8:	bl	12664 <strcmp@plt>
   191ac:	cmp	r0, #0
   191b0:	beq	19170 <main@@Base+0x1204>
   191b4:	mov	r0, r9
   191b8:	movw	r1, #42471	; 0xa5e7
   191bc:	movt	r1, #1
   191c0:	bl	12664 <strcmp@plt>
   191c4:	cmp	r0, #0
   191c8:	beq	191e4 <main@@Base+0x1278>
   191cc:	mov	r0, r9
   191d0:	movw	r1, #42474	; 0xa5ea
   191d4:	movt	r1, #1
   191d8:	bl	12664 <strcmp@plt>
   191dc:	cmp	r0, #0
   191e0:	bne	19200 <main@@Base+0x1294>
   191e4:	add	r8, sl, #1
   191e8:	cmp	r8, r6
   191ec:	bge	19200 <main@@Base+0x1294>
   191f0:	ldr	r0, [r5, r8, lsl #2]
   191f4:	ldrb	r1, [r0]
   191f8:	cmp	r1, #45	; 0x2d
   191fc:	bne	19300 <main@@Base+0x1394>
   19200:	mov	r0, r9
   19204:	movw	r1, #42555	; 0xa63b
   19208:	movt	r1, #1
   1920c:	bl	12664 <strcmp@plt>
   19210:	cmp	r0, #0
   19214:	beq	19230 <main@@Base+0x12c4>
   19218:	mov	r0, r9
   1921c:	movw	r1, #42558	; 0xa63e
   19220:	movt	r1, #1
   19224:	bl	12664 <strcmp@plt>
   19228:	cmp	r0, #0
   1922c:	bne	1924c <main@@Base+0x12e0>
   19230:	add	r8, sl, #1
   19234:	cmp	r8, r6
   19238:	bge	1924c <main@@Base+0x12e0>
   1923c:	ldr	r0, [r5, r8, lsl #2]
   19240:	ldrb	r1, [r0]
   19244:	cmp	r1, #45	; 0x2d
   19248:	bne	19310 <main@@Base+0x13a4>
   1924c:	mov	r0, r9
   19250:	movw	r1, #42565	; 0xa645
   19254:	movt	r1, #1
   19258:	bl	12664 <strcmp@plt>
   1925c:	cmp	r0, #0
   19260:	bne	19280 <main@@Base+0x1314>
   19264:	add	r8, sl, #1
   19268:	cmp	r8, r6
   1926c:	bge	19280 <main@@Base+0x1314>
   19270:	ldr	r0, [r5, r8, lsl #2]
   19274:	ldrb	r1, [r0]
   19278:	cmp	r1, #45	; 0x2d
   1927c:	bne	19320 <main@@Base+0x13b4>
   19280:	mov	r0, r9
   19284:	movw	r1, #42577	; 0xa651
   19288:	movt	r1, #1
   1928c:	bl	12664 <strcmp@plt>
   19290:	cmp	r0, #0
   19294:	bne	192d8 <main@@Base+0x136c>
   19298:	add	r8, sl, #3
   1929c:	cmp	r8, r6
   192a0:	bge	192d8 <main@@Base+0x136c>
   192a4:	add	r0, r5, sl, lsl #2
   192a8:	ldr	r2, [r0, #4]
   192ac:	ldrb	r1, [r2]
   192b0:	cmp	r1, #45	; 0x2d
   192b4:	beq	192d8 <main@@Base+0x136c>
   192b8:	ldr	r3, [r0, #8]
   192bc:	ldrb	r0, [r3]
   192c0:	cmp	r0, #45	; 0x2d
   192c4:	beq	192d8 <main@@Base+0x136c>
   192c8:	ldr	r0, [r5, r8, lsl #2]
   192cc:	ldrb	r1, [r0]
   192d0:	cmp	r1, #45	; 0x2d
   192d4:	bne	19334 <main@@Base+0x13c8>
   192d8:	ldr	r0, [sp, #16]
   192dc:	cmp	sl, r0
   192e0:	bne	1938c <main@@Base+0x1420>
   192e4:	ldrb	r0, [r9]
   192e8:	cmp	r0, #45	; 0x2d
   192ec:	beq	1938c <main@@Base+0x1420>
   192f0:	movw	r0, #49640	; 0xc1e8
   192f4:	movt	r0, #2
   192f8:	str	r9, [r0]
   192fc:	b	19174 <main@@Base+0x1208>
   19300:	movw	r1, #49624	; 0xc1d8
   19304:	movt	r1, #2
   19308:	str	r0, [r1]
   1930c:	b	19178 <main@@Base+0x120c>
   19310:	movw	r1, #53416	; 0xd0a8
   19314:	movt	r1, #2
   19318:	str	r0, [r1]
   1931c:	b	19178 <main@@Base+0x120c>
   19320:	bl	12a0c <atoi@plt>
   19324:	movw	r1, #49580	; 0xc1ac
   19328:	movt	r1, #2
   1932c:	str	r0, [r1]
   19330:	b	19178 <main@@Base+0x120c>
   19334:	mov	r9, r2
   19338:	mov	sl, r3
   1933c:	bl	12a0c <atoi@plt>
   19340:	str	r0, [sp, #8]
   19344:	str	r9, [sp, #12]
   19348:	mov	r0, sl
   1934c:	str	sl, [sp, #4]
   19350:	b	19178 <main@@Base+0x120c>
   19354:	mov	r0, #0
   19358:	str	r0, [sp, #12]
   1935c:	mov	r7, #1
   19360:	mov	r0, #0
   19364:	str	r0, [sp, #4]
   19368:	mov	r0, #0
   1936c:	str	r0, [sp, #8]
   19370:	movw	r0, #49640	; 0xc1e8
   19374:	movt	r0, #2
   19378:	ldr	r0, [r0]
   1937c:	cmp	r0, #0
   19380:	ldrbne	r0, [r0]
   19384:	cmpne	r0, #0
   19388:	bne	193b8 <main@@Base+0x144c>
   1938c:	movw	r0, #49584	; 0xc1b0
   19390:	movt	r0, #2
   19394:	ldr	r3, [r0]
   19398:	movw	r0, #42353	; 0xa571
   1939c:	movt	r0, #1
   193a0:	mov	r1, #25
   193a4:	mov	r2, #1
   193a8:	bl	127cc <fwrite@plt>
   193ac:	bl	19494 <main@@Base+0x1528>
   193b0:	mov	r0, #1
   193b4:	bl	12868 <exit@plt>
   193b8:	bl	128d4 <coda_init@plt>
   193bc:	cmp	r0, #0
   193c0:	bne	1943c <main@@Base+0x14d0>
   193c4:	mov	r0, #0
   193c8:	bl	128e0 <coda_set_option_perform_conversions@plt>
   193cc:	mov	r0, r7
   193d0:	bl	12634 <coda_set_option_use_fast_size_expressions@plt>
   193d4:	movw	r0, #49624	; 0xc1d8
   193d8:	movt	r0, #2
   193dc:	ldr	r0, [r0]
   193e0:	cmp	r0, #0
   193e4:	movw	r4, #53392	; 0xd090
   193e8:	movt	r4, #2
   193ec:	beq	19408 <main@@Base+0x149c>
   193f0:	movw	r1, #42508	; 0xa60c
   193f4:	movt	r1, #1
   193f8:	bl	12694 <fopen@plt>
   193fc:	str	r0, [r4]
   19400:	cmp	r0, #0
   19404:	beq	19468 <main@@Base+0x14fc>
   19408:	ldr	r0, [sp, #12]
   1940c:	ldmib	sp, {r1, r2}
   19410:	bl	1369c <print_debug_data@@Base>
   19414:	movw	r0, #49624	; 0xc1d8
   19418:	movt	r0, #2
   1941c:	ldr	r0, [r0]
   19420:	cmp	r0, #0
   19424:	beq	19430 <main@@Base+0x14c4>
   19428:	ldr	r0, [r4]
   1942c:	bl	12958 <fclose@plt>
   19430:	sub	sp, fp, #28
   19434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19438:	b	127fc <coda_done@plt>
   1943c:	movw	r0, #49584	; 0xc1b0
   19440:	movt	r0, #2
   19444:	ldr	r4, [r0]
   19448:	bl	12a60 <coda_get_errno@plt>
   1944c:	ldr	r0, [r0]
   19450:	bl	12a18 <coda_errno_to_string@plt>
   19454:	mov	r2, r0
   19458:	movw	r1, #42286	; 0xa52e
   1945c:	movt	r1, #1
   19460:	mov	r0, r4
   19464:	b	19488 <main@@Base+0x151c>
   19468:	movw	r0, #49624	; 0xc1d8
   1946c:	movt	r0, #2
   19470:	ldr	r2, [r0]
   19474:	movw	r0, #49584	; 0xc1b0
   19478:	movt	r0, #2
   1947c:	ldr	r0, [r0]
   19480:	movw	r1, #42510	; 0xa60e
   19484:	movt	r1, #1
   19488:	bl	128b0 <fprintf@plt>
   1948c:	mov	r0, #1
   19490:	bl	12868 <exit@plt>
   19494:	push	{fp, lr}
   19498:	mov	fp, sp
   1949c:	movw	r0, #42587	; 0xa65b
   194a0:	movt	r0, #1
   194a4:	bl	12808 <puts@plt>
   194a8:	movw	r0, #42594	; 0xa662
   194ac:	movt	r0, #1
   194b0:	bl	12808 <puts@plt>
   194b4:	movw	r0, #42664	; 0xa6a8
   194b8:	movt	r0, #1
   194bc:	bl	12808 <puts@plt>
   194c0:	movw	r0, #42708	; 0xa6d4
   194c4:	movt	r0, #1
   194c8:	bl	12808 <puts@plt>
   194cc:	movw	r0, #42730	; 0xa6ea
   194d0:	movt	r0, #1
   194d4:	bl	12808 <puts@plt>
   194d8:	movw	r0, #42757	; 0xa705
   194dc:	movt	r0, #1
   194e0:	bl	12808 <puts@plt>
   194e4:	movw	r0, #42812	; 0xa73c
   194e8:	movt	r0, #1
   194ec:	bl	12808 <puts@plt>
   194f0:	movw	r0, #42850	; 0xa762
   194f4:	movt	r0, #1
   194f8:	bl	12808 <puts@plt>
   194fc:	movw	r0, #42908	; 0xa79c
   19500:	movt	r0, #1
   19504:	bl	12808 <puts@plt>
   19508:	movw	r0, #42955	; 0xa7cb
   1950c:	movt	r0, #1
   19510:	bl	12808 <puts@plt>
   19514:	movw	r0, #43027	; 0xa813
   19518:	movt	r0, #1
   1951c:	bl	12808 <puts@plt>
   19520:	movw	r0, #43050	; 0xa82a
   19524:	movt	r0, #1
   19528:	bl	12808 <puts@plt>
   1952c:	movw	r0, #43091	; 0xa853
   19530:	movt	r0, #1
   19534:	bl	12808 <puts@plt>
   19538:	movw	r0, #43114	; 0xa86a
   1953c:	movt	r0, #1
   19540:	bl	12808 <puts@plt>
   19544:	movw	r0, #43156	; 0xa894
   19548:	movt	r0, #1
   1954c:	bl	12808 <puts@plt>
   19550:	movw	r0, #43182	; 0xa8ae
   19554:	movt	r0, #1
   19558:	bl	12808 <puts@plt>
   1955c:	movw	r0, #43231	; 0xa8df
   19560:	movt	r0, #1
   19564:	bl	12808 <puts@plt>
   19568:	movw	r0, #43256	; 0xa8f8
   1956c:	movt	r0, #1
   19570:	bl	12808 <puts@plt>
   19574:	movw	r0, #43326	; 0xa93e
   19578:	movt	r0, #1
   1957c:	bl	12808 <puts@plt>
   19580:	movw	r0, #43367	; 0xa967
   19584:	movt	r0, #1
   19588:	bl	12808 <puts@plt>
   1958c:	movw	r0, #43398	; 0xa986
   19590:	movt	r0, #1
   19594:	bl	12808 <puts@plt>
   19598:	movw	r0, #43478	; 0xa9d6
   1959c:	movt	r0, #1
   195a0:	bl	12808 <puts@plt>
   195a4:	movw	r0, #43556	; 0xaa24
   195a8:	movt	r0, #1
   195ac:	bl	12808 <puts@plt>
   195b0:	mov	r0, #10
   195b4:	bl	12910 <putchar@plt>
   195b8:	movw	r0, #43586	; 0xaa42
   195bc:	movt	r0, #1
   195c0:	bl	12808 <puts@plt>
   195c4:	movw	r0, #43658	; 0xaa8a
   195c8:	movt	r0, #1
   195cc:	bl	12808 <puts@plt>
   195d0:	movw	r0, #42708	; 0xa6d4
   195d4:	movt	r0, #1
   195d8:	bl	12808 <puts@plt>
   195dc:	movw	r0, #42812	; 0xa73c
   195e0:	movt	r0, #1
   195e4:	bl	12808 <puts@plt>
   195e8:	movw	r0, #42850	; 0xa762
   195ec:	movt	r0, #1
   195f0:	bl	12808 <puts@plt>
   195f4:	movw	r0, #42908	; 0xa79c
   195f8:	movt	r0, #1
   195fc:	bl	12808 <puts@plt>
   19600:	movw	r0, #42955	; 0xa7cb
   19604:	movt	r0, #1
   19608:	bl	12808 <puts@plt>
   1960c:	movw	r0, #43718	; 0xaac6
   19610:	movt	r0, #1
   19614:	bl	12808 <puts@plt>
   19618:	movw	r0, #43742	; 0xaade
   1961c:	movt	r0, #1
   19620:	bl	12808 <puts@plt>
   19624:	movw	r0, #43807	; 0xab1f
   19628:	movt	r0, #1
   1962c:	bl	12808 <puts@plt>
   19630:	movw	r0, #43831	; 0xab37
   19634:	movt	r0, #1
   19638:	bl	12808 <puts@plt>
   1963c:	movw	r0, #43906	; 0xab82
   19640:	movt	r0, #1
   19644:	bl	12808 <puts@plt>
   19648:	movw	r0, #43942	; 0xaba6
   1964c:	movt	r0, #1
   19650:	bl	12808 <puts@plt>
   19654:	movw	r0, #43993	; 0xabd9
   19658:	movt	r0, #1
   1965c:	bl	12808 <puts@plt>
   19660:	movw	r0, #44025	; 0xabf9
   19664:	movt	r0, #1
   19668:	bl	12808 <puts@plt>
   1966c:	movw	r0, #44100	; 0xac44
   19670:	movt	r0, #1
   19674:	bl	12808 <puts@plt>
   19678:	movw	r0, #44156	; 0xac7c
   1967c:	movt	r0, #1
   19680:	bl	12808 <puts@plt>
   19684:	movw	r0, #44232	; 0xacc8
   19688:	movt	r0, #1
   1968c:	bl	12808 <puts@plt>
   19690:	movw	r0, #44265	; 0xace9
   19694:	movt	r0, #1
   19698:	bl	12808 <puts@plt>
   1969c:	movw	r0, #43367	; 0xa967
   196a0:	movt	r0, #1
   196a4:	bl	12808 <puts@plt>
   196a8:	movw	r0, #43398	; 0xa986
   196ac:	movt	r0, #1
   196b0:	bl	12808 <puts@plt>
   196b4:	movw	r0, #43478	; 0xa9d6
   196b8:	movt	r0, #1
   196bc:	bl	12808 <puts@plt>
   196c0:	movw	r0, #43556	; 0xaa24
   196c4:	movt	r0, #1
   196c8:	bl	12808 <puts@plt>
   196cc:	mov	r0, #10
   196d0:	bl	12910 <putchar@plt>
   196d4:	movw	r0, #44344	; 0xad38
   196d8:	movt	r0, #1
   196dc:	bl	12808 <puts@plt>
   196e0:	movw	r0, #44414	; 0xad7e
   196e4:	movt	r0, #1
   196e8:	bl	12808 <puts@plt>
   196ec:	movw	r0, #44474	; 0xadba
   196f0:	movt	r0, #1
   196f4:	bl	12808 <puts@plt>
   196f8:	movw	r0, #44496	; 0xadd0
   196fc:	movt	r0, #1
   19700:	bl	12808 <puts@plt>
   19704:	movw	r0, #44525	; 0xaded
   19708:	movt	r0, #1
   1970c:	bl	12808 <puts@plt>
   19710:	movw	r0, #44596	; 0xae34
   19714:	movt	r0, #1
   19718:	bl	12808 <puts@plt>
   1971c:	movw	r0, #42812	; 0xa73c
   19720:	movt	r0, #1
   19724:	bl	12808 <puts@plt>
   19728:	movw	r0, #42850	; 0xa762
   1972c:	movt	r0, #1
   19730:	bl	12808 <puts@plt>
   19734:	movw	r0, #43906	; 0xab82
   19738:	movt	r0, #1
   1973c:	bl	12808 <puts@plt>
   19740:	movw	r0, #43942	; 0xaba6
   19744:	movt	r0, #1
   19748:	bl	12808 <puts@plt>
   1974c:	movw	r0, #44671	; 0xae7f
   19750:	movt	r0, #1
   19754:	bl	12808 <puts@plt>
   19758:	movw	r0, #44701	; 0xae9d
   1975c:	movt	r0, #1
   19760:	bl	12808 <puts@plt>
   19764:	movw	r0, #44773	; 0xaee5
   19768:	movt	r0, #1
   1976c:	bl	12808 <puts@plt>
   19770:	movw	r0, #43367	; 0xa967
   19774:	movt	r0, #1
   19778:	bl	12808 <puts@plt>
   1977c:	movw	r0, #43398	; 0xa986
   19780:	movt	r0, #1
   19784:	bl	12808 <puts@plt>
   19788:	movw	r0, #43478	; 0xa9d6
   1978c:	movt	r0, #1
   19790:	bl	12808 <puts@plt>
   19794:	movw	r0, #43556	; 0xaa24
   19798:	movt	r0, #1
   1979c:	bl	12808 <puts@plt>
   197a0:	mov	r0, #10
   197a4:	bl	12910 <putchar@plt>
   197a8:	movw	r0, #44850	; 0xaf32
   197ac:	movt	r0, #1
   197b0:	bl	12808 <puts@plt>
   197b4:	movw	r0, #44920	; 0xaf78
   197b8:	movt	r0, #1
   197bc:	bl	12808 <puts@plt>
   197c0:	movw	r0, #44980	; 0xafb4
   197c4:	movt	r0, #1
   197c8:	bl	12808 <puts@plt>
   197cc:	movw	r0, #44496	; 0xadd0
   197d0:	movt	r0, #1
   197d4:	bl	12808 <puts@plt>
   197d8:	movw	r0, #44525	; 0xaded
   197dc:	movt	r0, #1
   197e0:	bl	12808 <puts@plt>
   197e4:	movw	r0, #45002	; 0xafca
   197e8:	movt	r0, #1
   197ec:	bl	12808 <puts@plt>
   197f0:	movw	r0, #45078	; 0xb016
   197f4:	movt	r0, #1
   197f8:	bl	12808 <puts@plt>
   197fc:	movw	r0, #42812	; 0xa73c
   19800:	movt	r0, #1
   19804:	bl	12808 <puts@plt>
   19808:	movw	r0, #42850	; 0xa762
   1980c:	movt	r0, #1
   19810:	bl	12808 <puts@plt>
   19814:	movw	r0, #43906	; 0xab82
   19818:	movt	r0, #1
   1981c:	bl	12808 <puts@plt>
   19820:	movw	r0, #43942	; 0xaba6
   19824:	movt	r0, #1
   19828:	bl	12808 <puts@plt>
   1982c:	movw	r0, #44671	; 0xae7f
   19830:	movt	r0, #1
   19834:	bl	12808 <puts@plt>
   19838:	movw	r0, #44701	; 0xae9d
   1983c:	movt	r0, #1
   19840:	bl	12808 <puts@plt>
   19844:	movw	r0, #44773	; 0xaee5
   19848:	movt	r0, #1
   1984c:	bl	12808 <puts@plt>
   19850:	movw	r0, #43367	; 0xa967
   19854:	movt	r0, #1
   19858:	bl	12808 <puts@plt>
   1985c:	movw	r0, #43398	; 0xa986
   19860:	movt	r0, #1
   19864:	bl	12808 <puts@plt>
   19868:	movw	r0, #43478	; 0xa9d6
   1986c:	movt	r0, #1
   19870:	bl	12808 <puts@plt>
   19874:	movw	r0, #43556	; 0xaa24
   19878:	movt	r0, #1
   1987c:	bl	12808 <puts@plt>
   19880:	mov	r0, #10
   19884:	bl	12910 <putchar@plt>
   19888:	movw	r0, #45109	; 0xb035
   1988c:	movt	r0, #1
   19890:	bl	12808 <puts@plt>
   19894:	movw	r0, #45181	; 0xb07d
   19898:	movt	r0, #1
   1989c:	bl	12808 <puts@plt>
   198a0:	movw	r0, #45255	; 0xb0c7
   198a4:	movt	r0, #1
   198a8:	bl	12808 <puts@plt>
   198ac:	movw	r0, #45329	; 0xb111
   198b0:	movt	r0, #1
   198b4:	bl	12808 <puts@plt>
   198b8:	movw	r0, #45375	; 0xb13f
   198bc:	movt	r0, #1
   198c0:	bl	12808 <puts@plt>
   198c4:	movw	r0, #45398	; 0xb156
   198c8:	movt	r0, #1
   198cc:	bl	12808 <puts@plt>
   198d0:	movw	r0, #45446	; 0xb186
   198d4:	movt	r0, #1
   198d8:	bl	12808 <puts@plt>
   198dc:	movw	r0, #43906	; 0xab82
   198e0:	movt	r0, #1
   198e4:	bl	12808 <puts@plt>
   198e8:	movw	r0, #43942	; 0xaba6
   198ec:	movt	r0, #1
   198f0:	bl	12808 <puts@plt>
   198f4:	movw	r0, #44671	; 0xae7f
   198f8:	movt	r0, #1
   198fc:	bl	12808 <puts@plt>
   19900:	movw	r0, #44701	; 0xae9d
   19904:	movt	r0, #1
   19908:	bl	12808 <puts@plt>
   1990c:	movw	r0, #44773	; 0xaee5
   19910:	movt	r0, #1
   19914:	bl	12808 <puts@plt>
   19918:	movw	r0, #45499	; 0xb1bb
   1991c:	movt	r0, #1
   19920:	bl	12808 <puts@plt>
   19924:	movw	r0, #45531	; 0xb1db
   19928:	movt	r0, #1
   1992c:	bl	12808 <puts@plt>
   19930:	movw	r0, #45609	; 0xb229
   19934:	movt	r0, #1
   19938:	bl	12808 <puts@plt>
   1993c:	movw	r0, #45684	; 0xb274
   19940:	movt	r0, #1
   19944:	bl	12808 <puts@plt>
   19948:	movw	r0, #45747	; 0xb2b3
   1994c:	movt	r0, #1
   19950:	bl	12808 <puts@plt>
   19954:	movw	r0, #45824	; 0xb300
   19958:	movt	r0, #1
   1995c:	bl	12808 <puts@plt>
   19960:	mov	r0, #10
   19964:	bl	12910 <putchar@plt>
   19968:	movw	r0, #45877	; 0xb335
   1996c:	movt	r0, #1
   19970:	bl	12808 <puts@plt>
   19974:	movw	r0, #45901	; 0xb34d
   19978:	movt	r0, #1
   1997c:	bl	12808 <puts@plt>
   19980:	mov	r0, #10
   19984:	bl	12910 <putchar@plt>
   19988:	movw	r0, #45931	; 0xb36b
   1998c:	movt	r0, #1
   19990:	bl	12808 <puts@plt>
   19994:	movw	r0, #45958	; 0xb386
   19998:	movt	r0, #1
   1999c:	bl	12808 <puts@plt>
   199a0:	mov	r0, #10
   199a4:	bl	12910 <putchar@plt>
   199a8:	movw	r0, #46008	; 0xb3b8
   199ac:	movt	r0, #1
   199b0:	bl	12808 <puts@plt>
   199b4:	movw	r0, #46086	; 0xb406
   199b8:	movt	r0, #1
   199bc:	bl	12808 <puts@plt>
   199c0:	movw	r0, #46159	; 0xb44f
   199c4:	movt	r0, #1
   199c8:	bl	12808 <puts@plt>
   199cc:	movw	r0, #46202	; 0xb47a
   199d0:	movt	r0, #1
   199d4:	bl	12808 <puts@plt>
   199d8:	movw	r0, #46278	; 0xb4c6
   199dc:	movt	r0, #1
   199e0:	bl	12808 <puts@plt>
   199e4:	movw	r0, #46348	; 0xb50c
   199e8:	movt	r0, #1
   199ec:	bl	12808 <puts@plt>
   199f0:	movw	r0, #46411	; 0xb54b
   199f4:	movt	r0, #1
   199f8:	bl	12808 <puts@plt>
   199fc:	mov	r0, #10
   19a00:	pop	{fp, lr}
   19a04:	b	12910 <putchar@plt>
   19a08:	push	{fp, lr}
   19a0c:	mov	fp, sp
   19a10:	bl	12a54 <coda_get_libcoda_version@plt>
   19a14:	mov	r1, r0
   19a18:	movw	r0, #42379	; 0xa58b
   19a1c:	movt	r0, #1
   19a20:	bl	1267c <printf@plt>
   19a24:	movw	r0, #46475	; 0xb58b
   19a28:	movt	r0, #1
   19a2c:	bl	12808 <puts@plt>
   19a30:	mov	r0, #10
   19a34:	pop	{fp, lr}
   19a38:	b	12910 <putchar@plt>
   19a3c:	cmp	r3, #0
   19a40:	cmpeq	r2, #0
   19a44:	bne	19a68 <main@@Base+0x1afc>
   19a48:	cmp	r1, #0
   19a4c:	movlt	r1, #-2147483648	; 0x80000000
   19a50:	movlt	r0, #0
   19a54:	blt	19a64 <main@@Base+0x1af8>
   19a58:	cmpeq	r0, #0
   19a5c:	mvnne	r1, #-2147483648	; 0x80000000
   19a60:	mvnne	r0, #0
   19a64:	b	19b10 <main@@Base+0x1ba4>
   19a68:	sub	sp, sp, #8
   19a6c:	push	{sp, lr}
   19a70:	cmp	r1, #0
   19a74:	blt	19a94 <main@@Base+0x1b28>
   19a78:	cmp	r3, #0
   19a7c:	blt	19ac8 <main@@Base+0x1b5c>
   19a80:	bl	19b20 <main@@Base+0x1bb4>
   19a84:	ldr	lr, [sp, #4]
   19a88:	add	sp, sp, #8
   19a8c:	pop	{r2, r3}
   19a90:	bx	lr
   19a94:	rsbs	r0, r0, #0
   19a98:	sbc	r1, r1, r1, lsl #1
   19a9c:	cmp	r3, #0
   19aa0:	blt	19aec <main@@Base+0x1b80>
   19aa4:	bl	19b20 <main@@Base+0x1bb4>
   19aa8:	ldr	lr, [sp, #4]
   19aac:	add	sp, sp, #8
   19ab0:	pop	{r2, r3}
   19ab4:	rsbs	r0, r0, #0
   19ab8:	sbc	r1, r1, r1, lsl #1
   19abc:	rsbs	r2, r2, #0
   19ac0:	sbc	r3, r3, r3, lsl #1
   19ac4:	bx	lr
   19ac8:	rsbs	r2, r2, #0
   19acc:	sbc	r3, r3, r3, lsl #1
   19ad0:	bl	19b20 <main@@Base+0x1bb4>
   19ad4:	ldr	lr, [sp, #4]
   19ad8:	add	sp, sp, #8
   19adc:	pop	{r2, r3}
   19ae0:	rsbs	r0, r0, #0
   19ae4:	sbc	r1, r1, r1, lsl #1
   19ae8:	bx	lr
   19aec:	rsbs	r2, r2, #0
   19af0:	sbc	r3, r3, r3, lsl #1
   19af4:	bl	19b20 <main@@Base+0x1bb4>
   19af8:	ldr	lr, [sp, #4]
   19afc:	add	sp, sp, #8
   19b00:	pop	{r2, r3}
   19b04:	rsbs	r2, r2, #0
   19b08:	sbc	r3, r3, r3, lsl #1
   19b0c:	bx	lr
   19b10:	push	{r1, lr}
   19b14:	mov	r0, #8
   19b18:	bl	12640 <raise@plt>
   19b1c:	pop	{r1, pc}
   19b20:	cmp	r1, r3
   19b24:	cmpeq	r0, r2
   19b28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b2c:	mov	r4, r0
   19b30:	movcc	r0, #0
   19b34:	mov	r5, r1
   19b38:	ldr	lr, [sp, #36]	; 0x24
   19b3c:	movcc	r1, r0
   19b40:	bcc	19c3c <main@@Base+0x1cd0>
   19b44:	cmp	r3, #0
   19b48:	clzeq	ip, r2
   19b4c:	clzne	ip, r3
   19b50:	addeq	ip, ip, #32
   19b54:	cmp	r5, #0
   19b58:	clzeq	r1, r4
   19b5c:	addeq	r1, r1, #32
   19b60:	clzne	r1, r5
   19b64:	sub	ip, ip, r1
   19b68:	sub	sl, ip, #32
   19b6c:	lsl	r9, r3, ip
   19b70:	rsb	fp, ip, #32
   19b74:	orr	r9, r9, r2, lsl sl
   19b78:	orr	r9, r9, r2, lsr fp
   19b7c:	lsl	r8, r2, ip
   19b80:	cmp	r5, r9
   19b84:	cmpeq	r4, r8
   19b88:	movcc	r0, #0
   19b8c:	movcc	r1, r0
   19b90:	bcc	19bac <main@@Base+0x1c40>
   19b94:	mov	r0, #1
   19b98:	subs	r4, r4, r8
   19b9c:	lsl	r1, r0, sl
   19ba0:	orr	r1, r1, r0, lsr fp
   19ba4:	lsl	r0, r0, ip
   19ba8:	sbc	r5, r5, r9
   19bac:	cmp	ip, #0
   19bb0:	beq	19c3c <main@@Base+0x1cd0>
   19bb4:	lsr	r6, r8, #1
   19bb8:	orr	r6, r6, r9, lsl #31
   19bbc:	lsr	r7, r9, #1
   19bc0:	mov	r2, ip
   19bc4:	b	19be8 <main@@Base+0x1c7c>
   19bc8:	subs	r3, r4, r6
   19bcc:	sbc	r8, r5, r7
   19bd0:	adds	r3, r3, r3
   19bd4:	adc	r8, r8, r8
   19bd8:	adds	r4, r3, #1
   19bdc:	adc	r5, r8, #0
   19be0:	subs	r2, r2, #1
   19be4:	beq	19c04 <main@@Base+0x1c98>
   19be8:	cmp	r5, r7
   19bec:	cmpeq	r4, r6
   19bf0:	bcs	19bc8 <main@@Base+0x1c5c>
   19bf4:	adds	r4, r4, r4
   19bf8:	adc	r5, r5, r5
   19bfc:	subs	r2, r2, #1
   19c00:	bne	19be8 <main@@Base+0x1c7c>
   19c04:	lsr	r3, r4, ip
   19c08:	orr	r3, r3, r5, lsl fp
   19c0c:	lsr	r2, r5, ip
   19c10:	orr	r3, r3, r5, lsr sl
   19c14:	adds	r0, r0, r4
   19c18:	mov	r4, r3
   19c1c:	lsl	r3, r2, ip
   19c20:	orr	r3, r3, r4, lsl sl
   19c24:	lsl	ip, r4, ip
   19c28:	orr	r3, r3, r4, lsr fp
   19c2c:	adc	r1, r1, r5
   19c30:	subs	r0, r0, ip
   19c34:	mov	r5, r2
   19c38:	sbc	r1, r1, r3
   19c3c:	cmp	lr, #0
   19c40:	strdne	r4, [lr]
   19c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019c48 <__libc_csu_init@@Base>:
   19c48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19c4c:	mov	r7, r0
   19c50:	ldr	r6, [pc, #72]	; 19ca0 <__libc_csu_init@@Base+0x58>
   19c54:	ldr	r5, [pc, #72]	; 19ca4 <__libc_csu_init@@Base+0x5c>
   19c58:	add	r6, pc, r6
   19c5c:	add	r5, pc, r5
   19c60:	sub	r6, r6, r5
   19c64:	mov	r8, r1
   19c68:	mov	r9, r2
   19c6c:	bl	125fc <coda_cursor_get_byte_size@plt-0x20>
   19c70:	asrs	r6, r6, #2
   19c74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19c78:	mov	r4, #0
   19c7c:	add	r4, r4, #1
   19c80:	ldr	r3, [r5], #4
   19c84:	mov	r2, r9
   19c88:	mov	r1, r8
   19c8c:	mov	r0, r7
   19c90:	blx	r3
   19c94:	cmp	r6, r4
   19c98:	bne	19c7c <__libc_csu_init@@Base+0x34>
   19c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ca0:	muleq	r1, r4, r2
   19ca4:	andeq	r2, r1, ip, lsl #5

00019ca8 <__libc_csu_fini@@Base>:
   19ca8:	bx	lr

Disassembly of section .fini:

00019cac <.fini>:
   19cac:	push	{r3, lr}
   19cb0:	pop	{r3, pc}
