
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

000109e4 <.init>:
   109e4:	push	{r3, lr}
   109e8:	bl	10f14 <_start@@Base+0x3c>
   109ec:	pop	{r3, pc}

Disassembly of section .plt:

000109f0 <calloc@plt-0x14>:
   109f0:	push	{lr}		; (str lr, [sp, #-4]!)
   109f4:	ldr	lr, [pc, #4]	; 10a00 <calloc@plt-0x4>
   109f8:	add	lr, pc, lr
   109fc:	ldr	pc, [lr, #8]!
   10a00:	andeq	r1, r1, r0, lsl #12

00010a04 <calloc@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1536]!	; 0x600

00010a10 <printf@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a1c <free@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a28 <strcpy@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a34 <puts@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a40 <malloc@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a4c <__libc_start_main@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a58 <__gmon_start__@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a64 <strlen@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a70 <putchar@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a7c <abort@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1456]!	; 0x5b0

Disassembly of section .text:

00010a88 <main@@Base>:
   10a88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a8c:	mov	r1, #3
   10a90:	sub	sp, sp, #28
   10a94:	mov	r0, #4
   10a98:	bl	110d8 <armazem_novo@@Base>
   10a9c:	mov	r7, r0
   10aa0:	ldr	r0, [pc, #952]	; 10e60 <main@@Base+0x3d8>
   10aa4:	bl	10a34 <puts@plt>
   10aa8:	vldr	s0, [pc, #896]	; 10e30 <main@@Base+0x3a8>
   10aac:	ldr	r0, [pc, #944]	; 10e64 <main@@Base+0x3dc>
   10ab0:	bl	112a4 <contentor_novo@@Base>
   10ab4:	mov	fp, r0
   10ab8:	vldr	s0, [pc, #884]	; 10e34 <main@@Base+0x3ac>
   10abc:	ldr	r0, [pc, #932]	; 10e68 <main@@Base+0x3e0>
   10ac0:	bl	112a4 <contentor_novo@@Base>
   10ac4:	mov	sl, r0
   10ac8:	vldr	s0, [pc, #872]	; 10e38 <main@@Base+0x3b0>
   10acc:	ldr	r0, [pc, #920]	; 10e6c <main@@Base+0x3e4>
   10ad0:	bl	112a4 <contentor_novo@@Base>
   10ad4:	mov	r4, r0
   10ad8:	vldr	s0, [pc, #860]	; 10e3c <main@@Base+0x3b4>
   10adc:	ldr	r0, [pc, #908]	; 10e70 <main@@Base+0x3e8>
   10ae0:	bl	112a4 <contentor_novo@@Base>
   10ae4:	mov	r9, r0
   10ae8:	vldr	s0, [pc, #848]	; 10e40 <main@@Base+0x3b8>
   10aec:	ldr	r0, [pc, #896]	; 10e74 <main@@Base+0x3ec>
   10af0:	bl	112a4 <contentor_novo@@Base>
   10af4:	mov	r8, r0
   10af8:	vldr	s0, [pc, #836]	; 10e44 <main@@Base+0x3bc>
   10afc:	ldr	r0, [pc, #884]	; 10e78 <main@@Base+0x3f0>
   10b00:	bl	112a4 <contentor_novo@@Base>
   10b04:	vldr	s0, [pc, #828]	; 10e48 <main@@Base+0x3c0>
   10b08:	str	r0, [sp]
   10b0c:	ldr	r0, [pc, #872]	; 10e7c <main@@Base+0x3f4>
   10b10:	bl	112a4 <contentor_novo@@Base>
   10b14:	mov	r6, r0
   10b18:	vldr	s0, [pc, #812]	; 10e4c <main@@Base+0x3c4>
   10b1c:	ldr	r0, [pc, #860]	; 10e80 <main@@Base+0x3f8>
   10b20:	bl	112a4 <contentor_novo@@Base>
   10b24:	vldr	s0, [pc, #788]	; 10e40 <main@@Base+0x3b8>
   10b28:	str	r0, [sp, #4]
   10b2c:	ldr	r0, [pc, #848]	; 10e84 <main@@Base+0x3fc>
   10b30:	bl	112a4 <contentor_novo@@Base>
   10b34:	vldr	s0, [pc, #788]	; 10e50 <main@@Base+0x3c8>
   10b38:	str	r0, [sp, #8]
   10b3c:	ldr	r0, [pc, #836]	; 10e88 <main@@Base+0x400>
   10b40:	bl	112a4 <contentor_novo@@Base>
   10b44:	vldr	s0, [pc, #776]	; 10e54 <main@@Base+0x3cc>
   10b48:	str	r0, [sp, #12]
   10b4c:	ldr	r0, [pc, #824]	; 10e8c <main@@Base+0x404>
   10b50:	bl	112a4 <contentor_novo@@Base>
   10b54:	vldr	s0, [pc, #764]	; 10e58 <main@@Base+0x3d0>
   10b58:	str	r0, [sp, #16]
   10b5c:	ldr	r0, [pc, #812]	; 10e90 <main@@Base+0x408>
   10b60:	bl	112a4 <contentor_novo@@Base>
   10b64:	mov	r5, r0
   10b68:	vldr	s0, [pc, #748]	; 10e5c <main@@Base+0x3d4>
   10b6c:	ldr	r0, [pc, #800]	; 10e94 <main@@Base+0x40c>
   10b70:	bl	112a4 <contentor_novo@@Base>
   10b74:	str	r0, [sp, #20]
   10b78:	ldr	r0, [pc, #792]	; 10e98 <main@@Base+0x410>
   10b7c:	bl	10a34 <puts@plt>
   10b80:	mov	r0, r7
   10b84:	bl	10fc8 <imprimeArmazem@@Base>
   10b88:	ldr	r0, [pc, #780]	; 10e9c <main@@Base+0x414>
   10b8c:	bl	10a34 <puts@plt>
   10b90:	mov	r1, fp
   10b94:	mov	r0, r7
   10b98:	bl	11180 <armazenar_contentor@@Base>
   10b9c:	cmp	r0, #0
   10ba0:	beq	10bb0 <main@@Base+0x128>
   10ba4:	ldr	r0, [pc, #756]	; 10ea0 <main@@Base+0x418>
   10ba8:	ldr	r1, [fp]
   10bac:	bl	10a10 <printf@plt>
   10bb0:	mov	r1, sl
   10bb4:	mov	r0, r7
   10bb8:	bl	11180 <armazenar_contentor@@Base>
   10bbc:	cmp	r0, #0
   10bc0:	beq	10bd0 <main@@Base+0x148>
   10bc4:	ldr	r0, [pc, #724]	; 10ea0 <main@@Base+0x418>
   10bc8:	ldr	r1, [sl]
   10bcc:	bl	10a10 <printf@plt>
   10bd0:	mov	r1, r4
   10bd4:	mov	r0, r7
   10bd8:	bl	11180 <armazenar_contentor@@Base>
   10bdc:	cmp	r0, #0
   10be0:	beq	10bf0 <main@@Base+0x168>
   10be4:	ldr	r0, [pc, #692]	; 10ea0 <main@@Base+0x418>
   10be8:	ldr	r1, [r4]
   10bec:	bl	10a10 <printf@plt>
   10bf0:	mov	r1, r9
   10bf4:	mov	r0, r7
   10bf8:	bl	11180 <armazenar_contentor@@Base>
   10bfc:	cmp	r0, #0
   10c00:	beq	10c10 <main@@Base+0x188>
   10c04:	ldr	r0, [pc, #660]	; 10ea0 <main@@Base+0x418>
   10c08:	ldr	r1, [r9]
   10c0c:	bl	10a10 <printf@plt>
   10c10:	ldr	r0, [pc, #652]	; 10ea4 <main@@Base+0x41c>
   10c14:	bl	10a34 <puts@plt>
   10c18:	mov	r0, r7
   10c1c:	bl	10fc8 <imprimeArmazem@@Base>
   10c20:	ldr	r0, [pc, #640]	; 10ea8 <main@@Base+0x420>
   10c24:	bl	10a34 <puts@plt>
   10c28:	mov	r1, r8
   10c2c:	mov	r0, r7
   10c30:	bl	11180 <armazenar_contentor@@Base>
   10c34:	cmp	r0, #0
   10c38:	beq	10c48 <main@@Base+0x1c0>
   10c3c:	ldr	r0, [pc, #604]	; 10ea0 <main@@Base+0x418>
   10c40:	ldr	r1, [r8]
   10c44:	bl	10a10 <printf@plt>
   10c48:	mov	r0, r7
   10c4c:	ldr	r1, [sp]
   10c50:	bl	11180 <armazenar_contentor@@Base>
   10c54:	cmp	r0, #0
   10c58:	beq	10c6c <main@@Base+0x1e4>
   10c5c:	ldr	r3, [sp]
   10c60:	ldr	r0, [pc, #568]	; 10ea0 <main@@Base+0x418>
   10c64:	ldr	r1, [r3]
   10c68:	bl	10a10 <printf@plt>
   10c6c:	mov	r1, r6
   10c70:	mov	r0, r7
   10c74:	bl	11180 <armazenar_contentor@@Base>
   10c78:	cmp	r0, #0
   10c7c:	beq	10c8c <main@@Base+0x204>
   10c80:	ldr	r0, [pc, #536]	; 10ea0 <main@@Base+0x418>
   10c84:	ldr	r1, [r6]
   10c88:	bl	10a10 <printf@plt>
   10c8c:	mov	r0, r7
   10c90:	ldr	r1, [sp, #4]
   10c94:	bl	11180 <armazenar_contentor@@Base>
   10c98:	cmp	r0, #0
   10c9c:	beq	10cb0 <main@@Base+0x228>
   10ca0:	ldr	r3, [sp, #4]
   10ca4:	ldr	r0, [pc, #500]	; 10ea0 <main@@Base+0x418>
   10ca8:	ldr	r1, [r3]
   10cac:	bl	10a10 <printf@plt>
   10cb0:	mov	r0, r7
   10cb4:	ldr	r1, [sp, #8]
   10cb8:	bl	11180 <armazenar_contentor@@Base>
   10cbc:	cmp	r0, #0
   10cc0:	beq	10cd4 <main@@Base+0x24c>
   10cc4:	ldr	r3, [sp, #8]
   10cc8:	ldr	r0, [pc, #464]	; 10ea0 <main@@Base+0x418>
   10ccc:	ldr	r1, [r3]
   10cd0:	bl	10a10 <printf@plt>
   10cd4:	mov	r0, r7
   10cd8:	ldr	r1, [sp, #12]
   10cdc:	bl	11180 <armazenar_contentor@@Base>
   10ce0:	cmp	r0, #0
   10ce4:	beq	10cf8 <main@@Base+0x270>
   10ce8:	ldr	r3, [sp, #12]
   10cec:	ldr	r0, [pc, #428]	; 10ea0 <main@@Base+0x418>
   10cf0:	ldr	r1, [r3]
   10cf4:	bl	10a10 <printf@plt>
   10cf8:	mov	r0, r7
   10cfc:	ldr	r1, [sp, #16]
   10d00:	bl	11180 <armazenar_contentor@@Base>
   10d04:	cmp	r0, #0
   10d08:	beq	10d1c <main@@Base+0x294>
   10d0c:	ldr	r3, [sp, #16]
   10d10:	ldr	r0, [pc, #392]	; 10ea0 <main@@Base+0x418>
   10d14:	ldr	r1, [r3]
   10d18:	bl	10a10 <printf@plt>
   10d1c:	mov	r1, r5
   10d20:	mov	r0, r7
   10d24:	bl	11180 <armazenar_contentor@@Base>
   10d28:	cmp	r0, #0
   10d2c:	beq	10d3c <main@@Base+0x2b4>
   10d30:	ldr	r0, [pc, #360]	; 10ea0 <main@@Base+0x418>
   10d34:	ldr	r1, [r5]
   10d38:	bl	10a10 <printf@plt>
   10d3c:	ldr	r0, [pc, #360]	; 10eac <main@@Base+0x424>
   10d40:	bl	10a34 <puts@plt>
   10d44:	mov	r0, r7
   10d48:	bl	10fc8 <imprimeArmazem@@Base>
   10d4c:	mov	r0, r7
   10d50:	bl	11130 <armazem_cheio@@Base>
   10d54:	cmp	r0, #0
   10d58:	ldrne	r0, [pc, #336]	; 10eb0 <main@@Base+0x428>
   10d5c:	ldreq	r0, [pc, #336]	; 10eb4 <main@@Base+0x42c>
   10d60:	bl	10a34 <puts@plt>
   10d64:	mov	r0, r7
   10d68:	ldr	r1, [sp, #20]
   10d6c:	bl	11180 <armazenar_contentor@@Base>
   10d70:	cmp	r0, #0
   10d74:	beq	10d84 <main@@Base+0x2fc>
   10d78:	ldr	r0, [pc, #312]	; 10eb8 <main@@Base+0x430>
   10d7c:	ldr	r1, [r4]
   10d80:	bl	10a10 <printf@plt>
   10d84:	ldr	r6, [pc, #304]	; 10ebc <main@@Base+0x434>
   10d88:	mov	r4, #8
   10d8c:	ldr	r0, [pc, #300]	; 10ec0 <main@@Base+0x438>
   10d90:	bl	10a34 <puts@plt>
   10d94:	mov	r0, r7
   10d98:	bl	11218 <expedir_contentor@@Base>
   10d9c:	mov	r5, r0
   10da0:	mov	r0, r6
   10da4:	bl	10a34 <puts@plt>
   10da8:	mov	r0, r5
   10dac:	bl	11308 <contentor_imprime@@Base>
   10db0:	subs	r4, r4, #1
   10db4:	bne	10d94 <main@@Base+0x30c>
   10db8:	ldr	r6, [pc, #252]	; 10ebc <main@@Base+0x434>
   10dbc:	mov	r4, #4
   10dc0:	ldr	r0, [pc, #252]	; 10ec4 <main@@Base+0x43c>
   10dc4:	bl	10a34 <puts@plt>
   10dc8:	mov	r0, r7
   10dcc:	bl	10fc8 <imprimeArmazem@@Base>
   10dd0:	ldr	r0, [pc, #240]	; 10ec8 <main@@Base+0x440>
   10dd4:	bl	10a34 <puts@plt>
   10dd8:	mov	r0, r7
   10ddc:	bl	11218 <expedir_contentor@@Base>
   10de0:	mov	r5, r0
   10de4:	mov	r0, r6
   10de8:	bl	10a34 <puts@plt>
   10dec:	mov	r0, r5
   10df0:	bl	11308 <contentor_imprime@@Base>
   10df4:	subs	r4, r4, #1
   10df8:	bne	10dd8 <main@@Base+0x350>
   10dfc:	ldr	r0, [pc, #200]	; 10ecc <main@@Base+0x444>
   10e00:	bl	10a34 <puts@plt>
   10e04:	mov	r0, r7
   10e08:	bl	10fc8 <imprimeArmazem@@Base>
   10e0c:	mov	r0, r7
   10e10:	bl	11108 <armazem_vazio@@Base>
   10e14:	cmp	r0, #0
   10e18:	ldrne	r0, [pc, #176]	; 10ed0 <main@@Base+0x448>
   10e1c:	ldreq	r0, [pc, #176]	; 10ed4 <main@@Base+0x44c>
   10e20:	bl	10a34 <puts@plt>
   10e24:	mov	r0, #0
   10e28:	add	sp, sp, #28
   10e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e30:	cmnmi	r6, #0
   10e34:	cmnmi	sl, #0
   10e38:	strmi	r8, [r4], #-0
   10e3c:	ldrtmi	r8, [r1], #-0
   10e40:			; <UNDEFINED> instruction: 0x43be0000
   10e44:	bicmi	r0, r3, #0
   10e48:	sbcmi	r0, r8, #0
   10e4c:	adcmi	r0, r0, #0
   10e50:	tstmi	r6, #0
   10e54:	orrmi	r0, r7, #0
   10e58:	bicsmi	r0, r7, #0
   10e5c:	movtmi	r0, #32768	; 0x8000
   10e60:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   10e64:			; <UNDEFINED> instruction: 0x000116b2
   10e68:			; <UNDEFINED> instruction: 0x000116b9
   10e6c:			; <UNDEFINED> instruction: 0x000116bc
   10e70:	andeq	r1, r1, r3, asr #13
   10e74:	andeq	r1, r1, r9, asr #13
   10e78:	andeq	r1, r1, pc, asr #13
   10e7c:	ldrdeq	r1, [r1], -r7
   10e80:	andeq	r1, r1, r1, ror #13
   10e84:	andeq	r1, r1, r8, ror #13
   10e88:	strdeq	r1, [r1], -r4
   10e8c:	strdeq	r1, [r1], -ip
   10e90:	andeq	r1, r1, r5, lsl #14
   10e94:	andeq	r1, r1, fp, lsl #14
   10e98:	andeq	r1, r1, r3, lsl r7
   10e9c:	andeq	r1, r1, lr, lsr #14
   10ea0:	andeq	r1, r1, pc, asr #14
   10ea4:	andeq	r1, r1, r5, ror r7
   10ea8:	muleq	r1, r0, r7
   10eac:			; <UNDEFINED> instruction: 0x000117b1
   10eb0:	andeq	r1, r1, ip, asr #15
   10eb4:	ldrdeq	r1, [r1], -sl
   10eb8:	strdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   10ebc:	andeq	r1, r1, fp, ror #16
   10ec0:	andeq	r1, r1, sl, asr #16
   10ec4:	andeq	r1, r1, r9, lsl #17
   10ec8:	andeq	r1, r1, r4, lsr #17
   10ecc:	andeq	r1, r1, r5, asr #17
   10ed0:	andeq	r1, r1, r0, ror #17
   10ed4:	andeq	r1, r1, lr, ror #17

00010ed8 <_start@@Base>:
   10ed8:	mov	fp, #0
   10edc:	mov	lr, #0
   10ee0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ee4:	mov	r2, sp
   10ee8:	push	{r2}		; (str r2, [sp, #-4]!)
   10eec:	push	{r0}		; (str r0, [sp, #-4]!)
   10ef0:	ldr	ip, [pc, #16]	; 10f08 <_start@@Base+0x30>
   10ef4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ef8:	ldr	r0, [pc, #12]	; 10f0c <_start@@Base+0x34>
   10efc:	ldr	r3, [pc, #12]	; 10f10 <_start@@Base+0x38>
   10f00:	bl	10a4c <__libc_start_main@plt>
   10f04:	bl	10a7c <abort@plt>
   10f08:	andeq	r1, r1, r0, lsl #13
   10f0c:	andeq	r0, r1, r8, lsl #21
   10f10:	andeq	r1, r1, r0, lsr #12
   10f14:	ldr	r3, [pc, #20]	; 10f30 <_start@@Base+0x58>
   10f18:	ldr	r2, [pc, #20]	; 10f34 <_start@@Base+0x5c>
   10f1c:	add	r3, pc, r3
   10f20:	ldr	r2, [r3, r2]
   10f24:	cmp	r2, #0
   10f28:	bxeq	lr
   10f2c:	b	10a58 <__gmon_start__@plt>
   10f30:	ldrdeq	r1, [r1], -ip
   10f34:	andeq	r0, r0, r8, lsr r0
   10f38:	ldr	r0, [pc, #24]	; 10f58 <_start@@Base+0x80>
   10f3c:	ldr	r3, [pc, #24]	; 10f5c <_start@@Base+0x84>
   10f40:	cmp	r3, r0
   10f44:	bxeq	lr
   10f48:	ldr	r3, [pc, #16]	; 10f60 <_start@@Base+0x88>
   10f4c:	cmp	r3, #0
   10f50:	bxeq	lr
   10f54:	bx	r3
   10f58:	andeq	r2, r2, r4, asr #32
   10f5c:	andeq	r2, r2, r4, asr #32
   10f60:	andeq	r0, r0, r0
   10f64:	ldr	r0, [pc, #36]	; 10f90 <_start@@Base+0xb8>
   10f68:	ldr	r1, [pc, #36]	; 10f94 <_start@@Base+0xbc>
   10f6c:	sub	r1, r1, r0
   10f70:	asr	r1, r1, #2
   10f74:	add	r1, r1, r1, lsr #31
   10f78:	asrs	r1, r1, #1
   10f7c:	bxeq	lr
   10f80:	ldr	r3, [pc, #16]	; 10f98 <_start@@Base+0xc0>
   10f84:	cmp	r3, #0
   10f88:	bxeq	lr
   10f8c:	bx	r3
   10f90:	andeq	r2, r2, r4, asr #32
   10f94:	andeq	r2, r2, r4, asr #32
   10f98:	andeq	r0, r0, r0
   10f9c:	push	{r4, lr}
   10fa0:	ldr	r4, [pc, #24]	; 10fc0 <_start@@Base+0xe8>
   10fa4:	ldrb	r3, [r4]
   10fa8:	cmp	r3, #0
   10fac:	popne	{r4, pc}
   10fb0:	bl	10f38 <_start@@Base+0x60>
   10fb4:	mov	r3, #1
   10fb8:	strb	r3, [r4]
   10fbc:	pop	{r4, pc}
   10fc0:	andeq	r2, r2, r4, asr #32
   10fc4:	b	10f64 <_start@@Base+0x8c>

00010fc8 <imprimeArmazem@@Base>:
   10fc8:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fcc:	subs	r4, r0, #0
   10fd0:	beq	110b8 <imprimeArmazem@@Base+0xf0>
   10fd4:	ldr	r5, [r4, #8]
   10fd8:	cmp	r5, #0
   10fdc:	beq	110b8 <imprimeArmazem@@Base+0xf0>
   10fe0:	ldr	r8, [r5, #4]
   10fe4:	mov	r1, #4
   10fe8:	mov	r0, r8
   10fec:	bl	10a04 <calloc@plt>
   10ff0:	ldr	r3, [r5]
   10ff4:	mov	r7, r0
   10ff8:	sub	r2, r0, #4
   10ffc:	cmp	r3, #0
   11000:	bne	11058 <imprimeArmazem@@Base+0x90>
   11004:	mov	r0, #10
   11008:	ldr	r9, [pc, #176]	; 110c0 <imprimeArmazem@@Base+0xf8>
   1100c:	bl	10a70 <putchar@plt>
   11010:	ldr	sl, [pc, #172]	; 110c4 <imprimeArmazem@@Base+0xfc>
   11014:	ldr	fp, [pc, #172]	; 110c8 <imprimeArmazem@@Base+0x100>
   11018:	ldr	r5, [r4, #4]
   1101c:	cmp	r5, #0
   11020:	bgt	11068 <imprimeArmazem@@Base+0xa0>
   11024:	ldr	r6, [pc, #160]	; 110cc <imprimeArmazem@@Base+0x104>
   11028:	mov	r5, #0
   1102c:	ldr	r0, [pc, #156]	; 110d0 <imprimeArmazem@@Base+0x108>
   11030:	bl	10a10 <printf@plt>
   11034:	ldr	r3, [r4]
   11038:	cmp	r3, r5
   1103c:	bgt	110a8 <imprimeArmazem@@Base+0xe0>
   11040:	ldr	r0, [pc, #140]	; 110d4 <imprimeArmazem@@Base+0x10c>
   11044:	bl	10a34 <puts@plt>
   11048:	mov	r0, r7
   1104c:	add	sp, sp, #4
   11050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11054:	b	10a1c <free@plt>
   11058:	ldm	r3, {r1, r3}
   1105c:	ldr	r1, [r1, #4]
   11060:	str	r1, [r2, #4]!
   11064:	b	10ffc <imprimeArmazem@@Base+0x34>
   11068:	mov	r0, r9
   1106c:	mov	r6, #0
   11070:	bl	10a10 <printf@plt>
   11074:	cmp	r8, r6
   11078:	bgt	1108c <imprimeArmazem@@Base+0xc4>
   1107c:	mov	r0, #10
   11080:	sub	r5, r5, #1
   11084:	bl	10a70 <putchar@plt>
   11088:	b	1101c <imprimeArmazem@@Base+0x54>
   1108c:	ldr	r3, [r7, r6, lsl #2]
   11090:	add	r6, r6, #1
   11094:	cmp	r3, r5
   11098:	movge	r0, fp
   1109c:	movlt	r0, sl
   110a0:	bl	10a10 <printf@plt>
   110a4:	b	11074 <imprimeArmazem@@Base+0xac>
   110a8:	mov	r0, r6
   110ac:	add	r5, r5, #1
   110b0:	bl	10a10 <printf@plt>
   110b4:	b	11034 <imprimeArmazem@@Base+0x6c>
   110b8:	add	sp, sp, #4
   110bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110c0:	muleq	r1, r7, r6
   110c4:	muleq	r1, r5, r6
   110c8:	muleq	r1, r0, r6
   110cc:	muleq	r1, sl, r6
   110d0:	muleq	r1, ip, r6
   110d4:	andeq	r1, r1, r3, ror r7

000110d8 <armazem_novo@@Base>:
   110d8:	push	{r4, r5, r6, lr}
   110dc:	mov	r5, r1
   110e0:	mov	r6, r0
   110e4:	mov	r0, #12
   110e8:	bl	10a40 <malloc@plt>
   110ec:	mov	r4, r0
   110f0:	str	r6, [r0]
   110f4:	str	r5, [r0, #4]
   110f8:	bl	11374 <fila_nova@@Base>
   110fc:	str	r0, [r4, #8]
   11100:	mov	r0, r4
   11104:	pop	{r4, r5, r6, pc}

00011108 <armazem_vazio@@Base>:
   11108:	cmp	r0, #0
   1110c:	beq	11128 <armazem_vazio@@Base+0x20>
   11110:	push	{r4, lr}
   11114:	ldr	r0, [r0, #8]
   11118:	bl	113d0 <fila_tamanho@@Base>
   1111c:	clz	r0, r0
   11120:	lsr	r0, r0, #5
   11124:	pop	{r4, pc}
   11128:	mov	r0, #1
   1112c:	bx	lr

00011130 <armazem_cheio@@Base>:
   11130:	push	{r4, lr}
   11134:	mov	r4, r0
   11138:	bl	11108 <armazem_vazio@@Base>
   1113c:	cmp	r0, #0
   11140:	beq	1114c <armazem_cheio@@Base+0x1c>
   11144:	mov	r0, #0
   11148:	pop	{r4, pc}
   1114c:	ldr	r0, [r4, #8]
   11150:	bl	113d0 <fila_tamanho@@Base>
   11154:	ldr	r3, [r4]
   11158:	cmp	r0, r3
   1115c:	bne	11144 <armazem_cheio@@Base+0x14>
   11160:	ldr	r0, [r4, #8]
   11164:	bl	11400 <fila_back@@Base>
   11168:	ldr	r0, [r0, #4]
   1116c:	ldr	r3, [r4, #4]
   11170:	sub	r0, r0, r3
   11174:	clz	r0, r0
   11178:	lsr	r0, r0, #5
   1117c:	pop	{r4, pc}

00011180 <armazenar_contentor@@Base>:
   11180:	push	{r4, r5, r6, r7, r8, lr}
   11184:	mov	r4, r0
   11188:	mov	r5, r1
   1118c:	bl	1151c <pilha_nova@@Base>
   11190:	cmp	r5, #0
   11194:	cmpne	r4, #0
   11198:	bne	111a4 <armazenar_contentor@@Base+0x24>
   1119c:	mov	r0, #0
   111a0:	pop	{r4, r5, r6, r7, r8, pc}
   111a4:	mov	r6, r0
   111a8:	mov	r0, r4
   111ac:	bl	11130 <armazem_cheio@@Base>
   111b0:	cmp	r0, #0
   111b4:	bne	1119c <armazenar_contentor@@Base+0x1c>
   111b8:	mov	r0, r4
   111bc:	bl	11108 <armazem_vazio@@Base>
   111c0:	cmp	r0, #0
   111c4:	beq	111dc <armazenar_contentor@@Base+0x5c>
   111c8:	ldr	r7, [r4, #8]
   111cc:	bl	1151c <pilha_nova@@Base>
   111d0:	mov	r1, r0
   111d4:	mov	r0, r7
   111d8:	bl	11438 <fila_push@@Base>
   111dc:	ldr	r0, [r4, #8]
   111e0:	bl	11400 <fila_back@@Base>
   111e4:	ldr	r2, [r0, #4]
   111e8:	ldr	r3, [r4, #4]
   111ec:	cmp	r2, r3
   111f0:	bne	11200 <armazenar_contentor@@Base+0x80>
   111f4:	mov	r1, r6
   111f8:	ldr	r0, [r4, #8]
   111fc:	bl	11438 <fila_push@@Base>
   11200:	ldr	r0, [r4, #8]
   11204:	bl	11400 <fila_back@@Base>
   11208:	mov	r1, r5
   1120c:	bl	115a8 <pilha_push@@Base>
   11210:	mov	r0, #1
   11214:	pop	{r4, r5, r6, r7, r8, pc}

00011218 <expedir_contentor@@Base>:
   11218:	push	{r4, r5, r6, lr}
   1121c:	mov	r4, r0
   11220:	bl	11108 <armazem_vazio@@Base>
   11224:	cmp	r0, #0
   11228:	beq	11238 <expedir_contentor@@Base+0x20>
   1122c:	mov	r5, #0
   11230:	mov	r0, r5
   11234:	pop	{r4, r5, r6, pc}
   11238:	ldr	r0, [r4, #8]
   1123c:	bl	113e0 <fila_front@@Base>
   11240:	bl	11588 <pilha_top@@Base>
   11244:	cmp	r0, #0
   11248:	beq	1122c <expedir_contentor@@Base+0x14>
   1124c:	ldr	r0, [r4, #8]
   11250:	bl	113e0 <fila_front@@Base>
   11254:	bl	11588 <pilha_top@@Base>
   11258:	ldr	r5, [r0]
   1125c:	ldr	r0, [r4, #8]
   11260:	bl	113e0 <fila_front@@Base>
   11264:	bl	11588 <pilha_top@@Base>
   11268:	vldr	s0, [r0, #4]
   1126c:	mov	r0, r5
   11270:	bl	112a4 <contentor_novo@@Base>
   11274:	mov	r5, r0
   11278:	ldr	r0, [r4, #8]
   1127c:	bl	113e0 <fila_front@@Base>
   11280:	ldr	r3, [r0, #4]
   11284:	ldr	r0, [r4, #8]
   11288:	cmp	r3, #1
   1128c:	bgt	11298 <expedir_contentor@@Base+0x80>
   11290:	bl	1148c <fila_pop@@Base>
   11294:	b	11230 <expedir_contentor@@Base+0x18>
   11298:	bl	113e0 <fila_front@@Base>
   1129c:	bl	115e4 <pilha_pop@@Base>
   112a0:	b	11230 <expedir_contentor@@Base+0x18>

000112a4 <contentor_novo@@Base>:
   112a4:	push	{r4, r5, r6, lr}
   112a8:	mov	r5, r0
   112ac:	mov	r0, #8
   112b0:	vpush	{d8}
   112b4:	vmov.f32	s16, s0
   112b8:	bl	10a40 <malloc@plt>
   112bc:	mov	r4, r0
   112c0:	mov	r0, r5
   112c4:	bl	10a64 <strlen@plt>
   112c8:	add	r0, r0, #1
   112cc:	bl	10a40 <malloc@plt>
   112d0:	mov	r1, r5
   112d4:	str	r0, [r4]
   112d8:	bl	10a28 <strcpy@plt>
   112dc:	vstr	s16, [r4, #4]
   112e0:	mov	r0, r4
   112e4:	vpop	{d8}
   112e8:	pop	{r4, r5, r6, pc}

000112ec <contentor_apaga@@Base>:
   112ec:	push	{r4, lr}
   112f0:	mov	r4, r0
   112f4:	ldr	r0, [r0]
   112f8:	bl	10a1c <free@plt>
   112fc:	mov	r0, r4
   11300:	pop	{r4, lr}
   11304:	b	10a1c <free@plt>

00011308 <contentor_imprime@@Base>:
   11308:	cmp	r0, #0
   1130c:	bne	11318 <contentor_imprime@@Base+0x10>
   11310:	ldr	r0, [pc, #24]	; 11330 <contentor_imprime@@Base+0x28>
   11314:	b	10a34 <puts@plt>
   11318:	ldr	r1, [r0]
   1131c:	vldr	s15, [r0, #4]
   11320:	ldr	r0, [pc, #12]	; 11334 <contentor_imprime@@Base+0x2c>
   11324:	vcvt.f64.f32	d7, s15
   11328:	vmov	r2, r3, d7
   1132c:	b	10a10 <printf@plt>
   11330:	andeq	r1, r1, r3, lsl r9
   11334:	andeq	r1, r1, r2, lsr #18

00011338 <fila_novo_elemento@@Base>:
   11338:	push	{r4, lr}
   1133c:	mov	r4, r0
   11340:	mov	r0, #8
   11344:	bl	10a40 <malloc@plt>
   11348:	subs	r3, r0, #0
   1134c:	beq	1136c <fila_novo_elemento@@Base+0x34>
   11350:	cmp	r4, #0
   11354:	str	r4, [r3]
   11358:	movne	r2, #0
   1135c:	strne	r2, [r3, #4]
   11360:	bne	1136c <fila_novo_elemento@@Base+0x34>
   11364:	bl	10a1c <free@plt>
   11368:	mov	r3, r4
   1136c:	mov	r0, r3
   11370:	pop	{r4, pc}

00011374 <fila_nova@@Base>:
   11374:	push	{r4, lr}
   11378:	mov	r0, #8
   1137c:	bl	10a40 <malloc@plt>
   11380:	cmp	r0, #0
   11384:	movne	r3, #0
   11388:	strne	r3, [r0]
   1138c:	strne	r3, [r0, #4]
   11390:	pop	{r4, pc}

00011394 <fila_apaga@@Base>:
   11394:	push	{r4, r5, r6, lr}
   11398:	subs	r5, r0, #0
   1139c:	popeq	{r4, r5, r6, pc}
   113a0:	ldr	r4, [r5]
   113a4:	cmp	r4, #0
   113a8:	bne	113b8 <fila_apaga@@Base+0x24>
   113ac:	mov	r0, r5
   113b0:	pop	{r4, r5, r6, lr}
   113b4:	b	10a1c <free@plt>
   113b8:	ldm	r4, {r0, r3}
   113bc:	str	r3, [r5]
   113c0:	bl	1153c <pilha_apaga@@Base>
   113c4:	mov	r0, r4
   113c8:	bl	10a1c <free@plt>
   113cc:	b	113a0 <fila_apaga@@Base+0xc>

000113d0 <fila_tamanho@@Base>:
   113d0:	cmp	r0, #0
   113d4:	ldrne	r0, [r0, #4]
   113d8:	mvneq	r0, #0
   113dc:	bx	lr

000113e0 <fila_front@@Base>:
   113e0:	cmp	r0, #0
   113e4:	bxeq	lr
   113e8:	ldr	r3, [r0, #4]
   113ec:	cmp	r3, #0
   113f0:	ldrne	r3, [r0]
   113f4:	ldrne	r0, [r3]
   113f8:	moveq	r0, r3
   113fc:	bx	lr

00011400 <fila_back@@Base>:
   11400:	cmp	r0, #0
   11404:	bxeq	lr
   11408:	ldr	r3, [r0, #4]
   1140c:	cmp	r3, #0
   11410:	ldrne	r3, [r0]
   11414:	bne	11424 <fila_back@@Base+0x24>
   11418:	mov	r0, r3
   1141c:	bx	lr
   11420:	mov	r3, r2
   11424:	ldr	r2, [r3, #4]
   11428:	cmp	r2, #0
   1142c:	bne	11420 <fila_back@@Base+0x20>
   11430:	ldr	r0, [r3]
   11434:	bx	lr

00011438 <fila_push@@Base>:
   11438:	push	{r4, r5, r6, lr}
   1143c:	subs	r4, r0, #0
   11440:	popeq	{r4, r5, r6, pc}
   11444:	mov	r0, r1
   11448:	ldr	r5, [r4]
   1144c:	bl	11338 <fila_novo_elemento@@Base>
   11450:	cmp	r0, #0
   11454:	popeq	{r4, r5, r6, pc}
   11458:	cmp	r5, #0
   1145c:	ldr	r3, [r4, #4]
   11460:	add	r3, r3, #1
   11464:	str	r3, [r4, #4]
   11468:	bne	11478 <fila_push@@Base+0x40>
   1146c:	str	r0, [r4]
   11470:	pop	{r4, r5, r6, pc}
   11474:	mov	r5, r3
   11478:	ldr	r3, [r5, #4]
   1147c:	cmp	r3, #0
   11480:	bne	11474 <fila_push@@Base+0x3c>
   11484:	str	r0, [r5, #4]
   11488:	pop	{r4, r5, r6, pc}

0001148c <fila_pop@@Base>:
   1148c:	cmp	r0, #0
   11490:	bxeq	lr
   11494:	ldr	r3, [r0, #4]
   11498:	cmp	r3, #0
   1149c:	bxeq	lr
   114a0:	push	{r4, lr}
   114a4:	sub	r3, r3, #1
   114a8:	ldr	r4, [r0]
   114ac:	str	r3, [r0, #4]
   114b0:	ldr	r3, [r4, #4]
   114b4:	str	r3, [r0]
   114b8:	ldr	r0, [r4]
   114bc:	bl	1153c <pilha_apaga@@Base>
   114c0:	mov	r0, r4
   114c4:	pop	{r4, lr}
   114c8:	b	10a1c <free@plt>

000114cc <pilha_novo_elemento@@Base>:
   114cc:	push	{r4, r5, r6, lr}
   114d0:	mov	r5, r0
   114d4:	mov	r0, #8
   114d8:	bl	10a40 <malloc@plt>
   114dc:	subs	r4, r0, #0
   114e0:	beq	11514 <pilha_novo_elemento@@Base+0x48>
   114e4:	ldr	r0, [r5]
   114e8:	vldr	s0, [r5, #4]
   114ec:	bl	112a4 <contentor_novo@@Base>
   114f0:	cmp	r0, #0
   114f4:	mov	r5, r0
   114f8:	str	r0, [r4]
   114fc:	movne	r3, #0
   11500:	strne	r3, [r4, #4]
   11504:	bne	11514 <pilha_novo_elemento@@Base+0x48>
   11508:	mov	r0, r4
   1150c:	mov	r4, r5
   11510:	bl	10a1c <free@plt>
   11514:	mov	r0, r4
   11518:	pop	{r4, r5, r6, pc}

0001151c <pilha_nova@@Base>:
   1151c:	push	{r4, lr}
   11520:	mov	r0, #8
   11524:	bl	10a40 <malloc@plt>
   11528:	cmp	r0, #0
   1152c:	movne	r3, #0
   11530:	strne	r3, [r0]
   11534:	strne	r3, [r0, #4]
   11538:	pop	{r4, pc}

0001153c <pilha_apaga@@Base>:
   1153c:	push	{r4, r5, r6, lr}
   11540:	subs	r5, r0, #0
   11544:	popeq	{r4, r5, r6, pc}
   11548:	ldr	r4, [r5]
   1154c:	cmp	r4, #0
   11550:	bne	11560 <pilha_apaga@@Base+0x24>
   11554:	mov	r0, r5
   11558:	pop	{r4, r5, r6, lr}
   1155c:	b	10a1c <free@plt>
   11560:	ldm	r4, {r0, r3}
   11564:	str	r3, [r5]
   11568:	bl	112ec <contentor_apaga@@Base>
   1156c:	mov	r0, r4
   11570:	bl	10a1c <free@plt>
   11574:	b	11548 <pilha_apaga@@Base+0xc>

00011578 <pilha_tamanho@@Base>:
   11578:	cmp	r0, #0
   1157c:	ldrne	r0, [r0, #4]
   11580:	mvneq	r0, #0
   11584:	bx	lr

00011588 <pilha_top@@Base>:
   11588:	cmp	r0, #0
   1158c:	bxeq	lr
   11590:	ldr	r3, [r0, #4]
   11594:	cmp	r3, #0
   11598:	ldrne	r3, [r0]
   1159c:	ldrne	r0, [r3]
   115a0:	moveq	r0, r3
   115a4:	bx	lr

000115a8 <pilha_push@@Base>:
   115a8:	push	{r4, lr}
   115ac:	subs	r4, r0, #0
   115b0:	popeq	{r4, pc}
   115b4:	mov	r0, r1
   115b8:	bl	114cc <pilha_novo_elemento@@Base>
   115bc:	cmp	r0, #0
   115c0:	popeq	{r4, pc}
   115c4:	ldr	r3, [r4, #4]
   115c8:	add	r3, r3, #1
   115cc:	str	r3, [r4, #4]
   115d0:	ldr	r3, [r4]
   115d4:	cmp	r3, #0
   115d8:	strne	r3, [r0, #4]
   115dc:	str	r0, [r4]
   115e0:	pop	{r4, pc}

000115e4 <pilha_pop@@Base>:
   115e4:	cmp	r0, #0
   115e8:	bxeq	lr
   115ec:	ldr	r3, [r0, #4]
   115f0:	cmp	r3, #0
   115f4:	bxeq	lr
   115f8:	push	{r4, lr}
   115fc:	sub	r3, r3, #1
   11600:	ldr	r4, [r0]
   11604:	ldr	r2, [r4, #4]
   11608:	strd	r2, [r0]
   1160c:	ldr	r0, [r4]
   11610:	bl	112ec <contentor_apaga@@Base>
   11614:	mov	r0, r4
   11618:	pop	{r4, lr}
   1161c:	b	10a1c <free@plt>

00011620 <__libc_csu_init@@Base>:
   11620:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11624:	mov	r7, r0
   11628:	ldr	r6, [pc, #72]	; 11678 <__libc_csu_init@@Base+0x58>
   1162c:	ldr	r5, [pc, #72]	; 1167c <__libc_csu_init@@Base+0x5c>
   11630:	add	r6, pc, r6
   11634:	add	r5, pc, r5
   11638:	sub	r6, r6, r5
   1163c:	mov	r8, r1
   11640:	mov	r9, r2
   11644:	bl	109e4 <calloc@plt-0x20>
   11648:	asrs	r6, r6, #2
   1164c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11650:	mov	r4, #0
   11654:	add	r4, r4, #1
   11658:	ldr	r3, [r5], #4
   1165c:	mov	r2, r9
   11660:	mov	r1, r8
   11664:	mov	r0, r7
   11668:	blx	r3
   1166c:	cmp	r6, r4
   11670:	bne	11654 <__libc_csu_init@@Base+0x34>
   11674:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11678:	ldrdeq	r0, [r1], -ip
   1167c:	ldrdeq	r0, [r1], -r4

00011680 <__libc_csu_fini@@Base>:
   11680:	bx	lr

Disassembly of section .fini:

00011684 <.fini>:
   11684:	push	{r3, lr}
   11688:	pop	{r3, pc}
