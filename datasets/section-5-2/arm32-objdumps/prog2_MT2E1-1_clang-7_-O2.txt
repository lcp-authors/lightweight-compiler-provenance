
../repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010eb0 <.init>:
   10eb0:	push	{r3, lr}
   10eb4:	bl	10fe4 <_start@@Base+0x3c>
   10eb8:	pop	{r3, pc}

Disassembly of section .plt:

00010ebc <calloc@plt-0x14>:
   10ebc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec0:	ldr	lr, [pc, #4]	; 10ecc <calloc@plt-0x4>
   10ec4:	add	lr, pc, lr
   10ec8:	ldr	pc, [lr, #8]!
   10ecc:	andeq	r2, r1, r4, lsr r1

00010ed0 <calloc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #308]!	; 0x134

00010edc <strcmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #300]!	; 0x12c

00010ee8 <printf@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #292]!	; 0x124

00010ef4 <__isoc99_fscanf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #284]!	; 0x11c

00010f00 <fopen@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #276]!	; 0x114

00010f0c <free@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #268]!	; 0x10c

00010f18 <memcpy@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #260]!	; 0x104

00010f24 <realloc@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #252]!	; 0xfc

00010f30 <strcpy@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #244]!	; 0xf4

00010f3c <puts@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #236]!	; 0xec

00010f48 <malloc@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #228]!	; 0xe4

00010f54 <__libc_start_main@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #220]!	; 0xdc

00010f60 <__gmon_start__@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #73728	; 0x12000
   10f68:	ldr	pc, [ip, #212]!	; 0xd4

00010f6c <strlen@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #73728	; 0x12000
   10f74:	ldr	pc, [ip, #204]!	; 0xcc

00010f78 <setvbuf@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #73728	; 0x12000
   10f80:	ldr	pc, [ip, #196]!	; 0xc4

00010f84 <putchar@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #73728	; 0x12000
   10f8c:	ldr	pc, [ip, #188]!	; 0xbc

00010f90 <fclose@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #73728	; 0x12000
   10f98:	ldr	pc, [ip, #180]!	; 0xb4

00010f9c <abort@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #73728	; 0x12000
   10fa4:	ldr	pc, [ip, #172]!	; 0xac

Disassembly of section .text:

00010fa8 <_start@@Base>:
   10fa8:	mov	fp, #0
   10fac:	mov	lr, #0
   10fb0:	pop	{r1}		; (ldr r1, [sp], #4)
   10fb4:	mov	r2, sp
   10fb8:	push	{r2}		; (str r2, [sp, #-4]!)
   10fbc:	push	{r0}		; (str r0, [sp, #-4]!)
   10fc0:	ldr	ip, [pc, #16]	; 10fd8 <_start@@Base+0x30>
   10fc4:	push	{ip}		; (str ip, [sp, #-4]!)
   10fc8:	ldr	r0, [pc, #12]	; 10fdc <_start@@Base+0x34>
   10fcc:	ldr	r3, [pc, #12]	; 10fe0 <_start@@Base+0x38>
   10fd0:	bl	10f54 <__libc_start_main@plt>
   10fd4:	bl	10f9c <abort@plt>
   10fd8:	andeq	r2, r1, r4, asr #13
   10fdc:	andeq	r1, r1, r8, ror #2
   10fe0:	andeq	r2, r1, r4, ror #12
   10fe4:	ldr	r3, [pc, #20]	; 11000 <_start@@Base+0x58>
   10fe8:	ldr	r2, [pc, #20]	; 11004 <_start@@Base+0x5c>
   10fec:	add	r3, pc, r3
   10ff0:	ldr	r2, [r3, r2]
   10ff4:	cmp	r2, #0
   10ff8:	bxeq	lr
   10ffc:	b	10f60 <__gmon_start__@plt>
   11000:	andeq	r2, r1, ip
   11004:	andeq	r0, r0, r8, asr r0
   11008:	ldr	r0, [pc, #24]	; 11028 <_start@@Base+0x80>
   1100c:	ldr	r3, [pc, #24]	; 1102c <_start@@Base+0x84>
   11010:	cmp	r3, r0
   11014:	bxeq	lr
   11018:	ldr	r3, [pc, #16]	; 11030 <_start@@Base+0x88>
   1101c:	cmp	r3, #0
   11020:	bxeq	lr
   11024:	bx	r3
   11028:	andeq	r3, r2, r8, rrx
   1102c:	andeq	r3, r2, r8, rrx
   11030:	andeq	r0, r0, r0
   11034:	ldr	r0, [pc, #36]	; 11060 <_start@@Base+0xb8>
   11038:	ldr	r1, [pc, #36]	; 11064 <_start@@Base+0xbc>
   1103c:	sub	r1, r1, r0
   11040:	asr	r1, r1, #2
   11044:	add	r1, r1, r1, lsr #31
   11048:	asrs	r1, r1, #1
   1104c:	bxeq	lr
   11050:	ldr	r3, [pc, #16]	; 11068 <_start@@Base+0xc0>
   11054:	cmp	r3, #0
   11058:	bxeq	lr
   1105c:	bx	r3
   11060:	andeq	r3, r2, r8, rrx
   11064:	andeq	r3, r2, r8, rrx
   11068:	andeq	r0, r0, r0
   1106c:	push	{r4, lr}
   11070:	ldr	r4, [pc, #24]	; 11090 <_start@@Base+0xe8>
   11074:	ldrb	r3, [r4]
   11078:	cmp	r3, #0
   1107c:	popne	{r4, pc}
   11080:	bl	11008 <_start@@Base+0x60>
   11084:	mov	r3, #1
   11088:	strb	r3, [r4]
   1108c:	pop	{r4, pc}
   11090:	andeq	r3, r2, r8, rrx
   11094:	b	11034 <_start@@Base+0x8c>

00011098 <avl_max_subarvore@@Base>:
   11098:	push	{r4, r5, r6, sl, fp, lr}
   1109c:	add	fp, sp, #16
   110a0:	mov	r4, r1
   110a4:	mov	r5, r0
   110a8:	bl	113dc <avl_nova@@Base>
   110ac:	mov	r6, r0
   110b0:	mov	r0, r5
   110b4:	mov	r1, r4
   110b8:	bl	11864 <avl_pesquisa@@Base>
   110bc:	str	r0, [r6]
   110c0:	mov	r0, r6
   110c4:	bl	11d64 <avl_max@@Base>
   110c8:	mov	r1, r0
   110cc:	ldr	r0, [pc, #16]	; 110e4 <avl_max_subarvore@@Base+0x4c>
   110d0:	add	r0, pc, r0
   110d4:	bl	10ee8 <printf@plt>
   110d8:	mov	r0, r6
   110dc:	pop	{r4, r5, r6, sl, fp, lr}
   110e0:	b	10f0c <free@plt>
   110e4:	strdeq	r1, [r0], -ip

000110e8 <tabela_copia@@Base>:
   110e8:	push	{r4, r5, r6, r7, fp, lr}
   110ec:	add	fp, sp, #16
   110f0:	sub	sp, sp, #8
   110f4:	mov	r2, r1
   110f8:	ldr	r1, [r0]
   110fc:	mov	r5, r0
   11100:	mov	r0, r2
   11104:	bl	11f78 <tabela_nova@@Base>
   11108:	mov	r4, r0
   1110c:	add	r1, sp, #4
   11110:	mov	r0, r5
   11114:	bl	123e4 <tabela_elementos@@Base>
   11118:	mov	r5, r0
   1111c:	ldr	r0, [sp, #4]
   11120:	cmp	r0, #1
   11124:	blt	11154 <tabela_copia@@Base+0x6c>
   11128:	mov	r7, #0
   1112c:	mov	r6, r5
   11130:	add	r2, r6, #50	; 0x32
   11134:	mov	r0, r4
   11138:	mov	r1, r6
   1113c:	bl	1205c <tabela_adiciona@@Base>
   11140:	ldr	r0, [sp, #4]
   11144:	add	r7, r7, #1
   11148:	add	r6, r6, #150	; 0x96
   1114c:	cmp	r7, r0
   11150:	blt	11130 <tabela_copia@@Base+0x48>
   11154:	mov	r0, r5
   11158:	bl	10f0c <free@plt>
   1115c:	mov	r0, r4
   11160:	sub	sp, fp, #16
   11164:	pop	{r4, r5, r6, r7, fp, pc}

00011168 <main@@Base>:
   11168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1116c:	add	fp, sp, #28
   11170:	sub	sp, sp, #508	; 0x1fc
   11174:	ldr	r0, [pc, #548]	; 113a0 <main@@Base+0x238>
   11178:	mov	r1, #0
   1117c:	mov	r2, #2
   11180:	mov	r3, #0
   11184:	ldr	r0, [pc, r0]
   11188:	ldr	r0, [r0]
   1118c:	bl	10f78 <setvbuf@plt>
   11190:	ldr	r0, [pc, #524]	; 113a4 <main@@Base+0x23c>
   11194:	ldr	r4, [pc, #524]	; 113a8 <main@@Base+0x240>
   11198:	add	r4, pc, r4
   1119c:	add	r0, pc, r0
   111a0:	mov	r1, r4
   111a4:	bl	10f00 <fopen@plt>
   111a8:	mov	r9, r0
   111ac:	ldr	r0, [pc, #504]	; 113ac <main@@Base+0x244>
   111b0:	mov	r1, r4
   111b4:	add	r0, pc, r0
   111b8:	bl	10f00 <fopen@plt>
   111bc:	mov	sl, r0
   111c0:	ldr	r0, [pc, #488]	; 113b0 <main@@Base+0x248>
   111c4:	add	r0, pc, r0
   111c8:	bl	10f3c <puts@plt>
   111cc:	bl	113dc <avl_nova@@Base>
   111d0:	ldr	r1, [pc, #476]	; 113b4 <main@@Base+0x24c>
   111d4:	mov	r6, r0
   111d8:	mov	r2, sp
   111dc:	mov	r0, r9
   111e0:	add	r1, pc, r1
   111e4:	bl	10ef4 <__isoc99_fscanf@plt>
   111e8:	cmp	r0, #1
   111ec:	bne	11220 <main@@Base+0xb8>
   111f0:	ldr	r5, [pc, #448]	; 113b8 <main@@Base+0x250>
   111f4:	mov	r4, sp
   111f8:	add	r5, pc, r5
   111fc:	mov	r0, r6
   11200:	mov	r1, r4
   11204:	bl	11928 <avl_insere@@Base>
   11208:	mov	r0, r9
   1120c:	mov	r1, r5
   11210:	mov	r2, r4
   11214:	bl	10ef4 <__isoc99_fscanf@plt>
   11218:	cmp	r0, #1
   1121c:	beq	111fc <main@@Base+0x94>
   11220:	ldr	r0, [pc, #404]	; 113bc <main@@Base+0x254>
   11224:	add	r0, pc, r0
   11228:	bl	10ee8 <printf@plt>
   1122c:	mov	r0, r6
   11230:	bl	11da4 <avl_imprime@@Base>
   11234:	ldr	r0, [pc, #388]	; 113c0 <main@@Base+0x258>
   11238:	add	r0, pc, r0
   1123c:	bl	10ee8 <printf@plt>
   11240:	bl	113dc <avl_nova@@Base>
   11244:	ldr	r1, [pc, #376]	; 113c4 <main@@Base+0x25c>
   11248:	mov	r4, r0
   1124c:	mov	r0, r6
   11250:	add	r1, pc, r1
   11254:	bl	11864 <avl_pesquisa@@Base>
   11258:	str	r0, [r4]
   1125c:	mov	r0, r4
   11260:	bl	11d64 <avl_max@@Base>
   11264:	ldr	r5, [pc, #348]	; 113c8 <main@@Base+0x260>
   11268:	mov	r1, r0
   1126c:	add	r5, pc, r5
   11270:	mov	r0, r5
   11274:	bl	10ee8 <printf@plt>
   11278:	mov	r0, r4
   1127c:	bl	10f0c <free@plt>
   11280:	mov	r0, r6
   11284:	bl	11400 <avl_apaga@@Base>
   11288:	ldr	r0, [pc, #316]	; 113cc <main@@Base+0x264>
   1128c:	add	r0, pc, r0
   11290:	bl	10f3c <puts@plt>
   11294:	ldr	r1, [pc, #308]	; 113d0 <main@@Base+0x268>
   11298:	movw	r0, #601	; 0x259
   1129c:	ldr	r1, [pc, r1]
   112a0:	bl	11f78 <tabela_nova@@Base>
   112a4:	mov	r6, r0
   112a8:	mov	r2, sp
   112ac:	mov	r0, sl
   112b0:	mov	r1, r5
   112b4:	bl	10ef4 <__isoc99_fscanf@plt>
   112b8:	cmp	r0, #1
   112bc:	bne	112fc <main@@Base+0x194>
   112c0:	ldr	r4, [pc, #268]	; 113d4 <main@@Base+0x26c>
   112c4:	ldr	r5, [pc, #268]	; 113d8 <main@@Base+0x270>
   112c8:	mov	r7, sp
   112cc:	add	r4, pc, r4
   112d0:	add	r5, pc, r5
   112d4:	mov	r0, r6
   112d8:	mov	r1, r7
   112dc:	mov	r2, r4
   112e0:	bl	1205c <tabela_adiciona@@Base>
   112e4:	mov	r0, sl
   112e8:	mov	r1, r5
   112ec:	mov	r2, r7
   112f0:	bl	10ef4 <__isoc99_fscanf@plt>
   112f4:	cmp	r0, #1
   112f8:	beq	112d4 <main@@Base+0x16c>
   112fc:	mov	r0, r6
   11300:	bl	1255c <mostraTabela@@Base>
   11304:	ldr	r1, [r6]
   11308:	movw	r0, #619	; 0x26b
   1130c:	bl	11f78 <tabela_nova@@Base>
   11310:	mov	r7, r0
   11314:	sub	r1, fp, #36	; 0x24
   11318:	mov	r0, r6
   1131c:	bl	123e4 <tabela_elementos@@Base>
   11320:	mov	r8, r0
   11324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11328:	cmp	r0, #1
   1132c:	blt	1135c <main@@Base+0x1f4>
   11330:	mov	r5, #0
   11334:	mov	r4, r8
   11338:	add	r2, r4, #50	; 0x32
   1133c:	mov	r0, r7
   11340:	mov	r1, r4
   11344:	bl	1205c <tabela_adiciona@@Base>
   11348:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1134c:	add	r5, r5, #1
   11350:	add	r4, r4, #150	; 0x96
   11354:	cmp	r5, r0
   11358:	blt	11338 <main@@Base+0x1d0>
   1135c:	mov	r0, r8
   11360:	bl	10f0c <free@plt>
   11364:	cmp	r7, #0
   11368:	beq	11374 <main@@Base+0x20c>
   1136c:	mov	r0, r7
   11370:	bl	1255c <mostraTabela@@Base>
   11374:	mov	r0, r6
   11378:	bl	11fec <tabela_apaga@@Base>
   1137c:	mov	r0, r7
   11380:	bl	11fec <tabela_apaga@@Base>
   11384:	mov	r0, r9
   11388:	bl	10f90 <fclose@plt>
   1138c:	mov	r0, sl
   11390:	bl	10f90 <fclose@plt>
   11394:	mov	r0, #0
   11398:	sub	sp, fp, #28
   1139c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113a0:	ldrdeq	r1, [r1], -r0
   113a4:	andeq	r1, r0, r3, lsr r5
   113a8:	andeq	r1, r0, r2, asr #10
   113ac:	andeq	r1, r0, r8, lsr #10
   113b0:	andeq	r1, r0, r2, lsr #10
   113b4:	andeq	r1, r0, ip, ror #9
   113b8:	ldrdeq	r1, [r0], -r4
   113bc:	ldrdeq	r1, [r0], -r3
   113c0:	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   113c4:	ldrdeq	r1, [r0], -r0
   113c8:	andeq	r1, r0, r0, ror #8
   113cc:	muleq	r0, r7, r4
   113d0:			; <UNDEFINED> instruction: 0x00011db0
   113d4:	muleq	r0, r1, r4
   113d8:	strdeq	r1, [r0], -ip

000113dc <avl_nova@@Base>:
   113dc:	push	{fp, lr}
   113e0:	mov	fp, sp
   113e4:	mov	r0, #4
   113e8:	bl	10f48 <malloc@plt>
   113ec:	cmp	r0, #0
   113f0:	moveq	r0, #0
   113f4:	movne	r1, #0
   113f8:	strne	r1, [r0]
   113fc:	pop	{fp, pc}

00011400 <avl_apaga@@Base>:
   11400:	cmp	r0, #0
   11404:	bxeq	lr
   11408:	push	{r4, sl, fp, lr}
   1140c:	add	fp, sp, #8
   11410:	mov	r4, r0
   11414:	ldr	r0, [r0]
   11418:	cmp	r0, #0
   1141c:	beq	11434 <avl_apaga@@Base+0x34>
   11420:	ldr	r1, [r0]
   11424:	bl	11440 <avl_remove_impl@@Base>
   11428:	str	r0, [r4]
   1142c:	cmp	r0, #0
   11430:	bne	11420 <avl_apaga@@Base+0x20>
   11434:	mov	r0, r4
   11438:	pop	{r4, sl, fp, lr}
   1143c:	b	10f0c <free@plt>

00011440 <avl_remove_impl@@Base>:
   11440:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11444:	add	fp, sp, #24
   11448:	mov	r8, #0
   1144c:	cmp	r0, #0
   11450:	beq	117ec <avl_remove_impl@@Base+0x3ac>
   11454:	ldr	r6, [r0]
   11458:	mov	r5, r0
   1145c:	mov	r7, r1
   11460:	mov	r0, r1
   11464:	mov	r1, r6
   11468:	bl	10edc <strcmp@plt>
   1146c:	mov	r4, r5
   11470:	cmn	r0, #1
   11474:	bgt	11480 <avl_remove_impl@@Base+0x40>
   11478:	ldr	r0, [r4, #4]!
   1147c:	b	1148c <avl_remove_impl@@Base+0x4c>
   11480:	cmp	r0, #0
   11484:	beq	116d4 <avl_remove_impl@@Base+0x294>
   11488:	ldr	r0, [r4, #8]!
   1148c:	mov	r1, r7
   11490:	bl	11440 <avl_remove_impl@@Base>
   11494:	str	r0, [r4]
   11498:	ldr	r1, [r5, #4]
   1149c:	ldr	r2, [r5, #8]
   114a0:	cmp	r1, #0
   114a4:	ldrne	r0, [r1, #12]
   114a8:	mvneq	r0, #0
   114ac:	cmp	r2, #0
   114b0:	beq	114d4 <avl_remove_impl@@Base+0x94>
   114b4:	ldr	r3, [r2, #12]
   114b8:	cmp	r0, r3
   114bc:	movgt	r3, r0
   114c0:	mov	r0, r5
   114c4:	add	r3, r3, #1
   114c8:	str	r3, [r0, #12]!
   114cc:	ldr	r3, [r2, #12]
   114d0:	b	114e8 <avl_remove_impl@@Base+0xa8>
   114d4:	orr	r0, r0, r0, asr #31
   114d8:	add	r3, r0, #1
   114dc:	mov	r0, r5
   114e0:	str	r3, [r0, #12]!
   114e4:	mvn	r3, #0
   114e8:	cmp	r1, #0
   114ec:	ldrne	r7, [r1, #12]
   114f0:	mvneq	r7, #0
   114f4:	sub	r3, r3, r7
   114f8:	cmp	r3, #2
   114fc:	blt	115e0 <avl_remove_impl@@Base+0x1a0>
   11500:	cmp	r2, #0
   11504:	beq	11728 <avl_remove_impl@@Base+0x2e8>
   11508:	ldr	r1, [r2, #8]
   1150c:	mvn	r7, #0
   11510:	mvn	r3, #0
   11514:	cmp	r1, #0
   11518:	ldrne	r7, [r1, #12]
   1151c:	mov	r1, r2
   11520:	ldr	r8, [r1, #4]!
   11524:	cmp	r8, #0
   11528:	ldrne	r3, [r8, #12]
   1152c:	cmp	r7, r3
   11530:	bge	11730 <avl_remove_impl@@Base+0x2f0>
   11534:	ldr	r7, [r8, #8]
   11538:	str	r2, [r8, #8]
   1153c:	mvn	r3, #0
   11540:	mvn	r1, #0
   11544:	str	r7, [r2, #4]
   11548:	cmp	r7, #0
   1154c:	ldrne	r3, [r7, #12]
   11550:	ldr	r7, [r2, #8]
   11554:	cmp	r7, #0
   11558:	ldrne	r1, [r7, #12]
   1155c:	mvn	r7, #0
   11560:	cmp	r3, r1
   11564:	movgt	r1, r3
   11568:	add	r3, r1, #1
   1156c:	mvn	r1, #0
   11570:	str	r3, [r2, #12]
   11574:	ldr	r2, [r8, #4]
   11578:	cmp	r2, #0
   1157c:	ldrne	r7, [r2, #12]
   11580:	str	r5, [r8, #4]
   11584:	cmp	r7, r3
   11588:	movgt	r3, r7
   1158c:	mvn	r7, #0
   11590:	add	r3, r3, #1
   11594:	str	r3, [r8, #12]
   11598:	str	r2, [r5, #8]
   1159c:	ldr	r3, [r5, #4]
   115a0:	cmp	r3, #0
   115a4:	ldrne	r1, [r3, #12]
   115a8:	cmp	r2, #0
   115ac:	mvn	r3, #0
   115b0:	ldrne	r7, [r2, #12]
   115b4:	cmp	r1, r7
   115b8:	movgt	r7, r1
   115bc:	add	r1, r7, #1
   115c0:	str	r1, [r0]
   115c4:	ldr	r0, [r8, #8]
   115c8:	cmp	r0, #0
   115cc:	ldrne	r3, [r0, #12]
   115d0:	cmp	r1, r3
   115d4:	movgt	r3, r1
   115d8:	add	r0, r3, #1
   115dc:	b	116c8 <avl_remove_impl@@Base+0x288>
   115e0:	cmn	r3, #2
   115e4:	movgt	r0, r5
   115e8:	popgt	{r4, r5, r6, r7, r8, sl, fp, pc}
   115ec:	cmp	r1, #0
   115f0:	beq	1178c <avl_remove_impl@@Base+0x34c>
   115f4:	mov	r2, r1
   115f8:	ldr	r6, [r1, #4]
   115fc:	mvn	r7, #0
   11600:	mvn	r3, #0
   11604:	ldr	r8, [r2, #8]!
   11608:	cmp	r8, #0
   1160c:	ldrne	r7, [r8, #12]
   11610:	cmp	r6, #0
   11614:	ldrne	r3, [r6, #12]
   11618:	cmp	r7, r3
   1161c:	ble	11794 <avl_remove_impl@@Base+0x354>
   11620:	ldr	r3, [r8, #4]
   11624:	str	r1, [r8, #4]
   11628:	mvn	r7, #0
   1162c:	mvn	r2, #0
   11630:	str	r3, [r1, #8]
   11634:	ldr	r6, [r1, #4]
   11638:	cmp	r6, #0
   1163c:	ldrne	r7, [r6, #12]
   11640:	cmp	r3, #0
   11644:	ldrne	r2, [r3, #12]
   11648:	cmp	r7, r2
   1164c:	movgt	r2, r7
   11650:	mvn	r7, #0
   11654:	add	r3, r2, #1
   11658:	str	r3, [r1, #12]
   1165c:	mvn	r1, #0
   11660:	ldr	r2, [r8, #8]
   11664:	cmp	r2, #0
   11668:	ldrne	r7, [r2, #12]
   1166c:	str	r5, [r8, #8]
   11670:	cmp	r3, r7
   11674:	movgt	r7, r3
   11678:	cmp	r2, #0
   1167c:	add	r3, r7, #1
   11680:	str	r3, [r8, #12]
   11684:	str	r2, [r5, #4]
   11688:	mvn	r3, #0
   1168c:	ldr	r7, [r5, #8]
   11690:	ldrne	r1, [r2, #12]
   11694:	mvn	r2, #0
   11698:	cmp	r7, #0
   1169c:	ldrne	r3, [r7, #12]
   116a0:	cmp	r1, r3
   116a4:	movgt	r3, r1
   116a8:	add	r1, r3, #1
   116ac:	str	r1, [r0]
   116b0:	ldr	r0, [r8, #4]
   116b4:	cmp	r0, #0
   116b8:	ldrne	r2, [r0, #12]
   116bc:	cmp	r2, r1
   116c0:	movgt	r1, r2
   116c4:	add	r0, r1, #1
   116c8:	str	r0, [r8, #12]
   116cc:	mov	r0, r8
   116d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   116d4:	ldr	r0, [r4, #8]!
   116d8:	ldr	r7, [r4, #-4]
   116dc:	cmp	r7, #0
   116e0:	beq	117f4 <avl_remove_impl@@Base+0x3b4>
   116e4:	cmp	r0, #0
   116e8:	beq	11800 <avl_remove_impl@@Base+0x3c0>
   116ec:	mov	r7, r0
   116f0:	ldr	r0, [r0, #4]
   116f4:	cmp	r0, #0
   116f8:	bne	116ec <avl_remove_impl@@Base+0x2ac>
   116fc:	ldr	r0, [r7]
   11700:	bl	10f6c <strlen@plt>
   11704:	add	r1, r0, #1
   11708:	mov	r0, r6
   1170c:	bl	10f24 <realloc@plt>
   11710:	str	r0, [r5]
   11714:	ldr	r1, [r7]
   11718:	bl	10f30 <strcpy@plt>
   1171c:	ldr	r0, [r5, #8]
   11720:	ldr	r1, [r7]
   11724:	b	11490 <avl_remove_impl@@Base+0x50>
   11728:	mov	r1, #4
   1172c:	ldr	r8, [r1]
   11730:	str	r5, [r1]
   11734:	str	r8, [r5, #8]
   11738:	mvn	r3, #0
   1173c:	mvn	r1, #0
   11740:	ldr	r7, [r5, #4]
   11744:	cmp	r7, #0
   11748:	ldrne	r3, [r7, #12]
   1174c:	cmp	r8, #0
   11750:	ldrne	r1, [r8, #12]
   11754:	cmp	r3, r1
   11758:	movgt	r1, r3
   1175c:	add	r1, r1, #1
   11760:	str	r1, [r0]
   11764:	ldr	r0, [r2, #8]
   11768:	cmp	r0, #0
   1176c:	ldrne	r0, [r0, #12]
   11770:	mvneq	r0, #0
   11774:	cmp	r1, r0
   11778:	movgt	r0, r1
   1177c:	add	r0, r0, #1
   11780:	str	r0, [r2, #12]
   11784:	mov	r0, r2
   11788:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1178c:	mov	r2, #8
   11790:	ldr	r8, [r2]
   11794:	str	r5, [r2]
   11798:	str	r8, [r5, #4]
   1179c:	cmp	r8, #0
   117a0:	mvn	r3, #0
   117a4:	mvn	r2, #0
   117a8:	ldr	r7, [r5, #8]
   117ac:	ldrne	r3, [r8, #12]
   117b0:	mov	r8, r1
   117b4:	cmp	r7, #0
   117b8:	ldrne	r2, [r7, #12]
   117bc:	cmp	r3, r2
   117c0:	movgt	r2, r3
   117c4:	add	r2, r2, #1
   117c8:	str	r2, [r0]
   117cc:	ldr	r0, [r1, #4]
   117d0:	cmp	r0, #0
   117d4:	ldrne	r0, [r0, #12]
   117d8:	mvneq	r0, #0
   117dc:	cmp	r0, r2
   117e0:	movgt	r2, r0
   117e4:	add	r0, r2, #1
   117e8:	str	r0, [r1, #12]
   117ec:	mov	r0, r8
   117f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   117f4:	cmp	r0, #0
   117f8:	mov	r7, r0
   117fc:	beq	11840 <avl_remove_impl@@Base+0x400>
   11800:	ldr	r0, [r7]
   11804:	bl	10f6c <strlen@plt>
   11808:	add	r1, r0, #1
   1180c:	mov	r0, r6
   11810:	bl	10f24 <realloc@plt>
   11814:	str	r0, [r5]
   11818:	ldr	r1, [r7]
   1181c:	bl	10f30 <strcpy@plt>
   11820:	ldr	r0, [r7, #4]
   11824:	str	r0, [r5, #4]
   11828:	ldr	r0, [r7, #8]
   1182c:	str	r0, [r5, #8]
   11830:	ldr	r0, [r7, #12]
   11834:	str	r0, [r5, #12]
   11838:	ldr	r6, [r7]
   1183c:	b	11848 <avl_remove_impl@@Base+0x408>
   11840:	mov	r7, r5
   11844:	mov	r5, #0
   11848:	mov	r0, r6
   1184c:	bl	10f0c <free@plt>
   11850:	mov	r0, r7
   11854:	bl	10f0c <free@plt>
   11858:	cmp	r5, #0
   1185c:	bne	11498 <avl_remove_impl@@Base+0x58>
   11860:	b	117ec <avl_remove_impl@@Base+0x3ac>

00011864 <avl_pesquisa@@Base>:
   11864:	push	{r4, r5, r6, sl, fp, lr}
   11868:	add	fp, sp, #16
   1186c:	cmp	r0, #0
   11870:	mov	r4, #0
   11874:	movne	r5, r1
   11878:	cmpne	r1, #0
   1187c:	beq	118bc <avl_pesquisa@@Base+0x58>
   11880:	b	11888 <avl_pesquisa@@Base+0x24>
   11884:	add	r0, r6, #4
   11888:	ldr	r6, [r0]
   1188c:	cmp	r6, #0
   11890:	beq	118bc <avl_pesquisa@@Base+0x58>
   11894:	ldr	r1, [r6]
   11898:	mov	r0, r5
   1189c:	bl	10edc <strcmp@plt>
   118a0:	cmn	r0, #1
   118a4:	ble	11884 <avl_pesquisa@@Base+0x20>
   118a8:	cmp	r0, #0
   118ac:	beq	118b8 <avl_pesquisa@@Base+0x54>
   118b0:	add	r0, r6, #8
   118b4:	b	11888 <avl_pesquisa@@Base+0x24>
   118b8:	mov	r4, r6
   118bc:	mov	r0, r4
   118c0:	pop	{r4, r5, r6, sl, fp, pc}

000118c4 <avl_pesquisa_impl@@Base>:
   118c4:	push	{r4, r5, r6, sl, fp, lr}
   118c8:	add	fp, sp, #16
   118cc:	mov	r4, #0
   118d0:	cmp	r0, #0
   118d4:	beq	11914 <avl_pesquisa_impl@@Base+0x50>
   118d8:	mov	r5, r1
   118dc:	mov	r6, r0
   118e0:	ldr	r1, [r6]
   118e4:	mov	r0, r5
   118e8:	bl	10edc <strcmp@plt>
   118ec:	cmn	r0, #1
   118f0:	bgt	118fc <avl_pesquisa_impl@@Base+0x38>
   118f4:	add	r0, r6, #4
   118f8:	b	11908 <avl_pesquisa_impl@@Base+0x44>
   118fc:	cmp	r0, #0
   11900:	beq	1191c <avl_pesquisa_impl@@Base+0x58>
   11904:	add	r0, r6, #8
   11908:	ldr	r6, [r0]
   1190c:	cmp	r6, #0
   11910:	bne	118e0 <avl_pesquisa_impl@@Base+0x1c>
   11914:	mov	r0, r4
   11918:	pop	{r4, r5, r6, sl, fp, pc}
   1191c:	mov	r4, r6
   11920:	mov	r0, r4
   11924:	pop	{r4, r5, r6, sl, fp, pc}

00011928 <avl_insere@@Base>:
   11928:	push	{r4, sl, fp, lr}
   1192c:	add	fp, sp, #8
   11930:	mov	r4, r0
   11934:	mvn	r0, #0
   11938:	cmp	r4, #0
   1193c:	cmpne	r1, #0
   11940:	bne	11948 <avl_insere@@Base+0x20>
   11944:	pop	{r4, sl, fp, pc}
   11948:	ldr	r0, [r4]
   1194c:	bl	1195c <avl_insere_impl@@Base>
   11950:	str	r0, [r4]
   11954:	mov	r0, #0
   11958:	pop	{r4, sl, fp, pc}

0001195c <avl_insere_impl@@Base>:
   1195c:	push	{r4, r5, r6, sl, fp, lr}
   11960:	add	fp, sp, #16
   11964:	mov	r6, r1
   11968:	cmp	r0, #0
   1196c:	beq	1199c <avl_insere_impl@@Base+0x40>
   11970:	ldr	r1, [r0]
   11974:	mov	r4, r0
   11978:	mov	r0, r6
   1197c:	bl	10edc <strcmp@plt>
   11980:	cmn	r0, #1
   11984:	bgt	119dc <avl_insere_impl@@Base+0x80>
   11988:	ldr	r0, [r4, #4]
   1198c:	mov	r1, r6
   11990:	bl	1195c <avl_insere_impl@@Base>
   11994:	str	r0, [r4, #4]
   11998:	b	119f8 <avl_insere_impl@@Base+0x9c>
   1199c:	mov	r0, #16
   119a0:	bl	10f48 <malloc@plt>
   119a4:	mov	r5, r0
   119a8:	mov	r0, r6
   119ac:	bl	10f6c <strlen@plt>
   119b0:	add	r0, r0, #1
   119b4:	bl	10f48 <malloc@plt>
   119b8:	mov	r1, r6
   119bc:	str	r0, [r5]
   119c0:	bl	10f30 <strcpy@plt>
   119c4:	mov	r0, #0
   119c8:	str	r0, [r5, #4]
   119cc:	str	r0, [r5, #8]
   119d0:	str	r0, [r5, #12]
   119d4:	mov	r0, r5
   119d8:	pop	{r4, r5, r6, sl, fp, pc}
   119dc:	cmp	r0, #0
   119e0:	beq	11c24 <avl_insere_impl@@Base+0x2c8>
   119e4:	ldr	r0, [r4, #8]
   119e8:	mov	r1, r6
   119ec:	bl	1195c <avl_insere_impl@@Base>
   119f0:	str	r0, [r4, #8]
   119f4:	ldr	r0, [r4, #4]
   119f8:	cmp	r0, #0
   119fc:	ldr	r2, [r4, #8]
   11a00:	ldrne	r1, [r0, #12]
   11a04:	mvneq	r1, #0
   11a08:	cmp	r2, #0
   11a0c:	beq	11a30 <avl_insere_impl@@Base+0xd4>
   11a10:	ldr	r3, [r2, #12]
   11a14:	cmp	r1, r3
   11a18:	movgt	r3, r1
   11a1c:	mov	r1, r4
   11a20:	add	r3, r3, #1
   11a24:	str	r3, [r1, #12]!
   11a28:	ldr	r3, [r2, #12]
   11a2c:	b	11a44 <avl_insere_impl@@Base+0xe8>
   11a30:	orr	r1, r1, r1, asr #31
   11a34:	add	r3, r1, #1
   11a38:	mov	r1, r4
   11a3c:	str	r3, [r1, #12]!
   11a40:	mvn	r3, #0
   11a44:	cmp	r0, #0
   11a48:	ldrne	r6, [r0, #12]
   11a4c:	mvneq	r6, #0
   11a50:	sub	r3, r3, r6
   11a54:	cmp	r3, #2
   11a58:	blt	11b3c <avl_insere_impl@@Base+0x1e0>
   11a5c:	cmp	r2, #0
   11a60:	beq	11c2c <avl_insere_impl@@Base+0x2d0>
   11a64:	ldr	r0, [r2, #8]
   11a68:	mvn	r6, #0
   11a6c:	mvn	r3, #0
   11a70:	cmp	r0, #0
   11a74:	ldrne	r6, [r0, #12]
   11a78:	mov	r0, r2
   11a7c:	ldr	r5, [r0, #4]!
   11a80:	cmp	r5, #0
   11a84:	ldrne	r3, [r5, #12]
   11a88:	cmp	r6, r3
   11a8c:	bge	11c34 <avl_insere_impl@@Base+0x2d8>
   11a90:	ldr	r6, [r5, #8]
   11a94:	str	r2, [r5, #8]
   11a98:	mvn	r3, #0
   11a9c:	mvn	r0, #0
   11aa0:	str	r6, [r2, #4]
   11aa4:	cmp	r6, #0
   11aa8:	ldrne	r3, [r6, #12]
   11aac:	ldr	r6, [r2, #8]
   11ab0:	cmp	r6, #0
   11ab4:	ldrne	r0, [r6, #12]
   11ab8:	mvn	r6, #0
   11abc:	cmp	r3, r0
   11ac0:	movgt	r0, r3
   11ac4:	add	r3, r0, #1
   11ac8:	mvn	r0, #0
   11acc:	str	r3, [r2, #12]
   11ad0:	ldr	r2, [r5, #4]
   11ad4:	cmp	r2, #0
   11ad8:	ldrne	r6, [r2, #12]
   11adc:	str	r4, [r5, #4]
   11ae0:	cmp	r6, r3
   11ae4:	movgt	r3, r6
   11ae8:	mvn	r6, #0
   11aec:	add	r3, r3, #1
   11af0:	str	r3, [r5, #12]
   11af4:	str	r2, [r4, #8]
   11af8:	ldr	r3, [r4, #4]
   11afc:	cmp	r3, #0
   11b00:	ldrne	r0, [r3, #12]
   11b04:	cmp	r2, #0
   11b08:	mvn	r3, #0
   11b0c:	ldrne	r6, [r2, #12]
   11b10:	cmp	r0, r6
   11b14:	movgt	r6, r0
   11b18:	add	r0, r6, #1
   11b1c:	str	r0, [r1]
   11b20:	ldr	r1, [r5, #8]
   11b24:	cmp	r1, #0
   11b28:	ldrne	r3, [r1, #12]
   11b2c:	cmp	r0, r3
   11b30:	movgt	r3, r0
   11b34:	add	r0, r3, #1
   11b38:	b	119d0 <avl_insere_impl@@Base+0x74>
   11b3c:	cmn	r3, #2
   11b40:	bgt	11c24 <avl_insere_impl@@Base+0x2c8>
   11b44:	cmp	r0, #0
   11b48:	beq	11c90 <avl_insere_impl@@Base+0x334>
   11b4c:	mov	r2, r0
   11b50:	ldr	r3, [r0, #4]
   11b54:	mvn	r6, #0
   11b58:	mvn	ip, #0
   11b5c:	ldr	r5, [r2, #8]!
   11b60:	cmp	r5, #0
   11b64:	ldrne	r6, [r5, #12]
   11b68:	cmp	r3, #0
   11b6c:	ldrne	ip, [r3, #12]
   11b70:	cmp	r6, ip
   11b74:	ble	11c98 <avl_insere_impl@@Base+0x33c>
   11b78:	ldr	r3, [r5, #4]
   11b7c:	str	r0, [r5, #4]
   11b80:	mvn	r6, #0
   11b84:	mvn	r2, #0
   11b88:	str	r3, [r0, #8]
   11b8c:	ldr	ip, [r0, #4]
   11b90:	cmp	ip, #0
   11b94:	ldrne	r6, [ip, #12]
   11b98:	cmp	r3, #0
   11b9c:	ldrne	r2, [r3, #12]
   11ba0:	cmp	r6, r2
   11ba4:	movgt	r2, r6
   11ba8:	mvn	r6, #0
   11bac:	add	r3, r2, #1
   11bb0:	str	r3, [r0, #12]
   11bb4:	mvn	r0, #0
   11bb8:	ldr	r2, [r5, #8]
   11bbc:	cmp	r2, #0
   11bc0:	ldrne	r6, [r2, #12]
   11bc4:	str	r4, [r5, #8]
   11bc8:	cmp	r3, r6
   11bcc:	movgt	r6, r3
   11bd0:	cmp	r2, #0
   11bd4:	add	r3, r6, #1
   11bd8:	str	r3, [r5, #12]
   11bdc:	str	r2, [r4, #4]
   11be0:	mvn	r3, #0
   11be4:	ldr	r6, [r4, #8]
   11be8:	ldrne	r0, [r2, #12]
   11bec:	mvn	r2, #0
   11bf0:	cmp	r6, #0
   11bf4:	ldrne	r3, [r6, #12]
   11bf8:	cmp	r0, r3
   11bfc:	movgt	r3, r0
   11c00:	add	r0, r3, #1
   11c04:	str	r0, [r1]
   11c08:	ldr	r1, [r5, #4]
   11c0c:	cmp	r1, #0
   11c10:	ldrne	r2, [r1, #12]
   11c14:	cmp	r2, r0
   11c18:	movgt	r0, r2
   11c1c:	add	r0, r0, #1
   11c20:	b	119d0 <avl_insere_impl@@Base+0x74>
   11c24:	mov	r0, r4
   11c28:	pop	{r4, r5, r6, sl, fp, pc}
   11c2c:	mov	r0, #4
   11c30:	ldr	r5, [r0]
   11c34:	str	r4, [r0]
   11c38:	str	r5, [r4, #8]
   11c3c:	mvn	r3, #0
   11c40:	mvn	r0, #0
   11c44:	ldr	r6, [r4, #4]
   11c48:	cmp	r6, #0
   11c4c:	ldrne	r3, [r6, #12]
   11c50:	cmp	r5, #0
   11c54:	ldrne	r0, [r5, #12]
   11c58:	cmp	r3, r0
   11c5c:	movgt	r0, r3
   11c60:	add	r0, r0, #1
   11c64:	str	r0, [r1]
   11c68:	ldr	r1, [r2, #8]
   11c6c:	cmp	r1, #0
   11c70:	ldrne	r1, [r1, #12]
   11c74:	mvneq	r1, #0
   11c78:	cmp	r0, r1
   11c7c:	movgt	r1, r0
   11c80:	add	r0, r1, #1
   11c84:	str	r0, [r2, #12]
   11c88:	mov	r0, r2
   11c8c:	pop	{r4, r5, r6, sl, fp, pc}
   11c90:	mov	r2, #8
   11c94:	ldr	r5, [r2]
   11c98:	str	r4, [r2]
   11c9c:	str	r5, [r4, #4]
   11ca0:	cmp	r5, #0
   11ca4:	mvn	r3, #0
   11ca8:	mvn	r2, #0
   11cac:	ldr	r6, [r4, #8]
   11cb0:	ldrne	r3, [r5, #12]
   11cb4:	cmp	r6, #0
   11cb8:	ldrne	r2, [r6, #12]
   11cbc:	cmp	r3, r2
   11cc0:	movgt	r2, r3
   11cc4:	add	r2, r2, #1
   11cc8:	str	r2, [r1]
   11ccc:	ldr	r1, [r0, #4]
   11cd0:	cmp	r1, #0
   11cd4:	ldrne	r1, [r1, #12]
   11cd8:	mvneq	r1, #0
   11cdc:	cmp	r1, r2
   11ce0:	movgt	r2, r1
   11ce4:	add	r1, r2, #1
   11ce8:	str	r1, [r0, #12]
   11cec:	pop	{r4, r5, r6, sl, fp, pc}

00011cf0 <avl_remove@@Base>:
   11cf0:	push	{r4, sl, fp, lr}
   11cf4:	add	fp, sp, #8
   11cf8:	mov	r4, r0
   11cfc:	mvn	r0, #0
   11d00:	cmp	r4, #0
   11d04:	cmpne	r1, #0
   11d08:	bne	11d10 <avl_remove@@Base+0x20>
   11d0c:	pop	{r4, sl, fp, pc}
   11d10:	ldr	r0, [r4]
   11d14:	bl	11440 <avl_remove_impl@@Base>
   11d18:	str	r0, [r4]
   11d1c:	mov	r0, #0
   11d20:	pop	{r4, sl, fp, pc}

00011d24 <avl_min@@Base>:
   11d24:	cmp	r0, #0
   11d28:	moveq	r0, #0
   11d2c:	bxeq	lr
   11d30:	ldr	r0, [r0]
   11d34:	mov	r1, r0
   11d38:	ldr	r0, [r0, #4]
   11d3c:	cmp	r0, #0
   11d40:	bne	11d34 <avl_min@@Base+0x10>
   11d44:	ldr	r0, [r1]
   11d48:	bx	lr

00011d4c <avl_no_valormin@@Base>:
   11d4c:	mov	r1, r0
   11d50:	ldr	r0, [r0, #4]
   11d54:	cmp	r0, #0
   11d58:	bne	11d4c <avl_no_valormin@@Base>
   11d5c:	mov	r0, r1
   11d60:	bx	lr

00011d64 <avl_max@@Base>:
   11d64:	cmp	r0, #0
   11d68:	moveq	r0, #0
   11d6c:	bxeq	lr
   11d70:	ldr	r0, [r0]
   11d74:	mov	r1, r0
   11d78:	ldr	r0, [r0, #8]
   11d7c:	cmp	r0, #0
   11d80:	bne	11d74 <avl_max@@Base+0x10>
   11d84:	ldr	r0, [r1]
   11d88:	bx	lr

00011d8c <avl_no_valormax@@Base>:
   11d8c:	mov	r1, r0
   11d90:	ldr	r0, [r0, #8]
   11d94:	cmp	r0, #0
   11d98:	bne	11d8c <avl_no_valormax@@Base>
   11d9c:	mov	r0, r1
   11da0:	bx	lr

00011da4 <avl_imprime@@Base>:
   11da4:	cmp	r0, #0
   11da8:	bxeq	lr
   11dac:	push	{fp, lr}
   11db0:	mov	fp, sp
   11db4:	ldr	r0, [r0]
   11db8:	bl	11dc8 <avl_preordem_impl@@Base>
   11dbc:	mov	r0, #10
   11dc0:	pop	{fp, lr}
   11dc4:	b	10f84 <putchar@plt>

00011dc8 <avl_preordem_impl@@Base>:
   11dc8:	push	{r4, r5, fp, lr}
   11dcc:	add	fp, sp, #8
   11dd0:	cmp	r0, #0
   11dd4:	popeq	{r4, r5, fp, pc}
   11dd8:	ldr	r5, [pc, #40]	; 11e08 <avl_preordem_impl@@Base+0x40>
   11ddc:	mov	r4, r0
   11de0:	add	r5, pc, r5
   11de4:	ldr	r1, [r4]
   11de8:	mov	r0, r5
   11dec:	bl	10ee8 <printf@plt>
   11df0:	ldr	r0, [r4, #4]
   11df4:	bl	11dc8 <avl_preordem_impl@@Base>
   11df8:	ldr	r4, [r4, #8]
   11dfc:	cmp	r4, #0
   11e00:	bne	11de4 <avl_preordem_impl@@Base+0x1c>
   11e04:	pop	{r4, r5, fp, pc}
   11e08:	andeq	r0, r0, r6, asr r9

00011e0c <avl_altura@@Base>:
   11e0c:	cmp	r0, #0
   11e10:	ldrne	r0, [r0, #12]
   11e14:	mvneq	r0, #0
   11e18:	bx	lr

00011e1c <max@@Base>:
   11e1c:	cmp	r0, r1
   11e20:	movle	r0, r1
   11e24:	bx	lr

00011e28 <avl_novo_no@@Base>:
   11e28:	push	{r4, r5, fp, lr}
   11e2c:	add	fp, sp, #8
   11e30:	mov	r4, r0
   11e34:	mov	r0, #16
   11e38:	bl	10f48 <malloc@plt>
   11e3c:	mov	r5, r0
   11e40:	mov	r0, r4
   11e44:	bl	10f6c <strlen@plt>
   11e48:	add	r0, r0, #1
   11e4c:	bl	10f48 <malloc@plt>
   11e50:	mov	r1, r4
   11e54:	str	r0, [r5]
   11e58:	bl	10f30 <strcpy@plt>
   11e5c:	mov	r0, #0
   11e60:	str	r0, [r5, #4]
   11e64:	str	r0, [r5, #8]
   11e68:	str	r0, [r5, #12]
   11e6c:	mov	r0, r5
   11e70:	pop	{r4, r5, fp, pc}

00011e74 <roda_direita@@Base>:
   11e74:	mov	r1, r0
   11e78:	ldr	r0, [r0, #4]
   11e7c:	mvn	ip, #0
   11e80:	mvn	r2, #0
   11e84:	ldr	r3, [r0, #8]
   11e88:	str	r1, [r0, #8]
   11e8c:	str	r3, [r1, #4]
   11e90:	cmp	r3, #0
   11e94:	ldrne	ip, [r3, #12]
   11e98:	ldr	r3, [r1, #8]
   11e9c:	cmp	r3, #0
   11ea0:	ldrne	r2, [r3, #12]
   11ea4:	cmp	ip, r2
   11ea8:	movgt	r2, ip
   11eac:	add	r2, r2, #1
   11eb0:	str	r2, [r1, #12]
   11eb4:	ldr	r1, [r0, #4]
   11eb8:	cmp	r1, #0
   11ebc:	ldrne	r1, [r1, #12]
   11ec0:	mvneq	r1, #0
   11ec4:	cmp	r1, r2
   11ec8:	movgt	r2, r1
   11ecc:	add	r1, r2, #1
   11ed0:	str	r1, [r0, #12]
   11ed4:	bx	lr

00011ed8 <roda_esquerda@@Base>:
   11ed8:	push	{fp, lr}
   11edc:	mov	fp, sp
   11ee0:	mov	r1, r0
   11ee4:	ldr	r0, [r0, #8]
   11ee8:	mvn	r3, #0
   11eec:	mvn	r2, #0
   11ef0:	ldr	ip, [r0, #4]
   11ef4:	str	r1, [r0, #4]
   11ef8:	str	ip, [r1, #8]
   11efc:	ldr	lr, [r1, #4]
   11f00:	cmp	lr, #0
   11f04:	ldrne	r3, [lr, #12]
   11f08:	cmp	ip, #0
   11f0c:	ldrne	r2, [ip, #12]
   11f10:	cmp	r3, r2
   11f14:	movgt	r2, r3
   11f18:	add	r2, r2, #1
   11f1c:	str	r2, [r1, #12]
   11f20:	ldr	r1, [r0, #8]
   11f24:	cmp	r1, #0
   11f28:	ldrne	r1, [r1, #12]
   11f2c:	mvneq	r1, #0
   11f30:	cmp	r2, r1
   11f34:	movgt	r1, r2
   11f38:	add	r1, r1, #1
   11f3c:	str	r1, [r0, #12]
   11f40:	pop	{fp, pc}

00011f44 <calc_balanceamento@@Base>:
   11f44:	cmp	r0, #0
   11f48:	moveq	r0, #0
   11f4c:	bxeq	lr
   11f50:	ldr	r3, [r0, #8]
   11f54:	ldr	r0, [r0, #4]
   11f58:	mvn	r2, #0
   11f5c:	mvn	r1, #0
   11f60:	cmp	r3, #0
   11f64:	ldrne	r2, [r3, #12]
   11f68:	cmp	r0, #0
   11f6c:	ldrne	r1, [r0, #12]
   11f70:	sub	r0, r2, r1
   11f74:	bx	lr

00011f78 <tabela_nova@@Base>:
   11f78:	push	{r4, r5, r6, r7, fp, lr}
   11f7c:	add	fp, sp, #16
   11f80:	mov	r4, #0
   11f84:	cmp	r0, #1
   11f88:	blt	11fd4 <tabela_nova@@Base+0x5c>
   11f8c:	mov	r6, r1
   11f90:	cmp	r1, #0
   11f94:	beq	11fd4 <tabela_nova@@Base+0x5c>
   11f98:	mov	r5, r0
   11f9c:	mov	r0, #12
   11fa0:	bl	10f48 <malloc@plt>
   11fa4:	cmp	r0, #0
   11fa8:	beq	11fd4 <tabela_nova@@Base+0x5c>
   11fac:	mov	r7, r0
   11fb0:	mov	r0, r5
   11fb4:	mov	r1, #4
   11fb8:	bl	10ed0 <calloc@plt>
   11fbc:	cmp	r0, #0
   11fc0:	str	r0, [r7, #4]
   11fc4:	beq	11fdc <tabela_nova@@Base+0x64>
   11fc8:	mov	r4, r7
   11fcc:	str	r6, [r7]
   11fd0:	str	r5, [r7, #8]
   11fd4:	mov	r0, r4
   11fd8:	pop	{r4, r5, r6, r7, fp, pc}
   11fdc:	mov	r0, r7
   11fe0:	bl	10f0c <free@plt>
   11fe4:	mov	r0, r4
   11fe8:	pop	{r4, r5, r6, r7, fp, pc}

00011fec <tabela_apaga@@Base>:
   11fec:	cmp	r0, #0
   11ff0:	bxeq	lr
   11ff4:	push	{r4, r5, r6, r7, fp, lr}
   11ff8:	add	fp, sp, #16
   11ffc:	mov	r4, r0
   12000:	ldr	r0, [r0, #4]
   12004:	ldr	r1, [r4, #8]
   12008:	cmp	r1, #1
   1200c:	blt	1204c <tabela_apaga@@Base+0x60>
   12010:	mov	r6, #0
   12014:	ldr	r5, [r0, r6, lsl #2]
   12018:	cmp	r5, #0
   1201c:	beq	12040 <tabela_apaga@@Base+0x54>
   12020:	ldm	r5, {r0, r7}
   12024:	bl	10f0c <free@plt>
   12028:	mov	r0, r5
   1202c:	bl	10f0c <free@plt>
   12030:	cmp	r7, #0
   12034:	mov	r5, r7
   12038:	bne	12020 <tabela_apaga@@Base+0x34>
   1203c:	ldmib	r4, {r0, r1}
   12040:	add	r6, r6, #1
   12044:	cmp	r6, r1
   12048:	blt	12014 <tabela_apaga@@Base+0x28>
   1204c:	bl	10f0c <free@plt>
   12050:	mov	r0, r4
   12054:	pop	{r4, r5, r6, r7, fp, lr}
   12058:	b	10f0c <free@plt>

0001205c <tabela_adiciona@@Base>:
   1205c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12060:	add	fp, sp, #28
   12064:	sub	sp, sp, #4
   12068:	mvn	r8, #1
   1206c:	cmp	r0, #0
   12070:	beq	12088 <tabela_adiciona@@Base+0x2c>
   12074:	cmp	r1, #0
   12078:	mov	r7, r1
   1207c:	movne	r9, r2
   12080:	cmpne	r2, #0
   12084:	bne	12094 <tabela_adiciona@@Base+0x38>
   12088:	mov	r0, r8
   1208c:	sub	sp, fp, #28
   12090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12094:	ldr	r2, [r0]
   12098:	ldr	r1, [r0, #8]
   1209c:	mov	r6, r0
   120a0:	mov	r0, r7
   120a4:	blx	r2
   120a8:	mov	sl, r0
   120ac:	ldr	r0, [r6, #4]
   120b0:	ldr	r4, [r0, sl, lsl #2]
   120b4:	cmp	r4, #0
   120b8:	bne	120cc <tabela_adiciona@@Base+0x70>
   120bc:	b	120f4 <tabela_adiciona@@Base+0x98>
   120c0:	ldr	r4, [r4, #4]
   120c4:	cmp	r4, #0
   120c8:	beq	120f4 <tabela_adiciona@@Base+0x98>
   120cc:	ldr	r5, [r4]
   120d0:	mov	r1, r7
   120d4:	mov	r0, r5
   120d8:	bl	10edc <strcmp@plt>
   120dc:	cmp	r0, #0
   120e0:	bne	120c0 <tabela_adiciona@@Base+0x64>
   120e4:	add	r0, r5, #50	; 0x32
   120e8:	mov	r1, r9
   120ec:	bl	10f30 <strcpy@plt>
   120f0:	b	12148 <tabela_adiciona@@Base+0xec>
   120f4:	mov	r0, #8
   120f8:	mov	r4, sl
   120fc:	bl	10f48 <malloc@plt>
   12100:	cmp	r0, #0
   12104:	beq	12088 <tabela_adiciona@@Base+0x2c>
   12108:	mov	sl, r0
   1210c:	mov	r0, #150	; 0x96
   12110:	bl	10f48 <malloc@plt>
   12114:	cmp	r0, #0
   12118:	str	r0, [sl]
   1211c:	beq	12088 <tabela_adiciona@@Base+0x2c>
   12120:	mov	r1, r7
   12124:	mov	r5, r0
   12128:	bl	10f30 <strcpy@plt>
   1212c:	add	r0, r5, #50	; 0x32
   12130:	mov	r1, r9
   12134:	bl	10f30 <strcpy@plt>
   12138:	ldr	r0, [r6, #4]
   1213c:	ldr	r1, [r0, r4, lsl #2]
   12140:	str	r1, [sl, #4]
   12144:	str	sl, [r0, r4, lsl #2]
   12148:	mov	r8, #0
   1214c:	b	12088 <tabela_adiciona@@Base+0x2c>

00012150 <tabela_remove@@Base>:
   12150:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12154:	add	fp, sp, #28
   12158:	sub	sp, sp, #4
   1215c:	cmp	r0, #0
   12160:	beq	121e0 <tabela_remove@@Base+0x90>
   12164:	mov	r6, r1
   12168:	ldr	r2, [r0]
   1216c:	ldr	r1, [r0, #8]
   12170:	mov	r4, r0
   12174:	mov	r0, r6
   12178:	blx	r2
   1217c:	ldr	r9, [r4, #4]
   12180:	mvn	sl, #2
   12184:	ldr	r7, [r9, r0, lsl #2]
   12188:	cmp	r7, #0
   1218c:	beq	12214 <tabela_remove@@Base+0xc4>
   12190:	ldr	r5, [r7]
   12194:	mov	r8, r0
   12198:	mov	r1, r6
   1219c:	mov	r0, r5
   121a0:	bl	10edc <strcmp@plt>
   121a4:	cmp	r0, #0
   121a8:	beq	121e8 <tabela_remove@@Base+0x98>
   121ac:	mov	r4, r7
   121b0:	ldr	r7, [r4, #4]
   121b4:	cmp	r7, #0
   121b8:	beq	12214 <tabela_remove@@Base+0xc4>
   121bc:	ldr	r5, [r7]
   121c0:	mov	r1, r6
   121c4:	mov	r0, r5
   121c8:	bl	10edc <strcmp@plt>
   121cc:	cmp	r0, #0
   121d0:	mov	r0, r4
   121d4:	mov	r4, r7
   121d8:	bne	121b0 <tabela_remove@@Base+0x60>
   121dc:	b	121ec <tabela_remove@@Base+0x9c>
   121e0:	mvn	sl, #1
   121e4:	b	12214 <tabela_remove@@Base+0xc4>
   121e8:	mov	r0, #0
   121ec:	ldr	r1, [r7, #4]
   121f0:	cmp	r0, #0
   121f4:	streq	r1, [r9, r8, lsl #2]
   121f8:	ldreq	r5, [r7]
   121fc:	strne	r1, [r0, #4]
   12200:	mov	r0, r5
   12204:	bl	10f0c <free@plt>
   12208:	mov	r0, r7
   1220c:	bl	10f0c <free@plt>
   12210:	mov	sl, #0
   12214:	mov	r0, sl
   12218:	sub	sp, fp, #28
   1221c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012220 <tabela_existe@@Base>:
   12220:	push	{r4, r5, r6, sl, fp, lr}
   12224:	add	fp, sp, #16
   12228:	cmp	r0, #0
   1222c:	mvn	r5, #1
   12230:	movne	r4, r1
   12234:	cmpne	r1, #0
   12238:	bne	12244 <tabela_existe@@Base+0x24>
   1223c:	mov	r0, r5
   12240:	pop	{r4, r5, r6, sl, fp, pc}
   12244:	ldr	r2, [r0]
   12248:	ldr	r1, [r0, #8]
   1224c:	mov	r6, r0
   12250:	mov	r0, r4
   12254:	blx	r2
   12258:	ldr	r1, [r6, #4]
   1225c:	mvn	r5, #2
   12260:	ldr	r6, [r1, r0, lsl #2]
   12264:	cmp	r6, #0
   12268:	bne	1227c <tabela_existe@@Base+0x5c>
   1226c:	b	1223c <tabela_existe@@Base+0x1c>
   12270:	ldr	r6, [r6, #4]
   12274:	cmp	r6, #0
   12278:	beq	1223c <tabela_existe@@Base+0x1c>
   1227c:	ldr	r0, [r6]
   12280:	mov	r1, r4
   12284:	bl	10edc <strcmp@plt>
   12288:	cmp	r0, #0
   1228c:	bne	12270 <tabela_existe@@Base+0x50>
   12290:	mov	r5, #1
   12294:	mov	r0, r5
   12298:	pop	{r4, r5, r6, sl, fp, pc}

0001229c <tabela_valor@@Base>:
   1229c:	push	{r4, r5, r6, r7, fp, lr}
   122a0:	add	fp, sp, #16
   122a4:	mov	r4, #0
   122a8:	cmp	r0, #0
   122ac:	beq	122d8 <tabela_valor@@Base+0x3c>
   122b0:	mov	r5, r1
   122b4:	ldr	r2, [r0]
   122b8:	ldr	r1, [r0, #8]
   122bc:	mov	r6, r0
   122c0:	mov	r0, r5
   122c4:	blx	r2
   122c8:	ldr	r1, [r6, #4]
   122cc:	ldr	r7, [r1, r0, lsl #2]
   122d0:	cmp	r7, #0
   122d4:	bne	122ec <tabela_valor@@Base+0x50>
   122d8:	mov	r0, r4
   122dc:	pop	{r4, r5, r6, r7, fp, pc}
   122e0:	ldr	r7, [r7, #4]
   122e4:	cmp	r7, #0
   122e8:	beq	122d8 <tabela_valor@@Base+0x3c>
   122ec:	ldr	r6, [r7]
   122f0:	mov	r1, r5
   122f4:	mov	r0, r6
   122f8:	bl	10edc <strcmp@plt>
   122fc:	cmp	r0, #0
   12300:	bne	122e0 <tabela_valor@@Base+0x44>
   12304:	add	r4, r6, #50	; 0x32
   12308:	mov	r0, r4
   1230c:	pop	{r4, r5, r6, r7, fp, pc}

00012310 <tabela_esvazia@@Base>:
   12310:	push	{r4, r5, r6, r7, fp, lr}
   12314:	add	fp, sp, #16
   12318:	cmp	r0, #0
   1231c:	mvneq	r0, #1
   12320:	popeq	{r4, r5, r6, r7, fp, pc}
   12324:	ldr	r1, [r0, #8]
   12328:	mov	r4, r0
   1232c:	cmp	r1, #1
   12330:	movlt	r0, #0
   12334:	poplt	{r4, r5, r6, r7, fp, pc}
   12338:	mov	r6, #0
   1233c:	b	12354 <tabela_esvazia@@Base+0x44>
   12340:	add	r6, r6, #1
   12344:	mov	r0, #0
   12348:	cmp	r6, r1
   1234c:	str	r0, [r2]
   12350:	popge	{r4, r5, r6, r7, fp, pc}
   12354:	ldr	r2, [r4, #4]
   12358:	ldr	r5, [r2, r6, lsl #2]!
   1235c:	cmp	r5, #0
   12360:	beq	12340 <tabela_esvazia@@Base+0x30>
   12364:	ldm	r5, {r0, r7}
   12368:	bl	10f0c <free@plt>
   1236c:	mov	r0, r5
   12370:	bl	10f0c <free@plt>
   12374:	cmp	r7, #0
   12378:	mov	r5, r7
   1237c:	bne	12364 <tabela_esvazia@@Base+0x54>
   12380:	ldmib	r4, {r0, r1}
   12384:	add	r2, r0, r6, lsl #2
   12388:	b	12340 <tabela_esvazia@@Base+0x30>

0001238c <tabela_numelementos@@Base>:
   1238c:	cmp	r0, #0
   12390:	mvneq	r0, #1
   12394:	bxeq	lr
   12398:	ldr	r1, [r0, #8]
   1239c:	cmp	r1, #1
   123a0:	movlt	r0, #0
   123a4:	bxlt	lr
   123a8:	ldr	ip, [r0, #4]
   123ac:	mov	r0, #0
   123b0:	mov	r3, #0
   123b4:	b	123c4 <tabela_numelementos@@Base+0x38>
   123b8:	add	r3, r3, #1
   123bc:	cmp	r3, r1
   123c0:	bxge	lr
   123c4:	ldr	r2, [ip, r3, lsl #2]
   123c8:	cmp	r2, #0
   123cc:	beq	123b8 <tabela_numelementos@@Base+0x2c>
   123d0:	ldr	r2, [r2, #4]
   123d4:	add	r0, r0, #1
   123d8:	cmp	r2, #0
   123dc:	bne	123d0 <tabela_numelementos@@Base+0x44>
   123e0:	b	123b8 <tabela_numelementos@@Base+0x2c>

000123e4 <tabela_elementos@@Base>:
   123e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123e8:	add	fp, sp, #28
   123ec:	sub	sp, sp, #4
   123f0:	cmp	r0, #0
   123f4:	beq	124c4 <tabela_elementos@@Base+0xe0>
   123f8:	ldr	r2, [r0, #8]
   123fc:	mov	r5, r0
   12400:	cmp	r2, #1
   12404:	blt	124cc <tabela_elementos@@Base+0xe8>
   12408:	ldr	r7, [r5, #4]
   1240c:	mov	r0, #0
   12410:	mov	r3, #0
   12414:	ldr	r6, [r7, r3, lsl #2]
   12418:	cmp	r6, #0
   1241c:	beq	12430 <tabela_elementos@@Base+0x4c>
   12420:	ldr	r6, [r6, #4]
   12424:	add	r0, r0, #1
   12428:	cmp	r6, #0
   1242c:	bne	12420 <tabela_elementos@@Base+0x3c>
   12430:	add	r3, r3, #1
   12434:	cmp	r3, r2
   12438:	bne	12414 <tabela_elementos@@Base+0x30>
   1243c:	mov	r6, #0
   12440:	cmp	r0, #1
   12444:	str	r0, [r1]
   12448:	blt	124d8 <tabela_elementos@@Base+0xf4>
   1244c:	mov	r1, #150	; 0x96
   12450:	mul	r0, r0, r1
   12454:	bl	10f48 <malloc@plt>
   12458:	cmp	r0, #0
   1245c:	beq	124d8 <tabela_elementos@@Base+0xf4>
   12460:	ldr	sl, [r5, #8]
   12464:	mov	r8, r0
   12468:	cmp	sl, #1
   1246c:	blt	124bc <tabela_elementos@@Base+0xd8>
   12470:	mov	r4, #0
   12474:	mov	r6, #0
   12478:	ldr	r9, [r7, r6, lsl #2]
   1247c:	cmp	r9, #0
   12480:	beq	124b0 <tabela_elementos@@Base+0xcc>
   12484:	mov	r0, #150	; 0x96
   12488:	mla	r5, r4, r0, r8
   1248c:	ldr	r1, [r9]
   12490:	mov	r0, r5
   12494:	mov	r2, #150	; 0x96
   12498:	bl	10f18 <memcpy@plt>
   1249c:	ldr	r9, [r9, #4]
   124a0:	add	r5, r5, #150	; 0x96
   124a4:	add	r4, r4, #1
   124a8:	cmp	r9, #0
   124ac:	bne	1248c <tabela_elementos@@Base+0xa8>
   124b0:	add	r6, r6, #1
   124b4:	cmp	r6, sl
   124b8:	blt	12478 <tabela_elementos@@Base+0x94>
   124bc:	mov	r6, r8
   124c0:	b	124d8 <tabela_elementos@@Base+0xf4>
   124c4:	mvn	r0, #1
   124c8:	b	124d0 <tabela_elementos@@Base+0xec>
   124cc:	mov	r0, #0
   124d0:	str	r0, [r1]
   124d4:	mov	r6, #0
   124d8:	mov	r0, r6
   124dc:	sub	sp, fp, #28
   124e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000124e4 <hash_krm@@Base>:
   124e4:	ldrb	r2, [r0]
   124e8:	cmp	r2, #0
   124ec:	beq	1250c <hash_krm@@Base+0x28>
   124f0:	add	r3, r0, #1
   124f4:	mov	r0, #7
   124f8:	uxtab	r0, r0, r2
   124fc:	ldrb	r2, [r3], #1
   12500:	cmp	r2, #0
   12504:	bne	124f8 <hash_krm@@Base+0x14>
   12508:	b	12510 <hash_krm@@Base+0x2c>
   1250c:	mov	r0, #7
   12510:	udiv	r2, r0, r1
   12514:	mls	r0, r2, r1, r0
   12518:	bx	lr

0001251c <hash_djbm@@Base>:
   1251c:	ldrb	r2, [r0]
   12520:	cmp	r2, #0
   12524:	beq	1254c <hash_djbm@@Base+0x30>
   12528:	add	r3, r0, #1
   1252c:	movw	r0, #5347	; 0x14e3
   12530:	uxtb	r2, r2
   12534:	rsb	r0, r0, r0, lsl #5
   12538:	eor	r0, r0, r2
   1253c:	ldrb	r2, [r3], #1
   12540:	cmp	r2, #0
   12544:	bne	12530 <hash_djbm@@Base+0x14>
   12548:	b	12550 <hash_djbm@@Base+0x34>
   1254c:	movw	r0, #5347	; 0x14e3
   12550:	udiv	r2, r0, r1
   12554:	mls	r0, r2, r1, r0
   12558:	bx	lr

0001255c <mostraTabela@@Base>:
   1255c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12560:	add	fp, sp, #24
   12564:	mov	r4, r0
   12568:	cmp	r0, #0
   1256c:	beq	125b4 <mostraTabela@@Base+0x58>
   12570:	ldr	r0, [r4, #8]
   12574:	cmp	r0, #1
   12578:	blt	125bc <mostraTabela@@Base+0x60>
   1257c:	ldr	r2, [r4, #4]
   12580:	mov	r1, #0
   12584:	mov	r3, #0
   12588:	ldr	r7, [r2, r3, lsl #2]
   1258c:	cmp	r7, #0
   12590:	beq	125a4 <mostraTabela@@Base+0x48>
   12594:	ldr	r7, [r7, #4]
   12598:	add	r1, r1, #1
   1259c:	cmp	r7, #0
   125a0:	bne	12594 <mostraTabela@@Base+0x38>
   125a4:	add	r3, r3, #1
   125a8:	cmp	r3, r0
   125ac:	bne	12588 <mostraTabela@@Base+0x2c>
   125b0:	b	125c0 <mostraTabela@@Base+0x64>
   125b4:	mvn	r1, #1
   125b8:	b	125c0 <mostraTabela@@Base+0x64>
   125bc:	mov	r1, #0
   125c0:	ldr	r0, [pc, #144]	; 12658 <mostraTabela@@Base+0xfc>
   125c4:	add	r0, pc, r0
   125c8:	bl	10ee8 <printf@plt>
   125cc:	ldr	r0, [r4, #8]
   125d0:	cmp	r0, #1
   125d4:	blt	1264c <mostraTabela@@Base+0xf0>
   125d8:	ldr	r8, [pc, #124]	; 1265c <mostraTabela@@Base+0x100>
   125dc:	ldr	r7, [pc, #124]	; 12660 <mostraTabela@@Base+0x104>
   125e0:	mov	r5, #0
   125e4:	add	r8, pc, r8
   125e8:	add	r7, pc, r7
   125ec:	ldr	r1, [r4, #4]
   125f0:	ldr	r1, [r1, r5, lsl #2]
   125f4:	cmp	r1, #0
   125f8:	beq	12640 <mostraTabela@@Base+0xe4>
   125fc:	mov	r0, r8
   12600:	mov	r1, r5
   12604:	bl	10ee8 <printf@plt>
   12608:	ldr	r0, [r4, #4]
   1260c:	ldr	r6, [r0, r5, lsl #2]
   12610:	cmp	r6, #0
   12614:	beq	12634 <mostraTabela@@Base+0xd8>
   12618:	ldr	r1, [r6]
   1261c:	mov	r0, r7
   12620:	add	r2, r1, #50	; 0x32
   12624:	bl	10ee8 <printf@plt>
   12628:	ldr	r6, [r6, #4]
   1262c:	cmp	r6, #0
   12630:	bne	12618 <mostraTabela@@Base+0xbc>
   12634:	mov	r0, #10
   12638:	bl	10f84 <putchar@plt>
   1263c:	ldr	r0, [r4, #8]
   12640:	add	r5, r5, #1
   12644:	cmp	r5, r0
   12648:	blt	125ec <mostraTabela@@Base+0x90>
   1264c:	mov	r0, #10
   12650:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12654:	b	10f84 <putchar@plt>
   12658:	andeq	r0, r0, r6, ror r1
   1265c:	andeq	r0, r0, sl, ror r1
   12660:	andeq	r0, r0, sp, ror r1

00012664 <__libc_csu_init@@Base>:
   12664:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12668:	mov	r7, r0
   1266c:	ldr	r6, [pc, #72]	; 126bc <__libc_csu_init@@Base+0x58>
   12670:	ldr	r5, [pc, #72]	; 126c0 <__libc_csu_init@@Base+0x5c>
   12674:	add	r6, pc, r6
   12678:	add	r5, pc, r5
   1267c:	sub	r6, r6, r5
   12680:	mov	r8, r1
   12684:	mov	r9, r2
   12688:	bl	10eb0 <calloc@plt-0x20>
   1268c:	asrs	r6, r6, #2
   12690:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12694:	mov	r4, #0
   12698:	add	r4, r4, #1
   1269c:	ldr	r3, [r5], #4
   126a0:	mov	r2, r9
   126a4:	mov	r1, r8
   126a8:	mov	r0, r7
   126ac:	blx	r3
   126b0:	cmp	r6, r4
   126b4:	bne	12698 <__libc_csu_init@@Base+0x34>
   126b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   126bc:	muleq	r1, r0, r8
   126c0:	andeq	r0, r1, r8, lsl #17

000126c4 <__libc_csu_fini@@Base>:
   126c4:	bx	lr

Disassembly of section .fini:

000126c8 <.fini>:
   126c8:	push	{r3, lr}
   126cc:	pop	{r3, pc}
