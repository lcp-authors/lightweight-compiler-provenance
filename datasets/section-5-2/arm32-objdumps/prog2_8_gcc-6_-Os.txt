
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010aa8 <.init>:
   10aa8:	push	{r3, lr}
   10aac:	bl	10c2c <_start@@Base+0x3c>
   10ab0:	pop	{r3, pc}

Disassembly of section .plt:

00010ab4 <calloc@plt-0x14>:
   10ab4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ab8:	ldr	lr, [pc, #4]	; 10ac4 <calloc@plt-0x4>
   10abc:	add	lr, pc, lr
   10ac0:	ldr	pc, [lr, #8]!
   10ac4:	andeq	r2, r1, ip, lsr r5

00010ac8 <calloc@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #73728	; 0x12000
   10ad0:	ldr	pc, [ip, #1340]!	; 0x53c

00010ad4 <printf@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #73728	; 0x12000
   10adc:	ldr	pc, [ip, #1332]!	; 0x534

00010ae0 <free@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #73728	; 0x12000
   10ae8:	ldr	pc, [ip, #1324]!	; 0x52c

00010aec <realloc@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1316]!	; 0x524

00010af8 <puts@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1308]!	; 0x51c

00010b04 <malloc@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1300]!	; 0x514

00010b10 <__libc_start_main@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1292]!	; 0x50c

00010b1c <__gmon_start__@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1284]!	; 0x504

00010b28 <setvbuf@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b34 <putchar@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b40 <abort@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1260]!	; 0x4ec

Disassembly of section .text:

00010b4c <main@@Base>:
   10b4c:	ldr	r0, [pc, #140]	; 10be0 <main@@Base+0x94>
   10b50:	mov	r3, #0
   10b54:	push	{r4, lr}
   10b58:	mov	r1, r3
   10b5c:	mov	r2, #2
   10b60:	ldr	r0, [r0]
   10b64:	bl	10b28 <setvbuf@plt>
   10b68:	ldr	r0, [pc, #116]	; 10be4 <main@@Base+0x98>
   10b6c:	mov	r3, #0
   10b70:	mov	r1, r3
   10b74:	mov	r2, #2
   10b78:	ldr	r0, [r0]
   10b7c:	bl	10b28 <setvbuf@plt>
   10b80:	bl	10e10 <teste_grafo_novo@@Base>
   10b84:	mov	r4, r0
   10b88:	bl	10edc <teste_grafo_aresta@@Base>
   10b8c:	add	r4, r4, r0
   10b90:	bl	11038 <teste_grafo_adiciona@@Base>
   10b94:	add	r4, r4, r0
   10b98:	bl	111fc <teste_grafo_remove@@Base>
   10b9c:	add	r4, r4, r0
   10ba0:	bl	1135c <teste_v_sucessores@@Base>
   10ba4:	add	r4, r4, r0
   10ba8:	bl	11500 <teste_v_antecessores@@Base>
   10bac:	add	r4, r4, r0
   10bb0:	bl	116a8 <teste_v_grau@@Base>
   10bb4:	add	r4, r4, r0
   10bb8:	bl	117d4 <teste_v_celebridade@@Base>
   10bbc:	adds	r1, r4, r0
   10bc0:	bne	10bd4 <main@@Base+0x88>
   10bc4:	ldr	r0, [pc, #28]	; 10be8 <main@@Base+0x9c>
   10bc8:	bl	10af8 <puts@plt>
   10bcc:	mov	r0, #0
   10bd0:	pop	{r4, pc}
   10bd4:	ldr	r0, [pc, #16]	; 10bec <main@@Base+0xa0>
   10bd8:	bl	10ad4 <printf@plt>
   10bdc:	b	10bcc <main@@Base+0x80>
   10be0:	andeq	r3, r2, ip, asr #32
   10be4:	andeq	r3, r2, r8, asr #32
   10be8:	andeq	r2, r1, r7, ror #13
   10bec:	strdeq	r2, [r1], -pc	; <UNPREDICTABLE>

00010bf0 <_start@@Base>:
   10bf0:	mov	fp, #0
   10bf4:	mov	lr, #0
   10bf8:	pop	{r1}		; (ldr r1, [sp], #4)
   10bfc:	mov	r2, sp
   10c00:	push	{r2}		; (str r2, [sp, #-4]!)
   10c04:	push	{r0}		; (str r0, [sp, #-4]!)
   10c08:	ldr	ip, [pc, #16]	; 10c20 <_start@@Base+0x30>
   10c0c:	push	{ip}		; (str ip, [sp, #-4]!)
   10c10:	ldr	r0, [pc, #12]	; 10c24 <_start@@Base+0x34>
   10c14:	ldr	r3, [pc, #12]	; 10c28 <_start@@Base+0x38>
   10c18:	bl	10b10 <__libc_start_main@plt>
   10c1c:	bl	10b40 <abort@plt>
   10c20:	andeq	r2, r1, r4, lsr r0
   10c24:	andeq	r0, r1, ip, asr #22
   10c28:	ldrdeq	r1, [r1], -r4
   10c2c:	ldr	r3, [pc, #20]	; 10c48 <_start@@Base+0x58>
   10c30:	ldr	r2, [pc, #20]	; 10c4c <_start@@Base+0x5c>
   10c34:	add	r3, pc, r3
   10c38:	ldr	r2, [r3, r2]
   10c3c:	cmp	r2, #0
   10c40:	bxeq	lr
   10c44:	b	10b1c <__gmon_start__@plt>
   10c48:	andeq	r2, r1, r4, asr #7
   10c4c:	andeq	r0, r0, r8, lsr r0
   10c50:	ldr	r3, [pc, #28]	; 10c74 <_start@@Base+0x84>
   10c54:	ldr	r0, [pc, #28]	; 10c78 <_start@@Base+0x88>
   10c58:	sub	r3, r3, r0
   10c5c:	cmp	r3, #6
   10c60:	bxls	lr
   10c64:	ldr	r3, [pc, #16]	; 10c7c <_start@@Base+0x8c>
   10c68:	cmp	r3, #0
   10c6c:	bxeq	lr
   10c70:	bx	r3
   10c74:	andeq	r3, r2, r7, asr #32
   10c78:	andeq	r3, r2, r4, asr #32
   10c7c:	andeq	r0, r0, r0
   10c80:	ldr	r1, [pc, #36]	; 10cac <_start@@Base+0xbc>
   10c84:	ldr	r0, [pc, #36]	; 10cb0 <_start@@Base+0xc0>
   10c88:	sub	r1, r1, r0
   10c8c:	asr	r1, r1, #2
   10c90:	add	r1, r1, r1, lsr #31
   10c94:	asrs	r1, r1, #1
   10c98:	bxeq	lr
   10c9c:	ldr	r3, [pc, #16]	; 10cb4 <_start@@Base+0xc4>
   10ca0:	cmp	r3, #0
   10ca4:	bxeq	lr
   10ca8:	bx	r3
   10cac:	andeq	r3, r2, r4, asr #32
   10cb0:	andeq	r3, r2, r4, asr #32
   10cb4:	andeq	r0, r0, r0
   10cb8:	push	{r4, lr}
   10cbc:	ldr	r4, [pc, #24]	; 10cdc <_start@@Base+0xec>
   10cc0:	ldrb	r3, [r4]
   10cc4:	cmp	r3, #0
   10cc8:	popne	{r4, pc}
   10ccc:	bl	10c50 <_start@@Base+0x60>
   10cd0:	mov	r3, #1
   10cd4:	strb	r3, [r4]
   10cd8:	pop	{r4, pc}
   10cdc:	andeq	r3, r2, r0, asr r0
   10ce0:	ldr	r0, [pc, #40]	; 10d10 <_start@@Base+0x120>
   10ce4:	ldr	r3, [r0]
   10ce8:	cmp	r3, #0
   10cec:	bne	10cf4 <_start@@Base+0x104>
   10cf0:	b	10c80 <_start@@Base+0x90>
   10cf4:	ldr	r3, [pc, #24]	; 10d14 <_start@@Base+0x124>
   10cf8:	cmp	r3, #0
   10cfc:	beq	10cf0 <_start@@Base+0x100>
   10d00:	push	{r4, lr}
   10d04:	blx	r3
   10d08:	pop	{r4, lr}
   10d0c:	b	10c80 <_start@@Base+0x90>
   10d10:	andeq	r2, r2, r4, lsl pc
   10d14:	andeq	r0, r0, r0

00010d18 <_g@@Base>:
   10d18:	push	{r1, r2, r3}
   10d1c:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d20:	mov	r8, r0
   10d24:	mov	r0, #8
   10d28:	bl	10b04 <malloc@plt>
   10d2c:	add	r3, sp, #48	; 0x30
   10d30:	mov	r1, #8
   10d34:	str	r3, [sp, #4]
   10d38:	mov	r6, #0
   10d3c:	mov	sl, #8
   10d40:	mov	fp, #1
   10d44:	mov	r5, r0
   10d48:	mov	r0, r8
   10d4c:	bl	10ac8 <calloc@plt>
   10d50:	mov	r4, r0
   10d54:	str	r0, [r5, #4]
   10d58:	ldr	r3, [sp, #44]	; 0x2c
   10d5c:	cmp	r6, r3
   10d60:	blt	10d7c <_g@@Base+0x64>
   10d64:	mov	r0, r5
   10d68:	str	r8, [r5]
   10d6c:	add	sp, sp, #8
   10d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d74:	add	sp, sp, #12
   10d78:	bx	lr
   10d7c:	ldr	r2, [sp, #4]
   10d80:	mov	r1, sl
   10d84:	mov	r3, r2
   10d88:	mov	r0, fp
   10d8c:	ldr	r7, [r3], #8
   10d90:	ldr	r9, [r2, #4]
   10d94:	str	r3, [sp, #4]
   10d98:	bl	10ac8 <calloc@plt>
   10d9c:	add	r3, r4, r7, lsl #3
   10da0:	add	r6, r6, #2
   10da4:	ldr	r2, [r3, #4]
   10da8:	str	r0, [r3, #4]
   10dac:	ldr	r3, [r4, r7, lsl #3]
   10db0:	str	r9, [r0]
   10db4:	add	r3, r3, #1
   10db8:	str	r2, [r0, #4]
   10dbc:	str	r3, [r4, r7, lsl #3]
   10dc0:	b	10d58 <_g@@Base+0x40>

00010dc4 <_f@@Base>:
   10dc4:	push	{r4, r5, r6, lr}
   10dc8:	subs	r5, r0, #0
   10dcc:	movne	r6, r1
   10dd0:	movne	r4, #0
   10dd4:	bne	10df8 <_f@@Base+0x34>
   10dd8:	mov	r0, #0
   10ddc:	pop	{r4, r5, r6, pc}
   10de0:	mov	r1, r4
   10de4:	mov	r0, r5
   10de8:	bl	11dc0 <vetor_elemento@@Base>
   10dec:	cmp	r0, r6
   10df0:	beq	10e08 <_f@@Base+0x44>
   10df4:	add	r4, r4, #1
   10df8:	ldr	r3, [r5]
   10dfc:	cmp	r4, r3
   10e00:	blt	10de0 <_f@@Base+0x1c>
   10e04:	b	10dd8 <_f@@Base+0x14>
   10e08:	mov	r0, #1
   10e0c:	pop	{r4, r5, r6, pc}

00010e10 <teste_grafo_novo@@Base>:
   10e10:	push	{r4, r5, r6, lr}
   10e14:	ldr	r0, [pc, #172]	; 10ec8 <teste_grafo_novo@@Base+0xb8>
   10e18:	bl	10ad4 <printf@plt>
   10e1c:	mov	r0, #10
   10e20:	bl	11924 <grafo_novo@@Base>
   10e24:	subs	r5, r0, #0
   10e28:	bne	10e48 <teste_grafo_novo@@Base+0x38>
   10e2c:	ldr	r0, [pc, #152]	; 10ecc <teste_grafo_novo@@Base+0xbc>
   10e30:	bl	10ad4 <printf@plt>
   10e34:	mov	r0, #10
   10e38:	bl	10b34 <putchar@plt>
   10e3c:	mov	r4, #1
   10e40:	mov	r0, r4
   10e44:	pop	{r4, r5, r6, pc}
   10e48:	ldr	r3, [r5]
   10e4c:	cmp	r3, #10
   10e50:	moveq	r4, #0
   10e54:	beq	10e64 <teste_grafo_novo@@Base+0x54>
   10e58:	ldr	r0, [pc, #112]	; 10ed0 <teste_grafo_novo@@Base+0xc0>
   10e5c:	bl	10ad4 <printf@plt>
   10e60:	mov	r4, #1
   10e64:	mov	r0, r5
   10e68:	bl	11978 <grafo_apaga@@Base>
   10e6c:	mov	r0, #1
   10e70:	bl	11924 <grafo_novo@@Base>
   10e74:	subs	r5, r0, #0
   10e78:	bne	10e94 <teste_grafo_novo@@Base+0x84>
   10e7c:	ldr	r0, [pc, #72]	; 10ecc <teste_grafo_novo@@Base+0xbc>
   10e80:	bl	10ad4 <printf@plt>
   10e84:	add	r4, r4, #1
   10e88:	mov	r0, #10
   10e8c:	bl	10b34 <putchar@plt>
   10e90:	b	10e40 <teste_grafo_novo@@Base+0x30>
   10e94:	ldr	r3, [r5]
   10e98:	cmp	r3, #1
   10e9c:	beq	10eac <teste_grafo_novo@@Base+0x9c>
   10ea0:	ldr	r0, [pc, #44]	; 10ed4 <teste_grafo_novo@@Base+0xc4>
   10ea4:	bl	10ad4 <printf@plt>
   10ea8:	add	r4, r4, #1
   10eac:	mov	r0, r5
   10eb0:	bl	11978 <grafo_apaga@@Base>
   10eb4:	cmp	r4, #0
   10eb8:	bne	10e88 <teste_grafo_novo@@Base+0x78>
   10ebc:	ldr	r0, [pc, #20]	; 10ed8 <teste_grafo_novo@@Base+0xc8>
   10ec0:	bl	10af8 <puts@plt>
   10ec4:	b	10e40 <teste_grafo_novo@@Base+0x30>
   10ec8:	andeq	r2, r1, r4, asr #32
   10ecc:	andeq	r2, r1, r3, asr r0
   10ed0:	andeq	r2, r1, fp, rrx
   10ed4:	andeq	r2, r1, pc, lsl #1
   10ed8:	strheq	r2, [r1], -r2	; <UNPREDICTABLE>

00010edc <teste_grafo_aresta@@Base>:
   10edc:	push	{r4, r5, r6, r7, r8, lr}
   10ee0:	sub	sp, sp, #80	; 0x50
   10ee4:	mov	r3, #6
   10ee8:	mov	r1, #7
   10eec:	mov	r4, #0
   10ef0:	str	r3, [sp, #64]	; 0x40
   10ef4:	str	r3, [sp, #60]	; 0x3c
   10ef8:	str	r3, [sp, #44]	; 0x2c
   10efc:	mov	r3, #2
   10f00:	mov	r7, #4
   10f04:	mov	r8, #5
   10f08:	mov	r6, #1
   10f0c:	mov	r2, #3
   10f10:	stm	sp, {r1, r3, r4}
   10f14:	mov	r0, #8
   10f18:	str	r3, [sp, #12]
   10f1c:	str	r1, [sp, #56]	; 0x38
   10f20:	str	r1, [sp, #16]
   10f24:	str	r7, [sp, #40]	; 0x28
   10f28:	mov	r1, #22
   10f2c:	str	r4, [sp, #36]	; 0x24
   10f30:	str	r7, [sp, #32]
   10f34:	str	r7, [sp, #28]
   10f38:	str	r8, [sp, #24]
   10f3c:	str	r8, [sp, #20]
   10f40:	str	r2, [sp, #68]	; 0x44
   10f44:	str	r6, [sp, #76]	; 0x4c
   10f48:	str	r4, [sp, #72]	; 0x48
   10f4c:	str	r6, [sp, #52]	; 0x34
   10f50:	str	r6, [sp, #48]	; 0x30
   10f54:	bl	10d18 <_g@@Base>
   10f58:	mov	r5, r0
   10f5c:	ldr	r0, [pc, #192]	; 11024 <teste_grafo_aresta@@Base+0x148>
   10f60:	bl	10ad4 <printf@plt>
   10f64:	mov	r2, r7
   10f68:	mov	r1, r8
   10f6c:	mov	r0, r5
   10f70:	bl	119d4 <grafo_aresta@@Base>
   10f74:	cmp	r0, r6
   10f78:	beq	10f88 <teste_grafo_aresta@@Base+0xac>
   10f7c:	ldr	r0, [pc, #164]	; 11028 <teste_grafo_aresta@@Base+0x14c>
   10f80:	bl	10ad4 <printf@plt>
   10f84:	mov	r4, r6
   10f88:	mov	r2, #6
   10f8c:	mov	r1, #7
   10f90:	mov	r0, r5
   10f94:	bl	119d4 <grafo_aresta@@Base>
   10f98:	cmp	r0, #1
   10f9c:	beq	10fac <teste_grafo_aresta@@Base+0xd0>
   10fa0:	ldr	r0, [pc, #128]	; 11028 <teste_grafo_aresta@@Base+0x14c>
   10fa4:	bl	10ad4 <printf@plt>
   10fa8:	add	r4, r4, #1
   10fac:	mov	r2, #1
   10fb0:	mov	r1, #7
   10fb4:	mov	r0, r5
   10fb8:	bl	119d4 <grafo_aresta@@Base>
   10fbc:	cmp	r0, #0
   10fc0:	beq	10fd0 <teste_grafo_aresta@@Base+0xf4>
   10fc4:	ldr	r0, [pc, #96]	; 1102c <teste_grafo_aresta@@Base+0x150>
   10fc8:	bl	10ad4 <printf@plt>
   10fcc:	add	r4, r4, #1
   10fd0:	mov	r2, #7
   10fd4:	mov	r1, #2
   10fd8:	mov	r0, #0
   10fdc:	bl	119d4 <grafo_aresta@@Base>
   10fe0:	cmn	r0, #1
   10fe4:	beq	10ff4 <teste_grafo_aresta@@Base+0x118>
   10fe8:	ldr	r0, [pc, #64]	; 11030 <teste_grafo_aresta@@Base+0x154>
   10fec:	bl	10ad4 <printf@plt>
   10ff0:	add	r4, r4, #1
   10ff4:	mov	r0, r5
   10ff8:	bl	11978 <grafo_apaga@@Base>
   10ffc:	cmp	r4, #0
   11000:	bne	11018 <teste_grafo_aresta@@Base+0x13c>
   11004:	ldr	r0, [pc, #40]	; 11034 <teste_grafo_aresta@@Base+0x158>
   11008:	bl	10af8 <puts@plt>
   1100c:	mov	r0, r4
   11010:	add	sp, sp, #80	; 0x50
   11014:	pop	{r4, r5, r6, r7, r8, pc}
   11018:	mov	r0, #10
   1101c:	bl	10b34 <putchar@plt>
   11020:	b	1100c <teste_grafo_aresta@@Base+0x130>
   11024:	strheq	r2, [r1], -r5
   11028:	andeq	r2, r1, r6, asr #1
   1102c:	strdeq	r2, [r1], -lr
   11030:	andeq	r2, r1, sl, lsr r1
   11034:	strheq	r2, [r1], -r2	; <UNPREDICTABLE>

00011038 <teste_grafo_adiciona@@Base>:
   11038:	push	{r0, r1, r4, r5, r6, lr}
   1103c:	mov	r4, #2
   11040:	mov	r6, #7
   11044:	mov	r3, r4
   11048:	mov	r2, #3
   1104c:	mov	r1, #4
   11050:	str	r4, [sp, #4]
   11054:	str	r6, [sp]
   11058:	mov	r0, #9
   1105c:	bl	10d18 <_g@@Base>
   11060:	mov	r5, r0
   11064:	ldr	r0, [pc, #368]	; 111dc <teste_grafo_adiciona@@Base+0x1a4>
   11068:	bl	10ad4 <printf@plt>
   1106c:	mov	r1, r4
   11070:	mov	r2, r6
   11074:	mov	r0, r5
   11078:	bl	11a30 <grafo_adiciona@@Base>
   1107c:	cmp	r0, #1
   11080:	moveq	r4, #0
   11084:	beq	11094 <teste_grafo_adiciona@@Base+0x5c>
   11088:	ldr	r0, [pc, #336]	; 111e0 <teste_grafo_adiciona@@Base+0x1a8>
   1108c:	bl	10ad4 <printf@plt>
   11090:	mov	r4, #1
   11094:	ldr	r3, [r5, #4]
   11098:	ldr	r3, [r3, #20]
   1109c:	cmp	r3, #0
   110a0:	beq	110b0 <teste_grafo_adiciona@@Base+0x78>
   110a4:	ldr	r3, [r3]
   110a8:	cmp	r3, #7
   110ac:	beq	110bc <teste_grafo_adiciona@@Base+0x84>
   110b0:	ldr	r0, [pc, #300]	; 111e4 <teste_grafo_adiciona@@Base+0x1ac>
   110b4:	bl	10ad4 <printf@plt>
   110b8:	add	r4, r4, #1
   110bc:	mov	r2, #8
   110c0:	mov	r1, #3
   110c4:	mov	r0, r5
   110c8:	bl	11a30 <grafo_adiciona@@Base>
   110cc:	cmp	r0, #1
   110d0:	beq	110e0 <teste_grafo_adiciona@@Base+0xa8>
   110d4:	ldr	r0, [pc, #260]	; 111e0 <teste_grafo_adiciona@@Base+0x1a8>
   110d8:	bl	10ad4 <printf@plt>
   110dc:	add	r4, r4, #1
   110e0:	ldr	r3, [r5, #4]
   110e4:	ldr	r2, [r3, #28]
   110e8:	cmp	r2, #0
   110ec:	beq	11120 <teste_grafo_adiciona@@Base+0xe8>
   110f0:	ldr	r3, [r2, #4]
   110f4:	cmp	r3, #0
   110f8:	beq	11120 <teste_grafo_adiciona@@Base+0xe8>
   110fc:	ldr	r1, [r3, #4]
   11100:	cmp	r1, #0
   11104:	bne	11120 <teste_grafo_adiciona@@Base+0xe8>
   11108:	ldr	r2, [r2]
   1110c:	cmp	r2, #2
   11110:	bne	111bc <teste_grafo_adiciona@@Base+0x184>
   11114:	ldr	r3, [r3]
   11118:	cmp	r3, #8
   1111c:	beq	1112c <teste_grafo_adiciona@@Base+0xf4>
   11120:	ldr	r0, [pc, #192]	; 111e8 <teste_grafo_adiciona@@Base+0x1b0>
   11124:	bl	10ad4 <printf@plt>
   11128:	add	r4, r4, #1
   1112c:	mov	r2, #7
   11130:	mov	r1, #2
   11134:	mov	r0, r5
   11138:	bl	11a30 <grafo_adiciona@@Base>
   1113c:	cmp	r0, #0
   11140:	beq	11150 <teste_grafo_adiciona@@Base+0x118>
   11144:	ldr	r0, [pc, #160]	; 111ec <teste_grafo_adiciona@@Base+0x1b4>
   11148:	bl	10ad4 <printf@plt>
   1114c:	add	r4, r4, #1
   11150:	mov	r2, #7
   11154:	mov	r1, #22
   11158:	mov	r0, r5
   1115c:	bl	11a30 <grafo_adiciona@@Base>
   11160:	cmn	r0, #1
   11164:	beq	11174 <teste_grafo_adiciona@@Base+0x13c>
   11168:	ldr	r0, [pc, #128]	; 111f0 <teste_grafo_adiciona@@Base+0x1b8>
   1116c:	bl	10ad4 <printf@plt>
   11170:	add	r4, r4, #1
   11174:	mov	r2, #7
   11178:	mov	r1, #2
   1117c:	mov	r0, #0
   11180:	bl	11a30 <grafo_adiciona@@Base>
   11184:	cmn	r0, #1
   11188:	beq	11198 <teste_grafo_adiciona@@Base+0x160>
   1118c:	ldr	r0, [pc, #96]	; 111f4 <teste_grafo_adiciona@@Base+0x1bc>
   11190:	bl	10ad4 <printf@plt>
   11194:	add	r4, r4, #1
   11198:	mov	r0, r5
   1119c:	bl	11978 <grafo_apaga@@Base>
   111a0:	cmp	r4, #0
   111a4:	bne	111d0 <teste_grafo_adiciona@@Base+0x198>
   111a8:	ldr	r0, [pc, #72]	; 111f8 <teste_grafo_adiciona@@Base+0x1c0>
   111ac:	bl	10af8 <puts@plt>
   111b0:	mov	r0, r4
   111b4:	add	sp, sp, #8
   111b8:	pop	{r4, r5, r6, pc}
   111bc:	cmp	r2, #8
   111c0:	bne	11120 <teste_grafo_adiciona@@Base+0xe8>
   111c4:	ldr	r3, [r3]
   111c8:	cmp	r3, #2
   111cc:	b	1111c <teste_grafo_adiciona@@Base+0xe4>
   111d0:	mov	r0, #10
   111d4:	bl	10b34 <putchar@plt>
   111d8:	b	111b0 <teste_grafo_adiciona@@Base+0x178>
   111dc:	andeq	r2, r1, r0, ror r1
   111e0:	andeq	r2, r1, r3, lsl #3
   111e4:			; <UNDEFINED> instruction: 0x000121bd
   111e8:	andeq	r2, r1, fp, ror #3
   111ec:	andeq	r2, r1, r6, lsr #4
   111f0:	andeq	r2, r1, lr, asr r2
   111f4:	muleq	r1, r5, r2
   111f8:	strheq	r2, [r1], -r2	; <UNPREDICTABLE>

000111fc <teste_grafo_remove@@Base>:
   111fc:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   11200:	mov	r3, #2
   11204:	mov	r6, #7
   11208:	mov	r4, #1
   1120c:	stmib	sp, {r3, r6}
   11210:	mov	r2, #3
   11214:	mov	r1, #6
   11218:	str	r4, [sp, #12]
   1121c:	str	r6, [sp]
   11220:	mov	r0, #9
   11224:	bl	10d18 <_g@@Base>
   11228:	mov	r5, r0
   1122c:	ldr	r0, [pc, #272]	; 11344 <teste_grafo_remove@@Base+0x148>
   11230:	bl	10ad4 <printf@plt>
   11234:	mov	r2, r4
   11238:	mov	r1, r6
   1123c:	mov	r0, r5
   11240:	bl	11ab8 <grafo_remove@@Base>
   11244:	cmp	r0, r4
   11248:	moveq	r4, #0
   1124c:	beq	11258 <teste_grafo_remove@@Base+0x5c>
   11250:	ldr	r0, [pc, #240]	; 11348 <teste_grafo_remove@@Base+0x14c>
   11254:	bl	10ad4 <printf@plt>
   11258:	ldr	r3, [r5, #4]
   1125c:	ldr	r3, [r3, #60]	; 0x3c
   11260:	cmp	r3, #0
   11264:	beq	11280 <teste_grafo_remove@@Base+0x84>
   11268:	ldr	r2, [r3, #4]
   1126c:	cmp	r2, #0
   11270:	bne	11280 <teste_grafo_remove@@Base+0x84>
   11274:	ldr	r3, [r3]
   11278:	cmp	r3, #2
   1127c:	beq	1128c <teste_grafo_remove@@Base+0x90>
   11280:	ldr	r0, [pc, #196]	; 1134c <teste_grafo_remove@@Base+0x150>
   11284:	bl	10ad4 <printf@plt>
   11288:	add	r4, r4, #1
   1128c:	mov	r2, #2
   11290:	mov	r1, #7
   11294:	mov	r0, r5
   11298:	bl	11ab8 <grafo_remove@@Base>
   1129c:	cmp	r0, #1
   112a0:	beq	112b0 <teste_grafo_remove@@Base+0xb4>
   112a4:	ldr	r0, [pc, #156]	; 11348 <teste_grafo_remove@@Base+0x14c>
   112a8:	bl	10ad4 <printf@plt>
   112ac:	add	r4, r4, #1
   112b0:	ldr	r3, [r5, #4]
   112b4:	ldr	r3, [r3, #60]	; 0x3c
   112b8:	cmp	r3, #0
   112bc:	beq	112cc <teste_grafo_remove@@Base+0xd0>
   112c0:	ldr	r0, [pc, #132]	; 1134c <teste_grafo_remove@@Base+0x150>
   112c4:	bl	10ad4 <printf@plt>
   112c8:	add	r4, r4, #1
   112cc:	mov	r2, #0
   112d0:	mov	r1, #4
   112d4:	mov	r0, r5
   112d8:	bl	11ab8 <grafo_remove@@Base>
   112dc:	cmp	r0, #0
   112e0:	beq	112f0 <teste_grafo_remove@@Base+0xf4>
   112e4:	ldr	r0, [pc, #100]	; 11350 <teste_grafo_remove@@Base+0x154>
   112e8:	bl	10ad4 <printf@plt>
   112ec:	add	r4, r4, #1
   112f0:	mov	r2, #22
   112f4:	mov	r1, #7
   112f8:	mov	r0, r5
   112fc:	bl	11ab8 <grafo_remove@@Base>
   11300:	cmn	r0, #1
   11304:	beq	11314 <teste_grafo_remove@@Base+0x118>
   11308:	ldr	r0, [pc, #68]	; 11354 <teste_grafo_remove@@Base+0x158>
   1130c:	bl	10ad4 <printf@plt>
   11310:	add	r4, r4, #1
   11314:	mov	r0, r5
   11318:	bl	11978 <grafo_apaga@@Base>
   1131c:	cmp	r4, #0
   11320:	bne	11338 <teste_grafo_remove@@Base+0x13c>
   11324:	ldr	r0, [pc, #44]	; 11358 <teste_grafo_remove@@Base+0x15c>
   11328:	bl	10af8 <puts@plt>
   1132c:	mov	r0, r4
   11330:	add	sp, sp, #16
   11334:	pop	{r4, r5, r6, pc}
   11338:	mov	r0, #10
   1133c:	bl	10b34 <putchar@plt>
   11340:	b	1132c <teste_grafo_remove@@Base+0x130>
   11344:	andeq	r2, r1, sl, asr #5
   11348:	ldrdeq	r2, [r1], -fp
   1134c:	andeq	r2, r1, r5, lsl r3
   11350:	andeq	r2, r1, lr, asr #6
   11354:	andeq	r2, r1, sl, lsl #7
   11358:	strheq	r2, [r1], -r2	; <UNPREDICTABLE>

0001135c <teste_v_sucessores@@Base>:
   1135c:	push	{r4, r5, r6, r7, lr}
   11360:	sub	sp, sp, #84	; 0x54
   11364:	mov	r3, #6
   11368:	str	r3, [sp, #64]	; 0x40
   1136c:	str	r3, [sp, #60]	; 0x3c
   11370:	str	r3, [sp, #44]	; 0x2c
   11374:	mov	r3, #4
   11378:	str	r3, [sp, #40]	; 0x28
   1137c:	str	r3, [sp, #32]
   11380:	str	r3, [sp, #28]
   11384:	mov	r3, #5
   11388:	mov	r4, #0
   1138c:	str	r3, [sp, #24]
   11390:	str	r3, [sp, #20]
   11394:	mov	r3, #2
   11398:	mov	r5, #7
   1139c:	mov	r2, #3
   113a0:	mov	r6, #1
   113a4:	str	r3, [sp, #12]
   113a8:	stmib	sp, {r3, r4}
   113ac:	mov	r1, #22
   113b0:	str	r5, [sp, #16]
   113b4:	str	r5, [sp]
   113b8:	str	r4, [sp, #36]	; 0x24
   113bc:	mov	r0, #8
   113c0:	str	r2, [sp, #68]	; 0x44
   113c4:	str	r5, [sp, #56]	; 0x38
   113c8:	str	r6, [sp, #76]	; 0x4c
   113cc:	str	r4, [sp, #72]	; 0x48
   113d0:	str	r6, [sp, #52]	; 0x34
   113d4:	str	r6, [sp, #48]	; 0x30
   113d8:	bl	10d18 <_g@@Base>
   113dc:	mov	r7, r0
   113e0:	ldr	r0, [pc, #252]	; 114e4 <teste_v_sucessores@@Base+0x188>
   113e4:	bl	10ad4 <printf@plt>
   113e8:	mov	r1, r5
   113ec:	mov	r0, r7
   113f0:	bl	11b60 <v_sucessores@@Base>
   113f4:	subs	r5, r0, #0
   113f8:	bne	1143c <teste_v_sucessores@@Base+0xe0>
   113fc:	ldr	r0, [pc, #228]	; 114e8 <teste_v_sucessores@@Base+0x18c>
   11400:	bl	10ad4 <printf@plt>
   11404:	mov	r0, #10
   11408:	bl	10b34 <putchar@plt>
   1140c:	b	114d8 <teste_v_sucessores@@Base+0x17c>
   11410:	mov	r1, #5
   11414:	mov	r0, r5
   11418:	bl	10dc4 <_f@@Base>
   1141c:	cmp	r0, #0
   11420:	beq	11468 <teste_v_sucessores@@Base+0x10c>
   11424:	mov	r1, #6
   11428:	mov	r0, r5
   1142c:	bl	10dc4 <_f@@Base>
   11430:	cmp	r0, #0
   11434:	beq	11468 <teste_v_sucessores@@Base+0x10c>
   11438:	b	11474 <teste_v_sucessores@@Base+0x118>
   1143c:	ldr	r3, [r5]
   11440:	cmp	r3, #3
   11444:	moveq	r6, r4
   11448:	beq	11454 <teste_v_sucessores@@Base+0xf8>
   1144c:	ldr	r0, [pc, #152]	; 114ec <teste_v_sucessores@@Base+0x190>
   11450:	bl	10ad4 <printf@plt>
   11454:	mov	r1, #2
   11458:	mov	r0, r5
   1145c:	bl	10dc4 <_f@@Base>
   11460:	cmp	r0, #0
   11464:	bne	11410 <teste_v_sucessores@@Base+0xb4>
   11468:	ldr	r0, [pc, #128]	; 114f0 <teste_v_sucessores@@Base+0x194>
   1146c:	bl	10ad4 <printf@plt>
   11470:	add	r6, r6, #1
   11474:	mov	r0, r5
   11478:	bl	11d5c <vetor_apaga@@Base>
   1147c:	mov	r1, #2
   11480:	mov	r0, r7
   11484:	bl	11b60 <v_sucessores@@Base>
   11488:	subs	r5, r0, #0
   1148c:	bne	114a0 <teste_v_sucessores@@Base+0x144>
   11490:	ldr	r0, [pc, #92]	; 114f4 <teste_v_sucessores@@Base+0x198>
   11494:	bl	10ad4 <printf@plt>
   11498:	add	r6, r6, #1
   1149c:	b	11404 <teste_v_sucessores@@Base+0xa8>
   114a0:	ldr	r3, [r5]
   114a4:	cmp	r3, #0
   114a8:	beq	114b8 <teste_v_sucessores@@Base+0x15c>
   114ac:	ldr	r0, [pc, #68]	; 114f8 <teste_v_sucessores@@Base+0x19c>
   114b0:	bl	10ad4 <printf@plt>
   114b4:	add	r6, r6, #1
   114b8:	mov	r0, r5
   114bc:	bl	11d5c <vetor_apaga@@Base>
   114c0:	mov	r0, r7
   114c4:	bl	11978 <grafo_apaga@@Base>
   114c8:	cmp	r6, #0
   114cc:	bne	11404 <teste_v_sucessores@@Base+0xa8>
   114d0:	ldr	r0, [pc, #36]	; 114fc <teste_v_sucessores@@Base+0x1a0>
   114d4:	bl	10af8 <puts@plt>
   114d8:	mov	r0, r6
   114dc:	add	sp, sp, #84	; 0x54
   114e0:	pop	{r4, r5, r6, r7, pc}
   114e4:	andeq	r2, r1, r2, asr #7
   114e8:	ldrdeq	r2, [r1], -r3
   114ec:	andeq	r2, r1, r0, lsl #8
   114f0:	andeq	r2, r1, fp, lsr #8
   114f4:	andeq	r2, r1, r7, asr r4
   114f8:	muleq	r1, r5, r4
   114fc:	strheq	r2, [r1], -r2	; <UNPREDICTABLE>

00011500 <teste_v_antecessores@@Base>:
   11500:	push	{r4, r5, r6, r7, lr}
   11504:	sub	sp, sp, #84	; 0x54
   11508:	mov	r1, #6
   1150c:	mov	r5, #2
   11510:	mov	r3, #7
   11514:	str	r1, [sp, #64]	; 0x40
   11518:	str	r1, [sp, #60]	; 0x3c
   1151c:	str	r1, [sp, #44]	; 0x2c
   11520:	mov	r1, #4
   11524:	mov	r4, #0
   11528:	str	r1, [sp, #40]	; 0x28
   1152c:	str	r1, [sp, #32]
   11530:	str	r1, [sp, #28]
   11534:	mov	r1, #5
   11538:	mov	r2, #3
   1153c:	mov	r6, #1
   11540:	stm	sp, {r3, r5}
   11544:	str	r3, [sp, #56]	; 0x38
   11548:	str	r1, [sp, #24]
   1154c:	str	r1, [sp, #20]
   11550:	str	r3, [sp, #16]
   11554:	mov	r1, #22
   11558:	mov	r3, r5
   1155c:	str	r5, [sp, #12]
   11560:	str	r4, [sp, #36]	; 0x24
   11564:	str	r4, [sp, #8]
   11568:	mov	r0, #8
   1156c:	str	r2, [sp, #68]	; 0x44
   11570:	str	r6, [sp, #76]	; 0x4c
   11574:	str	r4, [sp, #72]	; 0x48
   11578:	str	r6, [sp, #52]	; 0x34
   1157c:	str	r6, [sp, #48]	; 0x30
   11580:	bl	10d18 <_g@@Base>
   11584:	mov	r7, r0
   11588:	ldr	r0, [pc, #252]	; 1168c <teste_v_antecessores@@Base+0x18c>
   1158c:	bl	10ad4 <printf@plt>
   11590:	mov	r1, r5
   11594:	mov	r0, r7
   11598:	bl	11bd0 <v_antecessores@@Base>
   1159c:	subs	r5, r0, #0
   115a0:	bne	115e4 <teste_v_antecessores@@Base+0xe4>
   115a4:	ldr	r0, [pc, #228]	; 11690 <teste_v_antecessores@@Base+0x190>
   115a8:	bl	10ad4 <printf@plt>
   115ac:	mov	r0, #10
   115b0:	bl	10b34 <putchar@plt>
   115b4:	b	11680 <teste_v_antecessores@@Base+0x180>
   115b8:	mov	r1, #3
   115bc:	mov	r0, r5
   115c0:	bl	10dc4 <_f@@Base>
   115c4:	cmp	r0, #0
   115c8:	beq	11610 <teste_v_antecessores@@Base+0x110>
   115cc:	mov	r1, #7
   115d0:	mov	r0, r5
   115d4:	bl	10dc4 <_f@@Base>
   115d8:	cmp	r0, #0
   115dc:	beq	11610 <teste_v_antecessores@@Base+0x110>
   115e0:	b	1161c <teste_v_antecessores@@Base+0x11c>
   115e4:	ldr	r3, [r5]
   115e8:	cmp	r3, #3
   115ec:	moveq	r6, r4
   115f0:	beq	115fc <teste_v_antecessores@@Base+0xfc>
   115f4:	ldr	r0, [pc, #152]	; 11694 <teste_v_antecessores@@Base+0x194>
   115f8:	bl	10ad4 <printf@plt>
   115fc:	mov	r1, #0
   11600:	mov	r0, r5
   11604:	bl	10dc4 <_f@@Base>
   11608:	cmp	r0, #0
   1160c:	bne	115b8 <teste_v_antecessores@@Base+0xb8>
   11610:	ldr	r0, [pc, #128]	; 11698 <teste_v_antecessores@@Base+0x198>
   11614:	bl	10ad4 <printf@plt>
   11618:	add	r6, r6, #1
   1161c:	mov	r0, r5
   11620:	bl	11d5c <vetor_apaga@@Base>
   11624:	mov	r1, #7
   11628:	mov	r0, r7
   1162c:	bl	11bd0 <v_antecessores@@Base>
   11630:	subs	r5, r0, #0
   11634:	bne	11648 <teste_v_antecessores@@Base+0x148>
   11638:	ldr	r0, [pc, #92]	; 1169c <teste_v_antecessores@@Base+0x19c>
   1163c:	bl	10ad4 <printf@plt>
   11640:	add	r6, r6, #1
   11644:	b	115ac <teste_v_antecessores@@Base+0xac>
   11648:	ldr	r3, [r5]
   1164c:	cmp	r3, #0
   11650:	beq	11660 <teste_v_antecessores@@Base+0x160>
   11654:	ldr	r0, [pc, #68]	; 116a0 <teste_v_antecessores@@Base+0x1a0>
   11658:	bl	10ad4 <printf@plt>
   1165c:	add	r6, r6, #1
   11660:	mov	r0, r5
   11664:	bl	11d5c <vetor_apaga@@Base>
   11668:	mov	r0, r7
   1166c:	bl	11978 <grafo_apaga@@Base>
   11670:	cmp	r6, #0
   11674:	bne	115ac <teste_v_antecessores@@Base+0xac>
   11678:	ldr	r0, [pc, #36]	; 116a4 <teste_v_antecessores@@Base+0x1a4>
   1167c:	bl	10af8 <puts@plt>
   11680:	mov	r0, r6
   11684:	add	sp, sp, #84	; 0x54
   11688:	pop	{r4, r5, r6, r7, pc}
   1168c:	andeq	r2, r1, r3, asr #9
   11690:	ldrdeq	r2, [r1], -r6
   11694:	andeq	r2, r1, r5, lsl #10
   11698:	andeq	r2, r1, r2, lsr r5
   1169c:	andeq	r2, r1, r0, ror #10
   116a0:	andeq	r2, r1, r0, lsr #11
   116a4:	strheq	r2, [r1], -r2	; <UNPREDICTABLE>

000116a8 <teste_v_grau@@Base>:
   116a8:	push	{r4, r5, r6, lr}
   116ac:	sub	sp, sp, #80	; 0x50
   116b0:	mov	r3, #6
   116b4:	str	r3, [sp, #64]	; 0x40
   116b8:	str	r3, [sp, #60]	; 0x3c
   116bc:	str	r3, [sp, #44]	; 0x2c
   116c0:	mov	r3, #4
   116c4:	str	r3, [sp, #40]	; 0x28
   116c8:	str	r3, [sp, #32]
   116cc:	str	r3, [sp, #28]
   116d0:	mov	r3, #5
   116d4:	mov	r1, #7
   116d8:	mov	r4, #0
   116dc:	str	r3, [sp, #24]
   116e0:	str	r3, [sp, #20]
   116e4:	mov	r3, #2
   116e8:	mov	r2, #3
   116ec:	stm	sp, {r1, r3, r4}
   116f0:	mov	r6, #1
   116f4:	str	r3, [sp, #12]
   116f8:	str	r1, [sp, #56]	; 0x38
   116fc:	str	r1, [sp, #16]
   11700:	str	r4, [sp, #36]	; 0x24
   11704:	mov	r1, #22
   11708:	mov	r0, #8
   1170c:	str	r2, [sp, #68]	; 0x44
   11710:	str	r6, [sp, #76]	; 0x4c
   11714:	str	r4, [sp, #72]	; 0x48
   11718:	str	r6, [sp, #52]	; 0x34
   1171c:	str	r6, [sp, #48]	; 0x30
   11720:	bl	10d18 <_g@@Base>
   11724:	mov	r5, r0
   11728:	ldr	r0, [pc, #144]	; 117c0 <teste_v_grau@@Base+0x118>
   1172c:	bl	10ad4 <printf@plt>
   11730:	mvn	r1, #3
   11734:	mov	r0, r5
   11738:	bl	11c5c <v_grau@@Base>
   1173c:	cmn	r0, #1
   11740:	beq	11750 <teste_v_grau@@Base+0xa8>
   11744:	ldr	r0, [pc, #120]	; 117c4 <teste_v_grau@@Base+0x11c>
   11748:	bl	10ad4 <printf@plt>
   1174c:	mov	r4, r6
   11750:	mov	r1, #7
   11754:	mov	r0, r5
   11758:	bl	11c5c <v_grau@@Base>
   1175c:	cmp	r0, #3
   11760:	beq	11770 <teste_v_grau@@Base+0xc8>
   11764:	ldr	r0, [pc, #92]	; 117c8 <teste_v_grau@@Base+0x120>
   11768:	bl	10ad4 <printf@plt>
   1176c:	add	r4, r4, #1
   11770:	mov	r1, #5
   11774:	mov	r0, r5
   11778:	bl	11c5c <v_grau@@Base>
   1177c:	cmp	r0, #2
   11780:	beq	11790 <teste_v_grau@@Base+0xe8>
   11784:	ldr	r0, [pc, #64]	; 117cc <teste_v_grau@@Base+0x124>
   11788:	bl	10ad4 <printf@plt>
   1178c:	add	r4, r4, #1
   11790:	mov	r0, r5
   11794:	bl	11978 <grafo_apaga@@Base>
   11798:	cmp	r4, #0
   1179c:	bne	117b4 <teste_v_grau@@Base+0x10c>
   117a0:	ldr	r0, [pc, #40]	; 117d0 <teste_v_grau@@Base+0x128>
   117a4:	bl	10af8 <puts@plt>
   117a8:	mov	r0, r4
   117ac:	add	sp, sp, #80	; 0x50
   117b0:	pop	{r4, r5, r6, pc}
   117b4:	mov	r0, #10
   117b8:	bl	10b34 <putchar@plt>
   117bc:	b	117a8 <teste_v_grau@@Base+0x100>
   117c0:	ldrdeq	r2, [r1], -r0
   117c4:	ldrdeq	r2, [r1], -fp
   117c8:	andeq	r2, r1, fp, lsl #12
   117cc:	andeq	r2, r1, sl, lsr r6
   117d0:	strheq	r2, [r1], -r2	; <UNPREDICTABLE>

000117d4 <teste_v_celebridade@@Base>:
   117d4:	push	{r4, r5, r6, lr}
   117d8:	mov	r3, #2
   117dc:	sub	sp, sp, #112	; 0x70
   117e0:	mov	ip, #0
   117e4:	mov	r1, #4
   117e8:	mov	r0, #6
   117ec:	mov	r4, #7
   117f0:	mov	lr, #5
   117f4:	mov	r5, #1
   117f8:	mov	r2, #3
   117fc:	stmib	sp, {r3, ip}
   11800:	str	r1, [sp, #96]	; 0x60
   11804:	str	r0, [sp, #88]	; 0x58
   11808:	str	r0, [sp, #64]	; 0x40
   1180c:	str	r0, [sp, #60]	; 0x3c
   11810:	str	r0, [sp, #44]	; 0x2c
   11814:	str	r1, [sp, #40]	; 0x28
   11818:	str	r1, [sp, #32]
   1181c:	str	r1, [sp, #28]
   11820:	str	r4, [sp]
   11824:	mov	r1, #30
   11828:	mov	r0, #8
   1182c:	str	r3, [sp, #108]	; 0x6c
   11830:	str	lr, [sp, #104]	; 0x68
   11834:	str	r3, [sp, #100]	; 0x64
   11838:	str	r3, [sp, #92]	; 0x5c
   1183c:	str	r3, [sp, #84]	; 0x54
   11840:	str	ip, [sp, #72]	; 0x48
   11844:	str	r2, [sp, #68]	; 0x44
   11848:	str	ip, [sp, #36]	; 0x24
   1184c:	str	lr, [sp, #24]
   11850:	str	lr, [sp, #20]
   11854:	str	r3, [sp, #12]
   11858:	str	r4, [sp, #56]	; 0x38
   1185c:	str	r4, [sp, #16]
   11860:	str	r5, [sp, #80]	; 0x50
   11864:	str	r5, [sp, #76]	; 0x4c
   11868:	str	r5, [sp, #52]	; 0x34
   1186c:	str	r5, [sp, #48]	; 0x30
   11870:	bl	10d18 <_g@@Base>
   11874:	mov	r6, r0
   11878:	ldr	r0, [pc, #112]	; 118f0 <teste_v_celebridade@@Base+0x11c>
   1187c:	bl	10ad4 <printf@plt>
   11880:	mov	r1, r4
   11884:	mov	r0, r6
   11888:	bl	11cb8 <v_celebridade@@Base>
   1188c:	subs	r4, r0, #0
   11890:	beq	118a0 <teste_v_celebridade@@Base+0xcc>
   11894:	ldr	r0, [pc, #88]	; 118f4 <teste_v_celebridade@@Base+0x120>
   11898:	bl	10ad4 <printf@plt>
   1189c:	mov	r4, r5
   118a0:	mov	r1, #2
   118a4:	mov	r0, r6
   118a8:	bl	11cb8 <v_celebridade@@Base>
   118ac:	cmp	r0, #1
   118b0:	beq	118c0 <teste_v_celebridade@@Base+0xec>
   118b4:	ldr	r0, [pc, #60]	; 118f8 <teste_v_celebridade@@Base+0x124>
   118b8:	bl	10ad4 <printf@plt>
   118bc:	add	r4, r4, #1
   118c0:	mov	r0, r6
   118c4:	bl	11978 <grafo_apaga@@Base>
   118c8:	cmp	r4, #0
   118cc:	bne	118e4 <teste_v_celebridade@@Base+0x110>
   118d0:	ldr	r0, [pc, #36]	; 118fc <teste_v_celebridade@@Base+0x128>
   118d4:	bl	10af8 <puts@plt>
   118d8:	mov	r0, r4
   118dc:	add	sp, sp, #112	; 0x70
   118e0:	pop	{r4, r5, r6, pc}
   118e4:	mov	r0, #10
   118e8:	bl	10b34 <putchar@plt>
   118ec:	b	118d8 <teste_v_celebridade@@Base+0x104>
   118f0:	andeq	r2, r1, r9, ror #12
   118f4:	andeq	r2, r1, fp, ror r6
   118f8:			; <UNDEFINED> instruction: 0x000126b3
   118fc:	strheq	r2, [r1], -r2	; <UNPREDICTABLE>

00011900 <cria_elem@@Base>:
   11900:	push	{r4, lr}
   11904:	mov	r4, r0
   11908:	mov	r0, #8
   1190c:	bl	10b04 <malloc@plt>
   11910:	cmp	r0, #0
   11914:	movne	r3, #0
   11918:	strne	r4, [r0]
   1191c:	strne	r3, [r0, #4]
   11920:	pop	{r4, pc}

00011924 <grafo_novo@@Base>:
   11924:	push	{r4, r5, r6, lr}
   11928:	subs	r4, r0, #0
   1192c:	movle	r5, #0
   11930:	ble	11970 <grafo_novo@@Base+0x4c>
   11934:	mov	r0, #8
   11938:	bl	10b04 <malloc@plt>
   1193c:	str	r4, [r0]
   11940:	lsl	r4, r4, #3
   11944:	mov	r5, r0
   11948:	mov	r0, r4
   1194c:	bl	10b04 <malloc@plt>
   11950:	mov	r3, #0
   11954:	add	r4, r0, r4
   11958:	str	r0, [r5, #4]
   1195c:	str	r3, [r0]
   11960:	str	r3, [r0, #4]
   11964:	add	r0, r0, #8
   11968:	cmp	r0, r4
   1196c:	bne	1195c <grafo_novo@@Base+0x38>
   11970:	mov	r0, r5
   11974:	pop	{r4, r5, r6, pc}

00011978 <grafo_apaga@@Base>:
   11978:	push	{r4, r5, r6, lr}
   1197c:	subs	r4, r0, #0
   11980:	movne	r5, #0
   11984:	bne	119a4 <grafo_apaga@@Base+0x2c>
   11988:	pop	{r4, r5, r6, pc}
   1198c:	ldr	r3, [r4, #4]
   11990:	add	r3, r3, r5, lsl #3
   11994:	ldr	r0, [r3, #4]
   11998:	cmp	r0, #0
   1199c:	bne	119c4 <grafo_apaga@@Base+0x4c>
   119a0:	add	r5, r5, #1
   119a4:	ldr	r3, [r4]
   119a8:	cmp	r5, r3
   119ac:	blt	1198c <grafo_apaga@@Base+0x14>
   119b0:	ldr	r0, [r4, #4]
   119b4:	bl	10ae0 <free@plt>
   119b8:	mov	r0, r4
   119bc:	pop	{r4, r5, r6, lr}
   119c0:	b	10ae0 <free@plt>
   119c4:	ldr	r6, [r0, #4]
   119c8:	bl	10ae0 <free@plt>
   119cc:	mov	r0, r6
   119d0:	b	11998 <grafo_apaga@@Base+0x20>

000119d4 <grafo_aresta@@Base>:
   119d4:	cmp	r0, #0
   119d8:	beq	11a20 <grafo_aresta@@Base+0x4c>
   119dc:	ldr	r3, [r0]
   119e0:	cmp	r3, r1
   119e4:	blt	11a20 <grafo_aresta@@Base+0x4c>
   119e8:	cmp	r3, r2
   119ec:	ldrge	r3, [r0, #4]
   119f0:	addge	r1, r3, r1, lsl #3
   119f4:	ldrge	r0, [r1, #4]
   119f8:	bge	11a14 <grafo_aresta@@Base+0x40>
   119fc:	mov	r0, #0
   11a00:	bx	lr
   11a04:	ldr	r3, [r0]
   11a08:	cmp	r2, r3
   11a0c:	beq	11a28 <grafo_aresta@@Base+0x54>
   11a10:	ldr	r0, [r0, #4]
   11a14:	cmp	r0, #0
   11a18:	bne	11a04 <grafo_aresta@@Base+0x30>
   11a1c:	bx	lr
   11a20:	mvn	r0, #0
   11a24:	bx	lr
   11a28:	mov	r0, #1
   11a2c:	bx	lr

00011a30 <grafo_adiciona@@Base>:
   11a30:	push	{r4, r5, r6, r7, r8, lr}
   11a34:	subs	r6, r0, #0
   11a38:	beq	11aa8 <grafo_adiciona@@Base+0x78>
   11a3c:	ldr	r3, [r6]
   11a40:	mov	r5, r1
   11a44:	cmp	r3, r2
   11a48:	cmpge	r3, r1
   11a4c:	mov	r7, r2
   11a50:	movlt	r4, #1
   11a54:	movge	r4, #0
   11a58:	blt	11aa8 <grafo_adiciona@@Base+0x78>
   11a5c:	bl	119d4 <grafo_aresta@@Base>
   11a60:	cmp	r0, #1
   11a64:	beq	11ab0 <grafo_adiciona@@Base+0x80>
   11a68:	lsl	r4, r5, #3
   11a6c:	ldr	r5, [r6, #4]
   11a70:	mov	r0, r2
   11a74:	add	r5, r5, r4
   11a78:	ldr	r8, [r5, #4]
   11a7c:	bl	11900 <cria_elem@@Base>
   11a80:	ldr	r3, [r6, #4]
   11a84:	add	r4, r3, r4
   11a88:	str	r0, [r5, #4]
   11a8c:	ldr	r2, [r4, #4]
   11a90:	mov	r0, #1
   11a94:	str	r8, [r2, #4]
   11a98:	ldr	r2, [r3]
   11a9c:	add	r2, r2, #1
   11aa0:	str	r2, [r3]
   11aa4:	pop	{r4, r5, r6, r7, r8, pc}
   11aa8:	mvn	r0, #0
   11aac:	pop	{r4, r5, r6, r7, r8, pc}
   11ab0:	mov	r0, r4
   11ab4:	pop	{r4, r5, r6, r7, r8, pc}

00011ab8 <grafo_remove@@Base>:
   11ab8:	cmp	r0, #0
   11abc:	beq	11b58 <grafo_remove@@Base+0xa0>
   11ac0:	cmp	r1, r2
   11ac4:	ldr	ip, [r0]
   11ac8:	movge	r3, r1
   11acc:	movlt	r3, r2
   11ad0:	cmp	ip, r3
   11ad4:	blt	11b58 <grafo_remove@@Base+0xa0>
   11ad8:	ldr	r3, [r0, #4]
   11adc:	add	r1, r3, r1, lsl #3
   11ae0:	ldr	r0, [r1, #4]
   11ae4:	cmp	r0, #0
   11ae8:	bxeq	lr
   11aec:	ldr	ip, [r0]
   11af0:	push	{r4, lr}
   11af4:	cmp	r2, ip
   11af8:	ldreq	r2, [r0, #4]
   11afc:	streq	r2, [r1, #4]
   11b00:	beq	11b30 <grafo_remove@@Base+0x78>
   11b04:	mov	ip, #0
   11b08:	ldr	r1, [r0]
   11b0c:	cmp	ip, #0
   11b10:	sub	r1, r1, r2
   11b14:	clz	r1, r1
   11b18:	lsr	r1, r1, #5
   11b1c:	moveq	r1, #0
   11b20:	cmp	r1, #0
   11b24:	ldr	r1, [r0, #4]
   11b28:	beq	11b48 <grafo_remove@@Base+0x90>
   11b2c:	str	r1, [ip, #4]
   11b30:	ldr	r2, [r3]
   11b34:	sub	r2, r2, #1
   11b38:	str	r2, [r3]
   11b3c:	bl	10ae0 <free@plt>
   11b40:	mov	r0, #1
   11b44:	pop	{r4, pc}
   11b48:	mov	ip, r0
   11b4c:	subs	r0, r1, #0
   11b50:	bne	11b08 <grafo_remove@@Base+0x50>
   11b54:	pop	{r4, pc}
   11b58:	mvn	r0, #0
   11b5c:	bx	lr

00011b60 <v_sucessores@@Base>:
   11b60:	push	{r4, r5, r6, lr}
   11b64:	subs	r6, r0, #0
   11b68:	moveq	r4, r6
   11b6c:	beq	11bac <v_sucessores@@Base+0x4c>
   11b70:	ldr	r3, [r6]
   11b74:	cmp	r1, #0
   11b78:	cmpge	r3, r1
   11b7c:	movgt	r4, #1
   11b80:	movle	r4, #0
   11b84:	ble	11bac <v_sucessores@@Base+0x4c>
   11b88:	mov	r5, r1
   11b8c:	bl	11d38 <vetor_novo@@Base>
   11b90:	ldr	r1, [r6, #4]
   11b94:	mov	r6, #0
   11b98:	add	r1, r1, r5, lsl #3
   11b9c:	ldr	r5, [r1, #4]
   11ba0:	mov	r4, r0
   11ba4:	cmp	r5, #0
   11ba8:	bne	11bb4 <v_sucessores@@Base+0x54>
   11bac:	mov	r0, r4
   11bb0:	pop	{r4, r5, r6, pc}
   11bb4:	mov	r2, r6
   11bb8:	ldr	r1, [r5]
   11bbc:	mov	r0, r4
   11bc0:	bl	11df4 <vetor_insere@@Base>
   11bc4:	add	r6, r6, #1
   11bc8:	ldr	r5, [r5, #4]
   11bcc:	b	11ba4 <v_sucessores@@Base+0x44>

00011bd0 <v_antecessores@@Base>:
   11bd0:	push	{r4, r5, r6, r7, r8, lr}
   11bd4:	subs	r6, r0, #0
   11bd8:	moveq	r4, r6
   11bdc:	beq	11c18 <v_antecessores@@Base+0x48>
   11be0:	ldr	r4, [r6]
   11be4:	cmp	r1, #0
   11be8:	cmpge	r4, r1
   11bec:	movgt	r4, #1
   11bf0:	movle	r4, #0
   11bf4:	ble	11c18 <v_antecessores@@Base+0x48>
   11bf8:	mov	r5, r1
   11bfc:	bl	11d38 <vetor_novo@@Base>
   11c00:	mov	r8, #0
   11c04:	mov	r7, r8
   11c08:	mov	r4, r0
   11c0c:	ldr	r3, [r6]
   11c10:	cmp	r7, r3
   11c14:	blt	11c20 <v_antecessores@@Base+0x50>
   11c18:	mov	r0, r4
   11c1c:	pop	{r4, r5, r6, r7, r8, pc}
   11c20:	ldr	r3, [r6, #4]
   11c24:	add	r3, r3, r7, lsl #3
   11c28:	ldr	r3, [r3, #4]
   11c2c:	cmp	r3, #0
   11c30:	beq	11c54 <v_antecessores@@Base+0x84>
   11c34:	ldr	r2, [r3]
   11c38:	cmp	r5, r2
   11c3c:	bne	11c28 <v_antecessores@@Base+0x58>
   11c40:	mov	r2, r8
   11c44:	mov	r1, r7
   11c48:	mov	r0, r4
   11c4c:	bl	11df4 <vetor_insere@@Base>
   11c50:	add	r8, r8, #1
   11c54:	add	r7, r7, #1
   11c58:	b	11c0c <v_antecessores@@Base+0x3c>

00011c5c <v_grau@@Base>:
   11c5c:	push	{r4, r5, r6, lr}
   11c60:	subs	r5, r1, #0
   11c64:	mvnlt	r4, #0
   11c68:	blt	11cb0 <v_grau@@Base+0x54>
   11c6c:	mov	r4, r0
   11c70:	bl	11bd0 <v_antecessores@@Base>
   11c74:	mov	r1, r5
   11c78:	mov	r6, r0
   11c7c:	mov	r0, r4
   11c80:	bl	11b60 <v_sucessores@@Base>
   11c84:	mov	r5, r0
   11c88:	mov	r0, r6
   11c8c:	bl	11db0 <vetor_tamanho@@Base>
   11c90:	mov	r4, r0
   11c94:	mov	r0, r5
   11c98:	bl	11db0 <vetor_tamanho@@Base>
   11c9c:	add	r4, r4, r0
   11ca0:	mov	r0, r6
   11ca4:	bl	11d5c <vetor_apaga@@Base>
   11ca8:	mov	r0, r5
   11cac:	bl	11d5c <vetor_apaga@@Base>
   11cb0:	mov	r0, r4
   11cb4:	pop	{r4, r5, r6, pc}

00011cb8 <v_celebridade@@Base>:
   11cb8:	cmp	r0, #0
   11cbc:	beq	11d28 <v_celebridade@@Base+0x70>
   11cc0:	ldr	r2, [r0, #4]
   11cc4:	ldr	r3, [r2, r1, lsl #3]
   11cc8:	cmp	r3, #0
   11ccc:	bne	11d30 <v_celebridade@@Base+0x78>
   11cd0:	ldr	r0, [r0]
   11cd4:	push	{r4, lr}
   11cd8:	mov	lr, r3
   11cdc:	cmp	lr, r0
   11ce0:	blt	11cf8 <v_celebridade@@Base+0x40>
   11ce4:	add	r3, r3, #1
   11ce8:	sub	r0, r3, r0
   11cec:	clz	r0, r0
   11cf0:	lsr	r0, r0, #5
   11cf4:	pop	{r4, pc}
   11cf8:	ldr	ip, [r2, #4]
   11cfc:	cmp	ip, #0
   11d00:	beq	11d14 <v_celebridade@@Base+0x5c>
   11d04:	ldr	r4, [ip]
   11d08:	cmp	r1, r4
   11d0c:	bne	11d20 <v_celebridade@@Base+0x68>
   11d10:	add	r3, r3, #1
   11d14:	add	lr, lr, #1
   11d18:	add	r2, r2, #8
   11d1c:	b	11cdc <v_celebridade@@Base+0x24>
   11d20:	ldr	ip, [ip, #4]
   11d24:	b	11cfc <v_celebridade@@Base+0x44>
   11d28:	mvn	r0, #0
   11d2c:	bx	lr
   11d30:	mov	r0, #0
   11d34:	bx	lr

00011d38 <vetor_novo@@Base>:
   11d38:	push	{r4, lr}
   11d3c:	mov	r0, #12
   11d40:	bl	10b04 <malloc@plt>
   11d44:	cmp	r0, #0
   11d48:	movne	r3, #0
   11d4c:	strne	r3, [r0]
   11d50:	strne	r3, [r0, #4]
   11d54:	strne	r3, [r0, #8]
   11d58:	pop	{r4, pc}

00011d5c <vetor_apaga@@Base>:
   11d5c:	push	{r4, lr}
   11d60:	subs	r4, r0, #0
   11d64:	popeq	{r4, pc}
   11d68:	ldr	r0, [r4, #8]
   11d6c:	bl	10ae0 <free@plt>
   11d70:	mov	r0, r4
   11d74:	pop	{r4, lr}
   11d78:	b	10ae0 <free@plt>

00011d7c <vetor_atribui@@Base>:
   11d7c:	mov	r3, r0
   11d80:	clz	r0, r0
   11d84:	lsr	r0, r0, #5
   11d88:	orrs	r0, r0, r1, lsr #31
   11d8c:	bne	11da4 <vetor_atribui@@Base+0x28>
   11d90:	ldr	r0, [r3]
   11d94:	cmp	r1, r0
   11d98:	ldrlt	r3, [r3, #8]
   11d9c:	strlt	r2, [r3, r1, lsl #2]
   11da0:	blt	11da8 <vetor_atribui@@Base+0x2c>
   11da4:	mvn	r1, #0
   11da8:	mov	r0, r1
   11dac:	bx	lr

00011db0 <vetor_tamanho@@Base>:
   11db0:	cmp	r0, #0
   11db4:	ldrne	r0, [r0]
   11db8:	mvneq	r0, #0
   11dbc:	bx	lr

00011dc0 <vetor_elemento@@Base>:
   11dc0:	mov	r3, r0
   11dc4:	clz	r0, r0
   11dc8:	lsr	r0, r0, #5
   11dcc:	orrs	r2, r0, r1, lsr #31
   11dd0:	bne	11dec <vetor_elemento@@Base+0x2c>
   11dd4:	ldr	r2, [r3]
   11dd8:	cmp	r1, r2
   11ddc:	bge	11dec <vetor_elemento@@Base+0x2c>
   11de0:	ldr	r3, [r3, #8]
   11de4:	ldr	r0, [r3, r1, lsl #2]
   11de8:	bx	lr
   11dec:	mov	r0, #-2147483648	; 0x80000000
   11df0:	bx	lr

00011df4 <vetor_insere@@Base>:
   11df4:	cmn	r2, #1
   11df8:	movge	r3, #0
   11dfc:	movlt	r3, #1
   11e00:	cmp	r0, #0
   11e04:	orreq	r3, r3, #1
   11e08:	cmp	r3, #0
   11e0c:	push	{r4, r5, r6, lr}
   11e10:	beq	11e20 <vetor_insere@@Base+0x2c>
   11e14:	mvn	r5, #0
   11e18:	mov	r0, r5
   11e1c:	pop	{r4, r5, r6, pc}
   11e20:	ldr	r3, [r0]
   11e24:	mov	r5, r2
   11e28:	cmp	r2, r3
   11e2c:	mov	r4, r0
   11e30:	bgt	11e14 <vetor_insere@@Base+0x20>
   11e34:	cmn	r2, #1
   11e38:	ldr	r2, [r0, #4]
   11e3c:	moveq	r5, r3
   11e40:	cmp	r3, r2
   11e44:	mov	r6, r1
   11e48:	beq	11e78 <vetor_insere@@Base+0x84>
   11e4c:	ldr	r3, [r4]
   11e50:	sub	r1, r3, #1
   11e54:	lsl	r0, r3, #2
   11e58:	cmp	r5, r1
   11e5c:	sub	ip, r0, #4
   11e60:	ldr	r2, [r4, #8]
   11e64:	ble	11ea8 <vetor_insere@@Base+0xb4>
   11e68:	add	r3, r3, #1
   11e6c:	str	r6, [r2, r5, lsl #2]
   11e70:	str	r3, [r4]
   11e74:	b	11e18 <vetor_insere@@Base+0x24>
   11e78:	cmp	r3, #0
   11e7c:	moveq	r3, #1
   11e80:	lslne	r3, r3, #1
   11e84:	str	r3, [r0, #4]
   11e88:	ldr	r1, [r0, #4]
   11e8c:	ldr	r0, [r0, #8]
   11e90:	lsl	r1, r1, #2
   11e94:	bl	10aec <realloc@plt>
   11e98:	cmp	r0, #0
   11e9c:	str	r0, [r4, #8]
   11ea0:	bne	11e4c <vetor_insere@@Base+0x58>
   11ea4:	b	11e14 <vetor_insere@@Base+0x20>
   11ea8:	ldr	lr, [r2, ip]
   11eac:	sub	r1, r1, #1
   11eb0:	str	lr, [r2, r0]
   11eb4:	mov	r0, ip
   11eb8:	b	11e58 <vetor_insere@@Base+0x64>

00011ebc <vetor_remove@@Base>:
   11ebc:	mov	r2, r0
   11ec0:	clz	r0, r0
   11ec4:	lsr	r0, r0, #5
   11ec8:	orrs	r3, r0, r1, lsr #31
   11ecc:	bne	11ee4 <vetor_remove@@Base+0x28>
   11ed0:	ldr	r0, [r2]
   11ed4:	cmp	r1, r0
   11ed8:	addlt	r3, r1, #1
   11edc:	lsllt	r1, r1, #2
   11ee0:	blt	11eec <vetor_remove@@Base+0x30>
   11ee4:	mvn	r0, #0
   11ee8:	bx	lr
   11eec:	cmp	r3, r0
   11ef0:	add	ip, r1, #4
   11ef4:	bne	11f08 <vetor_remove@@Base+0x4c>
   11ef8:	sub	r3, r3, #1
   11efc:	str	r3, [r2]
   11f00:	mov	r0, #0
   11f04:	bx	lr
   11f08:	push	{r4, lr}
   11f0c:	add	r3, r3, #1
   11f10:	ldr	lr, [r2, #8]
   11f14:	cmp	r3, r0
   11f18:	ldr	r4, [lr, ip]
   11f1c:	str	r4, [lr, r1]
   11f20:	mov	r1, ip
   11f24:	add	ip, ip, #4
   11f28:	bne	11f0c <vetor_remove@@Base+0x50>
   11f2c:	sub	r3, r3, #1
   11f30:	str	r3, [r2]
   11f34:	mov	r0, #0
   11f38:	pop	{r4, pc}

00011f3c <vetor_pesquisa@@Base>:
   11f3c:	subs	r3, r0, #0
   11f40:	movne	r0, #0
   11f44:	ldrne	r2, [r3]
   11f48:	bne	11f68 <vetor_pesquisa@@Base+0x2c>
   11f4c:	mvn	r0, #0
   11f50:	bx	lr
   11f54:	ldr	ip, [r3, #8]
   11f58:	ldr	ip, [ip, r0, lsl #2]
   11f5c:	cmp	ip, r1
   11f60:	bxeq	lr
   11f64:	add	r0, r0, #1
   11f68:	cmp	r0, r2
   11f6c:	blt	11f54 <vetor_pesquisa@@Base+0x18>
   11f70:	b	11f4c <vetor_pesquisa@@Base+0x10>

00011f74 <vetor_ordena@@Base>:
   11f74:	cmp	r0, #0
   11f78:	beq	11fcc <vetor_ordena@@Base+0x58>
   11f7c:	push	{r4, r5, lr}
   11f80:	mov	r3, #1
   11f84:	ldr	r5, [r0]
   11f88:	cmp	r3, r5
   11f8c:	blt	11f98 <vetor_ordena@@Base+0x24>
   11f90:	mov	r0, #0
   11f94:	pop	{r4, r5, pc}
   11f98:	ldr	r1, [r0, #8]
   11f9c:	mov	r2, r3
   11fa0:	add	ip, r1, r3, lsl #2
   11fa4:	ldr	lr, [r1, r3, lsl #2]
   11fa8:	ldr	r4, [ip, #-4]
   11fac:	cmp	lr, r4
   11fb0:	bge	11fc0 <vetor_ordena@@Base+0x4c>
   11fb4:	subs	r2, r2, #1
   11fb8:	str	r4, [ip], #-4
   11fbc:	bne	11fa8 <vetor_ordena@@Base+0x34>
   11fc0:	str	lr, [r1, r2, lsl #2]
   11fc4:	add	r3, r3, #1
   11fc8:	b	11f88 <vetor_ordena@@Base+0x14>
   11fcc:	mvn	r0, #0
   11fd0:	bx	lr

00011fd4 <__libc_csu_init@@Base>:
   11fd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11fd8:	mov	r7, r0
   11fdc:	ldr	r6, [pc, #72]	; 1202c <__libc_csu_init@@Base+0x58>
   11fe0:	ldr	r5, [pc, #72]	; 12030 <__libc_csu_init@@Base+0x5c>
   11fe4:	add	r6, pc, r6
   11fe8:	add	r5, pc, r5
   11fec:	sub	r6, r6, r5
   11ff0:	mov	r8, r1
   11ff4:	mov	r9, r2
   11ff8:	bl	10aa8 <calloc@plt-0x20>
   11ffc:	asrs	r6, r6, #2
   12000:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12004:	mov	r4, #0
   12008:	add	r4, r4, #1
   1200c:	ldr	r3, [r5], #4
   12010:	mov	r2, r9
   12014:	mov	r1, r8
   12018:	mov	r0, r7
   1201c:	blx	r3
   12020:	cmp	r6, r4
   12024:	bne	12008 <__libc_csu_init@@Base+0x34>
   12028:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1202c:	andeq	r0, r1, r4, lsr #30
   12030:	andeq	r0, r1, ip, lsl pc

00012034 <__libc_csu_fini@@Base>:
   12034:	bx	lr

Disassembly of section .fini:

00012038 <.fini>:
   12038:	push	{r3, lr}
   1203c:	pop	{r3, pc}
