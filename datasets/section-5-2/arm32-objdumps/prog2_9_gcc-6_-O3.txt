
../repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

000109ec <.init>:
   109ec:	push	{r3, lr}
   109f0:	bl	10dfc <_start@@Base+0x3c>
   109f4:	pop	{r3, pc}

Disassembly of section .plt:

000109f8 <calloc@plt-0x14>:
   109f8:	push	{lr}		; (str lr, [sp, #-4]!)
   109fc:	ldr	lr, [pc, #4]	; 10a08 <calloc@plt-0x4>
   10a00:	add	lr, pc, lr
   10a04:	ldr	pc, [lr, #8]!
   10a08:	strdeq	r1, [r1], -r8

00010a0c <calloc@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #69632	; 0x11000
   10a14:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a18 <strcmp@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #69632	; 0x11000
   10a20:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a24 <printf@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #69632	; 0x11000
   10a2c:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a30 <__isoc99_fscanf@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #69632	; 0x11000
   10a38:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a3c <fopen@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #69632	; 0x11000
   10a44:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a48 <fflush@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #69632	; 0x11000
   10a50:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a54 <memmove@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #69632	; 0x11000
   10a5c:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a60 <free@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #69632	; 0x11000
   10a68:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a6c <fgets@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #69632	; 0x11000
   10a74:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a78 <strdup@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #69632	; 0x11000
   10a80:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a84 <puts@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #69632	; 0x11000
   10a8c:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a90 <malloc@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #69632	; 0x11000
   10a98:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a9c <__libc_start_main@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #69632	; 0x11000
   10aa4:	ldr	pc, [ip, #1432]!	; 0x598

00010aa8 <__gmon_start__@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #69632	; 0x11000
   10ab0:	ldr	pc, [ip, #1424]!	; 0x590

00010ab4 <feof@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #69632	; 0x11000
   10abc:	ldr	pc, [ip, #1416]!	; 0x588

00010ac0 <strlen@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #69632	; 0x11000
   10ac8:	ldr	pc, [ip, #1408]!	; 0x580

00010acc <putchar@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1400]!	; 0x578

00010ad8 <fclose@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1392]!	; 0x570

00010ae4 <abort@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1384]!	; 0x568

Disassembly of section .text:

00010af0 <main@@Base>:
   10af0:	push	{r4, r5, r6, lr}
   10af4:	mov	r0, #42	; 0x2a
   10af8:	bl	114e8 <vetor_cria@@Base>
   10afc:	ldr	r5, [pc, #620]	; 10d70 <main@@Base+0x280>
   10b00:	mov	r4, r0
   10b04:	ldr	r0, [pc, #616]	; 10d74 <main@@Base+0x284>
   10b08:	bl	10a84 <puts@plt>
   10b0c:	mov	r0, r4
   10b10:	ldr	r1, [pc, #608]	; 10d78 <main@@Base+0x288>
   10b14:	bl	11174 <fp_carrega@@Base>
   10b18:	ldr	r1, [r5]
   10b1c:	ldr	r0, [pc, #600]	; 10d7c <main@@Base+0x28c>
   10b20:	bl	10a24 <printf@plt>
   10b24:	mov	r0, r4
   10b28:	bl	11698 <vetor_imprime@@Base>
   10b2c:	ldr	r3, [r4]
   10b30:	cmp	r3, #42	; 0x2a
   10b34:	beq	10b4c <main@@Base+0x5c>
   10b38:	ldr	r0, [pc, #576]	; 10d80 <main@@Base+0x290>
   10b3c:	bl	10a84 <puts@plt>
   10b40:	mov	r6, #1
   10b44:	mov	r0, r6
   10b48:	pop	{r4, r5, r6, pc}
   10b4c:	mov	r0, r4
   10b50:	bl	11124 <fp_remove@@Base>
   10b54:	mov	r1, r0
   10b58:	ldr	r0, [pc, #548]	; 10d84 <main@@Base+0x294>
   10b5c:	bl	10a18 <strcmp@plt>
   10b60:	subs	r6, r0, #0
   10b64:	bne	10d50 <main@@Base+0x260>
   10b68:	mov	r0, r4
   10b6c:	str	r6, [r5]
   10b70:	bl	11124 <fp_remove@@Base>
   10b74:	ldr	r1, [r5]
   10b78:	ldr	r0, [pc, #520]	; 10d88 <main@@Base+0x298>
   10b7c:	bl	10a24 <printf@plt>
   10b80:	ldm	r4, {r2, r3}
   10b84:	str	r6, [r5]
   10b88:	cmp	r2, r3
   10b8c:	beq	10ba0 <main@@Base+0xb0>
   10b90:	mov	r2, #99	; 0x63
   10b94:	ldr	r1, [pc, #496]	; 10d8c <main@@Base+0x29c>
   10b98:	mov	r0, r4
   10b9c:	bl	10ee8 <_start@@Base+0x128>
   10ba0:	ldr	r1, [r5]
   10ba4:	ldr	r0, [pc, #484]	; 10d90 <main@@Base+0x2a0>
   10ba8:	bl	10a24 <printf@plt>
   10bac:	mov	r0, r4
   10bb0:	bl	11124 <fp_remove@@Base>
   10bb4:	ldm	r4, {r1, r3}
   10bb8:	mov	r2, #0
   10bbc:	str	r2, [r5]
   10bc0:	cmp	r1, r3
   10bc4:	beq	10bd4 <main@@Base+0xe4>
   10bc8:	ldr	r1, [pc, #444]	; 10d8c <main@@Base+0x29c>
   10bcc:	mov	r0, r4
   10bd0:	bl	10ee8 <_start@@Base+0x128>
   10bd4:	ldr	r1, [r5]
   10bd8:	ldr	r0, [pc, #436]	; 10d94 <main@@Base+0x2a4>
   10bdc:	bl	10a24 <printf@plt>
   10be0:	mov	r0, r4
   10be4:	bl	11124 <fp_remove@@Base>
   10be8:	ldr	r2, [r4]
   10bec:	ldr	r1, [r4, #4]
   10bf0:	mov	r3, #0
   10bf4:	cmp	r1, r2
   10bf8:	str	r3, [r5]
   10bfc:	beq	10c10 <main@@Base+0x120>
   10c00:	mov	r0, r4
   10c04:	mov	r2, #42	; 0x2a
   10c08:	ldr	r1, [pc, #380]	; 10d8c <main@@Base+0x29c>
   10c0c:	bl	10ee8 <_start@@Base+0x128>
   10c10:	ldr	r1, [r5]
   10c14:	ldr	r0, [pc, #380]	; 10d98 <main@@Base+0x2a8>
   10c18:	bl	10a24 <printf@plt>
   10c1c:	ldr	r0, [pc, #376]	; 10d9c <main@@Base+0x2ac>
   10c20:	bl	10a84 <puts@plt>
   10c24:	mov	r0, #42	; 0x2a
   10c28:	bl	11540 <vetor_criaHeap@@Base>
   10c2c:	ldr	r2, [pc, #324]	; 10d78 <main@@Base+0x288>
   10c30:	ldr	r1, [pc, #360]	; 10da0 <main@@Base+0x2b0>
   10c34:	mov	r4, r0
   10c38:	bl	113a0 <heap_carrega@@Base>
   10c3c:	ldr	r1, [r5]
   10c40:	ldr	r0, [pc, #348]	; 10da4 <main@@Base+0x2b4>
   10c44:	bl	10a24 <printf@plt>
   10c48:	mov	r0, r4
   10c4c:	bl	11720 <vetor_imprimeHeap@@Base>
   10c50:	ldr	r3, [r4]
   10c54:	cmp	r3, #42	; 0x2a
   10c58:	bne	10d60 <main@@Base+0x270>
   10c5c:	mov	r1, #0
   10c60:	ldr	r0, [pc, #284]	; 10d84 <main@@Base+0x294>
   10c64:	bl	10a18 <strcmp@plt>
   10c68:	subs	r6, r0, #0
   10c6c:	bne	10d50 <main@@Base+0x260>
   10c70:	mov	r1, r6
   10c74:	ldr	r0, [pc, #300]	; 10da8 <main@@Base+0x2b8>
   10c78:	str	r6, [r5]
   10c7c:	bl	10a24 <printf@plt>
   10c80:	ldm	r4, {r2, r3}
   10c84:	str	r6, [r5]
   10c88:	cmp	r2, r3
   10c8c:	beq	10ca4 <main@@Base+0x1b4>
   10c90:	mov	r3, #99	; 0x63
   10c94:	ldr	r2, [pc, #240]	; 10d8c <main@@Base+0x29c>
   10c98:	ldr	r1, [pc, #256]	; 10da0 <main@@Base+0x2b0>
   10c9c:	mov	r0, r4
   10ca0:	bl	10f9c <_start@@Base+0x1dc>
   10ca4:	ldr	r1, [r5]
   10ca8:	ldr	r0, [pc, #252]	; 10dac <main@@Base+0x2bc>
   10cac:	bl	10a24 <printf@plt>
   10cb0:	ldm	r4, {r1, r2}
   10cb4:	mov	r3, #0
   10cb8:	str	r3, [r5]
   10cbc:	cmp	r1, r2
   10cc0:	beq	10cd4 <main@@Base+0x1e4>
   10cc4:	ldr	r2, [pc, #192]	; 10d8c <main@@Base+0x29c>
   10cc8:	ldr	r1, [pc, #208]	; 10da0 <main@@Base+0x2b0>
   10ccc:	mov	r0, r4
   10cd0:	bl	10f9c <_start@@Base+0x1dc>
   10cd4:	ldr	r1, [r5]
   10cd8:	ldr	r0, [pc, #208]	; 10db0 <main@@Base+0x2c0>
   10cdc:	bl	10a24 <printf@plt>
   10ce0:	ldm	r4, {r1, r2}
   10ce4:	mov	r3, #0
   10ce8:	str	r3, [r5]
   10cec:	cmp	r1, r2
   10cf0:	beq	10d08 <main@@Base+0x218>
   10cf4:	mov	r0, r4
   10cf8:	mov	r3, #42	; 0x2a
   10cfc:	ldr	r2, [pc, #136]	; 10d8c <main@@Base+0x29c>
   10d00:	ldr	r1, [pc, #152]	; 10da0 <main@@Base+0x2b0>
   10d04:	bl	10f9c <_start@@Base+0x1dc>
   10d08:	ldr	r1, [r5]
   10d0c:	ldr	r0, [pc, #132]	; 10d98 <main@@Base+0x2a8>
   10d10:	bl	10a24 <printf@plt>
   10d14:	mov	r0, #42	; 0x2a
   10d18:	bl	11540 <vetor_criaHeap@@Base>
   10d1c:	ldr	r2, [pc, #84]	; 10d78 <main@@Base+0x288>
   10d20:	ldr	r1, [pc, #140]	; 10db4 <main@@Base+0x2c4>
   10d24:	bl	113a0 <heap_carrega@@Base>
   10d28:	ldr	r1, [r5]
   10d2c:	ldr	r0, [pc, #112]	; 10da4 <main@@Base+0x2b4>
   10d30:	bl	10a24 <printf@plt>
   10d34:	mov	r4, #42	; 0x2a
   10d38:	mov	r5, #0
   10d3c:	mov	r0, r5
   10d40:	bl	10a84 <puts@plt>
   10d44:	subs	r4, r4, #1
   10d48:	bne	10d3c <main@@Base+0x24c>
   10d4c:	b	10b44 <main@@Base+0x54>
   10d50:	ldr	r0, [pc, #96]	; 10db8 <main@@Base+0x2c8>
   10d54:	bl	10a84 <puts@plt>
   10d58:	mov	r6, #1
   10d5c:	b	10b44 <main@@Base+0x54>
   10d60:	ldr	r0, [pc, #84]	; 10dbc <main@@Base+0x2cc>
   10d64:	bl	10a84 <puts@plt>
   10d68:	mov	r6, #1
   10d6c:	b	10b44 <main@@Base+0x54>
   10d70:	andeq	r2, r2, ip, rrx
   10d74:	andeq	r1, r1, r4, asr #16
   10d78:	andeq	r1, r1, ip, ror r8
   10d7c:	andeq	r1, r1, r8, lsl #17
   10d80:	andeq	r1, r1, r0, asr #17
   10d84:	andeq	r1, r1, r8, ror #17
   10d88:	andeq	r1, r1, r0, asr #18
   10d8c:	andeq	r1, r1, r4, ror r9
   10d90:	andeq	r1, r1, r4, lsl #19
   10d94:	andeq	r1, r1, ip, asr #19
   10d98:	andeq	r1, r1, r4, lsl sl
   10d9c:	andeq	r1, r1, ip, asr sl
   10da0:	andeq	r1, r1, ip, asr #11
   10da4:	muleq	r1, r4, sl
   10da8:	strdeq	r1, [r1], -r4
   10dac:	andeq	r1, r1, r8, lsr #22
   10db0:	andeq	r1, r1, r0, ror fp
   10db4:	andeq	r1, r1, r4, lsr r6
   10db8:	strdeq	r1, [r1], -ip
   10dbc:	andeq	r1, r1, ip, asr #21

00010dc0 <_start@@Base>:
   10dc0:	mov	fp, #0
   10dc4:	mov	lr, #0
   10dc8:	pop	{r1}		; (ldr r1, [sp], #4)
   10dcc:	mov	r2, sp
   10dd0:	push	{r2}		; (str r2, [sp, #-4]!)
   10dd4:	push	{r0}		; (str r0, [sp, #-4]!)
   10dd8:	ldr	ip, [pc, #16]	; 10df0 <_start@@Base+0x30>
   10ddc:	push	{ip}		; (str ip, [sp, #-4]!)
   10de0:	ldr	r0, [pc, #12]	; 10df4 <_start@@Base+0x34>
   10de4:	ldr	r3, [pc, #12]	; 10df8 <_start@@Base+0x38>
   10de8:	bl	10a9c <__libc_start_main@plt>
   10dec:	bl	10ae4 <abort@plt>
   10df0:	andeq	r1, r1, r8, lsl #16
   10df4:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10df8:	andeq	r1, r1, r8, lsr #15
   10dfc:	ldr	r3, [pc, #20]	; 10e18 <_start@@Base+0x58>
   10e00:	ldr	r2, [pc, #20]	; 10e1c <_start@@Base+0x5c>
   10e04:	add	r3, pc, r3
   10e08:	ldr	r2, [r3, r2]
   10e0c:	cmp	r2, #0
   10e10:	bxeq	lr
   10e14:	b	10aa8 <__gmon_start__@plt>
   10e18:	strdeq	r1, [r1], -r4
   10e1c:	andeq	r0, r0, r8, asr r0
   10e20:	ldr	r3, [pc, #28]	; 10e44 <_start@@Base+0x84>
   10e24:	ldr	r0, [pc, #28]	; 10e48 <_start@@Base+0x88>
   10e28:	sub	r3, r3, r0
   10e2c:	cmp	r3, #6
   10e30:	bxls	lr
   10e34:	ldr	r3, [pc, #16]	; 10e4c <_start@@Base+0x8c>
   10e38:	cmp	r3, #0
   10e3c:	bxeq	lr
   10e40:	bx	r3
   10e44:	andeq	r2, r2, r7, rrx
   10e48:	andeq	r2, r2, r4, rrx
   10e4c:	andeq	r0, r0, r0
   10e50:	ldr	r1, [pc, #36]	; 10e7c <_start@@Base+0xbc>
   10e54:	ldr	r0, [pc, #36]	; 10e80 <_start@@Base+0xc0>
   10e58:	sub	r1, r1, r0
   10e5c:	asr	r1, r1, #2
   10e60:	add	r1, r1, r1, lsr #31
   10e64:	asrs	r1, r1, #1
   10e68:	bxeq	lr
   10e6c:	ldr	r3, [pc, #16]	; 10e84 <_start@@Base+0xc4>
   10e70:	cmp	r3, #0
   10e74:	bxeq	lr
   10e78:	bx	r3
   10e7c:	andeq	r2, r2, r4, rrx
   10e80:	andeq	r2, r2, r4, rrx
   10e84:	andeq	r0, r0, r0
   10e88:	push	{r4, lr}
   10e8c:	ldr	r4, [pc, #24]	; 10eac <_start@@Base+0xec>
   10e90:	ldrb	r3, [r4]
   10e94:	cmp	r3, #0
   10e98:	popne	{r4, pc}
   10e9c:	bl	10e20 <_start@@Base+0x60>
   10ea0:	mov	r3, #1
   10ea4:	strb	r3, [r4]
   10ea8:	pop	{r4, pc}
   10eac:	andeq	r2, r2, r8, rrx
   10eb0:	ldr	r0, [pc, #40]	; 10ee0 <_start@@Base+0x120>
   10eb4:	ldr	r3, [r0]
   10eb8:	cmp	r3, #0
   10ebc:	bne	10ec4 <_start@@Base+0x104>
   10ec0:	b	10e50 <_start@@Base+0x90>
   10ec4:	ldr	r3, [pc, #24]	; 10ee4 <_start@@Base+0x124>
   10ec8:	cmp	r3, #0
   10ecc:	beq	10ec0 <_start@@Base+0x100>
   10ed0:	push	{r4, lr}
   10ed4:	blx	r3
   10ed8:	pop	{r4, lr}
   10edc:	b	10e50 <_start@@Base+0x90>
   10ee0:	andeq	r1, r2, r4, lsl pc
   10ee4:	andeq	r0, r0, r0
   10ee8:	push	{r4, r5, r6, r7, r8, lr}
   10eec:	mov	r5, r0
   10ef0:	mov	r0, r2
   10ef4:	bl	11598 <elemento_cria@@Base>
   10ef8:	ldr	r3, [r5]
   10efc:	cmp	r3, #0
   10f00:	mov	r6, r0
   10f04:	ble	10f90 <_start@@Base+0x1d0>
   10f08:	mov	r4, #0
   10f0c:	b	10f1c <_start@@Base+0x15c>
   10f10:	add	r4, r4, #1
   10f14:	cmp	r4, r3
   10f18:	bge	10f88 <_start@@Base+0x1c8>
   10f1c:	ldr	r3, [r5, #8]
   10f20:	mov	r1, r6
   10f24:	lsl	r7, r4, #2
   10f28:	ldr	r0, [r3, r4, lsl #2]
   10f2c:	bl	115cc <maior_que@@Base>
   10f30:	ldr	r3, [r5]
   10f34:	cmp	r0, #0
   10f38:	bne	10f10 <_start@@Base+0x150>
   10f3c:	cmp	r4, r3
   10f40:	add	r8, r3, #1
   10f44:	ldrgt	r4, [r5, #8]
   10f48:	bgt	10f78 <_start@@Base+0x1b8>
   10f4c:	sub	r2, r8, r4
   10f50:	lsl	r3, r3, #2
   10f54:	lsl	r2, r2, #2
   10f58:	add	r1, r3, #4
   10f5c:	ldr	r4, [r5, #8]
   10f60:	add	r3, r3, #8
   10f64:	sub	r1, r1, r2
   10f68:	sub	r0, r3, r2
   10f6c:	add	r1, r4, r1
   10f70:	add	r0, r4, r0
   10f74:	bl	10a54 <memmove@plt>
   10f78:	str	r6, [r4, r7]
   10f7c:	mov	r0, #1
   10f80:	str	r8, [r5]
   10f84:	pop	{r4, r5, r6, r7, r8, pc}
   10f88:	lsl	r7, r4, #2
   10f8c:	b	10f3c <_start@@Base+0x17c>
   10f90:	mov	r7, #0
   10f94:	mov	r4, r7
   10f98:	b	10f3c <_start@@Base+0x17c>
   10f9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10fa0:	mov	r6, r0
   10fa4:	mov	r9, r1
   10fa8:	mov	r0, r3
   10fac:	mov	r1, r2
   10fb0:	bl	11598 <elemento_cria@@Base>
   10fb4:	ldr	r5, [r6]
   10fb8:	cmp	r5, #0
   10fbc:	movgt	r4, #0
   10fc0:	mov	r8, r0
   10fc4:	bgt	10fdc <_start@@Base+0x21c>
   10fc8:	b	11040 <_start@@Base+0x280>
   10fcc:	ldr	r5, [r6]
   10fd0:	add	r4, r4, #1
   10fd4:	cmp	r4, r5
   10fd8:	bge	1102c <_start@@Base+0x26c>
   10fdc:	ldr	r3, [r6, #8]
   10fe0:	mov	r1, r8
   10fe4:	lsl	r7, r4, #2
   10fe8:	ldr	r0, [r3, r4, lsl #2]
   10fec:	blx	r9
   10ff0:	mov	r2, r7
   10ff4:	cmp	r0, #1
   10ff8:	bne	10fcc <_start@@Base+0x20c>
   10ffc:	cmp	r4, #0
   11000:	ldr	r5, [r6]
   11004:	ble	11038 <_start@@Base+0x278>
   11008:	ldr	r9, [r6, #8]
   1100c:	add	r1, r9, #4
   11010:	add	r0, r9, #8
   11014:	bl	10a54 <memmove@plt>
   11018:	add	r5, r5, #1
   1101c:	str	r8, [r9, r7]
   11020:	mov	r0, r4
   11024:	str	r5, [r6]
   11028:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1102c:	lsl	r2, r4, #2
   11030:	mov	r7, r2
   11034:	b	11008 <_start@@Base+0x248>
   11038:	ldr	r9, [r6, #8]
   1103c:	b	11018 <_start@@Base+0x258>
   11040:	mov	r7, #0
   11044:	mov	r4, r7
   11048:	ldr	r9, [r6, #8]
   1104c:	b	11018 <_start@@Base+0x258>

00011050 <fp_insere@@Base>:
   11050:	push	{r4, r5, r6, r7, r8, lr}
   11054:	subs	r5, r0, #0
   11058:	beq	1111c <fp_insere@@Base+0xcc>
   1105c:	ldm	r5, {r0, r3}
   11060:	cmp	r0, r3
   11064:	beq	11100 <fp_insere@@Base+0xb0>
   11068:	mov	r0, r2
   1106c:	bl	11598 <elemento_cria@@Base>
   11070:	ldr	r3, [r5]
   11074:	cmp	r3, #0
   11078:	mov	r6, r0
   1107c:	ble	11110 <fp_insere@@Base+0xc0>
   11080:	mov	r4, #0
   11084:	b	11094 <fp_insere@@Base+0x44>
   11088:	add	r4, r4, #1
   1108c:	cmp	r4, r3
   11090:	bge	11108 <fp_insere@@Base+0xb8>
   11094:	ldr	r3, [r5, #8]
   11098:	mov	r1, r6
   1109c:	lsl	r7, r4, #2
   110a0:	ldr	r0, [r3, r4, lsl #2]
   110a4:	bl	115cc <maior_que@@Base>
   110a8:	ldr	r3, [r5]
   110ac:	cmp	r0, #0
   110b0:	bne	11088 <fp_insere@@Base+0x38>
   110b4:	cmp	r4, r3
   110b8:	add	r8, r3, #1
   110bc:	ldrgt	r4, [r5, #8]
   110c0:	bgt	110f0 <fp_insere@@Base+0xa0>
   110c4:	sub	r2, r8, r4
   110c8:	lsl	r3, r3, #2
   110cc:	lsl	r2, r2, #2
   110d0:	add	r1, r3, #4
   110d4:	ldr	r4, [r5, #8]
   110d8:	add	r3, r3, #8
   110dc:	sub	r1, r1, r2
   110e0:	sub	r0, r3, r2
   110e4:	add	r1, r4, r1
   110e8:	add	r0, r4, r0
   110ec:	bl	10a54 <memmove@plt>
   110f0:	str	r6, [r4, r7]
   110f4:	mov	r0, #1
   110f8:	str	r8, [r5]
   110fc:	pop	{r4, r5, r6, r7, r8, pc}
   11100:	mov	r0, #0
   11104:	pop	{r4, r5, r6, r7, r8, pc}
   11108:	lsl	r7, r4, #2
   1110c:	b	110b4 <fp_insere@@Base+0x64>
   11110:	mov	r7, #0
   11114:	mov	r4, r7
   11118:	b	110b4 <fp_insere@@Base+0x64>
   1111c:	mvn	r0, #0
   11120:	pop	{r4, r5, r6, r7, r8, pc}

00011124 <fp_remove@@Base>:
   11124:	push	{r4, r5, r6, lr}
   11128:	subs	r5, r0, #0
   1112c:	beq	1116c <fp_remove@@Base+0x48>
   11130:	ldr	r4, [r5]
   11134:	cmp	r4, #0
   11138:	beq	11164 <fp_remove@@Base+0x40>
   1113c:	ldr	r0, [r5, #8]
   11140:	ldr	r6, [r0]
   11144:	ble	11154 <fp_remove@@Base+0x30>
   11148:	lsl	r2, r4, #2
   1114c:	add	r1, r0, #4
   11150:	bl	10a54 <memmove@plt>
   11154:	sub	r0, r4, #1
   11158:	str	r0, [r5]
   1115c:	ldr	r0, [r6, #4]
   11160:	pop	{r4, r5, r6, pc}
   11164:	mov	r0, r4
   11168:	pop	{r4, r5, r6, pc}
   1116c:	mov	r0, r5
   11170:	pop	{r4, r5, r6, pc}

00011174 <fp_carrega@@Base>:
   11174:	mov	r3, r1
   11178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1117c:	mov	r5, r0
   11180:	sub	sp, sp, #268	; 0x10c
   11184:	ldr	r1, [pc, #312]	; 112c4 <fp_carrega@@Base+0x150>
   11188:	mov	r0, r3
   1118c:	bl	10a3c <fopen@plt>
   11190:	subs	r8, r0, #0
   11194:	movne	r9, #256	; 0x100
   11198:	ldrne	sl, [pc, #296]	; 112c8 <fp_carrega@@Base+0x154>
   1119c:	beq	112b8 <fp_carrega@@Base+0x144>
   111a0:	mov	r0, r8
   111a4:	bl	10ab4 <feof@plt>
   111a8:	subs	r4, r0, #0
   111ac:	bne	11298 <fp_carrega@@Base+0x124>
   111b0:	add	r2, sp, #4
   111b4:	mov	r1, sl
   111b8:	mov	r0, r8
   111bc:	bl	10a30 <__isoc99_fscanf@plt>
   111c0:	mov	r2, r8
   111c4:	mov	r1, r9
   111c8:	add	r0, sp, #8
   111cc:	bl	10a6c <fgets@plt>
   111d0:	add	r0, sp, #8
   111d4:	bl	10ac0 <strlen@plt>
   111d8:	add	r3, sp, #264	; 0x108
   111dc:	cmp	r5, #0
   111e0:	add	r0, r3, r0
   111e4:	strb	r4, [r0, #-257]	; 0xfffffeff
   111e8:	beq	111a0 <fp_carrega@@Base+0x2c>
   111ec:	ldm	r5, {r2, r3}
   111f0:	cmp	r2, r3
   111f4:	beq	111a0 <fp_carrega@@Base+0x2c>
   111f8:	add	r1, sp, #8
   111fc:	ldr	r0, [sp, #4]
   11200:	bl	11598 <elemento_cria@@Base>
   11204:	ldr	r1, [r5]
   11208:	cmp	r1, #0
   1120c:	mov	r6, r0
   11210:	bgt	11224 <fp_carrega@@Base+0xb0>
   11214:	b	112b0 <fp_carrega@@Base+0x13c>
   11218:	add	r4, r4, #1
   1121c:	cmp	r4, r1
   11220:	bge	112a8 <fp_carrega@@Base+0x134>
   11224:	ldr	r3, [r5, #8]
   11228:	mov	r1, r6
   1122c:	lsl	r7, r4, #2
   11230:	ldr	r0, [r3, r4, lsl #2]
   11234:	bl	115cc <maior_que@@Base>
   11238:	ldr	r1, [r5]
   1123c:	cmp	r0, #0
   11240:	bne	11218 <fp_carrega@@Base+0xa4>
   11244:	cmp	r4, r1
   11248:	add	fp, r1, #1
   1124c:	ldrgt	r4, [r5, #8]
   11250:	bgt	11280 <fp_carrega@@Base+0x10c>
   11254:	sub	r2, fp, r4
   11258:	lsl	r1, r1, #2
   1125c:	lsl	r2, r2, #2
   11260:	add	ip, r1, #4
   11264:	ldr	r4, [r5, #8]
   11268:	add	r1, r1, #8
   1126c:	sub	r0, r1, r2
   11270:	sub	ip, ip, r2
   11274:	add	r1, r4, ip
   11278:	add	r0, r4, r0
   1127c:	bl	10a54 <memmove@plt>
   11280:	str	r6, [r4, r7]
   11284:	mov	r0, r8
   11288:	str	fp, [r5]
   1128c:	bl	10ab4 <feof@plt>
   11290:	subs	r4, r0, #0
   11294:	beq	111b0 <fp_carrega@@Base+0x3c>
   11298:	mov	r0, r8
   1129c:	bl	10ad8 <fclose@plt>
   112a0:	add	sp, sp, #268	; 0x10c
   112a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112a8:	lsl	r7, r4, #2
   112ac:	b	11244 <fp_carrega@@Base+0xd0>
   112b0:	mov	r7, #0
   112b4:	b	11244 <fp_carrega@@Base+0xd0>
   112b8:	ldr	r0, [pc, #12]	; 112cc <fp_carrega@@Base+0x158>
   112bc:	bl	10a84 <puts@plt>
   112c0:	b	112a0 <fp_carrega@@Base+0x12c>
   112c4:	andeq	r1, r1, r8, lsl r8
   112c8:	andeq	r1, r1, r0, asr #16
   112cc:	andeq	r1, r1, ip, lsl r8

000112d0 <heap_insere@@Base>:
   112d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   112d4:	ldr	ip, [r0, #4]
   112d8:	ldr	lr, [r0]
   112dc:	cmp	lr, ip
   112e0:	moveq	r4, #0
   112e4:	beq	1136c <heap_insere@@Base+0x9c>
   112e8:	mov	r5, r0
   112ec:	mov	r8, r1
   112f0:	mov	r0, r3
   112f4:	mov	r1, r2
   112f8:	bl	11598 <elemento_cria@@Base>
   112fc:	ldr	r6, [r5]
   11300:	cmp	r6, #0
   11304:	movgt	r4, #0
   11308:	mov	r9, r0
   1130c:	bgt	11324 <heap_insere@@Base+0x54>
   11310:	b	11388 <heap_insere@@Base+0xb8>
   11314:	ldr	r6, [r5]
   11318:	add	r4, r4, #1
   1131c:	cmp	r4, r6
   11320:	bge	11374 <heap_insere@@Base+0xa4>
   11324:	ldr	r3, [r5, #8]
   11328:	mov	r1, r9
   1132c:	lsl	r7, r4, #2
   11330:	ldr	r0, [r3, r4, lsl #2]
   11334:	blx	r8
   11338:	mov	r2, r7
   1133c:	cmp	r0, #1
   11340:	bne	11314 <heap_insere@@Base+0x44>
   11344:	cmp	r4, #0
   11348:	ldr	r6, [r5]
   1134c:	ble	11380 <heap_insere@@Base+0xb0>
   11350:	ldr	r8, [r5, #8]
   11354:	add	r1, r8, #4
   11358:	add	r0, r8, #8
   1135c:	bl	10a54 <memmove@plt>
   11360:	add	r6, r6, #1
   11364:	str	r9, [r8, r7]
   11368:	str	r6, [r5]
   1136c:	mov	r0, r4
   11370:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11374:	lsl	r2, r4, #2
   11378:	mov	r7, r2
   1137c:	b	11350 <heap_insere@@Base+0x80>
   11380:	ldr	r8, [r5, #8]
   11384:	b	11360 <heap_insere@@Base+0x90>
   11388:	mov	r7, #0
   1138c:	mov	r4, r7
   11390:	ldr	r8, [r5, #8]
   11394:	b	11360 <heap_insere@@Base+0x90>

00011398 <heap_remove@@Base>:
   11398:	mov	r0, #0
   1139c:	bx	lr

000113a0 <heap_carrega@@Base>:
   113a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113a4:	mov	r5, r0
   113a8:	sub	sp, sp, #276	; 0x114
   113ac:	mov	fp, r1
   113b0:	mov	r0, r2
   113b4:	ldr	r1, [pc, #288]	; 114dc <heap_carrega@@Base+0x13c>
   113b8:	bl	10a3c <fopen@plt>
   113bc:	subs	r6, r0, #0
   113c0:	movne	r7, #256	; 0x100
   113c4:	ldrne	r8, [pc, #276]	; 114e0 <heap_carrega@@Base+0x140>
   113c8:	bne	11410 <heap_carrega@@Base+0x70>
   113cc:	b	114c8 <heap_carrega@@Base+0x128>
   113d0:	add	r2, sp, #12
   113d4:	mov	r1, r8
   113d8:	mov	r0, r6
   113dc:	bl	10a30 <__isoc99_fscanf@plt>
   113e0:	mov	r2, r6
   113e4:	mov	r1, r7
   113e8:	add	r0, sp, #16
   113ec:	bl	10a6c <fgets@plt>
   113f0:	add	r0, sp, #16
   113f4:	bl	10ac0 <strlen@plt>
   113f8:	ldm	r5, {r2, r3}
   113fc:	cmp	r2, r3
   11400:	add	r3, sp, #272	; 0x110
   11404:	add	r0, r3, r0
   11408:	strb	r4, [r0, #-257]	; 0xfffffeff
   1140c:	bne	11430 <heap_carrega@@Base+0x90>
   11410:	mov	r0, r6
   11414:	bl	10ab4 <feof@plt>
   11418:	subs	r4, r0, #0
   1141c:	beq	113d0 <heap_carrega@@Base+0x30>
   11420:	mov	r0, r6
   11424:	bl	10ad8 <fclose@plt>
   11428:	add	sp, sp, #276	; 0x114
   1142c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11430:	add	r1, sp, #16
   11434:	ldr	r0, [sp, #12]
   11438:	bl	11598 <elemento_cria@@Base>
   1143c:	ldr	r3, [r5]
   11440:	cmp	r3, #0
   11444:	movle	r9, #0
   11448:	ldrle	r4, [r5, #8]
   1144c:	mov	sl, r0
   11450:	bgt	11468 <heap_carrega@@Base+0xc8>
   11454:	b	114ac <heap_carrega@@Base+0x10c>
   11458:	ldr	r3, [r5]
   1145c:	add	r4, r4, #1
   11460:	cmp	r4, r3
   11464:	bge	114bc <heap_carrega@@Base+0x11c>
   11468:	ldr	r3, [r5, #8]
   1146c:	mov	r1, sl
   11470:	lsl	r9, r4, #2
   11474:	ldr	r0, [r3, r4, lsl #2]
   11478:	blx	fp
   1147c:	mov	r2, r9
   11480:	cmp	r0, #1
   11484:	bne	11458 <heap_carrega@@Base+0xb8>
   11488:	cmp	r4, #0
   1148c:	ldr	r3, [r5]
   11490:	ble	114d4 <heap_carrega@@Base+0x134>
   11494:	ldr	r4, [r5, #8]
   11498:	str	r3, [sp, #4]
   1149c:	add	r1, r4, #4
   114a0:	add	r0, r4, #8
   114a4:	bl	10a54 <memmove@plt>
   114a8:	ldr	r3, [sp, #4]
   114ac:	add	r3, r3, #1
   114b0:	str	sl, [r4, r9]
   114b4:	str	r3, [r5]
   114b8:	b	11410 <heap_carrega@@Base+0x70>
   114bc:	lsl	r2, r4, #2
   114c0:	mov	r9, r2
   114c4:	b	11494 <heap_carrega@@Base+0xf4>
   114c8:	ldr	r0, [pc, #20]	; 114e4 <heap_carrega@@Base+0x144>
   114cc:	bl	10a84 <puts@plt>
   114d0:	b	11428 <heap_carrega@@Base+0x88>
   114d4:	ldr	r4, [r5, #8]
   114d8:	b	114ac <heap_carrega@@Base+0x10c>
   114dc:	andeq	r1, r1, r8, lsl r8
   114e0:	andeq	r1, r1, r0, asr #16
   114e4:	andeq	r1, r1, ip, lsl r8

000114e8 <vetor_cria@@Base>:
   114e8:	push	{r4, r5, r6, lr}
   114ec:	mov	r5, r0
   114f0:	mov	r0, #12
   114f4:	bl	10a90 <malloc@plt>
   114f8:	subs	r4, r0, #0
   114fc:	beq	11528 <vetor_cria@@Base+0x40>
   11500:	mov	r3, #0
   11504:	str	r5, [r4, #4]
   11508:	mov	r0, r5
   1150c:	str	r3, [r4]
   11510:	mov	r1, #4
   11514:	bl	10a0c <calloc@plt>
   11518:	cmp	r0, #0
   1151c:	mov	r5, r0
   11520:	str	r0, [r4, #8]
   11524:	beq	11530 <vetor_cria@@Base+0x48>
   11528:	mov	r0, r4
   1152c:	pop	{r4, r5, r6, pc}
   11530:	mov	r0, r4
   11534:	bl	10a60 <free@plt>
   11538:	mov	r4, r5
   1153c:	b	11528 <vetor_cria@@Base+0x40>

00011540 <vetor_criaHeap@@Base>:
   11540:	push	{r4, r5, r6, lr}
   11544:	mov	r5, r0
   11548:	mov	r0, #12
   1154c:	bl	10a90 <malloc@plt>
   11550:	subs	r4, r0, #0
   11554:	beq	11580 <vetor_criaHeap@@Base+0x40>
   11558:	mov	r3, #0
   1155c:	str	r5, [r4, #4]
   11560:	add	r0, r5, #1
   11564:	str	r3, [r4]
   11568:	mov	r1, #4
   1156c:	bl	10a0c <calloc@plt>
   11570:	cmp	r0, #0
   11574:	mov	r5, r0
   11578:	str	r0, [r4, #8]
   1157c:	beq	11588 <vetor_criaHeap@@Base+0x48>
   11580:	mov	r0, r4
   11584:	pop	{r4, r5, r6, pc}
   11588:	mov	r0, r4
   1158c:	bl	10a60 <free@plt>
   11590:	mov	r4, r5
   11594:	b	11580 <vetor_criaHeap@@Base+0x40>

00011598 <elemento_cria@@Base>:
   11598:	push	{r4, r5, r6, lr}
   1159c:	mov	r5, r0
   115a0:	mov	r0, #8
   115a4:	mov	r6, r1
   115a8:	bl	10a90 <malloc@plt>
   115ac:	subs	r4, r0, #0
   115b0:	beq	115c4 <elemento_cria@@Base+0x2c>
   115b4:	mov	r0, r6
   115b8:	bl	10a78 <strdup@plt>
   115bc:	str	r5, [r4]
   115c0:	str	r0, [r4, #4]
   115c4:	mov	r0, r4
   115c8:	pop	{r4, r5, r6, pc}

000115cc <maior_que@@Base>:
   115cc:	cmp	r1, #0
   115d0:	cmpne	r0, #0
   115d4:	push	{r4, r5, r6, lr}
   115d8:	beq	11618 <maior_que@@Base+0x4c>
   115dc:	ldr	r3, [pc, #68]	; 11628 <maior_que@@Base+0x5c>
   115e0:	mov	r5, r0
   115e4:	mov	r4, r1
   115e8:	ldr	r0, [r3]
   115ec:	bl	10a48 <fflush@plt>
   115f0:	ldr	r2, [pc, #52]	; 1162c <maior_que@@Base+0x60>
   115f4:	ldr	r0, [r5]
   115f8:	ldr	r1, [r4]
   115fc:	ldr	r3, [r2]
   11600:	cmp	r0, r1
   11604:	add	r3, r3, #1
   11608:	movle	r0, #0
   1160c:	movgt	r0, #1
   11610:	str	r3, [r2]
   11614:	pop	{r4, r5, r6, pc}
   11618:	ldr	r0, [pc, #16]	; 11630 <maior_que@@Base+0x64>
   1161c:	bl	10a84 <puts@plt>
   11620:	mov	r0, #0
   11624:	pop	{r4, r5, r6, pc}
   11628:	andeq	r2, r2, r4, rrx
   1162c:	andeq	r2, r2, ip, rrx
   11630:			; <UNDEFINED> instruction: 0x00011bb8

00011634 <maior_que_HeapSort@@Base>:
   11634:	cmp	r1, #0
   11638:	cmpne	r0, #0
   1163c:	push	{r4, r5, r6, lr}
   11640:	beq	1167c <maior_que_HeapSort@@Base+0x48>
   11644:	ldr	r3, [pc, #64]	; 1168c <maior_que_HeapSort@@Base+0x58>
   11648:	mov	r4, r0
   1164c:	mov	r5, r1
   11650:	ldr	r0, [r3]
   11654:	bl	10a48 <fflush@plt>
   11658:	ldr	r2, [pc, #48]	; 11690 <maior_que_HeapSort@@Base+0x5c>
   1165c:	ldr	r1, [r5, #4]
   11660:	ldr	r0, [r4, #4]
   11664:	ldr	r3, [r2]
   11668:	add	r3, r3, #1
   1166c:	str	r3, [r2]
   11670:	bl	10a18 <strcmp@plt>
   11674:	lsr	r0, r0, #31
   11678:	pop	{r4, r5, r6, pc}
   1167c:	ldr	r0, [pc, #16]	; 11694 <maior_que_HeapSort@@Base+0x60>
   11680:	bl	10a84 <puts@plt>
   11684:	mov	r0, #0
   11688:	pop	{r4, r5, r6, pc}
   1168c:	andeq	r2, r2, r4, rrx
   11690:	andeq	r2, r2, ip, rrx
   11694:			; <UNDEFINED> instruction: 0x00011bb8

00011698 <vetor_imprime@@Base>:
   11698:	ldr	r3, [r0]
   1169c:	cmp	r3, #0
   116a0:	ble	1170c <vetor_imprime@@Base+0x74>
   116a4:	ldr	r3, [r0, #8]
   116a8:	push	{r4, r5, r6, lr}
   116ac:	mov	r5, r0
   116b0:	ldr	r3, [r3]
   116b4:	ldr	r0, [pc, #88]	; 11714 <vetor_imprime@@Base+0x7c>
   116b8:	ldr	r2, [r3]
   116bc:	ldr	r1, [r3, #4]
   116c0:	bl	10a24 <printf@plt>
   116c4:	ldr	r3, [r5]
   116c8:	cmp	r3, #1
   116cc:	movgt	r4, #1
   116d0:	ldrgt	r6, [pc, #64]	; 11718 <vetor_imprime@@Base+0x80>
   116d4:	ble	11700 <vetor_imprime@@Base+0x68>
   116d8:	ldr	r3, [r5, #8]
   116dc:	mov	r0, r6
   116e0:	ldr	r3, [r3, r4, lsl #2]
   116e4:	add	r4, r4, #1
   116e8:	ldr	r2, [r3]
   116ec:	ldr	r1, [r3, #4]
   116f0:	bl	10a24 <printf@plt>
   116f4:	ldr	r3, [r5]
   116f8:	cmp	r3, r4
   116fc:	bgt	116d8 <vetor_imprime@@Base+0x40>
   11700:	mov	r0, #10
   11704:	pop	{r4, r5, r6, lr}
   11708:	b	10acc <putchar@plt>
   1170c:	ldr	r0, [pc, #8]	; 1171c <vetor_imprime@@Base+0x84>
   11710:	b	10a84 <puts@plt>
   11714:	andeq	r1, r1, r4, asr #23
   11718:	strdeq	r1, [r1], -ip
   1171c:	andeq	r1, r1, r4, ror #23

00011720 <vetor_imprimeHeap@@Base>:
   11720:	ldr	r3, [r0]
   11724:	cmp	r3, #0
   11728:	ble	11794 <vetor_imprimeHeap@@Base+0x74>
   1172c:	ldr	r3, [r0, #8]
   11730:	push	{r4, r5, r6, lr}
   11734:	mov	r5, r0
   11738:	ldr	r3, [r3, #4]
   1173c:	ldr	r0, [pc, #88]	; 1179c <vetor_imprimeHeap@@Base+0x7c>
   11740:	ldr	r2, [r3]
   11744:	ldr	r1, [r3, #4]
   11748:	bl	10a24 <printf@plt>
   1174c:	ldr	r3, [r5]
   11750:	cmp	r3, #2
   11754:	movgt	r4, #2
   11758:	ldrgt	r6, [pc, #64]	; 117a0 <vetor_imprimeHeap@@Base+0x80>
   1175c:	ble	11788 <vetor_imprimeHeap@@Base+0x68>
   11760:	ldr	r3, [r5, #8]
   11764:	mov	r0, r6
   11768:	ldr	r3, [r3, r4, lsl #2]
   1176c:	add	r4, r4, #1
   11770:	ldr	r2, [r3]
   11774:	ldr	r1, [r3, #4]
   11778:	bl	10a24 <printf@plt>
   1177c:	ldr	r3, [r5]
   11780:	cmp	r3, r4
   11784:	bgt	11760 <vetor_imprimeHeap@@Base+0x40>
   11788:	mov	r0, #10
   1178c:	pop	{r4, r5, r6, lr}
   11790:	b	10acc <putchar@plt>
   11794:	ldr	r0, [pc, #8]	; 117a4 <vetor_imprimeHeap@@Base+0x84>
   11798:	b	10a84 <puts@plt>
   1179c:	andeq	r1, r1, r4, asr #23
   117a0:	strdeq	r1, [r1], -ip
   117a4:	andeq	r1, r1, r4, ror #23

000117a8 <__libc_csu_init@@Base>:
   117a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117ac:	mov	r7, r0
   117b0:	ldr	r6, [pc, #72]	; 11800 <__libc_csu_init@@Base+0x58>
   117b4:	ldr	r5, [pc, #72]	; 11804 <__libc_csu_init@@Base+0x5c>
   117b8:	add	r6, pc, r6
   117bc:	add	r5, pc, r5
   117c0:	sub	r6, r6, r5
   117c4:	mov	r8, r1
   117c8:	mov	r9, r2
   117cc:	bl	109ec <calloc@plt-0x20>
   117d0:	asrs	r6, r6, #2
   117d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   117d8:	mov	r4, #0
   117dc:	add	r4, r4, #1
   117e0:	ldr	r3, [r5], #4
   117e4:	mov	r2, r9
   117e8:	mov	r1, r8
   117ec:	mov	r0, r7
   117f0:	blx	r3
   117f4:	cmp	r6, r4
   117f8:	bne	117dc <__libc_csu_init@@Base+0x34>
   117fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11800:	andeq	r0, r1, r0, asr r7
   11804:	andeq	r0, r1, r8, asr #14

00011808 <__libc_csu_fini@@Base>:
   11808:	bx	lr

Disassembly of section .fini:

0001180c <.fini>:
   1180c:	push	{r3, lr}
   11810:	pop	{r3, pc}
