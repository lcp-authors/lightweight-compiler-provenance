
../repos/charybdis/wsockd/.libs/wsockd:     file format elf32-littlearm


Disassembly of section .init:

00010c34 <.init>:
   10c34:	push	{r3, lr}
   10c38:	bl	111e4 <fputs@plt+0x320>
   10c3c:	pop	{r3, pc}

Disassembly of section .plt:

00010c40 <open@plt-0x14>:
   10c40:	push	{lr}		; (str lr, [sp, #-4]!)
   10c44:	ldr	lr, [pc, #4]	; 10c50 <open@plt-0x4>
   10c48:	add	lr, pc, lr
   10c4c:	ldr	pc, [lr, #8]!
   10c50:			; <UNDEFINED> instruction: 0x000133b0

00010c54 <open@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #77824	; 0x13000
   10c5c:	ldr	pc, [ip, #944]!	; 0x3b0

00010c60 <sigemptyset@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #77824	; 0x13000
   10c68:	ldr	pc, [ip, #936]!	; 0x3a8

00010c6c <strerror@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #77824	; 0x13000
   10c74:	ldr	pc, [ip, #928]!	; 0x3a0

00010c78 <rb_get_type@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #77824	; 0x13000
   10c80:	ldr	pc, [ip, #920]!	; 0x398

00010c84 <abort@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #77824	; 0x13000
   10c8c:	ldr	pc, [ip, #912]!	; 0x390

00010c90 <rb_event_addish@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #77824	; 0x13000
   10c98:	ldr	pc, [ip, #904]!	; 0x388

00010c9c <rb_ignore_errno@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #77824	; 0x13000
   10ca4:	ldr	pc, [ip, #896]!	; 0x380

00010ca8 <__libc_start_main@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #77824	; 0x13000
   10cb0:	ldr	pc, [ip, #888]!	; 0x378

00010cb4 <rb_setselect@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #77824	; 0x13000
   10cbc:	ldr	pc, [ip, #880]!	; 0x370

00010cc0 <__gmon_start__@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #77824	; 0x13000
   10cc8:	ldr	pc, [ip, #872]!	; 0x368

00010ccc <rb_send_fd_buf@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #77824	; 0x13000
   10cd4:	ldr	pc, [ip, #864]!	; 0x360

00010cd8 <vsnprintf@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #77824	; 0x13000
   10ce0:	ldr	pc, [ip, #856]!	; 0x358

00010ce4 <getenv@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #77824	; 0x13000
   10cec:	ldr	pc, [ip, #848]!	; 0x350

00010cf0 <calloc@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #77824	; 0x13000
   10cf8:	ldr	pc, [ip, #840]!	; 0x348

00010cfc <rb_set_nb@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #77824	; 0x13000
   10d04:	ldr	pc, [ip, #832]!	; 0x340

00010d08 <memset@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #77824	; 0x13000
   10d10:	ldr	pc, [ip, #824]!	; 0x338

00010d14 <__assert_fail@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #77824	; 0x13000
   10d1c:	ldr	pc, [ip, #816]!	; 0x330

00010d20 <rb_linebuf_parse@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #77824	; 0x13000
   10d28:	ldr	pc, [ip, #808]!	; 0x328

00010d2c <rb_strlcpy@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #77824	; 0x13000
   10d34:	ldr	pc, [ip, #800]!	; 0x320

00010d38 <rb_init_rawbuffers@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #77824	; 0x13000
   10d40:	ldr	pc, [ip, #792]!	; 0x318

00010d44 <free@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #77824	; 0x13000
   10d4c:	ldr	pc, [ip, #784]!	; 0x310

00010d50 <rb_lib_loop@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #77824	; 0x13000
   10d58:	ldr	pc, [ip, #776]!	; 0x308

00010d5c <rb_read@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #77824	; 0x13000
   10d64:	ldr	pc, [ip, #768]!	; 0x300

00010d68 <rb_set_type@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #77824	; 0x13000
   10d70:	ldr	pc, [ip, #760]!	; 0x2f8

00010d74 <rb_linebuf_get@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #77824	; 0x13000
   10d7c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d80 <rb_linebuf_flush@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #77824	; 0x13000
   10d88:	ldr	pc, [ip, #744]!	; 0x2e8

00010d8c <strlen@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #77824	; 0x13000
   10d94:	ldr	pc, [ip, #736]!	; 0x2e0

00010d98 <memcpy@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #77824	; 0x13000
   10da0:	ldr	pc, [ip, #728]!	; 0x2d8

00010da4 <rb_linebuf_donebuf@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #77824	; 0x13000
   10dac:	ldr	pc, [ip, #720]!	; 0x2d0

00010db0 <rb_strcasestr@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #77824	; 0x13000
   10db8:	ldr	pc, [ip, #712]!	; 0x2c8

00010dbc <rb_close@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #77824	; 0x13000
   10dc4:	ldr	pc, [ip, #704]!	; 0x2c0

00010dc8 <sigaddset@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #77824	; 0x13000
   10dd0:	ldr	pc, [ip, #696]!	; 0x2b8

00010dd4 <atoi@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #77824	; 0x13000
   10ddc:	ldr	pc, [ip, #688]!	; 0x2b0

00010de0 <rb_rawbuf_length@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #77824	; 0x13000
   10de8:	ldr	pc, [ip, #680]!	; 0x2a8

00010dec <rb_free_rawbuffer@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #77824	; 0x13000
   10df4:	ldr	pc, [ip, #672]!	; 0x2a0

00010df8 <close@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #77824	; 0x13000
   10e00:	ldr	pc, [ip, #664]!	; 0x298

00010e04 <rb_outofmemory@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #77824	; 0x13000
   10e0c:	ldr	pc, [ip, #656]!	; 0x290

00010e10 <rb_rawbuf_get@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #77824	; 0x13000
   10e18:	ldr	pc, [ip, #648]!	; 0x288

00010e1c <sigaction@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #77824	; 0x13000
   10e24:	ldr	pc, [ip, #640]!	; 0x280

00010e28 <rb_lib_init@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #77824	; 0x13000
   10e30:	ldr	pc, [ip, #632]!	; 0x278

00010e34 <rb_new_rawbuffer@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #77824	; 0x13000
   10e3c:	ldr	pc, [ip, #624]!	; 0x270

00010e40 <rb_open@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #77824	; 0x13000
   10e48:	ldr	pc, [ip, #616]!	; 0x268

00010e4c <rb_recv_fd_buf@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #77824	; 0x13000
   10e54:	ldr	pc, [ip, #608]!	; 0x260

00010e58 <dup2@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #77824	; 0x13000
   10e60:	ldr	pc, [ip, #600]!	; 0x258

00010e64 <rb_linebuf_newbuf@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #77824	; 0x13000
   10e6c:	ldr	pc, [ip, #592]!	; 0x250

00010e70 <rb_linebuf_init@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #77824	; 0x13000
   10e78:	ldr	pc, [ip, #584]!	; 0x248

00010e7c <getrlimit@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #77824	; 0x13000
   10e84:	ldr	pc, [ip, #576]!	; 0x240

00010e88 <rb_rawbuf_append@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #77824	; 0x13000
   10e90:	ldr	pc, [ip, #568]!	; 0x238

00010e94 <rb_rawbuf_flush@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #77824	; 0x13000
   10e9c:	ldr	pc, [ip, #560]!	; 0x230

00010ea0 <exit@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #77824	; 0x13000
   10ea8:	ldr	pc, [ip, #552]!	; 0x228

00010eac <__errno_location@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #77824	; 0x13000
   10eb4:	ldr	pc, [ip, #544]!	; 0x220

00010eb8 <rb_base64_encode@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #77824	; 0x13000
   10ec0:	ldr	pc, [ip, #536]!	; 0x218

00010ec4 <fputs@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #77824	; 0x13000
   10ecc:	ldr	pc, [ip, #528]!	; 0x210

Disassembly of section .text:

00010ed0 <.text>:
   10ed0:	push	{r4, r5, r6, r7, r8, r9, lr}
   10ed4:	sub	sp, sp, #164	; 0xa4
   10ed8:	mov	r0, #7
   10edc:	add	r1, sp, #20
   10ee0:	bl	10e7c <getrlimit@plt>
   10ee4:	cmp	r0, #0
   10ee8:	ldr	r0, [pc, #644]	; 11174 <fputs@plt+0x2b0>
   10eec:	movwne	r7, #65535	; 0xffff
   10ef0:	ldreq	r7, [sp, #20]
   10ef4:	bl	10ce4 <getenv@plt>
   10ef8:	mov	r8, r0
   10efc:	ldr	r0, [pc, #628]	; 11178 <fputs@plt+0x2b4>
   10f00:	bl	10ce4 <getenv@plt>
   10f04:	mov	r6, r0
   10f08:	ldr	r0, [pc, #620]	; 1117c <fputs@plt+0x2b8>
   10f0c:	bl	10ce4 <getenv@plt>
   10f10:	clz	r4, r6
   10f14:	cmp	r8, #0
   10f18:	lsr	r4, r4, #5
   10f1c:	moveq	r4, #1
   10f20:	cmp	r0, #0
   10f24:	moveq	r4, #1
   10f28:	mov	r5, r0
   10f2c:	cmp	r4, #0
   10f30:	beq	10f58 <fputs@plt+0x94>
   10f34:	ldr	r4, [pc, #580]	; 11180 <fputs@plt+0x2bc>
   10f38:	ldr	r0, [pc, #580]	; 11184 <fputs@plt+0x2c0>
   10f3c:	ldr	r1, [r4]
   10f40:	bl	10ec4 <fputs@plt>
   10f44:	ldr	r0, [pc, #572]	; 11188 <fputs@plt+0x2c4>
   10f48:	ldr	r1, [r4]
   10f4c:	bl	10ec4 <fputs@plt>
   10f50:	mov	r0, #1
   10f54:	bl	10ea0 <exit@plt>
   10f58:	mov	r0, r8
   10f5c:	bl	10dd4 <atoi@plt>
   10f60:	mov	r8, r0
   10f64:	mov	r0, r6
   10f68:	bl	10dd4 <atoi@plt>
   10f6c:	mov	r6, r0
   10f70:	mov	r0, r5
   10f74:	ldr	r5, [pc, #528]	; 1118c <fputs@plt+0x2c8>
   10f78:	bl	10dd4 <atoi@plt>
   10f7c:	str	r0, [r5, #12]
   10f80:	cmp	r4, r7
   10f84:	blt	11140 <fputs@plt+0x27c>
   10f88:	mov	r1, #2
   10f8c:	ldr	r0, [pc, #508]	; 11190 <fputs@plt+0x2cc>
   10f90:	bl	10c54 <open@plt>
   10f94:	subs	r4, r0, #0
   10f98:	blt	10ff0 <fputs@plt+0x12c>
   10f9c:	cmp	r8, #0
   10fa0:	cmpne	r6, #0
   10fa4:	beq	10fb0 <fputs@plt+0xec>
   10fa8:	mov	r1, #0
   10fac:	bl	10e58 <dup2@plt>
   10fb0:	cmp	r8, #1
   10fb4:	cmpne	r6, #1
   10fb8:	beq	10fc8 <fputs@plt+0x104>
   10fbc:	mov	r1, #1
   10fc0:	mov	r0, r4
   10fc4:	bl	10e58 <dup2@plt>
   10fc8:	cmp	r8, #2
   10fcc:	cmpne	r6, #2
   10fd0:	beq	10fe0 <fputs@plt+0x11c>
   10fd4:	mov	r1, #2
   10fd8:	mov	r0, r4
   10fdc:	bl	10e58 <dup2@plt>
   10fe0:	cmp	r4, #2
   10fe4:	ble	10ff0 <fputs@plt+0x12c>
   10fe8:	mov	r0, r4
   10fec:	bl	10df8 <close@plt>
   10ff0:	mov	r4, #0
   10ff4:	mov	r3, #1
   10ff8:	add	r0, sp, #24
   10ffc:	mov	r9, #4096	; 0x1000
   11000:	str	r3, [sp, #20]
   11004:	str	r4, [sp, #152]	; 0x98
   11008:	bl	10c60 <sigemptyset@plt>
   1100c:	mov	r1, #13
   11010:	add	r0, sp, #24
   11014:	bl	10dc8 <sigaddset@plt>
   11018:	mov	r1, #14
   1101c:	add	r0, sp, #24
   11020:	bl	10dc8 <sigaddset@plt>
   11024:	mov	r1, #5
   11028:	add	r0, sp, #24
   1102c:	bl	10dc8 <sigaddset@plt>
   11030:	mov	r1, #28
   11034:	add	r0, sp, #24
   11038:	bl	10dc8 <sigaddset@plt>
   1103c:	mov	r2, r4
   11040:	add	r1, sp, #20
   11044:	mov	r0, #28
   11048:	bl	10e1c <sigaction@plt>
   1104c:	mov	r2, r4
   11050:	add	r1, sp, #20
   11054:	mov	r0, #13
   11058:	bl	10e1c <sigaction@plt>
   1105c:	mov	r2, r4
   11060:	add	r1, sp, #20
   11064:	mov	r0, #5
   11068:	bl	10e1c <sigaction@plt>
   1106c:	ldr	r3, [pc, #288]	; 11194 <fputs@plt+0x2d0>
   11070:	mov	r2, r4
   11074:	add	r1, sp, #20
   11078:	mov	r0, #14
   1107c:	str	r3, [sp, #20]
   11080:	bl	10e1c <sigaction@plt>
   11084:	mov	r3, #1024	; 0x400
   11088:	mov	r2, r4
   1108c:	str	r7, [sp]
   11090:	mov	r1, r4
   11094:	mov	r0, r4
   11098:	stmib	sp, {r3, r9}
   1109c:	mov	r3, r4
   110a0:	bl	10e28 <rb_lib_init@plt>
   110a4:	mov	r0, r9
   110a8:	bl	10e70 <rb_linebuf_init@plt>
   110ac:	mov	r0, r9
   110b0:	bl	10d38 <rb_init_rawbuffers@plt>
   110b4:	mov	r0, #48	; 0x30
   110b8:	bl	11314 <fputs@plt+0x450>
   110bc:	mov	r7, r0
   110c0:	ldr	r2, [pc, #208]	; 11198 <fputs@plt+0x2d4>
   110c4:	mov	r1, #4
   110c8:	mov	r0, r8
   110cc:	str	r7, [r5, #16]
   110d0:	bl	10e40 <rb_open@plt>
   110d4:	ldr	r2, [pc, #192]	; 1119c <fputs@plt+0x2d8>
   110d8:	mov	r1, #8
   110dc:	str	r0, [r7, #16]
   110e0:	mov	r0, r6
   110e4:	ldr	r7, [r5, #16]
   110e8:	bl	10e40 <rb_open@plt>
   110ec:	ldr	r3, [r5, #16]
   110f0:	str	r0, [r7, #20]
   110f4:	ldr	r0, [r3, #16]
   110f8:	bl	10cfc <rb_set_nb@plt>
   110fc:	ldr	r3, [r5, #16]
   11100:	ldr	r0, [r3, #20]
   11104:	bl	10cfc <rb_set_nb@plt>
   11108:	mov	r2, r4
   1110c:	mov	r3, #10
   11110:	ldr	r1, [pc, #136]	; 111a0 <fputs@plt+0x2dc>
   11114:	ldr	r0, [pc, #136]	; 111a4 <fputs@plt+0x2e0>
   11118:	bl	10c90 <rb_event_addish@plt>
   1111c:	ldr	r3, [r5, #16]
   11120:	mov	r1, r4
   11124:	ldr	r0, [r3, #20]
   11128:	bl	11344 <fputs@plt+0x480>
   1112c:	ldr	r1, [r5, #16]
   11130:	ldr	r0, [r1, #16]
   11134:	bl	12044 <fputs@plt+0x1180>
   11138:	mov	r0, r4
   1113c:	bl	10d50 <rb_lib_loop@plt>
   11140:	cmp	r4, r8
   11144:	cmpne	r4, r6
   11148:	movne	r3, #1
   1114c:	moveq	r3, #0
   11150:	cmp	r4, #2
   11154:	movle	r3, #0
   11158:	andgt	r3, r3, #1
   1115c:	cmp	r3, #0
   11160:	beq	1116c <fputs@plt+0x2a8>
   11164:	mov	r0, r4
   11168:	bl	10df8 <close@plt>
   1116c:	add	r4, r4, #1
   11170:	b	10f80 <fputs@plt+0xbc>
   11174:	andeq	r3, r1, r9, ror #20
   11178:	andeq	r3, r1, r0, ror sl
   1117c:	andeq	r3, r1, r9, ror sl
   11180:	strdeq	r4, [r2], -r0
   11184:	andeq	r3, r1, r2, lsl #21
   11188:			; <UNDEFINED> instruction: 0x00013ab7
   1118c:	strdeq	r4, [r2], -r8
   11190:	andeq	r3, r1, r9, ror #21
   11194:	muleq	r1, r8, r2
   11198:	strdeq	r3, [r1], -r3	; <UNPREDICTABLE>
   1119c:	andeq	r3, r1, r7, lsl #22
   111a0:	andeq	r1, r1, r8, lsr #5
   111a4:	andeq	r3, r1, r1, lsl fp
   111a8:	mov	fp, #0
   111ac:	mov	lr, #0
   111b0:	pop	{r1}		; (ldr r1, [sp], #4)
   111b4:	mov	r2, sp
   111b8:	push	{r2}		; (str r2, [sp, #-4]!)
   111bc:	push	{r0}		; (str r0, [sp, #-4]!)
   111c0:	ldr	ip, [pc, #16]	; 111d8 <fputs@plt+0x314>
   111c4:	push	{ip}		; (str ip, [sp, #-4]!)
   111c8:	ldr	r0, [pc, #12]	; 111dc <fputs@plt+0x318>
   111cc:	ldr	r3, [pc, #12]	; 111e0 <fputs@plt+0x31c>
   111d0:	bl	10ca8 <__libc_start_main@plt>
   111d4:	bl	10c84 <abort@plt>
   111d8:	andeq	r3, r1, r8, ror #16
   111dc:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   111e0:	andeq	r3, r1, r8, lsl #16
   111e4:	ldr	r3, [pc, #20]	; 11200 <fputs@plt+0x33c>
   111e8:	ldr	r2, [pc, #20]	; 11204 <fputs@plt+0x340>
   111ec:	add	r3, pc, r3
   111f0:	ldr	r2, [r3, r2]
   111f4:	cmp	r2, #0
   111f8:	bxeq	lr
   111fc:	b	10cc0 <__gmon_start__@plt>
   11200:	andeq	r2, r1, ip, lsl #28
   11204:	andeq	r0, r0, r0, ror #1
   11208:	ldr	r0, [pc, #24]	; 11228 <fputs@plt+0x364>
   1120c:	ldr	r3, [pc, #24]	; 1122c <fputs@plt+0x368>
   11210:	cmp	r3, r0
   11214:	bxeq	lr
   11218:	ldr	r3, [pc, #16]	; 11230 <fputs@plt+0x36c>
   1121c:	cmp	r3, #0
   11220:	bxeq	lr
   11224:	bx	r3
   11228:	andeq	r4, r2, ip, ror #1
   1122c:	andeq	r4, r2, ip, ror #1
   11230:	andeq	r0, r0, r0
   11234:	ldr	r0, [pc, #36]	; 11260 <fputs@plt+0x39c>
   11238:	ldr	r1, [pc, #36]	; 11264 <fputs@plt+0x3a0>
   1123c:	sub	r1, r1, r0
   11240:	asr	r1, r1, #2
   11244:	add	r1, r1, r1, lsr #31
   11248:	asrs	r1, r1, #1
   1124c:	bxeq	lr
   11250:	ldr	r3, [pc, #16]	; 11268 <fputs@plt+0x3a4>
   11254:	cmp	r3, #0
   11258:	bxeq	lr
   1125c:	bx	r3
   11260:	andeq	r4, r2, ip, ror #1
   11264:	andeq	r4, r2, ip, ror #1
   11268:	andeq	r0, r0, r0
   1126c:	push	{r4, lr}
   11270:	ldr	r4, [pc, #24]	; 11290 <fputs@plt+0x3cc>
   11274:	ldrb	r3, [r4]
   11278:	cmp	r3, #0
   1127c:	popne	{r4, pc}
   11280:	bl	11208 <fputs@plt+0x344>
   11284:	mov	r3, #1
   11288:	strb	r3, [r4]
   1128c:	pop	{r4, pc}
   11290:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   11294:	b	11234 <fputs@plt+0x370>
   11298:	bx	lr
   1129c:	cmp	r0, #0
   112a0:	bxeq	lr
   112a4:	b	10d44 <free@plt>
   112a8:	push	{r4, r5, r6, lr}
   112ac:	ldr	r4, [pc, #92]	; 11310 <fputs@plt+0x44c>
   112b0:	ldr	r3, [r4]
   112b4:	cmp	r3, #0
   112b8:	ldrne	r6, [r3, #8]
   112bc:	bne	112d0 <fputs@plt+0x40c>
   112c0:	mov	r3, #0
   112c4:	str	r3, [r4]
   112c8:	str	r3, [r4, #4]
   112cc:	pop	{r4, r5, r6, pc}
   112d0:	ldr	r5, [r3]
   112d4:	add	r0, r5, #52	; 0x34
   112d8:	bl	10da4 <rb_linebuf_donebuf@plt>
   112dc:	add	r0, r5, #24
   112e0:	bl	10da4 <rb_linebuf_donebuf@plt>
   112e4:	ldr	r0, [r5, #20]
   112e8:	bl	10dec <rb_free_rawbuffer@plt>
   112ec:	ldr	r0, [r5, #16]
   112f0:	bl	10dec <rb_free_rawbuffer@plt>
   112f4:	mov	r0, r5
   112f8:	bl	1129c <fputs@plt+0x3d8>
   112fc:	cmp	r6, #0
   11300:	beq	112c0 <fputs@plt+0x3fc>
   11304:	mov	r3, r6
   11308:	ldr	r6, [r6, #8]
   1130c:	b	112d0 <fputs@plt+0x40c>
   11310:	strdeq	r4, [r2], -r8
   11314:	push	{r4, lr}
   11318:	mov	r1, r0
   1131c:	mov	r0, #1
   11320:	bl	10cf0 <calloc@plt>
   11324:	cmp	r0, #0
   11328:	popne	{r4, pc}
   1132c:	bl	10e04 <rb_outofmemory@plt>
   11330:	ldrb	r3, [r0, #128]	; 0x80
   11334:	tst	r3, #2
   11338:	bxne	lr
   1133c:	ldr	r0, [r0, #16]
   11340:	b	10e88 <rb_rawbuf_append@plt>
   11344:	push	{r4, lr}
   11348:	mov	r4, r0
   1134c:	sub	sp, sp, #16384	; 0x4000
   11350:	mov	r2, #16384	; 0x4000
   11354:	mov	r1, sp
   11358:	mov	r0, r4
   1135c:	bl	10d5c <rb_read@plt>
   11360:	cmp	r0, #0
   11364:	bgt	11350 <fputs@plt+0x48c>
   11368:	bne	11374 <fputs@plt+0x4b0>
   1136c:	mov	r0, #0
   11370:	bl	10ea0 <exit@plt>
   11374:	bl	10eac <__errno_location@plt>
   11378:	ldr	r0, [r0]
   1137c:	bl	10c9c <rb_ignore_errno@plt>
   11380:	cmp	r0, #0
   11384:	beq	1136c <fputs@plt+0x4a8>
   11388:	ldr	r2, [pc, #20]	; 113a4 <fputs@plt+0x4e0>
   1138c:	mov	r3, #0
   11390:	mov	r1, #1
   11394:	mov	r0, r4
   11398:	bl	10cb4 <rb_setselect@plt>
   1139c:	add	sp, sp, #16384	; 0x4000
   113a0:	pop	{r4, pc}
   113a4:	andeq	r1, r1, r4, asr #6
   113a8:	cmp	r2, #0
   113ac:	push	{r4, lr}
   113b0:	bne	113c8 <fputs@plt+0x504>
   113b4:	ldr	r3, [pc, #100]	; 11420 <fputs@plt+0x55c>
   113b8:	mov	r2, #212	; 0xd4
   113bc:	ldr	r1, [pc, #96]	; 11424 <fputs@plt+0x560>
   113c0:	ldr	r0, [pc, #96]	; 11428 <fputs@plt+0x564>
   113c4:	bl	10d14 <__assert_fail@plt>
   113c8:	cmp	r0, #0
   113cc:	bne	113e4 <fputs@plt+0x520>
   113d0:	ldr	r3, [pc, #72]	; 11420 <fputs@plt+0x55c>
   113d4:	mov	r2, #213	; 0xd5
   113d8:	ldr	r1, [pc, #68]	; 11424 <fputs@plt+0x560>
   113dc:	ldr	r0, [pc, #72]	; 1142c <fputs@plt+0x568>
   113e0:	b	113c4 <fputs@plt+0x500>
   113e4:	mov	r3, #0
   113e8:	str	r0, [r1]
   113ec:	str	r3, [r1, #8]
   113f0:	ldr	r3, [r2, #4]
   113f4:	cmp	r3, #0
   113f8:	str	r3, [r1, #4]
   113fc:	strne	r1, [r3, #8]
   11400:	bne	11410 <fputs@plt+0x54c>
   11404:	ldr	r3, [r2]
   11408:	cmp	r3, #0
   1140c:	streq	r1, [r2]
   11410:	ldr	r3, [r2, #8]
   11414:	add	r3, r3, #1
   11418:	stmib	r2, {r1, r3}
   1141c:	pop	{r4, pc}
   11420:	andeq	r3, r1, r8, ror r8
   11424:	andeq	r3, r1, r3, lsr #17
   11428:			; <UNDEFINED> instruction: 0x000138bf
   1142c:	andeq	r3, r1, ip, asr #17
   11430:	cmp	r0, #0
   11434:	bne	11450 <fputs@plt+0x58c>
   11438:	push	{r4, lr}
   1143c:	mov	r2, #143	; 0x8f
   11440:	ldr	r3, [pc, #68]	; 1148c <fputs@plt+0x5c8>
   11444:	ldr	r1, [pc, #68]	; 11490 <fputs@plt+0x5cc>
   11448:	ldr	r0, [pc, #68]	; 11494 <fputs@plt+0x5d0>
   1144c:	bl	10d14 <__assert_fail@plt>
   11450:	mov	r3, #0
   11454:	stm	r1, {r0, r3}
   11458:	ldr	r3, [r2]
   1145c:	cmp	r3, #0
   11460:	str	r3, [r1, #8]
   11464:	strne	r1, [r3, #4]
   11468:	bne	11478 <fputs@plt+0x5b4>
   1146c:	ldr	r3, [r2, #4]
   11470:	cmp	r3, #0
   11474:	streq	r1, [r2, #4]
   11478:	ldr	r3, [r2, #8]
   1147c:	str	r1, [r2]
   11480:	add	r3, r3, #1
   11484:	str	r3, [r2, #8]
   11488:	bx	lr
   1148c:	andeq	r3, r1, r8, lsl #17
   11490:	andeq	r3, r1, r3, lsr #17
   11494:	andeq	r3, r1, ip, asr #17
   11498:	cmp	r0, #0
   1149c:	bne	114b8 <fputs@plt+0x5f4>
   114a0:	push	{r4, lr}
   114a4:	mov	r2, #235	; 0xeb
   114a8:	ldr	r3, [pc, #68]	; 114f4 <fputs@plt+0x630>
   114ac:	ldr	r1, [pc, #68]	; 114f8 <fputs@plt+0x634>
   114b0:	ldr	r0, [pc, #68]	; 114fc <fputs@plt+0x638>
   114b4:	bl	10d14 <__assert_fail@plt>
   114b8:	ldrd	r2, [r0, #4]
   114bc:	cmp	r3, #0
   114c0:	strne	r2, [r3, #4]
   114c4:	streq	r2, [r1, #4]
   114c8:	ldr	r2, [r0, #4]
   114cc:	cmp	r2, #0
   114d0:	strne	r3, [r2, #8]
   114d4:	streq	r3, [r1]
   114d8:	mov	r3, #0
   114dc:	str	r3, [r0, #4]
   114e0:	str	r3, [r0, #8]
   114e4:	ldr	r3, [r1, #8]
   114e8:	sub	r3, r3, #1
   114ec:	str	r3, [r1, #8]
   114f0:	bx	lr
   114f4:	muleq	r1, r4, r8
   114f8:	andeq	r3, r1, r3, lsr #17
   114fc:	ldrdeq	r3, [r1], -r9
   11500:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   11504:	mov	r5, r1
   11508:	ldr	r6, [r1, #36]	; 0x24
   1150c:	cmp	r6, #0
   11510:	bne	1153c <fputs@plt+0x678>
   11514:	ldr	r3, [r5, #44]	; 0x2c
   11518:	cmp	r3, #0
   1151c:	beq	115f0 <fputs@plt+0x72c>
   11520:	ldr	r2, [pc, #208]	; 115f8 <fputs@plt+0x734>
   11524:	mov	r3, r5
   11528:	mov	r1, #2
   1152c:	ldr	r0, [r5, #16]
   11530:	add	sp, sp, #8
   11534:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11538:	b	10cb4 <rb_setselect@plt>
   1153c:	ldr	r9, [pc, #184]	; 115fc <fputs@plt+0x738>
   11540:	add	sl, r1, #36	; 0x24
   11544:	ldr	r8, [r6, #8]
   11548:	ldr	r4, [r6]
   1154c:	ldr	r3, [r9, #12]
   11550:	ldr	r0, [r5, #16]
   11554:	add	r7, r4, #20
   11558:	mov	r1, r7
   1155c:	str	r3, [sp, #4]
   11560:	ldr	r3, [r4, #16]
   11564:	str	r3, [sp]
   11568:	ldr	r3, [r4, #12]
   1156c:	ldr	r2, [r4, #36]	; 0x24
   11570:	bl	10ccc <rb_send_fd_buf@plt>
   11574:	cmp	r0, #0
   11578:	ble	115cc <fputs@plt+0x708>
   1157c:	mov	r0, r6
   11580:	mov	r1, sl
   11584:	mov	r6, #0
   11588:	bl	11498 <fputs@plt+0x5d4>
   1158c:	ldr	r3, [r4, #36]	; 0x24
   11590:	cmp	r3, r6
   11594:	bgt	115bc <fputs@plt+0x6f8>
   11598:	ldr	r0, [r4, #12]
   1159c:	bl	1129c <fputs@plt+0x3d8>
   115a0:	mov	r0, r4
   115a4:	bl	1129c <fputs@plt+0x3d8>
   115a8:	cmp	r8, #0
   115ac:	beq	11514 <fputs@plt+0x650>
   115b0:	mov	r6, r8
   115b4:	ldr	r8, [r8, #8]
   115b8:	b	11548 <fputs@plt+0x684>
   115bc:	ldr	r0, [r7], #4
   115c0:	add	r6, r6, #1
   115c4:	bl	10dbc <rb_close@plt>
   115c8:	b	1158c <fputs@plt+0x6c8>
   115cc:	bne	115d8 <fputs@plt+0x714>
   115d0:	mov	r0, #0
   115d4:	bl	10ea0 <exit@plt>
   115d8:	bl	10eac <__errno_location@plt>
   115dc:	ldr	r0, [r0]
   115e0:	bl	10c9c <rb_ignore_errno@plt>
   115e4:	cmp	r0, #0
   115e8:	bne	115a8 <fputs@plt+0x6e4>
   115ec:	b	115d0 <fputs@plt+0x70c>
   115f0:	add	sp, sp, #8
   115f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   115f8:	andeq	r1, r1, r0, lsl #10
   115fc:	strdeq	r4, [r2], -r8
   11600:	push	{r4, lr}
   11604:	subs	r4, r1, #0
   11608:	sub	sp, sp, #16384	; 0x4000
   1160c:	beq	11640 <fputs@plt+0x77c>
   11610:	mov	r2, #16384	; 0x4000
   11614:	mov	r1, sp
   11618:	ldr	r0, [r4, #88]	; 0x58
   1161c:	bl	10d5c <rb_read@plt>
   11620:	cmp	r0, #0
   11624:	bne	11648 <fputs@plt+0x784>
   11628:	ldr	r0, [r4, #88]	; 0x58
   1162c:	bl	10dbc <rb_close@plt>
   11630:	ldr	r2, [pc, #64]	; 11678 <fputs@plt+0x7b4>
   11634:	mov	r1, r4
   11638:	mov	r0, r4
   1163c:	bl	11430 <fputs@plt+0x56c>
   11640:	add	sp, sp, #16384	; 0x4000
   11644:	pop	{r4, pc}
   11648:	bge	11610 <fputs@plt+0x74c>
   1164c:	bl	10eac <__errno_location@plt>
   11650:	ldr	r0, [r0]
   11654:	bl	10c9c <rb_ignore_errno@plt>
   11658:	cmp	r0, #0
   1165c:	beq	11628 <fputs@plt+0x764>
   11660:	mov	r3, r4
   11664:	ldr	r2, [pc, #16]	; 1167c <fputs@plt+0x7b8>
   11668:	mov	r1, #1
   1166c:	ldr	r0, [r4, #88]	; 0x58
   11670:	bl	10cb4 <rb_setselect@plt>
   11674:	b	11640 <fputs@plt+0x77c>
   11678:	strdeq	r4, [r2], -r8
   1167c:	andeq	r1, r1, r0, lsl #12
   11680:	push	{r4, r5, r6, r7, r8, lr}
   11684:	sub	sp, sp, #16384	; 0x4000
   11688:	mov	r4, r1
   1168c:	mov	r2, #16384	; 0x4000
   11690:	mov	r1, #0
   11694:	mov	r0, sp
   11698:	bl	10d08 <memset@plt>
   1169c:	cmp	r4, #0
   116a0:	beq	1170c <fputs@plt+0x848>
   116a4:	ldrb	r3, [r4, #128]	; 0x80
   116a8:	tst	r3, #2
   116ac:	bne	1170c <fputs@plt+0x848>
   116b0:	ldr	r0, [r4, #16]
   116b4:	bl	10de0 <rb_rawbuf_length@plt>
   116b8:	cmp	r0, #4096	; 0x1000
   116bc:	bge	116fc <fputs@plt+0x838>
   116c0:	add	r8, r4, #52	; 0x34
   116c4:	ldrb	r3, [r4, #128]	; 0x80
   116c8:	ands	r5, r3, #2
   116cc:	bne	1170c <fputs@plt+0x848>
   116d0:	mov	r2, #16384	; 0x4000
   116d4:	mov	r1, sp
   116d8:	ldr	r0, [r4, #88]	; 0x58
   116dc:	bl	10d5c <rb_read@plt>
   116e0:	subs	r2, r0, #0
   116e4:	bne	11714 <fputs@plt+0x850>
   116e8:	mov	r2, #0
   116ec:	mov	r0, r4
   116f0:	mov	r1, r2
   116f4:	bl	11998 <fputs@plt+0xad4>
   116f8:	b	1170c <fputs@plt+0x848>
   116fc:	mov	r0, r4
   11700:	bl	11ffc <fputs@plt+0x1138>
   11704:	cmp	r0, #0
   11708:	beq	116c0 <fputs@plt+0x7fc>
   1170c:	add	sp, sp, #16384	; 0x4000
   11710:	pop	{r4, r5, r6, r7, r8, pc}
   11714:	bge	11758 <fputs@plt+0x894>
   11718:	bl	10eac <__errno_location@plt>
   1171c:	ldr	r0, [r0]
   11720:	bl	10c9c <rb_ignore_errno@plt>
   11724:	cmp	r0, #0
   11728:	beq	116e8 <fputs@plt+0x824>
   1172c:	mov	r3, r4
   11730:	ldr	r2, [pc, #112]	; 117a8 <fputs@plt+0x8e4>
   11734:	mov	r1, #1
   11738:	ldr	r0, [r4, #88]	; 0x58
   1173c:	bl	10cb4 <rb_setselect@plt>
   11740:	ldrb	r3, [r4, #128]	; 0x80
   11744:	tst	r3, #8
   11748:	beq	1170c <fputs@plt+0x848>
   1174c:	mov	r0, r4
   11750:	bl	118b4 <fputs@plt+0x9f0>
   11754:	b	1170c <fputs@plt+0x848>
   11758:	ldrd	r6, [r4, #112]	; 0x70
   1175c:	mov	r3, r5
   11760:	adds	r0, r6, r2
   11764:	adc	r1, r7, r2, asr #31
   11768:	strd	r0, [r4, #112]	; 0x70
   1176c:	mov	r1, sp
   11770:	mov	r0, r8
   11774:	bl	10d20 <rb_linebuf_parse@plt>
   11778:	ldrb	r3, [r4, #128]	; 0x80
   1177c:	tst	r3, #2
   11780:	bne	1170c <fputs@plt+0x848>
   11784:	ldr	r0, [r4, #16]
   11788:	bl	10de0 <rb_rawbuf_length@plt>
   1178c:	cmp	r0, #4096	; 0x1000
   11790:	blt	116c4 <fputs@plt+0x800>
   11794:	mov	r0, r4
   11798:	bl	11ffc <fputs@plt+0x1138>
   1179c:	cmp	r0, #0
   117a0:	beq	116c4 <fputs@plt+0x800>
   117a4:	b	1170c <fputs@plt+0x848>
   117a8:	andeq	r1, r1, r0, lsl #13
   117ac:	ldrb	r3, [r1, #128]	; 0x80
   117b0:	tst	r3, #2
   117b4:	bxne	lr
   117b8:	push	{r4, r5, r6, lr}
   117bc:	mov	r5, r0
   117c0:	mov	r4, r1
   117c4:	b	117d8 <fputs@plt+0x914>
   117c8:	ldrd	r2, [r4, #96]	; 0x60
   117cc:	adds	r0, r2, r6
   117d0:	adc	r1, r3, r6, asr #31
   117d4:	strd	r0, [r4, #96]	; 0x60
   117d8:	mov	r1, r5
   117dc:	ldr	r0, [r4, #16]
   117e0:	bl	10e94 <rb_rawbuf_flush@plt>
   117e4:	subs	r6, r0, #0
   117e8:	bgt	117c8 <fputs@plt+0x904>
   117ec:	bl	10eac <__errno_location@plt>
   117f0:	cmp	r6, #0
   117f4:	mov	r5, r0
   117f8:	beq	1188c <fputs@plt+0x9c8>
   117fc:	ldr	r0, [r0]
   11800:	bl	10c9c <rb_ignore_errno@plt>
   11804:	cmp	r0, #0
   11808:	bne	1182c <fputs@plt+0x968>
   1180c:	ldr	r0, [r5]
   11810:	bl	10c6c <strerror@plt>
   11814:	mov	r3, r0
   11818:	ldr	r2, [pc, #132]	; 118a4 <fputs@plt+0x9e0>
   1181c:	mov	r0, r4
   11820:	mov	r1, #1
   11824:	pop	{r4, r5, r6, lr}
   11828:	b	11998 <fputs@plt+0xad4>
   1182c:	ldr	r0, [r4, #16]
   11830:	bl	10de0 <rb_rawbuf_length@plt>
   11834:	cmp	r0, #0
   11838:	mov	r1, #2
   1183c:	ldr	r0, [r4, #84]	; 0x54
   11840:	movle	r3, #0
   11844:	movgt	r3, r4
   11848:	movle	r2, r3
   1184c:	ldrgt	r2, [pc, #84]	; 118a8 <fputs@plt+0x9e4>
   11850:	bl	10cb4 <rb_setselect@plt>
   11854:	ldrb	r3, [r4, #128]	; 0x80
   11858:	tst	r3, #1
   1185c:	popeq	{r4, r5, r6, pc}
   11860:	ldr	r0, [r4, #16]
   11864:	bl	10de0 <rb_rawbuf_length@plt>
   11868:	cmp	r0, #0
   1186c:	popne	{r4, r5, r6, pc}
   11870:	mov	r1, r4
   11874:	ldrb	r3, [r4, #128]	; 0x80
   11878:	bic	r3, r3, #1
   1187c:	strb	r3, [r4, #128]	; 0x80
   11880:	pop	{r4, r5, r6, lr}
   11884:	ldr	r0, [r1, #88]	; 0x58
   11888:	b	11680 <fputs@plt+0x7bc>
   1188c:	ldr	r3, [pc, #24]	; 118ac <fputs@plt+0x9e8>
   11890:	mov	r1, #1
   11894:	mov	r0, r4
   11898:	ldr	r2, [pc, #16]	; 118b0 <fputs@plt+0x9ec>
   1189c:	bl	11998 <fputs@plt+0xad4>
   118a0:	b	1180c <fputs@plt+0x948>
   118a4:	andeq	r3, r1, r3, ror #17
   118a8:	andeq	r1, r1, ip, lsr #15
   118ac:	strdeq	r3, [r1], -r3	; <UNPREDICTABLE>
   118b0:	strdeq	r3, [r1], -r0
   118b4:	push	{r4, r5, r6, r7, r8, lr}
   118b8:	sub	sp, sp, #16384	; 0x4000
   118bc:	mov	r4, r0
   118c0:	sub	sp, sp, #16
   118c4:	mov	r2, #16384	; 0x4000
   118c8:	mov	r1, #0
   118cc:	add	r0, sp, #16
   118d0:	ldr	r6, [pc, #188]	; 11994 <fputs@plt+0xad0>
   118d4:	add	r7, r4, #52	; 0x34
   118d8:	bl	10d08 <memset@plt>
   118dc:	mov	r8, #0
   118e0:	mov	r3, #0
   118e4:	mov	r2, #16384	; 0x4000
   118e8:	str	r8, [sp]
   118ec:	add	r1, sp, #16
   118f0:	mov	r0, r7
   118f4:	bl	10d74 <rb_linebuf_get@plt>
   118f8:	subs	r5, r0, #0
   118fc:	ldrb	r3, [r4, #128]	; 0x80
   11900:	beq	11974 <fputs@plt+0xab0>
   11904:	tst	r3, #2
   11908:	bne	118e0 <fputs@plt+0xa1c>
   1190c:	cmp	r5, #122	; 0x7a
   11910:	add	r3, r5, #2
   11914:	bgt	1195c <fputs@plt+0xa98>
   11918:	mvn	r2, #126	; 0x7e
   1191c:	and	r3, r3, #127	; 0x7f
   11920:	strb	r2, [sp, #12]
   11924:	mov	r2, #2
   11928:	strb	r3, [sp, #13]
   1192c:	add	r1, sp, #12
   11930:	mov	r0, r4
   11934:	bl	11330 <fputs@plt+0x46c>
   11938:	mov	r2, r5
   1193c:	add	r1, sp, #16
   11940:	mov	r0, r4
   11944:	bl	11330 <fputs@plt+0x46c>
   11948:	mov	r2, #2
   1194c:	mov	r1, r6
   11950:	mov	r0, r4
   11954:	bl	11330 <fputs@plt+0x46c>
   11958:	b	118dc <fputs@plt+0xa18>
   1195c:	movw	r2, #32385	; 0x7e81
   11960:	rev16	r3, r3
   11964:	strh	r2, [sp, #12]
   11968:	mov	r2, #4
   1196c:	strh	r3, [sp, #14]
   11970:	b	1192c <fputs@plt+0xa68>
   11974:	tst	r3, #8
   11978:	beq	11988 <fputs@plt+0xac4>
   1197c:	mov	r1, r4
   11980:	ldr	r0, [r4, #84]	; 0x54
   11984:	bl	117ac <fputs@plt+0x8e8>
   11988:	add	sp, sp, #16384	; 0x4000
   1198c:	add	sp, sp, #16
   11990:	pop	{r4, r5, r6, r7, r8, pc}
   11994:	andeq	r3, r1, r3, ror #19
   11998:	push	{r2, r3}
   1199c:	push	{r4, r5, r6, r7, lr}
   119a0:	sub	sp, sp, #396	; 0x18c
   119a4:	ldrb	r3, [r0, #128]	; 0x80
   119a8:	ldr	r6, [sp, #416]	; 0x1a0
   119ac:	tst	r3, #2
   119b0:	bne	11a48 <fputs@plt+0xb84>
   119b4:	tst	r3, #8
   119b8:	mov	r4, r0
   119bc:	mov	r5, r1
   119c0:	beq	119c8 <fputs@plt+0xb04>
   119c4:	bl	118b4 <fputs@plt+0x9f0>
   119c8:	ldr	r0, [r4, #16]
   119cc:	eor	r5, r5, #1
   119d0:	ldr	r1, [r4, #84]	; 0x54
   119d4:	bl	10e94 <rb_rawbuf_flush@plt>
   119d8:	add	r1, r4, #24
   119dc:	ldr	r0, [r4, #88]	; 0x58
   119e0:	bl	10d80 <rb_linebuf_flush@plt>
   119e4:	ldr	r0, [r4, #84]	; 0x54
   119e8:	bl	10dbc <rb_close@plt>
   119ec:	ldrb	r3, [r4, #128]	; 0x80
   119f0:	mov	r1, #2000	; 0x7d0
   119f4:	mov	r0, r4
   119f8:	ldr	r2, [r4, #80]	; 0x50
   119fc:	orr	r3, r3, #2
   11a00:	strb	r3, [r4, #128]	; 0x80
   11a04:	udiv	r3, r2, r1
   11a08:	mls	r3, r1, r3, r2
   11a0c:	ldr	r2, [pc, #256]	; 11b14 <fputs@plt+0xc50>
   11a10:	mov	r1, #12
   11a14:	mla	r1, r1, r3, r2
   11a18:	bl	11498 <fputs@plt+0x5d4>
   11a1c:	cmp	r6, #0
   11a20:	andne	r5, r5, #1
   11a24:	moveq	r5, #1
   11a28:	cmp	r5, #0
   11a2c:	beq	11a58 <fputs@plt+0xb94>
   11a30:	ldr	r0, [r4, #88]	; 0x58
   11a34:	bl	10dbc <rb_close@plt>
   11a38:	ldr	r2, [pc, #216]	; 11b18 <fputs@plt+0xc54>
   11a3c:	mov	r1, r4
   11a40:	mov	r0, r4
   11a44:	bl	11430 <fputs@plt+0x56c>
   11a48:	add	sp, sp, #396	; 0x18c
   11a4c:	pop	{r4, r5, r6, r7, lr}
   11a50:	add	sp, sp, #8
   11a54:	bx	lr
   11a58:	mov	r3, r4
   11a5c:	ldr	r2, [pc, #184]	; 11b1c <fputs@plt+0xc58>
   11a60:	mov	r1, #1
   11a64:	ldr	r0, [r4, #88]	; 0x58
   11a68:	bl	10cb4 <rb_setselect@plt>
   11a6c:	mov	r3, r5
   11a70:	mov	r2, r5
   11a74:	ldr	r0, [r4, #88]	; 0x58
   11a78:	mov	r1, #2
   11a7c:	bl	10cb4 <rb_setselect@plt>
   11a80:	add	r3, sp, #420	; 0x1a4
   11a84:	mov	r2, r6
   11a88:	mov	r1, #128	; 0x80
   11a8c:	add	r0, sp, #8
   11a90:	str	r3, [sp, #4]
   11a94:	bl	10cd8 <vsnprintf@plt>
   11a98:	mov	r3, #68	; 0x44
   11a9c:	add	r1, sp, #8
   11aa0:	mov	r2, #251	; 0xfb
   11aa4:	add	r0, sp, #141	; 0x8d
   11aa8:	strb	r3, [sp, #136]	; 0x88
   11aac:	ldr	r3, [r4, #80]	; 0x50
   11ab0:	str	r3, [sp, #137]	; 0x89
   11ab4:	bl	10d2c <rb_strlcpy@plt>
   11ab8:	add	r0, sp, #8
   11abc:	bl	10d8c <strlen@plt>
   11ac0:	add	r6, r0, #6
   11ac4:	mov	r0, #40	; 0x28
   11ac8:	ldr	r7, [r4, #12]
   11acc:	bl	11314 <fputs@plt+0x450>
   11ad0:	mov	r4, r0
   11ad4:	mov	r0, r6
   11ad8:	bl	11314 <fputs@plt+0x450>
   11adc:	mov	r2, r6
   11ae0:	add	r1, sp, #136	; 0x88
   11ae4:	str	r0, [r4, #12]
   11ae8:	str	r6, [r4, #16]
   11aec:	bl	10d98 <memcpy@plt>
   11af0:	mov	r1, r4
   11af4:	mov	r0, r4
   11af8:	str	r5, [r4, #36]	; 0x24
   11afc:	add	r2, r7, #36	; 0x24
   11b00:	bl	113a8 <fputs@plt+0x4e4>
   11b04:	mov	r1, r7
   11b08:	ldr	r0, [r7, #16]
   11b0c:	bl	11500 <fputs@plt+0x63c>
   11b10:	b	11a48 <fputs@plt+0xb84>
   11b14:	andeq	r4, r2, ip, lsl #2
   11b18:	strdeq	r4, [r2], -r8
   11b1c:	andeq	r1, r1, r0, lsl #12
   11b20:	ldrb	r3, [r1, #128]	; 0x80
   11b24:	tst	r3, #2
   11b28:	bxne	lr
   11b2c:	push	{r4, r5, r6, r8, r9, lr}
   11b30:	mov	r4, r1
   11b34:	mov	r5, r0
   11b38:	add	r6, r1, #24
   11b3c:	mov	r1, r6
   11b40:	mov	r0, r5
   11b44:	bl	10d80 <rb_linebuf_flush@plt>
   11b48:	cmp	r0, #0
   11b4c:	bgt	11b68 <fputs@plt+0xca4>
   11b50:	bne	11b7c <fputs@plt+0xcb8>
   11b54:	mov	r2, #0
   11b58:	mov	r0, r4
   11b5c:	pop	{r4, r5, r6, r8, r9, lr}
   11b60:	mov	r1, r2
   11b64:	b	11998 <fputs@plt+0xad4>
   11b68:	ldrd	r2, [r4, #120]	; 0x78
   11b6c:	adds	r8, r2, r0
   11b70:	adc	r9, r3, r0, asr #31
   11b74:	strd	r8, [r4, #120]	; 0x78
   11b78:	b	11b3c <fputs@plt+0xc78>
   11b7c:	bl	10eac <__errno_location@plt>
   11b80:	ldr	r0, [r0]
   11b84:	bl	10c9c <rb_ignore_errno@plt>
   11b88:	cmp	r0, #0
   11b8c:	beq	11b54 <fputs@plt+0xc90>
   11b90:	ldr	r3, [r4, #40]	; 0x28
   11b94:	mov	r1, #2
   11b98:	ldr	r0, [r4, #88]	; 0x58
   11b9c:	cmp	r3, #0
   11ba0:	movle	r3, #0
   11ba4:	movgt	r3, r4
   11ba8:	ldrgt	r2, [pc, #8]	; 11bb8 <fputs@plt+0xcf4>
   11bac:	movle	r2, r3
   11bb0:	pop	{r4, r5, r6, r8, r9, lr}
   11bb4:	b	10cb4 <rb_setselect@plt>
   11bb8:	andeq	r1, r1, r0, lsr #22
   11bbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11bc0:	sub	sp, sp, #32768	; 0x8000
   11bc4:	mov	r4, r1
   11bc8:	sub	sp, sp, #120	; 0x78
   11bcc:	mov	r6, r0
   11bd0:	mov	r2, #16384	; 0x4000
   11bd4:	mov	r1, #0
   11bd8:	add	r0, sp, #120	; 0x78
   11bdc:	bl	10d08 <memset@plt>
   11be0:	cmp	r4, #0
   11be4:	beq	11bf8 <fputs@plt+0xd34>
   11be8:	ldrb	r3, [r4, #128]	; 0x80
   11bec:	tst	r3, #2
   11bf0:	addeq	r5, sp, #24
   11bf4:	beq	11c10 <fputs@plt+0xd4c>
   11bf8:	add	sp, sp, #32768	; 0x8000
   11bfc:	add	sp, sp, #120	; 0x78
   11c00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c04:	ldrb	r3, [r4, #128]	; 0x80
   11c08:	tst	r3, #2
   11c0c:	bne	11bf8 <fputs@plt+0xd34>
   11c10:	mov	r2, #16384	; 0x4000
   11c14:	add	r1, sp, #120	; 0x78
   11c18:	mov	r0, r6
   11c1c:	bl	10d5c <rb_read@plt>
   11c20:	subs	r7, r0, #0
   11c24:	bge	11c74 <fputs@plt+0xdb0>
   11c28:	bl	10eac <__errno_location@plt>
   11c2c:	ldr	r0, [r0]
   11c30:	bl	10c9c <rb_ignore_errno@plt>
   11c34:	cmp	r0, #0
   11c38:	beq	11c60 <fputs@plt+0xd9c>
   11c3c:	mov	r0, r6
   11c40:	mov	r3, r4
   11c44:	ldr	r2, [pc, #908]	; 11fd8 <fputs@plt+0x1114>
   11c48:	mov	r1, #1
   11c4c:	bl	10cb4 <rb_setselect@plt>
   11c50:	mov	r1, r4
   11c54:	ldr	r0, [r4, #88]	; 0x58
   11c58:	bl	11b20 <fputs@plt+0xc5c>
   11c5c:	b	11bf8 <fputs@plt+0xd34>
   11c60:	ldr	r2, [pc, #884]	; 11fdc <fputs@plt+0x1118>
   11c64:	mov	r1, #0
   11c68:	mov	r0, r4
   11c6c:	bl	11998 <fputs@plt+0xad4>
   11c70:	b	11bf8 <fputs@plt+0xd34>
   11c74:	beq	11c60 <fputs@plt+0xd9c>
   11c78:	mov	r2, r7
   11c7c:	add	r1, sp, #120	; 0x78
   11c80:	ldr	r0, [r4, #20]
   11c84:	bl	10e88 <rb_rawbuf_append@plt>
   11c88:	ldrb	r8, [r4, #128]	; 0x80
   11c8c:	ands	r8, r8, #8
   11c90:	ldrne	r9, [pc, #840]	; 11fe0 <fputs@plt+0x111c>
   11c94:	bne	11e70 <fputs@plt+0xfac>
   11c98:	add	r0, sp, #16384	; 0x4000
   11c9c:	mov	r2, #16384	; 0x4000
   11ca0:	ldr	r9, [pc, #828]	; 11fe4 <fputs@plt+0x1120>
   11ca4:	mov	r1, r8
   11ca8:	add	r0, r0, #120	; 0x78
   11cac:	bl	10d08 <memset@plt>
   11cb0:	add	r1, sp, #16384	; 0x4000
   11cb4:	mov	r2, #16384	; 0x4000
   11cb8:	ldr	r0, [r4, #20]
   11cbc:	add	r1, r1, #120	; 0x78
   11cc0:	bl	10e10 <rb_rawbuf_get@plt>
   11cc4:	cmp	r0, #0
   11cc8:	beq	11d6c <fputs@plt+0xea8>
   11ccc:	add	r0, sp, #16384	; 0x4000
   11cd0:	mov	r1, r9
   11cd4:	add	r0, r0, #120	; 0x78
   11cd8:	bl	10db0 <rb_strcasestr@plt>
   11cdc:	cmp	r0, #0
   11ce0:	addne	r0, r0, #18
   11ce4:	beq	11cb0 <fputs@plt+0xdec>
   11ce8:	add	r3, sp, #32768	; 0x8000
   11cec:	mov	r1, r0
   11cf0:	add	r3, r3, #120	; 0x78
   11cf4:	cmp	r0, r3
   11cf8:	bcs	11d3c <fputs@plt+0xe78>
   11cfc:	mov	r2, r0
   11d00:	ldrb	r3, [r2], #1
   11d04:	cmp	r3, #0
   11d08:	bne	11d58 <fputs@plt+0xe94>
   11d0c:	add	r3, sp, #32768	; 0x8000
   11d10:	mov	r2, r0
   11d14:	add	r3, r3, #120	; 0x78
   11d18:	cmp	r0, r3
   11d1c:	bcs	11d3c <fputs@plt+0xe78>
   11d20:	ldrb	r3, [r0], #1
   11d24:	cmp	r3, #0
   11d28:	beq	11d3c <fputs@plt+0xe78>
   11d2c:	cmp	r3, #10
   11d30:	cmpne	r3, #13
   11d34:	bne	11d0c <fputs@plt+0xe48>
   11d38:	strb	r8, [r2]
   11d3c:	mov	r2, #37	; 0x25
   11d40:	add	r0, r4, #129	; 0x81
   11d44:	bl	10d2c <rb_strlcpy@plt>
   11d48:	ldrb	r3, [r4, #128]	; 0x80
   11d4c:	orr	r3, r3, #8
   11d50:	strb	r3, [r4, #128]	; 0x80
   11d54:	b	11cb0 <fputs@plt+0xdec>
   11d58:	cmp	r3, #32
   11d5c:	cmpne	r3, #9
   11d60:	bne	11d0c <fputs@plt+0xe48>
   11d64:	mov	r0, r2
   11d68:	b	11ce8 <fputs@plt+0xe24>
   11d6c:	ldrb	r3, [r4, #128]	; 0x80
   11d70:	tst	r3, #8
   11d74:	beq	11e08 <fputs@plt+0xf44>
   11d78:	add	r8, r4, #129	; 0x81
   11d7c:	mov	r0, r5
   11d80:	bl	13664 <fputs@plt+0x27a0>
   11d84:	mov	r0, r8
   11d88:	bl	10d8c <strlen@plt>
   11d8c:	mov	r2, r0
   11d90:	mov	r1, r8
   11d94:	mov	r0, r5
   11d98:	bl	136a8 <fputs@plt+0x27e4>
   11d9c:	mov	r2, #36	; 0x24
   11da0:	ldr	r1, [pc, #576]	; 11fe8 <fputs@plt+0x1124>
   11da4:	mov	r0, r5
   11da8:	bl	136a8 <fputs@plt+0x27e4>
   11dac:	add	r1, sp, #4
   11db0:	mov	r0, r5
   11db4:	bl	1373c <fputs@plt+0x2878>
   11db8:	mov	r1, #20
   11dbc:	add	r0, sp, #4
   11dc0:	bl	10eb8 <rb_base64_encode@plt>
   11dc4:	mov	r8, r0
   11dc8:	mov	r2, #129	; 0x81
   11dcc:	ldr	r1, [pc, #536]	; 11fec <fputs@plt+0x1128>
   11dd0:	mov	r0, r4
   11dd4:	bl	11330 <fputs@plt+0x46c>
   11dd8:	mov	r0, r8
   11ddc:	bl	10d8c <strlen@plt>
   11de0:	mov	r2, r0
   11de4:	mov	r1, r8
   11de8:	mov	r0, r4
   11dec:	bl	11330 <fputs@plt+0x46c>
   11df0:	mov	r0, r4
   11df4:	mov	r2, #4
   11df8:	ldr	r1, [pc, #496]	; 11ff0 <fputs@plt+0x112c>
   11dfc:	bl	11330 <fputs@plt+0x46c>
   11e00:	mov	r0, r8
   11e04:	bl	1129c <fputs@plt+0x3d8>
   11e08:	mov	r1, r4
   11e0c:	ldr	r0, [r4, #84]	; 0x54
   11e10:	bl	117ac <fputs@plt+0x8e8>
   11e14:	cmp	r7, #16384	; 0x4000
   11e18:	bge	11c04 <fputs@plt+0xd40>
   11e1c:	mov	r3, r4
   11e20:	ldr	r2, [pc, #432]	; 11fd8 <fputs@plt+0x1114>
   11e24:	mov	r1, #1
   11e28:	mov	r0, r6
   11e2c:	bl	10cb4 <rb_setselect@plt>
   11e30:	b	11bf8 <fputs@plt+0xd34>
   11e34:	add	r0, sp, #16384	; 0x4000
   11e38:	mov	r2, #16384	; 0x4000
   11e3c:	mov	r1, #0
   11e40:	add	r0, r0, #120	; 0x78
   11e44:	bl	10d08 <memset@plt>
   11e48:	mov	r2, sl
   11e4c:	add	r1, sp, #4
   11e50:	ldr	r0, [r4, #20]
   11e54:	bl	10e10 <rb_rawbuf_get@plt>
   11e58:	cmp	r0, #0
   11e5c:	bne	11f20 <fputs@plt+0x105c>
   11e60:	ldr	r2, [pc, #396]	; 11ff4 <fputs@plt+0x1130>
   11e64:	mov	r1, #1
   11e68:	mov	r0, r4
   11e6c:	bl	11998 <fputs@plt+0xad4>
   11e70:	mov	r2, #2
   11e74:	mov	r1, sp
   11e78:	ldr	r0, [r4, #20]
   11e7c:	bl	10e10 <rb_rawbuf_get@plt>
   11e80:	cmp	r0, #2
   11e84:	mov	sl, r0
   11e88:	bne	11fc8 <fputs@plt+0x1104>
   11e8c:	ldrb	r3, [sp, #1]
   11e90:	lsr	r8, r3, #7
   11e94:	and	r3, r3, #127	; 0x7f
   11e98:	cmp	r3, #126	; 0x7e
   11e9c:	strb	r3, [sp, #1]
   11ea0:	beq	11e34 <fputs@plt+0xf70>
   11ea4:	cmp	r3, #127	; 0x7f
   11ea8:	beq	11e70 <fputs@plt+0xfac>
   11eac:	cmp	r8, #1
   11eb0:	bne	11ecc <fputs@plt+0x1008>
   11eb4:	mov	r2, #4
   11eb8:	mov	r1, r5
   11ebc:	ldr	r0, [r4, #20]
   11ec0:	bl	10e10 <rb_rawbuf_get@plt>
   11ec4:	cmp	r0, #0
   11ec8:	beq	11f4c <fputs@plt+0x1088>
   11ecc:	add	r1, sp, #16384	; 0x4000
   11ed0:	ldrb	r2, [sp, #1]
   11ed4:	add	r1, r1, #120	; 0x78
   11ed8:	ldr	r0, [r4, #20]
   11edc:	bl	10e10 <rb_rawbuf_get@plt>
   11ee0:	subs	r2, r0, #0
   11ee4:	beq	11f70 <fputs@plt+0x10ac>
   11ee8:	cmp	r8, #1
   11eec:	addeq	r1, sp, #16384	; 0x4000
   11ef0:	moveq	r3, #0
   11ef4:	addeq	r1, r1, #120	; 0x78
   11ef8:	bne	11f8c <fputs@plt+0x10c8>
   11efc:	cmp	r2, r3
   11f00:	ble	11f8c <fputs@plt+0x10c8>
   11f04:	and	r0, r3, #3
   11f08:	ldrb	ip, [r1]
   11f0c:	add	r3, r3, #1
   11f10:	ldrb	r0, [r5, r0]
   11f14:	eor	ip, ip, r0
   11f18:	strb	ip, [r1], #1
   11f1c:	b	11efc <fputs@plt+0x1038>
   11f20:	ldrh	r3, [sp, #4]
   11f24:	cmp	r8, #1
   11f28:	rev16	r3, r3
   11f2c:	strh	r3, [sp, #4]
   11f30:	bne	11f54 <fputs@plt+0x1090>
   11f34:	mov	r2, #4
   11f38:	mov	r1, r5
   11f3c:	ldr	r0, [r4, #20]
   11f40:	bl	10e10 <rb_rawbuf_get@plt>
   11f44:	cmp	r0, #0
   11f48:	bne	11f54 <fputs@plt+0x1090>
   11f4c:	ldr	r2, [pc, #164]	; 11ff8 <fputs@plt+0x1134>
   11f50:	b	11e64 <fputs@plt+0xfa0>
   11f54:	add	r1, sp, #16384	; 0x4000
   11f58:	ldrh	r2, [sp, #4]
   11f5c:	add	r1, r1, #120	; 0x78
   11f60:	ldr	r0, [r4, #20]
   11f64:	bl	10e10 <rb_rawbuf_get@plt>
   11f68:	subs	r2, r0, #0
   11f6c:	bne	11f78 <fputs@plt+0x10b4>
   11f70:	mov	r2, r9
   11f74:	b	11e64 <fputs@plt+0xfa0>
   11f78:	cmp	r8, #1
   11f7c:	addeq	r1, sp, #16384	; 0x4000
   11f80:	moveq	r3, #0
   11f84:	addeq	r1, r1, #120	; 0x78
   11f88:	beq	11fbc <fputs@plt+0x10f8>
   11f8c:	add	r1, sp, #16384	; 0x4000
   11f90:	mov	r3, #1
   11f94:	add	r1, r1, #120	; 0x78
   11f98:	add	r0, r4, #24
   11f9c:	bl	10d20 <rb_linebuf_parse@plt>
   11fa0:	b	11e70 <fputs@plt+0xfac>
   11fa4:	and	r0, r3, #3
   11fa8:	ldrb	ip, [r1]
   11fac:	add	r3, r3, #1
   11fb0:	ldrb	r0, [r5, r0]
   11fb4:	eor	ip, ip, r0
   11fb8:	strb	ip, [r1], #1
   11fbc:	cmp	r2, r3
   11fc0:	bgt	11fa4 <fputs@plt+0x10e0>
   11fc4:	b	11f8c <fputs@plt+0x10c8>
   11fc8:	mov	r1, r4
   11fcc:	ldr	r0, [r4, #88]	; 0x58
   11fd0:	bl	11b20 <fputs@plt+0xc5c>
   11fd4:	b	11e14 <fputs@plt+0xf50>
   11fd8:			; <UNDEFINED> instruction: 0x00011bbc
   11fdc:	andeq	r3, r1, r5, lsl r9
   11fe0:	andeq	r3, r1, r0, asr #20
   11fe4:	andeq	r3, r1, r7, lsr #18
   11fe8:	andeq	r3, r1, sl, lsr r9
   11fec:	andeq	r3, r1, pc, asr r9
   11ff0:	andeq	r3, r1, r1, ror #19
   11ff4:	andeq	r3, r1, r6, ror #19
   11ff8:	andeq	r3, r1, r4, lsl sl
   11ffc:	push	{r4, lr}
   12000:	mov	r1, #1
   12004:	mov	r4, r0
   12008:	ldrb	r3, [r0, #128]	; 0x80
   1200c:	orr	r3, r3, #1
   12010:	strb	r3, [r0, #128]	; 0x80
   12014:	mov	r3, #0
   12018:	mov	r2, r3
   1201c:	ldr	r0, [r0, #88]	; 0x58
   12020:	bl	10cb4 <rb_setselect@plt>
   12024:	ldrb	r3, [r4, #128]	; 0x80
   12028:	tst	r3, #8
   1202c:	beq	1203c <fputs@plt+0x1178>
   12030:	mov	r1, r4
   12034:	ldr	r0, [r4, #84]	; 0x54
   12038:	bl	117ac <fputs@plt+0x8e8>
   1203c:	mov	r0, #1
   12040:	pop	{r4, pc}
   12044:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12048:	mov	r6, r1
   1204c:	sub	sp, sp, #20
   12050:	mov	r9, #16384	; 0x4000
   12054:	mov	r8, #4
   12058:	mov	r0, #40	; 0x28
   1205c:	bl	11314 <fputs@plt+0x450>
   12060:	mov	r4, r0
   12064:	mov	r0, #16384	; 0x4000
   12068:	bl	11314 <fputs@plt+0x450>
   1206c:	mov	r1, r0
   12070:	add	r5, r4, #20
   12074:	ldr	r0, [r6, #16]
   12078:	mov	r3, r5
   1207c:	mov	r2, #16384	; 0x4000
   12080:	str	r1, [r4, #12]
   12084:	str	r9, [r4, #16]
   12088:	str	r8, [sp]
   1208c:	bl	10e4c <rb_recv_fd_buf@plt>
   12090:	subs	r7, r0, #0
   12094:	bgt	120b8 <fputs@plt+0x11f4>
   12098:	ldr	r0, [r4, #12]
   1209c:	bl	1129c <fputs@plt+0x3d8>
   120a0:	mov	r0, r4
   120a4:	bl	1129c <fputs@plt+0x3d8>
   120a8:	cmp	r7, #0
   120ac:	bne	120f0 <fputs@plt+0x122c>
   120b0:	mov	r0, #0
   120b4:	bl	10ea0 <exit@plt>
   120b8:	add	r2, r6, #24
   120bc:	mov	r1, r4
   120c0:	str	r7, [r4, #16]
   120c4:	mov	r0, r4
   120c8:	bl	113a8 <fputs@plt+0x4e4>
   120cc:	mov	r3, #0
   120d0:	ldr	r2, [r5], #4
   120d4:	cmp	r2, #0
   120d8:	beq	120e8 <fputs@plt+0x1224>
   120dc:	add	r3, r3, #1
   120e0:	cmp	r3, #4
   120e4:	bne	120d0 <fputs@plt+0x120c>
   120e8:	str	r3, [r4, #36]	; 0x24
   120ec:	b	12058 <fputs@plt+0x1194>
   120f0:	bl	10eac <__errno_location@plt>
   120f4:	ldr	r0, [r0]
   120f8:	bl	10c9c <rb_ignore_errno@plt>
   120fc:	cmp	r0, #0
   12100:	beq	120b0 <fputs@plt+0x11ec>
   12104:	ldr	r7, [r6, #24]
   12108:	cmp	r7, #0
   1210c:	bne	1212c <fputs@plt+0x1268>
   12110:	ldr	r2, [pc, #392]	; 122a0 <fputs@plt+0x13dc>
   12114:	mov	r3, r6
   12118:	mov	r1, #1
   1211c:	ldr	r0, [r6, #16]
   12120:	add	sp, sp, #20
   12124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12128:	b	10cb4 <rb_setselect@plt>
   1212c:	ldr	sl, [pc, #368]	; 122a4 <fputs@plt+0x13e0>
   12130:	mvn	r9, #0
   12134:	ldr	r8, [r7, #8]
   12138:	ldr	r5, [r7]
   1213c:	ldr	r3, [r5, #12]
   12140:	ldrb	r3, [r3]
   12144:	cmp	r3, #65	; 0x41
   12148:	bne	12178 <fputs@plt+0x12b4>
   1214c:	ldr	r3, [r5, #36]	; 0x24
   12150:	cmp	r3, #2
   12154:	bne	12164 <fputs@plt+0x12a0>
   12158:	ldr	r3, [r5, #16]
   1215c:	cmp	r3, #5
   12160:	beq	121b8 <fputs@plt+0x12f4>
   12164:	add	fp, r5, #20
   12168:	mov	r4, #0
   1216c:	ldr	r3, [r5, #36]	; 0x24
   12170:	cmp	r4, r3
   12174:	blt	121a8 <fputs@plt+0x12e4>
   12178:	add	r1, r6, #24
   1217c:	mov	r0, r7
   12180:	bl	11498 <fputs@plt+0x5d4>
   12184:	ldr	r0, [r5, #12]
   12188:	bl	1129c <fputs@plt+0x3d8>
   1218c:	mov	r0, r5
   12190:	bl	1129c <fputs@plt+0x3d8>
   12194:	cmp	r8, #0
   12198:	beq	12110 <fputs@plt+0x124c>
   1219c:	mov	r7, r8
   121a0:	ldr	r8, [r8, #8]
   121a4:	b	12138 <fputs@plt+0x1274>
   121a8:	ldr	r0, [fp], #4
   121ac:	add	r4, r4, #1
   121b0:	bl	10dbc <rb_close@plt>
   121b4:	b	1216c <fputs@plt+0x12a8>
   121b8:	ldr	r3, [r5, #20]
   121bc:	mov	r0, #168	; 0xa8
   121c0:	ldr	fp, [r5, #24]
   121c4:	str	r3, [sp, #12]
   121c8:	bl	11314 <fputs@plt+0x450>
   121cc:	ldr	r3, [sp, #12]
   121d0:	mov	r4, r0
   121d4:	str	r6, [r4, #12]
   121d8:	str	r9, [r4, #80]	; 0x50
   121dc:	mov	r0, r3
   121e0:	str	r3, [r4, #84]	; 0x54
   121e4:	str	fp, [r4, #88]	; 0x58
   121e8:	bl	10cfc <rb_set_nb@plt>
   121ec:	mov	r0, fp
   121f0:	bl	10cfc <rb_set_nb@plt>
   121f4:	add	r0, r4, #52	; 0x34
   121f8:	bl	10e64 <rb_linebuf_newbuf@plt>
   121fc:	add	r0, r4, #24
   12200:	bl	10e64 <rb_linebuf_newbuf@plt>
   12204:	bl	10e34 <rb_new_rawbuffer@plt>
   12208:	str	r0, [r4, #20]
   1220c:	bl	10e34 <rb_new_rawbuffer@plt>
   12210:	ldr	r3, [r5, #12]
   12214:	mov	r1, #2000	; 0x7d0
   12218:	str	r0, [r4, #16]
   1221c:	mov	r0, r4
   12220:	ldr	r2, [r3, #1]
   12224:	udiv	r3, r2, r1
   12228:	str	r2, [r4, #80]	; 0x50
   1222c:	mls	r3, r1, r3, r2
   12230:	mov	r2, #12
   12234:	mov	r1, r4
   12238:	mla	r2, r2, r3, sl
   1223c:	bl	11430 <fputs@plt+0x56c>
   12240:	ldrb	r3, [r4, #128]	; 0x80
   12244:	ldr	r0, [r4, #84]	; 0x54
   12248:	orr	r3, r3, #4
   1224c:	strb	r3, [r4, #128]	; 0x80
   12250:	bl	10c78 <rb_get_type@plt>
   12254:	tst	r0, #64	; 0x40
   12258:	beq	12268 <fputs@plt+0x13a4>
   1225c:	mov	r1, #4
   12260:	ldr	r0, [r4, #84]	; 0x54
   12264:	bl	10d68 <rb_set_type@plt>
   12268:	ldr	r0, [r4, #88]	; 0x58
   1226c:	bl	10c78 <rb_get_type@plt>
   12270:	cmp	r0, #64	; 0x40
   12274:	bne	12284 <fputs@plt+0x13c0>
   12278:	mov	r1, #4
   1227c:	ldr	r0, [r4, #88]	; 0x58
   12280:	bl	10d68 <rb_set_type@plt>
   12284:	mov	r1, r4
   12288:	ldr	r0, [r4, #84]	; 0x54
   1228c:	bl	11bbc <fputs@plt+0xcf8>
   12290:	mov	r1, r4
   12294:	ldr	r0, [r4, #88]	; 0x58
   12298:	bl	11680 <fputs@plt+0x7bc>
   1229c:	b	12178 <fputs@plt+0x12b4>
   122a0:	andeq	r2, r1, r4, asr #32
   122a4:	andeq	r4, r2, ip, lsl #2
   122a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122ac:	sub	sp, sp, #156	; 0x9c
   122b0:	mov	r3, r1
   122b4:	add	ip, sp, #88	; 0x58
   122b8:	add	lr, r1, #64	; 0x40
   122bc:	str	r0, [sp]
   122c0:	ldr	r0, [r3]
   122c4:	mov	r2, ip
   122c8:	add	r3, r3, #8
   122cc:	ldr	r1, [r3, #-4]
   122d0:	cmp	r3, lr
   122d4:	stmia	r2!, {r0, r1}
   122d8:	mov	ip, r2
   122dc:	bne	122c0 <fputs@plt+0x13fc>
   122e0:	ldr	r3, [sp]
   122e4:	ldr	r5, [sp, #88]	; 0x58
   122e8:	ldr	r3, [r3]
   122ec:	str	r3, [sp, #72]	; 0x48
   122f0:	ldr	r3, [sp]
   122f4:	ldr	r1, [sp, #72]	; 0x48
   122f8:	ldr	r3, [r3, #4]
   122fc:	ror	ip, r1, #2
   12300:	str	r3, [sp, #80]	; 0x50
   12304:	ldr	r3, [sp]
   12308:	ldr	r3, [r3, #8]
   1230c:	str	r3, [sp, #68]	; 0x44
   12310:	ldr	r3, [sp]
   12314:	ldr	r3, [r3, #12]
   12318:	str	r3, [sp, #76]	; 0x4c
   1231c:	ldr	r3, [sp]
   12320:	ldr	r2, [sp, #76]	; 0x4c
   12324:	ldr	r3, [r3, #16]
   12328:	str	r3, [sp, #84]	; 0x54
   1232c:	rev	r3, r5
   12330:	str	r3, [sp, #4]
   12334:	ldr	r3, [sp, #68]	; 0x44
   12338:	eor	r8, r3, r2
   1233c:	ldr	r3, [sp, #80]	; 0x50
   12340:	and	r8, r8, r3
   12344:	ldr	r3, [pc, #4088]	; 13344 <fputs@plt+0x2480>
   12348:	eor	r8, r8, r2
   1234c:	ldr	r2, [sp, #84]	; 0x54
   12350:	add	r2, r2, r3
   12354:	add	r2, r2, r1, ror #27
   12358:	add	r8, r8, r2
   1235c:	ldr	r2, [sp, #4]
   12360:	add	r8, r2, r8
   12364:	ldr	r2, [sp, #80]	; 0x50
   12368:	ror	lr, r2, #2
   1236c:	ldr	r2, [sp, #92]	; 0x5c
   12370:	eor	r7, lr, ip
   12374:	and	r7, r7, r8
   12378:	eor	r7, r7, lr
   1237c:	rev	r2, r2
   12380:	str	r2, [sp, #8]
   12384:	ldr	r2, [sp, #68]	; 0x44
   12388:	eor	r6, r2, lr
   1238c:	ldr	r2, [sp, #68]	; 0x44
   12390:	add	lr, lr, r3
   12394:	and	r6, r6, r1
   12398:	eor	r6, r6, r2
   1239c:	ldr	r2, [sp, #76]	; 0x4c
   123a0:	add	r2, r2, r3
   123a4:	add	r6, r6, r2
   123a8:	ldr	r2, [sp, #8]
   123ac:	add	r6, r6, r2
   123b0:	ldr	r2, [sp, #96]	; 0x60
   123b4:	add	r6, r6, r8, ror #27
   123b8:	ror	r8, r8, #2
   123bc:	rev	fp, r2
   123c0:	ldr	r2, [sp, #68]	; 0x44
   123c4:	ldr	r4, [sp, #100]	; 0x64
   123c8:	ldrd	r0, [sp, #112]	; 0x70
   123cc:	add	r2, r2, r3
   123d0:	add	r2, r2, fp
   123d4:	add	r7, r7, r2
   123d8:	rev	r2, r4
   123dc:	eor	r4, ip, r8
   123e0:	add	lr, lr, r2
   123e4:	add	r7, r7, r6, ror #27
   123e8:	and	r4, r4, r6
   123ec:	ror	r6, r6, #2
   123f0:	str	r2, [sp, #44]	; 0x2c
   123f4:	eor	r4, r4, ip
   123f8:	add	ip, ip, r3
   123fc:	add	r4, r4, lr
   12400:	ldr	lr, [sp, #104]	; 0x68
   12404:	add	r4, r4, r7, ror #27
   12408:	rev	r2, lr
   1240c:	eor	lr, r8, r6
   12410:	and	lr, lr, r7
   12414:	add	ip, ip, r2
   12418:	ror	r7, r7, #2
   1241c:	eor	lr, lr, r8
   12420:	str	r2, [sp, #48]	; 0x30
   12424:	add	lr, lr, ip
   12428:	ldr	ip, [sp, #108]	; 0x6c
   1242c:	eor	r9, r6, r7
   12430:	add	lr, lr, r4, ror #27
   12434:	and	r9, r9, r4
   12438:	ror	r4, r4, #2
   1243c:	eor	r9, r9, r6
   12440:	rev	r2, ip
   12444:	str	r2, [sp, #52]	; 0x34
   12448:	add	r2, r2, r3
   1244c:	add	r8, r2, r8
   12450:	rev	r2, r0
   12454:	eor	r0, r7, r4
   12458:	add	r9, r9, r8
   1245c:	ldr	r8, [sp, #124]	; 0x7c
   12460:	str	r2, [sp, #56]	; 0x38
   12464:	add	r2, r2, r3
   12468:	and	r0, r0, lr
   1246c:	add	r6, r2, r6
   12470:	rev	r2, r1
   12474:	add	r9, r9, lr, ror #27
   12478:	eor	r0, r0, r7
   1247c:	ror	lr, lr, #2
   12480:	str	r2, [sp, #60]	; 0x3c
   12484:	add	r2, r2, r3
   12488:	add	r0, r0, r6
   1248c:	add	r7, r2, r7
   12490:	ldr	r2, [sp, #120]	; 0x78
   12494:	eor	r1, r4, lr
   12498:	add	r0, r0, r9, ror #27
   1249c:	and	r1, r1, r9
   124a0:	ror	r9, r9, #2
   124a4:	eor	r1, r1, r4
   124a8:	ldr	r6, [sp, #128]	; 0x80
   124ac:	add	r1, r1, r7
   124b0:	add	r1, r1, r0, ror #27
   124b4:	rev	sl, r2
   124b8:	eor	r2, lr, r9
   124bc:	add	ip, sl, r3
   124c0:	and	r2, r2, r0
   124c4:	ror	r0, r0, #2
   124c8:	add	r4, ip, r4
   124cc:	eor	r2, r2, lr
   124d0:	rev	ip, r8
   124d4:	eor	r5, r9, r0
   124d8:	add	r2, r2, r4
   124dc:	and	r5, r5, r1
   124e0:	add	r2, r2, r1, ror #27
   124e4:	str	ip, [sp, #16]
   124e8:	add	ip, ip, r3
   124ec:	ror	r1, r1, #2
   124f0:	add	lr, ip, lr
   124f4:	rev	ip, r6
   124f8:	eor	r5, r5, r9
   124fc:	eor	r6, r0, r1
   12500:	str	ip, [sp, #20]
   12504:	add	ip, ip, r3
   12508:	and	r6, r6, r2
   1250c:	add	ip, ip, r9
   12510:	ldr	r9, [sp, #144]	; 0x90
   12514:	eor	r6, r6, r0
   12518:	add	r5, r5, lr
   1251c:	add	ip, r6, ip
   12520:	ldr	r6, [sp, #132]	; 0x84
   12524:	add	r5, r5, r2, ror #27
   12528:	ror	r2, r2, #2
   1252c:	add	ip, ip, r5, ror #27
   12530:	eor	r8, r1, r2
   12534:	and	r8, r8, r5
   12538:	ror	r5, r5, #2
   1253c:	rev	lr, r6
   12540:	ldr	r6, [sp, #136]	; 0x88
   12544:	eor	r8, r8, r1
   12548:	eor	r7, r2, r5
   1254c:	str	lr, [sp, #24]
   12550:	add	lr, lr, r3
   12554:	and	r7, r7, ip
   12558:	add	r0, lr, r0
   1255c:	eor	r7, r7, r2
   12560:	add	r8, r8, r0
   12564:	rev	r0, r6
   12568:	ror	r6, ip, #2
   1256c:	add	r8, r8, ip, ror #27
   12570:	str	r0, [sp, #28]
   12574:	add	r0, r0, r3
   12578:	eor	r4, r5, r6
   1257c:	add	r1, r0, r1
   12580:	and	r4, r4, r8
   12584:	add	r7, r7, r1
   12588:	ldr	r1, [sp, #140]	; 0x8c
   1258c:	eor	r4, r4, r5
   12590:	add	r7, r7, r8, ror #27
   12594:	ror	r8, r8, #2
   12598:	eor	lr, r6, r8
   1259c:	rev	r1, r1
   125a0:	and	lr, lr, r7
   125a4:	eor	lr, lr, r6
   125a8:	str	r1, [sp, #32]
   125ac:	add	r1, r1, r3
   125b0:	add	r2, r1, r2
   125b4:	ldr	r1, [sp, #44]	; 0x2c
   125b8:	add	r4, r4, r2
   125bc:	rev	r2, r9
   125c0:	ldr	r9, [sp, #148]	; 0x94
   125c4:	add	r4, r4, r7, ror #27
   125c8:	str	r2, [sp, #36]	; 0x24
   125cc:	add	r2, r2, r3
   125d0:	ror	r7, r7, #2
   125d4:	add	r5, r2, r5
   125d8:	add	lr, lr, r5
   125dc:	eor	ip, r8, r7
   125e0:	and	ip, ip, r4
   125e4:	add	lr, lr, r4, ror #27
   125e8:	rev	r2, r9
   125ec:	eor	ip, ip, r8
   125f0:	ror	r4, r4, #2
   125f4:	str	r2, [sp, #40]	; 0x28
   125f8:	add	r2, r2, r3
   125fc:	eor	r0, r7, r4
   12600:	add	r6, r2, r6
   12604:	ldr	r2, [sp, #4]
   12608:	and	r0, r0, lr
   1260c:	eor	r0, r0, r7
   12610:	add	ip, ip, r6
   12614:	add	ip, ip, lr, ror #27
   12618:	ror	lr, lr, #2
   1261c:	eor	r5, r2, fp
   12620:	ldr	r2, [sp, #32]
   12624:	eor	r5, r5, sl
   12628:	eor	r5, r5, r2
   1262c:	ror	r2, r5, #31
   12630:	str	r2, [sp, #4]
   12634:	add	r2, r2, r3
   12638:	add	r8, r2, r8
   1263c:	ldr	r2, [sp, #8]
   12640:	add	r0, r0, r8
   12644:	add	r0, r0, ip, ror #27
   12648:	eor	r2, r2, r1
   1264c:	ldr	r1, [sp, #16]
   12650:	eor	r2, r2, r1
   12654:	ldr	r1, [sp, #36]	; 0x24
   12658:	eor	r2, r2, r1
   1265c:	eor	r1, r4, lr
   12660:	ror	r2, r2, #31
   12664:	and	r1, r1, ip
   12668:	ror	ip, ip, #2
   1266c:	eor	r1, r1, r4
   12670:	str	r2, [sp, #8]
   12674:	add	r2, r2, r3
   12678:	add	r7, r2, r7
   1267c:	ldr	r5, [sp, #20]
   12680:	add	r1, r1, r7
   12684:	ldr	r2, [sp, #48]	; 0x30
   12688:	add	r1, r1, r0, ror #27
   1268c:	eor	r2, fp, r2
   12690:	eor	r2, r2, r5
   12694:	ldr	r5, [sp, #40]	; 0x28
   12698:	eor	r2, r2, r5
   1269c:	ror	r2, r2, #31
   126a0:	str	r2, [sp, #12]
   126a4:	eor	r2, lr, ip
   126a8:	ldr	r5, [sp, #12]
   126ac:	and	r2, r2, r0
   126b0:	ror	r0, r0, #2
   126b4:	eor	r2, r2, lr
   126b8:	add	r5, r5, r3
   126bc:	add	r4, r5, r4
   126c0:	ldr	r5, [sp, #52]	; 0x34
   126c4:	add	r2, r2, r4
   126c8:	ldr	r4, [sp, #44]	; 0x2c
   126cc:	add	r2, r2, r1, ror #27
   126d0:	eor	r4, r4, r5
   126d4:	ldr	r5, [sp, #24]
   126d8:	eor	r4, r4, r5
   126dc:	ldr	r5, [sp, #4]
   126e0:	eor	r4, r4, r5
   126e4:	eor	r5, ip, r0
   126e8:	ror	r4, r4, #31
   126ec:	and	r5, r5, r1
   126f0:	eor	r5, r5, ip
   126f4:	ror	r1, r1, #2
   126f8:	add	r3, r4, r3
   126fc:	add	r3, r3, lr
   12700:	ldr	lr, [sp, #56]	; 0x38
   12704:	eor	r6, r0, r1
   12708:	add	r5, r5, r3
   1270c:	eor	r6, r6, r2
   12710:	ldr	r3, [sp, #48]	; 0x30
   12714:	add	r5, r5, r2, ror #27
   12718:	ror	r2, r2, #2
   1271c:	eor	r9, r1, r2
   12720:	eor	r9, r9, r5
   12724:	eor	lr, r3, lr
   12728:	ldr	r3, [sp, #28]
   1272c:	eor	lr, lr, r3
   12730:	ldr	r3, [sp, #8]
   12734:	eor	lr, lr, r3
   12738:	ldr	r3, [pc, #3080]	; 13348 <fputs@plt+0x2484>
   1273c:	ror	lr, lr, #31
   12740:	add	r7, lr, r3
   12744:	add	ip, r7, ip
   12748:	ldr	r7, [sp, #60]	; 0x3c
   1274c:	add	r6, r6, ip
   12750:	ldr	ip, [sp, #52]	; 0x34
   12754:	add	r6, r6, r5, ror #27
   12758:	ror	r5, r5, #2
   1275c:	eor	ip, ip, r7
   12760:	ldr	r7, [sp, #32]
   12764:	eor	ip, ip, r7
   12768:	ldr	r7, [sp, #12]
   1276c:	eor	ip, ip, r7
   12770:	ror	ip, ip, #31
   12774:	add	r7, ip, r3
   12778:	add	r0, r7, r0
   1277c:	ldr	r7, [sp, #36]	; 0x24
   12780:	add	r9, r9, r0
   12784:	ldr	r0, [sp, #56]	; 0x38
   12788:	add	r9, r9, r6, ror #27
   1278c:	eor	r0, r0, sl
   12790:	eor	r0, r0, r7
   12794:	eor	r7, r2, r5
   12798:	eor	r0, r0, r4
   1279c:	eor	r7, r7, r6
   127a0:	ror	r6, r6, #2
   127a4:	ror	r0, r0, #31
   127a8:	eor	fp, r5, r6
   127ac:	add	r8, r0, r3
   127b0:	eor	fp, fp, r9
   127b4:	add	r1, r8, r1
   127b8:	ldr	r8, [sp, #16]
   127bc:	add	r7, r7, r1
   127c0:	ldr	r1, [sp, #60]	; 0x3c
   127c4:	add	r7, r7, r9, ror #27
   127c8:	ror	r9, r9, #2
   127cc:	eor	r1, r1, r8
   127d0:	ldr	r8, [sp, #40]	; 0x28
   127d4:	eor	r1, r1, r8
   127d8:	eor	r1, r1, lr
   127dc:	ror	r1, r1, #31
   127e0:	add	r8, r1, r3
   127e4:	add	r2, r8, r2
   127e8:	ldr	r8, [sp, #4]
   127ec:	add	fp, fp, r2
   127f0:	ldr	r2, [sp, #20]
   127f4:	add	fp, fp, r7, ror #27
   127f8:	eor	r2, sl, r2
   127fc:	eor	r2, r2, r8
   12800:	eor	r8, r6, r9
   12804:	eor	r2, r2, ip
   12808:	eor	r8, r8, r7
   1280c:	ror	r7, r7, #2
   12810:	ror	r2, r2, #31
   12814:	add	sl, r2, r3
   12818:	add	r5, sl, r5
   1281c:	ldr	sl, [sp, #24]
   12820:	add	r5, r8, r5
   12824:	ldr	r8, [sp, #16]
   12828:	add	r5, r5, fp, ror #27
   1282c:	eor	r8, r8, sl
   12830:	ldr	sl, [sp, #8]
   12834:	eor	r8, r8, sl
   12838:	eor	r8, r8, r0
   1283c:	ror	r8, r8, #31
   12840:	str	r8, [sp, #16]
   12844:	eor	r8, r9, r7
   12848:	ldr	sl, [sp, #16]
   1284c:	eor	r8, r8, fp
   12850:	ror	fp, fp, #2
   12854:	add	sl, sl, r3
   12858:	add	r6, sl, r6
   1285c:	ldr	sl, [sp, #28]
   12860:	add	r8, r8, r6
   12864:	ldr	r6, [sp, #20]
   12868:	add	r8, r8, r5, ror #27
   1286c:	eor	r6, r6, sl
   12870:	ldr	sl, [sp, #12]
   12874:	eor	r6, r6, sl
   12878:	eor	sl, r7, fp
   1287c:	eor	r6, r6, r1
   12880:	eor	sl, sl, r5
   12884:	ror	r5, r5, #2
   12888:	ror	r6, r6, #31
   1288c:	str	r6, [sp, #20]
   12890:	add	r6, r6, r3
   12894:	add	r9, r6, r9
   12898:	ldr	r6, [sp, #24]
   1289c:	add	sl, sl, r9
   128a0:	ldr	r9, [sp, #32]
   128a4:	add	sl, sl, r8, ror #27
   128a8:	eor	r6, r6, r9
   128ac:	eor	r9, fp, r5
   128b0:	eor	r6, r6, r4
   128b4:	eor	r9, r9, r8
   128b8:	ror	r8, r8, #2
   128bc:	eor	r6, r6, r2
   128c0:	ror	r6, r6, #31
   128c4:	str	r6, [sp, #24]
   128c8:	add	r6, r6, r3
   128cc:	add	r7, r6, r7
   128d0:	ldr	r6, [sp, #28]
   128d4:	add	r7, r9, r7
   128d8:	ldr	r9, [sp, #36]	; 0x24
   128dc:	add	r7, r7, sl, ror #27
   128e0:	eor	r6, r6, r9
   128e4:	ldr	r9, [sp, #16]
   128e8:	eor	r6, r6, lr
   128ec:	eor	r6, r6, r9
   128f0:	ror	r6, r6, #31
   128f4:	str	r6, [sp, #28]
   128f8:	eor	r6, r5, r8
   128fc:	ldr	r9, [sp, #28]
   12900:	eor	r6, r6, sl
   12904:	ror	sl, sl, #2
   12908:	add	r9, r9, r3
   1290c:	add	fp, r9, fp
   12910:	ldr	r9, [sp, #32]
   12914:	add	r6, r6, fp
   12918:	ldr	fp, [sp, #40]	; 0x28
   1291c:	add	r6, r6, r7, ror #27
   12920:	eor	r9, r9, fp
   12924:	ldr	fp, [sp, #20]
   12928:	eor	r9, r9, ip
   1292c:	eor	r9, r9, fp
   12930:	ror	r9, r9, #31
   12934:	str	r9, [sp, #32]
   12938:	eor	r9, r8, sl
   1293c:	ldr	fp, [sp, #32]
   12940:	eor	r9, r9, r7
   12944:	ror	r7, r7, #2
   12948:	add	fp, fp, r3
   1294c:	add	r5, fp, r5
   12950:	ldr	fp, [sp, #36]	; 0x24
   12954:	add	r5, r9, r5
   12958:	ldr	r9, [sp, #4]
   1295c:	add	r5, r5, r6, ror #27
   12960:	eor	r9, r9, fp
   12964:	ldr	fp, [sp, #24]
   12968:	eor	r9, r9, r0
   1296c:	eor	r9, r9, fp
   12970:	ror	r9, r9, #31
   12974:	str	r9, [sp, #36]	; 0x24
   12978:	eor	r9, sl, r7
   1297c:	ldr	fp, [sp, #36]	; 0x24
   12980:	eor	r9, r9, r6
   12984:	ror	r6, r6, #2
   12988:	add	fp, fp, r3
   1298c:	add	r8, fp, r8
   12990:	ldr	fp, [sp, #40]	; 0x28
   12994:	add	r8, r9, r8
   12998:	ldr	r9, [sp, #8]
   1299c:	add	r8, r8, r5, ror #27
   129a0:	eor	r9, r9, fp
   129a4:	ldr	fp, [sp, #28]
   129a8:	eor	r9, r9, r1
   129ac:	eor	r9, r9, fp
   129b0:	ror	r9, r9, #31
   129b4:	str	r9, [sp, #40]	; 0x28
   129b8:	eor	r9, r7, r6
   129bc:	ldr	fp, [sp, #40]	; 0x28
   129c0:	eor	r9, r9, r5
   129c4:	add	fp, fp, r3
   129c8:	add	sl, fp, sl
   129cc:	ldr	fp, [sp, #12]
   129d0:	add	sl, r9, sl
   129d4:	ror	r9, r5, #2
   129d8:	ldr	r5, [sp, #4]
   129dc:	add	sl, sl, r8, ror #27
   129e0:	eor	r5, r5, fp
   129e4:	ldr	fp, [sp, #32]
   129e8:	eor	r5, r5, r2
   129ec:	eor	r5, r5, fp
   129f0:	ror	r5, r5, #31
   129f4:	str	r5, [sp, #4]
   129f8:	eor	r5, r6, r9
   129fc:	ldr	fp, [sp, #4]
   12a00:	eor	r5, r5, r8
   12a04:	ror	r8, r8, #2
   12a08:	add	fp, fp, r3
   12a0c:	add	r7, fp, r7
   12a10:	ldr	fp, [sp, #16]
   12a14:	add	r7, r5, r7
   12a18:	ldr	r5, [sp, #8]
   12a1c:	add	r7, r7, sl, ror #27
   12a20:	eor	r5, r5, r4
   12a24:	eor	r4, r4, ip
   12a28:	eor	r5, r5, fp
   12a2c:	ldr	fp, [sp, #36]	; 0x24
   12a30:	eor	ip, ip, r1
   12a34:	eor	r5, r5, fp
   12a38:	eor	fp, r9, r8
   12a3c:	ror	r5, r5, #31
   12a40:	eor	fp, fp, sl
   12a44:	ror	sl, sl, #2
   12a48:	str	r5, [sp, #8]
   12a4c:	add	r5, r5, r3
   12a50:	add	r6, r5, r6
   12a54:	ldr	r5, [sp, #12]
   12a58:	add	r6, fp, r6
   12a5c:	add	fp, r6, r7, ror #27
   12a60:	ldr	r6, [sp, #20]
   12a64:	eor	r5, r5, lr
   12a68:	eor	lr, lr, r0
   12a6c:	eor	r0, r0, r2
   12a70:	eor	r5, r5, r6
   12a74:	ldr	r6, [sp, #40]	; 0x28
   12a78:	eor	r5, r5, r6
   12a7c:	eor	r6, r8, sl
   12a80:	ror	r5, r5, #31
   12a84:	eor	r6, r6, r7
   12a88:	ror	r7, r7, #2
   12a8c:	str	r5, [sp, #12]
   12a90:	add	r5, r5, r3
   12a94:	add	r5, r5, r9
   12a98:	add	r5, r6, r5
   12a9c:	add	r6, r5, fp, ror #27
   12aa0:	ldr	r5, [sp, #24]
   12aa4:	eor	r4, r4, r5
   12aa8:	ldr	r5, [sp, #4]
   12aac:	eor	r4, r4, r5
   12ab0:	ror	r9, r4, #31
   12ab4:	eor	r4, sl, r7
   12ab8:	eor	r4, r4, fp
   12abc:	ror	fp, fp, #2
   12ac0:	add	r5, r9, r3
   12ac4:	add	r8, r5, r8
   12ac8:	ldr	r5, [sp, #28]
   12acc:	add	r8, r4, r8
   12ad0:	add	r4, r8, r6, ror #27
   12ad4:	eor	lr, lr, r5
   12ad8:	ldr	r5, [sp, #8]
   12adc:	eor	lr, lr, r5
   12ae0:	ror	lr, lr, #31
   12ae4:	str	lr, [sp, #44]	; 0x2c
   12ae8:	eor	lr, r7, fp
   12aec:	ldr	r5, [sp, #44]	; 0x2c
   12af0:	eor	lr, lr, r6
   12af4:	ror	r6, r6, #2
   12af8:	add	r5, r5, r3
   12afc:	add	sl, r5, sl
   12b00:	ldr	r5, [sp, #32]
   12b04:	add	sl, lr, sl
   12b08:	add	lr, sl, r4, ror #27
   12b0c:	eor	ip, ip, r5
   12b10:	ldr	r5, [sp, #12]
   12b14:	eor	ip, ip, r5
   12b18:	ror	ip, ip, #31
   12b1c:	str	ip, [sp, #48]	; 0x30
   12b20:	eor	ip, fp, r6
   12b24:	ldr	r5, [sp, #48]	; 0x30
   12b28:	eor	ip, ip, r4
   12b2c:	ror	r4, r4, #2
   12b30:	add	r5, r5, r3
   12b34:	add	r7, r5, r7
   12b38:	ldr	r5, [sp, #36]	; 0x24
   12b3c:	add	r7, ip, r7
   12b40:	add	ip, r7, lr, ror #27
   12b44:	eor	r0, r0, r5
   12b48:	eor	r0, r0, r9
   12b4c:	ror	r0, r0, #31
   12b50:	str	r0, [sp, #52]	; 0x34
   12b54:	eor	r0, r6, r4
   12b58:	ldr	r5, [sp, #52]	; 0x34
   12b5c:	eor	r0, r0, lr
   12b60:	ror	lr, lr, #2
   12b64:	add	r5, r5, r3
   12b68:	add	fp, r5, fp
   12b6c:	ldr	r5, [sp, #16]
   12b70:	add	fp, r0, fp
   12b74:	add	r0, fp, ip, ror #27
   12b78:	eor	r1, r1, r5
   12b7c:	ldr	r5, [sp, #40]	; 0x28
   12b80:	eor	r1, r1, r5
   12b84:	ldr	r5, [sp, #44]	; 0x2c
   12b88:	eor	r1, r1, r5
   12b8c:	ror	r1, r1, #31
   12b90:	str	r1, [sp, #56]	; 0x38
   12b94:	eor	r1, r4, lr
   12b98:	ldr	r5, [sp, #56]	; 0x38
   12b9c:	eor	r1, r1, ip
   12ba0:	ror	ip, ip, #2
   12ba4:	add	r3, r5, r3
   12ba8:	add	r6, r3, r6
   12bac:	ldr	r3, [sp, #20]
   12bb0:	add	r6, r1, r6
   12bb4:	add	r1, r6, r0, ror #27
   12bb8:	eor	r2, r2, r3
   12bbc:	ldr	r3, [sp, #4]
   12bc0:	eor	r2, r2, r3
   12bc4:	ldr	r3, [sp, #48]	; 0x30
   12bc8:	eor	r2, r2, r3
   12bcc:	ror	r3, r2, #31
   12bd0:	orr	r2, r0, ip
   12bd4:	and	r2, r2, lr
   12bd8:	str	r3, [sp, #60]	; 0x3c
   12bdc:	and	r3, r0, ip
   12be0:	ror	r0, r0, #2
   12be4:	orr	r2, r2, r3
   12be8:	ldr	r3, [pc, #1884]	; 1334c <fputs@plt+0x2488>
   12bec:	orr	r6, r1, r0
   12bf0:	ldr	r5, [sp, #60]	; 0x3c
   12bf4:	add	r5, r5, r3
   12bf8:	add	r4, r5, r4
   12bfc:	ldr	r5, [sp, #24]
   12c00:	add	r4, r2, r4
   12c04:	add	r2, r4, r1, ror #27
   12c08:	ldr	r4, [sp, #16]
   12c0c:	eor	r8, r4, r5
   12c10:	ldr	r4, [sp, #8]
   12c14:	eor	r8, r8, r4
   12c18:	ldr	r4, [sp, #52]	; 0x34
   12c1c:	eor	r8, r8, r4
   12c20:	ror	r4, r8, #31
   12c24:	str	r4, [sp, #16]
   12c28:	and	r4, r6, ip
   12c2c:	and	r6, r1, r0
   12c30:	orr	r6, r4, r6
   12c34:	ldr	r4, [sp, #16]
   12c38:	ror	r1, r1, #2
   12c3c:	ldr	r5, [sp, #28]
   12c40:	add	r4, r4, r3
   12c44:	add	lr, r4, lr
   12c48:	ldr	r4, [sp, #20]
   12c4c:	add	lr, r6, lr
   12c50:	add	lr, lr, r2, ror #27
   12c54:	eor	r6, r4, r5
   12c58:	ldr	r4, [sp, #12]
   12c5c:	orr	r5, r2, r1
   12c60:	eor	r6, r6, r4
   12c64:	ldr	r4, [sp, #56]	; 0x38
   12c68:	eor	r6, r6, r4
   12c6c:	ror	r4, r6, #31
   12c70:	str	r4, [sp, #20]
   12c74:	and	r4, r5, r0
   12c78:	and	r5, r2, r1
   12c7c:	orr	r5, r4, r5
   12c80:	ldr	r4, [sp, #20]
   12c84:	ror	r2, r2, #2
   12c88:	add	r4, r4, r3
   12c8c:	add	ip, r4, ip
   12c90:	ldr	r4, [sp, #32]
   12c94:	add	ip, r5, ip
   12c98:	add	r5, ip, lr, ror #27
   12c9c:	ldr	ip, [sp, #24]
   12ca0:	eor	r6, ip, r4
   12ca4:	ldr	r4, [sp, #36]	; 0x24
   12ca8:	eor	r6, r6, r9
   12cac:	ldr	ip, [sp, #60]	; 0x3c
   12cb0:	eor	r6, r6, ip
   12cb4:	ror	ip, r6, #31
   12cb8:	orr	r6, lr, r2
   12cbc:	str	ip, [sp, #24]
   12cc0:	and	ip, r6, r1
   12cc4:	and	r6, lr, r2
   12cc8:	orr	r6, ip, r6
   12ccc:	ldr	ip, [sp, #24]
   12cd0:	ror	lr, lr, #2
   12cd4:	orr	r7, r5, lr
   12cd8:	add	ip, ip, r3
   12cdc:	add	r0, ip, r0
   12ce0:	ldr	ip, [sp, #28]
   12ce4:	add	r0, r6, r0
   12ce8:	add	r0, r0, r5, ror #27
   12cec:	eor	r6, ip, r4
   12cf0:	ldr	ip, [sp, #44]	; 0x2c
   12cf4:	eor	r6, r6, ip
   12cf8:	ldr	ip, [sp, #16]
   12cfc:	eor	r6, r6, ip
   12d00:	ror	ip, r6, #31
   12d04:	str	ip, [sp, #28]
   12d08:	and	ip, r7, r2
   12d0c:	and	r7, r5, lr
   12d10:	orr	r7, ip, r7
   12d14:	ldr	ip, [sp, #28]
   12d18:	ror	r5, r5, #2
   12d1c:	orr	r4, r0, r5
   12d20:	add	ip, ip, r3
   12d24:	add	r1, ip, r1
   12d28:	ldr	ip, [sp, #40]	; 0x28
   12d2c:	add	r1, r7, r1
   12d30:	add	r7, r1, r0, ror #27
   12d34:	ldr	r1, [sp, #32]
   12d38:	eor	r1, r1, ip
   12d3c:	ldr	ip, [sp, #48]	; 0x30
   12d40:	eor	r1, r1, ip
   12d44:	ldr	ip, [sp, #20]
   12d48:	eor	r1, r1, ip
   12d4c:	ror	r1, r1, #31
   12d50:	str	r1, [sp, #32]
   12d54:	and	r1, r4, lr
   12d58:	and	r4, r0, r5
   12d5c:	orr	r4, r1, r4
   12d60:	ldr	r1, [sp, #32]
   12d64:	ror	r0, r0, #2
   12d68:	add	r1, r1, r3
   12d6c:	add	r2, r1, r2
   12d70:	ldr	r1, [sp, #4]
   12d74:	add	r4, r4, r2
   12d78:	ldr	r2, [sp, #36]	; 0x24
   12d7c:	add	r4, r4, r7, ror #27
   12d80:	eor	r1, r2, r1
   12d84:	ldr	r2, [sp, #52]	; 0x34
   12d88:	eor	r1, r1, r2
   12d8c:	ldr	r2, [sp, #24]
   12d90:	eor	r1, r1, r2
   12d94:	ror	r2, r1, #31
   12d98:	str	r2, [sp, #36]	; 0x24
   12d9c:	orr	r2, r7, r0
   12da0:	and	r1, r2, r5
   12da4:	and	r2, r7, r0
   12da8:	ror	r7, r7, #2
   12dac:	orr	r2, r1, r2
   12db0:	ldr	r1, [sp, #36]	; 0x24
   12db4:	orr	sl, r4, r7
   12db8:	add	r1, r1, r3
   12dbc:	add	lr, r1, lr
   12dc0:	ldr	r1, [sp, #8]
   12dc4:	add	lr, r2, lr
   12dc8:	ldr	r2, [sp, #40]	; 0x28
   12dcc:	add	lr, lr, r4, ror #27
   12dd0:	eor	r2, r2, r1
   12dd4:	ldr	r1, [sp, #56]	; 0x38
   12dd8:	eor	r2, r2, r1
   12ddc:	ldr	r1, [sp, #28]
   12de0:	eor	r2, r2, r1
   12de4:	ldr	r1, [sp, #12]
   12de8:	ror	r2, r2, #31
   12dec:	str	r2, [sp, #40]	; 0x28
   12df0:	and	r2, sl, r0
   12df4:	and	sl, r4, r7
   12df8:	orr	sl, r2, sl
   12dfc:	ldr	r2, [sp, #40]	; 0x28
   12e00:	ror	r4, r4, #2
   12e04:	orr	fp, lr, r4
   12e08:	add	r2, r2, r3
   12e0c:	add	r5, r2, r5
   12e10:	ldr	r2, [sp, #4]
   12e14:	add	sl, sl, r5
   12e18:	add	sl, sl, lr, ror #27
   12e1c:	eor	r1, r2, r1
   12e20:	ldr	r2, [sp, #60]	; 0x3c
   12e24:	eor	r1, r1, r2
   12e28:	ldr	r2, [sp, #32]
   12e2c:	eor	r1, r1, r2
   12e30:	ror	r2, r1, #31
   12e34:	ldr	r1, [sp, #16]
   12e38:	str	r2, [sp, #4]
   12e3c:	and	r2, fp, r7
   12e40:	and	fp, lr, r4
   12e44:	orr	fp, r2, fp
   12e48:	ldr	r2, [sp, #4]
   12e4c:	ror	lr, lr, #2
   12e50:	orr	r8, sl, lr
   12e54:	add	r2, r2, r3
   12e58:	add	r0, r2, r0
   12e5c:	ldr	r2, [sp, #8]
   12e60:	add	fp, fp, r0
   12e64:	add	fp, fp, sl, ror #27
   12e68:	eor	r2, r2, r9
   12e6c:	eor	r2, r2, r1
   12e70:	ldr	r1, [sp, #36]	; 0x24
   12e74:	eor	r2, r2, r1
   12e78:	ldr	r1, [sp, #44]	; 0x2c
   12e7c:	ror	r2, r2, #31
   12e80:	str	r2, [sp, #8]
   12e84:	and	r2, r8, r4
   12e88:	and	r8, sl, lr
   12e8c:	orr	r8, r2, r8
   12e90:	ldr	r2, [sp, #8]
   12e94:	ror	sl, sl, #2
   12e98:	add	r2, r2, r3
   12e9c:	add	r7, r2, r7
   12ea0:	ldr	r2, [sp, #12]
   12ea4:	add	r8, r8, r7
   12ea8:	orr	r7, fp, sl
   12eac:	add	r8, r8, fp, ror #27
   12eb0:	eor	ip, r2, r1
   12eb4:	ldr	r2, [sp, #20]
   12eb8:	eor	ip, ip, r2
   12ebc:	ldr	r2, [sp, #40]	; 0x28
   12ec0:	eor	ip, ip, r2
   12ec4:	ror	r2, ip, #31
   12ec8:	str	r2, [sp, #12]
   12ecc:	and	r2, r7, lr
   12ed0:	and	r7, fp, sl
   12ed4:	orr	r7, r2, r7
   12ed8:	ldr	r2, [sp, #12]
   12edc:	ror	fp, fp, #2
   12ee0:	orr	r6, r8, fp
   12ee4:	add	r2, r2, r3
   12ee8:	add	r4, r2, r4
   12eec:	ldr	r2, [sp, #48]	; 0x30
   12ef0:	add	r7, r7, r4
   12ef4:	and	r4, r6, sl
   12ef8:	and	r6, r8, fp
   12efc:	add	r7, r7, r8, ror #27
   12f00:	orr	r6, r4, r6
   12f04:	ror	r8, r8, #2
   12f08:	eor	r0, r9, r2
   12f0c:	ldr	r2, [sp, #24]
   12f10:	eor	r0, r0, r2
   12f14:	ldr	r2, [sp, #4]
   12f18:	eor	r0, r0, r2
   12f1c:	ror	r2, r0, #31
   12f20:	add	r4, r2, r3
   12f24:	str	r2, [sp, #64]	; 0x40
   12f28:	mov	r2, r1
   12f2c:	add	r4, r4, lr
   12f30:	ldr	r1, [sp, #52]	; 0x34
   12f34:	add	r4, r6, r4
   12f38:	orr	lr, r7, r8
   12f3c:	and	r5, lr, fp
   12f40:	and	lr, r7, r8
   12f44:	add	r4, r4, r7, ror #27
   12f48:	orr	lr, r5, lr
   12f4c:	ror	r7, r7, #2
   12f50:	eor	r6, r2, r1
   12f54:	ldr	r2, [sp, #28]
   12f58:	ldr	r1, [sp, #56]	; 0x38
   12f5c:	eor	r6, r6, r2
   12f60:	ldr	r2, [sp, #8]
   12f64:	eor	r6, r6, r2
   12f68:	ror	r2, r6, #31
   12f6c:	ror	r6, r4, #2
   12f70:	add	r5, r2, r3
   12f74:	str	r2, [sp, #44]	; 0x2c
   12f78:	add	sl, r5, sl
   12f7c:	ldr	r2, [sp, #48]	; 0x30
   12f80:	add	lr, lr, sl
   12f84:	add	lr, lr, r4, ror #27
   12f88:	eor	r5, r2, r1
   12f8c:	ldr	r2, [sp, #32]
   12f90:	eor	r5, r5, r2
   12f94:	ldr	r2, [sp, #12]
   12f98:	ldr	r0, [sp, #16]
   12f9c:	ldr	ip, [sp, #20]
   12fa0:	eor	r5, r5, r2
   12fa4:	orr	r2, r4, r7
   12fa8:	ror	sl, r5, #31
   12fac:	and	r1, r2, r8
   12fb0:	and	r2, r4, r7
   12fb4:	orr	r2, r1, r2
   12fb8:	ror	r5, lr, #2
   12fbc:	add	r1, sl, r3
   12fc0:	add	fp, r1, fp
   12fc4:	ldr	r1, [sp, #60]	; 0x3c
   12fc8:	add	fp, r2, fp
   12fcc:	ldr	r2, [sp, #52]	; 0x34
   12fd0:	add	fp, fp, lr, ror #27
   12fd4:	eor	r1, r2, r1
   12fd8:	ldr	r2, [sp, #36]	; 0x24
   12fdc:	eor	r1, r1, r2
   12fe0:	ldr	r2, [sp, #64]	; 0x40
   12fe4:	eor	r1, r1, r2
   12fe8:	ror	r2, r1, #31
   12fec:	orr	r1, lr, r6
   12ff0:	str	r2, [sp, #48]	; 0x30
   12ff4:	and	r2, r1, r7
   12ff8:	and	r1, lr, r6
   12ffc:	orr	r1, r2, r1
   13000:	ldr	r2, [sp, #48]	; 0x30
   13004:	add	r2, r2, r3
   13008:	add	r8, r2, r8
   1300c:	ldr	r2, [sp, #56]	; 0x38
   13010:	add	r1, r1, r8
   13014:	add	r1, r1, fp, ror #27
   13018:	eor	r2, r2, r0
   1301c:	ldr	r0, [sp, #40]	; 0x28
   13020:	eor	r2, r2, r0
   13024:	ldr	r0, [sp, #44]	; 0x2c
   13028:	eor	r2, r2, r0
   1302c:	ror	r8, r2, #31
   13030:	orr	r2, fp, r5
   13034:	and	r0, r2, r6
   13038:	and	r2, fp, r5
   1303c:	ror	fp, fp, #2
   13040:	orr	r2, r0, r2
   13044:	add	r0, r8, r3
   13048:	add	r7, r0, r7
   1304c:	ldr	r0, [sp, #60]	; 0x3c
   13050:	add	r2, r2, r7
   13054:	add	r2, r2, r1, ror #27
   13058:	eor	r4, r0, ip
   1305c:	ldr	r0, [sp, #4]
   13060:	ldr	ip, [sp, #24]
   13064:	eor	r4, r4, r0
   13068:	eor	r4, r4, sl
   1306c:	ror	r0, r4, #31
   13070:	orr	r4, r1, fp
   13074:	str	r0, [sp, #52]	; 0x34
   13078:	and	r0, r4, r5
   1307c:	and	r4, r1, fp
   13080:	orr	r4, r0, r4
   13084:	ldr	r0, [sp, #52]	; 0x34
   13088:	ror	r1, r1, #2
   1308c:	add	r0, r0, r3
   13090:	add	r6, r0, r6
   13094:	ldr	r0, [sp, #16]
   13098:	add	r4, r4, r6
   1309c:	add	r4, r4, r2, ror #27
   130a0:	eor	lr, r0, ip
   130a4:	ldr	r0, [sp, #8]
   130a8:	ldr	ip, [sp, #28]
   130ac:	eor	lr, lr, r0
   130b0:	ldr	r0, [sp, #48]	; 0x30
   130b4:	eor	lr, lr, r0
   130b8:	ror	r0, lr, #31
   130bc:	orr	lr, r2, r1
   130c0:	str	r0, [sp, #16]
   130c4:	and	r0, lr, fp
   130c8:	and	lr, r2, r1
   130cc:	orr	lr, r0, lr
   130d0:	ldr	r0, [sp, #16]
   130d4:	ror	r2, r2, #2
   130d8:	orr	r9, r4, r2
   130dc:	add	r0, r0, r3
   130e0:	add	r5, r0, r5
   130e4:	ldr	r0, [sp, #20]
   130e8:	add	lr, lr, r5
   130ec:	add	lr, lr, r4, ror #27
   130f0:	eor	r5, r0, ip
   130f4:	ldr	r0, [sp, #12]
   130f8:	ldr	ip, [sp, #32]
   130fc:	eor	r5, r5, r0
   13100:	eor	r5, r5, r8
   13104:	ror	r0, r5, #31
   13108:	str	r0, [sp, #20]
   1310c:	and	r0, r9, r1
   13110:	and	r9, r4, r2
   13114:	orr	r9, r0, r9
   13118:	ldr	r0, [sp, #20]
   1311c:	ror	r4, r4, #2
   13120:	and	r7, lr, r4
   13124:	add	r0, r0, r3
   13128:	add	fp, r0, fp
   1312c:	ldr	r0, [sp, #24]
   13130:	add	r9, r9, fp
   13134:	add	r9, r9, lr, ror #27
   13138:	eor	r0, r0, ip
   1313c:	ldr	ip, [sp, #64]	; 0x40
   13140:	eor	r0, r0, ip
   13144:	ldr	ip, [sp, #52]	; 0x34
   13148:	eor	r0, r0, ip
   1314c:	ror	r0, r0, #31
   13150:	str	r0, [sp, #24]
   13154:	orr	r0, lr, r4
   13158:	ror	lr, lr, #2
   1315c:	and	r0, r0, r2
   13160:	orr	r7, r0, r7
   13164:	ldr	r0, [sp, #24]
   13168:	eor	ip, r4, lr
   1316c:	eor	ip, ip, r9
   13170:	add	r3, r0, r3
   13174:	add	r3, r3, r1
   13178:	ldr	r1, [sp, #36]	; 0x24
   1317c:	add	r7, r7, r3
   13180:	ldr	r3, [sp, #28]
   13184:	add	r7, r7, r9, ror #27
   13188:	ror	r9, r9, #2
   1318c:	eor	r0, lr, r9
   13190:	eor	r0, r0, r7
   13194:	eor	r3, r3, r1
   13198:	ldr	r1, [sp, #44]	; 0x2c
   1319c:	eor	r3, r3, r1
   131a0:	ldr	r1, [sp, #16]
   131a4:	eor	r3, r3, r1
   131a8:	ror	r3, r3, #31
   131ac:	str	r3, [sp, #28]
   131b0:	ldr	r3, [pc, #408]	; 13350 <fputs@plt+0x248c>
   131b4:	ldr	r1, [sp, #28]
   131b8:	add	r1, r1, r3
   131bc:	add	r2, r1, r2
   131c0:	ldr	r1, [sp, #40]	; 0x28
   131c4:	add	ip, ip, r2
   131c8:	ldr	r2, [sp, #32]
   131cc:	add	ip, ip, r7, ror #27
   131d0:	ror	r7, r7, #2
   131d4:	eor	r6, r9, r7
   131d8:	eor	r6, r6, ip
   131dc:	eor	r2, r2, r1
   131e0:	ldr	r1, [sp, #20]
   131e4:	eor	r2, r2, sl
   131e8:	eor	r2, r2, r1
   131ec:	ldr	r1, [sp, #4]
   131f0:	ror	r2, r2, #31
   131f4:	str	r2, [sp, #32]
   131f8:	add	r2, r2, r3
   131fc:	add	r4, r2, r4
   13200:	ldr	r2, [sp, #36]	; 0x24
   13204:	add	r0, r0, r4
   13208:	add	r0, r0, ip, ror #27
   1320c:	ror	ip, ip, #2
   13210:	eor	r1, r2, r1
   13214:	ldr	r2, [sp, #48]	; 0x30
   13218:	eor	r5, r7, ip
   1321c:	eor	r5, r5, r0
   13220:	eor	r1, r1, r2
   13224:	ldr	r2, [sp, #24]
   13228:	eor	r1, r1, r2
   1322c:	ror	r2, r1, #31
   13230:	ldr	r1, [sp, #8]
   13234:	str	r2, [sp, #36]	; 0x24
   13238:	add	r2, r2, r3
   1323c:	add	lr, r2, lr
   13240:	ldr	r2, [sp, #40]	; 0x28
   13244:	add	r6, r6, lr
   13248:	ldr	lr, [sp, #64]	; 0x40
   1324c:	add	r6, r6, r0, ror #27
   13250:	ror	r0, r0, #2
   13254:	eor	r2, r2, r1
   13258:	ldr	r1, [sp, #28]
   1325c:	eor	r2, r2, r8
   13260:	eor	r2, r2, r1
   13264:	ldr	r1, [sp, #12]
   13268:	ror	r2, r2, #31
   1326c:	str	r2, [sp, #40]	; 0x28
   13270:	add	r2, r2, r3
   13274:	add	r9, r2, r9
   13278:	ldr	r2, [sp, #4]
   1327c:	add	r5, r5, r9
   13280:	add	r5, r5, r6, ror #27
   13284:	eor	r1, r2, r1
   13288:	ldr	r2, [sp, #52]	; 0x34
   1328c:	eor	r1, r1, r2
   13290:	ldr	r2, [sp, #32]
   13294:	eor	r1, r1, r2
   13298:	ror	r2, r1, #31
   1329c:	eor	r1, ip, r0
   132a0:	eor	r1, r1, r6
   132a4:	ror	r6, r6, #2
   132a8:	str	r2, [sp, #4]
   132ac:	add	r2, r2, r3
   132b0:	add	r7, r2, r7
   132b4:	ldr	r2, [sp, #8]
   132b8:	add	r1, r1, r7
   132bc:	add	r1, r1, r5, ror #27
   132c0:	eor	r2, r2, lr
   132c4:	ldr	lr, [sp, #16]
   132c8:	eor	r2, r2, lr
   132cc:	ldr	lr, [sp, #36]	; 0x24
   132d0:	eor	r2, r2, lr
   132d4:	ror	r2, r2, #31
   132d8:	str	r2, [sp, #8]
   132dc:	eor	r2, r0, r6
   132e0:	ldr	lr, [sp, #8]
   132e4:	eor	r2, r2, r5
   132e8:	ror	r5, r5, #2
   132ec:	eor	r4, r6, r5
   132f0:	eor	r4, r4, r1
   132f4:	add	lr, lr, r3
   132f8:	add	ip, lr, ip
   132fc:	add	r2, r2, ip
   13300:	ldr	ip, [sp, #12]
   13304:	add	r2, r2, r1, ror #27
   13308:	ldr	lr, [sp, #44]	; 0x2c
   1330c:	ror	r1, r1, #2
   13310:	eor	ip, ip, lr
   13314:	ldr	lr, [sp, #20]
   13318:	eor	ip, ip, lr
   1331c:	ldr	lr, [sp, #40]	; 0x28
   13320:	eor	ip, ip, lr
   13324:	ror	ip, ip, #31
   13328:	add	lr, ip, r3
   1332c:	add	r0, lr, r0
   13330:	ldr	lr, [sp, #24]
   13334:	add	r4, r4, r0
   13338:	ldr	r0, [sp, #64]	; 0x40
   1333c:	add	r4, r4, r2, ror #27
   13340:	b	13354 <fputs@plt+0x2490>
   13344:	bpl	fe0b19b0 <stderr@@GLIBC_2.4+0xfe08d8c0>
   13348:	vfnmsvs.f64	d30, d25, d17
   1334c:	svchi	0x001bbcdc
   13350:	bgt	18c3ab0 <stderr@@GLIBC_2.4+0x189f9c0>
   13354:	eor	r0, r0, sl
   13358:	eor	r0, r0, lr
   1335c:	ldr	lr, [sp, #4]
   13360:	eor	r0, r0, lr
   13364:	eor	lr, r5, r1
   13368:	ror	r0, r0, #31
   1336c:	eor	lr, lr, r2
   13370:	ror	r2, r2, #2
   13374:	add	r7, r0, r3
   13378:	add	r6, r7, r6
   1337c:	eor	fp, r1, r2
   13380:	add	lr, lr, r6
   13384:	ldrd	r6, [sp, #44]	; 0x2c
   13388:	eor	fp, fp, r4
   1338c:	add	lr, lr, r4, ror #27
   13390:	ror	r4, r4, #2
   13394:	eor	r6, r6, r7
   13398:	ldr	r7, [sp, #28]
   1339c:	eor	r6, r6, r7
   133a0:	ldr	r7, [sp, #8]
   133a4:	eor	r6, r6, r7
   133a8:	ror	r6, r6, #31
   133ac:	str	r6, [sp, #12]
   133b0:	add	r6, r6, r3
   133b4:	add	r5, r6, r5
   133b8:	ldr	r6, [sp, #32]
   133bc:	add	fp, fp, r5
   133c0:	eor	r5, sl, r8
   133c4:	eor	sl, r2, r4
   133c8:	add	fp, fp, lr, ror #27
   133cc:	eor	sl, sl, lr
   133d0:	ror	lr, lr, #2
   133d4:	eor	r5, r5, r6
   133d8:	eor	r9, r4, lr
   133dc:	eor	r5, r5, ip
   133e0:	eor	r9, r9, fp
   133e4:	ror	r5, r5, #31
   133e8:	str	r5, [sp, #44]	; 0x2c
   133ec:	add	r5, r5, r3
   133f0:	add	r1, r5, r1
   133f4:	ldr	r5, [sp, #52]	; 0x34
   133f8:	add	sl, sl, r1
   133fc:	ldr	r1, [sp, #48]	; 0x30
   13400:	add	sl, sl, fp, ror #27
   13404:	ror	fp, fp, #2
   13408:	eor	r1, r1, r5
   1340c:	ldr	r5, [sp, #36]	; 0x24
   13410:	eor	r1, r1, r5
   13414:	eor	r1, r1, r0
   13418:	ror	r1, r1, #31
   1341c:	add	r5, r1, r3
   13420:	add	r2, r5, r2
   13424:	ldr	r5, [sp, #40]	; 0x28
   13428:	add	r9, r9, r2
   1342c:	ldr	r2, [sp, #16]
   13430:	add	r9, r9, sl, ror #27
   13434:	eor	r2, r8, r2
   13438:	eor	r8, lr, fp
   1343c:	eor	r2, r2, r5
   13440:	ldr	r5, [sp, #12]
   13444:	eor	r8, r8, sl
   13448:	ror	sl, sl, #2
   1344c:	eor	r7, fp, sl
   13450:	eor	r7, r7, r9
   13454:	eor	r2, r2, r5
   13458:	ror	r2, r2, #31
   1345c:	add	r5, r2, r3
   13460:	add	r4, r5, r4
   13464:	ldr	r5, [sp, #20]
   13468:	add	r8, r8, r4
   1346c:	ldr	r4, [sp, #52]	; 0x34
   13470:	add	r8, r8, r9, ror #27
   13474:	ror	r9, r9, #2
   13478:	eor	r6, sl, r9
   1347c:	eor	r6, r6, r8
   13480:	eor	r4, r4, r5
   13484:	ldr	r5, [sp, #4]
   13488:	eor	r4, r4, r5
   1348c:	ldr	r5, [sp, #44]	; 0x2c
   13490:	eor	r4, r4, r5
   13494:	ror	r4, r4, #31
   13498:	add	r5, r4, r3
   1349c:	add	lr, r5, lr
   134a0:	ldr	r5, [sp, #24]
   134a4:	add	r7, r7, lr
   134a8:	ldr	lr, [sp, #16]
   134ac:	add	r7, r7, r8, ror #27
   134b0:	ror	r8, r8, #2
   134b4:	eor	lr, lr, r5
   134b8:	ldr	r5, [sp, #8]
   134bc:	eor	lr, lr, r5
   134c0:	eor	lr, lr, r1
   134c4:	ror	lr, lr, #31
   134c8:	add	r5, lr, r3
   134cc:	add	fp, r5, fp
   134d0:	ldr	r5, [sp, #20]
   134d4:	add	r6, r6, fp
   134d8:	ldr	fp, [sp, #28]
   134dc:	add	r6, r6, r7, ror #27
   134e0:	eor	r5, r5, fp
   134e4:	eor	ip, ip, r5
   134e8:	eor	r5, r9, r8
   134ec:	eor	ip, ip, r2
   134f0:	eor	r5, r5, r7
   134f4:	ror	r7, r7, #2
   134f8:	ror	ip, ip, #31
   134fc:	add	fp, ip, r3
   13500:	add	sl, fp, sl
   13504:	ldr	fp, [sp, #32]
   13508:	add	r5, r5, sl
   1350c:	ldr	sl, [sp, #24]
   13510:	add	r5, r5, r6, ror #27
   13514:	eor	sl, sl, fp
   13518:	eor	r0, r0, sl
   1351c:	eor	r4, r4, r0
   13520:	eor	r0, r8, r7
   13524:	ror	r4, r4, #31
   13528:	eor	r0, r0, r6
   1352c:	ror	r6, r6, #2
   13530:	add	sl, r4, r3
   13534:	add	r9, sl, r9
   13538:	ldr	sl, [sp, #36]	; 0x24
   1353c:	add	r0, r0, r9
   13540:	ldr	r9, [sp, #28]
   13544:	add	r0, r0, r5, ror #27
   13548:	eor	r9, r9, sl
   1354c:	ldr	sl, [sp, #12]
   13550:	eor	r9, r9, sl
   13554:	eor	lr, lr, r9
   13558:	eor	r9, r7, r6
   1355c:	ror	lr, lr, #31
   13560:	eor	r9, r9, r5
   13564:	ror	r5, r5, #2
   13568:	add	sl, lr, r3
   1356c:	add	r8, sl, r8
   13570:	ldr	sl, [sp, #40]	; 0x28
   13574:	add	r9, r9, r8
   13578:	mov	r8, fp
   1357c:	add	r9, r9, r0, ror #27
   13580:	eor	r8, r8, sl
   13584:	ldr	sl, [sp, #44]	; 0x2c
   13588:	eor	r8, r8, sl
   1358c:	eor	r8, r8, ip
   13590:	ldr	ip, [sp, #36]	; 0x24
   13594:	add	r8, r3, r8, ror #31
   13598:	add	r7, r8, r7
   1359c:	eor	r8, r6, r5
   135a0:	eor	r8, r8, r0
   135a4:	ror	r0, r0, #2
   135a8:	add	r7, r7, r8
   135ac:	ldr	r8, [sp, #4]
   135b0:	add	r7, r7, r9, ror #27
   135b4:	eor	ip, ip, r8
   135b8:	eor	r1, r1, ip
   135bc:	ldr	ip, [sp, #8]
   135c0:	eor	r1, r1, r4
   135c4:	add	r1, r3, r1, ror #31
   135c8:	add	r6, r1, r6
   135cc:	eor	r1, r5, r0
   135d0:	eor	r1, r1, r9
   135d4:	ror	r9, r9, #2
   135d8:	add	r6, r6, r1
   135dc:	ldr	r1, [sp, #40]	; 0x28
   135e0:	add	r6, r6, r7, ror #27
   135e4:	eor	r1, r1, ip
   135e8:	eor	r2, r2, r1
   135ec:	eor	lr, lr, r2
   135f0:	ldr	r2, [sp, #72]	; 0x48
   135f4:	add	r3, r2, r3
   135f8:	add	lr, r3, lr, ror #31
   135fc:	eor	r3, r0, r9
   13600:	eor	r3, r3, r7
   13604:	add	r5, lr, r5
   13608:	add	r5, r5, r3
   1360c:	ldr	r3, [sp]
   13610:	add	r5, r5, r6, ror #27
   13614:	str	r5, [r3]
   13618:	ldr	r3, [sp, #80]	; 0x50
   1361c:	add	r6, r3, r6
   13620:	ldr	r3, [sp]
   13624:	str	r6, [r3, #4]
   13628:	ldr	r3, [sp, #68]	; 0x44
   1362c:	add	r7, r3, r7, ror #2
   13630:	ldr	r3, [sp]
   13634:	str	r7, [r3, #8]
   13638:	ldr	r3, [sp, #76]	; 0x4c
   1363c:	add	r9, r3, r9
   13640:	ldr	r3, [sp]
   13644:	str	r9, [r3, #12]
   13648:	ldr	r3, [sp, #84]	; 0x54
   1364c:	add	r0, r3, r0
   13650:	ldr	r3, [sp]
   13654:	str	r0, [r3, #16]
   13658:	mov	r0, #0
   1365c:	add	sp, sp, #156	; 0x9c
   13660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13664:	ldr	r3, [pc, #40]	; 13694 <fputs@plt+0x27d0>
   13668:	mov	r2, #0
   1366c:	ldr	r1, [pc, #36]	; 13698 <fputs@plt+0x27d4>
   13670:	ldr	ip, [pc, #36]	; 1369c <fputs@plt+0x27d8>
   13674:	str	r3, [r0]
   13678:	ldr	r3, [pc, #32]	; 136a0 <fputs@plt+0x27dc>
   1367c:	stmib	r0, {r1, r3, ip}
   13680:	ldr	r3, [pc, #28]	; 136a4 <fputs@plt+0x27e0>
   13684:	str	r3, [r0, #16]
   13688:	mov	r3, #0
   1368c:	strd	r2, [r0, #24]
   13690:	bx	lr
   13694:	strbvs	r2, [r5, -r1, lsl #6]
   13698:	svc	0x00cdab89
   1369c:	eorsne	r5, r2, r6, ror r4
   136a0:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   136a4:	bicsgt	lr, r2, #240, 2	; 0x3c
   136a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136ac:	lsl	ip, r2, #3
   136b0:	mov	r6, r2
   136b4:	mov	r5, r0
   136b8:	mov	r7, r1
   136bc:	ldrd	r8, [r0, #24]
   136c0:	adds	r2, r8, ip
   136c4:	ubfx	r0, r8, #3, #6
   136c8:	adc	r3, r9, #0
   136cc:	strd	r2, [r5, #24]
   136d0:	add	r3, r0, r6
   136d4:	cmp	r3, #63	; 0x3f
   136d8:	movls	r4, #0
   136dc:	bls	13714 <fputs@plt+0x2850>
   136e0:	rsb	r4, r0, #64	; 0x40
   136e4:	add	r0, r0, #32
   136e8:	mov	r2, r4
   136ec:	add	r0, r5, r0
   136f0:	bl	10d98 <memcpy@plt>
   136f4:	add	r1, r5, #32
   136f8:	mov	r0, r5
   136fc:	bl	122a8 <fputs@plt+0x13e4>
   13700:	add	r3, r4, #63	; 0x3f
   13704:	add	r1, r7, r4
   13708:	cmp	r6, r3
   1370c:	bhi	1372c <fputs@plt+0x2868>
   13710:	mov	r0, #0
   13714:	add	r0, r0, #32
   13718:	sub	r2, r6, r4
   1371c:	add	r1, r7, r4
   13720:	add	r0, r5, r0
   13724:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13728:	b	10d98 <memcpy@plt>
   1372c:	mov	r0, r5
   13730:	add	r4, r4, #64	; 0x40
   13734:	bl	122a8 <fputs@plt+0x13e4>
   13738:	b	13700 <fputs@plt+0x283c>
   1373c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   13740:	mov	r5, r1
   13744:	mov	r4, r0
   13748:	mov	r8, #0
   1374c:	ldrd	r2, [r0, #24]
   13750:	ldr	r9, [pc, #168]	; 13800 <fputs@plt+0x293c>
   13754:	lsr	r1, r3, #24
   13758:	rev	r2, r2
   1375c:	strb	r1, [sp]
   13760:	lsr	r1, r3, #16
   13764:	str	r2, [sp, #4]
   13768:	mov	r2, #1
   1376c:	strb	r1, [sp, #1]
   13770:	lsr	r1, r3, #8
   13774:	strb	r1, [sp, #2]
   13778:	ldr	r1, [pc, #132]	; 13804 <fputs@plt+0x2940>
   1377c:	strb	r3, [sp, #3]
   13780:	bl	136a8 <fputs@plt+0x27e4>
   13784:	ldr	r3, [r4, #24]
   13788:	cmp	r8, #0
   1378c:	and	r6, r3, #504	; 0x1f8
   13790:	cmpeq	r6, #448	; 0x1c0
   13794:	bne	137ec <fputs@plt+0x2928>
   13798:	mov	r2, #8
   1379c:	mov	r1, sp
   137a0:	mov	r0, r4
   137a4:	bl	136a8 <fputs@plt+0x27e4>
   137a8:	mov	r3, #0
   137ac:	lsr	r1, r3, #2
   137b0:	mvn	r2, r3
   137b4:	and	r2, r2, #3
   137b8:	ldr	r1, [r4, r1, lsl #2]
   137bc:	lsl	r2, r2, #3
   137c0:	lsr	r2, r1, r2
   137c4:	strb	r2, [r5, r3]
   137c8:	add	r3, r3, #1
   137cc:	cmp	r3, #20
   137d0:	bne	137ac <fputs@plt+0x28e8>
   137d4:	mov	r2, #96	; 0x60
   137d8:	mov	r1, #0
   137dc:	mov	r0, r4
   137e0:	add	sp, sp, #12
   137e4:	pop	{r4, r5, r6, r7, r8, r9, lr}
   137e8:	b	10d08 <memset@plt>
   137ec:	mov	r2, #1
   137f0:	mov	r1, r9
   137f4:	mov	r0, r4
   137f8:	bl	136a8 <fputs@plt+0x27e4>
   137fc:	b	13784 <fputs@plt+0x28c0>
   13800:	andeq	r3, r1, r2, lsr #22
   13804:	andeq	r3, r1, r4, lsr #22
   13808:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1380c:	mov	r7, r0
   13810:	ldr	r6, [pc, #72]	; 13860 <fputs@plt+0x299c>
   13814:	ldr	r5, [pc, #72]	; 13864 <fputs@plt+0x29a0>
   13818:	add	r6, pc, r6
   1381c:	add	r5, pc, r5
   13820:	sub	r6, r6, r5
   13824:	mov	r8, r1
   13828:	mov	r9, r2
   1382c:	bl	10c34 <open@plt-0x20>
   13830:	asrs	r6, r6, #2
   13834:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13838:	mov	r4, #0
   1383c:	add	r4, r4, #1
   13840:	ldr	r3, [r5], #4
   13844:	mov	r2, r9
   13848:	mov	r1, r8
   1384c:	mov	r0, r7
   13850:	blx	r3
   13854:	cmp	r6, r4
   13858:	bne	1383c <fputs@plt+0x2978>
   1385c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13860:	ldrdeq	r0, [r1], -ip
   13864:	ldrdeq	r0, [r1], -r4
   13868:	bx	lr

Disassembly of section .fini:

0001386c <.fini>:
   1386c:	push	{r3, lr}
   13870:	pop	{r3, pc}
