
../repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

000109c0 <.init>:
   109c0:	push	{r3, lr}
   109c4:	bl	10af4 <_start@@Base+0x3c>
   109c8:	pop	{r3, pc}

Disassembly of section .plt:

000109cc <calloc@plt-0x14>:
   109cc:	push	{lr}		; (str lr, [sp, #-4]!)
   109d0:	ldr	lr, [pc, #4]	; 109dc <calloc@plt-0x4>
   109d4:	add	lr, pc, lr
   109d8:	ldr	pc, [lr, #8]!
   109dc:	andeq	r2, r1, r4, lsr #12

000109e0 <calloc@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #73728	; 0x12000
   109e8:	ldr	pc, [ip, #1572]!	; 0x624

000109ec <strcmp@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #73728	; 0x12000
   109f4:	ldr	pc, [ip, #1564]!	; 0x61c

000109f8 <printf@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #73728	; 0x12000
   10a00:	ldr	pc, [ip, #1556]!	; 0x614

00010a04 <__isoc99_fscanf@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #73728	; 0x12000
   10a0c:	ldr	pc, [ip, #1548]!	; 0x60c

00010a10 <fopen@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #73728	; 0x12000
   10a18:	ldr	pc, [ip, #1540]!	; 0x604

00010a1c <fflush@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #73728	; 0x12000
   10a24:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a28 <free@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #73728	; 0x12000
   10a30:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a34 <fgets@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #73728	; 0x12000
   10a3c:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a40 <strdup@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #73728	; 0x12000
   10a48:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a4c <puts@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #73728	; 0x12000
   10a54:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a58 <malloc@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #73728	; 0x12000
   10a60:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a64 <__libc_start_main@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #73728	; 0x12000
   10a6c:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a70 <__gmon_start__@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #73728	; 0x12000
   10a78:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a7c <feof@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #73728	; 0x12000
   10a84:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a88 <strlen@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #73728	; 0x12000
   10a90:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a94 <putchar@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #73728	; 0x12000
   10a9c:	ldr	pc, [ip, #1452]!	; 0x5ac

00010aa0 <fclose@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #73728	; 0x12000
   10aa8:	ldr	pc, [ip, #1444]!	; 0x5a4

00010aac <abort@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #73728	; 0x12000
   10ab4:	ldr	pc, [ip, #1436]!	; 0x59c

Disassembly of section .text:

00010ab8 <_start@@Base>:
   10ab8:	mov	fp, #0
   10abc:	mov	lr, #0
   10ac0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ac4:	mov	r2, sp
   10ac8:	push	{r2}		; (str r2, [sp, #-4]!)
   10acc:	push	{r0}		; (str r0, [sp, #-4]!)
   10ad0:	ldr	ip, [pc, #16]	; 10ae8 <_start@@Base+0x30>
   10ad4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ad8:	ldr	r0, [pc, #12]	; 10aec <_start@@Base+0x34>
   10adc:	ldr	r3, [pc, #12]	; 10af0 <_start@@Base+0x38>
   10ae0:	bl	10a64 <__libc_start_main@plt>
   10ae4:	bl	10aac <abort@plt>
   10ae8:	andeq	r1, r1, r8, ror #23
   10aec:	andeq	r1, r1, r8, asr #2
   10af0:	andeq	r1, r1, r8, lsl #23
   10af4:	ldr	r3, [pc, #20]	; 10b10 <_start@@Base+0x58>
   10af8:	ldr	r2, [pc, #20]	; 10b14 <_start@@Base+0x5c>
   10afc:	add	r3, pc, r3
   10b00:	ldr	r2, [r3, r2]
   10b04:	cmp	r2, #0
   10b08:	bxeq	lr
   10b0c:	b	10a70 <__gmon_start__@plt>
   10b10:	strdeq	r2, [r1], -ip
   10b14:	andeq	r0, r0, ip, asr r0
   10b18:	ldr	r3, [pc, #28]	; 10b3c <_start@@Base+0x84>
   10b1c:	ldr	r0, [pc, #28]	; 10b40 <_start@@Base+0x88>
   10b20:	sub	r3, r3, r0
   10b24:	cmp	r3, #6
   10b28:	bxls	lr
   10b2c:	ldr	r3, [pc, #16]	; 10b44 <_start@@Base+0x8c>
   10b30:	cmp	r3, #0
   10b34:	bxeq	lr
   10b38:	bx	r3
   10b3c:	andeq	r3, r2, r3, ror r0
   10b40:	andeq	r3, r2, r0, ror r0
   10b44:	andeq	r0, r0, r0
   10b48:	ldr	r1, [pc, #36]	; 10b74 <_start@@Base+0xbc>
   10b4c:	ldr	r0, [pc, #36]	; 10b78 <_start@@Base+0xc0>
   10b50:	sub	r1, r1, r0
   10b54:	asr	r1, r1, #2
   10b58:	add	r1, r1, r1, lsr #31
   10b5c:	asrs	r1, r1, #1
   10b60:	bxeq	lr
   10b64:	ldr	r3, [pc, #16]	; 10b7c <_start@@Base+0xc4>
   10b68:	cmp	r3, #0
   10b6c:	bxeq	lr
   10b70:	bx	r3
   10b74:	andeq	r3, r2, r0, ror r0
   10b78:	andeq	r3, r2, r0, ror r0
   10b7c:	andeq	r0, r0, r0
   10b80:	push	{r4, lr}
   10b84:	ldr	r4, [pc, #24]	; 10ba4 <_start@@Base+0xec>
   10b88:	ldrb	r3, [r4]
   10b8c:	cmp	r3, #0
   10b90:	popne	{r4, pc}
   10b94:	bl	10b18 <_start@@Base+0x60>
   10b98:	mov	r3, #1
   10b9c:	strb	r3, [r4]
   10ba0:	pop	{r4, pc}
   10ba4:	andeq	r3, r2, r0, ror r0
   10ba8:	ldr	r0, [pc, #40]	; 10bd8 <_start@@Base+0x120>
   10bac:	ldr	r3, [r0]
   10bb0:	cmp	r3, #0
   10bb4:	bne	10bbc <_start@@Base+0x104>
   10bb8:	b	10b48 <_start@@Base+0x90>
   10bbc:	ldr	r3, [pc, #24]	; 10bdc <_start@@Base+0x124>
   10bc0:	cmp	r3, #0
   10bc4:	beq	10bb8 <_start@@Base+0x100>
   10bc8:	push	{r4, lr}
   10bcc:	blx	r3
   10bd0:	pop	{r4, lr}
   10bd4:	b	10b48 <_start@@Base+0x90>
   10bd8:	andeq	r2, r2, r4, lsl pc
   10bdc:	andeq	r0, r0, r0

00010be0 <fp_insere@@Base>:
   10be0:	push	{fp, lr}
   10be4:	add	fp, sp, #4
   10be8:	sub	sp, sp, #32
   10bec:	str	r0, [fp, #-24]	; 0xffffffe8
   10bf0:	str	r1, [fp, #-28]	; 0xffffffe4
   10bf4:	str	r2, [fp, #-32]	; 0xffffffe0
   10bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10bfc:	cmp	r3, #0
   10c00:	bne	10c0c <fp_insere@@Base+0x2c>
   10c04:	mvn	r3, #0
   10c08:	b	10d34 <fp_insere@@Base+0x154>
   10c0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c10:	ldr	r2, [r3]
   10c14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c18:	ldr	r3, [r3, #4]
   10c1c:	cmp	r2, r3
   10c20:	bne	10c2c <fp_insere@@Base+0x4c>
   10c24:	mov	r3, #0
   10c28:	b	10d34 <fp_insere@@Base+0x154>
   10c2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10c30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10c34:	bl	117a4 <elemento_cria@@Base>
   10c38:	str	r0, [fp, #-16]
   10c3c:	mov	r3, #0
   10c40:	str	r3, [fp, #-8]
   10c44:	b	10c84 <fp_insere@@Base+0xa4>
   10c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c4c:	ldr	r2, [r3, #8]
   10c50:	ldr	r3, [fp, #-8]
   10c54:	lsl	r3, r3, #2
   10c58:	add	r3, r2, r3
   10c5c:	ldr	r3, [r3]
   10c60:	ldr	r1, [fp, #-16]
   10c64:	mov	r0, r3
   10c68:	bl	11810 <maior_que@@Base>
   10c6c:	mov	r3, r0
   10c70:	cmp	r3, #0
   10c74:	beq	10c9c <fp_insere@@Base+0xbc>
   10c78:	ldr	r3, [fp, #-8]
   10c7c:	add	r3, r3, #1
   10c80:	str	r3, [fp, #-8]
   10c84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c88:	ldr	r2, [r3]
   10c8c:	ldr	r3, [fp, #-8]
   10c90:	cmp	r2, r3
   10c94:	bgt	10c48 <fp_insere@@Base+0x68>
   10c98:	b	10ca0 <fp_insere@@Base+0xc0>
   10c9c:	nop			; (mov r0, r0)
   10ca0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ca4:	ldr	r3, [r3]
   10ca8:	str	r3, [fp, #-12]
   10cac:	b	10cf0 <fp_insere@@Base+0x110>
   10cb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10cb4:	ldr	r2, [r3, #8]
   10cb8:	ldr	r3, [fp, #-12]
   10cbc:	add	r3, r3, #1
   10cc0:	lsl	r3, r3, #2
   10cc4:	add	r3, r2, r3
   10cc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10ccc:	ldr	r1, [r2, #8]
   10cd0:	ldr	r2, [fp, #-12]
   10cd4:	lsl	r2, r2, #2
   10cd8:	add	r2, r1, r2
   10cdc:	ldr	r2, [r2]
   10ce0:	str	r2, [r3]
   10ce4:	ldr	r3, [fp, #-12]
   10ce8:	sub	r3, r3, #1
   10cec:	str	r3, [fp, #-12]
   10cf0:	ldr	r2, [fp, #-12]
   10cf4:	ldr	r3, [fp, #-8]
   10cf8:	cmp	r2, r3
   10cfc:	bge	10cb0 <fp_insere@@Base+0xd0>
   10d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d04:	ldr	r2, [r3, #8]
   10d08:	ldr	r3, [fp, #-8]
   10d0c:	lsl	r3, r3, #2
   10d10:	add	r3, r2, r3
   10d14:	ldr	r2, [fp, #-16]
   10d18:	str	r2, [r3]
   10d1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d20:	ldr	r3, [r3]
   10d24:	add	r2, r3, #1
   10d28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d2c:	str	r2, [r3]
   10d30:	mov	r3, #1
   10d34:	mov	r0, r3
   10d38:	sub	sp, fp, #4
   10d3c:	pop	{fp, pc}

00010d40 <fp_remove@@Base>:
   10d40:	push	{fp}		; (str fp, [sp, #-4]!)
   10d44:	add	fp, sp, #0
   10d48:	sub	sp, sp, #20
   10d4c:	str	r0, [fp, #-16]
   10d50:	ldr	r3, [fp, #-16]
   10d54:	cmp	r3, #0
   10d58:	beq	10d6c <fp_remove@@Base+0x2c>
   10d5c:	ldr	r3, [fp, #-16]
   10d60:	ldr	r3, [r3]
   10d64:	cmp	r3, #0
   10d68:	bne	10d74 <fp_remove@@Base+0x34>
   10d6c:	mov	r3, #0
   10d70:	b	10e00 <fp_remove@@Base+0xc0>
   10d74:	ldr	r3, [fp, #-16]
   10d78:	ldr	r3, [r3, #8]
   10d7c:	ldr	r3, [r3]
   10d80:	str	r3, [fp, #-12]
   10d84:	mov	r3, #0
   10d88:	str	r3, [fp, #-8]
   10d8c:	b	10dd0 <fp_remove@@Base+0x90>
   10d90:	ldr	r3, [fp, #-16]
   10d94:	ldr	r2, [r3, #8]
   10d98:	ldr	r3, [fp, #-8]
   10d9c:	lsl	r3, r3, #2
   10da0:	add	r3, r2, r3
   10da4:	ldr	r2, [fp, #-16]
   10da8:	ldr	r1, [r2, #8]
   10dac:	ldr	r2, [fp, #-8]
   10db0:	add	r2, r2, #1
   10db4:	lsl	r2, r2, #2
   10db8:	add	r2, r1, r2
   10dbc:	ldr	r2, [r2]
   10dc0:	str	r2, [r3]
   10dc4:	ldr	r3, [fp, #-8]
   10dc8:	add	r3, r3, #1
   10dcc:	str	r3, [fp, #-8]
   10dd0:	ldr	r3, [fp, #-16]
   10dd4:	ldr	r2, [r3]
   10dd8:	ldr	r3, [fp, #-8]
   10ddc:	cmp	r2, r3
   10de0:	bgt	10d90 <fp_remove@@Base+0x50>
   10de4:	ldr	r3, [fp, #-16]
   10de8:	ldr	r3, [r3]
   10dec:	sub	r2, r3, #1
   10df0:	ldr	r3, [fp, #-16]
   10df4:	str	r2, [r3]
   10df8:	ldr	r3, [fp, #-12]
   10dfc:	ldr	r3, [r3, #4]
   10e00:	mov	r0, r3
   10e04:	add	sp, fp, #0
   10e08:	pop	{fp}		; (ldr fp, [sp], #4)
   10e0c:	bx	lr

00010e10 <fp_carrega@@Base>:
   10e10:	push	{fp, lr}
   10e14:	add	fp, sp, #4
   10e18:	sub	sp, sp, #272	; 0x110
   10e1c:	str	r0, [fp, #-272]	; 0xfffffef0
   10e20:	str	r1, [fp, #-276]	; 0xfffffeec
   10e24:	ldr	r3, [pc, #188]	; 10ee8 <fp_carrega@@Base+0xd8>
   10e28:	add	r3, pc, r3
   10e2c:	mov	r1, r3
   10e30:	ldr	r0, [fp, #-276]	; 0xfffffeec
   10e34:	bl	10a10 <fopen@plt>
   10e38:	str	r0, [fp, #-8]
   10e3c:	ldr	r3, [fp, #-8]
   10e40:	cmp	r3, #0
   10e44:	bne	10ec4 <fp_carrega@@Base+0xb4>
   10e48:	ldr	r3, [pc, #156]	; 10eec <fp_carrega@@Base+0xdc>
   10e4c:	add	r3, pc, r3
   10e50:	mov	r0, r3
   10e54:	bl	10a4c <puts@plt>
   10e58:	b	10ee0 <fp_carrega@@Base+0xd0>
   10e5c:	sub	r3, fp, #268	; 0x10c
   10e60:	mov	r2, r3
   10e64:	ldr	r3, [pc, #132]	; 10ef0 <fp_carrega@@Base+0xe0>
   10e68:	add	r3, pc, r3
   10e6c:	mov	r1, r3
   10e70:	ldr	r0, [fp, #-8]
   10e74:	bl	10a04 <__isoc99_fscanf@plt>
   10e78:	sub	r3, fp, #264	; 0x108
   10e7c:	ldr	r2, [fp, #-8]
   10e80:	mov	r1, #256	; 0x100
   10e84:	mov	r0, r3
   10e88:	bl	10a34 <fgets@plt>
   10e8c:	sub	r3, fp, #264	; 0x108
   10e90:	mov	r0, r3
   10e94:	bl	10a88 <strlen@plt>
   10e98:	mov	r3, r0
   10e9c:	sub	r3, r3, #1
   10ea0:	sub	r2, fp, #4
   10ea4:	add	r3, r2, r3
   10ea8:	mov	r2, #0
   10eac:	strb	r2, [r3, #-260]	; 0xfffffefc
   10eb0:	ldr	r2, [fp, #-268]	; 0xfffffef4
   10eb4:	sub	r3, fp, #264	; 0x108
   10eb8:	mov	r1, r3
   10ebc:	ldr	r0, [fp, #-272]	; 0xfffffef0
   10ec0:	bl	10be0 <fp_insere@@Base>
   10ec4:	ldr	r0, [fp, #-8]
   10ec8:	bl	10a7c <feof@plt>
   10ecc:	mov	r3, r0
   10ed0:	cmp	r3, #0
   10ed4:	beq	10e5c <fp_carrega@@Base+0x4c>
   10ed8:	ldr	r0, [fp, #-8]
   10edc:	bl	10aa0 <fclose@plt>
   10ee0:	sub	sp, fp, #4
   10ee4:	pop	{fp, pc}
   10ee8:	andeq	r0, r0, r8, asr #27
   10eec:	andeq	r0, r0, r8, lsr #27
   10ef0:			; <UNDEFINED> instruction: 0x00000db0

00010ef4 <heap_insere@@Base>:
   10ef4:	push	{fp, lr}
   10ef8:	add	fp, sp, #4
   10efc:	sub	sp, sp, #32
   10f00:	str	r0, [fp, #-24]	; 0xffffffe8
   10f04:	str	r1, [fp, #-28]	; 0xffffffe4
   10f08:	str	r2, [fp, #-32]	; 0xffffffe0
   10f0c:	str	r3, [fp, #-36]	; 0xffffffdc
   10f10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f14:	ldr	r2, [r3]
   10f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f1c:	ldr	r3, [r3, #4]
   10f20:	cmp	r2, r3
   10f24:	bne	10f30 <heap_insere@@Base+0x3c>
   10f28:	mov	r3, #0
   10f2c:	b	1102c <heap_insere@@Base+0x138>
   10f30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10f34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10f38:	bl	117a4 <elemento_cria@@Base>
   10f3c:	str	r0, [fp, #-16]
   10f40:	mov	r3, #0
   10f44:	str	r3, [fp, #-8]
   10f48:	b	10f58 <heap_insere@@Base+0x64>
   10f4c:	ldr	r3, [fp, #-8]
   10f50:	add	r3, r3, #1
   10f54:	str	r3, [fp, #-8]
   10f58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f5c:	ldr	r2, [r3]
   10f60:	ldr	r3, [fp, #-8]
   10f64:	cmp	r2, r3
   10f68:	ble	10fa0 <heap_insere@@Base+0xac>
   10f6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f70:	ldr	r2, [r3, #8]
   10f74:	ldr	r3, [fp, #-8]
   10f78:	lsl	r3, r3, #2
   10f7c:	add	r3, r2, r3
   10f80:	ldr	r2, [r3]
   10f84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f88:	ldr	r1, [fp, #-16]
   10f8c:	mov	r0, r2
   10f90:	blx	r3
   10f94:	mov	r3, r0
   10f98:	cmp	r3, #1
   10f9c:	bne	10f4c <heap_insere@@Base+0x58>
   10fa0:	ldr	r3, [fp, #-8]
   10fa4:	str	r3, [fp, #-12]
   10fa8:	b	10fec <heap_insere@@Base+0xf8>
   10fac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fb0:	ldr	r2, [r3, #8]
   10fb4:	ldr	r3, [fp, #-12]
   10fb8:	add	r3, r3, #1
   10fbc:	lsl	r3, r3, #2
   10fc0:	add	r3, r2, r3
   10fc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10fc8:	ldr	r1, [r2, #8]
   10fcc:	ldr	r2, [fp, #-12]
   10fd0:	lsl	r2, r2, #2
   10fd4:	add	r2, r1, r2
   10fd8:	ldr	r2, [r2]
   10fdc:	str	r2, [r3]
   10fe0:	ldr	r3, [fp, #-12]
   10fe4:	sub	r3, r3, #1
   10fe8:	str	r3, [fp, #-12]
   10fec:	ldr	r3, [fp, #-12]
   10ff0:	cmp	r3, #0
   10ff4:	bgt	10fac <heap_insere@@Base+0xb8>
   10ff8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ffc:	ldr	r2, [r3, #8]
   11000:	ldr	r3, [fp, #-8]
   11004:	lsl	r3, r3, #2
   11008:	add	r3, r2, r3
   1100c:	ldr	r2, [fp, #-16]
   11010:	str	r2, [r3]
   11014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11018:	ldr	r3, [r3]
   1101c:	add	r2, r3, #1
   11020:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11024:	str	r2, [r3]
   11028:	ldr	r3, [fp, #-8]
   1102c:	mov	r0, r3
   11030:	sub	sp, fp, #4
   11034:	pop	{fp, pc}

00011038 <heap_remove@@Base>:
   11038:	push	{fp}		; (str fp, [sp, #-4]!)
   1103c:	add	fp, sp, #0
   11040:	sub	sp, sp, #12
   11044:	str	r0, [fp, #-8]
   11048:	str	r1, [fp, #-12]
   1104c:	mov	r3, #0
   11050:	mov	r0, r3
   11054:	add	sp, fp, #0
   11058:	pop	{fp}		; (ldr fp, [sp], #4)
   1105c:	bx	lr

00011060 <heap_carrega@@Base>:
   11060:	push	{fp, lr}
   11064:	add	fp, sp, #4
   11068:	sub	sp, sp, #280	; 0x118
   1106c:	str	r0, [fp, #-272]	; 0xfffffef0
   11070:	str	r1, [fp, #-276]	; 0xfffffeec
   11074:	str	r2, [fp, #-280]	; 0xfffffee8
   11078:	ldr	r3, [pc, #188]	; 1113c <heap_carrega@@Base+0xdc>
   1107c:	add	r3, pc, r3
   11080:	mov	r1, r3
   11084:	ldr	r0, [fp, #-280]	; 0xfffffee8
   11088:	bl	10a10 <fopen@plt>
   1108c:	str	r0, [fp, #-8]
   11090:	ldr	r3, [fp, #-8]
   11094:	cmp	r3, #0
   11098:	bne	11118 <heap_carrega@@Base+0xb8>
   1109c:	ldr	r3, [pc, #156]	; 11140 <heap_carrega@@Base+0xe0>
   110a0:	add	r3, pc, r3
   110a4:	mov	r0, r3
   110a8:	bl	10a4c <puts@plt>
   110ac:	b	11134 <heap_carrega@@Base+0xd4>
   110b0:	sub	r3, fp, #268	; 0x10c
   110b4:	mov	r2, r3
   110b8:	ldr	r3, [pc, #132]	; 11144 <heap_carrega@@Base+0xe4>
   110bc:	add	r3, pc, r3
   110c0:	mov	r1, r3
   110c4:	ldr	r0, [fp, #-8]
   110c8:	bl	10a04 <__isoc99_fscanf@plt>
   110cc:	sub	r3, fp, #264	; 0x108
   110d0:	ldr	r2, [fp, #-8]
   110d4:	mov	r1, #256	; 0x100
   110d8:	mov	r0, r3
   110dc:	bl	10a34 <fgets@plt>
   110e0:	sub	r3, fp, #264	; 0x108
   110e4:	mov	r0, r3
   110e8:	bl	10a88 <strlen@plt>
   110ec:	mov	r3, r0
   110f0:	sub	r3, r3, #1
   110f4:	sub	r2, fp, #4
   110f8:	add	r3, r2, r3
   110fc:	mov	r2, #0
   11100:	strb	r2, [r3, #-260]	; 0xfffffefc
   11104:	ldr	r3, [fp, #-268]	; 0xfffffef4
   11108:	sub	r2, fp, #264	; 0x108
   1110c:	ldr	r1, [fp, #-276]	; 0xfffffeec
   11110:	ldr	r0, [fp, #-272]	; 0xfffffef0
   11114:	bl	10ef4 <heap_insere@@Base>
   11118:	ldr	r0, [fp, #-8]
   1111c:	bl	10a7c <feof@plt>
   11120:	mov	r3, r0
   11124:	cmp	r3, #0
   11128:	beq	110b0 <heap_carrega@@Base+0x50>
   1112c:	ldr	r0, [fp, #-8]
   11130:	bl	10aa0 <fclose@plt>
   11134:	sub	sp, fp, #4
   11138:	pop	{fp, pc}
   1113c:	andeq	r0, r0, r4, ror fp
   11140:	andeq	r0, r0, r4, asr fp
   11144:	andeq	r0, r0, ip, asr fp

00011148 <main@@Base>:
   11148:	push	{r4, fp, lr}
   1114c:	add	fp, sp, #8
   11150:	sub	sp, sp, #204	; 0xcc
   11154:	str	r0, [fp, #-208]	; 0xffffff30
   11158:	str	r1, [fp, #-212]	; 0xffffff2c
   1115c:	ldr	r4, [pc, #1156]	; 115e8 <main@@Base+0x4a0>
   11160:	add	r4, pc, r4
   11164:	mov	r0, #42	; 0x2a
   11168:	bl	11668 <vetor_cria@@Base>
   1116c:	str	r0, [fp, #-20]	; 0xffffffec
   11170:	ldr	r3, [pc, #1140]	; 115ec <main@@Base+0x4a4>
   11174:	add	r3, pc, r3
   11178:	mov	r0, r3
   1117c:	bl	10a4c <puts@plt>
   11180:	ldr	r3, [pc, #1128]	; 115f0 <main@@Base+0x4a8>
   11184:	add	r3, pc, r3
   11188:	mov	r1, r3
   1118c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11190:	bl	10e10 <fp_carrega@@Base>
   11194:	ldr	r3, [pc, #1112]	; 115f4 <main@@Base+0x4ac>
   11198:	ldr	r3, [r4, r3]
   1119c:	ldr	r3, [r3]
   111a0:	mov	r1, r3
   111a4:	ldr	r3, [pc, #1100]	; 115f8 <main@@Base+0x4b0>
   111a8:	add	r3, pc, r3
   111ac:	mov	r0, r3
   111b0:	bl	109f8 <printf@plt>
   111b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   111b8:	bl	11988 <vetor_imprime@@Base>
   111bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   111c0:	ldr	r3, [r3]
   111c4:	cmp	r3, #42	; 0x2a
   111c8:	beq	111e4 <main@@Base+0x9c>
   111cc:	ldr	r3, [pc, #1064]	; 115fc <main@@Base+0x4b4>
   111d0:	add	r3, pc, r3
   111d4:	mov	r0, r3
   111d8:	bl	10a4c <puts@plt>
   111dc:	mov	r3, #1
   111e0:	b	115dc <main@@Base+0x494>
   111e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   111e8:	bl	10d40 <fp_remove@@Base>
   111ec:	mov	r3, r0
   111f0:	mov	r1, r3
   111f4:	ldr	r3, [pc, #1028]	; 11600 <main@@Base+0x4b8>
   111f8:	add	r3, pc, r3
   111fc:	mov	r0, r3
   11200:	bl	109ec <strcmp@plt>
   11204:	mov	r3, r0
   11208:	cmp	r3, #0
   1120c:	beq	11228 <main@@Base+0xe0>
   11210:	ldr	r3, [pc, #1004]	; 11604 <main@@Base+0x4bc>
   11214:	add	r3, pc, r3
   11218:	mov	r0, r3
   1121c:	bl	10a4c <puts@plt>
   11220:	mov	r3, #1
   11224:	b	115dc <main@@Base+0x494>
   11228:	ldr	r3, [pc, #964]	; 115f4 <main@@Base+0x4ac>
   1122c:	ldr	r3, [r4, r3]
   11230:	mov	r2, #0
   11234:	str	r2, [r3]
   11238:	ldr	r0, [fp, #-20]	; 0xffffffec
   1123c:	bl	10d40 <fp_remove@@Base>
   11240:	ldr	r3, [pc, #940]	; 115f4 <main@@Base+0x4ac>
   11244:	ldr	r3, [r4, r3]
   11248:	ldr	r3, [r3]
   1124c:	mov	r1, r3
   11250:	ldr	r3, [pc, #944]	; 11608 <main@@Base+0x4c0>
   11254:	add	r3, pc, r3
   11258:	mov	r0, r3
   1125c:	bl	109f8 <printf@plt>
   11260:	ldr	r3, [pc, #908]	; 115f4 <main@@Base+0x4ac>
   11264:	ldr	r3, [r4, r3]
   11268:	mov	r2, #0
   1126c:	str	r2, [r3]
   11270:	mov	r2, #99	; 0x63
   11274:	ldr	r3, [pc, #912]	; 1160c <main@@Base+0x4c4>
   11278:	add	r3, pc, r3
   1127c:	mov	r1, r3
   11280:	ldr	r0, [fp, #-20]	; 0xffffffec
   11284:	bl	10be0 <fp_insere@@Base>
   11288:	ldr	r3, [pc, #868]	; 115f4 <main@@Base+0x4ac>
   1128c:	ldr	r3, [r4, r3]
   11290:	ldr	r3, [r3]
   11294:	mov	r1, r3
   11298:	ldr	r3, [pc, #880]	; 11610 <main@@Base+0x4c8>
   1129c:	add	r3, pc, r3
   112a0:	mov	r0, r3
   112a4:	bl	109f8 <printf@plt>
   112a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   112ac:	bl	10d40 <fp_remove@@Base>
   112b0:	ldr	r3, [pc, #828]	; 115f4 <main@@Base+0x4ac>
   112b4:	ldr	r3, [r4, r3]
   112b8:	mov	r2, #0
   112bc:	str	r2, [r3]
   112c0:	mov	r2, #0
   112c4:	ldr	r3, [pc, #840]	; 11614 <main@@Base+0x4cc>
   112c8:	add	r3, pc, r3
   112cc:	mov	r1, r3
   112d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   112d4:	bl	10be0 <fp_insere@@Base>
   112d8:	ldr	r3, [pc, #788]	; 115f4 <main@@Base+0x4ac>
   112dc:	ldr	r3, [r4, r3]
   112e0:	ldr	r3, [r3]
   112e4:	mov	r1, r3
   112e8:	ldr	r3, [pc, #808]	; 11618 <main@@Base+0x4d0>
   112ec:	add	r3, pc, r3
   112f0:	mov	r0, r3
   112f4:	bl	109f8 <printf@plt>
   112f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   112fc:	bl	10d40 <fp_remove@@Base>
   11300:	ldr	r3, [pc, #748]	; 115f4 <main@@Base+0x4ac>
   11304:	ldr	r3, [r4, r3]
   11308:	mov	r2, #0
   1130c:	str	r2, [r3]
   11310:	mov	r2, #42	; 0x2a
   11314:	ldr	r3, [pc, #768]	; 1161c <main@@Base+0x4d4>
   11318:	add	r3, pc, r3
   1131c:	mov	r1, r3
   11320:	ldr	r0, [fp, #-20]	; 0xffffffec
   11324:	bl	10be0 <fp_insere@@Base>
   11328:	ldr	r3, [pc, #708]	; 115f4 <main@@Base+0x4ac>
   1132c:	ldr	r3, [r4, r3]
   11330:	ldr	r3, [r3]
   11334:	mov	r1, r3
   11338:	ldr	r3, [pc, #736]	; 11620 <main@@Base+0x4d8>
   1133c:	add	r3, pc, r3
   11340:	mov	r0, r3
   11344:	bl	109f8 <printf@plt>
   11348:	ldr	r3, [pc, #724]	; 11624 <main@@Base+0x4dc>
   1134c:	add	r3, pc, r3
   11350:	mov	r0, r3
   11354:	bl	10a4c <puts@plt>
   11358:	mov	r0, #42	; 0x2a
   1135c:	bl	11704 <vetor_criaHeap@@Base>
   11360:	str	r0, [fp, #-24]	; 0xffffffe8
   11364:	ldr	r3, [pc, #700]	; 11628 <main@@Base+0x4e0>
   11368:	ldr	r3, [r4, r3]
   1136c:	str	r3, [fp, #-28]	; 0xffffffe4
   11370:	ldr	r3, [pc, #692]	; 1162c <main@@Base+0x4e4>
   11374:	add	r3, pc, r3
   11378:	mov	r2, r3
   1137c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11384:	bl	11060 <heap_carrega@@Base>
   11388:	ldr	r3, [pc, #612]	; 115f4 <main@@Base+0x4ac>
   1138c:	ldr	r3, [r4, r3]
   11390:	ldr	r3, [r3]
   11394:	mov	r1, r3
   11398:	ldr	r3, [pc, #656]	; 11630 <main@@Base+0x4e8>
   1139c:	add	r3, pc, r3
   113a0:	mov	r0, r3
   113a4:	bl	109f8 <printf@plt>
   113a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   113ac:	bl	11a84 <vetor_imprimeHeap@@Base>
   113b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113b4:	ldr	r3, [r3]
   113b8:	cmp	r3, #42	; 0x2a
   113bc:	beq	113d8 <main@@Base+0x290>
   113c0:	ldr	r3, [pc, #620]	; 11634 <main@@Base+0x4ec>
   113c4:	add	r3, pc, r3
   113c8:	mov	r0, r3
   113cc:	bl	10a4c <puts@plt>
   113d0:	mov	r3, #1
   113d4:	b	115dc <main@@Base+0x494>
   113d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   113dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   113e0:	bl	11038 <heap_remove@@Base>
   113e4:	mov	r3, r0
   113e8:	mov	r1, r3
   113ec:	ldr	r3, [pc, #580]	; 11638 <main@@Base+0x4f0>
   113f0:	add	r3, pc, r3
   113f4:	mov	r0, r3
   113f8:	bl	109ec <strcmp@plt>
   113fc:	mov	r3, r0
   11400:	cmp	r3, #0
   11404:	beq	11420 <main@@Base+0x2d8>
   11408:	ldr	r3, [pc, #556]	; 1163c <main@@Base+0x4f4>
   1140c:	add	r3, pc, r3
   11410:	mov	r0, r3
   11414:	bl	10a4c <puts@plt>
   11418:	mov	r3, #1
   1141c:	b	115dc <main@@Base+0x494>
   11420:	ldr	r3, [pc, #460]	; 115f4 <main@@Base+0x4ac>
   11424:	ldr	r3, [r4, r3]
   11428:	mov	r2, #0
   1142c:	str	r2, [r3]
   11430:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11438:	bl	11038 <heap_remove@@Base>
   1143c:	ldr	r3, [pc, #432]	; 115f4 <main@@Base+0x4ac>
   11440:	ldr	r3, [r4, r3]
   11444:	ldr	r3, [r3]
   11448:	mov	r1, r3
   1144c:	ldr	r3, [pc, #492]	; 11640 <main@@Base+0x4f8>
   11450:	add	r3, pc, r3
   11454:	mov	r0, r3
   11458:	bl	109f8 <printf@plt>
   1145c:	ldr	r3, [pc, #400]	; 115f4 <main@@Base+0x4ac>
   11460:	ldr	r3, [r4, r3]
   11464:	mov	r2, #0
   11468:	str	r2, [r3]
   1146c:	mov	r3, #99	; 0x63
   11470:	ldr	r2, [pc, #460]	; 11644 <main@@Base+0x4fc>
   11474:	add	r2, pc, r2
   11478:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1147c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11480:	bl	10ef4 <heap_insere@@Base>
   11484:	ldr	r3, [pc, #360]	; 115f4 <main@@Base+0x4ac>
   11488:	ldr	r3, [r4, r3]
   1148c:	ldr	r3, [r3]
   11490:	mov	r1, r3
   11494:	ldr	r3, [pc, #428]	; 11648 <main@@Base+0x500>
   11498:	add	r3, pc, r3
   1149c:	mov	r0, r3
   114a0:	bl	109f8 <printf@plt>
   114a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114ac:	bl	11038 <heap_remove@@Base>
   114b0:	ldr	r3, [pc, #316]	; 115f4 <main@@Base+0x4ac>
   114b4:	ldr	r3, [r4, r3]
   114b8:	mov	r2, #0
   114bc:	str	r2, [r3]
   114c0:	mov	r3, #0
   114c4:	ldr	r2, [pc, #384]	; 1164c <main@@Base+0x504>
   114c8:	add	r2, pc, r2
   114cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114d4:	bl	10ef4 <heap_insere@@Base>
   114d8:	ldr	r3, [pc, #276]	; 115f4 <main@@Base+0x4ac>
   114dc:	ldr	r3, [r4, r3]
   114e0:	ldr	r3, [r3]
   114e4:	mov	r1, r3
   114e8:	ldr	r3, [pc, #352]	; 11650 <main@@Base+0x508>
   114ec:	add	r3, pc, r3
   114f0:	mov	r0, r3
   114f4:	bl	109f8 <printf@plt>
   114f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11500:	bl	11038 <heap_remove@@Base>
   11504:	ldr	r3, [pc, #232]	; 115f4 <main@@Base+0x4ac>
   11508:	ldr	r3, [r4, r3]
   1150c:	mov	r2, #0
   11510:	str	r2, [r3]
   11514:	mov	r3, #42	; 0x2a
   11518:	ldr	r2, [pc, #308]	; 11654 <main@@Base+0x50c>
   1151c:	add	r2, pc, r2
   11520:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11528:	bl	10ef4 <heap_insere@@Base>
   1152c:	ldr	r3, [pc, #192]	; 115f4 <main@@Base+0x4ac>
   11530:	ldr	r3, [r4, r3]
   11534:	ldr	r3, [r3]
   11538:	mov	r1, r3
   1153c:	ldr	r3, [pc, #276]	; 11658 <main@@Base+0x510>
   11540:	add	r3, pc, r3
   11544:	mov	r0, r3
   11548:	bl	109f8 <printf@plt>
   1154c:	mov	r0, #42	; 0x2a
   11550:	bl	11704 <vetor_criaHeap@@Base>
   11554:	str	r0, [fp, #-24]	; 0xffffffe8
   11558:	ldr	r3, [pc, #252]	; 1165c <main@@Base+0x514>
   1155c:	ldr	r3, [r4, r3]
   11560:	str	r3, [fp, #-32]	; 0xffffffe0
   11564:	ldr	r3, [pc, #244]	; 11660 <main@@Base+0x518>
   11568:	add	r3, pc, r3
   1156c:	mov	r2, r3
   11570:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11578:	bl	11060 <heap_carrega@@Base>
   1157c:	ldr	r3, [pc, #112]	; 115f4 <main@@Base+0x4ac>
   11580:	ldr	r3, [r4, r3]
   11584:	ldr	r3, [r3]
   11588:	mov	r1, r3
   1158c:	ldr	r3, [pc, #208]	; 11664 <main@@Base+0x51c>
   11590:	add	r3, pc, r3
   11594:	mov	r0, r3
   11598:	bl	109f8 <printf@plt>
   1159c:	mov	r3, #0
   115a0:	str	r3, [fp, #-16]
   115a4:	b	115cc <main@@Base+0x484>
   115a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   115ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115b0:	bl	11038 <heap_remove@@Base>
   115b4:	mov	r3, r0
   115b8:	mov	r0, r3
   115bc:	bl	10a4c <puts@plt>
   115c0:	ldr	r3, [fp, #-16]
   115c4:	add	r3, r3, #1
   115c8:	str	r3, [fp, #-16]
   115cc:	ldr	r3, [fp, #-16]
   115d0:	cmp	r3, #41	; 0x29
   115d4:	ble	115a8 <main@@Base+0x460>
   115d8:	mov	r3, #0
   115dc:	mov	r0, r3
   115e0:	sub	sp, fp, #8
   115e4:	pop	{r4, fp, pc}
   115e8:	muleq	r1, r8, lr
   115ec:	andeq	r0, r0, r8, lsr #21
   115f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   115f4:	andeq	r0, r0, r8, asr r0
   115f8:			; <UNDEFINED> instruction: 0x00000ab8
   115fc:	andeq	r0, r0, r8, asr #21
   11600:	andeq	r0, r0, r8, asr #21
   11604:	andeq	r0, r0, r0, asr #21
   11608:	andeq	r0, r0, r4, asr #21
   1160c:	ldrdeq	r0, [r0], -r4
   11610:	andeq	r0, r0, r0, asr #21
   11614:	andeq	r0, r0, r4, lsl #21
   11618:			; <UNDEFINED> instruction: 0x00000ab8
   1161c:	andeq	r0, r0, r4, lsr sl
   11620:			; <UNDEFINED> instruction: 0x00000ab0
   11624:	andeq	r0, r0, r8, ror #21
   11628:	andeq	r0, r0, r4, asr r0
   1162c:	andeq	r0, r0, r0, ror #17
   11630:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11634:	andeq	r0, r0, r0, ror #21
   11638:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1163c:	andeq	r0, r0, r8, asr #17
   11640:	andeq	r0, r0, ip, ror sl
   11644:	ldrdeq	r0, [r0], -r8
   11648:	andeq	r0, r0, r8, ror #20
   1164c:	andeq	r0, r0, r4, lsl #17
   11650:	andeq	r0, r0, ip, asr sl
   11654:	andeq	r0, r0, r0, lsr r8
   11658:	andeq	r0, r0, ip, lsr #17
   1165c:	andeq	r0, r0, r0, rrx
   11660:	andeq	r0, r0, ip, ror #13
   11664:	ldrdeq	r0, [r0], -ip

00011668 <vetor_cria@@Base>:
   11668:	push	{fp, lr}
   1166c:	add	fp, sp, #4
   11670:	sub	sp, sp, #16
   11674:	str	r0, [fp, #-16]
   11678:	mov	r0, #12
   1167c:	bl	10a58 <malloc@plt>
   11680:	mov	r3, r0
   11684:	str	r3, [fp, #-8]
   11688:	ldr	r3, [fp, #-8]
   1168c:	cmp	r3, #0
   11690:	bne	1169c <vetor_cria@@Base+0x34>
   11694:	mov	r3, #0
   11698:	b	116f8 <vetor_cria@@Base+0x90>
   1169c:	ldr	r3, [fp, #-8]
   116a0:	mov	r2, #0
   116a4:	str	r2, [r3]
   116a8:	ldr	r3, [fp, #-8]
   116ac:	ldr	r2, [fp, #-16]
   116b0:	str	r2, [r3, #4]
   116b4:	ldr	r3, [fp, #-16]
   116b8:	mov	r1, #4
   116bc:	mov	r0, r3
   116c0:	bl	109e0 <calloc@plt>
   116c4:	mov	r3, r0
   116c8:	mov	r2, r3
   116cc:	ldr	r3, [fp, #-8]
   116d0:	str	r2, [r3, #8]
   116d4:	ldr	r3, [fp, #-8]
   116d8:	ldr	r3, [r3, #8]
   116dc:	cmp	r3, #0
   116e0:	bne	116f4 <vetor_cria@@Base+0x8c>
   116e4:	ldr	r0, [fp, #-8]
   116e8:	bl	10a28 <free@plt>
   116ec:	mov	r3, #0
   116f0:	b	116f8 <vetor_cria@@Base+0x90>
   116f4:	ldr	r3, [fp, #-8]
   116f8:	mov	r0, r3
   116fc:	sub	sp, fp, #4
   11700:	pop	{fp, pc}

00011704 <vetor_criaHeap@@Base>:
   11704:	push	{fp, lr}
   11708:	add	fp, sp, #4
   1170c:	sub	sp, sp, #16
   11710:	str	r0, [fp, #-16]
   11714:	mov	r0, #12
   11718:	bl	10a58 <malloc@plt>
   1171c:	mov	r3, r0
   11720:	str	r3, [fp, #-8]
   11724:	ldr	r3, [fp, #-8]
   11728:	cmp	r3, #0
   1172c:	bne	11738 <vetor_criaHeap@@Base+0x34>
   11730:	mov	r3, #0
   11734:	b	11798 <vetor_criaHeap@@Base+0x94>
   11738:	ldr	r3, [fp, #-8]
   1173c:	mov	r2, #0
   11740:	str	r2, [r3]
   11744:	ldr	r3, [fp, #-8]
   11748:	ldr	r2, [fp, #-16]
   1174c:	str	r2, [r3, #4]
   11750:	ldr	r3, [fp, #-16]
   11754:	add	r3, r3, #1
   11758:	mov	r1, #4
   1175c:	mov	r0, r3
   11760:	bl	109e0 <calloc@plt>
   11764:	mov	r3, r0
   11768:	mov	r2, r3
   1176c:	ldr	r3, [fp, #-8]
   11770:	str	r2, [r3, #8]
   11774:	ldr	r3, [fp, #-8]
   11778:	ldr	r3, [r3, #8]
   1177c:	cmp	r3, #0
   11780:	bne	11794 <vetor_criaHeap@@Base+0x90>
   11784:	ldr	r0, [fp, #-8]
   11788:	bl	10a28 <free@plt>
   1178c:	mov	r3, #0
   11790:	b	11798 <vetor_criaHeap@@Base+0x94>
   11794:	ldr	r3, [fp, #-8]
   11798:	mov	r0, r3
   1179c:	sub	sp, fp, #4
   117a0:	pop	{fp, pc}

000117a4 <elemento_cria@@Base>:
   117a4:	push	{fp, lr}
   117a8:	add	fp, sp, #4
   117ac:	sub	sp, sp, #16
   117b0:	str	r0, [fp, #-16]
   117b4:	str	r1, [fp, #-20]	; 0xffffffec
   117b8:	mov	r0, #8
   117bc:	bl	10a58 <malloc@plt>
   117c0:	mov	r3, r0
   117c4:	str	r3, [fp, #-8]
   117c8:	ldr	r3, [fp, #-8]
   117cc:	cmp	r3, #0
   117d0:	bne	117dc <elemento_cria@@Base+0x38>
   117d4:	mov	r3, #0
   117d8:	b	11804 <elemento_cria@@Base+0x60>
   117dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   117e0:	bl	10a40 <strdup@plt>
   117e4:	mov	r3, r0
   117e8:	mov	r2, r3
   117ec:	ldr	r3, [fp, #-8]
   117f0:	str	r2, [r3, #4]
   117f4:	ldr	r3, [fp, #-8]
   117f8:	ldr	r2, [fp, #-16]
   117fc:	str	r2, [r3]
   11800:	ldr	r3, [fp, #-8]
   11804:	mov	r0, r3
   11808:	sub	sp, fp, #4
   1180c:	pop	{fp, pc}

00011810 <maior_que@@Base>:
   11810:	push	{r4, fp, lr}
   11814:	add	fp, sp, #8
   11818:	sub	sp, sp, #12
   1181c:	str	r0, [fp, #-16]
   11820:	str	r1, [fp, #-20]	; 0xffffffec
   11824:	ldr	r4, [pc, #140]	; 118b8 <maior_que@@Base+0xa8>
   11828:	add	r4, pc, r4
   1182c:	ldr	r3, [fp, #-16]
   11830:	cmp	r3, #0
   11834:	beq	11844 <maior_que@@Base+0x34>
   11838:	ldr	r3, [fp, #-20]	; 0xffffffec
   1183c:	cmp	r3, #0
   11840:	bne	1185c <maior_que@@Base+0x4c>
   11844:	ldr	r3, [pc, #112]	; 118bc <maior_que@@Base+0xac>
   11848:	add	r3, pc, r3
   1184c:	mov	r0, r3
   11850:	bl	10a4c <puts@plt>
   11854:	mov	r3, #0
   11858:	b	118ac <maior_que@@Base+0x9c>
   1185c:	ldr	r3, [pc, #92]	; 118c0 <maior_que@@Base+0xb0>
   11860:	ldr	r3, [r4, r3]
   11864:	ldr	r3, [r3]
   11868:	mov	r0, r3
   1186c:	bl	10a1c <fflush@plt>
   11870:	ldr	r3, [pc, #76]	; 118c4 <maior_que@@Base+0xb4>
   11874:	ldr	r3, [r4, r3]
   11878:	ldr	r3, [r3]
   1187c:	add	r2, r3, #1
   11880:	ldr	r3, [pc, #60]	; 118c4 <maior_que@@Base+0xb4>
   11884:	ldr	r3, [r4, r3]
   11888:	str	r2, [r3]
   1188c:	ldr	r3, [fp, #-16]
   11890:	ldr	r2, [r3]
   11894:	ldr	r3, [fp, #-20]	; 0xffffffec
   11898:	ldr	r3, [r3]
   1189c:	cmp	r2, r3
   118a0:	movgt	r3, #1
   118a4:	movle	r3, #0
   118a8:	uxtb	r3, r3
   118ac:	mov	r0, r3
   118b0:	sub	sp, fp, #8
   118b4:	pop	{r4, fp, pc}
   118b8:	ldrdeq	r1, [r1], -r0
   118bc:	andeq	r0, r0, r8, asr #14
   118c0:	andeq	r0, r0, r4, rrx
   118c4:	andeq	r0, r0, r8, asr r0

000118c8 <maior_que_HeapSort@@Base>:
   118c8:	push	{r4, fp, lr}
   118cc:	add	fp, sp, #8
   118d0:	sub	sp, sp, #12
   118d4:	str	r0, [fp, #-16]
   118d8:	str	r1, [fp, #-20]	; 0xffffffec
   118dc:	ldr	r4, [pc, #148]	; 11978 <maior_que_HeapSort@@Base+0xb0>
   118e0:	add	r4, pc, r4
   118e4:	ldr	r3, [fp, #-16]
   118e8:	cmp	r3, #0
   118ec:	beq	118fc <maior_que_HeapSort@@Base+0x34>
   118f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   118f4:	cmp	r3, #0
   118f8:	bne	11914 <maior_que_HeapSort@@Base+0x4c>
   118fc:	ldr	r3, [pc, #120]	; 1197c <maior_que_HeapSort@@Base+0xb4>
   11900:	add	r3, pc, r3
   11904:	mov	r0, r3
   11908:	bl	10a4c <puts@plt>
   1190c:	mov	r3, #0
   11910:	b	1196c <maior_que_HeapSort@@Base+0xa4>
   11914:	ldr	r3, [pc, #100]	; 11980 <maior_que_HeapSort@@Base+0xb8>
   11918:	ldr	r3, [r4, r3]
   1191c:	ldr	r3, [r3]
   11920:	mov	r0, r3
   11924:	bl	10a1c <fflush@plt>
   11928:	ldr	r3, [pc, #84]	; 11984 <maior_que_HeapSort@@Base+0xbc>
   1192c:	ldr	r3, [r4, r3]
   11930:	ldr	r3, [r3]
   11934:	add	r2, r3, #1
   11938:	ldr	r3, [pc, #68]	; 11984 <maior_que_HeapSort@@Base+0xbc>
   1193c:	ldr	r3, [r4, r3]
   11940:	str	r2, [r3]
   11944:	ldr	r3, [fp, #-16]
   11948:	ldr	r2, [r3, #4]
   1194c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11950:	ldr	r3, [r3, #4]
   11954:	mov	r1, r3
   11958:	mov	r0, r2
   1195c:	bl	109ec <strcmp@plt>
   11960:	mov	r3, r0
   11964:	lsr	r3, r3, #31
   11968:	uxtb	r3, r3
   1196c:	mov	r0, r3
   11970:	sub	sp, fp, #8
   11974:	pop	{r4, fp, pc}
   11978:	andeq	r1, r1, r8, lsl r7
   1197c:	muleq	r0, r0, r6
   11980:	andeq	r0, r0, r4, rrx
   11984:	andeq	r0, r0, r8, asr r0

00011988 <vetor_imprime@@Base>:
   11988:	push	{fp, lr}
   1198c:	add	fp, sp, #4
   11990:	sub	sp, sp, #16
   11994:	str	r0, [fp, #-16]
   11998:	ldr	r3, [fp, #-16]
   1199c:	ldr	r3, [r3]
   119a0:	cmp	r3, #0
   119a4:	ble	119e8 <vetor_imprime@@Base+0x60>
   119a8:	ldr	r3, [fp, #-16]
   119ac:	ldr	r3, [r3, #8]
   119b0:	ldr	r3, [r3]
   119b4:	ldr	r1, [r3, #4]
   119b8:	ldr	r3, [fp, #-16]
   119bc:	ldr	r3, [r3, #8]
   119c0:	ldr	r3, [r3]
   119c4:	ldr	r3, [r3]
   119c8:	mov	r2, r3
   119cc:	ldr	r3, [pc, #164]	; 11a78 <vetor_imprime@@Base+0xf0>
   119d0:	add	r3, pc, r3
   119d4:	mov	r0, r3
   119d8:	bl	109f8 <printf@plt>
   119dc:	mov	r3, #1
   119e0:	str	r3, [fp, #-8]
   119e4:	b	11a54 <vetor_imprime@@Base+0xcc>
   119e8:	ldr	r3, [pc, #140]	; 11a7c <vetor_imprime@@Base+0xf4>
   119ec:	add	r3, pc, r3
   119f0:	mov	r0, r3
   119f4:	bl	10a4c <puts@plt>
   119f8:	b	11a70 <vetor_imprime@@Base+0xe8>
   119fc:	ldr	r3, [fp, #-16]
   11a00:	ldr	r2, [r3, #8]
   11a04:	ldr	r3, [fp, #-8]
   11a08:	lsl	r3, r3, #2
   11a0c:	add	r3, r2, r3
   11a10:	ldr	r3, [r3]
   11a14:	ldr	r1, [r3, #4]
   11a18:	ldr	r3, [fp, #-16]
   11a1c:	ldr	r2, [r3, #8]
   11a20:	ldr	r3, [fp, #-8]
   11a24:	lsl	r3, r3, #2
   11a28:	add	r3, r2, r3
   11a2c:	ldr	r3, [r3]
   11a30:	ldr	r3, [r3]
   11a34:	mov	r2, r3
   11a38:	ldr	r3, [pc, #64]	; 11a80 <vetor_imprime@@Base+0xf8>
   11a3c:	add	r3, pc, r3
   11a40:	mov	r0, r3
   11a44:	bl	109f8 <printf@plt>
   11a48:	ldr	r3, [fp, #-8]
   11a4c:	add	r3, r3, #1
   11a50:	str	r3, [fp, #-8]
   11a54:	ldr	r3, [fp, #-16]
   11a58:	ldr	r2, [r3]
   11a5c:	ldr	r3, [fp, #-8]
   11a60:	cmp	r2, r3
   11a64:	bgt	119fc <vetor_imprime@@Base+0x74>
   11a68:	mov	r0, #10
   11a6c:	bl	10a94 <putchar@plt>
   11a70:	sub	sp, fp, #4
   11a74:	pop	{fp, pc}
   11a78:	andeq	r0, r0, ip, asr #11
   11a7c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11a80:	muleq	r0, r8, r5

00011a84 <vetor_imprimeHeap@@Base>:
   11a84:	push	{fp, lr}
   11a88:	add	fp, sp, #4
   11a8c:	sub	sp, sp, #16
   11a90:	str	r0, [fp, #-16]
   11a94:	ldr	r3, [fp, #-16]
   11a98:	ldr	r3, [r3]
   11a9c:	cmp	r3, #0
   11aa0:	ble	11aec <vetor_imprimeHeap@@Base+0x68>
   11aa4:	ldr	r3, [fp, #-16]
   11aa8:	ldr	r3, [r3, #8]
   11aac:	add	r3, r3, #4
   11ab0:	ldr	r3, [r3]
   11ab4:	ldr	r1, [r3, #4]
   11ab8:	ldr	r3, [fp, #-16]
   11abc:	ldr	r3, [r3, #8]
   11ac0:	add	r3, r3, #4
   11ac4:	ldr	r3, [r3]
   11ac8:	ldr	r3, [r3]
   11acc:	mov	r2, r3
   11ad0:	ldr	r3, [pc, #164]	; 11b7c <vetor_imprimeHeap@@Base+0xf8>
   11ad4:	add	r3, pc, r3
   11ad8:	mov	r0, r3
   11adc:	bl	109f8 <printf@plt>
   11ae0:	mov	r3, #2
   11ae4:	str	r3, [fp, #-8]
   11ae8:	b	11b58 <vetor_imprimeHeap@@Base+0xd4>
   11aec:	ldr	r3, [pc, #140]	; 11b80 <vetor_imprimeHeap@@Base+0xfc>
   11af0:	add	r3, pc, r3
   11af4:	mov	r0, r3
   11af8:	bl	10a4c <puts@plt>
   11afc:	b	11b74 <vetor_imprimeHeap@@Base+0xf0>
   11b00:	ldr	r3, [fp, #-16]
   11b04:	ldr	r2, [r3, #8]
   11b08:	ldr	r3, [fp, #-8]
   11b0c:	lsl	r3, r3, #2
   11b10:	add	r3, r2, r3
   11b14:	ldr	r3, [r3]
   11b18:	ldr	r1, [r3, #4]
   11b1c:	ldr	r3, [fp, #-16]
   11b20:	ldr	r2, [r3, #8]
   11b24:	ldr	r3, [fp, #-8]
   11b28:	lsl	r3, r3, #2
   11b2c:	add	r3, r2, r3
   11b30:	ldr	r3, [r3]
   11b34:	ldr	r3, [r3]
   11b38:	mov	r2, r3
   11b3c:	ldr	r3, [pc, #64]	; 11b84 <vetor_imprimeHeap@@Base+0x100>
   11b40:	add	r3, pc, r3
   11b44:	mov	r0, r3
   11b48:	bl	109f8 <printf@plt>
   11b4c:	ldr	r3, [fp, #-8]
   11b50:	add	r3, r3, #1
   11b54:	str	r3, [fp, #-8]
   11b58:	ldr	r3, [fp, #-16]
   11b5c:	ldr	r2, [r3]
   11b60:	ldr	r3, [fp, #-8]
   11b64:	cmp	r2, r3
   11b68:	bgt	11b00 <vetor_imprimeHeap@@Base+0x7c>
   11b6c:	mov	r0, #10
   11b70:	bl	10a94 <putchar@plt>
   11b74:	sub	sp, fp, #4
   11b78:	pop	{fp, pc}
   11b7c:	andeq	r0, r0, r8, asr #9
   11b80:	andeq	r0, r0, ip, asr #9
   11b84:	muleq	r0, r4, r4

00011b88 <__libc_csu_init@@Base>:
   11b88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b8c:	mov	r7, r0
   11b90:	ldr	r6, [pc, #72]	; 11be0 <__libc_csu_init@@Base+0x58>
   11b94:	ldr	r5, [pc, #72]	; 11be4 <__libc_csu_init@@Base+0x5c>
   11b98:	add	r6, pc, r6
   11b9c:	add	r5, pc, r5
   11ba0:	sub	r6, r6, r5
   11ba4:	mov	r8, r1
   11ba8:	mov	r9, r2
   11bac:	bl	109c0 <calloc@plt-0x20>
   11bb0:	asrs	r6, r6, #2
   11bb4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bb8:	mov	r4, #0
   11bbc:	add	r4, r4, #1
   11bc0:	ldr	r3, [r5], #4
   11bc4:	mov	r2, r9
   11bc8:	mov	r1, r8
   11bcc:	mov	r0, r7
   11bd0:	blx	r3
   11bd4:	cmp	r6, r4
   11bd8:	bne	11bbc <__libc_csu_init@@Base+0x34>
   11bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11be0:	andeq	r1, r1, r0, ror r3
   11be4:	andeq	r1, r1, r8, ror #6

00011be8 <__libc_csu_fini@@Base>:
   11be8:	bx	lr

Disassembly of section .fini:

00011bec <.fini>:
   11bec:	push	{r3, lr}
   11bf0:	pop	{r3, pc}
