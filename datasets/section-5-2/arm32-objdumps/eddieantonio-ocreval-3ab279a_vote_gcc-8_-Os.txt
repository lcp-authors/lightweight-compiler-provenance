
../repos/eddieantonio-ocreval-3ab279a/vote/vote:     file format elf32-littlearm


Disassembly of section .init:

00010870 <.init>:
   10870:	push	{r3, lr}
   10874:	bl	10ab8 <getc@plt+0xc0>
   10878:	pop	{r3, pc}

Disassembly of section .plt:

0001087c <calloc@plt-0x14>:
   1087c:	push	{lr}		; (str lr, [sp, #-4]!)
   10880:	ldr	lr, [pc, #4]	; 1088c <calloc@plt-0x4>
   10884:	add	lr, pc, lr
   10888:	ldr	pc, [lr, #8]!
   1088c:	andeq	r3, r1, r4, ror r7

00010890 <calloc@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #77824	; 0x13000
   10898:	ldr	pc, [ip, #1908]!	; 0x774

0001089c <strcmp@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #77824	; 0x13000
   108a4:	ldr	pc, [ip, #1900]!	; 0x76c

000108a8 <printf@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #77824	; 0x13000
   108b0:	ldr	pc, [ip, #1892]!	; 0x764

000108b4 <fopen@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #77824	; 0x13000
   108bc:	ldr	pc, [ip, #1884]!	; 0x75c

000108c0 <free@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #77824	; 0x13000
   108c8:	ldr	pc, [ip, #1876]!	; 0x754

000108cc <utf8proc_get_property@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #77824	; 0x13000
   108d4:	ldr	pc, [ip, #1868]!	; 0x74c

000108d8 <fgets@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #77824	; 0x13000
   108e0:	ldr	pc, [ip, #1860]!	; 0x744

000108e4 <utf8proc_encode_char@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #77824	; 0x13000
   108ec:	ldr	pc, [ip, #1852]!	; 0x73c

000108f0 <strdup@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #77824	; 0x13000
   108f8:	ldr	pc, [ip, #1844]!	; 0x734

000108fc <rewind@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #77824	; 0x13000
   10904:	ldr	pc, [ip, #1836]!	; 0x72c

00010908 <unlink@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #77824	; 0x13000
   10910:	ldr	pc, [ip, #1828]!	; 0x724

00010914 <utf8proc_tolower@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #77824	; 0x13000
   1091c:	ldr	pc, [ip, #1820]!	; 0x71c

00010920 <__xstat@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #77824	; 0x13000
   10928:	ldr	pc, [ip, #1812]!	; 0x714

0001092c <strcat@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #77824	; 0x13000
   10934:	ldr	pc, [ip, #1804]!	; 0x70c

00010938 <fread@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #77824	; 0x13000
   10940:	ldr	pc, [ip, #1796]!	; 0x704

00010944 <utf8proc_iterate@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #77824	; 0x13000
   1094c:	ldr	pc, [ip, #1788]!	; 0x6fc

00010950 <__libc_start_main@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #77824	; 0x13000
   10958:	ldr	pc, [ip, #1780]!	; 0x6f4

0001095c <__sysv_signal@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #77824	; 0x13000
   10964:	ldr	pc, [ip, #1772]!	; 0x6ec

00010968 <__gmon_start__@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #77824	; 0x13000
   10970:	ldr	pc, [ip, #1764]!	; 0x6e4

00010974 <getpid@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #77824	; 0x13000
   1097c:	ldr	pc, [ip, #1756]!	; 0x6dc

00010980 <exit@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #77824	; 0x13000
   10988:	ldr	pc, [ip, #1748]!	; 0x6d4

0001098c <utf8proc_category@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #77824	; 0x13000
   10994:	ldr	pc, [ip, #1740]!	; 0x6cc

00010998 <strlen@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #77824	; 0x13000
   109a0:	ldr	pc, [ip, #1732]!	; 0x6c4

000109a4 <fprintf@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #77824	; 0x13000
   109ac:	ldr	pc, [ip, #1724]!	; 0x6bc

000109b0 <fclose@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #77824	; 0x13000
   109b8:	ldr	pc, [ip, #1716]!	; 0x6b4

000109bc <sprintf@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #77824	; 0x13000
   109c4:	ldr	pc, [ip, #1708]!	; 0x6ac

000109c8 <utf8proc_errmsg@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #77824	; 0x13000
   109d0:	ldr	pc, [ip, #1700]!	; 0x6a4

000109d4 <fputs@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #77824	; 0x13000
   109dc:	ldr	pc, [ip, #1692]!	; 0x69c

000109e0 <strncmp@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #77824	; 0x13000
   109e8:	ldr	pc, [ip, #1684]!	; 0x694

000109ec <abort@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #77824	; 0x13000
   109f4:	ldr	pc, [ip, #1676]!	; 0x68c

000109f8 <getc@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #77824	; 0x13000
   10a00:	ldr	pc, [ip, #1668]!	; 0x684

Disassembly of section .text:

00010a08 <error@@Base-0x1940>:
   10a08:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   10a0c:	mov	r5, r1
   10a10:	ldr	r4, [pc, #80]	; 10a68 <getc@plt+0x70>
   10a14:	str	r0, [sp, #4]
   10a18:	add	r0, sp, #4
   10a1c:	ldr	r2, [pc, #72]	; 10a6c <getc@plt+0x74>
   10a20:	add	r3, r4, #20
   10a24:	bl	12468 <error@@Base+0x120>
   10a28:	mov	r1, r5
   10a2c:	ldr	r0, [sp, #4]
   10a30:	bl	10c10 <getc@plt+0x218>
   10a34:	bl	10ff0 <getc@plt+0x5f8>
   10a38:	ldr	r2, [pc, #48]	; 10a70 <getc@plt+0x78>
   10a3c:	add	r0, sp, #8
   10a40:	ldrsh	r1, [r4, #12]
   10a44:	bl	11b38 <getc@plt+0x1140>
   10a48:	add	r0, sp, #8
   10a4c:	bl	112cc <getc@plt+0x8d4>
   10a50:	ldr	r3, [pc, #28]	; 10a74 <getc@plt+0x7c>
   10a54:	mov	r2, #0
   10a58:	ldr	r0, [pc, #24]	; 10a78 <getc@plt+0x80>
   10a5c:	ldr	r1, [r3]
   10a60:	bl	12ae8 <error@@Base+0x7a0>
   10a64:	bl	122f0 <getc@plt+0x18f8>
   10a68:	muleq	r2, r4, r0
   10a6c:	andeq	r2, r1, r5, lsr #28
   10a70:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   10a74:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   10a78:	ldrdeq	r4, [r2], -ip
   10a7c:	mov	fp, #0
   10a80:	mov	lr, #0
   10a84:	pop	{r1}		; (ldr r1, [sp], #4)
   10a88:	mov	r2, sp
   10a8c:	push	{r2}		; (str r2, [sp, #-4]!)
   10a90:	push	{r0}		; (str r0, [sp, #-4]!)
   10a94:	ldr	ip, [pc, #16]	; 10aac <getc@plt+0xb4>
   10a98:	push	{ip}		; (str ip, [sp, #-4]!)
   10a9c:	ldr	r0, [pc, #12]	; 10ab0 <getc@plt+0xb8>
   10aa0:	ldr	r3, [pc, #12]	; 10ab4 <getc@plt+0xbc>
   10aa4:	bl	10950 <__libc_start_main@plt>
   10aa8:	bl	109ec <abort@plt>
   10aac:	andeq	r2, r1, r0, asr #27
   10ab0:	andeq	r0, r1, r8, lsl #20
   10ab4:	andeq	r2, r1, r0, ror #26
   10ab8:	ldr	r3, [pc, #20]	; 10ad4 <getc@plt+0xdc>
   10abc:	ldr	r2, [pc, #20]	; 10ad8 <getc@plt+0xe0>
   10ac0:	add	r3, pc, r3
   10ac4:	ldr	r2, [r3, r2]
   10ac8:	cmp	r2, #0
   10acc:	bxeq	lr
   10ad0:	b	10968 <__gmon_start__@plt>
   10ad4:	andeq	r3, r1, r8, lsr r5
   10ad8:	andeq	r0, r0, r8, lsl #1
   10adc:	ldr	r0, [pc, #24]	; 10afc <getc@plt+0x104>
   10ae0:	ldr	r3, [pc, #24]	; 10b00 <getc@plt+0x108>
   10ae4:	cmp	r3, r0
   10ae8:	bxeq	lr
   10aec:	ldr	r3, [pc, #16]	; 10b04 <getc@plt+0x10c>
   10af0:	cmp	r3, #0
   10af4:	bxeq	lr
   10af8:	bx	r3
   10afc:	strdeq	r4, [r2], -r8
   10b00:	strdeq	r4, [r2], -r8
   10b04:	andeq	r0, r0, r0
   10b08:	ldr	r0, [pc, #36]	; 10b34 <getc@plt+0x13c>
   10b0c:	ldr	r1, [pc, #36]	; 10b38 <getc@plt+0x140>
   10b10:	sub	r1, r1, r0
   10b14:	asr	r1, r1, #2
   10b18:	add	r1, r1, r1, lsr #31
   10b1c:	asrs	r1, r1, #1
   10b20:	bxeq	lr
   10b24:	ldr	r3, [pc, #16]	; 10b3c <getc@plt+0x144>
   10b28:	cmp	r3, #0
   10b2c:	bxeq	lr
   10b30:	bx	r3
   10b34:	strdeq	r4, [r2], -r8
   10b38:	strdeq	r4, [r2], -r8
   10b3c:	andeq	r0, r0, r0
   10b40:	push	{r4, lr}
   10b44:	ldr	r4, [pc, #24]	; 10b64 <getc@plt+0x16c>
   10b48:	ldrb	r3, [r4]
   10b4c:	cmp	r3, #0
   10b50:	popne	{r4, pc}
   10b54:	bl	10adc <getc@plt+0xe4>
   10b58:	mov	r3, #1
   10b5c:	strb	r3, [r4]
   10b60:	pop	{r4, pc}
   10b64:	andeq	r4, r2, r8, lsl #2
   10b68:	b	10b08 <getc@plt+0x110>
   10b6c:	andeq	r0, r0, r0
   10b70:	ldr	r0, [r0]
   10b74:	ldr	r3, [r1]
   10b78:	sub	r0, r0, r3
   10b7c:	bx	lr
   10b80:	vldr	d6, [r0, #24]
   10b84:	vldr	d7, [r1, #24]
   10b88:	vcmp.f64	d6, d7
   10b8c:	vmrs	APSR_nzcv, fpscr
   10b90:	beq	10ba8 <getc@plt+0x1b0>
   10b94:	vcmpe.f64	d6, d7
   10b98:	vmrs	APSR_nzcv, fpscr
   10b9c:	mvnmi	r0, #0
   10ba0:	movpl	r0, #1
   10ba4:	bx	lr
   10ba8:	ldrsh	r0, [r0]
   10bac:	ldrsh	r3, [r1]
   10bb0:	sub	r0, r0, r3
   10bb4:	bx	lr
   10bb8:	ldrb	ip, [r0]
   10bbc:	cmp	ip, #48	; 0x30
   10bc0:	bls	10c08 <getc@plt+0x210>
   10bc4:	ldrb	r3, [r0, #1]
   10bc8:	cmp	r3, #47	; 0x2f
   10bcc:	bne	10c08 <getc@plt+0x210>
   10bd0:	ldrb	r3, [r0, #2]
   10bd4:	cmp	ip, r3
   10bd8:	cmpls	r3, #57	; 0x39
   10bdc:	bhi	10c08 <getc@plt+0x210>
   10be0:	ldrb	r3, [r0, #3]
   10be4:	cmp	r3, #0
   10be8:	bne	10c08 <getc@plt+0x210>
   10bec:	sub	ip, ip, #48	; 0x30
   10bf0:	strh	ip, [r1]
   10bf4:	ldrb	r3, [r0, #2]
   10bf8:	mov	r0, #1
   10bfc:	sub	r3, r3, #48	; 0x30
   10c00:	strh	r3, [r2]
   10c04:	bx	lr
   10c08:	mov	r0, #0
   10c0c:	bx	lr
   10c10:	sub	r3, r0, #2
   10c14:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   10c18:	cmp	r3, #14
   10c1c:	bls	10d14 <getc@plt+0x31c>
   10c20:	ldr	r0, [pc, #272]	; 10d38 <getc@plt+0x340>
   10c24:	bl	12348 <error@@Base>
   10c28:	mov	r1, #32
   10c2c:	mov	r0, #1
   10c30:	bl	12384 <error@@Base+0x3c>
   10c34:	ldr	r3, [r6, r5, lsl #2]
   10c38:	mov	r2, sl
   10c3c:	str	r0, [r9, r5, lsl #2]
   10c40:	add	r0, r0, #8
   10c44:	strh	r8, [r0, #-8]
   10c48:	str	r3, [r0, #-4]
   10c4c:	ldr	r1, [r6, r5, lsl #2]
   10c50:	mov	r5, r7
   10c54:	bl	1269c <error@@Base+0x354>
   10c58:	cmp	r4, r5
   10c5c:	sxth	r8, r5
   10c60:	add	r7, r5, #1
   10c64:	bgt	10c28 <getc@plt+0x230>
   10c68:	ldr	r3, [pc, #204]	; 10d3c <getc@plt+0x344>
   10c6c:	sxth	r4, r4
   10c70:	ldr	r5, [pc, #200]	; 10d40 <getc@plt+0x348>
   10c74:	strh	r4, [r3]
   10c78:	ldr	r3, [pc, #196]	; 10d44 <getc@plt+0x34c>
   10c7c:	ldrb	r3, [r3]
   10c80:	cmp	r3, #0
   10c84:	beq	10c94 <getc@plt+0x29c>
   10c88:	ldrsh	r3, [r5, #12]
   10c8c:	cmp	r3, r4
   10c90:	ble	10c98 <getc@plt+0x2a0>
   10c94:	strh	r4, [r5, #12]
   10c98:	ldr	r4, [pc, #168]	; 10d48 <getc@plt+0x350>
   10c9c:	ldr	r0, [r4]
   10ca0:	cmp	r0, #0
   10ca4:	beq	10cc4 <getc@plt+0x2cc>
   10ca8:	ldr	r2, [pc, #156]	; 10d4c <getc@plt+0x354>
   10cac:	add	r1, r2, #2
   10cb0:	bl	10bb8 <getc@plt+0x1c0>
   10cb4:	cmp	r0, #0
   10cb8:	ldreq	r0, [pc, #144]	; 10d50 <getc@plt+0x358>
   10cbc:	ldreq	r1, [r4]
   10cc0:	beq	10d34 <getc@plt+0x33c>
   10cc4:	ldr	r4, [pc, #136]	; 10d54 <getc@plt+0x35c>
   10cc8:	ldr	r0, [r4]
   10ccc:	cmp	r0, #0
   10cd0:	beq	10d0c <getc@plt+0x314>
   10cd4:	add	r2, sp, #6
   10cd8:	add	r1, sp, #4
   10cdc:	bl	10bb8 <getc@plt+0x1c0>
   10ce0:	cmp	r0, #0
   10ce4:	beq	10d2c <getc@plt+0x334>
   10ce8:	ldrh	r3, [r5, #12]
   10cec:	ldrh	r2, [r5, #14]
   10cf0:	smulbb	r2, r3, r2
   10cf4:	ldrsh	r3, [sp, #4]
   10cf8:	mul	r3, r3, r2
   10cfc:	ldrsh	r2, [sp, #6]
   10d00:	sdiv	r3, r3, r2
   10d04:	ldr	r2, [pc, #76]	; 10d58 <getc@plt+0x360>
   10d08:	strh	r3, [r2]
   10d0c:	add	sp, sp, #8
   10d10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d14:	mov	r4, r0
   10d18:	mov	r6, r1
   10d1c:	ldr	r9, [pc, #56]	; 10d5c <getc@plt+0x364>
   10d20:	mov	r5, #0
   10d24:	ldr	sl, [pc, #20]	; 10d40 <getc@plt+0x348>
   10d28:	b	10c58 <getc@plt+0x260>
   10d2c:	ldr	r0, [pc, #44]	; 10d60 <getc@plt+0x368>
   10d30:	ldr	r1, [r4]
   10d34:	bl	123cc <error@@Base+0x84>
   10d38:	andeq	r2, r1, r0, ror #27
   10d3c:	ldrdeq	r4, [r2], -r8
   10d40:	muleq	r2, r4, r0
   10d44:	andeq	r4, r2, sp, ror #5
   10d48:	andeq	r4, r2, r8, ror r3
   10d4c:	andeq	r4, r2, r2, lsr #1
   10d50:	strdeq	r2, [r1], -r9
   10d54:	strdeq	r4, [r2], -r0
   10d58:	strdeq	r6, [r2], -r4
   10d5c:	muleq	r2, r4, r1
   10d60:	andeq	r2, r1, r8, lsl #28
   10d64:	push	{r4, r5, r6, r7, r8, lr}
   10d68:	mov	r5, r0
   10d6c:	uxtb	r7, r1
   10d70:	mov	r1, r0
   10d74:	sxth	r6, r2
   10d78:	ldr	r0, [pc, #80]	; 10dd0 <getc@plt+0x3d8>
   10d7c:	bl	11fb0 <getc@plt+0x15b8>
   10d80:	subs	r4, r0, #0
   10d84:	bne	10dbc <getc@plt+0x3c4>
   10d88:	mov	r1, #80	; 0x50
   10d8c:	mov	r0, #1
   10d90:	bl	12384 <error@@Base+0x3c>
   10d94:	mov	r4, r0
   10d98:	mov	r0, r5
   10d9c:	bl	108f0 <strdup@plt>
   10da0:	cmp	r7, #0
   10da4:	mov	r1, r4
   10da8:	str	r0, [r4, #8]
   10dac:	moveq	r3, #1065353216	; 0x3f800000
   10db0:	ldr	r0, [pc, #24]	; 10dd0 <getc@plt+0x3d8>
   10db4:	streq	r3, [r4, #76]	; 0x4c
   10db8:	bl	11ff4 <getc@plt+0x15fc>
   10dbc:	add	r4, r4, r6, lsl #2
   10dc0:	ldr	r3, [r4, #12]
   10dc4:	add	r3, r3, #1
   10dc8:	str	r3, [r4, #12]
   10dcc:	pop	{r4, r5, r6, r7, r8, pc}
   10dd0:	andeq	r4, r2, ip, ror r3
   10dd4:	ldr	r3, [pc, #168]	; 10e84 <getc@plt+0x48c>
   10dd8:	push	{r4, r5, r6, r7, r8, lr}
   10ddc:	sxth	r7, r0
   10de0:	sub	sp, sp, #32
   10de4:	mov	r8, #0
   10de8:	ldr	r3, [r3, r7, lsl #2]
   10dec:	ldr	r4, [r3, #8]
   10df0:	cmp	r4, #0
   10df4:	bne	10e00 <getc@plt+0x408>
   10df8:	add	sp, sp, #32
   10dfc:	pop	{r4, r5, r6, r7, r8, pc}
   10e00:	mov	r3, #0
   10e04:	mov	r2, sp
   10e08:	strb	r8, [sp, #12]
   10e0c:	mov	r0, r3
   10e10:	ldr	r1, [r4, #12]
   10e14:	bl	129f0 <error@@Base+0x6a8>
   10e18:	mov	r1, sp
   10e1c:	add	r0, sp, #12
   10e20:	bl	1092c <strcat@plt>
   10e24:	ldr	r6, [r4, #4]
   10e28:	ldr	r5, [r4, #12]
   10e2c:	cmp	r6, #0
   10e30:	sub	r5, r5, #126	; 0x7e
   10e34:	clz	r5, r5
   10e38:	lsr	r5, r5, #5
   10e3c:	beq	10df8 <getc@plt+0x400>
   10e40:	mov	r3, #0
   10e44:	mov	r2, sp
   10e48:	ldr	r1, [r6, #12]
   10e4c:	mov	r0, r3
   10e50:	bl	129f0 <error@@Base+0x6a8>
   10e54:	mov	r1, sp
   10e58:	add	r0, sp, #12
   10e5c:	bl	1092c <strcat@plt>
   10e60:	ldr	r3, [r6, #12]
   10e64:	mov	r2, r7
   10e68:	add	r0, sp, #12
   10e6c:	cmp	r3, #126	; 0x7e
   10e70:	movne	r1, r5
   10e74:	moveq	r1, #1
   10e78:	bl	10d64 <getc@plt+0x36c>
   10e7c:	ldr	r4, [r4, #4]
   10e80:	b	10df0 <getc@plt+0x3f8>
   10e84:	muleq	r2, r4, r1
   10e88:	vldr	s15, [r0, #76]	; 0x4c
   10e8c:	vcmp.f32	s15, #0.0
   10e90:	vmrs	APSR_nzcv, fpscr
   10e94:	bxeq	lr
   10e98:	push	{r4, r5, r6, r7, r8, lr}
   10e9c:	mov	r6, r0
   10ea0:	ldr	r4, [pc, #200]	; 10f70 <getc@plt+0x578>
   10ea4:	ldr	r7, [pc, #200]	; 10f74 <getc@plt+0x57c>
   10ea8:	ldr	r5, [r4]
   10eac:	cmp	r5, #0
   10eb0:	moveq	r8, r4
   10eb4:	beq	10f44 <getc@plt+0x54c>
   10eb8:	ldrsh	r5, [r7]
   10ebc:	add	r1, r6, #12
   10ec0:	mov	r3, #0
   10ec4:	ldr	r2, [pc, #164]	; 10f70 <getc@plt+0x578>
   10ec8:	cmp	r3, r5
   10ecc:	blt	10f54 <getc@plt+0x55c>
   10ed0:	bic	r5, r5, r5, asr #31
   10ed4:	ldr	r2, [pc, #156]	; 10f78 <getc@plt+0x580>
   10ed8:	ldr	r1, [pc, #144]	; 10f70 <getc@plt+0x578>
   10edc:	mov	r0, r5
   10ee0:	bl	11460 <getc@plt+0xa68>
   10ee4:	asr	r3, r5, #1
   10ee8:	tst	r5, #1
   10eec:	ldrne	r3, [r4, r3, lsl #2]
   10ef0:	vldrne	s14, [r3]
   10ef4:	vcvtne.f64.s32	d7, s14
   10ef8:	bne	10f24 <getc@plt+0x52c>
   10efc:	sub	r2, r3, #1
   10f00:	vldr	d6, [pc, #96]	; 10f68 <getc@plt+0x570>
   10f04:	ldr	r1, [r4, r2, lsl #2]
   10f08:	ldr	r2, [r4, r3, lsl #2]
   10f0c:	ldr	r3, [r1]
   10f10:	ldr	r2, [r2]
   10f14:	add	r3, r3, r2
   10f18:	vmov	s14, r3
   10f1c:	vcvt.f64.s32	d7, s14
   10f20:	vmul.f64	d7, d7, d6
   10f24:	vcvt.f32.f64	s14, d7
   10f28:	vstr	s14, [r6, #76]	; 0x4c
   10f2c:	pop	{r4, r5, r6, r7, r8, pc}
   10f30:	mov	r1, #4
   10f34:	mov	r0, #1
   10f38:	add	r5, r5, #1
   10f3c:	bl	12384 <error@@Base+0x3c>
   10f40:	str	r0, [r8], #4
   10f44:	ldrsh	r3, [r7]
   10f48:	cmp	r5, r3
   10f4c:	blt	10f30 <getc@plt+0x538>
   10f50:	b	10eb8 <getc@plt+0x4c0>
   10f54:	ldr	r0, [r2], #4
   10f58:	add	r3, r3, #1
   10f5c:	ldr	ip, [r1], #4
   10f60:	str	ip, [r0]
   10f64:	b	10ec8 <getc@plt+0x4d0>
   10f68:	andeq	r0, r0, r0
   10f6c:	svccc	0x00e00000
   10f70:	andeq	r4, r2, ip, lsl #2
   10f74:	ldrdeq	r4, [r2], -r8
   10f78:	andeq	r0, r1, r0, ror fp
   10f7c:	ldr	r3, [pc, #100]	; 10fe8 <getc@plt+0x5f0>
   10f80:	sxth	r0, r0
   10f84:	push	{r4, r5, lr}
   10f88:	add	r2, r0, #2
   10f8c:	lsl	r2, r2, #2
   10f90:	ldr	r4, [pc, #84]	; 10fec <getc@plt+0x5f4>
   10f94:	ldr	lr, [r3, #3952]	; 0xf70
   10f98:	ldr	ip, [r3, #3956]	; 0xf74
   10f9c:	mov	r3, #0
   10fa0:	cmp	ip, r3
   10fa4:	pople	{r4, r5, pc}
   10fa8:	ldr	r1, [lr, r3, lsl #2]
   10fac:	add	r3, r3, #1
   10fb0:	add	r5, r1, r2
   10fb4:	vldr	s14, [r1, #76]	; 0x4c
   10fb8:	vldr	s15, [r5, #4]
   10fbc:	ldr	r1, [r4, r0, lsl #2]
   10fc0:	vcvt.f32.s32	s15, s15
   10fc4:	vsub.f32	s15, s15, s14
   10fc8:	vcmpe.f32	s15, #0.0
   10fcc:	vcvt.f64.f32	d6, s15
   10fd0:	vldr	d7, [r1, #24]
   10fd4:	vmrs	APSR_nzcv, fpscr
   10fd8:	vnegmi.f64	d6, d6
   10fdc:	vadd.f64	d7, d7, d6
   10fe0:	vstr	d7, [r1, #24]
   10fe4:	b	10fa0 <getc@plt+0x5a8>
   10fe8:	andeq	r5, r2, ip, ror r3
   10fec:	muleq	r2, r4, r1
   10ff0:	ldr	r3, [pc, #284]	; 11114 <getc@plt+0x71c>
   10ff4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   10ff8:	ldrb	r3, [r3]
   10ffc:	cmp	r3, #0
   11000:	bne	110c4 <getc@plt+0x6cc>
   11004:	ldr	r4, [pc, #268]	; 11118 <getc@plt+0x720>
   11008:	mov	ip, #0
   1100c:	ldr	r5, [pc, #264]	; 1111c <getc@plt+0x724>
   11010:	ldr	r6, [pc, #264]	; 11120 <getc@plt+0x728>
   11014:	ldrsh	r3, [r5, #12]
   11018:	cmp	r3, ip
   1101c:	bgt	110f8 <getc@plt+0x700>
   11020:	add	sp, sp, #12
   11024:	pop	{r4, r5, r6, r7, pc}
   11028:	mov	r0, r4
   1102c:	add	r4, r4, #1
   11030:	bl	10dd4 <getc@plt+0x3dc>
   11034:	ldrsh	r3, [r6]
   11038:	cmp	r3, r4
   1103c:	bgt	11028 <getc@plt+0x630>
   11040:	ldr	r6, [pc, #220]	; 11124 <getc@plt+0x72c>
   11044:	mov	r4, #0
   11048:	ldr	r0, [pc, #216]	; 11128 <getc@plt+0x730>
   1104c:	bl	1207c <getc@plt+0x1684>
   11050:	ldr	r3, [r6, #3956]	; 0xf74
   11054:	cmp	r3, r4
   11058:	bgt	110d4 <getc@plt+0x6dc>
   1105c:	mov	r4, #0
   11060:	ldrsh	r3, [r5]
   11064:	cmp	r3, r4
   11068:	bgt	110e8 <getc@plt+0x6f0>
   1106c:	ldr	r2, [pc, #184]	; 1112c <getc@plt+0x734>
   11070:	mov	r0, r4
   11074:	ldr	r1, [pc, #156]	; 11118 <getc@plt+0x720>
   11078:	bl	11460 <getc@plt+0xa68>
   1107c:	ldr	r3, [pc, #172]	; 11130 <getc@plt+0x738>
   11080:	ldrb	r3, [r3]
   11084:	cmp	r3, #0
   11088:	beq	11004 <getc@plt+0x60c>
   1108c:	ldr	r6, [pc, #132]	; 11118 <getc@plt+0x720>
   11090:	mov	r4, #0
   11094:	ldr	r7, [pc, #152]	; 11134 <getc@plt+0x73c>
   11098:	ldrsh	r3, [r5]
   1109c:	cmp	r3, r4
   110a0:	ble	11004 <getc@plt+0x60c>
   110a4:	ldr	r3, [r6], #4
   110a8:	mov	r0, r7
   110ac:	add	r4, r4, #1
   110b0:	ldr	r2, [r3, #4]
   110b4:	str	r2, [sp]
   110b8:	ldrd	r2, [r3, #24]
   110bc:	bl	108a8 <printf@plt>
   110c0:	b	11098 <getc@plt+0x6a0>
   110c4:	ldr	r6, [pc, #108]	; 11138 <getc@plt+0x740>
   110c8:	mov	r4, #0
   110cc:	mov	r5, r6
   110d0:	b	11034 <getc@plt+0x63c>
   110d4:	ldr	r3, [r6, #3952]	; 0xf70
   110d8:	ldr	r0, [r3, r4, lsl #2]
   110dc:	add	r4, r4, #1
   110e0:	bl	10e88 <getc@plt+0x490>
   110e4:	b	11050 <getc@plt+0x658>
   110e8:	mov	r0, r4
   110ec:	add	r4, r4, #1
   110f0:	bl	10f7c <getc@plt+0x584>
   110f4:	b	11060 <getc@plt+0x668>
   110f8:	ldr	r3, [r4], #4
   110fc:	add	lr, r6, ip, lsl #4
   11100:	add	ip, ip, #1
   11104:	add	r3, r3, #8
   11108:	ldm	r3, {r0, r1, r2, r3}
   1110c:	stm	lr, {r0, r1, r2, r3}
   11110:	b	11014 <getc@plt+0x61c>
   11114:	andeq	r4, r2, sp, ror #5
   11118:	muleq	r2, r4, r1
   1111c:	muleq	r2, r4, r0
   11120:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   11124:	andeq	r5, r2, ip, ror r3
   11128:	andeq	r4, r2, ip, ror r3
   1112c:	andeq	r0, r1, r0, lsl #23
   11130:	andeq	r4, r2, ip, ror #5
   11134:	andeq	r2, r1, sl, lsl lr
   11138:	ldrdeq	r4, [r2], -r8
   1113c:	ldr	r3, [pc, #200]	; 1120c <getc@plt+0x814>
   11140:	cmp	r0, #0
   11144:	push	{r4, r5, lr}
   11148:	ldrsh	ip, [r3, #14]
   1114c:	bne	11180 <getc@plt+0x788>
   11150:	ldr	r3, [pc, #184]	; 11210 <getc@plt+0x818>
   11154:	ldr	lr, [pc, #184]	; 11214 <getc@plt+0x81c>
   11158:	ldrsh	r4, [r3]
   1115c:	mov	r3, r0
   11160:	sxth	r2, r3
   11164:	cmp	r4, r2
   11168:	ble	111cc <getc@plt+0x7d4>
   1116c:	add	r3, r3, #1
   11170:	ldr	r1, [lr, r3, lsl #3]
   11174:	cmp	r1, #0
   11178:	bne	11160 <getc@plt+0x768>
   1117c:	b	111cc <getc@plt+0x7d4>
   11180:	ldr	r1, [r0, #12]
   11184:	cmp	r1, #126	; 0x7e
   11188:	popeq	{r4, r5, pc}
   1118c:	ldrb	r2, [r0, #8]
   11190:	ldr	r5, [pc, #128]	; 11218 <getc@plt+0x820>
   11194:	cmp	r2, #0
   11198:	ldrshne	ip, [r3, #16]
   1119c:	ldr	r3, [pc, #108]	; 11210 <getc@plt+0x818>
   111a0:	ldrsh	r4, [r3]
   111a4:	mov	r3, #0
   111a8:	sxth	r2, r3
   111ac:	cmp	r4, r2
   111b0:	ble	111cc <getc@plt+0x7d4>
   111b4:	ldr	lr, [r5, r3, lsl #3]
   111b8:	cmp	lr, #0
   111bc:	beq	11204 <getc@plt+0x80c>
   111c0:	ldr	lr, [lr, #12]
   111c4:	cmp	r1, lr
   111c8:	bne	11204 <getc@plt+0x80c>
   111cc:	ldr	r4, [pc, #60]	; 11210 <getc@plt+0x818>
   111d0:	lsl	lr, r2, #3
   111d4:	ldr	r3, [pc, #60]	; 11218 <getc@plt+0x820>
   111d8:	ldrsh	r1, [r4]
   111dc:	cmp	r1, r2
   111e0:	addgt	r3, r3, lr
   111e4:	addle	r1, r1, #1
   111e8:	ldrhgt	r2, [r3, #4]
   111ec:	strle	r0, [r3, r2, lsl #3]
   111f0:	addle	r3, r3, lr
   111f4:	strhle	r1, [r4]
   111f8:	addgt	ip, r2, ip
   111fc:	strh	ip, [r3, #4]
   11200:	pop	{r4, r5, pc}
   11204:	add	r3, r3, #1
   11208:	b	111a8 <getc@plt+0x7b0>
   1120c:	muleq	r2, r4, r0
   11210:	andeq	r4, r2, r4, ror r3
   11214:	andeq	r4, r2, ip, ror #5
   11218:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   1121c:	ldr	r3, [pc, #152]	; 112bc <getc@plt+0x8c4>
   11220:	push	{r4, r5, r6, lr}
   11224:	ldrsh	r1, [r3]
   11228:	cmp	r1, #0
   1122c:	beq	11288 <getc@plt+0x890>
   11230:	ldr	ip, [pc, #136]	; 112c0 <getc@plt+0x8c8>
   11234:	mov	r0, r3
   11238:	mov	lr, #1
   1123c:	mov	r2, #0
   11240:	mov	r3, ip
   11244:	sxth	r4, lr
   11248:	cmp	r1, r4
   1124c:	bgt	1129c <getc@plt+0x8a4>
   11250:	mov	r1, #0
   11254:	strh	r1, [r0]
   11258:	ldr	r0, [r3, r2, lsl #3]
   1125c:	cmp	r0, r1
   11260:	popeq	{r4, r5, r6, pc}
   11264:	add	r3, r3, r2, lsl #3
   11268:	ldr	r2, [r0, #12]
   1126c:	ldrsh	r1, [r3, #4]
   11270:	ldr	r3, [pc, #76]	; 112c4 <getc@plt+0x8cc>
   11274:	ldrsh	r3, [r3]
   11278:	cmp	r1, r3
   1127c:	movgt	r1, #0
   11280:	movle	r1, #1
   11284:	b	1128c <getc@plt+0x894>
   11288:	mov	r2, #126	; 0x7e
   1128c:	ldr	r0, [pc, #52]	; 112c8 <getc@plt+0x8d0>
   11290:	bl	12668 <error@@Base+0x320>
   11294:	mov	r0, #1
   11298:	pop	{r4, r5, r6, pc}
   1129c:	add	r5, r3, r2, lsl #3
   112a0:	ldrsh	r6, [ip, #12]
   112a4:	add	lr, lr, #1
   112a8:	add	ip, ip, #8
   112ac:	ldrsh	r5, [r5, #4]
   112b0:	cmp	r6, r5
   112b4:	movgt	r2, r4
   112b8:	b	11244 <getc@plt+0x84c>
   112bc:	andeq	r4, r2, r4, ror r3
   112c0:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   112c4:	strdeq	r6, [r2], -r4
   112c8:	ldrdeq	r4, [r2], -ip
   112cc:	push	{r4, r5, r6, r7, r8, lr}
   112d0:	ldr	r7, [pc, #112]	; 11348 <getc@plt+0x950>
   112d4:	ldr	r4, [r0]
   112d8:	cmp	r4, #0
   112dc:	popeq	{r4, r5, r6, r7, r8, pc}
   112e0:	ldr	r6, [pc, #100]	; 1134c <getc@plt+0x954>
   112e4:	mov	r5, #0
   112e8:	ldrsh	r2, [r6, #12]
   112ec:	sxth	r3, r5
   112f0:	cmp	r2, r3
   112f4:	bgt	1130c <getc@plt+0x914>
   112f8:	bl	1121c <getc@plt+0x824>
   112fc:	cmp	r0, #0
   11300:	bne	112e4 <getc@plt+0x8ec>
   11304:	ldr	r4, [r4, #4]
   11308:	b	112d8 <getc@plt+0x8e0>
   1130c:	ldr	r1, [r4, #8]
   11310:	add	r0, r3, r3, lsl #1
   11314:	add	r5, r5, #1
   11318:	add	ip, r1, r0, lsl #2
   1131c:	ldr	r2, [r1, r0, lsl #2]
   11320:	ldr	ip, [ip, #4]
   11324:	cmp	r2, ip
   11328:	addle	r3, r7, r3, lsl #4
   1132c:	addle	ip, r2, #1
   11330:	movgt	r0, #0
   11334:	ldrle	r3, [r3, #8]
   11338:	strle	ip, [r1, r0, lsl #2]
   1133c:	ldrle	r0, [r3, r2, lsl #2]
   11340:	bl	1113c <getc@plt+0x744>
   11344:	b	112e8 <getc@plt+0x8f0>
   11348:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   1134c:	muleq	r2, r4, r0
   11350:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11354:	mov	r8, r0
   11358:	mov	r9, r1
   1135c:	ldr	sl, [pc, #248]	; 1145c <getc@plt+0xa64>
   11360:	mov	r7, sl
   11364:	ldr	r3, [sl]
   11368:	mov	r4, r9
   1136c:	mov	r5, r8
   11370:	ldr	fp, [r3, r8, lsl #2]
   11374:	cmp	r5, r4
   11378:	blt	113b8 <getc@plt+0x9c0>
   1137c:	ldr	r3, [r7]
   11380:	sub	r1, r4, #1
   11384:	cmp	r8, r1
   11388:	str	fp, [r3, r4, lsl #2]
   1138c:	bge	11398 <getc@plt+0x9a0>
   11390:	mov	r0, r8
   11394:	bl	11350 <getc@plt+0x958>
   11398:	add	r8, r5, #1
   1139c:	cmp	r8, r9
   113a0:	blt	11364 <getc@plt+0x96c>
   113a4:	add	sp, sp, #12
   113a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113ac:	sub	r4, r4, #1
   113b0:	cmp	r5, r4
   113b4:	beq	11454 <getc@plt+0xa5c>
   113b8:	ldrd	r2, [r7]
   113bc:	mov	r0, fp
   113c0:	ldr	r1, [r2, r4, lsl #2]
   113c4:	blx	r3
   113c8:	cmp	r0, #0
   113cc:	blt	113ac <getc@plt+0x9b4>
   113d0:	cmp	r5, r4
   113d4:	beq	11454 <getc@plt+0xa5c>
   113d8:	ldr	r2, [r7]
   113dc:	lsl	r3, r4, #2
   113e0:	add	r6, r5, #1
   113e4:	ldr	r1, [r2, r4, lsl #2]
   113e8:	str	r1, [r2, r5, lsl #2]
   113ec:	cmp	r6, r4
   113f0:	lsl	r2, r6, #2
   113f4:	ldr	r1, [r7]
   113f8:	bge	11448 <getc@plt+0xa50>
   113fc:	mov	r0, fp
   11400:	ldr	r1, [r1, r6, lsl #2]
   11404:	str	r3, [sp]
   11408:	ldr	r5, [r7, #4]
   1140c:	str	r2, [sp, #4]
   11410:	blx	r5
   11414:	cmp	r0, #0
   11418:	ldr	r3, [sp]
   1141c:	ldr	r2, [sp, #4]
   11420:	bgt	11440 <getc@plt+0xa48>
   11424:	ldr	r1, [r7]
   11428:	sub	r5, r4, #1
   1142c:	ldr	r2, [r1, r2]
   11430:	str	r2, [r1, r3]
   11434:	mov	r4, r5
   11438:	mov	r5, r6
   1143c:	b	11374 <getc@plt+0x97c>
   11440:	add	r6, r6, #1
   11444:	b	113ec <getc@plt+0x9f4>
   11448:	moveq	r5, r6
   1144c:	bne	11424 <getc@plt+0xa2c>
   11450:	b	11434 <getc@plt+0xa3c>
   11454:	mov	r6, r5
   11458:	b	11434 <getc@plt+0xa3c>
   1145c:	andeq	r4, r2, ip, asr #2
   11460:	cmp	r0, #1
   11464:	bxle	lr
   11468:	ldr	r3, [pc, #12]	; 1147c <getc@plt+0xa84>
   1146c:	stm	r3, {r1, r2}
   11470:	sub	r1, r0, #1
   11474:	mov	r0, #0
   11478:	b	11350 <getc@plt+0x958>
   1147c:	andeq	r4, r2, ip, asr #2
   11480:	mov	r3, #0
   11484:	mov	ip, #12
   11488:	sxth	r2, r3
   1148c:	cmp	r0, r2
   11490:	bgt	1149c <getc@plt+0xaa4>
   11494:	mov	r0, #0
   11498:	bx	lr
   1149c:	ldr	r2, [r1, #8]
   114a0:	mla	r2, ip, r3, r2
   114a4:	add	r3, r3, #1
   114a8:	ldr	r2, [r2, #8]
   114ac:	cmp	r2, #0
   114b0:	ble	11488 <getc@plt+0xa90>
   114b4:	mov	r0, #1
   114b8:	bx	lr
   114bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114c0:	add	r4, r2, #1
   114c4:	add	r2, r1, r2, lsl #2
   114c8:	sub	r7, r3, r0
   114cc:	ldr	ip, [sp, #44]	; 0x2c
   114d0:	sub	r8, ip, r0
   114d4:	sub	r6, r4, #1
   114d8:	cmp	r7, r6
   114dc:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114e0:	ldr	lr, [sp, #40]	; 0x28
   114e4:	b	1159c <getc@plt+0xba4>
   114e8:	ldr	r5, [r2]
   114ec:	add	sl, lr, #1
   114f0:	ldr	r9, [r5, #12]
   114f4:	ldr	r5, [sp, #36]	; 0x24
   114f8:	cmp	r9, #126	; 0x7e
   114fc:	ldr	r5, [r5, lr, lsl #2]
   11500:	ldr	fp, [r5, #12]
   11504:	sub	r5, fp, r9
   11508:	clz	r5, r5
   1150c:	lsr	r5, r5, #5
   11510:	moveq	r5, #0
   11514:	cmp	r5, #0
   11518:	beq	11598 <getc@plt+0xba0>
   1151c:	mov	r5, sl
   11520:	b	1152c <getc@plt+0xb34>
   11524:	add	ip, ip, #1
   11528:	add	r5, r5, #1
   1152c:	ldr	r9, [sp, #44]	; 0x2c
   11530:	cmp	ip, r3
   11534:	cmple	r5, r9
   11538:	bgt	1156c <getc@plt+0xb74>
   1153c:	ldr	r9, [r1, ip, lsl #2]
   11540:	ldr	fp, [r9, #12]
   11544:	ldr	r9, [sp, #36]	; 0x24
   11548:	cmp	fp, #126	; 0x7e
   1154c:	ldr	r9, [r9, r5, lsl #2]
   11550:	ldr	r9, [r9, #12]
   11554:	sub	r9, r9, fp
   11558:	clz	r9, r9
   1155c:	lsr	r9, r9, #5
   11560:	moveq	r9, #0
   11564:	cmp	r9, #0
   11568:	bne	11524 <getc@plt+0xb2c>
   1156c:	sub	ip, ip, r6
   11570:	sub	r5, ip, r0
   11574:	cmp	r5, #0
   11578:	ble	11598 <getc@plt+0xba0>
   1157c:	ldr	r0, [sp, #48]	; 0x30
   11580:	sub	r7, r7, r5
   11584:	sub	r8, r8, r5
   11588:	str	r6, [r0]
   1158c:	ldr	r0, [sp, #52]	; 0x34
   11590:	str	lr, [r0]
   11594:	mov	r0, ip
   11598:	mov	lr, sl
   1159c:	cmp	r8, lr
   115a0:	mov	ip, r4
   115a4:	bge	114e8 <getc@plt+0xaf0>
   115a8:	add	r4, r4, #1
   115ac:	add	r2, r2, #4
   115b0:	b	114d4 <getc@plt+0xadc>
   115b4:	cmp	r1, #0
   115b8:	beq	11630 <getc@plt+0xc38>
   115bc:	sub	r3, r0, #1
   115c0:	add	ip, r0, #1
   115c4:	push	{r4, r5, r6, lr}
   115c8:	mov	r4, r0
   115cc:	ldr	r0, [r1, #12]
   115d0:	cmp	r3, r0
   115d4:	movlt	r3, r0
   115d8:	ldr	r0, [r1, #16]
   115dc:	cmp	ip, r0
   115e0:	movge	ip, r0
   115e4:	cmp	r3, ip
   115e8:	movle	r0, #0
   115ec:	ldrle	r5, [r1, #20]
   115f0:	ble	115fc <getc@plt+0xc04>
   115f4:	ldr	r0, [pc, #60]	; 11638 <getc@plt+0xc40>
   115f8:	bl	12348 <error@@Base>
   115fc:	ldr	lr, [r1, #12]
   11600:	cmp	r4, r3
   11604:	sub	lr, r3, lr
   11608:	lsl	lr, lr, #1
   1160c:	ldrh	lr, [r5, lr]
   11610:	addle	lr, lr, #1
   11614:	cmp	lr, r0
   11618:	movge	r0, lr
   1161c:	strge	r3, [r2]
   11620:	add	r3, r3, #1
   11624:	cmp	ip, r3
   11628:	bge	115fc <getc@plt+0xc04>
   1162c:	pop	{r4, r5, r6, pc}
   11630:	mov	r0, r1
   11634:	bx	lr
   11638:	andeq	r2, r1, r4, ror #28
   1163c:	push	{r4, r5, r6, lr}
   11640:	mov	r1, #16
   11644:	mov	r5, r0
   11648:	mov	r0, #1
   1164c:	bl	12384 <error@@Base+0x3c>
   11650:	mov	r4, r0
   11654:	mov	r1, #12
   11658:	mov	r0, r5
   1165c:	bl	12384 <error@@Base+0x3c>
   11660:	str	r0, [r4, #8]
   11664:	mov	r0, r4
   11668:	pop	{r4, r5, r6, pc}
   1166c:	push	{r4, lr}
   11670:	mov	r4, r0
   11674:	ldr	r0, [r0, #8]
   11678:	bl	108c0 <free@plt>
   1167c:	mov	r0, r4
   11680:	pop	{r4, lr}
   11684:	b	108c0 <free@plt>
   11688:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1168c:	mov	r7, r1
   11690:	mov	r8, r0
   11694:	mov	r4, r2
   11698:	mov	r5, #0
   1169c:	mov	sl, #12
   116a0:	mov	r9, r5
   116a4:	bl	12c38 <error@@Base+0x8f0>
   116a8:	mov	r0, r7
   116ac:	bl	1163c <getc@plt+0xc44>
   116b0:	mov	r6, r0
   116b4:	mov	r0, r4
   116b8:	add	r4, r4, #16
   116bc:	bl	12ce4 <error@@Base+0x99c>
   116c0:	ldr	r1, [r6, #8]
   116c4:	mul	r2, sl, r5
   116c8:	add	r5, r5, #1
   116cc:	add	r3, r1, r2
   116d0:	str	r9, [r1, r2]
   116d4:	ldr	r2, [r4, #-4]
   116d8:	sub	r1, r2, #1
   116dc:	stmib	r3, {r1, r2}
   116e0:	sxth	r3, r5
   116e4:	cmp	r7, r3
   116e8:	bgt	116b4 <getc@plt+0xcbc>
   116ec:	mov	r1, r6
   116f0:	mov	r0, r7
   116f4:	bl	11480 <getc@plt+0xa88>
   116f8:	cmp	r0, #0
   116fc:	beq	1170c <getc@plt+0xd14>
   11700:	mov	r0, r8
   11704:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11708:	b	12c50 <error@@Base+0x908>
   1170c:	mov	r0, r6
   11710:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11714:	b	1166c <getc@plt+0xc74>
   11718:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1171c:	sub	sp, sp, #20
   11720:	mov	r9, r3
   11724:	mov	r8, r0
   11728:	mov	r0, r1
   1172c:	mov	r4, r1
   11730:	mov	r6, r2
   11734:	ldr	r3, [sp, #56]	; 0x38
   11738:	str	r3, [sp, #8]
   1173c:	ldr	r3, [sp, #60]	; 0x3c
   11740:	str	r3, [sp, #12]
   11744:	bl	1163c <getc@plt+0xc44>
   11748:	mov	r7, r0
   1174c:	mov	r0, r4
   11750:	bl	1163c <getc@plt+0xc44>
   11754:	mov	r5, r0
   11758:	sub	r3, r9, #4
   1175c:	mov	r1, #0
   11760:	sxth	r2, r1
   11764:	cmp	r4, r2
   11768:	bgt	117c0 <getc@plt+0xdc8>
   1176c:	ldr	r3, [sp, #12]
   11770:	mov	r1, r7
   11774:	mov	r0, r4
   11778:	str	r3, [r6, #12]
   1177c:	bl	11480 <getc@plt+0xa88>
   11780:	cmp	r0, #0
   11784:	beq	1184c <getc@plt+0xe54>
   11788:	mov	r2, r6
   1178c:	mov	r0, r8
   11790:	bl	12c70 <error@@Base+0x928>
   11794:	mov	r1, r5
   11798:	mov	r0, r4
   1179c:	bl	11480 <getc@plt+0xa88>
   117a0:	cmp	r0, #0
   117a4:	beq	11858 <getc@plt+0xe60>
   117a8:	mov	r2, r5
   117ac:	mov	r1, r6
   117b0:	mov	r0, r8
   117b4:	add	sp, sp, #20
   117b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117bc:	b	12c80 <error@@Base+0x938>
   117c0:	ldr	ip, [r3, #4]!
   117c4:	ldr	r2, [sp, #8]
   117c8:	ldr	lr, [r6, #8]
   117cc:	ldr	r9, [r7, #8]
   117d0:	add	ip, r2, ip
   117d4:	sub	r2, ip, #1
   117d8:	str	r2, [sp, #4]
   117dc:	mov	r2, #12
   117e0:	mul	r2, r2, r1
   117e4:	add	r1, r1, #1
   117e8:	ldr	fp, [lr, r2]
   117ec:	add	sl, r9, r2
   117f0:	add	r0, lr, r2
   117f4:	str	fp, [r9, r2]
   117f8:	ldr	r9, [r3]
   117fc:	sub	r9, r9, #1
   11800:	str	r9, [sl, #4]
   11804:	ldr	r9, [r3]
   11808:	sub	r9, r9, fp
   1180c:	str	r9, [sl, #8]
   11810:	ldr	sl, [r5, #8]
   11814:	str	ip, [sl, r2]
   11818:	add	r9, sl, r2
   1181c:	ldr	ip, [r0, #4]
   11820:	ldr	sl, [sp, #4]
   11824:	str	ip, [r9, #4]
   11828:	ldr	ip, [r0, #4]
   1182c:	sub	ip, ip, sl
   11830:	str	ip, [r9, #8]
   11834:	ldr	ip, [r3]
   11838:	str	ip, [lr, r2]
   1183c:	ldr	r2, [sp, #8]
   11840:	str	sl, [r0, #4]
   11844:	str	r2, [r0, #8]
   11848:	b	11760 <getc@plt+0xd68>
   1184c:	mov	r0, r7
   11850:	bl	1166c <getc@plt+0xc74>
   11854:	b	11794 <getc@plt+0xd9c>
   11858:	mov	r0, r5
   1185c:	add	sp, sp, #20
   11860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11864:	b	1166c <getc@plt+0xc74>
   11868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1186c:	mov	ip, #0
   11870:	sub	sp, sp, #108	; 0x6c
   11874:	mov	r5, #12
   11878:	ldr	lr, [r3, #8]
   1187c:	sxth	r4, ip
   11880:	cmp	r1, r4
   11884:	bgt	11924 <getc@plt+0xf2c>
   11888:	mov	r5, r3
   1188c:	ldr	r3, [lr]
   11890:	mov	r4, r1
   11894:	mov	r6, r2
   11898:	mov	r8, r0
   1189c:	mov	r7, #1
   118a0:	add	fp, sp, #36	; 0x24
   118a4:	str	r3, [sp, #40]	; 0x28
   118a8:	ldr	r3, [lr, #8]
   118ac:	sxth	sl, r7
   118b0:	cmp	sl, r4
   118b4:	blt	11940 <getc@plt+0xf48>
   118b8:	mov	r1, #4
   118bc:	mov	r0, #1
   118c0:	str	r3, [sp, #28]
   118c4:	bl	12384 <error@@Base+0x3c>
   118c8:	ldr	r3, [sp, #28]
   118cc:	mov	r2, r5
   118d0:	mov	r1, r4
   118d4:	str	r3, [sp]
   118d8:	add	r3, sp, #40	; 0x28
   118dc:	str	r0, [sp, #4]
   118e0:	mov	r0, r8
   118e4:	bl	11718 <getc@plt+0xd20>
   118e8:	ldr	r3, [r5]
   118ec:	cmp	r3, #0
   118f0:	beq	11904 <getc@plt+0xf0c>
   118f4:	mov	r2, r6
   118f8:	mov	r1, r4
   118fc:	mov	r0, r8
   11900:	bl	11868 <getc@plt+0xe70>
   11904:	ldr	r3, [r5, #4]
   11908:	cmp	r3, #0
   1190c:	beq	11938 <getc@plt+0xf40>
   11910:	mov	r2, r6
   11914:	mov	r1, r4
   11918:	mov	r0, r8
   1191c:	bl	11868 <getc@plt+0xe70>
   11920:	b	11938 <getc@plt+0xf40>
   11924:	mla	r4, r5, ip, lr
   11928:	add	ip, ip, #1
   1192c:	ldr	r4, [r4, #8]
   11930:	cmp	r4, #0
   11934:	bne	1187c <getc@plt+0xe84>
   11938:	add	sp, sp, #108	; 0x6c
   1193c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11940:	mov	r1, #12
   11944:	ldr	r0, [r5, #8]
   11948:	add	r9, sp, #40	; 0x28
   1194c:	add	lr, r9, r7, lsl #2
   11950:	str	fp, [sp, #12]
   11954:	mul	r1, r1, r7
   11958:	ldr	r2, [sp, #40]	; 0x28
   1195c:	str	lr, [sp, #16]
   11960:	add	ip, r0, r1
   11964:	ldr	ip, [ip, #4]
   11968:	add	r3, r2, r3
   1196c:	sub	r3, r3, #1
   11970:	str	ip, [sp, #8]
   11974:	ldr	r1, [r0, r1]
   11978:	mov	r0, #0
   1197c:	str	r1, [sp, #4]
   11980:	add	r1, r6, #8
   11984:	ldr	r1, [r1, r7, lsl #4]
   11988:	str	r1, [sp]
   1198c:	ldr	r1, [r6, #8]
   11990:	bl	114bc <getc@plt+0xac4>
   11994:	subs	r3, r0, #0
   11998:	beq	11938 <getc@plt+0xf40>
   1199c:	ldr	r1, [sp, #36]	; 0x24
   119a0:	ldr	r2, [sp, #40]	; 0x28
   119a4:	sub	r1, r1, r2
   119a8:	cmp	r1, #0
   119ac:	bgt	119b8 <getc@plt+0xfc0>
   119b0:	add	r7, r7, #1
   119b4:	b	118ac <getc@plt+0xeb4>
   119b8:	mov	r2, #0
   119bc:	ldr	r0, [r9]
   119c0:	add	r2, r2, #1
   119c4:	sxth	r2, r2
   119c8:	cmp	sl, r2
   119cc:	add	r0, r0, r1
   119d0:	str	r0, [r9], #4
   119d4:	bne	119bc <getc@plt+0xfc4>
   119d8:	b	119b0 <getc@plt+0xfb8>
   119dc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   119e0:	mov	r6, r1
   119e4:	add	r2, sp, #4
   119e8:	mov	r5, r0
   119ec:	ldr	r4, [pc, #280]	; 11b0c <getc@plt+0x1114>
   119f0:	ldr	r1, [r1]
   119f4:	bl	115b4 <getc@plt+0xbbc>
   119f8:	mov	r7, r0
   119fc:	add	r1, r5, r0
   11a00:	ldr	ip, [r4]
   11a04:	ldmib	r4, {r2, r8, lr}
   11a08:	cmp	ip, r7
   11a0c:	ble	11ae4 <getc@plt+0x10ec>
   11a10:	cmp	r2, r1
   11a14:	ble	11aec <getc@plt+0x10f4>
   11a18:	ldr	r0, [lr, r1, lsl #2]
   11a1c:	ldr	r3, [r8, r7, lsl #2]
   11a20:	ldr	r9, [r0, #12]
   11a24:	ldr	r3, [r3, #12]
   11a28:	sub	r0, r9, r3
   11a2c:	cmp	r3, #126	; 0x7e
   11a30:	clz	r0, r0
   11a34:	lsr	r0, r0, #5
   11a38:	moveq	r0, #0
   11a3c:	cmp	r0, #0
   11a40:	bne	11ad8 <getc@plt+0x10e0>
   11a44:	ldr	r3, [r6, #8]
   11a48:	sub	r2, r2, r5
   11a4c:	ldr	r0, [r4, #16]
   11a50:	cmp	r2, ip
   11a54:	addge	r3, r3, r2
   11a58:	addlt	r3, r3, ip
   11a5c:	sub	r2, r3, r7
   11a60:	ldr	r3, [r4, #24]
   11a64:	rsb	r1, r2, #1
   11a68:	add	r1, r1, r3
   11a6c:	add	r3, r3, r2
   11a70:	ldr	r2, [r4, #20]
   11a74:	asr	r1, r1, #1
   11a78:	asr	r3, r3, #1
   11a7c:	cmp	r1, r0
   11a80:	mov	r0, #1
   11a84:	strgt	r1, [r4, #16]
   11a88:	cmp	r3, r2
   11a8c:	mov	r1, #12
   11a90:	str	r3, [sp, #4]
   11a94:	strlt	r3, [r4, #20]
   11a98:	bl	12384 <error@@Base+0x3c>
   11a9c:	ldr	r3, [r4, #40]	; 0x28
   11aa0:	mov	r1, r0
   11aa4:	strh	r7, [r0, #8]
   11aa8:	cmp	r3, #0
   11aac:	streq	r5, [r6, #12]
   11ab0:	streq	r5, [r6, #16]
   11ab4:	beq	11b00 <getc@plt+0x1108>
   11ab8:	ldr	r3, [r6, #12]
   11abc:	cmp	r3, r5
   11ac0:	ble	11afc <getc@plt+0x1104>
   11ac4:	ldr	r0, [pc, #68]	; 11b10 <getc@plt+0x1118>
   11ac8:	str	r5, [r6, #12]
   11acc:	bl	12c50 <error@@Base+0x908>
   11ad0:	add	sp, sp, #12
   11ad4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11ad8:	add	r7, r7, #1
   11adc:	add	r1, r1, #1
   11ae0:	b	11a08 <getc@plt+0x1010>
   11ae4:	addeq	r3, r5, #1
   11ae8:	streq	r3, [r4, #16]
   11aec:	cmp	r2, r1
   11af0:	subeq	r3, r5, #1
   11af4:	streq	r3, [r4, #20]
   11af8:	b	11a44 <getc@plt+0x104c>
   11afc:	str	r5, [r6, #16]
   11b00:	ldr	r0, [pc, #8]	; 11b10 <getc@plt+0x1118>
   11b04:	bl	12c60 <error@@Base+0x918>
   11b08:	b	11ad0 <getc@plt+0x10d8>
   11b0c:	andeq	r4, r2, r4, asr r1
   11b10:	andeq	r4, r2, r0, ror r1
   11b14:	mov	r3, #0
   11b18:	cmp	r0, #0
   11b1c:	bxeq	lr
   11b20:	ldr	r2, [r0, #12]
   11b24:	ldr	r0, [r0, #4]
   11b28:	cmp	r2, #0
   11b2c:	addne	r3, r3, #1
   11b30:	strne	r3, [r2]
   11b34:	b	11b18 <getc@plt+0x1120>
   11b38:	push	{r4, r5, r6, lr}
   11b3c:	sxth	r5, r1
   11b40:	sub	r3, r5, #2
   11b44:	uxth	r3, r3
   11b48:	cmp	r3, #14
   11b4c:	bls	11b58 <getc@plt+0x1160>
   11b50:	ldr	r0, [pc, #56]	; 11b90 <getc@plt+0x1198>
   11b54:	bl	12348 <error@@Base>
   11b58:	mov	r4, r0
   11b5c:	mov	r1, r5
   11b60:	mov	r6, r2
   11b64:	bl	11688 <getc@plt+0xc90>
   11b68:	ldr	r3, [r4]
   11b6c:	cmp	r3, #0
   11b70:	beq	11b84 <getc@plt+0x118c>
   11b74:	mov	r2, r6
   11b78:	mov	r1, r5
   11b7c:	mov	r0, r4
   11b80:	bl	11868 <getc@plt+0xe70>
   11b84:	ldr	r0, [r4]
   11b88:	pop	{r4, r5, r6, lr}
   11b8c:	b	11b14 <getc@plt+0x111c>
   11b90:	andeq	r2, r1, r3, lsl #29
   11b94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b98:	sub	sp, sp, #52	; 0x34
   11b9c:	mov	r8, r1
   11ba0:	mov	sl, r3
   11ba4:	mov	r1, #1
   11ba8:	mov	r7, r0
   11bac:	add	r9, sp, #44	; 0x2c
   11bb0:	str	r2, [sp, #36]	; 0x24
   11bb4:	bl	11688 <getc@plt+0xc90>
   11bb8:	mov	r2, sl
   11bbc:	mov	r1, #1
   11bc0:	mov	r0, r8
   11bc4:	bl	11688 <getc@plt+0xc90>
   11bc8:	ldr	r5, [r7]
   11bcc:	mov	r4, #0
   11bd0:	add	fp, sp, #40	; 0x28
   11bd4:	cmp	r5, #0
   11bd8:	bne	11c28 <getc@plt+0x1230>
   11bdc:	cmp	r4, #0
   11be0:	beq	11cc4 <getc@plt+0x12cc>
   11be4:	mov	r1, #4
   11be8:	mov	r0, #1
   11bec:	bl	12384 <error@@Base+0x3c>
   11bf0:	mov	r5, r0
   11bf4:	add	r3, sp, #40	; 0x28
   11bf8:	ldr	r2, [sp, #28]
   11bfc:	mov	r0, r7
   11c00:	mov	r1, #1
   11c04:	strd	r4, [sp]
   11c08:	bl	11718 <getc@plt+0xd20>
   11c0c:	mov	r3, r9
   11c10:	mov	r1, #1
   11c14:	strd	r4, [sp]
   11c18:	mov	r0, r8
   11c1c:	ldr	r2, [sp, #32]
   11c20:	bl	11718 <getc@plt+0xd20>
   11c24:	b	11bc8 <getc@plt+0x11d0>
   11c28:	ldr	r3, [r5, #12]
   11c2c:	cmp	r3, #0
   11c30:	bne	11c48 <getc@plt+0x1250>
   11c34:	ldr	r3, [r5, #8]
   11c38:	ldr	r3, [r3, #8]
   11c3c:	cmp	r3, r4
   11c40:	ldrgt	r6, [r8]
   11c44:	bgt	11cb8 <getc@plt+0x12c0>
   11c48:	ldr	r5, [r5, #4]
   11c4c:	b	11bd4 <getc@plt+0x11dc>
   11c50:	ldr	r3, [r6, #12]
   11c54:	cmp	r3, #0
   11c58:	bne	11cb4 <getc@plt+0x12bc>
   11c5c:	ldr	r3, [r6, #8]
   11c60:	ldr	r2, [r3, #8]
   11c64:	cmp	r2, r4
   11c68:	ble	11cb4 <getc@plt+0x12bc>
   11c6c:	ldr	r2, [r5, #8]
   11c70:	mov	r0, r4
   11c74:	str	fp, [sp, #12]
   11c78:	str	r9, [sp, #16]
   11c7c:	ldr	r1, [r3, #4]
   11c80:	str	r1, [sp, #8]
   11c84:	ldr	r3, [r3]
   11c88:	ldr	r1, [sp, #36]	; 0x24
   11c8c:	str	r3, [sp, #4]
   11c90:	ldr	r3, [sl, #8]
   11c94:	str	r3, [sp]
   11c98:	ldrd	r2, [r2]
   11c9c:	ldr	r1, [r1, #8]
   11ca0:	bl	114bc <getc@plt+0xac4>
   11ca4:	cmp	r4, r0
   11ca8:	movlt	r4, r0
   11cac:	strlt	r5, [sp, #28]
   11cb0:	strlt	r6, [sp, #32]
   11cb4:	ldr	r6, [r6, #4]
   11cb8:	cmp	r6, #0
   11cbc:	bne	11c50 <getc@plt+0x1258>
   11cc0:	b	11c48 <getc@plt+0x1250>
   11cc4:	ldr	r0, [r7]
   11cc8:	bl	11b14 <getc@plt+0x111c>
   11ccc:	add	sp, sp, #52	; 0x34
   11cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cd4:	ldr	r3, [r1, #12]
   11cd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cdc:	sub	sp, sp, #28
   11ce0:	cmp	r3, #65536	; 0x10000
   11ce4:	blt	11cf0 <getc@plt+0x12f8>
   11ce8:	ldr	r0, [pc, #584]	; 11f38 <getc@plt+0x1540>
   11cec:	bl	12348 <error@@Base>
   11cf0:	mov	r5, r1
   11cf4:	mov	r2, r1
   11cf8:	ldr	r4, [pc, #572]	; 11f3c <getc@plt+0x1544>
   11cfc:	mov	r1, #2
   11d00:	mov	r8, r0
   11d04:	bl	11688 <getc@plt+0xc90>
   11d08:	ldr	r3, [r5, #8]
   11d0c:	mvn	r6, #0
   11d10:	ldr	r2, [r5, #28]
   11d14:	add	r9, r4, #44	; 0x2c
   11d18:	add	sl, r4, #28
   11d1c:	strd	r2, [r4, #4]
   11d20:	ldr	r3, [r5, #24]
   11d24:	str	r3, [r4, #12]
   11d28:	ldr	r3, [r5, #12]
   11d2c:	str	r2, [r4, #20]
   11d30:	sub	r1, r2, r3
   11d34:	str	r3, [r4]
   11d38:	rsb	r3, r3, #0
   11d3c:	str	r3, [r4, #16]
   11d40:	str	r1, [r4, #24]
   11d44:	ldr	r3, [r4, #16]
   11d48:	ldr	r7, [r4, #24]
   11d4c:	cmp	r3, r7
   11d50:	ble	11d74 <getc@plt+0x137c>
   11d54:	ldr	r6, [pc, #484]	; 11f40 <getc@plt+0x1548>
   11d58:	ldr	r5, [r4, #48]	; 0x30
   11d5c:	cmp	r5, #0
   11d60:	bne	11eac <getc@plt+0x14b4>
   11d64:	ldr	r0, [r8]
   11d68:	bl	11b14 <getc@plt+0x111c>
   11d6c:	add	sp, sp, #28
   11d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d74:	mov	r1, #24
   11d78:	mov	r0, #1
   11d7c:	bl	12384 <error@@Base+0x3c>
   11d80:	mov	r5, r0
   11d84:	add	r6, r6, #1
   11d88:	mov	r1, r0
   11d8c:	mov	r0, r9
   11d90:	str	r6, [r5, #8]
   11d94:	rsb	fp, r6, #0
   11d98:	bl	12c60 <error@@Base+0x918>
   11d9c:	ldrd	r2, [r4]
   11da0:	ldr	r7, [r4, #24]
   11da4:	cmp	r2, r3
   11da8:	bgt	11e50 <getc@plt+0x1458>
   11dac:	cmp	r6, r7
   11db0:	movlt	r7, r6
   11db4:	ldr	r3, [r4, #16]
   11db8:	cmp	fp, r3
   11dbc:	movge	r3, fp
   11dc0:	cmp	r7, r3
   11dc4:	bge	11e2c <getc@plt+0x1434>
   11dc8:	ldr	r7, [r4, #24]
   11dcc:	add	r7, r7, #1
   11dd0:	ldr	r3, [r4, #20]
   11dd4:	cmp	r6, r3
   11dd8:	movlt	r3, r6
   11ddc:	cmp	r7, r3
   11de0:	ble	11e40 <getc@plt+0x1448>
   11de4:	mov	r1, #2
   11de8:	mov	fp, #0
   11dec:	ldr	r0, [r4, #40]	; 0x28
   11df0:	bl	12384 <error@@Base+0x3c>
   11df4:	str	r0, [r5, #20]
   11df8:	ldr	r7, [r4, #28]
   11dfc:	cmp	r7, #0
   11e00:	beq	11d44 <getc@plt+0x134c>
   11e04:	mov	r1, r7
   11e08:	mov	r0, sl
   11e0c:	bl	12c88 <error@@Base+0x940>
   11e10:	ldrh	r2, [r7, #8]
   11e14:	mov	r0, r7
   11e18:	ldr	r3, [r5, #20]
   11e1c:	strh	r2, [r3, fp]
   11e20:	add	fp, fp, #2
   11e24:	bl	108c0 <free@plt>
   11e28:	b	11df8 <getc@plt+0x1400>
   11e2c:	mov	r0, r7
   11e30:	mov	r1, r5
   11e34:	bl	119dc <getc@plt+0xfe4>
   11e38:	sub	r7, r7, #1
   11e3c:	b	11db4 <getc@plt+0x13bc>
   11e40:	mov	r1, r5
   11e44:	mov	r0, r7
   11e48:	bl	119dc <getc@plt+0xfe4>
   11e4c:	b	11dcc <getc@plt+0x13d4>
   11e50:	cmp	fp, r7
   11e54:	movge	r7, fp
   11e58:	ldr	r3, [r4, #20]
   11e5c:	cmp	r6, r3
   11e60:	movlt	r3, r6
   11e64:	cmp	r7, r3
   11e68:	ble	11e98 <getc@plt+0x14a0>
   11e6c:	ldr	r7, [r4, #24]
   11e70:	sub	r7, r7, #1
   11e74:	ldr	r3, [r4, #16]
   11e78:	cmp	fp, r3
   11e7c:	movge	r3, fp
   11e80:	cmp	r7, r3
   11e84:	blt	11de4 <getc@plt+0x13ec>
   11e88:	mov	r1, r5
   11e8c:	mov	r0, r7
   11e90:	bl	119dc <getc@plt+0xfe4>
   11e94:	b	11e70 <getc@plt+0x1478>
   11e98:	mov	r0, r7
   11e9c:	mov	r1, r5
   11ea0:	bl	119dc <getc@plt+0xfe4>
   11ea4:	add	r7, r7, #1
   11ea8:	b	11e58 <getc@plt+0x1460>
   11eac:	mov	r0, r7
   11eb0:	ldr	r1, [r5]
   11eb4:	ldr	r3, [r5, #12]
   11eb8:	ldr	r2, [r5, #20]
   11ebc:	sub	r3, r7, r3
   11ec0:	lsl	r3, r3, #1
   11ec4:	ldrh	r9, [r2, r3]
   11ec8:	add	r2, sp, #12
   11ecc:	bl	115b4 <getc@plt+0xbbc>
   11ed0:	str	r0, [sp, #16]
   11ed4:	cmp	r9, r0
   11ed8:	ble	11f14 <getc@plt+0x151c>
   11edc:	add	r7, r7, r0
   11ee0:	sub	r9, r9, r0
   11ee4:	mov	r1, #4
   11ee8:	mov	r0, #1
   11eec:	str	r7, [sp, #20]
   11ef0:	ldr	r7, [r8]
   11ef4:	bl	12384 <error@@Base+0x3c>
   11ef8:	add	r3, sp, #16
   11efc:	mov	r1, #2
   11f00:	str	r9, [sp]
   11f04:	str	r0, [sp, #4]
   11f08:	mov	r0, r8
   11f0c:	mov	r2, r7
   11f10:	bl	11718 <getc@plt+0xd20>
   11f14:	mov	r1, r5
   11f18:	mov	r0, r6
   11f1c:	bl	12c88 <error@@Base+0x940>
   11f20:	ldr	r0, [r5, #20]
   11f24:	bl	108c0 <free@plt>
   11f28:	mov	r0, r5
   11f2c:	bl	108c0 <free@plt>
   11f30:	ldr	r7, [sp, #12]
   11f34:	b	11d58 <getc@plt+0x1360>
   11f38:	andeq	r2, r1, r2, lsr #29
   11f3c:	andeq	r4, r2, r4, asr r1
   11f40:	andeq	r4, r2, r0, lsl #3
   11f44:	sub	r0, r0, #1
   11f48:	mov	r3, #0
   11f4c:	ldrb	r2, [r0, #1]!
   11f50:	cmp	r2, #0
   11f54:	bne	11f6c <getc@plt+0x1574>
   11f58:	movw	r2, #503	; 0x1f7
   11f5c:	udiv	r0, r3, r2
   11f60:	mls	r0, r2, r0, r3
   11f64:	sxth	r0, r0
   11f68:	bx	lr
   11f6c:	add	r3, r3, r2
   11f70:	b	11f4c <getc@plt+0x1554>
   11f74:	push	{r4, r5, r6, lr}
   11f78:	add	r6, r0, #8000	; 0x1f40
   11f7c:	mov	r4, r0
   11f80:	mov	r5, r0
   11f84:	add	r6, r6, #48	; 0x30
   11f88:	mov	r0, r5
   11f8c:	add	r5, r5, #16
   11f90:	bl	12c38 <error@@Base+0x8f0>
   11f94:	cmp	r5, r6
   11f98:	bne	11f88 <getc@plt+0x1590>
   11f9c:	add	r4, r4, #4096	; 0x1000
   11fa0:	mov	r3, #0
   11fa4:	str	r3, [r4, #3952]	; 0xf70
   11fa8:	str	r3, [r4, #3956]	; 0xf74
   11fac:	pop	{r4, r5, r6, pc}
   11fb0:	push	{r4, r5, r6, lr}
   11fb4:	mov	r4, r0
   11fb8:	mov	r0, r1
   11fbc:	mov	r5, r1
   11fc0:	bl	11f44 <getc@plt+0x154c>
   11fc4:	ldr	r4, [r4, r0, lsl #4]
   11fc8:	cmp	r4, #0
   11fcc:	beq	11fe4 <getc@plt+0x15ec>
   11fd0:	mov	r0, r5
   11fd4:	ldr	r1, [r4, #8]
   11fd8:	bl	1089c <strcmp@plt>
   11fdc:	cmp	r0, #0
   11fe0:	bne	11fec <getc@plt+0x15f4>
   11fe4:	mov	r0, r4
   11fe8:	pop	{r4, r5, r6, pc}
   11fec:	ldr	r4, [r4, #4]
   11ff0:	b	11fc8 <getc@plt+0x15d0>
   11ff4:	push	{r4, lr}
   11ff8:	mov	r4, r0
   11ffc:	ldr	r0, [r1, #8]
   12000:	bl	11f44 <getc@plt+0x154c>
   12004:	add	r0, r4, r0, lsl #4
   12008:	add	r4, r4, #4096	; 0x1000
   1200c:	bl	12c50 <error@@Base+0x908>
   12010:	ldr	r0, [r4, #3952]	; 0xf70
   12014:	cmp	r0, #0
   12018:	beq	12028 <getc@plt+0x1630>
   1201c:	bl	108c0 <free@plt>
   12020:	mov	r3, #0
   12024:	str	r3, [r4, #3952]	; 0xf70
   12028:	ldr	r3, [r4, #3956]	; 0xf74
   1202c:	add	r3, r3, #1
   12030:	str	r3, [r4, #3956]	; 0xf74
   12034:	pop	{r4, pc}
   12038:	push	{r4, lr}
   1203c:	mov	r4, r0
   12040:	ldr	r0, [r1, #8]
   12044:	bl	11f44 <getc@plt+0x154c>
   12048:	add	r0, r4, r0, lsl #4
   1204c:	add	r4, r4, #4096	; 0x1000
   12050:	bl	12c88 <error@@Base+0x940>
   12054:	ldr	r0, [r4, #3952]	; 0xf70
   12058:	cmp	r0, #0
   1205c:	beq	1206c <getc@plt+0x1674>
   12060:	bl	108c0 <free@plt>
   12064:	mov	r3, #0
   12068:	str	r3, [r4, #3952]	; 0xf70
   1206c:	ldr	r3, [r4, #3956]	; 0xf74
   12070:	sub	r3, r3, #1
   12074:	str	r3, [r4, #3956]	; 0xf74
   12078:	pop	{r4, pc}
   1207c:	push	{r4, r5, r6, lr}
   12080:	add	r6, r0, #4096	; 0x1000
   12084:	ldr	r4, [r6, #3952]	; 0xf70
   12088:	cmp	r4, #0
   1208c:	popne	{r4, r5, r6, pc}
   12090:	ldr	r3, [r6, #3956]	; 0xf74
   12094:	cmp	r3, #0
   12098:	popeq	{r4, r5, r6, pc}
   1209c:	mov	r5, r0
   120a0:	mov	r1, #4
   120a4:	mov	r0, r3
   120a8:	bl	12384 <error@@Base+0x3c>
   120ac:	mov	r3, r4
   120b0:	mov	r2, r4
   120b4:	str	r0, [r6, #3952]	; 0xf70
   120b8:	movw	lr, #503	; 0x1f7
   120bc:	ldr	r1, [r5, r2, lsl #4]
   120c0:	mov	ip, r3
   120c4:	cmp	r1, #0
   120c8:	mov	r3, ip
   120cc:	bne	120e0 <getc@plt+0x16e8>
   120d0:	add	r2, r2, #1
   120d4:	cmp	r2, lr
   120d8:	bne	120bc <getc@plt+0x16c4>
   120dc:	pop	{r4, r5, r6, pc}
   120e0:	str	r1, [r0, ip, lsl #2]
   120e4:	add	ip, ip, #1
   120e8:	ldr	r1, [r1, #4]
   120ec:	b	120c4 <getc@plt+0x16cc>
   120f0:	push	{r4, r5, r6, r7, r8, lr}
   120f4:	add	r6, r0, #8000	; 0x1f40
   120f8:	mov	r4, r0
   120fc:	mov	r7, r1
   12100:	mov	r5, r0
   12104:	add	r6, r6, #48	; 0x30
   12108:	mov	r0, r5
   1210c:	mov	r1, r7
   12110:	add	r5, r5, #16
   12114:	bl	12d30 <error@@Base+0x9e8>
   12118:	cmp	r5, r6
   1211c:	bne	12108 <getc@plt+0x1710>
   12120:	add	r4, r4, #4096	; 0x1000
   12124:	ldr	r0, [r4, #3952]	; 0xf70
   12128:	cmp	r0, #0
   1212c:	beq	1213c <getc@plt+0x1744>
   12130:	bl	108c0 <free@plt>
   12134:	mov	r3, #0
   12138:	str	r3, [r4, #3952]	; 0xf70
   1213c:	mov	r3, #0
   12140:	str	r3, [r4, #3956]	; 0xf74
   12144:	pop	{r4, r5, r6, r7, r8, pc}
   12148:	ldr	r3, [pc, #56]	; 12188 <getc@plt+0x1790>
   1214c:	push	{r4, r5, lr}
   12150:	sub	sp, sp, #116	; 0x74
   12154:	mov	r5, r0
   12158:	ldr	r4, [r3]
   1215c:	bl	10974 <getpid@plt>
   12160:	ldr	r1, [pc, #36]	; 1218c <getc@plt+0x1794>
   12164:	mov	r3, r0
   12168:	add	r0, sp, #12
   1216c:	str	r5, [sp]
   12170:	mov	r2, r4
   12174:	bl	109bc <sprintf@plt>
   12178:	add	r0, sp, #12
   1217c:	bl	108f0 <strdup@plt>
   12180:	add	sp, sp, #116	; 0x74
   12184:	pop	{r4, r5, pc}
   12188:	strdeq	r6, [r2], -ip
   1218c:			; <UNDEFINED> instruction: 0x00012eba
   12190:	ldr	r3, [pc, #84]	; 121ec <getc@plt+0x17f4>
   12194:	mov	r5, r0
   12198:	push	{r7, lr}
   1219c:	ldr	r3, [r3]
   121a0:	cmp	r3, #0
   121a4:	beq	121ac <getc@plt+0x17b4>
   121a8:	blx	r3
   121ac:	ldr	r6, [pc, #60]	; 121f0 <getc@plt+0x17f8>
   121b0:	mov	r4, #1
   121b4:	ldrsh	r3, [r6]
   121b8:	cmp	r3, r4
   121bc:	bge	121c8 <getc@plt+0x17d0>
   121c0:	mov	r0, r5
   121c4:	bl	10980 <exit@plt>
   121c8:	mov	r0, r4
   121cc:	add	r4, r4, #1
   121d0:	bl	12148 <getc@plt+0x1750>
   121d4:	mov	r7, r0
   121d8:	sxth	r4, r4
   121dc:	bl	10908 <unlink@plt>
   121e0:	mov	r0, r7
   121e4:	bl	108c0 <free@plt>
   121e8:	b	121b4 <getc@plt+0x17bc>
   121ec:	andeq	r6, r2, r0, lsl #6
   121f0:	muleq	r2, r0, r1
   121f4:	sub	r2, r0, #1
   121f8:	sub	r1, r1, #1
   121fc:	ldrb	r3, [r2, #1]!
   12200:	ldrb	r0, [r1, #1]!
   12204:	cmp	r3, #0
   12208:	beq	12224 <getc@plt+0x182c>
   1220c:	cmp	r3, r0
   12210:	beq	121fc <getc@plt+0x1804>
   12214:	cmp	r3, r0
   12218:	mvncc	r0, #0
   1221c:	movcs	r0, #1
   12220:	bx	lr
   12224:	cmp	r0, #0
   12228:	bxeq	lr
   1222c:	b	12214 <getc@plt+0x181c>
   12230:	ldr	r2, [pc, #28]	; 12254 <getc@plt+0x185c>
   12234:	ldr	r2, [r2]
   12238:	cmp	r2, r0
   1223c:	bxeq	lr
   12240:	ldr	r2, [pc, #16]	; 12258 <getc@plt+0x1860>
   12244:	ldr	r2, [r2]
   12248:	cmp	r2, r0
   1224c:	bxeq	lr
   12250:	b	109b0 <fclose@plt>
   12254:	andeq	r4, r2, r0, lsl #2
   12258:	andeq	r4, r2, r4, lsl #2
   1225c:	push	{lr}		; (str lr, [sp, #-4]!)
   12260:	sub	sp, sp, #92	; 0x5c
   12264:	mov	r1, sp
   12268:	bl	12dc4 <error@@Base+0xa7c>
   1226c:	clz	r0, r0
   12270:	lsr	r0, r0, #5
   12274:	add	sp, sp, #92	; 0x5c
   12278:	pop	{pc}		; (ldr pc, [sp], #4)
   1227c:	ldr	r3, [pc, #36]	; 122a8 <getc@plt+0x18b0>
   12280:	push	{r4, lr}
   12284:	ldrh	r0, [r3]
   12288:	add	r0, r0, #1
   1228c:	sxth	r0, r0
   12290:	strh	r0, [r3]
   12294:	bl	12148 <getc@plt+0x1750>
   12298:	mov	r4, r0
   1229c:	bl	10908 <unlink@plt>
   122a0:	mov	r0, r4
   122a4:	pop	{r4, pc}
   122a8:	muleq	r2, r0, r1
   122ac:	push	{r4, lr}
   122b0:	mov	r4, r0
   122b4:	bl	10998 <strlen@plt>
   122b8:	sub	r0, r0, #1
   122bc:	add	r1, r4, #1
   122c0:	sxth	r0, r0
   122c4:	tst	r0, #32768	; 0x8000
   122c8:	bne	122dc <getc@plt+0x18e4>
   122cc:	sub	r3, r0, #1
   122d0:	ldrb	r2, [r1, r3]
   122d4:	cmp	r2, #47	; 0x2f
   122d8:	bne	122e8 <getc@plt+0x18f0>
   122dc:	add	r0, r0, #1
   122e0:	add	r0, r4, r0
   122e4:	pop	{r4, pc}
   122e8:	mov	r0, r3
   122ec:	b	122c4 <getc@plt+0x18cc>
   122f0:	push	{r4, lr}
   122f4:	mov	r0, #0
   122f8:	bl	12190 <getc@plt+0x1798>
   122fc:	ldr	r2, [pc, #52]	; 12338 <getc@plt+0x1940>
   12300:	push	{r4, lr}
   12304:	ldr	r2, [r2]
   12308:	cmp	r2, #0
   1230c:	beq	12318 <getc@plt+0x1920>
   12310:	blx	r2
   12314:	bl	122f0 <getc@plt+0x18f8>
   12318:	mov	r3, r0
   1231c:	ldr	r2, [pc, #24]	; 1233c <getc@plt+0x1944>
   12320:	ldr	r0, [pc, #24]	; 12340 <getc@plt+0x1948>
   12324:	ldr	r1, [pc, #24]	; 12344 <getc@plt+0x194c>
   12328:	ldr	r2, [r2]
   1232c:	ldr	r0, [r0]
   12330:	bl	109a4 <fprintf@plt>
   12334:	b	12314 <getc@plt+0x191c>
   12338:	strdeq	r6, [r2], -r8
   1233c:	strdeq	r6, [r2], -ip
   12340:	strdeq	r4, [r2], -r8
   12344:	andeq	r2, r1, r8, asr #29

00012348 <error@@Base>:
   12348:	mov	r3, r0
   1234c:	ldr	r2, [pc, #32]	; 12374 <error@@Base+0x2c>
   12350:	push	{r4, lr}
   12354:	ldr	r0, [pc, #28]	; 12378 <error@@Base+0x30>
   12358:	ldr	r1, [pc, #28]	; 1237c <error@@Base+0x34>
   1235c:	ldr	r2, [r2]
   12360:	ldr	r0, [r0]
   12364:	bl	109a4 <fprintf@plt>
   12368:	ldr	r3, [pc, #16]	; 12380 <error@@Base+0x38>
   1236c:	ldr	r0, [r3]
   12370:	bl	12190 <getc@plt+0x1798>
   12374:	strdeq	r6, [r2], -ip
   12378:	strdeq	r4, [r2], -r8
   1237c:	ldrdeq	r2, [r1], -r7
   12380:	strdeq	r4, [r2], -r0
   12384:	push	{r4, lr}
   12388:	bl	10890 <calloc@plt>
   1238c:	cmp	r0, #0
   12390:	popne	{r4, pc}
   12394:	ldr	r0, [pc]	; 1239c <error@@Base+0x54>
   12398:	bl	12348 <error@@Base>
   1239c:	ldrdeq	r2, [r1], -pc	; <UNPREDICTABLE>
   123a0:	ldr	r3, [pc, #28]	; 123c4 <error@@Base+0x7c>
   123a4:	ldrb	r2, [r3, #2]
   123a8:	cmp	r2, #0
   123ac:	bxne	lr
   123b0:	mov	r2, #1
   123b4:	push	{r4, lr}
   123b8:	ldr	r0, [pc, #8]	; 123c8 <error@@Base+0x80>
   123bc:	strb	r2, [r3, #2]
   123c0:	bl	12348 <error@@Base>
   123c4:	muleq	r2, r0, r1
   123c8:	strdeq	r2, [r1], -r9
   123cc:	push	{r0, r1, r2, lr}
   123d0:	mov	r3, r0
   123d4:	ldr	r2, [pc, #32]	; 123fc <error@@Base+0xb4>
   123d8:	str	r1, [sp]
   123dc:	ldr	r0, [pc, #28]	; 12400 <error@@Base+0xb8>
   123e0:	ldr	r1, [pc, #28]	; 12404 <error@@Base+0xbc>
   123e4:	ldr	r2, [r2]
   123e8:	ldr	r0, [r0]
   123ec:	bl	109a4 <fprintf@plt>
   123f0:	ldr	r3, [pc, #16]	; 12408 <error@@Base+0xc0>
   123f4:	ldr	r0, [r3]
   123f8:	bl	12190 <getc@plt+0x1798>
   123fc:	strdeq	r6, [r2], -ip
   12400:	strdeq	r4, [r2], -r8
   12404:	andeq	r2, r1, r8, lsl #30
   12408:	strdeq	r4, [r2], -r0
   1240c:	push	{r4, r5, r6, lr}
   12410:	subs	r4, r0, #0
   12414:	mov	r5, r1
   12418:	bne	12434 <error@@Base+0xec>
   1241c:	ldrb	r3, [r1]
   12420:	cmp	r3, #114	; 0x72
   12424:	ldreq	r3, [pc, #44]	; 12458 <error@@Base+0x110>
   12428:	ldrne	r3, [pc, #44]	; 1245c <error@@Base+0x114>
   1242c:	ldr	r0, [r3]
   12430:	pop	{r4, r5, r6, pc}
   12434:	bl	108b4 <fopen@plt>
   12438:	cmp	r0, #0
   1243c:	popne	{r4, r5, r6, pc}
   12440:	mov	r1, r4
   12444:	ldrb	r3, [r5]
   12448:	cmp	r3, #119	; 0x77
   1244c:	ldreq	r0, [pc, #12]	; 12460 <error@@Base+0x118>
   12450:	ldrne	r0, [pc, #12]	; 12464 <error@@Base+0x11c>
   12454:	bl	123cc <error@@Base+0x84>
   12458:	andeq	r4, r2, r0, lsl #2
   1245c:	andeq	r4, r2, r4, lsl #2
   12460:	andeq	r2, r1, r5, lsl pc
   12464:	andeq	r2, r1, fp, lsr #30
   12468:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1246c:	mov	r8, r0
   12470:	mov	r7, r1
   12474:	mov	r9, r3
   12478:	ldr	r0, [r1]
   1247c:	str	r2, [sp]
   12480:	bl	122ac <getc@plt+0x18b4>
   12484:	ldr	r3, [pc, #396]	; 12618 <error@@Base+0x2d0>
   12488:	ldr	r1, [pc, #396]	; 1261c <error@@Base+0x2d4>
   1248c:	str	r0, [r3]
   12490:	mov	r0, #2
   12494:	bl	1095c <__sysv_signal@plt>
   12498:	ldr	r1, [pc, #380]	; 1261c <error@@Base+0x2d4>
   1249c:	mov	r0, #15
   124a0:	bl	1095c <__sysv_signal@plt>
   124a4:	ldr	r4, [r8]
   124a8:	cmp	r4, #1
   124ac:	movne	r6, #0
   124b0:	movne	r4, #1
   124b4:	bne	125d8 <error@@Base+0x290>
   124b8:	ldr	r3, [pc, #352]	; 12620 <error@@Base+0x2d8>
   124bc:	ldrb	r6, [r3, #4]
   124c0:	cmp	r6, #0
   124c4:	beq	125d8 <error@@Base+0x290>
   124c8:	ldr	r0, [sp]
   124cc:	bl	122fc <getc@plt+0x1904>
   124d0:	ldr	r5, [r7, r4, lsl #2]
   124d4:	lsl	sl, r4, #2
   124d8:	ldrb	r3, [r5]
   124dc:	cmp	r3, #45	; 0x2d
   124e0:	bne	12608 <error@@Base+0x2c0>
   124e4:	ldrb	r3, [r5, #1]
   124e8:	cmp	r3, #0
   124ec:	str	r3, [sp, #4]
   124f0:	beq	12608 <error@@Base+0x2c0>
   124f4:	mov	r0, r5
   124f8:	bl	10998 <strlen@plt>
   124fc:	mov	r2, r0
   12500:	mov	r1, r5
   12504:	ldr	r0, [pc, #280]	; 12624 <error@@Base+0x2dc>
   12508:	bl	109e0 <strncmp@plt>
   1250c:	cmp	r0, #0
   12510:	beq	124c8 <error@@Base+0x180>
   12514:	add	r0, r4, #1
   12518:	ldr	r3, [sp, #4]
   1251c:	cmp	r0, fp
   12520:	addlt	sl, r7, sl
   12524:	movge	r1, #0
   12528:	ldrlt	r1, [sl, #4]
   1252c:	cmp	r9, #0
   12530:	beq	125f0 <error@@Base+0x2a8>
   12534:	mov	ip, #0
   12538:	sxth	r2, ip
   1253c:	add	r2, r2, r2, lsl #1
   12540:	add	lr, r9, r2, lsl #2
   12544:	ldrb	r2, [r9, r2, lsl #2]
   12548:	cmp	r2, #0
   1254c:	beq	125f0 <error@@Base+0x2a8>
   12550:	cmp	r3, r2
   12554:	add	ip, ip, #1
   12558:	bne	12538 <error@@Base+0x1f0>
   1255c:	ldr	r3, [lr, #4]
   12560:	cmp	r3, #0
   12564:	bne	12598 <error@@Base+0x250>
   12568:	ldr	r3, [lr, #8]
   1256c:	cmp	r3, #0
   12570:	beq	125f0 <error@@Base+0x2a8>
   12574:	ldrb	r2, [r5, #2]
   12578:	cmp	r2, #0
   1257c:	bne	125f0 <error@@Base+0x2a8>
   12580:	ldrb	r2, [r3]
   12584:	cmp	r2, #0
   12588:	bne	125fc <error@@Base+0x2b4>
   1258c:	mov	r2, #1
   12590:	strb	r2, [r3]
   12594:	b	125d0 <error@@Base+0x288>
   12598:	ldrb	r2, [r5, #2]
   1259c:	cmp	r1, #0
   125a0:	cmpeq	r2, #0
   125a4:	beq	12568 <error@@Base+0x220>
   125a8:	ldr	ip, [r3]
   125ac:	cmp	ip, #0
   125b0:	bne	125fc <error@@Base+0x2b4>
   125b4:	cmp	r2, #0
   125b8:	sxth	r0, r0
   125bc:	addne	r1, r5, #2
   125c0:	str	r1, [r3]
   125c4:	ldrb	r3, [r5, #2]
   125c8:	cmp	r3, #0
   125cc:	moveq	r4, r0
   125d0:	add	r4, r4, #1
   125d4:	sxth	r4, r4
   125d8:	ldr	fp, [r8]
   125dc:	cmp	r4, fp
   125e0:	blt	124d0 <error@@Base+0x188>
   125e4:	str	r6, [r8]
   125e8:	add	sp, sp, #12
   125ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125f0:	ldr	r0, [pc, #48]	; 12628 <error@@Base+0x2e0>
   125f4:	mov	r1, r5
   125f8:	bl	123cc <error@@Base+0x84>
   125fc:	mov	r1, r5
   12600:	ldr	r0, [pc, #36]	; 1262c <error@@Base+0x2e4>
   12604:	b	125f8 <error@@Base+0x2b0>
   12608:	add	r3, r6, #1
   1260c:	str	r5, [r7, r6, lsl #2]
   12610:	sxth	r6, r3
   12614:	b	125d0 <error@@Base+0x288>
   12618:	strdeq	r6, [r2], -ip
   1261c:	andeq	r2, r1, r0, lsr #7
   12620:	strdeq	r4, [r2], -r0
   12624:	andeq	r2, r1, pc, lsr pc
   12628:	andeq	r2, r1, r5, asr #30
   1262c:	andeq	r2, r1, r4, asr pc
   12630:	push	{r0, r1, r2, lr}
   12634:	mov	r3, r0
   12638:	ldr	r2, [pc, #28]	; 1265c <error@@Base+0x314>
   1263c:	str	r1, [sp]
   12640:	ldr	r0, [pc, #24]	; 12660 <error@@Base+0x318>
   12644:	ldr	r1, [pc, #24]	; 12664 <error@@Base+0x31c>
   12648:	ldr	r2, [r2]
   1264c:	ldr	r0, [r0]
   12650:	bl	109a4 <fprintf@plt>
   12654:	add	sp, sp, #12
   12658:	pop	{pc}		; (ldr pc, [sp], #4)
   1265c:	strdeq	r6, [r2], -ip
   12660:	strdeq	r4, [r2], -r8
   12664:	andeq	r2, r1, r8, lsl #30
   12668:	push	{r4, r5, r6, lr}
   1266c:	mov	r4, r0
   12670:	uxtb	r6, r1
   12674:	mov	r0, #1
   12678:	mov	r1, #16
   1267c:	mov	r5, r2
   12680:	bl	12384 <error@@Base+0x3c>
   12684:	mov	r1, r0
   12688:	mov	r0, r4
   1268c:	strb	r6, [r1, #8]
   12690:	str	r5, [r1, #12]
   12694:	pop	{r4, r5, r6, lr}
   12698:	b	12c60 <error@@Base+0x918>
   1269c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126a0:	mov	r6, r0
   126a4:	mov	r0, r1
   126a8:	clz	r1, r1
   126ac:	sub	sp, sp, #116	; 0x74
   126b0:	lsr	r1, r1, #5
   126b4:	ldrb	r3, [r2]
   126b8:	cmp	r3, #0
   126bc:	moveq	r1, #0
   126c0:	cmp	r1, #0
   126c4:	beq	126d4 <error@@Base+0x38c>
   126c8:	ldr	r1, [pc, #732]	; 129ac <error@@Base+0x664>
   126cc:	ldr	r0, [pc, #732]	; 129b0 <error@@Base+0x668>
   126d0:	bl	123cc <error@@Base+0x84>
   126d4:	mov	r4, r2
   126d8:	ldr	r1, [pc, #724]	; 129b4 <error@@Base+0x66c>
   126dc:	ldr	r7, [r6, #4]
   126e0:	bl	1240c <error@@Base+0xc4>
   126e4:	ldrb	r3, [r4]
   126e8:	mov	r5, r0
   126ec:	cmp	r3, #0
   126f0:	beq	1277c <error@@Base+0x434>
   126f4:	mov	r2, r0
   126f8:	mov	r1, #99	; 0x63
   126fc:	add	r0, sp, #12
   12700:	bl	108d8 <fgets@plt>
   12704:	cmp	r0, #0
   12708:	beq	1276c <error@@Base+0x424>
   1270c:	mov	r2, #51	; 0x33
   12710:	ldr	r1, [pc, #672]	; 129b8 <error@@Base+0x670>
   12714:	add	r0, sp, #12
   12718:	bl	109e0 <strncmp@plt>
   1271c:	subs	r8, r0, #0
   12720:	bne	1276c <error@@Base+0x424>
   12724:	ldr	r9, [pc, #656]	; 129bc <error@@Base+0x674>
   12728:	mov	r2, r5
   1272c:	mov	r1, #99	; 0x63
   12730:	add	r0, sp, #12
   12734:	bl	108d8 <fgets@plt>
   12738:	cmp	r0, #0
   1273c:	beq	12764 <error@@Base+0x41c>
   12740:	mov	r1, r9
   12744:	add	r0, sp, #12
   12748:	bl	1089c <strcmp@plt>
   1274c:	cmp	r0, #0
   12750:	bne	12728 <error@@Base+0x3e0>
   12754:	add	r8, r8, #1
   12758:	sxth	r8, r8
   1275c:	cmp	r8, #2
   12760:	bne	12728 <error@@Base+0x3e0>
   12764:	mov	r3, #1
   12768:	b	12778 <error@@Base+0x430>
   1276c:	mov	r0, r5
   12770:	bl	108fc <rewind@plt>
   12774:	mov	r3, #0
   12778:	strb	r3, [r4, #11]
   1277c:	ldr	r8, [r4, #4]
   12780:	mov	r0, r5
   12784:	mov	fp, #0
   12788:	ldrb	r3, [r4, #1]
   1278c:	cmp	r8, #0
   12790:	moveq	r8, #94	; 0x5e
   12794:	str	r3, [sp, #4]
   12798:	bl	109f8 <getc@plt>
   1279c:	cmn	r0, #1
   127a0:	bne	127cc <error@@Base+0x484>
   127a4:	mov	r0, r5
   127a8:	bl	12230 <getc@plt+0x1838>
   127ac:	ldrb	r3, [r4, #9]
   127b0:	cmp	r3, #0
   127b4:	bne	1286c <error@@Base+0x524>
   127b8:	ldrb	r3, [r4, #10]
   127bc:	cmp	r3, #0
   127c0:	bne	12984 <error@@Base+0x63c>
   127c4:	add	sp, sp, #116	; 0x74
   127c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127cc:	ldr	r3, [pc, #492]	; 129c0 <error@@Base+0x678>
   127d0:	ldrsb	r9, [r3, r0]
   127d4:	cmp	r9, #0
   127d8:	bgt	127e4 <error@@Base+0x49c>
   127dc:	ldr	r0, [pc, #480]	; 129c4 <error@@Base+0x67c>
   127e0:	bl	12348 <error@@Base>
   127e4:	cmp	r9, #1
   127e8:	strb	r0, [sp, #8]
   127ec:	beq	12814 <error@@Base+0x4cc>
   127f0:	sub	sl, r9, #1
   127f4:	mov	r3, r5
   127f8:	mov	r2, sl
   127fc:	mov	r1, #1
   12800:	add	r0, sp, #9
   12804:	bl	10938 <fread@plt>
   12808:	cmp	sl, r0
   1280c:	ldrne	r0, [pc, #436]	; 129c8 <error@@Base+0x680>
   12810:	bne	127e0 <error@@Base+0x498>
   12814:	add	r2, sp, #12
   12818:	mov	r1, #4
   1281c:	add	r0, sp, #8
   12820:	bl	10944 <utf8proc_iterate@plt>
   12824:	cmp	r9, r0
   12828:	beq	12834 <error@@Base+0x4ec>
   1282c:	bl	109c8 <utf8proc_errmsg@plt>
   12830:	b	127e0 <error@@Base+0x498>
   12834:	ldr	r3, [sp, #4]
   12838:	ldr	r2, [sp, #12]
   1283c:	cmp	r3, #0
   12840:	beq	12850 <error@@Base+0x508>
   12844:	cmp	r8, r2
   12848:	moveq	fp, #1
   1284c:	beq	12860 <error@@Base+0x518>
   12850:	mov	r1, fp
   12854:	mov	r0, r6
   12858:	mov	fp, #0
   1285c:	bl	12668 <error@@Base+0x320>
   12860:	mov	r0, r5
   12864:	bl	109f8 <getc@plt>
   12868:	b	1279c <error@@Base+0x454>
   1286c:	cmp	r7, #0
   12870:	mov	sl, #32
   12874:	ldrne	r8, [r7, #4]
   12878:	ldreq	r8, [r6]
   1287c:	mov	r5, r8
   12880:	cmp	r5, #0
   12884:	bne	128d0 <error@@Base+0x588>
   12888:	cmp	r8, #0
   1288c:	beq	127b8 <error@@Base+0x470>
   12890:	eor	r3, r5, #1
   12894:	ldr	r9, [r8, #4]
   12898:	ldr	r2, [r8, #12]
   1289c:	cmp	r2, #32
   128a0:	bne	12924 <error@@Base+0x5dc>
   128a4:	cmp	r9, #0
   128a8:	moveq	r3, #1
   128ac:	cmp	r3, #0
   128b0:	bne	12954 <error@@Base+0x60c>
   128b4:	ldr	r3, [r9, #12]
   128b8:	cmp	r3, #10
   128bc:	cmpne	r3, #32
   128c0:	beq	12954 <error@@Base+0x60c>
   128c4:	subs	r5, r2, #10
   128c8:	movne	r5, #1
   128cc:	b	1294c <error@@Base+0x604>
   128d0:	ldr	r9, [r5, #12]
   128d4:	mov	r0, r9
   128d8:	bl	108cc <utf8proc_get_property@plt>
   128dc:	cmp	r9, #13
   128e0:	bhi	12914 <error@@Base+0x5cc>
   128e4:	cmp	r9, #11
   128e8:	bcs	1291c <error@@Base+0x5d4>
   128ec:	cmp	r9, #9
   128f0:	beq	1291c <error@@Base+0x5d4>
   128f4:	cmp	r9, #10
   128f8:	beq	1290c <error@@Base+0x5c4>
   128fc:	ldrsh	r3, [r0]
   12900:	sub	r3, r3, #23
   12904:	cmp	r3, #2
   12908:	bls	1291c <error@@Base+0x5d4>
   1290c:	ldr	r5, [r5, #4]
   12910:	b	12880 <error@@Base+0x538>
   12914:	cmp	r9, #160	; 0xa0
   12918:	bne	128fc <error@@Base+0x5b4>
   1291c:	str	sl, [r5, #12]
   12920:	b	1290c <error@@Base+0x5c4>
   12924:	cmp	r2, #10
   12928:	movne	r3, #0
   1292c:	andeq	r3, r3, #1
   12930:	cmp	r3, #0
   12934:	beq	128c4 <error@@Base+0x57c>
   12938:	mov	r0, r6
   1293c:	mov	r1, r8
   12940:	bl	12c88 <error@@Base+0x940>
   12944:	mov	r0, r8
   12948:	bl	108c0 <free@plt>
   1294c:	mov	r8, r9
   12950:	b	12888 <error@@Base+0x540>
   12954:	cmp	r9, #0
   12958:	movne	r3, r5
   1295c:	moveq	r3, #0
   12960:	cmp	r3, #0
   12964:	beq	12938 <error@@Base+0x5f0>
   12968:	ldr	r3, [r9, #12]
   1296c:	cmp	r3, #32
   12970:	ldrbeq	r3, [r9, #8]
   12974:	ldrbeq	r2, [r8, #8]
   12978:	orreq	r3, r3, r2
   1297c:	strbeq	r3, [r9, #8]
   12980:	b	12938 <error@@Base+0x5f0>
   12984:	cmp	r7, #0
   12988:	ldrne	r4, [r7, #4]
   1298c:	ldreq	r4, [r6]
   12990:	cmp	r4, #0
   12994:	beq	127c4 <error@@Base+0x47c>
   12998:	ldr	r0, [r4, #12]
   1299c:	bl	10914 <utf8proc_tolower@plt>
   129a0:	str	r0, [r4, #12]
   129a4:	ldr	r4, [r4, #4]
   129a8:	b	12990 <error@@Base+0x648>
   129ac:	andeq	r2, r1, r5, ror #30
   129b0:	andeq	r2, r1, pc, ror #30
   129b4:	andeq	r3, r1, r5
   129b8:	andeq	r2, r1, pc, ror pc
   129bc:			; <UNDEFINED> instruction: 0x00012fb7
   129c0:	andeq	r3, r2, r8, lsl #28
   129c4:	andeq	r2, r1, pc, ror #31
   129c8:	andeq	r3, r1, r7
   129cc:	push	{r4, lr}
   129d0:	bl	108e4 <utf8proc_encode_char@plt>
   129d4:	cmp	r0, #0
   129d8:	bgt	129e4 <error@@Base+0x69c>
   129dc:	ldr	r0, [pc, #8]	; 129ec <error@@Base+0x6a4>
   129e0:	bl	12348 <error@@Base>
   129e4:	sxtb	r0, r0
   129e8:	pop	{r4, pc}
   129ec:	andeq	r3, r1, pc, lsl r0
   129f0:	push	{r4, r5, r6, r7, r8, lr}
   129f4:	uxtb	r4, r0
   129f8:	mov	r7, r1
   129fc:	cmp	r4, #0
   12a00:	mov	r6, r2
   12a04:	uxtb	r8, r3
   12a08:	beq	12a1c <error@@Base+0x6d4>
   12a0c:	mov	r1, r2
   12a10:	mov	r0, #94	; 0x5e
   12a14:	bl	129cc <error@@Base+0x684>
   12a18:	sxth	r4, r0
   12a1c:	cmp	r7, #10
   12a20:	add	r5, r6, r4
   12a24:	bne	12a44 <error@@Base+0x6fc>
   12a28:	ldr	r2, [pc, #164]	; 12ad4 <error@@Base+0x78c>
   12a2c:	cmp	r8, #0
   12a30:	mov	r0, r5
   12a34:	pop	{r4, r5, r6, r7, r8, lr}
   12a38:	ldr	r1, [pc, #152]	; 12ad8 <error@@Base+0x790>
   12a3c:	moveq	r1, r2
   12a40:	b	109bc <sprintf@plt>
   12a44:	mov	r0, r7
   12a48:	bl	108cc <utf8proc_get_property@plt>
   12a4c:	cmp	r7, #32
   12a50:	beq	12a70 <error@@Base+0x728>
   12a54:	ldrh	r3, [r0]
   12a58:	cmp	r3, #29
   12a5c:	bhi	12ab8 <error@@Base+0x770>
   12a60:	ldr	r2, [pc, #116]	; 12adc <error@@Base+0x794>
   12a64:	mov	r1, #1
   12a68:	ands	r3, r2, r1, lsl r3
   12a6c:	beq	12ab8 <error@@Base+0x770>
   12a70:	mov	r0, r7
   12a74:	bl	1098c <utf8proc_category@plt>
   12a78:	sub	r0, r0, #6
   12a7c:	cmp	r0, #2
   12a80:	bhi	12a98 <error@@Base+0x750>
   12a84:	mov	r1, r5
   12a88:	movw	r0, #9676	; 0x25cc
   12a8c:	bl	129cc <error@@Base+0x684>
   12a90:	add	r4, r0, r4
   12a94:	sxth	r4, r4
   12a98:	add	r1, r6, r4
   12a9c:	mov	r0, r7
   12aa0:	bl	129cc <error@@Base+0x684>
   12aa4:	add	r0, r0, r4
   12aa8:	mov	r3, #0
   12aac:	sxth	r0, r0
   12ab0:	strb	r3, [r6, r0]
   12ab4:	pop	{r4, r5, r6, r7, r8, pc}
   12ab8:	cmp	r7, #255	; 0xff
   12abc:	mov	r2, r7
   12ac0:	mov	r0, r5
   12ac4:	ldrls	r1, [pc, #20]	; 12ae0 <error@@Base+0x798>
   12ac8:	pop	{r4, r5, r6, r7, r8, lr}
   12acc:	ldrhi	r1, [pc, #16]	; 12ae4 <error@@Base+0x79c>
   12ad0:	b	109bc <sprintf@plt>
   12ad4:	andeq	r2, r1, r3, lsl pc
   12ad8:	andeq	r3, r1, r6, lsr r0
   12adc:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   12ae0:	andeq	r3, r1, fp, lsr r0
   12ae4:	andeq	r3, r1, r2, asr #32
   12ae8:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   12aec:	mov	r5, r2
   12af0:	mov	r6, r0
   12af4:	mov	r0, r1
   12af8:	ldr	r1, [pc, #124]	; 12b7c <error@@Base+0x834>
   12afc:	bl	1240c <error@@Base+0xc4>
   12b00:	cmp	r5, #0
   12b04:	mov	r4, r0
   12b08:	beq	12b38 <error@@Base+0x7f0>
   12b0c:	mov	r1, r0
   12b10:	ldr	r0, [pc, #104]	; 12b80 <error@@Base+0x838>
   12b14:	bl	109d4 <fputs@plt>
   12b18:	mov	r1, r4
   12b1c:	ldr	r0, [pc, #96]	; 12b84 <error@@Base+0x83c>
   12b20:	bl	109d4 <fputs@plt>
   12b24:	mov	r0, r4
   12b28:	blx	r5
   12b2c:	mov	r1, r4
   12b30:	ldr	r0, [pc, #76]	; 12b84 <error@@Base+0x83c>
   12b34:	bl	109d4 <fputs@plt>
   12b38:	ldr	r5, [r6]
   12b3c:	cmp	r5, #0
   12b40:	bne	12b54 <error@@Base+0x80c>
   12b44:	mov	r0, r4
   12b48:	bl	12230 <getc@plt+0x1838>
   12b4c:	add	sp, sp, #16
   12b50:	pop	{r4, r5, r6, pc}
   12b54:	ldrb	r0, [r5, #8]
   12b58:	mov	r3, #0
   12b5c:	add	r2, sp, #4
   12b60:	ldr	r1, [r5, #12]
   12b64:	bl	129f0 <error@@Base+0x6a8>
   12b68:	mov	r1, r4
   12b6c:	add	r0, sp, #4
   12b70:	bl	109d4 <fputs@plt>
   12b74:	ldr	r5, [r5, #4]
   12b78:	b	12b3c <error@@Base+0x7f4>
   12b7c:	andeq	r3, r1, r9, asr #32
   12b80:	andeq	r2, r1, pc, ror pc
   12b84:			; <UNDEFINED> instruction: 0x00012fb7
   12b88:	push	{r0, r1, r4, r5, r6, lr}
   12b8c:	mov	r3, #0
   12b90:	mov	r5, r0
   12b94:	mov	r4, r1
   12b98:	str	r3, [sp, #4]
   12b9c:	ldrb	r3, [r4]
   12ba0:	cmp	r3, #0
   12ba4:	bne	12bb4 <error@@Base+0x86c>
   12ba8:	mov	r0, #1
   12bac:	add	sp, sp, #8
   12bb0:	pop	{r4, r5, r6, pc}
   12bb4:	add	r2, sp, #4
   12bb8:	mvn	r1, #0
   12bbc:	mov	r0, r4
   12bc0:	bl	10944 <utf8proc_iterate@plt>
   12bc4:	subs	r6, r0, #0
   12bc8:	ble	12be4 <error@@Base+0x89c>
   12bcc:	mov	r1, #0
   12bd0:	mov	r0, r5
   12bd4:	ldr	r2, [sp, #4]
   12bd8:	add	r4, r4, r6
   12bdc:	bl	12668 <error@@Base+0x320>
   12be0:	b	12b9c <error@@Base+0x854>
   12be4:	mov	r0, #0
   12be8:	b	12bac <error@@Base+0x864>
   12bec:	cmp	r1, #0
   12bf0:	push	{r4, lr}
   12bf4:	mov	r4, r0
   12bf8:	stm	r2, {r1, r3}
   12bfc:	strne	r2, [r1, #4]
   12c00:	streq	r2, [r0]
   12c04:	cmp	r3, #0
   12c08:	streq	r2, [r0, #4]
   12c0c:	ldr	r0, [r0, #8]
   12c10:	strne	r2, [r3]
   12c14:	cmp	r0, #0
   12c18:	beq	12c28 <error@@Base+0x8e0>
   12c1c:	bl	108c0 <free@plt>
   12c20:	mov	r3, #0
   12c24:	str	r3, [r4, #8]
   12c28:	ldr	r3, [r4, #12]
   12c2c:	add	r3, r3, #1
   12c30:	str	r3, [r4, #12]
   12c34:	pop	{r4, pc}
   12c38:	mov	r3, #0
   12c3c:	str	r3, [r0]
   12c40:	str	r3, [r0, #4]
   12c44:	str	r3, [r0, #8]
   12c48:	str	r3, [r0, #12]
   12c4c:	bx	lr
   12c50:	mov	r2, r1
   12c54:	mov	r1, #0
   12c58:	ldr	r3, [r0]
   12c5c:	b	12bec <error@@Base+0x8a4>
   12c60:	mov	r2, r1
   12c64:	mov	r3, #0
   12c68:	ldr	r1, [r0, #4]
   12c6c:	b	12bec <error@@Base+0x8a4>
   12c70:	mov	r3, r2
   12c74:	mov	r2, r1
   12c78:	ldr	r1, [r3]
   12c7c:	b	12bec <error@@Base+0x8a4>
   12c80:	ldr	r3, [r1, #4]
   12c84:	b	12bec <error@@Base+0x8a4>
   12c88:	ldr	r3, [r1]
   12c8c:	push	{r4, r5, r6, lr}
   12c90:	mov	r4, r0
   12c94:	mov	r5, #0
   12c98:	ldr	r2, [r1, #4]
   12c9c:	cmp	r3, #0
   12ca0:	strne	r2, [r3, #4]
   12ca4:	streq	r2, [r0]
   12ca8:	ldr	r2, [r1, #4]
   12cac:	cmp	r2, #0
   12cb0:	streq	r3, [r0, #4]
   12cb4:	ldr	r0, [r0, #8]
   12cb8:	strne	r3, [r2]
   12cbc:	str	r5, [r1]
   12cc0:	str	r5, [r1, #4]
   12cc4:	cmp	r0, r5
   12cc8:	beq	12cd4 <error@@Base+0x98c>
   12ccc:	bl	108c0 <free@plt>
   12cd0:	str	r5, [r4, #8]
   12cd4:	ldr	r3, [r4, #12]
   12cd8:	sub	r3, r3, #1
   12cdc:	str	r3, [r4, #12]
   12ce0:	pop	{r4, r5, r6, pc}
   12ce4:	ldr	r3, [r0, #8]
   12ce8:	cmp	r3, #0
   12cec:	bxne	lr
   12cf0:	ldr	r3, [r0, #12]
   12cf4:	cmp	r3, #0
   12cf8:	bxeq	lr
   12cfc:	push	{r4, lr}
   12d00:	mov	r1, #4
   12d04:	mov	r4, r0
   12d08:	mov	r0, r3
   12d0c:	bl	12384 <error@@Base+0x3c>
   12d10:	ldr	r3, [r4]
   12d14:	str	r0, [r4, #8]
   12d18:	sub	r0, r0, #4
   12d1c:	cmp	r3, #0
   12d20:	popeq	{r4, pc}
   12d24:	str	r3, [r0, #4]!
   12d28:	ldr	r3, [r3, #4]
   12d2c:	b	12d1c <error@@Base+0x9d4>
   12d30:	push	{r4, r5, r6, lr}
   12d34:	mov	r5, r0
   12d38:	mov	r6, r1
   12d3c:	ldr	r4, [r5]
   12d40:	cmp	r4, #0
   12d44:	popeq	{r4, r5, r6, pc}
   12d48:	mov	r0, r5
   12d4c:	mov	r1, r4
   12d50:	bl	12c88 <error@@Base+0x940>
   12d54:	mov	r0, r4
   12d58:	blx	r6
   12d5c:	b	12d3c <error@@Base+0x9f4>
   12d60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d64:	mov	r7, r0
   12d68:	ldr	r6, [pc, #72]	; 12db8 <error@@Base+0xa70>
   12d6c:	ldr	r5, [pc, #72]	; 12dbc <error@@Base+0xa74>
   12d70:	add	r6, pc, r6
   12d74:	add	r5, pc, r5
   12d78:	sub	r6, r6, r5
   12d7c:	mov	r8, r1
   12d80:	mov	r9, r2
   12d84:	bl	10870 <calloc@plt-0x20>
   12d88:	asrs	r6, r6, #2
   12d8c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d90:	mov	r4, #0
   12d94:	add	r4, r4, #1
   12d98:	ldr	r3, [r5], #4
   12d9c:	mov	r2, r9
   12da0:	mov	r1, r8
   12da4:	mov	r0, r7
   12da8:	blx	r3
   12dac:	cmp	r6, r4
   12db0:	bne	12d94 <error@@Base+0xa4c>
   12db4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12db8:	andeq	r1, r1, ip, lsl #1
   12dbc:	andeq	r1, r1, r4, lsl #1
   12dc0:	bx	lr
   12dc4:	mov	r2, r1
   12dc8:	mov	r1, r0
   12dcc:	mov	r0, #3
   12dd0:	b	10920 <__xstat@plt>

Disassembly of section .fini:

00012dd4 <.fini>:
   12dd4:	push	{r3, lr}
   12dd8:	pop	{r3, pc}
