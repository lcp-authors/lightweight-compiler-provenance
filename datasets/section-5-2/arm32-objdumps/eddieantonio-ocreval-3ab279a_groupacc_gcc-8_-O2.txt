
../repos/eddieantonio-ocreval-3ab279a/groupacc/groupacc:     file format elf32-littlearm


Disassembly of section .init:

0001088c <.init>:
   1088c:	push	{r3, lr}
   10890:	bl	10b00 <getc@plt+0xec>
   10894:	pop	{r3, pc}

Disassembly of section .plt:

00010898 <calloc@plt-0x14>:
   10898:	push	{lr}		; (str lr, [sp, #-4]!)
   1089c:	ldr	lr, [pc, #4]	; 108a8 <calloc@plt-0x4>
   108a0:	add	lr, pc, lr
   108a4:	ldr	pc, [lr, #8]!
   108a8:	andeq	r4, r1, r8, asr r7

000108ac <calloc@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #20, 20	; 0x14000
   108b4:	ldr	pc, [ip, #1880]!	; 0x758

000108b8 <strcmp@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #20, 20	; 0x14000
   108c0:	ldr	pc, [ip, #1872]!	; 0x750

000108c4 <fopen@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #20, 20	; 0x14000
   108cc:	ldr	pc, [ip, #1864]!	; 0x748

000108d0 <free@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #20, 20	; 0x14000
   108d8:	ldr	pc, [ip, #1856]!	; 0x740

000108dc <utf8proc_get_property@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #20, 20	; 0x14000
   108e4:	ldr	pc, [ip, #1848]!	; 0x738

000108e8 <fgets@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #20, 20	; 0x14000
   108f0:	ldr	pc, [ip, #1840]!	; 0x730

000108f4 <utf8proc_encode_char@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #20, 20	; 0x14000
   108fc:	ldr	pc, [ip, #1832]!	; 0x728

00010900 <strdup@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #20, 20	; 0x14000
   10908:	ldr	pc, [ip, #1824]!	; 0x720

0001090c <rewind@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #20, 20	; 0x14000
   10914:	ldr	pc, [ip, #1816]!	; 0x718

00010918 <unlink@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #20, 20	; 0x14000
   10920:	ldr	pc, [ip, #1808]!	; 0x710

00010924 <utf8proc_tolower@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #20, 20	; 0x14000
   1092c:	ldr	pc, [ip, #1800]!	; 0x708

00010930 <__xstat@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #20, 20	; 0x14000
   10938:	ldr	pc, [ip, #1792]!	; 0x700

0001093c <fwrite@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #20, 20	; 0x14000
   10944:	ldr	pc, [ip, #1784]!	; 0x6f8

00010948 <fread@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #20, 20	; 0x14000
   10950:	ldr	pc, [ip, #1776]!	; 0x6f0

00010954 <utf8proc_iterate@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #20, 20	; 0x14000
   1095c:	ldr	pc, [ip, #1768]!	; 0x6e8

00010960 <__libc_start_main@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #20, 20	; 0x14000
   10968:	ldr	pc, [ip, #1760]!	; 0x6e0

0001096c <__sysv_signal@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #20, 20	; 0x14000
   10974:	ldr	pc, [ip, #1752]!	; 0x6d8

00010978 <__gmon_start__@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #20, 20	; 0x14000
   10980:	ldr	pc, [ip, #1744]!	; 0x6d0

00010984 <getpid@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #20, 20	; 0x14000
   1098c:	ldr	pc, [ip, #1736]!	; 0x6c8

00010990 <exit@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #20, 20	; 0x14000
   10998:	ldr	pc, [ip, #1728]!	; 0x6c0

0001099c <utf8proc_category@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #20, 20	; 0x14000
   109a4:	ldr	pc, [ip, #1720]!	; 0x6b8

000109a8 <strlen@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #20, 20	; 0x14000
   109b0:	ldr	pc, [ip, #1712]!	; 0x6b0

000109b4 <fprintf@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #20, 20	; 0x14000
   109bc:	ldr	pc, [ip, #1704]!	; 0x6a8

000109c0 <__isoc99_sscanf@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #20, 20	; 0x14000
   109c8:	ldr	pc, [ip, #1696]!	; 0x6a0

000109cc <fclose@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #20, 20	; 0x14000
   109d4:	ldr	pc, [ip, #1688]!	; 0x698

000109d8 <sprintf@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #20, 20	; 0x14000
   109e0:	ldr	pc, [ip, #1680]!	; 0x690

000109e4 <utf8proc_errmsg@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #20, 20	; 0x14000
   109ec:	ldr	pc, [ip, #1672]!	; 0x688

000109f0 <fputs@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #20, 20	; 0x14000
   109f8:	ldr	pc, [ip, #1664]!	; 0x680

000109fc <strncmp@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #20, 20	; 0x14000
   10a04:	ldr	pc, [ip, #1656]!	; 0x678

00010a08 <abort@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1648]!	; 0x670

00010a14 <getc@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1640]!	; 0x668

Disassembly of section .text:

00010a20 <error@@Base-0x192c>:
   10a20:	ldr	r2, [pc, #132]	; 10aac <getc@plt+0x98>
   10a24:	mov	r3, #0
   10a28:	strd	r4, [sp, #-12]!
   10a2c:	mov	r5, r1
   10a30:	str	lr, [sp, #8]
   10a34:	sub	sp, sp, #12
   10a38:	ldr	r4, [pc, #112]	; 10ab0 <getc@plt+0x9c>
   10a3c:	str	r0, [sp, #4]
   10a40:	add	r0, sp, #4
   10a44:	add	r2, pc, r2
   10a48:	bl	12530 <error@@Base+0x1e4>
   10a4c:	ldr	r3, [sp, #4]
   10a50:	add	r4, pc, r4
   10a54:	sub	r3, r3, #2
   10a58:	cmp	r3, #1
   10a5c:	bls	10a6c <getc@plt+0x58>
   10a60:	ldr	r0, [pc, #76]	; 10ab4 <getc@plt+0xa0>
   10a64:	add	r0, pc, r0
   10a68:	bl	1234c <error@@Base>
   10a6c:	ldr	r3, [pc, #68]	; 10ab8 <getc@plt+0xa4>
   10a70:	ldr	r2, [pc, #68]	; 10abc <getc@plt+0xa8>
   10a74:	ldr	r1, [r5]
   10a78:	ldr	r0, [r4, r3]
   10a7c:	ldr	r2, [r4, r2]
   10a80:	bl	12870 <error@@Base+0x524>
   10a84:	ldr	r3, [pc, #52]	; 10ac0 <getc@plt+0xac>
   10a88:	ldr	r1, [r5, #4]
   10a8c:	ldr	r0, [r4, r3]
   10a90:	bl	11228 <getc@plt+0x814>
   10a94:	ldr	r3, [sp, #4]
   10a98:	cmp	r3, #3
   10a9c:	ldreq	r0, [r5, #8]
   10aa0:	movne	r0, #0
   10aa4:	bl	10c6c <getc@plt+0x258>
   10aa8:	bl	122d0 <getc@plt+0x18bc>
   10aac:	andeq	r2, r0, r8, asr r8
   10ab0:	andeq	r4, r1, r8, lsr #11
   10ab4:	andeq	r2, r0, r4, ror #16
   10ab8:	andeq	r0, r0, r8, lsl #1
   10abc:	muleq	r0, r8, r0
   10ac0:	muleq	r0, r0, r0
   10ac4:	mov	fp, #0
   10ac8:	mov	lr, #0
   10acc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ad0:	mov	r2, sp
   10ad4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ad8:	push	{r0}		; (str r0, [sp, #-4]!)
   10adc:	ldr	ip, [pc, #16]	; 10af4 <getc@plt+0xe0>
   10ae0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ae4:	ldr	r0, [pc, #12]	; 10af8 <getc@plt+0xe4>
   10ae8:	ldr	r3, [pc, #12]	; 10afc <getc@plt+0xe8>
   10aec:	bl	10960 <__libc_start_main@plt>
   10af0:	bl	10a08 <abort@plt>
   10af4:	andeq	r3, r1, ip, lsr r2
   10af8:	andeq	r0, r1, r0, lsr #20
   10afc:	ldrdeq	r3, [r1], -ip
   10b00:	ldr	r3, [pc, #20]	; 10b1c <getc@plt+0x108>
   10b04:	ldr	r2, [pc, #20]	; 10b20 <getc@plt+0x10c>
   10b08:	add	r3, pc, r3
   10b0c:	ldr	r2, [r3, r2]
   10b10:	cmp	r2, #0
   10b14:	bxeq	lr
   10b18:	b	10978 <__gmon_start__@plt>
   10b1c:	strdeq	r4, [r1], -r0
   10b20:	andeq	r0, r0, r0, lsr #1
   10b24:	ldr	r0, [pc, #24]	; 10b44 <getc@plt+0x130>
   10b28:	ldr	r3, [pc, #24]	; 10b48 <getc@plt+0x134>
   10b2c:	cmp	r3, r0
   10b30:	bxeq	lr
   10b34:	ldr	r3, [pc, #16]	; 10b4c <getc@plt+0x138>
   10b38:	cmp	r3, #0
   10b3c:	bxeq	lr
   10b40:	bx	r3
   10b44:	ldrdeq	r5, [r2], -r8
   10b48:	ldrdeq	r5, [r2], -r8
   10b4c:	andeq	r0, r0, r0
   10b50:	ldr	r0, [pc, #36]	; 10b7c <getc@plt+0x168>
   10b54:	ldr	r1, [pc, #36]	; 10b80 <getc@plt+0x16c>
   10b58:	sub	r1, r1, r0
   10b5c:	asr	r1, r1, #2
   10b60:	add	r1, r1, r1, lsr #31
   10b64:	asrs	r1, r1, #1
   10b68:	bxeq	lr
   10b6c:	ldr	r3, [pc, #16]	; 10b84 <getc@plt+0x170>
   10b70:	cmp	r3, #0
   10b74:	bxeq	lr
   10b78:	bx	r3
   10b7c:	ldrdeq	r5, [r2], -r8
   10b80:	ldrdeq	r5, [r2], -r8
   10b84:	andeq	r0, r0, r0
   10b88:	push	{r4, lr}
   10b8c:	ldr	r4, [pc, #24]	; 10bac <getc@plt+0x198>
   10b90:	ldrb	r3, [r4]
   10b94:	cmp	r3, #0
   10b98:	popne	{r4, pc}
   10b9c:	bl	10b24 <getc@plt+0x110>
   10ba0:	mov	r3, #1
   10ba4:	strb	r3, [r4]
   10ba8:	pop	{r4, pc}
   10bac:	ldrdeq	r5, [r2], -r8
   10bb0:	b	10b50 <getc@plt+0x13c>
   10bb4:	andeq	r0, r0, r0
   10bb8:	strd	r4, [sp, #-16]!
   10bbc:	mov	r5, r1
   10bc0:	mov	r3, r2
   10bc4:	ldr	r1, [pc, #148]	; 10c60 <getc@plt+0x24c>
   10bc8:	mov	r4, r2
   10bcc:	mov	r2, r5
   10bd0:	str	r6, [sp, #8]
   10bd4:	mov	r6, r0
   10bd8:	str	lr, [sp, #12]
   10bdc:	add	r1, pc, r1
   10be0:	bl	109b4 <fprintf@plt>
   10be4:	cmp	r5, #0
   10be8:	bne	10c14 <getc@plt+0x200>
   10bec:	ldr	r0, [pc, #112]	; 10c64 <getc@plt+0x250>
   10bf0:	mov	r3, r6
   10bf4:	mov	r2, #11
   10bf8:	mov	r1, #1
   10bfc:	ldrd	r4, [sp]
   10c00:	ldr	r6, [sp, #8]
   10c04:	add	r0, pc, r0
   10c08:	ldr	lr, [sp, #12]
   10c0c:	add	sp, sp, #16
   10c10:	b	1093c <fwrite@plt>
   10c14:	sub	r3, r5, r4
   10c18:	vmov	s15, r5
   10c1c:	mov	r0, r6
   10c20:	vldr	d5, [pc, #48]	; 10c58 <getc@plt+0x244>
   10c24:	vmov	s14, r3
   10c28:	ldr	r1, [pc, #56]	; 10c68 <getc@plt+0x254>
   10c2c:	ldrd	r4, [sp]
   10c30:	ldr	r6, [sp, #8]
   10c34:	add	r1, pc, r1
   10c38:	vcvt.f64.s32	d6, s15
   10c3c:	ldr	lr, [sp, #12]
   10c40:	add	sp, sp, #16
   10c44:	vcvt.f64.s32	d7, s14
   10c48:	vmul.f64	d7, d7, d5
   10c4c:	vdiv.f64	d7, d7, d6
   10c50:	vmov	r2, r3, d7
   10c54:	b	109b4 <fprintf@plt>
   10c58:	andeq	r0, r0, r0
   10c5c:	subsmi	r0, r9, r0
   10c60:	andeq	r2, r0, r8, ror #12
   10c64:	andeq	r2, r0, ip, asr #12
   10c68:	andeq	r2, r0, r8, lsr #12
   10c6c:	ldr	r1, [pc, #328]	; 10dbc <getc@plt+0x3a8>
   10c70:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10c74:	strd	r6, [sp, #8]
   10c78:	strd	r8, [sp, #16]
   10c7c:	strd	sl, [sp, #24]
   10c80:	add	r1, pc, r1
   10c84:	str	lr, [sp, #32]
   10c88:	sub	sp, sp, #20
   10c8c:	bl	12470 <error@@Base+0x124>
   10c90:	ldr	r1, [pc, #296]	; 10dc0 <getc@plt+0x3ac>
   10c94:	mov	r7, r0
   10c98:	add	r1, pc, r1
   10c9c:	bl	109b4 <fprintf@plt>
   10ca0:	ldr	r3, [pc, #284]	; 10dc4 <getc@plt+0x3b0>
   10ca4:	ldr	r2, [pc, #284]	; 10dc8 <getc@plt+0x3b4>
   10ca8:	add	r3, pc, r3
   10cac:	ldr	r2, [r3, r2]
   10cb0:	ldr	r4, [r2]
   10cb4:	cmp	r4, #0
   10cb8:	beq	10db0 <getc@plt+0x39c>
   10cbc:	ldr	r2, [pc, #264]	; 10dcc <getc@plt+0x3b8>
   10cc0:	mov	r8, #0
   10cc4:	movw	r6, #1272	; 0x4f8
   10cc8:	mov	r9, r8
   10ccc:	add	sl, sp, #4
   10cd0:	ldr	fp, [pc, #248]	; 10dd0 <getc@plt+0x3bc>
   10cd4:	ldr	r5, [r3, r2]
   10cd8:	add	fp, pc, fp
   10cdc:	b	10cec <getc@plt+0x2d8>
   10ce0:	ldr	r4, [r4, #4]
   10ce4:	cmp	r4, #0
   10ce8:	beq	10d64 <getc@plt+0x350>
   10cec:	ldr	r3, [r4, #12]
   10cf0:	add	r2, r3, r6
   10cf4:	cmp	r3, #32
   10cf8:	cmpne	r3, #10
   10cfc:	add	r2, r5, r2, lsl #3
   10d00:	movne	r3, #1
   10d04:	moveq	r3, #0
   10d08:	ldr	r1, [r2, #4]
   10d0c:	cmp	r1, #0
   10d10:	movle	r3, #0
   10d14:	andgt	r3, r3, #1
   10d18:	cmp	r3, #0
   10d1c:	beq	10ce0 <getc@plt+0x2cc>
   10d20:	ldr	r2, [r2, #8]
   10d24:	mov	r0, r7
   10d28:	add	r9, r9, r1
   10d2c:	add	r8, r8, r2
   10d30:	bl	10bb8 <getc@plt+0x1a4>
   10d34:	mov	r3, #1
   10d38:	mov	r2, sl
   10d3c:	ldr	r1, [r4, #12]
   10d40:	mov	r0, #0
   10d44:	bl	12c70 <error@@Base+0x924>
   10d48:	mov	r2, sl
   10d4c:	mov	r1, fp
   10d50:	mov	r0, r7
   10d54:	bl	109b4 <fprintf@plt>
   10d58:	ldr	r4, [r4, #4]
   10d5c:	cmp	r4, #0
   10d60:	bne	10cec <getc@plt+0x2d8>
   10d64:	mov	r2, r8
   10d68:	mov	r1, r9
   10d6c:	mov	r0, r7
   10d70:	bl	10bb8 <getc@plt+0x1a4>
   10d74:	ldr	r0, [pc, #88]	; 10dd4 <getc@plt+0x3c0>
   10d78:	mov	r3, r7
   10d7c:	mov	r2, #6
   10d80:	mov	r1, #1
   10d84:	add	r0, pc, r0
   10d88:	bl	1093c <fwrite@plt>
   10d8c:	mov	r0, r7
   10d90:	bl	121ac <getc@plt+0x1798>
   10d94:	add	sp, sp, #20
   10d98:	ldrd	r4, [sp]
   10d9c:	ldrd	r6, [sp, #8]
   10da0:	ldrd	r8, [sp, #16]
   10da4:	ldrd	sl, [sp, #24]
   10da8:	add	sp, sp, #32
   10dac:	pop	{pc}		; (ldr pc, [sp], #4)
   10db0:	mov	r8, r4
   10db4:	mov	r9, r4
   10db8:	b	10d64 <getc@plt+0x350>
   10dbc:	andeq	r2, r0, r8, ror #11
   10dc0:	ldrdeq	r2, [r0], -r4
   10dc4:	andeq	r4, r1, r0, asr r3
   10dc8:	andeq	r0, r0, r8, lsl #1
   10dcc:	muleq	r0, r0, r0
   10dd0:			; <UNDEFINED> instruction: 0x000025b4
   10dd4:	andeq	r2, r0, r0, lsl r5
   10dd8:	strd	r4, [sp, #-16]!
   10ddc:	mov	r5, r1
   10de0:	mov	r1, #99	; 0x63
   10de4:	ldr	r4, [pc, #112]	; 10e5c <getc@plt+0x448>
   10de8:	str	r6, [sp, #8]
   10dec:	mov	r6, r2
   10df0:	mov	r2, r0
   10df4:	str	lr, [sp, #12]
   10df8:	add	r4, pc, r4
   10dfc:	mov	r0, r4
   10e00:	bl	108e8 <fgets@plt>
   10e04:	cmp	r0, #0
   10e08:	beq	10e28 <getc@plt+0x414>
   10e0c:	ldr	r1, [pc, #76]	; 10e60 <getc@plt+0x44c>
   10e10:	mov	r0, r4
   10e14:	mov	r2, r5
   10e18:	add	r1, pc, r1
   10e1c:	bl	109c0 <__isoc99_sscanf@plt>
   10e20:	cmp	r0, #1
   10e24:	beq	10e3c <getc@plt+0x428>
   10e28:	ldrd	r4, [sp]
   10e2c:	mov	r0, #0
   10e30:	ldr	r6, [sp, #8]
   10e34:	add	sp, sp, #12
   10e38:	pop	{pc}		; (ldr pc, [sp], #4)
   10e3c:	ldr	r2, [r5]
   10e40:	ldr	r3, [r6]
   10e44:	ldrd	r4, [sp]
   10e48:	add	r3, r3, r2
   10e4c:	str	r3, [r6]
   10e50:	ldr	r6, [sp, #8]
   10e54:	add	sp, sp, #12
   10e58:	pop	{pc}		; (ldr pc, [sp], #4)
   10e5c:	ldrdeq	r4, [r1], -ip
   10e60:	ldrdeq	r2, [r0], -r4
   10e64:	strd	r4, [sp, #-16]!
   10e68:	mov	r2, r0
   10e6c:	mov	r4, r1
   10e70:	ldr	r5, [pc, #160]	; 10f18 <getc@plt+0x504>
   10e74:	mov	r1, #99	; 0x63
   10e78:	str	r6, [sp, #8]
   10e7c:	str	lr, [sp, #12]
   10e80:	sub	sp, sp, #24
   10e84:	add	r5, pc, r5
   10e88:	mov	r0, r5
   10e8c:	bl	108e8 <fgets@plt>
   10e90:	cmp	r0, #0
   10e94:	beq	10ec4 <getc@plt+0x4b0>
   10e98:	ldr	r1, [pc, #124]	; 10f1c <getc@plt+0x508>
   10e9c:	add	r2, sp, #16
   10ea0:	add	ip, sp, #20
   10ea4:	mov	r0, r5
   10ea8:	add	r3, sp, #12
   10eac:	stm	sp, {r2, ip}
   10eb0:	add	r2, sp, #8
   10eb4:	add	r1, pc, r1
   10eb8:	bl	109c0 <__isoc99_sscanf@plt>
   10ebc:	cmp	r0, #4
   10ec0:	beq	10edc <getc@plt+0x4c8>
   10ec4:	mov	r0, #0
   10ec8:	add	sp, sp, #24
   10ecc:	ldrd	r4, [sp]
   10ed0:	ldr	r6, [sp, #8]
   10ed4:	add	sp, sp, #12
   10ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   10edc:	ldr	ip, [r4]
   10ee0:	mov	r0, #1
   10ee4:	ldr	r3, [sp, #8]
   10ee8:	ldmib	r4, {r1, r2}
   10eec:	ldr	r6, [sp, #12]
   10ef0:	add	ip, ip, r3
   10ef4:	ldr	r3, [r4, #12]
   10ef8:	str	ip, [r4]
   10efc:	ldr	r5, [sp, #16]
   10f00:	add	r1, r1, r6
   10f04:	ldr	lr, [sp, #20]
   10f08:	add	r2, r2, r5
   10f0c:	add	r3, r3, lr
   10f10:	stmib	r4, {r1, r2, r3}
   10f14:	b	10ec8 <getc@plt+0x4b4>
   10f18:	andeq	r4, r1, r0, asr r2
   10f1c:	andeq	r2, r0, ip, lsr #8
   10f20:	strd	r4, [sp, #-16]!
   10f24:	mov	r5, r1
   10f28:	mov	r1, #99	; 0x63
   10f2c:	ldr	r4, [pc, #84]	; 10f88 <getc@plt+0x574>
   10f30:	str	r6, [sp, #8]
   10f34:	mov	r6, r2
   10f38:	mov	r2, r0
   10f3c:	str	lr, [sp, #12]
   10f40:	add	r4, pc, r4
   10f44:	mov	r0, r4
   10f48:	bl	108e8 <fgets@plt>
   10f4c:	cmp	r0, #0
   10f50:	beq	10f78 <getc@plt+0x564>
   10f54:	ldr	r1, [pc, #48]	; 10f8c <getc@plt+0x578>
   10f58:	mov	r3, r6
   10f5c:	mov	r2, r5
   10f60:	mov	r0, r4
   10f64:	add	r1, pc, r1
   10f68:	bl	109c0 <__isoc99_sscanf@plt>
   10f6c:	sub	r0, r0, #2
   10f70:	clz	r0, r0
   10f74:	lsr	r0, r0, #5
   10f78:	ldrd	r4, [sp]
   10f7c:	ldr	r6, [sp, #8]
   10f80:	add	sp, sp, #12
   10f84:	pop	{pc}		; (ldr pc, [sp], #4)
   10f88:	muleq	r1, r4, r1
   10f8c:	andeq	r2, r0, r4, lsl #7
   10f90:	sub	sp, sp, #8
   10f94:	cmp	r2, #0
   10f98:	str	r1, [sp, #4]
   10f9c:	bne	10fbc <getc@plt+0x5a8>
   10fa0:	mov	r3, r0
   10fa4:	ldr	r0, [pc, #76]	; 10ff8 <getc@plt+0x5e4>
   10fa8:	mov	r2, #8
   10fac:	mov	r1, #1
   10fb0:	add	r0, pc, r0
   10fb4:	add	sp, sp, #8
   10fb8:	b	1093c <fwrite@plt>
   10fbc:	vldr	s15, [sp, #4]
   10fc0:	vmov	s13, r2
   10fc4:	vldr	d5, [pc, #36]	; 10ff0 <getc@plt+0x5dc>
   10fc8:	ldr	r1, [pc, #44]	; 10ffc <getc@plt+0x5e8>
   10fcc:	vcvt.f64.s32	d7, s15
   10fd0:	add	r1, pc, r1
   10fd4:	vcvt.f64.s32	d6, s13
   10fd8:	vmul.f64	d7, d7, d5
   10fdc:	vdiv.f64	d7, d7, d6
   10fe0:	vmov	r2, r3, d7
   10fe4:	add	sp, sp, #8
   10fe8:	b	109b4 <fprintf@plt>
   10fec:	nop	{0}
   10ff0:	andeq	r0, r0, r0
   10ff4:	subsmi	r0, r9, r0
   10ff8:	andeq	r2, r0, r0, asr #6
   10ffc:	andeq	r2, r0, ip, lsr #6
   11000:	ldr	r2, [r0, #12]
   11004:	ldr	r3, [r1, #12]
   11008:	cmp	r2, r3
   1100c:	bne	11020 <getc@plt+0x60c>
   11010:	ldr	r2, [r0, #16]
   11014:	ldr	r3, [r1, #16]
   11018:	cmp	r2, r3
   1101c:	beq	11028 <getc@plt+0x614>
   11020:	sub	r0, r3, r2
   11024:	bx	lr
   11028:	ldr	r0, [r0, #8]
   1102c:	ldr	r1, [r1, #8]
   11030:	b	12154 <getc@plt+0x1740>
   11034:	strd	r4, [sp, #-20]!	; 0xffffffec
   11038:	mov	r4, r1
   1103c:	mov	r5, r0
   11040:	ldr	r1, [pc, #144]	; 110d8 <getc@plt+0x6c4>
   11044:	strd	r6, [sp, #8]
   11048:	mov	r6, r2
   1104c:	mov	r7, r3
   11050:	str	lr, [sp, #16]
   11054:	sub	sp, sp, #20
   11058:	ldrd	r2, [r4]
   1105c:	add	r1, pc, r1
   11060:	bl	109b4 <fprintf@plt>
   11064:	ldr	r2, [r4]
   11068:	mov	r0, r5
   1106c:	ldr	r1, [r4, #4]
   11070:	sub	r1, r2, r1
   11074:	bl	10f90 <getc@plt+0x57c>
   11078:	cmp	r6, #0
   1107c:	beq	110a8 <getc@plt+0x694>
   11080:	ldr	r1, [pc, #84]	; 110dc <getc@plt+0x6c8>
   11084:	mov	r2, r6
   11088:	mov	r0, r5
   1108c:	add	r1, pc, r1
   11090:	bl	109b4 <fprintf@plt>
   11094:	add	sp, sp, #20
   11098:	ldrd	r4, [sp]
   1109c:	ldrd	r6, [sp, #8]
   110a0:	add	sp, sp, #16
   110a4:	pop	{pc}		; (ldr pc, [sp], #4)
   110a8:	add	r4, sp, #4
   110ac:	mov	r1, r7
   110b0:	mov	r0, r6
   110b4:	mov	r2, r4
   110b8:	mov	r3, #1
   110bc:	bl	12c70 <error@@Base+0x924>
   110c0:	ldr	r1, [pc, #24]	; 110e0 <getc@plt+0x6cc>
   110c4:	mov	r2, r4
   110c8:	mov	r0, r5
   110cc:	add	r1, pc, r1
   110d0:	bl	109b4 <fprintf@plt>
   110d4:	b	11094 <getc@plt+0x680>
   110d8:	andeq	r2, r0, r8, ror #3
   110dc:	andeq	r2, r0, r8, lsl r3
   110e0:	andeq	r2, r0, r8, lsr r2
   110e4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   110e8:	mov	r5, r0
   110ec:	mov	r0, r1
   110f0:	mov	r4, r1
   110f4:	strd	r6, [sp, #8]
   110f8:	mov	r7, r2
   110fc:	mov	r6, r3
   11100:	str	r8, [sp, #16]
   11104:	str	lr, [sp, #20]
   11108:	bl	11fa0 <getc@plt+0x158c>
   1110c:	lsl	r0, r0, #3
   11110:	ldr	r8, [sp, #16]
   11114:	lsl	r1, r4, #3
   11118:	add	r0, r0, #68	; 0x44
   1111c:	ldr	r3, [r5, r0]
   11120:	add	r2, r5, r0
   11124:	add	r1, r1, #10176	; 0x27c0
   11128:	add	r1, r1, #4
   1112c:	add	ip, r5, r1
   11130:	add	r3, r3, r7
   11134:	str	r3, [r5, r0]
   11138:	ldr	r3, [r2, #4]
   1113c:	add	r3, r3, r6
   11140:	str	r3, [r2, #4]
   11144:	ldr	r2, [r5, #2116]	; 0x844
   11148:	ldr	r3, [r5, #2120]	; 0x848
   1114c:	add	r2, r2, r7
   11150:	add	r3, r3, r6
   11154:	str	r2, [r5, #2116]	; 0x844
   11158:	str	r3, [r5, #2120]	; 0x848
   1115c:	ldr	r3, [r5, r1]
   11160:	add	r3, r3, r7
   11164:	str	r3, [r5, r1]
   11168:	ldr	r2, [ip, #4]
   1116c:	ldrd	r4, [sp]
   11170:	add	r2, r2, r6
   11174:	ldrd	r6, [sp, #8]
   11178:	add	sp, sp, #20
   1117c:	str	r2, [ip, #4]
   11180:	pop	{pc}		; (ldr pc, [sp], #4)
   11184:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11188:	add	r4, r0, #2112	; 0x840
   1118c:	mov	r5, r3
   11190:	add	r4, r4, #12
   11194:	strd	r6, [sp, #8]
   11198:	mov	r6, r2
   1119c:	mov	r0, r4
   111a0:	mov	r7, r1
   111a4:	str	r8, [sp, #16]
   111a8:	str	lr, [sp, #20]
   111ac:	bl	11bdc <getc@plt+0x11c8>
   111b0:	cmp	r0, #0
   111b4:	beq	111e4 <getc@plt+0x7d0>
   111b8:	ldr	ip, [r0, #12]
   111bc:	ldr	r1, [r0, #16]
   111c0:	ldr	r8, [sp, #16]
   111c4:	add	ip, ip, r6
   111c8:	ldrd	r6, [sp, #8]
   111cc:	add	r1, r1, r5
   111d0:	ldrd	r4, [sp]
   111d4:	add	sp, sp, #20
   111d8:	str	ip, [r0, #12]
   111dc:	str	r1, [r0, #16]
   111e0:	pop	{pc}		; (ldr pc, [sp], #4)
   111e4:	mov	r1, #20
   111e8:	mov	r0, #1
   111ec:	bl	123a8 <error@@Base+0x5c>
   111f0:	mov	r8, r0
   111f4:	mov	r0, r7
   111f8:	bl	10900 <strdup@plt>
   111fc:	mov	r1, r8
   11200:	ldr	lr, [sp, #20]
   11204:	str	r0, [r8, #8]
   11208:	mov	r0, r4
   1120c:	str	r6, [r8, #12]
   11210:	str	r5, [r8, #16]
   11214:	ldrd	r4, [sp]
   11218:	ldrd	r6, [sp, #8]
   1121c:	ldr	r8, [sp, #16]
   11220:	add	sp, sp, #24
   11224:	b	11c68 <getc@plt+0x1254>
   11228:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1122c:	strd	r6, [sp, #8]
   11230:	mov	r6, r0
   11234:	mov	r0, r1
   11238:	strd	r8, [sp, #16]
   1123c:	mov	r8, r1
   11240:	ldr	r1, [pc, #884]	; 115bc <getc@plt+0xba8>
   11244:	str	sl, [sp, #24]
   11248:	ldr	r5, [pc, #880]	; 115c0 <getc@plt+0xbac>
   1124c:	str	lr, [sp, #28]
   11250:	sub	sp, sp, #24
   11254:	add	r1, pc, r1
   11258:	bl	12470 <error@@Base+0x124>
   1125c:	add	r5, pc, r5
   11260:	mov	r2, r0
   11264:	mov	r4, r0
   11268:	mov	r1, #99	; 0x63
   1126c:	mov	r0, r5
   11270:	bl	108e8 <fgets@plt>
   11274:	cmp	r0, #0
   11278:	beq	11598 <getc@plt+0xb84>
   1127c:	ldr	r1, [pc, #832]	; 115c4 <getc@plt+0xbb0>
   11280:	mov	r2, #40	; 0x28
   11284:	mov	r0, r5
   11288:	add	r1, pc, r1
   1128c:	bl	109fc <strncmp@plt>
   11290:	cmp	r0, #0
   11294:	bne	11598 <getc@plt+0xb84>
   11298:	mov	r2, r4
   1129c:	mov	r1, #99	; 0x63
   112a0:	mov	r0, r5
   112a4:	bl	108e8 <fgets@plt>
   112a8:	cmp	r0, #0
   112ac:	beq	11598 <getc@plt+0xb84>
   112b0:	ldr	r1, [pc, #784]	; 115c8 <getc@plt+0xbb4>
   112b4:	mov	r0, r5
   112b8:	add	r1, pc, r1
   112bc:	bl	108b8 <strcmp@plt>
   112c0:	cmp	r0, #0
   112c4:	bne	11598 <getc@plt+0xb84>
   112c8:	mov	r2, r6
   112cc:	add	r1, sp, #4
   112d0:	mov	r0, r4
   112d4:	bl	10dd8 <getc@plt+0x3c4>
   112d8:	cmp	r0, #0
   112dc:	beq	11598 <getc@plt+0xb84>
   112e0:	add	r2, r6, #4
   112e4:	add	r1, sp, #8
   112e8:	mov	r0, r4
   112ec:	bl	10dd8 <getc@plt+0x3c4>
   112f0:	cmp	r0, #0
   112f4:	beq	11598 <getc@plt+0xb84>
   112f8:	mov	r2, r4
   112fc:	mov	r1, #99	; 0x63
   11300:	mov	r0, r5
   11304:	bl	108e8 <fgets@plt>
   11308:	cmp	r0, #0
   1130c:	beq	11598 <getc@plt+0xb84>
   11310:	mov	r0, r5
   11314:	mov	r2, r4
   11318:	mov	r1, #99	; 0x63
   1131c:	bl	108e8 <fgets@plt>
   11320:	cmp	r0, #0
   11324:	beq	11598 <getc@plt+0xb84>
   11328:	add	r7, sp, #12
   1132c:	add	r2, r6, #8
   11330:	mov	r1, r7
   11334:	mov	r0, r4
   11338:	bl	10dd8 <getc@plt+0x3c4>
   1133c:	cmp	r0, #0
   11340:	beq	11598 <getc@plt+0xb84>
   11344:	add	r2, r6, #12
   11348:	mov	r1, r7
   1134c:	mov	r0, r4
   11350:	bl	10dd8 <getc@plt+0x3c4>
   11354:	cmp	r0, #0
   11358:	beq	11598 <getc@plt+0xb84>
   1135c:	add	r2, r6, #16
   11360:	mov	r1, r7
   11364:	mov	r0, r4
   11368:	bl	10dd8 <getc@plt+0x3c4>
   1136c:	cmp	r0, #0
   11370:	beq	11598 <getc@plt+0xb84>
   11374:	ldr	r5, [pc, #592]	; 115cc <getc@plt+0xbb8>
   11378:	mov	r2, r4
   1137c:	mov	r1, #99	; 0x63
   11380:	add	r5, pc, r5
   11384:	mov	r0, r5
   11388:	bl	108e8 <fgets@plt>
   1138c:	cmp	r0, #0
   11390:	beq	11598 <getc@plt+0xb84>
   11394:	mov	r2, r4
   11398:	mov	r1, #99	; 0x63
   1139c:	mov	r0, r5
   113a0:	bl	108e8 <fgets@plt>
   113a4:	cmp	r0, #0
   113a8:	beq	11598 <getc@plt+0xb84>
   113ac:	mov	r2, r4
   113b0:	mov	r1, #99	; 0x63
   113b4:	mov	r0, r5
   113b8:	bl	108e8 <fgets@plt>
   113bc:	cmp	r0, #0
   113c0:	beq	11598 <getc@plt+0xb84>
   113c4:	mov	r2, r4
   113c8:	mov	r1, #99	; 0x63
   113cc:	mov	r0, r5
   113d0:	bl	108e8 <fgets@plt>
   113d4:	cmp	r0, #0
   113d8:	beq	11598 <getc@plt+0xb84>
   113dc:	add	r1, r6, #20
   113e0:	mov	r0, r4
   113e4:	bl	10e64 <getc@plt+0x450>
   113e8:	cmp	r0, #0
   113ec:	beq	11598 <getc@plt+0xb84>
   113f0:	add	r1, r6, #36	; 0x24
   113f4:	mov	r0, r4
   113f8:	bl	10e64 <getc@plt+0x450>
   113fc:	cmp	r0, #0
   11400:	beq	11598 <getc@plt+0xb84>
   11404:	add	r1, r6, #52	; 0x34
   11408:	mov	r0, r4
   1140c:	bl	10e64 <getc@plt+0x450>
   11410:	cmp	r0, #0
   11414:	beq	11598 <getc@plt+0xb84>
   11418:	mov	r2, r4
   1141c:	mov	r1, #99	; 0x63
   11420:	mov	r0, r5
   11424:	bl	108e8 <fgets@plt>
   11428:	cmp	r0, #0
   1142c:	bne	11440 <getc@plt+0xa2c>
   11430:	b	11598 <getc@plt+0xb84>
   11434:	ldrb	r3, [r5]
   11438:	cmp	r3, #10
   1143c:	beq	11458 <getc@plt+0xa44>
   11440:	mov	r2, r4
   11444:	mov	r1, #99	; 0x63
   11448:	mov	r0, r5
   1144c:	bl	108e8 <fgets@plt>
   11450:	cmp	r0, #0
   11454:	bne	11434 <getc@plt+0xa20>
   11458:	ldr	r3, [sp, #8]
   1145c:	cmp	r3, #0
   11460:	bgt	11494 <getc@plt+0xa80>
   11464:	ldr	r3, [sp, #4]
   11468:	cmp	r3, #0
   1146c:	bgt	114f8 <getc@plt+0xae4>
   11470:	mov	r0, r4
   11474:	bl	121ac <getc@plt+0x1798>
   11478:	add	sp, sp, #24
   1147c:	ldrd	r4, [sp]
   11480:	ldrd	r6, [sp, #8]
   11484:	ldrd	r8, [sp, #16]
   11488:	ldr	sl, [sp, #24]
   1148c:	add	sp, sp, #28
   11490:	pop	{pc}		; (ldr pc, [sp], #4)
   11494:	ldr	r0, [pc, #308]	; 115d0 <getc@plt+0xbbc>
   11498:	mov	r2, r4
   1149c:	mov	r1, #99	; 0x63
   114a0:	add	r0, pc, r0
   114a4:	bl	108e8 <fgets@plt>
   114a8:	cmp	r0, #0
   114ac:	beq	11464 <getc@plt+0xa50>
   114b0:	ldr	r8, [pc, #284]	; 115d4 <getc@plt+0xbc0>
   114b4:	add	r5, sp, #16
   114b8:	add	r8, pc, r8
   114bc:	add	r8, r8, #20
   114c0:	b	114d4 <getc@plt+0xac0>
   114c4:	mov	r1, r8
   114c8:	mov	r0, r6
   114cc:	ldrd	r2, [sp, #12]
   114d0:	bl	11184 <getc@plt+0x770>
   114d4:	mov	r2, r5
   114d8:	mov	r1, r7
   114dc:	mov	r0, r4
   114e0:	bl	10f20 <getc@plt+0x50c>
   114e4:	cmp	r0, #0
   114e8:	bne	114c4 <getc@plt+0xab0>
   114ec:	ldr	r3, [sp, #4]
   114f0:	cmp	r3, #0
   114f4:	ble	11470 <getc@plt+0xa5c>
   114f8:	ldr	r0, [pc, #216]	; 115d8 <getc@plt+0xbc4>
   114fc:	mov	r2, r4
   11500:	mov	r1, #99	; 0x63
   11504:	add	r0, pc, r0
   11508:	bl	108e8 <fgets@plt>
   1150c:	cmp	r0, #0
   11510:	beq	11470 <getc@plt+0xa5c>
   11514:	ldr	r8, [pc, #192]	; 115dc <getc@plt+0xbc8>
   11518:	add	r5, sp, #16
   1151c:	ldr	sl, [pc, #188]	; 115e0 <getc@plt+0xbcc>
   11520:	add	r8, pc, r8
   11524:	add	r9, r8, #31
   11528:	add	sl, pc, sl
   1152c:	b	11550 <getc@plt+0xb3c>
   11530:	cmp	r3, #92	; 0x5c
   11534:	bne	11580 <getc@plt+0xb6c>
   11538:	mov	r3, #10
   1153c:	mov	r1, r3
   11540:	str	r3, [sp, #20]
   11544:	mov	r0, r6
   11548:	ldrd	r2, [sp, #12]
   1154c:	bl	110e4 <getc@plt+0x6d0>
   11550:	mov	r2, r5
   11554:	mov	r1, r7
   11558:	mov	r0, r4
   1155c:	bl	10f20 <getc@plt+0x50c>
   11560:	cmp	r0, #0
   11564:	beq	11470 <getc@plt+0xa5c>
   11568:	ldrb	r3, [r8, #31]
   1156c:	cmp	r3, #125	; 0x7d
   11570:	bne	11530 <getc@plt+0xb1c>
   11574:	ldrb	r1, [r8, #30]
   11578:	str	r1, [sp, #20]
   1157c:	b	11544 <getc@plt+0xb30>
   11580:	mov	r1, sl
   11584:	add	r2, sp, #20
   11588:	mov	r0, r9
   1158c:	bl	109c0 <__isoc99_sscanf@plt>
   11590:	ldr	r1, [sp, #20]
   11594:	b	11544 <getc@plt+0xb30>
   11598:	cmp	r8, #0
   1159c:	beq	115b0 <getc@plt+0xb9c>
   115a0:	ldr	r0, [pc, #60]	; 115e4 <getc@plt+0xbd0>
   115a4:	mov	r1, r8
   115a8:	add	r0, pc, r0
   115ac:	bl	12410 <error@@Base+0xc4>
   115b0:	ldr	r8, [pc, #48]	; 115e8 <getc@plt+0xbd4>
   115b4:	add	r8, pc, r8
   115b8:	b	115a0 <getc@plt+0xb8c>
   115bc:	andeq	r2, r0, r4, asr #1
   115c0:	andeq	r3, r1, r8, ror lr
   115c4:	muleq	r0, r4, r0
   115c8:	muleq	r0, r0, r0
   115cc:	andeq	r3, r1, r4, asr sp
   115d0:	andeq	r3, r1, r4, lsr ip
   115d4:	andeq	r3, r1, ip, lsl ip
   115d8:	ldrdeq	r3, [r1], -r0
   115dc:			; <UNDEFINED> instruction: 0x00013bb4
   115e0:	andeq	r1, r0, ip, asr #28
   115e4:	ldrdeq	r1, [r0], -r0
   115e8:	andeq	r1, r0, ip, asr sp
   115ec:	strd	r4, [sp, #-28]!	; 0xffffffe4
   115f0:	mov	r4, #0
   115f4:	strd	r6, [sp, #8]
   115f8:	mov	r6, r0
   115fc:	mov	r0, r1
   11600:	ldr	r1, [pc, #848]	; 11958 <getc@plt+0xf44>
   11604:	add	r5, r6, #68	; 0x44
   11608:	strd	r8, [sp, #16]
   1160c:	str	lr, [sp, #24]
   11610:	sub	sp, sp, #20
   11614:	ldr	r8, [pc, #832]	; 1195c <getc@plt+0xf48>
   11618:	add	r1, pc, r1
   1161c:	ldr	r9, [pc, #828]	; 11960 <getc@plt+0xf4c>
   11620:	bl	12470 <error@@Base+0x124>
   11624:	ldr	r3, [pc, #824]	; 11964 <getc@plt+0xf50>
   11628:	mov	r7, r0
   1162c:	add	r8, pc, r8
   11630:	ldr	r2, [pc, #816]	; 11968 <getc@plt+0xf54>
   11634:	add	r9, pc, r9
   11638:	ldr	r1, [pc, #812]	; 1196c <getc@plt+0xf58>
   1163c:	add	r3, pc, r3
   11640:	add	r2, pc, r2
   11644:	add	r1, pc, r1
   11648:	bl	109b4 <fprintf@plt>
   1164c:	ldr	r3, [pc, #796]	; 11970 <getc@plt+0xf5c>
   11650:	mov	r1, r8
   11654:	mov	r0, r7
   11658:	ldr	r2, [r6]
   1165c:	add	r3, pc, r3
   11660:	bl	109b4 <fprintf@plt>
   11664:	ldr	r3, [pc, #776]	; 11974 <getc@plt+0xf60>
   11668:	mov	r1, r8
   1166c:	mov	r0, r7
   11670:	ldr	r2, [r6, #4]
   11674:	add	r3, pc, r3
   11678:	bl	109b4 <fprintf@plt>
   1167c:	ldr	r2, [r6]
   11680:	mov	r0, r7
   11684:	ldr	r1, [r6, #4]
   11688:	sub	r1, r2, r1
   1168c:	bl	10f90 <getc@plt+0x57c>
   11690:	ldr	r1, [pc, #736]	; 11978 <getc@plt+0xf64>
   11694:	mov	r0, r7
   11698:	add	r1, pc, r1
   1169c:	bl	109b4 <fprintf@plt>
   116a0:	ldr	r3, [pc, #724]	; 1197c <getc@plt+0xf68>
   116a4:	mov	r1, r8
   116a8:	mov	r0, r7
   116ac:	ldr	r2, [r6, #8]
   116b0:	add	r3, pc, r3
   116b4:	bl	109b4 <fprintf@plt>
   116b8:	ldr	r3, [pc, #704]	; 11980 <getc@plt+0xf6c>
   116bc:	mov	r1, r8
   116c0:	mov	r0, r7
   116c4:	ldr	r2, [r6, #12]
   116c8:	add	r3, pc, r3
   116cc:	bl	109b4 <fprintf@plt>
   116d0:	ldr	r3, [pc, #684]	; 11984 <getc@plt+0xf70>
   116d4:	mov	r1, r8
   116d8:	mov	r0, r7
   116dc:	ldr	r2, [r6, #16]
   116e0:	add	r3, pc, r3
   116e4:	bl	109b4 <fprintf@plt>
   116e8:	mov	r0, r7
   116ec:	ldr	r2, [r6]
   116f0:	ldr	r1, [r6, #8]
   116f4:	ldr	r3, [r6, #12]
   116f8:	add	r1, r1, r3
   116fc:	bl	10f90 <getc@plt+0x57c>
   11700:	ldr	r1, [pc, #640]	; 11988 <getc@plt+0xf74>
   11704:	mov	r0, r7
   11708:	add	r1, pc, r1
   1170c:	bl	109b4 <fprintf@plt>
   11710:	ldr	r2, [r6]
   11714:	mov	r0, r7
   11718:	ldr	r1, [r6, #48]	; 0x30
   1171c:	sub	r1, r2, r1
   11720:	bl	10f90 <getc@plt+0x57c>
   11724:	ldr	r1, [pc, #608]	; 1198c <getc@plt+0xf78>
   11728:	mov	r0, r7
   1172c:	add	r1, pc, r1
   11730:	bl	109b4 <fprintf@plt>
   11734:	ldr	r0, [pc, #596]	; 11990 <getc@plt+0xf7c>
   11738:	mov	r3, r7
   1173c:	mov	r2, #37	; 0x25
   11740:	mov	r1, #1
   11744:	add	r0, pc, r0
   11748:	bl	1093c <fwrite@plt>
   1174c:	ldr	r3, [pc, #576]	; 11994 <getc@plt+0xf80>
   11750:	mov	r1, r9
   11754:	mov	r0, r7
   11758:	ldr	lr, [r6, #28]
   1175c:	ldr	ip, [r6, #32]
   11760:	add	r3, pc, r3
   11764:	str	r3, [sp, #8]
   11768:	ldr	r2, [r6, #20]
   1176c:	str	lr, [sp]
   11770:	ldr	r3, [r6, #24]
   11774:	str	ip, [sp, #4]
   11778:	bl	109b4 <fprintf@plt>
   1177c:	ldr	r3, [pc, #532]	; 11998 <getc@plt+0xf84>
   11780:	mov	r1, r9
   11784:	mov	r0, r7
   11788:	ldr	r2, [r6, #44]	; 0x2c
   1178c:	ldr	ip, [r6, #48]	; 0x30
   11790:	add	r3, pc, r3
   11794:	str	r2, [sp]
   11798:	str	r3, [sp, #8]
   1179c:	ldr	r2, [r6, #36]	; 0x24
   117a0:	str	ip, [sp, #4]
   117a4:	ldr	r3, [r6, #40]	; 0x28
   117a8:	bl	109b4 <fprintf@plt>
   117ac:	ldr	r3, [pc, #488]	; 1199c <getc@plt+0xf88>
   117b0:	mov	r1, r9
   117b4:	mov	r0, r7
   117b8:	ldr	lr, [r6, #60]	; 0x3c
   117bc:	ldr	ip, [r6, #64]	; 0x40
   117c0:	add	r3, pc, r3
   117c4:	str	r3, [sp, #8]
   117c8:	ldr	r2, [r6, #52]	; 0x34
   117cc:	str	lr, [sp]
   117d0:	ldr	r3, [r6, #56]	; 0x38
   117d4:	str	ip, [sp, #4]
   117d8:	bl	109b4 <fprintf@plt>
   117dc:	ldr	r1, [pc, #444]	; 119a0 <getc@plt+0xf8c>
   117e0:	mov	r0, r7
   117e4:	add	r1, pc, r1
   117e8:	bl	109b4 <fprintf@plt>
   117ec:	ldr	r3, [r5, r4, lsl #3]
   117f0:	mov	r0, r4
   117f4:	cmp	r3, #0
   117f8:	ble	11814 <getc@plt+0xe00>
   117fc:	bl	11fe8 <getc@plt+0x15d4>
   11800:	mov	r2, r0
   11804:	mov	r3, #0
   11808:	add	r1, r5, r4, lsl #3
   1180c:	mov	r0, r7
   11810:	bl	11034 <getc@plt+0x620>
   11814:	add	r4, r4, #1
   11818:	cmp	r4, #256	; 0x100
   1181c:	bne	117ec <getc@plt+0xdd8>
   11820:	ldr	r2, [pc, #380]	; 119a4 <getc@plt+0xf90>
   11824:	add	r1, r6, #2112	; 0x840
   11828:	mov	r3, #0
   1182c:	add	r1, r1, #4
   11830:	mov	r0, r7
   11834:	add	r2, pc, r2
   11838:	bl	11034 <getc@plt+0x620>
   1183c:	ldr	r3, [r6, #4]
   11840:	cmp	r3, #0
   11844:	bgt	11874 <getc@plt+0xe60>
   11848:	ldr	r3, [r6]
   1184c:	cmp	r3, #0
   11850:	bgt	11904 <getc@plt+0xef0>
   11854:	mov	r0, r7
   11858:	add	sp, sp, #20
   1185c:	ldrd	r4, [sp]
   11860:	ldrd	r6, [sp, #8]
   11864:	ldrd	r8, [sp, #16]
   11868:	ldr	lr, [sp, #24]
   1186c:	add	sp, sp, #28
   11870:	b	121ac <getc@plt+0x1798>
   11874:	add	r0, r6, #2112	; 0x840
   11878:	add	r5, r6, #8192	; 0x2000
   1187c:	add	r0, r0, #12
   11880:	bl	11d70 <getc@plt+0x135c>
   11884:	ldr	r2, [pc, #284]	; 119a8 <getc@plt+0xf94>
   11888:	ldr	r1, [r5, #1980]	; 0x7bc
   1188c:	ldr	r0, [r5, #1984]	; 0x7c0
   11890:	add	r2, pc, r2
   11894:	bl	11b5c <getc@plt+0x1148>
   11898:	ldr	r0, [pc, #268]	; 119ac <getc@plt+0xf98>
   1189c:	mov	r3, r7
   118a0:	mov	r2, #39	; 0x27
   118a4:	mov	r1, #1
   118a8:	add	r0, pc, r0
   118ac:	bl	1093c <fwrite@plt>
   118b0:	ldr	r3, [r5, #1984]	; 0x7c0
   118b4:	cmp	r3, #0
   118b8:	ble	11848 <getc@plt+0xe34>
   118bc:	ldr	r8, [pc, #236]	; 119b0 <getc@plt+0xf9c>
   118c0:	mov	r4, #0
   118c4:	add	r8, pc, r8
   118c8:	ldr	r3, [r5, #1980]	; 0x7bc
   118cc:	mov	r1, r8
   118d0:	mov	r0, r7
   118d4:	ldr	r3, [r3, r4, lsl #2]
   118d8:	add	r4, r4, #1
   118dc:	ldr	ip, [r3, #8]
   118e0:	ldrd	r2, [r3, #12]
   118e4:	str	ip, [sp]
   118e8:	bl	109b4 <fprintf@plt>
   118ec:	ldr	r3, [r5, #1984]	; 0x7c0
   118f0:	cmp	r3, r4
   118f4:	bgt	118c8 <getc@plt+0xeb4>
   118f8:	ldr	r3, [r6]
   118fc:	cmp	r3, #0
   11900:	ble	11854 <getc@plt+0xe40>
   11904:	ldr	r1, [pc, #168]	; 119b4 <getc@plt+0xfa0>
   11908:	add	r5, r6, #10176	; 0x27c0
   1190c:	mov	r0, r7
   11910:	movw	r6, #65535	; 0xffff
   11914:	movt	r6, #16
   11918:	add	r5, r5, #4
   1191c:	mov	r4, #0
   11920:	add	r1, pc, r1
   11924:	bl	109b4 <fprintf@plt>
   11928:	ldr	ip, [r5, r4, lsl #3]
   1192c:	mov	r2, #0
   11930:	mov	r3, r4
   11934:	add	r1, r5, r4, lsl #3
   11938:	mov	r0, r7
   1193c:	add	r4, r4, #1
   11940:	cmp	ip, r2
   11944:	ble	1194c <getc@plt+0xf38>
   11948:	bl	11034 <getc@plt+0x620>
   1194c:	cmp	r4, r6
   11950:	bne	11928 <getc@plt+0xf14>
   11954:	b	11854 <getc@plt+0xe40>
   11958:	andeq	r1, r0, r0, asr ip
   1195c:	andeq	r1, r0, r4, ror sp
   11960:	andeq	r1, r0, r0, lsr #28
   11964:	andeq	r1, r0, ip, lsl #26
   11968:	ldrdeq	r1, [r0], -ip
   1196c:	andeq	r1, r0, r8, asr #26
   11970:	andeq	r1, r0, r8, lsr sp
   11974:	andeq	r1, r0, r8, lsr sp
   11978:	andeq	r1, r0, ip, lsl sp
   1197c:	andeq	r1, r0, r4, lsl sp
   11980:	andeq	r1, r0, r0, lsl sp
   11984:	andeq	r1, r0, r8, lsl #26
   11988:	andeq	r1, r0, ip, ror #25
   1198c:	andeq	r1, r0, r0, ror #25
   11990:	andeq	r1, r0, r8, ror #25
   11994:	andeq	r1, r0, r0, lsl sp
   11998:	andeq	r1, r0, r8, ror #25
   1199c:	andeq	r1, r0, r4, asr #25
   119a0:	andeq	r1, r0, r8, lsr #25
   119a4:	andeq	r1, r0, r0, asr ip
   119a8:			; <UNDEFINED> instruction: 0xfffff768
   119ac:	andeq	r1, r0, r4, lsl #24
   119b0:	andeq	r1, r0, r0, lsl ip
   119b4:	andeq	r1, r0, ip, ror #22
   119b8:	ldr	r3, [pc, #400]	; 11b50 <getc@plt+0x113c>
   119bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   119c0:	strd	r6, [sp, #8]
   119c4:	ldr	r6, [pc, #392]	; 11b54 <getc@plt+0x1140>
   119c8:	strd	r8, [sp, #16]
   119cc:	add	r3, pc, r3
   119d0:	strd	sl, [sp, #24]
   119d4:	str	lr, [sp, #32]
   119d8:	sub	sp, sp, #20
   119dc:	add	r6, pc, r6
   119e0:	str	r0, [sp]
   119e4:	str	r3, [sp, #8]
   119e8:	lsl	r3, r1, #2
   119ec:	str	r1, [sp, #4]
   119f0:	str	r3, [sp, #12]
   119f4:	ldr	r3, [sp]
   119f8:	ldr	r2, [sp, #4]
   119fc:	cmp	r3, r2
   11a00:	ldr	r2, [sp, #8]
   11a04:	ldr	r1, [r2]
   11a08:	ldr	r4, [r1, r3, lsl #2]
   11a0c:	bge	11b40 <getc@plt+0x112c>
   11a10:	ldr	r5, [pc, #320]	; 11b58 <getc@plt+0x1144>
   11a14:	ldm	sp, {r8, fp}
   11a18:	add	r5, pc, r5
   11a1c:	mov	r0, r4
   11a20:	ldr	r1, [r1, fp, lsl #2]
   11a24:	lsl	r9, fp, #2
   11a28:	ldr	r3, [r5, #4]
   11a2c:	blx	r3
   11a30:	cmp	r0, #0
   11a34:	bge	11ac8 <getc@plt+0x10b4>
   11a38:	sub	fp, fp, #1
   11a3c:	ldr	r1, [r5]
   11a40:	cmp	r8, fp
   11a44:	lslge	r9, fp, #2
   11a48:	blt	11a1c <getc@plt+0x1008>
   11a4c:	cmp	fp, r8
   11a50:	add	r7, r1, r9
   11a54:	beq	11ad8 <getc@plt+0x10c4>
   11a58:	ldr	r3, [r1, r9]
   11a5c:	add	sl, r8, #1
   11a60:	lsl	r7, r8, #2
   11a64:	cmp	fp, sl
   11a68:	str	r3, [r1, r8, lsl #2]
   11a6c:	bgt	11a84 <getc@plt+0x1070>
   11a70:	b	11b20 <getc@plt+0x110c>
   11a74:	add	sl, sl, #1
   11a78:	ldr	r1, [r6]
   11a7c:	cmp	fp, sl
   11a80:	beq	11ad0 <getc@plt+0x10bc>
   11a84:	mov	r0, r4
   11a88:	ldr	r1, [r1, sl, lsl #2]
   11a8c:	lsl	r7, sl, #2
   11a90:	ldr	r3, [r6, #4]
   11a94:	blx	r3
   11a98:	cmp	r0, #0
   11a9c:	bgt	11a74 <getc@plt+0x1060>
   11aa0:	ldr	r1, [r6]
   11aa4:	mov	r8, sl
   11aa8:	add	r7, r1, r7
   11aac:	ldr	r3, [r7]
   11ab0:	sub	fp, fp, #1
   11ab4:	cmp	fp, sl
   11ab8:	str	r3, [r1, r9]
   11abc:	bgt	11a1c <getc@plt+0x1008>
   11ac0:	add	r7, r1, fp, lsl #2
   11ac4:	b	11adc <getc@plt+0x10c8>
   11ac8:	ldr	r1, [r5]
   11acc:	b	11a4c <getc@plt+0x1038>
   11ad0:	add	r7, r1, r9
   11ad4:	mov	r8, fp
   11ad8:	mov	fp, r8
   11adc:	ldr	r3, [sp]
   11ae0:	sub	r1, fp, #1
   11ae4:	str	r4, [r7]
   11ae8:	cmp	r3, r1
   11aec:	blt	11b34 <getc@plt+0x1120>
   11af0:	ldr	r2, [sp, #4]
   11af4:	add	r3, r8, #1
   11af8:	str	r3, [sp]
   11afc:	cmp	r3, r2
   11b00:	blt	119f4 <getc@plt+0xfe0>
   11b04:	add	sp, sp, #20
   11b08:	ldrd	r4, [sp]
   11b0c:	ldrd	r6, [sp, #8]
   11b10:	ldrd	r8, [sp, #16]
   11b14:	ldrd	sl, [sp, #24]
   11b18:	add	sp, sp, #32
   11b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b20:	add	r7, r7, #4
   11b24:	add	r7, r1, r7
   11b28:	beq	11ad4 <getc@plt+0x10c0>
   11b2c:	mov	r8, sl
   11b30:	b	11aac <getc@plt+0x1098>
   11b34:	mov	r0, r3
   11b38:	bl	119b8 <getc@plt+0xfa4>
   11b3c:	b	11af0 <getc@plt+0x10dc>
   11b40:	ldm	sp, {r8, fp}
   11b44:	ldr	r3, [sp, #12]
   11b48:	add	r7, r1, r3
   11b4c:	b	11adc <getc@plt+0x10c8>
   11b50:	andeq	r3, r1, ip, ror #14
   11b54:	andeq	r3, r1, ip, asr r7
   11b58:	andeq	r3, r1, r0, lsr #14
   11b5c:	cmp	r0, #1
   11b60:	mov	ip, r1
   11b64:	ble	11b84 <getc@plt+0x1170>
   11b68:	ldr	r3, [pc, #24]	; 11b88 <getc@plt+0x1174>
   11b6c:	sub	r1, r0, #1
   11b70:	mov	r0, #0
   11b74:	add	r3, pc, r3
   11b78:	str	ip, [r3]
   11b7c:	str	r2, [r3, #4]
   11b80:	b	119b8 <getc@plt+0xfa4>
   11b84:	bx	lr
   11b88:	andeq	r3, r1, r4, asr #11
   11b8c:	strd	r4, [sp, #-16]!
   11b90:	add	r5, r0, #8000	; 0x1f40
   11b94:	mov	r4, r0
   11b98:	add	r5, r5, #48	; 0x30
   11b9c:	str	r6, [sp, #8]
   11ba0:	mov	r6, r0
   11ba4:	str	lr, [sp, #12]
   11ba8:	mov	r0, r4
   11bac:	add	r4, r4, #16
   11bb0:	bl	12f48 <error@@Base+0xbfc>
   11bb4:	cmp	r4, r5
   11bb8:	bne	11ba8 <getc@plt+0x1194>
   11bbc:	add	r6, r6, #4096	; 0x1000
   11bc0:	mov	r3, #0
   11bc4:	ldrd	r4, [sp]
   11bc8:	str	r3, [r6, #3952]	; 0xf70
   11bcc:	str	r3, [r6, #3956]	; 0xf74
   11bd0:	ldr	r6, [sp, #8]
   11bd4:	add	sp, sp, #12
   11bd8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bdc:	strd	r4, [sp, #-16]!
   11be0:	mov	r5, r1
   11be4:	str	r6, [sp, #8]
   11be8:	str	lr, [sp, #12]
   11bec:	ldrb	r3, [r1]
   11bf0:	cmp	r3, #0
   11bf4:	beq	11c24 <getc@plt+0x1210>
   11bf8:	mov	r2, #0
   11bfc:	add	r2, r2, r3
   11c00:	ldrb	r3, [r1, #1]!
   11c04:	cmp	r3, #0
   11c08:	bne	11bfc <getc@plt+0x11e8>
   11c0c:	movw	r3, #20065	; 0x4e61
   11c10:	movt	r3, #33354	; 0x824a
   11c14:	movw	r1, #503	; 0x1f7
   11c18:	umull	ip, r3, r3, r2
   11c1c:	lsr	r3, r3, #8
   11c20:	mls	r3, r1, r3, r2
   11c24:	ldr	r4, [r0, r3, lsl #4]
   11c28:	cmp	r4, #0
   11c2c:	bne	11c40 <getc@plt+0x122c>
   11c30:	b	11c54 <getc@plt+0x1240>
   11c34:	ldr	r4, [r4, #4]
   11c38:	cmp	r4, #0
   11c3c:	beq	11c54 <getc@plt+0x1240>
   11c40:	mov	r0, r5
   11c44:	ldr	r1, [r4, #8]
   11c48:	bl	108b8 <strcmp@plt>
   11c4c:	cmp	r0, #0
   11c50:	bne	11c34 <getc@plt+0x1220>
   11c54:	mov	r0, r4
   11c58:	ldrd	r4, [sp]
   11c5c:	ldr	r6, [sp, #8]
   11c60:	add	sp, sp, #12
   11c64:	pop	{pc}		; (ldr pc, [sp], #4)
   11c68:	ldr	r2, [r1, #8]
   11c6c:	str	r4, [sp, #-8]!
   11c70:	mov	r4, r0
   11c74:	str	lr, [sp, #4]
   11c78:	ldrb	r3, [r2]
   11c7c:	cmp	r3, #0
   11c80:	beq	11cb4 <getc@plt+0x12a0>
   11c84:	mov	r0, #0
   11c88:	add	r0, r0, r3
   11c8c:	ldrb	r3, [r2, #1]!
   11c90:	cmp	r3, #0
   11c94:	bne	11c88 <getc@plt+0x1274>
   11c98:	movw	r3, #20065	; 0x4e61
   11c9c:	movt	r3, #33354	; 0x824a
   11ca0:	movw	r2, #503	; 0x1f7
   11ca4:	umull	ip, r3, r3, r0
   11ca8:	lsr	r3, r3, #8
   11cac:	mls	r0, r2, r3, r0
   11cb0:	add	r0, r4, r0, lsl #4
   11cb4:	add	r4, r4, #4096	; 0x1000
   11cb8:	bl	12f60 <error@@Base+0xc14>
   11cbc:	ldr	r0, [r4, #3952]	; 0xf70
   11cc0:	cmp	r0, #0
   11cc4:	beq	11cd4 <getc@plt+0x12c0>
   11cc8:	bl	108d0 <free@plt>
   11ccc:	mov	r3, #0
   11cd0:	str	r3, [r4, #3952]	; 0xf70
   11cd4:	ldr	r3, [r4, #3956]	; 0xf74
   11cd8:	add	r3, r3, #1
   11cdc:	str	r3, [r4, #3956]	; 0xf74
   11ce0:	ldr	r4, [sp]
   11ce4:	add	sp, sp, #4
   11ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   11cec:	ldr	r2, [r1, #8]
   11cf0:	str	r4, [sp, #-8]!
   11cf4:	mov	r4, r0
   11cf8:	str	lr, [sp, #4]
   11cfc:	ldrb	r3, [r2]
   11d00:	cmp	r3, #0
   11d04:	beq	11d38 <getc@plt+0x1324>
   11d08:	mov	r0, #0
   11d0c:	add	r0, r0, r3
   11d10:	ldrb	r3, [r2, #1]!
   11d14:	cmp	r3, #0
   11d18:	bne	11d0c <getc@plt+0x12f8>
   11d1c:	movw	r3, #20065	; 0x4e61
   11d20:	movt	r3, #33354	; 0x824a
   11d24:	movw	r2, #503	; 0x1f7
   11d28:	umull	ip, r3, r3, r0
   11d2c:	lsr	r3, r3, #8
   11d30:	mls	r0, r2, r3, r0
   11d34:	add	r0, r4, r0, lsl #4
   11d38:	add	r4, r4, #4096	; 0x1000
   11d3c:	bl	130c0 <error@@Base+0xd74>
   11d40:	ldr	r0, [r4, #3952]	; 0xf70
   11d44:	cmp	r0, #0
   11d48:	beq	11d58 <getc@plt+0x1344>
   11d4c:	bl	108d0 <free@plt>
   11d50:	mov	r3, #0
   11d54:	str	r3, [r4, #3952]	; 0xf70
   11d58:	ldr	r3, [r4, #3956]	; 0xf74
   11d5c:	sub	r3, r3, #1
   11d60:	str	r3, [r4, #3956]	; 0xf74
   11d64:	ldr	r4, [sp]
   11d68:	add	sp, sp, #4
   11d6c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d70:	strd	r4, [sp, #-16]!
   11d74:	str	r6, [sp, #8]
   11d78:	add	r6, r0, #4096	; 0x1000
   11d7c:	ldr	r4, [r6, #3952]	; 0xf70
   11d80:	str	lr, [sp, #12]
   11d84:	cmp	r4, #0
   11d88:	beq	11d9c <getc@plt+0x1388>
   11d8c:	ldrd	r4, [sp]
   11d90:	ldr	r6, [sp, #8]
   11d94:	add	sp, sp, #12
   11d98:	pop	{pc}		; (ldr pc, [sp], #4)
   11d9c:	ldr	r3, [r6, #3956]	; 0xf74
   11da0:	cmp	r3, #0
   11da4:	beq	11d8c <getc@plt+0x1378>
   11da8:	mov	r5, r0
   11dac:	mov	r1, #4
   11db0:	mov	r0, r3
   11db4:	bl	123a8 <error@@Base+0x5c>
   11db8:	mov	r2, r4
   11dbc:	mov	ip, r4
   11dc0:	str	r0, [r6, #3952]	; 0xf70
   11dc4:	movw	lr, #503	; 0x1f7
   11dc8:	ldr	r3, [r5, ip, lsl #4]
   11dcc:	cmp	r3, #0
   11dd0:	beq	11dec <getc@plt+0x13d8>
   11dd4:	add	r1, r0, r2, lsl #2
   11dd8:	str	r3, [r1], #4
   11ddc:	add	r2, r2, #1
   11de0:	ldr	r3, [r3, #4]
   11de4:	cmp	r3, #0
   11de8:	bne	11dd8 <getc@plt+0x13c4>
   11dec:	add	ip, ip, #1
   11df0:	cmp	ip, lr
   11df4:	bne	11dc8 <getc@plt+0x13b4>
   11df8:	ldrd	r4, [sp]
   11dfc:	ldr	r6, [sp, #8]
   11e00:	add	sp, sp, #12
   11e04:	pop	{pc}		; (ldr pc, [sp], #4)
   11e08:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11e0c:	add	r5, r0, #8000	; 0x1f40
   11e10:	mov	r4, r0
   11e14:	add	r5, r5, #48	; 0x30
   11e18:	strd	r6, [sp, #8]
   11e1c:	mov	r7, r0
   11e20:	mov	r6, r1
   11e24:	str	r8, [sp, #16]
   11e28:	str	lr, [sp, #20]
   11e2c:	mov	r0, r4
   11e30:	mov	r1, r6
   11e34:	add	r4, r4, #16
   11e38:	bl	1318c <error@@Base+0xe40>
   11e3c:	cmp	r4, r5
   11e40:	bne	11e2c <getc@plt+0x1418>
   11e44:	add	r7, r7, #4096	; 0x1000
   11e48:	ldr	r0, [r7, #3952]	; 0xf70
   11e4c:	cmp	r0, #0
   11e50:	beq	11e60 <getc@plt+0x144c>
   11e54:	bl	108d0 <free@plt>
   11e58:	mov	r3, #0
   11e5c:	str	r3, [r7, #3952]	; 0xf70
   11e60:	mov	r3, #0
   11e64:	ldrd	r4, [sp]
   11e68:	ldr	r8, [sp, #16]
   11e6c:	str	r3, [r7, #3956]	; 0xf74
   11e70:	ldrd	r6, [sp, #8]
   11e74:	add	sp, sp, #20
   11e78:	pop	{pc}		; (ldr pc, [sp], #4)
   11e7c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11e80:	ldr	r5, [pc, #260]	; 11f8c <getc@plt+0x1578>
   11e84:	strd	r6, [sp, #8]
   11e88:	ldr	r3, [pc, #256]	; 11f90 <getc@plt+0x157c>
   11e8c:	strd	r8, [sp, #16]
   11e90:	ldr	r6, [pc, #252]	; 11f94 <getc@plt+0x1580>
   11e94:	add	r5, pc, r5
   11e98:	strd	sl, [sp, #24]
   11e9c:	ldr	r8, [pc, #244]	; 11f98 <getc@plt+0x1584>
   11ea0:	add	r7, r5, #1088	; 0x440
   11ea4:	add	r3, pc, r3
   11ea8:	add	r7, r7, #4
   11eac:	str	lr, [sp, #32]
   11eb0:	sub	sp, sp, #12
   11eb4:	add	r6, pc, r6
   11eb8:	str	r3, [sp, #4]
   11ebc:	add	r8, pc, r8
   11ec0:	ldrsh	sl, [r6]
   11ec4:	cmp	sl, #0
   11ec8:	ble	11f50 <getc@plt+0x153c>
   11ecc:	mov	r9, r6
   11ed0:	mov	r4, #0
   11ed4:	ldr	fp, [r5, #8]
   11ed8:	b	11ee8 <getc@plt+0x14d4>
   11edc:	add	r4, r4, #1
   11ee0:	cmp	sl, r4
   11ee4:	beq	11f5c <getc@plt+0x1548>
   11ee8:	mov	r0, fp
   11eec:	ldr	r1, [r9, #4]!
   11ef0:	bl	108b8 <strcmp@plt>
   11ef4:	cmp	r0, #0
   11ef8:	bne	11edc <getc@plt+0x14c8>
   11efc:	ldr	r3, [r5]
   11f00:	ldr	r1, [r5, #4]
   11f04:	cmp	r3, r1
   11f08:	subls	r2, r3, #1
   11f0c:	uxtbls	r4, r4
   11f10:	addls	r2, r2, r8
   11f14:	bhi	11f28 <getc@plt+0x1514>
   11f18:	add	r3, r3, #1
   11f1c:	strb	r4, [r2, #1]!
   11f20:	cmp	r3, r1
   11f24:	bls	11f18 <getc@plt+0x1504>
   11f28:	add	r5, r5, #12
   11f2c:	cmp	r5, r7
   11f30:	bne	11ec0 <getc@plt+0x14ac>
   11f34:	add	sp, sp, #12
   11f38:	ldrd	r4, [sp]
   11f3c:	ldrd	r6, [sp, #8]
   11f40:	ldrd	r8, [sp, #16]
   11f44:	ldrd	sl, [sp, #24]
   11f48:	add	sp, sp, #32
   11f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f50:	movne	r4, #0
   11f54:	bne	11efc <getc@plt+0x14e8>
   11f58:	mov	r4, sl
   11f5c:	cmp	sl, #256	; 0x100
   11f60:	beq	11f80 <getc@plt+0x156c>
   11f64:	ldr	r1, [sp, #4]
   11f68:	add	sl, sl, #1
   11f6c:	ldr	r2, [r5, #8]
   11f70:	add	r3, r1, r4, lsl #2
   11f74:	strh	sl, [r1]
   11f78:	str	r2, [r3, #4]
   11f7c:	b	11efc <getc@plt+0x14e8>
   11f80:	ldr	r0, [pc, #20]	; 11f9c <getc@plt+0x1588>
   11f84:	add	r0, pc, r0
   11f88:	bl	1234c <error@@Base>
   11f8c:	andeq	r2, r1, r8, lsr #24
   11f90:	muleq	r1, ip, r2
   11f94:	andeq	r3, r1, ip, lsl #5
   11f98:	andeq	r3, r1, r8, lsl #13
   11f9c:	andeq	r1, r0, r0, ror #10
   11fa0:	ldr	r3, [pc, #56]	; 11fe0 <getc@plt+0x15cc>
   11fa4:	str	r4, [sp, #-8]!
   11fa8:	mov	r4, r0
   11fac:	add	r3, pc, r3
   11fb0:	ldrsh	r3, [r3]
   11fb4:	str	lr, [sp, #4]
   11fb8:	cmp	r3, #0
   11fbc:	beq	11fd8 <getc@plt+0x15c4>
   11fc0:	ldr	r3, [pc, #28]	; 11fe4 <getc@plt+0x15d0>
   11fc4:	add	r3, pc, r3
   11fc8:	ldrb	r0, [r3, r4]
   11fcc:	ldr	r4, [sp]
   11fd0:	add	sp, sp, #4
   11fd4:	pop	{pc}		; (ldr pc, [sp], #4)
   11fd8:	bl	11e7c <getc@plt+0x1468>
   11fdc:	b	11fc0 <getc@plt+0x15ac>
   11fe0:	muleq	r1, r4, r1
   11fe4:	andeq	r3, r1, r0, lsl #11
   11fe8:	strd	r4, [sp, #-16]!
   11fec:	uxtb	r4, r0
   11ff0:	ldr	r5, [pc, #84]	; 1204c <getc@plt+0x1638>
   11ff4:	add	r5, pc, r5
   11ff8:	ldrsh	r2, [r5]
   11ffc:	str	r6, [sp, #8]
   12000:	str	lr, [sp, #12]
   12004:	cmp	r2, #0
   12008:	beq	12034 <getc@plt+0x1620>
   1200c:	cmp	r4, r2
   12010:	bge	12040 <getc@plt+0x162c>
   12014:	ldr	r3, [pc, #52]	; 12050 <getc@plt+0x163c>
   12018:	ldr	r6, [sp, #8]
   1201c:	add	r3, pc, r3
   12020:	add	r3, r3, r4, lsl #2
   12024:	ldrd	r4, [sp]
   12028:	add	sp, sp, #12
   1202c:	ldr	r0, [r3, #4]
   12030:	pop	{pc}		; (ldr pc, [sp], #4)
   12034:	bl	11e7c <getc@plt+0x1468>
   12038:	ldrsh	r2, [r5]
   1203c:	b	1200c <getc@plt+0x15f8>
   12040:	ldr	r0, [pc, #12]	; 12054 <getc@plt+0x1640>
   12044:	add	r0, pc, r0
   12048:	bl	1234c <error@@Base>
   1204c:	andeq	r3, r1, ip, asr #2
   12050:	andeq	r3, r1, r4, lsr #2
   12054:			; <UNDEFINED> instruction: 0x000014bc
   12058:	ldr	r3, [pc, #96]	; 120c0 <getc@plt+0x16ac>
   1205c:	strd	r4, [sp, #-16]!
   12060:	ldr	r2, [pc, #92]	; 120c4 <getc@plt+0x16b0>
   12064:	str	r6, [sp, #8]
   12068:	mov	r6, r0
   1206c:	str	lr, [sp, #12]
   12070:	sub	sp, sp, #112	; 0x70
   12074:	add	r3, pc, r3
   12078:	add	r4, sp, #12
   1207c:	ldr	r3, [r3, r2]
   12080:	ldr	r5, [r3]
   12084:	bl	10984 <getpid@plt>
   12088:	ldr	r1, [pc, #56]	; 120c8 <getc@plt+0x16b4>
   1208c:	mov	r3, r0
   12090:	mov	r0, r4
   12094:	str	r6, [sp]
   12098:	mov	r2, r5
   1209c:	add	r1, pc, r1
   120a0:	bl	109d8 <sprintf@plt>
   120a4:	mov	r0, r4
   120a8:	bl	10900 <strdup@plt>
   120ac:	add	sp, sp, #112	; 0x70
   120b0:	ldrd	r4, [sp]
   120b4:	ldr	r6, [sp, #8]
   120b8:	add	sp, sp, #12
   120bc:	pop	{pc}		; (ldr pc, [sp], #4)
   120c0:	andeq	r2, r1, r4, lsl #31
   120c4:	andeq	r0, r0, r4, lsr #1
   120c8:			; <UNDEFINED> instruction: 0x00001ab4
   120cc:	ldr	r3, [pc, #116]	; 12148 <getc@plt+0x1734>
   120d0:	mov	r6, r0
   120d4:	str	r7, [sp, #-8]!
   120d8:	ldr	r2, [pc, #108]	; 1214c <getc@plt+0x1738>
   120dc:	str	lr, [sp, #4]
   120e0:	add	r3, pc, r3
   120e4:	ldr	r3, [r3, r2]
   120e8:	ldr	r3, [r3]
   120ec:	cmp	r3, #0
   120f0:	beq	120f8 <getc@plt+0x16e4>
   120f4:	blx	r3
   120f8:	ldr	r3, [pc, #80]	; 12150 <getc@plt+0x173c>
   120fc:	add	r3, pc, r3
   12100:	ldrsh	r2, [r3]
   12104:	cmp	r2, #0
   12108:	ble	12140 <getc@plt+0x172c>
   1210c:	mov	r5, r3
   12110:	mov	r4, #1
   12114:	mov	r0, r4
   12118:	add	r4, r4, #1
   1211c:	bl	12058 <getc@plt+0x1644>
   12120:	mov	r7, r0
   12124:	sxth	r4, r4
   12128:	bl	10918 <unlink@plt>
   1212c:	mov	r0, r7
   12130:	bl	108d0 <free@plt>
   12134:	ldrsh	r3, [r5]
   12138:	cmp	r3, r4
   1213c:	bge	12114 <getc@plt+0x1700>
   12140:	mov	r0, r6
   12144:	bl	10990 <exit@plt>
   12148:	andeq	r2, r1, r8, lsl pc
   1214c:	andeq	r0, r0, r8, lsr #1
   12150:	andseq	r3, r2, r8, asr #8
   12154:	ldrb	r3, [r0]
   12158:	ldrb	r2, [r1]
   1215c:	cmp	r3, #0
   12160:	beq	12188 <getc@plt+0x1774>
   12164:	cmp	r2, r3
   12168:	beq	12178 <getc@plt+0x1764>
   1216c:	b	12194 <getc@plt+0x1780>
   12170:	cmp	r3, r2
   12174:	bne	12194 <getc@plt+0x1780>
   12178:	ldrb	r3, [r0, #1]!
   1217c:	ldrb	r2, [r1, #1]!
   12180:	cmp	r3, #0
   12184:	bne	12170 <getc@plt+0x175c>
   12188:	cmp	r2, #0
   1218c:	beq	121a4 <getc@plt+0x1790>
   12190:	mov	r3, #0
   12194:	cmp	r3, r2
   12198:	mvncc	r0, #0
   1219c:	movcs	r0, #1
   121a0:	bx	lr
   121a4:	mov	r0, r2
   121a8:	bx	lr
   121ac:	ldr	r3, [pc, #48]	; 121e4 <getc@plt+0x17d0>
   121b0:	ldr	r1, [pc, #48]	; 121e8 <getc@plt+0x17d4>
   121b4:	add	r3, pc, r3
   121b8:	ldr	r1, [r3, r1]
   121bc:	ldr	r1, [r1]
   121c0:	cmp	r1, r0
   121c4:	beq	121e0 <getc@plt+0x17cc>
   121c8:	ldr	r1, [pc, #28]	; 121ec <getc@plt+0x17d8>
   121cc:	ldr	r3, [r3, r1]
   121d0:	ldr	r3, [r3]
   121d4:	cmp	r3, r0
   121d8:	beq	121e0 <getc@plt+0x17cc>
   121dc:	b	109cc <fclose@plt>
   121e0:	bx	lr
   121e4:	andeq	r2, r1, r4, asr #28
   121e8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   121ec:	strheq	r0, [r0], -r4
   121f0:	push	{lr}		; (str lr, [sp, #-4]!)
   121f4:	sub	sp, sp, #92	; 0x5c
   121f8:	mov	r1, r0
   121fc:	mov	r2, sp
   12200:	mov	r0, #3
   12204:	bl	10930 <__xstat@plt>
   12208:	clz	r0, r0
   1220c:	lsr	r0, r0, #5
   12210:	add	sp, sp, #92	; 0x5c
   12214:	pop	{pc}		; (ldr pc, [sp], #4)
   12218:	ldr	r2, [pc, #56]	; 12258 <getc@plt+0x1844>
   1221c:	str	r4, [sp, #-8]!
   12220:	add	r2, pc, r2
   12224:	ldrh	r3, [r2]
   12228:	str	lr, [sp, #4]
   1222c:	add	r3, r3, #1
   12230:	sxth	r3, r3
   12234:	mov	r0, r3
   12238:	strh	r3, [r2]
   1223c:	bl	12058 <getc@plt+0x1644>
   12240:	mov	r4, r0
   12244:	bl	10918 <unlink@plt>
   12248:	mov	r0, r4
   1224c:	ldr	r4, [sp]
   12250:	add	sp, sp, #4
   12254:	pop	{pc}		; (ldr pc, [sp], #4)
   12258:	andseq	r3, r2, r4, lsr #6
   1225c:	str	r4, [sp, #-8]!
   12260:	mov	r4, r0
   12264:	str	lr, [sp, #4]
   12268:	bl	109a8 <strlen@plt>
   1226c:	uxth	r0, r0
   12270:	sub	r3, r0, #1
   12274:	sxth	r3, r3
   12278:	cmp	r3, #0
   1227c:	blt	122bc <getc@plt+0x18a8>
   12280:	ldrb	r2, [r4, r3]
   12284:	cmp	r2, #47	; 0x2f
   12288:	beq	122bc <getc@plt+0x18a8>
   1228c:	sub	r0, r0, #2
   12290:	sxth	r3, r0
   12294:	add	r2, r3, #1
   12298:	add	r2, r4, r2
   1229c:	b	122b0 <getc@plt+0x189c>
   122a0:	ldrb	r0, [r2, #-1]!
   122a4:	cmp	r0, #47	; 0x2f
   122a8:	beq	122bc <getc@plt+0x18a8>
   122ac:	mov	r3, r1
   122b0:	tst	r3, #32768	; 0x8000
   122b4:	sub	r1, r3, #1
   122b8:	beq	122a0 <getc@plt+0x188c>
   122bc:	add	r0, r3, #1
   122c0:	add	r0, r4, r0
   122c4:	ldr	r4, [sp]
   122c8:	add	sp, sp, #4
   122cc:	pop	{pc}		; (ldr pc, [sp], #4)
   122d0:	mov	r0, #0
   122d4:	str	r4, [sp, #-8]!
   122d8:	str	lr, [sp, #4]
   122dc:	bl	120cc <getc@plt+0x16b8>
   122e0:	ldr	r2, [pc, #80]	; 12338 <getc@plt+0x1924>
   122e4:	str	r4, [sp, #-8]!
   122e8:	ldr	r1, [pc, #76]	; 1233c <getc@plt+0x1928>
   122ec:	str	lr, [sp, #4]
   122f0:	add	r2, pc, r2
   122f4:	ldr	r1, [r2, r1]
   122f8:	ldr	r1, [r1]
   122fc:	cmp	r1, #0
   12300:	beq	1230c <getc@plt+0x18f8>
   12304:	blx	r1
   12308:	bl	122d0 <getc@plt+0x18bc>
   1230c:	mov	r3, r0
   12310:	ldr	ip, [pc, #40]	; 12340 <getc@plt+0x192c>
   12314:	ldr	r0, [pc, #40]	; 12344 <getc@plt+0x1930>
   12318:	ldr	r1, [pc, #40]	; 12348 <getc@plt+0x1934>
   1231c:	ldr	ip, [r2, ip]
   12320:	ldr	r0, [r2, r0]
   12324:	add	r1, pc, r1
   12328:	ldr	r2, [ip]
   1232c:	ldr	r0, [r0]
   12330:	bl	109b4 <fprintf@plt>
   12334:	b	12308 <getc@plt+0x18f4>
   12338:	andeq	r2, r1, r8, lsl #26
   1233c:	muleq	r0, r4, r0
   12340:	andeq	r0, r0, r4, lsr #1
   12344:	muleq	r0, ip, r0
   12348:	andeq	r1, r0, ip, lsr r8

0001234c <error@@Base>:
   1234c:	str	r4, [sp, #-8]!
   12350:	mov	r3, r0
   12354:	ldr	r4, [pc, #56]	; 12394 <error@@Base+0x48>
   12358:	str	lr, [sp, #4]
   1235c:	ldr	r0, [pc, #52]	; 12398 <error@@Base+0x4c>
   12360:	ldr	r2, [pc, #52]	; 1239c <error@@Base+0x50>
   12364:	add	r4, pc, r4
   12368:	ldr	r1, [pc, #48]	; 123a0 <error@@Base+0x54>
   1236c:	ldr	ip, [r4, r0]
   12370:	ldr	r0, [r4, r2]
   12374:	add	r1, pc, r1
   12378:	ldr	r2, [ip]
   1237c:	ldr	r0, [r0]
   12380:	bl	109b4 <fprintf@plt>
   12384:	ldr	r3, [pc, #24]	; 123a4 <error@@Base+0x58>
   12388:	ldr	r3, [r4, r3]
   1238c:	ldr	r0, [r3]
   12390:	bl	120cc <getc@plt+0x16b8>
   12394:	muleq	r1, r4, ip
   12398:	andeq	r0, r0, r4, lsr #1
   1239c:	muleq	r0, ip, r0
   123a0:	strdeq	r1, [r0], -ip
   123a4:	strheq	r0, [r0], -r8
   123a8:	str	r4, [sp, #-8]!
   123ac:	str	lr, [sp, #4]
   123b0:	bl	108ac <calloc@plt>
   123b4:	cmp	r0, #0
   123b8:	beq	123c8 <error@@Base+0x7c>
   123bc:	ldr	r4, [sp]
   123c0:	add	sp, sp, #4
   123c4:	pop	{pc}		; (ldr pc, [sp], #4)
   123c8:	ldr	r0, [pc, #4]	; 123d4 <error@@Base+0x88>
   123cc:	add	r0, pc, r0
   123d0:	bl	1234c <error@@Base>
   123d4:	andeq	r1, r0, ip, lsr #15
   123d8:	ldr	r3, [pc, #40]	; 12408 <error@@Base+0xbc>
   123dc:	add	r3, pc, r3
   123e0:	ldrb	r2, [r3, #2]
   123e4:	cmp	r2, #0
   123e8:	bxne	lr
   123ec:	ldr	r0, [pc, #24]	; 1240c <error@@Base+0xc0>
   123f0:	mov	r2, #1
   123f4:	str	r4, [sp, #-8]!
   123f8:	str	lr, [sp, #4]
   123fc:	strb	r2, [r3, #2]
   12400:	add	r0, pc, r0
   12404:	bl	1234c <error@@Base>
   12408:	andseq	r3, r2, r8, ror #2
   1240c:	muleq	r0, r4, r7
   12410:	ldr	r4, [pc, #68]	; 1245c <error@@Base+0x110>
   12414:	mov	r3, r0
   12418:	push	{lr}		; (str lr, [sp, #-4]!)
   1241c:	sub	sp, sp, #12
   12420:	ldr	r0, [pc, #56]	; 12460 <error@@Base+0x114>
   12424:	ldr	r2, [pc, #56]	; 12464 <error@@Base+0x118>
   12428:	add	r4, pc, r4
   1242c:	ldr	ip, [r4, r0]
   12430:	ldr	r0, [r4, r2]
   12434:	str	r1, [sp]
   12438:	ldr	r1, [pc, #40]	; 12468 <error@@Base+0x11c>
   1243c:	ldr	r2, [ip]
   12440:	ldr	r0, [r0]
   12444:	add	r1, pc, r1
   12448:	bl	109b4 <fprintf@plt>
   1244c:	ldr	r3, [pc, #24]	; 1246c <error@@Base+0x120>
   12450:	ldr	r3, [r4, r3]
   12454:	ldr	r0, [r3]
   12458:	bl	120cc <getc@plt+0x16b8>
   1245c:	ldrdeq	r2, [r1], -r0
   12460:	andeq	r0, r0, r4, lsr #1
   12464:	muleq	r0, ip, r0
   12468:	andeq	r1, r0, r0, ror #14
   1246c:	strheq	r0, [r0], -r8
   12470:	ldr	ip, [pc, #164]	; 1251c <error@@Base+0x1d0>
   12474:	subs	r2, r0, #0
   12478:	strd	r4, [sp, #-16]!
   1247c:	mov	r4, r1
   12480:	str	r6, [sp, #8]
   12484:	str	lr, [sp, #12]
   12488:	add	ip, pc, ip
   1248c:	beq	124cc <error@@Base+0x180>
   12490:	mov	r5, r2
   12494:	bl	108c4 <fopen@plt>
   12498:	cmp	r0, #0
   1249c:	beq	124b0 <error@@Base+0x164>
   124a0:	ldrd	r4, [sp]
   124a4:	ldr	r6, [sp, #8]
   124a8:	add	sp, sp, #12
   124ac:	pop	{pc}		; (ldr pc, [sp], #4)
   124b0:	ldrb	r3, [r4]
   124b4:	mov	r1, r5
   124b8:	cmp	r3, #119	; 0x77
   124bc:	beq	124f4 <error@@Base+0x1a8>
   124c0:	ldr	r0, [pc, #88]	; 12520 <error@@Base+0x1d4>
   124c4:	add	r0, pc, r0
   124c8:	bl	12410 <error@@Base+0xc4>
   124cc:	ldrb	r3, [r1]
   124d0:	cmp	r3, #114	; 0x72
   124d4:	beq	12500 <error@@Base+0x1b4>
   124d8:	ldr	r3, [pc, #68]	; 12524 <error@@Base+0x1d8>
   124dc:	ldrd	r4, [sp]
   124e0:	ldr	r6, [sp, #8]
   124e4:	add	sp, sp, #12
   124e8:	ldr	r3, [ip, r3]
   124ec:	ldr	r0, [r3]
   124f0:	pop	{pc}		; (ldr pc, [sp], #4)
   124f4:	ldr	r0, [pc, #44]	; 12528 <error@@Base+0x1dc>
   124f8:	add	r0, pc, r0
   124fc:	bl	12410 <error@@Base+0xc4>
   12500:	ldr	r3, [pc, #36]	; 1252c <error@@Base+0x1e0>
   12504:	ldrd	r4, [sp]
   12508:	ldr	r6, [sp, #8]
   1250c:	add	sp, sp, #12
   12510:	ldr	r3, [ip, r3]
   12514:	ldr	r0, [r3]
   12518:	pop	{pc}		; (ldr pc, [sp], #4)
   1251c:	andeq	r2, r1, r0, ror fp
   12520:	andeq	r1, r0, r8, lsl #14
   12524:	strheq	r0, [r0], -r4
   12528:			; <UNDEFINED> instruction: 0x000016bc
   1252c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12530:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12534:	strd	r6, [sp, #8]
   12538:	mov	r6, r0
   1253c:	strd	r8, [sp, #16]
   12540:	mov	r9, r1
   12544:	mov	r8, r3
   12548:	strd	sl, [sp, #24]
   1254c:	str	lr, [sp, #32]
   12550:	sub	sp, sp, #20
   12554:	ldr	r5, [pc, #600]	; 127b4 <error@@Base+0x468>
   12558:	str	r0, [sp]
   1255c:	ldr	r0, [r1]
   12560:	str	r2, [sp, #12]
   12564:	bl	1225c <getc@plt+0x1848>
   12568:	ldr	r3, [pc, #584]	; 127b8 <error@@Base+0x46c>
   1256c:	add	r5, pc, r5
   12570:	ldr	r4, [pc, #580]	; 127bc <error@@Base+0x470>
   12574:	ldr	r3, [r5, r3]
   12578:	add	r4, pc, r4
   1257c:	mov	r1, r4
   12580:	str	r0, [r3]
   12584:	mov	r0, #2
   12588:	bl	1096c <__sysv_signal@plt>
   1258c:	mov	r1, r4
   12590:	mov	r0, #15
   12594:	bl	1096c <__sysv_signal@plt>
   12598:	ldr	sl, [r6]
   1259c:	cmp	sl, #1
   125a0:	beq	12778 <error@@Base+0x42c>
   125a4:	movle	r6, #0
   125a8:	ble	12700 <error@@Base+0x3b4>
   125ac:	ldr	r3, [pc, #524]	; 127c0 <error@@Base+0x474>
   125b0:	mov	r7, #1
   125b4:	mov	r6, #0
   125b8:	mov	r4, r7
   125bc:	add	r3, pc, r3
   125c0:	str	r3, [sp, #8]
   125c4:	mov	r3, sl
   125c8:	mov	sl, r9
   125cc:	b	125f0 <error@@Base+0x2a4>
   125d0:	add	r4, r4, #1
   125d4:	add	r2, r6, #1
   125d8:	str	r5, [sl, r6, lsl #2]
   125dc:	sxth	r4, r4
   125e0:	sxth	r6, r2
   125e4:	cmp	r4, r3
   125e8:	mov	r7, r4
   125ec:	bge	12700 <error@@Base+0x3b4>
   125f0:	ldr	r5, [sl, r4, lsl #2]
   125f4:	lsl	r9, r4, #2
   125f8:	ldrb	r2, [r5]
   125fc:	cmp	r2, #45	; 0x2d
   12600:	bne	125d0 <error@@Base+0x284>
   12604:	ldrb	fp, [r5, #1]
   12608:	cmp	fp, #0
   1260c:	beq	125d0 <error@@Base+0x284>
   12610:	mov	r0, r5
   12614:	str	r3, [sp, #4]
   12618:	bl	109a8 <strlen@plt>
   1261c:	mov	r2, r0
   12620:	mov	r1, r5
   12624:	ldr	r0, [sp, #8]
   12628:	bl	109fc <strncmp@plt>
   1262c:	cmp	r0, #0
   12630:	beq	1278c <error@@Base+0x440>
   12634:	ldr	r3, [sp, #4]
   12638:	add	r7, r7, #1
   1263c:	cmp	r7, r3
   12640:	addlt	r9, sl, r9
   12644:	movge	r0, #0
   12648:	ldrlt	r0, [r9, #4]
   1264c:	cmp	r8, #0
   12650:	beq	12694 <error@@Base+0x348>
   12654:	ldrb	r2, [r8]
   12658:	cmp	r2, #0
   1265c:	beq	12694 <error@@Base+0x348>
   12660:	cmp	fp, r2
   12664:	beq	126a4 <error@@Base+0x358>
   12668:	mov	r2, #0
   1266c:	b	12678 <error@@Base+0x32c>
   12670:	cmp	fp, ip
   12674:	beq	126a8 <error@@Base+0x35c>
   12678:	add	r2, r2, #1
   1267c:	sxth	r2, r2
   12680:	add	r1, r2, r2, lsl #1
   12684:	ldrb	ip, [r8, r1, lsl #2]
   12688:	add	r1, r8, r1, lsl #2
   1268c:	cmp	ip, #0
   12690:	bne	12670 <error@@Base+0x324>
   12694:	ldr	r0, [pc, #296]	; 127c4 <error@@Base+0x478>
   12698:	mov	r1, r5
   1269c:	add	r0, pc, r0
   126a0:	bl	12410 <error@@Base+0xc4>
   126a4:	mov	r1, r8
   126a8:	ldr	r2, [r1, #4]
   126ac:	cmp	r2, #0
   126b0:	beq	12738 <error@@Base+0x3ec>
   126b4:	ldrb	ip, [r5, #2]
   126b8:	cmp	ip, #0
   126bc:	bne	12724 <error@@Base+0x3d8>
   126c0:	cmp	r0, #0
   126c4:	beq	12794 <error@@Base+0x448>
   126c8:	ldr	r1, [r2]
   126cc:	cmp	r1, #0
   126d0:	bne	127a4 <error@@Base+0x458>
   126d4:	str	r0, [r2]
   126d8:	uxth	r2, r4
   126dc:	ldrb	r1, [r5, #2]
   126e0:	add	r4, r2, #1
   126e4:	sxth	r4, r4
   126e8:	cmp	r1, #0
   126ec:	addeq	r4, r2, #2
   126f0:	sxtheq	r4, r4
   126f4:	cmp	r4, r3
   126f8:	mov	r7, r4
   126fc:	blt	125f0 <error@@Base+0x2a4>
   12700:	ldr	r3, [sp]
   12704:	str	r6, [r3]
   12708:	add	sp, sp, #20
   1270c:	ldrd	r4, [sp]
   12710:	ldrd	r6, [sp, #8]
   12714:	ldrd	r8, [sp, #16]
   12718:	ldrd	sl, [sp, #24]
   1271c:	add	sp, sp, #32
   12720:	pop	{pc}		; (ldr pc, [sp], #4)
   12724:	ldr	r1, [r2]
   12728:	cmp	r1, #0
   1272c:	bne	127a4 <error@@Base+0x458>
   12730:	add	r0, r5, #2
   12734:	b	126d4 <error@@Base+0x388>
   12738:	ldr	r3, [r1, #8]
   1273c:	cmp	r3, #0
   12740:	beq	12694 <error@@Base+0x348>
   12744:	ldrb	r2, [r5, #2]
   12748:	cmp	r2, #0
   1274c:	bne	12694 <error@@Base+0x348>
   12750:	ldrb	r2, [r3]
   12754:	cmp	r2, #0
   12758:	bne	127a4 <error@@Base+0x458>
   1275c:	mov	r2, #1
   12760:	add	r4, r4, #1
   12764:	sxth	r4, r4
   12768:	strb	r2, [r3]
   1276c:	ldr	r3, [sp]
   12770:	ldr	r3, [r3]
   12774:	b	125e4 <error@@Base+0x298>
   12778:	ldr	r3, [pc, #72]	; 127c8 <error@@Base+0x47c>
   1277c:	ldr	r3, [r5, r3]
   12780:	ldrb	r6, [r3]
   12784:	cmp	r6, #0
   12788:	beq	12700 <error@@Base+0x3b4>
   1278c:	ldr	r0, [sp, #12]
   12790:	bl	122e0 <getc@plt+0x18cc>
   12794:	ldr	r3, [r1, #8]
   12798:	cmp	r3, #0
   1279c:	bne	12750 <error@@Base+0x404>
   127a0:	b	12694 <error@@Base+0x348>
   127a4:	ldr	r0, [pc, #32]	; 127cc <error@@Base+0x480>
   127a8:	mov	r1, r5
   127ac:	add	r0, pc, r0
   127b0:	bl	12410 <error@@Base+0xc4>
   127b4:	andeq	r2, r1, ip, lsl #21
   127b8:	andeq	r0, r0, r4, lsr #1
   127bc:			; <UNDEFINED> instruction: 0xfffffe58
   127c0:	andeq	r1, r0, r4, lsr #12
   127c4:	andeq	r1, r0, ip, asr #10
   127c8:	andeq	r0, r0, ip, lsl #1
   127cc:	andeq	r1, r0, ip, asr #8
   127d0:	ldr	r2, [pc, #60]	; 12814 <error@@Base+0x4c8>
   127d4:	mov	r3, r0
   127d8:	push	{lr}		; (str lr, [sp, #-4]!)
   127dc:	sub	sp, sp, #12
   127e0:	ldr	ip, [pc, #48]	; 12818 <error@@Base+0x4cc>
   127e4:	ldr	r0, [pc, #48]	; 1281c <error@@Base+0x4d0>
   127e8:	add	r2, pc, r2
   127ec:	ldr	ip, [r2, ip]
   127f0:	ldr	r0, [r2, r0]
   127f4:	str	r1, [sp]
   127f8:	ldr	r1, [pc, #32]	; 12820 <error@@Base+0x4d4>
   127fc:	ldr	r2, [ip]
   12800:	ldr	r0, [r0]
   12804:	add	r1, pc, r1
   12808:	bl	109b4 <fprintf@plt>
   1280c:	add	sp, sp, #12
   12810:	pop	{pc}		; (ldr pc, [sp], #4)
   12814:	andeq	r2, r1, r0, lsl r8
   12818:	andeq	r0, r0, r4, lsr #1
   1281c:	muleq	r0, ip, r0
   12820:	andeq	r1, r0, r0, lsr #7
   12824:	strd	r4, [sp, #-16]!
   12828:	uxtb	r5, r1
   1282c:	mov	r1, #16
   12830:	str	r6, [sp, #8]
   12834:	mov	r6, r0
   12838:	mov	r0, #1
   1283c:	mov	r4, r2
   12840:	str	lr, [sp, #12]
   12844:	bl	123a8 <error@@Base+0x5c>
   12848:	mov	r3, r0
   1284c:	mov	r0, r6
   12850:	mov	r1, r3
   12854:	strb	r5, [r3, #8]
   12858:	str	r4, [r3, #12]
   1285c:	ldrd	r4, [sp]
   12860:	ldr	r6, [sp, #8]
   12864:	ldr	lr, [sp, #12]
   12868:	add	sp, sp, #16
   1286c:	b	12fb8 <error@@Base+0xc6c>
   12870:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12874:	clz	r3, r1
   12878:	strd	r6, [sp, #8]
   1287c:	lsr	r3, r3, #5
   12880:	strd	r8, [sp, #16]
   12884:	strd	sl, [sp, #24]
   12888:	mov	sl, r2
   1288c:	str	lr, [sp, #32]
   12890:	sub	sp, sp, #124	; 0x7c
   12894:	ldrb	r2, [r2]
   12898:	ldr	r4, [pc, #888]	; 12c18 <error@@Base+0x8cc>
   1289c:	cmp	r2, #0
   128a0:	moveq	r3, #0
   128a4:	cmp	r3, #0
   128a8:	add	r4, pc, r4
   128ac:	bne	12c04 <error@@Base+0x8b8>
   128b0:	mov	r9, r0
   128b4:	mov	r0, r1
   128b8:	ldr	r1, [pc, #860]	; 12c1c <error@@Base+0x8d0>
   128bc:	ldr	r3, [r9, #4]
   128c0:	add	r1, pc, r1
   128c4:	str	r3, [sp, #8]
   128c8:	bl	12470 <error@@Base+0x124>
   128cc:	ldrb	r3, [sl]
   128d0:	mov	r7, r0
   128d4:	cmp	r3, #0
   128d8:	bne	12b4c <error@@Base+0x800>
   128dc:	ldr	r8, [sl, #4]
   128e0:	mov	r0, r7
   128e4:	ldrb	r3, [sl, #1]
   128e8:	cmp	r8, #0
   128ec:	moveq	r8, #94	; 0x5e
   128f0:	mov	r5, r3
   128f4:	bl	10a14 <getc@plt>
   128f8:	cmn	r0, #1
   128fc:	beq	129c4 <error@@Base+0x678>
   12900:	ldr	r3, [pc, #792]	; 12c20 <error@@Base+0x8d4>
   12904:	ldr	r3, [r4, r3]
   12908:	ldrsb	r4, [r3, r0]
   1290c:	str	r3, [sp]
   12910:	cmp	r4, #0
   12914:	ble	12be4 <error@@Base+0x898>
   12918:	add	r3, sp, #20
   1291c:	mov	r6, #0
   12920:	add	fp, sp, #17
   12924:	str	r3, [sp, #4]
   12928:	str	sl, [sp, #12]
   1292c:	mov	sl, r5
   12930:	b	12944 <error@@Base+0x5f8>
   12934:	ldr	r3, [sp]
   12938:	ldrsb	r4, [r3, r0]
   1293c:	cmp	r4, #0
   12940:	ble	12be4 <error@@Base+0x898>
   12944:	cmp	r4, #1
   12948:	strb	r0, [sp, #16]
   1294c:	beq	12970 <error@@Base+0x624>
   12950:	sub	r5, r4, #1
   12954:	mov	r3, r7
   12958:	mov	r2, r5
   1295c:	mov	r1, #1
   12960:	mov	r0, fp
   12964:	bl	10948 <fread@plt>
   12968:	cmp	r5, r0
   1296c:	bne	12bf8 <error@@Base+0x8ac>
   12970:	mov	r1, #4
   12974:	add	r0, sp, #16
   12978:	ldr	r2, [sp, #4]
   1297c:	bl	10954 <utf8proc_iterate@plt>
   12980:	cmp	r0, r4
   12984:	bne	12bf0 <error@@Base+0x8a4>
   12988:	cmp	sl, #0
   1298c:	ldr	r2, [sp, #20]
   12990:	beq	129a0 <error@@Base+0x654>
   12994:	cmp	r2, r8
   12998:	moveq	r6, #1
   1299c:	beq	129b0 <error@@Base+0x664>
   129a0:	mov	r1, r6
   129a4:	mov	r0, r9
   129a8:	mov	r6, #0
   129ac:	bl	12824 <error@@Base+0x4d8>
   129b0:	mov	r0, r7
   129b4:	bl	10a14 <getc@plt>
   129b8:	cmn	r0, #1
   129bc:	bne	12934 <error@@Base+0x5e8>
   129c0:	ldr	sl, [sp, #12]
   129c4:	mov	r0, r7
   129c8:	bl	121ac <getc@plt+0x1798>
   129cc:	ldrb	r3, [sl, #9]
   129d0:	cmp	r3, #0
   129d4:	beq	12a4c <error@@Base+0x700>
   129d8:	ldr	r3, [sp, #8]
   129dc:	cmp	r3, #0
   129e0:	ldrne	r6, [r3, #4]
   129e4:	ldreq	r6, [r9]
   129e8:	cmp	r6, #0
   129ec:	beq	12a4c <error@@Base+0x700>
   129f0:	mov	r5, r6
   129f4:	mov	r7, #32
   129f8:	b	12a08 <error@@Base+0x6bc>
   129fc:	ldr	r5, [r5, #4]
   12a00:	cmp	r5, #0
   12a04:	beq	12ac4 <error@@Base+0x778>
   12a08:	ldr	r4, [r5, #12]
   12a0c:	mov	r0, r4
   12a10:	bl	108dc <utf8proc_get_property@plt>
   12a14:	cmp	r4, #13
   12a18:	bhi	12b40 <error@@Base+0x7f4>
   12a1c:	cmp	r4, #11
   12a20:	bcs	12a44 <error@@Base+0x6f8>
   12a24:	cmp	r4, #9
   12a28:	beq	12a44 <error@@Base+0x6f8>
   12a2c:	cmp	r4, #10
   12a30:	beq	129fc <error@@Base+0x6b0>
   12a34:	ldrsh	r3, [r0]
   12a38:	sub	r3, r3, #23
   12a3c:	cmp	r3, #2
   12a40:	bhi	129fc <error@@Base+0x6b0>
   12a44:	str	r7, [r5, #12]
   12a48:	b	129fc <error@@Base+0x6b0>
   12a4c:	ldrb	r3, [sl, #10]
   12a50:	cmp	r3, #0
   12a54:	beq	12a84 <error@@Base+0x738>
   12a58:	ldr	r3, [sp, #8]
   12a5c:	cmp	r3, #0
   12a60:	ldrne	r4, [r3, #4]
   12a64:	ldreq	r4, [r9]
   12a68:	b	12a7c <error@@Base+0x730>
   12a6c:	ldr	r0, [r4, #12]
   12a70:	bl	10924 <utf8proc_tolower@plt>
   12a74:	str	r0, [r4, #12]
   12a78:	ldr	r4, [r4, #4]
   12a7c:	cmp	r4, #0
   12a80:	bne	12a6c <error@@Base+0x720>
   12a84:	add	sp, sp, #124	; 0x7c
   12a88:	ldrd	r4, [sp]
   12a8c:	ldrd	r6, [sp, #8]
   12a90:	ldrd	r8, [sp, #16]
   12a94:	ldrd	sl, [sp, #24]
   12a98:	add	sp, sp, #32
   12a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   12aa0:	cmp	r3, #10
   12aa4:	movne	r2, #0
   12aa8:	andeq	r2, r2, #1
   12aac:	cmp	r2, #0
   12ab0:	bne	12b28 <error@@Base+0x7dc>
   12ab4:	subs	r5, r3, #10
   12ab8:	movne	r5, #1
   12abc:	subs	r6, r4, #0
   12ac0:	beq	12a4c <error@@Base+0x700>
   12ac4:	eor	r2, r5, #1
   12ac8:	ldr	r4, [r6, #4]
   12acc:	ldr	r3, [r6, #12]
   12ad0:	cmp	r3, #32
   12ad4:	bne	12aa0 <error@@Base+0x754>
   12ad8:	cmp	r4, #0
   12adc:	moveq	r2, #1
   12ae0:	cmp	r2, #0
   12ae4:	bne	12af8 <error@@Base+0x7ac>
   12ae8:	ldr	r2, [r4, #12]
   12aec:	cmp	r2, #10
   12af0:	cmpne	r2, #32
   12af4:	bne	12ab4 <error@@Base+0x768>
   12af8:	cmp	r4, #0
   12afc:	movne	r3, r5
   12b00:	moveq	r3, #0
   12b04:	cmp	r3, #0
   12b08:	beq	12b28 <error@@Base+0x7dc>
   12b0c:	ldr	r3, [r4, #12]
   12b10:	cmp	r3, #32
   12b14:	bne	12b28 <error@@Base+0x7dc>
   12b18:	ldrb	r3, [r4, #8]
   12b1c:	ldrb	r2, [r6, #8]
   12b20:	orr	r3, r3, r2
   12b24:	strb	r3, [r4, #8]
   12b28:	mov	r0, r9
   12b2c:	mov	r1, r6
   12b30:	bl	130c0 <error@@Base+0xd74>
   12b34:	mov	r0, r6
   12b38:	bl	108d0 <free@plt>
   12b3c:	b	12abc <error@@Base+0x770>
   12b40:	cmp	r4, #160	; 0xa0
   12b44:	bne	12a34 <error@@Base+0x6e8>
   12b48:	b	12a44 <error@@Base+0x6f8>
   12b4c:	add	r5, sp, #20
   12b50:	mov	r2, r0
   12b54:	mov	r1, #99	; 0x63
   12b58:	mov	r0, r5
   12b5c:	bl	108e8 <fgets@plt>
   12b60:	cmp	r0, #0
   12b64:	beq	12b84 <error@@Base+0x838>
   12b68:	ldr	r1, [pc, #180]	; 12c24 <error@@Base+0x8d8>
   12b6c:	mov	r2, #51	; 0x33
   12b70:	mov	r0, r5
   12b74:	add	r1, pc, r1
   12b78:	bl	109fc <strncmp@plt>
   12b7c:	subs	r6, r0, #0
   12b80:	beq	12b98 <error@@Base+0x84c>
   12b84:	mov	r0, r7
   12b88:	bl	1090c <rewind@plt>
   12b8c:	mov	r3, #0
   12b90:	strb	r3, [sl, #11]
   12b94:	b	128dc <error@@Base+0x590>
   12b98:	ldr	r8, [pc, #136]	; 12c28 <error@@Base+0x8dc>
   12b9c:	add	r8, pc, r8
   12ba0:	mov	r2, r7
   12ba4:	mov	r1, #99	; 0x63
   12ba8:	mov	r0, r5
   12bac:	bl	108e8 <fgets@plt>
   12bb0:	cmp	r0, #0
   12bb4:	beq	12bdc <error@@Base+0x890>
   12bb8:	mov	r1, r8
   12bbc:	mov	r0, r5
   12bc0:	bl	108b8 <strcmp@plt>
   12bc4:	cmp	r0, #0
   12bc8:	bne	12ba0 <error@@Base+0x854>
   12bcc:	add	r6, r6, #1
   12bd0:	sxth	r6, r6
   12bd4:	cmp	r6, #2
   12bd8:	bne	12ba0 <error@@Base+0x854>
   12bdc:	mov	r3, #1
   12be0:	b	12b90 <error@@Base+0x844>
   12be4:	ldr	r0, [pc, #64]	; 12c2c <error@@Base+0x8e0>
   12be8:	add	r0, pc, r0
   12bec:	bl	1234c <error@@Base>
   12bf0:	bl	109e4 <utf8proc_errmsg@plt>
   12bf4:	bl	1234c <error@@Base>
   12bf8:	ldr	r0, [pc, #48]	; 12c30 <error@@Base+0x8e4>
   12bfc:	add	r0, pc, r0
   12c00:	bl	1234c <error@@Base>
   12c04:	ldr	r1, [pc, #40]	; 12c34 <error@@Base+0x8e8>
   12c08:	ldr	r0, [pc, #40]	; 12c38 <error@@Base+0x8ec>
   12c0c:	add	r1, pc, r1
   12c10:	add	r0, pc, r0
   12c14:	bl	12410 <error@@Base+0xc4>
   12c18:	andeq	r2, r1, r0, asr r7
   12c1c:	andeq	r0, r0, r8, asr sl
   12c20:	andeq	r0, r0, ip, lsr #1
   12c24:	strheq	r1, [r0], -r4
   12c28:	andeq	r1, r0, r4, asr #1
   12c2c:	strheq	r1, [r0], -r0
   12c30:	strheq	r1, [r0], -r4
   12c34:	andeq	r1, r0, r0
   12c38:	andeq	r1, r0, r8
   12c3c:	str	r4, [sp, #-8]!
   12c40:	str	lr, [sp, #4]
   12c44:	bl	108f4 <utf8proc_encode_char@plt>
   12c48:	cmp	r0, #0
   12c4c:	ble	12c60 <error@@Base+0x914>
   12c50:	ldr	r4, [sp]
   12c54:	add	sp, sp, #4
   12c58:	sxtb	r0, r0
   12c5c:	pop	{pc}		; (ldr pc, [sp], #4)
   12c60:	ldr	r0, [pc, #4]	; 12c6c <error@@Base+0x920>
   12c64:	add	r0, pc, r0
   12c68:	bl	1234c <error@@Base>
   12c6c:	andeq	r1, r0, r4, rrx
   12c70:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12c74:	uxtb	r4, r0
   12c78:	mov	r5, r1
   12c7c:	cmp	r4, #0
   12c80:	strd	r6, [sp, #8]
   12c84:	mov	r7, r2
   12c88:	moveq	r6, r2
   12c8c:	str	r8, [sp, #16]
   12c90:	uxtb	r8, r3
   12c94:	str	lr, [sp, #20]
   12c98:	bne	12d98 <error@@Base+0xa4c>
   12c9c:	cmp	r5, #10
   12ca0:	bne	12cdc <error@@Base+0x990>
   12ca4:	cmp	r8, #0
   12ca8:	bne	12cd0 <error@@Base+0x984>
   12cac:	ldr	r1, [pc, #272]	; 12dc4 <error@@Base+0xa78>
   12cb0:	add	r1, pc, r1
   12cb4:	mov	r0, r6
   12cb8:	ldrd	r4, [sp]
   12cbc:	ldrd	r6, [sp, #8]
   12cc0:	ldr	r8, [sp, #16]
   12cc4:	ldr	lr, [sp, #20]
   12cc8:	add	sp, sp, #24
   12ccc:	b	109d8 <sprintf@plt>
   12cd0:	ldr	r1, [pc, #240]	; 12dc8 <error@@Base+0xa7c>
   12cd4:	add	r1, pc, r1
   12cd8:	b	12cb4 <error@@Base+0x968>
   12cdc:	mov	r0, r5
   12ce0:	bl	108dc <utf8proc_get_property@plt>
   12ce4:	cmp	r5, #32
   12ce8:	beq	12d08 <error@@Base+0x9bc>
   12cec:	ldrsh	r3, [r0]
   12cf0:	cmp	r3, #0
   12cf4:	ble	12d68 <error@@Base+0xa1c>
   12cf8:	cmp	r3, #22
   12cfc:	ble	12d08 <error@@Base+0x9bc>
   12d00:	cmp	r3, #29
   12d04:	bne	12d68 <error@@Base+0xa1c>
   12d08:	mov	r0, r5
   12d0c:	uxth	r4, r4
   12d10:	bl	1099c <utf8proc_category@plt>
   12d14:	sub	r0, r0, #6
   12d18:	cmp	r0, #2
   12d1c:	bhi	12d38 <error@@Base+0x9ec>
   12d20:	mov	r1, r6
   12d24:	movw	r0, #9676	; 0x25cc
   12d28:	bl	12c3c <error@@Base+0x8f0>
   12d2c:	add	r4, r4, r0
   12d30:	uxth	r4, r4
   12d34:	sxtah	r6, r7, r4
   12d38:	mov	r1, r6
   12d3c:	mov	r0, r5
   12d40:	bl	12c3c <error@@Base+0x8f0>
   12d44:	add	r4, r4, r0
   12d48:	mov	r3, #0
   12d4c:	sxth	r4, r4
   12d50:	strb	r3, [r7, r4]
   12d54:	ldrd	r4, [sp]
   12d58:	ldrd	r6, [sp, #8]
   12d5c:	ldr	r8, [sp, #16]
   12d60:	add	sp, sp, #20
   12d64:	pop	{pc}		; (ldr pc, [sp], #4)
   12d68:	cmp	r5, #255	; 0xff
   12d6c:	bls	12db0 <error@@Base+0xa64>
   12d70:	ldr	r1, [pc, #84]	; 12dcc <error@@Base+0xa80>
   12d74:	mov	r2, r5
   12d78:	mov	r0, r6
   12d7c:	add	r1, pc, r1
   12d80:	ldrd	r4, [sp]
   12d84:	ldrd	r6, [sp, #8]
   12d88:	ldr	r8, [sp, #16]
   12d8c:	ldr	lr, [sp, #20]
   12d90:	add	sp, sp, #24
   12d94:	b	109d8 <sprintf@plt>
   12d98:	mov	r1, r2
   12d9c:	mov	r0, #94	; 0x5e
   12da0:	bl	12c3c <error@@Base+0x8f0>
   12da4:	sxth	r4, r0
   12da8:	add	r6, r7, r0
   12dac:	b	12c9c <error@@Base+0x950>
   12db0:	ldr	r1, [pc, #24]	; 12dd0 <error@@Base+0xa84>
   12db4:	mov	r2, r5
   12db8:	mov	r0, r6
   12dbc:	add	r1, pc, r1
   12dc0:	b	12d80 <error@@Base+0xa34>
   12dc4:			; <UNDEFINED> instruction: 0x000007bc
   12dc8:	andeq	r1, r0, ip
   12dcc:	andeq	r0, r0, r4, ror pc
   12dd0:	andeq	r0, r0, ip, lsr #30
   12dd4:	mov	r3, r1
   12dd8:	ldr	r1, [pc, #212]	; 12eb4 <error@@Base+0xb68>
   12ddc:	strd	r4, [sp, #-20]!	; 0xffffffec
   12de0:	mov	r5, r2
   12de4:	strd	r6, [sp, #8]
   12de8:	mov	r7, r0
   12dec:	mov	r0, r3
   12df0:	str	lr, [sp, #16]
   12df4:	sub	sp, sp, #20
   12df8:	add	r1, pc, r1
   12dfc:	bl	12470 <error@@Base+0x124>
   12e00:	cmp	r5, #0
   12e04:	mov	r6, r0
   12e08:	beq	12e5c <error@@Base+0xb10>
   12e0c:	mov	r3, r0
   12e10:	ldr	r4, [pc, #160]	; 12eb8 <error@@Base+0xb6c>
   12e14:	mov	r2, #55	; 0x37
   12e18:	mov	r1, #1
   12e1c:	ldr	r0, [pc, #152]	; 12ebc <error@@Base+0xb70>
   12e20:	add	r4, pc, r4
   12e24:	add	r0, pc, r0
   12e28:	bl	1093c <fwrite@plt>
   12e2c:	mov	r3, r6
   12e30:	mov	r2, #55	; 0x37
   12e34:	mov	r1, #1
   12e38:	mov	r0, r4
   12e3c:	bl	1093c <fwrite@plt>
   12e40:	mov	r0, r6
   12e44:	blx	r5
   12e48:	mov	r3, r6
   12e4c:	mov	r0, r4
   12e50:	mov	r2, #55	; 0x37
   12e54:	mov	r1, #1
   12e58:	bl	1093c <fwrite@plt>
   12e5c:	ldr	r4, [r7]
   12e60:	cmp	r4, #0
   12e64:	beq	12e98 <error@@Base+0xb4c>
   12e68:	add	r5, sp, #4
   12e6c:	ldrb	r0, [r4, #8]
   12e70:	mov	r3, #0
   12e74:	mov	r2, r5
   12e78:	ldr	r1, [r4, #12]
   12e7c:	bl	12c70 <error@@Base+0x924>
   12e80:	mov	r1, r6
   12e84:	mov	r0, r5
   12e88:	bl	109f0 <fputs@plt>
   12e8c:	ldr	r4, [r4, #4]
   12e90:	cmp	r4, #0
   12e94:	bne	12e6c <error@@Base+0xb20>
   12e98:	mov	r0, r6
   12e9c:	bl	121ac <getc@plt+0x1798>
   12ea0:	add	sp, sp, #20
   12ea4:	ldrd	r4, [sp]
   12ea8:	ldrd	r6, [sp, #8]
   12eac:	add	sp, sp, #16
   12eb0:	pop	{pc}		; (ldr pc, [sp], #4)
   12eb4:	andeq	r0, r0, r0, ror r4
   12eb8:	andeq	r0, r0, r0, asr #28
   12ebc:	andeq	r0, r0, r4, lsl #28
   12ec0:	strd	r4, [sp, #-20]!	; 0xffffffec
   12ec4:	mov	r2, #0
   12ec8:	strd	r6, [sp, #8]
   12ecc:	str	lr, [sp, #16]
   12ed0:	sub	sp, sp, #12
   12ed4:	ldrb	r3, [r1]
   12ed8:	str	r2, [sp, #4]
   12edc:	cmp	r3, r2
   12ee0:	beq	12f30 <error@@Base+0xbe4>
   12ee4:	mov	r4, r1
   12ee8:	mov	r5, r0
   12eec:	add	r6, sp, #4
   12ef0:	b	12f08 <error@@Base+0xbbc>
   12ef4:	ldr	r2, [sp, #4]
   12ef8:	bl	12824 <error@@Base+0x4d8>
   12efc:	ldrb	r3, [r4, r7]!
   12f00:	cmp	r3, #0
   12f04:	beq	12f30 <error@@Base+0xbe4>
   12f08:	mvn	r1, #0
   12f0c:	mov	r2, r6
   12f10:	mov	r0, r4
   12f14:	bl	10954 <utf8proc_iterate@plt>
   12f18:	subs	r7, r0, #0
   12f1c:	mov	r1, #0
   12f20:	mov	r0, r5
   12f24:	bgt	12ef4 <error@@Base+0xba8>
   12f28:	mov	r0, #0
   12f2c:	b	12f34 <error@@Base+0xbe8>
   12f30:	mov	r0, #1
   12f34:	add	sp, sp, #12
   12f38:	ldrd	r4, [sp]
   12f3c:	ldrd	r6, [sp, #8]
   12f40:	add	sp, sp, #16
   12f44:	pop	{pc}		; (ldr pc, [sp], #4)
   12f48:	mov	r3, #0
   12f4c:	str	r3, [r0]
   12f50:	str	r3, [r0, #4]
   12f54:	str	r3, [r0, #8]
   12f58:	str	r3, [r0, #12]
   12f5c:	bx	lr
   12f60:	ldr	r3, [r0]
   12f64:	mov	r2, #0
   12f68:	str	r4, [sp, #-8]!
   12f6c:	mov	r4, r0
   12f70:	str	lr, [sp, #4]
   12f74:	cmp	r3, r2
   12f78:	strd	r2, [r1]
   12f7c:	str	r1, [r0]
   12f80:	streq	r1, [r0, #4]
   12f84:	ldr	r0, [r0, #8]
   12f88:	strne	r1, [r3]
   12f8c:	cmp	r0, #0
   12f90:	beq	12fa0 <error@@Base+0xc54>
   12f94:	bl	108d0 <free@plt>
   12f98:	mov	r3, #0
   12f9c:	str	r3, [r4, #8]
   12fa0:	ldr	r3, [r4, #12]
   12fa4:	add	r3, r3, #1
   12fa8:	str	r3, [r4, #12]
   12fac:	ldr	r4, [sp]
   12fb0:	add	sp, sp, #4
   12fb4:	pop	{pc}		; (ldr pc, [sp], #4)
   12fb8:	ldr	r3, [r0, #4]
   12fbc:	mov	r2, #0
   12fc0:	str	r4, [sp, #-8]!
   12fc4:	mov	r4, r0
   12fc8:	str	lr, [sp, #4]
   12fcc:	cmp	r3, r2
   12fd0:	str	r3, [r1]
   12fd4:	str	r2, [r1, #4]
   12fd8:	streq	r1, [r0]
   12fdc:	ldr	r0, [r0, #8]
   12fe0:	strne	r1, [r3, #4]
   12fe4:	str	r1, [r4, #4]
   12fe8:	cmp	r0, #0
   12fec:	beq	12ffc <error@@Base+0xcb0>
   12ff0:	bl	108d0 <free@plt>
   12ff4:	mov	r3, #0
   12ff8:	str	r3, [r4, #8]
   12ffc:	ldr	r3, [r4, #12]
   13000:	add	r3, r3, #1
   13004:	str	r3, [r4, #12]
   13008:	ldr	r4, [sp]
   1300c:	add	sp, sp, #4
   13010:	pop	{pc}		; (ldr pc, [sp], #4)
   13014:	ldr	r3, [r2]
   13018:	str	r4, [sp, #-8]!
   1301c:	mov	r4, r0
   13020:	str	lr, [sp, #4]
   13024:	cmp	r3, #0
   13028:	str	r3, [r1]
   1302c:	str	r2, [r1, #4]
   13030:	streq	r1, [r0]
   13034:	ldr	r0, [r0, #8]
   13038:	strne	r1, [r3, #4]
   1303c:	str	r1, [r2]
   13040:	cmp	r0, #0
   13044:	beq	13054 <error@@Base+0xd08>
   13048:	bl	108d0 <free@plt>
   1304c:	mov	r3, #0
   13050:	str	r3, [r4, #8]
   13054:	ldr	r3, [r4, #12]
   13058:	add	r3, r3, #1
   1305c:	str	r3, [r4, #12]
   13060:	ldr	r4, [sp]
   13064:	add	sp, sp, #4
   13068:	pop	{pc}		; (ldr pc, [sp], #4)
   1306c:	ldr	r3, [r1, #4]
   13070:	str	r4, [sp, #-8]!
   13074:	mov	r4, r0
   13078:	str	lr, [sp, #4]
   1307c:	cmp	r3, #0
   13080:	stm	r2, {r1, r3}
   13084:	str	r2, [r1, #4]
   13088:	streq	r2, [r0, #4]
   1308c:	ldr	r0, [r0, #8]
   13090:	strne	r2, [r3]
   13094:	cmp	r0, #0
   13098:	beq	130a8 <error@@Base+0xd5c>
   1309c:	bl	108d0 <free@plt>
   130a0:	mov	r3, #0
   130a4:	str	r3, [r4, #8]
   130a8:	ldr	r3, [r4, #12]
   130ac:	add	r3, r3, #1
   130b0:	str	r3, [r4, #12]
   130b4:	ldr	r4, [sp]
   130b8:	add	sp, sp, #4
   130bc:	pop	{pc}		; (ldr pc, [sp], #4)
   130c0:	ldrd	r2, [r1]
   130c4:	strd	r4, [sp, #-16]!
   130c8:	mov	r4, r0
   130cc:	mov	r5, #0
   130d0:	str	r6, [sp, #8]
   130d4:	str	lr, [sp, #12]
   130d8:	cmp	r2, #0
   130dc:	strne	r3, [r2, #4]
   130e0:	ldrne	r3, [r1, #4]
   130e4:	streq	r3, [r0]
   130e8:	cmp	r3, #0
   130ec:	streq	r2, [r0, #4]
   130f0:	ldr	r0, [r0, #8]
   130f4:	strne	r2, [r3]
   130f8:	str	r5, [r1]
   130fc:	str	r5, [r1, #4]
   13100:	cmp	r0, r5
   13104:	beq	13110 <error@@Base+0xdc4>
   13108:	bl	108d0 <free@plt>
   1310c:	str	r5, [r4, #8]
   13110:	ldr	r3, [r4, #12]
   13114:	ldr	r6, [sp, #8]
   13118:	sub	r3, r3, #1
   1311c:	str	r3, [r4, #12]
   13120:	ldrd	r4, [sp]
   13124:	add	sp, sp, #12
   13128:	pop	{pc}		; (ldr pc, [sp], #4)
   1312c:	ldr	r3, [r0, #8]
   13130:	cmp	r3, #0
   13134:	bxne	lr
   13138:	ldr	r3, [r0, #12]
   1313c:	cmp	r3, #0
   13140:	bxeq	lr
   13144:	mov	r1, #4
   13148:	str	r4, [sp, #-8]!
   1314c:	mov	r4, r0
   13150:	mov	r0, r3
   13154:	str	lr, [sp, #4]
   13158:	bl	123a8 <error@@Base+0x5c>
   1315c:	ldr	r3, [r4]
   13160:	str	r0, [r4, #8]
   13164:	cmp	r3, #0
   13168:	beq	13180 <error@@Base+0xe34>
   1316c:	sub	r0, r0, #4
   13170:	str	r3, [r0, #4]!
   13174:	ldr	r3, [r3, #4]
   13178:	cmp	r3, #0
   1317c:	bne	13170 <error@@Base+0xe24>
   13180:	ldr	r4, [sp]
   13184:	add	sp, sp, #4
   13188:	pop	{pc}		; (ldr pc, [sp], #4)
   1318c:	strd	r4, [sp, #-16]!
   13190:	ldr	r4, [r0]
   13194:	str	r6, [sp, #8]
   13198:	str	lr, [sp, #12]
   1319c:	cmp	r4, #0
   131a0:	beq	131cc <error@@Base+0xe80>
   131a4:	mov	r5, r0
   131a8:	mov	r6, r1
   131ac:	mov	r1, r4
   131b0:	mov	r0, r5
   131b4:	bl	130c0 <error@@Base+0xd74>
   131b8:	mov	r0, r4
   131bc:	blx	r6
   131c0:	ldr	r4, [r5]
   131c4:	cmp	r4, #0
   131c8:	bne	131ac <error@@Base+0xe60>
   131cc:	ldrd	r4, [sp]
   131d0:	ldr	r6, [sp, #8]
   131d4:	add	sp, sp, #12
   131d8:	pop	{pc}		; (ldr pc, [sp], #4)
   131dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   131e0:	mov	r7, r0
   131e4:	ldr	r6, [pc, #72]	; 13234 <error@@Base+0xee8>
   131e8:	ldr	r5, [pc, #72]	; 13238 <error@@Base+0xeec>
   131ec:	add	r6, pc, r6
   131f0:	add	r5, pc, r5
   131f4:	sub	r6, r6, r5
   131f8:	mov	r8, r1
   131fc:	mov	r9, r2
   13200:	bl	1088c <calloc@plt-0x20>
   13204:	asrs	r6, r6, #2
   13208:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1320c:	mov	r4, #0
   13210:	add	r4, r4, #1
   13214:	ldr	r3, [r5], #4
   13218:	mov	r2, r9
   1321c:	mov	r1, r8
   13220:	mov	r0, r7
   13224:	blx	r3
   13228:	cmp	r6, r4
   1322c:	bne	13210 <error@@Base+0xec4>
   13230:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13234:	andeq	r1, r1, ip, asr #17
   13238:	andeq	r1, r1, r4, asr #17
   1323c:	bx	lr

Disassembly of section .fini:

00013240 <.fini>:
   13240:	push	{r3, lr}
   13244:	pop	{r3, pc}
