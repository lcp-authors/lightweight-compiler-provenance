
../repos/coreutils/src/id:     file format elf32-littlearm


Disassembly of section .init:

000110fc <.init>:
   110fc:	push	{r3, lr}
   11100:	bl	11458 <__assert_fail@plt+0x48>
   11104:	pop	{r3, pc}

Disassembly of section .plt:

00011108 <calloc@plt-0x14>:
   11108:	push	{lr}		; (str lr, [sp, #-4]!)
   1110c:	ldr	lr, [pc, #4]	; 11118 <calloc@plt-0x4>
   11110:	add	lr, pc, lr
   11114:	ldr	pc, [lr, #8]!
   11118:	andeq	sp, r1, r8, ror #29

0001111c <calloc@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #118784	; 0x1d000
   11124:	ldr	pc, [ip, #3816]!	; 0xee8

00011128 <endgrent@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #118784	; 0x1d000
   11130:	ldr	pc, [ip, #3808]!	; 0xee0

00011134 <fputs_unlocked@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #118784	; 0x1d000
   1113c:	ldr	pc, [ip, #3800]!	; 0xed8

00011140 <raise@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #118784	; 0x1d000
   11148:	ldr	pc, [ip, #3792]!	; 0xed0

0001114c <getpwnam@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #118784	; 0x1d000
   11154:	ldr	pc, [ip, #3784]!	; 0xec8

00011158 <is_selinux_enabled@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #118784	; 0x1d000
   11160:	ldr	pc, [ip, #3776]!	; 0xec0

00011164 <strcmp@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #118784	; 0x1d000
   1116c:	ldr	pc, [ip, #3768]!	; 0xeb8

00011170 <getpwuid@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #118784	; 0x1d000
   11178:	ldr	pc, [ip, #3760]!	; 0xeb0

0001117c <printf@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #118784	; 0x1d000
   11184:	ldr	pc, [ip, #3752]!	; 0xea8

00011188 <fflush@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #118784	; 0x1d000
   11190:	ldr	pc, [ip, #3744]!	; 0xea0

00011194 <getuid@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #118784	; 0x1d000
   1119c:	ldr	pc, [ip, #3736]!	; 0xe98

000111a0 <free@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #118784	; 0x1d000
   111a8:	ldr	pc, [ip, #3728]!	; 0xe90

000111ac <_exit@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #118784	; 0x1d000
   111b4:	ldr	pc, [ip, #3720]!	; 0xe88

000111b8 <memcpy@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #118784	; 0x1d000
   111c0:	ldr	pc, [ip, #3712]!	; 0xe80

000111c4 <mbsinit@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #118784	; 0x1d000
   111cc:	ldr	pc, [ip, #3704]!	; 0xe78

000111d0 <memcmp@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #118784	; 0x1d000
   111d8:	ldr	pc, [ip, #3696]!	; 0xe70

000111dc <realloc@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #118784	; 0x1d000
   111e4:	ldr	pc, [ip, #3688]!	; 0xe68

000111e8 <textdomain@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #118784	; 0x1d000
   111f0:	ldr	pc, [ip, #3680]!	; 0xe60

000111f4 <geteuid@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #118784	; 0x1d000
   111fc:	ldr	pc, [ip, #3672]!	; 0xe58

00011200 <iswprint@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #118784	; 0x1d000
   11208:	ldr	pc, [ip, #3664]!	; 0xe50

0001120c <getegid@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #118784	; 0x1d000
   11214:	ldr	pc, [ip, #3656]!	; 0xe48

00011218 <lseek64@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #118784	; 0x1d000
   11220:	ldr	pc, [ip, #3648]!	; 0xe40

00011224 <__ctype_get_mb_cur_max@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #118784	; 0x1d000
   1122c:	ldr	pc, [ip, #3640]!	; 0xe38

00011230 <getcon@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #118784	; 0x1d000
   11238:	ldr	pc, [ip, #3632]!	; 0xe30

0001123c <__fpending@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #118784	; 0x1d000
   11244:	ldr	pc, [ip, #3624]!	; 0xe28

00011248 <ferror_unlocked@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #118784	; 0x1d000
   11250:	ldr	pc, [ip, #3616]!	; 0xe20

00011254 <mbrtowc@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #118784	; 0x1d000
   1125c:	ldr	pc, [ip, #3608]!	; 0xe18

00011260 <error@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #118784	; 0x1d000
   11268:	ldr	pc, [ip, #3600]!	; 0xe10

0001126c <getenv@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #118784	; 0x1d000
   11274:	ldr	pc, [ip, #3592]!	; 0xe08

00011278 <malloc@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #118784	; 0x1d000
   11280:	ldr	pc, [ip, #3584]!	; 0xe00

00011284 <__libc_start_main@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #118784	; 0x1d000
   1128c:	ldr	pc, [ip, #3576]!	; 0xdf8

00011290 <__freading@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #118784	; 0x1d000
   11298:	ldr	pc, [ip, #3568]!	; 0xdf0

0001129c <__gmon_start__@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #118784	; 0x1d000
   112a4:	ldr	pc, [ip, #3560]!	; 0xde8

000112a8 <getopt_long@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #118784	; 0x1d000
   112b0:	ldr	pc, [ip, #3552]!	; 0xde0

000112b4 <__ctype_b_loc@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #118784	; 0x1d000
   112bc:	ldr	pc, [ip, #3544]!	; 0xdd8

000112c0 <exit@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #118784	; 0x1d000
   112c8:	ldr	pc, [ip, #3536]!	; 0xdd0

000112cc <gettext@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #118784	; 0x1d000
   112d4:	ldr	pc, [ip, #3528]!	; 0xdc8

000112d8 <strtoul@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #118784	; 0x1d000
   112e0:	ldr	pc, [ip, #3520]!	; 0xdc0

000112e4 <strlen@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #118784	; 0x1d000
   112ec:	ldr	pc, [ip, #3512]!	; 0xdb8

000112f0 <strchr@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #118784	; 0x1d000
   112f8:	ldr	pc, [ip, #3504]!	; 0xdb0

000112fc <fprintf@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #118784	; 0x1d000
   11304:	ldr	pc, [ip, #3496]!	; 0xda8

00011308 <__errno_location@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #118784	; 0x1d000
   11310:	ldr	pc, [ip, #3488]!	; 0xda0

00011314 <__cxa_atexit@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #118784	; 0x1d000
   1131c:	ldr	pc, [ip, #3480]!	; 0xd98

00011320 <getgid@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #118784	; 0x1d000
   11328:	ldr	pc, [ip, #3472]!	; 0xd90

0001132c <getgrouplist@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #118784	; 0x1d000
   11334:	ldr	pc, [ip, #3464]!	; 0xd88

00011338 <memset@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #118784	; 0x1d000
   11340:	ldr	pc, [ip, #3456]!	; 0xd80

00011344 <setgrent@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #118784	; 0x1d000
   1134c:	ldr	pc, [ip, #3448]!	; 0xd78

00011350 <getgrent@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #118784	; 0x1d000
   11358:	ldr	pc, [ip, #3440]!	; 0xd70

0001135c <fileno@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #118784	; 0x1d000
   11364:	ldr	pc, [ip, #3432]!	; 0xd68

00011368 <fclose@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #118784	; 0x1d000
   11370:	ldr	pc, [ip, #3424]!	; 0xd60

00011374 <fseeko64@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #118784	; 0x1d000
   1137c:	ldr	pc, [ip, #3416]!	; 0xd58

00011380 <setlocale@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #118784	; 0x1d000
   11388:	ldr	pc, [ip, #3408]!	; 0xd50

0001138c <endpwent@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #118784	; 0x1d000
   11394:	ldr	pc, [ip, #3400]!	; 0xd48

00011398 <strrchr@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #118784	; 0x1d000
   113a0:	ldr	pc, [ip, #3392]!	; 0xd40

000113a4 <nl_langinfo@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #118784	; 0x1d000
   113ac:	ldr	pc, [ip, #3384]!	; 0xd38

000113b0 <getgroups@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #118784	; 0x1d000
   113b8:	ldr	pc, [ip, #3376]!	; 0xd30

000113bc <bindtextdomain@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #118784	; 0x1d000
   113c4:	ldr	pc, [ip, #3368]!	; 0xd28

000113c8 <fputs@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #118784	; 0x1d000
   113d0:	ldr	pc, [ip, #3360]!	; 0xd20

000113d4 <strncmp@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #118784	; 0x1d000
   113dc:	ldr	pc, [ip, #3352]!	; 0xd18

000113e0 <abort@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #118784	; 0x1d000
   113e8:	ldr	pc, [ip, #3344]!	; 0xd10

000113ec <getgrgid@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #118784	; 0x1d000
   113f4:	ldr	pc, [ip, #3336]!	; 0xd08

000113f8 <getgrnam@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #118784	; 0x1d000
   11400:	ldr	pc, [ip, #3328]!	; 0xd00

00011404 <putchar_unlocked@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #118784	; 0x1d000
   1140c:	ldr	pc, [ip, #3320]!	; 0xcf8

00011410 <__assert_fail@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #118784	; 0x1d000
   11418:	ldr	pc, [ip, #3312]!	; 0xcf0

Disassembly of section .text:

0001141c <.text>:
   1141c:	mov	fp, #0
   11420:	mov	lr, #0
   11424:	pop	{r1}		; (ldr r1, [sp], #4)
   11428:	mov	r2, sp
   1142c:	push	{r2}		; (str r2, [sp, #-4]!)
   11430:	push	{r0}		; (str r0, [sp, #-4]!)
   11434:	ldr	ip, [pc, #16]	; 1144c <__assert_fail@plt+0x3c>
   11438:	push	{ip}		; (str ip, [sp, #-4]!)
   1143c:	ldr	r0, [pc, #12]	; 11450 <__assert_fail@plt+0x40>
   11440:	ldr	r3, [pc, #12]	; 11454 <__assert_fail@plt+0x44>
   11444:	bl	11284 <__libc_start_main@plt>
   11448:	bl	113e0 <abort@plt>
   1144c:	ldrdeq	lr, [r1], -r8
   11450:	andeq	r1, r1, r4, lsl r8
   11454:	andeq	lr, r1, r8, ror r0
   11458:	ldr	r3, [pc, #20]	; 11474 <__assert_fail@plt+0x64>
   1145c:	ldr	r2, [pc, #20]	; 11478 <__assert_fail@plt+0x68>
   11460:	add	r3, pc, r3
   11464:	ldr	r2, [r3, r2]
   11468:	cmp	r2, #0
   1146c:	bxeq	lr
   11470:	b	1129c <__gmon_start__@plt>
   11474:	muleq	r1, r8, fp
   11478:	andeq	r0, r0, ip, lsl #2
   1147c:	ldr	r0, [pc, #24]	; 1149c <__assert_fail@plt+0x8c>
   11480:	ldr	r3, [pc, #24]	; 114a0 <__assert_fail@plt+0x90>
   11484:	cmp	r3, r0
   11488:	bxeq	lr
   1148c:	ldr	r3, [pc, #16]	; 114a4 <__assert_fail@plt+0x94>
   11490:	cmp	r3, #0
   11494:	bxeq	lr
   11498:	bx	r3
   1149c:	andeq	pc, r2, r0, ror r1	; <UNPREDICTABLE>
   114a0:	andeq	pc, r2, r0, ror r1	; <UNPREDICTABLE>
   114a4:	andeq	r0, r0, r0
   114a8:	ldr	r0, [pc, #36]	; 114d4 <__assert_fail@plt+0xc4>
   114ac:	ldr	r1, [pc, #36]	; 114d8 <__assert_fail@plt+0xc8>
   114b0:	sub	r1, r1, r0
   114b4:	asr	r1, r1, #2
   114b8:	add	r1, r1, r1, lsr #31
   114bc:	asrs	r1, r1, #1
   114c0:	bxeq	lr
   114c4:	ldr	r3, [pc, #16]	; 114dc <__assert_fail@plt+0xcc>
   114c8:	cmp	r3, #0
   114cc:	bxeq	lr
   114d0:	bx	r3
   114d4:	andeq	pc, r2, r0, ror r1	; <UNPREDICTABLE>
   114d8:	andeq	pc, r2, r0, ror r1	; <UNPREDICTABLE>
   114dc:	andeq	r0, r0, r0
   114e0:	push	{r4, lr}
   114e4:	ldr	r4, [pc, #24]	; 11504 <__assert_fail@plt+0xf4>
   114e8:	ldrb	r3, [r4]
   114ec:	cmp	r3, #0
   114f0:	popne	{r4, pc}
   114f4:	bl	1147c <__assert_fail@plt+0x6c>
   114f8:	mov	r3, #1
   114fc:	strb	r3, [r4]
   11500:	pop	{r4, pc}
   11504:	andeq	pc, r2, r8, lsl #3
   11508:	b	114a8 <__assert_fail@plt+0x98>
   1150c:	push	{fp, lr}
   11510:	mov	fp, sp
   11514:	sub	sp, sp, #40	; 0x28
   11518:	str	r0, [fp, #-4]
   1151c:	ldr	r0, [fp, #-4]
   11520:	cmp	r0, #0
   11524:	beq	11574 <__assert_fail@plt+0x164>
   11528:	b	1152c <__assert_fail@plt+0x11c>
   1152c:	movw	r0, #61824	; 0xf180
   11530:	movt	r0, #2
   11534:	ldr	r0, [r0]
   11538:	movw	r1, #57600	; 0xe100
   1153c:	movt	r1, #1
   11540:	str	r0, [fp, #-8]
   11544:	mov	r0, r1
   11548:	bl	112cc <gettext@plt>
   1154c:	movw	r1, #61940	; 0xf1f4
   11550:	movt	r1, #2
   11554:	ldr	r2, [r1]
   11558:	ldr	r1, [fp, #-8]
   1155c:	str	r0, [fp, #-12]
   11560:	mov	r0, r1
   11564:	ldr	r1, [fp, #-12]
   11568:	bl	112fc <fprintf@plt>
   1156c:	str	r0, [fp, #-16]
   11570:	b	11658 <__assert_fail@plt+0x248>
   11574:	movw	r0, #57639	; 0xe127
   11578:	movt	r0, #1
   1157c:	bl	112cc <gettext@plt>
   11580:	movw	lr, #61940	; 0xf1f4
   11584:	movt	lr, #2
   11588:	ldr	r1, [lr]
   1158c:	bl	1117c <printf@plt>
   11590:	movw	r1, #57672	; 0xe148
   11594:	movt	r1, #1
   11598:	str	r0, [sp, #20]
   1159c:	mov	r0, r1
   115a0:	bl	112cc <gettext@plt>
   115a4:	movw	r1, #61828	; 0xf184
   115a8:	movt	r1, #2
   115ac:	ldr	r1, [r1]
   115b0:	bl	11134 <fputs_unlocked@plt>
   115b4:	movw	r1, #57780	; 0xe1b4
   115b8:	movt	r1, #1
   115bc:	str	r0, [sp, #16]
   115c0:	mov	r0, r1
   115c4:	bl	112cc <gettext@plt>
   115c8:	movw	r1, #61828	; 0xf184
   115cc:	movt	r1, #2
   115d0:	ldr	r1, [r1]
   115d4:	bl	11134 <fputs_unlocked@plt>
   115d8:	movw	r1, #58301	; 0xe3bd
   115dc:	movt	r1, #1
   115e0:	str	r0, [sp, #12]
   115e4:	mov	r0, r1
   115e8:	bl	112cc <gettext@plt>
   115ec:	movw	r1, #61828	; 0xf184
   115f0:	movt	r1, #2
   115f4:	ldr	r1, [r1]
   115f8:	bl	11134 <fputs_unlocked@plt>
   115fc:	movw	r1, #58346	; 0xe3ea
   11600:	movt	r1, #1
   11604:	str	r0, [sp, #8]
   11608:	mov	r0, r1
   1160c:	bl	112cc <gettext@plt>
   11610:	movw	r1, #61828	; 0xf184
   11614:	movt	r1, #2
   11618:	ldr	r1, [r1]
   1161c:	bl	11134 <fputs_unlocked@plt>
   11620:	movw	r1, #58400	; 0xe420
   11624:	movt	r1, #1
   11628:	str	r0, [sp, #4]
   1162c:	mov	r0, r1
   11630:	bl	112cc <gettext@plt>
   11634:	movw	r1, #61828	; 0xf184
   11638:	movt	r1, #2
   1163c:	ldr	r1, [r1]
   11640:	bl	11134 <fputs_unlocked@plt>
   11644:	movw	r1, #58471	; 0xe467
   11648:	movt	r1, #1
   1164c:	str	r0, [sp]
   11650:	mov	r0, r1
   11654:	bl	11660 <__assert_fail@plt+0x250>
   11658:	ldr	r0, [fp, #-4]
   1165c:	bl	112c0 <exit@plt>
   11660:	push	{fp, lr}
   11664:	mov	fp, sp
   11668:	sub	sp, sp, #96	; 0x60
   1166c:	add	r1, sp, #36	; 0x24
   11670:	movw	r2, #59620	; 0xe8e4
   11674:	movt	r2, #1
   11678:	str	r0, [fp, #-4]
   1167c:	mov	r0, r1
   11680:	str	r1, [sp, #20]
   11684:	mov	r1, r2
   11688:	movw	r2, #56	; 0x38
   1168c:	bl	111b8 <memcpy@plt>
   11690:	ldr	r0, [fp, #-4]
   11694:	str	r0, [sp, #32]
   11698:	ldr	r0, [sp, #20]
   1169c:	str	r0, [sp, #28]
   116a0:	ldr	r0, [sp, #28]
   116a4:	ldr	r0, [r0]
   116a8:	movw	r1, #0
   116ac:	cmp	r0, r1
   116b0:	movw	r0, #0
   116b4:	str	r0, [sp, #16]
   116b8:	beq	116e4 <__assert_fail@plt+0x2d4>
   116bc:	ldr	r0, [fp, #-4]
   116c0:	ldr	r1, [sp, #28]
   116c4:	ldr	r1, [r1]
   116c8:	bl	11164 <strcmp@plt>
   116cc:	cmp	r0, #0
   116d0:	movw	r0, #0
   116d4:	moveq	r0, #1
   116d8:	mvn	r1, #0
   116dc:	eor	r0, r0, r1
   116e0:	str	r0, [sp, #16]
   116e4:	ldr	r0, [sp, #16]
   116e8:	tst	r0, #1
   116ec:	beq	11700 <__assert_fail@plt+0x2f0>
   116f0:	ldr	r0, [sp, #28]
   116f4:	add	r0, r0, #8
   116f8:	str	r0, [sp, #28]
   116fc:	b	116a0 <__assert_fail@plt+0x290>
   11700:	ldr	r0, [sp, #28]
   11704:	ldr	r0, [r0, #4]
   11708:	movw	r1, #0
   1170c:	cmp	r0, r1
   11710:	beq	11720 <__assert_fail@plt+0x310>
   11714:	ldr	r0, [sp, #28]
   11718:	ldr	r0, [r0, #4]
   1171c:	str	r0, [sp, #32]
   11720:	movw	r0, #59045	; 0xe6a5
   11724:	movt	r0, #1
   11728:	bl	112cc <gettext@plt>
   1172c:	movw	r1, #58562	; 0xe4c2
   11730:	movt	r1, #1
   11734:	movw	r2, #59068	; 0xe6bc
   11738:	movt	r2, #1
   1173c:	bl	1117c <printf@plt>
   11740:	movw	r1, #5
   11744:	str	r0, [sp, #12]
   11748:	mov	r0, r1
   1174c:	movw	r1, #0
   11750:	bl	11380 <setlocale@plt>
   11754:	str	r0, [sp, #24]
   11758:	ldr	r0, [sp, #24]
   1175c:	movw	r1, #0
   11760:	cmp	r0, r1
   11764:	beq	117a4 <__assert_fail@plt+0x394>
   11768:	ldr	r0, [sp, #24]
   1176c:	movw	r1, #59108	; 0xe6e4
   11770:	movt	r1, #1
   11774:	movw	r2, #3
   11778:	bl	113d4 <strncmp@plt>
   1177c:	cmp	r0, #0
   11780:	beq	117a4 <__assert_fail@plt+0x394>
   11784:	movw	r0, #59112	; 0xe6e8
   11788:	movt	r0, #1
   1178c:	bl	112cc <gettext@plt>
   11790:	movw	lr, #61828	; 0xf184
   11794:	movt	lr, #2
   11798:	ldr	r1, [lr]
   1179c:	bl	11134 <fputs_unlocked@plt>
   117a0:	str	r0, [sp, #8]
   117a4:	movw	r0, #59183	; 0xe72f
   117a8:	movt	r0, #1
   117ac:	bl	112cc <gettext@plt>
   117b0:	ldr	r2, [fp, #-4]
   117b4:	movw	r1, #59068	; 0xe6bc
   117b8:	movt	r1, #1
   117bc:	bl	1117c <printf@plt>
   117c0:	movw	r1, #59210	; 0xe74a
   117c4:	movt	r1, #1
   117c8:	str	r0, [sp, #4]
   117cc:	mov	r0, r1
   117d0:	bl	112cc <gettext@plt>
   117d4:	ldr	r1, [sp, #32]
   117d8:	ldr	r2, [sp, #32]
   117dc:	ldr	lr, [fp, #-4]
   117e0:	cmp	r2, lr
   117e4:	movw	r2, #0
   117e8:	moveq	r2, #1
   117ec:	tst	r2, #1
   117f0:	movw	r2, #57779	; 0xe1b3
   117f4:	movt	r2, #1
   117f8:	movw	lr, #58978	; 0xe662
   117fc:	movt	lr, #1
   11800:	movne	r2, lr
   11804:	bl	1117c <printf@plt>
   11808:	str	r0, [sp]
   1180c:	mov	sp, fp
   11810:	pop	{fp, pc}
   11814:	push	{fp, lr}
   11818:	mov	fp, sp
   1181c:	sub	sp, sp, #160	; 0xa0
   11820:	movw	r2, #0
   11824:	str	r2, [fp, #-4]
   11828:	str	r0, [fp, #-8]
   1182c:	str	r1, [fp, #-12]
   11830:	bl	11158 <is_selinux_enabled@plt>
   11834:	cmp	r0, #0
   11838:	movw	r0, #0
   1183c:	movgt	r0, #1
   11840:	and	r0, r0, #1
   11844:	str	r0, [fp, #-20]	; 0xffffffec
   11848:	bl	12288 <__assert_fail@plt+0xe78>
   1184c:	and	r0, r0, #1
   11850:	strb	r0, [fp, #-21]	; 0xffffffeb
   11854:	movw	r0, #0
   11858:	str	r0, [fp, #-28]	; 0xffffffe4
   1185c:	ldr	r0, [fp, #-12]
   11860:	ldr	r0, [r0]
   11864:	bl	1318c <__assert_fail@plt+0x1d7c>
   11868:	movw	r0, #6
   1186c:	movw	r1, #57779	; 0xe1b3
   11870:	movt	r1, #1
   11874:	bl	11380 <setlocale@plt>
   11878:	movw	r1, #58566	; 0xe4c6
   1187c:	movt	r1, #1
   11880:	str	r0, [fp, #-56]	; 0xffffffc8
   11884:	mov	r0, r1
   11888:	movw	r1, #58474	; 0xe46a
   1188c:	movt	r1, #1
   11890:	bl	113bc <bindtextdomain@plt>
   11894:	movw	r1, #58566	; 0xe4c6
   11898:	movt	r1, #1
   1189c:	str	r0, [fp, #-60]	; 0xffffffc4
   118a0:	mov	r0, r1
   118a4:	bl	111e8 <textdomain@plt>
   118a8:	movw	r1, #12012	; 0x2eec
   118ac:	movt	r1, #1
   118b0:	str	r0, [fp, #-64]	; 0xffffffc0
   118b4:	mov	r0, r1
   118b8:	bl	1e0dc <__assert_fail@plt+0xcccc>
   118bc:	str	r0, [fp, #-68]	; 0xffffffbc
   118c0:	ldr	r0, [fp, #-8]
   118c4:	ldr	r1, [fp, #-12]
   118c8:	movw	r2, #58498	; 0xe482
   118cc:	movt	r2, #1
   118d0:	movw	r3, #59460	; 0xe844
   118d4:	movt	r3, #1
   118d8:	movw	ip, #0
   118dc:	str	ip, [sp]
   118e0:	bl	112a8 <getopt_long@plt>
   118e4:	str	r0, [fp, #-16]
   118e8:	cmn	r0, #1
   118ec:	beq	11abc <__assert_fail@plt+0x6ac>
   118f0:	ldr	r0, [fp, #-16]
   118f4:	cmn	r0, #3
   118f8:	str	r0, [fp, #-72]	; 0xffffffb8
   118fc:	beq	11a5c <__assert_fail@plt+0x64c>
   11900:	b	11904 <__assert_fail@plt+0x4f4>
   11904:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11908:	cmn	r0, #2
   1190c:	beq	11a54 <__assert_fail@plt+0x644>
   11910:	b	11914 <__assert_fail@plt+0x504>
   11914:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11918:	cmp	r0, #71	; 0x47
   1191c:	beq	11a40 <__assert_fail@plt+0x630>
   11920:	b	11924 <__assert_fail@plt+0x514>
   11924:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11928:	cmp	r0, #90	; 0x5a
   1192c:	beq	11998 <__assert_fail@plt+0x588>
   11930:	b	11934 <__assert_fail@plt+0x524>
   11934:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11938:	cmp	r0, #97	; 0x61
   1193c:	beq	11994 <__assert_fail@plt+0x584>
   11940:	b	11944 <__assert_fail@plt+0x534>
   11944:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11948:	cmp	r0, #103	; 0x67
   1194c:	beq	119dc <__assert_fail@plt+0x5cc>
   11950:	b	11954 <__assert_fail@plt+0x544>
   11954:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11958:	cmp	r0, #110	; 0x6e
   1195c:	beq	119f0 <__assert_fail@plt+0x5e0>
   11960:	b	11964 <__assert_fail@plt+0x554>
   11964:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11968:	cmp	r0, #114	; 0x72
   1196c:	beq	11a04 <__assert_fail@plt+0x5f4>
   11970:	b	11974 <__assert_fail@plt+0x564>
   11974:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11978:	cmp	r0, #117	; 0x75
   1197c:	beq	11a18 <__assert_fail@plt+0x608>
   11980:	b	11984 <__assert_fail@plt+0x574>
   11984:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11988:	cmp	r0, #122	; 0x7a
   1198c:	beq	11a2c <__assert_fail@plt+0x61c>
   11990:	b	11ab0 <__assert_fail@plt+0x6a0>
   11994:	b	11ab8 <__assert_fail@plt+0x6a8>
   11998:	ldr	r0, [fp, #-20]	; 0xffffffec
   1199c:	cmp	r0, #0
   119a0:	bne	119c8 <__assert_fail@plt+0x5b8>
   119a4:	movw	r0, #58507	; 0xe48b
   119a8:	movt	r0, #1
   119ac:	bl	112cc <gettext@plt>
   119b0:	movw	lr, #1
   119b4:	str	r0, [fp, #-76]	; 0xffffffb4
   119b8:	mov	r0, lr
   119bc:	movw	r1, #0
   119c0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   119c4:	bl	11260 <error@plt>
   119c8:	movw	r0, #61836	; 0xf18c
   119cc:	movt	r0, #2
   119d0:	movw	r1, #1
   119d4:	strb	r1, [r0]
   119d8:	b	11ab8 <__assert_fail@plt+0x6a8>
   119dc:	movw	r0, #61837	; 0xf18d
   119e0:	movt	r0, #2
   119e4:	movw	r1, #1
   119e8:	strb	r1, [r0]
   119ec:	b	11ab8 <__assert_fail@plt+0x6a8>
   119f0:	movw	r0, #61838	; 0xf18e
   119f4:	movt	r0, #2
   119f8:	movw	r1, #1
   119fc:	strb	r1, [r0]
   11a00:	b	11ab8 <__assert_fail@plt+0x6a8>
   11a04:	movw	r0, #61839	; 0xf18f
   11a08:	movt	r0, #2
   11a0c:	movw	r1, #1
   11a10:	strb	r1, [r0]
   11a14:	b	11ab8 <__assert_fail@plt+0x6a8>
   11a18:	movw	r0, #61840	; 0xf190
   11a1c:	movt	r0, #2
   11a20:	movw	r1, #1
   11a24:	strb	r1, [r0]
   11a28:	b	11ab8 <__assert_fail@plt+0x6a8>
   11a2c:	movw	r0, #61841	; 0xf191
   11a30:	movt	r0, #2
   11a34:	movw	r1, #1
   11a38:	strb	r1, [r0]
   11a3c:	b	11ab8 <__assert_fail@plt+0x6a8>
   11a40:	movw	r0, #61842	; 0xf192
   11a44:	movt	r0, #2
   11a48:	movw	r1, #1
   11a4c:	strb	r1, [r0]
   11a50:	b	11ab8 <__assert_fail@plt+0x6a8>
   11a54:	movw	r0, #0
   11a58:	bl	1150c <__assert_fail@plt+0xfc>
   11a5c:	movw	r0, #61828	; 0xf184
   11a60:	movt	r0, #2
   11a64:	ldr	r0, [r0]
   11a68:	movw	r1, #61724	; 0xf11c
   11a6c:	movt	r1, #2
   11a70:	ldr	r3, [r1]
   11a74:	movw	r1, #58471	; 0xe467
   11a78:	movt	r1, #1
   11a7c:	movw	r2, #58562	; 0xe4c2
   11a80:	movt	r2, #1
   11a84:	movw	ip, #58576	; 0xe4d0
   11a88:	movt	ip, #1
   11a8c:	str	ip, [sp]
   11a90:	movw	ip, #58591	; 0xe4df
   11a94:	movt	ip, #1
   11a98:	str	ip, [sp, #4]
   11a9c:	movw	ip, #0
   11aa0:	str	ip, [sp, #8]
   11aa4:	bl	16670 <__assert_fail@plt+0x5260>
   11aa8:	movw	r0, #0
   11aac:	bl	112c0 <exit@plt>
   11ab0:	movw	r0, #1
   11ab4:	bl	1150c <__assert_fail@plt+0xfc>
   11ab8:	b	118c0 <__assert_fail@plt+0x4b0>
   11abc:	ldr	r0, [fp, #-8]
   11ac0:	movw	r1, #61816	; 0xf178
   11ac4:	movt	r1, #2
   11ac8:	ldr	r1, [r1]
   11acc:	sub	r0, r0, r1
   11ad0:	str	r0, [fp, #-32]	; 0xffffffe0
   11ad4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ad8:	cmp	r0, #0
   11adc:	beq	11b18 <__assert_fail@plt+0x708>
   11ae0:	movw	r0, #61836	; 0xf18c
   11ae4:	movt	r0, #2
   11ae8:	ldrb	r0, [r0]
   11aec:	tst	r0, #1
   11af0:	beq	11b18 <__assert_fail@plt+0x708>
   11af4:	movw	r0, #58607	; 0xe4ef
   11af8:	movt	r0, #1
   11afc:	bl	112cc <gettext@plt>
   11b00:	movw	lr, #1
   11b04:	str	r0, [sp, #80]	; 0x50
   11b08:	mov	r0, lr
   11b0c:	movw	r1, #0
   11b10:	ldr	r2, [sp, #80]	; 0x50
   11b14:	bl	11260 <error@plt>
   11b18:	movw	r0, #61840	; 0xf190
   11b1c:	movt	r0, #2
   11b20:	ldrb	r0, [r0]
   11b24:	and	r0, r0, #1
   11b28:	movw	r1, #61837	; 0xf18d
   11b2c:	movt	r1, #2
   11b30:	ldrb	r1, [r1]
   11b34:	and	r1, r1, #1
   11b38:	add	r0, r0, r1
   11b3c:	movw	r1, #61842	; 0xf192
   11b40:	movt	r1, #2
   11b44:	ldrb	r1, [r1]
   11b48:	and	r1, r1, #1
   11b4c:	add	r0, r0, r1
   11b50:	movw	r1, #61836	; 0xf18c
   11b54:	movt	r1, #2
   11b58:	ldrb	r1, [r1]
   11b5c:	and	r1, r1, #1
   11b60:	add	r0, r0, r1
   11b64:	cmp	r0, #1
   11b68:	ble	11b90 <__assert_fail@plt+0x780>
   11b6c:	movw	r0, #58657	; 0xe521
   11b70:	movt	r0, #1
   11b74:	bl	112cc <gettext@plt>
   11b78:	movw	lr, #1
   11b7c:	str	r0, [sp, #76]	; 0x4c
   11b80:	mov	r0, lr
   11b84:	movw	r1, #0
   11b88:	ldr	r2, [sp, #76]	; 0x4c
   11b8c:	bl	11260 <error@plt>
   11b90:	movw	r0, #61840	; 0xf190
   11b94:	movt	r0, #2
   11b98:	ldrb	r0, [r0]
   11b9c:	tst	r0, #1
   11ba0:	movw	r0, #1
   11ba4:	str	r0, [sp, #72]	; 0x48
   11ba8:	bne	11bf4 <__assert_fail@plt+0x7e4>
   11bac:	movw	r0, #61837	; 0xf18d
   11bb0:	movt	r0, #2
   11bb4:	ldrb	r0, [r0]
   11bb8:	tst	r0, #1
   11bbc:	movw	r0, #1
   11bc0:	str	r0, [sp, #72]	; 0x48
   11bc4:	bne	11bf4 <__assert_fail@plt+0x7e4>
   11bc8:	movw	r0, #61842	; 0xf192
   11bcc:	movt	r0, #2
   11bd0:	ldrb	r0, [r0]
   11bd4:	tst	r0, #1
   11bd8:	movw	r0, #1
   11bdc:	str	r0, [sp, #72]	; 0x48
   11be0:	bne	11bf4 <__assert_fail@plt+0x7e4>
   11be4:	movw	r0, #61836	; 0xf18c
   11be8:	movt	r0, #2
   11bec:	ldrb	r0, [r0]
   11bf0:	str	r0, [sp, #72]	; 0x48
   11bf4:	ldr	r0, [sp, #72]	; 0x48
   11bf8:	mvn	r1, #0
   11bfc:	eor	r0, r0, r1
   11c00:	and	r0, r0, #1
   11c04:	strb	r0, [fp, #-33]	; 0xffffffdf
   11c08:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   11c0c:	tst	r0, #1
   11c10:	beq	11c60 <__assert_fail@plt+0x850>
   11c14:	movw	r0, #61839	; 0xf18f
   11c18:	movt	r0, #2
   11c1c:	ldrb	r0, [r0]
   11c20:	tst	r0, #1
   11c24:	bne	11c3c <__assert_fail@plt+0x82c>
   11c28:	movw	r0, #61838	; 0xf18e
   11c2c:	movt	r0, #2
   11c30:	ldrb	r0, [r0]
   11c34:	tst	r0, #1
   11c38:	beq	11c60 <__assert_fail@plt+0x850>
   11c3c:	movw	r0, #58701	; 0xe54d
   11c40:	movt	r0, #1
   11c44:	bl	112cc <gettext@plt>
   11c48:	movw	lr, #1
   11c4c:	str	r0, [sp, #68]	; 0x44
   11c50:	mov	r0, lr
   11c54:	movw	r1, #0
   11c58:	ldr	r2, [sp, #68]	; 0x44
   11c5c:	bl	11260 <error@plt>
   11c60:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   11c64:	tst	r0, #1
   11c68:	beq	11ca4 <__assert_fail@plt+0x894>
   11c6c:	movw	r0, #61841	; 0xf191
   11c70:	movt	r0, #2
   11c74:	ldrb	r0, [r0]
   11c78:	tst	r0, #1
   11c7c:	beq	11ca4 <__assert_fail@plt+0x894>
   11c80:	movw	r0, #58755	; 0xe583
   11c84:	movt	r0, #1
   11c88:	bl	112cc <gettext@plt>
   11c8c:	movw	lr, #1
   11c90:	str	r0, [sp, #64]	; 0x40
   11c94:	mov	r0, lr
   11c98:	movw	r1, #0
   11c9c:	ldr	r2, [sp, #64]	; 0x40
   11ca0:	bl	11260 <error@plt>
   11ca4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ca8:	cmp	r0, #0
   11cac:	bne	11d78 <__assert_fail@plt+0x968>
   11cb0:	movw	r0, #61836	; 0xf18c
   11cb4:	movt	r0, #2
   11cb8:	ldrb	r0, [r0]
   11cbc:	tst	r0, #1
   11cc0:	bne	11ce8 <__assert_fail@plt+0x8d8>
   11cc4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   11cc8:	tst	r0, #1
   11ccc:	beq	11d78 <__assert_fail@plt+0x968>
   11cd0:	movw	r0, #58801	; 0xe5b1
   11cd4:	movt	r0, #1
   11cd8:	bl	1126c <getenv@plt>
   11cdc:	movw	lr, #0
   11ce0:	cmp	r0, lr
   11ce4:	bne	11d78 <__assert_fail@plt+0x968>
   11ce8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11cec:	cmp	r0, #0
   11cf0:	beq	11d1c <__assert_fail@plt+0x90c>
   11cf4:	movw	r0, #61844	; 0xf194
   11cf8:	movt	r0, #2
   11cfc:	bl	11230 <getcon@plt>
   11d00:	cmp	r0, #0
   11d04:	beq	11d1c <__assert_fail@plt+0x90c>
   11d08:	movw	r0, #61836	; 0xf18c
   11d0c:	movt	r0, #2
   11d10:	ldrb	r0, [r0]
   11d14:	tst	r0, #1
   11d18:	bne	11d50 <__assert_fail@plt+0x940>
   11d1c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   11d20:	tst	r0, #1
   11d24:	beq	11d74 <__assert_fail@plt+0x964>
   11d28:	movw	r0, #61844	; 0xf194
   11d2c:	movt	r0, #2
   11d30:	bl	12294 <__assert_fail@plt+0xe84>
   11d34:	cmp	r0, #0
   11d38:	bge	11d74 <__assert_fail@plt+0x964>
   11d3c:	movw	r0, #61836	; 0xf18c
   11d40:	movt	r0, #2
   11d44:	ldrb	r0, [r0]
   11d48:	tst	r0, #1
   11d4c:	beq	11d74 <__assert_fail@plt+0x964>
   11d50:	movw	r0, #58817	; 0xe5c1
   11d54:	movt	r0, #1
   11d58:	bl	112cc <gettext@plt>
   11d5c:	movw	lr, #1
   11d60:	str	r0, [sp, #60]	; 0x3c
   11d64:	mov	r0, lr
   11d68:	movw	r1, #0
   11d6c:	ldr	r2, [sp, #60]	; 0x3c
   11d70:	bl	11260 <error@plt>
   11d74:	b	11d78 <__assert_fail@plt+0x968>
   11d78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d7c:	cmp	r0, #1
   11d80:	bcc	11f78 <__assert_fail@plt+0xb68>
   11d84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d88:	cmp	r0, #1
   11d8c:	movw	r0, #0
   11d90:	movhi	r0, #1
   11d94:	tst	r0, #1
   11d98:	movw	r0, #1
   11d9c:	moveq	r0, #0
   11da0:	cmp	r0, #0
   11da4:	movw	r0, #0
   11da8:	movne	r0, #1
   11dac:	and	r0, r0, #1
   11db0:	movw	r1, #61848	; 0xf198
   11db4:	movt	r1, #2
   11db8:	strb	r0, [r1]
   11dbc:	movw	r0, #61816	; 0xf178
   11dc0:	movt	r0, #2
   11dc4:	ldr	r0, [r0]
   11dc8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11dcc:	add	r0, r1, r0
   11dd0:	str	r0, [fp, #-32]	; 0xffffffe0
   11dd4:	movw	r0, #61816	; 0xf178
   11dd8:	movt	r0, #2
   11ddc:	ldr	r0, [r0]
   11de0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11de4:	cmp	r0, r1
   11de8:	bcs	11f74 <__assert_fail@plt+0xb64>
   11dec:	mov	r0, #0
   11df0:	str	r0, [fp, #-40]	; 0xffffffd8
   11df4:	ldr	r0, [fp, #-12]
   11df8:	movw	r1, #61816	; 0xf178
   11dfc:	movt	r1, #2
   11e00:	ldr	r1, [r1]
   11e04:	add	r0, r0, r1, lsl #2
   11e08:	ldr	r0, [r0]
   11e0c:	str	r0, [fp, #-44]	; 0xffffffd4
   11e10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11e14:	ldrsb	r0, [r0]
   11e18:	cmp	r0, #0
   11e1c:	beq	11e68 <__assert_fail@plt+0xa58>
   11e20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11e24:	movw	r1, #61852	; 0xf19c
   11e28:	movt	r1, #2
   11e2c:	movw	r2, #0
   11e30:	str	r2, [sp, #56]	; 0x38
   11e34:	ldr	r3, [sp, #56]	; 0x38
   11e38:	ldr	ip, [sp, #56]	; 0x38
   11e3c:	str	ip, [sp]
   11e40:	bl	15920 <__assert_fail@plt+0x4510>
   11e44:	movw	r1, #0
   11e48:	cmp	r0, r1
   11e4c:	bne	11e64 <__assert_fail@plt+0xa54>
   11e50:	movw	r0, #61852	; 0xf19c
   11e54:	movt	r0, #2
   11e58:	ldr	r0, [r0]
   11e5c:	bl	11170 <getpwuid@plt>
   11e60:	str	r0, [fp, #-40]	; 0xffffffd8
   11e64:	b	11e68 <__assert_fail@plt+0xa58>
   11e68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e6c:	movw	r1, #0
   11e70:	cmp	r0, r1
   11e74:	bne	11efc <__assert_fail@plt+0xaec>
   11e78:	bl	11308 <__errno_location@plt>
   11e7c:	ldr	r1, [r0]
   11e80:	movw	r0, #58843	; 0xe5db
   11e84:	movt	r0, #1
   11e88:	str	r1, [sp, #52]	; 0x34
   11e8c:	bl	112cc <gettext@plt>
   11e90:	ldr	r1, [fp, #-12]
   11e94:	movw	lr, #61816	; 0xf178
   11e98:	movt	lr, #2
   11e9c:	ldr	lr, [lr]
   11ea0:	add	r1, r1, lr, lsl #2
   11ea4:	ldr	r1, [r1]
   11ea8:	str	r0, [sp, #48]	; 0x30
   11eac:	mov	r0, r1
   11eb0:	bl	157e8 <__assert_fail@plt+0x43d8>
   11eb4:	movw	r1, #0
   11eb8:	str	r0, [sp, #44]	; 0x2c
   11ebc:	mov	r0, r1
   11ec0:	ldr	r1, [sp, #52]	; 0x34
   11ec4:	ldr	r2, [sp, #48]	; 0x30
   11ec8:	ldr	r3, [sp, #44]	; 0x2c
   11ecc:	bl	11260 <error@plt>
   11ed0:	movw	r0, #61720	; 0xf118
   11ed4:	movt	r0, #2
   11ed8:	ldrb	r1, [r0]
   11edc:	and	r1, r1, #1
   11ee0:	and	r1, r1, #0
   11ee4:	cmp	r1, #0
   11ee8:	movw	r1, #0
   11eec:	movne	r1, #1
   11ef0:	and	r1, r1, #1
   11ef4:	strb	r1, [r0]
   11ef8:	b	11f5c <__assert_fail@plt+0xb4c>
   11efc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f00:	ldr	r0, [r0]
   11f04:	bl	195a4 <__assert_fail@plt+0x8194>
   11f08:	str	r0, [fp, #-28]	; 0xffffffe4
   11f0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f10:	ldr	r0, [r0, #8]
   11f14:	movw	lr, #61852	; 0xf19c
   11f18:	movt	lr, #2
   11f1c:	str	r0, [lr]
   11f20:	movw	lr, #61856	; 0xf1a0
   11f24:	movt	lr, #2
   11f28:	str	r0, [lr]
   11f2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f30:	ldr	r0, [r0, #12]
   11f34:	movw	lr, #61860	; 0xf1a4
   11f38:	movt	lr, #2
   11f3c:	str	r0, [lr]
   11f40:	movw	lr, #61864	; 0xf1a8
   11f44:	movt	lr, #2
   11f48:	str	r0, [lr]
   11f4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f50:	bl	122a8 <__assert_fail@plt+0xe98>
   11f54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f58:	bl	1300c <__assert_fail@plt+0x1bfc>
   11f5c:	movw	r0, #61816	; 0xf178
   11f60:	movt	r0, #2
   11f64:	ldr	r1, [r0]
   11f68:	add	r1, r1, #1
   11f6c:	str	r1, [r0]
   11f70:	b	11dd4 <__assert_fail@plt+0x9c4>
   11f74:	b	12268 <__assert_fail@plt+0xe58>
   11f78:	mvn	r0, #0
   11f7c:	str	r0, [fp, #-48]	; 0xffffffd0
   11f80:	str	r0, [fp, #-52]	; 0xffffffcc
   11f84:	movw	r0, #61840	; 0xf190
   11f88:	movt	r0, #2
   11f8c:	ldrb	r0, [r0]
   11f90:	tst	r0, #1
   11f94:	beq	11fb0 <__assert_fail@plt+0xba0>
   11f98:	movw	r0, #61839	; 0xf18f
   11f9c:	movt	r0, #2
   11fa0:	ldrb	r0, [r0]
   11fa4:	tst	r0, #1
   11fa8:	bne	1205c <__assert_fail@plt+0xc4c>
   11fac:	b	11fec <__assert_fail@plt+0xbdc>
   11fb0:	movw	r0, #61837	; 0xf18d
   11fb4:	movt	r0, #2
   11fb8:	ldrb	r0, [r0]
   11fbc:	tst	r0, #1
   11fc0:	bne	1205c <__assert_fail@plt+0xc4c>
   11fc4:	movw	r0, #61842	; 0xf192
   11fc8:	movt	r0, #2
   11fcc:	ldrb	r0, [r0]
   11fd0:	tst	r0, #1
   11fd4:	bne	1205c <__assert_fail@plt+0xc4c>
   11fd8:	movw	r0, #61836	; 0xf18c
   11fdc:	movt	r0, #2
   11fe0:	ldrb	r0, [r0]
   11fe4:	tst	r0, #1
   11fe8:	bne	1205c <__assert_fail@plt+0xc4c>
   11fec:	bl	11308 <__errno_location@plt>
   11ff0:	movw	lr, #0
   11ff4:	str	lr, [r0]
   11ff8:	bl	111f4 <geteuid@plt>
   11ffc:	movw	lr, #61852	; 0xf19c
   12000:	movt	lr, #2
   12004:	str	r0, [lr]
   12008:	ldr	r0, [lr]
   1200c:	ldr	lr, [fp, #-48]	; 0xffffffd0
   12010:	cmp	r0, lr
   12014:	bne	12058 <__assert_fail@plt+0xc48>
   12018:	bl	11308 <__errno_location@plt>
   1201c:	ldr	r0, [r0]
   12020:	cmp	r0, #0
   12024:	beq	12058 <__assert_fail@plt+0xc48>
   12028:	bl	11308 <__errno_location@plt>
   1202c:	ldr	r1, [r0]
   12030:	movw	r0, #58860	; 0xe5ec
   12034:	movt	r0, #1
   12038:	str	r1, [sp, #40]	; 0x28
   1203c:	bl	112cc <gettext@plt>
   12040:	movw	r1, #1
   12044:	str	r0, [sp, #36]	; 0x24
   12048:	mov	r0, r1
   1204c:	ldr	r1, [sp, #40]	; 0x28
   12050:	ldr	r2, [sp, #36]	; 0x24
   12054:	bl	11260 <error@plt>
   12058:	b	1205c <__assert_fail@plt+0xc4c>
   1205c:	movw	r0, #61840	; 0xf190
   12060:	movt	r0, #2
   12064:	ldrb	r0, [r0]
   12068:	tst	r0, #1
   1206c:	beq	12088 <__assert_fail@plt+0xc78>
   12070:	movw	r0, #61839	; 0xf18f
   12074:	movt	r0, #2
   12078:	ldrb	r0, [r0]
   1207c:	tst	r0, #1
   12080:	bne	120c4 <__assert_fail@plt+0xcb4>
   12084:	b	12134 <__assert_fail@plt+0xd24>
   12088:	movw	r0, #61837	; 0xf18d
   1208c:	movt	r0, #2
   12090:	ldrb	r0, [r0]
   12094:	tst	r0, #1
   12098:	bne	12134 <__assert_fail@plt+0xd24>
   1209c:	movw	r0, #61842	; 0xf192
   120a0:	movt	r0, #2
   120a4:	ldrb	r0, [r0]
   120a8:	tst	r0, #1
   120ac:	bne	120c4 <__assert_fail@plt+0xcb4>
   120b0:	movw	r0, #61836	; 0xf18c
   120b4:	movt	r0, #2
   120b8:	ldrb	r0, [r0]
   120bc:	tst	r0, #1
   120c0:	bne	12134 <__assert_fail@plt+0xd24>
   120c4:	bl	11308 <__errno_location@plt>
   120c8:	movw	lr, #0
   120cc:	str	lr, [r0]
   120d0:	bl	11194 <getuid@plt>
   120d4:	movw	lr, #61856	; 0xf1a0
   120d8:	movt	lr, #2
   120dc:	str	r0, [lr]
   120e0:	ldr	r0, [lr]
   120e4:	ldr	lr, [fp, #-48]	; 0xffffffd0
   120e8:	cmp	r0, lr
   120ec:	bne	12130 <__assert_fail@plt+0xd20>
   120f0:	bl	11308 <__errno_location@plt>
   120f4:	ldr	r0, [r0]
   120f8:	cmp	r0, #0
   120fc:	beq	12130 <__assert_fail@plt+0xd20>
   12100:	bl	11308 <__errno_location@plt>
   12104:	ldr	r1, [r0]
   12108:	movw	r0, #58885	; 0xe605
   1210c:	movt	r0, #1
   12110:	str	r1, [sp, #32]
   12114:	bl	112cc <gettext@plt>
   12118:	movw	r1, #1
   1211c:	str	r0, [sp, #28]
   12120:	mov	r0, r1
   12124:	ldr	r1, [sp, #32]
   12128:	ldr	r2, [sp, #28]
   1212c:	bl	11260 <error@plt>
   12130:	b	12134 <__assert_fail@plt+0xd24>
   12134:	movw	r0, #61840	; 0xf190
   12138:	movt	r0, #2
   1213c:	ldrb	r0, [r0]
   12140:	tst	r0, #1
   12144:	bne	12260 <__assert_fail@plt+0xe50>
   12148:	movw	r0, #61837	; 0xf18d
   1214c:	movt	r0, #2
   12150:	ldrb	r0, [r0]
   12154:	tst	r0, #1
   12158:	bne	12184 <__assert_fail@plt+0xd74>
   1215c:	movw	r0, #61842	; 0xf192
   12160:	movt	r0, #2
   12164:	ldrb	r0, [r0]
   12168:	tst	r0, #1
   1216c:	bne	12184 <__assert_fail@plt+0xd74>
   12170:	movw	r0, #61836	; 0xf18c
   12174:	movt	r0, #2
   12178:	ldrb	r0, [r0]
   1217c:	tst	r0, #1
   12180:	bne	12260 <__assert_fail@plt+0xe50>
   12184:	bl	11308 <__errno_location@plt>
   12188:	movw	lr, #0
   1218c:	str	lr, [r0]
   12190:	bl	1120c <getegid@plt>
   12194:	movw	lr, #61860	; 0xf1a4
   12198:	movt	lr, #2
   1219c:	str	r0, [lr]
   121a0:	ldr	r0, [lr]
   121a4:	ldr	lr, [fp, #-52]	; 0xffffffcc
   121a8:	cmp	r0, lr
   121ac:	bne	121f0 <__assert_fail@plt+0xde0>
   121b0:	bl	11308 <__errno_location@plt>
   121b4:	ldr	r0, [r0]
   121b8:	cmp	r0, #0
   121bc:	beq	121f0 <__assert_fail@plt+0xde0>
   121c0:	bl	11308 <__errno_location@plt>
   121c4:	ldr	r1, [r0]
   121c8:	movw	r0, #58905	; 0xe619
   121cc:	movt	r0, #1
   121d0:	str	r1, [sp, #24]
   121d4:	bl	112cc <gettext@plt>
   121d8:	movw	r1, #1
   121dc:	str	r0, [sp, #20]
   121e0:	mov	r0, r1
   121e4:	ldr	r1, [sp, #24]
   121e8:	ldr	r2, [sp, #20]
   121ec:	bl	11260 <error@plt>
   121f0:	bl	11308 <__errno_location@plt>
   121f4:	movw	lr, #0
   121f8:	str	lr, [r0]
   121fc:	bl	11320 <getgid@plt>
   12200:	movw	lr, #61864	; 0xf1a8
   12204:	movt	lr, #2
   12208:	str	r0, [lr]
   1220c:	ldr	r0, [lr]
   12210:	ldr	lr, [fp, #-52]	; 0xffffffcc
   12214:	cmp	r0, lr
   12218:	bne	1225c <__assert_fail@plt+0xe4c>
   1221c:	bl	11308 <__errno_location@plt>
   12220:	ldr	r0, [r0]
   12224:	cmp	r0, #0
   12228:	beq	1225c <__assert_fail@plt+0xe4c>
   1222c:	bl	11308 <__errno_location@plt>
   12230:	ldr	r1, [r0]
   12234:	movw	r0, #58930	; 0xe632
   12238:	movt	r0, #1
   1223c:	str	r1, [sp, #16]
   12240:	bl	112cc <gettext@plt>
   12244:	movw	r1, #1
   12248:	str	r0, [sp, #12]
   1224c:	mov	r0, r1
   12250:	ldr	r1, [sp, #16]
   12254:	ldr	r2, [sp, #12]
   12258:	bl	11260 <error@plt>
   1225c:	b	12260 <__assert_fail@plt+0xe50>
   12260:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12264:	bl	122a8 <__assert_fail@plt+0xe98>
   12268:	movw	r0, #61720	; 0xf118
   1226c:	movt	r0, #2
   12270:	ldrb	r0, [r0]
   12274:	tst	r0, #1
   12278:	movw	r0, #0
   1227c:	moveq	r0, #1
   12280:	mov	sp, fp
   12284:	pop	{fp, pc}
   12288:	movw	r0, #0
   1228c:	and	r0, r0, #1
   12290:	bx	lr
   12294:	sub	sp, sp, #4
   12298:	str	r0, [sp]
   1229c:	mvn	r0, #0
   122a0:	add	sp, sp, #4
   122a4:	bx	lr
   122a8:	push	{fp, lr}
   122ac:	mov	fp, sp
   122b0:	sub	sp, sp, #40	; 0x28
   122b4:	str	r0, [fp, #-4]
   122b8:	movw	r0, #61840	; 0xf190
   122bc:	movt	r0, #2
   122c0:	ldrb	r0, [r0]
   122c4:	tst	r0, #1
   122c8:	beq	12310 <__assert_fail@plt+0xf00>
   122cc:	movw	r0, #61839	; 0xf18f
   122d0:	movt	r0, #2
   122d4:	ldrb	r0, [r0]
   122d8:	tst	r0, #1
   122dc:	beq	122f4 <__assert_fail@plt+0xee4>
   122e0:	movw	r0, #61856	; 0xf1a0
   122e4:	movt	r0, #2
   122e8:	ldr	r0, [r0]
   122ec:	str	r0, [fp, #-8]
   122f0:	b	12304 <__assert_fail@plt+0xef4>
   122f4:	movw	r0, #61852	; 0xf19c
   122f8:	movt	r0, #2
   122fc:	ldr	r0, [r0]
   12300:	str	r0, [fp, #-8]
   12304:	ldr	r0, [fp, #-8]
   12308:	bl	12518 <__assert_fail@plt+0x1108>
   1230c:	b	12494 <__assert_fail@plt+0x1084>
   12310:	movw	r0, #61837	; 0xf18d
   12314:	movt	r0, #2
   12318:	ldrb	r0, [r0]
   1231c:	tst	r0, #1
   12320:	beq	123a4 <__assert_fail@plt+0xf94>
   12324:	movw	r0, #61839	; 0xf18f
   12328:	movt	r0, #2
   1232c:	ldrb	r0, [r0]
   12330:	tst	r0, #1
   12334:	beq	1234c <__assert_fail@plt+0xf3c>
   12338:	movw	r0, #61864	; 0xf1a8
   1233c:	movt	r0, #2
   12340:	ldr	r0, [r0]
   12344:	str	r0, [fp, #-12]
   12348:	b	1235c <__assert_fail@plt+0xf4c>
   1234c:	movw	r0, #61860	; 0xf1a4
   12350:	movt	r0, #2
   12354:	ldr	r0, [r0]
   12358:	str	r0, [fp, #-12]
   1235c:	ldr	r0, [fp, #-12]
   12360:	movw	r1, #61838	; 0xf18e
   12364:	movt	r1, #2
   12368:	ldrb	r1, [r1]
   1236c:	and	r1, r1, #1
   12370:	bl	12d90 <__assert_fail@plt+0x1980>
   12374:	and	r0, r0, #1
   12378:	movw	r1, #61720	; 0xf118
   1237c:	movt	r1, #2
   12380:	ldrb	lr, [r1]
   12384:	and	lr, lr, #1
   12388:	and	r0, lr, r0
   1238c:	cmp	r0, #0
   12390:	movw	r0, #0
   12394:	movne	r0, #1
   12398:	and	r0, r0, #1
   1239c:	strb	r0, [r1]
   123a0:	b	12490 <__assert_fail@plt+0x1080>
   123a4:	movw	r0, #61842	; 0xf192
   123a8:	movt	r0, #2
   123ac:	ldrb	r0, [r0]
   123b0:	tst	r0, #1
   123b4:	beq	12448 <__assert_fail@plt+0x1038>
   123b8:	ldr	r0, [fp, #-4]
   123bc:	movw	r1, #61856	; 0xf1a0
   123c0:	movt	r1, #2
   123c4:	ldr	r1, [r1]
   123c8:	movw	r2, #61864	; 0xf1a8
   123cc:	movt	r2, #2
   123d0:	ldr	r2, [r2]
   123d4:	movw	r3, #61860	; 0xf1a4
   123d8:	movt	r3, #2
   123dc:	ldr	r3, [r3]
   123e0:	movw	ip, #61838	; 0xf18e
   123e4:	movt	ip, #2
   123e8:	ldrb	ip, [ip]
   123ec:	movw	lr, #61841	; 0xf191
   123f0:	movt	lr, #2
   123f4:	ldrb	lr, [lr]
   123f8:	tst	lr, #1
   123fc:	movw	lr, #0
   12400:	moveq	lr, #32
   12404:	and	ip, ip, #1
   12408:	str	ip, [sp]
   1240c:	and	ip, lr, #255	; 0xff
   12410:	str	ip, [sp, #4]
   12414:	bl	12afc <__assert_fail@plt+0x16ec>
   12418:	and	r0, r0, #1
   1241c:	movw	r1, #61720	; 0xf118
   12420:	movt	r1, #2
   12424:	ldrb	r2, [r1]
   12428:	and	r2, r2, #1
   1242c:	and	r0, r2, r0
   12430:	cmp	r0, #0
   12434:	movw	r0, #0
   12438:	movne	r0, #1
   1243c:	and	r0, r0, #1
   12440:	strb	r0, [r1]
   12444:	b	1248c <__assert_fail@plt+0x107c>
   12448:	movw	r0, #61836	; 0xf18c
   1244c:	movt	r0, #2
   12450:	ldrb	r0, [r0]
   12454:	tst	r0, #1
   12458:	beq	12480 <__assert_fail@plt+0x1070>
   1245c:	movw	r0, #61844	; 0xf194
   12460:	movt	r0, #2
   12464:	ldr	r0, [r0]
   12468:	movw	r1, #61828	; 0xf184
   1246c:	movt	r1, #2
   12470:	ldr	r1, [r1]
   12474:	bl	11134 <fputs_unlocked@plt>
   12478:	str	r0, [fp, #-16]
   1247c:	b	12488 <__assert_fail@plt+0x1078>
   12480:	ldr	r0, [fp, #-4]
   12484:	bl	12618 <__assert_fail@plt+0x1208>
   12488:	b	1248c <__assert_fail@plt+0x107c>
   1248c:	b	12490 <__assert_fail@plt+0x1080>
   12490:	b	12494 <__assert_fail@plt+0x1084>
   12494:	movw	r0, #61841	; 0xf191
   12498:	movt	r0, #2
   1249c:	ldrb	r0, [r0]
   124a0:	tst	r0, #1
   124a4:	beq	124f0 <__assert_fail@plt+0x10e0>
   124a8:	movw	r0, #61842	; 0xf192
   124ac:	movt	r0, #2
   124b0:	ldrb	r0, [r0]
   124b4:	tst	r0, #1
   124b8:	beq	124f0 <__assert_fail@plt+0x10e0>
   124bc:	movw	r0, #61848	; 0xf198
   124c0:	movt	r0, #2
   124c4:	ldrb	r0, [r0]
   124c8:	tst	r0, #1
   124cc:	beq	124f0 <__assert_fail@plt+0x10e0>
   124d0:	movw	r0, #0
   124d4:	bl	11404 <putchar_unlocked@plt>
   124d8:	movw	lr, #0
   124dc:	str	r0, [sp, #20]
   124e0:	mov	r0, lr
   124e4:	bl	11404 <putchar_unlocked@plt>
   124e8:	str	r0, [sp, #16]
   124ec:	b	12510 <__assert_fail@plt+0x1100>
   124f0:	movw	r0, #61841	; 0xf191
   124f4:	movt	r0, #2
   124f8:	ldrb	r0, [r0]
   124fc:	tst	r0, #1
   12500:	movw	r0, #0
   12504:	moveq	r0, #10
   12508:	bl	11404 <putchar_unlocked@plt>
   1250c:	str	r0, [sp, #12]
   12510:	mov	sp, fp
   12514:	pop	{fp, pc}
   12518:	push	{fp, lr}
   1251c:	mov	fp, sp
   12520:	sub	sp, sp, #32
   12524:	str	r0, [fp, #-4]
   12528:	movw	r0, #0
   1252c:	str	r0, [fp, #-8]
   12530:	movw	r0, #61838	; 0xf18e
   12534:	movt	r0, #2
   12538:	ldrb	r0, [r0]
   1253c:	tst	r0, #1
   12540:	beq	125c4 <__assert_fail@plt+0x11b4>
   12544:	ldr	r0, [fp, #-4]
   12548:	bl	11170 <getpwuid@plt>
   1254c:	str	r0, [fp, #-8]
   12550:	ldr	r0, [fp, #-8]
   12554:	movw	lr, #0
   12558:	cmp	r0, lr
   1255c:	bne	125c0 <__assert_fail@plt+0x11b0>
   12560:	movw	r0, #59296	; 0xe7a0
   12564:	movt	r0, #1
   12568:	bl	112cc <gettext@plt>
   1256c:	sub	lr, fp, #4
   12570:	str	r0, [sp, #16]
   12574:	mov	r0, lr
   12578:	bl	12a9c <__assert_fail@plt+0x168c>
   1257c:	movw	lr, #0
   12580:	str	r0, [sp, #12]
   12584:	mov	r0, lr
   12588:	mov	r1, lr
   1258c:	ldr	r2, [sp, #16]
   12590:	ldr	r3, [sp, #12]
   12594:	bl	11260 <error@plt>
   12598:	movw	r0, #61720	; 0xf118
   1259c:	movt	r0, #2
   125a0:	ldrb	r1, [r0]
   125a4:	and	r1, r1, #1
   125a8:	and	r1, r1, #0
   125ac:	cmp	r1, #0
   125b0:	movw	r1, #0
   125b4:	movne	r1, #1
   125b8:	and	r1, r1, #1
   125bc:	strb	r1, [r0]
   125c0:	b	125c4 <__assert_fail@plt+0x11b4>
   125c4:	ldr	r0, [fp, #-8]
   125c8:	movw	r1, #0
   125cc:	cmp	r0, r1
   125d0:	beq	125e4 <__assert_fail@plt+0x11d4>
   125d4:	ldr	r0, [fp, #-8]
   125d8:	ldr	r0, [r0]
   125dc:	str	r0, [sp, #8]
   125e0:	b	125f0 <__assert_fail@plt+0x11e0>
   125e4:	sub	r0, fp, #4
   125e8:	bl	12a9c <__assert_fail@plt+0x168c>
   125ec:	str	r0, [sp, #8]
   125f0:	ldr	r0, [sp, #8]
   125f4:	str	r0, [fp, #-12]
   125f8:	ldr	r0, [fp, #-12]
   125fc:	movw	r1, #61828	; 0xf184
   12600:	movt	r1, #2
   12604:	ldr	r1, [r1]
   12608:	bl	11134 <fputs_unlocked@plt>
   1260c:	str	r0, [sp, #4]
   12610:	mov	sp, fp
   12614:	pop	{fp, pc}
   12618:	push	{fp, lr}
   1261c:	mov	fp, sp
   12620:	sub	sp, sp, #136	; 0x88
   12624:	str	r0, [fp, #-4]
   12628:	movw	r0, #59343	; 0xe7cf
   1262c:	movt	r0, #1
   12630:	bl	112cc <gettext@plt>
   12634:	movw	lr, #61856	; 0xf1a0
   12638:	movt	lr, #2
   1263c:	str	r0, [fp, #-32]	; 0xffffffe0
   12640:	mov	r0, lr
   12644:	bl	12a9c <__assert_fail@plt+0x168c>
   12648:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1264c:	str	r0, [fp, #-36]	; 0xffffffdc
   12650:	mov	r0, lr
   12654:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12658:	bl	1117c <printf@plt>
   1265c:	movw	r1, #61856	; 0xf1a0
   12660:	movt	r1, #2
   12664:	ldr	r1, [r1]
   12668:	str	r0, [fp, #-40]	; 0xffffffd8
   1266c:	mov	r0, r1
   12670:	bl	11170 <getpwuid@plt>
   12674:	str	r0, [fp, #-8]
   12678:	ldr	r0, [fp, #-8]
   1267c:	movw	r1, #0
   12680:	cmp	r0, r1
   12684:	beq	126a0 <__assert_fail@plt+0x1290>
   12688:	ldr	r0, [fp, #-8]
   1268c:	ldr	r1, [r0]
   12690:	movw	r0, #59328	; 0xe7c0
   12694:	movt	r0, #1
   12698:	bl	1117c <printf@plt>
   1269c:	str	r0, [fp, #-44]	; 0xffffffd4
   126a0:	movw	r0, #59333	; 0xe7c5
   126a4:	movt	r0, #1
   126a8:	bl	112cc <gettext@plt>
   126ac:	movw	lr, #61864	; 0xf1a8
   126b0:	movt	lr, #2
   126b4:	str	r0, [fp, #-48]	; 0xffffffd0
   126b8:	mov	r0, lr
   126bc:	bl	12acc <__assert_fail@plt+0x16bc>
   126c0:	ldr	lr, [fp, #-48]	; 0xffffffd0
   126c4:	str	r0, [fp, #-52]	; 0xffffffcc
   126c8:	mov	r0, lr
   126cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   126d0:	bl	1117c <printf@plt>
   126d4:	movw	r1, #61864	; 0xf1a8
   126d8:	movt	r1, #2
   126dc:	ldr	r1, [r1]
   126e0:	str	r0, [fp, #-56]	; 0xffffffc8
   126e4:	mov	r0, r1
   126e8:	bl	113ec <getgrgid@plt>
   126ec:	str	r0, [fp, #-12]
   126f0:	ldr	r0, [fp, #-12]
   126f4:	movw	r1, #0
   126f8:	cmp	r0, r1
   126fc:	beq	12718 <__assert_fail@plt+0x1308>
   12700:	ldr	r0, [fp, #-12]
   12704:	ldr	r1, [r0]
   12708:	movw	r0, #59328	; 0xe7c0
   1270c:	movt	r0, #1
   12710:	bl	1117c <printf@plt>
   12714:	str	r0, [fp, #-60]	; 0xffffffc4
   12718:	movw	r0, #61852	; 0xf19c
   1271c:	movt	r0, #2
   12720:	ldr	r0, [r0]
   12724:	movw	r1, #61856	; 0xf1a0
   12728:	movt	r1, #2
   1272c:	ldr	r1, [r1]
   12730:	cmp	r0, r1
   12734:	beq	127b4 <__assert_fail@plt+0x13a4>
   12738:	movw	r0, #59341	; 0xe7cd
   1273c:	movt	r0, #1
   12740:	bl	112cc <gettext@plt>
   12744:	movw	lr, #61852	; 0xf19c
   12748:	movt	lr, #2
   1274c:	str	r0, [fp, #-64]	; 0xffffffc0
   12750:	mov	r0, lr
   12754:	bl	12a9c <__assert_fail@plt+0x168c>
   12758:	ldr	lr, [fp, #-64]	; 0xffffffc0
   1275c:	str	r0, [sp, #68]	; 0x44
   12760:	mov	r0, lr
   12764:	ldr	r1, [sp, #68]	; 0x44
   12768:	bl	1117c <printf@plt>
   1276c:	movw	r1, #61852	; 0xf19c
   12770:	movt	r1, #2
   12774:	ldr	r1, [r1]
   12778:	str	r0, [sp, #64]	; 0x40
   1277c:	mov	r0, r1
   12780:	bl	11170 <getpwuid@plt>
   12784:	str	r0, [fp, #-8]
   12788:	ldr	r0, [fp, #-8]
   1278c:	movw	r1, #0
   12790:	cmp	r0, r1
   12794:	beq	127b0 <__assert_fail@plt+0x13a0>
   12798:	ldr	r0, [fp, #-8]
   1279c:	ldr	r1, [r0]
   127a0:	movw	r0, #59328	; 0xe7c0
   127a4:	movt	r0, #1
   127a8:	bl	1117c <printf@plt>
   127ac:	str	r0, [sp, #60]	; 0x3c
   127b0:	b	127b4 <__assert_fail@plt+0x13a4>
   127b4:	movw	r0, #61860	; 0xf1a4
   127b8:	movt	r0, #2
   127bc:	ldr	r0, [r0]
   127c0:	movw	r1, #61864	; 0xf1a8
   127c4:	movt	r1, #2
   127c8:	ldr	r1, [r1]
   127cc:	cmp	r0, r1
   127d0:	beq	12850 <__assert_fail@plt+0x1440>
   127d4:	movw	r0, #59350	; 0xe7d6
   127d8:	movt	r0, #1
   127dc:	bl	112cc <gettext@plt>
   127e0:	movw	lr, #61860	; 0xf1a4
   127e4:	movt	lr, #2
   127e8:	str	r0, [sp, #56]	; 0x38
   127ec:	mov	r0, lr
   127f0:	bl	12acc <__assert_fail@plt+0x16bc>
   127f4:	ldr	lr, [sp, #56]	; 0x38
   127f8:	str	r0, [sp, #52]	; 0x34
   127fc:	mov	r0, lr
   12800:	ldr	r1, [sp, #52]	; 0x34
   12804:	bl	1117c <printf@plt>
   12808:	movw	r1, #61860	; 0xf1a4
   1280c:	movt	r1, #2
   12810:	ldr	r1, [r1]
   12814:	str	r0, [sp, #48]	; 0x30
   12818:	mov	r0, r1
   1281c:	bl	113ec <getgrgid@plt>
   12820:	str	r0, [fp, #-12]
   12824:	ldr	r0, [fp, #-12]
   12828:	movw	r1, #0
   1282c:	cmp	r0, r1
   12830:	beq	1284c <__assert_fail@plt+0x143c>
   12834:	ldr	r0, [fp, #-12]
   12838:	ldr	r1, [r0]
   1283c:	movw	r0, #59328	; 0xe7c0
   12840:	movt	r0, #1
   12844:	bl	1117c <printf@plt>
   12848:	str	r0, [sp, #44]	; 0x2c
   1284c:	b	12850 <__assert_fail@plt+0x1440>
   12850:	ldr	r0, [fp, #-4]
   12854:	movw	r1, #0
   12858:	cmp	r0, r1
   1285c:	beq	12898 <__assert_fail@plt+0x1488>
   12860:	ldr	r0, [fp, #-8]
   12864:	movw	r1, #0
   12868:	cmp	r0, r1
   1286c:	beq	12880 <__assert_fail@plt+0x1470>
   12870:	ldr	r0, [fp, #-8]
   12874:	ldr	r0, [r0, #12]
   12878:	str	r0, [sp, #40]	; 0x28
   1287c:	b	1288c <__assert_fail@plt+0x147c>
   12880:	mvn	r0, #0
   12884:	str	r0, [sp, #40]	; 0x28
   12888:	b	1288c <__assert_fail@plt+0x147c>
   1288c:	ldr	r0, [sp, #40]	; 0x28
   12890:	str	r0, [fp, #-20]	; 0xffffffec
   12894:	b	128a8 <__assert_fail@plt+0x1498>
   12898:	movw	r0, #61860	; 0xf1a4
   1289c:	movt	r0, #2
   128a0:	ldr	r0, [r0]
   128a4:	str	r0, [fp, #-20]	; 0xffffffec
   128a8:	ldr	r0, [fp, #-4]
   128ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   128b0:	sub	r2, fp, #16
   128b4:	bl	1962c <__assert_fail@plt+0x821c>
   128b8:	str	r0, [fp, #-24]	; 0xffffffe8
   128bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128c0:	cmp	r0, #0
   128c4:	bge	1297c <__assert_fail@plt+0x156c>
   128c8:	ldr	r0, [fp, #-4]
   128cc:	movw	r1, #0
   128d0:	cmp	r0, r1
   128d4:	beq	12920 <__assert_fail@plt+0x1510>
   128d8:	bl	11308 <__errno_location@plt>
   128dc:	ldr	r1, [r0]
   128e0:	movw	r0, #59359	; 0xe7df
   128e4:	movt	r0, #1
   128e8:	str	r1, [sp, #36]	; 0x24
   128ec:	bl	112cc <gettext@plt>
   128f0:	ldr	r1, [fp, #-4]
   128f4:	str	r0, [sp, #32]
   128f8:	mov	r0, r1
   128fc:	bl	157e8 <__assert_fail@plt+0x43d8>
   12900:	movw	r1, #0
   12904:	str	r0, [sp, #28]
   12908:	mov	r0, r1
   1290c:	ldr	r1, [sp, #36]	; 0x24
   12910:	ldr	r2, [sp, #32]
   12914:	ldr	r3, [sp, #28]
   12918:	bl	11260 <error@plt>
   1291c:	b	12950 <__assert_fail@plt+0x1540>
   12920:	bl	11308 <__errno_location@plt>
   12924:	ldr	r1, [r0]
   12928:	movw	r0, #59392	; 0xe800
   1292c:	movt	r0, #1
   12930:	str	r1, [sp, #24]
   12934:	bl	112cc <gettext@plt>
   12938:	movw	r1, #0
   1293c:	str	r0, [sp, #20]
   12940:	mov	r0, r1
   12944:	ldr	r1, [sp, #24]
   12948:	ldr	r2, [sp, #20]
   1294c:	bl	11260 <error@plt>
   12950:	movw	r0, #61720	; 0xf118
   12954:	movt	r0, #2
   12958:	ldrb	r1, [r0]
   1295c:	and	r1, r1, #1
   12960:	and	r1, r1, #0
   12964:	cmp	r1, #0
   12968:	movw	r1, #0
   1296c:	movne	r1, #1
   12970:	and	r1, r1, #1
   12974:	strb	r1, [r0]
   12978:	b	12a94 <__assert_fail@plt+0x1684>
   1297c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12980:	cmp	r0, #0
   12984:	ble	129a8 <__assert_fail@plt+0x1598>
   12988:	movw	r0, #59437	; 0xe82d
   1298c:	movt	r0, #1
   12990:	bl	112cc <gettext@plt>
   12994:	movw	lr, #61828	; 0xf184
   12998:	movt	lr, #2
   1299c:	ldr	r1, [lr]
   129a0:	bl	11134 <fputs_unlocked@plt>
   129a4:	str	r0, [sp, #16]
   129a8:	movw	r0, #0
   129ac:	str	r0, [fp, #-28]	; 0xffffffe4
   129b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   129b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   129b8:	cmp	r0, r1
   129bc:	bge	12a54 <__assert_fail@plt+0x1644>
   129c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   129c4:	cmp	r0, #0
   129c8:	ble	129d8 <__assert_fail@plt+0x15c8>
   129cc:	movw	r0, #44	; 0x2c
   129d0:	bl	11404 <putchar_unlocked@plt>
   129d4:	str	r0, [sp, #12]
   129d8:	ldr	r0, [fp, #-16]
   129dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129e0:	add	r0, r0, r1, lsl #2
   129e4:	bl	12acc <__assert_fail@plt+0x16bc>
   129e8:	movw	r1, #61828	; 0xf184
   129ec:	movt	r1, #2
   129f0:	ldr	r1, [r1]
   129f4:	bl	11134 <fputs_unlocked@plt>
   129f8:	ldr	r1, [fp, #-16]
   129fc:	ldr	lr, [fp, #-28]	; 0xffffffe4
   12a00:	add	r1, r1, lr, lsl #2
   12a04:	ldr	r1, [r1]
   12a08:	str	r0, [sp, #8]
   12a0c:	mov	r0, r1
   12a10:	bl	113ec <getgrgid@plt>
   12a14:	str	r0, [fp, #-12]
   12a18:	ldr	r0, [fp, #-12]
   12a1c:	movw	r1, #0
   12a20:	cmp	r0, r1
   12a24:	beq	12a40 <__assert_fail@plt+0x1630>
   12a28:	ldr	r0, [fp, #-12]
   12a2c:	ldr	r1, [r0]
   12a30:	movw	r0, #59328	; 0xe7c0
   12a34:	movt	r0, #1
   12a38:	bl	1117c <printf@plt>
   12a3c:	str	r0, [sp, #4]
   12a40:	b	12a44 <__assert_fail@plt+0x1634>
   12a44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12a48:	add	r0, r0, #1
   12a4c:	str	r0, [fp, #-28]	; 0xffffffe4
   12a50:	b	129b0 <__assert_fail@plt+0x15a0>
   12a54:	ldr	r0, [fp, #-16]
   12a58:	bl	1300c <__assert_fail@plt+0x1bfc>
   12a5c:	movw	r0, #61844	; 0xf194
   12a60:	movt	r0, #2
   12a64:	ldr	r0, [r0]
   12a68:	movw	lr, #0
   12a6c:	cmp	r0, lr
   12a70:	beq	12a94 <__assert_fail@plt+0x1684>
   12a74:	movw	r0, #59446	; 0xe836
   12a78:	movt	r0, #1
   12a7c:	bl	112cc <gettext@plt>
   12a80:	movw	lr, #61844	; 0xf194
   12a84:	movt	lr, #2
   12a88:	ldr	r1, [lr]
   12a8c:	bl	1117c <printf@plt>
   12a90:	str	r0, [sp]
   12a94:	mov	sp, fp
   12a98:	pop	{fp, pc}
   12a9c:	push	{fp, lr}
   12aa0:	mov	fp, sp
   12aa4:	sub	sp, sp, #8
   12aa8:	str	r0, [sp, #4]
   12aac:	ldr	r0, [sp, #4]
   12ab0:	ldr	r0, [r0]
   12ab4:	mov	r1, #0
   12ab8:	movw	r2, #61868	; 0xf1ac
   12abc:	movt	r2, #2
   12ac0:	bl	1304c <__assert_fail@plt+0x1c3c>
   12ac4:	mov	sp, fp
   12ac8:	pop	{fp, pc}
   12acc:	push	{fp, lr}
   12ad0:	mov	fp, sp
   12ad4:	sub	sp, sp, #8
   12ad8:	str	r0, [sp, #4]
   12adc:	ldr	r0, [sp, #4]
   12ae0:	ldr	r0, [r0]
   12ae4:	mov	r1, #0
   12ae8:	movw	r2, #61889	; 0xf1c1
   12aec:	movt	r2, #2
   12af0:	bl	1304c <__assert_fail@plt+0x1c3c>
   12af4:	mov	sp, fp
   12af8:	pop	{fp, pc}
   12afc:	push	{fp, lr}
   12b00:	mov	fp, sp
   12b04:	sub	sp, sp, #80	; 0x50
   12b08:	ldr	ip, [fp, #12]
   12b0c:	ldr	lr, [fp, #8]
   12b10:	str	r0, [fp, #-8]
   12b14:	str	r1, [fp, #-12]
   12b18:	str	r2, [fp, #-16]
   12b1c:	str	r3, [fp, #-20]	; 0xffffffec
   12b20:	and	r0, lr, #1
   12b24:	strb	r0, [fp, #-21]	; 0xffffffeb
   12b28:	strb	ip, [fp, #-22]	; 0xffffffea
   12b2c:	movw	r0, #1
   12b30:	strb	r0, [fp, #-23]	; 0xffffffe9
   12b34:	movw	r0, #0
   12b38:	str	r0, [fp, #-28]	; 0xffffffe4
   12b3c:	ldr	r1, [fp, #-8]
   12b40:	cmp	r1, r0
   12b44:	beq	12b70 <__assert_fail@plt+0x1760>
   12b48:	ldr	r0, [fp, #-12]
   12b4c:	bl	11170 <getpwuid@plt>
   12b50:	str	r0, [fp, #-28]	; 0xffffffe4
   12b54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b58:	movw	lr, #0
   12b5c:	cmp	r0, lr
   12b60:	bne	12b6c <__assert_fail@plt+0x175c>
   12b64:	movw	r0, #0
   12b68:	strb	r0, [fp, #-23]	; 0xffffffe9
   12b6c:	b	12b70 <__assert_fail@plt+0x1760>
   12b70:	ldr	r0, [fp, #-16]
   12b74:	ldrb	r1, [fp, #-21]	; 0xffffffeb
   12b78:	and	r1, r1, #1
   12b7c:	bl	12d90 <__assert_fail@plt+0x1980>
   12b80:	tst	r0, #1
   12b84:	bne	12b90 <__assert_fail@plt+0x1780>
   12b88:	movw	r0, #0
   12b8c:	strb	r0, [fp, #-23]	; 0xffffffe9
   12b90:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b94:	ldr	r1, [fp, #-16]
   12b98:	cmp	r0, r1
   12b9c:	beq	12bd4 <__assert_fail@plt+0x17c4>
   12ba0:	ldrb	r0, [fp, #-22]	; 0xffffffea
   12ba4:	bl	11404 <putchar_unlocked@plt>
   12ba8:	ldr	lr, [fp, #-20]	; 0xffffffec
   12bac:	ldrb	r1, [fp, #-21]	; 0xffffffeb
   12bb0:	str	r0, [sp, #36]	; 0x24
   12bb4:	mov	r0, lr
   12bb8:	and	r1, r1, #1
   12bbc:	bl	12d90 <__assert_fail@plt+0x1980>
   12bc0:	tst	r0, #1
   12bc4:	bne	12bd0 <__assert_fail@plt+0x17c0>
   12bc8:	movw	r0, #0
   12bcc:	strb	r0, [fp, #-23]	; 0xffffffe9
   12bd0:	b	12bd4 <__assert_fail@plt+0x17c4>
   12bd4:	ldr	r0, [fp, #-8]
   12bd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bdc:	movw	r2, #0
   12be0:	cmp	r1, r2
   12be4:	str	r0, [sp, #32]
   12be8:	beq	12bfc <__assert_fail@plt+0x17ec>
   12bec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12bf0:	ldr	r0, [r0, #12]
   12bf4:	str	r0, [sp, #28]
   12bf8:	b	12c04 <__assert_fail@plt+0x17f4>
   12bfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c00:	str	r0, [sp, #28]
   12c04:	ldr	r0, [sp, #28]
   12c08:	ldr	r1, [sp, #32]
   12c0c:	str	r0, [sp, #24]
   12c10:	mov	r0, r1
   12c14:	ldr	r1, [sp, #24]
   12c18:	sub	r2, fp, #32
   12c1c:	bl	1962c <__assert_fail@plt+0x821c>
   12c20:	str	r0, [fp, #-36]	; 0xffffffdc
   12c24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12c28:	cmp	r0, #0
   12c2c:	bge	12cc8 <__assert_fail@plt+0x18b8>
   12c30:	ldr	r0, [fp, #-8]
   12c34:	movw	r1, #0
   12c38:	cmp	r0, r1
   12c3c:	beq	12c88 <__assert_fail@plt+0x1878>
   12c40:	bl	11308 <__errno_location@plt>
   12c44:	ldr	r1, [r0]
   12c48:	movw	r0, #59359	; 0xe7df
   12c4c:	movt	r0, #1
   12c50:	str	r1, [sp, #20]
   12c54:	bl	112cc <gettext@plt>
   12c58:	ldr	r1, [fp, #-8]
   12c5c:	str	r0, [sp, #16]
   12c60:	mov	r0, r1
   12c64:	bl	157e8 <__assert_fail@plt+0x43d8>
   12c68:	movw	r1, #0
   12c6c:	str	r0, [sp, #12]
   12c70:	mov	r0, r1
   12c74:	ldr	r1, [sp, #20]
   12c78:	ldr	r2, [sp, #16]
   12c7c:	ldr	r3, [sp, #12]
   12c80:	bl	11260 <error@plt>
   12c84:	b	12cb8 <__assert_fail@plt+0x18a8>
   12c88:	bl	11308 <__errno_location@plt>
   12c8c:	ldr	r1, [r0]
   12c90:	movw	r0, #59392	; 0xe800
   12c94:	movt	r0, #1
   12c98:	str	r1, [sp, #8]
   12c9c:	bl	112cc <gettext@plt>
   12ca0:	movw	r1, #0
   12ca4:	str	r0, [sp, #4]
   12ca8:	mov	r0, r1
   12cac:	ldr	r1, [sp, #8]
   12cb0:	ldr	r2, [sp, #4]
   12cb4:	bl	11260 <error@plt>
   12cb8:	movw	r0, #0
   12cbc:	and	r0, r0, #1
   12cc0:	strb	r0, [fp, #-1]
   12cc4:	b	12d80 <__assert_fail@plt+0x1970>
   12cc8:	movw	r0, #0
   12ccc:	str	r0, [sp, #40]	; 0x28
   12cd0:	ldr	r0, [sp, #40]	; 0x28
   12cd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12cd8:	cmp	r0, r1
   12cdc:	bge	12d6c <__assert_fail@plt+0x195c>
   12ce0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ce4:	ldr	r1, [sp, #40]	; 0x28
   12ce8:	add	r0, r0, r1, lsl #2
   12cec:	ldr	r0, [r0]
   12cf0:	ldr	r1, [fp, #-16]
   12cf4:	cmp	r0, r1
   12cf8:	beq	12d58 <__assert_fail@plt+0x1948>
   12cfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d00:	ldr	r1, [sp, #40]	; 0x28
   12d04:	add	r0, r0, r1, lsl #2
   12d08:	ldr	r0, [r0]
   12d0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d10:	cmp	r0, r1
   12d14:	beq	12d58 <__assert_fail@plt+0x1948>
   12d18:	ldrb	r0, [fp, #-22]	; 0xffffffea
   12d1c:	bl	11404 <putchar_unlocked@plt>
   12d20:	ldr	lr, [fp, #-32]	; 0xffffffe0
   12d24:	ldr	r1, [sp, #40]	; 0x28
   12d28:	add	r1, lr, r1, lsl #2
   12d2c:	ldr	r1, [r1]
   12d30:	ldrb	lr, [fp, #-21]	; 0xffffffeb
   12d34:	str	r0, [sp]
   12d38:	mov	r0, r1
   12d3c:	and	r1, lr, #1
   12d40:	bl	12d90 <__assert_fail@plt+0x1980>
   12d44:	tst	r0, #1
   12d48:	bne	12d54 <__assert_fail@plt+0x1944>
   12d4c:	movw	r0, #0
   12d50:	strb	r0, [fp, #-23]	; 0xffffffe9
   12d54:	b	12d58 <__assert_fail@plt+0x1948>
   12d58:	b	12d5c <__assert_fail@plt+0x194c>
   12d5c:	ldr	r0, [sp, #40]	; 0x28
   12d60:	add	r0, r0, #1
   12d64:	str	r0, [sp, #40]	; 0x28
   12d68:	b	12cd0 <__assert_fail@plt+0x18c0>
   12d6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d70:	bl	1300c <__assert_fail@plt+0x1bfc>
   12d74:	ldrb	r0, [fp, #-23]	; 0xffffffe9
   12d78:	and	r0, r0, #1
   12d7c:	strb	r0, [fp, #-1]
   12d80:	ldrb	r0, [fp, #-1]
   12d84:	and	r0, r0, #1
   12d88:	mov	sp, fp
   12d8c:	pop	{fp, pc}
   12d90:	push	{fp, lr}
   12d94:	mov	fp, sp
   12d98:	sub	sp, sp, #32
   12d9c:	str	r0, [fp, #-4]
   12da0:	and	r0, r1, #1
   12da4:	strb	r0, [fp, #-5]
   12da8:	movw	r0, #0
   12dac:	str	r0, [fp, #-12]
   12db0:	movw	r0, #1
   12db4:	strb	r0, [fp, #-13]
   12db8:	ldrb	r0, [fp, #-5]
   12dbc:	tst	r0, #1
   12dc0:	beq	12e14 <__assert_fail@plt+0x1a04>
   12dc4:	ldr	r0, [fp, #-4]
   12dc8:	bl	113ec <getgrgid@plt>
   12dcc:	str	r0, [fp, #-12]
   12dd0:	ldr	r0, [fp, #-12]
   12dd4:	movw	lr, #0
   12dd8:	cmp	r0, lr
   12ddc:	bne	12e10 <__assert_fail@plt+0x1a00>
   12de0:	movw	r0, #59676	; 0xe91c
   12de4:	movt	r0, #1
   12de8:	bl	112cc <gettext@plt>
   12dec:	ldr	r3, [fp, #-4]
   12df0:	movw	lr, #0
   12df4:	str	r0, [sp, #8]
   12df8:	mov	r0, lr
   12dfc:	mov	r1, lr
   12e00:	ldr	r2, [sp, #8]
   12e04:	bl	11260 <error@plt>
   12e08:	movw	r0, #0
   12e0c:	strb	r0, [fp, #-13]
   12e10:	b	12e14 <__assert_fail@plt+0x1a04>
   12e14:	ldr	r0, [fp, #-12]
   12e18:	movw	r1, #0
   12e1c:	cmp	r0, r1
   12e20:	beq	12e34 <__assert_fail@plt+0x1a24>
   12e24:	ldr	r0, [fp, #-12]
   12e28:	ldr	r0, [r0]
   12e2c:	str	r0, [sp, #4]
   12e30:	b	12e40 <__assert_fail@plt+0x1a30>
   12e34:	sub	r0, fp, #4
   12e38:	bl	12e74 <__assert_fail@plt+0x1a64>
   12e3c:	str	r0, [sp, #4]
   12e40:	ldr	r0, [sp, #4]
   12e44:	str	r0, [sp, #12]
   12e48:	ldr	r0, [sp, #12]
   12e4c:	movw	r1, #61828	; 0xf184
   12e50:	movt	r1, #2
   12e54:	ldr	r1, [r1]
   12e58:	bl	11134 <fputs_unlocked@plt>
   12e5c:	ldrb	r1, [fp, #-13]
   12e60:	and	r1, r1, #1
   12e64:	str	r0, [sp]
   12e68:	mov	r0, r1
   12e6c:	mov	sp, fp
   12e70:	pop	{fp, pc}
   12e74:	push	{fp, lr}
   12e78:	mov	fp, sp
   12e7c:	sub	sp, sp, #8
   12e80:	str	r0, [sp, #4]
   12e84:	ldr	r0, [sp, #4]
   12e88:	ldr	r0, [r0]
   12e8c:	mov	r1, #0
   12e90:	movw	r2, #61910	; 0xf1d6
   12e94:	movt	r2, #2
   12e98:	bl	1304c <__assert_fail@plt+0x1c3c>
   12e9c:	mov	sp, fp
   12ea0:	pop	{fp, pc}
   12ea4:	sub	sp, sp, #4
   12ea8:	str	r0, [sp]
   12eac:	ldr	r0, [sp]
   12eb0:	movw	r1, #61932	; 0xf1ec
   12eb4:	movt	r1, #2
   12eb8:	str	r0, [r1]
   12ebc:	add	sp, sp, #4
   12ec0:	bx	lr
   12ec4:	sub	sp, sp, #4
   12ec8:	and	r0, r0, #1
   12ecc:	strb	r0, [sp, #3]
   12ed0:	ldrb	r0, [sp, #3]
   12ed4:	and	r0, r0, #1
   12ed8:	movw	r1, #61936	; 0xf1f0
   12edc:	movt	r1, #2
   12ee0:	strb	r0, [r1]
   12ee4:	add	sp, sp, #4
   12ee8:	bx	lr
   12eec:	push	{fp, lr}
   12ef0:	mov	fp, sp
   12ef4:	sub	sp, sp, #24
   12ef8:	movw	r0, #61828	; 0xf184
   12efc:	movt	r0, #2
   12f00:	ldr	r0, [r0]
   12f04:	bl	1b5f8 <__assert_fail@plt+0xa1e8>
   12f08:	cmp	r0, #0
   12f0c:	beq	12fdc <__assert_fail@plt+0x1bcc>
   12f10:	movw	r0, #61936	; 0xf1f0
   12f14:	movt	r0, #2
   12f18:	ldrb	r0, [r0]
   12f1c:	tst	r0, #1
   12f20:	beq	12f34 <__assert_fail@plt+0x1b24>
   12f24:	bl	11308 <__errno_location@plt>
   12f28:	ldr	r0, [r0]
   12f2c:	cmp	r0, #32
   12f30:	beq	12fdc <__assert_fail@plt+0x1bcc>
   12f34:	movw	r0, #59725	; 0xe94d
   12f38:	movt	r0, #1
   12f3c:	bl	112cc <gettext@plt>
   12f40:	str	r0, [fp, #-4]
   12f44:	movw	r0, #61932	; 0xf1ec
   12f48:	movt	r0, #2
   12f4c:	ldr	r0, [r0]
   12f50:	movw	lr, #0
   12f54:	cmp	r0, lr
   12f58:	beq	12fb0 <__assert_fail@plt+0x1ba0>
   12f5c:	bl	11308 <__errno_location@plt>
   12f60:	ldr	r1, [r0]
   12f64:	movw	r0, #61932	; 0xf1ec
   12f68:	movt	r0, #2
   12f6c:	ldr	r0, [r0]
   12f70:	str	r1, [fp, #-8]
   12f74:	bl	1554c <__assert_fail@plt+0x413c>
   12f78:	ldr	r1, [fp, #-4]
   12f7c:	movw	lr, #0
   12f80:	str	r0, [sp, #12]
   12f84:	mov	r0, lr
   12f88:	ldr	lr, [fp, #-8]
   12f8c:	str	r1, [sp, #8]
   12f90:	mov	r1, lr
   12f94:	movw	r2, #59737	; 0xe959
   12f98:	movt	r2, #1
   12f9c:	ldr	r3, [sp, #12]
   12fa0:	ldr	ip, [sp, #8]
   12fa4:	str	ip, [sp]
   12fa8:	bl	11260 <error@plt>
   12fac:	b	12fcc <__assert_fail@plt+0x1bbc>
   12fb0:	bl	11308 <__errno_location@plt>
   12fb4:	ldr	r1, [r0]
   12fb8:	ldr	r3, [fp, #-4]
   12fbc:	movw	r0, #0
   12fc0:	movw	r2, #59741	; 0xe95d
   12fc4:	movt	r2, #1
   12fc8:	bl	11260 <error@plt>
   12fcc:	movw	r0, #61728	; 0xf120
   12fd0:	movt	r0, #2
   12fd4:	ldr	r0, [r0]
   12fd8:	bl	111ac <_exit@plt>
   12fdc:	movw	r0, #61824	; 0xf180
   12fe0:	movt	r0, #2
   12fe4:	ldr	r0, [r0]
   12fe8:	bl	1b5f8 <__assert_fail@plt+0xa1e8>
   12fec:	cmp	r0, #0
   12ff0:	beq	13004 <__assert_fail@plt+0x1bf4>
   12ff4:	movw	r0, #61728	; 0xf120
   12ff8:	movt	r0, #2
   12ffc:	ldr	r0, [r0]
   13000:	bl	111ac <_exit@plt>
   13004:	mov	sp, fp
   13008:	pop	{fp, pc}
   1300c:	push	{fp, lr}
   13010:	mov	fp, sp
   13014:	sub	sp, sp, #16
   13018:	str	r0, [fp, #-4]
   1301c:	bl	11308 <__errno_location@plt>
   13020:	ldr	r0, [r0]
   13024:	str	r0, [sp, #8]
   13028:	ldr	r0, [fp, #-4]
   1302c:	bl	111a0 <free@plt>
   13030:	ldr	r0, [sp, #8]
   13034:	str	r0, [sp, #4]
   13038:	bl	11308 <__errno_location@plt>
   1303c:	ldr	lr, [sp, #4]
   13040:	str	lr, [r0]
   13044:	mov	sp, fp
   13048:	pop	{fp, pc}
   1304c:	push	{fp, lr}
   13050:	mov	fp, sp
   13054:	sub	sp, sp, #32
   13058:	str	r0, [fp, #-8]
   1305c:	str	r1, [fp, #-4]
   13060:	str	r2, [fp, #-12]
   13064:	ldr	r0, [fp, #-12]
   13068:	add	r0, r0, #20
   1306c:	str	r0, [sp, #16]
   13070:	ldr	r0, [sp, #16]
   13074:	mov	r1, #0
   13078:	strb	r1, [r0]
   1307c:	mov	r0, #1
   13080:	cmp	r0, #0
   13084:	bne	13114 <__assert_fail@plt+0x1d04>
   13088:	b	1308c <__assert_fail@plt+0x1c7c>
   1308c:	b	13090 <__assert_fail@plt+0x1c80>
   13090:	ldr	r0, [fp, #-8]
   13094:	ldr	r1, [fp, #-4]
   13098:	mov	r2, #10
   1309c:	mov	r3, #0
   130a0:	bl	1df04 <__assert_fail@plt+0xcaf4>
   130a4:	rsb	r2, r2, #48	; 0x30
   130a8:	ldr	r3, [sp, #16]
   130ac:	mvn	lr, #0
   130b0:	add	ip, r3, lr
   130b4:	str	ip, [sp, #16]
   130b8:	add	r3, r3, lr
   130bc:	strb	r2, [r3]
   130c0:	str	r0, [sp, #12]
   130c4:	str	r1, [sp, #8]
   130c8:	ldr	r0, [fp, #-8]
   130cc:	ldr	r1, [fp, #-4]
   130d0:	mov	r2, #10
   130d4:	mov	r3, #0
   130d8:	bl	1df04 <__assert_fail@plt+0xcaf4>
   130dc:	str	r1, [fp, #-4]
   130e0:	str	r0, [fp, #-8]
   130e4:	orr	r0, r0, r1
   130e8:	cmp	r0, #0
   130ec:	bne	13090 <__assert_fail@plt+0x1c80>
   130f0:	b	130f4 <__assert_fail@plt+0x1ce4>
   130f4:	ldr	r0, [sp, #16]
   130f8:	mvn	r1, #0
   130fc:	add	r2, r0, r1
   13100:	str	r2, [sp, #16]
   13104:	add	r0, r0, r1
   13108:	movw	r1, #45	; 0x2d
   1310c:	strb	r1, [r0]
   13110:	b	13180 <__assert_fail@plt+0x1d70>
   13114:	b	13118 <__assert_fail@plt+0x1d08>
   13118:	ldr	r0, [fp, #-8]
   1311c:	ldr	r1, [fp, #-4]
   13120:	mov	r2, #10
   13124:	mov	r3, #0
   13128:	bl	1df04 <__assert_fail@plt+0xcaf4>
   1312c:	orr	r2, r2, #48	; 0x30
   13130:	ldr	r3, [sp, #16]
   13134:	mvn	lr, #0
   13138:	add	ip, r3, lr
   1313c:	str	ip, [sp, #16]
   13140:	add	r3, r3, lr
   13144:	strb	r2, [r3]
   13148:	str	r0, [sp, #4]
   1314c:	str	r1, [sp]
   13150:	ldr	r0, [fp, #-8]
   13154:	ldr	r1, [fp, #-4]
   13158:	mov	r2, #10
   1315c:	mov	r3, #0
   13160:	bl	1df04 <__assert_fail@plt+0xcaf4>
   13164:	str	r1, [fp, #-4]
   13168:	str	r0, [fp, #-8]
   1316c:	orr	r0, r0, r1
   13170:	cmp	r0, #0
   13174:	bne	13118 <__assert_fail@plt+0x1d08>
   13178:	b	1317c <__assert_fail@plt+0x1d6c>
   1317c:	b	13180 <__assert_fail@plt+0x1d70>
   13180:	ldr	r0, [sp, #16]
   13184:	mov	sp, fp
   13188:	pop	{fp, pc}
   1318c:	push	{fp, lr}
   13190:	mov	fp, sp
   13194:	sub	sp, sp, #24
   13198:	str	r0, [fp, #-4]
   1319c:	ldr	r0, [fp, #-4]
   131a0:	movw	r1, #0
   131a4:	cmp	r0, r1
   131a8:	bne	131cc <__assert_fail@plt+0x1dbc>
   131ac:	movw	r0, #61824	; 0xf180
   131b0:	movt	r0, #2
   131b4:	ldr	r1, [r0]
   131b8:	movw	r0, #59744	; 0xe960
   131bc:	movt	r0, #1
   131c0:	bl	113c8 <fputs@plt>
   131c4:	str	r0, [sp, #8]
   131c8:	bl	113e0 <abort@plt>
   131cc:	ldr	r0, [fp, #-4]
   131d0:	movw	r1, #47	; 0x2f
   131d4:	bl	11398 <strrchr@plt>
   131d8:	str	r0, [fp, #-8]
   131dc:	ldr	r0, [fp, #-8]
   131e0:	movw	r1, #0
   131e4:	cmp	r0, r1
   131e8:	beq	131fc <__assert_fail@plt+0x1dec>
   131ec:	ldr	r0, [fp, #-8]
   131f0:	add	r0, r0, #1
   131f4:	str	r0, [sp, #4]
   131f8:	b	13204 <__assert_fail@plt+0x1df4>
   131fc:	ldr	r0, [fp, #-4]
   13200:	str	r0, [sp, #4]
   13204:	ldr	r0, [sp, #4]
   13208:	str	r0, [sp, #12]
   1320c:	ldr	r0, [sp, #12]
   13210:	ldr	r1, [fp, #-4]
   13214:	sub	r0, r0, r1
   13218:	cmp	r0, #7
   1321c:	blt	13288 <__assert_fail@plt+0x1e78>
   13220:	ldr	r0, [sp, #12]
   13224:	mvn	r1, #6
   13228:	add	r0, r0, r1
   1322c:	movw	r1, #59800	; 0xe998
   13230:	movt	r1, #1
   13234:	movw	r2, #7
   13238:	bl	113d4 <strncmp@plt>
   1323c:	cmp	r0, #0
   13240:	bne	13288 <__assert_fail@plt+0x1e78>
   13244:	ldr	r0, [sp, #12]
   13248:	str	r0, [fp, #-4]
   1324c:	ldr	r0, [sp, #12]
   13250:	movw	r1, #59808	; 0xe9a0
   13254:	movt	r1, #1
   13258:	movw	r2, #3
   1325c:	bl	113d4 <strncmp@plt>
   13260:	cmp	r0, #0
   13264:	bne	13284 <__assert_fail@plt+0x1e74>
   13268:	ldr	r0, [sp, #12]
   1326c:	add	r0, r0, #3
   13270:	str	r0, [fp, #-4]
   13274:	ldr	r0, [fp, #-4]
   13278:	movw	r1, #61808	; 0xf170
   1327c:	movt	r1, #2
   13280:	str	r0, [r1]
   13284:	b	13288 <__assert_fail@plt+0x1e78>
   13288:	ldr	r0, [fp, #-4]
   1328c:	movw	r1, #61940	; 0xf1f4
   13290:	movt	r1, #2
   13294:	str	r0, [r1]
   13298:	ldr	r0, [fp, #-4]
   1329c:	movw	r1, #61812	; 0xf174
   132a0:	movt	r1, #2
   132a4:	str	r0, [r1]
   132a8:	mov	sp, fp
   132ac:	pop	{fp, pc}
   132b0:	push	{fp, lr}
   132b4:	mov	fp, sp
   132b8:	sub	sp, sp, #24
   132bc:	str	r0, [fp, #-4]
   132c0:	bl	11308 <__errno_location@plt>
   132c4:	ldr	r0, [r0]
   132c8:	str	r0, [fp, #-8]
   132cc:	ldr	r0, [fp, #-4]
   132d0:	movw	lr, #0
   132d4:	cmp	r0, lr
   132d8:	beq	132e8 <__assert_fail@plt+0x1ed8>
   132dc:	ldr	r0, [fp, #-4]
   132e0:	str	r0, [sp, #8]
   132e4:	b	132f8 <__assert_fail@plt+0x1ee8>
   132e8:	movw	r0, #61944	; 0xf1f8
   132ec:	movt	r0, #2
   132f0:	str	r0, [sp, #8]
   132f4:	b	132f8 <__assert_fail@plt+0x1ee8>
   132f8:	ldr	r0, [sp, #8]
   132fc:	movw	r1, #48	; 0x30
   13300:	bl	194dc <__assert_fail@plt+0x80cc>
   13304:	str	r0, [sp, #12]
   13308:	ldr	r0, [fp, #-8]
   1330c:	str	r0, [sp, #4]
   13310:	bl	11308 <__errno_location@plt>
   13314:	ldr	r1, [sp, #4]
   13318:	str	r1, [r0]
   1331c:	ldr	r0, [sp, #12]
   13320:	mov	sp, fp
   13324:	pop	{fp, pc}
   13328:	sub	sp, sp, #8
   1332c:	str	r0, [sp, #4]
   13330:	ldr	r0, [sp, #4]
   13334:	movw	r1, #0
   13338:	cmp	r0, r1
   1333c:	beq	1334c <__assert_fail@plt+0x1f3c>
   13340:	ldr	r0, [sp, #4]
   13344:	str	r0, [sp]
   13348:	b	1335c <__assert_fail@plt+0x1f4c>
   1334c:	movw	r0, #61944	; 0xf1f8
   13350:	movt	r0, #2
   13354:	str	r0, [sp]
   13358:	b	1335c <__assert_fail@plt+0x1f4c>
   1335c:	ldr	r0, [sp]
   13360:	ldr	r0, [r0]
   13364:	add	sp, sp, #8
   13368:	bx	lr
   1336c:	sub	sp, sp, #16
   13370:	str	r0, [sp, #12]
   13374:	str	r1, [sp, #8]
   13378:	ldr	r0, [sp, #8]
   1337c:	ldr	r1, [sp, #12]
   13380:	movw	r2, #0
   13384:	cmp	r1, r2
   13388:	str	r0, [sp, #4]
   1338c:	beq	1339c <__assert_fail@plt+0x1f8c>
   13390:	ldr	r0, [sp, #12]
   13394:	str	r0, [sp]
   13398:	b	133ac <__assert_fail@plt+0x1f9c>
   1339c:	movw	r0, #61944	; 0xf1f8
   133a0:	movt	r0, #2
   133a4:	str	r0, [sp]
   133a8:	b	133ac <__assert_fail@plt+0x1f9c>
   133ac:	ldr	r0, [sp]
   133b0:	ldr	r1, [sp, #4]
   133b4:	str	r1, [r0]
   133b8:	add	sp, sp, #16
   133bc:	bx	lr
   133c0:	sub	sp, sp, #32
   133c4:	str	r0, [sp, #28]
   133c8:	strb	r1, [sp, #27]
   133cc:	str	r2, [sp, #20]
   133d0:	ldrb	r0, [sp, #27]
   133d4:	strb	r0, [sp, #19]
   133d8:	ldr	r0, [sp, #28]
   133dc:	movw	r1, #0
   133e0:	cmp	r0, r1
   133e4:	beq	133f4 <__assert_fail@plt+0x1fe4>
   133e8:	ldr	r0, [sp, #28]
   133ec:	str	r0, [sp]
   133f0:	b	13404 <__assert_fail@plt+0x1ff4>
   133f4:	movw	r0, #61944	; 0xf1f8
   133f8:	movt	r0, #2
   133fc:	str	r0, [sp]
   13400:	b	13404 <__assert_fail@plt+0x1ff4>
   13404:	ldr	r0, [sp]
   13408:	add	r0, r0, #8
   1340c:	ldrb	r1, [sp, #19]
   13410:	lsr	r1, r1, #5
   13414:	add	r0, r0, r1, lsl #2
   13418:	str	r0, [sp, #12]
   1341c:	ldrb	r0, [sp, #19]
   13420:	and	r0, r0, #31
   13424:	str	r0, [sp, #8]
   13428:	ldr	r0, [sp, #12]
   1342c:	ldr	r0, [r0]
   13430:	ldr	r1, [sp, #8]
   13434:	lsr	r0, r0, r1
   13438:	and	r0, r0, #1
   1343c:	str	r0, [sp, #4]
   13440:	ldr	r0, [sp, #20]
   13444:	and	r0, r0, #1
   13448:	ldr	r1, [sp, #4]
   1344c:	eor	r0, r0, r1
   13450:	ldr	r1, [sp, #8]
   13454:	lsl	r0, r0, r1
   13458:	ldr	r1, [sp, #12]
   1345c:	ldr	r2, [r1]
   13460:	eor	r0, r2, r0
   13464:	str	r0, [r1]
   13468:	ldr	r0, [sp, #4]
   1346c:	add	sp, sp, #32
   13470:	bx	lr
   13474:	sub	sp, sp, #12
   13478:	str	r0, [sp, #8]
   1347c:	str	r1, [sp, #4]
   13480:	ldr	r0, [sp, #8]
   13484:	movw	r1, #0
   13488:	cmp	r0, r1
   1348c:	bne	1349c <__assert_fail@plt+0x208c>
   13490:	movw	r0, #61944	; 0xf1f8
   13494:	movt	r0, #2
   13498:	str	r0, [sp, #8]
   1349c:	ldr	r0, [sp, #8]
   134a0:	ldr	r0, [r0, #4]
   134a4:	str	r0, [sp]
   134a8:	ldr	r0, [sp, #4]
   134ac:	ldr	r1, [sp, #8]
   134b0:	str	r0, [r1, #4]
   134b4:	ldr	r0, [sp]
   134b8:	add	sp, sp, #12
   134bc:	bx	lr
   134c0:	push	{fp, lr}
   134c4:	mov	fp, sp
   134c8:	sub	sp, sp, #16
   134cc:	str	r0, [fp, #-4]
   134d0:	str	r1, [sp, #8]
   134d4:	str	r2, [sp, #4]
   134d8:	ldr	r0, [fp, #-4]
   134dc:	movw	r1, #0
   134e0:	cmp	r0, r1
   134e4:	bne	134f4 <__assert_fail@plt+0x20e4>
   134e8:	movw	r0, #61944	; 0xf1f8
   134ec:	movt	r0, #2
   134f0:	str	r0, [fp, #-4]
   134f4:	ldr	r0, [fp, #-4]
   134f8:	movw	r1, #10
   134fc:	str	r1, [r0]
   13500:	ldr	r0, [sp, #8]
   13504:	movw	r1, #0
   13508:	cmp	r0, r1
   1350c:	beq	13520 <__assert_fail@plt+0x2110>
   13510:	ldr	r0, [sp, #4]
   13514:	movw	r1, #0
   13518:	cmp	r0, r1
   1351c:	bne	13524 <__assert_fail@plt+0x2114>
   13520:	bl	113e0 <abort@plt>
   13524:	ldr	r0, [sp, #8]
   13528:	ldr	r1, [fp, #-4]
   1352c:	str	r0, [r1, #40]	; 0x28
   13530:	ldr	r0, [sp, #4]
   13534:	ldr	r1, [fp, #-4]
   13538:	str	r0, [r1, #44]	; 0x2c
   1353c:	mov	sp, fp
   13540:	pop	{fp, pc}
   13544:	push	{r4, r5, r6, sl, fp, lr}
   13548:	add	fp, sp, #16
   1354c:	sub	sp, sp, #64	; 0x40
   13550:	ldr	ip, [fp, #8]
   13554:	str	r0, [fp, #-20]	; 0xffffffec
   13558:	str	r1, [fp, #-24]	; 0xffffffe8
   1355c:	str	r2, [fp, #-28]	; 0xffffffe4
   13560:	str	r3, [fp, #-32]	; 0xffffffe0
   13564:	ldr	r0, [fp, #8]
   13568:	movw	r1, #0
   1356c:	cmp	r0, r1
   13570:	str	ip, [sp, #32]
   13574:	beq	13584 <__assert_fail@plt+0x2174>
   13578:	ldr	r0, [fp, #8]
   1357c:	str	r0, [sp, #28]
   13580:	b	13594 <__assert_fail@plt+0x2184>
   13584:	movw	r0, #61944	; 0xf1f8
   13588:	movt	r0, #2
   1358c:	str	r0, [sp, #28]
   13590:	b	13594 <__assert_fail@plt+0x2184>
   13594:	ldr	r0, [sp, #28]
   13598:	str	r0, [fp, #-36]	; 0xffffffdc
   1359c:	bl	11308 <__errno_location@plt>
   135a0:	ldr	r0, [r0]
   135a4:	str	r0, [sp, #40]	; 0x28
   135a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   135ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   135b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   135b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   135b8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   135bc:	ldr	lr, [lr]
   135c0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   135c4:	ldr	ip, [ip, #4]
   135c8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   135cc:	add	r4, r4, #8
   135d0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   135d4:	ldr	r5, [r5, #40]	; 0x28
   135d8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   135dc:	ldr	r6, [r6, #44]	; 0x2c
   135e0:	str	lr, [sp]
   135e4:	str	ip, [sp, #4]
   135e8:	str	r4, [sp, #8]
   135ec:	str	r5, [sp, #12]
   135f0:	str	r6, [sp, #16]
   135f4:	bl	1361c <__assert_fail@plt+0x220c>
   135f8:	str	r0, [sp, #36]	; 0x24
   135fc:	ldr	r0, [sp, #40]	; 0x28
   13600:	str	r0, [sp, #24]
   13604:	bl	11308 <__errno_location@plt>
   13608:	ldr	r1, [sp, #24]
   1360c:	str	r1, [r0]
   13610:	ldr	r0, [sp, #36]	; 0x24
   13614:	sub	sp, fp, #16
   13618:	pop	{r4, r5, r6, sl, fp, pc}
   1361c:	push	{r4, r5, r6, sl, fp, lr}
   13620:	add	fp, sp, #16
   13624:	sub	sp, sp, #168	; 0xa8
   13628:	ldr	ip, [fp, #24]
   1362c:	ldr	lr, [fp, #20]
   13630:	ldr	r4, [fp, #16]
   13634:	ldr	r5, [fp, #12]
   13638:	ldr	r6, [fp, #8]
   1363c:	str	r0, [fp, #-24]	; 0xffffffe8
   13640:	str	r1, [fp, #-28]	; 0xffffffe4
   13644:	str	r2, [fp, #-32]	; 0xffffffe0
   13648:	str	r3, [fp, #-36]	; 0xffffffdc
   1364c:	movw	r0, #0
   13650:	str	r0, [fp, #-44]	; 0xffffffd4
   13654:	str	r0, [fp, #-48]	; 0xffffffd0
   13658:	str	r0, [fp, #-52]	; 0xffffffcc
   1365c:	str	r0, [fp, #-56]	; 0xffffffc8
   13660:	movw	r0, #0
   13664:	strb	r0, [fp, #-57]	; 0xffffffc7
   13668:	str	r6, [sp, #80]	; 0x50
   1366c:	str	lr, [sp, #76]	; 0x4c
   13670:	str	r4, [sp, #72]	; 0x48
   13674:	str	r5, [sp, #68]	; 0x44
   13678:	str	ip, [sp, #64]	; 0x40
   1367c:	bl	11224 <__ctype_get_mb_cur_max@plt>
   13680:	cmp	r0, #1
   13684:	movw	r0, #0
   13688:	moveq	r0, #1
   1368c:	and	r0, r0, #1
   13690:	strb	r0, [fp, #-58]	; 0xffffffc6
   13694:	ldr	r0, [fp, #12]
   13698:	and	r0, r0, #2
   1369c:	cmp	r0, #0
   136a0:	movw	r0, #0
   136a4:	movne	r0, #1
   136a8:	and	r0, r0, #1
   136ac:	strb	r0, [fp, #-59]	; 0xffffffc5
   136b0:	movw	r0, #0
   136b4:	strb	r0, [fp, #-60]	; 0xffffffc4
   136b8:	strb	r0, [fp, #-61]	; 0xffffffc3
   136bc:	movw	r0, #1
   136c0:	strb	r0, [fp, #-62]	; 0xffffffc2
   136c4:	ldr	r0, [fp, #8]
   136c8:	cmp	r0, #10
   136cc:	str	r0, [sp, #60]	; 0x3c
   136d0:	bhi	138f8 <__assert_fail@plt+0x24e8>
   136d4:	add	r0, pc, #8
   136d8:	ldr	r1, [sp, #60]	; 0x3c
   136dc:	ldr	r0, [r0, r1, lsl #2]
   136e0:	mov	pc, r0
   136e4:	andeq	r3, r1, ip, ror #17
   136e8:	andeq	r3, r1, r8, ror #16
   136ec:	andeq	r3, r1, r8, lsl #17
   136f0:	andeq	r3, r1, r0, ror #16
   136f4:	andeq	r3, r1, r0, ror r8
   136f8:	andeq	r3, r1, r0, lsr #14
   136fc:	andeq	r3, r1, r0, lsl r7
   13700:	andeq	r3, r1, r4, lsl #15
   13704:	muleq	r1, r8, r7
   13708:	muleq	r1, r8, r7
   1370c:	muleq	r1, r8, r7
   13710:	movw	r0, #5
   13714:	str	r0, [fp, #8]
   13718:	movw	r0, #1
   1371c:	strb	r0, [fp, #-59]	; 0xffffffc5
   13720:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13724:	tst	r0, #1
   13728:	bne	13764 <__assert_fail@plt+0x2354>
   1372c:	b	13730 <__assert_fail@plt+0x2320>
   13730:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13734:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13738:	cmp	r0, r1
   1373c:	bcs	13754 <__assert_fail@plt+0x2344>
   13740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13744:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13748:	add	r0, r0, r1
   1374c:	movw	r1, #34	; 0x22
   13750:	strb	r1, [r0]
   13754:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13758:	add	r0, r0, #1
   1375c:	str	r0, [fp, #-44]	; 0xffffffd4
   13760:	b	13764 <__assert_fail@plt+0x2354>
   13764:	movw	r0, #1
   13768:	strb	r0, [fp, #-57]	; 0xffffffc7
   1376c:	movw	r0, #59888	; 0xe9f0
   13770:	movt	r0, #1
   13774:	str	r0, [fp, #-52]	; 0xffffffcc
   13778:	movw	r0, #1
   1377c:	str	r0, [fp, #-56]	; 0xffffffc8
   13780:	b	138fc <__assert_fail@plt+0x24ec>
   13784:	movw	r0, #1
   13788:	strb	r0, [fp, #-57]	; 0xffffffc7
   1378c:	movw	r0, #0
   13790:	strb	r0, [fp, #-59]	; 0xffffffc5
   13794:	b	138fc <__assert_fail@plt+0x24ec>
   13798:	ldr	r0, [fp, #8]
   1379c:	cmp	r0, #10
   137a0:	beq	137cc <__assert_fail@plt+0x23bc>
   137a4:	ldr	r1, [fp, #8]
   137a8:	movw	r0, #59890	; 0xe9f2
   137ac:	movt	r0, #1
   137b0:	bl	1580c <__assert_fail@plt+0x43fc>
   137b4:	str	r0, [fp, #20]
   137b8:	ldr	r1, [fp, #8]
   137bc:	movw	r0, #59892	; 0xe9f4
   137c0:	movt	r0, #1
   137c4:	bl	1580c <__assert_fail@plt+0x43fc>
   137c8:	str	r0, [fp, #24]
   137cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   137d0:	tst	r0, #1
   137d4:	bne	13840 <__assert_fail@plt+0x2430>
   137d8:	ldr	r0, [fp, #20]
   137dc:	str	r0, [fp, #-52]	; 0xffffffcc
   137e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   137e4:	ldrsb	r0, [r0]
   137e8:	cmp	r0, #0
   137ec:	beq	1383c <__assert_fail@plt+0x242c>
   137f0:	b	137f4 <__assert_fail@plt+0x23e4>
   137f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137fc:	cmp	r0, r1
   13800:	bcs	1381c <__assert_fail@plt+0x240c>
   13804:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13808:	ldrb	r0, [r0]
   1380c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13810:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13814:	add	r1, r1, r2
   13818:	strb	r0, [r1]
   1381c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13820:	add	r0, r0, #1
   13824:	str	r0, [fp, #-44]	; 0xffffffd4
   13828:	b	1382c <__assert_fail@plt+0x241c>
   1382c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13830:	add	r0, r0, #1
   13834:	str	r0, [fp, #-52]	; 0xffffffcc
   13838:	b	137e0 <__assert_fail@plt+0x23d0>
   1383c:	b	13840 <__assert_fail@plt+0x2430>
   13840:	movw	r0, #1
   13844:	strb	r0, [fp, #-57]	; 0xffffffc7
   13848:	ldr	r0, [fp, #24]
   1384c:	str	r0, [fp, #-52]	; 0xffffffcc
   13850:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13854:	bl	112e4 <strlen@plt>
   13858:	str	r0, [fp, #-56]	; 0xffffffc8
   1385c:	b	138fc <__assert_fail@plt+0x24ec>
   13860:	movw	r0, #1
   13864:	strb	r0, [fp, #-57]	; 0xffffffc7
   13868:	movw	r0, #1
   1386c:	strb	r0, [fp, #-59]	; 0xffffffc5
   13870:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13874:	tst	r0, #1
   13878:	bne	13884 <__assert_fail@plt+0x2474>
   1387c:	movw	r0, #1
   13880:	strb	r0, [fp, #-57]	; 0xffffffc7
   13884:	b	13888 <__assert_fail@plt+0x2478>
   13888:	movw	r0, #2
   1388c:	str	r0, [fp, #8]
   13890:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13894:	tst	r0, #1
   13898:	bne	138d4 <__assert_fail@plt+0x24c4>
   1389c:	b	138a0 <__assert_fail@plt+0x2490>
   138a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138a8:	cmp	r0, r1
   138ac:	bcs	138c4 <__assert_fail@plt+0x24b4>
   138b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   138b8:	add	r0, r0, r1
   138bc:	movw	r1, #39	; 0x27
   138c0:	strb	r1, [r0]
   138c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138c8:	add	r0, r0, #1
   138cc:	str	r0, [fp, #-44]	; 0xffffffd4
   138d0:	b	138d4 <__assert_fail@plt+0x24c4>
   138d4:	movw	r0, #59892	; 0xe9f4
   138d8:	movt	r0, #1
   138dc:	str	r0, [fp, #-52]	; 0xffffffcc
   138e0:	movw	r0, #1
   138e4:	str	r0, [fp, #-56]	; 0xffffffc8
   138e8:	b	138fc <__assert_fail@plt+0x24ec>
   138ec:	movw	r0, #0
   138f0:	strb	r0, [fp, #-59]	; 0xffffffc5
   138f4:	b	138fc <__assert_fail@plt+0x24ec>
   138f8:	bl	113e0 <abort@plt>
   138fc:	movw	r0, #0
   13900:	str	r0, [fp, #-40]	; 0xffffffd8
   13904:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13908:	cmn	r0, #1
   1390c:	bne	13938 <__assert_fail@plt+0x2528>
   13910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13914:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13918:	add	r0, r0, r1
   1391c:	ldrb	r0, [r0]
   13920:	cmp	r0, #0
   13924:	movw	r0, #0
   13928:	moveq	r0, #1
   1392c:	and	r0, r0, #1
   13930:	str	r0, [sp, #56]	; 0x38
   13934:	b	13954 <__assert_fail@plt+0x2544>
   13938:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1393c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13940:	cmp	r0, r1
   13944:	movw	r0, #0
   13948:	moveq	r0, #1
   1394c:	and	r0, r0, #1
   13950:	str	r0, [sp, #56]	; 0x38
   13954:	ldr	r0, [sp, #56]	; 0x38
   13958:	cmp	r0, #0
   1395c:	movw	r0, #0
   13960:	movne	r0, #1
   13964:	mvn	r1, #0
   13968:	eor	r0, r0, r1
   1396c:	tst	r0, #1
   13970:	beq	14b60 <__assert_fail@plt+0x3750>
   13974:	movw	r0, #0
   13978:	strb	r0, [fp, #-65]	; 0xffffffbf
   1397c:	strb	r0, [fp, #-66]	; 0xffffffbe
   13980:	strb	r0, [fp, #-67]	; 0xffffffbd
   13984:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13988:	tst	r0, #1
   1398c:	beq	13a38 <__assert_fail@plt+0x2628>
   13990:	ldr	r0, [fp, #8]
   13994:	cmp	r0, #2
   13998:	beq	13a38 <__assert_fail@plt+0x2628>
   1399c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   139a0:	cmp	r0, #0
   139a4:	beq	13a38 <__assert_fail@plt+0x2628>
   139a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   139ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
   139b0:	add	r0, r0, r1
   139b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   139b8:	cmn	r1, #1
   139bc:	str	r0, [sp, #52]	; 0x34
   139c0:	bne	139e8 <__assert_fail@plt+0x25d8>
   139c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   139c8:	movw	r1, #1
   139cc:	cmp	r1, r0
   139d0:	bcs	139e8 <__assert_fail@plt+0x25d8>
   139d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139d8:	bl	112e4 <strlen@plt>
   139dc:	str	r0, [fp, #-36]	; 0xffffffdc
   139e0:	str	r0, [sp, #48]	; 0x30
   139e4:	b	139f0 <__assert_fail@plt+0x25e0>
   139e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   139ec:	str	r0, [sp, #48]	; 0x30
   139f0:	ldr	r0, [sp, #48]	; 0x30
   139f4:	ldr	r1, [sp, #52]	; 0x34
   139f8:	cmp	r1, r0
   139fc:	bhi	13a38 <__assert_fail@plt+0x2628>
   13a00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a08:	add	r0, r0, r1
   13a0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13a10:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13a14:	bl	111d0 <memcmp@plt>
   13a18:	cmp	r0, #0
   13a1c:	bne	13a38 <__assert_fail@plt+0x2628>
   13a20:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13a24:	tst	r0, #1
   13a28:	beq	13a30 <__assert_fail@plt+0x2620>
   13a2c:	b	14ce0 <__assert_fail@plt+0x38d0>
   13a30:	movw	r0, #1
   13a34:	strb	r0, [fp, #-65]	; 0xffffffbf
   13a38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a40:	ldrb	r0, [r0, r1]
   13a44:	strb	r0, [fp, #-63]	; 0xffffffc1
   13a48:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13a4c:	mov	r1, r0
   13a50:	cmp	r0, #126	; 0x7e
   13a54:	str	r1, [sp, #44]	; 0x2c
   13a58:	bhi	142c8 <__assert_fail@plt+0x2eb8>
   13a5c:	add	r0, pc, #8
   13a60:	ldr	r1, [sp, #44]	; 0x2c
   13a64:	ldr	r0, [r0, r1, lsl #2]
   13a68:	mov	pc, r0
   13a6c:	andeq	r3, r1, r8, ror #24
   13a70:	andeq	r4, r1, r8, asr #5
   13a74:	andeq	r4, r1, r8, asr #5
   13a78:	andeq	r4, r1, r8, asr #5
   13a7c:	andeq	r4, r1, r8, asr #5
   13a80:	andeq	r4, r1, r8, asr #5
   13a84:	andeq	r4, r1, r8, asr #5
   13a88:	andeq	r4, r1, r0, ror r0
   13a8c:	andeq	r4, r1, ip, ror r0
   13a90:	andeq	r4, r1, ip, lsr #1
   13a94:	muleq	r1, r4, r0
   13a98:	strheq	r4, [r1], -r8
   13a9c:	andeq	r4, r1, r8, lsl #1
   13aa0:	andeq	r4, r1, r0, lsr #1
   13aa4:	andeq	r4, r1, r8, asr #5
   13aa8:	andeq	r4, r1, r8, asr #5
   13aac:	andeq	r4, r1, r8, asr #5
   13ab0:	andeq	r4, r1, r8, asr #5
   13ab4:	andeq	r4, r1, r8, asr #5
   13ab8:	andeq	r4, r1, r8, asr #5
   13abc:	andeq	r4, r1, r8, asr #5
   13ac0:	andeq	r4, r1, r8, asr #5
   13ac4:	andeq	r4, r1, r8, asr #5
   13ac8:	andeq	r4, r1, r8, asr #5
   13acc:	andeq	r4, r1, r8, asr #5
   13ad0:	andeq	r4, r1, r8, asr #5
   13ad4:	andeq	r4, r1, r8, asr #5
   13ad8:	andeq	r4, r1, r8, asr #5
   13adc:	andeq	r4, r1, r8, asr #5
   13ae0:	andeq	r4, r1, r8, asr #5
   13ae4:	andeq	r4, r1, r8, asr #5
   13ae8:	andeq	r4, r1, r8, asr #5
   13aec:	muleq	r1, ip, r1
   13af0:	andeq	r4, r1, r4, lsr #3
   13af4:	andeq	r4, r1, r4, lsr #3
   13af8:	andeq	r4, r1, r8, lsl #3
   13afc:	andeq	r4, r1, r4, lsr #3
   13b00:			; <UNDEFINED> instruction: 0x000142bc
   13b04:	andeq	r4, r1, r4, lsr #3
   13b08:	andeq	r4, r1, r4, asr #3
   13b0c:	andeq	r4, r1, r4, lsr #3
   13b10:	andeq	r4, r1, r4, lsr #3
   13b14:	andeq	r4, r1, r4, lsr #3
   13b18:			; <UNDEFINED> instruction: 0x000142bc
   13b1c:			; <UNDEFINED> instruction: 0x000142bc
   13b20:			; <UNDEFINED> instruction: 0x000142bc
   13b24:			; <UNDEFINED> instruction: 0x000142bc
   13b28:			; <UNDEFINED> instruction: 0x000142bc
   13b2c:			; <UNDEFINED> instruction: 0x000142bc
   13b30:			; <UNDEFINED> instruction: 0x000142bc
   13b34:			; <UNDEFINED> instruction: 0x000142bc
   13b38:			; <UNDEFINED> instruction: 0x000142bc
   13b3c:			; <UNDEFINED> instruction: 0x000142bc
   13b40:			; <UNDEFINED> instruction: 0x000142bc
   13b44:			; <UNDEFINED> instruction: 0x000142bc
   13b48:			; <UNDEFINED> instruction: 0x000142bc
   13b4c:			; <UNDEFINED> instruction: 0x000142bc
   13b50:			; <UNDEFINED> instruction: 0x000142bc
   13b54:			; <UNDEFINED> instruction: 0x000142bc
   13b58:	andeq	r4, r1, r4, lsr #3
   13b5c:	andeq	r4, r1, r4, lsr #3
   13b60:	andeq	r4, r1, r4, lsr #3
   13b64:	andeq	r4, r1, r4, lsr #3
   13b68:	andeq	r3, r1, r4, ror lr
   13b6c:	andeq	r4, r1, r8, asr #5
   13b70:			; <UNDEFINED> instruction: 0x000142bc
   13b74:			; <UNDEFINED> instruction: 0x000142bc
   13b78:			; <UNDEFINED> instruction: 0x000142bc
   13b7c:			; <UNDEFINED> instruction: 0x000142bc
   13b80:			; <UNDEFINED> instruction: 0x000142bc
   13b84:			; <UNDEFINED> instruction: 0x000142bc
   13b88:			; <UNDEFINED> instruction: 0x000142bc
   13b8c:			; <UNDEFINED> instruction: 0x000142bc
   13b90:			; <UNDEFINED> instruction: 0x000142bc
   13b94:			; <UNDEFINED> instruction: 0x000142bc
   13b98:			; <UNDEFINED> instruction: 0x000142bc
   13b9c:			; <UNDEFINED> instruction: 0x000142bc
   13ba0:			; <UNDEFINED> instruction: 0x000142bc
   13ba4:			; <UNDEFINED> instruction: 0x000142bc
   13ba8:			; <UNDEFINED> instruction: 0x000142bc
   13bac:			; <UNDEFINED> instruction: 0x000142bc
   13bb0:			; <UNDEFINED> instruction: 0x000142bc
   13bb4:			; <UNDEFINED> instruction: 0x000142bc
   13bb8:			; <UNDEFINED> instruction: 0x000142bc
   13bbc:			; <UNDEFINED> instruction: 0x000142bc
   13bc0:			; <UNDEFINED> instruction: 0x000142bc
   13bc4:			; <UNDEFINED> instruction: 0x000142bc
   13bc8:			; <UNDEFINED> instruction: 0x000142bc
   13bcc:			; <UNDEFINED> instruction: 0x000142bc
   13bd0:			; <UNDEFINED> instruction: 0x000142bc
   13bd4:			; <UNDEFINED> instruction: 0x000142bc
   13bd8:	andeq	r4, r1, r4, lsr #3
   13bdc:	andeq	r4, r1, r4, asr #1
   13be0:			; <UNDEFINED> instruction: 0x000142bc
   13be4:	andeq	r4, r1, r4, lsr #3
   13be8:			; <UNDEFINED> instruction: 0x000142bc
   13bec:	andeq	r4, r1, r4, lsr #3
   13bf0:			; <UNDEFINED> instruction: 0x000142bc
   13bf4:			; <UNDEFINED> instruction: 0x000142bc
   13bf8:			; <UNDEFINED> instruction: 0x000142bc
   13bfc:			; <UNDEFINED> instruction: 0x000142bc
   13c00:			; <UNDEFINED> instruction: 0x000142bc
   13c04:			; <UNDEFINED> instruction: 0x000142bc
   13c08:			; <UNDEFINED> instruction: 0x000142bc
   13c0c:			; <UNDEFINED> instruction: 0x000142bc
   13c10:			; <UNDEFINED> instruction: 0x000142bc
   13c14:			; <UNDEFINED> instruction: 0x000142bc
   13c18:			; <UNDEFINED> instruction: 0x000142bc
   13c1c:			; <UNDEFINED> instruction: 0x000142bc
   13c20:			; <UNDEFINED> instruction: 0x000142bc
   13c24:			; <UNDEFINED> instruction: 0x000142bc
   13c28:			; <UNDEFINED> instruction: 0x000142bc
   13c2c:			; <UNDEFINED> instruction: 0x000142bc
   13c30:			; <UNDEFINED> instruction: 0x000142bc
   13c34:			; <UNDEFINED> instruction: 0x000142bc
   13c38:			; <UNDEFINED> instruction: 0x000142bc
   13c3c:			; <UNDEFINED> instruction: 0x000142bc
   13c40:			; <UNDEFINED> instruction: 0x000142bc
   13c44:			; <UNDEFINED> instruction: 0x000142bc
   13c48:			; <UNDEFINED> instruction: 0x000142bc
   13c4c:			; <UNDEFINED> instruction: 0x000142bc
   13c50:			; <UNDEFINED> instruction: 0x000142bc
   13c54:			; <UNDEFINED> instruction: 0x000142bc
   13c58:	andeq	r4, r1, r4, asr r1
   13c5c:	andeq	r4, r1, r4, lsr #3
   13c60:	andeq	r4, r1, r4, asr r1
   13c64:	andeq	r4, r1, r8, lsl #3
   13c68:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13c6c:	tst	r0, #1
   13c70:	beq	13e58 <__assert_fail@plt+0x2a48>
   13c74:	b	13c78 <__assert_fail@plt+0x2868>
   13c78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c7c:	tst	r0, #1
   13c80:	beq	13c88 <__assert_fail@plt+0x2878>
   13c84:	b	14ce0 <__assert_fail@plt+0x38d0>
   13c88:	movw	r0, #1
   13c8c:	strb	r0, [fp, #-66]	; 0xffffffbe
   13c90:	ldr	r0, [fp, #8]
   13c94:	cmp	r0, #2
   13c98:	bne	13d4c <__assert_fail@plt+0x293c>
   13c9c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13ca0:	tst	r0, #1
   13ca4:	bne	13d4c <__assert_fail@plt+0x293c>
   13ca8:	b	13cac <__assert_fail@plt+0x289c>
   13cac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cb4:	cmp	r0, r1
   13cb8:	bcs	13cd0 <__assert_fail@plt+0x28c0>
   13cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cc4:	add	r0, r0, r1
   13cc8:	movw	r1, #39	; 0x27
   13ccc:	strb	r1, [r0]
   13cd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cd4:	add	r0, r0, #1
   13cd8:	str	r0, [fp, #-44]	; 0xffffffd4
   13cdc:	b	13ce0 <__assert_fail@plt+0x28d0>
   13ce0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ce4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ce8:	cmp	r0, r1
   13cec:	bcs	13d04 <__assert_fail@plt+0x28f4>
   13cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cf4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cf8:	add	r0, r0, r1
   13cfc:	movw	r1, #36	; 0x24
   13d00:	strb	r1, [r0]
   13d04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d08:	add	r0, r0, #1
   13d0c:	str	r0, [fp, #-44]	; 0xffffffd4
   13d10:	b	13d14 <__assert_fail@plt+0x2904>
   13d14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d1c:	cmp	r0, r1
   13d20:	bcs	13d38 <__assert_fail@plt+0x2928>
   13d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d2c:	add	r0, r0, r1
   13d30:	movw	r1, #39	; 0x27
   13d34:	strb	r1, [r0]
   13d38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d3c:	add	r0, r0, #1
   13d40:	str	r0, [fp, #-44]	; 0xffffffd4
   13d44:	movw	r0, #1
   13d48:	strb	r0, [fp, #-60]	; 0xffffffc4
   13d4c:	b	13d50 <__assert_fail@plt+0x2940>
   13d50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d58:	cmp	r0, r1
   13d5c:	bcs	13d74 <__assert_fail@plt+0x2964>
   13d60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d68:	add	r0, r0, r1
   13d6c:	movw	r1, #92	; 0x5c
   13d70:	strb	r1, [r0]
   13d74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d78:	add	r0, r0, #1
   13d7c:	str	r0, [fp, #-44]	; 0xffffffd4
   13d80:	b	13d84 <__assert_fail@plt+0x2974>
   13d84:	ldr	r0, [fp, #8]
   13d88:	cmp	r0, #2
   13d8c:	beq	13e4c <__assert_fail@plt+0x2a3c>
   13d90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13d94:	add	r0, r0, #1
   13d98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13d9c:	cmp	r0, r1
   13da0:	bcs	13e4c <__assert_fail@plt+0x2a3c>
   13da4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13da8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13dac:	add	r1, r1, #1
   13db0:	add	r0, r0, r1
   13db4:	ldrb	r0, [r0]
   13db8:	movw	r1, #48	; 0x30
   13dbc:	cmp	r1, r0
   13dc0:	bgt	13e4c <__assert_fail@plt+0x2a3c>
   13dc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13dc8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13dcc:	add	r1, r1, #1
   13dd0:	add	r0, r0, r1
   13dd4:	ldrb	r0, [r0]
   13dd8:	cmp	r0, #57	; 0x39
   13ddc:	bgt	13e4c <__assert_fail@plt+0x2a3c>
   13de0:	b	13de4 <__assert_fail@plt+0x29d4>
   13de4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13de8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13dec:	cmp	r0, r1
   13df0:	bcs	13e08 <__assert_fail@plt+0x29f8>
   13df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13df8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13dfc:	add	r0, r0, r1
   13e00:	movw	r1, #48	; 0x30
   13e04:	strb	r1, [r0]
   13e08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e0c:	add	r0, r0, #1
   13e10:	str	r0, [fp, #-44]	; 0xffffffd4
   13e14:	b	13e18 <__assert_fail@plt+0x2a08>
   13e18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e20:	cmp	r0, r1
   13e24:	bcs	13e3c <__assert_fail@plt+0x2a2c>
   13e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e30:	add	r0, r0, r1
   13e34:	movw	r1, #48	; 0x30
   13e38:	strb	r1, [r0]
   13e3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e40:	add	r0, r0, #1
   13e44:	str	r0, [fp, #-44]	; 0xffffffd4
   13e48:	b	13e4c <__assert_fail@plt+0x2a3c>
   13e4c:	movw	r0, #48	; 0x30
   13e50:	strb	r0, [fp, #-63]	; 0xffffffc1
   13e54:	b	13e70 <__assert_fail@plt+0x2a60>
   13e58:	ldr	r0, [fp, #12]
   13e5c:	and	r0, r0, #1
   13e60:	cmp	r0, #0
   13e64:	beq	13e6c <__assert_fail@plt+0x2a5c>
   13e68:	b	14b50 <__assert_fail@plt+0x3740>
   13e6c:	b	13e70 <__assert_fail@plt+0x2a60>
   13e70:	b	148ec <__assert_fail@plt+0x34dc>
   13e74:	ldr	r0, [fp, #8]
   13e78:	cmp	r0, #2
   13e7c:	str	r0, [sp, #40]	; 0x28
   13e80:	beq	13e98 <__assert_fail@plt+0x2a88>
   13e84:	b	13e88 <__assert_fail@plt+0x2a78>
   13e88:	ldr	r0, [sp, #40]	; 0x28
   13e8c:	cmp	r0, #5
   13e90:	beq	13eac <__assert_fail@plt+0x2a9c>
   13e94:	b	14068 <__assert_fail@plt+0x2c58>
   13e98:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13e9c:	tst	r0, #1
   13ea0:	beq	13ea8 <__assert_fail@plt+0x2a98>
   13ea4:	b	14ce0 <__assert_fail@plt+0x38d0>
   13ea8:	b	1406c <__assert_fail@plt+0x2c5c>
   13eac:	ldr	r0, [fp, #12]
   13eb0:	and	r0, r0, #4
   13eb4:	cmp	r0, #0
   13eb8:	beq	14064 <__assert_fail@plt+0x2c54>
   13ebc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ec0:	add	r0, r0, #2
   13ec4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ec8:	cmp	r0, r1
   13ecc:	bcs	14064 <__assert_fail@plt+0x2c54>
   13ed0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ed4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ed8:	add	r1, r1, #1
   13edc:	add	r0, r0, r1
   13ee0:	ldrb	r0, [r0]
   13ee4:	cmp	r0, #63	; 0x3f
   13ee8:	bne	14064 <__assert_fail@plt+0x2c54>
   13eec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ef0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ef4:	add	r0, r0, r1
   13ef8:	ldrb	r0, [r0, #2]
   13efc:	mov	r1, r0
   13f00:	cmp	r0, #33	; 0x21
   13f04:	str	r1, [sp, #36]	; 0x24
   13f08:	beq	13f58 <__assert_fail@plt+0x2b48>
   13f0c:	b	13f10 <__assert_fail@plt+0x2b00>
   13f10:	ldr	r0, [sp, #36]	; 0x24
   13f14:	sub	r1, r0, #39	; 0x27
   13f18:	cmp	r1, #3
   13f1c:	bcc	13f58 <__assert_fail@plt+0x2b48>
   13f20:	b	13f24 <__assert_fail@plt+0x2b14>
   13f24:	ldr	r0, [sp, #36]	; 0x24
   13f28:	cmp	r0, #45	; 0x2d
   13f2c:	beq	13f58 <__assert_fail@plt+0x2b48>
   13f30:	b	13f34 <__assert_fail@plt+0x2b24>
   13f34:	ldr	r0, [sp, #36]	; 0x24
   13f38:	cmp	r0, #47	; 0x2f
   13f3c:	beq	13f58 <__assert_fail@plt+0x2b48>
   13f40:	b	13f44 <__assert_fail@plt+0x2b34>
   13f44:	ldr	r0, [sp, #36]	; 0x24
   13f48:	sub	r1, r0, #60	; 0x3c
   13f4c:	cmp	r1, #2
   13f50:	bhi	1405c <__assert_fail@plt+0x2c4c>
   13f54:	b	13f58 <__assert_fail@plt+0x2b48>
   13f58:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13f5c:	tst	r0, #1
   13f60:	beq	13f68 <__assert_fail@plt+0x2b58>
   13f64:	b	14ce0 <__assert_fail@plt+0x38d0>
   13f68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f70:	add	r1, r1, #2
   13f74:	add	r0, r0, r1
   13f78:	ldrb	r0, [r0]
   13f7c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13f80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f84:	add	r0, r0, #2
   13f88:	str	r0, [fp, #-40]	; 0xffffffd8
   13f8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f94:	cmp	r0, r1
   13f98:	bcs	13fb0 <__assert_fail@plt+0x2ba0>
   13f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fa0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13fa4:	add	r0, r0, r1
   13fa8:	movw	r1, #63	; 0x3f
   13fac:	strb	r1, [r0]
   13fb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fb4:	add	r0, r0, #1
   13fb8:	str	r0, [fp, #-44]	; 0xffffffd4
   13fbc:	b	13fc0 <__assert_fail@plt+0x2bb0>
   13fc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fc8:	cmp	r0, r1
   13fcc:	bcs	13fe4 <__assert_fail@plt+0x2bd4>
   13fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13fd8:	add	r0, r0, r1
   13fdc:	movw	r1, #34	; 0x22
   13fe0:	strb	r1, [r0]
   13fe4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fe8:	add	r0, r0, #1
   13fec:	str	r0, [fp, #-44]	; 0xffffffd4
   13ff0:	b	13ff4 <__assert_fail@plt+0x2be4>
   13ff4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ff8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ffc:	cmp	r0, r1
   14000:	bcs	14018 <__assert_fail@plt+0x2c08>
   14004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14008:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1400c:	add	r0, r0, r1
   14010:	movw	r1, #34	; 0x22
   14014:	strb	r1, [r0]
   14018:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1401c:	add	r0, r0, #1
   14020:	str	r0, [fp, #-44]	; 0xffffffd4
   14024:	b	14028 <__assert_fail@plt+0x2c18>
   14028:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1402c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14030:	cmp	r0, r1
   14034:	bcs	1404c <__assert_fail@plt+0x2c3c>
   14038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1403c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14040:	add	r0, r0, r1
   14044:	movw	r1, #63	; 0x3f
   14048:	strb	r1, [r0]
   1404c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14050:	add	r0, r0, #1
   14054:	str	r0, [fp, #-44]	; 0xffffffd4
   14058:	b	14060 <__assert_fail@plt+0x2c50>
   1405c:	b	14060 <__assert_fail@plt+0x2c50>
   14060:	b	14064 <__assert_fail@plt+0x2c54>
   14064:	b	1406c <__assert_fail@plt+0x2c5c>
   14068:	b	1406c <__assert_fail@plt+0x2c5c>
   1406c:	b	148ec <__assert_fail@plt+0x34dc>
   14070:	movw	r0, #97	; 0x61
   14074:	strb	r0, [fp, #-64]	; 0xffffffc0
   14078:	b	14138 <__assert_fail@plt+0x2d28>
   1407c:	movw	r0, #98	; 0x62
   14080:	strb	r0, [fp, #-64]	; 0xffffffc0
   14084:	b	14138 <__assert_fail@plt+0x2d28>
   14088:	movw	r0, #102	; 0x66
   1408c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14090:	b	14138 <__assert_fail@plt+0x2d28>
   14094:	movw	r0, #110	; 0x6e
   14098:	strb	r0, [fp, #-64]	; 0xffffffc0
   1409c:	b	14118 <__assert_fail@plt+0x2d08>
   140a0:	movw	r0, #114	; 0x72
   140a4:	strb	r0, [fp, #-64]	; 0xffffffc0
   140a8:	b	14118 <__assert_fail@plt+0x2d08>
   140ac:	movw	r0, #116	; 0x74
   140b0:	strb	r0, [fp, #-64]	; 0xffffffc0
   140b4:	b	14118 <__assert_fail@plt+0x2d08>
   140b8:	movw	r0, #118	; 0x76
   140bc:	strb	r0, [fp, #-64]	; 0xffffffc0
   140c0:	b	14138 <__assert_fail@plt+0x2d28>
   140c4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   140c8:	strb	r0, [fp, #-64]	; 0xffffffc0
   140cc:	ldr	r0, [fp, #8]
   140d0:	cmp	r0, #2
   140d4:	bne	140ec <__assert_fail@plt+0x2cdc>
   140d8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   140dc:	tst	r0, #1
   140e0:	beq	140e8 <__assert_fail@plt+0x2cd8>
   140e4:	b	14ce0 <__assert_fail@plt+0x38d0>
   140e8:	b	14a74 <__assert_fail@plt+0x3664>
   140ec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   140f0:	tst	r0, #1
   140f4:	beq	14114 <__assert_fail@plt+0x2d04>
   140f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   140fc:	tst	r0, #1
   14100:	beq	14114 <__assert_fail@plt+0x2d04>
   14104:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14108:	cmp	r0, #0
   1410c:	beq	14114 <__assert_fail@plt+0x2d04>
   14110:	b	14a74 <__assert_fail@plt+0x3664>
   14114:	b	14118 <__assert_fail@plt+0x2d08>
   14118:	ldr	r0, [fp, #8]
   1411c:	cmp	r0, #2
   14120:	bne	14134 <__assert_fail@plt+0x2d24>
   14124:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14128:	tst	r0, #1
   1412c:	beq	14134 <__assert_fail@plt+0x2d24>
   14130:	b	14ce0 <__assert_fail@plt+0x38d0>
   14134:	b	14138 <__assert_fail@plt+0x2d28>
   14138:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1413c:	tst	r0, #1
   14140:	beq	14150 <__assert_fail@plt+0x2d40>
   14144:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   14148:	strb	r0, [fp, #-63]	; 0xffffffc1
   1414c:	b	14960 <__assert_fail@plt+0x3550>
   14150:	b	148ec <__assert_fail@plt+0x34dc>
   14154:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14158:	cmn	r0, #1
   1415c:	bne	14174 <__assert_fail@plt+0x2d64>
   14160:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14164:	ldrb	r0, [r0, #1]
   14168:	cmp	r0, #0
   1416c:	beq	14184 <__assert_fail@plt+0x2d74>
   14170:	b	14180 <__assert_fail@plt+0x2d70>
   14174:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14178:	cmp	r0, #1
   1417c:	beq	14184 <__assert_fail@plt+0x2d74>
   14180:	b	148ec <__assert_fail@plt+0x34dc>
   14184:	b	14188 <__assert_fail@plt+0x2d78>
   14188:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1418c:	cmp	r0, #0
   14190:	beq	14198 <__assert_fail@plt+0x2d88>
   14194:	b	148ec <__assert_fail@plt+0x34dc>
   14198:	b	1419c <__assert_fail@plt+0x2d8c>
   1419c:	movw	r0, #1
   141a0:	strb	r0, [fp, #-67]	; 0xffffffbd
   141a4:	ldr	r0, [fp, #8]
   141a8:	cmp	r0, #2
   141ac:	bne	141c0 <__assert_fail@plt+0x2db0>
   141b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   141b4:	tst	r0, #1
   141b8:	beq	141c0 <__assert_fail@plt+0x2db0>
   141bc:	b	14ce0 <__assert_fail@plt+0x38d0>
   141c0:	b	148ec <__assert_fail@plt+0x34dc>
   141c4:	movw	r0, #1
   141c8:	strb	r0, [fp, #-61]	; 0xffffffc3
   141cc:	strb	r0, [fp, #-67]	; 0xffffffbd
   141d0:	ldr	r0, [fp, #8]
   141d4:	cmp	r0, #2
   141d8:	bne	142b8 <__assert_fail@plt+0x2ea8>
   141dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   141e0:	tst	r0, #1
   141e4:	beq	141ec <__assert_fail@plt+0x2ddc>
   141e8:	b	14ce0 <__assert_fail@plt+0x38d0>
   141ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   141f0:	cmp	r0, #0
   141f4:	beq	14214 <__assert_fail@plt+0x2e04>
   141f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   141fc:	cmp	r0, #0
   14200:	bne	14214 <__assert_fail@plt+0x2e04>
   14204:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14208:	str	r0, [fp, #-48]	; 0xffffffd0
   1420c:	movw	r0, #0
   14210:	str	r0, [fp, #-28]	; 0xffffffe4
   14214:	b	14218 <__assert_fail@plt+0x2e08>
   14218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1421c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14220:	cmp	r0, r1
   14224:	bcs	1423c <__assert_fail@plt+0x2e2c>
   14228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1422c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14230:	add	r0, r0, r1
   14234:	movw	r1, #39	; 0x27
   14238:	strb	r1, [r0]
   1423c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14240:	add	r0, r0, #1
   14244:	str	r0, [fp, #-44]	; 0xffffffd4
   14248:	b	1424c <__assert_fail@plt+0x2e3c>
   1424c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14250:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14254:	cmp	r0, r1
   14258:	bcs	14270 <__assert_fail@plt+0x2e60>
   1425c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14260:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14264:	add	r0, r0, r1
   14268:	movw	r1, #92	; 0x5c
   1426c:	strb	r1, [r0]
   14270:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14274:	add	r0, r0, #1
   14278:	str	r0, [fp, #-44]	; 0xffffffd4
   1427c:	b	14280 <__assert_fail@plt+0x2e70>
   14280:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14284:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14288:	cmp	r0, r1
   1428c:	bcs	142a4 <__assert_fail@plt+0x2e94>
   14290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14294:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14298:	add	r0, r0, r1
   1429c:	movw	r1, #39	; 0x27
   142a0:	strb	r1, [r0]
   142a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142a8:	add	r0, r0, #1
   142ac:	str	r0, [fp, #-44]	; 0xffffffd4
   142b0:	movw	r0, #0
   142b4:	strb	r0, [fp, #-60]	; 0xffffffc4
   142b8:	b	148ec <__assert_fail@plt+0x34dc>
   142bc:	movw	r0, #1
   142c0:	strb	r0, [fp, #-67]	; 0xffffffbd
   142c4:	b	148ec <__assert_fail@plt+0x34dc>
   142c8:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   142cc:	tst	r0, #1
   142d0:	beq	14314 <__assert_fail@plt+0x2f04>
   142d4:	mov	r0, #1
   142d8:	str	r0, [fp, #-72]	; 0xffffffb8
   142dc:	bl	112b4 <__ctype_b_loc@plt>
   142e0:	ldr	r0, [r0]
   142e4:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   142e8:	mov	r1, lr
   142ec:	add	r0, r0, lr, lsl #1
   142f0:	ldrh	r0, [r0]
   142f4:	and	r0, r0, #16384	; 0x4000
   142f8:	cmp	r0, #0
   142fc:	movw	r0, #0
   14300:	movne	r0, #1
   14304:	and	r0, r0, #1
   14308:	strb	r0, [fp, #-73]	; 0xffffffb7
   1430c:	str	r1, [sp, #32]
   14310:	b	145a0 <__assert_fail@plt+0x3190>
   14314:	sub	r0, fp, #84	; 0x54
   14318:	movw	r1, #0
   1431c:	and	r1, r1, #255	; 0xff
   14320:	movw	r2, #8
   14324:	bl	11338 <memset@plt>
   14328:	movw	r0, #0
   1432c:	str	r0, [fp, #-72]	; 0xffffffb8
   14330:	movw	r0, #1
   14334:	strb	r0, [fp, #-73]	; 0xffffffb7
   14338:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1433c:	cmn	r0, #1
   14340:	bne	14350 <__assert_fail@plt+0x2f40>
   14344:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14348:	bl	112e4 <strlen@plt>
   1434c:	str	r0, [fp, #-36]	; 0xffffffdc
   14350:	b	14354 <__assert_fail@plt+0x2f44>
   14354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14358:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1435c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14360:	add	r1, r1, r2
   14364:	add	r1, r0, r1
   14368:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1436c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14370:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14374:	add	r2, r2, r3
   14378:	sub	r2, r0, r2
   1437c:	sub	r0, fp, #88	; 0x58
   14380:	sub	r3, fp, #84	; 0x54
   14384:	bl	1bba0 <__assert_fail@plt+0xa790>
   14388:	str	r0, [sp, #92]	; 0x5c
   1438c:	ldr	r0, [sp, #92]	; 0x5c
   14390:	cmp	r0, #0
   14394:	bne	1439c <__assert_fail@plt+0x2f8c>
   14398:	b	1459c <__assert_fail@plt+0x318c>
   1439c:	ldr	r0, [sp, #92]	; 0x5c
   143a0:	cmn	r0, #1
   143a4:	bne	143b4 <__assert_fail@plt+0x2fa4>
   143a8:	movw	r0, #0
   143ac:	strb	r0, [fp, #-73]	; 0xffffffb7
   143b0:	b	1459c <__assert_fail@plt+0x318c>
   143b4:	ldr	r0, [sp, #92]	; 0x5c
   143b8:	cmn	r0, #2
   143bc:	bne	14430 <__assert_fail@plt+0x3020>
   143c0:	movw	r0, #0
   143c4:	strb	r0, [fp, #-73]	; 0xffffffb7
   143c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   143cc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   143d0:	add	r0, r0, r1
   143d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   143d8:	cmp	r0, r1
   143dc:	movw	r0, #0
   143e0:	str	r0, [sp, #28]
   143e4:	bcs	14410 <__assert_fail@plt+0x3000>
   143e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   143f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   143f4:	add	r1, r1, r2
   143f8:	add	r0, r0, r1
   143fc:	ldrb	r0, [r0]
   14400:	cmp	r0, #0
   14404:	movw	r0, #0
   14408:	movne	r0, #1
   1440c:	str	r0, [sp, #28]
   14410:	ldr	r0, [sp, #28]
   14414:	tst	r0, #1
   14418:	beq	1442c <__assert_fail@plt+0x301c>
   1441c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14420:	add	r0, r0, #1
   14424:	str	r0, [fp, #-72]	; 0xffffffb8
   14428:	b	143c8 <__assert_fail@plt+0x2fb8>
   1442c:	b	1459c <__assert_fail@plt+0x318c>
   14430:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14434:	tst	r0, #1
   14438:	beq	14544 <__assert_fail@plt+0x3134>
   1443c:	ldr	r0, [fp, #8]
   14440:	cmp	r0, #2
   14444:	bne	14544 <__assert_fail@plt+0x3134>
   14448:	movw	r0, #1
   1444c:	str	r0, [sp, #88]	; 0x58
   14450:	ldr	r0, [sp, #88]	; 0x58
   14454:	ldr	r1, [sp, #92]	; 0x5c
   14458:	cmp	r0, r1
   1445c:	bcs	14540 <__assert_fail@plt+0x3130>
   14460:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14464:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14468:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1446c:	add	r1, r1, r2
   14470:	ldr	r2, [sp, #88]	; 0x58
   14474:	add	r1, r1, r2
   14478:	ldrb	r0, [r0, r1]
   1447c:	sub	r0, r0, #91	; 0x5b
   14480:	cmp	r0, #33	; 0x21
   14484:	str	r0, [sp, #24]
   14488:	bhi	14528 <__assert_fail@plt+0x3118>
   1448c:	add	r0, pc, #8
   14490:	ldr	r1, [sp, #24]
   14494:	ldr	r0, [r0, r1, lsl #2]
   14498:	mov	pc, r0
   1449c:	andeq	r4, r1, r4, lsr #10
   144a0:	andeq	r4, r1, r4, lsr #10
   144a4:	andeq	r4, r1, r8, lsr #10
   144a8:	andeq	r4, r1, r4, lsr #10
   144ac:	andeq	r4, r1, r8, lsr #10
   144b0:	andeq	r4, r1, r4, lsr #10
   144b4:	andeq	r4, r1, r8, lsr #10
   144b8:	andeq	r4, r1, r8, lsr #10
   144bc:	andeq	r4, r1, r8, lsr #10
   144c0:	andeq	r4, r1, r8, lsr #10
   144c4:	andeq	r4, r1, r8, lsr #10
   144c8:	andeq	r4, r1, r8, lsr #10
   144cc:	andeq	r4, r1, r8, lsr #10
   144d0:	andeq	r4, r1, r8, lsr #10
   144d4:	andeq	r4, r1, r8, lsr #10
   144d8:	andeq	r4, r1, r8, lsr #10
   144dc:	andeq	r4, r1, r8, lsr #10
   144e0:	andeq	r4, r1, r8, lsr #10
   144e4:	andeq	r4, r1, r8, lsr #10
   144e8:	andeq	r4, r1, r8, lsr #10
   144ec:	andeq	r4, r1, r8, lsr #10
   144f0:	andeq	r4, r1, r8, lsr #10
   144f4:	andeq	r4, r1, r8, lsr #10
   144f8:	andeq	r4, r1, r8, lsr #10
   144fc:	andeq	r4, r1, r8, lsr #10
   14500:	andeq	r4, r1, r8, lsr #10
   14504:	andeq	r4, r1, r8, lsr #10
   14508:	andeq	r4, r1, r8, lsr #10
   1450c:	andeq	r4, r1, r8, lsr #10
   14510:	andeq	r4, r1, r8, lsr #10
   14514:	andeq	r4, r1, r8, lsr #10
   14518:	andeq	r4, r1, r8, lsr #10
   1451c:	andeq	r4, r1, r8, lsr #10
   14520:	andeq	r4, r1, r4, lsr #10
   14524:	b	14ce0 <__assert_fail@plt+0x38d0>
   14528:	b	1452c <__assert_fail@plt+0x311c>
   1452c:	b	14530 <__assert_fail@plt+0x3120>
   14530:	ldr	r0, [sp, #88]	; 0x58
   14534:	add	r0, r0, #1
   14538:	str	r0, [sp, #88]	; 0x58
   1453c:	b	14450 <__assert_fail@plt+0x3040>
   14540:	b	14544 <__assert_fail@plt+0x3134>
   14544:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14548:	bl	11200 <iswprint@plt>
   1454c:	cmp	r0, #0
   14550:	bne	1455c <__assert_fail@plt+0x314c>
   14554:	movw	r0, #0
   14558:	strb	r0, [fp, #-73]	; 0xffffffb7
   1455c:	ldr	r0, [sp, #92]	; 0x5c
   14560:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14564:	add	r0, r1, r0
   14568:	str	r0, [fp, #-72]	; 0xffffffb8
   1456c:	b	14570 <__assert_fail@plt+0x3160>
   14570:	b	14574 <__assert_fail@plt+0x3164>
   14574:	b	14578 <__assert_fail@plt+0x3168>
   14578:	sub	r0, fp, #84	; 0x54
   1457c:	bl	111c4 <mbsinit@plt>
   14580:	cmp	r0, #0
   14584:	movw	r0, #0
   14588:	movne	r0, #1
   1458c:	mvn	lr, #0
   14590:	eor	r0, r0, lr
   14594:	tst	r0, #1
   14598:	bne	14354 <__assert_fail@plt+0x2f44>
   1459c:	b	145a0 <__assert_fail@plt+0x3190>
   145a0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   145a4:	and	r0, r0, #1
   145a8:	strb	r0, [fp, #-67]	; 0xffffffbd
   145ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   145b0:	movw	r1, #1
   145b4:	cmp	r1, r0
   145b8:	bcc	145d4 <__assert_fail@plt+0x31c4>
   145bc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   145c0:	tst	r0, #1
   145c4:	beq	148e8 <__assert_fail@plt+0x34d8>
   145c8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   145cc:	tst	r0, #1
   145d0:	bne	148e8 <__assert_fail@plt+0x34d8>
   145d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   145d8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   145dc:	add	r0, r0, r1
   145e0:	str	r0, [sp, #84]	; 0x54
   145e4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   145e8:	tst	r0, #1
   145ec:	beq	1479c <__assert_fail@plt+0x338c>
   145f0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   145f4:	tst	r0, #1
   145f8:	bne	1479c <__assert_fail@plt+0x338c>
   145fc:	b	14600 <__assert_fail@plt+0x31f0>
   14600:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14604:	tst	r0, #1
   14608:	beq	14610 <__assert_fail@plt+0x3200>
   1460c:	b	14ce0 <__assert_fail@plt+0x38d0>
   14610:	movw	r0, #1
   14614:	strb	r0, [fp, #-66]	; 0xffffffbe
   14618:	ldr	r0, [fp, #8]
   1461c:	cmp	r0, #2
   14620:	bne	146d4 <__assert_fail@plt+0x32c4>
   14624:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14628:	tst	r0, #1
   1462c:	bne	146d4 <__assert_fail@plt+0x32c4>
   14630:	b	14634 <__assert_fail@plt+0x3224>
   14634:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14638:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1463c:	cmp	r0, r1
   14640:	bcs	14658 <__assert_fail@plt+0x3248>
   14644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14648:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1464c:	add	r0, r0, r1
   14650:	movw	r1, #39	; 0x27
   14654:	strb	r1, [r0]
   14658:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1465c:	add	r0, r0, #1
   14660:	str	r0, [fp, #-44]	; 0xffffffd4
   14664:	b	14668 <__assert_fail@plt+0x3258>
   14668:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1466c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14670:	cmp	r0, r1
   14674:	bcs	1468c <__assert_fail@plt+0x327c>
   14678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1467c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14680:	add	r0, r0, r1
   14684:	movw	r1, #36	; 0x24
   14688:	strb	r1, [r0]
   1468c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14690:	add	r0, r0, #1
   14694:	str	r0, [fp, #-44]	; 0xffffffd4
   14698:	b	1469c <__assert_fail@plt+0x328c>
   1469c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146a4:	cmp	r0, r1
   146a8:	bcs	146c0 <__assert_fail@plt+0x32b0>
   146ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146b4:	add	r0, r0, r1
   146b8:	movw	r1, #39	; 0x27
   146bc:	strb	r1, [r0]
   146c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146c4:	add	r0, r0, #1
   146c8:	str	r0, [fp, #-44]	; 0xffffffd4
   146cc:	movw	r0, #1
   146d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   146d4:	b	146d8 <__assert_fail@plt+0x32c8>
   146d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146e0:	cmp	r0, r1
   146e4:	bcs	146fc <__assert_fail@plt+0x32ec>
   146e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146f0:	add	r0, r0, r1
   146f4:	movw	r1, #92	; 0x5c
   146f8:	strb	r1, [r0]
   146fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14700:	add	r0, r0, #1
   14704:	str	r0, [fp, #-44]	; 0xffffffd4
   14708:	b	1470c <__assert_fail@plt+0x32fc>
   1470c:	b	14710 <__assert_fail@plt+0x3300>
   14710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14714:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14718:	cmp	r0, r1
   1471c:	bcs	1473c <__assert_fail@plt+0x332c>
   14720:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14724:	asr	r0, r0, #6
   14728:	add	r0, r0, #48	; 0x30
   1472c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14730:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14734:	add	r1, r1, r2
   14738:	strb	r0, [r1]
   1473c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14740:	add	r0, r0, #1
   14744:	str	r0, [fp, #-44]	; 0xffffffd4
   14748:	b	1474c <__assert_fail@plt+0x333c>
   1474c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14750:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14754:	cmp	r0, r1
   14758:	bcs	1477c <__assert_fail@plt+0x336c>
   1475c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14760:	asr	r0, r0, #3
   14764:	and	r0, r0, #7
   14768:	add	r0, r0, #48	; 0x30
   1476c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14770:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14774:	add	r1, r1, r2
   14778:	strb	r0, [r1]
   1477c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14780:	add	r0, r0, #1
   14784:	str	r0, [fp, #-44]	; 0xffffffd4
   14788:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1478c:	and	r0, r0, #7
   14790:	add	r0, r0, #48	; 0x30
   14794:	strb	r0, [fp, #-63]	; 0xffffffc1
   14798:	b	147e8 <__assert_fail@plt+0x33d8>
   1479c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   147a0:	tst	r0, #1
   147a4:	beq	147e4 <__assert_fail@plt+0x33d4>
   147a8:	b	147ac <__assert_fail@plt+0x339c>
   147ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147b4:	cmp	r0, r1
   147b8:	bcs	147d0 <__assert_fail@plt+0x33c0>
   147bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147c4:	add	r0, r0, r1
   147c8:	movw	r1, #92	; 0x5c
   147cc:	strb	r1, [r0]
   147d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147d4:	add	r0, r0, #1
   147d8:	str	r0, [fp, #-44]	; 0xffffffd4
   147dc:	movw	r0, #0
   147e0:	strb	r0, [fp, #-65]	; 0xffffffbf
   147e4:	b	147e8 <__assert_fail@plt+0x33d8>
   147e8:	ldr	r0, [sp, #84]	; 0x54
   147ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   147f0:	add	r1, r1, #1
   147f4:	cmp	r0, r1
   147f8:	bhi	14800 <__assert_fail@plt+0x33f0>
   147fc:	b	148e4 <__assert_fail@plt+0x34d4>
   14800:	b	14804 <__assert_fail@plt+0x33f4>
   14804:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14808:	tst	r0, #1
   1480c:	beq	1488c <__assert_fail@plt+0x347c>
   14810:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14814:	tst	r0, #1
   14818:	bne	1488c <__assert_fail@plt+0x347c>
   1481c:	b	14820 <__assert_fail@plt+0x3410>
   14820:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14824:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14828:	cmp	r0, r1
   1482c:	bcs	14844 <__assert_fail@plt+0x3434>
   14830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14834:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14838:	add	r0, r0, r1
   1483c:	movw	r1, #39	; 0x27
   14840:	strb	r1, [r0]
   14844:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14848:	add	r0, r0, #1
   1484c:	str	r0, [fp, #-44]	; 0xffffffd4
   14850:	b	14854 <__assert_fail@plt+0x3444>
   14854:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14858:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1485c:	cmp	r0, r1
   14860:	bcs	14878 <__assert_fail@plt+0x3468>
   14864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14868:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1486c:	add	r0, r0, r1
   14870:	movw	r1, #39	; 0x27
   14874:	strb	r1, [r0]
   14878:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1487c:	add	r0, r0, #1
   14880:	str	r0, [fp, #-44]	; 0xffffffd4
   14884:	movw	r0, #0
   14888:	strb	r0, [fp, #-60]	; 0xffffffc4
   1488c:	b	14890 <__assert_fail@plt+0x3480>
   14890:	b	14894 <__assert_fail@plt+0x3484>
   14894:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14898:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1489c:	cmp	r0, r1
   148a0:	bcs	148b8 <__assert_fail@plt+0x34a8>
   148a4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   148a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   148ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   148b0:	add	r1, r1, r2
   148b4:	strb	r0, [r1]
   148b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148bc:	add	r0, r0, #1
   148c0:	str	r0, [fp, #-44]	; 0xffffffd4
   148c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   148cc:	add	r1, r1, #1
   148d0:	str	r1, [fp, #-40]	; 0xffffffd8
   148d4:	add	r0, r0, r1
   148d8:	ldrb	r0, [r0]
   148dc:	strb	r0, [fp, #-63]	; 0xffffffc1
   148e0:	b	145e4 <__assert_fail@plt+0x31d4>
   148e4:	b	14a74 <__assert_fail@plt+0x3664>
   148e8:	b	148ec <__assert_fail@plt+0x34dc>
   148ec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   148f0:	tst	r0, #1
   148f4:	beq	14904 <__assert_fail@plt+0x34f4>
   148f8:	ldr	r0, [fp, #8]
   148fc:	cmp	r0, #2
   14900:	bne	14910 <__assert_fail@plt+0x3500>
   14904:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14908:	tst	r0, #1
   1490c:	beq	1494c <__assert_fail@plt+0x353c>
   14910:	ldr	r0, [fp, #16]
   14914:	movw	r1, #0
   14918:	cmp	r0, r1
   1491c:	beq	1494c <__assert_fail@plt+0x353c>
   14920:	ldr	r0, [fp, #16]
   14924:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14928:	lsr	r1, r1, #5
   1492c:	add	r0, r0, r1, lsl #2
   14930:	ldr	r0, [r0]
   14934:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14938:	and	r1, r1, #31
   1493c:	lsr	r0, r0, r1
   14940:	and	r0, r0, #1
   14944:	cmp	r0, #0
   14948:	bne	1495c <__assert_fail@plt+0x354c>
   1494c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14950:	tst	r0, #1
   14954:	bne	1495c <__assert_fail@plt+0x354c>
   14958:	b	14a74 <__assert_fail@plt+0x3664>
   1495c:	b	14960 <__assert_fail@plt+0x3550>
   14960:	b	14964 <__assert_fail@plt+0x3554>
   14964:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14968:	tst	r0, #1
   1496c:	beq	14974 <__assert_fail@plt+0x3564>
   14970:	b	14ce0 <__assert_fail@plt+0x38d0>
   14974:	movw	r0, #1
   14978:	strb	r0, [fp, #-66]	; 0xffffffbe
   1497c:	ldr	r0, [fp, #8]
   14980:	cmp	r0, #2
   14984:	bne	14a38 <__assert_fail@plt+0x3628>
   14988:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1498c:	tst	r0, #1
   14990:	bne	14a38 <__assert_fail@plt+0x3628>
   14994:	b	14998 <__assert_fail@plt+0x3588>
   14998:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1499c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149a0:	cmp	r0, r1
   149a4:	bcs	149bc <__assert_fail@plt+0x35ac>
   149a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149b0:	add	r0, r0, r1
   149b4:	movw	r1, #39	; 0x27
   149b8:	strb	r1, [r0]
   149bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149c0:	add	r0, r0, #1
   149c4:	str	r0, [fp, #-44]	; 0xffffffd4
   149c8:	b	149cc <__assert_fail@plt+0x35bc>
   149cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149d4:	cmp	r0, r1
   149d8:	bcs	149f0 <__assert_fail@plt+0x35e0>
   149dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149e4:	add	r0, r0, r1
   149e8:	movw	r1, #36	; 0x24
   149ec:	strb	r1, [r0]
   149f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149f4:	add	r0, r0, #1
   149f8:	str	r0, [fp, #-44]	; 0xffffffd4
   149fc:	b	14a00 <__assert_fail@plt+0x35f0>
   14a00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a08:	cmp	r0, r1
   14a0c:	bcs	14a24 <__assert_fail@plt+0x3614>
   14a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a18:	add	r0, r0, r1
   14a1c:	movw	r1, #39	; 0x27
   14a20:	strb	r1, [r0]
   14a24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a28:	add	r0, r0, #1
   14a2c:	str	r0, [fp, #-44]	; 0xffffffd4
   14a30:	movw	r0, #1
   14a34:	strb	r0, [fp, #-60]	; 0xffffffc4
   14a38:	b	14a3c <__assert_fail@plt+0x362c>
   14a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a44:	cmp	r0, r1
   14a48:	bcs	14a60 <__assert_fail@plt+0x3650>
   14a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a54:	add	r0, r0, r1
   14a58:	movw	r1, #92	; 0x5c
   14a5c:	strb	r1, [r0]
   14a60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a64:	add	r0, r0, #1
   14a68:	str	r0, [fp, #-44]	; 0xffffffd4
   14a6c:	b	14a70 <__assert_fail@plt+0x3660>
   14a70:	b	14a74 <__assert_fail@plt+0x3664>
   14a74:	b	14a78 <__assert_fail@plt+0x3668>
   14a78:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14a7c:	tst	r0, #1
   14a80:	beq	14b00 <__assert_fail@plt+0x36f0>
   14a84:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14a88:	tst	r0, #1
   14a8c:	bne	14b00 <__assert_fail@plt+0x36f0>
   14a90:	b	14a94 <__assert_fail@plt+0x3684>
   14a94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a9c:	cmp	r0, r1
   14aa0:	bcs	14ab8 <__assert_fail@plt+0x36a8>
   14aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14aa8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14aac:	add	r0, r0, r1
   14ab0:	movw	r1, #39	; 0x27
   14ab4:	strb	r1, [r0]
   14ab8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14abc:	add	r0, r0, #1
   14ac0:	str	r0, [fp, #-44]	; 0xffffffd4
   14ac4:	b	14ac8 <__assert_fail@plt+0x36b8>
   14ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14acc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ad0:	cmp	r0, r1
   14ad4:	bcs	14aec <__assert_fail@plt+0x36dc>
   14ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14adc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ae0:	add	r0, r0, r1
   14ae4:	movw	r1, #39	; 0x27
   14ae8:	strb	r1, [r0]
   14aec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14af0:	add	r0, r0, #1
   14af4:	str	r0, [fp, #-44]	; 0xffffffd4
   14af8:	movw	r0, #0
   14afc:	strb	r0, [fp, #-60]	; 0xffffffc4
   14b00:	b	14b04 <__assert_fail@plt+0x36f4>
   14b04:	b	14b08 <__assert_fail@plt+0x36f8>
   14b08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b10:	cmp	r0, r1
   14b14:	bcs	14b2c <__assert_fail@plt+0x371c>
   14b18:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14b1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14b20:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14b24:	add	r1, r1, r2
   14b28:	strb	r0, [r1]
   14b2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b30:	add	r0, r0, #1
   14b34:	str	r0, [fp, #-44]	; 0xffffffd4
   14b38:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14b3c:	tst	r0, #1
   14b40:	bne	14b4c <__assert_fail@plt+0x373c>
   14b44:	movw	r0, #0
   14b48:	strb	r0, [fp, #-62]	; 0xffffffc2
   14b4c:	b	14b50 <__assert_fail@plt+0x3740>
   14b50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b54:	add	r0, r0, #1
   14b58:	str	r0, [fp, #-40]	; 0xffffffd8
   14b5c:	b	13904 <__assert_fail@plt+0x24f4>
   14b60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b64:	cmp	r0, #0
   14b68:	bne	14b88 <__assert_fail@plt+0x3778>
   14b6c:	ldr	r0, [fp, #8]
   14b70:	cmp	r0, #2
   14b74:	bne	14b88 <__assert_fail@plt+0x3778>
   14b78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b7c:	tst	r0, #1
   14b80:	beq	14b88 <__assert_fail@plt+0x3778>
   14b84:	b	14ce0 <__assert_fail@plt+0x38d0>
   14b88:	ldr	r0, [fp, #8]
   14b8c:	cmp	r0, #2
   14b90:	bne	14c30 <__assert_fail@plt+0x3820>
   14b94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b98:	tst	r0, #1
   14b9c:	bne	14c30 <__assert_fail@plt+0x3820>
   14ba0:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   14ba4:	tst	r0, #1
   14ba8:	beq	14c30 <__assert_fail@plt+0x3820>
   14bac:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   14bb0:	tst	r0, #1
   14bb4:	beq	14bfc <__assert_fail@plt+0x37ec>
   14bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14bbc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14bc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14bc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14bc8:	ldr	ip, [fp, #12]
   14bcc:	ldr	lr, [fp, #16]
   14bd0:	ldr	r4, [fp, #20]
   14bd4:	ldr	r5, [fp, #24]
   14bd8:	movw	r6, #5
   14bdc:	str	r6, [sp]
   14be0:	str	ip, [sp, #4]
   14be4:	str	lr, [sp, #8]
   14be8:	str	r4, [sp, #12]
   14bec:	str	r5, [sp, #16]
   14bf0:	bl	1361c <__assert_fail@plt+0x220c>
   14bf4:	str	r0, [fp, #-20]	; 0xffffffec
   14bf8:	b	14d48 <__assert_fail@plt+0x3938>
   14bfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c00:	cmp	r0, #0
   14c04:	bne	14c28 <__assert_fail@plt+0x3818>
   14c08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14c0c:	cmp	r0, #0
   14c10:	beq	14c28 <__assert_fail@plt+0x3818>
   14c14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14c18:	str	r0, [fp, #-28]	; 0xffffffe4
   14c1c:	movw	r0, #0
   14c20:	str	r0, [fp, #-44]	; 0xffffffd4
   14c24:	b	136c4 <__assert_fail@plt+0x22b4>
   14c28:	b	14c2c <__assert_fail@plt+0x381c>
   14c2c:	b	14c30 <__assert_fail@plt+0x3820>
   14c30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14c34:	movw	r1, #0
   14c38:	cmp	r0, r1
   14c3c:	beq	14cb0 <__assert_fail@plt+0x38a0>
   14c40:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14c44:	tst	r0, #1
   14c48:	bne	14cb0 <__assert_fail@plt+0x38a0>
   14c4c:	b	14c50 <__assert_fail@plt+0x3840>
   14c50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14c54:	ldrsb	r0, [r0]
   14c58:	cmp	r0, #0
   14c5c:	beq	14cac <__assert_fail@plt+0x389c>
   14c60:	b	14c64 <__assert_fail@plt+0x3854>
   14c64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c6c:	cmp	r0, r1
   14c70:	bcs	14c8c <__assert_fail@plt+0x387c>
   14c74:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14c78:	ldrb	r0, [r0]
   14c7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14c80:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14c84:	add	r1, r1, r2
   14c88:	strb	r0, [r1]
   14c8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c90:	add	r0, r0, #1
   14c94:	str	r0, [fp, #-44]	; 0xffffffd4
   14c98:	b	14c9c <__assert_fail@plt+0x388c>
   14c9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14ca0:	add	r0, r0, #1
   14ca4:	str	r0, [fp, #-52]	; 0xffffffcc
   14ca8:	b	14c50 <__assert_fail@plt+0x3840>
   14cac:	b	14cb0 <__assert_fail@plt+0x38a0>
   14cb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cb8:	cmp	r0, r1
   14cbc:	bcs	14cd4 <__assert_fail@plt+0x38c4>
   14cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14cc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14cc8:	add	r0, r0, r1
   14ccc:	movw	r1, #0
   14cd0:	strb	r1, [r0]
   14cd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cd8:	str	r0, [fp, #-20]	; 0xffffffec
   14cdc:	b	14d48 <__assert_fail@plt+0x3938>
   14ce0:	ldr	r0, [fp, #8]
   14ce4:	cmp	r0, #2
   14ce8:	bne	14d00 <__assert_fail@plt+0x38f0>
   14cec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14cf0:	tst	r0, #1
   14cf4:	beq	14d00 <__assert_fail@plt+0x38f0>
   14cf8:	movw	r0, #4
   14cfc:	str	r0, [fp, #8]
   14d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14d0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d10:	ldr	ip, [fp, #8]
   14d14:	ldr	lr, [fp, #12]
   14d18:	mvn	r4, #2
   14d1c:	and	lr, lr, r4
   14d20:	ldr	r4, [fp, #20]
   14d24:	ldr	r5, [fp, #24]
   14d28:	str	ip, [sp]
   14d2c:	str	lr, [sp, #4]
   14d30:	movw	ip, #0
   14d34:	str	ip, [sp, #8]
   14d38:	str	r4, [sp, #12]
   14d3c:	str	r5, [sp, #16]
   14d40:	bl	1361c <__assert_fail@plt+0x220c>
   14d44:	str	r0, [fp, #-20]	; 0xffffffec
   14d48:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d4c:	sub	sp, fp, #16
   14d50:	pop	{r4, r5, r6, sl, fp, pc}
   14d54:	push	{fp, lr}
   14d58:	mov	fp, sp
   14d5c:	sub	sp, sp, #16
   14d60:	str	r0, [fp, #-4]
   14d64:	str	r1, [sp, #8]
   14d68:	str	r2, [sp, #4]
   14d6c:	ldr	r0, [fp, #-4]
   14d70:	ldr	r1, [sp, #8]
   14d74:	ldr	r3, [sp, #4]
   14d78:	movw	r2, #0
   14d7c:	bl	14d88 <__assert_fail@plt+0x3978>
   14d80:	mov	sp, fp
   14d84:	pop	{fp, pc}
   14d88:	push	{r4, r5, r6, sl, fp, lr}
   14d8c:	add	fp, sp, #16
   14d90:	sub	sp, sp, #72	; 0x48
   14d94:	str	r0, [fp, #-20]	; 0xffffffec
   14d98:	str	r1, [fp, #-24]	; 0xffffffe8
   14d9c:	str	r2, [fp, #-28]	; 0xffffffe4
   14da0:	str	r3, [fp, #-32]	; 0xffffffe0
   14da4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14da8:	movw	r1, #0
   14dac:	cmp	r0, r1
   14db0:	beq	14dc0 <__assert_fail@plt+0x39b0>
   14db4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14db8:	str	r0, [sp, #32]
   14dbc:	b	14dd0 <__assert_fail@plt+0x39c0>
   14dc0:	movw	r0, #61944	; 0xf1f8
   14dc4:	movt	r0, #2
   14dc8:	str	r0, [sp, #32]
   14dcc:	b	14dd0 <__assert_fail@plt+0x39c0>
   14dd0:	ldr	r0, [sp, #32]
   14dd4:	str	r0, [fp, #-36]	; 0xffffffdc
   14dd8:	bl	11308 <__errno_location@plt>
   14ddc:	ldr	r0, [r0]
   14de0:	str	r0, [fp, #-40]	; 0xffffffd8
   14de4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14de8:	ldr	r0, [r0, #4]
   14dec:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14df0:	movw	r1, #0
   14df4:	cmp	lr, r1
   14df8:	movw	lr, #0
   14dfc:	movne	lr, #1
   14e00:	tst	lr, #1
   14e04:	mov	lr, r1
   14e08:	moveq	lr, #1
   14e0c:	orr	r0, r0, lr
   14e10:	str	r0, [sp, #44]	; 0x2c
   14e14:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14e20:	ldr	r0, [r0]
   14e24:	ldr	lr, [sp, #44]	; 0x2c
   14e28:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14e2c:	add	ip, ip, #8
   14e30:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14e34:	ldr	r4, [r4, #40]	; 0x28
   14e38:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14e3c:	ldr	r5, [r5, #44]	; 0x2c
   14e40:	str	r0, [sp, #28]
   14e44:	mov	r0, r1
   14e48:	ldr	r6, [sp, #28]
   14e4c:	str	r6, [sp]
   14e50:	str	lr, [sp, #4]
   14e54:	str	ip, [sp, #8]
   14e58:	str	r4, [sp, #12]
   14e5c:	str	r5, [sp, #16]
   14e60:	bl	1361c <__assert_fail@plt+0x220c>
   14e64:	add	r0, r0, #1
   14e68:	str	r0, [sp, #40]	; 0x28
   14e6c:	ldr	r0, [sp, #40]	; 0x28
   14e70:	bl	16878 <__assert_fail@plt+0x5468>
   14e74:	str	r0, [sp, #36]	; 0x24
   14e78:	ldr	r0, [sp, #36]	; 0x24
   14e7c:	ldr	r1, [sp, #40]	; 0x28
   14e80:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e88:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14e8c:	ldr	ip, [ip]
   14e90:	ldr	lr, [sp, #44]	; 0x2c
   14e94:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14e98:	add	r4, r4, #8
   14e9c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14ea0:	ldr	r5, [r5, #40]	; 0x28
   14ea4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14ea8:	ldr	r6, [r6, #44]	; 0x2c
   14eac:	str	ip, [sp]
   14eb0:	str	lr, [sp, #4]
   14eb4:	str	r4, [sp, #8]
   14eb8:	str	r5, [sp, #12]
   14ebc:	str	r6, [sp, #16]
   14ec0:	bl	1361c <__assert_fail@plt+0x220c>
   14ec4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14ec8:	str	r0, [sp, #24]
   14ecc:	str	r1, [sp, #20]
   14ed0:	bl	11308 <__errno_location@plt>
   14ed4:	ldr	r1, [sp, #20]
   14ed8:	str	r1, [r0]
   14edc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14ee0:	movw	r2, #0
   14ee4:	cmp	r0, r2
   14ee8:	beq	14efc <__assert_fail@plt+0x3aec>
   14eec:	ldr	r0, [sp, #40]	; 0x28
   14ef0:	sub	r0, r0, #1
   14ef4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ef8:	str	r0, [r1]
   14efc:	ldr	r0, [sp, #36]	; 0x24
   14f00:	sub	sp, fp, #16
   14f04:	pop	{r4, r5, r6, sl, fp, pc}
   14f08:	push	{fp, lr}
   14f0c:	mov	fp, sp
   14f10:	sub	sp, sp, #8
   14f14:	movw	r0, #61732	; 0xf124
   14f18:	movt	r0, #2
   14f1c:	ldr	r0, [r0]
   14f20:	str	r0, [sp, #4]
   14f24:	movw	r0, #1
   14f28:	str	r0, [sp]
   14f2c:	ldr	r0, [sp]
   14f30:	movw	r1, #61736	; 0xf128
   14f34:	movt	r1, #2
   14f38:	ldr	r1, [r1]
   14f3c:	cmp	r0, r1
   14f40:	bge	14f68 <__assert_fail@plt+0x3b58>
   14f44:	ldr	r0, [sp, #4]
   14f48:	ldr	r1, [sp]
   14f4c:	add	r0, r0, r1, lsl #3
   14f50:	ldr	r0, [r0, #4]
   14f54:	bl	1300c <__assert_fail@plt+0x1bfc>
   14f58:	ldr	r0, [sp]
   14f5c:	add	r0, r0, #1
   14f60:	str	r0, [sp]
   14f64:	b	14f2c <__assert_fail@plt+0x3b1c>
   14f68:	ldr	r0, [sp, #4]
   14f6c:	ldr	r0, [r0, #4]
   14f70:	movw	r1, #61992	; 0xf228
   14f74:	movt	r1, #2
   14f78:	cmp	r0, r1
   14f7c:	beq	14fa8 <__assert_fail@plt+0x3b98>
   14f80:	ldr	r0, [sp, #4]
   14f84:	ldr	r0, [r0, #4]
   14f88:	bl	1300c <__assert_fail@plt+0x1bfc>
   14f8c:	movw	r0, #256	; 0x100
   14f90:	movw	lr, #61740	; 0xf12c
   14f94:	movt	lr, #2
   14f98:	str	r0, [lr]
   14f9c:	movw	r0, #61992	; 0xf228
   14fa0:	movt	r0, #2
   14fa4:	str	r0, [lr, #4]
   14fa8:	ldr	r0, [sp, #4]
   14fac:	movw	r1, #61740	; 0xf12c
   14fb0:	movt	r1, #2
   14fb4:	cmp	r0, r1
   14fb8:	beq	14fd8 <__assert_fail@plt+0x3bc8>
   14fbc:	ldr	r0, [sp, #4]
   14fc0:	bl	1300c <__assert_fail@plt+0x1bfc>
   14fc4:	movw	r0, #61732	; 0xf124
   14fc8:	movt	r0, #2
   14fcc:	movw	lr, #61740	; 0xf12c
   14fd0:	movt	lr, #2
   14fd4:	str	lr, [r0]
   14fd8:	movw	r0, #61736	; 0xf128
   14fdc:	movt	r0, #2
   14fe0:	movw	r1, #1
   14fe4:	str	r1, [r0]
   14fe8:	mov	sp, fp
   14fec:	pop	{fp, pc}
   14ff0:	push	{fp, lr}
   14ff4:	mov	fp, sp
   14ff8:	sub	sp, sp, #8
   14ffc:	str	r0, [sp, #4]
   15000:	str	r1, [sp]
   15004:	ldr	r0, [sp, #4]
   15008:	ldr	r1, [sp]
   1500c:	mvn	r2, #0
   15010:	movw	r3, #61944	; 0xf1f8
   15014:	movt	r3, #2
   15018:	bl	15024 <__assert_fail@plt+0x3c14>
   1501c:	mov	sp, fp
   15020:	pop	{fp, pc}
   15024:	push	{r4, r5, r6, sl, fp, lr}
   15028:	add	fp, sp, #16
   1502c:	sub	sp, sp, #88	; 0x58
   15030:	str	r0, [fp, #-20]	; 0xffffffec
   15034:	str	r1, [fp, #-24]	; 0xffffffe8
   15038:	str	r2, [fp, #-28]	; 0xffffffe4
   1503c:	str	r3, [fp, #-32]	; 0xffffffe0
   15040:	bl	11308 <__errno_location@plt>
   15044:	ldr	r1, [pc, #676]	; 152f0 <__assert_fail@plt+0x3ee0>
   15048:	ldr	r0, [r0]
   1504c:	str	r0, [fp, #-36]	; 0xffffffdc
   15050:	movw	r0, #61732	; 0xf124
   15054:	movt	r0, #2
   15058:	ldr	r0, [r0]
   1505c:	str	r0, [fp, #-40]	; 0xffffffd8
   15060:	str	r1, [fp, #-44]	; 0xffffffd4
   15064:	ldr	r0, [fp, #-20]	; 0xffffffec
   15068:	movw	r1, #0
   1506c:	cmp	r1, r0
   15070:	bgt	15084 <__assert_fail@plt+0x3c74>
   15074:	ldr	r0, [fp, #-20]	; 0xffffffec
   15078:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1507c:	cmp	r0, r1
   15080:	blt	15088 <__assert_fail@plt+0x3c78>
   15084:	bl	113e0 <abort@plt>
   15088:	movw	r0, #61736	; 0xf128
   1508c:	movt	r0, #2
   15090:	ldr	r0, [r0]
   15094:	ldr	r1, [fp, #-20]	; 0xffffffec
   15098:	cmp	r0, r1
   1509c:	bgt	15194 <__assert_fail@plt+0x3d84>
   150a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150a4:	movw	r1, #61740	; 0xf12c
   150a8:	movt	r1, #2
   150ac:	cmp	r0, r1
   150b0:	movw	r0, #0
   150b4:	moveq	r0, #1
   150b8:	and	r0, r0, #1
   150bc:	strb	r0, [fp, #-45]	; 0xffffffd3
   150c0:	movw	r0, #61736	; 0xf128
   150c4:	movt	r0, #2
   150c8:	ldr	r0, [r0]
   150cc:	str	r0, [sp, #52]	; 0x34
   150d0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   150d4:	tst	r0, #1
   150d8:	beq	150e8 <__assert_fail@plt+0x3cd8>
   150dc:	movw	r0, #0
   150e0:	str	r0, [sp, #32]
   150e4:	b	150f0 <__assert_fail@plt+0x3ce0>
   150e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150ec:	str	r0, [sp, #32]
   150f0:	ldr	r0, [sp, #32]
   150f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   150f8:	movw	r2, #61736	; 0xf128
   150fc:	movt	r2, #2
   15100:	ldr	r2, [r2]
   15104:	sub	r1, r1, r2
   15108:	add	r2, r1, #1
   1510c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15110:	add	r1, sp, #52	; 0x34
   15114:	movw	ip, #8
   15118:	str	ip, [sp]
   1511c:	bl	16ab4 <__assert_fail@plt+0x56a4>
   15120:	str	r0, [fp, #-40]	; 0xffffffd8
   15124:	movw	r1, #61732	; 0xf124
   15128:	movt	r1, #2
   1512c:	str	r0, [r1]
   15130:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15134:	tst	r0, #1
   15138:	beq	15158 <__assert_fail@plt+0x3d48>
   1513c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15140:	movw	r1, #61740	; 0xf12c
   15144:	movt	r1, #2
   15148:	ldr	r2, [r1]
   1514c:	str	r2, [r0]
   15150:	ldr	r1, [r1, #4]
   15154:	str	r1, [r0, #4]
   15158:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1515c:	movw	r1, #61736	; 0xf128
   15160:	movt	r1, #2
   15164:	ldr	r1, [r1]
   15168:	add	r0, r0, r1, lsl #3
   1516c:	ldr	r2, [sp, #52]	; 0x34
   15170:	sub	r1, r2, r1
   15174:	lsl	r2, r1, #3
   15178:	movw	r1, #0
   1517c:	and	r1, r1, #255	; 0xff
   15180:	bl	11338 <memset@plt>
   15184:	ldr	r0, [sp, #52]	; 0x34
   15188:	movw	r1, #61736	; 0xf128
   1518c:	movt	r1, #2
   15190:	str	r0, [r1]
   15194:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15198:	ldr	r1, [fp, #-20]	; 0xffffffec
   1519c:	ldr	r0, [r0, r1, lsl #3]
   151a0:	str	r0, [sp, #48]	; 0x30
   151a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   151ac:	add	r0, r0, r1, lsl #3
   151b0:	ldr	r0, [r0, #4]
   151b4:	str	r0, [sp, #44]	; 0x2c
   151b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151bc:	ldr	r0, [r0, #4]
   151c0:	orr	r0, r0, #1
   151c4:	str	r0, [sp, #40]	; 0x28
   151c8:	ldr	r0, [sp, #44]	; 0x2c
   151cc:	ldr	r1, [sp, #48]	; 0x30
   151d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   151d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   151d8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   151dc:	ldr	ip, [ip]
   151e0:	ldr	lr, [sp, #40]	; 0x28
   151e4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   151e8:	add	r4, r4, #8
   151ec:	ldr	r5, [fp, #-32]	; 0xffffffe0
   151f0:	ldr	r5, [r5, #40]	; 0x28
   151f4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   151f8:	ldr	r6, [r6, #44]	; 0x2c
   151fc:	str	ip, [sp]
   15200:	str	lr, [sp, #4]
   15204:	str	r4, [sp, #8]
   15208:	str	r5, [sp, #12]
   1520c:	str	r6, [sp, #16]
   15210:	bl	1361c <__assert_fail@plt+0x220c>
   15214:	str	r0, [sp, #36]	; 0x24
   15218:	ldr	r0, [sp, #48]	; 0x30
   1521c:	ldr	r1, [sp, #36]	; 0x24
   15220:	cmp	r0, r1
   15224:	bhi	152d0 <__assert_fail@plt+0x3ec0>
   15228:	ldr	r0, [sp, #36]	; 0x24
   1522c:	add	r0, r0, #1
   15230:	str	r0, [sp, #48]	; 0x30
   15234:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15238:	ldr	r2, [fp, #-20]	; 0xffffffec
   1523c:	add	r1, r1, r2, lsl #3
   15240:	str	r0, [r1]
   15244:	ldr	r0, [sp, #44]	; 0x2c
   15248:	movw	r1, #61992	; 0xf228
   1524c:	movt	r1, #2
   15250:	cmp	r0, r1
   15254:	beq	15260 <__assert_fail@plt+0x3e50>
   15258:	ldr	r0, [sp, #44]	; 0x2c
   1525c:	bl	1300c <__assert_fail@plt+0x1bfc>
   15260:	ldr	r0, [sp, #48]	; 0x30
   15264:	bl	16878 <__assert_fail@plt+0x5468>
   15268:	mov	lr, r0
   1526c:	str	r0, [sp, #44]	; 0x2c
   15270:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15274:	ldr	r1, [fp, #-20]	; 0xffffffec
   15278:	add	r0, r0, r1, lsl #3
   1527c:	str	lr, [r0, #4]
   15280:	ldr	r0, [sp, #44]	; 0x2c
   15284:	ldr	r1, [sp, #48]	; 0x30
   15288:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1528c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15290:	ldr	lr, [fp, #-32]	; 0xffffffe0
   15294:	ldr	lr, [lr]
   15298:	ldr	ip, [sp, #40]	; 0x28
   1529c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   152a0:	add	r4, r4, #8
   152a4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   152a8:	ldr	r5, [r5, #40]	; 0x28
   152ac:	ldr	r6, [fp, #-32]	; 0xffffffe0
   152b0:	ldr	r6, [r6, #44]	; 0x2c
   152b4:	str	lr, [sp]
   152b8:	str	ip, [sp, #4]
   152bc:	str	r4, [sp, #8]
   152c0:	str	r5, [sp, #12]
   152c4:	str	r6, [sp, #16]
   152c8:	bl	1361c <__assert_fail@plt+0x220c>
   152cc:	str	r0, [sp, #28]
   152d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   152d4:	str	r0, [sp, #24]
   152d8:	bl	11308 <__errno_location@plt>
   152dc:	ldr	lr, [sp, #24]
   152e0:	str	lr, [r0]
   152e4:	ldr	r0, [sp, #44]	; 0x2c
   152e8:	sub	sp, fp, #16
   152ec:	pop	{r4, r5, r6, sl, fp, pc}
   152f0:	svcvc	0x00ffffff
   152f4:	push	{fp, lr}
   152f8:	mov	fp, sp
   152fc:	sub	sp, sp, #16
   15300:	str	r0, [fp, #-4]
   15304:	str	r1, [sp, #8]
   15308:	str	r2, [sp, #4]
   1530c:	ldr	r0, [fp, #-4]
   15310:	ldr	r1, [sp, #8]
   15314:	ldr	r2, [sp, #4]
   15318:	movw	r3, #61944	; 0xf1f8
   1531c:	movt	r3, #2
   15320:	bl	15024 <__assert_fail@plt+0x3c14>
   15324:	mov	sp, fp
   15328:	pop	{fp, pc}
   1532c:	push	{fp, lr}
   15330:	mov	fp, sp
   15334:	sub	sp, sp, #8
   15338:	str	r0, [sp, #4]
   1533c:	ldr	r1, [sp, #4]
   15340:	movw	r0, #0
   15344:	bl	14ff0 <__assert_fail@plt+0x3be0>
   15348:	mov	sp, fp
   1534c:	pop	{fp, pc}
   15350:	push	{fp, lr}
   15354:	mov	fp, sp
   15358:	sub	sp, sp, #8
   1535c:	str	r0, [sp, #4]
   15360:	str	r1, [sp]
   15364:	ldr	r1, [sp, #4]
   15368:	ldr	r2, [sp]
   1536c:	movw	r0, #0
   15370:	bl	152f4 <__assert_fail@plt+0x3ee4>
   15374:	mov	sp, fp
   15378:	pop	{fp, pc}
   1537c:	push	{fp, lr}
   15380:	mov	fp, sp
   15384:	sub	sp, sp, #64	; 0x40
   15388:	str	r0, [fp, #-4]
   1538c:	str	r1, [fp, #-8]
   15390:	str	r2, [fp, #-12]
   15394:	ldr	r1, [fp, #-8]
   15398:	add	r0, sp, #4
   1539c:	bl	153bc <__assert_fail@plt+0x3fac>
   153a0:	ldr	r0, [fp, #-4]
   153a4:	ldr	r1, [fp, #-12]
   153a8:	mvn	r2, #0
   153ac:	add	r3, sp, #4
   153b0:	bl	15024 <__assert_fail@plt+0x3c14>
   153b4:	mov	sp, fp
   153b8:	pop	{fp, pc}
   153bc:	push	{fp, lr}
   153c0:	mov	fp, sp
   153c4:	sub	sp, sp, #8
   153c8:	str	r1, [sp, #4]
   153cc:	mov	r1, r0
   153d0:	str	r0, [sp]
   153d4:	mov	r0, r1
   153d8:	movw	r1, #0
   153dc:	and	r1, r1, #255	; 0xff
   153e0:	movw	r2, #48	; 0x30
   153e4:	bl	11338 <memset@plt>
   153e8:	ldr	r0, [sp, #4]
   153ec:	cmp	r0, #10
   153f0:	bne	153f8 <__assert_fail@plt+0x3fe8>
   153f4:	bl	113e0 <abort@plt>
   153f8:	ldr	r0, [sp, #4]
   153fc:	ldr	r1, [sp]
   15400:	str	r0, [r1]
   15404:	mov	sp, fp
   15408:	pop	{fp, pc}
   1540c:	push	{fp, lr}
   15410:	mov	fp, sp
   15414:	sub	sp, sp, #64	; 0x40
   15418:	str	r0, [fp, #-4]
   1541c:	str	r1, [fp, #-8]
   15420:	str	r2, [fp, #-12]
   15424:	str	r3, [fp, #-16]
   15428:	ldr	r1, [fp, #-8]
   1542c:	mov	r0, sp
   15430:	bl	153bc <__assert_fail@plt+0x3fac>
   15434:	ldr	r0, [fp, #-4]
   15438:	ldr	r1, [fp, #-12]
   1543c:	ldr	r2, [fp, #-16]
   15440:	mov	r3, sp
   15444:	bl	15024 <__assert_fail@plt+0x3c14>
   15448:	mov	sp, fp
   1544c:	pop	{fp, pc}
   15450:	push	{fp, lr}
   15454:	mov	fp, sp
   15458:	sub	sp, sp, #8
   1545c:	str	r0, [sp, #4]
   15460:	str	r1, [sp]
   15464:	ldr	r1, [sp, #4]
   15468:	ldr	r2, [sp]
   1546c:	movw	r0, #0
   15470:	bl	1537c <__assert_fail@plt+0x3f6c>
   15474:	mov	sp, fp
   15478:	pop	{fp, pc}
   1547c:	push	{fp, lr}
   15480:	mov	fp, sp
   15484:	sub	sp, sp, #16
   15488:	str	r0, [fp, #-4]
   1548c:	str	r1, [sp, #8]
   15490:	str	r2, [sp, #4]
   15494:	ldr	r1, [fp, #-4]
   15498:	ldr	r2, [sp, #8]
   1549c:	ldr	r3, [sp, #4]
   154a0:	movw	r0, #0
   154a4:	bl	1540c <__assert_fail@plt+0x3ffc>
   154a8:	mov	sp, fp
   154ac:	pop	{fp, pc}
   154b0:	push	{fp, lr}
   154b4:	mov	fp, sp
   154b8:	sub	sp, sp, #72	; 0x48
   154bc:	movw	r3, #61944	; 0xf1f8
   154c0:	movt	r3, #2
   154c4:	str	r0, [fp, #-4]
   154c8:	str	r1, [fp, #-8]
   154cc:	strb	r2, [fp, #-9]
   154d0:	add	r0, sp, #12
   154d4:	mov	r1, r0
   154d8:	str	r0, [sp, #8]
   154dc:	mov	r0, r1
   154e0:	mov	r1, r3
   154e4:	movw	r2, #48	; 0x30
   154e8:	bl	111b8 <memcpy@plt>
   154ec:	ldr	r0, [sp, #8]
   154f0:	ldrb	r1, [fp, #-9]
   154f4:	movw	r2, #1
   154f8:	bl	133c0 <__assert_fail@plt+0x1fb0>
   154fc:	ldr	r1, [fp, #-4]
   15500:	ldr	r2, [fp, #-8]
   15504:	movw	r3, #0
   15508:	str	r0, [sp, #4]
   1550c:	mov	r0, r3
   15510:	add	r3, sp, #12
   15514:	bl	15024 <__assert_fail@plt+0x3c14>
   15518:	mov	sp, fp
   1551c:	pop	{fp, pc}
   15520:	push	{fp, lr}
   15524:	mov	fp, sp
   15528:	sub	sp, sp, #8
   1552c:	str	r0, [sp, #4]
   15530:	strb	r1, [sp, #3]
   15534:	ldr	r0, [sp, #4]
   15538:	mvn	r1, #0
   1553c:	ldrb	r2, [sp, #3]
   15540:	bl	154b0 <__assert_fail@plt+0x40a0>
   15544:	mov	sp, fp
   15548:	pop	{fp, pc}
   1554c:	push	{fp, lr}
   15550:	mov	fp, sp
   15554:	sub	sp, sp, #8
   15558:	str	r0, [sp, #4]
   1555c:	ldr	r0, [sp, #4]
   15560:	movw	r1, #58	; 0x3a
   15564:	and	r1, r1, #255	; 0xff
   15568:	bl	15520 <__assert_fail@plt+0x4110>
   1556c:	mov	sp, fp
   15570:	pop	{fp, pc}
   15574:	push	{fp, lr}
   15578:	mov	fp, sp
   1557c:	sub	sp, sp, #8
   15580:	str	r0, [sp, #4]
   15584:	str	r1, [sp]
   15588:	ldr	r0, [sp, #4]
   1558c:	ldr	r1, [sp]
   15590:	movw	r2, #58	; 0x3a
   15594:	and	r2, r2, #255	; 0xff
   15598:	bl	154b0 <__assert_fail@plt+0x40a0>
   1559c:	mov	sp, fp
   155a0:	pop	{fp, pc}
   155a4:	push	{fp, lr}
   155a8:	mov	fp, sp
   155ac:	sub	sp, sp, #120	; 0x78
   155b0:	str	r0, [fp, #-4]
   155b4:	str	r1, [fp, #-8]
   155b8:	str	r2, [fp, #-12]
   155bc:	ldr	r1, [fp, #-8]
   155c0:	add	r0, sp, #12
   155c4:	bl	153bc <__assert_fail@plt+0x3fac>
   155c8:	add	r0, sp, #60	; 0x3c
   155cc:	mov	r1, r0
   155d0:	add	r2, sp, #12
   155d4:	str	r0, [sp, #8]
   155d8:	mov	r0, r1
   155dc:	mov	r1, r2
   155e0:	movw	r2, #48	; 0x30
   155e4:	bl	111b8 <memcpy@plt>
   155e8:	ldr	r0, [sp, #8]
   155ec:	movw	r1, #58	; 0x3a
   155f0:	and	r1, r1, #255	; 0xff
   155f4:	movw	r2, #1
   155f8:	bl	133c0 <__assert_fail@plt+0x1fb0>
   155fc:	ldr	r1, [fp, #-4]
   15600:	ldr	r2, [fp, #-12]
   15604:	str	r0, [sp, #4]
   15608:	mov	r0, r1
   1560c:	mov	r1, r2
   15610:	mvn	r2, #0
   15614:	add	r3, sp, #60	; 0x3c
   15618:	bl	15024 <__assert_fail@plt+0x3c14>
   1561c:	mov	sp, fp
   15620:	pop	{fp, pc}
   15624:	push	{fp, lr}
   15628:	mov	fp, sp
   1562c:	sub	sp, sp, #24
   15630:	str	r0, [fp, #-4]
   15634:	str	r1, [fp, #-8]
   15638:	str	r2, [sp, #12]
   1563c:	str	r3, [sp, #8]
   15640:	ldr	r0, [fp, #-4]
   15644:	ldr	r1, [fp, #-8]
   15648:	ldr	r2, [sp, #12]
   1564c:	ldr	r3, [sp, #8]
   15650:	mvn	ip, #0
   15654:	str	ip, [sp]
   15658:	bl	15664 <__assert_fail@plt+0x4254>
   1565c:	mov	sp, fp
   15660:	pop	{fp, pc}
   15664:	push	{fp, lr}
   15668:	mov	fp, sp
   1566c:	sub	sp, sp, #72	; 0x48
   15670:	ldr	ip, [fp, #8]
   15674:	movw	lr, #61944	; 0xf1f8
   15678:	movt	lr, #2
   1567c:	str	r0, [fp, #-4]
   15680:	str	r1, [fp, #-8]
   15684:	str	r2, [fp, #-12]
   15688:	str	r3, [fp, #-16]
   1568c:	add	r0, sp, #8
   15690:	mov	r1, r0
   15694:	str	r0, [sp, #4]
   15698:	mov	r0, r1
   1569c:	mov	r1, lr
   156a0:	movw	r2, #48	; 0x30
   156a4:	str	ip, [sp]
   156a8:	bl	111b8 <memcpy@plt>
   156ac:	ldr	r1, [fp, #-8]
   156b0:	ldr	r2, [fp, #-12]
   156b4:	ldr	r0, [sp, #4]
   156b8:	bl	134c0 <__assert_fail@plt+0x20b0>
   156bc:	ldr	r0, [fp, #-4]
   156c0:	ldr	r1, [fp, #-16]
   156c4:	ldr	r2, [fp, #8]
   156c8:	add	r3, sp, #8
   156cc:	bl	15024 <__assert_fail@plt+0x3c14>
   156d0:	mov	sp, fp
   156d4:	pop	{fp, pc}
   156d8:	push	{fp, lr}
   156dc:	mov	fp, sp
   156e0:	sub	sp, sp, #16
   156e4:	str	r0, [fp, #-4]
   156e8:	str	r1, [sp, #8]
   156ec:	str	r2, [sp, #4]
   156f0:	ldr	r1, [fp, #-4]
   156f4:	ldr	r2, [sp, #8]
   156f8:	ldr	r3, [sp, #4]
   156fc:	movw	r0, #0
   15700:	bl	15624 <__assert_fail@plt+0x4214>
   15704:	mov	sp, fp
   15708:	pop	{fp, pc}
   1570c:	push	{fp, lr}
   15710:	mov	fp, sp
   15714:	sub	sp, sp, #24
   15718:	str	r0, [fp, #-4]
   1571c:	str	r1, [fp, #-8]
   15720:	str	r2, [sp, #12]
   15724:	str	r3, [sp, #8]
   15728:	ldr	r1, [fp, #-4]
   1572c:	ldr	r2, [fp, #-8]
   15730:	ldr	r3, [sp, #12]
   15734:	ldr	r0, [sp, #8]
   15738:	movw	ip, #0
   1573c:	str	r0, [sp, #4]
   15740:	mov	r0, ip
   15744:	ldr	ip, [sp, #4]
   15748:	str	ip, [sp]
   1574c:	bl	15664 <__assert_fail@plt+0x4254>
   15750:	mov	sp, fp
   15754:	pop	{fp, pc}
   15758:	push	{fp, lr}
   1575c:	mov	fp, sp
   15760:	sub	sp, sp, #16
   15764:	str	r0, [fp, #-4]
   15768:	str	r1, [sp, #8]
   1576c:	str	r2, [sp, #4]
   15770:	ldr	r0, [fp, #-4]
   15774:	ldr	r1, [sp, #8]
   15778:	ldr	r2, [sp, #4]
   1577c:	movw	r3, #61748	; 0xf134
   15780:	movt	r3, #2
   15784:	bl	15024 <__assert_fail@plt+0x3c14>
   15788:	mov	sp, fp
   1578c:	pop	{fp, pc}
   15790:	push	{fp, lr}
   15794:	mov	fp, sp
   15798:	sub	sp, sp, #8
   1579c:	str	r0, [sp, #4]
   157a0:	str	r1, [sp]
   157a4:	ldr	r1, [sp, #4]
   157a8:	ldr	r2, [sp]
   157ac:	movw	r0, #0
   157b0:	bl	15758 <__assert_fail@plt+0x4348>
   157b4:	mov	sp, fp
   157b8:	pop	{fp, pc}
   157bc:	push	{fp, lr}
   157c0:	mov	fp, sp
   157c4:	sub	sp, sp, #8
   157c8:	str	r0, [sp, #4]
   157cc:	str	r1, [sp]
   157d0:	ldr	r0, [sp, #4]
   157d4:	ldr	r1, [sp]
   157d8:	mvn	r2, #0
   157dc:	bl	15758 <__assert_fail@plt+0x4348>
   157e0:	mov	sp, fp
   157e4:	pop	{fp, pc}
   157e8:	push	{fp, lr}
   157ec:	mov	fp, sp
   157f0:	sub	sp, sp, #8
   157f4:	str	r0, [sp, #4]
   157f8:	ldr	r1, [sp, #4]
   157fc:	movw	r0, #0
   15800:	bl	157bc <__assert_fail@plt+0x43ac>
   15804:	mov	sp, fp
   15808:	pop	{fp, pc}
   1580c:	push	{fp, lr}
   15810:	mov	fp, sp
   15814:	sub	sp, sp, #24
   15818:	str	r0, [fp, #-8]
   1581c:	str	r1, [sp, #12]
   15820:	ldr	r0, [fp, #-8]
   15824:	bl	112cc <gettext@plt>
   15828:	str	r0, [sp, #8]
   1582c:	ldr	r0, [sp, #8]
   15830:	ldr	r1, [fp, #-8]
   15834:	cmp	r0, r1
   15838:	beq	15848 <__assert_fail@plt+0x4438>
   1583c:	ldr	r0, [sp, #8]
   15840:	str	r0, [fp, #-4]
   15844:	b	15914 <__assert_fail@plt+0x4504>
   15848:	bl	1bb44 <__assert_fail@plt+0xa734>
   1584c:	str	r0, [sp, #4]
   15850:	ldr	r0, [sp, #4]
   15854:	movw	r1, #59894	; 0xe9f6
   15858:	movt	r1, #1
   1585c:	bl	1b540 <__assert_fail@plt+0xa130>
   15860:	cmp	r0, #0
   15864:	bne	1589c <__assert_fail@plt+0x448c>
   15868:	ldr	r0, [fp, #-8]
   1586c:	ldrb	r0, [r0]
   15870:	cmp	r0, #96	; 0x60
   15874:	movw	r0, #0
   15878:	moveq	r0, #1
   1587c:	tst	r0, #1
   15880:	movw	r0, #59904	; 0xea00
   15884:	movt	r0, #1
   15888:	movw	r1, #59900	; 0xe9fc
   1588c:	movt	r1, #1
   15890:	movne	r0, r1
   15894:	str	r0, [fp, #-4]
   15898:	b	15914 <__assert_fail@plt+0x4504>
   1589c:	ldr	r0, [sp, #4]
   158a0:	movw	r1, #59908	; 0xea04
   158a4:	movt	r1, #1
   158a8:	bl	1b540 <__assert_fail@plt+0xa130>
   158ac:	cmp	r0, #0
   158b0:	bne	158e8 <__assert_fail@plt+0x44d8>
   158b4:	ldr	r0, [fp, #-8]
   158b8:	ldrb	r0, [r0]
   158bc:	cmp	r0, #96	; 0x60
   158c0:	movw	r0, #0
   158c4:	moveq	r0, #1
   158c8:	tst	r0, #1
   158cc:	movw	r0, #59920	; 0xea10
   158d0:	movt	r0, #1
   158d4:	movw	r1, #59916	; 0xea0c
   158d8:	movt	r1, #1
   158dc:	movne	r0, r1
   158e0:	str	r0, [fp, #-4]
   158e4:	b	15914 <__assert_fail@plt+0x4504>
   158e8:	ldr	r0, [sp, #12]
   158ec:	cmp	r0, #9
   158f0:	movw	r0, #0
   158f4:	moveq	r0, #1
   158f8:	tst	r0, #1
   158fc:	movw	r0, #59892	; 0xe9f4
   15900:	movt	r0, #1
   15904:	movw	r1, #59888	; 0xe9f0
   15908:	movt	r1, #1
   1590c:	movne	r0, r1
   15910:	str	r0, [fp, #-4]
   15914:	ldr	r0, [fp, #-4]
   15918:	mov	sp, fp
   1591c:	pop	{fp, pc}
   15920:	push	{fp, lr}
   15924:	mov	fp, sp
   15928:	sub	sp, sp, #48	; 0x30
   1592c:	ldr	ip, [fp, #8]
   15930:	str	r0, [fp, #-4]
   15934:	str	r1, [fp, #-8]
   15938:	str	r2, [fp, #-12]
   1593c:	str	r3, [fp, #-16]
   15940:	ldr	r0, [fp, #-12]
   15944:	movw	r1, #0
   15948:	cmp	r0, r1
   1594c:	str	ip, [sp, #16]
   15950:	beq	15968 <__assert_fail@plt+0x4558>
   15954:	ldr	r0, [fp, #-4]
   15958:	movw	r1, #58	; 0x3a
   1595c:	bl	112f0 <strchr@plt>
   15960:	str	r0, [sp, #12]
   15964:	b	15974 <__assert_fail@plt+0x4564>
   15968:	movw	r0, #0
   1596c:	str	r0, [sp, #12]
   15970:	b	15974 <__assert_fail@plt+0x4564>
   15974:	ldr	r0, [sp, #12]
   15978:	str	r0, [fp, #-20]	; 0xffffffec
   1597c:	ldr	r0, [fp, #-4]
   15980:	ldr	r1, [fp, #-20]	; 0xffffffec
   15984:	ldr	r2, [fp, #-8]
   15988:	ldr	r3, [fp, #-12]
   1598c:	ldr	ip, [fp, #-16]
   15990:	ldr	lr, [fp, #8]
   15994:	str	ip, [sp]
   15998:	str	lr, [sp, #4]
   1599c:	bl	15a3c <__assert_fail@plt+0x462c>
   159a0:	str	r0, [sp, #24]
   159a4:	ldr	r0, [fp, #-12]
   159a8:	movw	r1, #0
   159ac:	cmp	r0, r1
   159b0:	beq	15a30 <__assert_fail@plt+0x4620>
   159b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   159b8:	movw	r1, #0
   159bc:	cmp	r0, r1
   159c0:	bne	15a30 <__assert_fail@plt+0x4620>
   159c4:	ldr	r0, [sp, #24]
   159c8:	movw	r1, #0
   159cc:	cmp	r0, r1
   159d0:	beq	15a30 <__assert_fail@plt+0x4620>
   159d4:	ldr	r0, [fp, #-4]
   159d8:	movw	r1, #46	; 0x2e
   159dc:	bl	112f0 <strchr@plt>
   159e0:	str	r0, [sp, #20]
   159e4:	ldr	r0, [sp, #20]
   159e8:	movw	r1, #0
   159ec:	cmp	r0, r1
   159f0:	beq	15a2c <__assert_fail@plt+0x461c>
   159f4:	ldr	r0, [fp, #-4]
   159f8:	ldr	r1, [sp, #20]
   159fc:	ldr	r2, [fp, #-8]
   15a00:	ldr	r3, [fp, #-12]
   15a04:	ldr	ip, [fp, #-16]
   15a08:	ldr	lr, [fp, #8]
   15a0c:	str	ip, [sp]
   15a10:	str	lr, [sp, #4]
   15a14:	bl	15a3c <__assert_fail@plt+0x462c>
   15a18:	movw	r1, #0
   15a1c:	cmp	r0, r1
   15a20:	bne	15a2c <__assert_fail@plt+0x461c>
   15a24:	movw	r0, #0
   15a28:	str	r0, [sp, #24]
   15a2c:	b	15a30 <__assert_fail@plt+0x4620>
   15a30:	ldr	r0, [sp, #24]
   15a34:	mov	sp, fp
   15a38:	pop	{fp, pc}
   15a3c:	push	{fp, lr}
   15a40:	mov	fp, sp
   15a44:	sub	sp, sp, #128	; 0x80
   15a48:	ldr	ip, [fp, #12]
   15a4c:	ldr	lr, [fp, #8]
   15a50:	str	r0, [fp, #-4]
   15a54:	str	r1, [fp, #-8]
   15a58:	str	r2, [fp, #-12]
   15a5c:	str	r3, [fp, #-16]
   15a60:	movw	r0, #0
   15a64:	str	r0, [fp, #-40]	; 0xffffffd8
   15a68:	ldr	r1, [fp, #-12]
   15a6c:	ldr	r1, [r1]
   15a70:	str	r1, [fp, #-44]	; 0xffffffd4
   15a74:	ldr	r1, [fp, #-16]
   15a78:	cmp	r1, r0
   15a7c:	str	lr, [sp, #36]	; 0x24
   15a80:	str	ip, [sp, #32]
   15a84:	beq	15a98 <__assert_fail@plt+0x4688>
   15a88:	ldr	r0, [fp, #-16]
   15a8c:	ldr	r0, [r0]
   15a90:	str	r0, [sp, #28]
   15a94:	b	15aa4 <__assert_fail@plt+0x4694>
   15a98:	mvn	r0, #0
   15a9c:	str	r0, [sp, #28]
   15aa0:	b	15aa4 <__assert_fail@plt+0x4694>
   15aa4:	ldr	r0, [sp, #28]
   15aa8:	str	r0, [fp, #-48]	; 0xffffffd0
   15aac:	movw	r0, #0
   15ab0:	str	r0, [fp, #-20]	; 0xffffffec
   15ab4:	ldr	r1, [fp, #8]
   15ab8:	cmp	r1, r0
   15abc:	beq	15acc <__assert_fail@plt+0x46bc>
   15ac0:	ldr	r0, [fp, #8]
   15ac4:	movw	r1, #0
   15ac8:	str	r1, [r0]
   15acc:	ldr	r0, [fp, #12]
   15ad0:	movw	r1, #0
   15ad4:	cmp	r0, r1
   15ad8:	beq	15ae8 <__assert_fail@plt+0x46d8>
   15adc:	ldr	r0, [fp, #12]
   15ae0:	movw	r1, #0
   15ae4:	str	r1, [r0]
   15ae8:	movw	r0, #0
   15aec:	str	r0, [fp, #-32]	; 0xffffffe0
   15af0:	ldr	r1, [fp, #-8]
   15af4:	cmp	r1, r0
   15af8:	bne	15b1c <__assert_fail@plt+0x470c>
   15afc:	ldr	r0, [fp, #-4]
   15b00:	ldrsb	r0, [r0]
   15b04:	cmp	r0, #0
   15b08:	beq	15b18 <__assert_fail@plt+0x4708>
   15b0c:	ldr	r0, [fp, #-4]
   15b10:	bl	195a4 <__assert_fail@plt+0x8194>
   15b14:	str	r0, [fp, #-32]	; 0xffffffe0
   15b18:	b	15b64 <__assert_fail@plt+0x4754>
   15b1c:	ldr	r0, [fp, #-8]
   15b20:	ldr	r1, [fp, #-4]
   15b24:	sub	r0, r0, r1
   15b28:	str	r0, [fp, #-52]	; 0xffffffcc
   15b2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15b30:	cmp	r0, #0
   15b34:	beq	15b60 <__assert_fail@plt+0x4750>
   15b38:	ldr	r0, [fp, #-4]
   15b3c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15b40:	add	r1, r1, #1
   15b44:	bl	19514 <__assert_fail@plt+0x8104>
   15b48:	str	r0, [fp, #-32]	; 0xffffffe0
   15b4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15b54:	add	r0, r0, r1
   15b58:	movw	r1, #0
   15b5c:	strb	r1, [r0]
   15b60:	b	15b64 <__assert_fail@plt+0x4754>
   15b64:	ldr	r0, [fp, #-8]
   15b68:	movw	r1, #0
   15b6c:	cmp	r0, r1
   15b70:	beq	15b84 <__assert_fail@plt+0x4774>
   15b74:	ldr	r0, [fp, #-8]
   15b78:	ldrb	r0, [r0, #1]
   15b7c:	cmp	r0, #0
   15b80:	bne	15b90 <__assert_fail@plt+0x4780>
   15b84:	movw	r0, #0
   15b88:	str	r0, [sp, #24]
   15b8c:	b	15b9c <__assert_fail@plt+0x478c>
   15b90:	ldr	r0, [fp, #-8]
   15b94:	add	r0, r0, #1
   15b98:	str	r0, [sp, #24]
   15b9c:	ldr	r0, [sp, #24]
   15ba0:	str	r0, [fp, #-36]	; 0xffffffdc
   15ba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ba8:	movw	r1, #0
   15bac:	cmp	r0, r1
   15bb0:	beq	15d44 <__assert_fail@plt+0x4934>
   15bb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bb8:	ldrb	r0, [r0]
   15bbc:	cmp	r0, #43	; 0x2b
   15bc0:	bne	15bd0 <__assert_fail@plt+0x47c0>
   15bc4:	movw	r0, #0
   15bc8:	str	r0, [sp, #20]
   15bcc:	b	15bdc <__assert_fail@plt+0x47cc>
   15bd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bd4:	bl	1114c <getpwnam@plt>
   15bd8:	str	r0, [sp, #20]
   15bdc:	ldr	r0, [sp, #20]
   15be0:	str	r0, [fp, #-24]	; 0xffffffe8
   15be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15be8:	movw	r1, #0
   15bec:	cmp	r0, r1
   15bf0:	bne	15cb4 <__assert_fail@plt+0x48a4>
   15bf4:	ldr	r0, [fp, #-8]
   15bf8:	movw	r1, #0
   15bfc:	cmp	r0, r1
   15c00:	movw	r0, #0
   15c04:	str	r0, [sp, #16]
   15c08:	beq	15c24 <__assert_fail@plt+0x4814>
   15c0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c10:	movw	r1, #0
   15c14:	cmp	r0, r1
   15c18:	movw	r0, #0
   15c1c:	moveq	r0, #1
   15c20:	str	r0, [sp, #16]
   15c24:	ldr	r0, [sp, #16]
   15c28:	and	r0, r0, #1
   15c2c:	strb	r0, [fp, #-53]	; 0xffffffcb
   15c30:	ldrb	r0, [fp, #-53]	; 0xffffffcb
   15c34:	tst	r0, #1
   15c38:	beq	15c50 <__assert_fail@plt+0x4840>
   15c3c:	movw	r0, #61804	; 0xf16c
   15c40:	movt	r0, #2
   15c44:	ldr	r0, [r0]
   15c48:	str	r0, [fp, #-20]	; 0xffffffec
   15c4c:	b	15cb0 <__assert_fail@plt+0x48a0>
   15c50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c54:	movw	r1, #0
   15c58:	movw	r2, #10
   15c5c:	sub	r3, fp, #60	; 0x3c
   15c60:	movw	ip, #57779	; 0xe1b3
   15c64:	movt	ip, #1
   15c68:	str	ip, [sp]
   15c6c:	bl	19684 <__assert_fail@plt+0x8274>
   15c70:	cmp	r0, #0
   15c74:	bne	15c9c <__assert_fail@plt+0x488c>
   15c78:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15c7c:	cmn	r0, #1
   15c80:	bhi	15c9c <__assert_fail@plt+0x488c>
   15c84:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15c88:	cmn	r0, #1
   15c8c:	beq	15c9c <__assert_fail@plt+0x488c>
   15c90:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15c94:	str	r0, [fp, #-44]	; 0xffffffd4
   15c98:	b	15cac <__assert_fail@plt+0x489c>
   15c9c:	movw	r0, #61796	; 0xf164
   15ca0:	movt	r0, #2
   15ca4:	ldr	r0, [r0]
   15ca8:	str	r0, [fp, #-20]	; 0xffffffec
   15cac:	b	15cb0 <__assert_fail@plt+0x48a0>
   15cb0:	b	15d40 <__assert_fail@plt+0x4930>
   15cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cb8:	ldr	r0, [r0, #8]
   15cbc:	str	r0, [fp, #-44]	; 0xffffffd4
   15cc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15cc4:	movw	r1, #0
   15cc8:	cmp	r0, r1
   15ccc:	bne	15d3c <__assert_fail@plt+0x492c>
   15cd0:	ldr	r0, [fp, #-8]
   15cd4:	movw	r1, #0
   15cd8:	cmp	r0, r1
   15cdc:	beq	15d3c <__assert_fail@plt+0x492c>
   15ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ce4:	ldr	r0, [r0, #12]
   15ce8:	str	r0, [fp, #-48]	; 0xffffffd0
   15cec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15cf0:	bl	113ec <getgrgid@plt>
   15cf4:	str	r0, [fp, #-28]	; 0xffffffe4
   15cf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15cfc:	movw	lr, #0
   15d00:	cmp	r0, lr
   15d04:	beq	15d18 <__assert_fail@plt+0x4908>
   15d08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15d0c:	ldr	r0, [r0]
   15d10:	str	r0, [sp, #12]
   15d14:	b	15d2c <__assert_fail@plt+0x491c>
   15d18:	add	r2, sp, #47	; 0x2f
   15d1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d20:	mov	r1, #0
   15d24:	bl	1304c <__assert_fail@plt+0x1c3c>
   15d28:	str	r0, [sp, #12]
   15d2c:	ldr	r0, [sp, #12]
   15d30:	bl	195a4 <__assert_fail@plt+0x8194>
   15d34:	str	r0, [fp, #-40]	; 0xffffffd8
   15d38:	bl	11128 <endgrent@plt>
   15d3c:	b	15d40 <__assert_fail@plt+0x4930>
   15d40:	bl	1138c <endpwent@plt>
   15d44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d48:	movw	r1, #0
   15d4c:	cmp	r0, r1
   15d50:	beq	15e20 <__assert_fail@plt+0x4a10>
   15d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   15d58:	movw	r1, #0
   15d5c:	cmp	r0, r1
   15d60:	bne	15e20 <__assert_fail@plt+0x4a10>
   15d64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d68:	ldrb	r0, [r0]
   15d6c:	cmp	r0, #43	; 0x2b
   15d70:	bne	15d80 <__assert_fail@plt+0x4970>
   15d74:	movw	r0, #0
   15d78:	str	r0, [sp, #8]
   15d7c:	b	15d8c <__assert_fail@plt+0x497c>
   15d80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d84:	bl	113f8 <getgrnam@plt>
   15d88:	str	r0, [sp, #8]
   15d8c:	ldr	r0, [sp, #8]
   15d90:	str	r0, [fp, #-28]	; 0xffffffe4
   15d94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15d98:	movw	r1, #0
   15d9c:	cmp	r0, r1
   15da0:	bne	15e04 <__assert_fail@plt+0x49f4>
   15da4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15da8:	movw	r1, #0
   15dac:	movw	r2, #10
   15db0:	add	r3, sp, #40	; 0x28
   15db4:	movw	ip, #57779	; 0xe1b3
   15db8:	movt	ip, #1
   15dbc:	str	ip, [sp]
   15dc0:	bl	19684 <__assert_fail@plt+0x8274>
   15dc4:	cmp	r0, #0
   15dc8:	bne	15df0 <__assert_fail@plt+0x49e0>
   15dcc:	ldr	r0, [sp, #40]	; 0x28
   15dd0:	cmn	r0, #1
   15dd4:	bhi	15df0 <__assert_fail@plt+0x49e0>
   15dd8:	ldr	r0, [sp, #40]	; 0x28
   15ddc:	cmn	r0, #1
   15de0:	beq	15df0 <__assert_fail@plt+0x49e0>
   15de4:	ldr	r0, [sp, #40]	; 0x28
   15de8:	str	r0, [fp, #-48]	; 0xffffffd0
   15dec:	b	15e00 <__assert_fail@plt+0x49f0>
   15df0:	movw	r0, #61800	; 0xf168
   15df4:	movt	r0, #2
   15df8:	ldr	r0, [r0]
   15dfc:	str	r0, [fp, #-20]	; 0xffffffec
   15e00:	b	15e10 <__assert_fail@plt+0x4a00>
   15e04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15e08:	ldr	r0, [r0, #8]
   15e0c:	str	r0, [fp, #-48]	; 0xffffffd0
   15e10:	bl	11128 <endgrent@plt>
   15e14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e18:	bl	195a4 <__assert_fail@plt+0x8194>
   15e1c:	str	r0, [fp, #-40]	; 0xffffffd8
   15e20:	ldr	r0, [fp, #-20]	; 0xffffffec
   15e24:	movw	r1, #0
   15e28:	cmp	r0, r1
   15e2c:	bne	15ea4 <__assert_fail@plt+0x4a94>
   15e30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e34:	ldr	r1, [fp, #-12]
   15e38:	str	r0, [r1]
   15e3c:	ldr	r0, [fp, #-16]
   15e40:	movw	r1, #0
   15e44:	cmp	r0, r1
   15e48:	beq	15e58 <__assert_fail@plt+0x4a48>
   15e4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e50:	ldr	r1, [fp, #-16]
   15e54:	str	r0, [r1]
   15e58:	ldr	r0, [fp, #8]
   15e5c:	movw	r1, #0
   15e60:	cmp	r0, r1
   15e64:	beq	15e7c <__assert_fail@plt+0x4a6c>
   15e68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e6c:	ldr	r1, [fp, #8]
   15e70:	str	r0, [r1]
   15e74:	movw	r0, #0
   15e78:	str	r0, [fp, #-32]	; 0xffffffe0
   15e7c:	ldr	r0, [fp, #12]
   15e80:	movw	r1, #0
   15e84:	cmp	r0, r1
   15e88:	beq	15ea0 <__assert_fail@plt+0x4a90>
   15e8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15e90:	ldr	r1, [fp, #12]
   15e94:	str	r0, [r1]
   15e98:	movw	r0, #0
   15e9c:	str	r0, [fp, #-40]	; 0xffffffd8
   15ea0:	b	15ea4 <__assert_fail@plt+0x4a94>
   15ea4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ea8:	bl	1300c <__assert_fail@plt+0x1bfc>
   15eac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15eb0:	bl	1300c <__assert_fail@plt+0x1bfc>
   15eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   15eb8:	movw	lr, #0
   15ebc:	cmp	r0, lr
   15ec0:	beq	15ed4 <__assert_fail@plt+0x4ac4>
   15ec4:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ec8:	bl	112cc <gettext@plt>
   15ecc:	str	r0, [sp, #4]
   15ed0:	b	15ee0 <__assert_fail@plt+0x4ad0>
   15ed4:	movw	r0, #0
   15ed8:	str	r0, [sp, #4]
   15edc:	b	15ee0 <__assert_fail@plt+0x4ad0>
   15ee0:	ldr	r0, [sp, #4]
   15ee4:	mov	sp, fp
   15ee8:	pop	{fp, pc}
   15eec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ef0:	add	fp, sp, #28
   15ef4:	sub	sp, sp, #260	; 0x104
   15ef8:	ldr	ip, [fp, #12]
   15efc:	ldr	lr, [fp, #8]
   15f00:	str	r0, [fp, #-32]	; 0xffffffe0
   15f04:	str	r1, [fp, #-36]	; 0xffffffdc
   15f08:	str	r2, [fp, #-40]	; 0xffffffd8
   15f0c:	str	r3, [fp, #-44]	; 0xffffffd4
   15f10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f14:	movw	r1, #0
   15f18:	cmp	r0, r1
   15f1c:	str	lr, [fp, #-48]	; 0xffffffd0
   15f20:	str	ip, [fp, #-52]	; 0xffffffcc
   15f24:	beq	15f5c <__assert_fail@plt+0x4b4c>
   15f28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15f30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f38:	movw	ip, #60048	; 0xea90
   15f3c:	movt	ip, #1
   15f40:	str	r1, [fp, #-56]	; 0xffffffc8
   15f44:	mov	r1, ip
   15f48:	ldr	ip, [fp, #-56]	; 0xffffffc8
   15f4c:	str	ip, [sp]
   15f50:	bl	112fc <fprintf@plt>
   15f54:	str	r0, [fp, #-60]	; 0xffffffc4
   15f58:	b	15f78 <__assert_fail@plt+0x4b68>
   15f5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15f64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f68:	movw	r1, #60060	; 0xea9c
   15f6c:	movt	r1, #1
   15f70:	bl	112fc <fprintf@plt>
   15f74:	str	r0, [fp, #-64]	; 0xffffffc0
   15f78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f7c:	movw	r1, #60067	; 0xeaa3
   15f80:	movt	r1, #1
   15f84:	str	r0, [fp, #-68]	; 0xffffffbc
   15f88:	mov	r0, r1
   15f8c:	bl	112cc <gettext@plt>
   15f90:	movw	r1, #60785	; 0xed71
   15f94:	movt	r1, #1
   15f98:	movw	r3, #2022	; 0x7e6
   15f9c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15fa0:	str	r0, [fp, #-72]	; 0xffffffb8
   15fa4:	mov	r0, lr
   15fa8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15fac:	bl	112fc <fprintf@plt>
   15fb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15fb4:	movw	r2, #57778	; 0xe1b2
   15fb8:	movt	r2, #1
   15fbc:	str	r0, [fp, #-76]	; 0xffffffb4
   15fc0:	mov	r0, r2
   15fc4:	str	r2, [fp, #-80]	; 0xffffffb0
   15fc8:	bl	11134 <fputs_unlocked@plt>
   15fcc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15fd0:	movw	r2, #60071	; 0xeaa7
   15fd4:	movt	r2, #1
   15fd8:	str	r0, [fp, #-84]	; 0xffffffac
   15fdc:	mov	r0, r2
   15fe0:	str	r1, [fp, #-88]	; 0xffffffa8
   15fe4:	bl	112cc <gettext@plt>
   15fe8:	movw	r2, #60242	; 0xeb52
   15fec:	movt	r2, #1
   15ff0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15ff4:	str	r0, [fp, #-92]	; 0xffffffa4
   15ff8:	mov	r0, r1
   15ffc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16000:	bl	112fc <fprintf@plt>
   16004:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16008:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1600c:	str	r0, [fp, #-96]	; 0xffffffa0
   16010:	mov	r0, r2
   16014:	bl	11134 <fputs_unlocked@plt>
   16018:	ldr	r1, [fp, #12]
   1601c:	cmp	r1, #9
   16020:	str	r0, [fp, #-100]	; 0xffffff9c
   16024:	str	r1, [fp, #-104]	; 0xffffff98
   16028:	bhi	16468 <__assert_fail@plt+0x5058>
   1602c:	add	r0, pc, #8
   16030:	ldr	r1, [fp, #-104]	; 0xffffff98
   16034:	ldr	r0, [r0, r1, lsl #2]
   16038:	mov	pc, r0
   1603c:	andeq	r6, r1, r4, rrx
   16040:	andeq	r6, r1, r8, rrx
   16044:	andeq	r6, r1, r4, lsr #1
   16048:	andeq	r6, r1, r8, ror #1
   1604c:	andeq	r6, r1, r4, asr #2
   16050:	andeq	r6, r1, ip, lsr #3
   16054:	andeq	r6, r1, r0, lsr #4
   16058:	andeq	r6, r1, r0, lsr #5
   1605c:	andeq	r6, r1, ip, lsr #6
   16060:	andeq	r6, r1, r4, asr #7
   16064:	b	16508 <__assert_fail@plt+0x50f8>
   16068:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1606c:	movw	r1, #60276	; 0xeb74
   16070:	movt	r1, #1
   16074:	str	r0, [fp, #-108]	; 0xffffff94
   16078:	mov	r0, r1
   1607c:	bl	112cc <gettext@plt>
   16080:	ldr	r1, [fp, #8]
   16084:	ldr	r2, [r1]
   16088:	ldr	r1, [fp, #-108]	; 0xffffff94
   1608c:	str	r0, [fp, #-112]	; 0xffffff90
   16090:	mov	r0, r1
   16094:	ldr	r1, [fp, #-112]	; 0xffffff90
   16098:	bl	112fc <fprintf@plt>
   1609c:	str	r0, [fp, #-116]	; 0xffffff8c
   160a0:	b	16508 <__assert_fail@plt+0x50f8>
   160a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160a8:	movw	r1, #60292	; 0xeb84
   160ac:	movt	r1, #1
   160b0:	str	r0, [fp, #-120]	; 0xffffff88
   160b4:	mov	r0, r1
   160b8:	bl	112cc <gettext@plt>
   160bc:	ldr	r1, [fp, #8]
   160c0:	ldr	r2, [r1]
   160c4:	ldr	r1, [fp, #8]
   160c8:	ldr	r3, [r1, #4]
   160cc:	ldr	r1, [fp, #-120]	; 0xffffff88
   160d0:	str	r0, [fp, #-124]	; 0xffffff84
   160d4:	mov	r0, r1
   160d8:	ldr	r1, [fp, #-124]	; 0xffffff84
   160dc:	bl	112fc <fprintf@plt>
   160e0:	str	r0, [fp, #-128]	; 0xffffff80
   160e4:	b	16508 <__assert_fail@plt+0x50f8>
   160e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160ec:	movw	r1, #60315	; 0xeb9b
   160f0:	movt	r1, #1
   160f4:	str	r0, [fp, #-132]	; 0xffffff7c
   160f8:	mov	r0, r1
   160fc:	bl	112cc <gettext@plt>
   16100:	ldr	r1, [fp, #8]
   16104:	ldr	r2, [r1]
   16108:	ldr	r1, [fp, #8]
   1610c:	ldr	r3, [r1, #4]
   16110:	ldr	r1, [fp, #8]
   16114:	ldr	r1, [r1, #8]
   16118:	ldr	lr, [fp, #-132]	; 0xffffff7c
   1611c:	str	r0, [fp, #-136]	; 0xffffff78
   16120:	mov	r0, lr
   16124:	ldr	ip, [fp, #-136]	; 0xffffff78
   16128:	str	r1, [fp, #-140]	; 0xffffff74
   1612c:	mov	r1, ip
   16130:	ldr	r4, [fp, #-140]	; 0xffffff74
   16134:	str	r4, [sp]
   16138:	bl	112fc <fprintf@plt>
   1613c:	str	r0, [sp, #144]	; 0x90
   16140:	b	16508 <__assert_fail@plt+0x50f8>
   16144:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16148:	movw	r1, #60343	; 0xebb7
   1614c:	movt	r1, #1
   16150:	str	r0, [sp, #140]	; 0x8c
   16154:	mov	r0, r1
   16158:	bl	112cc <gettext@plt>
   1615c:	ldr	r1, [fp, #8]
   16160:	ldr	r2, [r1]
   16164:	ldr	r1, [fp, #8]
   16168:	ldr	r3, [r1, #4]
   1616c:	ldr	r1, [fp, #8]
   16170:	ldr	r1, [r1, #8]
   16174:	ldr	lr, [fp, #8]
   16178:	ldr	lr, [lr, #12]
   1617c:	ldr	ip, [sp, #140]	; 0x8c
   16180:	str	r0, [sp, #136]	; 0x88
   16184:	mov	r0, ip
   16188:	ldr	r4, [sp, #136]	; 0x88
   1618c:	str	r1, [sp, #132]	; 0x84
   16190:	mov	r1, r4
   16194:	ldr	r5, [sp, #132]	; 0x84
   16198:	str	r5, [sp]
   1619c:	str	lr, [sp, #4]
   161a0:	bl	112fc <fprintf@plt>
   161a4:	str	r0, [sp, #128]	; 0x80
   161a8:	b	16508 <__assert_fail@plt+0x50f8>
   161ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   161b0:	movw	r1, #60375	; 0xebd7
   161b4:	movt	r1, #1
   161b8:	str	r0, [sp, #124]	; 0x7c
   161bc:	mov	r0, r1
   161c0:	bl	112cc <gettext@plt>
   161c4:	ldr	r1, [fp, #8]
   161c8:	ldr	r2, [r1]
   161cc:	ldr	r1, [fp, #8]
   161d0:	ldr	r3, [r1, #4]
   161d4:	ldr	r1, [fp, #8]
   161d8:	ldr	r1, [r1, #8]
   161dc:	ldr	lr, [fp, #8]
   161e0:	ldr	lr, [lr, #12]
   161e4:	ldr	ip, [fp, #8]
   161e8:	ldr	ip, [ip, #16]
   161ec:	ldr	r4, [sp, #124]	; 0x7c
   161f0:	str	r0, [sp, #120]	; 0x78
   161f4:	mov	r0, r4
   161f8:	ldr	r5, [sp, #120]	; 0x78
   161fc:	str	r1, [sp, #116]	; 0x74
   16200:	mov	r1, r5
   16204:	ldr	r6, [sp, #116]	; 0x74
   16208:	str	r6, [sp]
   1620c:	str	lr, [sp, #4]
   16210:	str	ip, [sp, #8]
   16214:	bl	112fc <fprintf@plt>
   16218:	str	r0, [sp, #112]	; 0x70
   1621c:	b	16508 <__assert_fail@plt+0x50f8>
   16220:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16224:	movw	r1, #60411	; 0xebfb
   16228:	movt	r1, #1
   1622c:	str	r0, [sp, #108]	; 0x6c
   16230:	mov	r0, r1
   16234:	bl	112cc <gettext@plt>
   16238:	ldr	r1, [fp, #8]
   1623c:	ldr	r2, [r1]
   16240:	ldr	r1, [fp, #8]
   16244:	ldr	r3, [r1, #4]
   16248:	ldr	r1, [fp, #8]
   1624c:	ldr	r1, [r1, #8]
   16250:	ldr	lr, [fp, #8]
   16254:	ldr	lr, [lr, #12]
   16258:	ldr	ip, [fp, #8]
   1625c:	ldr	ip, [ip, #16]
   16260:	ldr	r4, [fp, #8]
   16264:	ldr	r4, [r4, #20]
   16268:	ldr	r5, [sp, #108]	; 0x6c
   1626c:	str	r0, [sp, #104]	; 0x68
   16270:	mov	r0, r5
   16274:	ldr	r6, [sp, #104]	; 0x68
   16278:	str	r1, [sp, #100]	; 0x64
   1627c:	mov	r1, r6
   16280:	ldr	r7, [sp, #100]	; 0x64
   16284:	str	r7, [sp]
   16288:	str	lr, [sp, #4]
   1628c:	str	ip, [sp, #8]
   16290:	str	r4, [sp, #12]
   16294:	bl	112fc <fprintf@plt>
   16298:	str	r0, [sp, #96]	; 0x60
   1629c:	b	16508 <__assert_fail@plt+0x50f8>
   162a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162a4:	movw	r1, #60451	; 0xec23
   162a8:	movt	r1, #1
   162ac:	str	r0, [sp, #92]	; 0x5c
   162b0:	mov	r0, r1
   162b4:	bl	112cc <gettext@plt>
   162b8:	ldr	r1, [fp, #8]
   162bc:	ldr	r2, [r1]
   162c0:	ldr	r1, [fp, #8]
   162c4:	ldr	r3, [r1, #4]
   162c8:	ldr	r1, [fp, #8]
   162cc:	ldr	r1, [r1, #8]
   162d0:	ldr	lr, [fp, #8]
   162d4:	ldr	lr, [lr, #12]
   162d8:	ldr	ip, [fp, #8]
   162dc:	ldr	ip, [ip, #16]
   162e0:	ldr	r4, [fp, #8]
   162e4:	ldr	r4, [r4, #20]
   162e8:	ldr	r5, [fp, #8]
   162ec:	ldr	r5, [r5, #24]
   162f0:	ldr	r6, [sp, #92]	; 0x5c
   162f4:	str	r0, [sp, #88]	; 0x58
   162f8:	mov	r0, r6
   162fc:	ldr	r7, [sp, #88]	; 0x58
   16300:	str	r1, [sp, #84]	; 0x54
   16304:	mov	r1, r7
   16308:	ldr	r8, [sp, #84]	; 0x54
   1630c:	str	r8, [sp]
   16310:	str	lr, [sp, #4]
   16314:	str	ip, [sp, #8]
   16318:	str	r4, [sp, #12]
   1631c:	str	r5, [sp, #16]
   16320:	bl	112fc <fprintf@plt>
   16324:	str	r0, [sp, #80]	; 0x50
   16328:	b	16508 <__assert_fail@plt+0x50f8>
   1632c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16330:	movw	r1, #60495	; 0xec4f
   16334:	movt	r1, #1
   16338:	str	r0, [sp, #76]	; 0x4c
   1633c:	mov	r0, r1
   16340:	bl	112cc <gettext@plt>
   16344:	ldr	r1, [fp, #8]
   16348:	ldr	r2, [r1]
   1634c:	ldr	r1, [fp, #8]
   16350:	ldr	r3, [r1, #4]
   16354:	ldr	r1, [fp, #8]
   16358:	ldr	r1, [r1, #8]
   1635c:	ldr	lr, [fp, #8]
   16360:	ldr	lr, [lr, #12]
   16364:	ldr	ip, [fp, #8]
   16368:	ldr	ip, [ip, #16]
   1636c:	ldr	r4, [fp, #8]
   16370:	ldr	r4, [r4, #20]
   16374:	ldr	r5, [fp, #8]
   16378:	ldr	r5, [r5, #24]
   1637c:	ldr	r6, [fp, #8]
   16380:	ldr	r6, [r6, #28]
   16384:	ldr	r7, [sp, #76]	; 0x4c
   16388:	str	r0, [sp, #72]	; 0x48
   1638c:	mov	r0, r7
   16390:	ldr	r8, [sp, #72]	; 0x48
   16394:	str	r1, [sp, #68]	; 0x44
   16398:	mov	r1, r8
   1639c:	ldr	r9, [sp, #68]	; 0x44
   163a0:	str	r9, [sp]
   163a4:	str	lr, [sp, #4]
   163a8:	str	ip, [sp, #8]
   163ac:	str	r4, [sp, #12]
   163b0:	str	r5, [sp, #16]
   163b4:	str	r6, [sp, #20]
   163b8:	bl	112fc <fprintf@plt>
   163bc:	str	r0, [sp, #64]	; 0x40
   163c0:	b	16508 <__assert_fail@plt+0x50f8>
   163c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163c8:	movw	r1, #60543	; 0xec7f
   163cc:	movt	r1, #1
   163d0:	str	r0, [sp, #60]	; 0x3c
   163d4:	mov	r0, r1
   163d8:	bl	112cc <gettext@plt>
   163dc:	ldr	r1, [fp, #8]
   163e0:	ldr	r2, [r1]
   163e4:	ldr	r1, [fp, #8]
   163e8:	ldr	r3, [r1, #4]
   163ec:	ldr	r1, [fp, #8]
   163f0:	ldr	r1, [r1, #8]
   163f4:	ldr	lr, [fp, #8]
   163f8:	ldr	lr, [lr, #12]
   163fc:	ldr	ip, [fp, #8]
   16400:	ldr	ip, [ip, #16]
   16404:	ldr	r4, [fp, #8]
   16408:	ldr	r4, [r4, #20]
   1640c:	ldr	r5, [fp, #8]
   16410:	ldr	r5, [r5, #24]
   16414:	ldr	r6, [fp, #8]
   16418:	ldr	r6, [r6, #28]
   1641c:	ldr	r7, [fp, #8]
   16420:	ldr	r7, [r7, #32]
   16424:	ldr	r8, [sp, #60]	; 0x3c
   16428:	str	r0, [sp, #56]	; 0x38
   1642c:	mov	r0, r8
   16430:	ldr	r9, [sp, #56]	; 0x38
   16434:	str	r1, [sp, #52]	; 0x34
   16438:	mov	r1, r9
   1643c:	ldr	sl, [sp, #52]	; 0x34
   16440:	str	sl, [sp]
   16444:	str	lr, [sp, #4]
   16448:	str	ip, [sp, #8]
   1644c:	str	r4, [sp, #12]
   16450:	str	r5, [sp, #16]
   16454:	str	r6, [sp, #20]
   16458:	str	r7, [sp, #24]
   1645c:	bl	112fc <fprintf@plt>
   16460:	str	r0, [sp, #48]	; 0x30
   16464:	b	16508 <__assert_fail@plt+0x50f8>
   16468:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1646c:	movw	r1, #60595	; 0xecb3
   16470:	movt	r1, #1
   16474:	str	r0, [sp, #44]	; 0x2c
   16478:	mov	r0, r1
   1647c:	bl	112cc <gettext@plt>
   16480:	ldr	r1, [fp, #8]
   16484:	ldr	r2, [r1]
   16488:	ldr	r1, [fp, #8]
   1648c:	ldr	r3, [r1, #4]
   16490:	ldr	r1, [fp, #8]
   16494:	ldr	r1, [r1, #8]
   16498:	ldr	lr, [fp, #8]
   1649c:	ldr	lr, [lr, #12]
   164a0:	ldr	ip, [fp, #8]
   164a4:	ldr	ip, [ip, #16]
   164a8:	ldr	r4, [fp, #8]
   164ac:	ldr	r4, [r4, #20]
   164b0:	ldr	r5, [fp, #8]
   164b4:	ldr	r5, [r5, #24]
   164b8:	ldr	r6, [fp, #8]
   164bc:	ldr	r6, [r6, #28]
   164c0:	ldr	r7, [fp, #8]
   164c4:	ldr	r7, [r7, #32]
   164c8:	ldr	r8, [sp, #44]	; 0x2c
   164cc:	str	r0, [sp, #40]	; 0x28
   164d0:	mov	r0, r8
   164d4:	ldr	r9, [sp, #40]	; 0x28
   164d8:	str	r1, [sp, #36]	; 0x24
   164dc:	mov	r1, r9
   164e0:	ldr	sl, [sp, #36]	; 0x24
   164e4:	str	sl, [sp]
   164e8:	str	lr, [sp, #4]
   164ec:	str	ip, [sp, #8]
   164f0:	str	r4, [sp, #12]
   164f4:	str	r5, [sp, #16]
   164f8:	str	r6, [sp, #20]
   164fc:	str	r7, [sp, #24]
   16500:	bl	112fc <fprintf@plt>
   16504:	str	r0, [sp, #32]
   16508:	sub	sp, fp, #28
   1650c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16510:	push	{fp, lr}
   16514:	mov	fp, sp
   16518:	sub	sp, sp, #32
   1651c:	ldr	ip, [fp, #8]
   16520:	str	r0, [fp, #-4]
   16524:	str	r1, [fp, #-8]
   16528:	str	r2, [fp, #-12]
   1652c:	str	r3, [sp, #16]
   16530:	movw	r0, #0
   16534:	str	r0, [sp, #12]
   16538:	str	ip, [sp, #8]
   1653c:	ldr	r0, [fp, #8]
   16540:	ldr	r1, [sp, #12]
   16544:	add	r0, r0, r1, lsl #2
   16548:	ldr	r0, [r0]
   1654c:	movw	r1, #0
   16550:	cmp	r0, r1
   16554:	beq	1656c <__assert_fail@plt+0x515c>
   16558:	b	1655c <__assert_fail@plt+0x514c>
   1655c:	ldr	r0, [sp, #12]
   16560:	add	r0, r0, #1
   16564:	str	r0, [sp, #12]
   16568:	b	1653c <__assert_fail@plt+0x512c>
   1656c:	ldr	r0, [fp, #-4]
   16570:	ldr	r1, [fp, #-8]
   16574:	ldr	r2, [fp, #-12]
   16578:	ldr	r3, [sp, #16]
   1657c:	ldr	ip, [fp, #8]
   16580:	ldr	lr, [sp, #12]
   16584:	str	ip, [sp]
   16588:	str	lr, [sp, #4]
   1658c:	bl	15eec <__assert_fail@plt+0x4adc>
   16590:	mov	sp, fp
   16594:	pop	{fp, pc}
   16598:	push	{fp, lr}
   1659c:	mov	fp, sp
   165a0:	sub	sp, sp, #80	; 0x50
   165a4:	ldr	ip, [fp, #8]
   165a8:	str	ip, [fp, #-4]
   165ac:	str	r0, [fp, #-8]
   165b0:	str	r1, [fp, #-12]
   165b4:	str	r2, [fp, #-16]
   165b8:	str	r3, [fp, #-20]	; 0xffffffec
   165bc:	movw	r0, #0
   165c0:	str	r0, [fp, #-24]	; 0xffffffe8
   165c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165c8:	cmp	r0, #10
   165cc:	movw	r0, #0
   165d0:	str	r0, [sp, #12]
   165d4:	bcs	1660c <__assert_fail@plt+0x51fc>
   165d8:	ldr	r0, [fp, #-4]
   165dc:	add	r1, r0, #4
   165e0:	str	r1, [fp, #-4]
   165e4:	ldr	r0, [r0]
   165e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165ec:	add	r2, sp, #16
   165f0:	add	r1, r2, r1, lsl #2
   165f4:	str	r0, [r1]
   165f8:	movw	r1, #0
   165fc:	cmp	r0, r1
   16600:	movw	r0, #0
   16604:	movne	r0, #1
   16608:	str	r0, [sp, #12]
   1660c:	ldr	r0, [sp, #12]
   16610:	tst	r0, #1
   16614:	beq	1662c <__assert_fail@plt+0x521c>
   16618:	b	1661c <__assert_fail@plt+0x520c>
   1661c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16620:	add	r0, r0, #1
   16624:	str	r0, [fp, #-24]	; 0xffffffe8
   16628:	b	165c4 <__assert_fail@plt+0x51b4>
   1662c:	add	r0, sp, #16
   16630:	ldr	r1, [fp, #-8]
   16634:	ldr	r2, [fp, #-12]
   16638:	ldr	r3, [fp, #-16]
   1663c:	ldr	ip, [fp, #-20]	; 0xffffffec
   16640:	ldr	lr, [fp, #-24]	; 0xffffffe8
   16644:	str	r0, [sp, #8]
   16648:	mov	r0, r1
   1664c:	mov	r1, r2
   16650:	mov	r2, r3
   16654:	mov	r3, ip
   16658:	ldr	ip, [sp, #8]
   1665c:	str	ip, [sp]
   16660:	str	lr, [sp, #4]
   16664:	bl	15eec <__assert_fail@plt+0x4adc>
   16668:	mov	sp, fp
   1666c:	pop	{fp, pc}
   16670:	push	{fp, lr}
   16674:	mov	fp, sp
   16678:	sub	sp, sp, #32
   1667c:	str	r0, [fp, #-4]
   16680:	str	r1, [fp, #-8]
   16684:	str	r2, [fp, #-12]
   16688:	str	r3, [sp, #16]
   1668c:	add	r0, fp, #8
   16690:	str	r0, [sp, #12]
   16694:	ldr	r0, [fp, #-4]
   16698:	ldr	r1, [fp, #-8]
   1669c:	ldr	r2, [fp, #-12]
   166a0:	ldr	r3, [sp, #16]
   166a4:	ldr	ip, [sp, #12]
   166a8:	mov	lr, sp
   166ac:	str	ip, [lr]
   166b0:	bl	16598 <__assert_fail@plt+0x5188>
   166b4:	add	r0, sp, #12
   166b8:	str	r0, [sp, #8]
   166bc:	mov	sp, fp
   166c0:	pop	{fp, pc}
   166c4:	push	{fp, lr}
   166c8:	mov	fp, sp
   166cc:	sub	sp, sp, #16
   166d0:	movw	r0, #61828	; 0xf184
   166d4:	movt	r0, #2
   166d8:	ldr	r1, [r0]
   166dc:	movw	r0, #57778	; 0xe1b2
   166e0:	movt	r0, #1
   166e4:	bl	11134 <fputs_unlocked@plt>
   166e8:	movw	r1, #60655	; 0xecef
   166ec:	movt	r1, #1
   166f0:	str	r0, [fp, #-4]
   166f4:	mov	r0, r1
   166f8:	bl	112cc <gettext@plt>
   166fc:	movw	r1, #60675	; 0xed03
   16700:	movt	r1, #1
   16704:	bl	1117c <printf@plt>
   16708:	movw	r1, #60697	; 0xed19
   1670c:	movt	r1, #1
   16710:	str	r0, [sp, #8]
   16714:	mov	r0, r1
   16718:	bl	112cc <gettext@plt>
   1671c:	movw	r1, #58562	; 0xe4c2
   16720:	movt	r1, #1
   16724:	movw	r2, #59068	; 0xe6bc
   16728:	movt	r2, #1
   1672c:	bl	1117c <printf@plt>
   16730:	movw	r1, #60717	; 0xed2d
   16734:	movt	r1, #1
   16738:	str	r0, [sp, #4]
   1673c:	mov	r0, r1
   16740:	bl	112cc <gettext@plt>
   16744:	movw	r1, #60756	; 0xed54
   16748:	movt	r1, #1
   1674c:	bl	1117c <printf@plt>
   16750:	str	r0, [sp]
   16754:	mov	sp, fp
   16758:	pop	{fp, pc}
   1675c:	push	{fp, lr}
   16760:	mov	fp, sp
   16764:	sub	sp, sp, #16
   16768:	str	r0, [fp, #-4]
   1676c:	str	r1, [sp, #8]
   16770:	str	r2, [sp, #4]
   16774:	ldr	r0, [fp, #-4]
   16778:	ldr	r1, [sp, #8]
   1677c:	ldr	r2, [sp, #4]
   16780:	bl	1678c <__assert_fail@plt+0x537c>
   16784:	mov	sp, fp
   16788:	pop	{fp, pc}
   1678c:	push	{fp, lr}
   16790:	mov	fp, sp
   16794:	sub	sp, sp, #16
   16798:	str	r0, [fp, #-4]
   1679c:	str	r1, [sp, #8]
   167a0:	str	r2, [sp, #4]
   167a4:	ldr	r0, [fp, #-4]
   167a8:	ldr	r1, [sp, #8]
   167ac:	ldr	r2, [sp, #4]
   167b0:	bl	1c068 <__assert_fail@plt+0xac58>
   167b4:	str	r0, [sp]
   167b8:	ldr	r0, [sp]
   167bc:	movw	r1, #0
   167c0:	cmp	r0, r1
   167c4:	bne	167f4 <__assert_fail@plt+0x53e4>
   167c8:	ldr	r0, [fp, #-4]
   167cc:	movw	r1, #0
   167d0:	cmp	r0, r1
   167d4:	beq	167f0 <__assert_fail@plt+0x53e0>
   167d8:	ldr	r0, [sp, #8]
   167dc:	cmp	r0, #0
   167e0:	beq	167f4 <__assert_fail@plt+0x53e4>
   167e4:	ldr	r0, [sp, #4]
   167e8:	cmp	r0, #0
   167ec:	beq	167f4 <__assert_fail@plt+0x53e4>
   167f0:	bl	195dc <__assert_fail@plt+0x81cc>
   167f4:	ldr	r0, [sp]
   167f8:	mov	sp, fp
   167fc:	pop	{fp, pc}
   16800:	push	{fp, lr}
   16804:	mov	fp, sp
   16808:	sub	sp, sp, #8
   1680c:	str	r0, [sp, #4]
   16810:	ldr	r0, [sp, #4]
   16814:	bl	1b42c <__assert_fail@plt+0xa01c>
   16818:	bl	16824 <__assert_fail@plt+0x5414>
   1681c:	mov	sp, fp
   16820:	pop	{fp, pc}
   16824:	push	{fp, lr}
   16828:	mov	fp, sp
   1682c:	sub	sp, sp, #8
   16830:	str	r0, [sp, #4]
   16834:	ldr	r0, [sp, #4]
   16838:	movw	r1, #0
   1683c:	cmp	r0, r1
   16840:	bne	16848 <__assert_fail@plt+0x5438>
   16844:	bl	195dc <__assert_fail@plt+0x81cc>
   16848:	ldr	r0, [sp, #4]
   1684c:	mov	sp, fp
   16850:	pop	{fp, pc}
   16854:	push	{fp, lr}
   16858:	mov	fp, sp
   1685c:	sub	sp, sp, #8
   16860:	str	r0, [sp, #4]
   16864:	ldr	r0, [sp, #4]
   16868:	bl	1b98c <__assert_fail@plt+0xa57c>
   1686c:	bl	16824 <__assert_fail@plt+0x5414>
   16870:	mov	sp, fp
   16874:	pop	{fp, pc}
   16878:	push	{fp, lr}
   1687c:	mov	fp, sp
   16880:	sub	sp, sp, #8
   16884:	str	r0, [sp, #4]
   16888:	ldr	r0, [sp, #4]
   1688c:	bl	16800 <__assert_fail@plt+0x53f0>
   16890:	mov	sp, fp
   16894:	pop	{fp, pc}
   16898:	push	{fp, lr}
   1689c:	mov	fp, sp
   168a0:	sub	sp, sp, #16
   168a4:	str	r0, [fp, #-4]
   168a8:	str	r1, [sp, #8]
   168ac:	ldr	r0, [fp, #-4]
   168b0:	ldr	r1, [sp, #8]
   168b4:	bl	1b49c <__assert_fail@plt+0xa08c>
   168b8:	str	r0, [sp, #4]
   168bc:	ldr	r0, [sp, #4]
   168c0:	movw	r1, #0
   168c4:	cmp	r0, r1
   168c8:	bne	168ec <__assert_fail@plt+0x54dc>
   168cc:	ldr	r0, [fp, #-4]
   168d0:	movw	r1, #0
   168d4:	cmp	r0, r1
   168d8:	beq	168e8 <__assert_fail@plt+0x54d8>
   168dc:	ldr	r0, [sp, #8]
   168e0:	cmp	r0, #0
   168e4:	beq	168ec <__assert_fail@plt+0x54dc>
   168e8:	bl	195dc <__assert_fail@plt+0x81cc>
   168ec:	ldr	r0, [sp, #4]
   168f0:	mov	sp, fp
   168f4:	pop	{fp, pc}
   168f8:	push	{fp, lr}
   168fc:	mov	fp, sp
   16900:	sub	sp, sp, #8
   16904:	str	r0, [sp, #4]
   16908:	str	r1, [sp]
   1690c:	ldr	r0, [sp, #4]
   16910:	ldr	r1, [sp]
   16914:	bl	1b9cc <__assert_fail@plt+0xa5bc>
   16918:	bl	16824 <__assert_fail@plt+0x5414>
   1691c:	mov	sp, fp
   16920:	pop	{fp, pc}
   16924:	push	{fp, lr}
   16928:	mov	fp, sp
   1692c:	sub	sp, sp, #16
   16930:	str	r0, [fp, #-4]
   16934:	str	r1, [sp, #8]
   16938:	str	r2, [sp, #4]
   1693c:	ldr	r0, [fp, #-4]
   16940:	ldr	r1, [sp, #8]
   16944:	ldr	r2, [sp, #4]
   16948:	bl	1bac4 <__assert_fail@plt+0xa6b4>
   1694c:	bl	16824 <__assert_fail@plt+0x5414>
   16950:	mov	sp, fp
   16954:	pop	{fp, pc}
   16958:	push	{fp, lr}
   1695c:	mov	fp, sp
   16960:	sub	sp, sp, #8
   16964:	str	r0, [sp, #4]
   16968:	str	r1, [sp]
   1696c:	ldr	r1, [sp, #4]
   16970:	ldr	r2, [sp]
   16974:	movw	r0, #0
   16978:	bl	1678c <__assert_fail@plt+0x537c>
   1697c:	mov	sp, fp
   16980:	pop	{fp, pc}
   16984:	push	{fp, lr}
   16988:	mov	fp, sp
   1698c:	sub	sp, sp, #8
   16990:	str	r0, [sp, #4]
   16994:	str	r1, [sp]
   16998:	ldr	r1, [sp, #4]
   1699c:	ldr	r2, [sp]
   169a0:	movw	r0, #0
   169a4:	bl	16924 <__assert_fail@plt+0x5514>
   169a8:	mov	sp, fp
   169ac:	pop	{fp, pc}
   169b0:	push	{fp, lr}
   169b4:	mov	fp, sp
   169b8:	sub	sp, sp, #8
   169bc:	str	r0, [sp, #4]
   169c0:	str	r1, [sp]
   169c4:	ldr	r0, [sp, #4]
   169c8:	ldr	r1, [sp]
   169cc:	movw	r2, #1
   169d0:	bl	169dc <__assert_fail@plt+0x55cc>
   169d4:	mov	sp, fp
   169d8:	pop	{fp, pc}
   169dc:	push	{fp, lr}
   169e0:	mov	fp, sp
   169e4:	sub	sp, sp, #16
   169e8:	str	r0, [fp, #-4]
   169ec:	str	r1, [sp, #8]
   169f0:	str	r2, [sp, #4]
   169f4:	ldr	r0, [sp, #8]
   169f8:	ldr	r0, [r0]
   169fc:	str	r0, [sp]
   16a00:	ldr	r0, [fp, #-4]
   16a04:	movw	r1, #0
   16a08:	cmp	r0, r1
   16a0c:	bne	16a58 <__assert_fail@plt+0x5648>
   16a10:	ldr	r0, [sp]
   16a14:	cmp	r0, #0
   16a18:	bne	16a54 <__assert_fail@plt+0x5644>
   16a1c:	ldr	r0, [sp, #4]
   16a20:	movw	r1, #64	; 0x40
   16a24:	udiv	r0, r1, r0
   16a28:	str	r0, [sp]
   16a2c:	ldr	r0, [sp]
   16a30:	cmp	r0, #0
   16a34:	movw	r0, #0
   16a38:	movne	r0, #1
   16a3c:	mvn	r1, #0
   16a40:	eor	r0, r0, r1
   16a44:	and	r0, r0, #1
   16a48:	ldr	r1, [sp]
   16a4c:	add	r0, r1, r0
   16a50:	str	r0, [sp]
   16a54:	b	16a88 <__assert_fail@plt+0x5678>
   16a58:	ldr	r0, [sp]
   16a5c:	ldr	r1, [sp]
   16a60:	lsr	r1, r1, #1
   16a64:	add	r1, r1, #1
   16a68:	adds	r0, r0, r1
   16a6c:	mov	r1, #0
   16a70:	adc	r1, r1, #0
   16a74:	str	r0, [sp]
   16a78:	tst	r1, #1
   16a7c:	beq	16a84 <__assert_fail@plt+0x5674>
   16a80:	bl	195dc <__assert_fail@plt+0x81cc>
   16a84:	b	16a88 <__assert_fail@plt+0x5678>
   16a88:	ldr	r0, [fp, #-4]
   16a8c:	ldr	r1, [sp]
   16a90:	ldr	r2, [sp, #4]
   16a94:	bl	1678c <__assert_fail@plt+0x537c>
   16a98:	str	r0, [fp, #-4]
   16a9c:	ldr	r0, [sp]
   16aa0:	ldr	r1, [sp, #8]
   16aa4:	str	r0, [r1]
   16aa8:	ldr	r0, [fp, #-4]
   16aac:	mov	sp, fp
   16ab0:	pop	{fp, pc}
   16ab4:	push	{fp, lr}
   16ab8:	mov	fp, sp
   16abc:	sub	sp, sp, #376	; 0x178
   16ac0:	ldr	ip, [fp, #8]
   16ac4:	str	r0, [fp, #-4]
   16ac8:	str	r1, [fp, #-8]
   16acc:	str	r2, [fp, #-12]
   16ad0:	str	r3, [fp, #-16]
   16ad4:	ldr	r0, [fp, #-8]
   16ad8:	ldr	r0, [r0]
   16adc:	str	r0, [fp, #-20]	; 0xffffffec
   16ae0:	ldr	r0, [fp, #-20]	; 0xffffffec
   16ae4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ae8:	asr	r1, r1, #1
   16aec:	add	r1, r0, r1
   16af0:	mov	r2, #1
   16af4:	cmp	r1, r0
   16af8:	movwvc	r2, #0
   16afc:	str	r1, [fp, #-24]	; 0xffffffe8
   16b00:	tst	r2, #1
   16b04:	str	ip, [fp, #-36]	; 0xffffffdc
   16b08:	beq	16b14 <__assert_fail@plt+0x5704>
   16b0c:	ldr	r0, [pc, #4044]	; 17ae0 <__assert_fail@plt+0x66d0>
   16b10:	str	r0, [fp, #-24]	; 0xffffffe8
   16b14:	ldr	r0, [fp, #-16]
   16b18:	movw	r1, #0
   16b1c:	cmp	r1, r0
   16b20:	bgt	16b3c <__assert_fail@plt+0x572c>
   16b24:	ldr	r0, [fp, #-16]
   16b28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b2c:	cmp	r0, r1
   16b30:	bge	16b3c <__assert_fail@plt+0x572c>
   16b34:	ldr	r0, [fp, #-16]
   16b38:	str	r0, [fp, #-24]	; 0xffffffe8
   16b3c:	b	16f14 <__assert_fail@plt+0x5b04>
   16b40:	b	16b44 <__assert_fail@plt+0x5734>
   16b44:	ldr	r0, [fp, #8]
   16b48:	cmp	r0, #0
   16b4c:	bge	16c60 <__assert_fail@plt+0x5850>
   16b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b54:	cmp	r0, #0
   16b58:	bge	16be4 <__assert_fail@plt+0x57d4>
   16b5c:	b	16b60 <__assert_fail@plt+0x5750>
   16b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b64:	ldr	r1, [fp, #8]
   16b68:	movw	r2, #127	; 0x7f
   16b6c:	sdiv	r1, r2, r1
   16b70:	cmp	r0, r1
   16b74:	blt	16d00 <__assert_fail@plt+0x58f0>
   16b78:	b	16d18 <__assert_fail@plt+0x5908>
   16b7c:	b	16b80 <__assert_fail@plt+0x5770>
   16b80:	ldr	r0, [pc, #4076]	; 17b74 <__assert_fail@plt+0x6764>
   16b84:	ldr	r1, [fp, #8]
   16b88:	cmp	r1, r0
   16b8c:	blt	16ba4 <__assert_fail@plt+0x5794>
   16b90:	b	16bb0 <__assert_fail@plt+0x57a0>
   16b94:	ldr	r0, [fp, #8]
   16b98:	movw	r1, #0
   16b9c:	cmp	r1, r0
   16ba0:	bge	16bb0 <__assert_fail@plt+0x57a0>
   16ba4:	movw	r0, #0
   16ba8:	str	r0, [fp, #-40]	; 0xffffffd8
   16bac:	b	16bc8 <__assert_fail@plt+0x57b8>
   16bb0:	ldr	r0, [fp, #8]
   16bb4:	movw	r1, #0
   16bb8:	sub	r0, r1, r0
   16bbc:	movw	r1, #127	; 0x7f
   16bc0:	sdiv	r0, r1, r0
   16bc4:	str	r0, [fp, #-40]	; 0xffffffd8
   16bc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16bd0:	mvn	r2, #0
   16bd4:	sub	r1, r2, r1
   16bd8:	cmp	r0, r1
   16bdc:	ble	16d00 <__assert_fail@plt+0x58f0>
   16be0:	b	16d18 <__assert_fail@plt+0x5908>
   16be4:	b	16be8 <__assert_fail@plt+0x57d8>
   16be8:	b	16c44 <__assert_fail@plt+0x5834>
   16bec:	b	16c44 <__assert_fail@plt+0x5834>
   16bf0:	ldr	r0, [fp, #8]
   16bf4:	cmn	r0, #1
   16bf8:	bne	16c44 <__assert_fail@plt+0x5834>
   16bfc:	b	16c00 <__assert_fail@plt+0x57f0>
   16c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c04:	mvn	r1, #127	; 0x7f
   16c08:	add	r0, r0, r1
   16c0c:	movw	r1, #0
   16c10:	cmp	r1, r0
   16c14:	blt	16d00 <__assert_fail@plt+0x58f0>
   16c18:	b	16d18 <__assert_fail@plt+0x5908>
   16c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c20:	movw	r1, #0
   16c24:	cmp	r1, r0
   16c28:	bge	16d18 <__assert_fail@plt+0x5908>
   16c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c30:	sub	r0, r0, #1
   16c34:	movw	r1, #127	; 0x7f
   16c38:	cmp	r1, r0
   16c3c:	blt	16d00 <__assert_fail@plt+0x58f0>
   16c40:	b	16d18 <__assert_fail@plt+0x5908>
   16c44:	ldr	r0, [fp, #8]
   16c48:	mvn	r1, #127	; 0x7f
   16c4c:	sdiv	r0, r1, r0
   16c50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c54:	cmp	r0, r1
   16c58:	blt	16d00 <__assert_fail@plt+0x58f0>
   16c5c:	b	16d18 <__assert_fail@plt+0x5908>
   16c60:	ldr	r0, [fp, #8]
   16c64:	cmp	r0, #0
   16c68:	bne	16c70 <__assert_fail@plt+0x5860>
   16c6c:	b	16d18 <__assert_fail@plt+0x5908>
   16c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c74:	cmp	r0, #0
   16c78:	bge	16ce8 <__assert_fail@plt+0x58d8>
   16c7c:	b	16c80 <__assert_fail@plt+0x5870>
   16c80:	b	16ccc <__assert_fail@plt+0x58bc>
   16c84:	b	16ccc <__assert_fail@plt+0x58bc>
   16c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c8c:	cmn	r0, #1
   16c90:	bne	16ccc <__assert_fail@plt+0x58bc>
   16c94:	b	16c98 <__assert_fail@plt+0x5888>
   16c98:	ldr	r0, [fp, #8]
   16c9c:	mvn	r1, #127	; 0x7f
   16ca0:	add	r0, r0, r1
   16ca4:	movw	r1, #0
   16ca8:	cmp	r1, r0
   16cac:	blt	16d00 <__assert_fail@plt+0x58f0>
   16cb0:	b	16d18 <__assert_fail@plt+0x5908>
   16cb4:	ldr	r0, [fp, #8]
   16cb8:	sub	r0, r0, #1
   16cbc:	movw	r1, #127	; 0x7f
   16cc0:	cmp	r1, r0
   16cc4:	blt	16d00 <__assert_fail@plt+0x58f0>
   16cc8:	b	16d18 <__assert_fail@plt+0x5908>
   16ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cd0:	mvn	r1, #127	; 0x7f
   16cd4:	sdiv	r0, r1, r0
   16cd8:	ldr	r1, [fp, #8]
   16cdc:	cmp	r0, r1
   16ce0:	blt	16d00 <__assert_fail@plt+0x58f0>
   16ce4:	b	16d18 <__assert_fail@plt+0x5908>
   16ce8:	ldr	r0, [fp, #8]
   16cec:	movw	r1, #127	; 0x7f
   16cf0:	sdiv	r0, r1, r0
   16cf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cf8:	cmp	r0, r1
   16cfc:	bge	16d18 <__assert_fail@plt+0x5908>
   16d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d04:	ldr	r1, [fp, #8]
   16d08:	mul	r0, r0, r1
   16d0c:	sxtb	r0, r0
   16d10:	str	r0, [fp, #-28]	; 0xffffffe4
   16d14:	b	17f2c <__assert_fail@plt+0x6b1c>
   16d18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d1c:	ldr	r1, [fp, #8]
   16d20:	mul	r0, r0, r1
   16d24:	sxtb	r0, r0
   16d28:	str	r0, [fp, #-28]	; 0xffffffe4
   16d2c:	b	17f3c <__assert_fail@plt+0x6b2c>
   16d30:	ldr	r0, [fp, #8]
   16d34:	cmp	r0, #0
   16d38:	bge	16e48 <__assert_fail@plt+0x5a38>
   16d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d40:	cmp	r0, #0
   16d44:	bge	16dd0 <__assert_fail@plt+0x59c0>
   16d48:	b	16d4c <__assert_fail@plt+0x593c>
   16d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d50:	ldr	r1, [fp, #8]
   16d54:	movw	r2, #255	; 0xff
   16d58:	sdiv	r1, r2, r1
   16d5c:	cmp	r0, r1
   16d60:	blt	16ee4 <__assert_fail@plt+0x5ad4>
   16d64:	b	16efc <__assert_fail@plt+0x5aec>
   16d68:	b	16d6c <__assert_fail@plt+0x595c>
   16d6c:	ldr	r0, [pc, #3584]	; 17b74 <__assert_fail@plt+0x6764>
   16d70:	ldr	r1, [fp, #8]
   16d74:	cmp	r1, r0
   16d78:	blt	16d90 <__assert_fail@plt+0x5980>
   16d7c:	b	16d9c <__assert_fail@plt+0x598c>
   16d80:	ldr	r0, [fp, #8]
   16d84:	movw	r1, #0
   16d88:	cmp	r1, r0
   16d8c:	bge	16d9c <__assert_fail@plt+0x598c>
   16d90:	movw	r0, #0
   16d94:	str	r0, [fp, #-44]	; 0xffffffd4
   16d98:	b	16db4 <__assert_fail@plt+0x59a4>
   16d9c:	ldr	r0, [fp, #8]
   16da0:	movw	r1, #0
   16da4:	sub	r0, r1, r0
   16da8:	movw	r1, #255	; 0xff
   16dac:	sdiv	r0, r1, r0
   16db0:	str	r0, [fp, #-44]	; 0xffffffd4
   16db4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16db8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dbc:	mvn	r2, #0
   16dc0:	sub	r1, r2, r1
   16dc4:	cmp	r0, r1
   16dc8:	ble	16ee4 <__assert_fail@plt+0x5ad4>
   16dcc:	b	16efc <__assert_fail@plt+0x5aec>
   16dd0:	b	16dd4 <__assert_fail@plt+0x59c4>
   16dd4:	b	16e2c <__assert_fail@plt+0x5a1c>
   16dd8:	b	16e2c <__assert_fail@plt+0x5a1c>
   16ddc:	ldr	r0, [fp, #8]
   16de0:	cmn	r0, #1
   16de4:	bne	16e2c <__assert_fail@plt+0x5a1c>
   16de8:	b	16dec <__assert_fail@plt+0x59dc>
   16dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16df0:	add	r0, r0, #0
   16df4:	movw	r1, #0
   16df8:	cmp	r1, r0
   16dfc:	blt	16ee4 <__assert_fail@plt+0x5ad4>
   16e00:	b	16efc <__assert_fail@plt+0x5aec>
   16e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e08:	movw	r1, #0
   16e0c:	cmp	r1, r0
   16e10:	bge	16efc <__assert_fail@plt+0x5aec>
   16e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e18:	sub	r0, r0, #1
   16e1c:	mvn	r1, #0
   16e20:	cmp	r1, r0
   16e24:	blt	16ee4 <__assert_fail@plt+0x5ad4>
   16e28:	b	16efc <__assert_fail@plt+0x5aec>
   16e2c:	ldr	r0, [fp, #8]
   16e30:	movw	r1, #0
   16e34:	sdiv	r0, r1, r0
   16e38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e3c:	cmp	r0, r1
   16e40:	blt	16ee4 <__assert_fail@plt+0x5ad4>
   16e44:	b	16efc <__assert_fail@plt+0x5aec>
   16e48:	ldr	r0, [fp, #8]
   16e4c:	cmp	r0, #0
   16e50:	bne	16e58 <__assert_fail@plt+0x5a48>
   16e54:	b	16efc <__assert_fail@plt+0x5aec>
   16e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e5c:	cmp	r0, #0
   16e60:	bge	16ecc <__assert_fail@plt+0x5abc>
   16e64:	b	16e68 <__assert_fail@plt+0x5a58>
   16e68:	b	16eb0 <__assert_fail@plt+0x5aa0>
   16e6c:	b	16eb0 <__assert_fail@plt+0x5aa0>
   16e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e74:	cmn	r0, #1
   16e78:	bne	16eb0 <__assert_fail@plt+0x5aa0>
   16e7c:	b	16e80 <__assert_fail@plt+0x5a70>
   16e80:	ldr	r0, [fp, #8]
   16e84:	add	r0, r0, #0
   16e88:	movw	r1, #0
   16e8c:	cmp	r1, r0
   16e90:	blt	16ee4 <__assert_fail@plt+0x5ad4>
   16e94:	b	16efc <__assert_fail@plt+0x5aec>
   16e98:	ldr	r0, [fp, #8]
   16e9c:	sub	r0, r0, #1
   16ea0:	mvn	r1, #0
   16ea4:	cmp	r1, r0
   16ea8:	blt	16ee4 <__assert_fail@plt+0x5ad4>
   16eac:	b	16efc <__assert_fail@plt+0x5aec>
   16eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eb4:	movw	r1, #0
   16eb8:	sdiv	r0, r1, r0
   16ebc:	ldr	r1, [fp, #8]
   16ec0:	cmp	r0, r1
   16ec4:	blt	16ee4 <__assert_fail@plt+0x5ad4>
   16ec8:	b	16efc <__assert_fail@plt+0x5aec>
   16ecc:	ldr	r0, [fp, #8]
   16ed0:	movw	r1, #255	; 0xff
   16ed4:	sdiv	r0, r1, r0
   16ed8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16edc:	cmp	r0, r1
   16ee0:	bge	16efc <__assert_fail@plt+0x5aec>
   16ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ee8:	ldr	r1, [fp, #8]
   16eec:	mul	r0, r0, r1
   16ef0:	and	r0, r0, #255	; 0xff
   16ef4:	str	r0, [fp, #-28]	; 0xffffffe4
   16ef8:	b	17f2c <__assert_fail@plt+0x6b1c>
   16efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f00:	ldr	r1, [fp, #8]
   16f04:	mul	r0, r0, r1
   16f08:	and	r0, r0, #255	; 0xff
   16f0c:	str	r0, [fp, #-28]	; 0xffffffe4
   16f10:	b	17f3c <__assert_fail@plt+0x6b2c>
   16f14:	b	172ec <__assert_fail@plt+0x5edc>
   16f18:	b	16f1c <__assert_fail@plt+0x5b0c>
   16f1c:	ldr	r0, [fp, #8]
   16f20:	cmp	r0, #0
   16f24:	bge	17038 <__assert_fail@plt+0x5c28>
   16f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f2c:	cmp	r0, #0
   16f30:	bge	16fbc <__assert_fail@plt+0x5bac>
   16f34:	b	16f38 <__assert_fail@plt+0x5b28>
   16f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f3c:	ldr	r1, [fp, #8]
   16f40:	movw	r2, #32767	; 0x7fff
   16f44:	sdiv	r1, r2, r1
   16f48:	cmp	r0, r1
   16f4c:	blt	170d8 <__assert_fail@plt+0x5cc8>
   16f50:	b	170f0 <__assert_fail@plt+0x5ce0>
   16f54:	b	16f58 <__assert_fail@plt+0x5b48>
   16f58:	ldr	r0, [pc, #3092]	; 17b74 <__assert_fail@plt+0x6764>
   16f5c:	ldr	r1, [fp, #8]
   16f60:	cmp	r1, r0
   16f64:	blt	16f7c <__assert_fail@plt+0x5b6c>
   16f68:	b	16f88 <__assert_fail@plt+0x5b78>
   16f6c:	ldr	r0, [fp, #8]
   16f70:	movw	r1, #0
   16f74:	cmp	r1, r0
   16f78:	bge	16f88 <__assert_fail@plt+0x5b78>
   16f7c:	movw	r0, #0
   16f80:	str	r0, [fp, #-48]	; 0xffffffd0
   16f84:	b	16fa0 <__assert_fail@plt+0x5b90>
   16f88:	ldr	r0, [fp, #8]
   16f8c:	movw	r1, #0
   16f90:	sub	r0, r1, r0
   16f94:	movw	r1, #32767	; 0x7fff
   16f98:	sdiv	r0, r1, r0
   16f9c:	str	r0, [fp, #-48]	; 0xffffffd0
   16fa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16fa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fa8:	mvn	r2, #0
   16fac:	sub	r1, r2, r1
   16fb0:	cmp	r0, r1
   16fb4:	ble	170d8 <__assert_fail@plt+0x5cc8>
   16fb8:	b	170f0 <__assert_fail@plt+0x5ce0>
   16fbc:	b	16fc0 <__assert_fail@plt+0x5bb0>
   16fc0:	b	1701c <__assert_fail@plt+0x5c0c>
   16fc4:	b	1701c <__assert_fail@plt+0x5c0c>
   16fc8:	ldr	r0, [fp, #8]
   16fcc:	cmn	r0, #1
   16fd0:	bne	1701c <__assert_fail@plt+0x5c0c>
   16fd4:	b	16fd8 <__assert_fail@plt+0x5bc8>
   16fd8:	ldr	r0, [pc, #3928]	; 17f38 <__assert_fail@plt+0x6b28>
   16fdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fe0:	add	r0, r1, r0
   16fe4:	movw	r1, #0
   16fe8:	cmp	r1, r0
   16fec:	blt	170d8 <__assert_fail@plt+0x5cc8>
   16ff0:	b	170f0 <__assert_fail@plt+0x5ce0>
   16ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ff8:	movw	r1, #0
   16ffc:	cmp	r1, r0
   17000:	bge	170f0 <__assert_fail@plt+0x5ce0>
   17004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17008:	sub	r0, r0, #1
   1700c:	movw	r1, #32767	; 0x7fff
   17010:	cmp	r1, r0
   17014:	blt	170d8 <__assert_fail@plt+0x5cc8>
   17018:	b	170f0 <__assert_fail@plt+0x5ce0>
   1701c:	ldr	r0, [pc, #3860]	; 17f38 <__assert_fail@plt+0x6b28>
   17020:	ldr	r1, [fp, #8]
   17024:	sdiv	r0, r0, r1
   17028:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1702c:	cmp	r0, r1
   17030:	blt	170d8 <__assert_fail@plt+0x5cc8>
   17034:	b	170f0 <__assert_fail@plt+0x5ce0>
   17038:	ldr	r0, [fp, #8]
   1703c:	cmp	r0, #0
   17040:	bne	17048 <__assert_fail@plt+0x5c38>
   17044:	b	170f0 <__assert_fail@plt+0x5ce0>
   17048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1704c:	cmp	r0, #0
   17050:	bge	170c0 <__assert_fail@plt+0x5cb0>
   17054:	b	17058 <__assert_fail@plt+0x5c48>
   17058:	b	170a4 <__assert_fail@plt+0x5c94>
   1705c:	b	170a4 <__assert_fail@plt+0x5c94>
   17060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17064:	cmn	r0, #1
   17068:	bne	170a4 <__assert_fail@plt+0x5c94>
   1706c:	b	17070 <__assert_fail@plt+0x5c60>
   17070:	ldr	r0, [pc, #3776]	; 17f38 <__assert_fail@plt+0x6b28>
   17074:	ldr	r1, [fp, #8]
   17078:	add	r0, r1, r0
   1707c:	movw	r1, #0
   17080:	cmp	r1, r0
   17084:	blt	170d8 <__assert_fail@plt+0x5cc8>
   17088:	b	170f0 <__assert_fail@plt+0x5ce0>
   1708c:	ldr	r0, [fp, #8]
   17090:	sub	r0, r0, #1
   17094:	movw	r1, #32767	; 0x7fff
   17098:	cmp	r1, r0
   1709c:	blt	170d8 <__assert_fail@plt+0x5cc8>
   170a0:	b	170f0 <__assert_fail@plt+0x5ce0>
   170a4:	ldr	r0, [pc, #3724]	; 17f38 <__assert_fail@plt+0x6b28>
   170a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170ac:	sdiv	r0, r0, r1
   170b0:	ldr	r1, [fp, #8]
   170b4:	cmp	r0, r1
   170b8:	blt	170d8 <__assert_fail@plt+0x5cc8>
   170bc:	b	170f0 <__assert_fail@plt+0x5ce0>
   170c0:	ldr	r0, [fp, #8]
   170c4:	movw	r1, #32767	; 0x7fff
   170c8:	sdiv	r0, r1, r0
   170cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170d0:	cmp	r0, r1
   170d4:	bge	170f0 <__assert_fail@plt+0x5ce0>
   170d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170dc:	ldr	r1, [fp, #8]
   170e0:	mul	r0, r0, r1
   170e4:	sxth	r0, r0
   170e8:	str	r0, [fp, #-28]	; 0xffffffe4
   170ec:	b	17f2c <__assert_fail@plt+0x6b1c>
   170f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170f4:	ldr	r1, [fp, #8]
   170f8:	mul	r0, r0, r1
   170fc:	sxth	r0, r0
   17100:	str	r0, [fp, #-28]	; 0xffffffe4
   17104:	b	17f3c <__assert_fail@plt+0x6b2c>
   17108:	ldr	r0, [fp, #8]
   1710c:	cmp	r0, #0
   17110:	bge	17220 <__assert_fail@plt+0x5e10>
   17114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17118:	cmp	r0, #0
   1711c:	bge	171a8 <__assert_fail@plt+0x5d98>
   17120:	b	17124 <__assert_fail@plt+0x5d14>
   17124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17128:	ldr	r1, [fp, #8]
   1712c:	movw	r2, #65535	; 0xffff
   17130:	sdiv	r1, r2, r1
   17134:	cmp	r0, r1
   17138:	blt	172bc <__assert_fail@plt+0x5eac>
   1713c:	b	172d4 <__assert_fail@plt+0x5ec4>
   17140:	b	17144 <__assert_fail@plt+0x5d34>
   17144:	ldr	r0, [pc, #2600]	; 17b74 <__assert_fail@plt+0x6764>
   17148:	ldr	r1, [fp, #8]
   1714c:	cmp	r1, r0
   17150:	blt	17168 <__assert_fail@plt+0x5d58>
   17154:	b	17174 <__assert_fail@plt+0x5d64>
   17158:	ldr	r0, [fp, #8]
   1715c:	movw	r1, #0
   17160:	cmp	r1, r0
   17164:	bge	17174 <__assert_fail@plt+0x5d64>
   17168:	movw	r0, #0
   1716c:	str	r0, [fp, #-52]	; 0xffffffcc
   17170:	b	1718c <__assert_fail@plt+0x5d7c>
   17174:	ldr	r0, [fp, #8]
   17178:	movw	r1, #0
   1717c:	sub	r0, r1, r0
   17180:	movw	r1, #65535	; 0xffff
   17184:	sdiv	r0, r1, r0
   17188:	str	r0, [fp, #-52]	; 0xffffffcc
   1718c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17194:	mvn	r2, #0
   17198:	sub	r1, r2, r1
   1719c:	cmp	r0, r1
   171a0:	ble	172bc <__assert_fail@plt+0x5eac>
   171a4:	b	172d4 <__assert_fail@plt+0x5ec4>
   171a8:	b	171ac <__assert_fail@plt+0x5d9c>
   171ac:	b	17204 <__assert_fail@plt+0x5df4>
   171b0:	b	17204 <__assert_fail@plt+0x5df4>
   171b4:	ldr	r0, [fp, #8]
   171b8:	cmn	r0, #1
   171bc:	bne	17204 <__assert_fail@plt+0x5df4>
   171c0:	b	171c4 <__assert_fail@plt+0x5db4>
   171c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171c8:	add	r0, r0, #0
   171cc:	movw	r1, #0
   171d0:	cmp	r1, r0
   171d4:	blt	172bc <__assert_fail@plt+0x5eac>
   171d8:	b	172d4 <__assert_fail@plt+0x5ec4>
   171dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171e0:	movw	r1, #0
   171e4:	cmp	r1, r0
   171e8:	bge	172d4 <__assert_fail@plt+0x5ec4>
   171ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171f0:	sub	r0, r0, #1
   171f4:	mvn	r1, #0
   171f8:	cmp	r1, r0
   171fc:	blt	172bc <__assert_fail@plt+0x5eac>
   17200:	b	172d4 <__assert_fail@plt+0x5ec4>
   17204:	ldr	r0, [fp, #8]
   17208:	movw	r1, #0
   1720c:	sdiv	r0, r1, r0
   17210:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17214:	cmp	r0, r1
   17218:	blt	172bc <__assert_fail@plt+0x5eac>
   1721c:	b	172d4 <__assert_fail@plt+0x5ec4>
   17220:	ldr	r0, [fp, #8]
   17224:	cmp	r0, #0
   17228:	bne	17230 <__assert_fail@plt+0x5e20>
   1722c:	b	172d4 <__assert_fail@plt+0x5ec4>
   17230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17234:	cmp	r0, #0
   17238:	bge	172a4 <__assert_fail@plt+0x5e94>
   1723c:	b	17240 <__assert_fail@plt+0x5e30>
   17240:	b	17288 <__assert_fail@plt+0x5e78>
   17244:	b	17288 <__assert_fail@plt+0x5e78>
   17248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1724c:	cmn	r0, #1
   17250:	bne	17288 <__assert_fail@plt+0x5e78>
   17254:	b	17258 <__assert_fail@plt+0x5e48>
   17258:	ldr	r0, [fp, #8]
   1725c:	add	r0, r0, #0
   17260:	movw	r1, #0
   17264:	cmp	r1, r0
   17268:	blt	172bc <__assert_fail@plt+0x5eac>
   1726c:	b	172d4 <__assert_fail@plt+0x5ec4>
   17270:	ldr	r0, [fp, #8]
   17274:	sub	r0, r0, #1
   17278:	mvn	r1, #0
   1727c:	cmp	r1, r0
   17280:	blt	172bc <__assert_fail@plt+0x5eac>
   17284:	b	172d4 <__assert_fail@plt+0x5ec4>
   17288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1728c:	movw	r1, #0
   17290:	sdiv	r0, r1, r0
   17294:	ldr	r1, [fp, #8]
   17298:	cmp	r0, r1
   1729c:	blt	172bc <__assert_fail@plt+0x5eac>
   172a0:	b	172d4 <__assert_fail@plt+0x5ec4>
   172a4:	ldr	r0, [fp, #8]
   172a8:	movw	r1, #65535	; 0xffff
   172ac:	sdiv	r0, r1, r0
   172b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172b4:	cmp	r0, r1
   172b8:	bge	172d4 <__assert_fail@plt+0x5ec4>
   172bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172c0:	ldr	r1, [fp, #8]
   172c4:	mul	r0, r0, r1
   172c8:	uxth	r0, r0
   172cc:	str	r0, [fp, #-28]	; 0xffffffe4
   172d0:	b	17f2c <__assert_fail@plt+0x6b1c>
   172d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172d8:	ldr	r1, [fp, #8]
   172dc:	mul	r0, r0, r1
   172e0:	uxth	r0, r0
   172e4:	str	r0, [fp, #-28]	; 0xffffffe4
   172e8:	b	17f3c <__assert_fail@plt+0x6b2c>
   172ec:	b	172f0 <__assert_fail@plt+0x5ee0>
   172f0:	b	172f4 <__assert_fail@plt+0x5ee4>
   172f4:	ldr	r0, [fp, #8]
   172f8:	cmp	r0, #0
   172fc:	bge	17400 <__assert_fail@plt+0x5ff0>
   17300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17304:	cmp	r0, #0
   17308:	bge	17394 <__assert_fail@plt+0x5f84>
   1730c:	b	17310 <__assert_fail@plt+0x5f00>
   17310:	ldr	r0, [pc, #1992]	; 17ae0 <__assert_fail@plt+0x66d0>
   17314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17318:	ldr	r2, [fp, #8]
   1731c:	sdiv	r0, r0, r2
   17320:	cmp	r1, r0
   17324:	blt	17490 <__assert_fail@plt+0x6080>
   17328:	b	174a4 <__assert_fail@plt+0x6094>
   1732c:	b	17330 <__assert_fail@plt+0x5f20>
   17330:	ldr	r0, [pc, #2108]	; 17b74 <__assert_fail@plt+0x6764>
   17334:	ldr	r1, [fp, #8]
   17338:	cmp	r1, r0
   1733c:	blt	17354 <__assert_fail@plt+0x5f44>
   17340:	b	17360 <__assert_fail@plt+0x5f50>
   17344:	ldr	r0, [fp, #8]
   17348:	movw	r1, #0
   1734c:	cmp	r1, r0
   17350:	bge	17360 <__assert_fail@plt+0x5f50>
   17354:	movw	r0, #0
   17358:	str	r0, [fp, #-56]	; 0xffffffc8
   1735c:	b	17378 <__assert_fail@plt+0x5f68>
   17360:	ldr	r0, [pc, #1912]	; 17ae0 <__assert_fail@plt+0x66d0>
   17364:	ldr	r1, [fp, #8]
   17368:	movw	r2, #0
   1736c:	sub	r1, r2, r1
   17370:	sdiv	r0, r0, r1
   17374:	str	r0, [fp, #-56]	; 0xffffffc8
   17378:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1737c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17380:	mvn	r2, #0
   17384:	sub	r1, r2, r1
   17388:	cmp	r0, r1
   1738c:	ble	17490 <__assert_fail@plt+0x6080>
   17390:	b	174a4 <__assert_fail@plt+0x6094>
   17394:	ldr	r0, [fp, #8]
   17398:	cmn	r0, #1
   1739c:	bne	173e4 <__assert_fail@plt+0x5fd4>
   173a0:	b	173a4 <__assert_fail@plt+0x5f94>
   173a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173a8:	add	r0, r0, #-2147483648	; 0x80000000
   173ac:	movw	r1, #0
   173b0:	cmp	r1, r0
   173b4:	blt	17490 <__assert_fail@plt+0x6080>
   173b8:	b	174a4 <__assert_fail@plt+0x6094>
   173bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173c0:	movw	r1, #0
   173c4:	cmp	r1, r0
   173c8:	bge	174a4 <__assert_fail@plt+0x6094>
   173cc:	ldr	r0, [pc, #1804]	; 17ae0 <__assert_fail@plt+0x66d0>
   173d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173d4:	sub	r1, r1, #1
   173d8:	cmp	r0, r1
   173dc:	blt	17490 <__assert_fail@plt+0x6080>
   173e0:	b	174a4 <__assert_fail@plt+0x6094>
   173e4:	ldr	r0, [pc, #4072]	; 183d4 <__assert_fail@plt+0x6fc4>
   173e8:	ldr	r1, [fp, #8]
   173ec:	sdiv	r0, r0, r1
   173f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173f4:	cmp	r0, r1
   173f8:	blt	17490 <__assert_fail@plt+0x6080>
   173fc:	b	174a4 <__assert_fail@plt+0x6094>
   17400:	ldr	r0, [fp, #8]
   17404:	cmp	r0, #0
   17408:	bne	17410 <__assert_fail@plt+0x6000>
   1740c:	b	174a4 <__assert_fail@plt+0x6094>
   17410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17414:	cmp	r0, #0
   17418:	bge	17478 <__assert_fail@plt+0x6068>
   1741c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17420:	cmn	r0, #1
   17424:	bne	1745c <__assert_fail@plt+0x604c>
   17428:	b	1742c <__assert_fail@plt+0x601c>
   1742c:	ldr	r0, [fp, #8]
   17430:	add	r0, r0, #-2147483648	; 0x80000000
   17434:	movw	r1, #0
   17438:	cmp	r1, r0
   1743c:	blt	17490 <__assert_fail@plt+0x6080>
   17440:	b	174a4 <__assert_fail@plt+0x6094>
   17444:	ldr	r0, [pc, #1684]	; 17ae0 <__assert_fail@plt+0x66d0>
   17448:	ldr	r1, [fp, #8]
   1744c:	sub	r1, r1, #1
   17450:	cmp	r0, r1
   17454:	blt	17490 <__assert_fail@plt+0x6080>
   17458:	b	174a4 <__assert_fail@plt+0x6094>
   1745c:	ldr	r0, [pc, #3952]	; 183d4 <__assert_fail@plt+0x6fc4>
   17460:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17464:	sdiv	r0, r0, r1
   17468:	ldr	r1, [fp, #8]
   1746c:	cmp	r0, r1
   17470:	blt	17490 <__assert_fail@plt+0x6080>
   17474:	b	174a4 <__assert_fail@plt+0x6094>
   17478:	ldr	r0, [pc, #1632]	; 17ae0 <__assert_fail@plt+0x66d0>
   1747c:	ldr	r1, [fp, #8]
   17480:	sdiv	r0, r0, r1
   17484:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17488:	cmp	r0, r1
   1748c:	bge	174a4 <__assert_fail@plt+0x6094>
   17490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17494:	ldr	r1, [fp, #8]
   17498:	mul	r0, r0, r1
   1749c:	str	r0, [fp, #-28]	; 0xffffffe4
   174a0:	b	17f2c <__assert_fail@plt+0x6b1c>
   174a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174a8:	ldr	r1, [fp, #8]
   174ac:	mul	r0, r0, r1
   174b0:	str	r0, [fp, #-28]	; 0xffffffe4
   174b4:	b	17f3c <__assert_fail@plt+0x6b2c>
   174b8:	ldr	r0, [fp, #8]
   174bc:	cmp	r0, #0
   174c0:	bge	175d0 <__assert_fail@plt+0x61c0>
   174c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174c8:	cmp	r0, #0
   174cc:	bge	17558 <__assert_fail@plt+0x6148>
   174d0:	b	174f0 <__assert_fail@plt+0x60e0>
   174d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174d8:	ldr	r1, [fp, #8]
   174dc:	mvn	r2, #0
   174e0:	udiv	r1, r2, r1
   174e4:	cmp	r0, r1
   174e8:	bcc	1766c <__assert_fail@plt+0x625c>
   174ec:	b	17680 <__assert_fail@plt+0x6270>
   174f0:	b	174f4 <__assert_fail@plt+0x60e4>
   174f4:	ldr	r0, [pc, #1656]	; 17b74 <__assert_fail@plt+0x6764>
   174f8:	ldr	r1, [fp, #8]
   174fc:	cmp	r1, r0
   17500:	blt	17518 <__assert_fail@plt+0x6108>
   17504:	b	17524 <__assert_fail@plt+0x6114>
   17508:	ldr	r0, [fp, #8]
   1750c:	movw	r1, #0
   17510:	cmp	r1, r0
   17514:	bge	17524 <__assert_fail@plt+0x6114>
   17518:	movw	r0, #1
   1751c:	str	r0, [fp, #-60]	; 0xffffffc4
   17520:	b	1753c <__assert_fail@plt+0x612c>
   17524:	ldr	r0, [fp, #8]
   17528:	movw	r1, #0
   1752c:	sub	r0, r1, r0
   17530:	mvn	r1, #0
   17534:	udiv	r0, r1, r0
   17538:	str	r0, [fp, #-60]	; 0xffffffc4
   1753c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17544:	mvn	r2, #0
   17548:	sub	r1, r2, r1
   1754c:	cmp	r0, r1
   17550:	bls	1766c <__assert_fail@plt+0x625c>
   17554:	b	17680 <__assert_fail@plt+0x6270>
   17558:	b	1755c <__assert_fail@plt+0x614c>
   1755c:	b	175b4 <__assert_fail@plt+0x61a4>
   17560:	b	175b4 <__assert_fail@plt+0x61a4>
   17564:	ldr	r0, [fp, #8]
   17568:	cmn	r0, #1
   1756c:	bne	175b4 <__assert_fail@plt+0x61a4>
   17570:	b	17574 <__assert_fail@plt+0x6164>
   17574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17578:	add	r0, r0, #0
   1757c:	movw	r1, #0
   17580:	cmp	r1, r0
   17584:	blt	1766c <__assert_fail@plt+0x625c>
   17588:	b	17680 <__assert_fail@plt+0x6270>
   1758c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17590:	movw	r1, #0
   17594:	cmp	r1, r0
   17598:	bge	17680 <__assert_fail@plt+0x6270>
   1759c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175a0:	sub	r0, r0, #1
   175a4:	mvn	r1, #0
   175a8:	cmp	r1, r0
   175ac:	blt	1766c <__assert_fail@plt+0x625c>
   175b0:	b	17680 <__assert_fail@plt+0x6270>
   175b4:	ldr	r0, [fp, #8]
   175b8:	movw	r1, #0
   175bc:	sdiv	r0, r1, r0
   175c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175c4:	cmp	r0, r1
   175c8:	blt	1766c <__assert_fail@plt+0x625c>
   175cc:	b	17680 <__assert_fail@plt+0x6270>
   175d0:	ldr	r0, [fp, #8]
   175d4:	cmp	r0, #0
   175d8:	bne	175e0 <__assert_fail@plt+0x61d0>
   175dc:	b	17680 <__assert_fail@plt+0x6270>
   175e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175e4:	cmp	r0, #0
   175e8:	bge	17654 <__assert_fail@plt+0x6244>
   175ec:	b	175f0 <__assert_fail@plt+0x61e0>
   175f0:	b	17638 <__assert_fail@plt+0x6228>
   175f4:	b	17638 <__assert_fail@plt+0x6228>
   175f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175fc:	cmn	r0, #1
   17600:	bne	17638 <__assert_fail@plt+0x6228>
   17604:	b	17608 <__assert_fail@plt+0x61f8>
   17608:	ldr	r0, [fp, #8]
   1760c:	add	r0, r0, #0
   17610:	movw	r1, #0
   17614:	cmp	r1, r0
   17618:	blt	1766c <__assert_fail@plt+0x625c>
   1761c:	b	17680 <__assert_fail@plt+0x6270>
   17620:	ldr	r0, [fp, #8]
   17624:	sub	r0, r0, #1
   17628:	mvn	r1, #0
   1762c:	cmp	r1, r0
   17630:	blt	1766c <__assert_fail@plt+0x625c>
   17634:	b	17680 <__assert_fail@plt+0x6270>
   17638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1763c:	movw	r1, #0
   17640:	sdiv	r0, r1, r0
   17644:	ldr	r1, [fp, #8]
   17648:	cmp	r0, r1
   1764c:	blt	1766c <__assert_fail@plt+0x625c>
   17650:	b	17680 <__assert_fail@plt+0x6270>
   17654:	ldr	r0, [fp, #8]
   17658:	mvn	r1, #0
   1765c:	udiv	r0, r1, r0
   17660:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17664:	cmp	r0, r1
   17668:	bcs	17680 <__assert_fail@plt+0x6270>
   1766c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17670:	ldr	r1, [fp, #8]
   17674:	mul	r0, r0, r1
   17678:	str	r0, [fp, #-28]	; 0xffffffe4
   1767c:	b	17f2c <__assert_fail@plt+0x6b1c>
   17680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17684:	ldr	r1, [fp, #8]
   17688:	mul	r0, r0, r1
   1768c:	str	r0, [fp, #-28]	; 0xffffffe4
   17690:	b	17f3c <__assert_fail@plt+0x6b2c>
   17694:	b	17698 <__assert_fail@plt+0x6288>
   17698:	b	1769c <__assert_fail@plt+0x628c>
   1769c:	ldr	r0, [fp, #8]
   176a0:	cmp	r0, #0
   176a4:	bge	177a8 <__assert_fail@plt+0x6398>
   176a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176ac:	cmp	r0, #0
   176b0:	bge	1773c <__assert_fail@plt+0x632c>
   176b4:	b	176b8 <__assert_fail@plt+0x62a8>
   176b8:	ldr	r0, [pc, #1056]	; 17ae0 <__assert_fail@plt+0x66d0>
   176bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176c0:	ldr	r2, [fp, #8]
   176c4:	sdiv	r0, r0, r2
   176c8:	cmp	r1, r0
   176cc:	blt	17838 <__assert_fail@plt+0x6428>
   176d0:	b	1784c <__assert_fail@plt+0x643c>
   176d4:	b	176d8 <__assert_fail@plt+0x62c8>
   176d8:	ldr	r0, [pc, #1172]	; 17b74 <__assert_fail@plt+0x6764>
   176dc:	ldr	r1, [fp, #8]
   176e0:	cmp	r1, r0
   176e4:	blt	176fc <__assert_fail@plt+0x62ec>
   176e8:	b	17708 <__assert_fail@plt+0x62f8>
   176ec:	ldr	r0, [fp, #8]
   176f0:	movw	r1, #0
   176f4:	cmp	r1, r0
   176f8:	bge	17708 <__assert_fail@plt+0x62f8>
   176fc:	movw	r0, #0
   17700:	str	r0, [fp, #-64]	; 0xffffffc0
   17704:	b	17720 <__assert_fail@plt+0x6310>
   17708:	ldr	r0, [pc, #976]	; 17ae0 <__assert_fail@plt+0x66d0>
   1770c:	ldr	r1, [fp, #8]
   17710:	movw	r2, #0
   17714:	sub	r1, r2, r1
   17718:	sdiv	r0, r0, r1
   1771c:	str	r0, [fp, #-64]	; 0xffffffc0
   17720:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17724:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17728:	mvn	r2, #0
   1772c:	sub	r1, r2, r1
   17730:	cmp	r0, r1
   17734:	ble	17838 <__assert_fail@plt+0x6428>
   17738:	b	1784c <__assert_fail@plt+0x643c>
   1773c:	ldr	r0, [fp, #8]
   17740:	cmn	r0, #1
   17744:	bne	1778c <__assert_fail@plt+0x637c>
   17748:	b	1774c <__assert_fail@plt+0x633c>
   1774c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17750:	add	r0, r0, #-2147483648	; 0x80000000
   17754:	movw	r1, #0
   17758:	cmp	r1, r0
   1775c:	blt	17838 <__assert_fail@plt+0x6428>
   17760:	b	1784c <__assert_fail@plt+0x643c>
   17764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17768:	movw	r1, #0
   1776c:	cmp	r1, r0
   17770:	bge	1784c <__assert_fail@plt+0x643c>
   17774:	ldr	r0, [pc, #868]	; 17ae0 <__assert_fail@plt+0x66d0>
   17778:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1777c:	sub	r1, r1, #1
   17780:	cmp	r0, r1
   17784:	blt	17838 <__assert_fail@plt+0x6428>
   17788:	b	1784c <__assert_fail@plt+0x643c>
   1778c:	ldr	r0, [pc, #3136]	; 183d4 <__assert_fail@plt+0x6fc4>
   17790:	ldr	r1, [fp, #8]
   17794:	sdiv	r0, r0, r1
   17798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1779c:	cmp	r0, r1
   177a0:	blt	17838 <__assert_fail@plt+0x6428>
   177a4:	b	1784c <__assert_fail@plt+0x643c>
   177a8:	ldr	r0, [fp, #8]
   177ac:	cmp	r0, #0
   177b0:	bne	177b8 <__assert_fail@plt+0x63a8>
   177b4:	b	1784c <__assert_fail@plt+0x643c>
   177b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177bc:	cmp	r0, #0
   177c0:	bge	17820 <__assert_fail@plt+0x6410>
   177c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177c8:	cmn	r0, #1
   177cc:	bne	17804 <__assert_fail@plt+0x63f4>
   177d0:	b	177d4 <__assert_fail@plt+0x63c4>
   177d4:	ldr	r0, [fp, #8]
   177d8:	add	r0, r0, #-2147483648	; 0x80000000
   177dc:	movw	r1, #0
   177e0:	cmp	r1, r0
   177e4:	blt	17838 <__assert_fail@plt+0x6428>
   177e8:	b	1784c <__assert_fail@plt+0x643c>
   177ec:	ldr	r0, [pc, #748]	; 17ae0 <__assert_fail@plt+0x66d0>
   177f0:	ldr	r1, [fp, #8]
   177f4:	sub	r1, r1, #1
   177f8:	cmp	r0, r1
   177fc:	blt	17838 <__assert_fail@plt+0x6428>
   17800:	b	1784c <__assert_fail@plt+0x643c>
   17804:	ldr	r0, [pc, #3016]	; 183d4 <__assert_fail@plt+0x6fc4>
   17808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1780c:	sdiv	r0, r0, r1
   17810:	ldr	r1, [fp, #8]
   17814:	cmp	r0, r1
   17818:	blt	17838 <__assert_fail@plt+0x6428>
   1781c:	b	1784c <__assert_fail@plt+0x643c>
   17820:	ldr	r0, [pc, #696]	; 17ae0 <__assert_fail@plt+0x66d0>
   17824:	ldr	r1, [fp, #8]
   17828:	sdiv	r0, r0, r1
   1782c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17830:	cmp	r0, r1
   17834:	bge	1784c <__assert_fail@plt+0x643c>
   17838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1783c:	ldr	r1, [fp, #8]
   17840:	mul	r0, r0, r1
   17844:	str	r0, [fp, #-28]	; 0xffffffe4
   17848:	b	17f2c <__assert_fail@plt+0x6b1c>
   1784c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17850:	ldr	r1, [fp, #8]
   17854:	mul	r0, r0, r1
   17858:	str	r0, [fp, #-28]	; 0xffffffe4
   1785c:	b	17f3c <__assert_fail@plt+0x6b2c>
   17860:	ldr	r0, [fp, #8]
   17864:	cmp	r0, #0
   17868:	bge	17978 <__assert_fail@plt+0x6568>
   1786c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17870:	cmp	r0, #0
   17874:	bge	17900 <__assert_fail@plt+0x64f0>
   17878:	b	17898 <__assert_fail@plt+0x6488>
   1787c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17880:	ldr	r1, [fp, #8]
   17884:	mvn	r2, #0
   17888:	udiv	r1, r2, r1
   1788c:	cmp	r0, r1
   17890:	bcc	17a14 <__assert_fail@plt+0x6604>
   17894:	b	17a28 <__assert_fail@plt+0x6618>
   17898:	b	1789c <__assert_fail@plt+0x648c>
   1789c:	ldr	r0, [pc, #720]	; 17b74 <__assert_fail@plt+0x6764>
   178a0:	ldr	r1, [fp, #8]
   178a4:	cmp	r1, r0
   178a8:	blt	178c0 <__assert_fail@plt+0x64b0>
   178ac:	b	178cc <__assert_fail@plt+0x64bc>
   178b0:	ldr	r0, [fp, #8]
   178b4:	movw	r1, #0
   178b8:	cmp	r1, r0
   178bc:	bge	178cc <__assert_fail@plt+0x64bc>
   178c0:	movw	r0, #1
   178c4:	str	r0, [fp, #-68]	; 0xffffffbc
   178c8:	b	178e4 <__assert_fail@plt+0x64d4>
   178cc:	ldr	r0, [fp, #8]
   178d0:	movw	r1, #0
   178d4:	sub	r0, r1, r0
   178d8:	mvn	r1, #0
   178dc:	udiv	r0, r1, r0
   178e0:	str	r0, [fp, #-68]	; 0xffffffbc
   178e4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   178e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178ec:	mvn	r2, #0
   178f0:	sub	r1, r2, r1
   178f4:	cmp	r0, r1
   178f8:	bls	17a14 <__assert_fail@plt+0x6604>
   178fc:	b	17a28 <__assert_fail@plt+0x6618>
   17900:	b	17904 <__assert_fail@plt+0x64f4>
   17904:	b	1795c <__assert_fail@plt+0x654c>
   17908:	b	1795c <__assert_fail@plt+0x654c>
   1790c:	ldr	r0, [fp, #8]
   17910:	cmn	r0, #1
   17914:	bne	1795c <__assert_fail@plt+0x654c>
   17918:	b	1791c <__assert_fail@plt+0x650c>
   1791c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17920:	add	r0, r0, #0
   17924:	movw	r1, #0
   17928:	cmp	r1, r0
   1792c:	blt	17a14 <__assert_fail@plt+0x6604>
   17930:	b	17a28 <__assert_fail@plt+0x6618>
   17934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17938:	movw	r1, #0
   1793c:	cmp	r1, r0
   17940:	bge	17a28 <__assert_fail@plt+0x6618>
   17944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17948:	sub	r0, r0, #1
   1794c:	mvn	r1, #0
   17950:	cmp	r1, r0
   17954:	blt	17a14 <__assert_fail@plt+0x6604>
   17958:	b	17a28 <__assert_fail@plt+0x6618>
   1795c:	ldr	r0, [fp, #8]
   17960:	movw	r1, #0
   17964:	sdiv	r0, r1, r0
   17968:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1796c:	cmp	r0, r1
   17970:	blt	17a14 <__assert_fail@plt+0x6604>
   17974:	b	17a28 <__assert_fail@plt+0x6618>
   17978:	ldr	r0, [fp, #8]
   1797c:	cmp	r0, #0
   17980:	bne	17988 <__assert_fail@plt+0x6578>
   17984:	b	17a28 <__assert_fail@plt+0x6618>
   17988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1798c:	cmp	r0, #0
   17990:	bge	179fc <__assert_fail@plt+0x65ec>
   17994:	b	17998 <__assert_fail@plt+0x6588>
   17998:	b	179e0 <__assert_fail@plt+0x65d0>
   1799c:	b	179e0 <__assert_fail@plt+0x65d0>
   179a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179a4:	cmn	r0, #1
   179a8:	bne	179e0 <__assert_fail@plt+0x65d0>
   179ac:	b	179b0 <__assert_fail@plt+0x65a0>
   179b0:	ldr	r0, [fp, #8]
   179b4:	add	r0, r0, #0
   179b8:	movw	r1, #0
   179bc:	cmp	r1, r0
   179c0:	blt	17a14 <__assert_fail@plt+0x6604>
   179c4:	b	17a28 <__assert_fail@plt+0x6618>
   179c8:	ldr	r0, [fp, #8]
   179cc:	sub	r0, r0, #1
   179d0:	mvn	r1, #0
   179d4:	cmp	r1, r0
   179d8:	blt	17a14 <__assert_fail@plt+0x6604>
   179dc:	b	17a28 <__assert_fail@plt+0x6618>
   179e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179e4:	movw	r1, #0
   179e8:	sdiv	r0, r1, r0
   179ec:	ldr	r1, [fp, #8]
   179f0:	cmp	r0, r1
   179f4:	blt	17a14 <__assert_fail@plt+0x6604>
   179f8:	b	17a28 <__assert_fail@plt+0x6618>
   179fc:	ldr	r0, [fp, #8]
   17a00:	mvn	r1, #0
   17a04:	udiv	r0, r1, r0
   17a08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a0c:	cmp	r0, r1
   17a10:	bcs	17a28 <__assert_fail@plt+0x6618>
   17a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a18:	ldr	r1, [fp, #8]
   17a1c:	mul	r0, r0, r1
   17a20:	str	r0, [fp, #-28]	; 0xffffffe4
   17a24:	b	17f2c <__assert_fail@plt+0x6b1c>
   17a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a2c:	ldr	r1, [fp, #8]
   17a30:	mul	r0, r0, r1
   17a34:	str	r0, [fp, #-28]	; 0xffffffe4
   17a38:	b	17f3c <__assert_fail@plt+0x6b2c>
   17a3c:	b	17a40 <__assert_fail@plt+0x6630>
   17a40:	ldr	r0, [fp, #8]
   17a44:	cmp	r0, #0
   17a48:	bge	17bd8 <__assert_fail@plt+0x67c8>
   17a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a50:	cmp	r0, #0
   17a54:	bge	17b40 <__assert_fail@plt+0x6730>
   17a58:	b	17a5c <__assert_fail@plt+0x664c>
   17a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a60:	ldr	r1, [fp, #8]
   17a64:	asr	r3, r1, #31
   17a68:	mvn	r2, #0
   17a6c:	mvn	ip, #-2147483648	; 0x80000000
   17a70:	str	r0, [fp, #-72]	; 0xffffffb8
   17a74:	mov	r0, r2
   17a78:	str	r1, [fp, #-76]	; 0xffffffb4
   17a7c:	mov	r1, ip
   17a80:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17a84:	bl	1de30 <__assert_fail@plt+0xca20>
   17a88:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17a8c:	subs	r0, r2, r0
   17a90:	rscs	r1, r1, r2, asr #31
   17a94:	str	r0, [fp, #-80]	; 0xffffffb0
   17a98:	str	r1, [fp, #-84]	; 0xffffffac
   17a9c:	blt	17cb8 <__assert_fail@plt+0x68a8>
   17aa0:	b	17ccc <__assert_fail@plt+0x68bc>
   17aa4:	b	17aa8 <__assert_fail@plt+0x6698>
   17aa8:	ldr	r0, [pc, #196]	; 17b74 <__assert_fail@plt+0x6764>
   17aac:	ldr	r1, [fp, #8]
   17ab0:	cmp	r1, r0
   17ab4:	blt	17acc <__assert_fail@plt+0x66bc>
   17ab8:	b	17ae4 <__assert_fail@plt+0x66d4>
   17abc:	ldr	r0, [fp, #8]
   17ac0:	movw	r1, #0
   17ac4:	cmp	r1, r0
   17ac8:	bge	17ae4 <__assert_fail@plt+0x66d4>
   17acc:	mov	r0, #0
   17ad0:	mvn	r1, #0
   17ad4:	str	r1, [fp, #-88]	; 0xffffffa8
   17ad8:	str	r0, [fp, #-92]	; 0xffffffa4
   17adc:	b	17b18 <__assert_fail@plt+0x6708>
   17ae0:	svcvc	0x00ffffff
   17ae4:	ldr	r0, [fp, #8]
   17ae8:	rsb	r0, r0, #0
   17aec:	asr	r3, r0, #31
   17af0:	mvn	r1, #0
   17af4:	mvn	r2, #-2147483648	; 0x80000000
   17af8:	str	r0, [fp, #-96]	; 0xffffffa0
   17afc:	mov	r0, r1
   17b00:	mov	r1, r2
   17b04:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17b08:	bl	1de30 <__assert_fail@plt+0xca20>
   17b0c:	str	r0, [fp, #-88]	; 0xffffffa8
   17b10:	str	r1, [fp, #-92]	; 0xffffffa4
   17b14:	b	17b18 <__assert_fail@plt+0x6708>
   17b18:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17b1c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17b20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17b24:	mvn	r2, r2
   17b28:	subs	r1, r2, r1
   17b2c:	rscs	r0, r0, r2, asr #31
   17b30:	str	r1, [fp, #-100]	; 0xffffff9c
   17b34:	str	r0, [fp, #-104]	; 0xffffff98
   17b38:	bge	17cb8 <__assert_fail@plt+0x68a8>
   17b3c:	b	17ccc <__assert_fail@plt+0x68bc>
   17b40:	ldr	r0, [fp, #8]
   17b44:	cmn	r0, #1
   17b48:	bne	17b98 <__assert_fail@plt+0x6788>
   17b4c:	b	17b50 <__assert_fail@plt+0x6740>
   17b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b54:	mov	r1, #-2147483648	; 0x80000000
   17b58:	add	r1, r1, r0, asr #31
   17b5c:	rsbs	r0, r0, #0
   17b60:	rscs	r1, r1, #0
   17b64:	str	r0, [fp, #-108]	; 0xffffff94
   17b68:	str	r1, [fp, #-112]	; 0xffffff90
   17b6c:	blt	17cb8 <__assert_fail@plt+0x68a8>
   17b70:	b	17ccc <__assert_fail@plt+0x68bc>
   17b74:	andhi	r0, r0, r1
   17b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b7c:	movw	r1, #0
   17b80:	cmp	r1, r0
   17b84:	bge	17ccc <__assert_fail@plt+0x68bc>
   17b88:	mov	r0, #0
   17b8c:	cmp	r0, #0
   17b90:	bne	17cb8 <__assert_fail@plt+0x68a8>
   17b94:	b	17ccc <__assert_fail@plt+0x68bc>
   17b98:	ldr	r0, [fp, #8]
   17b9c:	asr	r3, r0, #31
   17ba0:	mov	r1, #0
   17ba4:	mov	r2, #-2147483648	; 0x80000000
   17ba8:	str	r0, [fp, #-116]	; 0xffffff8c
   17bac:	mov	r0, r1
   17bb0:	mov	r1, r2
   17bb4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   17bb8:	bl	1de30 <__assert_fail@plt+0xca20>
   17bbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17bc0:	subs	r0, r0, r2
   17bc4:	sbcs	r1, r1, r2, asr #31
   17bc8:	str	r0, [fp, #-120]	; 0xffffff88
   17bcc:	str	r1, [fp, #-124]	; 0xffffff84
   17bd0:	blt	17cb8 <__assert_fail@plt+0x68a8>
   17bd4:	b	17ccc <__assert_fail@plt+0x68bc>
   17bd8:	ldr	r0, [fp, #8]
   17bdc:	cmp	r0, #0
   17be0:	bne	17be8 <__assert_fail@plt+0x67d8>
   17be4:	b	17ccc <__assert_fail@plt+0x68bc>
   17be8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bec:	cmp	r0, #0
   17bf0:	bge	17c78 <__assert_fail@plt+0x6868>
   17bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bf8:	cmn	r0, #1
   17bfc:	bne	17c38 <__assert_fail@plt+0x6828>
   17c00:	b	17c04 <__assert_fail@plt+0x67f4>
   17c04:	ldr	r0, [fp, #8]
   17c08:	mov	r1, #-2147483648	; 0x80000000
   17c0c:	add	r1, r1, r0, asr #31
   17c10:	rsbs	r0, r0, #0
   17c14:	rscs	r1, r1, #0
   17c18:	str	r0, [fp, #-128]	; 0xffffff80
   17c1c:	str	r1, [fp, #-132]	; 0xffffff7c
   17c20:	blt	17cb8 <__assert_fail@plt+0x68a8>
   17c24:	b	17ccc <__assert_fail@plt+0x68bc>
   17c28:	mov	r0, #0
   17c2c:	cmp	r0, #0
   17c30:	bne	17cb8 <__assert_fail@plt+0x68a8>
   17c34:	b	17ccc <__assert_fail@plt+0x68bc>
   17c38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c3c:	asr	r3, r0, #31
   17c40:	mov	r1, #0
   17c44:	mov	r2, #-2147483648	; 0x80000000
   17c48:	str	r0, [fp, #-136]	; 0xffffff78
   17c4c:	mov	r0, r1
   17c50:	mov	r1, r2
   17c54:	ldr	r2, [fp, #-136]	; 0xffffff78
   17c58:	bl	1de30 <__assert_fail@plt+0xca20>
   17c5c:	ldr	r2, [fp, #8]
   17c60:	subs	r0, r0, r2
   17c64:	sbcs	r1, r1, r2, asr #31
   17c68:	str	r0, [fp, #-140]	; 0xffffff74
   17c6c:	str	r1, [fp, #-144]	; 0xffffff70
   17c70:	blt	17cb8 <__assert_fail@plt+0x68a8>
   17c74:	b	17ccc <__assert_fail@plt+0x68bc>
   17c78:	ldr	r0, [fp, #8]
   17c7c:	asr	r3, r0, #31
   17c80:	mvn	r1, #0
   17c84:	mvn	r2, #-2147483648	; 0x80000000
   17c88:	str	r0, [fp, #-148]	; 0xffffff6c
   17c8c:	mov	r0, r1
   17c90:	mov	r1, r2
   17c94:	ldr	r2, [fp, #-148]	; 0xffffff6c
   17c98:	bl	1de30 <__assert_fail@plt+0xca20>
   17c9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17ca0:	subs	r0, r0, r2
   17ca4:	sbcs	r1, r1, r2, asr #31
   17ca8:	str	r0, [fp, #-152]	; 0xffffff68
   17cac:	str	r1, [fp, #-156]	; 0xffffff64
   17cb0:	bge	17ccc <__assert_fail@plt+0x68bc>
   17cb4:	b	17cb8 <__assert_fail@plt+0x68a8>
   17cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cbc:	ldr	r1, [fp, #8]
   17cc0:	mul	r0, r0, r1
   17cc4:	str	r0, [fp, #-28]	; 0xffffffe4
   17cc8:	b	17f2c <__assert_fail@plt+0x6b1c>
   17ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cd0:	ldr	r1, [fp, #8]
   17cd4:	mul	r0, r0, r1
   17cd8:	str	r0, [fp, #-28]	; 0xffffffe4
   17cdc:	b	17f3c <__assert_fail@plt+0x6b2c>
   17ce0:	ldr	r0, [fp, #8]
   17ce4:	cmp	r0, #0
   17ce8:	bge	17e48 <__assert_fail@plt+0x6a38>
   17cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf0:	cmp	r0, #0
   17cf4:	bge	17dd0 <__assert_fail@plt+0x69c0>
   17cf8:	b	17d40 <__assert_fail@plt+0x6930>
   17cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d00:	ldr	r1, [fp, #8]
   17d04:	asr	r3, r1, #31
   17d08:	mvn	r2, #0
   17d0c:	str	r0, [fp, #-160]	; 0xffffff60
   17d10:	mov	r0, r2
   17d14:	str	r1, [fp, #-164]	; 0xffffff5c
   17d18:	mov	r1, r2
   17d1c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   17d20:	bl	1df04 <__assert_fail@plt+0xcaf4>
   17d24:	ldr	r2, [fp, #-160]	; 0xffffff60
   17d28:	subs	r0, r2, r0
   17d2c:	rscs	r1, r1, r2, asr #31
   17d30:	str	r0, [fp, #-168]	; 0xffffff58
   17d34:	str	r1, [fp, #-172]	; 0xffffff54
   17d38:	bcc	17f04 <__assert_fail@plt+0x6af4>
   17d3c:	b	17f18 <__assert_fail@plt+0x6b08>
   17d40:	b	17d44 <__assert_fail@plt+0x6934>
   17d44:	ldr	r0, [pc, #-472]	; 17b74 <__assert_fail@plt+0x6764>
   17d48:	ldr	r1, [fp, #8]
   17d4c:	cmp	r1, r0
   17d50:	blt	17d68 <__assert_fail@plt+0x6958>
   17d54:	b	17d7c <__assert_fail@plt+0x696c>
   17d58:	ldr	r0, [fp, #8]
   17d5c:	movw	r1, #0
   17d60:	cmp	r1, r0
   17d64:	bge	17d7c <__assert_fail@plt+0x696c>
   17d68:	mov	r0, #1
   17d6c:	mvn	r1, #0
   17d70:	str	r1, [fp, #-176]	; 0xffffff50
   17d74:	str	r0, [fp, #-180]	; 0xffffff4c
   17d78:	b	17da8 <__assert_fail@plt+0x6998>
   17d7c:	ldr	r0, [fp, #8]
   17d80:	rsb	r0, r0, #0
   17d84:	asr	r3, r0, #31
   17d88:	mvn	r1, #0
   17d8c:	str	r0, [fp, #-184]	; 0xffffff48
   17d90:	mov	r0, r1
   17d94:	ldr	r2, [fp, #-184]	; 0xffffff48
   17d98:	bl	1df04 <__assert_fail@plt+0xcaf4>
   17d9c:	str	r0, [fp, #-176]	; 0xffffff50
   17da0:	str	r1, [fp, #-180]	; 0xffffff4c
   17da4:	b	17da8 <__assert_fail@plt+0x6998>
   17da8:	ldr	r0, [fp, #-180]	; 0xffffff4c
   17dac:	ldr	r1, [fp, #-176]	; 0xffffff50
   17db0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17db4:	mvn	r2, r2
   17db8:	subs	r1, r2, r1
   17dbc:	rscs	r0, r0, r2, asr #31
   17dc0:	str	r1, [sp, #188]	; 0xbc
   17dc4:	str	r0, [sp, #184]	; 0xb8
   17dc8:	bcs	17f04 <__assert_fail@plt+0x6af4>
   17dcc:	b	17f18 <__assert_fail@plt+0x6b08>
   17dd0:	b	17dd4 <__assert_fail@plt+0x69c4>
   17dd4:	b	17e2c <__assert_fail@plt+0x6a1c>
   17dd8:	b	17e2c <__assert_fail@plt+0x6a1c>
   17ddc:	ldr	r0, [fp, #8]
   17de0:	cmn	r0, #1
   17de4:	bne	17e2c <__assert_fail@plt+0x6a1c>
   17de8:	b	17dec <__assert_fail@plt+0x69dc>
   17dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17df0:	add	r0, r0, #0
   17df4:	movw	r1, #0
   17df8:	cmp	r1, r0
   17dfc:	blt	17f04 <__assert_fail@plt+0x6af4>
   17e00:	b	17f18 <__assert_fail@plt+0x6b08>
   17e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e08:	movw	r1, #0
   17e0c:	cmp	r1, r0
   17e10:	bge	17f18 <__assert_fail@plt+0x6b08>
   17e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e18:	sub	r0, r0, #1
   17e1c:	mvn	r1, #0
   17e20:	cmp	r1, r0
   17e24:	blt	17f04 <__assert_fail@plt+0x6af4>
   17e28:	b	17f18 <__assert_fail@plt+0x6b08>
   17e2c:	ldr	r0, [fp, #8]
   17e30:	movw	r1, #0
   17e34:	sdiv	r0, r1, r0
   17e38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e3c:	cmp	r0, r1
   17e40:	blt	17f04 <__assert_fail@plt+0x6af4>
   17e44:	b	17f18 <__assert_fail@plt+0x6b08>
   17e48:	ldr	r0, [fp, #8]
   17e4c:	cmp	r0, #0
   17e50:	bne	17e58 <__assert_fail@plt+0x6a48>
   17e54:	b	17f18 <__assert_fail@plt+0x6b08>
   17e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e5c:	cmp	r0, #0
   17e60:	bge	17ecc <__assert_fail@plt+0x6abc>
   17e64:	b	17e68 <__assert_fail@plt+0x6a58>
   17e68:	b	17eb0 <__assert_fail@plt+0x6aa0>
   17e6c:	b	17eb0 <__assert_fail@plt+0x6aa0>
   17e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e74:	cmn	r0, #1
   17e78:	bne	17eb0 <__assert_fail@plt+0x6aa0>
   17e7c:	b	17e80 <__assert_fail@plt+0x6a70>
   17e80:	ldr	r0, [fp, #8]
   17e84:	add	r0, r0, #0
   17e88:	movw	r1, #0
   17e8c:	cmp	r1, r0
   17e90:	blt	17f04 <__assert_fail@plt+0x6af4>
   17e94:	b	17f18 <__assert_fail@plt+0x6b08>
   17e98:	ldr	r0, [fp, #8]
   17e9c:	sub	r0, r0, #1
   17ea0:	mvn	r1, #0
   17ea4:	cmp	r1, r0
   17ea8:	blt	17f04 <__assert_fail@plt+0x6af4>
   17eac:	b	17f18 <__assert_fail@plt+0x6b08>
   17eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17eb4:	movw	r1, #0
   17eb8:	sdiv	r0, r1, r0
   17ebc:	ldr	r1, [fp, #8]
   17ec0:	cmp	r0, r1
   17ec4:	blt	17f04 <__assert_fail@plt+0x6af4>
   17ec8:	b	17f18 <__assert_fail@plt+0x6b08>
   17ecc:	ldr	r0, [fp, #8]
   17ed0:	asr	r3, r0, #31
   17ed4:	mvn	r1, #0
   17ed8:	str	r0, [sp, #180]	; 0xb4
   17edc:	mov	r0, r1
   17ee0:	ldr	r2, [sp, #180]	; 0xb4
   17ee4:	bl	1df04 <__assert_fail@plt+0xcaf4>
   17ee8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17eec:	subs	r0, r0, r2
   17ef0:	sbcs	r1, r1, r2, asr #31
   17ef4:	str	r0, [sp, #176]	; 0xb0
   17ef8:	str	r1, [sp, #172]	; 0xac
   17efc:	bcs	17f18 <__assert_fail@plt+0x6b08>
   17f00:	b	17f04 <__assert_fail@plt+0x6af4>
   17f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f08:	ldr	r1, [fp, #8]
   17f0c:	mul	r0, r0, r1
   17f10:	str	r0, [fp, #-28]	; 0xffffffe4
   17f14:	b	17f2c <__assert_fail@plt+0x6b1c>
   17f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f1c:	ldr	r1, [fp, #8]
   17f20:	mul	r0, r0, r1
   17f24:	str	r0, [fp, #-28]	; 0xffffffe4
   17f28:	b	17f3c <__assert_fail@plt+0x6b2c>
   17f2c:	ldr	r0, [pc, #-1108]	; 17ae0 <__assert_fail@plt+0x66d0>
   17f30:	str	r0, [sp, #168]	; 0xa8
   17f34:	b	17f5c <__assert_fail@plt+0x6b4c>
   17f38:			; <UNDEFINED> instruction: 0xffff8000
   17f3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17f40:	cmp	r0, #64	; 0x40
   17f44:	movw	r0, #0
   17f48:	movlt	r0, #1
   17f4c:	tst	r0, #1
   17f50:	movw	r0, #64	; 0x40
   17f54:	moveq	r0, #0
   17f58:	str	r0, [sp, #168]	; 0xa8
   17f5c:	ldr	r0, [sp, #168]	; 0xa8
   17f60:	str	r0, [fp, #-32]	; 0xffffffe0
   17f64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f68:	cmp	r0, #0
   17f6c:	beq	17f9c <__assert_fail@plt+0x6b8c>
   17f70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f74:	ldr	r1, [fp, #8]
   17f78:	sdiv	r0, r0, r1
   17f7c:	str	r0, [fp, #-24]	; 0xffffffe8
   17f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f84:	mov	r1, r0
   17f88:	ldr	r2, [fp, #8]
   17f8c:	sdiv	r3, r0, r2
   17f90:	mls	r0, r3, r2, r0
   17f94:	sub	r0, r1, r0
   17f98:	str	r0, [fp, #-28]	; 0xffffffe4
   17f9c:	ldr	r0, [fp, #-4]
   17fa0:	movw	r1, #0
   17fa4:	cmp	r0, r1
   17fa8:	bne	17fb8 <__assert_fail@plt+0x6ba8>
   17fac:	ldr	r0, [fp, #-8]
   17fb0:	movw	r1, #0
   17fb4:	str	r1, [r0]
   17fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   17fc0:	sub	r0, r0, r1
   17fc4:	ldr	r1, [fp, #-12]
   17fc8:	cmp	r0, r1
   17fcc:	bge	19404 <__assert_fail@plt+0x7ff4>
   17fd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   17fd4:	ldr	r1, [fp, #-12]
   17fd8:	add	r1, r0, r1
   17fdc:	mov	r2, #1
   17fe0:	cmp	r1, r0
   17fe4:	movwvc	r2, #0
   17fe8:	str	r1, [fp, #-24]	; 0xffffffe8
   17fec:	tst	r2, #1
   17ff0:	bne	19400 <__assert_fail@plt+0x7ff0>
   17ff4:	ldr	r0, [fp, #-16]
   17ff8:	movw	r1, #0
   17ffc:	cmp	r1, r0
   18000:	bgt	18014 <__assert_fail@plt+0x6c04>
   18004:	ldr	r0, [fp, #-16]
   18008:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1800c:	cmp	r0, r1
   18010:	blt	19400 <__assert_fail@plt+0x7ff0>
   18014:	b	183f0 <__assert_fail@plt+0x6fe0>
   18018:	b	1801c <__assert_fail@plt+0x6c0c>
   1801c:	ldr	r0, [fp, #8]
   18020:	cmp	r0, #0
   18024:	bge	18138 <__assert_fail@plt+0x6d28>
   18028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1802c:	cmp	r0, #0
   18030:	bge	180bc <__assert_fail@plt+0x6cac>
   18034:	b	18038 <__assert_fail@plt+0x6c28>
   18038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1803c:	ldr	r1, [fp, #8]
   18040:	movw	r2, #127	; 0x7f
   18044:	sdiv	r1, r2, r1
   18048:	cmp	r0, r1
   1804c:	blt	181d8 <__assert_fail@plt+0x6dc8>
   18050:	b	181f0 <__assert_fail@plt+0x6de0>
   18054:	b	18058 <__assert_fail@plt+0x6c48>
   18058:	ldr	r0, [pc, #-1260]	; 17b74 <__assert_fail@plt+0x6764>
   1805c:	ldr	r1, [fp, #8]
   18060:	cmp	r1, r0
   18064:	blt	1807c <__assert_fail@plt+0x6c6c>
   18068:	b	18088 <__assert_fail@plt+0x6c78>
   1806c:	ldr	r0, [fp, #8]
   18070:	movw	r1, #0
   18074:	cmp	r1, r0
   18078:	bge	18088 <__assert_fail@plt+0x6c78>
   1807c:	movw	r0, #0
   18080:	str	r0, [sp, #164]	; 0xa4
   18084:	b	180a0 <__assert_fail@plt+0x6c90>
   18088:	ldr	r0, [fp, #8]
   1808c:	movw	r1, #0
   18090:	sub	r0, r1, r0
   18094:	movw	r1, #127	; 0x7f
   18098:	sdiv	r0, r1, r0
   1809c:	str	r0, [sp, #164]	; 0xa4
   180a0:	ldr	r0, [sp, #164]	; 0xa4
   180a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180a8:	mvn	r2, #0
   180ac:	sub	r1, r2, r1
   180b0:	cmp	r0, r1
   180b4:	ble	181d8 <__assert_fail@plt+0x6dc8>
   180b8:	b	181f0 <__assert_fail@plt+0x6de0>
   180bc:	b	180c0 <__assert_fail@plt+0x6cb0>
   180c0:	b	1811c <__assert_fail@plt+0x6d0c>
   180c4:	b	1811c <__assert_fail@plt+0x6d0c>
   180c8:	ldr	r0, [fp, #8]
   180cc:	cmn	r0, #1
   180d0:	bne	1811c <__assert_fail@plt+0x6d0c>
   180d4:	b	180d8 <__assert_fail@plt+0x6cc8>
   180d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180dc:	mvn	r1, #127	; 0x7f
   180e0:	add	r0, r0, r1
   180e4:	movw	r1, #0
   180e8:	cmp	r1, r0
   180ec:	blt	181d8 <__assert_fail@plt+0x6dc8>
   180f0:	b	181f0 <__assert_fail@plt+0x6de0>
   180f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180f8:	movw	r1, #0
   180fc:	cmp	r1, r0
   18100:	bge	181f0 <__assert_fail@plt+0x6de0>
   18104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18108:	sub	r0, r0, #1
   1810c:	movw	r1, #127	; 0x7f
   18110:	cmp	r1, r0
   18114:	blt	181d8 <__assert_fail@plt+0x6dc8>
   18118:	b	181f0 <__assert_fail@plt+0x6de0>
   1811c:	ldr	r0, [fp, #8]
   18120:	mvn	r1, #127	; 0x7f
   18124:	sdiv	r0, r1, r0
   18128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1812c:	cmp	r0, r1
   18130:	blt	181d8 <__assert_fail@plt+0x6dc8>
   18134:	b	181f0 <__assert_fail@plt+0x6de0>
   18138:	ldr	r0, [fp, #8]
   1813c:	cmp	r0, #0
   18140:	bne	18148 <__assert_fail@plt+0x6d38>
   18144:	b	181f0 <__assert_fail@plt+0x6de0>
   18148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1814c:	cmp	r0, #0
   18150:	bge	181c0 <__assert_fail@plt+0x6db0>
   18154:	b	18158 <__assert_fail@plt+0x6d48>
   18158:	b	181a4 <__assert_fail@plt+0x6d94>
   1815c:	b	181a4 <__assert_fail@plt+0x6d94>
   18160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18164:	cmn	r0, #1
   18168:	bne	181a4 <__assert_fail@plt+0x6d94>
   1816c:	b	18170 <__assert_fail@plt+0x6d60>
   18170:	ldr	r0, [fp, #8]
   18174:	mvn	r1, #127	; 0x7f
   18178:	add	r0, r0, r1
   1817c:	movw	r1, #0
   18180:	cmp	r1, r0
   18184:	blt	181d8 <__assert_fail@plt+0x6dc8>
   18188:	b	181f0 <__assert_fail@plt+0x6de0>
   1818c:	ldr	r0, [fp, #8]
   18190:	sub	r0, r0, #1
   18194:	movw	r1, #127	; 0x7f
   18198:	cmp	r1, r0
   1819c:	blt	181d8 <__assert_fail@plt+0x6dc8>
   181a0:	b	181f0 <__assert_fail@plt+0x6de0>
   181a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181a8:	mvn	r1, #127	; 0x7f
   181ac:	sdiv	r0, r1, r0
   181b0:	ldr	r1, [fp, #8]
   181b4:	cmp	r0, r1
   181b8:	blt	181d8 <__assert_fail@plt+0x6dc8>
   181bc:	b	181f0 <__assert_fail@plt+0x6de0>
   181c0:	ldr	r0, [fp, #8]
   181c4:	movw	r1, #127	; 0x7f
   181c8:	sdiv	r0, r1, r0
   181cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181d0:	cmp	r0, r1
   181d4:	bge	181f0 <__assert_fail@plt+0x6de0>
   181d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181dc:	ldr	r1, [fp, #8]
   181e0:	mul	r0, r0, r1
   181e4:	sxtb	r0, r0
   181e8:	str	r0, [fp, #-28]	; 0xffffffe4
   181ec:	b	19400 <__assert_fail@plt+0x7ff0>
   181f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181f4:	ldr	r1, [fp, #8]
   181f8:	mul	r0, r0, r1
   181fc:	sxtb	r0, r0
   18200:	str	r0, [fp, #-28]	; 0xffffffe4
   18204:	b	19404 <__assert_fail@plt+0x7ff4>
   18208:	ldr	r0, [fp, #8]
   1820c:	cmp	r0, #0
   18210:	bge	18320 <__assert_fail@plt+0x6f10>
   18214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18218:	cmp	r0, #0
   1821c:	bge	182a8 <__assert_fail@plt+0x6e98>
   18220:	b	18224 <__assert_fail@plt+0x6e14>
   18224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18228:	ldr	r1, [fp, #8]
   1822c:	movw	r2, #255	; 0xff
   18230:	sdiv	r1, r2, r1
   18234:	cmp	r0, r1
   18238:	blt	183bc <__assert_fail@plt+0x6fac>
   1823c:	b	183d8 <__assert_fail@plt+0x6fc8>
   18240:	b	18244 <__assert_fail@plt+0x6e34>
   18244:	ldr	r0, [pc, #-1752]	; 17b74 <__assert_fail@plt+0x6764>
   18248:	ldr	r1, [fp, #8]
   1824c:	cmp	r1, r0
   18250:	blt	18268 <__assert_fail@plt+0x6e58>
   18254:	b	18274 <__assert_fail@plt+0x6e64>
   18258:	ldr	r0, [fp, #8]
   1825c:	movw	r1, #0
   18260:	cmp	r1, r0
   18264:	bge	18274 <__assert_fail@plt+0x6e64>
   18268:	movw	r0, #0
   1826c:	str	r0, [sp, #160]	; 0xa0
   18270:	b	1828c <__assert_fail@plt+0x6e7c>
   18274:	ldr	r0, [fp, #8]
   18278:	movw	r1, #0
   1827c:	sub	r0, r1, r0
   18280:	movw	r1, #255	; 0xff
   18284:	sdiv	r0, r1, r0
   18288:	str	r0, [sp, #160]	; 0xa0
   1828c:	ldr	r0, [sp, #160]	; 0xa0
   18290:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18294:	mvn	r2, #0
   18298:	sub	r1, r2, r1
   1829c:	cmp	r0, r1
   182a0:	ble	183bc <__assert_fail@plt+0x6fac>
   182a4:	b	183d8 <__assert_fail@plt+0x6fc8>
   182a8:	b	182ac <__assert_fail@plt+0x6e9c>
   182ac:	b	18304 <__assert_fail@plt+0x6ef4>
   182b0:	b	18304 <__assert_fail@plt+0x6ef4>
   182b4:	ldr	r0, [fp, #8]
   182b8:	cmn	r0, #1
   182bc:	bne	18304 <__assert_fail@plt+0x6ef4>
   182c0:	b	182c4 <__assert_fail@plt+0x6eb4>
   182c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182c8:	add	r0, r0, #0
   182cc:	movw	r1, #0
   182d0:	cmp	r1, r0
   182d4:	blt	183bc <__assert_fail@plt+0x6fac>
   182d8:	b	183d8 <__assert_fail@plt+0x6fc8>
   182dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182e0:	movw	r1, #0
   182e4:	cmp	r1, r0
   182e8:	bge	183d8 <__assert_fail@plt+0x6fc8>
   182ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182f0:	sub	r0, r0, #1
   182f4:	mvn	r1, #0
   182f8:	cmp	r1, r0
   182fc:	blt	183bc <__assert_fail@plt+0x6fac>
   18300:	b	183d8 <__assert_fail@plt+0x6fc8>
   18304:	ldr	r0, [fp, #8]
   18308:	movw	r1, #0
   1830c:	sdiv	r0, r1, r0
   18310:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18314:	cmp	r0, r1
   18318:	blt	183bc <__assert_fail@plt+0x6fac>
   1831c:	b	183d8 <__assert_fail@plt+0x6fc8>
   18320:	ldr	r0, [fp, #8]
   18324:	cmp	r0, #0
   18328:	bne	18330 <__assert_fail@plt+0x6f20>
   1832c:	b	183d8 <__assert_fail@plt+0x6fc8>
   18330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18334:	cmp	r0, #0
   18338:	bge	183a4 <__assert_fail@plt+0x6f94>
   1833c:	b	18340 <__assert_fail@plt+0x6f30>
   18340:	b	18388 <__assert_fail@plt+0x6f78>
   18344:	b	18388 <__assert_fail@plt+0x6f78>
   18348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1834c:	cmn	r0, #1
   18350:	bne	18388 <__assert_fail@plt+0x6f78>
   18354:	b	18358 <__assert_fail@plt+0x6f48>
   18358:	ldr	r0, [fp, #8]
   1835c:	add	r0, r0, #0
   18360:	movw	r1, #0
   18364:	cmp	r1, r0
   18368:	blt	183bc <__assert_fail@plt+0x6fac>
   1836c:	b	183d8 <__assert_fail@plt+0x6fc8>
   18370:	ldr	r0, [fp, #8]
   18374:	sub	r0, r0, #1
   18378:	mvn	r1, #0
   1837c:	cmp	r1, r0
   18380:	blt	183bc <__assert_fail@plt+0x6fac>
   18384:	b	183d8 <__assert_fail@plt+0x6fc8>
   18388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1838c:	movw	r1, #0
   18390:	sdiv	r0, r1, r0
   18394:	ldr	r1, [fp, #8]
   18398:	cmp	r0, r1
   1839c:	blt	183bc <__assert_fail@plt+0x6fac>
   183a0:	b	183d8 <__assert_fail@plt+0x6fc8>
   183a4:	ldr	r0, [fp, #8]
   183a8:	movw	r1, #255	; 0xff
   183ac:	sdiv	r0, r1, r0
   183b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183b4:	cmp	r0, r1
   183b8:	bge	183d8 <__assert_fail@plt+0x6fc8>
   183bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183c0:	ldr	r1, [fp, #8]
   183c4:	mul	r0, r0, r1
   183c8:	and	r0, r0, #255	; 0xff
   183cc:	str	r0, [fp, #-28]	; 0xffffffe4
   183d0:	b	19400 <__assert_fail@plt+0x7ff0>
   183d4:	andhi	r0, r0, r0
   183d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183dc:	ldr	r1, [fp, #8]
   183e0:	mul	r0, r0, r1
   183e4:	and	r0, r0, #255	; 0xff
   183e8:	str	r0, [fp, #-28]	; 0xffffffe4
   183ec:	b	19404 <__assert_fail@plt+0x7ff4>
   183f0:	b	187c8 <__assert_fail@plt+0x73b8>
   183f4:	b	183f8 <__assert_fail@plt+0x6fe8>
   183f8:	ldr	r0, [fp, #8]
   183fc:	cmp	r0, #0
   18400:	bge	18514 <__assert_fail@plt+0x7104>
   18404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18408:	cmp	r0, #0
   1840c:	bge	18498 <__assert_fail@plt+0x7088>
   18410:	b	18414 <__assert_fail@plt+0x7004>
   18414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18418:	ldr	r1, [fp, #8]
   1841c:	movw	r2, #32767	; 0x7fff
   18420:	sdiv	r1, r2, r1
   18424:	cmp	r0, r1
   18428:	blt	185b4 <__assert_fail@plt+0x71a4>
   1842c:	b	185cc <__assert_fail@plt+0x71bc>
   18430:	b	18434 <__assert_fail@plt+0x7024>
   18434:	ldr	r0, [pc, #4084]	; 19430 <__assert_fail@plt+0x8020>
   18438:	ldr	r1, [fp, #8]
   1843c:	cmp	r1, r0
   18440:	blt	18458 <__assert_fail@plt+0x7048>
   18444:	b	18464 <__assert_fail@plt+0x7054>
   18448:	ldr	r0, [fp, #8]
   1844c:	movw	r1, #0
   18450:	cmp	r1, r0
   18454:	bge	18464 <__assert_fail@plt+0x7054>
   18458:	movw	r0, #0
   1845c:	str	r0, [sp, #156]	; 0x9c
   18460:	b	1847c <__assert_fail@plt+0x706c>
   18464:	ldr	r0, [fp, #8]
   18468:	movw	r1, #0
   1846c:	sub	r0, r1, r0
   18470:	movw	r1, #32767	; 0x7fff
   18474:	sdiv	r0, r1, r0
   18478:	str	r0, [sp, #156]	; 0x9c
   1847c:	ldr	r0, [sp, #156]	; 0x9c
   18480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18484:	mvn	r2, #0
   18488:	sub	r1, r2, r1
   1848c:	cmp	r0, r1
   18490:	ble	185b4 <__assert_fail@plt+0x71a4>
   18494:	b	185cc <__assert_fail@plt+0x71bc>
   18498:	b	1849c <__assert_fail@plt+0x708c>
   1849c:	b	184f8 <__assert_fail@plt+0x70e8>
   184a0:	b	184f8 <__assert_fail@plt+0x70e8>
   184a4:	ldr	r0, [fp, #8]
   184a8:	cmn	r0, #1
   184ac:	bne	184f8 <__assert_fail@plt+0x70e8>
   184b0:	b	184b4 <__assert_fail@plt+0x70a4>
   184b4:	ldr	r0, [pc, #3964]	; 19438 <__assert_fail@plt+0x8028>
   184b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184bc:	add	r0, r1, r0
   184c0:	movw	r1, #0
   184c4:	cmp	r1, r0
   184c8:	blt	185b4 <__assert_fail@plt+0x71a4>
   184cc:	b	185cc <__assert_fail@plt+0x71bc>
   184d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184d4:	movw	r1, #0
   184d8:	cmp	r1, r0
   184dc:	bge	185cc <__assert_fail@plt+0x71bc>
   184e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184e4:	sub	r0, r0, #1
   184e8:	movw	r1, #32767	; 0x7fff
   184ec:	cmp	r1, r0
   184f0:	blt	185b4 <__assert_fail@plt+0x71a4>
   184f4:	b	185cc <__assert_fail@plt+0x71bc>
   184f8:	ldr	r0, [pc, #3896]	; 19438 <__assert_fail@plt+0x8028>
   184fc:	ldr	r1, [fp, #8]
   18500:	sdiv	r0, r0, r1
   18504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18508:	cmp	r0, r1
   1850c:	blt	185b4 <__assert_fail@plt+0x71a4>
   18510:	b	185cc <__assert_fail@plt+0x71bc>
   18514:	ldr	r0, [fp, #8]
   18518:	cmp	r0, #0
   1851c:	bne	18524 <__assert_fail@plt+0x7114>
   18520:	b	185cc <__assert_fail@plt+0x71bc>
   18524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18528:	cmp	r0, #0
   1852c:	bge	1859c <__assert_fail@plt+0x718c>
   18530:	b	18534 <__assert_fail@plt+0x7124>
   18534:	b	18580 <__assert_fail@plt+0x7170>
   18538:	b	18580 <__assert_fail@plt+0x7170>
   1853c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18540:	cmn	r0, #1
   18544:	bne	18580 <__assert_fail@plt+0x7170>
   18548:	b	1854c <__assert_fail@plt+0x713c>
   1854c:	ldr	r0, [pc, #3812]	; 19438 <__assert_fail@plt+0x8028>
   18550:	ldr	r1, [fp, #8]
   18554:	add	r0, r1, r0
   18558:	movw	r1, #0
   1855c:	cmp	r1, r0
   18560:	blt	185b4 <__assert_fail@plt+0x71a4>
   18564:	b	185cc <__assert_fail@plt+0x71bc>
   18568:	ldr	r0, [fp, #8]
   1856c:	sub	r0, r0, #1
   18570:	movw	r1, #32767	; 0x7fff
   18574:	cmp	r1, r0
   18578:	blt	185b4 <__assert_fail@plt+0x71a4>
   1857c:	b	185cc <__assert_fail@plt+0x71bc>
   18580:	ldr	r0, [pc, #3760]	; 19438 <__assert_fail@plt+0x8028>
   18584:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18588:	sdiv	r0, r0, r1
   1858c:	ldr	r1, [fp, #8]
   18590:	cmp	r0, r1
   18594:	blt	185b4 <__assert_fail@plt+0x71a4>
   18598:	b	185cc <__assert_fail@plt+0x71bc>
   1859c:	ldr	r0, [fp, #8]
   185a0:	movw	r1, #32767	; 0x7fff
   185a4:	sdiv	r0, r1, r0
   185a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185ac:	cmp	r0, r1
   185b0:	bge	185cc <__assert_fail@plt+0x71bc>
   185b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185b8:	ldr	r1, [fp, #8]
   185bc:	mul	r0, r0, r1
   185c0:	sxth	r0, r0
   185c4:	str	r0, [fp, #-28]	; 0xffffffe4
   185c8:	b	19400 <__assert_fail@plt+0x7ff0>
   185cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185d0:	ldr	r1, [fp, #8]
   185d4:	mul	r0, r0, r1
   185d8:	sxth	r0, r0
   185dc:	str	r0, [fp, #-28]	; 0xffffffe4
   185e0:	b	19404 <__assert_fail@plt+0x7ff4>
   185e4:	ldr	r0, [fp, #8]
   185e8:	cmp	r0, #0
   185ec:	bge	186fc <__assert_fail@plt+0x72ec>
   185f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185f4:	cmp	r0, #0
   185f8:	bge	18684 <__assert_fail@plt+0x7274>
   185fc:	b	18600 <__assert_fail@plt+0x71f0>
   18600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18604:	ldr	r1, [fp, #8]
   18608:	movw	r2, #65535	; 0xffff
   1860c:	sdiv	r1, r2, r1
   18610:	cmp	r0, r1
   18614:	blt	18798 <__assert_fail@plt+0x7388>
   18618:	b	187b0 <__assert_fail@plt+0x73a0>
   1861c:	b	18620 <__assert_fail@plt+0x7210>
   18620:	ldr	r0, [pc, #3592]	; 19430 <__assert_fail@plt+0x8020>
   18624:	ldr	r1, [fp, #8]
   18628:	cmp	r1, r0
   1862c:	blt	18644 <__assert_fail@plt+0x7234>
   18630:	b	18650 <__assert_fail@plt+0x7240>
   18634:	ldr	r0, [fp, #8]
   18638:	movw	r1, #0
   1863c:	cmp	r1, r0
   18640:	bge	18650 <__assert_fail@plt+0x7240>
   18644:	movw	r0, #0
   18648:	str	r0, [sp, #152]	; 0x98
   1864c:	b	18668 <__assert_fail@plt+0x7258>
   18650:	ldr	r0, [fp, #8]
   18654:	movw	r1, #0
   18658:	sub	r0, r1, r0
   1865c:	movw	r1, #65535	; 0xffff
   18660:	sdiv	r0, r1, r0
   18664:	str	r0, [sp, #152]	; 0x98
   18668:	ldr	r0, [sp, #152]	; 0x98
   1866c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18670:	mvn	r2, #0
   18674:	sub	r1, r2, r1
   18678:	cmp	r0, r1
   1867c:	ble	18798 <__assert_fail@plt+0x7388>
   18680:	b	187b0 <__assert_fail@plt+0x73a0>
   18684:	b	18688 <__assert_fail@plt+0x7278>
   18688:	b	186e0 <__assert_fail@plt+0x72d0>
   1868c:	b	186e0 <__assert_fail@plt+0x72d0>
   18690:	ldr	r0, [fp, #8]
   18694:	cmn	r0, #1
   18698:	bne	186e0 <__assert_fail@plt+0x72d0>
   1869c:	b	186a0 <__assert_fail@plt+0x7290>
   186a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186a4:	add	r0, r0, #0
   186a8:	movw	r1, #0
   186ac:	cmp	r1, r0
   186b0:	blt	18798 <__assert_fail@plt+0x7388>
   186b4:	b	187b0 <__assert_fail@plt+0x73a0>
   186b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186bc:	movw	r1, #0
   186c0:	cmp	r1, r0
   186c4:	bge	187b0 <__assert_fail@plt+0x73a0>
   186c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186cc:	sub	r0, r0, #1
   186d0:	mvn	r1, #0
   186d4:	cmp	r1, r0
   186d8:	blt	18798 <__assert_fail@plt+0x7388>
   186dc:	b	187b0 <__assert_fail@plt+0x73a0>
   186e0:	ldr	r0, [fp, #8]
   186e4:	movw	r1, #0
   186e8:	sdiv	r0, r1, r0
   186ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186f0:	cmp	r0, r1
   186f4:	blt	18798 <__assert_fail@plt+0x7388>
   186f8:	b	187b0 <__assert_fail@plt+0x73a0>
   186fc:	ldr	r0, [fp, #8]
   18700:	cmp	r0, #0
   18704:	bne	1870c <__assert_fail@plt+0x72fc>
   18708:	b	187b0 <__assert_fail@plt+0x73a0>
   1870c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18710:	cmp	r0, #0
   18714:	bge	18780 <__assert_fail@plt+0x7370>
   18718:	b	1871c <__assert_fail@plt+0x730c>
   1871c:	b	18764 <__assert_fail@plt+0x7354>
   18720:	b	18764 <__assert_fail@plt+0x7354>
   18724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18728:	cmn	r0, #1
   1872c:	bne	18764 <__assert_fail@plt+0x7354>
   18730:	b	18734 <__assert_fail@plt+0x7324>
   18734:	ldr	r0, [fp, #8]
   18738:	add	r0, r0, #0
   1873c:	movw	r1, #0
   18740:	cmp	r1, r0
   18744:	blt	18798 <__assert_fail@plt+0x7388>
   18748:	b	187b0 <__assert_fail@plt+0x73a0>
   1874c:	ldr	r0, [fp, #8]
   18750:	sub	r0, r0, #1
   18754:	mvn	r1, #0
   18758:	cmp	r1, r0
   1875c:	blt	18798 <__assert_fail@plt+0x7388>
   18760:	b	187b0 <__assert_fail@plt+0x73a0>
   18764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18768:	movw	r1, #0
   1876c:	sdiv	r0, r1, r0
   18770:	ldr	r1, [fp, #8]
   18774:	cmp	r0, r1
   18778:	blt	18798 <__assert_fail@plt+0x7388>
   1877c:	b	187b0 <__assert_fail@plt+0x73a0>
   18780:	ldr	r0, [fp, #8]
   18784:	movw	r1, #65535	; 0xffff
   18788:	sdiv	r0, r1, r0
   1878c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18790:	cmp	r0, r1
   18794:	bge	187b0 <__assert_fail@plt+0x73a0>
   18798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1879c:	ldr	r1, [fp, #8]
   187a0:	mul	r0, r0, r1
   187a4:	uxth	r0, r0
   187a8:	str	r0, [fp, #-28]	; 0xffffffe4
   187ac:	b	19400 <__assert_fail@plt+0x7ff0>
   187b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187b4:	ldr	r1, [fp, #8]
   187b8:	mul	r0, r0, r1
   187bc:	uxth	r0, r0
   187c0:	str	r0, [fp, #-28]	; 0xffffffe4
   187c4:	b	19404 <__assert_fail@plt+0x7ff4>
   187c8:	b	187cc <__assert_fail@plt+0x73bc>
   187cc:	b	187d0 <__assert_fail@plt+0x73c0>
   187d0:	ldr	r0, [fp, #8]
   187d4:	cmp	r0, #0
   187d8:	bge	188dc <__assert_fail@plt+0x74cc>
   187dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187e0:	cmp	r0, #0
   187e4:	bge	18870 <__assert_fail@plt+0x7460>
   187e8:	b	187ec <__assert_fail@plt+0x73dc>
   187ec:	ldr	r0, [pc, #3128]	; 1942c <__assert_fail@plt+0x801c>
   187f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   187f4:	ldr	r2, [fp, #8]
   187f8:	sdiv	r0, r0, r2
   187fc:	cmp	r1, r0
   18800:	blt	1896c <__assert_fail@plt+0x755c>
   18804:	b	18980 <__assert_fail@plt+0x7570>
   18808:	b	1880c <__assert_fail@plt+0x73fc>
   1880c:	ldr	r0, [pc, #3100]	; 19430 <__assert_fail@plt+0x8020>
   18810:	ldr	r1, [fp, #8]
   18814:	cmp	r1, r0
   18818:	blt	18830 <__assert_fail@plt+0x7420>
   1881c:	b	1883c <__assert_fail@plt+0x742c>
   18820:	ldr	r0, [fp, #8]
   18824:	movw	r1, #0
   18828:	cmp	r1, r0
   1882c:	bge	1883c <__assert_fail@plt+0x742c>
   18830:	movw	r0, #0
   18834:	str	r0, [sp, #148]	; 0x94
   18838:	b	18854 <__assert_fail@plt+0x7444>
   1883c:	ldr	r0, [pc, #3048]	; 1942c <__assert_fail@plt+0x801c>
   18840:	ldr	r1, [fp, #8]
   18844:	movw	r2, #0
   18848:	sub	r1, r2, r1
   1884c:	sdiv	r0, r0, r1
   18850:	str	r0, [sp, #148]	; 0x94
   18854:	ldr	r0, [sp, #148]	; 0x94
   18858:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1885c:	mvn	r2, #0
   18860:	sub	r1, r2, r1
   18864:	cmp	r0, r1
   18868:	ble	1896c <__assert_fail@plt+0x755c>
   1886c:	b	18980 <__assert_fail@plt+0x7570>
   18870:	ldr	r0, [fp, #8]
   18874:	cmn	r0, #1
   18878:	bne	188c0 <__assert_fail@plt+0x74b0>
   1887c:	b	18880 <__assert_fail@plt+0x7470>
   18880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18884:	add	r0, r0, #-2147483648	; 0x80000000
   18888:	movw	r1, #0
   1888c:	cmp	r1, r0
   18890:	blt	1896c <__assert_fail@plt+0x755c>
   18894:	b	18980 <__assert_fail@plt+0x7570>
   18898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1889c:	movw	r1, #0
   188a0:	cmp	r1, r0
   188a4:	bge	18980 <__assert_fail@plt+0x7570>
   188a8:	ldr	r0, [pc, #2940]	; 1942c <__assert_fail@plt+0x801c>
   188ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188b0:	sub	r1, r1, #1
   188b4:	cmp	r0, r1
   188b8:	blt	1896c <__assert_fail@plt+0x755c>
   188bc:	b	18980 <__assert_fail@plt+0x7570>
   188c0:	ldr	r0, [pc, #2924]	; 19434 <__assert_fail@plt+0x8024>
   188c4:	ldr	r1, [fp, #8]
   188c8:	sdiv	r0, r0, r1
   188cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188d0:	cmp	r0, r1
   188d4:	blt	1896c <__assert_fail@plt+0x755c>
   188d8:	b	18980 <__assert_fail@plt+0x7570>
   188dc:	ldr	r0, [fp, #8]
   188e0:	cmp	r0, #0
   188e4:	bne	188ec <__assert_fail@plt+0x74dc>
   188e8:	b	18980 <__assert_fail@plt+0x7570>
   188ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188f0:	cmp	r0, #0
   188f4:	bge	18954 <__assert_fail@plt+0x7544>
   188f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188fc:	cmn	r0, #1
   18900:	bne	18938 <__assert_fail@plt+0x7528>
   18904:	b	18908 <__assert_fail@plt+0x74f8>
   18908:	ldr	r0, [fp, #8]
   1890c:	add	r0, r0, #-2147483648	; 0x80000000
   18910:	movw	r1, #0
   18914:	cmp	r1, r0
   18918:	blt	1896c <__assert_fail@plt+0x755c>
   1891c:	b	18980 <__assert_fail@plt+0x7570>
   18920:	ldr	r0, [pc, #2820]	; 1942c <__assert_fail@plt+0x801c>
   18924:	ldr	r1, [fp, #8]
   18928:	sub	r1, r1, #1
   1892c:	cmp	r0, r1
   18930:	blt	1896c <__assert_fail@plt+0x755c>
   18934:	b	18980 <__assert_fail@plt+0x7570>
   18938:	ldr	r0, [pc, #2804]	; 19434 <__assert_fail@plt+0x8024>
   1893c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18940:	sdiv	r0, r0, r1
   18944:	ldr	r1, [fp, #8]
   18948:	cmp	r0, r1
   1894c:	blt	1896c <__assert_fail@plt+0x755c>
   18950:	b	18980 <__assert_fail@plt+0x7570>
   18954:	ldr	r0, [pc, #2768]	; 1942c <__assert_fail@plt+0x801c>
   18958:	ldr	r1, [fp, #8]
   1895c:	sdiv	r0, r0, r1
   18960:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18964:	cmp	r0, r1
   18968:	bge	18980 <__assert_fail@plt+0x7570>
   1896c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18970:	ldr	r1, [fp, #8]
   18974:	mul	r0, r0, r1
   18978:	str	r0, [fp, #-28]	; 0xffffffe4
   1897c:	b	19400 <__assert_fail@plt+0x7ff0>
   18980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18984:	ldr	r1, [fp, #8]
   18988:	mul	r0, r0, r1
   1898c:	str	r0, [fp, #-28]	; 0xffffffe4
   18990:	b	19404 <__assert_fail@plt+0x7ff4>
   18994:	ldr	r0, [fp, #8]
   18998:	cmp	r0, #0
   1899c:	bge	18aac <__assert_fail@plt+0x769c>
   189a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189a4:	cmp	r0, #0
   189a8:	bge	18a34 <__assert_fail@plt+0x7624>
   189ac:	b	189cc <__assert_fail@plt+0x75bc>
   189b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189b4:	ldr	r1, [fp, #8]
   189b8:	mvn	r2, #0
   189bc:	udiv	r1, r2, r1
   189c0:	cmp	r0, r1
   189c4:	bcc	18b48 <__assert_fail@plt+0x7738>
   189c8:	b	18b5c <__assert_fail@plt+0x774c>
   189cc:	b	189d0 <__assert_fail@plt+0x75c0>
   189d0:	ldr	r0, [pc, #2648]	; 19430 <__assert_fail@plt+0x8020>
   189d4:	ldr	r1, [fp, #8]
   189d8:	cmp	r1, r0
   189dc:	blt	189f4 <__assert_fail@plt+0x75e4>
   189e0:	b	18a00 <__assert_fail@plt+0x75f0>
   189e4:	ldr	r0, [fp, #8]
   189e8:	movw	r1, #0
   189ec:	cmp	r1, r0
   189f0:	bge	18a00 <__assert_fail@plt+0x75f0>
   189f4:	movw	r0, #1
   189f8:	str	r0, [sp, #144]	; 0x90
   189fc:	b	18a18 <__assert_fail@plt+0x7608>
   18a00:	ldr	r0, [fp, #8]
   18a04:	movw	r1, #0
   18a08:	sub	r0, r1, r0
   18a0c:	mvn	r1, #0
   18a10:	udiv	r0, r1, r0
   18a14:	str	r0, [sp, #144]	; 0x90
   18a18:	ldr	r0, [sp, #144]	; 0x90
   18a1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a20:	mvn	r2, #0
   18a24:	sub	r1, r2, r1
   18a28:	cmp	r0, r1
   18a2c:	bls	18b48 <__assert_fail@plt+0x7738>
   18a30:	b	18b5c <__assert_fail@plt+0x774c>
   18a34:	b	18a38 <__assert_fail@plt+0x7628>
   18a38:	b	18a90 <__assert_fail@plt+0x7680>
   18a3c:	b	18a90 <__assert_fail@plt+0x7680>
   18a40:	ldr	r0, [fp, #8]
   18a44:	cmn	r0, #1
   18a48:	bne	18a90 <__assert_fail@plt+0x7680>
   18a4c:	b	18a50 <__assert_fail@plt+0x7640>
   18a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a54:	add	r0, r0, #0
   18a58:	movw	r1, #0
   18a5c:	cmp	r1, r0
   18a60:	blt	18b48 <__assert_fail@plt+0x7738>
   18a64:	b	18b5c <__assert_fail@plt+0x774c>
   18a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a6c:	movw	r1, #0
   18a70:	cmp	r1, r0
   18a74:	bge	18b5c <__assert_fail@plt+0x774c>
   18a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a7c:	sub	r0, r0, #1
   18a80:	mvn	r1, #0
   18a84:	cmp	r1, r0
   18a88:	blt	18b48 <__assert_fail@plt+0x7738>
   18a8c:	b	18b5c <__assert_fail@plt+0x774c>
   18a90:	ldr	r0, [fp, #8]
   18a94:	movw	r1, #0
   18a98:	sdiv	r0, r1, r0
   18a9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18aa0:	cmp	r0, r1
   18aa4:	blt	18b48 <__assert_fail@plt+0x7738>
   18aa8:	b	18b5c <__assert_fail@plt+0x774c>
   18aac:	ldr	r0, [fp, #8]
   18ab0:	cmp	r0, #0
   18ab4:	bne	18abc <__assert_fail@plt+0x76ac>
   18ab8:	b	18b5c <__assert_fail@plt+0x774c>
   18abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ac0:	cmp	r0, #0
   18ac4:	bge	18b30 <__assert_fail@plt+0x7720>
   18ac8:	b	18acc <__assert_fail@plt+0x76bc>
   18acc:	b	18b14 <__assert_fail@plt+0x7704>
   18ad0:	b	18b14 <__assert_fail@plt+0x7704>
   18ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ad8:	cmn	r0, #1
   18adc:	bne	18b14 <__assert_fail@plt+0x7704>
   18ae0:	b	18ae4 <__assert_fail@plt+0x76d4>
   18ae4:	ldr	r0, [fp, #8]
   18ae8:	add	r0, r0, #0
   18aec:	movw	r1, #0
   18af0:	cmp	r1, r0
   18af4:	blt	18b48 <__assert_fail@plt+0x7738>
   18af8:	b	18b5c <__assert_fail@plt+0x774c>
   18afc:	ldr	r0, [fp, #8]
   18b00:	sub	r0, r0, #1
   18b04:	mvn	r1, #0
   18b08:	cmp	r1, r0
   18b0c:	blt	18b48 <__assert_fail@plt+0x7738>
   18b10:	b	18b5c <__assert_fail@plt+0x774c>
   18b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b18:	movw	r1, #0
   18b1c:	sdiv	r0, r1, r0
   18b20:	ldr	r1, [fp, #8]
   18b24:	cmp	r0, r1
   18b28:	blt	18b48 <__assert_fail@plt+0x7738>
   18b2c:	b	18b5c <__assert_fail@plt+0x774c>
   18b30:	ldr	r0, [fp, #8]
   18b34:	mvn	r1, #0
   18b38:	udiv	r0, r1, r0
   18b3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b40:	cmp	r0, r1
   18b44:	bcs	18b5c <__assert_fail@plt+0x774c>
   18b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b4c:	ldr	r1, [fp, #8]
   18b50:	mul	r0, r0, r1
   18b54:	str	r0, [fp, #-28]	; 0xffffffe4
   18b58:	b	19400 <__assert_fail@plt+0x7ff0>
   18b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b60:	ldr	r1, [fp, #8]
   18b64:	mul	r0, r0, r1
   18b68:	str	r0, [fp, #-28]	; 0xffffffe4
   18b6c:	b	19404 <__assert_fail@plt+0x7ff4>
   18b70:	b	18b74 <__assert_fail@plt+0x7764>
   18b74:	b	18b78 <__assert_fail@plt+0x7768>
   18b78:	ldr	r0, [fp, #8]
   18b7c:	cmp	r0, #0
   18b80:	bge	18c84 <__assert_fail@plt+0x7874>
   18b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b88:	cmp	r0, #0
   18b8c:	bge	18c18 <__assert_fail@plt+0x7808>
   18b90:	b	18b94 <__assert_fail@plt+0x7784>
   18b94:	ldr	r0, [pc, #2192]	; 1942c <__assert_fail@plt+0x801c>
   18b98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b9c:	ldr	r2, [fp, #8]
   18ba0:	sdiv	r0, r0, r2
   18ba4:	cmp	r1, r0
   18ba8:	blt	18d14 <__assert_fail@plt+0x7904>
   18bac:	b	18d28 <__assert_fail@plt+0x7918>
   18bb0:	b	18bb4 <__assert_fail@plt+0x77a4>
   18bb4:	ldr	r0, [pc, #2164]	; 19430 <__assert_fail@plt+0x8020>
   18bb8:	ldr	r1, [fp, #8]
   18bbc:	cmp	r1, r0
   18bc0:	blt	18bd8 <__assert_fail@plt+0x77c8>
   18bc4:	b	18be4 <__assert_fail@plt+0x77d4>
   18bc8:	ldr	r0, [fp, #8]
   18bcc:	movw	r1, #0
   18bd0:	cmp	r1, r0
   18bd4:	bge	18be4 <__assert_fail@plt+0x77d4>
   18bd8:	movw	r0, #0
   18bdc:	str	r0, [sp, #140]	; 0x8c
   18be0:	b	18bfc <__assert_fail@plt+0x77ec>
   18be4:	ldr	r0, [pc, #2112]	; 1942c <__assert_fail@plt+0x801c>
   18be8:	ldr	r1, [fp, #8]
   18bec:	movw	r2, #0
   18bf0:	sub	r1, r2, r1
   18bf4:	sdiv	r0, r0, r1
   18bf8:	str	r0, [sp, #140]	; 0x8c
   18bfc:	ldr	r0, [sp, #140]	; 0x8c
   18c00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c04:	mvn	r2, #0
   18c08:	sub	r1, r2, r1
   18c0c:	cmp	r0, r1
   18c10:	ble	18d14 <__assert_fail@plt+0x7904>
   18c14:	b	18d28 <__assert_fail@plt+0x7918>
   18c18:	ldr	r0, [fp, #8]
   18c1c:	cmn	r0, #1
   18c20:	bne	18c68 <__assert_fail@plt+0x7858>
   18c24:	b	18c28 <__assert_fail@plt+0x7818>
   18c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c2c:	add	r0, r0, #-2147483648	; 0x80000000
   18c30:	movw	r1, #0
   18c34:	cmp	r1, r0
   18c38:	blt	18d14 <__assert_fail@plt+0x7904>
   18c3c:	b	18d28 <__assert_fail@plt+0x7918>
   18c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c44:	movw	r1, #0
   18c48:	cmp	r1, r0
   18c4c:	bge	18d28 <__assert_fail@plt+0x7918>
   18c50:	ldr	r0, [pc, #2004]	; 1942c <__assert_fail@plt+0x801c>
   18c54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c58:	sub	r1, r1, #1
   18c5c:	cmp	r0, r1
   18c60:	blt	18d14 <__assert_fail@plt+0x7904>
   18c64:	b	18d28 <__assert_fail@plt+0x7918>
   18c68:	ldr	r0, [pc, #1988]	; 19434 <__assert_fail@plt+0x8024>
   18c6c:	ldr	r1, [fp, #8]
   18c70:	sdiv	r0, r0, r1
   18c74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c78:	cmp	r0, r1
   18c7c:	blt	18d14 <__assert_fail@plt+0x7904>
   18c80:	b	18d28 <__assert_fail@plt+0x7918>
   18c84:	ldr	r0, [fp, #8]
   18c88:	cmp	r0, #0
   18c8c:	bne	18c94 <__assert_fail@plt+0x7884>
   18c90:	b	18d28 <__assert_fail@plt+0x7918>
   18c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c98:	cmp	r0, #0
   18c9c:	bge	18cfc <__assert_fail@plt+0x78ec>
   18ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ca4:	cmn	r0, #1
   18ca8:	bne	18ce0 <__assert_fail@plt+0x78d0>
   18cac:	b	18cb0 <__assert_fail@plt+0x78a0>
   18cb0:	ldr	r0, [fp, #8]
   18cb4:	add	r0, r0, #-2147483648	; 0x80000000
   18cb8:	movw	r1, #0
   18cbc:	cmp	r1, r0
   18cc0:	blt	18d14 <__assert_fail@plt+0x7904>
   18cc4:	b	18d28 <__assert_fail@plt+0x7918>
   18cc8:	ldr	r0, [pc, #1884]	; 1942c <__assert_fail@plt+0x801c>
   18ccc:	ldr	r1, [fp, #8]
   18cd0:	sub	r1, r1, #1
   18cd4:	cmp	r0, r1
   18cd8:	blt	18d14 <__assert_fail@plt+0x7904>
   18cdc:	b	18d28 <__assert_fail@plt+0x7918>
   18ce0:	ldr	r0, [pc, #1868]	; 19434 <__assert_fail@plt+0x8024>
   18ce4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ce8:	sdiv	r0, r0, r1
   18cec:	ldr	r1, [fp, #8]
   18cf0:	cmp	r0, r1
   18cf4:	blt	18d14 <__assert_fail@plt+0x7904>
   18cf8:	b	18d28 <__assert_fail@plt+0x7918>
   18cfc:	ldr	r0, [pc, #1832]	; 1942c <__assert_fail@plt+0x801c>
   18d00:	ldr	r1, [fp, #8]
   18d04:	sdiv	r0, r0, r1
   18d08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d0c:	cmp	r0, r1
   18d10:	bge	18d28 <__assert_fail@plt+0x7918>
   18d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d18:	ldr	r1, [fp, #8]
   18d1c:	mul	r0, r0, r1
   18d20:	str	r0, [fp, #-28]	; 0xffffffe4
   18d24:	b	19400 <__assert_fail@plt+0x7ff0>
   18d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d2c:	ldr	r1, [fp, #8]
   18d30:	mul	r0, r0, r1
   18d34:	str	r0, [fp, #-28]	; 0xffffffe4
   18d38:	b	19404 <__assert_fail@plt+0x7ff4>
   18d3c:	ldr	r0, [fp, #8]
   18d40:	cmp	r0, #0
   18d44:	bge	18e54 <__assert_fail@plt+0x7a44>
   18d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d4c:	cmp	r0, #0
   18d50:	bge	18ddc <__assert_fail@plt+0x79cc>
   18d54:	b	18d74 <__assert_fail@plt+0x7964>
   18d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d5c:	ldr	r1, [fp, #8]
   18d60:	mvn	r2, #0
   18d64:	udiv	r1, r2, r1
   18d68:	cmp	r0, r1
   18d6c:	bcc	18ef0 <__assert_fail@plt+0x7ae0>
   18d70:	b	18f04 <__assert_fail@plt+0x7af4>
   18d74:	b	18d78 <__assert_fail@plt+0x7968>
   18d78:	ldr	r0, [pc, #1712]	; 19430 <__assert_fail@plt+0x8020>
   18d7c:	ldr	r1, [fp, #8]
   18d80:	cmp	r1, r0
   18d84:	blt	18d9c <__assert_fail@plt+0x798c>
   18d88:	b	18da8 <__assert_fail@plt+0x7998>
   18d8c:	ldr	r0, [fp, #8]
   18d90:	movw	r1, #0
   18d94:	cmp	r1, r0
   18d98:	bge	18da8 <__assert_fail@plt+0x7998>
   18d9c:	movw	r0, #1
   18da0:	str	r0, [sp, #136]	; 0x88
   18da4:	b	18dc0 <__assert_fail@plt+0x79b0>
   18da8:	ldr	r0, [fp, #8]
   18dac:	movw	r1, #0
   18db0:	sub	r0, r1, r0
   18db4:	mvn	r1, #0
   18db8:	udiv	r0, r1, r0
   18dbc:	str	r0, [sp, #136]	; 0x88
   18dc0:	ldr	r0, [sp, #136]	; 0x88
   18dc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18dc8:	mvn	r2, #0
   18dcc:	sub	r1, r2, r1
   18dd0:	cmp	r0, r1
   18dd4:	bls	18ef0 <__assert_fail@plt+0x7ae0>
   18dd8:	b	18f04 <__assert_fail@plt+0x7af4>
   18ddc:	b	18de0 <__assert_fail@plt+0x79d0>
   18de0:	b	18e38 <__assert_fail@plt+0x7a28>
   18de4:	b	18e38 <__assert_fail@plt+0x7a28>
   18de8:	ldr	r0, [fp, #8]
   18dec:	cmn	r0, #1
   18df0:	bne	18e38 <__assert_fail@plt+0x7a28>
   18df4:	b	18df8 <__assert_fail@plt+0x79e8>
   18df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dfc:	add	r0, r0, #0
   18e00:	movw	r1, #0
   18e04:	cmp	r1, r0
   18e08:	blt	18ef0 <__assert_fail@plt+0x7ae0>
   18e0c:	b	18f04 <__assert_fail@plt+0x7af4>
   18e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e14:	movw	r1, #0
   18e18:	cmp	r1, r0
   18e1c:	bge	18f04 <__assert_fail@plt+0x7af4>
   18e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e24:	sub	r0, r0, #1
   18e28:	mvn	r1, #0
   18e2c:	cmp	r1, r0
   18e30:	blt	18ef0 <__assert_fail@plt+0x7ae0>
   18e34:	b	18f04 <__assert_fail@plt+0x7af4>
   18e38:	ldr	r0, [fp, #8]
   18e3c:	movw	r1, #0
   18e40:	sdiv	r0, r1, r0
   18e44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e48:	cmp	r0, r1
   18e4c:	blt	18ef0 <__assert_fail@plt+0x7ae0>
   18e50:	b	18f04 <__assert_fail@plt+0x7af4>
   18e54:	ldr	r0, [fp, #8]
   18e58:	cmp	r0, #0
   18e5c:	bne	18e64 <__assert_fail@plt+0x7a54>
   18e60:	b	18f04 <__assert_fail@plt+0x7af4>
   18e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e68:	cmp	r0, #0
   18e6c:	bge	18ed8 <__assert_fail@plt+0x7ac8>
   18e70:	b	18e74 <__assert_fail@plt+0x7a64>
   18e74:	b	18ebc <__assert_fail@plt+0x7aac>
   18e78:	b	18ebc <__assert_fail@plt+0x7aac>
   18e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e80:	cmn	r0, #1
   18e84:	bne	18ebc <__assert_fail@plt+0x7aac>
   18e88:	b	18e8c <__assert_fail@plt+0x7a7c>
   18e8c:	ldr	r0, [fp, #8]
   18e90:	add	r0, r0, #0
   18e94:	movw	r1, #0
   18e98:	cmp	r1, r0
   18e9c:	blt	18ef0 <__assert_fail@plt+0x7ae0>
   18ea0:	b	18f04 <__assert_fail@plt+0x7af4>
   18ea4:	ldr	r0, [fp, #8]
   18ea8:	sub	r0, r0, #1
   18eac:	mvn	r1, #0
   18eb0:	cmp	r1, r0
   18eb4:	blt	18ef0 <__assert_fail@plt+0x7ae0>
   18eb8:	b	18f04 <__assert_fail@plt+0x7af4>
   18ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ec0:	movw	r1, #0
   18ec4:	sdiv	r0, r1, r0
   18ec8:	ldr	r1, [fp, #8]
   18ecc:	cmp	r0, r1
   18ed0:	blt	18ef0 <__assert_fail@plt+0x7ae0>
   18ed4:	b	18f04 <__assert_fail@plt+0x7af4>
   18ed8:	ldr	r0, [fp, #8]
   18edc:	mvn	r1, #0
   18ee0:	udiv	r0, r1, r0
   18ee4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ee8:	cmp	r0, r1
   18eec:	bcs	18f04 <__assert_fail@plt+0x7af4>
   18ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef4:	ldr	r1, [fp, #8]
   18ef8:	mul	r0, r0, r1
   18efc:	str	r0, [fp, #-28]	; 0xffffffe4
   18f00:	b	19400 <__assert_fail@plt+0x7ff0>
   18f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f08:	ldr	r1, [fp, #8]
   18f0c:	mul	r0, r0, r1
   18f10:	str	r0, [fp, #-28]	; 0xffffffe4
   18f14:	b	19404 <__assert_fail@plt+0x7ff4>
   18f18:	b	18f1c <__assert_fail@plt+0x7b0c>
   18f1c:	ldr	r0, [fp, #8]
   18f20:	cmp	r0, #0
   18f24:	bge	190ac <__assert_fail@plt+0x7c9c>
   18f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f2c:	cmp	r0, #0
   18f30:	bge	19018 <__assert_fail@plt+0x7c08>
   18f34:	b	18f38 <__assert_fail@plt+0x7b28>
   18f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f3c:	ldr	r1, [fp, #8]
   18f40:	asr	r3, r1, #31
   18f44:	mvn	r2, #0
   18f48:	mvn	ip, #-2147483648	; 0x80000000
   18f4c:	str	r0, [sp, #132]	; 0x84
   18f50:	mov	r0, r2
   18f54:	str	r1, [sp, #128]	; 0x80
   18f58:	mov	r1, ip
   18f5c:	ldr	r2, [sp, #128]	; 0x80
   18f60:	bl	1de30 <__assert_fail@plt+0xca20>
   18f64:	ldr	r2, [sp, #132]	; 0x84
   18f68:	subs	r0, r2, r0
   18f6c:	rscs	r1, r1, r2, asr #31
   18f70:	str	r0, [sp, #124]	; 0x7c
   18f74:	str	r1, [sp, #120]	; 0x78
   18f78:	blt	1918c <__assert_fail@plt+0x7d7c>
   18f7c:	b	191a0 <__assert_fail@plt+0x7d90>
   18f80:	b	18f84 <__assert_fail@plt+0x7b74>
   18f84:	ldr	r0, [pc, #1188]	; 19430 <__assert_fail@plt+0x8020>
   18f88:	ldr	r1, [fp, #8]
   18f8c:	cmp	r1, r0
   18f90:	blt	18fa8 <__assert_fail@plt+0x7b98>
   18f94:	b	18fbc <__assert_fail@plt+0x7bac>
   18f98:	ldr	r0, [fp, #8]
   18f9c:	movw	r1, #0
   18fa0:	cmp	r1, r0
   18fa4:	bge	18fbc <__assert_fail@plt+0x7bac>
   18fa8:	mov	r0, #0
   18fac:	mvn	r1, #0
   18fb0:	str	r1, [sp, #116]	; 0x74
   18fb4:	str	r0, [sp, #112]	; 0x70
   18fb8:	b	18ff0 <__assert_fail@plt+0x7be0>
   18fbc:	ldr	r0, [fp, #8]
   18fc0:	rsb	r0, r0, #0
   18fc4:	asr	r3, r0, #31
   18fc8:	mvn	r1, #0
   18fcc:	mvn	r2, #-2147483648	; 0x80000000
   18fd0:	str	r0, [sp, #108]	; 0x6c
   18fd4:	mov	r0, r1
   18fd8:	mov	r1, r2
   18fdc:	ldr	r2, [sp, #108]	; 0x6c
   18fe0:	bl	1de30 <__assert_fail@plt+0xca20>
   18fe4:	str	r0, [sp, #116]	; 0x74
   18fe8:	str	r1, [sp, #112]	; 0x70
   18fec:	b	18ff0 <__assert_fail@plt+0x7be0>
   18ff0:	ldr	r0, [sp, #112]	; 0x70
   18ff4:	ldr	r1, [sp, #116]	; 0x74
   18ff8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ffc:	mvn	r2, r2
   19000:	subs	r1, r2, r1
   19004:	rscs	r0, r0, r2, asr #31
   19008:	str	r1, [sp, #104]	; 0x68
   1900c:	str	r0, [sp, #100]	; 0x64
   19010:	bge	1918c <__assert_fail@plt+0x7d7c>
   19014:	b	191a0 <__assert_fail@plt+0x7d90>
   19018:	ldr	r0, [fp, #8]
   1901c:	cmn	r0, #1
   19020:	bne	1906c <__assert_fail@plt+0x7c5c>
   19024:	b	19028 <__assert_fail@plt+0x7c18>
   19028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1902c:	mov	r1, #-2147483648	; 0x80000000
   19030:	add	r1, r1, r0, asr #31
   19034:	rsbs	r0, r0, #0
   19038:	rscs	r1, r1, #0
   1903c:	str	r0, [sp, #96]	; 0x60
   19040:	str	r1, [sp, #92]	; 0x5c
   19044:	blt	1918c <__assert_fail@plt+0x7d7c>
   19048:	b	191a0 <__assert_fail@plt+0x7d90>
   1904c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19050:	movw	r1, #0
   19054:	cmp	r1, r0
   19058:	bge	191a0 <__assert_fail@plt+0x7d90>
   1905c:	mov	r0, #0
   19060:	cmp	r0, #0
   19064:	bne	1918c <__assert_fail@plt+0x7d7c>
   19068:	b	191a0 <__assert_fail@plt+0x7d90>
   1906c:	ldr	r0, [fp, #8]
   19070:	asr	r3, r0, #31
   19074:	mov	r1, #0
   19078:	mov	r2, #-2147483648	; 0x80000000
   1907c:	str	r0, [sp, #88]	; 0x58
   19080:	mov	r0, r1
   19084:	mov	r1, r2
   19088:	ldr	r2, [sp, #88]	; 0x58
   1908c:	bl	1de30 <__assert_fail@plt+0xca20>
   19090:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19094:	subs	r0, r0, r2
   19098:	sbcs	r1, r1, r2, asr #31
   1909c:	str	r0, [sp, #84]	; 0x54
   190a0:	str	r1, [sp, #80]	; 0x50
   190a4:	blt	1918c <__assert_fail@plt+0x7d7c>
   190a8:	b	191a0 <__assert_fail@plt+0x7d90>
   190ac:	ldr	r0, [fp, #8]
   190b0:	cmp	r0, #0
   190b4:	bne	190bc <__assert_fail@plt+0x7cac>
   190b8:	b	191a0 <__assert_fail@plt+0x7d90>
   190bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190c0:	cmp	r0, #0
   190c4:	bge	1914c <__assert_fail@plt+0x7d3c>
   190c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190cc:	cmn	r0, #1
   190d0:	bne	1910c <__assert_fail@plt+0x7cfc>
   190d4:	b	190d8 <__assert_fail@plt+0x7cc8>
   190d8:	ldr	r0, [fp, #8]
   190dc:	mov	r1, #-2147483648	; 0x80000000
   190e0:	add	r1, r1, r0, asr #31
   190e4:	rsbs	r0, r0, #0
   190e8:	rscs	r1, r1, #0
   190ec:	str	r0, [sp, #76]	; 0x4c
   190f0:	str	r1, [sp, #72]	; 0x48
   190f4:	blt	1918c <__assert_fail@plt+0x7d7c>
   190f8:	b	191a0 <__assert_fail@plt+0x7d90>
   190fc:	mov	r0, #0
   19100:	cmp	r0, #0
   19104:	bne	1918c <__assert_fail@plt+0x7d7c>
   19108:	b	191a0 <__assert_fail@plt+0x7d90>
   1910c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19110:	asr	r3, r0, #31
   19114:	mov	r1, #0
   19118:	mov	r2, #-2147483648	; 0x80000000
   1911c:	str	r0, [sp, #68]	; 0x44
   19120:	mov	r0, r1
   19124:	mov	r1, r2
   19128:	ldr	r2, [sp, #68]	; 0x44
   1912c:	bl	1de30 <__assert_fail@plt+0xca20>
   19130:	ldr	r2, [fp, #8]
   19134:	subs	r0, r0, r2
   19138:	sbcs	r1, r1, r2, asr #31
   1913c:	str	r0, [sp, #64]	; 0x40
   19140:	str	r1, [sp, #60]	; 0x3c
   19144:	blt	1918c <__assert_fail@plt+0x7d7c>
   19148:	b	191a0 <__assert_fail@plt+0x7d90>
   1914c:	ldr	r0, [fp, #8]
   19150:	asr	r3, r0, #31
   19154:	mvn	r1, #0
   19158:	mvn	r2, #-2147483648	; 0x80000000
   1915c:	str	r0, [sp, #56]	; 0x38
   19160:	mov	r0, r1
   19164:	mov	r1, r2
   19168:	ldr	r2, [sp, #56]	; 0x38
   1916c:	bl	1de30 <__assert_fail@plt+0xca20>
   19170:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19174:	subs	r0, r0, r2
   19178:	sbcs	r1, r1, r2, asr #31
   1917c:	str	r0, [sp, #52]	; 0x34
   19180:	str	r1, [sp, #48]	; 0x30
   19184:	bge	191a0 <__assert_fail@plt+0x7d90>
   19188:	b	1918c <__assert_fail@plt+0x7d7c>
   1918c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19190:	ldr	r1, [fp, #8]
   19194:	mul	r0, r0, r1
   19198:	str	r0, [fp, #-28]	; 0xffffffe4
   1919c:	b	19400 <__assert_fail@plt+0x7ff0>
   191a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191a4:	ldr	r1, [fp, #8]
   191a8:	mul	r0, r0, r1
   191ac:	str	r0, [fp, #-28]	; 0xffffffe4
   191b0:	b	19404 <__assert_fail@plt+0x7ff4>
   191b4:	ldr	r0, [fp, #8]
   191b8:	cmp	r0, #0
   191bc:	bge	1931c <__assert_fail@plt+0x7f0c>
   191c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191c4:	cmp	r0, #0
   191c8:	bge	192a4 <__assert_fail@plt+0x7e94>
   191cc:	b	19214 <__assert_fail@plt+0x7e04>
   191d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d4:	ldr	r1, [fp, #8]
   191d8:	asr	r3, r1, #31
   191dc:	mvn	r2, #0
   191e0:	str	r0, [sp, #44]	; 0x2c
   191e4:	mov	r0, r2
   191e8:	str	r1, [sp, #40]	; 0x28
   191ec:	mov	r1, r2
   191f0:	ldr	r2, [sp, #40]	; 0x28
   191f4:	bl	1df04 <__assert_fail@plt+0xcaf4>
   191f8:	ldr	r2, [sp, #44]	; 0x2c
   191fc:	subs	r0, r2, r0
   19200:	rscs	r1, r1, r2, asr #31
   19204:	str	r0, [sp, #36]	; 0x24
   19208:	str	r1, [sp, #32]
   1920c:	bcc	193d8 <__assert_fail@plt+0x7fc8>
   19210:	b	193ec <__assert_fail@plt+0x7fdc>
   19214:	b	19218 <__assert_fail@plt+0x7e08>
   19218:	ldr	r0, [pc, #528]	; 19430 <__assert_fail@plt+0x8020>
   1921c:	ldr	r1, [fp, #8]
   19220:	cmp	r1, r0
   19224:	blt	1923c <__assert_fail@plt+0x7e2c>
   19228:	b	19250 <__assert_fail@plt+0x7e40>
   1922c:	ldr	r0, [fp, #8]
   19230:	movw	r1, #0
   19234:	cmp	r1, r0
   19238:	bge	19250 <__assert_fail@plt+0x7e40>
   1923c:	mov	r0, #1
   19240:	mvn	r1, #0
   19244:	str	r1, [sp, #28]
   19248:	str	r0, [sp, #24]
   1924c:	b	1927c <__assert_fail@plt+0x7e6c>
   19250:	ldr	r0, [fp, #8]
   19254:	rsb	r0, r0, #0
   19258:	asr	r3, r0, #31
   1925c:	mvn	r1, #0
   19260:	str	r0, [sp, #20]
   19264:	mov	r0, r1
   19268:	ldr	r2, [sp, #20]
   1926c:	bl	1df04 <__assert_fail@plt+0xcaf4>
   19270:	str	r0, [sp, #28]
   19274:	str	r1, [sp, #24]
   19278:	b	1927c <__assert_fail@plt+0x7e6c>
   1927c:	ldr	r0, [sp, #24]
   19280:	ldr	r1, [sp, #28]
   19284:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19288:	mvn	r2, r2
   1928c:	subs	r1, r2, r1
   19290:	rscs	r0, r0, r2, asr #31
   19294:	str	r1, [sp, #16]
   19298:	str	r0, [sp, #12]
   1929c:	bcs	193d8 <__assert_fail@plt+0x7fc8>
   192a0:	b	193ec <__assert_fail@plt+0x7fdc>
   192a4:	b	192a8 <__assert_fail@plt+0x7e98>
   192a8:	b	19300 <__assert_fail@plt+0x7ef0>
   192ac:	b	19300 <__assert_fail@plt+0x7ef0>
   192b0:	ldr	r0, [fp, #8]
   192b4:	cmn	r0, #1
   192b8:	bne	19300 <__assert_fail@plt+0x7ef0>
   192bc:	b	192c0 <__assert_fail@plt+0x7eb0>
   192c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192c4:	add	r0, r0, #0
   192c8:	movw	r1, #0
   192cc:	cmp	r1, r0
   192d0:	blt	193d8 <__assert_fail@plt+0x7fc8>
   192d4:	b	193ec <__assert_fail@plt+0x7fdc>
   192d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192dc:	movw	r1, #0
   192e0:	cmp	r1, r0
   192e4:	bge	193ec <__assert_fail@plt+0x7fdc>
   192e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192ec:	sub	r0, r0, #1
   192f0:	mvn	r1, #0
   192f4:	cmp	r1, r0
   192f8:	blt	193d8 <__assert_fail@plt+0x7fc8>
   192fc:	b	193ec <__assert_fail@plt+0x7fdc>
   19300:	ldr	r0, [fp, #8]
   19304:	movw	r1, #0
   19308:	sdiv	r0, r1, r0
   1930c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19310:	cmp	r0, r1
   19314:	blt	193d8 <__assert_fail@plt+0x7fc8>
   19318:	b	193ec <__assert_fail@plt+0x7fdc>
   1931c:	ldr	r0, [fp, #8]
   19320:	cmp	r0, #0
   19324:	bne	1932c <__assert_fail@plt+0x7f1c>
   19328:	b	193ec <__assert_fail@plt+0x7fdc>
   1932c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19330:	cmp	r0, #0
   19334:	bge	193a0 <__assert_fail@plt+0x7f90>
   19338:	b	1933c <__assert_fail@plt+0x7f2c>
   1933c:	b	19384 <__assert_fail@plt+0x7f74>
   19340:	b	19384 <__assert_fail@plt+0x7f74>
   19344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19348:	cmn	r0, #1
   1934c:	bne	19384 <__assert_fail@plt+0x7f74>
   19350:	b	19354 <__assert_fail@plt+0x7f44>
   19354:	ldr	r0, [fp, #8]
   19358:	add	r0, r0, #0
   1935c:	movw	r1, #0
   19360:	cmp	r1, r0
   19364:	blt	193d8 <__assert_fail@plt+0x7fc8>
   19368:	b	193ec <__assert_fail@plt+0x7fdc>
   1936c:	ldr	r0, [fp, #8]
   19370:	sub	r0, r0, #1
   19374:	mvn	r1, #0
   19378:	cmp	r1, r0
   1937c:	blt	193d8 <__assert_fail@plt+0x7fc8>
   19380:	b	193ec <__assert_fail@plt+0x7fdc>
   19384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19388:	movw	r1, #0
   1938c:	sdiv	r0, r1, r0
   19390:	ldr	r1, [fp, #8]
   19394:	cmp	r0, r1
   19398:	blt	193d8 <__assert_fail@plt+0x7fc8>
   1939c:	b	193ec <__assert_fail@plt+0x7fdc>
   193a0:	ldr	r0, [fp, #8]
   193a4:	asr	r3, r0, #31
   193a8:	mvn	r1, #0
   193ac:	str	r0, [sp, #8]
   193b0:	mov	r0, r1
   193b4:	ldr	r2, [sp, #8]
   193b8:	bl	1df04 <__assert_fail@plt+0xcaf4>
   193bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   193c0:	subs	r0, r0, r2
   193c4:	sbcs	r1, r1, r2, asr #31
   193c8:	str	r0, [sp, #4]
   193cc:	str	r1, [sp]
   193d0:	bcs	193ec <__assert_fail@plt+0x7fdc>
   193d4:	b	193d8 <__assert_fail@plt+0x7fc8>
   193d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193dc:	ldr	r1, [fp, #8]
   193e0:	mul	r0, r0, r1
   193e4:	str	r0, [fp, #-28]	; 0xffffffe4
   193e8:	b	19400 <__assert_fail@plt+0x7ff0>
   193ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193f0:	ldr	r1, [fp, #8]
   193f4:	mul	r0, r0, r1
   193f8:	str	r0, [fp, #-28]	; 0xffffffe4
   193fc:	b	19404 <__assert_fail@plt+0x7ff4>
   19400:	bl	195dc <__assert_fail@plt+0x81cc>
   19404:	ldr	r0, [fp, #-4]
   19408:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1940c:	bl	16898 <__assert_fail@plt+0x5488>
   19410:	str	r0, [fp, #-4]
   19414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19418:	ldr	r1, [fp, #-8]
   1941c:	str	r0, [r1]
   19420:	ldr	r0, [fp, #-4]
   19424:	mov	sp, fp
   19428:	pop	{fp, pc}
   1942c:	svcvc	0x00ffffff
   19430:	andhi	r0, r0, r1
   19434:	andhi	r0, r0, r0
   19438:			; <UNDEFINED> instruction: 0xffff8000
   1943c:	push	{fp, lr}
   19440:	mov	fp, sp
   19444:	sub	sp, sp, #8
   19448:	str	r0, [sp, #4]
   1944c:	ldr	r0, [sp, #4]
   19450:	movw	r1, #1
   19454:	bl	19460 <__assert_fail@plt+0x8050>
   19458:	mov	sp, fp
   1945c:	pop	{fp, pc}
   19460:	push	{fp, lr}
   19464:	mov	fp, sp
   19468:	sub	sp, sp, #8
   1946c:	str	r0, [sp, #4]
   19470:	str	r1, [sp]
   19474:	ldr	r0, [sp, #4]
   19478:	ldr	r1, [sp]
   1947c:	bl	1b390 <__assert_fail@plt+0x9f80>
   19480:	bl	16824 <__assert_fail@plt+0x5414>
   19484:	mov	sp, fp
   19488:	pop	{fp, pc}
   1948c:	push	{fp, lr}
   19490:	mov	fp, sp
   19494:	sub	sp, sp, #8
   19498:	str	r0, [sp, #4]
   1949c:	ldr	r0, [sp, #4]
   194a0:	movw	r1, #1
   194a4:	bl	194b0 <__assert_fail@plt+0x80a0>
   194a8:	mov	sp, fp
   194ac:	pop	{fp, pc}
   194b0:	push	{fp, lr}
   194b4:	mov	fp, sp
   194b8:	sub	sp, sp, #8
   194bc:	str	r0, [sp, #4]
   194c0:	str	r1, [sp]
   194c4:	ldr	r0, [sp, #4]
   194c8:	ldr	r1, [sp]
   194cc:	bl	1ba34 <__assert_fail@plt+0xa624>
   194d0:	bl	16824 <__assert_fail@plt+0x5414>
   194d4:	mov	sp, fp
   194d8:	pop	{fp, pc}
   194dc:	push	{fp, lr}
   194e0:	mov	fp, sp
   194e4:	sub	sp, sp, #16
   194e8:	str	r0, [fp, #-4]
   194ec:	str	r1, [sp, #8]
   194f0:	ldr	r0, [sp, #8]
   194f4:	bl	16800 <__assert_fail@plt+0x53f0>
   194f8:	ldr	r1, [fp, #-4]
   194fc:	ldr	r2, [sp, #8]
   19500:	str	r0, [sp, #4]
   19504:	bl	111b8 <memcpy@plt>
   19508:	ldr	r0, [sp, #4]
   1950c:	mov	sp, fp
   19510:	pop	{fp, pc}
   19514:	push	{fp, lr}
   19518:	mov	fp, sp
   1951c:	sub	sp, sp, #16
   19520:	str	r0, [fp, #-4]
   19524:	str	r1, [sp, #8]
   19528:	ldr	r0, [sp, #8]
   1952c:	bl	16854 <__assert_fail@plt+0x5444>
   19530:	ldr	r1, [fp, #-4]
   19534:	ldr	r2, [sp, #8]
   19538:	str	r0, [sp, #4]
   1953c:	bl	111b8 <memcpy@plt>
   19540:	ldr	r0, [sp, #4]
   19544:	mov	sp, fp
   19548:	pop	{fp, pc}
   1954c:	push	{fp, lr}
   19550:	mov	fp, sp
   19554:	sub	sp, sp, #16
   19558:	str	r0, [fp, #-4]
   1955c:	str	r1, [sp, #8]
   19560:	ldr	r0, [sp, #8]
   19564:	add	r0, r0, #1
   19568:	bl	16854 <__assert_fail@plt+0x5444>
   1956c:	str	r0, [sp, #4]
   19570:	ldr	r0, [sp, #4]
   19574:	ldr	r1, [sp, #8]
   19578:	add	r0, r0, r1
   1957c:	movw	r1, #0
   19580:	strb	r1, [r0]
   19584:	ldr	r0, [sp, #4]
   19588:	ldr	r1, [fp, #-4]
   1958c:	ldr	r2, [sp, #8]
   19590:	str	r0, [sp]
   19594:	bl	111b8 <memcpy@plt>
   19598:	ldr	r0, [sp]
   1959c:	mov	sp, fp
   195a0:	pop	{fp, pc}
   195a4:	push	{fp, lr}
   195a8:	mov	fp, sp
   195ac:	sub	sp, sp, #8
   195b0:	str	r0, [sp, #4]
   195b4:	ldr	r0, [sp, #4]
   195b8:	ldr	r1, [sp, #4]
   195bc:	str	r0, [sp]
   195c0:	mov	r0, r1
   195c4:	bl	112e4 <strlen@plt>
   195c8:	add	r1, r0, #1
   195cc:	ldr	r0, [sp]
   195d0:	bl	194dc <__assert_fail@plt+0x80cc>
   195d4:	mov	sp, fp
   195d8:	pop	{fp, pc}
   195dc:	push	{fp, lr}
   195e0:	mov	fp, sp
   195e4:	sub	sp, sp, #8
   195e8:	movw	r0, #61728	; 0xf120
   195ec:	movt	r0, #2
   195f0:	ldr	r0, [r0]
   195f4:	movw	r1, #60832	; 0xeda0
   195f8:	movt	r1, #1
   195fc:	str	r0, [sp, #4]
   19600:	mov	r0, r1
   19604:	bl	112cc <gettext@plt>
   19608:	ldr	r1, [sp, #4]
   1960c:	str	r0, [sp]
   19610:	mov	r0, r1
   19614:	movw	r1, #0
   19618:	movw	r2, #59741	; 0xe95d
   1961c:	movt	r2, #1
   19620:	ldr	r3, [sp]
   19624:	bl	11260 <error@plt>
   19628:	bl	113e0 <abort@plt>
   1962c:	push	{fp, lr}
   19630:	mov	fp, sp
   19634:	sub	sp, sp, #16
   19638:	str	r0, [fp, #-4]
   1963c:	str	r1, [sp, #8]
   19640:	str	r2, [sp, #4]
   19644:	ldr	r0, [fp, #-4]
   19648:	ldr	r1, [sp, #8]
   1964c:	ldr	r2, [sp, #4]
   19650:	bl	1bc50 <__assert_fail@plt+0xa840>
   19654:	str	r0, [sp]
   19658:	ldr	r0, [sp]
   1965c:	cmn	r0, #1
   19660:	bne	19678 <__assert_fail@plt+0x8268>
   19664:	bl	11308 <__errno_location@plt>
   19668:	ldr	r0, [r0]
   1966c:	cmp	r0, #12
   19670:	bne	19678 <__assert_fail@plt+0x8268>
   19674:	bl	195dc <__assert_fail@plt+0x81cc>
   19678:	ldr	r0, [sp]
   1967c:	mov	sp, fp
   19680:	pop	{fp, pc}
   19684:	push	{fp, lr}
   19688:	mov	fp, sp
   1968c:	sub	sp, sp, #80	; 0x50
   19690:	ldr	ip, [fp, #8]
   19694:	str	r0, [fp, #-8]
   19698:	str	r1, [fp, #-12]
   1969c:	str	r2, [fp, #-16]
   196a0:	str	r3, [fp, #-20]	; 0xffffffec
   196a4:	movw	r0, #0
   196a8:	str	r0, [fp, #-36]	; 0xffffffdc
   196ac:	ldr	r1, [fp, #-16]
   196b0:	cmp	r0, r1
   196b4:	str	ip, [sp, #20]
   196b8:	bgt	196cc <__assert_fail@plt+0x82bc>
   196bc:	ldr	r0, [fp, #-16]
   196c0:	cmp	r0, #36	; 0x24
   196c4:	bgt	196cc <__assert_fail@plt+0x82bc>
   196c8:	b	196ec <__assert_fail@plt+0x82dc>
   196cc:	movw	r0, #60849	; 0xedb1
   196d0:	movt	r0, #1
   196d4:	movw	r1, #60887	; 0xedd7
   196d8:	movt	r1, #1
   196dc:	movw	r2, #85	; 0x55
   196e0:	movw	r3, #60903	; 0xede7
   196e4:	movt	r3, #1
   196e8:	bl	11410 <__assert_fail@plt>
   196ec:	ldr	r0, [fp, #-12]
   196f0:	movw	r1, #0
   196f4:	cmp	r0, r1
   196f8:	beq	19708 <__assert_fail@plt+0x82f8>
   196fc:	ldr	r0, [fp, #-12]
   19700:	str	r0, [sp, #16]
   19704:	b	19714 <__assert_fail@plt+0x8304>
   19708:	sub	r0, fp, #24
   1970c:	str	r0, [sp, #16]
   19710:	b	19714 <__assert_fail@plt+0x8304>
   19714:	ldr	r0, [sp, #16]
   19718:	str	r0, [fp, #-28]	; 0xffffffe4
   1971c:	bl	11308 <__errno_location@plt>
   19720:	movw	lr, #0
   19724:	str	lr, [r0]
   19728:	ldr	r0, [fp, #-8]
   1972c:	str	r0, [sp, #40]	; 0x28
   19730:	ldr	r0, [sp, #40]	; 0x28
   19734:	ldrb	r0, [r0]
   19738:	strb	r0, [sp, #39]	; 0x27
   1973c:	bl	112b4 <__ctype_b_loc@plt>
   19740:	ldr	r0, [r0]
   19744:	ldrb	lr, [sp, #39]	; 0x27
   19748:	mov	r1, lr
   1974c:	add	r0, r0, lr, lsl #1
   19750:	ldrh	r0, [r0]
   19754:	and	r0, r0, #8192	; 0x2000
   19758:	cmp	r0, #0
   1975c:	str	r1, [sp, #12]
   19760:	beq	1977c <__assert_fail@plt+0x836c>
   19764:	ldr	r0, [sp, #40]	; 0x28
   19768:	add	r1, r0, #1
   1976c:	str	r1, [sp, #40]	; 0x28
   19770:	ldrb	r0, [r0, #1]
   19774:	strb	r0, [sp, #39]	; 0x27
   19778:	b	1973c <__assert_fail@plt+0x832c>
   1977c:	ldrb	r0, [sp, #39]	; 0x27
   19780:	cmp	r0, #45	; 0x2d
   19784:	bne	19794 <__assert_fail@plt+0x8384>
   19788:	movw	r0, #4
   1978c:	str	r0, [fp, #-4]
   19790:	b	19ce4 <__assert_fail@plt+0x88d4>
   19794:	ldr	r0, [fp, #-8]
   19798:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1979c:	ldr	r2, [fp, #-16]
   197a0:	bl	112d8 <strtoul@plt>
   197a4:	str	r0, [fp, #-32]	; 0xffffffe0
   197a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   197ac:	ldr	r0, [r0]
   197b0:	ldr	r1, [fp, #-8]
   197b4:	cmp	r0, r1
   197b8:	bne	1981c <__assert_fail@plt+0x840c>
   197bc:	ldr	r0, [fp, #8]
   197c0:	movw	r1, #0
   197c4:	cmp	r0, r1
   197c8:	beq	1980c <__assert_fail@plt+0x83fc>
   197cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   197d0:	ldr	r0, [r0]
   197d4:	ldrb	r0, [r0]
   197d8:	cmp	r0, #0
   197dc:	beq	1980c <__assert_fail@plt+0x83fc>
   197e0:	ldr	r0, [fp, #8]
   197e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   197e8:	ldr	r1, [r1]
   197ec:	ldrb	r1, [r1]
   197f0:	bl	112f0 <strchr@plt>
   197f4:	movw	r1, #0
   197f8:	cmp	r0, r1
   197fc:	beq	1980c <__assert_fail@plt+0x83fc>
   19800:	movw	r0, #1
   19804:	str	r0, [fp, #-32]	; 0xffffffe0
   19808:	b	19818 <__assert_fail@plt+0x8408>
   1980c:	movw	r0, #4
   19810:	str	r0, [fp, #-4]
   19814:	b	19ce4 <__assert_fail@plt+0x88d4>
   19818:	b	19854 <__assert_fail@plt+0x8444>
   1981c:	bl	11308 <__errno_location@plt>
   19820:	ldr	r0, [r0]
   19824:	cmp	r0, #0
   19828:	beq	19850 <__assert_fail@plt+0x8440>
   1982c:	bl	11308 <__errno_location@plt>
   19830:	ldr	r0, [r0]
   19834:	cmp	r0, #34	; 0x22
   19838:	beq	19848 <__assert_fail@plt+0x8438>
   1983c:	movw	r0, #4
   19840:	str	r0, [fp, #-4]
   19844:	b	19ce4 <__assert_fail@plt+0x88d4>
   19848:	movw	r0, #1
   1984c:	str	r0, [fp, #-36]	; 0xffffffdc
   19850:	b	19854 <__assert_fail@plt+0x8444>
   19854:	ldr	r0, [fp, #8]
   19858:	movw	r1, #0
   1985c:	cmp	r0, r1
   19860:	bne	1987c <__assert_fail@plt+0x846c>
   19864:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19868:	ldr	r1, [fp, #-20]	; 0xffffffec
   1986c:	str	r0, [r1]
   19870:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19874:	str	r0, [fp, #-4]
   19878:	b	19ce4 <__assert_fail@plt+0x88d4>
   1987c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19880:	ldr	r0, [r0]
   19884:	ldrb	r0, [r0]
   19888:	cmp	r0, #0
   1988c:	beq	19cd0 <__assert_fail@plt+0x88c0>
   19890:	movw	r0, #1024	; 0x400
   19894:	str	r0, [sp, #32]
   19898:	movw	r0, #1
   1989c:	str	r0, [sp, #28]
   198a0:	ldr	r0, [fp, #8]
   198a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   198a8:	ldr	r1, [r1]
   198ac:	ldrb	r1, [r1]
   198b0:	bl	112f0 <strchr@plt>
   198b4:	movw	r1, #0
   198b8:	cmp	r0, r1
   198bc:	bne	198dc <__assert_fail@plt+0x84cc>
   198c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   198c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   198c8:	str	r0, [r1]
   198cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   198d0:	orr	r0, r0, #2
   198d4:	str	r0, [fp, #-4]
   198d8:	b	19ce4 <__assert_fail@plt+0x88d4>
   198dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   198e0:	ldr	r0, [r0]
   198e4:	ldrb	r0, [r0]
   198e8:	sub	r0, r0, #69	; 0x45
   198ec:	cmp	r0, #47	; 0x2f
   198f0:	str	r0, [sp, #8]
   198f4:	bhi	19a60 <__assert_fail@plt+0x8650>
   198f8:	add	r0, pc, #8
   198fc:	ldr	r1, [sp, #8]
   19900:	ldr	r0, [r0, r1, lsl #2]
   19904:	mov	pc, r0
   19908:	andeq	r9, r1, r8, asr #19
   1990c:	andeq	r9, r1, r0, ror #20
   19910:	andeq	r9, r1, r8, asr #19
   19914:	andeq	r9, r1, r0, ror #20
   19918:	andeq	r9, r1, r0, ror #20
   1991c:	andeq	r9, r1, r0, ror #20
   19920:	andeq	r9, r1, r8, asr #19
   19924:	andeq	r9, r1, r0, ror #20
   19928:	andeq	r9, r1, r8, asr #19
   1992c:	andeq	r9, r1, r0, ror #20
   19930:	andeq	r9, r1, r0, ror #20
   19934:	andeq	r9, r1, r8, asr #19
   19938:	andeq	r9, r1, r0, ror #20
   1993c:	andeq	r9, r1, r0, ror #20
   19940:	andeq	r9, r1, r0, ror #20
   19944:	andeq	r9, r1, r8, asr #19
   19948:	andeq	r9, r1, r0, ror #20
   1994c:	andeq	r9, r1, r0, ror #20
   19950:	andeq	r9, r1, r0, ror #20
   19954:	andeq	r9, r1, r0, ror #20
   19958:	andeq	r9, r1, r8, asr #19
   1995c:	andeq	r9, r1, r8, asr #19
   19960:	andeq	r9, r1, r0, ror #20
   19964:	andeq	r9, r1, r0, ror #20
   19968:	andeq	r9, r1, r0, ror #20
   1996c:	andeq	r9, r1, r0, ror #20
   19970:	andeq	r9, r1, r0, ror #20
   19974:	andeq	r9, r1, r0, ror #20
   19978:	andeq	r9, r1, r0, ror #20
   1997c:	andeq	r9, r1, r0, ror #20
   19980:	andeq	r9, r1, r0, ror #20
   19984:	andeq	r9, r1, r0, ror #20
   19988:	andeq	r9, r1, r0, ror #20
   1998c:	andeq	r9, r1, r0, ror #20
   19990:	andeq	r9, r1, r8, asr #19
   19994:	andeq	r9, r1, r0, ror #20
   19998:	andeq	r9, r1, r0, ror #20
   1999c:	andeq	r9, r1, r0, ror #20
   199a0:	andeq	r9, r1, r8, asr #19
   199a4:	andeq	r9, r1, r0, ror #20
   199a8:	andeq	r9, r1, r8, asr #19
   199ac:	andeq	r9, r1, r0, ror #20
   199b0:	andeq	r9, r1, r0, ror #20
   199b4:	andeq	r9, r1, r0, ror #20
   199b8:	andeq	r9, r1, r0, ror #20
   199bc:	andeq	r9, r1, r0, ror #20
   199c0:	andeq	r9, r1, r0, ror #20
   199c4:	andeq	r9, r1, r8, asr #19
   199c8:	ldr	r0, [fp, #8]
   199cc:	movw	r1, #48	; 0x30
   199d0:	bl	112f0 <strchr@plt>
   199d4:	movw	r1, #0
   199d8:	cmp	r0, r1
   199dc:	beq	19a5c <__assert_fail@plt+0x864c>
   199e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   199e4:	ldr	r0, [r0]
   199e8:	ldrb	r0, [r0, #1]
   199ec:	mov	r1, r0
   199f0:	cmp	r0, #66	; 0x42
   199f4:	str	r1, [sp, #4]
   199f8:	beq	19a44 <__assert_fail@plt+0x8634>
   199fc:	b	19a00 <__assert_fail@plt+0x85f0>
   19a00:	ldr	r0, [sp, #4]
   19a04:	cmp	r0, #68	; 0x44
   19a08:	beq	19a44 <__assert_fail@plt+0x8634>
   19a0c:	b	19a10 <__assert_fail@plt+0x8600>
   19a10:	ldr	r0, [sp, #4]
   19a14:	cmp	r0, #105	; 0x69
   19a18:	bne	19a58 <__assert_fail@plt+0x8648>
   19a1c:	b	19a20 <__assert_fail@plt+0x8610>
   19a20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19a24:	ldr	r0, [r0]
   19a28:	ldrb	r0, [r0, #2]
   19a2c:	cmp	r0, #66	; 0x42
   19a30:	bne	19a40 <__assert_fail@plt+0x8630>
   19a34:	ldr	r0, [sp, #28]
   19a38:	add	r0, r0, #2
   19a3c:	str	r0, [sp, #28]
   19a40:	b	19a58 <__assert_fail@plt+0x8648>
   19a44:	movw	r0, #1000	; 0x3e8
   19a48:	str	r0, [sp, #32]
   19a4c:	ldr	r0, [sp, #28]
   19a50:	add	r0, r0, #1
   19a54:	str	r0, [sp, #28]
   19a58:	b	19a5c <__assert_fail@plt+0x864c>
   19a5c:	b	19a60 <__assert_fail@plt+0x8650>
   19a60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19a64:	ldr	r0, [r0]
   19a68:	ldrb	r0, [r0]
   19a6c:	sub	r0, r0, #66	; 0x42
   19a70:	cmp	r0, #53	; 0x35
   19a74:	str	r0, [sp]
   19a78:	bhi	19c6c <__assert_fail@plt+0x885c>
   19a7c:	add	r0, pc, #8
   19a80:	ldr	r1, [sp]
   19a84:	ldr	r0, [r0, r1, lsl #2]
   19a88:	mov	pc, r0
   19a8c:	andeq	r9, r1, r8, ror fp
   19a90:	andeq	r9, r1, ip, ror #24
   19a94:	andeq	r9, r1, ip, ror #24
   19a98:	muleq	r1, r8, fp
   19a9c:	andeq	r9, r1, ip, ror #24
   19aa0:			; <UNDEFINED> instruction: 0x00019bb0
   19aa4:	andeq	r9, r1, ip, ror #24
   19aa8:	andeq	r9, r1, ip, ror #24
   19aac:	andeq	r9, r1, ip, ror #24
   19ab0:	andeq	r9, r1, r8, asr #23
   19ab4:	andeq	r9, r1, ip, ror #24
   19ab8:	andeq	r9, r1, r0, ror #23
   19abc:	andeq	r9, r1, ip, ror #24
   19ac0:	andeq	r9, r1, ip, ror #24
   19ac4:	strdeq	r9, [r1], -r8
   19ac8:	andeq	r9, r1, ip, ror #24
   19acc:	andeq	r9, r1, ip, ror #24
   19ad0:	andeq	r9, r1, ip, ror #24
   19ad4:	andeq	r9, r1, r0, lsl ip
   19ad8:	andeq	r9, r1, ip, ror #24
   19adc:	andeq	r9, r1, ip, ror #24
   19ae0:	andeq	r9, r1, ip, ror #24
   19ae4:	andeq	r9, r1, ip, ror #24
   19ae8:	andeq	r9, r1, ip, lsr ip
   19aec:	andeq	r9, r1, r4, asr ip
   19af0:	andeq	r9, r1, ip, ror #24
   19af4:	andeq	r9, r1, ip, ror #24
   19af8:	andeq	r9, r1, ip, ror #24
   19afc:	andeq	r9, r1, ip, ror #24
   19b00:	andeq	r9, r1, ip, ror #24
   19b04:	andeq	r9, r1, ip, ror #24
   19b08:	andeq	r9, r1, ip, ror #24
   19b0c:	andeq	r9, r1, r4, ror #22
   19b10:	andeq	r9, r1, ip, lsl #23
   19b14:	andeq	r9, r1, ip, ror #24
   19b18:	andeq	r9, r1, ip, ror #24
   19b1c:	andeq	r9, r1, ip, ror #24
   19b20:			; <UNDEFINED> instruction: 0x00019bb0
   19b24:	andeq	r9, r1, ip, ror #24
   19b28:	andeq	r9, r1, ip, ror #24
   19b2c:	andeq	r9, r1, ip, ror #24
   19b30:	andeq	r9, r1, r8, asr #23
   19b34:	andeq	r9, r1, ip, ror #24
   19b38:	andeq	r9, r1, r0, ror #23
   19b3c:	andeq	r9, r1, ip, ror #24
   19b40:	andeq	r9, r1, ip, ror #24
   19b44:	andeq	r9, r1, ip, ror #24
   19b48:	andeq	r9, r1, ip, ror #24
   19b4c:	andeq	r9, r1, ip, ror #24
   19b50:	andeq	r9, r1, ip, ror #24
   19b54:	andeq	r9, r1, r0, lsl ip
   19b58:	andeq	r9, r1, ip, ror #24
   19b5c:	andeq	r9, r1, ip, ror #24
   19b60:	andeq	r9, r1, r8, lsr #24
   19b64:	sub	r0, fp, #32
   19b68:	movw	r1, #512	; 0x200
   19b6c:	bl	19cf0 <__assert_fail@plt+0x88e0>
   19b70:	str	r0, [sp, #24]
   19b74:	b	19c88 <__assert_fail@plt+0x8878>
   19b78:	sub	r0, fp, #32
   19b7c:	movw	r1, #1024	; 0x400
   19b80:	bl	19cf0 <__assert_fail@plt+0x88e0>
   19b84:	str	r0, [sp, #24]
   19b88:	b	19c88 <__assert_fail@plt+0x8878>
   19b8c:	movw	r0, #0
   19b90:	str	r0, [sp, #24]
   19b94:	b	19c88 <__assert_fail@plt+0x8878>
   19b98:	ldr	r1, [sp, #32]
   19b9c:	sub	r0, fp, #32
   19ba0:	movw	r2, #6
   19ba4:	bl	1b330 <__assert_fail@plt+0x9f20>
   19ba8:	str	r0, [sp, #24]
   19bac:	b	19c88 <__assert_fail@plt+0x8878>
   19bb0:	ldr	r1, [sp, #32]
   19bb4:	sub	r0, fp, #32
   19bb8:	movw	r2, #3
   19bbc:	bl	1b330 <__assert_fail@plt+0x9f20>
   19bc0:	str	r0, [sp, #24]
   19bc4:	b	19c88 <__assert_fail@plt+0x8878>
   19bc8:	ldr	r1, [sp, #32]
   19bcc:	sub	r0, fp, #32
   19bd0:	movw	r2, #1
   19bd4:	bl	1b330 <__assert_fail@plt+0x9f20>
   19bd8:	str	r0, [sp, #24]
   19bdc:	b	19c88 <__assert_fail@plt+0x8878>
   19be0:	ldr	r1, [sp, #32]
   19be4:	sub	r0, fp, #32
   19be8:	movw	r2, #2
   19bec:	bl	1b330 <__assert_fail@plt+0x9f20>
   19bf0:	str	r0, [sp, #24]
   19bf4:	b	19c88 <__assert_fail@plt+0x8878>
   19bf8:	ldr	r1, [sp, #32]
   19bfc:	sub	r0, fp, #32
   19c00:	movw	r2, #5
   19c04:	bl	1b330 <__assert_fail@plt+0x9f20>
   19c08:	str	r0, [sp, #24]
   19c0c:	b	19c88 <__assert_fail@plt+0x8878>
   19c10:	ldr	r1, [sp, #32]
   19c14:	sub	r0, fp, #32
   19c18:	movw	r2, #4
   19c1c:	bl	1b330 <__assert_fail@plt+0x9f20>
   19c20:	str	r0, [sp, #24]
   19c24:	b	19c88 <__assert_fail@plt+0x8878>
   19c28:	sub	r0, fp, #32
   19c2c:	movw	r1, #2
   19c30:	bl	19cf0 <__assert_fail@plt+0x88e0>
   19c34:	str	r0, [sp, #24]
   19c38:	b	19c88 <__assert_fail@plt+0x8878>
   19c3c:	ldr	r1, [sp, #32]
   19c40:	sub	r0, fp, #32
   19c44:	movw	r2, #8
   19c48:	bl	1b330 <__assert_fail@plt+0x9f20>
   19c4c:	str	r0, [sp, #24]
   19c50:	b	19c88 <__assert_fail@plt+0x8878>
   19c54:	ldr	r1, [sp, #32]
   19c58:	sub	r0, fp, #32
   19c5c:	movw	r2, #7
   19c60:	bl	1b330 <__assert_fail@plt+0x9f20>
   19c64:	str	r0, [sp, #24]
   19c68:	b	19c88 <__assert_fail@plt+0x8878>
   19c6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19c70:	ldr	r1, [fp, #-20]	; 0xffffffec
   19c74:	str	r0, [r1]
   19c78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19c7c:	orr	r0, r0, #2
   19c80:	str	r0, [fp, #-4]
   19c84:	b	19ce4 <__assert_fail@plt+0x88d4>
   19c88:	ldr	r0, [sp, #24]
   19c8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19c90:	orr	r0, r1, r0
   19c94:	str	r0, [fp, #-36]	; 0xffffffdc
   19c98:	ldr	r0, [sp, #28]
   19c9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ca0:	ldr	r2, [r1]
   19ca4:	add	r0, r2, r0
   19ca8:	str	r0, [r1]
   19cac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19cb0:	ldr	r0, [r0]
   19cb4:	ldrsb	r0, [r0]
   19cb8:	cmp	r0, #0
   19cbc:	beq	19ccc <__assert_fail@plt+0x88bc>
   19cc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19cc4:	orr	r0, r0, #2
   19cc8:	str	r0, [fp, #-36]	; 0xffffffdc
   19ccc:	b	19cd0 <__assert_fail@plt+0x88c0>
   19cd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19cd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19cd8:	str	r0, [r1]
   19cdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19ce0:	str	r0, [fp, #-4]
   19ce4:	ldr	r0, [fp, #-4]
   19ce8:	mov	sp, fp
   19cec:	pop	{fp, pc}
   19cf0:	push	{fp, lr}
   19cf4:	mov	fp, sp
   19cf8:	sub	sp, sp, #184	; 0xb8
   19cfc:	str	r0, [fp, #-8]
   19d00:	str	r1, [fp, #-12]
   19d04:	b	1a138 <__assert_fail@plt+0x8d28>
   19d08:	b	19f20 <__assert_fail@plt+0x8b10>
   19d0c:	ldr	r0, [fp, #-12]
   19d10:	cmp	r0, #0
   19d14:	bge	19e44 <__assert_fail@plt+0x8a34>
   19d18:	ldr	r0, [fp, #-8]
   19d1c:	ldr	r0, [r0]
   19d20:	cmp	r0, #0
   19d24:	bcs	19db8 <__assert_fail@plt+0x89a8>
   19d28:	b	19d2c <__assert_fail@plt+0x891c>
   19d2c:	ldr	r0, [fp, #-8]
   19d30:	ldr	r0, [r0]
   19d34:	ldr	r1, [fp, #-12]
   19d38:	movw	r2, #127	; 0x7f
   19d3c:	sdiv	r1, r2, r1
   19d40:	cmp	r0, r1
   19d44:	bcc	19ee8 <__assert_fail@plt+0x8ad8>
   19d48:	b	19f04 <__assert_fail@plt+0x8af4>
   19d4c:	b	19d50 <__assert_fail@plt+0x8940>
   19d50:	ldr	r0, [pc, #4072]	; 1ad40 <__assert_fail@plt+0x9930>
   19d54:	ldr	r1, [fp, #-12]
   19d58:	cmp	r1, r0
   19d5c:	blt	19d74 <__assert_fail@plt+0x8964>
   19d60:	b	19d80 <__assert_fail@plt+0x8970>
   19d64:	ldr	r0, [fp, #-12]
   19d68:	movw	r1, #0
   19d6c:	cmp	r1, r0
   19d70:	bge	19d80 <__assert_fail@plt+0x8970>
   19d74:	movw	r0, #0
   19d78:	str	r0, [fp, #-20]	; 0xffffffec
   19d7c:	b	19d98 <__assert_fail@plt+0x8988>
   19d80:	ldr	r0, [fp, #-12]
   19d84:	movw	r1, #0
   19d88:	sub	r0, r1, r0
   19d8c:	movw	r1, #127	; 0x7f
   19d90:	sdiv	r0, r1, r0
   19d94:	str	r0, [fp, #-20]	; 0xffffffec
   19d98:	ldr	r0, [fp, #-20]	; 0xffffffec
   19d9c:	ldr	r1, [fp, #-8]
   19da0:	ldr	r1, [r1]
   19da4:	mvn	r2, #0
   19da8:	sub	r1, r2, r1
   19dac:	cmp	r0, r1
   19db0:	bls	19ee8 <__assert_fail@plt+0x8ad8>
   19db4:	b	19f04 <__assert_fail@plt+0x8af4>
   19db8:	b	19dbc <__assert_fail@plt+0x89ac>
   19dbc:	b	19e24 <__assert_fail@plt+0x8a14>
   19dc0:	b	19e24 <__assert_fail@plt+0x8a14>
   19dc4:	ldr	r0, [fp, #-12]
   19dc8:	cmn	r0, #1
   19dcc:	bne	19e24 <__assert_fail@plt+0x8a14>
   19dd0:	b	19df4 <__assert_fail@plt+0x89e4>
   19dd4:	ldr	r0, [fp, #-8]
   19dd8:	ldr	r0, [r0]
   19ddc:	mvn	r1, #127	; 0x7f
   19de0:	add	r0, r0, r1
   19de4:	movw	r1, #0
   19de8:	cmp	r1, r0
   19dec:	bcc	19ee8 <__assert_fail@plt+0x8ad8>
   19df0:	b	19f04 <__assert_fail@plt+0x8af4>
   19df4:	ldr	r0, [fp, #-8]
   19df8:	ldr	r0, [r0]
   19dfc:	movw	r1, #0
   19e00:	cmp	r1, r0
   19e04:	bcs	19f04 <__assert_fail@plt+0x8af4>
   19e08:	ldr	r0, [fp, #-8]
   19e0c:	ldr	r0, [r0]
   19e10:	sub	r0, r0, #1
   19e14:	movw	r1, #127	; 0x7f
   19e18:	cmp	r1, r0
   19e1c:	bcc	19ee8 <__assert_fail@plt+0x8ad8>
   19e20:	b	19f04 <__assert_fail@plt+0x8af4>
   19e24:	ldr	r0, [fp, #-12]
   19e28:	mvn	r1, #127	; 0x7f
   19e2c:	sdiv	r0, r1, r0
   19e30:	ldr	r1, [fp, #-8]
   19e34:	ldr	r1, [r1]
   19e38:	cmp	r0, r1
   19e3c:	bcc	19ee8 <__assert_fail@plt+0x8ad8>
   19e40:	b	19f04 <__assert_fail@plt+0x8af4>
   19e44:	ldr	r0, [fp, #-12]
   19e48:	cmp	r0, #0
   19e4c:	bne	19e54 <__assert_fail@plt+0x8a44>
   19e50:	b	19f04 <__assert_fail@plt+0x8af4>
   19e54:	ldr	r0, [fp, #-8]
   19e58:	ldr	r0, [r0]
   19e5c:	cmp	r0, #0
   19e60:	bcs	19ecc <__assert_fail@plt+0x8abc>
   19e64:	ldr	r0, [fp, #-8]
   19e68:	ldr	r0, [r0]
   19e6c:	cmn	r0, #1
   19e70:	bne	19eac <__assert_fail@plt+0x8a9c>
   19e74:	b	19e78 <__assert_fail@plt+0x8a68>
   19e78:	ldr	r0, [fp, #-12]
   19e7c:	mvn	r1, #127	; 0x7f
   19e80:	add	r0, r0, r1
   19e84:	movw	r1, #0
   19e88:	cmp	r1, r0
   19e8c:	blt	19ee8 <__assert_fail@plt+0x8ad8>
   19e90:	b	19f04 <__assert_fail@plt+0x8af4>
   19e94:	ldr	r0, [fp, #-12]
   19e98:	sub	r0, r0, #1
   19e9c:	movw	r1, #127	; 0x7f
   19ea0:	cmp	r1, r0
   19ea4:	blt	19ee8 <__assert_fail@plt+0x8ad8>
   19ea8:	b	19f04 <__assert_fail@plt+0x8af4>
   19eac:	ldr	r0, [fp, #-8]
   19eb0:	ldr	r0, [r0]
   19eb4:	mvn	r1, #127	; 0x7f
   19eb8:	udiv	r0, r1, r0
   19ebc:	ldr	r1, [fp, #-12]
   19ec0:	cmp	r0, r1
   19ec4:	bcc	19ee8 <__assert_fail@plt+0x8ad8>
   19ec8:	b	19f04 <__assert_fail@plt+0x8af4>
   19ecc:	ldr	r0, [fp, #-12]
   19ed0:	movw	r1, #127	; 0x7f
   19ed4:	sdiv	r0, r1, r0
   19ed8:	ldr	r1, [fp, #-8]
   19edc:	ldr	r1, [r1]
   19ee0:	cmp	r0, r1
   19ee4:	bcs	19f04 <__assert_fail@plt+0x8af4>
   19ee8:	ldr	r0, [fp, #-8]
   19eec:	ldr	r0, [r0]
   19ef0:	ldr	r1, [fp, #-12]
   19ef4:	mul	r0, r0, r1
   19ef8:	sxtb	r0, r0
   19efc:	str	r0, [fp, #-16]
   19f00:	b	1b2d0 <__assert_fail@plt+0x9ec0>
   19f04:	ldr	r0, [fp, #-8]
   19f08:	ldr	r0, [r0]
   19f0c:	ldr	r1, [fp, #-12]
   19f10:	mul	r0, r0, r1
   19f14:	sxtb	r0, r0
   19f18:	str	r0, [fp, #-16]
   19f1c:	b	1b304 <__assert_fail@plt+0x9ef4>
   19f20:	ldr	r0, [fp, #-12]
   19f24:	cmp	r0, #0
   19f28:	bge	1a054 <__assert_fail@plt+0x8c44>
   19f2c:	ldr	r0, [fp, #-8]
   19f30:	ldr	r0, [r0]
   19f34:	cmp	r0, #0
   19f38:	bcs	19fcc <__assert_fail@plt+0x8bbc>
   19f3c:	b	19f40 <__assert_fail@plt+0x8b30>
   19f40:	ldr	r0, [fp, #-8]
   19f44:	ldr	r0, [r0]
   19f48:	ldr	r1, [fp, #-12]
   19f4c:	movw	r2, #255	; 0xff
   19f50:	sdiv	r1, r2, r1
   19f54:	cmp	r0, r1
   19f58:	bcc	1a100 <__assert_fail@plt+0x8cf0>
   19f5c:	b	1a11c <__assert_fail@plt+0x8d0c>
   19f60:	b	19f64 <__assert_fail@plt+0x8b54>
   19f64:	ldr	r0, [pc, #3540]	; 1ad40 <__assert_fail@plt+0x9930>
   19f68:	ldr	r1, [fp, #-12]
   19f6c:	cmp	r1, r0
   19f70:	blt	19f88 <__assert_fail@plt+0x8b78>
   19f74:	b	19f94 <__assert_fail@plt+0x8b84>
   19f78:	ldr	r0, [fp, #-12]
   19f7c:	movw	r1, #0
   19f80:	cmp	r1, r0
   19f84:	bge	19f94 <__assert_fail@plt+0x8b84>
   19f88:	movw	r0, #0
   19f8c:	str	r0, [fp, #-24]	; 0xffffffe8
   19f90:	b	19fac <__assert_fail@plt+0x8b9c>
   19f94:	ldr	r0, [fp, #-12]
   19f98:	movw	r1, #0
   19f9c:	sub	r0, r1, r0
   19fa0:	movw	r1, #255	; 0xff
   19fa4:	sdiv	r0, r1, r0
   19fa8:	str	r0, [fp, #-24]	; 0xffffffe8
   19fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fb0:	ldr	r1, [fp, #-8]
   19fb4:	ldr	r1, [r1]
   19fb8:	mvn	r2, #0
   19fbc:	sub	r1, r2, r1
   19fc0:	cmp	r0, r1
   19fc4:	bls	1a100 <__assert_fail@plt+0x8cf0>
   19fc8:	b	1a11c <__assert_fail@plt+0x8d0c>
   19fcc:	b	19fd0 <__assert_fail@plt+0x8bc0>
   19fd0:	b	1a034 <__assert_fail@plt+0x8c24>
   19fd4:	b	1a034 <__assert_fail@plt+0x8c24>
   19fd8:	ldr	r0, [fp, #-12]
   19fdc:	cmn	r0, #1
   19fe0:	bne	1a034 <__assert_fail@plt+0x8c24>
   19fe4:	b	1a004 <__assert_fail@plt+0x8bf4>
   19fe8:	ldr	r0, [fp, #-8]
   19fec:	ldr	r0, [r0]
   19ff0:	add	r0, r0, #0
   19ff4:	movw	r1, #0
   19ff8:	cmp	r1, r0
   19ffc:	bcc	1a100 <__assert_fail@plt+0x8cf0>
   1a000:	b	1a11c <__assert_fail@plt+0x8d0c>
   1a004:	ldr	r0, [fp, #-8]
   1a008:	ldr	r0, [r0]
   1a00c:	movw	r1, #0
   1a010:	cmp	r1, r0
   1a014:	bcs	1a11c <__assert_fail@plt+0x8d0c>
   1a018:	ldr	r0, [fp, #-8]
   1a01c:	ldr	r0, [r0]
   1a020:	sub	r0, r0, #1
   1a024:	mvn	r1, #0
   1a028:	cmp	r1, r0
   1a02c:	bcc	1a100 <__assert_fail@plt+0x8cf0>
   1a030:	b	1a11c <__assert_fail@plt+0x8d0c>
   1a034:	ldr	r0, [fp, #-12]
   1a038:	movw	r1, #0
   1a03c:	sdiv	r0, r1, r0
   1a040:	ldr	r1, [fp, #-8]
   1a044:	ldr	r1, [r1]
   1a048:	cmp	r0, r1
   1a04c:	bcc	1a100 <__assert_fail@plt+0x8cf0>
   1a050:	b	1a11c <__assert_fail@plt+0x8d0c>
   1a054:	ldr	r0, [fp, #-12]
   1a058:	cmp	r0, #0
   1a05c:	bne	1a064 <__assert_fail@plt+0x8c54>
   1a060:	b	1a11c <__assert_fail@plt+0x8d0c>
   1a064:	ldr	r0, [fp, #-8]
   1a068:	ldr	r0, [r0]
   1a06c:	cmp	r0, #0
   1a070:	bcs	1a0e4 <__assert_fail@plt+0x8cd4>
   1a074:	b	1a07c <__assert_fail@plt+0x8c6c>
   1a078:	b	1a080 <__assert_fail@plt+0x8c70>
   1a07c:	b	1a0c4 <__assert_fail@plt+0x8cb4>
   1a080:	ldr	r0, [fp, #-8]
   1a084:	ldr	r0, [r0]
   1a088:	cmn	r0, #1
   1a08c:	bne	1a0c4 <__assert_fail@plt+0x8cb4>
   1a090:	b	1a094 <__assert_fail@plt+0x8c84>
   1a094:	ldr	r0, [fp, #-12]
   1a098:	add	r0, r0, #0
   1a09c:	movw	r1, #0
   1a0a0:	cmp	r1, r0
   1a0a4:	blt	1a100 <__assert_fail@plt+0x8cf0>
   1a0a8:	b	1a11c <__assert_fail@plt+0x8d0c>
   1a0ac:	ldr	r0, [fp, #-12]
   1a0b0:	sub	r0, r0, #1
   1a0b4:	mvn	r1, #0
   1a0b8:	cmp	r1, r0
   1a0bc:	blt	1a100 <__assert_fail@plt+0x8cf0>
   1a0c0:	b	1a11c <__assert_fail@plt+0x8d0c>
   1a0c4:	ldr	r0, [fp, #-8]
   1a0c8:	ldr	r0, [r0]
   1a0cc:	movw	r1, #0
   1a0d0:	udiv	r0, r1, r0
   1a0d4:	ldr	r1, [fp, #-12]
   1a0d8:	cmp	r0, r1
   1a0dc:	bcc	1a100 <__assert_fail@plt+0x8cf0>
   1a0e0:	b	1a11c <__assert_fail@plt+0x8d0c>
   1a0e4:	ldr	r0, [fp, #-12]
   1a0e8:	movw	r1, #255	; 0xff
   1a0ec:	sdiv	r0, r1, r0
   1a0f0:	ldr	r1, [fp, #-8]
   1a0f4:	ldr	r1, [r1]
   1a0f8:	cmp	r0, r1
   1a0fc:	bcs	1a11c <__assert_fail@plt+0x8d0c>
   1a100:	ldr	r0, [fp, #-8]
   1a104:	ldr	r0, [r0]
   1a108:	ldr	r1, [fp, #-12]
   1a10c:	mul	r0, r0, r1
   1a110:	and	r0, r0, #255	; 0xff
   1a114:	str	r0, [fp, #-16]
   1a118:	b	1b2d0 <__assert_fail@plt+0x9ec0>
   1a11c:	ldr	r0, [fp, #-8]
   1a120:	ldr	r0, [r0]
   1a124:	ldr	r1, [fp, #-12]
   1a128:	mul	r0, r0, r1
   1a12c:	and	r0, r0, #255	; 0xff
   1a130:	str	r0, [fp, #-16]
   1a134:	b	1b304 <__assert_fail@plt+0x9ef4>
   1a138:	b	1a56c <__assert_fail@plt+0x915c>
   1a13c:	b	1a354 <__assert_fail@plt+0x8f44>
   1a140:	ldr	r0, [fp, #-12]
   1a144:	cmp	r0, #0
   1a148:	bge	1a278 <__assert_fail@plt+0x8e68>
   1a14c:	ldr	r0, [fp, #-8]
   1a150:	ldr	r0, [r0]
   1a154:	cmp	r0, #0
   1a158:	bcs	1a1ec <__assert_fail@plt+0x8ddc>
   1a15c:	b	1a160 <__assert_fail@plt+0x8d50>
   1a160:	ldr	r0, [fp, #-8]
   1a164:	ldr	r0, [r0]
   1a168:	ldr	r1, [fp, #-12]
   1a16c:	movw	r2, #32767	; 0x7fff
   1a170:	sdiv	r1, r2, r1
   1a174:	cmp	r0, r1
   1a178:	bcc	1a31c <__assert_fail@plt+0x8f0c>
   1a17c:	b	1a338 <__assert_fail@plt+0x8f28>
   1a180:	b	1a184 <__assert_fail@plt+0x8d74>
   1a184:	ldr	r0, [pc, #2996]	; 1ad40 <__assert_fail@plt+0x9930>
   1a188:	ldr	r1, [fp, #-12]
   1a18c:	cmp	r1, r0
   1a190:	blt	1a1a8 <__assert_fail@plt+0x8d98>
   1a194:	b	1a1b4 <__assert_fail@plt+0x8da4>
   1a198:	ldr	r0, [fp, #-12]
   1a19c:	movw	r1, #0
   1a1a0:	cmp	r1, r0
   1a1a4:	bge	1a1b4 <__assert_fail@plt+0x8da4>
   1a1a8:	movw	r0, #0
   1a1ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1a1b0:	b	1a1cc <__assert_fail@plt+0x8dbc>
   1a1b4:	ldr	r0, [fp, #-12]
   1a1b8:	movw	r1, #0
   1a1bc:	sub	r0, r1, r0
   1a1c0:	movw	r1, #32767	; 0x7fff
   1a1c4:	sdiv	r0, r1, r0
   1a1c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a1cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a1d0:	ldr	r1, [fp, #-8]
   1a1d4:	ldr	r1, [r1]
   1a1d8:	mvn	r2, #0
   1a1dc:	sub	r1, r2, r1
   1a1e0:	cmp	r0, r1
   1a1e4:	bls	1a31c <__assert_fail@plt+0x8f0c>
   1a1e8:	b	1a338 <__assert_fail@plt+0x8f28>
   1a1ec:	b	1a1f0 <__assert_fail@plt+0x8de0>
   1a1f0:	b	1a258 <__assert_fail@plt+0x8e48>
   1a1f4:	b	1a258 <__assert_fail@plt+0x8e48>
   1a1f8:	ldr	r0, [fp, #-12]
   1a1fc:	cmn	r0, #1
   1a200:	bne	1a258 <__assert_fail@plt+0x8e48>
   1a204:	b	1a228 <__assert_fail@plt+0x8e18>
   1a208:	ldr	r0, [pc, #4076]	; 1b1fc <__assert_fail@plt+0x9dec>
   1a20c:	ldr	r1, [fp, #-8]
   1a210:	ldr	r1, [r1]
   1a214:	add	r0, r1, r0
   1a218:	movw	r1, #0
   1a21c:	cmp	r1, r0
   1a220:	bcc	1a31c <__assert_fail@plt+0x8f0c>
   1a224:	b	1a338 <__assert_fail@plt+0x8f28>
   1a228:	ldr	r0, [fp, #-8]
   1a22c:	ldr	r0, [r0]
   1a230:	movw	r1, #0
   1a234:	cmp	r1, r0
   1a238:	bcs	1a338 <__assert_fail@plt+0x8f28>
   1a23c:	ldr	r0, [fp, #-8]
   1a240:	ldr	r0, [r0]
   1a244:	sub	r0, r0, #1
   1a248:	movw	r1, #32767	; 0x7fff
   1a24c:	cmp	r1, r0
   1a250:	bcc	1a31c <__assert_fail@plt+0x8f0c>
   1a254:	b	1a338 <__assert_fail@plt+0x8f28>
   1a258:	ldr	r0, [pc, #3996]	; 1b1fc <__assert_fail@plt+0x9dec>
   1a25c:	ldr	r1, [fp, #-12]
   1a260:	sdiv	r0, r0, r1
   1a264:	ldr	r1, [fp, #-8]
   1a268:	ldr	r1, [r1]
   1a26c:	cmp	r0, r1
   1a270:	bcc	1a31c <__assert_fail@plt+0x8f0c>
   1a274:	b	1a338 <__assert_fail@plt+0x8f28>
   1a278:	ldr	r0, [fp, #-12]
   1a27c:	cmp	r0, #0
   1a280:	bne	1a288 <__assert_fail@plt+0x8e78>
   1a284:	b	1a338 <__assert_fail@plt+0x8f28>
   1a288:	ldr	r0, [fp, #-8]
   1a28c:	ldr	r0, [r0]
   1a290:	cmp	r0, #0
   1a294:	bcs	1a300 <__assert_fail@plt+0x8ef0>
   1a298:	ldr	r0, [fp, #-8]
   1a29c:	ldr	r0, [r0]
   1a2a0:	cmn	r0, #1
   1a2a4:	bne	1a2e0 <__assert_fail@plt+0x8ed0>
   1a2a8:	b	1a2ac <__assert_fail@plt+0x8e9c>
   1a2ac:	ldr	r0, [pc, #3912]	; 1b1fc <__assert_fail@plt+0x9dec>
   1a2b0:	ldr	r1, [fp, #-12]
   1a2b4:	add	r0, r1, r0
   1a2b8:	movw	r1, #0
   1a2bc:	cmp	r1, r0
   1a2c0:	blt	1a31c <__assert_fail@plt+0x8f0c>
   1a2c4:	b	1a338 <__assert_fail@plt+0x8f28>
   1a2c8:	ldr	r0, [fp, #-12]
   1a2cc:	sub	r0, r0, #1
   1a2d0:	movw	r1, #32767	; 0x7fff
   1a2d4:	cmp	r1, r0
   1a2d8:	blt	1a31c <__assert_fail@plt+0x8f0c>
   1a2dc:	b	1a338 <__assert_fail@plt+0x8f28>
   1a2e0:	ldr	r0, [pc, #3860]	; 1b1fc <__assert_fail@plt+0x9dec>
   1a2e4:	ldr	r1, [fp, #-8]
   1a2e8:	ldr	r1, [r1]
   1a2ec:	udiv	r0, r0, r1
   1a2f0:	ldr	r1, [fp, #-12]
   1a2f4:	cmp	r0, r1
   1a2f8:	bcc	1a31c <__assert_fail@plt+0x8f0c>
   1a2fc:	b	1a338 <__assert_fail@plt+0x8f28>
   1a300:	ldr	r0, [fp, #-12]
   1a304:	movw	r1, #32767	; 0x7fff
   1a308:	sdiv	r0, r1, r0
   1a30c:	ldr	r1, [fp, #-8]
   1a310:	ldr	r1, [r1]
   1a314:	cmp	r0, r1
   1a318:	bcs	1a338 <__assert_fail@plt+0x8f28>
   1a31c:	ldr	r0, [fp, #-8]
   1a320:	ldr	r0, [r0]
   1a324:	ldr	r1, [fp, #-12]
   1a328:	mul	r0, r0, r1
   1a32c:	sxth	r0, r0
   1a330:	str	r0, [fp, #-16]
   1a334:	b	1b2d0 <__assert_fail@plt+0x9ec0>
   1a338:	ldr	r0, [fp, #-8]
   1a33c:	ldr	r0, [r0]
   1a340:	ldr	r1, [fp, #-12]
   1a344:	mul	r0, r0, r1
   1a348:	sxth	r0, r0
   1a34c:	str	r0, [fp, #-16]
   1a350:	b	1b304 <__assert_fail@plt+0x9ef4>
   1a354:	ldr	r0, [fp, #-12]
   1a358:	cmp	r0, #0
   1a35c:	bge	1a488 <__assert_fail@plt+0x9078>
   1a360:	ldr	r0, [fp, #-8]
   1a364:	ldr	r0, [r0]
   1a368:	cmp	r0, #0
   1a36c:	bcs	1a400 <__assert_fail@plt+0x8ff0>
   1a370:	b	1a374 <__assert_fail@plt+0x8f64>
   1a374:	ldr	r0, [fp, #-8]
   1a378:	ldr	r0, [r0]
   1a37c:	ldr	r1, [fp, #-12]
   1a380:	movw	r2, #65535	; 0xffff
   1a384:	sdiv	r1, r2, r1
   1a388:	cmp	r0, r1
   1a38c:	bcc	1a534 <__assert_fail@plt+0x9124>
   1a390:	b	1a550 <__assert_fail@plt+0x9140>
   1a394:	b	1a398 <__assert_fail@plt+0x8f88>
   1a398:	ldr	r0, [pc, #3972]	; 1b324 <__assert_fail@plt+0x9f14>
   1a39c:	ldr	r1, [fp, #-12]
   1a3a0:	cmp	r1, r0
   1a3a4:	blt	1a3bc <__assert_fail@plt+0x8fac>
   1a3a8:	b	1a3c8 <__assert_fail@plt+0x8fb8>
   1a3ac:	ldr	r0, [fp, #-12]
   1a3b0:	movw	r1, #0
   1a3b4:	cmp	r1, r0
   1a3b8:	bge	1a3c8 <__assert_fail@plt+0x8fb8>
   1a3bc:	movw	r0, #0
   1a3c0:	str	r0, [fp, #-32]	; 0xffffffe0
   1a3c4:	b	1a3e0 <__assert_fail@plt+0x8fd0>
   1a3c8:	ldr	r0, [fp, #-12]
   1a3cc:	movw	r1, #0
   1a3d0:	sub	r0, r1, r0
   1a3d4:	movw	r1, #65535	; 0xffff
   1a3d8:	sdiv	r0, r1, r0
   1a3dc:	str	r0, [fp, #-32]	; 0xffffffe0
   1a3e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a3e4:	ldr	r1, [fp, #-8]
   1a3e8:	ldr	r1, [r1]
   1a3ec:	mvn	r2, #0
   1a3f0:	sub	r1, r2, r1
   1a3f4:	cmp	r0, r1
   1a3f8:	bls	1a534 <__assert_fail@plt+0x9124>
   1a3fc:	b	1a550 <__assert_fail@plt+0x9140>
   1a400:	b	1a404 <__assert_fail@plt+0x8ff4>
   1a404:	b	1a468 <__assert_fail@plt+0x9058>
   1a408:	b	1a468 <__assert_fail@plt+0x9058>
   1a40c:	ldr	r0, [fp, #-12]
   1a410:	cmn	r0, #1
   1a414:	bne	1a468 <__assert_fail@plt+0x9058>
   1a418:	b	1a438 <__assert_fail@plt+0x9028>
   1a41c:	ldr	r0, [fp, #-8]
   1a420:	ldr	r0, [r0]
   1a424:	add	r0, r0, #0
   1a428:	movw	r1, #0
   1a42c:	cmp	r1, r0
   1a430:	bcc	1a534 <__assert_fail@plt+0x9124>
   1a434:	b	1a550 <__assert_fail@plt+0x9140>
   1a438:	ldr	r0, [fp, #-8]
   1a43c:	ldr	r0, [r0]
   1a440:	movw	r1, #0
   1a444:	cmp	r1, r0
   1a448:	bcs	1a550 <__assert_fail@plt+0x9140>
   1a44c:	ldr	r0, [fp, #-8]
   1a450:	ldr	r0, [r0]
   1a454:	sub	r0, r0, #1
   1a458:	mvn	r1, #0
   1a45c:	cmp	r1, r0
   1a460:	bcc	1a534 <__assert_fail@plt+0x9124>
   1a464:	b	1a550 <__assert_fail@plt+0x9140>
   1a468:	ldr	r0, [fp, #-12]
   1a46c:	movw	r1, #0
   1a470:	sdiv	r0, r1, r0
   1a474:	ldr	r1, [fp, #-8]
   1a478:	ldr	r1, [r1]
   1a47c:	cmp	r0, r1
   1a480:	bcc	1a534 <__assert_fail@plt+0x9124>
   1a484:	b	1a550 <__assert_fail@plt+0x9140>
   1a488:	ldr	r0, [fp, #-12]
   1a48c:	cmp	r0, #0
   1a490:	bne	1a498 <__assert_fail@plt+0x9088>
   1a494:	b	1a550 <__assert_fail@plt+0x9140>
   1a498:	ldr	r0, [fp, #-8]
   1a49c:	ldr	r0, [r0]
   1a4a0:	cmp	r0, #0
   1a4a4:	bcs	1a518 <__assert_fail@plt+0x9108>
   1a4a8:	b	1a4b0 <__assert_fail@plt+0x90a0>
   1a4ac:	b	1a4b4 <__assert_fail@plt+0x90a4>
   1a4b0:	b	1a4f8 <__assert_fail@plt+0x90e8>
   1a4b4:	ldr	r0, [fp, #-8]
   1a4b8:	ldr	r0, [r0]
   1a4bc:	cmn	r0, #1
   1a4c0:	bne	1a4f8 <__assert_fail@plt+0x90e8>
   1a4c4:	b	1a4c8 <__assert_fail@plt+0x90b8>
   1a4c8:	ldr	r0, [fp, #-12]
   1a4cc:	add	r0, r0, #0
   1a4d0:	movw	r1, #0
   1a4d4:	cmp	r1, r0
   1a4d8:	blt	1a534 <__assert_fail@plt+0x9124>
   1a4dc:	b	1a550 <__assert_fail@plt+0x9140>
   1a4e0:	ldr	r0, [fp, #-12]
   1a4e4:	sub	r0, r0, #1
   1a4e8:	mvn	r1, #0
   1a4ec:	cmp	r1, r0
   1a4f0:	blt	1a534 <__assert_fail@plt+0x9124>
   1a4f4:	b	1a550 <__assert_fail@plt+0x9140>
   1a4f8:	ldr	r0, [fp, #-8]
   1a4fc:	ldr	r0, [r0]
   1a500:	movw	r1, #0
   1a504:	udiv	r0, r1, r0
   1a508:	ldr	r1, [fp, #-12]
   1a50c:	cmp	r0, r1
   1a510:	bcc	1a534 <__assert_fail@plt+0x9124>
   1a514:	b	1a550 <__assert_fail@plt+0x9140>
   1a518:	ldr	r0, [fp, #-12]
   1a51c:	movw	r1, #65535	; 0xffff
   1a520:	sdiv	r0, r1, r0
   1a524:	ldr	r1, [fp, #-8]
   1a528:	ldr	r1, [r1]
   1a52c:	cmp	r0, r1
   1a530:	bcs	1a550 <__assert_fail@plt+0x9140>
   1a534:	ldr	r0, [fp, #-8]
   1a538:	ldr	r0, [r0]
   1a53c:	ldr	r1, [fp, #-12]
   1a540:	mul	r0, r0, r1
   1a544:	uxth	r0, r0
   1a548:	str	r0, [fp, #-16]
   1a54c:	b	1b2d0 <__assert_fail@plt+0x9ec0>
   1a550:	ldr	r0, [fp, #-8]
   1a554:	ldr	r0, [r0]
   1a558:	ldr	r1, [fp, #-12]
   1a55c:	mul	r0, r0, r1
   1a560:	uxth	r0, r0
   1a564:	str	r0, [fp, #-16]
   1a568:	b	1b304 <__assert_fail@plt+0x9ef4>
   1a56c:	b	1a570 <__assert_fail@plt+0x9160>
   1a570:	b	1a76c <__assert_fail@plt+0x935c>
   1a574:	ldr	r0, [fp, #-12]
   1a578:	cmp	r0, #0
   1a57c:	bge	1a69c <__assert_fail@plt+0x928c>
   1a580:	ldr	r0, [fp, #-8]
   1a584:	ldr	r0, [r0]
   1a588:	cmp	r0, #0
   1a58c:	bcs	1a620 <__assert_fail@plt+0x9210>
   1a590:	b	1a594 <__assert_fail@plt+0x9184>
   1a594:	ldr	r0, [pc, #3468]	; 1b328 <__assert_fail@plt+0x9f18>
   1a598:	ldr	r1, [fp, #-8]
   1a59c:	ldr	r1, [r1]
   1a5a0:	ldr	r2, [fp, #-12]
   1a5a4:	sdiv	r0, r0, r2
   1a5a8:	cmp	r1, r0
   1a5ac:	bcc	1a73c <__assert_fail@plt+0x932c>
   1a5b0:	b	1a754 <__assert_fail@plt+0x9344>
   1a5b4:	b	1a5b8 <__assert_fail@plt+0x91a8>
   1a5b8:	ldr	r0, [pc, #3428]	; 1b324 <__assert_fail@plt+0x9f14>
   1a5bc:	ldr	r1, [fp, #-12]
   1a5c0:	cmp	r1, r0
   1a5c4:	blt	1a5dc <__assert_fail@plt+0x91cc>
   1a5c8:	b	1a5e8 <__assert_fail@plt+0x91d8>
   1a5cc:	ldr	r0, [fp, #-12]
   1a5d0:	movw	r1, #0
   1a5d4:	cmp	r1, r0
   1a5d8:	bge	1a5e8 <__assert_fail@plt+0x91d8>
   1a5dc:	movw	r0, #0
   1a5e0:	str	r0, [fp, #-36]	; 0xffffffdc
   1a5e4:	b	1a600 <__assert_fail@plt+0x91f0>
   1a5e8:	ldr	r0, [pc, #3384]	; 1b328 <__assert_fail@plt+0x9f18>
   1a5ec:	ldr	r1, [fp, #-12]
   1a5f0:	movw	r2, #0
   1a5f4:	sub	r1, r2, r1
   1a5f8:	sdiv	r0, r0, r1
   1a5fc:	str	r0, [fp, #-36]	; 0xffffffdc
   1a600:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a604:	ldr	r1, [fp, #-8]
   1a608:	ldr	r1, [r1]
   1a60c:	mvn	r2, #0
   1a610:	sub	r1, r2, r1
   1a614:	cmp	r0, r1
   1a618:	bls	1a73c <__assert_fail@plt+0x932c>
   1a61c:	b	1a754 <__assert_fail@plt+0x9344>
   1a620:	ldr	r0, [fp, #-12]
   1a624:	cmn	r0, #1
   1a628:	bne	1a67c <__assert_fail@plt+0x926c>
   1a62c:	b	1a64c <__assert_fail@plt+0x923c>
   1a630:	ldr	r0, [fp, #-8]
   1a634:	ldr	r0, [r0]
   1a638:	add	r0, r0, #-2147483648	; 0x80000000
   1a63c:	movw	r1, #0
   1a640:	cmp	r1, r0
   1a644:	bcc	1a73c <__assert_fail@plt+0x932c>
   1a648:	b	1a754 <__assert_fail@plt+0x9344>
   1a64c:	ldr	r0, [fp, #-8]
   1a650:	ldr	r0, [r0]
   1a654:	movw	r1, #0
   1a658:	cmp	r1, r0
   1a65c:	bcs	1a754 <__assert_fail@plt+0x9344>
   1a660:	ldr	r0, [pc, #3264]	; 1b328 <__assert_fail@plt+0x9f18>
   1a664:	ldr	r1, [fp, #-8]
   1a668:	ldr	r1, [r1]
   1a66c:	sub	r1, r1, #1
   1a670:	cmp	r0, r1
   1a674:	bcc	1a73c <__assert_fail@plt+0x932c>
   1a678:	b	1a754 <__assert_fail@plt+0x9344>
   1a67c:	ldr	r0, [pc, #3240]	; 1b32c <__assert_fail@plt+0x9f1c>
   1a680:	ldr	r1, [fp, #-12]
   1a684:	sdiv	r0, r0, r1
   1a688:	ldr	r1, [fp, #-8]
   1a68c:	ldr	r1, [r1]
   1a690:	cmp	r0, r1
   1a694:	bcc	1a73c <__assert_fail@plt+0x932c>
   1a698:	b	1a754 <__assert_fail@plt+0x9344>
   1a69c:	ldr	r0, [fp, #-12]
   1a6a0:	cmp	r0, #0
   1a6a4:	bne	1a6ac <__assert_fail@plt+0x929c>
   1a6a8:	b	1a754 <__assert_fail@plt+0x9344>
   1a6ac:	ldr	r0, [fp, #-8]
   1a6b0:	ldr	r0, [r0]
   1a6b4:	cmp	r0, #0
   1a6b8:	bcs	1a720 <__assert_fail@plt+0x9310>
   1a6bc:	ldr	r0, [fp, #-8]
   1a6c0:	ldr	r0, [r0]
   1a6c4:	cmn	r0, #1
   1a6c8:	bne	1a700 <__assert_fail@plt+0x92f0>
   1a6cc:	b	1a6d0 <__assert_fail@plt+0x92c0>
   1a6d0:	ldr	r0, [fp, #-12]
   1a6d4:	add	r0, r0, #-2147483648	; 0x80000000
   1a6d8:	movw	r1, #0
   1a6dc:	cmp	r1, r0
   1a6e0:	blt	1a73c <__assert_fail@plt+0x932c>
   1a6e4:	b	1a754 <__assert_fail@plt+0x9344>
   1a6e8:	ldr	r0, [pc, #3128]	; 1b328 <__assert_fail@plt+0x9f18>
   1a6ec:	ldr	r1, [fp, #-12]
   1a6f0:	sub	r1, r1, #1
   1a6f4:	cmp	r0, r1
   1a6f8:	blt	1a73c <__assert_fail@plt+0x932c>
   1a6fc:	b	1a754 <__assert_fail@plt+0x9344>
   1a700:	ldr	r0, [pc, #3108]	; 1b32c <__assert_fail@plt+0x9f1c>
   1a704:	ldr	r1, [fp, #-8]
   1a708:	ldr	r1, [r1]
   1a70c:	udiv	r0, r0, r1
   1a710:	ldr	r1, [fp, #-12]
   1a714:	cmp	r0, r1
   1a718:	bcc	1a73c <__assert_fail@plt+0x932c>
   1a71c:	b	1a754 <__assert_fail@plt+0x9344>
   1a720:	ldr	r0, [pc, #3072]	; 1b328 <__assert_fail@plt+0x9f18>
   1a724:	ldr	r1, [fp, #-12]
   1a728:	sdiv	r0, r0, r1
   1a72c:	ldr	r1, [fp, #-8]
   1a730:	ldr	r1, [r1]
   1a734:	cmp	r0, r1
   1a738:	bcs	1a754 <__assert_fail@plt+0x9344>
   1a73c:	ldr	r0, [fp, #-8]
   1a740:	ldr	r0, [r0]
   1a744:	ldr	r1, [fp, #-12]
   1a748:	mul	r0, r0, r1
   1a74c:	str	r0, [fp, #-16]
   1a750:	b	1b2d0 <__assert_fail@plt+0x9ec0>
   1a754:	ldr	r0, [fp, #-8]
   1a758:	ldr	r0, [r0]
   1a75c:	ldr	r1, [fp, #-12]
   1a760:	mul	r0, r0, r1
   1a764:	str	r0, [fp, #-16]
   1a768:	b	1b304 <__assert_fail@plt+0x9ef4>
   1a76c:	ldr	r0, [fp, #-12]
   1a770:	cmp	r0, #0
   1a774:	bge	1a8a0 <__assert_fail@plt+0x9490>
   1a778:	ldr	r0, [fp, #-8]
   1a77c:	ldr	r0, [r0]
   1a780:	cmp	r0, #0
   1a784:	bcs	1a818 <__assert_fail@plt+0x9408>
   1a788:	b	1a7ac <__assert_fail@plt+0x939c>
   1a78c:	ldr	r0, [fp, #-8]
   1a790:	ldr	r0, [r0]
   1a794:	ldr	r1, [fp, #-12]
   1a798:	mvn	r2, #0
   1a79c:	udiv	r1, r2, r1
   1a7a0:	cmp	r0, r1
   1a7a4:	bcc	1a94c <__assert_fail@plt+0x953c>
   1a7a8:	b	1a964 <__assert_fail@plt+0x9554>
   1a7ac:	b	1a7b0 <__assert_fail@plt+0x93a0>
   1a7b0:	ldr	r0, [pc, #2924]	; 1b324 <__assert_fail@plt+0x9f14>
   1a7b4:	ldr	r1, [fp, #-12]
   1a7b8:	cmp	r1, r0
   1a7bc:	blt	1a7d4 <__assert_fail@plt+0x93c4>
   1a7c0:	b	1a7e0 <__assert_fail@plt+0x93d0>
   1a7c4:	ldr	r0, [fp, #-12]
   1a7c8:	movw	r1, #0
   1a7cc:	cmp	r1, r0
   1a7d0:	bge	1a7e0 <__assert_fail@plt+0x93d0>
   1a7d4:	movw	r0, #1
   1a7d8:	str	r0, [fp, #-40]	; 0xffffffd8
   1a7dc:	b	1a7f8 <__assert_fail@plt+0x93e8>
   1a7e0:	ldr	r0, [fp, #-12]
   1a7e4:	movw	r1, #0
   1a7e8:	sub	r0, r1, r0
   1a7ec:	mvn	r1, #0
   1a7f0:	udiv	r0, r1, r0
   1a7f4:	str	r0, [fp, #-40]	; 0xffffffd8
   1a7f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a7fc:	ldr	r1, [fp, #-8]
   1a800:	ldr	r1, [r1]
   1a804:	mvn	r2, #0
   1a808:	sub	r1, r2, r1
   1a80c:	cmp	r0, r1
   1a810:	bls	1a94c <__assert_fail@plt+0x953c>
   1a814:	b	1a964 <__assert_fail@plt+0x9554>
   1a818:	b	1a81c <__assert_fail@plt+0x940c>
   1a81c:	b	1a880 <__assert_fail@plt+0x9470>
   1a820:	b	1a880 <__assert_fail@plt+0x9470>
   1a824:	ldr	r0, [fp, #-12]
   1a828:	cmn	r0, #1
   1a82c:	bne	1a880 <__assert_fail@plt+0x9470>
   1a830:	b	1a850 <__assert_fail@plt+0x9440>
   1a834:	ldr	r0, [fp, #-8]
   1a838:	ldr	r0, [r0]
   1a83c:	add	r0, r0, #0
   1a840:	movw	r1, #0
   1a844:	cmp	r1, r0
   1a848:	bcc	1a94c <__assert_fail@plt+0x953c>
   1a84c:	b	1a964 <__assert_fail@plt+0x9554>
   1a850:	ldr	r0, [fp, #-8]
   1a854:	ldr	r0, [r0]
   1a858:	movw	r1, #0
   1a85c:	cmp	r1, r0
   1a860:	bcs	1a964 <__assert_fail@plt+0x9554>
   1a864:	ldr	r0, [fp, #-8]
   1a868:	ldr	r0, [r0]
   1a86c:	sub	r0, r0, #1
   1a870:	mvn	r1, #0
   1a874:	cmp	r1, r0
   1a878:	bcc	1a94c <__assert_fail@plt+0x953c>
   1a87c:	b	1a964 <__assert_fail@plt+0x9554>
   1a880:	ldr	r0, [fp, #-12]
   1a884:	movw	r1, #0
   1a888:	sdiv	r0, r1, r0
   1a88c:	ldr	r1, [fp, #-8]
   1a890:	ldr	r1, [r1]
   1a894:	cmp	r0, r1
   1a898:	bcc	1a94c <__assert_fail@plt+0x953c>
   1a89c:	b	1a964 <__assert_fail@plt+0x9554>
   1a8a0:	ldr	r0, [fp, #-12]
   1a8a4:	cmp	r0, #0
   1a8a8:	bne	1a8b0 <__assert_fail@plt+0x94a0>
   1a8ac:	b	1a964 <__assert_fail@plt+0x9554>
   1a8b0:	ldr	r0, [fp, #-8]
   1a8b4:	ldr	r0, [r0]
   1a8b8:	cmp	r0, #0
   1a8bc:	bcs	1a930 <__assert_fail@plt+0x9520>
   1a8c0:	b	1a8c8 <__assert_fail@plt+0x94b8>
   1a8c4:	b	1a8cc <__assert_fail@plt+0x94bc>
   1a8c8:	b	1a910 <__assert_fail@plt+0x9500>
   1a8cc:	ldr	r0, [fp, #-8]
   1a8d0:	ldr	r0, [r0]
   1a8d4:	cmn	r0, #1
   1a8d8:	bne	1a910 <__assert_fail@plt+0x9500>
   1a8dc:	b	1a8e0 <__assert_fail@plt+0x94d0>
   1a8e0:	ldr	r0, [fp, #-12]
   1a8e4:	add	r0, r0, #0
   1a8e8:	movw	r1, #0
   1a8ec:	cmp	r1, r0
   1a8f0:	blt	1a94c <__assert_fail@plt+0x953c>
   1a8f4:	b	1a964 <__assert_fail@plt+0x9554>
   1a8f8:	ldr	r0, [fp, #-12]
   1a8fc:	sub	r0, r0, #1
   1a900:	mvn	r1, #0
   1a904:	cmp	r1, r0
   1a908:	blt	1a94c <__assert_fail@plt+0x953c>
   1a90c:	b	1a964 <__assert_fail@plt+0x9554>
   1a910:	ldr	r0, [fp, #-8]
   1a914:	ldr	r0, [r0]
   1a918:	movw	r1, #0
   1a91c:	udiv	r0, r1, r0
   1a920:	ldr	r1, [fp, #-12]
   1a924:	cmp	r0, r1
   1a928:	bcc	1a94c <__assert_fail@plt+0x953c>
   1a92c:	b	1a964 <__assert_fail@plt+0x9554>
   1a930:	ldr	r0, [fp, #-12]
   1a934:	mvn	r1, #0
   1a938:	udiv	r0, r1, r0
   1a93c:	ldr	r1, [fp, #-8]
   1a940:	ldr	r1, [r1]
   1a944:	cmp	r0, r1
   1a948:	bcs	1a964 <__assert_fail@plt+0x9554>
   1a94c:	ldr	r0, [fp, #-8]
   1a950:	ldr	r0, [r0]
   1a954:	ldr	r1, [fp, #-12]
   1a958:	mul	r0, r0, r1
   1a95c:	str	r0, [fp, #-16]
   1a960:	b	1b2d0 <__assert_fail@plt+0x9ec0>
   1a964:	ldr	r0, [fp, #-8]
   1a968:	ldr	r0, [r0]
   1a96c:	ldr	r1, [fp, #-12]
   1a970:	mul	r0, r0, r1
   1a974:	str	r0, [fp, #-16]
   1a978:	b	1b304 <__assert_fail@plt+0x9ef4>
   1a97c:	b	1a980 <__assert_fail@plt+0x9570>
   1a980:	b	1ab7c <__assert_fail@plt+0x976c>
   1a984:	ldr	r0, [fp, #-12]
   1a988:	cmp	r0, #0
   1a98c:	bge	1aaac <__assert_fail@plt+0x969c>
   1a990:	ldr	r0, [fp, #-8]
   1a994:	ldr	r0, [r0]
   1a998:	cmp	r0, #0
   1a99c:	bcs	1aa30 <__assert_fail@plt+0x9620>
   1a9a0:	b	1a9a4 <__assert_fail@plt+0x9594>
   1a9a4:	ldr	r0, [pc, #2428]	; 1b328 <__assert_fail@plt+0x9f18>
   1a9a8:	ldr	r1, [fp, #-8]
   1a9ac:	ldr	r1, [r1]
   1a9b0:	ldr	r2, [fp, #-12]
   1a9b4:	sdiv	r0, r0, r2
   1a9b8:	cmp	r1, r0
   1a9bc:	bcc	1ab4c <__assert_fail@plt+0x973c>
   1a9c0:	b	1ab64 <__assert_fail@plt+0x9754>
   1a9c4:	b	1a9c8 <__assert_fail@plt+0x95b8>
   1a9c8:	ldr	r0, [pc, #2388]	; 1b324 <__assert_fail@plt+0x9f14>
   1a9cc:	ldr	r1, [fp, #-12]
   1a9d0:	cmp	r1, r0
   1a9d4:	blt	1a9ec <__assert_fail@plt+0x95dc>
   1a9d8:	b	1a9f8 <__assert_fail@plt+0x95e8>
   1a9dc:	ldr	r0, [fp, #-12]
   1a9e0:	movw	r1, #0
   1a9e4:	cmp	r1, r0
   1a9e8:	bge	1a9f8 <__assert_fail@plt+0x95e8>
   1a9ec:	movw	r0, #0
   1a9f0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a9f4:	b	1aa10 <__assert_fail@plt+0x9600>
   1a9f8:	ldr	r0, [pc, #2344]	; 1b328 <__assert_fail@plt+0x9f18>
   1a9fc:	ldr	r1, [fp, #-12]
   1aa00:	movw	r2, #0
   1aa04:	sub	r1, r2, r1
   1aa08:	sdiv	r0, r0, r1
   1aa0c:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa14:	ldr	r1, [fp, #-8]
   1aa18:	ldr	r1, [r1]
   1aa1c:	mvn	r2, #0
   1aa20:	sub	r1, r2, r1
   1aa24:	cmp	r0, r1
   1aa28:	bls	1ab4c <__assert_fail@plt+0x973c>
   1aa2c:	b	1ab64 <__assert_fail@plt+0x9754>
   1aa30:	ldr	r0, [fp, #-12]
   1aa34:	cmn	r0, #1
   1aa38:	bne	1aa8c <__assert_fail@plt+0x967c>
   1aa3c:	b	1aa5c <__assert_fail@plt+0x964c>
   1aa40:	ldr	r0, [fp, #-8]
   1aa44:	ldr	r0, [r0]
   1aa48:	add	r0, r0, #-2147483648	; 0x80000000
   1aa4c:	movw	r1, #0
   1aa50:	cmp	r1, r0
   1aa54:	bcc	1ab4c <__assert_fail@plt+0x973c>
   1aa58:	b	1ab64 <__assert_fail@plt+0x9754>
   1aa5c:	ldr	r0, [fp, #-8]
   1aa60:	ldr	r0, [r0]
   1aa64:	movw	r1, #0
   1aa68:	cmp	r1, r0
   1aa6c:	bcs	1ab64 <__assert_fail@plt+0x9754>
   1aa70:	ldr	r0, [pc, #2224]	; 1b328 <__assert_fail@plt+0x9f18>
   1aa74:	ldr	r1, [fp, #-8]
   1aa78:	ldr	r1, [r1]
   1aa7c:	sub	r1, r1, #1
   1aa80:	cmp	r0, r1
   1aa84:	bcc	1ab4c <__assert_fail@plt+0x973c>
   1aa88:	b	1ab64 <__assert_fail@plt+0x9754>
   1aa8c:	ldr	r0, [pc, #2200]	; 1b32c <__assert_fail@plt+0x9f1c>
   1aa90:	ldr	r1, [fp, #-12]
   1aa94:	sdiv	r0, r0, r1
   1aa98:	ldr	r1, [fp, #-8]
   1aa9c:	ldr	r1, [r1]
   1aaa0:	cmp	r0, r1
   1aaa4:	bcc	1ab4c <__assert_fail@plt+0x973c>
   1aaa8:	b	1ab64 <__assert_fail@plt+0x9754>
   1aaac:	ldr	r0, [fp, #-12]
   1aab0:	cmp	r0, #0
   1aab4:	bne	1aabc <__assert_fail@plt+0x96ac>
   1aab8:	b	1ab64 <__assert_fail@plt+0x9754>
   1aabc:	ldr	r0, [fp, #-8]
   1aac0:	ldr	r0, [r0]
   1aac4:	cmp	r0, #0
   1aac8:	bcs	1ab30 <__assert_fail@plt+0x9720>
   1aacc:	ldr	r0, [fp, #-8]
   1aad0:	ldr	r0, [r0]
   1aad4:	cmn	r0, #1
   1aad8:	bne	1ab10 <__assert_fail@plt+0x9700>
   1aadc:	b	1aae0 <__assert_fail@plt+0x96d0>
   1aae0:	ldr	r0, [fp, #-12]
   1aae4:	add	r0, r0, #-2147483648	; 0x80000000
   1aae8:	movw	r1, #0
   1aaec:	cmp	r1, r0
   1aaf0:	blt	1ab4c <__assert_fail@plt+0x973c>
   1aaf4:	b	1ab64 <__assert_fail@plt+0x9754>
   1aaf8:	ldr	r0, [pc, #2088]	; 1b328 <__assert_fail@plt+0x9f18>
   1aafc:	ldr	r1, [fp, #-12]
   1ab00:	sub	r1, r1, #1
   1ab04:	cmp	r0, r1
   1ab08:	blt	1ab4c <__assert_fail@plt+0x973c>
   1ab0c:	b	1ab64 <__assert_fail@plt+0x9754>
   1ab10:	ldr	r0, [pc, #2068]	; 1b32c <__assert_fail@plt+0x9f1c>
   1ab14:	ldr	r1, [fp, #-8]
   1ab18:	ldr	r1, [r1]
   1ab1c:	udiv	r0, r0, r1
   1ab20:	ldr	r1, [fp, #-12]
   1ab24:	cmp	r0, r1
   1ab28:	bcc	1ab4c <__assert_fail@plt+0x973c>
   1ab2c:	b	1ab64 <__assert_fail@plt+0x9754>
   1ab30:	ldr	r0, [pc, #2032]	; 1b328 <__assert_fail@plt+0x9f18>
   1ab34:	ldr	r1, [fp, #-12]
   1ab38:	sdiv	r0, r0, r1
   1ab3c:	ldr	r1, [fp, #-8]
   1ab40:	ldr	r1, [r1]
   1ab44:	cmp	r0, r1
   1ab48:	bcs	1ab64 <__assert_fail@plt+0x9754>
   1ab4c:	ldr	r0, [fp, #-8]
   1ab50:	ldr	r0, [r0]
   1ab54:	ldr	r1, [fp, #-12]
   1ab58:	mul	r0, r0, r1
   1ab5c:	str	r0, [fp, #-16]
   1ab60:	b	1b2d0 <__assert_fail@plt+0x9ec0>
   1ab64:	ldr	r0, [fp, #-8]
   1ab68:	ldr	r0, [r0]
   1ab6c:	ldr	r1, [fp, #-12]
   1ab70:	mul	r0, r0, r1
   1ab74:	str	r0, [fp, #-16]
   1ab78:	b	1b304 <__assert_fail@plt+0x9ef4>
   1ab7c:	ldr	r0, [fp, #-12]
   1ab80:	cmp	r0, #0
   1ab84:	bge	1acb0 <__assert_fail@plt+0x98a0>
   1ab88:	ldr	r0, [fp, #-8]
   1ab8c:	ldr	r0, [r0]
   1ab90:	cmp	r0, #0
   1ab94:	bcs	1ac28 <__assert_fail@plt+0x9818>
   1ab98:	b	1abbc <__assert_fail@plt+0x97ac>
   1ab9c:	ldr	r0, [fp, #-8]
   1aba0:	ldr	r0, [r0]
   1aba4:	ldr	r1, [fp, #-12]
   1aba8:	mvn	r2, #0
   1abac:	udiv	r1, r2, r1
   1abb0:	cmp	r0, r1
   1abb4:	bcc	1ad60 <__assert_fail@plt+0x9950>
   1abb8:	b	1ad78 <__assert_fail@plt+0x9968>
   1abbc:	b	1abc0 <__assert_fail@plt+0x97b0>
   1abc0:	ldr	r0, [pc, #1884]	; 1b324 <__assert_fail@plt+0x9f14>
   1abc4:	ldr	r1, [fp, #-12]
   1abc8:	cmp	r1, r0
   1abcc:	blt	1abe4 <__assert_fail@plt+0x97d4>
   1abd0:	b	1abf0 <__assert_fail@plt+0x97e0>
   1abd4:	ldr	r0, [fp, #-12]
   1abd8:	movw	r1, #0
   1abdc:	cmp	r1, r0
   1abe0:	bge	1abf0 <__assert_fail@plt+0x97e0>
   1abe4:	movw	r0, #1
   1abe8:	str	r0, [fp, #-48]	; 0xffffffd0
   1abec:	b	1ac08 <__assert_fail@plt+0x97f8>
   1abf0:	ldr	r0, [fp, #-12]
   1abf4:	movw	r1, #0
   1abf8:	sub	r0, r1, r0
   1abfc:	mvn	r1, #0
   1ac00:	udiv	r0, r1, r0
   1ac04:	str	r0, [fp, #-48]	; 0xffffffd0
   1ac08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ac0c:	ldr	r1, [fp, #-8]
   1ac10:	ldr	r1, [r1]
   1ac14:	mvn	r2, #0
   1ac18:	sub	r1, r2, r1
   1ac1c:	cmp	r0, r1
   1ac20:	bls	1ad60 <__assert_fail@plt+0x9950>
   1ac24:	b	1ad78 <__assert_fail@plt+0x9968>
   1ac28:	b	1ac2c <__assert_fail@plt+0x981c>
   1ac2c:	b	1ac90 <__assert_fail@plt+0x9880>
   1ac30:	b	1ac90 <__assert_fail@plt+0x9880>
   1ac34:	ldr	r0, [fp, #-12]
   1ac38:	cmn	r0, #1
   1ac3c:	bne	1ac90 <__assert_fail@plt+0x9880>
   1ac40:	b	1ac60 <__assert_fail@plt+0x9850>
   1ac44:	ldr	r0, [fp, #-8]
   1ac48:	ldr	r0, [r0]
   1ac4c:	add	r0, r0, #0
   1ac50:	movw	r1, #0
   1ac54:	cmp	r1, r0
   1ac58:	bcc	1ad60 <__assert_fail@plt+0x9950>
   1ac5c:	b	1ad78 <__assert_fail@plt+0x9968>
   1ac60:	ldr	r0, [fp, #-8]
   1ac64:	ldr	r0, [r0]
   1ac68:	movw	r1, #0
   1ac6c:	cmp	r1, r0
   1ac70:	bcs	1ad78 <__assert_fail@plt+0x9968>
   1ac74:	ldr	r0, [fp, #-8]
   1ac78:	ldr	r0, [r0]
   1ac7c:	sub	r0, r0, #1
   1ac80:	mvn	r1, #0
   1ac84:	cmp	r1, r0
   1ac88:	bcc	1ad60 <__assert_fail@plt+0x9950>
   1ac8c:	b	1ad78 <__assert_fail@plt+0x9968>
   1ac90:	ldr	r0, [fp, #-12]
   1ac94:	movw	r1, #0
   1ac98:	sdiv	r0, r1, r0
   1ac9c:	ldr	r1, [fp, #-8]
   1aca0:	ldr	r1, [r1]
   1aca4:	cmp	r0, r1
   1aca8:	bcc	1ad60 <__assert_fail@plt+0x9950>
   1acac:	b	1ad78 <__assert_fail@plt+0x9968>
   1acb0:	ldr	r0, [fp, #-12]
   1acb4:	cmp	r0, #0
   1acb8:	bne	1acc0 <__assert_fail@plt+0x98b0>
   1acbc:	b	1ad78 <__assert_fail@plt+0x9968>
   1acc0:	ldr	r0, [fp, #-8]
   1acc4:	ldr	r0, [r0]
   1acc8:	cmp	r0, #0
   1accc:	bcs	1ad44 <__assert_fail@plt+0x9934>
   1acd0:	b	1acd8 <__assert_fail@plt+0x98c8>
   1acd4:	b	1acdc <__assert_fail@plt+0x98cc>
   1acd8:	b	1ad20 <__assert_fail@plt+0x9910>
   1acdc:	ldr	r0, [fp, #-8]
   1ace0:	ldr	r0, [r0]
   1ace4:	cmn	r0, #1
   1ace8:	bne	1ad20 <__assert_fail@plt+0x9910>
   1acec:	b	1acf0 <__assert_fail@plt+0x98e0>
   1acf0:	ldr	r0, [fp, #-12]
   1acf4:	add	r0, r0, #0
   1acf8:	movw	r1, #0
   1acfc:	cmp	r1, r0
   1ad00:	blt	1ad60 <__assert_fail@plt+0x9950>
   1ad04:	b	1ad78 <__assert_fail@plt+0x9968>
   1ad08:	ldr	r0, [fp, #-12]
   1ad0c:	sub	r0, r0, #1
   1ad10:	mvn	r1, #0
   1ad14:	cmp	r1, r0
   1ad18:	blt	1ad60 <__assert_fail@plt+0x9950>
   1ad1c:	b	1ad78 <__assert_fail@plt+0x9968>
   1ad20:	ldr	r0, [fp, #-8]
   1ad24:	ldr	r0, [r0]
   1ad28:	movw	r1, #0
   1ad2c:	udiv	r0, r1, r0
   1ad30:	ldr	r1, [fp, #-12]
   1ad34:	cmp	r0, r1
   1ad38:	bcc	1ad60 <__assert_fail@plt+0x9950>
   1ad3c:	b	1ad78 <__assert_fail@plt+0x9968>
   1ad40:	andhi	r0, r0, r1
   1ad44:	ldr	r0, [fp, #-12]
   1ad48:	mvn	r1, #0
   1ad4c:	udiv	r0, r1, r0
   1ad50:	ldr	r1, [fp, #-8]
   1ad54:	ldr	r1, [r1]
   1ad58:	cmp	r0, r1
   1ad5c:	bcs	1ad78 <__assert_fail@plt+0x9968>
   1ad60:	ldr	r0, [fp, #-8]
   1ad64:	ldr	r0, [r0]
   1ad68:	ldr	r1, [fp, #-12]
   1ad6c:	mul	r0, r0, r1
   1ad70:	str	r0, [fp, #-16]
   1ad74:	b	1b2d0 <__assert_fail@plt+0x9ec0>
   1ad78:	ldr	r0, [fp, #-8]
   1ad7c:	ldr	r0, [r0]
   1ad80:	ldr	r1, [fp, #-12]
   1ad84:	mul	r0, r0, r1
   1ad88:	str	r0, [fp, #-16]
   1ad8c:	b	1b304 <__assert_fail@plt+0x9ef4>
   1ad90:	b	1b04c <__assert_fail@plt+0x9c3c>
   1ad94:	ldr	r0, [fp, #-12]
   1ad98:	cmp	r0, #0
   1ad9c:	bge	1af38 <__assert_fail@plt+0x9b28>
   1ada0:	ldr	r0, [fp, #-8]
   1ada4:	ldr	r0, [r0]
   1ada8:	cmp	r0, #0
   1adac:	bcs	1ae9c <__assert_fail@plt+0x9a8c>
   1adb0:	b	1adb4 <__assert_fail@plt+0x99a4>
   1adb4:	ldr	r0, [fp, #-8]
   1adb8:	ldr	r0, [r0]
   1adbc:	ldr	r1, [fp, #-12]
   1adc0:	asr	r3, r1, #31
   1adc4:	mvn	r2, #0
   1adc8:	mvn	ip, #-2147483648	; 0x80000000
   1adcc:	str	r0, [fp, #-52]	; 0xffffffcc
   1add0:	mov	r0, r2
   1add4:	str	r1, [fp, #-56]	; 0xffffffc8
   1add8:	mov	r1, ip
   1addc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ade0:	bl	1de30 <__assert_fail@plt+0xca20>
   1ade4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ade8:	subs	r0, r2, r0
   1adec:	rscs	r1, r1, #0
   1adf0:	str	r0, [fp, #-60]	; 0xffffffc4
   1adf4:	str	r1, [fp, #-64]	; 0xffffffc0
   1adf8:	blt	1b01c <__assert_fail@plt+0x9c0c>
   1adfc:	b	1b034 <__assert_fail@plt+0x9c24>
   1ae00:	b	1ae04 <__assert_fail@plt+0x99f4>
   1ae04:	ldr	r0, [pc, #1304]	; 1b324 <__assert_fail@plt+0x9f14>
   1ae08:	ldr	r1, [fp, #-12]
   1ae0c:	cmp	r1, r0
   1ae10:	blt	1ae28 <__assert_fail@plt+0x9a18>
   1ae14:	b	1ae3c <__assert_fail@plt+0x9a2c>
   1ae18:	ldr	r0, [fp, #-12]
   1ae1c:	movw	r1, #0
   1ae20:	cmp	r1, r0
   1ae24:	bge	1ae3c <__assert_fail@plt+0x9a2c>
   1ae28:	mov	r0, #0
   1ae2c:	mvn	r1, #0
   1ae30:	str	r1, [fp, #-68]	; 0xffffffbc
   1ae34:	str	r0, [fp, #-72]	; 0xffffffb8
   1ae38:	b	1ae70 <__assert_fail@plt+0x9a60>
   1ae3c:	ldr	r0, [fp, #-12]
   1ae40:	rsb	r0, r0, #0
   1ae44:	asr	r3, r0, #31
   1ae48:	mvn	r1, #0
   1ae4c:	mvn	r2, #-2147483648	; 0x80000000
   1ae50:	str	r0, [fp, #-76]	; 0xffffffb4
   1ae54:	mov	r0, r1
   1ae58:	mov	r1, r2
   1ae5c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ae60:	bl	1de30 <__assert_fail@plt+0xca20>
   1ae64:	str	r0, [fp, #-68]	; 0xffffffbc
   1ae68:	str	r1, [fp, #-72]	; 0xffffffb8
   1ae6c:	b	1ae70 <__assert_fail@plt+0x9a60>
   1ae70:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ae74:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1ae78:	ldr	r2, [fp, #-8]
   1ae7c:	ldr	r2, [r2]
   1ae80:	mvn	r2, r2
   1ae84:	subs	r1, r2, r1
   1ae88:	rscs	r0, r0, #0
   1ae8c:	str	r1, [fp, #-80]	; 0xffffffb0
   1ae90:	str	r0, [fp, #-84]	; 0xffffffac
   1ae94:	bge	1b01c <__assert_fail@plt+0x9c0c>
   1ae98:	b	1b034 <__assert_fail@plt+0x9c24>
   1ae9c:	ldr	r0, [fp, #-12]
   1aea0:	cmn	r0, #1
   1aea4:	bne	1aef4 <__assert_fail@plt+0x9ae4>
   1aea8:	b	1aed0 <__assert_fail@plt+0x9ac0>
   1aeac:	ldr	r0, [fp, #-8]
   1aeb0:	ldr	r0, [r0]
   1aeb4:	rsbs	r0, r0, #0
   1aeb8:	mov	r1, #0
   1aebc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1aec0:	str	r0, [fp, #-88]	; 0xffffffa8
   1aec4:	str	r1, [sp, #92]	; 0x5c
   1aec8:	blt	1b01c <__assert_fail@plt+0x9c0c>
   1aecc:	b	1b034 <__assert_fail@plt+0x9c24>
   1aed0:	ldr	r0, [fp, #-8]
   1aed4:	ldr	r0, [r0]
   1aed8:	movw	r1, #0
   1aedc:	cmp	r1, r0
   1aee0:	bcs	1b034 <__assert_fail@plt+0x9c24>
   1aee4:	mov	r0, #0
   1aee8:	cmp	r0, #0
   1aeec:	bne	1b01c <__assert_fail@plt+0x9c0c>
   1aef0:	b	1b034 <__assert_fail@plt+0x9c24>
   1aef4:	ldr	r0, [fp, #-12]
   1aef8:	asr	r3, r0, #31
   1aefc:	mov	r1, #0
   1af00:	mov	r2, #-2147483648	; 0x80000000
   1af04:	str	r0, [sp, #88]	; 0x58
   1af08:	mov	r0, r1
   1af0c:	mov	r1, r2
   1af10:	ldr	r2, [sp, #88]	; 0x58
   1af14:	bl	1de30 <__assert_fail@plt+0xca20>
   1af18:	ldr	r2, [fp, #-8]
   1af1c:	ldr	r2, [r2]
   1af20:	subs	r0, r0, r2
   1af24:	sbcs	r1, r1, #0
   1af28:	str	r0, [sp, #84]	; 0x54
   1af2c:	str	r1, [sp, #80]	; 0x50
   1af30:	blt	1b01c <__assert_fail@plt+0x9c0c>
   1af34:	b	1b034 <__assert_fail@plt+0x9c24>
   1af38:	ldr	r0, [fp, #-12]
   1af3c:	cmp	r0, #0
   1af40:	bne	1af48 <__assert_fail@plt+0x9b38>
   1af44:	b	1b034 <__assert_fail@plt+0x9c24>
   1af48:	ldr	r0, [fp, #-8]
   1af4c:	ldr	r0, [r0]
   1af50:	cmp	r0, #0
   1af54:	bcs	1afd8 <__assert_fail@plt+0x9bc8>
   1af58:	ldr	r0, [fp, #-8]
   1af5c:	ldr	r0, [r0]
   1af60:	cmn	r0, #1
   1af64:	bne	1afa0 <__assert_fail@plt+0x9b90>
   1af68:	b	1af6c <__assert_fail@plt+0x9b5c>
   1af6c:	ldr	r0, [fp, #-12]
   1af70:	mov	r1, #-2147483648	; 0x80000000
   1af74:	add	r1, r1, r0, asr #31
   1af78:	rsbs	r0, r0, #0
   1af7c:	rscs	r1, r1, #0
   1af80:	str	r0, [sp, #76]	; 0x4c
   1af84:	str	r1, [sp, #72]	; 0x48
   1af88:	blt	1b01c <__assert_fail@plt+0x9c0c>
   1af8c:	b	1b034 <__assert_fail@plt+0x9c24>
   1af90:	mov	r0, #0
   1af94:	cmp	r0, #0
   1af98:	bne	1b01c <__assert_fail@plt+0x9c0c>
   1af9c:	b	1b034 <__assert_fail@plt+0x9c24>
   1afa0:	ldr	r0, [fp, #-8]
   1afa4:	ldr	r2, [r0]
   1afa8:	mov	r1, #-2147483648	; 0x80000000
   1afac:	mov	r0, #0
   1afb0:	str	r0, [sp, #68]	; 0x44
   1afb4:	ldr	r3, [sp, #68]	; 0x44
   1afb8:	bl	1de30 <__assert_fail@plt+0xca20>
   1afbc:	ldr	r2, [fp, #-12]
   1afc0:	subs	r0, r0, r2
   1afc4:	sbcs	r1, r1, r2, asr #31
   1afc8:	str	r0, [sp, #64]	; 0x40
   1afcc:	str	r1, [sp, #60]	; 0x3c
   1afd0:	blt	1b01c <__assert_fail@plt+0x9c0c>
   1afd4:	b	1b034 <__assert_fail@plt+0x9c24>
   1afd8:	ldr	r0, [fp, #-12]
   1afdc:	asr	r3, r0, #31
   1afe0:	mvn	r1, #0
   1afe4:	mvn	r2, #-2147483648	; 0x80000000
   1afe8:	str	r0, [sp, #56]	; 0x38
   1afec:	mov	r0, r1
   1aff0:	mov	r1, r2
   1aff4:	ldr	r2, [sp, #56]	; 0x38
   1aff8:	bl	1de30 <__assert_fail@plt+0xca20>
   1affc:	ldr	r2, [fp, #-8]
   1b000:	ldr	r2, [r2]
   1b004:	subs	r0, r0, r2
   1b008:	sbcs	r1, r1, #0
   1b00c:	str	r0, [sp, #52]	; 0x34
   1b010:	str	r1, [sp, #48]	; 0x30
   1b014:	bge	1b034 <__assert_fail@plt+0x9c24>
   1b018:	b	1b01c <__assert_fail@plt+0x9c0c>
   1b01c:	ldr	r0, [fp, #-8]
   1b020:	ldr	r0, [r0]
   1b024:	ldr	r1, [fp, #-12]
   1b028:	mul	r0, r0, r1
   1b02c:	str	r0, [fp, #-16]
   1b030:	b	1b2d0 <__assert_fail@plt+0x9ec0>
   1b034:	ldr	r0, [fp, #-8]
   1b038:	ldr	r0, [r0]
   1b03c:	ldr	r1, [fp, #-12]
   1b040:	mul	r0, r0, r1
   1b044:	str	r0, [fp, #-16]
   1b048:	b	1b304 <__assert_fail@plt+0x9ef4>
   1b04c:	ldr	r0, [fp, #-12]
   1b050:	cmp	r0, #0
   1b054:	bge	1b1d0 <__assert_fail@plt+0x9dc0>
   1b058:	ldr	r0, [fp, #-8]
   1b05c:	ldr	r0, [r0]
   1b060:	cmp	r0, #0
   1b064:	bcs	1b148 <__assert_fail@plt+0x9d38>
   1b068:	b	1b0b4 <__assert_fail@plt+0x9ca4>
   1b06c:	ldr	r0, [fp, #-8]
   1b070:	ldr	r0, [r0]
   1b074:	ldr	r1, [fp, #-12]
   1b078:	asr	r3, r1, #31
   1b07c:	mvn	r2, #0
   1b080:	str	r0, [sp, #44]	; 0x2c
   1b084:	mov	r0, r2
   1b088:	str	r1, [sp, #40]	; 0x28
   1b08c:	mov	r1, r2
   1b090:	ldr	r2, [sp, #40]	; 0x28
   1b094:	bl	1df04 <__assert_fail@plt+0xcaf4>
   1b098:	ldr	r2, [sp, #44]	; 0x2c
   1b09c:	subs	r0, r2, r0
   1b0a0:	rscs	r1, r1, #0
   1b0a4:	str	r0, [sp, #36]	; 0x24
   1b0a8:	str	r1, [sp, #32]
   1b0ac:	bcc	1b2a0 <__assert_fail@plt+0x9e90>
   1b0b0:	b	1b2b8 <__assert_fail@plt+0x9ea8>
   1b0b4:	b	1b0b8 <__assert_fail@plt+0x9ca8>
   1b0b8:	ldr	r0, [pc, #612]	; 1b324 <__assert_fail@plt+0x9f14>
   1b0bc:	ldr	r1, [fp, #-12]
   1b0c0:	cmp	r1, r0
   1b0c4:	blt	1b0dc <__assert_fail@plt+0x9ccc>
   1b0c8:	b	1b0f0 <__assert_fail@plt+0x9ce0>
   1b0cc:	ldr	r0, [fp, #-12]
   1b0d0:	movw	r1, #0
   1b0d4:	cmp	r1, r0
   1b0d8:	bge	1b0f0 <__assert_fail@plt+0x9ce0>
   1b0dc:	mov	r0, #1
   1b0e0:	mvn	r1, #0
   1b0e4:	str	r1, [sp, #28]
   1b0e8:	str	r0, [sp, #24]
   1b0ec:	b	1b11c <__assert_fail@plt+0x9d0c>
   1b0f0:	ldr	r0, [fp, #-12]
   1b0f4:	rsb	r0, r0, #0
   1b0f8:	asr	r3, r0, #31
   1b0fc:	mvn	r1, #0
   1b100:	str	r0, [sp, #20]
   1b104:	mov	r0, r1
   1b108:	ldr	r2, [sp, #20]
   1b10c:	bl	1df04 <__assert_fail@plt+0xcaf4>
   1b110:	str	r0, [sp, #28]
   1b114:	str	r1, [sp, #24]
   1b118:	b	1b11c <__assert_fail@plt+0x9d0c>
   1b11c:	ldr	r0, [sp, #24]
   1b120:	ldr	r1, [sp, #28]
   1b124:	ldr	r2, [fp, #-8]
   1b128:	ldr	r2, [r2]
   1b12c:	mvn	r2, r2
   1b130:	subs	r1, r2, r1
   1b134:	rscs	r0, r0, #0
   1b138:	str	r1, [sp, #16]
   1b13c:	str	r0, [sp, #12]
   1b140:	bcs	1b2a0 <__assert_fail@plt+0x9e90>
   1b144:	b	1b2b8 <__assert_fail@plt+0x9ea8>
   1b148:	b	1b14c <__assert_fail@plt+0x9d3c>
   1b14c:	b	1b1b0 <__assert_fail@plt+0x9da0>
   1b150:	b	1b1b0 <__assert_fail@plt+0x9da0>
   1b154:	ldr	r0, [fp, #-12]
   1b158:	cmn	r0, #1
   1b15c:	bne	1b1b0 <__assert_fail@plt+0x9da0>
   1b160:	b	1b180 <__assert_fail@plt+0x9d70>
   1b164:	ldr	r0, [fp, #-8]
   1b168:	ldr	r0, [r0]
   1b16c:	add	r0, r0, #0
   1b170:	movw	r1, #0
   1b174:	cmp	r1, r0
   1b178:	bcc	1b2a0 <__assert_fail@plt+0x9e90>
   1b17c:	b	1b2b8 <__assert_fail@plt+0x9ea8>
   1b180:	ldr	r0, [fp, #-8]
   1b184:	ldr	r0, [r0]
   1b188:	movw	r1, #0
   1b18c:	cmp	r1, r0
   1b190:	bcs	1b2b8 <__assert_fail@plt+0x9ea8>
   1b194:	ldr	r0, [fp, #-8]
   1b198:	ldr	r0, [r0]
   1b19c:	sub	r0, r0, #1
   1b1a0:	mvn	r1, #0
   1b1a4:	cmp	r1, r0
   1b1a8:	bcc	1b2a0 <__assert_fail@plt+0x9e90>
   1b1ac:	b	1b2b8 <__assert_fail@plt+0x9ea8>
   1b1b0:	ldr	r0, [fp, #-12]
   1b1b4:	movw	r1, #0
   1b1b8:	sdiv	r0, r1, r0
   1b1bc:	ldr	r1, [fp, #-8]
   1b1c0:	ldr	r1, [r1]
   1b1c4:	cmp	r0, r1
   1b1c8:	bcc	1b2a0 <__assert_fail@plt+0x9e90>
   1b1cc:	b	1b2b8 <__assert_fail@plt+0x9ea8>
   1b1d0:	ldr	r0, [fp, #-12]
   1b1d4:	cmp	r0, #0
   1b1d8:	bne	1b1e0 <__assert_fail@plt+0x9dd0>
   1b1dc:	b	1b2b8 <__assert_fail@plt+0x9ea8>
   1b1e0:	ldr	r0, [fp, #-8]
   1b1e4:	ldr	r0, [r0]
   1b1e8:	cmp	r0, #0
   1b1ec:	bcs	1b264 <__assert_fail@plt+0x9e54>
   1b1f0:	b	1b1f8 <__assert_fail@plt+0x9de8>
   1b1f4:	b	1b200 <__assert_fail@plt+0x9df0>
   1b1f8:	b	1b244 <__assert_fail@plt+0x9e34>
   1b1fc:			; <UNDEFINED> instruction: 0xffff8000
   1b200:	ldr	r0, [fp, #-8]
   1b204:	ldr	r0, [r0]
   1b208:	cmn	r0, #1
   1b20c:	bne	1b244 <__assert_fail@plt+0x9e34>
   1b210:	b	1b214 <__assert_fail@plt+0x9e04>
   1b214:	ldr	r0, [fp, #-12]
   1b218:	add	r0, r0, #0
   1b21c:	movw	r1, #0
   1b220:	cmp	r1, r0
   1b224:	blt	1b2a0 <__assert_fail@plt+0x9e90>
   1b228:	b	1b2b8 <__assert_fail@plt+0x9ea8>
   1b22c:	ldr	r0, [fp, #-12]
   1b230:	sub	r0, r0, #1
   1b234:	mvn	r1, #0
   1b238:	cmp	r1, r0
   1b23c:	blt	1b2a0 <__assert_fail@plt+0x9e90>
   1b240:	b	1b2b8 <__assert_fail@plt+0x9ea8>
   1b244:	ldr	r0, [fp, #-8]
   1b248:	ldr	r0, [r0]
   1b24c:	movw	r1, #0
   1b250:	udiv	r0, r1, r0
   1b254:	ldr	r1, [fp, #-12]
   1b258:	cmp	r0, r1
   1b25c:	bcc	1b2a0 <__assert_fail@plt+0x9e90>
   1b260:	b	1b2b8 <__assert_fail@plt+0x9ea8>
   1b264:	ldr	r0, [fp, #-12]
   1b268:	asr	r3, r0, #31
   1b26c:	mvn	r1, #0
   1b270:	str	r0, [sp, #8]
   1b274:	mov	r0, r1
   1b278:	ldr	r2, [sp, #8]
   1b27c:	bl	1df04 <__assert_fail@plt+0xcaf4>
   1b280:	ldr	r2, [fp, #-8]
   1b284:	ldr	r2, [r2]
   1b288:	subs	r0, r0, r2
   1b28c:	sbcs	r1, r1, #0
   1b290:	str	r0, [sp, #4]
   1b294:	str	r1, [sp]
   1b298:	bcs	1b2b8 <__assert_fail@plt+0x9ea8>
   1b29c:	b	1b2a0 <__assert_fail@plt+0x9e90>
   1b2a0:	ldr	r0, [fp, #-8]
   1b2a4:	ldr	r0, [r0]
   1b2a8:	ldr	r1, [fp, #-12]
   1b2ac:	mul	r0, r0, r1
   1b2b0:	str	r0, [fp, #-16]
   1b2b4:	b	1b2d0 <__assert_fail@plt+0x9ec0>
   1b2b8:	ldr	r0, [fp, #-8]
   1b2bc:	ldr	r0, [r0]
   1b2c0:	ldr	r1, [fp, #-12]
   1b2c4:	mul	r0, r0, r1
   1b2c8:	str	r0, [fp, #-16]
   1b2cc:	b	1b304 <__assert_fail@plt+0x9ef4>
   1b2d0:	ldr	r0, [fp, #-8]
   1b2d4:	ldr	r0, [r0]
   1b2d8:	cmp	r0, #0
   1b2dc:	movw	r0, #0
   1b2e0:	movcc	r0, #1
   1b2e4:	tst	r0, #1
   1b2e8:	movw	r0, #0
   1b2ec:	mvneq	r0, #0
   1b2f0:	ldr	r1, [fp, #-8]
   1b2f4:	str	r0, [r1]
   1b2f8:	movw	r0, #1
   1b2fc:	str	r0, [fp, #-4]
   1b300:	b	1b318 <__assert_fail@plt+0x9f08>
   1b304:	ldr	r0, [fp, #-16]
   1b308:	ldr	r1, [fp, #-8]
   1b30c:	str	r0, [r1]
   1b310:	movw	r0, #0
   1b314:	str	r0, [fp, #-4]
   1b318:	ldr	r0, [fp, #-4]
   1b31c:	mov	sp, fp
   1b320:	pop	{fp, pc}
   1b324:	andhi	r0, r0, r1
   1b328:	svcvc	0x00ffffff
   1b32c:	andhi	r0, r0, r0
   1b330:	push	{fp, lr}
   1b334:	mov	fp, sp
   1b338:	sub	sp, sp, #16
   1b33c:	str	r0, [fp, #-4]
   1b340:	str	r1, [sp, #8]
   1b344:	str	r2, [sp, #4]
   1b348:	movw	r0, #0
   1b34c:	str	r0, [sp]
   1b350:	ldr	r0, [sp, #4]
   1b354:	mvn	r1, #0
   1b358:	add	r1, r0, r1
   1b35c:	str	r1, [sp, #4]
   1b360:	cmp	r0, #0
   1b364:	beq	1b384 <__assert_fail@plt+0x9f74>
   1b368:	ldr	r0, [fp, #-4]
   1b36c:	ldr	r1, [sp, #8]
   1b370:	bl	19cf0 <__assert_fail@plt+0x88e0>
   1b374:	ldr	r1, [sp]
   1b378:	orr	r0, r1, r0
   1b37c:	str	r0, [sp]
   1b380:	b	1b350 <__assert_fail@plt+0x9f40>
   1b384:	ldr	r0, [sp]
   1b388:	mov	sp, fp
   1b38c:	pop	{fp, pc}
   1b390:	push	{fp, lr}
   1b394:	mov	fp, sp
   1b398:	sub	sp, sp, #16
   1b39c:	str	r0, [sp, #8]
   1b3a0:	str	r1, [sp, #4]
   1b3a4:	ldr	r0, [sp, #8]
   1b3a8:	cmp	r0, #0
   1b3ac:	beq	1b3bc <__assert_fail@plt+0x9fac>
   1b3b0:	ldr	r0, [sp, #4]
   1b3b4:	cmp	r0, #0
   1b3b8:	bne	1b3c8 <__assert_fail@plt+0x9fb8>
   1b3bc:	movw	r0, #1
   1b3c0:	str	r0, [sp, #4]
   1b3c4:	str	r0, [sp, #8]
   1b3c8:	ldr	r0, [sp, #4]
   1b3cc:	cmp	r0, #0
   1b3d0:	beq	1b404 <__assert_fail@plt+0x9ff4>
   1b3d4:	ldr	r0, [pc, #76]	; 1b428 <__assert_fail@plt+0xa018>
   1b3d8:	ldr	r1, [sp, #4]
   1b3dc:	udiv	r0, r0, r1
   1b3e0:	ldr	r1, [sp, #8]
   1b3e4:	cmp	r0, r1
   1b3e8:	bcs	1b404 <__assert_fail@plt+0x9ff4>
   1b3ec:	bl	11308 <__errno_location@plt>
   1b3f0:	movw	lr, #12
   1b3f4:	str	lr, [r0]
   1b3f8:	movw	r0, #0
   1b3fc:	str	r0, [fp, #-4]
   1b400:	b	1b41c <__assert_fail@plt+0xa00c>
   1b404:	ldr	r0, [sp, #8]
   1b408:	ldr	r1, [sp, #4]
   1b40c:	bl	1111c <calloc@plt>
   1b410:	str	r0, [sp]
   1b414:	ldr	r0, [sp]
   1b418:	str	r0, [fp, #-4]
   1b41c:	ldr	r0, [fp, #-4]
   1b420:	mov	sp, fp
   1b424:	pop	{fp, pc}
   1b428:	svcvc	0x00ffffff
   1b42c:	push	{fp, lr}
   1b430:	mov	fp, sp
   1b434:	sub	sp, sp, #16
   1b438:	str	r0, [sp, #8]
   1b43c:	ldr	r0, [sp, #8]
   1b440:	cmp	r0, #0
   1b444:	bne	1b450 <__assert_fail@plt+0xa040>
   1b448:	movw	r0, #1
   1b44c:	str	r0, [sp, #8]
   1b450:	ldr	r0, [pc, #64]	; 1b498 <__assert_fail@plt+0xa088>
   1b454:	ldr	r1, [sp, #8]
   1b458:	cmp	r0, r1
   1b45c:	bcs	1b478 <__assert_fail@plt+0xa068>
   1b460:	bl	11308 <__errno_location@plt>
   1b464:	movw	lr, #12
   1b468:	str	lr, [r0]
   1b46c:	movw	r0, #0
   1b470:	str	r0, [fp, #-4]
   1b474:	b	1b48c <__assert_fail@plt+0xa07c>
   1b478:	ldr	r0, [sp, #8]
   1b47c:	bl	11278 <malloc@plt>
   1b480:	str	r0, [sp, #4]
   1b484:	ldr	r0, [sp, #4]
   1b488:	str	r0, [fp, #-4]
   1b48c:	ldr	r0, [fp, #-4]
   1b490:	mov	sp, fp
   1b494:	pop	{fp, pc}
   1b498:	svcvc	0x00ffffff
   1b49c:	push	{fp, lr}
   1b4a0:	mov	fp, sp
   1b4a4:	sub	sp, sp, #16
   1b4a8:	str	r0, [sp, #8]
   1b4ac:	str	r1, [sp, #4]
   1b4b0:	ldr	r0, [sp, #8]
   1b4b4:	movw	r1, #0
   1b4b8:	cmp	r0, r1
   1b4bc:	bne	1b4d0 <__assert_fail@plt+0xa0c0>
   1b4c0:	ldr	r0, [sp, #4]
   1b4c4:	bl	1b42c <__assert_fail@plt+0xa01c>
   1b4c8:	str	r0, [fp, #-4]
   1b4cc:	b	1b530 <__assert_fail@plt+0xa120>
   1b4d0:	ldr	r0, [sp, #4]
   1b4d4:	cmp	r0, #0
   1b4d8:	bne	1b4f0 <__assert_fail@plt+0xa0e0>
   1b4dc:	ldr	r0, [sp, #8]
   1b4e0:	bl	1300c <__assert_fail@plt+0x1bfc>
   1b4e4:	movw	r0, #0
   1b4e8:	str	r0, [fp, #-4]
   1b4ec:	b	1b530 <__assert_fail@plt+0xa120>
   1b4f0:	ldr	r0, [pc, #68]	; 1b53c <__assert_fail@plt+0xa12c>
   1b4f4:	ldr	r1, [sp, #4]
   1b4f8:	cmp	r0, r1
   1b4fc:	bcs	1b518 <__assert_fail@plt+0xa108>
   1b500:	bl	11308 <__errno_location@plt>
   1b504:	movw	lr, #12
   1b508:	str	lr, [r0]
   1b50c:	movw	r0, #0
   1b510:	str	r0, [fp, #-4]
   1b514:	b	1b530 <__assert_fail@plt+0xa120>
   1b518:	ldr	r0, [sp, #8]
   1b51c:	ldr	r1, [sp, #4]
   1b520:	bl	111dc <realloc@plt>
   1b524:	str	r0, [sp]
   1b528:	ldr	r0, [sp]
   1b52c:	str	r0, [fp, #-4]
   1b530:	ldr	r0, [fp, #-4]
   1b534:	mov	sp, fp
   1b538:	pop	{fp, pc}
   1b53c:	svcvc	0x00ffffff
   1b540:	push	{fp, lr}
   1b544:	mov	fp, sp
   1b548:	sub	sp, sp, #24
   1b54c:	str	r0, [fp, #-8]
   1b550:	str	r1, [sp, #12]
   1b554:	ldr	r0, [fp, #-8]
   1b558:	str	r0, [sp, #8]
   1b55c:	ldr	r0, [sp, #12]
   1b560:	str	r0, [sp, #4]
   1b564:	ldr	r0, [sp, #8]
   1b568:	ldr	r1, [sp, #4]
   1b56c:	cmp	r0, r1
   1b570:	bne	1b580 <__assert_fail@plt+0xa170>
   1b574:	movw	r0, #0
   1b578:	str	r0, [fp, #-4]
   1b57c:	b	1b5ec <__assert_fail@plt+0xa1dc>
   1b580:	b	1b584 <__assert_fail@plt+0xa174>
   1b584:	ldr	r0, [sp, #8]
   1b588:	ldrb	r0, [r0]
   1b58c:	bl	1d9b0 <__assert_fail@plt+0xc5a0>
   1b590:	strb	r0, [sp, #3]
   1b594:	ldr	r0, [sp, #4]
   1b598:	ldrb	r0, [r0]
   1b59c:	bl	1d9b0 <__assert_fail@plt+0xc5a0>
   1b5a0:	strb	r0, [sp, #2]
   1b5a4:	ldrb	r0, [sp, #3]
   1b5a8:	cmp	r0, #0
   1b5ac:	bne	1b5b4 <__assert_fail@plt+0xa1a4>
   1b5b0:	b	1b5dc <__assert_fail@plt+0xa1cc>
   1b5b4:	ldr	r0, [sp, #8]
   1b5b8:	add	r0, r0, #1
   1b5bc:	str	r0, [sp, #8]
   1b5c0:	ldr	r0, [sp, #4]
   1b5c4:	add	r0, r0, #1
   1b5c8:	str	r0, [sp, #4]
   1b5cc:	ldrb	r0, [sp, #3]
   1b5d0:	ldrb	r1, [sp, #2]
   1b5d4:	cmp	r0, r1
   1b5d8:	beq	1b584 <__assert_fail@plt+0xa174>
   1b5dc:	ldrb	r0, [sp, #3]
   1b5e0:	ldrb	r1, [sp, #2]
   1b5e4:	sub	r0, r0, r1
   1b5e8:	str	r0, [fp, #-4]
   1b5ec:	ldr	r0, [fp, #-4]
   1b5f0:	mov	sp, fp
   1b5f4:	pop	{fp, pc}
   1b5f8:	push	{fp, lr}
   1b5fc:	mov	fp, sp
   1b600:	sub	sp, sp, #16
   1b604:	str	r0, [sp, #8]
   1b608:	ldr	r0, [sp, #8]
   1b60c:	bl	1123c <__fpending@plt>
   1b610:	cmp	r0, #0
   1b614:	movw	r0, #0
   1b618:	movne	r0, #1
   1b61c:	and	r0, r0, #1
   1b620:	strb	r0, [sp, #7]
   1b624:	ldr	r0, [sp, #8]
   1b628:	bl	11248 <ferror_unlocked@plt>
   1b62c:	cmp	r0, #0
   1b630:	movw	r0, #0
   1b634:	movne	r0, #1
   1b638:	and	r0, r0, #1
   1b63c:	strb	r0, [sp, #6]
   1b640:	ldr	r0, [sp, #8]
   1b644:	bl	1b6c8 <__assert_fail@plt+0xa2b8>
   1b648:	cmp	r0, #0
   1b64c:	movw	r0, #0
   1b650:	movne	r0, #1
   1b654:	and	r0, r0, #1
   1b658:	strb	r0, [sp, #5]
   1b65c:	ldrb	r0, [sp, #6]
   1b660:	tst	r0, #1
   1b664:	bne	1b690 <__assert_fail@plt+0xa280>
   1b668:	ldrb	r0, [sp, #5]
   1b66c:	tst	r0, #1
   1b670:	beq	1b6b4 <__assert_fail@plt+0xa2a4>
   1b674:	ldrb	r0, [sp, #7]
   1b678:	tst	r0, #1
   1b67c:	bne	1b690 <__assert_fail@plt+0xa280>
   1b680:	bl	11308 <__errno_location@plt>
   1b684:	ldr	r0, [r0]
   1b688:	cmp	r0, #9
   1b68c:	beq	1b6b4 <__assert_fail@plt+0xa2a4>
   1b690:	ldrb	r0, [sp, #5]
   1b694:	tst	r0, #1
   1b698:	bne	1b6a8 <__assert_fail@plt+0xa298>
   1b69c:	bl	11308 <__errno_location@plt>
   1b6a0:	movw	lr, #0
   1b6a4:	str	lr, [r0]
   1b6a8:	mvn	r0, #0
   1b6ac:	str	r0, [fp, #-4]
   1b6b0:	b	1b6bc <__assert_fail@plt+0xa2ac>
   1b6b4:	movw	r0, #0
   1b6b8:	str	r0, [fp, #-4]
   1b6bc:	ldr	r0, [fp, #-4]
   1b6c0:	mov	sp, fp
   1b6c4:	pop	{fp, pc}
   1b6c8:	push	{fp, lr}
   1b6cc:	mov	fp, sp
   1b6d0:	sub	sp, sp, #32
   1b6d4:	str	r0, [fp, #-8]
   1b6d8:	movw	r0, #0
   1b6dc:	str	r0, [fp, #-12]
   1b6e0:	str	r0, [sp, #12]
   1b6e4:	ldr	r0, [fp, #-8]
   1b6e8:	bl	1135c <fileno@plt>
   1b6ec:	str	r0, [sp, #16]
   1b6f0:	ldr	r0, [sp, #16]
   1b6f4:	cmp	r0, #0
   1b6f8:	bge	1b70c <__assert_fail@plt+0xa2fc>
   1b6fc:	ldr	r0, [fp, #-8]
   1b700:	bl	11368 <fclose@plt>
   1b704:	str	r0, [fp, #-4]
   1b708:	b	1b7a8 <__assert_fail@plt+0xa398>
   1b70c:	ldr	r0, [fp, #-8]
   1b710:	bl	11290 <__freading@plt>
   1b714:	cmp	r0, #0
   1b718:	beq	1b750 <__assert_fail@plt+0xa340>
   1b71c:	ldr	r0, [fp, #-8]
   1b720:	bl	1135c <fileno@plt>
   1b724:	mov	lr, sp
   1b728:	mov	r1, #1
   1b72c:	str	r1, [lr]
   1b730:	mov	r1, #0
   1b734:	mov	r2, r1
   1b738:	mov	r3, r1
   1b73c:	bl	11218 <lseek64@plt>
   1b740:	and	r0, r0, r1
   1b744:	cmn	r0, #1
   1b748:	beq	1b76c <__assert_fail@plt+0xa35c>
   1b74c:	b	1b750 <__assert_fail@plt+0xa340>
   1b750:	ldr	r0, [fp, #-8]
   1b754:	bl	1b7b4 <__assert_fail@plt+0xa3a4>
   1b758:	cmp	r0, #0
   1b75c:	beq	1b76c <__assert_fail@plt+0xa35c>
   1b760:	bl	11308 <__errno_location@plt>
   1b764:	ldr	r0, [r0]
   1b768:	str	r0, [fp, #-12]
   1b76c:	ldr	r0, [fp, #-8]
   1b770:	bl	11368 <fclose@plt>
   1b774:	str	r0, [sp, #12]
   1b778:	ldr	r0, [fp, #-12]
   1b77c:	cmp	r0, #0
   1b780:	beq	1b7a0 <__assert_fail@plt+0xa390>
   1b784:	ldr	r0, [fp, #-12]
   1b788:	str	r0, [sp, #8]
   1b78c:	bl	11308 <__errno_location@plt>
   1b790:	ldr	lr, [sp, #8]
   1b794:	str	lr, [r0]
   1b798:	mvn	r0, #0
   1b79c:	str	r0, [sp, #12]
   1b7a0:	ldr	r0, [sp, #12]
   1b7a4:	str	r0, [fp, #-4]
   1b7a8:	ldr	r0, [fp, #-4]
   1b7ac:	mov	sp, fp
   1b7b0:	pop	{fp, pc}
   1b7b4:	push	{fp, lr}
   1b7b8:	mov	fp, sp
   1b7bc:	sub	sp, sp, #8
   1b7c0:	str	r0, [sp]
   1b7c4:	ldr	r0, [sp]
   1b7c8:	movw	r1, #0
   1b7cc:	cmp	r0, r1
   1b7d0:	beq	1b7e4 <__assert_fail@plt+0xa3d4>
   1b7d4:	ldr	r0, [sp]
   1b7d8:	bl	11290 <__freading@plt>
   1b7dc:	cmp	r0, #0
   1b7e0:	bne	1b7f4 <__assert_fail@plt+0xa3e4>
   1b7e4:	ldr	r0, [sp]
   1b7e8:	bl	11188 <fflush@plt>
   1b7ec:	str	r0, [sp, #4]
   1b7f0:	b	1b808 <__assert_fail@plt+0xa3f8>
   1b7f4:	ldr	r0, [sp]
   1b7f8:	bl	1b814 <__assert_fail@plt+0xa404>
   1b7fc:	ldr	r0, [sp]
   1b800:	bl	11188 <fflush@plt>
   1b804:	str	r0, [sp, #4]
   1b808:	ldr	r0, [sp, #4]
   1b80c:	mov	sp, fp
   1b810:	pop	{fp, pc}
   1b814:	push	{fp, lr}
   1b818:	mov	fp, sp
   1b81c:	sub	sp, sp, #16
   1b820:	str	r0, [fp, #-4]
   1b824:	ldr	r0, [fp, #-4]
   1b828:	ldr	r0, [r0]
   1b82c:	and	r0, r0, #256	; 0x100
   1b830:	cmp	r0, #0
   1b834:	beq	1b85c <__assert_fail@plt+0xa44c>
   1b838:	ldr	r0, [fp, #-4]
   1b83c:	mov	r1, sp
   1b840:	mov	r2, #1
   1b844:	str	r2, [r1]
   1b848:	mov	r1, #0
   1b84c:	mov	r2, r1
   1b850:	mov	r3, r1
   1b854:	bl	1b864 <__assert_fail@plt+0xa454>
   1b858:	str	r0, [sp, #8]
   1b85c:	mov	sp, fp
   1b860:	pop	{fp, pc}
   1b864:	push	{fp, lr}
   1b868:	mov	fp, sp
   1b86c:	sub	sp, sp, #32
   1b870:	ldr	r1, [fp, #8]
   1b874:	str	r0, [fp, #-8]
   1b878:	str	r3, [sp, #20]
   1b87c:	str	r2, [sp, #16]
   1b880:	ldr	r0, [fp, #-8]
   1b884:	ldr	r0, [r0, #8]
   1b888:	ldr	r2, [fp, #-8]
   1b88c:	ldr	r2, [r2, #4]
   1b890:	cmp	r0, r2
   1b894:	str	r1, [sp, #4]
   1b898:	bne	1b944 <__assert_fail@plt+0xa534>
   1b89c:	ldr	r0, [fp, #-8]
   1b8a0:	ldr	r0, [r0, #20]
   1b8a4:	ldr	r1, [fp, #-8]
   1b8a8:	ldr	r1, [r1, #16]
   1b8ac:	cmp	r0, r1
   1b8b0:	bne	1b944 <__assert_fail@plt+0xa534>
   1b8b4:	ldr	r0, [fp, #-8]
   1b8b8:	ldr	r0, [r0, #36]	; 0x24
   1b8bc:	movw	r1, #0
   1b8c0:	cmp	r0, r1
   1b8c4:	bne	1b944 <__assert_fail@plt+0xa534>
   1b8c8:	ldr	r0, [fp, #-8]
   1b8cc:	bl	1135c <fileno@plt>
   1b8d0:	ldr	r2, [sp, #16]
   1b8d4:	ldr	r3, [sp, #20]
   1b8d8:	ldr	lr, [fp, #8]
   1b8dc:	mov	r1, sp
   1b8e0:	str	lr, [r1]
   1b8e4:	bl	11218 <lseek64@plt>
   1b8e8:	str	r1, [sp, #12]
   1b8ec:	str	r0, [sp, #8]
   1b8f0:	ldr	r0, [sp, #8]
   1b8f4:	ldr	r1, [sp, #12]
   1b8f8:	and	r0, r0, r1
   1b8fc:	cmn	r0, #1
   1b900:	bne	1b914 <__assert_fail@plt+0xa504>
   1b904:	b	1b908 <__assert_fail@plt+0xa4f8>
   1b908:	mvn	r0, #0
   1b90c:	str	r0, [fp, #-4]
   1b910:	b	1b964 <__assert_fail@plt+0xa554>
   1b914:	ldr	r0, [fp, #-8]
   1b918:	ldr	r1, [r0]
   1b91c:	bic	r1, r1, #16
   1b920:	str	r1, [r0]
   1b924:	ldr	r0, [sp, #8]
   1b928:	ldr	r1, [sp, #12]
   1b92c:	ldr	r2, [fp, #-8]
   1b930:	str	r1, [r2, #84]	; 0x54
   1b934:	str	r0, [r2, #80]	; 0x50
   1b938:	movw	r0, #0
   1b93c:	str	r0, [fp, #-4]
   1b940:	b	1b964 <__assert_fail@plt+0xa554>
   1b944:	ldr	r0, [fp, #-8]
   1b948:	ldr	r2, [sp, #16]
   1b94c:	ldr	r3, [sp, #20]
   1b950:	ldr	r1, [fp, #8]
   1b954:	mov	ip, sp
   1b958:	str	r1, [ip]
   1b95c:	bl	11374 <fseeko64@plt>
   1b960:	str	r0, [fp, #-4]
   1b964:	ldr	r0, [fp, #-4]
   1b968:	mov	sp, fp
   1b96c:	pop	{fp, pc}
   1b970:	push	{fp, lr}
   1b974:	mov	fp, sp
   1b978:	bl	11308 <__errno_location@plt>
   1b97c:	movw	lr, #12
   1b980:	str	lr, [r0]
   1b984:	movw	r0, #0
   1b988:	pop	{fp, pc}
   1b98c:	push	{fp, lr}
   1b990:	mov	fp, sp
   1b994:	sub	sp, sp, #8
   1b998:	str	r0, [sp, #4]
   1b99c:	ldr	r0, [sp, #4]
   1b9a0:	cmn	r0, #1
   1b9a4:	bhi	1b9b8 <__assert_fail@plt+0xa5a8>
   1b9a8:	ldr	r0, [sp, #4]
   1b9ac:	bl	1b42c <__assert_fail@plt+0xa01c>
   1b9b0:	str	r0, [sp]
   1b9b4:	b	1b9c0 <__assert_fail@plt+0xa5b0>
   1b9b8:	bl	1b970 <__assert_fail@plt+0xa560>
   1b9bc:	str	r0, [sp]
   1b9c0:	ldr	r0, [sp]
   1b9c4:	mov	sp, fp
   1b9c8:	pop	{fp, pc}
   1b9cc:	push	{fp, lr}
   1b9d0:	mov	fp, sp
   1b9d4:	sub	sp, sp, #16
   1b9d8:	str	r0, [fp, #-4]
   1b9dc:	str	r1, [sp, #8]
   1b9e0:	ldr	r0, [sp, #8]
   1b9e4:	cmn	r0, #1
   1b9e8:	bhi	1ba20 <__assert_fail@plt+0xa610>
   1b9ec:	ldr	r0, [fp, #-4]
   1b9f0:	ldr	r1, [sp, #8]
   1b9f4:	ldr	r2, [sp, #8]
   1b9f8:	cmp	r2, #0
   1b9fc:	movw	r2, #0
   1ba00:	movne	r2, #1
   1ba04:	mvn	r3, #0
   1ba08:	eor	r2, r2, r3
   1ba0c:	and	r2, r2, #1
   1ba10:	orr	r1, r1, r2
   1ba14:	bl	1b49c <__assert_fail@plt+0xa08c>
   1ba18:	str	r0, [sp, #4]
   1ba1c:	b	1ba28 <__assert_fail@plt+0xa618>
   1ba20:	bl	1b970 <__assert_fail@plt+0xa560>
   1ba24:	str	r0, [sp, #4]
   1ba28:	ldr	r0, [sp, #4]
   1ba2c:	mov	sp, fp
   1ba30:	pop	{fp, pc}
   1ba34:	push	{fp, lr}
   1ba38:	mov	fp, sp
   1ba3c:	sub	sp, sp, #16
   1ba40:	str	r0, [sp, #8]
   1ba44:	str	r1, [sp, #4]
   1ba48:	ldr	r0, [sp, #8]
   1ba4c:	mvn	r1, #0
   1ba50:	cmp	r1, r0
   1ba54:	bcs	1ba78 <__assert_fail@plt+0xa668>
   1ba58:	ldr	r0, [sp, #4]
   1ba5c:	cmp	r0, #0
   1ba60:	beq	1ba70 <__assert_fail@plt+0xa660>
   1ba64:	bl	1b970 <__assert_fail@plt+0xa560>
   1ba68:	str	r0, [fp, #-4]
   1ba6c:	b	1bab8 <__assert_fail@plt+0xa6a8>
   1ba70:	movw	r0, #0
   1ba74:	str	r0, [sp, #8]
   1ba78:	ldr	r0, [sp, #4]
   1ba7c:	mvn	r1, #0
   1ba80:	cmp	r1, r0
   1ba84:	bcs	1baa8 <__assert_fail@plt+0xa698>
   1ba88:	ldr	r0, [sp, #8]
   1ba8c:	cmp	r0, #0
   1ba90:	beq	1baa0 <__assert_fail@plt+0xa690>
   1ba94:	bl	1b970 <__assert_fail@plt+0xa560>
   1ba98:	str	r0, [fp, #-4]
   1ba9c:	b	1bab8 <__assert_fail@plt+0xa6a8>
   1baa0:	movw	r0, #0
   1baa4:	str	r0, [sp, #4]
   1baa8:	ldr	r0, [sp, #8]
   1baac:	ldr	r1, [sp, #4]
   1bab0:	bl	1b390 <__assert_fail@plt+0x9f80>
   1bab4:	str	r0, [fp, #-4]
   1bab8:	ldr	r0, [fp, #-4]
   1babc:	mov	sp, fp
   1bac0:	pop	{fp, pc}
   1bac4:	push	{fp, lr}
   1bac8:	mov	fp, sp
   1bacc:	sub	sp, sp, #16
   1bad0:	str	r0, [fp, #-4]
   1bad4:	str	r1, [sp, #8]
   1bad8:	str	r2, [sp, #4]
   1badc:	ldr	r0, [sp, #8]
   1bae0:	cmp	r0, #0
   1bae4:	beq	1baf4 <__assert_fail@plt+0xa6e4>
   1bae8:	ldr	r0, [sp, #4]
   1baec:	cmp	r0, #0
   1baf0:	bne	1bb00 <__assert_fail@plt+0xa6f0>
   1baf4:	movw	r0, #1
   1baf8:	str	r0, [sp, #4]
   1bafc:	str	r0, [sp, #8]
   1bb00:	ldr	r0, [sp, #8]
   1bb04:	cmn	r0, #1
   1bb08:	bhi	1bb30 <__assert_fail@plt+0xa720>
   1bb0c:	ldr	r0, [sp, #4]
   1bb10:	cmn	r0, #1
   1bb14:	bhi	1bb30 <__assert_fail@plt+0xa720>
   1bb18:	ldr	r0, [fp, #-4]
   1bb1c:	ldr	r1, [sp, #8]
   1bb20:	ldr	r2, [sp, #4]
   1bb24:	bl	1c068 <__assert_fail@plt+0xac58>
   1bb28:	str	r0, [sp]
   1bb2c:	b	1bb38 <__assert_fail@plt+0xa728>
   1bb30:	bl	1b970 <__assert_fail@plt+0xa560>
   1bb34:	str	r0, [sp]
   1bb38:	ldr	r0, [sp]
   1bb3c:	mov	sp, fp
   1bb40:	pop	{fp, pc}
   1bb44:	push	{fp, lr}
   1bb48:	mov	fp, sp
   1bb4c:	sub	sp, sp, #8
   1bb50:	movw	r0, #14
   1bb54:	bl	113a4 <nl_langinfo@plt>
   1bb58:	str	r0, [sp, #4]
   1bb5c:	ldr	r0, [sp, #4]
   1bb60:	movw	lr, #0
   1bb64:	cmp	r0, lr
   1bb68:	bne	1bb78 <__assert_fail@plt+0xa768>
   1bb6c:	movw	r0, #57779	; 0xe1b3
   1bb70:	movt	r0, #1
   1bb74:	str	r0, [sp, #4]
   1bb78:	ldr	r0, [sp, #4]
   1bb7c:	ldrb	r0, [r0]
   1bb80:	cmp	r0, #0
   1bb84:	bne	1bb94 <__assert_fail@plt+0xa784>
   1bb88:	movw	r0, #60984	; 0xee38
   1bb8c:	movt	r0, #1
   1bb90:	str	r0, [sp, #4]
   1bb94:	ldr	r0, [sp, #4]
   1bb98:	mov	sp, fp
   1bb9c:	pop	{fp, pc}
   1bba0:	push	{fp, lr}
   1bba4:	mov	fp, sp
   1bba8:	sub	sp, sp, #32
   1bbac:	str	r0, [fp, #-8]
   1bbb0:	str	r1, [fp, #-12]
   1bbb4:	str	r2, [sp, #16]
   1bbb8:	str	r3, [sp, #12]
   1bbbc:	ldr	r0, [fp, #-8]
   1bbc0:	movw	r1, #0
   1bbc4:	cmp	r0, r1
   1bbc8:	bne	1bbd4 <__assert_fail@plt+0xa7c4>
   1bbcc:	add	r0, sp, #4
   1bbd0:	str	r0, [fp, #-8]
   1bbd4:	ldr	r0, [fp, #-8]
   1bbd8:	ldr	r1, [fp, #-12]
   1bbdc:	ldr	r2, [sp, #16]
   1bbe0:	ldr	r3, [sp, #12]
   1bbe4:	bl	11254 <mbrtowc@plt>
   1bbe8:	str	r0, [sp, #8]
   1bbec:	ldr	r0, [sp, #8]
   1bbf0:	mvn	r1, #1
   1bbf4:	cmp	r1, r0
   1bbf8:	bhi	1bc3c <__assert_fail@plt+0xa82c>
   1bbfc:	ldr	r0, [sp, #16]
   1bc00:	cmp	r0, #0
   1bc04:	beq	1bc3c <__assert_fail@plt+0xa82c>
   1bc08:	movw	r0, #0
   1bc0c:	bl	1dc38 <__assert_fail@plt+0xc828>
   1bc10:	tst	r0, #1
   1bc14:	bne	1bc3c <__assert_fail@plt+0xa82c>
   1bc18:	ldr	r0, [fp, #-12]
   1bc1c:	ldrb	r0, [r0]
   1bc20:	strb	r0, [sp, #3]
   1bc24:	ldrb	r0, [sp, #3]
   1bc28:	ldr	r1, [fp, #-8]
   1bc2c:	str	r0, [r1]
   1bc30:	movw	r0, #1
   1bc34:	str	r0, [fp, #-4]
   1bc38:	b	1bc44 <__assert_fail@plt+0xa834>
   1bc3c:	ldr	r0, [sp, #8]
   1bc40:	str	r0, [fp, #-4]
   1bc44:	ldr	r0, [fp, #-4]
   1bc48:	mov	sp, fp
   1bc4c:	pop	{fp, pc}
   1bc50:	push	{fp, lr}
   1bc54:	mov	fp, sp
   1bc58:	sub	sp, sp, #64	; 0x40
   1bc5c:	str	r0, [fp, #-8]
   1bc60:	str	r1, [fp, #-12]
   1bc64:	str	r2, [fp, #-16]
   1bc68:	ldr	r0, [fp, #-8]
   1bc6c:	movw	r1, #0
   1bc70:	cmp	r0, r1
   1bc74:	beq	1bd5c <__assert_fail@plt+0xa94c>
   1bc78:	movw	r0, #10
   1bc7c:	str	r0, [fp, #-20]	; 0xffffffec
   1bc80:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc84:	movw	r0, #0
   1bc88:	bl	1c008 <__assert_fail@plt+0xabf8>
   1bc8c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bc90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bc94:	movw	r1, #0
   1bc98:	cmp	r0, r1
   1bc9c:	bne	1bcac <__assert_fail@plt+0xa89c>
   1bca0:	mvn	r0, #0
   1bca4:	str	r0, [fp, #-4]
   1bca8:	b	1bffc <__assert_fail@plt+0xabec>
   1bcac:	b	1bcb0 <__assert_fail@plt+0xa8a0>
   1bcb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bcb4:	str	r0, [sp, #28]
   1bcb8:	ldr	r0, [fp, #-8]
   1bcbc:	ldr	r1, [fp, #-12]
   1bcc0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bcc4:	sub	r3, fp, #20
   1bcc8:	bl	1132c <getgrouplist@plt>
   1bccc:	str	r0, [fp, #-24]	; 0xffffffe8
   1bcd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bcd4:	cmp	r0, #0
   1bcd8:	bge	1bcf8 <__assert_fail@plt+0xa8e8>
   1bcdc:	ldr	r0, [sp, #28]
   1bce0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bce4:	cmp	r0, r1
   1bce8:	bne	1bcf8 <__assert_fail@plt+0xa8e8>
   1bcec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bcf0:	lsl	r0, r0, #1
   1bcf4:	str	r0, [fp, #-20]	; 0xffffffec
   1bcf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bcfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd00:	bl	1c008 <__assert_fail@plt+0xabf8>
   1bd04:	str	r0, [sp, #32]
   1bd08:	movw	r1, #0
   1bd0c:	cmp	r0, r1
   1bd10:	bne	1bd28 <__assert_fail@plt+0xa918>
   1bd14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bd18:	bl	1300c <__assert_fail@plt+0x1bfc>
   1bd1c:	mvn	r0, #0
   1bd20:	str	r0, [fp, #-4]
   1bd24:	b	1bffc <__assert_fail@plt+0xabec>
   1bd28:	ldr	r0, [sp, #32]
   1bd2c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bd30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd34:	movw	r1, #0
   1bd38:	cmp	r1, r0
   1bd3c:	bgt	1bd58 <__assert_fail@plt+0xa948>
   1bd40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bd44:	ldr	r1, [fp, #-16]
   1bd48:	str	r0, [r1]
   1bd4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bd50:	str	r0, [fp, #-4]
   1bd54:	b	1bffc <__assert_fail@plt+0xabec>
   1bd58:	b	1bcb0 <__assert_fail@plt+0xa8a0>
   1bd5c:	ldr	r0, [fp, #-8]
   1bd60:	movw	r1, #0
   1bd64:	cmp	r0, r1
   1bd68:	beq	1bd8c <__assert_fail@plt+0xa97c>
   1bd6c:	ldr	r2, [fp, #-8]
   1bd70:	ldr	r3, [fp, #-12]
   1bd74:	movw	r0, #0
   1bd78:	str	r0, [sp, #12]
   1bd7c:	ldr	r1, [sp, #12]
   1bd80:	bl	1da38 <__assert_fail@plt+0xc628>
   1bd84:	str	r0, [sp, #8]
   1bd88:	b	1bda0 <__assert_fail@plt+0xa990>
   1bd8c:	movw	r0, #0
   1bd90:	str	r0, [sp, #4]
   1bd94:	ldr	r1, [sp, #4]
   1bd98:	bl	113b0 <getgroups@plt>
   1bd9c:	str	r0, [sp, #8]
   1bda0:	ldr	r0, [sp, #8]
   1bda4:	str	r0, [fp, #-20]	; 0xffffffec
   1bda8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bdac:	cmp	r0, #0
   1bdb0:	bge	1be20 <__assert_fail@plt+0xaa10>
   1bdb4:	bl	11308 <__errno_location@plt>
   1bdb8:	ldr	r0, [r0]
   1bdbc:	cmp	r0, #38	; 0x26
   1bdc0:	bne	1be14 <__assert_fail@plt+0xaa04>
   1bdc4:	movw	r0, #0
   1bdc8:	movw	r1, #1
   1bdcc:	bl	1c008 <__assert_fail@plt+0xabf8>
   1bdd0:	str	r0, [fp, #-28]	; 0xffffffe4
   1bdd4:	movw	r1, #0
   1bdd8:	cmp	r0, r1
   1bddc:	beq	1be14 <__assert_fail@plt+0xaa04>
   1bde0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bde4:	ldr	r1, [fp, #-16]
   1bde8:	str	r0, [r1]
   1bdec:	ldr	r0, [fp, #-12]
   1bdf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bdf4:	str	r0, [r1]
   1bdf8:	ldr	r0, [fp, #-12]
   1bdfc:	cmn	r0, #1
   1be00:	movw	r0, #0
   1be04:	movne	r0, #1
   1be08:	and	r0, r0, #1
   1be0c:	str	r0, [fp, #-4]
   1be10:	b	1bffc <__assert_fail@plt+0xabec>
   1be14:	mvn	r0, #0
   1be18:	str	r0, [fp, #-4]
   1be1c:	b	1bffc <__assert_fail@plt+0xabec>
   1be20:	ldr	r0, [fp, #-20]	; 0xffffffec
   1be24:	cmp	r0, #0
   1be28:	beq	1be48 <__assert_fail@plt+0xaa38>
   1be2c:	ldr	r0, [fp, #-8]
   1be30:	movw	r1, #0
   1be34:	cmp	r0, r1
   1be38:	bne	1be54 <__assert_fail@plt+0xaa44>
   1be3c:	ldr	r0, [fp, #-12]
   1be40:	cmn	r0, #1
   1be44:	beq	1be54 <__assert_fail@plt+0xaa44>
   1be48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1be4c:	add	r0, r0, #1
   1be50:	str	r0, [fp, #-20]	; 0xffffffec
   1be54:	ldr	r1, [fp, #-20]	; 0xffffffec
   1be58:	movw	r0, #0
   1be5c:	bl	1c008 <__assert_fail@plt+0xabf8>
   1be60:	str	r0, [fp, #-28]	; 0xffffffe4
   1be64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1be68:	movw	r1, #0
   1be6c:	cmp	r0, r1
   1be70:	bne	1be80 <__assert_fail@plt+0xaa70>
   1be74:	mvn	r0, #0
   1be78:	str	r0, [fp, #-4]
   1be7c:	b	1bffc <__assert_fail@plt+0xabec>
   1be80:	ldr	r0, [fp, #-8]
   1be84:	movw	r1, #0
   1be88:	cmp	r0, r1
   1be8c:	beq	1beac <__assert_fail@plt+0xaa9c>
   1be90:	ldr	r0, [fp, #-20]	; 0xffffffec
   1be94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1be98:	ldr	r2, [fp, #-8]
   1be9c:	ldr	r3, [fp, #-12]
   1bea0:	bl	1da38 <__assert_fail@plt+0xc628>
   1bea4:	str	r0, [sp]
   1bea8:	b	1bed4 <__assert_fail@plt+0xaac4>
   1beac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1beb0:	ldr	r1, [fp, #-12]
   1beb4:	add	r2, r1, #1
   1beb8:	cmn	r1, #1
   1bebc:	movwne	r2, #1
   1bec0:	sub	r0, r0, r2
   1bec4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bec8:	add	r1, r1, r2, lsl #2
   1becc:	bl	113b0 <getgroups@plt>
   1bed0:	str	r0, [sp]
   1bed4:	ldr	r0, [sp]
   1bed8:	str	r0, [fp, #-24]	; 0xffffffe8
   1bedc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bee0:	cmp	r0, #0
   1bee4:	bge	1befc <__assert_fail@plt+0xaaec>
   1bee8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1beec:	bl	1300c <__assert_fail@plt+0x1bfc>
   1bef0:	mvn	r0, #0
   1bef4:	str	r0, [fp, #-4]
   1bef8:	b	1bffc <__assert_fail@plt+0xabec>
   1befc:	ldr	r0, [fp, #-8]
   1bf00:	movw	r1, #0
   1bf04:	cmp	r0, r1
   1bf08:	bne	1bf30 <__assert_fail@plt+0xab20>
   1bf0c:	ldr	r0, [fp, #-12]
   1bf10:	cmn	r0, #1
   1bf14:	beq	1bf30 <__assert_fail@plt+0xab20>
   1bf18:	ldr	r0, [fp, #-12]
   1bf1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bf20:	str	r0, [r1]
   1bf24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf28:	add	r0, r0, #1
   1bf2c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf34:	ldr	r1, [fp, #-16]
   1bf38:	str	r0, [r1]
   1bf3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf40:	movw	r1, #1
   1bf44:	cmp	r1, r0
   1bf48:	bge	1bff4 <__assert_fail@plt+0xabe4>
   1bf4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf50:	ldr	r0, [r0]
   1bf54:	str	r0, [sp, #24]
   1bf58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bf60:	add	r0, r0, r1, lsl #2
   1bf64:	str	r0, [sp, #16]
   1bf68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf6c:	add	r0, r0, #4
   1bf70:	str	r0, [sp, #20]
   1bf74:	ldr	r0, [sp, #20]
   1bf78:	ldr	r1, [sp, #16]
   1bf7c:	cmp	r0, r1
   1bf80:	bcs	1bff0 <__assert_fail@plt+0xabe0>
   1bf84:	ldr	r0, [sp, #20]
   1bf88:	ldr	r0, [r0]
   1bf8c:	ldr	r1, [sp, #24]
   1bf90:	cmp	r0, r1
   1bf94:	beq	1bfb0 <__assert_fail@plt+0xaba0>
   1bf98:	ldr	r0, [sp, #20]
   1bf9c:	ldr	r0, [r0]
   1bfa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bfa4:	ldr	r1, [r1]
   1bfa8:	cmp	r0, r1
   1bfac:	bne	1bfc4 <__assert_fail@plt+0xabb4>
   1bfb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfb4:	mvn	r1, #0
   1bfb8:	add	r0, r0, r1
   1bfbc:	str	r0, [fp, #-24]	; 0xffffffe8
   1bfc0:	b	1bfdc <__assert_fail@plt+0xabcc>
   1bfc4:	ldr	r0, [sp, #20]
   1bfc8:	ldr	r0, [r0]
   1bfcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bfd0:	add	r2, r1, #4
   1bfd4:	str	r2, [fp, #-28]	; 0xffffffe4
   1bfd8:	str	r0, [r1, #4]
   1bfdc:	b	1bfe0 <__assert_fail@plt+0xabd0>
   1bfe0:	ldr	r0, [sp, #20]
   1bfe4:	add	r0, r0, #4
   1bfe8:	str	r0, [sp, #20]
   1bfec:	b	1bf74 <__assert_fail@plt+0xab64>
   1bff0:	b	1bff4 <__assert_fail@plt+0xabe4>
   1bff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bff8:	str	r0, [fp, #-4]
   1bffc:	ldr	r0, [fp, #-4]
   1c000:	mov	sp, fp
   1c004:	pop	{fp, pc}
   1c008:	push	{fp, lr}
   1c00c:	mov	fp, sp
   1c010:	sub	sp, sp, #16
   1c014:	ldr	r2, [pc, #72]	; 1c064 <__assert_fail@plt+0xac54>
   1c018:	str	r0, [sp, #8]
   1c01c:	str	r1, [sp, #4]
   1c020:	ldr	r0, [sp, #4]
   1c024:	cmp	r2, r0
   1c028:	bcs	1c044 <__assert_fail@plt+0xac34>
   1c02c:	bl	11308 <__errno_location@plt>
   1c030:	movw	lr, #12
   1c034:	str	lr, [r0]
   1c038:	movw	r0, #0
   1c03c:	str	r0, [fp, #-4]
   1c040:	b	1c058 <__assert_fail@plt+0xac48>
   1c044:	ldr	r0, [sp, #8]
   1c048:	ldr	r1, [sp, #4]
   1c04c:	lsl	r1, r1, #2
   1c050:	bl	1b49c <__assert_fail@plt+0xa08c>
   1c054:	str	r0, [fp, #-4]
   1c058:	ldr	r0, [fp, #-4]
   1c05c:	mov	sp, fp
   1c060:	pop	{fp, pc}
   1c064:	svcne	0x00ffffff
   1c068:	push	{fp, lr}
   1c06c:	mov	fp, sp
   1c070:	sub	sp, sp, #176	; 0xb0
   1c074:	str	r0, [fp, #-8]
   1c078:	str	r1, [fp, #-12]
   1c07c:	str	r2, [fp, #-16]
   1c080:	b	1c438 <__assert_fail@plt+0xb028>
   1c084:	b	1c258 <__assert_fail@plt+0xae48>
   1c088:	ldr	r0, [fp, #-16]
   1c08c:	cmp	r0, #0
   1c090:	bcs	1c194 <__assert_fail@plt+0xad84>
   1c094:	ldr	r0, [fp, #-12]
   1c098:	cmp	r0, #0
   1c09c:	bcs	1c124 <__assert_fail@plt+0xad14>
   1c0a0:	b	1c0c0 <__assert_fail@plt+0xacb0>
   1c0a4:	ldr	r0, [fp, #-12]
   1c0a8:	ldr	r1, [fp, #-16]
   1c0ac:	movw	r2, #127	; 0x7f
   1c0b0:	udiv	r1, r2, r1
   1c0b4:	cmp	r0, r1
   1c0b8:	bcc	1c228 <__assert_fail@plt+0xae18>
   1c0bc:	b	1c240 <__assert_fail@plt+0xae30>
   1c0c0:	b	1c0d4 <__assert_fail@plt+0xacc4>
   1c0c4:	ldr	r0, [fp, #-16]
   1c0c8:	cmp	r0, #1
   1c0cc:	bcc	1c0e4 <__assert_fail@plt+0xacd4>
   1c0d0:	b	1c0f0 <__assert_fail@plt+0xace0>
   1c0d4:	ldr	r0, [fp, #-16]
   1c0d8:	movw	r1, #0
   1c0dc:	cmp	r1, r0
   1c0e0:	bcs	1c0f0 <__assert_fail@plt+0xace0>
   1c0e4:	movw	r0, #0
   1c0e8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c0ec:	b	1c108 <__assert_fail@plt+0xacf8>
   1c0f0:	ldr	r0, [fp, #-16]
   1c0f4:	movw	r1, #0
   1c0f8:	sub	r0, r1, r0
   1c0fc:	movw	r1, #127	; 0x7f
   1c100:	udiv	r0, r1, r0
   1c104:	str	r0, [fp, #-24]	; 0xffffffe8
   1c108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c10c:	ldr	r1, [fp, #-12]
   1c110:	mvn	r2, #0
   1c114:	sub	r1, r2, r1
   1c118:	cmp	r0, r1
   1c11c:	bls	1c228 <__assert_fail@plt+0xae18>
   1c120:	b	1c240 <__assert_fail@plt+0xae30>
   1c124:	ldr	r0, [fp, #-16]
   1c128:	cmn	r0, #1
   1c12c:	bne	1c178 <__assert_fail@plt+0xad68>
   1c130:	b	1c150 <__assert_fail@plt+0xad40>
   1c134:	ldr	r0, [fp, #-12]
   1c138:	mvn	r1, #127	; 0x7f
   1c13c:	add	r0, r0, r1
   1c140:	movw	r1, #0
   1c144:	cmp	r1, r0
   1c148:	bcc	1c228 <__assert_fail@plt+0xae18>
   1c14c:	b	1c240 <__assert_fail@plt+0xae30>
   1c150:	ldr	r0, [fp, #-12]
   1c154:	movw	r1, #0
   1c158:	cmp	r1, r0
   1c15c:	bcs	1c240 <__assert_fail@plt+0xae30>
   1c160:	ldr	r0, [fp, #-12]
   1c164:	sub	r0, r0, #1
   1c168:	movw	r1, #127	; 0x7f
   1c16c:	cmp	r1, r0
   1c170:	bcc	1c228 <__assert_fail@plt+0xae18>
   1c174:	b	1c240 <__assert_fail@plt+0xae30>
   1c178:	ldr	r0, [fp, #-16]
   1c17c:	mvn	r1, #127	; 0x7f
   1c180:	udiv	r0, r1, r0
   1c184:	ldr	r1, [fp, #-12]
   1c188:	cmp	r0, r1
   1c18c:	bcc	1c228 <__assert_fail@plt+0xae18>
   1c190:	b	1c240 <__assert_fail@plt+0xae30>
   1c194:	ldr	r0, [fp, #-16]
   1c198:	cmp	r0, #0
   1c19c:	bne	1c1a4 <__assert_fail@plt+0xad94>
   1c1a0:	b	1c240 <__assert_fail@plt+0xae30>
   1c1a4:	ldr	r0, [fp, #-12]
   1c1a8:	cmp	r0, #0
   1c1ac:	bcs	1c210 <__assert_fail@plt+0xae00>
   1c1b0:	ldr	r0, [fp, #-12]
   1c1b4:	cmn	r0, #1
   1c1b8:	bne	1c1f4 <__assert_fail@plt+0xade4>
   1c1bc:	b	1c1dc <__assert_fail@plt+0xadcc>
   1c1c0:	ldr	r0, [fp, #-16]
   1c1c4:	mvn	r1, #127	; 0x7f
   1c1c8:	add	r0, r0, r1
   1c1cc:	movw	r1, #0
   1c1d0:	cmp	r1, r0
   1c1d4:	bcc	1c228 <__assert_fail@plt+0xae18>
   1c1d8:	b	1c240 <__assert_fail@plt+0xae30>
   1c1dc:	ldr	r0, [fp, #-16]
   1c1e0:	sub	r0, r0, #1
   1c1e4:	movw	r1, #127	; 0x7f
   1c1e8:	cmp	r1, r0
   1c1ec:	bcc	1c228 <__assert_fail@plt+0xae18>
   1c1f0:	b	1c240 <__assert_fail@plt+0xae30>
   1c1f4:	ldr	r0, [fp, #-12]
   1c1f8:	mvn	r1, #127	; 0x7f
   1c1fc:	udiv	r0, r1, r0
   1c200:	ldr	r1, [fp, #-16]
   1c204:	cmp	r0, r1
   1c208:	bcc	1c228 <__assert_fail@plt+0xae18>
   1c20c:	b	1c240 <__assert_fail@plt+0xae30>
   1c210:	ldr	r0, [fp, #-16]
   1c214:	movw	r1, #127	; 0x7f
   1c218:	udiv	r0, r1, r0
   1c21c:	ldr	r1, [fp, #-12]
   1c220:	cmp	r0, r1
   1c224:	bcs	1c240 <__assert_fail@plt+0xae30>
   1c228:	ldr	r0, [fp, #-12]
   1c22c:	ldr	r1, [fp, #-16]
   1c230:	mul	r0, r0, r1
   1c234:	sxtb	r0, r0
   1c238:	str	r0, [fp, #-20]	; 0xffffffec
   1c23c:	b	1d3b8 <__assert_fail@plt+0xbfa8>
   1c240:	ldr	r0, [fp, #-12]
   1c244:	ldr	r1, [fp, #-16]
   1c248:	mul	r0, r0, r1
   1c24c:	sxtb	r0, r0
   1c250:	str	r0, [fp, #-20]	; 0xffffffec
   1c254:	b	1d3d0 <__assert_fail@plt+0xbfc0>
   1c258:	ldr	r0, [fp, #-16]
   1c25c:	cmp	r0, #0
   1c260:	bcs	1c36c <__assert_fail@plt+0xaf5c>
   1c264:	ldr	r0, [fp, #-12]
   1c268:	cmp	r0, #0
   1c26c:	bcs	1c2f4 <__assert_fail@plt+0xaee4>
   1c270:	b	1c290 <__assert_fail@plt+0xae80>
   1c274:	ldr	r0, [fp, #-12]
   1c278:	ldr	r1, [fp, #-16]
   1c27c:	movw	r2, #255	; 0xff
   1c280:	udiv	r1, r2, r1
   1c284:	cmp	r0, r1
   1c288:	bcc	1c408 <__assert_fail@plt+0xaff8>
   1c28c:	b	1c420 <__assert_fail@plt+0xb010>
   1c290:	b	1c2a4 <__assert_fail@plt+0xae94>
   1c294:	ldr	r0, [fp, #-16]
   1c298:	cmp	r0, #1
   1c29c:	bcc	1c2b4 <__assert_fail@plt+0xaea4>
   1c2a0:	b	1c2c0 <__assert_fail@plt+0xaeb0>
   1c2a4:	ldr	r0, [fp, #-16]
   1c2a8:	movw	r1, #0
   1c2ac:	cmp	r1, r0
   1c2b0:	bcs	1c2c0 <__assert_fail@plt+0xaeb0>
   1c2b4:	movw	r0, #0
   1c2b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1c2bc:	b	1c2d8 <__assert_fail@plt+0xaec8>
   1c2c0:	ldr	r0, [fp, #-16]
   1c2c4:	movw	r1, #0
   1c2c8:	sub	r0, r1, r0
   1c2cc:	movw	r1, #255	; 0xff
   1c2d0:	udiv	r0, r1, r0
   1c2d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1c2d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c2dc:	ldr	r1, [fp, #-12]
   1c2e0:	mvn	r2, #0
   1c2e4:	sub	r1, r2, r1
   1c2e8:	cmp	r0, r1
   1c2ec:	bls	1c408 <__assert_fail@plt+0xaff8>
   1c2f0:	b	1c420 <__assert_fail@plt+0xb010>
   1c2f4:	b	1c2fc <__assert_fail@plt+0xaeec>
   1c2f8:	b	1c300 <__assert_fail@plt+0xaef0>
   1c2fc:	b	1c350 <__assert_fail@plt+0xaf40>
   1c300:	ldr	r0, [fp, #-16]
   1c304:	cmn	r0, #1
   1c308:	bne	1c350 <__assert_fail@plt+0xaf40>
   1c30c:	b	1c328 <__assert_fail@plt+0xaf18>
   1c310:	ldr	r0, [fp, #-12]
   1c314:	add	r0, r0, #0
   1c318:	movw	r1, #0
   1c31c:	cmp	r1, r0
   1c320:	bcc	1c408 <__assert_fail@plt+0xaff8>
   1c324:	b	1c420 <__assert_fail@plt+0xb010>
   1c328:	ldr	r0, [fp, #-12]
   1c32c:	movw	r1, #0
   1c330:	cmp	r1, r0
   1c334:	bcs	1c420 <__assert_fail@plt+0xb010>
   1c338:	ldr	r0, [fp, #-12]
   1c33c:	sub	r0, r0, #1
   1c340:	mvn	r1, #0
   1c344:	cmp	r1, r0
   1c348:	bcc	1c408 <__assert_fail@plt+0xaff8>
   1c34c:	b	1c420 <__assert_fail@plt+0xb010>
   1c350:	ldr	r0, [fp, #-16]
   1c354:	movw	r1, #0
   1c358:	udiv	r0, r1, r0
   1c35c:	ldr	r1, [fp, #-12]
   1c360:	cmp	r0, r1
   1c364:	bcc	1c408 <__assert_fail@plt+0xaff8>
   1c368:	b	1c420 <__assert_fail@plt+0xb010>
   1c36c:	ldr	r0, [fp, #-16]
   1c370:	cmp	r0, #0
   1c374:	bne	1c37c <__assert_fail@plt+0xaf6c>
   1c378:	b	1c420 <__assert_fail@plt+0xb010>
   1c37c:	ldr	r0, [fp, #-12]
   1c380:	cmp	r0, #0
   1c384:	bcs	1c3f0 <__assert_fail@plt+0xafe0>
   1c388:	b	1c390 <__assert_fail@plt+0xaf80>
   1c38c:	b	1c394 <__assert_fail@plt+0xaf84>
   1c390:	b	1c3d4 <__assert_fail@plt+0xafc4>
   1c394:	ldr	r0, [fp, #-12]
   1c398:	cmn	r0, #1
   1c39c:	bne	1c3d4 <__assert_fail@plt+0xafc4>
   1c3a0:	b	1c3bc <__assert_fail@plt+0xafac>
   1c3a4:	ldr	r0, [fp, #-16]
   1c3a8:	add	r0, r0, #0
   1c3ac:	movw	r1, #0
   1c3b0:	cmp	r1, r0
   1c3b4:	bcc	1c408 <__assert_fail@plt+0xaff8>
   1c3b8:	b	1c420 <__assert_fail@plt+0xb010>
   1c3bc:	ldr	r0, [fp, #-16]
   1c3c0:	sub	r0, r0, #1
   1c3c4:	mvn	r1, #0
   1c3c8:	cmp	r1, r0
   1c3cc:	bcc	1c408 <__assert_fail@plt+0xaff8>
   1c3d0:	b	1c420 <__assert_fail@plt+0xb010>
   1c3d4:	ldr	r0, [fp, #-12]
   1c3d8:	movw	r1, #0
   1c3dc:	udiv	r0, r1, r0
   1c3e0:	ldr	r1, [fp, #-16]
   1c3e4:	cmp	r0, r1
   1c3e8:	bcc	1c408 <__assert_fail@plt+0xaff8>
   1c3ec:	b	1c420 <__assert_fail@plt+0xb010>
   1c3f0:	ldr	r0, [fp, #-16]
   1c3f4:	movw	r1, #255	; 0xff
   1c3f8:	udiv	r0, r1, r0
   1c3fc:	ldr	r1, [fp, #-12]
   1c400:	cmp	r0, r1
   1c404:	bcs	1c420 <__assert_fail@plt+0xb010>
   1c408:	ldr	r0, [fp, #-12]
   1c40c:	ldr	r1, [fp, #-16]
   1c410:	mul	r0, r0, r1
   1c414:	and	r0, r0, #255	; 0xff
   1c418:	str	r0, [fp, #-20]	; 0xffffffec
   1c41c:	b	1d3b8 <__assert_fail@plt+0xbfa8>
   1c420:	ldr	r0, [fp, #-12]
   1c424:	ldr	r1, [fp, #-16]
   1c428:	mul	r0, r0, r1
   1c42c:	and	r0, r0, #255	; 0xff
   1c430:	str	r0, [fp, #-20]	; 0xffffffec
   1c434:	b	1d3d0 <__assert_fail@plt+0xbfc0>
   1c438:	b	1c7f0 <__assert_fail@plt+0xb3e0>
   1c43c:	b	1c610 <__assert_fail@plt+0xb200>
   1c440:	ldr	r0, [fp, #-16]
   1c444:	cmp	r0, #0
   1c448:	bcs	1c54c <__assert_fail@plt+0xb13c>
   1c44c:	ldr	r0, [fp, #-12]
   1c450:	cmp	r0, #0
   1c454:	bcs	1c4dc <__assert_fail@plt+0xb0cc>
   1c458:	b	1c478 <__assert_fail@plt+0xb068>
   1c45c:	ldr	r0, [fp, #-12]
   1c460:	ldr	r1, [fp, #-16]
   1c464:	movw	r2, #32767	; 0x7fff
   1c468:	udiv	r1, r2, r1
   1c46c:	cmp	r0, r1
   1c470:	bcc	1c5e0 <__assert_fail@plt+0xb1d0>
   1c474:	b	1c5f8 <__assert_fail@plt+0xb1e8>
   1c478:	b	1c48c <__assert_fail@plt+0xb07c>
   1c47c:	ldr	r0, [fp, #-16]
   1c480:	cmp	r0, #1
   1c484:	bcc	1c49c <__assert_fail@plt+0xb08c>
   1c488:	b	1c4a8 <__assert_fail@plt+0xb098>
   1c48c:	ldr	r0, [fp, #-16]
   1c490:	movw	r1, #0
   1c494:	cmp	r1, r0
   1c498:	bcs	1c4a8 <__assert_fail@plt+0xb098>
   1c49c:	movw	r0, #0
   1c4a0:	str	r0, [fp, #-32]	; 0xffffffe0
   1c4a4:	b	1c4c0 <__assert_fail@plt+0xb0b0>
   1c4a8:	ldr	r0, [fp, #-16]
   1c4ac:	movw	r1, #0
   1c4b0:	sub	r0, r1, r0
   1c4b4:	movw	r1, #32767	; 0x7fff
   1c4b8:	udiv	r0, r1, r0
   1c4bc:	str	r0, [fp, #-32]	; 0xffffffe0
   1c4c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c4c4:	ldr	r1, [fp, #-12]
   1c4c8:	mvn	r2, #0
   1c4cc:	sub	r1, r2, r1
   1c4d0:	cmp	r0, r1
   1c4d4:	bls	1c5e0 <__assert_fail@plt+0xb1d0>
   1c4d8:	b	1c5f8 <__assert_fail@plt+0xb1e8>
   1c4dc:	ldr	r0, [fp, #-16]
   1c4e0:	cmn	r0, #1
   1c4e4:	bne	1c530 <__assert_fail@plt+0xb120>
   1c4e8:	b	1c508 <__assert_fail@plt+0xb0f8>
   1c4ec:	ldr	r0, [pc, #3840]	; 1d3f4 <__assert_fail@plt+0xbfe4>
   1c4f0:	ldr	r1, [fp, #-12]
   1c4f4:	add	r0, r1, r0
   1c4f8:	movw	r1, #0
   1c4fc:	cmp	r1, r0
   1c500:	bcc	1c5e0 <__assert_fail@plt+0xb1d0>
   1c504:	b	1c5f8 <__assert_fail@plt+0xb1e8>
   1c508:	ldr	r0, [fp, #-12]
   1c50c:	movw	r1, #0
   1c510:	cmp	r1, r0
   1c514:	bcs	1c5f8 <__assert_fail@plt+0xb1e8>
   1c518:	ldr	r0, [fp, #-12]
   1c51c:	sub	r0, r0, #1
   1c520:	movw	r1, #32767	; 0x7fff
   1c524:	cmp	r1, r0
   1c528:	bcc	1c5e0 <__assert_fail@plt+0xb1d0>
   1c52c:	b	1c5f8 <__assert_fail@plt+0xb1e8>
   1c530:	ldr	r0, [pc, #3772]	; 1d3f4 <__assert_fail@plt+0xbfe4>
   1c534:	ldr	r1, [fp, #-16]
   1c538:	udiv	r0, r0, r1
   1c53c:	ldr	r1, [fp, #-12]
   1c540:	cmp	r0, r1
   1c544:	bcc	1c5e0 <__assert_fail@plt+0xb1d0>
   1c548:	b	1c5f8 <__assert_fail@plt+0xb1e8>
   1c54c:	ldr	r0, [fp, #-16]
   1c550:	cmp	r0, #0
   1c554:	bne	1c55c <__assert_fail@plt+0xb14c>
   1c558:	b	1c5f8 <__assert_fail@plt+0xb1e8>
   1c55c:	ldr	r0, [fp, #-12]
   1c560:	cmp	r0, #0
   1c564:	bcs	1c5c8 <__assert_fail@plt+0xb1b8>
   1c568:	ldr	r0, [fp, #-12]
   1c56c:	cmn	r0, #1
   1c570:	bne	1c5ac <__assert_fail@plt+0xb19c>
   1c574:	b	1c594 <__assert_fail@plt+0xb184>
   1c578:	ldr	r0, [pc, #3700]	; 1d3f4 <__assert_fail@plt+0xbfe4>
   1c57c:	ldr	r1, [fp, #-16]
   1c580:	add	r0, r1, r0
   1c584:	movw	r1, #0
   1c588:	cmp	r1, r0
   1c58c:	bcc	1c5e0 <__assert_fail@plt+0xb1d0>
   1c590:	b	1c5f8 <__assert_fail@plt+0xb1e8>
   1c594:	ldr	r0, [fp, #-16]
   1c598:	sub	r0, r0, #1
   1c59c:	movw	r1, #32767	; 0x7fff
   1c5a0:	cmp	r1, r0
   1c5a4:	bcc	1c5e0 <__assert_fail@plt+0xb1d0>
   1c5a8:	b	1c5f8 <__assert_fail@plt+0xb1e8>
   1c5ac:	ldr	r0, [pc, #3648]	; 1d3f4 <__assert_fail@plt+0xbfe4>
   1c5b0:	ldr	r1, [fp, #-12]
   1c5b4:	udiv	r0, r0, r1
   1c5b8:	ldr	r1, [fp, #-16]
   1c5bc:	cmp	r0, r1
   1c5c0:	bcc	1c5e0 <__assert_fail@plt+0xb1d0>
   1c5c4:	b	1c5f8 <__assert_fail@plt+0xb1e8>
   1c5c8:	ldr	r0, [fp, #-16]
   1c5cc:	movw	r1, #32767	; 0x7fff
   1c5d0:	udiv	r0, r1, r0
   1c5d4:	ldr	r1, [fp, #-12]
   1c5d8:	cmp	r0, r1
   1c5dc:	bcs	1c5f8 <__assert_fail@plt+0xb1e8>
   1c5e0:	ldr	r0, [fp, #-12]
   1c5e4:	ldr	r1, [fp, #-16]
   1c5e8:	mul	r0, r0, r1
   1c5ec:	sxth	r0, r0
   1c5f0:	str	r0, [fp, #-20]	; 0xffffffec
   1c5f4:	b	1d3b8 <__assert_fail@plt+0xbfa8>
   1c5f8:	ldr	r0, [fp, #-12]
   1c5fc:	ldr	r1, [fp, #-16]
   1c600:	mul	r0, r0, r1
   1c604:	sxth	r0, r0
   1c608:	str	r0, [fp, #-20]	; 0xffffffec
   1c60c:	b	1d3d0 <__assert_fail@plt+0xbfc0>
   1c610:	ldr	r0, [fp, #-16]
   1c614:	cmp	r0, #0
   1c618:	bcs	1c724 <__assert_fail@plt+0xb314>
   1c61c:	ldr	r0, [fp, #-12]
   1c620:	cmp	r0, #0
   1c624:	bcs	1c6ac <__assert_fail@plt+0xb29c>
   1c628:	b	1c648 <__assert_fail@plt+0xb238>
   1c62c:	ldr	r0, [fp, #-12]
   1c630:	ldr	r1, [fp, #-16]
   1c634:	movw	r2, #65535	; 0xffff
   1c638:	udiv	r1, r2, r1
   1c63c:	cmp	r0, r1
   1c640:	bcc	1c7c0 <__assert_fail@plt+0xb3b0>
   1c644:	b	1c7d8 <__assert_fail@plt+0xb3c8>
   1c648:	b	1c65c <__assert_fail@plt+0xb24c>
   1c64c:	ldr	r0, [fp, #-16]
   1c650:	cmp	r0, #1
   1c654:	bcc	1c66c <__assert_fail@plt+0xb25c>
   1c658:	b	1c678 <__assert_fail@plt+0xb268>
   1c65c:	ldr	r0, [fp, #-16]
   1c660:	movw	r1, #0
   1c664:	cmp	r1, r0
   1c668:	bcs	1c678 <__assert_fail@plt+0xb268>
   1c66c:	movw	r0, #0
   1c670:	str	r0, [fp, #-36]	; 0xffffffdc
   1c674:	b	1c690 <__assert_fail@plt+0xb280>
   1c678:	ldr	r0, [fp, #-16]
   1c67c:	movw	r1, #0
   1c680:	sub	r0, r1, r0
   1c684:	movw	r1, #65535	; 0xffff
   1c688:	udiv	r0, r1, r0
   1c68c:	str	r0, [fp, #-36]	; 0xffffffdc
   1c690:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c694:	ldr	r1, [fp, #-12]
   1c698:	mvn	r2, #0
   1c69c:	sub	r1, r2, r1
   1c6a0:	cmp	r0, r1
   1c6a4:	bls	1c7c0 <__assert_fail@plt+0xb3b0>
   1c6a8:	b	1c7d8 <__assert_fail@plt+0xb3c8>
   1c6ac:	b	1c6b4 <__assert_fail@plt+0xb2a4>
   1c6b0:	b	1c6b8 <__assert_fail@plt+0xb2a8>
   1c6b4:	b	1c708 <__assert_fail@plt+0xb2f8>
   1c6b8:	ldr	r0, [fp, #-16]
   1c6bc:	cmn	r0, #1
   1c6c0:	bne	1c708 <__assert_fail@plt+0xb2f8>
   1c6c4:	b	1c6e0 <__assert_fail@plt+0xb2d0>
   1c6c8:	ldr	r0, [fp, #-12]
   1c6cc:	add	r0, r0, #0
   1c6d0:	movw	r1, #0
   1c6d4:	cmp	r1, r0
   1c6d8:	bcc	1c7c0 <__assert_fail@plt+0xb3b0>
   1c6dc:	b	1c7d8 <__assert_fail@plt+0xb3c8>
   1c6e0:	ldr	r0, [fp, #-12]
   1c6e4:	movw	r1, #0
   1c6e8:	cmp	r1, r0
   1c6ec:	bcs	1c7d8 <__assert_fail@plt+0xb3c8>
   1c6f0:	ldr	r0, [fp, #-12]
   1c6f4:	sub	r0, r0, #1
   1c6f8:	mvn	r1, #0
   1c6fc:	cmp	r1, r0
   1c700:	bcc	1c7c0 <__assert_fail@plt+0xb3b0>
   1c704:	b	1c7d8 <__assert_fail@plt+0xb3c8>
   1c708:	ldr	r0, [fp, #-16]
   1c70c:	movw	r1, #0
   1c710:	udiv	r0, r1, r0
   1c714:	ldr	r1, [fp, #-12]
   1c718:	cmp	r0, r1
   1c71c:	bcc	1c7c0 <__assert_fail@plt+0xb3b0>
   1c720:	b	1c7d8 <__assert_fail@plt+0xb3c8>
   1c724:	ldr	r0, [fp, #-16]
   1c728:	cmp	r0, #0
   1c72c:	bne	1c734 <__assert_fail@plt+0xb324>
   1c730:	b	1c7d8 <__assert_fail@plt+0xb3c8>
   1c734:	ldr	r0, [fp, #-12]
   1c738:	cmp	r0, #0
   1c73c:	bcs	1c7a8 <__assert_fail@plt+0xb398>
   1c740:	b	1c748 <__assert_fail@plt+0xb338>
   1c744:	b	1c74c <__assert_fail@plt+0xb33c>
   1c748:	b	1c78c <__assert_fail@plt+0xb37c>
   1c74c:	ldr	r0, [fp, #-12]
   1c750:	cmn	r0, #1
   1c754:	bne	1c78c <__assert_fail@plt+0xb37c>
   1c758:	b	1c774 <__assert_fail@plt+0xb364>
   1c75c:	ldr	r0, [fp, #-16]
   1c760:	add	r0, r0, #0
   1c764:	movw	r1, #0
   1c768:	cmp	r1, r0
   1c76c:	bcc	1c7c0 <__assert_fail@plt+0xb3b0>
   1c770:	b	1c7d8 <__assert_fail@plt+0xb3c8>
   1c774:	ldr	r0, [fp, #-16]
   1c778:	sub	r0, r0, #1
   1c77c:	mvn	r1, #0
   1c780:	cmp	r1, r0
   1c784:	bcc	1c7c0 <__assert_fail@plt+0xb3b0>
   1c788:	b	1c7d8 <__assert_fail@plt+0xb3c8>
   1c78c:	ldr	r0, [fp, #-12]
   1c790:	movw	r1, #0
   1c794:	udiv	r0, r1, r0
   1c798:	ldr	r1, [fp, #-16]
   1c79c:	cmp	r0, r1
   1c7a0:	bcc	1c7c0 <__assert_fail@plt+0xb3b0>
   1c7a4:	b	1c7d8 <__assert_fail@plt+0xb3c8>
   1c7a8:	ldr	r0, [fp, #-16]
   1c7ac:	movw	r1, #65535	; 0xffff
   1c7b0:	udiv	r0, r1, r0
   1c7b4:	ldr	r1, [fp, #-12]
   1c7b8:	cmp	r0, r1
   1c7bc:	bcs	1c7d8 <__assert_fail@plt+0xb3c8>
   1c7c0:	ldr	r0, [fp, #-12]
   1c7c4:	ldr	r1, [fp, #-16]
   1c7c8:	mul	r0, r0, r1
   1c7cc:	uxth	r0, r0
   1c7d0:	str	r0, [fp, #-20]	; 0xffffffec
   1c7d4:	b	1d3b8 <__assert_fail@plt+0xbfa8>
   1c7d8:	ldr	r0, [fp, #-12]
   1c7dc:	ldr	r1, [fp, #-16]
   1c7e0:	mul	r0, r0, r1
   1c7e4:	uxth	r0, r0
   1c7e8:	str	r0, [fp, #-20]	; 0xffffffec
   1c7ec:	b	1d3d0 <__assert_fail@plt+0xbfc0>
   1c7f0:	b	1c7f4 <__assert_fail@plt+0xb3e4>
   1c7f4:	b	1c9b8 <__assert_fail@plt+0xb5a8>
   1c7f8:	ldr	r0, [fp, #-16]
   1c7fc:	cmp	r0, #0
   1c800:	bcs	1c900 <__assert_fail@plt+0xb4f0>
   1c804:	ldr	r0, [fp, #-12]
   1c808:	cmp	r0, #0
   1c80c:	bcs	1c894 <__assert_fail@plt+0xb484>
   1c810:	b	1c830 <__assert_fail@plt+0xb420>
   1c814:	ldr	r0, [pc, #3024]	; 1d3ec <__assert_fail@plt+0xbfdc>
   1c818:	ldr	r1, [fp, #-12]
   1c81c:	ldr	r2, [fp, #-16]
   1c820:	udiv	r0, r0, r2
   1c824:	cmp	r1, r0
   1c828:	bcc	1c990 <__assert_fail@plt+0xb580>
   1c82c:	b	1c9a4 <__assert_fail@plt+0xb594>
   1c830:	b	1c844 <__assert_fail@plt+0xb434>
   1c834:	ldr	r0, [fp, #-16]
   1c838:	cmp	r0, #1
   1c83c:	bcc	1c854 <__assert_fail@plt+0xb444>
   1c840:	b	1c860 <__assert_fail@plt+0xb450>
   1c844:	ldr	r0, [fp, #-16]
   1c848:	movw	r1, #0
   1c84c:	cmp	r1, r0
   1c850:	bcs	1c860 <__assert_fail@plt+0xb450>
   1c854:	movw	r0, #0
   1c858:	str	r0, [fp, #-40]	; 0xffffffd8
   1c85c:	b	1c878 <__assert_fail@plt+0xb468>
   1c860:	ldr	r0, [pc, #2948]	; 1d3ec <__assert_fail@plt+0xbfdc>
   1c864:	ldr	r1, [fp, #-16]
   1c868:	movw	r2, #0
   1c86c:	sub	r1, r2, r1
   1c870:	udiv	r0, r0, r1
   1c874:	str	r0, [fp, #-40]	; 0xffffffd8
   1c878:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c87c:	ldr	r1, [fp, #-12]
   1c880:	mvn	r2, #0
   1c884:	sub	r1, r2, r1
   1c888:	cmp	r0, r1
   1c88c:	bls	1c990 <__assert_fail@plt+0xb580>
   1c890:	b	1c9a4 <__assert_fail@plt+0xb594>
   1c894:	ldr	r0, [fp, #-16]
   1c898:	cmn	r0, #1
   1c89c:	bne	1c8e4 <__assert_fail@plt+0xb4d4>
   1c8a0:	b	1c8bc <__assert_fail@plt+0xb4ac>
   1c8a4:	ldr	r0, [fp, #-12]
   1c8a8:	add	r0, r0, #-2147483648	; 0x80000000
   1c8ac:	movw	r1, #0
   1c8b0:	cmp	r1, r0
   1c8b4:	bcc	1c990 <__assert_fail@plt+0xb580>
   1c8b8:	b	1c9a4 <__assert_fail@plt+0xb594>
   1c8bc:	ldr	r0, [fp, #-12]
   1c8c0:	movw	r1, #0
   1c8c4:	cmp	r1, r0
   1c8c8:	bcs	1c9a4 <__assert_fail@plt+0xb594>
   1c8cc:	ldr	r0, [pc, #2840]	; 1d3ec <__assert_fail@plt+0xbfdc>
   1c8d0:	ldr	r1, [fp, #-12]
   1c8d4:	sub	r1, r1, #1
   1c8d8:	cmp	r0, r1
   1c8dc:	bcc	1c990 <__assert_fail@plt+0xb580>
   1c8e0:	b	1c9a4 <__assert_fail@plt+0xb594>
   1c8e4:	ldr	r0, [pc, #2820]	; 1d3f0 <__assert_fail@plt+0xbfe0>
   1c8e8:	ldr	r1, [fp, #-16]
   1c8ec:	udiv	r0, r0, r1
   1c8f0:	ldr	r1, [fp, #-12]
   1c8f4:	cmp	r0, r1
   1c8f8:	bcc	1c990 <__assert_fail@plt+0xb580>
   1c8fc:	b	1c9a4 <__assert_fail@plt+0xb594>
   1c900:	ldr	r0, [fp, #-16]
   1c904:	cmp	r0, #0
   1c908:	bne	1c910 <__assert_fail@plt+0xb500>
   1c90c:	b	1c9a4 <__assert_fail@plt+0xb594>
   1c910:	ldr	r0, [fp, #-12]
   1c914:	cmp	r0, #0
   1c918:	bcs	1c978 <__assert_fail@plt+0xb568>
   1c91c:	ldr	r0, [fp, #-12]
   1c920:	cmn	r0, #1
   1c924:	bne	1c95c <__assert_fail@plt+0xb54c>
   1c928:	b	1c944 <__assert_fail@plt+0xb534>
   1c92c:	ldr	r0, [fp, #-16]
   1c930:	add	r0, r0, #-2147483648	; 0x80000000
   1c934:	movw	r1, #0
   1c938:	cmp	r1, r0
   1c93c:	bcc	1c990 <__assert_fail@plt+0xb580>
   1c940:	b	1c9a4 <__assert_fail@plt+0xb594>
   1c944:	ldr	r0, [pc, #2720]	; 1d3ec <__assert_fail@plt+0xbfdc>
   1c948:	ldr	r1, [fp, #-16]
   1c94c:	sub	r1, r1, #1
   1c950:	cmp	r0, r1
   1c954:	bcc	1c990 <__assert_fail@plt+0xb580>
   1c958:	b	1c9a4 <__assert_fail@plt+0xb594>
   1c95c:	ldr	r0, [pc, #2700]	; 1d3f0 <__assert_fail@plt+0xbfe0>
   1c960:	ldr	r1, [fp, #-12]
   1c964:	udiv	r0, r0, r1
   1c968:	ldr	r1, [fp, #-16]
   1c96c:	cmp	r0, r1
   1c970:	bcc	1c990 <__assert_fail@plt+0xb580>
   1c974:	b	1c9a4 <__assert_fail@plt+0xb594>
   1c978:	ldr	r0, [pc, #2668]	; 1d3ec <__assert_fail@plt+0xbfdc>
   1c97c:	ldr	r1, [fp, #-16]
   1c980:	udiv	r0, r0, r1
   1c984:	ldr	r1, [fp, #-12]
   1c988:	cmp	r0, r1
   1c98c:	bcs	1c9a4 <__assert_fail@plt+0xb594>
   1c990:	ldr	r0, [fp, #-12]
   1c994:	ldr	r1, [fp, #-16]
   1c998:	mul	r0, r0, r1
   1c99c:	str	r0, [fp, #-20]	; 0xffffffec
   1c9a0:	b	1d3b8 <__assert_fail@plt+0xbfa8>
   1c9a4:	ldr	r0, [fp, #-12]
   1c9a8:	ldr	r1, [fp, #-16]
   1c9ac:	mul	r0, r0, r1
   1c9b0:	str	r0, [fp, #-20]	; 0xffffffec
   1c9b4:	b	1d3d0 <__assert_fail@plt+0xbfc0>
   1c9b8:	ldr	r0, [fp, #-16]
   1c9bc:	cmp	r0, #0
   1c9c0:	bcs	1cacc <__assert_fail@plt+0xb6bc>
   1c9c4:	ldr	r0, [fp, #-12]
   1c9c8:	cmp	r0, #0
   1c9cc:	bcs	1ca54 <__assert_fail@plt+0xb644>
   1c9d0:	b	1c9f0 <__assert_fail@plt+0xb5e0>
   1c9d4:	ldr	r0, [fp, #-12]
   1c9d8:	ldr	r1, [fp, #-16]
   1c9dc:	mvn	r2, #0
   1c9e0:	udiv	r1, r2, r1
   1c9e4:	cmp	r0, r1
   1c9e8:	bcc	1cb68 <__assert_fail@plt+0xb758>
   1c9ec:	b	1cb7c <__assert_fail@plt+0xb76c>
   1c9f0:	b	1ca04 <__assert_fail@plt+0xb5f4>
   1c9f4:	ldr	r0, [fp, #-16]
   1c9f8:	cmp	r0, #1
   1c9fc:	bcc	1ca14 <__assert_fail@plt+0xb604>
   1ca00:	b	1ca20 <__assert_fail@plt+0xb610>
   1ca04:	ldr	r0, [fp, #-16]
   1ca08:	movw	r1, #0
   1ca0c:	cmp	r1, r0
   1ca10:	bcs	1ca20 <__assert_fail@plt+0xb610>
   1ca14:	movw	r0, #1
   1ca18:	str	r0, [fp, #-44]	; 0xffffffd4
   1ca1c:	b	1ca38 <__assert_fail@plt+0xb628>
   1ca20:	ldr	r0, [fp, #-16]
   1ca24:	movw	r1, #0
   1ca28:	sub	r0, r1, r0
   1ca2c:	mvn	r1, #0
   1ca30:	udiv	r0, r1, r0
   1ca34:	str	r0, [fp, #-44]	; 0xffffffd4
   1ca38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ca3c:	ldr	r1, [fp, #-12]
   1ca40:	mvn	r2, #0
   1ca44:	sub	r1, r2, r1
   1ca48:	cmp	r0, r1
   1ca4c:	bls	1cb68 <__assert_fail@plt+0xb758>
   1ca50:	b	1cb7c <__assert_fail@plt+0xb76c>
   1ca54:	b	1ca5c <__assert_fail@plt+0xb64c>
   1ca58:	b	1ca60 <__assert_fail@plt+0xb650>
   1ca5c:	b	1cab0 <__assert_fail@plt+0xb6a0>
   1ca60:	ldr	r0, [fp, #-16]
   1ca64:	cmn	r0, #1
   1ca68:	bne	1cab0 <__assert_fail@plt+0xb6a0>
   1ca6c:	b	1ca88 <__assert_fail@plt+0xb678>
   1ca70:	ldr	r0, [fp, #-12]
   1ca74:	add	r0, r0, #0
   1ca78:	movw	r1, #0
   1ca7c:	cmp	r1, r0
   1ca80:	bcc	1cb68 <__assert_fail@plt+0xb758>
   1ca84:	b	1cb7c <__assert_fail@plt+0xb76c>
   1ca88:	ldr	r0, [fp, #-12]
   1ca8c:	movw	r1, #0
   1ca90:	cmp	r1, r0
   1ca94:	bcs	1cb7c <__assert_fail@plt+0xb76c>
   1ca98:	ldr	r0, [fp, #-12]
   1ca9c:	sub	r0, r0, #1
   1caa0:	mvn	r1, #0
   1caa4:	cmp	r1, r0
   1caa8:	bcc	1cb68 <__assert_fail@plt+0xb758>
   1caac:	b	1cb7c <__assert_fail@plt+0xb76c>
   1cab0:	ldr	r0, [fp, #-16]
   1cab4:	movw	r1, #0
   1cab8:	udiv	r0, r1, r0
   1cabc:	ldr	r1, [fp, #-12]
   1cac0:	cmp	r0, r1
   1cac4:	bcc	1cb68 <__assert_fail@plt+0xb758>
   1cac8:	b	1cb7c <__assert_fail@plt+0xb76c>
   1cacc:	ldr	r0, [fp, #-16]
   1cad0:	cmp	r0, #0
   1cad4:	bne	1cadc <__assert_fail@plt+0xb6cc>
   1cad8:	b	1cb7c <__assert_fail@plt+0xb76c>
   1cadc:	ldr	r0, [fp, #-12]
   1cae0:	cmp	r0, #0
   1cae4:	bcs	1cb50 <__assert_fail@plt+0xb740>
   1cae8:	b	1caf0 <__assert_fail@plt+0xb6e0>
   1caec:	b	1caf4 <__assert_fail@plt+0xb6e4>
   1caf0:	b	1cb34 <__assert_fail@plt+0xb724>
   1caf4:	ldr	r0, [fp, #-12]
   1caf8:	cmn	r0, #1
   1cafc:	bne	1cb34 <__assert_fail@plt+0xb724>
   1cb00:	b	1cb1c <__assert_fail@plt+0xb70c>
   1cb04:	ldr	r0, [fp, #-16]
   1cb08:	add	r0, r0, #0
   1cb0c:	movw	r1, #0
   1cb10:	cmp	r1, r0
   1cb14:	bcc	1cb68 <__assert_fail@plt+0xb758>
   1cb18:	b	1cb7c <__assert_fail@plt+0xb76c>
   1cb1c:	ldr	r0, [fp, #-16]
   1cb20:	sub	r0, r0, #1
   1cb24:	mvn	r1, #0
   1cb28:	cmp	r1, r0
   1cb2c:	bcc	1cb68 <__assert_fail@plt+0xb758>
   1cb30:	b	1cb7c <__assert_fail@plt+0xb76c>
   1cb34:	ldr	r0, [fp, #-12]
   1cb38:	movw	r1, #0
   1cb3c:	udiv	r0, r1, r0
   1cb40:	ldr	r1, [fp, #-16]
   1cb44:	cmp	r0, r1
   1cb48:	bcc	1cb68 <__assert_fail@plt+0xb758>
   1cb4c:	b	1cb7c <__assert_fail@plt+0xb76c>
   1cb50:	ldr	r0, [fp, #-16]
   1cb54:	mvn	r1, #0
   1cb58:	udiv	r0, r1, r0
   1cb5c:	ldr	r1, [fp, #-12]
   1cb60:	cmp	r0, r1
   1cb64:	bcs	1cb7c <__assert_fail@plt+0xb76c>
   1cb68:	ldr	r0, [fp, #-12]
   1cb6c:	ldr	r1, [fp, #-16]
   1cb70:	mul	r0, r0, r1
   1cb74:	str	r0, [fp, #-20]	; 0xffffffec
   1cb78:	b	1d3b8 <__assert_fail@plt+0xbfa8>
   1cb7c:	ldr	r0, [fp, #-12]
   1cb80:	ldr	r1, [fp, #-16]
   1cb84:	mul	r0, r0, r1
   1cb88:	str	r0, [fp, #-20]	; 0xffffffec
   1cb8c:	b	1d3d0 <__assert_fail@plt+0xbfc0>
   1cb90:	b	1cb94 <__assert_fail@plt+0xb784>
   1cb94:	b	1cd58 <__assert_fail@plt+0xb948>
   1cb98:	ldr	r0, [fp, #-16]
   1cb9c:	cmp	r0, #0
   1cba0:	bcs	1cca0 <__assert_fail@plt+0xb890>
   1cba4:	ldr	r0, [fp, #-12]
   1cba8:	cmp	r0, #0
   1cbac:	bcs	1cc34 <__assert_fail@plt+0xb824>
   1cbb0:	b	1cbd0 <__assert_fail@plt+0xb7c0>
   1cbb4:	ldr	r0, [pc, #2096]	; 1d3ec <__assert_fail@plt+0xbfdc>
   1cbb8:	ldr	r1, [fp, #-12]
   1cbbc:	ldr	r2, [fp, #-16]
   1cbc0:	udiv	r0, r0, r2
   1cbc4:	cmp	r1, r0
   1cbc8:	bcc	1cd30 <__assert_fail@plt+0xb920>
   1cbcc:	b	1cd44 <__assert_fail@plt+0xb934>
   1cbd0:	b	1cbe4 <__assert_fail@plt+0xb7d4>
   1cbd4:	ldr	r0, [fp, #-16]
   1cbd8:	cmp	r0, #1
   1cbdc:	bcc	1cbf4 <__assert_fail@plt+0xb7e4>
   1cbe0:	b	1cc00 <__assert_fail@plt+0xb7f0>
   1cbe4:	ldr	r0, [fp, #-16]
   1cbe8:	movw	r1, #0
   1cbec:	cmp	r1, r0
   1cbf0:	bcs	1cc00 <__assert_fail@plt+0xb7f0>
   1cbf4:	movw	r0, #0
   1cbf8:	str	r0, [fp, #-48]	; 0xffffffd0
   1cbfc:	b	1cc18 <__assert_fail@plt+0xb808>
   1cc00:	ldr	r0, [pc, #2020]	; 1d3ec <__assert_fail@plt+0xbfdc>
   1cc04:	ldr	r1, [fp, #-16]
   1cc08:	movw	r2, #0
   1cc0c:	sub	r1, r2, r1
   1cc10:	udiv	r0, r0, r1
   1cc14:	str	r0, [fp, #-48]	; 0xffffffd0
   1cc18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cc1c:	ldr	r1, [fp, #-12]
   1cc20:	mvn	r2, #0
   1cc24:	sub	r1, r2, r1
   1cc28:	cmp	r0, r1
   1cc2c:	bls	1cd30 <__assert_fail@plt+0xb920>
   1cc30:	b	1cd44 <__assert_fail@plt+0xb934>
   1cc34:	ldr	r0, [fp, #-16]
   1cc38:	cmn	r0, #1
   1cc3c:	bne	1cc84 <__assert_fail@plt+0xb874>
   1cc40:	b	1cc5c <__assert_fail@plt+0xb84c>
   1cc44:	ldr	r0, [fp, #-12]
   1cc48:	add	r0, r0, #-2147483648	; 0x80000000
   1cc4c:	movw	r1, #0
   1cc50:	cmp	r1, r0
   1cc54:	bcc	1cd30 <__assert_fail@plt+0xb920>
   1cc58:	b	1cd44 <__assert_fail@plt+0xb934>
   1cc5c:	ldr	r0, [fp, #-12]
   1cc60:	movw	r1, #0
   1cc64:	cmp	r1, r0
   1cc68:	bcs	1cd44 <__assert_fail@plt+0xb934>
   1cc6c:	ldr	r0, [pc, #1912]	; 1d3ec <__assert_fail@plt+0xbfdc>
   1cc70:	ldr	r1, [fp, #-12]
   1cc74:	sub	r1, r1, #1
   1cc78:	cmp	r0, r1
   1cc7c:	bcc	1cd30 <__assert_fail@plt+0xb920>
   1cc80:	b	1cd44 <__assert_fail@plt+0xb934>
   1cc84:	ldr	r0, [pc, #1892]	; 1d3f0 <__assert_fail@plt+0xbfe0>
   1cc88:	ldr	r1, [fp, #-16]
   1cc8c:	udiv	r0, r0, r1
   1cc90:	ldr	r1, [fp, #-12]
   1cc94:	cmp	r0, r1
   1cc98:	bcc	1cd30 <__assert_fail@plt+0xb920>
   1cc9c:	b	1cd44 <__assert_fail@plt+0xb934>
   1cca0:	ldr	r0, [fp, #-16]
   1cca4:	cmp	r0, #0
   1cca8:	bne	1ccb0 <__assert_fail@plt+0xb8a0>
   1ccac:	b	1cd44 <__assert_fail@plt+0xb934>
   1ccb0:	ldr	r0, [fp, #-12]
   1ccb4:	cmp	r0, #0
   1ccb8:	bcs	1cd18 <__assert_fail@plt+0xb908>
   1ccbc:	ldr	r0, [fp, #-12]
   1ccc0:	cmn	r0, #1
   1ccc4:	bne	1ccfc <__assert_fail@plt+0xb8ec>
   1ccc8:	b	1cce4 <__assert_fail@plt+0xb8d4>
   1cccc:	ldr	r0, [fp, #-16]
   1ccd0:	add	r0, r0, #-2147483648	; 0x80000000
   1ccd4:	movw	r1, #0
   1ccd8:	cmp	r1, r0
   1ccdc:	bcc	1cd30 <__assert_fail@plt+0xb920>
   1cce0:	b	1cd44 <__assert_fail@plt+0xb934>
   1cce4:	ldr	r0, [pc, #1792]	; 1d3ec <__assert_fail@plt+0xbfdc>
   1cce8:	ldr	r1, [fp, #-16]
   1ccec:	sub	r1, r1, #1
   1ccf0:	cmp	r0, r1
   1ccf4:	bcc	1cd30 <__assert_fail@plt+0xb920>
   1ccf8:	b	1cd44 <__assert_fail@plt+0xb934>
   1ccfc:	ldr	r0, [pc, #1772]	; 1d3f0 <__assert_fail@plt+0xbfe0>
   1cd00:	ldr	r1, [fp, #-12]
   1cd04:	udiv	r0, r0, r1
   1cd08:	ldr	r1, [fp, #-16]
   1cd0c:	cmp	r0, r1
   1cd10:	bcc	1cd30 <__assert_fail@plt+0xb920>
   1cd14:	b	1cd44 <__assert_fail@plt+0xb934>
   1cd18:	ldr	r0, [pc, #1740]	; 1d3ec <__assert_fail@plt+0xbfdc>
   1cd1c:	ldr	r1, [fp, #-16]
   1cd20:	udiv	r0, r0, r1
   1cd24:	ldr	r1, [fp, #-12]
   1cd28:	cmp	r0, r1
   1cd2c:	bcs	1cd44 <__assert_fail@plt+0xb934>
   1cd30:	ldr	r0, [fp, #-12]
   1cd34:	ldr	r1, [fp, #-16]
   1cd38:	mul	r0, r0, r1
   1cd3c:	str	r0, [fp, #-20]	; 0xffffffec
   1cd40:	b	1d3b8 <__assert_fail@plt+0xbfa8>
   1cd44:	ldr	r0, [fp, #-12]
   1cd48:	ldr	r1, [fp, #-16]
   1cd4c:	mul	r0, r0, r1
   1cd50:	str	r0, [fp, #-20]	; 0xffffffec
   1cd54:	b	1d3d0 <__assert_fail@plt+0xbfc0>
   1cd58:	ldr	r0, [fp, #-16]
   1cd5c:	cmp	r0, #0
   1cd60:	bcs	1ce6c <__assert_fail@plt+0xba5c>
   1cd64:	ldr	r0, [fp, #-12]
   1cd68:	cmp	r0, #0
   1cd6c:	bcs	1cdf4 <__assert_fail@plt+0xb9e4>
   1cd70:	b	1cd90 <__assert_fail@plt+0xb980>
   1cd74:	ldr	r0, [fp, #-12]
   1cd78:	ldr	r1, [fp, #-16]
   1cd7c:	mvn	r2, #0
   1cd80:	udiv	r1, r2, r1
   1cd84:	cmp	r0, r1
   1cd88:	bcc	1cf08 <__assert_fail@plt+0xbaf8>
   1cd8c:	b	1cf1c <__assert_fail@plt+0xbb0c>
   1cd90:	b	1cda4 <__assert_fail@plt+0xb994>
   1cd94:	ldr	r0, [fp, #-16]
   1cd98:	cmp	r0, #1
   1cd9c:	bcc	1cdb4 <__assert_fail@plt+0xb9a4>
   1cda0:	b	1cdc0 <__assert_fail@plt+0xb9b0>
   1cda4:	ldr	r0, [fp, #-16]
   1cda8:	movw	r1, #0
   1cdac:	cmp	r1, r0
   1cdb0:	bcs	1cdc0 <__assert_fail@plt+0xb9b0>
   1cdb4:	movw	r0, #1
   1cdb8:	str	r0, [fp, #-52]	; 0xffffffcc
   1cdbc:	b	1cdd8 <__assert_fail@plt+0xb9c8>
   1cdc0:	ldr	r0, [fp, #-16]
   1cdc4:	movw	r1, #0
   1cdc8:	sub	r0, r1, r0
   1cdcc:	mvn	r1, #0
   1cdd0:	udiv	r0, r1, r0
   1cdd4:	str	r0, [fp, #-52]	; 0xffffffcc
   1cdd8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1cddc:	ldr	r1, [fp, #-12]
   1cde0:	mvn	r2, #0
   1cde4:	sub	r1, r2, r1
   1cde8:	cmp	r0, r1
   1cdec:	bls	1cf08 <__assert_fail@plt+0xbaf8>
   1cdf0:	b	1cf1c <__assert_fail@plt+0xbb0c>
   1cdf4:	b	1cdfc <__assert_fail@plt+0xb9ec>
   1cdf8:	b	1ce00 <__assert_fail@plt+0xb9f0>
   1cdfc:	b	1ce50 <__assert_fail@plt+0xba40>
   1ce00:	ldr	r0, [fp, #-16]
   1ce04:	cmn	r0, #1
   1ce08:	bne	1ce50 <__assert_fail@plt+0xba40>
   1ce0c:	b	1ce28 <__assert_fail@plt+0xba18>
   1ce10:	ldr	r0, [fp, #-12]
   1ce14:	add	r0, r0, #0
   1ce18:	movw	r1, #0
   1ce1c:	cmp	r1, r0
   1ce20:	bcc	1cf08 <__assert_fail@plt+0xbaf8>
   1ce24:	b	1cf1c <__assert_fail@plt+0xbb0c>
   1ce28:	ldr	r0, [fp, #-12]
   1ce2c:	movw	r1, #0
   1ce30:	cmp	r1, r0
   1ce34:	bcs	1cf1c <__assert_fail@plt+0xbb0c>
   1ce38:	ldr	r0, [fp, #-12]
   1ce3c:	sub	r0, r0, #1
   1ce40:	mvn	r1, #0
   1ce44:	cmp	r1, r0
   1ce48:	bcc	1cf08 <__assert_fail@plt+0xbaf8>
   1ce4c:	b	1cf1c <__assert_fail@plt+0xbb0c>
   1ce50:	ldr	r0, [fp, #-16]
   1ce54:	movw	r1, #0
   1ce58:	udiv	r0, r1, r0
   1ce5c:	ldr	r1, [fp, #-12]
   1ce60:	cmp	r0, r1
   1ce64:	bcc	1cf08 <__assert_fail@plt+0xbaf8>
   1ce68:	b	1cf1c <__assert_fail@plt+0xbb0c>
   1ce6c:	ldr	r0, [fp, #-16]
   1ce70:	cmp	r0, #0
   1ce74:	bne	1ce7c <__assert_fail@plt+0xba6c>
   1ce78:	b	1cf1c <__assert_fail@plt+0xbb0c>
   1ce7c:	ldr	r0, [fp, #-12]
   1ce80:	cmp	r0, #0
   1ce84:	bcs	1cef0 <__assert_fail@plt+0xbae0>
   1ce88:	b	1ce90 <__assert_fail@plt+0xba80>
   1ce8c:	b	1ce94 <__assert_fail@plt+0xba84>
   1ce90:	b	1ced4 <__assert_fail@plt+0xbac4>
   1ce94:	ldr	r0, [fp, #-12]
   1ce98:	cmn	r0, #1
   1ce9c:	bne	1ced4 <__assert_fail@plt+0xbac4>
   1cea0:	b	1cebc <__assert_fail@plt+0xbaac>
   1cea4:	ldr	r0, [fp, #-16]
   1cea8:	add	r0, r0, #0
   1ceac:	movw	r1, #0
   1ceb0:	cmp	r1, r0
   1ceb4:	bcc	1cf08 <__assert_fail@plt+0xbaf8>
   1ceb8:	b	1cf1c <__assert_fail@plt+0xbb0c>
   1cebc:	ldr	r0, [fp, #-16]
   1cec0:	sub	r0, r0, #1
   1cec4:	mvn	r1, #0
   1cec8:	cmp	r1, r0
   1cecc:	bcc	1cf08 <__assert_fail@plt+0xbaf8>
   1ced0:	b	1cf1c <__assert_fail@plt+0xbb0c>
   1ced4:	ldr	r0, [fp, #-12]
   1ced8:	movw	r1, #0
   1cedc:	udiv	r0, r1, r0
   1cee0:	ldr	r1, [fp, #-16]
   1cee4:	cmp	r0, r1
   1cee8:	bcc	1cf08 <__assert_fail@plt+0xbaf8>
   1ceec:	b	1cf1c <__assert_fail@plt+0xbb0c>
   1cef0:	ldr	r0, [fp, #-16]
   1cef4:	mvn	r1, #0
   1cef8:	udiv	r0, r1, r0
   1cefc:	ldr	r1, [fp, #-12]
   1cf00:	cmp	r0, r1
   1cf04:	bcs	1cf1c <__assert_fail@plt+0xbb0c>
   1cf08:	ldr	r0, [fp, #-12]
   1cf0c:	ldr	r1, [fp, #-16]
   1cf10:	mul	r0, r0, r1
   1cf14:	str	r0, [fp, #-20]	; 0xffffffec
   1cf18:	b	1d3b8 <__assert_fail@plt+0xbfa8>
   1cf1c:	ldr	r0, [fp, #-12]
   1cf20:	ldr	r1, [fp, #-16]
   1cf24:	mul	r0, r0, r1
   1cf28:	str	r0, [fp, #-20]	; 0xffffffec
   1cf2c:	b	1d3d0 <__assert_fail@plt+0xbfc0>
   1cf30:	b	1d184 <__assert_fail@plt+0xbd74>
   1cf34:	ldr	r0, [fp, #-16]
   1cf38:	cmp	r0, #0
   1cf3c:	bcs	1d09c <__assert_fail@plt+0xbc8c>
   1cf40:	ldr	r0, [fp, #-12]
   1cf44:	cmp	r0, #0
   1cf48:	bcs	1d018 <__assert_fail@plt+0xbc08>
   1cf4c:	b	1cf50 <__assert_fail@plt+0xbb40>
   1cf50:	ldr	r0, [fp, #-12]
   1cf54:	ldr	r2, [fp, #-16]
   1cf58:	mvn	r1, #0
   1cf5c:	mvn	r3, #-2147483648	; 0x80000000
   1cf60:	mov	ip, #0
   1cf64:	str	r0, [fp, #-56]	; 0xffffffc8
   1cf68:	mov	r0, r1
   1cf6c:	mov	r1, r3
   1cf70:	mov	r3, ip
   1cf74:	bl	1df04 <__assert_fail@plt+0xcaf4>
   1cf78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1cf7c:	subs	r0, r2, r0
   1cf80:	rscs	r1, r1, #0
   1cf84:	str	r0, [fp, #-60]	; 0xffffffc4
   1cf88:	str	r1, [fp, #-64]	; 0xffffffc0
   1cf8c:	blt	1d15c <__assert_fail@plt+0xbd4c>
   1cf90:	b	1d170 <__assert_fail@plt+0xbd60>
   1cf94:	b	1cfa8 <__assert_fail@plt+0xbb98>
   1cf98:	ldr	r0, [fp, #-16]
   1cf9c:	cmp	r0, #1
   1cfa0:	bcc	1cfb8 <__assert_fail@plt+0xbba8>
   1cfa4:	b	1cfcc <__assert_fail@plt+0xbbbc>
   1cfa8:	ldr	r0, [fp, #-16]
   1cfac:	movw	r1, #0
   1cfb0:	cmp	r1, r0
   1cfb4:	bcs	1cfcc <__assert_fail@plt+0xbbbc>
   1cfb8:	mov	r0, #0
   1cfbc:	mvn	r1, #0
   1cfc0:	str	r1, [fp, #-68]	; 0xffffffbc
   1cfc4:	str	r0, [fp, #-72]	; 0xffffffb8
   1cfc8:	b	1cff0 <__assert_fail@plt+0xbbe0>
   1cfcc:	ldr	r0, [fp, #-16]
   1cfd0:	rsb	r2, r0, #0
   1cfd4:	mvn	r0, #0
   1cfd8:	mvn	r1, #-2147483648	; 0x80000000
   1cfdc:	mov	r3, #0
   1cfe0:	bl	1df04 <__assert_fail@plt+0xcaf4>
   1cfe4:	str	r0, [fp, #-68]	; 0xffffffbc
   1cfe8:	str	r1, [fp, #-72]	; 0xffffffb8
   1cfec:	b	1cff0 <__assert_fail@plt+0xbbe0>
   1cff0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1cff4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1cff8:	ldr	r2, [fp, #-12]
   1cffc:	mvn	r2, r2
   1d000:	subs	r1, r2, r1
   1d004:	rscs	r0, r0, #0
   1d008:	str	r1, [fp, #-76]	; 0xffffffb4
   1d00c:	str	r0, [fp, #-80]	; 0xffffffb0
   1d010:	bge	1d15c <__assert_fail@plt+0xbd4c>
   1d014:	b	1d170 <__assert_fail@plt+0xbd60>
   1d018:	ldr	r0, [fp, #-16]
   1d01c:	cmn	r0, #1
   1d020:	bne	1d068 <__assert_fail@plt+0xbc58>
   1d024:	b	1d048 <__assert_fail@plt+0xbc38>
   1d028:	ldr	r0, [fp, #-12]
   1d02c:	rsbs	r0, r0, #0
   1d030:	mov	r1, #0
   1d034:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d038:	str	r0, [fp, #-84]	; 0xffffffac
   1d03c:	str	r1, [sp, #88]	; 0x58
   1d040:	blt	1d15c <__assert_fail@plt+0xbd4c>
   1d044:	b	1d170 <__assert_fail@plt+0xbd60>
   1d048:	ldr	r0, [fp, #-12]
   1d04c:	movw	r1, #0
   1d050:	cmp	r1, r0
   1d054:	bcs	1d170 <__assert_fail@plt+0xbd60>
   1d058:	mov	r0, #0
   1d05c:	cmp	r0, #0
   1d060:	bne	1d15c <__assert_fail@plt+0xbd4c>
   1d064:	b	1d170 <__assert_fail@plt+0xbd60>
   1d068:	ldr	r2, [fp, #-16]
   1d06c:	mov	r1, #-2147483648	; 0x80000000
   1d070:	mov	r0, #0
   1d074:	str	r0, [sp, #84]	; 0x54
   1d078:	ldr	r3, [sp, #84]	; 0x54
   1d07c:	bl	1de30 <__assert_fail@plt+0xca20>
   1d080:	ldr	r2, [fp, #-12]
   1d084:	subs	r0, r0, r2
   1d088:	sbcs	r1, r1, #0
   1d08c:	str	r0, [sp, #80]	; 0x50
   1d090:	str	r1, [sp, #76]	; 0x4c
   1d094:	blt	1d15c <__assert_fail@plt+0xbd4c>
   1d098:	b	1d170 <__assert_fail@plt+0xbd60>
   1d09c:	ldr	r0, [fp, #-16]
   1d0a0:	cmp	r0, #0
   1d0a4:	bne	1d0ac <__assert_fail@plt+0xbc9c>
   1d0a8:	b	1d170 <__assert_fail@plt+0xbd60>
   1d0ac:	ldr	r0, [fp, #-12]
   1d0b0:	cmp	r0, #0
   1d0b4:	bcs	1d12c <__assert_fail@plt+0xbd1c>
   1d0b8:	ldr	r0, [fp, #-12]
   1d0bc:	cmn	r0, #1
   1d0c0:	bne	1d0f8 <__assert_fail@plt+0xbce8>
   1d0c4:	b	1d0e8 <__assert_fail@plt+0xbcd8>
   1d0c8:	ldr	r0, [fp, #-16]
   1d0cc:	rsbs	r0, r0, #0
   1d0d0:	mov	r1, #0
   1d0d4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d0d8:	str	r0, [sp, #72]	; 0x48
   1d0dc:	str	r1, [sp, #68]	; 0x44
   1d0e0:	blt	1d15c <__assert_fail@plt+0xbd4c>
   1d0e4:	b	1d170 <__assert_fail@plt+0xbd60>
   1d0e8:	mov	r0, #0
   1d0ec:	cmp	r0, #0
   1d0f0:	bne	1d15c <__assert_fail@plt+0xbd4c>
   1d0f4:	b	1d170 <__assert_fail@plt+0xbd60>
   1d0f8:	ldr	r2, [fp, #-12]
   1d0fc:	mov	r1, #-2147483648	; 0x80000000
   1d100:	mov	r0, #0
   1d104:	str	r0, [sp, #64]	; 0x40
   1d108:	ldr	r3, [sp, #64]	; 0x40
   1d10c:	bl	1de30 <__assert_fail@plt+0xca20>
   1d110:	ldr	r2, [fp, #-16]
   1d114:	subs	r0, r0, r2
   1d118:	sbcs	r1, r1, #0
   1d11c:	str	r0, [sp, #60]	; 0x3c
   1d120:	str	r1, [sp, #56]	; 0x38
   1d124:	blt	1d15c <__assert_fail@plt+0xbd4c>
   1d128:	b	1d170 <__assert_fail@plt+0xbd60>
   1d12c:	ldr	r2, [fp, #-16]
   1d130:	mvn	r0, #0
   1d134:	mvn	r1, #-2147483648	; 0x80000000
   1d138:	mov	r3, #0
   1d13c:	bl	1df04 <__assert_fail@plt+0xcaf4>
   1d140:	ldr	r2, [fp, #-12]
   1d144:	subs	r0, r0, r2
   1d148:	sbcs	r1, r1, #0
   1d14c:	str	r0, [sp, #52]	; 0x34
   1d150:	str	r1, [sp, #48]	; 0x30
   1d154:	bge	1d170 <__assert_fail@plt+0xbd60>
   1d158:	b	1d15c <__assert_fail@plt+0xbd4c>
   1d15c:	ldr	r0, [fp, #-12]
   1d160:	ldr	r1, [fp, #-16]
   1d164:	mul	r0, r0, r1
   1d168:	str	r0, [fp, #-20]	; 0xffffffec
   1d16c:	b	1d3b8 <__assert_fail@plt+0xbfa8>
   1d170:	ldr	r0, [fp, #-12]
   1d174:	ldr	r1, [fp, #-16]
   1d178:	mul	r0, r0, r1
   1d17c:	str	r0, [fp, #-20]	; 0xffffffec
   1d180:	b	1d3d0 <__assert_fail@plt+0xbfc0>
   1d184:	ldr	r0, [fp, #-16]
   1d188:	cmp	r0, #0
   1d18c:	bcs	1d2d8 <__assert_fail@plt+0xbec8>
   1d190:	ldr	r0, [fp, #-12]
   1d194:	cmp	r0, #0
   1d198:	bcs	1d260 <__assert_fail@plt+0xbe50>
   1d19c:	b	1d1d8 <__assert_fail@plt+0xbdc8>
   1d1a0:	ldr	r0, [fp, #-12]
   1d1a4:	ldr	r2, [fp, #-16]
   1d1a8:	mvn	r1, #0
   1d1ac:	mov	r3, #0
   1d1b0:	str	r0, [sp, #44]	; 0x2c
   1d1b4:	mov	r0, r1
   1d1b8:	bl	1df04 <__assert_fail@plt+0xcaf4>
   1d1bc:	ldr	r2, [sp, #44]	; 0x2c
   1d1c0:	subs	r0, r2, r0
   1d1c4:	rscs	r1, r1, #0
   1d1c8:	str	r0, [sp, #40]	; 0x28
   1d1cc:	str	r1, [sp, #36]	; 0x24
   1d1d0:	bcc	1d390 <__assert_fail@plt+0xbf80>
   1d1d4:	b	1d3a4 <__assert_fail@plt+0xbf94>
   1d1d8:	b	1d1ec <__assert_fail@plt+0xbddc>
   1d1dc:	ldr	r0, [fp, #-16]
   1d1e0:	cmp	r0, #1
   1d1e4:	bcc	1d1fc <__assert_fail@plt+0xbdec>
   1d1e8:	b	1d210 <__assert_fail@plt+0xbe00>
   1d1ec:	ldr	r0, [fp, #-16]
   1d1f0:	movw	r1, #0
   1d1f4:	cmp	r1, r0
   1d1f8:	bcs	1d210 <__assert_fail@plt+0xbe00>
   1d1fc:	mov	r0, #1
   1d200:	mvn	r1, #0
   1d204:	str	r1, [sp, #32]
   1d208:	str	r0, [sp, #28]
   1d20c:	b	1d238 <__assert_fail@plt+0xbe28>
   1d210:	ldr	r0, [fp, #-16]
   1d214:	rsb	r2, r0, #0
   1d218:	mvn	r0, #0
   1d21c:	mov	r3, #0
   1d220:	str	r0, [sp, #24]
   1d224:	ldr	r1, [sp, #24]
   1d228:	bl	1df04 <__assert_fail@plt+0xcaf4>
   1d22c:	str	r0, [sp, #32]
   1d230:	str	r1, [sp, #28]
   1d234:	b	1d238 <__assert_fail@plt+0xbe28>
   1d238:	ldr	r0, [sp, #28]
   1d23c:	ldr	r1, [sp, #32]
   1d240:	ldr	r2, [fp, #-12]
   1d244:	mvn	r2, r2
   1d248:	subs	r1, r2, r1
   1d24c:	rscs	r0, r0, #0
   1d250:	str	r1, [sp, #20]
   1d254:	str	r0, [sp, #16]
   1d258:	bcs	1d390 <__assert_fail@plt+0xbf80>
   1d25c:	b	1d3a4 <__assert_fail@plt+0xbf94>
   1d260:	b	1d268 <__assert_fail@plt+0xbe58>
   1d264:	b	1d26c <__assert_fail@plt+0xbe5c>
   1d268:	b	1d2bc <__assert_fail@plt+0xbeac>
   1d26c:	ldr	r0, [fp, #-16]
   1d270:	cmn	r0, #1
   1d274:	bne	1d2bc <__assert_fail@plt+0xbeac>
   1d278:	b	1d294 <__assert_fail@plt+0xbe84>
   1d27c:	ldr	r0, [fp, #-12]
   1d280:	add	r0, r0, #0
   1d284:	movw	r1, #0
   1d288:	cmp	r1, r0
   1d28c:	bcc	1d390 <__assert_fail@plt+0xbf80>
   1d290:	b	1d3a4 <__assert_fail@plt+0xbf94>
   1d294:	ldr	r0, [fp, #-12]
   1d298:	movw	r1, #0
   1d29c:	cmp	r1, r0
   1d2a0:	bcs	1d3a4 <__assert_fail@plt+0xbf94>
   1d2a4:	ldr	r0, [fp, #-12]
   1d2a8:	sub	r0, r0, #1
   1d2ac:	mvn	r1, #0
   1d2b0:	cmp	r1, r0
   1d2b4:	bcc	1d390 <__assert_fail@plt+0xbf80>
   1d2b8:	b	1d3a4 <__assert_fail@plt+0xbf94>
   1d2bc:	ldr	r0, [fp, #-16]
   1d2c0:	movw	r1, #0
   1d2c4:	udiv	r0, r1, r0
   1d2c8:	ldr	r1, [fp, #-12]
   1d2cc:	cmp	r0, r1
   1d2d0:	bcc	1d390 <__assert_fail@plt+0xbf80>
   1d2d4:	b	1d3a4 <__assert_fail@plt+0xbf94>
   1d2d8:	ldr	r0, [fp, #-16]
   1d2dc:	cmp	r0, #0
   1d2e0:	bne	1d2e8 <__assert_fail@plt+0xbed8>
   1d2e4:	b	1d3a4 <__assert_fail@plt+0xbf94>
   1d2e8:	ldr	r0, [fp, #-12]
   1d2ec:	cmp	r0, #0
   1d2f0:	bcs	1d35c <__assert_fail@plt+0xbf4c>
   1d2f4:	b	1d2fc <__assert_fail@plt+0xbeec>
   1d2f8:	b	1d300 <__assert_fail@plt+0xbef0>
   1d2fc:	b	1d340 <__assert_fail@plt+0xbf30>
   1d300:	ldr	r0, [fp, #-12]
   1d304:	cmn	r0, #1
   1d308:	bne	1d340 <__assert_fail@plt+0xbf30>
   1d30c:	b	1d328 <__assert_fail@plt+0xbf18>
   1d310:	ldr	r0, [fp, #-16]
   1d314:	add	r0, r0, #0
   1d318:	movw	r1, #0
   1d31c:	cmp	r1, r0
   1d320:	bcc	1d390 <__assert_fail@plt+0xbf80>
   1d324:	b	1d3a4 <__assert_fail@plt+0xbf94>
   1d328:	ldr	r0, [fp, #-16]
   1d32c:	sub	r0, r0, #1
   1d330:	mvn	r1, #0
   1d334:	cmp	r1, r0
   1d338:	bcc	1d390 <__assert_fail@plt+0xbf80>
   1d33c:	b	1d3a4 <__assert_fail@plt+0xbf94>
   1d340:	ldr	r0, [fp, #-12]
   1d344:	movw	r1, #0
   1d348:	udiv	r0, r1, r0
   1d34c:	ldr	r1, [fp, #-16]
   1d350:	cmp	r0, r1
   1d354:	bcc	1d390 <__assert_fail@plt+0xbf80>
   1d358:	b	1d3a4 <__assert_fail@plt+0xbf94>
   1d35c:	ldr	r2, [fp, #-16]
   1d360:	mvn	r0, #0
   1d364:	mov	r3, #0
   1d368:	str	r0, [sp, #12]
   1d36c:	ldr	r1, [sp, #12]
   1d370:	bl	1df04 <__assert_fail@plt+0xcaf4>
   1d374:	ldr	r2, [fp, #-12]
   1d378:	subs	r0, r0, r2
   1d37c:	sbcs	r1, r1, #0
   1d380:	str	r0, [sp, #8]
   1d384:	str	r1, [sp, #4]
   1d388:	bcs	1d3a4 <__assert_fail@plt+0xbf94>
   1d38c:	b	1d390 <__assert_fail@plt+0xbf80>
   1d390:	ldr	r0, [fp, #-12]
   1d394:	ldr	r1, [fp, #-16]
   1d398:	mul	r0, r0, r1
   1d39c:	str	r0, [fp, #-20]	; 0xffffffec
   1d3a0:	b	1d3b8 <__assert_fail@plt+0xbfa8>
   1d3a4:	ldr	r0, [fp, #-12]
   1d3a8:	ldr	r1, [fp, #-16]
   1d3ac:	mul	r0, r0, r1
   1d3b0:	str	r0, [fp, #-20]	; 0xffffffec
   1d3b4:	b	1d3d0 <__assert_fail@plt+0xbfc0>
   1d3b8:	bl	11308 <__errno_location@plt>
   1d3bc:	movw	lr, #12
   1d3c0:	str	lr, [r0]
   1d3c4:	movw	r0, #0
   1d3c8:	str	r0, [fp, #-4]
   1d3cc:	b	1d3e0 <__assert_fail@plt+0xbfd0>
   1d3d0:	ldr	r0, [fp, #-8]
   1d3d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d3d8:	bl	1b49c <__assert_fail@plt+0xa08c>
   1d3dc:	str	r0, [fp, #-4]
   1d3e0:	ldr	r0, [fp, #-4]
   1d3e4:	mov	sp, fp
   1d3e8:	pop	{fp, pc}
   1d3ec:	svcvc	0x00ffffff
   1d3f0:	andhi	r0, r0, r0
   1d3f4:			; <UNDEFINED> instruction: 0xffff8000
   1d3f8:	sub	sp, sp, #12
   1d3fc:	str	r0, [sp, #4]
   1d400:	ldr	r0, [sp, #4]
   1d404:	sub	r1, r0, #48	; 0x30
   1d408:	cmp	r1, #10
   1d40c:	str	r0, [sp]
   1d410:	bcc	1d440 <__assert_fail@plt+0xc030>
   1d414:	b	1d418 <__assert_fail@plt+0xc008>
   1d418:	ldr	r0, [sp]
   1d41c:	sub	r1, r0, #65	; 0x41
   1d420:	cmp	r1, #26
   1d424:	bcc	1d440 <__assert_fail@plt+0xc030>
   1d428:	b	1d42c <__assert_fail@plt+0xc01c>
   1d42c:	ldr	r0, [sp]
   1d430:	sub	r1, r0, #97	; 0x61
   1d434:	cmp	r1, #25
   1d438:	bhi	1d450 <__assert_fail@plt+0xc040>
   1d43c:	b	1d440 <__assert_fail@plt+0xc030>
   1d440:	movw	r0, #1
   1d444:	and	r0, r0, #1
   1d448:	strb	r0, [sp, #11]
   1d44c:	b	1d45c <__assert_fail@plt+0xc04c>
   1d450:	movw	r0, #0
   1d454:	and	r0, r0, #1
   1d458:	strb	r0, [sp, #11]
   1d45c:	ldrb	r0, [sp, #11]
   1d460:	and	r0, r0, #1
   1d464:	add	sp, sp, #12
   1d468:	bx	lr
   1d46c:	sub	sp, sp, #12
   1d470:	str	r0, [sp, #4]
   1d474:	ldr	r0, [sp, #4]
   1d478:	sub	r1, r0, #65	; 0x41
   1d47c:	cmp	r1, #26
   1d480:	str	r0, [sp]
   1d484:	bcc	1d4a0 <__assert_fail@plt+0xc090>
   1d488:	b	1d48c <__assert_fail@plt+0xc07c>
   1d48c:	ldr	r0, [sp]
   1d490:	sub	r1, r0, #97	; 0x61
   1d494:	cmp	r1, #25
   1d498:	bhi	1d4b0 <__assert_fail@plt+0xc0a0>
   1d49c:	b	1d4a0 <__assert_fail@plt+0xc090>
   1d4a0:	movw	r0, #1
   1d4a4:	and	r0, r0, #1
   1d4a8:	strb	r0, [sp, #11]
   1d4ac:	b	1d4bc <__assert_fail@plt+0xc0ac>
   1d4b0:	movw	r0, #0
   1d4b4:	and	r0, r0, #1
   1d4b8:	strb	r0, [sp, #11]
   1d4bc:	ldrb	r0, [sp, #11]
   1d4c0:	and	r0, r0, #1
   1d4c4:	add	sp, sp, #12
   1d4c8:	bx	lr
   1d4cc:	sub	sp, sp, #8
   1d4d0:	str	r0, [sp]
   1d4d4:	ldr	r0, [sp]
   1d4d8:	cmp	r0, #127	; 0x7f
   1d4dc:	bhi	1d4f4 <__assert_fail@plt+0xc0e4>
   1d4e0:	b	1d4e4 <__assert_fail@plt+0xc0d4>
   1d4e4:	movw	r0, #1
   1d4e8:	and	r0, r0, #1
   1d4ec:	strb	r0, [sp, #7]
   1d4f0:	b	1d500 <__assert_fail@plt+0xc0f0>
   1d4f4:	movw	r0, #0
   1d4f8:	and	r0, r0, #1
   1d4fc:	strb	r0, [sp, #7]
   1d500:	ldrb	r0, [sp, #7]
   1d504:	and	r0, r0, #1
   1d508:	add	sp, sp, #8
   1d50c:	bx	lr
   1d510:	sub	sp, sp, #8
   1d514:	str	r0, [sp, #4]
   1d518:	ldr	r0, [sp, #4]
   1d51c:	cmp	r0, #32
   1d520:	movw	r0, #1
   1d524:	str	r0, [sp]
   1d528:	beq	1d540 <__assert_fail@plt+0xc130>
   1d52c:	ldr	r0, [sp, #4]
   1d530:	cmp	r0, #9
   1d534:	movw	r0, #0
   1d538:	moveq	r0, #1
   1d53c:	str	r0, [sp]
   1d540:	ldr	r0, [sp]
   1d544:	and	r0, r0, #1
   1d548:	add	sp, sp, #8
   1d54c:	bx	lr
   1d550:	sub	sp, sp, #12
   1d554:	str	r0, [sp, #4]
   1d558:	ldr	r0, [sp, #4]
   1d55c:	cmp	r0, #32
   1d560:	str	r0, [sp]
   1d564:	bcc	1d57c <__assert_fail@plt+0xc16c>
   1d568:	b	1d56c <__assert_fail@plt+0xc15c>
   1d56c:	ldr	r0, [sp]
   1d570:	cmp	r0, #127	; 0x7f
   1d574:	bne	1d58c <__assert_fail@plt+0xc17c>
   1d578:	b	1d57c <__assert_fail@plt+0xc16c>
   1d57c:	movw	r0, #1
   1d580:	and	r0, r0, #1
   1d584:	strb	r0, [sp, #11]
   1d588:	b	1d598 <__assert_fail@plt+0xc188>
   1d58c:	movw	r0, #0
   1d590:	and	r0, r0, #1
   1d594:	strb	r0, [sp, #11]
   1d598:	ldrb	r0, [sp, #11]
   1d59c:	and	r0, r0, #1
   1d5a0:	add	sp, sp, #12
   1d5a4:	bx	lr
   1d5a8:	sub	sp, sp, #8
   1d5ac:	str	r0, [sp]
   1d5b0:	ldr	r0, [sp]
   1d5b4:	sub	r0, r0, #48	; 0x30
   1d5b8:	cmp	r0, #9
   1d5bc:	bhi	1d5d4 <__assert_fail@plt+0xc1c4>
   1d5c0:	b	1d5c4 <__assert_fail@plt+0xc1b4>
   1d5c4:	movw	r0, #1
   1d5c8:	and	r0, r0, #1
   1d5cc:	strb	r0, [sp, #7]
   1d5d0:	b	1d5e0 <__assert_fail@plt+0xc1d0>
   1d5d4:	movw	r0, #0
   1d5d8:	and	r0, r0, #1
   1d5dc:	strb	r0, [sp, #7]
   1d5e0:	ldrb	r0, [sp, #7]
   1d5e4:	and	r0, r0, #1
   1d5e8:	add	sp, sp, #8
   1d5ec:	bx	lr
   1d5f0:	sub	sp, sp, #8
   1d5f4:	str	r0, [sp]
   1d5f8:	ldr	r0, [sp]
   1d5fc:	sub	r0, r0, #33	; 0x21
   1d600:	cmp	r0, #93	; 0x5d
   1d604:	bhi	1d61c <__assert_fail@plt+0xc20c>
   1d608:	b	1d60c <__assert_fail@plt+0xc1fc>
   1d60c:	movw	r0, #1
   1d610:	and	r0, r0, #1
   1d614:	strb	r0, [sp, #7]
   1d618:	b	1d628 <__assert_fail@plt+0xc218>
   1d61c:	movw	r0, #0
   1d620:	and	r0, r0, #1
   1d624:	strb	r0, [sp, #7]
   1d628:	ldrb	r0, [sp, #7]
   1d62c:	and	r0, r0, #1
   1d630:	add	sp, sp, #8
   1d634:	bx	lr
   1d638:	sub	sp, sp, #8
   1d63c:	str	r0, [sp]
   1d640:	ldr	r0, [sp]
   1d644:	sub	r0, r0, #97	; 0x61
   1d648:	cmp	r0, #25
   1d64c:	bhi	1d664 <__assert_fail@plt+0xc254>
   1d650:	b	1d654 <__assert_fail@plt+0xc244>
   1d654:	movw	r0, #1
   1d658:	and	r0, r0, #1
   1d65c:	strb	r0, [sp, #7]
   1d660:	b	1d670 <__assert_fail@plt+0xc260>
   1d664:	movw	r0, #0
   1d668:	and	r0, r0, #1
   1d66c:	strb	r0, [sp, #7]
   1d670:	ldrb	r0, [sp, #7]
   1d674:	and	r0, r0, #1
   1d678:	add	sp, sp, #8
   1d67c:	bx	lr
   1d680:	sub	sp, sp, #8
   1d684:	str	r0, [sp]
   1d688:	ldr	r0, [sp]
   1d68c:	sub	r0, r0, #32
   1d690:	cmp	r0, #94	; 0x5e
   1d694:	bhi	1d6ac <__assert_fail@plt+0xc29c>
   1d698:	b	1d69c <__assert_fail@plt+0xc28c>
   1d69c:	movw	r0, #1
   1d6a0:	and	r0, r0, #1
   1d6a4:	strb	r0, [sp, #7]
   1d6a8:	b	1d6b8 <__assert_fail@plt+0xc2a8>
   1d6ac:	movw	r0, #0
   1d6b0:	and	r0, r0, #1
   1d6b4:	strb	r0, [sp, #7]
   1d6b8:	ldrb	r0, [sp, #7]
   1d6bc:	and	r0, r0, #1
   1d6c0:	add	sp, sp, #8
   1d6c4:	bx	lr
   1d6c8:	sub	sp, sp, #12
   1d6cc:	str	r0, [sp, #4]
   1d6d0:	ldr	r0, [sp, #4]
   1d6d4:	sub	r0, r0, #33	; 0x21
   1d6d8:	cmp	r0, #93	; 0x5d
   1d6dc:	str	r0, [sp]
   1d6e0:	bhi	1d87c <__assert_fail@plt+0xc46c>
   1d6e4:	add	r0, pc, #8
   1d6e8:	ldr	r1, [sp]
   1d6ec:	ldr	r0, [r0, r1, lsl #2]
   1d6f0:	mov	pc, r0
   1d6f4:	andeq	sp, r1, ip, ror #16
   1d6f8:	andeq	sp, r1, ip, ror #16
   1d6fc:	andeq	sp, r1, ip, ror #16
   1d700:	andeq	sp, r1, ip, ror #16
   1d704:	andeq	sp, r1, ip, ror #16
   1d708:	andeq	sp, r1, ip, ror #16
   1d70c:	andeq	sp, r1, ip, ror #16
   1d710:	andeq	sp, r1, ip, ror #16
   1d714:	andeq	sp, r1, ip, ror #16
   1d718:	andeq	sp, r1, ip, ror #16
   1d71c:	andeq	sp, r1, ip, ror #16
   1d720:	andeq	sp, r1, ip, ror #16
   1d724:	andeq	sp, r1, ip, ror #16
   1d728:	andeq	sp, r1, ip, ror #16
   1d72c:	andeq	sp, r1, ip, ror #16
   1d730:	andeq	sp, r1, ip, ror r8
   1d734:	andeq	sp, r1, ip, ror r8
   1d738:	andeq	sp, r1, ip, ror r8
   1d73c:	andeq	sp, r1, ip, ror r8
   1d740:	andeq	sp, r1, ip, ror r8
   1d744:	andeq	sp, r1, ip, ror r8
   1d748:	andeq	sp, r1, ip, ror r8
   1d74c:	andeq	sp, r1, ip, ror r8
   1d750:	andeq	sp, r1, ip, ror r8
   1d754:	andeq	sp, r1, ip, ror r8
   1d758:	andeq	sp, r1, ip, ror #16
   1d75c:	andeq	sp, r1, ip, ror #16
   1d760:	andeq	sp, r1, ip, ror #16
   1d764:	andeq	sp, r1, ip, ror #16
   1d768:	andeq	sp, r1, ip, ror #16
   1d76c:	andeq	sp, r1, ip, ror #16
   1d770:	andeq	sp, r1, ip, ror #16
   1d774:	andeq	sp, r1, ip, ror r8
   1d778:	andeq	sp, r1, ip, ror r8
   1d77c:	andeq	sp, r1, ip, ror r8
   1d780:	andeq	sp, r1, ip, ror r8
   1d784:	andeq	sp, r1, ip, ror r8
   1d788:	andeq	sp, r1, ip, ror r8
   1d78c:	andeq	sp, r1, ip, ror r8
   1d790:	andeq	sp, r1, ip, ror r8
   1d794:	andeq	sp, r1, ip, ror r8
   1d798:	andeq	sp, r1, ip, ror r8
   1d79c:	andeq	sp, r1, ip, ror r8
   1d7a0:	andeq	sp, r1, ip, ror r8
   1d7a4:	andeq	sp, r1, ip, ror r8
   1d7a8:	andeq	sp, r1, ip, ror r8
   1d7ac:	andeq	sp, r1, ip, ror r8
   1d7b0:	andeq	sp, r1, ip, ror r8
   1d7b4:	andeq	sp, r1, ip, ror r8
   1d7b8:	andeq	sp, r1, ip, ror r8
   1d7bc:	andeq	sp, r1, ip, ror r8
   1d7c0:	andeq	sp, r1, ip, ror r8
   1d7c4:	andeq	sp, r1, ip, ror r8
   1d7c8:	andeq	sp, r1, ip, ror r8
   1d7cc:	andeq	sp, r1, ip, ror r8
   1d7d0:	andeq	sp, r1, ip, ror r8
   1d7d4:	andeq	sp, r1, ip, ror r8
   1d7d8:	andeq	sp, r1, ip, ror r8
   1d7dc:	andeq	sp, r1, ip, ror #16
   1d7e0:	andeq	sp, r1, ip, ror #16
   1d7e4:	andeq	sp, r1, ip, ror #16
   1d7e8:	andeq	sp, r1, ip, ror #16
   1d7ec:	andeq	sp, r1, ip, ror #16
   1d7f0:	andeq	sp, r1, ip, ror #16
   1d7f4:	andeq	sp, r1, ip, ror r8
   1d7f8:	andeq	sp, r1, ip, ror r8
   1d7fc:	andeq	sp, r1, ip, ror r8
   1d800:	andeq	sp, r1, ip, ror r8
   1d804:	andeq	sp, r1, ip, ror r8
   1d808:	andeq	sp, r1, ip, ror r8
   1d80c:	andeq	sp, r1, ip, ror r8
   1d810:	andeq	sp, r1, ip, ror r8
   1d814:	andeq	sp, r1, ip, ror r8
   1d818:	andeq	sp, r1, ip, ror r8
   1d81c:	andeq	sp, r1, ip, ror r8
   1d820:	andeq	sp, r1, ip, ror r8
   1d824:	andeq	sp, r1, ip, ror r8
   1d828:	andeq	sp, r1, ip, ror r8
   1d82c:	andeq	sp, r1, ip, ror r8
   1d830:	andeq	sp, r1, ip, ror r8
   1d834:	andeq	sp, r1, ip, ror r8
   1d838:	andeq	sp, r1, ip, ror r8
   1d83c:	andeq	sp, r1, ip, ror r8
   1d840:	andeq	sp, r1, ip, ror r8
   1d844:	andeq	sp, r1, ip, ror r8
   1d848:	andeq	sp, r1, ip, ror r8
   1d84c:	andeq	sp, r1, ip, ror r8
   1d850:	andeq	sp, r1, ip, ror r8
   1d854:	andeq	sp, r1, ip, ror r8
   1d858:	andeq	sp, r1, ip, ror r8
   1d85c:	andeq	sp, r1, ip, ror #16
   1d860:	andeq	sp, r1, ip, ror #16
   1d864:	andeq	sp, r1, ip, ror #16
   1d868:	andeq	sp, r1, ip, ror #16
   1d86c:	movw	r0, #1
   1d870:	and	r0, r0, #1
   1d874:	strb	r0, [sp, #11]
   1d878:	b	1d888 <__assert_fail@plt+0xc478>
   1d87c:	movw	r0, #0
   1d880:	and	r0, r0, #1
   1d884:	strb	r0, [sp, #11]
   1d888:	ldrb	r0, [sp, #11]
   1d88c:	and	r0, r0, #1
   1d890:	add	sp, sp, #12
   1d894:	bx	lr
   1d898:	sub	sp, sp, #12
   1d89c:	str	r0, [sp, #4]
   1d8a0:	ldr	r0, [sp, #4]
   1d8a4:	sub	r1, r0, #9
   1d8a8:	cmp	r1, #5
   1d8ac:	str	r0, [sp]
   1d8b0:	bcc	1d8c8 <__assert_fail@plt+0xc4b8>
   1d8b4:	b	1d8b8 <__assert_fail@plt+0xc4a8>
   1d8b8:	ldr	r0, [sp]
   1d8bc:	cmp	r0, #32
   1d8c0:	bne	1d8d8 <__assert_fail@plt+0xc4c8>
   1d8c4:	b	1d8c8 <__assert_fail@plt+0xc4b8>
   1d8c8:	movw	r0, #1
   1d8cc:	and	r0, r0, #1
   1d8d0:	strb	r0, [sp, #11]
   1d8d4:	b	1d8e4 <__assert_fail@plt+0xc4d4>
   1d8d8:	movw	r0, #0
   1d8dc:	and	r0, r0, #1
   1d8e0:	strb	r0, [sp, #11]
   1d8e4:	ldrb	r0, [sp, #11]
   1d8e8:	and	r0, r0, #1
   1d8ec:	add	sp, sp, #12
   1d8f0:	bx	lr
   1d8f4:	sub	sp, sp, #8
   1d8f8:	str	r0, [sp]
   1d8fc:	ldr	r0, [sp]
   1d900:	sub	r0, r0, #65	; 0x41
   1d904:	cmp	r0, #25
   1d908:	bhi	1d920 <__assert_fail@plt+0xc510>
   1d90c:	b	1d910 <__assert_fail@plt+0xc500>
   1d910:	movw	r0, #1
   1d914:	and	r0, r0, #1
   1d918:	strb	r0, [sp, #7]
   1d91c:	b	1d92c <__assert_fail@plt+0xc51c>
   1d920:	movw	r0, #0
   1d924:	and	r0, r0, #1
   1d928:	strb	r0, [sp, #7]
   1d92c:	ldrb	r0, [sp, #7]
   1d930:	and	r0, r0, #1
   1d934:	add	sp, sp, #8
   1d938:	bx	lr
   1d93c:	sub	sp, sp, #12
   1d940:	str	r0, [sp, #4]
   1d944:	ldr	r0, [sp, #4]
   1d948:	sub	r1, r0, #48	; 0x30
   1d94c:	cmp	r1, #10
   1d950:	str	r0, [sp]
   1d954:	bcc	1d984 <__assert_fail@plt+0xc574>
   1d958:	b	1d95c <__assert_fail@plt+0xc54c>
   1d95c:	ldr	r0, [sp]
   1d960:	sub	r1, r0, #65	; 0x41
   1d964:	cmp	r1, #6
   1d968:	bcc	1d984 <__assert_fail@plt+0xc574>
   1d96c:	b	1d970 <__assert_fail@plt+0xc560>
   1d970:	ldr	r0, [sp]
   1d974:	sub	r1, r0, #97	; 0x61
   1d978:	cmp	r1, #5
   1d97c:	bhi	1d994 <__assert_fail@plt+0xc584>
   1d980:	b	1d984 <__assert_fail@plt+0xc574>
   1d984:	movw	r0, #1
   1d988:	and	r0, r0, #1
   1d98c:	strb	r0, [sp, #11]
   1d990:	b	1d9a0 <__assert_fail@plt+0xc590>
   1d994:	movw	r0, #0
   1d998:	and	r0, r0, #1
   1d99c:	strb	r0, [sp, #11]
   1d9a0:	ldrb	r0, [sp, #11]
   1d9a4:	and	r0, r0, #1
   1d9a8:	add	sp, sp, #12
   1d9ac:	bx	lr
   1d9b0:	sub	sp, sp, #8
   1d9b4:	str	r0, [sp]
   1d9b8:	ldr	r0, [sp]
   1d9bc:	sub	r0, r0, #65	; 0x41
   1d9c0:	cmp	r0, #25
   1d9c4:	bhi	1d9e0 <__assert_fail@plt+0xc5d0>
   1d9c8:	b	1d9cc <__assert_fail@plt+0xc5bc>
   1d9cc:	ldr	r0, [sp]
   1d9d0:	sub	r0, r0, #65	; 0x41
   1d9d4:	add	r0, r0, #97	; 0x61
   1d9d8:	str	r0, [sp, #4]
   1d9dc:	b	1d9e8 <__assert_fail@plt+0xc5d8>
   1d9e0:	ldr	r0, [sp]
   1d9e4:	str	r0, [sp, #4]
   1d9e8:	ldr	r0, [sp, #4]
   1d9ec:	add	sp, sp, #8
   1d9f0:	bx	lr
   1d9f4:	sub	sp, sp, #8
   1d9f8:	str	r0, [sp]
   1d9fc:	ldr	r0, [sp]
   1da00:	sub	r0, r0, #97	; 0x61
   1da04:	cmp	r0, #25
   1da08:	bhi	1da24 <__assert_fail@plt+0xc614>
   1da0c:	b	1da10 <__assert_fail@plt+0xc600>
   1da10:	ldr	r0, [sp]
   1da14:	sub	r0, r0, #97	; 0x61
   1da18:	add	r0, r0, #65	; 0x41
   1da1c:	str	r0, [sp, #4]
   1da20:	b	1da2c <__assert_fail@plt+0xc61c>
   1da24:	ldr	r0, [sp]
   1da28:	str	r0, [sp, #4]
   1da2c:	ldr	r0, [sp, #4]
   1da30:	add	sp, sp, #8
   1da34:	bx	lr
   1da38:	push	{fp, lr}
   1da3c:	mov	fp, sp
   1da40:	sub	sp, sp, #40	; 0x28
   1da44:	str	r0, [fp, #-4]
   1da48:	str	r1, [fp, #-8]
   1da4c:	str	r2, [fp, #-12]
   1da50:	str	r3, [fp, #-16]
   1da54:	movw	r0, #0
   1da58:	str	r0, [sp, #20]
   1da5c:	ldr	r0, [fp, #-16]
   1da60:	cmn	r0, #1
   1da64:	beq	1da94 <__assert_fail@plt+0xc684>
   1da68:	ldr	r0, [fp, #-4]
   1da6c:	cmp	r0, #0
   1da70:	beq	1da88 <__assert_fail@plt+0xc678>
   1da74:	ldr	r0, [fp, #-16]
   1da78:	ldr	r1, [fp, #-8]
   1da7c:	ldr	r2, [sp, #20]
   1da80:	add	r1, r1, r2, lsl #2
   1da84:	str	r0, [r1]
   1da88:	ldr	r0, [sp, #20]
   1da8c:	add	r0, r0, #1
   1da90:	str	r0, [sp, #20]
   1da94:	bl	11344 <setgrent@plt>
   1da98:	bl	11308 <__errno_location@plt>
   1da9c:	movw	lr, #0
   1daa0:	str	lr, [r0]
   1daa4:	bl	11350 <getgrent@plt>
   1daa8:	str	r0, [sp, #12]
   1daac:	ldr	r0, [sp, #12]
   1dab0:	movw	lr, #0
   1dab4:	cmp	r0, lr
   1dab8:	bne	1dac0 <__assert_fail@plt+0xc6b0>
   1dabc:	b	1dbe8 <__assert_fail@plt+0xc7d8>
   1dac0:	ldr	r0, [sp, #12]
   1dac4:	ldr	r0, [r0, #12]
   1dac8:	str	r0, [sp, #16]
   1dacc:	ldr	r0, [sp, #16]
   1dad0:	ldr	r0, [r0]
   1dad4:	movw	r1, #0
   1dad8:	cmp	r0, r1
   1dadc:	beq	1dbe4 <__assert_fail@plt+0xc7d4>
   1dae0:	ldr	r0, [fp, #-12]
   1dae4:	ldr	r1, [sp, #16]
   1dae8:	ldr	r1, [r1]
   1daec:	bl	11164 <strcmp@plt>
   1daf0:	cmp	r0, #0
   1daf4:	beq	1dafc <__assert_fail@plt+0xc6ec>
   1daf8:	b	1dbd4 <__assert_fail@plt+0xc7c4>
   1dafc:	movw	r0, #0
   1db00:	str	r0, [sp, #8]
   1db04:	ldr	r0, [sp, #8]
   1db08:	ldr	r1, [sp, #20]
   1db0c:	cmp	r0, r1
   1db10:	bge	1db5c <__assert_fail@plt+0xc74c>
   1db14:	ldr	r0, [fp, #-8]
   1db18:	movw	r1, #0
   1db1c:	cmp	r0, r1
   1db20:	beq	1db48 <__assert_fail@plt+0xc738>
   1db24:	ldr	r0, [fp, #-8]
   1db28:	ldr	r1, [sp, #8]
   1db2c:	add	r0, r0, r1, lsl #2
   1db30:	ldr	r0, [r0]
   1db34:	ldr	r1, [sp, #12]
   1db38:	ldr	r1, [r1, #8]
   1db3c:	cmp	r0, r1
   1db40:	bne	1db48 <__assert_fail@plt+0xc738>
   1db44:	b	1db5c <__assert_fail@plt+0xc74c>
   1db48:	b	1db4c <__assert_fail@plt+0xc73c>
   1db4c:	ldr	r0, [sp, #8]
   1db50:	add	r0, r0, #1
   1db54:	str	r0, [sp, #8]
   1db58:	b	1db04 <__assert_fail@plt+0xc6f4>
   1db5c:	ldr	r0, [sp, #8]
   1db60:	ldr	r1, [sp, #20]
   1db64:	cmp	r0, r1
   1db68:	bne	1dbd0 <__assert_fail@plt+0xc7c0>
   1db6c:	ldr	r0, [fp, #-4]
   1db70:	cmp	r0, #0
   1db74:	beq	1dba4 <__assert_fail@plt+0xc794>
   1db78:	ldr	r0, [sp, #20]
   1db7c:	ldr	r1, [fp, #-4]
   1db80:	cmp	r0, r1
   1db84:	blt	1db8c <__assert_fail@plt+0xc77c>
   1db88:	b	1dc04 <__assert_fail@plt+0xc7f4>
   1db8c:	ldr	r0, [sp, #12]
   1db90:	ldr	r0, [r0, #8]
   1db94:	ldr	r1, [fp, #-8]
   1db98:	ldr	r2, [sp, #20]
   1db9c:	add	r1, r1, r2, lsl #2
   1dba0:	str	r0, [r1]
   1dba4:	ldr	r0, [pc, #136]	; 1dc34 <__assert_fail@plt+0xc824>
   1dba8:	ldr	r1, [sp, #20]
   1dbac:	cmp	r1, r0
   1dbb0:	bne	1dbc4 <__assert_fail@plt+0xc7b4>
   1dbb4:	bl	11308 <__errno_location@plt>
   1dbb8:	movw	lr, #75	; 0x4b
   1dbbc:	str	lr, [r0]
   1dbc0:	b	1dc04 <__assert_fail@plt+0xc7f4>
   1dbc4:	ldr	r0, [sp, #20]
   1dbc8:	add	r0, r0, #1
   1dbcc:	str	r0, [sp, #20]
   1dbd0:	b	1dbd4 <__assert_fail@plt+0xc7c4>
   1dbd4:	ldr	r0, [sp, #16]
   1dbd8:	add	r0, r0, #4
   1dbdc:	str	r0, [sp, #16]
   1dbe0:	b	1dacc <__assert_fail@plt+0xc6bc>
   1dbe4:	b	1da98 <__assert_fail@plt+0xc688>
   1dbe8:	bl	11308 <__errno_location@plt>
   1dbec:	ldr	r0, [r0]
   1dbf0:	cmp	r0, #0
   1dbf4:	beq	1dc00 <__assert_fail@plt+0xc7f0>
   1dbf8:	mvn	r0, #0
   1dbfc:	str	r0, [sp, #20]
   1dc00:	b	1dc04 <__assert_fail@plt+0xc7f4>
   1dc04:	bl	11308 <__errno_location@plt>
   1dc08:	ldr	r0, [r0]
   1dc0c:	str	r0, [sp, #4]
   1dc10:	bl	11128 <endgrent@plt>
   1dc14:	ldr	r0, [sp, #4]
   1dc18:	str	r0, [sp]
   1dc1c:	bl	11308 <__errno_location@plt>
   1dc20:	ldr	lr, [sp]
   1dc24:	str	lr, [r0]
   1dc28:	ldr	r0, [sp, #20]
   1dc2c:	mov	sp, fp
   1dc30:	pop	{fp, pc}
   1dc34:	svcvc	0x00ffffff
   1dc38:	push	{r4, r5, fp, lr}
   1dc3c:	add	fp, sp, #8
   1dc40:	sub	sp, sp, #272	; 0x110
   1dc44:	add	r1, sp, #7
   1dc48:	str	r0, [fp, #-16]
   1dc4c:	ldr	r0, [fp, #-16]
   1dc50:	movw	r2, #257	; 0x101
   1dc54:	bl	1dcd4 <__assert_fail@plt+0xc8c4>
   1dc58:	cmp	r0, #0
   1dc5c:	beq	1dc70 <__assert_fail@plt+0xc860>
   1dc60:	movw	r0, #0
   1dc64:	and	r0, r0, #1
   1dc68:	strb	r0, [fp, #-9]
   1dc6c:	b	1dcc4 <__assert_fail@plt+0xc8b4>
   1dc70:	add	r0, sp, #7
   1dc74:	movw	r1, #60990	; 0xee3e
   1dc78:	movt	r1, #1
   1dc7c:	bl	11164 <strcmp@plt>
   1dc80:	cmp	r0, #0
   1dc84:	movw	r0, #1
   1dc88:	str	r0, [sp]
   1dc8c:	beq	1dcb0 <__assert_fail@plt+0xc8a0>
   1dc90:	add	r0, sp, #7
   1dc94:	movw	r1, #60992	; 0xee40
   1dc98:	movt	r1, #1
   1dc9c:	bl	11164 <strcmp@plt>
   1dca0:	cmp	r0, #0
   1dca4:	movw	r0, #0
   1dca8:	moveq	r0, #1
   1dcac:	str	r0, [sp]
   1dcb0:	ldr	r0, [sp]
   1dcb4:	mvn	r1, #0
   1dcb8:	eor	r0, r0, r1
   1dcbc:	and	r0, r0, #1
   1dcc0:	strb	r0, [fp, #-9]
   1dcc4:	ldrb	r0, [fp, #-9]
   1dcc8:	and	r0, r0, #1
   1dccc:	sub	sp, fp, #8
   1dcd0:	pop	{r4, r5, fp, pc}
   1dcd4:	push	{fp, lr}
   1dcd8:	mov	fp, sp
   1dcdc:	sub	sp, sp, #16
   1dce0:	str	r0, [fp, #-4]
   1dce4:	str	r1, [sp, #8]
   1dce8:	str	r2, [sp, #4]
   1dcec:	ldr	r0, [fp, #-4]
   1dcf0:	ldr	r1, [sp, #8]
   1dcf4:	ldr	r2, [sp, #4]
   1dcf8:	bl	1dd04 <__assert_fail@plt+0xc8f4>
   1dcfc:	mov	sp, fp
   1dd00:	pop	{fp, pc}
   1dd04:	push	{fp, lr}
   1dd08:	mov	fp, sp
   1dd0c:	sub	sp, sp, #24
   1dd10:	str	r0, [fp, #-8]
   1dd14:	str	r1, [sp, #12]
   1dd18:	str	r2, [sp, #8]
   1dd1c:	ldr	r0, [fp, #-8]
   1dd20:	bl	1de04 <__assert_fail@plt+0xc9f4>
   1dd24:	str	r0, [sp, #4]
   1dd28:	ldr	r0, [sp, #4]
   1dd2c:	movw	r1, #0
   1dd30:	cmp	r0, r1
   1dd34:	bne	1dd5c <__assert_fail@plt+0xc94c>
   1dd38:	ldr	r0, [sp, #8]
   1dd3c:	cmp	r0, #0
   1dd40:	bls	1dd50 <__assert_fail@plt+0xc940>
   1dd44:	ldr	r0, [sp, #12]
   1dd48:	movw	r1, #0
   1dd4c:	strb	r1, [r0]
   1dd50:	movw	r0, #22
   1dd54:	str	r0, [fp, #-4]
   1dd58:	b	1ddd8 <__assert_fail@plt+0xc9c8>
   1dd5c:	ldr	r0, [sp, #4]
   1dd60:	bl	112e4 <strlen@plt>
   1dd64:	str	r0, [sp]
   1dd68:	ldr	r0, [sp]
   1dd6c:	ldr	lr, [sp, #8]
   1dd70:	cmp	r0, lr
   1dd74:	bcs	1dd98 <__assert_fail@plt+0xc988>
   1dd78:	ldr	r0, [sp, #12]
   1dd7c:	ldr	r1, [sp, #4]
   1dd80:	ldr	r2, [sp]
   1dd84:	add	r2, r2, #1
   1dd88:	bl	111b8 <memcpy@plt>
   1dd8c:	movw	r0, #0
   1dd90:	str	r0, [fp, #-4]
   1dd94:	b	1ddd8 <__assert_fail@plt+0xc9c8>
   1dd98:	ldr	r0, [sp, #8]
   1dd9c:	cmp	r0, #0
   1dda0:	bls	1ddd0 <__assert_fail@plt+0xc9c0>
   1dda4:	ldr	r0, [sp, #12]
   1dda8:	ldr	r1, [sp, #4]
   1ddac:	ldr	r2, [sp, #8]
   1ddb0:	sub	r2, r2, #1
   1ddb4:	bl	111b8 <memcpy@plt>
   1ddb8:	ldr	r0, [sp, #12]
   1ddbc:	ldr	r1, [sp, #8]
   1ddc0:	sub	r1, r1, #1
   1ddc4:	add	r0, r0, r1
   1ddc8:	movw	r1, #0
   1ddcc:	strb	r1, [r0]
   1ddd0:	movw	r0, #34	; 0x22
   1ddd4:	str	r0, [fp, #-4]
   1ddd8:	ldr	r0, [fp, #-4]
   1dddc:	mov	sp, fp
   1dde0:	pop	{fp, pc}
   1dde4:	push	{fp, lr}
   1dde8:	mov	fp, sp
   1ddec:	sub	sp, sp, #8
   1ddf0:	str	r0, [sp, #4]
   1ddf4:	ldr	r0, [sp, #4]
   1ddf8:	bl	1de04 <__assert_fail@plt+0xc9f4>
   1ddfc:	mov	sp, fp
   1de00:	pop	{fp, pc}
   1de04:	push	{fp, lr}
   1de08:	mov	fp, sp
   1de0c:	sub	sp, sp, #8
   1de10:	str	r0, [sp, #4]
   1de14:	ldr	r0, [sp, #4]
   1de18:	movw	r1, #0
   1de1c:	bl	11380 <setlocale@plt>
   1de20:	str	r0, [sp]
   1de24:	ldr	r0, [sp]
   1de28:	mov	sp, fp
   1de2c:	pop	{fp, pc}
   1de30:	cmp	r3, #0
   1de34:	cmpeq	r2, #0
   1de38:	bne	1de5c <__assert_fail@plt+0xca4c>
   1de3c:	cmp	r1, #0
   1de40:	movlt	r1, #-2147483648	; 0x80000000
   1de44:	movlt	r0, #0
   1de48:	blt	1de58 <__assert_fail@plt+0xca48>
   1de4c:	cmpeq	r0, #0
   1de50:	mvnne	r1, #-2147483648	; 0x80000000
   1de54:	mvnne	r0, #0
   1de58:	b	1df40 <__assert_fail@plt+0xcb30>
   1de5c:	sub	sp, sp, #8
   1de60:	push	{sp, lr}
   1de64:	cmp	r1, #0
   1de68:	blt	1de88 <__assert_fail@plt+0xca78>
   1de6c:	cmp	r3, #0
   1de70:	blt	1debc <__assert_fail@plt+0xcaac>
   1de74:	bl	1df50 <__assert_fail@plt+0xcb40>
   1de78:	ldr	lr, [sp, #4]
   1de7c:	add	sp, sp, #8
   1de80:	pop	{r2, r3}
   1de84:	bx	lr
   1de88:	rsbs	r0, r0, #0
   1de8c:	sbc	r1, r1, r1, lsl #1
   1de90:	cmp	r3, #0
   1de94:	blt	1dee0 <__assert_fail@plt+0xcad0>
   1de98:	bl	1df50 <__assert_fail@plt+0xcb40>
   1de9c:	ldr	lr, [sp, #4]
   1dea0:	add	sp, sp, #8
   1dea4:	pop	{r2, r3}
   1dea8:	rsbs	r0, r0, #0
   1deac:	sbc	r1, r1, r1, lsl #1
   1deb0:	rsbs	r2, r2, #0
   1deb4:	sbc	r3, r3, r3, lsl #1
   1deb8:	bx	lr
   1debc:	rsbs	r2, r2, #0
   1dec0:	sbc	r3, r3, r3, lsl #1
   1dec4:	bl	1df50 <__assert_fail@plt+0xcb40>
   1dec8:	ldr	lr, [sp, #4]
   1decc:	add	sp, sp, #8
   1ded0:	pop	{r2, r3}
   1ded4:	rsbs	r0, r0, #0
   1ded8:	sbc	r1, r1, r1, lsl #1
   1dedc:	bx	lr
   1dee0:	rsbs	r2, r2, #0
   1dee4:	sbc	r3, r3, r3, lsl #1
   1dee8:	bl	1df50 <__assert_fail@plt+0xcb40>
   1deec:	ldr	lr, [sp, #4]
   1def0:	add	sp, sp, #8
   1def4:	pop	{r2, r3}
   1def8:	rsbs	r2, r2, #0
   1defc:	sbc	r3, r3, r3, lsl #1
   1df00:	bx	lr
   1df04:	cmp	r3, #0
   1df08:	cmpeq	r2, #0
   1df0c:	bne	1df24 <__assert_fail@plt+0xcb14>
   1df10:	cmp	r1, #0
   1df14:	cmpeq	r0, #0
   1df18:	mvnne	r1, #0
   1df1c:	mvnne	r0, #0
   1df20:	b	1df40 <__assert_fail@plt+0xcb30>
   1df24:	sub	sp, sp, #8
   1df28:	push	{sp, lr}
   1df2c:	bl	1df50 <__assert_fail@plt+0xcb40>
   1df30:	ldr	lr, [sp, #4]
   1df34:	add	sp, sp, #8
   1df38:	pop	{r2, r3}
   1df3c:	bx	lr
   1df40:	push	{r1, lr}
   1df44:	mov	r0, #8
   1df48:	bl	11140 <raise@plt>
   1df4c:	pop	{r1, pc}
   1df50:	cmp	r1, r3
   1df54:	cmpeq	r0, r2
   1df58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df5c:	mov	r4, r0
   1df60:	movcc	r0, #0
   1df64:	mov	r5, r1
   1df68:	ldr	lr, [sp, #36]	; 0x24
   1df6c:	movcc	r1, r0
   1df70:	bcc	1e06c <__assert_fail@plt+0xcc5c>
   1df74:	cmp	r3, #0
   1df78:	clzeq	ip, r2
   1df7c:	clzne	ip, r3
   1df80:	addeq	ip, ip, #32
   1df84:	cmp	r5, #0
   1df88:	clzeq	r1, r4
   1df8c:	addeq	r1, r1, #32
   1df90:	clzne	r1, r5
   1df94:	sub	ip, ip, r1
   1df98:	sub	sl, ip, #32
   1df9c:	lsl	r9, r3, ip
   1dfa0:	rsb	fp, ip, #32
   1dfa4:	orr	r9, r9, r2, lsl sl
   1dfa8:	orr	r9, r9, r2, lsr fp
   1dfac:	lsl	r8, r2, ip
   1dfb0:	cmp	r5, r9
   1dfb4:	cmpeq	r4, r8
   1dfb8:	movcc	r0, #0
   1dfbc:	movcc	r1, r0
   1dfc0:	bcc	1dfdc <__assert_fail@plt+0xcbcc>
   1dfc4:	mov	r0, #1
   1dfc8:	subs	r4, r4, r8
   1dfcc:	lsl	r1, r0, sl
   1dfd0:	orr	r1, r1, r0, lsr fp
   1dfd4:	lsl	r0, r0, ip
   1dfd8:	sbc	r5, r5, r9
   1dfdc:	cmp	ip, #0
   1dfe0:	beq	1e06c <__assert_fail@plt+0xcc5c>
   1dfe4:	lsr	r6, r8, #1
   1dfe8:	orr	r6, r6, r9, lsl #31
   1dfec:	lsr	r7, r9, #1
   1dff0:	mov	r2, ip
   1dff4:	b	1e018 <__assert_fail@plt+0xcc08>
   1dff8:	subs	r3, r4, r6
   1dffc:	sbc	r8, r5, r7
   1e000:	adds	r3, r3, r3
   1e004:	adc	r8, r8, r8
   1e008:	adds	r4, r3, #1
   1e00c:	adc	r5, r8, #0
   1e010:	subs	r2, r2, #1
   1e014:	beq	1e034 <__assert_fail@plt+0xcc24>
   1e018:	cmp	r5, r7
   1e01c:	cmpeq	r4, r6
   1e020:	bcs	1dff8 <__assert_fail@plt+0xcbe8>
   1e024:	adds	r4, r4, r4
   1e028:	adc	r5, r5, r5
   1e02c:	subs	r2, r2, #1
   1e030:	bne	1e018 <__assert_fail@plt+0xcc08>
   1e034:	lsr	r3, r4, ip
   1e038:	orr	r3, r3, r5, lsl fp
   1e03c:	lsr	r2, r5, ip
   1e040:	orr	r3, r3, r5, lsr sl
   1e044:	adds	r0, r0, r4
   1e048:	mov	r4, r3
   1e04c:	lsl	r3, r2, ip
   1e050:	orr	r3, r3, r4, lsl sl
   1e054:	lsl	ip, r4, ip
   1e058:	orr	r3, r3, r4, lsr fp
   1e05c:	adc	r1, r1, r5
   1e060:	subs	r0, r0, ip
   1e064:	mov	r5, r2
   1e068:	sbc	r1, r1, r3
   1e06c:	cmp	lr, #0
   1e070:	strdne	r4, [lr]
   1e074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e078:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e07c:	mov	r7, r0
   1e080:	ldr	r6, [pc, #72]	; 1e0d0 <__assert_fail@plt+0xccc0>
   1e084:	ldr	r5, [pc, #72]	; 1e0d4 <__assert_fail@plt+0xccc4>
   1e088:	add	r6, pc, r6
   1e08c:	add	r5, pc, r5
   1e090:	sub	r6, r6, r5
   1e094:	mov	r8, r1
   1e098:	mov	r9, r2
   1e09c:	bl	110fc <calloc@plt-0x20>
   1e0a0:	asrs	r6, r6, #2
   1e0a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e0a8:	mov	r4, #0
   1e0ac:	add	r4, r4, #1
   1e0b0:	ldr	r3, [r5], #4
   1e0b4:	mov	r2, r9
   1e0b8:	mov	r1, r8
   1e0bc:	mov	r0, r7
   1e0c0:	blx	r3
   1e0c4:	cmp	r6, r4
   1e0c8:	bne	1e0ac <__assert_fail@plt+0xcc9c>
   1e0cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e0d0:	andeq	r0, r1, r4, ror lr
   1e0d4:	andeq	r0, r1, ip, ror #28
   1e0d8:	bx	lr
   1e0dc:	ldr	r3, [pc, #12]	; 1e0f0 <__assert_fail@plt+0xcce0>
   1e0e0:	mov	r1, #0
   1e0e4:	add	r3, pc, r3
   1e0e8:	ldr	r2, [r3]
   1e0ec:	b	11314 <__cxa_atexit@plt>
   1e0f0:	andeq	r1, r1, r8, lsr #32

Disassembly of section .fini:

0001e0f4 <.fini>:
   1e0f4:	push	{r3, lr}
   1e0f8:	pop	{r3, pc}
